Type: AnimalCompany.HandController

Method: UnityEngine.XR.Interaction.Toolkit.XRController get_xrController()

Disassembly:
	0x01DBFCFC LDR X0, [X0 + 0x7C8]
	0x01DBFD00 BL 0x1C16CF4

ISIL:
	001 Move X0, [X0+72]
	002 Return X0

Method: System.Boolean get_hasBeenTracked()

Disassembly:
	0x01DBFD04 MOVZ W8, 0x1
	0x01DBFD08 STRB W8, [X20 + 0xB76]

ISIL:
	001 Move W0, [X0+80]
	002 Return X0

Method: System.Void Awake()

Disassembly:
	0x01DBFD0C LDR X0, [X19]
	0x01DBFD10 LDR W8, [X0 + 0xE0]
	0x01DBFD14 CBNZ W8, 0x1DBFD20
	0x01DBFD18 BL 0x1C16DFC
	0x01DBFD1C LDR X0, [X19]
	0x01DBFD20 LDR X8, [X0 + 0xB8]
	0x01DBFD24 LDP X20, X19, [X31 + 0x10]
	0x01DBFD28 LDR X0, [X8]
	0x01DBFD2C LDR X30, [X31], #0x20
	0x01DBFD30 RET
	0x01DBFD34 STR X30, [X31 - 0x20]!
	0x01DBFD38 STP X20, X19, [X31 + 0x10]
	0x01DBFD3C ADRP X20, 0x2619000
	0x01DBFD40 ADRP X19, 0x2336000
	0x01DBFD44 LDRB W8, [X20 + 0xB77]
	0x01DBFD48 LDR X19, [X19 + 0x7C8]
	0x01DBFD4C TBNZ X8, 0x0, 0x1DBFD64
	0x01DBFD50 ADRP X0, 0x2336000
	0x01DBFD54 LDR X0, [X0 + 0x7C8]
	0x01DBFD58 BL 0x1C16CF4
	0x01DBFD5C MOVZ W8, 0x1
	0x01DBFD60 STRB W8, [X20 + 0xB77]
	0x01DBFD64 LDR X0, [X19]
	0x01DBFD68 LDR W8, [X0 + 0xE0]
	0x01DBFD6C CBNZ W8, 0x1DBFD78
	0x01DBFD70 BL 0x1C16DFC
	0x01DBFD74 LDR X0, [X19]
	0x01DBFD78 LDR X8, [X0 + 0xB8]
	0x01DBFD7C LDP X20, X19, [X31 + 0x10]
	0x01DBFD80 LDP S0, S1, [X8 + 0x8]
	0x01DBFD84 LDP S2, S3, [X8 + 0x10]
	0x01DBFD88 LDR X30, [X31], #0x20
	0x01DBFD8C RET
	0x01DBFD90 STP D11, D10, [X31 - 0x40]!
	0x01DBFD94 STP D9, D8, [X31 + 0x10]
	0x01DBFD98 STR X30, [X31 + 0x20]
	0x01DBFD9C STP X20, X19, [X31 + 0x30]
	0x01DBFDA0 ADRP X20, 0x2619000
	0x01DBFDA4 ADRP X19, 0x2336000
	0x01DBFDA8 LDRB W8, [X20 + 0xB78]
	0x01DBFDAC LDR X19, [X19 + 0x7C8]
	0x01DBFDB0 MOV V8.16B, V3.16B
	0x01DBFDB4 MOV V9.16B, V2.16B
	0x01DBFDB8 MOV V10.16B, V1.16B
	0x01DBFDBC MOV V11.16B, V0.16B
	0x01DBFDC0 TBNZ X8, 0x0, 0x1DBFDD8
	0x01DBFDC4 ADRP X0, 0x2336000
	0x01DBFDC8 LDR X0, [X0 + 0x7C8]
	0x01DBFDCC BL 0x1C16CF4
	0x01DBFDD0 MOVZ W8, 0x1
	0x01DBFDD4 STRB W8, [X20 + 0xB78]
	0x01DBFDD8 LDR X0, [X19]
	0x01DBFDDC LDR W8, [X0 + 0xE0]
	0x01DBFDE0 CBNZ W8, 0x1DBFDEC
	0x01DBFDE4 BL 0x1C16DFC
	0x01DBFDE8 LDR X0, [X19]
	0x01DBFDEC LDR X8, [X0 + 0xB8]
	0x01DBFDF0 LDP X20, X19, [X31 + 0x30]
	0x01DBFDF4 LDR X30, [X31 + 0x20]
	0x01DBFDF8 STP S9, S8, [X8 + 0x10]
	0x01DBFDFC LDP D9, D8, [X31 + 0x10]
	0x01DBFE00 STP S11, S10, [X8 + 0x8]
	0x01DBFE04 LDP D11, D10, [X31], #0x40
	0x01DBFE08 RET
	0x01DBFE0C LDR X0, [X0 + 0x20]
	0x01DBFE10 RET
	0x01DBFE14 LDR X0, [X0 + 0x38]
	0x01DBFE18 RET
	0x01DBFE1C LDR X0, [X0 + 0x50]
	0x01DBFE20 RET
	0x01DBFE24 LDR X0, [X0 + 0x58]
	0x01DBFE28 RET
	0x01DBFE2C LDR X0, [X0 + 0x60]
	0x01DBFE30 RET
	0x01DBFE34 LDR X0, [X0 + 0x68]
	0x01DBFE38 RET
	0x01DBFE3C LDR X0, [X0 + 0x70]
	0x01DBFE40 RET
	0x01DBFE44 LDR X0, [X0 + 0x78]
	0x01DBFE48 RET
	0x01DBFE4C STR X30, [X31 - 0x10]!
	0x01DBFE50 LDR X8, [X0 + 0x38]
	0x01DBFE54 CBZ X8, 0x1DBFE64
	0x01DBFE58 LDR X0, [X8 + 0x80]
	0x01DBFE5C LDR X30, [X31], #0x10
	0x01DBFE60 RET
	0x01DBFE64 BL 0x1C16F20
	0x01DBFE68 LDR V0, [X0 + 0xD8]
	0x01DBFE6C RET
	0x01DBFE70 LDR W0, [X0 + 0x130]
	0x01DBFE74 RET
	0x01DBFE78 STR W1, [X0 + 0x130]
	0x01DBFE7C RET
	0x01DBFE80 LDRB W0, [X0 + 0x134]
	0x01DBFE84 RET
	0x01DBFE88 AND W8, W1, 0x1
	0x01DBFE8C STRB W8, [X0 + 0x134]
	0x01DBFE90 RET
	0x01DBFE94 LDR X0, [X0 + 0x148]
	0x01DBFE98 RET
	0x01DBFE9C STR X1, [X0 + 0x148]
	0x01DBFEA0 RET
	0x01DBFEA4 LDR X0, [X0 + 0x150]
	0x01DBFEA8 RET
	0x01DBFEAC STR X1, [X0 + 0x150]
	0x01DBFEB0 RET
	0x01DBFEB4 LDR X0, [X0 + 0x30]
	0x01DBFEB8 RET
	0x01DBFEBC STR X30, [X31 - 0x20]!
	0x01DBFEC0 STP X20, X19, [X31 + 0x10]
	0x01DBFEC4 ADRP X19, 0x2619000
	0x01DBFEC8 ADRP X20, 0x2339000
	0x01DBFECC LDRB W8, [X19 + 0xB79]
	0x01DBFED0 LDR X20, [X20 + 0x38]
	0x01DBFED4 TBNZ X8, 0x0, 0x1DBFF04
	0x01DBFED8 ADRP X0, 0x2339000
	0x01DBFEDC LDR X0, [X0 + 0x38]
	0x01DBFEE0 BL 0x1C16CF4
	0x01DBFEE4 ADRP X0, 0x2334000
	0x01DBFEE8 LDR X0, [X0 + 0x598]
	0x01DBFEEC BL 0x1C16CF4
	0x01DBFEF0 ADRP X0, 0x2334000
	0x01DBFEF4 LDR X0, [X0 + 0x5F8]
	0x01DBFEF8 BL 0x1C16CF4
	0x01DBFEFC MOVZ W8, 0x1
	0x01DBFF00 STRB W8, [X19 + 0xB79]
	0x01DBFF04 LDR X0, [X20]
	0x01DBFF08 LDR W8, [X0 + 0xE0]
	0x01DBFF0C CBNZ W8, 0x1DBFF18
	0x01DBFF10 BL 0x1C16DFC
	0x01DBFF14 LDR X0, [X20]
	0x01DBFF18 LDR X8, [X0 + 0xB8]
	0x01DBFF1C LDR X9, [X8 + 0x8]
	0x01DBFF20 ADRP X8, 0x2334000
	0x01DBFF24 LDR X8, [X8 + 0x598]
	0x01DBFF28 CBZ X9, 0x1DBFF34
	0x01DBFF2C LDR X19, [X9 + 0x20]
	0x01DBFF30 B 0x1DBFF38
	0x01DBFF34 MOV X19, X31
	0x01DBFF38 LDR X0, [X8]
	0x01DBFF3C LDR W8, [X0 + 0xE0]
	0x01DBFF40 CBNZ W8, 0x1DBFF48
	0x01DBFF44 BL 0x1C16DFC
	0x01DBFF48 MOV X0, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x261A000
	006 Move X21, 0x233A000
	007 Move W8, [X20+2917]
	008 Move X21, [X21+24]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x233A000
	015 Move X0, [X0+24]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2917], W8
	019 Move X1, [X21]
	020 Move X0, X19
	021 Call 0x21A4894, X0
	022 Move X8, [X19+32]
	023 Move [X19+72], X0
	024 Compare X8, 0
	025 JumpIfEqual {173}
	026 Move W9, [X19+40]
	027 Move W10, 10
	028 Move X0, X8
	029 Move X2, X31
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move W9, 22
	032 NotImplemented "Instruction CSEL not yet implemented."
	033 Call AvatarArmature.GetBone, X0, X1
	034 Compare X0, 0
	035 JumpIfEqual {173}
	036 Move W1, W31
	037 Move X2, X31
	038 Call Transform.GetChild, X0, X1
	039 Move X8, [X19+56]
	040 Compare X8, 0
	041 JumpIfEqual {173}
	042 Move X20, X0
	043 Move X0, X8
	044 Move X1, X31
	045 Call Component.get_transform, X0
	046 Compare X0, 0
	047 JumpIfEqual {173}
	048 Move X1, X20
	049 Move W2, W31
	050 Move X3, X31
	051 Call Transform.SetParent, X0, X1, X2
	052 Move X0, [X19+56]
	053 Compare X0, 0
	054 JumpIfEqual {173}
	055 Move X1, X31
	056 Call Component.get_transform, X0
	057 Move X8, [X19+56]
	058 Compare X8, 0
	059 JumpIfEqual {173}
	060 Move X20, X0
	061 Move X0, X8
	062 Move X1, X31
	063 Call SphereCollider.get_radius, X0
	064 Compare X20, 0
	065 JumpIfEqual {173}
	066 NotImplemented "Instruction FNEG not yet implemented."
	067 Move S0, W31
	068 Move S2, W31
	069 Move X0, X20
	070 Move X1, X31
	071 Call Transform.set_localPosition, X0, X1
	072 Move X0, [X19+32]
	073 Compare X0, 0
	074 JumpIfEqual {173}
	075 Move W8, [X19+40]
	076 Move W9, 13
	077 Move X2, X31
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Move W8, 25
	080 NotImplemented "Instruction CSEL not yet implemented."
	081 Call AvatarArmature.GetBone, X0, X1
	082 Compare X0, 0
	083 JumpIfEqual {173}
	084 Move W1, W31
	085 Move X2, X31
	086 Call Transform.GetChild, X0, X1
	087 Move X8, [X19+48]
	088 Compare X8, 0
	089 JumpIfEqual {173}
	090 Move X20, X0
	091 Move X0, X8
	092 Move X1, X31
	093 Call Component.get_transform, X0
	094 Compare X0, 0
	095 JumpIfEqual {173}
	096 Move X1, X20
	097 Move W2, W31
	098 Move X3, X31
	099 Call Transform.SetParent, X0, X1, X2
	100 Move X0, [X19+48]
	101 Compare X0, 0
	102 JumpIfEqual {173}
	103 Move X1, X31
	104 Call Component.get_transform, X0
	105 Move X8, [X19+48]
	106 Compare X8, 0
	107 JumpIfEqual {173}
	108 Move X20, X0
	109 Move X0, X8
	110 Move X1, X31
	111 Call SphereCollider.get_radius, X0
	112 Compare X20, 0
	113 JumpIfEqual {173}
	114 NotImplemented "Instruction FNEG not yet implemented."
	115 Move S0, W31
	116 Move S2, W31
	117 Move X0, X20
	118 Move X1, X31
	119 Call Transform.set_localPosition, X0, X1
	120 Move X0, [X19+32]
	121 Compare X0, 0
	122 JumpIfEqual {173}
	123 Move W8, [X19+40]
	124 Move W9, 16
	125 Move X2, X31
	126 NotImplemented "Instruction CMP not yet implemented."
	127 Move W8, 28
	128 NotImplemented "Instruction CSEL not yet implemented."
	129 Call AvatarArmature.GetBone, X0, X1
	130 Compare X0, 0
	131 JumpIfEqual {173}
	132 Move W1, W31
	133 Move X2, X31
	134 Call Transform.GetChild, X0, X1
	135 Move X8, [X19+64]
	136 Compare X8, 0
	137 JumpIfEqual {173}
	138 Move X20, X0
	139 Move X0, X8
	140 Move X1, X31
	141 Call Component.get_transform, X0
	142 Compare X0, 0
	143 JumpIfEqual {173}
	144 Move X1, X20
	145 Move W2, W31
	146 Move X3, X31
	147 Call Transform.SetParent, X0, X1, X2
	148 Move X0, [X19+64]
	149 Compare X0, 0
	150 JumpIfEqual {173}
	151 Move X1, X31
	152 Call Component.get_transform, X0
	153 Move X8, [X19+64]
	154 Compare X8, 0
	155 JumpIfEqual {173}
	156 Move X19, X0
	157 Move X0, X8
	158 Move X1, X31
	159 Call SphereCollider.get_radius, X0
	160 Compare X19, 0
	161 JumpIfEqual {173}
	162 Move X0, X19
	163 Move X20, [X31+16]
	164 Move X19, [X31+24]
	165 NotImplemented "Instruction FNEG not yet implemented."
	166 Move S0, W31
	167 Move S2, W31
	168 Move X1, X31
	169 Move X30, [X31+32]
	170 Move X21, [X31+40]
	171 Call Transform.set_localPosition, X0, X1
	172 Return 
	173 Call 0x1C17F20

Method: System.Void SetFingersExtended(System.Boolean thumbExtended, System.Boolean indexExtended, System.Boolean middleExtended)

Disassembly:
	0x01DBFF4C MOV X1, X31
	0x01DBFF50 MOV X2, X31
	0x01DBFF54 BL 0x3C354F8
	0x01DBFF58 TBZ X0, 0x0, 0x1DBFFBC
	0x01DBFF5C LDR X0, [X20]
	0x01DBFF60 LDR W8, [X0 + 0xE0]
	0x01DBFF64 CBNZ W8, 0x1DBFF70
	0x01DBFF68 BL 0x1C16DFC
	0x01DBFF6C LDR X0, [X20]
	0x01DBFF70 LDR X8, [X0 + 0xB8]
	0x01DBFF74 LDR X8, [X8 + 0x8]
	0x01DBFF78 CBZ X8, 0x1DBFFE8
	0x01DBFF7C LDR X9, [X8 + 0x20]
	0x01DBFF80 CBZ X9, 0x1DBFFE8
	0x01DBFF84 LDRB W9, [X9 + 0x78]
	0x01DBFF88 CBZ W9, 0x1DBFFBC
	0x01DBFF8C LDR W9, [X0 + 0xE0]
	0x01DBFF90 CBNZ W9, 0x1DBFFA8
	0x01DBFF94 BL 0x1C16DFC
	0x01DBFF98 LDR X8, [X20]
	0x01DBFF9C LDR X8, [X8 + 0xB8]
	0x01DBFFA0 LDR X8, [X8 + 0x8]
	0x01DBFFA4 CBZ X8, 0x1DBFFE8
	0x01DBFFA8 LDR X8, [X8 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, X0
	006 Move X0, [X0+56]
	007 Compare X0, 0
	008 JumpIfEqual {32}
	009 Move W20, W2
	010 And W1, W1, 1
	011 Move X2, X31
	012 Move W19, W3
	013 Call Collider.set_enabled, X0, X1
	014 Move X0, [X21+48]
	015 Compare X0, 0
	016 JumpIfEqual {32}
	017 And W1, W20, 1
	018 Move X2, X31
	019 Call Collider.set_enabled, X0, X1
	020 Move X0, [X21+64]
	021 Compare X0, 0
	022 JumpIfEqual {32}
	023 NotImplemented "Instruction BIC not yet implemented."
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 And W1, W8, 1
	027 Move X2, X31
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call Collider.set_enabled, X0, X1
	031 Return 
	032 Call 0x1C17F20

Method: System.Void UpdateIsTracking(UnityEngine.Transform head)

Disassembly:
	0x01DBFFAC CBZ X8, 0x1DBFFE8
	0x01DBFFB0 LDP S0, S1, [X8 + 0x7C]
	0x01DBFFB4 LDR V2, [X8 + 0x84]
	0x01DBFFB8 B 0x1DBFFDC
	0x01DBFFBC ADRP X8, 0x2334000
	0x01DBFFC0 LDR X8, [X8 + 0x5F8]
	0x01DBFFC4 LDR X0, [X8]
	0x01DBFFC8 LDR W8, [X0 + 0xE0]
	0x01DBFFCC CBNZ W8, 0x1DBFFD4
	0x01DBFFD0 BL 0x1C16DFC
	0x01DBFFD4 MOV X0, X31
	0x01DBFFD8 BL 0x3C8A660
	0x01DBFFDC LDP X20, X19, [X31 + 0x10]
	0x01DBFFE0 LDR X30, [X31], #0x20
	0x01DBFFE4 RET
	0x01DBFFE8 BL 0x1C16F20
	0x01DBFFEC SUB X31, X31, 0x70
	0x01DBFFF0 STP D9, D8, [X31 + 0x10]
	0x01DBFFF4 STR X30, [X31 + 0x20]
	0x01DBFFF8 STP X26, X25, [X31 + 0x30]
	0x01DBFFFC STP X24, X23, [X31 + 0x40]
	0x01DC0000 STP X22, X21, [X31 + 0x50]
	0x01DC0004 STP X20, X19, [X31 + 0x60]
	0x01DC0008 ADRP X21, 0x2618000
	0x01DC000C ADRP X20, 0x2335000
	0x01DC0010 LDRB W8, [X21 + 0xB7A]
	0x01DC0014 LDR X20, [X20 + 0x7C8]
	0x01DC0018 MOV X19, X0
	0x01DC001C TBNZ X8, 0x0, 0x1DC0118
	0x01DC0020 ADRP X0, 0x2337000
	0x01DC0024 LDR X0, [X0 + 0xAF8]
	0x01DC0028 BL 0x1C16CF4
	0x01DC002C ADRP X0, 0x2338000
	0x01DC0030 LDR X0, [X0 + 0x40]
	0x01DC0034 BL 0x1C16CF4
	0x01DC0038 ADRP X0, 0x2338000
	0x01DC003C LDR X0, [X0 + 0x48]
	0x01DC0040 BL 0x1C16CF4
	0x01DC0044 ADRP X0, 0x2334000
	0x01DC0048 LDR X0, [X0 + 0xE70]
	0x01DC004C BL 0x1C16CF4
	0x01DC0050 ADRP X0, 0x2333000
	0x01DC0054 LDR X0, [X0 + 0x648]
	0x01DC0058 BL 0x1C16CF4
	0x01DC005C ADRP X0, 0x2338000
	0x01DC0060 LDR X0, [X0 + 0x50]
	0x01DC0064 BL 0x1C16CF4
	0x01DC0068 ADRP X0, 0x2333000
	0x01DC006C LDR X0, [X0 + 0xDB0]
	0x01DC0070 BL 0x1C16CF4
	0x01DC0074 ADRP X0, 0x2333000
	0x01DC0078 LDR X0, [X0 + 0x5D8]
	0x01DC007C BL 0x1C16CF4
	0x01DC0080 ADRP X0, 0x2336000
	0x01DC0084 LDR X0, [X0 + 0xD28]
	0x01DC0088 BL 0x1C16CF4
	0x01DC008C ADRP X0, 0x2333000
	0x01DC0090 LDR X0, [X0 + 0xDA0]
	0x01DC0094 BL 0x1C16CF4
	0x01DC0098 ADRP X0, 0x2338000
	0x01DC009C LDR X0, [X0 + 0x58]
	0x01DC00A0 BL 0x1C16CF4
	0x01DC00A4 ADRP X0, 0x2338000
	0x01DC00A8 LDR X0, [X0 + 0x60]
	0x01DC00AC BL 0x1C16CF4
	0x01DC00B0 ADRP X0, 0x2338000
	0x01DC00B4 LDR X0, [X0 + 0x68]
	0x01DC00B8 BL 0x1C16CF4
	0x01DC00BC ADRP X0, 0x2338000
	0x01DC00C0 LDR X0, [X0 + 0x70]
	0x01DC00C4 BL 0x1C16CF4
	0x01DC00C8 ADRP X0, 0x2338000
	0x01DC00CC LDR X0, [X0 + 0x78]
	0x01DC00D0 BL 0x1C16CF4
	0x01DC00D4 ADRP X0, 0x2338000
	0x01DC00D8 LDR X0, [X0 + 0x80]
	0x01DC00DC BL 0x1C16CF4
	0x01DC00E0 ADRP X0, 0x2335000
	0x01DC00E4 LDR X0, [X0 + 0x7C8]
	0x01DC00E8 BL 0x1C16CF4
	0x01DC00EC ADRP X0, 0x2333000
	0x01DC00F0 LDR X0, [X0 + 0x638]
	0x01DC00F4 BL 0x1C16CF4
	0x01DC00F8 ADRP X0, 0x2335000
	0x01DC00FC LDR X0, [X0 + 0x310]
	0x01DC0100 BL 0x1C16CF4
	0x01DC0104 ADRP X0, 0x2336000
	0x01DC0108 LDR X0, [X0 + 0xD98]
	0x01DC010C BL 0x1C16CF4
	0x01DC0110 MOVZ W8, 0x1
	0x01DC0114 STRB W8, [X21 + 0xB7A]
	0x01DC0118 LDR X0, [X20]
	0x01DC011C STR X31, [X31 + 0x28]
	0x01DC0120 LDR W8, [X0 + 0xE0]
	0x01DC0124 CBNZ W8, 0x1DC0130
	0x01DC0128 BL 0x1C16DFC
	0x01DC012C LDR X0, [X20]
	0x01DC0130 LDR X8, [X0 + 0xB8]
	0x01DC0134 MOVZ W1, 0x64
	0x01DC0138 MOV X0, X19
	0x01DC013C STR X19, [X8]
	0x01DC0140 BL 0x1DC0744
	0x01DC0144 LDR X0, [X19 + 0x28]
	0x01DC0148 STRB W31, [X19 + 0x8C]
	0x01DC014C CBZ X0, 0x1DC0730
	0x01DC0150 LDR X1, [X19 + 0x20]
	0x01DC0154 ADRP X20, 0x2333000
	0x01DC0158 LDR X20, [X20 + 0x5D8]
	0x01DC015C BL 0x1DBFBFC
	0x01DC0160 LDR X0, [X20]
	0x01DC0164 LDR X21, [X19 + 0x20]
	0x01DC0168 LDR W8, [X0 + 0xE0]
	0x01DC016C CBNZ W8, 0x1DC0174
	0x01DC0170 BL 0x1C16DFC
	0x01DC0174 CBZ X21, 0x1DC0730
	0x01DC0178 LDR X8, [X20]
	0x01DC017C ADRP X22, 0x2333000
	0x01DC0180 LDR X8, [X8 + 0xB8]
	0x01DC0184 LDR W8, [X8 + 0x40]
	0x01DC0188 LDR X22, [X22 + 0x648]
	0x01DC018C STR W8, [X21 + 0x10C]
	0x01DC0190 LDR X0, [X22]
	0x01DC0194 LDR X20, [X19 + 0x38]
	0x01DC0198 LDR W8, [X0 + 0xE0]
	0x01DC019C CBNZ W8, 0x1DC01A4
	0x01DC01A0 BL 0x1C16DFC
	0x01DC01A4 ADRP X23, 0x2618000
	0x01DC01A8 LDRB W8, [X23 + 0x787]
	0x01DC01AC CBNZ W8, 0x1DC01C4
	0x01DC01B0 ADRP X0, 0x2333000
	0x01DC01B4 LDR X0, [X0 + 0x648]
	0x01DC01B8 BL 0x1C16CF4
	0x01DC01BC MOVZ W8, 0x1
	0x01DC01C0 STRB W8, [X23 + 0x787]
	0x01DC01C4 LDR X0, [X22]
	0x01DC01C8 LDR W8, [X0 + 0xE0]
	0x01DC01CC CBNZ W8, 0x1DC01D8
	0x01DC01D0 BL 0x1C16DFC
	0x01DC01D4 LDR X0, [X22]
	0x01DC01D8 LDR X8, [X0 + 0xB8]
	0x01DC01DC LDR X8, [X8]
	0x01DC01E0 CBZ X8, 0x1DC0730
	0x01DC01E4 LDR X8, [X8 + 0xB8]
	0x01DC01E8 CBZ X8, 0x1DC0730
	0x01DC01EC CBZ X20, 0x1DC0730
	0x01DC01F0 LDP X5, X6, [X19 + 0x70]
	0x01DC01F4 LDP X3, X4, [X19 + 0x60]
	0x01DC01F8 LDR X2, [X19 + 0x58]
	0x01DC01FC LDR X1, [X8 + 0x70]
	0x01DC0200 MOVZ W7, 0x1
	0x01DC0204 MOV X0, X20
	0x01DC0208 BL 0x1DC07D4
	0x01DC020C LDR X25, [X19 + 0x20]
	0x01DC0210 CBZ X25, 0x1DC0730
	0x01DC0214 ADRP X24, 0x2338000
	0x01DC0218 LDR X24, [X24 + 0x48]
	0x01DC021C ADRP X21, 0x2338000
	0x01DC0220 LDR X20, [X25 + 0x1C0]
	0x01DC0224 LDR X0, [X24]
	0x01DC0228 LDR X21, [X21 + 0x70]
	0x01DC022C BL 0x1C16F10
	0x01DC0230 LDR X2, [X21]
	0x01DC0234 MOV X1, X19
	0x01DC0238 MOV X3, X31
	0x01DC023C MOV X21, X0
	0x01DC0240 BL 0x2A77898
	0x01DC0244 MOV X0, X20
	0x01DC0248 MOV X1, X21
	0x01DC024C MOV X2, X31
	0x01DC0250 BL 0x33C0DE4
	0x01DC0254 CBZ X0, 0x1DC0288
	0x01DC0258 LDR X21, [X24]
	0x01DC025C MOV X20, X0
	0x01DC0260 MOV X1, X21
	0x01DC0264 BL 0x1C16E00
	0x01DC0268 CBZ X0, 0x1DC040C
	0x01DC026C STR X0, [X25 + 0x1C0]
	0x01DC0270 LDR X21, [X24]
	0x01DC0274 MOV X0, X20
	0x01DC0278 MOV X1, X21
	0x01DC027C BL 0x1C16E00
	0x01DC0280 CBNZ X0, 0x1DC028C
	0x01DC0284 B 0x1DC040C
	0x01DC0288 STR X31, [X25 + 0x1C0]
	0x01DC028C LDR X25, [X19 + 0x20]
	0x01DC0290 CBZ X25, 0x1DC0730
	0x01DC0294 LDR X0, [X24]
	0x01DC0298 ADRP X21, 0x2338000
	0x01DC029C LDR X20, [X25 + 0x1C8]
	0x01DC02A0 LDR X21, [X21 + 0x78]
	0x01DC02A4 BL 0x1C16F10
	0x01DC02A8 LDR X2, [X21]
	0x01DC02AC MOV X1, X19
	0x01DC02B0 MOV X3, X31
	0x01DC02B4 MOV X21, X0
	0x01DC02B8 BL 0x2A77898
	0x01DC02BC MOV X0, X20
	0x01DC02C0 MOV X1, X21
	0x01DC02C4 MOV X2, X31
	0x01DC02C8 BL 0x33C0DE4
	0x01DC02CC CBZ X0, 0x1DC0300
	0x01DC02D0 LDR X21, [X24]
	0x01DC02D4 MOV X20, X0
	0x01DC02D8 MOV X1, X21
	0x01DC02DC BL 0x1C16E00
	0x01DC02E0 CBZ X0, 0x1DC040C
	0x01DC02E4 STR X0, [X25 + 0x1C8]
	0x01DC02E8 LDR X21, [X24]
	0x01DC02EC MOV X0, X20
	0x01DC02F0 MOV X1, X21
	0x01DC02F4 BL 0x1C16E00
	0x01DC02F8 CBNZ X0, 0x1DC0304
	0x01DC02FC B 0x1DC040C
	0x01DC0300 STR X31, [X25 + 0x1C8]
	0x01DC0304 LDR X24, [X19 + 0x80]
	0x01DC0308 CBZ X24, 0x1DC0730
	0x01DC030C ADRP X25, 0x2337000
	0x01DC0310 LDR X25, [X25 + 0xAF8]
	0x01DC0314 ADRP X21, 0x2338000
	0x01DC0318 LDR X20, [X24 + 0x28]
	0x01DC031C LDR X0, [X25]
	0x01DC0320 LDR X21, [X21 + 0x58]
	0x01DC0324 BL 0x1C16F10
	0x01DC0328 LDR X2, [X21]
	0x01DC032C MOV X1, X19
	0x01DC0330 MOV X3, X31
	0x01DC0334 MOV X21, X0
	0x01DC0338 BL 0x2A6B948
	0x01DC033C MOV X0, X20
	0x01DC0340 MOV X1, X21
	0x01DC0344 MOV X2, X31
	0x01DC0348 BL 0x33C0DE4
	0x01DC034C CBZ X0, 0x1DC0380
	0x01DC0350 LDR X21, [X25]
	0x01DC0354 MOV X20, X0
	0x01DC0358 MOV X1, X21
	0x01DC035C BL 0x1C16E00
	0x01DC0360 CBZ X0, 0x1DC040C
	0x01DC0364 STR X0, [X24 + 0x28]
	0x01DC0368 LDR X21, [X25]
	0x01DC036C MOV X0, X20
	0x01DC0370 MOV X1, X21
	0x01DC0374 BL 0x1C16E00
	0x01DC0378 CBNZ X0, 0x1DC0384
	0x01DC037C B 0x1DC040C
	0x01DC0380 STR X31, [X24 + 0x28]
	0x01DC0384 ADRP X24, 0x2336000
	0x01DC0388 LDR X24, [X24 + 0xD28]
	0x01DC038C ADRP X25, 0x2338000
	0x01DC0390 ADRP X21, 0x2338000
	0x01DC0394 LDR X8, [X24]
	0x01DC0398 LDR X8, [X8 + 0xB8]
	0x01DC039C LDR X25, [X25 + 0x40]
	0x01DC03A0 LDR X20, [X8 + 0x18]
	0x01DC03A4 LDR X0, [X25]
	0x01DC03A8 LDR X21, [X21 + 0x80]
	0x01DC03AC BL 0x1C16F10
	0x01DC03B0 LDR X2, [X21]
	0x01DC03B4 MOV X1, X19
	0x01DC03B8 MOV X3, X31
	0x01DC03BC MOV X21, X0
	0x01DC03C0 BL 0x2A6B5B4
	0x01DC03C4 MOV X0, X20
	0x01DC03C8 MOV X1, X21
	0x01DC03CC MOV X2, X31
	0x01DC03D0 BL 0x33C0DE4
	0x01DC03D4 CBZ X0, 0x1DC0418
	0x01DC03D8 LDR X21, [X25]
	0x01DC03DC MOV X20, X0
	0x01DC03E0 MOV X1, X21
	0x01DC03E4 BL 0x1C16E00
	0x01DC03E8 CBZ X0, 0x1DC040C
	0x01DC03EC LDR X8, [X24]
	0x01DC03F0 LDR X8, [X8 + 0xB8]
	0x01DC03F4 STR X0, [X8 + 0x18]
	0x01DC03F8 LDR X21, [X25]
	0x01DC03FC MOV X0, X20
	0x01DC0400 MOV X1, X21
	0x01DC0404 BL 0x1C16E00
	0x01DC0408 CBNZ X0, 0x1DC0424
	0x01DC040C MOV X0, X20
	0x01DC0410 MOV X1, X21
	0x01DC0414 BL 0x1C171E0
	0x01DC0418 LDR X8, [X24]
	0x01DC041C LDR X8, [X8 + 0xB8]
	0x01DC0420 STR X31, [X8 + 0x18]
	0x01DC0424 ADRP X8, 0x2335000
	0x01DC0428 LDR X8, [X8 + 0x310]
	0x01DC042C LDR X0, [X8]
	0x01DC0430 LDR W8, [X0 + 0xE0]
	0x01DC0434 CBNZ W8, 0x1DC043C
	0x01DC0438 BL 0x1C16DFC
	0x01DC043C ADD X1, X31, 0x28
	0x01DC0440 MOV W0, W31
	0x01DC0444 MOV X2, X31
	0x01DC0448 BL 0x1DA6E5C
	0x01DC044C TBZ X0, 0x0, 0x1DC0478
	0x01DC0450 LDR X0, [X31 + 0x28]
	0x01DC0454 CBZ X0, 0x1DC0730
	0x01DC0458 MOV X1, X31
	0x01DC045C BL 0x3C3F58C
	0x01DC0460 STR S0, [X19 + 0x10C]
	0x01DC0464 STR S1, [X19 + 0x110]
	0x01DC0468 STR S2, [X19 + 0x114]
	0x01DC046C LDR X0, [X31 + 0x28]
	0x01DC0470 CBNZ X0, 0x1DC049C
	0x01DC0474 B 0x1DC0730
	0x01DC0478 LDR X0, [X19 + 0x58]
	0x01DC047C CBZ X0, 0x1DC0730
	0x01DC0480 MOV X1, X31
	0x01DC0484 BL 0x3C3F58C
	0x01DC0488 LDR X0, [X19 + 0x58]
	0x01DC048C STR S0, [X19 + 0x10C]
	0x01DC0490 STR S1, [X19 + 0x110]
	0x01DC0494 STR S2, [X19 + 0x114]
	0x01DC0498 CBZ X0, 0x1DC0730
	0x01DC049C MOV X1, X31
	0x01DC04A0 BL 0x3C3FA04
	0x01DC04A4 ADRP X20, 0x2618000
	0x01DC04A8 LDRB W8, [X20 + 0x785]
	0x01DC04AC MOV V8.16B, V0.16B
	0x01DC04B0 MOV V9.16B, V2.16B
	0x01DC04B4 CBNZ W8, 0x1DC04CC

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+32], D15
	003 Move [X31+40], D14
	004 Move [X31+48], D13
	005 Move [X31+56], D12
	006 Move [X31+64], D11
	007 Move [X31+72], D10
	008 Move [X31+80], D9
	009 Move [X31+88], D8
	010 Move [X31+96], X30
	011 Move [X31+104], X25
	012 Move [X31+112], X24
	013 Move [X31+120], X23
	014 Move [X31+128], X22
	015 Move [X31+136], X21
	016 Move [X31+144], X20
	017 Move [X31+152], X19
	018 Move X21, 0x261A000
	019 Move X22, 0x2335000
	020 Move W8, [X21+2918]
	021 Move X22, [X22+2416]
	022 Move X20, X1
	023 Move X19, X0
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {33}
	028 Move X0, 0x2335000
	029 Move X0, [X0+2416]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X21+2918], W8
	033 Move X0, [X22]
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {38}
	037 Call 0x1C17DFC
	038 Move X0, X31
	039 Call Application.get_isEditor
	040 Move TEMP, X0
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfEqual {358}
	044 Move W8, [X19+80]
	045 Compare W8, 0
	046 JumpIfNotEqual {358}
	047 Move X0, [X19+72]
	048 Compare X0, 0
	049 JumpIfEqual {376}
	050 Move X1, X31
	051 Call XRBaseController.get_currentControllerState, X0
	052 Compare X0, 0
	053 JumpIfEqual {376}
	054 Move W21, [X0+28]
	055 Compare W21, 0
	056 JumpIfNotEqual {357}
	057 Compare X20, 0
	058 JumpIfEqual {376}
	059 Move X0, X20
	060 Move X1, X31
	061 Call Transform.get_forward, X0
	062 Move X0, X31
	063 Call Extensions.Flatten, X0
	064 Move X23, 0x2619000
	065 Move W8, [X23+1925]
	066 Move V8, V0
	067 Move V9, V1
	068 Move V10, V2
	069 Compare W8, 0
	070 JumpIfNotEqual {76}
	071 Move X0, 0x2334000
	072 Move X0, [X0+1448]
	073 Call 0x1C17CF4
	074 Move W8, 1
	075 Move [X23+1925], W8
	076 Move X24, 0x2334000
	077 Move X24, [X24+1448]
	078 Move X0, [X24]
	079 Move W8, [X0+224]
	080 Compare W8, 0
	081 JumpIfNotEqual {83}
	082 Call 0x1C17DFC
	083 Move X8, -19746816
	084 Multiply S0, S8, S8
	085 Multiply S1, S9, S9
	086 Move V14, [X8+380]
	087 Move X22, 0x2334000
	088 Add S0, S0, S1
	089 Multiply S1, S10, S10
	090 Move X22, [X22+1440]
	091 Add S0, S1, S0
	092 NotImplemented "Instruction FSQRT not yet implemented."
	093 NotImplemented "Instruction FCMP not yet implemented."
	094 NotImplemented "Instruction FDIV not yet implemented."
	095 NotImplemented "Instruction FDIV not yet implemented."
	096 NotImplemented "Instruction FDIV not yet implemented."
	097 Move X25, 0x2619000
	098 Move W8, [X25+1923]
	099 Compare W8, 0
	100 JumpIfNotEqual {106}
	101 Move X0, 0x2334000
	102 Move X0, [X0+1440]
	103 Call 0x1C17CF4
	104 Move W8, 1
	105 Move [X25+1923], W8
	106 Move X8, [X22]
	107 Move X8, [X8+184]
	108 Move S15, [X8]
	109 Move S9, [X8+4]
	110 Move V8, [X8+8]
	111 Move X0, X20
	112 Move X1, X31
	113 Call Component.get_transform, X0
	114 Compare X0, 0
	115 JumpIfEqual {376}
	116 Move X1, X31
	117 Move [X31+24], S9
	118 Move [X31+32], S8
	119 Call Transform.get_position, X0
	120 Move X25, 0x2619000
	121 Move W8, [X25+1926]
	122 Move [X31+16], S1
	123 Move [X31+24], S0
	124 Move [X31+12], S2
	125 Compare W8, 0
	126 JumpIfNotEqual {132}
	127 Move X0, 0x2334000
	128 Move X0, [X0+1440]
	129 Call 0x1C17CF4
	130 Move W8, 1
	131 Move [X25+1926], W8
	132 Move X8, [X22]
	133 Move X0, X20
	134 Move X1, X31
	135 Move X8, [X8+184]
	136 Move S0, [X8+24]
	137 Move S9, [X8+28]
	138 Move V10, [X8+32]
	139 Move [X31+8], S0
	140 Call Transform.get_right, X0
	141 Move X0, X31
	142 Call Extensions.Flatten, X0
	143 Move W8, [X23+1925]
	144 Move V11, V0
	145 Move V12, V1
	146 Move V13, V2
	147 Compare W8, 0
	148 JumpIfNotEqual {154}
	149 Move X0, 0x2334000
	150 Move X0, [X0+1448]
	151 Call 0x1C17CF4
	152 Move W8, 1
	153 Move [X23+1925], W8
	154 Move X0, [X24]
	155 Move W8, [X0+224]
	156 Compare W8, 0
	157 JumpIfNotEqual {159}
	158 Call 0x1C17DFC
	159 Multiply S0, S11, S11
	160 Multiply S1, S12, S12
	161 Add S0, S0, S1
	162 Multiply S1, S13, S13
	163 Add S0, S1, S0
	164 NotImplemented "Instruction FSQRT not yet implemented."
	165 NotImplemented "Instruction FCMP not yet implemented."
	166 NotImplemented "Instruction FDIV not yet implemented."
	167 NotImplemented "Instruction FDIV not yet implemented."
	168 NotImplemented "Instruction FDIV not yet implemented."
	169 Move X20, 0x2619000
	170 Move W8, [X20+1923]
	171 Compare W8, 0
	172 JumpIfNotEqual {178}
	173 Move X0, 0x2334000
	174 Move X0, [X0+1440]
	175 Call 0x1C17CF4
	176 Move W8, 1
	177 Move [X20+1923], W8
	178 Move X8, [X22]
	179 Move X8, [X8+184]
	180 Move S11, [X8]
	181 Move S12, [X8+4]
	182 Move V13, [X8+8]
	183 Move X0, [X19+72]
	184 Compare X0, 0
	185 JumpIfEqual {376}
	186 Move W8, [X0+164]
	187 Move S0, -1
	188 Move S1, 1
	189 Move X1, X31
	190 NotImplemented "Instruction CMP not yet implemented."
	191 Move V8, V15
	192 NotImplemented "Instruction FCSEL not yet implemented."
	193 Call Component.get_transform, X0
	194 Compare X0, 0
	195 JumpIfEqual {376}
	196 Move X8, -19750912
	197 Move V0, [X8+4024]
	198 Move S2, [X31+8]
	199 Move S7, [X31+12]
	200 Move X8, -19746816
	201 Move V1, [X8+188]
	202 Move X8, -19746816
	203 Multiply S2, S2, S0
	204 Multiply S3, S9, S0
	205 Multiply S0, S10, S0
	206 Move S6, [X31+16]
	207 Move S5, [X31+20]
	208 Move S9, [X31+24]
	209 Move S10, [X31+28]
	210 Move V4, [X8+968]
	211 Multiply S11, S11, S15
	212 Multiply S12, S12, S15
	213 Multiply S13, S13, S15
	214 Subtract S2, S5, S2
	215 Multiply S5, S8, S1
	216 Subtract S3, S6, S3
	217 Multiply S6, S9, S1
	218 Multiply S1, S10, S1
	219 Subtract S0, S7, S0
	220 Multiply S7, S13, S4
	221 Add S5, S5, S2
	222 Multiply S16, S12, S4
	223 Multiply S4, S11, S4
	224 Add S3, S6, S3
	225 Add S0, S1, S0
	226 Add S2, S0, S7
	227 Add S1, S3, S16
	228 Add S0, S5, S4
	229 Move X1, X31
	230 Move V15, V8
	231 Call Transform.set_position, X0, X1
	232 Move W8, [X23+1925]
	233 Compare W8, 0
	234 JumpIfNotEqual {240}
	235 Move X0, 0x2334000
	236 Move X0, [X0+1448]
	237 Call 0x1C17CF4
	238 Move W8, 1
	239 Move [X23+1925], W8
	240 Move X0, [X24]
	241 Subtract S8, S15, S11
	242 Subtract S9, S9, S12
	243 Subtract S10, S10, S13
	244 Move W8, [X0+224]
	245 Compare W8, 0
	246 JumpIfNotEqual {248}
	247 Call 0x1C17DFC
	248 Multiply S0, S8, S8
	249 Multiply S1, S9, S9
	250 Add S0, S0, S1
	251 Multiply S1, S10, S10
	252 Add S0, S1, S0
	253 NotImplemented "Instruction FSQRT not yet implemented."
	254 NotImplemented "Instruction FCMP not yet implemented."
	255 NotImplemented "Instruction FDIV not yet implemented."
	256 NotImplemented "Instruction FDIV not yet implemented."
	257 Move [X31+16], S1
	258 Move [X31+24], S2
	259 NotImplemented "Instruction FDIV not yet implemented."
	260 Move X20, 0x2619000
	261 Move W8, [X20+1923]
	262 Compare W8, 0
	263 JumpIfNotEqual {269}
	264 Move X0, 0x2334000
	265 Move X0, [X0+1440]
	266 Call 0x1C17CF4
	267 Move W8, 1
	268 Move [X20+1923], W8
	269 Move X8, [X22]
	270 Move X8, [X8+184]
	271 Move V1, [X8]
	272 Move S0, [X8+4]
	273 Move S10, [X8+8]
	274 Move [X31+16], S0
	275 Move [X31+24], S1
	276 Move W8, [X25+1926]
	277 Move V9, V14
	278 Compare W8, 0
	279 JumpIfNotEqual {285}
	280 Move X0, 0x2334000
	281 Move X0, [X0+1440]
	282 Call 0x1C17CF4
	283 Move W8, 1
	284 Move [X25+1926], W8
	285 Move X8, [X22]
	286 Move V0, [X31+24]
	287 Add S15, S15, S15
	288 Move X8, [X8+184]
	289 Add S14, S0, S0
	290 Move S0, [X8+24]
	291 Move S1, [X8+28]
	292 Move V2, [X8+32]
	293 Move W8, [X23+1925]
	294 Subtract S11, S0, S11
	295 Move V0, [X31+28]
	296 Subtract S12, S1, S12
	297 Subtract S13, S2, S13
	298 Add S8, S0, S0
	299 Compare W8, 0
	300 JumpIfNotEqual {306}
	301 Move X0, 0x2334000
	302 Move X0, [X0+1448]
	303 Call 0x1C17CF4
	304 Move W8, 1
	305 Move [X23+1925], W8
	306 Move X0, [X24]
	307 Subtract S11, S11, S15
	308 Subtract S12, S12, S14
	309 Subtract S13, S13, S8
	310 Move W8, [X0+224]
	311 Compare W8, 0
	312 JumpIfNotEqual {314}
	313 Call 0x1C17DFC
	314 Multiply S0, S11, S11
	315 Multiply S1, S12, S12
	316 Add S0, S0, S1
	317 Multiply S1, S13, S13
	318 Add S0, S1, S0
	319 NotImplemented "Instruction FSQRT not yet implemented."
	320 NotImplemented "Instruction FCMP not yet implemented."
	321 NotImplemented "Instruction FDIV not yet implemented."
	322 NotImplemented "Instruction FDIV not yet implemented."
	323 NotImplemented "Instruction FDIV not yet implemented."
	324 Move X20, 0x2619000
	325 Move W8, [X20+1923]
	326 Compare W8, 0
	327 JumpIfNotEqual {333}
	328 Move X0, 0x2334000
	329 Move X0, [X0+1440]
	330 Call 0x1C17CF4
	331 Move W8, 1
	332 Move [X20+1923], W8
	333 Move X8, [X22]
	334 Move X8, [X8+184]
	335 Move S11, [X8]
	336 Move S12, [X8+4]
	337 Move V13, [X8+8]
	338 Move X0, [X19+72]
	339 Compare X0, 0
	340 JumpIfEqual {376}
	341 Move X1, X31
	342 Call Component.get_transform, X0
	343 Move S1, [X31+16]
	344 Move S0, [X31+20]
	345 Move X20, X0
	346 Move V2, V10
	347 Move V3, V11
	348 Move V4, V12
	349 Move V5, V13
	350 Move X0, X31
	351 Call Quaternion.LookRotation, X0, X1
	352 Compare X20, 0
	353 JumpIfEqual {376}
	354 Move X0, X20
	355 Move X1, X31
	356 Call Transform.set_rotation, X0, X1
	357 Move [X19+80], W21
	358 Move X20, [X31+144]
	359 Move X19, [X31+152]
	360 Move X22, [X31+128]
	361 Move X21, [X31+136]
	362 Move X24, [X31+112]
	363 Move X23, [X31+120]
	364 Move X30, [X31+96]
	365 Move X25, [X31+104]
	366 Move D9, [X31+80]
	367 Move D8, [X31+88]
	368 Move D11, [X31+64]
	369 Move D10, [X31+72]
	370 Move D13, [X31+48]
	371 Move D12, [X31+56]
	372 Move D15, [X31+32]
	373 Move D14, [X31+40]
	374 Add X31, X31, 160
	375 Return 
	376 Call 0x1C17F20

Method: System.Void TestPrimaryButton()

Disassembly:
	0x01DC04B8 ADRP X0, 0x2333000
	0x01DC04BC LDR X0, [X0 + 0x5A8]
	0x01DC04C0 BL 0x1C16CF4
	0x01DC04C4 MOVZ W8, 0x1
	0x01DC04C8 STRB W8, [X20 + 0x785]
	0x01DC04CC ADRP X8, 0x2333000
	0x01DC04D0 LDR X8, [X8 + 0x5A8]
	0x01DC04D4 LDR X0, [X8]
	0x01DC04D8 LDR W8, [X0 + 0xE0]
	0x01DC04DC CBNZ W8, 0x1DC04E4
	0x01DC04E0 BL 0x1C16DFC
	0x01DC04E4 ADRP X8, 0xFFFFFFFFFED2A000
	0x01DC04E8 FMUL S0, S8, S8
	0x01DC04EC FMOV S1, W31
	0x01DC04F0 LDR V3, [X8 + 0x17C]
	0x01DC04F4 FADD S0, S0, S1
	0x01DC04F8 FMUL S2, S9, S9
	0x01DC04FC FADD S0, S2, S0
	0x01DC0500 FSQRT S2, S0
	0x01DC0504 FCMP S2, S3
	0x01DC0508 B.LE 0x1DC051C
	0x01DC050C FDIV S0, S8, S2
	0x01DC0510 FDIV S1, S1, S2
	0x01DC0514 FDIV S2, S9, S2
	0x01DC0518 B 0x1DC0554
	0x01DC051C ADRP X20, 0x2618000
	0x01DC0520 LDRB W8, [X20 + 0x783]
	0x01DC0524 CBNZ W8, 0x1DC053C
	0x01DC0528 ADRP X0, 0x2333000
	0x01DC052C LDR X0, [X0 + 0x5A0]
	0x01DC0530 BL 0x1C16CF4
	0x01DC0534 MOVZ W8, 0x1
	0x01DC0538 STRB W8, [X20 + 0x783]
	0x01DC053C ADRP X8, 0x2333000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2619000
	005 Move W8, [X20+2919]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x2337000
	012 Move X0, [X0+3480]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2919], W8
	016 Move X8, [X19+72]
	017 Compare X8, 0
	018 JumpIfEqual {42}
	019 Move X9, 0x2337000
	020 Move X9, [X9+3480]
	021 Move W10, [X8+164]
	022 Move X9, [X9]
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move X8, [X9+184]
	025 Move X8, [X8+136]
	026 Compare X8, 0
	027 JumpIfEqual {38}
	028 Move X2, [X8+24]
	029 Move X0, [X8+64]
	030 Move X1, [X8+40]
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 CallNoReturn X2
	035 Move X8, [X8+152]
	036 Compare X8, 0
	037 JumpIfNotEqual {28}
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move X30, [X31+32]
	041 Return 
	042 Call 0x1C17F20

Method: System.Void TestSecondaryButton()

Disassembly:
	0x01DC0540 LDR X8, [X8 + 0x5A0]
	0x01DC0544 LDR X8, [X8]
	0x01DC0548 LDR X8, [X8 + 0xB8]
	0x01DC054C LDP S0, S1, [X8]
	0x01DC0550 LDR V2, [X8 + 0x8]
	0x01DC0554 LDR X0, [X19 + 0x70]
	0x01DC0558 STR S0, [X19 + 0x118]
	0x01DC055C STR S1, [X19 + 0x11C]
	0x01DC0560 STR S2, [X19 + 0x120]
	0x01DC0564 CBZ X0, 0x1DC0730
	0x01DC0568 ADRP X20, 0x2338000
	0x01DC056C LDR X20, [X20 + 0x50]
	0x01DC0570 LDR X1, [X20]
	0x01DC0574 BL 0x21A3894
	0x01DC0578 LDR X8, [X19 + 0x78]
	0x01DC057C STR X0, [X19 + 0x148]
	0x01DC0580 CBZ X8, 0x1DC0730
	0x01DC0584 ADRP X21, 0x2333000
	0x01DC0588 LDR X21, [X21 + 0x638]
	0x01DC058C LDR X1, [X20]
	0x01DC0590 ADRP X24, 0x2336000
	0x01DC0594 ADRP X25, 0x2334000
	0x01DC0598 ADRP X26, 0x2338000
	0x01DC059C LDR X24, [X24 + 0xD98]
	0x01DC05A0 LDR X25, [X25 + 0xE70]
	0x01DC05A4 LDR X26, [X26 + 0x68]
	0x01DC05A8 MOV X0, X8
	0x01DC05AC BL 0x21A3894
	0x01DC05B0 STR X0, [X19 + 0x150]
	0x01DC05B4 LDR X0, [X21]
	0x01DC05B8 MOVZ W1, 0x6
	0x01DC05BC BL 0x1C16D6C
	0x01DC05C0 STR X0, [X19 + 0xE8]
	0x01DC05C4 LDR X8, [X24]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2619000
	005 Move W8, [X20+2920]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x2337000
	012 Move X0, [X0+3480]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2920], W8
	016 Move X8, [X19+72]
	017 Compare X8, 0
	018 JumpIfEqual {42}
	019 Move X9, 0x2337000
	020 Move X9, [X9+3480]
	021 Move W10, [X8+164]
	022 Move X9, [X9]
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move X8, [X9+184]
	025 Move X8, [X8+200]
	026 Compare X8, 0
	027 JumpIfEqual {38}
	028 Move X2, [X8+24]
	029 Move X0, [X8+64]
	030 Move X1, [X8+40]
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 CallNoReturn X2
	035 Move X8, [X8+216]
	036 Compare X8, 0
	037 JumpIfNotEqual {28}
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move X30, [X31+32]
	041 Return 
	042 Call 0x1C17F20

Method: System.Void TestTrigger()

Disassembly:
	0x01DC05C8 LDR X0, [X25]
	0x01DC05CC LDR X8, [X8 + 0xB8]
	0x01DC05D0 LDR X20, [X8 + 0x148]
	0x01DC05D4 BL 0x1C16F10
	0x01DC05D8 LDR X2, [X26]
	0x01DC05DC MOV X1, X19
	0x01DC05E0 MOV X3, X31
	0x01DC05E4 MOV X21, X0
	0x01DC05E8 BL 0x3314368
	0x01DC05EC MOV X0, X20
	0x01DC05F0 MOV X1, X21
	0x01DC05F4 MOV X2, X31
	0x01DC05F8 BL 0x33C0DE4
	0x01DC05FC CBZ X0, 0x1DC062C
	0x01DC0600 LDR X1, [X25]
	0x01DC0604 LDR X8, [X0]
	0x01DC0608 CMP X8, X1
	0x01DC060C B.NE 0x1DC0414
	0x01DC0610 LDR X8, [X24]
	0x01DC0614 LDR X8, [X8 + 0xB8]
	0x01DC0618 STR X0, [X8 + 0x148]
	0x01DC061C LDR X8, [X0]
	0x01DC0620 CMP X8, X1
	0x01DC0624 B.EQ 0x1DC0638
	0x01DC0628 B 0x1DC0414
	0x01DC062C LDR X8, [X24]
	0x01DC0630 LDR X8, [X8 + 0xB8]
	0x01DC0634 STR X0, [X8 + 0x148]
	0x01DC0638 ADRP X8, 0x2333000
	0x01DC063C LDR X8, [X8 + 0xDA0]
	0x01DC0640 ADRP X20, 0x2338000
	0x01DC0644 ADRP X21, 0x2333000
	0x01DC0648 LDR X0, [X8]
	0x01DC064C LDR X20, [X20 + 0x60]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2619000
	005 Move W8, [X20+2921]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x2337000
	012 Move X0, [X0+3480]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2921], W8
	016 Move X8, [X19+72]
	017 Compare X8, 0
	018 JumpIfEqual {42}
	019 Move X9, 0x2337000
	020 Move X9, [X9+3480]
	021 Move W10, [X8+164]
	022 Move X9, [X9]
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move X8, [X9+184]
	025 Move X8, [X8+72]
	026 Compare X8, 0
	027 JumpIfEqual {38}
	028 Move X2, [X8+24]
	029 Move X0, [X8+64]
	030 Move X1, [X8+40]
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 CallNoReturn X2
	035 Move X8, [X8+88]
	036 Compare X8, 0
	037 JumpIfNotEqual {28}
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move X30, [X31+32]
	041 Return 
	042 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x01DC0650 LDR X21, [X21 + 0xDB0]
	0x01DC0654 BL 0x1C16F10
	0x01DC0658 LDR X2, [X20]
	0x01DC065C MOV X1, X19
	0x01DC0660 MOV X3, X31
	0x01DC0664 MOV X20, X0
	0x01DC0668 BL 0x35C52F0
	0x01DC066C LDR X0, [X21]
	0x01DC0670 MOVZ W1, 0x1
	0x01DC0674 BL 0x1C16D6C
	0x01DC0678 LDR X8, [X22]
	0x01DC067C MOV X19, X0
	0x01DC0680 LDR W9, [X8 + 0xE0]
	0x01DC0684 CBNZ W9, 0x1DC0690
	0x01DC0688 MOV X0, X8
	0x01DC068C BL 0x1C16DFC
	0x01DC0690 LDRB W8, [X23 + 0x787]
	0x01DC0694 CBNZ W8, 0x1DC06AC
	0x01DC0698 ADRP X0, 0x2333000
	0x01DC069C LDR X0, [X0 + 0x648]
	0x01DC06A0 BL 0x1C16CF4
	0x01DC06A4 MOVZ W8, 0x1
	0x01DC06A8 STRB W8, [X23 + 0x787]
	0x01DC06AC LDR X0, [X22]
	0x01DC06B0 LDR W8, [X0 + 0xE0]
	0x01DC06B4 CBNZ W8, 0x1DC06C0
	0x01DC06B8 BL 0x1C16DFC
	0x01DC06BC LDR X0, [X22]
	0x01DC06C0 LDR X8, [X0 + 0xB8]
	0x01DC06C4 LDR X8, [X8]
	0x01DC06C8 CBZ X8, 0x1DC0730
	0x01DC06CC LDR X8, [X8 + 0xB8]
	0x01DC06D0 CBZ X8, 0x1DC0730
	0x01DC06D4 CBZ X19, 0x1DC0730
	0x01DC06D8 LDR X21, [X8 + 0x70]
	0x01DC06DC CBZ X21, 0x1DC06F4
	0x01DC06E0 LDR X8, [X19]
	0x01DC06E4 MOV X0, X21
	0x01DC06E8 LDR X1, [X8 + 0x40]
	0x01DC06EC BL 0x1C16E00
	0x01DC06F0 CBZ X0, 0x1DC0738
	0x01DC06F4 LDR W8, [X19 + 0x18]
	0x01DC06F8 CBZ W8, 0x1DC0734
	0x01DC06FC MOV X0, X20
	0x01DC0700 MOV X1, X19
	0x01DC0704 MOV X2, X31
	0x01DC0708 STR X21, [X19 + 0x20]
	0x01DC070C BL 0x1D363F0
	0x01DC0710 LDP X20, X19, [X31 + 0x60]
	0x01DC0714 LDP X22, X21, [X31 + 0x50]
	0x01DC0718 LDP X24, X23, [X31 + 0x40]
	0x01DC071C LDP X26, X25, [X31 + 0x30]
	0x01DC0720 LDR X30, [X31 + 0x20]
	0x01DC0724 LDP D9, D8, [X31 + 0x10]
	0x01DC0728 ADD X31, X31, 0x70
	0x01DC072C RET
	0x01DC0730 BL 0x1C16F20
	0x01DC0734 BL 0x1C16F28
	0x01DC0738 BL 0x1C16F44
	0x01DC073C MOV X1, X31
	0x01DC0740 BL 0x1C16DEC
	0x01DC0744 STR X30, [X31 - 0x30]!
	0x01DC0748 STP X22, X21, [X31 + 0x10]
	0x01DC074C STP X20, X19, [X31 + 0x20]
	0x01DC0750 ADRP X22, 0x2618000
	0x01DC0754 ADRP X21, 0x2335000
	0x01DC0758 LDRB W8, [X22 + 0xB82]
	0x01DC075C LDR X21, [X21 + 0x7C8]
	0x01DC0760 MOV W20, W1
	0x01DC0764 MOV X19, X0
	0x01DC0768 TBNZ X8, 0x0, 0x1DC0780
	0x01DC076C ADRP X0, 0x2335000
	0x01DC0770 LDR X0, [X0 + 0x7C8]
	0x01DC0774 BL 0x1C16CF4
	0x01DC0778 MOVZ W8, 0x1
	0x01DC077C STRB W8, [X22 + 0xB82]
	0x01DC0780 STR W20, [X19 + 0x88]
	0x01DC0784 LDR X0, [X21]
	0x01DC0788 LDR W8, [X0 + 0xE0]
	0x01DC078C CBNZ W8, 0x1DC0798
	0x01DC0790 BL 0x1C16DFC
	0x01DC0794 LDR X0, [X21]
	0x01DC0798 LDR X8, [X0 + 0xB8]
	0x01DC079C LDR X8, [X8 + 0x28]
	0x01DC07A0 CBZ X8, 0x1DC07C4
	0x01DC07A4 LDR W1, [X19 + 0x88]
	0x01DC07A8 LDR X3, [X8 + 0x18]
	0x01DC07AC LDR X0, [X8 + 0x40]
	0x01DC07B0 LDR X2, [X8 + 0x28]
	0x01DC07B4 LDP X20, X19, [X31 + 0x20]
	0x01DC07B8 LDP X22, X21, [X31 + 0x10]
	0x01DC07BC LDR X30, [X31], #0x30
	0x01DC07C0 BR X3
	0x01DC07C4 LDP X20, X19, [X31 + 0x20]
	0x01DC07C8 LDP X22, X21, [X31 + 0x10]
	0x01DC07CC LDR X30, [X31], #0x30
	0x01DC07D0 RET
	0x01DC07D4 STP X30, X21, [X31 - 0x20]!
	0x01DC07D8 STP X20, X19, [X31 + 0x10]
	0x01DC07DC MOV X20, X0
	0x01DC07E0 STP X2, X3, [X0 + 0x58]
	0x01DC07E4 LDR X0, [X0 + 0xA8]
	0x01DC07E8 MOV X21, X1
	0x01DC07EC AND W1, W7, 0x1
	0x01DC07F0 STP X4, X5, [X20 + 0x68]
	0x01DC07F4 STR X6, [X20 + 0x78]
	0x01DC07F8 STRB W1, [X20 + 0x1C8]
	0x01DC07FC CBZ X0, 0x1DC0888
	0x01DC0800 MOV X2, X31
	0x01DC0804 MOV W19, W7
	0x01DC0808 BL 0x1E1EB4C
	0x01DC080C LDR X0, [X20 + 0xA8]
	0x01DC0810 CBZ X0, 0x1DC0888
	0x01DC0814 MOV X1, X21
	0x01DC0818 MOV X2, X31
	0x01DC081C BL 0x1E1F0D8
	0x01DC0820 FMOV S0, W31
	0x01DC0824 FMOV S1, W31
	0x01DC0828 FMOV S2, W31
	0x01DC082C MOV X0, X20
	0x01DC0830 MOV W1, W31
	0x01DC0834 BL 0x1DC4E6C
	0x01DC0838 LDR X8, [X20 + 0xD8]
	0x01DC083C CBZ X8, 0x1DC0888
	0x01DC0840 LDR W9, [X8 + 0x18]
	0x01DC0844 CMP W9, 0x1
	0x01DC0848 B.LT 0x1DC087C
	0x01DC084C ORN W11, W31, W19, 0x0
	0x01DC0850 MOV W10, W31
	0x01DC0854 AND W11, W11, 0x1
	0x01DC0858 CMP W9, W10
	0x01DC085C B.EQ 0x1DC088C
	0x01DC0860 ADD X12, X8, W10, 0x3, SXTW
	0x01DC0864 LDR X12, [X12 + 0x20]
	0x01DC0868 CBZ X12, 0x1DC0888
	0x01DC086C ADD W10, W10, 0x1
	0x01DC0870 CMP W9, W10
	0x01DC0874 STRB W11, [X12 + 0x20]
	0x01DC0878 B.NE 0x1DC0858
	0x01DC087C LDP X20, X19, [X31 + 0x10]
	0x01DC0880 LDP X30, X21, [X31], #0x20
	0x01DC0884 RET
	0x01DC0888 BL 0x1C16F20
	0x01DC088C BL 0x1C16F28
	0x01DC0890 FMOV S1, W31
	0x01DC0894 RET
	0x01DC0898 STP X30, X23, [X31 - 0x30]!
	0x01DC089C STP X22, X21, [X31 + 0x10]
	0x01DC08A0 STP X20, X19, [X31 + 0x20]
	0x01DC08A4 ADRP X21, 0x2618000
	0x01DC08A8 ADRP X20, 0x2335000
	0x01DC08AC LDRB W8, [X21 + 0xB7B]
	0x01DC08B0 LDR X20, [X20 + 0x7C8]
	0x01DC08B4 MOV X19, X0
	0x01DC08B8 TBNZ X8, 0x0, 0x1DC093C
	0x01DC08BC ADRP X0, 0x2338000
	0x01DC08C0 LDR X0, [X0 + 0x40]
	0x01DC08C4 BL 0x1C16CF4
	0x01DC08C8 ADRP X0, 0x2334000
	0x01DC08CC LDR X0, [X0 + 0xE70]
	0x01DC08D0 BL 0x1C16CF4
	0x01DC08D4 ADRP X0, 0x2333000
	0x01DC08D8 LDR X0, [X0 + 0x648]
	0x01DC08DC BL 0x1C16CF4
	0x01DC08E0 ADRP X0, 0x2336000
	0x01DC08E4 LDR X0, [X0 + 0xD28]
	0x01DC08E8 BL 0x1C16CF4
	0x01DC08EC ADRP X0, 0x2333000
	0x01DC08F0 LDR X0, [X0 + 0xDA0]
	0x01DC08F4 BL 0x1C16CF4
	0x01DC08F8 ADRP X0, 0x2338000
	0x01DC08FC LDR X0, [X0 + 0x60]
	0x01DC0900 BL 0x1C16CF4
	0x01DC0904 ADRP X0, 0x2338000
	0x01DC0908 LDR X0, [X0 + 0x68]
	0x01DC090C BL 0x1C16CF4
	0x01DC0910 ADRP X0, 0x2338000
	0x01DC0914 LDR X0, [X0 + 0x80]
	0x01DC0918 BL 0x1C16CF4
	0x01DC091C ADRP X0, 0x2335000
	0x01DC0920 LDR X0, [X0 + 0x7C8]
	0x01DC0924 BL 0x1C16CF4
	0x01DC0928 ADRP X0, 0x2336000
	0x01DC092C LDR X0, [X0 + 0xD98]
	0x01DC0930 BL 0x1C16CF4
	0x01DC0934 MOVZ W8, 0x1
	0x01DC0938 STRB W8, [X21 + 0xB7B]
	0x01DC093C LDR X0, [X20]
	0x01DC0940 ADRP X23, 0x2336000
	0x01DC0944 ADRP X22, 0x2338000
	0x01DC0948 ADRP X21, 0x2338000
	0x01DC094C LDR W8, [X0 + 0xE0]
	0x01DC0950 LDR X23, [X23 + 0xD28]
	0x01DC0954 LDR X22, [X22 + 0x40]
	0x01DC0958 LDR X21, [X21 + 0x80]
	0x01DC095C CBNZ W8, 0x1DC0968
	0x01DC0960 BL 0x1C16DFC
	0x01DC0964 LDR X0, [X20]
	0x01DC0968 LDR X8, [X0 + 0xB8]
	0x01DC096C STR X31, [X8]
	0x01DC0970 LDR X8, [X23]
	0x01DC0974 LDR X0, [X22]
	0x01DC0978 LDR X8, [X8 + 0xB8]
	0x01DC097C LDR X20, [X8 + 0x18]
	0x01DC0980 BL 0x1C16F10
	0x01DC0984 LDR X2, [X21]
	0x01DC0988 MOV X1, X19
	0x01DC098C MOV X3, X31
	0x01DC0990 MOV X21, X0
	0x01DC0994 BL 0x2A6B5B4
	0x01DC0998 MOV X0, X20
	0x01DC099C MOV X1, X21
	0x01DC09A0 MOV X2, X31
	0x01DC09A4 BL 0x33C0FDC
	0x01DC09A8 CBZ X0, 0x1DC09EC
	0x01DC09AC LDR X21, [X22]
	0x01DC09B0 MOV X20, X0
	0x01DC09B4 MOV X1, X21
	0x01DC09B8 BL 0x1C16E00
	0x01DC09BC CBZ X0, 0x1DC09E0
	0x01DC09C0 LDR X8, [X23]
	0x01DC09C4 LDR X8, [X8 + 0xB8]
	0x01DC09C8 STR X0, [X8 + 0x18]
	0x01DC09CC LDR X21, [X22]
	0x01DC09D0 MOV X0, X20
	0x01DC09D4 MOV X1, X21
	0x01DC09D8 BL 0x1C16E00
	0x01DC09DC CBNZ X0, 0x1DC09F8
	0x01DC09E0 MOV X0, X20
	0x01DC09E4 MOV X1, X21
	0x01DC09E8 B 0x1DC0A74
	0x01DC09EC LDR X8, [X23]
	0x01DC09F0 LDR X8, [X8 + 0xB8]
	0x01DC09F4 STR X31, [X8 + 0x18]
	0x01DC09F8 ADRP X22, 0x2336000
	0x01DC09FC LDR X22, [X22 + 0xD98]
	0x01DC0A00 ADRP X23, 0x2334000
	0x01DC0A04 ADRP X21, 0x2338000
	0x01DC0A08 LDR X8, [X22]
	0x01DC0A0C LDR X8, [X8 + 0xB8]
	0x01DC0A10 LDR X23, [X23 + 0xE70]
	0x01DC0A14 LDR X20, [X8 + 0x148]
	0x01DC0A18 LDR X0, [X23]
	0x01DC0A1C LDR X21, [X21 + 0x68]
	0x01DC0A20 BL 0x1C16F10
	0x01DC0A24 LDR X2, [X21]
	0x01DC0A28 MOV X1, X19
	0x01DC0A2C MOV X3, X31
	0x01DC0A30 MOV X21, X0
	0x01DC0A34 BL 0x3314368
	0x01DC0A38 MOV X0, X20
	0x01DC0A3C MOV X1, X21
	0x01DC0A40 MOV X2, X31
	0x01DC0A44 BL 0x33C0FDC
	0x01DC0A48 CBZ X0, 0x1DC0A78
	0x01DC0A4C LDR X1, [X23]
	0x01DC0A50 LDR X8, [X0]
	0x01DC0A54 CMP X8, X1
	0x01DC0A58 B.NE 0x1DC0A74
	0x01DC0A5C LDR X8, [X22]

ISIL:
	001 Move X1, X31
	002 Call MonoBehaviour..ctor, X0
	003 Return 
	004 Subtract X31, X31, 64
	005 Move [X31+16], X30
	006 Move [X31+32], X22
	007 Move [X31+40], X21
	008 Move [X31+48], X20
	009 Move [X31+56], X19
	010 Move X22, 0x2619000
	011 Move W8, [X22+2929]
	012 Move X21, X2
	013 Move X19, X1
	014 Move X20, X0
	015 Compare W8, 0
	016 JumpIfNotEqual {25}
	017 Move X0, 0x2338000
	018 Move X0, [X0+4056]
	019 Call 0x1C17CF4
	020 Move X0, 0x2337000
	021 Move X0, [X0+3648]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+2929], W8
	025 Move [X31], X31
	026 Move X0, [X20+88]
	027 Compare X0, 0
	028 JumpIfEqual {200}
	029 Move X1, X31
	030 Call SimulationConfig.get_AreaOfInterestEnabled, X0
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfNotEqual {139}
	035 Move X0, X20
	036 Move X1, X31
	037 Call Simulation.get_IsClient, X0
	038 Move TEMP, X0
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfNotEqual {53}
	042 Move X0, X20
	043 Move X1, X31
	044 Call Simulation.get_Topology, X0
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move X0, X20
	047 Move X1, X31
	048 Call Simulation.get_IsServer, X0
	049 Move TEMP, X0
	050 And TEMP, TEMP, 1
	051 Compare TEMP, 1
	052 JumpIfEqual {139}
	053 And X21, X21, 0
	054 Move X0, X20
	055 Move X1, X21
	056 Move X2, X31
	057 Call Simulation.PlayerValid, X0, X1
	058 Move TEMP, X0
	059 And TEMP, TEMP, 1
	060 Compare TEMP, 1
	061 JumpIfNotEqual {154}
	062 Move X0, X20
	063 Move X1, X21
	064 Move X2, X31
	065 Call Simulation.IsHostPlayer, X0, X1
	066 Move TEMP, X0
	067 And TEMP, TEMP, 1
	068 Compare TEMP, 1
	069 JumpIfEqual {139}
	070 Move X22, 0x2619000
	071 Move W8, [X22+2931]
	072 Compare W8, 0
	073 JumpIfNotEqual {79}
	074 Move X0, 0x2339000
	075 Move X0, [X0+32]
	076 Call 0x1C17CF4
	077 Move W8, 1
	078 Move [X22+2931], W8
	079 Move [X31+24], X31
	080 Move X0, [X20+184]
	081 Compare X0, 0
	082 JumpIfEqual {200}
	083 Move X8, 0x2339000
	084 Move X8, [X8+32]
	085 Add X2, X31, 24
	086 Move X1, X21
	087 Move X3, [X8]
	088 Call Dictionary`2<PlayerRef, Object>.TryGetValue, X0, X1, X2
	089 Move X20, [X31+24]
	090 Move W21, W0
	091 Move X0, X19
	092 Move X1, X31
	093 Call NetworkObject.op_Implicit, X0
	094 Compare X20, 0
	095 JumpIfEqual {200}
	096 Move TEMP, X21
	097 And TEMP, TEMP, 1
	098 Compare TEMP, 1
	099 JumpIfNotEqual {200}
	100 And X1, X0, 0
	101 Add X2, X31, 0
	102 Move X0, X20
	103 Move X3, X31
	104 Call SimulationConnection.TryGetObjectData, X0, X1, X2
	105 Move TEMP, X0
	106 And TEMP, TEMP, 1
	107 Compare TEMP, 1
	108 JumpIfNotEqual {194}
	109 Move X0, [X31]
	110 Compare X0, 0
	111 JumpIfEqual {200}
	112 Move W1, 3
	113 Move X2, X31
	114 Call NetworkObjectConnectionData.HasAnyPlayerDataFlag, X0, X1
	115 Move X8, 0x2338000
	116 Move X8, [X8+4056]
	117 NotImplemented "Instruction STRH not yet implemented."
	118 And W1, W0, 1
	119 Move X2, [X8]
	120 Move X8, [X20]
	121 Move X0, X20
	122 Move X9, [X8+616]
	123 Move X1, [X8+624]
	124 NotImplemented "Instruction BLR not yet implemented."
	125 Compare X19, 0
	126 JumpIfEqual {200}
	127 Move X8, [X19+32]
	128 Compare X8, 0
	129 JumpIfEqual {200}
	130 Move W1, [X8+32]
	131 And X2, X0, 0
	132 Move X0, X20
	133 Move X3, X31
	134 Call 0x1DC08E4
	135 Move TEMP, X0
	136 And TEMP, TEMP, 1
	137 Compare TEMP, 1
	138 JumpIfNotEqual {155}
	139 Move X8, 0x2338000
	140 Move X8, [X8+4056]
	141 NotImplemented "Instruction STRH not yet implemented."
	142 Move X2, [X8]
	143 Add X0, X31, 12
	144 Move W1, 1
	145 Call Nullable`1<Boolean>..ctor, X0, X1
	146 NotImplemented "Instruction LDRH not yet implemented."
	147 Move X20, [X31+48]
	148 Move X19, [X31+56]
	149 Move X22, [X31+32]
	150 Move X21, [X31+40]
	151 Move X30, [X31+16]
	152 Add X31, X31, 64
	153 Return 
	154 NotImplemented "Instruction STRH not yet implemented."
	155 Move X8, [X20]
	156 Move X0, X20
	157 Move X9, [X8+616]
	158 Move X1, [X8+624]
	159 NotImplemented "Instruction BLR not yet implemented."
	160 Move X8, 0x2337000
	161 Move X8, [X8+3648]
	162 Move X22, X0
	163 Move X8, [X8]
	164 Move W9, [X8+224]
	165 Compare W9, 0
	166 JumpIfNotEqual {169}
	167 Move X0, X8
	168 Call 0x1C17DFC
	169 NotImplemented "Instruction CMP not yet implemented."
	170 Compare X19, 0
	171 JumpIfEqual {200}
	172 Move X8, [X19+56]
	173 Compare X8, 0
	174 JumpIfEqual {200}
	175 Move X9, 0x2338000
	176 Move W8, [X8+168]
	177 Move X9, [X9+4056]
	178 NotImplemented "Instruction STRH not yet implemented."
	179 And W31, W8, 3
	180 Move X2, [X9]
	181 NotImplemented "Instruction CSET not yet implemented."
	182 Add X0, X31, 12
	183 And X1, X21, 0
	184 Move X0, X20
	185 Move X2, X31
	186 Call Simulation.IsHostPlayer, X0, X1
	187 NotImplemented "Instruction STRH not yet implemented."
	188 Move TEMP, X0
	189 And TEMP, TEMP, 1
	190 Compare TEMP, 1
	191 JumpIfNotEqual {146}
	192 Move X8, 0x2338000
	193 Move X8, [X8+4056]
	194 Move X8, 0x2338000
	195 Move X8, [X8+4056]
	196 Add X0, X31, 12
	197 Move W1, W31
	198 NotImplemented "Instruction STRH not yet implemented."
	199 Move X2, [X8]
	200 Call 0x1C17F20
	201 Subtract X31, X31, 64
	202 Move [X31+16], X30
	203 Move [X31+32], X22
	204 Move [X31+40], X21
	205 Move [X31+48], X20
	206 Move [X31+56], X19
	207 Move X22, 0x2619000
	208 Move W8, [X22+2930]
	209 Move X19, X2
	210 Move X21, X1
	211 Move X20, X0
	212 Compare W8, 0
	213 JumpIfNotEqual {225}
	214 Move X0, 0x2337000
	215 Move X0, [X0+920]
	216 Call 0x1C17CF4
	217 Move X0, 0x2337000
	218 Move X0, [X0+3648]
	219 Call 0x1C17CF4
	220 Move X0, 0x2339000
	221 Move X0, [X0+40]
	222 Call 0x1C17CF4
	223 Move W8, 1
	224 Move [X22+2930], W8
	225 Move X22, 0x2337000
	226 Move X22, [X22+3648]
	227 Move [X31+24], X31
	228 Move [X31+8], W31
	229 Move X0, [X22]
	230 Move W8, [X0+224]
	231 Compare W8, 0
	232 JumpIfEqual {235}
	233 Compare W19, 0
	234 JumpIfNotEqual {238}
	235 Call 0x1C17DFC
	236 Compare W19, 0
	237 JumpIfEqual {304}
	238 Move X0, [X22]
	239 Move W8, [X0+224]
	240 Compare W8, 0
	241 JumpIfNotEqual {243}
	242 Call 0x1C17DFC
	243 NotImplemented "Instruction CMP not yet implemented."
	244 Move W0, 1
	245 Move X0, [X22]
	246 Move W8, [X0+224]
	247 Compare W8, 0
	248 JumpIfEqual {285}
	249 Compare W21, 0
	250 JumpIfEqual {288}
	251 Move X0, [X22]
	252 Move W8, [X0+224]
	253 Compare W8, 0
	254 JumpIfNotEqual {256}
	255 Call 0x1C17DFC
	256 Add W31, W21, 1
	257 Move X8, 0x2337000
	258 Move X8, [X8+920]
	259 Move X0, [X8]
	260 Move W8, [X0+224]
	261 Compare W8, 0
	262 JumpIfNotEqual {264}
	263 Call 0x1C17DFC
	264 Move X0, X31
	265 Call NetworkId.get_RuntimeConfig
	266 Move X8, 0x2339000
	267 Move X8, [X8+40]
	268 And X1, X0, 0
	269 Add X2, X31, 24
	270 Move X0, X20
	271 Move X3, [X8]
	272 Call Simulation.TryGetStructData, X0, X1, X2
	273 Move TEMP, X0
	274 And TEMP, TEMP, 1
	275 Compare TEMP, 1
	276 JumpIfNotEqual {304}
	277 Move X8, [X31+24]
	278 Compare X8, 0
	279 JumpIfEqual {312}
	280 Move X0, [X22]
	281 Move W20, [X8+24]
	282 Move W9, [X0+224]
	283 Compare W9, 0
	284 JumpIfNotEqual {302}
	285 Call 0x1C17DFC
	286 Compare W21, 0
	287 JumpIfNotEqual {251}
	288 Add X1, X31, 8
	289 Move X0, X20
	290 Move X2, X31
	291 Call Simulation.TryGetHostPlayer, X0, X1
	292 Move TEMP, X0
	293 And TEMP, TEMP, 1
	294 Compare TEMP, 1
	295 JumpIfNotEqual {304}
	296 Move X0, [X22]
	297 Move W20, [X31+8]
	298 Move W8, [X0+224]
	299 Compare W8, 0
	300 JumpIfNotEqual {302}
	301 Call 0x1C17DFC
	302 NotImplemented "Instruction CMP not yet implemented."
	303 NotImplemented "Instruction CSET not yet implemented."
	304 Move W0, W31
	305 Move X20, [X31+48]
	306 Move X19, [X31+56]
	307 Move X22, [X31+32]
	308 Move X21, [X31+40]
	309 Move X30, [X31+16]
	310 Add X31, X31, 64
	311 Return 
	312 Call 0x1C17F20

