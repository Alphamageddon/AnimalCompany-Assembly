Type: AnimalCompany.SetTargetRoomAction

Method: System.Void .ctor(System.String roomCode, AnimalCompany.SessionProperties properties)

Disassembly:
	0x01DBB708 MOV X0, X20
	0x01DBB70C BL 0x1C16CF4
	0x01DBB710 LDR X0, [X20]
	0x01DBB714 MOVZ W8, 0x1
	0x01DBB718 STRB W8, [X22 + 0x787]
	0x01DBB71C LDR W8, [X0 + 0xE0]
	0x01DBB720 CBNZ W8, 0x1DBB72C
	0x01DBB724 BL 0x1C16DFC
	0x01DBB728 LDR X0, [X20]
	0x01DBB72C LDR X8, [X0 + 0xB8]
	0x01DBB730 LDR X8, [X8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, X1
	006 Move X1, X31
	007 Move X19, X2
	008 Move X21, X0
	009 Call BaseAction..ctor, X0
	010 Move [X21+24], X20
	011 Move [X21+32], X19
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move X30, [X31+32]
	015 Move X21, [X31+40]
	016 Return 

Method: System.Void Execute(AnimalCompany.AppState state)

Disassembly:
	0x01DBB734 CBZ X8, 0x1DBB780
	0x01DBB738 LDR X8, [X8 + 0xE0]
	0x01DBB73C CBZ X8, 0x1DBB780
	0x01DBB740 LDR X8, [X8 + 0x50]
	0x01DBB744 CBZ X8, 0x1DBB780
	0x01DBB748 LDR X1, [X8 + 0x50]
	0x01DBB74C MOV X0, X21
	0x01DBB750 MOV X2, X31
	0x01DBB754 BL 0x3226EF8
	0x01DBB758 TBZ X0, 0x0, 0x1DBB770
	0x01DBB75C MOV X0, X19
	0x01DBB760 LDP X20, X19, [X31 + 0x20]
	0x01DBB764 LDP X22, X21, [X31 + 0x10]
	0x01DBB768 LDR X30, [X31], #0x30
	0x01DBB76C B 0x1DBB3E4
	0x01DBB770 LDP X20, X19, [X31 + 0x20]
	0x01DBB774 LDP X22, X21, [X31 + 0x10]
	0x01DBB778 LDR X30, [X31], #0x30
	0x01DBB77C RET
	0x01DBB780 BL 0x1C16F20
	0x01DBB784 STP X30, X21, [X31 - 0x20]!
	0x01DBB788 STP X20, X19, [X31 + 0x10]
	0x01DBB78C ADRP X20, 0x261D000
	0x01DBB790 ADRP X21, 0x233C000
	0x01DBB794 LDRB W8, [X20 + 0xB47]
	0x01DBB798 LDR X21, [X21 + 0xDB8]
	0x01DBB79C MOV X19, X0
	0x01DBB7A0 TBNZ X8, 0x0, 0x1DBB7B8
	0x01DBB7A4 ADRP X0, 0x233C000
	0x01DBB7A8 LDR X0, [X0 + 0xDB8]
	0x01DBB7AC BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x261E000
	006 Move W8, [X21+2873]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x2339000
	014 Move X0, [X0+2304]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2873], W8
	018 Compare X20, 0
	019 JumpIfEqual {42}
	020 Move X8, [X20+240]
	021 Compare X8, 0
	022 JumpIfEqual {42}
	023 Move X0, [X8+72]
	024 Compare X0, 0
	025 JumpIfEqual {42}
	026 Move X8, 0x2339000
	027 Move X8, [X8+2304]
	028 Move X1, [X19+24]
	029 Move X2, [X8]
	030 Call StatePrimitive`1<Object>.set_value, X0, X1
	031 Move X8, [X20+240]
	032 Compare X8, 0
	033 JumpIfEqual {42}
	034 Move X0, [X8+80]
	035 Compare X0, 0
	036 JumpIfEqual {42}
	037 Move X1, [X19+32]
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move X30, [X31+32]
	041 Move X21, [X31+40]
	042 Call 0x1C17F20

