Type: AnimalCompany.LoadingScreenView

Method: System.Void Awake()

Disassembly:
	0x01DAB530 BL 0x1C16D08
	0x01DAB534 BL 0x1C16F10
	0x01DAB538 MOV X19, X0
	0x01DAB53C ADRP X0, 0x234C000
	0x01DAB540 LDR X0, [X0 + 0x6E0]
	0x01DAB544 BL 0x1C16D08
	0x01DAB548 MOV X1, X0
	0x01DAB54C MOV X0, X19
	0x01DAB550 MOV X2, X31
	0x01DAB554 BL 0x337DF1C
	0x01DAB558 ADRP X0, 0x234C000
	0x01DAB55C LDR X0, [X0 + 0x6E8]
	0x01DAB560 BL 0x1C16D08
	0x01DAB564 MOV X1, X0
	0x01DAB568 MOV X0, X19
	0x01DAB56C BL 0x1C16DEC
	0x01DAB570 STP X30, X19, [X31 - 0x10]!
	0x01DAB574 LDR X8, [X0 + 0x50]
	0x01DAB578 CBZ X8, 0x1DAB588
	0x01DAB57C STR W1, [X8 + 0x304]
	0x01DAB580 LDP X30, X19, [X31], #0x10
	0x01DAB584 RET
	0x01DAB588 ADRP X0, 0x2348000
	0x01DAB58C LDR X0, [X0 + 0x5B0]
	0x01DAB590 BL 0x1C16D08
	0x01DAB594 BL 0x1C16F10
	0x01DAB598 MOV X19, X0
	0x01DAB59C ADRP X0, 0x234C000
	0x01DAB5A0 LDR X0, [X0 + 0x6E0]
	0x01DAB5A4 BL 0x1C16D08
	0x01DAB5A8 MOV X1, X0
	0x01DAB5AC MOV X0, X19
	0x01DAB5B0 MOV X2, X31
	0x01DAB5B4 BL 0x337DF1C
	0x01DAB5B8 ADRP X0, 0x234C000
	0x01DAB5BC LDR X0, [X0 + 0x6F0]
	0x01DAB5C0 BL 0x1C16D08
	0x01DAB5C4 MOV X1, X0
	0x01DAB5C8 MOV X0, X19
	0x01DAB5CC BL 0x1C16DEC
	0x01DAB5D0 SUB X31, X31, 0x30
	0x01DAB5D4 STP X30, X21, [X31 + 0x10]
	0x01DAB5D8 STP X20, X19, [X31 + 0x20]
	0x01DAB5DC ADRP X20, 0x262D000
	0x01DAB5E0 LDRB W8, [X20 + 0xAD1]
	0x01DAB5E4 MOV X19, X0
	0x01DAB5E8 TBNZ X8, 0x0, 0x1DAB66C
	0x01DAB5EC ADRP X0, 0x2348000
	0x01DAB5F0 LDR X0, [X0 + 0x710]
	0x01DAB5F4 BL 0x1C16CF4
	0x01DAB5F8 ADRP X0, 0x2348000
	0x01DAB5FC LDR X0, [X0 + 0x718]
	0x01DAB600 BL 0x1C16CF4
	0x01DAB604 ADRP X0, 0x2348000
	0x01DAB608 LDR X0, [X0 + 0x720]
	0x01DAB60C BL 0x1C16CF4
	0x01DAB610 ADRP X0, 0x234C000
	0x01DAB614 LDR X0, [X0 + 0x628]
	0x01DAB618 BL 0x1C16CF4
	0x01DAB61C ADRP X0, 0x2348000
	0x01DAB620 LDR X0, [X0 + 0x788]
	0x01DAB624 BL 0x1C16CF4
	0x01DAB628 ADRP X0, 0x234C000
	0x01DAB62C LDR X0, [X0 + 0x610]
	0x01DAB630 BL 0x1C16CF4
	0x01DAB634 ADRP X0, 0x234C000
	0x01DAB638 LDR X0, [X0 + 0x6F8]
	0x01DAB63C BL 0x1C16CF4
	0x01DAB640 ADRP X0, 0x234C000
	0x01DAB644 LDR X0, [X0 + 0x700]
	0x01DAB648 BL 0x1C16CF4
	0x01DAB64C ADRP X0, 0x234C000
	0x01DAB650 LDR X0, [X0 + 0x708]
	0x01DAB654 BL 0x1C16CF4
	0x01DAB658 ADRP X0, 0x234C000
	0x01DAB65C LDR X0, [X0 + 0x710]
	0x01DAB660 BL 0x1C16CF4
	0x01DAB664 MOVZ W8, 0x1
	0x01DAB668 STRB W8, [X20 + 0xAD1]
	0x01DAB66C MOV X0, X19
	0x01DAB670 MOV X1, X31
	0x01DAB674 BL 0x1E73F88
	0x01DAB678 LDR X0, [X19 + 0x40]
	0x01DAB67C CBZ X0, 0x1DAB79C
	0x01DAB680 LDRB W8, [X0 + 0x60]
	0x01DAB684 TBNZ X8, 0x1, 0x1DAB79C
	0x01DAB688 MOV X1, X31
	0x01DAB68C BL 0x1E93668
	0x01DAB690 TBZ X0, 0x0, 0x1DAB79C
	0x01DAB694 MOV X0, X19

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x262E000
	007 Move X22, 0x234D000
	008 Move X21, 0x2349000
	009 Move W8, [X20+2755]
	010 Move X22, [X22+1528]
	011 Move X21, [X21+1432]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {31}
	017 Move X0, 0x2349000
	018 Move X0, [X0+2416]
	019 Call 0x1C17CF4
	020 Move X0, 0x234D000
	021 Move X0, [X0+1528]
	022 Call 0x1C17CF4
	023 Move X0, 0x2349000
	024 Move X0, [X0+1432]
	025 Call 0x1C17CF4
	026 Move X0, 0x234D000
	027 Move X0, [X0+1536]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X20+2755], W8
	031 Move X8, [X22]
	032 Move X0, [X21]
	033 Move X8, [X8+184]
	034 Move W9, [X0+224]
	035 Move X20, [X8]
	036 Compare W9, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Move X0, X20
	040 Move X1, X31
	041 Move X2, X31
	042 Call Object.op_Inequality, X0, X1
	043 Move TEMP, X0
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfNotEqual {66}
	047 Move X0, X19
	048 Move X1, X31
	049 Call Component.get_gameObject, X0
	050 Move X8, [X21]
	051 Move X19, X0
	052 Move W9, [X8+224]
	053 Compare W9, 0
	054 JumpIfNotEqual {57}
	055 Move X0, X8
	056 Call 0x1C17DFC
	057 Move X0, X19
	058 Move X20, [X31+32]
	059 Move X19, [X31+40]
	060 Move X22, [X31+16]
	061 Move X21, [X31+24]
	062 Move X1, X31
	063 Move X30, [X31+48]
	064 Call Object.Destroy, X0
	065 Return 
	066 Move X8, [X22]
	067 Move X9, 0x2349000
	068 Move X21, 0x234D000
	069 Move X8, [X8+184]
	070 Move X9, [X9+2416]
	071 Move [X8], X19
	072 Move X0, [X9]
	073 Move X20, [X19+40]
	074 Move W8, [X0+224]
	075 Move X21, [X21+1536]
	076 Compare W8, 0
	077 JumpIfNotEqual {79}
	078 Call 0x1C17DFC
	079 Move X0, X31
	080 Call Application.get_version
	081 Move X8, [X21]
	082 Move X1, X0
	083 Move X2, X31
	084 Move X0, X8
	085 Call String.Concat, X0, X1
	086 Compare X20, 0
	087 JumpIfEqual {110}
	088 Move X8, [X20]
	089 Move X1, X0
	090 Move X0, X20
	091 Move X9, [X8+1368]
	092 Move X2, [X8+1376]
	093 NotImplemented "Instruction BLR not yet implemented."
	094 Move X0, [X19+48]
	095 Compare X0, 0
	096 JumpIfEqual {110}
	097 Move X1, X31
	098 Call Component.get_gameObject, X0
	099 Compare X0, 0
	100 JumpIfEqual {110}
	101 Move X20, [X31+32]
	102 Move X19, [X31+40]
	103 Move X22, [X31+16]
	104 Move X21, [X31+24]
	105 Move W1, W31
	106 Move X2, X31
	107 Move X30, [X31+48]
	108 Call GameObject.SetActive, X0, X1
	109 Return 
	110 Call 0x1C17F20

Method: System.Void OnDestroy()

Disassembly:
	0x01DAB698 BL 0x1DAB398
	0x01DAB69C ADRP X8, 0x234C000
	0x01DAB6A0 LDR X8, [X8 + 0x610]
	0x01DAB6A4 MOV W20, W0
	0x01DAB6A8 ADD X21, X19, 0xA8
	0x01DAB6AC LDR X0, [X8]
	0x01DAB6B0 LDR W8, [X0 + 0xE0]
	0x01DAB6B4 CBNZ W8, 0x1DAB6BC
	0x01DAB6B8 BL 0x1C16DFC
	0x01DAB6BC MOV W0, W20
	0x01DAB6C0 MOV X1, X21
	0x01DAB6C4 BL 0x1DAAD8C
	0x01DAB6C8 TBZ X0, 0x0, 0x1DAB6E0
	0x01DAB6CC MOV X0, X19
	0x01DAB6D0 LDP X20, X19, [X31 + 0x20]
	0x01DAB6D4 LDP X30, X21, [X31 + 0x10]
	0x01DAB6D8 ADD X31, X31, 0x30
	0x01DAB6DC B 0x1DAB7B0
	0x01DAB6E0 ADRP X8, 0x2348000
	0x01DAB6E4 LDR X8, [X8 + 0x720]
	0x01DAB6E8 LDR X0, [X8]
	0x01DAB6EC BL 0x1C16F10
	0x01DAB6F0 ADRP X8, 0x2348000
	0x01DAB6F4 LDR X8, [X8 + 0x718]
	0x01DAB6F8 MOV X20, X0
	0x01DAB6FC LDR X1, [X8]
	0x01DAB700 BL 0x2AA4804
	0x01DAB704 MOV X0, X19
	0x01DAB708 BL 0x1DAB398
	0x01DAB70C ADRP X8, 0x234C000
	0x01DAB710 LDR X8, [X8 + 0x628]
	0x01DAB714 STRH W0, [X31 + 0xC]
	0x01DAB718 ADD X1, X31, 0xC
	0x01DAB71C LDR X8, [X8]
	0x01DAB720 MOV X0, X8
	0x01DAB724 BL 0x1C16E04
	0x01DAB728 CBZ X20, 0x1DAB7AC
	0x01DAB72C ADRP X8, 0x234C000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x262E000
	007 Move X21, 0x234D000
	008 Move X20, 0x2349000
	009 Move W8, [X22+2756]
	010 Move X21, [X21+1528]
	011 Move X20, [X20+1432]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x234D000
	018 Move X0, [X0+1528]
	019 Call 0x1C17CF4
	020 Move X0, 0x2349000
	021 Move X0, [X0+1432]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+2756], W8
	025 Move X8, [X21]
	026 Move X0, [X20]
	027 Move X8, [X8+184]
	028 Move W9, [X0+224]
	029 Move X20, [X8]
	030 Compare W9, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1C17DFC
	033 Move X0, X20
	034 Move X1, X19
	035 Move X2, X31
	036 Call Object.op_Equality, X0, X1
	037 Move TEMP, X0
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfNotEqual {44}
	041 Move X8, [X21]
	042 Move X8, [X8+184]
	043 Move [X8], X31
	044 Move X20, [X31+32]
	045 Move X19, [X31+40]
	046 Move X22, [X31+16]
	047 Move X21, [X31+24]
	048 Move X30, [X31+48]
	049 Return 

Method: System.Void SetStatus(System.String status, System.Boolean showLoading)

Disassembly:
	0x01DAB730 ADRP X9, 0x2348000
	0x01DAB734 LDR X8, [X8 + 0x700]
	0x01DAB738 LDR X9, [X9 + 0x710]
	0x01DAB73C MOV X2, X0
	0x01DAB740 MOV X0, X20
	0x01DAB744 LDR X1, [X8]
	0x01DAB748 LDR X3, [X9]
	0x01DAB74C BL 0x2AA5098
	0x01DAB750 ADRP X8, 0x2348000
	0x01DAB754 LDR X8, [X8 + 0x788]
	0x01DAB758 LDR X0, [X8]
	0x01DAB75C LDR W8, [X0 + 0xE0]
	0x01DAB760 CBNZ W8, 0x1DAB768
	0x01DAB764 BL 0x1C16DFC
	0x01DAB768 ADRP X8, 0x234C000
	0x01DAB76C ADRP X9, 0x234C000
	0x01DAB770 ADRP X10, 0x234C000
	0x01DAB774 LDR X8, [X8 + 0x708]
	0x01DAB778 LDR X9, [X9 + 0x710]
	0x01DAB77C LDR X10, [X10 + 0x6F8]
	0x01DAB780 MOVZ W4, 0x38
	0x01DAB784 LDR X0, [X8]
	0x01DAB788 LDR X2, [X9]
	0x01DAB78C LDR X3, [X10]
	0x01DAB790 MOV X1, X20
	0x01DAB794 MOV X5, X31
	0x01DAB798 BL 0x35C2344
	0x01DAB79C LDP X20, X19, [X31 + 0x20]
	0x01DAB7A0 LDP X30, X21, [X31 + 0x10]
	0x01DAB7A4 ADD X31, X31, 0x30
	0x01DAB7A8 RET
	0x01DAB7AC BL 0x1C16F20
	0x01DAB7B0 SUB X31, X31, 0x130
	0x01DAB7B4 STR D8, [X31 + 0xC0]
	0x01DAB7B8 STP X29, X30, [X31 + 0xD0]
	0x01DAB7BC STP X28, X27, [X31 + 0xE0]
	0x01DAB7C0 STP X26, X25, [X31 + 0xF0]
	0x01DAB7C4 STP X24, X23, [X31 + 0x100]
	0x01DAB7C8 STP X22, X21, [X31 + 0x110]
	0x01DAB7CC STP X20, X19, [X31 + 0x120]
	0x01DAB7D0 ADRP X20, 0x262D000
	0x01DAB7D4 ADRP X22, 0x2348000
	0x01DAB7D8 LDRB W8, [X20 + 0xAD3]
	0x01DAB7DC LDR X22, [X22 + 0x598]
	0x01DAB7E0 MOV X19, X0
	0x01DAB7E4 TBNZ X8, 0x0, 0x1DAB994
	0x01DAB7E8 ADRP X0, 0x234C000
	0x01DAB7EC LDR X0, [X0 + 0x718]
	0x01DAB7F0 BL 0x1C16CF4
	0x01DAB7F4 ADRP X0, 0x2348000
	0x01DAB7F8 LDR X0, [X0 + 0x710]
	0x01DAB7FC BL 0x1C16CF4
	0x01DAB800 ADRP X0, 0x2348000
	0x01DAB804 LDR X0, [X0 + 0x718]
	0x01DAB808 BL 0x1C16CF4
	0x01DAB80C ADRP X0, 0x2348000
	0x01DAB810 LDR X0, [X0 + 0x720]
	0x01DAB814 BL 0x1C16CF4
	0x01DAB818 ADRP X0, 0x234C000
	0x01DAB81C LDR X0, [X0 + 0x720]
	0x01DAB820 BL 0x1C16CF4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x262E000
	007 Move X21, 0x234D000
	008 Move W8, [X22+2757]
	009 Move X21, [X21+1528]
	010 Move W20, W1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x234D000
	017 Move X0, [X0+1528]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+2757], W8
	021 Move X8, [X21]
	022 Move X8, [X8+184]
	023 Move X8, [X8]
	024 Compare X8, 0
	025 JumpIfEqual {80}
	026 Move X0, [X8+32]
	027 Compare X0, 0
	028 JumpIfEqual {80}
	029 And W1, W20, 1
	030 Move X2, X31
	031 Call GameObject.SetActive, X0, X1
	032 Move X0, X19
	033 Move X1, X31
	034 Call String.IsNullOrEmpty, X0
	035 Move X8, [X21]
	036 Move X8, [X8+184]
	037 Move X8, [X8]
	038 Compare X8, 0
	039 JumpIfEqual {80}
	040 Move W20, W0
	041 Move X0, [X8+48]
	042 Compare X0, 0
	043 JumpIfEqual {80}
	044 Move X1, X31
	045 Call Component.get_gameObject, X0
	046 Compare X0, 0
	047 JumpIfEqual {80}
	048 Xor W8, W20, 1
	049 And W1, W8, 1
	050 Move X2, X31
	051 Call GameObject.SetActive, X0, X1
	052 Move TEMP, X20
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfNotEqual {62}
	056 Move X20, [X31+32]
	057 Move X19, [X31+40]
	058 Move X22, [X31+16]
	059 Move X21, [X31+24]
	060 Move X30, [X31+48]
	061 Return 
	062 Move X8, [X21]
	063 Move X8, [X8+184]
	064 Move X8, [X8]
	065 Compare X8, 0
	066 JumpIfEqual {80}
	067 Move X0, [X8+48]
	068 Compare X0, 0
	069 JumpIfEqual {80}
	070 Move X8, [X0]
	071 Move X1, X19
	072 Move X20, [X31+32]
	073 Move X19, [X31+40]
	074 Move X22, [X31+16]
	075 Move X21, [X31+24]
	076 Move X3, [X8+1368]
	077 Move X2, [X8+1376]
	078 Move X30, [X31+48]
	079 CallNoReturn X3
	080 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x01DAB824 ADRP X0, 0x234C000
	0x01DAB828 LDR X0, [X0 + 0x728]

ISIL:
	001 Move X1, X31
	002 Call MonoBehaviour..ctor, X0
	003 Return 

