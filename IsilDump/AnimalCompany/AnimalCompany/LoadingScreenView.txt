Type: AnimalCompany.LoadingScreenView

Method: System.Void Awake()

Disassembly:
	0x01CB163C BL 0x1B6EA0C
	0x01CB1640 ADRP X8, 0x229C000
	0x01CB1644 LDR X8, [X8 + 0x5B8]
	0x01CB1648 MOV X20, X0
	0x01CB164C LDR X1, [X8]
	0x01CB1650 BL 0x28F9A14
	0x01CB1654 MOV X0, X19
	0x01CB1658 BL 0x1CB12E8
	0x01CB165C ADRP X8, 0x229D000
	0x01CB1660 LDR X8, [X8 + 0xB20]
	0x01CB1664 STRH W0, [X31 + 0xC]
	0x01CB1668 ADD X1, X31, 0xC
	0x01CB166C LDR X8, [X8]
	0x01CB1670 MOV X0, X8
	0x01CB1674 BL 0x1B6E900
	0x01CB1678 CBZ X20, 0x1CB16FC
	0x01CB167C ADRP X8, 0x229D000
	0x01CB1680 ADRP X9, 0x229C000
	0x01CB1684 LDR X8, [X8 + 0xBF8]
	0x01CB1688 LDR X9, [X9 + 0x5B0]
	0x01CB168C MOV X2, X0
	0x01CB1690 MOV X0, X20
	0x01CB1694 LDR X1, [X8]
	0x01CB1698 LDR X3, [X9]
	0x01CB169C BL 0x28FA2A8
	0x01CB16A0 ADRP X8, 0x229C000
	0x01CB16A4 LDR X8, [X8 + 0x628]
	0x01CB16A8 LDR X0, [X8]
	0x01CB16AC LDR W8, [X0 + 0xE0]
	0x01CB16B0 CBNZ W8, 0x1CB16B8
	0x01CB16B4 BL 0x1B6E8F8
	0x01CB16B8 ADRP X8, 0x229D000
	0x01CB16BC ADRP X9, 0x229D000
	0x01CB16C0 ADRP X10, 0x229D000
	0x01CB16C4 LDR X8, [X8 + 0xC00]
	0x01CB16C8 LDR X9, [X9 + 0xC08]
	0x01CB16CC LDR X10, [X10 + 0xBF0]
	0x01CB16D0 MOVZ W4, 0x38
	0x01CB16D4 LDR X0, [X8]
	0x01CB16D8 LDR X2, [X9]
	0x01CB16DC LDR X3, [X10]
	0x01CB16E0 MOV X1, X20
	0x01CB16E4 MOV X5, X31
	0x01CB16E8 BL 0x342B554
	0x01CB16EC LDP X20, X19, [X31 + 0x20]
	0x01CB16F0 LDP X30, X21, [X31 + 0x10]
	0x01CB16F4 ADD X31, X31, 0x30
	0x01CB16F8 RET
	0x01CB16FC BL 0x1B6EA1C
	0x01CB1700 SUB X31, X31, 0x130
	0x01CB1704 STR D8, [X31 + 0xC0]
	0x01CB1708 STP X29, X30, [X31 + 0xD0]
	0x01CB170C STP X28, X27, [X31 + 0xE0]
	0x01CB1710 STP X26, X25, [X31 + 0xF0]
	0x01CB1714 STP X24, X23, [X31 + 0x100]
	0x01CB1718 STP X22, X21, [X31 + 0x110]
	0x01CB171C STP X20, X19, [X31 + 0x120]
	0x01CB1720 ADRP X20, 0x2572000
	0x01CB1724 ADRP X22, 0x229C000
	0x01CB1728 LDRB W8, [X20 + 0x4C9]
	0x01CB172C LDR X22, [X22 + 0x478]
	0x01CB1730 MOV X19, X0
	0x01CB1734 TBNZ X8, 0x0, 0x1CB18E4
	0x01CB1738 ADRP X0, 0x229D000
	0x01CB173C LDR X0, [X0 + 0xC10]
	0x01CB1740 BL 0x1B6E7F0
	0x01CB1744 ADRP X0, 0x229C000
	0x01CB1748 LDR X0, [X0 + 0x5B0]
	0x01CB174C BL 0x1B6E7F0
	0x01CB1750 ADRP X0, 0x229C000
	0x01CB1754 LDR X0, [X0 + 0x5B8]
	0x01CB1758 BL 0x1B6E7F0
	0x01CB175C ADRP X0, 0x229C000
	0x01CB1760 LDR X0, [X0 + 0x5C0]
	0x01CB1764 BL 0x1B6E7F0
	0x01CB1768 ADRP X0, 0x229D000
	0x01CB176C LDR X0, [X0 + 0xC18]
	0x01CB1770 BL 0x1B6E7F0
	0x01CB1774 ADRP X0, 0x229D000
	0x01CB1778 LDR X0, [X0 + 0xC20]
	0x01CB177C BL 0x1B6E7F0
	0x01CB1780 ADRP X0, 0x229D000
	0x01CB1784 LDR X0, [X0 + 0xC28]
	0x01CB1788 BL 0x1B6E7F0
	0x01CB178C ADRP X0, 0x229C000
	0x01CB1790 LDR X0, [X0 + 0x5F8]
	0x01CB1794 BL 0x1B6E7F0
	0x01CB1798 ADRP X0, 0x229D000
	0x01CB179C LDR X0, [X0 + 0xC30]
	0x01CB17A0 BL 0x1B6E7F0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x2573000
	007 Move X22, 0x229E000
	008 Move X21, 0x229D000
	009 Move W8, [X20+1209]
	010 Move X22, [X22+2792]
	011 Move X21, [X21+1144]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {31}
	017 Move X0, 0x229D000
	018 Move X0, [X0+2048]
	019 Call 0x1B6F7F0
	020 Move X0, 0x229E000
	021 Move X0, [X0+2792]
	022 Call 0x1B6F7F0
	023 Move X0, 0x229D000
	024 Move X0, [X0+1144]
	025 Call 0x1B6F7F0
	026 Move X0, 0x229E000
	027 Move X0, [X0+2800]
	028 Call 0x1B6F7F0
	029 Move W8, 1
	030 Move [X20+1209], W8
	031 Move X8, [X22]
	032 Move X0, [X21]
	033 Move X8, [X8+184]
	034 Move W9, [X0+224]
	035 Move X20, [X8]
	036 Compare W9, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1B6F8F8
	039 Move X0, X20
	040 Move X1, X31
	041 Move X2, X31
	042 Call Object.op_Inequality, X0, X1
	043 Move TEMP, X0
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfNotEqual {66}
	047 Move X0, X19
	048 Move X1, X31
	049 Call Component.get_gameObject, X0
	050 Move X8, [X21]
	051 Move X19, X0
	052 Move W9, [X8+224]
	053 Compare W9, 0
	054 JumpIfNotEqual {57}
	055 Move X0, X8
	056 Call 0x1B6F8F8
	057 Move X0, X19
	058 Move X20, [X31+32]
	059 Move X19, [X31+40]
	060 Move X22, [X31+16]
	061 Move X21, [X31+24]
	062 Move X1, X31
	063 Move X30, [X31+48]
	064 Call Object.Destroy, X0
	065 Return 
	066 Move X8, [X22]
	067 Move X9, 0x229D000
	068 Move X21, 0x229E000
	069 Move X8, [X8+184]
	070 Move X9, [X9+2048]
	071 Move [X8], X19
	072 Move X0, [X9]
	073 Move X20, [X19+40]
	074 Move W8, [X0+224]
	075 Move X21, [X21+2800]
	076 Compare W8, 0
	077 JumpIfNotEqual {79}
	078 Call 0x1B6F8F8
	079 Move X0, X31
	080 Call Application.get_version
	081 Move X8, [X21]
	082 Move X1, X0
	083 Move X2, X31
	084 Move X0, X8
	085 Call String.Concat, X0, X1
	086 Compare X20, 0
	087 JumpIfEqual {110}
	088 Move X8, [X20]
	089 Move X1, X0
	090 Move X0, X20
	091 Move X9, [X8+1368]
	092 Move X2, [X8+1376]
	093 NotImplemented "Instruction BLR not yet implemented."
	094 Move X0, [X19+48]
	095 Compare X0, 0
	096 JumpIfEqual {110}
	097 Move X1, X31
	098 Call Component.get_gameObject, X0
	099 Compare X0, 0
	100 JumpIfEqual {110}
	101 Move X20, [X31+32]
	102 Move X19, [X31+40]
	103 Move X22, [X31+16]
	104 Move X21, [X31+24]
	105 Move W1, W31
	106 Move X2, X31
	107 Move X30, [X31+48]
	108 Call GameObject.SetActive, X0, X1
	109 Return 
	110 Call 0x1B6FA1C

Method: System.Void OnDestroy()

Disassembly:
	0x01CB17A4 ADRP X0, 0x229D000
	0x01CB17A8 LDR X0, [X0 + 0xC38]
	0x01CB17AC BL 0x1B6E7F0
	0x01CB17B0 ADRP X0, 0x229D000
	0x01CB17B4 LDR X0, [X0 + 0xC40]
	0x01CB17B8 BL 0x1B6E7F0
	0x01CB17BC ADRP X0, 0x229D000
	0x01CB17C0 LDR X0, [X0 + 0xC48]
	0x01CB17C4 BL 0x1B6E7F0
	0x01CB17C8 ADRP X0, 0x229D000
	0x01CB17CC LDR X0, [X0 + 0xC50]
	0x01CB17D0 BL 0x1B6E7F0
	0x01CB17D4 ADRP X0, 0x229D000
	0x01CB17D8 LDR X0, [X0 + 0xC58]
	0x01CB17DC BL 0x1B6E7F0
	0x01CB17E0 ADRP X0, 0x229D000
	0x01CB17E4 LDR X0, [X0 + 0xC60]
	0x01CB17E8 BL 0x1B6E7F0
	0x01CB17EC ADRP X0, 0x229D000
	0x01CB17F0 LDR X0, [X0 + 0xC68]
	0x01CB17F4 BL 0x1B6E7F0
	0x01CB17F8 ADRP X0, 0x229D000
	0x01CB17FC LDR X0, [X0 + 0xC70]
	0x01CB1800 BL 0x1B6E7F0
	0x01CB1804 ADRP X0, 0x229C000
	0x01CB1808 LDR X0, [X0 + 0x628]
	0x01CB180C BL 0x1B6E7F0
	0x01CB1810 ADRP X0, 0x229D000
	0x01CB1814 LDR X0, [X0 + 0xB08]
	0x01CB1818 BL 0x1B6E7F0
	0x01CB181C ADRP X0, 0x229D000
	0x01CB1820 LDR X0, [X0 + 0xC78]
	0x01CB1824 BL 0x1B6E7F0
	0x01CB1828 ADRP X0, 0x229D000
	0x01CB182C LDR X0, [X0 + 0xC80]
	0x01CB1830 BL 0x1B6E7F0
	0x01CB1834 ADRP X0, 0x229D000
	0x01CB1838 LDR X0, [X0 + 0x1E8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x2573000
	007 Move X21, 0x229E000
	008 Move X20, 0x229D000
	009 Move W8, [X22+1210]
	010 Move X21, [X21+2792]
	011 Move X20, [X20+1144]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x229E000
	018 Move X0, [X0+2792]
	019 Call 0x1B6F7F0
	020 Move X0, 0x229D000
	021 Move X0, [X0+1144]
	022 Call 0x1B6F7F0
	023 Move W8, 1
	024 Move [X22+1210], W8
	025 Move X8, [X21]
	026 Move X0, [X20]
	027 Move X8, [X8+184]
	028 Move W9, [X0+224]
	029 Move X20, [X8]
	030 Compare W9, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1B6F8F8
	033 Move X0, X20
	034 Move X1, X19
	035 Move X2, X31
	036 Call Object.op_Equality, X0, X1
	037 Move TEMP, X0
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfNotEqual {44}
	041 Move X8, [X21]
	042 Move X8, [X8+184]
	043 Move [X8], X31
	044 Move X20, [X31+32]
	045 Move X19, [X31+40]
	046 Move X22, [X31+16]
	047 Move X21, [X31+24]
	048 Move X30, [X31+48]
	049 Return 

Method: System.Void SetStatus(System.String status, System.Boolean showLoading)

Disassembly:
	0x01CB183C BL 0x1B6E7F0
	0x01CB1840 ADRP X0, 0x229D000
	0x01CB1844 LDR X0, [X0 + 0x248]
	0x01CB1848 BL 0x1B6E7F0
	0x01CB184C ADRP X0, 0x229D000
	0x01CB1850 LDR X0, [X0 + 0x250]
	0x01CB1854 BL 0x1B6E7F0
	0x01CB1858 ADRP X0, 0x229C000
	0x01CB185C LDR X0, [X0 + 0x478]
	0x01CB1860 BL 0x1B6E7F0
	0x01CB1864 ADRP X0, 0x229D000
	0x01CB1868 LDR X0, [X0 + 0xC88]
	0x01CB186C BL 0x1B6E7F0
	0x01CB1870 ADRP X0, 0x229D000
	0x01CB1874 LDR X0, [X0 + 0xC90]
	0x01CB1878 BL 0x1B6E7F0
	0x01CB187C ADRP X0, 0x229D000
	0x01CB1880 LDR X0, [X0 + 0xC98]
	0x01CB1884 BL 0x1B6E7F0
	0x01CB1888 ADRP X0, 0x229D000
	0x01CB188C LDR X0, [X0 + 0xCA0]
	0x01CB1890 BL 0x1B6E7F0
	0x01CB1894 ADRP X0, 0x229C000
	0x01CB1898 LDR X0, [X0 + 0x918]
	0x01CB189C BL 0x1B6E7F0
	0x01CB18A0 ADRP X0, 0x229D000
	0x01CB18A4 LDR X0, [X0 + 0xCA8]
	0x01CB18A8 BL 0x1B6E7F0
	0x01CB18AC ADRP X0, 0x229D000
	0x01CB18B0 LDR X0, [X0 + 0xCB0]
	0x01CB18B4 BL 0x1B6E7F0
	0x01CB18B8 ADRP X0, 0x229D000
	0x01CB18BC LDR X0, [X0 + 0xCB8]
	0x01CB18C0 BL 0x1B6E7F0
	0x01CB18C4 ADRP X0, 0x229D000
	0x01CB18C8 LDR X0, [X0 + 0xCC0]
	0x01CB18CC BL 0x1B6E7F0
	0x01CB18D0 ADRP X0, 0x229D000
	0x01CB18D4 LDR X0, [X0 + 0xC08]
	0x01CB18D8 BL 0x1B6E7F0
	0x01CB18DC MOVZ W8, 0x1
	0x01CB18E0 STRB W8, [X20 + 0x4C9]
	0x01CB18E4 STP X31, X31, [X31 + 0xA0]
	0x01CB18E8 STR X31, [X31 + 0xB0]
	0x01CB18EC STR X31, [X31 + 0xC8]
	0x01CB18F0 STP X31, X31, [X31 + 0x80]
	0x01CB18F4 STR X31, [X31 + 0x90]
	0x01CB18F8 MOV X20, X19
	0x01CB18FC LDR X21, [X20 + 0xA8]!
	0x01CB1900 LDR X0, [X22]
	0x01CB1904 LDR W8, [X0 + 0xE0]
	0x01CB1908 CBNZ W8, 0x1CB1910
	0x01CB190C BL 0x1B6E8F8
	0x01CB1910 MOV X0, X21
	0x01CB1914 MOV X1, X31
	0x01CB1918 MOV X2, X31
	0x01CB191C BL 0x3AA0AF0
	0x01CB1920 TBZ X0, 0x0, 0x1CB195C
	0x01CB1924 MOV X0, X19
	0x01CB1928 BL 0x1CB12E8
	0x01CB192C ADRP X8, 0x229D000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x2573000
	007 Move X21, 0x229E000
	008 Move W8, [X22+1211]
	009 Move X21, [X21+2792]
	010 Move W20, W1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x229E000
	017 Move X0, [X0+2792]
	018 Call 0x1B6F7F0
	019 Move W8, 1
	020 Move [X22+1211], W8
	021 Move X8, [X21]
	022 Move X8, [X8+184]
	023 Move X8, [X8]
	024 Compare X8, 0
	025 JumpIfEqual {80}
	026 Move X0, [X8+32]
	027 Compare X0, 0
	028 JumpIfEqual {80}
	029 And W1, W20, 1
	030 Move X2, X31
	031 Call GameObject.SetActive, X0, X1
	032 Move X0, X19
	033 Move X1, X31
	034 Call String.IsNullOrEmpty, X0
	035 Move X8, [X21]
	036 Move X8, [X8+184]
	037 Move X8, [X8]
	038 Compare X8, 0
	039 JumpIfEqual {80}
	040 Move W20, W0
	041 Move X0, [X8+48]
	042 Compare X0, 0
	043 JumpIfEqual {80}
	044 Move X1, X31
	045 Call Component.get_gameObject, X0
	046 Compare X0, 0
	047 JumpIfEqual {80}
	048 Xor W8, W20, 1
	049 And W1, W8, 1
	050 Move X2, X31
	051 Call GameObject.SetActive, X0, X1
	052 Move TEMP, X20
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfNotEqual {62}
	056 Move X20, [X31+32]
	057 Move X19, [X31+40]
	058 Move X22, [X31+16]
	059 Move X21, [X31+24]
	060 Move X30, [X31+48]
	061 Return 
	062 Move X8, [X21]
	063 Move X8, [X8+184]
	064 Move X8, [X8]
	065 Compare X8, 0
	066 JumpIfEqual {80}
	067 Move X0, [X8+48]
	068 Compare X0, 0
	069 JumpIfEqual {80}
	070 Move X8, [X0]
	071 Move X1, X19
	072 Move X20, [X31+32]
	073 Move X19, [X31+40]
	074 Move X22, [X31+16]
	075 Move X21, [X31+24]
	076 Move X3, [X8+1368]
	077 Move X2, [X8+1376]
	078 Move X30, [X31+48]
	079 CallNoReturn X3
	080 Call 0x1B6FA1C

Method: System.Void .ctor()

Disassembly:
	0x01CB1930 LDR X8, [X8 + 0xB08]
	0x01CB1934 MOV W21, W0

ISIL:
	001 Move X1, X31
	002 Call MonoBehaviour..ctor, X0
	003 Return 

