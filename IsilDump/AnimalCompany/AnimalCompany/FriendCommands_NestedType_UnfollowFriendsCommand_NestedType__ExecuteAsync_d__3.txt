Type: AnimalCompany.FriendCommands/UnfollowFriendsCommand/<ExecuteAsync>d__3

Method: System.Void .ctor(System.Int32 <>1__state)

Disassembly:
	0x01D3FB30 CBZ X8, 0x1D3FB88
	0x01D3FB34 LDR X8, [X8 + 0xA8]
	0x01D3FB38 CBZ X8, 0x1D3FB88
	0x01D3FB3C CBZ X19, 0x1D3FB88
	0x01D3FB40 LDR X21, [X8 + 0x48]
	0x01D3FB44 CBZ X21, 0x1D3FB5C
	0x01D3FB48 LDR X8, [X19]
	0x01D3FB4C MOV X0, X21
	0x01D3FB50 LDR X1, [X8 + 0x40]
	0x01D3FB54 BL 0x1C16E00

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move [X20+16], W19
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X30, [X31+32]
	012 Return 

Method: System.Void System.IDisposable.Dispose()

Disassembly:
	0x01D3FC04 BL 0x1C16CF4

ISIL:
	001 Return 

Method: System.Boolean MoveNext()

Disassembly:
	0x01D3FC08 ADRP X0, 0x23B5000
	0x01D3FC0C LDR X0, [X0 + 0x160]
	0x01D3FC10 BL 0x1C16CF4
	0x01D3FC14 ADRP X0, 0x23B5000
	0x01D3FC18 LDR X0, [X0 + 0x150]
	0x01D3FC1C BL 0x1C16CF4
	0x01D3FC20 ADRP X0, 0x23B5000
	0x01D3FC24 LDR X0, [X0 + 0x138]
	0x01D3FC28 BL 0x1C16CF4
	0x01D3FC2C ADRP X0, 0x23B5000
	0x01D3FC30 LDR X0, [X0 + 0x40]
	0x01D3FC34 BL 0x1C16CF4
	0x01D3FC38 ADRP X0, 0x23B4000
	0x01D3FC3C LDR X0, [X0 + 0xDA0]
	0x01D3FC40 BL 0x1C16CF4
	0x01D3FC44 MOVZ W8, 0x1
	0x01D3FC48 STRB W8, [X22 + 0x73C]
	0x01D3FC4C ADRP X27, 0x23B5000
	0x01D3FC50 ADRP X26, 0x23B5000
	0x01D3FC54 LDR X27, [X27 + 0x150]
	0x01D3FC58 LDR X26, [X26 + 0x140]
	0x01D3FC5C LDR X0, [X21]
	0x01D3FC60 ADRP X24, 0x23B5000
	0x01D3FC64 ADRP X23, 0x23B5000
	0x01D3FC68 ADRP X22, 0x23B5000
	0x01D3FC6C LDR X24, [X24 + 0x148]
	0x01D3FC70 LDR X23, [X23 + 0x158]
	0x01D3FC74 LDR X22, [X22 + 0x160]
	0x01D3FC78 BL 0x1C16F10
	0x01D3FC7C LDR X2, [X20]
	0x01D3FC80 MOV X1, X19
	0x01D3FC84 MOV X3, X31
	0x01D3FC88 MOV X20, X0
	0x01D3FC8C BL 0x35C52F0
	0x01D3FC90 LDR X0, [X25]
	0x01D3FC94 LDR W8, [X0 + 0xE0]
	0x01D3FC98 CBNZ W8, 0x1D3FCA0
	0x01D3FC9C BL 0x1C16DFC
	0x01D3FCA0 MOV X0, X20
	0x01D3FCA4 BL 0x1D36978
	0x01D3FCA8 LDR X0, [X21]
	0x01D3FCAC BL 0x1C16F10
	0x01D3FCB0 LDR X2, [X27]
	0x01D3FCB4 MOV X1, X19
	0x01D3FCB8 MOV X3, X31
	0x01D3FCBC MOV X20, X0
	0x01D3FCC0 BL 0x35C52F0
	0x01D3FCC4 MOV X0, X20
	0x01D3FCC8 BL 0x1D36978
	0x01D3FCCC LDR X0, [X21]
	0x01D3FCD0 BL 0x1C16F10
	0x01D3FCD4 LDR X2, [X26]
	0x01D3FCD8 MOV X1, X19
	0x01D3FCDC MOV X3, X31
	0x01D3FCE0 MOV X20, X0
	0x01D3FCE4 BL 0x35C52F0
	0x01D3FCE8 MOV X0, X20
	0x01D3FCEC BL 0x1D36978
	0x01D3FCF0 LDR X0, [X21]
	0x01D3FCF4 BL 0x1C16F10
	0x01D3FCF8 LDR X2, [X24]
	0x01D3FCFC MOV X1, X19
	0x01D3FD00 MOV X3, X31
	0x01D3FD04 MOV X20, X0
	0x01D3FD08 BL 0x35C52F0
	0x01D3FD0C MOV X0, X20
	0x01D3FD10 BL 0x1D36978
	0x01D3FD14 BL 0x1D3F69C
	0x01D3FD18 LDR X8, [X23]
	0x01D3FD1C MOV X20, X0
	0x01D3FD20 MOV X0, X8
	0x01D3FD24 BL 0x1C16F10
	0x01D3FD28 LDR X2, [X22]
	0x01D3FD2C MOV X1, X19
	0x01D3FD30 MOV X3, X31
	0x01D3FD34 MOV X21, X0
	0x01D3FD38 BL 0x2A6B948
	0x01D3FD3C CBZ X20, 0x1D3FDBC
	0x01D3FD40 ADRP X10, 0x23B5000
	0x01D3FD44 LDR X8, [X20]
	0x01D3FD48 LDR X10, [X10 + 0x40]
	0x01D3FD4C LDRH W9, [X8 + 0x12E]
	0x01D3FD50 LDR X1, [X10]
	0x01D3FD54 CBZ X9, 0x1D3FD78
	0x01D3FD58 LDR X10, [X8 + 0xB0]
	0x01D3FD5C ADD X10, X10, 0x8
	0x01D3FD60 LDUR X11, [X10 - 0x8]
	0x01D3FD64 CMP X11, X1
	0x01D3FD68 B.EQ 0x1D3FD88
	0x01D3FD6C SUBS X9, X9, 0x1
	0x01D3FD70 ADD X10, X10, 0x10
	0x01D3FD74 B.NE 0x1D3FD60
	0x01D3FD78 MOVZ W2, 0x21
	0x01D3FD7C MOV X0, X20
	0x01D3FD80 BL 0x1C5C788
	0x01D3FD84 B 0x1D3FD98
	0x01D3FD88 LDR W9, [X10]
	0x01D3FD8C ADD W9, W9, 0x21
	0x01D3FD90 ADD X8, X8, W9, 0x4, SXTW
	0x01D3FD94 ADD X0, X8, 0x138
	0x01D3FD98 LDP X3, X2, [X0]
	0x01D3FD9C MOV X0, X20
	0x01D3FDA0 MOV X1, X21
	0x01D3FDA4 LDP X20, X19, [X31 + 0x40]
	0x01D3FDA8 LDP X22, X21, [X31 + 0x30]
	0x01D3FDAC LDP X24, X23, [X31 + 0x20]
	0x01D3FDB0 LDP X26, X25, [X31 + 0x10]
	0x01D3FDB4 LDP X30, X27, [X31], #0x50
	0x01D3FDB8 BR X3
	0x01D3FDBC BL 0x1C16F20
	0x01D3FDC0 STP X30, X25, [X31 - 0x40]!
	0x01D3FDC4 STP X24, X23, [X31 + 0x10]
	0x01D3FDC8 STP X22, X21, [X31 + 0x20]
	0x01D3FDCC STP X20, X19, [X31 + 0x30]
	0x01D3FDD0 ADRP X20, 0x2699000
	0x01D3FDD4 ADRP X23, 0x23B5000
	0x01D3FDD8 ADRP X22, 0x23B5000
	0x01D3FDDC LDRB W8, [X20 + 0x73D]
	0x01D3FDE0 LDR X23, [X23 + 0x158]
	0x01D3FDE4 LDR X22, [X22 + 0x160]
	0x01D3FDE8 MOV X19, X0
	0x01D3FDEC TBNZ X8, 0x0, 0x1D3FE64
	0x01D3FDF0 ADRP X0, 0x23B5000
	0x01D3FDF4 LDR X0, [X0 + 0x158]
	0x01D3FDF8 BL 0x1C16CF4
	0x01D3FDFC ADRP X0, 0x23B4000
	0x01D3FE00 LDR X0, [X0 + 0x648]
	0x01D3FE04 BL 0x1C16CF4
	0x01D3FE08 ADRP X0, 0x23B4000
	0x01D3FE0C LDR X0, [X0 + 0xAB0]
	0x01D3FE10 BL 0x1C16CF4
	0x01D3FE14 ADRP X0, 0x23B5000
	0x01D3FE18 LDR X0, [X0 + 0x168]
	0x01D3FE1C BL 0x1C16CF4
	0x01D3FE20 ADRP X0, 0x23B4000
	0x01D3FE24 LDR X0, [X0 + 0x958]
	0x01D3FE28 BL 0x1C16CF4
	0x01D3FE2C ADRP X0, 0x23B5000
	0x01D3FE30 LDR X0, [X0 + 0x170]
	0x01D3FE34 BL 0x1C16CF4
	0x01D3FE38 ADRP X0, 0x23B5000
	0x01D3FE3C LDR X0, [X0 + 0x160]
	0x01D3FE40 BL 0x1C16CF4
	0x01D3FE44 ADRP X0, 0x23B5000
	0x01D3FE48 LDR X0, [X0 + 0x40]
	0x01D3FE4C BL 0x1C16CF4
	0x01D3FE50 ADRP X0, 0x23B5000
	0x01D3FE54 LDR X0, [X0 + 0x178]
	0x01D3FE58 BL 0x1C16CF4
	0x01D3FE5C MOVZ W8, 0x1
	0x01D3FE60 STRB W8, [X20 + 0x73D]
	0x01D3FE64 BL 0x1D3F69C
	0x01D3FE68 LDR X8, [X23]
	0x01D3FE6C MOV X20, X0
	0x01D3FE70 MOV X0, X8
	0x01D3FE74 BL 0x1C16F10
	0x01D3FE78 LDR X2, [X22]
	0x01D3FE7C MOV X1, X19
	0x01D3FE80 MOV X3, X31
	0x01D3FE84 MOV X21, X0
	0x01D3FE88 BL 0x2A6B948
	0x01D3FE8C CBZ X20, 0x1D400EC
	0x01D3FE90 ADRP X25, 0x23B5000
	0x01D3FE94 LDR X8, [X20]
	0x01D3FE98 LDR X25, [X25 + 0x40]
	0x01D3FE9C ADRP X24, 0x23B4000
	0x01D3FEA0 LDRH W9, [X8 + 0x12E]
	0x01D3FEA4 LDR X1, [X25]
	0x01D3FEA8 LDR X24, [X24 + 0x648]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x269A000
	007 Move W8, [X20+1845]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {54}
	013 Move X0, 0x23B5000
	014 Move X0, [X0+1608]
	015 Call 0x1C17CF4
	016 Move X0, 0x23B5000
	017 Move X0, [X0+2736]
	018 Call 0x1C17CF4
	019 Move X0, 0x23B6000
	020 Move X0, [X0+80]
	021 Call 0x1C17CF4
	022 Move X0, 0x23B6000
	023 Move X0, [X0+88]
	024 Call 0x1C17CF4
	025 Move X0, 0x23B5000
	026 Move X0, [X0+1880]
	027 Call 0x1C17CF4
	028 Move X0, 0x23B5000
	029 Move X0, [X0+1928]
	030 Call 0x1C17CF4
	031 Move X0, 0x23B6000
	032 Move X0, [X0+184]
	033 Call 0x1C17CF4
	034 Move X0, 0x23B5000
	035 Move X0, [X0+4024]
	036 Call 0x1C17CF4
	037 Move X0, 0x23B6000
	038 Move X0, [X0+192]
	039 Call 0x1C17CF4
	040 Move X0, 0x23B6000
	041 Move X0, [X0+136]
	042 Call 0x1C17CF4
	043 Move X0, 0x23B6000
	044 Move X0, [X0+152]
	045 Call 0x1C17CF4
	046 Move X0, 0x23B6000
	047 Move X0, [X0+200]
	048 Call 0x1C17CF4
	049 Move X0, 0x23B6000
	050 Move X0, [X0+208]
	051 Call 0x1C17CF4
	052 Move W8, 1
	053 Move [X20+1845], W8
	054 Move W8, [X19+16]
	055 Move X20, [X19+32]
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Compare W8, 0
	058 JumpIfNotEqual {178}
	059 Move TEMP, 0
	060 Not TEMP
	061 Move W8, TEMP
	062 Move [X19+16], W8
	063 Compare X20, 0
	064 JumpIfEqual {185}
	065 Move X8, 0x23B6000
	066 Move X0, [X20+96]
	067 Move X8, [X8+80]
	068 Move X1, [X8]
	069 Call Enumerable.Any, X0
	070 Move TEMP, X0
	071 And TEMP, TEMP, 1
	072 Compare TEMP, 1
	073 JumpIfNotEqual {178}
	074 Move X8, 0x23B6000
	075 Move X0, [X20+96]
	076 Move X8, [X8+88]
	077 Move X1, [X8]
	078 Call Enumerable.Count, X0
	079 Move X8, 0x23B5000
	080 Move X8, [X8+1880]
	081 Move [X31+12], W0
	082 Add X1, X31, 12
	083 Move X8, [X8]
	084 Move X0, X8
	085 Call 0x1C17E04
	086 Move X8, 0x23B6000
	087 Move X8, [X8+208]
	088 Move X1, X0
	089 Move X2, X31
	090 Move X8, [X8]
	091 Move X0, X8
	092 Call String.Format, X0, X1
	093 Move X8, 0x23B5000
	094 Move X8, [X8+1928]
	095 Move X21, X0
	096 Move X8, [X8]
	097 Move W9, [X8+224]
	098 Compare W9, 0
	099 JumpIfNotEqual {102}
	100 Move X0, X8
	101 Call 0x1C17DFC
	102 Move X8, 0x23B6000
	103 Move X9, 0x23B6000
	104 Move X8, [X8+152]
	105 Move X9, [X9+136]
	106 Move W0, 0x8000
	107 Move W5, 168
	108 Move X3, [X8]
	109 Move X4, [X9]
	110 Move X1, X21
	111 Move X2, X31
	112 Move X6, X31
	113 Call Log.Info, X0, X1, X2, X3, X4, X5
	114 Move X8, 0x23B5000
	115 Move X8, [X8+4024]
	116 Move X0, [X8]
	117 Call 0x1C17F10
	118 Move X8, 0x23B6000
	119 Move X8, [X8+192]
	120 Move X1, X20
	121 Move X3, X31
	122 Move X21, X0
	123 Move X2, [X8]
	124 Call TaskGenerator..ctor, X0, X1, X2
	125 Move X8, 0x23B6000
	126 Move X8, [X8+200]
	127 Move X1, X21
	128 Move W2, W31
	129 Move X3, X31
	130 Move X0, [X8]
	131 Move X4, X31
	132 Call Commands.Task, X0, X1, X2, X3
	133 Move [X19+24], X0
	134 Move W0, 1
	135 Move [X19+16], W0
	136 Move TEMP, 0
	137 Not TEMP
	138 Move W8, TEMP
	139 Move [X19+16], W8
	140 Move X8, 0x23B5000
	141 Move X8, [X8+2736]
	142 Move W1, 1
	143 Move X0, [X8]
	144 Call 0x1C17D6C
	145 Compare X20, 0
	146 JumpIfEqual {185}
	147 Move X8, 0x23B6000
	148 Move X21, [X20+96]
	149 Move X8, [X8+184]
	150 Move X19, X0
	151 Move X0, [X8]
	152 Call 0x1C17F10
	153 Move X1, X31
	154 Move X20, X0
	155 Call Object..ctor, X0
	156 Move [X20+24], X21
	157 Compare X19, 0
	158 JumpIfEqual {185}
	159 Move X8, [X19]
	160 Move X0, X20
	161 Move X1, [X8+64]
	162 Call 0x1C17E00
	163 Compare X0, 0
	164 JumpIfEqual {186}
	165 Move W8, [X19+24]
	166 Compare W8, 0
	167 JumpIfEqual {189}
	168 Move [X19+32], X20
	169 Move X8, 0x23B5000
	170 Move X8, [X8+1608]
	171 Move X0, [X8]
	172 Move W8, [X0+224]
	173 Compare W8, 0
	174 JumpIfNotEqual {176}
	175 Call 0x1C17DFC
	176 Move X0, X19
	177 Call App.ScheduleAction, X0
	178 Move W0, W31
	179 Move X20, [X31+32]
	180 Move X19, [X31+40]
	181 Move X30, [X31+16]
	182 Move X21, [X31+24]
	183 Add X31, X31, 48
	184 Return X0
	185 Call 0x1C17F20
	186 Call 0x1C17F44
	187 Move X1, X31
	188 Call 0x1C17DEC
	189 Call 0x1C17F28

Method: SpatialSys.CommandLib.Command System.Collections.Generic.IEnumerator<SpatialSys.CommandLib.Command>.get_Current()

Disassembly:
	0x01D3FEAC CBZ X9, 0x1D3FED0
	0x01D3FEB0 LDR X10, [X8 + 0xB0]

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void System.Collections.IEnumerator.Reset()

Disassembly:
	0x01D3FEB4 ADD X10, X10, 0x8
	0x01D3FEB8 LDUR X11, [X10 - 0x8]
	0x01D3FEBC CMP X11, X1
	0x01D3FEC0 B.EQ 0x1D3FEE0
	0x01D3FEC4 SUBS X9, X9, 0x1
	0x01D3FEC8 ADD X10, X10, 0x10
	0x01D3FECC B.NE 0x1D3FEB8
	0x01D3FED0 MOVZ W2, 0x21
	0x01D3FED4 MOV X0, X20
	0x01D3FED8 BL 0x1C5C788
	0x01D3FEDC B 0x1D3FEF0
	0x01D3FEE0 LDR W9, [X10]
	0x01D3FEE4 ADD W9, W9, 0x21
	0x01D3FEE8 ADD X8, X8, W9, 0x4, SXTW

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0x23B5000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0x23B6000
	011 Move X0, [X0+216]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x01D3FEEC ADD X0, X8, 0x138
	0x01D3FEF0 LDP X8, X2, [X0]

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

