Type: AnimalCompany.SFXManager

Method: System.Void Awake()

Disassembly:
	0x01DD2D00 MOV X19, X0
	0x01DD2D04 TBNZ X8, 0x0, 0x1DD2D40
	0x01DD2D08 ADRP X0, 0x2326000
	0x01DD2D0C LDR X0, [X0 + 0x6D0]
	0x01DD2D10 BL 0x1C16CF4
	0x01DD2D14 ADRP X0, 0x2326000
	0x01DD2D18 LDR X0, [X0 + 0x6C8]
	0x01DD2D1C BL 0x1C16CF4
	0x01DD2D20 ADRP X0, 0x2326000
	0x01DD2D24 LDR X0, [X0 + 0x6C0]
	0x01DD2D28 BL 0x1C16CF4
	0x01DD2D2C ADRP X0, 0x2326000
	0x01DD2D30 LDR X0, [X0 + 0x6B8]
	0x01DD2D34 BL 0x1C16CF4
	0x01DD2D38 MOVZ W8, 0x1
	0x01DD2D3C STRB W8, [X23 + 0xC0B]
	0x01DD2D40 LDR X0, [X24]
	0x01DD2D44 BL 0x1C16F10
	0x01DD2D48 LDR X1, [X20]
	0x01DD2D4C MOV X20, X0
	0x01DD2D50 BL 0x24F1248
	0x01DD2D54 STR X20, [X19 + 0x58]
	0x01DD2D58 LDR X0, [X22]
	0x01DD2D5C BL 0x1C16F10
	0x01DD2D60 LDR X1, [X21]
	0x01DD2D64 MOV X20, X0
	0x01DD2D68 BL 0x2ABD364
	0x01DD2D6C STR X20, [X19 + 0x60]
	0x01DD2D70 MOV X0, X19
	0x01DD2D74 LDP X20, X19, [X31 + 0x30]
	0x01DD2D78 LDP X22, X21, [X31 + 0x20]
	0x01DD2D7C LDP X24, X23, [X31 + 0x10]
	0x01DD2D80 MOV X1, X31
	0x01DD2D84 LDR X30, [X31], #0x40
	0x01DD2D88 B 0x1E74F1C
	0x01DD2D8C STP D11, D10, [X31 - 0x50]!
	0x01DD2D90 STP D9, D8, [X31 + 0x10]
	0x01DD2D94 STR X30, [X31 + 0x20]
	0x01DD2D98 STP X22, X21, [X31 + 0x30]
	0x01DD2D9C STP X20, X19, [X31 + 0x40]
	0x01DD2DA0 ADRP X22, 0x2606000
	0x01DD2DA4 ADRP X21, 0x2324000
	0x01DD2DA8 LDRB W8, [X22 + 0xC0C]
	0x01DD2DAC LDR X21, [X21 + 0xA78]
	0x01DD2DB0 MOV X20, X1
	0x01DD2DB4 MOV X19, X0
	0x01DD2DB8 TBNZ X8, 0x0, 0x1DD2DD0
	0x01DD2DBC ADRP X0, 0x2324000
	0x01DD2DC0 LDR X0, [X0 + 0xA78]
	0x01DD2DC4 BL 0x1C16CF4
	0x01DD2DC8 MOVZ W8, 0x1
	0x01DD2DCC STRB W8, [X22 + 0xC0C]
	0x01DD2DD0 ADD X0, X20, 0x24
	0x01DD2DD4 ADD X1, X31, 0x28
	0x01DD2DD8 MOV X2, X31
	0x01DD2DDC STR X31, [X31 + 0x28]
	0x01DD2DE0 ADD X22, X20, 0x1C
	0x01DD2DE4 BL 0x1E8DD00
	0x01DD2DE8 ADD W8, W0, 0xB
	0x01DD2DEC LDR X0, [X21]
	0x01DD2DF0 SXTW X8, W8
	0x01DD2DF4 AND X8, X8, 0xFFFFFFFF
	0x01DD2DF8 ADD X9, X22, X8
	0x01DD2DFC ADD W8, W8, 0xC
	0x01DD2E00 LDP S11, S9, [X9]
	0x01DD2E04 LDR V8, [X9 + 0x8]
	0x01DD2E08 LDR W9, [X0 + 0xE0]
	0x01DD2E0C LDR V10, [X22, W8, SXTW]
	0x01DD2E10 CBNZ W9, 0x1DD2E1C
	0x01DD2E14 BL 0x1C16DFC
	0x01DD2E18 LDR X0, [X21]
	0x01DD2E1C LDR X8, [X0 + 0xB8]
	0x01DD2E20 MOVZ W9, 0x1
	0x01DD2E24 MOV X0, X19
	0x01DD2E28 MOV V0.16B, V11.16B
	0x01DD2E2C STRB W9, [X8 + 0x20]
	0x01DD2E30 LDR X1, [X31 + 0x28]
	0x01DD2E34 MOV V1.16B, V9.16B
	0x01DD2E38 MOV V2.16B, V8.16B
	0x01DD2E3C MOV V3.16B, V10.16B
	0x01DD2E40 BL 0x1DD289C
	0x01DD2E44 LDP X20, X19, [X31 + 0x40]
	0x01DD2E48 LDP X22, X21, [X31 + 0x30]
	0x01DD2E4C LDR X30, [X31 + 0x20]
	0x01DD2E50 LDP D9, D8, [X31 + 0x10]
	0x01DD2E54 LDP D11, D10, [X31], #0x50
	0x01DD2E58 RET
	0x01DD2E5C STP D11, D10, [X31 - 0x50]!
	0x01DD2E60 STP D9, D8, [X31 + 0x10]
	0x01DD2E64 STR X30, [X31 + 0x20]
	0x01DD2E68 STP X22, X21, [X31 + 0x30]
	0x01DD2E6C STP X20, X19, [X31 + 0x40]
	0x01DD2E70 ADRP X21, 0x2606000
	0x01DD2E74 ADRP X22, 0x2324000
	0x01DD2E78 LDRB W8, [X21 + 0xC0D]
	0x01DD2E7C LDR X22, [X22 + 0xA78]
	0x01DD2E80 MOV X20, X1
	0x01DD2E84 MOV X19, X0
	0x01DD2E88 TBNZ X8, 0x0, 0x1DD2EA0
	0x01DD2E8C ADRP X0, 0x2324000
	0x01DD2E90 LDR X0, [X0 + 0xA78]
	0x01DD2E94 BL 0x1C16CF4
	0x01DD2E98 MOVZ W8, 0x1
	0x01DD2E9C STRB W8, [X21 + 0xC0D]
	0x01DD2EA0 LDR X0, [X22]
	0x01DD2EA4 LDRH W21, [X20 + 0x24]
	0x01DD2EA8 LDP S10, S8, [X20 + 0x28]
	0x01DD2EAC LDP S11, S9, [X20 + 0x30]
	0x01DD2EB0 LDR W8, [X0 + 0xE0]
	0x01DD2EB4 CBNZ W8, 0x1DD2EC0
	0x01DD2EB8 BL 0x1C16DFC
	0x01DD2EBC LDR X0, [X22]
	0x01DD2EC0 LDR X8, [X0 + 0xB8]
	0x01DD2EC4 MOV X0, X19
	0x01DD2EC8 MOV W1, W21
	0x01DD2ECC MOV V1.16B, V8.16B
	0x01DD2ED0 MOV V3.16B, V9.16B
	0x01DD2ED4 LDP X20, X19, [X31 + 0x40]
	0x01DD2ED8 LDP X22, X21, [X31 + 0x30]
	0x01DD2EDC LDR X30, [X31 + 0x20]
	0x01DD2EE0 LDP D9, D8, [X31 + 0x10]
	0x01DD2EE4 MOVZ W9, 0x1
	0x01DD2EE8 STRB W9, [X8 + 0x20]
	0x01DD2EEC MOV V0.16B, V10.16B
	0x01DD2EF0 MOV V2.16B, V11.16B
	0x01DD2EF4 LDP D11, D10, [X31], #0x50
	0x01DD2EF8 B 0x1DD26C8
	0x01DD2EFC RET
	0x01DD2F00 STR D8, [X31 - 0x30]!
	0x01DD2F04 STP X30, X21, [X31 + 0x10]
	0x01DD2F08 STP X20, X19, [X31 + 0x20]
	0x01DD2F0C ADRP X20, 0x2606000
	0x01DD2F10 LDRB W8, [X20 + 0xC0E]
	0x01DD2F14 MOV X19, X0
	0x01DD2F18 TBNZ X8, 0x0, 0x1DD2F54
	0x01DD2F1C ADRP X0, 0x2321000
	0x01DD2F20 LDR X0, [X0 + 0x598]
	0x01DD2F24 BL 0x1C16CF4
	0x01DD2F28 ADRP X0, 0x2326000
	0x01DD2F2C LDR X0, [X0 + 0x620]
	0x01DD2F30 BL 0x1C16CF4
	0x01DD2F34 ADRP X0, 0x2326000
	0x01DD2F38 LDR X0, [X0 + 0xC0]
	0x01DD2F3C BL 0x1C16CF4
	0x01DD2F40 ADRP X0, 0x2324000
	0x01DD2F44 LDR X0, [X0 + 0xC30]
	0x01DD2F48 BL 0x1C16CF4
	0x01DD2F4C MOVZ W8, 0x1
	0x01DD2F50 STRB W8, [X20 + 0xC0E]
	0x01DD2F54 LDR W8, [X19 + 0x10]
	0x01DD2F58 CMP W8, 0x1
	0x01DD2F5C B.EQ 0x1DD2FA8
	0x01DD2F60 CBNZ W8, 0x1DD308C
	0x01DD2F64 MOVN W8, 0x0
	0x01DD2F68 STR W8, [X19 + 0x10]
	0x01DD2F6C ADRP X8, 0x2324000
	0x01DD2F70 LDR V8, [X19 + 0x20]
	0x01DD2F74 LDR X8, [X8 + 0xC30]
	0x01DD2F78 LDR X0, [X8]
	0x01DD2F7C BL 0x1C16F10
	0x01DD2F80 ADRP X8, 0xFFFFFFFFFED18000
	0x01DD2F84 LDR V0, [X8 + 0x330]
	0x01DD2F88 MOV X1, X31
	0x01DD2F8C MOV X20, X0
	0x01DD2F90 FADD S0, S8, S0
	0x01DD2F94 BL 0x3C3A634
	0x01DD2F98 MOVZ W0, 0x1
	0x01DD2F9C STR X20, [X19 + 0x18]
	0x01DD2FA0 STR W0, [X19 + 0x10]
	0x01DD2FA4 B 0x1DD3090
	0x01DD2FA8 MOVN W8, 0x0

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X22, 0x2607000
	011 Move X21, 0x2327000
	012 Move X20, 0x2322000
	013 Move W8, [X22+3071]
	014 Move X21, [X21+192]
	015 Move X20, [X20+1432]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {44}
	021 Move X0, 0x2325000
	022 Move X0, [X0+2608]
	023 Call 0x1C17CF4
	024 Move X0, 0x2327000
	025 Move X0, [X0+1560]
	026 Call 0x1C17CF4
	027 Move X0, 0x2325000
	028 Move X0, [X0+3368]
	029 Call 0x1C17CF4
	030 Move X0, 0x2322000
	031 Move X0, [X0+1432]
	032 Call 0x1C17CF4
	033 Move X0, 0x2327000
	034 Move X0, [X0+1568]
	035 Call 0x1C17CF4
	036 Move X0, 0x2327000
	037 Move X0, [X0+1576]
	038 Call 0x1C17CF4
	039 Move X0, 0x2327000
	040 Move X0, [X0+192]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X22+3071], W8
	044 Move X8, [X21]
	045 Move X0, [X20]
	046 Move X8, [X8+184]
	047 Move W9, [X0+224]
	048 Move X20, [X8]
	049 Compare W9, 0
	050 JumpIfNotEqual {52}
	051 Call 0x1C17DFC
	052 Move X0, X20
	053 Move X1, X31
	054 Move X2, X31
	055 Call Object.op_Inequality, X0, X1
	056 Move TEMP, X0
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfEqual {168}
	060 Move X8, [X21]
	061 Move X25, 0x2327000
	062 Move X24, 0x2325000
	063 Move X23, 0x2325000
	064 Move X21, 0x2327000
	065 Move X22, 0x2327000
	066 Move X25, [X25+1568]
	067 Move X24, [X24+3368]
	068 Move X8, [X8+184]
	069 Move X23, [X23+2608]
	070 Move X21, [X21+1576]
	071 Move X22, [X22+1560]
	072 Move W26, 20
	073 Move [X8], X19
	074 Move X20, [X19+88]
	075 Call SFXManager.CreateAudioSource
	076 Compare X20, 0
	077 JumpIfEqual {156}
	078 Move X2, [X25]
	079 Move X1, X0
	080 Move X0, X20
	081 Call Queue`1<Object>.Enqueue, X0, X1
	082 Subtract W26, W26, 1
	083 Move X20, 0x2607000
	084 Move W8, [X20+2751]
	085 Compare W8, 0
	086 JumpIfNotEqual {92}
	087 Move X0, 0x2325000
	088 Move X0, [X0+3368]
	089 Call 0x1C17CF4
	090 Move W8, 1
	091 Move [X20+2751], W8
	092 Move X8, [X24]
	093 Move X8, [X8+184]
	094 Move X0, [X8+56]
	095 Compare X0, 0
	096 JumpIfEqual {99}
	097 Move X1, X31
	098 Call NetworkManager.get_currentRunner, X0
	099 Move [X19+80], X0
	100 Move X8, [X24]
	101 Move X0, [X23]
	102 Move X8, [X8+184]
	103 Move X20, [X8+16]
	104 Call 0x1C17F10
	105 Move X2, [X21]
	106 Move X1, X19
	107 Move X3, X31
	108 Move X21, X0
	109 Call Action`1<Object>..ctor, X0, X1, X2
	110 Move X0, X20
	111 Move X1, X21
	112 Move X2, X31
	113 Call Delegate.Combine, X0, X1
	114 Compare X0, 0
	115 JumpIfEqual {134}
	116 Move X21, [X23]
	117 Move X20, X0
	118 Move X1, X21
	119 Call 0x1C17E00
	120 Compare X0, 0
	121 JumpIfEqual {131}
	122 Move X8, [X24]
	123 Move X8, [X8+184]
	124 Move [X8+16], X0
	125 Move X21, [X23]
	126 Move X0, X20
	127 Move X1, X21
	128 Call 0x1C17E00
	129 Compare X0, 0
	130 JumpIfNotEqual {137}
	131 Move X0, X20
	132 Move X1, X21
	133 Call 0x1C181E0
	134 Move X8, [X24]
	135 Move X8, [X8+184]
	136 Move [X8+16], X31
	137 Move X8, [X19+72]
	138 Compare X8, 0
	139 JumpIfEqual {156}
	140 Move X20, X31
	141 Move W9, [X8+24]
	142 NotImplemented "Instruction CMP not yet implemented."
	143 NotImplemented "Instruction CMP not yet implemented."
	144 Move X0, [X19+96]
	145 Compare X0, 0
	146 JumpIfEqual {156}
	147 Add X8, X8, X20
	148 Move X1, [X8+32]
	149 Move X3, [X22]
	150 Move W2, W20
	151 Call Dictionary`2<Object, UInt16>.set_Item, X0, X1, X2
	152 Move X8, [X19+72]
	153 Add X20, X20, 1
	154 Compare X8, 0
	155 JumpIfNotEqual {141}
	156 Call 0x1C17F20
	157 Move X20, [X31+64]
	158 Move X19, [X31+72]
	159 Move X22, [X31+48]
	160 Move X21, [X31+56]
	161 Move X24, [X31+32]
	162 Move X23, [X31+40]
	163 Move X26, [X31+16]
	164 Move X25, [X31+24]
	165 Move X30, [X31+80]
	166 Return 
	167 Call 0x1C17F28
	168 Move X0, 0x2322000
	169 Move X0, [X0+1432]
	170 Call 0x1C17D08
	171 Call 0x19913D0
	172 Move X0, X19
	173 Move X1, X31
	174 Call Object.Destroy, X0
	175 Move X0, 0x2322000
	176 Move X0, [X0+2000]
	177 Call 0x1C17D08
	178 Call 0x1C17F10
	179 Move X19, X0
	180 Move X0, 0x2327000
	181 Move X0, [X0+1584]
	182 Call 0x1C17D08
	183 Move X1, X0
	184 Move X0, X19
	185 Move X2, X31
	186 Call Exception..ctor, X0, X1
	187 Move X0, 0x2327000
	188 Move X0, [X0+1592]
	189 Call 0x1C17D08
	190 Move X1, X0
	191 Move X0, X19
	192 Call 0x1C17DEC

Method: System.Void OnDestroy()

Disassembly:
	0x01DD3098 LDR V8, [X31], #0x30
	0x01DD309C RET
	0x01DD30A0 BL 0x1C16F20
	0x01DD30A4 LDR X0, [X0 + 0x18]
	0x01DD30A8 RET
	0x01DD30AC STP X30, X19, [X31 - 0x10]!
	0x01DD30B0 ADRP X0, 0x2320000
	0x01DD30B4 LDR X0, [X0 + 0xB40]
	0x01DD30B8 BL 0x1C16D08
	0x01DD30BC BL 0x1C16F10
	0x01DD30C0 MOV X1, X31
	0x01DD30C4 MOV X19, X0
	0x01DD30C8 BL 0x3380310
	0x01DD30CC ADRP X0, 0x2325000
	0x01DD30D0 LDR X0, [X0 + 0x6D8]
	0x01DD30D4 BL 0x1C16D08
	0x01DD30D8 MOV X1, X0
	0x01DD30DC MOV X0, X19
	0x01DD30E0 BL 0x1C16DEC
	0x01DD30E4 LDR X0, [X0 + 0x18]
	0x01DD30E8 RET
	0x01DD30EC STR X30, [X31 - 0x20]!
	0x01DD30F0 STP X20, X19, [X31 + 0x10]
	0x01DD30F4 ADRP X19, 0x2605000
	0x01DD30F8 ADRP X20, 0x2325000
	0x01DD30FC LDRB W8, [X19 + 0xC0F]
	0x01DD3100 LDR X20, [X20 + 0x6E0]
	0x01DD3104 TBNZ X8, 0x0, 0x1DD311C
	0x01DD3108 ADRP X0, 0x2325000
	0x01DD310C LDR X0, [X0 + 0x6E0]
	0x01DD3110 BL 0x1C16CF4
	0x01DD3114 MOVZ W8, 0x1
	0x01DD3118 STRB W8, [X19 + 0xC0F]
	0x01DD311C LDR X0, [X20]
	0x01DD3120 BL 0x1C16F10
	0x01DD3124 MOV X1, X31
	0x01DD3128 MOV X19, X0
	0x01DD312C BL 0x33BDD8C
	0x01DD3130 STR W31, [X19 + 0x10]
	0x01DD3134 MOV X0, X19
	0x01DD3138 LDP X20, X19, [X31 + 0x10]
	0x01DD313C LDR X30, [X31], #0x20
	0x01DD3140 RET
	0x01DD3144 STR X30, [X31 - 0x20]!
	0x01DD3148 STP X20, X19, [X31 + 0x10]
	0x01DD314C MOV W19, W1
	0x01DD3150 MOV X1, X31
	0x01DD3154 MOV X20, X0
	0x01DD3158 BL 0x33BDD8C
	0x01DD315C STR W19, [X20 + 0x10]
	0x01DD3160 LDP X20, X19, [X31 + 0x10]
	0x01DD3164 LDR X30, [X31], #0x20
	0x01DD3168 RET
	0x01DD316C MOV X1, X31
	0x01DD3170 B 0x3C36C30
	0x01DD3174 RET
	0x01DD3178 STR X30, [X31 - 0x30]!
	0x01DD317C STP X22, X21, [X31 + 0x10]
	0x01DD3180 STP X20, X19, [X31 + 0x20]
	0x01DD3184 ADRP X20, 0x2605000
	0x01DD3188 LDRB W8, [X20 + 0xC10]
	0x01DD318C MOV X19, X0
	0x01DD3190 TBNZ X8, 0x0, 0x1DD31C0
	0x01DD3194 ADRP X0, 0x2320000
	0x01DD3198 LDR X0, [X0 + 0xB50]
	0x01DD319C BL 0x1C16CF4
	0x01DD31A0 ADRP X0, 0x2323000
	0x01DD31A4 LDR X0, [X0 + 0xC30]
	0x01DD31A8 BL 0x1C16CF4
	0x01DD31AC ADRP X0, 0x2325000
	0x01DD31B0 LDR X0, [X0 + 0x6E8]
	0x01DD31B4 BL 0x1C16CF4
	0x01DD31B8 MOVZ W8, 0x1
	0x01DD31BC STRB W8, [X20 + 0xC10]
	0x01DD31C0 LDR W21, [X19 + 0x10]
	0x01DD31C4 CMP W21, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x2606000
	008 Move X21, 0x2324000
	009 Move W8, [X20+3072]
	010 Move X21, [X21+2680]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0x2324000
	017 Move X0, [X0+2608]
	018 Call 0x1C17CF4
	019 Move X0, 0x2324000
	020 Move X0, [X0+2680]
	021 Call 0x1C17CF4
	022 Move X0, 0x2324000
	023 Move X0, [X0+3368]
	024 Call 0x1C17CF4
	025 Move X0, 0x2326000
	026 Move X0, [X0+1576]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X20+3072], W8
	030 Move X0, [X21]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Compare X19, 0
	036 JumpIfEqual {90}
	037 Move W8, [X19+48]
	038 Move X22, 0x2324000
	039 Move X22, [X22+3368]
	040 Move X23, 0x2324000
	041 Or W8, W8, 8
	042 Move [X19+48], W8
	043 Move X8, [X22]
	044 Move X21, 0x2326000
	045 Move X8, [X8+184]
	046 Move X23, [X23+2608]
	047 Move X20, [X8+16]
	048 Move X0, [X23]
	049 Move X21, [X21+1576]
	050 Call 0x1C17F10
	051 Move X2, [X21]
	052 Move X1, X19
	053 Move X3, X31
	054 Move X21, X0
	055 Call Action`1<Object>..ctor, X0, X1, X2
	056 Move X0, X20
	057 Move X1, X21
	058 Move X2, X31
	059 Call Delegate.Remove, X0, X1
	060 Compare X0, 0
	061 JumpIfEqual {80}
	062 Move X20, [X23]
	063 Move X19, X0
	064 Move X1, X20
	065 Call 0x1C17E00
	066 Compare X0, 0
	067 JumpIfEqual {77}
	068 Move X8, [X22]
	069 Move X8, [X8+184]
	070 Move [X8+16], X0
	071 Move X20, [X23]
	072 Move X0, X19
	073 Move X1, X20
	074 Call 0x1C17E00
	075 Compare X0, 0
	076 JumpIfNotEqual {83}
	077 Move X0, X19
	078 Move X1, X20
	079 Call 0x1C181E0
	080 Move X8, [X22]
	081 Move X8, [X8+184]
	082 Move [X8+16], X31
	083 Move X20, [X31+32]
	084 Move X19, [X31+40]
	085 Move X22, [X31+16]
	086 Move X21, [X31+24]
	087 Move X30, [X31+48]
	088 Move X23, [X31+56]
	089 Return 
	090 Call 0x1C17F20

Method: System.Void HandleNewRunner(Fusion.NetworkRunner runner)

Disassembly:
	0x01DD31C8 B.HI 0x1DD322C
	0x01DD31CC ADRP X8, 0x2320000

ISIL:
	001 Move [X0+80], X1
	002 Return 

Method: System.Boolean TryGetSFXResourceID(AnimalCompany.RandomSFX sfx, out System.UInt16 id)

Disassembly:
	0x01DD31D0 LDR X8, [X8 + 0xB50]
	0x01DD31D4 MOVN W9, 0x0
	0x01DD31D8 STR W9, [X19 + 0x10]
	0x01DD31DC ADRP X22, 0x2325000
	0x01DD31E0 LDR X0, [X8]
	0x01DD31E4 ADRP X20, 0x2323000
	0x01DD31E8 LDR W8, [X0 + 0xE0]
	0x01DD31EC LDR X22, [X22 + 0x6E8]
	0x01DD31F0 LDR X20, [X20 + 0xC30]
	0x01DD31F4 CBNZ W8, 0x1DD31FC
	0x01DD31F8 BL 0x1C16DFC
	0x01DD31FC LDR X0, [X22]
	0x01DD3200 BL 0x1DD3244
	0x01DD3204 LDR X0, [X20]
	0x01DD3208 BL 0x1C16F10
	0x01DD320C MOVZ W8, 0x42700000
	0x01DD3210 FMOV S0, W8
	0x01DD3214 MOV X1, X31
	0x01DD3218 MOV X20, X0
	0x01DD321C BL 0x3C3A634
	0x01DD3220 MOVZ W8, 0x1
	0x01DD3224 STR X20, [X19 + 0x18]
	0x01DD3228 STR W8, [X19 + 0x10]
	0x01DD322C CMP W21, 0x2
	0x01DD3230 LDP X20, X19, [X31 + 0x20]
	0x01DD3234 LDP X22, X21, [X31 + 0x10]
	0x01DD3238 CSET W0, CC
	0x01DD323C LDR X30, [X31], #0x30
	0x01DD3240 RET
	0x01DD3244 STP X30, X21, [X31 - 0x20]!
	0x01DD3248 STP X20, X19, [X31 + 0x10]
	0x01DD324C ADRP X21, 0x2605000
	0x01DD3250 ADRP X20, 0x2320000
	0x01DD3254 LDRB W8, [X21 + 0xC13]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2606000
	007 Move X22, 0x2326000
	008 Move W8, [X21+3073]
	009 Move X22, [X22+192]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x2326000
	017 Move X0, [X0+1616]
	018 Call 0x1C17CF4
	019 Move X0, 0x2326000
	020 Move X0, [X0+192]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+3073], W8
	024 Move X8, [X22]
	025 Move X8, [X8+184]
	026 Move X8, [X8]
	027 Compare X8, 0
	028 JumpIfEqual {44}
	029 Move X0, [X8+96]
	030 Compare X0, 0
	031 JumpIfEqual {44}
	032 Move X8, 0x2326000
	033 Move X8, [X8+1616]
	034 Move X1, X20
	035 Move X2, X19
	036 Move X20, [X31+32]
	037 Move X19, [X31+40]
	038 Move X3, [X8]
	039 Move X22, [X31+16]
	040 Move X21, [X31+24]
	041 Move X30, [X31+48]
	042 Call Dictionary`2<Object, UInt16>.TryGetValue, X0, X1, X2
	043 Return X0
	044 Call 0x1C17F20

Method: UnityEngine.AudioSource CreateAudioSource()

Disassembly:
	0x01DD2FAC STR W8, [X19 + 0x10]
	0x01DD2FB0 ADRP X8, 0x2321000
	0x01DD2FB4 LDR X8, [X8 + 0x598]
	0x01DD2FB8 LDR X20, [X19 + 0x28]
	0x01DD2FBC LDR X0, [X8]
	0x01DD2FC0 LDR W8, [X0 + 0xE0]
	0x01DD2FC4 CBNZ W8, 0x1DD2FCC
	0x01DD2FC8 BL 0x1C16DFC
	0x01DD2FCC MOV X0, X20
	0x01DD2FD0 MOV X1, X31
	0x01DD2FD4 MOV X2, X31
	0x01DD2FD8 BL 0x3C354F8
	0x01DD2FDC TBZ X0, 0x0, 0x1DD308C
	0x01DD2FE0 LDR X0, [X19 + 0x28]
	0x01DD2FE4 CBZ X0, 0x1DD30A0
	0x01DD2FE8 MOV X1, X31
	0x01DD2FEC MOV X2, X31
	0x01DD2FF0 BL 0x3BFCA38
	0x01DD2FF4 LDR X0, [X19 + 0x28]
	0x01DD2FF8 CBZ X0, 0x1DD30A0
	0x01DD2FFC MOVZ W1, 0x1
	0x01DD3000 MOV X2, X31
	0x01DD3004 BL 0x3BFD05C
	0x01DD3008 LDR X0, [X19 + 0x28]
	0x01DD300C CBZ X0, 0x1DD30A0
	0x01DD3010 MOV X1, X31
	0x01DD3014 BL 0x3C32E90
	0x01DD3018 ADRP X21, 0x2325000
	0x01DD301C LDR X21, [X21 + 0xC0]
	0x01DD3020 LDR X8, [X21]
	0x01DD3024 LDR X8, [X8 + 0xB8]
	0x01DD3028 LDR X8, [X8]
	0x01DD302C CBZ X8, 0x1DD30A0
	0x01DD3030 MOV X20, X0
	0x01DD3034 MOV X0, X8
	0x01DD3038 MOV X1, X31
	0x01DD303C BL 0x3C32ECC
	0x01DD3040 CBZ X0, 0x1DD30A0
	0x01DD3044 MOV X1, X31
	0x01DD3048 BL 0x3C356F8
	0x01DD304C CBZ X20, 0x1DD30A0
	0x01DD3050 MOV X1, X0
	0x01DD3054 MOV X0, X20
	0x01DD3058 MOV X2, X31
	0x01DD305C BL 0x3C3FD20
	0x01DD3060 LDR X8, [X21]
	0x01DD3064 LDR X8, [X8 + 0xB8]
	0x01DD3068 LDR X8, [X8]
	0x01DD306C CBZ X8, 0x1DD30A0
	0x01DD3070 LDR X0, [X8 + 0x58]
	0x01DD3074 CBZ X0, 0x1DD30A0
	0x01DD3078 ADRP X8, 0x2325000
	0x01DD307C LDR X1, [X19 + 0x28]
	0x01DD3080 LDR X8, [X8 + 0x620]
	0x01DD3084 LDR X2, [X8]
	0x01DD3088 BL 0x24F1750
	0x01DD308C MOV W0, W31
	0x01DD3090 LDP X20, X19, [X31 + 0x20]
	0x01DD3094 LDP X30, X21, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0x2607000
	006 Move X20, 0x2322000
	007 Move W8, [X19+3074]
	008 Move X20, [X20+2648]
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {27}
	013 Move X0, 0x2327000
	014 Move X0, [X0+1600]
	015 Call 0x1C17CF4
	016 Move X0, 0x2322000
	017 Move X0, [X0+2648]
	018 Call 0x1C17CF4
	019 Move X0, 0x2327000
	020 Move X0, [X0+192]
	021 Call 0x1C17CF4
	022 Move X0, 0x2327000
	023 Move X0, [X0+1608]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X19+3074], W8
	027 Move X0, [X20]
	028 Call 0x1C17F10
	029 Move X1, X31
	030 Move X19, X0
	031 Call GameObject..ctor, X0
	032 Compare X19, 0
	033 JumpIfEqual {70}
	034 Move X8, 0x2326000
	035 Move X8, [X8+1608]
	036 Move X20, 0x2326000
	037 Move X0, X19
	038 Move X2, X31
	039 Move X1, [X8]
	040 Move X20, [X20+192]
	041 Call Object.set_name, X0, X1
	042 Move X0, X19
	043 Move X1, X31
	044 Call GameObject.get_transform, X0
	045 Move X8, [X20]
	046 Move X8, [X8+184]
	047 Move X8, [X8]
	048 Compare X8, 0
	049 JumpIfEqual {70}
	050 Move X20, X0
	051 Move X0, X8
	052 Move X1, X31
	053 Call Component.get_transform, X0
	054 Compare X20, 0
	055 JumpIfEqual {70}
	056 Move X21, 0x2326000
	057 Move X21, [X21+1600]
	058 Move X1, X0
	059 Move X0, X20
	060 Move X2, X31
	061 Call Transform.set_parent, X0, X1
	062 Move X1, [X21]
	063 Move X0, X19
	064 Move X20, [X31+16]
	065 Move X19, [X31+24]
	066 Move X30, [X31+32]
	067 Move X21, [X31+40]
	068 Call 0x21E61FC, X0
	069 Return X0
	070 Call 0x1C17F20

Method: System.Void PlaySFX(AnimalCompany.RandomSFX sfx, UnityEngine.Vector3 position, System.Single volume)

Disassembly:
	0x01DD2B94 LDP X22, X21, [X31 + 0x30]
	0x01DD2B98 LDR X0, [X8]
	0x01DD2B9C LDR X30, [X31 + 0x20]
	0x01DD2BA0 LDP D9, D8, [X31 + 0x10]
	0x01DD2BA4 MOV X2, X31
	0x01DD2BA8 LDP D11, D10, [X31], #0x50
	0x01DD2BAC B 0x1E77AF8
	0x01DD2BB0 ADRP X0, 0x2326000
	0x01DD2BB4 LDR X0, [X0 + 0x528]
	0x01DD2BB8 BL 0x1C16D08
	0x01DD2BBC BL 0x1C16F10
	0x01DD2BC0 MOV X19, X0
	0x01DD2BC4 ADRP X0, 0x2326000
	0x01DD2BC8 LDR X0, [X0 + 0x530]
	0x01DD2BCC BL 0x1C16D08
	0x01DD2BD0 MOV X1, X0
	0x01DD2BD4 MOV X0, X19
	0x01DD2BD8 MOV X2, X31
	0x01DD2BDC BL 0x330E100
	0x01DD2BE0 ADRP X0, 0x2326000
	0x01DD2BE4 LDR X0, [X0 + 0x6A8]
	0x01DD2BE8 BL 0x1C16D08
	0x01DD2BEC MOV X1, X0
	0x01DD2BF0 MOV X0, X19
	0x01DD2BF4 BL 0x1C16DEC
	0x01DD2BF8 BL 0x1C16F20
	0x01DD2BFC CMP W0, 0x3
	0x01DD2C00 B.HI 0x1DD2C20
	0x01DD2C04 ADRP X9, 0xFFFFFFFFFED5B000
	0x01DD2C08 MOV W8, W0
	0x01DD2C0C ADD X9, X9, 0x936
	0x01DD2C10 ADR X10, 0x10
	0x01DD2C14 LDRB W11, [X9, X8, LSL]
	0x01DD2C18 ADD X10, X10, X11, 0x2, LSL
	0x01DD2C1C BR X10
	0x01DD2C20 B 0x1DD46B0
	0x01DD2C24 B 0x1DD4750
	0x01DD2C28 B 0x1DD47F0
	0x01DD2C2C B 0x1DD4890
	0x01DD2C30 STR D8, [X31 - 0x30]!
	0x01DD2C34 STP X30, X21, [X31 + 0x10]
	0x01DD2C38 STP X20, X19, [X31 + 0x20]
	0x01DD2C3C ADRP X20, 0x2606000
	0x01DD2C40 ADRP X21, 0x2326000
	0x01DD2C44 LDRB W8, [X20 + 0xC0A]
	0x01DD2C48 LDR X21, [X21 + 0x6B0]
	0x01DD2C4C MOV V8.16B, V0.16B
	0x01DD2C50 MOV X19, X0
	0x01DD2C54 TBNZ X8, 0x0, 0x1DD2C6C
	0x01DD2C58 ADRP X0, 0x2326000
	0x01DD2C5C LDR X0, [X0 + 0x6B0]
	0x01DD2C60 BL 0x1C16CF4

ISIL:
	001 Move [X31-64], D11
	002 Move [X31-56], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X20, 0x2607000
	010 Move X21, 0x2327000
	011 Move W8, [X20+3075]
	012 Move X21, [X21+192]
	013 Move V8, V3
	014 Move V9, V2
	015 Move V10, V1
	016 Move V11, V0
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {33}
	022 Move X0, 0x2327000
	023 Move X0, [X0+1528]
	024 Call 0x1C17CF4
	025 Move X0, 0x2327000
	026 Move X0, [X0+1536]
	027 Call 0x1C17CF4
	028 Move X0, 0x2327000
	029 Move X0, [X0+192]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X20+3075], W8
	033 Move X8, [X21]
	034 Move X8, [X8+184]
	035 Move X8, [X8]
	036 Compare X8, 0
	037 JumpIfEqual {66}
	038 Move X0, [X8+88]
	039 Compare X0, 0
	040 JumpIfEqual {66}
	041 Move W8, [X0+32]
	042 Compare W8, 0
	043 JumpIfEqual {48}
	044 Move X8, 0x2327000
	045 Move X8, [X8+1528]
	046 Move X1, [X8]
	047 Call Queue`1<Object>.Dequeue, X0
	048 Call SFXManager.CreateAudioSource
	049 Move X1, X0
	050 Move X0, X19
	051 Move V2, V9
	052 Move V3, V8
	053 Move X20, [X31+48]
	054 Move X19, [X31+56]
	055 Move X30, [X31+32]
	056 Move X21, [X31+40]
	057 Move D9, [X31+16]
	058 Move D8, [X31+24]
	059 Move W2, 1
	060 Move V0, V11
	061 Move V1, V10
	062 Move D11, [X31+64]
	063 Move D10, [X31+72]
	064 Call SFXManager.PlaySFXInternal, X0, X1, V0, X2, X3
	065 Return 
	066 Call 0x1C17F20

Method: System.Void PlaySFX(System.UInt16 sfxID, UnityEngine.Vector3 position, System.Single volume)

Disassembly:
	0x01DD353C CBZ X20, 0x1DD3650
	0x01DD3540 ADRP X8, 0x2322000
	0x01DD3544 LDR X8, [X8 + 0x278]
	0x01DD3548 LDR X9, [X8]
	0x01DD354C LDR X8, [X20]
	0x01DD3550 CMP X8, X9
	0x01DD3554 B.EQ 0x1DD3670
	0x01DD3558 ADRP X9, 0x2320000
	0x01DD355C LDR X9, [X9 + 0xB58]
	0x01DD3560 LDR X9, [X9]
	0x01DD3564 CMP X8, X9
	0x01DD3568 B.EQ 0x1DD3694
	0x01DD356C ADRP X9, 0x2320000
	0x01DD3570 LDR X9, [X9 + 0xA90]
	0x01DD3574 LDR X9, [X9]
	0x01DD3578 CMP X8, X9
	0x01DD357C B.EQ 0x1DD36C4
	0x01DD3580 ADRP X9, 0x2320000
	0x01DD3584 LDR X9, [X9 + 0x758]
	0x01DD3588 LDR X9, [X9]
	0x01DD358C CMP X8, X9
	0x01DD3590 B.EQ 0x1DD36EC
	0x01DD3594 ADRP X9, 0x2320000
	0x01DD3598 LDR X9, [X9 + 0x5A0]
	0x01DD359C LDR X9, [X9]
	0x01DD35A0 CMP X8, X9
	0x01DD35A4 B.EQ 0x1DD3714
	0x01DD35A8 ADRP X9, 0x2323000
	0x01DD35AC LDR X9, [X9 + 0x978]
	0x01DD35B0 LDR X9, [X9]
	0x01DD35B4 CMP X8, X9
	0x01DD35B8 B.EQ 0x1DD3750
	0x01DD35BC ADRP X9, 0x2322000
	0x01DD35C0 LDR X9, [X9 + 0xA60]
	0x01DD35C4 LDR X9, [X9]
	0x01DD35C8 CMP X8, X9
	0x01DD35CC B.EQ 0x1DD3778
	0x01DD35D0 ADRP X9, 0x2320000
	0x01DD35D4 LDR X9, [X9 + 0x720]
	0x01DD35D8 LDR X10, [X9]
	0x01DD35DC LDRB W9, [X8 + 0x130]
	0x01DD35E0 LDRB W11, [X10 + 0x130]
	0x01DD35E4 CMP W9, W11
	0x01DD35E8 B.CC 0x1DD3600
	0x01DD35EC LDR X12, [X8 + 0xC8]
	0x01DD35F0 ADD X11, X12, X11, 0x3, LSL
	0x01DD35F4 LDUR X11, [X11 - 0x8]
	0x01DD35F8 CMP X11, X10
	0x01DD35FC B.EQ 0x1DD37CC
	0x01DD3600 ADRP X10, 0x2325000
	0x01DD3604 LDR X10, [X10 + 0x740]
	0x01DD3608 LDR X10, [X10]
	0x01DD360C LDRB W11, [X10 + 0x130]
	0x01DD3610 CMP W9, W11
	0x01DD3614 B.CC 0x1DD362C
	0x01DD3618 LDR X9, [X8 + 0xC8]
	0x01DD361C ADD X9, X9, X11, 0x3, LSL
	0x01DD3620 LDUR X9, [X9 - 0x8]
	0x01DD3624 CMP X9, X10
	0x01DD3628 B.EQ 0x1DD3870
	0x01DD362C LDP X9, X1, [X8 + 0x168]
	0x01DD3630 MOV X0, X20
	0x01DD3634 BLR X9
	0x01DD3638 ADRP X8, 0x2325000
	0x01DD363C LDR X8, [X8 + 0x748]
	0x01DD3640 MOV X20, X0
	0x01DD3644 LDR X8, [X8]
	0x01DD3648 MOV X0, X8
	0x01DD364C B 0x1DD367C
	0x01DD3650 ADRP X8, 0x2325000
	0x01DD3654 LDR X8, [X8 + 0x748]
	0x01DD3658 LDR X0, [X8]
	0x01DD365C BL 0x1C16F10
	0x01DD3660 MOV X1, X31
	0x01DD3664 MOV X19, X0
	0x01DD3668 BL 0x31D3D04
	0x01DD366C B 0x1DD37A8
	0x01DD3670 ADRP X8, 0x2325000
	0x01DD3674 LDR X8, [X8 + 0x748]
	0x01DD3678 LDR X0, [X8]
	0x01DD367C BL 0x1C16F10
	0x01DD3680 MOV X1, X20
	0x01DD3684 MOV X2, X31
	0x01DD3688 MOV X19, X0
	0x01DD368C BL 0x31DC5D8
	0x01DD3690 B 0x1DD37A8
	0x01DD3694 MOV X0, X20
	0x01DD3698 BL 0x1C16E08
	0x01DD369C ADRP X8, 0x2325000
	0x01DD36A0 LDRB W20, [X0]
	0x01DD36A4 LDR X8, [X8 + 0x748]
	0x01DD36A8 LDR X0, [X8]
	0x01DD36AC BL 0x1C16F10
	0x01DD36B0 MOV W1, W20
	0x01DD36B4 MOV X2, X31
	0x01DD36B8 MOV X19, X0
	0x01DD36BC BL 0x31DC6C4
	0x01DD36C0 B 0x1DD37A8
	0x01DD36C4 MOV X0, X20

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], D11
	003 Move [X31+24], D10
	004 Move [X31+32], D9
	005 Move [X31+40], D8
	006 Move [X31+48], X30
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0x2606000
	011 Move X21, 0x2326000
	012 Move W8, [X20+3076]
	013 Move X21, [X21+192]
	014 Move V8, V3
	015 Move V9, V2
	016 Move V10, V1
	017 Move V11, V0
	018 Move W19, W0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {43}
	023 Move X0, 0x2321000
	024 Move X0, [X0+1928]
	025 Call 0x1C17CF4
	026 Move X0, 0x2326000
	027 Move X0, [X0+192]
	028 Call 0x1C17CF4
	029 Move X0, 0x2326000
	030 Move X0, [X0+1624]
	031 Call 0x1C17CF4
	032 Move X0, 0x2326000
	033 Move X0, [X0+1632]
	034 Call 0x1C17CF4
	035 Move X0, 0x2326000
	036 Move X0, [X0+1640]
	037 Call 0x1C17CF4
	038 Move X0, 0x2326000
	039 Move X0, [X0+1648]
	040 Call 0x1C17CF4
	041 Move W8, 1
	042 Move [X20+3076], W8
	043 Move X8, [X21]
	044 Move X8, [X8+184]
	045 Move X8, [X8]
	046 Compare X8, 0
	047 JumpIfEqual {115}
	048 Move X8, [X8+72]
	049 Compare X8, 0
	050 JumpIfEqual {115}
	051 Move W9, [X8+24]
	052 NotImplemented "Instruction CMP not yet implemented."
	053 And W10, W19, 0xFFFF
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Add X8, X8, W19
	056 Move X0, [X8+32]
	057 Move V0, V11
	058 Move V1, V10
	059 Move V2, V9
	060 Move V3, V8
	061 Move X20, [X31+64]
	062 Move X19, [X31+72]
	063 Move X30, [X31+48]
	064 Move X21, [X31+56]
	065 Move D9, [X31+32]
	066 Move D8, [X31+40]
	067 Move D11, [X31+16]
	068 Move D10, [X31+24]
	069 Add X31, X31, 80
	070 Call SFXManager.PlaySFX, X0, X1, V0
	071 Return 
	072 Move X8, 0x2326000
	073 Move X8, [X8+1624]
	074 Add X1, X31, 12
	075 NotImplemented "Instruction STRH not yet implemented."
	076 Move X0, [X8]
	077 Call 0x1C17E04
	078 Move X8, 0x2326000
	079 Move X8, [X8+1640]
	080 Move X1, X0
	081 Move X2, X31
	082 Move X8, [X8]
	083 Move X0, X8
	084 Call String.Format, X0, X1
	085 Move X8, 0x2321000
	086 Move X8, [X8+1928]
	087 Move X19, X0
	088 Move X8, [X8]
	089 Move W9, [X8+224]
	090 Compare W9, 0
	091 JumpIfNotEqual {94}
	092 Move X0, X8
	093 Call 0x1C17DFC
	094 Move X8, 0x2326000
	095 Move X9, 0x2326000
	096 Move X8, [X8+1632]
	097 Move X9, [X9+1648]
	098 Move W4, 86
	099 Move X0, X19
	100 Move X2, [X8]
	101 Move X3, [X9]
	102 Move X1, X31
	103 Move X5, X31
	104 Call Log.Error, X0, X1, X2, X3, X4
	105 Move X20, [X31+64]
	106 Move X19, [X31+72]
	107 Move X30, [X31+48]
	108 Move X21, [X31+56]
	109 Move D9, [X31+32]
	110 Move D8, [X31+40]
	111 Move D11, [X31+16]
	112 Move D10, [X31+24]
	113 Add X31, X31, 80
	114 Return 
	115 Call 0x1C17F20
	116 Call 0x1C17F28

Method: System.Void PlaySFXAsRPC(AnimalCompany.RandomSFX sfx, UnityEngine.Vector3 position, System.Single volume)

Disassembly:
	0x01DC25C4 LDR W8, [X0 + 0xE0]
	0x01DC25C8 CBNZ W8, 0x1DC25D0
	0x01DC25CC BL 0x1C16DFC
	0x01DC25D0 ADRP X22, 0x2331000
	0x01DC25D4 LDR X22, [X22 + 0x598]
	0x01DC25D8 MOV X0, X31
	0x01DC25DC BL 0x1DB1DCC
	0x01DC25E0 MOV X20, X0
	0x01DC25E4 TBZ X19, 0x0, 0x1DC261C
	0x01DC25E8 LDR X0, [X22]
	0x01DC25EC LDR W8, [X0 + 0xE0]
	0x01DC25F0 CBNZ W8, 0x1DC25F8
	0x01DC25F4 BL 0x1C16DFC
	0x01DC25F8 MOV X0, X20
	0x01DC25FC MOV X1, X31
	0x01DC2600 MOV X2, X31
	0x01DC2604 BL 0x3C354F8
	0x01DC2608 TBZ X0, 0x0, 0x1DC261C
	0x01DC260C CBZ X20, 0x1DC26BC
	0x01DC2610 MOV X0, X20
	0x01DC2614 MOV X1, X31
	0x01DC2618 BL 0x1DB4D50
	0x01DC261C LDR X0, [X21 + 0x20]
	0x01DC2620 CBZ X0, 0x1DC26BC
	0x01DC2624 MOV V0.16B, V13.16B
	0x01DC2628 MOV V1.16B, V12.16B
	0x01DC262C MOV V2.16B, V11.16B
	0x01DC2630 MOV V3.16B, V10.16B
	0x01DC2634 MOV V4.16B, V9.16B
	0x01DC2638 MOV V5.16B, V8.16B
	0x01DC263C MOV X1, X31
	0x01DC2640 BL 0x1E1DA44
	0x01DC2644 LDR X0, [X21 + 0x38]
	0x01DC2648 CBZ X0, 0x1DC26BC
	0x01DC264C BL 0x1DC2808
	0x01DC2650 TBNZ X19, 0x0, 0x1DC26A0
	0x01DC2654 LDR X0, [X22]
	0x01DC2658 LDR W8, [X0 + 0xE0]
	0x01DC265C CBNZ W8, 0x1DC2664
	0x01DC2660 BL 0x1C16DFC
	0x01DC2664 MOV X0, X20
	0x01DC2668 MOV X1, X31
	0x01DC266C MOV X2, X31
	0x01DC2670 BL 0x3C354F8
	0x01DC2674 TBZ X0, 0x0, 0x1DC26A0
	0x01DC2678 CBZ X20, 0x1DC26BC
	0x01DC267C MOV X0, X20
	0x01DC2680 LDP X20, X19, [X31 + 0x50]
	0x01DC2684 LDP X22, X21, [X31 + 0x40]
	0x01DC2688 LDR X30, [X31 + 0x30]
	0x01DC268C LDP D9, D8, [X31 + 0x20]
	0x01DC2690 LDP D11, D10, [X31 + 0x10]
	0x01DC2694 MOV X1, X31
	0x01DC2698 LDP D13, D12, [X31], #0x60
	0x01DC269C B 0x1DB4EBC
	0x01DC26A0 LDP X20, X19, [X31 + 0x50]
	0x01DC26A4 LDP X22, X21, [X31 + 0x40]
	0x01DC26A8 LDR X30, [X31 + 0x30]
	0x01DC26AC LDP D9, D8, [X31 + 0x20]
	0x01DC26B0 LDP D11, D10, [X31 + 0x10]
	0x01DC26B4 LDP D13, D12, [X31], #0x60
	0x01DC26B8 RET
	0x01DC26BC BL 0x1C16F20
	0x01DC26C0 STR D10, [X31 - 0x40]!
	0x01DC26C4 STP D9, D8, [X31 + 0x8]
	0x01DC26C8 STR X30, [X31 + 0x18]
	0x01DC26CC STP X22, X21, [X31 + 0x20]
	0x01DC26D0 STP X20, X19, [X31 + 0x30]
	0x01DC26D4 ADRP X22, 0x2616000
	0x01DC26D8 ADRP X20, 0x2333000
	0x01DC26DC LDRB W8, [X22 + 0xB86]
	0x01DC26E0 LDR X20, [X20 + 0x9A0]
	0x01DC26E4 MOV W19, W1
	0x01DC26E8 MOV V8.16B, V2.16B
	0x01DC26EC MOV V9.16B, V1.16B
	0x01DC26F0 MOV V10.16B, V0.16B
	0x01DC26F4 MOV X21, X0
	0x01DC26F8 TBNZ X8, 0x0, 0x1DC271C
	0x01DC26FC ADRP X0, 0x2333000
	0x01DC2700 LDR X0, [X0 + 0x9A0]
	0x01DC2704 BL 0x1C16CF4
	0x01DC2708 ADRP X0, 0x2331000
	0x01DC270C LDR X0, [X0 + 0x598]
	0x01DC2710 BL 0x1C16CF4
	0x01DC2714 MOVZ W8, 0x1
	0x01DC2718 STRB W8, [X22 + 0xB86]
	0x01DC271C LDR X0, [X20]
	0x01DC2720 LDR W8, [X0 + 0xE0]
	0x01DC2724 CBNZ W8, 0x1DC272C
	0x01DC2728 BL 0x1C16DFC
	0x01DC272C ADRP X22, 0x2331000
	0x01DC2730 LDR X22, [X22 + 0x598]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], D11
	003 Move [X31+24], D10
	004 Move [X31+32], D9
	005 Move [X31+40], D8
	006 Move [X31+48], X30
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0x2617000
	011 Move X21, 0x2337000
	012 Move W8, [X20+3077]
	013 Move X21, [X21+192]
	014 Move V8, V3
	015 Move V9, V2
	016 Move V10, V1
	017 Move V11, V0
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {31}
	023 Move X0, 0x2332000
	024 Move X0, [X0+1432]
	025 Call 0x1C17CF4
	026 Move X0, 0x2337000
	027 Move X0, [X0+192]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X20+3077], W8
	031 Move X8, [X21]
	032 NotImplemented "Instruction STRH not yet implemented."
	033 Move X8, [X8+184]
	034 Move X8, [X8]
	035 Compare X8, 0
	036 JumpIfEqual {112}
	037 Move X9, 0x2332000
	038 Move X9, [X9+1432]
	039 Move X20, [X8+80]
	040 Move X0, [X9]
	041 Move W9, [X0+224]
	042 Compare W9, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Move X0, X20
	046 Move X1, X31
	047 Move X2, X31
	048 Call Object.op_Equality, X0, X1
	049 Move TEMP, X0
	050 And TEMP, TEMP, 1
	051 Compare TEMP, 1
	052 JumpIfEqual {84}
	053 Move X8, [X21]
	054 Move X8, [X8+184]
	055 Move X8, [X8]
	056 Compare X8, 0
	057 JumpIfEqual {112}
	058 Move X0, [X8+80]
	059 Compare X0, 0
	060 JumpIfEqual {112}
	061 Move X1, X31
	062 Call NetworkRunner.get_State, X0
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Add X1, X31, 12
	065 Move X0, X19
	066 Call SFXManager.TryGetSFXResourceID, X0, X1
	067 Move X8, [X21]
	068 Move X8, [X8+184]
	069 Move X8, [X8]
	070 Compare X8, 0
	071 JumpIfEqual {112}
	072 Move X20, [X8+80]
	073 Move TEMP, X0
	074 And TEMP, TEMP, 1
	075 Compare TEMP, 1
	076 JumpIfNotEqual {100}
	077 NotImplemented "Instruction LDRH not yet implemented."
	078 Move X0, X20
	079 Move V0, V11
	080 Move V1, V10
	081 Move V2, V9
	082 Move V3, V8
	083 Call SFXManager.RPC_PlaySFX, X0, X1, X2, V0
	084 Move X0, X19
	085 Move V0, V11
	086 Move V1, V10
	087 Move V2, V9
	088 Move V3, V8
	089 Call SFXManager.PlaySFX, X0, X1, V0
	090 Move X20, [X31+64]
	091 Move X19, [X31+72]
	092 Move X30, [X31+48]
	093 Move X21, [X31+56]
	094 Move D9, [X31+32]
	095 Move D8, [X31+40]
	096 Move D11, [X31+16]
	097 Move D10, [X31+24]
	098 Add X31, X31, 80
	099 Return 
	100 Compare X19, 0
	101 JumpIfEqual {112}
	102 Move X0, X19
	103 Move X1, X31
	104 Call Object.get_name, X0
	105 Move X1, X0
	106 Move X0, X20
	107 Move V0, V11
	108 Move V1, V10
	109 Move V2, V9
	110 Move V3, V8
	111 Call SFXManager.RPC_PlaySFX, X0, X1, X2, V0
	112 Call 0x1C17F20

Method: System.Void PlaySFXAsRPC(System.String sfxName, UnityEngine.Vector3 position, System.Single volume)

Disassembly:
	0x01DC339C FMOV S0, W31
	0x01DC33A0 FCMP S15, S8
	0x01DC33A4 FMOV S11, W31
	0x01DC33A8 B.EQ 0x1DC33E4
	0x01DC33AC FMUL S1, S14, S14
	0x01DC33B0 FMUL S2, S13, S13
	0x01DC33B4 FMUL S3, S12, S12
	0x01DC33B8 FADD S1, S1, S2
	0x01DC33BC FADD S1, S3, S1
	0x01DC33C0 FSQRT S1, S1
	0x01DC33C4 FSUB S1, S1, S15
	0x01DC33C8 FSUB S2, S8, S15
	0x01DC33CC FDIV S1, S1, S2
	0x01DC33D0 FCMP S1, 0x0
	0x01DC33D4 FMOV S11, W31
	0x01DC33D8 B.MI 0x1DC33E4
	0x01DC33DC FMOV S2, 1
	0x01DC33E0 FMIN S11, S1, S2
	0x01DC33E4 LDR X8, [X23]
	0x01DC33E8 FMAX S0, S11, S0
	0x01DC33EC MOV W0, W19
	0x01DC33F0 LDR X8, [X8 + 0xB8]
	0x01DC33F4 LDP S1, S2, [X8 + 0x58]
	0x01DC33F8 ADRP X8, 0xFFFFFFFFFED27000
	0x01DC33FC FSUB S2, S2, S1
	0x01DC3400 FMUL S0, S0, S2
	0x01DC3404 FADD S0, S1, S0
	0x01DC3408 LDR V1, [X8 + 0xBC]
	0x01DC340C BL 0x1DC2324
	0x01DC3410 CBZ X22, 0x1DC3610
	0x01DC3414 ADRP X8, 0x2335000
	0x01DC3418 LDR X21, [X20 + 0x40]
	0x01DC341C LDR X8, [X8 + 0x120]
	0x01DC3420 ADD X1, X31, 0x58
	0x01DC3424 MOV X0, X22

ISIL:
	001 Move [X31-64], D11
	002 Move [X31-56], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X20, 0x2616000
	010 Move X21, 0x2336000
	011 Move W8, [X20+3078]
	012 Move X21, [X21+192]
	013 Move V8, V3
	014 Move V9, V2
	015 Move V10, V1
	016 Move V11, V0
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {27}
	022 Move X0, 0x2336000
	023 Move X0, [X0+192]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X20+3078], W8
	027 Move X8, [X21]
	028 Move X8, [X8+184]
	029 Move X8, [X8]
	030 Compare X8, 0
	031 JumpIfEqual {48}
	032 Move X0, [X8+80]
	033 Move X1, X19
	034 Move V2, V9
	035 Move V3, V8
	036 Move X20, [X31+48]
	037 Move X19, [X31+56]
	038 Move X30, [X31+32]
	039 Move X21, [X31+40]
	040 Move D9, [X31+16]
	041 Move D8, [X31+24]
	042 Move V0, V11
	043 Move V1, V10
	044 Move D11, [X31+64]
	045 Move D10, [X31+72]
	046 Call SFXManager.RPC_PlaySFX, X0, X1, X2, V0
	047 Return 
	048 Call 0x1C17F20

Method: System.Void RPC_PlaySFX(Fusion.NetworkRunner runner, System.String sfxResourceName, UnityEngine.Vector3 position, System.Single volume)

Disassembly:
	0x01DD389C ADRP X24, 0x2320000
	0x01DD38A0 LDR X23, [X23 + 0x738]
	0x01DD38A4 LDR X24, [X24 + 0xB50]
	0x01DD38A8 MOV W21, W31
	0x01DD38AC LDR X2, [X23]
	0x01DD38B0 MOV X0, X20
	0x01DD38B4 MOV W1, W21
	0x01DD38B8 BL 0x301BCCC
	0x01DD38BC LDR X8, [X24]
	0x01DD38C0 MOV X22, X0
	0x01DD38C4 LDR W9, [X8 + 0xE0]
	0x01DD38C8 CBNZ W9, 0x1DD38D4
	0x01DD38CC MOV X0, X8
	0x01DD38D0 BL 0x1C16DFC
	0x01DD38D4 MOV X0, X22
	0x01DD38D8 BL 0x1DD3418
	0x01DD38DC CBZ X19, 0x1DD390C
	0x01DD38E0 MOV X2, X0
	0x01DD38E4 MOV X0, X19
	0x01DD38E8 MOV W1, W21
	0x01DD38EC MOV X3, X31
	0x01DD38F0 BL 0x31DA2C8
	0x01DD38F4 LDR W8, [X20 + 0x18]
	0x01DD38F8 ADD W21, W21, 0x1
	0x01DD38FC CMP W21, W8
	0x01DD3900 B.LT 0x1DD38AC
	0x01DD3904 B 0x1DD37A8
	0x01DD3908 BL 0x1C16F20
	0x01DD390C BL 0x1C16F20
	0x01DD3910 B 0x1DD391C
	0x01DD3914 B 0x1DD391C
	0x01DD3918 B 0x1DD391C
	0x01DD391C MOV X20, X0
	0x01DD3920 CMP W1, 0x1
	0x01DD3924 B.NE 0x1DD3958
	0x01DD3928 MOV X0, X20
	0x01DD392C BL 0x3EB1AD0
	0x01DD3930 LDR X21, [X0]
	0x01DD3934 BL 0x3EB1AE0
	0x01DD3938 ADRP X8, 0x2325000
	0x01DD393C LDR X8, [X8 + 0x708]
	0x01DD3940 ADD X0, X31, 0x0
	0x01DD3944 LDR X1, [X8]
	0x01DD3948 BL 0x2C0A83C
	0x01DD394C CBZ X21, 0x1DD37A8
	0x01DD3950 MOV X0, X21
	0x01DD3954 BL 0x1C16F18
	0x01DD3958 MOV X21, X31
	0x01DD395C B 0x1DD3964
	0x01DD3960 MOV X20, X0
	0x01DD3964 ADRP X8, 0x2325000
	0x01DD3968 LDR X8, [X8 + 0x708]
	0x01DD396C LDR X1, [X8]
	0x01DD3970 ADD X0, X31, 0x0
	0x01DD3974 BL 0x2C0A83C
	0x01DD3978 CBNZ X21, 0x1DD3984
	0x01DD397C MOV X0, X20
	0x01DD3980 BL 0x1D2C690
	0x01DD3984 MOV X0, X21
	0x01DD3988 BL 0x1C16F18
	0x01DD398C BL 0x1990590
	0x01DD3990 SUB X31, X31, 0x70
	0x01DD3994 STR X30, [X31 + 0x30]
	0x01DD3998 STP X24, X23, [X31 + 0x40]
	0x01DD399C STP X22, X21, [X31 + 0x50]
	0x01DD39A0 STP X20, X19, [X31 + 0x60]
	0x01DD39A4 ADRP X21, 0x2605000
	0x01DD39A8 ADRP X19, 0x2325000
	0x01DD39AC LDRB W8, [X21 + 0xC17]
	0x01DD39B0 LDR X19, [X19 + 0x748]
	0x01DD39B4 MOV X20, X0
	0x01DD39B8 TBNZ X8, 0x0, 0x1DD3A24
	0x01DD39BC ADRP X0, 0x2320000
	0x01DD39C0 LDR X0, [X0 + 0xB50]
	0x01DD39C4 BL 0x1C16CF4
	0x01DD39C8 ADRP X0, 0x2325000
	0x01DD39CC LDR X0, [X0 + 0x700]
	0x01DD39D0 BL 0x1C16CF4
	0x01DD39D4 ADRP X0, 0x2325000
	0x01DD39D8 LDR X0, [X0 + 0x708]
	0x01DD39DC BL 0x1C16CF4
	0x01DD39E0 ADRP X0, 0x2325000
	0x01DD39E4 LDR X0, [X0 + 0x710]
	0x01DD39E8 BL 0x1C16CF4
	0x01DD39EC ADRP X0, 0x2325000
	0x01DD39F0 LDR X0, [X0 + 0x718]
	0x01DD39F4 BL 0x1C16CF4
	0x01DD39F8 ADRP X0, 0x2325000
	0x01DD39FC LDR X0, [X0 + 0x720]
	0x01DD3A00 BL 0x1C16CF4
	0x01DD3A04 ADRP X0, 0x2325000
	0x01DD3A08 LDR X0, [X0 + 0x728]
	0x01DD3A0C BL 0x1C16CF4
	0x01DD3A10 ADRP X0, 0x2325000
	0x01DD3A14 LDR X0, [X0 + 0x748]
	0x01DD3A18 BL 0x1C16CF4
	0x01DD3A1C MOVZ W8, 0x1
	0x01DD3A20 STRB W8, [X21 + 0xC17]
	0x01DD3A24 LDR X0, [X19]
	0x01DD3A28 MOVI V0.2D, 0x0
	0x01DD3A2C STR X31, [X31 + 0x20]
	0x01DD3A30 STP V0, V0, [X31]
	0x01DD3A34 BL 0x1C16F10
	0x01DD3A38 MOV X1, X31
	0x01DD3A3C MOV X19, X0
	0x01DD3A40 BL 0x31D3D04
	0x01DD3A44 CBZ X20, 0x1DD3AEC
	0x01DD3A48 ADRP X8, 0x2325000
	0x01DD3A4C LDR X8, [X8 + 0x700]
	0x01DD3A50 ADRP X23, 0x2325000
	0x01DD3A54 ADRP X24, 0x2320000
	0x01DD3A58 ADRP X22, 0x2325000
	0x01DD3A5C LDR X1, [X8]
	0x01DD3A60 LDR X23, [X23 + 0x710]
	0x01DD3A64 LDR X24, [X24 + 0xB50]
	0x01DD3A68 LDR X22, [X22 + 0x708]
	0x01DD3A6C ADD X8, X31, 0x0
	0x01DD3A70 MOV X0, X20
	0x01DD3A74 BL 0x2AA54BC
	0x01DD3A78 LDR X1, [X23]
	0x01DD3A7C ADD X0, X31, 0x0
	0x01DD3A80 BL 0x2C0A728
	0x01DD3A84 TBZ X0, 0x0, 0x1DD3AC0
	0x01DD3A88 LDR X0, [X24]
	0x01DD3A8C LDP X20, X21, [X31 + 0x10]
	0x01DD3A90 LDR W8, [X0 + 0xE0]
	0x01DD3A94 CBNZ W8, 0x1DD3A9C
	0x01DD3A98 BL 0x1C16DFC
	0x01DD3A9C MOV X0, X21
	0x01DD3AA0 BL 0x1DD3418
	0x01DD3AA4 CBZ X19, 0x1DD3AE8
	0x01DD3AA8 MOV X2, X0
	0x01DD3AAC MOV X0, X19
	0x01DD3AB0 MOV X1, X20
	0x01DD3AB4 MOV X3, X31
	0x01DD3AB8 BL 0x31D3E30
	0x01DD3ABC B 0x1DD3A78
	0x01DD3AC0 LDR X1, [X22]
	0x01DD3AC4 ADD X0, X31, 0x0
	0x01DD3AC8 BL 0x2C0A83C
	0x01DD3ACC MOV X0, X19
	0x01DD3AD0 LDP X20, X19, [X31 + 0x60]
	0x01DD3AD4 LDP X22, X21, [X31 + 0x50]
	0x01DD3AD8 LDP X24, X23, [X31 + 0x40]
	0x01DD3ADC LDR X30, [X31 + 0x30]
	0x01DD3AE0 ADD X31, X31, 0x70
	0x01DD3AE4 RET
	0x01DD3AE8 BL 0x1C16F20
	0x01DD3AEC BL 0x1C16F20
	0x01DD3AF0 B 0x1DD3AFC
	0x01DD3AF4 B 0x1DD3AFC
	0x01DD3AF8 B 0x1DD3AFC
	0x01DD3AFC CMP W1, 0x1
	0x01DD3B00 B.NE 0x1DD3B28
	0x01DD3B04 BL 0x3EB1AD0
	0x01DD3B08 LDR X20, [X0]
	0x01DD3B0C BL 0x3EB1AE0
	0x01DD3B10 LDR X1, [X22]
	0x01DD3B14 ADD X0, X31, 0x0
	0x01DD3B18 BL 0x2C0A83C
	0x01DD3B1C CBZ X20, 0x1DD3ACC
	0x01DD3B20 MOV X0, X20
	0x01DD3B24 BL 0x1C16F18
	0x01DD3B28 MOV X19, X0
	0x01DD3B2C MOV X20, X31
	0x01DD3B30 B 0x1DD3B38
	0x01DD3B34 MOV X19, X0
	0x01DD3B38 LDR X1, [X22]
	0x01DD3B3C ADD X0, X31, 0x0
	0x01DD3B40 BL 0x2C0A83C
	0x01DD3B44 CBNZ X20, 0x1DD3B50
	0x01DD3B48 MOV X0, X19
	0x01DD3B4C BL 0x1D2C690
	0x01DD3B50 MOV X0, X20
	0x01DD3B54 BL 0x1C16F18
	0x01DD3B58 BL 0x1990590
	0x01DD3B5C STR X30, [X31 - 0x30]!
	0x01DD3B60 STP X22, X21, [X31 + 0x10]
	0x01DD3B64 STP X20, X19, [X31 + 0x20]
	0x01DD3B68 ADRP X22, 0x2605000
	0x01DD3B6C ADRP X21, 0x2320000
	0x01DD3B70 LDRB W8, [X22 + 0xC15]
	0x01DD3B74 LDR X21, [X21 + 0xB50]
	0x01DD3B78 MOV X20, X1
	0x01DD3B7C MOV X19, X0
	0x01DD3B80 TBNZ X8, 0x0, 0x1DD3B98
	0x01DD3B84 ADRP X0, 0x2320000
	0x01DD3B88 LDR X0, [X0 + 0xB50]
	0x01DD3B8C BL 0x1C16CF4
	0x01DD3B90 MOVZ W8, 0x1
	0x01DD3B94 STRB W8, [X22 + 0xC15]
	0x01DD3B98 LDR X0, [X21]
	0x01DD3B9C LDR W8, [X0 + 0xE0]
	0x01DD3BA0 CBNZ W8, 0x1DD3BAC
	0x01DD3BA4 BL 0x1C16DFC
	0x01DD3BA8 LDR X0, [X21]
	0x01DD3BAC LDR X8, [X0 + 0xB8]
	0x01DD3BB0 LDRB W8, [X8]
	0x01DD3BB4 CBZ W8, 0x1DD3BF4
	0x01DD3BB8 CBZ X20, 0x1DD3C1C
	0x01DD3BBC LDR X8, [X20 + 0x18]
	0x01DD3BC0 CBZ X8, 0x1DD3C04
	0x01DD3BC4 LDR W8, [X0 + 0xE0]
	0x01DD3BC8 CBNZ W8, 0x1DD3BD0
	0x01DD3BCC BL 0x1C16DFC
	0x01DD3BD0 MOV X0, X20
	0x01DD3BD4 BL 0x1DD3C20
	0x01DD3BD8 MOV X1, X0
	0x01DD3BDC MOV X0, X19
	0x01DD3BE0 LDP X20, X19, [X31 + 0x20]
	0x01DD3BE4 LDP X22, X21, [X31 + 0x10]
	0x01DD3BE8 MOV X2, X31
	0x01DD3BEC LDR X30, [X31], #0x30
	0x01DD3BF0 B 0x31D79B4
	0x01DD3BF4 LDP X20, X19, [X31 + 0x20]
	0x01DD3BF8 LDP X22, X21, [X31 + 0x10]

ISIL:
	001 Move [X31-80], D11
	002 Move [X31-72], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X21, 0x2606000
	011 Move X22, 0x2324000
	012 Move W8, [X21+3079]
	013 Move X22, [X22+2680]
	014 Move V8, V3
	015 Move V9, V2
	016 Move V10, V1
	017 Move V11, V0
	018 Move X19, X1
	019 Move X20, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {50}
	024 Move X0, 0x2321000
	025 Move X0, [X0+1928]
	026 Call 0x1C17CF4
	027 Move X0, 0x2324000
	028 Move X0, [X0+2680]
	029 Call 0x1C17CF4
	030 Move X0, 0x2321000
	031 Move X0, [X0+1432]
	032 Call 0x1C17CF4
	033 Move X0, 0x2326000
	034 Move X0, [X0+1672]
	035 Call 0x1C17CF4
	036 Move X0, 0x2326000
	037 Move X0, [X0+1680]
	038 Call 0x1C17CF4
	039 Move X0, 0x2326000
	040 Move X0, [X0+1632]
	041 Call 0x1C17CF4
	042 Move X0, 0x2326000
	043 Move X0, [X0+1688]
	044 Call 0x1C17CF4
	045 Move X0, 0x2326000
	046 Move X0, [X0+1696]
	047 Call 0x1C17CF4
	048 Move W8, 1
	049 Move [X21+3079], W8
	050 Move X0, [X22]
	051 Move W8, [X0+224]
	052 Compare W8, 0
	053 JumpIfNotEqual {56}
	054 Call 0x1C17DFC
	055 Move X0, [X22]
	056 Move X8, [X0+184]
	057 Move W9, [X8+32]
	058 Compare W9, 0
	059 JumpIfEqual {125}
	060 Move W9, [X0+224]
	061 Compare W9, 0
	062 JumpIfNotEqual {66}
	063 Call 0x1C17DFC
	064 Move X8, [X22]
	065 Move X8, [X8+184]
	066 Move [X8+32], W31
	067 Move X8, 0x2326000
	068 Move X8, [X8+1672]
	069 Move X20, 0x2321000
	070 Move X0, X19
	071 Move X1, [X8]
	072 Move X20, [X20+1432]
	073 Call 0x2242FB8, X0
	074 Move X8, [X20]
	075 Move X20, X0
	076 Move W9, [X8+224]
	077 Compare W9, 0
	078 JumpIfNotEqual {81}
	079 Move X0, X8
	080 Call 0x1C17DFC
	081 Move X0, X20
	082 Move X1, X31
	083 Move X2, X31
	084 Call Object.op_Equality, X0, X1
	085 Move TEMP, X0
	086 And TEMP, TEMP, 1
	087 Compare TEMP, 1
	088 JumpIfNotEqual {141}
	089 Move X8, 0x2326000
	090 Move X8, [X8+1688]
	091 Move X1, X19
	092 Move X2, X31
	093 Move X0, [X8]
	094 Call String.Concat, X0, X1
	095 Move X8, 0x2321000
	096 Move X8, [X8+1928]
	097 Move X19, X0
	098 Move X8, [X8]
	099 Move W9, [X8+224]
	100 Compare W9, 0
	101 JumpIfNotEqual {104}
	102 Move X0, X8
	103 Call 0x1C17DFC
	104 Move X8, 0x2326000
	105 Move X9, 0x2326000
	106 Move X8, [X8+1632]
	107 Move X9, [X9+1680]
	108 Move X0, X19
	109 Move X20, [X31+64]
	110 Move X19, [X31+72]
	111 Move X2, [X8]
	112 Move X3, [X9]
	113 Move X22, [X31+48]
	114 Move X21, [X31+56]
	115 Move X30, [X31+32]
	116 Move D9, [X31+16]
	117 Move D8, [X31+24]
	118 Move W4, 123
	119 Move X1, X31
	120 Move X5, X31
	121 Move D11, [X31+80]
	122 Move D10, [X31+88]
	123 Call Log.Error, X0, X1, X2, X3, X4
	124 Return 
	125 Compare X20, 0
	126 JumpIfEqual {240}
	127 Move X0, X20
	128 Move X1, X31
	129 Call NetworkRunner.get_Stage, X0
	130 NotImplemented "Instruction CMP not yet implemented."
	131 Move X20, [X31+64]
	132 Move X19, [X31+72]
	133 Move X22, [X31+48]
	134 Move X21, [X31+56]
	135 Move X30, [X31+32]
	136 Move D9, [X31+16]
	137 Move D8, [X31+24]
	138 Move D11, [X31+80]
	139 Move D10, [X31+88]
	140 Return 
	141 Move X0, X20
	142 Move V2, V9
	143 Move V3, V8
	144 Move X20, [X31+64]
	145 Move X19, [X31+72]
	146 Move X22, [X31+48]
	147 Move X21, [X31+56]
	148 Move X30, [X31+32]
	149 Move D9, [X31+16]
	150 Move D8, [X31+24]
	151 Move V0, V11
	152 Move V1, V10
	153 Move D11, [X31+80]
	154 Move D10, [X31+88]
	155 Call SFXManager.PlaySFX, X0, X1, V0
	156 Return 
	157 Move X0, X19
	158 Move X1, X31
	159 Call ReadWriteUtilsForWeaver.GetByteCountUtf8NoHash, X0
	160 Add W8, W0, 27
	161 And W21, W8, 0xFFFFFFFC
	162 NotImplemented "Instruction CMP not yet implemented."
	163 Move X0, [X20+80]
	164 Compare X0, 0
	165 JumpIfEqual {258}
	166 Move X1, X31
	167 Call Simulation.HasAnyActiveConnections, X0
	168 Move TEMP, X0
	169 And TEMP, TEMP, 1
	170 Compare TEMP, 1
	171 JumpIfNotEqual {67}
	172 Move X0, [X20+80]
	173 Move W1, W21
	174 Move X2, X31
	175 Call SimulationMessage.Allocate, X0, X1
	176 Move X8, [X22]
	177 Move X21, X0
	178 Add X22, X0, 28
	179 Move W9, [X8+224]
	180 Compare W9, 0
	181 JumpIfNotEqual {184}
	182 Move X0, X8
	183 Call 0x1C17DFC
	184 Move X8, 0x2326000
	185 Move X8, [X8+1696]
	186 Move X1, X31
	187 Move X0, [X8]
	188 Call NetworkBehaviourUtils.GetRpcStaticIndexOrThrow, X0
	189 Move X1, X31
	190 Call RpcHeader.Create, X0
	191 Move [X21+28], X0
	192 Add X0, X21, 36
	193 Move X1, X19
	194 Move X2, X31
	195 Call ReadWriteUtilsForWeaver.WriteStringUtf8NoHash, X0, X1
	196 Add W8, W0, 11
	197 Move X8, W8
	198 And X8, X8, 0xFFFFFFFF
	199 Add X9, X22, X8
	200 Add W10, W8, 12
	201 Move [X9], S11
	202 Move [X9+8], S10
	203 Move [X9+8], S9
	204 Move [X22], S8
	205 Compare X21, 0
	206 JumpIfEqual {258}
	207 Move W9, [X21+20]
	208 Move W8, W8
	209 ShiftRight W8, 29
	210 And W8, W8, 0xFFFFFFF
	211 Add W8, W8, 128
	212 Move [X21+12], W8
	213 Or W8, W9, 4
	214 Move X0, X20
	215 Move X1, X21
	216 Move X2, X31
	217 Move [X21+20], W8
	218 Call NetworkRunner.SendRpc, X0, X1
	219 Move X0, [X22]
	220 Move W8, [X0+224]
	221 Compare W8, 0
	222 JumpIfNotEqual {224}
	223 Call 0x1C17DFC
	224 Move X8, 0x2326000
	225 Move X8, [X8+1696]
	226 Move W1, W21
	227 Move X20, [X31+64]
	228 Move X19, [X31+72]
	229 Move X22, [X31+48]
	230 Move X21, [X31+56]
	231 Move X0, [X8]
	232 Move X30, [X31+32]
	233 Move D9, [X31+16]
	234 Move D8, [X31+24]
	235 Move X2, X31
	236 Move D11, [X31+80]
	237 Move D10, [X31+88]
	238 Call NetworkBehaviourUtils.NotifyRpcPayloadSizeExceeded, X0, X1
	239 Return 
	240 Move X0, 0x2326000
	241 Move X0, [X0+1320]
	242 Call 0x1C17D08
	243 Call 0x1C17F10
	244 Move X19, X0
	245 Move X0, 0x2326000
	246 Move X0, [X0+1328]
	247 Call 0x1C17D08
	248 Move X1, X0
	249 Move X0, X19
	250 Move X2, X31
	251 Call ArgumentNullException..ctor, X0, X1
	252 Move X0, 0x2326000
	253 Move X0, [X0+1704]
	254 Call 0x1C17D08
	255 Move X1, X0
	256 Move X0, X19
	257 Call 0x1C17DEC
	258 Call 0x1C17F20

Method: System.Void RPC_PlaySFX(Fusion.NetworkRunner runner, System.UInt16 sfxID, UnityEngine.Vector3 position, System.Single volume)

Disassembly:
	0x01DD36C8 BL 0x1C16E08
	0x01DD36CC ADRP X8, 0x2325000
	0x01DD36D0 LDR V8, [X0]
	0x01DD36D4 LDR X8, [X8 + 0x748]
	0x01DD36D8 LDR X0, [X8]
	0x01DD36DC BL 0x1C16F10
	0x01DD36E0 MOV X19, X0
	0x01DD36E4 FCVT S0, S8
	0x01DD36E8 B 0x1DD37A0
	0x01DD36EC MOV X0, X20
	0x01DD36F0 BL 0x1C16E08
	0x01DD36F4 ADRP X8, 0x2325000
	0x01DD36F8 LDR W20, [X0]
	0x01DD36FC LDR X8, [X8 + 0x748]
	0x01DD3700 LDR X0, [X8]
	0x01DD3704 BL 0x1C16F10
	0x01DD3708 MOV X19, X0
	0x01DD370C SCVTF D0, W20
	0x01DD3710 B 0x1DD37A0
	0x01DD3714 MOV X0, X20
	0x01DD3718 BL 0x1C16E08
	0x01DD371C ADRP X8, 0x2325000
	0x01DD3720 LDP S8, S9, [X0]
	0x01DD3724 LDR V10, [X0 + 0x8]
	0x01DD3728 LDR X8, [X8 + 0x748]
	0x01DD372C LDR X0, [X8]
	0x01DD3730 BL 0x1C16F10
	0x01DD3734 MOV V0.16B, V8.16B
	0x01DD3738 MOV V1.16B, V9.16B
	0x01DD373C MOV V2.16B, V10.16B
	0x01DD3740 MOV X1, X31
	0x01DD3744 MOV X19, X0
	0x01DD3748 BL 0x31DD03C
	0x01DD374C B 0x1DD37A8
	0x01DD3750 MOV X0, X20
	0x01DD3754 BL 0x1C16E08
	0x01DD3758 ADRP X8, 0x2325000
	0x01DD375C LDR V8, [X0]
	0x01DD3760 LDR X8, [X8 + 0x748]
	0x01DD3764 LDR X0, [X8]
	0x01DD3768 BL 0x1C16F10
	0x01DD376C MOV X19, X0
	0x01DD3770 MOV V0.16B, V8.16B
	0x01DD3774 B 0x1DD37A0
	0x01DD3778 MOV X0, X20
	0x01DD377C BL 0x1C16E08
	0x01DD3780 ADRP X8, 0x2325000
	0x01DD3784 LDR X8, [X8 + 0x748]
	0x01DD3788 LDR V8, [X0]
	0x01DD378C LDR X8, [X8]
	0x01DD3790 MOV X0, X8
	0x01DD3794 BL 0x1C16F10
	0x01DD3798 MOV X19, X0
	0x01DD379C SCVTF D0, D8
	0x01DD37A0 MOV X1, X31
	0x01DD37A4 BL 0x31DC7B4
	0x01DD37A8 MOV X0, X19
	0x01DD37AC LDP X20, X19, [X31 + 0x70]
	0x01DD37B0 LDP X22, X21, [X31 + 0x60]
	0x01DD37B4 LDP X24, X23, [X31 + 0x50]
	0x01DD37B8 LDR X30, [X31 + 0x48]
	0x01DD37BC LDP D9, D8, [X31 + 0x38]
	0x01DD37C0 LDR V10, [X31 + 0x30]
	0x01DD37C4 ADD X31, X31, 0x80
	0x01DD37C8 RET
	0x01DD37CC ADRP X8, 0x2325000
	0x01DD37D0 LDR X8, [X8 + 0x748]
	0x01DD37D4 LDR X0, [X8]
	0x01DD37D8 BL 0x1C16F10
	0x01DD37DC MOV X1, X31
	0x01DD37E0 MOV X19, X0
	0x01DD37E4 BL 0x31D3D04
	0x01DD37E8 ADRP X8, 0x2325000
	0x01DD37EC LDR X8, [X8 + 0x700]
	0x01DD37F0 MOV X0, X20
	0x01DD37F4 LDR X1, [X8]
	0x01DD37F8 ADD X8, X31, 0x0
	0x01DD37FC BL 0x2AA54BC
	0x01DD3800 ADRP X22, 0x2325000
	0x01DD3804 ADRP X23, 0x2320000
	0x01DD3808 LDR X22, [X22 + 0x710]
	0x01DD380C LDR X23, [X23 + 0xB50]
	0x01DD3810 LDR X1, [X22]
	0x01DD3814 ADD X0, X31, 0x0
	0x01DD3818 BL 0x2C0A728
	0x01DD381C TBZ X0, 0x0, 0x1DD3858
	0x01DD3820 LDR X0, [X23]
	0x01DD3824 LDP X20, X21, [X31 + 0x10]
	0x01DD3828 LDR W8, [X0 + 0xE0]
	0x01DD382C CBNZ W8, 0x1DD3834
	0x01DD3830 BL 0x1C16DFC
	0x01DD3834 MOV X0, X21
	0x01DD3838 BL 0x1DD3418
	0x01DD383C CBZ X19, 0x1DD3908
	0x01DD3840 MOV X2, X0
	0x01DD3844 MOV X0, X19
	0x01DD3848 MOV X1, X20
	0x01DD384C MOV X3, X31
	0x01DD3850 BL 0x31D3E30
	0x01DD3854 B 0x1DD3810
	0x01DD3858 ADRP X8, 0x2325000
	0x01DD385C LDR X8, [X8 + 0x708]
	0x01DD3860 ADD X0, X31, 0x0
	0x01DD3864 LDR X1, [X8]
	0x01DD3868 BL 0x2C0A83C
	0x01DD386C B 0x1DD37A8
	0x01DD3870 ADRP X8, 0x2325000
	0x01DD3874 LDR X8, [X8 + 0x748]
	0x01DD3878 LDR X0, [X8]
	0x01DD387C BL 0x1C16F10
	0x01DD3880 MOV X1, X31
	0x01DD3884 MOV X19, X0
	0x01DD3888 BL 0x31D3D04
	0x01DD388C LDR W8, [X20 + 0x18]
	0x01DD3890 CMP W8, 0x1
	0x01DD3894 B.LT 0x1DD37A8
	0x01DD3898 ADRP X23, 0x2325000

ISIL:
	001 Move [X31-80], D11
	002 Move [X31-72], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X22, 0x2606000
	011 Move X21, 0x2324000
	012 Move W8, [X22+3080]
	013 Move X21, [X21+2680]
	014 Move V8, V3
	015 Move V9, V2
	016 Move V10, V1
	017 Move V11, V0
	018 Move W19, W1
	019 Move X20, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {32}
	024 Move X0, 0x2324000
	025 Move X0, [X0+2680]
	026 Call 0x1C17CF4
	027 Move X0, 0x2326000
	028 Move X0, [X0+1656]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X22+3080], W8
	032 Move X0, [X21]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {38}
	036 Call 0x1C17DFC
	037 Move X0, [X21]
	038 Move X8, [X0+184]
	039 Move W9, [X8+32]
	040 Compare W9, 0
	041 JumpIfEqual {65}
	042 Move W9, [X0+224]
	043 Compare W9, 0
	044 JumpIfNotEqual {48}
	045 Call 0x1C17DFC
	046 Move X8, [X21]
	047 Move X8, [X8+184]
	048 Move [X8+32], W31
	049 Move W0, W19
	050 Move V2, V9
	051 Move V3, V8
	052 Move X20, [X31+64]
	053 Move X19, [X31+72]
	054 Move X22, [X31+48]
	055 Move X21, [X31+56]
	056 Move X30, [X31+32]
	057 Move D9, [X31+16]
	058 Move D8, [X31+24]
	059 Move V0, V11
	060 Move V1, V10
	061 Move D11, [X31+80]
	062 Move D10, [X31+88]
	063 Call SFXManager.PlaySFX, X0, X1, V0
	064 Return 
	065 Compare X20, 0
	066 JumpIfEqual {125}
	067 Move X0, X20
	068 Move X1, X31
	069 Call NetworkRunner.get_Stage, X0
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move X20, [X31+64]
	072 Move X19, [X31+72]
	073 Move X22, [X31+48]
	074 Move X21, [X31+56]
	075 Move X30, [X31+32]
	076 Move D9, [X31+16]
	077 Move D8, [X31+24]
	078 Move D11, [X31+80]
	079 Move D10, [X31+88]
	080 Return 
	081 Move X0, [X20+80]
	082 Compare X0, 0
	083 JumpIfEqual {143}
	084 Move X1, X31
	085 Call Simulation.HasAnyActiveConnections, X0
	086 Move TEMP, X0
	087 And TEMP, TEMP, 1
	088 Compare TEMP, 1
	089 JumpIfNotEqual {49}
	090 Move X0, [X20+80]
	091 Move W1, 28
	092 Move X2, X31
	093 Call SimulationMessage.Allocate, X0, X1
	094 Move X8, [X21]
	095 Move X21, X0
	096 Move W9, [X8+224]
	097 Compare W9, 0
	098 JumpIfNotEqual {101}
	099 Move X0, X8
	100 Call 0x1C17DFC
	101 Move X8, 0x2326000
	102 Move X8, [X8+1656]
	103 Move X1, X31
	104 Move X0, [X8]
	105 Call NetworkBehaviourUtils.GetRpcStaticIndexOrThrow, X0
	106 Move X1, X31
	107 Call RpcHeader.Create, X0
	108 Move [X21+28], X0
	109 NotImplemented "Instruction STRH not yet implemented."
	110 Move [X21+40], S11
	111 Move [X21+48], S10
	112 Move [X21+48], S9
	113 Move [X21+56], S8
	114 Compare X21, 0
	115 JumpIfEqual {143}
	116 Move W8, [X21+20]
	117 Move W9, 224
	118 Move X0, X20
	119 Move X1, X21
	120 Or W8, W8, 4
	121 Move X2, X31
	122 Move [X21+12], W9
	123 Move [X21+20], W8
	124 Call NetworkRunner.SendRpc, X0, X1
	125 Move X0, 0x2326000
	126 Move X0, [X0+1320]
	127 Call 0x1C17D08
	128 Call 0x1C17F10
	129 Move X19, X0
	130 Move X0, 0x2326000
	131 Move X0, [X0+1328]
	132 Call 0x1C17D08
	133 Move X1, X0
	134 Move X0, X19
	135 Move X2, X31
	136 Call ArgumentNullException..ctor, X0, X1
	137 Move X0, 0x2326000
	138 Move X0, [X0+1664]
	139 Call 0x1C17D08
	140 Move X1, X0
	141 Move X0, X19
	142 Call 0x1C17DEC
	143 Call 0x1C17F20

Method: System.Void PlaySFXInternal(AnimalCompany.RandomSFX sfx, UnityEngine.Vector3 position, System.Single volume, UnityEngine.AudioSource source, System.Boolean isPooled)

Disassembly:
	0x01DD3258 LDR X20, [X20 + 0xB50]
	0x01DD325C MOV X19, X0
	0x01DD3260 TBNZ X8, 0x0, 0x1DD3278
	0x01DD3264 ADRP X0, 0x2320000
	0x01DD3268 LDR X0, [X0 + 0xB50]
	0x01DD326C BL 0x1C16CF4
	0x01DD3270 MOVZ W8, 0x1
	0x01DD3274 STRB W8, [X21 + 0xC13]
	0x01DD3278 LDR X0, [X20]
	0x01DD327C LDR W8, [X0 + 0xE0]
	0x01DD3280 CBNZ W8, 0x1DD328C
	0x01DD3284 BL 0x1C16DFC
	0x01DD3288 LDR X0, [X20]
	0x01DD328C LDR X8, [X0 + 0xB8]
	0x01DD3290 LDRB W8, [X8]
	0x01DD3294 CBZ W8, 0x1DD32AC
	0x01DD3298 MOV X0, X19
	0x01DD329C LDP X20, X19, [X31 + 0x10]
	0x01DD32A0 MOV X1, X31
	0x01DD32A4 LDP X30, X21, [X31], #0x20
	0x01DD32A8 B 0x31D85D4
	0x01DD32AC LDP X20, X19, [X31 + 0x10]
	0x01DD32B0 LDP X30, X21, [X31], #0x20
	0x01DD32B4 RET
	0x01DD32B8 LDR X0, [X0 + 0x18]
	0x01DD32BC RET
	0x01DD32C0 STP X30, X19, [X31 - 0x10]!
	0x01DD32C4 ADRP X0, 0x2320000
	0x01DD32C8 LDR X0, [X0 + 0xB40]
	0x01DD32CC BL 0x1C16D08
	0x01DD32D0 BL 0x1C16F10
	0x01DD32D4 MOV X1, X31
	0x01DD32D8 MOV X19, X0
	0x01DD32DC BL 0x3380310
	0x01DD32E0 ADRP X0, 0x2325000
	0x01DD32E4 LDR X0, [X0 + 0x6F0]
	0x01DD32E8 BL 0x1C16D08
	0x01DD32EC MOV X1, X0
	0x01DD32F0 MOV X0, X19
	0x01DD32F4 BL 0x1C16DEC
	0x01DD32F8 LDR X0, [X0 + 0x18]
	0x01DD32FC RET
	0x01DD3300 STP X30, X21, [X31 - 0x20]!
	0x01DD3304 STP X20, X19, [X31 + 0x10]
	0x01DD3308 ADRP X21, 0x2605000
	0x01DD330C ADRP X20, 0x2320000
	0x01DD3310 ADRP X19, 0x2320000
	0x01DD3314 LDRB W8, [X21 + 0xC11]
	0x01DD3318 LDR X20, [X20 + 0xB50]
	0x01DD331C LDR X19, [X19 + 0x970]
	0x01DD3320 TBNZ X8, 0x0, 0x1DD3350
	0x01DD3324 ADRP X0, 0x2320000
	0x01DD3328 LDR X0, [X0 + 0xB50]
	0x01DD332C BL 0x1C16CF4
	0x01DD3330 ADRP X0, 0x2320000
	0x01DD3334 LDR X0, [X0 + 0x970]
	0x01DD3338 BL 0x1C16CF4
	0x01DD333C ADRP X0, 0x2325000
	0x01DD3340 LDR X0, [X0 + 0x6F8]
	0x01DD3344 BL 0x1C16CF4
	0x01DD3348 MOVZ W8, 0x1
	0x01DD334C STRB W8, [X21 + 0xC11]
	0x01DD3350 LDR X8, [X20]
	0x01DD3354 MOVZ W9, 0x1
	0x01DD3358 LDR X8, [X8 + 0xB8]
	0x01DD335C STRB W9, [X8]
	0x01DD3360 LDR X0, [X19]
	0x01DD3364 ADRP X19, 0x2325000
	0x01DD3368 LDR W8, [X0 + 0xE0]
	0x01DD336C LDR X19, [X19 + 0x6F8]
	0x01DD3370 CBNZ W8, 0x1DD3378
	0x01DD3374 BL 0x1C16DFC
	0x01DD3378 MOV X0, X31
	0x01DD337C BL 0x3C03278
	0x01DD3380 AND W0, W0, 0x1
	0x01DD3384 MOV X1, X31
	0x01DD3388 BL 0x31D3F18
	0x01DD338C LDR X8, [X19]
	0x01DD3390 LDP X20, X19, [X31 + 0x10]
	0x01DD3394 MOV X1, X0
	0x01DD3398 MOV X2, X31
	0x01DD339C MOV X0, X8
	0x01DD33A0 LDP X30, X21, [X31], #0x20
	0x01DD33A4 B 0x31D3B54
	0x01DD33A8 STR X30, [X31 - 0x30]!
	0x01DD33AC STP X22, X21, [X31 + 0x10]
	0x01DD33B0 STP X20, X19, [X31 + 0x20]
	0x01DD33B4 ADRP X21, 0x2605000
	0x01DD33B8 ADRP X22, 0x2320000
	0x01DD33BC LDRB W8, [X21 + 0xC12]
	0x01DD33C0 LDR X22, [X22 + 0xB50]
	0x01DD33C4 MOV X20, X1
	0x01DD33C8 MOV X19, X0
	0x01DD33CC TBNZ X8, 0x0, 0x1DD33E4
	0x01DD33D0 ADRP X0, 0x2320000
	0x01DD33D4 LDR X0, [X0 + 0xB50]
	0x01DD33D8 BL 0x1C16CF4
	0x01DD33DC MOVZ W8, 0x1
	0x01DD33E0 STRB W8, [X21 + 0xC12]
	0x01DD33E4 LDR X0, [X22]
	0x01DD33E8 LDR W8, [X0 + 0xE0]
	0x01DD33EC CBNZ W8, 0x1DD33F4
	0x01DD33F0 BL 0x1C16DFC
	0x01DD33F4 MOV X0, X20
	0x01DD33F8 BL 0x1DD3418
	0x01DD33FC MOV X1, X0
	0x01DD3400 MOV X0, X19
	0x01DD3404 LDP X20, X19, [X31 + 0x20]
	0x01DD3408 LDP X22, X21, [X31 + 0x10]
	0x01DD340C MOV X2, X31
	0x01DD3410 LDR X30, [X31], #0x30
	0x01DD3414 B 0x31D3B54
	0x01DD3418 SUB X31, X31, 0x80
	0x01DD341C STR D10, [X31 + 0x30]
	0x01DD3420 STP D9, D8, [X31 + 0x38]
	0x01DD3424 STR X30, [X31 + 0x48]
	0x01DD3428 STP X24, X23, [X31 + 0x50]
	0x01DD342C STP X22, X21, [X31 + 0x60]
	0x01DD3430 STP X20, X19, [X31 + 0x70]
	0x01DD3434 ADRP X19, 0x2605000
	0x01DD3438 LDRB W8, [X19 + 0xC19]
	0x01DD343C MOV X20, X0
	0x01DD3440 TBNZ X8, 0x0, 0x1DD3530
	0x01DD3444 ADRP X0, 0x2320000
	0x01DD3448 LDR X0, [X0 + 0xB50]
	0x01DD344C BL 0x1C16CF4
	0x01DD3450 ADRP X0, 0x2320000
	0x01DD3454 LDR X0, [X0 + 0xB58]
	0x01DD3458 BL 0x1C16CF4
	0x01DD345C ADRP X0, 0x2325000
	0x01DD3460 LDR X0, [X0 + 0x700]
	0x01DD3464 BL 0x1C16CF4
	0x01DD3468 ADRP X0, 0x2320000
	0x01DD346C LDR X0, [X0 + 0x720]
	0x01DD3470 BL 0x1C16CF4
	0x01DD3474 ADRP X0, 0x2323000
	0x01DD3478 LDR X0, [X0 + 0x978]
	0x01DD347C BL 0x1C16CF4
	0x01DD3480 ADRP X0, 0x2325000
	0x01DD3484 LDR X0, [X0 + 0x708]
	0x01DD3488 BL 0x1C16CF4
	0x01DD348C ADRP X0, 0x2325000
	0x01DD3490 LDR X0, [X0 + 0x710]
	0x01DD3494 BL 0x1C16CF4
	0x01DD3498 ADRP X0, 0x2325000
	0x01DD349C LDR X0, [X0 + 0x718]
	0x01DD34A0 BL 0x1C16CF4
	0x01DD34A4 ADRP X0, 0x2320000
	0x01DD34A8 LDR X0, [X0 + 0x758]
	0x01DD34AC BL 0x1C16CF4
	0x01DD34B0 ADRP X0, 0x2322000
	0x01DD34B4 LDR X0, [X0 + 0xA60]
	0x01DD34B8 BL 0x1C16CF4
	0x01DD34BC ADRP X0, 0x2325000
	0x01DD34C0 LDR X0, [X0 + 0x720]
	0x01DD34C4 BL 0x1C16CF4
	0x01DD34C8 ADRP X0, 0x2325000
	0x01DD34CC LDR X0, [X0 + 0x728]
	0x01DD34D0 BL 0x1C16CF4
	0x01DD34D4 ADRP X0, 0x2325000
	0x01DD34D8 LDR X0, [X0 + 0x730]
	0x01DD34DC BL 0x1C16CF4
	0x01DD34E0 ADRP X0, 0x2325000
	0x01DD34E4 LDR X0, [X0 + 0x738]
	0x01DD34E8 BL 0x1C16CF4
	0x01DD34EC ADRP X0, 0x2325000
	0x01DD34F0 LDR X0, [X0 + 0x740]
	0x01DD34F4 BL 0x1C16CF4
	0x01DD34F8 ADRP X0, 0x2320000
	0x01DD34FC LDR X0, [X0 + 0xA90]
	0x01DD3500 BL 0x1C16CF4
	0x01DD3504 ADRP X0, 0x2322000
	0x01DD3508 LDR X0, [X0 + 0x278]
	0x01DD350C BL 0x1C16CF4
	0x01DD3510 ADRP X0, 0x2325000
	0x01DD3514 LDR X0, [X0 + 0x748]
	0x01DD3518 BL 0x1C16CF4
	0x01DD351C ADRP X0, 0x2320000
	0x01DD3520 LDR X0, [X0 + 0x5A0]
	0x01DD3524 BL 0x1C16CF4
	0x01DD3528 MOVZ W8, 0x1
	0x01DD352C STRB W8, [X19 + 0xC19]
	0x01DD3530 MOVI V0.2D, 0x0
	0x01DD3534 STR X31, [X31 + 0x20]
	0x01DD3538 STP V0, V0, [X31]

ISIL:
	001 Move [X31-80], D11
	002 Move [X31-72], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X22, 0x2606000
	012 Move W8, [X22+3081]
	013 Move W20, W2
	014 Move X19, X1
	015 Move V11, V3
	016 Move V8, V2
	017 Move V9, V1
	018 Move V10, V0
	019 Move X21, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {41}
	024 Move X0, 0x2326000
	025 Move X0, [X0+1512]
	026 Call 0x1C17CF4
	027 Move X0, 0x2326000
	028 Move X0, [X0+1520]
	029 Call 0x1C17CF4
	030 Move X0, 0x2321000
	031 Move X0, [X0+1432]
	032 Call 0x1C17CF4
	033 Move X0, 0x2326000
	034 Move X0, [X0+1568]
	035 Call 0x1C17CF4
	036 Move X0, 0x2326000
	037 Move X0, [X0+192]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X22+3081], W8
	041 Compare X21, 0
	042 JumpIfEqual {236}
	043 Move X22, [X21+24]
	044 Compare X22, 0
	045 JumpIfEqual {236}
	046 Move W1, [X22+24]
	047 Compare W1, 0
	048 JumpIfEqual {114}
	049 Move X23, 0x2326000
	050 Move X23, [X23+1520]
	051 Move W0, W31
	052 Move X2, X31
	053 Call Random.Range, X0, X1
	054 Move X2, [X23]
	055 Move W1, W0
	056 Move X0, X22
	057 Call List`1<Object>.get_Item, X0, X1
	058 Compare X19, 0
	059 JumpIfEqual {236}
	060 Move X22, 0x2321000
	061 Move X22, [X22+1432]
	062 Move X1, X0
	063 Move X0, X19
	064 Move X2, X31
	065 Call AudioSource.set_clip, X0, X1
	066 Move X0, X19
	067 Move X1, X31
	068 Call AudioSource.get_clip, X0
	069 Move X8, [X22]
	070 Move X22, X0
	071 Move W9, [X8+224]
	072 Compare W9, 0
	073 JumpIfNotEqual {76}
	074 Move X0, X8
	075 Call 0x1C17DFC
	076 Move X0, X22
	077 Move X1, X31
	078 Move X2, X31
	079 Call Object.op_Equality, X0, X1
	080 Move TEMP, X0
	081 And TEMP, TEMP, 1
	082 Compare TEMP, 1
	083 JumpIfNotEqual {125}
	084 Move TEMP, X20
	085 And TEMP, TEMP, 1
	086 Compare TEMP, 1
	087 JumpIfNotEqual {114}
	088 Move X8, 0x2326000
	089 Move X8, [X8+192]
	090 Move X8, [X8]
	091 Move X8, [X8+184]
	092 Move X8, [X8]
	093 Compare X8, 0
	094 JumpIfEqual {236}
	095 Move X0, [X8+88]
	096 Compare X0, 0
	097 JumpIfEqual {236}
	098 Move X8, 0x2326000
	099 Move X8, [X8+1568]
	100 Move X1, X19
	101 Move X20, [X31+64]
	102 Move X19, [X31+72]
	103 Move X22, [X31+48]
	104 Move X21, [X31+56]
	105 Move X2, [X8]
	106 Move X30, [X31+32]
	107 Move X23, [X31+40]
	108 Move D9, [X31+16]
	109 Move D8, [X31+24]
	110 Move D11, [X31+80]
	111 Move D10, [X31+88]
	112 Call Queue`1<Object>.Enqueue, X0, X1
	113 Return 
	114 Move X20, [X31+64]
	115 Move X19, [X31+72]
	116 Move X22, [X31+48]
	117 Move X21, [X31+56]
	118 Move X30, [X31+32]
	119 Move X23, [X31+40]
	120 Move D9, [X31+16]
	121 Move D8, [X31+24]
	122 Move D11, [X31+80]
	123 Move D10, [X31+88]
	124 Return 
	125 Move V0, [X21+32]
	126 Move X0, X19
	127 Move X1, X31
	128 Multiply S0, S0, S11
	129 Call AudioSource.set_volume, X0, V0
	130 Move S0, [X21+36]
	131 Move S1, [X21+40]
	132 Move X0, X31
	133 Call Random.Range, V0, V1
	134 Move X0, X19
	135 Move X1, X31
	136 Call AudioSource.set_pitch, X0, V0
	137 Move S0, 1
	138 Move X0, X19
	139 Move X1, X31
	140 Call AudioSource.set_spatialBlend, X0, V0
	141 Move S0, 1
	142 Move X0, X19
	143 Move X1, X31
	144 Call AudioSource.set_reverbZoneMix, X0, V0
	145 Move S0, 1
	146 Move X0, X19
	147 Move X1, X31
	148 Call AudioSource.set_minDistance, X0, V0
	149 Move V0, [X21+48]
	150 Move X0, X19
	151 Move X1, X31
	152 Call AudioSource.set_maxDistance, X0, V0
	153 Move X0, X19
	154 Move X1, X31
	155 Call Component.get_transform, X0
	156 Compare X0, 0
	157 JumpIfEqual {236}
	158 Move V0, V10
	159 Move V1, V9
	160 Move V2, V8
	161 Move X1, X31
	162 Call Transform.set_position, X0, X1
	163 Move W1, [X21+44]
	164 Move X0, X19
	165 Move X2, X31
	166 Call AudioSource.set_rolloffMode, X0, X1
	167 Move W0, [X21+52]
	168 Call AudioMixerManager.GetAudioGroup, X0
	169 Move X1, X0
	170 Move X0, X19
	171 Move X2, X31
	172 Call AudioSource.set_outputAudioMixerGroup, X0, X1
	173 Move X0, X19
	174 Move TEMP, X20
	175 And TEMP, TEMP, 1
	176 Compare TEMP, 1
	177 JumpIfNotEqual {219}
	178 Move W1, W31
	179 Move X2, X31
	180 Call AudioSource.set_mute, X0, X1
	181 Move X0, X19
	182 Move W1, W31
	183 Move X2, X31
	184 Call AudioSource.set_loop, X0, X1
	185 Move X0, X19
	186 Move X1, X31
	187 Call AudioSource.Play, X0
	188 Move X8, 0x2326000
	189 Move X8, [X8+192]
	190 Move X0, X19
	191 Move X1, X31
	192 Move X8, [X8]
	193 Move X8, [X8+184]
	194 Move X20, [X8]
	195 Call AudioSource.get_clip, X0
	196 Compare X0, 0
	197 JumpIfEqual {236}
	198 Move X1, X31
	199 Call AudioClip.get_length, X0
	200 Move X0, X19
	201 Call SFXManager.ReturnAudioSource, X0, V0
	202 Compare X20, 0
	203 JumpIfEqual {236}
	204 Move X1, X0
	205 Move X0, X20
	206 Move X20, [X31+64]
	207 Move X19, [X31+72]
	208 Move X22, [X31+48]
	209 Move X21, [X31+56]
	210 Move X30, [X31+32]
	211 Move X23, [X31+40]
	212 Move D9, [X31+16]
	213 Move D8, [X31+24]
	214 Move X2, X31
	215 Move D11, [X31+80]
	216 Move D10, [X31+88]
	217 Call MonoBehaviour.StartCoroutine, X0, X1
	218 Return 
	219 Move X1, X31
	220 Call AudioSource.get_clip, X0
	221 Move X1, X0
	222 Move X0, X19
	223 Move X20, [X31+64]
	224 Move X19, [X31+72]
	225 Move X22, [X31+48]
	226 Move X21, [X31+56]
	227 Move X30, [X31+32]
	228 Move X23, [X31+40]
	229 Move D9, [X31+16]
	230 Move D8, [X31+24]
	231 Move X2, X31
	232 Move D11, [X31+80]
	233 Move D10, [X31+88]
	234 Call AudioSource.PlayOneShot, X0, X1
	235 Return 
	236 Call 0x1C17F20

Method: System.Collections.IEnumerator ReturnAudioSource(UnityEngine.AudioSource a, System.Single delay)

Disassembly:
	0x01DD3C30 ADRP X20, 0x2605000
	0x01DD3C34 ADRP X21, 0x2325000
	0x01DD3C38 LDRB W8, [X20 + 0xC18]
	0x01DD3C3C LDR X21, [X21 + 0x748]
	0x01DD3C40 MOV X19, X0
	0x01DD3C44 TBNZ X8, 0x0, 0x1DD3C68
	0x01DD3C48 ADRP X0, 0x2320000
	0x01DD3C4C LDR X0, [X0 + 0xB50]
	0x01DD3C50 BL 0x1C16CF4
	0x01DD3C54 ADRP X0, 0x2325000
	0x01DD3C58 LDR X0, [X0 + 0x748]
	0x01DD3C5C BL 0x1C16CF4
	0x01DD3C60 MOVZ W8, 0x1
	0x01DD3C64 STRB W8, [X20 + 0xC18]
	0x01DD3C68 LDR X0, [X21]
	0x01DD3C6C BL 0x1C16F10
	0x01DD3C70 MOV X1, X31
	0x01DD3C74 MOV X20, X0
	0x01DD3C78 BL 0x31D3D04
	0x01DD3C7C CBZ X19, 0x1DD3D0C
	0x01DD3C80 LDR X8, [X19 + 0x18]
	0x01DD3C84 CMP W8, 0x1
	0x01DD3C88 B.LT 0x1DD3CF0
	0x01DD3C8C ADRP X24, 0x2320000
	0x01DD3C90 LDR X24, [X24 + 0xB50]
	0x01DD3C94 MOV X23, X31
	0x01DD3C98 AND X8, X8, 0x0
	0x01DD3C9C ADD X25, X19, 0x28

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x2606000
	007 Move X21, 0x2326000
	008 Move W8, [X20+3082]
	009 Move X21, [X21+1712]
	010 Move V8, V0
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x2326000
	017 Move X0, [X0+1712]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+3082], W8
	021 Move X0, [X21]
	022 Call 0x1C17F10
	023 Move X1, X31
	024 Move X20, X0
	025 Call Object..ctor, X0
	026 Move [X20+16], W31
	027 Move [X20+40], X19
	028 Move [X20+32], S8
	029 Move X0, X20
	030 Move X20, [X31+32]
	031 Move X19, [X31+40]
	032 Move X30, [X31+16]
	033 Move X21, [X31+24]
	034 Move V8, [X31+48]
	035 Return X0

Method: System.Void .ctor()

Disassembly:
	0x01DD3CC8 MOV X2, X0
	0x01DD3CCC MOV X0, X20
	0x01DD3CD0 MOV X1, X21
	0x01DD3CD4 MOV X3, X31
	0x01DD3CD8 BL 0x31D3E30
	0x01DD3CDC LDR W8, [X19 + 0x18]
	0x01DD3CE0 ADD X23, X23, 0x1
	0x01DD3CE4 ADD X25, X25, 0x10
	0x01DD3CE8 CMP X23, W8, SXTW
	0x01DD3CEC B.LT 0x1DD3CA0
	0x01DD3CF0 MOV X0, X20
	0x01DD3CF4 LDP X20, X19, [X31 + 0x30]
	0x01DD3CF8 LDP X22, X21, [X31 + 0x20]
	0x01DD3CFC LDP X24, X23, [X31 + 0x10]
	0x01DD3D00 LDP X30, X25, [X31], #0x40
	0x01DD3D04 RET
	0x01DD3D08 BL 0x1C16F28
	0x01DD3D0C BL 0x1C16F20
	0x01DD3D10 STP X30, X23, [X31 - 0x30]!
	0x01DD3D14 STP X22, X21, [X31 + 0x10]
	0x01DD3D18 STP X20, X19, [X31 + 0x20]
	0x01DD3D1C ADRP X23, 0x2605000
	0x01DD3D20 ADRP X22, 0x2320000
	0x01DD3D24 LDRB W8, [X23 + 0xC16]
	0x01DD3D28 LDR X22, [X22 + 0xB50]
	0x01DD3D2C MOV X21, X2
	0x01DD3D30 MOV X19, X1
	0x01DD3D34 MOV X20, X0
	0x01DD3D38 TBNZ X8, 0x0, 0x1DD3D50
	0x01DD3D3C ADRP X0, 0x2320000
	0x01DD3D40 LDR X0, [X0 + 0xB50]
	0x01DD3D44 BL 0x1C16CF4
	0x01DD3D48 MOVZ W8, 0x1
	0x01DD3D4C STRB W8, [X23 + 0xC16]
	0x01DD3D50 LDR X0, [X22]
	0x01DD3D54 LDR W8, [X0 + 0xE0]
	0x01DD3D58 CBNZ W8, 0x1DD3D64
	0x01DD3D5C BL 0x1C16DFC
	0x01DD3D60 LDR X0, [X22]
	0x01DD3D64 LDR X8, [X0 + 0xB8]
	0x01DD3D68 LDRB W8, [X8]
	0x01DD3D6C CBZ W8, 0x1DD3DA4
	0x01DD3D70 LDR W8, [X0 + 0xE0]
	0x01DD3D74 CBNZ W8, 0x1DD3D7C
	0x01DD3D78 BL 0x1C16DFC
	0x01DD3D7C MOV X0, X21
	0x01DD3D80 BL 0x1DD3418
	0x01DD3D84 MOV X2, X0
	0x01DD3D88 MOV X0, X20

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x2606000
	009 Move X24, 0x2326000
	010 Move X20, 0x2326000
	011 Move X22, 0x2326000
	012 Move X21, 0x2326000
	013 Move W8, [X23+3083]
	014 Move X24, [X24+1720]
	015 Move X20, [X20+1728]
	016 Move X22, [X22+1736]
	017 Move X21, [X21+1744]
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {37}
	023 Move X0, 0x2326000
	024 Move X0, [X0+1744]
	025 Call 0x1C17CF4
	026 Move X0, 0x2326000
	027 Move X0, [X0+1736]
	028 Call 0x1C17CF4
	029 Move X0, 0x2326000
	030 Move X0, [X0+1728]
	031 Call 0x1C17CF4
	032 Move X0, 0x2326000
	033 Move X0, [X0+1720]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X23+3083], W8
	037 Move X0, [X24]
	038 Call 0x1C17F10
	039 Move X1, [X20]
	040 Move X20, X0
	041 Call Queue`1<Object>..ctor, X0
	042 Move [X19+88], X20
	043 Move X0, [X22]
	044 Call 0x1C17F10
	045 Move X1, [X21]
	046 Move X20, X0
	047 Call Dictionary`2<Object, UInt16>..ctor, X0
	048 Move [X19+96], X20
	049 Move X0, X19
	050 Move X20, [X31+48]
	051 Move X19, [X31+56]
	052 Move X22, [X31+32]
	053 Move X21, [X31+40]
	054 Move X24, [X31+16]
	055 Move X23, [X31+24]
	056 Move X1, X31
	057 Move X30, [X31+64]
	058 Call SimulationBehaviour..ctor, X0
	059 Return 

Method: System.Void RPC_PlaySFX@Invoker(Fusion.NetworkRunner runner, Fusion.SimulationMessage* message)

Disassembly:
	0x01DD3D8C MOV X1, X19
	0x01DD3D90 LDP X20, X19, [X31 + 0x20]
	0x01DD3D94 LDP X22, X21, [X31 + 0x10]
	0x01DD3D98 MOV X3, X31
	0x01DD3D9C LDP X30, X23, [X31], #0x30
	0x01DD3DA0 B 0x31D7D30
	0x01DD3DA4 LDP X20, X19, [X31 + 0x20]
	0x01DD3DA8 LDP X22, X21, [X31 + 0x10]
	0x01DD3DAC LDP X30, X23, [X31], #0x30
	0x01DD3DB0 RET
	0x01DD3DB4 STP X30, X27, [X31 - 0x50]!
	0x01DD3DB8 STP X26, X25, [X31 + 0x10]
	0x01DD3DBC STP X24, X23, [X31 + 0x20]
	0x01DD3DC0 STP X22, X21, [X31 + 0x30]
	0x01DD3DC4 STP X20, X19, [X31 + 0x40]
	0x01DD3DC8 ADRP X20, 0x2605000
	0x01DD3DCC ADRP X21, 0x2320000
	0x01DD3DD0 LDRB W8, [X20 + 0xC1A]
	0x01DD3DD4 LDR X21, [X21 + 0x648]
	0x01DD3DD8 MOV X19, X0
	0x01DD3DDC TBNZ X8, 0x0, 0x1DD3E3C
	0x01DD3DE0 ADRP X0, 0x2325000
	0x01DD3DE4 LDR X0, [X0 + 0x750]
	0x01DD3DE8 BL 0x1C16CF4
	0x01DD3DEC ADRP X0, 0x2320000
	0x01DD3DF0 LDR X0, [X0 + 0xB50]
	0x01DD3DF4 BL 0x1C16CF4
	0x01DD3DF8 ADRP X0, 0x2320000
	0x01DD3DFC LDR X0, [X0 + 0x648]
	0x01DD3E00 BL 0x1C16CF4
	0x01DD3E04 ADRP X0, 0x2320000
	0x01DD3E08 LDR X0, [X0 + 0xDB0]
	0x01DD3E0C BL 0x1C16CF4
	0x01DD3E10 ADRP X0, 0x2320000
	0x01DD3E14 LDR X0, [X0 + 0xDA0]
	0x01DD3E18 BL 0x1C16CF4
	0x01DD3E1C ADRP X0, 0x2320000
	0x01DD3E20 LDR X0, [X0 + 0xDC8]
	0x01DD3E24 BL 0x1C16CF4
	0x01DD3E28 ADRP X0, 0x2325000
	0x01DD3E2C LDR X0, [X0 + 0x758]
	0x01DD3E30 BL 0x1C16CF4
	0x01DD3E34 MOVZ W8, 0x1
	0x01DD3E38 STRB W8, [X20 + 0xC1A]
	0x01DD3E3C LDR X0, [X21]
	0x01DD3E40 LDR W8, [X0 + 0xE0]
	0x01DD3E44 CBNZ W8, 0x1DD3E4C
	0x01DD3E48 BL 0x1C16DFC
	0x01DD3E4C ADRP X22, 0x2605000
	0x01DD3E50 LDRB W8, [X22 + 0x787]
	0x01DD3E54 CBNZ W8, 0x1DD3E6C
	0x01DD3E58 ADRP X0, 0x2320000

ISIL:
	001 Move [X31-80], D11
	002 Move [X31-72], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X22, 0x2606000
	011 Move X21, 0x2324000
	012 Move W8, [X22+3084]
	013 Move X21, [X21+2680]
	014 Move X20, X1
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0x2324000
	021 Move X0, [X0+2680]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+3084], W8
	025 Add X0, X20, 36
	026 Add X1, X31, 40
	027 Move X2, X31
	028 Move [X31+40], X31
	029 Add X22, X20, 28
	030 Call ReadWriteUtilsForWeaver.ReadStringUtf8NoHash, X0, X1
	031 Add W8, W0, 11
	032 Move X0, [X21]
	033 Move X8, W8
	034 And X8, X8, 0xFFFFFFFF
	035 Add X9, X22, X8
	036 Add W8, W8, 12
	037 Move S11, [X9]
	038 Move S9, [X9+4]
	039 Move V8, [X9+8]
	040 Move W9, [X0+224]
	041 Move V10, [X22]
	042 Compare W9, 0
	043 JumpIfNotEqual {46}
	044 Call 0x1C17DFC
	045 Move X0, [X21]
	046 Move X8, [X0+184]
	047 Move W9, 1
	048 Move X0, X19
	049 Move V0, V11
	050 Move [X8+32], W9
	051 Move X1, [X31+40]
	052 Move V1, V9
	053 Move V2, V8
	054 Move V3, V10
	055 Call SFXManager.RPC_PlaySFX, X0, X1, X2, V0
	056 Move X20, [X31+64]
	057 Move X19, [X31+72]
	058 Move X22, [X31+48]
	059 Move X21, [X31+56]
	060 Move X30, [X31+32]
	061 Move D9, [X31+16]
	062 Move D8, [X31+24]
	063 Move D11, [X31+80]
	064 Move D10, [X31+88]
	065 Return 

Method: System.Void RPC_PlaySFX@Invoker2(Fusion.NetworkRunner runner, Fusion.SimulationMessage* message)

Disassembly:
	0x01DD3E5C LDR X0, [X0 + 0x648]
	0x01DD3E60 BL 0x1C16CF4
	0x01DD3E64 MOVZ W8, 0x1
	0x01DD3E68 STRB W8, [X22 + 0x787]
	0x01DD3E6C LDR X0, [X21]
	0x01DD3E70 LDR W8, [X0 + 0xE0]
	0x01DD3E74 CBNZ W8, 0x1DD3E80
	0x01DD3E78 BL 0x1C16DFC
	0x01DD3E7C LDR X0, [X21]
	0x01DD3E80 LDR X8, [X0 + 0xB8]
	0x01DD3E84 LDR X8, [X8]
	0x01DD3E88 CBZ X8, 0x1DD3FCC
	0x01DD3E8C LDR X8, [X8 + 0x70]
	0x01DD3E90 CBZ X8, 0x1DD3FCC
	0x01DD3E94 LDR X20, [X8 + 0x50]
	0x01DD3E98 CBZ X20, 0x1DD3FCC
	0x01DD3E9C ADRP X27, 0x2320000
	0x01DD3EA0 ADRP X26, 0x2325000
	0x01DD3EA4 ADRP X25, 0x2320000
	0x01DD3EA8 ADRP X24, 0x2325000
	0x01DD3EAC ADRP X23, 0x2320000
	0x01DD3EB0 LDR X27, [X27 + 0xB50]
	0x01DD3EB4 LDR X26, [X26 + 0x758]
	0x01DD3EB8 LDR X25, [X25 + 0xDA0]
	0x01DD3EBC LDR X24, [X24 + 0x750]
	0x01DD3EC0 LDR X23, [X23 + 0xDB0]
	0x01DD3EC4 MOVZ W1, 0x2E
	0x01DD3EC8 MOV X0, X20
	0x01DD3ECC MOV X2, X31
	0x01DD3ED0 BL 0x322C668
	0x01DD3ED4 MOV W2, W0
	0x01DD3ED8 MOV X0, X20
	0x01DD3EDC MOV W1, W31
	0x01DD3EE0 MOV X3, X31
	0x01DD3EE4 BL 0x3228DE4
	0x01DD3EE8 LDR X8, [X27]
	0x01DD3EEC MOV X20, X0
	0x01DD3EF0 LDR W9, [X8 + 0xE0]
	0x01DD3EF4 CBNZ W9, 0x1DD3F00
	0x01DD3EF8 MOV X0, X8

ISIL:
	001 Move [X31-80], D11
	002 Move [X31-72], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X21, 0x2606000
	011 Move X22, 0x2324000
	012 Move W8, [X21+3085]
	013 Move X22, [X22+2680]
	014 Move X20, X1
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0x2324000
	021 Move X0, [X0+2680]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+3085], W8
	025 Move X0, [X22]
	026 NotImplemented "Instruction LDRH not yet implemented."
	027 Move S10, [X20+40]
	028 Move S8, [X20+44]
	029 Move S11, [X20+48]
	030 Move S9, [X20+52]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {36}
	034 Call 0x1C17DFC
	035 Move X0, [X22]
	036 Move X8, [X0+184]
	037 Move X0, X19
	038 Move W1, W21
	039 Move V1, V8
	040 Move V3, V9
	041 Move X20, [X31+64]
	042 Move X19, [X31+72]
	043 Move X22, [X31+48]
	044 Move X21, [X31+56]
	045 Move X30, [X31+32]
	046 Move D9, [X31+16]
	047 Move D8, [X31+24]
	048 Move W9, 1
	049 Move [X8+32], W9
	050 Move V0, V10
	051 Move V2, V11
	052 Move D11, [X31+80]
	053 Move D10, [X31+88]
	054 Call SFXManager.RPC_PlaySFX, X0, X1, X2, V0
	055 Return 

