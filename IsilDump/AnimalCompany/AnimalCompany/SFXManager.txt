Type: AnimalCompany.SFXManager

Method: System.Void Awake()

Disassembly:
	0x01CCEB34 BL 0x1B6EA0C
	0x01CCEB38 MOVZ W8, 0x42700000
	0x01CCEB3C FMOV S0, W8
	0x01CCEB40 MOV X1, X31
	0x01CCEB44 MOV X20, X0
	0x01CCEB48 BL 0x3AA273C
	0x01CCEB4C MOVZ W8, 0x1
	0x01CCEB50 STR X20, [X19 + 0x18]
	0x01CCEB54 STR W8, [X19 + 0x10]
	0x01CCEB58 CMP W21, 0x2
	0x01CCEB5C LDP X20, X19, [X31 + 0x20]
	0x01CCEB60 LDP X22, X21, [X31 + 0x10]
	0x01CCEB64 CSET W0, CC
	0x01CCEB68 LDR X30, [X31], #0x30
	0x01CCEB6C RET
	0x01CCEB70 STP X30, X21, [X31 - 0x20]!
	0x01CCEB74 STP X20, X19, [X31 + 0x10]
	0x01CCEB78 ADRP X21, 0x2555000
	0x01CCEB7C ADRP X20, 0x227F000
	0x01CCEB80 LDRB W8, [X21 + 0x5B9]
	0x01CCEB84 LDR X20, [X20 + 0x9A0]
	0x01CCEB88 MOV X19, X0
	0x01CCEB8C TBNZ X8, 0x0, 0x1CCEBA4
	0x01CCEB90 ADRP X0, 0x227F000
	0x01CCEB94 LDR X0, [X0 + 0x9A0]
	0x01CCEB98 BL 0x1B6E7F0
	0x01CCEB9C MOVZ W8, 0x1
	0x01CCEBA0 STRB W8, [X21 + 0x5B9]
	0x01CCEBA4 LDR X0, [X20]
	0x01CCEBA8 LDR W8, [X0 + 0xE0]
	0x01CCEBAC CBNZ W8, 0x1CCEBB8
	0x01CCEBB0 BL 0x1B6E8F8
	0x01CCEBB4 LDR X0, [X20]
	0x01CCEBB8 LDR X8, [X0 + 0xB8]
	0x01CCEBBC LDRB W8, [X8]
	0x01CCEBC0 CBZ W8, 0x1CCEBD8
	0x01CCEBC4 MOV X0, X19
	0x01CCEBC8 LDP X20, X19, [X31 + 0x10]
	0x01CCEBCC MOV X1, X31
	0x01CCEBD0 LDP X30, X21, [X31], #0x20
	0x01CCEBD4 B 0x304141C
	0x01CCEBD8 LDP X20, X19, [X31 + 0x10]
	0x01CCEBDC LDP X30, X21, [X31], #0x20
	0x01CCEBE0 RET
	0x01CCEBE4 LDR X0, [X0 + 0x18]
	0x01CCEBE8 RET
	0x01CCEBEC STP X30, X19, [X31 - 0x10]!
	0x01CCEBF0 ADRP X0, 0x227F000
	0x01CCEBF4 LDR X0, [X0 + 0x990]
	0x01CCEBF8 BL 0x1B6E804
	0x01CCEBFC BL 0x1B6EA0C
	0x01CCEC00 MOV X1, X31
	0x01CCEC04 MOV X19, X0
	0x01CCEC08 BL 0x31E99B4
	0x01CCEC0C ADRP X0, 0x2281000
	0x01CCEC10 LDR X0, [X0 + 0x898]
	0x01CCEC14 BL 0x1B6E804
	0x01CCEC18 MOV X1, X0
	0x01CCEC1C MOV X0, X19
	0x01CCEC20 BL 0x1B6E8E8
	0x01CCEC24 LDR X0, [X0 + 0x18]
	0x01CCEC28 RET
	0x01CCEC2C STP X30, X21, [X31 - 0x20]!
	0x01CCEC30 STP X20, X19, [X31 + 0x10]
	0x01CCEC34 ADRP X21, 0x2555000
	0x01CCEC38 ADRP X20, 0x227F000
	0x01CCEC3C ADRP X19, 0x227F000
	0x01CCEC40 LDRB W8, [X21 + 0x5B7]
	0x01CCEC44 LDR X20, [X20 + 0x9A0]
	0x01CCEC48 LDR X19, [X19 + 0x800]
	0x01CCEC4C TBNZ X8, 0x0, 0x1CCEC7C
	0x01CCEC50 ADRP X0, 0x227F000
	0x01CCEC54 LDR X0, [X0 + 0x9A0]
	0x01CCEC58 BL 0x1B6E7F0
	0x01CCEC5C ADRP X0, 0x227F000
	0x01CCEC60 LDR X0, [X0 + 0x800]
	0x01CCEC64 BL 0x1B6E7F0
	0x01CCEC68 ADRP X0, 0x2281000
	0x01CCEC6C LDR X0, [X0 + 0x8A0]
	0x01CCEC70 BL 0x1B6E7F0
	0x01CCEC74 MOVZ W8, 0x1
	0x01CCEC78 STRB W8, [X21 + 0x5B7]
	0x01CCEC7C LDR X8, [X20]
	0x01CCEC80 MOVZ W9, 0x1
	0x01CCEC84 LDR X8, [X8 + 0xB8]
	0x01CCEC88 STRB W9, [X8]
	0x01CCEC8C LDR X0, [X19]
	0x01CCEC90 ADRP X19, 0x2281000
	0x01CCEC94 LDR W8, [X0 + 0xE0]
	0x01CCEC98 LDR X19, [X19 + 0x8A0]
	0x01CCEC9C CBNZ W8, 0x1CCECA4
	0x01CCECA0 BL 0x1B6E8F8
	0x01CCECA4 MOV X0, X31
	0x01CCECA8 BL 0x3A6BF90
	0x01CCECAC AND W0, W0, 0x1
	0x01CCECB0 MOV X1, X31
	0x01CCECB4 BL 0x303CD60
	0x01CCECB8 LDR X8, [X19]
	0x01CCECBC LDP X20, X19, [X31 + 0x10]
	0x01CCECC0 MOV X1, X0
	0x01CCECC4 MOV X2, X31
	0x01CCECC8 MOV X0, X8
	0x01CCECCC LDP X30, X21, [X31], #0x20
	0x01CCECD0 B 0x303C99C
	0x01CCECD4 STR X30, [X31 - 0x30]!
	0x01CCECD8 STP X22, X21, [X31 + 0x10]
	0x01CCECDC STP X20, X19, [X31 + 0x20]
	0x01CCECE0 ADRP X21, 0x2555000
	0x01CCECE4 ADRP X22, 0x227F000
	0x01CCECE8 LDRB W8, [X21 + 0x5B8]
	0x01CCECEC LDR X22, [X22 + 0x9A0]
	0x01CCECF0 MOV X20, X1
	0x01CCECF4 MOV X19, X0
	0x01CCECF8 TBNZ X8, 0x0, 0x1CCED10
	0x01CCECFC ADRP X0, 0x227F000
	0x01CCED00 LDR X0, [X0 + 0x9A0]
	0x01CCED04 BL 0x1B6E7F0
	0x01CCED08 MOVZ W8, 0x1
	0x01CCED0C STRB W8, [X21 + 0x5B8]
	0x01CCED10 LDR X0, [X22]
	0x01CCED14 LDR W8, [X0 + 0xE0]
	0x01CCED18 CBNZ W8, 0x1CCED20
	0x01CCED1C BL 0x1B6E8F8
	0x01CCED20 MOV X0, X20
	0x01CCED24 BL 0x1CCED44
	0x01CCED28 MOV X1, X0
	0x01CCED2C MOV X0, X19
	0x01CCED30 LDP X20, X19, [X31 + 0x20]
	0x01CCED34 LDP X22, X21, [X31 + 0x10]
	0x01CCED38 MOV X2, X31
	0x01CCED3C LDR X30, [X31], #0x30
	0x01CCED40 B 0x303C99C
	0x01CCED44 SUB X31, X31, 0x80
	0x01CCED48 STR D10, [X31 + 0x30]
	0x01CCED4C STP D9, D8, [X31 + 0x38]
	0x01CCED50 STR X30, [X31 + 0x48]
	0x01CCED54 STP X24, X23, [X31 + 0x50]
	0x01CCED58 STP X22, X21, [X31 + 0x60]
	0x01CCED5C STP X20, X19, [X31 + 0x70]
	0x01CCED60 ADRP X19, 0x2555000
	0x01CCED64 LDRB W8, [X19 + 0x5BF]
	0x01CCED68 MOV X20, X0

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X22, 0x2556000
	010 Move X21, 0x2282000
	011 Move X20, 0x2280000
	012 Move W8, [X22+1449]
	013 Move X21, [X21+856]
	014 Move X20, [X20+1144]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {40}
	020 Move X0, 0x2281000
	021 Move X0, [X0+360]
	022 Call 0x1B6F7F0
	023 Move X0, 0x2280000
	024 Move X0, [X0+3960]
	025 Call 0x1B6F7F0
	026 Move X0, 0x2280000
	027 Move X0, [X0+1144]
	028 Call 0x1B6F7F0
	029 Move X0, 0x2282000
	030 Move X0, [X0+2056]
	031 Call 0x1B6F7F0
	032 Move X0, 0x2282000
	033 Move X0, [X0+2064]
	034 Call 0x1B6F7F0
	035 Move X0, 0x2282000
	036 Move X0, [X0+856]
	037 Call 0x1B6F7F0
	038 Move W8, 1
	039 Move [X22+1449], W8
	040 Move X8, [X21]
	041 Move X0, [X20]
	042 Move X8, [X8+184]
	043 Move W9, [X0+224]
	044 Move X20, [X8]
	045 Compare W9, 0
	046 JumpIfNotEqual {48}
	047 Call 0x1B6F8F8
	048 Move X0, X20
	049 Move X1, X31
	050 Move X2, X31
	051 Call Object.op_Inequality, X0, X1
	052 Move TEMP, X0
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfEqual {138}
	056 Move X8, [X21]
	057 Move X24, 0x2282000
	058 Move X23, 0x2280000
	059 Move X22, 0x2281000
	060 Move X21, 0x2282000
	061 Move X24, [X24+2056]
	062 Move X8, [X8+184]
	063 Move X23, [X23+3960]
	064 Move X22, [X22+360]
	065 Move X21, [X21+2064]
	066 Move W25, 20
	067 Move [X8], X19
	068 Move X20, [X19+80]
	069 Call SFXManager.CreateAudioSource
	070 Compare X20, 0
	071 JumpIfEqual {137}
	072 Move X2, [X24]
	073 Move X1, X0
	074 Move X0, X20
	075 Call Queue`1<Object>.Enqueue, X0, X1
	076 Subtract W25, W25, 1
	077 Move X20, 0x2556000
	078 Move W8, [X20+1288]
	079 Compare W8, 0
	080 JumpIfNotEqual {86}
	081 Move X0, 0x2280000
	082 Move X0, [X0+3960]
	083 Call 0x1B6F7F0
	084 Move W8, 1
	085 Move [X20+1288], W8
	086 Move X8, [X23]
	087 Move X8, [X8+184]
	088 Move X9, [X8+64]
	089 Compare X9, 0
	090 JumpIfEqual {92}
	091 Move X9, [X9+152]
	092 Move [X19+72], X9
	093 Move X0, [X22]
	094 Move X20, [X8+24]
	095 Call 0x1B6FA0C
	096 Move X2, [X21]
	097 Move X1, X19
	098 Move X3, X31
	099 Move X21, X0
	100 Call Action`1<Object>..ctor, X0, X1, X2
	101 Move X0, X20
	102 Move X1, X21
	103 Move X2, X31
	104 Call Delegate.Combine, X0, X1
	105 Compare X0, 0
	106 JumpIfEqual {125}
	107 Move X20, [X22]
	108 Move X19, X0
	109 Move X1, X20
	110 Call 0x1B6F8FC
	111 Compare X0, 0
	112 JumpIfEqual {122}
	113 Move X8, [X23]
	114 Move X8, [X8+184]
	115 Move [X8+24], X0
	116 Move X20, [X22]
	117 Move X0, X19
	118 Move X1, X20
	119 Call 0x1B6F8FC
	120 Compare X0, 0
	121 JumpIfNotEqual {128}
	122 Move X0, X19
	123 Move X1, X20
	124 Call 0x1B6FCDC
	125 Move X8, [X23]
	126 Move X8, [X8+184]
	127 Move [X8+24], X31
	128 Move X20, [X31+48]
	129 Move X19, [X31+56]
	130 Move X22, [X31+32]
	131 Move X21, [X31+40]
	132 Move X24, [X31+16]
	133 Move X23, [X31+24]
	134 Move X30, [X31+64]
	135 Move X25, [X31+72]
	136 Return 
	137 Call 0x1B6FA1C
	138 Move X0, 0x2280000
	139 Move X0, [X0+1144]
	140 Call 0x1B6F804
	141 Call 0x18F54F0
	142 Move X0, X19
	143 Move X1, X31
	144 Call Object.Destroy, X0
	145 Move X0, 0x2280000
	146 Move X0, [X0+1648]
	147 Call 0x1B6F804
	148 Call 0x1B6FA0C
	149 Move X19, X0
	150 Move X0, 0x2282000
	151 Move X0, [X0+2072]
	152 Call 0x1B6F804
	153 Move X1, X0
	154 Move X0, X19
	155 Move X2, X31
	156 Call Exception..ctor, X0, X1
	157 Move X0, 0x2282000
	158 Move X0, [X0+2080]
	159 Call 0x1B6F804
	160 Move X1, X0
	161 Move X0, X19
	162 Call 0x1B6F8E8

Method: System.Void OnDestroy()

Disassembly:
	0x01CCEE58 STRB W8, [X19 + 0x5BF]
	0x01CCEE5C MOVI V0.2D, 0x0
	0x01CCEE60 STR X31, [X31 + 0x20]
	0x01CCEE64 STP V0, V0, [X31]
	0x01CCEE68 CBZ X20, 0x1CCEF7C
	0x01CCEE6C ADRP X8, 0x2281000
	0x01CCEE70 LDR X8, [X8 + 0x640]
	0x01CCEE74 LDR X9, [X8]
	0x01CCEE78 LDR X8, [X20]
	0x01CCEE7C CMP X8, X9
	0x01CCEE80 B.EQ 0x1CCEF9C
	0x01CCEE84 ADRP X9, 0x227F000
	0x01CCEE88 LDR X9, [X9 + 0x9B0]
	0x01CCEE8C LDR X9, [X9]
	0x01CCEE90 CMP X8, X9
	0x01CCEE94 B.EQ 0x1CCEFC0
	0x01CCEE98 ADRP X9, 0x227F000
	0x01CCEE9C LDR X9, [X9 + 0x918]
	0x01CCEEA0 LDR X9, [X9]
	0x01CCEEA4 CMP X8, X9
	0x01CCEEA8 B.EQ 0x1CCEFF0
	0x01CCEEAC ADRP X9, 0x227F000
	0x01CCEEB0 LDR X9, [X9 + 0x5F8]
	0x01CCEEB4 LDR X9, [X9]
	0x01CCEEB8 CMP X8, X9
	0x01CCEEBC B.EQ 0x1CCF018
	0x01CCEEC0 ADRP X9, 0x227F000
	0x01CCEEC4 LDR X9, [X9 + 0x480]
	0x01CCEEC8 LDR X9, [X9]
	0x01CCEECC CMP X8, X9
	0x01CCEED0 B.EQ 0x1CCF040
	0x01CCEED4 ADRP X9, 0x2281000
	0x01CCEED8 LDR X9, [X9 + 0x8B0]
	0x01CCEEDC LDR X9, [X9]
	0x01CCEEE0 CMP X8, X9
	0x01CCEEE4 B.EQ 0x1CCF07C
	0x01CCEEE8 ADRP X9, 0x2281000
	0x01CCEEEC LDR X9, [X9 + 0x8D0]
	0x01CCEEF0 LDR X9, [X9]
	0x01CCEEF4 CMP X8, X9
	0x01CCEEF8 B.EQ 0x1CCF0A4
	0x01CCEEFC ADRP X9, 0x227F000
	0x01CCEF00 LDR X9, [X9 + 0x5C0]
	0x01CCEF04 LDR X10, [X9]
	0x01CCEF08 LDRB W9, [X8 + 0x130]
	0x01CCEF0C LDRB W11, [X10 + 0x130]
	0x01CCEF10 CMP W9, W11
	0x01CCEF14 B.CC 0x1CCEF2C
	0x01CCEF18 LDR X12, [X8 + 0xC8]
	0x01CCEF1C ADD X11, X12, X11, 0x3, LSL
	0x01CCEF20 LDUR X11, [X11 - 0x8]
	0x01CCEF24 CMP X11, X10
	0x01CCEF28 B.EQ 0x1CCF0F8
	0x01CCEF2C ADRP X10, 0x2281000
	0x01CCEF30 LDR X10, [X10 + 0x8F8]
	0x01CCEF34 LDR X10, [X10]
	0x01CCEF38 LDRB W11, [X10 + 0x130]
	0x01CCEF3C CMP W9, W11
	0x01CCEF40 B.CC 0x1CCEF58
	0x01CCEF44 LDR X9, [X8 + 0xC8]
	0x01CCEF48 ADD X9, X9, X11, 0x3, LSL
	0x01CCEF4C LDUR X9, [X9 - 0x8]
	0x01CCEF50 CMP X9, X10
	0x01CCEF54 B.EQ 0x1CCF19C
	0x01CCEF58 LDP X9, X1, [X8 + 0x168]
	0x01CCEF5C MOV X0, X20
	0x01CCEF60 BLR X9
	0x01CCEF64 ADRP X8, 0x2281000
	0x01CCEF68 LDR X8, [X8 + 0x900]
	0x01CCEF6C MOV X20, X0
	0x01CCEF70 LDR X8, [X8]
	0x01CCEF74 MOV X0, X8
	0x01CCEF78 B 0x1CCEFA8
	0x01CCEF7C ADRP X8, 0x2281000
	0x01CCEF80 LDR X8, [X8 + 0x900]
	0x01CCEF84 LDR X0, [X8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x2556000
	008 Move X21, 0x2281000
	009 Move W8, [X20+1450]
	010 Move X21, [X21+448]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0x2281000
	017 Move X0, [X0+360]
	018 Call 0x1B6F7F0
	019 Move X0, 0x2281000
	020 Move X0, [X0+448]
	021 Call 0x1B6F7F0
	022 Move X0, 0x2280000
	023 Move X0, [X0+3960]
	024 Call 0x1B6F7F0
	025 Move X0, 0x2282000
	026 Move X0, [X0+2064]
	027 Call 0x1B6F7F0
	028 Move W8, 1
	029 Move [X20+1450], W8
	030 Move X0, [X21]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1B6F8F8
	035 Compare X19, 0
	036 JumpIfEqual {90}
	037 Move W8, [X19+48]
	038 Move X22, 0x2280000
	039 Move X22, [X22+3960]
	040 Move X23, 0x2281000
	041 Or W8, W8, 8
	042 Move [X19+48], W8
	043 Move X8, [X22]
	044 Move X21, 0x2282000
	045 Move X8, [X8+184]
	046 Move X23, [X23+360]
	047 Move X20, [X8+24]
	048 Move X0, [X23]
	049 Move X21, [X21+2064]
	050 Call 0x1B6FA0C
	051 Move X2, [X21]
	052 Move X1, X19
	053 Move X3, X31
	054 Move X21, X0
	055 Call Action`1<Object>..ctor, X0, X1, X2
	056 Move X0, X20
	057 Move X1, X21
	058 Move X2, X31
	059 Call Delegate.Remove, X0, X1
	060 Compare X0, 0
	061 JumpIfEqual {80}
	062 Move X20, [X23]
	063 Move X19, X0
	064 Move X1, X20
	065 Call 0x1B6F8FC
	066 Compare X0, 0
	067 JumpIfEqual {77}
	068 Move X8, [X22]
	069 Move X8, [X8+184]
	070 Move [X8+24], X0
	071 Move X20, [X23]
	072 Move X0, X19
	073 Move X1, X20
	074 Call 0x1B6F8FC
	075 Compare X0, 0
	076 JumpIfNotEqual {83}
	077 Move X0, X19
	078 Move X1, X20
	079 Call 0x1B6FCDC
	080 Move X8, [X22]
	081 Move X8, [X8+184]
	082 Move [X8+24], X31
	083 Move X20, [X31+32]
	084 Move X19, [X31+40]
	085 Move X22, [X31+16]
	086 Move X21, [X31+24]
	087 Move X30, [X31+48]
	088 Move X23, [X31+56]
	089 Return 
	090 Call 0x1B6FA1C

Method: System.Void HandleNewRunner(Fusion.NetworkRunner runner)

Disassembly:
	0x01CCEF88 BL 0x1B6EA0C
	0x01CCEF8C MOV X1, X31

ISIL:
	001 Move [X0+72], X1
	002 Return 

Method: UnityEngine.AudioSource CreateAudioSource()

Disassembly:
	0x01CCED6C TBNZ X8, 0x0, 0x1CCEE5C
	0x01CCED70 ADRP X0, 0x227F000
	0x01CCED74 LDR X0, [X0 + 0x9A0]
	0x01CCED78 BL 0x1B6E7F0
	0x01CCED7C ADRP X0, 0x227F000
	0x01CCED80 LDR X0, [X0 + 0x9B0]
	0x01CCED84 BL 0x1B6E7F0
	0x01CCED88 ADRP X0, 0x2281000
	0x01CCED8C LDR X0, [X0 + 0x8A8]
	0x01CCED90 BL 0x1B6E7F0
	0x01CCED94 ADRP X0, 0x227F000
	0x01CCED98 LDR X0, [X0 + 0x5C0]
	0x01CCED9C BL 0x1B6E7F0
	0x01CCEDA0 ADRP X0, 0x2281000
	0x01CCEDA4 LDR X0, [X0 + 0x8B0]
	0x01CCEDA8 BL 0x1B6E7F0
	0x01CCEDAC ADRP X0, 0x2281000
	0x01CCEDB0 LDR X0, [X0 + 0x8B8]
	0x01CCEDB4 BL 0x1B6E7F0
	0x01CCEDB8 ADRP X0, 0x2281000
	0x01CCEDBC LDR X0, [X0 + 0x8C0]
	0x01CCEDC0 BL 0x1B6E7F0
	0x01CCEDC4 ADRP X0, 0x2281000
	0x01CCEDC8 LDR X0, [X0 + 0x8C8]
	0x01CCEDCC BL 0x1B6E7F0
	0x01CCEDD0 ADRP X0, 0x227F000
	0x01CCEDD4 LDR X0, [X0 + 0x5F8]
	0x01CCEDD8 BL 0x1B6E7F0
	0x01CCEDDC ADRP X0, 0x2281000
	0x01CCEDE0 LDR X0, [X0 + 0x8D0]
	0x01CCEDE4 BL 0x1B6E7F0
	0x01CCEDE8 ADRP X0, 0x2281000
	0x01CCEDEC LDR X0, [X0 + 0x8D8]
	0x01CCEDF0 BL 0x1B6E7F0
	0x01CCEDF4 ADRP X0, 0x2281000
	0x01CCEDF8 LDR X0, [X0 + 0x8E0]
	0x01CCEDFC BL 0x1B6E7F0
	0x01CCEE00 ADRP X0, 0x2281000
	0x01CCEE04 LDR X0, [X0 + 0x8E8]
	0x01CCEE08 BL 0x1B6E7F0
	0x01CCEE0C ADRP X0, 0x2281000
	0x01CCEE10 LDR X0, [X0 + 0x8F0]
	0x01CCEE14 BL 0x1B6E7F0
	0x01CCEE18 ADRP X0, 0x2281000
	0x01CCEE1C LDR X0, [X0 + 0x8F8]
	0x01CCEE20 BL 0x1B6E7F0
	0x01CCEE24 ADRP X0, 0x227F000
	0x01CCEE28 LDR X0, [X0 + 0x918]
	0x01CCEE2C BL 0x1B6E7F0
	0x01CCEE30 ADRP X0, 0x2281000
	0x01CCEE34 LDR X0, [X0 + 0x640]
	0x01CCEE38 BL 0x1B6E7F0
	0x01CCEE3C ADRP X0, 0x2281000
	0x01CCEE40 LDR X0, [X0 + 0x900]
	0x01CCEE44 BL 0x1B6E7F0
	0x01CCEE48 ADRP X0, 0x227F000
	0x01CCEE4C LDR X0, [X0 + 0x480]
	0x01CCEE50 BL 0x1B6E7F0
	0x01CCEE54 MOVZ W8, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0x2556000
	006 Move X20, 0x2280000
	007 Move W8, [X19+1451]
	008 Move X20, [X20+2272]
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {27}
	013 Move X0, 0x2282000
	014 Move X0, [X0+2088]
	015 Call 0x1B6F7F0
	016 Move X0, 0x2280000
	017 Move X0, [X0+2272]
	018 Call 0x1B6F7F0
	019 Move X0, 0x2282000
	020 Move X0, [X0+856]
	021 Call 0x1B6F7F0
	022 Move X0, 0x2282000
	023 Move X0, [X0+2096]
	024 Call 0x1B6F7F0
	025 Move W8, 1
	026 Move [X19+1451], W8
	027 Move X0, [X20]
	028 Call 0x1B6FA0C
	029 Move X1, X31
	030 Move X19, X0
	031 Call GameObject..ctor, X0
	032 Compare X19, 0
	033 JumpIfEqual {70}
	034 Move X8, 0x2282000
	035 Move X8, [X8+2096]
	036 Move X20, 0x2282000
	037 Move X0, X19
	038 Move X2, X31
	039 Move X1, [X8]
	040 Move X20, [X20+856]
	041 Call Object.set_name, X0, X1
	042 Move X0, X19
	043 Move X1, X31
	044 Call GameObject.get_transform, X0
	045 Move X8, [X20]
	046 Move X8, [X8+184]
	047 Move X8, [X8]
	048 Compare X8, 0
	049 JumpIfEqual {70}
	050 Move X20, X0
	051 Move X0, X8
	052 Move X1, X31
	053 Call Component.get_transform, X0
	054 Compare X20, 0
	055 JumpIfEqual {70}
	056 Move X21, 0x2282000
	057 Move X21, [X21+2088]
	058 Move X1, X0
	059 Move X0, X20
	060 Move X2, X31
	061 Call Transform.set_parent, X0, X1
	062 Move X1, [X21]
	063 Move X0, X19
	064 Move X20, [X31+16]
	065 Move X19, [X31+24]
	066 Move X30, [X31+32]
	067 Move X21, [X31+40]
	068 Call 0x20CFE08, X0
	069 Return X0
	070 Call 0x1B6FA1C

Method: System.Void PlaySFX(AnimalCompany.RandomSFX sfx, UnityEngine.Vector3 position, System.Single volume)

Disassembly:
	0x01CCE9CC BL 0x1B6EA1C
	0x01CCE9D0 LDR X0, [X0 + 0x18]
	0x01CCE9D4 RET
	0x01CCE9D8 STP X30, X19, [X31 - 0x10]!
	0x01CCE9DC ADRP X0, 0x227F000
	0x01CCE9E0 LDR X0, [X0 + 0x990]
	0x01CCE9E4 BL 0x1B6E804
	0x01CCE9E8 BL 0x1B6EA0C
	0x01CCE9EC MOV X1, X31
	0x01CCE9F0 MOV X19, X0
	0x01CCE9F4 BL 0x31E99B4
	0x01CCE9F8 ADRP X0, 0x2281000
	0x01CCE9FC LDR X0, [X0 + 0x880]
	0x01CCEA00 BL 0x1B6E804
	0x01CCEA04 MOV X1, X0
	0x01CCEA08 MOV X0, X19
	0x01CCEA0C BL 0x1B6E8E8
	0x01CCEA10 LDR X0, [X0 + 0x18]
	0x01CCEA14 RET
	0x01CCEA18 STR X30, [X31 - 0x20]!
	0x01CCEA1C STP X20, X19, [X31 + 0x10]
	0x01CCEA20 ADRP X19, 0x2555000
	0x01CCEA24 ADRP X20, 0x2281000
	0x01CCEA28 LDRB W8, [X19 + 0x5B5]
	0x01CCEA2C LDR X20, [X20 + 0x888]
	0x01CCEA30 TBNZ X8, 0x0, 0x1CCEA48
	0x01CCEA34 ADRP X0, 0x2281000
	0x01CCEA38 LDR X0, [X0 + 0x888]
	0x01CCEA3C BL 0x1B6E7F0
	0x01CCEA40 MOVZ W8, 0x1
	0x01CCEA44 STRB W8, [X19 + 0x5B5]
	0x01CCEA48 LDR X0, [X20]
	0x01CCEA4C BL 0x1B6EA0C
	0x01CCEA50 MOV X1, X31
	0x01CCEA54 MOV X19, X0
	0x01CCEA58 BL 0x32276F8
	0x01CCEA5C STR W31, [X19 + 0x10]
	0x01CCEA60 MOV X0, X19
	0x01CCEA64 LDP X20, X19, [X31 + 0x10]
	0x01CCEA68 LDR X30, [X31], #0x20
	0x01CCEA6C RET
	0x01CCEA70 STR X30, [X31 - 0x20]!
	0x01CCEA74 STP X20, X19, [X31 + 0x10]
	0x01CCEA78 MOV W19, W1
	0x01CCEA7C MOV X1, X31
	0x01CCEA80 MOV X20, X0
	0x01CCEA84 BL 0x32276F8
	0x01CCEA88 STR W19, [X20 + 0x10]
	0x01CCEA8C LDP X20, X19, [X31 + 0x10]
	0x01CCEA90 LDR X30, [X31], #0x20
	0x01CCEA94 RET
	0x01CCEA98 MOV X1, X31

ISIL:
	001 Move [X31-64], D11
	002 Move [X31-56], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X20, 0x2556000
	010 Move X21, 0x2282000
	011 Move W8, [X20+1452]
	012 Move X21, [X21+856]
	013 Move V8, V3
	014 Move V9, V2
	015 Move V10, V1
	016 Move V11, V0
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {33}
	022 Move X0, 0x2282000
	023 Move X0, [X0+2024]
	024 Call 0x1B6F7F0
	025 Move X0, 0x2282000
	026 Move X0, [X0+2032]
	027 Call 0x1B6F7F0
	028 Move X0, 0x2282000
	029 Move X0, [X0+856]
	030 Call 0x1B6F7F0
	031 Move W8, 1
	032 Move [X20+1452], W8
	033 Move X8, [X21]
	034 Move X8, [X8+184]
	035 Move X8, [X8]
	036 Compare X8, 0
	037 JumpIfEqual {66}
	038 Move X0, [X8+80]
	039 Compare X0, 0
	040 JumpIfEqual {66}
	041 Move W8, [X0+32]
	042 Compare W8, 0
	043 JumpIfEqual {48}
	044 Move X8, 0x2282000
	045 Move X8, [X8+2024]
	046 Move X1, [X8]
	047 Call Queue`1<Object>.Dequeue, X0
	048 Call SFXManager.CreateAudioSource
	049 Move X1, X0
	050 Move X0, X19
	051 Move V2, V9
	052 Move V3, V8
	053 Move X20, [X31+48]
	054 Move X19, [X31+56]
	055 Move X30, [X31+32]
	056 Move X21, [X31+40]
	057 Move D9, [X31+16]
	058 Move D8, [X31+24]
	059 Move W2, 1
	060 Move V0, V11
	061 Move V1, V10
	062 Move D11, [X31+64]
	063 Move D10, [X31+72]
	064 Call SFXManager.PlaySFXInternal, X0, X1, V0, X2, X3
	065 Return 
	066 Call 0x1B6FA1C

Method: System.Void PlaySFXAsRPC(AnimalCompany.RandomSFX sfx, UnityEngine.Vector3 position, System.Single volume)

Disassembly:
	0x01CC281C BL 0x1B6E8F8
	0x01CC2820 LDR X0, [X21]
	0x01CC2824 LDR X8, [X0 + 0xB8]
	0x01CC2828 ADRP X9, 0xFFFFFFFFFEDE7000
	0x01CC282C LDR V8, [X9 + 0xAF4]
	0x01CC2830 MOV X0, X31
	0x01CC2834 LDP S0, S1, [X8]
	0x01CC2838 LDR V2, [X8 + 0x8]
	0x01CC283C FMUL S0, S0, S8
	0x01CC2840 FMUL S1, S1, S8
	0x01CC2844 FMUL S2, S2, S8
	0x01CC2848 BL 0x3A928DC
	0x01CC284C LDR X8, [X21]
	0x01CC2850 MOV V11.16B, V0.16B
	0x01CC2854 MOV V10.16B, V1.16B
	0x01CC2858 MOV V14.16B, V2.16B
	0x01CC285C LDR X8, [X8 + 0xB8]
	0x01CC2860 MOV X0, X31
	0x01CC2864 MOV V13.16B, V3.16B
	0x01CC2868 LDP S0, S1, [X8 + 0xC]
	0x01CC286C LDR V2, [X8 + 0x14]
	0x01CC2870 FMUL S0, S0, S8
	0x01CC2874 FMUL S1, S1, S8
	0x01CC2878 FMUL S2, S2, S8
	0x01CC287C BL 0x3A928DC
	0x01CC2880 LDR X0, [X19 + 0x38]
	0x01CC2884 CBZ X0, 0x1CC2C64
	0x01CC2888 LDR X20, [X19 + 0x70]
	0x01CC288C MOV X1, X31
	0x01CC2890 MOV V12.16B, V0.16B
	0x01CC2894 MOV V15.16B, V1.16B
	0x01CC2898 MOV V8.16B, V2.16B
	0x01CC289C MOV V9.16B, V3.16B
	0x01CC28A0 BL 0x3AA5FBC
	0x01CC28A4 CBZ X20, 0x1CC2C64
	0x01CC28A8 FMUL S4, S13, S3
	0x01CC28AC FMUL S5, S11, S0
	0x01CC28B0 FMUL S6, S10, S1
	0x01CC28B4 FMUL S7, S14, S2
	0x01CC28B8 FMUL S16, S10, S0
	0x01CC28BC FMUL S17, S14, S3
	0x01CC28C0 FMUL S18, S13, S2
	0x01CC28C4 FMUL S19, S11, S1
	0x01CC28C8 FMUL S20, S13, S1
	0x01CC28CC FMUL S1, S14, S1
	0x01CC28D0 FMUL S21, S14, S0
	0x01CC28D4 FMUL S0, S13, S0
	0x01CC28D8 FMUL S22, S11, S2
	0x01CC28DC FMUL S23, S11, S3
	0x01CC28E0 FMUL S3, S10, S3
	0x01CC28E4 FMUL S2, S10, S2
	0x01CC28E8 LDP S14, S13, [X31 + 0x68]
	0x01CC28EC LDR V10, [X31 + 0x1C]
	0x01CC28F0 FSUB S4, S4, S5
	0x01CC28F4 FADD S5, S17, S18
	0x01CC28F8 FADD S3, S3, S20
	0x01CC28FC FADD S0, S23, S0
	0x01CC2900 FSUB S4, S4, S6
	0x01CC2904 FADD S5, S16, S5
	0x01CC2908 FADD S3, S22, S3
	0x01CC290C FADD S0, S1, S0
	0x01CC2910 FSUB S6, S4, S7
	0x01CC2914 FSUB S5, S5, S19
	0x01CC2918 FSUB S4, S3, S21
	0x01CC291C FSUB S3, S0, S2
	0x01CC2920 MOV X0, X20
	0x01CC2924 MOV V0.16B, V13.16B
	0x01CC2928 MOV V1.16B, V10.16B
	0x01CC292C MOV V2.16B, V14.16B
	0x01CC2930 MOV X1, X31
	0x01CC2934 BL 0x3AA80CC
	0x01CC2938 LDR X0, [X19 + 0x40]
	0x01CC293C CBZ X0, 0x1CC2C64
	0x01CC2940 LDR X20, [X19 + 0x78]
	0x01CC2944 MOV X1, X31
	0x01CC2948 BL 0x3AA5FBC
	0x01CC294C CBZ X20, 0x1CC2C64
	0x01CC2950 FMUL S4, S9, S3
	0x01CC2954 FMUL S5, S12, S0

ISIL:
	001 Move [X31-64], D11
	002 Move [X31-56], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X20, 0x2562000
	010 Move X21, 0x228E000
	011 Move W8, [X20+1453]
	012 Move X21, [X21+856]
	013 Move V8, V3
	014 Move V9, V2
	015 Move V10, V1
	016 Move V11, V0
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {30}
	022 Move X0, 0x228C000
	023 Move X0, [X0+1144]
	024 Call 0x1B6F7F0
	025 Move X0, 0x228E000
	026 Move X0, [X0+856]
	027 Call 0x1B6F7F0
	028 Move W8, 1
	029 Move [X20+1453], W8
	030 Move X8, [X21]
	031 Move X8, [X8+184]
	032 Move X8, [X8]
	033 Compare X8, 0
	034 JumpIfEqual {104}
	035 Move X9, 0x228C000
	036 Move X9, [X9+1144]
	037 Move X20, [X8+72]
	038 Move X0, [X9]
	039 Move W9, [X0+224]
	040 Compare W9, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1B6F8F8
	043 Move X0, X20
	044 Move X1, X31
	045 Move X2, X31
	046 Call Object.op_Equality, X0, X1
	047 Move TEMP, X0
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfEqual {89}
	051 Move X8, [X21]
	052 Move X8, [X8+184]
	053 Move X8, [X8]
	054 Compare X8, 0
	055 JumpIfEqual {104}
	056 Move X0, [X8+72]
	057 Compare X0, 0
	058 JumpIfEqual {104}
	059 Move X1, X31
	060 Call NetworkRunner.get_State, X0
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move X8, [X21]
	063 Move X8, [X8+184]
	064 Move X8, [X8]
	065 Compare X8, 0
	066 JumpIfEqual {104}
	067 Compare X19, 0
	068 JumpIfEqual {104}
	069 Move X20, [X8+72]
	070 Move X0, X19
	071 Move X1, X31
	072 Call Object.get_name, X0
	073 Move X1, X0
	074 Move X0, X20
	075 Move V2, V9
	076 Move V3, V8
	077 Move X20, [X31+48]
	078 Move X19, [X31+56]
	079 Move X30, [X31+32]
	080 Move X21, [X31+40]
	081 Move D9, [X31+16]
	082 Move D8, [X31+24]
	083 Move V0, V11
	084 Move V1, V10
	085 Move D11, [X31+64]
	086 Move D10, [X31+72]
	087 Call SFXManager.RPC_PlaySFX, X0, X1, X2, V0
	088 Return 
	089 Move X0, X19
	090 Move V2, V9
	091 Move V3, V8
	092 Move X20, [X31+48]
	093 Move X19, [X31+56]
	094 Move X30, [X31+32]
	095 Move X21, [X31+40]
	096 Move D9, [X31+16]
	097 Move D8, [X31+24]
	098 Move V0, V11
	099 Move V1, V10
	100 Move D11, [X31+64]
	101 Move D10, [X31+72]
	102 Call SFXManager.PlaySFX, X0, X1, V0
	103 Return 
	104 Call 0x1B6FA1C

Method: System.Void PlaySFXAsRPC(System.String sfxName, UnityEngine.Vector3 position, System.Single volume)

Disassembly:
	0x01CC3284 FCMP S15, S8
	0x01CC3288 FMOV S11, W31
	0x01CC328C B.EQ 0x1CC32C8
	0x01CC3290 FMUL S1, S14, S14
	0x01CC3294 FMUL S2, S13, S13
	0x01CC3298 FMUL S3, S12, S12
	0x01CC329C FADD S1, S1, S2
	0x01CC32A0 FADD S1, S3, S1
	0x01CC32A4 FSQRT S1, S1
	0x01CC32A8 FSUB S1, S1, S15
	0x01CC32AC FSUB S2, S8, S15
	0x01CC32B0 FDIV S1, S1, S2
	0x01CC32B4 FCMP S1, 0x0
	0x01CC32B8 FMOV S11, W31
	0x01CC32BC B.MI 0x1CC32C8
	0x01CC32C0 FMOV S2, 1
	0x01CC32C4 FMIN S11, S1, S2
	0x01CC32C8 LDR X8, [X23]
	0x01CC32CC FMAX S0, S11, S0
	0x01CC32D0 MOV W0, W19
	0x01CC32D4 LDR X8, [X8 + 0xB8]
	0x01CC32D8 LDP S1, S2, [X8 + 0x58]
	0x01CC32DC ADRP X8, 0xFFFFFFFFFEDE6000
	0x01CC32E0 FSUB S2, S2, S1
	0x01CC32E4 FMUL S0, S0, S2
	0x01CC32E8 FADD S0, S1, S0
	0x01CC32EC LDR V1, [X8 + 0xAB0]
	0x01CC32F0 BL 0x1CC220C
	0x01CC32F4 CBZ X22, 0x1CC3524
	0x01CC32F8 ADRP X8, 0x228C000
	0x01CC32FC LDR X21, [X20 + 0x40]
	0x01CC3300 LDR X8, [X8 + 0x3C0]
	0x01CC3304 ADD X1, X31, 0x58
	0x01CC3308 MOV X0, X22
	0x01CC330C LDR X2, [X8]

ISIL:
	001 Move [X31-64], D11
	002 Move [X31-56], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X20, 0x2561000
	010 Move X21, 0x228D000
	011 Move W8, [X20+1454]
	012 Move X21, [X21+856]
	013 Move V8, V3
	014 Move V9, V2
	015 Move V10, V1
	016 Move V11, V0
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {27}
	022 Move X0, 0x228D000
	023 Move X0, [X0+856]
	024 Call 0x1B6F7F0
	025 Move W8, 1
	026 Move [X20+1454], W8
	027 Move X8, [X21]
	028 Move X8, [X8+184]
	029 Move X8, [X8]
	030 Compare X8, 0
	031 JumpIfEqual {48}
	032 Move X0, [X8+72]
	033 Move X1, X19
	034 Move V2, V9
	035 Move V3, V8
	036 Move X20, [X31+48]
	037 Move X19, [X31+56]
	038 Move X30, [X31+32]
	039 Move X21, [X31+40]
	040 Move D9, [X31+16]
	041 Move D8, [X31+24]
	042 Move V0, V11
	043 Move V1, V10
	044 Move D11, [X31+64]
	045 Move D10, [X31+72]
	046 Call SFXManager.RPC_PlaySFX, X0, X1, X2, V0
	047 Return 
	048 Call 0x1B6FA1C

Method: System.Void RPC_PlaySFX(Fusion.NetworkRunner runner, System.String sfxResourceName, UnityEngine.Vector3 position, System.Single volume)

Disassembly:
	0x01CCF25C LDR X21, [X0]
	0x01CCF260 BL 0x3D19850
	0x01CCF264 ADRP X8, 0x2280000
	0x01CCF268 LDR X8, [X8 + 0x8B8]
	0x01CCF26C ADD X0, X31, 0x0
	0x01CCF270 LDR X1, [X8]
	0x01CCF274 BL 0x2A5A4D8
	0x01CCF278 CBZ X21, 0x1CCF0D4
	0x01CCF27C MOV X0, X21
	0x01CCF280 BL 0x1B6EA14
	0x01CCF284 MOV X21, X31
	0x01CCF288 B 0x1CCF290
	0x01CCF28C MOV X20, X0
	0x01CCF290 ADRP X8, 0x2280000
	0x01CCF294 LDR X8, [X8 + 0x8B8]
	0x01CCF298 LDR X1, [X8]
	0x01CCF29C ADD X0, X31, 0x0
	0x01CCF2A0 BL 0x2A5A4D8
	0x01CCF2A4 CBNZ X21, 0x1CCF2B0
	0x01CCF2A8 MOV X0, X20
	0x01CCF2AC BL 0x1C8418C
	0x01CCF2B0 MOV X0, X21
	0x01CCF2B4 BL 0x1B6EA14
	0x01CCF2B8 BL 0x18F46A8
	0x01CCF2BC SUB X31, X31, 0x70
	0x01CCF2C0 STR X30, [X31 + 0x30]
	0x01CCF2C4 STP X24, X23, [X31 + 0x40]
	0x01CCF2C8 STP X22, X21, [X31 + 0x50]
	0x01CCF2CC STP X20, X19, [X31 + 0x60]
	0x01CCF2D0 ADRP X21, 0x2554000
	0x01CCF2D4 ADRP X19, 0x2280000
	0x01CCF2D8 LDRB W8, [X21 + 0x5BD]
	0x01CCF2DC LDR X19, [X19 + 0x900]
	0x01CCF2E0 MOV X20, X0
	0x01CCF2E4 TBNZ X8, 0x0, 0x1CCF350
	0x01CCF2E8 ADRP X0, 0x227E000
	0x01CCF2EC LDR X0, [X0 + 0x9A0]
	0x01CCF2F0 BL 0x1B6E7F0
	0x01CCF2F4 ADRP X0, 0x2280000
	0x01CCF2F8 LDR X0, [X0 + 0x8A8]
	0x01CCF2FC BL 0x1B6E7F0
	0x01CCF300 ADRP X0, 0x2280000
	0x01CCF304 LDR X0, [X0 + 0x8B8]
	0x01CCF308 BL 0x1B6E7F0
	0x01CCF30C ADRP X0, 0x2280000
	0x01CCF310 LDR X0, [X0 + 0x8C0]
	0x01CCF314 BL 0x1B6E7F0
	0x01CCF318 ADRP X0, 0x2280000
	0x01CCF31C LDR X0, [X0 + 0x8C8]
	0x01CCF320 BL 0x1B6E7F0
	0x01CCF324 ADRP X0, 0x2280000
	0x01CCF328 LDR X0, [X0 + 0x8D8]
	0x01CCF32C BL 0x1B6E7F0
	0x01CCF330 ADRP X0, 0x2280000
	0x01CCF334 LDR X0, [X0 + 0x8E0]
	0x01CCF338 BL 0x1B6E7F0
	0x01CCF33C ADRP X0, 0x2280000
	0x01CCF340 LDR X0, [X0 + 0x900]
	0x01CCF344 BL 0x1B6E7F0
	0x01CCF348 MOVZ W8, 0x1
	0x01CCF34C STRB W8, [X21 + 0x5BD]
	0x01CCF350 LDR X0, [X19]
	0x01CCF354 MOVI V0.2D, 0x0
	0x01CCF358 STR X31, [X31 + 0x20]
	0x01CCF35C STP V0, V0, [X31]
	0x01CCF360 BL 0x1B6EA0C
	0x01CCF364 MOV X1, X31
	0x01CCF368 MOV X19, X0
	0x01CCF36C BL 0x303CB4C
	0x01CCF370 CBZ X20, 0x1CCF418
	0x01CCF374 ADRP X8, 0x2280000
	0x01CCF378 LDR X8, [X8 + 0x8A8]
	0x01CCF37C ADRP X23, 0x2280000
	0x01CCF380 ADRP X24, 0x227E000
	0x01CCF384 ADRP X22, 0x2280000
	0x01CCF388 LDR X1, [X8]
	0x01CCF38C LDR X23, [X23 + 0x8C0]
	0x01CCF390 LDR X24, [X24 + 0x9A0]
	0x01CCF394 LDR X22, [X22 + 0x8B8]
	0x01CCF398 ADD X8, X31, 0x0
	0x01CCF39C MOV X0, X20
	0x01CCF3A0 BL 0x28FA6CC
	0x01CCF3A4 LDR X1, [X23]
	0x01CCF3A8 ADD X0, X31, 0x0
	0x01CCF3AC BL 0x2A5A3C4
	0x01CCF3B0 TBZ X0, 0x0, 0x1CCF3EC
	0x01CCF3B4 LDR X0, [X24]
	0x01CCF3B8 LDP X20, X21, [X31 + 0x10]
	0x01CCF3BC LDR W8, [X0 + 0xE0]
	0x01CCF3C0 CBNZ W8, 0x1CCF3C8
	0x01CCF3C4 BL 0x1B6E8F8
	0x01CCF3C8 MOV X0, X21
	0x01CCF3CC BL 0x1CCED44
	0x01CCF3D0 CBZ X19, 0x1CCF414
	0x01CCF3D4 MOV X2, X0
	0x01CCF3D8 MOV X0, X19
	0x01CCF3DC MOV X1, X20
	0x01CCF3E0 MOV X3, X31
	0x01CCF3E4 BL 0x303CC78
	0x01CCF3E8 B 0x1CCF3A4
	0x01CCF3EC LDR X1, [X22]
	0x01CCF3F0 ADD X0, X31, 0x0
	0x01CCF3F4 BL 0x2A5A4D8
	0x01CCF3F8 MOV X0, X19
	0x01CCF3FC LDP X20, X19, [X31 + 0x60]
	0x01CCF400 LDP X22, X21, [X31 + 0x50]
	0x01CCF404 LDP X24, X23, [X31 + 0x40]
	0x01CCF408 LDR X30, [X31 + 0x30]
	0x01CCF40C ADD X31, X31, 0x70
	0x01CCF410 RET
	0x01CCF414 BL 0x1B6EA1C
	0x01CCF418 BL 0x1B6EA1C
	0x01CCF41C B 0x1CCF428
	0x01CCF420 B 0x1CCF428
	0x01CCF424 B 0x1CCF428
	0x01CCF428 CMP W1, 0x1
	0x01CCF42C B.NE 0x1CCF454
	0x01CCF430 BL 0x3D19840
	0x01CCF434 LDR X20, [X0]
	0x01CCF438 BL 0x3D19850
	0x01CCF43C LDR X1, [X22]
	0x01CCF440 ADD X0, X31, 0x0
	0x01CCF444 BL 0x2A5A4D8
	0x01CCF448 CBZ X20, 0x1CCF3F8
	0x01CCF44C MOV X0, X20
	0x01CCF450 BL 0x1B6EA14
	0x01CCF454 MOV X19, X0
	0x01CCF458 MOV X20, X31
	0x01CCF45C B 0x1CCF464
	0x01CCF460 MOV X19, X0
	0x01CCF464 LDR X1, [X22]
	0x01CCF468 ADD X0, X31, 0x0
	0x01CCF46C BL 0x2A5A4D8
	0x01CCF470 CBNZ X20, 0x1CCF47C
	0x01CCF474 MOV X0, X19
	0x01CCF478 BL 0x1C8418C
	0x01CCF47C MOV X0, X20
	0x01CCF480 BL 0x1B6EA14
	0x01CCF484 BL 0x18F46A8
	0x01CCF488 STR X30, [X31 - 0x30]!
	0x01CCF48C STP X22, X21, [X31 + 0x10]
	0x01CCF490 STP X20, X19, [X31 + 0x20]
	0x01CCF494 ADRP X22, 0x2554000
	0x01CCF498 ADRP X21, 0x227E000
	0x01CCF49C LDRB W8, [X22 + 0x5BB]
	0x01CCF4A0 LDR X21, [X21 + 0x9A0]
	0x01CCF4A4 MOV X20, X1
	0x01CCF4A8 MOV X19, X0
	0x01CCF4AC TBNZ X8, 0x0, 0x1CCF4C4
	0x01CCF4B0 ADRP X0, 0x227E000
	0x01CCF4B4 LDR X0, [X0 + 0x9A0]
	0x01CCF4B8 BL 0x1B6E7F0
	0x01CCF4BC MOVZ W8, 0x1
	0x01CCF4C0 STRB W8, [X22 + 0x5BB]
	0x01CCF4C4 LDR X0, [X21]
	0x01CCF4C8 LDR W8, [X0 + 0xE0]
	0x01CCF4CC CBNZ W8, 0x1CCF4D8
	0x01CCF4D0 BL 0x1B6E8F8
	0x01CCF4D4 LDR X0, [X21]
	0x01CCF4D8 LDR X8, [X0 + 0xB8]
	0x01CCF4DC LDRB W8, [X8]
	0x01CCF4E0 CBZ W8, 0x1CCF520
	0x01CCF4E4 CBZ X20, 0x1CCF548
	0x01CCF4E8 LDR X8, [X20 + 0x18]
	0x01CCF4EC CBZ X8, 0x1CCF530
	0x01CCF4F0 LDR W8, [X0 + 0xE0]
	0x01CCF4F4 CBNZ W8, 0x1CCF4FC
	0x01CCF4F8 BL 0x1B6E8F8
	0x01CCF4FC MOV X0, X20
	0x01CCF500 BL 0x1CCF54C
	0x01CCF504 MOV X1, X0
	0x01CCF508 MOV X0, X19
	0x01CCF50C LDP X20, X19, [X31 + 0x20]
	0x01CCF510 LDP X22, X21, [X31 + 0x10]
	0x01CCF514 MOV X2, X31
	0x01CCF518 LDR X30, [X31], #0x30
	0x01CCF51C B 0x30407FC
	0x01CCF520 LDP X20, X19, [X31 + 0x20]
	0x01CCF524 LDP X22, X21, [X31 + 0x10]
	0x01CCF528 LDR X30, [X31], #0x30
	0x01CCF52C RET
	0x01CCF530 MOV X0, X19
	0x01CCF534 LDP X20, X19, [X31 + 0x20]
	0x01CCF538 LDP X22, X21, [X31 + 0x10]
	0x01CCF53C MOV X1, X31
	0x01CCF540 LDR X30, [X31], #0x30
	0x01CCF544 B 0x304141C
	0x01CCF548 BL 0x1B6EA1C
	0x01CCF54C STP X30, X25, [X31 - 0x40]!
	0x01CCF550 STP X24, X23, [X31 + 0x10]
	0x01CCF554 STP X22, X21, [X31 + 0x20]
	0x01CCF558 STP X20, X19, [X31 + 0x30]
	0x01CCF55C ADRP X20, 0x2554000
	0x01CCF560 ADRP X21, 0x2280000
	0x01CCF564 LDRB W8, [X20 + 0x5BE]
	0x01CCF568 LDR X21, [X21 + 0x900]
	0x01CCF56C MOV X19, X0
	0x01CCF570 TBNZ X8, 0x0, 0x1CCF594
	0x01CCF574 ADRP X0, 0x227E000
	0x01CCF578 LDR X0, [X0 + 0x9A0]
	0x01CCF57C BL 0x1B6E7F0
	0x01CCF580 ADRP X0, 0x2280000
	0x01CCF584 LDR X0, [X0 + 0x900]
	0x01CCF588 BL 0x1B6E7F0
	0x01CCF58C MOVZ W8, 0x1
	0x01CCF590 STRB W8, [X20 + 0x5BE]
	0x01CCF594 LDR X0, [X21]
	0x01CCF598 BL 0x1B6EA0C
	0x01CCF59C MOV X1, X31
	0x01CCF5A0 MOV X20, X0
	0x01CCF5A4 BL 0x303CB4C
	0x01CCF5A8 CBZ X19, 0x1CCF638
	0x01CCF5AC LDR X8, [X19 + 0x18]
	0x01CCF5B0 CMP W8, 0x1
	0x01CCF5B4 B.LT 0x1CCF61C
	0x01CCF5B8 ADRP X24, 0x227E000
	0x01CCF5BC LDR X24, [X24 + 0x9A0]
	0x01CCF5C0 MOV X23, X31
	0x01CCF5C4 AND X8, X8, 0x0
	0x01CCF5C8 ADD X25, X19, 0x28
	0x01CCF5CC CMP X23, W8, UXTW
	0x01CCF5D0 B.CS 0x1CCF634
	0x01CCF5D4 LDR X0, [X24]
	0x01CCF5D8 LDP X21, X22, [X25 - 0x8]
	0x01CCF5DC LDR W8, [X0 + 0xE0]
	0x01CCF5E0 CBNZ W8, 0x1CCF5E8
	0x01CCF5E4 BL 0x1B6E8F8
	0x01CCF5E8 MOV X0, X22
	0x01CCF5EC BL 0x1CCED44
	0x01CCF5F0 CBZ X20, 0x1CCF638
	0x01CCF5F4 MOV X2, X0
	0x01CCF5F8 MOV X0, X20
	0x01CCF5FC MOV X1, X21
	0x01CCF600 MOV X3, X31
	0x01CCF604 BL 0x303CC78
	0x01CCF608 LDR W8, [X19 + 0x18]
	0x01CCF60C ADD X23, X23, 0x1
	0x01CCF610 ADD X25, X25, 0x10
	0x01CCF614 CMP X23, W8, SXTW
	0x01CCF618 B.LT 0x1CCF5CC
	0x01CCF61C MOV X0, X20
	0x01CCF620 LDP X20, X19, [X31 + 0x30]
	0x01CCF624 LDP X22, X21, [X31 + 0x20]
	0x01CCF628 LDP X24, X23, [X31 + 0x10]
	0x01CCF62C LDP X30, X25, [X31], #0x40

ISIL:
	001 Move [X31-80], D11
	002 Move [X31-72], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X21, 0x2555000
	011 Move X22, 0x2280000
	012 Move W8, [X21+1455]
	013 Move X22, [X22+448]
	014 Move V8, V3
	015 Move V9, V2
	016 Move V10, V1
	017 Move V11, V0
	018 Move X19, X1
	019 Move X20, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {59}
	024 Move X0, 0x227F000
	025 Move X0, [X0+1576]
	026 Call 0x1B6F7F0
	027 Move X0, 0x2280000
	028 Move X0, [X0+448]
	029 Call 0x1B6F7F0
	030 Move X0, 0x227F000
	031 Move X0, [X0+1144]
	032 Call 0x1B6F7F0
	033 Move X0, 0x2281000
	034 Move X0, [X0+2024]
	035 Call 0x1B6F7F0
	036 Move X0, 0x2281000
	037 Move X0, [X0+2032]
	038 Call 0x1B6F7F0
	039 Move X0, 0x2281000
	040 Move X0, [X0+2104]
	041 Call 0x1B6F7F0
	042 Move X0, 0x2281000
	043 Move X0, [X0+856]
	044 Call 0x1B6F7F0
	045 Move X0, 0x2281000
	046 Move X0, [X0+2112]
	047 Call 0x1B6F7F0
	048 Move X0, 0x2281000
	049 Move X0, [X0+2120]
	050 Call 0x1B6F7F0
	051 Move X0, 0x2281000
	052 Move X0, [X0+2128]
	053 Call 0x1B6F7F0
	054 Move X0, 0x2281000
	055 Move X0, [X0+2136]
	056 Call 0x1B6F7F0
	057 Move W8, 1
	058 Move [X21+1455], W8
	059 Move X0, [X22]
	060 Move W8, [X0+224]
	061 Compare W8, 0
	062 JumpIfNotEqual {65}
	063 Call 0x1B6F8F8
	064 Move X0, [X22]
	065 Move X8, [X0+184]
	066 Move W9, [X8+32]
	067 Compare W9, 0
	068 JumpIfEqual {134}
	069 Move W9, [X0+224]
	070 Compare W9, 0
	071 JumpIfNotEqual {75}
	072 Call 0x1B6F8F8
	073 Move X8, [X22]
	074 Move X8, [X8+184]
	075 Move [X8+32], W31
	076 Move X8, 0x2281000
	077 Move X8, [X8+2104]
	078 Move X20, 0x227F000
	079 Move X0, X19
	080 Move X1, [X8]
	081 Move X20, [X20+1144]
	082 Call 0x212A3B0, X0
	083 Move X8, [X20]
	084 Move X20, X0
	085 Move W9, [X8+224]
	086 Compare W9, 0
	087 JumpIfNotEqual {90}
	088 Move X0, X8
	089 Call 0x1B6F8F8
	090 Move X0, X20
	091 Move X1, X31
	092 Move X2, X31
	093 Call Object.op_Equality, X0, X1
	094 Move TEMP, X0
	095 And TEMP, TEMP, 1
	096 Compare TEMP, 1
	097 JumpIfNotEqual {150}
	098 Move X8, 0x2281000
	099 Move X8, [X8+2120]
	100 Move X1, X19
	101 Move X2, X31
	102 Move X0, [X8]
	103 Call String.Concat, X0, X1
	104 Move X8, 0x227F000
	105 Move X8, [X8+1576]
	106 Move X19, X0
	107 Move X8, [X8]
	108 Move W9, [X8+224]
	109 Compare W9, 0
	110 JumpIfNotEqual {113}
	111 Move X0, X8
	112 Call 0x1B6F8F8
	113 Move X8, 0x2281000
	114 Move X9, 0x2281000
	115 Move X8, [X8+2128]
	116 Move X9, [X9+2112]
	117 Move X0, X19
	118 Move X20, [X31+64]
	119 Move X19, [X31+72]
	120 Move X2, [X8]
	121 Move X3, [X9]
	122 Move X22, [X31+48]
	123 Move X21, [X31+56]
	124 Move X30, [X31+32]
	125 Move D9, [X31+16]
	126 Move D8, [X31+24]
	127 Move W4, 90
	128 Move X1, X31
	129 Move X5, X31
	130 Move D11, [X31+80]
	131 Move D10, [X31+88]
	132 Call Log.Error, X0, X1, X2, X3, X4
	133 Return 
	134 Compare X20, 0
	135 JumpIfEqual {272}
	136 Move X0, X20
	137 Move X1, X31
	138 Call NetworkRunner.get_Stage, X0
	139 NotImplemented "Instruction CMP not yet implemented."
	140 Move X20, [X31+64]
	141 Move X19, [X31+72]
	142 Move X22, [X31+48]
	143 Move X21, [X31+56]
	144 Move X30, [X31+32]
	145 Move D9, [X31+16]
	146 Move D8, [X31+24]
	147 Move D11, [X31+80]
	148 Move D10, [X31+88]
	149 Return 
	150 Move X8, 0x2281000
	151 Move X8, [X8+856]
	152 Move X8, [X8]
	153 Move X8, [X8+184]
	154 Move X8, [X8]
	155 Compare X8, 0
	156 JumpIfEqual {271}
	157 Move X0, [X8+80]
	158 Compare X0, 0
	159 JumpIfEqual {271}
	160 Move W8, [X0+32]
	161 Compare W8, 0
	162 JumpIfEqual {231}
	163 Move X8, 0x2281000
	164 Move X8, [X8+2024]
	165 Move X1, [X8]
	166 Call Queue`1<Object>.Dequeue, X0
	167 Move X0, X19
	168 Move X1, X31
	169 Call ReadWriteUtilsForWeaver.GetByteCountUtf8NoHash, X0
	170 Add W8, W0, 27
	171 And W21, W8, 0xFFFFFFFC
	172 NotImplemented "Instruction CMP not yet implemented."
	173 Move X0, [X20+80]
	174 Compare X0, 0
	175 JumpIfEqual {271}
	176 Move X1, X31
	177 Call Simulation.HasAnyActiveConnections, X0
	178 Move TEMP, X0
	179 And TEMP, TEMP, 1
	180 Compare TEMP, 1
	181 JumpIfNotEqual {76}
	182 Move X0, [X20+80]
	183 Move W1, W21
	184 Move X2, X31
	185 Call SimulationMessage.Allocate, X0, X1
	186 Move X21, X0
	187 Move W0, 1
	188 Move X1, X31
	189 Call Assert.Check, X0
	190 Move X0, [X22]
	191 Add X22, X21, 28
	192 Move W8, [X0+224]
	193 Compare W8, 0
	194 JumpIfNotEqual {196}
	195 Call 0x1B6F8F8
	196 Move X8, 0x2281000
	197 Move X8, [X8+2136]
	198 Move X1, X31
	199 Move X0, [X8]
	200 Call NetworkBehaviourUtils.GetRpcStaticIndexOrThrow, X0
	201 Move X1, X31
	202 Call RpcHeader.Create, X0
	203 Move [X21+28], X0
	204 Add X0, X21, 36
	205 Move X1, X19
	206 Move X2, X31
	207 Call ReadWriteUtilsForWeaver.WriteStringUtf8NoHash, X0, X1
	208 Add W8, W0, 11
	209 Move X8, W8
	210 And X8, X8, 0xFFFFFFFF
	211 Add X9, X22, X8
	212 Add W10, W8, 12
	213 Move [X9], S11
	214 Move [X9+8], S10
	215 Move [X9+8], S9
	216 Move [X22], S8
	217 Compare X21, 0
	218 JumpIfEqual {271}
	219 Move W9, [X21+20]
	220 Move W8, W8
	221 ShiftRight W8, 29
	222 And W8, W8, 0xFFFFFFF
	223 Add W8, W8, 128
	224 Move [X21+12], W8
	225 Or W8, W9, 4
	226 Move X0, X20
	227 Move X1, X21
	228 Move X2, X31
	229 Move [X21+20], W8
	230 Call NetworkRunner.SendRpc, X0, X1
	231 Call SFXManager.CreateAudioSource
	232 Move X1, X0
	233 Move X0, X20
	234 Move V2, V9
	235 Move V3, V8
	236 Move X20, [X31+64]
	237 Move X19, [X31+72]
	238 Move X22, [X31+48]
	239 Move X21, [X31+56]
	240 Move X30, [X31+32]
	241 Move D9, [X31+16]
	242 Move D8, [X31+24]
	243 Move W2, 1
	244 Move V0, V11
	245 Move V1, V10
	246 Move D11, [X31+80]
	247 Move D10, [X31+88]
	248 Call SFXManager.PlaySFXInternal, X0, X1, V0, X2, X3
	249 Return 
	250 Move X0, [X22]
	251 Move W8, [X0+224]
	252 Compare W8, 0
	253 JumpIfNotEqual {255}
	254 Call 0x1B6F8F8
	255 Move X8, 0x2281000
	256 Move X8, [X8+2136]
	257 Move W1, W21
	258 Move X20, [X31+64]
	259 Move X19, [X31+72]
	260 Move X22, [X31+48]
	261 Move X21, [X31+56]
	262 Move X0, [X8]
	263 Move X30, [X31+32]
	264 Move D9, [X31+16]
	265 Move D8, [X31+24]
	266 Move X2, X31
	267 Move D11, [X31+80]
	268 Move D10, [X31+88]
	269 Call NetworkBehaviourUtils.NotifyRpcPayloadSizeExceeded, X0, X1
	270 Return 
	271 Call 0x1B6FA1C
	272 Move X0, 0x2281000
	273 Move X0, [X0+1816]
	274 Call 0x1B6F804
	275 Call 0x1B6FA0C
	276 Move X19, X0
	277 Move X0, 0x2281000
	278 Move X0, [X0+1824]
	279 Call 0x1B6F804
	280 Move X1, X0
	281 Move X0, X19
	282 Move X2, X31
	283 Call ArgumentNullException..ctor, X0, X1
	284 Move X0, 0x2281000
	285 Move X0, [X0+2144]
	286 Call 0x1B6F804
	287 Move X1, X0
	288 Move X0, X19
	289 Call 0x1B6F8E8

Method: System.Void PlaySFXInternal(AnimalCompany.RandomSFX sfx, UnityEngine.Vector3 position, System.Single volume, UnityEngine.AudioSource source, System.Boolean isPooled)

Disassembly:
	0x01CCEF90 MOV X19, X0
	0x01CCEF94 BL 0x303CB4C
	0x01CCEF98 B 0x1CCF0D4
	0x01CCEF9C ADRP X8, 0x2281000
	0x01CCEFA0 LDR X8, [X8 + 0x900]
	0x01CCEFA4 LDR X0, [X8]
	0x01CCEFA8 BL 0x1B6EA0C
	0x01CCEFAC MOV X1, X20
	0x01CCEFB0 MOV X2, X31
	0x01CCEFB4 MOV X19, X0
	0x01CCEFB8 BL 0x3045420
	0x01CCEFBC B 0x1CCF0D4
	0x01CCEFC0 MOV X0, X20
	0x01CCEFC4 BL 0x1B6E904
	0x01CCEFC8 ADRP X8, 0x2281000
	0x01CCEFCC LDRB W20, [X0]
	0x01CCEFD0 LDR X8, [X8 + 0x900]
	0x01CCEFD4 LDR X0, [X8]
	0x01CCEFD8 BL 0x1B6EA0C
	0x01CCEFDC MOV W1, W20
	0x01CCEFE0 MOV X2, X31
	0x01CCEFE4 MOV X19, X0
	0x01CCEFE8 BL 0x304550C
	0x01CCEFEC B 0x1CCF0D4
	0x01CCEFF0 MOV X0, X20
	0x01CCEFF4 BL 0x1B6E904
	0x01CCEFF8 ADRP X8, 0x2281000
	0x01CCEFFC LDR V8, [X0]
	0x01CCF000 LDR X8, [X8 + 0x900]
	0x01CCF004 LDR X0, [X8]
	0x01CCF008 BL 0x1B6EA0C
	0x01CCF00C MOV X19, X0
	0x01CCF010 FCVT S0, S8
	0x01CCF014 B 0x1CCF0CC
	0x01CCF018 MOV X0, X20
	0x01CCF01C BL 0x1B6E904
	0x01CCF020 ADRP X8, 0x2280000
	0x01CCF024 LDR W20, [X0]
	0x01CCF028 LDR X8, [X8 + 0x900]
	0x01CCF02C LDR X0, [X8]
	0x01CCF030 BL 0x1B6EA0C
	0x01CCF034 MOV X19, X0
	0x01CCF038 SCVTF D0, W20
	0x01CCF03C B 0x1CCF0CC
	0x01CCF040 MOV X0, X20
	0x01CCF044 BL 0x1B6E904
	0x01CCF048 ADRP X8, 0x2280000
	0x01CCF04C LDP S8, S9, [X0]
	0x01CCF050 LDR V10, [X0 + 0x8]
	0x01CCF054 LDR X8, [X8 + 0x900]
	0x01CCF058 LDR X0, [X8]
	0x01CCF05C BL 0x1B6EA0C
	0x01CCF060 MOV V0.16B, V8.16B
	0x01CCF064 MOV V1.16B, V9.16B
	0x01CCF068 MOV V2.16B, V10.16B
	0x01CCF06C MOV X1, X31
	0x01CCF070 MOV X19, X0
	0x01CCF074 BL 0x3045E84
	0x01CCF078 B 0x1CCF0D4
	0x01CCF07C MOV X0, X20
	0x01CCF080 BL 0x1B6E904
	0x01CCF084 ADRP X8, 0x2280000
	0x01CCF088 LDR V8, [X0]
	0x01CCF08C LDR X8, [X8 + 0x900]
	0x01CCF090 LDR X0, [X8]
	0x01CCF094 BL 0x1B6EA0C
	0x01CCF098 MOV X19, X0
	0x01CCF09C MOV V0.16B, V8.16B
	0x01CCF0A0 B 0x1CCF0CC
	0x01CCF0A4 MOV X0, X20
	0x01CCF0A8 BL 0x1B6E904
	0x01CCF0AC ADRP X8, 0x2280000
	0x01CCF0B0 LDR X8, [X8 + 0x900]
	0x01CCF0B4 LDR V8, [X0]
	0x01CCF0B8 LDR X8, [X8]
	0x01CCF0BC MOV X0, X8
	0x01CCF0C0 BL 0x1B6EA0C
	0x01CCF0C4 MOV X19, X0
	0x01CCF0C8 SCVTF D0, D8
	0x01CCF0CC MOV X1, X31
	0x01CCF0D0 BL 0x30455FC
	0x01CCF0D4 MOV X0, X19
	0x01CCF0D8 LDP X20, X19, [X31 + 0x70]
	0x01CCF0DC LDP X22, X21, [X31 + 0x60]
	0x01CCF0E0 LDP X24, X23, [X31 + 0x50]
	0x01CCF0E4 LDR X30, [X31 + 0x48]
	0x01CCF0E8 LDP D9, D8, [X31 + 0x38]
	0x01CCF0EC LDR V10, [X31 + 0x30]
	0x01CCF0F0 ADD X31, X31, 0x80
	0x01CCF0F4 RET
	0x01CCF0F8 ADRP X8, 0x2280000
	0x01CCF0FC LDR X8, [X8 + 0x900]
	0x01CCF100 LDR X0, [X8]
	0x01CCF104 BL 0x1B6EA0C
	0x01CCF108 MOV X1, X31
	0x01CCF10C MOV X19, X0
	0x01CCF110 BL 0x303CB4C
	0x01CCF114 ADRP X8, 0x2280000
	0x01CCF118 LDR X8, [X8 + 0x8A8]
	0x01CCF11C MOV X0, X20
	0x01CCF120 LDR X1, [X8]
	0x01CCF124 ADD X8, X31, 0x0
	0x01CCF128 BL 0x28FA6CC
	0x01CCF12C ADRP X22, 0x2280000
	0x01CCF130 ADRP X23, 0x227E000
	0x01CCF134 LDR X22, [X22 + 0x8C0]
	0x01CCF138 LDR X23, [X23 + 0x9A0]
	0x01CCF13C LDR X1, [X22]
	0x01CCF140 ADD X0, X31, 0x0
	0x01CCF144 BL 0x2A5A3C4
	0x01CCF148 TBZ X0, 0x0, 0x1CCF184
	0x01CCF14C LDR X0, [X23]
	0x01CCF150 LDP X20, X21, [X31 + 0x10]
	0x01CCF154 LDR W8, [X0 + 0xE0]
	0x01CCF158 CBNZ W8, 0x1CCF160
	0x01CCF15C BL 0x1B6E8F8
	0x01CCF160 MOV X0, X21
	0x01CCF164 BL 0x1CCED44
	0x01CCF168 CBZ X19, 0x1CCF234
	0x01CCF16C MOV X2, X0
	0x01CCF170 MOV X0, X19
	0x01CCF174 MOV X1, X20
	0x01CCF178 MOV X3, X31
	0x01CCF17C BL 0x303CC78
	0x01CCF180 B 0x1CCF13C
	0x01CCF184 ADRP X8, 0x2280000
	0x01CCF188 LDR X8, [X8 + 0x8B8]
	0x01CCF18C ADD X0, X31, 0x0
	0x01CCF190 LDR X1, [X8]
	0x01CCF194 BL 0x2A5A4D8
	0x01CCF198 B 0x1CCF0D4
	0x01CCF19C ADRP X8, 0x2280000
	0x01CCF1A0 LDR X8, [X8 + 0x900]
	0x01CCF1A4 LDR X0, [X8]
	0x01CCF1A8 BL 0x1B6EA0C
	0x01CCF1AC MOV X1, X31
	0x01CCF1B0 MOV X19, X0
	0x01CCF1B4 BL 0x303CB4C
	0x01CCF1B8 LDR W8, [X20 + 0x18]
	0x01CCF1BC CMP W8, 0x1
	0x01CCF1C0 B.LT 0x1CCF0D4
	0x01CCF1C4 ADRP X23, 0x2280000
	0x01CCF1C8 ADRP X24, 0x227E000
	0x01CCF1CC LDR X23, [X23 + 0x8F0]
	0x01CCF1D0 LDR X24, [X24 + 0x9A0]
	0x01CCF1D4 MOV W21, W31
	0x01CCF1D8 LDR X2, [X23]
	0x01CCF1DC MOV X0, X20
	0x01CCF1E0 MOV W1, W21
	0x01CCF1E4 BL 0x2E46254
	0x01CCF1E8 LDR X8, [X24]
	0x01CCF1EC MOV X22, X0
	0x01CCF1F0 LDR W9, [X8 + 0xE0]
	0x01CCF1F4 CBNZ W9, 0x1CCF200
	0x01CCF1F8 MOV X0, X8
	0x01CCF1FC BL 0x1B6E8F8
	0x01CCF200 MOV X0, X22
	0x01CCF204 BL 0x1CCED44
	0x01CCF208 CBZ X19, 0x1CCF238
	0x01CCF20C MOV X2, X0
	0x01CCF210 MOV X0, X19
	0x01CCF214 MOV W1, W21
	0x01CCF218 MOV X3, X31
	0x01CCF21C BL 0x3043110
	0x01CCF220 LDR W8, [X20 + 0x18]
	0x01CCF224 ADD W21, W21, 0x1
	0x01CCF228 CMP W21, W8
	0x01CCF22C B.LT 0x1CCF1D8
	0x01CCF230 B 0x1CCF0D4
	0x01CCF234 BL 0x1B6EA1C
	0x01CCF238 BL 0x1B6EA1C
	0x01CCF23C B 0x1CCF248
	0x01CCF240 B 0x1CCF248
	0x01CCF244 B 0x1CCF248
	0x01CCF248 MOV X20, X0
	0x01CCF24C CMP W1, 0x1
	0x01CCF250 B.NE 0x1CCF284
	0x01CCF254 MOV X0, X20
	0x01CCF258 BL 0x3D19840

ISIL:
	001 Move [X31-80], D11
	002 Move [X31-72], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X22, 0x2556000
	012 Move W8, [X22+1456]
	013 Move W20, W2
	014 Move X19, X1
	015 Move V11, V3
	016 Move V8, V2
	017 Move V9, V1
	018 Move V10, V0
	019 Move X21, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {41}
	024 Move X0, 0x2282000
	025 Move X0, [X0+2008]
	026 Call 0x1B6F7F0
	027 Move X0, 0x2282000
	028 Move X0, [X0+2016]
	029 Call 0x1B6F7F0
	030 Move X0, 0x2280000
	031 Move X0, [X0+1144]
	032 Call 0x1B6F7F0
	033 Move X0, 0x2282000
	034 Move X0, [X0+2056]
	035 Call 0x1B6F7F0
	036 Move X0, 0x2282000
	037 Move X0, [X0+856]
	038 Call 0x1B6F7F0
	039 Move W8, 1
	040 Move [X22+1456], W8
	041 Compare X21, 0
	042 JumpIfEqual {230}
	043 Move X22, [X21+24]
	044 Compare X22, 0
	045 JumpIfEqual {230}
	046 Move W1, [X22+24]
	047 Compare W1, 0
	048 JumpIfEqual {114}
	049 Move X23, 0x2281000
	050 Move X23, [X23+2016]
	051 Move W0, W31
	052 Move X2, X31
	053 Call Random.Range, X0, X1
	054 Move X2, [X23]
	055 Move W1, W0
	056 Move X0, X22
	057 Call List`1<Object>.get_Item, X0, X1
	058 Compare X19, 0
	059 JumpIfEqual {230}
	060 Move X22, 0x227F000
	061 Move X22, [X22+1144]
	062 Move X1, X0
	063 Move X0, X19
	064 Move X2, X31
	065 Call AudioSource.set_clip, X0, X1
	066 Move X0, X19
	067 Move X1, X31
	068 Call AudioSource.get_clip, X0
	069 Move X8, [X22]
	070 Move X22, X0
	071 Move W9, [X8+224]
	072 Compare W9, 0
	073 JumpIfNotEqual {76}
	074 Move X0, X8
	075 Call 0x1B6F8F8
	076 Move X0, X22
	077 Move X1, X31
	078 Move X2, X31
	079 Call Object.op_Equality, X0, X1
	080 Move TEMP, X0
	081 And TEMP, TEMP, 1
	082 Compare TEMP, 1
	083 JumpIfNotEqual {125}
	084 Move TEMP, X20
	085 And TEMP, TEMP, 1
	086 Compare TEMP, 1
	087 JumpIfNotEqual {114}
	088 Move X8, 0x2281000
	089 Move X8, [X8+856]
	090 Move X8, [X8]
	091 Move X8, [X8+184]
	092 Move X8, [X8]
	093 Compare X8, 0
	094 JumpIfEqual {230}
	095 Move X0, [X8+80]
	096 Compare X0, 0
	097 JumpIfEqual {230}
	098 Move X8, 0x2281000
	099 Move X8, [X8+2056]
	100 Move X1, X19
	101 Move X20, [X31+64]
	102 Move X19, [X31+72]
	103 Move X22, [X31+48]
	104 Move X21, [X31+56]
	105 Move X2, [X8]
	106 Move X30, [X31+32]
	107 Move X23, [X31+40]
	108 Move D9, [X31+16]
	109 Move D8, [X31+24]
	110 Move D11, [X31+80]
	111 Move D10, [X31+88]
	112 Call Queue`1<Object>.Enqueue, X0, X1
	113 Return 
	114 Move X20, [X31+64]
	115 Move X19, [X31+72]
	116 Move X22, [X31+48]
	117 Move X21, [X31+56]
	118 Move X30, [X31+32]
	119 Move X23, [X31+40]
	120 Move D9, [X31+16]
	121 Move D8, [X31+24]
	122 Move D11, [X31+80]
	123 Move D10, [X31+88]
	124 Return 
	125 Move V0, [X21+32]
	126 Move X0, X19
	127 Move X1, X31
	128 Multiply S0, S0, S11
	129 Call AudioSource.set_volume, X0, V0
	130 Move S0, [X21+36]
	131 Move S1, [X21+40]
	132 Move X0, X31
	133 Call Random.Range, V0, V1
	134 Move X0, X19
	135 Move X1, X31
	136 Call AudioSource.set_pitch, X0, V0
	137 Move S0, 1
	138 Move X0, X19
	139 Move X1, X31
	140 Call AudioSource.set_spatialBlend, X0, V0
	141 Move S0, 1
	142 Move X0, X19
	143 Move X1, X31
	144 Call AudioSource.set_reverbZoneMix, X0, V0
	145 Move S0, 1
	146 Move X0, X19
	147 Move X1, X31
	148 Call AudioSource.set_minDistance, X0, V0
	149 Move V0, [X21+48]
	150 Move X0, X19
	151 Move X1, X31
	152 Call AudioSource.set_maxDistance, X0, V0
	153 Move X0, X19
	154 Move X1, X31
	155 Call Component.get_transform, X0
	156 Compare X0, 0
	157 JumpIfEqual {230}
	158 Move V0, V10
	159 Move V1, V9
	160 Move V2, V8
	161 Move X1, X31
	162 Call Transform.set_position, X0, X1
	163 Move W1, [X21+44]
	164 Move X0, X19
	165 Move X2, X31
	166 Call AudioSource.set_rolloffMode, X0, X1
	167 Move X0, X19
	168 Move TEMP, X20
	169 And TEMP, TEMP, 1
	170 Compare TEMP, 1
	171 JumpIfNotEqual {213}
	172 Move W1, W31
	173 Move X2, X31
	174 Call AudioSource.set_mute, X0, X1
	175 Move X0, X19
	176 Move W1, W31
	177 Move X2, X31
	178 Call AudioSource.set_loop, X0, X1
	179 Move X0, X19
	180 Move X1, X31
	181 Call AudioSource.Play, X0
	182 Move X8, 0x2281000
	183 Move X8, [X8+856]
	184 Move X0, X19
	185 Move X1, X31
	186 Move X8, [X8]
	187 Move X8, [X8+184]
	188 Move X20, [X8]
	189 Call AudioSource.get_clip, X0
	190 Compare X0, 0
	191 JumpIfEqual {230}
	192 Move X1, X31
	193 Call AudioClip.get_length, X0
	194 Move X0, X19
	195 Call SFXManager.ReturnAudioSource, X0, V0
	196 Compare X20, 0
	197 JumpIfEqual {230}
	198 Move X1, X0
	199 Move X0, X20
	200 Move X20, [X31+64]
	201 Move X19, [X31+72]
	202 Move X22, [X31+48]
	203 Move X21, [X31+56]
	204 Move X30, [X31+32]
	205 Move X23, [X31+40]
	206 Move D9, [X31+16]
	207 Move D8, [X31+24]
	208 Move X2, X31
	209 Move D11, [X31+80]
	210 Move D10, [X31+88]
	211 Call MonoBehaviour.StartCoroutine, X0, X1
	212 Return 
	213 Move X1, X31
	214 Call AudioSource.get_clip, X0
	215 Move X1, X0
	216 Move X0, X19
	217 Move X20, [X31+64]
	218 Move X19, [X31+72]
	219 Move X22, [X31+48]
	220 Move X21, [X31+56]
	221 Move X30, [X31+32]
	222 Move X23, [X31+40]
	223 Move D9, [X31+16]
	224 Move D8, [X31+24]
	225 Move X2, X31
	226 Move D11, [X31+80]
	227 Move D10, [X31+88]
	228 Call AudioSource.PlayOneShot, X0, X1
	229 Return 
	230 Call 0x1B6FA1C

Method: System.Collections.IEnumerator ReturnAudioSource(UnityEngine.AudioSource a, System.Single delay)

Disassembly:
	0x01CCF630 RET
	0x01CCF634 BL 0x1B6EA24
	0x01CCF638 BL 0x1B6EA1C
	0x01CCF63C STP X30, X23, [X31 - 0x30]!
	0x01CCF640 STP X22, X21, [X31 + 0x10]
	0x01CCF644 STP X20, X19, [X31 + 0x20]
	0x01CCF648 ADRP X23, 0x2554000
	0x01CCF64C ADRP X22, 0x227E000
	0x01CCF650 LDRB W8, [X23 + 0x5BC]
	0x01CCF654 LDR X22, [X22 + 0x9A0]
	0x01CCF658 MOV X21, X2
	0x01CCF65C MOV X19, X1
	0x01CCF660 MOV X20, X0
	0x01CCF664 TBNZ X8, 0x0, 0x1CCF67C
	0x01CCF668 ADRP X0, 0x227E000
	0x01CCF66C LDR X0, [X0 + 0x9A0]
	0x01CCF670 BL 0x1B6E7F0
	0x01CCF674 MOVZ W8, 0x1
	0x01CCF678 STRB W8, [X23 + 0x5BC]
	0x01CCF67C LDR X0, [X22]
	0x01CCF680 LDR W8, [X0 + 0xE0]
	0x01CCF684 CBNZ W8, 0x1CCF690
	0x01CCF688 BL 0x1B6E8F8
	0x01CCF68C LDR X0, [X22]
	0x01CCF690 LDR X8, [X0 + 0xB8]
	0x01CCF694 LDRB W8, [X8]
	0x01CCF698 CBZ W8, 0x1CCF6D0
	0x01CCF69C LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x2555000
	007 Move X21, 0x2281000
	008 Move W8, [X20+1457]
	009 Move X21, [X21+2152]
	010 Move V8, V0
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x2281000
	017 Move X0, [X0+2152]
	018 Call 0x1B6F7F0
	019 Move W8, 1
	020 Move [X20+1457], W8
	021 Move X0, [X21]
	022 Call 0x1B6FA0C
	023 Move X1, X31
	024 Move X20, X0
	025 Call Object..ctor, X0
	026 Move [X20+16], W31
	027 Move [X20+40], X19
	028 Move [X20+32], S8
	029 Move X0, X20
	030 Move X20, [X31+32]
	031 Move X19, [X31+40]
	032 Move X30, [X31+16]
	033 Move X21, [X31+24]
	034 Move V8, [X31+48]
	035 Return X0

Method: System.Void .ctor()

Disassembly:
	0x01CCF6C8 LDP X30, X23, [X31], #0x30
	0x01CCF6CC B 0x3040B78
	0x01CCF6D0 LDP X20, X19, [X31 + 0x20]
	0x01CCF6D4 LDP X22, X21, [X31 + 0x10]
	0x01CCF6D8 LDP X30, X23, [X31], #0x30
	0x01CCF6DC RET
	0x01CCF6E0 SUB X31, X31, 0x60
	0x01CCF6E4 STP D15, D14, [X31 + 0x10]
	0x01CCF6E8 STP D13, D12, [X31 + 0x20]
	0x01CCF6EC STP D11, D10, [X31 + 0x30]
	0x01CCF6F0 STP D9, D8, [X31 + 0x40]
	0x01CCF6F4 STP X30, X19, [X31 + 0x50]
	0x01CCF6F8 ADRP X19, 0x2554000
	0x01CCF6FC LDRB W8, [X19 + 0x457]
	0x01CCF700 MOV V10.16B, V5.16B
	0x01CCF704 MOV V9.16B, V4.16B
	0x01CCF708 MOV V8.16B, V3.16B
	0x01CCF70C MOV V12.16B, V2.16B
	0x01CCF710 MOV V11.16B, V1.16B
	0x01CCF714 MOV V13.16B, V0.16B
	0x01CCF718 CBNZ W8, 0x1CCF730
	0x01CCF71C ADRP X0, 0x227E000
	0x01CCF720 LDR X0, [X0 + 0x488]
	0x01CCF724 BL 0x1B6E7F0
	0x01CCF728 MOVZ W8, 0x1
	0x01CCF72C STRB W8, [X19 + 0x457]
	0x01CCF730 ADRP X19, 0x227E000
	0x01CCF734 LDR X19, [X19 + 0x488]
	0x01CCF738 FMUL S0, S13, S13
	0x01CCF73C FMUL S1, S11, S11
	0x01CCF740 FADD S0, S0, S1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2555000
	007 Move X22, 0x2281000
	008 Move X20, 0x2281000
	009 Move W8, [X21+1458]
	010 Move X22, [X22+2160]
	011 Move X20, [X20+2168]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x2281000
	018 Move X0, [X0+2168]
	019 Call 0x1B6F7F0
	020 Move X0, 0x2281000
	021 Move X0, [X0+2160]
	022 Call 0x1B6F7F0
	023 Move W8, 1
	024 Move [X21+1458], W8
	025 Move X0, [X22]
	026 Call 0x1B6FA0C
	027 Move X1, [X20]
	028 Move X20, X0
	029 Call Queue`1<Object>..ctor, X0
	030 Move [X19+80], X20
	031 Move X0, X19
	032 Move X20, [X31+32]
	033 Move X19, [X31+40]
	034 Move X22, [X31+16]
	035 Move X21, [X31+24]
	036 Move X1, X31
	037 Move X30, [X31+48]
	038 Call SimulationBehaviour..ctor, X0
	039 Return 

Method: System.Void RPC_PlaySFX@Invoker(Fusion.NetworkRunner runner, Fusion.SimulationMessage* message)

Disassembly:
	0x01CCF744 LDR X0, [X19]
	0x01CCF748 FMUL S1, S12, S12
	0x01CCF74C FADD S15, S1, S0
	0x01CCF750 FMUL S0, S8, S8
	0x01CCF754 LDR W8, [X0 + 0xE0]
	0x01CCF758 FMUL S1, S9, S9
	0x01CCF75C FADD S0, S0, S1
	0x01CCF760 FMUL S1, S10, S10
	0x01CCF764 FADD S14, S1, S0
	0x01CCF768 CBNZ W8, 0x1CCF770
	0x01CCF76C BL 0x1B6E8F8
	0x01CCF770 ADRP X8, 0xFFFFFFFFFEDDA000
	0x01CCF774 LDR V0, [X8 + 0x9E4]
	0x01CCF778 LDP S16, S7, [X31 + 0x64]
	0x01CCF77C LDR V17, [X31 + 0x60]
	0x01CCF780 FMUL S1, S15, S14
	0x01CCF784 FSQRT S1, S1
	0x01CCF788 FCMP S1, S0
	0x01CCF78C FMOV S0, W31
	0x01CCF790 B.MI 0x1CCF7F8
	0x01CCF794 LDR X0, [X19]
	0x01CCF798 FMUL S0, S13, S8
	0x01CCF79C FMUL S2, S11, S9
	0x01CCF7A0 FMUL S3, S12, S10
	0x01CCF7A4 FADD S0, S0, S2
	0x01CCF7A8 FADD S0, S3, S0
	0x01CCF7AC LDR W8, [X0 + 0xE0]
	0x01CCF7B0 FDIV S0, S0, S1
	0x01CCF7B4 FMOV S1, 1
	0x01CCF7B8 FMOV S2, -1
	0x01CCF7BC FMIN S1, S0, S1
	0x01CCF7C0 FCMP S0, S2
	0x01CCF7C4 MOV V15.16B, V7.16B
	0x01CCF7C8 FCSEL S14, S1, S2, PL
	0x01CCF7CC STP S17, S16, [X31 + 0x8]
	0x01CCF7D0 CBNZ W8, 0x1CCF7D8
	0x01CCF7D4 BL 0x1B6E8F8
	0x01CCF7D8 FCVT S0, S14
	0x01CCF7DC BL 0x3D19890
	0x01CCF7E0 ADRP X8, 0xFFFFFFFFFEDDA000
	0x01CCF7E4 LDR V1, [X8 + 0xE1C]
	0x01CCF7E8 LDP S17, S16, [X31 + 0x8]
	0x00000000 INVALID
	0x01CCF7F0 MOV V7.16B, V15.16B
	0x01CCF7F4 FMUL S0, S0, S1
	0x01CCF7F8 FMUL S1, S11, S10
	0x01CCF7FC FMUL S2, S12, S9
	0x01CCF800 FMUL S3, S12, S8
	0x01CCF804 FMUL S4, S13, S10
	0x01CCF808 FMUL S5, S13, S9
	0x01CCF80C FMUL S6, S11, S8
	0x01CCF810 FSUB S1, S1, S2
	0x01CCF814 FSUB S2, S3, S4
	0x01CCF818 FSUB S3, S5, S6
	0x01CCF81C FMUL S1, S17, S1
	0x01CCF820 FMUL S2, S16, S2
	0x01CCF824 FMUL S3, S7, S3

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], D11
	003 Move [X31+24], D10
	004 Move [X31+32], D9
	005 Move [X31+40], D8
	006 Move [X31+48], X30
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X22, 0x2555000
	013 Move X21, 0x2280000
	014 Move W8, [X22+1459]
	015 Move X21, [X21+448]
	016 Move X20, X1
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {27}
	022 Move X0, 0x2280000
	023 Move X0, [X0+448]
	024 Call 0x1B6F7F0
	025 Move W8, 1
	026 Move [X22+1459], W8
	027 Move W0, 1
	028 Move X1, X31
	029 Move [X31+8], X31
	030 Move W22, 1
	031 Call Assert.Check, X0
	032 Add X0, X20, 36
	033 Add X1, X31, 8
	034 Move X2, X31
	035 Add X23, X20, 28
	036 Call ReadWriteUtilsForWeaver.ReadStringUtf8NoHash, X0, X1
	037 Add W8, W0, 11
	038 Move X0, [X21]
	039 Move X8, W8
	040 And X8, X8, 0xFFFFFFFF
	041 Add X9, X23, X8
	042 Add W8, W8, 12
	043 Move S11, [X9]
	044 Move S9, [X9+4]
	045 Move V8, [X9+8]
	046 Move W9, [X0+224]
	047 Move V10, [X23]
	048 Compare W9, 0
	049 JumpIfNotEqual {52}
	050 Call 0x1B6F8F8
	051 Move X0, [X21]
	052 Move X8, [X0+184]
	053 Move X0, X19
	054 Move V0, V11
	055 Move V1, V9
	056 Move [X8+32], W22
	057 Move X1, [X31+8]
	058 Move V2, V8
	059 Move V3, V10
	060 Call SFXManager.RPC_PlaySFX, X0, X1, X2, V0
	061 Move X20, [X31+80]
	062 Move X19, [X31+88]
	063 Move X22, [X31+64]
	064 Move X21, [X31+72]
	065 Move X30, [X31+48]
	066 Move X23, [X31+56]
	067 Move D9, [X31+32]
	068 Move D8, [X31+40]
	069 Move D11, [X31+16]
	070 Move D10, [X31+24]
	071 Add X31, X31, 96
	072 Return 

