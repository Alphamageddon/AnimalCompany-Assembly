Type: AnimalCompany.ReverbTest

Method: System.Void Start()

Disassembly:
	0x01CF2DCC BL 0x28F9A14
	0x01CF2DD0 LDR X0, [X20]
	0x01CF2DD4 LDR W8, [X0 + 0xE0]
	0x01CF2DD8 CBNZ W8, 0x1CF2DE4
	0x01CF2DDC BL 0x1B6E8F8
	0x01CF2DE0 LDR X0, [X20]
	0x01CF2DE4 LDR X8, [X0 + 0xB8]
	0x01CF2DE8 LDP X22, X21, [X31 + 0x10]
	0x01CF2DEC STR X19, [X8]
	0x01CF2DF0 LDP X20, X19, [X31 + 0x20]
	0x01CF2DF4 LDR X30, [X31], #0x30
	0x01CF2DF8 RET
	0x01CF2DFC STR X30, [X31 - 0x30]!
	0x01CF2E00 STP X22, X21, [X31 + 0x10]
	0x01CF2E04 STP X20, X19, [X31 + 0x20]
	0x01CF2E08 ADRP X21, 0x2531000
	0x01CF2E0C ADRP X22, 0x225E000
	0x01CF2E10 LDRB W8, [X21 + 0x6D0]
	0x01CF2E14 LDR X22, [X22 + 0x670]
	0x01CF2E18 MOV X19, X1
	0x01CF2E1C MOV X20, X0
	0x01CF2E20 TBNZ X8, 0x0, 0x1CF2E68
	0x01CF2E24 ADRP X0, 0x225E000
	0x01CF2E28 LDR X0, [X0 + 0x678]
	0x01CF2E2C BL 0x1B6E7F0
	0x01CF2E30 ADRP X0, 0x225E000
	0x01CF2E34 LDR X0, [X0 + 0x680]
	0x01CF2E38 BL 0x1B6E7F0
	0x01CF2E3C ADRP X0, 0x225B000
	0x01CF2E40 LDR X0, [X0 + 0x478]
	0x01CF2E44 BL 0x1B6E7F0
	0x01CF2E48 ADRP X0, 0x225E000
	0x01CF2E4C LDR X0, [X0 + 0x688]
	0x01CF2E50 BL 0x1B6E7F0
	0x01CF2E54 ADRP X0, 0x225E000
	0x01CF2E58 LDR X0, [X0 + 0x670]
	0x01CF2E5C BL 0x1B6E7F0
	0x01CF2E60 MOVZ W8, 0x1
	0x01CF2E64 STRB W8, [X21 + 0x6D0]
	0x01CF2E68 LDR X0, [X22]
	0x01CF2E6C LDR W8, [X0 + 0xE0]
	0x01CF2E70 CBNZ W8, 0x1CF2E7C
	0x01CF2E74 BL 0x1B6E8F8
	0x01CF2E78 LDR X0, [X22]
	0x01CF2E7C LDR X8, [X0 + 0xB8]
	0x01CF2E80 LDR X0, [X8]
	0x01CF2E84 CBZ X0, 0x1CF2F40
	0x01CF2E88 ADRP X8, 0x225E000
	0x01CF2E8C LDR X8, [X8 + 0x678]
	0x01CF2E90 MOV X1, X20
	0x01CF2E94 MOV X2, X19
	0x01CF2E98 LDR X3, [X8]
	0x01CF2E9C BL 0x28FBD3C
	0x01CF2EA0 TBZ X0, 0x0, 0x1CF2EB4
	0x01CF2EA4 ADRP X8, 0x225B000
	0x01CF2EA8 LDR X8, [X8 + 0x478]
	0x01CF2EAC LDR X21, [X19]
	0x01CF2EB0 B 0x1CF2F14
	0x01CF2EB4 ADRP X8, 0x225E000
	0x01CF2EB8 LDR X8, [X8 + 0x688]
	0x01CF2EBC MOV X0, X20

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x2532000
	009 Move X24, 0x225F000
	010 Move X20, 0x225F000
	011 Move X22, 0x225F000
	012 Move X21, 0x225F000
	013 Move W8, [X23+1730]
	014 Move X24, [X24+1512]
	015 Move X20, [X20+1520]
	016 Move X22, [X22+1528]
	017 Move X21, [X21+1536]
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {37}
	023 Move X0, 0x225F000
	024 Move X0, [X0+1528]
	025 Call 0x1B6F7F0
	026 Move X0, 0x225F000
	027 Move X0, [X0+1512]
	028 Call 0x1B6F7F0
	029 Move X0, 0x225F000
	030 Move X0, [X0+1536]
	031 Call 0x1B6F7F0
	032 Move X0, 0x225F000
	033 Move X0, [X0+1520]
	034 Call 0x1B6F7F0
	035 Move W8, 1
	036 Move [X23+1730], W8
	037 Move X0, [X24]
	038 Call 0x1B6FA0C
	039 Move X3, [X20]
	040 Move X1, X31
	041 Move W2, W31
	042 Move X4, X31
	043 Move X5, X31
	044 Move X6, X31
	045 Move X7, X31
	046 Move X20, X0
	047 Call InputAction..ctor, X0, X1, X2, X3, X4, X5, X6
	048 Move X0, [X22]
	049 Call 0x1B6FA0C
	050 Move X2, [X21]
	051 Move X1, X19
	052 Move X3, X31
	053 Move X21, X0
	054 Call Action`1<CallbackContext>..ctor, X0, X1, X2
	055 Compare X20, 0
	056 JumpIfEqual {72}
	057 Move X0, X20
	058 Move X1, X21
	059 Move X2, X31
	060 Call InputAction.add_performed, X0, X1
	061 Move X0, X20
	062 Move X20, [X31+48]
	063 Move X19, [X31+56]
	064 Move X22, [X31+32]
	065 Move X21, [X31+40]
	066 Move X24, [X31+16]
	067 Move X23, [X31+24]
	068 Move X1, X31
	069 Move X30, [X31+64]
	070 Call InputAction.Enable, X0
	071 Return 
	072 Call 0x1B6FA1C

Method: System.Void .ctor()

Disassembly:
	0x01CF2EC0 LDR X1, [X8]
	0x01CF2EC4 BL 0x21293B0

ISIL:
	001 Move X1, X31
	002 Call MonoBehaviour..ctor, X0
	003 Return 

Method: System.Void <Start>b__1_0(UnityEngine.InputSystem.InputAction/CallbackContext ctx)

Disassembly:
	0x01CF2EC8 LDR X8, [X22]
	0x01CF2ECC MOV X21, X0
	0x01CF2ED0 LDR W9, [X8 + 0xE0]
	0x01CF2ED4 CBNZ W9, 0x1CF2EE4
	0x01CF2ED8 MOV X0, X8
	0x01CF2EDC BL 0x1B6E8F8
	0x01CF2EE0 LDR X8, [X22]
	0x01CF2EE4 LDR X8, [X8 + 0xB8]
	0x01CF2EE8 LDR X0, [X8]
	0x01CF2EEC CBZ X0, 0x1CF2F40
	0x01CF2EF0 ADRP X8, 0x225E000
	0x01CF2EF4 LDR X8, [X8 + 0x680]
	0x01CF2EF8 MOV X1, X20

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, [X0+32]
	004 Move X1, X31
	005 Call Component.get_transform, X0
	006 Compare X0, 0
	007 JumpIfEqual {17}
	008 Move X1, X31
	009 Call Transform.get_position, X0
	010 Move S3, 1
	011 Move X0, X19
	012 Move X1, X31
	013 Move X30, [X31+16]
	014 Move X19, [X31+24]
	015 Call SFXManager.PlaySFX, X0, X1, V0
	016 Return 
	017 Call 0x1B6FA1C

