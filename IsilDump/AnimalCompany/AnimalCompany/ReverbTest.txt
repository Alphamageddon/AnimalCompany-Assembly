Type: AnimalCompany.ReverbTest

Method: System.Void Start()

Disassembly:
	0x01E0320C STRB W8, [X20 + 0x783]
	0x01E03210 ADRP X8, 0x22F0000
	0x01E03214 LDR X8, [X8 + 0x5A0]
	0x01E03218 ADRP X9, 0x22F6000
	0x01E0321C MOV X0, X31
	0x01E03220 LDR X8, [X8]
	0x01E03224 LDR X9, [X9 + 0x7B8]
	0x01E03228 LDR X8, [X8 + 0xB8]
	0x01E0322C LDR X9, [X9]
	0x01E03230 LDP S8, S9, [X8]
	0x01E03234 LDR X9, [X9 + 0xB8]
	0x01E03238 LDR V10, [X8 + 0x8]
	0x01E0323C LDP S0, S1, [X9]
	0x01E03240 LDP S2, S3, [X9 + 0x8]
	0x01E03244 BL 0x38BD214
	0x01E03248 MOV V4.16B, V0.16B
	0x01E0324C MOV V5.16B, V1.16B
	0x01E03250 MOV V6.16B, V2.16B
	0x01E03254 MOV V7.16B, V3.16B
	0x01E03258 MOV X0, X19
	0x01E0325C MOV V0.16B, V8.16B
	0x01E03260 MOV V1.16B, V9.16B
	0x01E03264 MOV V2.16B, V10.16B
	0x01E03268 MOV V3.16B, V4.16B
	0x01E0326C MOV V4.16B, V5.16B
	0x01E03270 MOV V5.16B, V6.16B
	0x01E03274 MOV V6.16B, V7.16B
	0x01E03278 MOV X1, X31
	0x01E0327C BL 0x3C0D1D8
	0x01E03280 LDP X20, X19, [X31 + 0xB0]
	0x01E03284 LDP X30, X21, [X31 + 0xA0]
	0x01E03288 LDP D9, D8, [X31 + 0x90]
	0x01E0328C LDR V10, [X31 + 0x80]
	0x01E03290 ADD X31, X31, 0xC0
	0x01E03294 RET
	0x01E03298 BL 0x1C16F20
	0x01E0329C MOV X1, X31
	0x01E032A0 B 0x3C36C30
	0x01E032A4 STR X30, [X31 - 0x20]!
	0x01E032A8 STP X20, X19, [X31 + 0x10]
	0x01E032AC ADRP X19, 0x25D5000
	0x01E032B0 ADRP X20, 0x22F6000
	0x01E032B4 LDRB W8, [X19 + 0xD7F]
	0x01E032B8 LDR X20, [X20 + 0x7C0]
	0x01E032BC TBNZ X8, 0x0, 0x1E032D4
	0x01E032C0 ADRP X0, 0x22F6000
	0x01E032C4 LDR X0, [X0 + 0x7C0]
	0x01E032C8 BL 0x1C16CF4
	0x01E032CC MOVZ W8, 0x1
	0x01E032D0 STRB W8, [X19 + 0xD7F]
	0x01E032D4 LDR X0, [X20]
	0x01E032D8 LDR W8, [X0 + 0xE0]
	0x01E032DC CBNZ W8, 0x1E032E4
	0x01E032E0 BL 0x1C16DFC
	0x01E032E4 LDP X20, X19, [X31 + 0x10]
	0x01E032E8 LDR X30, [X31], #0x20
	0x01E032EC B 0x1E032F0
	0x01E032F0 SUB X31, X31, 0x50
	0x01E032F4 STR X30, [X31 + 0x20]
	0x01E032F8 STP X22, X21, [X31 + 0x30]
	0x01E032FC STP X20, X19, [X31 + 0x40]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x25D6000
	009 Move X24, 0x22F5000
	010 Move X20, 0x22F7000
	011 Move X22, 0x22F5000
	012 Move X21, 0x22F7000
	013 Move W8, [X23+3441]
	014 Move X24, [X24+992]
	015 Move X20, [X20+1904]
	016 Move X22, [X22+984]
	017 Move X21, [X21+1912]
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {37}
	023 Move X0, 0x22F5000
	024 Move X0, [X0+984]
	025 Call 0x1C17CF4
	026 Move X0, 0x22F5000
	027 Move X0, [X0+992]
	028 Call 0x1C17CF4
	029 Move X0, 0x22F7000
	030 Move X0, [X0+1912]
	031 Call 0x1C17CF4
	032 Move X0, 0x22F7000
	033 Move X0, [X0+1904]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X23+3441], W8
	037 Move X0, [X24]
	038 Call 0x1C17F10
	039 Move X3, [X20]
	040 Move X1, X31
	041 Move W2, W31
	042 Move X4, X31
	043 Move X5, X31
	044 Move X6, X31
	045 Move X7, X31
	046 Move X20, X0
	047 Call InputAction..ctor, X0, X1, X2, X3, X4, X5, X6
	048 Move X0, [X22]
	049 Call 0x1C17F10
	050 Move X2, [X21]
	051 Move X1, X19
	052 Move X3, X31
	053 Move X21, X0
	054 Call Action`1<CallbackContext>..ctor, X0, X1, X2
	055 Compare X20, 0
	056 JumpIfEqual {72}
	057 Move X0, X20
	058 Move X1, X21
	059 Move X2, X31
	060 Call InputAction.add_performed, X0, X1
	061 Move X0, X20
	062 Move X20, [X31+48]
	063 Move X19, [X31+56]
	064 Move X22, [X31+32]
	065 Move X21, [X31+40]
	066 Move X24, [X31+16]
	067 Move X23, [X31+24]
	068 Move X1, X31
	069 Move X30, [X31+64]
	070 Call InputAction.Enable, X0
	071 Return 
	072 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x01E03300 ADRP X20, 0x25D5000
	0x01E03304 ADRP X19, 0x22F6000

ISIL:
	001 Move X1, X31
	002 Call MonoBehaviour..ctor, X0
	003 Return 

Method: System.Void <Start>b__1_0(UnityEngine.InputSystem.InputAction/CallbackContext ctx)

Disassembly:
	0x01E03308 LDRB W8, [X20 + 0xD85]
	0x01E0330C LDR X19, [X19 + 0x7C0]
	0x01E03310 TBNZ X8, 0x0, 0x1E03364
	0x01E03314 ADRP X0, 0x22F6000
	0x01E03318 LDR X0, [X0 + 0x7C8]
	0x01E0331C BL 0x1C16CF4
	0x01E03320 ADRP X0, 0x22F6000
	0x01E03324 LDR X0, [X0 + 0x7D0]
	0x01E03328 BL 0x1C16CF4
	0x01E0332C ADRP X0, 0x22F6000
	0x01E03330 LDR X0, [X0 + 0x7D8]
	0x01E03334 BL 0x1C16CF4
	0x01E03338 ADRP X0, 0x22F6000

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, [X0+32]
	004 Move X1, X31
	005 Call Component.get_transform, X0
	006 Compare X0, 0
	007 JumpIfEqual {17}
	008 Move X1, X31
	009 Call Transform.get_position, X0
	010 Move S3, 1
	011 Move X0, X19
	012 Move X1, X31
	013 Move X30, [X31+16]
	014 Move X19, [X31+24]
	015 Call SFXManager.PlaySFX, X0, X1, V0
	016 Return 
	017 Call 0x1C17F20

