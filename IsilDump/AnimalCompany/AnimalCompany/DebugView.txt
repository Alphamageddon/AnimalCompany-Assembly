Type: AnimalCompany.DebugView

Method: System.Void Awake()

Disassembly:
	0x01CCC95C LDR X0, [X0 + 0x368]
	0x01CCC960 BL 0x1B6E7F0
	0x01CCC964 MOVZ W8, 0x1
	0x01CCC968 STRB W8, [X21 + 0x59E]
	0x01CCC96C LDR X0, [X22]
	0x01CCC970 BL 0x1B6EA0C
	0x01CCC974 LDR X1, [X19]
	0x01CCC978 MOV X19, X0
	0x01CCC97C BL 0x28938D4
	0x01CCC980 LDR X8, [X20]
	0x01CCC984 LDP X22, X21, [X31 + 0x10]
	0x01CCC988 LDR X8, [X8 + 0xB8]
	0x01CCC98C STR X19, [X8]
	0x01CCC990 LDP X20, X19, [X31 + 0x20]
	0x01CCC994 LDR X30, [X31], #0x30
	0x01CCC998 RET
	0x01CCC99C STR D14, [X31 - 0x70]!
	0x01CCC9A0 STP D13, D12, [X31 + 0x8]
	0x01CCC9A4 STP D11, D10, [X31 + 0x18]
	0x01CCC9A8 STP D9, D8, [X31 + 0x28]
	0x01CCC9AC STR X30, [X31 + 0x38]
	0x01CCC9B0 STP X24, X23, [X31 + 0x40]
	0x01CCC9B4 STP X22, X21, [X31 + 0x50]
	0x01CCC9B8 STP X20, X19, [X31 + 0x60]
	0x01CCC9BC ADRP X20, 0x2557000
	0x01CCC9C0 ADRP X22, 0x2282000
	0x01CCC9C4 LDRB W8, [X20 + 0x59F]
	0x01CCC9C8 LDR X22, [X22 + 0x1C0]
	0x01CCC9CC MOV X21, X1
	0x01CCC9D0 MOV X19, X0
	0x01CCC9D4 TBNZ X8, 0x0, 0x1CCC9F8
	0x01CCC9D8 ADRP X0, 0x2282000
	0x01CCC9DC LDR X0, [X0 + 0x1C0]
	0x01CCC9E0 BL 0x1B6E7F0
	0x01CCC9E4 ADRP X0, 0x2283000
	0x01CCC9E8 LDR X0, [X0 + 0x368]
	0x01CCC9EC BL 0x1B6E7F0
	0x01CCC9F0 MOVZ W8, 0x1
	0x01CCC9F4 STRB W8, [X20 + 0x59F]
	0x01CCC9F8 ADRP X23, 0x2283000
	0x01CCC9FC LDR X23, [X23 + 0x368]
	0x01CCCA00 MOVZ W0, 0x1
	0x01CCCA04 MOV X1, X31
	0x01CCCA08 MOVZ W24, 0x1
	0x01CCCA0C BL 0x1D29EBC
	0x01CCCA10 LDR X0, [X22]
	0x01CCCA14 LDR W20, [X21 + 0x24]
	0x01CCCA18 LDP S8, S9, [X21 + 0x28]
	0x01CCCA1C LDP S14, S13, [X21 + 0x30]
	0x01CCCA20 LDP S11, S10, [X21 + 0x38]
	0x01CCCA24 LDR W8, [X0 + 0xE0]
	0x01CCCA28 LDR V12, [X21 + 0x40]
	0x01CCCA2C CBNZ W8, 0x1CCCA38
	0x01CCCA30 BL 0x1B6E8F8
	0x01CCCA34 LDR X0, [X22]
	0x01CCCA38 LDR X8, [X0 + 0xB8]
	0x01CCCA3C STRB W24, [X8 + 0x20]
	0x01CCCA40 LDR X0, [X23]
	0x01CCCA44 LDR W8, [X0 + 0xE0]
	0x01CCCA48 CBNZ W8, 0x1CCCA50
	0x01CCCA4C BL 0x1B6E8F8
	0x01CCCA50 MOV X0, X19
	0x01CCCA54 MOV W1, W20
	0x01CCCA58 MOV V0.16B, V8.16B
	0x01CCCA5C MOV V1.16B, V9.16B
	0x01CCCA60 MOV V3.16B, V13.16B
	0x01CCCA64 MOV V4.16B, V11.16B

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x2558000
	007 Move X22, 0x2284000
	008 Move X21, 0x2282000
	009 Move W8, [X20+1426]
	010 Move X22, [X22+840]
	011 Move X21, [X21+1144]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {28}
	017 Move X0, 0x2284000
	018 Move X0, [X0+840]
	019 Call 0x1B6F7F0
	020 Move X0, 0x2282000
	021 Move X0, [X0+1144]
	022 Call 0x1B6F7F0
	023 Move X0, 0x2284000
	024 Move X0, [X0+1712]
	025 Call 0x1B6F7F0
	026 Move W8, 1
	027 Move [X20+1426], W8
	028 Move X8, [X22]
	029 Move X0, [X21]
	030 Move X8, [X8+184]
	031 Move W9, [X0+224]
	032 Move X20, [X8]
	033 Compare W9, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1B6F8F8
	036 Move X0, X20
	037 Move X1, X31
	038 Move X2, X31
	039 Call Object.op_Equality, X0, X1
	040 Move TEMP, X0
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfNotEqual {47}
	044 Move X8, [X22]
	045 Move X8, [X8+184]
	046 Move [X8], X19
	047 Move X0, X19
	048 Move X1, X31
	049 Call Component.get_gameObject, X0
	050 Move X8, [X21]
	051 Move X20, X0
	052 Move W9, [X8+224]
	053 Compare W9, 0
	054 JumpIfNotEqual {57}
	055 Move X0, X8
	056 Call 0x1B6F8F8
	057 Move X0, X20
	058 Move X1, X31
	059 Call Object.Destroy, X0
	060 Move X0, [X19+32]
	061 Compare X0, 0
	062 JumpIfEqual {81}
	063 Move X8, [X0]
	064 Move X9, [X8+824]
	065 Move X1, [X8+832]
	066 NotImplemented "Instruction BLR not yet implemented."
	067 Compare X0, 0
	068 JumpIfEqual {81}
	069 Move X8, 0x2284000
	070 Move X8, [X8+1712]
	071 Move X20, [X31+32]
	072 Move X19, [X31+40]
	073 Move X22, [X31+16]
	074 Move X21, [X31+24]
	075 Move W2, 4
	076 Move X1, [X8]
	077 Move X3, X31
	078 Move X30, [X31+48]
	079 Call Material.SetInt, X0, X1, X2
	080 Return 
	081 Call 0x1B6FA1C

Method: System.Void AddText(System.String key, System.String text)

Disassembly:
	0x01CC25C0 LDR X21, [X21 + 0x2A8]
	0x01CC25C4 TBZ X20, 0x0, 0x1CC2624
	0x01CC25C8 LDR X0, [X21]
	0x01CC25CC LDR W8, [X0 + 0xE0]
	0x01CC25D0 CBNZ W8, 0x1CC25D8
	0x01CC25D4 BL 0x1B6E8F8
	0x01CC25D8 MOV X0, X31
	0x01CC25DC BL 0x1CAB1DC
	0x01CC25E0 CBZ X0, 0x1CC2680
	0x01CC25E4 MOV X1, X31
	0x01CC25E8 BL 0x1CB7844
	0x01CC25EC LDR X0, [X19 + 0x20]
	0x01CC25F0 CBZ X0, 0x1CC2680
	0x01CC25F4 MOV V0.16B, V10.16B
	0x01CC25F8 MOV V1.16B, V9.16B
	0x01CC25FC MOV V2.16B, V8.16B
	0x01CC2600 MOV X1, X31
	0x01CC2604 BL 0x1D09830
	0x01CC2608 LDR X0, [X19 + 0x38]
	0x01CC260C CBZ X0, 0x1CC2680
	0x01CC2610 LDP X20, X19, [X31 + 0x30]
	0x01CC2614 LDP X30, X21, [X31 + 0x20]
	0x01CC2618 LDP D9, D8, [X31 + 0x10]
	0x01CC261C LDR V10, [X31], #0x40
	0x01CC2620 B 0x1CC2684
	0x01CC2624 LDR X0, [X19 + 0x20]
	0x01CC2628 CBZ X0, 0x1CC2680
	0x01CC262C MOV V0.16B, V10.16B
	0x01CC2630 MOV V1.16B, V9.16B
	0x01CC2634 MOV V2.16B, V8.16B
	0x01CC2638 MOV X1, X31
	0x01CC263C BL 0x1D09830
	0x01CC2640 LDR X0, [X19 + 0x38]
	0x01CC2644 CBZ X0, 0x1CC2680
	0x01CC2648 BL 0x1CC2684
	0x01CC264C LDR X0, [X21]
	0x01CC2650 LDR W8, [X0 + 0xE0]
	0x01CC2654 CBNZ W8, 0x1CC265C
	0x01CC2658 BL 0x1B6E8F8
	0x01CC265C MOV X0, X31
	0x01CC2660 BL 0x1CAB1DC
	0x01CC2664 CBZ X0, 0x1CC2680
	0x01CC2668 LDP X20, X19, [X31 + 0x30]
	0x01CC266C LDP X30, X21, [X31 + 0x20]
	0x01CC2670 LDP D9, D8, [X31 + 0x10]
	0x01CC2674 MOV X1, X31
	0x01CC2678 LDR V10, [X31], #0x40
	0x01CC267C B 0x1CB79B0
	0x01CC2680 BL 0x1B6EA1C
	0x01CC2684 SUB X31, X31, 0x90
	0x01CC2688 STP D15, D14, [X31 + 0x20]
	0x01CC268C STP D13, D12, [X31 + 0x30]
	0x01CC2690 STP D11, D10, [X31 + 0x40]
	0x01CC2694 STP D9, D8, [X31 + 0x50]
	0x01CC2698 STR X30, [X31 + 0x60]
	0x01CC269C STP X22, X21, [X31 + 0x70]
	0x01CC26A0 STP X20, X19, [X31 + 0x80]
	0x01CC26A4 ADRP X21, 0x2561000
	0x01CC26A8 ADRP X20, 0x228B000
	0x01CC26AC LDRB W8, [X21 + 0x559]
	0x01CC26B0 LDR X20, [X20 + 0x478]
	0x01CC26B4 MOV X19, X0
	0x01CC26B8 TBNZ X8, 0x0, 0x1CC26DC
	0x01CC26BC ADRP X0, 0x228B000
	0x01CC26C0 LDR X0, [X0 + 0x478]
	0x01CC26C4 BL 0x1B6E7F0
	0x01CC26C8 ADRP X0, 0x228D000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x2562000
	007 Move X21, 0x228E000
	008 Move W8, [X22+1427]
	009 Move X21, [X21+840]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0x228E000
	017 Move X0, [X0+840]
	018 Call 0x1B6F7F0
	019 Move X0, 0x228C000
	020 Move X0, [X0+3856]
	021 Call 0x1B6F7F0
	022 Move X0, 0x228E000
	023 Move X0, [X0+848]
	024 Call 0x1B6F7F0
	025 Move X0, 0x228C000
	026 Move X0, [X0+3416]
	027 Call 0x1B6F7F0
	028 Move W8, 1
	029 Move [X22+1427], W8
	030 Move X8, [X21]
	031 Move X8, [X8+184]
	032 Move X8, [X8]
	033 Compare X8, 0
	034 JumpIfEqual {81}
	035 Move X0, [X8+48]
	036 Compare X0, 0
	037 JumpIfEqual {81}
	038 Move X8, 0x228E000
	039 Move X8, [X8+848]
	040 Move X1, X20
	041 Move X2, [X8]
	042 Call Dictionary`2<Object, Object>.ContainsKey, X0, X1
	043 Move X8, [X21]
	044 Move X8, [X8+184]
	045 Move X9, [X8]
	046 Compare X9, 0
	047 JumpIfEqual {81}
	048 Move W8, W0
	049 Move X0, [X9+48]
	050 Compare X0, 0
	051 JumpIfEqual {81}
	052 Move TEMP, X8
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfNotEqual {62}
	056 Move X8, 0x228C000
	057 Move X8, [X8+3416]
	058 Move X1, X20
	059 Move X2, X19
	060 Move X3, [X8]
	061 Call Dictionary`2<Object, Object>.set_Item, X0, X1, X2
	062 Move X8, 0x228C000
	063 Move X8, [X8+3856]
	064 Move X1, X20
	065 Move X2, X19
	066 Move X3, [X8]
	067 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	068 Move X8, [X21]
	069 Move X8, [X8+184]
	070 Move X8, [X8]
	071 Compare X8, 0
	072 JumpIfEqual {81}
	073 Move X20, [X31+32]
	074 Move X19, [X31+40]
	075 Move X22, [X31+16]
	076 Move X21, [X31+24]
	077 Move W9, 1
	078 Move [X8+56], W9
	079 Move X30, [X31+48]
	080 Return 
	081 Call 0x1B6FA1C

Method: System.Void Update()

Disassembly:
	0x01CCCA68 MOV V5.16B, V10.16B
	0x01CCCA6C MOV V6.16B, V12.16B
	0x01CCCA70 LDP X20, X19, [X31 + 0x60]
	0x01CCCA74 LDP X22, X21, [X31 + 0x50]
	0x01CCCA78 LDP X24, X23, [X31 + 0x40]
	0x01CCCA7C LDR X30, [X31 + 0x38]
	0x01CCCA80 LDP D9, D8, [X31 + 0x28]
	0x01CCCA84 LDP D11, D10, [X31 + 0x18]
	0x01CCCA88 LDP D13, D12, [X31 + 0x8]
	0x01CCCA8C MOV V2.16B, V14.16B
	0x01CCCA90 LDR V14, [X31], #0x70
	0x01CCCA94 B 0x1CCC0F0
	0x01CCCA98 STR X30, [X31 - 0x20]!
	0x01CCCA9C STP X20, X19, [X31 + 0x10]
	0x01CCCAA0 ADRP X19, 0x2557000
	0x01CCCAA4 ADRP X20, 0x2283000
	0x01CCCAA8 LDRB W8, [X19 + 0x5A0]
	0x01CCCAAC LDR X20, [X20 + 0x738]
	0x01CCCAB0 TBNZ X8, 0x0, 0x1CCCAC8
	0x01CCCAB4 ADRP X0, 0x2283000
	0x01CCCAB8 LDR X0, [X0 + 0x738]
	0x01CCCABC BL 0x1B6E7F0
	0x01CCCAC0 MOVZ W8, 0x1
	0x01CCCAC4 STRB W8, [X19 + 0x5A0]
	0x01CCCAC8 LDR X0, [X20]
	0x01CCCACC BL 0x1B6EA0C
	0x01CCCAD0 MOV X1, X31
	0x01CCCAD4 MOV X19, X0
	0x01CCCAD8 BL 0x32276F8
	0x01CCCADC LDR X8, [X20]
	0x01CCCAE0 LDR X8, [X8 + 0xB8]
	0x01CCCAE4 STR X19, [X8]
	0x01CCCAE8 LDP X20, X19, [X31 + 0x10]
	0x01CCCAEC LDR X30, [X31], #0x20
	0x01CCCAF0 RET
	0x01CCCAF4 MOV X1, X31
	0x01CCCAF8 B 0x32276F8
	0x01CCCAFC STP X30, X21, [X31 - 0x20]!
	0x01CCCB00 STP X20, X19, [X31 + 0x10]
	0x01CCCB04 ADRP X20, 0x2557000
	0x01CCCB08 ADRP X21, 0x2283000
	0x01CCCB0C LDRB W8, [X20 + 0x5A1]
	0x01CCCB10 LDR X21, [X21 + 0x368]
	0x01CCCB14 MOV X19, X2
	0x01CCCB18 TBNZ X8, 0x0, 0x1CCCB48
	0x01CCCB1C ADRP X0, 0x2283000
	0x01CCCB20 LDR X0, [X0 + 0x790]
	0x01CCCB24 BL 0x1B6E7F0
	0x01CCCB28 ADRP X0, 0x2281000
	0x01CCCB2C LDR X0, [X0 + 0x478]
	0x01CCCB30 BL 0x1B6E7F0
	0x01CCCB34 ADRP X0, 0x2283000
	0x01CCCB38 LDR X0, [X0 + 0x368]
	0x01CCCB3C BL 0x1B6E7F0
	0x01CCCB40 MOVZ W8, 0x1
	0x01CCCB44 STRB W8, [X20 + 0x5A1]
	0x01CCCB48 LDR X0, [X21]
	0x01CCCB4C ADRP X20, 0x2281000
	0x01CCCB50 LDR W8, [X0 + 0xE0]
	0x01CCCB54 LDR X20, [X20 + 0x478]
	0x01CCCB58 CBNZ W8, 0x1CCCB64
	0x01CCCB5C BL 0x1B6E8F8
	0x01CCCB60 LDR X0, [X21]
	0x01CCCB64 LDR X8, [X20]
	0x01CCCB68 LDR X9, [X0 + 0xB8]
	0x01CCCB6C LDR W10, [X8 + 0xE0]
	0x01CCCB70 LDR X20, [X9 + 0x8]
	0x01CCCB74 CBNZ W10, 0x1CCCB80
	0x01CCCB78 MOV X0, X8
	0x01CCCB7C BL 0x1B6E8F8
	0x01CCCB80 MOV X0, X20
	0x01CCCB84 MOV X1, X31
	0x01CCCB88 MOV X2, X31
	0x01CCCB8C BL 0x3A9D6EC
	0x01CCCB90 TBZ X0, 0x0, 0x1CCCC20
	0x01CCCB94 LDR X0, [X21]
	0x01CCCB98 LDR W8, [X0 + 0xE0]
	0x01CCCB9C CBNZ W8, 0x1CCCBA8
	0x01CCCBA0 BL 0x1B6E8F8
	0x01CCCBA4 LDR X0, [X21]
	0x01CCCBA8 LDR X8, [X0 + 0xB8]
	0x01CCCBAC LDR X8, [X8 + 0x8]
	0x01CCCBB0 CBZ X8, 0x1CCCC48
	0x01CCCBB4 LDR X9, [X8 + 0x50]
	0x01CCCBB8 CBZ X9, 0x1CCCC20
	0x01CCCBBC LDR W9, [X0 + 0xE0]
	0x01CCCBC0 CBNZ W9, 0x1CCCBD8
	0x01CCCBC4 BL 0x1B6E8F8
	0x01CCCBC8 LDR X8, [X21]
	0x01CCCBCC LDR X8, [X8 + 0xB8]
	0x01CCCBD0 LDR X8, [X8 + 0x8]
	0x01CCCBD4 CBZ X8, 0x1CCCC48
	0x01CCCBD8 LDR X0, [X8 + 0x50]
	0x01CCCBDC CBZ X0, 0x1CCCC48
	0x01CCCBE0 ADRP X9, 0x2283000
	0x01CCCBE4 LDR X9, [X9 + 0x790]
	0x01CCCBE8 LDR W10, [X0 + 0x1C]
	0x01CCCBEC LDR X8, [X0 + 0x10]
	0x01CCCBF0 LDR X9, [X9]
	0x01CCCBF4 ADD W10, W10, 0x1
	0x01CCCBF8 STR W10, [X0 + 0x1C]
	0x01CCCBFC CBZ X8, 0x1CCCC48
	0x01CCCC00 LDRSW X10, [X0 + 0x18]
	0x01CCCC04 LDR W11, [X8 + 0x18]
	0x01CCCC08 CMP W10, W11
	0x01CCCC0C B.CS 0x1CCCC2C
	0x01CCCC10 ADD W9, W10, 0x1
	0x01CCCC14 ADD X8, X8, X10, 0x3, LSL
	0x01CCCC18 STR W9, [X0 + 0x18]
	0x01CCCC1C STR X19, [X8 + 0x20]
	0x01CCCC20 LDP X20, X19, [X31 + 0x10]
	0x01CCCC24 LDP X30, X21, [X31], #0x20
	0x01CCCC28 RET
	0x01CCCC2C LDR X8, [X9 + 0x20]
	0x01CCCC30 MOV X1, X19
	0x01CCCC34 LDP X20, X19, [X31 + 0x10]
	0x01CCCC38 LDR X8, [X8 + 0xC0]
	0x01CCCC3C LDR X2, [X8 + 0x70]
	0x01CCCC40 LDP X30, X21, [X31], #0x20
	0x01CCCC44 B 0x2E46518
	0x01CCCC48 BL 0x1B6EA1C
	0x01CCCC4C MOV X1, X31

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+48], X30
	003 Move [X31+64], X24
	004 Move [X31+72], X23
	005 Move [X31+80], X22
	006 Move [X31+88], X21
	007 Move [X31+96], X20
	008 Move [X31+104], X19
	009 Move X20, 0x2558000
	010 Move W8, [X20+1428]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {39}
	016 Move X0, 0x2284000
	017 Move X0, [X0+1720]
	018 Call 0x1B6F7F0
	019 Move X0, 0x2284000
	020 Move X0, [X0+1728]
	021 Call 0x1B6F7F0
	022 Move X0, 0x2284000
	023 Move X0, [X0+1736]
	024 Call 0x1B6F7F0
	025 Move X0, 0x2284000
	026 Move X0, [X0+1744]
	027 Call 0x1B6F7F0
	028 Move X0, 0x2284000
	029 Move X0, [X0+1752]
	030 Call 0x1B6F7F0
	031 Move X0, 0x2284000
	032 Move X0, [X0+1760]
	033 Call 0x1B6F7F0
	034 Move X0, 0x2282000
	035 Move X0, [X0+2072]
	036 Call 0x1B6F7F0
	037 Move W8, 1
	038 Move [X20+1428], W8
	039 NotImplemented "Instruction MOVI not yet implemented."
	040 Move [X31+32], X31
	041 Move [X31], V0
	042 Move [X31+8], V0
	043 Move W8, [X19+56]
	044 Compare W8, 0
	045 JumpIfEqual {100}
	046 Move X0, [X19+32]
	047 Move [X19+56], W31
	048 Compare X0, 0
	049 JumpIfEqual {110}
	050 Move X9, 0x2282000
	051 Move X8, [X0]
	052 Move X9, [X9+2072]
	053 Move X2, [X8+1376]
	054 Move X1, [X9]
	055 Move X9, [X8+1368]
	056 NotImplemented "Instruction BLR not yet implemented."
	057 Move X0, [X19+48]
	058 Compare X0, 0
	059 JumpIfEqual {110}
	060 Move X8, 0x2284000
	061 Move X8, [X8+1720]
	062 Move X23, 0x2284000
	063 Move X24, 0x2284000
	064 Move X22, 0x2284000
	065 Move X1, [X8]
	066 Move X23, [X23+1736]
	067 Move X24, [X24+1760]
	068 Move X22, [X22+1728]
	069 Add X8, X31, 0
	070 Call Dictionary`2<Object, Object>.GetEnumerator, X0
	071 Move X1, [X23]
	072 Add X0, X31, 0
	073 Call Enumerator<Object, Object>.MoveNext, X0
	074 Move TEMP, X0
	075 And TEMP, TEMP, 1
	076 Compare TEMP, 1
	077 JumpIfNotEqual {97}
	078 Move X20, [X19+32]
	079 Compare X20, 0
	080 JumpIfEqual {109}
	081 Move X8, [X20]
	082 Move X21, [X31+24]
	083 Move X1, [X8+1360]
	084 Move X9, [X8+1352]
	085 Move X0, X20
	086 NotImplemented "Instruction BLR not yet implemented."
	087 Move X2, [X24]
	088 Move X1, X21
	089 Move X3, X31
	090 Call String.Concat, X0, X1, X2
	091 Move X1, X0
	092 Move X8, [X20]
	093 Move X9, [X8+1368]
	094 Move X2, [X8+1376]
	095 Move X0, X20
	096 NotImplemented "Instruction BLR not yet implemented."
	097 Move X1, [X22]
	098 Add X0, X31, 0
	099 Call Enumerator<Object, Object>.Dispose, X0
	100 Move X20, [X31+96]
	101 Move X19, [X31+104]
	102 Move X22, [X31+80]
	103 Move X21, [X31+88]
	104 Move X24, [X31+64]
	105 Move X23, [X31+72]
	106 Move X30, [X31+48]
	107 Add X31, X31, 112
	108 Return 
	109 Call 0x1B6FA1C
	110 Call 0x1B6FA1C
	111 Move X19, X0
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Move X0, X19
	114 Call 0x3D1A840
	115 Move X20, [X0]
	116 Call 0x3D1A850
	117 Move X1, [X22]
	118 Add X0, X31, 0
	119 Call Enumerator<Object, Object>.Dispose, X0
	120 Compare X20, 0
	121 JumpIfEqual {100}
	122 Move X0, X20
	123 Call 0x1B6FA14
	124 Move X20, X31
	125 Move X19, X0
	126 Move X1, [X22]
	127 Add X0, X31, 0
	128 Call Enumerator<Object, Object>.Dispose, X0
	129 Compare X20, 0
	130 JumpIfNotEqual {133}
	131 Move X0, X19
	132 Call 0x1C8518C
	133 Move X0, X20
	134 Call 0x1B6FA14
	135 Call 0x18F56A8

Method: System.Void .ctor()

Disassembly:
	0x01CCCC50 B 0x3A9EFE0
	0x01CCCC54 STP D13, D12, [X31 - 0x50]!
	0x01CCCC58 STP D11, D10, [X31 + 0x10]
	0x01CCCC5C STP D9, D8, [X31 + 0x20]
	0x01CCCC60 STP X30, X21, [X31 + 0x30]
	0x01CCCC64 STP X20, X19, [X31 + 0x40]
	0x01CCCC68 ADRP X21, 0x2557000
	0x01CCCC6C ADRP X20, 0x2281000
	0x01CCCC70 LDRB W8, [X21 + 0x5A2]
	0x01CCCC74 LDR X20, [X20 + 0x478]
	0x01CCCC78 MOV X19, X0
	0x01CCCC7C TBNZ X8, 0x0, 0x1CCCC94
	0x01CCCC80 ADRP X0, 0x2281000
	0x01CCCC84 LDR X0, [X0 + 0x478]
	0x01CCCC88 BL 0x1B6E7F0
	0x01CCCC8C MOVZ W8, 0x1
	0x01CCCC90 STRB W8, [X21 + 0x5A2]
	0x01CCCC94 MOV X0, X31
	0x01CCCC98 BL 0x3A6D510
	0x01CCCC9C LDR X8, [X20]
	0x01CCCCA0 MOV X20, X0
	0x01CCCCA4 LDR W9, [X8 + 0xE0]
	0x01CCCCA8 CBNZ W9, 0x1CCCCB4
	0x01CCCCAC MOV X0, X8
	0x01CCCCB0 BL 0x1B6E8F8
	0x01CCCCB4 MOV X0, X20
	0x01CCCCB8 MOV X1, X31
	0x01CCCCBC MOV X2, X31
	0x01CCCCC0 BL 0x3AA0AF0
	0x01CCCCC4 TBZ X0, 0x0, 0x1CCCCE0
	0x01CCCCC8 LDP X20, X19, [X31 + 0x40]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2558000
	007 Move X22, 0x2282000
	008 Move X20, 0x2282000
	009 Move W8, [X21+1429]
	010 Move X22, [X22+3424]
	011 Move X20, [X20+3408]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x2282000
	018 Move X0, [X0+3408]
	019 Call 0x1B6F7F0
	020 Move X0, 0x2282000
	021 Move X0, [X0+3424]
	022 Call 0x1B6F7F0
	023 Move W8, 1
	024 Move [X21+1429], W8
	025 Move X0, [X22]
	026 Call 0x1B6FA0C
	027 Move X1, [X20]
	028 Move X20, X0
	029 Call Dictionary`2<Object, Object>..ctor, X0
	030 Move [X19+48], X20
	031 Move X0, X19
	032 Move X20, [X31+32]
	033 Move X19, [X31+40]
	034 Move X22, [X31+16]
	035 Move X21, [X31+24]
	036 Move X1, X31
	037 Move X30, [X31+48]
	038 Call MonoBehaviour..ctor, X0
	039 Return 

