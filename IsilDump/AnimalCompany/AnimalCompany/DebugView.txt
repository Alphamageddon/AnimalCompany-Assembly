Type: AnimalCompany.DebugView

Method: System.Void Awake()

Disassembly:
	0x01DD0C94 CBNZ W8, 0x1DD0CA0
	0x01DD0C98 BL 0x1C16DFC
	0x01DD0C9C LDR X0, [X21]
	0x01DD0CA0 LDR X8, [X20]
	0x01DD0CA4 LDR X9, [X0 + 0xB8]
	0x01DD0CA8 LDR W10, [X8 + 0xE0]
	0x01DD0CAC LDR X20, [X9 + 0x8]
	0x01DD0CB0 CBNZ W10, 0x1DD0CBC
	0x01DD0CB4 MOV X0, X8
	0x01DD0CB8 BL 0x1C16DFC
	0x01DD0CBC MOV X0, X20
	0x01DD0CC0 MOV X1, X31
	0x01DD0CC4 MOV X2, X31
	0x01DD0CC8 BL 0x3C354F8
	0x01DD0CCC TBZ X0, 0x0, 0x1DD0D5C
	0x01DD0CD0 LDR X0, [X21]
	0x01DD0CD4 LDR W8, [X0 + 0xE0]
	0x01DD0CD8 CBNZ W8, 0x1DD0CE4
	0x01DD0CDC BL 0x1C16DFC
	0x01DD0CE0 LDR X0, [X21]
	0x01DD0CE4 LDR X8, [X0 + 0xB8]
	0x01DD0CE8 LDR X8, [X8 + 0x8]
	0x01DD0CEC CBZ X8, 0x1DD0D84
	0x01DD0CF0 LDR X9, [X8 + 0x48]
	0x01DD0CF4 CBZ X9, 0x1DD0D5C
	0x01DD0CF8 LDR W9, [X0 + 0xE0]
	0x01DD0CFC CBNZ W9, 0x1DD0D14
	0x01DD0D00 BL 0x1C16DFC
	0x01DD0D04 LDR X8, [X21]
	0x01DD0D08 LDR X8, [X8 + 0xB8]
	0x01DD0D0C LDR X8, [X8 + 0x8]
	0x01DD0D10 CBZ X8, 0x1DD0D84
	0x01DD0D14 LDR X0, [X8 + 0x48]
	0x01DD0D18 CBZ X0, 0x1DD0D84
	0x01DD0D1C ADRP X9, 0x2328000
	0x01DD0D20 LDR X9, [X9 + 0x5A0]
	0x01DD0D24 LDR W10, [X0 + 0x1C]
	0x01DD0D28 LDR X8, [X0 + 0x10]
	0x01DD0D2C LDR X9, [X9]
	0x01DD0D30 ADD W10, W10, 0x1
	0x01DD0D34 STR W10, [X0 + 0x1C]
	0x01DD0D38 CBZ X8, 0x1DD0D84
	0x01DD0D3C LDRSW X10, [X0 + 0x18]
	0x01DD0D40 LDR W11, [X8 + 0x18]
	0x01DD0D44 CMP W10, W11
	0x01DD0D48 B.CS 0x1DD0D68
	0x01DD0D4C ADD W9, W10, 0x1
	0x01DD0D50 ADD X8, X8, X10, 0x3, LSL
	0x01DD0D54 STR W9, [X0 + 0x18]
	0x01DD0D58 STR X19, [X8 + 0x20]
	0x01DD0D5C LDP X20, X19, [X31 + 0x10]
	0x01DD0D60 LDP X30, X21, [X31], #0x20
	0x01DD0D64 RET
	0x01DD0D68 LDR X8, [X9 + 0x20]
	0x01DD0D6C MOV X1, X19
	0x01DD0D70 LDP X20, X19, [X31 + 0x10]
	0x01DD0D74 LDR X8, [X8 + 0xC0]
	0x01DD0D78 LDR X2, [X8 + 0x70]
	0x01DD0D7C LDP X30, X21, [X31], #0x20
	0x01DD0D80 B 0x301BF90
	0x01DD0D84 BL 0x1C16F20
	0x01DD0D88 MOV X1, X31
	0x01DD0D8C B 0x3C36D2C
	0x01DD0D90 STP D13, D12, [X31 - 0x50]!
	0x01DD0D94 STP D11, D10, [X31 + 0x10]
	0x01DD0D98 STP D9, D8, [X31 + 0x20]
	0x01DD0D9C STP X30, X21, [X31 + 0x30]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x2609000
	007 Move X22, 0x2329000
	008 Move X21, 0x2324000
	009 Move W8, [X20+3047]
	010 Move X22, [X22+176]
	011 Move X21, [X21+1432]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {28}
	017 Move X0, 0x2329000
	018 Move X0, [X0+176]
	019 Call 0x1C17CF4
	020 Move X0, 0x2324000
	021 Move X0, [X0+1432]
	022 Call 0x1C17CF4
	023 Move X0, 0x2329000
	024 Move X0, [X0+1248]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X20+3047], W8
	028 Move X8, [X22]
	029 Move X0, [X21]
	030 Move X8, [X8+184]
	031 Move W9, [X0+224]
	032 Move X20, [X8]
	033 Compare W9, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1C17DFC
	036 Move X0, X20
	037 Move X1, X31
	038 Move X2, X31
	039 Call Object.op_Equality, X0, X1
	040 Move TEMP, X0
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfNotEqual {47}
	044 Move X8, [X22]
	045 Move X8, [X8+184]
	046 Move [X8], X19
	047 Move X0, X19
	048 Move X1, X31
	049 Call Component.get_gameObject, X0
	050 Move X8, [X21]
	051 Move X20, X0
	052 Move W9, [X8+224]
	053 Compare W9, 0
	054 JumpIfNotEqual {57}
	055 Move X0, X8
	056 Call 0x1C17DFC
	057 Move X0, X20
	058 Move X1, X31
	059 Call Object.Destroy, X0
	060 Move X0, [X19+32]
	061 Compare X0, 0
	062 JumpIfEqual {81}
	063 Move X8, [X0]
	064 Move X9, [X8+824]
	065 Move X1, [X8+832]
	066 NotImplemented "Instruction BLR not yet implemented."
	067 Compare X0, 0
	068 JumpIfEqual {81}
	069 Move X8, 0x2329000
	070 Move X8, [X8+1248]
	071 Move X20, [X31+32]
	072 Move X19, [X31+40]
	073 Move X22, [X31+16]
	074 Move X21, [X31+24]
	075 Move W2, 4
	076 Move X1, [X8]
	077 Move X3, X31
	078 Move X30, [X31+48]
	079 Call Material.SetInt, X0, X1, X2
	080 Return 
	081 Call 0x1C17F20

Method: System.Void AddText(System.String key, System.String text)

Disassembly:
	0x01DC2368 MOV X19, X0
	0x01DC236C CBZ X1, 0x1DC237C
	0x01DC2370 MOV X0, X19
	0x01DC2374 MOV X2, X31
	0x01DC2378 BL 0x3C36834
	0x01DC237C MOV X0, X19
	0x01DC2380 BL 0x1DC83C8
	0x01DC2384 MOV X1, X0
	0x01DC2388 STR X0, [X19 + 0x1D0]
	0x01DC238C MOV X0, X19
	0x01DC2390 MOV X2, X31
	0x01DC2394 LDP X30, X19, [X31], #0x10
	0x01DC2398 B 0x3C366FC
	0x01DC239C STP D11, D10, [X31 - 0x40]!
	0x01DC23A0 STP D9, D8, [X31 + 0x10]
	0x01DC23A4 STP X30, X21, [X31 + 0x20]
	0x01DC23A8 STP X20, X19, [X31 + 0x30]
	0x01DC23AC ADRP X20, 0x2616000
	0x01DC23B0 ADRP X21, 0x2336000
	0x01DC23B4 LDRB W8, [X20 + 0xC06]
	0x01DC23B8 LDR X21, [X21 + 0xC0]
	0x01DC23BC MOV V8.16B, V3.16B
	0x01DC23C0 MOV V9.16B, V2.16B
	0x01DC23C4 MOV V10.16B, V1.16B
	0x01DC23C8 MOV V11.16B, V0.16B
	0x01DC23CC MOV X19, X0
	0x01DC23D0 TBNZ X8, 0x0, 0x1DC23E8
	0x01DC23D4 ADRP X0, 0x2336000
	0x01DC23D8 LDR X0, [X0 + 0xC0]
	0x01DC23DC BL 0x1C16CF4
	0x01DC23E0 MOVZ W8, 0x1
	0x01DC23E4 STRB W8, [X20 + 0xC06]
	0x01DC23E8 LDR X8, [X21]
	0x01DC23EC LDR X8, [X8 + 0xB8]
	0x01DC23F0 LDR X8, [X8]
	0x01DC23F4 CBZ X8, 0x1DC2424
	0x01DC23F8 LDR X0, [X8 + 0x50]
	0x01DC23FC MOV X1, X19
	0x01DC2400 MOV V2.16B, V9.16B
	0x01DC2404 MOV V3.16B, V8.16B
	0x01DC2408 LDP X20, X19, [X31 + 0x30]
	0x01DC240C LDP X30, X21, [X31 + 0x20]
	0x01DC2410 LDP D9, D8, [X31 + 0x10]
	0x01DC2414 MOV V0.16B, V11.16B
	0x01DC2418 MOV V1.16B, V10.16B
	0x01DC241C LDP D11, D10, [X31], #0x40
	0x01DC2420 B 0x1DD289C
	0x01DC2424 BL 0x1C16F20
	0x01DC2428 STP X30, X21, [X31 - 0x20]!
	0x01DC242C STP X20, X19, [X31 + 0x10]
	0x01DC2430 ADRP X20, 0x2616000
	0x01DC2434 ADRP X21, 0x2336000
	0x01DC2438 LDRB W8, [X20 + 0xB84]
	0x01DC243C LDR X21, [X21 + 0xE8]
	0x01DC2440 MOV X19, X0
	0x01DC2444 TBNZ X8, 0x0, 0x1DC245C
	0x01DC2448 ADRP X0, 0x2336000
	0x01DC244C LDR X0, [X0 + 0xE8]
	0x01DC2450 BL 0x1C16CF4
	0x01DC2454 MOVZ W8, 0x1
	0x01DC2458 STRB W8, [X20 + 0xB84]
	0x01DC245C LDR X0, [X21]
	0x01DC2460 BL 0x1C16F10
	0x01DC2464 MOV X1, X31
	0x01DC2468 MOV X20, X0
	0x01DC246C BL 0x33BDD8C
	0x01DC2470 STR W31, [X20 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x2617000
	007 Move X21, 0x2337000
	008 Move W8, [X22+3048]
	009 Move X21, [X21+176]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0x2337000
	017 Move X0, [X0+176]
	018 Call 0x1C17CF4
	019 Move X0, 0x2333000
	020 Move X0, [X0+2064]
	021 Call 0x1C17CF4
	022 Move X0, 0x2337000
	023 Move X0, [X0+184]
	024 Call 0x1C17CF4
	025 Move X0, 0x2333000
	026 Move X0, [X0+1736]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X22+3048], W8
	030 Move X8, [X21]
	031 Move X8, [X8+184]
	032 Move X8, [X8]
	033 Compare X8, 0
	034 JumpIfEqual {81}
	035 Move X0, [X8+48]
	036 Compare X0, 0
	037 JumpIfEqual {81}
	038 Move X8, 0x2337000
	039 Move X8, [X8+184]
	040 Move X1, X20
	041 Move X2, [X8]
	042 Call Dictionary`2<Object, Object>.ContainsKey, X0, X1
	043 Move X8, [X21]
	044 Move X8, [X8+184]
	045 Move X9, [X8]
	046 Compare X9, 0
	047 JumpIfEqual {81}
	048 Move W8, W0
	049 Move X0, [X9+48]
	050 Compare X0, 0
	051 JumpIfEqual {81}
	052 Move TEMP, X8
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfNotEqual {62}
	056 Move X8, 0x2333000
	057 Move X8, [X8+1736]
	058 Move X1, X20
	059 Move X2, X19
	060 Move X3, [X8]
	061 Call Dictionary`2<Object, Object>.set_Item, X0, X1, X2
	062 Move X8, 0x2333000
	063 Move X8, [X8+2064]
	064 Move X1, X20
	065 Move X2, X19
	066 Move X3, [X8]
	067 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	068 Move X8, [X21]
	069 Move X8, [X8+184]
	070 Move X8, [X8]
	071 Compare X8, 0
	072 JumpIfEqual {81}
	073 Move X20, [X31+32]
	074 Move X19, [X31+40]
	075 Move X22, [X31+16]
	076 Move X21, [X31+24]
	077 Move W9, 1
	078 Move [X8+56], W9
	079 Move X30, [X31+48]
	080 Return 
	081 Call 0x1C17F20

Method: System.Void Update()

Disassembly:
	0x01DD0DA0 STP X20, X19, [X31 + 0x40]
	0x01DD0DA4 ADRP X21, 0x2608000
	0x01DD0DA8 ADRP X20, 0x2323000
	0x01DD0DAC LDRB W8, [X21 + 0xBF7]
	0x01DD0DB0 LDR X20, [X20 + 0x598]
	0x01DD0DB4 MOV X19, X0
	0x01DD0DB8 TBNZ X8, 0x0, 0x1DD0DD0
	0x01DD0DBC ADRP X0, 0x2323000
	0x01DD0DC0 LDR X0, [X0 + 0x598]
	0x01DD0DC4 BL 0x1C16CF4
	0x01DD0DC8 MOVZ W8, 0x1
	0x01DD0DCC STRB W8, [X21 + 0xBF7]
	0x01DD0DD0 MOV X0, X31
	0x01DD0DD4 BL 0x3C047F8
	0x01DD0DD8 LDR X8, [X20]
	0x01DD0DDC MOV X20, X0
	0x01DD0DE0 LDR W9, [X8 + 0xE0]
	0x01DD0DE4 CBNZ W9, 0x1DD0DF0
	0x01DD0DE8 MOV X0, X8
	0x01DD0DEC BL 0x1C16DFC
	0x01DD0DF0 MOV X0, X20
	0x01DD0DF4 MOV X1, X31
	0x01DD0DF8 MOV X2, X31
	0x01DD0DFC BL 0x3C3883C
	0x01DD0E00 TBZ X0, 0x0, 0x1DD0E1C
	0x01DD0E04 LDP X20, X19, [X31 + 0x40]
	0x01DD0E08 LDP X30, X21, [X31 + 0x30]
	0x01DD0E0C LDP D9, D8, [X31 + 0x20]
	0x01DD0E10 LDP D11, D10, [X31 + 0x10]
	0x01DD0E14 LDP D13, D12, [X31], #0x50
	0x01DD0E18 RET
	0x01DD0E1C MOV X0, X19
	0x01DD0E20 MOV X1, X31
	0x01DD0E24 BL 0x3C32E90
	0x01DD0E28 CBZ X0, 0x1DD0F54
	0x01DD0E2C MOV X1, X31
	0x01DD0E30 BL 0x3C3F58C
	0x01DD0E34 MOV X0, X31
	0x01DD0E38 MOV V8.16B, V0.16B
	0x01DD0E3C MOV V9.16B, V1.16B
	0x01DD0E40 MOV V10.16B, V2.16B
	0x01DD0E44 BL 0x3C047F8
	0x01DD0E48 CBZ X0, 0x1DD0F54
	0x01DD0E4C MOV X1, X31
	0x01DD0E50 BL 0x3C32E90
	0x01DD0E54 CBZ X0, 0x1DD0F54
	0x01DD0E58 MOV X1, X31
	0x01DD0E5C BL 0x3C3F58C
	0x01DD0E60 ADRP X20, 0x2608000
	0x01DD0E64 LDRB W8, [X20 + 0x85C]
	0x01DD0E68 MOV V11.16B, V0.16B
	0x01DD0E6C MOV V12.16B, V1.16B
	0x01DD0E70 MOV V13.16B, V2.16B
	0x01DD0E74 CBNZ W8, 0x1DD0E8C
	0x01DD0E78 ADRP X0, 0x2323000
	0x01DD0E7C LDR X0, [X0 + 0x5A8]
	0x01DD0E80 BL 0x1C16CF4
	0x01DD0E84 MOVZ W8, 0x1
	0x01DD0E88 STRB W8, [X20 + 0x85C]
	0x01DD0E8C ADRP X8, 0x2323000
	0x01DD0E90 LDR X8, [X8 + 0x5A8]
	0x01DD0E94 LDR X0, [X8]
	0x01DD0E98 LDR W8, [X0 + 0xE0]
	0x01DD0E9C CBNZ W8, 0x1DD0EA4
	0x01DD0EA0 BL 0x1C16DFC
	0x01DD0EA4 LDP S2, S1, [X19 + 0x20]
	0x01DD0EA8 FMOV S0, W31
	0x01DD0EAC FCMP S1, S2
	0x01DD0EB0 B.EQ 0x1DD0EF4
	0x01DD0EB4 FSUB S3, S8, S11
	0x01DD0EB8 FSUB S4, S9, S12
	0x01DD0EBC FSUB S5, S10, S13
	0x01DD0EC0 FMUL S3, S3, S3
	0x01DD0EC4 FMUL S4, S4, S4
	0x01DD0EC8 FMUL S5, S5, S5
	0x01DD0ECC FADD S3, S3, S4
	0x01DD0ED0 FADD S3, S5, S3
	0x01DD0ED4 FSQRT S3, S3
	0x01DD0ED8 FSUB S3, S3, S1
	0x01DD0EDC FSUB S1, S2, S1
	0x01DD0EE0 FDIV S1, S3, S1
	0x01DD0EE4 FCMP S1, 0x0
	0x01DD0EE8 B.MI 0x1DD0EF4
	0x01DD0EEC FMOV S0, 1
	0x01DD0EF0 FMIN S0, S1, S0
	0x01DD0EF4 LDR X0, [X19 + 0x30]
	0x01DD0EF8 CBZ X0, 0x1DD0F54
	0x01DD0EFC LDR V1, [X19 + 0x28]
	0x01DD0F00 FMOV S2, W31
	0x01DD0F04 FMAX S0, S0, S2
	0x01DD0F08 MOV X1, X31
	0x01DD0F0C FMUL S0, S0, S1
	0x01DD0F10 FADD S0, S0, S2
	0x01DD0F14 BL 0x3C16928
	0x01DD0F18 LDR X0, [X19 + 0x30]
	0x01DD0F1C CBZ X0, 0x1DD0F54
	0x01DD0F20 MOV X1, X31
	0x01DD0F24 BL 0x3C168EC
	0x01DD0F28 LDR X0, [X19 + 0x30]
	0x01DD0F2C CBZ X0, 0x1DD0F54
	0x01DD0F30 LDP X20, X19, [X31 + 0x40]
	0x01DD0F34 LDP X30, X21, [X31 + 0x30]
	0x01DD0F38 LDP D9, D8, [X31 + 0x20]
	0x01DD0F3C LDP D11, D10, [X31 + 0x10]
	0x01DD0F40 FCMP S0, 0x0
	0x01DD0F44 CSET W1, NE
	0x01DD0F48 MOV X2, X31
	0x01DD0F4C LDP D13, D12, [X31], #0x50
	0x01DD0F50 B 0x3C32410
	0x01DD0F54 BL 0x1C16F20
	0x01DD0F58 ADRP X8, 0xFFFFFFFFFED1E000
	0x01DD0F5C LDR V0, [X8 + 0x448]
	0x01DD0F60 MOVZ W8, 0x40A00000
	0x01DD0F64 MOV X1, X31
	0x01DD0F68 STR W8, [X0 + 0x28]
	0x01DD0F6C STR D0, [X0 + 0x20]
	0x01DD0F70 B 0x3C36C30
	0x01DD0F74 STP X30, X19, [X31 - 0x10]!
	0x01DD0F78 LDR X19, [X0 + 0x20]
	0x01DD0F7C MOV X1, X31
	0x01DD0F80 BL 0x3C32E90
	0x01DD0F84 CBZ X0, 0x1DD0FA4

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+48], X30
	003 Move [X31+64], X24
	004 Move [X31+72], X23
	005 Move [X31+80], X22
	006 Move [X31+88], X21
	007 Move [X31+96], X20
	008 Move [X31+104], X19
	009 Move X20, 0x2609000
	010 Move W8, [X20+3049]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {39}
	016 Move X0, 0x2329000
	017 Move X0, [X0+1256]
	018 Call 0x1C17CF4
	019 Move X0, 0x2329000
	020 Move X0, [X0+1264]
	021 Call 0x1C17CF4
	022 Move X0, 0x2329000
	023 Move X0, [X0+1272]
	024 Call 0x1C17CF4
	025 Move X0, 0x2329000
	026 Move X0, [X0+1280]
	027 Call 0x1C17CF4
	028 Move X0, 0x2327000
	029 Move X0, [X0+440]
	030 Call 0x1C17CF4
	031 Move X0, 0x2325000
	032 Move X0, [X0+4064]
	033 Call 0x1C17CF4
	034 Move X0, 0x2324000
	035 Move X0, [X0+2440]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X20+3049], W8
	039 NotImplemented "Instruction MOVI not yet implemented."
	040 Move [X31+32], X31
	041 Move [X31], V0
	042 Move [X31+8], V0
	043 Move W8, [X19+56]
	044 Compare W8, 0
	045 JumpIfEqual {100}
	046 Move X0, [X19+32]
	047 Move [X19+56], W31
	048 Compare X0, 0
	049 JumpIfEqual {110}
	050 Move X9, 0x2324000
	051 Move X8, [X0]
	052 Move X9, [X9+2440]
	053 Move X2, [X8+1376]
	054 Move X1, [X9]
	055 Move X9, [X8+1368]
	056 NotImplemented "Instruction BLR not yet implemented."
	057 Move X0, [X19+48]
	058 Compare X0, 0
	059 JumpIfEqual {110}
	060 Move X8, 0x2329000
	061 Move X8, [X8+1256]
	062 Move X23, 0x2329000
	063 Move X24, 0x2325000
	064 Move X22, 0x2329000
	065 Move X1, [X8]
	066 Move X23, [X23+1272]
	067 Move X24, [X24+4064]
	068 Move X22, [X22+1264]
	069 Add X8, X31, 0
	070 Call Dictionary`2<Object, Object>.GetEnumerator, X0
	071 Move X1, [X23]
	072 Add X0, X31, 0
	073 Call Enumerator<Object, Object>.MoveNext, X0
	074 Move TEMP, X0
	075 And TEMP, TEMP, 1
	076 Compare TEMP, 1
	077 JumpIfNotEqual {97}
	078 Move X20, [X19+32]
	079 Compare X20, 0
	080 JumpIfEqual {109}
	081 Move X8, [X20]
	082 Move X21, [X31+24]
	083 Move X1, [X8+1360]
	084 Move X9, [X8+1352]
	085 Move X0, X20
	086 NotImplemented "Instruction BLR not yet implemented."
	087 Move X2, [X24]
	088 Move X1, X21
	089 Move X3, X31
	090 Call String.Concat, X0, X1, X2
	091 Move X1, X0
	092 Move X8, [X20]
	093 Move X9, [X8+1368]
	094 Move X2, [X8+1376]
	095 Move X0, X20
	096 NotImplemented "Instruction BLR not yet implemented."
	097 Move X1, [X22]
	098 Add X0, X31, 0
	099 Call Enumerator<Object, Object>.Dispose, X0
	100 Move X20, [X31+96]
	101 Move X19, [X31+104]
	102 Move X22, [X31+80]
	103 Move X21, [X31+88]
	104 Move X24, [X31+64]
	105 Move X23, [X31+72]
	106 Move X30, [X31+48]
	107 Add X31, X31, 112
	108 Return 
	109 Call 0x1C17F20
	110 Call 0x1C17F20
	111 Move X19, X0
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Move X0, X19
	114 Call 0x3EB2AD0
	115 Move X20, [X0]
	116 Call 0x3EB2AE0
	117 Move X1, [X22]
	118 Add X0, X31, 0
	119 Call Enumerator<Object, Object>.Dispose, X0
	120 Compare X20, 0
	121 JumpIfEqual {100}
	122 Move X0, X20
	123 Call 0x1C17F18
	124 Move X20, X31
	125 Move X19, X0
	126 Move X1, [X22]
	127 Add X0, X31, 0
	128 Call Enumerator<Object, Object>.Dispose, X0
	129 Compare X20, 0
	130 JumpIfNotEqual {133}
	131 Move X0, X19
	132 Call 0x1D2D690
	133 Move X0, X20
	134 Call 0x1C17F18
	135 Call 0x1991590

Method: System.Void .ctor()

Disassembly:
	0x01DD0F88 MOV X1, X31
	0x01DD0F8C BL 0x3C3F58C
	0x01DD0F90 CBZ X19, 0x1DD0FA4
	0x01DD0F94 FMOV S3, 1
	0x01DD0F98 MOV X0, X19
	0x01DD0F9C LDP X30, X19, [X31], #0x10
	0x01DD0FA0 B 0x1DD1B94
	0x01DD0FA4 BL 0x1C16F20
	0x01DD0FA8 CMP W1, 0x1
	0x01DD0FAC B.EQ 0x1DD0FB8
	0x01DD0FB0 CBNZ W1, 0x1DD0FBC
	0x01DD0FB4 B 0x1DD1B94
	0x01DD0FB8 B 0x1DC15C4
	0x01DD0FBC RET
	0x01DD0FC0 STP X30, X19, [X31 - 0x10]!
	0x01DD0FC4 LDR X19, [X0 + 0x28]
	0x01DD0FC8 MOV X1, X31
	0x01DD0FCC BL 0x3C32E90
	0x01DD0FD0 CBZ X0, 0x1DD0FF0
	0x01DD0FD4 MOV X1, X31
	0x01DD0FD8 BL 0x3C3F58C
	0x01DD0FDC CBZ X19, 0x1DD0FF0
	0x01DD0FE0 FMOV S3, 1
	0x01DD0FE4 MOV X0, X19
	0x01DD0FE8 LDP X30, X19, [X31], #0x10
	0x01DD0FEC B 0x1DD1B94
	0x01DD0FF0 BL 0x1C16F20
	0x01DD0FF4 STP X30, X19, [X31 - 0x10]!
	0x01DD0FF8 LDR X19, [X0 + 0x30]
	0x01DD0FFC MOV X1, X31
	0x01DD1000 BL 0x3C32E90

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2609000
	007 Move X22, 0x2325000
	008 Move X20, 0x2325000
	009 Move W8, [X21+3050]
	010 Move X22, [X22+1744]
	011 Move X20, [X20+1728]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x2325000
	018 Move X0, [X0+1728]
	019 Call 0x1C17CF4
	020 Move X0, 0x2325000
	021 Move X0, [X0+1744]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+3050], W8
	025 Move X0, [X22]
	026 Call 0x1C17F10
	027 Move X1, [X20]
	028 Move X20, X0
	029 Call Dictionary`2<Object, Object>..ctor, X0
	030 Move [X19+48], X20
	031 Move X0, X19
	032 Move X20, [X31+32]
	033 Move X19, [X31+40]
	034 Move X22, [X31+16]
	035 Move X21, [X31+24]
	036 Move X1, X31
	037 Move X30, [X31+48]
	038 Call MonoBehaviour..ctor, X0
	039 Return 

