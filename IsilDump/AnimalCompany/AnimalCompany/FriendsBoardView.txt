Type: AnimalCompany.FriendsBoardView

Method: UnityEngine.RectTransform get_scrollContent()

Disassembly:
	0x01D85BEC BL 0x1C16F20
	0x01D85BF0 STR X30, [X31 - 0x10]!

ISIL:
	001 Move X0, [X0+192]
	002 Return X0

Method: AnimalCompany.SlowHoverButton get_clearNotificationsButton()

Disassembly:
	0x01D85BF4 LDR X0, [X0 + 0x28]
	0x01D85BF8 CBZ X0, 0x1D85C10

ISIL:
	001 Move X0, [X0+176]
	002 Return X0

Method: System.Void OnEnable()

Disassembly:
	0x01D85BFC LDR X8, [X0]
	0x01D85C00 LDR X2, [X8 + 0x548]
	0x01D85C04 LDR X1, [X8 + 0x550]
	0x01D85C08 LDR X30, [X31], #0x10
	0x01D85C0C BR X2
	0x01D85C10 BL 0x1C16F20
	0x01D85C14 STR X30, [X31 - 0x20]!
	0x01D85C18 STP X20, X19, [X31 + 0x10]
	0x01D85C1C ADRP X20, 0x2653000
	0x01D85C20 LDRB W8, [X20 + 0x988]
	0x01D85C24 MOV X19, X1
	0x01D85C28 TBNZ X8, 0x0, 0x1D85C40
	0x01D85C2C ADRP X0, 0x2371000
	0x01D85C30 LDR X0, [X0 + 0x940]
	0x01D85C34 BL 0x1C16CF4
	0x01D85C38 MOVZ W8, 0x1
	0x01D85C3C STRB W8, [X20 + 0x988]
	0x01D85C40 STR X31, [X31 + 0x8]
	0x01D85C44 CBZ X19, 0x1D85C78
	0x01D85C48 ADRP X8, 0x2371000
	0x01D85C4C LDR X8, [X8 + 0x940]
	0x01D85C50 ADD X1, X31, 0x8
	0x01D85C54 MOV X0, X19
	0x01D85C58 LDR X2, [X8]
	0x01D85C5C BL 0x21A4990
	0x01D85C60 LDR X8, [X31 + 0x8]
	0x01D85C64 LDP X20, X19, [X31 + 0x10]
	0x01D85C68 ANDS W31, W0, 0x1
	0x01D85C6C CSEL X0, X8, X31, NE
	0x01D85C70 LDR X30, [X31], #0x20
	0x01D85C74 RET
	0x01D85C78 BL 0x1C16F20
	0x01D85C7C STP X30, X21, [X31 - 0x20]!
	0x01D85C80 STP X20, X19, [X31 + 0x10]
	0x01D85C84 ADRP X20, 0x2653000
	0x01D85C88 ADRP X21, 0x236E000
	0x01D85C8C LDRB W8, [X20 + 0x989]
	0x01D85C90 LDR X21, [X21 + 0x598]
	0x01D85C94 MOV X19, X1
	0x01D85C98 TBNZ X8, 0x0, 0x1D85CB0
	0x01D85C9C ADRP X0, 0x236E000
	0x01D85CA0 LDR X0, [X0 + 0x598]
	0x01D85CA4 BL 0x1C16CF4
	0x01D85CA8 MOVZ W8, 0x1
	0x01D85CAC STRB W8, [X20 + 0x989]
	0x01D85CB0 LDR X0, [X21]
	0x01D85CB4 LDR W8, [X0 + 0xE0]
	0x01D85CB8 CBNZ W8, 0x1D85CC0
	0x01D85CBC BL 0x1C16DFC
	0x01D85CC0 MOV X0, X19
	0x01D85CC4 LDP X20, X19, [X31 + 0x10]
	0x01D85CC8 MOV X1, X31
	0x01D85CCC MOV X2, X31
	0x01D85CD0 LDP X30, X21, [X31], #0x20
	0x01D85CD4 B 0x3C354F8
	0x01D85CD8 STR X30, [X31 - 0x10]!
	0x01D85CDC CBZ X1, 0x1D85CEC
	0x01D85CE0 LDR X0, [X1 + 0x48]
	0x01D85CE4 LDR X30, [X31], #0x10
	0x01D85CE8 RET
	0x01D85CEC BL 0x1C16F20
	0x01D85CF0 LDR X0, [X0 + 0x78]
	0x01D85CF4 RET
	0x01D85CF8 STR X30, [X31 - 0x10]!
	0x01D85CFC LDR X0, [X0 + 0x38]
	0x01D85D00 CBZ X0, 0x1D85D1C
	0x01D85D04 MOV X1, X31
	0x01D85D08 BL 0x3C32ECC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x2654000
	008 Move W8, [X20+2418]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x2372000
	015 Move X0, [X0+2320]
	016 Call 0x1C17CF4
	017 Move X0, 0x2371000
	018 Move X0, [X0+1184]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+2418], W8
	022 Move X22, [X19+168]
	023 Compare X22, 0
	024 JumpIfEqual {83}
	025 Move X23, 0x2371000
	026 Move X23, [X23+1184]
	027 Move X21, 0x2372000
	028 Move X20, [X22+32]
	029 Move X0, [X23]
	030 Move X21, [X21+2320]
	031 Call 0x1C17F10
	032 Move X2, [X21]
	033 Move X1, X19
	034 Move X3, X31
	035 Move X21, X0
	036 Call Func`2<Single, Boolean>..ctor, X0, X1, X2
	037 Move X0, X20
	038 Move X1, X21
	039 Move X2, X31
	040 Call Delegate.Combine, X0, X1
	041 Compare X0, 0
	042 JumpIfEqual {59}
	043 Move X21, [X23]
	044 Move X20, X0
	045 Move X1, X21
	046 Call 0x1C17E00
	047 Compare X0, 0
	048 JumpIfEqual {56}
	049 Move [X22+32], X0
	050 Move X21, [X23]
	051 Move X0, X20
	052 Move X1, X21
	053 Call 0x1C17E00
	054 Compare X0, 0
	055 JumpIfNotEqual {60}
	056 Move X0, X20
	057 Move X1, X21
	058 Call 0x1C181E0
	059 Move [X22+32], X31
	060 Move X0, [X19+32]
	061 Compare X0, 0
	062 JumpIfEqual {83}
	063 Move X1, X31
	064 Call RectTransform.get_rect, X0
	065 Move X0, [X19+32]
	066 Move S0, -0.5
	067 Multiply S0, S3, S0
	068 Move [X19+208], S0
	069 Compare X0, 0
	070 JumpIfEqual {83}
	071 Move X1, X31
	072 Call RectTransform.get_rect, X0
	073 Move S0, 0.5
	074 Multiply S0, S3, S0
	075 Move [X19+212], S0
	076 Move X20, [X31+32]
	077 Move X19, [X31+40]
	078 Move X22, [X31+16]
	079 Move X21, [X31+24]
	080 Move X30, [X31+48]
	081 Move X23, [X31+56]
	082 Return 
	083 Call 0x1C17F20

Method: System.Void OnDisable()

Disassembly:
	0x01D85D0C CBZ X0, 0x1D85D1C
	0x01D85D10 MOV X1, X31
	0x01D85D14 LDR X30, [X31], #0x10
	0x01D85D18 B 0x3C357F8
	0x01D85D1C BL 0x1C16F20
	0x01D85D20 STR X30, [X31 - 0x10]!
	0x01D85D24 LDR X0, [X0 + 0x40]
	0x01D85D28 CBZ X0, 0x1D85D44
	0x01D85D2C MOV X1, X31
	0x01D85D30 BL 0x3C35CA4
	0x01D85D34 CBZ X0, 0x1D85D44
	0x01D85D38 MOV X1, X31
	0x01D85D3C LDR X30, [X31], #0x10
	0x01D85D40 B 0x3C357F8
	0x01D85D44 BL 0x1C16F20
	0x01D85D48 LDR W0, [X0 + 0x80]
	0x01D85D4C RET
	0x01D85D50 STR X30, [X31 - 0x40]!
	0x01D85D54 STP X24, X23, [X31 + 0x10]
	0x01D85D58 STP X22, X21, [X31 + 0x20]
	0x01D85D5C STP X20, X19, [X31 + 0x30]
	0x01D85D60 ADRP X21, 0x2653000
	0x01D85D64 LDRB W8, [X21 + 0x98B]
	0x01D85D68 MOV X19, X1
	0x01D85D6C MOV X20, X0
	0x01D85D70 TBNZ X8, 0x0, 0x1D85D88
	0x01D85D74 ADRP X0, 0x236F000
	0x01D85D78 LDR X0, [X0 + 0xE68]
	0x01D85D7C BL 0x1C16CF4
	0x01D85D80 MOVZ W8, 0x1
	0x01D85D84 STRB W8, [X21 + 0x98B]
	0x01D85D88 ADRP X24, 0x236F000
	0x01D85D8C LDR X21, [X20 + 0x88]!
	0x01D85D90 LDR X24, [X24 + 0xE68]
	0x01D85D94 MOV X0, X21
	0x01D85D98 MOV X1, X19
	0x01D85D9C MOV X2, X31
	0x01D85DA0 BL 0x33C0FDC
	0x01D85DA4 CBZ X0, 0x1D85DC4
	0x01D85DA8 LDR X23, [X24]
	0x01D85DAC MOV X22, X0
	0x01D85DB0 MOV X1, X23
	0x01D85DB4 BL 0x1C16E00
	0x01D85DB8 MOV X1, X0
	0x01D85DBC CBNZ X0, 0x1D85DC8
	0x01D85DC0 B 0x1D85DF4
	0x01D85DC4 MOV X1, X31
	0x01D85DC8 MOV X0, X20
	0x01D85DCC MOV X2, X21
	0x01D85DD0 BL 0x1C24138
	0x01D85DD4 CMP X21, X0
	0x01D85DD8 MOV X21, X0
	0x01D85DDC B.NE 0x1D85D94
	0x01D85DE0 LDP X20, X19, [X31 + 0x30]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x2654000
	008 Move W8, [X20+2419]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x2372000
	015 Move X0, [X0+2320]
	016 Call 0x1C17CF4
	017 Move X0, 0x2371000
	018 Move X0, [X0+1184]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+2419], W8
	022 Move X22, [X19+168]
	023 Compare X22, 0
	024 JumpIfEqual {67}
	025 Move X23, 0x2371000
	026 Move X23, [X23+1184]
	027 Move X21, 0x2372000
	028 Move X20, [X22+32]
	029 Move X0, [X23]
	030 Move X21, [X21+2320]
	031 Call 0x1C17F10
	032 Move X2, [X21]
	033 Move X1, X19
	034 Move X3, X31
	035 Move X21, X0
	036 Call Func`2<Single, Boolean>..ctor, X0, X1, X2
	037 Move X0, X20
	038 Move X1, X21
	039 Move X2, X31
	040 Call Delegate.Remove, X0, X1
	041 Compare X0, 0
	042 JumpIfEqual {59}
	043 Move X20, [X23]
	044 Move X19, X0
	045 Move X1, X20
	046 Call 0x1C17E00
	047 Compare X0, 0
	048 JumpIfEqual {56}
	049 Move [X22+32], X0
	050 Move X20, [X23]
	051 Move X0, X19
	052 Move X1, X20
	053 Call 0x1C17E00
	054 Compare X0, 0
	055 JumpIfNotEqual {60}
	056 Move X0, X19
	057 Move X1, X20
	058 Call 0x1C181E0
	059 Move [X22+32], X31
	060 Move X20, [X31+32]
	061 Move X19, [X31+40]
	062 Move X22, [X31+16]
	063 Move X21, [X31+24]
	064 Move X30, [X31+48]
	065 Move X23, [X31+56]
	066 Return 
	067 Call 0x1C17F20

Method: System.Void ShowTab(AnimalCompany.FriendsBoardView/Tab tab)

Disassembly:
	0x01D7E9D8 MOV X0, X22
	0x01D7E9DC MOV X1, X23
	0x01D7E9E0 BL 0x1C171E0
	0x01D7E9E4 STR X30, [X31 - 0x40]!
	0x01D7E9E8 STP X24, X23, [X31 + 0x10]
	0x01D7E9EC STP X22, X21, [X31 + 0x20]
	0x01D7E9F0 STP X20, X19, [X31 + 0x30]
	0x01D7E9F4 ADRP X21, 0x265A000
	0x01D7E9F8 LDRB W8, [X21 + 0x9A6]
	0x01D7E9FC MOV X19, X1
	0x01D7EA00 MOV X20, X0
	0x01D7EA04 TBNZ X8, 0x0, 0x1D7EA1C
	0x01D7EA08 ADRP X0, 0x2376000
	0x01D7EA0C LDR X0, [X0 + 0xE68]
	0x01D7EA10 BL 0x1C16CF4
	0x01D7EA14 MOVZ W8, 0x1
	0x01D7EA18 STRB W8, [X21 + 0x9A6]
	0x01D7EA1C ADRP X24, 0x2376000
	0x01D7EA20 LDR X21, [X20 + 0x80]!
	0x01D7EA24 LDR X24, [X24 + 0xE68]
	0x01D7EA28 MOV X0, X21
	0x01D7EA2C MOV X1, X19
	0x01D7EA30 MOV X2, X31
	0x01D7EA34 BL 0x33C0DE4
	0x01D7EA38 CBZ X0, 0x1D7EA58
	0x01D7EA3C LDR X23, [X24]
	0x01D7EA40 MOV X22, X0
	0x01D7EA44 MOV X1, X23
	0x01D7EA48 BL 0x1C16E00
	0x01D7EA4C MOV X1, X0
	0x01D7EA50 CBNZ X0, 0x1D7EA5C
	0x01D7EA54 B 0x1D7EA88
	0x01D7EA58 MOV X1, X31
	0x01D7EA5C MOV X0, X20
	0x01D7EA60 MOV X2, X21
	0x01D7EA64 BL 0x1C24138
	0x01D7EA68 CMP X21, X0
	0x01D7EA6C MOV X21, X0
	0x01D7EA70 B.NE 0x1D7EA28
	0x01D7EA74 LDP X20, X19, [X31 + 0x30]
	0x01D7EA78 LDP X22, X21, [X31 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W20, W1
	005 Move X1, [X0+40]
	006 Move X2, [X0+104]
	007 NotImplemented "Instruction CMP not yet implemented."
	008 NotImplemented "Instruction CSET not yet implemented."
	009 Move X19, X0
	010 Move [X0+184], W20
	011 Call FriendsBoardView.SetSelectedTab, X0, X1, X2, X3
	012 Move X1, [X19+48]
	013 Move X2, [X19+112]
	014 NotImplemented "Instruction CMP not yet implemented."
	015 NotImplemented "Instruction CSET not yet implemented."
	016 Move X0, X19
	017 Call FriendsBoardView.SetSelectedTab, X0, X1, X2, X3
	018 Move X1, [X19+56]
	019 Move X2, [X19+120]
	020 NotImplemented "Instruction CMP not yet implemented."
	021 NotImplemented "Instruction CSET not yet implemented."
	022 Move X0, X19
	023 Call FriendsBoardView.SetSelectedTab, X0, X1, X2, X3
	024 Move X1, [X19+64]
	025 Move X2, [X19+128]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 NotImplemented "Instruction CSET not yet implemented."
	028 Move X0, X19
	029 Call FriendsBoardView.SetSelectedTab, X0, X1, X2, X3
	030 Move X0, [X19+160]
	031 Compare X0, 0
	032 JumpIfEqual {45}
	033 NotImplemented "Instruction CMP not yet implemented."
	034 NotImplemented "Instruction CSET not yet implemented."
	035 Move X2, X31
	036 Call GameObject.SetActive, X0, X1
	037 Move X0, X19
	038 Call FriendsBoardView.UpdateHeadContainers, X0
	039 Move X0, X19
	040 Move X20, [X31+16]
	041 Move X19, [X31+24]
	042 Move X30, [X31+32]
	043 Call FriendsBoardView.ScrollToTop, X0
	044 Return 
	045 Call 0x1C17F20

Method: System.Void UpdateHeadContainers()

Disassembly:
	0x01D85E84 CMP X21, X0
	0x01D85E88 MOV X21, X0
	0x01D85E8C B.NE 0x1D85E44
	0x01D85E90 LDP X20, X19, [X31 + 0x30]
	0x01D85E94 LDP X22, X21, [X31 + 0x20]
	0x01D85E98 LDP X24, X23, [X31 + 0x10]
	0x01D85E9C LDR X30, [X31], #0x40
	0x01D85EA0 RET
	0x01D85EA4 MOV X0, X22
	0x01D85EA8 MOV X1, X23
	0x01D85EAC BL 0x1C171E0
	0x01D85EB0 STR X30, [X31 - 0x40]!
	0x01D85EB4 STP X24, X23, [X31 + 0x10]
	0x01D85EB8 STP X22, X21, [X31 + 0x20]
	0x01D85EBC STP X20, X19, [X31 + 0x30]
	0x01D85EC0 ADRP X21, 0x2653000
	0x01D85EC4 LDRB W8, [X21 + 0x98F]
	0x01D85EC8 MOV X19, X1
	0x01D85ECC MOV X20, X0
	0x01D85ED0 TBNZ X8, 0x0, 0x1D85EE8
	0x01D85ED4 ADRP X0, 0x236F000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2654000
	005 Move W8, [X20+2420]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x2372000
	012 Move X0, [X0+2328]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2420], W8
	016 Move X0, [X19+192]
	017 Compare X0, 0
	018 JumpIfEqual {23}
	019 Move X8, 0x2372000
	020 Move X8, [X8+2328]
	021 Move X1, [X8]
	022 Call 0x21A553C, X0
	023 Move [X19+200], X0
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X30, [X31+32]
	027 Return 

Method: System.Void Update()

Disassembly:
	0x01D85F80 TBNZ X8, 0x0, 0x1D85F98
	0x01D85F84 ADRP X0, 0x236F000
	0x01D85F88 LDR X0, [X0 + 0xE68]
	0x01D85F8C BL 0x1C16CF4
	0x01D85F90 MOVZ W8, 0x1
	0x01D85F94 STRB W8, [X21 + 0x991]
	0x01D85F98 ADRP X24, 0x236F000
	0x01D85F9C LDR X21, [X20 + 0xA0]!
	0x01D85FA0 LDR X24, [X24 + 0xE68]
	0x01D85FA4 MOV X0, X21
	0x01D85FA8 MOV X1, X19
	0x01D85FAC MOV X2, X31
	0x01D85FB0 BL 0x33C0FDC
	0x01D85FB4 CBZ X0, 0x1D85FD4
	0x01D85FB8 LDR X23, [X24]
	0x01D85FBC MOV X22, X0
	0x01D85FC0 MOV X1, X23
	0x01D85FC4 BL 0x1C16E00
	0x01D85FC8 MOV X1, X0
	0x01D85FCC CBNZ X0, 0x1D85FD8
	0x01D85FD0 B 0x1D86004
	0x01D85FD4 MOV X1, X31
	0x01D85FD8 MOV X0, X20
	0x01D85FDC MOV X2, X21
	0x01D85FE0 BL 0x1C24138
	0x01D85FE4 CMP X21, X0
	0x01D85FE8 MOV X21, X0
	0x01D85FEC B.NE 0x1D85FA4
	0x01D85FF0 LDP X20, X19, [X31 + 0x30]
	0x01D85FF4 LDP X22, X21, [X31 + 0x20]
	0x01D85FF8 LDP X24, X23, [X31 + 0x10]
	0x01D85FFC LDR X30, [X31], #0x40
	0x01D86000 RET
	0x01D86004 MOV X0, X22
	0x01D86008 MOV X1, X23
	0x01D8600C BL 0x1C171E0
	0x01D86010 STR X30, [X31 - 0x40]!
	0x01D86014 STP X24, X23, [X31 + 0x10]
	0x01D86018 STP X22, X21, [X31 + 0x20]
	0x01D8601C STP X20, X19, [X31 + 0x30]
	0x01D86020 ADRP X21, 0x2652000
	0x01D86024 LDRB W8, [X21 + 0x993]
	0x01D86028 MOV X19, X1
	0x01D8602C MOV X20, X0
	0x01D86030 TBNZ X8, 0x0, 0x1D86048
	0x01D86034 ADRP X0, 0x236E000
	0x01D86038 LDR X0, [X0 + 0xE68]
	0x01D8603C BL 0x1C16CF4
	0x01D86040 MOVZ W8, 0x1
	0x01D86044 STRB W8, [X21 + 0x993]
	0x01D86048 ADRP X24, 0x236E000
	0x01D8604C LDR X21, [X20 + 0xA8]!
	0x01D86050 LDR X24, [X24 + 0xE68]
	0x01D86054 MOV X0, X21
	0x01D86058 MOV X1, X19
	0x01D8605C MOV X2, X31
	0x01D86060 BL 0x33C0FDC
	0x01D86064 CBZ X0, 0x1D86084
	0x01D86068 LDR X23, [X24]
	0x01D8606C MOV X22, X0
	0x01D86070 MOV X1, X23
	0x01D86074 BL 0x1C16E00
	0x01D86078 MOV X1, X0
	0x01D8607C CBNZ X0, 0x1D86088
	0x01D86080 B 0x1D860B4
	0x01D86084 MOV X1, X31
	0x01D86088 MOV X0, X20
	0x01D8608C MOV X2, X21
	0x01D86090 BL 0x1C24138
	0x01D86094 CMP X21, X0
	0x01D86098 MOV X21, X0
	0x01D8609C B.NE 0x1D86054
	0x01D860A0 LDP X20, X19, [X31 + 0x30]
	0x01D860A4 LDP X22, X21, [X31 + 0x20]
	0x01D860A8 LDP X24, X23, [X31 + 0x10]
	0x01D860AC LDR X30, [X31], #0x40
	0x01D860B0 RET
	0x01D860B4 MOV X0, X22
	0x01D860B8 MOV X1, X23
	0x01D860BC BL 0x1C171E0
	0x01D860C0 STP X30, X23, [X31 - 0x30]!
	0x01D860C4 STP X22, X21, [X31 + 0x10]
	0x01D860C8 STP X20, X19, [X31 + 0x20]
	0x01D860CC ADRP X20, 0x2652000
	0x01D860D0 LDRB W8, [X20 + 0x994]
	0x01D860D4 MOV X19, X0
	0x01D860D8 TBNZ X8, 0x0, 0x1D8612C
	0x01D860DC ADRP X0, 0x236E000
	0x01D860E0 LDR X0, [X0 + 0xE70]
	0x01D860E4 BL 0x1C16CF4
	0x01D860E8 ADRP X0, 0x2370000
	0x01D860EC LDR X0, [X0 + 0x948]
	0x01D860F0 BL 0x1C16CF4
	0x01D860F4 ADRP X0, 0x2370000
	0x01D860F8 LDR X0, [X0 + 0x950]
	0x01D860FC BL 0x1C16CF4
	0x01D86100 ADRP X0, 0x2370000
	0x01D86104 LDR X0, [X0 + 0x958]
	0x01D86108 BL 0x1C16CF4
	0x01D8610C ADRP X0, 0x2370000
	0x01D86110 LDR X0, [X0 + 0x960]
	0x01D86114 BL 0x1C16CF4
	0x01D86118 ADRP X0, 0x2370000
	0x01D8611C LDR X0, [X0 + 0x968]
	0x01D86120 BL 0x1C16CF4
	0x01D86124 MOVZ W8, 0x1
	0x01D86128 STRB W8, [X20 + 0x994]
	0x01D8612C LDR X23, [X19 + 0x48]
	0x01D86130 CBZ X23, 0x1D86360
	0x01D86134 ADRP X22, 0x236E000
	0x01D86138 LDR X22, [X22 + 0xE70]
	0x01D8613C ADRP X21, 0x2370000
	0x01D86140 LDR X20, [X23 + 0x20]
	0x01D86144 LDR X0, [X22]
	0x01D86148 LDR X21, [X21 + 0x968]
	0x01D8614C BL 0x1C16F10
	0x01D86150 LDR X2, [X21]
	0x01D86154 MOV X1, X19
	0x01D86158 MOV X3, X31
	0x01D8615C MOV X21, X0
	0x01D86160 BL 0x3314368
	0x01D86164 MOV X0, X20
	0x01D86168 MOV X1, X21
	0x01D8616C MOV X2, X31
	0x01D86170 BL 0x33C0DE4
	0x01D86174 LDR X1, [X22]
	0x01D86178 CBZ X0, 0x1D8619C
	0x01D8617C LDR X8, [X0]
	0x01D86180 CMP X8, X1
	0x01D86184 B.NE 0x1D86348
	0x01D86188 STR X0, [X23 + 0x20]
	0x01D8618C LDR X8, [X0]
	0x01D86190 CMP X8, X1
	0x01D86194 B.EQ 0x1D861A0
	0x01D86198 B 0x1D86348
	0x01D8619C STR X0, [X23 + 0x20]
	0x01D861A0 LDR X23, [X19 + 0x50]
	0x01D861A4 CBZ X23, 0x1D86360
	0x01D861A8 ADRP X21, 0x2370000
	0x01D861AC LDR X20, [X23 + 0x20]
	0x01D861B0 LDR X21, [X21 + 0x948]
	0x01D861B4 MOV X0, X1
	0x01D861B8 BL 0x1C16F10
	0x01D861BC LDR X2, [X21]
	0x01D861C0 MOV X1, X19
	0x01D861C4 MOV X3, X31
	0x01D861C8 MOV X21, X0
	0x01D861CC BL 0x3314368
	0x01D861D0 MOV X0, X20
	0x01D861D4 MOV X1, X21
	0x01D861D8 MOV X2, X31
	0x01D861DC BL 0x33C0DE4
	0x01D861E0 LDR X1, [X22]
	0x01D861E4 CBZ X0, 0x1D86208
	0x01D861E8 LDR X8, [X0]
	0x01D861EC CMP X8, X1
	0x01D861F0 B.NE 0x1D86348
	0x01D861F4 STR X0, [X23 + 0x20]
	0x01D861F8 LDR X8, [X0]
	0x01D861FC CMP X8, X1
	0x01D86200 B.EQ 0x1D8620C
	0x01D86204 B 0x1D86348
	0x01D86208 STR X0, [X23 + 0x20]
	0x01D8620C LDR X23, [X19 + 0x58]
	0x01D86210 CBZ X23, 0x1D86360
	0x01D86214 ADRP X21, 0x2370000
	0x01D86218 LDR X20, [X23 + 0x20]
	0x01D8621C LDR X21, [X21 + 0x958]
	0x01D86220 MOV X0, X1
	0x01D86224 BL 0x1C16F10
	0x01D86228 LDR X2, [X21]
	0x01D8622C MOV X1, X19
	0x01D86230 MOV X3, X31
	0x01D86234 MOV X21, X0
	0x01D86238 BL 0x3314368
	0x01D8623C MOV X0, X20
	0x01D86240 MOV X1, X21
	0x01D86244 MOV X2, X31
	0x01D86248 BL 0x33C0DE4
	0x01D8624C LDR X1, [X22]
	0x01D86250 CBZ X0, 0x1D86274
	0x01D86254 LDR X8, [X0]
	0x01D86258 CMP X8, X1
	0x01D8625C B.NE 0x1D86348
	0x01D86260 STR X0, [X23 + 0x20]
	0x01D86264 LDR X8, [X0]
	0x01D86268 CMP X8, X1
	0x01D8626C B.EQ 0x1D86278
	0x01D86270 B 0x1D86348
	0x01D86274 STR X0, [X23 + 0x20]
	0x01D86278 LDR X23, [X19 + 0x60]
	0x01D8627C CBZ X23, 0x1D86360
	0x01D86280 ADRP X21, 0x2370000
	0x01D86284 LDR X20, [X23 + 0x20]
	0x01D86288 LDR X21, [X21 + 0x960]
	0x01D8628C MOV X0, X1
	0x01D86290 BL 0x1C16F10
	0x01D86294 LDR X2, [X21]
	0x01D86298 MOV X1, X19
	0x01D8629C MOV X3, X31
	0x01D862A0 MOV X21, X0
	0x01D862A4 BL 0x3314368
	0x01D862A8 MOV X0, X20
	0x01D862AC MOV X1, X21
	0x01D862B0 MOV X2, X31
	0x01D862B4 BL 0x33C0DE4
	0x01D862B8 LDR X1, [X22]
	0x01D862BC CBZ X0, 0x1D862E0
	0x01D862C0 LDR X8, [X0]
	0x01D862C4 CMP X8, X1
	0x01D862C8 B.NE 0x1D86348
	0x01D862CC STR X0, [X23 + 0x20]
	0x01D862D0 LDR X8, [X0]
	0x01D862D4 CMP X8, X1
	0x01D862D8 B.EQ 0x1D862E4
	0x01D862DC B 0x1D86348
	0x01D862E0 STR X0, [X23 + 0x20]
	0x01D862E4 LDR X23, [X19 + 0x70]
	0x01D862E8 CBZ X23, 0x1D86360
	0x01D862EC ADRP X21, 0x2370000
	0x01D862F0 LDR X20, [X23 + 0x20]
	0x01D862F4 LDR X21, [X21 + 0x950]
	0x01D862F8 MOV X0, X1
	0x01D862FC BL 0x1C16F10
	0x01D86300 LDR X2, [X21]
	0x01D86304 MOV X1, X19
	0x01D86308 MOV X3, X31

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+16], D14
	003 Move [X31+32], D13
	004 Move [X31+40], D12
	005 Move [X31+48], D11
	006 Move [X31+56], D10
	007 Move [X31+64], D9
	008 Move [X31+72], D8
	009 Move [X31+80], X29
	010 Move [X31+88], X30
	011 Move [X31+96], X28
	012 Move [X31+104], X27
	013 Move [X31+112], X26
	014 Move [X31+120], X25
	015 Move [X31+128], X24
	016 Move [X31+136], X23
	017 Move [X31+144], X22
	018 Move [X31+152], X21
	019 Move [X31+160], X20
	020 Move [X31+168], X19
	021 Move X20, 0x2654000
	022 Move W8, [X20+2421]
	023 Move X19, X0
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {33}
	028 Move X0, 0x236F000
	029 Move X0, [X0+1432]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X20+2421], W8
	033 Move X0, [X19+192]
	034 Compare X0, 0
	035 JumpIfEqual {273}
	036 Move X1, X31
	037 Call RectTransform.get_rect, X0
	038 Move X0, [X19+32]
	039 Compare X0, 0
	040 JumpIfEqual {273}
	041 Move X1, X31
	042 Move V8, V3
	043 Call RectTransform.get_rect, X0
	044 NotImplemented "Instruction FCMP not yet implemented."
	045 Move X23, [X19+200]
	046 Compare X23, 0
	047 JumpIfEqual {193}
	048 Move X8, [X23+24]
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move X27, 0x236E000
	051 Move X20, 0x236E000
	052 Move X27, [X27+1432]
	053 Move X20, [X20+1440]
	054 Move X24, X31
	055 Move W9, W31
	056 And X8, X8, 0
	057 Add X25, X23, 32
	058 Move S10, 20
	059 Move X28, 0x2653000
	060 Move W29, 1
	061 Move X26, 0x2653000
	062 Move S11, -20
	063 Move S12, 1
	064 Move S13, W31
	065 Move [X31+28], W9
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move X0, [X27]
	068 Move X21, [X25]
	069 Move W8, [X0+224]
	070 Compare W8, 0
	071 JumpIfNotEqual {73}
	072 Call 0x1C17DFC
	073 Move X0, X21
	074 Move X1, X31
	075 Move X2, X31
	076 Call Object.op_Equality, X0, X1
	077 Move TEMP, X0
	078 And TEMP, TEMP, 1
	079 Compare TEMP, 1
	080 JumpIfEqual {189}
	081 Compare X21, 0
	082 JumpIfEqual {273}
	083 Move X0, [X21+32]
	084 Compare X0, 0
	085 JumpIfEqual {273}
	086 Move X1, X31
	087 Call Component.get_transform, X0
	088 Compare X0, 0
	089 JumpIfEqual {273}
	090 Move X22, [X19+32]
	091 Move X1, X31
	092 Move X21, X0
	093 Call Transform.get_position, X0
	094 Compare X22, 0
	095 JumpIfEqual {273}
	096 Move X0, X22
	097 Move X1, X31
	098 Call Transform.InverseTransformPoint, X0, X1
	099 Move V0, [X19+208]
	100 Move V8, V1
	101 Add S0, S0, S10
	102 NotImplemented "Instruction FCMP not yet implemented."
	103 Move W8, [X28+2139]
	104 Compare W8, 0
	105 JumpIfNotEqual {109}
	106 Move X0, X20
	107 Call 0x1C17CF4
	108 Move [X28+2139], W29
	109 Move X8, [X20]
	110 Move W9, [X26+1923]
	111 Move X8, [X8+184]
	112 NotImplemented "Instruction LDUR not yet implemented."
	113 Move V9, [X8+20]
	114 Compare W9, 0
	115 JumpIfNotEqual {121}
	116 Move X0, X20
	117 Call 0x1C17CF4
	118 Move X8, [X20]
	119 Move [X26+1923], W29
	120 Move X8, [X8+184]
	121 Move V2, [X19+208]
	122 Move V1, [X8]
	123 Move V0, [X8+8]
	124 Add S3, S2, S10
	125 Add S4, S2, S11
	126 NotImplemented "Instruction FCMP not yet implemented."
	127 Move S2, W31
	128 Subtract S5, S8, S3
	129 Subtract S3, S4, S3
	130 NotImplemented "Instruction FDIV not yet implemented."
	131 NotImplemented "Instruction FCMP not yet implemented."
	132 NotImplemented "Instruction FMIN not yet implemented."
	133 NotImplemented "Instruction FMAX not yet implemented."
	134 Subtract V1, V1, V14
	135 Subtract S0, S0, S9
	136 NotImplemented "Instruction INVALID not yet implemented."
	137 Multiply S2, S0, S2
	138 Add V0, V14, V1
	139 Move W8, [X28+2139]
	140 Move V14, [X19+212]
	141 Compare W8, 0
	142 JumpIfNotEqual {146}
	143 Move X0, X20
	144 Call 0x1C17CF4
	145 Move [X28+2139], W29
	146 Move X8, [X20]
	147 Add S1, S14, S11
	148 NotImplemented "Instruction FCMP not yet implemented."
	149 Move X8, [X8+184]
	150 NotImplemented "Instruction LDUR not yet implemented."
	151 Move V9, [X8+20]
	152 Move W9, [X26+1923]
	153 Compare W9, 0
	154 JumpIfNotEqual {162}
	155 Move X0, X20
	156 Move [X31], V0
	157 Call 0x1C17CF4
	158 Move X8, [X20]
	159 Move [X26+1923], W29
	160 Move V0, [X31]
	161 Move X8, [X8+184]
	162 Move V2, [X19+212]
	163 Move V1, [X8]
	164 Move V6, [X8+8]
	165 Add S3, S2, S11
	166 Add S4, S2, S10
	167 NotImplemented "Instruction FCMP not yet implemented."
	168 Move S2, W31
	169 Subtract S5, S8, S3
	170 Subtract S3, S4, S3
	171 NotImplemented "Instruction FDIV not yet implemented."
	172 NotImplemented "Instruction FCMP not yet implemented."
	173 NotImplemented "Instruction FMIN not yet implemented."
	174 NotImplemented "Instruction FMAX not yet implemented."
	175 Subtract V1, V1, V0
	176 Subtract S3, S6, S9
	177 NotImplemented "Instruction INVALID not yet implemented."
	178 Multiply S2, S3, S2
	179 Add V0, V0, V1
	180 Add S9, S9, S2
	181 Move S1, V0.S[1]
	182 Move X0, X21
	183 Move V2, V9
	184 Move X1, X31
	185 Call Transform.set_localScale, X0, X1
	186 Move W8, [X23+24]
	187 Add X24, X24, 1
	188 NotImplemented "Instruction CMP not yet implemented."
	189 Move W8, [X23+24]
	190 Add X24, X24, 1
	191 Move W9, 1
	192 NotImplemented "Instruction CMP not yet implemented."
	193 Move X0, [X19+168]
	194 Compare X0, 0
	195 JumpIfEqual {273}
	196 Move X1, X31
	197 Call Component.get_gameObject, X0
	198 Compare X0, 0
	199 JumpIfEqual {273}
	200 Move X20, [X31+160]
	201 Move X19, [X31+168]
	202 Move X22, [X31+144]
	203 Move X21, [X31+152]
	204 Move X24, [X31+128]
	205 Move X23, [X31+136]
	206 Move X26, [X31+112]
	207 Move X25, [X31+120]
	208 Move X28, [X31+96]
	209 Move X27, [X31+104]
	210 Move X29, [X31+80]
	211 Move X30, [X31+88]
	212 Move D9, [X31+64]
	213 Move D8, [X31+72]
	214 Move D11, [X31+48]
	215 Move D10, [X31+56]
	216 Move D13, [X31+32]
	217 Move D12, [X31+40]
	218 Move V14, [X31+16]
	219 Move W1, W31
	220 Move X2, X31
	221 Add X31, X31, 176
	222 Call GameObject.SetActive, X0, X1
	223 Return 
	224 Move W8, [X31+28]
	225 Move TEMP, X8
	226 And TEMP, TEMP, 1
	227 Compare TEMP, 1
	228 JumpIfNotEqual {252}
	229 Move X0, X19
	230 Move X20, [X31+160]
	231 Move X19, [X31+168]
	232 Move X22, [X31+144]
	233 Move X21, [X31+152]
	234 Move X24, [X31+128]
	235 Move X23, [X31+136]
	236 Move X26, [X31+112]
	237 Move X25, [X31+120]
	238 Move X28, [X31+96]
	239 Move X27, [X31+104]
	240 Move X29, [X31+80]
	241 Move X30, [X31+88]
	242 Move D9, [X31+64]
	243 Move D8, [X31+72]
	244 Move D11, [X31+48]
	245 Move D10, [X31+56]
	246 Move D13, [X31+32]
	247 Move D12, [X31+40]
	248 Move V14, [X31+16]
	249 Add X31, X31, 176
	250 Call FriendsBoardView.UpdateHeadContainers, X0
	251 Return 
	252 Move X20, [X31+160]
	253 Move X19, [X31+168]
	254 Move X22, [X31+144]
	255 Move X21, [X31+152]
	256 Move X24, [X31+128]
	257 Move X23, [X31+136]
	258 Move X26, [X31+112]
	259 Move X25, [X31+120]
	260 Move X28, [X31+96]
	261 Move X27, [X31+104]
	262 Move X29, [X31+80]
	263 Move X30, [X31+88]
	264 Move D9, [X31+64]
	265 Move D8, [X31+72]
	266 Move D11, [X31+48]
	267 Move D10, [X31+56]
	268 Move D13, [X31+32]
	269 Move D12, [X31+40]
	270 Move V14, [X31+16]
	271 Add X31, X31, 176
	272 Return 
	273 Call 0x1C17F20
	274 Call 0x1C17F28

Method: System.Boolean OnTryScroll(System.Single dist)

Disassembly:
	0x01D8630C MOV X21, X0
	0x01D86310 BL 0x3314368
	0x01D86314 MOV X0, X20
	0x01D86318 MOV X1, X21
	0x01D8631C MOV X2, X31
	0x01D86320 BL 0x33C0DE4
	0x01D86324 CBZ X0, 0x1D8634C
	0x01D86328 LDR X1, [X22]
	0x01D8632C LDR X8, [X0]
	0x01D86330 CMP X8, X1
	0x01D86334 B.NE 0x1D86348
	0x01D86338 STR X0, [X23 + 0x20]
	0x01D8633C LDR X8, [X0]
	0x01D86340 CMP X8, X1
	0x01D86344 B.EQ 0x1D86350
	0x01D86348 BL 0x1C171E0
	0x01D8634C STR X0, [X23 + 0x20]
	0x01D86350 LDP X20, X19, [X31 + 0x20]
	0x01D86354 LDP X22, X21, [X31 + 0x10]
	0x01D86358 LDP X30, X23, [X31], #0x30
	0x01D8635C RET
	0x01D86360 BL 0x1C16F20
	0x01D86364 STP X30, X23, [X31 - 0x30]!
	0x01D86368 STP X22, X21, [X31 + 0x10]
	0x01D8636C STP X20, X19, [X31 + 0x20]
	0x01D86370 ADRP X20, 0x2652000
	0x01D86374 LDRB W8, [X20 + 0x995]
	0x01D86378 MOV X19, X0
	0x01D8637C TBNZ X8, 0x0, 0x1D863D0
	0x01D86380 ADRP X0, 0x236E000
	0x01D86384 LDR X0, [X0 + 0xE70]
	0x01D86388 BL 0x1C16CF4
	0x01D8638C ADRP X0, 0x2370000
	0x01D86390 LDR X0, [X0 + 0x948]
	0x01D86394 BL 0x1C16CF4
	0x01D86398 ADRP X0, 0x2370000
	0x01D8639C LDR X0, [X0 + 0x950]
	0x01D863A0 BL 0x1C16CF4
	0x01D863A4 ADRP X0, 0x2370000
	0x01D863A8 LDR X0, [X0 + 0x958]
	0x01D863AC BL 0x1C16CF4
	0x01D863B0 ADRP X0, 0x2370000
	0x01D863B4 LDR X0, [X0 + 0x960]
	0x01D863B8 BL 0x1C16CF4
	0x01D863BC ADRP X0, 0x2370000
	0x01D863C0 LDR X0, [X0 + 0x968]
	0x01D863C4 BL 0x1C16CF4
	0x01D863C8 MOVZ W8, 0x1
	0x01D863CC STRB W8, [X20 + 0x995]
	0x01D863D0 LDR X23, [X19 + 0x48]
	0x01D863D4 CBZ X23, 0x1D86604
	0x01D863D8 ADRP X22, 0x236E000
	0x01D863DC LDR X22, [X22 + 0xE70]
	0x01D863E0 ADRP X21, 0x2370000
	0x01D863E4 LDR X20, [X23 + 0x20]
	0x01D863E8 LDR X0, [X22]
	0x01D863EC LDR X21, [X21 + 0x968]

ISIL:
	001 Move [X31-64], D12
	002 Move [X31+16], D11
	003 Move [X31+24], D10
	004 Move [X31+32], D9
	005 Move [X31+40], D8
	006 Move [X31+48], X30
	007 Move [X31+56], X19
	008 Move X19, X0
	009 Move X0, [X0+192]
	010 Compare X0, 0
	011 JumpIfEqual {68}
	012 Move X1, X31
	013 Move V8, V0
	014 Call RectTransform.get_anchoredPosition, X0
	015 Move X0, [X19+192]
	016 Compare X0, 0
	017 JumpIfEqual {68}
	018 Move X1, X31
	019 Move V9, V1
	020 Call RectTransform.get_rect, X0
	021 Move X0, [X19+192]
	022 Compare X0, 0
	023 JumpIfEqual {68}
	024 Move X1, X31
	025 Move V10, V3
	026 Call RectTransform.get_rect, X0
	027 Move X0, [X19+32]
	028 Compare X0, 0
	029 JumpIfEqual {68}
	030 Move X1, X31
	031 Move V11, V3
	032 Call RectTransform.get_rect, X0
	033 Move V2, [X19+188]
	034 Move S0, -0.5
	035 Move S1, 0.5
	036 Multiply S12, S10, S0
	037 Multiply S0, S11, S1
	038 Subtract S10, S0, S3
	039 Multiply S0, S2, S8
	040 Move X19, [X19+192]
	041 Add S0, S9, S0
	042 NotImplemented "Instruction FCMP not yet implemented."
	043 NotImplemented "Instruction FCSEL not yet implemented."
	044 NotImplemented "Instruction FCMP not yet implemented."
	045 NotImplemented "Instruction FCSEL not yet implemented."
	046 Compare X19, 0
	047 JumpIfEqual {68}
	048 Move X0, X19
	049 Move X1, X31
	050 Call RectTransform.get_anchoredPosition, X0
	051 Move X0, X19
	052 Move V1, V8
	053 Move X1, X31
	054 Call RectTransform.set_anchoredPosition, X0, X1
	055 NotImplemented "Instruction FCMP not yet implemented."
	056 NotImplemented "Instruction CSET not yet implemented."
	057 NotImplemented "Instruction FCMP not yet implemented."
	058 Move X30, [X31+48]
	059 Move X19, [X31+56]
	060 Move D9, [X31+32]
	061 Move D8, [X31+40]
	062 Move D11, [X31+16]
	063 Move D10, [X31+24]
	064 NotImplemented "Instruction CSET not yet implemented."
	065 And W0, W8, W9
	066 Move V12, [X31+64]
	067 Return X0
	068 Call 0x1C17F20

Method: System.Void ScrollToTop()

Disassembly:
	0x01D85ED8 LDR X0, [X0 + 0xE68]
	0x01D85EDC BL 0x1C16CF4
	0x01D85EE0 MOVZ W8, 0x1
	0x01D85EE4 STRB W8, [X21 + 0x98F]
	0x01D85EE8 ADRP X24, 0x236F000
	0x01D85EEC LDR X21, [X20 + 0x98]!
	0x01D85EF0 LDR X24, [X24 + 0xE68]
	0x01D85EF4 MOV X0, X21
	0x01D85EF8 MOV X1, X19
	0x01D85EFC MOV X2, X31
	0x01D85F00 BL 0x33C0FDC
	0x01D85F04 CBZ X0, 0x1D85F24
	0x01D85F08 LDR X23, [X24]
	0x01D85F0C MOV X22, X0
	0x01D85F10 MOV X1, X23
	0x01D85F14 BL 0x1C16E00
	0x01D85F18 MOV X1, X0
	0x01D85F1C CBNZ X0, 0x1D85F28
	0x01D85F20 B 0x1D85F54
	0x01D85F24 MOV X1, X31
	0x01D85F28 MOV X0, X20
	0x01D85F2C MOV X2, X21
	0x01D85F30 BL 0x1C24138
	0x01D85F34 CMP X21, X0
	0x01D85F38 MOV X21, X0
	0x01D85F3C B.NE 0x1D85EF4
	0x01D85F40 LDP X20, X19, [X31 + 0x30]
	0x01D85F44 LDP X22, X21, [X31 + 0x20]
	0x01D85F48 LDP X24, X23, [X31 + 0x10]
	0x01D85F4C LDR X30, [X31], #0x40
	0x01D85F50 RET
	0x01D85F54 MOV X0, X22
	0x01D85F58 MOV X1, X23
	0x01D85F5C BL 0x1C171E0
	0x01D85F60 STR X30, [X31 - 0x40]!
	0x01D85F64 STP X24, X23, [X31 + 0x10]
	0x01D85F68 STP X22, X21, [X31 + 0x20]
	0x01D85F6C STP X20, X19, [X31 + 0x30]
	0x01D85F70 ADRP X21, 0x2653000
	0x01D85F74 LDRB W8, [X21 + 0x991]
	0x01D85F78 MOV X19, X1
	0x01D85F7C MOV X20, X0

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2654000
	007 Move X20, 0x2372000
	008 Move W8, [X21+2422]
	009 Move X20, [X20+2336]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x2372000
	016 Move X0, [X0+2336]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+2422], W8
	020 Move X0, [X20]
	021 Move X20, [X19+192]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X0, X20
	027 Move X1, X31
	028 Call LayoutRebuilder.ForceRebuildLayoutImmediate, X0
	029 Move X20, [X19+192]
	030 Compare X20, 0
	031 JumpIfEqual {53}
	032 Move X0, X20
	033 Move X1, X31
	034 Call RectTransform.get_anchoredPosition, X0
	035 Move X0, [X19+192]
	036 Compare X0, 0
	037 JumpIfEqual {53}
	038 Move X1, X31
	039 Move V8, V0
	040 Call RectTransform.get_rect, X0
	041 Move X0, X20
	042 Move X20, [X31+32]
	043 Move X19, [X31+40]
	044 Move X30, [X31+16]
	045 Move X21, [X31+24]
	046 Move S0, -0.5
	047 Multiply S1, S3, S0
	048 Move V0, V8
	049 Move X1, X31
	050 Move V8, [X31+48]
	051 Call RectTransform.set_anchoredPosition, X0, X1
	052 Return 
	053 Call 0x1C17F20

Method: System.Void SetSelectedTab(UnityEngine.Transform tabContent, AnimalCompany.TabButtonView tabButton, System.Boolean selected)

Disassembly:
	0x01D85DE4 LDP X22, X21, [X31 + 0x20]
	0x01D85DE8 LDP X24, X23, [X31 + 0x10]
	0x01D85DEC LDR X30, [X31], #0x40
	0x01D85DF0 RET
	0x01D85DF4 MOV X0, X22
	0x01D85DF8 MOV X1, X23
	0x01D85DFC BL 0x1C171E0
	0x01D85E00 STR X30, [X31 - 0x40]!
	0x01D85E04 STP X24, X23, [X31 + 0x10]
	0x01D85E08 STP X22, X21, [X31 + 0x20]
	0x01D85E0C STP X20, X19, [X31 + 0x30]
	0x01D85E10 ADRP X21, 0x2653000
	0x01D85E14 LDRB W8, [X21 + 0x98D]
	0x01D85E18 MOV X19, X1
	0x01D85E1C MOV X20, X0
	0x01D85E20 TBNZ X8, 0x0, 0x1D85E38
	0x01D85E24 ADRP X0, 0x236F000
	0x01D85E28 LDR X0, [X0 + 0xE68]
	0x01D85E2C BL 0x1C16CF4
	0x01D85E30 MOVZ W8, 0x1
	0x01D85E34 STRB W8, [X21 + 0x98D]
	0x01D85E38 ADRP X24, 0x236F000
	0x01D85E3C LDR X21, [X20 + 0x90]!
	0x01D85E40 LDR X24, [X24 + 0xE68]
	0x01D85E44 MOV X0, X21
	0x01D85E48 MOV X1, X19
	0x01D85E4C MOV X2, X31
	0x01D85E50 BL 0x33C0FDC
	0x01D85E54 CBZ X0, 0x1D85E74
	0x01D85E58 LDR X23, [X24]
	0x01D85E5C MOV X22, X0
	0x01D85E60 MOV X1, X23
	0x01D85E64 BL 0x1C16E00
	0x01D85E68 MOV X1, X0
	0x01D85E6C CBNZ X0, 0x1D85E78
	0x01D85E70 B 0x1D85EA4
	0x01D85E74 MOV X1, X31
	0x01D85E78 MOV X0, X20
	0x01D85E7C MOV X2, X21
	0x01D85E80 BL 0x1C24138

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x2654000
	008 Move W8, [X23+2423]
	009 Move W21, W3
	010 Move X22, X2
	011 Move X20, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x2371000
	018 Move X0, [X0+1720]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X23+2423], W8
	022 Compare X20, 0
	023 JumpIfEqual {55}
	024 Move X0, X20
	025 Move X1, X31
	026 Call Component.get_gameObject, X0
	027 Compare X0, 0
	028 JumpIfEqual {55}
	029 And W23, W21, 1
	030 Move W1, W23
	031 Move X2, X31
	032 Call GameObject.SetActive, X0, X1
	033 Compare X22, 0
	034 JumpIfEqual {55}
	035 Move X0, X22
	036 Move W1, W23
	037 Call TabButtonView.SetSelected, X0, X1
	038 Move TEMP, X21
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfNotEqual {48}
	042 Move X8, 0x2371000
	043 Move X8, [X8+1720]
	044 Move X0, X20
	045 Move X1, [X8]
	046 Call 0x21A4894, X0
	047 Move [X19+192], X0
	048 Move X20, [X31+32]
	049 Move X19, [X31+40]
	050 Move X22, [X31+16]
	051 Move X21, [X31+24]
	052 Move X30, [X31+48]
	053 Move X23, [X31+56]
	054 Return 
	055 Call 0x1C17F20

Method: AnimalCompany.RoomPlayerView CreateRoomPlayerView()

Disassembly:
	0x01D7F6AC LDR X2, [X8]
	0x01D7F6B0 BL 0x2D30578
	0x01D7F6B4 LDR X8, [X23]
	0x01D7F6B8 LDR X8, [X8 + 0xB8]
	0x01D7F6BC STR X21, [X8 + 0x60]
	0x01D7F6C0 LDR X2, [X24]
	0x01D7F6C4 MOV X0, X20
	0x01D7F6C8 MOV X1, X21
	0x01D7F6CC BL 0x21CF224
	0x01D7F6D0 LDR X8, [X23]
	0x01D7F6D4 MOV X20, X0
	0x01D7F6D8 LDR W9, [X8 + 0xE0]
	0x01D7F6DC CBNZ W9, 0x1D7F6EC
	0x01D7F6E0 MOV X0, X8
	0x01D7F6E4 BL 0x1C16DFC
	0x01D7F6E8 LDR X8, [X23]
	0x01D7F6EC LDR X9, [X8 + 0xB8]
	0x01D7F6F0 ADRP X24, 0x2377000
	0x01D7F6F4 LDR X21, [X9 + 0x68]
	0x01D7F6F8 LDR X24, [X24 + 0x588]
	0x01D7F6FC CBNZ X21, 0x1D7F754
	0x01D7F700 LDR W9, [X8 + 0xE0]
	0x01D7F704 CBNZ W9, 0x1D7F714
	0x01D7F708 MOV X0, X8
	0x01D7F70C BL 0x1C16DFC
	0x01D7F710 LDR X8, [X23]
	0x01D7F714 ADRP X9, 0x2377000
	0x01D7F718 LDR X8, [X8 + 0xB8]
	0x01D7F71C LDR X9, [X9 + 0x5A0]
	0x01D7F720 LDR X22, [X8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x265A000
	006 Move X20, 0x2375000
	007 Move W8, [X21+2424]
	008 Move X20, [X20+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x2378000
	015 Move X0, [X0+1376]
	016 Call 0x1C17CF4
	017 Move X0, 0x2375000
	018 Move X0, [X0+1432]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+2424], W8
	022 Move X0, [X20]
	023 Move X21, 0x2378000
	024 Move X20, [X19+72]
	025 Move X19, [X19+40]
	026 Move W8, [X0+224]
	027 Move X21, [X21+1376]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Move X0, X20
	033 Move X1, X19
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X30, [X31+32]
	037 Move X21, [X31+40]
	038 Call 0x222E488, X0, X1
	039 Return X0

Method: AnimalCompany.FriendView CreateFriendView()

Disassembly:
	0x01D7FC8C CBNZ W9, 0x1D7FC9C
	0x01D7FC90 MOV X0, X8
	0x01D7FC94 BL 0x1C16DFC
	0x01D7FC98 LDR X8, [X25]
	0x01D7FC9C LDR X9, [X8 + 0xB8]
	0x01D7FCA0 ADRP X26, 0x2377000
	0x01D7FCA4 LDR X22, [X9 + 0x18]
	0x01D7FCA8 LDR X26, [X26 + 0x5D0]
	0x01D7FCAC CBNZ X22, 0x1D7FD04
	0x01D7FCB0 LDR W9, [X8 + 0xE0]
	0x01D7FCB4 CBNZ W9, 0x1D7FCC4
	0x01D7FCB8 MOV X0, X8
	0x01D7FCBC BL 0x1C16DFC
	0x01D7FCC0 LDR X8, [X25]
	0x01D7FCC4 ADRP X9, 0x2377000
	0x01D7FCC8 LDR X8, [X8 + 0xB8]
	0x01D7FCCC LDR X9, [X9 + 0x600]
	0x01D7FCD0 LDR X23, [X8]
	0x01D7FCD4 LDR X0, [X9]
	0x01D7FCD8 BL 0x1C16F10
	0x01D7FCDC ADRP X8, 0x2377000
	0x01D7FCE0 LDR X8, [X8 + 0x618]
	0x01D7FCE4 MOV X1, X23
	0x01D7FCE8 MOV X3, X31
	0x01D7FCEC MOV X22, X0
	0x01D7FCF0 LDR X2, [X8]
	0x01D7FCF4 BL 0x2D30578
	0x01D7FCF8 LDR X8, [X25]
	0x01D7FCFC LDR X8, [X8 + 0xB8]
	0x01D7FD00 STR X22, [X8 + 0x18]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x265A000
	006 Move X20, 0x2375000
	007 Move W8, [X21+2425]
	008 Move X20, [X20+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x2378000
	015 Move X0, [X0+1384]
	016 Call 0x1C17CF4
	017 Move X0, 0x2375000
	018 Move X0, [X0+1432]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+2425], W8
	022 Move X0, [X20]
	023 Move X21, 0x2378000
	024 Move X20, [X19+80]
	025 Move X19, [X19+48]
	026 Move W8, [X0+224]
	027 Move X21, [X21+1384]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Move X0, X20
	033 Move X1, X19
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X30, [X31+32]
	037 Move X21, [X31+40]
	038 Call 0x222E488, X0, X1
	039 Return X0

Method: AnimalCompany.FriendView CreateBlockedView()

Disassembly:
	0x01D80308 ADRP X10, 0x2376000
	0x01D8030C LDR X8, [X0]
	0x01D80310 LDR X10, [X10 + 0x648]
	0x01D80314 MOV X20, X0
	0x01D80318 LDRH W9, [X8 + 0x12E]
	0x01D8031C LDR X1, [X10]
	0x01D80320 CBZ X9, 0x1D80344
	0x01D80324 LDR X10, [X8 + 0xB0]
	0x01D80328 ADD X10, X10, 0x8
	0x01D8032C LDUR X11, [X10 - 0x8]
	0x01D80330 CMP X11, X1
	0x01D80334 B.EQ 0x1D80354
	0x01D80338 SUBS X9, X9, 0x1
	0x01D8033C ADD X10, X10, 0x10
	0x01D80340 B.NE 0x1D8032C
	0x01D80344 MOV X0, X20
	0x01D80348 MOV W2, W31
	0x01D8034C BL 0x1C5C788
	0x01D80350 B 0x1D80360
	0x01D80354 LDRSW X9, [X10]
	0x01D80358 ADD X8, X8, X9, 0x4, LSL
	0x01D8035C ADD X0, X8, 0x138
	0x01D80360 LDP X8, X1, [X0]
	0x01D80364 ADRP X22, 0x2373000
	0x01D80368 LDR X22, [X22 + 0xE00]
	0x01D8036C MOV X0, X20
	0x01D80370 BLR X8
	0x01D80374 MOV X20, X0
	0x01D80378 CBZ X0, 0x1D80514
	0x01D8037C ADRP X21, 0x2373000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x2659000
	006 Move X20, 0x2374000
	007 Move W8, [X21+2426]
	008 Move X20, [X20+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x2377000
	015 Move X0, [X0+1384]
	016 Call 0x1C17CF4
	017 Move X0, 0x2374000
	018 Move X0, [X0+1432]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+2426], W8
	022 Move X0, [X20]
	023 Move X21, 0x2377000
	024 Move X20, [X19+88]
	025 Move X19, [X19+56]
	026 Move W8, [X0+224]
	027 Move X21, [X21+1384]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Move X0, X20
	033 Move X1, X19
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X30, [X31+32]
	037 Move X21, [X31+40]
	038 Call 0x222E488, X0, X1
	039 Return X0

Method: AnimalCompany.NotificationView CreateNotificationView()

Disassembly:
	0x01D80380 ADRP X23, 0x2376000
	0x01D80384 LDR X21, [X21 + 0xE18]
	0x01D80388 LDR X23, [X23 + 0x650]
	0x01D8038C LDR X8, [X20]
	0x01D80390 LDR X1, [X21]
	0x01D80394 LDRH W9, [X8 + 0x12E]
	0x01D80398 CBZ X9, 0x1D803BC
	0x01D8039C LDR X10, [X8 + 0xB0]
	0x01D803A0 ADD X10, X10, 0x8
	0x01D803A4 LDUR X11, [X10 - 0x8]
	0x01D803A8 CMP X11, X1
	0x01D803AC B.EQ 0x1D803CC
	0x01D803B0 SUBS X9, X9, 0x1
	0x01D803B4 ADD X10, X10, 0x10
	0x01D803B8 B.NE 0x1D803A4
	0x01D803BC MOV X0, X20
	0x01D803C0 MOV W2, W31
	0x01D803C4 BL 0x1C5C788
	0x01D803C8 B 0x1D803D8
	0x01D803CC LDRSW X9, [X10]
	0x01D803D0 ADD X8, X8, X9, 0x4, LSL
	0x01D803D4 ADD X0, X8, 0x138
	0x01D803D8 LDP X8, X1, [X0]
	0x01D803DC MOV X0, X20
	0x01D803E0 BLR X8
	0x01D803E4 TBZ X0, 0x0, 0x1D8045C
	0x01D803E8 LDR X8, [X20]
	0x01D803EC LDR X1, [X23]
	0x01D803F0 LDRH W9, [X8 + 0x12E]
	0x01D803F4 CBZ X9, 0x1D80418

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x2659000
	006 Move X20, 0x2374000
	007 Move W8, [X21+2427]
	008 Move X20, [X20+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x2377000
	015 Move X0, [X0+1392]
	016 Call 0x1C17CF4
	017 Move X0, 0x2374000
	018 Move X0, [X0+1432]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+2427], W8
	022 Move X0, [X20]
	023 Move X21, 0x2377000
	024 Move X20, [X19+96]
	025 Move X19, [X19+64]
	026 Move W8, [X0+224]
	027 Move X21, [X21+1392]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Move X0, X20
	033 Move X1, X19
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X30, [X31+32]
	037 Move X21, [X31+40]
	038 Call 0x222E488, X0, X1
	039 Return X0

Method: System.Void SortFriends()

Disassembly:
	0x01D80A34 ADD X0, X8, 0x138
	0x01D80A38 LDP X8, X1, [X0]
	0x01D80A3C MOV X0, X19
	0x01D80A40 BLR X8
	0x01D80A44 CBNZ X20, 0x1D80A6C
	0x01D80A48 LDP X20, X19, [X31 + 0x30]
	0x01D80A4C LDP X22, X21, [X31 + 0x20]
	0x01D80A50 LDP X30, X23, [X31 + 0x10]
	0x01D80A54 ADD X31, X31, 0x40
	0x01D80A58 RET
	0x01D80A5C BL 0x1C16F20
	0x01D80A60 BL 0x1C16F20
	0x01D80A64 BL 0x1C16F20
	0x01D80A68 BL 0x1C16F20
	0x01D80A6C MOV X0, X20
	0x01D80A70 BL 0x1C16F18
	0x01D80A74 B 0x1D80A88
	0x01D80A78 B 0x1D80A88
	0x01D80A7C B 0x1D80A88
	0x01D80A80 B 0x1D80A88
	0x01D80A84 B 0x1D80A88
	0x01D80A88 CMP W1, 0x1
	0x01D80A8C B.NE 0x1D80AA0
	0x01D80A90 BL 0x3EB1AD0
	0x01D80A94 LDR X20, [X0]
	0x01D80A98 BL 0x3EB1AE0
	0x01D80A9C B 0x1D809E8
	0x01D80AA0 STR X0, [X31 + 0x8]
	0x01D80AA4 MOV X20, X31
	0x01D80AA8 B 0x1D80AB0
	0x01D80AAC STR X0, [X31 + 0x8]
	0x01D80AB0 CBZ X19, 0x1D80B0C
	0x01D80AB4 LDR X8, [X19]
	0x01D80AB8 LDR X1, [X21]
	0x01D80ABC LDRH W9, [X8 + 0x12E]
	0x01D80AC0 CBZ X9, 0x1D80AE4
	0x01D80AC4 LDR X10, [X8 + 0xB0]
	0x01D80AC8 ADD X10, X10, 0x8
	0x01D80ACC LDUR X11, [X10 - 0x8]
	0x01D80AD0 CMP X11, X1
	0x01D80AD4 B.EQ 0x1D80AF4
	0x01D80AD8 SUBS X9, X9, 0x1
	0x01D80ADC ADD X10, X10, 0x10
	0x01D80AE0 B.NE 0x1D80ACC
	0x01D80AE4 MOV X0, X19
	0x01D80AE8 MOV W2, W31
	0x01D80AEC BL 0x1C5C788
	0x01D80AF0 B 0x1D80B00
	0x01D80AF4 LDRSW X9, [X10]
	0x01D80AF8 ADD X8, X8, X9, 0x4, LSL
	0x01D80AFC ADD X0, X8, 0x138
	0x01D80B00 LDP X8, X1, [X0]
	0x01D80B04 MOV X0, X19
	0x01D80B08 BLR X8
	0x01D80B0C CBNZ X20, 0x1D80B18
	0x01D80B10 LDR X0, [X31 + 0x8]
	0x01D80B14 BL 0x1D2C690
	0x01D80B18 MOV X0, X20
	0x01D80B1C BL 0x1C16F18
	0x01D80B20 BL 0x1990590
	0x01D80B24 STR X30, [X31 - 0x10]!
	0x01D80B28 CMP W1, 0x66
	0x01D80B2C B.LE 0x1D80B50
	0x01D80B30 CMP W1, 0x6E
	0x01D80B34 B.EQ 0x1D80B78
	0x01D80B38 CMP W1, 0x72
	0x01D80B3C B.NE 0x1D80B70
	0x01D80B40 LDR X0, [X0 + 0x28]
	0x01D80B44 CBZ X0, 0x1D80B9C
	0x01D80B48 MOV W1, W31
	0x01D80B4C B 0x1D80B94
	0x01D80B50 CMP W1, 0x62
	0x01D80B54 B.EQ 0x1D80B88
	0x01D80B58 CMP W1, 0x66
	0x01D80B5C B.NE 0x1D80B70
	0x01D80B60 LDR X0, [X0 + 0x28]
	0x01D80B64 CBZ X0, 0x1D80B9C
	0x01D80B68 MOVZ W1, 0x1
	0x01D80B6C B 0x1D80B94
	0x01D80B70 LDR X30, [X31], #0x10
	0x01D80B74 RET
	0x01D80B78 LDR X0, [X0 + 0x28]
	0x01D80B7C CBZ X0, 0x1D80B9C
	0x01D80B80 MOVZ W1, 0x3
	0x01D80B84 B 0x1D80B94
	0x01D80B88 LDR X0, [X0 + 0x28]
	0x01D80B8C CBZ X0, 0x1D80B9C
	0x01D80B90 MOVZ W1, 0x2
	0x01D80B94 LDR X30, [X31], #0x10
	0x01D80B98 B 0x1D7D9D8
	0x01D80B9C BL 0x1C16F20
	0x01D80BA0 SUB X31, X31, 0x90
	0x01D80BA4 STP X30, X27, [X31 + 0x40]
	0x01D80BA8 STP X26, X25, [X31 + 0x50]
	0x01D80BAC STP X24, X23, [X31 + 0x60]
	0x01D80BB0 STP X22, X21, [X31 + 0x70]
	0x01D80BB4 STP X20, X19, [X31 + 0x80]
	0x01D80BB8 ADRP X21, 0x2658000
	0x01D80BBC ADRP X20, 0x2373000
	0x01D80BC0 LDRB W8, [X21 + 0x953]
	0x01D80BC4 LDR X20, [X20 + 0x648]
	0x01D80BC8 MOV X19, X0
	0x01D80BCC TBNZ X8, 0x0, 0x1D80C50
	0x01D80BD0 ADRP X0, 0x2373000
	0x01D80BD4 LDR X0, [X0 + 0x648]
	0x01D80BD8 BL 0x1C16CF4
	0x01D80BDC ADRP X0, 0x2376000
	0x01D80BE0 LDR X0, [X0 + 0x6C8]
	0x01D80BE4 BL 0x1C16CF4
	0x01D80BE8 ADRP X0, 0x2376000
	0x01D80BEC LDR X0, [X0 + 0x6D0]
	0x01D80BF0 BL 0x1C16CF4
	0x01D80BF4 ADRP X0, 0x2376000
	0x01D80BF8 LDR X0, [X0 + 0x6D8]
	0x01D80BFC BL 0x1C16CF4
	0x01D80C00 ADRP X0, 0x2376000
	0x01D80C04 LDR X0, [X0 + 0x6E0]
	0x01D80C08 BL 0x1C16CF4
	0x01D80C0C ADRP X0, 0x2376000
	0x01D80C10 LDR X0, [X0 + 0x6E8]
	0x01D80C14 BL 0x1C16CF4
	0x01D80C18 ADRP X0, 0x2374000
	0x01D80C1C LDR X0, [X0 + 0xD70]
	0x01D80C20 BL 0x1C16CF4
	0x01D80C24 ADRP X0, 0x2374000
	0x01D80C28 LDR X0, [X0 + 0x1F8]
	0x01D80C2C BL 0x1C16CF4
	0x01D80C30 ADRP X0, 0x2374000
	0x01D80C34 LDR X0, [X0 + 0x178]
	0x01D80C38 BL 0x1C16CF4
	0x01D80C3C ADRP X0, 0x2376000
	0x01D80C40 LDR X0, [X0 + 0x6F0]
	0x01D80C44 BL 0x1C16CF4
	0x01D80C48 MOVZ W8, 0x1
	0x01D80C4C STRB W8, [X21 + 0x953]
	0x01D80C50 LDR X0, [X20]
	0x01D80C54 STP X31, X31, [X31 + 0x20]
	0x01D80C58 STR X31, [X31 + 0x30]
	0x01D80C5C STR X31, [X31 + 0x18]
	0x01D80C60 LDR W8, [X0 + 0xE0]
	0x01D80C64 CBNZ W8, 0x1D80C6C
	0x01D80C68 BL 0x1C16DFC
	0x01D80C6C ADRP X22, 0x2658000
	0x01D80C70 LDRB W8, [X22 + 0x787]
	0x01D80C74 CBNZ W8, 0x1D80C8C
	0x01D80C78 ADRP X0, 0x2373000
	0x01D80C7C LDR X0, [X0 + 0x648]
	0x01D80C80 BL 0x1C16CF4
	0x01D80C84 MOVZ W8, 0x1
	0x01D80C88 STRB W8, [X22 + 0x787]
	0x01D80C8C LDR X0, [X20]
	0x01D80C90 LDR W8, [X0 + 0xE0]
	0x01D80C94 CBNZ W8, 0x1D80CA0
	0x01D80C98 BL 0x1C16DFC
	0x01D80C9C LDR X0, [X20]
	0x01D80CA0 LDR X8, [X0 + 0xB8]
	0x01D80CA4 LDR X8, [X8]
	0x01D80CA8 CBZ X8, 0x1D80E90
	0x01D80CAC LDR X8, [X8 + 0xE0]
	0x01D80CB0 CBZ X8, 0x1D80E90
	0x01D80CB4 ADRP X9, 0x2374000
	0x01D80CB8 LDR X9, [X9 + 0x178]
	0x01D80CBC LDR X0, [X8 + 0x48]
	0x01D80CC0 LDR X1, [X9]
	0x01D80CC4 BL 0x2651A74
	0x01D80CC8 TBZ X0, 0x0, 0x1D80E5C
	0x01D80CCC LDR X0, [X20]
	0x01D80CD0 LDR W8, [X0 + 0xE0]
	0x01D80CD4 CBNZ W8, 0x1D80CDC
	0x01D80CD8 BL 0x1C16DFC
	0x01D80CDC LDRB W8, [X22 + 0x787]
	0x01D80CE0 CBNZ W8, 0x1D80CF8
	0x01D80CE4 ADRP X0, 0x2373000
	0x01D80CE8 LDR X0, [X0 + 0x648]
	0x01D80CEC BL 0x1C16CF4
	0x01D80CF0 MOVZ W8, 0x1
	0x01D80CF4 STRB W8, [X22 + 0x787]
	0x01D80CF8 LDR X0, [X20]
	0x01D80CFC LDR W8, [X0 + 0xE0]
	0x01D80D00 CBNZ W8, 0x1D80D0C
	0x01D80D04 BL 0x1C16DFC
	0x01D80D08 LDR X0, [X20]
	0x01D80D0C LDR X8, [X0 + 0xB8]
	0x01D80D10 LDR X8, [X8]
	0x01D80D14 CBZ X8, 0x1D80E90
	0x01D80D18 LDR X8, [X8 + 0xB8]
	0x01D80D1C CBZ X8, 0x1D80E90
	0x01D80D20 LDR X8, [X8 + 0xA0]
	0x01D80D24 CBZ X8, 0x1D80E90
	0x01D80D28 LDR X0, [X8 + 0x48]
	0x01D80D2C CBZ X0, 0x1D80E90
	0x01D80D30 ADRP X8, 0x2376000
	0x01D80D34 LDR X8, [X8 + 0x6E8]
	0x01D80D38 LDR X1, [X8]
	0x01D80D3C BL 0x2608758
	0x01D80D40 CBZ X0, 0x1D80E90
	0x01D80D44 ADRP X8, 0x2376000
	0x01D80D48 LDR X8, [X8 + 0x6F0]
	0x01D80D4C LDR X1, [X8]
	0x01D80D50 ADD X8, X31, 0x0
	0x01D80D54 BL 0x275A7AC
	0x01D80D58 LDR V0, [X31]
	0x01D80D5C LDR X8, [X31 + 0x10]
	0x01D80D60 ADRP X23, 0x2376000
	0x01D80D64 ADRP X24, 0x2374000
	0x01D80D68 ADRP X25, 0x2376000
	0x01D80D6C LDR X23, [X23 + 0x6D8]
	0x01D80D70 LDR X24, [X24 + 0x1F8]
	0x01D80D74 LDR X25, [X25 + 0x6C8]
	0x01D80D78 STR V0, [X31 + 0x2]
	0x01D80D7C STR X8, [X31 + 0x30]
	0x01D80D80 ADRP X27, 0x2374000
	0x01D80D84 LDR X27, [X27 + 0xD70]
	0x01D80D88 MOVZ W26, 0x1
	0x01D80D8C LDR X1, [X23]
	0x01D80D90 ADD X0, X31, 0x20
	0x01D80D94 BL 0x2C0B1F0
	0x01D80D98 TBZ X0, 0x0, 0x1D80E48
	0x01D80D9C LDR X8, [X31 + 0x30]
	0x01D80DA0 CBZ X8, 0x1D80E78
	0x01D80DA4 LDR X0, [X8 + 0x48]
	0x01D80DA8 LDR X1, [X24]
	0x01D80DAC BL 0x265C594
	0x01D80DB0 MOV X21, X0
	0x01D80DB4 LDR X0, [X19 + 0x38]
	0x01D80DB8 CBZ X0, 0x1D80E7C
	0x01D80DBC LDR X3, [X25]
	0x01D80DC0 ADD X2, X31, 0x18
	0x01D80DC4 MOV X1, X21
	0x01D80DC8 BL 0x2AA6B2C
	0x01D80DCC TBZ X0, 0x0, 0x1D80D8C
	0x01D80DD0 LDR X0, [X20]
	0x01D80DD4 LDR W8, [X0 + 0xE0]
	0x01D80DD8 CBNZ W8, 0x1D80DE0
	0x01D80DDC BL 0x1C16DFC
	0x01D80DE0 LDRB W8, [X22 + 0x787]
	0x01D80DE4 CBNZ W8, 0x1D80DF4
	0x01D80DE8 MOV X0, X20
	0x01D80DEC BL 0x1C16CF4
	0x01D80DF0 STRB W26, [X22 + 0x787]
	0x01D80DF4 LDR X0, [X20]
	0x01D80DF8 LDR W8, [X0 + 0xE0]
	0x01D80DFC CBNZ W8, 0x1D80E08
	0x01D80E00 BL 0x1C16DFC
	0x01D80E04 LDR X0, [X20]
	0x01D80E08 LDR X8, [X0 + 0xB8]
	0x01D80E0C LDR X8, [X8]
	0x01D80E10 CBZ X8, 0x1D80E80
	0x01D80E14 LDR X8, [X8 + 0xE0]
	0x01D80E18 CBZ X8, 0x1D80E88
	0x01D80E1C LDR X0, [X8 + 0x70]
	0x01D80E20 CBZ X0, 0x1D80E8C
	0x01D80E24 LDR X2, [X27]
	0x01D80E28 MOV X1, X21
	0x01D80E2C BL 0x262DAD8
	0x01D80E30 LDR X8, [X31 + 0x18]
	0x01D80E34 CBZ X8, 0x1D80E84
	0x01D80E38 AND W1, W0, 0x1
	0x01D80E3C MOV X0, X8
	0x01D80E40 BL 0x1D80F38
	0x01D80E44 B 0x1D80D8C
	0x01D80E48 ADRP X8, 0x2376000
	0x01D80E4C LDR X8, [X8 + 0x6D0]
	0x01D80E50 ADD X0, X31, 0x20
	0x01D80E54 LDR X1, [X8]
	0x01D80E58 BL 0x2C0B1EC
	0x01D80E5C LDP X20, X19, [X31 + 0x80]
	0x01D80E60 LDP X22, X21, [X31 + 0x70]
	0x01D80E64 LDP X24, X23, [X31 + 0x60]
	0x01D80E68 LDP X26, X25, [X31 + 0x50]
	0x01D80E6C LDP X30, X27, [X31 + 0x40]
	0x01D80E70 ADD X31, X31, 0x90
	0x01D80E74 RET
	0x01D80E78 BL 0x1C16F20
	0x01D80E7C BL 0x1C16F20
	0x01D80E80 BL 0x1C16F20
	0x01D80E84 BL 0x1C16F20
	0x01D80E88 BL 0x1C16F20
	0x01D80E8C BL 0x1C16F20
	0x01D80E90 BL 0x1C16F20
	0x01D80E94 B 0x1D80EC4
	0x01D80E98 B 0x1D80EC4
	0x01D80E9C B 0x1D80EC4
	0x01D80EA0 B 0x1D80EC4
	0x01D80EA4 B 0x1D80EC4
	0x01D80EA8 B 0x1D80EC4
	0x01D80EAC B 0x1D80EC4
	0x01D80EB0 B 0x1D80EC4
	0x01D80EB4 B 0x1D80EC4
	0x01D80EB8 B 0x1D80EC4
	0x01D80EBC B 0x1D80EC4
	0x01D80EC0 B 0x1D80EC4
	0x01D80EC4 MOV X19, X0
	0x01D80EC8 CMP W1, 0x1
	0x01D80ECC B.NE 0x1D80F00
	0x01D80ED0 MOV X0, X19
	0x01D80ED4 BL 0x3EB1AD0
	0x01D80ED8 LDR X20, [X0]
	0x01D80EDC BL 0x3EB1AE0
	0x01D80EE0 ADRP X8, 0x2376000
	0x01D80EE4 LDR X8, [X8 + 0x6D0]
	0x01D80EE8 ADD X0, X31, 0x20
	0x01D80EEC LDR X1, [X8]
	0x01D80EF0 BL 0x2C0B1EC
	0x01D80EF4 CBZ X20, 0x1D80E5C
	0x01D80EF8 MOV X0, X20
	0x01D80EFC BL 0x1C16F18
	0x01D80F00 MOV X20, X31
	0x01D80F04 B 0x1D80F0C
	0x01D80F08 MOV X19, X0
	0x01D80F0C ADRP X8, 0x2376000
	0x01D80F10 LDR X8, [X8 + 0x6D0]
	0x01D80F14 LDR X1, [X8]
	0x01D80F18 ADD X0, X31, 0x20
	0x01D80F1C BL 0x2C0B1EC
	0x01D80F20 CBNZ X20, 0x1D80F2C
	0x01D80F24 MOV X0, X19
	0x01D80F28 BL 0x1D2C690
	0x01D80F2C MOV X0, X20
	0x01D80F30 BL 0x1C16F18
	0x01D80F34 BL 0x1990590
	0x01D80F38 STP X30, X21, [X31 - 0x20]!
	0x01D80F3C STP X20, X19, [X31 + 0x10]
	0x01D80F40 LDR W8, [X0 + 0x80]
	0x01D80F44 CBZ W8, 0x1D80F54
	0x01D80F48 LDP X20, X19, [X31 + 0x10]
	0x01D80F4C LDP X30, X21, [X31], #0x20
	0x01D80F50 RET
	0x01D80F54 MOV X19, X0
	0x01D80F58 LDR X0, [X0 + 0x40]
	0x01D80F5C CBZ X0, 0x1D80FB4
	0x01D80F60 MOV W20, W1
	0x01D80F64 AND W1, W1, 0x1
	0x01D80F68 MOV X2, X31
	0x01D80F6C BL 0x3C357B4
	0x01D80F70 LDR X0, [X19 + 0x48]
	0x01D80F74 CBZ X0, 0x1D80FB4
	0x01D80F78 MOV X1, X31
	0x01D80F7C BL 0x3C32ECC
	0x01D80F80 MOV X21, X0
	0x01D80F84 TBZ X20, 0x0, 0x1D80F90
	0x01D80F88 MOV W0, W31
	0x01D80F8C B 0x1D80F98
	0x01D80F90 MOV X0, X19
	0x01D80F94 BL 0x1D859E8
	0x01D80F98 CBZ X21, 0x1D80FB4
	0x01D80F9C LDP X20, X19, [X31 + 0x10]
	0x01D80FA0 AND W1, W0, 0x1
	0x01D80FA4 MOV X0, X21
	0x01D80FA8 MOV X2, X31
	0x01D80FAC LDP X30, X21, [X31], #0x20
	0x01D80FB0 B 0x3C357B4
	0x01D80FB4 BL 0x1C16F20
	0x01D80FB8 SUB X31, X31, 0x80
	0x01D80FBC STP X29, X30, [X31 + 0x20]
	0x01D80FC0 STP X28, X27, [X31 + 0x30]
	0x01D80FC4 STP X26, X25, [X31 + 0x40]
	0x01D80FC8 STP X24, X23, [X31 + 0x50]
	0x01D80FCC STP X22, X21, [X31 + 0x60]
	0x01D80FD0 STP X20, X19, [X31 + 0x70]
	0x01D80FD4 ADRP X20, 0x2658000
	0x01D80FD8 LDRB W8, [X20 + 0x954]
	0x01D80FDC MOV X19, X0
	0x01D80FE0 TBNZ X8, 0x0, 0x1D81160
	0x01D80FE4 ADRP X0, 0x2374000
	0x01D80FE8 LDR X0, [X0 + 0xE68]
	0x01D80FEC BL 0x1C16CF4
	0x01D80FF0 ADRP X0, 0x2373000
	0x01D80FF4 LDR X0, [X0 + 0x648]
	0x01D80FF8 BL 0x1C16CF4
	0x01D80FFC ADRP X0, 0x2376000
	0x01D81000 LDR X0, [X0 + 0x4C8]
	0x01D81004 BL 0x1C16CF4
	0x01D81008 ADRP X0, 0x2375000
	0x01D8100C LDR X0, [X0 + 0x6F8]
	0x01D81010 BL 0x1C16CF4
	0x01D81014 ADRP X0, 0x2375000
	0x01D81018 LDR X0, [X0 + 0x700]
	0x01D8101C BL 0x1C16CF4
	0x01D81020 ADRP X0, 0x2375000
	0x01D81024 LDR X0, [X0 + 0x708]
	0x01D81028 BL 0x1C16CF4
	0x01D8102C ADRP X0, 0x2375000
	0x01D81030 LDR X0, [X0 + 0x710]
	0x01D81034 BL 0x1C16CF4
	0x01D81038 ADRP X0, 0x2372000
	0x01D8103C LDR X0, [X0 + 0xEB8]
	0x01D81040 BL 0x1C16CF4
	0x01D81044 ADRP X0, 0x2373000
	0x01D81048 LDR X0, [X0 + 0xCA0]
	0x01D8104C BL 0x1C16CF4

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X21, 0x2659000
	013 Move X20, 0x2377000
	014 Move X25, 0x2377000
	015 Move W8, [X21+2428]
	016 Move X20, [X20+1400]
	017 Move X25, [X25+1408]
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {79}
	023 Move X0, 0x2377000
	024 Move X0, [X0+1400]
	025 Call 0x1C17CF4
	026 Move X0, 0x2377000
	027 Move X0, [X0+1480]
	028 Call 0x1C17CF4
	029 Move X0, 0x2377000
	030 Move X0, [X0+1488]
	031 Call 0x1C17CF4
	032 Move X0, 0x2377000
	033 Move X0, [X0+1496]
	034 Call 0x1C17CF4
	035 Move X0, 0x2377000
	036 Move X0, [X0+1504]
	037 Call 0x1C17CF4
	038 Move X0, 0x2377000
	039 Move X0, [X0+1512]
	040 Call 0x1C17CF4
	041 Move X0, 0x2377000
	042 Move X0, [X0+1520]
	043 Call 0x1C17CF4
	044 Move X0, 0x2377000
	045 Move X0, [X0+1528]
	046 Call 0x1C17CF4
	047 Move X0, 0x2377000
	048 Move X0, [X0+1536]
	049 Call 0x1C17CF4
	050 Move X0, 0x2377000
	051 Move X0, [X0+1544]
	052 Call 0x1C17CF4
	053 Move X0, 0x2377000
	054 Move X0, [X0+1552]
	055 Call 0x1C17CF4
	056 Move X0, 0x2377000
	057 Move X0, [X0+1560]
	058 Call 0x1C17CF4
	059 Move X0, 0x2377000
	060 Move X0, [X0+1568]
	061 Call 0x1C17CF4
	062 Move X0, 0x2377000
	063 Move X0, [X0+1576]
	064 Call 0x1C17CF4
	065 Move X0, 0x2377000
	066 Move X0, [X0+1584]
	067 Call 0x1C17CF4
	068 Move X0, 0x2377000
	069 Move X0, [X0+1592]
	070 Call 0x1C17CF4
	071 Move X0, 0x2377000
	072 Move X0, [X0+1600]
	073 Call 0x1C17CF4
	074 Move X0, 0x2377000
	075 Move X0, [X0+1408]
	076 Call 0x1C17CF4
	077 Move W8, 1
	078 Move [X21+2428], W8
	079 Move X0, [X19+48]
	080 Move X1, [X20]
	081 Call Enumerable.Cast, X0
	082 Move X8, [X25]
	083 Move X20, X0
	084 Move W9, [X8+224]
	085 Compare W9, 0
	086 JumpIfNotEqual {90}
	087 Move X0, X8
	088 Call 0x1C17DFC
	089 Move X8, [X25]
	090 Move X9, [X8+184]
	091 Move X23, 0x2377000
	092 Move X21, [X9+8]
	093 Move X23, [X23+1496]
	094 Compare X21, 0
	095 JumpIfNotEqual {118}
	096 Move W9, [X8+224]
	097 Compare W9, 0
	098 JumpIfNotEqual {102}
	099 Move X0, X8
	100 Call 0x1C17DFC
	101 Move X8, [X25]
	102 Move X9, 0x2377000
	103 Move X8, [X8+184]
	104 Move X9, [X9+1520]
	105 Move X22, [X8]
	106 Move X0, [X9]
	107 Call 0x1C17F10
	108 Move X8, 0x2377000
	109 Move X8, [X8+1544]
	110 Move X1, X22
	111 Move X3, X31
	112 Move X21, X0
	113 Move X2, [X8]
	114 Call Func`2<Object, Object>..ctor, X0, X1, X2
	115 Move X8, [X25]
	116 Move X8, [X8+184]
	117 Move [X8+8], X21
	118 Move X2, [X23]
	119 Move X0, X20
	120 Move X1, X21
	121 Call Enumerable.Select, X0, X1
	122 Move X8, [X25]
	123 Move X20, X0
	124 Move W9, [X8+224]
	125 Compare W9, 0
	126 JumpIfNotEqual {130}
	127 Move X0, X8
	128 Call 0x1C17DFC
	129 Move X8, [X25]
	130 Move X9, [X8+184]
	131 Move X27, 0x2377000
	132 Move X21, [X9+16]
	133 Move X27, [X27+1512]
	134 Compare X21, 0
	135 JumpIfNotEqual {158}
	136 Move W9, [X8+224]
	137 Compare W9, 0
	138 JumpIfNotEqual {142}
	139 Move X0, X8
	140 Call 0x1C17DFC
	141 Move X8, [X25]
	142 Move X9, 0x2377000
	143 Move X8, [X8+184]
	144 Move X9, [X9+1528]
	145 Move X22, [X8]
	146 Move X0, [X9]
	147 Call 0x1C17F10
	148 Move X8, 0x2377000
	149 Move X8, [X8+1552]
	150 Move X1, X22
	151 Move X3, X31
	152 Move X21, X0
	153 Move X2, [X8]
	154 Call Func`2<Object, Boolean>..ctor, X0, X1, X2
	155 Move X8, [X25]
	156 Move X8, [X8+184]
	157 Move [X8+16], X21
	158 Move X2, [X27]
	159 Move X0, X20
	160 Move X1, X21
	161 Call Enumerable.Where, X0, X1
	162 Move X8, [X25]
	163 Move X21, X0
	164 Move W9, [X8+224]
	165 Compare W9, 0
	166 JumpIfNotEqual {170}
	167 Move X0, X8
	168 Call 0x1C17DFC
	169 Move X8, [X25]
	170 Move X9, [X8+184]
	171 Move X26, 0x2377000
	172 Move X22, [X9+24]
	173 Move X26, [X26+1488]
	174 Compare X22, 0
	175 JumpIfNotEqual {198}
	176 Move W9, [X8+224]
	177 Compare W9, 0
	178 JumpIfNotEqual {182}
	179 Move X0, X8
	180 Call 0x1C17DFC
	181 Move X8, [X25]
	182 Move X9, 0x2377000
	183 Move X8, [X8+184]
	184 Move X9, [X9+1536]
	185 Move X23, [X8]
	186 Move X0, [X9]
	187 Call 0x1C17F10
	188 Move X8, 0x2377000
	189 Move X8, [X8+1560]
	190 Move X1, X23
	191 Move X3, X31
	192 Move X22, X0
	193 Move X2, [X8]
	194 Call Func`2<Object, Object>..ctor, X0, X1, X2
	195 Move X8, [X25]
	196 Move X8, [X8+184]
	197 Move [X8+24], X22
	198 Move X2, [X26]
	199 Move X0, X21
	200 Move X1, X22
	201 Call Enumerable.OrderBy, X0, X1
	202 Move X8, [X25]
	203 Move X21, X0
	204 Move W9, [X8+224]
	205 Compare W9, 0
	206 JumpIfNotEqual {210}
	207 Move X0, X8
	208 Call 0x1C17DFC
	209 Move X8, [X25]
	210 Move X9, [X8+184]
	211 Move X22, [X9+32]
	212 Compare X22, 0
	213 JumpIfNotEqual {236}
	214 Move W9, [X8+224]
	215 Compare W9, 0
	216 JumpIfNotEqual {220}
	217 Move X0, X8
	218 Call 0x1C17DFC
	219 Move X8, [X25]
	220 Move X9, 0x2377000
	221 Move X8, [X8+184]
	222 Move X9, [X9+1528]
	223 Move X23, [X8]
	224 Move X0, [X9]
	225 Call 0x1C17F10
	226 Move X8, 0x2377000
	227 Move X8, [X8+1568]
	228 Move X1, X23
	229 Move X3, X31
	230 Move X22, X0
	231 Move X2, [X8]
	232 Call Func`2<Object, Boolean>..ctor, X0, X1, X2
	233 Move X8, [X25]
	234 Move X8, [X8+184]
	235 Move [X8+32], X22
	236 Move X2, [X27]
	237 Move X0, X20
	238 Move X1, X22
	239 Call Enumerable.Where, X0, X1
	240 Move X8, [X25]
	241 Move X22, X0
	242 Move W9, [X8+224]
	243 Compare W9, 0
	244 JumpIfNotEqual {248}
	245 Move X0, X8
	246 Call 0x1C17DFC
	247 Move X8, [X25]
	248 Move X9, [X8+184]
	249 Move X28, 0x2377000
	250 Move X23, [X9+40]
	251 Move X28, [X28+1480]
	252 Compare X23, 0
	253 JumpIfNotEqual {276}
	254 Move W9, [X8+224]
	255 Compare W9, 0
	256 JumpIfNotEqual {260}
	257 Move X0, X8
	258 Call 0x1C17DFC
	259 Move X8, [X25]
	260 Move X9, 0x2377000
	261 Move X8, [X8+184]
	262 Move X9, [X9+1528]
	263 Move X24, [X8]
	264 Move X0, [X9]
	265 Call 0x1C17F10
	266 Move X8, 0x2377000
	267 Move X8, [X8+1576]
	268 Move X1, X24
	269 Move X3, X31
	270 Move X23, X0
	271 Move X2, [X8]
	272 Call Func`2<Object, Boolean>..ctor, X0, X1, X2
	273 Move X8, [X25]
	274 Move X8, [X8+184]
	275 Move [X8+40], X23
	276 Move X2, [X28]
	277 Move X0, X22
	278 Move X1, X23
	279 Call Enumerable.OrderBy, X0, X1
	280 Move X8, [X25]
	281 Move X22, X0
	282 Move W9, [X8+224]
	283 Compare W9, 0
	284 JumpIfNotEqual {288}
	285 Move X0, X8
	286 Call 0x1C17DFC
	287 Move X8, [X25]
	288 Move X9, [X8+184]
	289 Move X28, 0x2377000
	290 Move X23, [X9+48]
	291 Move X28, [X28+1504]
	292 Compare X23, 0
	293 JumpIfNotEqual {316}
	294 Move W9, [X8+224]
	295 Compare W9, 0
	296 JumpIfNotEqual {300}
	297 Move X0, X8
	298 Call 0x1C17DFC
	299 Move X8, [X25]
	300 Move X9, 0x2377000
	301 Move X8, [X8+184]
	302 Move X9, [X9+1536]
	303 Move X24, [X8]
	304 Move X0, [X9]
	305 Call 0x1C17F10
	306 Move X8, 0x2377000
	307 Move X8, [X8+1584]
	308 Move X1, X24
	309 Move X3, X31
	310 Move X23, X0
	311 Move X2, [X8]
	312 Call Func`2<Object, Object>..ctor, X0, X1, X2
	313 Move X8, [X25]
	314 Move X8, [X8+184]
	315 Move [X8+48], X23
	316 Move X2, [X28]
	317 Move X0, X22
	318 Move X1, X23
	319 Call Enumerable.ThenBy, X0, X1
	320 Move X8, [X25]
	321 Move X22, X0
	322 Move W9, [X8+224]
	323 Compare W9, 0
	324 JumpIfNotEqual {328}
	325 Move X0, X8
	326 Call 0x1C17DFC
	327 Move X8, [X25]
	328 Move X9, [X8+184]
	329 Move X23, [X9+56]
	330 Compare X23, 0
	331 JumpIfNotEqual {354}
	332 Move W9, [X8+224]
	333 Compare W9, 0
	334 JumpIfNotEqual {338}
	335 Move X0, X8
	336 Call 0x1C17DFC
	337 Move X8, [X25]
	338 Move X9, 0x2377000
	339 Move X8, [X8+184]
	340 Move X9, [X9+1528]
	341 Move X24, [X8]
	342 Move X0, [X9]
	343 Call 0x1C17F10
	344 Move X8, 0x2377000
	345 Move X8, [X8+1592]
	346 Move X1, X24
	347 Move X3, X31
	348 Move X23, X0
	349 Move X2, [X8]
	350 Call Func`2<Object, Boolean>..ctor, X0, X1, X2
	351 Move X8, [X25]
	352 Move X8, [X8+184]
	353 Move [X8+56], X23
	354 Move X2, [X27]
	355 Move X0, X20
	356 Move X1, X23
	357 Call Enumerable.Where, X0, X1
	358 Move X8, [X25]
	359 Move X20, X0
	360 Move W9, [X8+224]
	361 Compare W9, 0
	362 JumpIfNotEqual {366}
	363 Move X0, X8
	364 Call 0x1C17DFC
	365 Move X8, [X25]
	366 Move X9, [X8+184]
	367 Move X23, [X9+64]
	368 Compare X23, 0
	369 JumpIfNotEqual {392}
	370 Move W9, [X8+224]
	371 Compare W9, 0
	372 JumpIfNotEqual {376}
	373 Move X0, X8
	374 Call 0x1C17DFC
	375 Move X8, [X25]
	376 Move X9, 0x2377000
	377 Move X8, [X8+184]
	378 Move X9, [X9+1536]
	379 Move X24, [X8]
	380 Move X0, [X9]
	381 Call 0x1C17F10
	382 Move X8, 0x2377000
	383 Move X8, [X8+1600]
	384 Move X1, X24
	385 Move X3, X31
	386 Move X23, X0
	387 Move X2, [X8]
	388 Call Func`2<Object, Object>..ctor, X0, X1, X2
	389 Move X8, [X25]
	390 Move X8, [X8+184]
	391 Move [X8+64], X23
	392 Move X2, [X26]
	393 Move X0, X20
	394 Move X1, X23
	395 Call Enumerable.OrderBy, X0, X1
	396 Move X2, [X19+136]
	397 Move X1, X21
	398 Move X20, X0
	399 Call FriendsBoardView.SortCategory, X0, X1, X2
	400 Move X2, [X19+144]
	401 Move X1, X22
	402 Call FriendsBoardView.SortCategory, X0, X1, X2
	403 Move X2, [X19+152]
	404 Move X1, X20
	405 Call FriendsBoardView.SortCategory, X0, X1, X2
	406 Move W8, [X19+184]
	407 NotImplemented "Instruction CMP not yet implemented."
	408 Move X0, X19
	409 Move X20, [X31+80]
	410 Move X19, [X31+88]
	411 Move X22, [X31+64]
	412 Move X21, [X31+72]
	413 Move X24, [X31+48]
	414 Move X23, [X31+56]
	415 Move X26, [X31+32]
	416 Move X25, [X31+40]
	417 Move X28, [X31+16]
	418 Move X27, [X31+24]
	419 Move X30, [X31+96]
	420 Call FriendsBoardView.UpdateHeadContainers, X0
	421 Return 
	422 Move X20, [X31+80]
	423 Move X19, [X31+88]
	424 Move X22, [X31+64]
	425 Move X21, [X31+72]
	426 Move X24, [X31+48]
	427 Move X23, [X31+56]
	428 Move X26, [X31+32]
	429 Move X25, [X31+40]
	430 Move X28, [X31+16]
	431 Move X27, [X31+24]
	432 Move X30, [X31+96]
	433 Return 

Method: System.Void SortCategory(System.Collections.Generic.IEnumerable`1<AnimalCompany.FriendView> views, UnityEngine.GameObject header)

Disassembly:
	0x01D86450 LDR X20, [X23 + 0x20]
	0x01D86454 LDR X21, [X21 + 0x948]
	0x01D86458 MOV X0, X1
	0x01D8645C BL 0x1C16F10
	0x01D86460 LDR X2, [X21]
	0x01D86464 MOV X1, X19
	0x01D86468 MOV X3, X31
	0x01D8646C MOV X21, X0
	0x01D86470 BL 0x3314368
	0x01D86474 MOV X0, X20
	0x01D86478 MOV X1, X21
	0x01D8647C MOV X2, X31
	0x01D86480 BL 0x33C0FDC
	0x01D86484 LDR X1, [X22]
	0x01D86488 CBZ X0, 0x1D864AC
	0x01D8648C LDR X8, [X0]
	0x01D86490 CMP X8, X1
	0x01D86494 B.NE 0x1D865EC
	0x01D86498 STR X0, [X23 + 0x20]
	0x01D8649C LDR X8, [X0]
	0x01D864A0 CMP X8, X1
	0x01D864A4 B.EQ 0x1D864B0
	0x01D864A8 B 0x1D865EC
	0x01D864AC STR X0, [X23 + 0x20]
	0x01D864B0 LDR X23, [X19 + 0x58]
	0x01D864B4 CBZ X23, 0x1D86604
	0x01D864B8 ADRP X21, 0x2370000
	0x01D864BC LDR X20, [X23 + 0x20]
	0x01D864C0 LDR X21, [X21 + 0x958]
	0x01D864C4 MOV X0, X1
	0x01D864C8 BL 0x1C16F10
	0x01D864CC LDR X2, [X21]
	0x01D864D0 MOV X1, X19
	0x01D864D4 MOV X3, X31
	0x01D864D8 MOV X21, X0
	0x01D864DC BL 0x3314368
	0x01D864E0 MOV X0, X20
	0x01D864E4 MOV X1, X21
	0x01D864E8 MOV X2, X31
	0x01D864EC BL 0x33C0FDC
	0x01D864F0 LDR X1, [X22]
	0x01D864F4 CBZ X0, 0x1D86518
	0x01D864F8 LDR X8, [X0]
	0x01D864FC CMP X8, X1
	0x01D86500 B.NE 0x1D865EC
	0x01D86504 STR X0, [X23 + 0x20]
	0x01D86508 LDR X8, [X0]
	0x01D8650C CMP X8, X1
	0x01D86510 B.EQ 0x1D8651C
	0x01D86514 B 0x1D865EC
	0x01D86518 STR X0, [X23 + 0x20]
	0x01D8651C LDR X23, [X19 + 0x60]
	0x01D86520 CBZ X23, 0x1D86604
	0x01D86524 ADRP X21, 0x2370000
	0x01D86528 LDR X20, [X23 + 0x20]
	0x01D8652C LDR X21, [X21 + 0x960]
	0x01D86530 MOV X0, X1
	0x01D86534 BL 0x1C16F10
	0x01D86538 LDR X2, [X21]
	0x01D8653C MOV X1, X19
	0x01D86540 MOV X3, X31
	0x01D86544 MOV X21, X0
	0x01D86548 BL 0x3314368
	0x01D8654C MOV X0, X20
	0x01D86550 MOV X1, X21
	0x01D86554 MOV X2, X31
	0x01D86558 BL 0x33C0FDC
	0x01D8655C LDR X1, [X22]
	0x01D86560 CBZ X0, 0x1D86584
	0x01D86564 LDR X8, [X0]
	0x01D86568 CMP X8, X1
	0x01D8656C B.NE 0x1D865EC
	0x01D86570 STR X0, [X23 + 0x20]
	0x01D86574 LDR X8, [X0]
	0x01D86578 CMP X8, X1
	0x01D8657C B.EQ 0x1D86588
	0x01D86580 B 0x1D865EC
	0x01D86584 STR X0, [X23 + 0x20]
	0x01D86588 LDR X23, [X19 + 0x70]
	0x01D8658C CBZ X23, 0x1D86604
	0x01D86590 ADRP X21, 0x2370000
	0x01D86594 LDR X20, [X23 + 0x20]
	0x01D86598 LDR X21, [X21 + 0x950]
	0x01D8659C MOV X0, X1
	0x01D865A0 BL 0x1C16F10
	0x01D865A4 LDR X2, [X21]
	0x01D865A8 MOV X1, X19
	0x01D865AC MOV X3, X31
	0x01D865B0 MOV X21, X0
	0x01D865B4 BL 0x3314368
	0x01D865B8 MOV X0, X20
	0x01D865BC MOV X1, X21
	0x01D865C0 MOV X2, X31
	0x01D865C4 BL 0x33C0FDC
	0x01D865C8 CBZ X0, 0x1D865F0
	0x01D865CC LDR X1, [X22]
	0x01D865D0 LDR X8, [X0]
	0x01D865D4 CMP X8, X1
	0x01D865D8 B.NE 0x1D865EC
	0x01D865DC STR X0, [X23 + 0x20]
	0x01D865E0 LDR X8, [X0]
	0x01D865E4 CMP X8, X1
	0x01D865E8 B.EQ 0x1D865F4
	0x01D865EC BL 0x1C171E0
	0x01D865F0 STR X0, [X23 + 0x20]
	0x01D865F4 LDP X20, X19, [X31 + 0x20]
	0x01D865F8 LDP X22, X21, [X31 + 0x10]
	0x01D865FC LDP X30, X23, [X31], #0x30
	0x01D86600 RET
	0x01D86604 BL 0x1C16F20
	0x01D86608 LDR X8, [X0 + 0x88]
	0x01D8660C CBZ X8, 0x1D86624
	0x01D86610 LDR X1, [X0 + 0x78]
	0x01D86614 LDR X3, [X8 + 0x18]
	0x01D86618 LDR X0, [X8 + 0x40]
	0x01D8661C LDR X2, [X8 + 0x28]
	0x01D86620 BR X3
	0x01D86624 RET
	0x01D86628 LDR X8, [X0 + 0x90]
	0x01D8662C CBZ X8, 0x1D86644
	0x01D86630 LDR X1, [X0 + 0x78]
	0x01D86634 LDR X3, [X8 + 0x18]
	0x01D86638 LDR X0, [X8 + 0x40]
	0x01D8663C LDR X2, [X8 + 0x28]
	0x01D86640 BR X3
	0x01D86644 RET
	0x01D86648 LDR X8, [X0 + 0x98]
	0x01D8664C CBZ X8, 0x1D86664
	0x01D86650 LDR X1, [X0 + 0x78]
	0x01D86654 LDR X3, [X8 + 0x18]
	0x01D86658 LDR X0, [X8 + 0x40]
	0x01D8665C LDR X2, [X8 + 0x28]
	0x01D86660 BR X3
	0x01D86664 RET
	0x01D86668 LDR X8, [X0 + 0xA0]
	0x01D8666C CBZ X8, 0x1D86684
	0x01D86670 LDR X1, [X0 + 0x78]
	0x01D86674 LDR X3, [X8 + 0x18]
	0x01D86678 LDR X0, [X8 + 0x40]
	0x01D8667C LDR X2, [X8 + 0x28]
	0x01D86680 BR X3
	0x01D86684 RET
	0x01D86688 LDR X8, [X0 + 0xA8]
	0x01D8668C CBZ X8, 0x1D866A4
	0x01D86690 LDR X1, [X0 + 0x78]
	0x01D86694 LDR X3, [X8 + 0x18]
	0x01D86698 LDR X0, [X8 + 0x40]
	0x01D8669C LDR X2, [X8 + 0x28]
	0x01D866A0 BR X3
	0x01D866A4 RET
	0x01D866A8 MOV X1, X31
	0x01D866AC B 0x3C36C30
	0x01D866B0 STR X30, [X31 - 0x40]!
	0x01D866B4 STP X24, X23, [X31 + 0x10]
	0x01D866B8 STP X22, X21, [X31 + 0x20]
	0x01D866BC STP X20, X19, [X31 + 0x30]
	0x01D866C0 ADRP X21, 0x2652000
	0x01D866C4 LDRB W8, [X21 + 0x997]
	0x01D866C8 MOV X19, X1
	0x01D866CC MOV X20, X0
	0x01D866D0 TBNZ X8, 0x0, 0x1D866E8
	0x01D866D4 ADRP X0, 0x236E000
	0x01D866D8 LDR X0, [X0 + 0xE68]
	0x01D866DC BL 0x1C16CF4
	0x01D866E0 MOVZ W8, 0x1
	0x01D866E4 STRB W8, [X21 + 0x997]
	0x01D866E8 ADRP X24, 0x236E000
	0x01D866EC LDR X21, [X20 + 0x38]!
	0x01D866F0 LDR X24, [X24 + 0xE68]
	0x01D866F4 MOV X0, X21
	0x01D866F8 MOV X1, X19
	0x01D866FC MOV X2, X31
	0x01D86700 BL 0x33C0FDC
	0x01D86704 CBZ X0, 0x1D86724
	0x01D86708 LDR X23, [X24]
	0x01D8670C MOV X22, X0
	0x01D86710 MOV X1, X23
	0x01D86714 BL 0x1C16E00
	0x01D86718 MOV X1, X0
	0x01D8671C CBNZ X0, 0x1D86728
	0x01D86720 B 0x1D86754
	0x01D86724 MOV X1, X31
	0x01D86728 MOV X0, X20
	0x01D8672C MOV X2, X21
	0x01D86730 BL 0x1C24138
	0x01D86734 CMP X21, X0
	0x01D86738 MOV X21, X0
	0x01D8673C B.NE 0x1D866F4
	0x01D86740 LDP X20, X19, [X31 + 0x30]
	0x01D86744 LDP X22, X21, [X31 + 0x20]
	0x01D86748 LDP X24, X23, [X31 + 0x10]
	0x01D8674C LDR X30, [X31], #0x40
	0x01D86750 RET
	0x01D86754 MOV X0, X22
	0x01D86758 MOV X1, X23
	0x01D8675C BL 0x1C171E0
	0x01D86760 LDR X0, [X0 + 0x48]
	0x01D86764 RET
	0x01D86768 STP X30, X23, [X31 - 0x30]!
	0x01D8676C STP X22, X21, [X31 + 0x10]
	0x01D86770 STP X20, X19, [X31 + 0x20]
	0x01D86774 ADRP X20, 0x2652000
	0x01D86778 LDRB W8, [X20 + 0x998]
	0x01D8677C MOV X19, X0
	0x01D86780 TBNZ X8, 0x0, 0x1D867A4
	0x01D86784 ADRP X0, 0x236E000
	0x01D86788 LDR X0, [X0 + 0xE70]
	0x01D8678C BL 0x1C16CF4
	0x01D86790 ADRP X0, 0x2370000
	0x01D86794 LDR X0, [X0 + 0x970]
	0x01D86798 BL 0x1C16CF4
	0x01D8679C MOVZ W8, 0x1
	0x01D867A0 STRB W8, [X20 + 0x998]
	0x01D867A4 LDR X22, [X19 + 0x30]
	0x01D867A8 CBZ X22, 0x1D86828
	0x01D867AC ADRP X23, 0x236E000
	0x01D867B0 LDR X23, [X23 + 0xE70]
	0x01D867B4 ADRP X21, 0x2370000
	0x01D867B8 LDR X20, [X22 + 0x20]
	0x01D867BC LDR X0, [X23]
	0x01D867C0 LDR X21, [X21 + 0x970]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2653000
	007 Move X22, 0x2371000
	008 Move W8, [X21+2429]
	009 Move X22, [X22+2344]
	010 Move X19, X2
	011 Move X20, X1
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {33}
	016 Move X0, 0x2371000
	017 Move X0, [X0+2344]
	018 Call 0x1C17CF4
	019 Move X0, 0x236E000
	020 Move X0, [X0+3584]
	021 Call 0x1C17CF4
	022 Move X0, 0x2371000
	023 Move X0, [X0+1608]
	024 Call 0x1C17CF4
	025 Move X0, 0x2371000
	026 Move X0, [X0+1616]
	027 Call 0x1C17CF4
	028 Move X0, 0x236E000
	029 Move X0, [X0+3608]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X21+2429], W8
	033 Move X1, [X22]
	034 Move X0, X20
	035 Call Enumerable.Any, X0
	036 Move TEMP, X0
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfNotEqual {170}
	040 Compare X19, 0
	041 JumpIfEqual {190}
	042 Move W1, 1
	043 Move X0, X19
	044 Move X2, X31
	045 Call GameObject.SetActive, X0, X1
	046 Move X0, X19
	047 Move X1, X31
	048 Call GameObject.get_transform, X0
	049 Compare X0, 0
	050 JumpIfEqual {190}
	051 Move X1, X31
	052 Call Transform.SetAsLastSibling, X0
	053 Compare X20, 0
	054 JumpIfEqual {190}
	055 Move X10, 0x2371000
	056 Move X8, [X20]
	057 Move X10, [X10+1608]
	058 NotImplemented "Instruction LDRH not yet implemented."
	059 Move X1, [X10]
	060 Compare X9, 0
	061 JumpIfEqual {68}
	062 Move X10, [X8+176]
	063 Add X10, X10, 8
	064 NotImplemented "Instruction LDUR not yet implemented."
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Subtract X9, X9, 1
	067 Add X10, X10, 16
	068 Move X0, X20
	069 Move W2, W31
	070 Call 0x1C5D788
	071 NotImplemented "Instruction LDRSW not yet implemented."
	072 Add X8, X8, X9
	073 Add X0, X8, 312
	074 Move X8, [X0]
	075 Move X1, [X0+8]
	076 Move X0, X20
	077 NotImplemented "Instruction BLR not yet implemented."
	078 Move X20, X0
	079 Compare X0, 0
	080 JumpIfEqual {191}
	081 Move X21, 0x236E000
	082 Move X22, 0x2371000
	083 Move X21, [X21+3608]
	084 Move X22, [X22+1616]
	085 Move X8, [X20]
	086 Move X1, [X21]
	087 NotImplemented "Instruction LDRH not yet implemented."
	088 Compare X9, 0
	089 JumpIfEqual {96}
	090 Move X10, [X8+176]
	091 Add X10, X10, 8
	092 NotImplemented "Instruction LDUR not yet implemented."
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Subtract X9, X9, 1
	095 Add X10, X10, 16
	096 Move X0, X20
	097 Move W2, W31
	098 Call 0x1C5D788
	099 NotImplemented "Instruction LDRSW not yet implemented."
	100 Add X8, X8, X9
	101 Add X0, X8, 312
	102 Move X8, [X0]
	103 Move X1, [X0+8]
	104 Move X0, X20
	105 NotImplemented "Instruction BLR not yet implemented."
	106 Move TEMP, X0
	107 And TEMP, TEMP, 1
	108 Compare TEMP, 1
	109 JumpIfNotEqual {139}
	110 Move X8, [X20]
	111 Move X1, [X22]
	112 NotImplemented "Instruction LDRH not yet implemented."
	113 Compare X9, 0
	114 JumpIfEqual {121}
	115 Move X10, [X8+176]
	116 Add X10, X10, 8
	117 NotImplemented "Instruction LDUR not yet implemented."
	118 NotImplemented "Instruction CMP not yet implemented."
	119 Subtract X9, X9, 1
	120 Add X10, X10, 16
	121 Move X0, X20
	122 Move W2, W31
	123 Call 0x1C5D788
	124 NotImplemented "Instruction LDRSW not yet implemented."
	125 Add X8, X8, X9
	126 Add X0, X8, 312
	127 Move X8, [X0]
	128 Move X1, [X0+8]
	129 Move X0, X20
	130 NotImplemented "Instruction BLR not yet implemented."
	131 Compare X0, 0
	132 JumpIfEqual {188}
	133 Move X1, X31
	134 Call Component.get_transform, X0
	135 Compare X0, 0
	136 JumpIfEqual {189}
	137 Move X1, X31
	138 Call Transform.SetAsLastSibling, X0
	139 Move X21, X31
	140 Move W22, W31
	141 Compare X20, 0
	142 JumpIfEqual {166}
	143 Move X10, 0x236E000
	144 Move X8, [X20]
	145 Move X10, [X10+3584]
	146 NotImplemented "Instruction LDRH not yet implemented."
	147 Move X1, [X10]
	148 Compare X9, 0
	149 JumpIfEqual {156}
	150 Move X10, [X8+176]
	151 Add X10, X10, 8
	152 NotImplemented "Instruction LDUR not yet implemented."
	153 NotImplemented "Instruction CMP not yet implemented."
	154 Subtract X9, X9, 1
	155 Add X10, X10, 16
	156 Move X0, X20
	157 Move W2, W31
	158 Call 0x1C5D788
	159 NotImplemented "Instruction LDRSW not yet implemented."
	160 Add X8, X8, X9
	161 Add X0, X8, 312
	162 Move X8, [X0]
	163 Move X1, [X0+8]
	164 Move X0, X20
	165 NotImplemented "Instruction BLR not yet implemented."
	166 Compare X21, 0
	167 JumpIfNotEqual {192}
	168 Compare W22, 0
	169 JumpIfEqual {182}
	170 Compare X19, 0
	171 JumpIfEqual {190}
	172 Move X0, X19
	173 Move X20, [X31+32]
	174 Move X19, [X31+40]
	175 Move X22, [X31+16]
	176 Move X21, [X31+24]
	177 Move W1, W31
	178 Move X2, X31
	179 Move X30, [X31+48]
	180 Call GameObject.SetActive, X0, X1
	181 Return 
	182 Move X20, [X31+32]
	183 Move X19, [X31+40]
	184 Move X22, [X31+16]
	185 Move X21, [X31+24]
	186 Move X30, [X31+48]
	187 Return 
	188 Call 0x1C17F20
	189 Call 0x1C17F20
	190 Call 0x1C17F20
	191 Call 0x1C17F20
	192 Move X0, X21
	193 Call 0x1C17F18
	194 Move X22, X0
	195 NotImplemented "Instruction CMP not yet implemented."
	196 Move X0, X22
	197 Call 0x3EB2AD0
	198 Move X21, [X0]
	199 Call 0x3EB2AE0
	200 Move W22, 1
	201 Compare X20, 0
	202 JumpIfNotEqual {143}
	203 Move X21, X31
	204 Move X22, X0
	205 Compare X20, 0
	206 JumpIfEqual {230}
	207 Move X10, 0x236E000
	208 Move X8, [X20]
	209 Move X10, [X10+3584]
	210 NotImplemented "Instruction LDRH not yet implemented."
	211 Move X1, [X10]
	212 Compare X9, 0
	213 JumpIfEqual {220}
	214 Move X10, [X8+176]
	215 Add X10, X10, 8
	216 NotImplemented "Instruction LDUR not yet implemented."
	217 NotImplemented "Instruction CMP not yet implemented."
	218 Subtract X9, X9, 1
	219 Add X10, X10, 16
	220 Move X0, X20
	221 Move W2, W31
	222 Call 0x1C5D788
	223 NotImplemented "Instruction LDRSW not yet implemented."
	224 Add X8, X8, X9
	225 Add X0, X8, 312
	226 Move X8, [X0]
	227 Move X1, [X0+8]
	228 Move X0, X20
	229 NotImplemented "Instruction BLR not yet implemented."
	230 Compare X21, 0
	231 JumpIfNotEqual {234}
	232 Move X0, X22
	233 Call 0x1D2D690
	234 Move X0, X21
	235 Call 0x1C17F18
	236 Call 0x1991590

Method: System.Void SortBlocked()

Disassembly:
	0x01D81050 ADRP X0, 0x2375000
	0x01D81054 LDR X0, [X0 + 0x4E8]
	0x01D81058 BL 0x1C16CF4
	0x01D8105C ADRP X0, 0x2375000
	0x01D81060 LDR X0, [X0 + 0x4F0]
	0x01D81064 BL 0x1C16CF4
	0x01D81068 ADRP X0, 0x2375000
	0x01D8106C LDR X0, [X0 + 0x4F8]
	0x01D81070 BL 0x1C16CF4
	0x01D81074 ADRP X0, 0x2375000
	0x01D81078 LDR X0, [X0 + 0x508]
	0x01D8107C BL 0x1C16CF4
	0x01D81080 ADRP X0, 0x2375000
	0x01D81084 LDR X0, [X0 + 0x520]
	0x01D81088 BL 0x1C16CF4
	0x01D8108C ADRP X0, 0x2375000
	0x01D81090 LDR X0, [X0 + 0x528]
	0x01D81094 BL 0x1C16CF4
	0x01D81098 ADRP X0, 0x2373000
	0x01D8109C LDR X0, [X0 + 0xBF8]
	0x01D810A0 BL 0x1C16CF4
	0x01D810A4 ADRP X0, 0x2372000
	0x01D810A8 LDR X0, [X0 + 0xE00]
	0x01D810AC BL 0x1C16CF4
	0x01D810B0 ADRP X0, 0x2372000
	0x01D810B4 LDR X0, [X0 + 0xF70]
	0x01D810B8 BL 0x1C16CF4
	0x01D810BC ADRP X0, 0x2372000
	0x01D810C0 LDR X0, [X0 + 0xF78]
	0x01D810C4 BL 0x1C16CF4
	0x01D810C8 ADRP X0, 0x2372000
	0x01D810CC LDR X0, [X0 + 0xE18]
	0x01D810D0 BL 0x1C16CF4
	0x01D810D4 ADRP X0, 0x2372000
	0x01D810D8 LDR X0, [X0 + 0x598]
	0x01D810DC BL 0x1C16CF4
	0x01D810E0 ADRP X0, 0x2372000
	0x01D810E4 LDR X0, [X0 + 0xF68]
	0x01D810E8 BL 0x1C16CF4
	0x01D810EC ADRP X0, 0x2373000
	0x01D810F0 LDR X0, [X0 + 0x108]
	0x01D810F4 BL 0x1C16CF4
	0x01D810F8 ADRP X0, 0x2373000
	0x01D810FC LDR X0, [X0 + 0xC38]
	0x01D81100 BL 0x1C16CF4
	0x01D81104 ADRP X0, 0x2373000
	0x01D81108 LDR X0, [X0 + 0xD70]
	0x01D8110C BL 0x1C16CF4
	0x01D81110 ADRP X0, 0x2372000
	0x01D81114 LDR X0, [X0 + 0xDC8]
	0x01D81118 BL 0x1C16CF4
	0x01D8111C ADRP X0, 0x2372000
	0x01D81120 LDR X0, [X0 + 0xFE8]
	0x01D81124 BL 0x1C16CF4
	0x01D81128 ADRP X0, 0x2373000
	0x01D8112C LDR X0, [X0 + 0x1F8]
	0x01D81130 BL 0x1C16CF4
	0x01D81134 ADRP X0, 0x2375000
	0x01D81138 LDR X0, [X0 + 0x718]
	0x01D8113C BL 0x1C16CF4
	0x01D81140 ADRP X0, 0x2375000
	0x01D81144 LDR X0, [X0 + 0x720]
	0x01D81148 BL 0x1C16CF4
	0x01D8114C ADRP X0, 0x2373000
	0x01D81150 LDR X0, [X0 + 0xF60]
	0x01D81154 BL 0x1C16CF4
	0x01D81158 MOVZ W8, 0x1
	0x01D8115C STRB W8, [X20 + 0x954]
	0x01D81160 STP X31, X31, [X31 + 0x10]
	0x01D81164 STP X31, X31, [X31]
	0x01D81168 LDR X0, [X19 + 0x30]
	0x01D8116C CBZ X0, 0x1D81A34
	0x01D81170 ADRP X8, 0x2375000
	0x01D81174 LDR X8, [X8 + 0x710]
	0x01D81178 ADRP X23, 0x2375000
	0x01D8117C LDR X1, [X8]
	0x01D81180 LDR X23, [X23 + 0x720]
	0x01D81184 BL 0x2AA4E98
	0x01D81188 LDR X8, [X23]
	0x01D8118C MOV X20, X0
	0x01D81190 LDR W9, [X8 + 0xE0]
	0x01D81194 CBNZ W9, 0x1D811A4
	0x01D81198 MOV X0, X8
	0x01D8119C BL 0x1C16DFC
	0x01D811A0 LDR X8, [X23]
	0x01D811A4 LDR X9, [X8 + 0xB8]
	0x01D811A8 ADRP X25, 0x2373000
	0x01D811AC ADRP X24, 0x2372000
	0x01D811B0 LDR X21, [X9 + 0x8]
	0x01D811B4 LDR X25, [X25 + 0xCA0]
	0x01D811B8 LDR X24, [X24 + 0xEB8]
	0x01D811BC CBNZ X21, 0x1D81214
	0x01D811C0 LDR W9, [X8 + 0xE0]
	0x01D811C4 CBNZ W9, 0x1D811D4
	0x01D811C8 MOV X0, X8
	0x01D811CC BL 0x1C16DFC
	0x01D811D0 LDR X8, [X23]
	0x01D811D4 ADRP X9, 0x2373000
	0x01D811D8 LDR X8, [X8 + 0xB8]
	0x01D811DC LDR X9, [X9 + 0xBF8]
	0x01D811E0 LDR X22, [X8]
	0x01D811E4 LDR X0, [X9]
	0x01D811E8 BL 0x1C16F10
	0x01D811EC ADRP X8, 0x2375000
	0x01D811F0 LDR X8, [X8 + 0x718]
	0x01D811F4 MOV X1, X22
	0x01D811F8 MOV X3, X31
	0x01D811FC MOV X21, X0
	0x01D81200 LDR X2, [X8]
	0x01D81204 BL 0x2D2F428
	0x01D81208 LDR X8, [X23]
	0x01D8120C LDR X8, [X8 + 0xB8]
	0x01D81210 STR X21, [X8 + 0x8]
	0x01D81214 LDR X2, [X25]
	0x01D81218 MOV X0, X20
	0x01D8121C MOV X1, X21
	0x01D81220 BL 0x21DA490
	0x01D81224 LDR X1, [X24]
	0x01D81228 BL 0x21D577C
	0x01D8122C CBZ X0, 0x1D81A34
	0x01D81230 LDR X8, [X0 + 0x18]
	0x01D81234 MOV X20, X0
	0x01D81238 CMP W8, 0x1
	0x01D8123C B.LT 0x1D812D8
	0x01D81240 ADRP X24, 0x2375000
	0x01D81244 ADRP X25, 0x2372000
	0x01D81248 ADRP X26, 0x2375000
	0x01D8124C LDR X24, [X24 + 0x708]
	0x01D81250 LDR X25, [X25 + 0x598]
	0x01D81254 LDR X26, [X26 + 0x6F8]
	0x01D81258 MOV X23, X31
	0x01D8125C AND X8, X8, 0x0
	0x01D81260 ADD X27, X20, 0x20
	0x01D81264 CMP X23, W8, UXTW
	0x01D81268 B.CS 0x1D81A70
	0x01D8126C LDR X0, [X19 + 0x30]
	0x01D81270 CBZ X0, 0x1D81A34
	0x01D81274 LDR X21, [X27, X23, LSL #3]
	0x01D81278 LDR X2, [X24]
	0x01D8127C MOV X1, X21
	0x01D81280 BL 0x2AA5018
	0x01D81284 CBZ X0, 0x1D81A34
	0x01D81288 MOV X1, X31
	0x01D8128C BL 0x3C32ECC
	0x01D81290 LDR X8, [X25]
	0x01D81294 MOV X22, X0
	0x01D81298 LDR W9, [X8 + 0xE0]
	0x01D8129C CBNZ W9, 0x1D812A8
	0x01D812A0 MOV X0, X8
	0x01D812A4 BL 0x1C16DFC
	0x01D812A8 MOV X0, X22
	0x01D812AC MOV X1, X31
	0x01D812B0 BL 0x3C394A8
	0x01D812B4 LDR X0, [X19 + 0x30]
	0x01D812B8 CBZ X0, 0x1D81A34
	0x01D812BC LDR X2, [X26]
	0x01D812C0 MOV X1, X21
	0x01D812C4 BL 0x2AA64F8
	0x01D812C8 LDR W8, [X20 + 0x18]
	0x01D812CC ADD X23, X23, 0x1
	0x01D812D0 CMP X23, W8, SXTW
	0x01D812D4 B.LT 0x1D81264
	0x01D812D8 ADRP X21, 0x2372000
	0x01D812DC LDR X21, [X21 + 0x648]
	0x01D812E0 LDR X0, [X21]
	0x01D812E4 LDR W8, [X0 + 0xE0]
	0x01D812E8 CBNZ W8, 0x1D812F0
	0x01D812EC BL 0x1C16DFC
	0x01D812F0 ADRP X28, 0x2657000
	0x01D812F4 LDRB W8, [X28 + 0x787]
	0x01D812F8 CBNZ W8, 0x1D81310
	0x01D812FC ADRP X0, 0x2372000
	0x01D81300 LDR X0, [X0 + 0x648]
	0x01D81304 BL 0x1C16CF4
	0x01D81308 MOVZ W8, 0x1
	0x01D8130C STRB W8, [X28 + 0x787]
	0x01D81310 LDR X0, [X21]
	0x01D81314 LDR W8, [X0 + 0xE0]
	0x01D81318 CBNZ W8, 0x1D81324
	0x01D8131C BL 0x1C16DFC
	0x01D81320 LDR X0, [X21]
	0x01D81324 LDR X8, [X0 + 0xB8]
	0x01D81328 LDR X8, [X8]
	0x01D8132C CBZ X8, 0x1D81A34
	0x01D81330 LDR X8, [X8 + 0xE0]
	0x01D81334 CBZ X8, 0x1D81A34
	0x01D81338 LDR X20, [X8 + 0x70]
	0x01D8133C CBZ X20, 0x1D81A34
	0x01D81340 ADRP X10, 0x2372000
	0x01D81344 LDR X8, [X20]
	0x01D81348 LDR X10, [X10 + 0xF70]
	0x01D8134C LDRH W9, [X8 + 0x12E]
	0x01D81350 LDR X1, [X10]
	0x01D81354 CBZ X9, 0x1D81378
	0x01D81358 LDR X10, [X8 + 0xB0]
	0x01D8135C ADD X10, X10, 0x8
	0x01D81360 LDUR X11, [X10 - 0x8]
	0x01D81364 CMP X11, X1
	0x01D81368 B.EQ 0x1D81388
	0x01D8136C SUBS X9, X9, 0x1
	0x01D81370 ADD X10, X10, 0x10
	0x01D81374 B.NE 0x1D81360
	0x01D81378 MOV X0, X20
	0x01D8137C MOV W2, W31
	0x01D81380 BL 0x1C5C788
	0x01D81384 B 0x1D81394
	0x01D81388 LDRSW X9, [X10]
	0x01D8138C ADD X8, X8, X9, 0x4, LSL
	0x01D81390 ADD X0, X8, 0x138
	0x01D81394 LDP X8, X1, [X0]
	0x01D81398 MOV X0, X20
	0x01D8139C BLR X8
	0x01D813A0 MOV X20, X0
	0x01D813A4 CBZ X0, 0x1D81AC4
	0x01D813A8 ADRP X29, 0x2373000
	0x01D813AC LDR X29, [X29 + 0xE68]
	0x01D813B0 MOVZ W27, 0x1
	0x01D813B4 LDR X8, [X20]
	0x01D813B8 ADRP X10, 0x2372000
	0x01D813BC LDRH W9, [X8 + 0x12E]
	0x01D813C0 LDR X10, [X10 + 0xE18]
	0x01D813C4 LDR X1, [X10]
	0x01D813C8 CBZ X9, 0x1D813EC
	0x01D813CC LDR X10, [X8 + 0xB0]
	0x01D813D0 ADD X10, X10, 0x8
	0x01D813D4 LDUR X11, [X10 - 0x8]
	0x01D813D8 CMP X11, X1
	0x01D813DC B.EQ 0x1D813FC
	0x01D813E0 SUBS X9, X9, 0x1
	0x01D813E4 ADD X10, X10, 0x10
	0x01D813E8 B.NE 0x1D813D4
	0x01D813EC MOV X0, X20
	0x01D813F0 MOV W2, W31
	0x01D813F4 BL 0x1C5C788
	0x01D813F8 B 0x1D81408
	0x01D813FC LDRSW X9, [X10]
	0x01D81400 ADD X8, X8, X9, 0x4, LSL
	0x01D81404 ADD X0, X8, 0x138
	0x01D81408 LDP X8, X1, [X0]
	0x01D8140C MOV X0, X20
	0x01D81410 BLR X8
	0x01D81414 TBZ X0, 0x0, 0x1D8198C
	0x01D81418 LDR X8, [X20]
	0x01D8141C ADRP X10, 0x2372000
	0x01D81420 LDRH W9, [X8 + 0x12E]
	0x01D81424 LDR X10, [X10 + 0xF78]
	0x01D81428 LDR X1, [X10]
	0x01D8142C CBZ X9, 0x1D81450
	0x01D81430 LDR X10, [X8 + 0xB0]
	0x01D81434 ADD X10, X10, 0x8
	0x01D81438 LDUR X11, [X10 - 0x8]
	0x01D8143C CMP X11, X1
	0x01D81440 B.EQ 0x1D81460
	0x01D81444 SUBS X9, X9, 0x1
	0x01D81448 ADD X10, X10, 0x10
	0x01D8144C B.NE 0x1D81438
	0x01D81450 MOV X0, X20
	0x01D81454 MOV W2, W31
	0x01D81458 BL 0x1C5C788
	0x01D8145C B 0x1D8146C
	0x01D81460 LDRSW X9, [X10]
	0x01D81464 ADD X8, X8, X9, 0x4, LSL
	0x01D81468 ADD X0, X8, 0x138
	0x01D8146C LDP X8, X1, [X0]
	0x01D81470 MOV X0, X20
	0x01D81474 BLR X8
	0x01D81478 MOV X22, X0
	0x01D8147C LDR X0, [X21]
	0x01D81480 LDR W8, [X0 + 0xE0]
	0x01D81484 CBNZ W8, 0x1D8148C
	0x01D81488 BL 0x1C16DFC
	0x01D8148C LDRB W8, [X28 + 0x787]
	0x01D81490 CBNZ W8, 0x1D814A0
	0x01D81494 MOV X0, X21
	0x01D81498 BL 0x1C16CF4
	0x01D8149C STRB W27, [X28 + 0x787]
	0x01D814A0 LDR X0, [X21]
	0x01D814A4 LDR W8, [X0 + 0xE0]
	0x01D814A8 CBNZ W8, 0x1D814B4
	0x01D814AC BL 0x1C16DFC
	0x01D814B0 LDR X0, [X21]
	0x01D814B4 LDR X8, [X0 + 0xB8]
	0x01D814B8 LDR X8, [X8]
	0x01D814BC CBZ X8, 0x1D81A48
	0x01D814C0 LDR X8, [X8 + 0xE0]
	0x01D814C4 CBZ X8, 0x1D81A4C
	0x01D814C8 LDR X0, [X8 + 0x78]
	0x01D814CC CBZ X0, 0x1D81A3C
	0x01D814D0 ADRP X8, 0x2373000
	0x01D814D4 LDR X8, [X8 + 0xD70]
	0x01D814D8 LDR X2, [X8]
	0x01D814DC MOV X1, X22
	0x01D814E0 BL 0x262DAD8
	0x01D814E4 LDRB W8, [X28 + 0x787]
	0x01D814E8 MOV W23, W0
	0x01D814EC CBNZ W8, 0x1D814FC
	0x01D814F0 MOV X0, X21
	0x01D814F4 BL 0x1C16CF4
	0x01D814F8 STRB W27, [X28 + 0x787]
	0x01D814FC LDR X0, [X21]
	0x01D81500 LDR W8, [X0 + 0xE0]
	0x01D81504 CBNZ W8, 0x1D81510
	0x01D81508 BL 0x1C16DFC
	0x01D8150C LDR X0, [X21]
	0x01D81510 LDR X8, [X0 + 0xB8]
	0x01D81514 LDR X8, [X8]
	0x01D81518 CBZ X8, 0x1D81A40
	0x01D8151C LDR X8, [X8 + 0xB8]
	0x01D81520 CBZ X8, 0x1D81A38
	0x01D81524 LDR X8, [X8 + 0xA0]
	0x01D81528 CBZ X8, 0x1D81A50
	0x01D8152C LDR X0, [X8 + 0x48]
	0x01D81530 CBZ X0, 0x1D81A54
	0x01D81534 ADRP X8, 0x2372000
	0x01D81538 LDR X8, [X8 + 0xF68]
	0x01D8153C LDR X3, [X8]
	0x01D81540 ADD X2, X31, 0x18
	0x01D81544 MOV X1, X22
	0x01D81548 BL 0x2609E34
	0x01D8154C MOV W24, W0
	0x01D81550 LDR X0, [X19 + 0x30]
	0x01D81554 CBZ X0, 0x1D81A44
	0x01D81558 ADRP X8, 0x2375000
	0x01D8155C LDR X8, [X8 + 0x700]
	0x01D81560 LDR X3, [X8]
	0x01D81564 ADD X2, X31, 0x10
	0x01D81568 MOV X1, X22
	0x01D8156C BL 0x2AA6B2C
	0x01D81570 TBNZ X0, 0x0, 0x1D816F4
	0x01D81574 LDR X0, [X19 + 0x28]
	0x01D81578 CBZ X0, 0x1D81A78
	0x01D8157C BL 0x1D7E6AC
	0x01D81580 MOV X25, X0
	0x01D81584 LDR X0, [X29]
	0x01D81588 STR X25, [X31 + 0x10]
	0x01D8158C BL 0x1C16F10
	0x01D81590 ADRP X8, 0x2375000
	0x01D81594 LDR X8, [X8 + 0x4E8]
	0x01D81598 MOV X26, X0
	0x01D8159C LDR X2, [X8]
	0x01D815A0 MOV X1, X19
	0x01D815A4 MOV X3, X31
	0x01D815A8 BL 0x2A6B948
	0x01D815AC CBZ X25, 0x1D81A74
	0x01D815B0 MOV X0, X25
	0x01D815B4 MOV X1, X26
	0x01D815B8 BL 0x1D7E724
	0x01D815BC LDR X25, [X31 + 0x10]
	0x01D815C0 LDR X0, [X29]
	0x01D815C4 BL 0x1C16F10
	0x01D815C8 ADRP X8, 0x2375000
	0x01D815CC LDR X8, [X8 + 0x520]
	0x01D815D0 MOV X26, X0
	0x01D815D4 LDR X2, [X8]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x2658000
	009 Move X20, 0x2376000
	010 Move X23, 0x2376000
	011 Move W8, [X21+2430]
	012 Move X20, [X20+1400]
	013 Move X23, [X23+1408]
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {66}
	019 Move X0, 0x2376000
	020 Move X0, [X0+1400]
	021 Call 0x1C17CF4
	022 Move X0, 0x2376000
	023 Move X0, [X0+1488]
	024 Call 0x1C17CF4
	025 Move X0, 0x2376000
	026 Move X0, [X0+1496]
	027 Call 0x1C17CF4
	028 Move X0, 0x2376000
	029 Move X0, [X0+1512]
	030 Call 0x1C17CF4
	031 Move X0, 0x2376000
	032 Move X0, [X0+1520]
	033 Call 0x1C17CF4
	034 Move X0, 0x2376000
	035 Move X0, [X0+1528]
	036 Call 0x1C17CF4
	037 Move X0, 0x2376000
	038 Move X0, [X0+1536]
	039 Call 0x1C17CF4
	040 Move X0, 0x2373000
	041 Move X0, [X0+3584]
	042 Call 0x1C17CF4
	043 Move X0, 0x2376000
	044 Move X0, [X0+1608]
	045 Call 0x1C17CF4
	046 Move X0, 0x2376000
	047 Move X0, [X0+1616]
	048 Call 0x1C17CF4
	049 Move X0, 0x2373000
	050 Move X0, [X0+3608]
	051 Call 0x1C17CF4
	052 Move X0, 0x2376000
	053 Move X0, [X0+1624]
	054 Call 0x1C17CF4
	055 Move X0, 0x2376000
	056 Move X0, [X0+1632]
	057 Call 0x1C17CF4
	058 Move X0, 0x2376000
	059 Move X0, [X0+1640]
	060 Call 0x1C17CF4
	061 Move X0, 0x2376000
	062 Move X0, [X0+1408]
	063 Call 0x1C17CF4
	064 Move W8, 1
	065 Move [X21+2430], W8
	066 Move X0, [X19+56]
	067 Move X1, [X20]
	068 Call Enumerable.Cast, X0
	069 Move X8, [X23]
	070 Move X20, X0
	071 Move W9, [X8+224]
	072 Compare W9, 0
	073 JumpIfNotEqual {77}
	074 Move X0, X8
	075 Call 0x1C17DFC
	076 Move X8, [X23]
	077 Move X9, [X8+184]
	078 Move X24, 0x2376000
	079 Move X21, [X9+72]
	080 Move X24, [X24+1496]
	081 Compare X21, 0
	082 JumpIfNotEqual {105}
	083 Move W9, [X8+224]
	084 Compare W9, 0
	085 JumpIfNotEqual {89}
	086 Move X0, X8
	087 Call 0x1C17DFC
	088 Move X8, [X23]
	089 Move X9, 0x2376000
	090 Move X8, [X8+184]
	091 Move X9, [X9+1520]
	092 Move X22, [X8]
	093 Move X0, [X9]
	094 Call 0x1C17F10
	095 Move X8, 0x2376000
	096 Move X8, [X8+1624]
	097 Move X1, X22
	098 Move X3, X31
	099 Move X21, X0
	100 Move X2, [X8]
	101 Call Func`2<Object, Object>..ctor, X0, X1, X2
	102 Move X8, [X23]
	103 Move X8, [X8+184]
	104 Move [X8+72], X21
	105 Move X2, [X24]
	106 Move X0, X20
	107 Move X1, X21
	108 Call Enumerable.Select, X0, X1
	109 Move X8, [X23]
	110 Move X20, X0
	111 Move W9, [X8+224]
	112 Compare W9, 0
	113 JumpIfNotEqual {117}
	114 Move X0, X8
	115 Call 0x1C17DFC
	116 Move X8, [X23]
	117 Move X9, [X8+184]
	118 Move X24, 0x2376000
	119 Move X21, [X9+80]
	120 Move X24, [X24+1512]
	121 Compare X21, 0
	122 JumpIfNotEqual {145}
	123 Move W9, [X8+224]
	124 Compare W9, 0
	125 JumpIfNotEqual {129}
	126 Move X0, X8
	127 Call 0x1C17DFC
	128 Move X8, [X23]
	129 Move X9, 0x2376000
	130 Move X8, [X8+184]
	131 Move X9, [X9+1528]
	132 Move X22, [X8]
	133 Move X0, [X9]
	134 Call 0x1C17F10
	135 Move X8, 0x2376000
	136 Move X8, [X8+1632]
	137 Move X1, X22
	138 Move X3, X31
	139 Move X21, X0
	140 Move X2, [X8]
	141 Call Func`2<Object, Boolean>..ctor, X0, X1, X2
	142 Move X8, [X23]
	143 Move X8, [X8+184]
	144 Move [X8+80], X21
	145 Move X2, [X24]
	146 Move X0, X20
	147 Move X1, X21
	148 Call Enumerable.Where, X0, X1
	149 Move X8, [X23]
	150 Move X20, X0
	151 Move W9, [X8+224]
	152 Compare W9, 0
	153 JumpIfNotEqual {157}
	154 Move X0, X8
	155 Call 0x1C17DFC
	156 Move X8, [X23]
	157 Move X9, [X8+184]
	158 Move X24, 0x2376000
	159 Move X21, [X9+88]
	160 Move X24, [X24+1488]
	161 Compare X21, 0
	162 JumpIfNotEqual {185}
	163 Move W9, [X8+224]
	164 Compare W9, 0
	165 JumpIfNotEqual {169}
	166 Move X0, X8
	167 Call 0x1C17DFC
	168 Move X8, [X23]
	169 Move X9, 0x2376000
	170 Move X8, [X8+184]
	171 Move X9, [X9+1536]
	172 Move X22, [X8]
	173 Move X0, [X9]
	174 Call 0x1C17F10
	175 Move X8, 0x2376000
	176 Move X8, [X8+1640]
	177 Move X1, X22
	178 Move X3, X31
	179 Move X21, X0
	180 Move X2, [X8]
	181 Call Func`2<Object, Object>..ctor, X0, X1, X2
	182 Move X8, [X23]
	183 Move X8, [X8+184]
	184 Move [X8+88], X21
	185 Move X2, [X24]
	186 Move X0, X20
	187 Move X1, X21
	188 Call Enumerable.OrderBy, X0, X1
	189 Compare X0, 0
	190 JumpIfEqual {330}
	191 Move X10, 0x2376000
	192 Move X8, [X0]
	193 Move X10, [X10+1608]
	194 Move X20, X0
	195 NotImplemented "Instruction LDRH not yet implemented."
	196 Move X1, [X10]
	197 Compare X9, 0
	198 JumpIfEqual {205}
	199 Move X10, [X8+176]
	200 Add X10, X10, 8
	201 NotImplemented "Instruction LDUR not yet implemented."
	202 NotImplemented "Instruction CMP not yet implemented."
	203 Subtract X9, X9, 1
	204 Add X10, X10, 16
	205 Move X0, X20
	206 Move W2, W31
	207 Call 0x1C5D788
	208 NotImplemented "Instruction LDRSW not yet implemented."
	209 Add X8, X8, X9
	210 Add X0, X8, 312
	211 Move X8, [X0]
	212 Move X1, [X0+8]
	213 Move X22, 0x2373000
	214 Move X22, [X22+3584]
	215 Move X0, X20
	216 NotImplemented "Instruction BLR not yet implemented."
	217 Move X20, X0
	218 Compare X0, 0
	219 JumpIfEqual {331}
	220 Move X21, 0x2373000
	221 Move X23, 0x2376000
	222 Move X21, [X21+3608]
	223 Move X23, [X23+1616]
	224 Move X8, [X20]
	225 Move X1, [X21]
	226 NotImplemented "Instruction LDRH not yet implemented."
	227 Compare X9, 0
	228 JumpIfEqual {235}
	229 Move X10, [X8+176]
	230 Add X10, X10, 8
	231 NotImplemented "Instruction LDUR not yet implemented."
	232 NotImplemented "Instruction CMP not yet implemented."
	233 Subtract X9, X9, 1
	234 Add X10, X10, 16
	235 Move X0, X20
	236 Move W2, W31
	237 Call 0x1C5D788
	238 NotImplemented "Instruction LDRSW not yet implemented."
	239 Add X8, X8, X9
	240 Add X0, X8, 312
	241 Move X8, [X0]
	242 Move X1, [X0+8]
	243 Move X0, X20
	244 NotImplemented "Instruction BLR not yet implemented."
	245 Move TEMP, X0
	246 And TEMP, TEMP, 1
	247 Compare TEMP, 1
	248 JumpIfNotEqual {278}
	249 Move X8, [X20]
	250 Move X1, [X23]
	251 NotImplemented "Instruction LDRH not yet implemented."
	252 Compare X9, 0
	253 JumpIfEqual {260}
	254 Move X10, [X8+176]
	255 Add X10, X10, 8
	256 NotImplemented "Instruction LDUR not yet implemented."
	257 NotImplemented "Instruction CMP not yet implemented."
	258 Subtract X9, X9, 1
	259 Add X10, X10, 16
	260 Move X0, X20
	261 Move W2, W31
	262 Call 0x1C5D788
	263 NotImplemented "Instruction LDRSW not yet implemented."
	264 Add X8, X8, X9
	265 Add X0, X8, 312
	266 Move X8, [X0]
	267 Move X1, [X0+8]
	268 Move X0, X20
	269 NotImplemented "Instruction BLR not yet implemented."
	270 Compare X0, 0
	271 JumpIfEqual {328}
	272 Move X1, X31
	273 Call Component.get_transform, X0
	274 Compare X0, 0
	275 JumpIfEqual {329}
	276 Move X1, X31
	277 Call Transform.SetAsLastSibling, X0
	278 Move X21, X31
	279 Move W23, 7
	280 Compare X20, 0
	281 JumpIfEqual {303}
	282 Move X8, [X20]
	283 Move X1, [X22]
	284 NotImplemented "Instruction LDRH not yet implemented."
	285 Compare X9, 0
	286 JumpIfEqual {293}
	287 Move X10, [X8+176]
	288 Add X10, X10, 8
	289 NotImplemented "Instruction LDUR not yet implemented."
	290 NotImplemented "Instruction CMP not yet implemented."
	291 Subtract X9, X9, 1
	292 Add X10, X10, 16
	293 Move X0, X20
	294 Move W2, W31
	295 Call 0x1C5D788
	296 NotImplemented "Instruction LDRSW not yet implemented."
	297 Add X8, X8, X9
	298 Add X0, X8, 312
	299 Move X8, [X0]
	300 Move X1, [X0+8]
	301 Move X0, X20
	302 NotImplemented "Instruction BLR not yet implemented."
	303 Compare X21, 0
	304 JumpIfNotEqual {332}
	305 NotImplemented "Instruction CMP not yet implemented."
	306 Compare W23, 0
	307 JumpIfNotEqual {320}
	308 Move W8, [X19+184]
	309 NotImplemented "Instruction CMP not yet implemented."
	310 Move X0, X19
	311 Move X20, [X31+48]
	312 Move X19, [X31+56]
	313 Move X22, [X31+32]
	314 Move X21, [X31+40]
	315 Move X24, [X31+16]
	316 Move X23, [X31+24]
	317 Move X30, [X31+64]
	318 Call FriendsBoardView.UpdateHeadContainers, X0
	319 Return 
	320 Move X20, [X31+48]
	321 Move X19, [X31+56]
	322 Move X22, [X31+32]
	323 Move X21, [X31+40]
	324 Move X24, [X31+16]
	325 Move X23, [X31+24]
	326 Move X30, [X31+64]
	327 Return 
	328 Call 0x1C17F20
	329 Call 0x1C17F20
	330 Call 0x1C17F20
	331 Call 0x1C17F20
	332 Move X0, X21
	333 Call 0x1C17F18
	334 NotImplemented "Instruction CMP not yet implemented."
	335 Call 0x3EB2AD0
	336 Move X21, [X0]
	337 Call 0x3EB2AE0
	338 Move W23, W31
	339 Compare X20, 0
	340 JumpIfNotEqual {282}
	341 Move X19, X0
	342 Move X21, X31
	343 Move X19, X0
	344 Compare X20, 0
	345 JumpIfEqual {367}
	346 Move X8, [X20]
	347 Move X1, [X22]
	348 NotImplemented "Instruction LDRH not yet implemented."
	349 Compare X9, 0
	350 JumpIfEqual {357}
	351 Move X10, [X8+176]
	352 Add X10, X10, 8
	353 NotImplemented "Instruction LDUR not yet implemented."
	354 NotImplemented "Instruction CMP not yet implemented."
	355 Subtract X9, X9, 1
	356 Add X10, X10, 16
	357 Move X0, X20
	358 Move W2, W31
	359 Call 0x1C5D788
	360 NotImplemented "Instruction LDRSW not yet implemented."
	361 Add X8, X8, X9
	362 Add X0, X8, 312
	363 Move X8, [X0]
	364 Move X1, [X0+8]
	365 Move X0, X20
	366 NotImplemented "Instruction BLR not yet implemented."
	367 Compare X21, 0
	368 JumpIfNotEqual {371}
	369 Move X0, X19
	370 Call 0x1D2D690
	371 Move X0, X21
	372 Call 0x1C17F18
	373 Call 0x1991590

Method: System.Void SortRoomPlayers()

Disassembly:
	0x01D80568 LDR X8, [X20]
	0x01D8056C LDR X1, [X22]
	0x01D80570 LDRH W9, [X8 + 0x12E]
	0x01D80574 CBZ X9, 0x1D80598
	0x01D80578 LDR X10, [X8 + 0xB0]
	0x01D8057C ADD X10, X10, 0x8
	0x01D80580 LDUR X11, [X10 - 0x8]
	0x01D80584 CMP X11, X1
	0x01D80588 B.EQ 0x1D805A8
	0x01D8058C SUBS X9, X9, 0x1
	0x01D80590 ADD X10, X10, 0x10
	0x01D80594 B.NE 0x1D80580
	0x01D80598 MOV X0, X20
	0x01D8059C MOV W2, W31
	0x01D805A0 BL 0x1C5C788
	0x01D805A4 B 0x1D805B4
	0x01D805A8 LDRSW X9, [X10]
	0x01D805AC ADD X8, X8, X9, 0x4, LSL
	0x01D805B0 ADD X0, X8, 0x138
	0x01D805B4 LDP X8, X1, [X0]
	0x01D805B8 MOV X0, X20
	0x01D805BC BLR X8
	0x01D805C0 CBNZ X21, 0x1D805CC
	0x01D805C4 MOV X0, X19
	0x01D805C8 BL 0x1D2C690
	0x01D805CC MOV X0, X21
	0x01D805D0 BL 0x1C16F18
	0x01D805D4 BL 0x1990590
	0x01D805D8 SUB X31, X31, 0x40
	0x01D805DC STP X30, X23, [X31 + 0x10]
	0x01D805E0 STP X22, X21, [X31 + 0x20]
	0x01D805E4 STP X20, X19, [X31 + 0x30]
	0x01D805E8 ADRP X21, 0x2658000
	0x01D805EC ADRP X20, 0x2376000
	0x01D805F0 ADRP X22, 0x2376000
	0x01D805F4 LDRB W8, [X21 + 0x980]
	0x01D805F8 LDR X20, [X20 + 0x578]
	0x01D805FC LDR X22, [X22 + 0x580]
	0x01D80600 MOV X19, X0
	0x01D80604 TBNZ X8, 0x0, 0x1D806C4
	0x01D80608 ADRP X0, 0x2376000
	0x01D8060C LDR X0, [X0 + 0x578]
	0x01D80610 BL 0x1C16CF4
	0x01D80614 ADRP X0, 0x2376000
	0x01D80618 LDR X0, [X0 + 0x670]
	0x01D8061C BL 0x1C16CF4
	0x01D80620 ADRP X0, 0x2376000
	0x01D80624 LDR X0, [X0 + 0x678]
	0x01D80628 BL 0x1C16CF4
	0x01D8062C ADRP X0, 0x2376000
	0x01D80630 LDR X0, [X0 + 0x680]
	0x01D80634 BL 0x1C16CF4
	0x01D80638 ADRP X0, 0x2376000
	0x01D8063C LDR X0, [X0 + 0x688]
	0x01D80640 BL 0x1C16CF4
	0x01D80644 ADRP X0, 0x2376000
	0x01D80648 LDR X0, [X0 + 0x690]
	0x01D8064C BL 0x1C16CF4
	0x01D80650 ADRP X0, 0x2376000
	0x01D80654 LDR X0, [X0 + 0x698]
	0x01D80658 BL 0x1C16CF4
	0x01D8065C ADRP X0, 0x2373000
	0x01D80660 LDR X0, [X0 + 0xE00]
	0x01D80664 BL 0x1C16CF4
	0x01D80668 ADRP X0, 0x2376000
	0x01D8066C LDR X0, [X0 + 0x6A0]
	0x01D80670 BL 0x1C16CF4
	0x01D80674 ADRP X0, 0x2376000
	0x01D80678 LDR X0, [X0 + 0x6A8]
	0x01D8067C BL 0x1C16CF4
	0x01D80680 ADRP X0, 0x2373000
	0x01D80684 LDR X0, [X0 + 0xE18]
	0x01D80688 BL 0x1C16CF4
	0x01D8068C ADRP X0, 0x2376000
	0x01D80690 LDR X0, [X0 + 0x6B0]
	0x01D80694 BL 0x1C16CF4
	0x01D80698 ADRP X0, 0x2376000
	0x01D8069C LDR X0, [X0 + 0x6B8]
	0x01D806A0 BL 0x1C16CF4
	0x01D806A4 ADRP X0, 0x2376000
	0x01D806A8 LDR X0, [X0 + 0x6C0]
	0x01D806AC BL 0x1C16CF4
	0x01D806B0 ADRP X0, 0x2376000
	0x01D806B4 LDR X0, [X0 + 0x580]
	0x01D806B8 BL 0x1C16CF4
	0x01D806BC MOVZ W8, 0x1
	0x01D806C0 STRB W8, [X21 + 0x980]
	0x01D806C4 LDR X0, [X19 + 0x40]
	0x01D806C8 LDR X1, [X20]
	0x01D806CC BL 0x21B44BC
	0x01D806D0 LDR X8, [X22]
	0x01D806D4 MOV X19, X0
	0x01D806D8 LDR W9, [X8 + 0xE0]
	0x01D806DC CBNZ W9, 0x1D806EC
	0x01D806E0 MOV X0, X8
	0x01D806E4 BL 0x1C16DFC
	0x01D806E8 LDR X8, [X22]
	0x01D806EC LDR X9, [X8 + 0xB8]
	0x01D806F0 ADRP X23, 0x2376000
	0x01D806F4 LDR X20, [X9 + 0x70]
	0x01D806F8 LDR X23, [X23 + 0x678]
	0x01D806FC CBNZ X20, 0x1D80754
	0x01D80700 LDR W9, [X8 + 0xE0]
	0x01D80704 CBNZ W9, 0x1D80714
	0x01D80708 MOV X0, X8
	0x01D8070C BL 0x1C16DFC
	0x01D80710 LDR X8, [X22]
	0x01D80714 ADRP X9, 0x2376000
	0x01D80718 LDR X8, [X8 + 0xB8]
	0x01D8071C LDR X9, [X9 + 0x690]
	0x01D80720 LDR X21, [X8]
	0x01D80724 LDR X0, [X9]
	0x01D80728 BL 0x1C16F10
	0x01D8072C ADRP X8, 0x2376000
	0x01D80730 LDR X8, [X8 + 0x6B0]
	0x01D80734 MOV X1, X21
	0x01D80738 MOV X3, X31
	0x01D8073C MOV X20, X0
	0x01D80740 LDR X2, [X8]
	0x01D80744 BL 0x2D30578
	0x01D80748 LDR X8, [X22]
	0x01D8074C LDR X8, [X8 + 0xB8]
	0x01D80750 STR X20, [X8 + 0x70]
	0x01D80754 LDR X2, [X23]
	0x01D80758 MOV X0, X19
	0x01D8075C MOV X1, X20
	0x01D80760 BL 0x21CF224
	0x01D80764 LDR X8, [X22]
	0x01D80768 MOV X19, X0
	0x01D8076C LDR W9, [X8 + 0xE0]
	0x01D80770 CBNZ W9, 0x1D80780
	0x01D80774 MOV X0, X8
	0x01D80778 BL 0x1C16DFC
	0x01D8077C LDR X8, [X22]
	0x01D80780 LDR X9, [X8 + 0xB8]
	0x01D80784 ADRP X23, 0x2376000
	0x01D80788 LDR X20, [X9 + 0x78]
	0x01D8078C LDR X23, [X23 + 0x680]
	0x01D80790 CBNZ X20, 0x1D807E8
	0x01D80794 LDR W9, [X8 + 0xE0]
	0x01D80798 CBNZ W9, 0x1D807A8
	0x01D8079C MOV X0, X8
	0x01D807A0 BL 0x1C16DFC
	0x01D807A4 LDR X8, [X22]
	0x01D807A8 ADRP X9, 0x2376000
	0x01D807AC LDR X8, [X8 + 0xB8]
	0x01D807B0 LDR X9, [X9 + 0x688]
	0x01D807B4 LDR X21, [X8]
	0x01D807B8 LDR X0, [X9]
	0x01D807BC BL 0x1C16F10
	0x01D807C0 ADRP X8, 0x2376000
	0x01D807C4 LDR X8, [X8 + 0x6B8]
	0x01D807C8 MOV X1, X21
	0x01D807CC MOV X3, X31
	0x01D807D0 MOV X20, X0
	0x01D807D4 LDR X2, [X8]
	0x01D807D8 BL 0x2D2F428
	0x01D807DC LDR X8, [X22]
	0x01D807E0 LDR X8, [X8 + 0xB8]
	0x01D807E4 STR X20, [X8 + 0x78]
	0x01D807E8 LDR X2, [X23]
	0x01D807EC MOV X0, X19
	0x01D807F0 MOV X1, X20
	0x01D807F4 BL 0x21DA490
	0x01D807F8 LDR X8, [X22]
	0x01D807FC MOV X19, X0
	0x01D80800 LDR W9, [X8 + 0xE0]
	0x01D80804 CBNZ W9, 0x1D80814
	0x01D80808 MOV X0, X8
	0x01D8080C BL 0x1C16DFC
	0x01D80810 LDR X8, [X22]
	0x01D80814 LDR X9, [X8 + 0xB8]
	0x01D80818 ADRP X23, 0x2376000
	0x01D8081C LDR X20, [X9 + 0x80]
	0x01D80820 LDR X23, [X23 + 0x670]
	0x01D80824 CBNZ X20, 0x1D8087C
	0x01D80828 LDR W9, [X8 + 0xE0]
	0x01D8082C CBNZ W9, 0x1D8083C
	0x01D80830 MOV X0, X8
	0x01D80834 BL 0x1C16DFC
	0x01D80838 LDR X8, [X22]
	0x01D8083C ADRP X9, 0x2376000
	0x01D80840 LDR X8, [X8 + 0xB8]
	0x01D80844 LDR X9, [X9 + 0x698]
	0x01D80848 LDR X21, [X8]
	0x01D8084C LDR X0, [X9]
	0x01D80850 BL 0x1C16F10
	0x01D80854 ADRP X8, 0x2376000
	0x01D80858 LDR X8, [X8 + 0x6C0]
	0x01D8085C MOV X1, X21
	0x01D80860 MOV X3, X31
	0x01D80864 MOV X20, X0
	0x01D80868 LDR X2, [X8]
	0x01D8086C BL 0x2D2FAB0
	0x01D80870 LDR X8, [X22]
	0x01D80874 LDR X8, [X8 + 0xB8]
	0x01D80878 STR X20, [X8 + 0x80]
	0x01D8087C LDR X2, [X23]
	0x01D80880 MOV X0, X19
	0x01D80884 MOV X1, X20
	0x01D80888 BL 0x21C9DE8
	0x01D8088C CBZ X0, 0x1D80A64
	0x01D80890 ADRP X10, 0x2376000
	0x01D80894 LDR X8, [X0]
	0x01D80898 LDR X10, [X10 + 0x6A0]
	0x01D8089C MOV X19, X0
	0x01D808A0 LDRH W9, [X8 + 0x12E]
	0x01D808A4 LDR X1, [X10]
	0x01D808A8 CBZ X9, 0x1D808CC
	0x01D808AC LDR X10, [X8 + 0xB0]
	0x01D808B0 ADD X10, X10, 0x8
	0x01D808B4 LDUR X11, [X10 - 0x8]
	0x01D808B8 CMP X11, X1
	0x01D808BC B.EQ 0x1D808DC
	0x01D808C0 SUBS X9, X9, 0x1
	0x01D808C4 ADD X10, X10, 0x10
	0x01D808C8 B.NE 0x1D808B4
	0x01D808CC MOV X0, X19
	0x01D808D0 MOV W2, W31
	0x01D808D4 BL 0x1C5C788
	0x01D808D8 B 0x1D808E8
	0x01D808DC LDRSW X9, [X10]
	0x01D808E0 ADD X8, X8, X9, 0x4, LSL
	0x01D808E4 ADD X0, X8, 0x138
	0x01D808E8 LDP X8, X1, [X0]
	0x01D808EC ADRP X21, 0x2373000
	0x01D808F0 LDR X21, [X21 + 0xE00]
	0x01D808F4 MOV X0, X19
	0x01D808F8 BLR X8
	0x01D808FC MOV X19, X0
	0x01D80900 CBZ X0, 0x1D80A68
	0x01D80904 ADRP X20, 0x2373000
	0x01D80908 ADRP X22, 0x2376000
	0x01D8090C LDR X20, [X20 + 0xE18]
	0x01D80910 LDR X22, [X22 + 0x6A8]
	0x01D80914 LDR X8, [X19]
	0x01D80918 LDR X1, [X20]
	0x01D8091C LDRH W9, [X8 + 0x12E]
	0x01D80920 CBZ X9, 0x1D80944
	0x01D80924 LDR X10, [X8 + 0xB0]
	0x01D80928 ADD X10, X10, 0x8
	0x01D8092C LDUR X11, [X10 - 0x8]
	0x01D80930 CMP X11, X1
	0x01D80934 B.EQ 0x1D80954
	0x01D80938 SUBS X9, X9, 0x1
	0x01D8093C ADD X10, X10, 0x10
	0x01D80940 B.NE 0x1D8092C
	0x01D80944 MOV X0, X19
	0x01D80948 MOV W2, W31
	0x01D8094C BL 0x1C5C788
	0x01D80950 B 0x1D80960
	0x01D80954 LDRSW X9, [X10]
	0x01D80958 ADD X8, X8, X9, 0x4, LSL
	0x01D8095C ADD X0, X8, 0x138
	0x01D80960 LDP X8, X1, [X0]
	0x01D80964 MOV X0, X19
	0x01D80968 BLR X8
	0x01D8096C TBZ X0, 0x0, 0x1D809E4
	0x01D80970 LDR X8, [X19]
	0x01D80974 LDR X1, [X22]
	0x01D80978 LDRH W9, [X8 + 0x12E]
	0x01D8097C CBZ X9, 0x1D809A0
	0x01D80980 LDR X10, [X8 + 0xB0]
	0x01D80984 ADD X10, X10, 0x8
	0x01D80988 LDUR X11, [X10 - 0x8]
	0x01D8098C CMP X11, X1
	0x01D80990 B.EQ 0x1D809B0
	0x01D80994 SUBS X9, X9, 0x1
	0x01D80998 ADD X10, X10, 0x10
	0x01D8099C B.NE 0x1D80988
	0x01D809A0 MOV X0, X19
	0x01D809A4 MOV W2, W31
	0x01D809A8 BL 0x1C5C788
	0x01D809AC B 0x1D809BC
	0x01D809B0 LDRSW X9, [X10]
	0x01D809B4 ADD X8, X8, X9, 0x4, LSL
	0x01D809B8 ADD X0, X8, 0x138
	0x01D809BC LDP X8, X1, [X0]
	0x01D809C0 MOV X0, X19
	0x01D809C4 BLR X8
	0x01D809C8 CBZ X0, 0x1D80A5C
	0x01D809CC MOV X1, X31
	0x01D809D0 BL 0x3C32E90
	0x01D809D4 CBZ X0, 0x1D80A60
	0x01D809D8 MOV X1, X31
	0x01D809DC BL 0x3C40D04
	0x01D809E0 B 0x1D80914
	0x01D809E4 MOV X20, X31
	0x01D809E8 CBZ X19, 0x1D80A44
	0x01D809EC LDR X8, [X19]
	0x01D809F0 LDR X1, [X21]
	0x01D809F4 LDRH W9, [X8 + 0x12E]
	0x01D809F8 CBZ X9, 0x1D80A1C
	0x01D809FC LDR X10, [X8 + 0xB0]
	0x01D80A00 ADD X10, X10, 0x8
	0x01D80A04 LDUR X11, [X10 - 0x8]
	0x01D80A08 CMP X11, X1
	0x01D80A0C B.EQ 0x1D80A2C
	0x01D80A10 SUBS X9, X9, 0x1
	0x01D80A14 ADD X10, X10, 0x10
	0x01D80A18 B.NE 0x1D80A04
	0x01D80A1C MOV X0, X19
	0x01D80A20 MOV W2, W31
	0x01D80A24 BL 0x1C5C788
	0x01D80A28 B 0x1D80A38
	0x01D80A2C LDRSW X9, [X10]
	0x01D80A30 ADD X8, X8, X9, 0x4, LSL

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x2659000
	009 Move X20, 0x2377000
	010 Move X23, 0x2377000
	011 Move W8, [X21+2431]
	012 Move X20, [X20+1400]
	013 Move X23, [X23+1408]
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {57}
	019 Move X0, 0x2377000
	020 Move X0, [X0+1400]
	021 Call 0x1C17CF4
	022 Move X0, 0x2377000
	023 Move X0, [X0+1416]
	024 Call 0x1C17CF4
	025 Move X0, 0x2377000
	026 Move X0, [X0+1424]
	027 Call 0x1C17CF4
	028 Move X0, 0x2377000
	029 Move X0, [X0+1432]
	030 Call 0x1C17CF4
	031 Move X0, 0x2377000
	032 Move X0, [X0+1440]
	033 Call 0x1C17CF4
	034 Move X0, 0x2374000
	035 Move X0, [X0+3584]
	036 Call 0x1C17CF4
	037 Move X0, 0x2377000
	038 Move X0, [X0+1448]
	039 Call 0x1C17CF4
	040 Move X0, 0x2377000
	041 Move X0, [X0+1456]
	042 Call 0x1C17CF4
	043 Move X0, 0x2374000
	044 Move X0, [X0+3608]
	045 Call 0x1C17CF4
	046 Move X0, 0x2377000
	047 Move X0, [X0+1464]
	048 Call 0x1C17CF4
	049 Move X0, 0x2377000
	050 Move X0, [X0+1472]
	051 Call 0x1C17CF4
	052 Move X0, 0x2377000
	053 Move X0, [X0+1408]
	054 Call 0x1C17CF4
	055 Move W8, 1
	056 Move [X21+2431], W8
	057 Move X0, [X19+40]
	058 Move X1, [X20]
	059 Call Enumerable.Cast, X0
	060 Move X8, [X23]
	061 Move X20, X0
	062 Move W9, [X8+224]
	063 Compare W9, 0
	064 JumpIfNotEqual {68}
	065 Move X0, X8
	066 Call 0x1C17DFC
	067 Move X8, [X23]
	068 Move X9, [X8+184]
	069 Move X24, 0x2377000
	070 Move X21, [X9+96]
	071 Move X24, [X24+1424]
	072 Compare X21, 0
	073 JumpIfNotEqual {96}
	074 Move W9, [X8+224]
	075 Compare W9, 0
	076 JumpIfNotEqual {80}
	077 Move X0, X8
	078 Call 0x1C17DFC
	079 Move X8, [X23]
	080 Move X9, 0x2377000
	081 Move X8, [X8+184]
	082 Move X9, [X9+1432]
	083 Move X22, [X8]
	084 Move X0, [X9]
	085 Call 0x1C17F10
	086 Move X8, 0x2377000
	087 Move X8, [X8+1464]
	088 Move X1, X22
	089 Move X3, X31
	090 Move X21, X0
	091 Move X2, [X8]
	092 Call Func`2<Object, Object>..ctor, X0, X1, X2
	093 Move X8, [X23]
	094 Move X8, [X8+184]
	095 Move [X8+96], X21
	096 Move X2, [X24]
	097 Move X0, X20
	098 Move X1, X21
	099 Call Enumerable.Select, X0, X1
	100 Move X8, [X23]
	101 Move X20, X0
	102 Move W9, [X8+224]
	103 Compare W9, 0
	104 JumpIfNotEqual {108}
	105 Move X0, X8
	106 Call 0x1C17DFC
	107 Move X8, [X23]
	108 Move X9, [X8+184]
	109 Move X24, 0x2377000
	110 Move X21, [X9+104]
	111 Move X24, [X24+1416]
	112 Compare X21, 0
	113 JumpIfNotEqual {136}
	114 Move W9, [X8+224]
	115 Compare W9, 0
	116 JumpIfNotEqual {120}
	117 Move X0, X8
	118 Call 0x1C17DFC
	119 Move X8, [X23]
	120 Move X9, 0x2377000
	121 Move X8, [X8+184]
	122 Move X9, [X9+1440]
	123 Move X22, [X8]
	124 Move X0, [X9]
	125 Call 0x1C17F10
	126 Move X8, 0x2377000
	127 Move X8, [X8+1472]
	128 Move X1, X22
	129 Move X3, X31
	130 Move X21, X0
	131 Move X2, [X8]
	132 Call Func`2<Object, Object>..ctor, X0, X1, X2
	133 Move X8, [X23]
	134 Move X8, [X8+184]
	135 Move [X8+104], X21
	136 Move X2, [X24]
	137 Move X0, X20
	138 Move X1, X21
	139 Call Enumerable.OrderBy, X0, X1
	140 Compare X0, 0
	141 JumpIfEqual {282}
	142 Move X10, 0x2377000
	143 Move X8, [X0]
	144 Move X10, [X10+1448]
	145 Move X20, X0
	146 NotImplemented "Instruction LDRH not yet implemented."
	147 Move X1, [X10]
	148 Compare X9, 0
	149 JumpIfEqual {156}
	150 Move X10, [X8+176]
	151 Add X10, X10, 8
	152 NotImplemented "Instruction LDUR not yet implemented."
	153 NotImplemented "Instruction CMP not yet implemented."
	154 Subtract X9, X9, 1
	155 Add X10, X10, 16
	156 Move X0, X20
	157 Move W2, W31
	158 Call 0x1C5D788
	159 NotImplemented "Instruction LDRSW not yet implemented."
	160 Add X8, X8, X9
	161 Add X0, X8, 312
	162 Move X8, [X0]
	163 Move X1, [X0+8]
	164 Move X22, 0x2374000
	165 Move X22, [X22+3584]
	166 Move X0, X20
	167 NotImplemented "Instruction BLR not yet implemented."
	168 Move X20, X0
	169 Compare X0, 0
	170 JumpIfEqual {283}
	171 Move X21, 0x2374000
	172 Move X23, 0x2377000
	173 Move X21, [X21+3608]
	174 Move X23, [X23+1456]
	175 Move X8, [X20]
	176 Move X1, [X21]
	177 NotImplemented "Instruction LDRH not yet implemented."
	178 Compare X9, 0
	179 JumpIfEqual {186}
	180 Move X10, [X8+176]
	181 Add X10, X10, 8
	182 NotImplemented "Instruction LDUR not yet implemented."
	183 NotImplemented "Instruction CMP not yet implemented."
	184 Subtract X9, X9, 1
	185 Add X10, X10, 16
	186 Move X0, X20
	187 Move W2, W31
	188 Call 0x1C5D788
	189 NotImplemented "Instruction LDRSW not yet implemented."
	190 Add X8, X8, X9
	191 Add X0, X8, 312
	192 Move X8, [X0]
	193 Move X1, [X0+8]
	194 Move X0, X20
	195 NotImplemented "Instruction BLR not yet implemented."
	196 Move TEMP, X0
	197 And TEMP, TEMP, 1
	198 Compare TEMP, 1
	199 JumpIfNotEqual {229}
	200 Move X8, [X20]
	201 Move X1, [X23]
	202 NotImplemented "Instruction LDRH not yet implemented."
	203 Compare X9, 0
	204 JumpIfEqual {211}
	205 Move X10, [X8+176]
	206 Add X10, X10, 8
	207 NotImplemented "Instruction LDUR not yet implemented."
	208 NotImplemented "Instruction CMP not yet implemented."
	209 Subtract X9, X9, 1
	210 Add X10, X10, 16
	211 Move X0, X20
	212 Move W2, W31
	213 Call 0x1C5D788
	214 NotImplemented "Instruction LDRSW not yet implemented."
	215 Add X8, X8, X9
	216 Add X0, X8, 312
	217 Move X8, [X0]
	218 Move X1, [X0+8]
	219 Move X0, X20
	220 NotImplemented "Instruction BLR not yet implemented."
	221 Compare X0, 0
	222 JumpIfEqual {280}
	223 Move X1, X31
	224 Call Component.get_transform, X0
	225 Compare X0, 0
	226 JumpIfEqual {281}
	227 Move X1, X31
	228 Call Transform.SetAsLastSibling, X0
	229 Move X21, X31
	230 Move W23, 6
	231 Compare X20, 0
	232 JumpIfEqual {254}
	233 Move X8, [X20]
	234 Move X1, [X22]
	235 NotImplemented "Instruction LDRH not yet implemented."
	236 Compare X9, 0
	237 JumpIfEqual {244}
	238 Move X10, [X8+176]
	239 Add X10, X10, 8
	240 NotImplemented "Instruction LDUR not yet implemented."
	241 NotImplemented "Instruction CMP not yet implemented."
	242 Subtract X9, X9, 1
	243 Add X10, X10, 16
	244 Move X0, X20
	245 Move W2, W31
	246 Call 0x1C5D788
	247 NotImplemented "Instruction LDRSW not yet implemented."
	248 Add X8, X8, X9
	249 Add X0, X8, 312
	250 Move X8, [X0]
	251 Move X1, [X0+8]
	252 Move X0, X20
	253 NotImplemented "Instruction BLR not yet implemented."
	254 Compare X21, 0
	255 JumpIfNotEqual {284}
	256 NotImplemented "Instruction CMP not yet implemented."
	257 Compare W23, 0
	258 JumpIfNotEqual {262}
	259 Move W8, [X19+184]
	260 Compare W8, 0
	261 JumpIfEqual {270}
	262 Move X20, [X31+48]
	263 Move X19, [X31+56]
	264 Move X22, [X31+32]
	265 Move X21, [X31+40]
	266 Move X24, [X31+16]
	267 Move X23, [X31+24]
	268 Move X30, [X31+64]
	269 Return 
	270 Move X0, X19
	271 Move X20, [X31+48]
	272 Move X19, [X31+56]
	273 Move X22, [X31+32]
	274 Move X21, [X31+40]
	275 Move X24, [X31+16]
	276 Move X23, [X31+24]
	277 Move X30, [X31+64]
	278 Call FriendsBoardView.UpdateHeadContainers, X0
	279 Return 
	280 Call 0x1C17F20
	281 Call 0x1C17F20
	282 Call 0x1C17F20
	283 Call 0x1C17F20
	284 Move X0, X21
	285 Call 0x1C17F18
	286 NotImplemented "Instruction CMP not yet implemented."
	287 Call 0x3EB2AD0
	288 Move X21, [X0]
	289 Call 0x3EB2AE0
	290 Move W23, W31
	291 Compare X20, 0
	292 JumpIfNotEqual {233}
	293 Move X19, X0
	294 Move X21, X31
	295 Move X19, X0
	296 Compare X20, 0
	297 JumpIfEqual {319}
	298 Move X8, [X20]
	299 Move X1, [X22]
	300 NotImplemented "Instruction LDRH not yet implemented."
	301 Compare X9, 0
	302 JumpIfEqual {309}
	303 Move X10, [X8+176]
	304 Add X10, X10, 8
	305 NotImplemented "Instruction LDUR not yet implemented."
	306 NotImplemented "Instruction CMP not yet implemented."
	307 Subtract X9, X9, 1
	308 Add X10, X10, 16
	309 Move X0, X20
	310 Move W2, W31
	311 Call 0x1C5D788
	312 NotImplemented "Instruction LDRSW not yet implemented."
	313 Add X8, X8, X9
	314 Add X0, X8, 312
	315 Move X8, [X0]
	316 Move X1, [X0+8]
	317 Move X0, X20
	318 NotImplemented "Instruction BLR not yet implemented."
	319 Compare X21, 0
	320 JumpIfNotEqual {323}
	321 Move X0, X19
	322 Call 0x1D2D690
	323 Move X0, X21
	324 Call 0x1C17F18
	325 Call 0x1991590

Method: System.Void SortNotifications()

Disassembly:
	0x01D815D8 MOV X1, X19
	0x01D815DC MOV X3, X31
	0x01D815E0 BL 0x2A6B948
	0x01D815E4 CBZ X25, 0x1D81A7C
	0x01D815E8 MOV X0, X25
	0x01D815EC MOV X1, X26
	0x01D815F0 BL 0x1D7E7D4
	0x01D815F4 LDR X25, [X31 + 0x10]
	0x01D815F8 LDR X0, [X29]
	0x01D815FC BL 0x1C16F10
	0x01D81600 ADRP X8, 0x2375000
	0x01D81604 LDR X8, [X8 + 0x528]
	0x01D81608 MOV X26, X0
	0x01D8160C LDR X2, [X8]
	0x01D81610 MOV X1, X19
	0x01D81614 MOV X3, X31
	0x01D81618 BL 0x2A6B948
	0x01D8161C CBZ X25, 0x1D81A84
	0x01D81620 MOV X0, X25
	0x01D81624 MOV X1, X26
	0x01D81628 BL 0x1D7E884
	0x01D8162C LDR X25, [X31 + 0x10]
	0x01D81630 LDR X0, [X29]
	0x01D81634 BL 0x1C16F10
	0x01D81638 ADRP X8, 0x2375000
	0x01D8163C LDR X8, [X8 + 0x4F0]
	0x01D81640 MOV X26, X0
	0x01D81644 LDR X2, [X8]
	0x01D81648 MOV X1, X19
	0x01D8164C MOV X3, X31
	0x01D81650 BL 0x2A6B948
	0x01D81654 CBZ X25, 0x1D81A80
	0x01D81658 MOV X0, X25
	0x01D8165C MOV X1, X26
	0x01D81660 BL 0x1D7E934
	0x01D81664 LDR X25, [X31 + 0x10]
	0x01D81668 LDR X0, [X29]
	0x01D8166C BL 0x1C16F10
	0x01D81670 ADRP X8, 0x2375000
	0x01D81674 LDR X8, [X8 + 0x508]
	0x01D81678 MOV X26, X0
	0x01D8167C LDR X2, [X8]
	0x01D81680 MOV X1, X19
	0x01D81684 MOV X3, X31
	0x01D81688 BL 0x2A6B948
	0x01D8168C CBZ X25, 0x1D81A88
	0x01D81690 MOV X0, X25
	0x01D81694 MOV X1, X26
	0x01D81698 BL 0x1D7E9E4
	0x01D8169C LDR X25, [X31 + 0x10]
	0x01D816A0 LDR X0, [X29]
	0x01D816A4 BL 0x1C16F10
	0x01D816A8 ADRP X8, 0x2375000
	0x01D816AC LDR X8, [X8 + 0x4F8]
	0x01D816B0 MOV X26, X0
	0x01D816B4 LDR X2, [X8]
	0x01D816B8 MOV X1, X19
	0x01D816BC MOV X3, X31
	0x01D816C0 BL 0x2A6B948
	0x01D816C4 CBZ X25, 0x1D81AB0
	0x01D816C8 MOV X0, X25
	0x01D816CC MOV X1, X26
	0x01D816D0 BL 0x1D7EA94
	0x01D816D4 LDR X0, [X19 + 0x30]
	0x01D816D8 CBZ X0, 0x1D81A8C
	0x01D816DC ADRP X8, 0x2375000
	0x01D816E0 LDR X2, [X31 + 0x10]
	0x01D816E4 LDR X8, [X8 + 0x4C8]
	0x01D816E8 LDR X3, [X8]
	0x01D816EC MOV X1, X22
	0x01D816F0 BL 0x2AA5098
	0x01D816F4 LDR X0, [X21]
	0x01D816F8 LDR W8, [X0 + 0xE0]
	0x01D816FC CBNZ W8, 0x1D81704
	0x01D81700 BL 0x1C16DFC
	0x01D81704 LDRB W8, [X28 + 0x787]
	0x01D81708 CBNZ W8, 0x1D81718
	0x01D8170C MOV X0, X21
	0x01D81710 BL 0x1C16CF4
	0x01D81714 STRB W27, [X28 + 0x787]
	0x01D81718 LDR X0, [X21]
	0x01D8171C LDR W8, [X0 + 0xE0]
	0x01D81720 CBNZ W8, 0x1D8172C
	0x01D81724 BL 0x1C16DFC
	0x01D81728 LDR X0, [X21]
	0x01D8172C LDR X8, [X0 + 0xB8]
	0x01D81730 LDR X8, [X8]
	0x01D81734 CBZ X8, 0x1D81A60
	0x01D81738 LDR X8, [X8 + 0xB8]
	0x01D8173C CBZ X8, 0x1D81A5C
	0x01D81740 LDR X8, [X8 + 0x50]
	0x01D81744 CBZ X8, 0x1D81A64
	0x01D81748 LDR X1, [X8 + 0x50]
	0x01D8174C MOV X0, X22
	0x01D81750 MOV X2, X31
	0x01D81754 BL 0x321BA08
	0x01D81758 MOV W8, W0
	0x01D8175C LDR X0, [X21]
	0x01D81760 LDR W9, [X0 + 0xE0]
	0x01D81764 TBZ X8, 0x0, 0x1D81800
	0x01D81768 CBNZ W9, 0x1D81770
	0x01D8176C BL 0x1C16DFC
	0x01D81770 LDRB W8, [X28 + 0x787]
	0x01D81774 CBNZ W8, 0x1D81784
	0x01D81778 MOV X0, X21
	0x01D8177C BL 0x1C16CF4
	0x01D81780 STRB W27, [X28 + 0x787]
	0x01D81784 LDR X0, [X21]
	0x01D81788 LDR W8, [X0 + 0xE0]
	0x01D8178C CBNZ W8, 0x1D81798
	0x01D81790 BL 0x1C16DFC
	0x01D81794 LDR X0, [X21]
	0x01D81798 LDR X8, [X0 + 0xB8]
	0x01D8179C LDR X8, [X8]
	0x01D817A0 CBZ X8, 0x1D81A98
	0x01D817A4 LDR X8, [X8 + 0xB8]
	0x01D817A8 CBZ X8, 0x1D81AA8
	0x01D817AC LDR X8, [X8 + 0x60]
	0x01D817B0 CBZ X8, 0x1D81A9C
	0x01D817B4 LDRB W9, [X28 + 0x787]
	0x01D817B8 LDR X25, [X8 + 0x50]
	0x01D817BC CBNZ W9, 0x1D817D0
	0x01D817C0 MOV X0, X21
	0x01D817C4 BL 0x1C16CF4
	0x01D817C8 LDR X0, [X21]
	0x01D817CC STRB W27, [X28 + 0x787]
	0x01D817D0 LDR W8, [X0 + 0xE0]
	0x01D817D4 CBNZ W8, 0x1D817E0
	0x01D817D8 BL 0x1C16DFC
	0x01D817DC LDR X0, [X21]
	0x01D817E0 LDR X8, [X0 + 0xB8]
	0x01D817E4 LDR X8, [X8]
	0x01D817E8 CBZ X8, 0x1D81AA4
	0x01D817EC LDR X8, [X8 + 0xB8]
	0x01D817F0 CBZ X8, 0x1D81AA0
	0x01D817F4 LDR X26, [X8 + 0x70]
	0x01D817F8 MOVZ W4, 0x5
	0x01D817FC B 0x1D81948
	0x01D81800 CBNZ W9, 0x1D81808
	0x01D81804 BL 0x1C16DFC
	0x01D81808 LDRB W8, [X28 + 0x787]
	0x01D8180C CBNZ W8, 0x1D8181C
	0x01D81810 MOV X0, X21
	0x01D81814 BL 0x1C16CF4
	0x01D81818 STRB W27, [X28 + 0x787]
	0x01D8181C LDR X0, [X21]
	0x01D81820 LDR W8, [X0 + 0xE0]
	0x01D81824 CBNZ W8, 0x1D81830
	0x01D81828 BL 0x1C16DFC
	0x01D8182C LDR X0, [X21]
	0x01D81830 LDR X8, [X0 + 0xB8]
	0x01D81834 LDR X8, [X8]
	0x01D81838 CBZ X8, 0x1D81AAC
	0x01D8183C LDR X0, [X8 + 0xD8]
	0x01D81840 CBZ X0, 0x1D81A94
	0x01D81844 ADRP X8, 0x2373000
	0x01D81848 LDR X8, [X8 + 0x108]
	0x01D8184C LDR X3, [X8]
	0x01D81850 ADD X2, X31, 0x8
	0x01D81854 MOV X1, X22
	0x01D81858 BL 0x2609E34
	0x01D8185C TBZ X0, 0x0, 0x1D81884
	0x01D81860 LDR X8, [X31 + 0x8]
	0x01D81864 CBZ X8, 0x1D81AC0
	0x01D81868 LDR X0, [X8 + 0x60]
	0x01D8186C ADRP X8, 0x2373000
	0x01D81870 LDR X8, [X8 + 0x1F8]
	0x01D81874 LDR X1, [X8]
	0x01D81878 BL 0x265C594
	0x01D8187C MOV X25, X0
	0x01D81880 B 0x1D81890
	0x01D81884 ADRP X8, 0x2373000
	0x01D81888 LDR X8, [X8 + 0xF60]
	0x01D8188C LDR X25, [X8]
	0x01D81890 LDR X0, [X21]
	0x01D81894 LDR W8, [X0 + 0xE0]
	0x01D81898 CBNZ W8, 0x1D818A0
	0x01D8189C BL 0x1C16DFC
	0x01D818A0 LDRB W8, [X28 + 0x787]
	0x01D818A4 CBNZ W8, 0x1D818B4
	0x01D818A8 MOV X0, X21
	0x01D818AC BL 0x1C16CF4
	0x01D818B0 STRB W27, [X28 + 0x787]
	0x01D818B4 LDR X0, [X21]
	0x01D818B8 LDR W8, [X0 + 0xE0]
	0x01D818BC CBNZ W8, 0x1D818C8
	0x01D818C0 BL 0x1C16DFC
	0x01D818C4 LDR X0, [X21]
	0x01D818C8 LDR X8, [X0 + 0xB8]
	0x01D818CC LDR X8, [X8]
	0x01D818D0 CBZ X8, 0x1D81A90
	0x01D818D4 LDR X0, [X8 + 0xD0]
	0x01D818D8 CBZ X0, 0x1D81AB4
	0x01D818DC ADRP X8, 0x2373000
	0x01D818E0 LDR X8, [X8 + 0xC38]
	0x01D818E4 LDR X3, [X8]
	0x01D818E8 ADD X2, X31, 0x0
	0x01D818EC MOV X1, X22
	0x01D818F0 BL 0x2609E34
	0x01D818F4 LDR X8, [X31]
	0x01D818F8 ANDS W31, W0, 0x1
	0x01D818FC CSEL X26, X8, X31, NE
	0x01D81900 TBZ X24, 0x0, 0x1D81944
	0x01D81904 LDR X8, [X31 + 0x18]
	0x01D81908 CBZ X8, 0x1D81ABC
	0x01D8190C LDR X8, [X8 + 0x68]
	0x01D81910 CBZ X8, 0x1D81AB8
	0x01D81914 LDR W8, [X8 + 0x4C]
	0x01D81918 CMP W8, 0x3
	0x01D8191C B.HI 0x1D81944
	0x01D81920 ADRP X11, 0xFFFFFFFFFEDAC000
	0x01D81924 ADD X11, X11, 0x91C
	0x01D81928 ADR X9, 0x14
	0x01D8192C LDRB W10, [X11, X8, LSL]
	0x01D81930 ADD X9, X9, X10, 0x2, LSL
	0x01D81934 MOVZ W4, 0x3
	0x01D81938 BR X9
	0x01D8193C MOVZ W4, 0x1
	0x01D81940 B 0x1D81948
	0x01D81944 MOV W4, W31
	0x01D81948 LDR X0, [X31 + 0x10]
	0x01D8194C CBZ X0, 0x1D81A58
	0x01D81950 AND W3, W23, 0x1
	0x01D81954 MOV X1, X22
	0x01D81958 MOV X2, X25
	0x01D8195C BL 0x1D7EB44
	0x01D81960 LDR X8, [X31 + 0x10]
	0x01D81964 CBZ X8, 0x1D81A68
	0x01D81968 LDR X0, [X8 + 0x20]
	0x01D8196C CBZ X0, 0x1D81A6C
	0x01D81970 MOV X1, X26
	0x01D81974 BL 0x1D7CBE8
	0x01D81978 B 0x1D813B4
	0x01D8197C MOVZ W4, 0x2
	0x01D81980 B 0x1D81948
	0x01D81984 MOVZ W4, 0x4
	0x01D81988 B 0x1D81948
	0x01D8198C MOV X22, X31
	0x01D81990 MOVZ W21, 0x16
	0x01D81994 CBZ X20, 0x1D819F8
	0x01D81998 LDR X8, [X20]
	0x01D8199C ADRP X10, 0x2372000
	0x01D819A0 LDRH W9, [X8 + 0x12E]
	0x01D819A4 LDR X10, [X10 + 0xE00]
	0x01D819A8 LDR X1, [X10]
	0x01D819AC CBZ X9, 0x1D819D0
	0x01D819B0 LDR X10, [X8 + 0xB0]
	0x01D819B4 ADD X10, X10, 0x8
	0x01D819B8 LDUR X11, [X10 - 0x8]
	0x01D819BC CMP X11, X1
	0x01D819C0 B.EQ 0x1D819E0
	0x01D819C4 SUBS X9, X9, 0x1
	0x01D819C8 ADD X10, X10, 0x10
	0x01D819CC B.NE 0x1D819B8
	0x01D819D0 MOV X0, X20
	0x01D819D4 MOV W2, W31
	0x01D819D8 BL 0x1C5C788
	0x01D819DC B 0x1D819EC
	0x01D819E0 LDRSW X9, [X10]
	0x01D819E4 ADD X8, X8, X9, 0x4, LSL
	0x01D819E8 ADD X0, X8, 0x138
	0x01D819EC LDP X8, X1, [X0]
	0x01D819F0 MOV X0, X20
	0x01D819F4 BLR X8
	0x01D819F8 CBNZ X22, 0x1D81AC8
	0x01D819FC CMP W21, 0x16
	0x01D81A00 B.EQ 0x1D81A08
	0x01D81A04 CBNZ W21, 0x1D81A14
	0x01D81A08 LDR X0, [X19 + 0x28]
	0x01D81A0C CBZ X0, 0x1D81A34
	0x01D81A10 BL 0x1D7F568
	0x01D81A14 LDP X20, X19, [X31 + 0x70]
	0x01D81A18 LDP X22, X21, [X31 + 0x60]
	0x01D81A1C LDP X24, X23, [X31 + 0x50]
	0x01D81A20 LDP X26, X25, [X31 + 0x40]
	0x01D81A24 LDP X28, X27, [X31 + 0x30]
	0x01D81A28 LDP X29, X30, [X31 + 0x20]
	0x01D81A2C ADD X31, X31, 0x80
	0x01D81A30 RET
	0x01D81A34 BL 0x1C16F20
	0x01D81A38 BL 0x1C16F20
	0x01D81A3C BL 0x1C16F20
	0x01D81A40 BL 0x1C16F20
	0x01D81A44 BL 0x1C16F20
	0x01D81A48 BL 0x1C16F20
	0x01D81A4C BL 0x1C16F20
	0x01D81A50 BL 0x1C16F20
	0x01D81A54 BL 0x1C16F20
	0x01D81A58 BL 0x1C16F20
	0x01D81A5C BL 0x1C16F20
	0x01D81A60 BL 0x1C16F20
	0x01D81A64 BL 0x1C16F20
	0x01D81A68 BL 0x1C16F20
	0x01D81A6C BL 0x1C16F20
	0x01D81A70 BL 0x1C16F28
	0x01D81A74 BL 0x1C16F20
	0x01D81A78 BL 0x1C16F20
	0x01D81A7C BL 0x1C16F20
	0x01D81A80 BL 0x1C16F20
	0x01D81A84 BL 0x1C16F20
	0x01D81A88 BL 0x1C16F20
	0x01D81A8C BL 0x1C16F20
	0x01D81A90 BL 0x1C16F20
	0x01D81A94 BL 0x1C16F20
	0x01D81A98 BL 0x1C16F20
	0x01D81A9C BL 0x1C16F20
	0x01D81AA0 BL 0x1C16F20
	0x01D81AA4 BL 0x1C16F20
	0x01D81AA8 BL 0x1C16F20
	0x01D81AAC BL 0x1C16F20
	0x01D81AB0 BL 0x1C16F20
	0x01D81AB4 BL 0x1C16F20
	0x01D81AB8 BL 0x1C16F20
	0x01D81ABC BL 0x1C16F20
	0x01D81AC0 BL 0x1C16F20
	0x01D81AC4 BL 0x1C16F20
	0x01D81AC8 MOV X0, X22
	0x01D81ACC BL 0x1C16F18
	0x01D81AD0 B 0x1D81BC4
	0x01D81AD4 B 0x1D81BC4
	0x01D81AD8 B 0x1D81BC4
	0x01D81ADC B 0x1D81BC4
	0x01D81AE0 B 0x1D81BC4
	0x01D81AE4 B 0x1D81BC4
	0x01D81AE8 B 0x1D81BC4
	0x01D81AEC B 0x1D81BC4
	0x01D81AF0 B 0x1D81BC4
	0x01D81AF4 B 0x1D81BC4
	0x01D81AF8 B 0x1D81BC4
	0x01D81AFC B 0x1D81BC4
	0x01D81B00 B 0x1D81BC4
	0x01D81B04 B 0x1D81BC4
	0x01D81B08 B 0x1D81BC4
	0x01D81B0C B 0x1D81BC4
	0x01D81B10 B 0x1D81BC4
	0x01D81B14 B 0x1D81BC4
	0x01D81B18 B 0x1D81BC4
	0x01D81B1C B 0x1D81BC4
	0x01D81B20 B 0x1D81BC4

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x2658000
	009 Move X20, 0x2376000
	010 Move X22, 0x2376000
	011 Move W8, [X21+2432]
	012 Move X20, [X20+1400]
	013 Move X22, [X22+1408]
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {66}
	019 Move X0, 0x2376000
	020 Move X0, [X0+1400]
	021 Call 0x1C17CF4
	022 Move X0, 0x2376000
	023 Move X0, [X0+1648]
	024 Call 0x1C17CF4
	025 Move X0, 0x2376000
	026 Move X0, [X0+1656]
	027 Call 0x1C17CF4
	028 Move X0, 0x2376000
	029 Move X0, [X0+1664]
	030 Call 0x1C17CF4
	031 Move X0, 0x2376000
	032 Move X0, [X0+1672]
	033 Call 0x1C17CF4
	034 Move X0, 0x2376000
	035 Move X0, [X0+1680]
	036 Call 0x1C17CF4
	037 Move X0, 0x2376000
	038 Move X0, [X0+1688]
	039 Call 0x1C17CF4
	040 Move X0, 0x2373000
	041 Move X0, [X0+3584]
	042 Call 0x1C17CF4
	043 Move X0, 0x2376000
	044 Move X0, [X0+1696]
	045 Call 0x1C17CF4
	046 Move X0, 0x2376000
	047 Move X0, [X0+1704]
	048 Call 0x1C17CF4
	049 Move X0, 0x2373000
	050 Move X0, [X0+3608]
	051 Call 0x1C17CF4
	052 Move X0, 0x2376000
	053 Move X0, [X0+1712]
	054 Call 0x1C17CF4
	055 Move X0, 0x2376000
	056 Move X0, [X0+1720]
	057 Call 0x1C17CF4
	058 Move X0, 0x2376000
	059 Move X0, [X0+1728]
	060 Call 0x1C17CF4
	061 Move X0, 0x2376000
	062 Move X0, [X0+1408]
	063 Call 0x1C17CF4
	064 Move W8, 1
	065 Move [X21+2432], W8
	066 Move X0, [X19+64]
	067 Move X1, [X20]
	068 Call Enumerable.Cast, X0
	069 Move X8, [X22]
	070 Move X19, X0
	071 Move W9, [X8+224]
	072 Compare W9, 0
	073 JumpIfNotEqual {77}
	074 Move X0, X8
	075 Call 0x1C17DFC
	076 Move X8, [X22]
	077 Move X9, [X8+184]
	078 Move X23, 0x2376000
	079 Move X20, [X9+112]
	080 Move X23, [X23+1656]
	081 Compare X20, 0
	082 JumpIfNotEqual {105}
	083 Move W9, [X8+224]
	084 Compare W9, 0
	085 JumpIfNotEqual {89}
	086 Move X0, X8
	087 Call 0x1C17DFC
	088 Move X8, [X22]
	089 Move X9, 0x2376000
	090 Move X8, [X8+184]
	091 Move X9, [X9+1680]
	092 Move X21, [X8]
	093 Move X0, [X9]
	094 Call 0x1C17F10
	095 Move X8, 0x2376000
	096 Move X8, [X8+1712]
	097 Move X1, X21
	098 Move X3, X31
	099 Move X20, X0
	100 Move X2, [X8]
	101 Call Func`2<Object, Object>..ctor, X0, X1, X2
	102 Move X8, [X22]
	103 Move X8, [X8+184]
	104 Move [X8+112], X20
	105 Move X2, [X23]
	106 Move X0, X19
	107 Move X1, X20
	108 Call Enumerable.Select, X0, X1
	109 Move X8, [X22]
	110 Move X19, X0
	111 Move W9, [X8+224]
	112 Compare W9, 0
	113 JumpIfNotEqual {117}
	114 Move X0, X8
	115 Call 0x1C17DFC
	116 Move X8, [X22]
	117 Move X9, [X8+184]
	118 Move X23, 0x2376000
	119 Move X20, [X9+120]
	120 Move X23, [X23+1664]
	121 Compare X20, 0
	122 JumpIfNotEqual {145}
	123 Move W9, [X8+224]
	124 Compare W9, 0
	125 JumpIfNotEqual {129}
	126 Move X0, X8
	127 Call 0x1C17DFC
	128 Move X8, [X22]
	129 Move X9, 0x2376000
	130 Move X8, [X8+184]
	131 Move X9, [X9+1672]
	132 Move X21, [X8]
	133 Move X0, [X9]
	134 Call 0x1C17F10
	135 Move X8, 0x2376000
	136 Move X8, [X8+1720]
	137 Move X1, X21
	138 Move X3, X31
	139 Move X20, X0
	140 Move X2, [X8]
	141 Call Func`2<Object, Boolean>..ctor, X0, X1, X2
	142 Move X8, [X22]
	143 Move X8, [X8+184]
	144 Move [X8+120], X20
	145 Move X2, [X23]
	146 Move X0, X19
	147 Move X1, X20
	148 Call Enumerable.Where, X0, X1
	149 Move X8, [X22]
	150 Move X19, X0
	151 Move W9, [X8+224]
	152 Compare W9, 0
	153 JumpIfNotEqual {157}
	154 Move X0, X8
	155 Call 0x1C17DFC
	156 Move X8, [X22]
	157 Move X9, [X8+184]
	158 Move X23, 0x2376000
	159 Move X20, [X9+128]
	160 Move X23, [X23+1648]
	161 Compare X20, 0
	162 JumpIfNotEqual {185}
	163 Move W9, [X8+224]
	164 Compare W9, 0
	165 JumpIfNotEqual {169}
	166 Move X0, X8
	167 Call 0x1C17DFC
	168 Move X8, [X22]
	169 Move X9, 0x2376000
	170 Move X8, [X8+184]
	171 Move X9, [X9+1688]
	172 Move X21, [X8]
	173 Move X0, [X9]
	174 Call 0x1C17F10
	175 Move X8, 0x2376000
	176 Move X8, [X8+1728]
	177 Move X1, X21
	178 Move X3, X31
	179 Move X20, X0
	180 Move X2, [X8]
	181 Call Func`2<Object, DateTime>..ctor, X0, X1, X2
	182 Move X8, [X22]
	183 Move X8, [X8+184]
	184 Move [X8+128], X20
	185 Move X2, [X23]
	186 Move X0, X19
	187 Move X1, X20
	188 Call 0x21CADE8, X0, X1
	189 Compare X0, 0
	190 JumpIfEqual {314}
	191 Move X10, 0x2376000
	192 Move X8, [X0]
	193 Move X10, [X10+1696]
	194 Move X19, X0
	195 NotImplemented "Instruction LDRH not yet implemented."
	196 Move X1, [X10]
	197 Compare X9, 0
	198 JumpIfEqual {205}
	199 Move X10, [X8+176]
	200 Add X10, X10, 8
	201 NotImplemented "Instruction LDUR not yet implemented."
	202 NotImplemented "Instruction CMP not yet implemented."
	203 Subtract X9, X9, 1
	204 Add X10, X10, 16
	205 Move X0, X19
	206 Move W2, W31
	207 Call 0x1C5D788
	208 NotImplemented "Instruction LDRSW not yet implemented."
	209 Add X8, X8, X9
	210 Add X0, X8, 312
	211 Move X8, [X0]
	212 Move X1, [X0+8]
	213 Move X21, 0x2373000
	214 Move X21, [X21+3584]
	215 Move X0, X19
	216 NotImplemented "Instruction BLR not yet implemented."
	217 Move X19, X0
	218 Compare X0, 0
	219 JumpIfEqual {315}
	220 Move X20, 0x2373000
	221 Move X22, 0x2376000
	222 Move X20, [X20+3608]
	223 Move X22, [X22+1704]
	224 Move X8, [X19]
	225 Move X1, [X20]
	226 NotImplemented "Instruction LDRH not yet implemented."
	227 Compare X9, 0
	228 JumpIfEqual {235}
	229 Move X10, [X8+176]
	230 Add X10, X10, 8
	231 NotImplemented "Instruction LDUR not yet implemented."
	232 NotImplemented "Instruction CMP not yet implemented."
	233 Subtract X9, X9, 1
	234 Add X10, X10, 16
	235 Move X0, X19
	236 Move W2, W31
	237 Call 0x1C5D788
	238 NotImplemented "Instruction LDRSW not yet implemented."
	239 Add X8, X8, X9
	240 Add X0, X8, 312
	241 Move X8, [X0]
	242 Move X1, [X0+8]
	243 Move X0, X19
	244 NotImplemented "Instruction BLR not yet implemented."
	245 Move TEMP, X0
	246 And TEMP, TEMP, 1
	247 Compare TEMP, 1
	248 JumpIfNotEqual {278}
	249 Move X8, [X19]
	250 Move X1, [X22]
	251 NotImplemented "Instruction LDRH not yet implemented."
	252 Compare X9, 0
	253 JumpIfEqual {260}
	254 Move X10, [X8+176]
	255 Add X10, X10, 8
	256 NotImplemented "Instruction LDUR not yet implemented."
	257 NotImplemented "Instruction CMP not yet implemented."
	258 Subtract X9, X9, 1
	259 Add X10, X10, 16
	260 Move X0, X19
	261 Move W2, W31
	262 Call 0x1C5D788
	263 NotImplemented "Instruction LDRSW not yet implemented."
	264 Add X8, X8, X9
	265 Add X0, X8, 312
	266 Move X8, [X0]
	267 Move X1, [X0+8]
	268 Move X0, X19
	269 NotImplemented "Instruction BLR not yet implemented."
	270 Compare X0, 0
	271 JumpIfEqual {312}
	272 Move X1, X31
	273 Call Component.get_transform, X0
	274 Compare X0, 0
	275 JumpIfEqual {313}
	276 Move X1, X31
	277 Call Transform.SetAsLastSibling, X0
	278 Move X20, X31
	279 Compare X19, 0
	280 JumpIfEqual {302}
	281 Move X8, [X19]
	282 Move X1, [X21]
	283 NotImplemented "Instruction LDRH not yet implemented."
	284 Compare X9, 0
	285 JumpIfEqual {292}
	286 Move X10, [X8+176]
	287 Add X10, X10, 8
	288 NotImplemented "Instruction LDUR not yet implemented."
	289 NotImplemented "Instruction CMP not yet implemented."
	290 Subtract X9, X9, 1
	291 Add X10, X10, 16
	292 Move X0, X19
	293 Move W2, W31
	294 Call 0x1C5D788
	295 NotImplemented "Instruction LDRSW not yet implemented."
	296 Add X8, X8, X9
	297 Add X0, X8, 312
	298 Move X8, [X0]
	299 Move X1, [X0+8]
	300 Move X0, X19
	301 NotImplemented "Instruction BLR not yet implemented."
	302 Compare X20, 0
	303 JumpIfNotEqual {316}
	304 Move X20, [X31+48]
	305 Move X19, [X31+56]
	306 Move X22, [X31+32]
	307 Move X21, [X31+40]
	308 Move X30, [X31+16]
	309 Move X23, [X31+24]
	310 Add X31, X31, 64
	311 Return 
	312 Call 0x1C17F20
	313 Call 0x1C17F20
	314 Call 0x1C17F20
	315 Call 0x1C17F20
	316 Move X0, X20
	317 Call 0x1C17F18
	318 NotImplemented "Instruction CMP not yet implemented."
	319 Call 0x3EB2AD0
	320 Move X20, [X0]
	321 Call 0x3EB2AE0
	322 Move [X31+8], X0
	323 Move X20, X31
	324 Move [X31+8], X0
	325 Compare X19, 0
	326 JumpIfEqual {348}
	327 Move X8, [X19]
	328 Move X1, [X21]
	329 NotImplemented "Instruction LDRH not yet implemented."
	330 Compare X9, 0
	331 JumpIfEqual {338}
	332 Move X10, [X8+176]
	333 Add X10, X10, 8
	334 NotImplemented "Instruction LDUR not yet implemented."
	335 NotImplemented "Instruction CMP not yet implemented."
	336 Subtract X9, X9, 1
	337 Add X10, X10, 16
	338 Move X0, X19
	339 Move W2, W31
	340 Call 0x1C5D788
	341 NotImplemented "Instruction LDRSW not yet implemented."
	342 Add X8, X8, X9
	343 Add X0, X8, 312
	344 Move X8, [X0]
	345 Move X1, [X0+8]
	346 Move X0, X19
	347 NotImplemented "Instruction BLR not yet implemented."
	348 Compare X20, 0
	349 JumpIfNotEqual {352}
	350 Move X0, [X31+8]
	351 Call 0x1D2D690
	352 Move X0, X20
	353 Call 0x1C17F18
	354 Call 0x1991590

Method: System.Void .ctor()

Disassembly:
	0x01D867C4 BL 0x1C16F10
	0x01D867C8 LDR X2, [X21]
	0x01D867CC MOV X1, X19
	0x01D867D0 MOV X3, X31

ISIL:
	001 Move W8, 0x3F800000
	002 Move X1, X31
	003 Move [X0+188], W8
	004 Call MonoBehaviour..ctor, X0
	005 Return 

