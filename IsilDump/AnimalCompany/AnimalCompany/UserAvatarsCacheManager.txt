Type: AnimalCompany.UserAvatarsCacheManager

Method: System.Void Awake()

Disassembly:
	0x01D51200 LDR X0, [X0 + 0xC08]
	0x01D51204 BL 0x1C16CF4
	0x01D51208 ADRP X0, 0x23A3000
	0x01D5120C LDR X0, [X0 + 0xCC8]
	0x01D51210 BL 0x1C16CF4
	0x01D51214 ADRP X0, 0x23A3000
	0x01D51218 LDR X0, [X0 + 0xCD0]
	0x01D5121C BL 0x1C16CF4
	0x01D51220 ADRP X0, 0x23A3000
	0x01D51224 LDR X0, [X0 + 0xCD8]
	0x01D51228 BL 0x1C16CF4
	0x01D5122C ADRP X0, 0x23A3000
	0x01D51230 LDR X0, [X0 + 0xCE0]
	0x01D51234 BL 0x1C16CF4
	0x01D51238 ADRP X0, 0x23A3000
	0x01D5123C LDR X0, [X0 + 0xCE8]
	0x01D51240 BL 0x1C16CF4
	0x01D51244 ADRP X0, 0x23A3000
	0x01D51248 LDR X0, [X0 + 0xCF0]
	0x01D5124C BL 0x1C16CF4
	0x01D51250 ADRP X0, 0x23A3000
	0x01D51254 LDR X0, [X0 + 0xCF8]
	0x01D51258 BL 0x1C16CF4
	0x01D5125C ADRP X0, 0x23A3000
	0x01D51260 LDR X0, [X0 + 0xC18]
	0x01D51264 BL 0x1C16CF4
	0x01D51268 ADRP X0, 0x23A3000
	0x01D5126C LDR X0, [X0 + 0xD00]
	0x01D51270 BL 0x1C16CF4
	0x01D51274 ADRP X0, 0x23A3000
	0x01D51278 LDR X0, [X0 + 0xBD0]
	0x01D5127C BL 0x1C16CF4
	0x01D51280 MOVZ W8, 0x1
	0x01D51284 STRB W8, [X20 + 0x7C0]
	0x01D51288 LDR W8, [X19 + 0x10]
	0x01D5128C LDR X20, [X19 + 0x20]
	0x01D51290 CMP W8, 0x2
	0x01D51294 B.EQ 0x1D51510
	0x01D51298 CMP W8, 0x1
	0x01D5129C B.EQ 0x1D515AC
	0x01D512A0 CBNZ W8, 0x1D515A4
	0x01D512A4 MOVN W8, 0x0
	0x01D512A8 STR W8, [X19 + 0x10]
	0x01D512AC ADRP X8, 0x23A3000
	0x01D512B0 LDR X8, [X8 + 0xCF8]
	0x01D512B4 LDR X0, [X8]
	0x01D512B8 BL 0x1C16F10
	0x01D512BC MOV X1, X31
	0x01D512C0 MOV X21, X0
	0x01D512C4 BL 0x33BDD8C
	0x01D512C8 STR X21, [X19 + 0x28]
	0x01D512CC ADRP X22, 0x23A2000
	0x01D512D0 LDR X22, [X22 + 0x648]
	0x01D512D4 LDR X0, [X22]
	0x01D512D8 LDR W8, [X0 + 0xE0]
	0x01D512DC CBNZ W8, 0x1D512E4
	0x01D512E0 BL 0x1C16DFC
	0x01D512E4 ADRP X24, 0x2687000
	0x01D512E8 LDRB W8, [X24 + 0x787]
	0x01D512EC CBNZ W8, 0x1D51304
	0x01D512F0 ADRP X0, 0x23A2000
	0x01D512F4 LDR X0, [X0 + 0x648]
	0x01D512F8 BL 0x1C16CF4
	0x01D512FC MOVZ W8, 0x1
	0x01D51300 STRB W8, [X24 + 0x787]
	0x01D51304 LDR X0, [X22]
	0x01D51308 LDR W8, [X0 + 0xE0]
	0x01D5130C CBNZ W8, 0x1D51318
	0x01D51310 BL 0x1C16DFC
	0x01D51314 LDR X0, [X22]
	0x01D51318 LDR X8, [X0 + 0xB8]
	0x01D5131C LDR X8, [X8]
	0x01D51320 CBZ X8, 0x1D51930
	0x01D51324 LDR X8, [X8 + 0xE0]
	0x01D51328 CBZ X8, 0x1D51930
	0x01D5132C LDRB W9, [X24 + 0x787]
	0x01D51330 LDR X23, [X8 + 0x70]
	0x01D51334 CBNZ W9, 0x1D5134C
	0x01D51338 MOV X0, X22
	0x01D5133C BL 0x1C16CF4
	0x01D51340 LDR X0, [X22]
	0x01D51344 MOVZ W8, 0x1
	0x01D51348 STRB W8, [X24 + 0x787]
	0x01D5134C LDR W8, [X0 + 0xE0]
	0x01D51350 CBNZ W8, 0x1D5135C
	0x01D51354 BL 0x1C16DFC
	0x01D51358 LDR X0, [X22]
	0x01D5135C LDR X8, [X0 + 0xB8]
	0x01D51360 LDR X8, [X8]
	0x01D51364 CBZ X8, 0x1D51930
	0x01D51368 LDR X8, [X8 + 0xB8]
	0x01D5136C CBZ X8, 0x1D51930
	0x01D51370 LDR X8, [X8 + 0xA0]
	0x01D51374 CBZ X8, 0x1D51930
	0x01D51378 LDR X0, [X8 + 0x48]
	0x01D5137C CBZ X0, 0x1D51930
	0x01D51380 ADRP X8, 0x23A3000
	0x01D51384 LDR X8, [X8 + 0xC08]
	0x01D51388 LDR X1, [X8]
	0x01D5138C BL 0x260877C
	0x01D51390 ADRP X25, 0x23A3000
	0x01D51394 LDR X25, [X25 + 0xC90]
	0x01D51398 MOV X1, X0
	0x01D5139C MOV X0, X23
	0x01D513A0 LDR X2, [X25]
	0x01D513A4 BL 0x21D7D5C
	0x01D513A8 CBZ X21, 0x1D51930
	0x01D513AC STR X0, [X21 + 0x18]
	0x01D513B0 LDR X24, [X19 + 0x28]
	0x01D513B4 CBZ X24, 0x1D51930
	0x01D513B8 ADRP X26, 0x23A3000
	0x01D513BC LDR X26, [X26 + 0xC18]
	0x01D513C0 LDR X21, [X24 + 0x18]
	0x01D513C4 LDR X0, [X26]
	0x01D513C8 LDR W8, [X0 + 0xE0]
	0x01D513CC CBNZ W8, 0x1D513D8
	0x01D513D0 BL 0x1C16DFC
	0x01D513D4 LDR X0, [X26]
	0x01D513D8 LDR X8, [X0 + 0xB8]
	0x01D513DC LDR X22, [X8 + 0x8]
	0x01D513E0 CBNZ X22, 0x1D51434
	0x01D513E4 LDR W8, [X0 + 0xE0]
	0x01D513E8 CBNZ W8, 0x1D513F4
	0x01D513EC BL 0x1C16DFC
	0x01D513F0 LDR X0, [X26]
	0x01D513F4 ADRP X9, 0x23A3000
	0x01D513F8 LDR X8, [X0 + 0xB8]
	0x01D513FC LDR X9, [X9 + 0xBF8]
	0x01D51400 LDR X23, [X8]
	0x01D51404 LDR X0, [X9]
	0x01D51408 BL 0x1C16F10
	0x01D5140C ADRP X8, 0x23A3000
	0x01D51410 LDR X8, [X8 + 0xCD8]
	0x01D51414 MOV X1, X23
	0x01D51418 MOV X3, X31
	0x01D5141C MOV X22, X0
	0x01D51420 LDR X2, [X8]
	0x01D51424 BL 0x2D2F428
	0x01D51428 LDR X8, [X26]
	0x01D5142C LDR X8, [X8 + 0xB8]
	0x01D51430 STR X22, [X8 + 0x8]
	0x01D51434 ADRP X8, 0x23A3000
	0x01D51438 LDR X8, [X8 + 0xCA0]
	0x01D5143C MOV X0, X21
	0x01D51440 MOV X1, X22
	0x01D51444 LDR X2, [X8]
	0x01D51448 BL 0x21DA490
	0x01D5144C CBZ X20, 0x1D51930
	0x01D51450 LDR X1, [X20 + 0x28]
	0x01D51454 LDR X2, [X25]
	0x01D51458 BL 0x21D7D5C
	0x01D5145C ADRP X21, 0x23A2000
	0x01D51460 LDR X21, [X21 + 0xEB8]
	0x01D51464 LDR X1, [X21]
	0x01D51468 BL 0x21D577C
	0x01D5146C STR X0, [X24 + 0x10]
	0x01D51470 LDR X20, [X19 + 0x28]
	0x01D51474 CBZ X20, 0x1D51930
	0x01D51478 LDR X0, [X20 + 0x10]
	0x01D5147C CBZ X0, 0x1D51930
	0x01D51480 LDR X8, [X0 + 0x18]
	0x01D51484 CBZ X8, 0x1D515A4
	0x01D51488 CMP W8, 0x15
	0x01D5148C B.LT 0x1D514B4
	0x01D51490 ADRP X8, 0x23A3000
	0x01D51494 LDR X8, [X8 + 0xC88]
	0x01D51498 MOVZ W1, 0x14
	0x01D5149C LDR X2, [X8]
	0x01D514A0 BL 0x21D4A54
	0x01D514A4 LDR X1, [X21]
	0x01D514A8 BL 0x21D577C
	0x01D514AC STR X0, [X20 + 0x10]
	0x01D514B0 LDR X20, [X19 + 0x28]
	0x01D514B4 ADRP X8, 0x23A3000
	0x01D514B8 LDR X8, [X8 + 0xCD0]
	0x01D514BC LDR X0, [X8]
	0x01D514C0 BL 0x1C16F10
	0x01D514C4 ADRP X8, 0x23A3000
	0x01D514C8 LDR X8, [X8 + 0xCE8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X19, 0x2688000
	008 Move X21, 0x23A4000
	009 Move X22, 0x23A3000
	010 Move W8, [X19+1971]
	011 Move X21, [X21+3008]
	012 Move X22, [X22+1432]
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {38}
	018 Move X0, 0x23A3000
	019 Move X0, [X0+1608]
	020 Call 0x1C17CF4
	021 Move X0, 0x23A3000
	022 Move X0, [X0+3504]
	023 Call 0x1C17CF4
	024 Move X0, 0x23A3000
	025 Move X0, [X0+1432]
	026 Call 0x1C17CF4
	027 Move X0, 0x23A3000
	028 Move X0, [X0+3488]
	029 Call 0x1C17CF4
	030 Move X0, 0x23A4000
	031 Move X0, [X0+3016]
	032 Call 0x1C17CF4
	033 Move X0, 0x23A4000
	034 Move X0, [X0+3008]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X19+1971], W8
	038 Move X8, [X21]
	039 Move X0, [X22]
	040 Move X8, [X8+184]
	041 Move W9, [X0+224]
	042 Move X19, [X8]
	043 Compare W9, 0
	044 JumpIfNotEqual {46}
	045 Call 0x1C17DFC
	046 Move X0, X19
	047 Move X1, X31
	048 Move X2, X31
	049 Call Object.op_Inequality, X0, X1
	050 Move TEMP, X0
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfNotEqual {69}
	054 Move X0, [X22]
	055 Move W8, [X0+224]
	056 Compare W8, 0
	057 JumpIfNotEqual {59}
	058 Call 0x1C17DFC
	059 Move X0, X20
	060 Move X20, [X31+32]
	061 Move X19, [X31+40]
	062 Move X22, [X31+16]
	063 Move X21, [X31+24]
	064 Move X1, X31
	065 Move X30, [X31+48]
	066 Move X23, [X31+56]
	067 Call Object.Destroy, X0
	068 Return 
	069 Move X8, [X21]
	070 Move X8, [X8+184]
	071 Move [X8], X20
	072 Move X8, 0x23A3000
	073 Move X8, [X8+3488]
	074 Move X0, [X8]
	075 Call 0x1C17F10
	076 Move X8, 0x23A4000
	077 Move X8, [X8+3016]
	078 Move X1, X20
	079 Move X3, X31
	080 Move X19, X0
	081 Move X2, [X8]
	082 Call ObserverDelegate..ctor, X0, X1, X2
	083 Move X8, 0x23A3000
	084 Move X8, [X8+3504]
	085 Move W1, 3
	086 Move X0, [X8]
	087 Call 0x1C17D6C
	088 Move X22, 0x23A3000
	089 Move X22, [X22+1608]
	090 Move X20, X0
	091 Move X8, [X22]
	092 Move W9, [X8+224]
	093 Compare W9, 0
	094 JumpIfNotEqual {97}
	095 Move X0, X8
	096 Call 0x1C17DFC
	097 Move X23, 0x2688000
	098 Move W8, [X23+1927]
	099 Compare W8, 0
	100 JumpIfNotEqual {106}
	101 Move X0, 0x23A3000
	102 Move X0, [X0+1608]
	103 Call 0x1C17CF4
	104 Move W8, 1
	105 Move [X23+1927], W8
	106 Move X0, [X22]
	107 Move W8, [X0+224]
	108 Compare W8, 0
	109 JumpIfNotEqual {112}
	110 Call 0x1C17DFC
	111 Move X0, [X22]
	112 Move X8, [X0+184]
	113 Move X8, [X8]
	114 Compare X8, 0
	115 JumpIfEqual {214}
	116 Move X8, [X8+224]
	117 Compare X8, 0
	118 JumpIfEqual {214}
	119 Compare X20, 0
	120 JumpIfEqual {214}
	121 Move X21, [X8+72]
	122 Compare X21, 0
	123 JumpIfEqual {130}
	124 Move X8, [X20]
	125 Move X0, X21
	126 Move X1, [X8+64]
	127 Call 0x1C17E00
	128 Compare X0, 0
	129 JumpIfEqual {216}
	130 Move W8, [X20+24]
	131 Compare W8, 0
	132 JumpIfEqual {215}
	133 Move [X20+32], X21
	134 Move W8, [X23+1927]
	135 Compare W8, 0
	136 JumpIfNotEqual {142}
	137 Move X0, 0x23A3000
	138 Move X0, [X0+1608]
	139 Call 0x1C17CF4
	140 Move W8, 1
	141 Move [X23+1927], W8
	142 Move X0, [X22]
	143 Move W8, [X0+224]
	144 Compare W8, 0
	145 JumpIfNotEqual {148}
	146 Call 0x1C17DFC
	147 Move X0, [X22]
	148 Move X8, [X0+184]
	149 Move X8, [X8]
	150 Compare X8, 0
	151 JumpIfEqual {214}
	152 Move X8, [X8+224]
	153 Compare X8, 0
	154 JumpIfEqual {214}
	155 Move X21, [X8+112]
	156 Compare X21, 0
	157 JumpIfEqual {164}
	158 Move X8, [X20]
	159 Move X0, X21
	160 Move X1, [X8+64]
	161 Call 0x1C17E00
	162 Compare X0, 0
	163 JumpIfEqual {216}
	164 Move W8, [X20+24]
	165 NotImplemented "Instruction CMP not yet implemented."
	166 Move [X20+40], X21
	167 Move W8, [X23+1927]
	168 Compare W8, 0
	169 JumpIfNotEqual {175}
	170 Move X0, 0x23A3000
	171 Move X0, [X0+1608]
	172 Call 0x1C17CF4
	173 Move W8, 1
	174 Move [X23+1927], W8
	175 Move X0, [X22]
	176 Move W8, [X0+224]
	177 Compare W8, 0
	178 JumpIfNotEqual {181}
	179 Call 0x1C17DFC
	180 Move X0, [X22]
	181 Move X8, [X0+184]
	182 Move X8, [X8]
	183 Compare X8, 0
	184 JumpIfEqual {214}
	185 Move X8, [X8+184]
	186 Compare X8, 0
	187 JumpIfEqual {214}
	188 Move X8, [X8+160]
	189 Compare X8, 0
	190 JumpIfEqual {214}
	191 Move X21, [X8+72]
	192 Compare X21, 0
	193 JumpIfEqual {200}
	194 Move X8, [X20]
	195 Move X0, X21
	196 Move X1, [X8+64]
	197 Call 0x1C17E00
	198 Compare X0, 0
	199 JumpIfEqual {216}
	200 Move W8, [X20+24]
	201 NotImplemented "Instruction CMP not yet implemented."
	202 Move [X20+48], X21
	203 Move X0, X19
	204 Move X1, X20
	205 Move X20, [X31+32]
	206 Move X19, [X31+40]
	207 Move X22, [X31+16]
	208 Move X21, [X31+24]
	209 Move X2, X31
	210 Move X30, [X31+48]
	211 Move X23, [X31+56]
	212 Call App.RegisterObserverForSelf, X0, X1
	213 Return 
	214 Call 0x1C17F20
	215 Call 0x1C17F28
	216 Call 0x1C17F44
	217 Move X1, X31
	218 Call 0x1C17DEC

Method: System.Void OnDestroy()

Disassembly:
	0x01D514CC MOV X1, X20
	0x01D514D0 MOV X3, X31
	0x01D514D4 MOV X21, X0
	0x01D514D8 LDR X2, [X8]
	0x01D514DC BL 0x2695708
	0x01D514E0 ADRP X8, 0x23A3000
	0x01D514E4 LDR X8, [X8 + 0xC70]
	0x01D514E8 MOV X0, X21
	0x01D514EC MOV W1, W31
	0x01D514F0 MOV X2, X31
	0x01D514F4 LDR X3, [X8]
	0x01D514F8 BL 0x21A2E44
	0x01D514FC STR X0, [X19 + 0x30]
	0x01D51500 STR X0, [X19 + 0x18]
	0x01D51504 MOVZ W0, 0x1
	0x01D51508 STR W0, [X19 + 0x10]
	0x01D5150C B 0x1D51918
	0x01D51510 MOVN W8, 0x0
	0x01D51514 STR W8, [X19 + 0x10]
	0x01D51518 CBZ X20, 0x1D51930
	0x01D5151C MOV X0, X20
	0x01D51520 BL 0x1D5074C
	0x01D51524 TBZ X0, 0x0, 0x1D515A4
	0x01D51528 ADRP X8, 0x23A2000
	0x01D5152C LDR X8, [X8 + 0x958]
	0x01D51530 LDR X0, [X8]
	0x01D51534 BL 0x1C16F10
	0x01D51538 ADRP X8, 0x23A3000
	0x01D5153C LDR X8, [X8 + 0xBD0]
	0x01D51540 MOV X1, X20
	0x01D51544 MOV X3, X31
	0x01D51548 MOV X19, X0
	0x01D5154C LDR X2, [X8]
	0x01D51550 BL 0x35BC6F0
	0x01D51554 MOV X0, X19
	0x01D51558 MOV W1, W31
	0x01D5155C MOV X2, X31
	0x01D51560 BL 0x35BBFC4
	0x01D51564 ADRP X8, 0x23A2000
	0x01D51568 LDR X8, [X8 + 0x648]
	0x01D5156C MOV X19, X0
	0x01D51570 LDR X8, [X8]
	0x01D51574 LDR W9, [X8 + 0xE0]
	0x01D51578 CBNZ W9, 0x1D51584
	0x01D5157C MOV X0, X8
	0x01D51580 BL 0x1C16DFC
	0x01D51584 MOV X0, X19
	0x01D51588 MOV W1, W31
	0x01D5158C MOV X2, X31
	0x01D51590 BL 0x1D35D6C
	0x01D51594 MOV X8, X0
	0x01D51598 MOV W0, W31
	0x01D5159C STR X8, [X20 + 0x20]
	0x01D515A0 B 0x1D51918
	0x01D515A4 MOV W0, W31
	0x01D515A8 B 0x1D51918
	0x01D515AC MOVN W8, 0x0
	0x01D515B0 STR W8, [X19 + 0x10]
	0x01D515B4 ADRP X24, 0x23A2000
	0x01D515B8 LDR X24, [X24 + 0xAB0]
	0x01D515BC MOVZ W1, 0x1
	0x01D515C0 LDR X0, [X24]
	0x01D515C4 BL 0x1C16D6C
	0x01D515C8 LDR X8, [X19 + 0x30]
	0x01D515CC CBZ X8, 0x1D51930
	0x01D515D0 ADRP X27, 0x23A3000
	0x01D515D4 LDP X23, X25, [X8 + 0x58]
	0x01D515D8 LDR X27, [X27 + 0xD00]
	0x01D515DC MOV X21, X0
	0x01D515E0 LDR X0, [X27]
	0x01D515E4 BL 0x1C16F10
	0x01D515E8 MOV X1, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2688000
	007 Move X22, 0x23A4000
	008 Move X20, 0x23A3000
	009 Move W8, [X21+1972]
	010 Move X22, [X22+3008]
	011 Move X20, [X20+1432]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {34}
	017 Move X0, 0x23A3000
	018 Move X0, [X0+1608]
	019 Call 0x1C17CF4
	020 Move X0, 0x23A3000
	021 Move X0, [X0+1432]
	022 Call 0x1C17CF4
	023 Move X0, 0x23A3000
	024 Move X0, [X0+3488]
	025 Call 0x1C17CF4
	026 Move X0, 0x23A4000
	027 Move X0, [X0+3016]
	028 Call 0x1C17CF4
	029 Move X0, 0x23A4000
	030 Move X0, [X0+3008]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X21+1972], W8
	034 Move X8, [X22]
	035 Move X0, [X20]
	036 Move X8, [X8+184]
	037 Move W9, [X0+224]
	038 Move X20, [X8]
	039 Compare W9, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Move X0, X20
	043 Move X1, X19
	044 Move X2, X31
	045 Call Object.op_Inequality, X0, X1
	046 Move TEMP, X0
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfNotEqual {56}
	050 Move X20, [X31+32]
	051 Move X19, [X31+40]
	052 Move X22, [X31+16]
	053 Move X21, [X31+24]
	054 Move X30, [X31+48]
	055 Return 
	056 Move X8, 0x23A3000
	057 Move X8, [X8+3488]
	058 Move X0, [X8]
	059 Call 0x1C17F10
	060 Move X8, 0x23A4000
	061 Move X8, [X8+3016]
	062 Move X1, X19
	063 Move X3, X31
	064 Move X20, X0
	065 Move X2, [X8]
	066 Call ObserverDelegate..ctor, X0, X1, X2
	067 Move X8, 0x23A3000
	068 Move X8, [X8+1608]
	069 Move X0, [X8]
	070 Move W8, [X0+224]
	071 Compare W8, 0
	072 JumpIfNotEqual {74}
	073 Call 0x1C17DFC
	074 Move X0, X20
	075 Move X1, X31
	076 Call App.DeregisterObserver, X0
	077 Move X0, [X19+32]
	078 Compare X0, 0
	079 JumpIfEqual {88}
	080 Move X20, [X31+32]
	081 Move X19, [X31+40]
	082 Move X22, [X31+16]
	083 Move X21, [X31+24]
	084 Move X1, X31
	085 Move X30, [X31+48]
	086 Call CommandHandle.Cancel, X0
	087 Return 
	088 Call 0x1C17F20

Method: System.Void HandlePlayerJoined(SpatialSys.ObservableState.StateChangedEventArgs args)

Disassembly:
	0x01D515EC MOV X22, X0
	0x01D515F0 BL 0x1D36B98
	0x01D515F4 STP X23, X25, [X22 + 0x18]
	0x01D515F8 CBZ X21, 0x1D51930
	0x01D515FC LDR X8, [X21]
	0x01D51600 MOV X0, X22
	0x01D51604 LDR X1, [X8 + 0x40]
	0x01D51608 BL 0x1C16E00
	0x01D5160C CBZ X0, 0x1D51934
	0x01D51610 LDR W8, [X21 + 0x18]
	0x01D51614 CBZ W8, 0x1D51940
	0x01D51618 STR X22, [X21 + 0x20]
	0x01D5161C ADRP X25, 0x23A2000
	0x01D51620 LDR X25, [X25 + 0x648]
	0x01D51624 LDR X0, [X25]
	0x01D51628 LDR W8, [X0 + 0xE0]
	0x01D5162C CBNZ W8, 0x1D51634
	0x01D51630 BL 0x1C16DFC
	0x01D51634 MOV X0, X21
	0x01D51638 MOV X1, X31
	0x01D5163C BL 0x1D351C4
	0x01D51640 CBZ X20, 0x1D51930
	0x01D51644 LDR X8, [X19 + 0x30]
	0x01D51648 CBZ X8, 0x1D51930
	0x01D5164C LDR X0, [X20 + 0x28]
	0x01D51650 CBZ X0, 0x1D51930
	0x01D51654 LDR X1, [X8 + 0x58]
	0x01D51658 ADRP X8, 0x23A3000
	0x01D5165C LDR X8, [X8 + 0xCB8]
	0x01D51660 LDR X2, [X8]
	0x01D51664 BL 0x2DBF440
	0x01D51668 LDR X8, [X19 + 0x28]
	0x01D5166C CBZ X8, 0x1D51930
	0x01D51670 LDR X9, [X19 + 0x30]
	0x01D51674 CBZ X9, 0x1D51930
	0x01D51678 LDR X0, [X8 + 0x10]
	0x01D5167C ADRP X8, 0x23A3000
	0x01D51680 LDR X1, [X9 + 0x58]
	0x01D51684 LDR X8, [X8 + 0xC78]
	0x01D51688 LDR X2, [X8]
	0x01D5168C BL 0x21C1C28
	0x01D51690 ADRP X26, 0x23A2000
	0x01D51694 LDR X26, [X26 + 0xEB8]
	0x01D51698 LDR X1, [X26]
	0x01D5169C BL 0x21D577C
	0x01D516A0 CBZ X0, 0x1D51930
	0x01D516A4 LDR X1, [X0 + 0x18]
	0x01D516A8 MOV X21, X0
	0x01D516AC CBZ X1, 0x1D51734
	0x01D516B0 ADRP X8, 0x23A3000
	0x01D516B4 LDR X8, [X8 + 0xC68]
	0x01D516B8 LDR X0, [X8]
	0x01D516BC BL 0x1C16D6C
	0x01D516C0 LDR X8, [X24]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2688000
	005 Move W8, [X20+1973]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {22}
	011 Move X0, 0x23A3000
	012 Move X0, [X0+1608]
	013 Call 0x1C17CF4
	014 Move X0, 0x23A3000
	015 Move X0, [X0+2392]
	016 Call 0x1C17CF4
	017 Move X0, 0x23A4000
	018 Move X0, [X0+3024]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+1973], W8
	022 Move X0, [X19+32]
	023 Compare X0, 0
	024 JumpIfEqual {64}
	025 Move X1, X31
	026 Call CommandHandle.get_hasFinalized, X0
	027 Move TEMP, X0
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfNotEqual {60}
	031 Move X8, 0x23A3000
	032 Move X8, [X8+2392]
	033 Move X0, [X8]
	034 Call 0x1C17F10
	035 Move X8, 0x23A4000
	036 Move X8, [X8+3024]
	037 Move X1, X19
	038 Move X3, X31
	039 Move X20, X0
	040 Move X2, [X8]
	041 Call CoroutineGenerator..ctor, X0, X1, X2
	042 Move X0, X20
	043 Move W1, W31
	044 Move X2, X31
	045 Call Commands.Coroutine, X0, X1
	046 Move X8, 0x23A3000
	047 Move X8, [X8+1608]
	048 Move X20, X0
	049 Move X8, [X8]
	050 Move W9, [X8+224]
	051 Compare W9, 0
	052 JumpIfNotEqual {55}
	053 Move X0, X8
	054 Call 0x1C17DFC
	055 Move X0, X20
	056 Move W1, W31
	057 Move X2, X31
	058 Call App.ScheduleCommand, X0, X1
	059 Move [X19+32], X0
	060 Move X20, [X31+16]
	061 Move X19, [X31+24]
	062 Move X30, [X31+32]
	063 Return 
	064 Call 0x1C17F20

Method: System.Collections.Generic.IEnumerator`1<SpatialSys.CommandLib.Command> FetchPlayerAvatarData()

Disassembly:
	0x01D516C4 MOV X23, X0
	0x01D516C8 MOVZ W1, 0x1
	0x01D516CC MOV X0, X8
	0x01D516D0 BL 0x1C16D6C
	0x01D516D4 LDR X8, [X27]
	0x01D516D8 MOV X20, X0
	0x01D516DC MOV X0, X8
	0x01D516E0 BL 0x1C16F10
	0x01D516E4 MOV X1, X31
	0x01D516E8 MOV X22, X0
	0x01D516EC BL 0x1D36B98
	0x01D516F0 STP X21, X23, [X22 + 0x18]
	0x01D516F4 CBZ X20, 0x1D51930
	0x01D516F8 LDR X8, [X20]
	0x01D516FC MOV X0, X22
	0x01D51700 LDR X1, [X8 + 0x40]
	0x01D51704 BL 0x1C16E00
	0x01D51708 CBZ X0, 0x1D51934
	0x01D5170C LDR W8, [X20 + 0x18]
	0x01D51710 CBZ W8, 0x1D51940
	0x01D51714 STR X22, [X20 + 0x20]
	0x01D51718 LDR X0, [X25]
	0x01D5171C LDR W8, [X0 + 0xE0]
	0x01D51720 CBNZ W8, 0x1D51728

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x2688000
	006 Move X21, 0x23A4000
	007 Move W8, [X20+1974]
	008 Move X21, [X21+3032]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x23A4000
	015 Move X0, [X0+3032]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1974], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move X1, X31
	022 Move X20, X0
	023 Call Object..ctor, X0
	024 Move [X20+16], W31
	025 Move [X20+32], X19
	026 Move X0, X20
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Return X0

Method: System.Boolean ShouldFetch()

Disassembly:
	0x01D5174C CBNZ W8, 0x1D51764
	0x01D51750 ADRP X0, 0x23A2000
	0x01D51754 LDR X0, [X0 + 0x648]
	0x01D51758 BL 0x1C16CF4
	0x01D5175C MOVZ W8, 0x1
	0x01D51760 STRB W8, [X20 + 0x787]
	0x01D51764 LDR X0, [X25]
	0x01D51768 LDR W8, [X0 + 0xE0]
	0x01D5176C CBNZ W8, 0x1D51778
	0x01D51770 BL 0x1C16DFC
	0x01D51774 LDR X0, [X25]
	0x01D51778 LDR X8, [X0 + 0xB8]
	0x01D5177C LDR X8, [X8]
	0x01D51780 CBZ X8, 0x1D51930
	0x01D51784 LDR X20, [X8 + 0xD0]
	0x01D51788 ADRP X8, 0x23A3000
	0x01D5178C LDR X21, [X19 + 0x28]
	0x01D51790 LDR X8, [X8 + 0xCB0]
	0x01D51794 LDR X0, [X8]
	0x01D51798 BL 0x1C16F10
	0x01D5179C ADRP X8, 0x23A3000
	0x01D517A0 LDR X8, [X8 + 0xCF0]
	0x01D517A4 MOV X1, X21
	0x01D517A8 MOV X3, X31
	0x01D517AC MOV X22, X0
	0x01D517B0 LDR X2, [X8]
	0x01D517B4 BL 0x2D29F50
	0x01D517B8 ADRP X8, 0x23A3000
	0x01D517BC LDR X8, [X8 + 0xC98]
	0x01D517C0 MOV X0, X20
	0x01D517C4 MOV X1, X22
	0x01D517C8 LDR X2, [X8]
	0x01D517CC BL 0x21D8848
	0x01D517D0 ADRP X23, 0x23A3000
	0x01D517D4 LDR X23, [X23 + 0xC18]
	0x01D517D8 MOV X20, X0
	0x01D517DC LDR X8, [X23]
	0x01D517E0 LDR W9, [X8 + 0xE0]
	0x01D517E4 CBNZ W9, 0x1D517F4
	0x01D517E8 MOV X0, X8
	0x01D517EC BL 0x1C16DFC
	0x01D517F0 LDR X8, [X23]
	0x01D517F4 LDR X9, [X8 + 0xB8]
	0x01D517F8 LDR X21, [X9 + 0x10]
	0x01D517FC CBNZ X21, 0x1D51854
	0x01D51800 LDR W9, [X8 + 0xE0]
	0x01D51804 CBNZ W9, 0x1D51814
	0x01D51808 MOV X0, X8
	0x01D5180C BL 0x1C16DFC
	0x01D51810 LDR X8, [X23]
	0x01D51814 ADRP X9, 0x23A3000
	0x01D51818 LDR X8, [X8 + 0xB8]
	0x01D5181C LDR X9, [X9 + 0xCA8]
	0x01D51820 LDR X22, [X8]
	0x01D51824 LDR X0, [X9]
	0x01D51828 BL 0x1C16F10
	0x01D5182C ADRP X8, 0x23A3000
	0x01D51830 LDR X8, [X8 + 0xCE0]
	0x01D51834 MOV X1, X22
	0x01D51838 MOV X3, X31
	0x01D5183C MOV X21, X0
	0x01D51840 LDR X2, [X8]
	0x01D51844 BL 0x2D2A1D0
	0x01D51848 LDR X8, [X23]
	0x01D5184C LDR X8, [X8 + 0xB8]
	0x01D51850 STR X21, [X8 + 0x10]
	0x01D51854 ADRP X8, 0x23A3000
	0x01D51858 LDR X8, [X8 + 0xC80]
	0x01D5185C MOV X0, X20
	0x01D51860 MOV X1, X21
	0x01D51864 LDR X2, [X8]
	0x01D51868 BL 0x21CAD04
	0x01D5186C LDR X1, [X26]
	0x01D51870 BL 0x21D577C
	0x01D51874 CBZ X0, 0x1D51930
	0x01D51878 LDR X8, [X0 + 0x18]
	0x01D5187C MOV X21, X0
	0x01D51880 CBZ X8, 0x1D518F8
	0x01D51884 LDR X0, [X24]
	0x01D51888 MOVZ W1, 0x1
	0x01D5188C BL 0x1C16D6C
	0x01D51890 ADRP X8, 0x23A3000
	0x01D51894 LDR X8, [X8 + 0xCC0]
	0x01D51898 MOV X20, X0
	0x01D5189C LDR X8, [X8]
	0x01D518A0 MOV X0, X8
	0x01D518A4 BL 0x1C16F10
	0x01D518A8 MOV X1, X31
	0x01D518AC MOV X22, X0
	0x01D518B0 BL 0x1D36B98
	0x01D518B4 STR X21, [X22 + 0x18]
	0x01D518B8 CBZ X20, 0x1D51930
	0x01D518BC LDR X8, [X20]
	0x01D518C0 MOV X0, X22
	0x01D518C4 LDR X1, [X8 + 0x40]
	0x01D518C8 BL 0x1C16E00
	0x01D518CC CBZ X0, 0x1D51934
	0x01D518D0 LDR W8, [X20 + 0x18]
	0x01D518D4 CBZ W8, 0x1D51940
	0x01D518D8 STR X22, [X20 + 0x20]
	0x01D518DC LDR X0, [X25]
	0x01D518E0 LDR W8, [X0 + 0xE0]
	0x01D518E4 CBNZ W8, 0x1D518EC
	0x01D518E8 BL 0x1C16DFC
	0x01D518EC MOV X0, X20
	0x01D518F0 MOV X1, X31
	0x01D518F4 BL 0x1D351C4
	0x01D518F8 FMOV S0, 10
	0x01D518FC MOV W0, W31
	0x01D51900 MOV X1, X31
	0x01D51904 BL 0x35BB1E4
	0x01D51908 MOVZ W8, 0x2
	0x01D5190C STR X0, [X19 + 0x18]
	0x01D51910 STR W8, [X19 + 0x10]
	0x01D51914 MOVZ W0, 0x1
	0x01D51918 LDP X20, X19, [X31 + 0x40]
	0x01D5191C LDP X22, X21, [X31 + 0x30]
	0x01D51920 LDP X24, X23, [X31 + 0x20]
	0x01D51924 LDP X26, X25, [X31 + 0x10]
	0x01D51928 LDP X30, X27, [X31], #0x50
	0x01D5192C RET
	0x01D51930 BL 0x1C16F20
	0x01D51934 BL 0x1C16F44
	0x01D51938 MOV X1, X31
	0x01D5193C BL 0x1C16DEC
	0x01D51940 BL 0x1C16F28
	0x01D51944 LDR X0, [X0 + 0x18]
	0x01D51948 RET
	0x01D5194C STP X30, X19, [X31 - 0x10]!
	0x01D51950 ADRP X0, 0x23A2000
	0x01D51954 LDR X0, [X0 + 0xB40]
	0x01D51958 BL 0x1C16D08
	0x01D5195C BL 0x1C16F10
	0x01D51960 MOV X1, X31
	0x01D51964 MOV X19, X0
	0x01D51968 BL 0x3380310
	0x01D5196C ADRP X0, 0x23A3000
	0x01D51970 LDR X0, [X0 + 0xD08]
	0x01D51974 BL 0x1C16D08
	0x01D51978 MOV X1, X0
	0x01D5197C MOV X0, X19
	0x01D51980 BL 0x1C16DEC
	0x01D51984 LDR X0, [X0 + 0x18]
	0x01D51988 RET
	0x01D5198C STR X30, [X31 - 0x20]!
	0x01D51990 STP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2688000
	007 Move X20, 0x23A3000
	008 Move W8, [X21+1975]
	009 Move X20, [X20+1608]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {44}
	015 Move X0, 0x23A3000
	016 Move X0, [X0+1608]
	017 Call 0x1C17CF4
	018 Move X0, 0x23A4000
	019 Move X0, [X0+3040]
	020 Call 0x1C17CF4
	021 Move X0, 0x23A4000
	022 Move X0, [X0+3048]
	023 Call 0x1C17CF4
	024 Move X0, 0x23A4000
	025 Move X0, [X0+3056]
	026 Call 0x1C17CF4
	027 Move X0, 0x23A4000
	028 Move X0, [X0+3064]
	029 Call 0x1C17CF4
	030 Move X0, 0x23A4000
	031 Move X0, [X0+3072]
	032 Call 0x1C17CF4
	033 Move X0, 0x23A4000
	034 Move X0, [X0+3080]
	035 Call 0x1C17CF4
	036 Move X0, 0x23A4000
	037 Move X0, [X0+3088]
	038 Call 0x1C17CF4
	039 Move X0, 0x23A4000
	040 Move X0, [X0+3096]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X21+1975], W8
	044 Move X0, [X20]
	045 Move W8, [X0+224]
	046 Compare W8, 0
	047 JumpIfNotEqual {49}
	048 Call 0x1C17DFC
	049 Move X22, 0x2688000
	050 Move W8, [X22+1927]
	051 Compare W8, 0
	052 JumpIfNotEqual {58}
	053 Move X0, 0x23A3000
	054 Move X0, [X0+1608]
	055 Call 0x1C17CF4
	056 Move W8, 1
	057 Move [X22+1927], W8
	058 Move X0, [X20]
	059 Move W8, [X0+224]
	060 Compare W8, 0
	061 JumpIfNotEqual {64}
	062 Call 0x1C17DFC
	063 Move X0, [X20]
	064 Move X8, [X0+184]
	065 Move X8, [X8]
	066 Compare X8, 0
	067 JumpIfEqual {170}
	068 Move X8, [X8+224]
	069 Compare X8, 0
	070 JumpIfEqual {170}
	071 Move W9, [X22+1927]
	072 Move X21, [X8+112]
	073 Compare W9, 0
	074 JumpIfNotEqual {80}
	075 Move X0, X20
	076 Call 0x1C17CF4
	077 Move X0, [X20]
	078 Move W8, 1
	079 Move [X22+1927], W8
	080 Move W8, [X0+224]
	081 Compare W8, 0
	082 JumpIfNotEqual {85}
	083 Call 0x1C17DFC
	084 Move X0, [X20]
	085 Move X8, [X0+184]
	086 Move X8, [X8]
	087 Compare X8, 0
	088 JumpIfEqual {170}
	089 Move X8, [X8+184]
	090 Compare X8, 0
	091 JumpIfEqual {170}
	092 Move X8, [X8+160]
	093 Compare X8, 0
	094 JumpIfEqual {170}
	095 Move X0, [X8+72]
	096 Compare X0, 0
	097 JumpIfEqual {170}
	098 Move X8, 0x23A4000
	099 Move X8, [X8+3080]
	100 Move X20, 0x23A4000
	101 Move X22, 0x23A4000
	102 Move X1, [X8]
	103 Move X20, [X20+3048]
	104 Move X22, [X22+3056]
	105 Call StateDictionary`2<Object, Object>.get_Keys, X0
	106 Move X2, [X20]
	107 Move X1, X0
	108 Move X0, X21
	109 Call 0x21BB09C, X0, X1
	110 Move X1, [X22]
	111 Call Enumerable.Distinct, X0
	112 Move X8, [X19+40]
	113 Compare X8, 0
	114 JumpIfEqual {170}
	115 Move W8, [X8+32]
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Move X20, [X31+32]
	118 Move X19, [X31+40]
	119 Move X22, [X31+16]
	120 Move X21, [X31+24]
	121 Move W0, 1
	122 Move X30, [X31+48]
	123 Return X0
	124 Move X22, 0x23A4000
	125 Move X22, [X22+3096]
	126 Move X19, X0
	127 Move X0, [X22]
	128 Move W8, [X0+224]
	129 Compare W8, 0
	130 JumpIfNotEqual {133}
	131 Call 0x1C17DFC
	132 Move X0, [X22]
	133 Move X8, [X0+184]
	134 Move X20, [X8+24]
	135 Compare X20, 0
	136 JumpIfNotEqual {158}
	137 Move W8, [X0+224]
	138 Compare W8, 0
	139 JumpIfNotEqual {142}
	140 Call 0x1C17DFC
	141 Move X0, [X22]
	142 Move X9, 0x23A4000
	143 Move X8, [X0+184]
	144 Move X9, [X9+3064]
	145 Move X21, [X8]
	146 Move X0, [X9]
	147 Call 0x1C17F10
	148 Move X8, 0x23A4000
	149 Move X8, [X8+3088]
	150 Move X1, X21
	151 Move X3, X31
	152 Move X20, X0
	153 Move X2, [X8]
	154 Call Func`2<Object, Boolean>..ctor, X0, X1, X2
	155 Move X8, [X22]
	156 Move X8, [X8+184]
	157 Move [X8+24], X20
	158 Move X8, 0x23A4000
	159 Move X8, [X8+3040]
	160 Move X0, X19
	161 Move X1, X20
	162 Move X20, [X31+32]
	163 Move X19, [X31+40]
	164 Move X2, [X8]
	165 Move X22, [X31+16]
	166 Move X21, [X31+24]
	167 Move X30, [X31+48]
	168 Call Enumerable.Any, X0, X1
	169 Return X0
	170 Call 0x1C17F20

Method: System.Void RefetchUserAvatar(System.String userID)

Disassembly:
	0x01D51994 MOV X19, X1
	0x01D51998 MOV X1, X31
	0x01D5199C MOV X20, X0
	0x01D519A0 BL 0x1D36B98
	0x01D519A4 STR X19, [X20 + 0x18]
	0x01D519A8 LDP X20, X19, [X31 + 0x10]
	0x01D519AC LDR X30, [X31], #0x20
	0x01D519B0 RET
	0x01D519B4 STP X29, X30, [X31 - 0x60]!
	0x01D519B8 STP X28, X27, [X31 + 0x10]
	0x01D519BC STP X26, X25, [X31 + 0x20]
	0x01D519C0 STP X24, X23, [X31 + 0x30]
	0x01D519C4 STP X22, X21, [X31 + 0x40]
	0x01D519C8 STP X20, X19, [X31 + 0x50]
	0x01D519CC ADRP X21, 0x2687000
	0x01D519D0 LDRB W8, [X21 + 0x7C1]
	0x01D519D4 MOV X20, X1
	0x01D519D8 MOV X19, X0
	0x01D519DC TBNZ X8, 0x0, 0x1D51A60
	0x01D519E0 ADRP X0, 0x23A3000
	0x01D519E4 LDR X0, [X0 + 0x9F0]
	0x01D519E8 BL 0x1C16CF4
	0x01D519EC ADRP X0, 0x23A2000
	0x01D519F0 LDR X0, [X0 + 0xF28]
	0x01D519F4 BL 0x1C16CF4
	0x01D519F8 ADRP X0, 0x23A3000
	0x01D519FC LDR X0, [X0 + 0x100]
	0x01D51A00 BL 0x1C16CF4
	0x01D51A04 ADRP X0, 0x23A2000
	0x01D51A08 LDR X0, [X0 + 0xE00]
	0x01D51A0C BL 0x1C16CF4
	0x01D51A10 ADRP X0, 0x23A3000
	0x01D51A14 LDR X0, [X0 + 0xD10]
	0x01D51A18 BL 0x1C16CF4
	0x01D51A1C ADRP X0, 0x23A3000
	0x01D51A20 LDR X0, [X0 + 0xD18]
	0x01D51A24 BL 0x1C16CF4
	0x01D51A28 ADRP X0, 0x23A2000
	0x01D51A2C LDR X0, [X0 + 0xE18]
	0x01D51A30 BL 0x1C16CF4
	0x01D51A34 ADRP X0, 0x23A3000
	0x01D51A38 LDR X0, [X0 + 0xD20]
	0x01D51A3C BL 0x1C16CF4
	0x01D51A40 ADRP X0, 0x23A2000
	0x01D51A44 LDR X0, [X0 + 0x920]
	0x01D51A48 BL 0x1C16CF4
	0x01D51A4C ADRP X0, 0x23A2000
	0x01D51A50 LDR X0, [X0 + 0x900]
	0x01D51A54 BL 0x1C16CF4
	0x01D51A58 MOVZ W8, 0x1
	0x01D51A5C STRB W8, [X21 + 0x7C1]
	0x01D51A60 LDR X19, [X19 + 0x18]
	0x01D51A64 CBZ X19, 0x1D5203C
	0x01D51A68 ADRP X10, 0x23A3000
	0x01D51A6C LDR X8, [X19]
	0x01D51A70 LDR X10, [X10 + 0x100]
	0x01D51A74 LDRH W9, [X8 + 0x12E]
	0x01D51A78 LDR X1, [X10]
	0x01D51A7C CBZ X9, 0x1D51AA0
	0x01D51A80 LDR X10, [X8 + 0xB0]
	0x01D51A84 ADD X10, X10, 0x8
	0x01D51A88 LDUR X11, [X10 - 0x8]
	0x01D51A8C CMP X11, X1
	0x01D51A90 B.EQ 0x1D51AB0
	0x01D51A94 SUBS X9, X9, 0x1
	0x01D51A98 ADD X10, X10, 0x10
	0x01D51A9C B.NE 0x1D51A88
	0x01D51AA0 MOV X0, X19
	0x01D51AA4 MOV W2, W31
	0x01D51AA8 BL 0x1C5C788
	0x01D51AAC B 0x1D51ABC
	0x01D51AB0 LDRSW X9, [X10]
	0x01D51AB4 ADD X8, X8, X9, 0x4, LSL
	0x01D51AB8 ADD X0, X8, 0x138
	0x01D51ABC LDP X8, X1, [X0]
	0x01D51AC0 MOV X0, X19
	0x01D51AC4 BLR X8
	0x01D51AC8 CBZ X0, 0x1D5203C
	0x01D51ACC ADRP X10, 0x23A3000
	0x01D51AD0 LDR X8, [X0]
	0x01D51AD4 LDR X10, [X10 + 0xD10]
	0x01D51AD8 MOV X19, X0
	0x01D51ADC LDRH W9, [X8 + 0x12E]
	0x01D51AE0 LDR X1, [X10]
	0x01D51AE4 CBZ X9, 0x1D51B08
	0x01D51AE8 LDR X10, [X8 + 0xB0]
	0x01D51AEC ADD X10, X10, 0x8
	0x01D51AF0 LDUR X11, [X10 - 0x8]
	0x01D51AF4 CMP X11, X1
	0x01D51AF8 B.EQ 0x1D51B18
	0x01D51AFC SUBS X9, X9, 0x1
	0x01D51B00 ADD X10, X10, 0x10
	0x01D51B04 B.NE 0x1D51AF0
	0x01D51B08 MOV X0, X19
	0x01D51B0C MOV W2, W31
	0x01D51B10 BL 0x1C5C788
	0x01D51B14 B 0x1D51B24
	0x01D51B18 LDRSW X9, [X10]
	0x01D51B1C ADD X8, X8, X9, 0x4, LSL
	0x01D51B20 ADD X0, X8, 0x138
	0x01D51B24 LDP X8, X1, [X0]
	0x01D51B28 MOV X0, X19
	0x01D51B2C BLR X8
	0x01D51B30 MOV X19, X0
	0x01D51B34 CBZ X0, 0x1D52040
	0x01D51B38 ADRP X25, 0x23A2000
	0x01D51B3C ADRP X27, 0x23A2000
	0x01D51B40 ADRP X28, 0x23A3000
	0x01D51B44 ADRP X29, 0x23A2000
	0x01D51B48 ADRP X24, 0x23A3000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x2688000
	007 Move X21, 0x23A4000
	008 Move X20, 0x23A3000
	009 Move W8, [X22+1976]
	010 Move X21, [X21+3008]
	011 Move X20, [X20+1432]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {37}
	017 Move X0, 0x23A3000
	018 Move X0, [X0+1608]
	019 Call 0x1C17CF4
	020 Move X0, 0x23A3000
	021 Move X0, [X0+2392]
	022 Call 0x1C17CF4
	023 Move X0, 0x23A4000
	024 Move X0, [X0+3104]
	025 Call 0x1C17CF4
	026 Move X0, 0x23A3000
	027 Move X0, [X0+1432]
	028 Call 0x1C17CF4
	029 Move X0, 0x23A4000
	030 Move X0, [X0+3024]
	031 Call 0x1C17CF4
	032 Move X0, 0x23A4000
	033 Move X0, [X0+3008]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X22+1976], W8
	037 Move X8, [X21]
	038 Move X0, [X20]
	039 Move X8, [X8+184]
	040 Move W9, [X0+224]
	041 Move X20, [X8]
	042 Compare W9, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Move X0, X20
	046 Move X1, X31
	047 Move X2, X31
	048 Call Object.op_Equality, X0, X1
	049 Move TEMP, X0
	050 And TEMP, TEMP, 1
	051 Compare TEMP, 1
	052 JumpIfEqual {131}
	053 Move X0, X19
	054 Move X1, X31
	055 Call String.IsNullOrEmpty, X0
	056 Move TEMP, X0
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfEqual {131}
	060 Move X8, [X21]
	061 Move X8, [X8+184]
	062 Move X8, [X8]
	063 Compare X8, 0
	064 JumpIfEqual {137}
	065 Move X0, [X8+40]
	066 Compare X0, 0
	067 JumpIfEqual {137}
	068 Move X8, 0x23A4000
	069 Move X8, [X8+3104]
	070 Move X1, X19
	071 Move X2, [X8]
	072 Call HashSet`1<Object>.Add, X0, X1
	073 Move X8, [X21]
	074 Move X8, [X8+184]
	075 Move X8, [X8]
	076 Compare X8, 0
	077 JumpIfEqual {137}
	078 Move X0, [X8+32]
	079 Compare X0, 0
	080 JumpIfEqual {137}
	081 Move X1, X31
	082 Call CommandHandle.get_hasFinalized, X0
	083 Move TEMP, X0
	084 And TEMP, TEMP, 1
	085 Compare TEMP, 1
	086 JumpIfNotEqual {131}
	087 Move X8, [X21]
	088 Move X8, [X8+184]
	089 Move X0, [X8]
	090 Compare X0, 0
	091 JumpIfEqual {137}
	092 Call UserAvatarsCacheManager.ShouldFetch, X0
	093 Move TEMP, X0
	094 And TEMP, TEMP, 1
	095 Compare TEMP, 1
	096 JumpIfNotEqual {131}
	097 Move X8, [X21]
	098 Move X9, 0x23A3000
	099 Move X8, [X8+184]
	100 Move X9, [X9+2392]
	101 Move X19, [X8]
	102 Move X0, [X9]
	103 Call 0x1C17F10
	104 Move X8, 0x23A4000
	105 Move X8, [X8+3024]
	106 Move X1, X19
	107 Move X3, X31
	108 Move X20, X0
	109 Move X2, [X8]
	110 Call CoroutineGenerator..ctor, X0, X1, X2
	111 Move X0, X20
	112 Move W1, W31
	113 Move X2, X31
	114 Call Commands.Coroutine, X0, X1
	115 Move X8, 0x23A3000
	116 Move X8, [X8+1608]
	117 Move X20, X0
	118 Move X8, [X8]
	119 Move W9, [X8+224]
	120 Compare W9, 0
	121 JumpIfNotEqual {124}
	122 Move X0, X8
	123 Call 0x1C17DFC
	124 Move X0, X20
	125 Move W1, W31
	126 Move X2, X31
	127 Call App.ExecuteCommand, X0, X1
	128 Compare X19, 0
	129 JumpIfEqual {137}
	130 Move [X19+32], X0
	131 Move X20, [X31+32]
	132 Move X19, [X31+40]
	133 Move X22, [X31+16]
	134 Move X21, [X31+24]
	135 Move X30, [X31+48]
	136 Return 
	137 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x01D51B4C ADRP X26, 0x23A2000
	0x01D51B50 LDR X25, [X25 + 0xE18]
	0x01D51B54 LDR X27, [X27 + 0xF28]
	0x01D51B58 LDR X28, [X28 + 0xD20]
	0x01D51B5C LDR X29, [X29 + 0x900]
	0x01D51B60 LDR X24, [X24 + 0x9F0]
	0x01D51B64 LDR X26, [X26 + 0x920]
	0x01D51B68 LDR X8, [X19]
	0x01D51B6C LDR X1, [X25]
	0x01D51B70 LDRH W9, [X8 + 0x12E]
	0x01D51B74 CBZ X9, 0x1D51B98
	0x01D51B78 LDR X10, [X8 + 0xB0]
	0x01D51B7C ADD X10, X10, 0x8
	0x01D51B80 LDUR X11, [X10 - 0x8]
	0x01D51B84 CMP X11, X1
	0x01D51B88 B.EQ 0x1D51BA8
	0x01D51B8C SUBS X9, X9, 0x1
	0x01D51B90 ADD X10, X10, 0x10
	0x01D51B94 B.NE 0x1D51B80
	0x01D51B98 MOV X0, X19
	0x01D51B9C MOV W2, W31
	0x01D51BA0 BL 0x1C5C788
	0x01D51BA4 B 0x1D51BB4
	0x01D51BA8 LDRSW X9, [X10]
	0x01D51BAC ADD X8, X8, X9, 0x4, LSL
	0x01D51BB0 ADD X0, X8, 0x138
	0x01D51BB4 LDP X8, X1, [X0]
	0x01D51BB8 MOV X0, X19
	0x01D51BBC BLR X8
	0x01D51BC0 TBZ X0, 0x0, 0x1D51F8C
	0x01D51BC4 LDR X8, [X19]
	0x01D51BC8 ADRP X10, 0x23A3000
	0x01D51BCC LDRH W9, [X8 + 0x12E]
	0x01D51BD0 LDR X10, [X10 + 0xD18]
	0x01D51BD4 LDR X1, [X10]
	0x01D51BD8 CBZ X9, 0x1D51BFC
	0x01D51BDC LDR X10, [X8 + 0xB0]
	0x01D51BE0 ADD X10, X10, 0x8
	0x01D51BE4 LDUR X11, [X10 - 0x8]
	0x01D51BE8 CMP X11, X1
	0x01D51BEC B.EQ 0x1D51C0C
	0x01D51BF0 SUBS X9, X9, 0x1
	0x01D51BF4 ADD X10, X10, 0x10
	0x01D51BF8 B.NE 0x1D51BE4
	0x01D51BFC MOV X0, X19
	0x01D51C00 MOV W2, W31
	0x01D51C04 BL 0x1C5C788
	0x01D51C08 B 0x1D51C18
	0x01D51C0C LDRSW X9, [X10]
	0x01D51C10 ADD X8, X8, X9, 0x4, LSL
	0x01D51C14 ADD X0, X8, 0x138
	0x01D51C18 LDP X8, X1, [X0]
	0x01D51C1C MOV X0, X19
	0x01D51C20 BLR X8
	0x01D51C24 CBZ X20, 0x1D52020
	0x01D51C28 MOV X21, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2688000
	007 Move X20, 0x23A3000
	008 Move W8, [X21+1977]
	009 Move X20, [X20+2200]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0x23A3000
	016 Move X0, [X0+2200]
	017 Call 0x1C17CF4
	018 Move X0, 0x23A4000
	019 Move X0, [X0+3112]
	020 Call 0x1C17CF4
	021 Move X0, 0x23A4000
	022 Move X0, [X0+3120]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+1977], W8
	026 Move X0, [X20]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X21, 0x2688000
	032 Move W8, [X21+1931]
	033 Compare W8, 0
	034 JumpIfNotEqual {40}
	035 Move X0, 0x23A3000
	036 Move X0, [X0+2200]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X21+1931], W8
	040 Move X0, [X20]
	041 Move X22, 0x23A4000
	042 Move X21, 0x23A4000
	043 Move W8, [X0+224]
	044 Move X22, [X22+3120]
	045 Move X21, [X21+3112]
	046 Compare W8, 0
	047 JumpIfNotEqual {50}
	048 Call 0x1C17DFC
	049 Move X0, [X20]
	050 Move X8, [X0+184]
	051 Move X8, [X8]
	052 Move [X19+32], X8
	053 Move X0, [X22]
	054 Call 0x1C17F10
	055 Move X1, [X21]
	056 Move X20, X0
	057 Call HashSet`1<Object>..ctor, X0
	058 Move [X19+40], X20
	059 Move X0, X19
	060 Move X20, [X31+32]
	061 Move X19, [X31+40]
	062 Move X22, [X31+16]
	063 Move X21, [X31+24]
	064 Move X1, X31
	065 Move X30, [X31+48]
	066 Call MonoBehaviour..ctor, X0
	067 Return 

