Type: AnimalCompany.NetworkManager/<StartGame>d__48

Method: System.Void MoveNext()

Disassembly:
	0x01CBFDA8 FCMP S8, 0x0
	0x01CBFDAC LDP S1, S2, [X8]
	0x01CBFDB0 FMOV S3, W31
	0x01CBFDB4 FCSEL S0, S0, S3, PL
	0x01CBFDB8 MOV X0, X19
	0x01CBFDBC FSUB S2, S2, S1
	0x01CBFDC0 FMUL S0, S0, S2
	0x01CBFDC4 FADD S0, S1, S0
	0x01CBFDC8 MOV X1, X31
	0x01CBFDCC BL 0x3A657B4
	0x01CBFDD0 MOV X0, X19
	0x01CBFDD4 LDP X20, X19, [X31 + 0x20]
	0x01CBFDD8 LDP X30, X21, [X31 + 0x10]
	0x01CBFDDC MOV X1, X31
	0x01CBFDE0 LDR V8, [X31], #0x30
	0x01CBFDE4 B 0x3A65954
	0x01CBFDE8 BL 0x1B6EA1C
	0x01CBFDEC BL 0x1B6EA24
	0x01CBFDF0 MOV X1, X31
	0x01CBFDF4 B 0x3A9EEE4
	0x01CBFDF8 STR X30, [X31 - 0x20]!
	0x01CBFDFC STP X20, X19, [X31 + 0x10]
	0x01CBFE00 ADRP X19, 0x2564000
	0x01CBFE04 ADRP X20, 0x2290000
	0x01CBFE08 LDRB W8, [X19 + 0x53C]
	0x01CBFE0C LDR X20, [X20 + 0x2D8]
	0x01CBFE10 TBNZ X8, 0x0, 0x1CBFE28
	0x01CBFE14 ADRP X0, 0x2290000
	0x01CBFE18 LDR X0, [X0 + 0x2D8]
	0x01CBFE1C BL 0x1B6E7F0
	0x01CBFE20 MOVZ W8, 0x1
	0x01CBFE24 STRB W8, [X19 + 0x53C]
	0x01CBFE28 LDR X8, [X20]
	0x01CBFE2C ADRP X9, 0xFFFFFFFFFEDEE000
	0x01CBFE30 LDR V0, [X9 + 0x9C0]
	0x01CBFE34 LDP X20, X19, [X31 + 0x10]
	0x01CBFE38 LDR X8, [X8 + 0xB8]
	0x01CBFE3C STR D0, [X8]
	0x01CBFE40 LDR X30, [X31], #0x20
	0x01CBFE44 RET
	0x01CBFE48 STR X30, [X31 - 0x10]!
	0x01CBFE4C CBZ X1, 0x1CBFE98
	0x01CBFE50 LDR W8, [X0 + 0x18]
	0x01CBFE54 STR W8, [X1 + 0x98]
	0x01CBFE58 LDUR V0, [X0 + 0x1C]
	0x01CBFE5C STUR V0, [X1 + 0x9C]
	0x01CBFE60 LDUR V0, [X0 + 0x2C]
	0x01CBFE64 STUR V0, [X1 + 0xAC]
	0x01CBFE68 LDR W8, [X0 + 0x44]
	0x01CBFE6C LDUR X9, [X0 + 0x3C]
	0x01CBFE70 STR W8, [X1 + 0x108]
	0x01CBFE74 STR X9, [X1 + 0x100]
	0x01CBFE78 LDR W8, [X0 + 0x50]
	0x01CBFE7C LDR X9, [X0 + 0x48]
	0x01CBFE80 STR W8, [X1 + 0xFC]
	0x01CBFE84 STUR X9, [X1 + 0xF4]
	0x01CBFE88 LDR W8, [X0 + 0x54]
	0x01CBFE8C STR W8, [X1 + 0x10C]
	0x01CBFE90 LDR X30, [X31], #0x10
	0x01CBFE94 RET
	0x01CBFE98 BL 0x1B6EA1C
	0x01CBFE9C STR X30, [X31 - 0x20]!
	0x01CBFEA0 STP X20, X19, [X31 + 0x10]
	0x01CBFEA4 ADRP X8, 0xFFFFFFFFFEDEA000
	0x01CBFEA8 ADRP X9, 0xFFFFFFFFFEDEB000
	0x01CBFEAC LDR V0, [X8 + 0xE3]
	0x01CBFEB0 LDR V1, [X9 + 0x42]
	0x01CBFEB4 MOVZ W8, 0x8
	0x01CBFEB8 STR W8, [X0 + 0x18]
	0x01CBFEBC STUR V0, [X0 + 0x1C]
	0x01CBFEC0 STUR V1, [X0 + 0x2C]
	0x01CBFEC4 ADRP X20, 0x2564000
	0x01CBFEC8 LDRB W8, [X20 + 0x43F]
	0x01CBFECC MOV X19, X0
	0x01CBFED0 CBNZ W8, 0x1CBFEE8
	0x01CBFED4 ADRP X0, 0x228E000
	0x01CBFED8 LDR X0, [X0 + 0x480]
	0x01CBFEDC BL 0x1B6E7F0
	0x01CBFEE0 MOVZ W8, 0x1
	0x01CBFEE4 STRB W8, [X20 + 0x43F]
	0x01CBFEE8 ADRP X8, 0x228E000
	0x01CBFEEC LDR X8, [X8 + 0x480]
	0x01CBFEF0 MOV X0, X19
	0x01CBFEF4 MOV X1, X31
	0x01CBFEF8 LDR X8, [X8]
	0x01CBFEFC LDR X9, [X8 + 0xB8]
	0x01CBFF00 LDR V0, [X9]
	0x01CBFF04 LDR V1, [X9 + 0x8]
	0x01CBFF08 STUR D0, [X19 + 0x3C]
	0x01CBFF0C STR S1, [X19 + 0x44]
	0x01CBFF10 LDR X8, [X8 + 0xB8]
	0x01CBFF14 LDR V0, [X8]
	0x01CBFF18 LDR V1, [X8 + 0x8]
	0x01CBFF1C STR D0, [X19 + 0x48]
	0x01CBFF20 STR S1, [X19 + 0x50]
	0x01CBFF24 LDP X20, X19, [X31 + 0x10]
	0x01CBFF28 LDR X30, [X31], #0x20
	0x01CBFF2C B 0x3A9EFE0
	0x01CBFF30 STR X30, [X31 - 0x20]!
	0x01CBFF34 STP X20, X19, [X31 + 0x10]
	0x01CBFF38 ADRP X20, 0x2564000
	0x01CBFF3C ADRP X19, 0x228F000
	0x01CBFF40 LDRB W8, [X20 + 0x53D]
	0x01CBFF44 LDR X19, [X19 + 0x198]
	0x01CBFF48 TBNZ X8, 0x0, 0x1CBFF60
	0x01CBFF4C ADRP X0, 0x228F000
	0x01CBFF50 LDR X0, [X0 + 0x198]
	0x01CBFF54 BL 0x1B6E7F0
	0x01CBFF58 MOVZ W8, 0x1
	0x01CBFF5C STRB W8, [X20 + 0x53D]
	0x01CBFF60 LDR X0, [X19]
	0x01CBFF64 LDR W8, [X0 + 0xE0]
	0x01CBFF68 CBNZ W8, 0x1CBFF74
	0x01CBFF6C BL 0x1B6E8F8
	0x01CBFF70 LDR X0, [X19]
	0x01CBFF74 LDR X8, [X0 + 0xB8]
	0x01CBFF78 LDP X20, X19, [X31 + 0x10]
	0x01CBFF7C LDR X0, [X8]
	0x01CBFF80 LDR X30, [X31], #0x20
	0x01CBFF84 RET
	0x01CBFF88 STR X30, [X31 - 0x20]!
	0x01CBFF8C STP X20, X19, [X31 + 0x10]
	0x01CBFF90 ADRP X20, 0x2564000
	0x01CBFF94 ADRP X19, 0x228F000
	0x01CBFF98 LDRB W8, [X20 + 0x53E]
	0x01CBFF9C LDR X19, [X19 + 0x198]
	0x01CBFFA0 TBNZ X8, 0x0, 0x1CBFFB8
	0x01CBFFA4 ADRP X0, 0x228F000
	0x01CBFFA8 LDR X0, [X0 + 0x198]
	0x01CBFFAC BL 0x1B6E7F0
	0x01CBFFB0 MOVZ W8, 0x1
	0x01CBFFB4 STRB W8, [X20 + 0x53E]
	0x01CBFFB8 LDR X0, [X19]
	0x01CBFFBC LDR W8, [X0 + 0xE0]
	0x01CBFFC0 CBNZ W8, 0x1CBFFCC
	0x01CBFFC4 BL 0x1B6E8F8
	0x01CBFFC8 LDR X0, [X19]
	0x01CBFFCC LDR X8, [X0 + 0xB8]
	0x01CBFFD0 LDP X20, X19, [X31 + 0x10]
	0x01CBFFD4 LDP S0, S1, [X8 + 0x8]
	0x01CBFFD8 LDP S2, S3, [X8 + 0x10]
	0x01CBFFDC LDR X30, [X31], #0x20
	0x01CBFFE0 RET
	0x01CBFFE4 STP D11, D10, [X31 - 0x40]!
	0x01CBFFE8 STP D9, D8, [X31 + 0x10]
	0x01CBFFEC STR X30, [X31 + 0x20]
	0x01CBFFF0 STP X20, X19, [X31 + 0x30]
	0x01CBFFF4 ADRP X20, 0x2564000
	0x01CBFFF8 ADRP X19, 0x228F000
	0x01CBFFFC LDRB W8, [X20 + 0x53F]
	0x01CC0000 B 0x3D194D0
	0x01CC0004 MOV V8.16B, V3.16B
	0x01CC0008 MOV V9.16B, V2.16B
	0x01CC000C MOV V10.16B, V1.16B
	0x01CC0010 MOV V11.16B, V0.16B
	0x01CC0014 TBNZ X8, 0x0, 0x1CC002C
	0x01CC0018 ADRP X0, 0x228E000
	0x01CC001C LDR X0, [X0 + 0x198]
	0x01CC0020 BL 0x1B6E7F0
	0x01CC0024 MOVZ W8, 0x1
	0x01CC0028 STRB W8, [X20 + 0x53F]
	0x01CC002C LDR X0, [X19]
	0x01CC0030 LDR W8, [X0 + 0xE0]
	0x01CC0034 CBNZ W8, 0x1CC0040
	0x01CC0038 BL 0x1B6E8F8
	0x01CC003C LDR X0, [X19]
	0x01CC0040 LDR X8, [X0 + 0xB8]
	0x01CC0044 LDP X20, X19, [X31 + 0x30]
	0x01CC0048 LDR X30, [X31 + 0x20]
	0x01CC004C STP S9, S8, [X8 + 0x10]
	0x01CC0050 LDP D9, D8, [X31 + 0x10]
	0x01CC0054 STP S11, S10, [X8 + 0x8]
	0x01CC0058 LDP D11, D10, [X31], #0x40
	0x01CC005C RET
	0x01CC0060 LDR X0, [X0 + 0x20]
	0x01CC0064 RET
	0x01CC0068 LDR X0, [X0 + 0x50]
	0x01CC006C RET
	0x01CC0070 LDR X0, [X0 + 0x58]
	0x01CC0074 RET
	0x01CC0078 LDR X0, [X0 + 0x60]
	0x01CC007C RET
	0x01CC0080 LDR X0, [X0 + 0x68]
	0x01CC0084 RET
	0x01CC0088 LDR X0, [X0 + 0x70]
	0x01CC008C RET
	0x01CC0090 LDR X0, [X0 + 0x78]
	0x01CC0094 RET
	0x01CC0098 STR X30, [X31 - 0x10]!
	0x01CC009C LDR X8, [X0 + 0x38]
	0x01CC00A0 CBZ X8, 0x1CC00B0
	0x01CC00A4 LDR X0, [X8 + 0x48]
	0x01CC00A8 LDR X30, [X31], #0x10
	0x01CC00AC RET
	0x01CC00B0 BL 0x1B6EA1C
	0x01CC00B4 LDR W0, [X0 + 0x110]
	0x01CC00B8 RET
	0x01CC00BC STR W1, [X0 + 0x110]
	0x01CC00C0 RET
	0x01CC00C4 LDRB W0, [X0 + 0x114]
	0x01CC00C8 RET
	0x01CC00CC AND W8, W1, 0x1
	0x01CC00D0 STRB W8, [X0 + 0x114]
	0x01CC00D4 RET
	0x01CC00D8 SUB X31, X31, 0x50
	0x01CC00DC STP D9, D8, [X31 + 0x10]
	0x01CC00E0 STP X30, X23, [X31 + 0x20]
	0x01CC00E4 STP X22, X21, [X31 + 0x30]
	0x01CC00E8 STP X20, X19, [X31 + 0x40]
	0x01CC00EC ADRP X21, 0x2563000
	0x01CC00F0 ADRP X20, 0x228E000
	0x01CC00F4 LDRB W8, [X21 + 0x540]
	0x01CC00F8 LDR X20, [X20 + 0x198]
	0x01CC00FC MOV X19, X0
	0x01CC0100 TBNZ X8, 0x0, 0x1CC019C
	0x01CC0104 ADRP X0, 0x228F000
	0x01CC0108 LDR X0, [X0 + 0x2E0]
	0x01CC010C BL 0x1B6E7F0
	0x01CC0110 ADRP X0, 0x228F000
	0x01CC0114 LDR X0, [X0 + 0x2E8]
	0x01CC0118 BL 0x1B6E7F0
	0x01CC011C ADRP X0, 0x228E000
	0x01CC0120 LDR X0, [X0 + 0x170]
	0x01CC0124 BL 0x1B6E7F0
	0x01CC0128 ADRP X0, 0x228F000
	0x01CC012C LDR X0, [X0 + 0x2F0]
	0x01CC0130 BL 0x1B6E7F0
	0x01CC0134 ADRP X0, 0x228D000
	0x01CC0138 LDR X0, [X0 + 0xF78]
	0x01CC013C BL 0x1B6E7F0
	0x01CC0140 ADRP X0, 0x228F000
	0x01CC0144 LDR X0, [X0 + 0x2F8]
	0x01CC0148 BL 0x1B6E7F0
	0x01CC014C ADRP X0, 0x228F000
	0x01CC0150 LDR X0, [X0 + 0x300]
	0x01CC0154 BL 0x1B6E7F0
	0x01CC0158 ADRP X0, 0x228F000
	0x01CC015C LDR X0, [X0 + 0x308]
	0x01CC0160 BL 0x1B6E7F0
	0x01CC0164 ADRP X0, 0x228F000
	0x01CC0168 LDR X0, [X0 + 0x310]
	0x01CC016C BL 0x1B6E7F0
	0x01CC0170 ADRP X0, 0x228E000
	0x01CC0174 LDR X0, [X0 + 0x198]
	0x01CC0178 BL 0x1B6E7F0
	0x01CC017C ADRP X0, 0x228E000
	0x01CC0180 LDR X0, [X0 + 0xA38]
	0x01CC0184 BL 0x1B6E7F0
	0x01CC0188 ADRP X0, 0x228E000
	0x01CC018C LDR X0, [X0 + 0x450]
	0x01CC0190 BL 0x1B6E7F0
	0x01CC0194 MOVZ W8, 0x1
	0x01CC0198 STRB W8, [X21 + 0x540]
	0x01CC019C LDR X0, [X20]
	0x01CC01A0 STR X31, [X31 + 0x8]
	0x01CC01A4 LDR W8, [X0 + 0xE0]
	0x01CC01A8 CBNZ W8, 0x1CC01B4
	0x01CC01AC BL 0x1B6E8F8
	0x01CC01B0 LDR X0, [X20]
	0x01CC01B4 LDR X8, [X0 + 0xB8]
	0x01CC01B8 MOVZ W1, 0x64
	0x01CC01BC MOV X0, X19
	0x01CC01C0 STR X19, [X8]
	0x01CC01C4 BL 0x1CC05A4
	0x01CC01C8 LDR X0, [X19 + 0x28]
	0x01CC01CC STRB W31, [X19 + 0x84]
	0x01CC01D0 CBZ X0, 0x1CC05A0
	0x01CC01D4 LDR X1, [X19 + 0x20]
	0x01CC01D8 BL 0x1CBFE48
	0x01CC01DC LDR X0, [X19 + 0x38]
	0x01CC01E0 CBZ X0, 0x1CC05A0
	0x01CC01E4 LDP X4, X5, [X19 + 0x70]
	0x01CC01E8 LDP X2, X3, [X19 + 0x60]
	0x01CC01EC LDR X1, [X19 + 0x58]
	0x01CC01F0 MOV W6, W31
	0x01CC01F4 BL 0x1CC0634
	0x01CC01F8 LDR X23, [X19 + 0x20]
	0x01CC01FC CBZ X23, 0x1CC05A0
	0x01CC0200 ADRP X22, 0x228F000
	0x01CC0204 LDR X22, [X22 + 0x2E8]
	0x01CC0208 ADRP X21, 0x228F000
	0x01CC020C LDR X20, [X23 + 0x1B0]
	0x01CC0210 LDR X0, [X22]
	0x01CC0214 LDR X21, [X21 + 0x300]
	0x01CC0218 BL 0x1B6EA0C
	0x01CC021C LDR X2, [X21]
	0x01CC0220 MOV X1, X19
	0x01CC0224 MOV X3, X31
	0x01CC0228 MOV X21, X0
	0x01CC022C BL 0x28D6FDC
	0x01CC0230 MOV X0, X20
	0x01CC0234 MOV X1, X21
	0x01CC0238 MOV X2, X31
	0x01CC023C BL 0x322A750
	0x01CC0240 CBZ X0, 0x1CC0274
	0x01CC0244 LDR X21, [X22]
	0x01CC0248 MOV X20, X0
	0x01CC024C MOV X1, X21
	0x01CC0250 BL 0x1B6E8FC
	0x01CC0254 CBZ X0, 0x1CC0378
	0x01CC0258 STR X0, [X23 + 0x1B0]
	0x01CC025C LDR X21, [X22]
	0x01CC0260 MOV X0, X20
	0x01CC0264 MOV X1, X21
	0x01CC0268 BL 0x1B6E8FC
	0x01CC026C CBNZ X0, 0x1CC0278
	0x01CC0270 B 0x1CC0378
	0x01CC0274 STR X31, [X23 + 0x1B0]
	0x01CC0278 LDR X23, [X19 + 0x20]
	0x01CC027C CBZ X23, 0x1CC05A0
	0x01CC0280 LDR X0, [X22]
	0x01CC0284 ADRP X21, 0x228F000
	0x01CC0288 LDR X20, [X23 + 0x1B8]
	0x01CC028C LDR X21, [X21 + 0x308]
	0x01CC0290 BL 0x1B6EA0C
	0x01CC0294 LDR X2, [X21]
	0x01CC0298 MOV X1, X19
	0x01CC029C MOV X3, X31
	0x01CC02A0 MOV X21, X0
	0x01CC02A4 BL 0x28D6FDC
	0x01CC02A8 MOV X0, X20
	0x01CC02AC MOV X1, X21
	0x01CC02B0 MOV X2, X31
	0x01CC02B4 BL 0x322A750
	0x01CC02B8 CBZ X0, 0x1CC02EC
	0x01CC02BC LDR X21, [X22]
	0x01CC02C0 MOV X20, X0
	0x01CC02C4 MOV X1, X21
	0x01CC02C8 BL 0x1B6E8FC
	0x01CC02CC CBZ X0, 0x1CC0378
	0x01CC02D0 STR X0, [X23 + 0x1B8]
	0x01CC02D4 LDR X21, [X22]
	0x01CC02D8 MOV X0, X20
	0x01CC02DC MOV X1, X21
	0x01CC02E0 BL 0x1B6E8FC
	0x01CC02E4 CBNZ X0, 0x1CC02F0
	0x01CC02E8 B 0x1CC0378
	0x01CC02EC STR X31, [X23 + 0x1B8]
	0x01CC02F0 ADRP X22, 0x228D000
	0x01CC02F4 LDR X22, [X22 + 0xF78]
	0x01CC02F8 ADRP X23, 0x228F000
	0x01CC02FC ADRP X21, 0x228F000
	0x01CC0300 LDR X8, [X22]
	0x01CC0304 LDR X8, [X8 + 0xB8]
	0x01CC0308 LDR X23, [X23 + 0x2E0]
	0x01CC030C LDR X20, [X8 + 0x20]
	0x01CC0310 LDR X0, [X23]
	0x01CC0314 LDR X21, [X21 + 0x310]
	0x01CC0318 BL 0x1B6EA0C
	0x01CC031C LDR X2, [X21]
	0x01CC0320 MOV X1, X19
	0x01CC0324 MOV X3, X31
	0x01CC0328 MOV X21, X0
	0x01CC032C BL 0x27EC108
	0x01CC0330 MOV X0, X20
	0x01CC0334 MOV X1, X21
	0x01CC0338 MOV X2, X31
	0x01CC033C BL 0x322A750
	0x01CC0340 CBZ X0, 0x1CC0384
	0x01CC0344 LDR X21, [X23]
	0x01CC0348 MOV X20, X0
	0x01CC034C MOV X1, X21
	0x01CC0350 BL 0x1B6E8FC
	0x01CC0354 CBZ X0, 0x1CC0378
	0x01CC0358 LDR X8, [X22]
	0x01CC035C LDR X8, [X8 + 0xB8]
	0x01CC0360 STR X0, [X8 + 0x20]
	0x01CC0364 LDR X21, [X23]
	0x01CC0368 MOV X0, X20
	0x01CC036C MOV X1, X21
	0x01CC0370 BL 0x1B6E8FC
	0x01CC0374 CBNZ X0, 0x1CC0390
	0x01CC0378 MOV X0, X20
	0x01CC037C MOV X1, X21
	0x01CC0380 BL 0x1B6ECDC
	0x01CC0384 LDR X8, [X22]
	0x01CC0388 LDR X8, [X8 + 0xB8]
	0x01CC038C STR X31, [X8 + 0x20]
	0x01CC0390 ADRP X20, 0x228E000
	0x01CC0394 LDR X20, [X20 + 0xA38]
	0x01CC0398 MOV X0, X19
	0x01CC039C BL 0x1CC0718
	0x01CC03A0 LDR X0, [X20]
	0x01CC03A4 LDR W8, [X0 + 0xE0]
	0x01CC03A8 CBNZ W8, 0x1CC03B0
	0x01CC03AC BL 0x1B6E8F8
	0x01CC03B0 ADD X1, X31, 0x8
	0x01CC03B4 MOV W0, W31
	0x01CC03B8 MOV X2, X31
	0x01CC03BC BL 0x1CAFFBC
	0x01CC03C0 TBZ X0, 0x0, 0x1CC03E8
	0x01CC03C4 LDR X0, [X31 + 0x8]
	0x01CC03C8 CBZ X0, 0x1CC05A0
	0x01CC03CC MOV X1, X31
	0x01CC03D0 BL 0x3AA7658
	0x01CC03D4 STP S0, S1, [X19 + 0xEC]
	0x01CC03D8 STR S2, [X19 + 0xF4]
	0x01CC03DC LDR X0, [X31 + 0x8]
	0x01CC03E0 CBNZ X0, 0x1CC0408
	0x01CC03E4 B 0x1CC05A0
	0x01CC03E8 LDR X0, [X19 + 0x58]
	0x01CC03EC CBZ X0, 0x1CC05A0
	0x01CC03F0 MOV X1, X31
	0x01CC03F4 BL 0x3AA7658
	0x01CC03F8 LDR X0, [X19 + 0x58]
	0x01CC03FC STP S0, S1, [X19 + 0xEC]
	0x01CC0400 STR S2, [X19 + 0xF4]
	0x01CC0404 CBZ X0, 0x1CC05A0
	0x01CC0408 MOV X1, X31
	0x01CC040C BL 0x3AA7AD0
	0x01CC0410 ADRP X20, 0x2563000
	0x01CC0414 LDRB W8, [X20 + 0x441]
	0x01CC0418 MOV V8.16B, V0.16B
	0x01CC041C MOV V9.16B, V2.16B
	0x01CC0420 CBNZ W8, 0x1CC0438
	0x01CC0424 ADRP X0, 0x228D000
	0x01CC0428 LDR X0, [X0 + 0x488]
	0x01CC042C BL 0x1B6E7F0
	0x01CC0430 MOVZ W8, 0x1
	0x01CC0434 STRB W8, [X20 + 0x441]
	0x01CC0438 ADRP X8, 0x228D000
	0x01CC043C LDR X8, [X8 + 0x488]
	0x01CC0440 LDR X0, [X8]
	0x01CC0444 LDR W8, [X0 + 0xE0]
	0x01CC0448 CBNZ W8, 0x1CC0450
	0x01CC044C BL 0x1B6E8F8
	0x01CC0450 ADRP X8, 0xFFFFFFFFFEDE9000
	0x01CC0454 FMUL S0, S8, S8
	0x01CC0458 FMOV S1, W31
	0x01CC045C LDR V3, [X8 + 0xB64]
	0x01CC0460 FADD S0, S0, S1
	0x01CC0464 FMUL S2, S9, S9
	0x01CC0468 FADD S0, S2, S0
	0x01CC046C FSQRT S2, S0
	0x01CC0470 FCMP S2, S3
	0x01CC0474 B.LE 0x1CC0488
	0x01CC0478 FDIV S0, S8, S2
	0x01CC047C FDIV S1, S1, S2
	0x01CC0480 FDIV S2, S9, S2
	0x01CC0484 B 0x1CC04C0
	0x01CC0488 ADRP X20, 0x2563000
	0x01CC048C LDRB W8, [X20 + 0x43F]
	0x01CC0490 CBNZ W8, 0x1CC04A8
	0x01CC0494 ADRP X0, 0x228D000
	0x01CC0498 LDR X0, [X0 + 0x480]
	0x01CC049C BL 0x1B6E7F0
	0x01CC04A0 MOVZ W8, 0x1
	0x01CC04A4 STRB W8, [X20 + 0x43F]
	0x01CC04A8 ADRP X8, 0x228D000
	0x01CC04AC LDR X8, [X8 + 0x480]
	0x01CC04B0 LDR X8, [X8]
	0x01CC04B4 LDR X8, [X8 + 0xB8]
	0x01CC04B8 LDP S0, S1, [X8]
	0x01CC04BC LDR V2, [X8 + 0x8]
	0x01CC04C0 LDR X0, [X19 + 0x70]
	0x01CC04C4 STP S0, S1, [X19 + 0xF8]
	0x01CC04C8 STR S2, [X19 + 0x100]
	0x01CC04CC CBZ X0, 0x1CC05A0
	0x01CC04D0 ADRP X20, 0x228F000
	0x01CC04D4 LDR X20, [X20 + 0x2F0]
	0x01CC04D8 LDR X1, [X20]
	0x01CC04DC BL 0x208FDE8
	0x01CC04E0 LDR X8, [X19 + 0x78]
	0x01CC04E4 STR X0, [X19 + 0x128]
	0x01CC04E8 CBZ X8, 0x1CC05A0
	0x01CC04EC LDR X1, [X20]
	0x01CC04F0 ADRP X22, 0x228E000
	0x01CC04F4 ADRP X23, 0x228E000
	0x01CC04F8 ADRP X21, 0x228F000
	0x01CC04FC LDR X22, [X22 + 0x450]
	0x01CC0500 LDR X23, [X23 + 0x170]
	0x01CC0504 LDR X21, [X21 + 0x2F8]
	0x01CC0508 MOV X0, X8
	0x01CC050C BL 0x208FDE8
	0x01CC0510 STR X0, [X19 + 0x130]
	0x01CC0514 LDR X8, [X22]
	0x01CC0518 LDR X0, [X23]
	0x01CC051C LDR X8, [X8 + 0xB8]
	0x01CC0520 LDR X20, [X8 + 0xA8]
	0x01CC0524 BL 0x1B6EA0C
	0x01CC0528 LDR X2, [X21]
	0x01CC052C MOV X1, X19
	0x01CC0530 MOV X3, X31
	0x01CC0534 MOV X21, X0
	0x01CC0538 BL 0x317DB24
	0x01CC053C MOV X0, X20
	0x01CC0540 MOV X1, X21
	0x01CC0544 MOV X2, X31
	0x01CC0548 BL 0x322A750
	0x01CC054C CBZ X0, 0x1CC057C
	0x01CC0550 LDR X1, [X23]
	0x01CC0554 LDR X8, [X0]
	0x01CC0558 CMP X8, X1
	0x01CC055C B.NE 0x1CC0380
	0x01CC0560 LDR X8, [X22]
	0x01CC0564 LDR X8, [X8 + 0xB8]
	0x01CC0568 STR X0, [X8 + 0xA8]
	0x01CC056C LDR X8, [X0]
	0x01CC0570 CMP X8, X1
	0x01CC0574 B.EQ 0x1CC0588
	0x01CC0578 B 0x1CC0380
	0x01CC057C LDR X8, [X22]
	0x01CC0580 LDR X8, [X8 + 0xB8]
	0x01CC0584 STR X0, [X8 + 0xA8]
	0x01CC0588 LDP X20, X19, [X31 + 0x40]
	0x01CC058C LDP X22, X21, [X31 + 0x30]
	0x01CC0590 LDP X30, X23, [X31 + 0x20]
	0x01CC0594 LDP D9, D8, [X31 + 0x10]
	0x01CC0598 ADD X31, X31, 0x50
	0x01CC059C RET
	0x01CC05A0 BL 0x1B6EA1C
	0x01CC05A4 STR X30, [X31 - 0x30]!
	0x01CC05A8 STP X22, X21, [X31 + 0x10]
	0x01CC05AC STP X20, X19, [X31 + 0x20]
	0x01CC05B0 ADRP X22, 0x2563000
	0x01CC05B4 ADRP X21, 0x228E000
	0x01CC05B8 LDRB W8, [X22 + 0x547]
	0x01CC05BC LDR X21, [X21 + 0x198]
	0x01CC05C0 MOV W20, W1
	0x01CC05C4 MOV X19, X0
	0x01CC05C8 TBNZ X8, 0x0, 0x1CC05E0
	0x01CC05CC ADRP X0, 0x228E000
	0x01CC05D0 LDR X0, [X0 + 0x198]
	0x01CC05D4 BL 0x1B6E7F0
	0x01CC05D8 MOVZ W8, 0x1
	0x01CC05DC STRB W8, [X22 + 0x547]
	0x01CC05E0 STR W20, [X19 + 0x80]
	0x01CC05E4 LDR X0, [X21]
	0x01CC05E8 LDR W8, [X0 + 0xE0]
	0x01CC05EC CBNZ W8, 0x1CC05F8
	0x01CC05F0 BL 0x1B6E8F8
	0x01CC05F4 LDR X0, [X21]
	0x01CC05F8 LDR X8, [X0 + 0xB8]
	0x01CC05FC LDR X8, [X8 + 0x30]
	0x01CC0600 CBZ X8, 0x1CC0624
	0x01CC0604 LDR W1, [X19 + 0x80]
	0x01CC0608 LDR X3, [X8 + 0x18]
	0x01CC060C LDR X0, [X8 + 0x40]
	0x01CC0610 LDR X2, [X8 + 0x28]
	0x01CC0614 LDP X20, X19, [X31 + 0x20]
	0x01CC0618 LDP X22, X21, [X31 + 0x10]
	0x01CC061C LDR X30, [X31], #0x30
	0x01CC0620 BR X3
	0x01CC0624 LDP X20, X19, [X31 + 0x20]
	0x01CC0628 LDP X22, X21, [X31 + 0x10]
	0x01CC062C LDR X30, [X31], #0x30
	0x01CC0630 RET
	0x01CC0634 STP X30, X21, [X31 - 0x20]!
	0x01CC0638 STP X20, X19, [X31 + 0x10]
	0x01CC063C LDR X20, [X0 + 0x58]
	0x01CC0640 STP X1, X2, [X0 + 0x20]
	0x01CC0644 STP X3, X4, [X0 + 0x30]
	0x01CC0648 STR X5, [X0 + 0x40]
	0x01CC064C STR W6, [X0 + 0x50]
	0x01CC0650 CBZ X20, 0x1CC0714
	0x01CC0654 LDR W8, [X20 + 0x18]
	0x01CC0658 MOV X19, X0
	0x01CC065C CMP W8, 0x1
	0x01CC0660 B.LT 0x1CC06A0
	0x01CC0664 MOV W21, W31
	0x01CC0668 CMP W21, W8
	0x01CC066C B.CS 0x1CC0710
	0x01CC0670 ADD X8, X20, W21, 0x3, SXTW
	0x01CC0674 LDR X0, [X8 + 0x20]
	0x01CC0678 CBZ X0, 0x1CC0714
	0x01CC067C LDR W8, [X19 + 0x50]
	0x01CC0680 MOV X2, X31
	0x01CC0684 CMP W8, 0x0
	0x01CC0688 CSET W1, EQ
	0x01CC068C BL 0x3A7B8E0
	0x01CC0690 LDR W8, [X20 + 0x18]
	0x01CC0694 ADD W21, W21, 0x1
	0x01CC0698 CMP W21, W8
	0x01CC069C B.LT 0x1CC0668
	0x01CC06A0 LDR X20, [X19 + 0x60]
	0x01CC06A4 CBZ X20, 0x1CC0714
	0x01CC06A8 LDR W8, [X20 + 0x18]
	0x01CC06AC CMP W8, 0x1
	0x01CC06B0 B.LT 0x1CC06F0
	0x01CC06B4 MOV W21, W31
	0x01CC06B8 CMP W21, W8
	0x01CC06BC B.CS 0x1CC0710
	0x01CC06C0 ADD X8, X20, W21, 0x3, SXTW
	0x01CC06C4 LDR X0, [X8 + 0x20]
	0x01CC06C8 CBZ X0, 0x1CC0714
	0x01CC06CC LDR W8, [X19 + 0x50]
	0x01CC06D0 MOV X2, X31
	0x01CC06D4 CMP W8, 0x1
	0x01CC06D8 CSET W1, EQ
	0x01CC06DC BL 0x3A7B8E0
	0x01CC06E0 LDR W8, [X20 + 0x18]
	0x01CC06E4 ADD W21, W21, 0x1
	0x01CC06E8 CMP W21, W8

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Subtract X31, X31, 1024
	014 NotImplemented "Instruction MRS not yet implemented."
	015 Move X8, [X28+40]
	016 Move X20, 0x2565000
	017 Move X19, X0
	018 Move [X31+1016], X8
	019 Move W8, [X20+1337]
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {98}
	024 Move X0, 0x2290000
	025 Move X0, [X0+360]
	026 Call 0x1B6F7F0
	027 Move X0, 0x228F000
	028 Move X0, [X0+1256]
	029 Call 0x1B6F7F0
	030 Move X0, 0x228F000
	031 Move X0, [X0+2048]
	032 Call 0x1B6F7F0
	033 Move X0, 0x2291000
	034 Move X0, [X0+616]
	035 Call 0x1B6F7F0
	036 Move X0, 0x2291000
	037 Move X0, [X0+624]
	038 Call 0x1B6F7F0
	039 Move X0, 0x2291000
	040 Move X0, [X0+632]
	041 Call 0x1B6F7F0
	042 Move X0, 0x228F000
	043 Move X0, [X0+3864]
	044 Call 0x1B6F7F0
	045 Move X0, 0x228F000
	046 Move X0, [X0+1528]
	047 Call 0x1B6F7F0
	048 Move X0, 0x2291000
	049 Move X0, [X0+640]
	050 Call 0x1B6F7F0
	051 Move X0, 0x2291000
	052 Move X0, [X0+648]
	053 Call 0x1B6F7F0
	054 Move X0, 0x228F000
	055 Move X0, [X0+3960]
	056 Call 0x1B6F7F0
	057 Move X0, 0x228F000
	058 Move X0, [X0+3504]
	059 Call 0x1B6F7F0
	060 Move X0, 0x2291000
	061 Move X0, [X0+656]
	062 Call 0x1B6F7F0
	063 Move X0, 0x2290000
	064 Move X0, [X0+1312]
	065 Call 0x1B6F7F0
	066 Move X0, 0x2291000
	067 Move X0, [X0+664]
	068 Call 0x1B6F7F0
	069 Move X0, 0x228F000
	070 Move X0, [X0+1144]
	071 Call 0x1B6F7F0
	072 Move X0, 0x2291000
	073 Move X0, [X0+672]
	074 Call 0x1B6F7F0
	075 Move X0, 0x2291000
	076 Move X0, [X0+680]
	077 Call 0x1B6F7F0
	078 Move X0, 0x2291000
	079 Move X0, [X0+688]
	080 Call 0x1B6F7F0
	081 Move X0, 0x228F000
	082 Move X0, [X0+3032]
	083 Call 0x1B6F7F0
	084 Move X0, 0x2291000
	085 Move X0, [X0+696]
	086 Call 0x1B6F7F0
	087 Move X0, 0x228F000
	088 Move X0, [X0+3304]
	089 Call 0x1B6F7F0
	090 Move X0, 0x2291000
	091 Move X0, [X0+704]
	092 Call 0x1B6F7F0
	093 Move X0, 0x2291000
	094 Move X0, [X0+712]
	095 Call 0x1B6F7F0
	096 Move W8, 1
	097 Move [X20+1337], W8
	098 NotImplemented "Instruction MOVI not yet implemented."
	099 Move [X31+1008], W31
	100 Move [X31+248], X31
	101 Move [X31+256], X31
	102 Move [X31+944], X31
	103 Move [X31+232], X31
	104 Move [X31+240], X31
	105 Move [X31+864], X31
	106 Move [X31+216], X31
	107 Move [X31+224], X31
	108 Move [X31+200], X31
	109 Move [X31+208], X31
	110 NotImplemented "Instruction STRH not yet implemented."
	111 Move [X31+800], X31
	112 Move [X31+184], X31
	113 Move [X31+192], X31
	114 Move [X31+976], V0
	115 Move [X31+984], V0
	116 Move [X31+60], V0
	117 Move [X31+880], V0
	118 Move [X31+888], V0
	119 Move [X31+912], V0
	120 Move [X31+920], V0
	121 Move [X31+816], V0
	122 Move [X31+824], V0
	123 Move [X31+53], V0
	124 Move [X31+176], X31
	125 Move W8, [X19]
	126 Move X20, [X19+48]
	127 Compare W8, 0
	128 JumpIfEqual {215}
	129 Move W0, 4
	130 Move X1, X31
	131 Move [X31+56], X28
	132 Call SceneRef.FromIndex, X0
	133 Move X8, X19
	134 NotImplemented "Instruction MOVI not yet implemented."
	135 Move [X8+72], W0
	136 Move [X31+1008], W31
	137 Move [X31+976], V0
	138 Move [X31+984], V0
	139 Move [X31+60], V0
	140 Move X0, X8
	141 Move X1, X31
	142 Call SceneRef.get_IsValid, X0
	143 Move TEMP, X0
	144 And TEMP, TEMP, 1
	145 Compare TEMP, 1
	146 JumpIfNotEqual {154}
	147 Move W1, [X19+72]
	148 Add X0, X31, 960
	149 Move W2, 1
	150 Move W3, W31
	151 Move W4, W31
	152 Move X5, X31
	153 Call NetworkSceneInfo.AddSceneRef, X0, X1, X2, X3, X4
	154 Move X8, [X19+40]
	155 Compare X8, 0
	156 JumpIfNotEqual {168}
	157 Compare X20, 0
	158 JumpIfEqual {601}
	159 Move X0, [X20+80]
	160 Move X1, X31
	161 Call String.IsNullOrEmpty, X0
	162 Move TEMP, X0
	163 And TEMP, TEMP, 1
	164 Compare TEMP, 1
	165 JumpIfEqual {168}
	166 Move X8, [X20+80]
	167 Move [X19+40], X8
	168 Move X8, 0x228F000
	169 Move X8, [X8+2048]
	170 Move X0, [X8]
	171 Move X8, 0x2291000
	172 Move X8, [X8+696]
	173 Move W9, [X0+224]
	174 Move X27, [X8]
	175 Compare W9, 0
	176 JumpIfNotEqual {178}
	177 Call 0x1B6F8F8
	178 Move X0, X31
	179 Call Application.get_isEditor
	180 Move X29, 0x228E000
	181 Move X29, [X29+3960]
	182 Move TEMP, X0
	183 And TEMP, TEMP, 1
	184 Compare TEMP, 1
	185 JumpIfEqual {207}
	186 Move X21, 0x2564000
	187 Move W8, [X21+1472]
	188 Compare W8, 0
	189 JumpIfNotEqual {195}
	190 Move X0, 0x228E000
	191 Move X0, [X0+3960]
	192 Call 0x1B6F7F0
	193 Move W8, 1
	194 Move [X21+1472], W8
	195 Move X8, [X29]
	196 Move X8, [X8+184]
	197 Move W8, [X8+72]
	198 Compare W8, 0
	199 JumpIfNotEqual {207}
	200 Move X8, 0x228E000
	201 Move X8, [X8+3032]
	202 Move X0, [X8]
	203 Move X1, X27
	204 Move X2, X31
	205 Call String.Concat, X0, X1
	206 Move X27, X0
	207 Move X0, [X19+40]
	208 Move X1, X31
	209 Call String.IsNullOrEmpty, X0
	210 Move TEMP, X0
	211 And TEMP, TEMP, 1
	212 Compare TEMP, 1
	213 JumpIfNotEqual {222}
	214 Move X25, X31
	215 Move X8, [X19+80]
	216 Move TEMP, 0
	217 Not TEMP
	218 Move W9, TEMP
	219 Move [X31+256], X8
	220 Move [X19+80], X31
	221 Move [X19], W9
	222 Move X25, [X19+40]
	223 Compare X20, 0
	224 JumpIfEqual {594}
	225 Move W8, [X20+73]
	226 Compare W8, 0
	227 JumpIfEqual {229}
	228 Move W24, W31
	229 Move X0, [X19+40]
	230 Move X1, X31
	231 Call String.IsNullOrEmpty, X0
	232 And W24, W0, 1
	233 Move X8, 0x2290000
	234 Move X8, [X8+624]
	235 NotImplemented "Instruction CMP not yet implemented."
	236 Move W9, 12
	237 Move X0, [X8]
	238 Move W8, 20
	239 NotImplemented "Instruction CSEL not yet implemented."
	240 Call 0x1B6FA0C
	241 Move X22, X0
	242 Move X1, X31
	243 Call AuthenticationValues..ctor, X0
	244 Compare X22, 0
	245 JumpIfEqual {595}
	246 Move X0, X22
	247 Move W1, W31
	248 Move X2, X31
	249 Call AuthenticationValues.set_AuthType, X0, X1
	250 Move X8, 0x228E000
	251 Move X8, [X8+1256]
	252 Move X0, [X8]
	253 Move W8, [X0+224]
	254 Compare W8, 0
	255 JumpIfNotEqual {257}
	256 Call 0x1B6F8F8
	257 Move X0, X31
	258 Call App.get_apiSession
	259 Move X23, X0
	260 Compare X0, 0
	261 JumpIfEqual {596}
	262 Move X10, 0x228E000
	263 Move X8, [X23]
	264 Move X10, [X10+3864]
	265 NotImplemented "Instruction LDRH not yet implemented."
	266 Move X1, [X10]
	267 Compare X9, 0
	268 JumpIfEqual {275}
	269 Move X10, [X8+176]
	270 Add X10, X10, 8
	271 NotImplemented "Instruction LDUR not yet implemented."
	272 NotImplemented "Instruction CMP not yet implemented."
	273 Subtract X9, X9, 1
	274 Add X10, X10, 16
	275 Move X0, X23
	276 Move W2, W31
	277 Call 0x1BB5284
	278 NotImplemented "Instruction LDRSW not yet implemented."
	279 Add X8, X8, X9
	280 Add X0, X8, 312
	281 Move X8, [X0]
	282 Move X1, [X0+8]
	283 Move X0, X23
	284 NotImplemented "Instruction BLR not yet implemented."
	285 Move X9, 0x2290000
	286 Move X8, [X22]
	287 Move X9, [X9+704]
	288 Move X2, X0
	289 Move X1, [X9]
	290 Move X9, [X8+424]
	291 Move X3, [X8+432]
	292 Move X0, X22
	293 NotImplemented "Instruction BLR not yet implemented."
	294 NotImplemented "Instruction MOVI not yet implemented."
	295 Move X23, [X20+152]
	296 Move [X31+944], X31
	297 Move [X31+240], X31
	298 Move [X31+248], X31
	299 Move [X31+224], X31
	300 Move [X31+232], X31
	301 Move [X31+208], X31
	302 Move [X31+216], X31
	303 Move [X31+800], X31
	304 NotImplemented "Instruction STRH not yet implemented."
	305 Move [X31+192], X31
	306 Move [X31+200], X31
	307 Move [X31+176], X31
	308 Move [X31+184], X31
	309 Move [X31+912], V0
	310 Move [X31+920], V0
	311 Move [X31+880], V0
	312 Move [X31+888], V0
	313 Move W8, [X19+56]
	314 Move [X31+752], V0
	315 Move [X31+760], V0
	316 Move [X31+46], V0
	317 Move V1, [X31+960]
	318 Move V2, [X31+976]
	319 Move [X31+52], W8
	320 Move X8, 0x2290000
	321 Move X8, [X8+664]
	322 Move V0, [X31+62]
	323 Move W9, [X31+1008]
	324 Move [X31+656], V1
	325 Move [X31+664], V2
	326 Move X2, [X8]
	327 Move [X31+784], X31
	328 Move [X31+43], V0
	329 Move [X31+704], W9
	330 Add X0, X31, 736
	331 Add X1, X31, 656
	332 Call Nullable`1<NetworkSceneInfo>..ctor, X0, X1
	333 Move [X31+40], X25
	334 Move X8, 0x228F000
	335 Move X8, [X8+360]
	336 Move V0, [X31+736]
	337 Move V1, [X31+752]
	338 Move V2, [X31+48]
	339 Move X9, [X31+784]
	340 Move X0, [X8]
	341 Move [X31+816], V0
	342 Move [X31+824], V1
	343 Move [X31+53], V2
	344 Move [X31+864], X9
	345 Call 0x1B6FA0C
	346 Move X8, 0x2290000
	347 Move X8, [X8+648]
	348 Move X25, X0
	349 Move X2, [X8]
	350 Move X1, X20
	351 Move X3, X31
	352 Call Action`1<Object>..ctor, X0, X1, X2
	353 Move X8, [X29]
	354 Move [X31+16], X25
	355 Move X9, 0x228E000
	356 Move X8, [X8+184]
	357 Move X9, [X9+3504]
	358 Move X25, [X19+64]
	359 Move X10, [X20+176]
	360 Move X8, [X8]
	361 Move X2, [X9]
	362 Move [X31+168], X31
	363 Move [X31+24], X10
	364 Move [X31+32], X8
	365 Add X0, X31, 168
	366 Move W1, W21
	367 Call Nullable`1<Int32>..ctor, X0, X1
	368 Move X8, 0x228F000
	369 Move X8, [X8+1312]
	370 Move X26, [X31+168]
	371 Move X21, X27
	372 NotImplemented "Instruction STRH not yet implemented."
	373 Move X2, [X8]
	374 Add X0, X31, 164
	375 Move W1, W24
	376 Call Nullable`1<Boolean>..ctor, X0, X1
	377 Move X8, 0x2290000
	378 Move X8, [X8+632]
	379 NotImplemented "Instruction LDRH not yet implemented."
	380 Move X0, [X8]
	381 Call 0x1B6FA0C
	382 Move X8, 0x2290000
	383 Move X8, [X8+640]
	384 Move X24, X0
	385 Move X2, [X8]
	386 Move X1, X20
	387 Move X3, X31
	388 Call Func`1<Object>..ctor, X0, X1, X2
	389 Move X8, 0x228E000
	390 Move X8, [X8+1528]
	391 Move X0, [X8]
	392 Move W8, 4
	393 Move [X31+160], W8
	394 Add X1, X31, 160
	395 Call 0x1B6F900
	396 Move X1, X0
	397 Move X8, 0x2290000
	398 Move X8, [X8+712]
	399 Move X27, X25
	400 Move X0, [X8]
	401 Move X2, X21
	402 Move X3, X31
	403 Call String.Format, X0, X1, X2
	404 Move X8, 0x2290000
	405 Move X8, [X8+656]
	406 Move X21, X0
	407 Move X25, X23
	408 NotImplemented "Instruction STRH not yet implemented."
	409 Move X2, [X8]
	410 Add X0, X31, 156
	411 Move W1, 1
	412 Call Nullable`1<ByteEnum>..ctor, X0, X1
	413 NotImplemented "Instruction LDRH not yet implemented."
	414 Add X0, X31, 656
	415 Add X1, X31, 880
	416 Move W2, 72
	417 Add X23, X31, 232
	418 Call 0x3D1A8D0
	419 Move V0, [X23]
	420 Move V3, [X31+53]
	421 Move X8, [X31+248]
	422 Move X9, [X31+864]
	423 Move [X31+8], V0
	424 Move [X31+39], V3
	425 Move V3, [X31+13]
	426 Move V0, [X31+12]
	427 Move V1, [X31+816]
	428 Move V2, [X31+832]
	429 Move X10, [X31+224]
	430 Move [X31+144], X8
	431 Move X8, [X31+800]
	432 Move [X31+640], X9
	433 NotImplemented "Instruction LDRH not yet implemented."
	434 Move [X31+80], V0
	435 Move [X31+88], V3
	436 Move V0, [X31+11]
	437 Move [X31+592], V1
	438 Move [X31+600], V2
	439 Move [X31+112], X10
	440 NotImplemented "Instruction STRH not yet implemented."
	441 Move [X31+576], X8
	442 Move [X31+4], V0
	443 Compare X25, 0
	444 JumpIfEqual {597}
	445 Move W8, [X31+52]
	446 Add X1, X31, 656
	447 Move W2, 72
	448 Move [X31+268], W31
	449 Move [X31+264], W8
	450 Move X8, [X31+40]
	451 Move [X31+272], X8
	452 Move [X31+280], X24
	453 Add X24, X31, 264
	454 Add X0, X24, 24
	455 Call 0x3D1A8D0
	456 Move V0, [X31+8]
	457 Move X9, [X31+24]
	458 Move X8, [X31+144]
	459 Move V1, [X31+592]
	460 Move V2, [X31+608]
	461 Move X12, [X31+112]
	462 Move [X31+360], X9
	463 Move [X23+136], V0
	464 Move V0, [X31+39]
	465 Move X9, [X31+640]
	466 Move [X31+384], X8
	467 Move [X31+392], X26
	468 Move X10, [X31+576]
	469 Move [X23+200], V0
	470 Move V0, [X31+6]
	471 Move [X31+448], X9
	472 NotImplemented "Instruction LDRH not yet implemented."
	473 Move X8, [X31+32]
	474 Move [X23+14], V0
	475 Move V0, [X31+5]
	476 Add X11, X24, 264
	477 Move [X23+168], V1
	478 Move [X23+184], V2
	479 Move [X31+472], X12
	480 Move [X31+480], X8
	481 Move [X31+488], X10
	482 NotImplemented "Instruction STRH not yet implemented."
	483 NotImplemented "Instruction STRH not yet implemented."
	484 NotImplemented "Instruction STRH not yet implemented."
	485 NotImplemented "Instruction STRH not yet implemented."
	486 Move [X31+504], X21
	487 Move [X31+512], X31
	488 Move [X31+520], X22
	489 Move [X11], V0
	490 Move V0, [X31+4]
	491 Move X9, [X31+16]
	492 Add X8, X24, 296
	493 Move [X31+544], X27
	494 Move [X31+552], X9
	495 Move [X8], V0
	496 Add X1, X31, 264
	497 Move X0, X25
	498 Move X2, X31
	499 Call NetworkRunner.StartGame, X0, X1
	500 Move X28, [X31+56]
	501 Compare X0, 0
	502 JumpIfEqual {598}
	503 Move X8, 0x2290000
	504 Move X8, [X8+688]
	505 Move X1, [X8]
	506 Call Task`1<Object>.GetAwaiter, X0
	507 Move X8, 0x2290000
	508 Move X8, [X8+680]
	509 Move [X31+256], X0
	510 Move X1, [X8]
	511 Add X0, X31, 256
	512 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	513 Move TEMP, X0
	514 And TEMP, TEMP, 1
	515 Compare TEMP, 1
	516 JumpIfNotEqual {565}
	517 Move X8, 0x2290000
	518 Move X8, [X8+672]
	519 Add X0, X31, 256
	520 Move X1, [X8]
	521 Call TaskAwaiter`1<Object>.GetResult, X0
	522 Compare X20, 0
	523 JumpIfEqual {592}
	524 Move X8, 0x228E000
	525 Move X8, [X8+1144]
	526 Move X21, [X20+152]
	527 Move X0, [X8]
	528 Move W8, [X0+224]
	529 Compare W8, 0
	530 JumpIfNotEqual {532}
	531 Call 0x1B6F8F8
	532 Move X0, X21
	533 Move X1, X31
	534 Move X2, X31
	535 Call Object.op_Inequality, X0, X1
	536 Move TEMP, X0
	537 And TEMP, TEMP, 1
	538 Compare TEMP, 1
	539 JumpIfNotEqual {558}
	540 Move X0, [X20+152]
	541 Compare X0, 0
	542 JumpIfEqual {599}
	543 Move X1, X31
	544 Call NetworkRunner.get_IsRunning, X0
	545 Move TEMP, X0
	546 And TEMP, TEMP, 1
	547 Compare TEMP, 1
	548 JumpIfNotEqual {558}
	549 Move X0, [X20+152]
	550 Move [X20+192], W31
	551 Compare X0, 0
	552 JumpIfEqual {602}
	553 Move X1, X20
	554 Move X2, X31
	555 Call NetworkRunner.AddGlobal, X0, X1
	556 Move W8, [X19+72]
	557 Move [X20+184], W8
	558 Move TEMP, 1
	559 Not TEMP
	560 Move W8, TEMP
	561 Move [X19+8], W8
	562 Move X0, X19
	563 Move X1, X31
	564 Call AsyncVoidMethodBuilder.SetResult, X0
	565 Move [X19], W31
	566 Move X8, [X31+256]
	567 Add X0, X19, 8
	568 Move [X19+80], X8
	569 Move X8, 0x2290000
	570 Move X8, [X8+616]
	571 Move X3, [X8]
	572 Add X1, X31, 256
	573 Move X2, X19
	574 Call AsyncVoidMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	575 Move X8, [X28+40]
	576 Move X9, [X31+1016]
	577 NotImplemented "Instruction CMP not yet implemented."
	578 Add X31, X31, 1024
	579 Move X20, [X31+80]
	580 Move X19, [X31+88]
	581 Move X22, [X31+64]
	582 Move X21, [X31+72]
	583 Move X24, [X31+48]
	584 Move X23, [X31+56]
	585 Move X26, [X31+32]
	586 Move X25, [X31+40]
	587 Move X28, [X31+16]
	588 Move X27, [X31+24]
	589 Move X29, [X31+96]
	590 Move X30, [X31+104]
	591 Return 
	592 Move [X31+56], X28
	593 Call 0x1B6FA1C
	594 Call 0x1B6FA1C
	595 Call 0x1B6FA1C
	596 Call 0x1B6FA1C
	597 Call 0x1B6FA1C
	598 Call 0x1B6FA1C
	599 Move [X31+56], X28
	600 Call 0x1B6FA1C
	601 Call 0x1B6FA1C
	602 Call 0x1B6FA1C
	603 Call 0x3D1A880
	604 Move [X31+56], X28
	605 Move X20, X0
	606 NotImplemented "Instruction CMP not yet implemented."
	607 Move X0, X20
	608 Call 0x3D1A840
	609 Move X20, X0
	610 Move X0, 0x228E000
	611 Move X0, [X0+1648]
	612 Call 0x1B6F804
	613 Move X8, [X20]
	614 Move X1, [X8]
	615 Call 0x1B6FD6C
	616 Move TEMP, X0
	617 And TEMP, TEMP, 1
	618 Compare TEMP, 1
	619 JumpIfNotEqual {631}
	620 Move X20, [X20]
	621 Call 0x3D1A850
	622 Move TEMP, 1
	623 Not TEMP
	624 Move W8, TEMP
	625 Move [X19+8], W8
	626 Move X0, X19
	627 Move X1, X20
	628 Move X2, X31
	629 Call AsyncVoidMethodBuilder.SetException, X0, X1
	630 Move X28, [X31+56]
	631 Move W0, 8
	632 Call 0x3D1A860
	633 Move X8, [X20]
	634 Move [X0], X8
	635 Move X1, 0x205D000
	636 Add X1, X1, 3032
	637 Move X2, X31
	638 Call 0x3D1A870
	639 Move X20, X0
	640 Call 0x3D1A850
	641 Move X0, X20
	642 Call 0x1C8518C
	643 Call 0x18F56A8

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x01CC06EC B.LT 0x1CC06B8
	0x01CC06F0 MOV X0, X19
	0x01CC06F4 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Add X0, X0, 8
	002 Move X2, X31
	003 Call AsyncVoidMethodBuilder.SetStateMachine, X0, X1
	004 Return 

