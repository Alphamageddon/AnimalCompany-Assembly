Type: AnimalCompany.MobDetectionUtil

Method: System.Boolean TryGetPlayersBySight(AnimalCompany.MobController mob, out System.Collections.Generic.List`1<AnimalCompany.NetPlayer> players)

Disassembly:
	0x01CE95FC STP X20, X19, [X31 + 0x130]
	0x01CE9600 ADRP X21, 0x253A000
	0x01CE9604 LDRB W8, [X21 + 0x67D]
	0x01CE9608 MOV X19, X1
	0x01CE960C MOV X20, X0
	0x01CE9610 TBNZ X8, 0x0, 0x1CE96AC
	0x01CE9614 ADRP X0, 0x2265000
	0x01CE9618 LDR X0, [X0 + 0x808]
	0x01CE961C BL 0x1B6E7F0
	0x01CE9620 ADRP X0, 0x2267000
	0x01CE9624 LDR X0, [X0 + 0x288]
	0x01CE9628 BL 0x1B6E7F0
	0x01CE962C ADRP X0, 0x2267000
	0x01CE9630 LDR X0, [X0 + 0x290]
	0x01CE9634 BL 0x1B6E7F0
	0x01CE9638 ADRP X0, 0x2267000
	0x01CE963C LDR X0, [X0 + 0x298]
	0x01CE9640 BL 0x1B6E7F0
	0x01CE9644 ADRP X0, 0x2265000
	0x01CE9648 LDR X0, [X0 + 0x3D8]
	0x01CE964C BL 0x1B6E7F0
	0x01CE9650 ADRP X0, 0x2267000
	0x01CE9654 LDR X0, [X0 + 0x2A0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x253B000
	006 Move W8, [X21+1653]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x2267000
	014 Move X0, [X0+3632]
	015 Call 0x1B6F7F0
	016 Move W8, 1
	017 Move [X21+1653], W8
	018 Move X0, X20
	019 Call MobDetectionUtil.GetPlayersBySight, X0
	020 Move [X19], X0
	021 Compare X0, 0
	022 JumpIfEqual {31}
	023 Move W8, [X0+24]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 NotImplemented "Instruction CSET not yet implemented."
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Return X0
	031 Call 0x1B6FA1C

Method: System.Collections.Generic.List`1<AnimalCompany.NetPlayer> GetPlayersBySight(AnimalCompany.MobController mob)

Disassembly:
	0x01CE7CAC BL 0x1B6E7F0
	0x01CE7CB0 ADRP X0, 0x2268000
	0x01CE7CB4 LDR X0, [X0 + 0xD48]
	0x01CE7CB8 BL 0x1B6E7F0
	0x01CE7CBC ADRP X0, 0x2269000
	0x01CE7CC0 LDR X0, [X0 + 0x260]
	0x01CE7CC4 BL 0x1B6E7F0
	0x01CE7CC8 ADRP X0, 0x2269000
	0x01CE7CCC LDR X0, [X0 + 0x268]
	0x01CE7CD0 BL 0x1B6E7F0
	0x01CE7CD4 ADRP X0, 0x2269000
	0x01CE7CD8 LDR X0, [X0 + 0x270]
	0x01CE7CDC BL 0x1B6E7F0
	0x01CE7CE0 ADRP X0, 0x2269000
	0x01CE7CE4 LDR X0, [X0 + 0x278]
	0x01CE7CE8 BL 0x1B6E7F0
	0x01CE7CEC MOVZ W8, 0x1
	0x01CE7CF0 STRB W8, [X21 + 0x66E]
	0x01CE7CF4 LDR X0, [X20]
	0x01CE7CF8 STP X31, X31, [X31 + 0x20]
	0x01CE7CFC STR X31, [X31 + 0x30]
	0x01CE7D00 LDR W8, [X0 + 0xE0]
	0x01CE7D04 CBNZ W8, 0x1CE7D0C
	0x01CE7D08 BL 0x1B6E8F8
	0x01CE7D0C MOV X0, X31
	0x01CE7D10 BL 0x3A6A5FC
	0x01CE7D14 TBZ X0, 0x0, 0x1CE7EF0
	0x01CE7D18 LDR X0, [X19 + 0x120]
	0x01CE7D1C CBZ X0, 0x1CE7F14
	0x01CE7D20 ADRP X23, 0x2269000
	0x01CE7D24 LDR X23, [X23 + 0x278]
	0x01CE7D28 ADD X8, X31, 0x8
	0x01CE7D2C LDR X1, [X23]
	0x01CE7D30 BL 0x2E470E0
	0x01CE7D34 LDUR V0, [X31 + 0x8]
	0x01CE7D38 LDR X8, [X31 + 0x18]
	0x01CE7D3C ADRP X9, 0xFFFFFFFFFEDC2000
	0x01CE7D40 ADRP X22, 0x2269000
	0x01CE7D44 STR V0, [X31 + 0x2]
	0x01CE7D48 STR X8, [X31 + 0x30]
	0x01CE7D4C LDR V8, [X9 + 0xAB0]
	0x01CE7D50 LDR X22, [X22 + 0x268]
	0x01CE7D54 LDR X1, [X22]
	0x01CE7D58 ADD X0, X31, 0x20
	0x01CE7D5C BL 0x2A14F30
	0x01CE7D60 TBZ X0, 0x0, 0x1CE7D9C
	0x01CE7D64 LDR X20, [X31 + 0x30]
	0x01CE7D68 FMOV S0, 0.5
	0x01CE7D6C FMOV S1, 0.5
	0x01CE7D70 FMOV S2, 0.5
	0x01CE7D74 FMOV S3, 1
	0x01CE7D78 MOV X0, X31
	0x01CE7D7C BL 0x3A75B14
	0x01CE7D80 CBZ X20, 0x1CE7F0C
	0x01CE7D84 LDP S0, S1, [X20 + 0x28]
	0x01CE7D88 LDR V2, [X20 + 0x30]
	0x01CE7D8C MOV V3.16B, V8.16B
	0x01CE7D90 MOV X0, X31
	0x01CE7D94 BL 0x3A7571C
	0x01CE7D98 B 0x1CE7D54
	0x01CE7D9C ADRP X8, 0x2269000
	0x01CE7DA0 LDR X8, [X8 + 0x260]
	0x01CE7DA4 ADD X0, X31, 0x20
	0x01CE7DA8 LDR X1, [X8]
	0x01CE7DAC BL 0x2A14F2C
	0x01CE7DB0 LDR X0, [X19 + 0x128]
	0x01CE7DB4 CBZ X0, 0x1CE7F14
	0x01CE7DB8 LDR X1, [X23]
	0x01CE7DBC ADD X8, X31, 0x8
	0x01CE7DC0 BL 0x2E470E0
	0x01CE7DC4 LDUR V0, [X31 + 0x8]
	0x01CE7DC8 LDR X8, [X31 + 0x18]
	0x01CE7DCC STR V0, [X31 + 0x2]
	0x01CE7DD0 STR X8, [X31 + 0x30]
	0x01CE7DD4 LDR X1, [X22]
	0x01CE7DD8 ADD X0, X31, 0x20
	0x01CE7DDC BL 0x2A14F30
	0x01CE7DE0 TBZ X0, 0x0, 0x1CE7E1C
	0x01CE7DE4 LDR X20, [X31 + 0x30]
	0x01CE7DE8 FMOV S0, W31
	0x01CE7DEC FMOV S1, 1
	0x01CE7DF0 FMOV S2, W31
	0x01CE7DF4 FMOV S3, 1
	0x01CE7DF8 MOV X0, X31
	0x01CE7DFC BL 0x3A75B14
	0x01CE7E00 CBZ X20, 0x1CE7F10
	0x01CE7E04 LDP S0, S1, [X20 + 0x28]
	0x01CE7E08 LDR V2, [X20 + 0x30]
	0x01CE7E0C MOV V3.16B, V8.16B
	0x01CE7E10 MOV X0, X31
	0x01CE7E14 BL 0x3A7571C
	0x01CE7E18 B 0x1CE7DD4
	0x01CE7E1C ADRP X8, 0x2269000
	0x01CE7E20 LDR X8, [X8 + 0x260]
	0x01CE7E24 ADD X0, X31, 0x20
	0x01CE7E28 LDR X1, [X8]
	0x01CE7E2C BL 0x2A14F2C
	0x01CE7E30 ADRP X20, 0x2268000
	0x01CE7E34 LDR X20, [X20 + 0xD48]
	0x01CE7E38 LDR X0, [X20]
	0x01CE7E3C LDR W8, [X0 + 0xE0]
	0x01CE7E40 CBNZ W8, 0x1CE7E4C
	0x01CE7E44 BL 0x1B6E8F8
	0x01CE7E48 LDR X0, [X20]
	0x01CE7E4C LDR X8, [X0 + 0xB8]
	0x01CE7E50 MOV X0, X31
	0x01CE7E54 LDP S0, S1, [X8 + 0x70]
	0x01CE7E58 LDP S2, S3, [X8 + 0x78]
	0x01CE7E5C BL 0x3A75B14
	0x01CE7E60 LDR X0, [X19 + 0xD0]
	0x01CE7E64 CBZ X0, 0x1CE7F14
	0x01CE7E68 MOV X1, X31
	0x01CE7E6C BL 0x3AA7658
	0x01CE7E70 MOV X0, X19
	0x01CE7E74 MOV V8.16B, V0.16B
	0x01CE7E78 MOV V9.16B, V1.16B
	0x01CE7E7C MOV V10.16B, V2.16B
	0x01CE7E80 BL 0x1CE448C
	0x01CE7E84 MOV V3.16B, V0.16B
	0x01CE7E88 MOV V0.16B, V8.16B
	0x01CE7E8C MOV V1.16B, V9.16B
	0x01CE7E90 MOV V2.16B, V10.16B
	0x01CE7E94 MOV X0, X31
	0x01CE7E98 BL 0x3A7567C
	0x01CE7E9C LDR X8, [X20]
	0x01CE7EA0 MOV X0, X31
	0x01CE7EA4 LDR X8, [X8 + 0xB8]
	0x01CE7EA8 LDP S0, S1, [X8 + 0x80]
	0x01CE7EAC LDP S2, S3, [X8 + 0x88]
	0x01CE7EB0 BL 0x3A75B14
	0x01CE7EB4 LDR X0, [X19 + 0xD0]
	0x01CE7EB8 CBZ X0, 0x1CE7F14
	0x01CE7EBC MOV X1, X31
	0x01CE7EC0 BL 0x3AA7658
	0x01CE7EC4 MOV X0, X19
	0x01CE7EC8 MOV V8.16B, V0.16B
	0x01CE7ECC MOV V9.16B, V1.16B
	0x01CE7ED0 MOV V10.16B, V2.16B
	0x01CE7ED4 BL 0x1CE454C
	0x01CE7ED8 MOV V3.16B, V0.16B
	0x01CE7EDC MOV V0.16B, V8.16B
	0x01CE7EE0 MOV V1.16B, V9.16B
	0x01CE7EE4 MOV V2.16B, V10.16B
	0x01CE7EE8 MOV X0, X31
	0x01CE7EEC BL 0x3A7567C
	0x01CE7EF0 LDP X20, X19, [X31 + 0x80]
	0x01CE7EF4 LDP X22, X21, [X31 + 0x70]
	0x01CE7EF8 LDP X30, X23, [X31 + 0x60]
	0x01CE7EFC LDP D9, D8, [X31 + 0x50]
	0x01CE7F00 LDR V10, [X31 + 0x40]
	0x01CE7F04 ADD X31, X31, 0x90
	0x01CE7F08 RET
	0x01CE7F0C BL 0x1B6EA1C
	0x01CE7F10 BL 0x1B6EA1C
	0x01CE7F14 BL 0x1B6EA1C
	0x01CE7F18 B 0x1CE7F30
	0x01CE7F1C B 0x1CE7F30
	0x01CE7F20 B 0x1CE7F30
	0x01CE7F24 B 0x1CE7F94
	0x01CE7F28 B 0x1CE7F94
	0x01CE7F2C B 0x1CE7F94
	0x01CE7F30 MOV X20, X0
	0x01CE7F34 CMP W1, 0x1
	0x01CE7F38 B.NE 0x1CE7F68
	0x01CE7F3C MOV X0, X20
	0x01CE7F40 BL 0x3D19840
	0x01CE7F44 LDR X21, [X0]
	0x01CE7F48 BL 0x3D19850
	0x01CE7F4C ADRP X8, 0x2269000
	0x01CE7F50 LDR X8, [X8 + 0x260]
	0x01CE7F54 ADD X0, X31, 0x20
	0x01CE7F58 LDR X1, [X8]
	0x01CE7F5C BL 0x2A14F2C
	0x01CE7F60 CBZ X21, 0x1CE7E30
	0x01CE7F64 B 0x1CE7FC8
	0x01CE7F68 MOV X21, X31
	0x01CE7F6C B 0x1CE7F74
	0x01CE7F70 MOV X20, X0
	0x01CE7F74 ADRP X8, 0x2269000
	0x01CE7F78 LDR X8, [X8 + 0x260]
	0x01CE7F7C LDR X1, [X8]
	0x01CE7F80 ADD X0, X31, 0x20
	0x01CE7F84 BL 0x2A14F2C
	0x01CE7F88 CBZ X21, 0x1CE7FF4
	0x01CE7F8C MOV X0, X21
	0x01CE7F90 BL 0x1B6EA14
	0x01CE7F94 MOV X20, X0
	0x01CE7F98 CMP W1, 0x1
	0x01CE7F9C B.NE 0x1CE7FD0
	0x01CE7FA0 MOV X0, X20
	0x01CE7FA4 BL 0x3D19840
	0x01CE7FA8 LDR X21, [X0]
	0x01CE7FAC BL 0x3D19850
	0x01CE7FB0 ADRP X8, 0x2269000
	0x01CE7FB4 LDR X8, [X8 + 0x260]
	0x01CE7FB8 ADD X0, X31, 0x20
	0x01CE7FBC LDR X1, [X8]
	0x01CE7FC0 BL 0x2A14F2C
	0x01CE7FC4 CBZ X21, 0x1CE7DB0
	0x01CE7FC8 MOV X0, X21
	0x01CE7FCC BL 0x1B6EA14
	0x01CE7FD0 MOV X21, X31
	0x01CE7FD4 B 0x1CE7FDC
	0x01CE7FD8 MOV X20, X0
	0x01CE7FDC ADRP X8, 0x2269000
	0x01CE7FE0 LDR X8, [X8 + 0x260]
	0x01CE7FE4 LDR X1, [X8]
	0x01CE7FE8 ADD X0, X31, 0x20
	0x01CE7FEC BL 0x2A14F2C
	0x01CE7FF0 CBNZ X21, 0x1CE7FFC
	0x01CE7FF4 MOV X0, X20
	0x01CE7FF8 BL 0x1C8418C
	0x01CE7FFC MOV X0, X21
	0x01CE8000 BL 0x1B6EA14
	0x01CE8004 BL 0x18F46A8
	0x01CE8008 STR X30, [X31 - 0x30]!
	0x01CE800C STP X22, X21, [X31 + 0x10]
	0x01CE8010 STP X20, X19, [X31 + 0x20]
	0x01CE8014 ADRP X20, 0x253B000
	0x01CE8018 ADRP X22, 0x2268000
	0x01CE801C ADRP X21, 0x2268000
	0x01CE8020 LDRB W8, [X20 + 0x66F]
	0x01CE8024 LDR X22, [X22 + 0x2D8]
	0x01CE8028 LDR X21, [X21 + 0x2E0]
	0x01CE802C MOV X19, X0
	0x01CE8030 TBNZ X8, 0x0, 0x1CE8054
	0x01CE8034 ADRP X0, 0x2268000
	0x01CE8038 LDR X0, [X0 + 0x2E0]
	0x01CE803C BL 0x1B6E7F0
	0x01CE8040 ADRP X0, 0x2268000
	0x01CE8044 LDR X0, [X0 + 0x2D8]
	0x01CE8048 BL 0x1B6E7F0
	0x01CE804C MOVZ W8, 0x1
	0x01CE8050 STRB W8, [X20 + 0x66F]
	0x01CE8054 LDR X0, [X22]
	0x01CE8058 BL 0x1B6EA0C
	0x01CE805C LDR X1, [X21]
	0x01CE8060 MOV X20, X0
	0x01CE8064 BL 0x2E45D4C
	0x01CE8068 STR X20, [X19 + 0x120]
	0x01CE806C LDR X0, [X22]
	0x01CE8070 BL 0x1B6EA0C
	0x01CE8074 LDR X1, [X21]
	0x01CE8078 MOV X20, X0
	0x01CE807C BL 0x2E45D4C
	0x01CE8080 STR X20, [X19 + 0x128]
	0x01CE8084 LDR X0, [X22]
	0x01CE8088 BL 0x1B6EA0C
	0x01CE808C LDR X1, [X21]
	0x01CE8090 MOV X20, X0
	0x01CE8094 BL 0x2E45D4C
	0x01CE8098 STR X20, [X19 + 0x158]
	0x01CE809C MOV X0, X19
	0x01CE80A0 LDP X20, X19, [X31 + 0x20]
	0x01CE80A4 LDP X22, X21, [X31 + 0x10]
	0x01CE80A8 MOV X1, X31
	0x01CE80AC LDR X30, [X31], #0x30
	0x01CE80B0 B 0x1D661D8
	0x01CE80B4 STR X30, [X31 - 0x30]!
	0x01CE80B8 STP X22, X21, [X31 + 0x10]
	0x01CE80BC STP X20, X19, [X31 + 0x20]
	0x01CE80C0 ADRP X21, 0x253B000
	0x01CE80C4 ADRP X22, 0x2268000
	0x01CE80C8 ADRP X19, 0x2268000
	0x01CE80CC ADRP X20, 0x2266000
	0x01CE80D0 LDRB W8, [X21 + 0x670]
	0x01CE80D4 LDR X22, [X22 + 0x2E8]
	0x01CE80D8 LDR X19, [X19 + 0x2F0]
	0x01CE80DC LDR X20, [X20 + 0xD78]
	0x01CE80E0 TBNZ X8, 0x0, 0x1CE8110
	0x01CE80E4 ADRP X0, 0x2268000
	0x01CE80E8 LDR X0, [X0 + 0x2F0]
	0x01CE80EC BL 0x1B6E7F0
	0x01CE80F0 ADRP X0, 0x2268000
	0x01CE80F4 LDR X0, [X0 + 0x2E8]
	0x01CE80F8 BL 0x1B6E7F0
	0x01CE80FC ADRP X0, 0x2266000
	0x01CE8100 LDR X0, [X0 + 0xD78]
	0x01CE8104 BL 0x1B6E7F0
	0x01CE8108 MOVZ W8, 0x1
	0x01CE810C STRB W8, [X21 + 0x670]
	0x01CE8110 LDR X0, [X22]
	0x01CE8114 BL 0x1B6EA0C
	0x01CE8118 LDR X1, [X19]
	0x01CE811C MOV X19, X0
	0x01CE8120 BL 0x2BD32D4
	0x01CE8124 LDR X8, [X20]
	0x01CE8128 LDP X22, X21, [X31 + 0x10]
	0x01CE812C LDR X8, [X8 + 0xB8]
	0x01CE8130 STR X19, [X8 + 0x8]
	0x01CE8134 LDP X20, X19, [X31 + 0x20]
	0x01CE8138 LDR X30, [X31], #0x30
	0x01CE813C RET
	0x01CE8140 STP X30, X19, [X31 - 0x10]!
	0x01CE8144 LDRB W1, [X0 + 0x80]
	0x01CE8148 MOV X19, X0
	0x01CE814C BL 0x1CE4068
	0x01CE8150 LDR W1, [X19 + 0x84]
	0x01CE8154 MOV X0, X19
	0x01CE8158 BL 0x1CE412C
	0x01CE815C LDR W1, [X19 + 0x88]
	0x01CE8160 MOV X0, X19
	0x01CE8164 BL 0x1CE41EC
	0x01CE8168 LDR V0, [X19 + 0x8C]
	0x01CE816C MOV X0, X19
	0x01CE8170 BL 0x1CE42AC
	0x01CE8174 LDR V0, [X19 + 0x90]
	0x01CE8178 MOV X0, X19
	0x01CE817C BL 0x1CE436C
	0x01CE8180 LDR V0, [X19 + 0x94]
	0x01CE8184 MOV X0, X19
	0x01CE8188 BL 0x1CE442C
	0x01CE818C LDR V0, [X19 + 0x98]
	0x01CE8190 MOV X0, X19
	0x01CE8194 BL 0x1CE44EC
	0x01CE8198 LDR V0, [X19 + 0x9C]

ISIL:
	001 Subtract X31, X31, 224
	002 Move [X31+64], D15
	003 Move [X31+72], D14
	004 Move [X31+80], D13
	005 Move [X31+88], D12
	006 Move [X31+96], D11
	007 Move [X31+104], D10
	008 Move [X31+112], D9
	009 Move [X31+120], D8
	010 Move [X31+128], X29
	011 Move [X31+136], X30
	012 Move [X31+144], X28
	013 Move [X31+152], X27
	014 Move [X31+160], X26
	015 Move [X31+168], X25
	016 Move [X31+176], X24
	017 Move [X31+184], X23
	018 Move [X31+192], X22
	019 Move [X31+200], X21
	020 Move [X31+208], X20
	021 Move [X31+216], X19
	022 Move X19, 0x253D000
	023 Move W8, [X19+1654]
	024 Move X20, X0
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {58}
	029 Move X0, 0x2268000
	030 Move X0, [X0+2056]
	031 Call 0x1B6F7F0
	032 Move X0, 0x226A000
	033 Move X0, [X0+648]
	034 Call 0x1B6F7F0
	035 Move X0, 0x226A000
	036 Move X0, [X0+656]
	037 Call 0x1B6F7F0
	038 Move X0, 0x226A000
	039 Move X0, [X0+664]
	040 Call 0x1B6F7F0
	041 Move X0, 0x226A000
	042 Move X0, [X0+672]
	043 Call 0x1B6F7F0
	044 Move X0, 0x226A000
	045 Move X0, [X0+680]
	046 Call 0x1B6F7F0
	047 Move X0, 0x226A000
	048 Move X0, [X0+688]
	049 Call 0x1B6F7F0
	050 Move X0, 0x2268000
	051 Move X0, [X0+680]
	052 Call 0x1B6F7F0
	053 Move X0, 0x226A000
	054 Move X0, [X0+696]
	055 Call 0x1B6F7F0
	056 Move W8, 1
	057 Move [X19+1654], W8
	058 Move [X31+32], X31
	059 Move [X31+40], X31
	060 Move [X31+48], X31
	061 Compare X20, 0
	062 JumpIfEqual {311}
	063 Move X8, [X20+184]
	064 Compare X8, 0
	065 JumpIfEqual {311}
	066 Move X19, 0x226A000
	067 Move X22, 0x226A000
	068 Move X21, 0x2268000
	069 Move V9, [X8+112]
	070 Move X19, [X19+688]
	071 Move X22, [X22+680]
	072 Move X21, [X21+680]
	073 Move X0, X20
	074 Call MobController.get_viewDistance, X0
	075 Move X0, [X19]
	076 Move V8, V0
	077 Call 0x1B6FA0C
	078 Move X1, [X22]
	079 Move X19, X0
	080 Call List`1<Object>..ctor, X0
	081 Move X0, [X21]
	082 Move W8, [X0+224]
	083 Compare W8, 0
	084 JumpIfNotEqual {86}
	085 Call 0x1B6F8F8
	086 Move X22, 0x253D000
	087 Move W8, [X22+1290]
	088 Compare W8, 0
	089 JumpIfNotEqual {95}
	090 Move X0, 0x2268000
	091 Move X0, [X0+680]
	092 Call 0x1B6F7F0
	093 Move W8, 1
	094 Move [X22+1290], W8
	095 Move X0, [X21]
	096 Move W8, [X0+224]
	097 Compare W8, 0
	098 JumpIfNotEqual {101}
	099 Call 0x1B6F8F8
	100 Move X0, [X21]
	101 Move X8, [X0+184]
	102 Move X0, [X8]
	103 Compare X0, 0
	104 JumpIfEqual {311}
	105 Move X8, 0x2268000
	106 Move X8, [X8+2056]
	107 Move X1, [X8]
	108 Call Dictionary`2<UInt32, Object>.get_Values, X0
	109 Compare X0, 0
	110 JumpIfEqual {311}
	111 Move X8, 0x226A000
	112 Move X8, [X8+696]
	113 Move X25, 0x226A000
	114 Move X25, [X25+656]
	115 Move X26, 0x226A000
	116 Move X1, [X8]
	117 Move X24, 0x226A000
	118 Move X26, [X26+672]
	119 Move X24, [X24+648]
	120 Add X8, X31, 8
	121 Multiply S13, S8, S8
	122 Call ValueCollection<UInt32, Object>.GetEnumerator, X0
	123 NotImplemented "Instruction LDUR not yet implemented."
	124 Move X9, -19124224
	125 Move V2, [X9+2804]
	126 Move X8, [X31+24]
	127 Move S1, 0.5
	128 Move [X31+2], V0
	129 Multiply S0, S9, S1
	130 Multiply S0, S0, S2
	131 Move [X31+48], X8
	132 Call 0x3D1A900
	133 Move X9, -19124224
	134 Move [X31], S0
	135 Move V0, [X9+2916]
	136 Move X21, 0x2267000
	137 Move X8, -19124224
	138 Move X21, [X21+1160]
	139 Move [X31+4], S0
	140 Move X22, 0x2267000
	141 Move V14, [X8+3272]
	142 Move X22, [X22+1152]
	143 Move X27, 0x253D000
	144 Move W28, 1
	145 Move X29, 0x253D000
	146 Move X1, [X25]
	147 Add X0, X31, 32
	148 Call Enumerator<UInt32, Object>.MoveNext, X0
	149 Move TEMP, X0
	150 And TEMP, TEMP, 1
	151 Compare TEMP, 1
	152 JumpIfNotEqual {282}
	153 Move X23, [X31+48]
	154 Compare X23, 0
	155 JumpIfEqual {308}
	156 Move X0, X23
	157 Move X1, X31
	158 Call NetPlayer.get_isDie, X0
	159 Move TEMP, X0
	160 And TEMP, TEMP, 1
	161 Compare TEMP, 1
	162 JumpIfEqual {146}
	163 Move X0, X23
	164 Move X1, X31
	165 Call Component.get_transform, X0
	166 Compare X0, 0
	167 JumpIfEqual {309}
	168 Move X1, X31
	169 Call Transform.get_position, X0
	170 Move X0, [X20+208]
	171 Compare X0, 0
	172 JumpIfEqual {310}
	173 Move V9, V0
	174 Move V10, V1
	175 Move V11, V2
	176 Move X1, X31
	177 Call Transform.get_position, X0
	178 Subtract S12, S9, S0
	179 Subtract S8, S10, S1
	180 Subtract S15, S11, S2
	181 Multiply S0, S12, S12
	182 Multiply S1, S8, S8
	183 Add S0, S0, S1
	184 Multiply S1, S15, S15
	185 Add S9, S1, S0
	186 NotImplemented "Instruction FCMP not yet implemented."
	187 NotImplemented "Instruction FCMP not yet implemented."
	188 Compare X19, 0
	189 JumpIfEqual {313}
	190 Move W10, [X19+28]
	191 Move X8, [X19+16]
	192 Move X9, [X26]
	193 Add W10, W10, 1
	194 Move [X19+28], W10
	195 Compare X8, 0
	196 JumpIfEqual {314}
	197 NotImplemented "Instruction LDRSW not yet implemented."
	198 Move W11, [X8+24]
	199 NotImplemented "Instruction CMP not yet implemented."
	200 Add W9, W10, 1
	201 Add X8, X8, X10
	202 Move [X19+24], W9
	203 Move [X8+32], X23
	204 Move W8, [X27+1089]
	205 Compare W8, 0
	206 JumpIfNotEqual {210}
	207 Move X0, X21
	208 Call 0x1B6F7F0
	209 Move [X27+1089], W28
	210 Move X0, [X21]
	211 Move W8, [X0+224]
	212 Compare W8, 0
	213 JumpIfNotEqual {215}
	214 Call 0x1B6F8F8
	215 Move V0, [X31+4]
	216 NotImplemented "Instruction FSQRT not yet implemented."
	217 NotImplemented "Instruction FCMP not yet implemented."
	218 NotImplemented "Instruction FDIV not yet implemented."
	219 NotImplemented "Instruction FDIV not yet implemented."
	220 NotImplemented "Instruction FDIV not yet implemented."
	221 Move W8, [X29+1087]
	222 Compare W8, 0
	223 JumpIfNotEqual {227}
	224 Move X0, X22
	225 Call 0x1B6F7F0
	226 Move [X29+1087], W28
	227 Move X8, [X22]
	228 Move X8, [X8+184]
	229 Move S10, [X8]
	230 Move S11, [X8+4]
	231 Move V12, [X8+8]
	232 Move X0, [X20+208]
	233 Compare X0, 0
	234 JumpIfEqual {312}
	235 Move X1, X31
	236 Call Transform.get_forward, X0
	237 Multiply S0, S10, S0
	238 Multiply S1, S11, S1
	239 Add S0, S0, S1
	240 Multiply S1, S12, S2
	241 Add S0, S1, S0
	242 Move V1, [X31]
	243 NotImplemented "Instruction FCMP not yet implemented."
	244 Move X0, [X20+208]
	245 Compare X0, 0
	246 JumpIfEqual {315}
	247 Move X1, X31
	248 Call Transform.get_position, X0
	249 Move V3, V10
	250 Move V4, V11
	251 Move V5, V12
	252 Move V6, V9
	253 Call MobDetectionUtil.IsTargetInLineOfSight, X0, X1, V0
	254 Move TEMP, X0
	255 And TEMP, TEMP, 1
	256 Compare TEMP, 1
	257 JumpIfNotEqual {146}
	258 Compare X19, 0
	259 JumpIfEqual {316}
	260 Move W10, [X19+28]
	261 Move X8, [X19+16]
	262 Move X9, [X26]
	263 Add W10, W10, 1
	264 Move [X19+28], W10
	265 Compare X8, 0
	266 JumpIfEqual {317}
	267 NotImplemented "Instruction LDRSW not yet implemented."
	268 Move W11, [X8+24]
	269 NotImplemented "Instruction CMP not yet implemented."
	270 Move X8, [X9+32]
	271 Move X8, [X8+192]
	272 Move X2, [X8+112]
	273 Move X0, X19
	274 Move X1, X23
	275 Call List`1<Object>.AddWithResize, X0, X1
	276 Move X8, [X9+32]
	277 Move X8, [X8+192]
	278 Move X2, [X8+112]
	279 Move X0, X19
	280 Move X1, X23
	281 Call List`1<Object>.AddWithResize, X0, X1
	282 Move X1, [X24]
	283 Add X0, X31, 32
	284 Call Enumerator<UInt32, Object>.Dispose, X0
	285 Move X0, X19
	286 Move X20, [X31+208]
	287 Move X19, [X31+216]
	288 Move X22, [X31+192]
	289 Move X21, [X31+200]
	290 Move X24, [X31+176]
	291 Move X23, [X31+184]
	292 Move X26, [X31+160]
	293 Move X25, [X31+168]
	294 Move X28, [X31+144]
	295 Move X27, [X31+152]
	296 Move X29, [X31+128]
	297 Move X30, [X31+136]
	298 Move D9, [X31+112]
	299 Move D8, [X31+120]
	300 Move D11, [X31+96]
	301 Move D10, [X31+104]
	302 Move D13, [X31+80]
	303 Move D12, [X31+88]
	304 Move D15, [X31+64]
	305 Move D14, [X31+72]
	306 Add X31, X31, 224
	307 Return X0
	308 Call 0x1B6FA1C
	309 Call 0x1B6FA1C
	310 Call 0x1B6FA1C
	311 Call 0x1B6FA1C
	312 Call 0x1B6FA1C
	313 Call 0x1B6FA1C
	314 Call 0x1B6FA1C
	315 Call 0x1B6FA1C
	316 Call 0x1B6FA1C
	317 Call 0x1B6FA1C
	318 Move X20, X0
	319 NotImplemented "Instruction CMP not yet implemented."
	320 Move X0, X20
	321 Call 0x3D1A840
	322 Move X21, [X0]
	323 Call 0x3D1A850
	324 Move X1, [X24]
	325 Add X0, X31, 32
	326 Call Enumerator<UInt32, Object>.Dispose, X0
	327 Compare X21, 0
	328 JumpIfEqual {285}
	329 Move X0, X21
	330 Call 0x1B6FA14
	331 Move X21, X31
	332 Move X20, X0
	333 Move X1, [X24]
	334 Add X0, X31, 32
	335 Call Enumerator<UInt32, Object>.Dispose, X0
	336 Compare X21, 0
	337 JumpIfNotEqual {340}
	338 Move X0, X20
	339 Call 0x1C8518C
	340 Move X0, X21
	341 Call 0x1B6FA14
	342 Call 0x18F56A8

Method: System.Boolean IsTargetInLineOfSight(UnityEngine.Vector3 viewPosition, UnityEngine.Vector3 targetPosition)

Disassembly:
	0x01CE9768 ADRP X8, 0x2265000
	0x01CE976C LDR X8, [X8 + 0x808]
	0x01CE9770 LDR X1, [X8]
	0x01CE9774 BL 0x2961038
	0x01CE9778 CBZ X0, 0x1CE9AA4
	0x01CE977C ADRP X8, 0x2267000
	0x01CE9780 LDR X8, [X8 + 0x2B8]
	0x01CE9784 ADRP X25, 0x2267000
	0x01CE9788 LDR X25, [X25 + 0x290]
	0x01CE978C FMOV S0, 0.5
	0x01CE9790 LDR X1, [X8]
	0x01CE9794 FMUL S0, S8, S0
	0x01CE9798 ADD X8, X31, 0x38
	0x01CE979C STR S0, [X31 + 0x1C]
	0x01CE97A0 BL 0x25D79BC
	0x01CE97A4 ADRP X9, 0xFFFFFFFFFEDC0000
	0x01CE97A8 LDUR V0, [X31 + 0x38]
	0x01CE97AC LDR V1, [X9 + 0xB64]
	0x01CE97B0 ADRP X20, 0x2264000
	0x01CE97B4 ADRP X10, 0xFFFFFFFFFEDC0000
	0x01CE97B8 ADRP X9, 0xFFFFFFFFFEDC0000
	0x01CE97BC LDR X8, [X31 + 0x48]
	0x01CE97C0 LDR X20, [X20 + 0x488]
	0x01CE97C4 STR S1, [X31 + 0x20]
	0x01CE97C8 LDR V1, [X10 + 0xE1C]
	0x01CE97CC STR V0, [X31 + 0x8]
	0x01CE97D0 LDR V0, [X9 + 0xAF4]
	0x01CE97D4 STR X8, [X31 + 0x90]
	0x01CE97D8 STR S1, [X31 + 0x18]
	0x01CE97DC ADRP X21, 0x2264000
	0x01CE97E0 STR S0, [X31 + 0x14]
	0x01CE97E4 LDR X21, [X21 + 0x480]
	0x01CE97E8 MOVZ W29, 0x43C80000
	0x01CE97EC ADRP X24, 0x253A000
	0x01CE97F0 MOVZ W28, 0x1
	0x01CE97F4 MOVZ W27, 0x425C0000
	0x01CE97F8 ADRP X26, 0x253A000
	0x01CE97FC LDR X1, [X25]
	0x01CE9800 ADD X0, X31, 0x80
	0x01CE9804 BL 0x2A6B89C
	0x01CE9808 TBZ X0, 0x0, 0x1CE9A40
	0x01CE980C LDR X22, [X31 + 0x90]
	0x01CE9810 CBZ X22, 0x1CE9A98
	0x01CE9814 MOV X0, X22

ISIL:
	001 Move [X31-64], D13
	002 Move [X31-56], D12
	003 Move [X31+16], D11
	004 Move [X31+24], D10
	005 Move [X31+32], D9
	006 Move [X31+40], D8
	007 Move [X31+48], X30
	008 Move [X31+56], X19
	009 Move X19, 0x253B000
	010 Move W8, [X19+1088]
	011 Move V11, V5
	012 Move V12, V4
	013 Move V13, V3
	014 Move V8, V2
	015 Move V9, V1
	016 Move V10, V0
	017 Compare W8, 0
	018 JumpIfNotEqual {24}
	019 Move X0, 0x2265000
	020 Move X0, [X0+1160]
	021 Call 0x1B6F7F0
	022 Move W8, 1
	023 Move [X19+1088], W8
	024 Move X8, 0x2265000
	025 Move X8, [X8+1160]
	026 Subtract S13, S13, S10
	027 Subtract S12, S12, S9
	028 Subtract S11, S11, S8
	029 Move X0, [X8]
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1B6F8F8
	034 Multiply S0, S13, S13
	035 Multiply S1, S12, S12
	036 Add S0, S0, S1
	037 Multiply S1, S11, S11
	038 Add S0, S1, S0
	039 NotImplemented "Instruction FSQRT not yet implemented."
	040 NotImplemented "Instruction FDIV not yet implemented."
	041 Move V0, V10
	042 Move V1, V9
	043 Move V2, V8
	044 Move X30, [X31+48]
	045 Move X19, [X31+56]
	046 Move D9, [X31+32]
	047 Move D8, [X31+40]
	048 Move D11, [X31+16]
	049 Move D10, [X31+24]
	050 NotImplemented "Instruction FDIV not yet implemented."
	051 NotImplemented "Instruction FDIV not yet implemented."
	052 Move D13, [X31+64]
	053 Move D12, [X31+72]
	054 Call MobDetectionUtil.IsTargetInLineOfSight, X0, X1, V0
	055 Return X0

Method: System.Boolean IsTargetInLineOfSight(UnityEngine.Vector3 viewPosition, UnityEngine.Vector3 viewToTargetDirection, System.Single viewToTargetDistance)

Disassembly:
	0x01CE9658 BL 0x1B6E7F0
	0x01CE965C ADRP X0, 0x2267000
	0x01CE9660 LDR X0, [X0 + 0x2A8]
	0x01CE9664 BL 0x1B6E7F0
	0x01CE9668 ADRP X0, 0x2266000
	0x01CE966C LDR X0, [X0 + 0xE30]
	0x01CE9670 BL 0x1B6E7F0
	0x01CE9674 ADRP X0, 0x2267000
	0x01CE9678 LDR X0, [X0 + 0x2B0]
	0x01CE967C BL 0x1B6E7F0
	0x01CE9680 ADRP X0, 0x2265000
	0x01CE9684 LDR X0, [X0 + 0x2A8]
	0x01CE9688 BL 0x1B6E7F0
	0x01CE968C ADRP X0, 0x2264000
	0x01CE9690 LDR X0, [X0 + 0x4C0]
	0x01CE9694 BL 0x1B6E7F0
	0x01CE9698 ADRP X0, 0x2267000
	0x01CE969C LDR X0, [X0 + 0x2B8]
	0x01CE96A0 BL 0x1B6E7F0
	0x01CE96A4 MOVZ W8, 0x1
	0x01CE96A8 STRB W8, [X21 + 0x67D]
	0x01CE96AC MOVI V0.2D, 0x0
	0x01CE96B0 STP X31, X31, [X31 + 0x80]
	0x01CE96B4 STR X31, [X31 + 0x90]
	0x01CE96B8 STUR V0, [X31 + 0x6C]
	0x01CE96BC STP V0, V0, [X31 + 0x50]
	0x01CE96C0 CBZ X20, 0x1CE9AA4
	0x01CE96C4 LDR X0, [X20 + 0xD0]
	0x01CE96C8 CBZ X0, 0x1CE9AA4
	0x01CE96CC MOV X1, X31
	0x01CE96D0 BL 0x3AA7658
	0x01CE96D4 LDR X8, [X20 + 0xB8]
	0x01CE96D8 STP S1, S0, [X31 + 0x28]
	0x01CE96DC STR S2, [X31 + 0x24]
	0x01CE96E0 CBZ X8, 0x1CE9AA4
	0x01CE96E4 ADRP X9, 0x2267000
	0x01CE96E8 LDR X9, [X9 + 0x2B0]
	0x01CE96EC ADRP X20, 0x2267000
	0x01CE96F0 ADRP X21, 0x2265000
	0x01CE96F4 LDR V8, [X8 + 0x48]
	0x01CE96F8 LDR X0, [X9]
	0x01CE96FC LDR X20, [X20 + 0x2A8]
	0x01CE9700 LDR X21, [X21 + 0x2A8]
	0x01CE9704 BL 0x1B6EA0C
	0x01CE9708 LDR X1, [X20]
	0x01CE970C MOV X20, X0
	0x01CE9710 BL 0x2E45D4C
	0x01CE9714 STR X20, [X19]
	0x01CE9718 LDR X0, [X21]
	0x01CE971C LDR W8, [X0 + 0xE0]
	0x01CE9720 CBNZ W8, 0x1CE9728
	0x01CE9724 BL 0x1B6E8F8
	0x01CE9728 ADRP X20, 0x253A000
	0x01CE972C LDRB W8, [X20 + 0x50A]
	0x01CE9730 CBNZ W8, 0x1CE9748
	0x01CE9734 ADRP X0, 0x2265000
	0x01CE9738 LDR X0, [X0 + 0x2A8]
	0x01CE973C BL 0x1B6E7F0
	0x01CE9740 MOVZ W8, 0x1
	0x01CE9744 STRB W8, [X20 + 0x50A]
	0x01CE9748 LDR X0, [X21]
	0x01CE974C LDR W8, [X0 + 0xE0]
	0x01CE9750 CBNZ W8, 0x1CE975C
	0x01CE9754 BL 0x1B6E8F8
	0x01CE9758 LDR X0, [X21]
	0x01CE975C LDR X8, [X0 + 0xB8]
	0x01CE9760 LDR X0, [X8]
	0x01CE9764 CBZ X0, 0x1CE9AA4

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+48], D14
	003 Move [X31+56], D13
	004 Move [X31+64], D12
	005 Move [X31+72], D11
	006 Move [X31+80], D10
	007 Move [X31+88], D9
	008 Move [X31+96], D8
	009 Move [X31+104], X30
	010 Move [X31+112], X20
	011 Move [X31+120], X19
	012 Move X20, 0x253B000
	013 Move X19, 0x2266000
	014 Move W8, [X20+1655]
	015 Move X19, [X19+984]
	016 Move V8, V6
	017 Move V9, V5
	018 Move V10, V4
	019 Move V11, V3
	020 Move V12, V2
	021 Move V13, V1
	022 Move V14, V0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {35}
	027 Move X0, 0x2266000
	028 Move X0, [X0+984]
	029 Call 0x1B6F7F0
	030 Move X0, 0x2265000
	031 Move X0, [X0+1216]
	032 Call 0x1B6F7F0
	033 Move W8, 1
	034 Move [X20+1655], W8
	035 Move X0, [X19]
	036 NotImplemented "Instruction MOVI not yet implemented."
	037 Move [X31+28], V0
	038 Move [X31], V0
	039 Move [X31+8], V0
	040 Move X20, 0x2265000
	041 Move W8, [X0+224]
	042 Move X20, [X20+1216]
	043 Compare W8, 0
	044 JumpIfNotEqual {47}
	045 Call 0x1B6F8F8
	046 Move X0, [X19]
	047 Move X8, [X0+184]
	048 Move X1, X31
	049 Move W0, [X8]
	050 Call LayerMask.op_Implicit, X0
	051 Move X8, [X20]
	052 Move W19, W0
	053 Move W9, [X8+224]
	054 Compare W9, 0
	055 JumpIfNotEqual {58}
	056 Move X0, X8
	057 Call 0x1B6F8F8
	058 Add X0, X31, 0
	059 Move V0, V14
	060 Move V1, V13
	061 Move V2, V12
	062 Move V3, V11
	063 Move V4, V10
	064 Move V5, V9
	065 Move V6, V8
	066 Move W1, W19
	067 Move X2, X31
	068 Call Physics.Raycast, X0, X1, X2, V0, X3
	069 Move X20, [X31+112]
	070 Move X19, [X31+120]
	071 Move X30, [X31+104]
	072 Move D9, [X31+88]
	073 Move D8, [X31+96]
	074 Move D11, [X31+72]
	075 Move D10, [X31+80]
	076 Move D13, [X31+56]
	077 Move D12, [X31+64]
	078 Move V14, [X31+48]
	079 NotImplemented "Instruction ORN not yet implemented."
	080 And W0, W8, 1
	081 Add X31, X31, 128
	082 Return X0

Method: System.Boolean TryGetPlayersBySound(AnimalCompany.MobController mob, out System.Collections.Generic.List`1<AnimalCompany.NetPlayer> players)

Disassembly:
	0x01CE9818 MOV X1, X31
	0x01CE981C BL 0x1CB47E0
	0x01CE9820 TBNZ X0, 0x0, 0x1CE97FC
	0x01CE9824 LDR X0, [X22 + 0x88]
	0x01CE9828 CBZ X0, 0x1CE9A9C
	0x01CE982C MOV X1, X31
	0x01CE9830 BL 0x3AA7658
	0x01CE9834 LDR X0, [X22 + 0x88]
	0x01CE9838 CBZ X0, 0x1CE9AA0
	0x01CE983C MOV V9.16B, V0.16B
	0x01CE9840 MOV V11.16B, V1.16B
	0x01CE9844 MOV V13.16B, V2.16B
	0x01CE9848 MOV X1, X31
	0x01CE984C BL 0x3AA7AD0
	0x01CE9850 MOV V15.16B, V0.16B
	0x01CE9854 LDR V0, [X31 + 0x2C]
	0x01CE9858 STP S9, S11, [X31 + 0x30]
	0x01CE985C MOV V8.16B, V1.16B
	0x01CE9860 FSUB S9, S0, S9
	0x01CE9864 LDR V0, [X31 + 0x28]
	0x01CE9868 FSUB S14, S0, S11
	0x01CE986C LDR V0, [X31 + 0x24]
	0x01CE9870 FMUL S1, S14, S14
	0x01CE9874 FSUB S11, S0, S13
	0x01CE9878 FMUL S0, S9, S9
	0x01CE987C FADD S0, S0, S1
	0x01CE9880 FMUL S1, S11, S11
	0x01CE9884 FADD S12, S1, S0
	0x01CE9888 FMOV S0, W29
	0x01CE988C FCMP S12, S0
	0x01CE9890 B.PL 0x1CE97FC
	0x01CE9894 LDRB W8, [X24 + 0x441]
	0x01CE9898 MOV V10.16B, V2.16B
	0x01CE989C CBNZ W8, 0x1CE98AC
	0x01CE98A0 MOV X0, X20
	0x01CE98A4 BL 0x1B6E7F0
	0x01CE98A8 STRB W28, [X24 + 0x441]
	0x01CE98AC LDR X0, [X20]
	0x01CE98B0 LDR W8, [X0 + 0xE0]
	0x01CE98B4 CBNZ W8, 0x1CE98BC
	0x01CE98B8 BL 0x1B6E8F8
	0x01CE98BC LDR V0, [X31 + 0x20]
	0x01CE98C0 FSQRT S12, S12
	0x01CE98C4 FCMP S12, S0
	0x01CE98C8 B.LE 0x1CE98E0
	0x01CE98CC FDIV S0, S9, S12
	0x01CE98D0 FDIV S14, S14, S12
	0x01CE98D4 FDIV S9, S11, S12
	0x01CE98D8 MOV V11.16B, V0.16B
	0x01CE98DC B 0x1CE9904
	0x01CE98E0 LDRB W8, [X26 + 0x43F]
	0x01CE98E4 CBNZ W8, 0x1CE98F4
	0x01CE98E8 MOV X0, X21
	0x01CE98EC BL 0x1B6E7F0
	0x01CE98F0 STRB W28, [X26 + 0x43F]
	0x01CE98F4 LDR X8, [X21]
	0x01CE98F8 LDR X8, [X8 + 0xB8]
	0x01CE98FC LDP S11, S14, [X8]
	0x01CE9900 LDR V9, [X8 + 0x8]
	0x01CE9904 FMUL S0, S15, S11
	0x01CE9908 FMUL S1, S8, S14
	0x01CE990C FADD S0, S0, S1
	0x01CE9910 FMUL S1, S10, S9
	0x01CE9914 FADD S8, S1, S0
	0x01CE9918 FCMP S8, 0x0
	0x01CE991C B.MI 0x1CE97FC
	0x01CE9920 LDR V0, [X31 + 0x1C]
	0x01CE9924 FDIV S0, S0, S12
	0x01CE9928 BL 0x3D19910
	0x01CE992C LDR V1, [X31 + 0x18]
	0x01CE9930 FMUL S0, S0, S1
	0x01CE9934 FMOV S1, W27
	0x01CE9938 FADD S0, S0, S1
	0x01CE993C LDR V1, [X31 + 0x14]
	0x01CE9940 FMUL S0, S0, S1
	0x01CE9944 BL 0x3D19900
	0x01CE9948 FCMP S8, S0
	0x01CE994C B.LE 0x1CE97FC
	0x01CE9950 ADRP X8, 0x2265000
	0x01CE9954 LDR X8, [X8 + 0x3D8]
	0x01CE9958 LDR X0, [X8]
	0x01CE995C LDR W8, [X0 + 0xE0]
	0x01CE9960 CBZ W8, 0x1CE996C
	0x01CE9964 LDR V8, [X31 + 0x34]
	0x01CE9968 B 0x1CE9980
	0x01CE996C BL 0x1B6E8F8
	0x01CE9970 LDR V8, [X31 + 0x34]
	0x01CE9974 ADRP X8, 0x2265000
	0x01CE9978 LDR X8, [X8 + 0x3D8]
	0x01CE997C LDR X0, [X8]
	0x01CE9980 LDR X8, [X0 + 0xB8]
	0x01CE9984 LDR W0, [X8]
	0x01CE9988 MOV X1, X31
	0x01CE998C BL 0x3A9DE68
	0x01CE9990 ADRP X8, 0x2264000
	0x01CE9994 LDR X8, [X8 + 0x4C0]
	0x01CE9998 MOV W23, W0
	0x01CE999C LDR X0, [X8]
	0x01CE99A0 LDR W8, [X0 + 0xE0]
	0x01CE99A4 CBNZ W8, 0x1CE99AC
	0x01CE99A8 BL 0x1B6E8F8
	0x01CE99AC LDR V0, [X31 + 0x30]
	0x01CE99B0 ADD X0, X31, 0x50
	0x01CE99B4 MOV V1.16B, V8.16B
	0x01CE99B8 MOV V2.16B, V13.16B
	0x01CE99BC MOV V3.16B, V11.16B
	0x01CE99C0 MOV V4.16B, V14.16B
	0x01CE99C4 MOV V5.16B, V9.16B
	0x01CE99C8 MOV V6.16B, V12.16B
	0x01CE99CC MOV W1, W23
	0x01CE99D0 MOV X2, X31
	0x01CE99D4 BL 0x3AF3258
	0x01CE99D8 TBNZ X0, 0x0, 0x1CE97FC
	0x01CE99DC LDR X0, [X19]
	0x01CE99E0 CBZ X0, 0x1CE9AA8
	0x01CE99E4 ADRP X9, 0x2267000
	0x01CE99E8 LDR W10, [X0 + 0x1C]
	0x01CE99EC LDR X8, [X0 + 0x10]
	0x01CE99F0 LDR X9, [X9 + 0x2A0]
	0x01CE99F4 ADD W10, W10, 0x1
	0x01CE99F8 LDR X9, [X9]
	0x01CE99FC STR W10, [X0 + 0x1C]
	0x01CE9A00 CBZ X8, 0x1CE9AAC
	0x01CE9A04 LDRSW X10, [X0 + 0x18]
	0x01CE9A08 LDR W11, [X8 + 0x18]
	0x01CE9A0C CMP W10, W11
	0x01CE9A10 B.CS 0x1CE9A28
	0x01CE9A14 ADD W9, W10, 0x1
	0x01CE9A18 ADD X8, X8, X10, 0x3, LSL
	0x01CE9A1C STR W9, [X0 + 0x18]
	0x01CE9A20 STR X22, [X8 + 0x20]
	0x01CE9A24 B 0x1CE97FC
	0x01CE9A28 LDR X8, [X9 + 0x20]
	0x01CE9A2C LDR X8, [X8 + 0xC0]
	0x01CE9A30 LDR X2, [X8 + 0x70]
	0x01CE9A34 MOV X1, X22
	0x01CE9A38 BL 0x2E46518
	0x01CE9A3C B 0x1CE97FC
	0x01CE9A40 ADRP X8, 0x2267000
	0x01CE9A44 LDR X8, [X8 + 0x288]
	0x01CE9A48 ADD X0, X31, 0x80
	0x01CE9A4C LDR X1, [X8]
	0x01CE9A50 BL 0x2A6B898
	0x01CE9A54 LDR X8, [X19]
	0x01CE9A58 CBZ X8, 0x1CE9AA4
	0x01CE9A5C LDR W8, [X8 + 0x18]
	0x01CE9A60 LDP X20, X19, [X31 + 0x130]
	0x01CE9A64 LDP X22, X21, [X31 + 0x120]
	0x01CE9A68 LDP X24, X23, [X31 + 0x110]
	0x01CE9A6C LDP X26, X25, [X31 + 0x100]
	0x01CE9A70 LDP X28, X27, [X31 + 0xF0]
	0x01CE9A74 LDP X29, X30, [X31 + 0xE0]
	0x01CE9A78 LDP D9, D8, [X31 + 0xD0]
	0x01CE9A7C LDP D11, D10, [X31 + 0xC0]
	0x01CE9A80 LDP D13, D12, [X31 + 0xB0]
	0x01CE9A84 LDP D15, D14, [X31 + 0xA0]
	0x01CE9A88 CMP W8, 0x0
	0x01CE9A8C CSET W0, GT
	0x01CE9A90 ADD X31, X31, 0x140
	0x01CE9A94 RET
	0x01CE9A98 BL 0x1B6EA1C
	0x01CE9A9C BL 0x1B6EA1C
	0x01CE9AA0 BL 0x1B6EA1C
	0x01CE9AA4 BL 0x1B6EA1C
	0x01CE9AA8 BL 0x1B6EA1C
	0x01CE9AAC BL 0x1B6EA1C
	0x01CE9AB0 B 0x1CE9AE0
	0x01CE9AB4 B 0x1CE9AE0
	0x01CE9AB8 B 0x1CE9AE0
	0x01CE9ABC B 0x1CE9AE0
	0x01CE9AC0 B 0x1CE9AE0
	0x01CE9AC4 B 0x1CE9AE0
	0x01CE9AC8 B 0x1CE9AE0
	0x01CE9ACC B 0x1CE9AE0
	0x01CE9AD0 B 0x1CE9AE0
	0x01CE9AD4 B 0x1CE9AE0
	0x01CE9AD8 B 0x1CE9AE0
	0x01CE9ADC B 0x1CE9AE0
	0x01CE9AE0 MOV X20, X0
	0x01CE9AE4 CMP W1, 0x1
	0x01CE9AE8 B.NE 0x1CE9B1C
	0x01CE9AEC MOV X0, X20
	0x01CE9AF0 BL 0x3D19840
	0x01CE9AF4 LDR X21, [X0]
	0x01CE9AF8 BL 0x3D19850
	0x01CE9AFC ADRP X8, 0x2267000
	0x01CE9B00 LDR X8, [X8 + 0x288]
	0x01CE9B04 ADD X0, X31, 0x80
	0x01CE9B08 LDR X1, [X8]
	0x01CE9B0C BL 0x2A6B898
	0x01CE9B10 CBZ X21, 0x1CE9A54
	0x01CE9B14 MOV X0, X21
	0x01CE9B18 BL 0x1B6EA14
	0x01CE9B1C MOV X21, X31
	0x01CE9B20 B 0x1CE9B28
	0x01CE9B24 MOV X20, X0
	0x01CE9B28 ADRP X8, 0x2267000
	0x01CE9B2C LDR X8, [X8 + 0x288]
	0x01CE9B30 LDR X1, [X8]
	0x01CE9B34 ADD X0, X31, 0x80
	0x01CE9B38 BL 0x2A6B898
	0x01CE9B3C CBNZ X21, 0x1CE9B48
	0x01CE9B40 MOV X0, X20
	0x01CE9B44 BL 0x1C8418C
	0x01CE9B48 MOV X0, X21
	0x01CE9B4C BL 0x1B6EA14
	0x01CE9B50 BL 0x18F46A8
	0x01CE9B54 LDRB W0, [X0 + 0x10]
	0x01CE9B58 RET
	0x01CE9B5C AND W8, W1, 0x1
	0x01CE9B60 STRB W8, [X0 + 0x10]
	0x01CE9B64 RET
	0x01CE9B68 LDR W0, [X0 + 0x14]
	0x01CE9B6C RET
	0x01CE9B70 STR W1, [X0 + 0x14]
	0x01CE9B74 RET
	0x01CE9B78 LDR V0, [X0 + 0x18]
	0x01CE9B7C RET
	0x01CE9B80 STR S0, [X0 + 0x18]
	0x01CE9B84 RET
	0x01CE9B88 LDR V0, [X0 + 0x1C]
	0x01CE9B8C RET
	0x01CE9B90 STR S0, [X0 + 0x1C]
	0x01CE9B94 RET
	0x01CE9B98 LDR V0, [X0 + 0x20]
	0x01CE9B9C RET
	0x01CE9BA0 STR S0, [X0 + 0x20]
	0x01CE9BA4 RET
	0x01CE9BA8 MOV X1, X31
	0x01CE9BAC B 0x32276F8
	0x01CE9BB0 STR D10, [X31 - 0x30]!
	0x01CE9BB4 STP D9, D8, [X31 + 0x8]
	0x01CE9BB8 STR X30, [X31 + 0x18]
	0x01CE9BBC STP X20, X19, [X31 + 0x20]
	0x01CE9BC0 ADRP X20, 0x253A000
	0x01CE9BC4 LDRB W8, [X20 + 0x67E]
	0x01CE9BC8 MOV X19, X0
	0x01CE9BCC TBNZ X8, 0x0, 0x1CE9BFC
	0x01CE9BD0 ADRP X0, 0x2264000
	0x01CE9BD4 LDR X0, [X0 + 0x8E0]
	0x01CE9BD8 BL 0x1B6E7F0
	0x01CE9BDC ADRP X0, 0x2264000
	0x01CE9BE0 LDR X0, [X0 + 0x478]
	0x01CE9BE4 BL 0x1B6E7F0
	0x01CE9BE8 ADRP X0, 0x2267000
	0x01CE9BEC LDR X0, [X0 + 0x328]
	0x01CE9BF0 BL 0x1B6E7F0
	0x01CE9BF4 MOVZ W8, 0x1
	0x01CE9BF8 STRB W8, [X20 + 0x67E]
	0x01CE9BFC LDR X0, [X19 + 0x20]
	0x01CE9C00 CBZ X0, 0x1CE9D44

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+64], D13
	003 Move [X31+72], D12
	004 Move [X31+80], D11
	005 Move [X31+88], D10
	006 Move [X31+96], D9
	007 Move [X31+104], D8
	008 Move [X31+112], X30
	009 Move [X31+120], X27
	010 Move [X31+128], X26
	011 Move [X31+136], X25
	012 Move [X31+144], X24
	013 Move [X31+152], X23
	014 Move [X31+160], X22
	015 Move [X31+168], X21
	016 Move [X31+176], X20
	017 Move [X31+184], X19
	018 Move X24, 0x253B000
	019 Move X23, 0x2268000
	020 Move X21, 0x2268000
	021 Move X22, 0x2266000
	022 Move W8, [X24+1656]
	023 Move X23, [X23+688]
	024 Move X21, [X21+680]
	025 Move X22, [X22+680]
	026 Move X19, X1
	027 Move X20, X0
	028 Move TEMP, X8
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {64}
	032 Move X0, 0x2266000
	033 Move X0, [X0+2056]
	034 Call 0x1B6F7F0
	035 Move X0, 0x2268000
	036 Move X0, [X0+648]
	037 Call 0x1B6F7F0
	038 Move X0, 0x2268000
	039 Move X0, [X0+656]
	040 Call 0x1B6F7F0
	041 Move X0, 0x2268000
	042 Move X0, [X0+664]
	043 Call 0x1B6F7F0
	044 Move X0, 0x2268000
	045 Move X0, [X0+672]
	046 Call 0x1B6F7F0
	047 Move X0, 0x2268000
	048 Move X0, [X0+680]
	049 Call 0x1B6F7F0
	050 Move X0, 0x2267000
	051 Move X0, [X0+3632]
	052 Call 0x1B6F7F0
	053 Move X0, 0x2268000
	054 Move X0, [X0+688]
	055 Call 0x1B6F7F0
	056 Move X0, 0x2266000
	057 Move X0, [X0+680]
	058 Call 0x1B6F7F0
	059 Move X0, 0x2268000
	060 Move X0, [X0+696]
	061 Call 0x1B6F7F0
	062 Move W8, 1
	063 Move [X24+1656], W8
	064 Move X0, [X23]
	065 Move [X31+32], X31
	066 Move [X31+40], X31
	067 Move [X31+48], X31
	068 Call 0x1B6FA0C
	069 Move X1, [X21]
	070 Move X21, X0
	071 Call List`1<Object>..ctor, X0
	072 Move [X19], X21
	073 Move X0, [X22]
	074 Move W8, [X0+224]
	075 Compare W8, 0
	076 JumpIfNotEqual {78}
	077 Call 0x1B6F8F8
	078 Move X21, 0x253B000
	079 Move W8, [X21+1290]
	080 Compare W8, 0
	081 JumpIfNotEqual {87}
	082 Move X0, 0x2266000
	083 Move X0, [X0+680]
	084 Call 0x1B6F7F0
	085 Move W8, 1
	086 Move [X21+1290], W8
	087 Move X0, [X22]
	088 Move W8, [X0+224]
	089 Compare W8, 0
	090 JumpIfNotEqual {93}
	091 Call 0x1B6F8F8
	092 Move X0, [X22]
	093 Move X8, [X0+184]
	094 Move X0, [X8]
	095 Compare X0, 0
	096 JumpIfEqual {249}
	097 Move X8, 0x2266000
	098 Move X8, [X8+2056]
	099 Move X1, [X8]
	100 Call Dictionary`2<UInt32, Object>.get_Values, X0
	101 Compare X0, 0
	102 JumpIfEqual {249}
	103 Move X8, 0x2268000
	104 Move X8, [X8+696]
	105 Move X24, 0x2268000
	106 Move X25, 0x2268000
	107 Move X23, 0x2268000
	108 Move X1, [X8]
	109 Move X24, [X24+656]
	110 Move X25, [X25+672]
	111 Move X23, [X23+648]
	112 Add X8, X31, 8
	113 Call ValueCollection<UInt32, Object>.GetEnumerator, X0
	114 NotImplemented "Instruction LDUR not yet implemented."
	115 Move X8, [X31+24]
	116 Move X21, 0x2265000
	117 Move X21, [X21+1160]
	118 Move X26, 0x253B000
	119 Move [X31+2], V0
	120 Move [X31+48], X8
	121 Move W27, 1
	122 Move X1, [X24]
	123 Add X0, X31, 32
	124 Call Enumerator<UInt32, Object>.MoveNext, X0
	125 Move TEMP, X0
	126 And TEMP, TEMP, 1
	127 Compare TEMP, 1
	128 JumpIfNotEqual {214}
	129 Move X22, [X31+48]
	130 Compare X22, 0
	131 JumpIfEqual {241}
	132 Move X0, X22
	133 Move X1, X31
	134 Call NetPlayer.get_isDie, X0
	135 Move TEMP, X0
	136 And TEMP, TEMP, 1
	137 Compare TEMP, 1
	138 JumpIfEqual {122}
	139 Move X0, X22
	140 Move X1, X31
	141 Call Component.get_transform, X0
	142 Compare X0, 0
	143 JumpIfEqual {243}
	144 Move X1, X31
	145 Call Transform.get_position, X0
	146 Compare X20, 0
	147 JumpIfEqual {244}
	148 Move X0, [X20+216]
	149 Compare X0, 0
	150 JumpIfEqual {242}
	151 Move V8, V0
	152 Move V9, V1
	153 Move V10, V2
	154 Move X1, X31
	155 Call Transform.get_position, X0
	156 Move W8, [X26+1286]
	157 Move V11, V0
	158 Move V12, V1
	159 Move V13, V2
	160 Compare W8, 0
	161 JumpIfNotEqual {165}
	162 Move X0, X21
	163 Call 0x1B6F7F0
	164 Move [X26+1286], W27
	165 Move X0, [X21]
	166 Move W8, [X0+224]
	167 Compare W8, 0
	168 JumpIfNotEqual {170}
	169 Call 0x1B6F8F8
	170 Move X8, [X20+184]
	171 Compare X8, 0
	172 JumpIfEqual {245}
	173 Subtract S0, S8, S11
	174 Subtract S1, S9, S12
	175 Subtract S2, S10, S13
	176 Multiply S0, S0, S0
	177 Multiply S1, S1, S1
	178 Move V3, [X8+128]
	179 Multiply S2, S2, S2
	180 Add S0, S0, S1
	181 Add S0, S2, S0
	182 NotImplemented "Instruction FSQRT not yet implemented."
	183 NotImplemented "Instruction FCMP not yet implemented."
	184 Move X0, X22
	185 Move X1, X31
	186 Call NetPlayer.get_playerVolume, X0
	187 Move X8, [X20+184]
	188 Compare X8, 0
	189 JumpIfEqual {246}
	190 Move V1, [X8+132]
	191 NotImplemented "Instruction FCMP not yet implemented."
	192 Move X0, [X19]
	193 Compare X0, 0
	194 JumpIfEqual {248}
	195 Move W10, [X0+28]
	196 Move X8, [X0+16]
	197 Move X9, [X25]
	198 Add W10, W10, 1
	199 Move [X0+28], W10
	200 Compare X8, 0
	201 JumpIfEqual {247}
	202 NotImplemented "Instruction LDRSW not yet implemented."
	203 Move W11, [X8+24]
	204 NotImplemented "Instruction CMP not yet implemented."
	205 Add W9, W10, 1
	206 Add X8, X8, X10
	207 Move [X0+24], W9
	208 Move [X8+32], X22
	209 Move X8, [X9+32]
	210 Move X8, [X8+192]
	211 Move X2, [X8+112]
	212 Move X1, X22
	213 Call List`1<Object>.AddWithResize, X0, X1
	214 Move X1, [X23]
	215 Add X0, X31, 32
	216 Call Enumerator<UInt32, Object>.Dispose, X0
	217 Move X8, [X19]
	218 Compare X8, 0
	219 JumpIfEqual {249}
	220 Move W8, [X8+24]
	221 Move X20, [X31+176]
	222 Move X19, [X31+184]
	223 Move X22, [X31+160]
	224 Move X21, [X31+168]
	225 Move X24, [X31+144]
	226 Move X23, [X31+152]
	227 Move X26, [X31+128]
	228 Move X25, [X31+136]
	229 Move X30, [X31+112]
	230 Move X27, [X31+120]
	231 Move D9, [X31+96]
	232 Move D8, [X31+104]
	233 Move D11, [X31+80]
	234 Move D10, [X31+88]
	235 Move D13, [X31+64]
	236 Move D12, [X31+72]
	237 NotImplemented "Instruction CMP not yet implemented."
	238 NotImplemented "Instruction CSET not yet implemented."
	239 Add X31, X31, 192
	240 Return X0
	241 Call 0x1B6FA1C
	242 Call 0x1B6FA1C
	243 Call 0x1B6FA1C
	244 Call 0x1B6FA1C
	245 Call 0x1B6FA1C
	246 Call 0x1B6FA1C
	247 Call 0x1B6FA1C
	248 Call 0x1B6FA1C
	249 Call 0x1B6FA1C
	250 Move X20, X0
	251 NotImplemented "Instruction CMP not yet implemented."
	252 Move X0, X20
	253 Call 0x3D1A840
	254 Move X21, [X0]
	255 Call 0x3D1A850
	256 Move X1, [X23]
	257 Add X0, X31, 32
	258 Call Enumerator<UInt32, Object>.Dispose, X0
	259 Compare X21, 0
	260 JumpIfEqual {217}
	261 Move X0, X21
	262 Call 0x1B6FA14
	263 Move X21, X31
	264 Move X20, X0
	265 Move X1, [X23]
	266 Add X0, X31, 32
	267 Call Enumerator<UInt32, Object>.Dispose, X0
	268 Compare X21, 0
	269 JumpIfNotEqual {272}
	270 Move X0, X20
	271 Call 0x1C8518C
	272 Move X0, X21
	273 Call 0x1B6FA14
	274 Call 0x18F56A8

Method: System.Boolean TryGetPlayersInRange(AnimalCompany.MobController mob, UnityEngine.Vector3 center, System.Single range, out System.Collections.Generic.List`1<AnimalCompany.NetPlayer> players)

Disassembly:
	0x01CE9C04 LDR X1, [X19 + 0x28]
	0x01CE9C08 ADRP X20, 0x2264000
	0x01CE9C0C LDR X20, [X20 + 0x478]
	0x01CE9C10 MOV X2, X31
	0x01CE9C14 BL 0x3A5F744
	0x01CE9C18 LDR X0, [X20]
	0x01CE9C1C LDR X20, [X19 + 0x38]
	0x01CE9C20 LDR W8, [X0 + 0xE0]
	0x01CE9C24 CBNZ W8, 0x1CE9C2C
	0x01CE9C28 BL 0x1B6E8F8
	0x01CE9C2C MOV X0, X20
	0x01CE9C30 MOV X1, X31
	0x01CE9C34 MOV X2, X31
	0x01CE9C38 BL 0x3AA0AF0
	0x01CE9C3C TBZ X0, 0x0, 0x1CE9D30
	0x01CE9C40 ADRP X8, 0x2264000
	0x01CE9C44 LDR X8, [X8 + 0x8E0]
	0x01CE9C48 LDR X0, [X8]
	0x01CE9C4C BL 0x1B6EA0C
	0x01CE9C50 ADRP X8, 0x2267000
	0x01CE9C54 LDR X8, [X8 + 0x328]
	0x01CE9C58 MOV X2, X31
	0x01CE9C5C MOV X20, X0
	0x01CE9C60 LDR X1, [X8]
	0x01CE9C64 BL 0x3A9DAE4
	0x01CE9C68 CBZ X20, 0x1CE9D44
	0x01CE9C6C MOV X0, X20
	0x01CE9C70 MOV X1, X31
	0x01CE9C74 BL 0x3A9D8EC
	0x01CE9C78 MOV X20, X0
	0x01CE9C7C STR X0, [X19 + 0x38]
	0x01CE9C80 MOV X0, X19
	0x01CE9C84 MOV X1, X31

ISIL:
	001 Move [X31-64], D11
	002 Move [X31-56], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x253B000
	009 Move W8, [X20+1657]
	010 Move X19, X1
	011 Move V8, V3
	012 Move V9, V2
	013 Move V10, V1
	014 Move V11, V0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0x2267000
	020 Move X0, [X0+3632]
	021 Call 0x1B6F7F0
	022 Move W8, 1
	023 Move [X20+1657], W8
	024 Move V0, V11
	025 Move V1, V10
	026 Move V2, V9
	027 Move V3, V8
	028 Call MobDetectionUtil.GetPlayersInRange, X0, X1, V0
	029 Move [X19], X0
	030 Compare X0, 0
	031 JumpIfEqual {43}
	032 Move W8, [X0+24]
	033 Move X20, [X31+48]
	034 Move X19, [X31+56]
	035 Move X30, [X31+32]
	036 Move D9, [X31+16]
	037 Move D8, [X31+24]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 NotImplemented "Instruction CSET not yet implemented."
	040 Move D11, [X31+64]
	041 Move D10, [X31+72]
	042 Return X0
	043 Call 0x1B6FA1C

Method: System.Collections.Generic.List`1<AnimalCompany.NetPlayer> GetPlayersInRange(AnimalCompany.MobController mob, UnityEngine.Vector3 center, System.Single range)

Disassembly:
	0x01CE9C88 BL 0x3A9B084
	0x01CE9C8C CBZ X20, 0x1CE9D44
	0x01CE9C90 MOV X1, X0
	0x01CE9C94 MOV X0, X20
	0x01CE9C98 MOV X2, X31
	0x01CE9C9C BL 0x3AA7F3C
	0x01CE9CA0 LDR X0, [X19 + 0x30]
	0x01CE9CA4 CBZ X0, 0x1CE9D44
	0x01CE9CA8 LDR X19, [X19 + 0x38]
	0x01CE9CAC MOV X1, X31
	0x01CE9CB0 BL 0x3AA7658
	0x01CE9CB4 ADRP X20, 0x253A000
	0x01CE9CB8 LDRB W8, [X20 + 0x50F]
	0x01CE9CBC MOV V8.16B, V0.16B
	0x01CE9CC0 MOV V9.16B, V1.16B
	0x01CE9CC4 MOV V10.16B, V2.16B
	0x01CE9CC8 CBNZ W8, 0x1CE9CE0
	0x01CE9CCC ADRP X0, 0x2264000
	0x01CE9CD0 LDR X0, [X0 + 0x480]
	0x01CE9CD4 BL 0x1B6E7F0
	0x01CE9CD8 MOVZ W8, 0x1
	0x01CE9CDC STRB W8, [X20 + 0x50F]
	0x01CE9CE0 CBZ X19, 0x1CE9D44
	0x01CE9CE4 ADRP X8, 0x2264000
	0x01CE9CE8 LDR X8, [X8 + 0x480]
	0x01CE9CEC MOV X0, X19
	0x01CE9CF0 LDP X20, X19, [X31 + 0x20]
	0x01CE9CF4 LDR X30, [X31 + 0x18]
	0x01CE9CF8 LDR X8, [X8]
	0x01CE9CFC MOV X1, X31
	0x01CE9D00 LDR X8, [X8 + 0xB8]
	0x01CE9D04 LDP S1, S0, [X8 + 0x4C]
	0x01CE9D08 LDR V3, [X8 + 0x48]
	0x01CE9D0C FADD S0, S0, S0
	0x01CE9D10 FADD S2, S10, S0
	0x01CE9D14 FADD S0, S1, S1
	0x01CE9D18 FADD S1, S9, S0
	0x01CE9D1C FADD S0, S3, S3
	0x01CE9D20 FADD S0, S8, S0
	0x01CE9D24 LDP D9, D8, [X31 + 0x8]
	0x01CE9D28 LDR V10, [X31], #0x30
	0x01CE9D2C B 0x3AA76F8
	0x01CE9D30 LDP X20, X19, [X31 + 0x20]
	0x01CE9D34 LDR X30, [X31 + 0x18]
	0x01CE9D38 LDP D9, D8, [X31 + 0x8]
	0x01CE9D3C LDR V10, [X31], #0x30
	0x01CE9D40 RET
	0x01CE9D44 BL 0x1B6EA1C
	0x01CE9D48 STR X30, [X31 - 0x20]!
	0x01CE9D4C STP X20, X19, [X31 + 0x10]
	0x01CE9D50 MOV X19, X0
	0x01CE9D54 LDR X0, [X0 + 0x30]
	0x01CE9D58 MOVZ W8, 0x1
	0x01CE9D5C STRB W8, [X19 + 0x84]
	0x01CE9D60 STR X1, [X19 + 0x70]
	0x01CE9D64 CBZ X0, 0x1CE9DB4
	0x01CE9D68 MOV X20, X1
	0x01CE9D6C MOV X1, X31
	0x01CE9D70 BL 0x3AA5FBC
	0x01CE9D74 LDR X0, [X19 + 0x38]
	0x01CE9D78 STP S0, S1, [X19 + 0x50]
	0x01CE9D7C STP S2, S3, [X19 + 0x58]
	0x01CE9D80 CBZ X0, 0x1CE9DB4
	0x01CE9D84 MOV X1, X31
	0x01CE9D88 BL 0x3AA7658
	0x01CE9D8C STP S0, S1, [X19 + 0x60]
	0x01CE9D90 STR S2, [X19 + 0x68]
	0x01CE9D94 CBZ X20, 0x1CE9DB4
	0x01CE9D98 LDR X8, [X20 + 0xB8]
	0x01CE9D9C CBZ X8, 0x1CE9DB4
	0x01CE9DA0 LDR X8, [X8 + 0xA8]
	0x01CE9DA4 STR X8, [X19 + 0x78]
	0x01CE9DA8 LDP X20, X19, [X31 + 0x10]
	0x01CE9DAC LDR X30, [X31], #0x20
	0x01CE9DB0 RET
	0x01CE9DB4 BL 0x1B6EA1C
	0x01CE9DB8 SUB X31, X31, 0x70
	0x01CE9DBC STP D15, D14, [X31 + 0x10]
	0x01CE9DC0 STP D13, D12, [X31 + 0x20]
	0x01CE9DC4 STP D11, D10, [X31 + 0x30]
	0x01CE9DC8 STP D9, D8, [X31 + 0x40]
	0x01CE9DCC STR X30, [X31 + 0x50]
	0x01CE9DD0 STP X20, X19, [X31 + 0x60]
	0x01CE9DD4 LDRB W8, [X0 + 0x4C]
	0x01CE9DD8 CBZ W8, 0x1CE9E94
	0x01CE9DDC MOV X19, X0
	0x01CE9DE0 LDR X0, [X0 + 0x38]
	0x01CE9DE4 CBZ X0, 0x1CEA020
	0x01CE9DE8 MOV X1, X31
	0x01CE9DEC BL 0x3AA7658
	0x01CE9DF0 LDR X0, [X19 + 0x30]
	0x01CE9DF4 CBZ X0, 0x1CEA020
	0x01CE9DF8 MOV X1, X31
	0x01CE9DFC MOV V8.16B, V0.16B
	0x01CE9E00 MOV V9.16B, V1.16B
	0x01CE9E04 MOV V10.16B, V2.16B
	0x01CE9E08 BL 0x3AA7658
	0x01CE9E0C ADRP X20, 0x253A000
	0x01CE9E10 LDRB W8, [X20 + 0x441]
	0x01CE9E14 MOV V11.16B, V0.16B
	0x01CE9E18 MOV V12.16B, V1.16B
	0x01CE9E1C MOV V13.16B, V2.16B
	0x01CE9E20 CBNZ W8, 0x1CE9E38
	0x01CE9E24 ADRP X0, 0x2264000
	0x01CE9E28 LDR X0, [X0 + 0x488]
	0x01CE9E2C BL 0x1B6E7F0
	0x01CE9E30 MOVZ W8, 0x1
	0x01CE9E34 STRB W8, [X20 + 0x441]
	0x01CE9E38 ADRP X8, 0x2264000
	0x01CE9E3C LDR X8, [X8 + 0x488]
	0x01CE9E40 FSUB S11, S8, S11
	0x01CE9E44 FSUB S9, S9, S12
	0x01CE9E48 FSUB S8, S10, S13
	0x01CE9E4C LDR X0, [X8]
	0x01CE9E50 LDR W8, [X0 + 0xE0]
	0x01CE9E54 CBNZ W8, 0x1CE9E5C
	0x01CE9E58 BL 0x1B6E8F8
	0x01CE9E5C FMUL S0, S11, S11
	0x01CE9E60 FMUL S1, S9, S9
	0x01CE9E64 ADRP X8, 0xFFFFFFFFFEDC0000
	0x01CE9E68 FADD S0, S0, S1
	0x01CE9E6C LDR V1, [X8 + 0xB64]
	0x01CE9E70 FMUL S2, S8, S8
	0x01CE9E74 FADD S0, S2, S0
	0x01CE9E78 FSQRT S2, S0
	0x01CE9E7C FCMP S2, S1
	0x01CE9E80 B.LE 0x1CE9EB4
	0x01CE9E84 FDIV S0, S11, S2
	0x01CE9E88 FDIV S1, S9, S2

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], D11
	003 Move [X31+24], D10
	004 Move [X31+32], D9
	005 Move [X31+40], D8
	006 Move [X31+48], X30
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X22, 0x253B000
	013 Move X21, 0x2268000
	014 Move X19, 0x2268000
	015 Move X20, 0x2266000
	016 Move W8, [X22+1658]
	017 Move X21, [X21+688]
	018 Move X19, [X19+680]
	019 Move X20, [X20+984]
	020 Move V8, V3
	021 Move V9, V2
	022 Move V10, V1
	023 Move V11, V0
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {48}
	028 Move X0, 0x2268000
	029 Move X0, [X0+760]
	030 Call 0x1B6F7F0
	031 Move X0, 0x2266000
	032 Move X0, [X0+984]
	033 Call 0x1B6F7F0
	034 Move X0, 0x2268000
	035 Move X0, [X0+672]
	036 Call 0x1B6F7F0
	037 Move X0, 0x2268000
	038 Move X0, [X0+680]
	039 Call 0x1B6F7F0
	040 Move X0, 0x2268000
	041 Move X0, [X0+688]
	042 Call 0x1B6F7F0
	043 Move X0, 0x2265000
	044 Move X0, [X0+1216]
	045 Call 0x1B6F7F0
	046 Move W8, 1
	047 Move [X22+1658], W8
	048 Move X0, [X21]
	049 Move X21, 0x2265000
	050 Move X21, [X21+1216]
	051 Move [X31+8], X31
	052 Call 0x1B6FA0C
	053 Move X1, [X19]
	054 Move X19, X0
	055 Call List`1<Object>..ctor, X0
	056 Move X0, [X20]
	057 Move W8, [X0+224]
	058 Compare W8, 0
	059 JumpIfNotEqual {62}
	060 Call 0x1B6F8F8
	061 Move X0, [X20]
	062 Move X8, [X0+184]
	063 Move X1, X31
	064 Move W0, [X8+8]
	065 Call LayerMask.op_Implicit, X0
	066 Move X8, [X21]
	067 Move W20, W0
	068 Move W9, [X8+224]
	069 Compare W9, 0
	070 JumpIfNotEqual {73}
	071 Move X0, X8
	072 Call 0x1B6F8F8
	073 Move V0, V11
	074 Move V1, V10
	075 Move V2, V9
	076 Move V3, V8
	077 Move W0, W20
	078 Move X1, X31
	079 Call Physics.OverlapSphere, X0, V0, X1
	080 Compare X0, 0
	081 JumpIfEqual {149}
	082 Move W8, [X0+24]
	083 Move X20, X0
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Move X22, 0x2268000
	086 Move X23, 0x2268000
	087 Move X22, [X22+760]
	088 Move X23, [X23+672]
	089 Move W21, W31
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Add X8, X20, W21
	092 Move X0, [X8+32]
	093 Compare X0, 0
	094 JumpIfEqual {149}
	095 Move X2, [X22]
	096 Add X1, X31, 8
	097 Call 0x2091EE4, X0, X1
	098 Move TEMP, X0
	099 And TEMP, TEMP, 1
	100 Compare TEMP, 1
	101 JumpIfNotEqual {133}
	102 Move X0, [X31+8]
	103 Compare X0, 0
	104 JumpIfEqual {149}
	105 Move X1, X31
	106 Call NetPlayer.get_isDie, X0
	107 Move TEMP, X0
	108 And TEMP, TEMP, 1
	109 Compare TEMP, 1
	110 JumpIfEqual {133}
	111 Compare X19, 0
	112 JumpIfEqual {149}
	113 Move W10, [X19+28]
	114 Move X1, [X31+8]
	115 Move X8, [X19+16]
	116 Move X9, [X23]
	117 Add W10, W10, 1
	118 Move [X19+28], W10
	119 Compare X8, 0
	120 JumpIfEqual {149}
	121 NotImplemented "Instruction LDRSW not yet implemented."
	122 Move W11, [X8+24]
	123 NotImplemented "Instruction CMP not yet implemented."
	124 Add W9, W10, 1
	125 Add X8, X8, X10
	126 Move [X19+24], W9
	127 Move [X8+32], X1
	128 Move X8, [X9+32]
	129 Move X0, X19
	130 Move X8, [X8+192]
	131 Move X2, [X8+112]
	132 Call List`1<Object>.AddWithResize, X0, X1
	133 Move W8, [X20+24]
	134 Add W21, W21, 1
	135 NotImplemented "Instruction CMP not yet implemented."
	136 Move X0, X19
	137 Move X20, [X31+80]
	138 Move X19, [X31+88]
	139 Move X22, [X31+64]
	140 Move X21, [X31+72]
	141 Move X30, [X31+48]
	142 Move X23, [X31+56]
	143 Move D9, [X31+32]
	144 Move D8, [X31+40]
	145 Move D11, [X31+16]
	146 Move D10, [X31+24]
	147 Add X31, X31, 96
	148 Return X0
	149 Call 0x1B6FA1C
	150 Call 0x1B6FA24

Method: System.Boolean TryGetLightsBySight(UnityEngine.Vector3 viewPoint, UnityEngine.Vector3 viewDirection, System.Single viewRange, out System.Collections.Generic.List`1<AnimalCompany.Flashlight> flashlightsOutput)

Disassembly:
	0x01CE9E8C FDIV S2, S8, S2
	0x01CE9E90 B 0x1CE9EEC
	0x01CE9E94 LDP X20, X19, [X31 + 0x60]
	0x01CE9E98 LDR X30, [X31 + 0x50]
	0x01CE9E9C LDP D9, D8, [X31 + 0x40]
	0x01CE9EA0 LDP D11, D10, [X31 + 0x30]
	0x01CE9EA4 LDP D13, D12, [X31 + 0x20]
	0x01CE9EA8 LDP D15, D14, [X31 + 0x10]
	0x01CE9EAC ADD X31, X31, 0x70
	0x01CE9EB0 RET
	0x01CE9EB4 ADRP X20, 0x253A000
	0x01CE9EB8 LDRB W8, [X20 + 0x43F]
	0x01CE9EBC CBNZ W8, 0x1CE9ED4
	0x01CE9EC0 ADRP X0, 0x2264000
	0x01CE9EC4 LDR X0, [X0 + 0x480]
	0x01CE9EC8 BL 0x1B6E7F0
	0x01CE9ECC MOVZ W8, 0x1
	0x01CE9ED0 STRB W8, [X20 + 0x43F]
	0x01CE9ED4 ADRP X8, 0x2264000
	0x01CE9ED8 LDR X8, [X8 + 0x480]
	0x01CE9EDC LDR X8, [X8]
	0x01CE9EE0 LDR X8, [X8 + 0xB8]
	0x01CE9EE4 LDP S0, S1, [X8]
	0x01CE9EE8 LDR V2, [X8 + 0x8]
	0x01CE9EEC MOV X0, X31
	0x01CE9EF0 BL 0x3A92C2C
	0x01CE9EF4 ADRP X8, 0xFFFFFFFFFEDC0000
	0x01CE9EF8 MOV V9.16B, V0.16B
	0x01CE9EFC MOV V11.16B, V1.16B
	0x01CE9F00 MOV V8.16B, V2.16B
	0x01CE9F04 MOV V10.16B, V3.16B
	0x01CE9F08 LDR V2, [X8 + 0xAF4]
	0x01CE9F0C LDP S0, S1, [X19 + 0x40]
	0x01CE9F10 LDR V3, [X19 + 0x48]
	0x01CE9F14 MOV X0, X31
	0x01CE9F18 FMUL S0, S0, S2
	0x01CE9F1C FMUL S1, S1, S2
	0x01CE9F20 FMUL S2, S3, S2
	0x01CE9F24 BL 0x3A928DC
	0x01CE9F28 LDR X19, [X19 + 0x30]
	0x01CE9F2C CBZ X19, 0x1CEA020
	0x01CE9F30 FMUL S4, S10, S3
	0x01CE9F34 FMUL S5, S9, S0
	0x01CE9F38 FMUL S17, S10, S2
	0x01CE9F3C FMUL S18, S8, S3
	0x01CE9F40 FMUL S19, S11, S0
	0x01CE9F44 FMUL S20, S11, S3
	0x01CE9F48 FMUL S3, S9, S3
	0x01CE9F4C FMUL S22, S8, S0
	0x01CE9F50 FMUL S0, S10, S0
	0x01CE9F54 FMUL S23, S10, S1
	0x01CE9F58 FMUL S6, S11, S1
	0x01CE9F5C FMUL S16, S9, S1
	0x01CE9F60 FMUL S21, S11, S2
	0x01CE9F64 FSUB S4, S4, S5
	0x01CE9F68 FADD S5, S17, S18
	0x01CE9F6C FADD S17, S23, S20
	0x01CE9F70 FADD S0, S0, S3
	0x01CE9F74 FMUL S7, S8, S2
	0x01CE9F78 FMUL S2, S9, S2
	0x01CE9F7C FMUL S1, S8, S1
	0x01CE9F80 FSUB S3, S4, S6
	0x01CE9F84 FADD S4, S16, S5
	0x01CE9F88 FADD S5, S22, S17
	0x01CE9F8C FADD S0, S21, S0
	0x01CE9F90 MOV X0, X19
	0x01CE9F94 MOV X1, X31
	0x01CE9F98 FSUB S8, S3, S7
	0x01CE9F9C FSUB S9, S4, S19
	0x01CE9FA0 FSUB S10, S5, S2
	0x01CE9FA4 FSUB S11, S0, S1
	0x01CE9FA8 BL 0x3AA5FBC
	0x01CE9FAC MOV X0, X31
	0x01CE9FB0 MOV V12.16B, V0.16B
	0x01CE9FB4 MOV V13.16B, V1.16B
	0x01CE9FB8 MOV V14.16B, V2.16B
	0x01CE9FBC MOV V15.16B, V3.16B
	0x01CE9FC0 BL 0x3AA481C
	0x01CE9FC4 FMOV S1, 10
	0x01CE9FC8 FMUL S0, S0, S1
	0x01CE9FCC STR S0, [X31]
	0x01CE9FD0 MOV V0.16B, V12.16B
	0x01CE9FD4 MOV V1.16B, V13.16B
	0x01CE9FD8 MOV V2.16B, V14.16B
	0x01CE9FDC MOV V3.16B, V15.16B
	0x01CE9FE0 MOV V4.16B, V11.16B
	0x01CE9FE4 MOV V5.16B, V10.16B
	0x01CE9FE8 MOV V6.16B, V9.16B
	0x01CE9FEC MOV V7.16B, V8.16B
	0x01CE9FF0 MOV X0, X31
	0x01CE9FF4 BL 0x3A92660
	0x01CE9FF8 MOV X0, X19
	0x01CE9FFC LDP X20, X19, [X31 + 0x60]
	0x01CEA000 LDR X30, [X31 + 0x50]
	0x01CEA004 LDP D9, D8, [X31 + 0x40]
	0x01CEA008 LDP D11, D10, [X31 + 0x30]
	0x01CEA00C LDP D13, D12, [X31 + 0x20]
	0x01CEA010 LDP D15, D14, [X31 + 0x10]
	0x01CEA014 MOV X1, X31
	0x01CEA018 ADD X31, X31, 0x70
	0x01CEA01C B 0x3AA7878
	0x01CEA020 BL 0x1B6EA1C
	0x01CEA024 STR D10, [X31 - 0x30]!
	0x01CEA028 STP D9, D8, [X31 + 0x10]
	0x01CEA02C STP X30, X19, [X31 + 0x20]
	0x01CEA030 ADRP X8, 0xFFFFFFFFFEDBF000
	0x01CEA034 ADRP X9, 0xFFFFFFFFFEDBF000
	0x01CEA038 LDR V1, [X8 + 0x994]
	0x01CEA03C LDR V2, [X9 + 0xA28]
	0x01CEA040 MOV X19, X0
	0x01CEA044 FMOV S0, 1
	0x01CEA048 FMOV S3, 1
	0x01CEA04C MOV X0, X31
	0x01CEA050 BL 0x3A75B14
	0x01CEA054 LDR X0, [X19 + 0x38]
	0x01CEA058 CBZ X0, 0x1CEA0CC
	0x01CEA05C MOV X1, X31
	0x01CEA060 BL 0x3AA7658
	0x01CEA064 ADRP X8, 0xFFFFFFFFFEDBF000
	0x01CEA068 LDR V3, [X8 + 0xAB0]
	0x01CEA06C MOV X0, X31
	0x01CEA070 BL 0x3A7567C
	0x01CEA074 LDR X0, [X19 + 0x30]
	0x01CEA078 CBZ X0, 0x1CEA0CC
	0x01CEA07C MOV X1, X31
	0x01CEA080 BL 0x3AA7658
	0x01CEA084 LDR X0, [X19 + 0x38]
	0x01CEA088 CBZ X0, 0x1CEA0CC
	0x01CEA08C MOV X1, X31
	0x01CEA090 MOV V8.16B, V0.16B
	0x01CEA094 MOV V9.16B, V1.16B
	0x01CEA098 MOV V10.16B, V2.16B
	0x01CEA09C BL 0x3AA7658
	0x01CEA0A0 MOV V3.16B, V0.16B
	0x01CEA0A4 MOV V4.16B, V1.16B
	0x01CEA0A8 MOV V0.16B, V8.16B
	0x01CEA0AC MOV V1.16B, V9.16B
	0x01CEA0B0 LDP X30, X19, [X31 + 0x20]
	0x01CEA0B4 LDP D9, D8, [X31 + 0x10]
	0x01CEA0B8 MOV V5.16B, V2.16B
	0x01CEA0BC MOV V2.16B, V10.16B
	0x01CEA0C0 MOV X0, X31
	0x01CEA0C4 LDR V10, [X31], #0x30
	0x01CEA0C8 B 0x3A755E8
	0x01CEA0CC BL 0x1B6EA1C
	0x01CEA0D0 STR X30, [X31 - 0x20]!
	0x01CEA0D4 STP X20, X19, [X31 + 0x10]
	0x01CEA0D8 LDR X20, [X0 + 0x78]
	0x01CEA0DC MOV X1, X31
	0x01CEA0E0 MOV X19, X0
	0x01CEA0E4 BL 0x3A9B084
	0x01CEA0E8 CBZ X0, 0x1CEA10C
	0x01CEA0EC MOV X1, X31
	0x01CEA0F0 BL 0x3AA7658
	0x01CEA0F4 LDR V3, [X19 + 0x80]
	0x01CEA0F8 MOV X0, X20
	0x01CEA0FC LDP X20, X19, [X31 + 0x10]
	0x01CEA100 MOV X1, X31
	0x01CEA104 LDR X30, [X31], #0x20
	0x01CEA108 B 0x1CCD9CC
	0x01CEA10C BL 0x1B6EA1C
	0x01CEA110 STR S0, [X0 + 0x80]
	0x01CEA114 RET
	0x01CEA118 STP X30, X21, [X31 - 0x20]!
	0x01CEA11C STP X20, X19, [X31 + 0x10]
	0x01CEA120 ADRP X21, 0x2539000
	0x01CEA124 ADRP X20, 0x2265000
	0x01CEA128 LDRB W8, [X21 + 0x67F]
	0x01CEA12C LDR X20, [X20 + 0xE08]
	0x01CEA130 MOV X19, X0
	0x01CEA134 TBNZ X8, 0x0, 0x1CEA14C
	0x01CEA138 ADRP X0, 0x2265000
	0x01CEA13C LDR X0, [X0 + 0xE08]
	0x01CEA140 BL 0x1B6E7F0
	0x01CEA144 MOVZ W8, 0x1
	0x01CEA148 STRB W8, [X21 + 0x67F]
	0x01CEA14C LDR X0, [X20]
	0x01CEA150 LDR X19, [X19 + 0x20]
	0x01CEA154 LDR W8, [X0 + 0xE0]
	0x01CEA158 CBNZ W8, 0x1CEA160
	0x01CEA15C BL 0x1B6E8F8
	0x01CEA160 CBZ X19, 0x1CEA184
	0x01CEA164 LDR X8, [X20]
	0x01CEA168 MOV X0, X19
	0x01CEA16C LDP X20, X19, [X31 + 0x10]
	0x01CEA170 MOV X2, X31
	0x01CEA174 LDR X8, [X8 + 0xB8]
	0x01CEA178 LDR W1, [X8]
	0x01CEA17C LDP X30, X21, [X31], #0x20
	0x01CEA180 B 0x3A5EE60
	0x01CEA184 BL 0x1B6EA1C
	0x01CEA188 STP X30, X19, [X31 - 0x10]!
	0x01CEA18C AND W8, W1, 0x1
	0x01CEA190 STRB W8, [X0 + 0x4C]
	0x01CEA194 TBNZ X1, 0x0, 0x1CEA1D8
	0x01CEA198 LDRB W8, [X0 + 0x84]
	0x01CEA19C MOV X19, X0
	0x01CEA1A0 CBZ W8, 0x1CEA1D8
	0x01CEA1A4 LDR X0, [X19 + 0x30]
	0x01CEA1A8 CBZ X0, 0x1CEA1E0
	0x01CEA1AC LDP S2, S3, [X19 + 0x58]
	0x01CEA1B0 LDP S0, S1, [X19 + 0x50]
	0x01CEA1B4 MOV X1, X31
	0x01CEA1B8 BL 0x3AA7878
	0x01CEA1BC LDR X0, [X19 + 0x38]
	0x01CEA1C0 CBZ X0, 0x1CEA1E0
	0x01CEA1C4 LDP S1, S2, [X19 + 0x64]
	0x01CEA1C8 LDR V0, [X19 + 0x60]
	0x01CEA1CC MOV X1, X31
	0x01CEA1D0 LDP X30, X19, [X31], #0x10
	0x01CEA1D4 B 0x3AA76F8
	0x01CEA1D8 LDP X30, X19, [X31], #0x10
	0x01CEA1DC RET
	0x01CEA1E0 BL 0x1B6EA1C
	0x01CEA1E4 STR X30, [X31 - 0x10]!
	0x01CEA1E8 LDR X0, [X0 + 0x38]
	0x01CEA1EC CBZ X0, 0x1CEA1FC
	0x01CEA1F0 MOV X1, X31
	0x01CEA1F4 LDR X30, [X31], #0x10
	0x01CEA1F8 B 0x3AA76F8
	0x01CEA1FC BL 0x1B6EA1C
	0x01CEA200 STP X30, X21, [X31 - 0x20]!
	0x01CEA204 STP X20, X19, [X31 + 0x10]
	0x01CEA208 ADRP X20, 0x2539000
	0x01CEA20C ADRP X21, 0x2265000
	0x01CEA210 LDRB W8, [X20 + 0x680]
	0x01CEA214 LDR X21, [X21 + 0xE08]
	0x01CEA218 MOV X19, X0
	0x01CEA21C TBNZ X8, 0x0, 0x1CEA234
	0x01CEA220 ADRP X0, 0x2265000
	0x01CEA224 LDR X0, [X0 + 0xE08]
	0x01CEA228 BL 0x1B6E7F0
	0x01CEA22C MOVZ W8, 0x1
	0x01CEA230 STRB W8, [X20 + 0x680]
	0x01CEA234 LDR X0, [X21]
	0x01CEA238 LDR X20, [X19 + 0x20]
	0x01CEA23C LDR W8, [X0 + 0xE0]
	0x01CEA240 CBNZ W8, 0x1CEA248
	0x01CEA244 BL 0x1B6E8F8
	0x01CEA248 CBZ X20, 0x1CEA2AC
	0x01CEA24C LDR X8, [X21]
	0x01CEA250 MOV X0, X20
	0x01CEA254 MOV X2, X31
	0x01CEA258 LDR X8, [X8 + 0xB8]
	0x01CEA25C LDR W1, [X8 + 0x20]
	0x01CEA260 BL 0x3A5F298
	0x01CEA264 LDR X0, [X19 + 0x20]
	0x01CEA268 CBZ X0, 0x1CEA2AC
	0x01CEA26C LDR X8, [X21]
	0x01CEA270 MOV W2, W31
	0x01CEA274 MOV X3, X31
	0x01CEA278 LDR X8, [X8 + 0xB8]
	0x01CEA27C LDR W1, [X8]
	0x01CEA280 BL 0x3A5EF90
	0x01CEA284 LDR X0, [X19 + 0x20]
	0x01CEA288 CBZ X0, 0x1CEA2AC
	0x01CEA28C LDR X8, [X21]
	0x01CEA290 LDP X20, X19, [X31 + 0x10]
	0x01CEA294 MOV W2, W31
	0x01CEA298 MOV X3, X31
	0x01CEA29C LDR X8, [X8 + 0xB8]
	0x01CEA2A0 LDR W1, [X8 + 0x4]
	0x01CEA2A4 LDP X30, X21, [X31], #0x20
	0x01CEA2A8 B 0x3A5EF90
	0x01CEA2AC BL 0x1B6EA1C
	0x01CEA2B0 STR D8, [X31 - 0x30]!
	0x01CEA2B4 STP X30, X21, [X31 + 0x10]
	0x01CEA2B8 STP X20, X19, [X31 + 0x20]

ISIL:
	001 Subtract X31, X31, 240
	002 Move [X31+80], D15
	003 Move [X31+88], D14
	004 Move [X31+96], D13
	005 Move [X31+104], D12
	006 Move [X31+112], D11
	007 Move [X31+120], D10
	008 Move [X31+128], D9
	009 Move [X31+136], D8
	010 Move [X31+144], X29
	011 Move [X31+152], X30
	012 Move [X31+160], X28
	013 Move [X31+168], X27
	014 Move [X31+176], X26
	015 Move [X31+184], X25
	016 Move [X31+192], X24
	017 Move [X31+200], X23
	018 Move [X31+208], X22
	019 Move [X31+216], X21
	020 Move [X31+224], X20
	021 Move [X31+232], X19
	022 Move [X31+12], S6
	023 Move [X31+20], S0
	024 Move X20, 0x253B000
	025 Move X23, 0x2268000
	026 Move X21, 0x2268000
	027 Move X22, 0x2266000
	028 Move W8, [X20+1659]
	029 Move X23, [X23+768]
	030 Move X21, [X21+776]
	031 Move X22, [X22+984]
	032 Move X19, X0
	033 Move V10, V5
	034 Move V9, V4
	035 Move V8, V3
	036 Move V14, V2
	037 Move V13, V1
	038 Move TEMP, X8
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfEqual {68}
	042 Move X0, 0x2268000
	043 Move X0, [X0+784]
	044 Call 0x1B6F7F0
	045 Move X0, 0x2266000
	046 Move X0, [X0+984]
	047 Call 0x1B6F7F0
	048 Move X0, 0x2268000
	049 Move X0, [X0+792]
	050 Call 0x1B6F7F0
	051 Move X0, 0x2268000
	052 Move X0, [X0+800]
	053 Call 0x1B6F7F0
	054 Move X0, 0x2268000
	055 Move X0, [X0+776]
	056 Call 0x1B6F7F0
	057 Move X0, 0x2267000
	058 Move X0, [X0+3560]
	059 Call 0x1B6F7F0
	060 Move X0, 0x2268000
	061 Move X0, [X0+768]
	062 Call 0x1B6F7F0
	063 Move X0, 0x2265000
	064 Move X0, [X0+1216]
	065 Call 0x1B6F7F0
	066 Move W8, 1
	067 Move [X20+1659], W8
	068 Move X24, 0x2265000
	069 Move X24, [X24+1216]
	070 Move X0, [X23]
	071 NotImplemented "Instruction MOVI not yet implemented."
	072 Move [X31+60], V0
	073 Move [X31+32], V0
	074 Move [X31+40], V0
	075 Move [X31+24], X31
	076 Call 0x1B6FA0C
	077 Move X1, [X21]
	078 Move X20, X0
	079 Call List`1<Object>..ctor, X0
	080 Move X0, [X23]
	081 Call 0x1B6FA0C
	082 Move X1, [X21]
	083 Move X21, X0
	084 Call List`1<Object>..ctor, X0
	085 Move X0, [X22]
	086 Move [X31+16], S8
	087 Add S8, S8, S8
	088 Move V11, V9
	089 Move W8, [X0+224]
	090 Add S9, S9, S9
	091 Move V12, V10
	092 Add S10, S10, S10
	093 Compare W8, 0
	094 JumpIfNotEqual {97}
	095 Call 0x1B6F8F8
	096 Move X0, [X22]
	097 Move X8, [X0+184]
	098 Move V0, [X31+20]
	099 Move X1, X31
	100 Move W0, [X8+48]
	101 Subtract S15, S0, S8
	102 Subtract S8, S13, S9
	103 Subtract S9, S14, S10
	104 Move V10, V14
	105 Call LayerMask.op_Implicit, X0
	106 Move X8, [X24]
	107 Move W22, W0
	108 Move W9, [X8+224]
	109 Compare W9, 0
	110 JumpIfNotEqual {113}
	111 Move X0, X8
	112 Call 0x1B6F8F8
	113 Move S1, [X31+12]
	114 Move S4, [X31+16]
	115 Move S0, 2
	116 Move S3, 1.5
	117 Move V2, V9
	118 Add S7, S1, S0
	119 Move V0, V15
	120 Move V1, V8
	121 Move V5, V11
	122 Move V6, V12
	123 Move W0, W22
	124 Move X1, X31
	125 Call Physics.SphereCastAll, X0, V0, X1, V1, X2
	126 Compare X0, 0
	127 JumpIfEqual {309}
	128 Move X8, [X0+24]
	129 Move V14, [X31+20]
	130 Move X22, X0
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Move X25, 0x2267000
	133 Move X26, 0x2267000
	134 Move X9, -19136512
	135 Move X23, 0x2264000
	136 Move X25, [X25+784]
	137 Move X26, [X26+800]
	138 Move V12, [X9+2356]
	139 Move X23, [X23+1152]
	140 Move X24, X31
	141 And X8, X8, 0
	142 Add X27, X22, 32
	143 Move X28, 0x253A000
	144 Move W29, 1
	145 NotImplemented "Instruction CMP not yet implemented."
	146 Move W8, [X27+40]
	147 Move X9, [X27+32]
	148 Move V1, [X27]
	149 Move V0, [X27+16]
	150 Add X0, X31, 32
	151 Move X1, X31
	152 Move [X31+72], W8
	153 Move [X31+64], X9
	154 Move [X31+32], V1
	155 Move [X31+40], V0
	156 Call RaycastHit.get_collider, X0
	157 Compare X0, 0
	158 JumpIfEqual {309}
	159 Move X2, [X25]
	160 Add X1, X31, 24
	161 Call 0x2091EE4, X0, X1
	162 Move TEMP, X0
	163 And TEMP, TEMP, 1
	164 Compare TEMP, 1
	165 JumpIfNotEqual {264}
	166 Move X8, [X31+24]
	167 Compare X8, 0
	168 JumpIfEqual {309}
	169 Move X0, [X8+32]
	170 Compare X0, 0
	171 JumpIfEqual {309}
	172 Move X1, X31
	173 Call Flashlight.get_isOn, X0
	174 Move TEMP, X0
	175 And TEMP, TEMP, 1
	176 Compare TEMP, 1
	177 JumpIfNotEqual {264}
	178 Add X0, X31, 32
	179 Move X1, X31
	180 Call RaycastHit.get_point, X0
	181 Move W8, [X28+1087]
	182 Move V8, V0
	183 Move V9, V1
	184 Move V11, V2
	185 Compare W8, 0
	186 JumpIfNotEqual {190}
	187 Move X0, X23
	188 Call 0x1B6F7F0
	189 Move [X28+1087], W29
	190 Move X8, [X23]
	191 Move X8, [X8+184]
	192 Move S0, [X8]
	193 Move S1, [X8+4]
	194 Move V2, [X8+8]
	195 Subtract S0, S8, S0
	196 Subtract S1, S9, S1
	197 Subtract S2, S11, S2
	198 Multiply S0, S0, S0
	199 Multiply S1, S1, S1
	200 Add S0, S0, S1
	201 Multiply S1, S2, S2
	202 Add S0, S1, S0
	203 NotImplemented "Instruction FCMP not yet implemented."
	204 Move X8, [X31+24]
	205 Compare X8, 0
	206 JumpIfEqual {309}
	207 Compare X21, 0
	208 JumpIfEqual {309}
	209 Move W10, [X21+28]
	210 Move X1, [X8+32]
	211 Move X8, [X21+16]
	212 Move X9, [X26]
	213 Add W10, W10, 1
	214 Move [X21+28], W10
	215 Compare X8, 0
	216 JumpIfEqual {309}
	217 NotImplemented "Instruction LDRSW not yet implemented."
	218 Move W11, [X8+24]
	219 NotImplemented "Instruction CMP not yet implemented."
	220 Add W9, W10, 1
	221 Add X8, X8, X10
	222 Move [X21+24], W9
	223 Add X0, X31, 32
	224 Move X1, X31
	225 Call RaycastHit.get_point, X0
	226 Move V3, V0
	227 Move V4, V1
	228 Move V5, V2
	229 Move V0, V14
	230 Move V1, V13
	231 Move V2, V10
	232 Call MobDetectionUtil.IsTargetInLineOfSight, X0, X1
	233 Move TEMP, X0
	234 And TEMP, TEMP, 1
	235 Compare TEMP, 1
	236 JumpIfNotEqual {264}
	237 Move X8, [X31+24]
	238 Compare X8, 0
	239 JumpIfEqual {309}
	240 Compare X20, 0
	241 JumpIfEqual {309}
	242 Move W10, [X20+28]
	243 Move X1, [X8+32]
	244 Move X8, [X20+16]
	245 Move X9, [X26]
	246 Add W10, W10, 1
	247 Move [X20+28], W10
	248 Compare X8, 0
	249 JumpIfEqual {309}
	250 NotImplemented "Instruction LDRSW not yet implemented."
	251 Move W11, [X8+24]
	252 NotImplemented "Instruction CMP not yet implemented."
	253 Add W9, W10, 1
	254 Add X8, X8, X10
	255 Move [X20+24], W9
	256 Move [X8+32], X1
	257 Move X8, [X9+32]
	258 Move X0, X21
	259 Move X8, [X9+32]
	260 Move X0, X20
	261 Move X8, [X8+192]
	262 Move X2, [X8+112]
	263 Call List`1<Object>.AddWithResize, X0, X1
	264 Move W8, [X22+24]
	265 Add X24, X24, 1
	266 Add X27, X27, 44
	267 NotImplemented "Instruction CMP not yet implemented."
	268 Compare X21, 0
	269 JumpIfEqual {281}
	270 Move W8, [X21+24]
	271 NotImplemented "Instruction CMP not yet implemented."
	272 Compare X20, 0
	273 JumpIfEqual {309}
	274 Move X8, 0x2267000
	275 Move X8, [X8+792]
	276 Move X0, X20
	277 Move X1, X21
	278 Move X2, [X8]
	279 Call List`1<Object>.AddRange, X0, X1
	280 Move [X19], X20
	281 Move [X19], X20
	282 Compare X20, 0
	283 JumpIfEqual {309}
	284 Move W8, [X20+24]
	285 Move X20, [X31+224]
	286 Move X19, [X31+232]
	287 Move X22, [X31+208]
	288 Move X21, [X31+216]
	289 Move X24, [X31+192]
	290 Move X23, [X31+200]
	291 Move X26, [X31+176]
	292 Move X25, [X31+184]
	293 Move X28, [X31+160]
	294 Move X27, [X31+168]
	295 Move X29, [X31+144]
	296 Move X30, [X31+152]
	297 Move D9, [X31+128]
	298 Move D8, [X31+136]
	299 Move D11, [X31+112]
	300 Move D10, [X31+120]
	301 Move D13, [X31+96]
	302 Move D12, [X31+104]
	303 Move D15, [X31+80]
	304 Move D14, [X31+88]
	305 NotImplemented "Instruction CMP not yet implemented."
	306 NotImplemented "Instruction CSET not yet implemented."
	307 Add X31, X31, 240
	308 Return X0
	309 Call 0x1B6FA1C
	310 Call 0x1B6FA24

Method: System.Boolean TryGetAnyLightBySight(UnityEngine.Vector3 viewPoint, UnityEngine.Vector3 viewDirection, System.Single viewRange, out AnimalCompany.Flashlight flashlightOutput)

Disassembly:
	0x01CEA2BC ADRP X20, 0x2539000
	0x01CEA2C0 ADRP X21, 0x2265000
	0x01CEA2C4 LDRB W8, [X20 + 0x681]
	0x01CEA2C8 LDR X21, [X21 + 0xE08]
	0x01CEA2CC MOV V8.16B, V0.16B
	0x01CEA2D0 MOV X19, X0
	0x01CEA2D4 TBNZ X8, 0x0, 0x1CEA2EC
	0x01CEA2D8 ADRP X0, 0x2265000
	0x01CEA2DC LDR X0, [X0 + 0xE08]
	0x01CEA2E0 BL 0x1B6E7F0
	0x01CEA2E4 MOVZ W8, 0x1
	0x01CEA2E8 STRB W8, [X20 + 0x681]
	0x01CEA2EC LDR X0, [X21]
	0x01CEA2F0 LDR X20, [X19 + 0x20]
	0x01CEA2F4 LDR W8, [X0 + 0xE0]
	0x01CEA2F8 CBNZ W8, 0x1CEA300
	0x01CEA2FC BL 0x1B6E8F8
	0x01CEA300 CBZ X20, 0x1CEA388
	0x01CEA304 LDR X8, [X21]
	0x01CEA308 MOVZ W2, 0x1
	0x01CEA30C MOV X0, X20
	0x01CEA310 MOV X3, X31
	0x01CEA314 LDR X8, [X8 + 0xB8]
	0x01CEA318 LDR W1, [X8]
	0x01CEA31C BL 0x3A5EF90
	0x01CEA320 LDR X0, [X19 + 0x20]
	0x01CEA324 CBZ X0, 0x1CEA388
	0x01CEA328 LDR X8, [X21]
	0x01CEA32C MOV W2, W31
	0x01CEA330 MOV X3, X31
	0x01CEA334 LDR X8, [X8 + 0xB8]
	0x01CEA338 LDR W1, [X8 + 0x4]
	0x01CEA33C BL 0x3A5EF90
	0x01CEA340 LDR X0, [X19 + 0x20]
	0x01CEA344 CBZ X0, 0x1CEA388
	0x01CEA348 LDR X8, [X21]
	0x01CEA34C MOV V0.16B, V8.16B
	0x01CEA350 MOV X2, X31
	0x01CEA354 LDR X8, [X8 + 0xB8]
	0x01CEA358 LDR W1, [X8 + 0x8]
	0x01CEA35C BL 0x3A5EDB8
	0x01CEA360 LDR X0, [X19 + 0x20]
	0x01CEA364 CBZ X0, 0x1CEA388
	0x01CEA368 LDR X8, [X21]
	0x01CEA36C LDP X20, X19, [X31 + 0x20]
	0x01CEA370 LDP X30, X21, [X31 + 0x10]
	0x01CEA374 MOV X2, X31
	0x01CEA378 LDR X8, [X8 + 0xB8]
	0x01CEA37C LDR W1, [X8 + 0x20]
	0x01CEA380 LDR V8, [X31], #0x30
	0x01CEA384 B 0x3A5F298
	0x01CEA388 BL 0x1B6EA1C
	0x01CEA38C STR D8, [X31 - 0x30]!
	0x01CEA390 STP X30, X21, [X31 + 0x10]
	0x01CEA394 STP X20, X19, [X31 + 0x20]
	0x01CEA398 ADRP X20, 0x2539000
	0x01CEA39C ADRP X21, 0x2265000
	0x01CEA3A0 LDRB W8, [X20 + 0x682]
	0x01CEA3A4 LDR X21, [X21 + 0xE08]
	0x01CEA3A8 MOV V8.16B, V0.16B
	0x01CEA3AC MOV X19, X0
	0x01CEA3B0 TBNZ X8, 0x0, 0x1CEA3C8
	0x01CEA3B4 ADRP X0, 0x2265000
	0x01CEA3B8 LDR X0, [X0 + 0xE08]
	0x01CEA3BC BL 0x1B6E7F0
	0x01CEA3C0 MOVZ W8, 0x1
	0x01CEA3C4 STRB W8, [X20 + 0x682]
	0x01CEA3C8 LDR X0, [X21]
	0x01CEA3CC LDR X20, [X19 + 0x20]
	0x01CEA3D0 LDR W8, [X0 + 0xE0]
	0x01CEA3D4 CBNZ W8, 0x1CEA3DC
	0x01CEA3D8 BL 0x1B6E8F8
	0x01CEA3DC CBZ X20, 0x1CEA464
	0x01CEA3E0 LDR X8, [X21]
	0x01CEA3E4 MOVZ W2, 0x1
	0x01CEA3E8 MOV X0, X20
	0x01CEA3EC MOV X3, X31
	0x01CEA3F0 LDR X8, [X8 + 0xB8]
	0x01CEA3F4 LDR W1, [X8]
	0x01CEA3F8 BL 0x3A5EF90
	0x01CEA3FC LDR X0, [X19 + 0x20]
	0x01CEA400 CBZ X0, 0x1CEA464
	0x01CEA404 LDR X8, [X21]
	0x01CEA408 MOVZ W2, 0x1
	0x01CEA40C MOV X3, X31
	0x01CEA410 LDR X8, [X8 + 0xB8]
	0x01CEA414 LDR W1, [X8 + 0x4]
	0x01CEA418 BL 0x3A5EF90
	0x01CEA41C LDR X0, [X19 + 0x20]
	0x01CEA420 CBZ X0, 0x1CEA464
	0x01CEA424 LDR X8, [X21]
	0x01CEA428 MOV V0.16B, V8.16B
	0x01CEA42C MOV X2, X31
	0x01CEA430 LDR X8, [X8 + 0xB8]
	0x01CEA434 LDR W1, [X8 + 0xC]
	0x01CEA438 BL 0x3A5EDB8
	0x01CEA43C LDR X0, [X19 + 0x20]
	0x01CEA440 CBZ X0, 0x1CEA464
	0x01CEA444 LDR X8, [X21]
	0x01CEA448 LDP X20, X19, [X31 + 0x20]
	0x01CEA44C LDP X30, X21, [X31 + 0x10]
	0x01CEA450 MOV X2, X31
	0x01CEA454 LDR X8, [X8 + 0xB8]
	0x01CEA458 LDR W1, [X8 + 0x20]
	0x01CEA45C LDR V8, [X31], #0x30
	0x01CEA460 B 0x3A5F298
	0x01CEA464 BL 0x1B6EA1C
	0x01CEA468 STP X30, X21, [X31 - 0x20]!
	0x01CEA46C STP X20, X19, [X31 + 0x10]
	0x01CEA470 ADRP X21, 0x2539000
	0x01CEA474 ADRP X20, 0x2265000
	0x01CEA478 LDRB W8, [X21 + 0x683]
	0x01CEA47C LDR X20, [X20 + 0xE08]
	0x01CEA480 MOV X19, X0
	0x01CEA484 TBNZ X8, 0x0, 0x1CEA49C
	0x01CEA488 ADRP X0, 0x2265000
	0x01CEA48C LDR X0, [X0 + 0xE08]
	0x01CEA490 BL 0x1B6E7F0
	0x01CEA494 MOVZ W8, 0x1
	0x01CEA498 STRB W8, [X21 + 0x683]
	0x01CEA49C LDR X0, [X20]
	0x01CEA4A0 LDR X19, [X19 + 0x20]
	0x01CEA4A4 LDR W8, [X0 + 0xE0]
	0x01CEA4A8 CBNZ W8, 0x1CEA4B0
	0x01CEA4AC BL 0x1B6E8F8
	0x01CEA4B0 CBZ X19, 0x1CEA4D4
	0x01CEA4B4 LDR X8, [X20]
	0x01CEA4B8 MOV X0, X19
	0x01CEA4BC LDP X20, X19, [X31 + 0x10]
	0x01CEA4C0 MOV X2, X31
	0x01CEA4C4 LDR X8, [X8 + 0xB8]
	0x01CEA4C8 LDR W1, [X8 + 0x10]
	0x01CEA4CC LDP X30, X21, [X31], #0x20
	0x01CEA4D0 B 0x3A5F298
	0x01CEA4D4 BL 0x1B6EA1C
	0x01CEA4D8 STP X30, X21, [X31 - 0x20]!
	0x01CEA4DC STP X20, X19, [X31 + 0x10]
	0x01CEA4E0 ADRP X21, 0x2539000
	0x01CEA4E4 ADRP X20, 0x2265000
	0x01CEA4E8 LDRB W8, [X21 + 0x684]
	0x01CEA4EC LDR X20, [X20 + 0xE08]
	0x01CEA4F0 MOV X19, X0
	0x01CEA4F4 TBNZ X8, 0x0, 0x1CEA50C
	0x01CEA4F8 ADRP X0, 0x2265000
	0x01CEA4FC LDR X0, [X0 + 0xE08]
	0x01CEA500 BL 0x1B6E7F0
	0x01CEA504 MOVZ W8, 0x1
	0x01CEA508 STRB W8, [X21 + 0x684]
	0x01CEA50C LDR X0, [X20]
	0x01CEA510 LDR X19, [X19 + 0x20]
	0x01CEA514 LDR W8, [X0 + 0xE0]
	0x01CEA518 CBNZ W8, 0x1CEA520
	0x01CEA51C BL 0x1B6E8F8
	0x01CEA520 CBZ X19, 0x1CEA544
	0x01CEA524 LDR X8, [X20]
	0x01CEA528 MOV X0, X19
	0x01CEA52C LDP X20, X19, [X31 + 0x10]
	0x01CEA530 MOV X2, X31
	0x01CEA534 LDR X8, [X8 + 0xB8]
	0x01CEA538 LDR W1, [X8 + 0x14]
	0x01CEA53C LDP X30, X21, [X31], #0x20
	0x01CEA540 B 0x3A5F298
	0x01CEA544 BL 0x1B6EA1C
	0x01CEA548 STP X30, X21, [X31 - 0x20]!
	0x01CEA54C STP X20, X19, [X31 + 0x10]
	0x01CEA550 ADRP X21, 0x2539000
	0x01CEA554 ADRP X20, 0x2265000
	0x01CEA558 LDRB W8, [X21 + 0x685]
	0x01CEA55C LDR X20, [X20 + 0xE08]
	0x01CEA560 MOV X19, X0
	0x01CEA564 TBNZ X8, 0x0, 0x1CEA57C
	0x01CEA568 ADRP X0, 0x2265000
	0x01CEA56C LDR X0, [X0 + 0xE08]
	0x01CEA570 BL 0x1B6E7F0
	0x01CEA574 MOVZ W8, 0x1
	0x01CEA578 STRB W8, [X21 + 0x685]
	0x01CEA57C LDR X0, [X20]
	0x01CEA580 LDR X19, [X19 + 0x20]
	0x01CEA584 LDR W8, [X0 + 0xE0]
	0x01CEA588 CBNZ W8, 0x1CEA590
	0x01CEA58C BL 0x1B6E8F8
	0x01CEA590 CBZ X19, 0x1CEA5B4
	0x01CEA594 LDR X8, [X20]
	0x01CEA598 MOV X0, X19
	0x01CEA59C LDP X20, X19, [X31 + 0x10]
	0x01CEA5A0 MOV X2, X31
	0x01CEA5A4 LDR X8, [X8 + 0xB8]
	0x01CEA5A8 LDR W1, [X8 + 0x18]
	0x01CEA5AC LDP X30, X21, [X31], #0x20
	0x01CEA5B0 B 0x3A5F298
	0x01CEA5B4 BL 0x1B6EA1C
	0x01CEA5B8 STR X30, [X31 - 0x30]!
	0x01CEA5BC STP X22, X21, [X31 + 0x10]
	0x01CEA5C0 STP X20, X19, [X31 + 0x20]
	0x01CEA5C4 ADRP X22, 0x2539000
	0x01CEA5C8 ADRP X21, 0x2265000
	0x01CEA5CC LDRB W8, [X22 + 0x686]
	0x01CEA5D0 LDR X21, [X21 + 0xE08]

ISIL:
	001 Subtract X31, X31, 224
	002 Move [X31+80], D15
	003 Move [X31+88], D14
	004 Move [X31+96], D13
	005 Move [X31+104], D12
	006 Move [X31+112], D11
	007 Move [X31+120], D10
	008 Move [X31+128], D9
	009 Move [X31+136], D8
	010 Move [X31+144], X30
	011 Move [X31+152], X27
	012 Move [X31+160], X26
	013 Move [X31+168], X25
	014 Move [X31+176], X24
	015 Move [X31+184], X23
	016 Move [X31+192], X22
	017 Move [X31+200], X21
	018 Move [X31+208], X20
	019 Move [X31+216], X19
	020 Move [X31+12], S6
	021 Move [X31+20], S0
	022 Move X21, 0x253A000
	023 Move X20, 0x2265000
	024 Move W8, [X21+1660]
	025 Move X20, [X20+984]
	026 Move X19, X0
	027 Move V10, V5
	028 Move V9, V4
	029 Move V8, V3
	030 Move V14, V2
	031 Move V13, V1
	032 Move TEMP, X8
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfEqual {50}
	036 Move X0, 0x2267000
	037 Move X0, [X0+784]
	038 Call 0x1B6F7F0
	039 Move X0, 0x2265000
	040 Move X0, [X0+984]
	041 Call 0x1B6F7F0
	042 Move X0, 0x2264000
	043 Move X0, [X0+1144]
	044 Call 0x1B6F7F0
	045 Move X0, 0x2264000
	046 Move X0, [X0+1216]
	047 Call 0x1B6F7F0
	048 Move W8, 1
	049 Move [X21+1660], W8
	050 Move X0, [X20]
	051 NotImplemented "Instruction MOVI not yet implemented."
	052 Move [X31+60], V0
	053 Move [X31+32], V0
	054 Move [X31+40], V0
	055 Move [X31+24], X31
	056 Move X21, 0x2264000
	057 Move W8, [X0+224]
	058 Move X21, [X21+1216]
	059 Move [X31+16], S8
	060 Add S8, S8, S8
	061 Move V11, V9
	062 Add S9, S9, S9
	063 Move V12, V10
	064 Add S10, S10, S10
	065 Compare W8, 0
	066 JumpIfNotEqual {69}
	067 Call 0x1B6F8F8
	068 Move X0, [X20]
	069 Move X8, [X0+184]
	070 Move V0, [X31+20]
	071 Move X1, X31
	072 Move W0, [X8+48]
	073 Subtract S15, S0, S8
	074 Subtract S8, S13, S9
	075 Subtract S9, S14, S10
	076 Move V10, V14
	077 Call LayerMask.op_Implicit, X0
	078 Move X8, [X21]
	079 Move W20, W0
	080 Move W9, [X8+224]
	081 Compare W9, 0
	082 JumpIfNotEqual {85}
	083 Move X0, X8
	084 Call 0x1B6F8F8
	085 Move S1, [X31+12]
	086 Move S4, [X31+16]
	087 Move S0, 2
	088 Move S3, 1.5
	089 Move V2, V9
	090 Add S7, S1, S0
	091 Move V0, V15
	092 Move V1, V8
	093 Move V5, V11
	094 Move V6, V12
	095 Move W0, W20
	096 Move X1, X31
	097 Call Physics.SphereCastAll, X0, V0, X1, V1, X2
	098 Compare X0, 0
	099 JumpIfEqual {236}
	100 Move X8, [X0+24]
	101 Move V14, [X31+20]
	102 Move X21, X0
	103 Move X20, X31
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Move X24, 0x2267000
	106 Move X9, -19136512
	107 Move X22, 0x2264000
	108 Move X24, [X24+784]
	109 Move V12, [X9+2356]
	110 Move X22, [X22+1152]
	111 Move X23, X31
	112 And X8, X8, 0
	113 Add X25, X21, 32
	114 Move X26, 0x253A000
	115 Move W27, 1
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Move W8, [X25+40]
	118 Move X9, [X25+32]
	119 Move V1, [X25]
	120 Move V0, [X25+16]
	121 Add X0, X31, 32
	122 Move X1, X31
	123 Move [X31+72], W8
	124 Move [X31+64], X9
	125 Move [X31+32], V1
	126 Move [X31+40], V0
	127 Call RaycastHit.get_collider, X0
	128 Compare X0, 0
	129 JumpIfEqual {236}
	130 Move X2, [X24]
	131 Add X1, X31, 24
	132 Call 0x2091EE4, X0, X1
	133 Move TEMP, X0
	134 And TEMP, TEMP, 1
	135 Compare TEMP, 1
	136 JumpIfNotEqual {193}
	137 Move X8, [X31+24]
	138 Compare X8, 0
	139 JumpIfEqual {236}
	140 Move X0, [X8+32]
	141 Compare X0, 0
	142 JumpIfEqual {236}
	143 Move X1, X31
	144 Call Flashlight.get_isOn, X0
	145 Move TEMP, X0
	146 And TEMP, TEMP, 1
	147 Compare TEMP, 1
	148 JumpIfNotEqual {193}
	149 Add X0, X31, 32
	150 Move X1, X31
	151 Call RaycastHit.get_point, X0
	152 Move W8, [X26+1087]
	153 Move V8, V0
	154 Move V9, V1
	155 Move V11, V2
	156 Compare W8, 0
	157 JumpIfNotEqual {161}
	158 Move X0, X22
	159 Call 0x1B6F7F0
	160 Move [X26+1087], W27
	161 Move X8, [X22]
	162 Move X8, [X8+184]
	163 Move S0, [X8]
	164 Move S1, [X8+4]
	165 Move V2, [X8+8]
	166 Subtract S0, S8, S0
	167 Subtract S1, S9, S1
	168 Subtract S2, S11, S2
	169 Multiply S0, S0, S0
	170 Multiply S1, S1, S1
	171 Add S0, S0, S1
	172 Multiply S1, S2, S2
	173 Add S0, S1, S0
	174 NotImplemented "Instruction FCMP not yet implemented."
	175 Move X8, [X31+24]
	176 Compare X8, 0
	177 JumpIfEqual {236}
	178 Move X20, [X8+32]
	179 Add X0, X31, 32
	180 Move X1, X31
	181 Call RaycastHit.get_point, X0
	182 Move V3, V0
	183 Move V4, V1
	184 Move V5, V2
	185 Move V0, V14
	186 Move V1, V13
	187 Move V2, V10
	188 Call MobDetectionUtil.IsTargetInLineOfSight, X0, X1
	189 Move TEMP, X0
	190 And TEMP, TEMP, 1
	191 Compare TEMP, 1
	192 JumpIfEqual {230}
	193 Move W8, [X21+24]
	194 Add X23, X23, 1
	195 Add X25, X25, 44
	196 NotImplemented "Instruction CMP not yet implemented."
	197 Move X8, 0x2264000
	198 Move X8, [X8+1144]
	199 Move [X19], X20
	200 Move X0, [X8]
	201 Move W8, [X0+224]
	202 Compare W8, 0
	203 JumpIfNotEqual {205}
	204 Call 0x1B6F8F8
	205 Move X0, X20
	206 Move X1, X31
	207 Move X2, X31
	208 Call Object.op_Inequality, X0, X1
	209 Move X20, [X31+208]
	210 Move X19, [X31+216]
	211 Move X22, [X31+192]
	212 Move X21, [X31+200]
	213 Move X24, [X31+176]
	214 Move X23, [X31+184]
	215 Move X26, [X31+160]
	216 Move X25, [X31+168]
	217 Move X30, [X31+144]
	218 Move X27, [X31+152]
	219 Move D9, [X31+128]
	220 Move D8, [X31+136]
	221 Move D11, [X31+112]
	222 Move D10, [X31+120]
	223 Move D13, [X31+96]
	224 Move D12, [X31+104]
	225 Move D15, [X31+80]
	226 Move D14, [X31+88]
	227 And W0, W0, 1
	228 Add X31, X31, 224
	229 Return X0
	230 Move X8, [X31+24]
	231 Compare X8, 0
	232 JumpIfEqual {236}
	233 Move X8, [X8+32]
	234 Move W0, 1
	235 Move [X19], X8
	236 Call 0x1B6FA1C
	237 Call 0x1B6FA24

Method: System.Boolean TryGetPlayersFoundMe(AnimalCompany.MobController mob, out System.Collections.Generic.List`1<AnimalCompany.NetPlayer> players)

Disassembly:
	0x01CEA5D4 MOV W19, W1
	0x01CEA5D8 MOV X20, X0
	0x01CEA5DC TBNZ X8, 0x0, 0x1CEA5F4
	0x01CEA5E0 ADRP X0, 0x2265000
	0x01CEA5E4 LDR X0, [X0 + 0xE08]
	0x01CEA5E8 BL 0x1B6E7F0
	0x01CEA5EC MOVZ W8, 0x1
	0x01CEA5F0 STRB W8, [X22 + 0x686]
	0x01CEA5F4 LDR X0, [X21]
	0x01CEA5F8 LDR X20, [X20 + 0x20]
	0x01CEA5FC LDR W8, [X0 + 0xE0]
	0x01CEA600 CBNZ W8, 0x1CEA608
	0x01CEA604 BL 0x1B6E8F8
	0x01CEA608 CBZ X20, 0x1CEA634
	0x01CEA60C LDR X8, [X21]
	0x01CEA610 AND W2, W19, 0x1
	0x01CEA614 MOV X0, X20
	0x01CEA618 LDP X20, X19, [X31 + 0x20]
	0x01CEA61C LDR X8, [X8 + 0xB8]
	0x01CEA620 LDP X22, X21, [X31 + 0x10]
	0x01CEA624 MOV X3, X31
	0x01CEA628 LDR W1, [X8 + 0x24]
	0x01CEA62C LDR X30, [X31], #0x30
	0x01CEA630 B 0x3A5EF90
	0x01CEA634 BL 0x1B6EA1C
	0x01CEA638 STP X30, X21, [X31 - 0x20]!
	0x01CEA63C STP X20, X19, [X31 + 0x10]
	0x01CEA640 ADRP X21, 0x2539000
	0x01CEA644 ADRP X20, 0x2265000
	0x01CEA648 LDRB W8, [X21 + 0x687]
	0x01CEA64C LDR X20, [X20 + 0xE08]
	0x01CEA650 MOV X19, X0
	0x01CEA654 TBNZ X8, 0x0, 0x1CEA66C
	0x01CEA658 ADRP X0, 0x2265000
	0x01CEA65C LDR X0, [X0 + 0xE08]
	0x01CEA660 BL 0x1B6E7F0
	0x01CEA664 MOVZ W8, 0x1
	0x01CEA668 STRB W8, [X21 + 0x687]
	0x01CEA66C LDR X0, [X20]
	0x01CEA670 LDR X19, [X19 + 0x20]
	0x01CEA674 LDR W8, [X0 + 0xE0]
	0x01CEA678 CBNZ W8, 0x1CEA680
	0x01CEA67C BL 0x1B6E8F8
	0x01CEA680 CBZ X19, 0x1CEA6A4
	0x01CEA684 LDR X8, [X20]
	0x01CEA688 MOV X0, X19
	0x01CEA68C LDP X20, X19, [X31 + 0x10]
	0x01CEA690 MOV X2, X31
	0x01CEA694 LDR X8, [X8 + 0xB8]
	0x01CEA698 LDR W1, [X8 + 0x1C]
	0x01CEA69C LDP X30, X21, [X31], #0x20
	0x01CEA6A0 B 0x3A5F298
	0x01CEA6A4 BL 0x1B6EA1C
	0x01CEA6A8 STR X30, [X31 - 0x30]!
	0x01CEA6AC STP X22, X21, [X31 + 0x10]
	0x01CEA6B0 STP X20, X19, [X31 + 0x20]
	0x01CEA6B4 ADRP X22, 0x2539000
	0x01CEA6B8 ADRP X21, 0x2265000
	0x01CEA6BC LDRB W8, [X22 + 0x688]
	0x01CEA6C0 LDR X21, [X21 + 0xE08]
	0x01CEA6C4 MOV W19, W1
	0x01CEA6C8 MOV X20, X0
	0x01CEA6CC TBNZ X8, 0x0, 0x1CEA6E4
	0x01CEA6D0 ADRP X0, 0x2265000
	0x01CEA6D4 LDR X0, [X0 + 0xE08]
	0x01CEA6D8 BL 0x1B6E7F0
	0x01CEA6DC MOVZ W8, 0x1
	0x01CEA6E0 STRB W8, [X22 + 0x688]
	0x01CEA6E4 LDR X0, [X21]
	0x01CEA6E8 LDR X20, [X20 + 0x20]
	0x01CEA6EC LDR W8, [X0 + 0xE0]
	0x01CEA6F0 CBNZ W8, 0x1CEA6F8
	0x01CEA6F4 BL 0x1B6E8F8
	0x01CEA6F8 CBZ X20, 0x1CEA724
	0x01CEA6FC LDR X8, [X21]
	0x01CEA700 AND W2, W19, 0x1
	0x01CEA704 MOV X0, X20
	0x01CEA708 LDP X20, X19, [X31 + 0x20]
	0x01CEA70C LDR X8, [X8 + 0xB8]
	0x01CEA710 LDP X22, X21, [X31 + 0x10]
	0x01CEA714 MOV X3, X31
	0x01CEA718 LDR W1, [X8 + 0x28]
	0x01CEA71C LDR X30, [X31], #0x30
	0x01CEA720 B 0x3A5EF90
	0x01CEA724 BL 0x1B6EA1C
	0x01CEA728 STR D8, [X31 - 0x40]!
	0x01CEA72C STP X30, X23, [X31 + 0x10]
	0x01CEA730 STP X22, X21, [X31 + 0x20]
	0x01CEA734 STP X20, X19, [X31 + 0x30]
	0x01CEA738 ADRP X22, 0x2539000
	0x01CEA73C ADRP X23, 0x2265000
	0x01CEA740 LDRB W8, [X22 + 0x689]
	0x01CEA744 LDR X23, [X23 + 0xE08]
	0x01CEA748 MOV V8.16B, V0.16B
	0x01CEA74C MOV W20, W2
	0x01CEA750 MOV W21, W1
	0x01CEA754 MOV X19, X0
	0x01CEA758 TBNZ X8, 0x0, 0x1CEA770
	0x01CEA75C ADRP X0, 0x2265000
	0x01CEA760 LDR X0, [X0 + 0xE08]
	0x01CEA764 BL 0x1B6E7F0
	0x01CEA768 MOVZ W8, 0x1
	0x01CEA76C STRB W8, [X22 + 0x689]
	0x01CEA770 LDR X0, [X23]
	0x01CEA774 LDR X22, [X19 + 0x20]
	0x01CEA778 LDR W8, [X0 + 0xE0]
	0x01CEA77C CBNZ W8, 0x1CEA784
	0x01CEA780 BL 0x1B6E8F8
	0x01CEA784 CBZ X22, 0x1CEA7F4
	0x01CEA788 LDR X8, [X23]
	0x01CEA78C AND W2, W21, 0x1
	0x01CEA790 MOV X0, X22
	0x01CEA794 MOV X3, X31
	0x01CEA798 LDR X8, [X8 + 0xB8]
	0x01CEA79C LDR W1, [X8]
	0x01CEA7A0 BL 0x3A5EF90
	0x01CEA7A4 LDR X0, [X19 + 0x20]
	0x01CEA7A8 CBZ X0, 0x1CEA7F4
	0x01CEA7AC LDR X8, [X23]
	0x01CEA7B0 AND W2, W20, 0x1
	0x01CEA7B4 MOV X3, X31
	0x01CEA7B8 LDR X8, [X8 + 0xB8]
	0x01CEA7BC LDR W1, [X8 + 0x4]
	0x01CEA7C0 BL 0x3A5EF90
	0x01CEA7C4 LDR X0, [X19 + 0x20]
	0x01CEA7C8 CBZ X0, 0x1CEA7F4
	0x01CEA7CC LDR X8, [X23]
	0x01CEA7D0 LDP X20, X19, [X31 + 0x30]
	0x01CEA7D4 LDP X22, X21, [X31 + 0x20]
	0x01CEA7D8 LDP X30, X23, [X31 + 0x10]
	0x01CEA7DC LDR X8, [X8 + 0xB8]
	0x01CEA7E0 MOV V0.16B, V8.16B
	0x01CEA7E4 MOV X2, X31
	0x01CEA7E8 LDR W1, [X8 + 0xC]
	0x01CEA7EC LDR V8, [X31], #0x40
	0x01CEA7F0 B 0x3A5EDB8
	0x01CEA7F4 BL 0x1B6EA1C
	0x01CEA7F8 ADRP X8, 0xFFFFFFFFFEDC3000
	0x01CEA7FC LDR V0, [X8 + 0xAE0]
	0x01CEA800 MOVZ W8, 0x1
	0x01CEA804 MOVZ W9, 0x3F800000
	0x01CEA808 MOV X1, X31
	0x01CEA80C STR W31, [X0 + 0x48]
	0x01CEA810 STRB W8, [X0 + 0x4C]
	0x01CEA814 STR D0, [X0 + 0x40]
	0x01CEA818 STR W9, [X0 + 0x80]
	0x01CEA81C B 0x3A9EEE4
	0x01CEA820 STP X29, X30, [X31 - 0x60]!
	0x01CEA824 STP X28, X27, [X31 + 0x10]
	0x01CEA828 STP X26, X25, [X31 + 0x20]
	0x01CEA82C STP X24, X23, [X31 + 0x30]
	0x01CEA830 STP X22, X21, [X31 + 0x40]
	0x01CEA834 STP X20, X19, [X31 + 0x50]
	0x01CEA838 ADRP X20, 0x2539000
	0x01CEA83C ADRP X21, 0x2266000
	0x01CEA840 ADRP X19, 0x2265000
	0x01CEA844 ADRP X29, 0x2266000
	0x01CEA848 ADRP X28, 0x2266000
	0x01CEA84C ADRP X27, 0x2266000
	0x01CEA850 ADRP X26, 0x2266000
	0x01CEA854 ADRP X25, 0x2266000
	0x01CEA858 ADRP X24, 0x2266000
	0x01CEA85C ADRP X23, 0x2266000
	0x01CEA860 ADRP X22, 0x2266000
	0x01CEA864 LDR X21, [X21 + 0x330]
	0x01CEA868 LDR X19, [X19 + 0xE08]
	0x01CEA86C LDR X29, [X29 + 0x338]
	0x01CEA870 LDR X28, [X28 + 0x340]
	0x01CEA874 LDR X27, [X27 + 0x348]
	0x01CEA878 LDR X26, [X26 + 0x350]
	0x01CEA87C LDR X25, [X25 + 0x358]
	0x01CEA880 LDRB W8, [X20 + 0x68A]
	0x01CEA884 LDR X24, [X24 + 0x360]
	0x01CEA888 LDR X23, [X23 + 0x368]
	0x01CEA88C LDR X22, [X22 + 0x370]
	0x01CEA890 TBNZ X8, 0x0, 0x1CEA92C
	0x01CEA894 ADRP X0, 0x2265000
	0x01CEA898 LDR X0, [X0 + 0xE08]
	0x01CEA89C BL 0x1B6E7F0
	0x01CEA8A0 ADRP X0, 0x2266000
	0x01CEA8A4 LDR X0, [X0 + 0x370]
	0x01CEA8A8 BL 0x1B6E7F0
	0x01CEA8AC ADRP X0, 0x2266000
	0x01CEA8B0 LDR X0, [X0 + 0x338]
	0x01CEA8B4 BL 0x1B6E7F0
	0x01CEA8B8 ADRP X0, 0x2266000
	0x01CEA8BC LDR X0, [X0 + 0x358]
	0x01CEA8C0 BL 0x1B6E7F0
	0x01CEA8C4 ADRP X0, 0x2266000
	0x01CEA8C8 LDR X0, [X0 + 0x378]
	0x01CEA8CC BL 0x1B6E7F0
	0x01CEA8D0 ADRP X0, 0x2266000
	0x01CEA8D4 LDR X0, [X0 + 0x348]
	0x01CEA8D8 BL 0x1B6E7F0
	0x01CEA8DC ADRP X0, 0x2266000
	0x01CEA8E0 LDR X0, [X0 + 0x330]
	0x01CEA8E4 BL 0x1B6E7F0
	0x01CEA8E8 ADRP X0, 0x2266000
	0x01CEA8EC LDR X0, [X0 + 0x368]
	0x01CEA8F0 BL 0x1B6E7F0
	0x01CEA8F4 ADRP X0, 0x2266000
	0x01CEA8F8 LDR X0, [X0 + 0x360]
	0x01CEA8FC BL 0x1B6E7F0
	0x01CEA900 ADRP X0, 0x2266000
	0x01CEA904 LDR X0, [X0 + 0x340]
	0x01CEA908 BL 0x1B6E7F0
	0x01CEA90C ADRP X0, 0x2266000
	0x01CEA910 LDR X0, [X0 + 0x350]
	0x01CEA914 BL 0x1B6E7F0
	0x01CEA918 ADRP X0, 0x2266000
	0x01CEA91C LDR X0, [X0 + 0x380]
	0x01CEA920 BL 0x1B6E7F0
	0x01CEA924 MOVZ W8, 0x1
	0x01CEA928 STRB W8, [X20 + 0x68A]
	0x01CEA92C LDR X0, [X21]
	0x01CEA930 MOV X1, X31
	0x01CEA934 BL 0x3A5EC3C
	0x01CEA938 LDR X8, [X19]
	0x01CEA93C MOV X1, X31
	0x01CEA940 LDR X8, [X8 + 0xB8]
	0x01CEA944 STR W0, [X8]
	0x01CEA948 LDR X0, [X29]
	0x01CEA94C BL 0x3A5EC3C
	0x01CEA950 LDR X8, [X19]
	0x01CEA954 MOV X1, X31
	0x01CEA958 LDR X8, [X8 + 0xB8]
	0x01CEA95C STR W0, [X8 + 0x4]
	0x01CEA960 LDR X0, [X28]
	0x01CEA964 BL 0x3A5EC3C
	0x01CEA968 LDR X8, [X19]
	0x01CEA96C MOV X1, X31
	0x01CEA970 LDR X8, [X8 + 0xB8]
	0x01CEA974 STR W0, [X8 + 0x8]
	0x01CEA978 LDR X0, [X27]
	0x01CEA97C BL 0x3A5EC3C
	0x01CEA980 LDR X8, [X19]
	0x01CEA984 MOV X1, X31
	0x01CEA988 LDR X8, [X8 + 0xB8]
	0x01CEA98C STR W0, [X8 + 0xC]
	0x01CEA990 LDR X0, [X26]
	0x01CEA994 BL 0x3A5EC3C
	0x01CEA998 LDR X8, [X19]
	0x01CEA99C MOV X1, X31
	0x01CEA9A0 LDR X8, [X8 + 0xB8]
	0x01CEA9A4 STR W0, [X8 + 0x10]
	0x01CEA9A8 LDR X0, [X25]
	0x01CEA9AC BL 0x3A5EC3C
	0x01CEA9B0 LDR X8, [X19]
	0x01CEA9B4 MOV X1, X31
	0x01CEA9B8 LDR X8, [X8 + 0xB8]
	0x01CEA9BC STR W0, [X8 + 0x14]
	0x01CEA9C0 LDR X0, [X24]
	0x01CEA9C4 BL 0x3A5EC3C
	0x01CEA9C8 LDR X8, [X19]
	0x01CEA9CC MOV X1, X31
	0x01CEA9D0 LDR X8, [X8 + 0xB8]
	0x01CEA9D4 STR W0, [X8 + 0x18]
	0x01CEA9D8 LDR X0, [X23]
	0x01CEA9DC BL 0x3A5EC3C
	0x01CEA9E0 LDR X8, [X19]
	0x01CEA9E4 MOV X1, X31
	0x01CEA9E8 LDR X8, [X8 + 0xB8]
	0x01CEA9EC STR W0, [X8 + 0x1C]
	0x01CEA9F0 LDR X0, [X22]
	0x01CEA9F4 BL 0x3A5EC3C
	0x01CEA9F8 LDR X8, [X19]
	0x01CEA9FC MOV X1, X31
	0x01CEAA00 LDR X8, [X8 + 0xB8]
	0x01CEAA04 STR W0, [X8 + 0x20]
	0x01CEAA08 ADRP X8, 0x2266000
	0x01CEAA0C LDR X8, [X8 + 0x378]
	0x01CEAA10 LDR X0, [X8]
	0x01CEAA14 BL 0x3A5EC3C
	0x01CEAA18 LDR X8, [X19]
	0x01CEAA1C MOV X1, X31
	0x01CEAA20 LDR X8, [X8 + 0xB8]
	0x01CEAA24 STR W0, [X8 + 0x24]
	0x01CEAA28 ADRP X8, 0x2266000
	0x01CEAA2C LDR X8, [X8 + 0x380]
	0x01CEAA30 LDR X0, [X8]
	0x01CEAA34 BL 0x3A5EC3C
	0x01CEAA38 LDR X8, [X19]
	0x01CEAA3C LDP X20, X19, [X31 + 0x50]
	0x01CEAA40 LDP X22, X21, [X31 + 0x40]
	0x01CEAA44 LDP X24, X23, [X31 + 0x30]
	0x01CEAA48 LDR X8, [X8 + 0xB8]
	0x01CEAA4C LDP X26, X25, [X31 + 0x20]
	0x01CEAA50 LDP X28, X27, [X31 + 0x10]
	0x01CEAA54 STR W0, [X8 + 0x28]
	0x01CEAA58 LDP X29, X30, [X31], #0x60
	0x01CEAA5C RET
	0x01CEAA60 STP X30, X19, [X31 - 0x10]!
	0x01CEAA64 LDR X8, [X0 + 0x50]
	0x01CEAA68 CBZ X8, 0x1CEAA78
	0x01CEAA6C LDR W0, [X8 + 0x3C]
	0x01CEAA70 LDP X30, X19, [X31], #0x10
	0x01CEAA74 RET
	0x01CEAA78 ADRP X0, 0x2263000
	0x01CEAA7C LDR X0, [X0 + 0x490]
	0x01CEAA80 BL 0x1B6E804
	0x01CEAA84 BL 0x1B6EA0C
	0x01CEAA88 MOV X19, X0
	0x01CEAA8C ADRP X0, 0x2266000
	0x01CEAA90 LDR X0, [X0 + 0x388]
	0x01CEAA94 BL 0x1B6E804
	0x01CEAA98 MOV X1, X0
	0x01CEAA9C MOV X0, X19
	0x01CEAAA0 MOV X2, X31
	0x01CEAAA4 BL 0x31E7550
	0x01CEAAA8 ADRP X0, 0x2266000
	0x01CEAAAC LDR X0, [X0 + 0x390]
	0x01CEAAB0 BL 0x1B6E804
	0x01CEAAB4 MOV X1, X0
	0x01CEAAB8 MOV X0, X19
	0x01CEAABC BL 0x1B6E8E8
	0x01CEAAC0 STP X30, X19, [X31 - 0x10]!
	0x01CEAAC4 LDR X8, [X0 + 0x50]
	0x01CEAAC8 CBZ X8, 0x1CEAAD8
	0x01CEAACC STR W1, [X8 + 0x3C]
	0x01CEAAD0 LDP X30, X19, [X31], #0x10
	0x01CEAAD4 RET
	0x01CEAAD8 ADRP X0, 0x2263000
	0x01CEAADC LDR X0, [X0 + 0x490]
	0x01CEAAE0 BL 0x1B6E804
	0x01CEAAE4 BL 0x1B6EA0C
	0x01CEAAE8 MOV X19, X0
	0x01CEAAEC ADRP X0, 0x2266000
	0x01CEAAF0 LDR X0, [X0 + 0x388]
	0x01CEAAF4 BL 0x1B6E804
	0x01CEAAF8 MOV X1, X0
	0x01CEAAFC MOV X0, X19
	0x01CEAB00 MOV X2, X31
	0x01CEAB04 BL 0x31E7550
	0x01CEAB08 ADRP X0, 0x2266000
	0x01CEAB0C LDR X0, [X0 + 0x398]
	0x01CEAB10 BL 0x1B6E804
	0x01CEAB14 MOV X1, X0
	0x01CEAB18 MOV X0, X19
	0x01CEAB1C BL 0x1B6E8E8
	0x01CEAB20 STR X30, [X31 - 0x20]!
	0x01CEAB24 STP X20, X19, [X31 + 0x10]
	0x01CEAB28 MOV X19, X0
	0x01CEAB2C LDR X0, [X0 + 0x1F0]
	0x01CEAB30 CBZ X0, 0x1CEAC1C
	0x01CEAB34 MOV X1, X31
	0x01CEAB38 BL 0x3A65B14
	0x01CEAB3C TBZ X0, 0x0, 0x1CEAB50
	0x01CEAB40 LDR X0, [X19 + 0x1F0]
	0x01CEAB44 CBZ X0, 0x1CEAC1C
	0x01CEAB48 MOV X1, X31
	0x01CEAB4C BL 0x3A65A98
	0x01CEAB50 MOV X0, X19

ISIL:
	001 Subtract X31, X31, 320
	002 Move [X31+160], D15
	003 Move [X31+168], D14
	004 Move [X31+176], D13
	005 Move [X31+184], D12
	006 Move [X31+192], D11
	007 Move [X31+200], D10
	008 Move [X31+208], D9
	009 Move [X31+216], D8
	010 Move [X31+224], X29
	011 Move [X31+232], X30
	012 Move [X31+240], X28
	013 Move [X31+248], X27
	014 Move [X31+256], X26
	015 Move [X31+264], X25
	016 Move [X31+272], X24
	017 Move [X31+280], X23
	018 Move [X31+288], X22
	019 Move [X31+296], X21
	020 Move [X31+304], X20
	021 Move [X31+312], X19
	022 Move X21, 0x253A000
	023 Move W8, [X21+1661]
	024 Move X19, X1
	025 Move X20, X0
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {68}
	030 Move X0, 0x2265000
	031 Move X0, [X0+2056]
	032 Call 0x1B6F7F0
	033 Move X0, 0x2267000
	034 Move X0, [X0+648]
	035 Call 0x1B6F7F0
	036 Move X0, 0x2267000
	037 Move X0, [X0+656]
	038 Call 0x1B6F7F0
	039 Move X0, 0x2267000
	040 Move X0, [X0+664]
	041 Call 0x1B6F7F0
	042 Move X0, 0x2265000
	043 Move X0, [X0+984]
	044 Call 0x1B6F7F0
	045 Move X0, 0x2267000
	046 Move X0, [X0+672]
	047 Call 0x1B6F7F0
	048 Move X0, 0x2267000
	049 Move X0, [X0+680]
	050 Call 0x1B6F7F0
	051 Move X0, 0x2266000
	052 Move X0, [X0+3632]
	053 Call 0x1B6F7F0
	054 Move X0, 0x2267000
	055 Move X0, [X0+688]
	056 Call 0x1B6F7F0
	057 Move X0, 0x2265000
	058 Move X0, [X0+680]
	059 Call 0x1B6F7F0
	060 Move X0, 0x2264000
	061 Move X0, [X0+1216]
	062 Call 0x1B6F7F0
	063 Move X0, 0x2267000
	064 Move X0, [X0+696]
	065 Call 0x1B6F7F0
	066 Move W8, 1
	067 Move [X21+1661], W8
	068 NotImplemented "Instruction MOVI not yet implemented."
	069 Move [X31+128], X31
	070 Move [X31+136], X31
	071 Move [X31+144], X31
	072 Move [X31+108], V0
	073 Move [X31+80], V0
	074 Move [X31+88], V0
	075 Compare X20, 0
	076 JumpIfEqual {356}
	077 Move X0, [X20+208]
	078 Compare X0, 0
	079 JumpIfEqual {356}
	080 Move X1, X31
	081 Call Transform.get_position, X0
	082 Move X8, [X20+184]
	083 Move [X31+40], S1
	084 Move [X31+48], S0
	085 Move [X31+36], S2
	086 Compare X8, 0
	087 JumpIfEqual {356}
	088 Move X9, 0x2267000
	089 Move X9, [X9+688]
	090 Move X20, 0x2267000
	091 Move X21, 0x2265000
	092 Move V8, [X8+72]
	093 Move X0, [X9]
	094 Move X20, [X20+680]
	095 Move X21, [X21+680]
	096 Call 0x1B6FA0C
	097 Move X1, [X20]
	098 Move X20, X0
	099 Call List`1<Object>..ctor, X0
	100 Move [X19], X20
	101 Move X0, [X21]
	102 Move W8, [X0+224]
	103 Compare W8, 0
	104 JumpIfNotEqual {106}
	105 Call 0x1B6F8F8
	106 Move X20, 0x253A000
	107 Move W8, [X20+1290]
	108 Compare W8, 0
	109 JumpIfNotEqual {115}
	110 Move X0, 0x2265000
	111 Move X0, [X0+680]
	112 Call 0x1B6F7F0
	113 Move W8, 1
	114 Move [X20+1290], W8
	115 Move X0, [X21]
	116 Move W8, [X0+224]
	117 Compare W8, 0
	118 JumpIfNotEqual {121}
	119 Call 0x1B6F8F8
	120 Move X0, [X21]
	121 Move X8, [X0+184]
	122 Move X0, [X8]
	123 Compare X0, 0
	124 JumpIfEqual {356}
	125 Move X8, 0x2265000
	126 Move X8, [X8+2056]
	127 Move X1, [X8]
	128 Call Dictionary`2<UInt32, Object>.get_Values, X0
	129 Compare X0, 0
	130 JumpIfEqual {356}
	131 Move X8, 0x2267000
	132 Move X8, [X8+696]
	133 Move X25, 0x2267000
	134 Move X25, [X25+656]
	135 Move S0, 0.5
	136 Move X1, [X8]
	137 Multiply S0, S8, S0
	138 Add X8, X31, 56
	139 Move [X31+28], S0
	140 Call ValueCollection<UInt32, Object>.GetEnumerator, X0
	141 Move X9, -19136512
	142 NotImplemented "Instruction LDUR not yet implemented."
	143 Move V1, [X9+2916]
	144 Move X20, 0x2264000
	145 Move X10, -19136512
	146 Move X9, -19136512
	147 Move X8, [X31+72]
	148 Move X20, [X20+1160]
	149 Move [X31+32], S1
	150 Move V1, [X10+3612]
	151 Move [X31+8], V0
	152 Move V0, [X9+2804]
	153 Move [X31+144], X8
	154 Move [X31+24], S1
	155 Move X21, 0x2264000
	156 Move [X31+20], S0
	157 Move X21, [X21+1152]
	158 Move W29, 0x43C80000
	159 Move X24, 0x253A000
	160 Move W28, 1
	161 Move W27, 0x425C0000
	162 Move X26, 0x253A000
	163 Move X1, [X25]
	164 Add X0, X31, 128
	165 Call Enumerator<UInt32, Object>.MoveNext, X0
	166 Move TEMP, X0
	167 And TEMP, TEMP, 1
	168 Compare TEMP, 1
	169 JumpIfNotEqual {320}
	170 Move X22, [X31+144]
	171 Compare X22, 0
	172 JumpIfEqual {353}
	173 Move X0, X22
	174 Move X1, X31
	175 Call NetPlayer.get_isDie, X0
	176 Move TEMP, X0
	177 And TEMP, TEMP, 1
	178 Compare TEMP, 1
	179 JumpIfEqual {163}
	180 Move X0, [X22+136]
	181 Compare X0, 0
	182 JumpIfEqual {354}
	183 Move X1, X31
	184 Call Transform.get_position, X0
	185 Move X0, [X22+136]
	186 Compare X0, 0
	187 JumpIfEqual {355}
	188 Move V9, V0
	189 Move V11, V1
	190 Move V13, V2
	191 Move X1, X31
	192 Call Transform.get_forward, X0
	193 Move V15, V0
	194 Move V0, [X31+44]
	195 Move [X31+48], S9
	196 Move [X31+56], S11
	197 Move V8, V1
	198 Subtract S9, S0, S9
	199 Move V0, [X31+40]
	200 Subtract S14, S0, S11
	201 Move V0, [X31+36]
	202 Multiply S1, S14, S14
	203 Subtract S11, S0, S13
	204 Multiply S0, S9, S9
	205 Add S0, S0, S1
	206 Multiply S1, S11, S11
	207 Add S12, S1, S0
	208 Move S0, W29
	209 NotImplemented "Instruction FCMP not yet implemented."
	210 Move W8, [X24+1089]
	211 Move V10, V2
	212 Compare W8, 0
	213 JumpIfNotEqual {217}
	214 Move X0, X20
	215 Call 0x1B6F7F0
	216 Move [X24+1089], W28
	217 Move X0, [X20]
	218 Move W8, [X0+224]
	219 Compare W8, 0
	220 JumpIfNotEqual {222}
	221 Call 0x1B6F8F8
	222 Move V0, [X31+32]
	223 NotImplemented "Instruction FSQRT not yet implemented."
	224 NotImplemented "Instruction FCMP not yet implemented."
	225 NotImplemented "Instruction FDIV not yet implemented."
	226 NotImplemented "Instruction FDIV not yet implemented."
	227 NotImplemented "Instruction FDIV not yet implemented."
	228 Move V11, V0
	229 Move W8, [X26+1087]
	230 Compare W8, 0
	231 JumpIfNotEqual {235}
	232 Move X0, X21
	233 Call 0x1B6F7F0
	234 Move [X26+1087], W28
	235 Move X8, [X21]
	236 Move X8, [X8+184]
	237 Move S11, [X8]
	238 Move S14, [X8+4]
	239 Move V9, [X8+8]
	240 Multiply S0, S15, S11
	241 Multiply S1, S8, S14
	242 Add S0, S0, S1
	243 Multiply S1, S10, S9
	244 Add S8, S1, S0
	245 NotImplemented "Instruction FCMP not yet implemented."
	246 Move V0, [X31+28]
	247 NotImplemented "Instruction FDIV not yet implemented."
	248 Call 0x3D1A910
	249 Move V1, [X31+24]
	250 Multiply S0, S0, S1
	251 Move S1, W27
	252 Add S0, S0, S1
	253 Move V1, [X31+20]
	254 Multiply S0, S0, S1
	255 Call 0x3D1A900
	256 NotImplemented "Instruction FCMP not yet implemented."
	257 Move X8, 0x2265000
	258 Move X8, [X8+984]
	259 Move X0, [X8]
	260 Move W8, [X0+224]
	261 Compare W8, 0
	262 JumpIfEqual {264}
	263 Move V8, [X31+52]
	264 Call 0x1B6F8F8
	265 Move V8, [X31+52]
	266 Move X8, 0x2265000
	267 Move X8, [X8+984]
	268 Move X0, [X8]
	269 Move X8, [X0+184]
	270 Move W0, [X8]
	271 Move X1, X31
	272 Call LayerMask.op_Implicit, X0
	273 Move X8, 0x2264000
	274 Move X8, [X8+1216]
	275 Move W23, W0
	276 Move X0, [X8]
	277 Move W8, [X0+224]
	278 Compare W8, 0
	279 JumpIfNotEqual {281}
	280 Call 0x1B6F8F8
	281 Move V0, [X31+48]
	282 Add X0, X31, 80
	283 Move V1, V8
	284 Move V2, V13
	285 Move V3, V11
	286 Move V4, V14
	287 Move V5, V9
	288 Move V6, V12
	289 Move W1, W23
	290 Move X2, X31
	291 Call Physics.Raycast, X0, X1, X2, V0, X3
	292 Move TEMP, X0
	293 And TEMP, TEMP, 1
	294 Compare TEMP, 1
	295 JumpIfEqual {163}
	296 Move X0, [X19]
	297 Compare X0, 0
	298 JumpIfEqual {357}
	299 Move X9, 0x2267000
	300 Move W10, [X0+28]
	301 Move X8, [X0+16]
	302 Move X9, [X9+672]
	303 Add W10, W10, 1
	304 Move X9, [X9]
	305 Move [X0+28], W10
	306 Compare X8, 0
	307 JumpIfEqual {358}
	308 NotImplemented "Instruction LDRSW not yet implemented."
	309 Move W11, [X8+24]
	310 NotImplemented "Instruction CMP not yet implemented."
	311 Add W9, W10, 1
	312 Add X8, X8, X10
	313 Move [X0+24], W9
	314 Move [X8+32], X22
	315 Move X8, [X9+32]
	316 Move X8, [X8+192]
	317 Move X2, [X8+112]
	318 Move X1, X22
	319 Call List`1<Object>.AddWithResize, X0, X1
	320 Move X8, 0x2267000
	321 Move X8, [X8+648]
	322 Add X0, X31, 128
	323 Move X1, [X8]
	324 Call Enumerator<UInt32, Object>.Dispose, X0
	325 Move X8, [X19]
	326 Compare X8, 0
	327 JumpIfEqual {356}
	328 Move W8, [X8+24]
	329 Move X20, [X31+304]
	330 Move X19, [X31+312]
	331 Move X22, [X31+288]
	332 Move X21, [X31+296]
	333 Move X24, [X31+272]
	334 Move X23, [X31+280]
	335 Move X26, [X31+256]
	336 Move X25, [X31+264]
	337 Move X28, [X31+240]
	338 Move X27, [X31+248]
	339 Move X29, [X31+224]
	340 Move X30, [X31+232]
	341 Move D9, [X31+208]
	342 Move D8, [X31+216]
	343 Move D11, [X31+192]
	344 Move D10, [X31+200]
	345 Move D13, [X31+176]
	346 Move D12, [X31+184]
	347 Move D15, [X31+160]
	348 Move D14, [X31+168]
	349 NotImplemented "Instruction CMP not yet implemented."
	350 NotImplemented "Instruction CSET not yet implemented."
	351 Add X31, X31, 320
	352 Return X0
	353 Call 0x1B6FA1C
	354 Call 0x1B6FA1C
	355 Call 0x1B6FA1C
	356 Call 0x1B6FA1C
	357 Call 0x1B6FA1C
	358 Call 0x1B6FA1C
	359 Move X20, X0
	360 NotImplemented "Instruction CMP not yet implemented."
	361 Move X0, X20
	362 Call 0x3D1A840
	363 Move X21, [X0]
	364 Call 0x3D1A850
	365 Move X8, 0x2267000
	366 Move X8, [X8+648]
	367 Add X0, X31, 128
	368 Move X1, [X8]
	369 Call Enumerator<UInt32, Object>.Dispose, X0
	370 Compare X21, 0
	371 JumpIfEqual {325}
	372 Move X0, X21
	373 Call 0x1B6FA14
	374 Move X21, X31
	375 Move X20, X0
	376 Move X8, 0x2267000
	377 Move X8, [X8+648]
	378 Move X1, [X8]
	379 Add X0, X31, 128
	380 Call Enumerator<UInt32, Object>.Dispose, X0
	381 Compare X21, 0
	382 JumpIfNotEqual {385}
	383 Move X0, X20
	384 Call 0x1C8518C
	385 Move X0, X21
	386 Call 0x1B6FA14
	387 Call 0x18F56A8

