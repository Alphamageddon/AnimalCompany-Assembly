Type: AnimalCompany.MobDetectionUtil

Method: System.Boolean TryGetPlayersBySight(AnimalCompany.MobController mob, ref System.Collections.Generic.List`1<AnimalCompany.NetPlayer> players)

Disassembly:
	0x01DEB6E8 ADRP X0, 0x2308000
	0x01DEB6EC LDR X0, [X0 + 0x5B0]
	0x01DEB6F0 BL 0x1C16D08
	0x01DEB6F4 BL 0x1C16F10
	0x01DEB6F8 MOV X19, X0
	0x01DEB6FC ADRP X0, 0x230D000
	0x01DEB700 LDR X0, [X0 + 0xF18]
	0x01DEB704 BL 0x1C16D08
	0x01DEB708 MOV X1, X0
	0x01DEB70C MOV X0, X19
	0x01DEB710 MOV X2, X31
	0x01DEB714 BL 0x337DF1C
	0x01DEB718 ADRP X0, 0x230D000
	0x01DEB71C LDR X0, [X0 + 0xF20]
	0x01DEB720 BL 0x1C16D08
	0x01DEB724 MOV X1, X0
	0x01DEB728 MOV X0, X19
	0x01DEB72C BL 0x1C16DEC
	0x01DEB730 STP X30, X21, [X31 - 0x20]!
	0x01DEB734 STP X20, X19, [X31 + 0x10]
	0x01DEB738 ADRP X21, 0x25ED000
	0x01DEB73C LDRB W8, [X21 + 0xCC5]
	0x01DEB740 MOV X19, X1
	0x01DEB744 MOV X20, X0
	0x01DEB748 TBNZ X8, 0x0, 0x1DEB760
	0x01DEB74C ADRP X0, 0x230D000
	0x01DEB750 LDR X0, [X0 + 0xF28]
	0x01DEB754 BL 0x1C16CF4
	0x01DEB758 MOVZ W8, 0x1
	0x01DEB75C STRB W8, [X21 + 0xCC5]
	0x01DEB760 LDR X8, [X20 + 0x50]
	0x01DEB764 CBZ X8, 0x1DEB794
	0x01DEB768 ADRP X20, 0x230D000
	0x01DEB76C LDR X20, [X20 + 0xF28]
	0x01DEB770 ADD X1, X8, 0x78

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x25EE000
	007 Move X22, 0x230E000
	008 Move W8, [X21+3352]
	009 Move X22, [X22+3136]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x230E000
	017 Move X0, [X0+3248]
	018 Call 0x1C17CF4
	019 Move X0, 0x230E000
	020 Move X0, [X0+3136]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+3352], W8
	024 Move X0, [X22]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X0, X20
	030 Move X1, X19
	031 Call MobDetectionUtil.GetPlayersBySight, X0, X1
	032 Move X8, [X19]
	033 Compare X8, 0
	034 JumpIfEqual {44}
	035 Move W8, [X8+24]
	036 Move X20, [X31+32]
	037 Move X19, [X31+40]
	038 Move X22, [X31+16]
	039 Move X21, [X31+24]
	040 NotImplemented "Instruction CMP not yet implemented."
	041 NotImplemented "Instruction CSET not yet implemented."
	042 Move X30, [X31+48]
	043 Return X0
	044 Call 0x1C17F20

Method: System.Void GetPlayersBySight(AnimalCompany.MobController mob, ref System.Collections.Generic.List`1<AnimalCompany.NetPlayer> players)

Disassembly:
	0x01DF7C74 TBNZ X8, 0x0, 0x1DF7C8C
	0x01DF7C78 ADRP X0, 0x2300000
	0x01DF7C7C LDR X0, [X0 + 0x860]
	0x01DF7C80 BL 0x1C16CF4
	0x01DF7C84 MOVZ W8, 0x1
	0x01DF7C88 STRB W8, [X21 + 0xD14]
	0x01DF7C8C CBZ X19, 0x1DF7CE8
	0x01DF7C90 ADRP X9, 0x2300000
	0x01DF7C94 LDR X9, [X9 + 0x860]
	0x01DF7C98 MOVZ W8, 0x1
	0x01DF7C9C LDR V0, [X20 + 0x24]
	0x01DF7CA0 STRB W8, [X19 + 0x58]
	0x01DF7CA4 LDR X8, [X19]
	0x01DF7CA8 LDR X1, [X9]
	0x01DF7CAC LDRB W10, [X8 + 0x130]
	0x01DF7CB0 LDRB W9, [X1 + 0x130]
	0x01DF7CB4 CMP W10, W9
	0x01DF7CB8 B.CC 0x1DF7CE0
	0x01DF7CBC LDR X8, [X8 + 0xC8]
	0x01DF7CC0 ADD X8, X8, X9, 0x3, LSL
	0x01DF7CC4 LDUR X8, [X8 - 0x8]
	0x01DF7CC8 CMP X8, X1
	0x01DF7CCC B.NE 0x1DF7CE0
	0x01DF7CD0 MOV X0, X19
	0x01DF7CD4 LDP X20, X19, [X31 + 0x10]
	0x01DF7CD8 LDP X30, X21, [X31], #0x20
	0x01DF7CDC B 0x1DF7178
	0x01DF7CE0 MOV X0, X19
	0x01DF7CE4 BL 0x1C171E0
	0x01DF7CE8 BL 0x1C16F20
	0x01DF7CEC STR X30, [X31 - 0x20]!
	0x01DF7CF0 STP X20, X19, [X31 + 0x10]
	0x01DF7CF4 ADRP X20, 0x25E1000
	0x01DF7CF8 LDRB W8, [X20 + 0xD15]
	0x01DF7CFC MOV X19, X0
	0x01DF7D00 TBNZ X8, 0x0, 0x1DF7D18
	0x01DF7D04 ADRP X0, 0x2300000
	0x01DF7D08 LDR X0, [X0 + 0x860]
	0x01DF7D0C BL 0x1C16CF4
	0x01DF7D10 MOVZ W8, 0x1
	0x01DF7D14 STRB W8, [X20 + 0xD15]
	0x01DF7D18 CBZ X19, 0x1DF7D70
	0x01DF7D1C ADRP X9, 0x2300000
	0x01DF7D20 LDR X9, [X9 + 0x860]
	0x01DF7D24 MOVZ W8, 0x1
	0x01DF7D28 STRB W8, [X19 + 0x58]
	0x01DF7D2C LDR X8, [X19]
	0x01DF7D30 LDR X1, [X9]
	0x01DF7D34 LDRB W10, [X8 + 0x130]
	0x01DF7D38 LDRB W9, [X1 + 0x130]
	0x01DF7D3C CMP W10, W9
	0x01DF7D40 B.CC 0x1DF7D68
	0x01DF7D44 LDR X8, [X8 + 0xC8]
	0x01DF7D48 ADD X8, X8, X9, 0x3, LSL
	0x01DF7D4C LDUR X8, [X8 - 0x8]
	0x01DF7D50 CMP X8, X1
	0x01DF7D54 B.NE 0x1DF7D68
	0x01DF7D58 MOV X0, X19
	0x01DF7D5C LDP X20, X19, [X31 + 0x10]
	0x01DF7D60 LDR X30, [X31], #0x20
	0x01DF7D64 B 0x1DF73D0
	0x01DF7D68 MOV X0, X19
	0x01DF7D6C BL 0x1C171E0
	0x01DF7D70 BL 0x1C16F20
	0x01DF7D74 STP X30, X21, [X31 - 0x20]!
	0x01DF7D78 STP X20, X19, [X31 + 0x10]
	0x01DF7D7C ADRP X21, 0x25E1000
	0x01DF7D80 LDRB W8, [X21 + 0xD16]
	0x01DF7D84 MOV X20, X1
	0x01DF7D88 MOV X19, X0
	0x01DF7D8C TBNZ X8, 0x0, 0x1DF7DA4
	0x01DF7D90 ADRP X0, 0x2300000
	0x01DF7D94 LDR X0, [X0 + 0x860]
	0x01DF7D98 BL 0x1C16CF4
	0x01DF7D9C MOVZ W8, 0x1
	0x01DF7DA0 STRB W8, [X21 + 0xD16]
	0x01DF7DA4 CBZ X19, 0x1DF7E00
	0x01DF7DA8 ADRP X9, 0x2300000
	0x01DF7DAC LDR X9, [X9 + 0x860]
	0x01DF7DB0 MOVZ W8, 0x1
	0x01DF7DB4 LDR V0, [X20 + 0x24]
	0x01DF7DB8 STRB W8, [X19 + 0x58]
	0x01DF7DBC LDR X8, [X19]
	0x01DF7DC0 LDR X1, [X9]
	0x01DF7DC4 LDRB W10, [X8 + 0x130]
	0x01DF7DC8 LDRB W9, [X1 + 0x130]
	0x01DF7DCC CMP W10, W9
	0x01DF7DD0 B.CC 0x1DF7DF8
	0x01DF7DD4 LDR X8, [X8 + 0xC8]
	0x01DF7DD8 ADD X8, X8, X9, 0x3, LSL
	0x01DF7DDC LDUR X8, [X8 - 0x8]
	0x01DF7DE0 CMP X8, X1
	0x01DF7DE4 B.NE 0x1DF7DF8
	0x01DF7DE8 MOV X0, X19
	0x01DF7DEC LDP X20, X19, [X31 + 0x10]
	0x01DF7DF0 LDP X30, X21, [X31], #0x20
	0x01DF7DF4 B 0x1DF7560
	0x01DF7DF8 MOV X0, X19
	0x01DF7DFC BL 0x1C171E0
	0x01DF7E00 BL 0x1C16F20
	0x01DF7E04 LDR V0, [X0 + 0x48]
	0x01DF7E08 FMUL S0, S0, S0
	0x01DF7E0C RET
	0x01DF7E10 LDR V0, [X0 + 0x80]
	0x01DF7E14 FMUL S0, S0, S0
	0x01DF7E18 RET
	0x01DF7E1C STP X30, X21, [X31 - 0x20]!
	0x01DF7E20 STP X20, X19, [X31 + 0x10]
	0x01DF7E24 ADRP X21, 0x25E1000
	0x01DF7E28 ADRP X20, 0x22FC000
	0x01DF7E2C LDRB W8, [X21 + 0xD17]
	0x01DF7E30 LDR X20, [X20 + 0x638]
	0x01DF7E34 MOV X19, X0
	0x01DF7E38 TBNZ X8, 0x0, 0x1DF7E50
	0x01DF7E3C ADRP X0, 0x22FC000
	0x01DF7E40 LDR X0, [X0 + 0x638]
	0x01DF7E44 BL 0x1C16CF4
	0x01DF7E48 MOVZ W8, 0x1
	0x01DF7E4C STRB W8, [X21 + 0xD17]
	0x01DF7E50 ADRP X8, 0xFFFFFFFFFECF6000
	0x01DF7E54 LDR V0, [X8 + 0x908]
	0x01DF7E58 MOVZ W8, 0x3F800000
	0x01DF7E5C STR W8, [X19 + 0x28]
	0x01DF7E60 MOVZ W1, 0x1
	0x01DF7E64 STR D0, [X19 + 0x20]
	0x01DF7E68 LDR X0, [X20]
	0x01DF7E6C BL 0x1C16D6C
	0x01DF7E70 CBZ X0, 0x1DF7F80
	0x01DF7E74 LDR W8, [X0 + 0x18]
	0x01DF7E78 CBZ W8, 0x1DF7F7C
	0x01DF7E7C MOVZ W8, 0x40400000
	0x01DF7E80 STR W8, [X0 + 0x20]
	0x01DF7E84 STR X0, [X19 + 0x30]
	0x01DF7E88 LDR X0, [X20]
	0x01DF7E8C MOVZ W1, 0x2
	0x01DF7E90 BL 0x1C16D6C
	0x01DF7E94 CBZ X0, 0x1DF7F80
	0x01DF7E98 LDR W8, [X0 + 0x18]
	0x01DF7E9C CBZ W8, 0x1DF7F7C
	0x01DF7EA0 MOVZ W9, 0x40E00000
	0x01DF7EA4 CMP W8, 0x1
	0x01DF7EA8 STR W9, [X0 + 0x20]
	0x01DF7EAC B.EQ 0x1DF7F7C
	0x01DF7EB0 ADRP X8, 0xFFFFFFFFFECF4000
	0x01DF7EB4 LDR V0, [X8 + 0x5D]
	0x01DF7EB8 MOVZ W8, 0x41400000
	0x01DF7EBC STR W8, [X0 + 0x24]
	0x01DF7EC0 STR X0, [X19 + 0x38]
	0x01DF7EC4 STR V0, [X19 + 0x4]
	0x01DF7EC8 LDR X0, [X20]
	0x01DF7ECC MOVZ W1, 0x1
	0x01DF7ED0 BL 0x1C16D6C
	0x01DF7ED4 CBZ X0, 0x1DF7F80
	0x01DF7ED8 LDR W8, [X0 + 0x18]
	0x01DF7EDC CBZ W8, 0x1DF7F7C
	0x01DF7EE0 MOVZ W8, 0x40400000
	0x01DF7EE4 STR W8, [X0 + 0x20]
	0x01DF7EE8 STR X0, [X19 + 0x58]
	0x01DF7EEC LDR X0, [X20]
	0x01DF7EF0 MOVZ W1, 0x1
	0x01DF7EF4 BL 0x1C16D6C
	0x01DF7EF8 CBZ X0, 0x1DF7F80
	0x01DF7EFC LDR W8, [X0 + 0x18]
	0x01DF7F00 CBZ W8, 0x1DF7F7C
	0x01DF7F04 MOVZ W8, 0x42C80000
	0x01DF7F08 FMOV V0.2S, 0x0
	0x01DF7F0C MOVZ W9, 0x42DC0000
	0x01DF7F10 STR W8, [X0 + 0x20]
	0x01DF7F14 STR X0, [X19 + 0x60]
	0x01DF7F18 STR D0, [X19 + 0x68]
	0x01DF7F1C STR W9, [X19 + 0x70]
	0x01DF7F20 LDR X0, [X20]
	0x01DF7F24 MOVZ W1, 0x1
	0x01DF7F28 BL 0x1C16D6C
	0x01DF7F2C CBZ X0, 0x1DF7F80
	0x01DF7F30 LDR W8, [X0 + 0x18]
	0x01DF7F34 CBZ W8, 0x1DF7F7C
	0x01DF7F38 ADRP X9, 0xFFFFFFFFFECF6000
	0x01DF7F3C LDR V0, [X9 + 0xB50]
	0x01DF7F40 MOVZ W8, 0x41000000
	0x01DF7F44 MOVZ W10, 0x3F800000
	0x01DF7F48 MOVZ W11, 0x1
	0x01DF7F4C MOVZ W12, 0x42700000
	0x01DF7F50 STR W8, [X0 + 0x20]
	0x01DF7F54 STR X0, [X19 + 0x78]
	0x01DF7F58 STR W10, [X19 + 0x88]
	0x01DF7F5C STRB W11, [X19 + 0x8C]
	0x01DF7F60 STR D0, [X19 + 0x80]
	0x01DF7F64 STR W12, [X19 + 0x90]
	0x01DF7F68 MOV X0, X19
	0x01DF7F6C LDP X20, X19, [X31 + 0x10]
	0x01DF7F70 MOV X1, X31
	0x01DF7F74 LDP X30, X21, [X31], #0x20
	0x01DF7F78 B 0x3C36D2C
	0x01DF7F7C BL 0x1C16F28
	0x01DF7F80 BL 0x1C16F20
	0x01DF7F84 SUB X31, X31, 0x80
	0x01DF7F88 STR D14, [X31 + 0x30]
	0x01DF7F8C STP D13, D12, [X31 + 0x38]
	0x01DF7F90 STP D11, D10, [X31 + 0x48]
	0x01DF7F94 STP D9, D8, [X31 + 0x58]
	0x01DF7F98 STR X30, [X31 + 0x68]
	0x01DF7F9C STP X20, X19, [X31 + 0x70]
	0x01DF7FA0 ADRP X20, 0x25E1000
	0x01DF7FA4 ADRP X19, 0x22FC000
	0x01DF7FA8 LDRB W8, [X20 + 0xD1B]
	0x01DF7FAC LDR X19, [X19 + 0x5D8]
	0x01DF7FB0 MOV V8.16B, V6.16B
	0x01DF7FB4 MOV V9.16B, V5.16B
	0x01DF7FB8 MOV V10.16B, V4.16B
	0x01DF7FBC MOV V11.16B, V3.16B
	0x01DF7FC0 MOV V12.16B, V2.16B
	0x01DF7FC4 MOV V13.16B, V1.16B
	0x01DF7FC8 MOV V14.16B, V0.16B
	0x01DF7FCC TBNZ X8, 0x0, 0x1DF7FF0
	0x01DF7FD0 ADRP X0, 0x22FC000
	0x01DF7FD4 LDR X0, [X0 + 0x5D8]
	0x01DF7FD8 BL 0x1C16CF4
	0x01DF7FDC ADRP X0, 0x22FC000
	0x01DF7FE0 LDR X0, [X0 + 0x5F8]
	0x01DF7FE4 BL 0x1C16CF4
	0x01DF7FE8 MOVZ W8, 0x1
	0x01DF7FEC STRB W8, [X20 + 0xD1B]
	0x01DF7FF0 LDR X0, [X19]
	0x01DF7FF4 MOVI V0.2D, 0x0
	0x01DF7FF8 STUR V0, [X31 + 0x1C]
	0x01DF7FFC STP V0, V0, [X31]
	0x01DF8000 ADRP X20, 0x22FB000
	0x01DF8004 LDR W8, [X0 + 0xE0]
	0x01DF8008 B 0x3EB1504
	0x01DF800C CBNZ W8, 0x1DF8018
	0x01DF8010 BL 0x1C16DFC
	0x01DF8014 LDR X0, [X19]
	0x01DF8018 LDR X8, [X0 + 0xB8]
	0x01DF801C MOV X1, X31
	0x01DF8020 LDR W0, [X8]
	0x01DF8024 BL 0x3C35CB8
	0x01DF8028 LDR X8, [X20]
	0x01DF802C MOV W19, W0
	0x01DF8030 LDR W9, [X8 + 0xE0]
	0x01DF8034 CBNZ W9, 0x1DF8040
	0x01DF8038 MOV X0, X8
	0x01DF803C BL 0x1C16DFC
	0x01DF8040 ADD X0, X31, 0x0
	0x01DF8044 MOV V0.16B, V14.16B
	0x01DF8048 MOV V1.16B, V13.16B
	0x01DF804C MOV V2.16B, V12.16B
	0x01DF8050 MOV V3.16B, V11.16B
	0x01DF8054 MOV V4.16B, V10.16B
	0x01DF8058 MOV V5.16B, V9.16B
	0x01DF805C MOV V6.16B, V8.16B
	0x01DF8060 MOV W1, W19
	0x01DF8064 MOV X2, X31
	0x01DF8068 BL 0x3C8B18C
	0x01DF806C LDP X20, X19, [X31 + 0x70]
	0x01DF8070 LDR X30, [X31 + 0x68]
	0x01DF8074 LDP D9, D8, [X31 + 0x58]
	0x01DF8078 LDP D11, D10, [X31 + 0x48]
	0x01DF807C LDP D13, D12, [X31 + 0x38]
	0x01DF8080 LDR V14, [X31 + 0x30]
	0x01DF8084 ORN W8, W31, W0, 0x0
	0x01DF8088 AND W0, W8, 0x1
	0x01DF808C ADD X31, X31, 0x80
	0x01DF8090 RET
	0x01DF8094 SUB X31, X31, 0xA0
	0x01DF8098 STR D12, [X31 + 0x40]
	0x01DF809C STP D11, D10, [X31 + 0x50]
	0x01DF80A0 STP D9, D8, [X31 + 0x60]
	0x01DF80A4 STP X30, X23, [X31 + 0x70]
	0x01DF80A8 STP X22, X21, [X31 + 0x80]
	0x01DF80AC STP X20, X19, [X31 + 0x90]
	0x01DF80B0 ADRP X21, 0x25E0000
	0x01DF80B4 LDRB W8, [X21 + 0xD1C]
	0x01DF80B8 MOV X19, X1
	0x01DF80BC MOV X20, X0
	0x01DF80C0 TBNZ X8, 0x0, 0x1DF8138
	0x01DF80C4 ADRP X0, 0x22FF000
	0x01DF80C8 LDR X0, [X0 + 0x850]
	0x01DF80CC BL 0x1C16CF4
	0x01DF80D0 ADRP X0, 0x2301000
	0x01DF80D4 LDR X0, [X0 + 0x418]
	0x01DF80D8 BL 0x1C16CF4
	0x01DF80DC ADRP X0, 0x2301000
	0x01DF80E0 LDR X0, [X0 + 0x420]
	0x01DF80E4 BL 0x1C16CF4
	0x01DF80E8 ADRP X0, 0x2301000
	0x01DF80EC LDR X0, [X0 + 0x428]
	0x01DF80F0 BL 0x1C16CF4
	0x01DF80F4 ADRP X0, 0x2301000
	0x01DF80F8 LDR X0, [X0 + 0x150]
	0x01DF80FC BL 0x1C16CF4
	0x01DF8100 ADRP X0, 0x2301000
	0x01DF8104 LDR X0, [X0 + 0x158]
	0x01DF8108 BL 0x1C16CF4
	0x01DF810C ADRP X0, 0x2300000
	0x01DF8110 LDR X0, [X0 + 0xCB0]
	0x01DF8114 BL 0x1C16CF4
	0x01DF8118 ADRP X0, 0x22FD000
	0x01DF811C LDR X0, [X0 + 0x9A0]
	0x01DF8120 BL 0x1C16CF4
	0x01DF8124 ADRP X0, 0x2301000
	0x01DF8128 LDR X0, [X0 + 0x430]
	0x01DF812C BL 0x1C16CF4
	0x01DF8130 MOVZ W8, 0x1
	0x01DF8134 STRB W8, [X21 + 0xD1C]
	0x01DF8138 STP X31, X31, [X31 + 0x20]
	0x01DF813C STR X31, [X31 + 0x30]
	0x01DF8140 LDR X8, [X19]
	0x01DF8144 CBZ X8, 0x1DF835C
	0x01DF8148 LDP W2, W9, [X8 + 0x18]
	0x01DF814C ADD W9, W9, 0x1
	0x01DF8150 CMP W2, 0x1
	0x01DF8154 STP W31, W9, [X8 + 0x18]
	0x01DF8158 B.LT 0x1DF816C
	0x01DF815C LDR X0, [X8 + 0x10]
	0x01DF8160 MOV W1, W31
	0x01DF8164 MOV X3, X31
	0x01DF8168 BL 0x339FA34
	0x01DF816C CBZ X20, 0x1DF835C
	0x01DF8170 LDR X0, [X20 + 0xD8]
	0x01DF8174 CBZ X0, 0x1DF835C

ISIL:
	001 Subtract X31, X31, 240
	002 Move [X31+80], D15
	003 Move [X31+88], D14
	004 Move [X31+96], D13
	005 Move [X31+104], D12
	006 Move [X31+112], D11
	007 Move [X31+120], D10
	008 Move [X31+128], D9
	009 Move [X31+136], D8
	010 Move [X31+144], X29
	011 Move [X31+152], X30
	012 Move [X31+160], X28
	013 Move [X31+168], X27
	014 Move [X31+176], X26
	015 Move [X31+184], X25
	016 Move [X31+192], X24
	017 Move [X31+200], X23
	018 Move [X31+208], X22
	019 Move [X31+216], X21
	020 Move [X31+224], X20
	021 Move [X31+232], X19
	022 Move X21, 0x25E2000
	023 Move W8, [X21+3353]
	024 Move X19, X1
	025 Move X20, X0
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {59}
	030 Move X0, 0x2301000
	031 Move X0, [X0+2128]
	032 Call 0x1C17CF4
	033 Move X0, 0x2303000
	034 Move X0, [X0+1048]
	035 Call 0x1C17CF4
	036 Move X0, 0x2303000
	037 Move X0, [X0+1056]
	038 Call 0x1C17CF4
	039 Move X0, 0x2303000
	040 Move X0, [X0+1064]
	041 Call 0x1C17CF4
	042 Move X0, 0x2303000
	043 Move X0, [X0+336]
	044 Call 0x1C17CF4
	045 Move X0, 0x2303000
	046 Move X0, [X0+344]
	047 Call 0x1C17CF4
	048 Move X0, 0x2302000
	049 Move X0, [X0+3136]
	050 Call 0x1C17CF4
	051 Move X0, 0x22FF000
	052 Move X0, [X0+2464]
	053 Call 0x1C17CF4
	054 Move X0, 0x2303000
	055 Move X0, [X0+1072]
	056 Call 0x1C17CF4
	057 Move W8, 1
	058 Move [X21+3353], W8
	059 Move [X31+48], X31
	060 Move [X31+56], X31
	061 Move [X31+64], X31
	062 Move X8, [X19]
	063 Compare X8, 0
	064 JumpIfEqual {327}
	065 Move W2, [X8+24]
	066 Move W9, [X8+28]
	067 Add W9, W9, 1
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move [X8+24], W31
	070 Move [X8+28], W9
	071 Move X0, [X8+16]
	072 Move W1, W31
	073 Move X3, X31
	074 Call Array.Clear, X0, X1, X2
	075 Compare X20, 0
	076 JumpIfEqual {327}
	077 Move X8, [X20+192]
	078 Compare X8, 0
	079 JumpIfEqual {327}
	080 Move V8, [X8+112]
	081 Move X0, X20
	082 Call MobController.get_viewDistance, X0
	083 Move X8, -19972096
	084 Move V15, V0
	085 Move V0, [X8+260]
	086 Move S1, 0.5
	087 Multiply S1, S8, S1
	088 Multiply S0, S1, S0
	089 Call 0x3EB2BD0
	090 Move X0, [X20+208]
	091 Move [X31+16], S0
	092 Compare X0, 0
	093 JumpIfEqual {327}
	094 Move X1, X31
	095 Call Transform.get_position, X0
	096 Move X0, [X20+208]
	097 Compare X0, 0
	098 JumpIfEqual {327}
	099 Move X20, 0x22FF000
	100 Move X20, [X20+2464]
	101 Move X1, X31
	102 Move V9, V0
	103 Move V10, V1
	104 Move V11, V2
	105 Call Transform.get_forward, X0
	106 Move X0, [X20]
	107 Move [X31+8], S1
	108 Move [X31+16], S0
	109 Move [X31+4], S2
	110 Move W8, [X0+224]
	111 Compare W8, 0
	112 JumpIfNotEqual {114}
	113 Call 0x1C17DFC
	114 Move X21, 0x25E2000
	115 Move W8, [X21+2922]
	116 Compare W8, 0
	117 JumpIfNotEqual {123}
	118 Move X0, 0x22FF000
	119 Move X0, [X0+2464]
	120 Call 0x1C17CF4
	121 Move W8, 1
	122 Move [X21+2922], W8
	123 Move X0, [X20]
	124 Move W8, [X0+224]
	125 Compare W8, 0
	126 JumpIfNotEqual {129}
	127 Call 0x1C17DFC
	128 Move X0, [X20]
	129 Move X8, [X0+184]
	130 Move X0, [X8]
	131 Compare X0, 0
	132 JumpIfEqual {327}
	133 Move X8, 0x2301000
	134 Move X8, [X8+2128]
	135 Move X1, [X8]
	136 Call Dictionary`2<UInt32, Object>.get_Values, X0
	137 Compare X0, 0
	138 JumpIfEqual {327}
	139 Move X8, 0x2303000
	140 Move X8, [X8+1072]
	141 Move X24, 0x2303000
	142 Move X25, 0x2303000
	143 Move X24, [X24+1056]
	144 Move X25, [X25+336]
	145 Move X1, [X8]
	146 Move X26, 0x2302000
	147 Move X23, 0x2303000
	148 Move X26, [X26+3136]
	149 Move X23, [X23+1048]
	150 Add X8, X31, 24
	151 Multiply S14, S15, S15
	152 Call ValueCollection<UInt32, Object>.GetEnumerator, X0
	153 Move X9, -19972096
	154 Move V1, [X9+748]
	155 Move X20, 0x22FD000
	156 Move X10, -19972096
	157 NotImplemented "Instruction LDUR not yet implemented."
	158 Move X8, [X31+40]
	159 Move X20, [X20+1448]
	160 Move [X31+20], S1
	161 Move V1, [X10+380]
	162 Move [X31+3], V0
	163 Move [X31+64], X8
	164 Move X21, 0x22FD000
	165 Move [X31], S1
	166 Move X21, [X21+1440]
	167 Move X27, 0x25E2000
	168 Move W28, 1
	169 Move X29, 0x25E2000
	170 Move X1, [X24]
	171 Add X0, X31, 48
	172 Call Enumerator<UInt32, Object>.MoveNext, X0
	173 Move TEMP, X0
	174 And TEMP, TEMP, 1
	175 Compare TEMP, 1
	176 JumpIfNotEqual {300}
	177 Move X22, [X31+64]
	178 Compare X22, 0
	179 JumpIfEqual {325}
	180 Move X0, X22
	181 Move X1, X31
	182 Call NetPlayer.get_isDieSafe, X0
	183 Move TEMP, X0
	184 And TEMP, TEMP, 1
	185 Compare TEMP, 1
	186 JumpIfEqual {170}
	187 Move X0, X22
	188 Move X1, X31
	189 Call Component.get_transform, X0
	190 Compare X0, 0
	191 JumpIfEqual {326}
	192 Move X1, X31
	193 Call Transform.get_position, X0
	194 Subtract S8, S0, S9
	195 Subtract S12, S1, S10
	196 Subtract S13, S2, S11
	197 Multiply S0, S8, S8
	198 Multiply S1, S12, S12
	199 Add S0, S0, S1
	200 Multiply S1, S13, S13
	201 Add S15, S1, S0
	202 NotImplemented "Instruction FCMP not yet implemented."
	203 Move V0, [X31+20]
	204 NotImplemented "Instruction FCMP not yet implemented."
	205 Move X0, [X19]
	206 Compare X0, 0
	207 JumpIfEqual {328}
	208 Move W10, [X0+28]
	209 Move X8, [X0+16]
	210 Move X9, [X25]
	211 Add W10, W10, 1
	212 Move [X0+28], W10
	213 Compare X8, 0
	214 JumpIfEqual {329}
	215 NotImplemented "Instruction LDRSW not yet implemented."
	216 Move W11, [X8+24]
	217 NotImplemented "Instruction CMP not yet implemented."
	218 Add W9, W10, 1
	219 Add X8, X8, X10
	220 Move [X0+24], W9
	221 Move [X8+32], X22
	222 Move W8, [X27+1925]
	223 Compare W8, 0
	224 JumpIfNotEqual {228}
	225 Move X0, X20
	226 Call 0x1C17CF4
	227 Move [X27+1925], W28
	228 Move X0, [X20]
	229 Move W8, [X0+224]
	230 Compare W8, 0
	231 JumpIfNotEqual {233}
	232 Call 0x1C17DFC
	233 Move V0, [X31]
	234 NotImplemented "Instruction FSQRT not yet implemented."
	235 NotImplemented "Instruction FCMP not yet implemented."
	236 NotImplemented "Instruction FDIV not yet implemented."
	237 NotImplemented "Instruction FDIV not yet implemented."
	238 NotImplemented "Instruction FDIV not yet implemented."
	239 Move W8, [X29+1923]
	240 Compare W8, 0
	241 JumpIfNotEqual {245}
	242 Move X0, X21
	243 Call 0x1C17CF4
	244 Move [X29+1923], W28
	245 Move X8, [X21]
	246 Move X8, [X8+184]
	247 Move S8, [X8]
	248 Move S12, [X8+4]
	249 Move V13, [X8+8]
	250 Move S1, [X31+8]
	251 Move S0, [X31+12]
	252 Multiply S0, S0, S8
	253 Multiply S1, S1, S12
	254 Add S0, S0, S1
	255 Move V1, [X31+4]
	256 Multiply S1, S1, S13
	257 Add S0, S1, S0
	258 Move V1, [X31+16]
	259 NotImplemented "Instruction FCMP not yet implemented."
	260 Move X0, [X26]
	261 Move W8, [X0+224]
	262 Compare W8, 0
	263 JumpIfNotEqual {265}
	264 Call 0x1C17DFC
	265 Move V0, V9
	266 Move V1, V10
	267 Move V2, V11
	268 Move V3, V8
	269 Move V4, V12
	270 Move V5, V13
	271 Move V6, V15
	272 Call MobDetectionUtil.IsTargetInLineOfSight, X0, X1, V0
	273 Move TEMP, X0
	274 And TEMP, TEMP, 1
	275 Compare TEMP, 1
	276 JumpIfNotEqual {170}
	277 Move X0, [X19]
	278 Compare X0, 0
	279 JumpIfEqual {330}
	280 Move W10, [X0+28]
	281 Move X8, [X0+16]
	282 Move X9, [X25]
	283 Add W10, W10, 1
	284 Move [X0+28], W10
	285 Compare X8, 0
	286 JumpIfEqual {331}
	287 NotImplemented "Instruction LDRSW not yet implemented."
	288 Move W11, [X8+24]
	289 NotImplemented "Instruction CMP not yet implemented."
	290 Move X8, [X9+32]
	291 Move X8, [X8+192]
	292 Move X2, [X8+112]
	293 Move X1, X22
	294 Call List`1<Object>.AddWithResize, X0, X1
	295 Move X8, [X9+32]
	296 Move X8, [X8+192]
	297 Move X2, [X8+112]
	298 Move X1, X22
	299 Call List`1<Object>.AddWithResize, X0, X1
	300 Move X1, [X23]
	301 Add X0, X31, 48
	302 Call Enumerator<UInt32, Object>.Dispose, X0
	303 Move X20, [X31+224]
	304 Move X19, [X31+232]
	305 Move X22, [X31+208]
	306 Move X21, [X31+216]
	307 Move X24, [X31+192]
	308 Move X23, [X31+200]
	309 Move X26, [X31+176]
	310 Move X25, [X31+184]
	311 Move X28, [X31+160]
	312 Move X27, [X31+168]
	313 Move X29, [X31+144]
	314 Move X30, [X31+152]
	315 Move D9, [X31+128]
	316 Move D8, [X31+136]
	317 Move D11, [X31+112]
	318 Move D10, [X31+120]
	319 Move D13, [X31+96]
	320 Move D12, [X31+104]
	321 Move D15, [X31+80]
	322 Move D14, [X31+88]
	323 Add X31, X31, 240
	324 Return 
	325 Call 0x1C17F20
	326 Call 0x1C17F20
	327 Call 0x1C17F20
	328 Call 0x1C17F20
	329 Call 0x1C17F20
	330 Call 0x1C17F20
	331 Call 0x1C17F20
	332 Move X19, X0
	333 NotImplemented "Instruction CMP not yet implemented."
	334 Move X0, X19
	335 Call 0x3EB2AD0
	336 Move X20, [X0]
	337 Call 0x3EB2AE0
	338 Move X1, [X23]
	339 Add X0, X31, 48
	340 Call Enumerator<UInt32, Object>.Dispose, X0
	341 Compare X20, 0
	342 JumpIfEqual {303}
	343 Move X0, X20
	344 Call 0x1C17F18
	345 Move X20, X31
	346 Move X19, X0
	347 Move X1, [X23]
	348 Add X0, X31, 48
	349 Call Enumerator<UInt32, Object>.Dispose, X0
	350 Compare X20, 0
	351 JumpIfNotEqual {354}
	352 Move X0, X19
	353 Call 0x1D2D690
	354 Move X0, X20
	355 Call 0x1C17F18
	356 Call 0x1991590

Method: System.Boolean IsTargetInLineOfSight(UnityEngine.Vector3 viewPosition, UnityEngine.Vector3 targetPosition)

Disassembly:
	0x01DF47E8 BL 0x1C16DEC
	0x01DF47EC LDR X0, [X0 + 0x18]
	0x01DF47F0 RET
	0x01DF47F4 STP X30, X19, [X31 - 0x10]!
	0x01DF47F8 LDR X8, [X0 + 0x50]
	0x01DF47FC CBZ X8, 0x1DF4810
	0x01DF4800 AND W9, W1, 0x1
	0x01DF4804 STR W9, [X8]
	0x01DF4808 LDP X30, X19, [X31], #0x10
	0x01DF480C RET
	0x01DF4810 ADRP X0, 0x22FF000
	0x01DF4814 LDR X0, [X0 + 0x5B0]
	0x01DF4818 BL 0x1C16D08
	0x01DF481C BL 0x1C16F10
	0x01DF4820 MOV X19, X0
	0x01DF4824 ADRP X0, 0x2305000
	0x01DF4828 LDR X0, [X0 + 0x160]
	0x01DF482C BL 0x1C16D08
	0x01DF4830 MOV X1, X0
	0x01DF4834 MOV X0, X19
	0x01DF4838 MOV X2, X31
	0x01DF483C BL 0x337DF1C
	0x01DF4840 ADRP X0, 0x2305000
	0x01DF4844 LDR X0, [X0 + 0x288]
	0x01DF4848 BL 0x1C16D08
	0x01DF484C MOV X1, X0
	0x01DF4850 MOV X0, X19
	0x01DF4854 BL 0x1C16DEC
	0x01DF4858 STP X30, X19, [X31 - 0x10]!
	0x01DF485C LDR X8, [X0 + 0x50]
	0x01DF4860 CBZ X8, 0x1DF4870
	0x01DF4864 LDR W0, [X8 + 0x4]
	0x01DF4868 LDP X30, X19, [X31], #0x10
	0x01DF486C RET
	0x01DF4870 ADRP X0, 0x22FF000
	0x01DF4874 LDR X0, [X0 + 0x5B0]
	0x01DF4878 BL 0x1C16D08
	0x01DF487C BL 0x1C16F10
	0x01DF4880 MOV X19, X0
	0x01DF4884 ADRP X0, 0x2305000
	0x01DF4888 LDR X0, [X0 + 0x290]
	0x01DF488C BL 0x1C16D08
	0x01DF4890 MOV X1, X0
	0x01DF4894 MOV X0, X19
	0x01DF4898 MOV X2, X31
	0x01DF489C BL 0x337DF1C
	0x01DF48A0 ADRP X0, 0x2305000
	0x01DF48A4 LDR X0, [X0 + 0x298]
	0x01DF48A8 BL 0x1C16D08
	0x01DF48AC MOV X1, X0
	0x01DF48B0 MOV X0, X19
	0x01DF48B4 BL 0x1C16DEC
	0x01DF48B8 STP X30, X19, [X31 - 0x10]!
	0x01DF48BC LDR X8, [X0 + 0x50]
	0x01DF48C0 CBZ X8, 0x1DF48D0
	0x01DF48C4 STR W1, [X8 + 0x4]
	0x01DF48C8 LDP X30, X19, [X31], #0x10
	0x01DF48CC RET
	0x01DF48D0 ADRP X0, 0x22FF000
	0x01DF48D4 LDR X0, [X0 + 0x5B0]
	0x01DF48D8 BL 0x1C16D08

ISIL:
	001 Move [X31-80], D14
	002 Move [X31+16], D13
	003 Move [X31+24], D12
	004 Move [X31+32], D11
	005 Move [X31+40], D10
	006 Move [X31+48], D9
	007 Move [X31+56], D8
	008 Move [X31+64], X30
	009 Move [X31+72], X19
	010 Move X19, 0x25E5000
	011 Move W8, [X19+3354]
	012 Move V11, V5
	013 Move V12, V4
	014 Move V13, V3
	015 Move V8, V2
	016 Move V9, V1
	017 Move V10, V0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {27}
	022 Move X0, 0x2305000
	023 Move X0, [X0+3136]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X19+3354], W8
	027 Move X19, 0x25E5000
	028 Move W8, [X19+1924]
	029 Compare W8, 0
	030 JumpIfNotEqual {36}
	031 Move X0, 0x2300000
	032 Move X0, [X0+1448]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X19+1924], W8
	036 Move X8, 0x2300000
	037 Move X8, [X8+1448]
	038 Move X19, 0x2305000
	039 Subtract S13, S13, S10
	040 Subtract S12, S12, S9
	041 Move X0, [X8]
	042 Subtract S14, S11, S8
	043 Move W8, [X0+224]
	044 Move X19, [X19+3136]
	045 Compare W8, 0
	046 JumpIfNotEqual {48}
	047 Call 0x1C17DFC
	048 Move X0, [X19]
	049 Multiply S0, S13, S13
	050 Multiply S1, S12, S12
	051 Add S0, S0, S1
	052 Move W8, [X0+224]
	053 Multiply S1, S14, S14
	054 Add S0, S1, S0
	055 NotImplemented "Instruction FSQRT not yet implemented."
	056 Compare W8, 0
	057 JumpIfNotEqual {59}
	058 Call 0x1C17DFC
	059 NotImplemented "Instruction FDIV not yet implemented."
	060 NotImplemented "Instruction FDIV not yet implemented."
	061 NotImplemented "Instruction FDIV not yet implemented."
	062 Move V0, V10
	063 Move V1, V9
	064 Move V2, V8
	065 Move V6, V11
	066 Move X30, [X31+64]
	067 Move X19, [X31+72]
	068 Move D9, [X31+48]
	069 Move D8, [X31+56]
	070 Move D11, [X31+32]
	071 Move D10, [X31+40]
	072 Move D13, [X31+16]
	073 Move D12, [X31+24]
	074 Move V14, [X31+80]
	075 Call MobDetectionUtil.IsTargetInLineOfSight, X0, X1, V0
	076 Return X0

Method: System.Boolean IsTargetInLineOfSight(UnityEngine.Vector3 viewPosition, UnityEngine.Vector3 viewToTargetDirection, System.Single viewToTargetDistance)

Disassembly:
	0x01DF8F84 ADRP X10, 0xFFFFFFFFFECF2000
	0x01DF8F88 ADRP X9, 0xFFFFFFFFFECF2000
	0x01DF8F8C LDR X8, [X31 + 0x48]
	0x01DF8F90 LDR X20, [X20 + 0x5A8]
	0x01DF8F94 STR S1, [X31 + 0x20]
	0x01DF8F98 LDR V1, [X10 + 0x448]
	0x01DF8F9C STR V0, [X31 + 0x8]
	0x01DF8FA0 LDR V0, [X9 + 0x104]
	0x01DF8FA4 STR X8, [X31 + 0x90]
	0x01DF8FA8 STR S1, [X31 + 0x18]
	0x01DF8FAC ADRP X21, 0x22FB000
	0x01DF8FB0 STR S0, [X31 + 0x14]
	0x01DF8FB4 LDR X21, [X21 + 0x5A0]
	0x01DF8FB8 MOVZ W29, 0x43C80000
	0x01DF8FBC ADRP X24, 0x25E0000
	0x01DF8FC0 MOVZ W28, 0x1
	0x01DF8FC4 MOVZ W27, 0x425C0000
	0x01DF8FC8 ADRP X26, 0x25E0000
	0x01DF8FCC LDR X1, [X25]
	0x01DF8FD0 ADD X0, X31, 0x80
	0x01DF8FD4 BL 0x2C1C378
	0x01DF8FD8 TBZ X0, 0x0, 0x1DF9210
	0x01DF8FDC LDR X22, [X31 + 0x90]
	0x01DF8FE0 CBZ X22, 0x1DF9268
	0x01DF8FE4 MOV X0, X22
	0x01DF8FE8 MOV X1, X31
	0x01DF8FEC BL 0x1DB193C
	0x01DF8FF0 TBNZ X0, 0x0, 0x1DF8FCC
	0x01DF8FF4 LDR X0, [X22 + 0x90]
	0x01DF8FF8 CBZ X0, 0x1DF926C
	0x01DF8FFC MOV X1, X31
	0x01DF9000 BL 0x3C3F58C
	0x01DF9004 LDR X0, [X22 + 0x90]
	0x01DF9008 CBZ X0, 0x1DF9270
	0x01DF900C MOV V9.16B, V0.16B
	0x01DF9010 MOV V11.16B, V1.16B
	0x01DF9014 MOV V13.16B, V2.16B
	0x01DF9018 MOV X1, X31
	0x01DF901C BL 0x3C3FA04
	0x01DF9020 MOV V15.16B, V0.16B
	0x01DF9024 LDR V0, [X31 + 0x2C]
	0x01DF9028 STP S9, S11, [X31 + 0x30]
	0x01DF902C MOV V8.16B, V1.16B
	0x01DF9030 FSUB S9, S0, S9
	0x01DF9034 LDR V0, [X31 + 0x28]
	0x01DF9038 FSUB S14, S0, S11
	0x01DF903C LDR V0, [X31 + 0x24]
	0x01DF9040 FMUL S1, S14, S14
	0x01DF9044 FSUB S11, S0, S13
	0x01DF9048 FMUL S0, S9, S9
	0x01DF904C FADD S0, S0, S1
	0x01DF9050 FMUL S1, S11, S11
	0x01DF9054 FADD S12, S1, S0
	0x01DF9058 FMOV S0, W29
	0x01DF905C FCMP S12, S0
	0x01DF9060 B.PL 0x1DF8FCC
	0x01DF9064 LDRB W8, [X24 + 0x785]
	0x01DF9068 MOV V10.16B, V2.16B
	0x01DF906C CBNZ W8, 0x1DF907C
	0x01DF9070 MOV X0, X20
	0x01DF9074 BL 0x1C16CF4
	0x01DF9078 STRB W28, [X24 + 0x785]
	0x01DF907C LDR X0, [X20]
	0x01DF9080 LDR W8, [X0 + 0xE0]
	0x01DF9084 CBNZ W8, 0x1DF908C
	0x01DF9088 BL 0x1C16DFC
	0x01DF908C LDR V0, [X31 + 0x20]
	0x01DF9090 FSQRT S12, S12

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+48], D14
	003 Move [X31+56], D13
	004 Move [X31+64], D12
	005 Move [X31+72], D11
	006 Move [X31+80], D10
	007 Move [X31+88], D9
	008 Move [X31+96], D8
	009 Move [X31+104], X30
	010 Move [X31+112], X20
	011 Move [X31+120], X19
	012 Move X20, 0x25E1000
	013 Move X19, 0x22FC000
	014 Move W8, [X20+3355]
	015 Move X19, [X19+1496]
	016 Move V8, V6
	017 Move V9, V5
	018 Move V10, V4
	019 Move V11, V3
	020 Move V12, V2
	021 Move V13, V1
	022 Move V14, V0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {35}
	027 Move X0, 0x22FC000
	028 Move X0, [X0+1496]
	029 Call 0x1C17CF4
	030 Move X0, 0x22FC000
	031 Move X0, [X0+1528]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X20+3355], W8
	035 Move X0, [X19]
	036 NotImplemented "Instruction MOVI not yet implemented."
	037 Move [X31+28], V0
	038 Move [X31], V0
	039 Move [X31+8], V0
	040 Move X20, 0x22FB000
	041 Move W8, [X0+224]
	042 Call 0x3EB2504
	043 Return X0
	044 Compare W8, 0
	045 JumpIfNotEqual {48}
	046 Call 0x1C17DFC
	047 Move X0, [X19]
	048 Move X8, [X0+184]
	049 Move X1, X31
	050 Move W0, [X8]
	051 Call LayerMask.op_Implicit, X0
	052 Move X8, [X20]
	053 Move W19, W0
	054 Move W9, [X8+224]
	055 Compare W9, 0
	056 JumpIfNotEqual {59}
	057 Move X0, X8
	058 Call 0x1C17DFC
	059 Add X0, X31, 0
	060 Move V0, V14
	061 Move V1, V13
	062 Move V2, V12
	063 Move V3, V11
	064 Move V4, V10
	065 Move V5, V9
	066 Move V6, V8
	067 Move W1, W19
	068 Move X2, X31
	069 Call Physics.Raycast, X0, X1, X2, V0, X3
	070 Move X20, [X31+112]
	071 Move X19, [X31+120]
	072 Move X30, [X31+104]
	073 Move D9, [X31+88]
	074 Move D8, [X31+96]
	075 Move D11, [X31+72]
	076 Move D10, [X31+80]
	077 Move D13, [X31+56]
	078 Move D12, [X31+64]
	079 Move V14, [X31+48]
	080 NotImplemented "Instruction ORN not yet implemented."
	081 And W0, W8, 1
	082 Add X31, X31, 128
	083 Return X0

Method: System.Boolean TryGetPlayersBySound(AnimalCompany.MobController mob, ref System.Collections.Generic.List`1<AnimalCompany.NetPlayer> players)

Disassembly:
	0x01DF9094 FCMP S12, S0
	0x01DF9098 B.LE 0x1DF90B0
	0x01DF909C FDIV S0, S9, S12
	0x01DF90A0 FDIV S14, S14, S12
	0x01DF90A4 FDIV S9, S11, S12
	0x01DF90A8 MOV V11.16B, V0.16B
	0x01DF90AC B 0x1DF90D4
	0x01DF90B0 LDRB W8, [X26 + 0x783]
	0x01DF90B4 CBNZ W8, 0x1DF90C4
	0x01DF90B8 MOV X0, X21
	0x01DF90BC BL 0x1C16CF4
	0x01DF90C0 STRB W28, [X26 + 0x783]
	0x01DF90C4 LDR X8, [X21]
	0x01DF90C8 LDR X8, [X8 + 0xB8]
	0x01DF90CC LDP S11, S14, [X8]
	0x01DF90D0 LDR V9, [X8 + 0x8]
	0x01DF90D4 FMUL S0, S15, S11
	0x01DF90D8 FMUL S1, S8, S14
	0x01DF90DC FADD S0, S0, S1
	0x01DF90E0 FMUL S1, S10, S9
	0x01DF90E4 FADD S8, S1, S0
	0x01DF90E8 FCMP S8, 0x0
	0x01DF90EC B.MI 0x1DF8FCC
	0x01DF90F0 LDR V0, [X31 + 0x1C]
	0x01DF90F4 FDIV S0, S0, S12
	0x01DF90F8 BL 0x3EB1BE0
	0x01DF90FC LDR V1, [X31 + 0x18]
	0x01DF9100 FMUL S0, S0, S1
	0x01DF9104 FMOV S1, W27
	0x01DF9108 FADD S0, S0, S1
	0x01DF910C LDR V1, [X31 + 0x14]
	0x01DF9110 FMUL S0, S0, S1
	0x01DF9114 BL 0x3EB1BD0
	0x01DF9118 FCMP S8, S0
	0x01DF911C B.LE 0x1DF8FCC
	0x01DF9120 ADRP X8, 0x22FA000
	0x01DF9124 LDR X8, [X8 + 0x5D8]
	0x01DF9128 LDR X0, [X8]
	0x01DF912C LDR W8, [X0 + 0xE0]
	0x01DF9130 CBZ W8, 0x1DF913C
	0x01DF9134 LDR V8, [X31 + 0x34]
	0x01DF9138 B 0x1DF9150
	0x01DF913C BL 0x1C16DFC
	0x01DF9140 LDR V8, [X31 + 0x34]
	0x01DF9144 ADRP X8, 0x22FA000
	0x01DF9148 LDR X8, [X8 + 0x5D8]
	0x01DF914C LDR X0, [X8]
	0x01DF9150 LDR X8, [X0 + 0xB8]
	0x01DF9154 LDR W0, [X8]
	0x01DF9158 MOV X1, X31
	0x01DF915C BL 0x3C35CB8
	0x01DF9160 ADRP X8, 0x22FA000
	0x01DF9164 LDR X8, [X8 + 0x5F8]
	0x01DF9168 MOV W23, W0
	0x01DF916C LDR X0, [X8]
	0x01DF9170 LDR W8, [X0 + 0xE0]
	0x01DF9174 CBNZ W8, 0x1DF917C
	0x01DF9178 BL 0x1C16DFC
	0x01DF917C LDR V0, [X31 + 0x30]
	0x01DF9180 ADD X0, X31, 0x50
	0x01DF9184 MOV V1.16B, V8.16B
	0x01DF9188 MOV V2.16B, V13.16B
	0x01DF918C MOV V3.16B, V11.16B
	0x01DF9190 MOV V4.16B, V14.16B
	0x01DF9194 MOV V5.16B, V9.16B
	0x01DF9198 MOV V6.16B, V12.16B
	0x01DF919C MOV W1, W23
	0x01DF91A0 MOV X2, X31
	0x01DF91A4 BL 0x3C8B18C
	0x01DF91A8 TBNZ X0, 0x0, 0x1DF8FCC
	0x01DF91AC LDR X0, [X19]
	0x01DF91B0 CBZ X0, 0x1DF9278
	0x01DF91B4 ADRP X9, 0x2300000
	0x01DF91B8 LDR W10, [X0 + 0x1C]
	0x01DF91BC LDR X8, [X0 + 0x10]
	0x01DF91C0 LDR X9, [X9 + 0x150]
	0x01DF91C4 ADD W10, W10, 0x1
	0x01DF91C8 LDR X9, [X9]
	0x01DF91CC STR W10, [X0 + 0x1C]
	0x01DF91D0 CBZ X8, 0x1DF927C
	0x01DF91D4 LDRSW X10, [X0 + 0x18]
	0x01DF91D8 LDR W11, [X8 + 0x18]
	0x01DF91DC CMP W10, W11
	0x01DF91E0 B.CS 0x1DF91F8
	0x01DF91E4 ADD W9, W10, 0x1
	0x01DF91E8 ADD X8, X8, X10, 0x3, LSL
	0x01DF91EC STR W9, [X0 + 0x18]
	0x01DF91F0 STR X22, [X8 + 0x20]
	0x01DF91F4 B 0x1DF8FCC
	0x01DF91F8 LDR X8, [X9 + 0x20]
	0x01DF91FC LDR X8, [X8 + 0xC0]
	0x01DF9200 LDR X2, [X8 + 0x70]
	0x01DF9204 MOV X1, X22
	0x01DF9208 BL 0x301BF90
	0x01DF920C B 0x1DF8FCC
	0x01DF9210 ADRP X8, 0x2300000
	0x01DF9214 LDR X8, [X8 + 0x418]
	0x01DF9218 ADD X0, X31, 0x80
	0x01DF921C LDR X1, [X8]
	0x01DF9220 BL 0x2C1C374
	0x01DF9224 LDR X8, [X19]
	0x01DF9228 CBZ X8, 0x1DF9274
	0x01DF922C LDR W8, [X8 + 0x18]
	0x01DF9230 LDP X20, X19, [X31 + 0x130]
	0x01DF9234 LDP X22, X21, [X31 + 0x120]
	0x01DF9238 LDP X24, X23, [X31 + 0x110]
	0x01DF923C LDP X26, X25, [X31 + 0x100]
	0x01DF9240 LDP X28, X27, [X31 + 0xF0]
	0x01DF9244 LDP X29, X30, [X31 + 0xE0]
	0x01DF9248 LDP D9, D8, [X31 + 0xD0]
	0x01DF924C LDP D11, D10, [X31 + 0xC0]
	0x01DF9250 LDP D13, D12, [X31 + 0xB0]
	0x01DF9254 LDP D15, D14, [X31 + 0xA0]
	0x01DF9258 CMP W8, 0x0
	0x01DF925C CSET W0, GT
	0x01DF9260 ADD X31, X31, 0x140
	0x01DF9264 RET
	0x01DF9268 BL 0x1C16F20
	0x01DF926C BL 0x1C16F20
	0x01DF9270 BL 0x1C16F20
	0x01DF9274 BL 0x1C16F20
	0x01DF9278 BL 0x1C16F20
	0x01DF927C BL 0x1C16F20
	0x01DF9280 B 0x1DF92B0
	0x01DF9284 B 0x1DF92B0
	0x01DF9288 B 0x1DF92B0
	0x01DF928C B 0x1DF92B0
	0x01DF9290 B 0x1DF92B0
	0x01DF9294 B 0x1DF92B0
	0x01DF9298 B 0x1DF92B0
	0x01DF929C B 0x1DF92B0
	0x01DF92A0 B 0x1DF92B0
	0x01DF92A4 B 0x1DF92B0
	0x01DF92A8 B 0x1DF92B0
	0x01DF92AC B 0x1DF92B0
	0x01DF92B0 MOV X20, X0
	0x01DF92B4 CMP W1, 0x1
	0x01DF92B8 B.NE 0x1DF92EC
	0x01DF92BC MOV X0, X20
	0x01DF92C0 BL 0x3EB1AD0
	0x01DF92C4 LDR X21, [X0]
	0x01DF92C8 BL 0x3EB1AE0
	0x01DF92CC ADRP X8, 0x2300000
	0x01DF92D0 LDR X8, [X8 + 0x418]
	0x01DF92D4 ADD X0, X31, 0x80
	0x01DF92D8 LDR X1, [X8]
	0x01DF92DC BL 0x2C1C374
	0x01DF92E0 CBZ X21, 0x1DF9224
	0x01DF92E4 MOV X0, X21
	0x01DF92E8 BL 0x1C16F18
	0x01DF92EC MOV X21, X31
	0x01DF92F0 B 0x1DF92F8
	0x01DF92F4 MOV X20, X0
	0x01DF92F8 ADRP X8, 0x2300000
	0x01DF92FC LDR X8, [X8 + 0x418]
	0x01DF9300 LDR X1, [X8]
	0x01DF9304 ADD X0, X31, 0x80
	0x01DF9308 BL 0x2C1C374
	0x01DF930C CBNZ X21, 0x1DF9318
	0x01DF9310 MOV X0, X20
	0x01DF9314 BL 0x1D2C690
	0x01DF9318 MOV X0, X21
	0x01DF931C BL 0x1C16F18
	0x01DF9320 BL 0x1990590
	0x01DF9324 SUB X31, X31, 0xC0
	0x01DF9328 STP D15, D14, [X31 + 0x50]
	0x01DF932C STP D13, D12, [X31 + 0x60]
	0x01DF9330 STP D11, D10, [X31 + 0x70]
	0x01DF9334 STP D9, D8, [X31 + 0x80]
	0x01DF9338 STP X30, X23, [X31 + 0x90]
	0x01DF933C STP X22, X21, [X31 + 0xA0]
	0x01DF9340 STP X20, X19, [X31 + 0xB0]
	0x01DF9344 ADRP X23, 0x25DF000
	0x01DF9348 LDRB W8, [X23 + 0xD24]
	0x01DF934C MOV X19, X3
	0x01DF9350 MOV X20, X2
	0x01DF9354 MOV V8.16B, V7.16B
	0x01DF9358 MOV V12.16B, V6.16B
	0x01DF935C MOV V13.16B, V5.16B
	0x01DF9360 MOV V14.16B, V4.16B
	0x01DF9364 MOV V15.16B, V3.16B
	0x01DF9368 MOV V9.16B, V2.16B
	0x01DF936C MOV V10.16B, V1.16B
	0x01DF9370 MOV V11.16B, V0.16B
	0x01DF9374 MOV X21, X1
	0x01DF9378 MOV X22, X0
	0x01DF937C TBNZ X8, 0x0, 0x1DF9394
	0x01DF9380 ADRP X0, 0x22FA000
	0x01DF9384 LDR X0, [X0 + 0x5F8]
	0x01DF9388 BL 0x1C16CF4
	0x01DF938C MOVZ W8, 0x1
	0x01DF9390 STRB W8, [X23 + 0xD24]
	0x01DF9394 STR W31, [X31 + 0x48]
	0x01DF9398 STR X31, [X31 + 0x40]
	0x01DF939C STR W31, [X31 + 0x3C]
	0x01DF93A0 CBZ X21, 0x1DF956C
	0x01DF93A4 MOV X0, X21
	0x01DF93A8 MOV X1, X31
	0x01DF93AC STR S15, [X31 + 0x38]
	0x01DF93B0 BL 0x3C32E90
	0x01DF93B4 CBZ X0, 0x1DF956C
	0x01DF93B8 MOV X1, X31
	0x01DF93BC STP S14, S13, [X31 + 0x24]
	0x01DF93C0 STP S12, S10, [X31 + 0x2C]
	0x01DF93C4 MOV V15.16B, V11.16B
	0x01DF93C8 STR S9, [X31 + 0x34]
	0x01DF93CC STR S8, [X31 + 0x20]
	0x01DF93D0 BL 0x3C3F58C
	0x01DF93D4 MOV X0, X21
	0x01DF93D8 MOV X1, X31
	0x01DF93DC MOV V8.16B, V0.16B
	0x01DF93E0 MOV V9.16B, V1.16B

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+64], D12
	003 Move [X31+80], D11
	004 Move [X31+88], D10
	005 Move [X31+96], D9
	006 Move [X31+104], D8
	007 Move [X31+112], X30
	008 Move [X31+120], X23
	009 Move [X31+128], X22
	010 Move [X31+136], X21
	011 Move [X31+144], X20
	012 Move [X31+152], X19
	013 Move X21, 0x25E0000
	014 Move W8, [X21+3356]
	015 Move X19, X1
	016 Move X20, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {50}
	021 Move X0, 0x22FF000
	022 Move X0, [X0+2128]
	023 Call 0x1C17CF4
	024 Move X0, 0x2301000
	025 Move X0, [X0+1048]
	026 Call 0x1C17CF4
	027 Move X0, 0x2301000
	028 Move X0, [X0+1056]
	029 Call 0x1C17CF4
	030 Move X0, 0x2301000
	031 Move X0, [X0+1064]
	032 Call 0x1C17CF4
	033 Move X0, 0x2301000
	034 Move X0, [X0+336]
	035 Call 0x1C17CF4
	036 Move X0, 0x2301000
	037 Move X0, [X0+344]
	038 Call 0x1C17CF4
	039 Move X0, 0x2300000
	040 Move X0, [X0+3248]
	041 Call 0x1C17CF4
	042 Move X0, 0x22FD000
	043 Move X0, [X0+2464]
	044 Call 0x1C17CF4
	045 Move X0, 0x2301000
	046 Move X0, [X0+1072]
	047 Call 0x1C17CF4
	048 Move W8, 1
	049 Move [X21+3356], W8
	050 Move [X31+32], X31
	051 Move [X31+40], X31
	052 Move [X31+48], X31
	053 Move X8, [X19]
	054 Compare X8, 0
	055 JumpIfEqual {210}
	056 Move W2, [X8+24]
	057 Move W9, [X8+28]
	058 Add W9, W9, 1
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move [X8+24], W31
	061 Move [X8+28], W9
	062 Move X0, [X8+16]
	063 Move W1, W31
	064 Move X3, X31
	065 Call Array.Clear, X0, X1, X2
	066 Compare X20, 0
	067 JumpIfEqual {210}
	068 Move X0, [X20+216]
	069 Compare X0, 0
	070 JumpIfEqual {210}
	071 Move X1, X31
	072 Call Transform.get_position, X0
	073 Move X8, [X20+192]
	074 Compare X8, 0
	075 JumpIfEqual {210}
	076 Move X20, 0x22FD000
	077 Move X20, [X20+2464]
	078 Move S12, [X8+128]
	079 Move S11, [X8+132]
	080 Move V8, V0
	081 Move V9, V1
	082 Move X0, [X20]
	083 Move V10, V2
	084 Move W9, [X0+224]
	085 Compare W9, 0
	086 JumpIfNotEqual {88}
	087 Call 0x1C17DFC
	088 Move X21, 0x25E0000
	089 Move W8, [X21+2922]
	090 Compare W8, 0
	091 JumpIfNotEqual {97}
	092 Move X0, 0x22FD000
	093 Move X0, [X0+2464]
	094 Call 0x1C17CF4
	095 Move W8, 1
	096 Move [X21+2922], W8
	097 Move X0, [X20]
	098 Move W8, [X0+224]
	099 Compare W8, 0
	100 JumpIfNotEqual {103}
	101 Call 0x1C17DFC
	102 Move X0, [X20]
	103 Move X8, [X0+184]
	104 Move X0, [X8]
	105 Compare X0, 0
	106 JumpIfEqual {210}
	107 Move X8, 0x22FF000
	108 Move X8, [X8+2128]
	109 Move X1, [X8]
	110 Call Dictionary`2<UInt32, Object>.get_Values, X0
	111 Compare X0, 0
	112 JumpIfEqual {210}
	113 Move X8, 0x2301000
	114 Move X8, [X8+1072]
	115 Move X22, 0x2301000
	116 Move X22, [X22+1056]
	117 Move X23, 0x2301000
	118 Move X1, [X8]
	119 Move X21, 0x2301000
	120 Move X23, [X23+336]
	121 Move X21, [X21+1048]
	122 Add X8, X31, 8
	123 Multiply S12, S12, S12
	124 Call ValueCollection<UInt32, Object>.GetEnumerator, X0
	125 NotImplemented "Instruction LDUR not yet implemented."
	126 Move X8, [X31+24]
	127 Move [X31+2], V0
	128 Move [X31+48], X8
	129 Move X1, [X22]
	130 Add X0, X31, 32
	131 Call Enumerator<UInt32, Object>.MoveNext, X0
	132 Move TEMP, X0
	133 And TEMP, TEMP, 1
	134 Compare TEMP, 1
	135 JumpIfNotEqual {186}
	136 Move X20, [X31+48]
	137 Compare X20, 0
	138 JumpIfEqual {208}
	139 Move X0, X20
	140 Move X1, X31
	141 Call NetPlayer.get_isDieSafe, X0
	142 Move TEMP, X0
	143 And TEMP, TEMP, 1
	144 Compare TEMP, 1
	145 JumpIfEqual {129}
	146 Move X0, X20
	147 Move X1, X31
	148 Call Component.get_transform, X0
	149 Compare X0, 0
	150 JumpIfEqual {209}
	151 Move X1, X31
	152 Call Transform.get_position, X0
	153 Subtract S0, S0, S8
	154 Subtract S1, S1, S9
	155 Subtract S2, S2, S10
	156 Multiply S0, S0, S0
	157 Multiply S1, S1, S1
	158 Add S0, S0, S1
	159 Multiply S1, S2, S2
	160 Add S0, S1, S0
	161 NotImplemented "Instruction FCMP not yet implemented."
	162 Move V0, [X20+372]
	163 NotImplemented "Instruction FCMP not yet implemented."
	164 Move X0, [X19]
	165 Compare X0, 0
	166 JumpIfEqual {211}
	167 Move W10, [X0+28]
	168 Move X8, [X0+16]
	169 Move X9, [X23]
	170 Add W10, W10, 1
	171 Move [X0+28], W10
	172 Compare X8, 0
	173 JumpIfEqual {212}
	174 NotImplemented "Instruction LDRSW not yet implemented."
	175 Move W11, [X8+24]
	176 NotImplemented "Instruction CMP not yet implemented."
	177 Add W9, W10, 1
	178 Add X8, X8, X10
	179 Move [X0+24], W9
	180 Move [X8+32], X20
	181 Move X8, [X9+32]
	182 Move X8, [X8+192]
	183 Move X2, [X8+112]
	184 Move X1, X20
	185 Call List`1<Object>.AddWithResize, X0, X1
	186 Move X1, [X21]
	187 Add X0, X31, 32
	188 Call Enumerator<UInt32, Object>.Dispose, X0
	189 Move X8, [X19]
	190 Compare X8, 0
	191 JumpIfEqual {210}
	192 Move W8, [X8+24]
	193 Move X20, [X31+144]
	194 Move X19, [X31+152]
	195 Move X22, [X31+128]
	196 Move X21, [X31+136]
	197 Move X30, [X31+112]
	198 Move X23, [X31+120]
	199 Move D9, [X31+96]
	200 Move D8, [X31+104]
	201 Move D11, [X31+80]
	202 Move D10, [X31+88]
	203 Move V12, [X31+64]
	204 NotImplemented "Instruction CMP not yet implemented."
	205 NotImplemented "Instruction CSET not yet implemented."
	206 Add X31, X31, 160
	207 Return X0
	208 Call 0x1C17F20
	209 Call 0x1C17F20
	210 Call 0x1C17F20
	211 Call 0x1C17F20
	212 Call 0x1C17F20
	213 NotImplemented "Instruction CMP not yet implemented."
	214 Call 0x3EB2AD0
	215 Move X20, [X0]
	216 Call 0x3EB2AE0
	217 Move X1, [X21]
	218 Add X0, X31, 32
	219 Call Enumerator<UInt32, Object>.Dispose, X0
	220 Compare X20, 0
	221 JumpIfEqual {189}
	222 Move X0, X20
	223 Call 0x1C17F18
	224 Move X19, X0
	225 Move X20, X31
	226 Move X19, X0
	227 Move X1, [X21]
	228 Add X0, X31, 32
	229 Call Enumerator<UInt32, Object>.Dispose, X0
	230 Compare X20, 0
	231 JumpIfNotEqual {234}
	232 Move X0, X19
	233 Call 0x1D2D690
	234 Move X0, X20
	235 Call 0x1C17F18
	236 Call 0x1991590

Method: System.Boolean TryGetPlayersInRange(AnimalCompany.MobController mob, UnityEngine.Vector3 center, System.Single range, out System.Collections.Generic.List`1<AnimalCompany.NetPlayer> players)

Disassembly:
	0x01DEA804 BL 0x3C0D030
	0x01DEA808 MOV X0, X19
	0x01DEA80C BL 0x1DE7D6C
	0x01DEA810 LDR X8, [X19 + 0xC0]
	0x01DEA814 CBZ X8, 0x1DEA890
	0x01DEA818 LDR V3, [X8 + 0x4C]
	0x01DEA81C MOV X0, X31
	0x01DEA820 BL 0x3C0CB98
	0x01DEA824 FMOV S0, 1
	0x01DEA828 FMOV S1, 0.5
	0x01DEA82C FMOV S2, W31
	0x01DEA830 FMOV S3, 1
	0x01DEA834 MOV X0, X31
	0x01DEA838 BL 0x3C0D030
	0x01DEA83C MOV X0, X19
	0x01DEA840 BL 0x1DE7BE4
	0x01DEA844 FMOV S3, 12
	0x01DEA848 MOV X0, X31
	0x01DEA84C BL 0x3C0CB98
	0x01DEA850 FMOV S0, 1
	0x01DEA854 FMOV S1, W31
	0x01DEA858 FMOV S2, W31
	0x01DEA85C FMOV S3, 1
	0x01DEA860 MOV X0, X31
	0x01DEA864 BL 0x3C0D030
	0x01DEA868 MOV X0, X19
	0x01DEA86C BL 0x1DE7BE4
	0x01DEA870 LDP X20, X19, [X31 + 0x10]
	0x01DEA874 FMOV S3, 6
	0x01DEA878 MOV X0, X31
	0x01DEA87C LDP X30, X21, [X31], #0x20
	0x01DEA880 B 0x3C0CB98
	0x01DEA884 LDP X20, X19, [X31 + 0x10]
	0x01DEA888 LDP X30, X21, [X31], #0x20
	0x01DEA88C RET
	0x01DEA890 BL 0x1C16F20
	0x01DEA894 STP D15, D14, [X31 - 0x70]!
	0x01DEA898 STP D13, D12, [X31 + 0x10]
	0x01DEA89C STP D11, D10, [X31 + 0x20]
	0x01DEA8A0 STP D9, D8, [X31 + 0x30]
	0x01DEA8A4 STR X30, [X31 + 0x40]
	0x01DEA8A8 STP X22, X21, [X31 + 0x50]

ISIL:
	001 Move [X31-64], D11
	002 Move [X31-56], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X21, 0x25EF000
	010 Move X20, 0x230F000
	011 Move W8, [X21+3357]
	012 Move X20, [X20+3136]
	013 Move X19, X1
	014 Move V8, V3
	015 Move V9, V2
	016 Move V10, V1
	017 Move V11, V0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {30}
	022 Move X0, 0x230F000
	023 Move X0, [X0+3248]
	024 Call 0x1C17CF4
	025 Move X0, 0x230F000
	026 Move X0, [X0+3136]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X21+3357], W8
	030 Move X0, [X20]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move V0, V11
	036 Move V1, V10
	037 Move V2, V9
	038 Move V3, V8
	039 Call MobDetectionUtil.GetPlayersInRange, X0, X1, V0
	040 Move [X19], X0
	041 Compare X0, 0
	042 JumpIfEqual {55}
	043 Move W8, [X0+24]
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X30, [X31+32]
	047 Move X21, [X31+40]
	048 Move D9, [X31+16]
	049 Move D8, [X31+24]
	050 NotImplemented "Instruction CMP not yet implemented."
	051 NotImplemented "Instruction CSET not yet implemented."
	052 Move D11, [X31+64]
	053 Move D10, [X31+72]
	054 Return X0
	055 Call 0x1C17F20

Method: System.Collections.Generic.List`1<AnimalCompany.NetPlayer> GetPlayersInRange(AnimalCompany.MobController mob, UnityEngine.Vector3 center, System.Single range)

Disassembly:
	0x01DF0BA0 STRB W8, [X19 + 0xF1]
	0x01DF0BA4 ADRP X8, 0x2309000
	0x01DF0BA8 LDR X8, [X8 + 0x170]
	0x01DF0BAC ADD X0, X31, 0xE0
	0x01DF0BB0 LDR X1, [X8]
	0x01DF0BB4 BL 0x2C1CC18
	0x01DF0BB8 LDP X20, X19, [X31 + 0x1A0]
	0x01DF0BBC LDP X22, X21, [X31 + 0x190]
	0x01DF0BC0 LDP X24, X23, [X31 + 0x180]
	0x01DF0BC4 LDP X26, X25, [X31 + 0x170]
	0x01DF0BC8 LDP X28, X27, [X31 + 0x160]
	0x01DF0BCC LDP X29, X30, [X31 + 0x150]
	0x01DF0BD0 LDP D9, D8, [X31 + 0x140]
	0x01DF0BD4 LDP D11, D10, [X31 + 0x130]
	0x01DF0BD8 ADD X31, X31, 0x1B0
	0x01DF0BDC RET
	0x01DF0BE0 BL 0x1C16F20
	0x01DF0BE4 BL 0x1C16F20
	0x01DF0BE8 BL 0x1C16F20
	0x01DF0BEC BL 0x1C16F20
	0x01DF0BF0 BL 0x1C16F20
	0x01DF0BF4 BL 0x1C16F20
	0x01DF0BF8 BL 0x1C16F20
	0x01DF0BFC BL 0x1C16F20
	0x01DF0C00 BL 0x1C16F20
	0x01DF0C04 BL 0x1C16F28
	0x01DF0C08 B 0x1DF0C6C
	0x01DF0C0C B 0x1DF0C6C
	0x01DF0C10 B 0x1DF0C6C
	0x01DF0C14 B 0x1DF0C6C
	0x01DF0C18 B 0x1DF0C6C
	0x01DF0C1C B 0x1DF0C6C
	0x01DF0C20 B 0x1DF0C6C
	0x01DF0C24 B 0x1DF0C6C
	0x01DF0C28 B 0x1DF0CEC
	0x01DF0C2C B 0x1DF0CEC
	0x01DF0C30 B 0x1DF0C6C
	0x01DF0C34 B 0x1DF0C6C
	0x01DF0C38 B 0x1DF0C6C
	0x01DF0C3C B 0x1DF0C6C
	0x01DF0C40 B 0x1DF0C6C
	0x01DF0C44 B 0x1DF0C6C
	0x01DF0C48 B 0x1DF0DBC
	0x01DF0C4C B 0x1DF0DBC
	0x01DF0C50 B 0x1DF0DBC
	0x01DF0C54 B 0x1DF0DBC
	0x01DF0C58 B 0x1DF0CEC
	0x01DF0C5C B 0x1DF0CEC
	0x01DF0C60 B 0x1DF0CEC
	0x01DF0C64 B 0x1DF0C6C
	0x01DF0C68 B 0x1DF0C6C
	0x01DF0C6C MOV X23, X0
	0x01DF0C70 CMP W1, 0x1
	0x01DF0C74 B.NE 0x1DF0CA4
	0x01DF0C78 MOV X0, X23
	0x01DF0C7C BL 0x3EB1AD0
	0x01DF0C80 LDR X20, [X0]
	0x01DF0C84 BL 0x3EB1AE0
	0x01DF0C88 ADRP X8, 0x2309000
	0x01DF0C8C LDR X8, [X8 + 0x170]
	0x01DF0C90 ADD X0, X31, 0xE0
	0x01DF0C94 LDR X1, [X8]
	0x01DF0C98 BL 0x2C1CC18
	0x01DF0C9C CBZ X20, 0x1DF0B54
	0x01DF0CA0 B 0x1DF0D20
	0x01DF0CA4 MOV X20, X31
	0x01DF0CA8 B 0x1DF0CB0
	0x01DF0CAC MOV X23, X0
	0x01DF0CB0 ADRP X8, 0x2309000
	0x01DF0CB4 LDR X8, [X8 + 0x170]
	0x01DF0CB8 LDR X1, [X8]
	0x01DF0CBC ADD X0, X31, 0xE0
	0x01DF0CC0 BL 0x2C1CC18
	0x01DF0CC4 CBZ X20, 0x1DF0E1C
	0x01DF0CC8 MOV X0, X20
	0x01DF0CCC BL 0x1C16F18
	0x01DF0CD0 B 0x1DF0DBC
	0x01DF0CD4 B 0x1DF0DBC
	0x01DF0CD8 B 0x1DF0CEC
	0x01DF0CDC B 0x1DF0CEC
	0x01DF0CE0 B 0x1DF0D54
	0x01DF0CE4 B 0x1DF0D54
	0x01DF0CE8 B 0x1DF0DBC
	0x01DF0CEC MOV X23, X0
	0x01DF0CF0 CMP W1, 0x1
	0x01DF0CF4 B.NE 0x1DF0D28
	0x01DF0CF8 MOV X0, X23
	0x01DF0CFC BL 0x3EB1AD0
	0x01DF0D00 LDR X20, [X0]
	0x01DF0D04 BL 0x3EB1AE0
	0x01DF0D08 ADRP X8, 0x2308000
	0x01DF0D0C LDR X8, [X8 + 0xC20]
	0x01DF0D10 ADD X0, X31, 0x60
	0x01DF0D14 LDR X1, [X8]
	0x01DF0D18 BL 0x2BC434C
	0x01DF0D1C CBZ X20, 0x1DF099C
	0x01DF0D20 MOV X0, X20
	0x01DF0D24 BL 0x1C16F18
	0x01DF0D28 MOV X20, X31
	0x01DF0D2C B 0x1DF0D34
	0x01DF0D30 MOV X23, X0
	0x01DF0D34 ADRP X8, 0x2308000
	0x01DF0D38 LDR X8, [X8 + 0xC20]
	0x01DF0D3C LDR X1, [X8]
	0x01DF0D40 ADD X0, X31, 0x60
	0x01DF0D44 BL 0x2BC434C
	0x01DF0D48 CBZ X20, 0x1DF0E1C
	0x01DF0D4C MOV X0, X20
	0x01DF0D50 BL 0x1C16F18
	0x01DF0D54 MOV X23, X0
	0x01DF0D58 CMP W1, 0x1
	0x01DF0D5C B.NE 0x1DF0D90
	0x01DF0D60 MOV X0, X23
	0x01DF0D64 BL 0x3EB1AD0
	0x01DF0D68 LDR X22, [X0]
	0x01DF0D6C BL 0x3EB1AE0
	0x01DF0D70 ADRP X8, 0x2309000
	0x01DF0D74 LDR X8, [X8 + 0x1B0]
	0x01DF0D78 ADD X0, X31, 0x80
	0x01DF0D7C LDR X1, [X8]
	0x01DF0D80 BL 0x2BCF050
	0x01DF0D84 CBZ X22, 0x1DF08A0
	0x01DF0D88 MOV X0, X22
	0x01DF0D8C BL 0x1C16F18
	0x01DF0D90 MOV X22, X31
	0x01DF0D94 B 0x1DF0D9C
	0x01DF0D98 MOV X23, X0
	0x01DF0D9C ADRP X8, 0x2309000
	0x01DF0DA0 LDR X8, [X8 + 0x1B0]
	0x01DF0DA4 LDR X1, [X8]
	0x01DF0DA8 ADD X0, X31, 0x80
	0x01DF0DAC BL 0x2BCF050
	0x01DF0DB0 CBZ X22, 0x1DF0E1C
	0x01DF0DB4 MOV X0, X22
	0x01DF0DB8 BL 0x1C16F18
	0x01DF0DBC MOV X23, X0
	0x01DF0DC0 CMP W1, 0x1
	0x01DF0DC4 B.NE 0x1DF0DF8
	0x01DF0DC8 MOV X0, X23
	0x01DF0DCC BL 0x3EB1AD0
	0x01DF0DD0 LDR X21, [X0]
	0x01DF0DD4 BL 0x3EB1AE0
	0x01DF0DD8 ADRP X8, 0x2309000
	0x01DF0DDC LDR X8, [X8 + 0x170]
	0x01DF0DE0 ADD X0, X31, 0xE0
	0x01DF0DE4 LDR X1, [X8]
	0x01DF0DE8 BL 0x2C1CC18
	0x01DF0DEC CBZ X21, 0x1DF081C
	0x01DF0DF0 MOV X0, X21
	0x01DF0DF4 BL 0x1C16F18
	0x01DF0DF8 MOV X21, X31
	0x01DF0DFC B 0x1DF0E04
	0x01DF0E00 MOV X23, X0
	0x01DF0E04 ADRP X8, 0x2309000
	0x01DF0E08 LDR X8, [X8 + 0x170]
	0x01DF0E0C LDR X1, [X8]
	0x01DF0E10 ADD X0, X31, 0xE0
	0x01DF0E14 BL 0x2C1CC18
	0x01DF0E18 CBNZ X21, 0x1DF0E24
	0x01DF0E1C MOV X0, X23
	0x01DF0E20 BL 0x1D2C690
	0x01DF0E24 MOV X0, X21

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], D11
	003 Move [X31+24], D10
	004 Move [X31+32], D9
	005 Move [X31+40], D8
	006 Move [X31+48], X30
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X19, 0x25E9000
	013 Move X21, 0x2309000
	014 Move W8, [X19+3358]
	015 Move X21, [X21+3136]
	016 Move V8, V3
	017 Move V9, V2
	018 Move V10, V1
	019 Move V11, V0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {44}
	024 Move X0, 0x230A000
	025 Move X0, [X0+328]
	026 Call 0x1C17CF4
	027 Move X0, 0x2304000
	028 Move X0, [X0+1496]
	029 Call 0x1C17CF4
	030 Move X0, 0x230A000
	031 Move X0, [X0+336]
	032 Call 0x1C17CF4
	033 Move X0, 0x230A000
	034 Move X0, [X0+344]
	035 Call 0x1C17CF4
	036 Move X0, 0x2309000
	037 Move X0, [X0+3136]
	038 Call 0x1C17CF4
	039 Move X0, 0x2304000
	040 Move X0, [X0+1528]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X19+3358], W8
	044 Move X0, [X21]
	045 Move [X31+8], X31
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {51}
	049 Call 0x1C17DFC
	050 Move X0, [X21]
	051 Move X8, [X0+184]
	052 Move X9, [X8]
	053 Compare X9, 0
	054 JumpIfEqual {188}
	055 Move W2, [X9+24]
	056 Move W10, [X9+28]
	057 Move X20, 0x2304000
	058 Move X20, [X20+1496]
	059 Add W10, W10, 1
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move [X9+24], W31
	062 Move [X9+28], W10
	063 Move X0, [X9+16]
	064 Move W1, W31
	065 Move X3, X31
	066 Call Array.Clear, X0, X1, X2
	067 Move X8, [X21]
	068 Move X8, [X8+184]
	069 Move X0, [X20]
	070 Move X22, 0x2304000
	071 Move X19, [X8+8]
	072 Move W9, [X0+224]
	073 Move X22, [X22+1528]
	074 Compare W9, 0
	075 JumpIfNotEqual {78}
	076 Call 0x1C17DFC
	077 Move X0, [X20]
	078 Move X8, [X0+184]
	079 Move X1, X31
	080 Move W0, [X8+12]
	081 Call LayerMask.op_Implicit, X0
	082 Move X8, [X22]
	083 Move W20, W0
	084 Move W9, [X8+224]
	085 Compare W9, 0
	086 JumpIfNotEqual {89}
	087 Move X0, X8
	088 Call 0x1C17DFC
	089 Move V0, V11
	090 Move V1, V10
	091 Move V2, V9
	092 Move V3, V8
	093 Move X0, X19
	094 Move W1, W20
	095 Move X2, X31
	096 Call Physics.OverlapSphereNonAlloc, X0, V0, X1, X2
	097 Move X8, [X21]
	098 Move X9, [X8+184]
	099 Move X9, [X9+8]
	100 Compare X9, 0
	101 JumpIfEqual {188}
	102 Move W9, [X9+24]
	103 Move X20, 0x230A000
	104 Move X22, 0x230A000
	105 Move X20, [X20+328]
	106 Move X22, [X22+336]
	107 NotImplemented "Instruction CMP not yet implemented."
	108 NotImplemented "Instruction CSEL not yet implemented."
	109 Move W19, W31
	110 NotImplemented "Instruction BIC not yet implemented."
	111 Move W9, [X8+224]
	112 Compare W9, 0
	113 JumpIfNotEqual {117}
	114 Move X0, X8
	115 Call 0x1C17DFC
	116 Move X8, [X21]
	117 Move X8, [X8+184]
	118 NotImplemented "Instruction CMP not yet implemented."
	119 Move X8, [X8+8]
	120 Compare X8, 0
	121 JumpIfEqual {188}
	122 Move W9, [X8+24]
	123 NotImplemented "Instruction CMP not yet implemented."
	124 Add X8, X8, W19
	125 Move X0, [X8+32]
	126 Compare X0, 0
	127 JumpIfEqual {188}
	128 Move X2, [X20]
	129 Add X1, X31, 8
	130 Call 0x21A5990, X0, X1
	131 Move TEMP, X0
	132 And TEMP, TEMP, 1
	133 Compare TEMP, 1
	134 JumpIfNotEqual {173}
	135 Move X0, [X31+8]
	136 Compare X0, 0
	137 JumpIfEqual {188}
	138 Move X1, X31
	139 Call NetPlayer.get_isDieSafe, X0
	140 Move TEMP, X0
	141 And TEMP, TEMP, 1
	142 Compare TEMP, 1
	143 JumpIfEqual {173}
	144 Move X0, [X21]
	145 Move W8, [X0+224]
	146 Compare W8, 0
	147 JumpIfNotEqual {150}
	148 Call 0x1C17DFC
	149 Move X0, [X21]
	150 Move X8, [X0+184]
	151 Move X0, [X8]
	152 Compare X0, 0
	153 JumpIfEqual {188}
	154 Move W10, [X0+28]
	155 Move X1, [X31+8]
	156 Move X8, [X0+16]
	157 Move X9, [X22]
	158 Add W10, W10, 1
	159 Move [X0+28], W10
	160 Compare X8, 0
	161 JumpIfEqual {188}
	162 NotImplemented "Instruction LDRSW not yet implemented."
	163 Move W11, [X8+24]
	164 NotImplemented "Instruction CMP not yet implemented."
	165 Add W9, W10, 1
	166 Add X8, X8, X10
	167 Move [X0+24], W9
	168 Move [X8+32], X1
	169 Move X8, [X9+32]
	170 Move X8, [X8+192]
	171 Move X2, [X8+112]
	172 Call List`1<Object>.AddWithResize, X0, X1
	173 Move X8, [X21]
	174 Add W19, W19, 1
	175 Move X0, [X8]
	176 Move X20, [X31+80]
	177 Move X19, [X31+88]
	178 Move X22, [X31+64]
	179 Move X21, [X31+72]
	180 Move X30, [X31+48]
	181 Move X23, [X31+56]
	182 Move D9, [X31+32]
	183 Move D8, [X31+40]
	184 Move D11, [X31+16]
	185 Move D10, [X31+24]
	186 Add X31, X31, 96
	187 Return X0
	188 Call 0x1C17F20
	189 Call 0x1C17F28

Method: System.Boolean IsVisibleByAnyLight(UnityEngine.Vector3 position)

Disassembly:
	0x01DF93E4 MOV V10.16B, V2.16B
	0x01DF93E8 BL 0x3C32E90
	0x01DF93EC CBZ X0, 0x1DF956C
	0x01DF93F0 ADRP X23, 0x22FA000
	0x01DF93F4 LDR X23, [X23 + 0x5F8]
	0x01DF93F8 MOV X1, X31
	0x01DF93FC BL 0x3C3DEB4
	0x01DF9400 LDR X0, [X23]
	0x01DF9404 MOV V11.16B, V0.16B
	0x01DF9408 MOV V12.16B, V1.16B
	0x01DF940C MOV V13.16B, V2.16B
	0x01DF9410 LDR W8, [X0 + 0xE0]
	0x01DF9414 MOV V14.16B, V3.16B
	0x01DF9418 CBNZ W8, 0x1DF9420
	0x01DF941C BL 0x1C16DFC
	0x01DF9420 STP S11, S12, [X31 + 0x10]
	0x01DF9424 STP S9, S10, [X31 + 0x4]
	0x01DF9428 LDP S11, S10, [X31 + 0x30]
	0x01DF942C LDR V3, [X31 + 0x38]
	0x01DF9430 LDP S4, S5, [X31 + 0x24]
	0x01DF9434 LDR V6, [X31 + 0x2C]
	0x01DF9438 ADD X2, X31, 0x40
	0x01DF943C ADD X3, X31, 0x3C
	0x01DF9440 MOV X0, X22
	0x01DF9444 MOV V0.16B, V15.16B
	0x01DF9448 MOV V1.16B, V11.16B
	0x01DF944C MOV V2.16B, V10.16B
	0x01DF9450 MOV X1, X21
	0x01DF9454 MOV X4, X31
	0x01DF9458 STP S13, S14, [X31 + 0x18]
	0x01DF945C STR S8, [X31]
	0x01DF9460 BL 0x3C8D58C
	0x01DF9464 TBZ X0, 0x0, 0x1DF9538
	0x01DF9468 LDP S0, S1, [X31 + 0x40]
	0x01DF946C LDR V2, [X31 + 0x48]
	0x01DF9470 LDR V12, [X31 + 0xC0]
	0x01DF9474 AND X20, X20, 0x0
	0x01DF9478 MOV X0, X20
	0x01DF947C MOV X1, X31
	0x01DF9480 FNEG S8, S0
	0x01DF9484 FNEG S9, S1
	0x01DF9488 FNEG S13, S2
	0x01DF948C BL 0x3C35CB8
	0x01DF9490 LDR X8, [X23]
	0x01DF9494 MOV W21, W0
	0x01DF9498 LDR W9, [X8 + 0xE0]
	0x01DF949C CBNZ W9, 0x1DF94A8
	0x01DF94A0 MOV X0, X8
	0x01DF94A4 BL 0x1C16DFC
	0x01DF94A8 MOV V0.16B, V15.16B
	0x01DF94AC MOV V1.16B, V11.16B
	0x01DF94B0 MOV V2.16B, V10.16B
	0x01DF94B4 MOV V3.16B, V8.16B
	0x01DF94B8 MOV V4.16B, V9.16B
	0x01DF94BC MOV V5.16B, V13.16B
	0x01DF94C0 MOV X0, X19
	0x01DF94C4 MOV V6.16B, V12.16B
	0x01DF94C8 MOV W1, W21
	0x01DF94CC MOV X2, X31
	0x01DF94D0 BL 0x3C8B18C
	0x01DF94D4 TBNZ X0, 0x0, 0x1DF9530
	0x01DF94D8 MOV X0, X20
	0x01DF94DC MOV X1, X31
	0x01DF94E0 BL 0x3C35CB8
	0x01DF94E4 LDR X8, [X23]

ISIL:
	001 Move [X31-64], D10
	002 Move [X31+16], D9
	003 Move [X31+24], D8
	004 Move [X31+32], X30
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x25E0000
	009 Move X19, 0x2300000
	010 Move W8, [X20+3359]
	011 Move X19, [X19+3136]
	012 Move V8, V2
	013 Move V9, V1
	014 Move V10, V0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {30}
	019 Move X0, 0x22FB000
	020 Move X0, [X0+1496]
	021 Call 0x1C17CF4
	022 Move X0, 0x2300000
	023 Move X0, [X0+3136]
	024 Call 0x1C17CF4
	025 Move X0, 0x22FB000
	026 Move X0, [X0+1528]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X20+3359], W8
	030 Move X8, [X19]
	031 Move X21, 0x22FB000
	032 Move W9, [X8+224]
	033 Move X21, [X21+1496]
	034 Compare W9, 0
	035 JumpIfNotEqual {39}
	036 Move X0, X8
	037 Call 0x1C17DFC
	038 Move X8, [X19]
	039 Move X0, [X21]
	040 Move X8, [X8+184]
	041 Move X20, 0x22FB000
	042 Move W9, [X0+224]
	043 Move X19, [X8+16]
	044 Move X20, [X20+1528]
	045 Compare W9, 0
	046 JumpIfNotEqual {49}
	047 Call 0x1C17DFC
	048 Move X0, [X21]
	049 Move X8, [X0+184]
	050 Move X1, X31
	051 Move W0, [X8+56]
	052 Call LayerMask.op_Implicit, X0
	053 Move X8, [X20]
	054 Move W20, W0
	055 Move W9, [X8+224]
	056 Compare W9, 0
	057 JumpIfNotEqual {60}
	058 Move X0, X8
	059 Call 0x1C17DFC
	060 Move S3, 1.5
	061 Move V0, V10
	062 Move V1, V9
	063 Move V2, V8
	064 Move X0, X19
	065 Move W1, W20
	066 Move X2, X31
	067 Call Physics.OverlapSphereNonAlloc, X0, V0, X1, X2
	068 Move X20, [X31+48]
	069 Move X19, [X31+56]
	070 Move X30, [X31+32]
	071 Move X21, [X31+40]
	072 Move D9, [X31+16]
	073 Move D8, [X31+24]
	074 NotImplemented "Instruction CMP not yet implemented."
	075 NotImplemented "Instruction CSET not yet implemented."
	076 Move V10, [X31+64]
	077 Return X0

Method: System.Boolean TryGetLightsBySight(UnityEngine.Vector3 viewPoint, UnityEngine.Vector3 viewDirection, System.Single viewRange, out System.Collections.Generic.List`1<AnimalCompany.Flashlight> flashlightsOutput)

Disassembly:
	0x01DF94E8 MOV W20, W0
	0x01DF94EC LDR W9, [X8 + 0xE0]
	0x01DF94F0 CBNZ W9, 0x1DF94FC
	0x01DF94F4 MOV X0, X8
	0x01DF94F8 BL 0x1C16DFC
	0x01DF94FC LDR V3, [X31 + 0x20]
	0x01DF9500 MOV V0.16B, V15.16B
	0x01DF9504 MOV V1.16B, V11.16B
	0x01DF9508 MOV V2.16B, V10.16B
	0x01DF950C MOV V4.16B, V8.16B
	0x01DF9510 MOV V5.16B, V9.16B
	0x01DF9514 MOV V6.16B, V13.16B
	0x01DF9518 MOV X0, X19
	0x01DF951C MOV V7.16B, V12.16B
	0x01DF9520 MOV W1, W20
	0x01DF9524 MOV X2, X31
	0x01DF9528 BL 0x3C8BB8C
	0x01DF952C TBZ X0, 0x0, 0x1DF9538
	0x01DF9530 MOVZ W0, 0x1
	0x01DF9534 B 0x1DF9548
	0x01DF9538 MOV W0, W31
	0x01DF953C MOVI V0.2D, 0x0
	0x01DF9540 STUR V0, [X19 + 0x1C]
	0x01DF9544 STP V0, V0, [X19]
	0x01DF9548 LDP X20, X19, [X31 + 0xB0]
	0x01DF954C LDP X22, X21, [X31 + 0xA0]
	0x01DF9550 LDP X30, X23, [X31 + 0x90]
	0x01DF9554 LDP D9, D8, [X31 + 0x80]
	0x01DF9558 LDP D11, D10, [X31 + 0x70]
	0x01DF955C LDP D13, D12, [X31 + 0x60]
	0x01DF9560 LDP D15, D14, [X31 + 0x50]
	0x01DF9564 ADD X31, X31, 0xC0
	0x01DF9568 RET
	0x01DF956C BL 0x1C16F20
	0x01DF9570 STR X30, [X31 - 0x40]!
	0x01DF9574 STP X24, X23, [X31 + 0x10]
	0x01DF9578 STP X22, X21, [X31 + 0x20]
	0x01DF957C STP X20, X19, [X31 + 0x30]
	0x01DF9580 ADRP X23, 0x25DF000
	0x01DF9584 ADRP X24, 0x22FF000
	0x01DF9588 ADRP X19, 0x22FF000
	0x01DF958C ADRP X20, 0x22FF000
	0x01DF9590 ADRP X22, 0x22FF000
	0x01DF9594 ADRP X21, 0x2300000
	0x01DF9598 LDRB W8, [X23 + 0xD25]
	0x01DF959C LDR X24, [X24 + 0xEE8]
	0x01DF95A0 LDR X19, [X19 + 0xEF0]
	0x01DF95A4 LDR X20, [X20 + 0xC40]
	0x01DF95A8 LDR X22, [X22 + 0x138]
	0x01DF95AC LDR X21, [X21 + 0x488]
	0x01DF95B0 TBNZ X8, 0x0, 0x1DF95F8
	0x01DF95B4 ADRP X0, 0x22FF000
	0x01DF95B8 LDR X0, [X0 + 0x138]
	0x01DF95BC BL 0x1C16CF4
	0x01DF95C0 ADRP X0, 0x22FF000
	0x01DF95C4 LDR X0, [X0 + 0xEF0]
	0x01DF95C8 BL 0x1C16CF4
	0x01DF95CC ADRP X0, 0x22FF000
	0x01DF95D0 LDR X0, [X0 + 0xEE8]
	0x01DF95D4 BL 0x1C16CF4
	0x01DF95D8 ADRP X0, 0x22FF000
	0x01DF95DC LDR X0, [X0 + 0xC40]
	0x01DF95E0 BL 0x1C16CF4
	0x01DF95E4 ADRP X0, 0x2300000
	0x01DF95E8 LDR X0, [X0 + 0x488]
	0x01DF95EC BL 0x1C16CF4
	0x01DF95F0 MOVZ W8, 0x1
	0x01DF95F4 STRB W8, [X23 + 0xD25]
	0x01DF95F8 LDR X0, [X24]
	0x01DF95FC BL 0x1C16F10
	0x01DF9600 LDR X2, [X19]
	0x01DF9604 MOVZ W1, 0x8
	0x01DF9608 MOV X19, X0
	0x01DF960C BL 0x301B830
	0x01DF9610 LDR X8, [X20]
	0x01DF9614 MOVZ W1, 0x8
	0x01DF9618 LDR X8, [X8 + 0xB8]
	0x01DF961C STR X19, [X8]
	0x01DF9620 LDR X0, [X22]
	0x01DF9624 BL 0x1C16D6C
	0x01DF9628 LDR X8, [X20]
	0x01DF962C MOVZ W1, 0x1
	0x01DF9630 LDR X8, [X8 + 0xB8]
	0x01DF9634 STR X0, [X8 + 0x8]
	0x01DF9638 LDR X0, [X22]
	0x01DF963C BL 0x1C16D6C
	0x01DF9640 LDR X8, [X20]
	0x01DF9644 MOVZ W1, 0x8
	0x01DF9648 LDR X8, [X8 + 0xB8]
	0x01DF964C STR X0, [X8 + 0x10]
	0x01DF9650 LDR X0, [X21]
	0x01DF9654 BL 0x1C16D6C
	0x01DF9658 LDR X8, [X20]
	0x01DF965C LDP X20, X19, [X31 + 0x30]
	0x01DF9660 LDP X22, X21, [X31 + 0x20]
	0x01DF9664 LDP X24, X23, [X31 + 0x10]
	0x01DF9668 LDR X8, [X8 + 0xB8]
	0x01DF966C STR X0, [X8 + 0x18]
	0x01DF9670 LDR X30, [X31], #0x40
	0x01DF9674 RET
	0x01DF9678 LDRB W0, [X0 + 0x10]
	0x01DF967C RET
	0x01DF9680 AND W8, W1, 0x1
	0x01DF9684 STRB W8, [X0 + 0x10]
	0x01DF9688 RET
	0x01DF968C LDR W0, [X0 + 0x14]
	0x01DF9690 RET
	0x01DF9694 STR W1, [X0 + 0x14]
	0x01DF9698 RET
	0x01DF969C LDR V0, [X0 + 0x18]
	0x01DF96A0 RET
	0x01DF96A4 STR S0, [X0 + 0x18]
	0x01DF96A8 RET
	0x01DF96AC LDR V0, [X0 + 0x1C]
	0x01DF96B0 RET
	0x01DF96B4 STR S0, [X0 + 0x1C]
	0x01DF96B8 RET
	0x01DF96BC LDR V0, [X0 + 0x20]
	0x01DF96C0 RET
	0x01DF96C4 STR S0, [X0 + 0x20]
	0x01DF96C8 RET
	0x01DF96CC MOV X1, X31
	0x01DF96D0 B 0x33BDD8C
	0x01DF96D4 STP X30, X21, [X31 - 0x20]!
	0x01DF96D8 STP X20, X19, [X31 + 0x10]
	0x01DF96DC ADRP X20, 0x25DF000
	0x01DF96E0 ADRP X21, 0x22FF000
	0x01DF96E4 LDRB W8, [X20 + 0xD26]
	0x01DF96E8 LDR X21, [X21 + 0xD58]
	0x01DF96EC MOV X19, X0
	0x01DF96F0 TBNZ X8, 0x0, 0x1DF9708
	0x01DF96F4 ADRP X0, 0x22FF000
	0x01DF96F8 LDR X0, [X0 + 0xD58]
	0x01DF96FC BL 0x1C16CF4
	0x01DF9700 MOVZ W8, 0x1
	0x01DF9704 STRB W8, [X20 + 0xD26]
	0x01DF9708 LDR X1, [X21]
	0x01DF970C MOV X0, X19
	0x01DF9710 BL 0x21A453C
	0x01DF9714 STR X0, [X19 + 0x30]
	0x01DF9718 LDP X20, X19, [X31 + 0x10]
	0x01DF971C LDP X30, X21, [X31], #0x20
	0x01DF9720 RET
	0x01DF9724 STR D10, [X31 - 0x30]!
	0x01DF9728 STP D9, D8, [X31 + 0x8]
	0x01DF972C STR X30, [X31 + 0x18]
	0x01DF9730 STP X20, X19, [X31 + 0x20]
	0x01DF9734 ADRP X20, 0x25DF000
	0x01DF9738 LDRB W8, [X20 + 0xD27]
	0x01DF973C MOV X19, X0
	0x01DF9740 TBNZ X8, 0x0, 0x1DF9770
	0x01DF9744 ADRP X0, 0x22FA000
	0x01DF9748 LDR X0, [X0 + 0xA58]
	0x01DF974C BL 0x1C16CF4
	0x01DF9750 ADRP X0, 0x22FA000
	0x01DF9754 LDR X0, [X0 + 0x598]
	0x01DF9758 BL 0x1C16CF4
	0x01DF975C ADRP X0, 0x2300000
	0x01DF9760 LDR X0, [X0 + 0x490]
	0x01DF9764 BL 0x1C16CF4
	0x01DF9768 MOVZ W8, 0x1
	0x01DF976C STRB W8, [X20 + 0xD27]
	0x01DF9770 MOV X0, X19
	0x01DF9774 MOV X1, X31
	0x01DF9778 BL 0x3C32E90
	0x01DF977C CBZ X0, 0x1DF98D8
	0x01DF9780 MOV X1, X31
	0x01DF9784 BL 0x3C3EB78
	0x01DF9788 LDR X0, [X19 + 0x20]
	0x01DF978C STP S0, S1, [X19 + 0x9C]
	0x01DF9790 STR S2, [X19 + 0xA4]
	0x01DF9794 CBZ X0, 0x1DF98D8
	0x01DF9798 LDR X1, [X19 + 0x28]
	0x01DF979C ADRP X20, 0x22FA000
	0x01DF97A0 LDR X20, [X20 + 0x598]
	0x01DF97A4 MOV X2, X31
	0x01DF97A8 BL 0x3BF686C
	0x01DF97AC LDR X0, [X20]
	0x01DF97B0 LDR X20, [X19 + 0x40]
	0x01DF97B4 LDR W8, [X0 + 0xE0]
	0x01DF97B8 CBNZ W8, 0x1DF97C0
	0x01DF97BC BL 0x1C16DFC
	0x01DF97C0 MOV X0, X20
	0x01DF97C4 MOV X1, X31
	0x01DF97C8 MOV X2, X31
	0x01DF97CC BL 0x3C3883C
	0x01DF97D0 TBZ X0, 0x0, 0x1DF98C4
	0x01DF97D4 ADRP X8, 0x22FA000
	0x01DF97D8 LDR X8, [X8 + 0xA58]
	0x01DF97DC LDR X0, [X8]
	0x01DF97E0 BL 0x1C16F10
	0x01DF97E4 ADRP X8, 0x2300000
	0x01DF97E8 LDR X8, [X8 + 0x490]
	0x01DF97EC MOV X2, X31
	0x01DF97F0 MOV X20, X0
	0x01DF97F4 LDR X1, [X8]
	0x01DF97F8 BL 0x3C35934
	0x01DF97FC CBZ X20, 0x1DF98D8
	0x01DF9800 MOV X0, X20
	0x01DF9804 MOV X1, X31
	0x01DF9808 BL 0x3C356F8
	0x01DF980C MOV X20, X0
	0x01DF9810 STR X0, [X19 + 0x40]
	0x01DF9814 MOV X0, X19
	0x01DF9818 MOV X1, X31
	0x01DF981C BL 0x3C32E90
	0x01DF9820 CBZ X20, 0x1DF98D8
	0x01DF9824 MOV X1, X0
	0x01DF9828 MOV X0, X20
	0x01DF982C MOV X2, X31
	0x01DF9830 BL 0x3C3FE70
	0x01DF9834 LDR X0, [X19 + 0x38]
	0x01DF9838 CBZ X0, 0x1DF98D8
	0x01DF983C LDR X19, [X19 + 0x40]
	0x01DF9840 MOV X1, X31
	0x01DF9844 BL 0x3C3F58C
	0x01DF9848 ADRP X20, 0x25DF000
	0x01DF984C LDRB W8, [X20 + 0xA1F]
	0x01DF9850 MOV V8.16B, V0.16B
	0x01DF9854 MOV V9.16B, V1.16B
	0x01DF9858 MOV V10.16B, V2.16B
	0x01DF985C CBNZ W8, 0x1DF9874
	0x01DF9860 ADRP X0, 0x22FA000
	0x01DF9864 LDR X0, [X0 + 0x5A0]
	0x01DF9868 BL 0x1C16CF4
	0x01DF986C MOVZ W8, 0x1
	0x01DF9870 STRB W8, [X20 + 0xA1F]
	0x01DF9874 CBZ X19, 0x1DF98D8
	0x01DF9878 ADRP X8, 0x22FA000
	0x01DF987C LDR X8, [X8 + 0x5A0]
	0x01DF9880 MOV X0, X19
	0x01DF9884 LDP X20, X19, [X31 + 0x20]
	0x01DF9888 LDR X30, [X31 + 0x18]
	0x01DF988C LDR X8, [X8]
	0x01DF9890 MOV X1, X31
	0x01DF9894 LDR X8, [X8 + 0xB8]
	0x01DF9898 LDP S1, S0, [X8 + 0x4C]
	0x01DF989C LDR V3, [X8 + 0x48]
	0x01DF98A0 FADD S0, S0, S0
	0x01DF98A4 FADD S2, S10, S0
	0x01DF98A8 FADD S0, S1, S1
	0x01DF98AC FADD S1, S9, S0
	0x01DF98B0 FADD S0, S3, S3
	0x01DF98B4 FADD S0, S8, S0
	0x01DF98B8 LDP D9, D8, [X31 + 0x8]
	0x01DF98BC LDR V10, [X31], #0x30
	0x01DF98C0 B 0x3C3F62C
	0x01DF98C4 LDP X20, X19, [X31 + 0x20]
	0x01DF98C8 LDR X30, [X31 + 0x18]
	0x01DF98CC LDP D9, D8, [X31 + 0x8]
	0x01DF98D0 LDR V10, [X31], #0x30
	0x01DF98D4 RET
	0x01DF98D8 BL 0x1C16F20
	0x01DF98DC STR X30, [X31 - 0x20]!
	0x01DF98E0 STP X20, X19, [X31 + 0x10]
	0x01DF98E4 MOV X19, X0
	0x01DF98E8 LDR X0, [X0 + 0x38]
	0x01DF98EC MOVZ W8, 0x1
	0x01DF98F0 STRB W8, [X19 + 0xA8]
	0x01DF98F4 CBZ X0, 0x1DF9944
	0x01DF98F8 MOV X20, X1
	0x01DF98FC MOV X1, X31
	0x01DF9900 BL 0x3C3DEB4
	0x01DF9904 LDR X0, [X19 + 0x40]
	0x01DF9908 STP S0, S1, [X19 + 0x58]
	0x01DF990C STP S2, S3, [X19 + 0x60]
	0x01DF9910 CBZ X0, 0x1DF9944
	0x01DF9914 MOV X1, X31
	0x01DF9918 BL 0x3C3F58C
	0x01DF991C STP S0, S1, [X19 + 0x68]
	0x01DF9920 STR S2, [X19 + 0x70]
	0x01DF9924 CBZ X20, 0x1DF9944
	0x01DF9928 LDR X8, [X20 + 0xC0]
	0x01DF992C CBZ X8, 0x1DF9944
	0x01DF9930 LDR X8, [X8 + 0xA8]
	0x01DF9934 STR X8, [X19 + 0x78]
	0x01DF9938 LDP X20, X19, [X31 + 0x10]
	0x01DF993C LDR X30, [X31], #0x20
	0x01DF9940 RET
	0x01DF9944 BL 0x1C16F20
	0x01DF9948 STP X30, X19, [X31 - 0x10]!
	0x01DF994C LDR X1, [X0 + 0x88]
	0x01DF9950 CBZ X1, 0x1DF9964
	0x01DF9954 MOV X2, X31
	0x01DF9958 MOV X19, X0
	0x01DF995C BL 0x3C36834
	0x01DF9960 STR X31, [X19 + 0x88]
	0x01DF9964 LDP X30, X19, [X31], #0x10
	0x01DF9968 RET
	0x01DF996C STR D10, [X31 - 0x30]!
	0x01DF9970 STP D9, D8, [X31 + 0x10]
	0x01DF9974 STP X30, X19, [X31 + 0x20]
	0x01DF9978 ADRP X8, 0xFFFFFFFFFECF0000
	0x01DF997C ADRP X9, 0xFFFFFFFFFECF1000
	0x01DF9980 LDR V1, [X8 + 0xF90]

ISIL:
	001 Subtract X31, X31, 240
	002 Move [X31+80], D15
	003 Move [X31+88], D14
	004 Move [X31+96], D13
	005 Move [X31+104], D12
	006 Move [X31+112], D11
	007 Move [X31+120], D10
	008 Move [X31+128], D9
	009 Move [X31+136], D8
	010 Move [X31+144], X29
	011 Move [X31+152], X30
	012 Move [X31+160], X28
	013 Move [X31+168], X27
	014 Move [X31+176], X26
	015 Move [X31+184], X25
	016 Move [X31+192], X24
	017 Move [X31+200], X23
	018 Move [X31+208], X22
	019 Move [X31+216], X21
	020 Move [X31+224], X20
	021 Move [X31+232], X19
	022 Move [X31+8], S6
	023 Move [X31+20], S1
	024 Move X23, 0x25E0000
	025 Move X21, 0x2301000
	026 Move X20, 0x2301000
	027 Move X22, 0x2300000
	028 Move W8, [X23+3360]
	029 Move X21, [X21+1120]
	030 Move X20, [X20+1128]
	031 Move X22, [X22+3136]
	032 Move X19, X0
	033 Move V10, V5
	034 Move V12, V4
	035 Move V9, V3
	036 Move V11, V2
	037 Move V15, V0
	038 Move TEMP, X8
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfEqual {71}
	042 Move X0, 0x2301000
	043 Move X0, [X0+1136]
	044 Call 0x1C17CF4
	045 Move X0, 0x22FB000
	046 Move X0, [X0+1496]
	047 Call 0x1C17CF4
	048 Move X0, 0x2301000
	049 Move X0, [X0+1144]
	050 Call 0x1C17CF4
	051 Move X0, 0x2301000
	052 Move X0, [X0+1128]
	053 Call 0x1C17CF4
	054 Move X0, 0x2300000
	055 Move X0, [X0+3176]
	056 Call 0x1C17CF4
	057 Move X0, 0x2301000
	058 Move X0, [X0+1120]
	059 Call 0x1C17CF4
	060 Move X0, 0x2300000
	061 Move X0, [X0+3136]
	062 Call 0x1C17CF4
	063 Move X0, 0x22FB000
	064 Move X0, [X0+1432]
	065 Call 0x1C17CF4
	066 Move X0, 0x22FB000
	067 Move X0, [X0+1528]
	068 Call 0x1C17CF4
	069 Move W8, 1
	070 Move [X23+3360], W8
	071 Move X23, 0x22FB000
	072 Move X23, [X23+1496]
	073 Move X0, [X21]
	074 NotImplemented "Instruction MOVI not yet implemented."
	075 Move [X31+60], V0
	076 Move [X31+32], V0
	077 Move [X31+40], V0
	078 Move [X31+24], X31
	079 Call 0x1C17F10
	080 Move X1, [X20]
	081 Move X20, X0
	082 Call List`1<Object>..ctor, X0
	083 Move [X19], X20
	084 Move X8, [X22]
	085 Move W9, [X8+224]
	086 Compare W9, 0
	087 JumpIfNotEqual {91}
	088 Move X0, X8
	089 Call 0x1C17DFC
	090 Move X8, [X22]
	091 Move X0, [X23]
	092 Move X8, [X8+184]
	093 Move [X31+12], S9
	094 Move [X31+20], S12
	095 Move X21, 0x22FB000
	096 Move W9, [X0+224]
	097 Move X20, [X8+24]
	098 Move X21, [X21+1528]
	099 Add S9, S9, S9
	100 Add S8, S12, S12
	101 Move V12, V10
	102 Add S10, S10, S10
	103 Move S14, 2
	104 Compare W9, 0
	105 JumpIfNotEqual {108}
	106 Call 0x1C17DFC
	107 Move X0, [X23]
	108 Move X8, [X0+184]
	109 Move V0, [X31+20]
	110 Move X1, X31
	111 Move V13, V15
	112 Move W0, [X8+56]
	113 Subtract S8, S0, S8
	114 Move V0, [X31+8]
	115 Subtract S15, S15, S9
	116 Subtract S9, S11, S10
	117 Move V10, V11
	118 Add S14, S0, S14
	119 Call LayerMask.op_Implicit, X0
	120 Move X8, [X21]
	121 Move W21, W0
	122 Move W9, [X8+224]
	123 Compare W9, 0
	124 JumpIfNotEqual {127}
	125 Move X0, X8
	126 Call 0x1C17DFC
	127 Move S4, [X31+12]
	128 Move S5, [X31+16]
	129 Move S3, 1.5
	130 Move V0, V15
	131 Move V1, V8
	132 Move V2, V9
	133 Move V6, V12
	134 Move X0, X20
	135 Move V7, V14
	136 Move W1, W21
	137 Move X2, X31
	138 Call Physics.SphereCastNonAlloc, X0, V0, X1, X2, V1, X3
	139 Move X8, [X22]
	140 Move X9, [X8+184]
	141 Move X9, [X9+24]
	142 Compare X9, 0
	143 JumpIfEqual {349}
	144 Move W9, [X9+24]
	145 NotImplemented "Instruction CMP not yet implemented."
	146 NotImplemented "Instruction CSEL not yet implemented."
	147 NotImplemented "Instruction CMP not yet implemented."
	148 Move X24, 0x22FB000
	149 Move X25, 0x2301000
	150 Move X26, 0x2301000
	151 Move X10, -19984384
	152 Move X20, 0x22FB000
	153 Move X24, [X24+1432]
	154 Move X25, [X25+1136]
	155 Move X26, [X26+1144]
	156 Move V12, [X10+3872]
	157 Move X20, [X20+1440]
	158 Move W9, W9
	159 Move X23, X31
	160 Move W27, 32
	161 Subtract X28, X9, 1
	162 Move X29, 0x25E0000
	163 Move W9, [X8+224]
	164 Compare W9, 0
	165 JumpIfNotEqual {169}
	166 Move X0, X8
	167 Call 0x1C17DFC
	168 Move X8, [X22]
	169 Move X8, [X8+184]
	170 Move X8, [X8+24]
	171 Compare X8, 0
	172 JumpIfEqual {349}
	173 Move W9, [X8+24]
	174 NotImplemented "Instruction CMP not yet implemented."
	175 Add X8, X8, X27
	176 Move W9, [X8+40]
	177 Move X10, [X8+32]
	178 Move V1, [X8]
	179 Move V0, [X8+16]
	180 Add X0, X31, 32
	181 Move X1, X31
	182 Move [X31+72], W9
	183 Move [X31+64], X10
	184 Move [X31+32], V1
	185 Move [X31+40], V0
	186 Call RaycastHit.get_collider, X0
	187 Move X8, [X24]
	188 Move X21, X0
	189 Move W9, [X8+224]
	190 Compare W9, 0
	191 JumpIfNotEqual {194}
	192 Move X0, X8
	193 Call 0x1C17DFC
	194 Move X0, X21
	195 Move X1, X31
	196 Move X2, X31
	197 Call Object.op_Inequality, X0, X1
	198 Move TEMP, X0
	199 And TEMP, TEMP, 1
	200 Compare TEMP, 1
	201 JumpIfNotEqual {317}
	202 Add X0, X31, 32
	203 Move X1, X31
	204 Call RaycastHit.get_collider, X0
	205 Compare X0, 0
	206 JumpIfEqual {349}
	207 Move X2, [X25]
	208 Add X1, X31, 24
	209 Call 0x21A5990, X0, X1
	210 Move TEMP, X0
	211 And TEMP, TEMP, 1
	212 Compare TEMP, 1
	213 JumpIfNotEqual {317}
	214 Move X8, [X31+24]
	215 Compare X8, 0
	216 JumpIfEqual {349}
	217 Move X0, [X24]
	218 Move X21, [X8+32]
	219 Move W9, [X0+224]
	220 Compare W9, 0
	221 JumpIfNotEqual {223}
	222 Call 0x1C17DFC
	223 Move X0, X21
	224 Move X1, X31
	225 Move X2, X31
	226 Call Object.op_Inequality, X0, X1
	227 Move TEMP, X0
	228 And TEMP, TEMP, 1
	229 Compare TEMP, 1
	230 JumpIfNotEqual {317}
	231 Move X8, [X31+24]
	232 Compare X8, 0
	233 JumpIfEqual {349}
	234 Move X0, [X8+32]
	235 Compare X0, 0
	236 JumpIfEqual {349}
	237 Move X1, X31
	238 Call Flashlight.get_isOn, X0
	239 Move TEMP, X0
	240 And TEMP, TEMP, 1
	241 Compare TEMP, 1
	242 JumpIfNotEqual {317}
	243 Add X0, X31, 32
	244 Move X1, X31
	245 Call RaycastHit.get_point, X0
	246 Move W8, [X29+1923]
	247 Move V8, V0
	248 Move V9, V1
	249 Move V11, V2
	250 Compare W8, 0
	251 JumpIfNotEqual {256}
	252 Move X0, X20
	253 Call 0x1C17CF4
	254 Move W8, 1
	255 Move [X29+1923], W8
	256 Move X8, [X20]
	257 Move X8, [X8+184]
	258 Move S0, [X8]
	259 Move S1, [X8+4]
	260 Move V2, [X8+8]
	261 Subtract S0, S8, S0
	262 Subtract S1, S9, S1
	263 Subtract S2, S11, S2
	264 Multiply S0, S0, S0
	265 Multiply S1, S1, S1
	266 Add S0, S0, S1
	267 Multiply S1, S2, S2
	268 Add S0, S1, S0
	269 NotImplemented "Instruction FCMP not yet implemented."
	270 Add X0, X31, 32
	271 Move X1, X31
	272 Call RaycastHit.get_point, X0
	273 Move X0, [X22]
	274 Move V8, V0
	275 Move V9, V1
	276 Move V11, V2
	277 Move W8, [X0+224]
	278 Compare W8, 0
	279 JumpIfNotEqual {281}
	280 Call 0x1C17DFC
	281 Move V1, [X31+20]
	282 Move V0, V13
	283 Move V2, V10
	284 Move V3, V8
	285 Move V4, V9
	286 Move V5, V11
	287 Call MobDetectionUtil.IsTargetInLineOfSight, X0, X1
	288 Move TEMP, X0
	289 And TEMP, TEMP, 1
	290 Compare TEMP, 1
	291 JumpIfNotEqual {317}
	292 Move X8, [X31+24]
	293 Compare X8, 0
	294 JumpIfEqual {349}
	295 Move X0, [X19]
	296 Compare X0, 0
	297 JumpIfEqual {349}
	298 Move W10, [X0+28]
	299 Move X1, [X8+32]
	300 Move X8, [X0+16]
	301 Move X9, [X26]
	302 Add W10, W10, 1
	303 Move [X0+28], W10
	304 Compare X8, 0
	305 JumpIfEqual {349}
	306 NotImplemented "Instruction LDRSW not yet implemented."
	307 Move W11, [X8+24]
	308 NotImplemented "Instruction CMP not yet implemented."
	309 Add W9, W10, 1
	310 Add X8, X8, X10
	311 Move [X0+24], W9
	312 Move [X8+32], X1
	313 Move X8, [X9+32]
	314 Move X8, [X8+192]
	315 Move X2, [X8+112]
	316 Call List`1<Object>.AddWithResize, X0, X1
	317 NotImplemented "Instruction CMP not yet implemented."
	318 Move X8, [X22]
	319 Add X23, X23, 1
	320 Add X27, X27, 44
	321 Move X8, [X19]
	322 Compare X8, 0
	323 JumpIfEqual {349}
	324 Move W8, [X8+24]
	325 Move X20, [X31+224]
	326 Move X19, [X31+232]
	327 Move X22, [X31+208]
	328 Move X21, [X31+216]
	329 Move X24, [X31+192]
	330 Move X23, [X31+200]
	331 Move X26, [X31+176]
	332 Move X25, [X31+184]
	333 Move X28, [X31+160]
	334 Move X27, [X31+168]
	335 Move X29, [X31+144]
	336 Move X30, [X31+152]
	337 Move D9, [X31+128]
	338 Move D8, [X31+136]
	339 Move D11, [X31+112]
	340 Move D10, [X31+120]
	341 Move D13, [X31+96]
	342 Move D12, [X31+104]
	343 Move D15, [X31+80]
	344 Move D14, [X31+88]
	345 NotImplemented "Instruction CMP not yet implemented."
	346 NotImplemented "Instruction CSET not yet implemented."
	347 Add X31, X31, 240
	348 Return X0
	349 Call 0x1C17F20
	350 Call 0x1C17F28

Method: System.Boolean TryGetAnyLightBySight(UnityEngine.Vector3 viewPoint, UnityEngine.Vector3 viewDirection, System.Single viewRange, out AnimalCompany.Flashlight flashlightOutput)

Disassembly:
	0x01DF9984 LDR V2, [X9 + 0x30]
	0x01DF9988 MOV X19, X0
	0x01DF998C FMOV S0, 1
	0x01DF9990 FMOV S3, 1
	0x01DF9994 MOV X0, X31
	0x01DF9998 BL 0x3C0D030
	0x01DF999C LDR X0, [X19 + 0x40]
	0x01DF99A0 CBZ X0, 0x1DF9A14
	0x01DF99A4 MOV X1, X31
	0x01DF99A8 BL 0x3C3F58C
	0x01DF99AC ADRP X8, 0xFFFFFFFFFECF1000
	0x01DF99B0 LDR V3, [X8 + 0xBC]
	0x01DF99B4 MOV X0, X31
	0x01DF99B8 BL 0x3C0CB98
	0x01DF99BC LDR X0, [X19 + 0x38]
	0x01DF99C0 CBZ X0, 0x1DF9A14
	0x01DF99C4 MOV X1, X31
	0x01DF99C8 BL 0x3C3F58C
	0x01DF99CC LDR X0, [X19 + 0x40]
	0x01DF99D0 CBZ X0, 0x1DF9A14
	0x01DF99D4 MOV X1, X31
	0x01DF99D8 MOV V8.16B, V0.16B
	0x01DF99DC MOV V9.16B, V1.16B
	0x01DF99E0 MOV V10.16B, V2.16B
	0x01DF99E4 BL 0x3C3F58C
	0x01DF99E8 MOV V3.16B, V0.16B
	0x01DF99EC MOV V4.16B, V1.16B
	0x01DF99F0 MOV V0.16B, V8.16B
	0x01DF99F4 MOV V1.16B, V9.16B
	0x01DF99F8 LDP X30, X19, [X31 + 0x20]
	0x01DF99FC LDP D9, D8, [X31 + 0x10]
	0x01DF9A00 MOV V5.16B, V2.16B
	0x01DF9A04 MOV V2.16B, V10.16B
	0x01DF9A08 MOV X0, X31
	0x01DF9A0C LDR V10, [X31], #0x30
	0x01DF9A10 B 0x3C0CB04
	0x01DF9A14 BL 0x1C16F20
	0x01DF9A18 STR X30, [X31 - 0x20]!
	0x01DF9A1C STP X20, X19, [X31 + 0x10]
	0x01DF9A20 LDR X20, [X0 + 0x78]
	0x01DF9A24 MOV X1, X31
	0x01DF9A28 MOV X19, X0
	0x01DF9A2C BL 0x3C32E90
	0x01DF9A30 CBZ X0, 0x1DF9A54
	0x01DF9A34 MOV X1, X31
	0x01DF9A38 BL 0x3C3F58C
	0x01DF9A3C LDR V3, [X19 + 0x80]
	0x01DF9A40 MOV X0, X20
	0x01DF9A44 LDP X20, X19, [X31 + 0x10]
	0x01DF9A48 MOV X1, X31
	0x01DF9A4C LDR X30, [X31], #0x20
	0x01DF9A50 B 0x1DD1B94
	0x01DF9A54 BL 0x1C16F20
	0x01DF9A58 STR S0, [X0 + 0x80]
	0x01DF9A5C RET
	0x01DF9A60 STP X30, X21, [X31 - 0x20]!
	0x01DF9A64 STP X20, X19, [X31 + 0x10]
	0x01DF9A68 ADRP X21, 0x25DF000
	0x01DF9A6C ADRP X20, 0x22FF000
	0x01DF9A70 LDRB W8, [X21 + 0xD28]
	0x01DF9A74 LDR X20, [X20 + 0xC88]
	0x01DF9A78 MOV X19, X0
	0x01DF9A7C TBNZ X8, 0x0, 0x1DF9A94
	0x01DF9A80 ADRP X0, 0x22FF000
	0x01DF9A84 LDR X0, [X0 + 0xC88]
	0x01DF9A88 BL 0x1C16CF4
	0x01DF9A8C MOVZ W8, 0x1
	0x01DF9A90 STRB W8, [X21 + 0xD28]
	0x01DF9A94 LDR X0, [X20]
	0x01DF9A98 LDR X19, [X19 + 0x20]
	0x01DF9A9C LDR W8, [X0 + 0xE0]
	0x01DF9AA0 CBNZ W8, 0x1DF9AA8
	0x01DF9AA4 BL 0x1C16DFC
	0x01DF9AA8 CBZ X19, 0x1DF9ACC
	0x01DF9AAC LDR X8, [X20]
	0x01DF9AB0 MOV X0, X19
	0x01DF9AB4 LDP X20, X19, [X31 + 0x10]
	0x01DF9AB8 MOV X2, X31
	0x01DF9ABC LDR X8, [X8 + 0xB8]
	0x01DF9AC0 LDR W1, [X8 + 0x28]
	0x01DF9AC4 LDP X30, X21, [X31], #0x20
	0x01DF9AC8 B 0x3BF5F88
	0x01DF9ACC BL 0x1C16F20
	0x01DF9AD0 STP X30, X19, [X31 - 0x10]!
	0x01DF9AD4 AND W8, W1, 0x1
	0x01DF9AD8 STRB W8, [X0 + 0x54]
	0x01DF9ADC TBNZ X1, 0x0, 0x1DF9B20
	0x01DF9AE0 LDRB W8, [X0 + 0xA8]
	0x01DF9AE4 MOV X19, X0
	0x01DF9AE8 CBZ W8, 0x1DF9B20
	0x01DF9AEC LDR X0, [X19 + 0x38]
	0x01DF9AF0 CBZ X0, 0x1DF9B28
	0x01DF9AF4 LDP S2, S3, [X19 + 0x60]
	0x01DF9AF8 LDP S0, S1, [X19 + 0x58]
	0x01DF9AFC MOV X1, X31
	0x01DF9B00 BL 0x3C3F7AC
	0x01DF9B04 LDR X0, [X19 + 0x40]
	0x01DF9B08 CBZ X0, 0x1DF9B28
	0x01DF9B0C LDP S1, S2, [X19 + 0x6C]
	0x01DF9B10 LDR V0, [X19 + 0x68]
	0x01DF9B14 MOV X1, X31
	0x01DF9B18 LDP X30, X19, [X31], #0x10
	0x01DF9B1C B 0x3C3F62C
	0x01DF9B20 LDP X30, X19, [X31], #0x10
	0x01DF9B24 RET
	0x01DF9B28 BL 0x1C16F20
	0x01DF9B2C STR X30, [X31 - 0x10]!
	0x01DF9B30 LDR X0, [X0 + 0x40]
	0x01DF9B34 CBZ X0, 0x1DF9B44
	0x01DF9B38 MOV X1, X31
	0x01DF9B3C LDR X30, [X31], #0x10
	0x01DF9B40 B 0x3C3F62C
	0x01DF9B44 BL 0x1C16F20
	0x01DF9B48 STR X30, [X31 - 0x40]!
	0x01DF9B4C STP X24, X23, [X31 + 0x10]
	0x01DF9B50 STP X22, X21, [X31 + 0x20]
	0x01DF9B54 STP X20, X19, [X31 + 0x30]
	0x01DF9B58 ADRP X19, 0x25DF000
	0x01DF9B5C LDRB W8, [X19 + 0xD29]
	0x01DF9B60 MOV X20, X0
	0x01DF9B64 TBNZ X8, 0x0, 0x1DF9B88
	0x01DF9B68 ADRP X0, 0x22FF000
	0x01DF9B6C LDR X0, [X0 + 0xD58]
	0x01DF9B70 BL 0x1C16CF4
	0x01DF9B74 ADRP X0, 0x22FF000
	0x01DF9B78 LDR X0, [X0 + 0xC88]
	0x01DF9B7C BL 0x1C16CF4
	0x01DF9B80 MOVZ W8, 0x1
	0x01DF9B84 STRB W8, [X19 + 0xD29]
	0x01DF9B88 LDR X19, [X20 + 0x30]
	0x01DF9B8C CBZ X19, 0x1DF9B98
	0x01DF9B90 LDR X8, [X19 + 0x18]
	0x01DF9B94 CBNZ X8, 0x1DF9BB8
	0x01DF9B98 ADRP X8, 0x22FF000
	0x01DF9B9C LDR X8, [X8 + 0xD58]
	0x01DF9BA0 MOV X0, X20
	0x01DF9BA4 LDR X1, [X8]
	0x01DF9BA8 BL 0x21A453C
	0x01DF9BAC MOV X19, X0
	0x01DF9BB0 STR X0, [X20 + 0x30]
	0x01DF9BB4 CBZ X0, 0x1DF9C88
	0x01DF9BB8 LDR W8, [X19 + 0x18]
	0x01DF9BBC CMP W8, 0x1
	0x01DF9BC0 B.LT 0x1DF9C70
	0x01DF9BC4 ADRP X23, 0x22FF000
	0x01DF9BC8 LDR X23, [X23 + 0xC88]
	0x01DF9BCC MOV W22, W31
	0x01DF9BD0 CMP W22, W8
	0x01DF9BD4 B.CS 0x1DF9C84
	0x01DF9BD8 ADD X8, X19, W22, 0x3, SXTW
	0x01DF9BDC LDR X0, [X8 + 0x20]
	0x01DF9BE0 CBZ X0, 0x1DF9C88
	0x01DF9BE4 MOV X1, X31
	0x01DF9BE8 BL 0x3C133DC
	0x01DF9BEC CBZ X0, 0x1DF9C88
	0x01DF9BF0 LDR W8, [X0 + 0x18]
	0x01DF9BF4 MOV X20, X0
	0x01DF9BF8 CMP W8, 0x1
	0x01DF9BFC B.LT 0x1DF9C60
	0x01DF9C00 MOV W24, W31
	0x01DF9C04 CMP W24, W8
	0x01DF9C08 B.CS 0x1DF9C84
	0x01DF9C0C LDR X0, [X23]
	0x01DF9C10 ADD X8, X20, W24, 0x3, SXTW
	0x01DF9C14 LDR X21, [X8 + 0x20]
	0x01DF9C18 LDR W9, [X0 + 0xE0]
	0x01DF9C1C CBNZ W9, 0x1DF9C24
	0x01DF9C20 BL 0x1C16DFC
	0x01DF9C24 CBZ X21, 0x1DF9C88
	0x01DF9C28 LDR X8, [X23]
	0x01DF9C2C FMOV S0, W31
	0x01DF9C30 FMOV S1, W31
	0x01DF9C34 FMOV S2, W31
	0x01DF9C38 LDR X8, [X8 + 0xB8]
	0x01DF9C3C FMOV S3, 1
	0x01DF9C40 MOV X0, X21
	0x01DF9C44 MOV X2, X31
	0x01DF9C48 LDR W1, [X8]
	0x01DF9C4C BL 0x3C14988
	0x01DF9C50 LDR W8, [X20 + 0x18]
	0x01DF9C54 ADD W24, W24, 0x1
	0x01DF9C58 CMP W24, W8
	0x01DF9C5C B.LT 0x1DF9C04
	0x01DF9C60 LDR W8, [X19 + 0x18]
	0x01DF9C64 ADD W22, W22, 0x1
	0x01DF9C68 CMP W22, W8
	0x01DF9C6C B.LT 0x1DF9BD0
	0x01DF9C70 LDP X20, X19, [X31 + 0x30]
	0x01DF9C74 LDP X22, X21, [X31 + 0x20]
	0x01DF9C78 LDP X24, X23, [X31 + 0x10]
	0x01DF9C7C LDR X30, [X31], #0x40
	0x01DF9C80 RET
	0x01DF9C84 BL 0x1C16F28
	0x01DF9C88 BL 0x1C16F20
	0x01DF9C8C STP X30, X21, [X31 - 0x20]!
	0x01DF9C90 STP X20, X19, [X31 + 0x10]
	0x01DF9C94 ADRP X20, 0x25DF000
	0x01DF9C98 ADRP X21, 0x22FF000
	0x01DF9C9C LDRB W8, [X20 + 0xD2A]
	0x01DF9CA0 LDR X21, [X21 + 0xC88]
	0x01DF9CA4 MOV X19, X0
	0x01DF9CA8 TBNZ X8, 0x0, 0x1DF9CC0
	0x01DF9CAC ADRP X0, 0x22FF000
	0x01DF9CB0 LDR X0, [X0 + 0xC88]
	0x01DF9CB4 BL 0x1C16CF4
	0x01DF9CB8 MOVZ W8, 0x1
	0x01DF9CBC STRB W8, [X20 + 0xD2A]
	0x01DF9CC0 LDR X0, [X21]
	0x01DF9CC4 LDR X20, [X19 + 0x20]
	0x01DF9CC8 LDR W8, [X0 + 0xE0]
	0x01DF9CCC CBNZ W8, 0x1DF9CD4
	0x01DF9CD0 BL 0x1C16DFC
	0x01DF9CD4 CBZ X20, 0x1DF9D38
	0x01DF9CD8 LDR X8, [X21]
	0x01DF9CDC MOV X0, X20
	0x01DF9CE0 MOV X2, X31
	0x01DF9CE4 LDR X8, [X8 + 0xB8]
	0x01DF9CE8 LDR W1, [X8 + 0x48]
	0x01DF9CEC BL 0x3BF63C0
	0x01DF9CF0 LDR X0, [X19 + 0x20]
	0x01DF9CF4 CBZ X0, 0x1DF9D38
	0x01DF9CF8 LDR X8, [X21]
	0x01DF9CFC MOV W2, W31
	0x01DF9D00 MOV X3, X31
	0x01DF9D04 LDR X8, [X8 + 0xB8]
	0x01DF9D08 LDR W1, [X8 + 0x28]
	0x01DF9D0C BL 0x3BF60B8
	0x01DF9D10 LDR X0, [X19 + 0x20]
	0x01DF9D14 CBZ X0, 0x1DF9D38
	0x01DF9D18 LDR X8, [X21]
	0x01DF9D1C LDP X20, X19, [X31 + 0x10]
	0x01DF9D20 MOV W2, W31
	0x01DF9D24 MOV X3, X31
	0x01DF9D28 LDR X8, [X8 + 0xB8]
	0x01DF9D2C LDR W1, [X8 + 0x2C]
	0x01DF9D30 LDP X30, X21, [X31], #0x20
	0x01DF9D34 B 0x3BF60B8
	0x01DF9D38 BL 0x1C16F20
	0x01DF9D3C STR D8, [X31 - 0x30]!
	0x01DF9D40 STP X30, X21, [X31 + 0x10]
	0x01DF9D44 STP X20, X19, [X31 + 0x20]
	0x01DF9D48 ADRP X20, 0x25DF000
	0x01DF9D4C ADRP X21, 0x22FF000
	0x01DF9D50 LDRB W8, [X20 + 0xD2B]
	0x01DF9D54 LDR X21, [X21 + 0xC88]
	0x01DF9D58 MOV V8.16B, V0.16B
	0x01DF9D5C MOV X19, X0
	0x01DF9D60 TBNZ X8, 0x0, 0x1DF9D78
	0x01DF9D64 ADRP X0, 0x22FF000
	0x01DF9D68 LDR X0, [X0 + 0xC88]
	0x01DF9D6C BL 0x1C16CF4
	0x01DF9D70 MOVZ W8, 0x1
	0x01DF9D74 STRB W8, [X20 + 0xD2B]
	0x01DF9D78 LDR X0, [X21]
	0x01DF9D7C LDR X20, [X19 + 0x20]
	0x01DF9D80 LDR W8, [X0 + 0xE0]
	0x01DF9D84 CBNZ W8, 0x1DF9D8C
	0x01DF9D88 BL 0x1C16DFC
	0x01DF9D8C CBZ X20, 0x1DF9E14
	0x01DF9D90 LDR X8, [X21]
	0x01DF9D94 MOVZ W2, 0x1
	0x01DF9D98 MOV X0, X20
	0x01DF9D9C MOV X3, X31
	0x01DF9DA0 LDR X8, [X8 + 0xB8]

ISIL:
	001 Subtract X31, X31, 240
	002 Move [X31+80], D15
	003 Move [X31+88], D14
	004 Move [X31+96], D13
	005 Move [X31+104], D12
	006 Move [X31+112], D11
	007 Move [X31+120], D10
	008 Move [X31+128], D9
	009 Move [X31+136], D8
	010 Move [X31+144], X29
	011 Move [X31+152], X30
	012 Move [X31+160], X28
	013 Move [X31+168], X27
	014 Move [X31+176], X26
	015 Move [X31+184], X25
	016 Move [X31+192], X24
	017 Move [X31+200], X23
	018 Move [X31+208], X22
	019 Move [X31+216], X21
	020 Move [X31+224], X20
	021 Move [X31+232], X19
	022 Move [X31+8], S6
	023 Move [X31+20], S1
	024 Move X20, 0x25E0000
	025 Move X22, 0x2300000
	026 Move W8, [X20+3361]
	027 Move X22, [X22+3136]
	028 Move X19, X0
	029 Move V10, V5
	030 Move V12, V4
	031 Move V9, V3
	032 Move V11, V2
	033 Move V15, V0
	034 Move TEMP, X8
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfEqual {55}
	038 Move X0, 0x2301000
	039 Move X0, [X0+1136]
	040 Call 0x1C17CF4
	041 Move X0, 0x22FB000
	042 Move X0, [X0+1496]
	043 Call 0x1C17CF4
	044 Move X0, 0x2300000
	045 Move X0, [X0+3136]
	046 Call 0x1C17CF4
	047 Move X0, 0x22FB000
	048 Move X0, [X0+1432]
	049 Call 0x1C17CF4
	050 Move X0, 0x22FB000
	051 Move X0, [X0+1528]
	052 Call 0x1C17CF4
	053 Move W8, 1
	054 Move [X20+3361], W8
	055 NotImplemented "Instruction MOVI not yet implemented."
	056 Move [X31+24], X31
	057 Move [X31+60], V0
	058 Move [X31+32], V0
	059 Move [X31+40], V0
	060 Move [X19], X31
	061 Move X8, [X22]
	062 Move X21, 0x22FB000
	063 Move W9, [X8+224]
	064 Move X21, [X21+1496]
	065 Compare W9, 0
	066 JumpIfNotEqual {70}
	067 Move X0, X8
	068 Call 0x1C17DFC
	069 Move X8, [X22]
	070 Move X0, [X21]
	071 Move X8, [X8+184]
	072 Move [X31+12], S9
	073 Move [X31+20], S12
	074 Move X23, 0x22FB000
	075 Move W9, [X0+224]
	076 Move X20, [X8+24]
	077 Move X23, [X23+1528]
	078 Add S9, S9, S9
	079 Add S8, S12, S12
	080 Move V12, V10
	081 Add S10, S10, S10
	082 Move S14, 2
	083 Compare W9, 0
	084 JumpIfNotEqual {87}
	085 Call 0x1C17DFC
	086 Move X0, [X21]
	087 Move X8, [X0+184]
	088 Move V0, [X31+20]
	089 Move X1, X31
	090 Move V13, V15
	091 Move W0, [X8+56]
	092 Subtract S8, S0, S8
	093 Move V0, [X31+8]
	094 Subtract S15, S15, S9
	095 Subtract S9, S11, S10
	096 Move V10, V11
	097 Add S14, S0, S14
	098 Call LayerMask.op_Implicit, X0
	099 Move X8, [X23]
	100 Move W21, W0
	101 Move W9, [X8+224]
	102 Compare W9, 0
	103 JumpIfNotEqual {106}
	104 Move X0, X8
	105 Call 0x1C17DFC
	106 Move S4, [X31+12]
	107 Move S5, [X31+16]
	108 Move S3, 1.5
	109 Move V0, V15
	110 Move V1, V8
	111 Move V2, V9
	112 Move V6, V12
	113 Move X0, X20
	114 Move V7, V14
	115 Move W1, W21
	116 Move X2, X31
	117 Call Physics.SphereCastNonAlloc, X0, V0, X1, X2, V1, X3
	118 Move X8, [X22]
	119 Move X9, [X8+184]
	120 Move X9, [X9+24]
	121 Compare X9, 0
	122 JumpIfEqual {317}
	123 Move W9, [X9+24]
	124 Move X23, 0x22FB000
	125 Move X23, [X23+1432]
	126 NotImplemented "Instruction CMP not yet implemented."
	127 NotImplemented "Instruction CSEL not yet implemented."
	128 NotImplemented "Instruction CMP not yet implemented."
	129 Move X25, 0x2301000
	130 Move X10, -19984384
	131 Move X20, 0x22FB000
	132 Move X25, [X25+1136]
	133 Move V12, [X10+3872]
	134 Move X20, [X20+1440]
	135 Move W9, W9
	136 Move X24, X31
	137 Move W26, 32
	138 Subtract X27, X9, 1
	139 Move X28, 0x25E0000
	140 Move W29, 1
	141 Move W9, [X8+224]
	142 Compare W9, 0
	143 JumpIfNotEqual {147}
	144 Move X0, X8
	145 Call 0x1C17DFC
	146 Move X8, [X22]
	147 Move X8, [X8+184]
	148 Move X8, [X8+24]
	149 Compare X8, 0
	150 JumpIfEqual {317}
	151 Move W9, [X8+24]
	152 NotImplemented "Instruction CMP not yet implemented."
	153 Add X8, X8, X26
	154 Move W9, [X8+40]
	155 Move X10, [X8+32]
	156 Move V1, [X8]
	157 Move V0, [X8+16]
	158 Add X0, X31, 32
	159 Move X1, X31
	160 Move [X31+72], W9
	161 Move [X31+64], X10
	162 Move [X31+32], V1
	163 Move [X31+40], V0
	164 Call RaycastHit.get_collider, X0
	165 Move X8, [X23]
	166 Move X21, X0
	167 Move W9, [X8+224]
	168 Compare W9, 0
	169 JumpIfNotEqual {172}
	170 Move X0, X8
	171 Call 0x1C17DFC
	172 Move X0, X21
	173 Move X1, X31
	174 Move X2, X31
	175 Call Object.op_Inequality, X0, X1
	176 Move TEMP, X0
	177 And TEMP, TEMP, 1
	178 Compare TEMP, 1
	179 JumpIfNotEqual {274}
	180 Add X0, X31, 32
	181 Move X1, X31
	182 Call RaycastHit.get_collider, X0
	183 Compare X0, 0
	184 JumpIfEqual {317}
	185 Move X2, [X25]
	186 Add X1, X31, 24
	187 Call 0x21A5990, X0, X1
	188 Move TEMP, X0
	189 And TEMP, TEMP, 1
	190 Compare TEMP, 1
	191 JumpIfNotEqual {274}
	192 Move X8, [X31+24]
	193 Compare X8, 0
	194 JumpIfEqual {317}
	195 Move X0, [X23]
	196 Move X21, [X8+32]
	197 Move W9, [X0+224]
	198 Compare W9, 0
	199 JumpIfNotEqual {201}
	200 Call 0x1C17DFC
	201 Move X0, X21
	202 Move X1, X31
	203 Move X2, X31
	204 Call Object.op_Inequality, X0, X1
	205 Move TEMP, X0
	206 And TEMP, TEMP, 1
	207 Compare TEMP, 1
	208 JumpIfNotEqual {274}
	209 Move X8, [X31+24]
	210 Compare X8, 0
	211 JumpIfEqual {317}
	212 Move X0, [X8+32]
	213 Compare X0, 0
	214 JumpIfEqual {317}
	215 Move X1, X31
	216 Call Flashlight.get_isOn, X0
	217 Move TEMP, X0
	218 And TEMP, TEMP, 1
	219 Compare TEMP, 1
	220 JumpIfNotEqual {274}
	221 Add X0, X31, 32
	222 Move X1, X31
	223 Call RaycastHit.get_point, X0
	224 Move W8, [X28+1923]
	225 Move V8, V0
	226 Move V9, V1
	227 Move V11, V2
	228 Compare W8, 0
	229 JumpIfNotEqual {233}
	230 Move X0, X20
	231 Call 0x1C17CF4
	232 Move [X28+1923], W29
	233 Move X8, [X20]
	234 Move X8, [X8+184]
	235 Move S0, [X8]
	236 Move S1, [X8+4]
	237 Move V2, [X8+8]
	238 Subtract S0, S8, S0
	239 Subtract S1, S9, S1
	240 Subtract S2, S11, S2
	241 Multiply S0, S0, S0
	242 Multiply S1, S1, S1
	243 Add S0, S0, S1
	244 Multiply S1, S2, S2
	245 Add S0, S1, S0
	246 NotImplemented "Instruction FCMP not yet implemented."
	247 Move X8, [X31+24]
	248 Compare X8, 0
	249 JumpIfEqual {317}
	250 Move X8, [X8+32]
	251 Move [X19], X8
	252 Add X0, X31, 32
	253 Move X1, X31
	254 Call RaycastHit.get_point, X0
	255 Move X0, [X22]
	256 Move V8, V0
	257 Move V9, V1
	258 Move V11, V2
	259 Move W8, [X0+224]
	260 Compare W8, 0
	261 JumpIfNotEqual {263}
	262 Call 0x1C17DFC
	263 Move V1, [X31+20]
	264 Move V0, V13
	265 Move V2, V10
	266 Move V3, V8
	267 Move V4, V9
	268 Move V5, V11
	269 Call MobDetectionUtil.IsTargetInLineOfSight, X0, X1
	270 Move TEMP, X0
	271 And TEMP, TEMP, 1
	272 Compare TEMP, 1
	273 JumpIfEqual {311}
	274 NotImplemented "Instruction CMP not yet implemented."
	275 Move X8, [X22]
	276 Add X24, X24, 1
	277 Add X26, X26, 44
	278 Move X0, [X23]
	279 Move X19, [X19]
	280 Move W8, [X0+224]
	281 Compare W8, 0
	282 JumpIfNotEqual {284}
	283 Call 0x1C17DFC
	284 Move X0, X19
	285 Move X1, X31
	286 Move X2, X31
	287 Call Object.op_Inequality, X0, X1
	288 Move X20, [X31+224]
	289 Move X19, [X31+232]
	290 Move X22, [X31+208]
	291 Move X21, [X31+216]
	292 Move X24, [X31+192]
	293 Move X23, [X31+200]
	294 Move X26, [X31+176]
	295 Move X25, [X31+184]
	296 Move X28, [X31+160]
	297 Move X27, [X31+168]
	298 Move X29, [X31+144]
	299 Move X30, [X31+152]
	300 Move D9, [X31+128]
	301 Move D8, [X31+136]
	302 Move D11, [X31+112]
	303 Move D10, [X31+120]
	304 Move D13, [X31+96]
	305 Move D12, [X31+104]
	306 Move D15, [X31+80]
	307 Move D14, [X31+88]
	308 And W0, W0, 1
	309 Add X31, X31, 240
	310 Return X0
	311 Move X8, [X31+24]
	312 Compare X8, 0
	313 JumpIfEqual {317}
	314 Move X8, [X8+32]
	315 Move W0, 1
	316 Move [X19], X8
	317 Call 0x1C17F20
	318 Call 0x1C17F28

Method: System.Boolean TryGetPlayersFoundMe(AnimalCompany.MobController mob, out System.Collections.Generic.List`1<AnimalCompany.NetPlayer> players)

Disassembly:
	0x01DF9DA4 LDR W1, [X8 + 0x28]
	0x01DF9DA8 BL 0x3BF60B8
	0x01DF9DAC LDR X0, [X19 + 0x20]
	0x01DF9DB0 CBZ X0, 0x1DF9E14
	0x01DF9DB4 LDR X8, [X21]
	0x01DF9DB8 MOV W2, W31
	0x01DF9DBC MOV X3, X31
	0x01DF9DC0 LDR X8, [X8 + 0xB8]
	0x01DF9DC4 LDR W1, [X8 + 0x2C]
	0x01DF9DC8 BL 0x3BF60B8
	0x01DF9DCC LDR X0, [X19 + 0x20]
	0x01DF9DD0 CBZ X0, 0x1DF9E14
	0x01DF9DD4 LDR X8, [X21]
	0x01DF9DD8 MOV V0.16B, V8.16B
	0x01DF9DDC MOV X2, X31
	0x01DF9DE0 LDR X8, [X8 + 0xB8]
	0x01DF9DE4 LDR W1, [X8 + 0x30]
	0x01DF9DE8 BL 0x3BF5EE0
	0x01DF9DEC LDR X0, [X19 + 0x20]
	0x01DF9DF0 CBZ X0, 0x1DF9E14
	0x01DF9DF4 LDR X8, [X21]
	0x01DF9DF8 LDP X20, X19, [X31 + 0x20]
	0x01DF9DFC LDP X30, X21, [X31 + 0x10]
	0x01DF9E00 MOV X2, X31
	0x01DF9E04 LDR X8, [X8 + 0xB8]
	0x01DF9E08 LDR W1, [X8 + 0x48]
	0x01DF9E0C LDR V8, [X31], #0x30
	0x01DF9E10 B 0x3BF63C0
	0x01DF9E14 BL 0x1C16F20
	0x01DF9E18 STR D8, [X31 - 0x30]!
	0x01DF9E1C STP X30, X21, [X31 + 0x10]
	0x01DF9E20 STP X20, X19, [X31 + 0x20]
	0x01DF9E24 ADRP X20, 0x25DF000
	0x01DF9E28 ADRP X21, 0x22FF000
	0x01DF9E2C LDRB W8, [X20 + 0xD2C]
	0x01DF9E30 LDR X21, [X21 + 0xC88]
	0x01DF9E34 MOV V8.16B, V0.16B
	0x01DF9E38 MOV X19, X0
	0x01DF9E3C TBNZ X8, 0x0, 0x1DF9E54
	0x01DF9E40 ADRP X0, 0x22FF000
	0x01DF9E44 LDR X0, [X0 + 0xC88]
	0x01DF9E48 BL 0x1C16CF4
	0x01DF9E4C MOVZ W8, 0x1
	0x01DF9E50 STRB W8, [X20 + 0xD2C]
	0x01DF9E54 LDR X0, [X21]
	0x01DF9E58 LDR X20, [X19 + 0x20]
	0x01DF9E5C LDR W8, [X0 + 0xE0]
	0x01DF9E60 CBNZ W8, 0x1DF9E68
	0x01DF9E64 BL 0x1C16DFC
	0x01DF9E68 CBZ X20, 0x1DF9EF0
	0x01DF9E6C LDR X8, [X21]
	0x01DF9E70 MOVZ W2, 0x1
	0x01DF9E74 MOV X0, X20
	0x01DF9E78 MOV X3, X31
	0x01DF9E7C LDR X8, [X8 + 0xB8]
	0x01DF9E80 LDR W1, [X8 + 0x28]
	0x01DF9E84 BL 0x3BF60B8
	0x01DF9E88 LDR X0, [X19 + 0x20]
	0x01DF9E8C CBZ X0, 0x1DF9EF0
	0x01DF9E90 LDR X8, [X21]
	0x01DF9E94 MOVZ W2, 0x1
	0x01DF9E98 MOV X3, X31
	0x01DF9E9C LDR X8, [X8 + 0xB8]
	0x01DF9EA0 LDR W1, [X8 + 0x2C]
	0x01DF9EA4 BL 0x3BF60B8
	0x01DF9EA8 LDR X0, [X19 + 0x20]
	0x01DF9EAC CBZ X0, 0x1DF9EF0
	0x01DF9EB0 LDR X8, [X21]
	0x01DF9EB4 MOV V0.16B, V8.16B
	0x01DF9EB8 MOV X2, X31
	0x01DF9EBC LDR X8, [X8 + 0xB8]
	0x01DF9EC0 LDR W1, [X8 + 0x34]
	0x01DF9EC4 BL 0x3BF5EE0
	0x01DF9EC8 LDR X0, [X19 + 0x20]
	0x01DF9ECC CBZ X0, 0x1DF9EF0
	0x01DF9ED0 LDR X8, [X21]
	0x01DF9ED4 LDP X20, X19, [X31 + 0x20]
	0x01DF9ED8 LDP X30, X21, [X31 + 0x10]
	0x01DF9EDC MOV X2, X31
	0x01DF9EE0 LDR X8, [X8 + 0xB8]
	0x01DF9EE4 LDR W1, [X8 + 0x48]
	0x01DF9EE8 LDR V8, [X31], #0x30
	0x01DF9EEC B 0x3BF63C0
	0x01DF9EF0 BL 0x1C16F20
	0x01DF9EF4 STP X30, X21, [X31 - 0x20]!
	0x01DF9EF8 STP X20, X19, [X31 + 0x10]
	0x01DF9EFC ADRP X21, 0x25DF000
	0x01DF9F00 ADRP X20, 0x22FF000
	0x01DF9F04 LDRB W8, [X21 + 0xD2D]
	0x01DF9F08 LDR X20, [X20 + 0xC88]
	0x01DF9F0C MOV X19, X0
	0x01DF9F10 TBNZ X8, 0x0, 0x1DF9F28
	0x01DF9F14 ADRP X0, 0x22FF000
	0x01DF9F18 LDR X0, [X0 + 0xC88]
	0x01DF9F1C BL 0x1C16CF4
	0x01DF9F20 MOVZ W8, 0x1
	0x01DF9F24 STRB W8, [X21 + 0xD2D]
	0x01DF9F28 LDR X0, [X20]
	0x01DF9F2C LDR X19, [X19 + 0x20]
	0x01DF9F30 LDR W8, [X0 + 0xE0]
	0x01DF9F34 CBNZ W8, 0x1DF9F3C
	0x01DF9F38 BL 0x1C16DFC
	0x01DF9F3C CBZ X19, 0x1DF9F60
	0x01DF9F40 LDR X8, [X20]
	0x01DF9F44 MOV X0, X19
	0x01DF9F48 LDP X20, X19, [X31 + 0x10]
	0x01DF9F4C MOV X2, X31
	0x01DF9F50 LDR X8, [X8 + 0xB8]
	0x01DF9F54 LDR W1, [X8 + 0x38]
	0x01DF9F58 LDP X30, X21, [X31], #0x20
	0x01DF9F5C B 0x3BF63C0
	0x01DF9F60 BL 0x1C16F20
	0x01DF9F64 STP X30, X21, [X31 - 0x20]!
	0x01DF9F68 STP X20, X19, [X31 + 0x10]
	0x01DF9F6C ADRP X21, 0x25DF000
	0x01DF9F70 ADRP X20, 0x22FF000
	0x01DF9F74 LDRB W8, [X21 + 0xD2E]
	0x01DF9F78 LDR X20, [X20 + 0xC88]
	0x01DF9F7C MOV X19, X0
	0x01DF9F80 TBNZ X8, 0x0, 0x1DF9F98
	0x01DF9F84 ADRP X0, 0x22FF000
	0x01DF9F88 LDR X0, [X0 + 0xC88]
	0x01DF9F8C BL 0x1C16CF4
	0x01DF9F90 MOVZ W8, 0x1
	0x01DF9F94 STRB W8, [X21 + 0xD2E]
	0x01DF9F98 LDR X0, [X20]
	0x01DF9F9C LDR X19, [X19 + 0x20]
	0x01DF9FA0 LDR W8, [X0 + 0xE0]
	0x01DF9FA4 CBNZ W8, 0x1DF9FAC
	0x01DF9FA8 BL 0x1C16DFC
	0x01DF9FAC CBZ X19, 0x1DF9FD0
	0x01DF9FB0 LDR X8, [X20]
	0x01DF9FB4 MOV X0, X19
	0x01DF9FB8 LDP X20, X19, [X31 + 0x10]
	0x01DF9FBC MOV X2, X31
	0x01DF9FC0 LDR X8, [X8 + 0xB8]
	0x01DF9FC4 LDR W1, [X8 + 0x3C]
	0x01DF9FC8 LDP X30, X21, [X31], #0x20
	0x01DF9FCC B 0x3BF63C0
	0x01DF9FD0 BL 0x1C16F20
	0x01DF9FD4 STP X30, X19, [X31 - 0x10]!
	0x01DF9FD8 LDR X8, [X0 + 0x88]
	0x01DF9FDC MOVZ W9, 0xCCCD
	0x01DF9FE0 MOVK W9, 0x3E4C0000
	0x01DF9FE4 STR W9, [X0 + 0x90]
	0x01DF9FE8 CBZ X8, 0x1DF9FF4
	0x01DF9FEC LDP X30, X19, [X31], #0x10
	0x01DF9FF0 RET
	0x01DF9FF4 MOV X19, X0
	0x01DF9FF8 BL 0x1DFA014
	0x01DF9FFC MOV X1, X0
	0x01DFA000 STR X0, [X19 + 0x88]
	0x01DFA004 MOV X0, X19
	0x01DFA008 MOV X2, X31
	0x01DFA00C LDP X30, X19, [X31], #0x10
	0x01DFA010 B 0x3C366FC
	0x01DFA014 STP X30, X21, [X31 - 0x20]!
	0x01DFA018 STP X20, X19, [X31 + 0x10]
	0x01DFA01C ADRP X20, 0x25DE000
	0x01DFA020 ADRP X21, 0x22FF000
	0x01DFA024 LDRB W8, [X20 + 0xD32]
	0x01DFA028 LDR X21, [X21 + 0x498]
	0x01DFA02C MOV X19, X0
	0x01DFA030 TBNZ X8, 0x0, 0x1DFA048
	0x01DFA034 ADRP X0, 0x22FF000
	0x01DFA038 LDR X0, [X0 + 0x498]
	0x01DFA03C BL 0x1C16CF4
	0x01DFA040 MOVZ W8, 0x1
	0x01DFA044 STRB W8, [X20 + 0xD32]
	0x01DFA048 LDR X0, [X21]
	0x01DFA04C BL 0x1C16F10
	0x01DFA050 MOV W1, W31
	0x01DFA054 MOV X2, X31
	0x01DFA058 MOV X20, X0
	0x01DFA05C BL 0x1DFA84C
	0x01DFA060 CBZ X20, 0x1DFA078
	0x01DFA064 STR X19, [X20 + 0x20]
	0x01DFA068 MOV X0, X20
	0x01DFA06C LDP X20, X19, [X31 + 0x10]
	0x01DFA070 LDP X30, X21, [X31], #0x20
	0x01DFA074 RET
	0x01DFA078 BL 0x1C16F20
	0x01DFA07C STR D8, [X31 - 0x20]!
	0x01DFA080 STP X30, X19, [X31 + 0x10]
	0x01DFA084 MOV X19, X0
	0x01DFA088 TBZ X1, 0x0, 0x1DFA0D0
	0x01DFA08C MOV X0, X19
	0x01DFA090 MOV X1, X31
	0x01DFA094 MOV V8.16B, V0.16B
	0x01DFA098 BL 0x3C32ECC
	0x01DFA09C CBZ X0, 0x1DFA118
	0x01DFA0A0 MOV X1, X31
	0x01DFA0A4 BL 0x3C357F8
	0x01DFA0A8 TBZ X0, 0x0, 0x1DFA0C4
	0x01DFA0AC LDR V0, [X19 + 0x94]
	0x01DFA0B0 LDR X8, [X19 + 0x88]
	0x01DFA0B4 FCMP S0, S8
	0x01DFA0B8 FCSEL S0, S0, S8, GT
	0x01DFA0BC STR S0, [X19 + 0x94]
	0x01DFA0C0 CBZ X8, 0x1DFA0F4
	0x01DFA0C4 LDP X30, X19, [X31 + 0x10]
	0x01DFA0C8 LDR V8, [X31], #0x20
	0x01DFA0CC RET
	0x01DFA0D0 STR W31, [X19 + 0x94]
	0x01DFA0D4 MOV X0, X19
	0x01DFA0D8 LDP X30, X19, [X31 + 0x10]
	0x01DFA0DC FMOV S0, W31
	0x01DFA0E0 FMOV S1, W31
	0x01DFA0E4 FMOV S2, W31
	0x01DFA0E8 FMOV S3, 1
	0x01DFA0EC LDR V8, [X31], #0x20
	0x01DFA0F0 B 0x1DFA11C
	0x01DFA0F4 MOV X0, X19
	0x01DFA0F8 BL 0x1DFA014
	0x01DFA0FC MOV X1, X0
	0x01DFA100 STR X0, [X19 + 0x88]
	0x01DFA104 MOV X0, X19
	0x01DFA108 LDP X30, X19, [X31 + 0x10]
	0x01DFA10C MOV X2, X31
	0x01DFA110 LDR V8, [X31], #0x20
	0x01DFA114 B 0x3C366FC
	0x01DFA118 BL 0x1C16F20
	0x01DFA11C STP D11, D10, [X31 - 0x60]!
	0x01DFA120 STP D9, D8, [X31 + 0x10]
	0x01DFA124 STR X30, [X31 + 0x20]
	0x01DFA128 STP X24, X23, [X31 + 0x30]
	0x01DFA12C STP X22, X21, [X31 + 0x40]
	0x01DFA130 STP X20, X19, [X31 + 0x50]
	0x01DFA134 ADRP X19, 0x25DE000
	0x01DFA138 LDRB W8, [X19 + 0xD33]
	0x01DFA13C MOV V8.16B, V3.16B
	0x01DFA140 MOV V9.16B, V2.16B
	0x01DFA144 MOV V10.16B, V1.16B
	0x01DFA148 MOV V11.16B, V0.16B
	0x01DFA14C MOV X20, X0
	0x01DFA150 TBNZ X8, 0x0, 0x1DFA174
	0x01DFA154 ADRP X0, 0x22FE000
	0x01DFA158 LDR X0, [X0 + 0xD58]
	0x01DFA15C BL 0x1C16CF4
	0x01DFA160 ADRP X0, 0x22FE000
	0x01DFA164 LDR X0, [X0 + 0xC88]
	0x01DFA168 BL 0x1C16CF4
	0x01DFA16C MOVZ W8, 0x1
	0x01DFA170 STRB W8, [X19 + 0xD33]
	0x01DFA174 LDR X19, [X20 + 0x30]
	0x01DFA178 CBZ X19, 0x1DFA184
	0x01DFA17C LDR X8, [X19 + 0x18]
	0x01DFA180 CBNZ X8, 0x1DFA1A4
	0x01DFA184 ADRP X8, 0x22FE000
	0x01DFA188 LDR X8, [X8 + 0xD58]
	0x01DFA18C MOV X0, X20
	0x01DFA190 LDR X1, [X8]
	0x01DFA194 BL 0x21A453C
	0x01DFA198 MOV X19, X0
	0x01DFA19C STR X0, [X20 + 0x30]
	0x01DFA1A0 CBZ X0, 0x1DFA27C
	0x01DFA1A4 LDR W8, [X19 + 0x18]
	0x01DFA1A8 CMP W8, 0x1
	0x01DFA1AC B.LT 0x1DFA25C
	0x01DFA1B0 ADRP X23, 0x22FE000
	0x01DFA1B4 LDR X23, [X23 + 0xC88]
	0x01DFA1B8 MOV W22, W31
	0x01DFA1BC CMP W22, W8
	0x01DFA1C0 B.CS 0x1DFA278
	0x01DFA1C4 ADD X8, X19, W22, 0x3, SXTW
	0x01DFA1C8 LDR X0, [X8 + 0x20]
	0x01DFA1CC CBZ X0, 0x1DFA27C
	0x01DFA1D0 MOV X1, X31
	0x01DFA1D4 BL 0x3C133DC
	0x01DFA1D8 CBZ X0, 0x1DFA27C
	0x01DFA1DC LDR W8, [X0 + 0x18]
	0x01DFA1E0 MOV X20, X0
	0x01DFA1E4 CMP W8, 0x1
	0x01DFA1E8 B.LT 0x1DFA24C
	0x01DFA1EC MOV W24, W31
	0x01DFA1F0 CMP W24, W8
	0x01DFA1F4 B.CS 0x1DFA278
	0x01DFA1F8 LDR X0, [X23]
	0x01DFA1FC ADD X8, X20, W24, 0x3, SXTW
	0x01DFA200 LDR X21, [X8 + 0x20]
	0x01DFA204 LDR W9, [X0 + 0xE0]
	0x01DFA208 CBNZ W9, 0x1DFA210
	0x01DFA20C BL 0x1C16DFC
	0x01DFA210 CBZ X21, 0x1DFA27C
	0x01DFA214 LDR X8, [X23]
	0x01DFA218 MOV X0, X21
	0x01DFA21C MOV V0.16B, V11.16B
	0x01DFA220 MOV V1.16B, V10.16B
	0x01DFA224 LDR X8, [X8 + 0xB8]
	0x01DFA228 MOV V2.16B, V9.16B
	0x01DFA22C MOV V3.16B, V8.16B
	0x01DFA230 MOV X2, X31
	0x01DFA234 LDR W1, [X8]
	0x01DFA238 BL 0x3C14988
	0x01DFA23C LDR W8, [X20 + 0x18]
	0x01DFA240 ADD W24, W24, 0x1
	0x01DFA244 CMP W24, W8
	0x01DFA248 B.LT 0x1DFA1F0
	0x01DFA24C LDR W8, [X19 + 0x18]
	0x01DFA250 ADD W22, W22, 0x1
	0x01DFA254 CMP W22, W8
	0x01DFA258 B.LT 0x1DFA1BC
	0x01DFA25C LDP X20, X19, [X31 + 0x50]
	0x01DFA260 LDP X22, X21, [X31 + 0x40]
	0x01DFA264 LDP X24, X23, [X31 + 0x30]
	0x01DFA268 LDR X30, [X31 + 0x20]
	0x01DFA26C LDP D9, D8, [X31 + 0x10]
	0x01DFA270 LDP D11, D10, [X31], #0x60
	0x01DFA274 RET
	0x01DFA278 BL 0x1C16F28
	0x01DFA27C BL 0x1C16F20
	0x01DFA280 STP X30, X21, [X31 - 0x20]!
	0x01DFA284 STP X20, X19, [X31 + 0x10]
	0x01DFA288 ADRP X21, 0x25DE000
	0x01DFA28C ADRP X20, 0x22FE000
	0x01DFA290 LDRB W8, [X21 + 0xD2F]
	0x01DFA294 LDR X20, [X20 + 0xC88]
	0x01DFA298 MOV X19, X0
	0x01DFA29C TBNZ X8, 0x0, 0x1DFA2B4
	0x01DFA2A0 ADRP X0, 0x22FE000
	0x01DFA2A4 LDR X0, [X0 + 0xC88]
	0x01DFA2A8 BL 0x1C16CF4
	0x01DFA2AC MOVZ W8, 0x1
	0x01DFA2B0 STRB W8, [X21 + 0xD2F]
	0x01DFA2B4 LDR X0, [X20]
	0x01DFA2B8 LDR X19, [X19 + 0x20]
	0x01DFA2BC LDR W8, [X0 + 0xE0]
	0x01DFA2C0 CBNZ W8, 0x1DFA2C8
	0x01DFA2C4 BL 0x1C16DFC
	0x01DFA2C8 CBZ X19, 0x1DFA2EC
	0x01DFA2CC LDR X8, [X20]
	0x01DFA2D0 MOV X0, X19
	0x01DFA2D4 LDP X20, X19, [X31 + 0x10]
	0x01DFA2D8 MOV X2, X31
	0x01DFA2DC LDR X8, [X8 + 0xB8]
	0x01DFA2E0 LDR W1, [X8 + 0x44]
	0x01DFA2E4 LDP X30, X21, [X31], #0x20
	0x01DFA2E8 B 0x3BF63C0
	0x01DFA2EC BL 0x1C16F20
	0x01DFA2F0 STR X30, [X31 - 0x30]!
	0x01DFA2F4 STP X22, X21, [X31 + 0x10]
	0x01DFA2F8 STP X20, X19, [X31 + 0x20]
	0x01DFA2FC ADRP X22, 0x25DE000
	0x01DFA300 ADRP X21, 0x22FE000
	0x01DFA304 LDRB W8, [X22 + 0xD30]
	0x01DFA308 LDR X21, [X21 + 0xC88]
	0x01DFA30C MOV W19, W1
	0x01DFA310 MOV X20, X0
	0x01DFA314 TBNZ X8, 0x0, 0x1DFA32C
	0x01DFA318 ADRP X0, 0x22FE000
	0x01DFA31C LDR X0, [X0 + 0xC88]
	0x01DFA320 BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 320
	002 Move [X31+160], D15
	003 Move [X31+168], D14
	004 Move [X31+176], D13
	005 Move [X31+184], D12
	006 Move [X31+192], D11
	007 Move [X31+200], D10
	008 Move [X31+208], D9
	009 Move [X31+216], D8
	010 Move [X31+224], X29
	011 Move [X31+232], X30
	012 Move [X31+240], X28
	013 Move [X31+248], X27
	014 Move [X31+256], X26
	015 Move [X31+264], X25
	016 Move [X31+272], X24
	017 Move [X31+280], X23
	018 Move [X31+288], X22
	019 Move [X31+296], X21
	020 Move [X31+304], X20
	021 Move [X31+312], X19
	022 Move X21, 0x25E0000
	023 Move W8, [X21+3362]
	024 Move X19, X1
	025 Move X20, X0
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {68}
	030 Move X0, 0x22FF000
	031 Move X0, [X0+2128]
	032 Call 0x1C17CF4
	033 Move X0, 0x2301000
	034 Move X0, [X0+1048]
	035 Call 0x1C17CF4
	036 Move X0, 0x2301000
	037 Move X0, [X0+1056]
	038 Call 0x1C17CF4
	039 Move X0, 0x2301000
	040 Move X0, [X0+1064]
	041 Call 0x1C17CF4
	042 Move X0, 0x22FB000
	043 Move X0, [X0+1496]
	044 Call 0x1C17CF4
	045 Move X0, 0x2301000
	046 Move X0, [X0+336]
	047 Call 0x1C17CF4
	048 Move X0, 0x2301000
	049 Move X0, [X0+1152]
	050 Call 0x1C17CF4
	051 Move X0, 0x2300000
	052 Move X0, [X0+3248]
	053 Call 0x1C17CF4
	054 Move X0, 0x2300000
	055 Move X0, [X0+3816]
	056 Call 0x1C17CF4
	057 Move X0, 0x22FD000
	058 Move X0, [X0+2464]
	059 Call 0x1C17CF4
	060 Move X0, 0x22FB000
	061 Move X0, [X0+1528]
	062 Call 0x1C17CF4
	063 Move X0, 0x2301000
	064 Move X0, [X0+1072]
	065 Call 0x1C17CF4
	066 Move W8, 1
	067 Move [X21+3362], W8
	068 NotImplemented "Instruction MOVI not yet implemented."
	069 Move [X31+128], X31
	070 Move [X31+136], X31
	071 Move [X31+144], X31
	072 Move [X31+108], V0
	073 Move [X31+80], V0
	074 Move [X31+88], V0
	075 Compare X20, 0
	076 JumpIfEqual {356}
	077 Move X0, [X20+208]
	078 Compare X0, 0
	079 JumpIfEqual {356}
	080 Move X1, X31
	081 Call Transform.get_position, X0
	082 Move X8, [X20+192]
	083 Move [X31+40], S1
	084 Move [X31+48], S0
	085 Move [X31+36], S2
	086 Compare X8, 0
	087 JumpIfEqual {356}
	088 Move X9, 0x2300000
	089 Move X9, [X9+3816]
	090 Move X20, 0x2301000
	091 Move X21, 0x22FD000
	092 Move V8, [X8+72]
	093 Move X0, [X9]
	094 Move X20, [X20+1152]
	095 Move X21, [X21+2464]
	096 Call 0x1C17F10
	097 Move X1, [X20]
	098 Move X20, X0
	099 Call List`1<Object>..ctor, X0
	100 Move [X19], X20
	101 Move X0, [X21]
	102 Move W8, [X0+224]
	103 Compare W8, 0
	104 JumpIfNotEqual {106}
	105 Call 0x1C17DFC
	106 Move X20, 0x25E0000
	107 Move W8, [X20+2922]
	108 Compare W8, 0
	109 JumpIfNotEqual {115}
	110 Move X0, 0x22FD000
	111 Move X0, [X0+2464]
	112 Call 0x1C17CF4
	113 Move W8, 1
	114 Move [X20+2922], W8
	115 Move X0, [X21]
	116 Move W8, [X0+224]
	117 Compare W8, 0
	118 JumpIfNotEqual {121}
	119 Call 0x1C17DFC
	120 Move X0, [X21]
	121 Move X8, [X0+184]
	122 Move X0, [X8]
	123 Compare X0, 0
	124 JumpIfEqual {356}
	125 Move X8, 0x22FF000
	126 Move X8, [X8+2128]
	127 Move X1, [X8]
	128 Call Dictionary`2<UInt32, Object>.get_Values, X0
	129 Compare X0, 0
	130 JumpIfEqual {356}
	131 Move X8, 0x2301000
	132 Move X8, [X8+1072]
	133 Move X25, 0x2301000
	134 Move X25, [X25+1056]
	135 Move S0, 0.5
	136 Move X1, [X8]
	137 Multiply S0, S8, S0
	138 Add X8, X31, 56
	139 Move [X31+28], S0
	140 Call ValueCollection<UInt32, Object>.GetEnumerator, X0
	141 Move X9, -19980288
	142 NotImplemented "Instruction LDUR not yet implemented."
	143 Move V1, [X9+380]
	144 Move X20, 0x22FB000
	145 Move X10, -19980288
	146 Move X9, -19980288
	147 Move X8, [X31+72]
	148 Move X20, [X20+1448]
	149 Move [X31+32], S1
	150 Move V1, [X10+1096]
	151 Move [X31+8], V0
	152 Move V0, [X9+260]
	153 Move [X31+144], X8
	154 Move [X31+24], S1
	155 Move X21, 0x22FB000
	156 Move [X31+20], S0
	157 Move X21, [X21+1440]
	158 Move W29, 0x43C80000
	159 Move X24, 0x25E0000
	160 Move W28, 1
	161 Move W27, 0x425C0000
	162 Move X26, 0x25E0000
	163 Move X1, [X25]
	164 Add X0, X31, 128
	165 Call Enumerator<UInt32, Object>.MoveNext, X0
	166 Move TEMP, X0
	167 And TEMP, TEMP, 1
	168 Compare TEMP, 1
	169 JumpIfNotEqual {320}
	170 Move X22, [X31+144]
	171 Compare X22, 0
	172 JumpIfEqual {353}
	173 Move X0, X22
	174 Move X1, X31
	175 Call NetPlayer.get_isDieSafe, X0
	176 Move TEMP, X0
	177 And TEMP, TEMP, 1
	178 Compare TEMP, 1
	179 JumpIfEqual {163}
	180 Move X0, [X22+144]
	181 Compare X0, 0
	182 JumpIfEqual {354}
	183 Move X1, X31
	184 Call Transform.get_position, X0
	185 Move X0, [X22+144]
	186 Compare X0, 0
	187 JumpIfEqual {355}
	188 Move V9, V0
	189 Move V11, V1
	190 Move V13, V2
	191 Move X1, X31
	192 Call Transform.get_forward, X0
	193 Move V15, V0
	194 Move V0, [X31+44]
	195 Move [X31+48], S9
	196 Move [X31+56], S11
	197 Move V8, V1
	198 Subtract S9, S0, S9
	199 Move V0, [X31+40]
	200 Subtract S14, S0, S11
	201 Move V0, [X31+36]
	202 Multiply S1, S14, S14
	203 Subtract S11, S0, S13
	204 Multiply S0, S9, S9
	205 Add S0, S0, S1
	206 Multiply S1, S11, S11
	207 Add S12, S1, S0
	208 Move S0, W29
	209 NotImplemented "Instruction FCMP not yet implemented."
	210 Move W8, [X24+1925]
	211 Move V10, V2
	212 Compare W8, 0
	213 JumpIfNotEqual {217}
	214 Move X0, X20
	215 Call 0x1C17CF4
	216 Move [X24+1925], W28
	217 Move X0, [X20]
	218 Move W8, [X0+224]
	219 Compare W8, 0
	220 JumpIfNotEqual {222}
	221 Call 0x1C17DFC
	222 Move V0, [X31+32]
	223 NotImplemented "Instruction FSQRT not yet implemented."
	224 NotImplemented "Instruction FCMP not yet implemented."
	225 NotImplemented "Instruction FDIV not yet implemented."
	226 NotImplemented "Instruction FDIV not yet implemented."
	227 NotImplemented "Instruction FDIV not yet implemented."
	228 Move V11, V0
	229 Move W8, [X26+1923]
	230 Compare W8, 0
	231 JumpIfNotEqual {235}
	232 Move X0, X21
	233 Call 0x1C17CF4
	234 Move [X26+1923], W28
	235 Move X8, [X21]
	236 Move X8, [X8+184]
	237 Move S11, [X8]
	238 Move S14, [X8+4]
	239 Move V9, [X8+8]
	240 Multiply S0, S15, S11
	241 Multiply S1, S8, S14
	242 Add S0, S0, S1
	243 Multiply S1, S10, S9
	244 Add S8, S1, S0
	245 NotImplemented "Instruction FCMP not yet implemented."
	246 Move V0, [X31+28]
	247 NotImplemented "Instruction FDIV not yet implemented."
	248 Call 0x3EB2BE0
	249 Move V1, [X31+24]
	250 Multiply S0, S0, S1
	251 Move S1, W27
	252 Add S0, S0, S1
	253 Move V1, [X31+20]
	254 Multiply S0, S0, S1
	255 Call 0x3EB2BD0
	256 NotImplemented "Instruction FCMP not yet implemented."
	257 Move X8, 0x22FA000
	258 Move X8, [X8+1496]
	259 Move X0, [X8]
	260 Move W8, [X0+224]
	261 Compare W8, 0
	262 JumpIfEqual {264}
	263 Move V8, [X31+52]
	264 Call 0x1C17DFC
	265 Move V8, [X31+52]
	266 Move X8, 0x22FA000
	267 Move X8, [X8+1496]
	268 Move X0, [X8]
	269 Move X8, [X0+184]
	270 Move W0, [X8]
	271 Move X1, X31
	272 Call LayerMask.op_Implicit, X0
	273 Move X8, 0x22FA000
	274 Move X8, [X8+1528]
	275 Move W23, W0
	276 Move X0, [X8]
	277 Move W8, [X0+224]
	278 Compare W8, 0
	279 JumpIfNotEqual {281}
	280 Call 0x1C17DFC
	281 Move V0, [X31+48]
	282 Add X0, X31, 80
	283 Move V1, V8
	284 Move V2, V13
	285 Move V3, V11
	286 Move V4, V14
	287 Move V5, V9
	288 Move V6, V12
	289 Move W1, W23
	290 Move X2, X31
	291 Call Physics.Raycast, X0, X1, X2, V0, X3
	292 Move TEMP, X0
	293 And TEMP, TEMP, 1
	294 Compare TEMP, 1
	295 JumpIfEqual {163}
	296 Move X0, [X19]
	297 Compare X0, 0
	298 JumpIfEqual {357}
	299 Move X9, 0x2300000
	300 Move W10, [X0+28]
	301 Move X8, [X0+16]
	302 Move X9, [X9+336]
	303 Add W10, W10, 1
	304 Move X9, [X9]
	305 Move [X0+28], W10
	306 Compare X8, 0
	307 JumpIfEqual {358}
	308 NotImplemented "Instruction LDRSW not yet implemented."
	309 Move W11, [X8+24]
	310 NotImplemented "Instruction CMP not yet implemented."
	311 Add W9, W10, 1
	312 Add X8, X8, X10
	313 Move [X0+24], W9
	314 Move [X8+32], X22
	315 Move X8, [X9+32]
	316 Move X8, [X8+192]
	317 Move X2, [X8+112]
	318 Move X1, X22
	319 Call List`1<Object>.AddWithResize, X0, X1
	320 Move X8, 0x2300000
	321 Move X8, [X8+1048]
	322 Add X0, X31, 128
	323 Move X1, [X8]
	324 Call Enumerator<UInt32, Object>.Dispose, X0
	325 Move X8, [X19]
	326 Compare X8, 0
	327 JumpIfEqual {356}
	328 Move W8, [X8+24]
	329 Move X20, [X31+304]
	330 Move X19, [X31+312]
	331 Move X22, [X31+288]
	332 Move X21, [X31+296]
	333 Move X24, [X31+272]
	334 Move X23, [X31+280]
	335 Move X26, [X31+256]
	336 Move X25, [X31+264]
	337 Move X28, [X31+240]
	338 Move X27, [X31+248]
	339 Move X29, [X31+224]
	340 Move X30, [X31+232]
	341 Move D9, [X31+208]
	342 Move D8, [X31+216]
	343 Move D11, [X31+192]
	344 Move D10, [X31+200]
	345 Move D13, [X31+176]
	346 Move D12, [X31+184]
	347 Move D15, [X31+160]
	348 Move D14, [X31+168]
	349 NotImplemented "Instruction CMP not yet implemented."
	350 NotImplemented "Instruction CSET not yet implemented."
	351 Add X31, X31, 320
	352 Return X0
	353 Call 0x1C17F20
	354 Call 0x1C17F20
	355 Call 0x1C17F20
	356 Call 0x1C17F20
	357 Call 0x1C17F20
	358 Call 0x1C17F20
	359 Move X20, X0
	360 NotImplemented "Instruction CMP not yet implemented."
	361 Move X0, X20
	362 Call 0x3EB2AD0
	363 Move X21, [X0]
	364 Call 0x3EB2AE0
	365 Move X8, 0x2300000
	366 Move X8, [X8+1048]
	367 Add X0, X31, 128
	368 Move X1, [X8]
	369 Call Enumerator<UInt32, Object>.Dispose, X0
	370 Compare X21, 0
	371 JumpIfEqual {325}
	372 Move X0, X21
	373 Call 0x1C17F18
	374 Move X21, X31
	375 Move X20, X0
	376 Move X8, 0x2300000
	377 Move X8, [X8+1048]
	378 Move X1, [X8]
	379 Add X0, X31, 128
	380 Call Enumerator<UInt32, Object>.Dispose, X0
	381 Compare X21, 0
	382 JumpIfNotEqual {385}
	383 Move X0, X20
	384 Call 0x1D2D690
	385 Move X0, X21
	386 Call 0x1C17F18
	387 Call 0x1991590

Method: System.Void GetContactPoints(ref System.Collections.Generic.List`1<UnityEngine.RaycastHit> contactPoints, UnityEngine.SphereCollider sphereCollider, UnityEngine.Vector3 centerPosition, UnityEngine.Quaternion centerRotation, System.Single radiusInner, UnityEngine.LayerMask layerMask)

Disassembly:
	0x01DEF6B8 STP X30, X23, [X31 + 0x20]
	0x01DEF6BC STP X22, X21, [X31 + 0x30]
	0x01DEF6C0 STP X20, X19, [X31 + 0x40]
	0x01DEF6C4 ADRP X21, 0x25E9000
	0x01DEF6C8 LDRB W8, [X21 + 0xCDB]
	0x01DEF6CC MOV W20, W1
	0x01DEF6D0 MOV X19, X0
	0x01DEF6D4 TBNZ X8, 0x0, 0x1DEF74C
	0x01DEF6D8 ADRP X0, 0x2309000
	0x01DEF6DC LDR X0, [X0 + 0xE88]
	0x01DEF6E0 BL 0x1C16CF4
	0x01DEF6E4 ADRP X0, 0x2308000
	0x01DEF6E8 LDR X0, [X0 + 0xA98]
	0x01DEF6EC BL 0x1C16CF4
	0x01DEF6F0 ADRP X0, 0x230A000
	0x01DEF6F4 LDR X0, [X0 + 0x118]
	0x01DEF6F8 BL 0x1C16CF4
	0x01DEF6FC ADRP X0, 0x2308000
	0x01DEF700 LDR X0, [X0 + 0xAA0]
	0x01DEF704 BL 0x1C16CF4
	0x01DEF708 ADRP X0, 0x2309000
	0x01DEF70C LDR X0, [X0 + 0xE90]
	0x01DEF710 BL 0x1C16CF4
	0x01DEF714 ADRP X0, 0x2309000
	0x01DEF718 LDR X0, [X0 + 0xC40]
	0x01DEF71C BL 0x1C16CF4
	0x01DEF720 ADRP X0, 0x2304000
	0x01DEF724 LDR X0, [X0 + 0x598]
	0x01DEF728 BL 0x1C16CF4
	0x01DEF72C ADRP X0, 0x230A000
	0x01DEF730 LDR X0, [X0 + 0x120]
	0x01DEF734 BL 0x1C16CF4
	0x01DEF738 ADRP X0, 0x230A000
	0x01DEF73C LDR X0, [X0 + 0x128]
	0x01DEF740 BL 0x1C16CF4
	0x01DEF744 MOVZ W8, 0x1
	0x01DEF748 STRB W8, [X21 + 0xCDB]
	0x01DEF74C MOV X0, X19
	0x01DEF750 MOV W1, W20
	0x01DEF754 BL 0x1DEF940
	0x01DEF758 LDR X0, [X19 + 0x40]
	0x01DEF75C CBZ X0, 0x1DEF920
	0x01DEF760 LDRB W8, [X0 + 0x60]
	0x01DEF764 TBNZ X8, 0x1, 0x1DEF920
	0x01DEF768 MOV X1, X31
	0x01DEF76C BL 0x1E93668
	0x01DEF770 TBZ X0, 0x0, 0x1DEF920
	0x01DEF774 MOV X0, X19
	0x01DEF778 BL 0x1DEFB40
	0x01DEF77C CMP W0, 0x1
	0x01DEF780 B.LT 0x1DEF920
	0x01DEF784 LDR X0, [X19 + 0xD0]
	0x01DEF788 CBZ X0, 0x1DEF938
	0x01DEF78C MOV X1, X31
	0x01DEF790 BL 0x3C3F58C
	0x01DEF794 LDR X8, [X19 + 0xC0]
	0x01DEF798 CBZ X8, 0x1DEF938
	0x01DEF79C LDR X8, [X8 + 0x78]
	0x01DEF7A0 CBZ X8, 0x1DEF938
	0x01DEF7A4 LDR W9, [X8 + 0x18]
	0x01DEF7A8 CMP W9, 0x1
	0x01DEF7AC B.LS 0x1DEF93C
	0x01DEF7B0 ADRP X9, 0x2309000
	0x01DEF7B4 LDR X9, [X9 + 0xC40]
	0x01DEF7B8 LDR V11, [X8 + 0x24]
	0x01DEF7BC MOV V8.16B, V0.16B
	0x01DEF7C0 MOV V9.16B, V1.16B
	0x01DEF7C4 LDR X0, [X9]
	0x01DEF7C8 MOV V10.16B, V2.16B
	0x01DEF7CC LDR W9, [X0 + 0xE0]
	0x01DEF7D0 CBNZ W9, 0x1DEF7D8
	0x01DEF7D4 BL 0x1C16DFC
	0x01DEF7D8 MOV V0.16B, V8.16B
	0x01DEF7DC MOV V1.16B, V9.16B
	0x01DEF7E0 MOV V2.16B, V10.16B
	0x01DEF7E4 MOV V3.16B, V11.16B
	0x01DEF7E8 BL 0x1DEFBA0
	0x01DEF7EC ADRP X8, 0x2309000
	0x01DEF7F0 LDR X8, [X8 + 0xE88]
	0x01DEF7F4 MOV X20, X0
	0x01DEF7F8 LDR X8, [X8]
	0x01DEF7FC MOV X0, X8
	0x01DEF800 BL 0x1C16F10
	0x01DEF804 ADRP X8, 0x230A000
	0x01DEF808 LDR X8, [X8 + 0x118]
	0x01DEF80C MOV X1, X19
	0x01DEF810 MOV X3, X31
	0x01DEF814 MOV X21, X0
	0x01DEF818 LDR X2, [X8]
	0x01DEF81C BL 0x295A080
	0x01DEF820 CBZ X20, 0x1DEF938
	0x01DEF824 ADRP X8, 0x2309000
	0x01DEF828 LDR X8, [X8 + 0xE90]
	0x01DEF82C MOV X0, X20
	0x01DEF830 MOV X1, X21
	0x01DEF834 LDR X2, [X8]
	0x01DEF838 BL 0x301DD30
	0x01DEF83C ADRP X23, 0x230A000
	0x01DEF840 LDR X23, [X23 + 0x128]
	0x01DEF844 LDR X0, [X23]
	0x01DEF848 LDR W8, [X0 + 0xE0]
	0x01DEF84C CBNZ W8, 0x1DEF858
	0x01DEF850 BL 0x1C16DFC
	0x01DEF854 LDR X0, [X23]
	0x01DEF858 LDR X8, [X0 + 0xB8]
	0x01DEF85C LDR X21, [X8 + 0x8]
	0x01DEF860 CBNZ X21, 0x1DEF8B4
	0x01DEF864 LDR W8, [X0 + 0xE0]
	0x01DEF868 CBNZ W8, 0x1DEF874
	0x01DEF86C BL 0x1C16DFC
	0x01DEF870 LDR X0, [X23]
	0x01DEF874 ADRP X9, 0x2308000
	0x01DEF878 LDR X8, [X0 + 0xB8]
	0x01DEF87C LDR X9, [X9 + 0xAA0]
	0x01DEF880 LDR X22, [X8]
	0x01DEF884 LDR X0, [X9]
	0x01DEF888 BL 0x1C16F10
	0x01DEF88C ADRP X8, 0x230A000
	0x01DEF890 LDR X8, [X8 + 0x120]
	0x01DEF894 MOV X1, X22
	0x01DEF898 MOV X3, X31
	0x01DEF89C MOV X21, X0
	0x01DEF8A0 LDR X2, [X8]
	0x01DEF8A4 BL 0x2D2F428
	0x01DEF8A8 LDR X8, [X23]
	0x01DEF8AC LDR X8, [X8 + 0xB8]
	0x01DEF8B0 STR X21, [X8 + 0x8]
	0x01DEF8B4 ADRP X8, 0x2308000
	0x01DEF8B8 LDR X8, [X8 + 0xA98]
	0x01DEF8BC MOV X0, X20
	0x01DEF8C0 MOV X1, X21
	0x01DEF8C4 LDR X2, [X8]
	0x01DEF8C8 BL 0x21C570C
	0x01DEF8CC ADRP X8, 0x2304000
	0x01DEF8D0 LDR X8, [X8 + 0x598]
	0x01DEF8D4 MOV X20, X0
	0x01DEF8D8 LDR X8, [X8]
	0x01DEF8DC LDR W9, [X8 + 0xE0]
	0x01DEF8E0 CBNZ W9, 0x1DEF8EC
	0x01DEF8E4 MOV X0, X8
	0x01DEF8E8 BL 0x1C16DFC
	0x01DEF8EC MOV X0, X20
	0x01DEF8F0 MOV X1, X31
	0x01DEF8F4 MOV X2, X31
	0x01DEF8F8 BL 0x3C354F8
	0x01DEF8FC TBZ X0, 0x0, 0x1DEF920
	0x01DEF900 MOV X0, X19
	0x01DEF904 MOV X1, X20
	0x01DEF908 BL 0x1DF3200
	0x01DEF90C MOVZ W1, 0x4
	0x01DEF910 MOV X0, X19
	0x01DEF914 BL 0x1DEEB40
	0x01DEF918 MOVZ W8, 0x1
	0x01DEF91C STRB W8, [X19 + 0xF1]
	0x01DEF920 LDP X20, X19, [X31 + 0x40]
	0x01DEF924 LDP X22, X21, [X31 + 0x30]
	0x01DEF928 LDP X30, X23, [X31 + 0x20]
	0x01DEF92C LDP D9, D8, [X31 + 0x10]
	0x01DEF930 LDP D11, D10, [X31], #0x50
	0x01DEF934 RET
	0x01DEF938 BL 0x1C16F20
	0x01DEF93C BL 0x1C16F28
	0x01DEF940 STP X30, X21, [X31 - 0x20]!
	0x01DEF944 STP X20, X19, [X31 + 0x10]
	0x01DEF948 ADRP X21, 0x25E9000
	0x01DEF94C LDRB W8, [X21 + 0xD0A]
	0x01DEF950 MOV W20, W1
	0x01DEF954 MOV X19, X0
	0x01DEF958 TBNZ X8, 0x0, 0x1DEF97C
	0x01DEF95C ADRP X0, 0x2307000
	0x01DEF960 LDR X0, [X0 + 0xA78]
	0x01DEF964 BL 0x1C16CF4
	0x01DEF968 ADRP X0, 0x230A000
	0x01DEF96C LDR X0, [X0 + 0x130]
	0x01DEF970 BL 0x1C16CF4
	0x01DEF974 MOVZ W8, 0x1
	0x01DEF978 STRB W8, [X21 + 0xD0A]
	0x01DEF97C LDRB W8, [X19 + 0x58]

ISIL:
	001 Subtract X31, X31, 352
	002 Move [X31+208], D15
	003 Move [X31+216], D14
	004 Move [X31+224], D13
	005 Move [X31+232], D12
	006 Move [X31+240], D11
	007 Move [X31+248], D10
	008 Move [X31+256], D9
	009 Move [X31+264], D8
	010 Move [X31+272], X29
	011 Move [X31+280], X30
	012 Move [X31+288], X26
	013 Move [X31+296], X25
	014 Move [X31+304], X24
	015 Move [X31+312], X23
	016 Move [X31+320], X22
	017 Move [X31+328], X21
	018 Move [X31+336], X20
	019 Move [X31+344], X19
	020 Move X22, 0x25EA000
	021 Move W8, [X22+3363]
	022 Move X21, X2
	023 Move V9, V6
	024 Move V10, V5
	025 Move V11, V4
	026 Move V12, V3
	027 Move V13, V2
	028 Move V14, V1
	029 Move V15, V0
	030 Move X19, X1
	031 Move X20, X0
	032 Move [X31+12], S7
	033 Move TEMP, X8
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfEqual {51}
	037 Move X0, 0x230B000
	038 Move X0, [X0+88]
	039 Call 0x1C17CF4
	040 Move X0, 0x230B000
	041 Move X0, [X0+96]
	042 Call 0x1C17CF4
	043 Move X0, 0x230A000
	044 Move X0, [X0+3136]
	045 Call 0x1C17CF4
	046 Move X0, 0x2305000
	047 Move X0, [X0+1528]
	048 Call 0x1C17CF4
	049 Move W8, 1
	050 Move [X22+3363], W8
	051 NotImplemented "Instruction MOVI not yet implemented."
	052 Move [X31+92], V0
	053 Move [X31+64], V0
	054 Move [X31+72], V0
	055 Move X8, [X20]
	056 Compare X8, 0
	057 JumpIfEqual {214}
	058 Move W9, [X8+28]
	059 Add W9, W9, 1
	060 Move [X8+24], W31
	061 Move [X8+28], W9
	062 Compare X19, 0
	063 JumpIfEqual {214}
	064 Move X24, 0x230A000
	065 Move X23, 0x2305000
	066 Move X24, [X24+3136]
	067 Move X23, [X23+1528]
	068 Move X0, X19
	069 Move X1, X31
	070 Call SphereCollider.get_radius, X0
	071 Move X0, [X24]
	072 Move V8, V0
	073 Move W8, [X0+224]
	074 Compare W8, 0
	075 JumpIfNotEqual {78}
	076 Call 0x1C17DFC
	077 Move X0, [X24]
	078 Move X8, [X0+184]
	079 And X21, X21, 0
	080 Move X0, X21
	081 Move X1, X31
	082 Move X22, [X8+8]
	083 Call LayerMask.op_Implicit, X0
	084 Move X8, [X23]
	085 Move W23, W0
	086 Move W9, [X8+224]
	087 Compare W9, 0
	088 JumpIfNotEqual {91}
	089 Move X0, X8
	090 Call 0x1C17DFC
	091 Move V0, V15
	092 Move V1, V14
	093 Move V2, V13
	094 Move V3, V8
	095 Move X0, X22
	096 Move W1, W23
	097 Move X2, X31
	098 Call Physics.OverlapSphereNonAlloc, X0, V0, X1, X2
	099 Move X8, [X24]
	100 Move X9, [X8+184]
	101 Move X9, [X9+8]
	102 Compare X9, 0
	103 JumpIfEqual {214}
	104 Move W9, [X9+24]
	105 NotImplemented "Instruction CMP not yet implemented."
	106 NotImplemented "Instruction CSEL not yet implemented."
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Move X23, 0x230B000
	109 Move X23, [X23+88]
	110 Move W9, W9
	111 Move X22, X31
	112 Subtract X25, X9, 1
	113 Move W26, 44
	114 Move W9, [X8+224]
	115 Compare W9, 0
	116 JumpIfNotEqual {120}
	117 Move X0, X8
	118 Call 0x1C17DFC
	119 Move X8, [X24]
	120 Move X8, [X8+184]
	121 Move X8, [X8+8]
	122 Compare X8, 0
	123 JumpIfEqual {214}
	124 Move W9, [X8+24]
	125 NotImplemented "Instruction CMP not yet implemented."
	126 Add X8, X8, X22
	127 Move X1, [X8+32]
	128 Move V7, [X31+12]
	129 Add X3, X31, 64
	130 Move X0, X19
	131 Move V0, V15
	132 Move V1, V14
	133 Move V2, V13
	134 Move V3, V12
	135 Move V4, V11
	136 Move V5, V10
	137 Move V6, V9
	138 Move X2, X21
	139 Move [X31], S8
	140 Call MobDetectionUtil.GetContactPoint, X0, X1, X2, X3, V0, V1, X4, X5
	141 Move TEMP, X0
	142 And TEMP, TEMP, 1
	143 Compare TEMP, 1
	144 JumpIfNotEqual {191}
	145 Move X0, [X20]
	146 Move V0, [X31+64]
	147 Move V1, [X31+80]
	148 NotImplemented "Instruction LDUR not yet implemented."
	149 Move [X31+16], V0
	150 Move [X31+24], V1
	151 Move [X31+44], V2
	152 Compare X0, 0
	153 JumpIfEqual {214}
	154 Move V0, [X31+16]
	155 Move V1, [X31+32]
	156 NotImplemented "Instruction LDUR not yet implemented."
	157 Move X10, [X23]
	158 Move [X31+112], V0
	159 Move [X31+120], V1
	160 Move [X31+140], V2
	161 Move W9, [X0+28]
	162 Move X8, [X0+16]
	163 Add W9, W9, 1
	164 Move [X0+28], W9
	165 Compare X8, 0
	166 JumpIfEqual {214}
	167 NotImplemented "Instruction LDRSW not yet implemented."
	168 Move W11, [X8+24]
	169 NotImplemented "Instruction CMP not yet implemented."
	170 Add W10, W9, 1
	171 Move [X0+24], W10
	172 NotImplemented "Instruction LDUR not yet implemented."
	173 Move V2, [X31+112]
	174 Move V1, [X31+128]
	175 NotImplemented "Instruction NOP not yet implemented."
	176 NotImplemented "Instruction MADD not yet implemented."
	177 Move [X8+60], V0
	178 Move [X8+32], V2
	179 Move [X8+40], V1
	180 Move X8, [X10+32]
	181 Move V0, [X31+112]
	182 Move V1, [X31+128]
	183 NotImplemented "Instruction LDUR not yet implemented."
	184 Add X1, X31, 160
	185 Move X8, [X8+192]
	186 Move X2, [X8+112]
	187 Move [X31+160], V0
	188 Move [X31+168], V1
	189 Move [X31+188], V2
	190 Call List`1<RaycastHit>.AddWithResize, X0, X1
	191 NotImplemented "Instruction CMP not yet implemented."
	192 Move X8, [X24]
	193 Add X22, X22, 1
	194 Move X20, [X31+336]
	195 Move X19, [X31+344]
	196 Move X22, [X31+320]
	197 Move X21, [X31+328]
	198 Move X24, [X31+304]
	199 Move X23, [X31+312]
	200 Move X26, [X31+288]
	201 Move X25, [X31+296]
	202 Move X29, [X31+272]
	203 Move X30, [X31+280]
	204 Move D9, [X31+256]
	205 Move D8, [X31+264]
	206 Move D11, [X31+240]
	207 Move D10, [X31+248]
	208 Move D13, [X31+224]
	209 Move D12, [X31+232]
	210 Move D15, [X31+208]
	211 Move D14, [X31+216]
	212 Add X31, X31, 352
	213 Return 
	214 Call 0x1C17F20
	215 Call 0x1C17F28

Method: System.Boolean GetContactPoint(UnityEngine.Collider colliderA, UnityEngine.Collider other, UnityEngine.Vector3 centerPosition, UnityEngine.Quaternion centerRotation, System.Single radiusInner, System.Single radiusOuter, UnityEngine.LayerMask layerMask, out UnityEngine.RaycastHit hit)

Disassembly:
	0x01DFA324 MOVZ W8, 0x1
	0x01DFA328 STRB W8, [X22 + 0xD30]
	0x01DFA32C LDR X0, [X21]
	0x01DFA330 LDR X20, [X20 + 0x20]
	0x01DFA334 LDR W8, [X0 + 0xE0]
	0x01DFA338 CBNZ W8, 0x1DFA340
	0x01DFA33C BL 0x1C16DFC
	0x01DFA340 CBZ X20, 0x1DFA36C
	0x01DFA344 LDR X8, [X21]
	0x01DFA348 AND W2, W19, 0x1
	0x01DFA34C MOV X0, X20
	0x01DFA350 LDP X20, X19, [X31 + 0x20]
	0x01DFA354 LDR X8, [X8 + 0xB8]
	0x01DFA358 LDP X22, X21, [X31 + 0x10]
	0x01DFA35C MOV X3, X31
	0x01DFA360 LDR W1, [X8 + 0x50]
	0x01DFA364 LDR X30, [X31], #0x30
	0x01DFA368 B 0x3BF60B8
	0x01DFA36C BL 0x1C16F20
	0x01DFA370 STR D8, [X31 - 0x40]!
	0x01DFA374 STP X30, X23, [X31 + 0x10]
	0x01DFA378 STP X22, X21, [X31 + 0x20]
	0x01DFA37C STP X20, X19, [X31 + 0x30]
	0x01DFA380 ADRP X22, 0x25DE000
	0x01DFA384 ADRP X23, 0x22FE000
	0x01DFA388 LDRB W8, [X22 + 0xD31]
	0x01DFA38C LDR X23, [X23 + 0xC88]
	0x01DFA390 MOV V8.16B, V0.16B
	0x01DFA394 MOV W20, W2
	0x01DFA398 MOV W21, W1
	0x01DFA39C MOV X19, X0
	0x01DFA3A0 TBNZ X8, 0x0, 0x1DFA3B8
	0x01DFA3A4 ADRP X0, 0x22FE000
	0x01DFA3A8 LDR X0, [X0 + 0xC88]
	0x01DFA3AC BL 0x1C16CF4
	0x01DFA3B0 MOVZ W8, 0x1
	0x01DFA3B4 STRB W8, [X22 + 0xD31]
	0x01DFA3B8 LDR X0, [X23]
	0x01DFA3BC LDR X22, [X19 + 0x20]
	0x01DFA3C0 LDR W8, [X0 + 0xE0]
	0x01DFA3C4 CBNZ W8, 0x1DFA3CC
	0x01DFA3C8 BL 0x1C16DFC
	0x01DFA3CC CBZ X22, 0x1DFA43C
	0x01DFA3D0 LDR X8, [X23]
	0x01DFA3D4 AND W2, W21, 0x1
	0x01DFA3D8 MOV X0, X22
	0x01DFA3DC MOV X3, X31
	0x01DFA3E0 LDR X8, [X8 + 0xB8]
	0x01DFA3E4 LDR W1, [X8 + 0x28]
	0x01DFA3E8 BL 0x3BF60B8
	0x01DFA3EC LDR X0, [X19 + 0x20]
	0x01DFA3F0 CBZ X0, 0x1DFA43C
	0x01DFA3F4 LDR X8, [X23]
	0x01DFA3F8 AND W2, W20, 0x1
	0x01DFA3FC MOV X3, X31
	0x01DFA400 LDR X8, [X8 + 0xB8]
	0x01DFA404 LDR W1, [X8 + 0x2C]
	0x01DFA408 BL 0x3BF60B8
	0x01DFA40C LDR X0, [X19 + 0x20]
	0x01DFA410 CBZ X0, 0x1DFA43C
	0x01DFA414 LDR X8, [X23]
	0x01DFA418 LDP X20, X19, [X31 + 0x30]
	0x01DFA41C LDP X22, X21, [X31 + 0x20]
	0x01DFA420 LDP X30, X23, [X31 + 0x10]
	0x01DFA424 LDR X8, [X8 + 0xB8]
	0x01DFA428 MOV V0.16B, V8.16B
	0x01DFA42C MOV X2, X31
	0x01DFA430 LDR W1, [X8 + 0x34]
	0x01DFA434 LDR V8, [X31], #0x40
	0x01DFA438 B 0x3BF5EE0
	0x01DFA43C BL 0x1C16F20
	0x01DFA440 STR D8, [X31 - 0x40]!
	0x01DFA444 STR X30, [X31 + 0x8]
	0x01DFA448 STP X24, X23, [X31 + 0x10]
	0x01DFA44C STP X22, X21, [X31 + 0x20]
	0x01DFA450 STP X20, X19, [X31 + 0x30]
	0x01DFA454 ADRP X19, 0x25DE000
	0x01DFA458 LDRB W8, [X19 + 0xD34]
	0x01DFA45C MOV W20, W1
	0x01DFA460 MOV X21, X0
	0x01DFA464 TBNZ X8, 0x0, 0x1DFA488
	0x01DFA468 ADRP X0, 0x22FE000
	0x01DFA46C LDR X0, [X0 + 0xD58]
	0x01DFA470 BL 0x1C16CF4
	0x01DFA474 ADRP X0, 0x22FE000
	0x01DFA478 LDR X0, [X0 + 0xC88]
	0x01DFA47C BL 0x1C16CF4
	0x01DFA480 MOVZ W8, 0x1
	0x01DFA484 STRB W8, [X19 + 0xD34]
	0x01DFA488 LDR X19, [X21 + 0x30]
	0x01DFA48C CBZ X19, 0x1DFA498
	0x01DFA490 LDR X8, [X19 + 0x18]
	0x01DFA494 CBNZ X8, 0x1DFA4B8
	0x01DFA498 ADRP X8, 0x22FE000
	0x01DFA49C LDR X8, [X8 + 0xD58]
	0x01DFA4A0 MOV X0, X21
	0x01DFA4A4 LDR X1, [X8]
	0x01DFA4A8 BL 0x21A453C
	0x01DFA4AC MOV X19, X0
	0x01DFA4B0 STR X0, [X21 + 0x30]
	0x01DFA4B4 CBZ X0, 0x1DFA594
	0x01DFA4B8 ADRP X8, 0xFFFFFFFFFECF0000
	0x01DFA4BC LDR V0, [X8 + 0x188]
	0x01DFA4C0 LDR W8, [X19 + 0x18]
	0x01DFA4C4 ANDS W31, W20, 0x1
	0x01DFA4C8 FMOV S1, W31
	0x01DFA4CC FCSEL S8, S0, S1, NE
	0x01DFA4D0 CMP W8, 0x1
	0x01DFA4D4 B.LT 0x1DFA578
	0x01DFA4D8 ADRP X23, 0x22FE000
	0x01DFA4DC LDR X23, [X23 + 0xC88]
	0x01DFA4E0 MOV W22, W31
	0x01DFA4E4 CMP W22, W8
	0x01DFA4E8 B.CS 0x1DFA590
	0x01DFA4EC ADD X8, X19, W22, 0x3, SXTW
	0x01DFA4F0 LDR X0, [X8 + 0x20]
	0x01DFA4F4 CBZ X0, 0x1DFA594
	0x01DFA4F8 MOV X1, X31
	0x01DFA4FC BL 0x3C133DC
	0x01DFA500 CBZ X0, 0x1DFA594
	0x01DFA504 LDR W8, [X0 + 0x18]
	0x01DFA508 MOV X20, X0
	0x01DFA50C CMP W8, 0x1
	0x01DFA510 B.LT 0x1DFA568
	0x01DFA514 MOV W24, W31
	0x01DFA518 CMP W24, W8
	0x01DFA51C B.CS 0x1DFA590
	0x01DFA520 LDR X0, [X23]
	0x01DFA524 ADD X8, X20, W24, 0x3, SXTW
	0x01DFA528 LDR X21, [X8 + 0x20]
	0x01DFA52C LDR W9, [X0 + 0xE0]
	0x01DFA530 CBNZ W9, 0x1DFA53C
	0x01DFA534 BL 0x1C16DFC
	0x01DFA538 LDR X0, [X23]
	0x01DFA53C CBZ X21, 0x1DFA594
	0x01DFA540 LDR X8, [X0 + 0xB8]
	0x01DFA544 MOV X0, X21
	0x01DFA548 MOV V0.16B, V8.16B
	0x01DFA54C MOV X2, X31
	0x01DFA550 LDR W1, [X8 + 0x4]
	0x01DFA554 BL 0x3C15CD8
	0x01DFA558 LDR W8, [X20 + 0x18]
	0x01DFA55C ADD W24, W24, 0x1
	0x01DFA560 CMP W24, W8
	0x01DFA564 B.LT 0x1DFA518
	0x01DFA568 LDR W8, [X19 + 0x18]
	0x01DFA56C ADD W22, W22, 0x1

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+80], D15
	003 Move [X31+88], D14
	004 Move [X31+96], D13
	005 Move [X31+104], D12
	006 Move [X31+112], D11
	007 Move [X31+120], D10
	008 Move [X31+128], D9
	009 Move [X31+136], D8
	010 Move [X31+144], X30
	011 Move [X31+152], X23
	012 Move [X31+160], X22
	013 Move [X31+168], X21
	014 Move [X31+176], X20
	015 Move [X31+184], X19
	016 Move X23, 0x25DF000
	017 Move W8, [X23+3364]
	018 Move X19, X3
	019 Move X20, X2
	020 Move V8, V7
	021 Move V12, V6
	022 Move V13, V5
	023 Move V14, V4
	024 Move V15, V3
	025 Move V9, V2
	026 Move V10, V1
	027 Move V11, V0
	028 Move X21, X1
	029 Move X22, X0
	030 Move TEMP, X8
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfEqual {39}
	034 Move X0, 0x22FA000
	035 Move X0, [X0+1528]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X23+3364], W8
	039 Move [X31+72], W31
	040 Move [X31+64], X31
	041 Move [X31+60], W31
	042 Compare X21, 0
	043 JumpIfEqual {187}
	044 Move X0, X21
	045 Move X1, X31
	046 Move [X31+56], S15
	047 Call Component.get_transform, X0
	048 Compare X0, 0
	049 JumpIfEqual {187}
	050 Move X1, X31
	051 Move [X31+36], S14
	052 Move [X31+44], S13
	053 Move [X31+44], S12
	054 Move [X31+52], S10
	055 Move V15, V11
	056 Move [X31+52], S9
	057 Move [X31+32], S8
	058 Call Transform.get_position, X0
	059 Move X0, X21
	060 Move X1, X31
	061 Move V8, V0
	062 Move V9, V1
	063 Move V10, V2
	064 Call Component.get_transform, X0
	065 Compare X0, 0
	066 JumpIfEqual {187}
	067 Move X23, 0x22FA000
	068 Move X23, [X23+1528]
	069 Move X1, X31
	070 Call Transform.get_rotation, X0
	071 Move X0, [X23]
	072 Move V11, V0
	073 Move V12, V1
	074 Move V13, V2
	075 Move W8, [X0+224]
	076 Move V14, V3
	077 Compare W8, 0
	078 JumpIfNotEqual {80}
	079 Call 0x1C17DFC
	080 Move [X31+16], S11
	081 Move [X31+24], S12
	082 Move [X31+4], S9
	083 Move [X31+12], S10
	084 Move S11, [X31+48]
	085 Move S10, [X31+52]
	086 Move V3, [X31+56]
	087 Move S4, [X31+36]
	088 Move S5, [X31+40]
	089 Move V6, [X31+44]
	090 Add X2, X31, 64
	091 Add X3, X31, 60
	092 Move X0, X22
	093 Move V0, V15
	094 Move V1, V11
	095 Move V2, V10
	096 Move X1, X21
	097 Move X4, X31
	098 Move [X31+24], S13
	099 Move [X31+32], S14
	100 Move [X31], S8
	101 Call Physics.ComputePenetration, X0, X1, X2, X3, X4, X5, X6, X7
	102 Move TEMP, X0
	103 And TEMP, TEMP, 1
	104 Compare TEMP, 1
	105 JumpIfNotEqual {166}
	106 Move S0, [X31+64]
	107 Move S1, [X31+68]
	108 Move V2, [X31+72]
	109 Move V12, [X31+192]
	110 And X20, X20, 0
	111 Move X0, X20
	112 Move X1, X31
	113 NotImplemented "Instruction FNEG not yet implemented."
	114 NotImplemented "Instruction FNEG not yet implemented."
	115 NotImplemented "Instruction FNEG not yet implemented."
	116 Call LayerMask.op_Implicit, X0
	117 Move X8, [X23]
	118 Move W21, W0
	119 Move W9, [X8+224]
	120 Compare W9, 0
	121 JumpIfNotEqual {124}
	122 Move X0, X8
	123 Call 0x1C17DFC
	124 Move V0, V15
	125 Move V1, V11
	126 Move V2, V10
	127 Move V3, V8
	128 Move V4, V9
	129 Move V5, V13
	130 Move X0, X19
	131 Move V6, V12
	132 Move W1, W21
	133 Move X2, X31
	134 Call Physics.Raycast, X0, X1, X2, V0, X3
	135 Move TEMP, X0
	136 And TEMP, TEMP, 1
	137 Compare TEMP, 1
	138 JumpIfEqual {165}
	139 Move X0, X20
	140 Move X1, X31
	141 Call LayerMask.op_Implicit, X0
	142 Move X8, [X23]
	143 Move W20, W0
	144 Move W9, [X8+224]
	145 Compare W9, 0
	146 JumpIfNotEqual {149}
	147 Move X0, X8
	148 Call 0x1C17DFC
	149 Move V3, [X31+32]
	150 Move V0, V15
	151 Move V1, V11
	152 Move V2, V10
	153 Move V4, V8
	154 Move V5, V9
	155 Move V6, V13
	156 Move X0, X19
	157 Move V7, V12
	158 Move W1, W20
	159 Move X2, X31
	160 Call Physics.SphereCast, X0, V0, X1, X2, V1, X3
	161 Move TEMP, X0
	162 And TEMP, TEMP, 1
	163 Compare TEMP, 1
	164 JumpIfNotEqual {166}
	165 Move W0, 1
	166 Move W0, W31
	167 NotImplemented "Instruction MOVI not yet implemented."
	168 Move [X19+28], V0
	169 Move [X19], V0
	170 Move [X19+8], V0
	171 Move X20, [X31+176]
	172 Move X19, [X31+184]
	173 Move X22, [X31+160]
	174 Move X21, [X31+168]
	175 Move X30, [X31+144]
	176 Move X23, [X31+152]
	177 Move D9, [X31+128]
	178 Move D8, [X31+136]
	179 Move D11, [X31+112]
	180 Move D10, [X31+120]
	181 Move D13, [X31+96]
	182 Move D12, [X31+104]
	183 Move D15, [X31+80]
	184 Move D14, [X31+88]
	185 Add X31, X31, 192
	186 Return X0
	187 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x01DFA570 CMP W22, W8
	0x01DFA574 B.LT 0x1DFA4E4
	0x01DFA578 LDP X20, X19, [X31 + 0x30]
	0x01DFA57C LDP X22, X21, [X31 + 0x20]
	0x01DFA580 LDP X24, X23, [X31 + 0x10]
	0x01DFA584 LDR X30, [X31 + 0x8]
	0x01DFA588 LDR V8, [X31], #0x40
	0x01DFA58C RET
	0x01DFA590 BL 0x1C16F28
	0x01DFA594 BL 0x1C16F20
	0x01DFA598 STP X29, X30, [X31 - 0x60]!
	0x01DFA59C STP X28, X27, [X31 + 0x10]
	0x01DFA5A0 STP X26, X25, [X31 + 0x20]
	0x01DFA5A4 STP X24, X23, [X31 + 0x30]
	0x01DFA5A8 STP X22, X21, [X31 + 0x40]
	0x01DFA5AC STP X20, X19, [X31 + 0x50]
	0x01DFA5B0 ADRP X22, 0x25DE000
	0x01DFA5B4 ADRP X23, 0x22FF000
	0x01DFA5B8 ADRP X19, 0x22FE000
	0x01DFA5BC ADRP X21, 0x22FF000
	0x01DFA5C0 ADRP X20, 0x22FF000
	0x01DFA5C4 ADRP X29, 0x22FF000
	0x01DFA5C8 ADRP X28, 0x22FF000
	0x01DFA5CC ADRP X27, 0x22FF000
	0x01DFA5D0 ADRP X26, 0x22FF000
	0x01DFA5D4 ADRP X25, 0x22FF000
	0x01DFA5D8 ADRP X24, 0x22FF000
	0x01DFA5DC LDR X23, [X23 + 0x4A0]
	0x01DFA5E0 LDR X19, [X19 + 0xC88]
	0x01DFA5E4 LDR X21, [X21 + 0x4A8]
	0x01DFA5E8 LDR X20, [X20 + 0x4B0]
	0x01DFA5EC LDR X29, [X29 + 0x4B8]
	0x01DFA5F0 LDR X28, [X28 + 0x4C0]
	0x01DFA5F4 LDR X27, [X27 + 0x4C8]
	0x01DFA5F8 LDR X26, [X26 + 0x4D0]
	0x01DFA5FC LDR X25, [X25 + 0x4D8]
	0x01DFA600 LDRB W8, [X22 + 0xD35]
	0x01DFA604 LDR X24, [X24 + 0x4E0]
	0x01DFA608 TBNZ X8, 0x0, 0x1DFA6BC
	0x01DFA60C ADRP X0, 0x22FE000
	0x01DFA610 LDR X0, [X0 + 0xC88]
	0x01DFA614 BL 0x1C16CF4
	0x01DFA618 ADRP X0, 0x22FF000
	0x01DFA61C LDR X0, [X0 + 0x4E8]
	0x01DFA620 BL 0x1C16CF4
	0x01DFA624 ADRP X0, 0x22FF000
	0x01DFA628 LDR X0, [X0 + 0x4B8]
	0x01DFA62C BL 0x1C16CF4
	0x01DFA630 ADRP X0, 0x22FF000
	0x01DFA634 LDR X0, [X0 + 0x4D8]
	0x01DFA638 BL 0x1C16CF4
	0x01DFA63C ADRP X0, 0x22FF000
	0x01DFA640 LDR X0, [X0 + 0x4F0]
	0x01DFA644 BL 0x1C16CF4
	0x01DFA648 ADRP X0, 0x22FF000
	0x01DFA64C LDR X0, [X0 + 0x4C8]
	0x01DFA650 BL 0x1C16CF4
	0x01DFA654 ADRP X0, 0x22FF000
	0x01DFA658 LDR X0, [X0 + 0x4B0]
	0x01DFA65C BL 0x1C16CF4
	0x01DFA660 ADRP X0, 0x22FF000
	0x01DFA664 LDR X0, [X0 + 0x4A0]
	0x01DFA668 BL 0x1C16CF4
	0x01DFA66C ADRP X0, 0x22FF000
	0x01DFA670 LDR X0, [X0 + 0x4F8]
	0x01DFA674 BL 0x1C16CF4

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x25DF000
	009 Move X24, 0x22FF000
	010 Move X19, 0x22FF000
	011 Move X20, 0x22FF000
	012 Move X22, 0x22FF000
	013 Move X21, 0x2300000
	014 Move W8, [X23+3365]
	015 Move X24, [X24+3816]
	016 Move X19, [X19+3824]
	017 Move X20, [X20+3136]
	018 Move X22, [X22+312]
	019 Move X21, [X21+1160]
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {41}
	024 Move X0, 0x22FF000
	025 Move X0, [X0+312]
	026 Call 0x1C17CF4
	027 Move X0, 0x22FF000
	028 Move X0, [X0+3824]
	029 Call 0x1C17CF4
	030 Move X0, 0x22FF000
	031 Move X0, [X0+3816]
	032 Call 0x1C17CF4
	033 Move X0, 0x22FF000
	034 Move X0, [X0+3136]
	035 Call 0x1C17CF4
	036 Move X0, 0x2300000
	037 Move X0, [X0+1160]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X23+3365], W8
	041 Move X0, [X24]
	042 Call 0x1C17F10
	043 Move X2, [X19]
	044 Move W1, 8
	045 Move X19, X0
	046 Call List`1<Object>..ctor, X0, X1
	047 Move X8, [X20]
	048 Move W1, 8
	049 Move X8, [X8+184]
	050 Move [X8], X19
	051 Move X0, [X22]
	052 Call 0x1C17D6C
	053 Move X8, [X20]
	054 Move W1, 1
	055 Move X8, [X8+184]
	056 Move [X8+8], X0
	057 Move X0, [X22]
	058 Call 0x1C17D6C
	059 Move X8, [X20]
	060 Move W1, 8
	061 Move X8, [X8+184]
	062 Move [X8+16], X0
	063 Move X0, [X21]
	064 Call 0x1C17D6C
	065 Move X8, [X20]
	066 Move X20, [X31+48]
	067 Move X19, [X31+56]
	068 Move X22, [X31+32]
	069 Move X21, [X31+40]
	070 Move X24, [X31+16]
	071 Move X23, [X31+24]
	072 Move X8, [X8+184]
	073 Move [X8+24], X0
	074 Move X30, [X31+64]
	075 Return 

