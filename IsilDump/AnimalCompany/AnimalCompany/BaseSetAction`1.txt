Type: AnimalCompany.BaseSetAction`1

Method: System.Void .ctor(System.Func`2<AnimalCompany.AppState, SpatialSys.ObservableState.StatePrimitive`1<T>> filter, T value)

Disassembly:
	0x0271C0D4 LDR X8, [X19]
	0x0271C0D8 MOV X0, X20
	0x0271C0DC LDR X8, [X8 + 0xC0]
	0x0271C0E0 LDR X1, [X8 + 0x68]
	0x0271C0E4 BL 0x271E374
	0x0271C0E8 LDR X8, [X19]
	0x0271C0EC LDR X8, [X8 + 0xC0]
	0x0271C0F0 LDR X0, [X8 + 0x178]
	0x0271C0F4 LDRB W8, [X0 + 0x135]
	0x0271C0F8 TBNZ X8, 0x0, 0x271C100
	0x0271C0FC BL 0x1BB4180
	0x0271C100 BL 0x1B6EA0C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, X1
	006 Move X1, X31
	007 Move X20, X0
	008 And W21, W2, 1
	009 Call BaseAction..ctor, X0
	010 Move [X20+24], X19
	011 Move [X20+32], W21
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move X30, [X31+32]
	015 Move X21, [X31+40]
	016 Return 

Method: System.Void Execute(AnimalCompany.AppState state)

Disassembly:
	0x0271C104 LDR X8, [X19]
	0x0271C108 MOV X1, X20
	0x0271C10C MOV X21, X0
	0x0271C110 LDR X8, [X8 + 0xC0]
	0x0271C114 LDR X2, [X8 + 0x180]
	0x0271C118 BL 0x2B5DF14
	0x0271C11C CBZ X21, 0x271C178
	0x0271C120 LDR X1, [X20 + 0x400]
	0x0271C124 MOV X0, X21
	0x0271C128 MOV X2, X31
	0x0271C12C BL 0x3C16994
	0x0271C130 LDR X8, [X19]
	0x0271C134 LDR X19, [X20 + 0x400]
	0x0271C138 LDR X8, [X8 + 0xC0]
	0x0271C13C LDR X0, [X8 + 0xB8]
	0x0271C140 LDRB W8, [X0 + 0x135]
	0x0271C144 TBNZ X8, 0x0, 0x271C14C
	0x0271C148 BL 0x1BB4180
	0x0271C14C CBZ X19, 0x271C178

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X0+24]
	005 Compare X8, 0
	006 JumpIfEqual {24}
	007 Move X19, X2
	008 Move X20, X0
	009 Move X9, [X8+24]
	010 Move X0, [X8+64]
	011 Move X2, [X8+40]
	012 NotImplemented "Instruction BLR not yet implemented."
	013 Compare X0, 0
	014 JumpIfEqual {24}
	015 Move X8, [X19+32]
	016 Move W1, [X20+32]
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 Move X8, [X8+192]
	020 Move X2, [X8+40]
	021 Move X30, [X31+32]
	022 Call 0x24BA6A4, X0, X1
	023 Return 
	024 Call 0x1B6FA1C

Method: System.String ToString()

Disassembly:
	0x0271C150 LDR X8, [X0 + 0xB8]
	0x0271C154 MOV X0, X19
	0x0271C158 LDP X20, X19, [X31 + 0x40]
	0x0271C15C LDP X22, X21, [X31 + 0x30]
	0x0271C160 LDR X1, [X8 + 0x20]
	0x0271C164 LDP X24, X23, [X31 + 0x20]
	0x0271C168 LDP X30, X25, [X31 + 0x10]
	0x0271C16C MOV X2, X31
	0x0271C170 LDR V8, [X31], #0x50
	0x0271C174 B 0x3C598FC
	0x0271C178 BL 0x1B6EA1C
	0x0271C17C FCMP S0, 0x0
	0x0271C180 B.LS 0x271C200
	0x0271C184 SUB X31, X31, 0x30
	0x0271C188 STP D9, D8, [X31 + 0x10]
	0x0271C18C STP X30, X19, [X31 + 0x20]
	0x0271C190 BL 0x3D199A0
	0x0271C194 ADRP X19, 0x1B07000
	0x0271C198 LDRB W8, [X19 + 0xFBB]
	0x0271C19C MOV V8.16B, V0.16B
	0x0271C1A0 CBNZ W8, 0x271C1B8
	0x0271C1A4 ADRP X0, 0x1831000
	0x0271C1A8 LDR X0, [X0 + 0x488]
	0x0271C1AC BL 0x1B6E7F0
	0x0271C1B0 MOVZ W8, 0x1
	0x0271C1B4 STRB W8, [X19 + 0xFBB]
	0x0271C1B8 ADRP X8, 0x1831000
	0x0271C1BC LDR X8, [X8 + 0x488]
	0x0271C1C0 LDR X0, [X8]
	0x0271C1C4 LDR W8, [X0 + 0xE0]
	0x0271C1C8 CBNZ W8, 0x271C1D0
	0x0271C1CC BL 0x1B6E8F8
	0x0271C1D0 FCVT S9, S8
	0x0271C1D4 ADD X0, X31, 0x8
	0x0271C1D8 MOV V0.16B, V9.16B
	0x0271C1DC BL 0x3D19930
	0x0271C1E0 FCMP S8, 0x0
	0x0271C1E4 B.GE 0x271C208
	0x0271C1E8 FMOV D1, -0.5
	0x0271C1EC FCMP D0, D1
	0x0271C1F0 B.NE 0x271C230

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1B0A000
	007 Move W8, [X21+1353]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x1859000
	015 Move X0, [X0+4064]
	016 Call 0x1B6F7F0
	017 Move W8, 1
	018 Move [X21+1353], W8
	019 Compare X20, 0
	020 JumpIfEqual {49}
	021 Move X21, 0x1859000
	022 Move X21, [X21+4064]
	023 Move X0, X20
	024 Move X1, X31
	025 Call "il2cpp_vm_object_is_inst", X0
	026 Move X1, X31
	027 Call BaseAction.GetTypeNameStripped, X0
	028 Move W8, [X20+32]
	029 Add X1, X31, 12
	030 Move [X31+12], W8
	031 Move X8, [X19+32]
	032 Move X19, X0
	033 Move X8, [X8+192]
	034 Move X8, [X8+16]
	035 Move X0, X8
	036 Call 0x1B6F900
	037 Move X8, [X21]
	038 Move X2, X0
	039 Move X1, X19
	040 Move X3, X31
	041 Move X0, X8
	042 Call String.Format, X0, X1, X2
	043 Move X20, [X31+32]
	044 Move X19, [X31+40]
	045 Move X30, [X31+16]
	046 Move X21, [X31+24]
	047 Add X31, X31, 48
	048 Return X0
	049 Call 0x1B6FA1C

