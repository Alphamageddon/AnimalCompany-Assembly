Type: AnimalCompany.BaseSetAction`1

Method: System.Void .ctor(System.Func`2<AnimalCompany.AppState, SpatialSys.ObservableState.StatePrimitive`1<T>> filter, T value)

Disassembly:
	0x028BC0B0 LDR X2, [X8 + 0x140]
	0x028BC0B4 BL 0x3314368
	0x028BC0B8 LDR X0, [X22]
	0x028BC0BC BL 0x1C16F10
	0x028BC0C0 LDR X8, [X19]
	0x028BC0C4 MOV X1, X20
	0x028BC0C8 MOV X3, X31
	0x028BC0CC MOV X22, X0
	0x028BC0D0 LDR X8, [X8 + 0xC0]
	0x028BC0D4 LDR X2, [X8 + 0x148]
	0x028BC0D8 BL 0x3314368
	0x028BC0DC LDR X8, [X19]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, X1
	006 Move X1, X31
	007 Move X20, X0
	008 And W21, W2, 1
	009 Call BaseAction..ctor, X0
	010 Move [X20+24], X19
	011 Move [X20+32], W21
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move X30, [X31+32]
	015 Move X21, [X31+40]
	016 Return 

Method: System.Void Execute(AnimalCompany.AppState state)

Disassembly:
	0x028BC0E0 LDR X8, [X8 + 0xC0]
	0x028BC0E4 LDR X0, [X8 + 0x70]
	0x028BC0E8 LDRB W8, [X0 + 0x135]
	0x028BC0EC TBNZ X8, 0x0, 0x28BC0F4
	0x028BC0F0 BL 0x1C5C684
	0x028BC0F4 BL 0x1C16F10
	0x028BC0F8 LDR X8, [X19]
	0x028BC0FC MOV X1, X20
	0x028BC100 MOV X2, X21
	0x028BC104 MOV X3, X22
	0x028BC108 LDR X8, [X8 + 0xC0]
	0x028BC10C MOV X23, X0
	0x028BC110 LDR X4, [X8 + 0x150]
	0x028BC114 BL 0x28F72F4
	0x028BC118 LDR X0, [X20 + 0x440]
	0x028BC11C STR X23, [X20 + 0x480]
	0x028BC120 CBZ X0, 0x28BC274
	0x028BC124 ADRP X21, 0x1862000
	0x028BC128 ADRP X22, 0x1862000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X0+24]
	005 Compare X8, 0
	006 JumpIfEqual {24}
	007 Move X19, X2
	008 Move X20, X0
	009 Move X9, [X8+24]
	010 Move X0, [X8+64]
	011 Move X2, [X8+40]
	012 NotImplemented "Instruction BLR not yet implemented."
	013 Compare X0, 0
	014 JumpIfEqual {24}
	015 Move X8, [X19+32]
	016 Move W1, [X20+32]
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 Move X8, [X8+192]
	020 Move X2, [X8+40]
	021 Move X30, [X31+32]
	022 Call 0x26528D0, X0, X1
	023 Return 
	024 Call 0x1C17F20

Method: System.String ToString()

Disassembly:
	0x028BC12C ADRP X23, 0x1862000
	0x028BC130 ADRP X24, 0x1862000
	0x028BC134 LDR X21, [X21 + 0x100]
	0x028BC138 LDR X22, [X22 + 0xF0]
	0x028BC13C LDR X23, [X23 + 0x108]
	0x028BC140 LDR X24, [X24 + 0xF8]
	0x028BC144 MOV W1, W31
	0x028BC148 MOV X2, X31
	0x028BC14C BL 0x3DEF238
	0x028BC150 LDR X0, [X20 + 0x440]
	0x028BC154 LDR X1, [X20 + 0x480]
	0x028BC158 MOV X2, X31
	0x028BC15C BL 0x3D16A80
	0x028BC160 LDR X0, [X21]
	0x028BC164 BL 0x1C16F10
	0x028BC168 LDR X8, [X19]
	0x028BC16C MOV X1, X20
	0x028BC170 MOV X3, X31
	0x028BC174 MOV X21, X0
	0x028BC178 LDR X8, [X8 + 0xC0]
	0x028BC17C LDR X2, [X8 + 0x168]
	0x028BC180 BL 0x2D0E824
	0x028BC184 LDR X3, [X22]
	0x028BC188 MOV X0, X20
	0x028BC18C MOV X1, X21
	0x028BC190 MOV W2, W31
	0x028BC194 BL 0x21A1534
	0x028BC198 LDR X0, [X23]
	0x028BC19C BL 0x1C16F10
	0x028BC1A0 LDR X8, [X19]
	0x028BC1A4 MOV X1, X20
	0x028BC1A8 MOV X3, X31
	0x028BC1AC MOV X21, X0
	0x028BC1B0 LDR X8, [X8 + 0xC0]
	0x028BC1B4 LDR X2, [X8 + 0x170]
	0x028BC1B8 BL 0x2D0E824
	0x028BC1BC LDR X3, [X24]
	0x028BC1C0 MOV X0, X20
	0x028BC1C4 MOV X1, X21
	0x028BC1C8 MOV W2, W31
	0x028BC1CC BL 0x21A1534

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1B1F000
	007 Move W8, [X21+3257]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x1862000
	015 Move X0, [X0+1480]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3257], W8
	019 Compare X20, 0
	020 JumpIfEqual {49}
	021 Move X21, 0x1862000
	022 Move X21, [X21+1480]
	023 Move X0, X20
	024 Move X1, X31
	025 Call "il2cpp_vm_object_is_inst", X0
	026 Move X1, X31
	027 Call BaseAction.GetTypeNameStripped, X0
	028 Move W8, [X20+32]
	029 Add X1, X31, 12
	030 Move [X31+12], W8
	031 Move X8, [X19+32]
	032 Move X19, X0
	033 Move X8, [X8+192]
	034 Move X8, [X8+16]
	035 Move X0, X8
	036 Call 0x1C17E04
	037 Move X8, [X21]
	038 Move X2, X0
	039 Move X1, X19
	040 Move X3, X31
	041 Move X0, X8
	042 Call String.Format, X0, X1, X2
	043 Move X20, [X31+32]
	044 Move X19, [X31+40]
	045 Move X30, [X31+16]
	046 Move X21, [X31+24]
	047 Add X31, X31, 48
	048 Return X0
	049 Call 0x1C17F20

