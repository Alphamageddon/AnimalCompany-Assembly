Type: AnimalCompany.UpdateProductsAction

Method: System.Void .ctor(System.Collections.Generic.IEnumerable`1<AnimalCompany.API.ApiProduct> products)

Disassembly:
	0x01D45B44 ADRP X8, 0x23AF000
	0x01D45B48 LDR X8, [X8 + 0x4B0]
	0x01D45B4C MOV X2, X0
	0x01D45B50 MOV X1, X21
	0x01D45B54 MOV X3, X31
	0x01D45B58 LDR X8, [X8]
	0x01D45B5C MOV X0, X8
	0x01D45B60 BL 0x3227BD4
	0x01D45B64 ADRP X8, 0x23AE000
	0x01D45B68 LDR X8, [X8 + 0x720]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move [X20+24], X19
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X30, [X31+32]
	012 Return 

Method: System.Void Execute(AnimalCompany.AppState state)

Disassembly:
	0x01D45B6C MOV X21, X0
	0x01D45B70 LDR X8, [X8]
	0x01D45B74 MOV X0, X8
	0x01D45B78 BL 0x1C16F10
	0x01D45B7C ADRP X8, 0x23AE000
	0x01D45B80 LDR X8, [X8 + 0x718]
	0x01D45B84 MOV X22, X0
	0x01D45B88 LDR X1, [X8]
	0x01D45B8C BL 0x2AA4804
	0x01D45B90 LDR X8, [X19 + 0x10]
	0x01D45B94 CBZ X8, 0x1D45D98
	0x01D45B98 CBZ X22, 0x1D45D98
	0x01D45B9C LDR X2, [X8 + 0x58]
	0x01D45BA0 ADRP X8, 0x23AF000
	0x01D45BA4 ADRP X24, 0x23AE000
	0x01D45BA8 LDR X8, [X8 + 0x490]
	0x01D45BAC LDR X24, [X24 + 0x710]
	0x01D45BB0 MOV X0, X22
	0x01D45BB4 LDR X1, [X8]
	0x01D45BB8 LDR X3, [X24]
	0x01D45BBC BL 0x2AA5098
	0x01D45BC0 LDR X8, [X20]
	0x01D45BC4 MOV X0, X20
	0x01D45BC8 LDP X9, X1, [X8 + 0x178]
	0x01D45BCC BLR X9
	0x01D45BD0 ADRP X8, 0x23AE000
	0x01D45BD4 LDR X8, [X8 + 0xBA8]
	0x01D45BD8 LDR X23, [X8]
	0x01D45BDC CBZ X0, 0x1D45C1C
	0x01D45BE0 ADRP X8, 0x23AF000
	0x01D45BE4 LDR W1, [X0 + 0x10]
	0x01D45BE8 LDR X8, [X8 + 0x470]
	0x01D45BEC ADD X0, X31, 0x0
	0x01D45BF0 STR X31, [X31]
	0x01D45BF4 LDR X2, [X8]
	0x01D45BF8 BL 0x24341FC
	0x01D45BFC LDR X8, [X31]
	0x01D45C00 B 0x1D45C20
	0x01D45C04 LDR X9, [X8 + 0x4E8]
	0x01D45C08 LDR X1, [X8 + 0x4F0]
	0x01D45C0C MOV X0, X20
	0x01D45C10 BLR X9
	0x01D45C14 STR X0, [X19 + 0x18]
	0x01D45C18 B 0x1D45D78
	0x01D45C1C MOV X8, X31
	0x01D45C20 ADRP X25, 0x23AF000
	0x01D45C24 LDR X25, [X25 + 0x478]
	0x01D45C28 ADD X1, X31, 0x0
	0x01D45C2C STR X8, [X31]
	0x01D45C30 LDR X0, [X25]
	0x01D45C34 BL 0x1C16E04
	0x01D45C38 LDR X3, [X24]
	0x01D45C3C MOV X2, X0
	0x01D45C40 MOV X0, X22
	0x01D45C44 MOV X1, X23
	0x01D45C48 BL 0x2AA5098
	0x01D45C4C LDR X8, [X20]
	0x01D45C50 MOV X0, X20
	0x01D45C54 LDP X9, X1, [X8 + 0x178]
	0x01D45C58 BLR X9
	0x01D45C5C ADRP X8, 0x23AF000
	0x01D45C60 LDR X8, [X8 + 0x4A8]
	0x01D45C64 LDR X23, [X8]
	0x01D45C68 CBZ X0, 0x1D45C90
	0x01D45C6C ADRP X8, 0x23AF000
	0x01D45C70 LDR W1, [X0 + 0x14]
	0x01D45C74 LDR X8, [X8 + 0x470]
	0x01D45C78 ADD X0, X31, 0x0
	0x01D45C7C STR X31, [X31]
	0x01D45C80 LDR X2, [X8]
	0x01D45C84 BL 0x24341FC
	0x01D45C88 LDR X8, [X31]
	0x01D45C8C B 0x1D45C94
	0x01D45C90 MOV X8, X31
	0x01D45C94 LDR X0, [X25]
	0x01D45C98 ADD X1, X31, 0x0
	0x01D45C9C STR X8, [X31]
	0x01D45CA0 BL 0x1C16E04
	0x01D45CA4 LDR X3, [X24]
	0x01D45CA8 MOV X2, X0
	0x01D45CAC MOV X0, X22
	0x01D45CB0 MOV X1, X23
	0x01D45CB4 BL 0x2AA5098
	0x01D45CB8 LDR X8, [X20]
	0x01D45CBC MOV X0, X20
	0x01D45CC0 LDP X9, X1, [X8 + 0x178]
	0x01D45CC4 BLR X9
	0x01D45CC8 ADRP X8, 0x23AF000
	0x01D45CCC LDR X8, [X8 + 0x480]
	0x01D45CD0 LDR X1, [X8]
	0x01D45CD4 CBZ X0, 0x1D45CE0
	0x01D45CD8 LDR X2, [X0 + 0x18]
	0x01D45CDC B 0x1D45CE4
	0x01D45CE0 MOV X2, X31
	0x01D45CE4 LDR X3, [X24]
	0x01D45CE8 MOV X0, X22
	0x01D45CEC BL 0x2AA5098
	0x01D45CF0 ADRP X8, 0x23AE000
	0x01D45CF4 LDR X8, [X8 + 0x788]
	0x01D45CF8 LDR X0, [X8]
	0x01D45CFC LDR W8, [X0 + 0xE0]
	0x01D45D00 CBNZ W8, 0x1D45D08
	0x01D45D04 BL 0x1C16DFC
	0x01D45D08 ADRP X8, 0x23AF000
	0x01D45D0C ADRP X9, 0x23AF000
	0x01D45D10 LDR X8, [X8 + 0x488]
	0x01D45D14 LDR X9, [X9 + 0x88]
	0x01D45D18 MOVZ W0, 0x4000
	0x01D45D1C MOVZ W5, 0x38
	0x01D45D20 LDR X3, [X8]
	0x01D45D24 LDR X4, [X9]
	0x01D45D28 MOV X1, X21
	0x01D45D2C MOV X2, X22
	0x01D45D30 MOV X6, X31
	0x01D45D34 BL 0x35C25CC
	0x01D45D38 ADRP X8, 0x23AE000
	0x01D45D3C LDR X20, [X19 + 0x10]
	0x01D45D40 LDR X8, [X8 + 0x7D0]
	0x01D45D44 LDR X0, [X8]
	0x01D45D48 BL 0x1C16F10
	0x01D45D4C ADRP X8, 0x23AF000
	0x01D45D50 LDR X8, [X8 + 0x498]
	0x01D45D54 MOV X2, X31
	0x01D45D58 MOV X21, X0
	0x01D45D5C LDR X1, [X8]
	0x01D45D60 BL 0x33B2C70
	0x01D45D64 CBZ X20, 0x1D45D98
	0x01D45D68 MOV X0, X20
	0x01D45D6C MOV X1, X21
	0x01D45D70 MOV X2, X31
	0x01D45D74 BL 0x35BA480
	0x01D45D78 MOVZ W8, 0x1
	0x01D45D7C STRB W8, [X19 + 0x20]
	0x01D45D80 LDP X20, X19, [X31 + 0x40]
	0x01D45D84 LDP X22, X21, [X31 + 0x30]
	0x01D45D88 LDP X24, X23, [X31 + 0x20]
	0x01D45D8C LDP X30, X25, [X31 + 0x10]
	0x01D45D90 ADD X31, X31, 0x50
	0x01D45D94 RET
	0x01D45D98 BL 0x1C16F20
	0x01D45D9C STR X30, [X31 - 0x40]!
	0x01D45DA0 STP X24, X23, [X31 + 0x10]
	0x01D45DA4 STP X22, X21, [X31 + 0x20]
	0x01D45DA8 STP X20, X19, [X31 + 0x30]
	0x01D45DAC ADRP X21, 0x2693000
	0x01D45DB0 ADRP X23, 0x23AE000
	0x01D45DB4 LDRB W8, [X21 + 0x768]
	0x01D45DB8 LDR X23, [X23 + 0x648]
	0x01D45DBC MOV X19, X1
	0x01D45DC0 MOV X20, X0
	0x01D45DC4 TBNZ X8, 0x0, 0x1D45DE8
	0x01D45DC8 ADRP X0, 0x23AE000
	0x01D45DCC LDR X0, [X0 + 0x648]
	0x01D45DD0 BL 0x1C16CF4
	0x01D45DD4 ADRP X0, 0x23AF000
	0x01D45DD8 LDR X0, [X0 + 0x1F8]
	0x01D45DDC BL 0x1C16CF4
	0x01D45DE0 MOVZ W8, 0x1
	0x01D45DE4 STRB W8, [X21 + 0x768]
	0x01D45DE8 LDR X0, [X23]
	0x01D45DEC LDR W8, [X0 + 0xE0]
	0x01D45DF0 CBNZ W8, 0x1D45DF8
	0x01D45DF4 BL 0x1C16DFC
	0x01D45DF8 BL 0x1D32AF4
	0x01D45DFC MOV X21, X0
	0x01D45E00 BL 0x1D32B7C
	0x01D45E04 ADRP X24, 0x2693000
	0x01D45E08 LDRB W8, [X24 + 0x787]
	0x01D45E0C MOV X22, X0
	0x01D45E10 CBNZ W8, 0x1D45E28
	0x01D45E14 ADRP X0, 0x23AE000
	0x01D45E18 LDR X0, [X0 + 0x648]
	0x01D45E1C BL 0x1C16CF4
	0x01D45E20 MOVZ W8, 0x1
	0x01D45E24 STRB W8, [X24 + 0x787]
	0x01D45E28 LDR X0, [X23]
	0x01D45E2C LDR W8, [X0 + 0xE0]
	0x01D45E30 CBNZ W8, 0x1D45E3C
	0x01D45E34 BL 0x1C16DFC
	0x01D45E38 LDR X0, [X23]
	0x01D45E3C LDR X8, [X0 + 0xB8]
	0x01D45E40 LDR X8, [X8]
	0x01D45E44 CBZ X8, 0x1D45E98
	0x01D45E48 LDR X8, [X8 + 0xB8]
	0x01D45E4C CBZ X8, 0x1D45E98
	0x01D45E50 ADRP X9, 0x23AF000
	0x01D45E54 LDR X9, [X9 + 0x1F8]
	0x01D45E58 LDR X0, [X8 + 0x48]
	0x01D45E5C LDR X1, [X9]
	0x01D45E60 BL 0x265C594
	0x01D45E64 CBZ X21, 0x1D45E98
	0x01D45E68 MOV X2, X0
	0x01D45E6C LDR X3, [X20 + 0x18]
	0x01D45E70 MOV X0, X21
	0x01D45E74 MOV X1, X22
	0x01D45E78 MOV X5, X19
	0x01D45E7C LDP X20, X19, [X31 + 0x30]
	0x01D45E80 LDP X22, X21, [X31 + 0x20]
	0x01D45E84 LDP X24, X23, [X31 + 0x10]
	0x01D45E88 MOV X4, X31
	0x01D45E8C MOV X6, X31
	0x01D45E90 LDR X30, [X31], #0x40
	0x01D45E94 B 0x1D69518
	0x01D45E98 BL 0x1C16F20
	0x01D45E9C RET
	0x01D45EA0 STR D10, [X31 - 0x50]!
	0x01D45EA4 STP D9, D8, [X31 + 0x10]
	0x01D45EA8 STP X30, X23, [X31 + 0x20]
	0x01D45EAC STP X22, X21, [X31 + 0x30]
	0x01D45EB0 STP X20, X19, [X31 + 0x40]
	0x01D45EB4 ADRP X20, 0x2693000
	0x01D45EB8 LDRB W8, [X20 + 0x769]
	0x01D45EBC MOV X19, X0
	0x01D45EC0 TBNZ X8, 0x0, 0x1D460A0
	0x01D45EC4 ADRP X0, 0x23AE000
	0x01D45EC8 LDR X0, [X0 + 0xB50]
	0x01D45ECC BL 0x1C16CF4
	0x01D45ED0 ADRP X0, 0x23AE000
	0x01D45ED4 LDR X0, [X0 + 0x648]
	0x01D45ED8 BL 0x1C16CF4
	0x01D45EDC ADRP X0, 0x23AE000
	0x01D45EE0 LDR X0, [X0 + 0xAB0]
	0x01D45EE4 BL 0x1C16CF4
	0x01D45EE8 ADRP X0, 0x23AF000
	0x01D45EEC LDR X0, [X0 + 0x4D0]
	0x01D45EF0 BL 0x1C16CF4
	0x01D45EF4 ADRP X0, 0x23AF000
	0x01D45EF8 LDR X0, [X0 + 0x4D8]
	0x01D45EFC BL 0x1C16CF4
	0x01D45F00 ADRP X0, 0x23AF000
	0x01D45F04 LDR X0, [X0 + 0x4E0]
	0x01D45F08 BL 0x1C16CF4
	0x01D45F0C ADRP X0, 0x23AF000
	0x01D45F10 LDR X0, [X0 + 0x4E8]
	0x01D45F14 BL 0x1C16CF4
	0x01D45F18 ADRP X0, 0x23AE000
	0x01D45F1C LDR X0, [X0 + 0x710]
	0x01D45F20 BL 0x1C16CF4
	0x01D45F24 ADRP X0, 0x23AE000
	0x01D45F28 LDR X0, [X0 + 0x718]
	0x01D45F2C BL 0x1C16CF4
	0x01D45F30 ADRP X0, 0x23AE000
	0x01D45F34 LDR X0, [X0 + 0x720]
	0x01D45F38 BL 0x1C16CF4
	0x01D45F3C ADRP X0, 0x23AE000
	0x01D45F40 LDR X0, [X0 + 0x7D0]
	0x01D45F44 BL 0x1C16CF4
	0x01D45F48 ADRP X0, 0x23AE000
	0x01D45F4C LDR X0, [X0 + 0x788]
	0x01D45F50 BL 0x1C16CF4
	0x01D45F54 ADRP X0, 0x23AF000
	0x01D45F58 LDR X0, [X0 + 0x4F0]
	0x01D45F5C BL 0x1C16CF4
	0x01D45F60 ADRP X0, 0x23AF000
	0x01D45F64 LDR X0, [X0 + 0x4F8]
	0x01D45F68 BL 0x1C16CF4
	0x01D45F6C ADRP X0, 0x23AF000
	0x01D45F70 LDR X0, [X0 + 0x500]
	0x01D45F74 BL 0x1C16CF4
	0x01D45F78 ADRP X0, 0x23AF000
	0x01D45F7C LDR X0, [X0 + 0x508]
	0x01D45F80 BL 0x1C16CF4
	0x01D45F84 ADRP X0, 0x23AF000
	0x01D45F88 LDR X0, [X0 + 0x510]
	0x01D45F8C BL 0x1C16CF4
	0x01D45F90 ADRP X0, 0x23AF000
	0x01D45F94 LDR X0, [X0 + 0x518]
	0x01D45F98 BL 0x1C16CF4
	0x01D45F9C ADRP X0, 0x23AF000
	0x01D45FA0 LDR X0, [X0 + 0x520]
	0x01D45FA4 BL 0x1C16CF4
	0x01D45FA8 ADRP X0, 0x23AF000
	0x01D45FAC LDR X0, [X0 + 0x528]
	0x01D45FB0 BL 0x1C16CF4
	0x01D45FB4 ADRP X0, 0x23AF000
	0x01D45FB8 LDR X0, [X0 + 0x530]
	0x01D45FBC BL 0x1C16CF4
	0x01D45FC0 ADRP X0, 0x23AF000
	0x01D45FC4 LDR X0, [X0 + 0x538]
	0x01D45FC8 BL 0x1C16CF4
	0x01D45FCC ADRP X0, 0x23AF000
	0x01D45FD0 LDR X0, [X0 + 0x540]
	0x01D45FD4 BL 0x1C16CF4
	0x01D45FD8 ADRP X0, 0x23AF000
	0x01D45FDC LDR X0, [X0 + 0x548]
	0x01D45FE0 BL 0x1C16CF4
	0x01D45FE4 ADRP X0, 0x23AF000
	0x01D45FE8 LDR X0, [X0 + 0x458]
	0x01D45FEC BL 0x1C16CF4
	0x01D45FF0 ADRP X0, 0x23AF000
	0x01D45FF4 LDR X0, [X0 + 0x550]
	0x01D45FF8 BL 0x1C16CF4
	0x01D45FFC ADRP X0, 0x23AF000
	0x01D46000 LDR X0, [X0 + 0x558]
	0x01D46004 BL 0x1C16CF4
	0x01D46008 ADRP X0, 0x23AE000
	0x01D4600C LDR X0, [X0 + 0x560]
	0x01D46010 BL 0x1C16CF4
	0x01D46014 ADRP X0, 0x23AE000
	0x01D46018 LDR X0, [X0 + 0x88]
	0x01D4601C BL 0x1C16CF4
	0x01D46020 ADRP X0, 0x23AE000
	0x01D46024 LDR X0, [X0 + 0x488]

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+64], X29
	003 Move [X31+72], X30
	004 Move [X31+80], X28
	005 Move [X31+88], X27
	006 Move [X31+96], X26
	007 Move [X31+104], X25
	008 Move [X31+112], X24
	009 Move [X31+120], X23
	010 Move [X31+128], X22
	011 Move [X31+136], X21
	012 Move [X31+144], X20
	013 Move [X31+152], X19
	014 Move X21, 0x2694000
	015 Move W8, [X21+1887]
	016 Move X20, X1
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {51}
	022 Move X0, 0x23AF000
	023 Move X0, [X0+3584]
	024 Call 0x1C17CF4
	025 Move X0, 0x23B0000
	026 Move X0, [X0+1016]
	027 Call 0x1C17CF4
	028 Move X0, 0x23B0000
	029 Move X0, [X0+1024]
	030 Call 0x1C17CF4
	031 Move X0, 0x23AF000
	032 Move X0, [X0+3608]
	033 Call 0x1C17CF4
	034 Move X0, 0x23B0000
	035 Move X0, [X0+1032]
	036 Call 0x1C17CF4
	037 Move X0, 0x23AF000
	038 Move X0, [X0+3624]
	039 Call 0x1C17CF4
	040 Move X0, 0x23AF000
	041 Move X0, [X0+3632]
	042 Call 0x1C17CF4
	043 Move X0, 0x23AF000
	044 Move X0, [X0+3648]
	045 Call 0x1C17CF4
	046 Move X0, 0x23AF000
	047 Move X0, [X0+2304]
	048 Call 0x1C17CF4
	049 Move W8, 1
	050 Move [X21+1887], W8
	051 Move X19, [X19+24]
	052 Compare X19, 0
	053 JumpIfEqual {265}
	054 Move X10, 0x23B0000
	055 Move X8, [X19]
	056 Move X10, [X10+1016]
	057 NotImplemented "Instruction LDRH not yet implemented."
	058 Move X1, [X10]
	059 Compare X9, 0
	060 JumpIfEqual {67}
	061 Move X10, [X8+176]
	062 Add X10, X10, 8
	063 NotImplemented "Instruction LDUR not yet implemented."
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Subtract X9, X9, 1
	066 Add X10, X10, 16
	067 Move X0, X19
	068 Move W2, W31
	069 Call 0x1C5D788
	070 NotImplemented "Instruction LDRSW not yet implemented."
	071 Add X8, X8, X9
	072 Add X0, X8, 312
	073 Move X8, [X0]
	074 Move X1, [X0+8]
	075 Move X0, X19
	076 NotImplemented "Instruction BLR not yet implemented."
	077 Move [X31], X0
	078 Compare X0, 0
	079 JumpIfEqual {266}
	080 Move X28, 0x23AF000
	081 Move X24, 0x23AF000
	082 Move X28, [X28+3648]
	083 Move X24, [X24+3624]
	084 Move X22, X0
	085 Move X8, [X22]
	086 Move X10, 0x23AF000
	087 NotImplemented "Instruction LDRH not yet implemented."
	088 Move X10, [X10+3608]
	089 Move X1, [X10]
	090 Compare X9, 0
	091 JumpIfEqual {98}
	092 Move X10, [X8+176]
	093 Add X10, X10, 8
	094 NotImplemented "Instruction LDUR not yet implemented."
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Subtract X9, X9, 1
	097 Add X10, X10, 16
	098 Move X0, X22
	099 Move W2, W31
	100 Call 0x1C5D788
	101 NotImplemented "Instruction LDRSW not yet implemented."
	102 Add X8, X8, X9
	103 Add X0, X8, 312
	104 Move X8, [X0]
	105 Move X1, [X0+8]
	106 Move X0, X22
	107 NotImplemented "Instruction BLR not yet implemented."
	108 Move TEMP, X0
	109 And TEMP, TEMP, 1
	110 Compare TEMP, 1
	111 JumpIfNotEqual {212}
	112 Move X8, [X22]
	113 Move X10, 0x23B0000
	114 NotImplemented "Instruction LDRH not yet implemented."
	115 Move X10, [X10+1024]
	116 Move X1, [X10]
	117 Compare X9, 0
	118 JumpIfEqual {125}
	119 Move X10, [X8+176]
	120 Add X10, X10, 8
	121 NotImplemented "Instruction LDUR not yet implemented."
	122 NotImplemented "Instruction CMP not yet implemented."
	123 Subtract X9, X9, 1
	124 Add X10, X10, 16
	125 Move X0, X22
	126 Move W2, W31
	127 Call 0x1C5D788
	128 NotImplemented "Instruction LDRSW not yet implemented."
	129 Add X8, X8, X9
	130 Add X0, X8, 312
	131 Move X9, [X0]
	132 Move X1, [X0+8]
	133 Add X8, X31, 8
	134 Move X0, X22
	135 NotImplemented "Instruction BLR not yet implemented."
	136 Compare X20, 0
	137 JumpIfEqual {258}
	138 Move X8, [X20+192]
	139 Compare X8, 0
	140 JumpIfEqual {259}
	141 Move X0, [X8+72]
	142 Compare X0, 0
	143 JumpIfEqual {255}
	144 Move X8, 0x23B0000
	145 Move X19, X20
	146 Move X20, X24
	147 Move X27, [X31+8]
	148 Move X26, [X31+16]
	149 Move W29, [X31+33]
	150 Move W25, [X31+36]
	151 Move W24, [X31+40]
	152 Move X22, [X31+48]
	153 Move X21, [X31+56]
	154 Move X8, [X8+1032]
	155 Move X2, [X8]
	156 Move X1, X27
	157 Call StateDictionary`2<Object, Object>.GetOrAddValue, X0, X1
	158 Move X23, X0
	159 Compare X0, 0
	160 JumpIfEqual {256}
	161 Move X0, [X23+72]
	162 Compare X0, 0
	163 JumpIfEqual {254}
	164 Move X8, 0x23AF000
	165 Move X8, [X8+2304]
	166 Move X2, [X8]
	167 Move X1, X27
	168 Call StatePrimitive`1<Object>.set_value, X0, X1
	169 Move X0, [X23+80]
	170 Compare X0, 0
	171 JumpIfEqual {260}
	172 Move X8, 0x23AF000
	173 Move X8, [X8+2304]
	174 Move X2, [X8]
	175 Move X1, X26
	176 Call StatePrimitive`1<Object>.set_value, X0, X1
	177 Move X0, [X23+88]
	178 Compare X0, 0
	179 JumpIfEqual {261}
	180 Move X8, 0x23AF000
	181 Move X8, [X8+3632]
	182 Move X2, [X8]
	183 And W1, W29, 1
	184 Call 0x26528D0, X0, X1
	185 Move X0, [X23+104]
	186 Compare X0, 0
	187 JumpIfEqual {257}
	188 Move X2, [X28]
	189 Move W1, W25
	190 Call StatePrimitive`1<Int32>.set_value, X0, X1
	191 Move X0, [X23+112]
	192 Compare X0, 0
	193 JumpIfEqual {262}
	194 Move X2, [X28]
	195 Move W1, W24
	196 Call StatePrimitive`1<Int32>.set_value, X0, X1
	197 Move X0, [X23+120]
	198 Compare X0, 0
	199 JumpIfEqual {263}
	200 Move X2, [X20]
	201 Move X24, X20
	202 Move X1, X22
	203 Call StatePrimitiveSet`1<Object>.AssignValues, X0, X1
	204 Move X0, [X23+128]
	205 Compare X0, 0
	206 JumpIfEqual {264}
	207 Move X2, [X24]
	208 Move X22, [X31]
	209 Move X1, X21
	210 Call StatePrimitiveSet`1<Object>.AssignValues, X0, X1
	211 Move X20, X19
	212 Move X21, X31
	213 Compare X22, 0
	214 JumpIfEqual {238}
	215 Move X8, [X22]
	216 Move X10, 0x23AF000
	217 NotImplemented "Instruction LDRH not yet implemented."
	218 Move X10, [X10+3584]
	219 Move X1, [X10]
	220 Compare X9, 0
	221 JumpIfEqual {228}
	222 Move X10, [X8+176]
	223 Add X10, X10, 8
	224 NotImplemented "Instruction LDUR not yet implemented."
	225 NotImplemented "Instruction CMP not yet implemented."
	226 Subtract X9, X9, 1
	227 Add X10, X10, 16
	228 Move X0, X22
	229 Move W2, W31
	230 Call 0x1C5D788
	231 NotImplemented "Instruction LDRSW not yet implemented."
	232 Add X8, X8, X9
	233 Add X0, X8, 312
	234 Move X8, [X0]
	235 Move X1, [X0+8]
	236 Move X0, X22
	237 NotImplemented "Instruction BLR not yet implemented."
	238 Compare X21, 0
	239 JumpIfNotEqual {267}
	240 Move X20, [X31+144]
	241 Move X19, [X31+152]
	242 Move X22, [X31+128]
	243 Move X21, [X31+136]
	244 Move X24, [X31+112]
	245 Move X23, [X31+120]
	246 Move X26, [X31+96]
	247 Move X25, [X31+104]
	248 Move X28, [X31+80]
	249 Move X27, [X31+88]
	250 Move X29, [X31+64]
	251 Move X30, [X31+72]
	252 Add X31, X31, 160
	253 Return 
	254 Call 0x1C17F20
	255 Call 0x1C17F20
	256 Call 0x1C17F20
	257 Call 0x1C17F20
	258 Call 0x1C17F20
	259 Call 0x1C17F20
	260 Call 0x1C17F20
	261 Call 0x1C17F20
	262 Call 0x1C17F20
	263 Call 0x1C17F20
	264 Call 0x1C17F20
	265 Call 0x1C17F20
	266 Call 0x1C17F20
	267 Move X0, X21
	268 Call 0x1C17F18
	269 Move X22, [X31]
	270 Move X20, X0
	271 NotImplemented "Instruction CMP not yet implemented."
	272 Move X0, X20
	273 Call 0x3EB2AD0
	274 Move X21, [X0]
	275 Call 0x3EB2AE0
	276 Move X21, X31
	277 Move X20, X0
	278 Move X8, [X31]
	279 Compare X8, 0
	280 JumpIfEqual {305}
	281 Move X8, [X31]
	282 Move X10, 0x23AF000
	283 Move X8, [X8]
	284 NotImplemented "Instruction LDRH not yet implemented."
	285 Move X10, [X10+3584]
	286 Move X1, [X10]
	287 Compare X9, 0
	288 JumpIfEqual {295}
	289 Move X10, [X8+176]
	290 Add X10, X10, 8
	291 NotImplemented "Instruction LDUR not yet implemented."
	292 NotImplemented "Instruction CMP not yet implemented."
	293 Subtract X9, X9, 1
	294 Add X10, X10, 16
	295 Move X0, [X31]
	296 Move W2, W31
	297 Call 0x1C5D788
	298 NotImplemented "Instruction LDRSW not yet implemented."
	299 Add X8, X8, X9
	300 Add X0, X8, 312
	301 Move X8, [X0]
	302 Move X1, [X0+8]
	303 Move X0, [X31]
	304 NotImplemented "Instruction BLR not yet implemented."
	305 Compare X21, 0
	306 JumpIfNotEqual {309}
	307 Move X0, X20
	308 Call 0x1D2D690
	309 Move X0, X21
	310 Call 0x1C17F18
	311 Call 0x1991590

