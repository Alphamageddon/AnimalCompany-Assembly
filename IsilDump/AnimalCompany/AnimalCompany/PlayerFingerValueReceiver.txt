Type: AnimalCompany.PlayerFingerValueReceiver

Method: System.Void Awake()

Disassembly:
	0x01DC61A8 LDR X8, [X0]
	0x01DC61AC CMP X8, X1
	0x01DC61B0 B.NE 0x1DC6A40
	0x01DC61B4 LDR X8, [X22]
	0x01DC61B8 LDR X8, [X8 + 0xB8]
	0x01DC61BC STR X0, [X8 + 0xA8]
	0x01DC61C0 LDR X9, [X0]
	0x01DC61C4 CMP X9, X1
	0x01DC61C8 B.EQ 0x1DC61DC
	0x01DC61CC B 0x1DC6A40
	0x01DC61D0 LDR X8, [X22]
	0x01DC61D4 LDR X8, [X8 + 0xB8]
	0x01DC61D8 STR X0, [X8 + 0xA8]
	0x01DC61DC LDR X20, [X8 + 0xE8]
	0x01DC61E0 MOV X0, X1
	0x01DC61E4 BL 0x1C16F10
	0x01DC61E8 LDR X2, [X24]
	0x01DC61EC MOV X1, X19
	0x01DC61F0 MOV X3, X31
	0x01DC61F4 MOV X21, X0
	0x01DC61F8 BL 0x3314368
	0x01DC61FC MOV X0, X20
	0x01DC6200 MOV X1, X21
	0x01DC6204 MOV X2, X31
	0x01DC6208 BL 0x33C0FDC
	0x01DC620C LDR X1, [X23]
	0x01DC6210 CBZ X0, 0x1DC623C
	0x01DC6214 LDR X8, [X0]
	0x01DC6218 CMP X8, X1
	0x01DC621C B.NE 0x1DC6A40
	0x01DC6220 LDR X8, [X22]
	0x01DC6224 LDR X8, [X8 + 0xB8]
	0x01DC6228 STR X0, [X8 + 0xE8]
	0x01DC622C LDR X9, [X0]
	0x01DC6230 CMP X9, X1
	0x01DC6234 B.EQ 0x1DC6248
	0x01DC6238 B 0x1DC6A40
	0x01DC623C LDR X8, [X22]
	0x01DC6240 LDR X8, [X8 + 0xB8]
	0x01DC6244 STR X0, [X8 + 0xE8]
	0x01DC6248 LDR X20, [X8 + 0x128]
	0x01DC624C MOV X0, X1
	0x01DC6250 BL 0x1C16F10
	0x01DC6254 LDR X2, [X24]
	0x01DC6258 MOV X1, X19
	0x01DC625C MOV X3, X31
	0x01DC6260 MOV X21, X0
	0x01DC6264 BL 0x3314368
	0x01DC6268 MOV X0, X20
	0x01DC626C MOV X1, X21
	0x01DC6270 MOV X2, X31
	0x01DC6274 BL 0x33C0FDC
	0x01DC6278 LDR X1, [X23]
	0x01DC627C CBZ X0, 0x1DC62A8
	0x01DC6280 LDR X8, [X0]
	0x01DC6284 CMP X8, X1
	0x01DC6288 B.NE 0x1DC6A40
	0x01DC628C LDR X8, [X22]
	0x01DC6290 LDR X8, [X8 + 0xB8]
	0x01DC6294 STR X0, [X8 + 0x128]
	0x01DC6298 LDR X9, [X0]
	0x01DC629C CMP X9, X1
	0x01DC62A0 B.EQ 0x1DC62B4
	0x01DC62A4 B 0x1DC6A40
	0x01DC62A8 LDR X8, [X22]
	0x01DC62AC LDR X8, [X8 + 0xB8]
	0x01DC62B0 STR X0, [X8 + 0x128]
	0x01DC62B4 ADRP X24, 0x2332000
	0x01DC62B8 LDR X20, [X8 + 0xB0]
	0x01DC62BC LDR X24, [X24 + 0x1C8]
	0x01DC62C0 MOV X0, X1
	0x01DC62C4 BL 0x1C16F10
	0x01DC62C8 LDR X2, [X24]
	0x01DC62CC MOV X1, X19
	0x01DC62D0 MOV X3, X31
	0x01DC62D4 MOV X21, X0
	0x01DC62D8 BL 0x3314368
	0x01DC62DC MOV X0, X20
	0x01DC62E0 MOV X1, X21
	0x01DC62E4 MOV X2, X31
	0x01DC62E8 BL 0x33C0FDC
	0x01DC62EC LDR X1, [X23]
	0x01DC62F0 CBZ X0, 0x1DC631C
	0x01DC62F4 LDR X8, [X0]
	0x01DC62F8 CMP X8, X1
	0x01DC62FC B.NE 0x1DC6A40
	0x01DC6300 LDR X8, [X22]
	0x01DC6304 LDR X8, [X8 + 0xB8]
	0x01DC6308 STR X0, [X8 + 0xB0]
	0x01DC630C LDR X9, [X0]
	0x01DC6310 CMP X9, X1
	0x01DC6314 B.EQ 0x1DC6328
	0x01DC6318 B 0x1DC6A40
	0x01DC631C LDR X8, [X22]
	0x01DC6320 LDR X8, [X8 + 0xB8]
	0x01DC6324 STR X0, [X8 + 0xB0]
	0x01DC6328 LDR X20, [X8 + 0xF0]
	0x01DC632C MOV X0, X1
	0x01DC6330 BL 0x1C16F10
	0x01DC6334 LDR X2, [X24]
	0x01DC6338 MOV X1, X19
	0x01DC633C MOV X3, X31
	0x01DC6340 MOV X21, X0
	0x01DC6344 BL 0x3314368
	0x01DC6348 MOV X0, X20
	0x01DC634C MOV X1, X21
	0x01DC6350 MOV X2, X31
	0x01DC6354 BL 0x33C0FDC
	0x01DC6358 LDR X1, [X23]
	0x01DC635C CBZ X0, 0x1DC6388
	0x01DC6360 LDR X8, [X0]
	0x01DC6364 CMP X8, X1
	0x01DC6368 B.NE 0x1DC6A40
	0x01DC636C LDR X8, [X22]
	0x01DC6370 LDR X8, [X8 + 0xB8]
	0x01DC6374 STR X0, [X8 + 0xF0]
	0x01DC6378 LDR X9, [X0]
	0x01DC637C CMP X9, X1
	0x01DC6380 B.EQ 0x1DC6394
	0x01DC6384 B 0x1DC6A40
	0x01DC6388 LDR X8, [X22]
	0x01DC638C LDR X8, [X8 + 0xB8]
	0x01DC6390 STR X0, [X8 + 0xF0]
	0x01DC6394 LDR X20, [X8 + 0x130]
	0x01DC6398 MOV X0, X1
	0x01DC639C BL 0x1C16F10
	0x01DC63A0 LDR X2, [X24]
	0x01DC63A4 MOV X1, X19
	0x01DC63A8 MOV X3, X31
	0x01DC63AC MOV X21, X0
	0x01DC63B0 BL 0x3314368
	0x01DC63B4 MOV X0, X20
	0x01DC63B8 MOV X1, X21
	0x01DC63BC MOV X2, X31
	0x01DC63C0 BL 0x33C0FDC
	0x01DC63C4 LDR X1, [X23]
	0x01DC63C8 CBZ X0, 0x1DC63F4
	0x01DC63CC LDR X8, [X0]
	0x01DC63D0 CMP X8, X1
	0x01DC63D4 B.NE 0x1DC6A40
	0x01DC63D8 LDR X8, [X22]
	0x01DC63DC LDR X8, [X8 + 0xB8]
	0x01DC63E0 STR X0, [X8 + 0x130]
	0x01DC63E4 LDR X9, [X0]
	0x01DC63E8 CMP X9, X1
	0x01DC63EC B.EQ 0x1DC6400
	0x01DC63F0 B 0x1DC6A40
	0x01DC63F4 LDR X8, [X22]
	0x01DC63F8 LDR X8, [X8 + 0xB8]
	0x01DC63FC STR X0, [X8 + 0x130]
	0x01DC6400 ADRP X24, 0x2332000
	0x01DC6404 LDR X20, [X8 + 0xB8]
	0x01DC6408 LDR X24, [X24 + 0x1F0]
	0x01DC640C MOV X0, X1
	0x01DC6410 BL 0x1C16F10
	0x01DC6414 LDR X2, [X24]
	0x01DC6418 MOV X1, X19
	0x01DC641C MOV X3, X31
	0x01DC6420 MOV X21, X0
	0x01DC6424 BL 0x3314368
	0x01DC6428 MOV X0, X20
	0x01DC642C MOV X1, X21
	0x01DC6430 MOV X2, X31
	0x01DC6434 BL 0x33C0FDC
	0x01DC6438 LDR X1, [X23]
	0x01DC643C CBZ X0, 0x1DC6468
	0x01DC6440 LDR X8, [X0]
	0x01DC6444 CMP X8, X1
	0x01DC6448 B.NE 0x1DC6A40
	0x01DC644C LDR X8, [X22]
	0x01DC6450 LDR X8, [X8 + 0xB8]
	0x01DC6454 STR X0, [X8 + 0xB8]
	0x01DC6458 LDR X9, [X0]
	0x01DC645C CMP X9, X1
	0x01DC6460 B.EQ 0x1DC6474
	0x01DC6464 B 0x1DC6A40
	0x01DC6468 LDR X8, [X22]
	0x01DC646C LDR X8, [X8 + 0xB8]
	0x01DC6470 STR X0, [X8 + 0xB8]
	0x01DC6474 LDR X20, [X8 + 0xF8]
	0x01DC6478 MOV X0, X1
	0x01DC647C BL 0x1C16F10
	0x01DC6480 LDR X2, [X24]
	0x01DC6484 MOV X1, X19
	0x01DC6488 MOV X3, X31
	0x01DC648C MOV X21, X0
	0x01DC6490 BL 0x3314368
	0x01DC6494 MOV X0, X20
	0x01DC6498 MOV X1, X21
	0x01DC649C MOV X2, X31
	0x01DC64A0 BL 0x33C0FDC
	0x01DC64A4 LDR X1, [X23]
	0x01DC64A8 CBZ X0, 0x1DC64D4
	0x01DC64AC LDR X8, [X0]
	0x01DC64B0 CMP X8, X1
	0x01DC64B4 B.NE 0x1DC6A40
	0x01DC64B8 LDR X8, [X22]
	0x01DC64BC LDR X8, [X8 + 0xB8]
	0x01DC64C0 STR X0, [X8 + 0xF8]
	0x01DC64C4 LDR X9, [X0]
	0x01DC64C8 CMP X9, X1
	0x01DC64CC B.EQ 0x1DC64E0
	0x01DC64D0 B 0x1DC6A40
	0x01DC64D4 LDR X8, [X22]
	0x01DC64D8 LDR X8, [X8 + 0xB8]
	0x01DC64DC STR X0, [X8 + 0xF8]
	0x01DC64E0 LDR X20, [X8 + 0x138]
	0x01DC64E4 MOV X0, X1
	0x01DC64E8 BL 0x1C16F10
	0x01DC64EC LDR X2, [X24]
	0x01DC64F0 MOV X1, X19
	0x01DC64F4 MOV X3, X31
	0x01DC64F8 MOV X21, X0
	0x01DC64FC BL 0x3314368
	0x01DC6500 MOV X0, X20
	0x01DC6504 MOV X1, X21
	0x01DC6508 MOV X2, X31
	0x01DC650C BL 0x33C0FDC
	0x01DC6510 LDR X1, [X23]
	0x01DC6514 CBZ X0, 0x1DC6540
	0x01DC6518 LDR X8, [X0]
	0x01DC651C CMP X8, X1
	0x01DC6520 B.NE 0x1DC6A40
	0x01DC6524 LDR X8, [X22]
	0x01DC6528 LDR X8, [X8 + 0xB8]
	0x01DC652C STR X0, [X8 + 0x138]
	0x01DC6530 LDR X9, [X0]
	0x01DC6534 CMP X9, X1
	0x01DC6538 B.EQ 0x1DC654C
	0x01DC653C B 0x1DC6A40
	0x01DC6540 LDR X8, [X22]
	0x01DC6544 LDR X8, [X8 + 0xB8]
	0x01DC6548 STR X0, [X8 + 0x138]
	0x01DC654C ADRP X24, 0x2332000
	0x01DC6550 LDR X20, [X8 + 0xC0]
	0x01DC6554 LDR X24, [X24 + 0x1F8]
	0x01DC6558 MOV X0, X1
	0x01DC655C BL 0x1C16F10
	0x01DC6560 LDR X2, [X24]
	0x01DC6564 MOV X1, X19
	0x01DC6568 MOV X3, X31
	0x01DC656C MOV X21, X0
	0x01DC6570 BL 0x3314368
	0x01DC6574 MOV X0, X20
	0x01DC6578 MOV X1, X21
	0x01DC657C MOV X2, X31
	0x01DC6580 BL 0x33C0FDC
	0x01DC6584 LDR X1, [X23]
	0x01DC6588 CBZ X0, 0x1DC65B4
	0x01DC658C LDR X8, [X0]
	0x01DC6590 CMP X8, X1
	0x01DC6594 B.NE 0x1DC6A40
	0x01DC6598 LDR X8, [X22]
	0x01DC659C LDR X8, [X8 + 0xB8]
	0x01DC65A0 STR X0, [X8 + 0xC0]
	0x01DC65A4 LDR X9, [X0]
	0x01DC65A8 CMP X9, X1
	0x01DC65AC B.EQ 0x1DC65C0
	0x01DC65B0 B 0x1DC6A40
	0x01DC65B4 LDR X8, [X22]
	0x01DC65B8 LDR X8, [X8 + 0xB8]
	0x01DC65BC STR X0, [X8 + 0xC0]
	0x01DC65C0 LDR X20, [X8 + 0x100]
	0x01DC65C4 MOV X0, X1
	0x01DC65C8 BL 0x1C16F10
	0x01DC65CC LDR X2, [X24]
	0x01DC65D0 MOV X1, X19
	0x01DC65D4 MOV X3, X31
	0x01DC65D8 MOV X21, X0
	0x01DC65DC BL 0x3314368
	0x01DC65E0 MOV X0, X20
	0x01DC65E4 MOV X1, X21
	0x01DC65E8 MOV X2, X31
	0x01DC65EC BL 0x33C0FDC
	0x01DC65F0 LDR X1, [X23]
	0x01DC65F4 CBZ X0, 0x1DC6620
	0x01DC65F8 LDR X8, [X0]
	0x01DC65FC CMP X8, X1
	0x01DC6600 B.NE 0x1DC6A40
	0x01DC6604 LDR X8, [X22]
	0x01DC6608 LDR X8, [X8 + 0xB8]
	0x01DC660C STR X0, [X8 + 0x100]
	0x01DC6610 LDR X9, [X0]
	0x01DC6614 CMP X9, X1
	0x01DC6618 B.EQ 0x1DC662C
	0x01DC661C B 0x1DC6A40
	0x01DC6620 LDR X8, [X22]
	0x01DC6624 LDR X8, [X8 + 0xB8]
	0x01DC6628 STR X0, [X8 + 0x100]
	0x01DC662C LDR X20, [X8 + 0x140]
	0x01DC6630 MOV X0, X1
	0x01DC6634 BL 0x1C16F10
	0x01DC6638 LDR X2, [X24]
	0x01DC663C MOV X1, X19
	0x01DC6640 MOV X3, X31
	0x01DC6644 MOV X21, X0
	0x01DC6648 BL 0x3314368
	0x01DC664C MOV X0, X20
	0x01DC6650 MOV X1, X21
	0x01DC6654 MOV X2, X31
	0x01DC6658 BL 0x33C0FDC
	0x01DC665C LDR X1, [X23]
	0x01DC6660 CBZ X0, 0x1DC668C
	0x01DC6664 LDR X8, [X0]
	0x01DC6668 CMP X8, X1
	0x01DC666C B.NE 0x1DC6A40
	0x01DC6670 LDR X8, [X22]
	0x01DC6674 LDR X8, [X8 + 0xB8]
	0x01DC6678 STR X0, [X8 + 0x140]
	0x01DC667C LDR X9, [X0]
	0x01DC6680 CMP X9, X1
	0x01DC6684 B.EQ 0x1DC6698
	0x01DC6688 B 0x1DC6A40
	0x01DC668C LDR X8, [X22]
	0x01DC6690 LDR X8, [X8 + 0xB8]
	0x01DC6694 STR X0, [X8 + 0x140]
	0x01DC6698 ADRP X24, 0x2332000
	0x01DC669C LDR X20, [X8 + 0x88]
	0x01DC66A0 LDR X24, [X24 + 0x1B0]
	0x01DC66A4 MOV X0, X1
	0x01DC66A8 BL 0x1C16F10
	0x01DC66AC LDR X2, [X24]
	0x01DC66B0 MOV X1, X19
	0x01DC66B4 MOV X3, X31
	0x01DC66B8 MOV X21, X0
	0x01DC66BC BL 0x3314368
	0x01DC66C0 MOV X0, X20
	0x01DC66C4 MOV X1, X21
	0x01DC66C8 MOV X2, X31
	0x01DC66CC BL 0x33C0FDC
	0x01DC66D0 LDR X1, [X23]
	0x01DC66D4 CBZ X0, 0x1DC6700
	0x01DC66D8 LDR X8, [X0]
	0x01DC66DC CMP X8, X1
	0x01DC66E0 B.NE 0x1DC6A40
	0x01DC66E4 LDR X8, [X22]
	0x01DC66E8 LDR X8, [X8 + 0xB8]
	0x01DC66EC STR X0, [X8 + 0x88]
	0x01DC66F0 LDR X9, [X0]
	0x01DC66F4 CMP X9, X1
	0x01DC66F8 B.EQ 0x1DC670C
	0x01DC66FC B 0x1DC6A40
	0x01DC6700 LDR X8, [X22]
	0x01DC6704 LDR X8, [X8 + 0xB8]
	0x01DC6708 STR X0, [X8 + 0x88]
	0x01DC670C LDR X20, [X8 + 0xC8]
	0x01DC6710 MOV X0, X1
	0x01DC6714 BL 0x1C16F10
	0x01DC6718 LDR X2, [X24]
	0x01DC671C MOV X1, X19
	0x01DC6720 MOV X3, X31
	0x01DC6724 MOV X21, X0
	0x01DC6728 BL 0x3314368
	0x01DC672C MOV X0, X20
	0x01DC6730 MOV X1, X21
	0x01DC6734 MOV X2, X31
	0x01DC6738 BL 0x33C0FDC
	0x01DC673C LDR X1, [X23]
	0x01DC6740 CBZ X0, 0x1DC676C
	0x01DC6744 LDR X8, [X0]
	0x01DC6748 CMP X8, X1
	0x01DC674C B.NE 0x1DC6A40
	0x01DC6750 LDR X8, [X22]
	0x01DC6754 LDR X8, [X8 + 0xB8]
	0x01DC6758 STR X0, [X8 + 0xC8]
	0x01DC675C LDR X9, [X0]
	0x01DC6760 CMP X9, X1
	0x01DC6764 B.EQ 0x1DC6778
	0x01DC6768 B 0x1DC6A40
	0x01DC676C LDR X8, [X22]
	0x01DC6770 LDR X8, [X8 + 0xB8]
	0x01DC6774 STR X0, [X8 + 0xC8]
	0x01DC6778 ADRP X24, 0x2332000
	0x01DC677C LDR X20, [X8 + 0x90]
	0x01DC6780 LDR X24, [X24 + 0x1B8]
	0x01DC6784 MOV X0, X1
	0x01DC6788 BL 0x1C16F10
	0x01DC678C LDR X2, [X24]
	0x01DC6790 MOV X1, X19
	0x01DC6794 MOV X3, X31
	0x01DC6798 MOV X21, X0
	0x01DC679C BL 0x3314368
	0x01DC67A0 MOV X0, X20
	0x01DC67A4 MOV X1, X21
	0x01DC67A8 MOV X2, X31
	0x01DC67AC BL 0x33C0FDC
	0x01DC67B0 LDR X1, [X23]
	0x01DC67B4 CBZ X0, 0x1DC67E0
	0x01DC67B8 LDR X8, [X0]
	0x01DC67BC CMP X8, X1
	0x01DC67C0 B.NE 0x1DC6A40
	0x01DC67C4 LDR X8, [X22]
	0x01DC67C8 LDR X8, [X8 + 0xB8]
	0x01DC67CC STR X0, [X8 + 0x90]
	0x01DC67D0 LDR X9, [X0]
	0x01DC67D4 CMP X9, X1
	0x01DC67D8 B.EQ 0x1DC67EC
	0x01DC67DC B 0x1DC6A40
	0x01DC67E0 LDR X8, [X22]
	0x01DC67E4 LDR X8, [X8 + 0xB8]
	0x01DC67E8 STR X0, [X8 + 0x90]
	0x01DC67EC LDR X20, [X8 + 0xD0]
	0x01DC67F0 MOV X0, X1
	0x01DC67F4 BL 0x1C16F10
	0x01DC67F8 LDR X2, [X24]
	0x01DC67FC MOV X1, X19
	0x01DC6800 MOV X3, X31
	0x01DC6804 MOV X21, X0
	0x01DC6808 BL 0x3314368
	0x01DC680C MOV X0, X20
	0x01DC6810 MOV X1, X21
	0x01DC6814 MOV X2, X31
	0x01DC6818 BL 0x33C0FDC
	0x01DC681C LDR X1, [X23]
	0x01DC6820 CBZ X0, 0x1DC684C
	0x01DC6824 LDR X8, [X0]
	0x01DC6828 CMP X8, X1
	0x01DC682C B.NE 0x1DC6A40
	0x01DC6830 LDR X8, [X22]
	0x01DC6834 LDR X8, [X8 + 0xB8]
	0x01DC6838 STR X0, [X8 + 0xD0]
	0x01DC683C LDR X9, [X0]
	0x01DC6840 CMP X9, X1
	0x01DC6844 B.EQ 0x1DC6858
	0x01DC6848 B 0x1DC6A40
	0x01DC684C LDR X8, [X22]
	0x01DC6850 LDR X8, [X8 + 0xB8]
	0x01DC6854 STR X0, [X8 + 0xD0]
	0x01DC6858 ADRP X24, 0x2332000
	0x01DC685C LDR X20, [X8 + 0x98]
	0x01DC6860 LDR X24, [X24 + 0x1E0]
	0x01DC6864 MOV X0, X1
	0x01DC6868 BL 0x1C16F10
	0x01DC686C LDR X2, [X24]
	0x01DC6870 MOV X1, X19
	0x01DC6874 MOV X3, X31
	0x01DC6878 MOV X21, X0
	0x01DC687C BL 0x3314368
	0x01DC6880 MOV X0, X20
	0x01DC6884 MOV X1, X21
	0x01DC6888 MOV X2, X31
	0x01DC688C BL 0x33C0FDC
	0x01DC6890 LDR X1, [X23]
	0x01DC6894 CBZ X0, 0x1DC68C0
	0x01DC6898 LDR X8, [X0]
	0x01DC689C CMP X8, X1
	0x01DC68A0 B.NE 0x1DC6A40
	0x01DC68A4 LDR X8, [X22]
	0x01DC68A8 LDR X8, [X8 + 0xB8]
	0x01DC68AC STR X0, [X8 + 0x98]
	0x01DC68B0 LDR X9, [X0]
	0x01DC68B4 CMP X9, X1
	0x01DC68B8 B.EQ 0x1DC68CC
	0x01DC68BC B 0x1DC6A40
	0x01DC68C0 LDR X8, [X22]
	0x01DC68C4 LDR X8, [X8 + 0xB8]
	0x01DC68C8 STR X0, [X8 + 0x98]
	0x01DC68CC LDR X20, [X8 + 0xD8]
	0x01DC68D0 MOV X0, X1
	0x01DC68D4 BL 0x1C16F10
	0x01DC68D8 LDR X2, [X24]
	0x01DC68DC MOV X1, X19
	0x01DC68E0 MOV X3, X31
	0x01DC68E4 MOV X21, X0
	0x01DC68E8 BL 0x3314368
	0x01DC68EC MOV X0, X20
	0x01DC68F0 MOV X1, X21
	0x01DC68F4 MOV X2, X31
	0x01DC68F8 BL 0x33C0FDC
	0x01DC68FC LDR X1, [X23]
	0x01DC6900 CBZ X0, 0x1DC692C
	0x01DC6904 LDR X8, [X0]
	0x01DC6908 CMP X8, X1
	0x01DC690C B.NE 0x1DC6A40
	0x01DC6910 LDR X8, [X22]
	0x01DC6914 LDR X8, [X8 + 0xB8]
	0x01DC6918 STR X0, [X8 + 0xD8]
	0x01DC691C LDR X9, [X0]
	0x01DC6920 CMP X9, X1
	0x01DC6924 B.EQ 0x1DC6938
	0x01DC6928 B 0x1DC6A40
	0x01DC692C LDR X8, [X22]
	0x01DC6930 LDR X8, [X8 + 0xB8]
	0x01DC6934 STR X0, [X8 + 0xD8]
	0x01DC6938 ADRP X24, 0x2332000
	0x01DC693C LDR X20, [X8 + 0xA0]
	0x01DC6940 LDR X24, [X24 + 0x1E8]
	0x01DC6944 MOV X0, X1
	0x01DC6948 BL 0x1C16F10
	0x01DC694C LDR X2, [X24]
	0x01DC6950 MOV X1, X19
	0x01DC6954 MOV X3, X31
	0x01DC6958 MOV X21, X0
	0x01DC695C BL 0x3314368
	0x01DC6960 MOV X0, X20
	0x01DC6964 MOV X1, X21
	0x01DC6968 MOV X2, X31
	0x01DC696C BL 0x33C0FDC
	0x01DC6970 LDR X1, [X23]
	0x01DC6974 CBZ X0, 0x1DC69A0
	0x01DC6978 LDR X8, [X0]
	0x01DC697C CMP X8, X1
	0x01DC6980 B.NE 0x1DC6A40
	0x01DC6984 LDR X8, [X22]
	0x01DC6988 LDR X8, [X8 + 0xB8]
	0x01DC698C STR X0, [X8 + 0xA0]
	0x01DC6990 LDR X9, [X0]
	0x01DC6994 CMP X9, X1
	0x01DC6998 B.EQ 0x1DC69AC
	0x01DC699C B 0x1DC6A40
	0x01DC69A0 LDR X8, [X22]
	0x01DC69A4 LDR X8, [X8 + 0xB8]
	0x01DC69A8 STR X0, [X8 + 0xA0]
	0x01DC69AC LDR X20, [X8 + 0xE0]
	0x01DC69B0 MOV X0, X1
	0x01DC69B4 BL 0x1C16F10
	0x01DC69B8 LDR X2, [X24]
	0x01DC69BC MOV X1, X19
	0x01DC69C0 MOV X3, X31
	0x01DC69C4 MOV X21, X0
	0x01DC69C8 BL 0x3314368
	0x01DC69CC MOV X0, X20
	0x01DC69D0 MOV X1, X21
	0x01DC69D4 MOV X2, X31
	0x01DC69D8 BL 0x33C0FDC
	0x01DC69DC CBZ X0, 0x1DC6A0C
	0x01DC69E0 LDR X1, [X23]
	0x01DC69E4 LDR X8, [X0]
	0x01DC69E8 CMP X8, X1
	0x01DC69EC B.NE 0x1DC6A40
	0x01DC69F0 LDR X8, [X22]
	0x01DC69F4 LDR X8, [X8 + 0xB8]
	0x01DC69F8 STR X0, [X8 + 0xE0]
	0x01DC69FC LDR X8, [X0]
	0x01DC6A00 CMP X8, X1
	0x01DC6A04 B.EQ 0x1DC6A18
	0x01DC6A08 B 0x1DC6A40
	0x01DC6A0C LDR X8, [X22]
	0x01DC6A10 LDR X8, [X8 + 0xB8]
	0x01DC6A14 STR X0, [X8 + 0xE0]
	0x01DC6A18 LDP X20, X19, [X31 + 0x30]
	0x01DC6A1C LDP X22, X21, [X31 + 0x20]
	0x01DC6A20 LDP X24, X23, [X31 + 0x10]
	0x01DC6A24 LDR X30, [X31], #0x40
	0x01DC6A28 RET
	0x01DC6A2C MOV X0, X21
	0x01DC6A30 MOV X1, X20
	0x01DC6A34 BL 0x1C171E0
	0x01DC6A38 MOV X0, X20
	0x01DC6A3C MOV X1, X21
	0x01DC6A40 BL 0x1C171E0
	0x01DC6A44 STP X30, X21, [X31 - 0x20]!
	0x01DC6A48 STP X20, X19, [X31 + 0x10]
	0x01DC6A4C ADRP X20, 0x2612000
	0x01DC6A50 ADRP X21, 0x232D000
	0x01DC6A54 LDRB W8, [X20 + 0xB95]
	0x01DC6A58 LDR X21, [X21 + 0x638]
	0x01DC6A5C MOV X19, X0
	0x01DC6A60 TBNZ X8, 0x0, 0x1DC6A84
	0x01DC6A64 ADRP X0, 0x2332000
	0x01DC6A68 LDR X0, [X0 + 0x208]
	0x01DC6A6C BL 0x1C16CF4
	0x01DC6A70 ADRP X0, 0x232D000
	0x01DC6A74 LDR X0, [X0 + 0x638]
	0x01DC6A78 BL 0x1C16CF4
	0x01DC6A7C MOVZ W8, 0x1
	0x01DC6A80 STRB W8, [X20 + 0xB95]
	0x01DC6A84 LDR X0, [X21]
	0x01DC6A88 MOVZ W1, 0x6
	0x01DC6A8C BL 0x1C16D6C
	0x01DC6A90 LDR X8, [X19 + 0x20]
	0x01DC6A94 CBZ X8, 0x1DC6BF8
	0x01DC6A98 ADRP X21, 0x2332000
	0x01DC6A9C LDR X21, [X21 + 0x208]
	0x01DC6AA0 MOV X20, X0
	0x01DC6AA4 MOV X0, X8
	0x01DC6AA8 MOV W1, W31
	0x01DC6AAC LDR X2, [X21]
	0x01DC6AB0 BL 0x2A44D78
	0x01DC6AB4 CBZ X0, 0x1DC6BF8
	0x01DC6AB8 LDRB W8, [X0 + 0x11]
	0x01DC6ABC FMOV S0, 1
	0x01DC6AC0 CBNZ W8, 0x1DC6ADC
	0x01DC6AC4 LDRB W8, [X0 + 0x10]
	0x01DC6AC8 ADRP X9, 0xFFFFFFFFFED24000
	0x01DC6ACC LDR V0, [X9 + 0xBC]
	0x01DC6AD0 FMOV S1, W31
	0x01DC6AD4 CMP W8, 0x0
	0x01DC6AD8 FCSEL S0, S1, S0, EQ
	0x01DC6ADC CBZ X20, 0x1DC6BF8
	0x01DC6AE0 LDR W8, [X20 + 0x18]
	0x01DC6AE4 CBZ W8, 0x1DC6BFC
	0x01DC6AE8 STR S0, [X20 + 0x20]
	0x01DC6AEC LDR X0, [X19 + 0x20]
	0x01DC6AF0 CBZ X0, 0x1DC6BF8
	0x01DC6AF4 LDR X2, [X21]
	0x01DC6AF8 MOV W1, W31
	0x01DC6AFC BL 0x2A44D78
	0x01DC6B00 CBZ X0, 0x1DC6BF8
	0x01DC6B04 LDR W8, [X20 + 0x18]
	0x01DC6B08 CMP W8, 0x1
	0x01DC6B0C B.LS 0x1DC6BFC
	0x01DC6B10 LDR V0, [X0 + 0x14]
	0x01DC6B14 STR S0, [X20 + 0x24]
	0x01DC6B18 LDR X0, [X19 + 0x20]
	0x01DC6B1C CBZ X0, 0x1DC6BF8
	0x01DC6B20 LDR X2, [X21]
	0x01DC6B24 MOV W1, W31
	0x01DC6B28 BL 0x2A44D78
	0x01DC6B2C CBZ X0, 0x1DC6BF8
	0x01DC6B30 LDR W8, [X20 + 0x18]
	0x01DC6B34 CMP W8, 0x2
	0x01DC6B38 B.LS 0x1DC6BFC
	0x01DC6B3C LDR V0, [X0 + 0x18]
	0x01DC6B40 STR S0, [X20 + 0x28]
	0x01DC6B44 LDR X0, [X19 + 0x20]
	0x01DC6B48 CBZ X0, 0x1DC6BF8
	0x01DC6B4C LDR X2, [X21]
	0x01DC6B50 MOVZ W1, 0x1
	0x01DC6B54 BL 0x2A44D78
	0x01DC6B58 CBZ X0, 0x1DC6BF8
	0x01DC6B5C LDRB W8, [X0 + 0x11]
	0x01DC6B60 FMOV S0, 1
	0x01DC6B64 CBNZ W8, 0x1DC6B80
	0x01DC6B68 LDRB W8, [X0 + 0x10]
	0x01DC6B6C ADRP X9, 0xFFFFFFFFFED24000
	0x01DC6B70 LDR V0, [X9 + 0xBC]
	0x01DC6B74 FMOV S1, W31
	0x01DC6B78 CMP W8, 0x0
	0x01DC6B7C FCSEL S0, S1, S0, EQ
	0x01DC6B80 LDR W8, [X20 + 0x18]
	0x01DC6B84 CMP W8, 0x3
	0x01DC6B88 B.LS 0x1DC6BFC
	0x01DC6B8C STR S0, [X20 + 0x2C]
	0x01DC6B90 LDR X0, [X19 + 0x20]
	0x01DC6B94 CBZ X0, 0x1DC6BF8
	0x01DC6B98 LDR X2, [X21]
	0x01DC6B9C MOVZ W1, 0x1
	0x01DC6BA0 BL 0x2A44D78
	0x01DC6BA4 CBZ X0, 0x1DC6BF8
	0x01DC6BA8 LDR W8, [X20 + 0x18]
	0x01DC6BAC CMP W8, 0x4
	0x01DC6BB0 B.LS 0x1DC6BFC
	0x01DC6BB4 LDR V0, [X0 + 0x14]
	0x01DC6BB8 STR S0, [X20 + 0x30]
	0x01DC6BBC LDR X0, [X19 + 0x20]
	0x01DC6BC0 CBZ X0, 0x1DC6BF8
	0x01DC6BC4 LDR X2, [X21]
	0x01DC6BC8 MOVZ W1, 0x1
	0x01DC6BCC BL 0x2A44D78
	0x01DC6BD0 CBZ X0, 0x1DC6BF8
	0x01DC6BD4 LDR W8, [X20 + 0x18]
	0x01DC6BD8 CMP W8, 0x5
	0x01DC6BDC B.LS 0x1DC6BFC
	0x01DC6BE0 LDR V0, [X0 + 0x18]
	0x01DC6BE4 MOV X0, X20
	0x01DC6BE8 STR S0, [X20 + 0x34]
	0x01DC6BEC LDP X20, X19, [X31 + 0x10]
	0x01DC6BF0 LDP X30, X21, [X31], #0x20
	0x01DC6BF4 RET
	0x01DC6BF8 BL 0x1C16F20
	0x01DC6BFC BL 0x1C16F28
	0x01DC6C00 LDRB W8, [X0 + 0x11]
	0x01DC6C04 CBZ W8, 0x1DC6C10
	0x01DC6C08 FMOV S0, 1
	0x01DC6C0C RET
	0x01DC6C10 LDRB W8, [X0 + 0x10]
	0x01DC6C14 ADRP X9, 0xFFFFFFFFFED24000
	0x01DC6C18 LDR V0, [X9 + 0xBC]
	0x01DC6C1C FMOV S1, W31
	0x01DC6C20 CMP W8, 0x0
	0x01DC6C24 FCSEL S0, S1, S0, EQ
	0x01DC6C28 RET
	0x01DC6C2C STR D8, [X31 - 0x20]!
	0x01DC6C30 STR X30, [X31 + 0x8]
	0x01DC6C34 STP X20, X19, [X31 + 0x10]
	0x01DC6C38 ADRP X20, 0x2612000
	0x01DC6C3C LDRB W8, [X20 + 0xB96]
	0x01DC6C40 MOV V8.16B, V0.16B
	0x01DC6C44 MOV X19, X0
	0x01DC6C48 TBNZ X8, 0x0, 0x1DC6C60
	0x01DC6C4C ADRP X0, 0x2332000
	0x01DC6C50 LDR X0, [X0 + 0x208]
	0x01DC6C54 BL 0x1C16CF4
	0x01DC6C58 MOVZ W8, 0x1
	0x01DC6C5C STRB W8, [X20 + 0xB96]
	0x01DC6C60 LDR X0, [X19 + 0x20]
	0x01DC6C64 CBZ X0, 0x1DC6CC8
	0x01DC6C68 ADRP X8, 0x2332000
	0x01DC6C6C LDR X8, [X8 + 0x208]
	0x01DC6C70 MOV W1, W31
	0x01DC6C74 LDR X2, [X8]
	0x01DC6C78 BL 0x2A44D78
	0x01DC6C7C CBZ X0, 0x1DC6CC8
	0x01DC6C80 STR S8, [X0 + 0x14]
	0x01DC6C84 LDR X20, [X19 + 0x28]
	0x01DC6C88 CBZ X20, 0x1DC6CB8
	0x01DC6C8C MOV X0, X19
	0x01DC6C90 BL 0x1DC6A44
	0x01DC6C94 LDR X8, [X20 + 0x40]
	0x01DC6C98 LDR X3, [X20 + 0x18]
	0x01DC6C9C LDR X2, [X20 + 0x28]
	0x01DC6CA0 LDP X20, X19, [X31 + 0x10]
	0x01DC6CA4 LDR X30, [X31 + 0x8]
	0x01DC6CA8 MOV X1, X0
	0x01DC6CAC MOV X0, X8
	0x01DC6CB0 LDR V8, [X31], #0x20
	0x01DC6CB4 BR X3
	0x01DC6CB8 LDP X20, X19, [X31 + 0x10]
	0x01DC6CBC LDR X30, [X31 + 0x8]
	0x01DC6CC0 LDR V8, [X31], #0x20
	0x01DC6CC4 RET
	0x01DC6CC8 BL 0x1C16F20
	0x01DC6CCC STR D8, [X31 - 0x20]!
	0x01DC6CD0 STR X30, [X31 + 0x8]
	0x01DC6CD4 STP X20, X19, [X31 + 0x10]
	0x01DC6CD8 ADRP X20, 0x2612000
	0x01DC6CDC LDRB W8, [X20 + 0xB97]
	0x01DC6CE0 MOV V8.16B, V0.16B
	0x01DC6CE4 MOV X19, X0
	0x01DC6CE8 TBNZ X8, 0x0, 0x1DC6D00
	0x01DC6CEC ADRP X0, 0x2332000
	0x01DC6CF0 LDR X0, [X0 + 0x208]
	0x01DC6CF4 BL 0x1C16CF4
	0x01DC6CF8 MOVZ W8, 0x1
	0x01DC6CFC STRB W8, [X20 + 0xB97]
	0x01DC6D00 LDR X0, [X19 + 0x20]
	0x01DC6D04 CBZ X0, 0x1DC6D68
	0x01DC6D08 ADRP X8, 0x2332000
	0x01DC6D0C LDR X8, [X8 + 0x208]
	0x01DC6D10 MOV W1, W31
	0x01DC6D14 LDR X2, [X8]
	0x01DC6D18 BL 0x2A44D78
	0x01DC6D1C CBZ X0, 0x1DC6D68
	0x01DC6D20 STR S8, [X0 + 0x18]
	0x01DC6D24 LDR X20, [X19 + 0x28]
	0x01DC6D28 CBZ X20, 0x1DC6D58
	0x01DC6D2C MOV X0, X19
	0x01DC6D30 BL 0x1DC6A44
	0x01DC6D34 LDR X8, [X20 + 0x40]
	0x01DC6D38 LDR X3, [X20 + 0x18]
	0x01DC6D3C LDR X2, [X20 + 0x28]
	0x01DC6D40 LDP X20, X19, [X31 + 0x10]
	0x01DC6D44 LDR X30, [X31 + 0x8]
	0x01DC6D48 MOV X1, X0
	0x01DC6D4C MOV X0, X8
	0x01DC6D50 LDR V8, [X31], #0x20
	0x01DC6D54 BR X3
	0x01DC6D58 LDP X20, X19, [X31 + 0x10]
	0x01DC6D5C LDR X30, [X31 + 0x8]
	0x01DC6D60 LDR V8, [X31], #0x20
	0x01DC6D64 RET
	0x01DC6D68 BL 0x1C16F20
	0x01DC6D6C STR D8, [X31 - 0x20]!
	0x01DC6D70 STR X30, [X31 + 0x8]
	0x01DC6D74 STP X20, X19, [X31 + 0x10]
	0x01DC6D78 ADRP X20, 0x2612000
	0x01DC6D7C LDRB W8, [X20 + 0xB98]
	0x01DC6D80 MOV V8.16B, V0.16B
	0x01DC6D84 MOV X19, X0
	0x01DC6D88 TBNZ X8, 0x0, 0x1DC6DA0
	0x01DC6D8C ADRP X0, 0x2332000
	0x01DC6D90 LDR X0, [X0 + 0x208]
	0x01DC6D94 BL 0x1C16CF4
	0x01DC6D98 MOVZ W8, 0x1
	0x01DC6D9C STRB W8, [X20 + 0xB98]
	0x01DC6DA0 LDR X0, [X19 + 0x20]
	0x01DC6DA4 CBZ X0, 0x1DC6E08
	0x01DC6DA8 ADRP X8, 0x2332000
	0x01DC6DAC LDR X8, [X8 + 0x208]
	0x01DC6DB0 MOVZ W1, 0x1
	0x01DC6DB4 LDR X2, [X8]
	0x01DC6DB8 BL 0x2A44D78
	0x01DC6DBC CBZ X0, 0x1DC6E08
	0x01DC6DC0 STR S8, [X0 + 0x14]
	0x01DC6DC4 LDR X20, [X19 + 0x28]
	0x01DC6DC8 CBZ X20, 0x1DC6DF8
	0x01DC6DCC MOV X0, X19
	0x01DC6DD0 BL 0x1DC6A44
	0x01DC6DD4 LDR X8, [X20 + 0x40]
	0x01DC6DD8 LDR X3, [X20 + 0x18]
	0x01DC6DDC LDR X2, [X20 + 0x28]
	0x01DC6DE0 LDP X20, X19, [X31 + 0x10]
	0x01DC6DE4 LDR X30, [X31 + 0x8]
	0x01DC6DE8 MOV X1, X0
	0x01DC6DEC MOV X0, X8
	0x01DC6DF0 LDR V8, [X31], #0x20
	0x01DC6DF4 BR X3
	0x01DC6DF8 LDP X20, X19, [X31 + 0x10]
	0x01DC6DFC LDR X30, [X31 + 0x8]
	0x01DC6E00 LDR V8, [X31], #0x20
	0x01DC6E04 RET
	0x01DC6E08 BL 0x1C16F20
	0x01DC6E0C STR D8, [X31 - 0x20]!
	0x01DC6E10 STR X30, [X31 + 0x8]
	0x01DC6E14 STP X20, X19, [X31 + 0x10]
	0x01DC6E18 ADRP X20, 0x2612000
	0x01DC6E1C LDRB W8, [X20 + 0xB99]
	0x01DC6E20 MOV V8.16B, V0.16B
	0x01DC6E24 MOV X19, X0
	0x01DC6E28 TBNZ X8, 0x0, 0x1DC6E40
	0x01DC6E2C ADRP X0, 0x2332000
	0x01DC6E30 LDR X0, [X0 + 0x208]
	0x01DC6E34 BL 0x1C16CF4

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x2613000
	009 Move X22, 0x2333000
	010 Move W8, [X20+2963]
	011 Move X22, [X22+408]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {70}
	017 Move X0, 0x2330000
	018 Move X0, [X0+1456]
	019 Call 0x1C17CF4
	020 Move X0, 0x232F000
	021 Move X0, [X0+3696]
	022 Call 0x1C17CF4
	023 Move X0, 0x2333000
	024 Move X0, [X0+416]
	025 Call 0x1C17CF4
	026 Move X0, 0x2333000
	027 Move X0, [X0+408]
	028 Call 0x1C17CF4
	029 Move X0, 0x2333000
	030 Move X0, [X0+424]
	031 Call 0x1C17CF4
	032 Move X0, 0x2333000
	033 Move X0, [X0+432]
	034 Call 0x1C17CF4
	035 Move X0, 0x2333000
	036 Move X0, [X0+440]
	037 Call 0x1C17CF4
	038 Move X0, 0x2333000
	039 Move X0, [X0+448]
	040 Call 0x1C17CF4
	041 Move X0, 0x2333000
	042 Move X0, [X0+456]
	043 Call 0x1C17CF4
	044 Move X0, 0x2333000
	045 Move X0, [X0+464]
	046 Call 0x1C17CF4
	047 Move X0, 0x2333000
	048 Move X0, [X0+472]
	049 Call 0x1C17CF4
	050 Move X0, 0x2333000
	051 Move X0, [X0+480]
	052 Call 0x1C17CF4
	053 Move X0, 0x2333000
	054 Move X0, [X0+488]
	055 Call 0x1C17CF4
	056 Move X0, 0x2333000
	057 Move X0, [X0+496]
	058 Call 0x1C17CF4
	059 Move X0, 0x2333000
	060 Move X0, [X0+504]
	061 Call 0x1C17CF4
	062 Move X0, 0x2333000
	063 Move X0, [X0+512]
	064 Call 0x1C17CF4
	065 Move X0, 0x2331000
	066 Move X0, [X0+3480]
	067 Call 0x1C17CF4
	068 Move W8, 1
	069 Move [X20+2963], W8
	070 Move X0, [X22]
	071 Move X20, [X19+32]
	072 Call 0x1C17F10
	073 Move X1, X31
	074 Move X21, X0
	075 Call Object..ctor, X0
	076 Compare X20, 0
	077 JumpIfEqual {780}
	078 Move X23, 0x2333000
	079 Move X23, [X23+416]
	080 Move X0, X20
	081 Move W1, W31
	082 Move X2, X21
	083 Move X3, [X23]
	084 Call Dictionary`2<Int32Enum, Object>.Add, X0, X1, X2
	085 Move X0, [X22]
	086 Move X20, [X19+32]
	087 Call 0x1C17F10
	088 Move X1, X31
	089 Move X21, X0
	090 Call Object..ctor, X0
	091 Compare X20, 0
	092 JumpIfEqual {780}
	093 Move X3, [X23]
	094 Move X22, 0x2331000
	095 Move X23, 0x2330000
	096 Move X24, 0x2333000
	097 Move X22, [X22+3480]
	098 Move X23, [X23+1456]
	099 Move X24, [X24+464]
	100 Move W1, 1
	101 Move X0, X20
	102 Move X2, X21
	103 Call Dictionary`2<Int32Enum, Object>.Add, X0, X1, X2
	104 Move X8, [X22]
	105 Move X0, [X23]
	106 Move X8, [X8+184]
	107 Move X20, [X8+8]
	108 Call 0x1C17F10
	109 Move X2, [X24]
	110 Move X1, X19
	111 Move X3, X31
	112 Move X21, X0
	113 Call Action`1<Single>..ctor, X0, X1, X2
	114 Move X0, X20
	115 Move X1, X21
	116 Move X2, X31
	117 Call Delegate.Combine, X0, X1
	118 Move X20, [X23]
	119 Compare X0, 0
	120 JumpIfEqual {138}
	121 Move X1, X20
	122 Move X21, X0
	123 Call 0x1C17E00
	124 Compare X0, 0
	125 JumpIfEqual {777}
	126 Move X8, [X22]
	127 Move X8, [X8+184]
	128 Move [X8+8], X0
	129 Move X20, [X23]
	130 Move X0, X21
	131 Move X1, X20
	132 Call 0x1C17E00
	133 Compare X0, 0
	134 JumpIfEqual {777}
	135 Move X8, [X22]
	136 Move X20, [X23]
	137 Move X8, [X8+184]
	138 Move X8, [X22]
	139 Move X8, [X8+184]
	140 Move [X8+8], X31
	141 Move X24, 0x2333000
	142 Move X21, [X8+24]
	143 Move X24, [X24+424]
	144 Move X0, X20
	145 Call 0x1C17F10
	146 Move X2, [X24]
	147 Move X1, X19
	148 Move X3, X31
	149 Move X20, X0
	150 Call Action`1<Single>..ctor, X0, X1, X2
	151 Move X0, X21
	152 Move X1, X20
	153 Move X2, X31
	154 Call Delegate.Combine, X0, X1
	155 Move X20, [X23]
	156 Compare X0, 0
	157 JumpIfEqual {175}
	158 Move X1, X20
	159 Move X21, X0
	160 Call 0x1C17E00
	161 Compare X0, 0
	162 JumpIfEqual {777}
	163 Move X8, [X22]
	164 Move X8, [X8+184]
	165 Move [X8+24], X0
	166 Move X20, [X23]
	167 Move X0, X21
	168 Move X1, X20
	169 Call 0x1C17E00
	170 Compare X0, 0
	171 JumpIfEqual {777}
	172 Move X8, [X22]
	173 Move X20, [X23]
	174 Move X8, [X8+184]
	175 Move X8, [X22]
	176 Move X8, [X8+184]
	177 Move [X8+24], X31
	178 Move X24, 0x2333000
	179 Move X21, [X8+16]
	180 Move X24, [X24+512]
	181 Move X0, X20
	182 Call 0x1C17F10
	183 Move X2, [X24]
	184 Move X1, X19
	185 Move X3, X31
	186 Move X20, X0
	187 Call Action`1<Single>..ctor, X0, X1, X2
	188 Move X0, X21
	189 Move X1, X20
	190 Move X2, X31
	191 Call Delegate.Combine, X0, X1
	192 Move X20, [X23]
	193 Compare X0, 0
	194 JumpIfEqual {212}
	195 Move X1, X20
	196 Move X21, X0
	197 Call 0x1C17E00
	198 Compare X0, 0
	199 JumpIfEqual {777}
	200 Move X8, [X22]
	201 Move X8, [X8+184]
	202 Move [X8+16], X0
	203 Move X20, [X23]
	204 Move X0, X21
	205 Move X1, X20
	206 Call 0x1C17E00
	207 Compare X0, 0
	208 JumpIfEqual {777}
	209 Move X8, [X22]
	210 Move X20, [X23]
	211 Move X8, [X8+184]
	212 Move X8, [X22]
	213 Move X8, [X8+184]
	214 Move [X8+16], X31
	215 Move X24, 0x2333000
	216 Move X21, [X8+32]
	217 Move X24, [X24+472]
	218 Move X0, X20
	219 Call 0x1C17F10
	220 Move X2, [X24]
	221 Move X1, X19
	222 Move X3, X31
	223 Move X20, X0
	224 Call Action`1<Single>..ctor, X0, X1, X2
	225 Move X0, X21
	226 Move X1, X20
	227 Move X2, X31
	228 Call Delegate.Combine, X0, X1
	229 Compare X0, 0
	230 JumpIfEqual {248}
	231 Move X21, [X23]
	232 Move X20, X0
	233 Move X1, X21
	234 Call 0x1C17E00
	235 Compare X0, 0
	236 JumpIfEqual {781}
	237 Move X8, [X22]
	238 Move X8, [X8+184]
	239 Move [X8+32], X0
	240 Move X21, [X23]
	241 Move X0, X20
	242 Move X1, X21
	243 Call 0x1C17E00
	244 Compare X0, 0
	245 JumpIfEqual {781}
	246 Move X8, [X22]
	247 Move X8, [X8+184]
	248 Move X8, [X22]
	249 Move X8, [X8+184]
	250 Move [X8+32], X31
	251 Move X23, 0x232F000
	252 Move X23, [X23+3696]
	253 Move X24, 0x2333000
	254 Move X20, [X8+168]
	255 Move X0, [X23]
	256 Move X24, [X24+448]
	257 Call 0x1C17F10
	258 Move X2, [X24]
	259 Move X1, X19
	260 Move X3, X31
	261 Move X21, X0
	262 Call Action..ctor, X0, X1, X2
	263 Move X0, X20
	264 Move X1, X21
	265 Move X2, X31
	266 Call Delegate.Combine, X0, X1
	267 Move X1, [X23]
	268 Compare X0, 0
	269 JumpIfEqual {277}
	270 Move X8, [X0]
	271 NotImplemented "Instruction CMP not yet implemented."
	272 Move X8, [X22]
	273 Move X8, [X8+184]
	274 Move [X8+168], X0
	275 Move X9, [X0]
	276 NotImplemented "Instruction CMP not yet implemented."
	277 Move X8, [X22]
	278 Move X8, [X8+184]
	279 Move [X8+168], X0
	280 Move X20, [X8+232]
	281 Move X0, X1
	282 Call 0x1C17F10
	283 Move X2, [X24]
	284 Move X1, X19
	285 Move X3, X31
	286 Move X21, X0
	287 Call Action..ctor, X0, X1, X2
	288 Move X0, X20
	289 Move X1, X21
	290 Move X2, X31
	291 Call Delegate.Combine, X0, X1
	292 Move X1, [X23]
	293 Compare X0, 0
	294 JumpIfEqual {302}
	295 Move X8, [X0]
	296 NotImplemented "Instruction CMP not yet implemented."
	297 Move X8, [X22]
	298 Move X8, [X8+184]
	299 Move [X8+232], X0
	300 Move X9, [X0]
	301 NotImplemented "Instruction CMP not yet implemented."
	302 Move X8, [X22]
	303 Move X8, [X8+184]
	304 Move [X8+232], X0
	305 Move X20, [X8+296]
	306 Move X0, X1
	307 Call 0x1C17F10
	308 Move X2, [X24]
	309 Move X1, X19
	310 Move X3, X31
	311 Move X21, X0
	312 Call Action..ctor, X0, X1, X2
	313 Move X0, X20
	314 Move X1, X21
	315 Move X2, X31
	316 Call Delegate.Combine, X0, X1
	317 Move X1, [X23]
	318 Compare X0, 0
	319 JumpIfEqual {327}
	320 Move X8, [X0]
	321 NotImplemented "Instruction CMP not yet implemented."
	322 Move X8, [X22]
	323 Move X8, [X8+184]
	324 Move [X8+296], X0
	325 Move X9, [X0]
	326 NotImplemented "Instruction CMP not yet implemented."
	327 Move X8, [X22]
	328 Move X8, [X8+184]
	329 Move [X8+296], X0
	330 Move X24, 0x2333000
	331 Move X20, [X8+176]
	332 Move X24, [X24+456]
	333 Move X0, X1
	334 Call 0x1C17F10
	335 Move X2, [X24]
	336 Move X1, X19
	337 Move X3, X31
	338 Move X21, X0
	339 Call Action..ctor, X0, X1, X2
	340 Move X0, X20
	341 Move X1, X21
	342 Move X2, X31
	343 Call Delegate.Combine, X0, X1
	344 Move X1, [X23]
	345 Compare X0, 0
	346 JumpIfEqual {354}
	347 Move X8, [X0]
	348 NotImplemented "Instruction CMP not yet implemented."
	349 Move X8, [X22]
	350 Move X8, [X8+184]
	351 Move [X8+176], X0
	352 Move X9, [X0]
	353 NotImplemented "Instruction CMP not yet implemented."
	354 Move X8, [X22]
	355 Move X8, [X8+184]
	356 Move [X8+176], X0
	357 Move X20, [X8+240]
	358 Move X0, X1
	359 Call 0x1C17F10
	360 Move X2, [X24]
	361 Move X1, X19
	362 Move X3, X31
	363 Move X21, X0
	364 Call Action..ctor, X0, X1, X2
	365 Move X0, X20
	366 Move X1, X21
	367 Move X2, X31
	368 Call Delegate.Combine, X0, X1
	369 Move X1, [X23]
	370 Compare X0, 0
	371 JumpIfEqual {379}
	372 Move X8, [X0]
	373 NotImplemented "Instruction CMP not yet implemented."
	374 Move X8, [X22]
	375 Move X8, [X8+184]
	376 Move [X8+240], X0
	377 Move X9, [X0]
	378 NotImplemented "Instruction CMP not yet implemented."
	379 Move X8, [X22]
	380 Move X8, [X8+184]
	381 Move [X8+240], X0
	382 Move X20, [X8+304]
	383 Move X0, X1
	384 Call 0x1C17F10
	385 Move X2, [X24]
	386 Move X1, X19
	387 Move X3, X31
	388 Move X21, X0
	389 Call Action..ctor, X0, X1, X2
	390 Move X0, X20
	391 Move X1, X21
	392 Move X2, X31
	393 Call Delegate.Combine, X0, X1
	394 Move X1, [X23]
	395 Compare X0, 0
	396 JumpIfEqual {404}
	397 Move X8, [X0]
	398 NotImplemented "Instruction CMP not yet implemented."
	399 Move X8, [X22]
	400 Move X8, [X8+184]
	401 Move [X8+304], X0
	402 Move X9, [X0]
	403 NotImplemented "Instruction CMP not yet implemented."
	404 Move X8, [X22]
	405 Move X8, [X8+184]
	406 Move [X8+304], X0
	407 Move X24, 0x2333000
	408 Move X20, [X8+184]
	409 Move X24, [X24+496]
	410 Move X0, X1
	411 Call 0x1C17F10
	412 Move X2, [X24]
	413 Move X1, X19
	414 Move X3, X31
	415 Move X21, X0
	416 Call Action..ctor, X0, X1, X2
	417 Move X0, X20
	418 Move X1, X21
	419 Move X2, X31
	420 Call Delegate.Combine, X0, X1
	421 Move X1, [X23]
	422 Compare X0, 0
	423 JumpIfEqual {431}
	424 Move X8, [X0]
	425 NotImplemented "Instruction CMP not yet implemented."
	426 Move X8, [X22]
	427 Move X8, [X8+184]
	428 Move [X8+184], X0
	429 Move X9, [X0]
	430 NotImplemented "Instruction CMP not yet implemented."
	431 Move X8, [X22]
	432 Move X8, [X8+184]
	433 Move [X8+184], X0
	434 Move X20, [X8+248]
	435 Move X0, X1
	436 Call 0x1C17F10
	437 Move X2, [X24]
	438 Move X1, X19
	439 Move X3, X31
	440 Move X21, X0
	441 Call Action..ctor, X0, X1, X2
	442 Move X0, X20
	443 Move X1, X21
	444 Move X2, X31
	445 Call Delegate.Combine, X0, X1
	446 Move X1, [X23]
	447 Compare X0, 0
	448 JumpIfEqual {456}
	449 Move X8, [X0]
	450 NotImplemented "Instruction CMP not yet implemented."
	451 Move X8, [X22]
	452 Move X8, [X8+184]
	453 Move [X8+248], X0
	454 Move X9, [X0]
	455 NotImplemented "Instruction CMP not yet implemented."
	456 Move X8, [X22]
	457 Move X8, [X8+184]
	458 Move [X8+248], X0
	459 Move X20, [X8+312]
	460 Move X0, X1
	461 Call 0x1C17F10
	462 Move X2, [X24]
	463 Move X1, X19
	464 Move X3, X31
	465 Move X21, X0
	466 Call Action..ctor, X0, X1, X2
	467 Move X0, X20
	468 Move X1, X21
	469 Move X2, X31
	470 Call Delegate.Combine, X0, X1
	471 Move X1, [X23]
	472 Compare X0, 0
	473 JumpIfEqual {481}
	474 Move X8, [X0]
	475 NotImplemented "Instruction CMP not yet implemented."
	476 Move X8, [X22]
	477 Move X8, [X8+184]
	478 Move [X8+312], X0
	479 Move X9, [X0]
	480 NotImplemented "Instruction CMP not yet implemented."
	481 Move X8, [X22]
	482 Move X8, [X8+184]
	483 Move [X8+312], X0
	484 Move X24, 0x2333000
	485 Move X20, [X8+192]
	486 Move X24, [X24+504]
	487 Move X0, X1
	488 Call 0x1C17F10
	489 Move X2, [X24]
	490 Move X1, X19
	491 Move X3, X31
	492 Move X21, X0
	493 Call Action..ctor, X0, X1, X2
	494 Move X0, X20
	495 Move X1, X21
	496 Move X2, X31
	497 Call Delegate.Combine, X0, X1
	498 Move X1, [X23]
	499 Compare X0, 0
	500 JumpIfEqual {508}
	501 Move X8, [X0]
	502 NotImplemented "Instruction CMP not yet implemented."
	503 Move X8, [X22]
	504 Move X8, [X8+184]
	505 Move [X8+192], X0
	506 Move X9, [X0]
	507 NotImplemented "Instruction CMP not yet implemented."
	508 Move X8, [X22]
	509 Move X8, [X8+184]
	510 Move [X8+192], X0
	511 Move X20, [X8+256]
	512 Move X0, X1
	513 Call 0x1C17F10
	514 Move X2, [X24]
	515 Move X1, X19
	516 Move X3, X31
	517 Move X21, X0
	518 Call Action..ctor, X0, X1, X2
	519 Move X0, X20
	520 Move X1, X21
	521 Move X2, X31
	522 Call Delegate.Combine, X0, X1
	523 Move X1, [X23]
	524 Compare X0, 0
	525 JumpIfEqual {533}
	526 Move X8, [X0]
	527 NotImplemented "Instruction CMP not yet implemented."
	528 Move X8, [X22]
	529 Move X8, [X8+184]
	530 Move [X8+256], X0
	531 Move X9, [X0]
	532 NotImplemented "Instruction CMP not yet implemented."
	533 Move X8, [X22]
	534 Move X8, [X8+184]
	535 Move [X8+256], X0
	536 Move X20, [X8+320]
	537 Move X0, X1
	538 Call 0x1C17F10
	539 Move X2, [X24]
	540 Move X1, X19
	541 Move X3, X31
	542 Move X21, X0
	543 Call Action..ctor, X0, X1, X2
	544 Move X0, X20
	545 Move X1, X21
	546 Move X2, X31
	547 Call Delegate.Combine, X0, X1
	548 Move X1, [X23]
	549 Compare X0, 0
	550 JumpIfEqual {558}
	551 Move X8, [X0]
	552 NotImplemented "Instruction CMP not yet implemented."
	553 Move X8, [X22]
	554 Move X8, [X8+184]
	555 Move [X8+320], X0
	556 Move X9, [X0]
	557 NotImplemented "Instruction CMP not yet implemented."
	558 Move X8, [X22]
	559 Move X8, [X8+184]
	560 Move [X8+320], X0
	561 Move X24, 0x2333000
	562 Move X20, [X8+136]
	563 Move X24, [X24+432]
	564 Move X0, X1
	565 Call 0x1C17F10
	566 Move X2, [X24]
	567 Move X1, X19
	568 Move X3, X31
	569 Move X21, X0
	570 Call Action..ctor, X0, X1, X2
	571 Move X0, X20
	572 Move X1, X21
	573 Move X2, X31
	574 Call Delegate.Combine, X0, X1
	575 Move X1, [X23]
	576 Compare X0, 0
	577 JumpIfEqual {585}
	578 Move X8, [X0]
	579 NotImplemented "Instruction CMP not yet implemented."
	580 Move X8, [X22]
	581 Move X8, [X8+184]
	582 Move [X8+136], X0
	583 Move X9, [X0]
	584 NotImplemented "Instruction CMP not yet implemented."
	585 Move X8, [X22]
	586 Move X8, [X8+184]
	587 Move [X8+136], X0
	588 Move X20, [X8+200]
	589 Move X0, X1
	590 Call 0x1C17F10
	591 Move X2, [X24]
	592 Move X1, X19
	593 Move X3, X31
	594 Move X21, X0
	595 Call Action..ctor, X0, X1, X2
	596 Move X0, X20
	597 Move X1, X21
	598 Move X2, X31
	599 Call Delegate.Combine, X0, X1
	600 Move X1, [X23]
	601 Compare X0, 0
	602 JumpIfEqual {610}
	603 Move X8, [X0]
	604 NotImplemented "Instruction CMP not yet implemented."
	605 Move X8, [X22]
	606 Move X8, [X8+184]
	607 Move [X8+200], X0
	608 Move X9, [X0]
	609 NotImplemented "Instruction CMP not yet implemented."
	610 Move X8, [X22]
	611 Move X8, [X8+184]
	612 Move [X8+200], X0
	613 Move X24, 0x2333000
	614 Move X20, [X8+144]
	615 Move X24, [X24+440]
	616 Move X0, X1
	617 Call 0x1C17F10
	618 Move X2, [X24]
	619 Move X1, X19
	620 Move X3, X31
	621 Move X21, X0
	622 Call Action..ctor, X0, X1, X2
	623 Move X0, X20
	624 Move X1, X21
	625 Move X2, X31
	626 Call Delegate.Combine, X0, X1
	627 Move X1, [X23]
	628 Compare X0, 0
	629 JumpIfEqual {637}
	630 Move X8, [X0]
	631 NotImplemented "Instruction CMP not yet implemented."
	632 Move X8, [X22]
	633 Move X8, [X8+184]
	634 Move [X8+144], X0
	635 Move X9, [X0]
	636 NotImplemented "Instruction CMP not yet implemented."
	637 Move X8, [X22]
	638 Move X8, [X8+184]
	639 Move [X8+144], X0
	640 Move X20, [X8+208]
	641 Move X0, X1
	642 Call 0x1C17F10
	643 Move X2, [X24]
	644 Move X1, X19
	645 Move X3, X31
	646 Move X21, X0
	647 Call Action..ctor, X0, X1, X2
	648 Move X0, X20
	649 Move X1, X21
	650 Move X2, X31
	651 Call Delegate.Combine, X0, X1
	652 Move X1, [X23]
	653 Compare X0, 0
	654 JumpIfEqual {662}
	655 Move X8, [X0]
	656 NotImplemented "Instruction CMP not yet implemented."
	657 Move X8, [X22]
	658 Move X8, [X8+184]
	659 Move [X8+208], X0
	660 Move X9, [X0]
	661 NotImplemented "Instruction CMP not yet implemented."
	662 Move X8, [X22]
	663 Move X8, [X8+184]
	664 Move [X8+208], X0
	665 Move X24, 0x2333000
	666 Move X20, [X8+152]
	667 Move X24, [X24+480]
	668 Move X0, X1
	669 Call 0x1C17F10
	670 Move X2, [X24]
	671 Move X1, X19
	672 Move X3, X31
	673 Move X21, X0
	674 Call Action..ctor, X0, X1, X2
	675 Move X0, X20
	676 Move X1, X21
	677 Move X2, X31
	678 Call Delegate.Combine, X0, X1
	679 Move X1, [X23]
	680 Compare X0, 0
	681 JumpIfEqual {689}
	682 Move X8, [X0]
	683 NotImplemented "Instruction CMP not yet implemented."
	684 Move X8, [X22]
	685 Move X8, [X8+184]
	686 Move [X8+152], X0
	687 Move X9, [X0]
	688 NotImplemented "Instruction CMP not yet implemented."
	689 Move X8, [X22]
	690 Move X8, [X8+184]
	691 Move [X8+152], X0
	692 Move X20, [X8+216]
	693 Move X0, X1
	694 Call 0x1C17F10
	695 Move X2, [X24]
	696 Move X1, X19
	697 Move X3, X31
	698 Move X21, X0
	699 Call Action..ctor, X0, X1, X2
	700 Move X0, X20
	701 Move X1, X21
	702 Move X2, X31
	703 Call Delegate.Combine, X0, X1
	704 Move X1, [X23]
	705 Compare X0, 0
	706 JumpIfEqual {714}
	707 Move X8, [X0]
	708 NotImplemented "Instruction CMP not yet implemented."
	709 Move X8, [X22]
	710 Move X8, [X8+184]
	711 Move [X8+216], X0
	712 Move X9, [X0]
	713 NotImplemented "Instruction CMP not yet implemented."
	714 Move X8, [X22]
	715 Move X8, [X8+184]
	716 Move [X8+216], X0
	717 Move X24, 0x2333000
	718 Move X20, [X8+160]
	719 Move X24, [X24+488]
	720 Move X0, X1
	721 Call 0x1C17F10
	722 Move X2, [X24]
	723 Move X1, X19
	724 Move X3, X31
	725 Move X21, X0
	726 Call Action..ctor, X0, X1, X2
	727 Move X0, X20
	728 Move X1, X21
	729 Move X2, X31
	730 Call Delegate.Combine, X0, X1
	731 Move X1, [X23]
	732 Compare X0, 0
	733 JumpIfEqual {741}
	734 Move X8, [X0]
	735 NotImplemented "Instruction CMP not yet implemented."
	736 Move X8, [X22]
	737 Move X8, [X8+184]
	738 Move [X8+160], X0
	739 Move X9, [X0]
	740 NotImplemented "Instruction CMP not yet implemented."
	741 Move X8, [X22]
	742 Move X8, [X8+184]
	743 Move [X8+160], X0
	744 Move X20, [X8+224]
	745 Move X0, X1
	746 Call 0x1C17F10
	747 Move X2, [X24]
	748 Move X1, X19
	749 Move X3, X31
	750 Move X21, X0
	751 Call Action..ctor, X0, X1, X2
	752 Move X0, X20
	753 Move X1, X21
	754 Move X2, X31
	755 Call Delegate.Combine, X0, X1
	756 Compare X0, 0
	757 JumpIfEqual {766}
	758 Move X1, [X23]
	759 Move X8, [X0]
	760 NotImplemented "Instruction CMP not yet implemented."
	761 Move X8, [X22]
	762 Move X8, [X8+184]
	763 Move [X8+224], X0
	764 Move X8, [X0]
	765 NotImplemented "Instruction CMP not yet implemented."
	766 Move X8, [X22]
	767 Move X8, [X8+184]
	768 Move [X8+224], X0
	769 Move X20, [X31+48]
	770 Move X19, [X31+56]
	771 Move X22, [X31+32]
	772 Move X21, [X31+40]
	773 Move X24, [X31+16]
	774 Move X23, [X31+24]
	775 Move X30, [X31+64]
	776 Return 
	777 Move X0, X21
	778 Move X1, X20
	779 Call 0x1C181E0
	780 Call 0x1C17F20
	781 Move X0, X20
	782 Move X1, X21
	783 Call 0x1C181E0

Method: System.Void OnDestroy()

Disassembly:
	0x01DC6E40 LDR X0, [X19 + 0x20]
	0x01DC6E44 CBZ X0, 0x1DC6EA8
	0x01DC6E48 ADRP X8, 0x2332000
	0x01DC6E4C LDR X8, [X8 + 0x208]
	0x01DC6E50 MOVZ W1, 0x1
	0x01DC6E54 LDR X2, [X8]
	0x01DC6E58 BL 0x2A44D78
	0x01DC6E5C CBZ X0, 0x1DC6EA8
	0x01DC6E60 STR S8, [X0 + 0x18]
	0x01DC6E64 LDR X20, [X19 + 0x28]
	0x01DC6E68 CBZ X20, 0x1DC6E98
	0x01DC6E6C MOV X0, X19
	0x01DC6E70 BL 0x1DC6A44
	0x01DC6E74 LDR X8, [X20 + 0x40]
	0x01DC6E78 LDR X3, [X20 + 0x18]
	0x01DC6E7C LDR X2, [X20 + 0x28]
	0x01DC6E80 LDP X20, X19, [X31 + 0x10]
	0x01DC6E84 LDR X30, [X31 + 0x8]
	0x01DC6E88 MOV X1, X0
	0x01DC6E8C MOV X0, X8
	0x01DC6E90 LDR V8, [X31], #0x20
	0x01DC6E94 BR X3
	0x01DC6E98 LDP X20, X19, [X31 + 0x10]
	0x01DC6E9C LDR X30, [X31 + 0x8]
	0x01DC6EA0 LDR V8, [X31], #0x20
	0x01DC6EA4 RET
	0x01DC6EA8 BL 0x1C16F20
	0x01DC6EAC STR X30, [X31 - 0x20]!
	0x01DC6EB0 STP X20, X19, [X31 + 0x10]
	0x01DC6EB4 ADRP X20, 0x2612000
	0x01DC6EB8 LDRB W8, [X20 + 0xB9A]
	0x01DC6EBC MOV X19, X0
	0x01DC6EC0 TBNZ X8, 0x0, 0x1DC6ED8
	0x01DC6EC4 ADRP X0, 0x2332000
	0x01DC6EC8 LDR X0, [X0 + 0x208]
	0x01DC6ECC BL 0x1C16CF4
	0x01DC6ED0 MOVZ W8, 0x1
	0x01DC6ED4 STRB W8, [X20 + 0xB9A]
	0x01DC6ED8 LDR X0, [X19 + 0x20]
	0x01DC6EDC CBZ X0, 0x1DC6F3C
	0x01DC6EE0 ADRP X8, 0x2332000
	0x01DC6EE4 LDR X8, [X8 + 0x208]
	0x01DC6EE8 MOV W1, W31
	0x01DC6EEC LDR X2, [X8]
	0x01DC6EF0 BL 0x2A44D78
	0x01DC6EF4 CBZ X0, 0x1DC6F3C
	0x01DC6EF8 MOVZ W8, 0x1
	0x01DC6EFC STRB W8, [X0 + 0x10]
	0x01DC6F00 LDR X20, [X19 + 0x28]
	0x01DC6F04 CBZ X20, 0x1DC6F30
	0x01DC6F08 MOV X0, X19
	0x01DC6F0C BL 0x1DC6A44
	0x01DC6F10 LDR X8, [X20 + 0x40]
	0x01DC6F14 LDR X3, [X20 + 0x18]
	0x01DC6F18 LDR X2, [X20 + 0x28]
	0x01DC6F1C LDP X20, X19, [X31 + 0x10]
	0x01DC6F20 MOV X1, X0
	0x01DC6F24 MOV X0, X8
	0x01DC6F28 LDR X30, [X31], #0x20
	0x01DC6F2C BR X3
	0x01DC6F30 LDP X20, X19, [X31 + 0x10]
	0x01DC6F34 LDR X30, [X31], #0x20
	0x01DC6F38 RET
	0x01DC6F3C BL 0x1C16F20
	0x01DC6F40 STR X30, [X31 - 0x20]!
	0x01DC6F44 STP X20, X19, [X31 + 0x10]
	0x01DC6F48 ADRP X20, 0x2612000
	0x01DC6F4C LDRB W8, [X20 + 0xB9B]
	0x01DC6F50 MOV X19, X0
	0x01DC6F54 TBNZ X8, 0x0, 0x1DC6F6C
	0x01DC6F58 ADRP X0, 0x2332000
	0x01DC6F5C LDR X0, [X0 + 0x208]
	0x01DC6F60 BL 0x1C16CF4
	0x01DC6F64 MOVZ W8, 0x1
	0x01DC6F68 STRB W8, [X20 + 0xB9B]
	0x01DC6F6C LDR X0, [X19 + 0x20]
	0x01DC6F70 CBZ X0, 0x1DC6FCC
	0x01DC6F74 ADRP X8, 0x2332000
	0x01DC6F78 LDR X8, [X8 + 0x208]
	0x01DC6F7C MOV W1, W31
	0x01DC6F80 LDR X2, [X8]
	0x01DC6F84 BL 0x2A44D78
	0x01DC6F88 CBZ X0, 0x1DC6FCC
	0x01DC6F8C STRB W31, [X0 + 0x10]
	0x01DC6F90 LDR X20, [X19 + 0x28]
	0x01DC6F94 CBZ X20, 0x1DC6FC0
	0x01DC6F98 MOV X0, X19
	0x01DC6F9C BL 0x1DC6A44
	0x01DC6FA0 LDR X8, [X20 + 0x40]
	0x01DC6FA4 LDR X3, [X20 + 0x18]
	0x01DC6FA8 LDR X2, [X20 + 0x28]
	0x01DC6FAC LDP X20, X19, [X31 + 0x10]
	0x01DC6FB0 MOV X1, X0
	0x01DC6FB4 MOV X0, X8
	0x01DC6FB8 LDR X30, [X31], #0x20
	0x01DC6FBC BR X3
	0x01DC6FC0 LDP X20, X19, [X31 + 0x10]
	0x01DC6FC4 LDR X30, [X31], #0x20
	0x01DC6FC8 RET
	0x01DC6FCC BL 0x1C16F20
	0x01DC6FD0 STR X30, [X31 - 0x20]!
	0x01DC6FD4 STP X20, X19, [X31 + 0x10]
	0x01DC6FD8 ADRP X20, 0x2612000
	0x01DC6FDC LDRB W8, [X20 + 0xB9C]
	0x01DC6FE0 MOV X19, X0
	0x01DC6FE4 TBNZ X8, 0x0, 0x1DC6FFC
	0x01DC6FE8 ADRP X0, 0x2332000
	0x01DC6FEC LDR X0, [X0 + 0x208]
	0x01DC6FF0 BL 0x1C16CF4
	0x01DC6FF4 MOVZ W8, 0x1
	0x01DC6FF8 STRB W8, [X20 + 0xB9C]
	0x01DC6FFC LDR X0, [X19 + 0x20]
	0x01DC7000 CBZ X0, 0x1DC7060
	0x01DC7004 ADRP X8, 0x2331000
	0x01DC7008 LDR X8, [X8 + 0x208]
	0x01DC700C MOVZ W1, 0x1
	0x01DC7010 MOVZ W20, 0x1
	0x01DC7014 LDR X2, [X8]
	0x01DC7018 BL 0x2A44D78
	0x01DC701C CBZ X0, 0x1DC7060
	0x01DC7020 STRB W20, [X0 + 0x10]
	0x01DC7024 LDR X20, [X19 + 0x28]
	0x01DC7028 CBZ X20, 0x1DC7054
	0x01DC702C MOV X0, X19
	0x01DC7030 BL 0x1DC6A44
	0x01DC7034 LDR X8, [X20 + 0x40]
	0x01DC7038 LDR X3, [X20 + 0x18]
	0x01DC703C LDR X2, [X20 + 0x28]
	0x01DC7040 LDP X20, X19, [X31 + 0x10]
	0x01DC7044 MOV X1, X0
	0x01DC7048 MOV X0, X8
	0x01DC704C LDR X30, [X31], #0x20
	0x01DC7050 BR X3
	0x01DC7054 LDP X20, X19, [X31 + 0x10]
	0x01DC7058 LDR X30, [X31], #0x20
	0x01DC705C RET
	0x01DC7060 BL 0x1C16F20
	0x01DC7064 STR X30, [X31 - 0x20]!
	0x01DC7068 STP X20, X19, [X31 + 0x10]
	0x01DC706C ADRP X20, 0x2611000
	0x01DC7070 LDRB W8, [X20 + 0xB9D]
	0x01DC7074 MOV X19, X0
	0x01DC7078 TBNZ X8, 0x0, 0x1DC7090
	0x01DC707C ADRP X0, 0x2331000
	0x01DC7080 LDR X0, [X0 + 0x208]
	0x01DC7084 BL 0x1C16CF4
	0x01DC7088 MOVZ W8, 0x1
	0x01DC708C STRB W8, [X20 + 0xB9D]
	0x01DC7090 LDR X0, [X19 + 0x20]
	0x01DC7094 CBZ X0, 0x1DC70F0
	0x01DC7098 ADRP X8, 0x2331000
	0x01DC709C LDR X8, [X8 + 0x208]
	0x01DC70A0 MOVZ W1, 0x1
	0x01DC70A4 LDR X2, [X8]
	0x01DC70A8 BL 0x2A44D78
	0x01DC70AC CBZ X0, 0x1DC70F0
	0x01DC70B0 STRB W31, [X0 + 0x10]
	0x01DC70B4 LDR X20, [X19 + 0x28]
	0x01DC70B8 CBZ X20, 0x1DC70E4
	0x01DC70BC MOV X0, X19
	0x01DC70C0 BL 0x1DC6A44
	0x01DC70C4 LDR X8, [X20 + 0x40]
	0x01DC70C8 LDR X3, [X20 + 0x18]
	0x01DC70CC LDR X2, [X20 + 0x28]
	0x01DC70D0 LDP X20, X19, [X31 + 0x10]
	0x01DC70D4 MOV X1, X0
	0x01DC70D8 MOV X0, X8
	0x01DC70DC LDR X30, [X31], #0x20
	0x01DC70E0 BR X3
	0x01DC70E4 LDP X20, X19, [X31 + 0x10]
	0x01DC70E8 LDR X30, [X31], #0x20
	0x01DC70EC RET
	0x01DC70F0 BL 0x1C16F20
	0x01DC70F4 STR X30, [X31 - 0x20]!
	0x01DC70F8 STP X20, X19, [X31 + 0x10]
	0x01DC70FC ADRP X20, 0x2611000
	0x01DC7100 LDRB W8, [X20 + 0xB9E]
	0x01DC7104 MOV X19, X0
	0x01DC7108 TBNZ X8, 0x0, 0x1DC7120
	0x01DC710C ADRP X0, 0x2331000
	0x01DC7110 LDR X0, [X0 + 0x208]
	0x01DC7114 BL 0x1C16CF4
	0x01DC7118 MOVZ W8, 0x1
	0x01DC711C STRB W8, [X20 + 0xB9E]
	0x01DC7120 LDR X0, [X19 + 0x20]
	0x01DC7124 CBZ X0, 0x1DC7184
	0x01DC7128 ADRP X8, 0x2331000
	0x01DC712C LDR X8, [X8 + 0x208]
	0x01DC7130 MOV W1, W31
	0x01DC7134 LDR X2, [X8]
	0x01DC7138 BL 0x2A44D78
	0x01DC713C CBZ X0, 0x1DC7184
	0x01DC7140 MOVZ W8, 0x1
	0x01DC7144 STRB W8, [X0 + 0x11]
	0x01DC7148 LDR X20, [X19 + 0x28]
	0x01DC714C CBZ X20, 0x1DC7178
	0x01DC7150 MOV X0, X19
	0x01DC7154 BL 0x1DC6A44
	0x01DC7158 LDR X8, [X20 + 0x40]
	0x01DC715C LDR X3, [X20 + 0x18]
	0x01DC7160 LDR X2, [X20 + 0x28]
	0x01DC7164 LDP X20, X19, [X31 + 0x10]
	0x01DC7168 MOV X1, X0
	0x01DC716C MOV X0, X8
	0x01DC7170 LDR X30, [X31], #0x20
	0x01DC7174 BR X3
	0x01DC7178 LDP X20, X19, [X31 + 0x10]
	0x01DC717C LDR X30, [X31], #0x20
	0x01DC7180 RET
	0x01DC7184 BL 0x1C16F20
	0x01DC7188 STR X30, [X31 - 0x20]!
	0x01DC718C STP X20, X19, [X31 + 0x10]
	0x01DC7190 ADRP X20, 0x2611000
	0x01DC7194 LDRB W8, [X20 + 0xB9F]
	0x01DC7198 MOV X19, X0
	0x01DC719C TBNZ X8, 0x0, 0x1DC71B4
	0x01DC71A0 ADRP X0, 0x2331000
	0x01DC71A4 LDR X0, [X0 + 0x208]
	0x01DC71A8 BL 0x1C16CF4
	0x01DC71AC MOVZ W8, 0x1
	0x01DC71B0 STRB W8, [X20 + 0xB9F]
	0x01DC71B4 LDR X0, [X19 + 0x20]
	0x01DC71B8 CBZ X0, 0x1DC7214
	0x01DC71BC ADRP X8, 0x2331000
	0x01DC71C0 LDR X8, [X8 + 0x208]
	0x01DC71C4 MOV W1, W31
	0x01DC71C8 LDR X2, [X8]
	0x01DC71CC BL 0x2A44D78
	0x01DC71D0 CBZ X0, 0x1DC7214
	0x01DC71D4 STRB W31, [X0 + 0x11]
	0x01DC71D8 LDR X20, [X19 + 0x28]
	0x01DC71DC CBZ X20, 0x1DC7208
	0x01DC71E0 MOV X0, X19
	0x01DC71E4 BL 0x1DC6A44
	0x01DC71E8 LDR X8, [X20 + 0x40]
	0x01DC71EC LDR X3, [X20 + 0x18]
	0x01DC71F0 LDR X2, [X20 + 0x28]
	0x01DC71F4 LDP X20, X19, [X31 + 0x10]
	0x01DC71F8 MOV X1, X0
	0x01DC71FC MOV X0, X8
	0x01DC7200 LDR X30, [X31], #0x20
	0x01DC7204 BR X3
	0x01DC7208 LDP X20, X19, [X31 + 0x10]
	0x01DC720C LDR X30, [X31], #0x20
	0x01DC7210 RET
	0x01DC7214 BL 0x1C16F20
	0x01DC7218 STR X30, [X31 - 0x20]!
	0x01DC721C STP X20, X19, [X31 + 0x10]
	0x01DC7220 ADRP X20, 0x2611000
	0x01DC7224 LDRB W8, [X20 + 0xBA0]
	0x01DC7228 MOV X19, X0
	0x01DC722C TBNZ X8, 0x0, 0x1DC7244
	0x01DC7230 ADRP X0, 0x2331000
	0x01DC7234 LDR X0, [X0 + 0x208]
	0x01DC7238 BL 0x1C16CF4
	0x01DC723C MOVZ W8, 0x1
	0x01DC7240 STRB W8, [X20 + 0xBA0]
	0x01DC7244 LDR X0, [X19 + 0x20]
	0x01DC7248 CBZ X0, 0x1DC72A8
	0x01DC724C ADRP X8, 0x2331000
	0x01DC7250 LDR X8, [X8 + 0x208]
	0x01DC7254 MOVZ W1, 0x1
	0x01DC7258 MOVZ W20, 0x1
	0x01DC725C LDR X2, [X8]
	0x01DC7260 BL 0x2A44D78
	0x01DC7264 CBZ X0, 0x1DC72A8
	0x01DC7268 STRB W20, [X0 + 0x11]
	0x01DC726C LDR X20, [X19 + 0x28]
	0x01DC7270 CBZ X20, 0x1DC729C
	0x01DC7274 MOV X0, X19
	0x01DC7278 BL 0x1DC6A44
	0x01DC727C LDR X8, [X20 + 0x40]
	0x01DC7280 LDR X3, [X20 + 0x18]
	0x01DC7284 LDR X2, [X20 + 0x28]
	0x01DC7288 LDP X20, X19, [X31 + 0x10]
	0x01DC728C MOV X1, X0
	0x01DC7290 MOV X0, X8
	0x01DC7294 LDR X30, [X31], #0x20
	0x01DC7298 BR X3
	0x01DC729C LDP X20, X19, [X31 + 0x10]
	0x01DC72A0 LDR X30, [X31], #0x20
	0x01DC72A4 RET
	0x01DC72A8 BL 0x1C16F20
	0x01DC72AC STR X30, [X31 - 0x20]!
	0x01DC72B0 STP X20, X19, [X31 + 0x10]
	0x01DC72B4 ADRP X20, 0x2611000
	0x01DC72B8 LDRB W8, [X20 + 0xBA1]
	0x01DC72BC MOV X19, X0
	0x01DC72C0 TBNZ X8, 0x0, 0x1DC72D8
	0x01DC72C4 ADRP X0, 0x2331000
	0x01DC72C8 LDR X0, [X0 + 0x208]
	0x01DC72CC BL 0x1C16CF4
	0x01DC72D0 MOVZ W8, 0x1
	0x01DC72D4 STRB W8, [X20 + 0xBA1]
	0x01DC72D8 LDR X0, [X19 + 0x20]
	0x01DC72DC CBZ X0, 0x1DC7338
	0x01DC72E0 ADRP X8, 0x2331000
	0x01DC72E4 LDR X8, [X8 + 0x208]
	0x01DC72E8 MOVZ W1, 0x1
	0x01DC72EC LDR X2, [X8]
	0x01DC72F0 BL 0x2A44D78
	0x01DC72F4 CBZ X0, 0x1DC7338
	0x01DC72F8 STRB W31, [X0 + 0x11]
	0x01DC72FC LDR X20, [X19 + 0x28]
	0x01DC7300 CBZ X20, 0x1DC732C
	0x01DC7304 MOV X0, X19
	0x01DC7308 BL 0x1DC6A44
	0x01DC730C LDR X8, [X20 + 0x40]
	0x01DC7310 LDR X3, [X20 + 0x18]
	0x01DC7314 LDR X2, [X20 + 0x28]
	0x01DC7318 LDP X20, X19, [X31 + 0x10]
	0x01DC731C MOV X1, X0
	0x01DC7320 MOV X0, X8
	0x01DC7324 LDR X30, [X31], #0x20
	0x01DC7328 BR X3
	0x01DC732C LDP X20, X19, [X31 + 0x10]
	0x01DC7330 LDR X30, [X31], #0x20
	0x01DC7334 RET
	0x01DC7338 BL 0x1C16F20
	0x01DC733C STR X30, [X31 - 0x30]!
	0x01DC7340 STP X22, X21, [X31 + 0x10]
	0x01DC7344 STP X20, X19, [X31 + 0x20]
	0x01DC7348 ADRP X21, 0x2611000
	0x01DC734C ADRP X22, 0x2331000
	0x01DC7350 ADRP X20, 0x2331000
	0x01DC7354 LDRB W8, [X21 + 0xBA2]
	0x01DC7358 LDR X22, [X22 + 0x210]
	0x01DC735C LDR X20, [X20 + 0x218]
	0x01DC7360 MOV X19, X0
	0x01DC7364 TBNZ X8, 0x0, 0x1DC7388
	0x01DC7368 ADRP X0, 0x2331000
	0x01DC736C LDR X0, [X0 + 0x218]
	0x01DC7370 BL 0x1C16CF4
	0x01DC7374 ADRP X0, 0x2331000
	0x01DC7378 LDR X0, [X0 + 0x210]
	0x01DC737C BL 0x1C16CF4
	0x01DC7380 MOVZ W8, 0x1
	0x01DC7384 STRB W8, [X21 + 0xBA2]
	0x01DC7388 LDR X0, [X22]
	0x01DC738C BL 0x1C16F10
	0x01DC7390 LDR X1, [X20]
	0x01DC7394 MOV X20, X0
	0x01DC7398 BL 0x2A44560
	0x01DC739C STR X20, [X19 + 0x20]
	0x01DC73A0 MOV X0, X19
	0x01DC73A4 LDP X20, X19, [X31 + 0x20]
	0x01DC73A8 LDP X22, X21, [X31 + 0x10]
	0x01DC73AC MOV X1, X31
	0x01DC73B0 LDR X30, [X31], #0x30
	0x01DC73B4 B 0x3C36C30
	0x01DC73B8 LDR V0, [X0 + 0x14]
	0x01DC73BC RET
	0x01DC73C0 LDR V0, [X0 + 0x18]
	0x01DC73C4 RET
	0x01DC73C8 LDRB W8, [X0 + 0x20]
	0x01DC73CC MOVZ W9, 0x420C0000
	0x01DC73D0 FMOV S0, W9
	0x01DC73D4 FMOV S1, 25
	0x01DC73D8 CMP W8, 0x0
	0x01DC73DC FCSEL S0, S0, S1, EQ
	0x01DC73E0 RET
	0x01DC73E4 STP D9, D8, [X31 - 0x30]!
	0x01DC73E8 STR X30, [X31 + 0x10]
	0x01DC73EC STP X20, X19, [X31 + 0x20]
	0x01DC73F0 LDRB W8, [X0 + 0x3C]
	0x01DC73F4 MOV X19, X0
	0x01DC73F8 ADRP X20, 0xFFFFFFFFFED23000
	0x01DC73FC CBZ W8, 0x1DC7478
	0x01DC7400 LDR V8, [X19 + 0x30]
	0x01DC7404 LDR V9, [X19 + 0x24]
	0x01DC7408 MOV X0, X31
	0x01DC740C BL 0x3C3C714
	0x01DC7410 LDRB W8, [X19 + 0x20]
	0x01DC7414 MOVZ W9, 0x420C0000
	0x01DC7418 FMOV S1, W9
	0x01DC741C FMOV S2, 25
	0x01DC7420 CMP W8, 0x0
	0x01DC7424 FCSEL S1, S1, S2, EQ
	0x01DC7428 FMOV S2, 1
	0x01DC742C FMUL S0, S0, S1
	0x01DC7430 FMOV S3, W31
	0x01DC7434 FMIN S2, S0, S2
	0x01DC7438 FCMP S0, 0x0
	0x01DC743C LDR V1, [X19 + 0x24]
	0x01DC7440 FSUB S4, S9, S8
	0x01DC7444 FCSEL S0, S2, S3, PL
	0x01DC7448 LDR V2, [X20 + 0x40C]
	0x01DC744C FMUL S0, S4, S0
	0x01DC7450 FADD S0, S8, S0
	0x01DC7454 FABD S3, S0, S0
	0x01DC7458 FCMP S3, S2
	0x01DC745C STR S0, [X19 + 0x30]
	0x01DC7460 B.PL 0x1DC7470
	0x01DC7464 MOV V0.16B, V1.16B
	0x01DC7468 STR S1, [X19 + 0x30]
	0x01DC746C STRB W31, [X19 + 0x3C]
	0x01DC7470 MOV X0, X19
	0x01DC7474 BL 0x1DC759C
	0x01DC7478 LDRB W8, [X19 + 0x20]
	0x01DC747C CBZ W8, 0x1DC758C
	0x01DC7480 LDRB W8, [X19 + 0x3D]
	0x01DC7484 CBZ W8, 0x1DC7500
	0x01DC7488 LDR V8, [X19 + 0x34]
	0x01DC748C LDR V9, [X19 + 0x28]
	0x01DC7490 MOV X0, X31
	0x01DC7494 BL 0x3C3C714
	0x01DC7498 LDRB W8, [X19 + 0x20]
	0x01DC749C MOVZ W9, 0x420C0000
	0x01DC74A0 FMOV S1, W9
	0x01DC74A4 FMOV S2, 25
	0x01DC74A8 CMP W8, 0x0
	0x01DC74AC FCSEL S1, S1, S2, EQ
	0x01DC74B0 FMOV S2, 1
	0x01DC74B4 FMUL S0, S0, S1
	0x01DC74B8 FMOV S3, W31
	0x01DC74BC FMIN S2, S0, S2
	0x01DC74C0 FCMP S0, 0x0
	0x01DC74C4 LDR V1, [X19 + 0x28]
	0x01DC74C8 FSUB S4, S9, S8
	0x01DC74CC FCSEL S0, S2, S3, PL
	0x01DC74D0 LDR V2, [X20 + 0x40C]
	0x01DC74D4 FMUL S0, S4, S0
	0x01DC74D8 FADD S0, S8, S0
	0x01DC74DC FABD S3, S0, S0
	0x01DC74E0 FCMP S3, S2
	0x01DC74E4 STR S0, [X19 + 0x34]
	0x01DC74E8 B.PL 0x1DC74F8
	0x01DC74EC MOV V0.16B, V1.16B
	0x01DC74F0 STR S1, [X19 + 0x34]
	0x01DC74F4 STRB W31, [X19 + 0x3D]
	0x01DC74F8 MOV X0, X19
	0x01DC74FC BL 0x1DC76D4
	0x01DC7500 LDRB W8, [X19 + 0x3E]
	0x01DC7504 CBZ W8, 0x1DC758C
	0x01DC7508 LDR V8, [X19 + 0x38]
	0x01DC750C LDR V9, [X19 + 0x2C]
	0x01DC7510 MOV X0, X31
	0x01DC7514 BL 0x3C3C714
	0x01DC7518 LDRB W8, [X19 + 0x20]
	0x01DC751C MOVZ W9, 0x420C0000
	0x01DC7520 FMOV S1, W9
	0x01DC7524 FMOV S2, 25
	0x01DC7528 CMP W8, 0x0
	0x01DC752C FCSEL S1, S1, S2, EQ
	0x01DC7530 FMOV S2, 1
	0x01DC7534 FMUL S0, S0, S1
	0x01DC7538 FMOV S3, W31
	0x01DC753C FMIN S2, S0, S2
	0x01DC7540 FCMP S0, 0x0
	0x01DC7544 LDR V1, [X19 + 0x2C]
	0x01DC7548 FSUB S4, S9, S8
	0x01DC754C FCSEL S0, S2, S3, PL
	0x01DC7550 LDR V2, [X20 + 0x40C]
	0x01DC7554 FMUL S0, S4, S0
	0x01DC7558 FADD S0, S8, S0
	0x01DC755C FABD S3, S0, S0
	0x01DC7560 FCMP S3, S2
	0x01DC7564 STR S0, [X19 + 0x38]
	0x01DC7568 B.PL 0x1DC7578
	0x01DC756C MOV V0.16B, V1.16B
	0x01DC7570 STR S1, [X19 + 0x38]
	0x01DC7574 STRB W31, [X19 + 0x3E]
	0x01DC7578 MOV X0, X19
	0x01DC757C LDP X20, X19, [X31 + 0x20]
	0x01DC7580 LDR X30, [X31 + 0x10]
	0x01DC7584 LDP D9, D8, [X31], #0x30
	0x01DC7588 B 0x1DC780C
	0x01DC758C LDP X20, X19, [X31 + 0x20]
	0x01DC7590 LDR X30, [X31 + 0x10]
	0x01DC7594 LDP D9, D8, [X31], #0x30
	0x01DC7598 RET
	0x01DC759C STP D9, D8, [X31 - 0x40]!
	0x01DC75A0 STR X30, [X31 + 0x10]
	0x01DC75A4 STP X22, X21, [X31 + 0x20]
	0x01DC75A8 STP X20, X19, [X31 + 0x30]
	0x01DC75AC LDR X8, [X0 + 0x40]
	0x01DC75B0 CBZ X8, 0x1DC76B8
	0x01DC75B4 FMOV S1, 1
	0x01DC75B8 FCMP S0, 0x0
	0x01DC75BC FMOV S2, W31
	0x01DC75C0 FMIN S0, S0, S1
	0x01DC75C4 MOV X19, X0
	0x01DC75C8 MOV X21, X31
	0x01DC75CC FCSEL S9, S0, S2, PL
	0x01DC75D0 MOVZ W22, 0xC3B40000
	0x01DC75D4 LDR W9, [X8 + 0x18]
	0x01DC75D8 CMP W21, W9
	0x01DC75DC B.GE 0x1DC76BC
	0x01DC75E0 CMP W21, W9
	0x01DC75E4 B.CS 0x1DC76D0
	0x01DC75E8 ADD X8, X8, X21, 0x3, LSL
	0x01DC75EC LDR X20, [X8 + 0x20]
	0x01DC75F0 CBZ X20, 0x1DC76B8
	0x01DC75F4 MOV X0, X20
	0x01DC75F8 MOV X1, X31
	0x01DC75FC BL 0x3C3F800
	0x01DC7600 LDR X8, [X19 + 0x40]
	0x01DC7604 CBZ X8, 0x1DC76B8
	0x01DC7608 LDR W9, [X8 + 0x18]
	0x01DC760C CMP W21, W9
	0x01DC7610 B.CS 0x1DC76D0
	0x01DC7614 ADD X8, X8, X21, 0x3, LSL
	0x01DC7618 LDR X0, [X8 + 0x20]
	0x01DC761C CBZ X0, 0x1DC76B8
	0x01DC7620 MOV X1, X31
	0x01DC7624 MOV V8.16B, V0.16B
	0x01DC7628 BL 0x3C3F800
	0x01DC762C LDR X8, [X19 + 0x70]
	0x01DC7630 CBZ X8, 0x1DC76B8
	0x01DC7634 LDR W9, [X8 + 0x18]
	0x01DC7638 CMP W21, W9
	0x01DC763C B.CS 0x1DC76D0
	0x01DC7640 LDR X9, [X19 + 0x98]
	0x01DC7644 CBZ X9, 0x1DC76B8
	0x01DC7648 LDR W10, [X9 + 0x18]
	0x01DC764C CMP W21, W10
	0x01DC7650 B.CS 0x1DC76D0
	0x01DC7654 ADD X8, X8, X21, 0x2, LSL
	0x01DC7658 ADD X9, X9, X21, 0x2, LSL
	0x01DC765C LDR V0, [X8 + 0x20]
	0x01DC7660 LDR V2, [X9 + 0x20]
	0x01DC7664 FMOV S3, W22
	0x01DC7668 MOV X0, X20
	0x01DC766C FADD S4, S0, S3
	0x01DC7670 FCMP S0, S2
	0x01DC7674 FADD S3, S2, S3
	0x01DC7678 FCSEL S4, S4, S0, GT
	0x01DC767C FCSEL S3, S2, S3, GT
	0x01DC7680 FABD S5, S0, S0
	0x01DC7684 FABD S6, S4, S4
	0x01DC7688 FCMP S5, S6
	0x01DC768C FCSEL S0, S0, S4, MI
	0x01DC7690 FCSEL S2, S2, S3, MI
	0x01DC7694 FSUB S2, S2, S0
	0x01DC7698 FMUL S2, S9, S2
	0x01DC769C FADD S2, S0, S2
	0x01DC76A0 MOV V0.16B, V8.16B
	0x01DC76A4 MOV X1, X31
	0x01DC76A8 BL 0x3C3F888
	0x01DC76AC LDR X8, [X19 + 0x40]
	0x01DC76B0 ADD X21, X21, 0x1
	0x01DC76B4 CBNZ X8, 0x1DC75D4
	0x01DC76B8 BL 0x1C16F20
	0x01DC76BC LDP X20, X19, [X31 + 0x30]
	0x01DC76C0 LDP X22, X21, [X31 + 0x20]
	0x01DC76C4 LDR X30, [X31 + 0x10]
	0x01DC76C8 LDP D9, D8, [X31], #0x40
	0x01DC76CC RET
	0x01DC76D0 BL 0x1C16F28
	0x01DC76D4 STP D9, D8, [X31 - 0x40]!
	0x01DC76D8 STR X30, [X31 + 0x10]
	0x01DC76DC STP X22, X21, [X31 + 0x20]
	0x01DC76E0 STP X20, X19, [X31 + 0x30]
	0x01DC76E4 LDR X8, [X0 + 0x48]
	0x01DC76E8 CBZ X8, 0x1DC77F0
	0x01DC76EC FMOV S1, 1
	0x01DC76F0 FCMP S0, 0x0
	0x01DC76F4 FMOV S2, W31
	0x01DC76F8 FMIN S0, S0, S1
	0x01DC76FC MOV X19, X0
	0x01DC7700 MOV X21, X31
	0x01DC7704 FCSEL S9, S0, S2, PL
	0x01DC7708 MOVZ W22, 0xC3B40000
	0x01DC770C LDR W9, [X8 + 0x18]
	0x01DC7710 CMP W21, W9
	0x01DC7714 B.GE 0x1DC77F4
	0x01DC7718 CMP W21, W9
	0x01DC771C B.CS 0x1DC7808
	0x01DC7720 ADD X8, X8, X21, 0x3, LSL
	0x01DC7724 LDR X20, [X8 + 0x20]
	0x01DC7728 CBZ X20, 0x1DC77F0
	0x01DC772C MOV X0, X20
	0x01DC7730 MOV X1, X31
	0x01DC7734 BL 0x3C3F800
	0x01DC7738 LDR X8, [X19 + 0x48]
	0x01DC773C CBZ X8, 0x1DC77F0
	0x01DC7740 LDR W9, [X8 + 0x18]
	0x01DC7744 CMP W21, W9
	0x01DC7748 B.CS 0x1DC7808
	0x01DC774C ADD X8, X8, X21, 0x3, LSL
	0x01DC7750 LDR X0, [X8 + 0x20]
	0x01DC7754 CBZ X0, 0x1DC77F0
	0x01DC7758 MOV X1, X31
	0x01DC775C MOV V8.16B, V0.16B
	0x01DC7760 BL 0x3C3F800
	0x01DC7764 LDR X8, [X19 + 0x78]
	0x01DC7768 CBZ X8, 0x1DC77F0
	0x01DC776C LDR W9, [X8 + 0x18]
	0x01DC7770 CMP W21, W9
	0x01DC7774 B.CS 0x1DC7808
	0x01DC7778 LDR X9, [X19 + 0xA0]
	0x01DC777C CBZ X9, 0x1DC77F0
	0x01DC7780 LDR W10, [X9 + 0x18]
	0x01DC7784 CMP W21, W10
	0x01DC7788 B.CS 0x1DC7808
	0x01DC778C ADD X8, X8, X21, 0x2, LSL
	0x01DC7790 ADD X9, X9, X21, 0x2, LSL
	0x01DC7794 LDR V0, [X8 + 0x20]
	0x01DC7798 LDR V2, [X9 + 0x20]
	0x01DC779C FMOV S3, W22
	0x01DC77A0 MOV X0, X20
	0x01DC77A4 FADD S4, S0, S3
	0x01DC77A8 FCMP S0, S2
	0x01DC77AC FADD S3, S2, S3
	0x01DC77B0 FCSEL S4, S4, S0, GT
	0x01DC77B4 FCSEL S3, S2, S3, GT
	0x01DC77B8 FABD S5, S0, S0
	0x01DC77BC FABD S6, S4, S4
	0x01DC77C0 FCMP S5, S6
	0x01DC77C4 FCSEL S0, S0, S4, MI
	0x01DC77C8 FCSEL S2, S2, S3, MI
	0x01DC77CC FSUB S2, S2, S0
	0x01DC77D0 FMUL S2, S9, S2
	0x01DC77D4 FADD S2, S0, S2
	0x01DC77D8 MOV V0.16B, V8.16B
	0x01DC77DC MOV X1, X31
	0x01DC77E0 BL 0x3C3F888
	0x01DC77E4 LDR X8, [X19 + 0x48]
	0x01DC77E8 ADD X21, X21, 0x1
	0x01DC77EC CBNZ X8, 0x1DC770C
	0x01DC77F0 BL 0x1C16F20
	0x01DC77F4 LDP X20, X19, [X31 + 0x30]
	0x01DC77F8 LDP X22, X21, [X31 + 0x20]
	0x01DC77FC LDR X30, [X31 + 0x10]
	0x01DC7800 LDP D9, D8, [X31], #0x40
	0x01DC7804 RET
	0x01DC7808 BL 0x1C16F28
	0x01DC780C STR D10, [X31 - 0x50]!
	0x01DC7810 STP D9, D8, [X31 + 0x10]
	0x01DC7814 STP X30, X23, [X31 + 0x20]
	0x01DC7818 STP X22, X21, [X31 + 0x30]
	0x01DC781C STP X20, X19, [X31 + 0x40]
	0x01DC7820 ADRP X20, 0x2611000
	0x01DC7824 LDRB W8, [X20 + 0xBA4]
	0x01DC7828 MOV V8.16B, V0.16B
	0x01DC782C MOV X19, X0
	0x01DC7830 TBNZ X8, 0x0, 0x1DC7848
	0x01DC7834 ADRP X0, 0x232C000
	0x01DC7838 LDR X0, [X0 + 0x598]
	0x01DC783C BL 0x1C16CF4
	0x01DC7840 MOVZ W8, 0x1
	0x01DC7844 STRB W8, [X20 + 0xBA4]
	0x01DC7848 LDR X8, [X19 + 0x50]
	0x01DC784C CBZ X8, 0x1DC79A8
	0x01DC7850 LDR X9, [X8 + 0x18]
	0x01DC7854 CBZ X9, 0x1DC79A8
	0x01DC7858 FMOV S0, 1
	0x01DC785C FCMP S8, 0x0
	0x01DC7860 FMOV S1, W31
	0x01DC7864 FMIN S0, S8, S0
	0x01DC7868 FCSEL S10, S0, S1, PL
	0x01DC786C CMP W9, 0x1
	0x01DC7870 B.LT 0x1DC79A8
	0x01DC7874 ADRP X22, 0x232C000
	0x01DC7878 LDR X22, [X22 + 0x598]
	0x01DC787C MOV X21, X31
	0x01DC7880 MOVZ W23, 0xC3B40000
	0x01DC7884 CMP X21, W9, UXTW
	0x01DC7888 B.CS 0x1DC7C84
	0x01DC788C LDR X0, [X22]
	0x01DC7890 ADD X8, X8, X21, 0x3, LSL
	0x01DC7894 LDR X20, [X8 + 0x20]
	0x01DC7898 LDR W9, [X0 + 0xE0]
	0x01DC789C CBNZ W9, 0x1DC78A4
	0x01DC78A0 BL 0x1C16DFC
	0x01DC78A4 MOV X0, X20
	0x01DC78A8 MOV X1, X31
	0x01DC78AC MOV X2, X31
	0x01DC78B0 BL 0x3C3883C
	0x01DC78B4 TBNZ X0, 0x0, 0x1DC7990
	0x01DC78B8 LDR X8, [X19 + 0x50]
	0x01DC78BC CBZ X8, 0x1DC7C80
	0x01DC78C0 LDR W9, [X8 + 0x18]
	0x01DC78C4 CMP X21, X9
	0x01DC78C8 B.CS 0x1DC7C84
	0x01DC78CC ADD X8, X8, X21, 0x3, LSL
	0x01DC78D0 LDR X20, [X8 + 0x20]
	0x01DC78D4 CBZ X20, 0x1DC7C80
	0x01DC78D8 MOV X0, X20
	0x01DC78DC MOV X1, X31
	0x01DC78E0 BL 0x3C3F800
	0x01DC78E4 LDR X8, [X19 + 0x50]
	0x01DC78E8 CBZ X8, 0x1DC7C80
	0x01DC78EC LDR W9, [X8 + 0x18]
	0x01DC78F0 CMP X21, X9
	0x01DC78F4 B.CS 0x1DC7C84
	0x01DC78F8 ADD X8, X8, X21, 0x3, LSL
	0x01DC78FC LDR X0, [X8 + 0x20]
	0x01DC7900 CBZ X0, 0x1DC7C80
	0x01DC7904 MOV X1, X31
	0x01DC7908 MOV V9.16B, V0.16B
	0x01DC790C BL 0x3C3F800
	0x01DC7910 LDR X8, [X19 + 0x80]
	0x01DC7914 CBZ X8, 0x1DC7C80
	0x01DC7918 LDR W9, [X8 + 0x18]
	0x01DC791C CMP X21, X9
	0x01DC7920 B.CS 0x1DC7C84
	0x01DC7924 LDR X9, [X19 + 0xA8]
	0x01DC7928 CBZ X9, 0x1DC7C80
	0x01DC792C LDR W10, [X9 + 0x18]
	0x01DC7930 CMP X21, X10
	0x01DC7934 B.CS 0x1DC7C84
	0x01DC7938 ADD X8, X8, X21, 0x2, LSL
	0x01DC793C ADD X9, X9, X21, 0x2, LSL
	0x01DC7940 LDR V0, [X8 + 0x20]
	0x01DC7944 LDR V2, [X9 + 0x20]
	0x01DC7948 FMOV S3, W23
	0x01DC794C MOV X0, X20
	0x01DC7950 FADD S4, S0, S3
	0x01DC7954 FCMP S0, S2
	0x01DC7958 FADD S3, S2, S3
	0x01DC795C FCSEL S4, S4, S0, GT
	0x01DC7960 FCSEL S3, S2, S3, GT
	0x01DC7964 FABD S5, S0, S0
	0x01DC7968 FABD S6, S4, S4
	0x01DC796C FCMP S5, S6
	0x01DC7970 FCSEL S0, S0, S4, MI
	0x01DC7974 FCSEL S2, S2, S3, MI
	0x01DC7978 FSUB S2, S2, S0
	0x01DC797C FMUL S2, S10, S2
	0x01DC7980 FADD S2, S0, S2
	0x01DC7984 MOV V0.16B, V9.16B
	0x01DC7988 MOV X1, X31
	0x01DC798C BL 0x3C3F888
	0x01DC7990 LDR X8, [X19 + 0x50]
	0x01DC7994 CBZ X8, 0x1DC7C80
	0x01DC7998 LDR W9, [X8 + 0x18]
	0x01DC799C ADD X21, X21, 0x1
	0x01DC79A0 CMP X21, W9, SXTW
	0x01DC79A4 B.LT 0x1DC7884
	0x01DC79A8 LDR X8, [X19 + 0x58]
	0x01DC79AC CBZ X8, 0x1DC7B08
	0x01DC79B0 LDR X9, [X8 + 0x18]
	0x01DC79B4 CBZ X9, 0x1DC7B08
	0x01DC79B8 FMOV S0, 1
	0x01DC79BC FCMP S8, 0x0
	0x01DC79C0 FMOV S1, W31
	0x01DC79C4 FMIN S0, S8, S0
	0x01DC79C8 FCSEL S10, S0, S1, PL
	0x01DC79CC CMP W9, 0x1
	0x01DC79D0 B.LT 0x1DC7B08
	0x01DC79D4 ADRP X22, 0x232C000
	0x01DC79D8 LDR X22, [X22 + 0x598]
	0x01DC79DC MOV X21, X31
	0x01DC79E0 MOVZ W23, 0xC3B40000
	0x01DC79E4 CMP X21, W9, UXTW
	0x01DC79E8 B.CS 0x1DC7C84
	0x01DC79EC LDR X0, [X22]
	0x01DC79F0 ADD X8, X8, X21, 0x3, LSL
	0x01DC79F4 LDR X20, [X8 + 0x20]
	0x01DC79F8 LDR W9, [X0 + 0xE0]
	0x01DC79FC CBNZ W9, 0x1DC7A04
	0x01DC7A00 BL 0x1C16DFC
	0x01DC7A04 MOV X0, X20
	0x01DC7A08 MOV X1, X31
	0x01DC7A0C MOV X2, X31
	0x01DC7A10 BL 0x3C3883C
	0x01DC7A14 TBNZ X0, 0x0, 0x1DC7AF0
	0x01DC7A18 LDR X8, [X19 + 0x58]
	0x01DC7A1C CBZ X8, 0x1DC7C80
	0x01DC7A20 LDR W9, [X8 + 0x18]
	0x01DC7A24 CMP X21, X9
	0x01DC7A28 B.CS 0x1DC7C84
	0x01DC7A2C ADD X8, X8, X21, 0x3, LSL
	0x01DC7A30 LDR X20, [X8 + 0x20]
	0x01DC7A34 CBZ X20, 0x1DC7C80
	0x01DC7A38 MOV X0, X20
	0x01DC7A3C MOV X1, X31
	0x01DC7A40 BL 0x3C3F800

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x2613000
	009 Move X22, 0x2331000
	010 Move X23, 0x2330000
	011 Move X21, 0x2333000
	012 Move W8, [X20+2964]
	013 Move X22, [X22+3480]
	014 Move X23, [X23+1456]
	015 Move X21, [X21+464]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {68}
	021 Move X0, 0x2330000
	022 Move X0, [X0+1456]
	023 Call 0x1C17CF4
	024 Move X0, 0x232F000
	025 Move X0, [X0+3696]
	026 Call 0x1C17CF4
	027 Move X0, 0x2333000
	028 Move X0, [X0+424]
	029 Call 0x1C17CF4
	030 Move X0, 0x2333000
	031 Move X0, [X0+432]
	032 Call 0x1C17CF4
	033 Move X0, 0x2333000
	034 Move X0, [X0+440]
	035 Call 0x1C17CF4
	036 Move X0, 0x2333000
	037 Move X0, [X0+448]
	038 Call 0x1C17CF4
	039 Move X0, 0x2333000
	040 Move X0, [X0+456]
	041 Call 0x1C17CF4
	042 Move X0, 0x2333000
	043 Move X0, [X0+464]
	044 Call 0x1C17CF4
	045 Move X0, 0x2333000
	046 Move X0, [X0+472]
	047 Call 0x1C17CF4
	048 Move X0, 0x2333000
	049 Move X0, [X0+480]
	050 Call 0x1C17CF4
	051 Move X0, 0x2333000
	052 Move X0, [X0+488]
	053 Call 0x1C17CF4
	054 Move X0, 0x2333000
	055 Move X0, [X0+496]
	056 Call 0x1C17CF4
	057 Move X0, 0x2333000
	058 Move X0, [X0+504]
	059 Call 0x1C17CF4
	060 Move X0, 0x2333000
	061 Move X0, [X0+512]
	062 Call 0x1C17CF4
	063 Move X0, 0x2331000
	064 Move X0, [X0+3480]
	065 Call 0x1C17CF4
	066 Move W8, 1
	067 Move [X20+2964], W8
	068 Move X8, [X22]
	069 Move X0, [X23]
	070 Move X8, [X8+184]
	071 Move X20, [X8+8]
	072 Call 0x1C17F10
	073 Move X2, [X21]
	074 Move X1, X19
	075 Move X3, X31
	076 Move X21, X0
	077 Call Action`1<Single>..ctor, X0, X1, X2
	078 Move X0, X20
	079 Move X1, X21
	080 Move X2, X31
	081 Call Delegate.Remove, X0, X1
	082 Move X20, [X23]
	083 Compare X0, 0
	084 JumpIfEqual {102}
	085 Move X1, X20
	086 Move X21, X0
	087 Call 0x1C17E00
	088 Compare X0, 0
	089 JumpIfEqual {741}
	090 Move X8, [X22]
	091 Move X8, [X8+184]
	092 Move [X8+8], X0
	093 Move X20, [X23]
	094 Move X0, X21
	095 Move X1, X20
	096 Call 0x1C17E00
	097 Compare X0, 0
	098 JumpIfEqual {741}
	099 Move X8, [X22]
	100 Move X20, [X23]
	101 Move X8, [X8+184]
	102 Move X8, [X22]
	103 Move X8, [X8+184]
	104 Move [X8+8], X31
	105 Move X24, 0x2333000
	106 Move X21, [X8+24]
	107 Move X24, [X24+424]
	108 Move X0, X20
	109 Call 0x1C17F10
	110 Move X2, [X24]
	111 Move X1, X19
	112 Move X3, X31
	113 Move X20, X0
	114 Call Action`1<Single>..ctor, X0, X1, X2
	115 Move X0, X21
	116 Move X1, X20
	117 Move X2, X31
	118 Call Delegate.Remove, X0, X1
	119 Move X20, [X23]
	120 Compare X0, 0
	121 JumpIfEqual {139}
	122 Move X1, X20
	123 Move X21, X0
	124 Call 0x1C17E00
	125 Compare X0, 0
	126 JumpIfEqual {741}
	127 Move X8, [X22]
	128 Move X8, [X8+184]
	129 Move [X8+24], X0
	130 Move X20, [X23]
	131 Move X0, X21
	132 Move X1, X20
	133 Call 0x1C17E00
	134 Compare X0, 0
	135 JumpIfEqual {741}
	136 Move X8, [X22]
	137 Move X20, [X23]
	138 Move X8, [X8+184]
	139 Move X8, [X22]
	140 Move X8, [X8+184]
	141 Move [X8+24], X31
	142 Move X24, 0x2332000
	143 Move X21, [X8+16]
	144 Move X24, [X24+512]
	145 Move X0, X20
	146 Call 0x1C17F10
	147 Move X2, [X24]
	148 Move X1, X19
	149 Move X3, X31
	150 Move X20, X0
	151 Call Action`1<Single>..ctor, X0, X1, X2
	152 Move X0, X21
	153 Move X1, X20
	154 Move X2, X31
	155 Call Delegate.Remove, X0, X1
	156 Move X20, [X23]
	157 Compare X0, 0
	158 JumpIfEqual {176}
	159 Move X1, X20
	160 Move X21, X0
	161 Call 0x1C17E00
	162 Compare X0, 0
	163 JumpIfEqual {741}
	164 Move X8, [X22]
	165 Move X8, [X8+184]
	166 Move [X8+16], X0
	167 Move X20, [X23]
	168 Move X0, X21
	169 Move X1, X20
	170 Call 0x1C17E00
	171 Compare X0, 0
	172 JumpIfEqual {741}
	173 Move X8, [X22]
	174 Move X20, [X23]
	175 Move X8, [X8+184]
	176 Move X8, [X22]
	177 Move X8, [X8+184]
	178 Move [X8+16], X31
	179 Move X24, 0x2332000
	180 Move X21, [X8+32]
	181 Move X24, [X24+472]
	182 Move X0, X20
	183 Call 0x1C17F10
	184 Move X2, [X24]
	185 Move X1, X19
	186 Move X3, X31
	187 Move X20, X0
	188 Call Action`1<Single>..ctor, X0, X1, X2
	189 Move X0, X21
	190 Move X1, X20
	191 Move X2, X31
	192 Call Delegate.Remove, X0, X1
	193 Compare X0, 0
	194 JumpIfEqual {212}
	195 Move X21, [X23]
	196 Move X20, X0
	197 Move X1, X21
	198 Call 0x1C17E00
	199 Compare X0, 0
	200 JumpIfEqual {744}
	201 Move X8, [X22]
	202 Move X8, [X8+184]
	203 Move [X8+32], X0
	204 Move X21, [X23]
	205 Move X0, X20
	206 Move X1, X21
	207 Call 0x1C17E00
	208 Compare X0, 0
	209 JumpIfEqual {744}
	210 Move X8, [X22]
	211 Move X8, [X8+184]
	212 Move X8, [X22]
	213 Move X8, [X8+184]
	214 Move [X8+32], X31
	215 Move X23, 0x232E000
	216 Move X23, [X23+3696]
	217 Move X24, 0x2332000
	218 Move X20, [X8+168]
	219 Move X0, [X23]
	220 Move X24, [X24+448]
	221 Call 0x1C17F10
	222 Move X2, [X24]
	223 Move X1, X19
	224 Move X3, X31
	225 Move X21, X0
	226 Call Action..ctor, X0, X1, X2
	227 Move X0, X20
	228 Move X1, X21
	229 Move X2, X31
	230 Call Delegate.Remove, X0, X1
	231 Move X1, [X23]
	232 Compare X0, 0
	233 JumpIfEqual {241}
	234 Move X8, [X0]
	235 NotImplemented "Instruction CMP not yet implemented."
	236 Move X8, [X22]
	237 Move X8, [X8+184]
	238 Move [X8+168], X0
	239 Move X9, [X0]
	240 NotImplemented "Instruction CMP not yet implemented."
	241 Move X8, [X22]
	242 Move X8, [X8+184]
	243 Move [X8+168], X0
	244 Move X20, [X8+232]
	245 Move X0, X1
	246 Call 0x1C17F10
	247 Move X2, [X24]
	248 Move X1, X19
	249 Move X3, X31
	250 Move X21, X0
	251 Call Action..ctor, X0, X1, X2
	252 Move X0, X20
	253 Move X1, X21
	254 Move X2, X31
	255 Call Delegate.Remove, X0, X1
	256 Move X1, [X23]
	257 Compare X0, 0
	258 JumpIfEqual {266}
	259 Move X8, [X0]
	260 NotImplemented "Instruction CMP not yet implemented."
	261 Move X8, [X22]
	262 Move X8, [X8+184]
	263 Move [X8+232], X0
	264 Move X9, [X0]
	265 NotImplemented "Instruction CMP not yet implemented."
	266 Move X8, [X22]
	267 Move X8, [X8+184]
	268 Move [X8+232], X0
	269 Move X20, [X8+296]
	270 Move X0, X1
	271 Call 0x1C17F10
	272 Move X2, [X24]
	273 Move X1, X19
	274 Move X3, X31
	275 Move X21, X0
	276 Call Action..ctor, X0, X1, X2
	277 Move X0, X20
	278 Move X1, X21
	279 Move X2, X31
	280 Call Delegate.Remove, X0, X1
	281 Move X1, [X23]
	282 Compare X0, 0
	283 JumpIfEqual {291}
	284 Move X8, [X0]
	285 NotImplemented "Instruction CMP not yet implemented."
	286 Move X8, [X22]
	287 Move X8, [X8+184]
	288 Move [X8+296], X0
	289 Move X9, [X0]
	290 NotImplemented "Instruction CMP not yet implemented."
	291 Move X8, [X22]
	292 Move X8, [X8+184]
	293 Move [X8+296], X0
	294 Move X24, 0x2332000
	295 Move X20, [X8+176]
	296 Move X24, [X24+456]
	297 Move X0, X1
	298 Call 0x1C17F10
	299 Move X2, [X24]
	300 Move X1, X19
	301 Move X3, X31
	302 Move X21, X0
	303 Call Action..ctor, X0, X1, X2
	304 Move X0, X20
	305 Move X1, X21
	306 Move X2, X31
	307 Call Delegate.Remove, X0, X1
	308 Move X1, [X23]
	309 Compare X0, 0
	310 JumpIfEqual {318}
	311 Move X8, [X0]
	312 NotImplemented "Instruction CMP not yet implemented."
	313 Move X8, [X22]
	314 Move X8, [X8+184]
	315 Move [X8+176], X0
	316 Move X9, [X0]
	317 NotImplemented "Instruction CMP not yet implemented."
	318 Move X8, [X22]
	319 Move X8, [X8+184]
	320 Move [X8+176], X0
	321 Move X20, [X8+240]
	322 Move X0, X1
	323 Call 0x1C17F10
	324 Move X2, [X24]
	325 Move X1, X19
	326 Move X3, X31
	327 Move X21, X0
	328 Call Action..ctor, X0, X1, X2
	329 Move X0, X20
	330 Move X1, X21
	331 Move X2, X31
	332 Call Delegate.Remove, X0, X1
	333 Move X1, [X23]
	334 Compare X0, 0
	335 JumpIfEqual {343}
	336 Move X8, [X0]
	337 NotImplemented "Instruction CMP not yet implemented."
	338 Move X8, [X22]
	339 Move X8, [X8+184]
	340 Move [X8+240], X0
	341 Move X9, [X0]
	342 NotImplemented "Instruction CMP not yet implemented."
	343 Move X8, [X22]
	344 Move X8, [X8+184]
	345 Move [X8+240], X0
	346 Move X20, [X8+304]
	347 Move X0, X1
	348 Call 0x1C17F10
	349 Move X2, [X24]
	350 Move X1, X19
	351 Move X3, X31
	352 Move X21, X0
	353 Call Action..ctor, X0, X1, X2
	354 Move X0, X20
	355 Move X1, X21
	356 Move X2, X31
	357 Call Delegate.Remove, X0, X1
	358 Move X1, [X23]
	359 Compare X0, 0
	360 JumpIfEqual {368}
	361 Move X8, [X0]
	362 NotImplemented "Instruction CMP not yet implemented."
	363 Move X8, [X22]
	364 Move X8, [X8+184]
	365 Move [X8+304], X0
	366 Move X9, [X0]
	367 NotImplemented "Instruction CMP not yet implemented."
	368 Move X8, [X22]
	369 Move X8, [X8+184]
	370 Move [X8+304], X0
	371 Move X24, 0x2332000
	372 Move X20, [X8+184]
	373 Move X24, [X24+496]
	374 Move X0, X1
	375 Call 0x1C17F10
	376 Move X2, [X24]
	377 Move X1, X19
	378 Move X3, X31
	379 Move X21, X0
	380 Call Action..ctor, X0, X1, X2
	381 Move X0, X20
	382 Move X1, X21
	383 Move X2, X31
	384 Call Delegate.Remove, X0, X1
	385 Move X1, [X23]
	386 Compare X0, 0
	387 JumpIfEqual {395}
	388 Move X8, [X0]
	389 NotImplemented "Instruction CMP not yet implemented."
	390 Move X8, [X22]
	391 Move X8, [X8+184]
	392 Move [X8+184], X0
	393 Move X9, [X0]
	394 NotImplemented "Instruction CMP not yet implemented."
	395 Move X8, [X22]
	396 Move X8, [X8+184]
	397 Move [X8+184], X0
	398 Move X20, [X8+248]
	399 Move X0, X1
	400 Call 0x1C17F10
	401 Move X2, [X24]
	402 Move X1, X19
	403 Move X3, X31
	404 Move X21, X0
	405 Call Action..ctor, X0, X1, X2
	406 Move X0, X20
	407 Move X1, X21
	408 Move X2, X31
	409 Call Delegate.Remove, X0, X1
	410 Move X1, [X23]
	411 Compare X0, 0
	412 JumpIfEqual {420}
	413 Move X8, [X0]
	414 NotImplemented "Instruction CMP not yet implemented."
	415 Move X8, [X22]
	416 Move X8, [X8+184]
	417 Move [X8+248], X0
	418 Move X9, [X0]
	419 NotImplemented "Instruction CMP not yet implemented."
	420 Move X8, [X22]
	421 Move X8, [X8+184]
	422 Move [X8+248], X0
	423 Move X20, [X8+312]
	424 Move X0, X1
	425 Call 0x1C17F10
	426 Move X2, [X24]
	427 Move X1, X19
	428 Move X3, X31
	429 Move X21, X0
	430 Call Action..ctor, X0, X1, X2
	431 Move X0, X20
	432 Move X1, X21
	433 Move X2, X31
	434 Call Delegate.Remove, X0, X1
	435 Move X1, [X23]
	436 Compare X0, 0
	437 JumpIfEqual {445}
	438 Move X8, [X0]
	439 NotImplemented "Instruction CMP not yet implemented."
	440 Move X8, [X22]
	441 Move X8, [X8+184]
	442 Move [X8+312], X0
	443 Move X9, [X0]
	444 NotImplemented "Instruction CMP not yet implemented."
	445 Move X8, [X22]
	446 Move X8, [X8+184]
	447 Move [X8+312], X0
	448 Move X24, 0x2332000
	449 Move X20, [X8+192]
	450 Move X24, [X24+504]
	451 Move X0, X1
	452 Call 0x1C17F10
	453 Move X2, [X24]
	454 Move X1, X19
	455 Move X3, X31
	456 Move X21, X0
	457 Call Action..ctor, X0, X1, X2
	458 Move X0, X20
	459 Move X1, X21
	460 Move X2, X31
	461 Call Delegate.Remove, X0, X1
	462 Move X1, [X23]
	463 Compare X0, 0
	464 JumpIfEqual {472}
	465 Move X8, [X0]
	466 NotImplemented "Instruction CMP not yet implemented."
	467 Move X8, [X22]
	468 Move X8, [X8+184]
	469 Move [X8+192], X0
	470 Move X9, [X0]
	471 NotImplemented "Instruction CMP not yet implemented."
	472 Move X8, [X22]
	473 Move X8, [X8+184]
	474 Move [X8+192], X0
	475 Move X20, [X8+256]
	476 Move X0, X1
	477 Call 0x1C17F10
	478 Move X2, [X24]
	479 Move X1, X19
	480 Move X3, X31
	481 Move X21, X0
	482 Call Action..ctor, X0, X1, X2
	483 Move X0, X20
	484 Move X1, X21
	485 Move X2, X31
	486 Call Delegate.Remove, X0, X1
	487 Move X1, [X23]
	488 Compare X0, 0
	489 JumpIfEqual {497}
	490 Move X8, [X0]
	491 NotImplemented "Instruction CMP not yet implemented."
	492 Move X8, [X22]
	493 Move X8, [X8+184]
	494 Move [X8+256], X0
	495 Move X9, [X0]
	496 NotImplemented "Instruction CMP not yet implemented."
	497 Move X8, [X22]
	498 Move X8, [X8+184]
	499 Move [X8+256], X0
	500 Move X20, [X8+320]
	501 Move X0, X1
	502 Call 0x1C17F10
	503 Move X2, [X24]
	504 Move X1, X19
	505 Move X3, X31
	506 Move X21, X0
	507 Call Action..ctor, X0, X1, X2
	508 Move X0, X20
	509 Move X1, X21
	510 Move X2, X31
	511 Call Delegate.Remove, X0, X1
	512 Move X1, [X23]
	513 Compare X0, 0
	514 JumpIfEqual {522}
	515 Move X8, [X0]
	516 NotImplemented "Instruction CMP not yet implemented."
	517 Move X8, [X22]
	518 Move X8, [X8+184]
	519 Move [X8+320], X0
	520 Move X9, [X0]
	521 NotImplemented "Instruction CMP not yet implemented."
	522 Move X8, [X22]
	523 Move X8, [X8+184]
	524 Move [X8+320], X0
	525 Move X24, 0x2332000
	526 Move X20, [X8+136]
	527 Move X24, [X24+432]
	528 Move X0, X1
	529 Call 0x1C17F10
	530 Move X2, [X24]
	531 Move X1, X19
	532 Move X3, X31
	533 Move X21, X0
	534 Call Action..ctor, X0, X1, X2
	535 Move X0, X20
	536 Move X1, X21
	537 Move X2, X31
	538 Call Delegate.Remove, X0, X1
	539 Move X1, [X23]
	540 Compare X0, 0
	541 JumpIfEqual {549}
	542 Move X8, [X0]
	543 NotImplemented "Instruction CMP not yet implemented."
	544 Move X8, [X22]
	545 Move X8, [X8+184]
	546 Move [X8+136], X0
	547 Move X9, [X0]
	548 NotImplemented "Instruction CMP not yet implemented."
	549 Move X8, [X22]
	550 Move X8, [X8+184]
	551 Move [X8+136], X0
	552 Move X20, [X8+200]
	553 Move X0, X1
	554 Call 0x1C17F10
	555 Move X2, [X24]
	556 Move X1, X19
	557 Move X3, X31
	558 Move X21, X0
	559 Call Action..ctor, X0, X1, X2
	560 Move X0, X20
	561 Move X1, X21
	562 Move X2, X31
	563 Call Delegate.Remove, X0, X1
	564 Move X1, [X23]
	565 Compare X0, 0
	566 JumpIfEqual {574}
	567 Move X8, [X0]
	568 NotImplemented "Instruction CMP not yet implemented."
	569 Move X8, [X22]
	570 Move X8, [X8+184]
	571 Move [X8+200], X0
	572 Move X9, [X0]
	573 NotImplemented "Instruction CMP not yet implemented."
	574 Move X8, [X22]
	575 Move X8, [X8+184]
	576 Move [X8+200], X0
	577 Move X24, 0x2332000
	578 Move X20, [X8+144]
	579 Move X24, [X24+440]
	580 Move X0, X1
	581 Call 0x1C17F10
	582 Move X2, [X24]
	583 Move X1, X19
	584 Move X3, X31
	585 Move X21, X0
	586 Call Action..ctor, X0, X1, X2
	587 Move X0, X20
	588 Move X1, X21
	589 Move X2, X31
	590 Call Delegate.Remove, X0, X1
	591 Move X1, [X23]
	592 Compare X0, 0
	593 JumpIfEqual {601}
	594 Move X8, [X0]
	595 NotImplemented "Instruction CMP not yet implemented."
	596 Move X8, [X22]
	597 Move X8, [X8+184]
	598 Move [X8+144], X0
	599 Move X9, [X0]
	600 NotImplemented "Instruction CMP not yet implemented."
	601 Move X8, [X22]
	602 Move X8, [X8+184]
	603 Move [X8+144], X0
	604 Move X20, [X8+208]
	605 Move X0, X1
	606 Call 0x1C17F10
	607 Move X2, [X24]
	608 Move X1, X19
	609 Move X3, X31
	610 Move X21, X0
	611 Call Action..ctor, X0, X1, X2
	612 Move X0, X20
	613 Move X1, X21
	614 Move X2, X31
	615 Call Delegate.Remove, X0, X1
	616 Move X1, [X23]
	617 Compare X0, 0
	618 JumpIfEqual {626}
	619 Move X8, [X0]
	620 NotImplemented "Instruction CMP not yet implemented."
	621 Move X8, [X22]
	622 Move X8, [X8+184]
	623 Move [X8+208], X0
	624 Move X9, [X0]
	625 NotImplemented "Instruction CMP not yet implemented."
	626 Move X8, [X22]
	627 Move X8, [X8+184]
	628 Move [X8+208], X0
	629 Move X24, 0x2332000
	630 Move X20, [X8+152]
	631 Move X24, [X24+480]
	632 Move X0, X1
	633 Call 0x1C17F10
	634 Move X2, [X24]
	635 Move X1, X19
	636 Move X3, X31
	637 Move X21, X0
	638 Call Action..ctor, X0, X1, X2
	639 Move X0, X20
	640 Move X1, X21
	641 Move X2, X31
	642 Call Delegate.Remove, X0, X1
	643 Move X1, [X23]
	644 Compare X0, 0
	645 JumpIfEqual {653}
	646 Move X8, [X0]
	647 NotImplemented "Instruction CMP not yet implemented."
	648 Move X8, [X22]
	649 Move X8, [X8+184]
	650 Move [X8+152], X0
	651 Move X9, [X0]
	652 NotImplemented "Instruction CMP not yet implemented."
	653 Move X8, [X22]
	654 Move X8, [X8+184]
	655 Move [X8+152], X0
	656 Move X20, [X8+216]
	657 Move X0, X1
	658 Call 0x1C17F10
	659 Move X2, [X24]
	660 Move X1, X19
	661 Move X3, X31
	662 Move X21, X0
	663 Call Action..ctor, X0, X1, X2
	664 Move X0, X20
	665 Move X1, X21
	666 Move X2, X31
	667 Call Delegate.Remove, X0, X1
	668 Move X1, [X23]
	669 Compare X0, 0
	670 JumpIfEqual {678}
	671 Move X8, [X0]
	672 NotImplemented "Instruction CMP not yet implemented."
	673 Move X8, [X22]
	674 Move X8, [X8+184]
	675 Move [X8+216], X0
	676 Move X9, [X0]
	677 NotImplemented "Instruction CMP not yet implemented."
	678 Move X8, [X22]
	679 Move X8, [X8+184]
	680 Move [X8+216], X0
	681 Move X24, 0x2332000
	682 Move X20, [X8+160]
	683 Move X24, [X24+488]
	684 Move X0, X1
	685 Call 0x1C17F10
	686 Move X2, [X24]
	687 Move X1, X19
	688 Move X3, X31
	689 Move X21, X0
	690 Call Action..ctor, X0, X1, X2
	691 Move X0, X20
	692 Move X1, X21
	693 Move X2, X31
	694 Call Delegate.Remove, X0, X1
	695 Move X1, [X23]
	696 Compare X0, 0
	697 JumpIfEqual {705}
	698 Move X8, [X0]
	699 NotImplemented "Instruction CMP not yet implemented."
	700 Move X8, [X22]
	701 Move X8, [X8+184]
	702 Move [X8+160], X0
	703 Move X9, [X0]
	704 NotImplemented "Instruction CMP not yet implemented."
	705 Move X8, [X22]
	706 Move X8, [X8+184]
	707 Move [X8+160], X0
	708 Move X20, [X8+224]
	709 Move X0, X1
	710 Call 0x1C17F10
	711 Move X2, [X24]
	712 Move X1, X19
	713 Move X3, X31
	714 Move X21, X0
	715 Call Action..ctor, X0, X1, X2
	716 Move X0, X20
	717 Move X1, X21
	718 Move X2, X31
	719 Call Delegate.Remove, X0, X1
	720 Compare X0, 0
	721 JumpIfEqual {730}
	722 Move X1, [X23]
	723 Move X8, [X0]
	724 NotImplemented "Instruction CMP not yet implemented."
	725 Move X8, [X22]
	726 Move X8, [X8+184]
	727 Move [X8+224], X0
	728 Move X8, [X0]
	729 NotImplemented "Instruction CMP not yet implemented."
	730 Move X8, [X22]
	731 Move X8, [X8+184]
	732 Move [X8+224], X0
	733 Move X20, [X31+48]
	734 Move X19, [X31+56]
	735 Move X22, [X31+32]
	736 Move X21, [X31+40]
	737 Move X24, [X31+16]
	738 Move X23, [X31+24]
	739 Move X30, [X31+64]
	740 Return 
	741 Move X0, X21
	742 Move X1, X20
	743 Call 0x1C181E0
	744 Move X0, X20
	745 Move X1, X21
	746 Call 0x1C181E0

Method: System.Single[] GetFingerValues()

Disassembly:
	0x01DC7A44 LDR X8, [X19 + 0x58]
	0x01DC7A48 CBZ X8, 0x1DC7C80
	0x01DC7A4C LDR W9, [X8 + 0x18]
	0x01DC7A50 CMP X21, X9
	0x01DC7A54 B.CS 0x1DC7C84
	0x01DC7A58 ADD X8, X8, X21, 0x3, LSL
	0x01DC7A5C LDR X0, [X8 + 0x20]
	0x01DC7A60 CBZ X0, 0x1DC7C80
	0x01DC7A64 MOV X1, X31
	0x01DC7A68 MOV V9.16B, V0.16B
	0x01DC7A6C BL 0x3C3F800
	0x01DC7A70 LDR X8, [X19 + 0x88]
	0x01DC7A74 CBZ X8, 0x1DC7C80
	0x01DC7A78 LDR W9, [X8 + 0x18]
	0x01DC7A7C CMP X21, X9
	0x01DC7A80 B.CS 0x1DC7C84
	0x01DC7A84 LDR X9, [X19 + 0xB0]
	0x01DC7A88 CBZ X9, 0x1DC7C80
	0x01DC7A8C LDR W10, [X9 + 0x18]
	0x01DC7A90 CMP X21, X10
	0x01DC7A94 B.CS 0x1DC7C84
	0x01DC7A98 ADD X8, X8, X21, 0x2, LSL
	0x01DC7A9C ADD X9, X9, X21, 0x2, LSL
	0x01DC7AA0 LDR V0, [X8 + 0x20]
	0x01DC7AA4 LDR V2, [X9 + 0x20]
	0x01DC7AA8 FMOV S3, W23
	0x01DC7AAC MOV X0, X20
	0x01DC7AB0 FADD S4, S0, S3
	0x01DC7AB4 FCMP S0, S2
	0x01DC7AB8 FADD S3, S2, S3
	0x01DC7ABC FCSEL S4, S4, S0, GT
	0x01DC7AC0 FCSEL S3, S2, S3, GT
	0x01DC7AC4 FABD S5, S0, S0
	0x01DC7AC8 FABD S6, S4, S4
	0x01DC7ACC FCMP S5, S6
	0x01DC7AD0 FCSEL S0, S0, S4, MI
	0x01DC7AD4 FCSEL S2, S2, S3, MI
	0x01DC7AD8 FSUB S2, S2, S0
	0x01DC7ADC FMUL S2, S10, S2
	0x01DC7AE0 FADD S2, S0, S2
	0x01DC7AE4 MOV V0.16B, V9.16B
	0x01DC7AE8 MOV X1, X31
	0x01DC7AEC BL 0x3C3F888
	0x01DC7AF0 LDR X8, [X19 + 0x58]
	0x01DC7AF4 CBZ X8, 0x1DC7C80
	0x01DC7AF8 LDR W9, [X8 + 0x18]
	0x01DC7AFC ADD X21, X21, 0x1
	0x01DC7B00 CMP X21, W9, SXTW
	0x01DC7B04 B.LT 0x1DC79E4
	0x01DC7B08 LDR X8, [X19 + 0x60]
	0x01DC7B0C CBZ X8, 0x1DC7C68
	0x01DC7B10 LDR X9, [X8 + 0x18]
	0x01DC7B14 CBZ X9, 0x1DC7C68
	0x01DC7B18 FMOV S0, 1
	0x01DC7B1C FCMP S8, 0x0
	0x01DC7B20 FMOV S1, W31
	0x01DC7B24 FMIN S0, S8, S0
	0x01DC7B28 FCSEL S9, S0, S1, PL
	0x01DC7B2C CMP W9, 0x1
	0x01DC7B30 B.LT 0x1DC7C68
	0x01DC7B34 ADRP X22, 0x232C000
	0x01DC7B38 LDR X22, [X22 + 0x598]
	0x01DC7B3C MOV X21, X31
	0x01DC7B40 MOVZ W23, 0xC3B40000
	0x01DC7B44 CMP X21, W9, UXTW
	0x01DC7B48 B.CS 0x1DC7C84
	0x01DC7B4C LDR X0, [X22]
	0x01DC7B50 ADD X8, X8, X21, 0x3, LSL
	0x01DC7B54 LDR X20, [X8 + 0x20]
	0x01DC7B58 LDR W9, [X0 + 0xE0]
	0x01DC7B5C CBNZ W9, 0x1DC7B64
	0x01DC7B60 BL 0x1C16DFC
	0x01DC7B64 MOV X0, X20
	0x01DC7B68 MOV X1, X31
	0x01DC7B6C MOV X2, X31
	0x01DC7B70 BL 0x3C3883C
	0x01DC7B74 TBNZ X0, 0x0, 0x1DC7C50
	0x01DC7B78 LDR X8, [X19 + 0x60]
	0x01DC7B7C CBZ X8, 0x1DC7C80
	0x01DC7B80 LDR W9, [X8 + 0x18]
	0x01DC7B84 CMP X21, X9
	0x01DC7B88 B.CS 0x1DC7C84
	0x01DC7B8C ADD X8, X8, X21, 0x3, LSL
	0x01DC7B90 LDR X20, [X8 + 0x20]
	0x01DC7B94 CBZ X20, 0x1DC7C80
	0x01DC7B98 MOV X0, X20
	0x01DC7B9C MOV X1, X31
	0x01DC7BA0 BL 0x3C3F800
	0x01DC7BA4 LDR X8, [X19 + 0x60]
	0x01DC7BA8 CBZ X8, 0x1DC7C80
	0x01DC7BAC LDR W9, [X8 + 0x18]
	0x01DC7BB0 CMP X21, X9
	0x01DC7BB4 B.CS 0x1DC7C84
	0x01DC7BB8 ADD X8, X8, X21, 0x3, LSL
	0x01DC7BBC LDR X0, [X8 + 0x20]
	0x01DC7BC0 CBZ X0, 0x1DC7C80
	0x01DC7BC4 MOV X1, X31
	0x01DC7BC8 MOV V8.16B, V0.16B
	0x01DC7BCC BL 0x3C3F800
	0x01DC7BD0 LDR X8, [X19 + 0x90]
	0x01DC7BD4 CBZ X8, 0x1DC7C80
	0x01DC7BD8 LDR W9, [X8 + 0x18]
	0x01DC7BDC CMP X21, X9
	0x01DC7BE0 B.CS 0x1DC7C84
	0x01DC7BE4 LDR X9, [X19 + 0xB8]
	0x01DC7BE8 CBZ X9, 0x1DC7C80
	0x01DC7BEC LDR W10, [X9 + 0x18]
	0x01DC7BF0 CMP X21, X10
	0x01DC7BF4 B.CS 0x1DC7C84
	0x01DC7BF8 ADD X8, X8, X21, 0x2, LSL
	0x01DC7BFC ADD X9, X9, X21, 0x2, LSL

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x2612000
	006 Move X21, 0x232D000
	007 Move W8, [X20+2965]
	008 Move X21, [X21+1592]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x2332000
	015 Move X0, [X0+520]
	016 Call 0x1C17CF4
	017 Move X0, 0x232D000
	018 Move X0, [X0+1592]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+2965], W8
	022 Move X0, [X21]
	023 Move W1, 6
	024 Call 0x1C17D6C
	025 Move X8, [X19+32]
	026 Compare X8, 0
	027 JumpIfEqual {128}
	028 Move X21, 0x2332000
	029 Move X21, [X21+520]
	030 Move X20, X0
	031 Move X0, X8
	032 Move W1, W31
	033 Move X2, [X21]
	034 Call Dictionary`2<Int32Enum, Object>.get_Item, X0, X1
	035 Compare X0, 0
	036 JumpIfEqual {128}
	037 Move W8, [X0+17]
	038 Move S0, 1
	039 Compare W8, 0
	040 JumpIfNotEqual {47}
	041 Move W8, [X0+16]
	042 Move X9, -19775488
	043 Move V0, [X9+188]
	044 Move S1, W31
	045 NotImplemented "Instruction CMP not yet implemented."
	046 NotImplemented "Instruction FCSEL not yet implemented."
	047 Compare X20, 0
	048 JumpIfEqual {128}
	049 Move W8, [X20+24]
	050 Compare W8, 0
	051 JumpIfEqual {129}
	052 Move [X20+32], S0
	053 Move X0, [X19+32]
	054 Compare X0, 0
	055 JumpIfEqual {128}
	056 Move X2, [X21]
	057 Move W1, W31
	058 Call Dictionary`2<Int32Enum, Object>.get_Item, X0, X1
	059 Compare X0, 0
	060 JumpIfEqual {128}
	061 Move W8, [X20+24]
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move V0, [X0+20]
	064 Move [X20+36], S0
	065 Move X0, [X19+32]
	066 Compare X0, 0
	067 JumpIfEqual {128}
	068 Move X2, [X21]
	069 Move W1, W31
	070 Call Dictionary`2<Int32Enum, Object>.get_Item, X0, X1
	071 Compare X0, 0
	072 JumpIfEqual {128}
	073 Move W8, [X20+24]
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move V0, [X0+24]
	076 Move [X20+40], S0
	077 Move X0, [X19+32]
	078 Compare X0, 0
	079 JumpIfEqual {128}
	080 Move X2, [X21]
	081 Move W1, 1
	082 Call Dictionary`2<Int32Enum, Object>.get_Item, X0, X1
	083 Compare X0, 0
	084 JumpIfEqual {128}
	085 Move W8, [X0+17]
	086 Move S0, 1
	087 Compare W8, 0
	088 JumpIfNotEqual {95}
	089 Move W8, [X0+16]
	090 Move X9, -19775488
	091 Move V0, [X9+188]
	092 Move S1, W31
	093 NotImplemented "Instruction CMP not yet implemented."
	094 NotImplemented "Instruction FCSEL not yet implemented."
	095 Move W8, [X20+24]
	096 NotImplemented "Instruction CMP not yet implemented."
	097 Move [X20+44], S0
	098 Move X0, [X19+32]
	099 Compare X0, 0
	100 JumpIfEqual {128}
	101 Move X2, [X21]
	102 Move W1, 1
	103 Call Dictionary`2<Int32Enum, Object>.get_Item, X0, X1
	104 Compare X0, 0
	105 JumpIfEqual {128}
	106 Move W8, [X20+24]
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Move V0, [X0+20]
	109 Move [X20+48], S0
	110 Move X0, [X19+32]
	111 Compare X0, 0
	112 JumpIfEqual {128}
	113 Move X2, [X21]
	114 Move W1, 1
	115 Call Dictionary`2<Int32Enum, Object>.get_Item, X0, X1
	116 Compare X0, 0
	117 JumpIfEqual {128}
	118 Move W8, [X20+24]
	119 NotImplemented "Instruction CMP not yet implemented."
	120 Move V0, [X0+24]
	121 Move X0, X20
	122 Move [X20+52], S0
	123 Move X20, [X31+16]
	124 Move X19, [X31+24]
	125 Move X30, [X31+32]
	126 Move X21, [X31+40]
	127 Return X0
	128 Call 0x1C17F20
	129 Call 0x1C17F28

Method: System.Void HandleLeftTriggerValueChanged(System.Single value)

Disassembly:
	0x01DC7C2C FCMP S5, S6
	0x01DC7C30 FCSEL S0, S0, S4, MI
	0x01DC7C34 FCSEL S2, S2, S3, MI
	0x01DC7C38 FSUB S2, S2, S0
	0x01DC7C3C FMUL S2, S9, S2
	0x01DC7C40 FADD S2, S0, S2
	0x01DC7C44 MOV V0.16B, V8.16B
	0x01DC7C48 MOV X1, X31
	0x01DC7C4C BL 0x3C3F888
	0x01DC7C50 LDR X8, [X19 + 0x60]
	0x01DC7C54 CBZ X8, 0x1DC7C80
	0x01DC7C58 LDR W9, [X8 + 0x18]
	0x01DC7C5C ADD X21, X21, 0x1
	0x01DC7C60 CMP X21, W9, SXTW
	0x01DC7C64 B.LT 0x1DC7B44
	0x01DC7C68 LDP X20, X19, [X31 + 0x40]
	0x01DC7C6C LDP X22, X21, [X31 + 0x30]
	0x01DC7C70 LDP X30, X23, [X31 + 0x20]
	0x01DC7C74 LDP D9, D8, [X31 + 0x10]
	0x01DC7C78 LDR V10, [X31], #0x50
	0x01DC7C7C RET
	0x01DC7C80 BL 0x1C16F20
	0x01DC7C84 BL 0x1C16F28
	0x01DC7C88 STR D8, [X31 - 0x30]!
	0x01DC7C8C STP X30, X21, [X31 + 0x10]
	0x01DC7C90 STP X20, X19, [X31 + 0x20]
	0x01DC7C94 ADRP X21, 0x2611000
	0x01DC7C98 ADRP X20, 0x232C000
	0x01DC7C9C LDRB W8, [X21 + 0xBA3]
	0x01DC7CA0 LDR X20, [X20 + 0x970]
	0x01DC7CA4 MOV V8.16B, V0.16B
	0x01DC7CA8 MOV X19, X0
	0x01DC7CAC TBNZ X8, 0x0, 0x1DC7CC4
	0x01DC7CB0 ADRP X0, 0x232C000
	0x01DC7CB4 LDR X0, [X0 + 0x970]
	0x01DC7CB8 BL 0x1C16CF4
	0x01DC7CBC MOVZ W8, 0x1
	0x01DC7CC0 STRB W8, [X21 + 0xBA3]
	0x01DC7CC4 MOVZ W8, 0x1
	0x01DC7CC8 STRB W8, [X19 + 0x3C]

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x2612000
	006 Move W8, [X20+2966]
	007 Move V8, V0
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x2332000
	014 Move X0, [X0+520]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X20+2966], W8
	018 Move X0, [X19+32]
	019 Compare X0, 0
	020 JumpIfEqual {49}
	021 Move X8, 0x2332000
	022 Move X8, [X8+520]
	023 Move W1, W31
	024 Move X2, [X8]
	025 Call Dictionary`2<Int32Enum, Object>.get_Item, X0, X1
	026 Compare X0, 0
	027 JumpIfEqual {49}
	028 Move [X0+20], S8
	029 Move X20, [X19+40]
	030 Compare X20, 0
	031 JumpIfEqual {44}
	032 Move X0, X19
	033 Call PlayerFingerValueReceiver.GetFingerValues, X0
	034 Move X8, [X20+64]
	035 Move X3, [X20+24]
	036 Move X2, [X20+40]
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X30, [X31+8]
	040 Move X1, X0
	041 Move X0, X8
	042 Move V8, [X31+32]
	043 CallNoReturn X3
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X30, [X31+8]
	047 Move V8, [X31+32]
	048 Return 
	049 Call 0x1C17F20

Method: System.Void HandleLeftGripValueChanged(System.Single value)

Disassembly:
	0x01DC7CCC STR S8, [X19 + 0x24]
	0x01DC7CD0 LDR X0, [X20]
	0x01DC7CD4 LDR W8, [X0 + 0xE0]
	0x01DC7CD8 CBNZ W8, 0x1DC7CE0
	0x01DC7CDC BL 0x1C16DFC
	0x01DC7CE0 MOV X0, X31
	0x01DC7CE4 BL 0x3C018E4
	0x01DC7CE8 TBZ X0, 0x0, 0x1DC7CFC
	0x01DC7CEC LDP X20, X19, [X31 + 0x20]
	0x01DC7CF0 LDP X30, X21, [X31 + 0x10]
	0x01DC7CF4 LDR V8, [X31], #0x30
	0x01DC7CF8 RET
	0x01DC7CFC MOV X0, X19
	0x01DC7D00 LDP X20, X19, [X31 + 0x20]
	0x01DC7D04 LDP X30, X21, [X31 + 0x10]
	0x01DC7D08 MOV V0.16B, V8.16B
	0x01DC7D0C LDR V8, [X31], #0x30
	0x01DC7D10 B 0x1DC759C
	0x01DC7D14 MOVZ W8, 0xC3B40000
	0x01DC7D18 FMOV S4, W8
	0x01DC7D1C FCMP S0, S1
	0x01DC7D20 FADD S5, S0, S4
	0x01DC7D24 FADD S4, S1, S4
	0x01DC7D28 FCSEL S5, S5, S0, GT
	0x01DC7D2C FCSEL S4, S1, S4, GT
	0x01DC7D30 FABD S3, S0, S0
	0x01DC7D34 FABD S6, S5, S5
	0x01DC7D38 FCMP S3, S6
	0x01DC7D3C FMOV S3, 1
	0x01DC7D40 FMOV S6, W31
	0x01DC7D44 FMIN S3, S2, S3
	0x01DC7D48 FCSEL S0, S0, S5, MI
	0x01DC7D4C FCSEL S1, S1, S4, MI
	0x01DC7D50 FCMP S2, 0x0
	0x01DC7D54 FCSEL S2, S3, S6, PL
	0x01DC7D58 FSUB S1, S1, S0
	0x01DC7D5C FMUL S1, S2, S1
	0x01DC7D60 FADD S0, S0, S1
	0x01DC7D64 RET
	0x01DC7D68 LDRB W8, [X0 + 0x20]

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x2612000
	006 Move W8, [X20+2967]
	007 Move V8, V0
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x2332000
	014 Move X0, [X0+520]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X20+2967], W8
	018 Move X0, [X19+32]
	019 Compare X0, 0
	020 JumpIfEqual {49}
	021 Move X8, 0x2332000
	022 Move X8, [X8+520]
	023 Move W1, W31
	024 Move X2, [X8]
	025 Call Dictionary`2<Int32Enum, Object>.get_Item, X0, X1
	026 Compare X0, 0
	027 JumpIfEqual {49}
	028 Move [X0+24], S8
	029 Move X20, [X19+40]
	030 Compare X20, 0
	031 JumpIfEqual {44}
	032 Move X0, X19
	033 Call PlayerFingerValueReceiver.GetFingerValues, X0
	034 Move X8, [X20+64]
	035 Move X3, [X20+24]
	036 Move X2, [X20+40]
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X30, [X31+8]
	040 Move X1, X0
	041 Move X0, X8
	042 Move V8, [X31+32]
	043 CallNoReturn X3
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X30, [X31+8]
	047 Move V8, [X31+32]
	048 Return 
	049 Call 0x1C17F20

Method: System.Void HandleRightTriggerValueChanged(System.Single value)

Disassembly:
	0x01DC7D6C CBZ W8, 0x1DC7D80
	0x01DC7D70 MOVZ W8, 0x1
	0x01DC7D74 STRB W8, [X0 + 0x3D]
	0x01DC7D78 STR S0, [X0 + 0x28]
	0x01DC7D7C RET
	0x01DC7D80 B 0x1DC76D4
	0x01DC7D84 LDRB W8, [X0 + 0x20]
	0x01DC7D88 CBZ W8, 0x1DC7D9C
	0x01DC7D8C MOVZ W8, 0x1
	0x01DC7D90 STRB W8, [X0 + 0x3E]
	0x01DC7D94 STR S0, [X0 + 0x2C]
	0x01DC7D98 RET
	0x01DC7D9C B 0x1DC780C
	0x01DC7DA0 MOV X1, X31
	0x01DC7DA4 B 0x3C36C30
	0x01DC7DA8 STP X30, X19, [X31 - 0x10]!
	0x01DC7DAC MOV X19, X0
	0x01DC7DB0 LDR X0, [X0 + 0x48]
	0x01DC7DB4 CBZ X0, 0x1DC7DDC
	0x01DC7DB8 MOV W1, W31
	0x01DC7DBC MOV X2, X31
	0x01DC7DC0 BL 0x3C32410
	0x01DC7DC4 LDR X0, [X19 + 0x60]
	0x01DC7DC8 CBZ X0, 0x1DC7DDC
	0x01DC7DCC MOV W1, W31
	0x01DC7DD0 MOV X2, X31
	0x01DC7DD4 LDP X30, X19, [X31], #0x10
	0x01DC7DD8 B 0x3C32410
	0x01DC7DDC BL 0x1C16F20
	0x01DC7DE0 STP D13, D12, [X31 - 0x60]!
	0x01DC7DE4 STP D11, D10, [X31 + 0x10]
	0x01DC7DE8 STP D9, D8, [X31 + 0x20]
	0x01DC7DEC STR X30, [X31 + 0x30]
	0x01DC7DF0 STP X22, X21, [X31 + 0x40]
	0x01DC7DF4 STP X20, X19, [X31 + 0x50]
	0x01DC7DF8 ADRP X22, 0x2611000
	0x01DC7DFC ADRP X21, 0x2331000
	0x01DC7E00 LDRB W8, [X22 + 0xBA5]
	0x01DC7E04 LDR X21, [X21 + 0x220]
	0x01DC7E08 MOV V8.16B, V5.16B

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x2612000
	006 Move W8, [X20+2968]
	007 Move V8, V0
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x2332000
	014 Move X0, [X0+520]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X20+2968], W8
	018 Move X0, [X19+32]
	019 Compare X0, 0
	020 JumpIfEqual {49}
	021 Move X8, 0x2332000
	022 Move X8, [X8+520]
	023 Move W1, 1
	024 Move X2, [X8]
	025 Call Dictionary`2<Int32Enum, Object>.get_Item, X0, X1
	026 Compare X0, 0
	027 JumpIfEqual {49}
	028 Move [X0+20], S8
	029 Move X20, [X19+40]
	030 Compare X20, 0
	031 JumpIfEqual {44}
	032 Move X0, X19
	033 Call PlayerFingerValueReceiver.GetFingerValues, X0
	034 Move X8, [X20+64]
	035 Move X3, [X20+24]
	036 Move X2, [X20+40]
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X30, [X31+8]
	040 Move X1, X0
	041 Move X0, X8
	042 Move V8, [X31+32]
	043 CallNoReturn X3
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X30, [X31+8]
	047 Move V8, [X31+32]
	048 Return 
	049 Call 0x1C17F20

Method: System.Void HandleRightGripValueChanged(System.Single value)

Disassembly:
	0x01DC7E0C MOV V9.16B, V4.16B
	0x01DC7E10 MOV V10.16B, V3.16B
	0x01DC7E14 MOV V12.16B, V2.16B
	0x01DC7E18 MOV V13.16B, V1.16B
	0x01DC7E1C MOV V11.16B, V0.16B
	0x01DC7E20 MOV W20, W1
	0x01DC7E24 MOV X19, X0
	0x01DC7E28 TBNZ X8, 0x0, 0x1DC7E40
	0x01DC7E2C ADRP X0, 0x2331000
	0x01DC7E30 LDR X0, [X0 + 0x220]
	0x01DC7E34 BL 0x1C16CF4
	0x01DC7E38 MOVZ W8, 0x1
	0x01DC7E3C STRB W8, [X22 + 0xBA5]
	0x01DC7E40 LDR X0, [X21]
	0x01DC7E44 AND W21, W20, 0x1
	0x01DC7E48 BL 0x1C16F10
	0x01DC7E4C MOV X1, X31
	0x01DC7E50 MOV X20, X0
	0x01DC7E54 BL 0x33BDD8C
	0x01DC7E58 STR W31, [X20 + 0x10]
	0x01DC7E5C STR X19, [X20 + 0x28]
	0x01DC7E60 STRB W21, [X20 + 0x20]
	0x01DC7E64 STP S13, S12, [X20 + 0x40]
	0x01DC7E68 STP S10, S9, [X20 + 0x30]
	0x01DC7E6C STP S8, S11, [X20 + 0x38]
	0x01DC7E70 MOV X0, X20
	0x01DC7E74 LDP X20, X19, [X31 + 0x50]
	0x01DC7E78 LDP X22, X21, [X31 + 0x40]
	0x01DC7E7C LDR X30, [X31 + 0x30]
	0x01DC7E80 LDP D9, D8, [X31 + 0x20]
	0x01DC7E84 LDP D11, D10, [X31 + 0x10]
	0x01DC7E88 LDP D13, D12, [X31], #0x60
	0x01DC7E8C RET
	0x01DC7E90 STR X30, [X31 - 0x20]!
	0x01DC7E94 STP X20, X19, [X31 + 0x10]
	0x01DC7E98 MOV W19, W1
	0x01DC7E9C MOV X1, X31
	0x01DC7EA0 MOV X20, X0
	0x01DC7EA4 BL 0x33BDD8C
	0x01DC7EA8 STR W19, [X20 + 0x10]

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x2612000
	006 Move W8, [X20+2969]
	007 Move V8, V0
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x2332000
	014 Move X0, [X0+520]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X20+2969], W8
	018 Move X0, [X19+32]
	019 Compare X0, 0
	020 JumpIfEqual {49}
	021 Move X8, 0x2332000
	022 Move X8, [X8+520]
	023 Move W1, 1
	024 Move X2, [X8]
	025 Call Dictionary`2<Int32Enum, Object>.get_Item, X0, X1
	026 Compare X0, 0
	027 JumpIfEqual {49}
	028 Move [X0+24], S8
	029 Move X20, [X19+40]
	030 Compare X20, 0
	031 JumpIfEqual {44}
	032 Move X0, X19
	033 Call PlayerFingerValueReceiver.GetFingerValues, X0
	034 Move X8, [X20+64]
	035 Move X3, [X20+24]
	036 Move X2, [X20+40]
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X30, [X31+8]
	040 Move X1, X0
	041 Move X0, X8
	042 Move V8, [X31+32]
	043 CallNoReturn X3
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X30, [X31+8]
	047 Move V8, [X31+32]
	048 Return 
	049 Call 0x1C17F20

Method: System.Void HandleLeftThumbTouched()

Disassembly:
	0x01DC7EAC LDP X20, X19, [X31 + 0x10]
	0x01DC7EB0 LDR X30, [X31], #0x20
	0x01DC7EB4 RET
	0x01DC7EB8 MOV X1, X31
	0x01DC7EBC B 0x3C36C30
	0x01DC7EC0 RET
	0x01DC7EC4 SUB X31, X31, 0xA0
	0x01DC7EC8 STP D15, D14, [X31 + 0x20]
	0x01DC7ECC STP D13, D12, [X31 + 0x30]
	0x01DC7ED0 STP D11, D10, [X31 + 0x40]
	0x01DC7ED4 STP D9, D8, [X31 + 0x50]
	0x01DC7ED8 STR X30, [X31 + 0x60]
	0x01DC7EDC STP X24, X23, [X31 + 0x70]
	0x01DC7EE0 STP X22, X21, [X31 + 0x80]
	0x01DC7EE4 STP X20, X19, [X31 + 0x90]
	0x01DC7EE8 LDR W8, [X0 + 0x10]
	0x01DC7EEC LDR X21, [X0 + 0x28]
	0x01DC7EF0 MOV X19, X0
	0x01DC7EF4 CMP W8, 0x1
	0x01DC7EF8 B.EQ 0x1DC7F18
	0x01DC7EFC CBNZ W8, 0x1DC8310
	0x01DC7F00 LDRB W8, [X19 + 0x20]
	0x01DC7F04 MOVN W9, 0x0
	0x01DC7F08 STR W9, [X19 + 0x10]
	0x01DC7F0C CBZ W8, 0x1DC7FC4
	0x01DC7F10 CBNZ X21, 0x1DC8000
	0x01DC7F14 B 0x1DC833C
	0x01DC7F18 LDRB W8, [X19 + 0x20]
	0x01DC7F1C MOVN W9, 0x0
	0x01DC7F20 STR W9, [X19 + 0x10]
	0x01DC7F24 CBZ W8, 0x1DC8310
	0x01DC7F28 CBZ X21, 0x1DC833C
	0x01DC7F2C LDR X0, [X21 + 0x28]
	0x01DC7F30 CBZ X0, 0x1DC833C
	0x01DC7F34 LDP S1, S2, [X19 + 0x34]
	0x01DC7F38 LDR V0, [X19 + 0x30]
	0x01DC7F3C MOV X1, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2612000
	005 Move W8, [X20+2970]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x2332000
	012 Move X0, [X0+520]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2970], W8
	016 Move X0, [X19+32]
	017 Compare X0, 0
	018 JumpIfEqual {46}
	019 Move X8, 0x2332000
	020 Move X8, [X8+520]
	021 Move W1, W31
	022 Move X2, [X8]
	023 Call Dictionary`2<Int32Enum, Object>.get_Item, X0, X1
	024 Compare X0, 0
	025 JumpIfEqual {46}
	026 Move W8, 1
	027 Move [X0+16], W8
	028 Move X20, [X19+40]
	029 Compare X20, 0
	030 JumpIfEqual {42}
	031 Move X0, X19
	032 Call PlayerFingerValueReceiver.GetFingerValues, X0
	033 Move X8, [X20+64]
	034 Move X3, [X20+24]
	035 Move X2, [X20+40]
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move X1, X0
	039 Move X0, X8
	040 Move X30, [X31+32]
	041 CallNoReturn X3
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X30, [X31+32]
	045 Return 
	046 Call 0x1C17F20

Method: System.Void HandleLeftThumbUntouched()

Disassembly:
	0x01DC7F40 BL 0x1E1D760
	0x01DC7F44 ADRP X20, 0x2611000
	0x01DC7F48 LDR V8, [X19 + 0x30]
	0x01DC7F4C LDRB W8, [X20 + 0x785]
	0x01DC7F50 LDR V9, [X19 + 0x38]
	0x01DC7F54 CBNZ W8, 0x1DC7F6C
	0x01DC7F58 ADRP X0, 0x232C000
	0x01DC7F5C LDR X0, [X0 + 0x5A8]
	0x01DC7F60 BL 0x1C16CF4
	0x01DC7F64 MOVZ W8, 0x1
	0x01DC7F68 STRB W8, [X20 + 0x785]
	0x01DC7F6C ADRP X23, 0x232C000
	0x01DC7F70 LDR X23, [X23 + 0x5A8]
	0x01DC7F74 LDR X0, [X23]
	0x01DC7F78 LDR W8, [X0 + 0xE0]
	0x01DC7F7C CBNZ W8, 0x1DC7F84
	0x01DC7F80 BL 0x1C16DFC
	0x01DC7F84 ADRP X8, 0xFFFFFFFFFED23000
	0x01DC7F88 FMUL S1, S8, S8
	0x01DC7F8C FMOV S0, W31
	0x01DC7F90 LDR V12, [X8 + 0x17C]
	0x01DC7F94 ADRP X22, 0x232C000
	0x01DC7F98 FADD S1, S1, S0
	0x01DC7F9C FMUL S2, S9, S9
	0x01DC7FA0 LDR X22, [X22 + 0x5A0]
	0x01DC7FA4 FADD S1, S2, S1
	0x01DC7FA8 FSQRT S1, S1
	0x01DC7FAC FCMP S1, S12
	0x01DC7FB0 B.LE 0x1DC8078
	0x01DC7FB4 FDIV S15, S8, S1
	0x01DC7FB8 FDIV S14, S0, S1
	0x01DC7FBC FDIV S8, S9, S1
	0x01DC7FC0 B 0x1DC80A8
	0x01DC7FC4 CBZ X21, 0x1DC833C
	0x01DC7FC8 LDR X0, [X21 + 0x20]
	0x01DC7FCC CBZ X0, 0x1DC833C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2612000
	005 Move W8, [X20+2971]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x2332000
	012 Move X0, [X0+520]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2971], W8
	016 Move X0, [X19+32]
	017 Compare X0, 0
	018 JumpIfEqual {45}
	019 Move X8, 0x2332000
	020 Move X8, [X8+520]
	021 Move W1, W31
	022 Move X2, [X8]
	023 Call Dictionary`2<Int32Enum, Object>.get_Item, X0, X1
	024 Compare X0, 0
	025 JumpIfEqual {45}
	026 Move [X0+16], W31
	027 Move X20, [X19+40]
	028 Compare X20, 0
	029 JumpIfEqual {41}
	030 Move X0, X19
	031 Call PlayerFingerValueReceiver.GetFingerValues, X0
	032 Move X8, [X20+64]
	033 Move X3, [X20+24]
	034 Move X2, [X20+40]
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X1, X0
	038 Move X0, X8
	039 Move X30, [X31+32]
	040 CallNoReturn X3
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move X30, [X31+32]
	044 Return 
	045 Call 0x1C17F20

Method: System.Void HandleRightThumbTouched()

Disassembly:
	0x01DC7FD0 MOVZ W1, 0x1
	0x01DC7FD4 BL 0x1DC8340
	0x01DC7FD8 LDR X0, [X21 + 0x40]
	0x01DC7FDC CBZ X0, 0x1DC833C
	0x01DC7FE0 MOVZ W1, 0x1
	0x01DC7FE4 MOV X2, X31
	0x01DC7FE8 BL 0x3C32410
	0x01DC7FEC LDR X0, [X21 + 0x48]
	0x01DC7FF0 CBZ X0, 0x1DC833C
	0x01DC7FF4 MOV W1, W31
	0x01DC7FF8 MOV X2, X31
	0x01DC7FFC BL 0x3C32410
	0x01DC8000 LDR X0, [X21 + 0x58]
	0x01DC8004 CBZ X0, 0x1DC833C
	0x01DC8008 LDRB W8, [X19 + 0x20]
	0x01DC800C MOV X2, X31
	0x01DC8010 CMP W8, 0x0
	0x01DC8014 CSET W1, EQ
	0x01DC8018 BL 0x3C32410
	0x01DC801C LDR X0, [X21 + 0x60]
	0x01DC8020 CBZ X0, 0x1DC833C
	0x01DC8024 LDRB W1, [X19 + 0x20]
	0x01DC8028 MOV X2, X31
	0x01DC802C BL 0x3C32410
	0x01DC8030 LDR X0, [X21 + 0x30]
	0x01DC8034 CBZ X0, 0x1DC833C
	0x01DC8038 LDRB W8, [X19 + 0x20]
	0x01DC803C MOV X2, X31
	0x01DC8040 CMP W8, 0x0
	0x01DC8044 CSET W1, EQ
	0x01DC8048 BL 0x3C32410
	0x01DC804C LDR X0, [X21 + 0x38]
	0x01DC8050 CBZ X0, 0x1DC833C
	0x01DC8054 LDRB W8, [X19 + 0x20]
	0x01DC8058 MOV X2, X31
	0x01DC805C CMP W8, 0x0
	0x01DC8060 CSET W1, EQ

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2612000
	005 Move W8, [X20+2972]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x2332000
	012 Move X0, [X0+520]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2972], W8
	016 Move X0, [X19+32]
	017 Compare X0, 0
	018 JumpIfEqual {46}
	019 Move X8, 0x2331000
	020 Move X8, [X8+520]
	021 Move W1, 1
	022 Move W20, 1
	023 Move X2, [X8]
	024 Call Dictionary`2<Int32Enum, Object>.get_Item, X0, X1
	025 Compare X0, 0
	026 JumpIfEqual {46}
	027 Move [X0+16], W20
	028 Move X20, [X19+40]
	029 Compare X20, 0
	030 JumpIfEqual {42}
	031 Move X0, X19
	032 Call PlayerFingerValueReceiver.GetFingerValues, X0
	033 Move X8, [X20+64]
	034 Move X3, [X20+24]
	035 Move X2, [X20+40]
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move X1, X0
	039 Move X0, X8
	040 Move X30, [X31+32]
	041 CallNoReturn X3
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X30, [X31+32]
	045 Return 
	046 Call 0x1C17F20

Method: System.Void HandleRightThumbUntouched()

Disassembly:
	0x01DC8064 BL 0x3C32410
	0x01DC8068 MOVZ W0, 0x1
	0x01DC806C STR X31, [X19 + 0x18]
	0x01DC8070 STR W0, [X19 + 0x10]
	0x01DC8074 B 0x1DC8314
	0x01DC8078 ADRP X24, 0x2610000
	0x01DC807C LDRB W8, [X24 + 0x783]
	0x01DC8080 CBNZ W8, 0x1DC8098
	0x01DC8084 ADRP X0, 0x232B000
	0x01DC8088 LDR X0, [X0 + 0x5A0]
	0x01DC808C BL 0x1C16CF4
	0x01DC8090 MOVZ W8, 0x1
	0x01DC8094 STRB W8, [X24 + 0x783]
	0x01DC8098 LDR X8, [X22]
	0x01DC809C LDR X8, [X8 + 0xB8]
	0x01DC80A0 LDP S15, S14, [X8]
	0x01DC80A4 LDR V8, [X8 + 0x8]
	0x01DC80A8 LDR X0, [X21 + 0x48]
	0x01DC80AC CBZ X0, 0x1DC833C
	0x01DC80B0 MOV X1, X31
	0x01DC80B4 BL 0x3C32E90
	0x01DC80B8 CBZ X0, 0x1DC833C
	0x01DC80BC MOV X1, X31
	0x01DC80C0 BL 0x3C3FA04
	0x01DC80C4 LDRB W8, [X20 + 0x785]
	0x01DC80C8 MOV V11.16B, V0.16B
	0x01DC80CC MOV V13.16B, V2.16B
	0x01DC80D0 CBNZ W8, 0x1DC80E8
	0x01DC80D4 ADRP X0, 0x232B000
	0x01DC80D8 LDR X0, [X0 + 0x5A8]
	0x01DC80DC BL 0x1C16CF4
	0x01DC80E0 MOVZ W8, 0x1
	0x01DC80E4 STRB W8, [X20 + 0x785]
	0x01DC80E8 LDR X0, [X23]
	0x01DC80EC LDR W8, [X0 + 0xE0]
	0x01DC80F0 CBNZ W8, 0x1DC80F8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2611000
	005 Move W8, [X20+2973]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x2331000
	012 Move X0, [X0+520]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2973], W8
	016 Move X0, [X19+32]
	017 Compare X0, 0
	018 JumpIfEqual {45}
	019 Move X8, 0x2331000
	020 Move X8, [X8+520]
	021 Move W1, 1
	022 Move X2, [X8]
	023 Call Dictionary`2<Int32Enum, Object>.get_Item, X0, X1
	024 Compare X0, 0
	025 JumpIfEqual {45}
	026 Move [X0+16], W31
	027 Move X20, [X19+40]
	028 Compare X20, 0
	029 JumpIfEqual {41}
	030 Move X0, X19
	031 Call PlayerFingerValueReceiver.GetFingerValues, X0
	032 Move X8, [X20+64]
	033 Move X3, [X20+24]
	034 Move X2, [X20+40]
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X1, X0
	038 Move X0, X8
	039 Move X30, [X31+32]
	040 CallNoReturn X3
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move X30, [X31+32]
	044 Return 
	045 Call 0x1C17F20

Method: System.Void HandleLeftThumbPressed()

Disassembly:
	0x01DC80F4 BL 0x1C16DFC
	0x01DC80F8 FMUL S1, S11, S11
	0x01DC80FC FMOV S0, W31
	0x01DC8100 FADD S1, S1, S0
	0x01DC8104 FMUL S2, S13, S13
	0x01DC8108 FADD S1, S2, S1
	0x01DC810C FSQRT S1, S1
	0x01DC8110 FCMP S1, S12
	0x01DC8114 B.LE 0x1DC8128
	0x01DC8118 FDIV S11, S11, S1
	0x01DC811C FDIV S12, S0, S1
	0x01DC8120 FDIV S13, S13, S1
	0x01DC8124 B 0x1DC8158
	0x01DC8128 ADRP X20, 0x2610000
	0x01DC812C LDRB W8, [X20 + 0x783]
	0x01DC8130 CBNZ W8, 0x1DC8148
	0x01DC8134 ADRP X0, 0x232B000
	0x01DC8138 LDR X0, [X0 + 0x5A0]
	0x01DC813C BL 0x1C16CF4
	0x01DC8140 MOVZ W8, 0x1
	0x01DC8144 STRB W8, [X20 + 0x783]
	0x01DC8148 LDR X8, [X22]
	0x01DC814C LDR X8, [X8 + 0xB8]
	0x01DC8150 LDP S11, S12, [X8]
	0x01DC8154 LDR V13, [X8 + 0x8]
	0x01DC8158 ADRP X23, 0x2610000
	0x01DC815C LDRB W8, [X23 + 0x786]
	0x01DC8160 CBNZ W8, 0x1DC8178
	0x01DC8164 ADRP X0, 0x232B000
	0x01DC8168 LDR X0, [X0 + 0x5A0]
	0x01DC816C BL 0x1C16CF4
	0x01DC8170 MOVZ W8, 0x1
	0x01DC8174 STRB W8, [X23 + 0x786]
	0x01DC8178 LDR X8, [X22]
	0x01DC817C MOV V1.16B, V12.16B
	0x01DC8180 MOV V2.16B, V13.16B
	0x01DC8184 MOV V3.16B, V15.16B

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2611000
	005 Move W8, [X20+2974]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x2331000
	012 Move X0, [X0+520]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2974], W8
	016 Move X0, [X19+32]
	017 Compare X0, 0
	018 JumpIfEqual {46}
	019 Move X8, 0x2331000
	020 Move X8, [X8+520]
	021 Move W1, W31
	022 Move X2, [X8]
	023 Call Dictionary`2<Int32Enum, Object>.get_Item, X0, X1
	024 Compare X0, 0
	025 JumpIfEqual {46}
	026 Move W8, 1
	027 Move [X0+17], W8
	028 Move X20, [X19+40]
	029 Compare X20, 0
	030 JumpIfEqual {42}
	031 Move X0, X19
	032 Call PlayerFingerValueReceiver.GetFingerValues, X0
	033 Move X8, [X20+64]
	034 Move X3, [X20+24]
	035 Move X2, [X20+40]
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move X1, X0
	039 Move X0, X8
	040 Move X30, [X31+32]
	041 CallNoReturn X3
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X30, [X31+32]
	045 Return 
	046 Call 0x1C17F20

Method: System.Void HandleLeftThumbReleased()

Disassembly:
	0x01DC8188 LDR X8, [X8 + 0xB8]
	0x01DC818C MOV V4.16B, V14.16B
	0x01DC8190 MOV V5.16B, V8.16B
	0x01DC8194 MOV X0, X31
	0x01DC8198 LDR V0, [X8 + 0x20]
	0x01DC819C LDR X9, [X8 + 0x18]
	0x01DC81A0 STR S0, [X31 + 0x8]
	0x01DC81A4 MOV V0.16B, V11.16B
	0x01DC81A8 STR X9, [X31]
	0x01DC81AC BL 0x1DD4D78
	0x01DC81B0 LDRB W8, [X23 + 0x786]
	0x01DC81B4 LDR X20, [X21 + 0x50]
	0x01DC81B8 MOV V11.16B, V0.16B
	0x01DC81BC CBNZ W8, 0x1DC81D4
	0x01DC81C0 ADRP X0, 0x232B000
	0x01DC81C4 LDR X0, [X0 + 0x5A0]
	0x01DC81C8 BL 0x1C16CF4
	0x01DC81CC MOVZ W8, 0x1
	0x01DC81D0 STRB W8, [X23 + 0x786]
	0x01DC81D4 CBZ X20, 0x1DC833C
	0x01DC81D8 LDR X8, [X22]
	0x01DC81DC MOV X0, X20
	0x01DC81E0 MOV V3.16B, V11.16B
	0x01DC81E4 MOV X1, X31
	0x01DC81E8 LDR X8, [X8 + 0xB8]
	0x01DC81EC STR S8, [X31 + 0x6C]
	0x01DC81F0 LDP S1, S2, [X8 + 0x1C]
	0x01DC81F4 LDR V0, [X8 + 0x18]
	0x01DC81F8 BL 0x3C40678
	0x01DC81FC LDR V0, [X19 + 0x3C]
	0x01DC8200 LDR V4, [X19 + 0x40]
	0x01DC8204 LDRB W8, [X23 + 0x786]
	0x01DC8208 STR S0, [X31 + 0x68]
	0x01DC820C LDR V0, [X19 + 0x44]
	0x01DC8210 STP S0, S4, [X31 + 0x18]
	0x01DC8214 CBNZ W8, 0x1DC822C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2611000
	005 Move W8, [X20+2975]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x2331000
	012 Move X0, [X0+520]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2975], W8
	016 Move X0, [X19+32]
	017 Compare X0, 0
	018 JumpIfEqual {45}
	019 Move X8, 0x2331000
	020 Move X8, [X8+520]
	021 Move W1, W31
	022 Move X2, [X8]
	023 Call Dictionary`2<Int32Enum, Object>.get_Item, X0, X1
	024 Compare X0, 0
	025 JumpIfEqual {45}
	026 Move [X0+17], W31
	027 Move X20, [X19+40]
	028 Compare X20, 0
	029 JumpIfEqual {41}
	030 Move X0, X19
	031 Call PlayerFingerValueReceiver.GetFingerValues, X0
	032 Move X8, [X20+64]
	033 Move X3, [X20+24]
	034 Move X2, [X20+40]
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X1, X0
	038 Move X0, X8
	039 Move X30, [X31+32]
	040 CallNoReturn X3
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move X30, [X31+32]
	044 Return 
	045 Call 0x1C17F20

Method: System.Void HandleRightThumbPressed()

Disassembly:
	0x01DC8218 ADRP X0, 0x232B000
	0x01DC821C LDR X0, [X0 + 0x5A0]
	0x01DC8220 BL 0x1C16CF4
	0x01DC8224 MOVZ W8, 0x1
	0x01DC8228 STRB W8, [X23 + 0x786]
	0x01DC822C LDR X0, [X21 + 0x50]
	0x01DC8230 CBZ X0, 0x1DC833C
	0x01DC8234 LDR X8, [X22]
	0x01DC8238 MOV V8.16B, V14.16B
	0x01DC823C MOV X1, X31
	0x01DC8240 LDR X8, [X8 + 0xB8]
	0x01DC8244 LDP S9, S10, [X8 + 0x18]
	0x01DC8248 LDR V14, [X8 + 0x20]
	0x01DC824C BL 0x3C3F58C
	0x01DC8250 LDR X0, [X21 + 0x48]
	0x01DC8254 CBZ X0, 0x1DC833C
	0x01DC8258 MOV X1, X31
	0x01DC825C MOV V11.16B, V0.16B
	0x01DC8260 MOV V12.16B, V1.16B
	0x01DC8264 MOV V13.16B, V2.16B
	0x01DC8268 BL 0x3C32E90
	0x01DC826C CBZ X0, 0x1DC833C
	0x01DC8270 MOV X1, X31
	0x01DC8274 BL 0x3C3F58C
	0x01DC8278 LDR X0, [X21 + 0x50]
	0x01DC827C CBZ X0, 0x1DC833C
	0x01DC8280 LDR V6, [X31 + 0x6C]
	0x01DC8284 FMOV S3, 3.5
	0x01DC8288 FMUL S4, S15, S3
	0x01DC828C FMUL S5, S8, S3
	0x01DC8290 FMUL S3, S6, S3
	0x01DC8294 LDR V6, [X31 + 0x68]
	0x01DC8298 FSUB S2, S13, S2
	0x01DC829C FSUB S1, S12, S1
	0x01DC82A0 FSUB S0, S11, S0
	0x01DC82A4 FSUB S4, S6, S4
	0x01DC82A8 LDR V6, [X31 + 0x1C]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2611000
	005 Move W8, [X20+2976]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x2331000
	012 Move X0, [X0+520]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2976], W8
	016 Move X0, [X19+32]
	017 Compare X0, 0
	018 JumpIfEqual {46}
	019 Move X8, 0x2331000
	020 Move X8, [X8+520]
	021 Move W1, 1
	022 Move W20, 1
	023 Move X2, [X8]
	024 Call Dictionary`2<Int32Enum, Object>.get_Item, X0, X1
	025 Compare X0, 0
	026 JumpIfEqual {46}
	027 Move [X0+17], W20
	028 Move X20, [X19+40]
	029 Compare X20, 0
	030 JumpIfEqual {42}
	031 Move X0, X19
	032 Call PlayerFingerValueReceiver.GetFingerValues, X0
	033 Move X8, [X20+64]
	034 Move X3, [X20+24]
	035 Move X2, [X20+40]
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move X1, X0
	039 Move X0, X8
	040 Move X30, [X31+32]
	041 CallNoReturn X3
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X30, [X31+32]
	045 Return 
	046 Call 0x1C17F20

Method: System.Void HandleRightThumbReleased()

Disassembly:
	0x01DC82AC FADD S4, S4, S9
	0x01DC82B0 FADD S0, S4, S0
	0x01DC82B4 MOV X1, X31
	0x01DC82B8 FSUB S5, S6, S5
	0x01DC82BC LDR V6, [X31 + 0x18]
	0x01DC82C0 FADD S5, S5, S10
	0x01DC82C4 FADD S1, S5, S1
	0x01DC82C8 FSUB S3, S6, S3
	0x01DC82CC FADD S3, S3, S14
	0x01DC82D0 FADD S2, S3, S2
	0x01DC82D4 BL 0x3C3F62C
	0x01DC82D8 LDR X0, [X21 + 0x40]
	0x01DC82DC CBZ X0, 0x1DC833C
	0x01DC82E0 MOV W1, W31
	0x01DC82E4 MOV X2, X31
	0x01DC82E8 BL 0x3C32410
	0x01DC82EC LDR X0, [X21 + 0x48]
	0x01DC82F0 CBZ X0, 0x1DC833C
	0x01DC82F4 MOVZ W1, 0x1
	0x01DC82F8 MOV X2, X31
	0x01DC82FC BL 0x3C32410
	0x01DC8300 LDR X0, [X21 + 0x20]
	0x01DC8304 CBZ X0, 0x1DC833C
	0x01DC8308 MOV W1, W31
	0x01DC830C BL 0x1DC8340
	0x01DC8310 MOV W0, W31
	0x01DC8314 LDP X20, X19, [X31 + 0x90]
	0x01DC8318 LDP X22, X21, [X31 + 0x80]
	0x01DC831C LDP X24, X23, [X31 + 0x70]
	0x01DC8320 LDR X30, [X31 + 0x60]
	0x01DC8324 LDP D9, D8, [X31 + 0x50]
	0x01DC8328 LDP D11, D10, [X31 + 0x40]
	0x01DC832C LDP D13, D12, [X31 + 0x30]
	0x01DC8330 LDP D15, D14, [X31 + 0x20]
	0x01DC8334 ADD X31, X31, 0xA0
	0x01DC8338 RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2611000
	005 Move W8, [X20+2977]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x2331000
	012 Move X0, [X0+520]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2977], W8
	016 Move X0, [X19+32]
	017 Compare X0, 0
	018 JumpIfEqual {45}
	019 Move X8, 0x2331000
	020 Move X8, [X8+520]
	021 Move W1, 1
	022 Move X2, [X8]
	023 Call Dictionary`2<Int32Enum, Object>.get_Item, X0, X1
	024 Compare X0, 0
	025 JumpIfEqual {45}
	026 Move [X0+17], W31
	027 Move X20, [X19+40]
	028 Compare X20, 0
	029 JumpIfEqual {41}
	030 Move X0, X19
	031 Call PlayerFingerValueReceiver.GetFingerValues, X0
	032 Move X8, [X20+64]
	033 Move X3, [X20+24]
	034 Move X2, [X20+40]
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X1, X0
	038 Move X0, X8
	039 Move X30, [X31+32]
	040 CallNoReturn X3
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move X30, [X31+32]
	044 Return 
	045 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x01DC833C BL 0x1C16F20
	0x01DC8340 STR X30, [X31 - 0x10]!
	0x01DC8344 MOV X8, X0
	0x01DC8348 LDR X0, [X0 + 0xA8]
	0x01DC834C AND W1, W1, 0x1
	0x01DC8350 STRB W1, [X8 + 0x1C8]
	0x01DC8354 CBZ X0, 0x1DC8364
	0x01DC8358 MOV X2, X31
	0x01DC835C LDR X30, [X31], #0x10
	0x01DC8360 B 0x1E1EB4C
	0x01DC8364 BL 0x1C16F20
	0x01DC8368 LDR X0, [X0 + 0x18]
	0x01DC836C RET
	0x01DC8370 STP X30, X19, [X31 - 0x10]!
	0x01DC8374 ADRP X0, 0x232B000
	0x01DC8378 LDR X0, [X0 + 0xB40]
	0x01DC837C BL 0x1C16D08
	0x01DC8380 BL 0x1C16F10
	0x01DC8384 MOV X1, X31
	0x01DC8388 MOV X19, X0
	0x01DC838C BL 0x3380310
	0x01DC8390 ADRP X0, 0x2330000
	0x01DC8394 LDR X0, [X0 + 0x228]
	0x01DC8398 BL 0x1C16D08
	0x01DC839C MOV X1, X0
	0x01DC83A0 MOV X0, X19
	0x01DC83A4 BL 0x1C16DEC
	0x01DC83A8 LDR X0, [X0 + 0x18]
	0x01DC83AC RET
	0x01DC83B0 LDR X0, [X0 + 0xA8]
	0x01DC83B4 RET

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2611000
	007 Move X22, 0x2331000
	008 Move X20, 0x2331000
	009 Move W8, [X21+2978]
	010 Move X22, [X22+528]
	011 Move X20, [X20+536]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x2331000
	018 Move X0, [X0+536]
	019 Call 0x1C17CF4
	020 Move X0, 0x2331000
	021 Move X0, [X0+528]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+2978], W8
	025 Move X0, [X22]
	026 Call 0x1C17F10
	027 Move X1, [X20]
	028 Move X20, X0
	029 Call Dictionary`2<Int32Enum, Object>..ctor, X0
	030 Move [X19+32], X20
	031 Move X0, X19
	032 Move X20, [X31+32]
	033 Move X19, [X31+40]
	034 Move X22, [X31+16]
	035 Move X21, [X31+24]
	036 Move X1, X31
	037 Move X30, [X31+48]
	038 Call MonoBehaviour..ctor, X0
	039 Return 

