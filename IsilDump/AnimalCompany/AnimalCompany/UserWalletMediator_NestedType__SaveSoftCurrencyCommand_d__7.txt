Type: AnimalCompany.UserWalletMediator/<SaveSoftCurrencyCommand>d__7

Method: System.Void .ctor(System.Int32 <>1__state)

Disassembly:
	0x01C98B94 CBZ X0, 0x1C98C84
	0x01C98B98 MOV X1, X31
	0x01C98B9C BL 0x3AA7658
	0x01C98BA0 MOV X0, X19
	0x01C98BA4 MOV X1, X31
	0x01C98BA8 MOV V9.16B, V0.16B
	0x01C98BAC MOV V10.16B, V1.16B
	0x01C98BB0 MOV V11.16B, V2.16B
	0x01C98BB4 BL 0x3A9B084
	0x01C98BB8 CBZ X0, 0x1C98C84

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move [X20+16], W19
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X30, [X31+32]
	012 Return 

Method: System.Void System.IDisposable.Dispose()

Disassembly:
	0x01C98CE0 MOV X1, X31

ISIL:
	001 Return 

Method: System.Boolean MoveNext()

Disassembly:
	0x01C98CE4 BL 0x3A8CE2C
	0x01C98CE8 MOV W0, W31
	0x01C98CEC MOV X1, X31
	0x01C98CF0 LDR X30, [X31], #0x10
	0x01C98CF4 B 0x3A8CE90
	0x01C98CF8 ADRP X8, 0xFFFFFFFFFEE12000
	0x01C98CFC LDR V0, [X8 + 0x29]
	0x01C98D00 MOVZ W8, 0x1
	0x01C98D04 MOVZ W9, 0x42480000
	0x01C98D08 MOV X1, X31
	0x01C98D0C STRB W8, [X0 + 0x28]
	0x01C98D10 STUR V0, [X0 + 0x2C]
	0x01C98D14 STR W9, [X0 + 0x3C]
	0x01C98D18 B 0x3A9EEE4
	0x01C98D1C STP X30, X19, [X31 - 0x10]!
	0x01C98D20 LDR X8, [X0 + 0x50]
	0x01C98D24 CBZ X8, 0x1C98D34
	0x01C98D28 LDR X0, [X8]
	0x01C98D2C LDP X30, X19, [X31], #0x10
	0x01C98D30 RET
	0x01C98D34 ADRP X0, 0x22B5000
	0x01C98D38 LDR X0, [X0 + 0x490]
	0x01C98D3C BL 0x1B6E804
	0x01C98D40 BL 0x1B6EA0C
	0x01C98D44 MOV X19, X0
	0x01C98D48 ADRP X0, 0x22B6000
	0x01C98D4C LDR X0, [X0 + 0x150]
	0x01C98D50 BL 0x1B6E804
	0x01C98D54 MOV X1, X0
	0x01C98D58 MOV X0, X19
	0x01C98D5C MOV X2, X31
	0x01C98D60 BL 0x31E7550
	0x01C98D64 ADRP X0, 0x22B6000
	0x01C98D68 LDR X0, [X0 + 0x158]
	0x01C98D6C BL 0x1B6E804
	0x01C98D70 MOV X1, X0
	0x01C98D74 MOV X0, X19
	0x01C98D78 BL 0x1B6E8E8
	0x01C98D7C STP X30, X19, [X31 - 0x10]!
	0x01C98D80 LDR X8, [X0 + 0x50]
	0x01C98D84 CBZ X8, 0x1C98D94
	0x01C98D88 STR X1, [X8]
	0x01C98D8C LDP X30, X19, [X31], #0x10
	0x01C98D90 RET
	0x01C98D94 ADRP X0, 0x22B5000
	0x01C98D98 LDR X0, [X0 + 0x490]
	0x01C98D9C BL 0x1B6E804
	0x01C98DA0 BL 0x1B6EA0C
	0x01C98DA4 MOV X19, X0
	0x01C98DA8 ADRP X0, 0x22B6000
	0x01C98DAC LDR X0, [X0 + 0x150]
	0x01C98DB0 BL 0x1B6E804
	0x01C98DB4 MOV X1, X0
	0x01C98DB8 MOV X0, X19
	0x01C98DBC MOV X2, X31
	0x01C98DC0 BL 0x31E7550
	0x01C98DC4 ADRP X0, 0x22B6000
	0x01C98DC8 LDR X0, [X0 + 0x160]
	0x01C98DCC BL 0x1B6E804
	0x01C98DD0 MOV X1, X0
	0x01C98DD4 MOV X0, X19
	0x01C98DD8 BL 0x1B6E8E8
	0x01C98DDC LDP S0, S1, [X0 + 0xA8]
	0x01C98DE0 LDR V2, [X0 + 0xB0]
	0x01C98DE4 RET
	0x01C98DE8 LDR X0, [X0 + 0xC0]
	0x01C98DEC RET
	0x01C98DF0 LDRB W0, [X0 + 0x84]
	0x01C98DF4 RET
	0x01C98DF8 STP X30, X19, [X31 - 0x10]!
	0x01C98DFC MOV X1, X31
	0x01C98E00 MOV X19, X0
	0x01C98E04 BL 0x1D65284
	0x01C98E08 MOV X0, X19
	0x01C98E0C LDP X30, X19, [X31], #0x10
	0x01C98E10 B 0x1C98E14
	0x01C98E14 SUB X31, X31, 0x50
	0x01C98E18 STR D8, [X31 + 0x10]
	0x01C98E1C STR X30, [X31 + 0x18]
	0x01C98E20 STP X24, X23, [X31 + 0x20]
	0x01C98E24 STP X22, X21, [X31 + 0x30]
	0x01C98E28 STP X20, X19, [X31 + 0x40]
	0x01C98E2C ADRP X20, 0x258B000
	0x01C98E30 LDRB W8, [X20 + 0x3EC]
	0x01C98E34 MOV X19, X0
	0x01C98E38 TBNZ X8, 0x0, 0x1C98EA4
	0x01C98E3C ADRP X0, 0x22B6000
	0x01C98E40 LDR X0, [X0 + 0x168]
	0x01C98E44 BL 0x1B6E7F0
	0x01C98E48 ADRP X0, 0x22B6000
	0x01C98E4C LDR X0, [X0 + 0x170]
	0x01C98E50 BL 0x1B6E7F0
	0x01C98E54 ADRP X0, 0x22B6000
	0x01C98E58 LDR X0, [X0 + 0x178]
	0x01C98E5C BL 0x1B6E7F0
	0x01C98E60 ADRP X0, 0x22B6000
	0x01C98E64 LDR X0, [X0 + 0x180]
	0x01C98E68 BL 0x1B6E7F0
	0x01C98E6C ADRP X0, 0x22B6000
	0x01C98E70 LDR X0, [X0 + 0x188]
	0x01C98E74 BL 0x1B6E7F0
	0x01C98E78 ADRP X0, 0x22B6000
	0x01C98E7C LDR X0, [X0 + 0x190]
	0x01C98E80 BL 0x1B6E7F0
	0x01C98E84 ADRP X0, 0x22B5000
	0x01C98E88 LDR X0, [X0 + 0x478]
	0x01C98E8C BL 0x1B6E7F0
	0x01C98E90 ADRP X0, 0x22B6000
	0x01C98E94 LDR X0, [X0 + 0x198]
	0x01C98E98 BL 0x1B6E7F0
	0x01C98E9C MOVZ W8, 0x1
	0x01C98EA0 STRB W8, [X20 + 0x3EC]
	0x01C98EA4 MOV X0, X19
	0x01C98EA8 BL 0x1C9923C
	0x01C98EAC MOV X0, X19
	0x01C98EB0 BL 0x1C98D1C
	0x01C98EB4 STR X0, [X31 + 0x8]
	0x01C98EB8 ADD X0, X31, 0x8
	0x01C98EBC MOV X1, X31
	0x01C98EC0 BL 0x1D680F0
	0x01C98EC4 TBZ X0, 0x0, 0x1C98EF4
	0x01C98EC8 LDR X20, [X19 + 0x38]
	0x01C98ECC MOV X0, X19
	0x01C98ED0 BL 0x1C98D1C
	0x01C98ED4 CBZ X20, 0x1C9917C
	0x01C98ED8 ADRP X8, 0x22B6000
	0x01C98EDC LDR X8, [X8 + 0x190]
	0x01C98EE0 MOV X1, X0
	0x01C98EE4 ADD X2, X19, 0xC0
	0x01C98EE8 MOV X0, X20
	0x01C98EEC LDR X3, [X8]
	0x01C98EF0 BL 0x2113594
	0x01C98EF4 LDR X8, [X19 + 0x90]
	0x01C98EF8 CBZ X8, 0x1C98F14
	0x01C98EFC LDR W1, [X19 + 0x80]
	0x01C98F00 LDR X2, [X19 + 0xC0]
	0x01C98F04 LDR X9, [X8 + 0x18]
	0x01C98F08 LDR X0, [X8 + 0x40]
	0x01C98F0C LDR X3, [X8 + 0x28]
	0x01C98F10 BLR X9
	0x01C98F14 LDR X0, [X19 + 0x40]
	0x01C98F18 CBZ X0, 0x1C99160
	0x01C98F1C LDRB W8, [X0 + 0x60]
	0x01C98F20 TBNZ X8, 0x1, 0x1C99160
	0x01C98F24 MOV X1, X31
	0x01C98F28 BL 0x1D9E780
	0x01C98F2C TBZ X0, 0x0, 0x1C99160
	0x01C98F30 ADRP X22, 0x22B5000
	0x01C98F34 LDR X22, [X22 + 0x478]
	0x01C98F38 LDR X20, [X19 + 0xC0]
	0x01C98F3C LDR X0, [X22]
	0x01C98F40 LDR W8, [X0 + 0xE0]
	0x01C98F44 CBNZ W8, 0x1C98F4C
	0x01C98F48 BL 0x1B6E8F8
	0x01C98F4C MOV X0, X20
	0x01C98F50 MOV X1, X31
	0x01C98F54 MOV X2, X31
	0x01C98F58 BL 0x3A9D6EC
	0x01C98F5C TBZ X0, 0x0, 0x1C9905C
	0x01C98F60 LDR X23, [X19 + 0xC0]
	0x01C98F64 CBZ X23, 0x1C9917C
	0x01C98F68 ADRP X24, 0x22B6000
	0x01C98F6C LDR X20, [X23 + 0x188]
	0x01C98F70 LDR X24, [X24 + 0x170]
	0x01C98F74 LDR X0, [X24]
	0x01C98F78 BL 0x1B6EA0C
	0x01C98F7C ADRP X8, 0x22B6000
	0x01C98F80 LDR X8, [X8 + 0x180]
	0x01C98F84 MOV X1, X19
	0x01C98F88 MOV X3, X31
	0x01C98F8C MOV X21, X0
	0x01C98F90 LDR X2, [X8]
	0x01C98F94 BL 0x317DB24
	0x01C98F98 MOV X0, X20
	0x01C98F9C MOV X1, X21
	0x01C98FA0 MOV X2, X31
	0x01C98FA4 BL 0x322A750
	0x01C98FA8 CBZ X0, 0x1C98FD0
	0x01C98FAC LDR X1, [X24]
	0x01C98FB0 LDR X8, [X0]
	0x01C98FB4 CMP X8, X1
	0x01C98FB8 B.NE 0x1C98FCC
	0x01C98FBC STR X0, [X23 + 0x188]
	0x01C98FC0 LDR X8, [X0]
	0x01C98FC4 CMP X8, X1
	0x01C98FC8 B.EQ 0x1C98FD4
	0x01C98FCC BL 0x1B6ECDC
	0x01C98FD0 STR X0, [X23 + 0x188]
	0x01C98FD4 LDR X23, [X19 + 0xC0]
	0x01C98FD8 CBZ X23, 0x1C9917C
	0x01C98FDC ADRP X24, 0x22B6000
	0x01C98FE0 LDR X20, [X23 + 0x1B0]
	0x01C98FE4 LDR X24, [X24 + 0x168]
	0x01C98FE8 LDR X0, [X24]
	0x01C98FEC BL 0x1B6EA0C
	0x01C98FF0 ADRP X8, 0x22B6000
	0x01C98FF4 LDR X8, [X8 + 0x178]
	0x01C98FF8 MOV X1, X19
	0x01C98FFC MOV X3, X31
	0x01C99000 MOV X21, X0
	0x01C99004 LDR X2, [X8]
	0x01C99008 BL 0x27EC49C
	0x01C9900C MOV X0, X20
	0x01C99010 MOV X1, X21
	0x01C99014 MOV X2, X31
	0x01C99018 BL 0x322A750
	0x01C9901C CBZ X0, 0x1C99058
	0x01C99020 LDR X21, [X24]
	0x01C99024 MOV X20, X0
	0x01C99028 MOV X1, X21
	0x01C9902C BL 0x1B6E8FC
	0x01C99030 CBZ X0, 0x1C9904C
	0x01C99034 STR X0, [X23 + 0x1B0]
	0x01C99038 LDR X21, [X24]
	0x01C9903C MOV X0, X20
	0x01C99040 MOV X1, X21
	0x01C99044 BL 0x1B6E8FC
	0x01C99048 CBNZ X0, 0x1C9905C
	0x01C9904C MOV X0, X20
	0x01C99050 MOV X1, X21
	0x01C99054 BL 0x1B6ECDC
	0x01C99058 STR X31, [X23 + 0x1B0]
	0x01C9905C LDR W8, [X19 + 0x80]
	0x01C99060 CMP W8, 0x2
	0x01C99064 B.NE 0x1C99160
	0x01C99068 LDR X0, [X22]
	0x01C9906C LDR X20, [X19 + 0xC0]
	0x01C99070 LDR W8, [X0 + 0xE0]
	0x01C99074 CBNZ W8, 0x1C9907C
	0x01C99078 BL 0x1B6E8F8
	0x01C9907C MOV X0, X20
	0x01C99080 MOV X1, X31
	0x01C99084 MOV X2, X31
	0x01C99088 BL 0x3A9D6EC
	0x01C9908C FMOV S8, W31
	0x01C99090 TBZ X0, 0x0, 0x1C990F4
	0x01C99094 LDR X0, [X19 + 0xC0]
	0x01C99098 CBZ X0, 0x1C9917C
	0x01C9909C ADRP X8, 0x22B5000
	0x01C990A0 LDR X8, [X8 + 0x188]
	0x01C990A4 LDR X1, [X8]
	0x01C990A8 BL 0x208FDE8
	0x01C990AC LDR X8, [X22]
	0x01C990B0 MOV X19, X0
	0x01C990B4 LDR W9, [X8 + 0xE0]
	0x01C990B8 CBNZ W9, 0x1C990C4
	0x01C990BC MOV X0, X8
	0x01C990C0 BL 0x1B6E8F8
	0x01C990C4 MOV X0, X19
	0x01C990C8 MOV X1, X31
	0x01C990CC MOV X2, X31
	0x01C990D0 BL 0x3A9D6EC
	0x01C990D4 TBZ X0, 0x0, 0x1C990F4
	0x01C990D8 CBZ X19, 0x1C9917C
	0x01C990DC MOV X0, X19
	0x01C990E0 MOV X1, X31
	0x01C990E4 BL 0x1CA82D8
	0x01C990E8 MOV V8.16B, V0.16B
	0x01C990EC MOVZ W19, 0x1
	0x01C990F0 B 0x1C990F8
	0x01C990F4 MOV W19, W31
	0x01C990F8 ADRP X20, 0x22B5000
	0x01C990FC LDR X20, [X20 + 0x198]
	0x01C99100 LDR X0, [X20]
	0x01C99104 LDR W8, [X0 + 0xE0]
	0x01C99108 CBNZ W8, 0x1C99110
	0x01C9910C BL 0x1B6E8F8
	0x01C99110 ADRP X21, 0x258A000
	0x01C99114 LDRB W8, [X21 + 0x44F]
	0x01C99118 CBNZ W8, 0x1C99130

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x258C000
	008 Move W8, [X20+992]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {58}
	014 Move X0, 0x22B6000
	015 Move X0, [X0+3456]
	016 Call 0x1B6F7F0
	017 Move X0, 0x22B6000
	018 Move X0, [X0+1256]
	019 Call 0x1B6F7F0
	020 Move X0, 0x22B7000
	021 Move X0, [X0+240]
	022 Call 0x1B6F7F0
	023 Move X0, 0x22B6000
	024 Move X0, [X0+2024]
	025 Call 0x1B6F7F0
	026 Move X0, 0x22B6000
	027 Move X0, [X0+1576]
	028 Call 0x1B6F7F0
	029 Move X0, 0x22B7000
	030 Move X0, [X0+216]
	031 Call 0x1B6F7F0
	032 Move X0, 0x22B7000
	033 Move X0, [X0+248]
	034 Call 0x1B6F7F0
	035 Move X0, 0x22B7000
	036 Move X0, [X0+256]
	037 Call 0x1B6F7F0
	038 Move X0, 0x22B7000
	039 Move X0, [X0+264]
	040 Call 0x1B6F7F0
	041 Move X0, 0x22B7000
	042 Move X0, [X0+224]
	043 Call 0x1B6F7F0
	044 Move X0, 0x22B7000
	045 Move X0, [X0+272]
	046 Call 0x1B6F7F0
	047 Move X0, 0x22B7000
	048 Move X0, [X0+280]
	049 Call 0x1B6F7F0
	050 Move X0, 0x22B7000
	051 Move X0, [X0+288]
	052 Call 0x1B6F7F0
	053 Move X0, 0x22B7000
	054 Move X0, [X0+296]
	055 Call 0x1B6F7F0
	056 Move W8, 1
	057 Move [X20+992], W8
	058 Move W8, [X19+16]
	059 Move X20, [X19+32]
	060 NotImplemented "Instruction CMP not yet implemented."
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Compare W8, 0
	063 JumpIfNotEqual {287}
	064 Move TEMP, 0
	065 Not TEMP
	066 Move W8, TEMP
	067 Move [X19+16], W8
	068 Move X8, 0x22B7000
	069 Move X8, [X8+264]
	070 Move X0, [X8]
	071 Call 0x1B6FA0C
	072 Move X1, X31
	073 Move X21, X0
	074 Call Object..ctor, X0
	075 Move X22, 0x22B6000
	076 Move X22, [X22+1256]
	077 Move X0, [X22]
	078 Move W8, [X0+224]
	079 Compare W8, 0
	080 JumpIfNotEqual {82}
	081 Call 0x1B6F8F8
	082 Move X23, 0x258C000
	083 Move W8, [X23+1091]
	084 Compare W8, 0
	085 JumpIfNotEqual {91}
	086 Move X0, 0x22B6000
	087 Move X0, [X0+1256]
	088 Call 0x1B6F7F0
	089 Move W8, 1
	090 Move [X23+1091], W8
	091 Move X0, [X22]
	092 Move W8, [X0+224]
	093 Compare W8, 0
	094 JumpIfNotEqual {97}
	095 Call 0x1B6F8F8
	096 Move X0, [X22]
	097 Move X8, [X0+184]
	098 Move X8, [X8]
	099 Compare X8, 0
	100 JumpIfEqual {308}
	101 Move X8, [X8+168]
	102 Compare X8, 0
	103 JumpIfEqual {308}
	104 Move X8, [X8+104]
	105 Compare X8, 0
	106 JumpIfEqual {308}
	107 Move X8, [X8+72]
	108 Compare X8, 0
	109 JumpIfEqual {308}
	110 Move W8, [X8+76]
	111 Move [X19+40], W8
	112 Compare X20, 0
	113 JumpIfEqual {308}
	114 Compare X21, 0
	115 JumpIfEqual {308}
	116 Move W9, [X20+40]
	117 Subtract W8, W8, W9
	118 Move [X21+16], W8
	119 Move X8, 0x22B7000
	120 Move X8, [X8+248]
	121 Move X0, [X8]
	122 Call 0x1B6FA0C
	123 Move X8, 0x22B7000
	124 Move X8, [X8+256]
	125 Move X1, X21
	126 Move X3, X31
	127 Move X20, X0
	128 Move X2, [X8]
	129 Call 0x24F1258, X0, X1, X2
	130 Move X8, 0x22B7000
	131 Move X9, 0x22B7000
	132 Move X8, [X8+280]
	133 Move X9, [X9+240]
	134 Move X1, X20
	135 Move W2, W31
	136 Move X0, [X8]
	137 Move X4, [X9]
	138 Move X3, X31
	139 Call 0x2090930, X0, X1, X2, X3
	140 Move [X19+48], X0
	141 Compare X0, 0
	142 JumpIfEqual {308}
	143 Move [X0+20], W31
	144 Move [X19+24], X0
	145 Move W0, 1
	146 Move [X19+16], W0
	147 Move TEMP, 0
	148 Not TEMP
	149 Move W8, TEMP
	150 Move [X19+16], W8
	151 Compare X20, 0
	152 JumpIfEqual {308}
	153 Move X21, 0x22B6000
	154 Move X21, [X21+1256]
	155 Move W19, [X20+40]
	156 Move X0, [X21]
	157 Move W8, [X0+224]
	158 Compare W8, 0
	159 JumpIfNotEqual {161}
	160 Call 0x1B6F8F8
	161 Move X22, 0x258C000
	162 Move W8, [X22+1091]
	163 Compare W8, 0
	164 JumpIfNotEqual {170}
	165 Move X0, 0x22B6000
	166 Move X0, [X0+1256]
	167 Call 0x1B6F7F0
	168 Move W8, 1
	169 Move [X22+1091], W8
	170 Move X0, [X21]
	171 Move W8, [X0+224]
	172 Compare W8, 0
	173 JumpIfNotEqual {176}
	174 Call 0x1B6F8F8
	175 Move X0, [X21]
	176 Move X8, [X0+184]
	177 Move X8, [X8]
	178 Compare X8, 0
	179 JumpIfEqual {308}
	180 Move X8, [X8+168]
	181 Compare X8, 0
	182 JumpIfEqual {308}
	183 Move X8, [X8+104]
	184 Compare X8, 0
	185 JumpIfEqual {308}
	186 Move X8, [X8+72]
	187 Compare X8, 0
	188 JumpIfEqual {308}
	189 Move W8, [X8+76]
	190 NotImplemented "Instruction CMP not yet implemented."
	191 Move X8, 0x22B6000
	192 Move X8, [X8+2024]
	193 Move X0, [X8]
	194 Call 0x1B6FA0C
	195 Move X8, 0x22B7000
	196 Move X8, [X8+224]
	197 Move X1, X20
	198 Move X3, X31
	199 Move X19, X0
	200 Move X2, [X8]
	201 Call CoroutineGenerator..ctor, X0, X1, X2
	202 Move X0, X19
	203 Move W1, W31
	204 Move X2, X31
	205 Call Commands.Coroutine, X0, X1
	206 Move X8, [X21]
	207 Move X19, X0
	208 Move W9, [X8+224]
	209 Compare W9, 0
	210 JumpIfNotEqual {213}
	211 Move X0, X8
	212 Call 0x1B6F8F8
	213 Move X0, X19
	214 Move W1, W31
	215 Call App.ExecuteCommand, X0, X1
	216 Move X8, X0
	217 Move W0, W31
	218 Move [X20+32], X8
	219 Move X0, [X19+48]
	220 Move TEMP, 0
	221 Not TEMP
	222 Move W8, TEMP
	223 Move [X19+16], W8
	224 Compare X0, 0
	225 JumpIfEqual {308}
	226 Move X1, X31
	227 Call Command.get_isAborted, X0
	228 Move TEMP, X0
	229 And TEMP, TEMP, 1
	230 Compare TEMP, 1
	231 JumpIfNotEqual {288}
	232 Move X8, [X19+48]
	233 Compare X8, 0
	234 JumpIfEqual {308}
	235 Move X8, [X8+24]
	236 Compare X8, 0
	237 JumpIfEqual {308}
	238 Move X8, [X8+40]
	239 Compare X8, 0
	240 JumpIfEqual {287}
	241 Move X9, 0x22B5000
	242 Move X9, [X9+3456]
	243 Move X10, [X8]
	244 Move X9, [X9]
	245 NotImplemented "Instruction CMP not yet implemented."
	246 Move X8, [X8+144]
	247 NotImplemented "Instruction CMP not yet implemented."
	248 Move X8, 0x22B5000
	249 Move X8, [X8+1576]
	250 Move X0, [X8]
	251 Move W8, [X0+224]
	252 Compare W8, 0
	253 JumpIfNotEqual {255}
	254 Call 0x1B6F8F8
	255 Move X8, 0x22B6000
	256 Move X9, 0x22B6000
	257 Move X10, 0x22B6000
	258 Move X8, [X8+272]
	259 Move X9, [X9+288]
	260 Move X10, [X10+296]
	261 Move W4, 68
	262 Move X0, [X8]
	263 Move X2, [X9]
	264 Move X3, [X10]
	265 Move X1, X31
	266 Move X5, X31
	267 Call Log.Error, X0, X1, X2, X3, X4
	268 Move X8, 0x22B5000
	269 Move X8, [X8+1256]
	270 Move X0, [X8]
	271 Move W8, [X0+224]
	272 Compare W8, 0
	273 JumpIfNotEqual {275}
	274 Call 0x1B6F8F8
	275 Call App.get_api
	276 Move X19, X0
	277 Call App.get_apiSession
	278 Compare X19, 0
	279 JumpIfEqual {308}
	280 Move X1, X0
	281 Move X0, X19
	282 Move X2, X31
	283 Move X3, X31
	284 Move X4, X31
	285 Move X5, X31
	286 Call AnimalCompanyAPI.SessionRefreshAsync, X0, X1, X2, X3, X4
	287 Move W0, W31
	288 Compare X20, 0
	289 JumpIfEqual {308}
	290 Move W8, [X19+40]
	291 Move W0, W31
	292 Move X1, X31
	293 Move [X20+40], W8
	294 Move W8, 0x42700000
	295 Move S0, W8
	296 Call Commands.WaitForSeconds, V0, X0
	297 Move W8, 2
	298 Move [X19+24], X0
	299 Move [X19+16], W8
	300 Move W0, 1
	301 Move X20, [X31+32]
	302 Move X19, [X31+40]
	303 Move X22, [X31+16]
	304 Move X21, [X31+24]
	305 Move X30, [X31+48]
	306 Move X23, [X31+56]
	307 Return X0
	308 Call 0x1B6FA1C

Method: SpatialSys.CommandLib.Command System.Collections.Generic.IEnumerator<SpatialSys.CommandLib.Command>.get_Current()

Disassembly:
	0x01C9911C ADRP X0, 0x22B5000
	0x01C99120 LDR X0, [X0 + 0x198]

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void System.Collections.IEnumerator.Reset()

Disassembly:
	0x01C99124 BL 0x1B6E7F0
	0x01C99128 MOVZ W8, 0x1
	0x01C9912C STRB W8, [X21 + 0x44F]
	0x01C99130 LDR X0, [X20]
	0x01C99134 LDR W8, [X0 + 0xE0]
	0x01C99138 CBNZ W8, 0x1C99144
	0x01C9913C BL 0x1B6E8F8
	0x01C99140 LDR X0, [X20]
	0x01C99144 LDR X8, [X0 + 0xB8]
	0x01C99148 LDR X0, [X8]
	0x01C9914C CBZ X0, 0x1C9917C
	0x01C99150 MOV W1, W19
	0x01C99154 MOV V0.16B, V8.16B
	0x01C99158 MOV X2, X31

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0x22B5000
	004 Move X0, [X0+2448]
	005 Call 0x1B6F804
	006 Call 0x1B6FA0C
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0x22B6000
	011 Move X0, [X0+304]
	012 Call 0x1B6F804
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1B6F8E8

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x01C9915C BL 0x1CC2D28
	0x01C99160 LDP X20, X19, [X31 + 0x40]

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

