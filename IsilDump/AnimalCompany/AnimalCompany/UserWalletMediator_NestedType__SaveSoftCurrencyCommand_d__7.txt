Type: AnimalCompany.UserWalletMediator/<SaveSoftCurrencyCommand>d__7

Method: System.Void .ctor(System.Int32 <>1__state)

Disassembly:
	0x01D50A14 LDR X0, [X20]
	0x01D50A18 LDR X8, [X8 + 0xB8]
	0x01D50A1C LDR W9, [X0 + 0xE0]
	0x01D50A20 LDR X20, [X8]
	0x01D50A24 CBNZ W9, 0x1D50A2C
	0x01D50A28 BL 0x1C16DFC
	0x01D50A2C MOV X0, X20
	0x01D50A30 MOV X1, X31
	0x01D50A34 MOV X2, X31
	0x01D50A38 BL 0x3C3883C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move [X20+16], W19
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X30, [X31+32]
	012 Return 

Method: System.Void System.IDisposable.Dispose()

Disassembly:
	0x01D50B68 MOV X19, X0

ISIL:
	001 Return 

Method: System.Boolean MoveNext()

Disassembly:
	0x01D50B6C TBNZ X8, 0x0, 0x1D50B9C
	0x01D50B70 ADRP X0, 0x23A3000
	0x01D50B74 LDR X0, [X0 + 0x898]
	0x01D50B78 BL 0x1C16CF4
	0x01D50B7C ADRP X0, 0x23A4000
	0x01D50B80 LDR X0, [X0 + 0xC28]
	0x01D50B84 BL 0x1C16CF4
	0x01D50B88 ADRP X0, 0x23A4000
	0x01D50B8C LDR X0, [X0 + 0xC30]
	0x01D50B90 BL 0x1C16CF4
	0x01D50B94 MOVZ W8, 0x1
	0x01D50B98 STRB W8, [X21 + 0x7B9]
	0x01D50B9C LDR X0, [X20]
	0x01D50BA0 LDR W8, [X0 + 0xE0]
	0x01D50BA4 CBNZ W8, 0x1D50BAC
	0x01D50BA8 BL 0x1C16DFC
	0x01D50BAC ADRP X21, 0x2688000
	0x01D50BB0 LDRB W8, [X21 + 0x78B]
	0x01D50BB4 CBNZ W8, 0x1D50BCC
	0x01D50BB8 ADRP X0, 0x23A3000
	0x01D50BBC LDR X0, [X0 + 0x898]
	0x01D50BC0 BL 0x1C16CF4
	0x01D50BC4 MOVZ W8, 0x1
	0x01D50BC8 STRB W8, [X21 + 0x78B]
	0x01D50BCC LDR X0, [X20]
	0x01D50BD0 ADRP X22, 0x23A4000
	0x01D50BD4 ADRP X21, 0x23A4000
	0x01D50BD8 LDR W8, [X0 + 0xE0]
	0x01D50BDC LDR X22, [X22 + 0xC30]
	0x01D50BE0 LDR X21, [X21 + 0xC28]
	0x01D50BE4 CBNZ W8, 0x1D50BF0
	0x01D50BE8 BL 0x1C16DFC
	0x01D50BEC LDR X0, [X20]
	0x01D50BF0 LDR X8, [X0 + 0xB8]
	0x01D50BF4 LDR X8, [X8]
	0x01D50BF8 STR X8, [X19 + 0x20]
	0x01D50BFC LDR X0, [X22]
	0x01D50C00 BL 0x1C16F10
	0x01D50C04 LDR X1, [X21]
	0x01D50C08 MOV X20, X0
	0x01D50C0C BL 0x2DBDE08
	0x01D50C10 STR X20, [X19 + 0x28]
	0x01D50C14 MOV X0, X19
	0x01D50C18 LDP X20, X19, [X31 + 0x20]
	0x01D50C1C LDP X22, X21, [X31 + 0x10]
	0x01D50C20 MOV X1, X31
	0x01D50C24 LDR X30, [X31], #0x30
	0x01D50C28 B 0x3C36C30
	0x01D50C2C STR X30, [X31 - 0x20]!
	0x01D50C30 STP X20, X19, [X31 + 0x10]
	0x01D50C34 ADRP X19, 0x2688000
	0x01D50C38 ADRP X20, 0x23A4000
	0x01D50C3C LDRB W8, [X19 + 0x7BA]
	0x01D50C40 LDR X20, [X20 + 0xC18]
	0x01D50C44 TBNZ X8, 0x0, 0x1D50C5C
	0x01D50C48 ADRP X0, 0x23A4000
	0x01D50C4C LDR X0, [X0 + 0xC18]
	0x01D50C50 BL 0x1C16CF4
	0x01D50C54 MOVZ W8, 0x1
	0x01D50C58 STRB W8, [X19 + 0x7BA]
	0x01D50C5C LDR X0, [X20]
	0x01D50C60 BL 0x1C16F10
	0x01D50C64 MOV X1, X31
	0x01D50C68 MOV X19, X0
	0x01D50C6C BL 0x33BDD8C
	0x01D50C70 LDR X8, [X20]
	0x01D50C74 LDR X8, [X8 + 0xB8]
	0x01D50C78 STR X19, [X8]
	0x01D50C7C LDP X20, X19, [X31 + 0x10]
	0x01D50C80 LDR X30, [X31], #0x20
	0x01D50C84 RET
	0x01D50C88 MOV X1, X31
	0x01D50C8C B 0x33BDD8C
	0x01D50C90 SUB X31, X31, 0x30
	0x01D50C94 STP X30, X21, [X31 + 0x10]
	0x01D50C98 STP X20, X19, [X31 + 0x20]
	0x01D50C9C ADRP X21, 0x2688000
	0x01D50CA0 ADRP X20, 0x23A3000
	0x01D50CA4 LDRB W8, [X21 + 0x7BB]
	0x01D50CA8 LDR X20, [X20 + 0x648]
	0x01D50CAC MOV X19, X1
	0x01D50CB0 TBNZ X8, 0x0, 0x1D50CE0
	0x01D50CB4 ADRP X0, 0x23A3000
	0x01D50CB8 LDR X0, [X0 + 0x648]
	0x01D50CBC BL 0x1C16CF4
	0x01D50CC0 ADRP X0, 0x23A4000
	0x01D50CC4 LDR X0, [X0 + 0xC38]
	0x01D50CC8 BL 0x1C16CF4
	0x01D50CCC ADRP X0, 0x23A3000
	0x01D50CD0 LDR X0, [X0 + 0xDC8]
	0x01D50CD4 BL 0x1C16CF4
	0x01D50CD8 MOVZ W8, 0x1
	0x01D50CDC STRB W8, [X21 + 0x7BB]
	0x01D50CE0 LDR X0, [X20]
	0x01D50CE4 STR X31, [X31 + 0x8]
	0x01D50CE8 LDR W8, [X0 + 0xE0]
	0x01D50CEC CBNZ W8, 0x1D50CF4
	0x01D50CF0 BL 0x1C16DFC
	0x01D50CF4 ADRP X21, 0x2688000
	0x01D50CF8 LDRB W8, [X21 + 0x787]
	0x01D50CFC CBNZ W8, 0x1D50D14
	0x01D50D00 ADRP X0, 0x23A3000
	0x01D50D04 LDR X0, [X0 + 0x648]
	0x01D50D08 BL 0x1C16CF4
	0x01D50D0C MOVZ W8, 0x1
	0x01D50D10 STRB W8, [X21 + 0x787]
	0x01D50D14 LDR X0, [X20]
	0x01D50D18 LDR W8, [X0 + 0xE0]
	0x01D50D1C CBNZ W8, 0x1D50D28
	0x01D50D20 BL 0x1C16DFC
	0x01D50D24 LDR X0, [X20]
	0x01D50D28 LDR X8, [X0 + 0xB8]
	0x01D50D2C LDR X8, [X8]
	0x01D50D30 CBZ X8, 0x1D50DE4
	0x01D50D34 LDR X8, [X8 + 0xB8]
	0x01D50D38 CBZ X8, 0x1D50DE4
	0x01D50D3C LDR X8, [X8 + 0x50]
	0x01D50D40 CBZ X8, 0x1D50DE4
	0x01D50D44 LDR X1, [X8 + 0x50]
	0x01D50D48 MOV X0, X19
	0x01D50D4C MOV X2, X31
	0x01D50D50 BL 0x3226EF8
	0x01D50D54 TBZ X0, 0x0, 0x1D50DCC
	0x01D50D58 LDR X0, [X20]
	0x01D50D5C LDR W8, [X0 + 0xE0]
	0x01D50D60 CBNZ W8, 0x1D50D68
	0x01D50D64 BL 0x1C16DFC
	0x01D50D68 LDRB W8, [X21 + 0x787]
	0x01D50D6C CBNZ W8, 0x1D50D84
	0x01D50D70 ADRP X0, 0x23A3000
	0x01D50D74 LDR X0, [X0 + 0x648]
	0x01D50D78 BL 0x1C16CF4
	0x01D50D7C MOVZ W8, 0x1
	0x01D50D80 STRB W8, [X21 + 0x787]
	0x01D50D84 LDR X0, [X20]
	0x01D50D88 LDR W8, [X0 + 0xE0]
	0x01D50D8C CBNZ W8, 0x1D50D98
	0x01D50D90 BL 0x1C16DFC
	0x01D50D94 LDR X0, [X20]
	0x01D50D98 LDR X8, [X0 + 0xB8]
	0x01D50D9C LDR X8, [X8]
	0x01D50DA0 CBZ X8, 0x1D50DE4
	0x01D50DA4 LDR X0, [X8 + 0xD0]
	0x01D50DA8 CBZ X0, 0x1D50DE4
	0x01D50DAC ADRP X8, 0x23A4000
	0x01D50DB0 LDR X8, [X8 + 0xC38]
	0x01D50DB4 ADD X2, X31, 0x8
	0x01D50DB8 MOV X1, X19
	0x01D50DBC LDR X3, [X8]
	0x01D50DC0 BL 0x2609E34
	0x01D50DC4 EOR W8, W0, 0x1
	0x01D50DC8 B 0x1D50DD0
	0x01D50DCC MOV W8, W31
	0x01D50DD0 LDP X20, X19, [X31 + 0x20]
	0x01D50DD4 LDP X30, X21, [X31 + 0x10]
	0x01D50DD8 AND W0, W8, 0x1
	0x01D50DDC ADD X31, X31, 0x30
	0x01D50DE0 RET
	0x01D50DE4 BL 0x1C16F20
	0x01D50DE8 STR X30, [X31 - 0x20]!
	0x01D50DEC STP X20, X19, [X31 + 0x10]
	0x01D50DF0 ADRP X20, 0x2688000
	0x01D50DF4 LDRB W8, [X20 + 0x7BC]
	0x01D50DF8 MOV X19, X1
	0x01D50DFC TBNZ X8, 0x0, 0x1D50E14
	0x01D50E00 ADRP X0, 0x23A4000
	0x01D50E04 LDR X0, [X0 + 0xC40]
	0x01D50E08 BL 0x1C16CF4
	0x01D50E0C MOVZ W8, 0x1
	0x01D50E10 STRB W8, [X20 + 0x7BC]
	0x01D50E14 MOV X0, X19
	0x01D50E18 LDP X20, X19, [X31 + 0x10]
	0x01D50E1C LDR X30, [X31], #0x20
	0x01D50E20 RET
	0x01D50E24 STP X30, X21, [X31 - 0x20]!
	0x01D50E28 STP X20, X19, [X31 + 0x10]
	0x01D50E2C ADRP X21, 0x2688000
	0x01D50E30 ADRP X20, 0x23A3000
	0x01D50E34 LDRB W8, [X21 + 0x7BD]
	0x01D50E38 LDR X20, [X20 + 0x648]
	0x01D50E3C MOV X19, X1
	0x01D50E40 TBNZ X8, 0x0, 0x1D50E70
	0x01D50E44 ADRP X0, 0x23A3000
	0x01D50E48 LDR X0, [X0 + 0x648]
	0x01D50E4C BL 0x1C16CF4
	0x01D50E50 ADRP X0, 0x23A4000
	0x01D50E54 LDR X0, [X0 + 0xC48]
	0x01D50E58 BL 0x1C16CF4
	0x01D50E5C ADRP X0, 0x23A4000
	0x01D50E60 LDR X0, [X0 + 0x1F8]
	0x01D50E64 BL 0x1C16CF4
	0x01D50E68 MOVZ W8, 0x1
	0x01D50E6C STRB W8, [X21 + 0x7BD]
	0x01D50E70 LDR X0, [X20]
	0x01D50E74 LDR W8, [X0 + 0xE0]
	0x01D50E78 CBNZ W8, 0x1D50E80
	0x01D50E7C BL 0x1C16DFC
	0x01D50E80 ADRP X21, 0x2688000
	0x01D50E84 LDRB W8, [X21 + 0x787]
	0x01D50E88 CBNZ W8, 0x1D50EA0
	0x01D50E8C ADRP X0, 0x23A3000
	0x01D50E90 LDR X0, [X0 + 0x648]
	0x01D50E94 BL 0x1C16CF4
	0x01D50E98 MOVZ W8, 0x1
	0x01D50E9C STRB W8, [X21 + 0x787]
	0x01D50EA0 LDR X0, [X20]
	0x01D50EA4 LDR W8, [X0 + 0xE0]
	0x01D50EA8 CBNZ W8, 0x1D50EB4
	0x01D50EAC BL 0x1C16DFC
	0x01D50EB0 LDR X0, [X20]
	0x01D50EB4 LDR X8, [X0 + 0xB8]
	0x01D50EB8 LDR X8, [X8]
	0x01D50EBC CBZ X8, 0x1D50F70
	0x01D50EC0 LDR X0, [X8 + 0xD0]
	0x01D50EC4 CBZ X0, 0x1D50F70
	0x01D50EC8 ADRP X8, 0x23A4000
	0x01D50ECC LDR X8, [X8 + 0xC48]
	0x01D50ED0 MOV X1, X19
	0x01D50ED4 LDR X2, [X8]
	0x01D50ED8 BL 0x26098A0
	0x01D50EDC TBZ X0, 0x0, 0x1D50EF0
	0x01D50EE0 LDP X20, X19, [X31 + 0x10]
	0x01D50EE4 MOV W0, W31
	0x01D50EE8 LDP X30, X21, [X31], #0x20
	0x01D50EEC RET
	0x01D50EF0 LDR X0, [X20]
	0x01D50EF4 LDR W8, [X0 + 0xE0]
	0x01D50EF8 CBNZ W8, 0x1D50F00
	0x01D50EFC BL 0x1C16DFC
	0x01D50F00 LDRB W8, [X21 + 0x787]
	0x01D50F04 CBNZ W8, 0x1D50F1C
	0x01D50F08 ADRP X0, 0x23A3000
	0x01D50F0C LDR X0, [X0 + 0x648]
	0x01D50F10 BL 0x1C16CF4
	0x01D50F14 MOVZ W8, 0x1
	0x01D50F18 STRB W8, [X21 + 0x787]
	0x01D50F1C LDR X0, [X20]
	0x01D50F20 LDR W8, [X0 + 0xE0]
	0x01D50F24 CBNZ W8, 0x1D50F30
	0x01D50F28 BL 0x1C16DFC
	0x01D50F2C LDR X0, [X20]
	0x01D50F30 LDR X8, [X0 + 0xB8]
	0x01D50F34 LDR X8, [X8]
	0x01D50F38 CBZ X8, 0x1D50F70
	0x01D50F3C LDR X8, [X8 + 0xB8]
	0x01D50F40 CBZ X8, 0x1D50F70
	0x01D50F44 LDR X0, [X8 + 0x50]
	0x01D50F48 ADRP X8, 0x23A4000
	0x01D50F4C LDR X8, [X8 + 0x1F8]
	0x01D50F50 LDR X1, [X8]
	0x01D50F54 BL 0x265C594
	0x01D50F58 MOV X1, X0
	0x01D50F5C MOV X0, X19
	0x01D50F60 LDP X20, X19, [X31 + 0x10]
	0x01D50F64 MOV X2, X31
	0x01D50F68 LDP X30, X21, [X31], #0x20
	0x01D50F6C B 0x3226EF8
	0x01D50F70 BL 0x1C16F20
	0x01D50F74 MOV X1, X31
	0x01D50F78 B 0x33BDD8C
	0x01D50F7C STR X30, [X31 - 0x30]!
	0x01D50F80 STP X22, X21, [X31 + 0x10]
	0x01D50F84 STP X20, X19, [X31 + 0x20]
	0x01D50F88 ADRP X21, 0x2688000
	0x01D50F8C ADRP X22, 0x23A3000
	0x01D50F90 LDRB W8, [X21 + 0x7BE]
	0x01D50F94 LDR X22, [X22 + 0x648]
	0x01D50F98 MOV X19, X1
	0x01D50F9C MOV X20, X0
	0x01D50FA0 TBNZ X8, 0x0, 0x1D50FB8
	0x01D50FA4 ADRP X0, 0x23A3000
	0x01D50FA8 LDR X0, [X0 + 0x648]
	0x01D50FAC BL 0x1C16CF4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x2689000
	008 Move W8, [X20+1968]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {58}
	014 Move X0, 0x23A5000
	015 Move X0, [X0+1776]
	016 Call 0x1C17CF4
	017 Move X0, 0x23A4000
	018 Move X0, [X0+1608]
	019 Call 0x1C17CF4
	020 Move X0, 0x23A5000
	021 Move X0, [X0+2920]
	022 Call 0x1C17CF4
	023 Move X0, 0x23A4000
	024 Move X0, [X0+2392]
	025 Call 0x1C17CF4
	026 Move X0, 0x23A4000
	027 Move X0, [X0+1928]
	028 Call 0x1C17CF4
	029 Move X0, 0x23A5000
	030 Move X0, [X0+2896]
	031 Call 0x1C17CF4
	032 Move X0, 0x23A5000
	033 Move X0, [X0+2928]
	034 Call 0x1C17CF4
	035 Move X0, 0x23A5000
	036 Move X0, [X0+2936]
	037 Call 0x1C17CF4
	038 Move X0, 0x23A5000
	039 Move X0, [X0+2944]
	040 Call 0x1C17CF4
	041 Move X0, 0x23A5000
	042 Move X0, [X0+2904]
	043 Call 0x1C17CF4
	044 Move X0, 0x23A5000
	045 Move X0, [X0+2952]
	046 Call 0x1C17CF4
	047 Move X0, 0x23A5000
	048 Move X0, [X0+2960]
	049 Call 0x1C17CF4
	050 Move X0, 0x23A5000
	051 Move X0, [X0+2968]
	052 Call 0x1C17CF4
	053 Move X0, 0x23A5000
	054 Move X0, [X0+2976]
	055 Call 0x1C17CF4
	056 Move W8, 1
	057 Move [X20+1968], W8
	058 Move W8, [X19+16]
	059 Move X20, [X19+32]
	060 NotImplemented "Instruction CMP not yet implemented."
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Compare W8, 0
	063 JumpIfNotEqual {290}
	064 Move TEMP, 0
	065 Not TEMP
	066 Move W8, TEMP
	067 Move [X19+16], W8
	068 Move X8, 0x23A5000
	069 Move X8, [X8+2944]
	070 Move X0, [X8]
	071 Call 0x1C17F10
	072 Move X1, X31
	073 Move X21, X0
	074 Call Object..ctor, X0
	075 Move X22, 0x23A4000
	076 Move X22, [X22+1608]
	077 Move X0, [X22]
	078 Move W8, [X0+224]
	079 Compare W8, 0
	080 JumpIfNotEqual {82}
	081 Call 0x1C17DFC
	082 Move X23, 0x2689000
	083 Move W8, [X23+1927]
	084 Compare W8, 0
	085 JumpIfNotEqual {91}
	086 Move X0, 0x23A4000
	087 Move X0, [X0+1608]
	088 Call 0x1C17CF4
	089 Move W8, 1
	090 Move [X23+1927], W8
	091 Move X0, [X22]
	092 Move W8, [X0+224]
	093 Compare W8, 0
	094 JumpIfNotEqual {97}
	095 Call 0x1C17DFC
	096 Move X0, [X22]
	097 Move X8, [X0+184]
	098 Move X8, [X8]
	099 Compare X8, 0
	100 JumpIfEqual {311}
	101 Move X8, [X8+184]
	102 Compare X8, 0
	103 JumpIfEqual {311}
	104 Move X8, [X8+128]
	105 Compare X8, 0
	106 JumpIfEqual {311}
	107 Move X8, [X8+72]
	108 Compare X8, 0
	109 JumpIfEqual {311}
	110 Move W8, [X8+76]
	111 Move [X19+40], W8
	112 Compare X20, 0
	113 JumpIfEqual {311}
	114 Compare X21, 0
	115 JumpIfEqual {311}
	116 Move W9, [X20+40]
	117 Subtract W8, W8, W9
	118 Move [X21+16], W8
	119 Move X8, 0x23A5000
	120 Move X8, [X8+2928]
	121 Move X0, [X8]
	122 Call 0x1C17F10
	123 Move X8, 0x23A5000
	124 Move X8, [X8+2936]
	125 Move X1, X21
	126 Move X3, X31
	127 Move X20, X0
	128 Move X2, [X8]
	129 Call TaskGenerator`1<Object>..ctor, X0, X1, X2
	130 Move X8, 0x23A5000
	131 Move X9, 0x23A5000
	132 Move X8, [X8+2960]
	133 Move X9, [X9+2920]
	134 Move X1, X20
	135 Move W2, W31
	136 Move X0, [X8]
	137 Move X4, [X9]
	138 Move X3, X31
	139 Call Commands.Task, X0, X1, X2, X3
	140 Move [X19+48], X0
	141 Compare X0, 0
	142 JumpIfEqual {311}
	143 Move [X0+20], W31
	144 Move [X19+24], X0
	145 Move W0, 1
	146 Move [X19+16], W0
	147 Move TEMP, 0
	148 Not TEMP
	149 Move W8, TEMP
	150 Move [X19+16], W8
	151 Compare X20, 0
	152 JumpIfEqual {311}
	153 Move X21, 0x23A4000
	154 Move X21, [X21+1608]
	155 Move W19, [X20+40]
	156 Move X0, [X21]
	157 Move W8, [X0+224]
	158 Compare W8, 0
	159 JumpIfNotEqual {161}
	160 Call 0x1C17DFC
	161 Move X22, 0x2689000
	162 Move W8, [X22+1927]
	163 Compare W8, 0
	164 JumpIfNotEqual {170}
	165 Move X0, 0x23A4000
	166 Move X0, [X0+1608]
	167 Call 0x1C17CF4
	168 Move W8, 1
	169 Move [X22+1927], W8
	170 Move X0, [X21]
	171 Move W8, [X0+224]
	172 Compare W8, 0
	173 JumpIfNotEqual {176}
	174 Call 0x1C17DFC
	175 Move X0, [X21]
	176 Move X8, [X0+184]
	177 Move X8, [X8]
	178 Compare X8, 0
	179 JumpIfEqual {311}
	180 Move X8, [X8+184]
	181 Compare X8, 0
	182 JumpIfEqual {311}
	183 Move X8, [X8+128]
	184 Compare X8, 0
	185 JumpIfEqual {311}
	186 Move X8, [X8+72]
	187 Compare X8, 0
	188 JumpIfEqual {311}
	189 Move W8, [X8+76]
	190 NotImplemented "Instruction CMP not yet implemented."
	191 Move X8, 0x23A4000
	192 Move X8, [X8+2392]
	193 Move X0, [X8]
	194 Call 0x1C17F10
	195 Move X8, 0x23A5000
	196 Move X8, [X8+2904]
	197 Move X1, X20
	198 Move X3, X31
	199 Move X19, X0
	200 Move X2, [X8]
	201 Call CoroutineGenerator..ctor, X0, X1, X2
	202 Move X0, X19
	203 Move W1, W31
	204 Move X2, X31
	205 Call Commands.Coroutine, X0, X1
	206 Move X8, [X21]
	207 Move X19, X0
	208 Move W9, [X8+224]
	209 Compare W9, 0
	210 JumpIfNotEqual {213}
	211 Move X0, X8
	212 Call 0x1C17DFC
	213 Move X0, X19
	214 Move W1, W31
	215 Move X2, X31
	216 Call App.ExecuteCommand, X0, X1
	217 Move X8, X0
	218 Move W0, W31
	219 Move [X20+32], X8
	220 Move X0, [X19+48]
	221 Move TEMP, 0
	222 Not TEMP
	223 Move W8, TEMP
	224 Move [X19+16], W8
	225 Compare X0, 0
	226 JumpIfEqual {311}
	227 Move X1, X31
	228 Call Command.get_isAborted, X0
	229 Move TEMP, X0
	230 And TEMP, TEMP, 1
	231 Compare TEMP, 1
	232 JumpIfNotEqual {291}
	233 Move X8, [X19+48]
	234 Compare X8, 0
	235 JumpIfEqual {311}
	236 Move X8, [X8+24]
	237 Compare X8, 0
	238 JumpIfEqual {311}
	239 Move X8, [X8+40]
	240 Compare X8, 0
	241 JumpIfEqual {290}
	242 Move X9, 0x23A5000
	243 Move X9, [X9+1776]
	244 Move X10, [X8]
	245 Move X9, [X9]
	246 NotImplemented "Instruction CMP not yet implemented."
	247 Move X8, [X8+144]
	248 NotImplemented "Instruction CMP not yet implemented."
	249 Move X8, 0x23A4000
	250 Move X8, [X8+1928]
	251 Move X0, [X8]
	252 Move W8, [X0+224]
	253 Compare W8, 0
	254 JumpIfNotEqual {256}
	255 Call 0x1C17DFC
	256 Move X8, 0x23A5000
	257 Move X9, 0x23A5000
	258 Move X10, 0x23A5000
	259 Move X8, [X8+2952]
	260 Move X9, [X9+2968]
	261 Move X10, [X10+2976]
	262 Move W4, 68
	263 Move X0, [X8]
	264 Move X2, [X9]
	265 Move X3, [X10]
	266 Move X1, X31
	267 Move X5, X31
	268 Call Log.Error, X0, X1, X2, X3, X4
	269 Move X8, 0x23A4000
	270 Move X8, [X8+1608]
	271 Move X0, [X8]
	272 Move W8, [X0+224]
	273 Compare W8, 0
	274 JumpIfNotEqual {276}
	275 Call 0x1C17DFC
	276 Move X0, X31
	277 Call App.get_api
	278 Move X19, X0
	279 Move X0, X31
	280 Call App.get_apiSession
	281 Compare X19, 0
	282 JumpIfEqual {311}
	283 Move X1, X0
	284 Move X0, X19
	285 Move X2, X31
	286 Move X3, X31
	287 Move X4, X31
	288 Move X5, X31
	289 Call AnimalCompanyAPI.SessionRefreshAsync, X0, X1, X2, X3, X4
	290 Move W0, W31
	291 Compare X20, 0
	292 JumpIfEqual {311}
	293 Move W8, [X19+40]
	294 Move W0, W31
	295 Move X1, X31
	296 Move [X20+40], W8
	297 Move W8, 0x42700000
	298 Move S0, W8
	299 Call Commands.WaitForSeconds, V0, X0
	300 Move W8, 2
	301 Move [X19+24], X0
	302 Move [X19+16], W8
	303 Move W0, 1
	304 Move X20, [X31+32]
	305 Move X19, [X31+40]
	306 Move X22, [X31+16]
	307 Move X21, [X31+24]
	308 Move X30, [X31+48]
	309 Move X23, [X31+56]
	310 Return X0
	311 Call 0x1C17F20

Method: SpatialSys.CommandLib.Command System.Collections.Generic.IEnumerator<SpatialSys.CommandLib.Command>.get_Current()

Disassembly:
	0x01D50FB0 MOVZ W8, 0x1
	0x01D50FB4 STRB W8, [X21 + 0x7BE]

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void System.Collections.IEnumerator.Reset()

Disassembly:
	0x01D50FB8 LDR X0, [X22]
	0x01D50FBC LDR W8, [X0 + 0xE0]
	0x01D50FC0 CBNZ W8, 0x1D50FC8
	0x01D50FC4 BL 0x1C16DFC
	0x01D50FC8 MOV X0, X31
	0x01D50FCC BL 0x1D32AF4
	0x01D50FD0 MOV X21, X0
	0x01D50FD4 MOV X0, X31
	0x01D50FD8 BL 0x1D32B7C
	0x01D50FDC CBZ X21, 0x1D51004
	0x01D50FE0 MOV X1, X0
	0x01D50FE4 LDR X2, [X20 + 0x10]
	0x01D50FE8 MOV X0, X21
	0x01D50FEC MOV X3, X19

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0x23A4000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0x23A5000
	011 Move X0, [X0+2984]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x01D50FF0 LDP X20, X19, [X31 + 0x20]
	0x01D50FF4 LDP X22, X21, [X31 + 0x10]

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

