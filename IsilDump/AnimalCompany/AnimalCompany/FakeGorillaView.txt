Type: AnimalCompany.FakeGorillaView

Method: UnityEngine.SkinnedMeshRenderer get__headRenderer()

Disassembly:
	0x01DF531C LDR X8, [X23]
	0x01DF5320 LDR X0, [X22]
	0x01DF5324 LDR X8, [X8 + 0xB8]
	0x01DF5328 LDR X20, [X8 + 0x28]
	0x01DF532C BL 0x1C16F10
	0x01DF5330 CBZ X19, 0x1DF53BC
	0x01DF5334 LDR X8, [X19]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+176]
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move X1, X31
	006 Move X30, [X31+16]
	007 Call AvatarView.get_headRenderer, X0
	008 Return X0
	009 Call 0x1C17F20

Method: UnityEngine.Transform get__eyeLeft()

Disassembly:
	0x01DF5338 MOV X1, X19
	0x01DF533C MOV X3, X31
	0x01DF5340 MOV X21, X0
	0x01DF5344 LDR X2, [X8 + 0x290]
	0x01DF5348 BL 0x2A6BD48
	0x01DF534C MOV X0, X20
	0x01DF5350 MOV X1, X21

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+176]
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move X1, X31
	006 Move X30, [X31+16]
	007 Call AvatarView.get_eyeLeft, X0
	008 Return X0
	009 Call 0x1C17F20

Method: UnityEngine.Transform get__eyeRight()

Disassembly:
	0x01DF5354 MOV X2, X31
	0x01DF5358 BL 0x33C0DE4
	0x01DF535C CBZ X0, 0x1DF53A0
	0x01DF5360 LDR X20, [X22]
	0x01DF5364 MOV X19, X0
	0x01DF5368 MOV X1, X20
	0x01DF536C BL 0x1C16E00

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+176]
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move X1, X31
	006 Move X30, [X31+16]
	007 Call AvatarView.get_eyeRight, X0
	008 Return X0
	009 Call 0x1C17F20

Method: System.Void SetupAvatar(UnityEngine.Color color, System.Boolean isMad)

Disassembly:
	0x01DF02DC MOV X20, X0
	0x01DF02E0 ADD X8, X31, 0x8
	0x01DF02E4 MOV X0, X19
	0x01DF02E8 BL 0x1DEEE54
	0x01DF02EC LDUR V0, [X31 + 0x8]
	0x01DF02F0 LDUR V1, [X31 + 0x18]
	0x01DF02F4 LDUR V2, [X31 + 0x28]
	0x01DF02F8 LDUR V3, [X31 + 0x38]
	0x01DF02FC STP V0, V1, [X31 + 0x50]
	0x01DF0300 STP V2, V3, [X31 + 0x70]
	0x01DF0304 MOV X0, X19
	0x01DF0308 BL 0x1DEEE2C
	0x01DF030C LDR X2, [X24]
	0x01DF0310 UBFM X8, X20, 0x20, 0x3F
	0x01DF0314 FMOV S1, W8
	0x01DF0318 FSUB S0, S1, S0
	0x01DF031C ADD X0, X31, 0x50
	0x01DF0320 MOV W1, W20
	0x01DF0324 BL 0x2415D94
	0x01DF0328 B 0x1DF02C0
	0x01DF032C LDR X1, [X21]
	0x01DF0330 ADD X0, X31, 0x90
	0x01DF0334 BL 0x2C1CC18
	0x01DF0338 MOV X0, X19
	0x01DF033C BL 0x1DEEAE0
	0x01DF0340 SUB W8, W0, 0x1
	0x01DF0344 CMP W8, 0x4
	0x01DF0348 B.HI 0x1DF03A8
	0x01DF034C ADRP X9, 0xFFFFFFFFFED3D000
	0x01DF0350 ADD X9, X9, 0x96C
	0x01DF0354 ADR X10, 0x10
	0x01DF0358 LDRB W11, [X9, X8, LSL]
	0x01DF035C ADD X10, X10, X11, 0x2, LSL
	0x01DF0360 BR X10
	0x01DF0364 LDR X8, [X19]
	0x01DF0368 MOV X0, X19
	0x01DF036C LDR X9, [X8 + 0x388]
	0x01DF0370 LDR X1, [X8 + 0x390]
	0x01DF0374 BLR X9
	0x01DF0378 B 0x1DF03A8
	0x01DF037C MOV X0, X19
	0x01DF0380 BL 0x1DF1124
	0x01DF0384 B 0x1DF03A8
	0x01DF0388 MOV X0, X19
	0x01DF038C BL 0x1DF0E30
	0x01DF0390 B 0x1DF03A8
	0x01DF0394 MOV X0, X19
	0x01DF0398 BL 0x1DF0FD0
	0x01DF039C B 0x1DF03A8
	0x01DF03A0 MOV X0, X19
	0x01DF03A4 BL 0x1DF0494
	0x01DF03A8 MOV X0, X31
	0x01DF03AC BL 0x1DD6AE8
	0x01DF03B0 TBZ X0, 0x0, 0x1DF0400
	0x01DF03B4 LDR X20, [X19 + 0x198]
	0x01DF03B8 CBZ X20, 0x1DF0400
	0x01DF03BC MOV X0, X19
	0x01DF03C0 BL 0x1DEEAE0
	0x01DF03C4 ADRP X8, 0x2309000
	0x01DF03C8 LDR X8, [X8 + 0x1A8]
	0x01DF03CC MOVN X9, 0x0
	0x01DF03D0 STR W0, [X31 + 0x18]
	0x01DF03D4 ADD X0, X31, 0x8
	0x01DF03D8 LDR X8, [X8]
	0x01DF03DC MOV X1, X31
	0x01DF03E0 STP X8, X9, [X31 + 0x8]
	0x01DF03E4 BL 0x33B162C
	0x01DF03E8 LDR X8, [X20 + 0x40]
	0x01DF03EC LDR X9, [X20 + 0x18]
	0x01DF03F0 LDR X2, [X20 + 0x28]
	0x01DF03F4 MOV X1, X0
	0x01DF03F8 MOV X0, X8
	0x01DF03FC BLR X9
	0x01DF0400 LDP X20, X19, [X31 + 0x120]
	0x01DF0404 LDP X22, X21, [X31 + 0x110]
	0x01DF0408 LDP X24, X23, [X31 + 0x100]
	0x01DF040C LDP X30, X25, [X31 + 0xF0]
	0x01DF0410 LDR X29, [X31 + 0xE0]
	0x01DF0414 ADD X31, X31, 0x130
	0x01DF0418 RET
	0x01DF041C B 0x1DF042C
	0x01DF0420 B 0x1DF042C
	0x01DF0424 B 0x1DF042C
	0x01DF0428 B 0x1DF042C
	0x01DF042C CMP W1, 0x1
	0x01DF0430 B.NE 0x1DF045C
	0x01DF0434 BL 0x3EB1AD0
	0x01DF0438 LDR X8, [X0]
	0x01DF043C STR X8, [X31 + 0xE8]
	0x01DF0440 BL 0x3EB1AE0
	0x01DF0444 LDR X1, [X21]
	0x01DF0448 ADD X0, X31, 0x90
	0x01DF044C BL 0x2C1CC18
	0x01DF0450 LDR X0, [X31 + 0xE8]
	0x01DF0454 CBZ X0, 0x1DF0338
	0x01DF0458 BL 0x1C16F18
	0x01DF045C MOV X19, X0
	0x01DF0460 STR X31, [X31 + 0xE8]
	0x01DF0464 B 0x1DF046C
	0x01DF0468 MOV X19, X0
	0x01DF046C LDR X1, [X21]
	0x01DF0470 ADD X0, X31, 0x90
	0x01DF0474 BL 0x2C1CC18
	0x01DF0478 LDR X8, [X31 + 0xE8]
	0x01DF047C CBNZ X8, 0x1DF0488
	0x01DF0480 MOV X0, X19
	0x01DF0484 BL 0x1D2C690
	0x01DF0488 LDR X0, [X31 + 0xE8]
	0x01DF048C BL 0x1C16F18
	0x01DF0490 BL 0x1990590
	0x01DF0494 SUB X31, X31, 0x1B0
	0x01DF0498 STP D11, D10, [X31 + 0x130]
	0x01DF049C STP D9, D8, [X31 + 0x140]
	0x01DF04A0 STP X29, X30, [X31 + 0x150]
	0x01DF04A4 STP X28, X27, [X31 + 0x160]
	0x01DF04A8 STP X26, X25, [X31 + 0x170]
	0x01DF04AC STP X24, X23, [X31 + 0x180]
	0x01DF04B0 STP X22, X21, [X31 + 0x190]
	0x01DF04B4 STP X20, X19, [X31 + 0x1A0]
	0x01DF04B8 ADRP X20, 0x25E8000
	0x01DF04BC LDRB W8, [X20 + 0xCE3]
	0x01DF04C0 MOV X19, X0
	0x01DF04C4 TBNZ X8, 0x0, 0x1DF05FC
	0x01DF04C8 ADRP X0, 0x2308000
	0x01DF04CC LDR X0, [X0 + 0xC20]
	0x01DF04D0 BL 0x1C16CF4
	0x01DF04D4 ADRP X0, 0x2309000
	0x01DF04D8 LDR X0, [X0 + 0x170]
	0x01DF04DC BL 0x1C16CF4
	0x01DF04E0 ADRP X0, 0x2309000
	0x01DF04E4 LDR X0, [X0 + 0x1B0]
	0x01DF04E8 BL 0x1C16CF4
	0x01DF04EC ADRP X0, 0x2308000
	0x01DF04F0 LDR X0, [X0 + 0xC28]
	0x01DF04F4 BL 0x1C16CF4
	0x01DF04F8 ADRP X0, 0x2309000
	0x01DF04FC LDR X0, [X0 + 0x178]
	0x01DF0500 BL 0x1C16CF4
	0x01DF0504 ADRP X0, 0x2309000
	0x01DF0508 LDR X0, [X0 + 0x1B8]
	0x01DF050C BL 0x1C16CF4
	0x01DF0510 ADRP X0, 0x2309000
	0x01DF0514 LDR X0, [X0 + 0x180]
	0x01DF0518 BL 0x1C16CF4
	0x01DF051C ADRP X0, 0x2309000
	0x01DF0520 LDR X0, [X0 + 0x1C0]
	0x01DF0524 BL 0x1C16CF4
	0x01DF0528 ADRP X0, 0x2308000
	0x01DF052C LDR X0, [X0 + 0xC30]
	0x01DF0530 BL 0x1C16CF4
	0x01DF0534 ADRP X0, 0x2309000
	0x01DF0538 LDR X0, [X0 + 0x1C8]
	0x01DF053C BL 0x1C16CF4
	0x01DF0540 ADRP X0, 0x2309000
	0x01DF0544 LDR X0, [X0 + 0x188]
	0x01DF0548 BL 0x1C16CF4
	0x01DF054C ADRP X0, 0x2309000
	0x01DF0550 LDR X0, [X0 + 0x190]
	0x01DF0554 BL 0x1C16CF4
	0x01DF0558 ADRP X0, 0x2309000
	0x01DF055C LDR X0, [X0 + 0x1D0]
	0x01DF0560 BL 0x1C16CF4
	0x01DF0564 ADRP X0, 0x2308000
	0x01DF0568 LDR X0, [X0 + 0xC38]
	0x01DF056C BL 0x1C16CF4
	0x01DF0570 ADRP X0, 0x2309000
	0x01DF0574 LDR X0, [X0 + 0x1D8]
	0x01DF0578 BL 0x1C16CF4
	0x01DF057C ADRP X0, 0x2309000
	0x01DF0580 LDR X0, [X0 + 0x1E0]
	0x01DF0584 BL 0x1C16CF4
	0x01DF0588 ADRP X0, 0x2308000
	0x01DF058C LDR X0, [X0 + 0xCB0]
	0x01DF0590 BL 0x1C16CF4
	0x01DF0594 ADRP X0, 0x2309000
	0x01DF0598 LDR X0, [X0 + 0x1E8]
	0x01DF059C BL 0x1C16CF4
	0x01DF05A0 ADRP X0, 0x2308000
	0x01DF05A4 LDR X0, [X0 + 0xC40]
	0x01DF05A8 BL 0x1C16CF4
	0x01DF05AC ADRP X0, 0x2305000
	0x01DF05B0 LDR X0, [X0 + 0x9A0]
	0x01DF05B4 BL 0x1C16CF4
	0x01DF05B8 ADRP X0, 0x2309000
	0x01DF05BC LDR X0, [X0 + 0x1F0]
	0x01DF05C0 BL 0x1C16CF4
	0x01DF05C4 ADRP X0, 0x2309000
	0x01DF05C8 LDR X0, [X0 + 0x1F8]
	0x01DF05CC BL 0x1C16CF4
	0x01DF05D0 ADRP X0, 0x2309000
	0x01DF05D4 LDR X0, [X0 + 0x198]
	0x01DF05D8 BL 0x1C16CF4
	0x01DF05DC ADRP X0, 0x2309000
	0x01DF05E0 LDR X0, [X0 + 0x200]
	0x01DF05E4 BL 0x1C16CF4
	0x01DF05E8 ADRP X0, 0x2309000
	0x01DF05EC LDR X0, [X0 + 0x1A0]
	0x01DF05F0 BL 0x1C16CF4
	0x01DF05F4 MOVZ W8, 0x1
	0x01DF05F8 STRB W8, [X20 + 0xCE3]
	0x01DF05FC MOVI V0.2D, 0x0
	0x01DF0600 STR X31, [X31 + 0x120]
	0x01DF0604 STP X31, X31, [X31 + 0x90]
	0x01DF0608 STP X31, X31, [X31 + 0x80]
	0x01DF060C STP X31, X31, [X31 + 0x60]
	0x01DF0610 STR X31, [X31 + 0x70]
	0x01DF0614 STP V0, V0, [X31 + 0x100]

ISIL:
	001 Move [X31-80], D11
	002 Move [X31-72], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X21, 0x25E9000
	011 Move X22, 0x2306000
	012 Move X20, 0x2306000
	013 Move W8, [X21+3310]
	014 Move X22, [X22+800]
	015 Move X20, [X20+792]
	016 Move V8, V3
	017 Move V9, V2
	018 Move V10, V1
	019 Move V11, V0
	020 Move X19, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {69}
	025 Move X0, 0x230A000
	026 Move X0, [X0+256]
	027 Call 0x1C17CF4
	028 Move X0, 0x230A000
	029 Move X0, [X0+264]
	030 Call 0x1C17CF4
	031 Move X0, 0x230A000
	032 Move X0, [X0+272]
	033 Call 0x1C17CF4
	034 Move X0, 0x2305000
	035 Move X0, [X0+2560]
	036 Call 0x1C17CF4
	037 Move X0, 0x2304000
	038 Move X0, [X0+2304]
	039 Call 0x1C17CF4
	040 Move X0, 0x2306000
	041 Move X0, [X0+792]
	042 Call 0x1C17CF4
	043 Move X0, 0x2306000
	044 Move X0, [X0+672]
	045 Call 0x1C17CF4
	046 Move X0, 0x2306000
	047 Move X0, [X0+800]
	048 Call 0x1C17CF4
	049 Move X0, 0x2306000
	050 Move X0, [X0+2328]
	051 Call 0x1C17CF4
	052 Move X0, 0x2306000
	053 Move X0, [X0+2336]
	054 Call 0x1C17CF4
	055 Move X0, 0x2306000
	056 Move X0, [X0+2352]
	057 Call 0x1C17CF4
	058 Move X0, 0x2306000
	059 Move X0, [X0+2368]
	060 Call 0x1C17CF4
	061 Move X0, 0x2306000
	062 Move X0, [X0+2384]
	063 Call 0x1C17CF4
	064 Move X0, 0x2306000
	065 Move X0, [X0+2456]
	066 Call 0x1C17CF4
	067 Move W8, 1
	068 Move [X21+3310], W8
	069 Move X0, [X22]
	070 Call 0x1C17F10
	071 Move X2, [X20]
	072 Move X1, X31
	073 Move X20, X0
	074 Call 0x26B0B18, X0, X1
	075 Compare X20, 0
	076 JumpIfEqual {244}
	077 Move X8, [X20+96]
	078 Compare X8, 0
	079 JumpIfEqual {244}
	080 Move X0, [X8+88]
	081 Compare X0, 0
	082 JumpIfEqual {244}
	083 Move X8, 0x2306000
	084 Move X21, 0x2304000
	085 Move X8, [X8+2352]
	086 Move X21, [X21+2304]
	087 Move X1, [X8]
	088 Move X2, [X21]
	089 Call StatePrimitive`1<Object>.set_value, X0, X1
	090 Move X8, [X20+96]
	091 Compare X8, 0
	092 JumpIfEqual {244}
	093 Move X0, [X8+96]
	094 Compare X0, 0
	095 JumpIfEqual {244}
	096 Move X22, 0x2306000
	097 Move X22, [X22+2368]
	098 Move X2, [X21]
	099 Move X1, [X22]
	100 Call StatePrimitive`1<Object>.set_value, X0, X1
	101 Move X8, [X20+96]
	102 Compare X8, 0
	103 JumpIfEqual {244}
	104 Move X0, [X8+104]
	105 Compare X0, 0
	106 JumpIfEqual {244}
	107 Move X1, [X22]
	108 Move X2, [X21]
	109 Call StatePrimitive`1<Object>.set_value, X0, X1
	110 Move X8, [X20+96]
	111 Compare X8, 0
	112 JumpIfEqual {244}
	113 Move X0, [X8+112]
	114 Compare X0, 0
	115 JumpIfEqual {244}
	116 Move X8, 0x2306000
	117 Move X8, [X8+2456]
	118 Move X2, [X21]
	119 Move X1, [X8]
	120 Call StatePrimitive`1<Object>.set_value, X0, X1
	121 Move X8, [X20+96]
	122 Compare X8, 0
	123 JumpIfEqual {244}
	124 Move X0, [X8+120]
	125 Compare X0, 0
	126 JumpIfEqual {244}
	127 Move X22, 0x2306000
	128 Move X22, [X22+2328]
	129 Move X2, [X21]
	130 Move X1, [X22]
	131 Call StatePrimitive`1<Object>.set_value, X0, X1
	132 Move X8, [X20+96]
	133 Compare X8, 0
	134 JumpIfEqual {244}
	135 Move X0, [X8+128]
	136 Compare X0, 0
	137 JumpIfEqual {244}
	138 Move X1, [X22]
	139 Move X2, [X21]
	140 Call StatePrimitive`1<Object>.set_value, X0, X1
	141 Move X8, [X20+96]
	142 Compare X8, 0
	143 JumpIfEqual {244}
	144 Move X0, [X8+136]
	145 Compare X0, 0
	146 JumpIfEqual {244}
	147 Move X8, 0x2306000
	148 Move X8, [X8+2384]
	149 Move X2, [X21]
	150 Move X1, [X8]
	151 Call StatePrimitive`1<Object>.set_value, X0, X1
	152 Move X8, [X20+96]
	153 Compare X8, 0
	154 JumpIfEqual {244}
	155 Move X0, [X8+144]
	156 Compare X0, 0
	157 JumpIfEqual {244}
	158 Move X8, 0x2306000
	159 Move X8, [X8+2336]
	160 Move X2, [X21]
	161 Move X1, [X8]
	162 Call StatePrimitive`1<Object>.set_value, X0, X1
	163 Move X8, [X20+96]
	164 Compare X8, 0
	165 JumpIfEqual {244}
	166 Move X0, [X8+80]
	167 Compare X0, 0
	168 JumpIfEqual {244}
	169 Move X8, 0x2305000
	170 Move X8, [X8+2560]
	171 Move V0, V11
	172 Move V1, V10
	173 Move V2, V9
	174 Move X1, [X8]
	175 Move V3, V8
	176 Call StatePrimitive`1<Color>.set_value, X0, X1
	177 Move X0, [X19+176]
	178 Compare X0, 0
	179 JumpIfEqual {244}
	180 Move X1, [X20+96]
	181 Move X2, X31
	182 Call AvatarView.UpdateAvatar, X0, X1
	183 Move X0, [X19+176]
	184 Compare X0, 0
	185 JumpIfEqual {244}
	186 Move V0, V11
	187 Move V1, V10
	188 Move V2, V9
	189 Move V3, V8
	190 Move X1, X31
	191 Call AvatarView.SetColor, X0, X1
	192 Move X0, [X19+176]
	193 Compare X0, 0
	194 JumpIfEqual {244}
	195 Move X20, 0x230A000
	196 Move X21, 0x230A000
	197 Move X20, [X20+256]
	198 Move X21, [X21+264]
	199 Move X1, X31
	200 Call AvatarView.get_bodyRenderers, X0
	201 Move X1, [X19+208]
	202 Move X2, [X20]
	203 Call 0x21B5124, X0, X1
	204 Move X1, [X21]
	205 Call Enumerable.ToArray, X0
	206 Move X8, [X19+200]
	207 Move [X19+48], X0
	208 Compare X8, 0
	209 JumpIfEqual {244}
	210 Move X20, 0x230A000
	211 Move X20, [X20+272]
	212 Move X0, X8
	213 Move X1, X31
	214 Call Renderer.get_material, X0
	215 Move X8, [X20]
	216 Move X19, X0
	217 Move W9, [X8+224]
	218 Compare W9, 0
	219 JumpIfNotEqual {222}
	220 Move X0, X8
	221 Call 0x1C17DFC
	222 Compare X19, 0
	223 JumpIfEqual {244}
	224 Move X8, [X20]
	225 Move X0, X19
	226 Move V2, V9
	227 Move V3, V8
	228 Move X8, [X8+184]
	229 Move X20, [X31+64]
	230 Move X19, [X31+72]
	231 Move X22, [X31+48]
	232 Move X21, [X31+56]
	233 Move X30, [X31+32]
	234 Move W1, [X8]
	235 Move D9, [X31+16]
	236 Move D8, [X31+24]
	237 Move V0, V11
	238 Move V1, V10
	239 Move X2, X31
	240 Move D11, [X31+80]
	241 Move D10, [X31+88]
	242 Call Material.SetColor, X0, X1, X2
	243 Return 
	244 Call 0x1C17F20

Method: System.Void SetDie(UnityEngine.Vector3 force)

Disassembly:
	0x01DF0FD8 STP D11, D10, [X31 + 0x90]
	0x01DF0FDC STP D9, D8, [X31 + 0xA0]
	0x01DF0FE0 STR X30, [X31 + 0xB0]
	0x01DF0FE4 STP X20, X19, [X31 + 0xC0]
	0x01DF0FE8 ADRP X20, 0x25E8000
	0x01DF0FEC LDRB W8, [X20 + 0xCE6]
	0x01DF0FF0 MOV X19, X0
	0x01DF0FF4 TBNZ X8, 0x0, 0x1DF100C
	0x01DF0FF8 ADRP X0, 0x2309000
	0x01DF0FFC LDR X0, [X0 + 0x208]
	0x01DF1000 BL 0x1C16CF4
	0x01DF1004 MOVZ W8, 0x1
	0x01DF1008 STRB W8, [X20 + 0xCE6]
	0x01DF100C MOVI V0.2D, 0x0
	0x01DF1010 STP V0, V0, [X31 + 0x60]
	0x01DF1014 STP V0, V0, [X31 + 0x40]
	0x01DF1018 LDR X8, [X19]
	0x01DF101C MOV X0, X19
	0x01DF1020 LDR X9, [X8 + 0x3C8]
	0x01DF1024 LDR X1, [X8 + 0x3D0]
	0x01DF1028 BLR X9
	0x01DF102C MOV X0, X19
	0x01DF1030 BL 0x1DEEC68
	0x01DF1034 MOV X0, X19
	0x01DF1038 MOV X1, X31
	0x01DF103C MOV V8.16B, V0.16B
	0x01DF1040 MOV V9.16B, V1.16B
	0x01DF1044 MOV V10.16B, V2.16B
	0x01DF1048 BL 0x3C32E90
	0x01DF104C CBZ X0, 0x1DF1120
	0x01DF1050 MOV X1, X31
	0x01DF1054 BL 0x3C3F58C
	0x01DF1058 ADRP X20, 0x25E7000
	0x01DF105C LDRB W8, [X20 + 0x85C]
	0x01DF1060 MOV V11.16B, V0.16B
	0x01DF1064 MOV V12.16B, V1.16B
	0x01DF1068 MOV V13.16B, V2.16B
	0x01DF106C CBNZ W8, 0x1DF1084
	0x01DF1070 ADRP X0, 0x2302000
	0x01DF1074 LDR X0, [X0 + 0x5A8]
	0x01DF1078 BL 0x1C16CF4
	0x01DF107C MOVZ W8, 0x1
	0x01DF1080 STRB W8, [X20 + 0x85C]
	0x01DF1084 ADRP X8, 0x2302000
	0x01DF1088 LDR X8, [X8 + 0x5A8]
	0x01DF108C FSUB S11, S8, S11
	0x01DF1090 FSUB S9, S9, S12
	0x01DF1094 FSUB S8, S10, S13
	0x01DF1098 LDR X0, [X8]
	0x01DF109C LDR W8, [X0 + 0xE0]
	0x01DF10A0 CBNZ W8, 0x1DF10A8

ISIL:
	001 Move [X31-48], D10
	002 Move [X31+8], D9
	003 Move [X31+16], D8
	004 Move [X31+24], X30
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x25E9000
	008 Move W8, [X20+3311]
	009 Move V8, V2
	010 Move V9, V1
	011 Move V10, V0
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x2303000
	018 Move X0, [X0+1432]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+3311], W8
	022 Move X20, 0x2303000
	023 Move X1, [X19+232]
	024 Move X20, [X20+1432]
	025 Compare X1, 0
	026 JumpIfEqual {30}
	027 Move X0, X19
	028 Move X2, X31
	029 Call MonoBehaviour.StopCoroutine, X0, X1
	030 Move X0, [X20]
	031 Move X20, [X19+184]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1C17DFC
	036 Move X0, X20
	037 Move X1, X31
	038 Move X2, X31
	039 Call Object.op_Inequality, X0, X1
	040 Move TEMP, X0
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfNotEqual {60}
	044 Move X0, [X19+184]
	045 Compare X0, 0
	046 JumpIfEqual {67}
	047 Move V1, V9
	048 Move V2, V8
	049 Move X20, [X31+32]
	050 Move X19, [X31+40]
	051 Move X30, [X31+24]
	052 Move D9, [X31+8]
	053 Move D8, [X31+16]
	054 Move W1, 1
	055 Move V0, V10
	056 Move X2, X31
	057 Move V10, [X31+48]
	058 Call PlayerView.SetRagdoll, X0, X1, X2
	059 Return 
	060 Move X20, [X31+32]
	061 Move X19, [X31+40]
	062 Move X30, [X31+24]
	063 Move D9, [X31+8]
	064 Move D8, [X31+16]
	065 Move V10, [X31+48]
	066 Return 
	067 Call 0x1C17F20

Method: System.Void SetRevive()

Disassembly:
	0x01DF0EEC LDR X8, [X8 + 0x208]
	0x01DF0EF0 ADD X0, X31, 0x40
	0x01DF0EF4 STP V0, V1, [X31 + 0x40]
	0x01DF0EF8 STP V2, V3, [X31 + 0x60]
	0x01DF0EFC LDR X1, [X8]
	0x01DF0F00 BL 0x2415A70
	0x01DF0F04 MOV X0, X19
	0x01DF0F08 BL 0x1DEF22C
	0x01DF0F0C B 0x1DF0FB0
	0x01DF0F10 LDR X1, [X19 + 0x160]
	0x01DF0F14 MOV X0, X19
	0x01DF0F18 BL 0x1DF3038
	0x01DF0F1C TBNZ X0, 0x0, 0x1DF0F9C
	0x01DF0F20 LDR X0, [X19 + 0xD0]
	0x01DF0F24 CBZ X0, 0x1DF0FCC
	0x01DF0F28 MOV X1, X31
	0x01DF0F2C BL 0x3C3F58C
	0x01DF0F30 LDR X0, [X19 + 0x160]
	0x01DF0F34 CBZ X0, 0x1DF0FCC
	0x01DF0F38 MOV X1, X31
	0x01DF0F3C MOV V8.16B, V0.16B
	0x01DF0F40 MOV V9.16B, V1.16B
	0x01DF0F44 MOV V10.16B, V2.16B
	0x01DF0F48 BL 0x3C32E90
	0x01DF0F4C CBZ X0, 0x1DF0FCC
	0x01DF0F50 MOV X1, X31
	0x01DF0F54 BL 0x3C3F58C
	0x01DF0F58 ADRP X8, 0x2308000
	0x01DF0F5C LDR X8, [X8 + 0xC40]
	0x01DF0F60 MOV V11.16B, V0.16B
	0x01DF0F64 MOV V12.16B, V1.16B
	0x01DF0F68 MOV V13.16B, V2.16B
	0x01DF0F6C LDR X0, [X8]
	0x01DF0F70 LDR W8, [X0 + 0xE0]
	0x01DF0F74 CBNZ W8, 0x1DF0F7C
	0x01DF0F78 BL 0x1C16DFC
	0x01DF0F7C MOV V0.16B, V8.16B

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x25E9000
	006 Move X20, 0x2304000
	007 Move W8, [X21+3312]
	008 Move X20, [X20+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x2304000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3312], W8
	019 Move X0, [X20]
	020 Move X20, [X19+184]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X0, X20
	026 Move X1, X31
	027 Move X2, X31
	028 Call Object.op_Inequality, X0, X1
	029 Move TEMP, X0
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfNotEqual {47}
	033 Move X0, [X19+184]
	034 Compare X0, 0
	035 JumpIfEqual {52}
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move S0, W31
	039 Move S1, W31
	040 Move S2, W31
	041 Move W1, W31
	042 Move X2, X31
	043 Move X30, [X31+32]
	044 Move X21, [X31+40]
	045 Call PlayerView.SetRagdoll, X0, X1, X2
	046 Return 
	047 Move X20, [X31+16]
	048 Move X19, [X31+24]
	049 Move X30, [X31+32]
	050 Move X21, [X31+40]
	051 Return 
	052 Call 0x1C17F20

Method: System.Void SetMad(System.Boolean isMad)

Disassembly:
	0x01DF110C LDP D9, D8, [X31 + 0xA0]
	0x01DF1110 LDP D11, D10, [X31 + 0x90]
	0x01DF1114 LDP D13, D12, [X31 + 0x80]
	0x01DF1118 ADD X31, X31, 0xD0
	0x01DF111C RET
	0x01DF1120 BL 0x1C16F20
	0x01DF1124 STR D8, [X31 - 0x20]!
	0x01DF1128 STR X30, [X31 + 0x8]
	0x01DF112C STP X20, X19, [X31 + 0x10]
	0x01DF1130 ADRP X20, 0x25E7000
	0x01DF1134 LDRB W8, [X20 + 0xCE7]
	0x01DF1138 MOV X19, X0
	0x01DF113C TBNZ X8, 0x0, 0x1DF1178
	0x01DF1140 ADRP X0, 0x2307000
	0x01DF1144 LDR X0, [X0 + 0xE98]
	0x01DF1148 BL 0x1C16CF4
	0x01DF114C ADRP X0, 0x2307000
	0x01DF1150 LDR X0, [X0 + 0xCB0]
	0x01DF1154 BL 0x1C16CF4
	0x01DF1158 ADRP X0, 0x2307000
	0x01DF115C LDR X0, [X0 + 0xC70]
	0x01DF1160 BL 0x1C16CF4
	0x01DF1164 ADRP X0, 0x2307000
	0x01DF1168 LDR X0, [X0 + 0xC40]
	0x01DF116C BL 0x1C16CF4
	0x01DF1170 MOVZ W8, 0x1
	0x01DF1174 STRB W8, [X20 + 0xCE7]
	0x01DF1178 MOV X0, X19
	0x01DF117C BL 0x1DF393C
	0x01DF1180 LDR X0, [X19 + 0x38]
	0x01DF1184 CBZ X0, 0x1DF12D4
	0x01DF1188 MOV X1, X31
	0x01DF118C MOV V8.16B, V0.16B

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W9, [X0+224]
	005 And W8, W1, 1
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Move X20, [X31+16]
	008 Move X19, [X31+24]
	009 Move X30, [X31+32]
	010 Return 
	011 Move X19, X0
	012 Move W20, W1
	013 Move [X0+224], W8
	014 Move TEMP, X1
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfNotEqual {23}
	018 Move X0, [X19+216]
	019 Compare X0, 0
	020 JumpIfEqual {41}
	021 Move X1, X31
	022 Call AudioSource.Play, X0
	023 Move X1, [X19+232]
	024 Compare X1, 0
	025 JumpIfEqual {29}
	026 Move X0, X19
	027 Move X2, X31
	028 Call MonoBehaviour.StopCoroutine, X0, X1
	029 And W1, W20, 1
	030 Move X0, X19
	031 Call FakeGorillaView.AnimateFaceCoroutine, X0, X1
	032 Move X1, X0
	033 Move [X19+232], X0
	034 Move X0, X19
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X2, X31
	038 Move X30, [X31+32]
	039 Call MonoBehaviour.StartCoroutine, X0, X1
	040 Return 
	041 Call 0x1C17F20

Method: System.Collections.IEnumerator AnimateFaceCoroutine(System.Boolean isMad)

Disassembly:
	0x01DF5370 CBZ X0, 0x1DF5394
	0x01DF5374 LDR X8, [X23]
	0x01DF5378 LDR X8, [X8 + 0xB8]
	0x01DF537C STR X0, [X8 + 0x28]
	0x01DF5380 LDR X20, [X22]
	0x01DF5384 MOV X0, X19
	0x01DF5388 MOV X1, X20
	0x01DF538C BL 0x1C16E00
	0x01DF5390 CBNZ X0, 0x1DF53AC
	0x01DF5394 MOV X0, X19
	0x01DF5398 MOV X1, X20
	0x01DF539C BL 0x1C171E0
	0x01DF53A0 LDR X8, [X23]
	0x01DF53A4 LDR X8, [X8 + 0xB8]
	0x01DF53A8 STR X31, [X8 + 0x28]
	0x01DF53AC LDP X20, X19, [X31 + 0x20]
	0x01DF53B0 LDP X22, X21, [X31 + 0x10]
	0x01DF53B4 LDP X30, X23, [X31], #0x30
	0x01DF53B8 RET
	0x01DF53BC BL 0x1C16F20
	0x01DF53C0 STP X30, X23, [X31 - 0x30]!
	0x01DF53C4 STP X22, X21, [X31 + 0x10]
	0x01DF53C8 STP X20, X19, [X31 + 0x20]
	0x01DF53CC ADRP X20, 0x25E3000
	0x01DF53D0 ADRP X21, 0x2301000
	0x01DF53D4 LDRB W8, [X20 + 0xCF9]
	0x01DF53D8 LDR X21, [X21 + 0xA78]
	0x01DF53DC MOV X19, X0
	0x01DF53E0 TBNZ X8, 0x0, 0x1DF5428

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x25E4000
	007 Move X21, 0x2305000
	008 Move W8, [X22+3313]
	009 Move X21, [X21+632]
	010 Move W20, W1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x2305000
	017 Move X0, [X0+632]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+3313], W8
	021 Move X0, [X21]
	022 And W21, W20, 1
	023 Call 0x1C17F10
	024 Move X1, X31
	025 Move X20, X0
	026 Call Object..ctor, X0
	027 Move [X20+16], W31
	028 Move [X20+40], X19
	029 Move [X20+32], W21
	030 Move X0, X20
	031 Move X20, [X31+32]
	032 Move X19, [X31+40]
	033 Move X22, [X31+16]
	034 Move X21, [X31+24]
	035 Move X30, [X31+48]
	036 Return X0

Method: System.Void .ctor()

Disassembly:
	0x01DF540C LDR X0, [X0 + 0xA78]
	0x01DF5410 BL 0x1C16CF4
	0x01DF5414 ADRP X0, 0x2301000
	0x01DF5418 LDR X0, [X0 + 0xD28]
	0x01DF541C BL 0x1C16CF4
	0x01DF5420 MOVZ W8, 0x1
	0x01DF5424 STRB W8, [X20 + 0xCF9]
	0x01DF5428 LDR X0, [X21]
	0x01DF542C LDR W8, [X0 + 0xE0]
	0x01DF5430 CBNZ W8, 0x1DF5438
	0x01DF5434 BL 0x1C16DFC
	0x01DF5438 CBZ X19, 0x1DF552C
	0x01DF543C LDR W8, [X19 + 0x30]
	0x01DF5440 ADRP X22, 0x2301000
	0x01DF5444 LDR X22, [X22 + 0xD28]
	0x01DF5448 ADRP X23, 0x2301000
	0x01DF544C ORR W8, W8, 0x8
	0x01DF5450 STR W8, [X19 + 0x30]
	0x01DF5454 LDR X8, [X22]
	0x01DF5458 LDR X8, [X8 + 0xB8]
	0x01DF545C LDR X23, [X23 + 0xD30]
	0x01DF5460 LDR X20, [X8 + 0x28]
	0x01DF5464 LDR X0, [X23]
	0x01DF5468 BL 0x1C16F10
	0x01DF546C LDR X8, [X19]
	0x01DF5470 MOV X1, X19
	0x01DF5474 MOV X3, X31
	0x01DF5478 MOV X21, X0
	0x01DF547C LDR X2, [X8 + 0x290]
	0x01DF5480 BL 0x2A6BD48

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x25E4000
	006 Move X21, 0x2304000
	007 Move W8, [X20+3314]
	008 Move X21, [X21+3208]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x2304000
	015 Move X0, [X0+3208]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3314], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X8, -19947520
	025 Move V0, [X8+616]
	026 Move W8, 1
	027 Move W9, 0x3F800000
	028 Move [X19+80], W31
	029 Move [X19+84], W8
	030 Move [X19+72], D0
	031 Move [X19+128], W9
	032 Move X0, X19
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X1, X31
	036 Move X30, [X31+32]
	037 Move X21, [X31+40]
	038 Call MonoBehaviour..ctor, X0
	039 Return 

Method: System.Void .cctor()

Disassembly:
	0x01DF5484 MOV X0, X20
	0x01DF5488 MOV X1, X21
	0x01DF548C MOV X2, X31
	0x01DF5490 BL 0x33C0FDC
	0x01DF5494 CBZ X0, 0x1DF54D8
	0x01DF5498 LDR X21, [X23]
	0x01DF549C MOV X20, X0
	0x01DF54A0 MOV X1, X21
	0x01DF54A4 BL 0x1C16E00
	0x01DF54A8 CBZ X0, 0x1DF54CC
	0x01DF54AC LDR X8, [X22]
	0x01DF54B0 LDR X8, [X8 + 0xB8]
	0x01DF54B4 STR X0, [X8 + 0x28]
	0x01DF54B8 LDR X21, [X23]
	0x01DF54BC MOV X0, X20
	0x01DF54C0 MOV X1, X21
	0x01DF54C4 BL 0x1C16E00
	0x01DF54C8 CBNZ X0, 0x1DF54E4
	0x01DF54CC MOV X0, X20
	0x01DF54D0 MOV X1, X21
	0x01DF54D4 BL 0x1C171E0
	0x01DF54D8 LDR X8, [X22]
	0x01DF54DC LDR X8, [X8 + 0xB8]
	0x01DF54E0 STR X31, [X8 + 0x28]
	0x01DF54E4 ADRP X20, 0x2302000
	0x01DF54E8 LDR X20, [X20 + 0x860]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x25E4000
	006 Move X21, 0x2303000
	007 Move X19, 0x2305000
	008 Move W8, [X20+3315]
	009 Move X21, [X21+544]
	010 Move X19, [X19+272]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x2305000
	016 Move X0, [X0+272]
	017 Call 0x1C17CF4
	018 Move X0, 0x2303000
	019 Move X0, [X0+544]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+3315], W8
	023 Move X0, [X21]
	024 Move X1, X31
	025 Call Shader.PropertyToID, X0
	026 Move X8, [X19]
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X8, [X8+184]
	030 Move [X8], W0
	031 Move X30, [X31+32]
	032 Move X21, [X31+40]
	033 Return 

