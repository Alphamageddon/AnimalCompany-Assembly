Type: AnimalCompany.TeleportTarget

Method: System.Void Awake()

Disassembly:
	0x01DA81C0 MOV X0, X19
	0x01DA81C4 STR S0, [X19 + 0xE0]
	0x01DA81C8 BL 0x1DA81D8
	0x01DA81CC MOV X0, X19
	0x01DA81D0 LDP X30, X19, [X31], #0x10
	0x01DA81D4 B 0x1DA8268
	0x01DA81D8 STR X30, [X31 - 0x20]!
	0x01DA81DC STP X20, X19, [X31 + 0x10]
	0x01DA81E0 MOV X19, X0
	0x01DA81E4 LDR X0, [X0 + 0x40]
	0x01DA81E8 CBZ X0, 0x1DA8220
	0x01DA81EC LDRB W8, [X0 + 0x60]
	0x01DA81F0 TBNZ X8, 0x1, 0x1DA8220
	0x01DA81F4 MOV X1, X31
	0x01DA81F8 BL 0x1E93668
	0x01DA81FC MOV W20, W0
	0x01DA8200 MOV X0, X19
	0x01DA8204 BL 0x1DA7780
	0x01DA8208 TBZ X20, 0x0, 0x1DA8228
	0x01DA820C CMP W0, 0x1
	0x01DA8210 B.NE 0x1DA8238
	0x01DA8214 MOV X0, X19
	0x01DA8218 BL 0x1DA8DB4
	0x01DA821C B 0x1DA8238
	0x01DA8220 MOV X0, X19
	0x01DA8224 BL 0x1DA7780
	0x01DA8228 CMP W0, 0x1
	0x01DA822C B.NE 0x1DA8238
	0x01DA8230 MOV X0, X19
	0x01DA8234 BL 0x1DA86C4
	0x01DA8238 LDR X20, [X19 + 0x80]
	0x01DA823C MOV X0, X19
	0x01DA8240 BL 0x1DA7780
	0x01DA8244 CBZ X20, 0x1DA8264
	0x01DA8248 CMP W0, 0x2
	0x01DA824C MOV X0, X20
	0x01DA8250 LDP X20, X19, [X31 + 0x10]
	0x01DA8254 CSET W1, EQ
	0x01DA8258 MOV X2, X31
	0x01DA825C LDR X30, [X31], #0x20
	0x01DA8260 B 0x3C32410
	0x01DA8264 BL 0x1C16F20
	0x01DA8268 STP D9, D8, [X31 - 0x30]!
	0x01DA826C STR X30, [X31 + 0x10]
	0x01DA8270 STP X20, X19, [X31 + 0x20]
	0x01DA8274 MOV X19, X0
	0x01DA8278 LDR X0, [X0 + 0x90]
	0x01DA827C CBZ X0, 0x1DA8300
	0x01DA8280 MOV X1, X31
	0x01DA8284 BL 0x3C32E90
	0x01DA8288 LDR X8, [X19 + 0x90]
	0x01DA828C CBZ X8, 0x1DA8300
	0x01DA8290 MOV X20, X0
	0x01DA8294 MOV X0, X8
	0x01DA8298 MOV X1, X31
	0x01DA829C BL 0x3C32E90
	0x01DA82A0 CBZ X0, 0x1DA8300
	0x01DA82A4 MOV X1, X31
	0x01DA82A8 BL 0x3C3FBAC
	0x01DA82AC LDR X0, [X19 + 0x90]
	0x01DA82B0 CBZ X0, 0x1DA8300
	0x01DA82B4 MOV X1, X31
	0x01DA82B8 MOV V8.16B, V0.16B
	0x01DA82BC BL 0x3C32E90
	0x01DA82C0 CBZ X0, 0x1DA8300
	0x01DA82C4 MOV X1, X31
	0x01DA82C8 BL 0x3C3FBAC
	0x01DA82CC MOV X0, X19
	0x01DA82D0 MOV V9.16B, V1.16B
	0x01DA82D4 BL 0x1DA7840
	0x01DA82D8 CBZ X20, 0x1DA8300
	0x01DA82DC MOV X0, X20
	0x01DA82E0 LDP X20, X19, [X31 + 0x20]
	0x01DA82E4 LDR X30, [X31 + 0x10]
	0x01DA82E8 MOV V2.16B, V0.16B
	0x01DA82EC MOV V0.16B, V8.16B
	0x01DA82F0 MOV V1.16B, V9.16B
	0x01DA82F4 MOV X1, X31
	0x01DA82F8 LDP D9, D8, [X31], #0x30
	0x01DA82FC B 0x3C3FC4C
	0x01DA8300 BL 0x1C16F20
	0x01DA8304 STP X30, X23, [X31 - 0x30]!
	0x01DA8308 STP X22, X21, [X31 + 0x10]
	0x01DA830C STP X20, X19, [X31 + 0x20]
	0x01DA8310 ADRP X23, 0x2630000
	0x01DA8314 ADRP X22, 0x234D000
	0x01DA8318 LDRB W8, [X23 + 0xAAA]
	0x01DA831C LDR X22, [X22 + 0x5A8]
	0x01DA8320 MOV W21, W2
	0x01DA8324 MOV X20, X1
	0x01DA8328 MOV X19, X0
	0x01DA832C TBNZ X8, 0x0, 0x1DA8344
	0x01DA8330 ADRP X0, 0x234D000
	0x01DA8334 LDR X0, [X0 + 0x5A8]
	0x01DA8338 BL 0x1C16CF4
	0x01DA833C MOVZ W8, 0x1
	0x01DA8340 STRB W8, [X23 + 0xAAA]
	0x01DA8344 AND W2, W21, 0x1

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+40], X21
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move X21, 0x2631000
	007 Move X20, 0x234E000
	008 Move W8, [X21+2722]
	009 Move X20, [X20+784]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {35}
	015 Move X0, 0x234C000
	016 Move X0, [X0+2600]
	017 Call 0x1C17CF4
	018 Move X0, 0x2350000
	019 Move X0, [X0+1224]
	020 Call 0x1C17CF4
	021 Move X0, 0x2350000
	022 Move X0, [X0+1232]
	023 Call 0x1C17CF4
	024 Move X0, 0x2350000
	025 Move X0, [X0+1240]
	026 Call 0x1C17CF4
	027 Move X0, 0x234E000
	028 Move X0, [X0+784]
	029 Call 0x1C17CF4
	030 Move X0, 0x2350000
	031 Move X0, [X0+1248]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X21+2722], W8
	035 Move X0, [X20]
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {41}
	039 Call 0x1C17DFC
	040 Move X0, [X20]
	041 Move X8, [X0+184]
	042 Move X0, [X8]
	043 Compare X0, 0
	044 JumpIfEqual {119}
	045 Move X8, 0x2350000
	046 Move X8, [X8+1232]
	047 Move W1, [X19+32]
	048 Move X2, [X8]
	049 Call Dictionary`2<Int32Enum, Object>.ContainsKey, X0, X1
	050 Move TEMP, X0
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfNotEqual {92}
	054 Move X8, 0x2350000
	055 Move X8, [X8+1240]
	056 Move TEMP, 0
	057 Not TEMP
	058 Move X9, TEMP
	059 Add X0, X31, 8
	060 Move X1, X31
	061 Move X8, [X8]
	062 Move [X31+8], X8
	063 Move [X31+16], X9
	064 Move W8, [X19+32]
	065 Move [X31+24], W8
	066 Call Enum.ToString, X0
	067 Move X8, 0x2350000
	068 Move X8, [X8+1248]
	069 Move X1, X0
	070 Move X2, X31
	071 Move X8, [X8]
	072 Move X0, X8
	073 Call String.Concat, X0, X1
	074 Move X8, 0x234C000
	075 Move X8, [X8+2600]
	076 Move X19, X0
	077 Move X8, [X8]
	078 Move W9, [X8+224]
	079 Compare W9, 0
	080 JumpIfNotEqual {83}
	081 Move X0, X8
	082 Call 0x1C17DFC
	083 Move X0, X19
	084 Move X1, X31
	085 Call Debug.LogWarning, X0
	086 Move X20, [X31+48]
	087 Move X19, [X31+56]
	088 Move X30, [X31+32]
	089 Move X21, [X31+40]
	090 Add X31, X31, 64
	091 Return 
	092 Move X0, [X20]
	093 Move W8, [X0+224]
	094 Compare W8, 0
	095 JumpIfNotEqual {98}
	096 Call 0x1C17DFC
	097 Move X0, [X20]
	098 Move X8, [X0+184]
	099 Move W21, [X19+32]
	100 Move X0, X19
	101 Move X1, X31
	102 Move X20, [X8]
	103 Call Component.get_transform, X0
	104 Compare X20, 0
	105 JumpIfEqual {119}
	106 Move X8, 0x2350000
	107 Move X8, [X8+1224]
	108 Move X2, X0
	109 Move X0, X20
	110 Move W1, W21
	111 Move X3, [X8]
	112 Move X20, [X31+48]
	113 Move X19, [X31+56]
	114 Move X30, [X31+32]
	115 Move X21, [X31+40]
	116 Add X31, X31, 64
	117 Call Dictionary`2<Int32Enum, Object>.Add, X0, X1, X2
	118 Return 
	119 Call 0x1C17F20

Method: System.Void OnDestroy()

Disassembly:
	0x01DA8348 MOV X0, X19
	0x01DA834C MOV X1, X20
	0x01DA8350 MOV X3, X31
	0x01DA8354 BL 0x1E73F8C
	0x01DA8358 LDR X0, [X22]
	0x01DA835C LDR W20, [X19 + 0xD8]
	0x01DA8360 LDR W8, [X0 + 0xE0]
	0x01DA8364 CBNZ W8, 0x1DA836C
	0x01DA8368 BL 0x1C16DFC
	0x01DA836C MOV W0, W20
	0x01DA8370 MOV X1, X31
	0x01DA8374 BL 0x31AD670
	0x01DA8378 LDR W0, [X19 + 0xDC]
	0x01DA837C LDP X20, X19, [X31 + 0x20]
	0x01DA8380 LDP X22, X21, [X31 + 0x10]
	0x01DA8384 MOV X1, X31
	0x01DA8388 LDP X30, X23, [X31], #0x30
	0x01DA838C B 0x31AD670
	0x01DA8390 SUB X31, X31, 0x20
	0x01DA8394 STP X30, X19, [X31 + 0x10]
	0x01DA8398 MOV X1, X31
	0x01DA839C MOV X19, X0
	0x01DA83A0 BL 0x1E73D04
	0x01DA83A4 MOV X0, X19
	0x01DA83A8 BL 0x1DA7780
	0x01DA83AC CMP W0, 0x1
	0x01DA83B0 B.NE 0x1DA83E8
	0x01DA83B4 MOV X0, X19
	0x01DA83B8 BL 0x1DA7900
	0x01DA83BC STR W0, [X31 + 0x8]
	0x01DA83C0 LDR X1, [X19 + 0x38]
	0x01DA83C4 ADD X0, X31, 0x8
	0x01DA83C8 MOV X2, X31
	0x01DA83CC BL 0x1E91C28
	0x01DA83D0 TBZ X0, 0x0, 0x1DA83E8
	0x01DA83D4 MOVZ W1, 0x2
	0x01DA83D8 MOV X0, X19
	0x01DA83DC BL 0x1DA77E0
	0x01DA83E0 MOV X0, X19
	0x01DA83E4 BL 0x1DA81D8
	0x01DA83E8 LDP X30, X19, [X31 + 0x10]
	0x01DA83EC ADD X31, X31, 0x20
	0x01DA83F0 RET
	0x01DA83F4 STP X30, X19, [X31 - 0x10]!
	0x01DA83F8 MOV X19, X0
	0x01DA83FC LDR X0, [X0 + 0x40]
	0x01DA8400 CBZ X0, 0x1DA8424
	0x01DA8404 LDRB W8, [X0 + 0x60]
	0x01DA8408 TBNZ X8, 0x1, 0x1DA8424
	0x01DA840C MOV X1, X31
	0x01DA8410 BL 0x1E93668
	0x01DA8414 TBZ X0, 0x0, 0x1DA8424

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x2631000
	006 Move X20, 0x234E000
	007 Move W8, [X21+2723]
	008 Move X20, [X20+784]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0x2350000
	015 Move X0, [X0+1232]
	016 Call 0x1C17CF4
	017 Move X0, 0x2350000
	018 Move X0, [X0+1256]
	019 Call 0x1C17CF4
	020 Move X0, 0x234E000
	021 Move X0, [X0+784]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+2723], W8
	025 Move X0, [X20]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {31}
	029 Call 0x1C17DFC
	030 Move X0, [X20]
	031 Move X8, [X0+184]
	032 Move X0, [X8]
	033 Compare X0, 0
	034 JumpIfEqual {69}
	035 Move X8, 0x2350000
	036 Move X8, [X8+1232]
	037 Move W1, [X19+32]
	038 Move X2, [X8]
	039 Call Dictionary`2<Int32Enum, Object>.ContainsKey, X0, X1
	040 Move TEMP, X0
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfNotEqual {64}
	044 Move X0, [X20]
	045 Move W8, [X0+224]
	046 Compare W8, 0
	047 JumpIfNotEqual {50}
	048 Call 0x1C17DFC
	049 Move X0, [X20]
	050 Move X8, [X0+184]
	051 Move X0, [X8]
	052 Compare X0, 0
	053 JumpIfEqual {69}
	054 Move X8, 0x2350000
	055 Move W1, [X19+32]
	056 Move X8, [X8+1256]
	057 Move X20, [X31+16]
	058 Move X19, [X31+24]
	059 Move X2, [X8]
	060 Move X30, [X31+32]
	061 Move X21, [X31+40]
	062 Call Dictionary`2<Int32Enum, Object>.Remove, X0, X1
	063 Return 
	064 Move X20, [X31+16]
	065 Move X19, [X31+24]
	066 Move X30, [X31+32]
	067 Move X21, [X31+40]
	068 Return 
	069 Call 0x1C17F20

Method: System.Boolean TryGetTeleportTarget(AnimalCompany.TeleTarget target, out UnityEngine.Transform transform)

Disassembly:
	0x01DA7E5C MOV X1, X21
	0x01DA7E60 BL 0x1C16E00
	0x01DA7E64 CBNZ X0, 0x1DA7E78
	0x01DA7E68 MOV X0, X20
	0x01DA7E6C MOV X1, X21
	0x01DA7E70 BL 0x1C171E0
	0x01DA7E74 STR X31, [X22 + 0x210]
	0x01DA7E78 ADRP X8, 0x234E000
	0x01DA7E7C LDR X8, [X8 + 0x5A8]
	0x01DA7E80 LDR W20, [X19 + 0xD8]
	0x01DA7E84 LDR X0, [X8]
	0x01DA7E88 LDR W8, [X0 + 0xE0]
	0x01DA7E8C CBNZ W8, 0x1DA7E94
	0x01DA7E90 BL 0x1C16DFC
	0x01DA7E94 MOV W0, W20
	0x01DA7E98 MOV X1, X31
	0x01DA7E9C BL 0x31AD670
	0x01DA7EA0 LDR W0, [X19 + 0xDC]
	0x01DA7EA4 LDP X20, X19, [X31 + 0x20]
	0x01DA7EA8 LDP X22, X21, [X31 + 0x10]
	0x01DA7EAC MOV X1, X31
	0x01DA7EB0 LDP X30, X23, [X31], #0x30
	0x01DA7EB4 B 0x31AD670
	0x01DA7EB8 BL 0x1C16F20
	0x01DA7EBC STR D10, [X31 - 0x30]!
	0x01DA7EC0 STP D9, D8, [X31 + 0x8]
	0x01DA7EC4 STR X30, [X31 + 0x18]
	0x01DA7EC8 STP X20, X19, [X31 + 0x20]
	0x01DA7ECC CBZ X1, 0x1DA7FA0
	0x01DA7ED0 MOV X20, X1
	0x01DA7ED4 MOV X19, X0
	0x01DA7ED8 MOV X0, X1
	0x01DA7EDC MOV X1, X31
	0x01DA7EE0 BL 0x3C8A29C
	0x01DA7EE4 CBZ X0, 0x1DA7FA0
	0x01DA7EE8 MOV X1, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x2632000
	007 Move X21, 0x234F000
	008 Move W8, [X22+2724]
	009 Move X21, [X21+784]
	010 Move X19, X1
	011 Move W20, W0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x2351000
	017 Move X0, [X0+1208]
	018 Call 0x1C17CF4
	019 Move X0, 0x234F000
	020 Move X0, [X0+784]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+2724], W8
	024 Move X0, [X21]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {30}
	028 Call 0x1C17DFC
	029 Move X0, [X21]
	030 Move X8, [X0+184]
	031 Move X0, [X8]
	032 Compare X0, 0
	033 JumpIfEqual {46}
	034 Move X8, 0x2351000
	035 Move X8, [X8+1208]
	036 Move W1, W20
	037 Move X2, X19
	038 Move X20, [X31+32]
	039 Move X19, [X31+40]
	040 Move X3, [X8]
	041 Move X22, [X31+16]
	042 Move X21, [X31+24]
	043 Move X30, [X31+48]
	044 Call Dictionary`2<Int32Enum, Object>.TryGetValue, X0, X1, X2
	045 Return X0
	046 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x01DA8418 MOV X0, X19
	0x01DA841C BL 0x1DA7FA4

ISIL:
	001 Move X1, X31
	002 Call MonoBehaviour..ctor, X0
	003 Return 

Method: System.Void .cctor()

Disassembly:
	0x01DA8420 TBZ X0, 0x0, 0x1DA842C
	0x01DA8424 LDP X30, X19, [X31], #0x10
	0x01DA8428 RET
	0x01DA842C MOV X0, X19
	0x01DA8430 LDP X30, X19, [X31], #0x10
	0x01DA8434 B 0x1DA8438
	0x01DA8438 STP X30, X23, [X31 - 0x30]!
	0x01DA843C STP X22, X21, [X31 + 0x10]
	0x01DA8440 STP X20, X19, [X31 + 0x20]
	0x01DA8444 ADRP X20, 0x2630000
	0x01DA8448 LDRB W8, [X20 + 0xAAF]
	0x01DA844C MOV X19, X0
	0x01DA8450 TBNZ X8, 0x0, 0x1DA8498
	0x01DA8454 ADRP X0, 0x234D000
	0x01DA8458 LDR X0, [X0 + 0x5B0]
	0x01DA845C BL 0x1C16CF4
	0x01DA8460 ADRP X0, 0x234C000
	0x01DA8464 LDR X0, [X0 + 0xE70]
	0x01DA8468 BL 0x1C16CF4
	0x01DA846C ADRP X0, 0x234D000
	0x01DA8470 LDR X0, [X0 + 0x5A8]
	0x01DA8474 BL 0x1C16CF4
	0x01DA8478 ADRP X0, 0x234F000
	0x01DA847C LDR X0, [X0 + 0x580]
	0x01DA8480 BL 0x1C16CF4
	0x01DA8484 ADRP X0, 0x234F000
	0x01DA8488 LDR X0, [X0 + 0x588]
	0x01DA848C BL 0x1C16CF4
	0x01DA8490 MOVZ W8, 0x1
	0x01DA8494 STRB W8, [X20 + 0xAAF]
	0x01DA8498 LDR X20, [X19 + 0xA0]
	0x01DA849C MOV X0, X19
	0x01DA84A0 MOV X1, X31
	0x01DA84A4 BL 0x3C32E90
	0x01DA84A8 CBZ X0, 0x1DA85E4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2631000
	007 Move X22, 0x2350000
	008 Move X19, 0x2350000
	009 Move X20, 0x234E000
	010 Move W8, [X21+2725]
	011 Move X22, [X22+1264]
	012 Move X19, [X19+1272]
	013 Move X20, [X20+784]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0x2350000
	019 Move X0, [X0+1272]
	020 Call 0x1C17CF4
	021 Move X0, 0x2350000
	022 Move X0, [X0+1264]
	023 Call 0x1C17CF4
	024 Move X0, 0x234E000
	025 Move X0, [X0+784]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+2725], W8
	029 Move X0, [X22]
	030 Call 0x1C17F10
	031 Move X1, [X19]
	032 Move X19, X0
	033 Call Dictionary`2<Int32Enum, Object>..ctor, X0
	034 Move X8, [X20]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move X8, [X8+184]
	038 Move [X8], X19
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X30, [X31+48]
	042 Return 

