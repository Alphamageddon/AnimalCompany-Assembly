Type: AnimalCompany.TeleportTarget

Method: System.Void Awake()

Disassembly:
	0x01CB1350 CBZ X8, 0x1CB1360
	0x01CB1354 STRH W1, [X8]
	0x01CB1358 LDP X30, X19, [X31], #0x10
	0x01CB135C RET
	0x01CB1360 ADRP X0, 0x229C000
	0x01CB1364 LDR X0, [X0 + 0x490]
	0x01CB1368 BL 0x1B6E804
	0x01CB136C BL 0x1B6EA0C
	0x01CB1370 MOV X19, X0
	0x01CB1374 ADRP X0, 0x229D000
	0x01CB1378 LDR X0, [X0 + 0xBA8]
	0x01CB137C BL 0x1B6E804
	0x01CB1380 MOV X1, X0
	0x01CB1384 MOV X0, X19
	0x01CB1388 MOV X2, X31
	0x01CB138C BL 0x31E7550
	0x01CB1390 ADRP X0, 0x229D000
	0x01CB1394 LDR X0, [X0 + 0xBB8]
	0x01CB1398 BL 0x1B6E804
	0x01CB139C MOV X1, X0
	0x01CB13A0 MOV X0, X19
	0x01CB13A4 BL 0x1B6E8E8
	0x01CB13A8 STP X30, X21, [X31 - 0x20]!
	0x01CB13AC STP X20, X19, [X31 + 0x10]
	0x01CB13B0 ADRP X21, 0x2572000
	0x01CB13B4 LDRB W9, [X21 + 0x4C5]
	0x01CB13B8 MOV X20, X0
	0x01CB13BC MOV X19, X8
	0x01CB13C0 TBNZ X9, 0x0, 0x1CB13D8
	0x01CB13C4 ADRP X0, 0x229D000
	0x01CB13C8 LDR X0, [X0 + 0xBC0]
	0x01CB13CC BL 0x1B6E7F0
	0x01CB13D0 MOVZ W8, 0x1
	0x01CB13D4 STRB W8, [X21 + 0x4C5]
	0x01CB13D8 LDR X20, [X20 + 0x50]
	0x01CB13DC CBZ X20, 0x1CB1418
	0x01CB13E0 ADRP X21, 0x229D000
	0x01CB13E4 LDR X21, [X21 + 0xBC0]
	0x01CB13E8 MOV X0, X31
	0x01CB13EC BL 0x1D15A28
	0x01CB13F0 MOV X3, X0
	0x01CB13F4 STP X31, X31, [X19 + 0x8]
	0x01CB13F8 LDR X4, [X21]
	0x01CB13FC ADD X1, X20, 0x4
	0x01CB1400 STR X31, [X19]
	0x01CB1404 MOV X0, X19
	0x01CB1408 LDP X20, X19, [X31 + 0x10]
	0x01CB140C MOVZ W2, 0x40
	0x01CB1410 LDP X30, X21, [X31], #0x20
	0x01CB1414 B 0x22AF850
	0x01CB1418 ADRP X0, 0x229C000
	0x01CB141C LDR X0, [X0 + 0x490]
	0x01CB1420 BL 0x1B6E804
	0x01CB1424 BL 0x1B6EA0C
	0x01CB1428 MOV X19, X0
	0x01CB142C ADRP X0, 0x229D000
	0x01CB1430 LDR X0, [X0 + 0xBC8]
	0x01CB1434 BL 0x1B6E804
	0x01CB1438 MOV X1, X0
	0x01CB143C MOV X0, X19
	0x01CB1440 MOV X2, X31
	0x01CB1444 BL 0x31E7550
	0x01CB1448 ADRP X0, 0x229D000
	0x01CB144C LDR X0, [X0 + 0xBD0]
	0x01CB1450 BL 0x1B6E804
	0x01CB1454 MOV X1, X0
	0x01CB1458 MOV X0, X19
	0x01CB145C BL 0x1B6E8E8
	0x01CB1460 STP X30, X19, [X31 - 0x10]!
	0x01CB1464 LDR X8, [X0 + 0x50]
	0x01CB1468 CBZ X8, 0x1CB1478
	0x01CB146C LDR W0, [X8 + 0x304]
	0x01CB1470 LDP X30, X19, [X31], #0x10
	0x01CB1474 RET
	0x01CB1478 ADRP X0, 0x229C000
	0x01CB147C LDR X0, [X0 + 0x490]
	0x01CB1480 BL 0x1B6E804
	0x01CB1484 BL 0x1B6EA0C
	0x01CB1488 MOV X19, X0
	0x01CB148C ADRP X0, 0x229D000
	0x01CB1490 LDR X0, [X0 + 0xBD8]
	0x01CB1494 BL 0x1B6E804
	0x01CB1498 MOV X1, X0
	0x01CB149C MOV X0, X19
	0x01CB14A0 MOV X2, X31
	0x01CB14A4 BL 0x31E7550
	0x01CB14A8 ADRP X0, 0x229D000
	0x01CB14AC LDR X0, [X0 + 0xBE0]
	0x01CB14B0 BL 0x1B6E804
	0x01CB14B4 MOV X1, X0
	0x01CB14B8 MOV X0, X19
	0x01CB14BC BL 0x1B6E8E8
	0x01CB14C0 STP X30, X19, [X31 - 0x10]!
	0x01CB14C4 LDR X8, [X0 + 0x50]
	0x01CB14C8 CBZ X8, 0x1CB14D8
	0x01CB14CC STR W1, [X8 + 0x304]
	0x01CB14D0 LDP X30, X19, [X31], #0x10
	0x01CB14D4 RET

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+40], X21
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move X21, 0x2573000
	007 Move X20, 0x229E000
	008 Move W8, [X21+1205]
	009 Move X20, [X20+2616]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {35}
	015 Move X0, 0x229D000
	016 Move X0, [X0+2232]
	017 Call 0x1B6F7F0
	018 Move X0, 0x229E000
	019 Move X0, [X0+2736]
	020 Call 0x1B6F7F0
	021 Move X0, 0x229E000
	022 Move X0, [X0+2744]
	023 Call 0x1B6F7F0
	024 Move X0, 0x229E000
	025 Move X0, [X0+2752]
	026 Call 0x1B6F7F0
	027 Move X0, 0x229E000
	028 Move X0, [X0+2616]
	029 Call 0x1B6F7F0
	030 Move X0, 0x229E000
	031 Move X0, [X0+2760]
	032 Call 0x1B6F7F0
	033 Move W8, 1
	034 Move [X21+1205], W8
	035 Move X0, [X20]
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {41}
	039 Call 0x1B6F8F8
	040 Move X0, [X20]
	041 Move X8, [X0+184]
	042 Move X0, [X8]
	043 Compare X0, 0
	044 JumpIfEqual {119}
	045 Move X8, 0x229E000
	046 Move X8, [X8+2744]
	047 Move W1, [X19+32]
	048 Move X2, [X8]
	049 Call Dictionary`2<Int32Enum, Object>.ContainsKey, X0, X1
	050 Move TEMP, X0
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfNotEqual {92}
	054 Move X8, 0x229E000
	055 Move X8, [X8+2752]
	056 Move TEMP, 0
	057 Not TEMP
	058 Move X9, TEMP
	059 Add X0, X31, 8
	060 Move X1, X31
	061 Move X8, [X8]
	062 Move [X31+8], X8
	063 Move [X31+16], X9
	064 Move W8, [X19+32]
	065 Move [X31+24], W8
	066 Call Enum.ToString, X0
	067 Move X8, 0x229E000
	068 Move X8, [X8+2760]
	069 Move X1, X0
	070 Move X2, X31
	071 Move X8, [X8]
	072 Move X0, X8
	073 Call String.Concat, X0, X1
	074 Move X8, 0x229D000
	075 Move X8, [X8+2232]
	076 Move X19, X0
	077 Move X8, [X8]
	078 Move W9, [X8+224]
	079 Compare W9, 0
	080 JumpIfNotEqual {83}
	081 Move X0, X8
	082 Call 0x1B6F8F8
	083 Move X0, X19
	084 Move X1, X31
	085 Call Debug.LogWarning, X0
	086 Move X20, [X31+48]
	087 Move X19, [X31+56]
	088 Move X30, [X31+32]
	089 Move X21, [X31+40]
	090 Add X31, X31, 64
	091 Return 
	092 Move X0, [X20]
	093 Move W8, [X0+224]
	094 Compare W8, 0
	095 JumpIfNotEqual {98}
	096 Call 0x1B6F8F8
	097 Move X0, [X20]
	098 Move X8, [X0+184]
	099 Move W21, [X19+32]
	100 Move X0, X19
	101 Move X1, X31
	102 Move X20, [X8]
	103 Call Component.get_transform, X0
	104 Compare X20, 0
	105 JumpIfEqual {119}
	106 Move X8, 0x229E000
	107 Move X8, [X8+2736]
	108 Move X2, X0
	109 Move X0, X20
	110 Move W1, W21
	111 Move X3, [X8]
	112 Move X20, [X31+48]
	113 Move X19, [X31+56]
	114 Move X30, [X31+32]
	115 Move X21, [X31+40]
	116 Add X31, X31, 64
	117 Call Dictionary`2<Int32Enum, Object>.Add, X0, X1, X2
	118 Return 
	119 Call 0x1B6FA1C

Method: System.Void OnDestroy()

Disassembly:
	0x01CB14D8 ADRP X0, 0x229C000
	0x01CB14DC LDR X0, [X0 + 0x490]
	0x01CB14E0 BL 0x1B6E804
	0x01CB14E4 BL 0x1B6EA0C
	0x01CB14E8 MOV X19, X0
	0x01CB14EC ADRP X0, 0x229D000
	0x01CB14F0 LDR X0, [X0 + 0xBD8]
	0x01CB14F4 BL 0x1B6E804
	0x01CB14F8 MOV X1, X0
	0x01CB14FC MOV X0, X19
	0x01CB1500 MOV X2, X31
	0x01CB1504 BL 0x31E7550
	0x01CB1508 ADRP X0, 0x229D000
	0x01CB150C LDR X0, [X0 + 0xBE8]
	0x01CB1510 BL 0x1B6E804
	0x01CB1514 MOV X1, X0
	0x01CB1518 MOV X0, X19
	0x01CB151C BL 0x1B6E8E8
	0x01CB1520 SUB X31, X31, 0x30
	0x01CB1524 STP X30, X21, [X31 + 0x10]
	0x01CB1528 STP X20, X19, [X31 + 0x20]
	0x01CB152C ADRP X20, 0x2572000
	0x01CB1530 LDRB W8, [X20 + 0x4C6]
	0x01CB1534 MOV X19, X0
	0x01CB1538 TBNZ X8, 0x0, 0x1CB15BC
	0x01CB153C ADRP X0, 0x229C000
	0x01CB1540 LDR X0, [X0 + 0x5B0]
	0x01CB1544 BL 0x1B6E7F0
	0x01CB1548 ADRP X0, 0x229C000
	0x01CB154C LDR X0, [X0 + 0x5B8]
	0x01CB1550 BL 0x1B6E7F0
	0x01CB1554 ADRP X0, 0x229C000
	0x01CB1558 LDR X0, [X0 + 0x5C0]
	0x01CB155C BL 0x1B6E7F0
	0x01CB1560 ADRP X0, 0x229D000
	0x01CB1564 LDR X0, [X0 + 0xB20]
	0x01CB1568 BL 0x1B6E7F0
	0x01CB156C ADRP X0, 0x229C000
	0x01CB1570 LDR X0, [X0 + 0x628]
	0x01CB1574 BL 0x1B6E7F0
	0x01CB1578 ADRP X0, 0x229D000
	0x01CB157C LDR X0, [X0 + 0xB08]
	0x01CB1580 BL 0x1B6E7F0
	0x01CB1584 ADRP X0, 0x229D000
	0x01CB1588 LDR X0, [X0 + 0xBF0]
	0x01CB158C BL 0x1B6E7F0
	0x01CB1590 ADRP X0, 0x229D000
	0x01CB1594 LDR X0, [X0 + 0xBF8]
	0x01CB1598 BL 0x1B6E7F0
	0x01CB159C ADRP X0, 0x229D000
	0x01CB15A0 LDR X0, [X0 + 0xC00]
	0x01CB15A4 BL 0x1B6E7F0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x2573000
	006 Move X20, 0x229E000
	007 Move W8, [X21+1206]
	008 Move X20, [X20+2616]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0x229E000
	015 Move X0, [X0+2744]
	016 Call 0x1B6F7F0
	017 Move X0, 0x229E000
	018 Move X0, [X0+2768]
	019 Call 0x1B6F7F0
	020 Move X0, 0x229E000
	021 Move X0, [X0+2616]
	022 Call 0x1B6F7F0
	023 Move W8, 1
	024 Move [X21+1206], W8
	025 Move X0, [X20]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {31}
	029 Call 0x1B6F8F8
	030 Move X0, [X20]
	031 Move X8, [X0+184]
	032 Move X0, [X8]
	033 Compare X0, 0
	034 JumpIfEqual {69}
	035 Move X8, 0x229E000
	036 Move X8, [X8+2744]
	037 Move W1, [X19+32]
	038 Move X2, [X8]
	039 Call Dictionary`2<Int32Enum, Object>.ContainsKey, X0, X1
	040 Move TEMP, X0
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfNotEqual {64}
	044 Move X0, [X20]
	045 Move W8, [X0+224]
	046 Compare W8, 0
	047 JumpIfNotEqual {50}
	048 Call 0x1B6F8F8
	049 Move X0, [X20]
	050 Move X8, [X0+184]
	051 Move X0, [X8]
	052 Compare X0, 0
	053 JumpIfEqual {69}
	054 Move X8, 0x229E000
	055 Move W1, [X19+32]
	056 Move X8, [X8+2768]
	057 Move X20, [X31+16]
	058 Move X19, [X31+24]
	059 Move X2, [X8]
	060 Move X30, [X31+32]
	061 Move X21, [X31+40]
	062 Call Dictionary`2<Int32Enum, Object>.Remove, X0, X1
	063 Return 
	064 Move X20, [X31+16]
	065 Move X19, [X31+24]
	066 Move X30, [X31+32]
	067 Move X21, [X31+40]
	068 Return 
	069 Call 0x1B6FA1C

Method: System.Boolean TryGetTeleportTarget(AnimalCompany.TeleTarget target, out UnityEngine.Transform transform)

Disassembly:
	0x01CB0FBC STP X30, X21, [X31 - 0x20]!
	0x01CB0FC0 STP X20, X19, [X31 + 0x10]
	0x01CB0FC4 ADRP X21, 0x2573000
	0x01CB0FC8 ADRP X20, 0x229D000
	0x01CB0FCC LDRB W8, [X21 + 0x4C2]
	0x01CB0FD0 LDR X20, [X20 + 0x478]
	0x01CB0FD4 MOV X19, X0
	0x01CB0FD8 TBNZ X8, 0x0, 0x1CB0FFC
	0x01CB0FDC ADRP X0, 0x229E000
	0x01CB0FE0 LDR X0, [X0 + 0xB80]
	0x01CB0FE4 BL 0x1B6E7F0
	0x01CB0FE8 ADRP X0, 0x229D000
	0x01CB0FEC LDR X0, [X0 + 0x478]
	0x01CB0FF0 BL 0x1B6E7F0
	0x01CB0FF4 MOVZ W8, 0x1
	0x01CB0FF8 STRB W8, [X21 + 0x4C2]
	0x01CB0FFC LDR X0, [X20]
	0x01CB1000 ADRP X20, 0x229D000
	0x01CB1004 LDR W8, [X0 + 0xE0]
	0x01CB1008 B 0x3D19160
	0x01CB100C CBNZ W8, 0x1CB1014
	0x01CB1010 BL 0x1B6E8F8
	0x01CB1014 LDR X0, [X20]
	0x01CB1018 BL 0x2114BC8
	0x01CB101C STR X0, [X19 + 0x88]
	0x01CB1020 LDP X20, X19, [X31 + 0x10]
	0x01CB1024 LDP X30, X21, [X31], #0x20
	0x01CB1028 RET
	0x01CB102C SUB X31, X31, 0xB0
	0x01CB1030 STP X29, X30, [X31 + 0x50]
	0x01CB1034 STP X28, X27, [X31 + 0x60]
	0x01CB1038 STP X26, X25, [X31 + 0x70]
	0x01CB103C STP X24, X23, [X31 + 0x80]
	0x01CB1040 STP X22, X21, [X31 + 0x90]
	0x01CB1044 STP X20, X19, [X31 + 0xA0]
	0x01CB1048 ADRP X20, 0x2572000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x2574000
	007 Move X21, 0x229F000
	008 Move W8, [X22+1207]
	009 Move X21, [X21+2616]
	010 Move X19, X1
	011 Move W20, W0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x229F000
	017 Move X0, [X0+2720]
	018 Call 0x1B6F7F0
	019 Move X0, 0x229F000
	020 Move X0, [X0+2616]
	021 Call 0x1B6F7F0
	022 Move W8, 1
	023 Move [X22+1207], W8
	024 Move X0, [X21]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {30}
	028 Call 0x1B6F8F8
	029 Move X0, [X21]
	030 Move X8, [X0+184]
	031 Move X0, [X8]
	032 Compare X0, 0
	033 JumpIfEqual {46}
	034 Move X8, 0x229E000
	035 Move X8, [X8+2720]
	036 Move W1, W20
	037 Move X2, X19
	038 Move X20, [X31+32]
	039 Move X19, [X31+40]
	040 Move X3, [X8]
	041 Move X22, [X31+16]
	042 Move X21, [X31+24]
	043 Move X30, [X31+48]
	044 Call Dictionary`2<Int32Enum, Object>.TryGetValue, X0, X1, X2
	045 Return X0
	046 Call 0x1B6FA1C

Method: System.Void .ctor()

Disassembly:
	0x01CB15A8 ADRP X0, 0x229D000
	0x01CB15AC LDR X0, [X0 + 0xC08]

ISIL:
	001 Move X1, X31
	002 Call MonoBehaviour..ctor, X0
	003 Return 

Method: System.Void .cctor()

Disassembly:
	0x01CB15B0 BL 0x1B6E7F0
	0x01CB15B4 MOVZ W8, 0x1
	0x01CB15B8 STRB W8, [X20 + 0x4C6]
	0x01CB15BC MOV X0, X19
	0x01CB15C0 MOV X1, X31
	0x01CB15C4 BL 0x1D65284
	0x01CB15C8 LDR X0, [X19 + 0x40]
	0x01CB15CC CBZ X0, 0x1CB16EC
	0x01CB15D0 LDRB W8, [X0 + 0x60]
	0x01CB15D4 TBNZ X8, 0x1, 0x1CB16EC
	0x01CB15D8 MOV X1, X31
	0x01CB15DC BL 0x1D9E780
	0x01CB15E0 TBZ X0, 0x0, 0x1CB16EC
	0x01CB15E4 MOV X0, X19
	0x01CB15E8 BL 0x1CB12E8
	0x01CB15EC ADRP X8, 0x229D000
	0x01CB15F0 LDR X8, [X8 + 0xB08]
	0x01CB15F4 MOV W20, W0
	0x01CB15F8 ADD X21, X19, 0xA8
	0x01CB15FC LDR X0, [X8]
	0x01CB1600 LDR W8, [X0 + 0xE0]
	0x01CB1604 CBNZ W8, 0x1CB160C
	0x01CB1608 BL 0x1B6E8F8
	0x01CB160C MOV W0, W20
	0x01CB1610 MOV X1, X21
	0x01CB1614 BL 0x1CB0E98
	0x01CB1618 TBZ X0, 0x0, 0x1CB1630
	0x01CB161C MOV X0, X19
	0x01CB1620 LDP X20, X19, [X31 + 0x20]
	0x01CB1624 LDP X30, X21, [X31 + 0x10]
	0x01CB1628 ADD X31, X31, 0x30
	0x01CB162C B 0x1CB1700
	0x01CB1630 ADRP X8, 0x229C000
	0x01CB1634 LDR X8, [X8 + 0x5C0]
	0x01CB1638 LDR X0, [X8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2573000
	007 Move X22, 0x229E000
	008 Move X19, 0x229E000
	009 Move X20, 0x229E000
	010 Move W8, [X21+1208]
	011 Move X22, [X22+2776]
	012 Move X19, [X19+2784]
	013 Move X20, [X20+2616]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0x229E000
	019 Move X0, [X0+2784]
	020 Call 0x1B6F7F0
	021 Move X0, 0x229E000
	022 Move X0, [X0+2776]
	023 Call 0x1B6F7F0
	024 Move X0, 0x229E000
	025 Move X0, [X0+2616]
	026 Call 0x1B6F7F0
	027 Move W8, 1
	028 Move [X21+1208], W8
	029 Move X0, [X22]
	030 Call 0x1B6FA0C
	031 Move X1, [X19]
	032 Move X19, X0
	033 Call Dictionary`2<Int32Enum, Object>..ctor, X0
	034 Move X8, [X20]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move X8, [X8+184]
	038 Move [X8], X19
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X30, [X31+48]
	042 Return 

