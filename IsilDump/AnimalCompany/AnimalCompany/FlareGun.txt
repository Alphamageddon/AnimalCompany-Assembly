Type: AnimalCompany.FlareGun

Method: System.Boolean get_hasAmmo()

Disassembly:
	0x01D8E870 B 0x1D8E4E8
	0x01D8E874 MOV X0, X19
	0x01D8E878 BL 0x1C171E0
	0x01D8E87C BL 0x1C16F20
	0x01D8E880 LDR X0, [X0 + 0x80]
	0x01D8E884 RET
	0x01D8E888 BICS W31, W2, W1, 0x0
	0x01D8E88C CSET W0, EQ
	0x01D8E890 RET
	0x01D8E894 STR X30, [X31 - 0x10]!
	0x01D8E898 LDR X8, [X0 + 0x80]
	0x01D8E89C CBZ X8, 0x1D8E8AC
	0x01D8E8A0 MOVZ W0, 0x2
	0x01D8E8A4 LDR X30, [X31], #0x10
	0x01D8E8A8 RET
	0x01D8E8AC BL 0x1C16F20
	0x01D8E8B0 MOVZ W0, 0x2
	0x01D8E8B4 RET
	0x01D8E8B8 STR X30, [X31 - 0x10]!
	0x01D8E8BC LDR X8, [X0 + 0x80]
	0x01D8E8C0 CBZ X8, 0x1D8E8DC
	0x01D8E8C4 LDRB W8, [X8 + 0x28]
	0x01D8E8C8 ANDS W31, W8, 0xE
	0x01D8E8CC CSET W8, NE
	0x01D8E8D0 UBFM W0, W8, 0x1F, 0x1E
	0x01D8E8D4 LDR X30, [X31], #0x10

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+80]
	004 Compare X8, 0
	005 JumpIfEqual {12}
	006 Move W8, [X8]
	007 NotImplemented "Instruction CMP not yet implemented."
	008 NotImplemented "Instruction CSET not yet implemented."
	009 Move X30, [X31+16]
	010 Move X19, [X31+24]
	011 Return X0
	012 Move X0, 0x2366000
	013 Move X0, [X0+1456]
	014 Call 0x1C17D08
	015 Call 0x1C17F10
	016 Move X19, X0
	017 Move X0, 0x2369000
	018 Move X0, [X0+3072]
	019 Call 0x1C17D08
	020 Move X1, X0
	021 Move X0, X19
	022 Move X2, X31
	023 Call InvalidOperationException..ctor, X0, X1
	024 Move X0, 0x2369000
	025 Move X0, [X0+3080]
	026 Call 0x1C17D08
	027 Move X1, X0
	028 Move X0, X19
	029 Call 0x1C17DEC

Method: System.Void set_hasAmmo(System.Boolean value)

Disassembly:
	0x01D8E8D8 RET
	0x01D8E8DC BL 0x1C16F20
	0x01D8E8E0 ANDS W31, W1, 0xE
	0x01D8E8E4 CSET W8, NE
	0x01D8E8E8 UBFM W0, W8, 0x1F, 0x1E
	0x01D8E8EC RET
	0x01D8E8F0 STP X30, X19, [X31 - 0x10]!
	0x01D8E8F4 LDR X8, [X0 + 0x50]
	0x01D8E8F8 CBZ X8, 0x1D8E908
	0x01D8E8FC STR X1, [X8]
	0x01D8E900 LDP X30, X19, [X31], #0x10
	0x01D8E904 RET
	0x01D8E908 ADRP X0, 0x2365000
	0x01D8E90C LDR X0, [X0 + 0x5B0]
	0x01D8E910 BL 0x1C16D08
	0x01D8E914 BL 0x1C16F10
	0x01D8E918 MOV X19, X0
	0x01D8E91C ADRP X0, 0x2368000
	0x01D8E920 LDR X0, [X0 + 0xA98]
	0x01D8E924 BL 0x1C16D08
	0x01D8E928 MOV X1, X0
	0x01D8E92C MOV X0, X19
	0x01D8E930 MOV X2, X31
	0x01D8E934 BL 0x337DF1C
	0x01D8E938 ADRP X0, 0x2368000

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+80]
	004 Compare X8, 0
	005 JumpIfEqual {11}
	006 And W9, W1, 1
	007 Move [X8], W9
	008 Move X30, [X31+16]
	009 Move X19, [X31+24]
	010 Return 
	011 Move X0, 0x2366000
	012 Move X0, [X0+1456]
	013 Call 0x1C17D08
	014 Call 0x1C17F10
	015 Move X19, X0
	016 Move X0, 0x2369000
	017 Move X0, [X0+3072]
	018 Call 0x1C17D08
	019 Move X1, X0
	020 Move X0, X19
	021 Move X2, X31
	022 Call InvalidOperationException..ctor, X0, X1
	023 Move X0, 0x2369000
	024 Move X0, [X0+3088]
	025 Call 0x1C17D08
	026 Move X1, X0
	027 Move X0, X19
	028 Call 0x1C17DEC

Method: System.Void Awake()

Disassembly:
	0x01D8E93C LDR X0, [X0 + 0xC90]
	0x01D8E940 BL 0x1C16D08
	0x01D8E944 MOV X1, X0
	0x01D8E948 MOV X0, X19
	0x01D8E94C BL 0x1C16DEC
	0x01D8E950 STP X30, X19, [X31 - 0x10]!
	0x01D8E954 LDR X8, [X0 + 0x50]
	0x01D8E958 CBZ X8, 0x1D8E968
	0x01D8E95C STR X1, [X8 + 0x8]
	0x01D8E960 LDP X30, X19, [X31], #0x10
	0x01D8E964 RET
	0x01D8E968 ADRP X0, 0x2365000
	0x01D8E96C LDR X0, [X0 + 0x5B0]
	0x01D8E970 BL 0x1C16D08
	0x01D8E974 BL 0x1C16F10
	0x01D8E978 MOV X19, X0
	0x01D8E97C ADRP X0, 0x2368000
	0x01D8E980 LDR X0, [X0 + 0xC78]
	0x01D8E984 BL 0x1C16D08
	0x01D8E988 MOV X1, X0
	0x01D8E98C MOV X0, X19
	0x01D8E990 MOV X2, X31
	0x01D8E994 BL 0x337DF1C
	0x01D8E998 ADRP X0, 0x2368000
	0x01D8E99C LDR X0, [X0 + 0xC98]
	0x01D8E9A0 BL 0x1C16D08
	0x01D8E9A4 MOV X1, X0
	0x01D8E9A8 MOV X0, X19
	0x01D8E9AC BL 0x1C16DEC
	0x01D8E9B0 STP X30, X19, [X31 - 0x10]!
	0x01D8E9B4 LDR X9, [X0 + 0x50]
	0x01D8E9B8 CBZ X9, 0x1D8E9D4
	0x01D8E9BC LDUR V0, [X9 + 0x1C]
	0x01D8E9C0 LDR V1, [X9 + 0x1]
	0x01D8E9C4 STUR V0, [X8 + 0xC]
	0x01D8E9C8 STR V1, [X8]
	0x01D8E9CC LDP X30, X19, [X31], #0x10
	0x01D8E9D0 RET
	0x01D8E9D4 ADRP X0, 0x2365000
	0x01D8E9D8 LDR X0, [X0 + 0x5B0]
	0x01D8E9DC BL 0x1C16D08
	0x01D8E9E0 BL 0x1C16F10
	0x01D8E9E4 MOV X19, X0
	0x01D8E9E8 ADRP X0, 0x2368000
	0x01D8E9EC LDR X0, [X0 + 0xCA0]
	0x01D8E9F0 BL 0x1C16D08
	0x01D8E9F4 MOV X1, X0
	0x01D8E9F8 MOV X0, X19
	0x01D8E9FC MOV X2, X31
	0x01D8EA00 BL 0x337DF1C
	0x01D8EA04 ADRP X0, 0x2368000
	0x01D8EA08 LDR X0, [X0 + 0xCA8]
	0x01D8EA0C BL 0x1C16D08
	0x01D8EA10 MOV X1, X0
	0x01D8EA14 MOV X0, X19
	0x01D8EA18 BL 0x1C16DEC
	0x01D8EA1C STP X30, X19, [X31 - 0x10]!
	0x01D8EA20 LDR X8, [X0 + 0x50]
	0x01D8EA24 CBZ X8, 0x1D8EA48
	0x01D8EA28 LDR W9, [X1 + 0x18]
	0x01D8EA2C LDR X10, [X1 + 0x10]
	0x01D8EA30 LDR V0, [X1]
	0x01D8EA34 STR W9, [X8 + 0x28]
	0x01D8EA38 STR X10, [X8 + 0x20]
	0x01D8EA3C STR V0, [X8 + 0x1]
	0x01D8EA40 LDP X30, X19, [X31], #0x10
	0x01D8EA44 RET
	0x01D8EA48 ADRP X0, 0x2365000
	0x01D8EA4C LDR X0, [X0 + 0x5B0]
	0x01D8EA50 BL 0x1C16D08
	0x01D8EA54 BL 0x1C16F10
	0x01D8EA58 MOV X19, X0
	0x01D8EA5C ADRP X0, 0x2368000
	0x01D8EA60 LDR X0, [X0 + 0xCA0]
	0x01D8EA64 BL 0x1C16D08
	0x01D8EA68 MOV X1, X0
	0x01D8EA6C MOV X0, X19
	0x01D8EA70 MOV X2, X31
	0x01D8EA74 BL 0x337DF1C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x264B000
	008 Move W8, [X20+2527]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0x2367000
	015 Move X0, [X0+3696]
	016 Call 0x1C17CF4
	017 Move X0, 0x2369000
	018 Move X0, [X0+3096]
	019 Call 0x1C17CF4
	020 Move X0, 0x2369000
	021 Move X0, [X0+3104]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+2527], W8
	025 Move X23, [X19+128]
	026 Compare X23, 0
	027 JumpIfEqual {87}
	028 Move X22, 0x2367000
	029 Move X22, [X22+3696]
	030 Move X21, 0x2369000
	031 Move X20, [X23+472]
	032 Move X0, [X22]
	033 Move X21, [X21+3104]
	034 Call 0x1C17F10
	035 Move X2, [X21]
	036 Move X1, X19
	037 Move X3, X31
	038 Move X21, X0
	039 Call Action..ctor, X0, X1, X2
	040 Move X0, X20
	041 Move X1, X21
	042 Move X2, X31
	043 Call Delegate.Combine, X0, X1
	044 Move X1, [X22]
	045 Compare X0, 0
	046 JumpIfEqual {52}
	047 Move X8, [X0]
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move [X23+472], X0
	050 Move X8, [X0]
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move [X23+472], X0
	053 Move X23, [X19+128]
	054 Compare X23, 0
	055 JumpIfEqual {87}
	056 Move X21, 0x2369000
	057 Move X20, [X23+480]
	058 Move X21, [X21+3096]
	059 Move X0, X1
	060 Call 0x1C17F10
	061 Move X2, [X21]
	062 Move X1, X19
	063 Move X3, X31
	064 Move X21, X0
	065 Call Action..ctor, X0, X1, X2
	066 Move X0, X20
	067 Move X1, X21
	068 Move X2, X31
	069 Call Delegate.Combine, X0, X1
	070 Compare X0, 0
	071 JumpIfEqual {79}
	072 Move X1, [X22]
	073 Move X8, [X0]
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move [X23+480], X0
	076 Move X8, [X0]
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Call 0x1C181E0
	079 Move [X23+480], X0
	080 Move X20, [X31+32]
	081 Move X19, [X31+40]
	082 Move X22, [X31+16]
	083 Move X21, [X31+24]
	084 Move X30, [X31+48]
	085 Move X23, [X31+56]
	086 Return 
	087 Call 0x1C17F20

Method: System.Void OnDestroy()

Disassembly:
	0x01D8EA78 ADRP X0, 0x2368000
	0x01D8EA7C LDR X0, [X0 + 0xCB0]
	0x01D8EA80 BL 0x1C16D08
	0x01D8EA84 MOV X1, X0
	0x01D8EA88 MOV X0, X19
	0x01D8EA8C BL 0x1C16DEC
	0x01D8EA90 STP X30, X19, [X31 - 0x10]!
	0x01D8EA94 LDR X8, [X0 + 0x50]
	0x01D8EA98 CBZ X8, 0x1D8EAB0
	0x01D8EA9C LDR W8, [X8 + 0x2C]
	0x01D8EAA0 CMP W8, 0x0
	0x01D8EAA4 CSET W0, NE
	0x01D8EAA8 LDP X30, X19, [X31], #0x10
	0x01D8EAAC RET
	0x01D8EAB0 ADRP X0, 0x2365000
	0x01D8EAB4 LDR X0, [X0 + 0x5B0]
	0x01D8EAB8 BL 0x1C16D08
	0x01D8EABC BL 0x1C16F10
	0x01D8EAC0 MOV X19, X0
	0x01D8EAC4 ADRP X0, 0x2368000
	0x01D8EAC8 LDR X0, [X0 + 0xCB8]
	0x01D8EACC BL 0x1C16D08
	0x01D8EAD0 MOV X1, X0
	0x01D8EAD4 MOV X0, X19
	0x01D8EAD8 MOV X2, X31
	0x01D8EADC BL 0x337DF1C
	0x01D8EAE0 ADRP X0, 0x2368000
	0x01D8EAE4 LDR X0, [X0 + 0xCC0]
	0x01D8EAE8 BL 0x1C16D08
	0x01D8EAEC MOV X1, X0
	0x01D8EAF0 MOV X0, X19
	0x01D8EAF4 BL 0x1C16DEC
	0x01D8EAF8 STP X30, X19, [X31 - 0x10]!
	0x01D8EAFC LDR X8, [X0 + 0x50]
	0x01D8EB00 CBZ X8, 0x1D8EB14
	0x01D8EB04 AND W9, W1, 0x1
	0x01D8EB08 STR W9, [X8 + 0x2C]
	0x01D8EB0C LDP X30, X19, [X31], #0x10
	0x01D8EB10 RET
	0x01D8EB14 ADRP X0, 0x2365000
	0x01D8EB18 LDR X0, [X0 + 0x5B0]
	0x01D8EB1C BL 0x1C16D08
	0x01D8EB20 BL 0x1C16F10
	0x01D8EB24 MOV X19, X0
	0x01D8EB28 ADRP X0, 0x2368000
	0x01D8EB2C LDR X0, [X0 + 0xCB8]
	0x01D8EB30 BL 0x1C16D08
	0x01D8EB34 MOV X1, X0
	0x01D8EB38 MOV X0, X19
	0x01D8EB3C MOV X2, X31
	0x01D8EB40 BL 0x337DF1C
	0x01D8EB44 ADRP X0, 0x2368000
	0x01D8EB48 LDR X0, [X0 + 0xCC8]
	0x01D8EB4C BL 0x1C16D08
	0x01D8EB50 MOV X1, X0
	0x01D8EB54 MOV X0, X19
	0x01D8EB58 BL 0x1C16DEC
	0x01D8EB5C STP X30, X19, [X31 - 0x10]!
	0x01D8EB60 LDR X8, [X0 + 0x50]
	0x01D8EB64 CBZ X8, 0x1D8EB74
	0x01D8EB68 LDR W0, [X8 + 0x30]
	0x01D8EB6C LDP X30, X19, [X31], #0x10
	0x01D8EB70 RET
	0x01D8EB74 ADRP X0, 0x2365000
	0x01D8EB78 LDR X0, [X0 + 0x5B0]
	0x01D8EB7C BL 0x1C16D08
	0x01D8EB80 BL 0x1C16F10
	0x01D8EB84 MOV X19, X0
	0x01D8EB88 ADRP X0, 0x2368000
	0x01D8EB8C LDR X0, [X0 + 0xCD0]
	0x01D8EB90 BL 0x1C16D08
	0x01D8EB94 MOV X1, X0
	0x01D8EB98 MOV X0, X19
	0x01D8EB9C MOV X2, X31
	0x01D8EBA0 BL 0x337DF1C
	0x01D8EBA4 ADRP X0, 0x2368000
	0x01D8EBA8 LDR X0, [X0 + 0xCD8]
	0x01D8EBAC BL 0x1C16D08
	0x01D8EBB0 MOV X1, X0
	0x01D8EBB4 MOV X0, X19
	0x01D8EBB8 BL 0x1C16DEC
	0x01D8EBBC STP X30, X19, [X31 - 0x10]!
	0x01D8EBC0 LDR X8, [X0 + 0x50]
	0x01D8EBC4 CBZ X8, 0x1D8EBD4
	0x01D8EBC8 STR W1, [X8 + 0x30]
	0x01D8EBCC LDP X30, X19, [X31], #0x10
	0x01D8EBD0 RET
	0x01D8EBD4 ADRP X0, 0x2365000
	0x01D8EBD8 LDR X0, [X0 + 0x5B0]
	0x01D8EBDC BL 0x1C16D08
	0x01D8EBE0 BL 0x1C16F10
	0x01D8EBE4 MOV X19, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x264B000
	008 Move X21, 0x2369000
	009 Move W8, [X20+2528]
	010 Move X21, [X21+2680]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0x2367000
	017 Move X0, [X0+3696]
	018 Call 0x1C17CF4
	019 Move X0, 0x2369000
	020 Move X0, [X0+3096]
	021 Call 0x1C17CF4
	022 Move X0, 0x2369000
	023 Move X0, [X0+3104]
	024 Call 0x1C17CF4
	025 Move X0, 0x2369000
	026 Move X0, [X0+2680]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X20+2528], W8
	030 Move X0, [X21]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Compare X19, 0
	036 JumpIfEqual {102}
	037 Move W8, [X19+48]
	038 Move X23, [X19+128]
	039 Or W8, W8, 8
	040 Move [X19+48], W8
	041 Compare X23, 0
	042 JumpIfEqual {102}
	043 Move X22, 0x2367000
	044 Move X22, [X22+3696]
	045 Move X21, 0x2369000
	046 Move X20, [X23+472]
	047 Move X0, [X22]
	048 Move X21, [X21+3104]
	049 Call 0x1C17F10
	050 Move X2, [X21]
	051 Move X1, X19
	052 Move X3, X31
	053 Move X21, X0
	054 Call Action..ctor, X0, X1, X2
	055 Move X0, X20
	056 Move X1, X21
	057 Move X2, X31
	058 Call Delegate.Remove, X0, X1
	059 Move X1, [X22]
	060 Compare X0, 0
	061 JumpIfEqual {67}
	062 Move X8, [X0]
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move [X23+472], X0
	065 Move X8, [X0]
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move [X23+472], X0
	068 Move X23, [X19+128]
	069 Compare X23, 0
	070 JumpIfEqual {102}
	071 Move X21, 0x2369000
	072 Move X20, [X23+480]
	073 Move X21, [X21+3096]
	074 Move X0, X1
	075 Call 0x1C17F10
	076 Move X2, [X21]
	077 Move X1, X19
	078 Move X3, X31
	079 Move X21, X0
	080 Call Action..ctor, X0, X1, X2
	081 Move X0, X20
	082 Move X1, X21
	083 Move X2, X31
	084 Call Delegate.Remove, X0, X1
	085 Compare X0, 0
	086 JumpIfEqual {94}
	087 Move X1, [X22]
	088 Move X8, [X0]
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Move [X23+480], X0
	091 Move X8, [X0]
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Call 0x1C181E0
	094 Move [X23+480], X0
	095 Move X20, [X31+32]
	096 Move X19, [X31+40]
	097 Move X22, [X31+16]
	098 Move X21, [X31+24]
	099 Move X30, [X31+48]
	100 Move X23, [X31+56]
	101 Return 
	102 Call 0x1C17F20

Method: System.Void HandleUse()

Disassembly:
	0x01D8EBE8 ADRP X0, 0x2368000
	0x01D8EBEC LDR X0, [X0 + 0xCD0]
	0x01D8EBF0 BL 0x1C16D08
	0x01D8EBF4 MOV X1, X0
	0x01D8EBF8 MOV X0, X19
	0x01D8EBFC MOV X2, X31
	0x01D8EC00 BL 0x337DF1C
	0x01D8EC04 ADRP X0, 0x2368000
	0x01D8EC08 LDR X0, [X0 + 0xCE0]
	0x01D8EC0C BL 0x1C16D08
	0x01D8EC10 MOV X1, X0
	0x01D8EC14 MOV X0, X19
	0x01D8EC18 BL 0x1C16DEC
	0x01D8EC1C STP X30, X19, [X31 - 0x10]!
	0x01D8EC20 LDR X9, [X0 + 0x50]
	0x01D8EC24 CBZ X9, 0x1D8EC3C
	0x01D8EC28 LDUR V0, [X9 + 0x44]
	0x01D8EC2C LDUR V1, [X9 + 0x34]
	0x01D8EC30 STP V1, V0, [X8]
	0x01D8EC34 LDP X30, X19, [X31], #0x10
	0x01D8EC38 RET
	0x01D8EC3C ADRP X0, 0x2365000
	0x01D8EC40 LDR X0, [X0 + 0x5B0]
	0x01D8EC44 BL 0x1C16D08
	0x01D8EC48 BL 0x1C16F10
	0x01D8EC4C MOV X19, X0
	0x01D8EC50 ADRP X0, 0x2368000
	0x01D8EC54 LDR X0, [X0 + 0xCE8]
	0x01D8EC58 BL 0x1C16D08
	0x01D8EC5C MOV X1, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, X0
	005 Call FlareGun.get_hasAmmo, X0
	006 Move TEMP, X0
	007 And TEMP, TEMP, 1
	008 Compare TEMP, 1
	009 JumpIfNotEqual {23}
	010 Move X0, X20
	011 Call FlareGun.Shoot, X0
	012 Move X1, X0
	013 Move X0, X20
	014 Move X2, X31
	015 Call MonoBehaviour.StartCoroutine, X0, X1
	016 Move X0, X20
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 Move W1, W31
	020 Move X30, [X31+32]
	021 Call FlareGun.set_hasAmmo, X0, X1
	022 Return 
	023 Move X19, [X20+152]
	024 Move X0, X20
	025 Move X1, X31
	026 Call Component.get_transform, X0
	027 Compare X0, 0
	028 JumpIfEqual {39}
	029 Move X1, X31
	030 Call Transform.get_position, X0
	031 Move X0, X19
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move S3, 1
	035 Move X1, X31
	036 Move X30, [X31+32]
	037 Call SFXManager.PlaySFXAsRPC, X0, X1, V0
	038 Return 
	039 Call 0x1C17F20

Method: System.Void HandleRespawned()

Disassembly:
	0x01D8ECC0 BL 0x1C16D08
	0x01D8ECC4 MOV X1, X0

ISIL:
	001 Move W1, 1
	002 Call FlareGun.set_hasAmmo, X0, X1
	003 Return 

Method: System.Collections.IEnumerator Shoot()

Disassembly:
	0x01D8EC60 MOV X0, X19
	0x01D8EC64 MOV X2, X31
	0x01D8EC68 BL 0x337DF1C
	0x01D8EC6C ADRP X0, 0x2368000
	0x01D8EC70 LDR X0, [X0 + 0xCF0]
	0x01D8EC74 BL 0x1C16D08
	0x01D8EC78 MOV X1, X0
	0x01D8EC7C MOV X0, X19
	0x01D8EC80 BL 0x1C16DEC
	0x01D8EC84 STP X30, X19, [X31 - 0x10]!
	0x01D8EC88 LDR X8, [X0 + 0x50]
	0x01D8EC8C CBZ X8, 0x1D8ECA4
	0x01D8EC90 LDP V1, V0, [X1]
	0x01D8EC94 STUR V0, [X8 + 0x44]
	0x01D8EC98 STUR V1, [X8 + 0x34]
	0x01D8EC9C LDP X30, X19, [X31], #0x10
	0x01D8ECA0 RET
	0x01D8ECA4 ADRP X0, 0x2365000
	0x01D8ECA8 LDR X0, [X0 + 0x5B0]
	0x01D8ECAC BL 0x1C16D08
	0x01D8ECB0 BL 0x1C16F10
	0x01D8ECB4 MOV X19, X0
	0x01D8ECB8 ADRP X0, 0x2368000
	0x01D8ECBC LDR X0, [X0 + 0xCE8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x264B000
	006 Move X21, 0x2369000
	007 Move W8, [X20+2529]
	008 Move X21, [X21+3112]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x2369000
	015 Move X0, [X0+3112]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2529], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move X1, X31
	022 Move X20, X0
	023 Call Object..ctor, X0
	024 Move [X20+16], W31
	025 Move [X20+32], X19
	026 Move X0, X20
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Return X0

Method: System.Void .ctor()

Disassembly:
	0x01D8ECF0 LDR X8, [X0 + 0x50]
	0x01D8ECF4 CBZ X8, 0x1D8ED04
	0x01D8ECF8 LDR W0, [X8 + 0x54]
	0x01D8ECFC LDP X30, X19, [X31], #0x10
	0x01D8ED00 RET
	0x01D8ED04 ADRP X0, 0x2365000

ISIL:
	001 Move W8, 0x41800000
	002 Move W9, 1
	003 Move X1, X31
	004 Move [X0+160], W8
	005 Move [X0+176], W9
	006 Call NetworkBehaviour..ctor, X0
	007 Return 

Method: System.Void CopyBackingFieldsToState(System.Boolean param_0)

Disassembly:
	0x01D8ED08 LDR X0, [X0 + 0x5B0]
	0x01D8ED0C BL 0x1C16D08

ISIL:
	001 Move W1, [X0+176]
	002 Call FlareGun.set_hasAmmo, X0, X1
	003 Return 

Method: System.Void CopyStateToBackingFields()

Disassembly:
	0x01D8ED10 BL 0x1C16F10
	0x01D8ED14 MOV X19, X0
	0x01D8ED18 ADRP X0, 0x2368000
	0x01D8ED1C LDR X0, [X0 + 0xD00]
	0x01D8ED20 BL 0x1C16D08
	0x01D8ED24 MOV X1, X0
	0x01D8ED28 MOV X0, X19

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call FlareGun.get_hasAmmo, X0
	005 And W8, W0, 1
	006 Move [X19+176], W8
	007 Move X30, [X31+16]
	008 Move X19, [X31+24]
	009 Return 

