Type: AnimalCompany.FlareGun

Method: System.Boolean get_hasAmmo()

Disassembly:
	0x01C9E0F8 LDR X0, [X0 + 0x80]
	0x01C9E0FC RET
	0x01C9E100 BICS W31, W2, W1, 0x0
	0x01C9E104 CSET W0, EQ
	0x01C9E108 RET
	0x01C9E10C STR X30, [X31 - 0x10]!
	0x01C9E110 LDR X8, [X0 + 0x80]
	0x01C9E114 CBZ X8, 0x1C9E130
	0x01C9E118 LDRB W8, [X8 + 0x28]
	0x01C9E11C ANDS W31, W8, 0x4
	0x01C9E120 MOVZ W8, 0x1
	0x01C9E124 CINC W0, W8, NE
	0x01C9E128 LDR X30, [X31], #0x10
	0x01C9E12C RET
	0x01C9E130 BL 0x1B6EA1C
	0x01C9E134 ANDS W31, W1, 0x4
	0x01C9E138 MOVZ W8, 0x1
	0x01C9E13C CINC W0, W8, NE
	0x01C9E140 RET
	0x01C9E144 STR X30, [X31 - 0x10]!
	0x01C9E148 LDR X8, [X0 + 0x80]
	0x01C9E14C CBZ X8, 0x1C9E168
	0x01C9E150 LDRB W8, [X8 + 0x28]
	0x01C9E154 ANDS W31, W8, 0xE
	0x01C9E158 CSET W8, NE
	0x01C9E15C UBFM W0, W8, 0x1F, 0x1E

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+80]
	004 Compare X8, 0
	005 JumpIfEqual {12}
	006 Move W8, [X8]
	007 NotImplemented "Instruction CMP not yet implemented."
	008 NotImplemented "Instruction CSET not yet implemented."
	009 Move X30, [X31+16]
	010 Move X19, [X31+24]
	011 Return X0
	012 Move X0, 0x22B0000
	013 Move X0, [X0+1168]
	014 Call 0x1B6F804
	015 Call 0x1B6FA0C
	016 Move X19, X0
	017 Move X0, 0x22B1000
	018 Move X0, [X0+696]
	019 Call 0x1B6F804
	020 Move X1, X0
	021 Move X0, X19
	022 Move X2, X31
	023 Call InvalidOperationException..ctor, X0, X1
	024 Move X0, 0x22B1000
	025 Move X0, [X0+704]
	026 Call 0x1B6F804
	027 Move X1, X0
	028 Move X0, X19
	029 Call 0x1B6F8E8

Method: System.Void set_hasAmmo(System.Boolean value)

Disassembly:
	0x01C9E160 LDR X30, [X31], #0x10
	0x01C9E164 RET
	0x01C9E168 BL 0x1B6EA1C
	0x01C9E16C ANDS W31, W1, 0xE
	0x01C9E170 CSET W8, NE
	0x01C9E174 UBFM W0, W8, 0x1F, 0x1E
	0x01C9E178 RET
	0x01C9E17C STP X30, X19, [X31 - 0x10]!
	0x01C9E180 LDR X8, [X0 + 0x50]
	0x01C9E184 CBZ X8, 0x1C9E194
	0x01C9E188 STR X1, [X8]
	0x01C9E18C LDP X30, X19, [X31], #0x10
	0x01C9E190 RET
	0x01C9E194 ADRP X0, 0x22AF000
	0x01C9E198 LDR X0, [X0 + 0x490]
	0x01C9E19C BL 0x1B6E804
	0x01C9E1A0 BL 0x1B6EA0C
	0x01C9E1A4 MOV X19, X0
	0x01C9E1A8 ADRP X0, 0x22B0000
	0x01C9E1AC LDR X0, [X0 + 0x1D0]
	0x01C9E1B0 BL 0x1B6E804
	0x01C9E1B4 MOV X1, X0
	0x01C9E1B8 MOV X0, X19
	0x01C9E1BC MOV X2, X31
	0x01C9E1C0 BL 0x31E7550

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+80]
	004 Compare X8, 0
	005 JumpIfEqual {11}
	006 And W9, W1, 1
	007 Move [X8], W9
	008 Move X30, [X31+16]
	009 Move X19, [X31+24]
	010 Return 
	011 Move X0, 0x22B0000
	012 Move X0, [X0+1168]
	013 Call 0x1B6F804
	014 Call 0x1B6FA0C
	015 Move X19, X0
	016 Move X0, 0x22B1000
	017 Move X0, [X0+696]
	018 Call 0x1B6F804
	019 Move X1, X0
	020 Move X0, X19
	021 Move X2, X31
	022 Call InvalidOperationException..ctor, X0, X1
	023 Move X0, 0x22B1000
	024 Move X0, [X0+712]
	025 Call 0x1B6F804
	026 Move X1, X0
	027 Move X0, X19
	028 Call 0x1B6F8E8

Method: System.Void Awake()

Disassembly:
	0x01C9E1C4 ADRP X0, 0x22B0000
	0x01C9E1C8 LDR X0, [X0 + 0x348]
	0x01C9E1CC BL 0x1B6E804
	0x01C9E1D0 MOV X1, X0
	0x01C9E1D4 MOV X0, X19
	0x01C9E1D8 BL 0x1B6E8E8
	0x01C9E1DC STP X30, X19, [X31 - 0x10]!
	0x01C9E1E0 LDR X8, [X0 + 0x50]
	0x01C9E1E4 CBZ X8, 0x1C9E1F4
	0x01C9E1E8 STR X1, [X8 + 0x8]
	0x01C9E1EC LDP X30, X19, [X31], #0x10
	0x01C9E1F0 RET
	0x01C9E1F4 ADRP X0, 0x22AF000
	0x01C9E1F8 LDR X0, [X0 + 0x490]
	0x01C9E1FC BL 0x1B6E804
	0x01C9E200 BL 0x1B6EA0C
	0x01C9E204 MOV X19, X0
	0x01C9E208 ADRP X0, 0x22B0000
	0x01C9E20C LDR X0, [X0 + 0x330]
	0x01C9E210 BL 0x1B6E804
	0x01C9E214 MOV X1, X0
	0x01C9E218 MOV X0, X19
	0x01C9E21C MOV X2, X31
	0x01C9E220 BL 0x31E7550
	0x01C9E224 ADRP X0, 0x22B0000
	0x01C9E228 LDR X0, [X0 + 0x350]
	0x01C9E22C BL 0x1B6E804
	0x01C9E230 MOV X1, X0
	0x01C9E234 MOV X0, X19
	0x01C9E238 BL 0x1B6E8E8
	0x01C9E23C STP X30, X19, [X31 - 0x10]!
	0x01C9E240 LDR X9, [X0 + 0x50]
	0x01C9E244 CBZ X9, 0x1C9E260
	0x01C9E248 LDUR V0, [X9 + 0x1C]
	0x01C9E24C LDR V1, [X9 + 0x1]
	0x01C9E250 STUR V0, [X8 + 0xC]
	0x01C9E254 STR V1, [X8]
	0x01C9E258 LDP X30, X19, [X31], #0x10
	0x01C9E25C RET
	0x01C9E260 ADRP X0, 0x22AF000
	0x01C9E264 LDR X0, [X0 + 0x490]
	0x01C9E268 BL 0x1B6E804
	0x01C9E26C BL 0x1B6EA0C
	0x01C9E270 MOV X19, X0
	0x01C9E274 ADRP X0, 0x22B0000
	0x01C9E278 LDR X0, [X0 + 0x358]
	0x01C9E27C BL 0x1B6E804
	0x01C9E280 MOV X1, X0
	0x01C9E284 MOV X0, X19
	0x01C9E288 MOV X2, X31
	0x01C9E28C BL 0x31E7550
	0x01C9E290 ADRP X0, 0x22B0000
	0x01C9E294 LDR X0, [X0 + 0x360]
	0x01C9E298 BL 0x1B6E804
	0x01C9E29C MOV X1, X0
	0x01C9E2A0 MOV X0, X19
	0x01C9E2A4 BL 0x1B6E8E8
	0x01C9E2A8 STP X30, X19, [X31 - 0x10]!
	0x01C9E2AC LDR X8, [X0 + 0x50]
	0x01C9E2B0 CBZ X8, 0x1C9E2D4
	0x01C9E2B4 LDR W9, [X1 + 0x18]
	0x01C9E2B8 LDR X10, [X1 + 0x10]
	0x01C9E2BC LDR V0, [X1]
	0x01C9E2C0 STR W9, [X8 + 0x28]
	0x01C9E2C4 STR X10, [X8 + 0x20]
	0x01C9E2C8 STR V0, [X8 + 0x1]
	0x01C9E2CC LDP X30, X19, [X31], #0x10
	0x01C9E2D0 RET
	0x01C9E2D4 ADRP X0, 0x22AF000
	0x01C9E2D8 LDR X0, [X0 + 0x490]
	0x01C9E2DC BL 0x1B6E804
	0x01C9E2E0 BL 0x1B6EA0C
	0x01C9E2E4 MOV X19, X0
	0x01C9E2E8 ADRP X0, 0x22B0000
	0x01C9E2EC LDR X0, [X0 + 0x358]
	0x01C9E2F0 BL 0x1B6E804
	0x01C9E2F4 MOV X1, X0
	0x01C9E2F8 MOV X0, X19
	0x01C9E2FC MOV X2, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x2586000
	008 Move W8, [X20+1028]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0x22B1000
	015 Move X0, [X0+368]
	016 Call 0x1B6F7F0
	017 Move X0, 0x22B1000
	018 Move X0, [X0+720]
	019 Call 0x1B6F7F0
	020 Move X0, 0x22B1000
	021 Move X0, [X0+728]
	022 Call 0x1B6F7F0
	023 Move W8, 1
	024 Move [X20+1028], W8
	025 Move X23, [X19+128]
	026 Compare X23, 0
	027 JumpIfEqual {87}
	028 Move X22, 0x22B1000
	029 Move X22, [X22+368]
	030 Move X21, 0x22B1000
	031 Move X20, [X23+408]
	032 Move X0, [X22]
	033 Move X21, [X21+728]
	034 Call 0x1B6FA0C
	035 Move X2, [X21]
	036 Move X1, X19
	037 Move X3, X31
	038 Move X21, X0
	039 Call Action..ctor, X0, X1, X2
	040 Move X0, X20
	041 Move X1, X21
	042 Move X2, X31
	043 Call Delegate.Combine, X0, X1
	044 Move X1, [X22]
	045 Compare X0, 0
	046 JumpIfEqual {52}
	047 Move X8, [X0]
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move [X23+408], X0
	050 Move X8, [X0]
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move [X23+408], X0
	053 Move X23, [X19+128]
	054 Compare X23, 0
	055 JumpIfEqual {87}
	056 Move X21, 0x22B1000
	057 Move X20, [X23+416]
	058 Move X21, [X21+720]
	059 Move X0, X1
	060 Call 0x1B6FA0C
	061 Move X2, [X21]
	062 Move X1, X19
	063 Move X3, X31
	064 Move X21, X0
	065 Call Action..ctor, X0, X1, X2
	066 Move X0, X20
	067 Move X1, X21
	068 Move X2, X31
	069 Call Delegate.Combine, X0, X1
	070 Compare X0, 0
	071 JumpIfEqual {79}
	072 Move X1, [X22]
	073 Move X8, [X0]
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move [X23+416], X0
	076 Move X8, [X0]
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Call 0x1B6FCDC
	079 Move [X23+416], X0
	080 Move X20, [X31+32]
	081 Move X19, [X31+40]
	082 Move X22, [X31+16]
	083 Move X21, [X31+24]
	084 Move X30, [X31+48]
	085 Move X23, [X31+56]
	086 Return 
	087 Call 0x1B6FA1C

Method: System.Void OnDestroy()

Disassembly:
	0x01C9E300 BL 0x31E7550
	0x01C9E304 ADRP X0, 0x22B0000
	0x01C9E308 LDR X0, [X0 + 0x368]
	0x01C9E30C BL 0x1B6E804
	0x01C9E310 MOV X1, X0
	0x01C9E314 MOV X0, X19
	0x01C9E318 BL 0x1B6E8E8
	0x01C9E31C STP X30, X19, [X31 - 0x10]!
	0x01C9E320 LDR X8, [X0 + 0x50]
	0x01C9E324 CBZ X8, 0x1C9E33C
	0x01C9E328 LDR W8, [X8 + 0x2C]
	0x01C9E32C CMP W8, 0x0
	0x01C9E330 CSET W0, NE
	0x01C9E334 LDP X30, X19, [X31], #0x10
	0x01C9E338 RET
	0x01C9E33C ADRP X0, 0x22AF000
	0x01C9E340 LDR X0, [X0 + 0x490]
	0x01C9E344 BL 0x1B6E804
	0x01C9E348 BL 0x1B6EA0C
	0x01C9E34C MOV X19, X0
	0x01C9E350 ADRP X0, 0x22B0000
	0x01C9E354 LDR X0, [X0 + 0x370]
	0x01C9E358 BL 0x1B6E804
	0x01C9E35C MOV X1, X0
	0x01C9E360 MOV X0, X19
	0x01C9E364 MOV X2, X31
	0x01C9E368 BL 0x31E7550
	0x01C9E36C ADRP X0, 0x22B0000
	0x01C9E370 LDR X0, [X0 + 0x378]
	0x01C9E374 BL 0x1B6E804
	0x01C9E378 MOV X1, X0
	0x01C9E37C MOV X0, X19
	0x01C9E380 BL 0x1B6E8E8
	0x01C9E384 STP X30, X19, [X31 - 0x10]!
	0x01C9E388 LDR X8, [X0 + 0x50]
	0x01C9E38C CBZ X8, 0x1C9E3A0
	0x01C9E390 AND W9, W1, 0x1
	0x01C9E394 STR W9, [X8 + 0x2C]
	0x01C9E398 LDP X30, X19, [X31], #0x10
	0x01C9E39C RET
	0x01C9E3A0 ADRP X0, 0x22AF000
	0x01C9E3A4 LDR X0, [X0 + 0x490]
	0x01C9E3A8 BL 0x1B6E804
	0x01C9E3AC BL 0x1B6EA0C
	0x01C9E3B0 MOV X19, X0
	0x01C9E3B4 ADRP X0, 0x22B0000
	0x01C9E3B8 LDR X0, [X0 + 0x370]
	0x01C9E3BC BL 0x1B6E804
	0x01C9E3C0 MOV X1, X0
	0x01C9E3C4 MOV X0, X19
	0x01C9E3C8 MOV X2, X31
	0x01C9E3CC BL 0x31E7550
	0x01C9E3D0 ADRP X0, 0x22B0000
	0x01C9E3D4 LDR X0, [X0 + 0x380]
	0x01C9E3D8 BL 0x1B6E804
	0x01C9E3DC MOV X1, X0
	0x01C9E3E0 MOV X0, X19
	0x01C9E3E4 BL 0x1B6E8E8
	0x01C9E3E8 STP X30, X19, [X31 - 0x10]!
	0x01C9E3EC LDR X9, [X0 + 0x50]
	0x01C9E3F0 CBZ X9, 0x1C9E404
	0x01C9E3F4 LDP V1, V0, [X9 + 0x30]
	0x01C9E3F8 STP V1, V0, [X8]
	0x01C9E3FC LDP X30, X19, [X31], #0x10
	0x01C9E400 RET
	0x01C9E404 ADRP X0, 0x22AF000
	0x01C9E408 LDR X0, [X0 + 0x490]
	0x01C9E40C BL 0x1B6E804
	0x01C9E410 BL 0x1B6EA0C
	0x01C9E414 MOV X19, X0
	0x01C9E418 ADRP X0, 0x22B0000
	0x01C9E41C LDR X0, [X0 + 0x388]
	0x01C9E420 BL 0x1B6E804
	0x01C9E424 MOV X1, X0
	0x01C9E428 MOV X0, X19
	0x01C9E42C MOV X2, X31
	0x01C9E430 BL 0x31E7550
	0x01C9E434 ADRP X0, 0x22B0000
	0x01C9E438 LDR X0, [X0 + 0x390]
	0x01C9E43C BL 0x1B6E804
	0x01C9E440 MOV X1, X0
	0x01C9E444 MOV X0, X19
	0x01C9E448 BL 0x1B6E8E8
	0x01C9E44C STP X30, X19, [X31 - 0x10]!
	0x01C9E450 LDR X8, [X0 + 0x50]
	0x01C9E454 CBZ X8, 0x1C9E468
	0x01C9E458 LDP V1, V0, [X1]
	0x01C9E45C STP V1, V0, [X8 + 0x30]
	0x01C9E460 LDP X30, X19, [X31], #0x10
	0x01C9E464 RET
	0x01C9E468 ADRP X0, 0x22AF000
	0x01C9E46C LDR X0, [X0 + 0x490]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x2586000
	008 Move X21, 0x22B1000
	009 Move W8, [X20+1029]
	010 Move X21, [X21+448]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0x22B1000
	017 Move X0, [X0+368]
	018 Call 0x1B6F7F0
	019 Move X0, 0x22B1000
	020 Move X0, [X0+720]
	021 Call 0x1B6F7F0
	022 Move X0, 0x22B1000
	023 Move X0, [X0+728]
	024 Call 0x1B6F7F0
	025 Move X0, 0x22B1000
	026 Move X0, [X0+448]
	027 Call 0x1B6F7F0
	028 Move W8, 1
	029 Move [X20+1029], W8
	030 Move X0, [X21]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1B6F8F8
	035 Compare X19, 0
	036 JumpIfEqual {102}
	037 Move W8, [X19+48]
	038 Move X23, [X19+128]
	039 Or W8, W8, 8
	040 Move [X19+48], W8
	041 Compare X23, 0
	042 JumpIfEqual {102}
	043 Move X22, 0x22B1000
	044 Move X22, [X22+368]
	045 Move X21, 0x22B1000
	046 Move X20, [X23+408]
	047 Move X0, [X22]
	048 Move X21, [X21+728]
	049 Call 0x1B6FA0C
	050 Move X2, [X21]
	051 Move X1, X19
	052 Move X3, X31
	053 Move X21, X0
	054 Call Action..ctor, X0, X1, X2
	055 Move X0, X20
	056 Move X1, X21
	057 Move X2, X31
	058 Call Delegate.Remove, X0, X1
	059 Move X1, [X22]
	060 Compare X0, 0
	061 JumpIfEqual {67}
	062 Move X8, [X0]
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move [X23+408], X0
	065 Move X8, [X0]
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move [X23+408], X0
	068 Move X23, [X19+128]
	069 Compare X23, 0
	070 JumpIfEqual {102}
	071 Move X21, 0x22B1000
	072 Move X20, [X23+416]
	073 Move X21, [X21+720]
	074 Move X0, X1
	075 Call 0x1B6FA0C
	076 Move X2, [X21]
	077 Move X1, X19
	078 Move X3, X31
	079 Move X21, X0
	080 Call Action..ctor, X0, X1, X2
	081 Move X0, X20
	082 Move X1, X21
	083 Move X2, X31
	084 Call Delegate.Remove, X0, X1
	085 Compare X0, 0
	086 JumpIfEqual {94}
	087 Move X1, [X22]
	088 Move X8, [X0]
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Move [X23+416], X0
	091 Move X8, [X0]
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Call 0x1B6FCDC
	094 Move [X23+416], X0
	095 Move X20, [X31+32]
	096 Move X19, [X31+40]
	097 Move X22, [X31+16]
	098 Move X21, [X31+24]
	099 Move X30, [X31+48]
	100 Move X23, [X31+56]
	101 Return 
	102 Call 0x1B6FA1C

Method: System.Void HandleUse()

Disassembly:
	0x01C9E470 BL 0x1B6E804
	0x01C9E474 BL 0x1B6EA0C
	0x01C9E478 MOV X19, X0
	0x01C9E47C ADRP X0, 0x22B0000
	0x01C9E480 LDR X0, [X0 + 0x388]
	0x01C9E484 BL 0x1B6E804
	0x01C9E488 MOV X1, X0
	0x01C9E48C MOV X0, X19
	0x01C9E490 MOV X2, X31
	0x01C9E494 BL 0x31E7550
	0x01C9E498 ADRP X0, 0x22B0000
	0x01C9E49C LDR X0, [X0 + 0x398]
	0x01C9E4A0 BL 0x1B6E804
	0x01C9E4A4 MOV X1, X0
	0x01C9E4A8 MOV X0, X19
	0x01C9E4AC BL 0x1B6E8E8
	0x01C9E4B0 STP X30, X19, [X31 - 0x10]!
	0x01C9E4B4 LDR X8, [X0 + 0x50]
	0x01C9E4B8 CBZ X8, 0x1C9E4C8
	0x01C9E4BC LDR W0, [X8 + 0x50]
	0x01C9E4C0 LDP X30, X19, [X31], #0x10
	0x01C9E4C4 RET
	0x01C9E4C8 ADRP X0, 0x22AF000
	0x01C9E4CC LDR X0, [X0 + 0x490]
	0x01C9E4D0 BL 0x1B6E804
	0x01C9E4D4 BL 0x1B6EA0C
	0x01C9E4D8 MOV X19, X0
	0x01C9E4DC ADRP X0, 0x22B0000
	0x01C9E4E0 LDR X0, [X0 + 0x3A0]
	0x01C9E4E4 BL 0x1B6E804

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, X0
	005 Call FlareGun.get_hasAmmo, X0
	006 Move TEMP, X0
	007 And TEMP, TEMP, 1
	008 Compare TEMP, 1
	009 JumpIfNotEqual {23}
	010 Move X0, X20
	011 Call FlareGun.Shoot, X0
	012 Move X1, X0
	013 Move X0, X20
	014 Move X2, X31
	015 Call MonoBehaviour.StartCoroutine, X0, X1
	016 Move X0, X20
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 Move W1, W31
	020 Move X30, [X31+32]
	021 Call FlareGun.set_hasAmmo, X0, X1
	022 Return 
	023 Move X19, [X20+152]
	024 Move X0, X20
	025 Move X1, X31
	026 Call Component.get_transform, X0
	027 Compare X0, 0
	028 JumpIfEqual {39}
	029 Move X1, X31
	030 Call Transform.get_position, X0
	031 Move X0, X19
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move S3, 1
	035 Move X1, X31
	036 Move X30, [X31+32]
	037 Call SFXManager.PlaySFXAsRPC, X0, X1, V0
	038 Return 
	039 Call 0x1B6FA1C

Method: System.Void HandleRespawned()

Disassembly:
	0x01C9E548 MOV X1, X0
	0x01C9E54C MOV X0, X19

ISIL:
	001 Move W1, 1
	002 Call FlareGun.set_hasAmmo, X0, X1
	003 Return 

Method: System.Collections.IEnumerator Shoot()

Disassembly:
	0x01C9E4E8 MOV X1, X0
	0x01C9E4EC MOV X0, X19
	0x01C9E4F0 MOV X2, X31
	0x01C9E4F4 BL 0x31E7550
	0x01C9E4F8 ADRP X0, 0x22B0000
	0x01C9E4FC LDR X0, [X0 + 0x3A8]
	0x01C9E500 BL 0x1B6E804
	0x01C9E504 MOV X1, X0
	0x01C9E508 MOV X0, X19
	0x01C9E50C BL 0x1B6E8E8
	0x01C9E510 STP X30, X19, [X31 - 0x10]!
	0x01C9E514 LDR X8, [X0 + 0x50]
	0x01C9E518 CBZ X8, 0x1C9E528
	0x01C9E51C STR W1, [X8 + 0x50]
	0x01C9E520 LDP X30, X19, [X31], #0x10
	0x01C9E524 RET
	0x01C9E528 ADRP X0, 0x22AF000
	0x01C9E52C LDR X0, [X0 + 0x490]
	0x01C9E530 BL 0x1B6E804
	0x01C9E534 BL 0x1B6EA0C
	0x01C9E538 MOV X19, X0
	0x01C9E53C ADRP X0, 0x22B0000
	0x01C9E540 LDR X0, [X0 + 0x3A0]
	0x01C9E544 BL 0x1B6E804

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x2586000
	006 Move X21, 0x22B1000
	007 Move W8, [X20+1030]
	008 Move X21, [X21+736]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x22B1000
	015 Move X0, [X0+736]
	016 Call 0x1B6F7F0
	017 Move W8, 1
	018 Move [X20+1030], W8
	019 Move X0, [X21]
	020 Call 0x1B6FA0C
	021 Move X1, X31
	022 Move X20, X0
	023 Call Object..ctor, X0
	024 Move [X20+16], W31
	025 Move [X20+32], X19
	026 Move X0, X20
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Return X0

Method: System.Void .ctor()

Disassembly:
	0x01C9E578 LDR X0, [X0 + 0x130]
	0x01C9E57C RET
	0x01C9E580 LDRB W0, [X0 + 0x8C]
	0x01C9E584 RET
	0x01C9E588 LDRB W0, [X0 + 0x8D]
	0x01C9E58C RET

ISIL:
	001 Move W8, 0x41800000
	002 Move W9, 1
	003 Move X1, X31
	004 Move [X0+160], W8
	005 Move [X0+176], W9
	006 Call NetworkBehaviour..ctor, X0
	007 Return 

Method: System.Void CopyBackingFieldsToState(System.Boolean param_0)

Disassembly:
	0x01C9E590 LDRB W0, [X0 + 0x8E]
	0x01C9E594 RET

ISIL:
	001 Move W1, [X0+176]
	002 Call FlareGun.set_hasAmmo, X0, X1
	003 Return 

Method: System.Void CopyStateToBackingFields()

Disassembly:
	0x01C9E598 STR X30, [X31 - 0x20]!
	0x01C9E59C STP X20, X19, [X31 + 0x10]
	0x01C9E5A0 ADRP X20, 0x2585000
	0x01C9E5A4 LDRB W8, [X20 + 0x40E]
	0x01C9E5A8 MOV X19, X0
	0x01C9E5AC TBNZ X8, 0x0, 0x1C9E5D0
	0x01C9E5B0 ADRP X0, 0x22B0000

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call FlareGun.get_hasAmmo, X0
	005 And W8, W0, 1
	006 Move [X19+176], W8
	007 Move X30, [X31+16]
	008 Move X19, [X31+24]
	009 Return 

