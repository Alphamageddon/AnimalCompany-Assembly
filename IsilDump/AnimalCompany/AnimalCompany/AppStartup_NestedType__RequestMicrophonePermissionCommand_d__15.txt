Type: AnimalCompany.AppStartup/<RequestMicrophonePermissionCommand>d__15

Method: System.Void .ctor(System.Int32 <>1__state)

Disassembly:
	0x01C8F4D8 BL 0x31E1CA0
	0x01C8F4DC MOV X20, X0
	0x01C8F4E0 MOV X0, X19
	0x01C8F4E4 MOV X1, X20
	0x01C8F4E8 MOV X2, X31
	0x01C8F4EC BL 0x308FD40
	0x01C8F4F0 TBZ X0, 0x0, 0x1C8F50C
	0x01C8F4F4 LDR X0, [X21]
	0x01C8F4F8 MOV X1, X20
	0x01C8F4FC MOV X2, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move [X20+16], W19
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X30, [X31+32]
	012 Return 

Method: System.Void System.IDisposable.Dispose()

Disassembly:
	0x01C91310 LDP X9, X1, [X8 + 0x168]

ISIL:
	001 Return 

Method: System.Boolean MoveNext()

Disassembly:
	0x01C91314 BLR X9
	0x01C91318 CBZ X21, 0x1C913BC
	0x01C9131C LDR W8, [X21 + 0x18]
	0x01C91320 CMP X22, X8
	0x01C91324 B.CS 0x1C913C0
	0x01C91328 STR X0, [X24, X22, LSL #3]
	0x01C9132C MOV X0, X20
	0x01C91330 MOV X1, X31
	0x01C91334 ADD X22, X22, 0x1
	0x01C91338 BL 0x31FF484
	0x01C9133C CMP X22, W0, SXTW
	0x01C91340 B.LT 0x1C912E8
	0x01C91344 LDR X8, [X19]
	0x01C91348 MOV X0, X19
	0x01C9134C LDP X9, X1, [X8 + 0x1A8]
	0x01C91350 BLR X9
	0x01C91354 CBZ X0, 0x1C913BC
	0x01C91358 MOVZ W1, 0x5F
	0x01C9135C MOV X2, X31
	0x01C91360 BL 0x30949A0
	0x01C91364 ADRP X8, 0x22BC000
	0x01C91368 LDR X8, [X8 + 0x6D8]
	0x01C9136C MOV X19, X0
	0x01C91370 MOV X1, X21
	0x01C91374 MOV X2, X31
	0x01C91378 LDR X8, [X8]
	0x01C9137C MOV X0, X8
	0x01C91380 BL 0x3090E40
	0x01C91384 ADRP X8, 0x22BC000
	0x01C91388 ADRP X9, 0x22BC000
	0x01C9138C LDR X8, [X8 + 0xC50]
	0x01C91390 LDR X9, [X9 + 0x6E8]
	0x01C91394 MOV X2, X0
	0x01C91398 MOV X0, X19
	0x01C9139C LDR X1, [X8]
	0x01C913A0 LDR X3, [X9]
	0x01C913A4 LDP X20, X19, [X31 + 0x30]
	0x01C913A8 LDP X22, X21, [X31 + 0x20]
	0x01C913AC LDP X24, X23, [X31 + 0x10]
	0x01C913B0 MOV X4, X31
	0x01C913B4 LDR X30, [X31], #0x40
	0x01C913B8 B 0x309060C
	0x01C913BC BL 0x1B6EA1C
	0x01C913C0 BL 0x1B6EA24
	0x01C913C4 STP X30, X21, [X31 - 0x20]!
	0x01C913C8 STP X20, X19, [X31 + 0x10]
	0x01C913CC ADRP X20, 0x2592000
	0x01C913D0 ADRP X21, 0x22BC000
	0x01C913D4 LDRB W8, [X20 + 0x3BA]
	0x01C913D8 LDR X21, [X21 + 0x670]
	0x01C913DC MOV X19, X0
	0x01C913E0 TBNZ X8, 0x0, 0x1C913F8
	0x01C913E4 ADRP X0, 0x22BC000
	0x01C913E8 LDR X0, [X0 + 0x670]
	0x01C913EC BL 0x1B6E7F0
	0x01C913F0 MOVZ W8, 0x1
	0x01C913F4 STRB W8, [X20 + 0x3BA]
	0x01C913F8 LDR X0, [X21]
	0x01C913FC LDR W8, [X0 + 0xE0]
	0x01C91400 CBNZ W8, 0x1C91408
	0x01C91404 BL 0x1B6E8F8
	0x01C91408 MOV X0, X19
	0x01C9140C LDP X20, X19, [X31 + 0x10]
	0x01C91410 MOV X1, X31
	0x01C91414 LDP X30, X21, [X31], #0x20
	0x01C91418 B 0x321C5C0
	0x01C9141C STR X30, [X31 - 0x30]!
	0x01C91420 STP X22, X21, [X31 + 0x10]
	0x01C91424 STP X20, X19, [X31 + 0x20]
	0x01C91428 ADRP X21, 0x2592000
	0x01C9142C ADRP X22, 0x22BC000
	0x01C91430 LDRB W8, [X21 + 0x3BB]
	0x01C91434 LDR X22, [X22 + 0x670]
	0x01C91438 MOV X19, X1
	0x01C9143C MOV X20, X0
	0x01C91440 TBNZ X8, 0x0, 0x1C91458
	0x01C91444 ADRP X0, 0x22BC000
	0x01C91448 LDR X0, [X0 + 0x670]
	0x01C9144C BL 0x1B6E7F0
	0x01C91450 MOVZ W8, 0x1
	0x01C91454 STRB W8, [X21 + 0x3BB]
	0x01C91458 LDR X0, [X22]
	0x01C9145C LDR W8, [X0 + 0xE0]
	0x01C91460 CBNZ W8, 0x1C91468
	0x01C91464 BL 0x1B6E8F8
	0x01C91468 MOV X0, X20
	0x01C9146C MOV X1, X19
	0x01C91470 LDP X20, X19, [X31 + 0x20]
	0x01C91474 LDP X22, X21, [X31 + 0x10]
	0x01C91478 MOV X2, X31
	0x01C9147C LDR X30, [X31], #0x30
	0x01C91480 B 0x321C5DC
	0x01C91484 STP X30, X23, [X31 - 0x30]!
	0x01C91488 STP X22, X21, [X31 + 0x10]
	0x01C9148C STP X20, X19, [X31 + 0x20]
	0x01C91490 ADRP X22, 0x2592000
	0x01C91494 ADRP X23, 0x22BC000
	0x01C91498 LDRB W8, [X22 + 0x3BC]
	0x01C9149C LDR X23, [X23 + 0x670]
	0x01C914A0 MOV X19, X2
	0x01C914A4 MOV X20, X1
	0x01C914A8 MOV X21, X0
	0x01C914AC TBNZ X8, 0x0, 0x1C914C4
	0x01C914B0 ADRP X0, 0x22BC000
	0x01C914B4 LDR X0, [X0 + 0x670]
	0x01C914B8 BL 0x1B6E7F0
	0x01C914BC MOVZ W8, 0x1
	0x01C914C0 STRB W8, [X22 + 0x3BC]
	0x01C914C4 LDR X0, [X23]
	0x01C914C8 LDR W8, [X0 + 0xE0]
	0x01C914CC CBNZ W8, 0x1C914D4
	0x01C914D0 BL 0x1B6E8F8
	0x01C914D4 MOV X0, X21
	0x01C914D8 MOV X1, X20
	0x01C914DC MOV X2, X19
	0x01C914E0 LDP X20, X19, [X31 + 0x20]
	0x01C914E4 LDP X22, X21, [X31 + 0x10]
	0x01C914E8 MOV X3, X31
	0x01C914EC LDP X30, X23, [X31], #0x30
	0x01C914F0 B 0x321C60C
	0x01C914F4 SUB X31, X31, 0x60
	0x01C914F8 STP X30, X27, [X31 + 0x10]
	0x01C914FC STP X26, X25, [X31 + 0x20]
	0x01C91500 STP X24, X23, [X31 + 0x30]
	0x01C91504 STP X22, X21, [X31 + 0x40]
	0x01C91508 STP X20, X19, [X31 + 0x50]
	0x01C9150C ADRP X20, 0x2592000
	0x01C91510 ADRP X21, 0x22BC000
	0x01C91514 LDRB W8, [X20 + 0x3BD]
	0x01C91518 LDR X21, [X21 + 0x628]
	0x01C9151C MOV X19, X0
	0x01C91520 TBNZ X8, 0x0, 0x1C91604
	0x01C91524 ADRP X0, 0x22BC000
	0x01C91528 LDR X0, [X0 + 0x4E8]
	0x01C9152C BL 0x1B6E7F0
	0x01C91530 ADRP X0, 0x22BC000
	0x01C91534 LDR X0, [X0 + 0x800]
	0x01C91538 BL 0x1B6E7F0
	0x01C9153C ADRP X0, 0x22BC000
	0x01C91540 LDR X0, [X0 + 0xC58]
	0x01C91544 BL 0x1B6E7F0
	0x01C91548 ADRP X0, 0x22BC000
	0x01C9154C LDR X0, [X0 + 0xBA0]
	0x01C91550 BL 0x1B6E7F0
	0x01C91554 ADRP X0, 0x22BC000
	0x01C91558 LDR X0, [X0 + 0x5F8]
	0x01C9155C BL 0x1B6E7F0
	0x01C91560 ADRP X0, 0x22BC000
	0x01C91564 LDR X0, [X0 + 0x628]
	0x01C91568 BL 0x1B6E7F0
	0x01C9156C ADRP X0, 0x22BC000
	0x01C91570 LDR X0, [X0 + 0xC60]
	0x01C91574 BL 0x1B6E7F0
	0x01C91578 ADRP X0, 0x22BC000
	0x01C9157C LDR X0, [X0 + 0xC68]
	0x01C91580 BL 0x1B6E7F0
	0x01C91584 ADRP X0, 0x22BC000
	0x01C91588 LDR X0, [X0 + 0xC70]
	0x01C9158C BL 0x1B6E7F0
	0x01C91590 ADRP X0, 0x22BC000
	0x01C91594 LDR X0, [X0 + 0xB90]
	0x01C91598 BL 0x1B6E7F0
	0x01C9159C ADRP X0, 0x22BC000
	0x01C915A0 LDR X0, [X0 + 0xC78]
	0x01C915A4 BL 0x1B6E7F0
	0x01C915A8 ADRP X0, 0x22BC000
	0x01C915AC LDR X0, [X0 + 0xC80]
	0x01C915B0 BL 0x1B6E7F0
	0x01C915B4 ADRP X0, 0x22BC000
	0x01C915B8 LDR X0, [X0 + 0xC88]
	0x01C915BC BL 0x1B6E7F0
	0x01C915C0 ADRP X0, 0x22BC000
	0x01C915C4 LDR X0, [X0 + 0xC90]
	0x01C915C8 BL 0x1B6E7F0
	0x01C915CC ADRP X0, 0x22BC000
	0x01C915D0 LDR X0, [X0 + 0xBE0]
	0x01C915D4 BL 0x1B6E7F0
	0x01C915D8 ADRP X0, 0x22BC000
	0x01C915DC LDR X0, [X0 + 0xC98]
	0x01C915E0 BL 0x1B6E7F0
	0x01C915E4 ADRP X0, 0x22BC000
	0x01C915E8 LDR X0, [X0 + 0xCA0]
	0x01C915EC BL 0x1B6E7F0
	0x01C915F0 ADRP X0, 0x22BC000
	0x01C915F4 LDR X0, [X0 + 0xCA8]
	0x01C915F8 BL 0x1B6E7F0
	0x01C915FC MOVZ W8, 0x1
	0x01C91600 STRB W8, [X20 + 0x3BD]
	0x01C91604 LDR X0, [X21]
	0x01C91608 STR X31, [X31 + 0x8]
	0x01C9160C STR W31, [X31 + 0x4]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x2593000
	007 Move W8, [X20+942]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {51}
	013 Move X0, 0x22BD000
	014 Move X0, [X0+2872]
	015 Call 0x1B6F7F0
	016 Move X0, 0x22BD000
	017 Move X0, [X0+2048]
	018 Call 0x1B6F7F0
	019 Move X0, 0x22BD000
	020 Move X0, [X0+2488]
	021 Call 0x1B6F7F0
	022 Move X0, 0x22BD000
	023 Move X0, [X0+1576]
	024 Call 0x1B6F7F0
	025 Move X0, 0x22BD000
	026 Move X0, [X0+2880]
	027 Call 0x1B6F7F0
	028 Move X0, 0x22BD000
	029 Move X0, [X0+2888]
	030 Call 0x1B6F7F0
	031 Move X0, 0x22BD000
	032 Move X0, [X0+2896]
	033 Call 0x1B6F7F0
	034 Move X0, 0x22BD000
	035 Move X0, [X0+2904]
	036 Call 0x1B6F7F0
	037 Move X0, 0x22BD000
	038 Move X0, [X0+2416]
	039 Call 0x1B6F7F0
	040 Move X0, 0x22BD000
	041 Move X0, [X0+2912]
	042 Call 0x1B6F7F0
	043 Move X0, 0x22BD000
	044 Move X0, [X0+2920]
	045 Call 0x1B6F7F0
	046 Move X0, 0x22BD000
	047 Move X0, [X0+2928]
	048 Call 0x1B6F7F0
	049 Move W8, 1
	050 Move [X20+942], W8
	051 Move W8, [X19+16]
	052 NotImplemented "Instruction CMP not yet implemented."
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Compare W8, 0
	055 JumpIfNotEqual {209}
	056 Move TEMP, 0
	057 Not TEMP
	058 Move W8, TEMP
	059 Move [X19+16], W8
	060 Move X8, 0x22BD000
	061 Move X8, [X8+2048]
	062 Move X0, [X8]
	063 Move W8, [X0+224]
	064 Compare W8, 0
	065 JumpIfNotEqual {67}
	066 Call 0x1B6F8F8
	067 Move X0, X31
	068 Call Application.get_isEditor
	069 Move TEMP, X0
	070 And TEMP, TEMP, 1
	071 Compare TEMP, 1
	072 JumpIfEqual {209}
	073 Move X8, 0x22BD000
	074 Move X8, [X8+2912]
	075 Move X1, X31
	076 Move X0, [X8]
	077 Call Permission.HasUserAuthorizedPermission, X0
	078 Move TEMP, X0
	079 And TEMP, TEMP, 1
	080 Compare TEMP, 1
	081 JumpIfEqual {209}
	082 Move X8, 0x22BD000
	083 Move X8, [X8+2896]
	084 Move X0, [X8]
	085 Call 0x1B6FA0C
	086 Move X1, X31
	087 Move X20, X0
	088 Call Object..ctor, X0
	089 Move S0, 2
	090 Move W0, W31
	091 Move X1, X31
	092 Move [X19+32], X20
	093 Call Commands.WaitForSeconds, V0, X0
	094 Move W20, 1
	095 Move [X19+24], X0
	096 Move [X19+16], W20
	097 Move X21, [X19+32]
	098 Move TEMP, 0
	099 Not TEMP
	100 Move W8, TEMP
	101 Move [X19+16], W8
	102 Compare X21, 0
	103 JumpIfEqual {217}
	104 Move W8, 1
	105 Move [X21+16], W8
	106 Move X8, 0x22BD000
	107 Move X8, [X8+2872]
	108 Move X0, [X8]
	109 Call 0x1B6FA0C
	110 Move X8, 0x22BD000
	111 Move X8, [X8+2880]
	112 Move X1, X21
	113 Move X3, X31
	114 Move X20, X0
	115 Move X2, [X8]
	116 Call Action`1<Boolean>..ctor, X0, X1, X2
	117 Move [X19+40], X20
	118 Move X8, 0x22BD000
	119 Move X8, [X8+2048]
	120 Move X0, [X8]
	121 Move W8, [X0+224]
	122 Compare W8, 0
	123 JumpIfNotEqual {125}
	124 Call 0x1B6F8F8
	125 Move X0, X20
	126 Move X1, X31
	127 Call Application.add_focusChanged, X0
	128 Move X8, [X19+32]
	129 Compare X8, 0
	130 JumpIfEqual {217}
	131 Move W20, 1
	132 Move [X8+16], W20
	133 Move X8, 0x22BD000
	134 Move X8, [X8+2912]
	135 Move X1, X31
	136 Move X0, [X8]
	137 Call Permission.RequestUserPermission, X0
	138 Move X8, 0x22BD000
	139 Move X21, [X19+32]
	140 Move X8, [X8+2488]
	141 Move X0, [X8]
	142 Call 0x1B6FA0C
	143 Move X8, 0x22BD000
	144 Move X8, [X8+2888]
	145 Move X1, X21
	146 Move X3, X31
	147 Move X22, X0
	148 Move X2, [X8]
	149 Call CommandConditionEval..ctor, X0, X1, X2
	150 Move X8, 0x22BD000
	151 Move X8, [X8+2904]
	152 Move X0, [X8]
	153 Call 0x1B6FA0C
	154 Move X1, X22
	155 Move X2, X31
	156 Move X21, X0
	157 Call WaitUntilCommand..ctor, X0, X1
	158 Move W8, 2
	159 Move [X19+24], X21
	160 Move [X19+16], W8
	161 Move TEMP, 0
	162 Not TEMP
	163 Move W8, TEMP
	164 Move [X19+16], W8
	165 Move X8, 0x22BD000
	166 Move X8, [X8+2912]
	167 Move X1, X31
	168 Move X0, [X8]
	169 Call Permission.HasUserAuthorizedPermission, X0
	170 Move X8, 0x22BD000
	171 Move X8, [X8+2048]
	172 Move X21, [X19+40]
	173 Move W20, W0
	174 Move X8, [X8]
	175 Move W9, [X8+224]
	176 Compare W9, 0
	177 JumpIfNotEqual {180}
	178 Move X0, X8
	179 Call 0x1B6F8F8
	180 Move X0, X21
	181 Move X1, X31
	182 Call Application.remove_focusChanged, X0
	183 Move [X19+32], X31
	184 Move [X19+40], X31
	185 Move TEMP, X20
	186 And TEMP, TEMP, 1
	187 Compare TEMP, 1
	188 JumpIfEqual {209}
	189 Move X8, 0x22BD000
	190 Move X8, [X8+1576]
	191 Move X0, [X8]
	192 Move W8, [X0+224]
	193 Compare W8, 0
	194 JumpIfNotEqual {196}
	195 Call 0x1B6F8F8
	196 Move X8, 0x22BD000
	197 Move X9, 0x22BD000
	198 Move X10, 0x22BD000
	199 Move X8, [X8+2920]
	200 Move X9, [X9+2416]
	201 Move X10, [X10+2928]
	202 Move W4, 243
	203 Move X0, [X8]
	204 Move X2, [X9]
	205 Move X3, [X10]
	206 Move X1, X31
	207 Move X5, X31
	208 Call Log.Warning, X0, X1, X2, X3, X4
	209 Move W20, W31
	210 Move W0, W20
	211 Move X20, [X31+32]
	212 Move X19, [X31+40]
	213 Move X22, [X31+16]
	214 Move X21, [X31+24]
	215 Move X30, [X31+48]
	216 Return X0
	217 Call 0x1B6FA1C

Method: SpatialSys.CommandLib.Command System.Collections.Generic.IEnumerator<SpatialSys.CommandLib.Command>.get_Current()

Disassembly:
	0x01C91610 ADRP X20, 0x22BC000
	0x01C91614 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void System.Collections.IEnumerator.Reset()

Disassembly:
	0x01C91618 LDR X20, [X20 + 0x800]
	0x01C9161C CBNZ W8, 0x1C91628
	0x01C91620 BL 0x1B6E8F8
	0x01C91624 LDR X0, [X21]
	0x01C91628 LDR X8, [X20]
	0x01C9162C LDR X9, [X0 + 0xB8]
	0x01C91630 LDR W10, [X8 + 0xE0]
	0x01C91634 LDR X20, [X9 + 0x18]
	0x01C91638 CBNZ W10, 0x1C91644
	0x01C9163C MOV X0, X8
	0x01C91640 BL 0x1B6E8F8
	0x01C91644 MOV X0, X31
	0x01C91648 BL 0x3A6A728
	0x01C9164C CBZ X20, 0x1C91AE8

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0x22BD000
	004 Move X0, [X0+2448]
	005 Call 0x1B6F804
	006 Call 0x1B6FA0C
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0x22BD000
	011 Move X0, [X0+2936]
	012 Call 0x1B6F804
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1B6F8E8

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x01C91650 ADRP X8, 0x22BC000
	0x01C91654 ADRP X22, 0x22BC000

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

