Type: AnimalCompany.PlayerLeftRoomAction

Method: System.Void .ctor(System.Int32 playerID)

Disassembly:
	0x01DBB30C LDP X24, X23, [X31 + 0x10]
	0x01DBB310 MOV X1, X31
	0x01DBB314 LDR X30, [X31], #0x40
	0x01DBB318 B 0x1D36978
	0x01DBB31C STP X30, X21, [X31 - 0x20]!
	0x01DBB320 STP X20, X19, [X31 + 0x10]
	0x01DBB324 ADRP X21, 0x261D000
	0x01DBB328 ADRP X20, 0x2338000
	0x01DBB32C LDRB W8, [X21 + 0xB43]
	0x01DBB330 LDR X20, [X20 + 0x648]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W1
	005 Move X1, X31
	006 Move X20, X0
	007 Call BaseAction..ctor, X0
	008 Move [X20+20], W19
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X30, [X31+32]
	012 Return 

Method: System.Void Execute(AnimalCompany.AppState state)

Disassembly:
	0x01DBB334 MOV X19, X0
	0x01DBB338 TBNZ X8, 0x0, 0x1DBB35C
	0x01DBB33C ADRP X0, 0x2338000
	0x01DBB340 LDR X0, [X0 + 0x648]
	0x01DBB344 BL 0x1C16CF4
	0x01DBB348 ADRP X0, 0x2339000
	0x01DBB34C LDR X0, [X0 + 0x178]
	0x01DBB350 BL 0x1C16CF4
	0x01DBB354 MOVZ W8, 0x1
	0x01DBB358 STRB W8, [X21 + 0xB43]
	0x01DBB35C LDR X0, [X20]
	0x01DBB360 LDR W8, [X0 + 0xE0]
	0x01DBB364 CBNZ W8, 0x1DBB36C
	0x01DBB368 BL 0x1C16DFC
	0x01DBB36C ADRP X21, 0x261D000
	0x01DBB370 LDRB W8, [X21 + 0x787]
	0x01DBB374 CBNZ W8, 0x1DBB38C
	0x01DBB378 ADRP X0, 0x2338000
	0x01DBB37C LDR X0, [X0 + 0x648]
	0x01DBB380 BL 0x1C16CF4
	0x01DBB384 MOVZ W8, 0x1
	0x01DBB388 STRB W8, [X21 + 0x787]
	0x01DBB38C LDR X0, [X20]
	0x01DBB390 LDR W8, [X0 + 0xE0]
	0x01DBB394 CBNZ W8, 0x1DBB3A0
	0x01DBB398 BL 0x1C16DFC
	0x01DBB39C LDR X0, [X20]
	0x01DBB3A0 LDR X8, [X0 + 0xB8]
	0x01DBB3A4 LDR X8, [X8]
	0x01DBB3A8 CBZ X8, 0x1DBB3E0
	0x01DBB3AC ADRP X9, 0x2339000
	0x01DBB3B0 LDR X9, [X9 + 0x178]
	0x01DBB3B4 LDR X0, [X8 + 0x60]
	0x01DBB3B8 LDR X1, [X9]
	0x01DBB3BC BL 0x2651A74
	0x01DBB3C0 TBZ X0, 0x0, 0x1DBB3D4
	0x01DBB3C4 MOV X0, X19
	0x01DBB3C8 LDP X20, X19, [X31 + 0x10]
	0x01DBB3CC LDP X30, X21, [X31], #0x20
	0x01DBB3D0 B 0x1DBB3E4
	0x01DBB3D4 LDP X20, X19, [X31 + 0x10]
	0x01DBB3D8 LDP X30, X21, [X31], #0x20
	0x01DBB3DC RET
	0x01DBB3E0 BL 0x1C16F20
	0x01DBB3E4 STR X30, [X31 - 0x30]!
	0x01DBB3E8 STP X22, X21, [X31 + 0x10]
	0x01DBB3EC STP X20, X19, [X31 + 0x20]
	0x01DBB3F0 ADRP X20, 0x261D000
	0x01DBB3F4 LDRB W8, [X20 + 0xB46]
	0x01DBB3F8 MOV X19, X0
	0x01DBB3FC TBNZ X8, 0x0, 0x1DBB42C
	0x01DBB400 ADRP X0, 0x2338000
	0x01DBB404 LDR X0, [X0 + 0x648]
	0x01DBB408 BL 0x1C16CF4
	0x01DBB40C ADRP X0, 0x2338000
	0x01DBB410 LDR X0, [X0 + 0x958]
	0x01DBB414 BL 0x1C16CF4
	0x01DBB418 ADRP X0, 0x233C000
	0x01DBB41C LDR X0, [X0 + 0xDB0]
	0x01DBB420 BL 0x1C16CF4
	0x01DBB424 MOVZ W8, 0x1
	0x01DBB428 STRB W8, [X20 + 0xB46]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x261E000
	007 Move W8, [X21+2868]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {28}
	014 Move X0, 0x233D000
	015 Move X0, [X0+3408]
	016 Call 0x1C17CF4
	017 Move X0, 0x233D000
	018 Move X0, [X0+3416]
	019 Call 0x1C17CF4
	020 Move X0, 0x233D000
	021 Move X0, [X0+3424]
	022 Call 0x1C17CF4
	023 Move X0, 0x2339000
	024 Move X0, [X0+3528]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X21+2868], W8
	028 Move [X31+8], X31
	029 Compare X19, 0
	030 JumpIfEqual {81}
	031 Move X8, [X19+224]
	032 Compare X8, 0
	033 JumpIfEqual {81}
	034 Move X0, [X8+128]
	035 Compare X0, 0
	036 JumpIfEqual {81}
	037 Move X8, 0x233D000
	038 Move X8, [X8+3416]
	039 Move W1, [X20+20]
	040 Add X2, X31, 8
	041 Move X3, [X8]
	042 Call 0x260832C, X0, X1, X2
	043 Move TEMP, X0
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfNotEqual {75}
	047 Move X8, [X19+224]
	048 Compare X8, 0
	049 JumpIfEqual {81}
	050 Move X0, [X8+128]
	051 Compare X0, 0
	052 JumpIfEqual {81}
	053 Move X8, 0x233D000
	054 Move W1, [X20+20]
	055 Move X8, [X8+3408]
	056 Move X2, [X8]
	057 Call 0x2607EA8, X0, X1
	058 Move X8, [X19+224]
	059 Compare X8, 0
	060 JumpIfEqual {81}
	061 Move X9, [X31+8]
	062 Compare X9, 0
	063 JumpIfEqual {81}
	064 Move X9, [X9+80]
	065 Compare X9, 0
	066 JumpIfEqual {81}
	067 Move X0, [X8+112]
	068 Compare X0, 0
	069 JumpIfEqual {81}
	070 Move X8, 0x233D000
	071 Move X1, [X9+80]
	072 Move X8, [X8+3424]
	073 Move X2, [X8]
	074 Call StatePrimitiveSet`1<Object>.Remove, X0, X1
	075 Move X20, [X31+32]
	076 Move X19, [X31+40]
	077 Move X30, [X31+16]
	078 Move X21, [X31+24]
	079 Add X31, X31, 48
	080 Return 
	081 Call 0x1C17F20

