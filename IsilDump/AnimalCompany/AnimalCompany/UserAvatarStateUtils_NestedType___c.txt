Type: AnimalCompany.UserAvatarStateUtils/<>c

Method: System.Void .cctor()

Disassembly:
	0x01D4F66C MOV X19, X0
	0x01D4F670 TBNZ X8, 0x0, 0x1D4F6B8
	0x01D4F674 ADRP X0, 0x23A4000
	0x01D4F678 LDR X0, [X0 + 0x648]
	0x01D4F67C BL 0x1C16CF4
	0x01D4F680 ADRP X0, 0x23A4000
	0x01D4F684 LDR X0, [X0 + 0xDB0]
	0x01D4F688 BL 0x1C16CF4
	0x01D4F68C ADRP X0, 0x23A4000
	0x01D4F690 LDR X0, [X0 + 0xDA0]
	0x01D4F694 BL 0x1C16CF4
	0x01D4F698 ADRP X0, 0x23A5000
	0x01D4F69C LDR X0, [X0 + 0x178]
	0x01D4F6A0 BL 0x1C16CF4
	0x01D4F6A4 ADRP X0, 0x23A5000
	0x01D4F6A8 LDR X0, [X0 + 0xB48]
	0x01D4F6AC BL 0x1C16CF4
	0x01D4F6B0 MOVZ W8, 0x1
	0x01D4F6B4 STRB W8, [X20 + 0x7AB]
	0x01D4F6B8 LDR X0, [X23]
	0x01D4F6BC BL 0x1C16F10
	0x01D4F6C0 LDR X2, [X22]
	0x01D4F6C4 MOV X1, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x268A000
	005 Move X20, 0x23A6000
	006 Move W8, [X19+1949]
	007 Move X20, [X20+2792]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x23A6000
	013 Move X0, [X0+2792]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+1949], W8
	017 Move X0, [X20]
	018 Call 0x1C17F10
	019 Move X1, X31
	020 Move X19, X0
	021 Call Object..ctor, X0
	022 Move X8, [X20]
	023 Move X8, [X8+184]
	024 Move [X8], X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Return 

Method: System.Void .ctor()

Disassembly:
	0x01D4F6C8 MOV X3, X31
	0x01D4F6CC MOV X20, X0

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Boolean <EquipItemOnAvatar>b__0_0(AnimalCompany.AvatarItemState sub)

Disassembly:
	0x01D4F6D0 BL 0x35C52F0
	0x01D4F6D4 LDR X0, [X21]
	0x01D4F6D8 LDR W8, [X0 + 0xE0]
	0x01D4F6DC CBNZ W8, 0x1D4F6E4
	0x01D4F6E0 BL 0x1C16DFC
	0x01D4F6E4 MOV X0, X20
	0x01D4F6E8 MOV X1, X31
	0x01D4F6EC BL 0x1D36978
	0x01D4F6F0 ADRP X24, 0x2689000
	0x01D4F6F4 LDRB W8, [X24 + 0x787]
	0x01D4F6F8 CBNZ W8, 0x1D4F710
	0x01D4F6FC ADRP X0, 0x23A4000
	0x01D4F700 LDR X0, [X0 + 0x648]
	0x01D4F704 BL 0x1C16CF4
	0x01D4F708 MOVZ W8, 0x1
	0x01D4F70C STRB W8, [X24 + 0x787]
	0x01D4F710 LDR X0, [X21]
	0x01D4F714 LDR W8, [X0 + 0xE0]
	0x01D4F718 CBNZ W8, 0x1D4F724
	0x01D4F71C BL 0x1C16DFC
	0x01D4F720 LDR X0, [X21]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x268A000
	005 Move W8, [X20+1950]
	006 Move X19, X1
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x23A6000
	012 Move X0, [X0+2776]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1950], W8
	016 Compare X19, 0
	017 JumpIfEqual {28}
	018 Move X8, [X19+88]
	019 Compare X8, 0
	020 JumpIfEqual {28}
	021 Move W8, [X8+76]
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 NotImplemented "Instruction CSET not yet implemented."
	026 Move X30, [X31+32]
	027 Return X0
	028 Call 0x1C17F20

