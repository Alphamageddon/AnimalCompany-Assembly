Type: AnimalCompany.SurfaceAssetCache

Method: System.Void InvalidateCache()

Disassembly:
	0x01E044CC CBZ X8, 0x1E04864
	0x01E044D0 LDR X0, [X23 + 0x38]
	0x01E044D4 CBZ X0, 0x1E04868
	0x01E044D8 LDR X9, [X0]
	0x01E044DC LDR X1, [X8 + 0x18]
	0x01E044E0 LDR X8, [X9 + 0x558]
	0x01E044E4 LDR X2, [X9 + 0x560]
	0x01E044E8 BLR X8
	0x01E044EC LDR X0, [X23 + 0x40]
	0x01E044F0 CBZ X0, 0x1E04870
	0x01E044F4 LDR V0, [X19 + 0x30]
	0x01E044F8 MOV X1, X31
	0x01E044FC BL 0x3CE013C
	0x01E04500 LDR X8, [X19 + 0x20]
	0x01E04504 CBZ X8, 0x1E04878
	0x01E04508 LDR X0, [X23 + 0x30]
	0x01E0450C CBZ X0, 0x1E0487C
	0x01E04510 LDR X8, [X8 + 0x20]
	0x01E04514 STR X8, [X0 + 0x20]
	0x01E04518 FMOV S0, 1
	0x01E0451C MOV X1, X31
	0x01E04520 BL 0x3E3F7CC
	0x01E04524 B 0x1E04530
	0x01E04528 MOVN W8, 0x0
	0x01E0452C STR W8, [X19 + 0x10]
	0x01E04530 LDR V0, [X19 + 0x30]
	0x01E04534 FMOV S1, 1
	0x01E04538 FCMP S0, S1
	0x01E0453C B.PL 0x1E0465C
	0x01E04540 MOVZ W0, 0x4
	0x01E04544 MOV X1, X31
	0x01E04548 BL 0x3E64C08
	0x01E0454C CBZ X23, 0x1E0486C
	0x01E04550 STP X0, X1, [X23 + 0x58]
	0x01E04554 MOVZ W0, 0x5
	0x01E04558 MOV X1, X31
	0x01E0455C BL 0x3E64C08
	0x01E04560 LDR X24, [X23 + 0x78]
	0x01E04564 STP X0, X1, [X23 + 0x68]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x25D5000
	007 Move X22, 0x22F6000
	008 Move X19, 0x22F6000
	009 Move X20, 0x22F6000
	010 Move W8, [X21+3456]
	011 Move X22, [X22+2024]
	012 Move X19, [X19+2032]
	013 Move X20, [X20+2040]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0x22F6000
	019 Move X0, [X0+2032]
	020 Call 0x1C17CF4
	021 Move X0, 0x22F6000
	022 Move X0, [X0+2024]
	023 Call 0x1C17CF4
	024 Move X0, 0x22F6000
	025 Move X0, [X0+2040]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+3456], W8
	029 Move X0, [X22]
	030 Call 0x1C17F10
	031 Move X1, [X19]
	032 Move X19, X0
	033 Call Dictionary`2<Object, Object>..ctor, X0
	034 Move X0, [X20]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {40}
	038 Call 0x1C17DFC
	039 Move X0, [X20]
	040 Move X8, [X0+184]
	041 Move X22, [X31+16]
	042 Move X21, [X31+24]
	043 Move [X8], X19
	044 Move X20, [X31+32]
	045 Move X19, [X31+40]
	046 Move X30, [X31+48]
	047 Return 

Method: System.Boolean TryGetSurface(System.String name, out AnimalCompany.SurfaceDefinition surface)

Disassembly:
	0x01E04568 CBZ X24, 0x1E04874
	0x01E0456C LDR X8, [X24 + 0x18]
	0x01E04570 CMP W8, 0x1
	0x01E04574 B.LT 0x1E04698
	0x01E04578 ADRP X28, 0x22F5000
	0x01E0457C LDR X28, [X28 + 0x8C8]
	0x01E04580 MOV W25, W31
	0x01E04584 MOV X26, X31
	0x01E04588 AND X8, X8, 0x0
	0x01E0458C ADD X27, X24, 0x20
	0x01E04590 CMP X26, W8, UXTW
	0x01E04594 B.CS 0x1E0484C
	0x01E04598 LDR X0, [X28]
	0x01E0459C LDR W20, [X27, X26, LSL #2]
	0x01E045A0 LDP X22, X21, [X23 + 0x58]
	0x01E045A4 LDR W8, [X0 + 0xE0]
	0x01E045A8 CBNZ W8, 0x1E045B0
	0x01E045AC BL 0x1C16DFC
	0x01E045B0 ADD X3, X31, 0x1C
	0x01E045B4 FMOV S0, -1
	0x01E045B8 MOV X0, X22
	0x01E045BC MOV X1, X21
	0x01E045C0 MOV W2, W20
	0x01E045C4 MOV X4, X31
	0x01E045C8 BL 0x3B851AC
	0x01E045CC LDRB W9, [X31 + 0x1C]
	0x01E045D0 LDR X8, [X28]
	0x01E045D4 AND W10, W25, 0x1
	0x01E045D8 LDP X21, X22, [X23 + 0x68]
	0x01E045DC ORR W9, W9, W10, 0x0
	0x01E045E0 LDR W10, [X8 + 0xE0]
	0x01E045E4 CMP W9, 0x0
	0x01E045E8 CSET W9, NE
	0x01E045EC ANDS W31, W0, 0x1
	0x01E045F0 CSEL W25, W9, W25, NE
	0x01E045F4 CBNZ W10, 0x1E04600
	0x01E045F8 MOV X0, X8
	0x01E045FC BL 0x1C16DFC
	0x01E04600 ADD X3, X31, 0x18
	0x01E04604 FMOV S0, -1
	0x01E04608 MOV X0, X21
	0x01E0460C MOV X1, X22
	0x01E04610 MOV W2, W20
	0x01E04614 MOV X4, X31
	0x01E04618 BL 0x3B851AC
	0x01E0461C LDRB W9, [X31 + 0x18]
	0x01E04620 AND W10, W25, 0x1
	0x01E04624 LDR W8, [X24 + 0x18]
	0x01E04628 ADD X26, X26, 0x1
	0x01E0462C ORR W9, W9, W10, 0x0
	0x01E04630 CMP W9, 0x0
	0x01E04634 CSET W9, NE
	0x01E04638 ANDS W31, W0, 0x1
	0x01E0463C CSEL W25, W9, W25, NE
	0x01E04640 CMP X26, W8, SXTW
	0x01E04644 B.LT 0x1E04590
	0x01E04648 B 0x1E0469C
	0x01E0464C MOV W0, W31
	0x01E04650 MOVN W8, 0x0
	0x01E04654 STR W8, [X19 + 0x10]
	0x01E04658 B 0x1E04824
	0x01E0465C LDR X8, [X19 + 0x20]
	0x01E04660 CBZ X8, 0x1E04850
	0x01E04664 LDR X0, [X8 + 0x20]
	0x01E04668 CBZ X0, 0x1E04850
	0x01E0466C MOV X1, X31
	0x01E04670 BL 0x3C32ECC
	0x01E04674 CBZ X0, 0x1E04850
	0x01E04678 MOV W1, W31
	0x01E0467C MOV X2, X31
	0x01E04680 BL 0x3C357B4
	0x01E04684 MOVZ W8, 0x2
	0x01E04688 STR X31, [X19 + 0x18]
	0x01E0468C STR W8, [X19 + 0x10]
	0x01E04690 MOVZ W0, 0x1
	0x01E04694 B 0x1E04824
	0x01E04698 MOV W25, W31
	0x01E0469C LDR X0, [X23 + 0x50]
	0x01E046A0 CBZ X0, 0x1E04880
	0x01E046A4 ADRP X20, 0x22F5000
	0x01E046A8 LDR X20, [X20 + 0x8C0]
	0x01E046AC LDR X1, [X20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x25D5000
	007 Move X22, 0x22F6000
	008 Move W8, [X21+3457]
	009 Move X22, [X22+2040]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {33}
	016 Move X0, 0x22F6000
	017 Move X0, [X0+2048]
	018 Call 0x1C17CF4
	019 Move X0, 0x22F6000
	020 Move X0, [X0+2056]
	021 Call 0x1C17CF4
	022 Move X0, 0x22F0000
	023 Move X0, [X0+1432]
	024 Call 0x1C17CF4
	025 Move X0, 0x22F6000
	026 Move X0, [X0+2064]
	027 Call 0x1C17CF4
	028 Move X0, 0x22F6000
	029 Move X0, [X0+2040]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X21+3457], W8
	033 Move X0, [X22]
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {39}
	037 Call 0x1C17DFC
	038 Move X0, [X22]
	039 Move X8, [X0+184]
	040 Move X0, [X8]
	041 Compare X0, 0
	042 JumpIfEqual {97}
	043 Move X8, 0x22F6000
	044 Move X8, [X8+2048]
	045 Move X1, X20
	046 Move X2, X19
	047 Move X3, [X8]
	048 Call Dictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	049 Move TEMP, X0
	050 And TEMP, TEMP, 1
	051 Compare TEMP, 1
	052 JumpIfNotEqual {56}
	053 Move X8, 0x22F0000
	054 Move X8, [X8+1432]
	055 Move X21, [X19]
	056 Move X8, 0x22F6000
	057 Move X8, [X8+2064]
	058 Move X0, X20
	059 Move X1, [X8]
	060 Call 0x2242FB8, X0
	061 Move X8, [X22]
	062 Move X21, X0
	063 Move W9, [X8+224]
	064 Compare W9, 0
	065 JumpIfNotEqual {69}
	066 Move X0, X8
	067 Call 0x1C17DFC
	068 Move X8, [X22]
	069 Move X8, [X8+184]
	070 Move X0, [X8]
	071 Compare X0, 0
	072 JumpIfEqual {97}
	073 Move X8, 0x22F6000
	074 Move X8, [X8+2056]
	075 Move X1, X20
	076 Move X2, X21
	077 Move X3, [X8]
	078 Call Dictionary`2<Object, Object>.set_Item, X0, X1, X2
	079 Move [X19], X21
	080 Move X8, 0x22F0000
	081 Move X8, [X8+1432]
	082 Move X0, [X8]
	083 Move W8, [X0+224]
	084 Compare W8, 0
	085 JumpIfNotEqual {87}
	086 Call 0x1C17DFC
	087 Move X0, X21
	088 Move X20, [X31+32]
	089 Move X19, [X31+40]
	090 Move X22, [X31+16]
	091 Move X21, [X31+24]
	092 Move X1, X31
	093 Move X2, X31
	094 Move X30, [X31+48]
	095 Call Object.op_Inequality, X0, X1
	096 Return X0
	097 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x01E046B0 BL 0x21F5D8C
	0x01E046B4 LDR V9, [X19 + 0x30]
	0x01E046B8 MOV V8.16B, V0.16B
	0x01E046BC MOV X0, X31
	0x01E046C0 BL 0x3C3C714
	0x01E046C4 ADRP X8, 0xFFFFFFFFFECE6000
	0x01E046C8 LDR V1, [X8 + 0x30C]
	0x01E046CC FMOV S2, 0.5
	0x01E046D0 FCMP S8, S2
	0x01E046D4 CSET W8, GT
	0x01E046D8 ORR W8, W25, W8, 0x0
	0x01E046DC FMUL S2, S0, S1
	0x01E046E0 FNMUL S0, S0, S1
	0x01E046E4 ANDS W31, W8, 0x1
	0x01E046E8 FCSEL S0, S2, S0, NE
	0x01E046EC FMOV S1, 1
	0x01E046F0 FADD S0, S9, S0
	0x01E046F4 FMOV S2, W31
	0x01E046F8 FMIN S1, S0, S1
	0x01E046FC FCMP S0, 0x0
	0x01E04700 FCSEL S0, S1, S2, PL
	0x01E04704 STR S0, [X19 + 0x30]
	0x01E04708 ADRP X21, 0x22F4000
	0x01E0470C LDR X21, [X21 + 0x158]
	0x01E04710 LDR X0, [X21]
	0x01E04714 LDR W8, [X0 + 0xE0]
	0x01E04718 CBNZ W8, 0x1E04724
	0x01E0471C BL 0x1C16DFC
	0x01E04720 LDR X0, [X21]
	0x01E04724 LDR X8, [X0 + 0xB8]
	0x01E04728 ADD X0, X23, 0x58
	0x01E0472C LDR X1, [X8 + 0x88]
	0x01E04730 ADD X2, X31, 0x10
	0x01E04734 MOV X3, X31
	0x01E04738 BL 0x3E643E0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x25D5000
	007 Move X22, 0x22F6000
	008 Move X19, 0x22F6000
	009 Move X20, 0x22F6000
	010 Move W8, [X21+3458]
	011 Move X22, [X22+2024]
	012 Move X19, [X19+2032]
	013 Move X20, [X20+2040]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0x22F6000
	019 Move X0, [X0+2032]
	020 Call 0x1C17CF4
	021 Move X0, 0x22F6000
	022 Move X0, [X0+2024]
	023 Call 0x1C17CF4
	024 Move X0, 0x22F6000
	025 Move X0, [X0+2040]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+3458], W8
	029 Move X0, [X22]
	030 Call 0x1C17F10
	031 Move X1, [X19]
	032 Move X19, X0
	033 Call Dictionary`2<Object, Object>..ctor, X0
	034 Move X8, [X20]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move X8, [X8+184]
	038 Move [X8], X19
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X30, [X31+48]
	042 Return 

