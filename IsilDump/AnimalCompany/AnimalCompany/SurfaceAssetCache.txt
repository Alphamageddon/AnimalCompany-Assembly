Type: AnimalCompany.SurfaceAssetCache

Method: System.Void InvalidateCache()

Disassembly:
	0x01CF3D60 LDR X8, [X19]
	0x01CF3D64 MOV X19, X0
	0x01CF3D68 MOV X0, X8
	0x01CF3D6C BL 0x1B6EA0C
	0x01CF3D70 MOV X1, X19
	0x01CF3D74 MOV X2, X31
	0x01CF3D78 MOV X20, X0
	0x01CF3D7C BL 0x3A7CE88
	0x01CF3D80 MOV X0, X20
	0x01CF3D84 LDP X20, X19, [X31 + 0x10]
	0x01CF3D88 MOV X1, X31
	0x01CF3D8C LDR X30, [X31], #0x20
	0x01CF3D90 B 0x3A7C5B8
	0x01CF3D94 STR X30, [X31 - 0x30]!
	0x01CF3D98 STP X22, X21, [X31 + 0x10]
	0x01CF3D9C STP X20, X19, [X31 + 0x20]
	0x01CF3DA0 ADRP X20, 0x2530000
	0x01CF3DA4 ADRP X21, 0x225C000
	0x01CF3DA8 LDRB W8, [X20 + 0x6E1]
	0x01CF3DAC LDR X21, [X21 + 0x320]
	0x01CF3DB0 MOV X19, X0
	0x01CF3DB4 TBNZ X8, 0x0, 0x1CF3DD8
	0x01CF3DB8 ADRP X0, 0x225C000
	0x01CF3DBC LDR X0, [X0 + 0x320]
	0x01CF3DC0 BL 0x1B6E7F0
	0x01CF3DC4 ADRP X0, 0x225A000
	0x01CF3DC8 LDR X0, [X0 + 0x478]
	0x01CF3DCC BL 0x1B6E7F0
	0x01CF3DD0 MOVZ W8, 0x1
	0x01CF3DD4 STRB W8, [X20 + 0x6E1]
	0x01CF3DD8 LDR X0, [X21]
	0x01CF3DDC ADRP X22, 0x225A000
	0x01CF3DE0 LDR W8, [X0 + 0xE0]
	0x01CF3DE4 LDR X22, [X22 + 0x478]
	0x01CF3DE8 CBNZ W8, 0x1CF3DF4
	0x01CF3DEC BL 0x1B6E8F8
	0x01CF3DF0 LDR X0, [X21]
	0x01CF3DF4 LDR X8, [X22]
	0x01CF3DF8 LDR X9, [X0 + 0xB8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2531000
	007 Move X22, 0x225E000
	008 Move X19, 0x225E000
	009 Move X20, 0x225E000
	010 Move W8, [X21+1743]
	011 Move X22, [X22+1632]
	012 Move X19, [X19+1640]
	013 Move X20, [X20+1648]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0x225E000
	019 Move X0, [X0+1640]
	020 Call 0x1B6F7F0
	021 Move X0, 0x225E000
	022 Move X0, [X0+1632]
	023 Call 0x1B6F7F0
	024 Move X0, 0x225E000
	025 Move X0, [X0+1648]
	026 Call 0x1B6F7F0
	027 Move W8, 1
	028 Move [X21+1743], W8
	029 Move X0, [X22]
	030 Call 0x1B6FA0C
	031 Move X1, [X19]
	032 Move X19, X0
	033 Call Dictionary`2<Object, Object>..ctor, X0
	034 Move X0, [X20]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {40}
	038 Call 0x1B6F8F8
	039 Move X0, [X20]
	040 Move X8, [X0+184]
	041 Move X22, [X31+16]
	042 Move X21, [X31+24]
	043 Move [X8], X19
	044 Move X20, [X31+32]
	045 Move X19, [X31+40]
	046 Move X30, [X31+48]
	047 Return 

Method: System.Boolean TryGetSurface(System.String name, out AnimalCompany.SurfaceDefinition surface)

Disassembly:
	0x01CF3DFC LDR W10, [X8 + 0xE0]
	0x01CF3E00 LDR X20, [X9 + 0x8]
	0x01CF3E04 CBNZ W10, 0x1CF3E10
	0x01CF3E08 MOV X0, X8
	0x01CF3E0C BL 0x1B6E8F8
	0x01CF3E10 MOV X0, X20
	0x01CF3E14 MOV X1, X31
	0x01CF3E18 MOV X2, X31
	0x01CF3E1C BL 0x3AA0AF0
	0x01CF3E20 TBZ X0, 0x0, 0x1CF3E50
	0x01CF3E24 LDR X0, [X21]
	0x01CF3E28 LDR W8, [X0 + 0xE0]
	0x01CF3E2C CBNZ W8, 0x1CF3E38
	0x01CF3E30 BL 0x1B6E8F8
	0x01CF3E34 LDR X0, [X21]
	0x01CF3E38 LDR X8, [X0 + 0xB8]
	0x01CF3E3C LDP X22, X21, [X31 + 0x10]
	0x01CF3E40 STR X19, [X8 + 0x8]
	0x01CF3E44 LDP X20, X19, [X31 + 0x20]
	0x01CF3E48 LDR X30, [X31], #0x30
	0x01CF3E4C RET
	0x01CF3E50 LDR X0, [X22]
	0x01CF3E54 LDR W8, [X0 + 0xE0]
	0x01CF3E58 CBNZ W8, 0x1CF3E60
	0x01CF3E5C BL 0x1B6E8F8
	0x01CF3E60 MOV X0, X19
	0x01CF3E64 LDP X20, X19, [X31 + 0x20]
	0x01CF3E68 LDP X22, X21, [X31 + 0x10]
	0x01CF3E6C MOV X1, X31
	0x01CF3E70 LDR X30, [X31], #0x30
	0x01CF3E74 B 0x3AA15F4
	0x01CF3E78 SUB X31, X31, 0x90
	0x01CF3E7C STP D9, D8, [X31 + 0x50]
	0x01CF3E80 STP X30, X23, [X31 + 0x60]
	0x01CF3E84 STP X22, X21, [X31 + 0x70]
	0x01CF3E88 STP X20, X19, [X31 + 0x80]
	0x01CF3E8C ADRP X20, 0x2530000
	0x01CF3E90 ADRP X22, 0x225A000
	0x01CF3E94 LDRB W8, [X20 + 0x6E3]
	0x01CF3E98 LDR X22, [X22 + 0x478]
	0x01CF3E9C MOV X19, X0
	0x01CF3EA0 TBNZ X8, 0x0, 0x1CF3ED0
	0x01CF3EA4 ADRP X0, 0x225C000
	0x01CF3EA8 LDR X0, [X0 + 0x320]
	0x01CF3EAC BL 0x1B6E7F0
	0x01CF3EB0 ADRP X0, 0x225A000
	0x01CF3EB4 LDR X0, [X0 + 0x478]
	0x01CF3EB8 BL 0x1B6E7F0
	0x01CF3EBC ADRP X0, 0x225D000
	0x01CF3EC0 LDR X0, [X0 + 0x708]
	0x01CF3EC4 BL 0x1B6E7F0
	0x01CF3EC8 MOVZ W8, 0x1
	0x01CF3ECC STRB W8, [X20 + 0x6E3]
	0x01CF3ED0 LDR X0, [X22]
	0x01CF3ED4 LDR X20, [X19 + 0x20]
	0x01CF3ED8 LDR W8, [X0 + 0xE0]
	0x01CF3EDC CBNZ W8, 0x1CF3EE4
	0x01CF3EE0 BL 0x1B6E8F8
	0x01CF3EE4 MOV X0, X20
	0x01CF3EE8 MOV X1, X31
	0x01CF3EEC MOV X2, X31
	0x01CF3EF0 BL 0x3A9D6EC
	0x01CF3EF4 TBZ X0, 0x0, 0x1CF4310
	0x01CF3EF8 ADRP X21, 0x225C000
	0x01CF3EFC LDR X21, [X21 + 0x320]
	0x01CF3F00 LDR X0, [X21]
	0x01CF3F04 LDR W8, [X0 + 0xE0]
	0x01CF3F08 CBNZ W8, 0x1CF3F14
	0x01CF3F0C BL 0x1B6E8F8
	0x01CF3F10 LDR X0, [X21]
	0x01CF3F14 LDR X8, [X0 + 0xB8]
	0x01CF3F18 FMOV S0, 1
	0x01CF3F1C LDR V8, [X8 + 0x10]
	0x01CF3F20 FCMP S8, S0
	0x01CF3F24 B.PL 0x1CF4310
	0x01CF3F28 LDR W8, [X0 + 0xE0]
	0x01CF3F2C CBNZ W8, 0x1CF3F40
	0x01CF3F30 BL 0x1B6E8F8
	0x01CF3F34 LDR X8, [X21]
	0x01CF3F38 LDR X8, [X8 + 0xB8]
	0x01CF3F3C LDR V8, [X8 + 0x10]
	0x01CF3F40 MOV X0, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2531000
	007 Move X22, 0x225E000
	008 Move W8, [X21+1744]
	009 Move X22, [X22+1648]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {33}
	016 Move X0, 0x225E000
	017 Move X0, [X0+1656]
	018 Call 0x1B6F7F0
	019 Move X0, 0x225E000
	020 Move X0, [X0+1664]
	021 Call 0x1B6F7F0
	022 Move X0, 0x225B000
	023 Move X0, [X0+1144]
	024 Call 0x1B6F7F0
	025 Move X0, 0x225E000
	026 Move X0, [X0+1672]
	027 Call 0x1B6F7F0
	028 Move X0, 0x225E000
	029 Move X0, [X0+1648]
	030 Call 0x1B6F7F0
	031 Move W8, 1
	032 Move [X21+1744], W8
	033 Move X0, [X22]
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {39}
	037 Call 0x1B6F8F8
	038 Move X0, [X22]
	039 Move X8, [X0+184]
	040 Move X0, [X8]
	041 Compare X0, 0
	042 JumpIfEqual {97}
	043 Move X8, 0x225E000
	044 Move X8, [X8+1656]
	045 Move X1, X20
	046 Move X2, X19
	047 Move X3, [X8]
	048 Call Dictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	049 Move TEMP, X0
	050 And TEMP, TEMP, 1
	051 Compare TEMP, 1
	052 JumpIfNotEqual {56}
	053 Move X8, 0x225B000
	054 Move X8, [X8+1144]
	055 Move X21, [X19]
	056 Move X8, 0x225E000
	057 Move X8, [X8+1672]
	058 Move X0, X20
	059 Move X1, [X8]
	060 Call 0x212A3B0, X0
	061 Move X8, [X22]
	062 Move X21, X0
	063 Move W9, [X8+224]
	064 Compare W9, 0
	065 JumpIfNotEqual {69}
	066 Move X0, X8
	067 Call 0x1B6F8F8
	068 Move X8, [X22]
	069 Move X8, [X8+184]
	070 Move X0, [X8]
	071 Compare X0, 0
	072 JumpIfEqual {97}
	073 Move X8, 0x225E000
	074 Move X8, [X8+1664]
	075 Move X1, X20
	076 Move X2, X21
	077 Move X3, [X8]
	078 Call Dictionary`2<Object, Object>.set_Item, X0, X1, X2
	079 Move [X19], X21
	080 Move X8, 0x225B000
	081 Move X8, [X8+1144]
	082 Move X0, [X8]
	083 Move W8, [X0+224]
	084 Compare W8, 0
	085 JumpIfNotEqual {87}
	086 Call 0x1B6F8F8
	087 Move X0, X21
	088 Move X20, [X31+32]
	089 Move X19, [X31+40]
	090 Move X22, [X31+16]
	091 Move X21, [X31+24]
	092 Move X1, X31
	093 Move X2, X31
	094 Move X30, [X31+48]
	095 Call Object.op_Inequality, X0, X1
	096 Return X0
	097 Call 0x1B6FA1C

Method: System.Void .cctor()

Disassembly:
	0x01CF3F44 BL 0x3AA481C
	0x01CF3F48 ADRP X8, 0xFFFFFFFFFEDB6000
	0x01CF3F4C LDR X0, [X21]
	0x01CF3F50 LDR V1, [X8 + 0x998]
	0x01CF3F54 LDR X8, [X0 + 0xB8]
	0x01CF3F58 FMUL S0, S0, S1
	0x01CF3F5C FADD S0, S8, S0
	0x01CF3F60 FMOV S1, 1
	0x01CF3F64 FCMP S0, S1
	0x01CF3F68 STR S0, [X8 + 0x10]
	0x01CF3F6C B.LT 0x1CF3F8C
	0x01CF3F70 LDR W9, [X0 + 0xE0]
	0x01CF3F74 CBNZ W9, 0x1CF3F84
	0x01CF3F78 BL 0x1B6E8F8
	0x01CF3F7C LDR X8, [X21]
	0x01CF3F80 LDR X8, [X8 + 0xB8]
	0x01CF3F84 MOVZ W9, 0x3F800000
	0x01CF3F88 STR W9, [X8 + 0x10]
	0x01CF3F8C MOV X0, X31
	0x01CF3F90 BL 0x3A7C48C
	0x01CF3F94 LDR X8, [X19 + 0x20]
	0x01CF3F98 CBZ X8, 0x1CF4328
	0x01CF3F9C LDR X0, [X21]
	0x01CF3FA0 LDUR V5, [X8 + 0x18]
	0x01CF3FA4 LDR W9, [X0 + 0xE0]
	0x01CF3FA8 CBNZ W9, 0x1CF3FCC
	0x01CF3FAC STP V3, V0, [X31 + 0x30]
	0x01CF3FB0 STP V1, V2, [X31 + 0x10]
	0x01CF3FB4 STR V5, [X31]
	0x01CF3FB8 BL 0x1B6E8F8
	0x01CF3FBC LDP V5, V1, [X31]
	0x01CF3FC0 LDP V2, V3, [X31 + 0x20]
	0x01CF3FC4 LDR V0, [X31 + 0x4]
	0x01CF3FC8 LDR X0, [X21]
	0x01CF3FCC LDR X8, [X0 + 0xB8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2531000
	007 Move X22, 0x225E000
	008 Move X19, 0x225E000
	009 Move X20, 0x225E000
	010 Move W8, [X21+1745]
	011 Move X22, [X22+1632]
	012 Move X19, [X19+1640]
	013 Move X20, [X20+1648]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0x225E000
	019 Move X0, [X0+1640]
	020 Call 0x1B6F7F0
	021 Move X0, 0x225E000
	022 Move X0, [X0+1632]
	023 Call 0x1B6F7F0
	024 Move X0, 0x225E000
	025 Move X0, [X0+1648]
	026 Call 0x1B6F7F0
	027 Move W8, 1
	028 Move [X21+1745], W8
	029 Move X0, [X22]
	030 Call 0x1B6FA0C
	031 Move X1, [X19]
	032 Move X19, X0
	033 Call Dictionary`2<Object, Object>..ctor, X0
	034 Move X8, [X20]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move X8, [X8+184]
	038 Move [X8], X19
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X30, [X31+48]
	042 Return 

