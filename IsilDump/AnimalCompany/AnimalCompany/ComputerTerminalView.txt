Type: AnimalCompany.ComputerTerminalView

Method: System.Void Awake()

Disassembly:
	0x01D57E68 BL 0x2A3BEFC
	0x01D57E6C LDR X3, [X21]
	0x01D57E70 MOVZ W1, 0x2F
	0x01D57E74 MOVZ W2, 0x2F
	0x01D57E78 MOV X0, X19
	0x01D57E7C BL 0x2A3BEFC
	0x01D57E80 LDR X3, [X21]
	0x01D57E84 MOVZ W1, 0x3E
	0x01D57E88 MOVZ W2, 0x3E
	0x01D57E8C MOV X0, X19
	0x01D57E90 BL 0x2A3BEFC
	0x01D57E94 LDR X3, [X21]
	0x01D57E98 MOVZ W1, 0x20
	0x01D57E9C MOVZ W2, 0x20
	0x01D57EA0 MOV X0, X19
	0x01D57EA4 BL 0x2A3BEFC
	0x01D57EA8 LDR X8, [X20]
	0x01D57EAC LDR X8, [X8 + 0xB8]
	0x01D57EB0 STR X19, [X8]
	0x01D57EB4 LDP X20, X19, [X31 + 0x10]
	0x01D57EB8 LDP X30, X21, [X31], #0x20
	0x01D57EBC RET
	0x01D57EC0 BL 0x1C16F20
	0x01D57EC4 MOV X1, X31
	0x01D57EC8 B 0x33BDD8C
	0x01D57ECC STR X30, [X31 - 0x20]!
	0x01D57ED0 STP X20, X19, [X31 + 0x10]
	0x01D57ED4 ADRP X20, 0x2681000
	0x01D57ED8 LDRB W8, [X20 + 0x7F2]
	0x01D57EDC MOV X19, X0
	0x01D57EE0 TBNZ X8, 0x0, 0x1D57F10
	0x01D57EE4 ADRP X0, 0x239E000
	0x01D57EE8 LDR X0, [X0 + 0x1E8]
	0x01D57EEC BL 0x1C16CF4
	0x01D57EF0 ADRP X0, 0x239D000
	0x01D57EF4 LDR X0, [X0 + 0xFE0]
	0x01D57EF8 BL 0x1C16CF4
	0x01D57EFC ADRP X0, 0x239E000
	0x01D57F00 LDR X0, [X0 + 0x1F0]
	0x01D57F04 BL 0x1C16CF4
	0x01D57F08 MOVZ W8, 0x1
	0x01D57F0C STRB W8, [X20 + 0x7F2]
	0x01D57F10 LDR X1, [X19 + 0x18]
	0x01D57F14 MOV X0, X19
	0x01D57F18 BL 0x1D587BC
	0x01D57F1C CBZ X0, 0x1D57F54
	0x01D57F20 ADRP X8, 0x239E000
	0x01D57F24 LDR X8, [X8 + 0x1E8]
	0x01D57F28 ADRP X19, 0x239D000
	0x01D57F2C LDR X1, [X8]
	0x01D57F30 LDR X19, [X19 + 0xFE0]
	0x01D57F34 BL 0x2AA4E98
	0x01D57F38 LDR X8, [X19]
	0x01D57F3C LDP X20, X19, [X31 + 0x10]
	0x01D57F40 MOV X1, X0
	0x01D57F44 MOV X2, X31
	0x01D57F48 MOV X0, X8
	0x01D57F4C LDR X30, [X31], #0x20
	0x01D57F50 B 0x32280D8
	0x01D57F54 ADRP X8, 0x239E000
	0x01D57F58 LDR X8, [X8 + 0x1F0]
	0x01D57F5C LDP X20, X19, [X31 + 0x10]
	0x01D57F60 LDR X0, [X8]
	0x01D57F64 LDR X30, [X31], #0x20
	0x01D57F68 RET
	0x01D57F6C STR X30, [X31 - 0x30]!
	0x01D57F70 STP X22, X21, [X31 + 0x10]
	0x01D57F74 STP X20, X19, [X31 + 0x20]
	0x01D57F78 ADRP X22, 0x2681000
	0x01D57F7C ADRP X21, 0x239E000
	0x01D57F80 LDRB W8, [X22 + 0x7F3]
	0x01D57F84 LDR X21, [X21 + 0x1F8]
	0x01D57F88 MOV X20, X1
	0x01D57F8C MOV X19, X0
	0x01D57F90 TBNZ X8, 0x0, 0x1D57FD8
	0x01D57F94 ADRP X0, 0x239E000
	0x01D57F98 LDR X0, [X0 + 0x200]
	0x01D57F9C BL 0x1C16CF4
	0x01D57FA0 ADRP X0, 0x239E000
	0x01D57FA4 LDR X0, [X0 + 0x1F0]
	0x01D57FA8 BL 0x1C16CF4
	0x01D57FAC ADRP X0, 0x239E000
	0x01D57FB0 LDR X0, [X0 + 0x208]
	0x01D57FB4 BL 0x1C16CF4
	0x01D57FB8 ADRP X0, 0x239E000
	0x01D57FBC LDR X0, [X0 + 0x1F8]

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x2682000
	007 Move W8, [X20+2022]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x239F000
	014 Move X0, [X0+304]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X20+2022], W8
	018 Move X0, [X19+40]
	019 Compare X0, 0
	020 JumpIfEqual {96}
	021 Move X8, -19316736
	022 Move X21, 0x239F000
	023 Move V0, [X8+188]
	024 Move X21, [X21+304]
	025 Move X1, X31
	026 Call Canvas.set_planeDistance, X0, V0
	027 Move X0, [X21]
	028 Move W20, [X19+48]
	029 Move V8, [X19+64]
	030 Call 0x1C17F10
	031 NotImplemented "Instruction SCVTF not yet implemented."
	032 Move W8, 0x7F800000
	033 Multiply S0, S8, S0
	034 Move S1, W8
	035 NotImplemented "Instruction FCVTZS not yet implemented."
	036 NotImplemented "Instruction FCMP not yet implemented."
	037 Move W9, 0x80000000
	038 NotImplemented "Instruction CSEL not yet implemented."
	039 Move W3, 24
	040 Move W4, 15
	041 Move W1, W20
	042 Move X5, X31
	043 Move X21, X0
	044 Call RenderTexture..ctor, X0, X1, X2, X3, X4
	045 Move X0, [X19+56]
	046 Move [X19+184], X21
	047 Compare X0, 0
	048 JumpIfEqual {96}
	049 Move X1, X31
	050 Call Renderer.get_material, X0
	051 Compare X0, 0
	052 JumpIfEqual {96}
	053 Move X1, [X19+184]
	054 Move X2, X31
	055 Call Material.set_mainTexture, X0, X1
	056 Move X0, [X19+72]
	057 Compare X0, 0
	058 JumpIfEqual {96}
	059 Move X1, [X19+184]
	060 Move X2, X31
	061 Call Camera.set_targetTexture, X0, X1
	062 Move X0, [X19+72]
	063 Compare X0, 0
	064 JumpIfEqual {96}
	065 Move W1, W31
	066 Move X2, X31
	067 Call Behaviour.set_enabled, X0, X1
	068 Move X2, [X19+32]
	069 Move W1, 124
	070 Move X0, X19
	071 Call ComputerTerminalView.SetupPokeButton, X0, X1, X2
	072 Move X20, [X19+128]
	073 Compare X20, 0
	074 JumpIfEqual {96}
	075 Move W8, [X20+24]
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Move W21, W31
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Add X8, X20, W21
	080 Move X8, [X8+32]
	081 Compare X8, 0
	082 JumpIfEqual {96}
	083 Move W1, [X8+16]
	084 Move X2, [X8+24]
	085 Move X0, X19
	086 Call ComputerTerminalView.SetupPokeButton, X0, X1, X2
	087 Move W8, [X20+24]
	088 Add W21, W21, 1
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Move X20, [X31+32]
	091 Move X19, [X31+40]
	092 Move X30, [X31+16]
	093 Move X21, [X31+24]
	094 Move V8, [X31+48]
	095 Return 
	096 Call 0x1C17F20
	097 Call 0x1C17F28

Method: System.Void OnDestroy()

Disassembly:
	0x01D58404 STR X30, [X31 - 0x20]!
	0x01D58408 STP X20, X19, [X31 + 0x10]
	0x01D5840C ADRP X19, 0x2680000
	0x01D58410 ADRP X20, 0x239D000
	0x01D58414 LDRB W8, [X19 + 0x7F8]
	0x01D58418 LDR X20, [X20 + 0x80]
	0x01D5841C TBNZ X8, 0x0, 0x1D58434

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+184]
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move X1, X31
	006 Move X30, [X31+16]
	007 Call RenderTexture.Release, X0
	008 Return 
	009 Call 0x1C17F20

Method: System.Void SetupPokeButton(UnityEngine.KeyCode keyCode, UnityEngine.GameObject keyObj)

Disassembly:
	0x01D57FC0 BL 0x1C16CF4
	0x01D57FC4 ADRP X0, 0x239D000
	0x01D57FC8 LDR X0, [X0 + 0xEC8]
	0x01D57FCC BL 0x1C16CF4
	0x01D57FD0 MOVZ W8, 0x1
	0x01D57FD4 STRB W8, [X22 + 0x7F3]
	0x01D57FD8 LDR X1, [X21]
	0x01D57FDC ADRP X21, 0x239D000
	0x01D57FE0 LDR X21, [X21 + 0xEC8]
	0x01D57FE4 MOV X0, X20
	0x01D57FE8 MOV X2, X31
	0x01D57FEC BL 0x321BA08
	0x01D57FF0 TBZ X0, 0x0, 0x1D58040
	0x01D57FF4 LDR X0, [X19 + 0x18]
	0x01D57FF8 LDR X1, [X21]
	0x01D57FFC MOV X2, X31
	0x01D58000 BL 0x3226EF8
	0x01D58004 TBZ X0, 0x0, 0x1D58080
	0x01D58008 LDR X0, [X19 + 0x18]
	0x01D5800C CBZ X0, 0x1D5810C
	0x01D58010 MOVZ W1, 0x2F
	0x01D58014 MOV X2, X31
	0x01D58018 BL 0x322C668
	0x01D5801C LDR X8, [X19 + 0x18]
	0x01D58020 CBZ X8, 0x1D5810C
	0x01D58024 CMP W0, 0x1
	0x01D58028 CSINC W2, W0, W31, GT
	0x01D5802C MOV X0, X8
	0x01D58030 MOV W1, W31
	0x01D58034 MOV X3, X31
	0x01D58038 BL 0x3228DE4
	0x01D5803C B 0x1D580C8
	0x01D58040 CBZ X20, 0x1D5810C
	0x01D58044 LDR X1, [X21]
	0x01D58048 MOV X0, X20
	0x01D5804C MOV X2, X31
	0x01D58050 BL 0x3226F64
	0x01D58054 TBNZ X0, 0x0, 0x1D580A4
	0x01D58058 LDR X0, [X19 + 0x18]
	0x01D5805C LDR X1, [X21]
	0x01D58060 MOV X2, X31
	0x01D58064 BL 0x321BA08
	0x01D58068 TBZ X0, 0x0, 0x1D5808C
	0x01D5806C LDR X0, [X21]
	0x01D58070 MOV X1, X20
	0x01D58074 MOV X2, X31
	0x01D58078 BL 0x321B938
	0x01D5807C B 0x1D580A0
	0x01D58080 ADRP X8, 0x239D000
	0x01D58084 LDR X8, [X8 + 0x200]
	0x01D58088 B 0x1D580F8
	0x01D5808C LDR X0, [X19 + 0x18]
	0x01D58090 LDR X1, [X21]
	0x01D58094 MOV X2, X20
	0x01D58098 MOV X3, X31
	0x01D5809C BL 0x32274B8
	0x01D580A0 MOV X20, X0
	0x01D580A4 MOV X0, X19
	0x01D580A8 MOV X1, X20
	0x01D580AC BL 0x1D587BC
	0x01D580B0 CBZ X0, 0x1D580F0
	0x01D580B4 CBZ X20, 0x1D5810C
	0x01D580B8 MOVZ W1, 0x2F
	0x01D580BC MOV X0, X20
	0x01D580C0 MOV X2, X31
	0x01D580C4 BL 0x322BC38
	0x01D580C8 STR X0, [X19 + 0x18]
	0x01D580CC ADRP X8, 0x239D000
	0x01D580D0 LDR X8, [X8 + 0x208]
	0x01D580D4 MOV X1, X0
	0x01D580D8 LDP X20, X19, [X31 + 0x20]
	0x01D580DC LDP X22, X21, [X31 + 0x10]
	0x01D580E0 LDR X0, [X8]
	0x01D580E4 MOV X2, X31
	0x01D580E8 LDR X30, [X31], #0x30
	0x01D580EC B 0x321B938
	0x01D580F0 ADRP X8, 0x239D000
	0x01D580F4 LDR X8, [X8 + 0x1F0]
	0x01D580F8 LDR X0, [X8]
	0x01D580FC LDP X20, X19, [X31 + 0x20]
	0x01D58100 LDP X22, X21, [X31 + 0x10]
	0x01D58104 LDR X30, [X31], #0x30
	0x01D58108 RET
	0x01D5810C BL 0x1C16F20
	0x01D58110 STR X30, [X31 - 0x30]!
	0x01D58114 STP X22, X21, [X31 + 0x10]
	0x01D58118 STP X20, X19, [X31 + 0x20]
	0x01D5811C ADRP X22, 0x2680000
	0x01D58120 ADRP X21, 0x239C000
	0x01D58124 LDRB W8, [X22 + 0x7F4]
	0x01D58128 LDR X21, [X21 + 0xEC8]
	0x01D5812C MOV X20, X1
	0x01D58130 MOV X19, X0
	0x01D58134 TBNZ X8, 0x0, 0x1D58164
	0x01D58138 ADRP X0, 0x239D000
	0x01D5813C LDR X0, [X0 + 0x210]
	0x01D58140 BL 0x1C16CF4
	0x01D58144 ADRP X0, 0x239C000
	0x01D58148 LDR X0, [X0 + 0xEC8]
	0x01D5814C BL 0x1C16CF4
	0x01D58150 ADRP X0, 0x239D000
	0x01D58154 LDR X0, [X0 + 0x218]
	0x01D58158 BL 0x1C16CF4
	0x01D5815C MOVZ W8, 0x1
	0x01D58160 STRB W8, [X22 + 0x7F4]
	0x01D58164 LDR X0, [X19 + 0x18]
	0x01D58168 LDR X1, [X21]
	0x01D5816C MOV X2, X20
	0x01D58170 MOV X3, X31
	0x01D58174 BL 0x32274B8
	0x01D58178 MOV X20, X0
	0x01D5817C MOV X0, X19
	0x01D58180 MOV X1, X20
	0x01D58184 BL 0x1D5894C
	0x01D58188 CBNZ X0, 0x1D581B4
	0x01D5818C MOV X0, X19
	0x01D58190 MOV X1, X20
	0x01D58194 BL 0x1D587BC
	0x01D58198 CBZ X0, 0x1D581A8
	0x01D5819C ADRP X8, 0x239D000
	0x01D581A0 LDR X8, [X8 + 0x218]
	0x01D581A4 B 0x1D581B0
	0x01D581A8 ADRP X8, 0x239D000
	0x01D581AC LDR X8, [X8 + 0x210]
	0x01D581B0 LDR X0, [X8]
	0x01D581B4 LDP X20, X19, [X31 + 0x20]
	0x01D581B8 LDP X22, X21, [X31 + 0x10]
	0x01D581BC LDR X30, [X31], #0x30
	0x01D581C0 RET
	0x01D581C4 STP X30, X21, [X31 - 0x20]!
	0x01D581C8 STP X20, X19, [X31 + 0x10]
	0x01D581CC ADRP X21, 0x2680000
	0x01D581D0 LDRB W8, [X21 + 0x7F7]
	0x01D581D4 MOV X19, X1
	0x01D581D8 MOV X20, X0
	0x01D581DC TBNZ X8, 0x0, 0x1D58248
	0x01D581E0 ADRP X0, 0x239D000
	0x01D581E4 LDR X0, [X0 + 0x220]
	0x01D581E8 BL 0x1C16CF4
	0x01D581EC ADRP X0, 0x239B000
	0x01D581F0 LDR X0, [X0 + 0x718]
	0x01D581F4 BL 0x1C16CF4
	0x01D581F8 ADRP X0, 0x239C000
	0x01D581FC LDR X0, [X0 + 0x250]
	0x01D58200 BL 0x1C16CF4
	0x01D58204 ADRP X0, 0x239B000
	0x01D58208 LDR X0, [X0 + 0x720]
	0x01D5820C BL 0x1C16CF4
	0x01D58210 ADRP X0, 0x239D000
	0x01D58214 LDR X0, [X0 + 0x1F0]
	0x01D58218 BL 0x1C16CF4
	0x01D5821C ADRP X0, 0x239D000
	0x01D58220 LDR X0, [X0 + 0x228]
	0x01D58224 BL 0x1C16CF4
	0x01D58228 ADRP X0, 0x239D000
	0x01D5822C LDR X0, [X0 + 0x230]
	0x01D58230 BL 0x1C16CF4
	0x01D58234 ADRP X0, 0x239D000
	0x01D58238 LDR X0, [X0 + 0x238]
	0x01D5823C BL 0x1C16CF4
	0x01D58240 MOVZ W8, 0x1
	0x01D58244 STRB W8, [X21 + 0x7F7]
	0x01D58248 LDR X1, [X20 + 0x18]
	0x01D5824C MOV X0, X20
	0x01D58250 BL 0x1D587BC
	0x01D58254 CBZ X0, 0x1D58280
	0x01D58258 ADRP X8, 0x239D000
	0x01D5825C LDR X8, [X8 + 0x220]
	0x01D58260 MOV X1, X19
	0x01D58264 MOV X20, X0
	0x01D58268 LDR X2, [X8]
	0x01D5826C BL 0x2AA528C
	0x01D58270 TBZ X0, 0x0, 0x1D58298
	0x01D58274 ADRP X8, 0x239D000
	0x01D58278 LDR X8, [X8 + 0x228]
	0x01D5827C B 0x1D58288
	0x01D58280 ADRP X8, 0x239D000
	0x01D58284 LDR X8, [X8 + 0x1F0]
	0x01D58288 LDR X0, [X8]
	0x01D5828C LDP X20, X19, [X31 + 0x10]
	0x01D58290 LDP X30, X21, [X31], #0x20
	0x01D58294 RET
	0x01D58298 ADRP X8, 0x239B000
	0x01D5829C LDR X8, [X8 + 0x720]
	0x01D582A0 LDR X0, [X8]
	0x01D582A4 BL 0x1C16F10
	0x01D582A8 ADRP X8, 0x239B000
	0x01D582AC LDR X8, [X8 + 0x718]
	0x01D582B0 MOV X21, X0
	0x01D582B4 LDR X1, [X8]
	0x01D582B8 BL 0x2AA4804
	0x01D582BC ADRP X8, 0x239C000
	0x01D582C0 LDR X8, [X8 + 0x250]
	0x01D582C4 MOV X0, X20
	0x01D582C8 MOV X1, X19
	0x01D582CC MOV X2, X21
	0x01D582D0 LDR X3, [X8]
	0x01D582D4 BL 0x2AA5084
	0x01D582D8 ADRP X8, 0x239D000
	0x01D582DC ADRP X9, 0x239D000
	0x01D582E0 LDR X8, [X8 + 0x230]
	0x01D582E4 LDR X9, [X9 + 0x238]
	0x01D582E8 MOV X1, X19
	0x01D582EC LDP X20, X19, [X31 + 0x10]
	0x01D582F0 LDR X0, [X8]
	0x01D582F4 LDR X2, [X9]
	0x01D582F8 MOV X3, X31
	0x01D582FC LDP X30, X21, [X31], #0x20
	0x01D58300 B 0x32274B8
	0x01D58304 STP X30, X21, [X31 - 0x20]!
	0x01D58308 STP X20, X19, [X31 + 0x10]
	0x01D5830C ADRP X21, 0x2680000
	0x01D58310 LDRB W8, [X21 + 0x7F6]
	0x01D58314 MOV X19, X1
	0x01D58318 MOV X20, X0
	0x01D5831C TBNZ X8, 0x0, 0x1D58370
	0x01D58320 ADRP X0, 0x239D000
	0x01D58324 LDR X0, [X0 + 0x220]
	0x01D58328 BL 0x1C16CF4
	0x01D5832C ADRP X0, 0x239C000
	0x01D58330 LDR X0, [X0 + 0x2F0]
	0x01D58334 BL 0x1C16CF4
	0x01D58338 ADRP X0, 0x239D000
	0x01D5833C LDR X0, [X0 + 0x1F0]
	0x01D58340 BL 0x1C16CF4
	0x01D58344 ADRP X0, 0x239D000
	0x01D58348 LDR X0, [X0 + 0x210]
	0x01D5834C BL 0x1C16CF4
	0x01D58350 ADRP X0, 0x239D000
	0x01D58354 LDR X0, [X0 + 0x240]
	0x01D58358 BL 0x1C16CF4
	0x01D5835C ADRP X0, 0x239D000
	0x01D58360 LDR X0, [X0 + 0x248]
	0x01D58364 BL 0x1C16CF4
	0x01D58368 MOVZ W8, 0x1
	0x01D5836C STRB W8, [X21 + 0x7F6]
	0x01D58370 LDR X1, [X20 + 0x18]
	0x01D58374 MOV X0, X20
	0x01D58378 BL 0x1D587BC
	0x01D5837C CBZ X0, 0x1D583E0
	0x01D58380 ADRP X8, 0x239D000
	0x01D58384 LDR X8, [X8 + 0x220]
	0x01D58388 MOV X1, X19
	0x01D5838C MOV X20, X0
	0x01D58390 LDR X2, [X8]
	0x01D58394 BL 0x2AA528C
	0x01D58398 TBZ X0, 0x0, 0x1D583EC
	0x01D5839C ADRP X8, 0x239C000
	0x01D583A0 LDR X8, [X8 + 0x2F0]
	0x01D583A4 MOV X0, X20
	0x01D583A8 MOV X1, X19
	0x01D583AC LDR X2, [X8]
	0x01D583B0 BL 0x2AA64F8
	0x01D583B4 ADRP X8, 0x239D000
	0x01D583B8 ADRP X9, 0x239D000
	0x01D583BC LDR X8, [X8 + 0x248]
	0x01D583C0 LDR X9, [X9 + 0x240]
	0x01D583C4 MOV X1, X19
	0x01D583C8 LDP X20, X19, [X31 + 0x10]
	0x01D583CC LDR X0, [X8]
	0x01D583D0 LDR X2, [X9]
	0x01D583D4 MOV X3, X31
	0x01D583D8 LDP X30, X21, [X31], #0x20
	0x01D583DC B 0x32274B8
	0x01D583E0 ADRP X8, 0x239D000
	0x01D583E4 LDR X8, [X8 + 0x1F0]
	0x01D583E8 B 0x1D583F4
	0x01D583EC ADRP X8, 0x239D000
	0x01D583F0 LDR X8, [X8 + 0x210]
	0x01D583F4 LDR X0, [X8]
	0x01D583F8 LDP X20, X19, [X31 + 0x10]
	0x01D583FC LDP X30, X21, [X31], #0x20
	0x01D58400 RET

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+32], D12
	003 Move [X31+48], D11
	004 Move [X31+56], D10
	005 Move [X31+64], D9
	006 Move [X31+72], D8
	007 Move [X31+80], X30
	008 Move [X31+88], X25
	009 Move [X31+96], X24
	010 Move [X31+104], X23
	011 Move [X31+112], X22
	012 Move [X31+120], X21
	013 Move [X31+128], X20
	014 Move [X31+136], X19
	015 Move X22, 0x2682000
	016 Move W8, [X22+2023]
	017 Move X20, X2
	018 Move W21, W1
	019 Move X19, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {50}
	024 Move X0, 0x239F000
	025 Move X0, [X0+312]
	026 Call 0x1C17CF4
	027 Move X0, 0x239E000
	028 Move X0, [X0+320]
	029 Call 0x1C17CF4
	030 Move X0, 0x239E000
	031 Move X0, [X0+328]
	032 Call 0x1C17CF4
	033 Move X0, 0x239E000
	034 Move X0, [X0+336]
	035 Call 0x1C17CF4
	036 Move X0, 0x239E000
	037 Move X0, [X0+344]
	038 Call 0x1C17CF4
	039 Move X0, 0x239E000
	040 Move X0, [X0+352]
	041 Call 0x1C17CF4
	042 Move X0, 0x239E000
	043 Move X0, [X0+360]
	044 Call 0x1C17CF4
	045 Move X0, 0x239C000
	046 Move X0, [X0+2648]
	047 Call 0x1C17CF4
	048 Move W8, 1
	049 Move [X22+2023], W8
	050 Compare X20, 0
	051 JumpIfEqual {302}
	052 Move X24, 0x239E000
	053 Move X24, [X24+360]
	054 Move X0, X20
	055 Move X1, [X24]
	056 Call 0x21E62E4, X0
	057 Compare X0, 0
	058 JumpIfEqual {302}
	059 Move X1, X31
	060 Call MeshFilter.get_sharedMesh, X0
	061 Compare X0, 0
	062 JumpIfEqual {302}
	063 Move X22, 0x239C000
	064 Move X22, [X22+2648]
	065 Add X8, X31, 8
	066 Move X1, X31
	067 Call Mesh.get_bounds, X0
	068 Move S8, [X31+8]
	069 Move S9, [X31+12]
	070 Move V10, [X31+16]
	071 NotImplemented "Instruction LDUR not yet implemented."
	072 Move V12, [X31+28]
	073 Move X0, X20
	074 Move X1, X31
	075 Call Object.get_name, X0
	076 Move X8, [X22]
	077 Move X23, X0
	078 Move X0, X8
	079 Call 0x1C17F10
	080 Move X1, X23
	081 Move X2, X31
	082 Move X22, X0
	083 Call GameObject..ctor, X0, X1
	084 Compare X22, 0
	085 JumpIfEqual {302}
	086 Move X0, X22
	087 Move X1, X31
	088 Call GameObject.get_transform, X0
	089 Compare X0, 0
	090 JumpIfEqual {302}
	091 Move X1, [X19+120]
	092 Move X2, X31
	093 Call Transform.SetParent, X0, X1
	094 Move X0, X22
	095 Move X1, X31
	096 Call GameObject.get_transform, X0
	097 Move X23, X0
	098 Move X0, X20
	099 Move X1, X31
	100 Call GameObject.get_transform, X0
	101 Compare X0, 0
	102 JumpIfEqual {302}
	103 Move X1, X31
	104 Call Transform.get_localPosition, X0
	105 Compare X23, 0
	106 JumpIfEqual {302}
	107 Move X0, X23
	108 Move X1, X31
	109 Call Transform.set_localPosition, X0, X1
	110 Move X0, X22
	111 Move X1, X31
	112 Call GameObject.get_transform, X0
	113 Move X23, X0
	114 Move X0, X20
	115 Move X1, X31
	116 Call GameObject.get_transform, X0
	117 Compare X0, 0
	118 JumpIfEqual {302}
	119 Move X1, X31
	120 Call Transform.get_localRotation, X0
	121 Compare X23, 0
	122 JumpIfEqual {302}
	123 Move X0, X23
	124 Move X1, X31
	125 Call Transform.set_localRotation, X0, X1
	126 Move X0, X20
	127 Move X1, X31
	128 Call GameObject.get_tag, X0
	129 Move X1, X0
	130 Move X0, X22
	131 Move X2, X31
	132 Call GameObject.set_tag, X0, X1
	133 Move X0, X20
	134 Move X1, X31
	135 Call GameObject.get_layer, X0
	136 Move W1, W0
	137 Move X0, X22
	138 Move X2, X31
	139 Call GameObject.set_layer, X0, X1
	140 Move X0, X20
	141 Move X1, X31
	142 Call GameObject.get_transform, X0
	143 Move X23, X0
	144 Move X0, X22
	145 Move X1, X31
	146 Call GameObject.get_transform, X0
	147 Compare X23, 0
	148 JumpIfEqual {302}
	149 Move X1, X0
	150 Move X0, X23
	151 Move X2, X31
	152 Call Transform.set_parent, X0, X1
	153 NotImplemented "Instruction CMP not yet implemented."
	154 Move X8, 0x239E000
	155 Move X8, [X8+352]
	156 Move X0, X22
	157 Move X1, [X8]
	158 Call 0x21E61FC, X0
	159 Move X1, [X24]
	160 Move X23, X0
	161 Move X0, X20
	162 Call 0x21E62E4, X0
	163 Compare X0, 0
	164 JumpIfEqual {302}
	165 Move X1, X31
	166 Call MeshFilter.get_sharedMesh, X0
	167 Compare X23, 0
	168 JumpIfEqual {302}
	169 Move X1, X0
	170 Move X0, X23
	171 Move X2, X31
	172 Call MeshCollider.set_sharedMesh, X0, X1
	173 Move X8, 0x239E000
	174 Move X8, [X8+336]
	175 Move X0, X22
	176 Move X1, [X8]
	177 Call 0x21E61FC, X0
	178 Compare X0, 0
	179 JumpIfEqual {302}
	180 Move V0, [X19+156]
	181 NotImplemented "Instruction LDUR not yet implemented."
	182 Add S2, S12, S12
	183 Add V3, V11, V11
	184 Add S2, S2, S0
	185 Add V0, V3, V1
	186 Move S1, V0.S[1]
	187 Move X1, X31
	188 Move X23, X0
	189 Call BoxCollider.set_size, X0, X1
	190 Move X0, X23
	191 Move V0, V8
	192 Move V1, V9
	193 Move V2, V10
	194 Move X1, X31
	195 Call BoxCollider.set_center, X0, X1
	196 Move X24, 0x239E000
	197 Move X24, [X24+344]
	198 Move X0, X20
	199 Move X1, X31
	200 Call GameObject.get_layer, X0
	201 Move X1, X31
	202 Call LayerMask.op_Implicit, X0
	203 And X1, X0, 0
	204 Move X0, X23
	205 Move X2, X31
	206 Call Collider.set_includeLayers, X0, X1
	207 Move X1, [X24]
	208 Move X0, X22
	209 Call 0x21E61FC, X0
	210 Compare X0, 0
	211 JumpIfEqual {302}
	212 Move X24, 0x239E000
	213 Move X25, 0x239E000
	214 Move X24, [X24+312]
	215 Move X25, [X25+320]
	216 Move X22, X0
	217 Move [X0+32], W21
	218 Move [X0+40], X23
	219 Move X0, X20
	220 Move X1, X31
	221 Call GameObject.get_transform, X0
	222 Move [X22+48], X0
	223 Move X8, [X19+136]
	224 Move W9, [X19+144]
	225 Move X20, [X22+96]
	226 Move [X22+56], X8
	227 Move [X22+64], W9
	228 Move X0, [X24]
	229 Call 0x1C17F10
	230 Move X2, [X25]
	231 Move X1, X19
	232 Move X3, X31
	233 Move X21, X0
	234 Call Action`1<Object>..ctor, X0, X1, X2
	235 Move X0, X20
	236 Move X1, X21
	237 Move X2, X31
	238 Call Delegate.Combine, X0, X1
	239 Move X20, [X24]
	240 Compare X0, 0
	241 JumpIfEqual {255}
	242 Move X1, X20
	243 Move X21, X0
	244 Call 0x1C17E00
	245 Compare X0, 0
	246 JumpIfEqual {303}
	247 Move [X22+96], X0
	248 Move X20, [X24]
	249 Move X0, X21
	250 Move X1, X20
	251 Call 0x1C17E00
	252 Compare X0, 0
	253 JumpIfEqual {303}
	254 Move X20, [X24]
	255 Move [X22+96], X31
	256 Move X23, 0x239E000
	257 Move X21, [X22+104]
	258 Move X23, [X23+328]
	259 Move X0, X20
	260 Call 0x1C17F10
	261 Move X2, [X23]
	262 Move X1, X19
	263 Move X3, X31
	264 Move X20, X0
	265 Call Action`1<Object>..ctor, X0, X1, X2
	266 Move X0, X21
	267 Move X1, X20
	268 Move X2, X31
	269 Call Delegate.Combine, X0, X1
	270 Compare X0, 0
	271 JumpIfEqual {286}
	272 Move X20, [X24]
	273 Move X19, X0
	274 Move X1, X20
	275 Call 0x1C17E00
	276 Compare X0, 0
	277 JumpIfEqual {285}
	278 Move [X22+104], X0
	279 Move X20, [X24]
	280 Move X0, X19
	281 Move X1, X20
	282 Call 0x1C17E00
	283 Compare X0, 0
	284 JumpIfNotEqual {287}
	285 Move X0, X19
	286 Move [X22+104], X31
	287 Move X20, [X31+128]
	288 Move X19, [X31+136]
	289 Move X22, [X31+112]
	290 Move X21, [X31+120]
	291 Move X24, [X31+96]
	292 Move X23, [X31+104]
	293 Move X30, [X31+80]
	294 Move X25, [X31+88]
	295 Move D9, [X31+64]
	296 Move D8, [X31+72]
	297 Move D11, [X31+48]
	298 Move D10, [X31+56]
	299 Move V12, [X31+32]
	300 Add X31, X31, 144
	301 Return 
	302 Call 0x1C17F20
	303 Move X0, X21
	304 Move X1, X20
	305 Call 0x1C181E0

Method: System.Void HandleKeyPressed(AnimalCompany.ComputerTerminalKey keyView)

Disassembly:
	0x01D58420 ADRP X0, 0x239D000
	0x01D58424 LDR X0, [X0 + 0x80]
	0x01D58428 BL 0x1C16CF4
	0x01D5842C MOVZ W8, 0x1
	0x01D58430 STRB W8, [X19 + 0x7F8]
	0x01D58434 LDR X0, [X20]
	0x01D58438 LDP X20, X19, [X31 + 0x10]
	0x01D5843C LDR X30, [X31], #0x20
	0x01D58440 RET
	0x01D58444 STR X30, [X31 - 0x30]!
	0x01D58448 STP X22, X21, [X31 + 0x10]
	0x01D5844C STP X20, X19, [X31 + 0x20]
	0x01D58450 ADRP X22, 0x2680000
	0x01D58454 LDRB W8, [X22 + 0x7F5]
	0x01D58458 MOV X20, X2
	0x01D5845C MOV X19, X1
	0x01D58460 MOV X21, X0
	0x01D58464 TBNZ X8, 0x0, 0x1D584B8
	0x01D58468 ADRP X0, 0x239D000
	0x01D5846C LDR X0, [X0 + 0x220]
	0x01D58470 BL 0x1C16CF4
	0x01D58474 ADRP X0, 0x239C000
	0x01D58478 LDR X0, [X0 + 0x250]
	0x01D5847C BL 0x1C16CF4
	0x01D58480 ADRP X0, 0x239D000
	0x01D58484 LDR X0, [X0 + 0x1F0]
	0x01D58488 BL 0x1C16CF4
	0x01D5848C ADRP X0, 0x239D000
	0x01D58490 LDR X0, [X0 + 0x248]
	0x01D58494 BL 0x1C16CF4
	0x01D58498 ADRP X0, 0x239D000
	0x01D5849C LDR X0, [X0 + 0x250]
	0x01D584A0 BL 0x1C16CF4
	0x01D584A4 ADRP X0, 0x239D000
	0x01D584A8 LDR X0, [X0 + 0x238]
	0x01D584AC BL 0x1C16CF4
	0x01D584B0 MOVZ W8, 0x1
	0x01D584B4 STRB W8, [X22 + 0x7F5]
	0x01D584B8 LDR X1, [X21 + 0x18]
	0x01D584BC MOV X0, X21
	0x01D584C0 BL 0x1D587BC
	0x01D584C4 CBZ X0, 0x1D584F0
	0x01D584C8 ADRP X8, 0x239D000
	0x01D584CC LDR X8, [X8 + 0x220]
	0x01D584D0 MOV X1, X19
	0x01D584D4 MOV X21, X0
	0x01D584D8 LDR X2, [X8]
	0x01D584DC BL 0x2AA528C
	0x01D584E0 TBZ X0, 0x0, 0x1D5850C
	0x01D584E4 ADRP X8, 0x239D000
	0x01D584E8 LDR X8, [X8 + 0x250]
	0x01D584EC B 0x1D584F8
	0x01D584F0 ADRP X8, 0x239D000
	0x01D584F4 LDR X8, [X8 + 0x1F0]
	0x01D584F8 LDR X0, [X8]
	0x01D584FC LDP X20, X19, [X31 + 0x20]
	0x01D58500 LDP X22, X21, [X31 + 0x10]
	0x01D58504 LDR X30, [X31], #0x30
	0x01D58508 RET
	0x01D5850C ADRP X8, 0x239C000
	0x01D58510 LDR X8, [X8 + 0x250]
	0x01D58514 MOV X0, X21
	0x01D58518 MOV X1, X19
	0x01D5851C MOV X2, X20
	0x01D58520 LDR X3, [X8]
	0x01D58524 BL 0x2AA5084
	0x01D58528 ADRP X8, 0x239D000
	0x01D5852C ADRP X9, 0x239D000
	0x01D58530 LDR X8, [X8 + 0x248]
	0x01D58534 LDR X9, [X9 + 0x238]
	0x01D58538 MOV X1, X19
	0x01D5853C LDP X20, X19, [X31 + 0x20]
	0x01D58540 LDR X0, [X8]
	0x01D58544 LDR X2, [X9]
	0x01D58548 LDP X22, X21, [X31 + 0x10]
	0x01D5854C MOV X3, X31
	0x01D58550 LDR X30, [X31], #0x30
	0x01D58554 B 0x32274B8
	0x01D58558 STP X30, X21, [X31 - 0x20]!
	0x01D5855C STP X20, X19, [X31 + 0x10]
	0x01D58560 ADRP X21, 0x2680000
	0x01D58564 LDRB W8, [X21 + 0x7F9]
	0x01D58568 MOV X20, X1
	0x01D5856C MOV X19, X0
	0x01D58570 TBNZ X8, 0x0, 0x1D585AC
	0x01D58574 ADRP X0, 0x239B000
	0x01D58578 LDR X0, [X0 + 0xAC8]
	0x01D5857C BL 0x1C16CF4
	0x01D58580 ADRP X0, 0x239B000
	0x01D58584 LDR X0, [X0 + 0xDD8]
	0x01D58588 BL 0x1C16CF4
	0x01D5858C ADRP X0, 0x239D000
	0x01D58590 LDR X0, [X0 + 0x258]
	0x01D58594 BL 0x1C16CF4
	0x01D58598 ADRP X0, 0x239D000
	0x01D5859C LDR X0, [X0 + 0x260]
	0x01D585A0 BL 0x1C16CF4
	0x01D585A4 MOVZ W8, 0x1
	0x01D585A8 STRB W8, [X21 + 0x7F9]
	0x01D585AC CBZ X20, 0x1D5866C
	0x01D585B0 ADRP X8, 0x239B000
	0x01D585B4 LDR X8, [X8 + 0xDD8]
	0x01D585B8 LDR W9, [X20 + 0x18]
	0x01D585BC MOVZ W2, 0x1
	0x01D585C0 MOV X1, X20
	0x01D585C4 LDR X0, [X8]
	0x01D585C8 SUB W3, W9, 0x1
	0x01D585CC MOV X4, X31
	0x01D585D0 BL 0x3228058
	0x01D585D4 CBZ X0, 0x1D5866C
	0x01D585D8 ADRP X8, 0x239D000
	0x01D585DC LDR X8, [X8 + 0x260]
	0x01D585E0 MOV X2, X31
	0x01D585E4 MOV X20, X0
	0x01D585E8 LDR X1, [X8]
	0x01D585EC BL 0x322BD1C
	0x01D585F0 TBZ X0, 0x0, 0x1D5865C
	0x01D585F4 ADRP X8, 0x239B000
	0x01D585F8 LDR X8, [X8 + 0xAC8]
	0x01D585FC MOVZ W1, 0x1
	0x01D58600 LDR X0, [X8]
	0x01D58604 BL 0x1C16D6C
	0x01D58608 CBZ X0, 0x1D5866C
	0x01D5860C LDR W8, [X0 + 0x18]
	0x01D58610 MOV X1, X0
	0x01D58614 CBZ W8, 0x1D58670
	0x01D58618 ADRP X8, 0x239D000
	0x01D5861C LDR X8, [X8 + 0x258]
	0x01D58620 MOV X0, X20
	0x01D58624 MOV W2, W31
	0x01D58628 MOV X3, X31
	0x01D5862C LDR X8, [X8]
	0x01D58630 STR X8, [X1 + 0x20]
	0x01D58634 BL 0x322ADF0
	0x01D58638 CBZ X0, 0x1D5866C
	0x01D5863C LDR W8, [X0 + 0x18]
	0x01D58640 CMP W8, 0x2
	0x01D58644 B.NE 0x1D5865C
	0x01D58648 LDP X2, X1, [X0 + 0x20]
	0x01D5864C MOV X0, X19
	0x01D58650 LDP X20, X19, [X31 + 0x10]
	0x01D58654 LDP X30, X21, [X31], #0x20
	0x01D58658 B 0x1D58444
	0x01D5865C MOV X0, X20
	0x01D58660 LDP X20, X19, [X31 + 0x10]
	0x01D58664 LDP X30, X21, [X31], #0x20
	0x01D58668 RET
	0x01D5866C BL 0x1C16F20
	0x01D58670 BL 0x1C16F28
	0x01D58674 STR X30, [X31 - 0x40]!
	0x01D58678 STP X24, X23, [X31 + 0x10]
	0x01D5867C STP X22, X21, [X31 + 0x20]
	0x01D58680 STP X20, X19, [X31 + 0x30]
	0x01D58684 ADRP X21, 0x2680000
	0x01D58688 LDRB W8, [X21 + 0x7EE]
	0x01D5868C MOV X19, X1
	0x01D58690 MOV X20, X0
	0x01D58694 TBNZ X8, 0x0, 0x1D586E8
	0x01D58698 ADRP X0, 0x239D000
	0x01D5869C LDR X0, [X0 + 0x268]
	0x01D586A0 BL 0x1C16CF4
	0x01D586A4 ADRP X0, 0x239C000
	0x01D586A8 LDR X0, [X0 + 0x250]
	0x01D586AC BL 0x1C16CF4
	0x01D586B0 ADRP X0, 0x239B000
	0x01D586B4 LDR X0, [X0 + 0x720]
	0x01D586B8 BL 0x1C16CF4
	0x01D586BC ADRP X0, 0x239C000
	0x01D586C0 LDR X0, [X0 + 0xFE0]
	0x01D586C4 BL 0x1C16CF4
	0x01D586C8 ADRP X0, 0x239C000
	0x01D586CC LDR X0, [X0 + 0xEC8]
	0x01D586D0 BL 0x1C16CF4
	0x01D586D4 ADRP X0, 0x239C000
	0x01D586D8 LDR X0, [X0 + 0xF20]
	0x01D586DC BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2681000
	007 Move W8, [X21+2024]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {28}
	014 Move X0, 0x239E000
	015 Move X0, [X0+368]
	016 Call 0x1C17CF4
	017 Move X0, 0x239E000
	018 Move X0, [X0+376]
	019 Call 0x1C17CF4
	020 Move X0, 0x239E000
	021 Move X0, [X0+384]
	022 Call 0x1C17CF4
	023 Move X0, 0x239C000
	024 Move X0, [X0+2440]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X21+2024], W8
	028 Move X0, X31
	029 NotImplemented "Instruction STRH not yet implemented."
	030 Call Time.get_time
	031 Move V1, [X19+216]
	032 Move V2, [X19+112]
	033 Subtract S0, S0, S1
	034 NotImplemented "Instruction FCMP not yet implemented."
	035 Move X0, X31
	036 Call Time.get_time
	037 Move X0, [X19+176]
	038 Move [X19+216], S0
	039 Compare X0, 0
	040 JumpIfEqual {189}
	041 Move X21, [X19+160]
	042 Move X1, X31
	043 Call Component.get_transform, X0
	044 Compare X0, 0
	045 JumpIfEqual {189}
	046 Move X1, X31
	047 Call Transform.get_position, X0
	048 Compare X21, 0
	049 JumpIfEqual {189}
	050 Move S3, 1
	051 Move W1, 1
	052 Move X0, X21
	053 Move X2, X31
	054 Call RandomSFX.Play, X0, X1, V0, X2
	055 Compare X20, 0
	056 JumpIfEqual {189}
	057 Move W8, [X20+32]
	058 NotImplemented "Instruction CMP not yet implemented."
	059 NotImplemented "Instruction CMP not yet implemented."
	060 NotImplemented "Instruction CMP not yet implemented."
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move X8, [X19+272]
	063 Compare X8, 0
	064 JumpIfNotEqual {121}
	065 NotImplemented "Instruction CMP not yet implemented."
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move X0, [X19+208]
	068 Move X1, X31
	069 Call String.IsNullOrEmpty, X0
	070 Move TEMP, X0
	071 And TEMP, TEMP, 1
	072 Compare TEMP, 1
	073 JumpIfEqual {173}
	074 Move X9, [X19+200]
	075 Compare X9, 0
	076 JumpIfEqual {189}
	077 NotImplemented "Instruction LDRSW not yet implemented."
	078 Move W10, [X9+24]
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Move X10, 0x239C000
	081 Move X10, [X10+2440]
	082 Add X9, X9, X8
	083 Move X1, [X19+208]
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Move X11, [X10]
	086 Move [X9+32], X11
	087 Move X9, [X10]
	088 Move W10, 1
	089 Move [X19+232], W10
	090 Move [X19+208], X9
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Compare W8, 0
	093 JumpIfNotEqual {173}
	094 Move X8, [X19+240]
	095 Compare X8, 0
	096 JumpIfNotEqual {185}
	097 Move W8, [X19+192]
	098 Move W9, 0x5556
	099 NotImplemented "Instruction MOVK not yet implemented."
	100 Move X10, 0x239C000
	101 Add W8, W8, 1
	102 NotImplemented "Instruction SMADDL not yet implemented."
	103 Move X11, X9
	104 ShiftRight X11, 63
	105 And X11, X11, 0x7FFFFFFF
	106 Move X9, X9
	107 ShiftRight X9, 32
	108 And X9, X9, 0x7FFFFFFF
	109 Move X10, [X10+2440]
	110 Add W9, W9, W11
	111 Add W9, W9, W9
	112 Subtract W8, W8, W9
	113 Move [X19+192], W8
	114 Move X8, [X10]
	115 Move W9, 1
	116 Move [X19+232], W9
	117 Move [X19+208], X8
	118 Move X8, [X19+264]
	119 Compare X8, 0
	120 JumpIfEqual {173}
	121 Move X9, [X8+24]
	122 Move X0, [X8+64]
	123 Move X1, [X8+40]
	124 NotImplemented "Instruction BLR not yet implemented."
	125 Move X0, [X19+208]
	126 Compare X0, 0
	127 JumpIfEqual {189}
	128 Move W8, [X0+16]
	129 Subtract W2, W8, 1
	130 Move W1, W31
	131 Move X3, X31
	132 Call String.Substring, X0, X1, X2
	133 Move X21, 0x239E000
	134 Move X21, [X21+376]
	135 Move X0, [X21]
	136 Move W8, [X0+224]
	137 Compare W8, 0
	138 JumpIfNotEqual {141}
	139 Call 0x1C17DFC
	140 Move X0, [X21]
	141 Move X8, [X0+184]
	142 Move X0, [X8]
	143 Compare X0, 0
	144 JumpIfEqual {189}
	145 Move X8, 0x239E000
	146 Move W1, [X20+32]
	147 Move X8, [X8+384]
	148 Add X2, X31, 12
	149 Move X3, [X8]
	150 Call Dictionary`2<Int32Enum, Char>.TryGetValue, X0, X1, X2
	151 Move TEMP, X0
	152 And TEMP, TEMP, 1
	153 Compare TEMP, 1
	154 JumpIfNotEqual {173}
	155 Move X8, 0x239E000
	156 Move X8, [X8+368]
	157 Move X20, [X19+208]
	158 Move X0, [X8]
	159 Move W8, [X0+224]
	160 Compare W8, 0
	161 JumpIfNotEqual {163}
	162 Call 0x1C17DFC
	163 Add X0, X31, 12
	164 Move X1, X31
	165 Call Char.ToString, X0
	166 Move X1, X0
	167 Move X0, X20
	168 Move X2, X31
	169 Call String.Concat, X0, X1
	170 Move W8, 1
	171 Move [X19+208], X0
	172 Move [X19+232], W8
	173 Move X20, [X31+32]
	174 Move X19, [X31+40]
	175 Move X30, [X31+16]
	176 Move X21, [X31+24]
	177 Add X31, X31, 48
	178 Return 
	179 Move X8, [X19+248]
	180 Compare X8, 0
	181 JumpIfNotEqual {185}
	182 Move X8, [X19+256]
	183 Compare X8, 0
	184 JumpIfEqual {173}
	185 Move X9, [X8+24]
	186 Move X0, [X8+64]
	187 Move X2, [X8+40]
	188 NotImplemented "Instruction BLR not yet implemented."
	189 Call 0x1C17F20
	190 Call 0x1C17F28

Method: System.Void HandleKeyReleased(AnimalCompany.ComputerTerminalKey keyView)

Disassembly:
	0x01D586E0 MOVZ W8, 0x1
	0x01D586E4 STRB W8, [X21 + 0x7EE]
	0x01D586E8 LDR X0, [X20 + 0x10]
	0x01D586EC CBZ X0, 0x1D587B8
	0x01D586F0 ADRP X8, 0x239C000
	0x01D586F4 ADRP X21, 0x239D000
	0x01D586F8 LDR X8, [X8 + 0xEC8]
	0x01D586FC LDR X21, [X21 + 0x268]
	0x01D58700 LDR X1, [X8]
	0x01D58704 LDR X2, [X21]
	0x01D58708 BL 0x2AA5018
	0x01D5870C CBZ X0, 0x1D587B8
	0x01D58710 ADRP X8, 0x239B000
	0x01D58714 LDR X8, [X8 + 0x720]
	0x01D58718 LDR X9, [X0]
	0x01D5871C MOV X20, X0
	0x01D58720 LDR X8, [X8]
	0x01D58724 LDRB W11, [X9 + 0x130]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, X0
	004 Move X0, [X0+176]
	005 Compare X0, 0
	006 JumpIfEqual {24}
	007 Move X19, [X8+168]
	008 Move X1, X31
	009 Call Component.get_transform, X0
	010 Compare X0, 0
	011 JumpIfEqual {24}
	012 Move X1, X31
	013 Call Transform.get_position, X0
	014 Compare X19, 0
	015 JumpIfEqual {24}
	016 Move S3, 1
	017 Move W1, 1
	018 Move X0, X19
	019 Move X2, X31
	020 Move X30, [X31+16]
	021 Move X19, [X31+24]
	022 Call RandomSFX.Play, X0, X1, V0, X2
	023 Return 
	024 Call 0x1C17F20

Method: System.Void SetVersionText(System.String version)

Disassembly:
	0x01D55C3C ADRP X0, 0x239E000
	0x01D55C40 LDR X0, [X0 + 0xED0]
	0x01D55C44 BL 0x1C16CF4
	0x01D55C48 ADRP X0, 0x23A0000
	0x01D55C4C LDR X0, [X0 + 0x10]
	0x01D55C50 BL 0x1C16CF4
	0x01D55C54 ADRP X0, 0x23A0000
	0x01D55C58 LDR X0, [X0 + 0x18]
	0x01D55C5C BL 0x1C16CF4

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+80]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X3, [X8+1368]
	007 Move X2, [X8+1376]
	008 Move X30, [X31+16]
	009 CallNoReturn X3
	010 Call 0x1C17F20

Method: System.Void SetProgramOutput(AnimalCompany.ComputerTerminalView/Program program, System.String output)

Disassembly:
	0x01D5672C ADRP X0, 0x239E000
	0x01D56730 LDR X0, [X0 + 0x560]
	0x01D56734 BL 0x1C16CF4
	0x01D56738 ADRP X0, 0x239F000
	0x01D5673C LDR X0, [X0 + 0xE0]
	0x01D56740 BL 0x1C16CF4
	0x01D56744 ADRP X0, 0x239E000
	0x01D56748 LDR X0, [X0 + 0x570]
	0x01D5674C BL 0x1C16CF4
	0x01D56750 ADRP X0, 0x239F000
	0x01D56754 LDR X0, [X0 + 0xE8]
	0x01D56758 BL 0x1C16CF4
	0x01D5675C ADRP X0, 0x239F000
	0x01D56760 LDR X0, [X0 + 0xF0]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+200]
	003 Compare X8, 0
	004 JumpIfEqual {13}
	005 Move W9, [X8+24]
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Add X8, X8, W1
	008 Move W9, 1
	009 Move [X8+32], X2
	010 Move [X0+232], W9
	011 Move X30, [X31+16]
	012 Return 
	013 Call 0x1C17F20
	014 Call 0x1C17F28

Method: System.Void Update()

Disassembly:
	0x01D58728 LDRB W10, [X8 + 0x130]
	0x01D5872C CMP W11, W10
	0x01D58730 B.CC 0x1D587B8
	0x01D58734 LDR X9, [X9 + 0xC8]
	0x01D58738 ADD X9, X9, X10, 0x3, LSL
	0x01D5873C LDUR X9, [X9 - 0x8]
	0x01D58740 CMP X9, X8
	0x01D58744 B.NE 0x1D587B8
	0x01D58748 ADRP X24, 0x239C000
	0x01D5874C LDR X24, [X24 + 0xF20]
	0x01D58750 LDR X2, [X21]
	0x01D58754 ADRP X23, 0x239C000
	0x01D58758 ADRP X22, 0x239C000
	0x01D5875C LDR X1, [X24]
	0x01D58760 LDR X23, [X23 + 0xFE0]
	0x01D58764 LDR X22, [X22 + 0x250]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W8, [X0+232]
	004 Move X19, X0
	005 Compare W8, 0
	006 JumpIfEqual {13}
	007 Move X0, X19
	008 Call ComputerTerminalView.RefreshScreen, X0
	009 Move [X19+232], W31
	010 Move X30, [X31+16]
	011 Move X19, [X31+24]
	012 Return 
	013 Move X0, [X19+40]
	014 Compare X0, 0
	015 JumpIfEqual {22}
	016 Move W1, W31
	017 Move X2, X31
	018 Move X30, [X31+16]
	019 Move X19, [X31+24]
	020 Call Behaviour.set_enabled, X0, X1
	021 Return 
	022 Call 0x1C17F20

Method: System.Void RefreshScreen()

Disassembly:
	0x01D58768 MOV X0, X20
	0x01D5876C BL 0x2AA5018
	0x01D58770 LDR X21, [X24]
	0x01D58774 CBZ X0, 0x1D58784
	0x01D58778 LDR X8, [X0]
	0x01D5877C LDP X9, X1, [X8 + 0x168]
	0x01D58780 BLR X9
	0x01D58784 LDR X1, [X23]
	0x01D58788 MOV X2, X19
	0x01D5878C MOV X3, X31
	0x01D58790 BL 0x32274B8
	0x01D58794 LDR X3, [X22]
	0x01D58798 MOV X2, X0
	0x01D5879C MOV X0, X20
	0x01D587A0 MOV X1, X21
	0x01D587A4 LDP X20, X19, [X31 + 0x30]
	0x01D587A8 LDP X22, X21, [X31 + 0x20]
	0x01D587AC LDP X24, X23, [X31 + 0x10]
	0x01D587B0 LDR X30, [X31], #0x40
	0x01D587B4 B 0x2AA5084
	0x01D587B8 BL 0x1C16F20
	0x01D587BC SUB X31, X31, 0x40
	0x01D587C0 STP X30, X23, [X31 + 0x10]
	0x01D587C4 STP X22, X21, [X31 + 0x20]
	0x01D587C8 STP X20, X19, [X31 + 0x30]
	0x01D587CC ADRP X21, 0x2680000
	0x01D587D0 LDRB W8, [X21 + 0x7EF]
	0x01D587D4 MOV X20, X1
	0x01D587D8 MOV X19, X0
	0x01D587DC TBNZ X8, 0x0, 0x1D58818
	0x01D587E0 ADRP X0, 0x239D000
	0x01D587E4 LDR X0, [X0 + 0x270]
	0x01D587E8 BL 0x1C16CF4
	0x01D587EC ADRP X0, 0x239D000
	0x01D587F0 LDR X0, [X0 + 0x268]
	0x01D587F4 BL 0x1C16CF4
	0x01D587F8 ADRP X0, 0x239B000
	0x01D587FC LDR X0, [X0 + 0x720]
	0x01D58800 BL 0x1C16CF4
	0x01D58804 ADRP X0, 0x239C000
	0x01D58808 LDR X0, [X0 + 0xEC8]
	0x01D5880C BL 0x1C16CF4
	0x01D58810 MOVZ W8, 0x1
	0x01D58814 STRB W8, [X21 + 0x7EF]
	0x01D58818 STR X31, [X31 + 0x8]
	0x01D5881C CBZ X20, 0x1D58944
	0x01D58820 MOVZ W1, 0x2F
	0x01D58824 MOVZ W2, 0x1
	0x01D58828 MOV X0, X20
	0x01D5882C MOV X3, X31
	0x01D58830 BL 0x3229AE8
	0x01D58834 LDR X8, [X19 + 0x10]
	0x01D58838 CBZ X8, 0x1D58944
	0x01D5883C ADRP X9, 0x239C000
	0x01D58840 ADRP X10, 0x239D000
	0x01D58844 LDR X9, [X9 + 0xEC8]
	0x01D58848 LDR X10, [X10 + 0x268]
	0x01D5884C ADRP X20, 0x239B000
	0x01D58850 MOV X19, X0
	0x01D58854 LDR X1, [X9]
	0x01D58858 LDR X2, [X10]
	0x01D5885C LDR X20, [X20 + 0x720]
	0x01D58860 MOV X0, X8
	0x01D58864 BL 0x2AA5018
	0x01D58868 CBZ X0, 0x1D588A0
	0x01D5886C LDR X9, [X0]
	0x01D58870 LDR X8, [X20]
	0x01D58874 LDRB W11, [X9 + 0x130]
	0x01D58878 LDRB W10, [X8 + 0x130]
	0x01D5887C CMP W11, W10
	0x01D58880 B.CS 0x1D5888C
	0x01D58884 MOV X0, X31
	0x01D58888 B 0x1D588A0
	0x01D5888C LDR X9, [X9 + 0xC8]
	0x01D58890 ADD X9, X9, X10, 0x3, LSL
	0x01D58894 LDUR X9, [X9 - 0x8]
	0x01D58898 CMP X9, X8
	0x01D5889C CSEL X0, X0, X31, EQ
	0x01D588A0 CBZ X19, 0x1D58944
	0x01D588A4 LDR X8, [X19 + 0x18]
	0x01D588A8 CMP W8, 0x1
	0x01D588AC B.LT 0x1D58930
	0x01D588B0 ADRP X22, 0x239D000
	0x01D588B4 LDR X22, [X22 + 0x270]
	0x01D588B8 MOV X21, X31
	0x01D588BC AND X8, X8, 0x0
	0x01D588C0 ADD X23, X19, 0x20
	0x01D588C4 CMP X21, W8, UXTW
	0x01D588C8 B.CS 0x1D58948
	0x01D588CC CBZ X0, 0x1D58944
	0x01D588D0 LDR X1, [X23, X21, LSL #3]
	0x01D588D4 LDR X3, [X22]
	0x01D588D8 ADD X2, X31, 0x8
	0x01D588DC BL 0x2AA6B2C
	0x01D588E0 TBZ X0, 0x0, 0x1D5892C
	0x01D588E4 LDR X0, [X31 + 0x8]
	0x01D588E8 CBZ X0, 0x1D58930
	0x01D588EC LDR X9, [X0]
	0x01D588F0 LDR X8, [X20]
	0x01D588F4 LDRB W11, [X9 + 0x130]
	0x01D588F8 LDRB W10, [X8 + 0x130]
	0x01D588FC CMP W11, W10
	0x01D58900 B.CC 0x1D5892C
	0x01D58904 LDR X9, [X9 + 0xC8]
	0x01D58908 ADD X9, X9, X10, 0x3, LSL
	0x01D5890C LDUR X9, [X9 - 0x8]
	0x01D58910 CMP X9, X8
	0x01D58914 B.NE 0x1D5892C
	0x01D58918 LDR W8, [X19 + 0x18]
	0x01D5891C ADD X21, X21, 0x1
	0x01D58920 CMP X21, W8, SXTW
	0x01D58924 B.LT 0x1D588C4
	0x01D58928 B 0x1D58930
	0x01D5892C MOV X0, X31
	0x01D58930 LDP X20, X19, [X31 + 0x30]
	0x01D58934 LDP X22, X21, [X31 + 0x20]
	0x01D58938 LDP X30, X23, [X31 + 0x10]
	0x01D5893C ADD X31, X31, 0x40
	0x01D58940 RET
	0x01D58944 BL 0x1C16F20
	0x01D58948 BL 0x1C16F28
	0x01D5894C SUB X31, X31, 0x40
	0x01D58950 STP X30, X23, [X31 + 0x10]
	0x01D58954 STP X22, X21, [X31 + 0x20]
	0x01D58958 STP X20, X19, [X31 + 0x30]
	0x01D5895C ADRP X21, 0x2680000
	0x01D58960 LDRB W8, [X21 + 0x7F0]
	0x01D58964 MOV X20, X1
	0x01D58968 MOV X19, X0
	0x01D5896C TBNZ X8, 0x0, 0x1D589B4
	0x01D58970 ADRP X0, 0x239D000
	0x01D58974 LDR X0, [X0 + 0x270]
	0x01D58978 BL 0x1C16CF4
	0x01D5897C ADRP X0, 0x239D000
	0x01D58980 LDR X0, [X0 + 0x268]
	0x01D58984 BL 0x1C16CF4
	0x01D58988 ADRP X0, 0x239B000
	0x01D5898C LDR X0, [X0 + 0x720]
	0x01D58990 BL 0x1C16CF4
	0x01D58994 ADRP X0, 0x239D000
	0x01D58998 LDR X0, [X0 + 0x278]
	0x01D5899C BL 0x1C16CF4
	0x01D589A0 ADRP X0, 0x239C000
	0x01D589A4 LDR X0, [X0 + 0xEC8]
	0x01D589A8 BL 0x1C16CF4
	0x01D589AC MOVZ W8, 0x1
	0x01D589B0 STRB W8, [X21 + 0x7F0]
	0x01D589B4 STP X31, X31, [X31]
	0x01D589B8 CBZ X20, 0x1D58B38
	0x01D589BC MOVZ W1, 0x2F
	0x01D589C0 MOVZ W2, 0x1
	0x01D589C4 MOV X0, X20
	0x01D589C8 MOV X3, X31
	0x01D589CC BL 0x3229AE8
	0x01D589D0 LDR X8, [X19 + 0x10]
	0x01D589D4 CBZ X8, 0x1D58B38
	0x01D589D8 ADRP X9, 0x239C000
	0x01D589DC ADRP X10, 0x239D000
	0x01D589E0 LDR X9, [X9 + 0xEC8]
	0x01D589E4 LDR X10, [X10 + 0x268]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2681000
	005 Move W8, [X20+2025]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {43}
	011 Move X0, 0x239E000
	012 Move X0, [X0+392]
	013 Call 0x1C17CF4
	014 Move X0, 0x239D000
	015 Move X0, [X0+4072]
	016 Call 0x1C17CF4
	017 Move X0, 0x239E000
	018 Move X0, [X0+400]
	019 Call 0x1C17CF4
	020 Move X0, 0x239E000
	021 Move X0, [X0+408]
	022 Call 0x1C17CF4
	023 Move X0, 0x239E000
	024 Move X0, [X0+416]
	025 Call 0x1C17CF4
	026 Move X0, 0x239E000
	027 Move X0, [X0+424]
	028 Call 0x1C17CF4
	029 Move X0, 0x239E000
	030 Move X0, [X0+432]
	031 Call 0x1C17CF4
	032 Move X0, 0x239E000
	033 Move X0, [X0+440]
	034 Call 0x1C17CF4
	035 Move X0, 0x239E000
	036 Move X0, [X0+448]
	037 Call 0x1C17CF4
	038 Move X0, 0x239E000
	039 Move X0, [X0+456]
	040 Call 0x1C17CF4
	041 Move W8, 1
	042 Move [X20+2025], W8
	043 Move X0, [X19+40]
	044 Compare X0, 0
	045 JumpIfEqual {175}
	046 Move W1, 1
	047 Move X2, X31
	048 Call Behaviour.set_enabled, X0, X1
	049 Move X0, [X19+224]
	050 Compare X0, 0
	051 JumpIfEqual {175}
	052 Move X1, X31
	053 Call StringBuilder.Clear, X0
	054 Move X0, [X19+224]
	055 Compare X0, 0
	056 JumpIfEqual {175}
	057 Move W8, [X19+192]
	058 Move X9, 0x239E000
	059 Move X10, 0x239E000
	060 Move X9, [X9+456]
	061 Move X10, [X10+408]
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move X2, X31
	064 NotImplemented "Instruction CSEL not yet implemented."
	065 Move X1, [X8]
	066 Call StringBuilder.Append, X0, X1
	067 Move X0, [X19+224]
	068 Compare X0, 0
	069 JumpIfEqual {175}
	070 Move X20, 0x239E000
	071 Move X20, [X20+416]
	072 Move X2, X31
	073 Move X1, [X20]
	074 Call StringBuilder.Append, X0, X1
	075 Move X0, [X19+224]
	076 Compare X0, 0
	077 JumpIfEqual {175}
	078 Move W8, [X19+192]
	079 Move X9, 0x239E000
	080 Move X10, 0x239E000
	081 Move X9, [X9+400]
	082 Move X10, [X10+448]
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Move X2, X31
	085 NotImplemented "Instruction CSEL not yet implemented."
	086 Move X1, [X8]
	087 Call StringBuilder.Append, X0, X1
	088 Move X0, [X19+224]
	089 Compare X0, 0
	090 JumpIfEqual {175}
	091 Move X1, [X20]
	092 Move X2, X31
	093 Call StringBuilder.Append, X0, X1
	094 Move X0, [X19+224]
	095 Compare X0, 0
	096 JumpIfEqual {175}
	097 Move W8, [X19+192]
	098 Move X9, 0x239E000
	099 Move X10, 0x239E000
	100 Move X9, [X9+424]
	101 Move X10, [X10+392]
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Move X2, X31
	104 NotImplemented "Instruction CSEL not yet implemented."
	105 Move X1, [X8]
	106 Call StringBuilder.Append, X0, X1
	107 Move X0, [X19+224]
	108 Compare X0, 0
	109 JumpIfEqual {175}
	110 Move X8, [X0]
	111 Move X20, [X19+88]
	112 Move X9, [X8+360]
	113 Move X1, [X8+368]
	114 NotImplemented "Instruction BLR not yet implemented."
	115 Compare X20, 0
	116 JumpIfEqual {175}
	117 Move X8, [X20]
	118 Move X1, X0
	119 Move X0, X20
	120 Move X9, [X8+1368]
	121 Move X2, [X8+1376]
	122 NotImplemented "Instruction BLR not yet implemented."
	123 Move X8, [X19+200]
	124 Compare X8, 0
	125 JumpIfEqual {175}
	126 NotImplemented "Instruction LDRSW not yet implemented."
	127 Move W10, [X8+24]
	128 NotImplemented "Instruction CMP not yet implemented."
	129 Move X0, [X19+96]
	130 Compare X0, 0
	131 JumpIfEqual {175}
	132 Move X10, [X0]
	133 Add X8, X8, X9
	134 Move X1, [X8+32]
	135 Move X8, [X10+1368]
	136 Move X2, [X10+1376]
	137 NotImplemented "Instruction BLR not yet implemented."
	138 Move W8, [X19+192]
	139 NotImplemented "Instruction CMP not yet implemented."
	140 NotImplemented "Instruction CMP not yet implemented."
	141 Compare W8, 0
	142 JumpIfNotEqual {166}
	143 Move X8, 0x239E000
	144 Move X20, [X19+104]
	145 Move X1, [X19+208]
	146 Move X8, [X8+432]
	147 Move X8, 0x239D000
	148 Move X20, [X19+104]
	149 Move X1, [X19+208]
	150 Move X8, [X8+4072]
	151 Move X8, 0x239E000
	152 Move X20, [X19+104]
	153 Move X1, [X19+208]
	154 Move X8, [X8+440]
	155 Move X0, [X8]
	156 Move X2, X31
	157 Call String.Concat, X0, X1
	158 Compare X20, 0
	159 JumpIfEqual {175}
	160 Move X8, [X20]
	161 Move X1, X0
	162 Move X0, X20
	163 Move X9, [X8+1368]
	164 Move X2, [X8+1376]
	165 NotImplemented "Instruction BLR not yet implemented."
	166 Move X0, [X19+72]
	167 Compare X0, 0
	168 JumpIfEqual {175}
	169 Move X20, [X31+16]
	170 Move X19, [X31+24]
	171 Move X1, X31
	172 Move X30, [X31+32]
	173 Call Camera.Render, X0
	174 Return 
	175 Call 0x1C17F20
	176 Call 0x1C17F28

Method: System.Void .ctor()

Disassembly:
	0x01D589E8 ADRP X20, 0x239B000
	0x01D589EC MOV X19, X0
	0x01D589F0 LDR X1, [X9]
	0x01D589F4 LDR X2, [X10]
	0x01D589F8 LDR X20, [X20 + 0x720]
	0x01D589FC MOV X0, X8
	0x01D58A00 BL 0x2AA5018
	0x01D58A04 CBZ X0, 0x1D58A3C
	0x01D58A08 LDR X9, [X0]
	0x01D58A0C LDR X8, [X20]
	0x01D58A10 LDRB W11, [X9 + 0x130]
	0x01D58A14 LDRB W10, [X8 + 0x130]
	0x01D58A18 CMP W11, W10
	0x01D58A1C B.CS 0x1D58A28
	0x01D58A20 MOV X0, X31
	0x01D58A24 B 0x1D58A3C
	0x01D58A28 LDR X9, [X9 + 0xC8]
	0x01D58A2C ADD X9, X9, X10, 0x3, LSL
	0x01D58A30 LDUR X9, [X9 - 0x8]
	0x01D58A34 CMP X9, X8
	0x01D58A38 CSEL X0, X0, X31, EQ
	0x01D58A3C CBZ X19, 0x1D58B38
	0x01D58A40 LDR W8, [X19 + 0x18]
	0x01D58A44 ADRP X21, 0x239D000
	0x01D58A48 LDR X21, [X21 + 0x270]
	0x01D58A4C MOV X9, INVALID
	0x01D58A50 ADD X9, X9, X8, 0x20, LSL
	0x01D58A54 CMP X9, 0x1
	0x01D58A58 B.LT 0x1D58AD8
	0x01D58A5C MOV X22, X31
	0x01D58A60 ADD X23, X19, 0x20
	0x01D58A64 CMP X22, W8, UXTW
	0x01D58A68 B.CS 0x1D58B3C
	0x01D58A6C CBZ X0, 0x1D58B38
	0x01D58A70 LDR X1, [X23, X22, LSL #3]
	0x01D58A74 LDR X3, [X21]
	0x01D58A78 ADD X2, X31, 0x0
	0x01D58A7C BL 0x2AA6B2C
	0x01D58A80 TBZ X0, 0x0, 0x1D58B20
	0x01D58A84 LDR X0, [X31]
	0x01D58A88 CBZ X0, 0x1D58B24
	0x01D58A8C LDR X9, [X0]
	0x01D58A90 LDR X8, [X20]
	0x01D58A94 LDRB W11, [X9 + 0x130]
	0x01D58A98 LDRB W10, [X8 + 0x130]
	0x01D58A9C CMP W11, W10
	0x01D58AA0 B.CC 0x1D58B20
	0x01D58AA4 LDR X9, [X9 + 0xC8]
	0x01D58AA8 ADD X9, X9, X10, 0x3, LSL
	0x01D58AAC LDUR X9, [X9 - 0x8]
	0x01D58AB0 CMP X9, X8
	0x01D58AB4 B.NE 0x1D58B20
	0x01D58AB8 LDR X8, [X19 + 0x18]
	0x01D58ABC ADD X22, X22, 0x1
	0x01D58AC0 SUB W9, W8, 0x1
	0x01D58AC4 CMP X22, W9, SXTW
	0x01D58AC8 AND X8, X8, 0x0
	0x01D58ACC B.LT 0x1D58A64
	0x01D58AD0 SXTW X9, W9
	0x01D58AD4 B 0x1D58ADC
	0x01D58AD8 SBFM X9, X9, 0x20, 0x3F
	0x01D58ADC CBZ W8, 0x1D58B3C
	0x01D58AE0 CBZ X0, 0x1D58B38
	0x01D58AE4 ADD X8, X19, X9, 0x3, LSL
	0x01D58AE8 LDR X1, [X8 + 0x20]
	0x01D58AEC LDR X3, [X21]
	0x01D58AF0 ADD X2, X31, 0x8
	0x01D58AF4 BL 0x2AA6B2C
	0x01D58AF8 TBZ X0, 0x0, 0x1D58B20
	0x01D58AFC LDR X8, [X31 + 0x8]
	0x01D58B00 CBZ X8, 0x1D58B20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x2681000
	008 Move W8, [X20+2026]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0x239C000
	015 Move X0, [X0+2288]
	016 Call 0x1C17CF4
	017 Move X0, 0x239C000
	018 Move X0, [X0+2760]
	019 Call 0x1C17CF4
	020 Move X0, 0x239C000
	021 Move X0, [X0+2440]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+2026], W8
	025 Move W9, 0x3333
	026 Move W8, 256
	027 NotImplemented "Instruction MOVK not yet implemented."
	028 Move W10, 0x3E800000
	029 Move [X19+48], W8
	030 Move [X19+64], W9
	031 Move [X19+112], W10
	032 Move X23, 0x2681000
	033 Move X22, 0x239C000
	034 Move X21, 0x239C000
	035 Move X20, 0x239C000
	036 Move W8, [X23+1923]
	037 Move X22, [X22+2760]
	038 Move X21, [X21+2440]
	039 Move X20, [X20+2288]
	040 Compare W8, 0
	041 JumpIfNotEqual {47}
	042 Move X0, 0x239C000
	043 Move X0, [X0+1440]
	044 Call 0x1C17CF4
	045 Move W8, 1
	046 Move [X23+1923], W8
	047 Move X8, 0x239C000
	048 Move X8, [X8+1440]
	049 Move W1, 3
	050 Move X8, [X8]
	051 Move X9, [X8+184]
	052 Move V0, [X9]
	053 Move V1, [X9+8]
	054 Move [X19+136], D0
	055 Move [X19+144], S1
	056 Move X8, [X8+184]
	057 Move V0, [X8]
	058 Move V1, [X8+8]
	059 Move [X19+148], D0
	060 Move [X19+156], S1
	061 Move X0, [X22]
	062 Call 0x1C17D6C
	063 Move X8, [X21]
	064 Move [X19+200], X0
	065 Move [X19+208], X8
	066 Move X0, [X20]
	067 Call 0x1C17F10
	068 Move X1, X31
	069 Move X20, X0
	070 Call StringBuilder..ctor, X0
	071 Move W8, 1
	072 Move [X19+224], X20
	073 Move [X19+232], W8
	074 Move X0, X19
	075 Move X20, [X31+32]
	076 Move X19, [X31+40]
	077 Move X22, [X31+16]
	078 Move X21, [X31+24]
	079 Move X1, X31
	080 Move X30, [X31+48]
	081 Move X23, [X31+56]
	082 Call MonoBehaviour..ctor, X0
	083 Return 

Method: System.Void .cctor()

Disassembly:
	0x01D58B04 ADRP X9, 0x239D000
	0x01D58B08 LDR X9, [X9 + 0x278]
	0x01D58B0C LDR X10, [X8]
	0x01D58B10 LDR X9, [X9]
	0x01D58B14 CMP X10, X9
	0x01D58B18 CSEL X0, X8, X31, EQ
	0x01D58B1C B 0x1D58B24
	0x01D58B20 MOV X0, X31
	0x01D58B24 LDP X20, X19, [X31 + 0x30]
	0x01D58B28 LDP X22, X21, [X31 + 0x20]
	0x01D58B2C LDP X30, X23, [X31 + 0x10]
	0x01D58B30 ADD X31, X31, 0x40
	0x01D58B34 RET
	0x01D58B38 BL 0x1C16F20
	0x01D58B3C BL 0x1C16F28
	0x01D58B40 SUB X31, X31, 0x60
	0x01D58B44 STR X30, [X31 + 0x10]
	0x01D58B48 STP X26, X25, [X31 + 0x20]
	0x01D58B4C STP X24, X23, [X31 + 0x30]
	0x01D58B50 STP X22, X21, [X31 + 0x40]
	0x01D58B54 STP X20, X19, [X31 + 0x50]
	0x01D58B58 ADRP X22, 0x2680000
	0x01D58B5C LDRB W8, [X22 + 0x7F1]
	0x01D58B60 MOV X19, X2
	0x01D58B64 MOV X21, X1
	0x01D58B68 MOV X20, X0
	0x01D58B6C TBNZ X8, 0x0, 0x1D58BD8
	0x01D58B70 ADRP X0, 0x239D000
	0x01D58B74 LDR X0, [X0 + 0x270]
	0x01D58B78 BL 0x1C16CF4
	0x01D58B7C ADRP X0, 0x239D000
	0x01D58B80 LDR X0, [X0 + 0x268]
	0x01D58B84 BL 0x1C16CF4
	0x01D58B88 ADRP X0, 0x239C000
	0x01D58B8C LDR X0, [X0 + 0x250]
	0x01D58B90 BL 0x1C16CF4
	0x01D58B94 ADRP X0, 0x239B000
	0x01D58B98 LDR X0, [X0 + 0x720]
	0x01D58B9C BL 0x1C16CF4
	0x01D58BA0 ADRP X0, 0x239D000
	0x01D58BA4 LDR X0, [X0 + 0x278]
	0x01D58BA8 BL 0x1C16CF4
	0x01D58BAC ADRP X0, 0x239D000
	0x01D58BB0 LDR X0, [X0 + 0x280]
	0x01D58BB4 BL 0x1C16CF4
	0x01D58BB8 ADRP X0, 0x239D000
	0x01D58BBC LDR X0, [X0 + 0x210]
	0x01D58BC0 BL 0x1C16CF4
	0x01D58BC4 ADRP X0, 0x239C000
	0x01D58BC8 LDR X0, [X0 + 0xEC8]
	0x01D58BCC BL 0x1C16CF4
	0x01D58BD0 MOVZ W8, 0x1
	0x01D58BD4 STRB W8, [X22 + 0x7F1]
	0x01D58BD8 STR X31, [X31 + 0x18]
	0x01D58BDC STR X31, [X31 + 0x8]
	0x01D58BE0 CBZ X21, 0x1D58DBC
	0x01D58BE4 MOVZ W1, 0x2F
	0x01D58BE8 MOV X0, X21
	0x01D58BEC MOV W2, W31
	0x01D58BF0 MOV X3, X31
	0x01D58BF4 BL 0x3229AE8
	0x01D58BF8 LDR X8, [X20 + 0x10]
	0x01D58BFC CBZ X8, 0x1D58DBC
	0x01D58C00 ADRP X9, 0x239C000
	0x01D58C04 ADRP X10, 0x239D000
	0x01D58C08 LDR X9, [X9 + 0xEC8]
	0x01D58C0C LDR X10, [X10 + 0x268]
	0x01D58C10 ADRP X22, 0x239B000
	0x01D58C14 MOV X20, X0
	0x01D58C18 LDR X1, [X9]
	0x01D58C1C LDR X2, [X10]
	0x01D58C20 LDR X22, [X22 + 0x720]
	0x01D58C24 MOV X0, X8
	0x01D58C28 BL 0x2AA5018
	0x01D58C2C CBZ X0, 0x1D58C48
	0x01D58C30 LDR X9, [X0]
	0x01D58C34 LDR X8, [X22]
	0x01D58C38 LDRB W11, [X9 + 0x130]
	0x01D58C3C LDRB W10, [X8 + 0x130]
	0x01D58C40 CMP W11, W10
	0x01D58C44 B.CS 0x1D58C54
	0x01D58C48 MOV X21, X31
	0x01D58C4C CBNZ X20, 0x1D58C6C
	0x01D58C50 B 0x1D58DBC
	0x01D58C54 LDR X9, [X9 + 0xC8]
	0x01D58C58 ADD X9, X9, X10, 0x3, LSL
	0x01D58C5C LDUR X9, [X9 - 0x8]
	0x01D58C60 CMP X9, X8
	0x01D58C64 CSEL X21, X0, X31, EQ
	0x01D58C68 CBZ X20, 0x1D58DBC
	0x01D58C6C LDR W8, [X20 + 0x18]
	0x01D58C70 ADRP X23, 0x239D000
	0x01D58C74 LDR X23, [X23 + 0x270]
	0x01D58C78 MOV X9, INVALID
	0x01D58C7C ADD X9, X9, X8, 0x20, LSL
	0x01D58C80 CMP X9, 0x1
	0x01D58C84 B.LT 0x1D58D10
	0x01D58C88 ADRP X24, 0x239D000
	0x01D58C8C LDR X24, [X24 + 0x210]
	0x01D58C90 MOV X25, X31
	0x01D58C94 ADD X26, X20, 0x20
	0x01D58C98 CMP X25, W8, UXTW
	0x01D58C9C B.CS 0x1D58DC0
	0x01D58CA0 CBZ X21, 0x1D58DBC
	0x01D58CA4 LDR X1, [X26, X25, LSL #3]
	0x01D58CA8 LDR X3, [X23]
	0x01D58CAC ADD X2, X31, 0x8
	0x01D58CB0 MOV X0, X21
	0x01D58CB4 BL 0x2AA6B2C
	0x01D58CB8 TBZ X0, 0x0, 0x1D58D60
	0x01D58CBC LDR X21, [X31 + 0x8]
	0x01D58CC0 CBZ X21, 0x1D58D60
	0x01D58CC4 LDR X9, [X21]
	0x01D58CC8 LDR X8, [X22]
	0x01D58CCC LDRB W11, [X9 + 0x130]
	0x01D58CD0 LDRB W10, [X8 + 0x130]
	0x01D58CD4 CMP W11, W10
	0x01D58CD8 B.CC 0x1D58D60
	0x01D58CDC LDR X9, [X9 + 0xC8]
	0x01D58CE0 ADD X9, X9, X10, 0x3, LSL
	0x01D58CE4 LDUR X9, [X9 - 0x8]
	0x01D58CE8 CMP X9, X8
	0x01D58CEC B.NE 0x1D58D60
	0x01D58CF0 LDR X8, [X20 + 0x18]
	0x01D58CF4 ADD X25, X25, 0x1
	0x01D58CF8 SUB W9, W8, 0x1
	0x01D58CFC CMP X25, W9, SXTW
	0x01D58D00 AND X8, X8, 0x0
	0x01D58D04 B.LT 0x1D58C98
	0x01D58D08 SXTW X9, W9
	0x01D58D0C B 0x1D58D14
	0x01D58D10 SBFM X9, X9, 0x20, 0x3F
	0x01D58D14 CBZ W8, 0x1D58DC0
	0x01D58D18 CBZ X21, 0x1D58DBC
	0x01D58D1C ADD X8, X20, X9, 0x3, LSL
	0x01D58D20 LDR X1, [X8 + 0x20]
	0x01D58D24 LDR X3, [X23]
	0x01D58D28 ADD X2, X31, 0x18
	0x01D58D2C MOV X0, X21
	0x01D58D30 BL 0x2AA6B2C
	0x01D58D34 TBZ X0, 0x0, 0x1D58D58
	0x01D58D38 LDR X8, [X31 + 0x18]
	0x01D58D3C CBZ X8, 0x1D58D58
	0x01D58D40 ADRP X9, 0x239D000
	0x01D58D44 LDR X9, [X9 + 0x278]
	0x01D58D48 LDR X8, [X8]
	0x01D58D4C LDR X9, [X9]
	0x01D58D50 CMP X8, X9
	0x01D58D54 B.EQ 0x1D58D80
	0x01D58D58 ADRP X24, 0x239D000
	0x01D58D5C LDR X24, [X24 + 0x210]
	0x01D58D60 LDR X0, [X24]
	0x01D58D64 LDP X20, X19, [X31 + 0x50]
	0x01D58D68 LDP X22, X21, [X31 + 0x40]
	0x01D58D6C LDP X24, X23, [X31 + 0x30]
	0x01D58D70 LDP X26, X25, [X31 + 0x20]
	0x01D58D74 LDR X30, [X31 + 0x10]
	0x01D58D78 ADD X31, X31, 0x60
	0x01D58D7C RET
	0x01D58D80 LDR X8, [X20 + 0x18]
	0x01D58D84 CBZ W8, 0x1D58DC0
	0x01D58D88 ADRP X10, 0x239C000
	0x01D58D8C LDR X10, [X10 + 0x250]
	0x01D58D90 MOV X9, INVALID
	0x01D58D94 ADD X8, X9, X8, 0x20, LSL
	0x01D58D98 ADD X8, X20, X8, 0x1D, ASR
	0x01D58D9C LDR X1, [X8 + 0x20]
	0x01D58DA0 LDR X3, [X10]
	0x01D58DA4 MOV X0, X21
	0x01D58DA8 MOV X2, X19
	0x01D58DAC BL 0x2AA5084
	0x01D58DB0 ADRP X24, 0x239D000
	0x01D58DB4 LDR X24, [X24 + 0x280]
	0x01D58DB8 B 0x1D58D60
	0x01D58DBC BL 0x1C16F20
	0x01D58DC0 BL 0x1C16F28
	0x01D58DC4 STR X30, [X31 - 0x20]!
	0x01D58DC8 STP X20, X19, [X31 + 0x10]
	0x01D58DCC MOV X19, X1
	0x01D58DD0 MOV X1, X31
	0x01D58DD4 MOV X20, X0
	0x01D58DD8 BL 0x1D36B98
	0x01D58DDC STR X19, [X20 + 0x18]
	0x01D58DE0 LDP X20, X19, [X31 + 0x10]
	0x01D58DE4 LDR X30, [X31], #0x20
	0x01D58DE8 RET
	0x01D58DEC STP X30, X21, [X31 - 0x20]!
	0x01D58DF0 STP X20, X19, [X31 + 0x10]
	0x01D58DF4 ADRP X21, 0x2680000
	0x01D58DF8 ADRP X20, 0x239B000
	0x01D58DFC LDRB W8, [X21 + 0x7FA]
	0x01D58E00 LDR X20, [X20 + 0x648]
	0x01D58E04 MOV X19, X0
	0x01D58E08 TBNZ X8, 0x0, 0x1D58E20
	0x01D58E0C ADRP X0, 0x239B000
	0x01D58E10 LDR X0, [X0 + 0x648]
	0x01D58E14 BL 0x1C16CF4
	0x01D58E18 MOVZ W8, 0x1
	0x01D58E1C STRB W8, [X21 + 0x7FA]
	0x01D58E20 LDR X0, [X20]
	0x01D58E24 LDR W8, [X0 + 0xE0]
	0x01D58E28 CBNZ W8, 0x1D58E30
	0x01D58E2C BL 0x1C16DFC
	0x01D58E30 ADRP X21, 0x2680000
	0x01D58E34 LDRB W8, [X21 + 0x787]
	0x01D58E38 CBNZ W8, 0x1D58E50
	0x01D58E3C ADRP X0, 0x239B000
	0x01D58E40 LDR X0, [X0 + 0x648]
	0x01D58E44 BL 0x1C16CF4
	0x01D58E48 MOVZ W8, 0x1
	0x01D58E4C STRB W8, [X21 + 0x787]
	0x01D58E50 LDR X0, [X20]
	0x01D58E54 LDR W8, [X0 + 0xE0]
	0x01D58E58 CBNZ W8, 0x1D58E64
	0x01D58E5C BL 0x1C16DFC
	0x01D58E60 LDR X0, [X20]
	0x01D58E64 LDR X8, [X0 + 0xB8]
	0x01D58E68 LDR X8, [X8]
	0x01D58E6C CBZ X8, 0x1D58E90
	0x01D58E70 LDR X8, [X8 + 0xB8]
	0x01D58E74 CBZ X8, 0x1D58E90
	0x01D58E78 LDR X0, [X8 + 0x88]
	0x01D58E7C CBZ X0, 0x1D58E90
	0x01D58E80 LDR X1, [X19 + 0x18]
	0x01D58E84 LDP X20, X19, [X31 + 0x10]
	0x01D58E88 LDP X30, X21, [X31], #0x20
	0x01D58E8C B 0x1D4E834
	0x01D58E90 BL 0x1C16F20
	0x01D58E94 STP X30, X21, [X31 - 0x20]!
	0x01D58E98 STP X20, X19, [X31 + 0x10]
	0x01D58E9C MOV W20, W1
	0x01D58EA0 MOV X1, X31
	0x01D58EA4 MOV W19, W2
	0x01D58EA8 MOV X21, X0
	0x01D58EAC BL 0x1D36B98
	0x01D58EB0 STP W20, W19, [X21 + 0x14]
	0x01D58EB4 LDP X20, X19, [X31 + 0x10]
	0x01D58EB8 LDP X30, X21, [X31], #0x20
	0x01D58EBC RET
	0x01D58EC0 STP X30, X21, [X31 - 0x20]!

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x2681000
	006 Move X21, 0x239E000
	007 Move X19, 0x239E000
	008 Move W8, [X20+2027]
	009 Move X21, [X21+464]
	010 Move X19, [X19+472]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {29}
	015 Move X0, 0x239E000
	016 Move X0, [X0+376]
	017 Call 0x1C17CF4
	018 Move X0, 0x239E000
	019 Move X0, [X0+480]
	020 Call 0x1C17CF4
	021 Move X0, 0x239E000
	022 Move X0, [X0+472]
	023 Call 0x1C17CF4
	024 Move X0, 0x239E000
	025 Move X0, [X0+464]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X20+2027], W8
	029 Move X0, [X21]
	030 Call 0x1C17F10
	031 Move X1, [X19]
	032 Move X19, X0
	033 Call Dictionary`2<Int32Enum, Char>..ctor, X0
	034 Compare X19, 0
	035 JumpIfEqual {248}
	036 Move X21, 0x239E000
	037 Move X21, [X21+480]
	038 Move X20, 0x239E000
	039 Move W1, 48
	040 Move W2, 48
	041 Move X3, [X21]
	042 Move X20, [X20+376]
	043 Move X0, X19
	044 Call Dictionary`2<Int32Enum, Char>.Add, X0, X1, X2
	045 Move X3, [X21]
	046 Move W1, 49
	047 Move W2, 49
	048 Move X0, X19
	049 Call Dictionary`2<Int32Enum, Char>.Add, X0, X1, X2
	050 Move X3, [X21]
	051 Move W1, 50
	052 Move W2, 50
	053 Move X0, X19
	054 Call Dictionary`2<Int32Enum, Char>.Add, X0, X1, X2
	055 Move X3, [X21]
	056 Move W1, 51
	057 Move W2, 51
	058 Move X0, X19
	059 Call Dictionary`2<Int32Enum, Char>.Add, X0, X1, X2
	060 Move X3, [X21]
	061 Move W1, 52
	062 Move W2, 52
	063 Move X0, X19
	064 Call Dictionary`2<Int32Enum, Char>.Add, X0, X1, X2
	065 Move X3, [X21]
	066 Move W1, 53
	067 Move W2, 53
	068 Move X0, X19
	069 Call Dictionary`2<Int32Enum, Char>.Add, X0, X1, X2
	070 Move X3, [X21]
	071 Move W1, 54
	072 Move W2, 54
	073 Move X0, X19
	074 Call Dictionary`2<Int32Enum, Char>.Add, X0, X1, X2
	075 Move X3, [X21]
	076 Move W1, 55
	077 Move W2, 55
	078 Move X0, X19
	079 Call Dictionary`2<Int32Enum, Char>.Add, X0, X1, X2
	080 Move X3, [X21]
	081 Move W1, 56
	082 Move W2, 56
	083 Move X0, X19
	084 Call Dictionary`2<Int32Enum, Char>.Add, X0, X1, X2
	085 Move X3, [X21]
	086 Move W1, 57
	087 Move W2, 57
	088 Move X0, X19
	089 Call Dictionary`2<Int32Enum, Char>.Add, X0, X1, X2
	090 Move X3, [X21]
	091 Move W1, 97
	092 Move W2, 65
	093 Move X0, X19
	094 Call Dictionary`2<Int32Enum, Char>.Add, X0, X1, X2
	095 Move X3, [X21]
	096 Move W1, 98
	097 Move W2, 66
	098 Move X0, X19
	099 Call Dictionary`2<Int32Enum, Char>.Add, X0, X1, X2
	100 Move X3, [X21]
	101 Move W1, 99
	102 Move W2, 67
	103 Move X0, X19
	104 Call Dictionary`2<Int32Enum, Char>.Add, X0, X1, X2
	105 Move X3, [X21]
	106 Move W1, 100
	107 Move W2, 68
	108 Move X0, X19
	109 Call Dictionary`2<Int32Enum, Char>.Add, X0, X1, X2
	110 Move X3, [X21]
	111 Move W1, 101
	112 Move W2, 69
	113 Move X0, X19
	114 Call Dictionary`2<Int32Enum, Char>.Add, X0, X1, X2
	115 Move X3, [X21]
	116 Move W1, 102
	117 Move W2, 70
	118 Move X0, X19
	119 Call Dictionary`2<Int32Enum, Char>.Add, X0, X1, X2
	120 Move X3, [X21]
	121 Move W1, 103
	122 Move W2, 71
	123 Move X0, X19
	124 Call Dictionary`2<Int32Enum, Char>.Add, X0, X1, X2
	125 Move X3, [X21]
	126 Move W1, 104
	127 Move W2, 72
	128 Move X0, X19
	129 Call Dictionary`2<Int32Enum, Char>.Add, X0, X1, X2
	130 Move X3, [X21]
	131 Move W1, 105
	132 Move W2, 73
	133 Move X0, X19
	134 Call Dictionary`2<Int32Enum, Char>.Add, X0, X1, X2
	135 Move X3, [X21]
	136 Move W1, 106
	137 Move W2, 74
	138 Move X0, X19
	139 Call Dictionary`2<Int32Enum, Char>.Add, X0, X1, X2
	140 Move X3, [X21]
	141 Move W1, 107
	142 Move W2, 75
	143 Move X0, X19
	144 Call Dictionary`2<Int32Enum, Char>.Add, X0, X1, X2
	145 Move X3, [X21]
	146 Move W1, 108
	147 Move W2, 76
	148 Move X0, X19
	149 Call Dictionary`2<Int32Enum, Char>.Add, X0, X1, X2
	150 Move X3, [X21]
	151 Move W1, 109
	152 Move W2, 77
	153 Move X0, X19
	154 Call Dictionary`2<Int32Enum, Char>.Add, X0, X1, X2
	155 Move X3, [X21]
	156 Move W1, 110
	157 Move W2, 78
	158 Move X0, X19
	159 Call Dictionary`2<Int32Enum, Char>.Add, X0, X1, X2
	160 Move X3, [X21]
	161 Move W1, 111
	162 Move W2, 79
	163 Move X0, X19
	164 Call Dictionary`2<Int32Enum, Char>.Add, X0, X1, X2
	165 Move X3, [X21]
	166 Move W1, 112
	167 Move W2, 80
	168 Move X0, X19
	169 Call Dictionary`2<Int32Enum, Char>.Add, X0, X1, X2
	170 Move X3, [X21]
	171 Move W1, 113
	172 Move W2, 81
	173 Move X0, X19
	174 Call Dictionary`2<Int32Enum, Char>.Add, X0, X1, X2
	175 Move X3, [X21]
	176 Move W1, 114
	177 Move W2, 82
	178 Move X0, X19
	179 Call Dictionary`2<Int32Enum, Char>.Add, X0, X1, X2
	180 Move X3, [X21]
	181 Move W1, 115
	182 Move W2, 83
	183 Move X0, X19
	184 Call Dictionary`2<Int32Enum, Char>.Add, X0, X1, X2
	185 Move X3, [X21]
	186 Move W1, 116
	187 Move W2, 84
	188 Move X0, X19
	189 Call Dictionary`2<Int32Enum, Char>.Add, X0, X1, X2
	190 Move X3, [X21]
	191 Move W1, 117
	192 Move W2, 85
	193 Move X0, X19
	194 Call Dictionary`2<Int32Enum, Char>.Add, X0, X1, X2
	195 Move X3, [X21]
	196 Move W1, 118
	197 Move W2, 86
	198 Move X0, X19
	199 Call Dictionary`2<Int32Enum, Char>.Add, X0, X1, X2
	200 Move X3, [X21]
	201 Move W1, 119
	202 Move W2, 87
	203 Move X0, X19
	204 Call Dictionary`2<Int32Enum, Char>.Add, X0, X1, X2
	205 Move X3, [X21]
	206 Move W1, 120
	207 Move W2, 88
	208 Move X0, X19
	209 Call Dictionary`2<Int32Enum, Char>.Add, X0, X1, X2
	210 Move X3, [X21]
	211 Move W1, 121
	212 Move W2, 89
	213 Move X0, X19
	214 Call Dictionary`2<Int32Enum, Char>.Add, X0, X1, X2
	215 Move X3, [X21]
	216 Move W1, 122
	217 Move W2, 90
	218 Move X0, X19
	219 Call Dictionary`2<Int32Enum, Char>.Add, X0, X1, X2
	220 Move X3, [X21]
	221 Move W1, 46
	222 Move W2, 46
	223 Move X0, X19
	224 Call Dictionary`2<Int32Enum, Char>.Add, X0, X1, X2
	225 Move X3, [X21]
	226 Move W1, 47
	227 Move W2, 47
	228 Move X0, X19
	229 Call Dictionary`2<Int32Enum, Char>.Add, X0, X1, X2
	230 Move X3, [X21]
	231 Move W1, 62
	232 Move W2, 62
	233 Move X0, X19
	234 Call Dictionary`2<Int32Enum, Char>.Add, X0, X1, X2
	235 Move X3, [X21]
	236 Move W1, 32
	237 Move W2, 32
	238 Move X0, X19
	239 Call Dictionary`2<Int32Enum, Char>.Add, X0, X1, X2
	240 Move X8, [X20]
	241 Move X8, [X8+184]
	242 Move [X8], X19
	243 Move X20, [X31+16]
	244 Move X19, [X31+24]
	245 Move X30, [X31+32]
	246 Move X21, [X31+40]
	247 Return 
	248 Call 0x1C17F20

