Type: AnimalCompany.UserCacheManager/<>c

Method: System.Void .cctor()

Disassembly:
	0x01D5396C LDR X0, [X0 + 0xE50]
	0x01D53970 BL 0x1C16CF4
	0x01D53974 MOVZ W8, 0x1
	0x01D53978 STRB W8, [X19 + 0x7D1]
	0x01D5397C LDR X8, [X31]
	0x01D53980 LDR X19, [X8 + 0x28]
	0x01D53984 CBZ X19, 0x1D53E6C
	0x01D53988 LDR W8, [X19 + 0x18]
	0x01D5398C ADRP X23, 0x23A0000
	0x01D53990 LDR X23, [X23 + 0x598]
	0x01D53994 CMP W8, 0x1
	0x01D53998 B.LT 0x1D53A2C
	0x01D5399C MOV W22, W31
	0x01D539A0 CMP W22, W8
	0x01D539A4 B.CS 0x1D53E90
	0x01D539A8 ADD X8, X19, W22, 0x3, SXTW
	0x01D539AC LDR X20, [X8 + 0x20]
	0x01D539B0 CBZ X20, 0x1D53E6C
	0x01D539B4 MOV X0, X20
	0x01D539B8 MOV X1, X31
	0x01D539BC BL 0x3C16E8C
	0x01D539C0 LDR X8, [X23]
	0x01D539C4 MOV X21, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x2686000
	005 Move X20, 0x23A2000
	006 Move W8, [X19+1993]
	007 Move X20, [X20+3416]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x23A2000
	013 Move X0, [X0+3416]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+1993], W8
	017 Move X0, [X20]
	018 Call 0x1C17F10
	019 Move X1, X31
	020 Move X19, X0
	021 Call Object..ctor, X0
	022 Move X8, [X20]
	023 Move X8, [X8+184]
	024 Move [X8], X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Return 

Method: System.Void .ctor()

Disassembly:
	0x01D539C8 LDR W9, [X8 + 0xE0]
	0x01D539CC CBNZ W9, 0x1D539D8

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Boolean <FetchPlayerData>b__7_0(System.String userID)

Disassembly:
	0x01D539D0 MOV X0, X8
	0x01D539D4 BL 0x1C16DFC
	0x01D539D8 MOV X0, X21
	0x01D539DC MOV X1, X31
	0x01D539E0 MOV X2, X31
	0x01D539E4 BL 0x3C354F8
	0x01D539E8 TBZ X0, 0x0, 0x1D53A1C
	0x01D539EC MOV X0, X20
	0x01D539F0 MOV X1, X31
	0x01D539F4 BL 0x3C16E8C
	0x01D539F8 LDR X8, [X23]
	0x01D539FC MOV X20, X0
	0x01D53A00 LDR W9, [X8 + 0xE0]
	0x01D53A04 CBNZ W9, 0x1D53A10
	0x01D53A08 MOV X0, X8
	0x01D53A0C BL 0x1C16DFC
	0x01D53A10 MOV X0, X20
	0x01D53A14 MOV X1, X31
	0x01D53A18 BL 0x3C394A8
	0x01D53A1C LDR W8, [X19 + 0x18]
	0x01D53A20 ADD W22, W22, 0x1
	0x01D53A24 CMP W22, W8
	0x01D53A28 B.LT 0x1D539A0
	0x01D53A2C LDR X8, [X31]
	0x01D53A30 LDR X8, [X8 + 0x30]
	0x01D53A34 CBZ X8, 0x1D53E6C
	0x01D53A38 LDR X8, [X8 + 0x60]
	0x01D53A3C CBZ X8, 0x1D53E6C
	0x01D53A40 ADRP X9, 0x23A1000
	0x01D53A44 LDR X9, [X9 + 0xE08]
	0x01D53A48 ADRP X19, 0x23A1000
	0x01D53A4C LDR X21, [X8 + 0x30]
	0x01D53A50 LDR X0, [X9]
	0x01D53A54 LDR X19, [X19 + 0xE00]
	0x01D53A58 BL 0x1C16F10
	0x01D53A5C LDR X2, [X19]
	0x01D53A60 MOV X1, X21
	0x01D53A64 STR X0, [X31 + 0x18]
	0x01D53A68 BL 0x2DA9FD8
	0x01D53A6C LDR X19, [X31]
	0x01D53A70 LDR X8, [X19 + 0x20]
	0x01D53A74 CBZ X8, 0x1D53E6C
	0x01D53A78 MOV W24, W31
	0x01D53A7C LDR W9, [X8 + 0x18]
	0x01D53A80 CMP W24, W9
	0x01D53A84 B.GE 0x1D53E70
	0x01D53A88 CMP W24, W9
	0x01D53A8C B.CS 0x1D53E90
	0x01D53A90 LDR X9, [X19 + 0x28]
	0x01D53A94 CBZ X9, 0x1D53E6C
	0x01D53A98 LDR W10, [X9 + 0x18]
	0x01D53A9C CMP W24, W10
	0x01D53AA0 B.CS 0x1D53E90
	0x01D53AA4 SXTW X10, W24
	0x01D53AA8 ADD X8, X8, X10, 0x3, LSL
	0x01D53AAC LDR X20, [X8 + 0x20]
	0x01D53AB0 CBZ X20, 0x1D53E6C
	0x01D53AB4 LDR X0, [X23]
	0x01D53AB8 ADD X8, X9, X10, 0x3, LSL
	0x01D53ABC LDR X21, [X8 + 0x20]
	0x01D53AC0 LDR X23, [X20 + 0x40]
	0x01D53AC4 LDR W8, [X0 + 0xE0]
	0x01D53AC8 CBNZ W8, 0x1D53AD0
	0x01D53ACC BL 0x1C16DFC
	0x01D53AD0 ADRP X8, 0x23A1000
	0x01D53AD4 LDR X8, [X8 + 0xE38]
	0x01D53AD8 MOV X0, X23
	0x01D53ADC LDR X1, [X8]
	0x01D53AE0 BL 0x222D35C
	0x01D53AE4 CBZ X21, 0x1D53E6C
	0x01D53AE8 MOV X1, X0
	0x01D53AEC MOV X0, X21
	0x01D53AF0 MOV X2, X31
	0x01D53AF4 STR X24, [X31 + 0x10]
	0x01D53AF8 BL 0x3C16EC8
	0x01D53AFC LDR X0, [X20 + 0x40]
	0x01D53B00 CBZ X0, 0x1D53E6C
	0x01D53B04 MOV X1, X31
	0x01D53B08 STR X21, [X31 + 0x8]
	0x01D53B0C BL 0x3C18F3C
	0x01D53B10 CBZ X0, 0x1D53E6C
	0x01D53B14 ADRP X8, 0x23A1000
	0x01D53B18 LDR X8, [X8 + 0xE30]
	0x01D53B1C MOV X24, X0
	0x01D53B20 LDR X0, [X8]
	0x01D53B24 BL 0x1C16F10

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2686000
	007 Move X20, 0x23A1000
	008 Move W8, [X21+1994]
	009 Move X20, [X20+1608]
	010 Move X19, X1
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0x23A1000
	016 Move X0, [X0+1608]
	017 Call 0x1C17CF4
	018 Move X0, 0x23A2000
	019 Move X0, [X0+264]
	020 Call 0x1C17CF4
	021 Move X0, 0x23A1000
	022 Move X0, [X0+3528]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+1994], W8
	026 Move X0, [X20]
	027 Move [X31+8], X31
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Move X21, 0x2686000
	033 Move W8, [X21+1927]
	034 Compare W8, 0
	035 JumpIfNotEqual {41}
	036 Move X0, 0x23A1000
	037 Move X0, [X0+1608]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X21+1927], W8
	041 Move X0, [X20]
	042 Move W8, [X0+224]
	043 Compare W8, 0
	044 JumpIfNotEqual {47}
	045 Call 0x1C17DFC
	046 Move X0, [X20]
	047 Move X8, [X0+184]
	048 Move X8, [X8]
	049 Compare X8, 0
	050 JumpIfEqual {106}
	051 Move X8, [X8+184]
	052 Compare X8, 0
	053 JumpIfEqual {106}
	054 Move X8, [X8+80]
	055 Compare X8, 0
	056 JumpIfEqual {106}
	057 Move X1, [X8+80]
	058 Move X0, X19
	059 Move X2, X31
	060 Call String.op_Inequality, X0, X1
	061 Move TEMP, X0
	062 And TEMP, TEMP, 1
	063 Compare TEMP, 1
	064 JumpIfNotEqual {98}
	065 Move X0, [X20]
	066 Move W8, [X0+224]
	067 Compare W8, 0
	068 JumpIfNotEqual {70}
	069 Call 0x1C17DFC
	070 Move W8, [X21+1927]
	071 Compare W8, 0
	072 JumpIfNotEqual {78}
	073 Move X0, 0x23A1000
	074 Move X0, [X0+1608]
	075 Call 0x1C17CF4
	076 Move W8, 1
	077 Move [X21+1927], W8
	078 Move X0, [X20]
	079 Move W8, [X0+224]
	080 Compare W8, 0
	081 JumpIfNotEqual {84}
	082 Call 0x1C17DFC
	083 Move X0, [X20]
	084 Move X8, [X0+184]
	085 Move X8, [X8]
	086 Compare X8, 0
	087 JumpIfEqual {106}
	088 Move X0, [X8+216]
	089 Compare X0, 0
	090 JumpIfEqual {106}
	091 Move X8, 0x23A2000
	092 Move X8, [X8+264]
	093 Add X2, X31, 8
	094 Move X1, X19
	095 Move X3, [X8]
	096 Call StateDictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	097 Xor W8, W0, 1
	098 Move W8, W31
	099 Move X20, [X31+32]
	100 Move X19, [X31+40]
	101 Move X30, [X31+16]
	102 Move X21, [X31+24]
	103 And W0, W8, 1
	104 Add X31, X31, 48
	105 Return X0
	106 Call 0x1C17F20

Method: System.String <FetchPlayerData>b__7_2(Nakama.IApiUser u)

Disassembly:
	0x01D53B28 ADRP X8, 0x23A1000
	0x01D53B2C LDR W1, [X24 + 0x18]
	0x01D53B30 LDR X8, [X8 + 0xE20]
	0x01D53B34 MOV X23, X0
	0x01D53B38 LDR X2, [X8]
	0x01D53B3C BL 0x2FDBF80
	0x01D53B40 LDR W8, [X24 + 0x18]
	0x01D53B44 CMP W8, 0x1
	0x01D53B48 B.LT 0x1D53D58
	0x01D53B4C MOV W19, W31
	0x01D53B50 CMP W19, W8
	0x01D53B54 B.CS 0x1D53E90
	0x01D53B58 ADD X22, X24, W19, 0x2, SXTW
	0x01D53B5C LDR X9, [X20 + 0x60]
	0x01D53B60 LDRSW X11, [X22 + 0x20]!
	0x01D53B64 CBZ X9, 0x1D53E6C
	0x01D53B68 LDR W10, [X9 + 0x18]
	0x01D53B6C CMP W11, W10
	0x01D53B70 B.CS 0x1D53E90
	0x01D53B74 ADD W29, W19, 0x1
	0x01D53B78 CMP W29, W8
	0x01D53B7C B.CS 0x1D53E90
	0x01D53B80 ADD X11, X9, X11, 0x2, LSL
	0x01D53B84 ADD X27, X24, W29, 0x2, SXTW
	0x01D53B88 LDR W1, [X11 + 0x20]
	0x01D53B8C LDRSW X11, [X27 + 0x20]!
	0x01D53B90 CMP W11, W10
	0x01D53B94 B.CS 0x1D53E90
	0x01D53B98 ADD W21, W19, 0x2
	0x01D53B9C CMP W21, W8
	0x01D53BA0 B.CS 0x1D53E90
	0x01D53BA4 ADD X8, X9, X11, 0x2, LSL
	0x01D53BA8 ADD X28, X24, W21, 0x2, SXTW
	0x01D53BAC LDR W25, [X8 + 0x20]
	0x01D53BB0 LDRSW X8, [X28 + 0x20]!
	0x01D53BB4 CMP W8, W10
	0x01D53BB8 B.CS 0x1D53E90
	0x01D53BBC LDR X0, [X31 + 0x18]
	0x01D53BC0 CBZ X0, 0x1D53E6C
	0x01D53BC4 ADD X8, X9, X8, 0x2, LSL

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2686000
	005 Move W8, [X20+1995]
	006 Move X19, X1
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x23A1000
	012 Move X0, [X0+3880]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1995], W8
	016 Compare X19, 0
	017 JumpIfEqual {45}
	018 Move X10, 0x23A1000
	019 Move X8, [X19]
	020 Move X10, [X10+3880]
	021 NotImplemented "Instruction LDRH not yet implemented."
	022 Move X1, [X10]
	023 Compare X9, 0
	024 JumpIfEqual {31}
	025 Move X10, [X8+176]
	026 Add X10, X10, 8
	027 NotImplemented "Instruction LDUR not yet implemented."
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Subtract X9, X9, 1
	030 Add X10, X10, 16
	031 Move W2, 9
	032 Move X0, X19
	033 Call 0x1C5D788
	034 Move W9, [X10]
	035 Add W9, W9, 9
	036 Add X8, X8, W9
	037 Add X0, X8, 312
	038 Move X2, [X0]
	039 Move X1, [X0+8]
	040 Move X0, X19
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move X30, [X31+32]
	044 CallNoReturn X2
	045 Call 0x1C17F20

Method: System.Boolean <FetchPlayerData>b__7_3(System.Collections.Generic.KeyValuePair`2<System.String, AnimalCompany.UserCacheState> kvp)

Disassembly:
	0x01D53BC8 LDR W26, [X8 + 0x20]
	0x01D53BCC ADRP X8, 0x23A1000
	0x01D53BD0 LDR X8, [X8 + 0xDF8]
	0x01D53BD4 LDR X2, [X8]
	0x01D53BD8 BL 0x2DAA59C
	0x01D53BDC TBZ X0, 0x0, 0x1D53C18
	0x01D53BE0 ADRP X8, 0x23A1000
	0x01D53BE4 LDR X8, [X8 + 0xDF8]
	0x01D53BE8 LDR X0, [X31 + 0x18]
	0x01D53BEC MOV W1, W25
	0x01D53BF0 LDR X2, [X8]
	0x01D53BF4 BL 0x2DAA59C
	0x01D53BF8 TBZ X0, 0x0, 0x1D53C18
	0x01D53BFC ADRP X8, 0x23A1000
	0x01D53C00 LDR X8, [X8 + 0xDF8]
	0x01D53C04 LDR X0, [X31 + 0x18]
	0x01D53C08 MOV W1, W26
	0x01D53C0C LDR X2, [X8]
	0x01D53C10 BL 0x2DAA59C
	0x01D53C14 TBNZ X0, 0x0, 0x1D53D44
	0x01D53C18 LDR W8, [X24 + 0x18]
	0x01D53C1C CMP W19, W8
	0x01D53C20 B.CS 0x1D53E90
	0x01D53C24 CBZ X23, 0x1D53E6C
	0x01D53C28 LDR W1, [X22]
	0x01D53C2C ADRP X22, 0x23A1000
	0x01D53C30 LDR W11, [X23 + 0x1C]
	0x01D53C34 LDR X9, [X23 + 0x10]
	0x01D53C38 LDR X22, [X22 + 0xE10]
	0x01D53C3C ADD W11, W11, 0x1
	0x01D53C40 LDR X10, [X22]
	0x01D53C44 STR W11, [X23 + 0x1C]
	0x01D53C48 CBZ X9, 0x1D53E6C
	0x01D53C4C LDRSW X11, [X23 + 0x18]
	0x01D53C50 LDR W12, [X9 + 0x18]
	0x01D53C54 CMP W11, W12
	0x01D53C58 B.CS 0x1D53C70
	0x01D53C5C ADD W10, W11, 0x1
	0x01D53C60 ADD X9, X9, X11, 0x2, LSL
	0x01D53C64 STR W10, [X23 + 0x18]
	0x01D53C68 STR W1, [X9 + 0x20]
	0x01D53C6C B 0x1D53C88
	0x01D53C70 LDR X8, [X10 + 0x20]
	0x01D53C74 MOV X0, X23
	0x01D53C78 LDR X8, [X8 + 0xC0]
	0x01D53C7C LDR X2, [X8 + 0x70]
	0x01D53C80 BL 0x2FDC70C
	0x01D53C84 LDR W8, [X24 + 0x18]
	0x01D53C88 CMP W29, W8
	0x01D53C8C B.CS 0x1D53E90
	0x01D53C90 LDR W11, [X23 + 0x1C]
	0x01D53C94 LDR W1, [X27]
	0x01D53C98 LDR X9, [X23 + 0x10]
	0x01D53C9C LDR X10, [X22]
	0x01D53CA0 ADD W11, W11, 0x1
	0x01D53CA4 STR W11, [X23 + 0x1C]
	0x01D53CA8 CBZ X9, 0x1D53E6C
	0x01D53CAC LDRSW X11, [X23 + 0x18]
	0x01D53CB0 LDR W12, [X9 + 0x18]
	0x01D53CB4 CMP W11, W12
	0x01D53CB8 B.CS 0x1D53CD0
	0x01D53CBC ADD W10, W11, 0x1
	0x01D53CC0 ADD X9, X9, X11, 0x2, LSL
	0x01D53CC4 STR W10, [X23 + 0x18]
	0x01D53CC8 STR W1, [X9 + 0x20]
	0x01D53CCC B 0x1D53CE8
	0x01D53CD0 LDR X8, [X10 + 0x20]
	0x01D53CD4 MOV X0, X23
	0x01D53CD8 LDR X8, [X8 + 0xC0]
	0x01D53CDC LDR X2, [X8 + 0x70]
	0x01D53CE0 BL 0x2FDC70C
	0x01D53CE4 LDR W8, [X24 + 0x18]
	0x01D53CE8 CMP W21, W8
	0x01D53CEC B.CS 0x1D53E90
	0x01D53CF0 LDR W10, [X23 + 0x1C]
	0x01D53CF4 LDR W1, [X28]
	0x01D53CF8 LDR X8, [X23 + 0x10]
	0x01D53CFC LDR X9, [X22]
	0x01D53D00 ADD W10, W10, 0x1
	0x01D53D04 STR W10, [X23 + 0x1C]
	0x01D53D08 CBZ X8, 0x1D53E6C
	0x01D53D0C LDRSW X10, [X23 + 0x18]
	0x01D53D10 LDR W11, [X8 + 0x18]
	0x01D53D14 CMP W10, W11
	0x01D53D18 B.CS 0x1D53D30
	0x01D53D1C ADD W9, W10, 0x1
	0x01D53D20 ADD X8, X8, X10, 0x2, LSL
	0x01D53D24 STR W9, [X23 + 0x18]
	0x01D53D28 STR W1, [X8 + 0x20]
	0x01D53D2C B 0x1D53D44

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x2686000
	007 Move X21, 0x23A1000
	008 Move W8, [X22+1996]
	009 Move X21, [X21+1608]
	010 Move X19, X2
	011 Move X20, X1
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {36}
	016 Move X0, 0x23A1000
	017 Move X0, [X0+1608]
	018 Call 0x1C17CF4
	019 Move X0, 0x23A2000
	020 Move X0, [X0+2544]
	021 Call 0x1C17CF4
	022 Move X0, 0x23A2000
	023 Move X0, [X0+3424]
	024 Call 0x1C17CF4
	025 Move X0, 0x23A2000
	026 Move X0, [X0+3432]
	027 Call 0x1C17CF4
	028 Move X0, 0x23A2000
	029 Move X0, [X0+3440]
	030 Call 0x1C17CF4
	031 Move X0, 0x23A2000
	032 Move X0, [X0+3168]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X22+1996], W8
	036 Move X0, [X21]
	037 Move [X31+8], X31
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Move X22, 0x2686000
	043 Move W8, [X22+1927]
	044 Compare W8, 0
	045 JumpIfNotEqual {51}
	046 Move X0, 0x23A1000
	047 Move X0, [X0+1608]
	048 Call 0x1C17CF4
	049 Move W8, 1
	050 Move [X22+1927], W8
	051 Move X0, [X21]
	052 Move W8, [X0+224]
	053 Compare W8, 0
	054 JumpIfNotEqual {57}
	055 Call 0x1C17DFC
	056 Move X0, [X21]
	057 Move X8, [X0+184]
	058 Move X8, [X8]
	059 Compare X8, 0
	060 JumpIfEqual {108}
	061 Move X8, [X8+224]
	062 Compare X8, 0
	063 JumpIfEqual {108}
	064 Move X0, [X8+112]
	065 Compare X0, 0
	066 JumpIfEqual {108}
	067 Move X8, 0x23A2000
	068 Move X8, [X8+3440]
	069 Move X1, X20
	070 Move X2, [X8]
	071 Call StatePrimitiveSet`1<Object>.Contains, X0, X1
	072 Move TEMP, X0
	073 And TEMP, TEMP, 1
	074 Compare TEMP, 1
	075 JumpIfNotEqual {77}
	076 Move W0, W31
	077 Compare X19, 0
	078 JumpIfEqual {108}
	079 Move X8, [X19+72]
	080 Compare X8, 0
	081 JumpIfEqual {108}
	082 Move X9, 0x23A2000
	083 Move X9, [X9+2544]
	084 Move X19, [X8+80]
	085 Move X0, [X9]
	086 Move W9, [X0+224]
	087 Compare W9, 0
	088 JumpIfNotEqual {90}
	089 Call 0x1C17DFC
	090 Move X0, X31
	091 Call DateTime.get_Now
	092 Move [X31+8], X0
	093 Add X0, X31, 8
	094 Move D0, -8.000000001629815
	095 Move X1, X31
	096 Call DateTime.AddMinutes, X0, V0
	097 Move X1, X0
	098 Move X0, X19
	099 Move X2, X31
	100 Call DateTime.op_LessThan, X0, X1
	101 Move X20, [X31+32]
	102 Move X19, [X31+40]
	103 Move X22, [X31+16]
	104 Move X21, [X31+24]
	105 And W0, W0, 1
	106 Move X30, [X31+48]
	107 Return X0
	108 Call 0x1C17F20

Method: System.String <FetchPlayerData>b__7_4(System.Collections.Generic.KeyValuePair`2<System.String, AnimalCompany.UserCacheState> kvp)

Disassembly:
	0x01D53D30 LDR X8, [X9 + 0x20]
	0x01D53D34 MOV X0, X23
	0x01D53D38 LDR X8, [X8 + 0xC0]
	0x01D53D3C LDR X2, [X8 + 0x70]
	0x01D53D40 BL 0x2FDC70C
	0x01D53D44 LDR X8, [X24 + 0x18]
	0x01D53D48 ADD W19, W19, 0x3
	0x01D53D4C CMP W19, W8
	0x01D53D50 B.LT 0x1D53B50
	0x01D53D54 LDR X19, [X31]
	0x01D53D58 LDR X24, [X31 + 0x10]
	0x01D53D5C CBZ X23, 0x1D53E6C
	0x01D53D60 LDR W9, [X23 + 0x18]
	0x01D53D64 CBZ W9, 0x1D53D94
	0x01D53D68 CMP W9, W8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2686000
	005 Move W8, [X20+1997]
	006 Move X19, X1
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x23A2000
	012 Move X0, [X0+3424]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1997], W8
	016 Move X0, X19
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 Move X30, [X31+32]
	020 Return X0

Method: System.Boolean <ShouldFetch>b__8_0(System.String userID)

Disassembly:
	0x01D53D6C B.NE 0x1D53E00
	0x01D53D70 MOV X0, X20
	0x01D53D74 MOV X1, X31
	0x01D53D78 BL 0x3C389D4
	0x01D53D7C ADRP X8, 0x23A1000
	0x01D53D80 LDR X8, [X8 + 0xE48]
	0x01D53D84 ADRP X9, 0x23A1000
	0x01D53D88 LDR X8, [X8]
	0x01D53D8C LDR X9, [X9 + 0xE40]
	0x01D53D90 B 0x1D53DB4
	0x01D53D94 MOV X0, X20
	0x01D53D98 MOV X1, X31
	0x01D53D9C BL 0x3C389D4
	0x01D53DA0 ADRP X8, 0x23A1000
	0x01D53DA4 LDR X8, [X8 + 0xE48]
	0x01D53DA8 ADRP X9, 0x23A1000
	0x01D53DAC LDR X8, [X8]
	0x01D53DB0 LDR X9, [X9 + 0xE50]
	0x01D53DB4 LDR X2, [X9]
	0x01D53DB8 MOV X1, X0
	0x01D53DBC MOV X0, X8
	0x01D53DC0 MOV X3, X31
	0x01D53DC4 BL 0x32274B8
	0x01D53DC8 ADRP X8, 0x23A0000
	0x01D53DCC LDR X8, [X8 + 0xA28]
	0x01D53DD0 MOV X21, X0
	0x01D53DD4 LDR X8, [X8]
	0x01D53DD8 LDR W9, [X8 + 0xE0]
	0x01D53DDC CBNZ W9, 0x1D53DE8
	0x01D53DE0 MOV X0, X8
	0x01D53DE4 BL 0x1C16DFC
	0x01D53DE8 MOV X0, X21
	0x01D53DEC MOV X1, X31
	0x01D53DF0 BL 0x3C06A04
	0x01D53DF4 ADRP X23, 0x23A0000
	0x01D53DF8 LDR X23, [X23 + 0x598]
	0x01D53DFC B 0x1D53E60
	0x01D53E00 LDR X21, [X31 + 0x8]
	0x01D53E04 MOV X1, X31
	0x01D53E08 MOV X0, X21
	0x01D53E0C BL 0x3C16E8C
	0x01D53E10 ADRP X8, 0x23A1000
	0x01D53E14 LDR X8, [X8 + 0xE18]
	0x01D53E18 MOV X22, X0
	0x01D53E1C MOV X0, X23
	0x01D53E20 LDR X1, [X8]
	0x01D53E24 BL 0x2FDE4C8
	0x01D53E28 CBZ X22, 0x1D53E6C
	0x01D53E2C MOV X1, X0
	0x01D53E30 MOV X0, X22
	0x01D53E34 MOV X2, X31
	0x01D53E38 BL 0x3C18FF0
	0x01D53E3C MOV X0, X21
	0x01D53E40 MOV X1, X31
	0x01D53E44 BL 0x3C16E8C
	0x01D53E48 ADRP X23, 0x23A0000
	0x01D53E4C LDR X23, [X23 + 0x598]
	0x01D53E50 CBZ X0, 0x1D53E6C
	0x01D53E54 MOV W1, W31
	0x01D53E58 MOV X2, X31
	0x01D53E5C BL 0x3C1A03C
	0x01D53E60 LDR X8, [X19 + 0x20]
	0x01D53E64 ADD W24, W24, 0x1
	0x01D53E68 CBNZ X8, 0x1D53A7C
	0x01D53E6C BL 0x1C16F20
	0x01D53E70 LDP X20, X19, [X31 + 0x70]
	0x01D53E74 LDP X22, X21, [X31 + 0x60]
	0x01D53E78 LDP X24, X23, [X31 + 0x50]
	0x01D53E7C LDP X26, X25, [X31 + 0x40]
	0x01D53E80 LDP X28, X27, [X31 + 0x30]
	0x01D53E84 LDP X29, X30, [X31 + 0x20]
	0x01D53E88 ADD X31, X31, 0x80
	0x01D53E8C RET
	0x01D53E90 BL 0x1C16F28
	0x01D53E94 MOV X1, X31
	0x01D53E98 B 0x3C36C30
	0x01D53E9C SUB X31, X31, 0x70
	0x01D53EA0 STP X29, X30, [X31 + 0x10]
	0x01D53EA4 STP X28, X27, [X31 + 0x20]
	0x01D53EA8 STP X26, X25, [X31 + 0x30]
	0x01D53EAC STP X24, X23, [X31 + 0x40]
	0x01D53EB0 STP X22, X21, [X31 + 0x50]
	0x01D53EB4 STP X20, X19, [X31 + 0x60]
	0x01D53EB8 ADRP X20, 0x2685000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x2686000
	006 Move X20, 0x23A1000
	007 Move W8, [X21+1998]
	008 Move X20, [X20+1608]
	009 Move X19, X1
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0x23A1000
	015 Move X0, [X0+1608]
	016 Call 0x1C17CF4
	017 Move X0, 0x23A2000
	018 Move X0, [X0+3448]
	019 Call 0x1C17CF4
	020 Move X0, 0x23A2000
	021 Move X0, [X0+504]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+1998], W8
	025 Move X0, [X20]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X21, 0x2686000
	031 Move W8, [X21+1927]
	032 Compare W8, 0
	033 JumpIfNotEqual {39}
	034 Move X0, 0x23A1000
	035 Move X0, [X0+1608]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X21+1927], W8
	039 Move X0, [X20]
	040 Move W8, [X0+224]
	041 Compare W8, 0
	042 JumpIfNotEqual {45}
	043 Call 0x1C17DFC
	044 Move X0, [X20]
	045 Move X8, [X0+184]
	046 Move X8, [X8]
	047 Compare X8, 0
	048 JumpIfEqual {107}
	049 Move X0, [X8+216]
	050 Compare X0, 0
	051 JumpIfEqual {107}
	052 Move X8, 0x23A2000
	053 Move X8, [X8+3448]
	054 Move X1, X19
	055 Move X2, [X8]
	056 Call StateDictionary`2<Object, Object>.ContainsKey, X0, X1
	057 Move TEMP, X0
	058 And TEMP, TEMP, 1
	059 Compare TEMP, 1
	060 JumpIfNotEqual {67}
	061 Move X20, [X31+16]
	062 Move X19, [X31+24]
	063 Move W0, W31
	064 Move X30, [X31+32]
	065 Move X21, [X31+40]
	066 Return X0
	067 Move X0, [X20]
	068 Move W8, [X0+224]
	069 Compare W8, 0
	070 JumpIfNotEqual {72}
	071 Call 0x1C17DFC
	072 Move W8, [X21+1927]
	073 Compare W8, 0
	074 JumpIfNotEqual {80}
	075 Move X0, 0x23A1000
	076 Move X0, [X0+1608]
	077 Call 0x1C17CF4
	078 Move W8, 1
	079 Move [X21+1927], W8
	080 Move X0, [X20]
	081 Move W8, [X0+224]
	082 Compare W8, 0
	083 JumpIfNotEqual {86}
	084 Call 0x1C17DFC
	085 Move X0, [X20]
	086 Move X8, [X0+184]
	087 Move X8, [X8]
	088 Compare X8, 0
	089 JumpIfEqual {107}
	090 Move X8, [X8+184]
	091 Compare X8, 0
	092 JumpIfEqual {107}
	093 Move X0, [X8+80]
	094 Move X8, 0x23A2000
	095 Move X8, [X8+504]
	096 Move X1, [X8]
	097 Call StatePrimitive`1<Object>.op_Implicit, X0
	098 Move X1, X0
	099 Move X0, X19
	100 Move X20, [X31+16]
	101 Move X19, [X31+24]
	102 Move X2, X31
	103 Move X30, [X31+32]
	104 Move X21, [X31+40]
	105 Call String.op_Inequality, X0, X1
	106 Return X0
	107 Call 0x1C17F20

