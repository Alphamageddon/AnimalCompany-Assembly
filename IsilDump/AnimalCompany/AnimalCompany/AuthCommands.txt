Type: AnimalCompany.AuthCommands

Method: System.Threading.Tasks.Task`1<AnimalCompany.AuthCommands/LoginResult> LoginAsync(System.Threading.CancellationToken token = null)

Disassembly:
	0x01D38DF8 LDR X0, [X0 + 0xC00]
	0x01D38DFC BL 0x1C16CF4
	0x01D38E00 ADRP X0, 0x23BB000
	0x01D38E04 LDR X0, [X0 + 0xC08]
	0x01D38E08 BL 0x1C16CF4
	0x01D38E0C ADRP X0, 0x23BB000
	0x01D38E10 LDR X0, [X0 + 0xC10]
	0x01D38E14 BL 0x1C16CF4
	0x01D38E18 ADRP X0, 0x23BB000
	0x01D38E1C LDR X0, [X0 + 0xC18]
	0x01D38E20 BL 0x1C16CF4
	0x01D38E24 ADRP X0, 0x23BB000
	0x01D38E28 LDR X0, [X0 + 0xC20]
	0x01D38E2C BL 0x1C16CF4
	0x01D38E30 ADRP X0, 0x23BB000
	0x01D38E34 LDR X0, [X0 + 0xC28]
	0x01D38E38 BL 0x1C16CF4
	0x01D38E3C ADRP X0, 0x23BB000
	0x01D38E40 LDR X0, [X0 + 0xC30]
	0x01D38E44 BL 0x1C16CF4
	0x01D38E48 ADRP X0, 0x23BB000
	0x01D38E4C LDR X0, [X0 + 0xC38]
	0x01D38E50 BL 0x1C16CF4
	0x01D38E54 ADRP X0, 0x23BB000
	0x01D38E58 LDR X0, [X0 + 0xC40]
	0x01D38E5C BL 0x1C16CF4
	0x01D38E60 ADRP X0, 0x23BB000
	0x01D38E64 LDR X0, [X0 + 0x648]
	0x01D38E68 BL 0x1C16CF4
	0x01D38E6C ADRP X0, 0x23BB000
	0x01D38E70 LDR X0, [X0 + 0x970]
	0x01D38E74 BL 0x1C16CF4
	0x01D38E78 ADRP X0, 0x23BB000
	0x01D38E7C LDR X0, [X0 + 0xC48]
	0x01D38E80 BL 0x1C16CF4
	0x01D38E84 ADRP X0, 0x23BB000
	0x01D38E88 LDR X0, [X0 + 0xAB0]
	0x01D38E8C BL 0x1C16CF4
	0x01D38E90 ADRP X0, 0x23BB000
	0x01D38E94 LDR X0, [X0 + 0xB60]
	0x01D38E98 BL 0x1C16CF4
	0x01D38E9C ADRP X0, 0x23BB000
	0x01D38EA0 LDR X0, [X0 + 0xC50]
	0x01D38EA4 BL 0x1C16CF4
	0x01D38EA8 ADRP X0, 0x23BB000
	0x01D38EAC LDR X0, [X0 + 0x958]
	0x01D38EB0 BL 0x1C16CF4
	0x01D38EB4 ADRP X0, 0x23BB000
	0x01D38EB8 LDR X0, [X0 + 0xC58]
	0x01D38EBC BL 0x1C16CF4
	0x01D38EC0 ADRP X0, 0x23BB000
	0x01D38EC4 LDR X0, [X0 + 0xC60]
	0x01D38EC8 BL 0x1C16CF4
	0x01D38ECC ADRP X0, 0x23BB000
	0x01D38ED0 LDR X0, [X0 + 0xC68]
	0x01D38ED4 BL 0x1C16CF4
	0x01D38ED8 ADRP X0, 0x23BB000
	0x01D38EDC LDR X0, [X0 + 0xC70]
	0x01D38EE0 BL 0x1C16CF4
	0x01D38EE4 ADRP X0, 0x23BB000
	0x01D38EE8 LDR X0, [X0 + 0xC78]
	0x01D38EEC BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 304
	002 Move [X31+240], X29
	003 Move [X31+256], X30
	004 Move [X31+264], X23
	005 Move [X31+272], X22
	006 Move [X31+280], X21
	007 Move [X31+288], X20
	008 Move [X31+296], X19
	009 Move X20, 0x26A1000
	010 Move X19, 0x23BC000
	011 Move W8, [X20+1906]
	012 Move X19, [X19+2664]
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {31}
	017 Move X0, 0x23BC000
	018 Move X0, [X0+2672]
	019 Call 0x1C17CF4
	020 Move X0, 0x23BC000
	021 Move X0, [X0+2680]
	022 Call 0x1C17CF4
	023 Move X0, 0x23BC000
	024 Move X0, [X0+2688]
	025 Call 0x1C17CF4
	026 Move X0, 0x23BC000
	027 Move X0, [X0+2664]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X20+1906], W8
	031 Move X22, 0x23BC000
	032 Move X21, 0x23BC000
	033 Move X20, 0x23BC000
	034 Move X22, [X22+2672]
	035 Move X21, [X21+2680]
	036 Move X20, [X20+2688]
	037 Add X0, X31, 32
	038 Move W2, 208
	039 Move W1, W31
	040 Add X23, X31, 32
	041 Call 0x3EB2B10
	042 Move X0, [X19]
	043 Move W8, [X0+224]
	044 Compare W8, 0
	045 JumpIfNotEqual {47}
	046 Call 0x1C17DFC
	047 Move X0, [X22]
	048 Add X8, X31, 8
	049 Call AsyncTaskMethodBuilder`1<LoginResult>.Create
	050 NotImplemented "Instruction LDUR not yet implemented."
	051 Move X8, [X31+24]
	052 Move X2, [X21]
	053 Add X19, X23, 8
	054 Move TEMP, 0
	055 Not TEMP
	056 Move W9, TEMP
	057 Add X1, X31, 32
	058 Move X0, X19
	059 Move [X31+40], V0
	060 Move [X31+56], X8
	061 Move [X31+32], W9
	062 Call AsyncTaskMethodBuilder`1<LoginResult>.Start, X0, X1
	063 Move X1, [X20]
	064 Move X0, X19
	065 Call AsyncTaskMethodBuilder`1<LoginResult>.get_Task, X0
	066 Move X20, [X31+288]
	067 Move X19, [X31+296]
	068 Move X22, [X31+272]
	069 Move X21, [X31+280]
	070 Move X30, [X31+256]
	071 Move X23, [X31+264]
	072 Move X29, [X31+240]
	073 Add X31, X31, 304
	074 Return X0

Method: System.Threading.Tasks.Task`1<AnimalCompany.AuthCommands/AuthResult> AuthRetryLoop(System.Func`1<System.Threading.Tasks.Task`1<AnimalCompany.AuthCommands/AuthResult>> authMethod)

Disassembly:
	0x01D48A34 LDR X8, [X8 + 0x10]
	0x01D48A38 STR X8, [X19 + 0x40]
	0x01D48A3C B 0x1D48BDC
	0x01D48A40 MOV X1, X31
	0x01D48A44 MOV X0, X8
	0x01D48A48 MOV X2, X31
	0x01D48A4C BL 0x321B938
	0x01D48A50 ADRP X8, 0x23AB000
	0x01D48A54 LDR X8, [X8 + 0x720]
	0x01D48A58 MOV X21, X0
	0x01D48A5C LDR X8, [X8]
	0x01D48A60 MOV X0, X8
	0x01D48A64 BL 0x1C16F10
	0x01D48A68 ADRP X8, 0x23AB000
	0x01D48A6C LDR X8, [X8 + 0x718]
	0x01D48A70 MOV X22, X0
	0x01D48A74 LDR X1, [X8]
	0x01D48A78 BL 0x2AA4804
	0x01D48A7C LDR X8, [X20]
	0x01D48A80 MOV X0, X20
	0x01D48A84 LDP X9, X1, [X8 + 0x178]
	0x01D48A88 BLR X9
	0x01D48A8C ADRP X8, 0x23AC000
	0x01D48A90 LDR X8, [X8 + 0x738]
	0x01D48A94 LDR X23, [X8]
	0x01D48A98 CBZ X0, 0x1D48AC0
	0x01D48A9C ADRP X8, 0x23AC000
	0x01D48AA0 LDR W1, [X0 + 0x10]
	0x01D48AA4 LDR X8, [X8 + 0x470]
	0x01D48AA8 ADD X0, X31, 0x8
	0x01D48AAC STR X31, [X31 + 0x8]
	0x01D48AB0 LDR X2, [X8]
	0x01D48AB4 BL 0x24341FC
	0x01D48AB8 LDR X8, [X31 + 0x8]
	0x01D48ABC B 0x1D48AC4
	0x01D48AC0 MOV X8, X31
	0x01D48AC4 ADRP X24, 0x23AC000
	0x01D48AC8 LDR X24, [X24 + 0x478]
	0x01D48ACC ADD X1, X31, 0x8
	0x01D48AD0 STR X8, [X31 + 0x8]
	0x01D48AD4 LDR X0, [X24]
	0x01D48AD8 BL 0x1C16E04
	0x01D48ADC CBZ X22, 0x1D48BFC
	0x01D48AE0 ADRP X25, 0x23AB000
	0x01D48AE4 LDR X25, [X25 + 0x710]
	0x01D48AE8 MOV X2, X0
	0x01D48AEC MOV X0, X22
	0x01D48AF0 MOV X1, X23
	0x01D48AF4 LDR X3, [X25]
	0x01D48AF8 BL 0x2AA5098
	0x01D48AFC LDR X8, [X20]
	0x01D48B00 MOV X0, X20
	0x01D48B04 LDP X9, X1, [X8 + 0x178]
	0x01D48B08 BLR X9
	0x01D48B0C ADRP X8, 0x23AC000
	0x01D48B10 LDR X8, [X8 + 0x730]
	0x01D48B14 LDR X23, [X8]
	0x01D48B18 CBZ X0, 0x1D48B40
	0x01D48B1C ADRP X8, 0x23AC000
	0x01D48B20 LDR W1, [X0 + 0x14]
	0x01D48B24 LDR X8, [X8 + 0x470]

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+128], X30
	003 Move [X31+144], X22
	004 Move [X31+152], X21
	005 Move [X31+160], X20
	006 Move [X31+168], X19
	007 Move X21, 0x2691000
	008 Move X20, 0x23AD000
	009 Move W8, [X21+1907]
	010 Move X20, [X20+1688]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0x23AD000
	017 Move X0, [X0+1696]
	018 Call 0x1C17CF4
	019 Move X0, 0x23AD000
	020 Move X0, [X0+1704]
	021 Call 0x1C17CF4
	022 Move X0, 0x23AD000
	023 Move X0, [X0+1712]
	024 Call 0x1C17CF4
	025 Move X0, 0x23AD000
	026 Move X0, [X0+1688]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X21+1907], W8
	030 Move X0, [X20]
	031 NotImplemented "Instruction MOVI not yet implemented."
	032 Move [X31+96], V0
	033 Move [X31+104], V0
	034 Move [X31+64], V0
	035 Move [X31+72], V0
	036 Move [X31+32], V0
	037 Move [X31+40], V0
	038 Move X22, 0x23AD000
	039 Move X20, 0x23AD000
	040 Move X21, 0x23AD000
	041 Move W8, [X0+224]
	042 Move X22, [X22+1696]
	043 Move X20, [X20+1704]
	044 Move X21, [X21+1712]
	045 Compare W8, 0
	046 JumpIfNotEqual {48}
	047 Call 0x1C17DFC
	048 Move X0, [X22]
	049 Add X8, X31, 8
	050 Call AsyncTaskMethodBuilder`1<AuthResult>.Create
	051 NotImplemented "Instruction LDUR not yet implemented."
	052 Move X9, [X31+24]
	053 Move X2, [X20]
	054 Add X8, X31, 32
	055 Or X20, X8, 15
	056 Move TEMP, 0
	057 Not TEMP
	058 Move W10, TEMP
	059 Add X1, X31, 32
	060 Move X0, X20
	061 Move [X31+40], V0
	062 Move [X31+56], X9
	063 Move [X31+64], X19
	064 Move [X31+32], W10
	065 Call AsyncTaskMethodBuilder`1<AuthResult>.Start, X0, X1
	066 Move X1, [X21]
	067 Move X0, X20
	068 Call AsyncTaskMethodBuilder`1<AuthResult>.get_Task, X0
	069 Move X20, [X31+160]
	070 Move X19, [X31+168]
	071 Move X22, [X31+144]
	072 Move X21, [X31+152]
	073 Move X30, [X31+128]
	074 Add X31, X31, 176
	075 Return X0

Method: System.Threading.Tasks.Task`1<AnimalCompany.AuthCommands/AuthResult> AuthenticateWithMetaQuestAccount()

Disassembly:
	0x01D48B28 ADD X0, X31, 0x8
	0x01D48B2C STR X31, [X31 + 0x8]
	0x01D48B30 LDR X2, [X8]
	0x01D48B34 BL 0x24341FC
	0x01D48B38 LDR X8, [X31 + 0x8]
	0x01D48B3C B 0x1D48B44
	0x01D48B40 MOV X8, X31
	0x01D48B44 LDR X0, [X24]
	0x01D48B48 ADD X1, X31, 0x8
	0x01D48B4C STR X8, [X31 + 0x8]
	0x01D48B50 BL 0x1C16E04
	0x01D48B54 LDR X3, [X25]
	0x01D48B58 MOV X2, X0
	0x01D48B5C MOV X0, X22
	0x01D48B60 MOV X1, X23
	0x01D48B64 BL 0x2AA5098
	0x01D48B68 ADRP X8, 0x23AB000
	0x01D48B6C LDR X8, [X8 + 0x788]
	0x01D48B70 LDR X0, [X8]
	0x01D48B74 LDR W8, [X0 + 0xE0]
	0x01D48B78 CBNZ W8, 0x1D48B80
	0x01D48B7C BL 0x1C16DFC
	0x01D48B80 ADRP X8, 0x23AC000
	0x01D48B84 ADRP X9, 0x23AC000
	0x01D48B88 LDR X8, [X8 + 0x718]
	0x01D48B8C LDR X9, [X9 + 0x740]
	0x01D48B90 MOVZ W0, 0x800
	0x01D48B94 MOVZ W5, 0x116
	0x01D48B98 LDR X3, [X8]
	0x01D48B9C LDR X4, [X9]
	0x01D48BA0 MOV X1, X21
	0x01D48BA4 MOV X2, X22
	0x01D48BA8 MOV X6, X31
	0x01D48BAC BL 0x35C25CC
	0x01D48BB0 MOVZ W8, 0x6
	0x01D48BB4 STR W8, [X19 + 0x18]
	0x01D48BB8 LDR X8, [X20]
	0x01D48BBC MOV X0, X20
	0x01D48BC0 LDP X9, X1, [X8 + 0x178]
	0x01D48BC4 BLR X9
	0x01D48BC8 CBZ X0, 0x1D48BD4
	0x01D48BCC LDR X8, [X0 + 0x18]
	0x01D48BD0 B 0x1D48BD8
	0x01D48BD4 MOV X8, X31
	0x01D48BD8 STR X8, [X19 + 0x20]
	0x01D48BDC MOVZ W8, 0x1
	0x01D48BE0 STRB W8, [X19 + 0x48]
	0x01D48BE4 LDP X20, X19, [X31 + 0x40]
	0x01D48BE8 LDP X22, X21, [X31 + 0x30]
	0x01D48BEC LDP X24, X23, [X31 + 0x20]
	0x01D48BF0 LDP X30, X25, [X31 + 0x10]
	0x01D48BF4 ADD X31, X31, 0x50
	0x01D48BF8 RET
	0x01D48BFC BL 0x1C16F20
	0x01D48C00 SUB X31, X31, 0xB0
	0x01D48C04 STR X30, [X31 + 0x80]
	0x01D48C08 STP X22, X21, [X31 + 0x90]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+96], X30
	003 Move [X31+104], X21
	004 Move [X31+112], X20
	005 Move [X31+120], X19
	006 Move X20, 0x2691000
	007 Move X19, 0x23AD000
	008 Move W8, [X20+1908]
	009 Move X19, [X19+1688]
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {28}
	014 Move X0, 0x23AD000
	015 Move X0, [X0+1696]
	016 Call 0x1C17CF4
	017 Move X0, 0x23AD000
	018 Move X0, [X0+1720]
	019 Call 0x1C17CF4
	020 Move X0, 0x23AD000
	021 Move X0, [X0+1712]
	022 Call 0x1C17CF4
	023 Move X0, 0x23AD000
	024 Move X0, [X0+1688]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X20+1908], W8
	028 Move X0, [X19]
	029 NotImplemented "Instruction MOVI not yet implemented."
	030 Move [X31+64], V0
	031 Move [X31+72], V0
	032 Move [X31+32], V0
	033 Move [X31+40], V0
	034 Move X21, 0x23AD000
	035 Move X19, 0x23AD000
	036 Move X20, 0x23AD000
	037 Move W8, [X0+224]
	038 Move X21, [X21+1696]
	039 Move X19, [X19+1720]
	040 Move X20, [X20+1712]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Move X0, [X21]
	045 Add X8, X31, 8
	046 Call AsyncTaskMethodBuilder`1<AuthResult>.Create
	047 NotImplemented "Instruction LDUR not yet implemented."
	048 Move X9, [X31+24]
	049 Move X2, [X19]
	050 Add X8, X31, 32
	051 Or X19, X8, 15
	052 Move TEMP, 0
	053 Not TEMP
	054 Move W10, TEMP
	055 Add X1, X31, 32
	056 Move X0, X19
	057 Move [X31+40], V0
	058 Move [X31+56], X9
	059 Move [X31+32], W10
	060 Call AsyncTaskMethodBuilder`1<AuthResult>.Start, X0, X1
	061 Move X1, [X20]
	062 Move X0, X19
	063 Call AsyncTaskMethodBuilder`1<AuthResult>.get_Task, X0
	064 Move X20, [X31+112]
	065 Move X19, [X31+120]
	066 Move X30, [X31+96]
	067 Move X21, [X31+104]
	068 Add X31, X31, 128
	069 Return X0

Method: System.Collections.Generic.Dictionary`2<System.String, System.String> GetAuthVars(System.Collections.Generic.Dictionary`2<System.String, System.String> vars = null)

Disassembly:
	0x01D48C0C STP X20, X19, [X31 + 0xA0]
	0x01D48C10 ADRP X20, 0x2690000
	0x01D48C14 LDRB W8, [X20 + 0x77D]
	0x01D48C18 MOV X19, X0
	0x01D48C1C TBNZ X8, 0x0, 0x1D48CC4
	0x01D48C20 ADRP X0, 0x23AC000
	0x01D48C24 LDR X0, [X0 + 0x788]
	0x01D48C28 BL 0x1C16CF4
	0x01D48C2C ADRP X0, 0x23AC000
	0x01D48C30 LDR X0, [X0 + 0x790]
	0x01D48C34 BL 0x1C16CF4
	0x01D48C38 ADRP X0, 0x23AC000
	0x01D48C3C LDR X0, [X0 + 0x798]
	0x01D48C40 BL 0x1C16CF4
	0x01D48C44 ADRP X0, 0x23AC000
	0x01D48C48 LDR X0, [X0 + 0x698]
	0x01D48C4C BL 0x1C16CF4
	0x01D48C50 ADRP X0, 0x23AB000
	0x01D48C54 LDR X0, [X0 + 0x758]
	0x01D48C58 BL 0x1C16CF4
	0x01D48C5C ADRP X0, 0x23AB000
	0x01D48C60 LDR X0, [X0 + 0x788]
	0x01D48C64 BL 0x1C16CF4
	0x01D48C68 ADRP X0, 0x23AC000
	0x01D48C6C LDR X0, [X0 + 0x7A0]
	0x01D48C70 BL 0x1C16CF4
	0x01D48C74 ADRP X0, 0x23AC000
	0x01D48C78 LDR X0, [X0 + 0x7A8]
	0x01D48C7C BL 0x1C16CF4
	0x01D48C80 ADRP X0, 0x23AC000
	0x01D48C84 LDR X0, [X0 + 0x7B0]
	0x01D48C88 BL 0x1C16CF4
	0x01D48C8C ADRP X0, 0x23AC000
	0x01D48C90 LDR X0, [X0 + 0x7B8]
	0x01D48C94 BL 0x1C16CF4
	0x01D48C98 ADRP X0, 0x23AC000
	0x01D48C9C LDR X0, [X0 + 0x718]
	0x01D48CA0 BL 0x1C16CF4
	0x01D48CA4 ADRP X0, 0x23AC000
	0x01D48CA8 LDR X0, [X0 + 0x7C0]
	0x01D48CAC BL 0x1C16CF4
	0x01D48CB0 ADRP X0, 0x23AC000
	0x01D48CB4 LDR X0, [X0 + 0x7C8]
	0x01D48CB8 BL 0x1C16CF4
	0x01D48CBC MOVZ W8, 0x1
	0x01D48CC0 STRB W8, [X20 + 0x77D]
	0x01D48CC4 STR X31, [X31 + 0x88]
	0x01D48CC8 STR X31, [X31 + 0x18]
	0x01D48CCC ADRP X21, 0x23AC000
	0x01D48CD0 LDR W8, [X19]
	0x01D48CD4 LDR X21, [X21 + 0x698]
	0x01D48CD8 CBZ W8, 0x1D48CFC
	0x01D48CDC CMP W8, 0x1
	0x01D48CE0 B.NE 0x1D48D14
	0x01D48CE4 LDR X8, [X19 + 0x58]
	0x01D48CE8 MOVN W9, 0x0
	0x01D48CEC STR X8, [X31 + 0x18]
	0x01D48CF0 STR X31, [X19 + 0x58]
	0x01D48CF4 STR W9, [X19]
	0x01D48CF8 B 0x1D48E90
	0x01D48CFC LDR X8, [X19 + 0x50]
	0x01D48D00 MOVN W9, 0x0
	0x01D48D04 STR X8, [X31 + 0x88]
	0x01D48D08 STR X31, [X19 + 0x50]
	0x01D48D0C STR W9, [X19]
	0x01D48D10 B 0x1D48D74
	0x01D48D14 MOVZ W9, 0x1388
	0x01D48D18 STP X31, X31, [X19 + 0x38]
	0x01D48D1C STR X31, [X19 + 0x30]
	0x01D48D20 MOVZ W8, 0x1
	0x01D48D24 STR W9, [X19 + 0x28]
	0x01D48D28 B 0x1D48EB0
	0x01D48D2C LDR X8, [X19 + 0x20]
	0x01D48D30 CBZ X8, 0x1D48FBC
	0x01D48D34 LDR X0, [X8 + 0x40]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x2691000
	006 Move W8, [X20+1909]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {32}
	012 Move X0, 0x23AC000
	013 Move X0, [X0+1608]
	014 Call 0x1C17CF4
	015 Move X0, 0x23AD000
	016 Move X0, [X0+1728]
	017 Call 0x1C17CF4
	018 Move X0, 0x23AD000
	019 Move X0, [X0+1736]
	020 Call 0x1C17CF4
	021 Move X0, 0x23AD000
	022 Move X0, [X0+1744]
	023 Call 0x1C17CF4
	024 Move X0, 0x23AC000
	025 Move X0, [X0+3528]
	026 Call 0x1C17CF4
	027 Move X0, 0x23AD000
	028 Move X0, [X0+1752]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X20+1909], W8
	032 Move X20, 0x23AC000
	033 Move X20, [X20+1608]
	034 Compare X19, 0
	035 JumpIfNotEqual {45}
	036 Move X8, 0x23AD000
	037 Move X8, [X8+1744]
	038 Move X0, [X8]
	039 Call 0x1C17F10
	040 Move X8, 0x23AD000
	041 Move X8, [X8+1728]
	042 Move X19, X0
	043 Move X1, [X8]
	044 Call Dictionary`2<Object, Object>..ctor, X0
	045 Move X0, [X20]
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1C17DFC
	050 Move X21, 0x2691000
	051 Move W8, [X21+1927]
	052 Compare W8, 0
	053 JumpIfNotEqual {59}
	054 Move X0, 0x23AC000
	055 Move X0, [X0+1608]
	056 Call 0x1C17CF4
	057 Move W8, 1
	058 Move [X21+1927], W8
	059 Move X0, [X20]
	060 Move W8, [X0+224]
	061 Compare W8, 0
	062 JumpIfNotEqual {65}
	063 Call 0x1C17DFC
	064 Move X0, [X20]
	065 Move X8, [X0+184]
	066 Move X8, [X8]
	067 Compare X8, 0
	068 JumpIfEqual {89}
	069 Move X8, [X8+128]
	070 Compare X8, 0
	071 JumpIfEqual {89}
	072 Compare X19, 0
	073 JumpIfEqual {89}
	074 Move X9, 0x23AD000
	075 Move X10, 0x23AD000
	076 Move X9, [X9+1752]
	077 Move X10, [X10+1736]
	078 Move X2, [X8+80]
	079 Move X0, X19
	080 Move X1, [X9]
	081 Move X3, [X10]
	082 Call Dictionary`2<Object, Object>.set_Item, X0, X1, X2
	083 Move X0, X19
	084 Move X20, [X31+16]
	085 Move X19, [X31+24]
	086 Move X30, [X31+32]
	087 Move X21, [X31+40]
	088 Return X0
	089 Call 0x1C17F20

Method: System.String GetAuthDeviceID()

Disassembly:
	0x01D39C70 BL 0x1C16D08
	0x01D39C74 MOV X1, X0
	0x01D39C78 MOV X0, X19
	0x01D39C7C BL 0x1C16DEC
	0x01D39C80 LDR X0, [X0 + 0x18]
	0x01D39C84 RET
	0x01D39C88 RET
	0x01D39C8C STR X30, [X31 - 0x30]!
	0x01D39C90 STP X22, X21, [X31 + 0x10]
	0x01D39C94 STP X20, X19, [X31 + 0x20]
	0x01D39C98 ADRP X20, 0x269F000
	0x01D39C9C LDRB W8, [X20 + 0x700]
	0x01D39CA0 MOV X19, X0
	0x01D39CA4 TBNZ X8, 0x0, 0x1D39D40
	0x01D39CA8 ADRP X0, 0x23BA000
	0x01D39CAC LDR X0, [X0 + 0xD28]
	0x01D39CB0 BL 0x1C16CF4
	0x01D39CB4 ADRP X0, 0x23BA000
	0x01D39CB8 LDR X0, [X0 + 0x970]
	0x01D39CBC BL 0x1C16CF4
	0x01D39CC0 ADRP X0, 0x23BA000
	0x01D39CC4 LDR X0, [X0 + 0xB60]
	0x01D39CC8 BL 0x1C16CF4
	0x01D39CCC ADRP X0, 0x23BA000
	0x01D39CD0 LDR X0, [X0 + 0x788]
	0x01D39CD4 BL 0x1C16CF4
	0x01D39CD8 ADRP X0, 0x23BA000
	0x01D39CDC LDR X0, [X0 + 0xD30]
	0x01D39CE0 BL 0x1C16CF4
	0x01D39CE4 ADRP X0, 0x23BA000
	0x01D39CE8 LDR X0, [X0 + 0xD38]
	0x01D39CEC BL 0x1C16CF4
	0x01D39CF0 ADRP X0, 0x23BA000
	0x01D39CF4 LDR X0, [X0 + 0xD40]
	0x01D39CF8 BL 0x1C16CF4
	0x01D39CFC ADRP X0, 0x23BA000
	0x01D39D00 LDR X0, [X0 + 0xD48]
	0x01D39D04 BL 0x1C16CF4
	0x01D39D08 ADRP X0, 0x23BA000
	0x01D39D0C LDR X0, [X0 + 0xD50]
	0x01D39D10 BL 0x1C16CF4
	0x01D39D14 ADRP X0, 0x23BA000
	0x01D39D18 LDR X0, [X0 + 0xB20]
	0x01D39D1C BL 0x1C16CF4
	0x01D39D20 ADRP X0, 0x23BA000
	0x01D39D24 LDR X0, [X0 + 0xD58]
	0x01D39D28 BL 0x1C16CF4
	0x01D39D2C ADRP X0, 0x23BA000
	0x01D39D30 LDR X0, [X0 + 0xD60]
	0x01D39D34 BL 0x1C16CF4
	0x01D39D38 MOVZ W8, 0x1
	0x01D39D3C STRB W8, [X20 + 0x700]
	0x01D39D40 LDR W8, [X19 + 0x10]
	0x01D39D44 CMP W8, 0x2
	0x01D39D48 B.EQ 0x1D39ECC

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x26A0000
	007 Move X21, 0x23BB000
	008 Move X19, 0x23BB000
	009 Move W8, [X20+1910]
	010 Move X21, [X21+3024]
	011 Move X19, [X19+3032]
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x23BB000
	017 Move X0, [X0+3032]
	018 Call 0x1C17CF4
	019 Move X0, 0x23BB000
	020 Move X0, [X0+3024]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X20+1910], W8
	024 Move X0, X31
	025 Move [X31], X31
	026 Move [X31+8], X31
	027 Call SystemInfo.get_deviceUniqueIdentifier
	028 Move X8, [X21]
	029 Move X1, X0
	030 Move X2, X31
	031 Move X0, X8
	032 Call PlayerPrefs.GetString, X0, X1
	033 Move X1, [X19]
	034 Move X2, X31
	035 Move X19, X0
	036 Call String.op_Equality, X0, X1
	037 Move X20, X19
	038 Move TEMP, X0
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfNotEqual {50}
	042 Move X0, X31
	043 Call Guid.NewGuid
	044 Move [X31], X0
	045 Move [X31+8], X1
	046 Add X0, X31, 0
	047 Move X1, X31
	048 Call Guid.ToString, X0
	049 Move X20, X0
	050 Move X0, X19
	051 Move X1, X20
	052 Move X2, X31
	053 Call String.op_Inequality, X0, X1
	054 Move TEMP, X0
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfNotEqual {64}
	058 Move X0, [X21]
	059 Move X1, X20
	060 Move X2, X31
	061 Call PlayerPrefs.SetString, X0, X1
	062 Move X0, X31
	063 Call PlayerPrefs.Save
	064 Move X0, X20
	065 Move X20, [X31+32]
	066 Move X19, [X31+40]
	067 Move X30, [X31+16]
	068 Move X21, [X31+24]
	069 Add X31, X31, 48
	070 Return X0

Method: System.Void LogAuthEvent(AnimalCompany.AuthCommands/AuthResult result, System.String method)

Disassembly:
	0x01D48D38 LDR X1, [X8 + 0x28]
	0x01D48D3C LDR X9, [X8 + 0x18]
	0x01D48D40 BLR X9
	0x01D48D44 CBZ X0, 0x1D48FB8
	0x01D48D48 ADRP X8, 0x23AC000
	0x01D48D4C LDR X8, [X8 + 0x7B0]
	0x01D48D50 LDR X1, [X8]
	0x01D48D54 BL 0x26AD88C
	0x01D48D58 ADRP X8, 0x23AC000
	0x01D48D5C LDR X8, [X8 + 0x7A8]
	0x01D48D60 STR X0, [X31 + 0x88]
	0x01D48D64 LDR X1, [X8]
	0x01D48D68 ADD X0, X31, 0x88
	0x01D48D6C BL 0x2678050
	0x01D48D70 TBZ X0, 0x0, 0x1D48F2C
	0x01D48D74 ADRP X8, 0x23AC000
	0x01D48D78 LDR X8, [X8 + 0x7A0]
	0x01D48D7C LDR X1, [X8]
	0x01D48D80 ADD X8, X31, 0x60
	0x01D48D84 ADD X0, X31, 0x88
	0x01D48D88 BL 0x2678094
	0x01D48D8C LDR V0, [X31 + 0x6]
	0x01D48D90 LDR X8, [X31 + 0x70]
	0x01D48D94 STR V0, [X31 + 0x2]
	0x01D48D98 STR X8, [X31 + 0x30]
	0x01D48D9C STR V0, [X19 + 0x3]
	0x01D48DA0 LDR X9, [X19 + 0x30]
	0x01D48DA4 STR X8, [X19 + 0x40]
	0x01D48DA8 CBNZ X9, 0x1D48EBC
	0x01D48DAC ADRP X22, 0x23AB000
	0x01D48DB0 LDR X22, [X22 + 0x758]
	0x01D48DB4 LDR W8, [X19 + 0x48]
	0x01D48DB8 LDR X0, [X22]
	0x01D48DBC STR W8, [X31 + 0x60]
	0x01D48DC0 ADD X1, X31, 0x60
	0x01D48DC4 BL 0x1C16E04
	0x01D48DC8 MOV X20, X0
	0x01D48DCC LDR W8, [X19 + 0x28]
	0x01D48DD0 LDR X0, [X22]
	0x01D48DD4 STR W8, [X31]
	0x01D48DD8 ADD X1, X31, 0x0
	0x01D48DDC BL 0x1C16E04
	0x01D48DE0 ADRP X8, 0x23AC000
	0x01D48DE4 LDR X8, [X8 + 0x7C8]
	0x01D48DE8 MOV X2, X0
	0x01D48DEC LDR X0, [X8]
	0x01D48DF0 MOV X1, X20
	0x01D48DF4 MOV X3, X31
	0x01D48DF8 BL 0x3227BD4
	0x01D48DFC ADRP X8, 0x23AB000
	0x01D48E00 LDR X8, [X8 + 0x788]
	0x01D48E04 MOV X20, X0
	0x01D48E08 LDR X0, [X8]
	0x01D48E0C LDR W8, [X0 + 0xE0]
	0x01D48E10 CBNZ W8, 0x1D48E18
	0x01D48E14 BL 0x1C16DFC
	0x01D48E18 ADRP X8, 0x23AC000
	0x01D48E1C ADRP X9, 0x23AC000
	0x01D48E20 LDR X8, [X8 + 0x718]
	0x01D48E24 LDR X9, [X9 + 0x7C0]
	0x01D48E28 LDR X3, [X8]
	0x01D48E2C LDR X4, [X9]
	0x01D48E30 MOVZ W0, 0x800
	0x01D48E34 MOVZ W5, 0xB9
	0x01D48E38 MOV X1, X20
	0x01D48E3C MOV X2, X31
	0x01D48E40 MOV X6, X31
	0x01D48E44 BL 0x35C25CC
	0x01D48E48 ADRP X8, 0x23AC000
	0x01D48E4C LDR X8, [X8 + 0x7B8]
	0x01D48E50 LDR W20, [X19 + 0x28]
	0x01D48E54 LDR X0, [X8]
	0x01D48E58 LDR W8, [X0 + 0xE0]
	0x01D48E5C CBNZ W8, 0x1D48E64
	0x01D48E60 BL 0x1C16DFC
	0x01D48E64 MOV W0, W20
	0x01D48E68 MOV X1, X31
	0x01D48E6C BL 0x33F53C4
	0x01D48E70 CBZ X0, 0x1D48FC0
	0x01D48E74 MOV X1, X31
	0x01D48E78 BL 0x33ED394
	0x01D48E7C STR X0, [X31 + 0x18]
	0x01D48E80 ADD X0, X31, 0x18
	0x01D48E84 MOV X1, X31
	0x01D48E88 BL 0x32C3A80
	0x01D48E8C TBZ X0, 0x0, 0x1D48F68
	0x01D48E90 ADD X0, X31, 0x18
	0x01D48E94 MOV X1, X31
	0x01D48E98 BL 0x32C3B4C
	0x01D48E9C LDR W8, [X19 + 0x28]
	0x01D48EA0 LDR W9, [X19 + 0x48]
	0x01D48EA4 UBFM W10, W8, 0x1F, 0x1E
	0x01D48EA8 ADD W8, W9, 0x1
	0x01D48EAC STR W10, [X19 + 0x28]
	0x01D48EB0 CMP W8, 0x4
	0x01D48EB4 STR W8, [X19 + 0x48]
	0x01D48EB8 B.LT 0x1D48D2C
	0x01D48EBC ADD X8, X19, 0x30
	0x01D48EC0 LDR X9, [X8 + 0x10]
	0x01D48EC4 LDR V0, [X8]
	0x01D48EC8 MOVN W10, 0x1
	0x01D48ECC ADRP X20, 0x23AC000
	0x01D48ED0 STR X9, [X31 + 0x50]
	0x01D48ED4 STR V0, [X31 + 0x4]
	0x01D48ED8 STR W10, [X19], #0x8
	0x01D48EDC STP X31, X31, [X8]
	0x01D48EE0 STR X31, [X8 + 0x10]
	0x01D48EE4 LDR V0, [X31 + 0x4]
	0x01D48EE8 LDR X0, [X21]
	0x01D48EEC MOV X8, X9
	0x01D48EF0 STR X8, [X31 + 0x10]
	0x01D48EF4 STR V0, [X31]
	0x01D48EF8 LDR W8, [X0 + 0xE0]
	0x01D48EFC LDR X20, [X20 + 0x798]
	0x01D48F00 CBNZ W8, 0x1D48F08
	0x01D48F04 BL 0x1C16DFC
	0x01D48F08 LDR V0, [X31]
	0x01D48F0C LDR X8, [X31 + 0x10]
	0x01D48F10 LDR X2, [X20]
	0x01D48F14 ADD X1, X31, 0x60
	0x01D48F18 MOV X0, X19
	0x01D48F1C STR V0, [X31 + 0x6]
	0x01D48F20 STR X8, [X31 + 0x70]

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X23, 0x2691000
	013 Move X24, 0x23AC000
	014 Move X21, 0x23AC000
	015 Move X22, 0x23AC000
	016 Move W8, [X23+1911]
	017 Move X24, [X24+1824]
	018 Move X21, [X21+1816]
	019 Move X22, [X22+2904]
	020 Move X19, X1
	021 Move X20, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {61}
	026 Move X0, 0x23AC000
	027 Move X0, [X0+2896]
	028 Call 0x1C17CF4
	029 Move X0, 0x23AC000
	030 Move X0, [X0+2904]
	031 Call 0x1C17CF4
	032 Move X0, 0x23AC000
	033 Move X0, [X0+1808]
	034 Call 0x1C17CF4
	035 Move X0, 0x23AC000
	036 Move X0, [X0+1816]
	037 Call 0x1C17CF4
	038 Move X0, 0x23AC000
	039 Move X0, [X0+1824]
	040 Call 0x1C17CF4
	041 Move X0, 0x23AC000
	042 Move X0, [X0+2696]
	043 Call 0x1C17CF4
	044 Move X0, 0x23AC000
	045 Move X0, [X0+2984]
	046 Call 0x1C17CF4
	047 Move X0, 0x23AD000
	048 Move X0, [X0+1760]
	049 Call 0x1C17CF4
	050 Move X0, 0x23AC000
	051 Move X0, [X0+2992]
	052 Call 0x1C17CF4
	053 Move X0, 0x23AD000
	054 Move X0, [X0+1768]
	055 Call 0x1C17CF4
	056 Move X0, 0x23AC000
	057 Move X0, [X0+3016]
	058 Call 0x1C17CF4
	059 Move W8, 1
	060 Move [X23+1911], W8
	061 Move X0, [X24]
	062 Call 0x1C17F10
	063 Move X1, [X21]
	064 Move X21, X0
	065 Call Dictionary`2<Object, Object>..ctor, X0
	066 Move X8, [X20]
	067 Move X0, [X22]
	068 Add X1, X31, 12
	069 NotImplemented "Instruction CMP not yet implemented."
	070 NotImplemented "Instruction CSET not yet implemented."
	071 Move [X31+12], W8
	072 Call 0x1C17E04
	073 Compare X21, 0
	074 JumpIfEqual {138}
	075 Move X8, 0x23AC000
	076 Move X23, 0x23AC000
	077 Move X8, [X8+2992]
	078 Move X23, [X23+1808]
	079 Move X24, 0x23AC000
	080 Move X25, 0x23AC000
	081 Move X26, 0x23AC000
	082 Move X24, [X24+3016]
	083 Move X25, [X25+2696]
	084 Move X26, [X26+2984]
	085 Move X1, [X8]
	086 Move X3, [X23]
	087 Move X27, 0x23AD000
	088 Move X28, 0x23AC000
	089 Move X22, 0x23AD000
	090 Move X27, [X27+1768]
	091 Move X28, [X28+2896]
	092 Move X22, [X22+1760]
	093 Move X2, X0
	094 Move X0, X21
	095 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	096 Call AuthCommands.GetAuthDeviceID
	097 Move X1, [X24]
	098 Move X3, [X23]
	099 Move X2, X0
	100 Move X0, X21
	101 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	102 Move W8, [X20+8]
	103 Move X0, [X25]
	104 Add X1, X31, 8
	105 Move [X31+8], W8
	106 Call 0x1C17E04
	107 Move X1, [X26]
	108 Move X3, [X23]
	109 Move X2, X0
	110 Move X0, X21
	111 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	112 Move X1, [X27]
	113 Move X3, [X23]
	114 Move X0, X21
	115 Move X2, X19
	116 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	117 Move X0, [X28]
	118 Move W8, [X0+224]
	119 Compare W8, 0
	120 JumpIfNotEqual {122}
	121 Call 0x1C17DFC
	122 Move X0, [X22]
	123 Move X1, X21
	124 Move X2, X31
	125 Call Analytics.Track, X0, X1
	126 Move X20, [X31+80]
	127 Move X19, [X31+88]
	128 Move X22, [X31+64]
	129 Move X21, [X31+72]
	130 Move X24, [X31+48]
	131 Move X23, [X31+56]
	132 Move X26, [X31+32]
	133 Move X25, [X31+40]
	134 Move X28, [X31+16]
	135 Move X27, [X31+24]
	136 Move X30, [X31+96]
	137 Return 
	138 Call 0x1C17F20

Method: System.Boolean ShouldLogAsError(AnimalCompany.AuthCommands/LoginErrorCode errorCode)

Disassembly:
	0x01D48F34 STR X8, [X19 + 0x50]
	0x01D48F38 LDR X0, [X21]
	0x01D48F3C LDR W8, [X0 + 0xE0]
	0x01D48F40 CBNZ W8, 0x1D48F48
	0x01D48F44 BL 0x1C16DFC
	0x01D48F48 ADRP X8, 0x23AC000
	0x01D48F4C LDR X8, [X8 + 0x788]
	0x01D48F50 ADD X0, X19, 0x8

ISIL:
	001 Move W8, W0
	002 Move W0, W31
	003 Compare W8, 0
	004 JumpIfEqual {6}
	005 NotImplemented "Instruction CMP not yet implemented."
	006 Return X0
	007 Move W0, 1
	008 Return X0

Method: System.Boolean TryParseAuthError(System.Exception exc, ref AnimalCompany.AuthCommands/AuthResult result)

Disassembly:
	0x01D48F54 LDR X3, [X8]
	0x01D48F58 ADD X1, X31, 0x88
	0x01D48F5C MOV X2, X19
	0x01D48F60 BL 0x212C3B4
	0x01D48F64 B 0x1D48FA4
	0x01D48F68 MOVZ W8, 0x1
	0x01D48F6C STR W8, [X19]
	0x01D48F70 LDR X8, [X31 + 0x18]
	0x01D48F74 STR X8, [X19 + 0x58]
	0x01D48F78 LDR X0, [X21]
	0x01D48F7C LDR W8, [X0 + 0xE0]
	0x01D48F80 CBNZ W8, 0x1D48F88
	0x01D48F84 BL 0x1C16DFC
	0x01D48F88 ADRP X8, 0x23AC000
	0x01D48F8C LDR X8, [X8 + 0x790]
	0x01D48F90 ADD X0, X19, 0x8
	0x01D48F94 LDR X3, [X8]
	0x01D48F98 ADD X1, X31, 0x18
	0x01D48F9C MOV X2, X19
	0x01D48FA0 BL 0x212C5C8
	0x01D48FA4 LDP X20, X19, [X31 + 0xA0]
	0x01D48FA8 LDP X22, X21, [X31 + 0x90]
	0x01D48FAC LDR X30, [X31 + 0x80]
	0x01D48FB0 ADD X31, X31, 0xB0
	0x01D48FB4 RET
	0x01D48FB8 BL 0x1C16F20
	0x01D48FBC BL 0x1C16F20
	0x01D48FC0 BL 0x1C16F20
	0x01D48FC4 B 0x1D48FFC
	0x01D48FC8 B 0x1D48FFC
	0x01D48FCC B 0x1D48FFC
	0x01D48FD0 B 0x1D48FFC
	0x01D48FD4 B 0x1D48FFC
	0x01D48FD8 B 0x1D48FFC
	0x01D48FDC B 0x1D48FFC
	0x01D48FE0 B 0x1D48FFC
	0x01D48FE4 B 0x1D48FFC
	0x01D48FE8 B 0x1D48FFC
	0x01D48FEC B 0x1D48FFC
	0x01D48FF0 B 0x1D48FFC
	0x01D48FF4 B 0x1D48FFC
	0x01D48FF8 B 0x1D48FFC
	0x01D48FFC MOV X20, X0
	0x01D49000 CMP W1, 0x1
	0x01D49004 B.NE 0x1D490A8
	0x01D49008 MOV X0, X20
	0x01D4900C BL 0x3EB1AD0
	0x01D49010 MOV X20, X0
	0x01D49014 ADRP X0, 0x23AA000
	0x01D49018 LDR X0, [X0 + 0x7D0]
	0x01D4901C BL 0x1C16D08
	0x01D49020 LDR X8, [X20]
	0x01D49024 LDR X1, [X8]
	0x01D49028 BL 0x1C17270
	0x01D4902C TBZ X0, 0x0, 0x1D49080
	0x01D49030 LDR X20, [X20]
	0x01D49034 BL 0x3EB1AE0
	0x01D49038 MOVN W8, 0x1
	0x01D4903C STP X31, X31, [X19 + 0x38]
	0x01D49040 STR X31, [X19 + 0x30]
	0x01D49044 STR W8, [X19], #0x8
	0x01D49048 ADRP X0, 0x23AB000
	0x01D4904C LDR X0, [X0 + 0x698]
	0x01D49050 BL 0x1C16D08
	0x01D49054 LDR W8, [X0 + 0xE0]
	0x01D49058 CBNZ W8, 0x1D49060
	0x01D4905C BL 0x1C16DFC
	0x01D49060 ADRP X0, 0x23AB000
	0x01D49064 LDR X0, [X0 + 0x7D0]
	0x01D49068 BL 0x1C16D08
	0x01D4906C MOV X2, X0
	0x01D49070 MOV X0, X19
	0x01D49074 MOV X1, X20
	0x01D49078 BL 0x263AE28
	0x01D4907C B 0x1D48FA4
	0x01D49080 MOVZ W0, 0x8
	0x01D49084 BL 0x3EB1AF0
	0x01D49088 LDR X8, [X20]
	0x01D4908C STR X8, [X0]
	0x01D49090 ADRP X1, 0x216B000
	0x01D49094 ADD X1, X1, 0xE58
	0x01D49098 MOV X2, X31
	0x01D4909C BL 0x3EB1B00
	0x01D490A0 MOV X20, X0
	0x01D490A4 BL 0x3EB1AE0
	0x01D490A8 MOV X0, X20
	0x01D490AC BL 0x1D2C690
	0x01D490B0 BL 0x1990590
	0x01D490B4 STR X30, [X31 - 0x30]!
	0x01D490B8 STP X22, X21, [X31 + 0x10]
	0x01D490BC STP X20, X19, [X31 + 0x20]
	0x01D490C0 ADRP X22, 0x268F000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x2691000
	006 Move W8, [X21+1912]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {27}
	013 Move X0, 0x23AD000
	014 Move X0, [X0+1776]
	015 Call 0x1C17CF4
	016 Move X0, 0x23AD000
	017 Move X0, [X0+1784]
	018 Call 0x1C17CF4
	019 Move X0, 0x23AD000
	020 Move X0, [X0+1792]
	021 Call 0x1C17CF4
	022 Move X0, 0x23AD000
	023 Move X0, [X0+1800]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+1912], W8
	027 Compare X20, 0
	028 JumpIfEqual {44}
	029 Move X8, 0x23AD000
	030 Move X8, [X8+1776]
	031 Move X9, [X8]
	032 Move X8, [X20]
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X9, 0x23AD000
	035 Move X9, [X9+1784]
	036 Move W11, [X8+304]
	037 Move X9, [X9]
	038 Move W10, [X9+304]
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move X11, [X8+200]
	041 Add X10, X11, X10
	042 NotImplemented "Instruction LDUR not yet implemented."
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move W8, [X19+8]
	045 Compare W8, 0
	046 JumpIfEqual {48}
	047 Move W0, W31
	048 Move W0, W31
	049 Move W8, 2
	050 Move [X19+8], W8
	051 Move X8, [X9+392]
	052 Move X1, [X9+400]
	053 Move X0, X20
	054 NotImplemented "Instruction BLR not yet implemented."
	055 Compare X0, 0
	056 JumpIfEqual {106}
	057 Move X8, 0x23AC000
	058 Move X8, [X8+1792]
	059 Move X2, X31
	060 Move X1, [X8]
	061 Call String.Contains, X0, X1
	062 Move TEMP, X0
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfNotEqual {67}
	066 Move W8, 12
	067 Move W8, [X19+8]
	068 Compare W8, 0
	069 JumpIfNotEqual {47}
	070 Move W0, W31
	071 Move W8, 9
	072 Move X9, [X8+392]
	073 Move X1, [X8+400]
	074 Move X0, X20
	075 NotImplemented "Instruction BLR not yet implemented."
	076 Compare X0, 0
	077 JumpIfEqual {106}
	078 Move X8, 0x23AC000
	079 Move X8, [X8+1800]
	080 Move X2, X31
	081 Move X1, [X8]
	082 Call String.Contains, X0, X1
	083 Move TEMP, X0
	084 And TEMP, TEMP, 1
	085 Compare TEMP, 1
	086 JumpIfNotEqual {101}
	087 Move W8, 8
	088 Move [X19+8], W8
	089 Move X8, [X20]
	090 Move X0, X20
	091 Move X9, [X8+392]
	092 Move X1, [X8+400]
	093 NotImplemented "Instruction BLR not yet implemented."
	094 Move [X19+16], X0
	095 Move W0, 1
	096 Move X20, [X31+16]
	097 Move X19, [X31+24]
	098 Move X30, [X31+32]
	099 Move X21, [X31+40]
	100 Return X0
	101 Move W8, [X19+8]
	102 Compare W8, 0
	103 JumpIfNotEqual {47}
	104 Move W0, W31
	105 Move W8, 10
	106 Call 0x1C17F20

