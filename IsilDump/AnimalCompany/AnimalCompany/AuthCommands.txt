Type: AnimalCompany.AuthCommands

Method: System.Threading.Tasks.Task`1<AnimalCompany.AuthCommands/LoginResult> LoginAsync(System.Threading.CancellationToken token = null)

Disassembly:
	0x01C8F878 BL 0x32276F8
	0x01C8F87C STP W26, W27, [X24 + 0x14]
	0x01C8F880 STP W28, W29, [X24 + 0x1C]
	0x01C8F884 CBZ X23, 0x1C8FFFC
	0x01C8F888 LDR X8, [X23]
	0x01C8F88C MOV X0, X24
	0x01C8F890 LDR X1, [X8 + 0x40]
	0x01C8F894 BL 0x1B6E8FC
	0x01C8F898 CBZ X0, 0x1C90004
	0x01C8F89C LDR W8, [X23 + 0x18]
	0x01C8F8A0 CBZ W8, 0x1C90000
	0x01C8F8A4 STR X24, [X23 + 0x20]
	0x01C8F8A8 ADRP X8, 0x22BE000
	0x01C8F8AC LDR X8, [X8 + 0x4E8]
	0x01C8F8B0 LDR X0, [X8]
	0x01C8F8B4 LDR W8, [X0 + 0xE0]
	0x01C8F8B8 CBNZ W8, 0x1C8F8C0
	0x01C8F8BC BL 0x1B6E8F8
	0x01C8F8C0 MOV X0, X23
	0x01C8F8C4 BL 0x1C8A19C
	0x01C8F8C8 MOV X0, X20
	0x01C8F8CC MOV X1, X31
	0x01C8F8D0 BL 0x3A9B084
	0x01C8F8D4 CBZ X0, 0x1C8FFFC
	0x01C8F8D8 ADRP X8, 0x22BE000
	0x01C8F8DC LDR X8, [X8 + 0xAE0]
	0x01C8F8E0 MOV X2, X31
	0x01C8F8E4 LDR X1, [X8]
	0x01C8F8E8 BL 0x3AA8EE0
	0x01C8F8EC CBZ X0, 0x1C8FFFC
	0x01C8F8F0 MOV X1, X31
	0x01C8F8F4 BL 0x3A9B0C0
	0x01C8F8F8 CBZ X0, 0x1C8FFFC
	0x01C8F8FC ADRP X8, 0x22BE000
	0x01C8F900 LDR X8, [X8 + 0xAA0]
	0x01C8F904 LDR X1, [X8]
	0x01C8F908 BL 0x20CEE08
	0x01C8F90C LDR X0, [X25]
	0x01C8F910 MOVZ W1, 0x1
	0x01C8F914 MOVZ W23, 0x1
	0x01C8F918 BL 0x1B6E868
	0x01C8F91C LDR V0, [X22]
	0x01C8F920 ADRP X8, 0x22BE000
	0x01C8F924 LDP X25, X24, [X31 + 0x20]
	0x01C8F928 MOV X20, X0
	0x01C8F92C STR V0, [X31]
	0x01C8F930 LDR X8, [X8 + 0xAA8]
	0x01C8F934 LDR X8, [X8]
	0x01C8F938 MOV X0, X8
	0x01C8F93C BL 0x1B6EA0C
	0x01C8F940 MOV X1, X31
	0x01C8F944 MOV X22, X0
	0x01C8F948 BL 0x32276F8
	0x01C8F94C LDR V0, [X31]
	0x01C8F950 STR W23, [X22 + 0x14]
	0x01C8F954 STP X24, X25, [X22 + 0x28]
	0x01C8F958 STUR V0, [X22 + 0x18]
	0x01C8F95C CBZ X20, 0x1C8FFFC

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+112], X30
	003 Move [X31+120], X21
	004 Move [X31+128], X20
	005 Move [X31+136], X19
	006 Move X20, 0x2595000
	007 Move X19, 0x22BF000
	008 Move W8, [X20+963]
	009 Move X19, [X19+2288]
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {28}
	014 Move X0, 0x22BF000
	015 Move X0, [X0+2296]
	016 Call 0x1B6F7F0
	017 Move X0, 0x22BF000
	018 Move X0, [X0+2304]
	019 Call 0x1B6F7F0
	020 Move X0, 0x22BF000
	021 Move X0, [X0+2312]
	022 Call 0x1B6F7F0
	023 Move X0, 0x22BF000
	024 Move X0, [X0+2288]
	025 Call 0x1B6F7F0
	026 Move W8, 1
	027 Move [X20+963], W8
	028 Move X0, [X19]
	029 NotImplemented "Instruction MOVI not yet implemented."
	030 Move [X31+80], V0
	031 Move [X31+88], V0
	032 Move [X31+48], V0
	033 Move [X31+56], V0
	034 Move [X31+2], V0
	035 Move X21, 0x22BF000
	036 Move X19, 0x22BF000
	037 Move X20, 0x22BF000
	038 Move W8, [X0+224]
	039 Move X21, [X21+2296]
	040 Move X19, [X19+2304]
	041 Move X20, [X20+2312]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1B6F8F8
	045 Move X0, [X21]
	046 Add X8, X31, 8
	047 Call AsyncTaskMethodBuilder`1<LoginResult>.Create
	048 NotImplemented "Instruction LDUR not yet implemented."
	049 Move X9, [X31+24]
	050 Move X2, [X19]
	051 Add X8, X31, 32
	052 Or X19, X8, 15
	053 Move TEMP, 0
	054 Not TEMP
	055 Move W10, TEMP
	056 Add X1, X31, 32
	057 Move X0, X19
	058 Move [X31+40], V0
	059 Move [X31+56], X9
	060 Move [X31+32], W10
	061 Call AsyncTaskMethodBuilder`1<LoginResult>.Start, X0, X1
	062 Move X1, [X20]
	063 Move X0, X19
	064 Call AsyncTaskMethodBuilder`1<LoginResult>.get_Task, X0
	065 Move X20, [X31+128]
	066 Move X19, [X31+136]
	067 Move X30, [X31+112]
	068 Move X21, [X31+120]
	069 Add X31, X31, 144
	070 Return X0

Method: System.Threading.Tasks.Task`1<AnimalCompany.AuthCommands/AuthResult> AuthRetryLoop(System.Func`1<System.Threading.Tasks.Task`1<AnimalCompany.AuthCommands/AuthResult>> authMethod)

Disassembly:
	0x01C9357C BL 0x1B6E7F0
	0x01C93580 ADRP X0, 0x22BA000
	0x01C93584 LDR X0, [X0 + 0xDD0]
	0x01C93588 BL 0x1B6E7F0
	0x01C9358C ADRP X0, 0x22BA000
	0x01C93590 LDR X0, [X0 + 0xDD8]
	0x01C93594 BL 0x1B6E7F0
	0x01C93598 ADRP X0, 0x22BA000
	0x01C9359C LDR X0, [X0 + 0xDE0]
	0x01C935A0 BL 0x1B6E7F0
	0x01C935A4 ADRP X0, 0x22BA000
	0x01C935A8 LDR X0, [X0 + 0xE20]
	0x01C935AC BL 0x1B6E7F0
	0x01C935B0 ADRP X0, 0x22BA000
	0x01C935B4 LDR X0, [X0 + 0xDE8]
	0x01C935B8 BL 0x1B6E7F0
	0x01C935BC ADRP X0, 0x22BA000
	0x01C935C0 LDR X0, [X0 + 0xE28]
	0x01C935C4 BL 0x1B6E7F0
	0x01C935C8 MOVZ W8, 0x1
	0x01C935CC STRB W8, [X21 + 0x3CE]
	0x01C935D0 CBZ X20, 0x1C9382C
	0x01C935D4 MOV X0, X20
	0x01C935D8 MOV X1, X31
	0x01C935DC BL 0x333A098
	0x01C935E0 TBZ X0, 0x0, 0x1C9360C
	0x01C935E4 LDR X8, [X20]
	0x01C935E8 MOV X0, X20
	0x01C935EC LDP X9, X1, [X8 + 0x178]
	0x01C935F0 BLR X9
	0x01C935F4 ADRP X8, 0x22BA000
	0x01C935F8 LDR X8, [X8 + 0xE28]
	0x01C935FC LDR X8, [X8]
	0x01C93600 CBZ X0, 0x1C93670
	0x01C93604 LDR X1, [X0 + 0x18]
	0x01C93608 B 0x1C93674
	0x01C9360C ADRP X8, 0x22BA000
	0x01C93610 LDR X8, [X8 + 0x628]
	0x01C93614 LDR X0, [X8]
	0x01C93618 LDR W8, [X0 + 0xE0]
	0x01C9361C CBNZ W8, 0x1C93624
	0x01C93620 BL 0x1B6E8F8
	0x01C93624 ADRP X8, 0x22BA000
	0x01C93628 ADRP X9, 0x22BA000
	0x01C9362C ADRP X10, 0x22BA000
	0x01C93630 LDR X8, [X8 + 0xE20]
	0x01C93634 LDR X9, [X9 + 0xDE8]
	0x01C93638 LDR X10, [X10 + 0xDE0]
	0x01C9363C MOVZ W0, 0x800
	0x01C93640 LDR X1, [X8]
	0x01C93644 LDR X3, [X9]
	0x01C93648 LDR X4, [X10]
	0x01C9364C MOVZ W5, 0xFE
	0x01C93650 MOV X2, X31
	0x01C93654 MOV X6, X31
	0x01C93658 BL 0x342B224
	0x01C9365C LDR X8, [X20 + 0x28]
	0x01C93660 CBZ X8, 0x1C9382C
	0x01C93664 LDR X8, [X8 + 0x10]
	0x01C93668 STR X8, [X19 + 0x40]
	0x01C9366C B 0x1C9380C

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+128], X30
	003 Move [X31+144], X22
	004 Move [X31+152], X21
	005 Move [X31+160], X20
	006 Move [X31+168], X19
	007 Move X21, 0x2591000
	008 Move X20, 0x22BB000
	009 Move W8, [X21+964]
	010 Move X20, [X20+3360]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0x22BB000
	017 Move X0, [X0+3368]
	018 Call 0x1B6F7F0
	019 Move X0, 0x22BB000
	020 Move X0, [X0+3376]
	021 Call 0x1B6F7F0
	022 Move X0, 0x22BB000
	023 Move X0, [X0+3384]
	024 Call 0x1B6F7F0
	025 Move X0, 0x22BB000
	026 Move X0, [X0+3360]
	027 Call 0x1B6F7F0
	028 Move W8, 1
	029 Move [X21+964], W8
	030 Move X0, [X20]
	031 NotImplemented "Instruction MOVI not yet implemented."
	032 Move [X31+96], V0
	033 Move [X31+104], V0
	034 Move [X31+64], V0
	035 Move [X31+72], V0
	036 Move [X31+32], V0
	037 Move [X31+40], V0
	038 Move X22, 0x22BB000
	039 Move X20, 0x22BB000
	040 Move X21, 0x22BB000
	041 Move W8, [X0+224]
	042 Move X22, [X22+3368]
	043 Move X20, [X20+3376]
	044 Move X21, [X21+3384]
	045 Compare W8, 0
	046 JumpIfNotEqual {48}
	047 Call 0x1B6F8F8
	048 Move X0, [X22]
	049 Add X8, X31, 8
	050 Call AsyncTaskMethodBuilder`1<AuthResult>.Create
	051 NotImplemented "Instruction LDUR not yet implemented."
	052 Move X9, [X31+24]
	053 Move X2, [X20]
	054 Add X8, X31, 32
	055 Or X20, X8, 15
	056 Move TEMP, 0
	057 Not TEMP
	058 Move W10, TEMP
	059 Add X1, X31, 32
	060 Move X0, X20
	061 Move [X31+40], V0
	062 Move [X31+56], X9
	063 Move [X31+64], X19
	064 Move [X31+32], W10
	065 Call AsyncTaskMethodBuilder`1<AuthResult>.Start, X0, X1
	066 Move X1, [X21]
	067 Move X0, X20
	068 Call AsyncTaskMethodBuilder`1<AuthResult>.get_Task, X0
	069 Move X20, [X31+160]
	070 Move X19, [X31+168]
	071 Move X22, [X31+144]
	072 Move X21, [X31+152]
	073 Move X30, [X31+128]
	074 Add X31, X31, 176
	075 Return X0

Method: System.Threading.Tasks.Task`1<AnimalCompany.AuthCommands/AuthResult> AuthenticateWithMetaQuestAccount()

Disassembly:
	0x01C93670 MOV X1, X31
	0x01C93674 MOV X0, X8
	0x01C93678 MOV X2, X31
	0x01C9367C BL 0x3084780
	0x01C93680 ADRP X8, 0x22BA000
	0x01C93684 LDR X8, [X8 + 0x5C0]
	0x01C93688 MOV X21, X0
	0x01C9368C LDR X8, [X8]
	0x01C93690 MOV X0, X8
	0x01C93694 BL 0x1B6EA0C
	0x01C93698 ADRP X8, 0x22BA000
	0x01C9369C LDR X8, [X8 + 0x5B8]
	0x01C936A0 MOV X22, X0
	0x01C936A4 LDR X1, [X8]
	0x01C936A8 BL 0x28F9A14
	0x01C936AC LDR X8, [X20]
	0x01C936B0 MOV X0, X20
	0x01C936B4 LDP X9, X1, [X8 + 0x178]
	0x01C936B8 BLR X9
	0x01C936BC ADRP X8, 0x22BA000
	0x01C936C0 LDR X8, [X8 + 0xDD8]
	0x01C936C4 LDR X23, [X8]
	0x01C936C8 CBZ X0, 0x1C936F0
	0x01C936CC ADRP X8, 0x22BA000
	0x01C936D0 LDR W1, [X0 + 0x10]
	0x01C936D4 LDR X8, [X8 + 0xDB0]
	0x01C936D8 ADD X0, X31, 0x8
	0x01C936DC STR X31, [X31 + 0x8]
	0x01C936E0 LDR X2, [X8]
	0x01C936E4 BL 0x22D480C
	0x01C936E8 LDR X8, [X31 + 0x8]
	0x01C936EC B 0x1C936F4
	0x01C936F0 MOV X8, X31
	0x01C936F4 ADRP X24, 0x22BA000
	0x01C936F8 LDR X24, [X24 + 0xDB8]
	0x01C936FC ADD X1, X31, 0x8
	0x01C93700 STR X8, [X31 + 0x8]
	0x01C93704 LDR X0, [X24]
	0x01C93708 BL 0x1B6E900
	0x01C9370C CBZ X22, 0x1C9382C
	0x01C93710 ADRP X25, 0x22BA000
	0x01C93714 LDR X25, [X25 + 0x5B0]
	0x01C93718 MOV X2, X0
	0x01C9371C MOV X0, X22
	0x01C93720 MOV X1, X23
	0x01C93724 LDR X3, [X25]
	0x01C93728 BL 0x28FA2A8
	0x01C9372C LDR X8, [X20]
	0x01C93730 MOV X0, X20
	0x01C93734 LDP X9, X1, [X8 + 0x178]
	0x01C93738 BLR X9
	0x01C9373C ADRP X8, 0x22BA000
	0x01C93740 LDR X8, [X8 + 0xDD0]
	0x01C93744 LDR X23, [X8]
	0x01C93748 CBZ X0, 0x1C93770
	0x01C9374C ADRP X8, 0x22BA000
	0x01C93750 LDR W1, [X0 + 0x14]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+96], X30
	003 Move [X31+104], X21
	004 Move [X31+112], X20
	005 Move [X31+120], X19
	006 Move X20, 0x2591000
	007 Move X19, 0x22BB000
	008 Move W8, [X20+965]
	009 Move X19, [X19+3360]
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {28}
	014 Move X0, 0x22BB000
	015 Move X0, [X0+3368]
	016 Call 0x1B6F7F0
	017 Move X0, 0x22BB000
	018 Move X0, [X0+3392]
	019 Call 0x1B6F7F0
	020 Move X0, 0x22BB000
	021 Move X0, [X0+3384]
	022 Call 0x1B6F7F0
	023 Move X0, 0x22BB000
	024 Move X0, [X0+3360]
	025 Call 0x1B6F7F0
	026 Move W8, 1
	027 Move [X20+965], W8
	028 Move X0, [X19]
	029 NotImplemented "Instruction MOVI not yet implemented."
	030 Move [X31+64], V0
	031 Move [X31+72], V0
	032 Move [X31+32], V0
	033 Move [X31+40], V0
	034 Move X21, 0x22BB000
	035 Move X19, 0x22BB000
	036 Move X20, 0x22BB000
	037 Move W8, [X0+224]
	038 Move X21, [X21+3368]
	039 Move X19, [X19+3392]
	040 Move X20, [X20+3384]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1B6F8F8
	044 Move X0, [X21]
	045 Add X8, X31, 8
	046 Call AsyncTaskMethodBuilder`1<AuthResult>.Create
	047 NotImplemented "Instruction LDUR not yet implemented."
	048 Move X9, [X31+24]
	049 Move X2, [X19]
	050 Add X8, X31, 32
	051 Or X19, X8, 15
	052 Move TEMP, 0
	053 Not TEMP
	054 Move W10, TEMP
	055 Add X1, X31, 32
	056 Move X0, X19
	057 Move [X31+40], V0
	058 Move [X31+56], X9
	059 Move [X31+32], W10
	060 Call AsyncTaskMethodBuilder`1<AuthResult>.Start, X0, X1
	061 Move X1, [X20]
	062 Move X0, X19
	063 Call AsyncTaskMethodBuilder`1<AuthResult>.get_Task, X0
	064 Move X20, [X31+112]
	065 Move X19, [X31+120]
	066 Move X30, [X31+96]
	067 Move X21, [X31+104]
	068 Add X31, X31, 128
	069 Return X0

Method: System.Threading.Tasks.Task`1<AnimalCompany.AuthCommands/AuthResult> AuthenticateWithDevice()

Disassembly:
	0x01C93754 LDR X8, [X8 + 0xDB0]
	0x01C93758 ADD X0, X31, 0x8
	0x01C9375C STR X31, [X31 + 0x8]
	0x01C93760 LDR X2, [X8]
	0x01C93764 BL 0x22D480C
	0x01C93768 LDR X8, [X31 + 0x8]
	0x01C9376C B 0x1C93774
	0x01C93770 MOV X8, X31
	0x01C93774 LDR X0, [X24]
	0x01C93778 ADD X1, X31, 0x8
	0x01C9377C STR X8, [X31 + 0x8]
	0x01C93780 BL 0x1B6E900
	0x01C93784 LDR X3, [X25]
	0x01C93788 MOV X2, X0
	0x01C9378C MOV X0, X22
	0x01C93790 MOV X1, X23
	0x01C93794 BL 0x28FA2A8
	0x01C93798 ADRP X8, 0x22BA000
	0x01C9379C LDR X8, [X8 + 0x628]
	0x01C937A0 LDR X0, [X8]
	0x01C937A4 LDR W8, [X0 + 0xE0]
	0x01C937A8 CBNZ W8, 0x1C937B0
	0x01C937AC BL 0x1B6E8F8
	0x01C937B0 ADRP X8, 0x22BA000
	0x01C937B4 ADRP X9, 0x22BA000
	0x01C937B8 LDR X8, [X8 + 0xDE8]
	0x01C937BC LDR X9, [X9 + 0xDE0]
	0x01C937C0 MOVZ W0, 0x800
	0x01C937C4 MOVZ W5, 0xF5
	0x01C937C8 LDR X3, [X8]
	0x01C937CC LDR X4, [X9]
	0x01C937D0 MOV X1, X21
	0x01C937D4 MOV X2, X22
	0x01C937D8 MOV X6, X31
	0x01C937DC BL 0x342B7DC
	0x01C937E0 MOVZ W8, 0x6
	0x01C937E4 STR W8, [X19 + 0x18]
	0x01C937E8 LDR X8, [X20]
	0x01C937EC MOV X0, X20
	0x01C937F0 LDP X9, X1, [X8 + 0x178]
	0x01C937F4 BLR X9
	0x01C937F8 CBZ X0, 0x1C93804
	0x01C937FC LDR X8, [X0 + 0x18]
	0x01C93800 B 0x1C93808
	0x01C93804 MOV X8, X31
	0x01C93808 STR X8, [X19 + 0x20]
	0x01C9380C MOVZ W8, 0x1
	0x01C93810 STRB W8, [X19 + 0x48]
	0x01C93814 LDP X20, X19, [X31 + 0x40]
	0x01C93818 LDP X22, X21, [X31 + 0x30]
	0x01C9381C LDP X24, X23, [X31 + 0x20]
	0x01C93820 LDP X30, X25, [X31 + 0x10]
	0x01C93824 ADD X31, X31, 0x50
	0x01C93828 RET
	0x01C9382C BL 0x1B6EA1C
	0x01C93830 SUB X31, X31, 0xB0
	0x01C93834 STR X30, [X31 + 0x80]
	0x01C93838 STP X22, X21, [X31 + 0x90]

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+112], X30
	003 Move [X31+120], X21
	004 Move [X31+128], X20
	005 Move [X31+136], X19
	006 Move X20, 0x2591000
	007 Move X19, 0x22BB000
	008 Move W8, [X20+966]
	009 Move X19, [X19+3360]
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {28}
	014 Move X0, 0x22BB000
	015 Move X0, [X0+3368]
	016 Call 0x1B6F7F0
	017 Move X0, 0x22BB000
	018 Move X0, [X0+3400]
	019 Call 0x1B6F7F0
	020 Move X0, 0x22BB000
	021 Move X0, [X0+3384]
	022 Call 0x1B6F7F0
	023 Move X0, 0x22BB000
	024 Move X0, [X0+3360]
	025 Call 0x1B6F7F0
	026 Move W8, 1
	027 Move [X20+966], W8
	028 Move X0, [X19]
	029 NotImplemented "Instruction MOVI not yet implemented."
	030 Move [X31+96], X31
	031 Move [X31+64], V0
	032 Move [X31+72], V0
	033 Move [X31+32], V0
	034 Move [X31+40], V0
	035 Move X21, 0x22BB000
	036 Move X19, 0x22BB000
	037 Move X20, 0x22BB000
	038 Move W8, [X0+224]
	039 Move X21, [X21+3368]
	040 Move X19, [X19+3400]
	041 Move X20, [X20+3384]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1B6F8F8
	045 Move X0, [X21]
	046 Add X8, X31, 8
	047 Call AsyncTaskMethodBuilder`1<AuthResult>.Create
	048 NotImplemented "Instruction LDUR not yet implemented."
	049 Move X9, [X31+24]
	050 Move X2, [X19]
	051 Add X8, X31, 32
	052 Or X19, X8, 15
	053 Move TEMP, 0
	054 Not TEMP
	055 Move W10, TEMP
	056 Add X1, X31, 32
	057 Move X0, X19
	058 Move [X31+40], V0
	059 Move [X31+56], X9
	060 Move [X31+32], W10
	061 Call AsyncTaskMethodBuilder`1<AuthResult>.Start, X0, X1
	062 Move X1, [X20]
	063 Move X0, X19
	064 Call AsyncTaskMethodBuilder`1<AuthResult>.get_Task, X0
	065 Move X20, [X31+128]
	066 Move X19, [X31+136]
	067 Move X30, [X31+112]
	068 Move X21, [X31+120]
	069 Add X31, X31, 144
	070 Return X0

Method: System.Collections.Generic.Dictionary`2<System.String, System.String> GetAuthVars(System.Collections.Generic.Dictionary`2<System.String, System.String> vars = null)

Disassembly:
	0x01C9383C STP X20, X19, [X31 + 0xA0]
	0x01C93840 ADRP X20, 0x2590000
	0x01C93844 LDRB W8, [X20 + 0x3CF]
	0x01C93848 MOV X19, X0
	0x01C9384C TBNZ X8, 0x0, 0x1C938F4
	0x01C93850 ADRP X0, 0x22BA000
	0x01C93854 LDR X0, [X0 + 0xE30]
	0x01C93858 BL 0x1B6E7F0
	0x01C9385C ADRP X0, 0x22BA000
	0x01C93860 LDR X0, [X0 + 0xE38]
	0x01C93864 BL 0x1B6E7F0
	0x01C93868 ADRP X0, 0x22BA000
	0x01C9386C LDR X0, [X0 + 0xE40]
	0x01C93870 BL 0x1B6E7F0
	0x01C93874 ADRP X0, 0x22BA000
	0x01C93878 LDR X0, [X0 + 0xD20]
	0x01C9387C BL 0x1B6E7F0
	0x01C93880 ADRP X0, 0x22BA000
	0x01C93884 LDR X0, [X0 + 0x5F8]
	0x01C93888 BL 0x1B6E7F0
	0x01C9388C ADRP X0, 0x22BA000
	0x01C93890 LDR X0, [X0 + 0x628]
	0x01C93894 BL 0x1B6E7F0
	0x01C93898 ADRP X0, 0x22BA000
	0x01C9389C LDR X0, [X0 + 0xE48]
	0x01C938A0 BL 0x1B6E7F0
	0x01C938A4 ADRP X0, 0x22BA000
	0x01C938A8 LDR X0, [X0 + 0xE50]
	0x01C938AC BL 0x1B6E7F0
	0x01C938B0 ADRP X0, 0x22BA000
	0x01C938B4 LDR X0, [X0 + 0xE58]
	0x01C938B8 BL 0x1B6E7F0
	0x01C938BC ADRP X0, 0x22BA000
	0x01C938C0 LDR X0, [X0 + 0xE60]
	0x01C938C4 BL 0x1B6E7F0
	0x01C938C8 ADRP X0, 0x22BA000
	0x01C938CC LDR X0, [X0 + 0xE68]
	0x01C938D0 BL 0x1B6E7F0
	0x01C938D4 ADRP X0, 0x22BA000
	0x01C938D8 LDR X0, [X0 + 0xE70]
	0x01C938DC BL 0x1B6E7F0
	0x01C938E0 ADRP X0, 0x22BA000
	0x01C938E4 LDR X0, [X0 + 0xDE8]
	0x01C938E8 BL 0x1B6E7F0
	0x01C938EC MOVZ W8, 0x1
	0x01C938F0 STRB W8, [X20 + 0x3CF]
	0x01C938F4 STR X31, [X31 + 0x88]
	0x01C938F8 STR X31, [X31 + 0x18]
	0x01C938FC ADRP X21, 0x22BA000
	0x01C93900 LDR W8, [X19]
	0x01C93904 LDR X21, [X21 + 0xD20]
	0x01C93908 CBZ W8, 0x1C9392C
	0x01C9390C CMP W8, 0x1
	0x01C93910 B.NE 0x1C93944
	0x01C93914 LDR X8, [X19 + 0x58]
	0x01C93918 MOVN W9, 0x0
	0x01C9391C STR X8, [X31 + 0x18]
	0x01C93920 STR X31, [X19 + 0x58]
	0x01C93924 STR W9, [X19]
	0x01C93928 B 0x1C93AC0
	0x01C9392C LDR X8, [X19 + 0x50]
	0x01C93930 MOVN W9, 0x0
	0x01C93934 STR X8, [X31 + 0x88]
	0x01C93938 STR X31, [X19 + 0x50]
	0x01C9393C STR W9, [X19]
	0x01C93940 B 0x1C939A4
	0x01C93944 MOVZ W9, 0x1388
	0x01C93948 STP X31, X31, [X19 + 0x38]
	0x01C9394C STR X31, [X19 + 0x30]
	0x01C93950 MOVZ W8, 0x1
	0x01C93954 STR W9, [X19 + 0x28]
	0x01C93958 B 0x1C93AE0
	0x01C9395C LDR X8, [X19 + 0x20]
	0x01C93960 CBZ X8, 0x1C93BEC
	0x01C93964 LDR X0, [X8 + 0x40]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x2591000
	006 Move W8, [X20+967]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {32}
	012 Move X0, 0x22BB000
	013 Move X0, [X0+1256]
	014 Call 0x1B6F7F0
	015 Move X0, 0x22BB000
	016 Move X0, [X0+3408]
	017 Call 0x1B6F7F0
	018 Move X0, 0x22BB000
	019 Move X0, [X0+3416]
	020 Call 0x1B6F7F0
	021 Move X0, 0x22BB000
	022 Move X0, [X0+3424]
	023 Call 0x1B6F7F0
	024 Move X0, 0x22BB000
	025 Move X0, [X0+3000]
	026 Call 0x1B6F7F0
	027 Move X0, 0x22BB000
	028 Move X0, [X0+3432]
	029 Call 0x1B6F7F0
	030 Move W8, 1
	031 Move [X20+967], W8
	032 Move X20, 0x22BB000
	033 Move X20, [X20+1256]
	034 Compare X19, 0
	035 JumpIfNotEqual {45}
	036 Move X8, 0x22BB000
	037 Move X8, [X8+3424]
	038 Move X0, [X8]
	039 Call 0x1B6FA0C
	040 Move X8, 0x22BB000
	041 Move X8, [X8+3408]
	042 Move X19, X0
	043 Move X1, [X8]
	044 Call Dictionary`2<Object, Object>..ctor, X0
	045 Move X0, [X20]
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1B6F8F8
	050 Move X21, 0x2591000
	051 Move W8, [X21+1091]
	052 Compare W8, 0
	053 JumpIfNotEqual {59}
	054 Move X0, 0x22BB000
	055 Move X0, [X0+1256]
	056 Call 0x1B6F7F0
	057 Move W8, 1
	058 Move [X21+1091], W8
	059 Move X0, [X20]
	060 Move W8, [X0+224]
	061 Compare W8, 0
	062 JumpIfNotEqual {65}
	063 Call 0x1B6F8F8
	064 Move X0, [X20]
	065 Move X8, [X0+184]
	066 Move X8, [X8]
	067 Compare X8, 0
	068 JumpIfEqual {89}
	069 Move X8, [X8+128]
	070 Compare X8, 0
	071 JumpIfEqual {89}
	072 Compare X19, 0
	073 JumpIfEqual {89}
	074 Move X9, 0x22BB000
	075 Move X10, 0x22BB000
	076 Move X9, [X9+3432]
	077 Move X10, [X10+3416]
	078 Move X2, [X8+80]
	079 Move X0, X19
	080 Move X1, [X9]
	081 Move X3, [X10]
	082 Call Dictionary`2<Object, Object>.set_Item, X0, X1, X2
	083 Move X0, X19
	084 Move X20, [X31+16]
	085 Move X19, [X31+24]
	086 Move X30, [X31+32]
	087 Move X21, [X31+40]
	088 Return X0
	089 Call 0x1B6FA1C

Method: System.String GetAuthDeviceID()

Disassembly:
	0x01C90444 MOV W0, W31
	0x01C90448 MOV X1, X31
	0x01C9044C STR X20, [X19 + 0x20]
	0x01C90450 BL 0x3424CAC
	0x01C90454 MOVZ W20, 0x1
	0x01C90458 STR X0, [X19 + 0x18]
	0x01C9045C STR W20, [X19 + 0x10]
	0x01C90460 B 0x1C905F8
	0x01C90464 LDR X21, [X19 + 0x20]
	0x01C90468 MOVN W8, 0x0
	0x01C9046C STR W8, [X19 + 0x10]
	0x01C90470 CBZ X21, 0x1C9060C
	0x01C90474 MOVZ W8, 0x1
	0x01C90478 STRB W8, [X21 + 0x10]
	0x01C9047C ADRP X8, 0x22BD000
	0x01C90480 LDR X8, [X8 + 0xB38]
	0x01C90484 LDR X0, [X8]
	0x01C90488 BL 0x1B6EA0C
	0x01C9048C ADRP X8, 0x22BD000
	0x01C90490 LDR X8, [X8 + 0xB40]
	0x01C90494 MOV X1, X21
	0x01C90498 MOV X3, X31
	0x01C9049C MOV X20, X0
	0x01C904A0 LDR X2, [X8]
	0x01C904A4 BL 0x27E7BCC
	0x01C904A8 STR X20, [X19 + 0x28]
	0x01C904AC ADRP X8, 0x22BD000
	0x01C904B0 LDR X8, [X8 + 0x800]
	0x01C904B4 LDR X0, [X8]
	0x01C904B8 LDR W8, [X0 + 0xE0]
	0x01C904BC CBNZ W8, 0x1C904C4
	0x01C904C0 BL 0x1B6E8F8
	0x01C904C4 MOV X0, X20
	0x01C904C8 MOV X1, X31
	0x01C904CC BL 0x3A6B400
	0x01C904D0 LDR X8, [X19 + 0x20]
	0x01C904D4 CBZ X8, 0x1C9060C
	0x01C904D8 MOVZ W20, 0x1
	0x01C904DC STRB W20, [X8 + 0x10]
	0x01C904E0 ADRP X8, 0x22BD000
	0x01C904E4 LDR X8, [X8 + 0xB60]
	0x01C904E8 MOV X1, X31
	0x01C904EC LDR X0, [X8]
	0x01C904F0 BL 0x3A5E8FC
	0x01C904F4 ADRP X8, 0x22BD000
	0x01C904F8 LDR X21, [X19 + 0x20]
	0x01C904FC LDR X8, [X8 + 0x9B8]
	0x01C90500 LDR X0, [X8]
	0x01C90504 BL 0x1B6EA0C
	0x01C90508 ADRP X8, 0x22BD000
	0x01C9050C LDR X8, [X8 + 0xB48]
	0x01C90510 MOV X1, X21
	0x01C90514 MOV X3, X31
	0x01C90518 MOV X22, X0
	0x01C9051C LDR X2, [X8]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x2594000
	007 Move X21, 0x22BE000
	008 Move X19, 0x22BE000
	009 Move W8, [X20+968]
	010 Move X21, [X21+2600]
	011 Move X19, [X19+2608]
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x22BE000
	017 Move X0, [X0+2608]
	018 Call 0x1B6F7F0
	019 Move X0, 0x22BE000
	020 Move X0, [X0+2600]
	021 Call 0x1B6F7F0
	022 Move W8, 1
	023 Move [X20+968], W8
	024 Move X0, X31
	025 Move [X31], X31
	026 Move [X31+8], X31
	027 Call SystemInfo.get_deviceUniqueIdentifier
	028 Move X8, [X21]
	029 Move X1, X0
	030 Move X2, X31
	031 Move X0, X8
	032 Call PlayerPrefs.GetString, X0, X1
	033 Move X1, [X19]
	034 Move X2, X31
	035 Move X19, X0
	036 Call String.op_Equality, X0, X1
	037 Move X20, X19
	038 Move TEMP, X0
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfNotEqual {50}
	042 Move X0, X31
	043 Call Guid.NewGuid
	044 Move [X31], X0
	045 Move [X31+8], X1
	046 Add X0, X31, 0
	047 Move X1, X31
	048 Call Guid.ToString, X0
	049 Move X20, X0
	050 Move X0, X19
	051 Move X1, X20
	052 Move X2, X31
	053 Call String.op_Inequality, X0, X1
	054 Move TEMP, X0
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfNotEqual {64}
	058 Move X0, [X21]
	059 Move X1, X20
	060 Move X2, X31
	061 Call PlayerPrefs.SetString, X0, X1
	062 Move X0, X31
	063 Call PlayerPrefs.Save
	064 Move X0, X20
	065 Move X20, [X31+32]
	066 Move X19, [X31+40]
	067 Move X30, [X31+16]
	068 Move X21, [X31+24]
	069 Add X31, X31, 48
	070 Return X0

Method: System.Void LogAuthEvent(AnimalCompany.AuthCommands/AuthResult result, System.String method)

Disassembly:
	0x01C93968 LDR X1, [X8 + 0x28]
	0x01C9396C LDR X9, [X8 + 0x18]
	0x01C93970 BLR X9
	0x01C93974 CBZ X0, 0x1C93BE8
	0x01C93978 ADRP X8, 0x22BA000
	0x01C9397C LDR X8, [X8 + 0xE58]
	0x01C93980 LDR X1, [X8]
	0x01C93984 BL 0x2503108
	0x01C93988 ADRP X8, 0x22BA000
	0x01C9398C LDR X8, [X8 + 0xE50]
	0x01C93990 STR X0, [X31 + 0x88]
	0x01C93994 LDR X1, [X8]
	0x01C93998 ADD X0, X31, 0x88
	0x01C9399C BL 0x24D9278
	0x01C939A0 TBZ X0, 0x0, 0x1C93B5C
	0x01C939A4 ADRP X8, 0x22BA000
	0x01C939A8 LDR X8, [X8 + 0xE48]
	0x01C939AC LDR X1, [X8]
	0x01C939B0 ADD X8, X31, 0x60
	0x01C939B4 ADD X0, X31, 0x88
	0x01C939B8 BL 0x24D92BC
	0x01C939BC LDR V0, [X31 + 0x6]
	0x01C939C0 LDR X8, [X31 + 0x70]
	0x01C939C4 STR V0, [X31 + 0x2]
	0x01C939C8 STR X8, [X31 + 0x30]
	0x01C939CC STR V0, [X19 + 0x3]
	0x01C939D0 LDR X9, [X19 + 0x30]
	0x01C939D4 STR X8, [X19 + 0x40]
	0x01C939D8 CBNZ X9, 0x1C93AEC
	0x01C939DC ADRP X22, 0x22BA000
	0x01C939E0 LDR X22, [X22 + 0x5F8]
	0x01C939E4 LDR W8, [X19 + 0x48]
	0x01C939E8 LDR X0, [X22]
	0x01C939EC STR W8, [X31 + 0x60]
	0x01C939F0 ADD X1, X31, 0x60
	0x01C939F4 BL 0x1B6E900
	0x01C939F8 MOV X20, X0
	0x01C939FC LDR W8, [X19 + 0x28]
	0x01C93A00 LDR X0, [X22]
	0x01C93A04 STR W8, [X31]
	0x01C93A08 ADD X1, X31, 0x0
	0x01C93A0C BL 0x1B6E900
	0x01C93A10 ADRP X8, 0x22BA000
	0x01C93A14 LDR X8, [X8 + 0xE70]
	0x01C93A18 MOV X2, X0
	0x01C93A1C LDR X0, [X8]
	0x01C93A20 MOV X1, X20
	0x01C93A24 MOV X3, X31
	0x01C93A28 BL 0x3090A1C
	0x01C93A2C ADRP X8, 0x22BA000
	0x01C93A30 LDR X8, [X8 + 0x628]
	0x01C93A34 MOV X20, X0
	0x01C93A38 LDR X0, [X8]
	0x01C93A3C LDR W8, [X0 + 0xE0]
	0x01C93A40 CBNZ W8, 0x1C93A48
	0x01C93A44 BL 0x1B6E8F8
	0x01C93A48 ADRP X8, 0x22BA000
	0x01C93A4C ADRP X9, 0x22BA000
	0x01C93A50 LDR X8, [X8 + 0xDE8]
	0x01C93A54 LDR X9, [X9 + 0xE68]
	0x01C93A58 LDR X3, [X8]
	0x01C93A5C LDR X4, [X9]
	0x01C93A60 MOVZ W0, 0x800
	0x01C93A64 MOVZ W5, 0xA0
	0x01C93A68 MOV X1, X20
	0x01C93A6C MOV X2, X31
	0x01C93A70 MOV X6, X31
	0x01C93A74 BL 0x342B7DC
	0x01C93A78 ADRP X8, 0x22BA000
	0x01C93A7C LDR X8, [X8 + 0xE60]
	0x01C93A80 LDR W20, [X19 + 0x28]
	0x01C93A84 LDR X0, [X8]
	0x01C93A88 LDR W8, [X0 + 0xE0]
	0x01C93A8C CBNZ W8, 0x1C93A94
	0x01C93A90 BL 0x1B6E8F8
	0x01C93A94 MOV W0, W20
	0x01C93A98 MOV X1, X31
	0x01C93A9C BL 0x325ED30
	0x01C93AA0 CBZ X0, 0x1C93BF0
	0x01C93AA4 MOV X1, X31
	0x01C93AA8 BL 0x3256D00
	0x01C93AAC STR X0, [X31 + 0x18]
	0x01C93AB0 ADD X0, X31, 0x18
	0x01C93AB4 MOV X1, X31
	0x01C93AB8 BL 0x312C868
	0x01C93ABC TBZ X0, 0x0, 0x1C93B98
	0x01C93AC0 ADD X0, X31, 0x18
	0x01C93AC4 MOV X1, X31
	0x01C93AC8 BL 0x312C934
	0x01C93ACC LDR W8, [X19 + 0x28]
	0x01C93AD0 LDR W9, [X19 + 0x48]
	0x01C93AD4 UBFM W10, W8, 0x1F, 0x1E
	0x01C93AD8 ADD W8, W9, 0x1
	0x01C93ADC STR W10, [X19 + 0x28]
	0x01C93AE0 CMP W8, 0x4
	0x01C93AE4 STR W8, [X19 + 0x48]
	0x01C93AE8 B.LT 0x1C9395C
	0x01C93AEC ADD X8, X19, 0x30
	0x01C93AF0 LDR X9, [X8 + 0x10]
	0x01C93AF4 LDR V0, [X8]
	0x01C93AF8 MOVN W10, 0x1
	0x01C93AFC ADRP X20, 0x22BA000
	0x01C93B00 STR X9, [X31 + 0x50]
	0x01C93B04 STR V0, [X31 + 0x4]
	0x01C93B08 STR W10, [X19], #0x8
	0x01C93B0C STP X31, X31, [X8]
	0x01C93B10 STR X31, [X8 + 0x10]
	0x01C93B14 LDR V0, [X31 + 0x4]
	0x01C93B18 LDR X0, [X21]
	0x01C93B1C MOV X8, X9
	0x01C93B20 STR X8, [X31 + 0x10]
	0x01C93B24 STR V0, [X31]
	0x01C93B28 LDR W8, [X0 + 0xE0]
	0x01C93B2C LDR X20, [X20 + 0xE40]
	0x01C93B30 CBNZ W8, 0x1C93B38
	0x01C93B34 BL 0x1B6E8F8
	0x01C93B38 LDR V0, [X31]
	0x01C93B3C LDR X8, [X31 + 0x10]
	0x01C93B40 LDR X2, [X20]
	0x01C93B44 ADD X1, X31, 0x60
	0x01C93B48 MOV X0, X19
	0x01C93B4C STR V0, [X31 + 0x6]
	0x01C93B50 STR X8, [X31 + 0x70]

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X23, 0x2591000
	013 Move X24, 0x22BB000
	014 Move X21, 0x22BB000
	015 Move X22, 0x22BB000
	016 Move W8, [X23+969]
	017 Move X24, [X24+1472]
	018 Move X21, [X21+1464]
	019 Move X22, [X22+2480]
	020 Move X19, X1
	021 Move X20, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {61}
	026 Move X0, 0x22BB000
	027 Move X0, [X0+2464]
	028 Call 0x1B6F7F0
	029 Move X0, 0x22BB000
	030 Move X0, [X0+2480]
	031 Call 0x1B6F7F0
	032 Move X0, 0x22BB000
	033 Move X0, [X0+1456]
	034 Call 0x1B6F7F0
	035 Move X0, 0x22BB000
	036 Move X0, [X0+1464]
	037 Call 0x1B6F7F0
	038 Move X0, 0x22BB000
	039 Move X0, [X0+1472]
	040 Call 0x1B6F7F0
	041 Move X0, 0x22BB000
	042 Move X0, [X0+2320]
	043 Call 0x1B6F7F0
	044 Move X0, 0x22BB000
	045 Move X0, [X0+2560]
	046 Call 0x1B6F7F0
	047 Move X0, 0x22BB000
	048 Move X0, [X0+3440]
	049 Call 0x1B6F7F0
	050 Move X0, 0x22BB000
	051 Move X0, [X0+2568]
	052 Call 0x1B6F7F0
	053 Move X0, 0x22BB000
	054 Move X0, [X0+3448]
	055 Call 0x1B6F7F0
	056 Move X0, 0x22BB000
	057 Move X0, [X0+2592]
	058 Call 0x1B6F7F0
	059 Move W8, 1
	060 Move [X23+969], W8
	061 Move X0, [X24]
	062 Call 0x1B6FA0C
	063 Move X1, [X21]
	064 Move X21, X0
	065 Call Dictionary`2<Object, Object>..ctor, X0
	066 Move X8, [X20]
	067 Move X0, [X22]
	068 Add X1, X31, 12
	069 NotImplemented "Instruction CMP not yet implemented."
	070 NotImplemented "Instruction CSET not yet implemented."
	071 Move [X31+12], W8
	072 Call 0x1B6F900
	073 Compare X21, 0
	074 JumpIfEqual {138}
	075 Move X8, 0x22BB000
	076 Move X23, 0x22BB000
	077 Move X8, [X8+2568]
	078 Move X23, [X23+1456]
	079 Move X24, 0x22BB000
	080 Move X25, 0x22BB000
	081 Move X26, 0x22BB000
	082 Move X24, [X24+2592]
	083 Move X25, [X25+2320]
	084 Move X26, [X26+2560]
	085 Move X1, [X8]
	086 Move X3, [X23]
	087 Move X27, 0x22BB000
	088 Move X28, 0x22BB000
	089 Move X22, 0x22BB000
	090 Move X27, [X27+3448]
	091 Move X28, [X28+2464]
	092 Move X22, [X22+3440]
	093 Move X2, X0
	094 Move X0, X21
	095 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	096 Call AuthCommands.GetAuthDeviceID
	097 Move X1, [X24]
	098 Move X3, [X23]
	099 Move X2, X0
	100 Move X0, X21
	101 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	102 Move W8, [X20+8]
	103 Move X0, [X25]
	104 Add X1, X31, 8
	105 Move [X31+8], W8
	106 Call 0x1B6F900
	107 Move X1, [X26]
	108 Move X3, [X23]
	109 Move X2, X0
	110 Move X0, X21
	111 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	112 Move X1, [X27]
	113 Move X3, [X23]
	114 Move X0, X21
	115 Move X2, X19
	116 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	117 Move X0, [X28]
	118 Move W8, [X0+224]
	119 Compare W8, 0
	120 JumpIfNotEqual {122}
	121 Call 0x1B6F8F8
	122 Move X0, [X22]
	123 Move X1, X21
	124 Move X2, X31
	125 Call Analytics.Track, X0, X1
	126 Move X20, [X31+80]
	127 Move X19, [X31+88]
	128 Move X22, [X31+64]
	129 Move X21, [X31+72]
	130 Move X24, [X31+48]
	131 Move X23, [X31+56]
	132 Move X26, [X31+32]
	133 Move X25, [X31+40]
	134 Move X28, [X31+16]
	135 Move X27, [X31+24]
	136 Move X30, [X31+96]
	137 Return 
	138 Call 0x1B6FA1C

Method: System.Boolean ShouldLogAsError(AnimalCompany.AuthCommands/LoginErrorCode errorCode)

Disassembly:
	0x01C93B64 STR X8, [X19 + 0x50]
	0x01C93B68 LDR X0, [X21]
	0x01C93B6C LDR W8, [X0 + 0xE0]
	0x01C93B70 CBNZ W8, 0x1C93B78
	0x01C93B74 BL 0x1B6E8F8
	0x01C93B78 ADRP X8, 0x22BA000
	0x01C93B7C LDR X8, [X8 + 0xE30]
	0x01C93B80 ADD X0, X19, 0x8

ISIL:
	001 Move W8, W0
	002 Move W0, W31
	003 Compare W8, 0
	004 JumpIfEqual {6}
	005 NotImplemented "Instruction CMP not yet implemented."
	006 Return X0
	007 Move W0, 1
	008 Return X0

Method: System.Boolean TryParseAuthError(System.Exception exc, ref AnimalCompany.AuthCommands/AuthResult result)

Disassembly:
	0x01C93B84 LDR X3, [X8]
	0x01C93B88 ADD X1, X31, 0x88
	0x01C93B8C MOV X2, X19
	0x01C93B90 BL 0x201F74C
	0x01C93B94 B 0x1C93BD4
	0x01C93B98 MOVZ W8, 0x1
	0x01C93B9C STR W8, [X19]
	0x01C93BA0 LDR X8, [X31 + 0x18]
	0x01C93BA4 STR X8, [X19 + 0x58]
	0x01C93BA8 LDR X0, [X21]
	0x01C93BAC LDR W8, [X0 + 0xE0]
	0x01C93BB0 CBNZ W8, 0x1C93BB8
	0x01C93BB4 BL 0x1B6E8F8
	0x01C93BB8 ADRP X8, 0x22BA000
	0x01C93BBC LDR X8, [X8 + 0xE38]
	0x01C93BC0 ADD X0, X19, 0x8
	0x01C93BC4 LDR X3, [X8]
	0x01C93BC8 ADD X1, X31, 0x18
	0x01C93BCC MOV X2, X19
	0x01C93BD0 BL 0x201F960
	0x01C93BD4 LDP X20, X19, [X31 + 0xA0]
	0x01C93BD8 LDP X22, X21, [X31 + 0x90]
	0x01C93BDC LDR X30, [X31 + 0x80]
	0x01C93BE0 ADD X31, X31, 0xB0
	0x01C93BE4 RET
	0x01C93BE8 BL 0x1B6EA1C
	0x01C93BEC BL 0x1B6EA1C
	0x01C93BF0 BL 0x1B6EA1C
	0x01C93BF4 B 0x1C93C2C
	0x01C93BF8 B 0x1C93C2C
	0x01C93BFC B 0x1C93C2C
	0x01C93C00 B 0x1C93C2C
	0x01C93C04 B 0x1C93C2C
	0x01C93C08 B 0x1C93C2C
	0x01C93C0C B 0x1C93C2C
	0x01C93C10 B 0x1C93C2C
	0x01C93C14 B 0x1C93C2C
	0x01C93C18 B 0x1C93C2C
	0x01C93C1C B 0x1C93C2C
	0x01C93C20 B 0x1C93C2C
	0x01C93C24 B 0x1C93C2C
	0x01C93C28 B 0x1C93C2C
	0x01C93C2C MOV X20, X0
	0x01C93C30 CMP W1, 0x1
	0x01C93C34 B.NE 0x1C93CD8
	0x01C93C38 MOV X0, X20
	0x01C93C3C BL 0x3D19840
	0x01C93C40 MOV X20, X0
	0x01C93C44 ADRP X0, 0x22BA000
	0x01C93C48 LDR X0, [X0 + 0x670]
	0x01C93C4C BL 0x1B6E804
	0x01C93C50 LDR X8, [X20]
	0x01C93C54 LDR X1, [X8]
	0x01C93C58 BL 0x1B6ED6C
	0x01C93C5C TBZ X0, 0x0, 0x1C93CB0
	0x01C93C60 LDR X20, [X20]
	0x01C93C64 BL 0x3D19850
	0x01C93C68 MOVN W8, 0x1
	0x01C93C6C STP X31, X31, [X19 + 0x38]
	0x01C93C70 STR X31, [X19 + 0x30]
	0x01C93C74 STR W8, [X19], #0x8
	0x01C93C78 ADRP X0, 0x22BA000
	0x01C93C7C LDR X0, [X0 + 0xD20]
	0x01C93C80 BL 0x1B6E804
	0x01C93C84 LDR W8, [X0 + 0xE0]
	0x01C93C88 CBNZ W8, 0x1C93C90
	0x01C93C8C BL 0x1B6E8F8
	0x01C93C90 ADRP X0, 0x22BA000
	0x01C93C94 LDR X0, [X0 + 0xE78]
	0x01C93C98 BL 0x1B6E804
	0x01C93C9C MOV X2, X0
	0x01C93CA0 MOV X0, X19
	0x01C93CA4 MOV X1, X20
	0x01C93CA8 BL 0x23D0774
	0x01C93CAC B 0x1C93BD4
	0x01C93CB0 MOVZ W0, 0x8
	0x01C93CB4 BL 0x3D19860
	0x01C93CB8 LDR X8, [X20]
	0x01C93CBC STR X8, [X0]
	0x01C93CC0 ADRP X1, 0x2089000
	0x01C93CC4 ADD X1, X1, 0xBD8
	0x01C93CC8 MOV X2, X31
	0x01C93CCC BL 0x3D19870
	0x01C93CD0 MOV X20, X0
	0x01C93CD4 BL 0x3D19850
	0x01C93CD8 MOV X0, X20
	0x01C93CDC BL 0x1C8418C
	0x01C93CE0 BL 0x18F46A8
	0x01C93CE4 STR X30, [X31 - 0x30]!
	0x01C93CE8 STP X22, X21, [X31 + 0x10]
	0x01C93CEC STP X20, X19, [X31 + 0x20]
	0x01C93CF0 ADRP X22, 0x2590000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x2591000
	006 Move W8, [X21+970]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {27}
	013 Move X0, 0x22BB000
	014 Move X0, [X0+3456]
	015 Call 0x1B6F7F0
	016 Move X0, 0x22BB000
	017 Move X0, [X0+3464]
	018 Call 0x1B6F7F0
	019 Move X0, 0x22BB000
	020 Move X0, [X0+3472]
	021 Call 0x1B6F7F0
	022 Move X0, 0x22BB000
	023 Move X0, [X0+3480]
	024 Call 0x1B6F7F0
	025 Move W8, 1
	026 Move [X21+970], W8
	027 Compare X20, 0
	028 JumpIfEqual {44}
	029 Move X8, 0x22BB000
	030 Move X8, [X8+3456]
	031 Move X9, [X8]
	032 Move X8, [X20]
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X9, 0x22BB000
	035 Move X9, [X9+3464]
	036 Move W11, [X8+304]
	037 Move X9, [X9]
	038 Move W10, [X9+304]
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move X11, [X8+200]
	041 Add X10, X11, X10
	042 NotImplemented "Instruction LDUR not yet implemented."
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move W8, [X19+8]
	045 Compare W8, 0
	046 JumpIfEqual {48}
	047 Move W0, W31
	048 Move W0, W31
	049 Move W8, 2
	050 Move [X19+8], W8
	051 Move X8, [X9+392]
	052 Move X1, [X9+400]
	053 Move X0, X20
	054 NotImplemented "Instruction BLR not yet implemented."
	055 Compare X0, 0
	056 JumpIfEqual {106}
	057 Move X8, 0x22BB000
	058 Move X8, [X8+3472]
	059 Move X2, X31
	060 Move X1, [X8]
	061 Call String.Contains, X0, X1
	062 Move TEMP, X0
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfNotEqual {67}
	066 Move W8, 12
	067 Move W8, [X19+8]
	068 Compare W8, 0
	069 JumpIfNotEqual {47}
	070 Move W0, W31
	071 Move W8, 9
	072 Move X9, [X8+392]
	073 Move X1, [X8+400]
	074 Move X0, X20
	075 NotImplemented "Instruction BLR not yet implemented."
	076 Compare X0, 0
	077 JumpIfEqual {106}
	078 Move X8, 0x22BB000
	079 Move X8, [X8+3480]
	080 Move X2, X31
	081 Move X1, [X8]
	082 Call String.Contains, X0, X1
	083 Move TEMP, X0
	084 And TEMP, TEMP, 1
	085 Compare TEMP, 1
	086 JumpIfNotEqual {101}
	087 Move W8, 8
	088 Move [X19+8], W8
	089 Move X8, [X20]
	090 Move X0, X20
	091 Move X9, [X8+392]
	092 Move X1, [X8+400]
	093 NotImplemented "Instruction BLR not yet implemented."
	094 Move [X19+16], X0
	095 Move W0, 1
	096 Move X20, [X31+16]
	097 Move X19, [X31+24]
	098 Move X30, [X31+32]
	099 Move X21, [X31+40]
	100 Return X0
	101 Move W8, [X19+8]
	102 Compare W8, 0
	103 JumpIfNotEqual {47}
	104 Move W0, W31
	105 Move W8, 10
	106 Call 0x1B6FA1C

