Type: UnityEngine.XR.XRNodeState

Method: System.Void set_uniqueID(System.UInt64 value)

Disassembly:
	0x03E63998 STR X31, [X31 + 0xA8]
	0x03E6399C LDR X1, [X8]

ISIL:
	001 Move [X0+88], X1
	002 Return 

Method: UnityEngine.XR.XRNode get_nodeType()

Disassembly:
	0x03E63AE0 ADD X0, X31, 0x68
	0x03E63AE4 LDR X8, [X8 + 0xB8]

ISIL:
	001 Move W0, [X0]
	002 Return X0

Method: System.Void set_nodeType(UnityEngine.XR.XRNode value)

Disassembly:
	0x03E639A0 BL 0x2E0E0FC
	0x03E639A4 LDR X8, [X19]

ISIL:
	001 Move [X0], W1
	002 Return 

Method: System.Void set_tracked(System.Boolean value)

Disassembly:
	0x03E639A8 LDR X9, [X31 + 0xA8]
	0x03E639AC ADD X0, X31, 0xA0
	0x03E639B0 LDR X8, [X8 + 0xB8]

ISIL:
	001 And W8, W1, 1
	002 Move [X0+84], W8
	003 Return 

Method: System.Boolean TryGetPosition(out UnityEngine.Vector3 position)

Disassembly:
	0x03E63AE8 STR X9, [X8 + 0x168]
	0x03E63AEC ADRP X8, 0x309000
	0x03E63AF0 LDR X8, [X8 + 0x18]
	0x03E63AF4 LDR X2, [X28]
	0x03E63AF8 STR X31, [X31 + 0x68]

ISIL:
	001 Move S0, [X0+8]
	002 Move S1, [X0+12]
	003 Move V2, [X0+16]
	004 Move X2, X1
	005 Move W1, 1

Method: System.Boolean TryGetRotation(out UnityEngine.Quaternion rotation)

Disassembly:
	0x03E63B6C STR X9, [X8 + 0x180]
	0x03E63B70 ADRP X8, 0x308000
	0x03E63B74 LDR X8, [X8 + 0xFE0]
	0x03E63B78 LDR X1, [X8]
	0x03E63B7C ADRP X8, 0x308000

ISIL:
	001 Move S0, [X0+20]
	002 Move S1, [X0+24]
	003 Move S2, [X0+28]
	004 Move S3, [X0+32]
	005 Move X2, X1
	006 Move W1, 2

Method: System.Boolean TryGet(UnityEngine.Vector3 inValue, UnityEngine.XR.AvailableTrackingData availabilityFlag, out UnityEngine.Vector3 outValue)

Disassembly:
	0x03E63AFC LDR X1, [X8]
	0x03E63B00 BL 0x2E0DA0C
	0x03E63B04 LDR X8, [X19]
	0x03E63B08 LDR X9, [X31 + 0x68]
	0x03E63B0C ADD X0, X31, 0x60
	0x03E63B10 LDR X8, [X8 + 0xB8]
	0x03E63B14 STR X9, [X8 + 0x170]
	0x03E63B18 ADRP X8, 0x309000
	0x03E63B1C LDR X8, [X8 + 0xF8]
	0x03E63B20 LDR X2, [X28]
	0x03E63B24 STR X31, [X31 + 0x60]
	0x03E63B28 LDR X1, [X8]
	0x03E63B2C BL 0x2E0DA0C
	0x03E63B30 LDR X8, [X19]
	0x03E63B34 LDR X9, [X31 + 0x60]
	0x03E63B38 ADD X0, X31, 0x58
	0x03E63B3C LDR X8, [X8 + 0xB8]
	0x03E63B40 STR X9, [X8 + 0x178]
	0x03E63B44 ADRP X8, 0x309000
	0x03E63B48 LDR X8, [X8 + 0x88]
	0x03E63B4C LDR X2, [X28]
	0x03E63B50 STR X31, [X31 + 0x58]
	0x03E63B54 LDR X1, [X8]
	0x03E63B58 BL 0x2E0DA0C
	0x03E63B5C LDR X8, [X19]
	0x03E63B60 LDR X9, [X31 + 0x58]
	0x03E63B64 ADD X0, X31, 0x50
	0x03E63B68 LDR X8, [X8 + 0xB8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W8, [X0+4]
	006 Move X19, X2
	007 And W20, W8, W1
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Move X21, 0x576000
	010 Move W8, [X21+1923]
	011 Compare W8, 0
	012 JumpIfNotEqual {18}
	013 Move X0, 0x291000
	014 Move X0, [X0+1440]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1923], W8
	018 Move X8, 0x291000
	019 Move X8, [X8+1440]
	020 Move X8, [X8]
	021 Move X8, [X8+184]
	022 Move S0, [X8]
	023 Move S1, [X8+4]
	024 Move V2, [X8+8]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move [X19], S0
	027 Move [X19+8], S1
	028 Move [X19+8], S2
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 NotImplemented "Instruction CSET not yet implemented."
	032 Move X30, [X31+32]
	033 Move X21, [X31+40]
	034 Return X0

Method: System.Boolean TryGet(UnityEngine.Quaternion inValue, UnityEngine.XR.AvailableTrackingData availabilityFlag, out UnityEngine.Quaternion outValue)

Disassembly:
	0x03E63B80 LDR X8, [X8 + 0xFB0]
	0x03E63B84 STR X31, [X31 + 0x50]
	0x03E63B88 LDR X2, [X8]
	0x03E63B8C BL 0x2E0D850
	0x03E63B90 LDR X8, [X19]
	0x03E63B94 LDR X9, [X31 + 0x50]
	0x03E63B98 ADD X0, X31, 0x48
	0x03E63B9C LDR X8, [X8 + 0xB8]
	0x03E63BA0 STR X9, [X8 + 0x188]
	0x03E63BA4 ADRP X8, 0x309000
	0x03E63BA8 LDR X8, [X8 + 0xB0]
	0x03E63BAC LDR X1, [X8]
	0x03E63BB0 ADRP X8, 0x308000
	0x03E63BB4 LDR X8, [X8 + 0xFB8]
	0x03E63BB8 STR X31, [X31 + 0x48]
	0x03E63BBC LDR X2, [X8]
	0x03E63BC0 BL 0x2E0D694
	0x03E63BC4 LDR X8, [X19]
	0x03E63BC8 LDR X9, [X31 + 0x48]
	0x03E63BCC ADD X0, X31, 0x40
	0x03E63BD0 LDR X8, [X8 + 0xB8]
	0x03E63BD4 STR X9, [X8 + 0x190]
	0x03E63BD8 ADRP X8, 0x308000
	0x03E63BDC LDR X8, [X8 + 0xFF0]
	0x03E63BE0 LDR X2, [X22]
	0x03E63BE4 STR X31, [X31 + 0x40]
	0x03E63BE8 LDR X1, [X8]
	0x03E63BEC BL 0x2E0DF40

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W8, [X0+4]
	006 Move X19, X2
	007 And W20, W8, W1
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Move X21, 0x576000
	010 Move W8, [X21+1939]
	011 Compare W8, 0
	012 JumpIfNotEqual {18}
	013 Move X0, 0x292000
	014 Move X0, [X0+1448]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1939], W8
	018 Move X8, 0x292000
	019 Move X8, [X8+1448]
	020 Move X8, [X8]
	021 Move X8, [X8+184]
	022 Move S0, [X8]
	023 Move S1, [X8+4]
	024 Move S2, [X8+8]
	025 Move S3, [X8+12]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move [X19], S0
	028 Move [X19+8], S1
	029 Move [X19+8], S2
	030 Move [X19+16], S3
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 NotImplemented "Instruction CSET not yet implemented."
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Return X0

