Type: UnityEngine.XR.MeshGenerationResult

Method: UnityEngine.XR.MeshId get_MeshId()

Disassembly:
	0x03E678DC BL 0x1C16CF4
	0x03E678E0 MOVZ W8, 0x1
	0x03E678E4 STRB W8, [X20 + 0xCCD]

ISIL:
	001 Move X8, [X0]
	002 Move X1, [X0+8]
	003 Move X0, X8
	004 Return X0

Method: UnityEngine.Mesh get_Mesh()

Disassembly:
	0x03E678E8 LDR X0, [X21]
	0x03E678EC LDR W8, [X0 + 0xE0]

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: UnityEngine.MeshCollider get_MeshCollider()

Disassembly:
	0x03E678F0 CBNZ W8, 0x3E678F8
	0x03E678F4 BL 0x1C16DFC

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: UnityEngine.XR.MeshGenerationStatus get_Status()

Disassembly:
	0x03E678F8 ADRP X22, 0x28C000
	0x03E678FC LDR X22, [X22 + 0xE00]

ISIL:
	001 Move W0, [X0+32]
	002 Return X0

Method: UnityEngine.XR.MeshVertexAttributes get_Attributes()

Disassembly:
	0x03E67900 MOV X0, X19
	0x03E67904 BL 0x3E67A68

ISIL:
	001 Move W0, [X0+36]
	002 Return X0

Method: UnityEngine.Vector3 get_Position()

Disassembly:
	0x03E67908 MOV X19, X0
	0x03E6790C CBZ X0, 0x3E679B0
	0x03E67910 LDR X8, [X19]

ISIL:
	001 Move S0, [X0+48]
	002 Move S1, [X0+52]
	003 Move V2, [X0+56]
	004 Return X0

Method: UnityEngine.Quaternion get_Rotation()

Disassembly:
	0x03E67914 LDR X1, [X8 + 0x280]
	0x03E67918 LDR X9, [X8 + 0x278]
	0x03E6791C MOV X0, X19

ISIL:
	001 Move S0, [X0+60]
	002 Move S1, [X0+64]
	003 Move S2, [X0+68]
	004 Move S3, [X0+72]
	005 Return X0

Method: UnityEngine.Vector3 get_Scale()

Disassembly:
	0x03E67920 BLR X9
	0x03E67924 LDR X8, [X19]
	0x03E67928 LDR X1, [X8 + 0x400]

ISIL:
	001 Move S0, [X0+76]
	002 Move S1, [X0+80]
	003 Move V2, [X0+84]
	004 Return X0

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x03E6792C LDR X9, [X8 + 0x3F8]
	0x03E67930 MOV X0, X19
	0x03E67934 BLR X9
	0x03E67938 MOV X21, X0
	0x03E6793C MOV X20, X31
	0x03E67940 LDR X8, [X19]
	0x03E67944 LDR X1, [X22]
	0x03E67948 LDRH W9, [X8 + 0x12E]
	0x03E6794C CBZ X9, 0x3E67970
	0x03E67950 LDR X10, [X8 + 0xB0]
	0x03E67954 ADD X10, X10, 0x8
	0x03E67958 LDUR X11, [X10 - 0x8]
	0x03E6795C CMP X11, X1
	0x03E67960 B.EQ 0x3E67980
	0x03E67964 SUBS X9, X9, 0x1
	0x03E67968 ADD X10, X10, 0x10
	0x03E6796C B.NE 0x3E67958
	0x03E67970 MOV X0, X19
	0x03E67974 MOV W2, W31
	0x03E67978 BL 0x1C5C788
	0x03E6797C B 0x3E6798C
	0x03E67980 LDRSW X9, [X10]
	0x03E67984 ADD X8, X8, X9, 0x4, LSL
	0x03E67988 ADD X0, X8, 0x138
	0x03E6798C LDP X8, X1, [X0]
	0x03E67990 MOV X0, X19
	0x03E67994 BLR X8
	0x03E67998 CBNZ X20, 0x3E679B4
	0x03E6799C MOV X0, X21
	0x03E679A0 LDP X20, X19, [X31 + 0x20]
	0x03E679A4 LDP X22, X21, [X31 + 0x10]
	0x03E679A8 LDR X30, [X31], #0x30
	0x03E679AC RET
	0x03E679B0 BL 0x1C16F20
	0x03E679B4 MOV X0, X20
	0x03E679B8 BL 0x1C16F18

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+96], X30
	003 Move [X31+104], X21
	004 Move [X31+112], X20
	005 Move [X31+120], X19
	006 Move X21, 0x582000
	007 Move W8, [X21+3241]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x2B8000
	015 Move X0, [X0+1664]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3241], W8
	019 Compare X20, 0
	020 JumpIfEqual {26}
	021 Move X8, 0x2B8000
	022 Move X8, [X8+1664]
	023 Move X9, [X20]
	024 Move X8, [X8]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move W0, W31
	027 Move X0, X20
	028 Call 0x1C17E08
	029 Move X1, X0
	030 Add X0, X31, 8
	031 Move W2, 88
	032 Call 0x3EB2AC0
	033 Add X1, X31, 8
	034 Move X0, X19
	035 Call MeshGenerationResult.Equals, X0, X1
	036 Move X20, [X31+112]
	037 Move X19, [X31+120]
	038 Move X30, [X31+96]
	039 Move X21, [X31+104]
	040 And W0, W0, 1
	041 Add X31, X31, 128
	042 Return X0

Method: System.Boolean Equals(UnityEngine.XR.MeshGenerationResult other)

Disassembly:
	0x03E679BC B 0x3E679C0
	0x03E679C0 MOV X21, X0
	0x03E679C4 CMP W1, 0x1
	0x03E679C8 B.NE 0x3E679E8
	0x03E679CC MOV X0, X21
	0x03E679D0 BL 0x3EB1AD0
	0x03E679D4 LDR X20, [X0]
	0x03E679D8 BL 0x3EB1AE0
	0x03E679DC MOV X21, X31
	0x03E679E0 CBNZ X19, 0x3E67940
	0x03E679E4 B 0x3E67998
	0x03E679E8 MOV X20, X31
	0x03E679EC B 0x3E679F4
	0x03E679F0 MOV X21, X0
	0x03E679F4 CBZ X19, 0x3E67A50
	0x03E679F8 LDR X8, [X19]
	0x03E679FC LDR X1, [X22]
	0x03E67A00 LDRH W9, [X8 + 0x12E]
	0x03E67A04 CBZ X9, 0x3E67A28
	0x03E67A08 LDR X10, [X8 + 0xB0]
	0x03E67A0C ADD X10, X10, 0x8
	0x03E67A10 LDUR X11, [X10 - 0x8]
	0x03E67A14 CMP X11, X1
	0x03E67A18 B.EQ 0x3E67A38
	0x03E67A1C SUBS X9, X9, 0x1
	0x03E67A20 ADD X10, X10, 0x10
	0x03E67A24 B.NE 0x3E67A10
	0x03E67A28 MOV X0, X19
	0x03E67A2C MOV W2, W31
	0x03E67A30 BL 0x1C5C788
	0x03E67A34 B 0x3E67A44
	0x03E67A38 LDRSW X9, [X10]
	0x03E67A3C ADD X8, X8, X9, 0x4, LSL
	0x03E67A40 ADD X0, X8, 0x138
	0x03E67A44 LDP X8, X1, [X0]
	0x03E67A48 MOV X0, X19
	0x03E67A4C BLR X8
	0x03E67A50 CBNZ X20, 0x3E67A5C
	0x03E67A54 MOV X0, X21
	0x03E67A58 BL 0x1D2C690
	0x03E67A5C MOV X0, X20
	0x03E67A60 BL 0x1C16F18
	0x03E67A64 BL 0x1990590
	0x03E67A68 STR X30, [X31 - 0x30]!
	0x03E67A6C STP X22, X21, [X31 + 0x10]
	0x03E67A70 STP X20, X19, [X31 + 0x20]
	0x03E67A74 ADRP X19, 0x581000
	0x03E67A78 ADRP X20, 0x294000
	0x03E67A7C LDRB W8, [X19 + 0xCCC]
	0x03E67A80 LDR X20, [X20 + 0x558]
	0x03E67A84 MOV X21, X0
	0x03E67A88 TBNZ X8, 0x0, 0x3E67AC4
	0x03E67A8C ADRP X0, 0x2CA000
	0x03E67A90 LDR X0, [X0 + 0xA18]
	0x03E67A94 BL 0x1C16CF4
	0x03E67A98 ADRP X0, 0x293000
	0x03E67A9C LDR X0, [X0 + 0x248]
	0x03E67AA0 BL 0x1C16CF4
	0x03E67AA4 ADRP X0, 0x28C000
	0x03E67AA8 LDR X0, [X0 + 0xE00]
	0x03E67AAC BL 0x1C16CF4
	0x03E67AB0 ADRP X0, 0x294000
	0x03E67AB4 LDR X0, [X0 + 0x558]
	0x03E67AB8 BL 0x1C16CF4
	0x03E67ABC MOVZ W8, 0x1
	0x03E67AC0 STRB W8, [X19 + 0xCCC]
	0x03E67AC4 LDR X0, [X20]
	0x03E67AC8 BL 0x1C16F10
	0x03E67ACC MOV X1, X31
	0x03E67AD0 MOV X20, X0
	0x03E67AD4 BL 0x32E23B4
	0x03E67AD8 CBZ X21, 0x3E67BF4
	0x03E67ADC LDR X8, [X21]
	0x03E67AE0 MOV X0, X21
	0x03E67AE4 LDP X9, X1, [X8 + 0x1E8]
	0x03E67AE8 BLR X9
	0x03E67AEC CBZ X0, 0x3E67BE0
	0x03E67AF0 LDR X8, [X21]
	0x03E67AF4 ADRP X19, 0x2CA000
	0x03E67AF8 ADRP X22, 0x293000
	0x03E67AFC MOV X0, X21
	0x03E67B00 LDR X9, [X8 + 0x208]
	0x03E67B04 LDR X2, [X8 + 0x210]
	0x03E67B08 LDR X19, [X19 + 0xA18]
	0x03E67B0C LDR X22, [X22 + 0x248]
	0x03E67B10 MOV X1, X31
	0x03E67B14 BLR X9
	0x03E67B18 LDR X0, [X19]
	0x03E67B1C BL 0x1C16F10
	0x03E67B20 MOVZ W3, 0x1
	0x03E67B24 MOV X1, X21
	0x03E67B28 MOV W2, W31
	0x03E67B2C MOV X4, X31
	0x03E67B30 MOV X19, X0
	0x03E67B34 BL 0x3667C8C
	0x03E67B38 LDR X0, [X22]
	0x03E67B3C LDR W8, [X0 + 0xE0]
	0x03E67B40 CBNZ W8, 0x3E67B48
	0x03E67B44 BL 0x1C16DFC
	0x03E67B48 MOVZ W2, 0x400
	0x03E67B4C MOV X0, X19
	0x03E67B50 MOV X1, X20
	0x03E67B54 BL 0x3E675F4
	0x03E67B58 CBZ X20, 0x3E67C00
	0x03E67B5C LDR X8, [X20]
	0x03E67B60 LDR X9, [X8 + 0x208]
	0x03E67B64 LDR X2, [X8 + 0x210]
	0x03E67B68 MOV X0, X20
	0x03E67B6C MOV X1, X31
	0x03E67B70 BLR X9
	0x03E67B74 MOV X21, X31
	0x03E67B78 CBZ X19, 0x3E67BDC
	0x03E67B7C ADRP X10, 0x28C000

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], D10
	003 Move [X31+24], D9
	004 Move [X31+32], D8
	005 Move [X31+40], X30
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X22, 0x582000
	013 Move X21, 0x306000
	014 Move W8, [X22+3242]
	015 Move X21, [X21+528]
	016 Move X19, X1
	017 Move X20, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {27}
	022 Move X0, 0x306000
	023 Move X0, [X0+528]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X22+3242], W8
	027 Move X0, [X21]
	028 Move [X31], X31
	029 Move [X31+8], X31
	030 Move X23, [X20]
	031 Move X21, [X20+8]
	032 Move X24, [X19]
	033 Move X22, [X19+8]
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {38}
	037 Call 0x1C17DFC
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move W0, W31
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move X0, [X20+16]
	042 Compare X0, 0
	043 JumpIfEqual {146}
	044 Move X8, [X0]
	045 Move X1, [X19+16]
	046 Move X9, [X8+312]
	047 Move X2, [X8+320]
	048 NotImplemented "Instruction BLR not yet implemented."
	049 Move TEMP, X0
	050 And TEMP, TEMP, 1
	051 Compare TEMP, 1
	052 JumpIfNotEqual {133}
	053 Move X0, [X20+24]
	054 Compare X0, 0
	055 JumpIfEqual {146}
	056 Move X8, [X0]
	057 Move X1, [X19+24]
	058 Move X9, [X8+312]
	059 Move X2, [X8+320]
	060 NotImplemented "Instruction BLR not yet implemented."
	061 Move TEMP, X0
	062 And TEMP, TEMP, 1
	063 Compare TEMP, 1
	064 JumpIfNotEqual {133}
	065 Move W8, [X20+32]
	066 Move W9, [X19+32]
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Move W8, [X20+36]
	069 Move W9, [X19+36]
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move V0, [X20+48]
	072 Move V1, [X19+48]
	073 Move W0, W31
	074 NotImplemented "Instruction FCMP not yet implemented."
	075 Move V0, [X20+52]
	076 Move V1, [X19+52]
	077 NotImplemented "Instruction FCMP not yet implemented."
	078 Move V0, [X20+56]
	079 Move V1, [X19+56]
	080 NotImplemented "Instruction FCMP not yet implemented."
	081 NotImplemented "Instruction LDUR not yet implemented."
	082 Add X0, X31, 0
	083 Move X1, X31
	084 Add X21, X31, 0
	085 Move [X31], V0
	086 Move S0, [X19+60]
	087 Move S10, [X19+64]
	088 Move S9, [X19+68]
	089 Move S8, [X19+72]
	090 Call Single.Equals, X0, V0
	091 Move TEMP, X0
	092 And TEMP, TEMP, 1
	093 Compare TEMP, 1
	094 JumpIfNotEqual {133}
	095 Or X0, X21, 7
	096 Move V0, V10
	097 Move X1, X31
	098 Call Single.Equals, X0, V0
	099 Move TEMP, X0
	100 And TEMP, TEMP, 1
	101 Compare TEMP, 1
	102 JumpIfNotEqual {133}
	103 Or X0, X21, 15
	104 Move V0, V9
	105 Move X1, X31
	106 Call Single.Equals, X0, V0
	107 Move TEMP, X0
	108 And TEMP, TEMP, 1
	109 Compare TEMP, 1
	110 JumpIfNotEqual {133}
	111 Or X0, X21, 15
	112 Move V0, V8
	113 Move X1, X31
	114 Call Single.Equals, X0, V0
	115 Move TEMP, X0
	116 And TEMP, TEMP, 1
	117 Compare TEMP, 1
	118 JumpIfNotEqual {133}
	119 Move S0, [X20+76]
	120 Move S1, [X20+80]
	121 Move S2, [X19+76]
	122 Move S4, [X19+80]
	123 Move V3, [X20+84]
	124 Move V5, [X19+84]
	125 NotImplemented "Instruction FCMP not yet implemented."
	126 NotImplemented "Instruction CSET not yet implemented."
	127 NotImplemented "Instruction FCMP not yet implemented."
	128 NotImplemented "Instruction CSET not yet implemented."
	129 NotImplemented "Instruction FCMP not yet implemented."
	130 And W8, W8, W9
	131 NotImplemented "Instruction CSET not yet implemented."
	132 And W0, W8, W9
	133 Move W0, W31
	134 Move X20, [X31+80]
	135 Move X19, [X31+88]
	136 Move X22, [X31+64]
	137 Move X21, [X31+72]
	138 Move X24, [X31+48]
	139 Move X23, [X31+56]
	140 Move X30, [X31+40]
	141 Move D9, [X31+24]
	142 Move D8, [X31+32]
	143 Move V10, [X31+16]
	144 Add X31, X31, 96
	145 Return X0
	146 Call 0x1C17F20

Method: System.Int32 GetHashCode()

Disassembly:
	0x03E67B80 LDR X8, [X19]
	0x03E67B84 LDR X10, [X10 + 0xE00]
	0x03E67B88 LDRH W9, [X8 + 0x12E]
	0x03E67B8C LDR X1, [X10]
	0x03E67B90 CBZ X9, 0x3E67BB4
	0x03E67B94 LDR X10, [X8 + 0xB0]
	0x03E67B98 ADD X10, X10, 0x8
	0x03E67B9C LDUR X11, [X10 - 0x8]
	0x03E67BA0 CMP X11, X1
	0x03E67BA4 B.EQ 0x3E67BC4
	0x03E67BA8 SUBS X9, X9, 0x1
	0x03E67BAC ADD X10, X10, 0x10
	0x03E67BB0 B.NE 0x3E67B9C
	0x03E67BB4 MOV X0, X19
	0x03E67BB8 MOV W2, W31
	0x03E67BBC BL 0x1C5C788
	0x03E67BC0 B 0x3E67BD0
	0x03E67BC4 LDRSW X9, [X10]
	0x03E67BC8 ADD X8, X8, X9, 0x4, LSL
	0x03E67BCC ADD X0, X8, 0x138
	0x03E67BD0 LDP X8, X1, [X0]
	0x03E67BD4 MOV X0, X19
	0x03E67BD8 BLR X8
	0x03E67BDC CBNZ X21, 0x3E67BF8
	0x03E67BE0 MOV X0, X20
	0x03E67BE4 LDP X20, X19, [X31 + 0x20]
	0x03E67BE8 LDP X22, X21, [X31 + 0x10]
	0x03E67BEC LDR X30, [X31], #0x30
	0x03E67BF0 RET
	0x03E67BF4 BL 0x1C16F20
	0x03E67BF8 MOV X0, X21
	0x03E67BFC BL 0x1C16F18
	0x03E67C00 BL 0x1C16F20
	0x03E67C04 B 0x3E67C08
	0x03E67C08 MOV X20, X0
	0x03E67C0C CMP W1, 0x1
	0x03E67C10 B.NE 0x3E67C30
	0x03E67C14 MOV X0, X20
	0x03E67C18 BL 0x3EB1AD0
	0x03E67C1C LDR X21, [X0]
	0x03E67C20 BL 0x3EB1AE0
	0x03E67C24 MOV X20, X31
	0x03E67C28 CBNZ X19, 0x3E67B7C
	0x03E67C2C B 0x3E67BDC
	0x03E67C30 MOV X21, X31
	0x03E67C34 B 0x3E67C3C
	0x03E67C38 MOV X20, X0
	0x03E67C3C CBZ X19, 0x3E67CA0
	0x03E67C40 ADRP X10, 0x28C000
	0x03E67C44 LDR X8, [X19]
	0x03E67C48 LDR X10, [X10 + 0xE00]
	0x03E67C4C LDRH W9, [X8 + 0x12E]
	0x03E67C50 LDR X1, [X10]
	0x03E67C54 CBZ X9, 0x3E67C78
	0x03E67C58 LDR X10, [X8 + 0xB0]
	0x03E67C5C ADD X10, X10, 0x8
	0x03E67C60 LDUR X11, [X10 - 0x8]
	0x03E67C64 CMP X11, X1
	0x03E67C68 B.EQ 0x3E67C88
	0x03E67C6C SUBS X9, X9, 0x1
	0x03E67C70 ADD X10, X10, 0x10
	0x03E67C74 B.NE 0x3E67C60
	0x03E67C78 MOV X0, X19
	0x03E67C7C MOV W2, W31
	0x03E67C80 BL 0x1C5C788
	0x03E67C84 B 0x3E67C94
	0x03E67C88 LDRSW X9, [X10]
	0x03E67C8C ADD X8, X8, X9, 0x4, LSL
	0x03E67C90 ADD X0, X8, 0x138
	0x03E67C94 LDP X8, X1, [X0]
	0x03E67C98 MOV X0, X19
	0x03E67C9C BLR X8
	0x03E67CA0 CBNZ X21, 0x3E67CAC
	0x03E67CA4 MOV X0, X20
	0x03E67CA8 BL 0x1D2C690
	0x03E67CAC MOV X0, X21
	0x03E67CB0 BL 0x1C16F18
	0x03E67CB4 BL 0x1990590
	0x03E67CB8 STP X30, X21, [X31 - 0x20]!
	0x03E67CBC STP X20, X19, [X31 + 0x10]
	0x03E67CC0 ADRP X20, 0x581000
	0x03E67CC4 ADRP X21, 0x2B5000
	0x03E67CC8 LDRB W8, [X20 + 0xCCE]
	0x03E67CCC LDR X21, [X21 + 0x4D0]
	0x03E67CD0 MOV X19, X0
	0x03E67CD4 TBNZ X8, 0x0, 0x3E67D40
	0x03E67CD8 ADRP X0, 0x2B5000
	0x03E67CDC LDR X0, [X0 + 0x4E0]
	0x03E67CE0 BL 0x1C16CF4
	0x03E67CE4 ADRP X0, 0x2B5000
	0x03E67CE8 LDR X0, [X0 + 0x4D8]
	0x03E67CEC BL 0x1C16CF4
	0x03E67CF0 ADRP X0, 0x2B5000
	0x03E67CF4 LDR X0, [X0 + 0x4D0]
	0x03E67CF8 BL 0x1C16CF4
	0x03E67CFC ADRP X0, 0x2D3000
	0x03E67D00 LDR X0, [X0 + 0x218]
	0x03E67D04 BL 0x1C16CF4
	0x03E67D08 ADRP X0, 0x2D3000
	0x03E67D0C LDR X0, [X0 + 0x220]
	0x03E67D10 BL 0x1C16CF4
	0x03E67D14 ADRP X0, 0x2D3000
	0x03E67D18 LDR X0, [X0 + 0x4C8]
	0x03E67D1C BL 0x1C16CF4
	0x03E67D20 ADRP X0, 0x2CF000
	0x03E67D24 LDR X0, [X0 + 0xB08]
	0x03E67D28 BL 0x1C16CF4
	0x03E67D2C ADRP X0, 0x2B5000
	0x03E67D30 LDR X0, [X0 + 0x4C8]
	0x03E67D34 BL 0x1C16CF4
	0x03E67D38 MOVZ W8, 0x1
	0x03E67D3C STRB W8, [X20 + 0xCCE]
	0x03E67D40 LDR X1, [X21]
	0x03E67D44 MOV X0, X19
	0x03E67D48 MOV X2, X31
	0x03E67D4C BL 0x321BA08
	0x03E67D50 TBNZ X0, 0x0, 0x3E67DFC
	0x03E67D54 ADRP X8, 0x2CF000
	0x03E67D58 LDR X8, [X8 + 0xB08]
	0x03E67D5C MOV X0, X19
	0x03E67D60 MOV X2, X31
	0x03E67D64 LDR X1, [X8]
	0x03E67D68 BL 0x321BA08
	0x03E67D6C TBNZ X0, 0x0, 0x3E67DFC
	0x03E67D70 ADRP X8, 0x2B5000
	0x03E67D74 LDR X8, [X8 + 0x4D8]
	0x03E67D78 MOV X0, X19
	0x03E67D7C MOV X2, X31
	0x03E67D80 LDR X1, [X8]
	0x03E67D84 BL 0x321BA08
	0x03E67D88 TBNZ X0, 0x0, 0x3E67DFC
	0x03E67D8C ADRP X8, 0x2B5000
	0x03E67D90 LDR X8, [X8 + 0x4E0]
	0x03E67D94 MOV X0, X19
	0x03E67D98 MOV X2, X31
	0x03E67D9C LDR X1, [X8]
	0x03E67DA0 BL 0x321BA08
	0x03E67DA4 TBNZ X0, 0x0, 0x3E67DFC
	0x03E67DA8 ADRP X8, 0x2B5000
	0x03E67DAC LDR X8, [X8 + 0x4C8]
	0x03E67DB0 MOV X0, X19
	0x03E67DB4 MOV X2, X31
	0x03E67DB8 LDR X1, [X8]
	0x03E67DBC BL 0x321BA08

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+64], X29
	003 Move [X31+72], X30
	004 Move [X31+80], X28
	005 Move [X31+88], X27
	006 Move [X31+96], X26
	007 Move [X31+104], X25
	008 Move [X31+112], X24
	009 Move [X31+120], X23
	010 Move [X31+128], X22
	011 Move [X31+136], X21
	012 Move [X31+144], X20
	013 Move [X31+152], X19
	014 Move X21, 0x582000
	015 Move X20, 0x306000
	016 Move W8, [X21+3243]
	017 Move X20, [X20+528]
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {28}
	023 Move X0, 0x306000
	024 Move X0, [X0+528]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X21+3243], W8
	028 Move [X31+32], X31
	029 Move [X31+40], X31
	030 Move [X31+16], X31
	031 Move [X31+24], X31
	032 Move V0, [X19]
	033 Move X0, [X20]
	034 Add X9, X31, 48
	035 Or X20, X9, 15
	036 Move [X31+3], V0
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {41}
	040 Call 0x1C17DFC
	041 Add X0, X31, 48
	042 Move X1, X31
	043 Call UInt64.GetHashCode, X0
	044 Move W21, W0
	045 Move X0, X20
	046 Move X1, X31
	047 Call UInt64.GetHashCode, X0
	048 Move X8, [X19+16]
	049 Compare X8, 0
	050 JumpIfEqual {167}
	051 Move X9, [X8]
	052 Move W22, W0
	053 Move X0, X8
	054 Move X10, [X9+344]
	055 Move X1, [X9+352]
	056 NotImplemented "Instruction BLR not yet implemented."
	057 Move X8, [X19+24]
	058 Move [X31+12], W0
	059 Compare X8, 0
	060 JumpIfEqual {167}
	061 Move X9, [X8]
	062 Move X0, X8
	063 Move X10, [X9+344]
	064 Move X1, [X9+352]
	065 Xor W9, W22, W21
	066 Move [X31+8], W9
	067 NotImplemented "Instruction BLR not yet implemented."
	068 Move W8, [X19+32]
	069 Move W21, W0
	070 Add X0, X31, 44
	071 Move X1, X31
	072 Move [X31+44], W8
	073 Call Int32.GetHashCode, X0
	074 Move W8, [X19+36]
	075 Move W22, W0
	076 Add X0, X31, 44
	077 Move X1, X31
	078 Move [X31+44], W8
	079 Call Int32.GetHashCode, X0
	080 Move V0, [X19+48]
	081 Move V1, [X19+56]
	082 Move W23, W0
	083 Add X8, X31, 32
	084 Add X0, X31, 32
	085 Move X1, X31
	086 Or X25, X8, 7
	087 Add X24, X8, 8
	088 Move [X31+32], D0
	089 Move [X31+40], S1
	090 Call Single.GetHashCode, X0
	091 Move W26, W0
	092 Move X0, X25
	093 Move X1, X31
	094 Call Single.GetHashCode, X0
	095 Move W27, W0
	096 Move X0, X24
	097 Move X1, X31
	098 Call Single.GetHashCode, X0
	099 NotImplemented "Instruction LDUR not yet implemented."
	100 Xor W8, W26, W27
	101 Add X9, X31, 16
	102 Xor W20, W8, W0
	103 Add X0, X31, 16
	104 Move X1, X31
	105 Or X26, X9, 7
	106 Or X27, X9, 15
	107 Or X28, X9, 15
	108 Move [X31+1], V0
	109 Call Single.GetHashCode, X0
	110 Move W29, W0
	111 Move X0, X26
	112 Move X1, X31
	113 Call Single.GetHashCode, X0
	114 Move W26, W0
	115 Move X0, X27
	116 Move X1, X31
	117 Call Single.GetHashCode, X0
	118 Move W27, W0
	119 Move X0, X28
	120 Move X1, X31
	121 Call Single.GetHashCode, X0
	122 NotImplemented "Instruction LDUR not yet implemented."
	123 Move V1, [X19+84]
	124 Xor W8, W29, W26
	125 Xor W8, W8, W27
	126 Xor W26, W8, W0
	127 Add X0, X31, 32
	128 Move X1, X31
	129 Move [X31+32], D0
	130 Move [X31+40], S1
	131 Call Single.GetHashCode, X0
	132 Move W19, W0
	133 Move X0, X25
	134 Move X1, X31
	135 Call Single.GetHashCode, X0
	136 Move W25, W0
	137 Move X0, X24
	138 Move X1, X31
	139 Call Single.GetHashCode, X0
	140 Move W11, [X31+8]
	141 Move W10, [X31+12]
	142 Move W9, 0xA2DB
	143 NotImplemented "Instruction MOVK not yet implemented."
	144 Xor W8, W19, W25
	145 NotImplemented "Instruction MADD not yet implemented."
	146 NotImplemented "Instruction MADD not yet implemented."
	147 NotImplemented "Instruction MADD not yet implemented."
	148 NotImplemented "Instruction MADD not yet implemented."
	149 NotImplemented "Instruction MADD not yet implemented."
	150 NotImplemented "Instruction MADD not yet implemented."
	151 Move X20, [X31+144]
	152 Move X19, [X31+152]
	153 Move X22, [X31+128]
	154 Move X21, [X31+136]
	155 Move X24, [X31+112]
	156 Move X23, [X31+120]
	157 Move X26, [X31+96]
	158 Move X25, [X31+104]
	159 Move X28, [X31+80]
	160 Move X27, [X31+88]
	161 Move X29, [X31+64]
	162 Move X30, [X31+72]
	163 Xor W8, W8, W0
	164 NotImplemented "Instruction MADD not yet implemented."
	165 Add X31, X31, 160
	166 Return X0
	167 Call 0x1C17F20

