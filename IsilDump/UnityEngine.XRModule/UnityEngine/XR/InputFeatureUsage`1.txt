Type: UnityEngine.XR.InputFeatureUsage`1

Method: System.String get_name()

Disassembly:
	0x02E0E4C8 MOV X8, X0
	0x02E0E4CC LDR X8, [X8 + 0xC0]

ISIL:
	001 Move X0, [X0]
	002 Return X0

Method: System.Void set_name(System.String value)

Disassembly:
	0x02E0E4D0 MOV X0, X20
	0x02E0E4D4 LDR X1, [X8 + 0x20]

ISIL:
	001 Move [X0], X1
	002 Return 

Method: System.Void .ctor(System.String usageName)

Disassembly:
	0x02E0E4D8 BLR X21
	0x02E0E4DC LDR X8, [X19 + 0x20]
	0x02E0E4E0 MOV X20, X0
	0x02E0E4E4 ADD X9, X8, 0x135
	0x02E0E4E8 LDRH W9, [X9]
	0x02E0E4EC TBNZ X9, 0x0, 0x2E0E508
	0x02E0E4F0 MOV X0, X8
	0x02E0E4F4 BL 0x1C5C684
	0x02E0E4F8 LDR X8, [X19 + 0x20]
	0x02E0E4FC ADD X9, X8, 0x135
	0x02E0E500 LDRH W9, [X9]
	0x02E0E504 B 0x2E0E50C
	0x02E0E508 MOV X0, X8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X2+32]
	005 Move X19, X1
	006 Move X20, X0
	007 Move W9, [X8+309]
	008 Move TEMP, X9
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {14}
	012 Move X0, X8
	013 Call 0x1C5D684
	014 Move [X20], X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 Return 

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x02E0E50C LDR X10, [X0 + 0xC0]
	0x02E0E510 LDR X10, [X10 + 0x20]
	0x02E0E514 LDR X19, [X10]
	0x02E0E518 TBNZ X9, 0x0, 0x2E0E528
	0x02E0E51C MOV X0, X8
	0x02E0E520 BL 0x1C5C684
	0x02E0E524 MOV X8, X0
	0x02E0E528 LDR X8, [X8 + 0xC0]
	0x02E0E52C ADD X0, X31, 0x8
	0x02E0E530 LDR X1, [X8 + 0x20]
	0x02E0E534 BLR X19
	0x02E0E538 MOV X1, X0
	0x02E0E53C MOV X0, X20
	0x02E0E540 MOV X2, X31
	0x02E0E544 BL 0x321BA08
	0x02E0E548 LDP X20, X19, [X31 + 0x20]
	0x02E0E54C LDP X30, X21, [X31 + 0x10]
	0x02E0E550 AND W0, W0, 0x1
	0x02E0E554 ADD X31, X31, 0x30
	0x02E0E558 RET
	0x02E0E55C STR X30, [X31 - 0x20]!
	0x02E0E560 STP X20, X19, [X31 + 0x10]
	0x02E0E564 LDR X8, [X1 + 0x20]
	0x02E0E568 MOV X19, X0
	0x02E0E56C ADD X9, X8, 0x135
	0x02E0E570 LDRH W9, [X9]
	0x02E0E574 TBNZ X9, 0x0, 0x2E0E594
	0x02E0E578 MOV X0, X8
	0x02E0E57C MOV X20, X1
	0x02E0E580 BL 0x1C5C684
	0x02E0E584 LDR X8, [X20 + 0x20]
	0x02E0E588 ADD X9, X8, 0x135
	0x02E0E58C LDRH W9, [X9]
	0x02E0E590 B 0x2E0E598
	0x02E0E594 MOV X0, X8
	0x02E0E598 LDR X10, [X0 + 0xC0]
	0x02E0E59C LDR X10, [X10 + 0x20]
	0x02E0E5A0 LDR X20, [X10]
	0x02E0E5A4 TBNZ X9, 0x0, 0x2E0E5B4
	0x02E0E5A8 MOV X0, X8
	0x02E0E5AC BL 0x1C5C684
	0x02E0E5B0 MOV X8, X0
	0x02E0E5B4 LDR X8, [X8 + 0xC0]
	0x02E0E5B8 MOV X0, X19
	0x02E0E5BC LDR X1, [X8 + 0x20]
	0x02E0E5C0 BLR X20
	0x02E0E5C4 CBZ X0, 0x2E0E5DC
	0x02E0E5C8 LDR X8, [X0]
	0x02E0E5CC LDP X20, X19, [X31 + 0x10]
	0x02E0E5D0 LDP X2, X1, [X8 + 0x158]
	0x02E0E5D4 LDR X30, [X31], #0x20
	0x02E0E5D8 BR X2
	0x02E0E5DC BL 0x1C16F20
	0x02E0E5E0 SUB X31, X31, 0x90
	0x02E0E5E4 STR X30, [X31 + 0x60]
	0x02E0E5E8 STP X22, X21, [X31 + 0x70]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+32]
	006 Move X20, X2
	007 Move X21, X1
	008 Move X19, X0
	009 Move W9, [X8+309]
	010 Move TEMP, X9
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {17}
	014 Move X0, X8
	015 Call 0x1C5D684
	016 Move X8, X0
	017 Move X8, [X8+192]
	018 Move X0, [X8]
	019 Move W8, [X0+309]
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {25}
	024 Call 0x1C5D684
	025 Compare X21, 0
	026 JumpIfEqual {29}
	027 Move X8, [X21]
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move W0, W31
	032 Move X30, [X31+32]
	033 Move X21, [X31+40]
	034 Return X0
	035 Move X0, [X20+32]
	036 Move W8, [X0+309]
	037 Move TEMP, X8
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfEqual {42}
	041 Call 0x1C5D684
	042 Move X8, [X0+192]
	043 Move X1, [X8]
	044 Move W8, [X1+309]
	045 Move TEMP, X8
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfEqual {52}
	049 Move X0, X1
	050 Call 0x1C5D684
	051 Move X1, X0
	052 Move X8, [X21]
	053 Move X9, [X1+64]
	054 Move X0, X21
	055 Move X8, [X8+64]
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Call 0x1C17E08
	058 Move X8, X0
	059 Move X0, [X20+32]
	060 Move X20, [X8]
	061 Move W9, [X0+309]
	062 Move TEMP, X9
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfEqual {67}
	066 Call 0x1C5D684
	067 Move X8, [X0+192]
	068 Move X0, X19
	069 Move X1, X20
	070 Move X20, [X31+16]
	071 Move X19, [X31+24]
	072 Move X2, [X8+24]
	073 Move X30, [X31+32]
	074 Move X21, [X31+40]
	075 Call 0x1C181E0

Method: System.Boolean Equals(UnityEngine.XR.InputFeatureUsage`1<T> other)

Disassembly:
	0x02E0E5EC STP X20, X19, [X31 + 0x80]
	0x02E0E5F0 MOV X19, X3
	0x02E0E5F4 CBZ X1, 0x2E0E6D0
	0x02E0E5F8 LDR X8, [X19 + 0x20]
	0x02E0E5FC MOV X20, X1
	0x02E0E600 MOV X21, X2
	0x02E0E604 MOV X22, X0
	0x02E0E608 LDR X8, [X8 + 0xC0]
	0x02E0E60C LDR X1, [X8]
	0x02E0E610 LDRB W8, [X1 + 0x135]
	0x02E0E614 TBNZ X8, 0x0, 0x2E0E624
	0x02E0E618 MOV X0, X1
	0x02E0E61C BL 0x1C5C684
	0x02E0E620 MOV X1, X0
	0x02E0E624 MOV X0, X20
	0x02E0E628 BL 0x1C16E00
	0x02E0E62C LDR X8, [X19 + 0x20]
	0x02E0E630 LDR X8, [X8 + 0xC0]
	0x02E0E634 CBZ X0, 0x2E0E708
	0x02E0E638 LDR X1, [X8]
	0x02E0E63C LDRB W8, [X1 + 0x135]
	0x02E0E640 TBNZ X8, 0x0, 0x2E0E650
	0x02E0E644 MOV X0, X1
	0x02E0E648 BL 0x1C5C684

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+32]
	006 Move X19, X1
	007 Move X20, X0
	008 Add X9, X8, 309
	009 NotImplemented "Instruction LDRH not yet implemented."
	010 Move TEMP, X9
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {20}
	014 Move X0, X8
	015 Move X21, X2
	016 Call 0x1C5D684
	017 Move X8, [X21+32]
	018 Add X9, X8, 309
	019 NotImplemented "Instruction LDRH not yet implemented."
	020 Move X20, [X20]
	021 Move TEMP, X9
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {27}
	025 Move X0, X8
	026 Call 0x1C5D684
	027 Move X0, X20
	028 Move X1, X19
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X2, X31
	032 Move X30, [X31+32]
	033 Move X21, [X31+40]
	034 Call String.op_Equality, X0, X1
	035 Return X0

Method: System.Int32 GetHashCode()

Disassembly:
	0x02E0E64C MOV X1, X0
	0x02E0E650 LDR X8, [X20]
	0x02E0E654 LDR X9, [X1 + 0x40]
	0x02E0E658 MOV X0, X20
	0x02E0E65C LDR X8, [X8 + 0x40]
	0x02E0E660 CMP X8, X9
	0x02E0E664 B.NE 0x2E0E7D8
	0x02E0E668 BL 0x1C16E08
	0x02E0E66C LDP V1, V0, [X0]
	0x02E0E670 ADD X1, X31, 0x40
	0x02E0E674 MOV X0, X22
	0x02E0E678 MOV X2, X21
	0x02E0E67C STP V1, V0, [X31]
	0x02E0E680 LDR X8, [X22]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X1+32]
	004 Move X19, X0
	005 Move W9, [X8+309]
	006 Move TEMP, X9
	007 And TEMP, TEMP, 1
	008 Compare TEMP, 1
	009 JumpIfEqual {12}
	010 Move X0, X8
	011 Call 0x1C5D684
	012 Move X0, [X19]
	013 Compare X0, 0
	014 JumpIfEqual {21}
	015 Move X8, [X0]
	016 Move X2, [X8+344]
	017 Move X1, [X8+352]
	018 Move X30, [X31+16]
	019 Move X19, [X31+24]
	020 CallNoReturn X2
	021 Call 0x1C17F20

