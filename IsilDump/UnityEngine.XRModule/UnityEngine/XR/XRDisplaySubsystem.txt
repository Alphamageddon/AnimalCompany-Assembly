Type: UnityEngine.XR.XRDisplaySubsystem

Method: System.Void InvokeDisplayFocusChanged(System.Boolean focus)

Disassembly:
	0x03E665F0 ADRP X21, 0x306000
	0x03E665F4 LDRB W8, [X20 + 0xCA5]
	0x03E665F8 LDR X21, [X21 + 0x200]
	0x03E665FC MOV X19, X0
	0x03E66600 TBNZ X8, 0x0, 0x3E66618
	0x03E66604 ADRP X0, 0x306000
	0x03E66608 LDR X0, [X0 + 0x200]
	0x03E6660C BL 0x1C16CF4

ISIL:
	001 Move X8, [X0+32]
	002 Compare X8, 0
	003 JumpIfEqual {9}
	004 Move X3, [X8+24]
	005 Move X0, [X8+64]
	006 Move X2, [X8+40]
	007 And W1, W1, 1
	008 CallNoReturn X3
	009 Return 

Method: System.Void set_scaleOfAllRenderTargets(System.Single value)

Disassembly:
	0x03E66610 MOVZ W8, 0x1
	0x03E66614 STRB W8, [X20 + 0xCA5]
	0x03E66618 LDR X1, [X21]
	0x03E6661C MOV X0, X19
	0x03E66620 LDP X20, X19, [X31 + 0x10]
	0x03E66624 LDP X30, X21, [X31], #0x20
	0x03E66628 B 0x2E13098
	0x03E6662C STR X30, [X31 - 0x30]!
	0x03E66630 STP X22, X21, [X31 + 0x10]
	0x03E66634 STP X20, X19, [X31 + 0x20]
	0x03E66638 ADRP X20, 0x582000
	0x03E6663C ADRP X22, 0x2C5000
	0x03E66640 ADRP X21, 0x306000
	0x03E66644 LDRB W8, [X20 + 0xCA6]
	0x03E66648 LDR X22, [X22 + 0xE78]
	0x03E6664C LDR X21, [X21 + 0x208]
	0x03E66650 MOV X19, X0
	0x03E66654 TBNZ X8, 0x0, 0x3E66678
	0x03E66658 ADRP X0, 0x306000

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x583000
	006 Move X1, [X20+2992]
	007 Move V8, V0
	008 Move X19, X0
	009 Compare X1, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -53862400
	012 Add X0, X0, 3672
	013 Call 0x1C17CB8
	014 Move X1, X0
	015 Move [X20+2992], X0
	016 Move X0, X19
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 Move X30, [X31+8]
	020 Move V0, V8
	021 Move V8, [X31+32]
	022 CallNoReturn X1

Method: System.Void set_zNear(System.Single value)

Disassembly:
	0x03E6665C LDR X0, [X0 + 0x208]
	0x03E66660 BL 0x1C16CF4
	0x03E66664 ADRP X0, 0x2C5000
	0x03E66668 LDR X0, [X0 + 0xE78]
	0x03E6666C BL 0x1C16CF4
	0x03E66670 MOVZ W8, 0x1
	0x03E66674 STRB W8, [X20 + 0xCA6]
	0x03E66678 LDR X1, [X22]
	0x03E6667C MOV X0, X19
	0x03E66680 MOV X2, X31
	0x03E66684 BL 0x339AA9C
	0x03E66688 LDR X1, [X22]
	0x03E6668C MOV X20, X0
	0x03E66690 ADD X0, X19, 0x8
	0x03E66694 MOV X2, X31
	0x03E66698 BL 0x339AA9C
	0x03E6669C LDR X8, [X21]
	0x03E666A0 MOV X1, X20
	0x03E666A4 LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x583000
	006 Move X1, [X20+3000]
	007 Move V8, V0
	008 Move X19, X0
	009 Compare X1, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -53706752
	012 Add X0, X0, 671
	013 Call 0x1C17CB8
	014 Move X1, X0
	015 Move [X20+3000], X0
	016 Move X0, X19
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 Move X30, [X31+8]
	020 Move V0, V8
	021 Move V8, [X31+32]
	022 CallNoReturn X1

Method: System.Void set_zFar(System.Single value)

Disassembly:
	0x03E666A8 LDP X22, X21, [X31 + 0x10]
	0x03E666AC MOV X2, X0
	0x03E666B0 MOV X0, X8
	0x03E666B4 MOV X3, X31
	0x03E666B8 LDR X30, [X31], #0x30
	0x03E666BC B 0x3227BD4
	0x03E666C0 STR X30, [X31 - 0x20]!
	0x03E666C4 STP X20, X19, [X31 + 0x10]
	0x03E666C8 MOV X1, X31
	0x03E666CC MOV X19, X0
	0x03E666D0 BL 0x339A95C
	0x03E666D4 MOV W20, W0
	0x03E666D8 ADD X0, X19, 0x8
	0x03E666DC MOV X1, X31
	0x03E666E0 BL 0x339A95C
	0x03E666E4 EOR W0, W0, W20, 0x0
	0x03E666E8 LDP X20, X19, [X31 + 0x10]
	0x03E666EC LDR X30, [X31], #0x20
	0x03E666F0 RET

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x583000
	006 Move X1, [X20+3008]
	007 Move V8, V0
	008 Move X19, X0
	009 Compare X1, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -53747712
	012 Add X0, X0, 3544
	013 Call 0x1C17CB8
	014 Move X1, X0
	015 Move [X20+3008], X0
	016 Move X0, X19
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 Move X30, [X31+8]
	020 Move V0, V8
	021 Move V8, [X31+32]
	022 CallNoReturn X1

Method: System.Void set_sRGB(System.Boolean value)

Disassembly:
	0x03E666F4 STP X30, X21, [X31 - 0x20]!
	0x03E666F8 STP X20, X19, [X31 + 0x10]
	0x03E666FC ADRP X21, 0x582000
	0x03E66700 LDRB W8, [X21 + 0xCA7]
	0x03E66704 MOV X20, X1
	0x03E66708 MOV X19, X0
	0x03E6670C TBNZ X8, 0x0, 0x3E66724
	0x03E66710 ADRP X0, 0x306000
	0x03E66714 LDR X0, [X0 + 0x210]
	0x03E66718 BL 0x1C16CF4
	0x03E6671C MOVZ W8, 0x1
	0x03E66720 STRB W8, [X21 + 0xCA7]
	0x03E66724 CBZ X20, 0x3E66798
	0x03E66728 ADRP X21, 0x306000
	0x03E6672C LDR X21, [X21 + 0x210]
	0x03E66730 LDR X8, [X20]
	0x03E66734 LDR X0, [X21]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x583000
	006 Move X2, [X21+3016]
	007 Move W19, W1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -53714944
	012 Add X0, X0, 1211
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+3016], X0
	016 And W1, W19, 1
	017 Move X0, X20
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void set_textureLayout(UnityEngine.XR.XRDisplaySubsystem/TextureLayout value)

Disassembly:
	0x03E66738 CMP X8, X0
	0x03E6673C B.NE 0x3E66798
	0x03E66740 LDR W8, [X0 + 0xE0]
	0x03E66744 CBZ W8, 0x3E66750
	0x03E66748 MOV X1, X0
	0x03E6674C B 0x3E6675C
	0x03E66750 BL 0x1C16DFC
	0x03E66754 LDR X1, [X21]
	0x03E66758 LDR X0, [X20]
	0x03E6675C LDR X8, [X0 + 0x40]
	0x03E66760 LDR X9, [X1 + 0x40]
	0x03E66764 MOV X0, X20
	0x03E66768 CMP X8, X9
	0x03E6676C B.NE 0x3E667A8
	0x03E66770 BL 0x1C16E08
	0x03E66774 LDR X8, [X0]
	0x03E66778 LDR X9, [X19]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x583000
	006 Move X2, [X21+3024]
	007 Move W19, W1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -53952512
	012 Add X0, X0, 3653
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+3024], X0
	016 Move X0, X20
	017 Move W1, W19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void SetMSAALevel(System.Int32 level)

Disassembly:
	0x03E6677C CMP X9, X8
	0x03E66780 B.NE 0x3E66798
	0x03E66784 LDR X8, [X0 + 0x8]
	0x03E66788 LDR X9, [X19 + 0x8]
	0x03E6678C CMP X9, X8
	0x03E66790 CSET W0, EQ
	0x03E66794 B 0x3E6679C
	0x03E66798 MOV W0, W31
	0x03E6679C LDP X20, X19, [X31 + 0x10]
	0x03E667A0 LDP X30, X21, [X31], #0x20
	0x03E667A4 RET
	0x03E667A8 BL 0x1C171E0
	0x03E667AC LDR X8, [X0]
	0x03E667B0 CMP X8, X1
	0x03E667B4 B.NE 0x3E667C8
	0x03E667B8 LDR X8, [X0 + 0x8]
	0x03E667BC CMP X8, X2

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x583000
	006 Move X2, [X21+3032]
	007 Move W19, W1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -53706752
	012 Add X0, X0, 731
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+3032], X0
	016 Move X0, X20
	017 Move W1, W19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void set_disableLegacyRenderer(System.Boolean value)

Disassembly:
	0x03E667C0 CSET W0, EQ
	0x03E667C4 RET
	0x03E667C8 MOV W0, W31
	0x03E667CC RET
	0x03E667D0 STR X30, [X31 - 0x20]!
	0x03E667D4 STP X20, X19, [X31 + 0x10]
	0x03E667D8 ADRP X19, 0x582000
	0x03E667DC ADRP X20, 0x306000
	0x03E667E0 LDRB W8, [X19 + 0xCA8]
	0x03E667E4 LDR X20, [X20 + 0x210]
	0x03E667E8 TBNZ X8, 0x0, 0x3E66800
	0x03E667EC ADRP X0, 0x306000
	0x03E667F0 LDR X0, [X0 + 0x210]
	0x03E667F4 BL 0x1C16CF4
	0x03E667F8 MOVZ W8, 0x1
	0x03E667FC STRB W8, [X19 + 0xCA8]
	0x03E66800 LDR X8, [X20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x583000
	006 Move X2, [X21+3040]
	007 Move W19, W1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -53915648
	012 Add X0, X0, 17
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+3040], X0
	016 And W1, W19, 1
	017 Move X0, X20
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Int32 GetRenderPassCount()

Disassembly:
	0x03E66804 LDP X20, X19, [X31 + 0x10]
	0x03E66808 LDR X8, [X8 + 0xB8]
	0x03E6680C STP X31, X31, [X8]
	0x03E66810 LDR X30, [X31], #0x20
	0x03E66814 RET
	0x03E66818 MOVZ W8, 0xA2DB
	0x03E6681C MOVK W8, 0x1CFA0000
	0x03E66820 MADD W0, W0, W8, W1
	0x03E66824 RET
	0x03E66828 MOVZ W8, 0xA2DB
	0x03E6682C MOVK W8, 0x1CFA0000
	0x03E66830 MADD W9, W0, W8, W1
	0x03E66834 MADD W0, W9, W8, W2
	0x03E66838 RET
	0x03E6683C MOVZ W8, 0xA2DB

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x583000
	005 Move X1, [X20+3048]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -53706752
	010 Add X0, X0, 793
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+3048], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void GetRenderPass(System.Int32 renderPassIndex, out UnityEngine.XR.XRDisplaySubsystem/XRRenderPass renderPass)

Disassembly:
	0x03E66840 MOVK W8, 0x1CFA0000
	0x03E66844 MADD W9, W0, W8, W1
	0x03E66848 MADD W9, W9, W8, W2
	0x03E6684C MADD W0, W9, W8, W3
	0x03E66850 RET
	0x03E66854 MOVZ W8, 0xA2DB
	0x03E66858 MOVK W8, 0x1CFA0000
	0x03E6685C MADD W9, W0, W8, W1
	0x03E66860 MADD W9, W9, W8, W2
	0x03E66864 MADD W9, W9, W8, W3
	0x03E66868 MADD W0, W9, W8, W4
	0x03E6686C RET
	0x03E66870 MOVZ W8, 0xA2DB
	0x03E66874 MOVK W8, 0x1CFA0000
	0x03E66878 MADD W9, W0, W8, W1
	0x03E6687C MADD W9, W9, W8, W2
	0x03E66880 MADD W9, W9, W8, W3
	0x03E66884 MADD W9, W9, W8, W4
	0x03E66888 MADD W0, W9, W8, W5
	0x03E6688C RET
	0x03E66890 MOVZ W8, 0xA2DB
	0x03E66894 MOVK W8, 0x1CFA0000
	0x03E66898 MADD W9, W0, W8, W1
	0x03E6689C MADD W9, W9, W8, W2
	0x03E668A0 MADD W9, W9, W8, W3
	0x03E668A4 MADD W9, W9, W8, W4
	0x03E668A8 MADD W9, W9, W8, W5
	0x03E668AC MADD W0, W9, W8, W6
	0x03E668B0 RET
	0x03E668B4 MOVZ W8, 0xA2DB
	0x03E668B8 MOVK W8, 0x1CFA0000
	0x03E668BC MADD W9, W0, W8, W1
	0x03E668C0 MADD W9, W9, W8, W2
	0x03E668C4 MADD W9, W9, W8, W3
	0x03E668C8 MADD W9, W9, W8, W4
	0x03E668CC MADD W9, W9, W8, W5
	0x03E668D0 MADD W9, W9, W8, W6
	0x03E668D4 MADD W0, W9, W8, W7
	0x03E668D8 RET
	0x03E668DC LDP X8, X1, [X0]
	0x03E668E0 MOV X0, X8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x583000
	007 Move X8, [X22+3056]
	008 Move X19, X2
	009 Move W20, W1
	010 Move X21, X0
	011 Compare X8, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -53788672
	014 Add X0, X0, 2214
	015 Call 0x1C17CB8
	016 Move X8, X0
	017 Move [X22+3056], X0
	018 Move X0, X21
	019 Move W1, W20
	020 Move X2, X19
	021 NotImplemented "Instruction BLR not yet implemented."
	022 Move TEMP, X0
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfNotEqual {32}
	026 Move X20, [X31+32]
	027 Move X19, [X31+40]
	028 Move X22, [X31+16]
	029 Move X21, [X31+24]
	030 Move X30, [X31+48]
	031 Return 
	032 Move X0, 0x298000
	033 Move X0, [X0+3960]
	034 Call 0x1C17D08
	035 Call 0x1C17F10
	036 Move X19, X0
	037 Move X0, 0x307000
	038 Move X0, [X0+432]
	039 Call 0x1C17D08
	040 Move X1, X0
	041 Move X0, X19
	042 Move X2, X31
	043 Call IndexOutOfRangeException..ctor, X0, X1
	044 Move X0, 0x307000
	045 Move X0, [X0+440]
	046 Call 0x1C17D08
	047 Move X1, X0
	048 Move X0, X19
	049 Call 0x1C17DEC

Method: System.Boolean Internal_TryGetRenderPass(System.Int32 renderPassIndex, out UnityEngine.XR.XRDisplaySubsystem/XRRenderPass renderPass)

Disassembly:
	0x03E668E4 RET
	0x03E668E8 LDR X0, [X0 + 0x10]
	0x03E668EC RET
	0x03E668F0 LDR X0, [X0 + 0x18]
	0x03E668F4 RET
	0x03E668F8 LDR W0, [X0 + 0x20]
	0x03E668FC RET
	0x03E66900 LDR W0, [X0 + 0x24]
	0x03E66904 RET
	0x03E66908 LDP S0, S1, [X0 + 0x30]
	0x03E6690C LDR V2, [X0 + 0x38]
	0x03E66910 RET
	0x03E66914 LDP S0, S1, [X0 + 0x3C]
	0x03E66918 LDP S2, S3, [X0 + 0x44]
	0x03E6691C RET
	0x03E66920 LDP S0, S1, [X0 + 0x4C]
	0x03E66924 LDR V2, [X0 + 0x54]
	0x03E66928 RET
	0x03E6692C SUB X31, X31, 0x80
	0x03E66930 STP X30, X21, [X31 + 0x60]
	0x03E66934 STP X20, X19, [X31 + 0x70]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x583000
	007 Move X3, [X22+3056]
	008 Move X19, X2
	009 Move W20, W1
	010 Move X21, X0
	011 Compare X3, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -53788672
	014 Add X0, X0, 2214
	015 Call 0x1C17CB8
	016 Move X3, X0
	017 Move [X22+3056], X0
	018 Move X0, X21
	019 Move W1, W20
	020 Move X2, X19
	021 Move X20, [X31+32]
	022 Move X19, [X31+40]
	023 Move X22, [X31+16]
	024 Move X21, [X31+24]
	025 Move X30, [X31+48]
	026 CallNoReturn X3

Method: System.Void EndRecordingIfLateLatched(UnityEngine.Camera camera)

Disassembly:
	0x03E66938 ADRP X21, 0x582000
	0x03E6693C LDRB W8, [X21 + 0xCA9]
	0x03E66940 MOV X20, X1
	0x03E66944 MOV X19, X0
	0x03E66948 TBNZ X8, 0x0, 0x3E66960
	0x03E6694C ADRP X0, 0x2B8000
	0x03E66950 LDR X0, [X0 + 0x680]
	0x03E66954 BL 0x1C16CF4
	0x03E66958 MOVZ W8, 0x1
	0x03E6695C STRB W8, [X21 + 0xCA9]
	0x03E66960 CBZ X20, 0x3E6697C
	0x03E66964 ADRP X8, 0x2B8000
	0x03E66968 LDR X8, [X8 + 0x680]
	0x03E6696C LDR X9, [X20]
	0x03E66970 LDR X8, [X8]
	0x03E66974 CMP X9, X8
	0x03E66978 B.EQ 0x3E66984
	0x03E6697C MOV W0, W31
	0x03E66980 B 0x3E669A8
	0x03E66984 MOV X0, X20
	0x03E66988 BL 0x1C16E08
	0x03E6698C MOV X1, X0
	0x03E66990 ADD X0, X31, 0x8
	0x03E66994 MOVZ W2, 0x58
	0x03E66998 BL 0x3EB1AC0
	0x03E6699C ADD X1, X31, 0x8
	0x03E669A0 MOV X0, X19
	0x03E669A4 BL 0x3E669BC
	0x03E669A8 LDP X20, X19, [X31 + 0x70]
	0x03E669AC LDP X30, X21, [X31 + 0x60]
	0x03E669B0 AND W0, W0, 0x1
	0x03E669B4 ADD X31, X31, 0x80
	0x03E669B8 RET
	0x03E669BC SUB X31, X31, 0x60
	0x03E669C0 STR D10, [X31 + 0x10]
	0x03E669C4 STP D9, D8, [X31 + 0x18]
	0x03E669C8 STR X30, [X31 + 0x28]
	0x03E669CC STP X24, X23, [X31 + 0x30]
	0x03E669D0 STP X22, X21, [X31 + 0x40]
	0x03E669D4 STP X20, X19, [X31 + 0x50]
	0x03E669D8 ADRP X22, 0x582000
	0x03E669DC ADRP X21, 0x306000
	0x03E669E0 LDRB W8, [X22 + 0xCAA]
	0x03E669E4 LDR X21, [X21 + 0x210]
	0x03E669E8 MOV X19, X1
	0x03E669EC MOV X20, X0
	0x03E669F0 TBNZ X8, 0x0, 0x3E66A08
	0x03E669F4 ADRP X0, 0x306000
	0x03E669F8 LDR X0, [X0 + 0x210]
	0x03E669FC BL 0x1C16CF4
	0x03E66A00 MOVZ W8, 0x1
	0x03E66A04 STRB W8, [X22 + 0xCAA]
	0x03E66A08 LDR X0, [X21]
	0x03E66A0C STP X31, X31, [X31]
	0x03E66A10 LDP X23, X21, [X20]
	0x03E66A14 LDP X24, X22, [X19]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x583000
	006 Move W8, [X21+3064]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x28E000
	014 Move X0, [X0+1432]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+3064], W8
	018 Move X21, 0x583000
	019 Move X8, [X21+3072]
	020 Compare X8, 0
	021 JumpIfNotEqual {27}
	022 Move X0, -53714944
	023 Add X0, X0, 1271
	024 Call 0x1C17CB8
	025 Move X8, X0
	026 Move [X21+3072], X0
	027 Move X0, X20
	028 Move X1, X19
	029 NotImplemented "Instruction BLR not yet implemented."
	030 Move TEMP, X0
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfEqual {49}
	034 Move X8, 0x28E000
	035 Move X8, [X8+1432]
	036 Move X0, [X8]
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {41}
	040 Call 0x1C17DFC
	041 Move X0, X19
	042 Move X1, X31
	043 Move X2, X31
	044 Call Object.op_Equality, X0, X1
	045 Move TEMP, X0
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfEqual {54}
	049 Move X20, [X31+16]
	050 Move X19, [X31+24]
	051 Move X30, [X31+32]
	052 Move X21, [X31+40]
	053 Return 
	054 Move X0, 0x293000
	055 Move X0, [X0+1320]
	056 Call 0x1C17D08
	057 Call 0x1C17F10
	058 Move X19, X0
	059 Move X0, 0x2F2000
	060 Move X0, [X0+720]
	061 Call 0x1C17D08
	062 Move X1, X0
	063 Move X0, X19
	064 Move X2, X31
	065 Call ArgumentNullException..ctor, X0, X1
	066 Move X0, 0x307000
	067 Move X0, [X0+448]
	068 Call 0x1C17D08
	069 Move X1, X0
	070 Move X0, X19
	071 Call 0x1C17DEC

Method: System.Boolean Internal_TryEndRecordingIfLateLatched(UnityEngine.Camera camera)

Disassembly:
	0x03E66A18 LDR W8, [X0 + 0xE0]
	0x03E66A1C CBNZ W8, 0x3E66A24
	0x03E66A20 BL 0x1C16DFC
	0x03E66A24 CMP X23, X24
	0x03E66A28 MOV W0, W31
	0x03E66A2C B.NE 0x3E66B5C
	0x03E66A30 CMP X21, X22
	0x03E66A34 B.NE 0x3E66B5C
	0x03E66A38 LDR X0, [X20 + 0x10]
	0x03E66A3C CBZ X0, 0x3E66B7C
	0x03E66A40 LDR X8, [X0]
	0x03E66A44 LDR X1, [X19 + 0x10]
	0x03E66A48 LDP X9, X2, [X8 + 0x138]
	0x03E66A4C BLR X9
	0x03E66A50 TBZ X0, 0x0, 0x3E66B58
	0x03E66A54 LDR X0, [X20 + 0x18]
	0x03E66A58 CBZ X0, 0x3E66B7C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x583000
	006 Move X2, [X21+3072]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -53714944
	012 Add X0, X0, 1271
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+3072], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void BeginRecordingIfLateLatched(UnityEngine.Camera camera)

Disassembly:
	0x03E66A5C LDR X8, [X0]
	0x03E66A60 LDR X1, [X19 + 0x18]
	0x03E66A64 LDP X9, X2, [X8 + 0x138]
	0x03E66A68 BLR X9
	0x03E66A6C TBZ X0, 0x0, 0x3E66B58
	0x03E66A70 LDR W8, [X20 + 0x20]
	0x03E66A74 LDR W9, [X19 + 0x20]
	0x03E66A78 CMP W8, W9
	0x03E66A7C B.NE 0x3E66B58
	0x03E66A80 LDR W8, [X20 + 0x24]
	0x03E66A84 LDR W9, [X19 + 0x24]
	0x03E66A88 CMP W8, W9
	0x03E66A8C B.NE 0x3E66B58
	0x03E66A90 LDR V0, [X20 + 0x30]
	0x03E66A94 LDR V1, [X19 + 0x30]
	0x03E66A98 MOV W0, W31
	0x03E66A9C FCMP S0, S1
	0x03E66AA0 B.NE 0x3E66B5C
	0x03E66AA4 LDR V0, [X20 + 0x34]
	0x03E66AA8 LDR V1, [X19 + 0x34]
	0x03E66AAC FCMP S0, S1
	0x03E66AB0 B.NE 0x3E66B5C
	0x03E66AB4 LDR V0, [X20 + 0x38]
	0x03E66AB8 LDR V1, [X19 + 0x38]
	0x03E66ABC FCMP S0, S1
	0x03E66AC0 B.NE 0x3E66B5C
	0x03E66AC4 LDUR V0, [X20 + 0x3C]
	0x03E66AC8 ADD X0, X31, 0x0
	0x03E66ACC MOV X1, X31
	0x03E66AD0 ADD X21, X31, 0x0
	0x03E66AD4 STR V0, [X31]
	0x03E66AD8 LDP S0, S10, [X19 + 0x3C]
	0x03E66ADC LDP S9, S8, [X19 + 0x44]
	0x03E66AE0 BL 0x338FDC0
	0x03E66AE4 TBZ X0, 0x0, 0x3E66B58
	0x03E66AE8 ORR X0, X21, 0x7
	0x03E66AEC MOV V0.16B, V10.16B
	0x03E66AF0 MOV X1, X31
	0x03E66AF4 BL 0x338FDC0
	0x03E66AF8 TBZ X0, 0x0, 0x3E66B58
	0x03E66AFC ORR X0, X21, 0xF
	0x03E66B00 MOV V0.16B, V9.16B
	0x03E66B04 MOV X1, X31
	0x03E66B08 BL 0x338FDC0
	0x03E66B0C TBZ X0, 0x0, 0x3E66B58
	0x03E66B10 ORR X0, X21, 0xF
	0x03E66B14 MOV V0.16B, V8.16B
	0x03E66B18 MOV X1, X31
	0x03E66B1C BL 0x338FDC0
	0x03E66B20 TBZ X0, 0x0, 0x3E66B58
	0x03E66B24 LDP S0, S1, [X20 + 0x4C]
	0x03E66B28 LDP S2, S4, [X19 + 0x4C]
	0x03E66B2C LDR V3, [X20 + 0x54]
	0x03E66B30 LDR V5, [X19 + 0x54]
	0x03E66B34 FCMP S0, S2
	0x03E66B38 CSET W8, EQ

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x583000
	006 Move W8, [X21+3080]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x28E000
	014 Move X0, [X0+1432]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+3080], W8
	018 Move X21, 0x583000
	019 Move X8, [X21+3088]
	020 Compare X8, 0
	021 JumpIfNotEqual {27}
	022 Move X0, -53907456
	023 Add X0, X0, 41
	024 Call 0x1C17CB8
	025 Move X8, X0
	026 Move [X21+3088], X0
	027 Move X0, X20
	028 Move X1, X19
	029 NotImplemented "Instruction BLR not yet implemented."
	030 Move TEMP, X0
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfEqual {49}
	034 Move X8, 0x28E000
	035 Move X8, [X8+1432]
	036 Move X0, [X8]
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {41}
	040 Call 0x1C17DFC
	041 Move X0, X19
	042 Move X1, X31
	043 Move X2, X31
	044 Call Object.op_Equality, X0, X1
	045 Move TEMP, X0
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfEqual {54}
	049 Move X20, [X31+16]
	050 Move X19, [X31+24]
	051 Move X30, [X31+32]
	052 Move X21, [X31+40]
	053 Return 
	054 Move X0, 0x293000
	055 Move X0, [X0+1320]
	056 Call 0x1C17D08
	057 Call 0x1C17F10
	058 Move X19, X0
	059 Move X0, 0x2F2000
	060 Move X0, [X0+720]
	061 Call 0x1C17D08
	062 Move X1, X0
	063 Move X0, X19
	064 Move X2, X31
	065 Call ArgumentNullException..ctor, X0, X1
	066 Move X0, 0x307000
	067 Move X0, [X0+456]
	068 Call 0x1C17D08
	069 Move X1, X0
	070 Move X0, X19
	071 Call 0x1C17DEC

Method: System.Boolean Internal_TryBeginRecordingIfLateLatched(UnityEngine.Camera camera)

Disassembly:
	0x03E66B3C FCMP S1, S4
	0x03E66B40 CSET W9, EQ
	0x03E66B44 FCMP S3, S5
	0x03E66B48 AND W8, W8, W9, 0x0
	0x03E66B4C CSET W9, EQ
	0x03E66B50 AND W0, W8, W9, 0x0
	0x03E66B54 B 0x3E66B5C
	0x03E66B58 MOV W0, W31
	0x03E66B5C LDP X20, X19, [X31 + 0x50]
	0x03E66B60 LDP X22, X21, [X31 + 0x40]
	0x03E66B64 LDP X24, X23, [X31 + 0x30]
	0x03E66B68 LDR X30, [X31 + 0x28]
	0x03E66B6C LDP D9, D8, [X31 + 0x18]
	0x03E66B70 LDR V10, [X31 + 0x10]
	0x03E66B74 ADD X31, X31, 0x60
	0x03E66B78 RET
	0x03E66B7C BL 0x1C16F20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x583000
	006 Move X2, [X21+3088]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -53907456
	012 Add X0, X0, 41
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+3088], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void GetCullingParameters(UnityEngine.Camera camera, System.Int32 cullingPassIndex, out UnityEngine.Rendering.ScriptableCullingParameters scriptableCullingParameters)

Disassembly:
	0x03E66B80 SUB X31, X31, 0xA0
	0x03E66B84 STP X29, X30, [X31 + 0x40]
	0x03E66B88 STP X28, X27, [X31 + 0x50]
	0x03E66B8C STP X26, X25, [X31 + 0x60]
	0x03E66B90 STP X24, X23, [X31 + 0x70]
	0x03E66B94 STP X22, X21, [X31 + 0x80]
	0x03E66B98 STP X20, X19, [X31 + 0x90]
	0x03E66B9C ADRP X21, 0x582000
	0x03E66BA0 ADRP X20, 0x306000
	0x03E66BA4 LDRB W8, [X21 + 0xCAB]
	0x03E66BA8 LDR X20, [X20 + 0x210]
	0x03E66BAC MOV X19, X0
	0x03E66BB0 TBNZ X8, 0x0, 0x3E66BC8
	0x03E66BB4 ADRP X0, 0x306000
	0x03E66BB8 LDR X0, [X0 + 0x210]
	0x03E66BBC BL 0x1C16CF4
	0x03E66BC0 MOVZ W8, 0x1
	0x03E66BC4 STRB W8, [X21 + 0xCAB]
	0x03E66BC8 STP X31, X31, [X31 + 0x20]
	0x03E66BCC STP X31, X31, [X31 + 0x10]
	0x03E66BD0 LDR V0, [X19]
	0x03E66BD4 LDR X0, [X20]
	0x03E66BD8 ADD X9, X31, 0x30
	0x03E66BDC ORR X20, X9, 0xF
	0x03E66BE0 STR V0, [X31 + 0x3]
	0x03E66BE4 LDR W8, [X0 + 0xE0]
	0x03E66BE8 CBNZ W8, 0x3E66BF0
	0x03E66BEC BL 0x1C16DFC
	0x03E66BF0 ADD X0, X31, 0x30
	0x03E66BF4 MOV X1, X31
	0x03E66BF8 BL 0x339A95C
	0x03E66BFC MOV W21, W0
	0x03E66C00 MOV X0, X20
	0x03E66C04 MOV X1, X31
	0x03E66C08 BL 0x339A95C
	0x03E66C0C LDR X8, [X19 + 0x10]
	0x03E66C10 CBZ X8, 0x3E66DBC
	0x03E66C14 LDR X9, [X8]
	0x03E66C18 MOV W22, W0
	0x03E66C1C MOV X0, X8
	0x03E66C20 LDP X10, X1, [X9 + 0x158]
	0x03E66C24 BLR X10
	0x03E66C28 LDR X8, [X19 + 0x18]
	0x03E66C2C STR W0, [X31 + 0xC]
	0x03E66C30 CBZ X8, 0x3E66DBC
	0x03E66C34 LDR X9, [X8]
	0x03E66C38 MOV X0, X8
	0x03E66C3C LDP X10, X1, [X9 + 0x158]
	0x03E66C40 EOR W9, W22, W21, 0x0
	0x03E66C44 STR W9, [X31 + 0x8]
	0x03E66C48 BLR X10
	0x03E66C4C LDR W8, [X19 + 0x20]
	0x03E66C50 MOV W21, W0
	0x03E66C54 ADD X0, X31, 0x2C
	0x03E66C58 MOV X1, X31
	0x03E66C5C STR W8, [X31 + 0x2C]
	0x03E66C60 BL 0x337B6D8
	0x03E66C64 LDR W8, [X19 + 0x24]
	0x03E66C68 MOV W22, W0
	0x03E66C6C ADD X0, X31, 0x2C
	0x03E66C70 MOV X1, X31
	0x03E66C74 STR W8, [X31 + 0x2C]
	0x03E66C78 BL 0x337B6D8
	0x03E66C7C LDR V0, [X19 + 0x30]
	0x03E66C80 LDR V1, [X19 + 0x38]
	0x03E66C84 MOV W23, W0
	0x03E66C88 ADD X8, X31, 0x20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x583000
	008 Move X8, [X23+3096]
	009 Move X20, X3
	010 Move W21, W2
	011 Move X19, X1
	012 Move X22, X0
	013 Compare X8, 0
	014 JumpIfNotEqual {20}
	015 Move X0, -53821440
	016 Add X0, X0, 2842
	017 Call 0x1C17CB8
	018 Move X8, X0
	019 Move [X23+3096], X0
	020 Move X0, X22
	021 Move X1, X19
	022 Move W2, W21
	023 Move X3, X20
	024 NotImplemented "Instruction BLR not yet implemented."
	025 Move TEMP, X0
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfNotEqual {36}
	029 Move X20, [X31+32]
	030 Move X19, [X31+40]
	031 Move X22, [X31+16]
	032 Move X21, [X31+24]
	033 Move X30, [X31+48]
	034 Move X23, [X31+56]
	035 Return 
	036 Move X0, 0x28E000
	037 Move X0, [X0+1432]
	038 Call 0x1C17D08
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 Move X0, X19
	044 Move X1, X31
	045 Move X2, X31
	046 Call Object.op_Equality, X0, X1
	047 Move TEMP, X0
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfNotEqual {63}
	051 Move X0, 0x293000
	052 Move X0, [X0+1320]
	053 Call 0x1C17D08
	054 Call 0x1C17F10
	055 Move X19, X0
	056 Move X0, 0x2F2000
	057 Move X0, [X0+720]
	058 Call 0x1C17D08
	059 Move X1, X0
	060 Move X0, X19
	061 Move X2, X31
	062 Call ArgumentNullException..ctor, X0, X1
	063 Move X0, 0x298000
	064 Move X0, [X0+3960]
	065 Call 0x1C17D08
	066 Call 0x1C17F10
	067 Move X19, X0
	068 Move X0, 0x307000
	069 Move X0, [X0+464]
	070 Call 0x1C17D08
	071 Move X1, X0
	072 Move X0, X19
	073 Move X2, X31
	074 Call IndexOutOfRangeException..ctor, X0, X1
	075 Move X0, 0x307000
	076 Move X0, [X0+472]
	077 Call 0x1C17D08
	078 Move X1, X0
	079 Move X0, X19
	080 Call 0x1C17DEC

Method: System.Boolean Internal_TryGetCullingParams(UnityEngine.Camera camera, System.Int32 cullingPassIndex, out UnityEngine.Rendering.ScriptableCullingParameters scriptableCullingParameters)

Disassembly:
	0x03E66C8C ADD X0, X31, 0x20
	0x03E66C90 MOV X1, X31
	0x03E66C94 ORR X25, X8, 0x7
	0x03E66C98 ADD X24, X8, 0x8
	0x03E66C9C STR D0, [X31 + 0x20]
	0x03E66CA0 STR S1, [X31 + 0x28]
	0x03E66CA4 BL 0x338FE0C
	0x03E66CA8 MOV W26, W0
	0x03E66CAC MOV X0, X25
	0x03E66CB0 MOV X1, X31
	0x03E66CB4 BL 0x338FE0C
	0x03E66CB8 MOV W27, W0
	0x03E66CBC MOV X0, X24
	0x03E66CC0 MOV X1, X31
	0x03E66CC4 BL 0x338FE0C
	0x03E66CC8 LDUR V0, [X19 + 0x3C]
	0x03E66CCC EOR W8, W26, W27, 0x2
	0x03E66CD0 ADD X9, X31, 0x10
	0x03E66CD4 EOR W20, W8, W0, 0x2
	0x03E66CD8 ADD X0, X31, 0x10
	0x03E66CDC MOV X1, X31
	0x03E66CE0 ORR X26, X9, 0x7
	0x03E66CE4 ORR X27, X9, 0xF

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x583000
	008 Move X4, [X23+3096]
	009 Move X19, X3
	010 Move W20, W2
	011 Move X21, X1
	012 Move X22, X0
	013 Compare X4, 0
	014 JumpIfNotEqual {20}
	015 Move X0, -53821440
	016 Add X0, X0, 2842
	017 Call 0x1C17CB8
	018 Move X4, X0
	019 Move [X23+3096], X0
	020 Move X0, X22
	021 Move X1, X21
	022 Move W2, W20
	023 Move X3, X19
	024 Move X20, [X31+32]
	025 Move X19, [X31+40]
	026 Move X22, [X31+16]
	027 Move X21, [X31+24]
	028 Move X30, [X31+48]
	029 Move X23, [X31+56]
	030 CallNoReturn X4

Method: System.Boolean TryGetAppGPUTimeLastFrame(out System.Single gpuTimeLastFrame)

Disassembly:
	0x03E66CE8 ORR X28, X9, 0xF
	0x03E66CEC STR V0, [X31 + 0x1]
	0x03E66CF0 BL 0x338FE0C
	0x03E66CF4 MOV W29, W0
	0x03E66CF8 MOV X0, X26
	0x03E66CFC MOV X1, X31
	0x03E66D00 BL 0x338FE0C
	0x03E66D04 MOV W26, W0
	0x03E66D08 MOV X0, X27
	0x03E66D0C MOV X1, X31
	0x03E66D10 BL 0x338FE0C
	0x03E66D14 MOV W27, W0
	0x03E66D18 MOV X0, X28
	0x03E66D1C MOV X1, X31
	0x03E66D20 BL 0x338FE0C
	0x03E66D24 LDUR V0, [X19 + 0x4C]
	0x03E66D28 LDR V1, [X19 + 0x54]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x583000
	006 Move X2, [X21+3104]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -53952512
	012 Add X0, X0, 3755
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+3104], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Boolean TryGetCompositorGPUTimeLastFrame(out System.Single gpuTimeLastFrameCompositor)

Disassembly:
	0x03E66D2C EOR W8, W29, W26, 0x2
	0x03E66D30 EOR W8, W8, W27, 0x2
	0x03E66D34 EOR W26, W8, W0, 0x1
	0x03E66D38 ADD X0, X31, 0x20
	0x03E66D3C MOV X1, X31
	0x03E66D40 STR D0, [X31 + 0x20]
	0x03E66D44 STR S1, [X31 + 0x28]
	0x03E66D48 BL 0x338FE0C
	0x03E66D4C MOV W19, W0
	0x03E66D50 MOV X0, X25
	0x03E66D54 MOV X1, X31
	0x03E66D58 BL 0x338FE0C
	0x03E66D5C MOV W25, W0
	0x03E66D60 MOV X0, X24
	0x03E66D64 MOV X1, X31
	0x03E66D68 BL 0x338FE0C
	0x03E66D6C LDP W11, W10, [X31 + 0x8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x583000
	006 Move X2, [X21+3112]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -53788672
	012 Add X0, X0, 2337
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+3112], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Boolean TryGetDisplayRefreshRate(out System.Single displayRefreshRate)

Disassembly:
	0x03E66D70 MOVZ W9, 0xA2DB
	0x03E66D74 MOVK W9, 0x1CFA0000
	0x03E66D78 EOR W8, W19, W25, 0x2
	0x03E66D7C MADD W10, W11, W9, W10
	0x03E66D80 MADD W10, W10, W9, W21
	0x03E66D84 MADD W10, W10, W9, W22
	0x03E66D88 MADD W10, W10, W9, W23
	0x03E66D8C MADD W10, W10, W9, W20
	0x03E66D90 MADD W10, W10, W9, W26
	0x03E66D94 LDP X20, X19, [X31 + 0x90]
	0x03E66D98 LDP X22, X21, [X31 + 0x80]
	0x03E66D9C LDP X24, X23, [X31 + 0x70]
	0x03E66DA0 LDP X26, X25, [X31 + 0x60]
	0x03E66DA4 LDP X28, X27, [X31 + 0x50]
	0x03E66DA8 LDP X29, X30, [X31 + 0x40]
	0x03E66DAC EOR W8, W8, W0, 0x2
	0x03E66DB0 MADD W0, W10, W9, W8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x583000
	006 Move X2, [X21+3120]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -53706752
	012 Add X0, X0, 849
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+3120], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Boolean TryGetMotionToPhoton(out System.Single motionToPhoton)

Disassembly:
	0x03E66DB4 ADD X31, X31, 0xA0
	0x03E66DB8 RET
	0x03E66DBC BL 0x1C16F20
	0x03E66DC0 CBZ X2, 0x3E66E14
	0x03E66DC4 SUB X31, X31, 0xD0
	0x03E66DC8 STP X30, X21, [X31 + 0xB0]
	0x03E66DCC STP X20, X19, [X31 + 0xC0]
	0x03E66DD0 MOV X19, X2
	0x03E66DD4 ADD X0, X31, 0x0
	0x03E66DD8 MOVZ W2, 0x58
	0x03E66DDC BL 0x3EB1AC0
	0x03E66DE0 LDR X21, [X19 + 0x18]
	0x03E66DE4 LDR X20, [X19 + 0x40]
	0x03E66DE8 ADD X0, X31, 0x58
	0x03E66DEC ADD X1, X31, 0x0
	0x03E66DF0 MOVZ W2, 0x58
	0x03E66DF4 BL 0x3EB1AC0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x583000
	006 Move X2, [X21+3128]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -53755904
	012 Add X0, X0, 2527
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+3128], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Int32 GetPreferredMirrorBlitMode()

Disassembly:
	0x03E66DF8 LDR X2, [X19 + 0x28]
	0x03E66DFC ADD X1, X31, 0x58
	0x03E66E00 MOV X0, X20
	0x03E66E04 BLR X21
	0x03E66E08 LDP X20, X19, [X31 + 0xC0]
	0x03E66E0C LDP X30, X21, [X31 + 0xB0]
	0x03E66E10 ADD X31, X31, 0xD0
	0x03E66E14 RET
	0x03E66E18 STP X30, X21, [X31 - 0x20]!
	0x03E66E1C STP X20, X19, [X31 + 0x10]
	0x03E66E20 ADRP X20, 0x582000
	0x03E66E24 ADRP X21, 0x306000
	0x03E66E28 LDRB W8, [X20 + 0xCAC]
	0x03E66E2C LDR X21, [X21 + 0x218]
	0x03E66E30 MOV X19, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x583000
	005 Move X1, [X20+3136]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -53850112
	010 Add X0, X0, 415
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+3136], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Boolean GetMirrorViewBlitDesc(UnityEngine.RenderTexture mirrorRt, out UnityEngine.XR.XRDisplaySubsystem/XRMirrorViewBlitDesc outDesc, System.Int32 mode)

Disassembly:
	0x03E66E34 TBNZ X8, 0x0, 0x3E66E4C
	0x03E66E38 ADRP X0, 0x306000
	0x03E66E3C LDR X0, [X0 + 0x218]
	0x03E66E40 BL 0x1C16CF4
	0x03E66E44 MOVZ W8, 0x1
	0x03E66E48 STRB W8, [X20 + 0xCAC]
	0x03E66E4C LDR X1, [X21]
	0x03E66E50 MOV X0, X19
	0x03E66E54 LDP X20, X19, [X31 + 0x10]
	0x03E66E58 LDP X30, X21, [X31], #0x20
	0x03E66E5C B 0x2E1310C
	0x03E66E60 STR X30, [X31 - 0x20]!
	0x03E66E64 STP X20, X19, [X31 + 0x10]
	0x03E66E68 ADRP X20, 0x582000
	0x03E66E6C LDR X1, [X20 + 0xCB0]
	0x03E66E70 LDR X19, [X0]
	0x03E66E74 CBNZ X1, 0x3E66E8C
	0x03E66E78 ADRP X0, 0xFFFFFFFFFCC97000
	0x03E66E7C ADD X0, X0, 0xF0B
	0x03E66E80 BL 0x1C16CB8
	0x03E66E84 MOV X1, X0
	0x03E66E88 STR X0, [X20 + 0xCB0]
	0x03E66E8C MOV X0, X19

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x583000
	008 Move X4, [X23+3144]
	009 Move W19, W3
	010 Move X20, X2
	011 Move X21, X1
	012 Move X22, X0
	013 Compare X4, 0
	014 JumpIfNotEqual {20}
	015 Move X0, -53944320
	016 Add X0, X0, 3738
	017 Call 0x1C17CB8
	018 Move X4, X0
	019 Move [X23+3144], X0
	020 Move X0, X22
	021 Move X1, X21
	022 Move X2, X20
	023 Move W3, W19
	024 Move X20, [X31+32]
	025 Move X19, [X31+40]
	026 Move X22, [X31+16]
	027 Move X21, [X31+24]
	028 Move X30, [X31+48]
	029 Move X23, [X31+56]
	030 CallNoReturn X4

Method: System.Boolean AddGraphicsThreadMirrorViewBlit(UnityEngine.Rendering.CommandBuffer cmd, System.Boolean allowGraphicsStateInvalidate, System.Int32 mode)

Disassembly:
	0x03E66E90 LDP X20, X19, [X31 + 0x10]
	0x03E66E94 LDR X30, [X31], #0x20
	0x03E66E98 BR X1
	0x03E66E9C STR X30, [X31 - 0x20]!
	0x03E66EA0 STP X20, X19, [X31 + 0x10]
	0x03E66EA4 ADRP X20, 0x582000
	0x03E66EA8 LDR X1, [X20 + 0xCB0]
	0x03E66EAC MOV X19, X0
	0x03E66EB0 CBNZ X1, 0x3E66EC8
	0x03E66EB4 ADRP X0, 0xFFFFFFFFFCC97000
	0x03E66EB8 ADD X0, X0, 0xF0B
	0x03E66EBC BL 0x1C16CB8
	0x03E66EC0 MOV X1, X0
	0x03E66EC4 STR X0, [X20 + 0xCB0]
	0x03E66EC8 MOV X0, X19
	0x03E66ECC LDP X20, X19, [X31 + 0x10]
	0x03E66ED0 LDR X30, [X31], #0x20
	0x03E66ED4 BR X1
	0x03E66ED8 STP X30, X21, [X31 - 0x20]!
	0x03E66EDC STP X20, X19, [X31 + 0x10]
	0x03E66EE0 ADRP X20, 0x582000
	0x03E66EE4 ADRP X21, 0x306000
	0x03E66EE8 LDRB W8, [X20 + 0xCB8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x583000
	008 Move X4, [X23+3152]
	009 Move W19, W3
	010 Move W21, W2
	011 Move X20, X1
	012 Move X22, X0
	013 Compare X4, 0
	014 JumpIfNotEqual {20}
	015 Move X0, -53813248
	016 Add X0, X0, 2175
	017 Call 0x1C17CB8
	018 Move X4, X0
	019 Move [X23+3152], X0
	020 And W2, W21, 1
	021 Move X0, X22
	022 Move X1, X20
	023 Move W3, W19
	024 Move X20, [X31+32]
	025 Move X19, [X31+40]
	026 Move X22, [X31+16]
	027 Move X21, [X31+24]
	028 Move X30, [X31+48]
	029 Move X23, [X31+56]
	030 CallNoReturn X4

Method: UnityEngine.HDROutputSettings get_hdrOutputSettings()

Disassembly:
	0x03E66EEC LDR X21, [X21 + 0x220]
	0x03E66EF0 MOV X19, X0
	0x03E66EF4 TBNZ X8, 0x0, 0x3E66F0C
	0x03E66EF8 ADRP X0, 0x306000
	0x03E66EFC LDR X0, [X0 + 0x220]
	0x03E66F00 BL 0x1C16CF4
	0x03E66F04 MOVZ W8, 0x1
	0x03E66F08 STRB W8, [X20 + 0xCB8]
	0x03E66F0C LDR X1, [X21]
	0x03E66F10 MOV X0, X19
	0x03E66F14 LDP X20, X19, [X31 + 0x10]
	0x03E66F18 LDP X30, X21, [X31], #0x20
	0x03E66F1C B 0x2E13098
	0x03E66F20 STR X30, [X31 - 0x30]!
	0x03E66F24 STP X22, X21, [X31 + 0x10]
	0x03E66F28 STP X20, X19, [X31 + 0x20]
	0x03E66F2C CBZ X0, 0x3E66F78
	0x03E66F30 ADRP X22, 0x582000
	0x03E66F34 LDR X3, [X22 + 0xCC0]
	0x03E66F38 LDR X21, [X0 + 0x10]
	0x03E66F3C MOV X19, X2
	0x03E66F40 MOV X20, X1
	0x03E66F44 CBNZ X3, 0x3E66F5C
	0x03E66F48 ADRP X0, 0xFFFFFFFFFCCA1000
	0x03E66F4C ADD X0, X0, 0xEE9
	0x03E66F50 BL 0x1C16CB8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x583000
	005 Move W8, [X20+3160]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x2EB000
	012 Move X0, [X0+1392]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3160], W8
	016 Move X20, [X19+40]
	017 Compare X20, 0
	018 JumpIfNotEqual {30}
	019 Move X8, 0x2EB000
	020 Move X8, [X8+1392]
	021 Move X0, [X8]
	022 Call 0x1C17F10
	023 Move TEMP, 0
	024 Not TEMP
	025 Move W1, TEMP
	026 Move X2, X31
	027 Move X20, X0
	028 Call HDROutputSettings..ctor, X0, X1
	029 Move [X19+40], X20
	030 Move X0, X20
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Return X0

Method: System.Void .ctor()

Disassembly:
	0x03E66F54 MOV X3, X0
	0x03E66F58 STR X0, [X22 + 0xCC0]
	0x03E66F5C MOV X0, X21
	0x03E66F60 MOV X1, X20
	0x03E66F64 MOV X2, X19
	0x03E66F68 LDP X20, X19, [X31 + 0x20]
	0x03E66F6C LDP X22, X21, [X31 + 0x10]
	0x03E66F70 LDR X30, [X31], #0x30
	0x03E66F74 BR X3
	0x03E66F78 BL 0x1C16F20
	0x03E66F7C STR X30, [X31 - 0x30]!
	0x03E66F80 STP X22, X21, [X31 + 0x10]
	0x03E66F84 STP X20, X19, [X31 + 0x20]
	0x03E66F88 ADRP X22, 0x582000
	0x03E66F8C LDR X3, [X22 + 0xCC0]
	0x03E66F90 MOV X19, X2
	0x03E66F94 MOV X20, X1
	0x03E66F98 MOV X21, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x583000
	006 Move X21, 0x307000
	007 Move W8, [X20+3161]
	008 Move X21, [X21+480]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x307000
	015 Move X0, [X0+480]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3161], W8
	019 Move X1, [X21]
	020 Move X0, X19
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X30, [X31+32]
	024 Move X21, [X31+40]
	025 Call 0x2E1410C, X0
	026 Return 

