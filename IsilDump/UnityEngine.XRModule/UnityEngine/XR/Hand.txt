Type: UnityEngine.XR.Hand

Method: System.UInt64 get_deviceId()

Disassembly:
	0x03E658E4 STR X30, [X31 - 0x30]!
	0x03E658E8 STP X22, X21, [X31 + 0x10]

ISIL:
	001 Move X0, [X0]
	002 Return X0

Method: System.UInt32 get_featureIndex()

Disassembly:
	0x03E658EC STP X20, X19, [X31 + 0x20]
	0x03E658F0 ADRP X22, 0x583000

ISIL:
	001 Move W0, [X0+8]
	002 Return X0

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x03E658F4 LDR X3, [X22 + 0xBF0]
	0x03E658F8 MOV X19, X2
	0x03E658FC MOV W20, W1
	0x03E65900 MOV X21, X0
	0x03E65904 CBNZ X3, 0x3E6591C
	0x03E65908 ADRP X0, 0xFFFFFFFFFCCB4000
	0x03E6590C ADD X0, X0, 0x8A6
	0x03E65910 BL 0x1C16CB8
	0x03E65914 MOV X3, X0
	0x03E65918 STR X0, [X22 + 0xBF0]
	0x03E6591C MOV X0, X21
	0x03E65920 MOV W1, W20
	0x03E65924 MOV X2, X19
	0x03E65928 LDP X20, X19, [X31 + 0x20]
	0x03E6592C LDP X22, X21, [X31 + 0x10]
	0x03E65930 LDR X30, [X31], #0x30
	0x03E65934 BR X3
	0x03E65938 STP X30, X21, [X31 - 0x20]!
	0x03E6593C STP X20, X19, [X31 + 0x10]
	0x03E65940 ADRP X21, 0x583000
	0x03E65944 LDRB W8, [X21 + 0xBF8]
	0x03E65948 MOV X19, X1
	0x03E6594C MOV X20, X0
	0x03E65950 TBNZ X8, 0x0, 0x3E65968
	0x03E65954 ADRP X0, 0x28E000
	0x03E65958 LDR X0, [X0 + 0x598]
	0x03E6595C BL 0x1C16CF4
	0x03E65960 MOVZ W8, 0x1
	0x03E65964 STRB W8, [X21 + 0xBF8]
	0x03E65968 ADRP X21, 0x583000
	0x03E6596C LDR X8, [X21 + 0xC00]
	0x03E65970 CBNZ X8, 0x3E65988
	0x03E65974 ADRP X0, 0xFFFFFFFFFCCC6000
	0x03E65978 ADD X0, X0, 0x4F7

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x584000
	006 Move W8, [X21+2884]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x308000
	014 Move X0, [X0+376]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2884], W8
	018 Compare X20, 0
	019 JumpIfEqual {34}
	020 Move X8, 0x308000
	021 Move X8, [X8+376]
	022 Move X9, [X20]
	023 Move X8, [X8]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X0, X20
	026 Call 0x1C17E08
	027 Move X8, [X0]
	028 Move X9, [X19]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move W8, [X0+8]
	031 Move W9, [X19+8]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 NotImplemented "Instruction CSET not yet implemented."
	034 Move W0, W31
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X30, [X31+32]
	038 Move X21, [X31+40]
	039 Return X0

Method: System.Boolean Equals(UnityEngine.XR.Hand other)

Disassembly:
	0x03E6597C BL 0x1C16CB8
	0x03E65980 MOV X8, X0
	0x03E65984 STR X0, [X21 + 0xC00]
	0x03E65988 MOV X0, X20
	0x03E6598C MOV X1, X19
	0x03E65990 BLR X8
	0x03E65994 TBNZ X0, 0x0, 0x3E659C4
	0x03E65998 ADRP X8, 0x28E000
	0x03E6599C LDR X8, [X8 + 0x598]

ISIL:
	001 Move X8, [X0]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Move W8, [X0+8]
	004 NotImplemented "Instruction CMP not yet implemented."
	005 NotImplemented "Instruction CSET not yet implemented."
	006 Return X0
	007 Move W0, W31
	008 Return X0

Method: System.Int32 GetHashCode()

Disassembly:
	0x03E659A0 LDR X0, [X8]
	0x03E659A4 LDR W8, [X0 + 0xE0]
	0x03E659A8 CBNZ W8, 0x3E659B0
	0x03E659AC BL 0x1C16DFC
	0x03E659B0 MOV X0, X19
	0x03E659B4 MOV X1, X31
	0x03E659B8 MOV X2, X31
	0x03E659BC BL 0x3C3883C
	0x03E659C0 TBNZ X0, 0x0, 0x3E659D0
	0x03E659C4 LDP X20, X19, [X31 + 0x10]
	0x03E659C8 LDP X30, X21, [X31], #0x20
	0x03E659CC RET
	0x03E659D0 ADRP X0, 0x293000
	0x03E659D4 LDR X0, [X0 + 0x528]
	0x03E659D8 BL 0x1C16D08
	0x03E659DC BL 0x1C16F10
	0x03E659E0 MOV X19, X0
	0x03E659E4 ADRP X0, 0x2F2000
	0x03E659E8 LDR X0, [X0 + 0x2D0]
	0x03E659EC BL 0x1C16D08

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+32], X20
	003 Move [X31+40], X19
	004 Move [X31+12], W31
	005 Move X8, [X0]
	006 Move X19, X0
	007 Add X0, X31, 24
	008 Move X1, X31
	009 Move [X31+16], X30
	010 Move [X31+24], X8
	011 Call UInt64.GetHashCode, X0
	012 Move W8, [X19+8]
	013 Move W20, W0
	014 Add X0, X31, 12
	015 Move X1, X31
	016 Move [X31+12], W8
	017 Call UInt32.GetHashCode, X0
	018 Xor W0, W20, W0
	019 Move X20, [X31+32]
	020 Move X19, [X31+40]
	021 Move X30, [X31+16]
	022 Add X31, X31, 48
	023 Return X0

