Type: UnityEngine.XR.MeshId

Method: System.String ToString()

Disassembly:
	0x03E6762C MOVZ W8, 0x1
	0x03E67630 STRB W8, [X22 + 0xCD7]
	0x03E67634 LDR X0, [X23]
	0x03E67638 MOV W1, W19
	0x03E6763C BL 0x1C16D6C
	0x03E67640 CBZ X21, 0x3E676D0
	0x03E67644 LDR X8, [X21]
	0x03E67648 MOV X22, X0
	0x03E6764C MOV X0, X21
	0x03E67650 MOV X1, X22
	0x03E67654 LDR X9, [X8 + 0x358]
	0x03E67658 LDR X4, [X8 + 0x360]
	0x03E6765C MOV W2, W31
	0x03E67660 MOV W3, W19
	0x03E67664 BLR X9
	0x03E67668 CMP W0, 0x1
	0x03E6766C B.LT 0x3E676C0
	0x03E67670 MOV W3, W0
	0x03E67674 CBZ X20, 0x3E676D0
	0x03E67678 LDR X8, [X20]
	0x03E6767C MOV X0, X20
	0x03E67680 MOV X1, X22
	0x03E67684 MOV W2, W31
	0x03E67688 LDR X9, [X8 + 0x388]
	0x03E6768C LDR X4, [X8 + 0x390]
	0x03E67690 BLR X9
	0x03E67694 LDR X8, [X21]
	0x03E67698 MOV X0, X21
	0x03E6769C MOV X1, X22
	0x03E676A0 MOV W2, W31
	0x03E676A4 LDR X9, [X8 + 0x358]
	0x03E676A8 LDR X4, [X8 + 0x360]
	0x03E676AC MOV W3, W19
	0x03E676B0 BLR X9
	0x03E676B4 MOV W3, W0
	0x03E676B8 CMP W0, 0x1
	0x03E676BC B.GE 0x3E67674

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x582000
	007 Move X22, 0x2C5000
	008 Move X21, 0x306000
	009 Move W8, [X20+3238]
	010 Move X22, [X22+3704]
	011 Move X21, [X21+520]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x306000
	018 Move X0, [X0+520]
	019 Call 0x1C17CF4
	020 Move X0, 0x2C5000
	021 Move X0, [X0+3704]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+3238], W8
	025 Move X1, [X22]
	026 Move X0, X19
	027 Move X2, X31
	028 Call UInt64.ToString, X0, X1
	029 Move X1, [X22]
	030 Move X20, X0
	031 Add X0, X19, 8
	032 Move X2, X31
	033 Call UInt64.ToString, X0, X1
	034 Move X8, [X21]
	035 Move X1, X20
	036 Move X20, [X31+32]
	037 Move X19, [X31+40]
	038 Move X22, [X31+16]
	039 Move X21, [X31+24]
	040 Move X2, X0
	041 Move X0, X8
	042 Move X3, X31
	043 Move X30, [X31+48]
	044 Call String.Format, X0, X1, X2
	045 Return X0

Method: System.Int32 GetHashCode()

Disassembly:
	0x03E676C0 LDP X20, X19, [X31 + 0x20]
	0x03E676C4 LDP X22, X21, [X31 + 0x10]
	0x03E676C8 LDP X30, X23, [X31], #0x30
	0x03E676CC RET
	0x03E676D0 BL 0x1C16F20
	0x03E676D4 STP X30, X21, [X31 - 0x20]!
	0x03E676D8 STP X20, X19, [X31 + 0x10]
	0x03E676DC ADRP X19, 0x581000
	0x03E676E0 LDRB W8, [X19 + 0xCCB]
	0x03E676E4 MOV X21, X0
	0x03E676E8 TBNZ X8, 0x0, 0x3E67718
	0x03E676EC ADRP X0, 0x293000
	0x03E676F0 LDR X0, [X0 + 0x248]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X1, X31
	005 Move X19, X0
	006 Call UInt64.GetHashCode, X0
	007 Move W20, W0
	008 Add X0, X19, 8
	009 Move X1, X31
	010 Call UInt64.GetHashCode, X0
	011 Xor W0, W0, W20
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move X30, [X31+32]
	015 Return X0

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x03E676F4 BL 0x1C16CF4
	0x03E676F8 ADRP X0, 0x28C000
	0x03E676FC LDR X0, [X0 + 0xE00]
	0x03E67700 BL 0x1C16CF4
	0x03E67704 ADRP X0, 0x294000
	0x03E67708 LDR X0, [X0 + 0x558]
	0x03E6770C BL 0x1C16CF4
	0x03E67710 MOVZ W8, 0x1
	0x03E67714 STRB W8, [X19 + 0xCCB]
	0x03E67718 CBZ X21, 0x3E677E4
	0x03E6771C LDR W8, [X21 + 0x18]
	0x03E67720 CBZ W8, 0x3E677D4
	0x03E67724 ADRP X8, 0x294000
	0x03E67728 LDR X8, [X8 + 0x558]
	0x03E6772C ADRP X20, 0x293000
	0x03E67730 LDR X0, [X8]
	0x03E67734 LDR X20, [X20 + 0x248]
	0x03E67738 BL 0x1C16F10
	0x03E6773C MOV X1, X21
	0x03E67740 MOV X2, X31
	0x03E67744 MOV X19, X0
	0x03E67748 BL 0x32E2528
	0x03E6774C LDR X0, [X20]
	0x03E67750 LDR W8, [X0 + 0xE0]
	0x03E67754 CBNZ W8, 0x3E6775C
	0x03E67758 BL 0x1C16DFC
	0x03E6775C MOV X0, X19
	0x03E67760 BL 0x3E678A4
	0x03E67764 MOV X21, X0
	0x03E67768 MOV X20, X31
	0x03E6776C CBZ X19, 0x3E677D0
	0x03E67770 ADRP X10, 0x28C000
	0x03E67774 LDR X8, [X19]
	0x03E67778 LDR X10, [X10 + 0xE00]
	0x03E6777C LDRH W9, [X8 + 0x12E]
	0x03E67780 LDR X1, [X10]
	0x03E67784 CBZ X9, 0x3E677A8
	0x03E67788 LDR X10, [X8 + 0xB0]
	0x03E6778C ADD X10, X10, 0x8
	0x03E67790 LDUR X11, [X10 - 0x8]
	0x03E67794 CMP X11, X1
	0x03E67798 B.EQ 0x3E677B8
	0x03E6779C SUBS X9, X9, 0x1
	0x03E677A0 ADD X10, X10, 0x10
	0x03E677A4 B.NE 0x3E67790
	0x03E677A8 MOV X0, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x582000
	006 Move W8, [X21+3239]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x306000
	014 Move X0, [X0+528]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+3239], W8
	018 Compare X20, 0
	019 JumpIfEqual {44}
	020 Move X21, 0x306000
	021 Move X21, [X21+528]
	022 Move X8, [X20]
	023 Move X0, [X21]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfEqual {29}
	028 Move X1, X0
	029 Call 0x1C17DFC
	030 Move X1, [X21]
	031 Move X0, [X20]
	032 Move X8, [X0+64]
	033 Move X9, [X1+64]
	034 Move X0, X20
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Call 0x1C17E08
	037 Move X8, [X0]
	038 Move X9, [X19]
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move X8, [X0+8]
	041 Move X9, [X19+8]
	042 NotImplemented "Instruction CMP not yet implemented."
	043 NotImplemented "Instruction CSET not yet implemented."
	044 Move W0, W31
	045 Move X20, [X31+16]
	046 Move X19, [X31+24]
	047 Move X30, [X31+32]
	048 Move X21, [X31+40]
	049 Return X0
	050 Call 0x1C181E0

Method: System.Boolean Equals(UnityEngine.XR.MeshId other)

Disassembly:
	0x03E677AC MOV W2, W31
	0x03E677B0 BL 0x1C5C788
	0x03E677B4 B 0x3E677C4
	0x03E677B8 LDRSW X9, [X10]
	0x03E677BC ADD X8, X8, X9, 0x4, LSL
	0x03E677C0 ADD X0, X8, 0x138
	0x03E677C4 LDP X8, X1, [X0]
	0x03E677C8 MOV X0, X19
	0x03E677CC BLR X8

ISIL:
	001 Move X8, [X0]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Move X8, [X0+8]
	004 NotImplemented "Instruction CMP not yet implemented."
	005 NotImplemented "Instruction CSET not yet implemented."
	006 Return X0
	007 Move W0, W31
	008 Return X0

Method: System.Void .cctor()

Disassembly:
	0x03E677D0 CBNZ X20, 0x3E677E8
	0x03E677D4 LDP X20, X19, [X31 + 0x10]
	0x03E677D8 MOV X0, X21
	0x03E677DC LDP X30, X21, [X31], #0x20
	0x03E677E0 RET
	0x03E677E4 BL 0x1C16F20
	0x03E677E8 MOV X0, X20
	0x03E677EC BL 0x1C16F18
	0x03E677F0 B 0x3E677F4
	0x03E677F4 MOV X21, X0
	0x03E677F8 CMP W1, 0x1
	0x03E677FC B.NE 0x3E6781C
	0x03E67800 MOV X0, X21
	0x03E67804 BL 0x3EB1AD0
	0x03E67808 LDR X20, [X0]
	0x03E6780C BL 0x3EB1AE0
	0x03E67810 MOV X21, X31
	0x03E67814 CBNZ X19, 0x3E67770

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x582000
	005 Move X20, 0x306000
	006 Move W8, [X19+3240]
	007 Move X20, [X20+528]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x306000
	013 Move X0, [X0+528]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+3240], W8
	017 Move X8, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X8, [X8+184]
	021 Move [X8], X31
	022 Move [X8+8], X31
	023 Move X30, [X31+32]
	024 Return 

