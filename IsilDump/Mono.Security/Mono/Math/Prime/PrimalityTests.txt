Type: Mono.Math.Prime.PrimalityTests

Method: System.Int32 GetSPPRounds(Mono.Math.BigInteger bi, Mono.Math.Prime.ConfidenceFactor confidence)

Disassembly:
	0x032097D0 LDR X0, [X0 + 0xD78]
	0x032097D4 BL 0x1C16CF4
	0x032097D8 MOVZ W8, 0x1
	0x032097DC STRB W8, [X20 + 0x270]
	0x032097E0 ADRP X22, 0xF12000
	0x032097E4 LDR X22, [X22 + 0x850]
	0x032097E8 SUB X20, X31, 0x400
	0x032097EC ADD X31, X20, 0x0
	0x032097F0 MOVZ W2, 0x400
	0x032097F4 MOV X0, X20
	0x032097F8 MOV W1, W31
	0x032097FC BL 0x3EB1B10
	0x03209800 LDR X0, [X23]
	0x03209804 LDR W8, [X0 + 0xE0]
	0x03209808 CBNZ W8, 0x3209810
	0x0320980C BL 0x1C16DFC
	0x03209810 MOVZ W2, 0x400
	0x03209814 MOV W0, W19
	0x03209818 MOV X1, X20
	0x0320981C BL 0x3EB1C90
	0x03209820 CMP X0, 0x0
	0x03209824 CSEL X0, X20, X0, EQ
	0x03209828 MOV X1, X31
	0x0320982C BL 0x33C693C
	0x03209830 LDR X8, [X22]
	0x03209834 MOV X19, X0
	0x03209838 LDR W9, [X8 + 0xE0]
	0x0320983C CBNZ W9, 0x3209848
	0x03209840 MOV X0, X8
	0x03209844 BL 0x1C16DFC
	0x03209848 MOV X0, X19
	0x0320984C MOV X1, X31
	0x03209850 BL 0x32C132C
	0x03209854 LDR X8, [X21 + 0x28]
	0x03209858 LDUR X9, [X29 - 0x8]
	0x0320985C CMP X8, X9
	0x03209860 B.NE 0x320987C
	0x03209864 ADD X31, X29, 0x0
	0x03209868 LDP X20, X19, [X31 + 0x30]
	0x0320986C LDP X22, X21, [X31 + 0x20]
	0x03209870 LDR X23, [X31 + 0x10]
	0x03209874 LDP X29, X30, [X31], #0x40
	0x03209878 RET
	0x0320987C BL 0x3EB1B20
	0x03209880 SUB X31, X31, 0x40
	0x03209884 STP X30, X23, [X31 + 0x10]
	0x03209888 STP X22, X21, [X31 + 0x20]
	0x0320988C STP X20, X19, [X31 + 0x30]
	0x03209890 ADRP X23, 0x11D3000
	0x03209894 ADRP X20, 0xEEA000
	0x03209898 ADRP X21, 0xF18000
	0x0320989C ADRP X22, 0xF18000
	0x032098A0 LDRB W8, [X23 + 0x26E]
	0x032098A4 LDR X20, [X20 + 0x758]
	0x032098A8 LDR X21, [X21 + 0x820]
	0x032098AC LDR X22, [X22 + 0x828]
	0x032098B0 MOV X19, X0
	0x032098B4 TBNZ X8, 0x0, 0x32098E4
	0x032098B8 ADRP X0, 0xF18000
	0x032098BC LDR X0, [X0 + 0x820]
	0x032098C0 BL 0x1C16CF4
	0x032098C4 ADRP X0, 0xEEA000
	0x032098C8 LDR X0, [X0 + 0x758]
	0x032098CC BL 0x1C16CF4
	0x032098D0 ADRP X0, 0xF18000
	0x032098D4 LDR X0, [X0 + 0x828]
	0x032098D8 BL 0x1C16CF4
	0x032098DC MOVZ W8, 0x1
	0x032098E0 STRB W8, [X23 + 0x26E]
	0x032098E4 MOV X0, X19
	0x032098E8 BL 0x32095C8
	0x032098EC LDR X8, [X20]
	0x032098F0 STR W0, [X31 + 0xC]
	0x032098F4 ADD X1, X31, 0xC
	0x032098F8 MOV X0, X8
	0x032098FC BL 0x1C16E04
	0x03209900 MOV X20, X0
	0x03209904 LDR W8, [X19]
	0x03209908 LDR X0, [X21]
	0x0320990C ADD X1, X31, 0x8
	0x03209910 STR W8, [X31 + 0x8]
	0x03209914 BL 0x1C16E04
	0x03209918 MOV X21, X0
	0x0320991C MOV X0, X19
	0x03209920 BL 0x3209634
	0x03209924 LDR X8, [X22]
	0x03209928 MOV X3, X0
	0x0320992C MOV X1, X20
	0x03209930 MOV X2, X21
	0x03209934 MOV X0, X8
	0x03209938 MOV X4, X31
	0x0320993C BL 0x3227C18
	0x03209940 LDP X20, X19, [X31 + 0x30]
	0x03209944 LDP X22, X21, [X31 + 0x20]
	0x03209948 LDP X30, X23, [X31 + 0x10]
	0x0320994C ADD X31, X31, 0x40
	0x03209950 RET
	0x03209954 STR X30, [X31 - 0x20]!
	0x03209958 STP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Compare X0, 0
	004 JumpIfEqual {55}
	005 Move W19, W1
	006 Call BigInteger.BitCount, X0
	007 NotImplemented "Instruction CMP not yet implemented."
	008 NotImplemented "Instruction CMP not yet implemented."
	009 NotImplemented "Instruction CMP not yet implemented."
	010 NotImplemented "Instruction CMP not yet implemented."
	011 NotImplemented "Instruction CMP not yet implemented."
	012 NotImplemented "Instruction CMP not yet implemented."
	013 NotImplemented "Instruction CMP not yet implemented."
	014 NotImplemented "Instruction CMP not yet implemented."
	015 NotImplemented "Instruction CMP not yet implemented."
	016 NotImplemented "Instruction CMP not yet implemented."
	017 NotImplemented "Instruction CMP not yet implemented."
	018 Move W8, 2
	019 NotImplemented "Instruction CINC not yet implemented."
	020 Move W0, 27
	021 Move W0, 18
	022 Move W0, 15
	023 Move W0, 12
	024 Move W0, 9
	025 Move W0, 8
	026 Move W0, 7
	027 Move W0, 6
	028 Move W0, 5
	029 Move W0, 4
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X9, -40312832
	032 Move W8, W19
	033 Add X9, X9, 1053
	034 NotImplemented "Instruction ADR not yet implemented."
	035 Move W11, [X9]
	036 Add X10, X10, X11
	037 CallNoReturn X10
	038 Move W8, W0
	039 ShiftRight W8, 2
	040 And W8, W8, 0x7FFFFFFF
	041 NotImplemented "Instruction CMP not yet implemented."
	042 NotImplemented "Instruction CSINC not yet implemented."
	043 Move W0, W0
	044 ShiftRight W0, 1
	045 And W0, W0, 0x7FFFFFFF
	046 Move W0, W0
	047 ShiftRight W0, 31
	048 And W0, W0, 0x3FFFFFFF
	049 Move W0, W0
	050 ShiftRight W0, 30
	051 And W0, W0, 0x1FFFFFFF
	052 Move X30, [X31+16]
	053 Move X19, [X31+24]
	054 Return X0
	055 Call 0x1C17F20
	056 Move X0, 0xEF3000
	057 Move X0, [X0+1888]
	058 Call 0x1C17D08
	059 Call 0x1C17F10
	060 Move X19, X0
	061 Move X0, 0xF19000
	062 Move X0, [X0+1904]
	063 Call 0x1C17D08
	064 Move X1, X0
	065 Move X0, X19
	066 Move X2, X31
	067 Call ArgumentOutOfRangeException..ctor, X0, X1
	068 Move X0, 0xEEB000
	069 Move X0, [X0+2000]
	070 Call 0x1C17D08
	071 Call 0x1C17F10
	072 Move X19, X0
	073 Move X0, 0xF19000
	074 Move X0, [X0+1912]
	075 Call 0x1C17D08
	076 Move X1, X0
	077 Move X0, X19
	078 Move X2, X31
	079 Call Exception..ctor, X0, X1
	080 Move X0, 0xF19000
	081 Move X0, [X0+1920]
	082 Call 0x1C17D08
	083 Move X1, X0
	084 Move X0, X19
	085 Call 0x1C17DEC

Method: System.Boolean RabinMillerTest(Mono.Math.BigInteger n, Mono.Math.Prime.ConfidenceFactor confidence)

Disassembly:
	0x0320995C ADRP X19, 0x11D3000
	0x03209960 ADRP X20, 0xF12000
	0x03209964 LDRB W8, [X19 + 0x26F]
	0x03209968 LDR X20, [X20 + 0x850]
	0x0320996C TBNZ X8, 0x0, 0x3209984
	0x03209970 ADRP X0, 0xF12000
	0x03209974 LDR X0, [X0 + 0x850]
	0x03209978 BL 0x1C16CF4
	0x0320997C MOVZ W8, 0x1
	0x03209980 STRB W8, [X19 + 0x26F]
	0x03209984 LDR X0, [X20]
	0x03209988 LDR W8, [X0 + 0xE0]
	0x0320998C CBNZ W8, 0x3209994
	0x03209990 BL 0x1C16DFC
	0x03209994 MOV X0, X31
	0x03209998 BL 0x32C1324
	0x0320999C MOV W1, W0
	0x032099A0 ADD X0, X31, 0x8
	0x032099A4 STR X31, [X31 + 0x8]
	0x032099A8 BL 0x3209700
	0x032099AC LDR X0, [X31 + 0x8]
	0x032099B0 LDP X20, X19, [X31 + 0x10]
	0x032099B4 LDR X30, [X31], #0x20
	0x032099B8 RET
	0x032099BC B 0x3EB1C90
	0x032099C0 STR X30, [X31 - 0x20]!
	0x032099C4 STP X20, X19, [X31 + 0x10]
	0x032099C8 BL 0x1C1727C
	0x032099CC MOV X19, X0
	0x032099D0 BL 0x3EB1CA0
	0x032099D4 MOV X20, X0
	0x032099D8 BL 0x1C16CAC
	0x032099DC MOV X0, X19
	0x032099E0 BL 0x1C17290
	0x032099E4 MOV X0, X20
	0x032099E8 LDP X20, X19, [X31 + 0x10]
	0x032099EC LDR X30, [X31], #0x20
	0x032099F0 RET
	0x032099F4 B 0x3EB1CB0
	0x032099F8 B 0x3EB1CC0
	0x032099FC STP X30, X19, [X31 - 0x10]!
	0x03209A00 BL 0x3EB1CD0
	0x03209A04 MOV W19, W0
	0x03209A08 BL 0x1C16CAC
	0x03209A0C MOV W0, W19
	0x03209A10 LDP X30, X19, [X31], #0x10
	0x03209A14 RET
	0x03209A18 STP X30, X21, [X31 - 0x20]!
	0x03209A1C STP X20, X19, [X31 + 0x10]
	0x03209A20 MOV W19, W2
	0x03209A24 MOV X20, X1
	0x03209A28 BL 0x1C1727C
	0x03209A2C ADD X8, X20, 0x20
	0x03209A30 CMP X20, 0x0
	0x03209A34 CSEL X1, X31, X8, EQ
	0x03209A38 MOV W2, W19
	0x03209A3C MOV X21, X0
	0x03209A40 BL 0x3EB1CE0
	0x03209A44 MOV W19, W0
	0x03209A48 BL 0x1C16CAC
	0x03209A4C MOV X0, X21
	0x03209A50 BL 0x1C17290
	0x03209A54 MOV W0, W19
	0x03209A58 LDP X20, X19, [X31 + 0x10]
	0x03209A5C LDP X30, X21, [X31], #0x20
	0x03209A60 RET
	0x03209A64 SUB X31, X31, 0x60
	0x03209A68 STP X30, X25, [X31 + 0x20]
	0x03209A6C STP X24, X23, [X31 + 0x30]
	0x03209A70 STP X22, X21, [X31 + 0x40]
	0x03209A74 STP X20, X19, [X31 + 0x50]
	0x03209A78 ADRP X20, 0x11D3000
	0x03209A7C LDRB W8, [X20 + 0x271]
	0x03209A80 MOV X19, X0
	0x03209A84 TBNZ X8, 0x0, 0x3209AB4
	0x03209A88 ADRP X0, 0xF15000
	0x03209A8C LDR X0, [X0 + 0xD50]
	0x03209A90 BL 0x1C16CF4
	0x03209A94 ADRP X0, 0xF15000
	0x03209A98 LDR X0, [X0 + 0xD68]
	0x03209A9C BL 0x1C16CF4
	0x03209AA0 ADRP X0, 0xF15000
	0x03209AA4 LDR X0, [X0 + 0xD78]
	0x03209AA8 BL 0x1C16CF4
	0x03209AAC MOVZ W8, 0x1
	0x03209AB0 STRB W8, [X20 + 0x271]
	0x03209AB4 ADRP X22, 0xF15000
	0x03209AB8 ADRP X23, 0xF15000
	0x03209ABC ADRP X24, 0xF15000
	0x03209AC0 LDR X22, [X22 + 0xD68]
	0x03209AC4 LDR X23, [X23 + 0xD50]
	0x03209AC8 LDR X24, [X24 + 0xD78]
	0x03209ACC MOVZ W20, 0x100
	0x03209AD0 ADD X25, X31, 0x18
	0x03209AD4 STR X31, [X31 + 0x18]
	0x03209AD8 LDR X0, [X22]
	0x03209ADC LDR W8, [X0 + 0xE0]
	0x03209AE0 CBNZ W8, 0x3209AE8
	0x03209AE4 BL 0x1C16DFC
	0x03209AE8 LDR X21, [X23]
	0x03209AEC LDR X0, [X21 + 0x20]
	0x03209AF0 LDRB W8, [X0 + 0x135]
	0x03209AF4 TBNZ X8, 0x0, 0x3209AFC
	0x03209AF8 BL 0x1C5C684
	0x03209AFC LDR X8, [X0 + 0xC0]
	0x03209B00 LDR X0, [X8 + 0x8]
	0x03209B04 LDRB W8, [X0 + 0x135]
	0x03209B08 TBNZ X8, 0x0, 0x3209B10
	0x03209B0C BL 0x1C5C684
	0x03209B10 LDR W8, [X0 + 0xE0]
	0x03209B14 CBNZ W8, 0x3209B1C
	0x03209B18 BL 0x1C16DFC
	0x03209B1C LDR X0, [X21 + 0x20]
	0x03209B20 LDRB W8, [X0 + 0x135]
	0x03209B24 TBNZ X8, 0x0, 0x3209B2C
	0x03209B28 BL 0x1C5C684
	0x03209B2C LDR X8, [X0 + 0xC0]
	0x03209B30 LDR X0, [X8 + 0x8]
	0x03209B34 LDRB W8, [X0 + 0x135]
	0x03209B38 TBNZ X8, 0x0, 0x3209B40
	0x03209B3C BL 0x1C5C684
	0x03209B40 LDR X8, [X0 + 0xB8]
	0x03209B44 LDR X0, [X8]
	0x03209B48 CBZ X0, 0x3209C60
	0x03209B4C LDR X8, [X0]
	0x03209B50 MOV W1, W20
	0x03209B54 LDP X9, X2, [X8 + 0x178]
	0x03209B58 BLR X9
	0x03209B5C STP X25, X0, [X31 + 0x10]
	0x03209B60 STR X31, [X31 + 0x8]
	0x03209B64 CBZ X0, 0x3209BD4
	0x03209B68 MOV X21, X0
	0x03209B6C LDR X0, [X24]
	0x03209B70 LDR W8, [X0 + 0xE0]
	0x03209B74 CBNZ W8, 0x3209B7C
	0x03209B78 BL 0x1C16DFC
	0x03209B7C LDR W2, [X21 + 0x18]
	0x03209B80 MOV X0, X19
	0x03209B84 MOV X1, X21
	0x03209B88 BL 0x3209A18
	0x03209B8C MOV W21, W0
	0x03209B90 TBNZ X0, 0x1F, 0x3209C58
	0x03209B94 LDR X8, [X31 + 0x18]
	0x03209B98 CBZ X8, 0x3209BDC
	0x03209B9C LDR W8, [X8 + 0x18]
	0x03209BA0 CMP W21, W8
	0x03209BA4 B.GE 0x3209C20
	0x03209BA8 MOV X0, X31
	0x03209BAC BL 0x3241948
	0x03209BB0 CBZ X0, 0x3209BE4
	0x03209BB4 LDR X8, [X0]
	0x03209BB8 LDR X1, [X31 + 0x18]
	0x03209BBC LDR X9, [X8 + 0x388]
	0x03209BC0 LDR X4, [X8 + 0x390]
	0x03209BC4 MOV W2, W31
	0x03209BC8 MOV W3, W21
	0x03209BCC BLR X9
	0x03209BD0 B 0x3209C30
	0x03209BD4 BL 0x1C16F20
	0x03209BD8 B 0x3209C64
	0x03209BDC BL 0x1C16F20
	0x03209BE0 B 0x3209C64
	0x03209BE4 BL 0x1C16F20
	0x03209BE8 B 0x3209C64
	0x03209BEC B 0x3209C00
	0x03209BF0 B 0x3209C00

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X19, 0x11D4000
	013 Move W8, [X19+612]
	014 Move W20, W1
	015 Move X25, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {28}
	020 Move X0, 0xF19000
	021 Move X0, [X0+1328]
	022 Call 0x1C17CF4
	023 Move X0, 0xF19000
	024 Move X0, [X0+1432]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X19+612], W8
	028 Compare X25, 0
	029 JumpIfEqual {203}
	030 Move X26, 0xF19000
	031 Move X26, [X26+1328]
	032 Move X0, X25
	033 Call BigInteger.BitCount, X0
	034 Move X8, [X26]
	035 Move W19, W0
	036 Move W9, [X8+224]
	037 Compare W9, 0
	038 JumpIfNotEqual {41}
	039 Move X0, X8
	040 Call 0x1C17DFC
	041 Move W0, W19
	042 Call BigInteger.op_Implicit, X0
	043 Move W1, W20
	044 Call PrimalityTests.GetSPPRounds, X0, X1
	045 Move W20, W0
	046 Move W0, 1
	047 Call BigInteger.op_Implicit, X0
	048 Move X1, X0
	049 Move X0, X25
	050 Call BigInteger.op_Subtraction, X0, X1
	051 Compare X0, 0
	052 JumpIfEqual {203}
	053 Move X23, 0xF19000
	054 Move X23, [X23+1432]
	055 Move X21, X0
	056 Call BigInteger.LowestSetBit, X0
	057 Move W22, W0
	058 Move X0, X21
	059 Move W1, W22
	060 Call Kernel.RightShift, X0, X1
	061 Move X8, [X23]
	062 Move X23, X0
	063 Move X0, X8
	064 Call 0x1C17F10
	065 Move X1, X25
	066 Move X24, X0
	067 Call ModulusRing..ctor, X0, X1
	068 Move X0, X25
	069 Call BigInteger.BitCount, X0
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move X25, X31
	072 Compare X24, 0
	073 JumpIfEqual {203}
	074 Move W1, 2
	075 Move X0, X24
	076 Move X2, X23
	077 Call ModulusRing.Pow, X0, X1, X2
	078 Move X25, X0
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Move W27, W31
	081 Compare W27, 0
	082 JumpIfNotEqual {95}
	083 Move X0, [X26]
	084 Move W8, [X0+224]
	085 Compare W8, 0
	086 JumpIfNotEqual {88}
	087 Call 0x1C17DFC
	088 Move X0, X25
	089 Move X1, X31
	090 Call BigInteger.op_Equality, X0, X1
	091 Move TEMP, X0
	092 And TEMP, TEMP, 1
	093 Compare TEMP, 1
	094 JumpIfNotEqual {128}
	095 Move X0, [X26]
	096 Move W8, [X0+224]
	097 Compare W8, 0
	098 JumpIfNotEqual {100}
	099 Call 0x1C17DFC
	100 Move W0, W19
	101 Call BigInteger.GenerateRandom, X0
	102 Move X25, X0
	103 Move W0, 2
	104 Call BigInteger.op_Implicit, X0
	105 Move X1, X0
	106 Move X0, X25
	107 Call Kernel.Compare, X0, X1
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Move X0, [X26]
	110 Move W8, [X0+224]
	111 Compare W8, 0
	112 JumpIfNotEqual {114}
	113 Call 0x1C17DFC
	114 Move X0, X25
	115 Move X1, X21
	116 Call Kernel.Compare, X0, X1
	117 Move TEMP, X0
	118 And TEMP, TEMP, -2147483648
	119 Compare TEMP, -2147483648
	120 JumpIfNotEqual {95}
	121 Compare X24, 0
	122 JumpIfEqual {203}
	123 Move X0, X24
	124 Move X1, X25
	125 Move X2, X23
	126 Call ModulusRing.Pow, X0, X1, X2
	127 Move X25, X0
	128 Move X0, [X26]
	129 Move W8, [X0+224]
	130 Compare W8, 0
	131 JumpIfNotEqual {133}
	132 Call 0x1C17DFC
	133 Move W1, 1
	134 Move X0, X25
	135 Call BigInteger.op_Equality, X0, X1
	136 Move TEMP, X0
	137 And TEMP, TEMP, 1
	138 Compare TEMP, 1
	139 JumpIfEqual {187}
	140 NotImplemented "Instruction CMP not yet implemented."
	141 Move W28, W22
	142 Move X0, [X26]
	143 Move W8, [X0+224]
	144 Compare W8, 0
	145 JumpIfNotEqual {147}
	146 Call 0x1C17DFC
	147 Move X0, X25
	148 Move X1, X21
	149 Call BigInteger.op_Inequality, X0, X1
	150 Move TEMP, X0
	151 And TEMP, TEMP, 1
	152 Compare TEMP, 1
	153 JumpIfNotEqual {175}
	154 Move X0, [X26]
	155 Move W8, [X0+224]
	156 Compare W8, 0
	157 JumpIfNotEqual {159}
	158 Call 0x1C17DFC
	159 Move W0, 2
	160 Call BigInteger.op_Implicit, X0
	161 Compare X24, 0
	162 JumpIfEqual {203}
	163 Move X2, X0
	164 Move X0, X24
	165 Move X1, X25
	166 Call ModulusRing.Pow, X0, X1, X2
	167 Move W1, 1
	168 Move X25, X0
	169 Call BigInteger.op_Equality, X0, X1
	170 Move TEMP, X0
	171 And TEMP, TEMP, 1
	172 Compare TEMP, 1
	173 JumpIfEqual {190}
	174 Subtract W28, W28, 1
	175 Move X0, [X26]
	176 Move W8, [X0+224]
	177 Compare W8, 0
	178 JumpIfNotEqual {180}
	179 Call 0x1C17DFC
	180 Move X0, X25
	181 Move X1, X21
	182 Call BigInteger.op_Inequality, X0, X1
	183 Move TEMP, X0
	184 And TEMP, TEMP, 1
	185 Compare TEMP, 1
	186 JumpIfEqual {190}
	187 Add W27, W27, 1
	188 NotImplemented "Instruction CMP not yet implemented."
	189 Move W0, 1
	190 Move W0, W31
	191 Move X20, [X31+80]
	192 Move X19, [X31+88]
	193 Move X22, [X31+64]
	194 Move X21, [X31+72]
	195 Move X24, [X31+48]
	196 Move X23, [X31+56]
	197 Move X26, [X31+32]
	198 Move X25, [X31+40]
	199 Move X28, [X31+16]
	200 Move X27, [X31+24]
	201 Move X30, [X31+96]
	202 Return X0
	203 Call 0x1C17F20

