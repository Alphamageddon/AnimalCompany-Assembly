Type: Mono.Math.Prime.PrimalityTest

Method: System.Void .ctor(System.Object object, System.IntPtr method)

Disassembly:
	0x032096B8 MOV X20, X0
	0x032096BC TBNZ X8, 0x0, 0x32096D4
	0x032096C0 ADRP X0, 0xF15000
	0x032096C4 LDR X0, [X0 + 0xD78]
	0x032096C8 BL 0x1C16CF4
	0x032096CC MOVZ W8, 0x1
	0x032096D0 STRB W8, [X21 + 0x26A]
	0x032096D4 LDR X0, [X22]
	0x032096D8 LDR W8, [X0 + 0xE0]
	0x032096DC CBNZ W8, 0x32096E4
	0x032096E0 BL 0x1C16DFC
	0x032096E4 MOV X0, X20
	0x032096E8 MOV W1, W19
	0x032096EC LDP X20, X19, [X31 + 0x20]
	0x032096F0 LDP X22, X21, [X31 + 0x10]
	0x032096F4 LDR X30, [X31], #0x30
	0x032096F8 B 0x3EB1C70
	0x032096FC B 0x3EB1C70
	0x03209700 STR X30, [X31 - 0x30]!
	0x03209704 STP X22, X21, [X31 + 0x10]
	0x03209708 STP X20, X19, [X31 + 0x20]
	0x0320970C ADRP X21, 0x11D3000
	0x03209710 ADRP X22, 0xF15000
	0x03209714 LDRB W8, [X21 + 0x26B]
	0x03209718 LDR X22, [X22 + 0xD78]
	0x0320971C MOV W19, W1
	0x03209720 MOV X20, X0
	0x03209724 TBNZ X8, 0x0, 0x320973C
	0x03209728 ADRP X0, 0xF15000
	0x0320972C LDR X0, [X0 + 0xD78]
	0x03209730 BL 0x1C16CF4
	0x03209734 MOVZ W8, 0x1
	0x03209738 STRB W8, [X21 + 0x26B]
	0x0320973C LDR X0, [X22]
	0x03209740 LDR W8, [X0 + 0xE0]
	0x03209744 CBNZ W8, 0x320974C
	0x03209748 BL 0x1C16DFC
	0x0320974C MOV W0, W19
	0x03209750 BL 0x3EB1C80
	0x03209754 STP W0, W19, [X20]
	0x03209758 LDP X20, X19, [X31 + 0x20]
	0x0320975C LDP X22, X21, [X31 + 0x10]
	0x03209760 LDR X30, [X31], #0x30
	0x03209764 RET
	0x03209768 B 0x3EB1C80
	0x0320976C MOVN W8, 0x0
	0x03209770 STP W1, W8, [X0]
	0x03209774 RET
	0x03209778 LDR W0, [X0]
	0x0320977C RET
	0x03209780 B 0x3EB1C60
	0x03209784 STP X29, X30, [X31 - 0x40]!
	0x03209788 STR X23, [X31 + 0x10]
	0x0320978C STP X22, X21, [X31 + 0x20]
	0x03209790 STP X20, X19, [X31 + 0x30]
	0x03209794 ADD X29, X31, 0x0
	0x03209798 SUB X31, X31, 0x10
	0x0320979C MRS X21, 0xC000
	0x032097A0 LDR X8, [X21 + 0x28]
	0x032097A4 ADRP X20, 0x11D3000
	0x032097A8 ADRP X23, 0xF15000
	0x032097AC MOV W19, W0
	0x032097B0 STUR X8, [X29 - 0x8]
	0x032097B4 LDRB W8, [X20 + 0x270]
	0x032097B8 LDR X23, [X23 + 0xD78]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X2+8]
	007 Move [X0+32], X1
	008 Move [X0+40], X2
	009 Move X19, X0
	010 Move X20, X2
	011 Move [X0+16], X8
	012 Move W22, [X2+82]
	013 Move [X0+64], X0
	014 Move X0, X2
	015 Move X21, X1
	016 Call 0x1C17D84
	017 Move TEMP, X0
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfNotEqual {24}
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move X8, -23416832
	023 Add X8, X8, 2160
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move W8, [X19+112]
	026 Compare W8, 0
	027 JumpIfEqual {49}
	028 Move X0, X20
	029 Call 0x1C17D7C
	030 Move W21, W0
	031 Move X0, X20
	032 Call 0x1C18238
	033 Move TEMP, X21
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfNotEqual {51}
	037 Move TEMP, X0
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfNotEqual {57}
	041 Move X8, -23416832
	042 Add X8, X8, 2444
	043 Compare X21, 0
	044 JumpIfEqual {71}
	045 Move X8, [X19+16]
	046 Move X9, [X19+32]
	047 Move [X19+24], X8
	048 Move [X19+64], X9
	049 Move X8, -23416832
	050 Add X8, X8, 2124
	051 Move TEMP, X0
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfNotEqual {59}
	055 Move X8, -23416832
	056 Add X8, X8, 2228
	057 Move X8, -23416832
	058 Add X8, X8, 2368
	059 Move X8, -23416832
	060 Add X8, X8, 2180
	061 Move [X19+24], X8
	062 Move X8, -23416832
	063 Add X8, X8, 2024
	064 Move [X19+56], X8
	065 Move X20, [X31+32]
	066 Move X19, [X31+40]
	067 Move X22, [X31+16]
	068 Move X21, [X31+24]
	069 Move X30, [X31+48]
	070 Return 
	071 Move X1, -40816640
	072 Add X1, X1, 3811
	073 Move X0, X31
	074 Call 0x1C17F3C
	075 Move X1, X31
	076 Call 0x1C17DEC

Method: System.Boolean Invoke(Mono.Math.BigInteger bi, Mono.Math.Prime.ConfidenceFactor confidence)

Disassembly:
	0x032097BC TBNZ X8, 0x0, 0x32097E0
	0x032097C0 ADRP X0, 0xF12000
	0x032097C4 LDR X0, [X0 + 0x850]
	0x032097C8 BL 0x1C16CF4
	0x032097CC ADRP X0, 0xF15000

ISIL:
	001 Move X8, [X0+64]
	002 Move X4, [X0+24]
	003 Move X3, [X0+40]
	004 Move X0, X8
	005 CallNoReturn X4

