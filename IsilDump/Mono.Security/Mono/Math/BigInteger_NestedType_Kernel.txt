Type: Mono.Math.BigInteger/Kernel

Method: Mono.Math.BigInteger Subtract(Mono.Math.BigInteger big, Mono.Math.BigInteger small)

Disassembly:
	0x03206E44 STP X24, X23, [X31 + 0x10]
	0x03206E48 STP X22, X21, [X31 + 0x20]
	0x03206E4C STP X20, X19, [X31 + 0x30]
	0x03206E50 ADRP X22, 0x11D6000
	0x03206E54 LDRB W8, [X22 + 0x252]
	0x03206E58 MOV X19, X2
	0x03206E5C MOV W20, W1
	0x03206E60 MOV X21, X0
	0x03206E64 TBNZ X8, 0x0, 0x3206EAC
	0x03206E68 ADRP X0, 0xF1B000
	0x03206E6C LDR X0, [X0 + 0x530]
	0x03206E70 BL 0x1C16CF4
	0x03206E74 ADRP X0, 0xEEF000
	0x03206E78 LDR X0, [X0 + 0x170]
	0x03206E7C BL 0x1C16CF4
	0x03206E80 ADRP X0, 0xEED000
	0x03206E84 LDR X0, [X0 + 0x988]
	0x03206E88 BL 0x1C16CF4
	0x03206E8C ADRP X0, 0xF11000
	0x03206E90 LDR X0, [X0 + 0xEC0]
	0x03206E94 BL 0x1C16CF4
	0x03206E98 ADRP X0, 0xEEF000
	0x03206E9C LDR X0, [X0 + 0x4B0]
	0x03206EA0 BL 0x1C16CF4
	0x03206EA4 MOVZ W8, 0x1
	0x03206EA8 STRB W8, [X22 + 0x252]
	0x03206EAC STRH W31, [X31 + 0xC]
	0x03206EB0 CBZ X19, 0x3206FDC
	0x03206EB4 LDRSW X8, [X19 + 0x10]
	0x03206EB8 CMP X8, W20, UXTW
	0x03206EBC B.LT 0x3206FE0
	0x03206EC0 CMP W20, 0x1
	0x03206EC4 B.EQ 0x3207010
	0x03206EC8 ADRP X24, 0xF1B000
	0x03206ECC LDR X24, [X24 + 0x530]
	0x03206ED0 LDR X0, [X24]
	0x03206ED4 LDR W8, [X0 + 0xE0]
	0x03206ED8 CBNZ W8, 0x3206EE0
	0x03206EDC BL 0x1C16DFC
	0x03206EE0 MOV X0, X21
	0x03206EE4 MOV W1, W31
	0x03206EE8 BL 0x3205C94
	0x03206EEC TBZ X0, 0x0, 0x3206EFC
	0x03206EF0 ADRP X8, 0xEEF000
	0x03206EF4 LDR X8, [X8 + 0x4B0]
	0x03206EF8 B 0x3206F24
	0x03206EFC LDR X0, [X24]
	0x03206F00 LDR W8, [X0 + 0xE0]
	0x03206F04 CBNZ W8, 0x3206F0C
	0x03206F08 BL 0x1C16DFC
	0x03206F0C MOVZ W1, 0x1
	0x03206F10 MOV X0, X21
	0x03206F14 BL 0x3205C94
	0x03206F18 TBZ X0, 0x0, 0x3206F40
	0x03206F1C ADRP X8, 0xF11000
	0x03206F20 LDR X8, [X8 + 0xEC0]
	0x03206F24 LDR X22, [X8]
	0x03206F28 MOV X0, X22
	0x03206F2C LDP X20, X19, [X31 + 0x30]
	0x03206F30 LDP X22, X21, [X31 + 0x20]
	0x03206F34 LDP X24, X23, [X31 + 0x10]
	0x03206F38 LDR X30, [X31], #0x40
	0x03206F3C RET
	0x03206F40 ADRP X8, 0xEED000
	0x03206F44 LDR X8, [X8 + 0x988]
	0x03206F48 LDR X0, [X24]
	0x03206F4C LDR X22, [X8]
	0x03206F50 BL 0x1C16F10
	0x03206F54 MOV X1, X21
	0x03206F58 MOV X23, X0
	0x03206F5C BL 0x3205A20
	0x03206F60 ADRP X21, 0xEEF000
	0x03206F64 LDR X21, [X21 + 0x170]
	0x03206F68 LDR X0, [X24]
	0x03206F6C LDR W8, [X0 + 0xE0]
	0x03206F70 CBNZ W8, 0x3206F78
	0x03206F74 BL 0x1C16DFC
	0x03206F78 MOV X0, X23
	0x03206F7C MOV W1, W31
	0x03206F80 BL 0x3206D34
	0x03206F84 TBZ X0, 0x0, 0x3206F28
	0x03206F88 MOV X0, X23
	0x03206F8C MOV W1, W20
	0x03206F90 BL 0x320706C
	0x03206F94 MOV W1, W0
	0x03206F98 MOV X0, X19
	0x03206F9C MOV X2, X31
	0x03206FA0 BL 0x3222A1C
	0x03206FA4 LDR X8, [X21]
	0x03206FA8 STRH W0, [X31 + 0xC]
	0x03206FAC LDR W9, [X8 + 0xE0]
	0x03206FB0 CBNZ W9, 0x3206FBC
	0x03206FB4 MOV X0, X8
	0x03206FB8 BL 0x1C16DFC
	0x03206FBC ADD X0, X31, 0xC
	0x03206FC0 MOV X1, X31
	0x03206FC4 BL 0x330A76C
	0x03206FC8 MOV X1, X22
	0x03206FCC MOV X2, X31
	0x03206FD0 BL 0x321B938
	0x03206FD4 MOV X22, X0
	0x03206FD8 B 0x3206F68
	0x03206FDC BL 0x1C16F20
	0x03206FE0 ADRP X0, 0xEF5000
	0x03206FE4 LDR X0, [X0 + 0x578]
	0x03206FE8 BL 0x1C16D08
	0x03206FEC BL 0x1C16F10
	0x03206FF0 MOV X19, X0
	0x03206FF4 ADRP X0, 0xF1B000
	0x03206FF8 LDR X0, [X0 + 0x718]
	0x03206FFC BL 0x1C16D08
	0x03207000 MOV X20, X0
	0x03207004 ADRP X0, 0xF1A000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x11D7000
	007 Move W8, [X20+605]
	008 Move X21, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xF1C000
	015 Move X0, [X0+1328]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+605], W8
	019 Compare X19, 0
	020 JumpIfEqual {118}
	021 Move X8, 0xF1C000
	022 Move X8, [X8+1328]
	023 Move W22, [X19+16]
	024 Move X0, [X8]
	025 Call 0x1C17F10
	026 Move W2, W22
	027 Move X20, X0
	028 Call BigInteger..ctor, X0, X1, X2
	029 Compare X20, 0
	030 JumpIfEqual {118}
	031 Compare X21, 0
	032 JumpIfEqual {118}
	033 Move X11, [X21+24]
	034 Compare X11, 0
	035 JumpIfEqual {118}
	036 Move X8, [X19+24]
	037 Move X9, [X20+24]
	038 Move W14, [X11+24]
	039 Move X10, X31
	040 Move W13, W31
	041 Add X15, X11, 32
	042 Add X16, X8, 32
	043 Add X17, X9, 32
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Compare X8, 0
	046 JumpIfEqual {118}
	047 Move X11, [X8+24]
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Compare X9, 0
	050 JumpIfEqual {118}
	051 Move X12, [X9+24]
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move W0, [X15]
	054 Move W1, [X16]
	055 Add W0, W0, W13
	056 Subtract W1, W1, W0
	057 Move [X17], W1
	058 Move W2, [X21+16]
	059 NotImplemented "Instruction CMP not yet implemented."
	060 NotImplemented "Instruction CSET not yet implemented."
	061 Add W31, W0, W1
	062 NotImplemented "Instruction CSET not yet implemented."
	063 Add X10, X10, 1
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Or W13, W13, W0
	066 Move W14, [X19+16]
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Move TEMP, X13
	069 And TEMP, TEMP, 1
	070 Compare TEMP, 1
	071 JumpIfNotEqual {94}
	072 NotImplemented "Instruction CMP not yet implemented."
	073 NotImplemented "Instruction CSEL not yet implemented."
	074 NotImplemented "Instruction CMP not yet implemented."
	075 NotImplemented "Instruction CSEL not yet implemented."
	076 Add X13, X8, 32
	077 And X14, X14, 0
	078 And X15, X15, 0
	079 Add X16, X9, 32
	080 NotImplemented "Instruction CMP not yet implemented."
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Move W17, [X13]
	083 Subtract W17, W17, 1
	084 Move [X16], W17
	085 Move W1, [X13]
	086 Move W0, [X19+16]
	087 Add X17, X10, 1
	088 Compare W1, 0
	089 JumpIfNotEqual {92}
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Move X10, X17
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Move W10, W17
	094 NotImplemented "Instruction CMP not yet implemented."
	095 NotImplemented "Instruction CSEL not yet implemented."
	096 NotImplemented "Instruction CMP not yet implemented."
	097 Move W13, W10
	098 Add X9, X9, 32
	099 NotImplemented "Instruction CSEL not yet implemented."
	100 Add X8, X8, 32
	101 NotImplemented "Instruction CMP not yet implemented."
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Move W12, [X8]
	104 Move [X9], W12
	105 Move W12, [X19+16]
	106 Add X13, X13, 1
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Move X0, X20
	109 Call BigInteger.Normalize, X0
	110 Move X0, X20
	111 Move X20, [X31+32]
	112 Move X19, [X31+40]
	113 Move X22, [X31+16]
	114 Move X21, [X31+24]
	115 Move X30, [X31+48]
	116 Return X0
	117 Call 0x1C17F28
	118 Call 0x1C17F20

Method: System.Void MinusEq(Mono.Math.BigInteger big, Mono.Math.BigInteger small)

Disassembly:
	0x03208E10 MOVZ W9, 0x13
	0x03208E14 MSUB W8, W8, W9, W22
	0x03208E18 CBZ W8, 0x3208F8C
	0x03208E1C MOVZ W8, 0xF0F1
	0x03208E20 MOVK W8, 0xF0F00000
	0x03208E24 UMADDL X8, X22, X8, X31
	0x03208E28 UBFM X8, X8, 0x24, 0x3F
	0x03208E2C ADD W8, W8, W8, 0x4, LSL
	0x03208E30 SUB W8, W22, W8
	0x03208E34 CBZ W8, 0x3208F8C
	0x03208E38 MOVZ W8, 0xEC4F
	0x03208E3C MOVK W8, 0x4EC40000
	0x03208E40 UMADDL X8, X22, X8, X31
	0x03208E44 UBFM X8, X8, 0x22, 0x3F
	0x03208E48 MOVZ W9, 0xD
	0x03208E4C MSUB W8, W8, W9, W22
	0x03208E50 CBZ W8, 0x3208F8C
	0x03208E54 MOVZ W8, 0x8BA3
	0x03208E58 MOVK W8, 0xBA2E0000
	0x03208E5C UMADDL X8, X22, X8, X31
	0x03208E60 UBFM X8, X8, 0x23, 0x3F
	0x03208E64 MOVZ W9, 0xB
	0x03208E68 MSUB W8, W8, W9, W22
	0x03208E6C CBZ W8, 0x3208F8C
	0x03208E70 MOVZ W8, 0x4925
	0x03208E74 MOVK W8, 0x24920000
	0x03208E78 UMADDL X8, X22, X8, X31
	0x03208E7C UBFM X8, X8, 0x20, 0x3F
	0x03208E80 SUB W9, W22, W8
	0x03208E84 ADD W8, W8, W9, 0x1, LSR
	0x03208E88 UBFM W8, W8, 0x2, 0x1F
	0x03208E8C SUB W8, W8, W8, 0x3, LSL
	0x03208E90 ADD W8, W22, W8
	0x03208E94 CBZ W8, 0x3208F8C
	0x03208E98 MOVZ W8, 0xAAAB
	0x03208E9C MOVK W8, 0xAAAA0000
	0x03208EA0 UMADDL X8, X22, X8, X31
	0x03208EA4 UBFM X8, X8, 0x21, 0x3F
	0x03208EA8 ADD W8, W8, W8, 0x1, LSL
	0x03208EAC SUB W8, W22, W8
	0x03208EB0 CBZ W8, 0x3208F8C
	0x03208EB4 MOVZ W8, 0xCCCD
	0x03208EB8 MOVK W8, 0xCCCC0000
	0x03208EBC UMADDL X8, X22, X8, X31
	0x03208EC0 UBFM X8, X8, 0x22, 0x3F
	0x03208EC4 ADD W8, W8, W8, 0x2, LSL
	0x03208EC8 SUB W8, W22, W8
	0x03208ECC CBZ W8, 0x3208F8C
	0x03208ED0 CBZ X29, 0x3208FDC
	0x03208ED4 LDR W8, [X29 + 0x18]
	0x03208ED8 CMP W8, 0xB
	0x03208EDC B.LT 0x3208F2C
	0x03208EE0 MOVZ W25, 0xA
	0x03208EE4 CMP W25, W8
	0x03208EE8 B.CS 0x3208FD8
	0x03208EEC ADD X8, X29, W25, 0x2, SXTW
	0x03208EF0 LDR W23, [X8 + 0x20]
	0x03208EF4 CMP X23, X26
	0x03208EF8 B.GT 0x3208F2C
	0x03208EFC LDR X0, [X24]
	0x03208F00 LDR W8, [X0 + 0xE0]
	0x03208F04 CBNZ W8, 0x3208F0C
	0x03208F08 BL 0x1C16DFC
	0x03208F0C MOV X0, X21
	0x03208F10 MOV W1, W23
	0x03208F14 BL 0x3206008
	0x03208F18 CBZ W0, 0x3208F8C
	0x03208F1C LDR W8, [X29 + 0x18]
	0x03208F20 ADD W25, W25, 0x1
	0x03208F24 CMP W25, W8
	0x03208F28 B.LT 0x3208EE4
	0x03208F2C LDR X8, [X20]
	0x03208F30 LDR X2, [X31 + 0x8]
	0x03208F34 MOV X0, X20
	0x03208F38 MOV X1, X21
	0x03208F3C LDP X9, X3, [X8 + 0x1D8]

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {74}
	004 Compare X1, 0
	005 JumpIfEqual {74}
	006 Move X9, [X1+24]
	007 Compare X9, 0
	008 JumpIfEqual {74}
	009 Move X8, [X0+24]
	010 Move W11, [X9+24]
	011 Move X10, X31
	012 Move W16, W31
	013 Add X12, X9, 32
	014 Add X13, X8, 32
	015 NotImplemented "Instruction CMP not yet implemented."
	016 Compare X8, 0
	017 JumpIfEqual {74}
	018 Move X9, [X8+24]
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move W15, [X12]
	021 Move W14, W16
	022 Move W16, [X13]
	023 Add W15, W15, W14
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Subtract W17, W16, W15
	026 Move [X13], W17
	027 Move W3, [X1+16]
	028 NotImplemented "Instruction ORN not yet implemented."
	029 NotImplemented "Instruction CSET not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 NotImplemented "Instruction CSET not yet implemented."
	032 Add X10, X10, 1
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Or W16, W16, W4
	035 Move W13, [X0+16]
	036 NotImplemented "Instruction CMP not yet implemented."
	037 NotImplemented "Instruction CSET not yet implemented."
	038 NotImplemented "Instruction CMP not yet implemented."
	039 NotImplemented "Instruction CSET not yet implemented."
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Or W11, W12, W11
	042 Compare W11, 0
	043 JumpIfEqual {57}
	044 NotImplemented "Instruction CMP not yet implemented."
	045 NotImplemented "Instruction CSEL not yet implemented."
	046 And X11, X11, 0
	047 Add X12, X8, 32
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move W13, [X12]
	050 Subtract W13, W13, 1
	051 Move [X12], W13
	052 Move W13, [X0+16]
	053 Add X10, X10, 1
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Compare W13, 0
	056 JumpIfNotEqual {59}
	057 Compare W13, 0
	058 JumpIfEqual {69}
	059 Subtract W10, W13, 1
	060 Move W11, W10
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Add X12, X8, W11
	063 Move W12, [X12+32]
	064 Compare W12, 0
	065 JumpIfNotEqual {71}
	066 Move [X0+16], W11
	067 Subtract W11, W11, 1
	068 Add W31, W11, 1
	069 Move W8, 1
	070 Move [X0+16], W8
	071 Move X30, [X31+16]
	072 Return 
	073 Call 0x1C17F28
	074 Call 0x1C17F20

Method: System.Void PlusEq(Mono.Math.BigInteger bi1, Mono.Math.BigInteger bi2)

Disassembly:
	0x03208F40 BLR X9
	0x03208F44 TBZ X0, 0x0, 0x3208F8C
	0x03208F48 LDR X8, [X20]
	0x03208F4C MOV X0, X20
	0x03208F50 LDP X9, X1, [X8 + 0x188]
	0x03208F54 BLR X9
	0x03208F58 LDR X8, [X20]
	0x03208F5C MOV X23, X0
	0x03208F60 MOV X0, X20
	0x03208F64 LDP X9, X1, [X8 + 0x178]
	0x03208F68 BLR X9
	0x03208F6C CBZ X23, 0x3208FDC
	0x03208F70 MOV W2, W0
	0x03208F74 LDR X8, [X23 + 0x18]
	0x03208F78 LDR X0, [X23 + 0x40]
	0x03208F7C LDR X3, [X23 + 0x28]
	0x03208F80 MOV X1, X21
	0x03208F84 BLR X8
	0x03208F88 TBNZ X0, 0x0, 0x3208FB4
	0x03208F8C CBZ X21, 0x3208FDC
	0x03208F90 MOVZ W10, 0xD796
	0x03208F94 ADD W8, W22, 0x2
	0x03208F98 MOVK W10, 0xC0CF0000
	0x03208F9C ADD W9, W22, W27
	0x03208FA0 CMP W8, W10
	0x03208FA4 MOV X0, X21
	0x03208FA8 CSEL W22, W9, W8, HI
	0x03208FAC BL 0x3207960
	0x03208FB0 B 0x3208DCC
	0x03208FB4 MOV X0, X21
	0x03208FB8 LDP X20, X19, [X31 + 0x60]
	0x03208FBC LDP X22, X21, [X31 + 0x50]
	0x03208FC0 LDP X24, X23, [X31 + 0x40]
	0x03208FC4 LDP X26, X25, [X31 + 0x30]
	0x03208FC8 LDP X28, X27, [X31 + 0x20]
	0x03208FCC LDP X29, X30, [X31 + 0x10]
	0x03208FD0 ADD X31, X31, 0x70
	0x03208FD4 RET
	0x03208FD8 BL 0x1C16F28
	0x03208FDC BL 0x1C16F20
	0x03208FE0 MOVZ W0, 0x1
	0x03208FE4 RET
	0x03208FE8 STR X30, [X31 - 0x30]!
	0x03208FEC STP X22, X21, [X31 + 0x10]
	0x03208FF0 STP X20, X19, [X31 + 0x20]
	0x03208FF4 ADRP X22, 0x11D4000
	0x03208FF8 LDRB W8, [X22 + 0x268]
	0x03208FFC MOV W21, W2
	0x03209000 MOV X19, X1
	0x03209004 MOV X20, X0
	0x03209008 STR X0, [X31 + 0x8]
	0x0320900C TBNZ X8, 0x0, 0x3209108
	0x03209010 ADRP X0, 0xEF2000
	0x03209014 LDR X0, [X0 + 0x760]
	0x03209018 BL 0x1C16CF4
	0x0320901C ADRP X0, 0xF18000
	0x03209020 LDR X0, [X0 + 0x798]
	0x03209024 BL 0x1C16CF4
	0x03209028 ADRP X0, 0xF18000
	0x0320902C LDR X0, [X0 + 0x7A0]
	0x03209030 BL 0x1C16CF4
	0x03209034 ADRP X0, 0xF18000
	0x03209038 LDR X0, [X0 + 0x7A8]
	0x0320903C BL 0x1C16CF4
	0x03209040 ADRP X0, 0xEF2000
	0x03209044 LDR X0, [X0 + 0x8A8]
	0x03209048 BL 0x1C16CF4
	0x0320904C ADRP X0, 0xF18000
	0x03209050 LDR X0, [X0 + 0x7B0]
	0x03209054 BL 0x1C16CF4
	0x03209058 ADRP X0, 0xF18000
	0x0320905C LDR X0, [X0 + 0x7B8]
	0x03209060 BL 0x1C16CF4
	0x03209064 ADRP X0, 0xF18000
	0x03209068 LDR X0, [X0 + 0x7C0]
	0x0320906C BL 0x1C16CF4
	0x03209070 ADRP X0, 0xEF4000
	0x03209074 LDR X0, [X0 + 0xEC8]
	0x03209078 BL 0x1C16CF4
	0x0320907C ADRP X0, 0xF18000
	0x03209080 LDR X0, [X0 + 0x7C8]
	0x03209084 BL 0x1C16CF4
	0x03209088 ADRP X0, 0xF18000
	0x0320908C LDR X0, [X0 + 0x7D0]
	0x03209090 BL 0x1C16CF4
	0x03209094 ADRP X0, 0xF18000
	0x03209098 LDR X0, [X0 + 0x7D8]
	0x0320909C BL 0x1C16CF4
	0x032090A0 ADRP X0, 0xF18000
	0x032090A4 LDR X0, [X0 + 0x7E0]
	0x032090A8 BL 0x1C16CF4
	0x032090AC ADRP X0, 0xF18000
	0x032090B0 LDR X0, [X0 + 0x7E8]
	0x032090B4 BL 0x1C16CF4
	0x032090B8 ADRP X0, 0xF18000
	0x032090BC LDR X0, [X0 + 0x7F0]
	0x032090C0 BL 0x1C16CF4
	0x032090C4 ADRP X0, 0xF18000
	0x032090C8 LDR X0, [X0 + 0x7F8]
	0x032090CC BL 0x1C16CF4

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {97}
	004 Compare X1, 0
	005 JumpIfEqual {97}
	006 Move W12, [X0+16]
	007 Move W14, [X1+16]
	008 NotImplemented "Instruction CMP not yet implemented."
	009 NotImplemented "Instruction CSEL not yet implemented."
	010 Move X9, [X8+24]
	011 NotImplemented "Instruction CSEL not yet implemented."
	012 NotImplemented "Instruction CSEL not yet implemented."
	013 Compare X9, 0
	014 JumpIfEqual {97}
	015 Move W11, [X10+16]
	016 Move X17, [X10+24]
	017 Move X10, [X0+24]
	018 Move W13, [X9+24]
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move X16, X31
	021 Move X1, X31
	022 Add X2, X9, 32
	023 Add X3, X17, 32
	024 NotImplemented "Instruction CSINC not yet implemented."
	025 Add X4, X10, 32
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Compare X17, 0
	028 JumpIfEqual {97}
	029 Move W15, [X17+24]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Compare X10, 0
	032 JumpIfEqual {97}
	033 Move W15, [X10+24]
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move W5, [X2]
	036 Move W6, [X3]
	037 Add X1, X1, X5
	038 Add X1, X1, X6
	039 Move [X4], W1
	040 Add X16, X16, 1
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move X1, X1
	043 ShiftRight X1, 32
	044 And X1, X1, 0x7FFFFFFF
	045 Compare X1, 0
	046 JumpIfEqual {66}
	047 NotImplemented "Instruction CMP not yet implemented."
	048 NotImplemented "Instruction CMP not yet implemented."
	049 NotImplemented "Instruction CSEL not yet implemented."
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move W16, W8
	052 Add X17, X9, 32
	053 NotImplemented "Instruction CSEL not yet implemented."
	054 Add X3, X10, 32
	055 NotImplemented "Instruction CMP not yet implemented."
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move W4, [X17]
	058 Add W4, W4, 1
	059 Move [X3], W4
	060 Add X11, X11, 1
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Compare W4, 0
	063 JumpIfEqual {55}
	064 Compare W4, 0
	065 JumpIfEqual {88}
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Subtract W12, W8, 1
	068 NotImplemented "Instruction CMP not yet implemented."
	069 NotImplemented "Instruction CMP not yet implemented."
	070 NotImplemented "Instruction CSEL not yet implemented."
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move W12, W11
	073 Move W14, W8
	074 Add X10, X10, 32
	075 NotImplemented "Instruction CSEL not yet implemented."
	076 Add X9, X9, 32
	077 NotImplemented "Instruction CMP not yet implemented."
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Move W15, [X9]
	080 Move [X10], W15
	081 Add X12, X12, 1
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Add W8, W8, 1
	084 Move [X0+16], W8
	085 Move X30, [X31+16]
	086 Call BigInteger.Normalize, X0
	087 Return 
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Add X8, X10, W11
	090 Move W9, 1
	091 Add W10, W11, 1
	092 Move [X8+32], W9
	093 Move [X0+16], W10
	094 Move X30, [X31+16]
	095 Return 
	096 Call 0x1C17F28
	097 Call 0x1C17F20

Method: Mono.Math.BigInteger/Sign Compare(Mono.Math.BigInteger bi1, Mono.Math.BigInteger bi2)

Disassembly:
	0x03206D00 MOV W1, W31
	0x03206D04 BL 0x3205C94
	0x03206D08 MOVN W20, 0x0
	0x03206D0C TBNZ X0, 0x0, 0x3206D24
	0x03206D10 ADD W20, W20, 0x1
	0x03206D14 MOV X0, X19
	0x03206D18 MOV W1, W20
	0x03206D1C BL 0x3206BC0
	0x03206D20 TBZ X0, 0x0, 0x3206D10
	0x03206D24 MOV W0, W20
	0x03206D28 LDP X20, X19, [X31 + 0x10]
	0x03206D2C LDP X30, X21, [X31], #0x20
	0x03206D30 RET
	0x03206D34 STR X30, [X31 - 0x20]!
	0x03206D38 STP X20, X19, [X31 + 0x10]
	0x03206D3C CBZ X0, 0x3206D98
	0x03206D40 LDR W8, [X0 + 0x10]
	0x03206D44 MOV W19, W1
	0x03206D48 MOV X20, X0
	0x03206D4C CMP W8, 0x1
	0x03206D50 B.EQ 0x3206D68
	0x03206D54 MOV X0, X20
	0x03206D58 BL 0x3205BB4
	0x03206D5C LDR W8, [X20 + 0x10]
	0x03206D60 CMP W8, 0x1
	0x03206D64 B.NE 0x3206D88
	0x03206D68 LDR X8, [X20 + 0x18]
	0x03206D6C CBZ X8, 0x3206D98
	0x03206D70 LDR W9, [X8 + 0x18]
	0x03206D74 CBZ W9, 0x3206D9C
	0x03206D78 LDR W8, [X8 + 0x20]
	0x03206D7C CMP W8, W19
	0x03206D80 CSET W0, NE
	0x03206D84 B 0x3206D8C
	0x03206D88 MOVZ W0, 0x1
	0x03206D8C LDP X20, X19, [X31 + 0x10]
	0x03206D90 LDR X30, [X31], #0x20
	0x03206D94 RET
	0x03206D98 BL 0x1C16F20
	0x03206D9C BL 0x1C16F28
	0x03206DA0 STR X30, [X31 - 0x10]!
	0x03206DA4 BL 0x3205D00
	0x03206DA8 CMP W0, 0x0
	0x03206DAC CSET W0, GT
	0x03206DB0 LDR X30, [X31], #0x10
	0x03206DB4 RET
	0x03206DB8 STR X30, [X31 - 0x10]!
	0x03206DBC BL 0x3205D00
	0x03206DC0 ORN W8, W31, W0, 0x0
	0x03206DC4 UBFM W0, W8, 0x1F, 0x1F
	0x03206DC8 LDR X30, [X31], #0x10
	0x03206DCC RET
	0x03206DD0 STR X30, [X31 - 0x10]!
	0x03206DD4 BL 0x3205D00
	0x03206DD8 CMP W0, 0x1
	0x03206DDC CSET W0, LT
	0x03206DE0 LDR X30, [X31], #0x10
	0x03206DE4 RET
	0x03206DE8 STR X30, [X31 - 0x30]!
	0x03206DEC STP X22, X21, [X31 + 0x10]
	0x03206DF0 STP X20, X19, [X31 + 0x20]
	0x03206DF4 ADRP X21, 0x11D6000
	0x03206DF8 ADRP X22, 0xF1B000
	0x03206DFC LDRB W8, [X21 + 0x251]
	0x03206E00 LDR X22, [X22 + 0x710]
	0x03206E04 MOV W19, W1
	0x03206E08 MOV X20, X0
	0x03206E0C TBNZ X8, 0x0, 0x3206E24
	0x03206E10 ADRP X0, 0xF1B000
	0x03206E14 LDR X0, [X0 + 0x710]
	0x03206E18 BL 0x1C16CF4
	0x03206E1C MOVZ W8, 0x1
	0x03206E20 STRB W8, [X21 + 0x251]
	0x03206E24 LDR X2, [X22]
	0x03206E28 MOV X0, X20
	0x03206E2C MOV W1, W19
	0x03206E30 LDP X20, X19, [X31 + 0x20]
	0x03206E34 LDP X22, X21, [X31 + 0x10]
	0x03206E38 LDR X30, [X31], #0x30
	0x03206E3C B 0x3206E40
	0x03206E40 STR X30, [X31 - 0x40]!

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {82}
	004 Compare X1, 0
	005 JumpIfEqual {82}
	006 Move W10, [X0+16]
	007 Move W9, [X1+16]
	008 Move W8, W10
	009 Compare W10, 0
	010 JumpIfEqual {21}
	011 Move X11, [X0+24]
	012 Compare X11, 0
	013 JumpIfEqual {82}
	014 Move W12, [X11+24]
	015 Subtract W10, W8, 1
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Add X11, X11, W10
	018 Move W11, [X11+32]
	019 Compare W11, 0
	020 JumpIfEqual {8}
	021 Subtract W10, W8, 1
	022 Move W11, W9
	023 Compare W9, 0
	024 JumpIfEqual {35}
	025 Move X12, [X1+24]
	026 Compare X12, 0
	027 JumpIfEqual {82}
	028 Move W13, [X12+24]
	029 Subtract W9, W11, 1
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Add X12, X12, W9
	032 Move W12, [X12+32]
	033 Compare W12, 0
	034 JumpIfEqual {22}
	035 Or W9, W11, W8
	036 Compare W9, 0
	037 JumpIfEqual {42}
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move TEMP, 0
	040 Not TEMP
	041 Move W0, TEMP
	042 Move W0, W31
	043 Move W0, 1
	044 Move X8, [X0+24]
	045 Move W9, W10
	046 Compare W10, 0
	047 JumpIfEqual {64}
	048 Compare X8, 0
	049 JumpIfEqual {82}
	050 Move W10, [X8+24]
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move X10, [X1+24]
	053 Compare X10, 0
	054 JumpIfEqual {82}
	055 Move W11, [X10+24]
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move W11, W9
	058 Add X12, X8, X11
	059 Add X10, X10, X11
	060 Move W11, [X12+32]
	061 Move W10, [X10+32]
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Subtract W10, W9, 1
	064 Compare X8, 0
	065 JumpIfEqual {82}
	066 Move W10, [X8+24]
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Move X10, [X1+24]
	069 Compare X10, 0
	070 JumpIfEqual {82}
	071 Move W11, [X10+24]
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Move W9, W9
	074 Add X8, X8, X9
	075 Add X9, X10, X9
	076 Move W8, [X8+32]
	077 Move W9, [X9+32]
	078 NotImplemented "Instruction CMP not yet implemented."
	079 NotImplemented "Instruction CSET not yet implemented."
	080 Move X30, [X31+16]
	081 Return X0
	082 Call 0x1C17F20
	083 Call 0x1C17F28

Method: System.UInt32 SingleByteDivideInPlace(Mono.Math.BigInteger n, System.UInt32 d)

Disassembly:
	0x0320806C ADD X9, X9, 0x20
	0x03208070 CMP X13, X12
	0x03208074 B.EQ 0x32080C8
	0x03208078 CMP X11, X12
	0x0320807C B.EQ 0x32080C8
	0x03208080 LDR W15, [X9, X12, LSL #2]
	0x03208084 STR W15, [X10, X12, LSL #2]
	0x03208088 ADD X12, X12, 0x1
	0x0320808C CMP X12, X14
	0x03208090 B.CC 0x3208070
	0x03208094 ADD W8, W8, 0x1
	0x03208098 STR W8, [X0 + 0x10]
	0x0320809C LDR X30, [X31], #0x10
	0x032080A0 B 0x3205BB4
	0x032080A4 CMP W11, W15
	0x032080A8 B.CS 0x32080C8
	0x032080AC ADD X8, X10, W11, 0x2, UXTW
	0x032080B0 MOVZ W9, 0x1
	0x032080B4 ADD W10, W11, 0x1
	0x032080B8 STR W9, [X8 + 0x20]
	0x032080BC STR W10, [X0 + 0x10]
	0x032080C0 LDR X30, [X31], #0x10
	0x032080C4 RET
	0x032080C8 BL 0x1C16F28
	0x032080CC BL 0x1C16F20
	0x032080D0 STP X30, X23, [X31 - 0x30]!
	0x032080D4 STP X22, X21, [X31 + 0x10]
	0x032080D8 STP X20, X19, [X31 + 0x20]
	0x032080DC ADRP X22, 0x11D4000

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Compare X0, 0
	004 JumpIfEqual {33}
	005 Move W8, [X0+16]
	006 Compare W8, 0
	007 JumpIfEqual {26}
	008 Move X11, [X0+24]
	009 Compare X11, 0
	010 JumpIfEqual {33}
	011 Move W9, [X11+24]
	012 Move X19, X31
	013 Move W10, W1
	014 Add X11, X11, 28
	015 Subtract X12, X8, 1
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Move W13, [X11]
	018 NotImplemented "Instruction BFM not yet implemented."
	019 NotImplemented "Instruction UDIV not yet implemented."
	020 Move [X11], W14
	021 NotImplemented "Instruction NOP not yet implemented."
	022 NotImplemented "Instruction MSUB not yet implemented."
	023 Move X8, X12
	024 Compare X12, 0
	025 JumpIfNotEqual {15}
	026 Move W19, W31
	027 Call BigInteger.Normalize, X0
	028 Move W0, W19
	029 Move X30, [X31+16]
	030 Move X19, [X31+24]
	031 Return X0
	032 Call 0x1C17F28
	033 Call 0x1C17F20

Method: System.UInt32 DwordMod(Mono.Math.BigInteger n, System.UInt32 d)

Disassembly:
	0x03207008 LDR X0, [X0 + 0x720]
	0x0320700C B 0x320703C
	0x03207010 ADRP X0, 0xEF4000
	0x03207014 LDR X0, [X0 + 0x578]
	0x03207018 BL 0x1C16D08
	0x0320701C BL 0x1C16F10
	0x03207020 MOV X19, X0
	0x03207024 ADRP X0, 0xF1A000
	0x03207028 LDR X0, [X0 + 0x728]
	0x0320702C BL 0x1C16D08
	0x03207030 MOV X20, X0
	0x03207034 ADRP X0, 0xF1A000
	0x03207038 LDR X0, [X0 + 0x730]
	0x0320703C BL 0x1C16D08
	0x03207040 MOV X2, X0
	0x03207044 MOV X0, X19
	0x03207048 MOV X1, X20
	0x0320704C MOV X3, X31
	0x03207050 BL 0x330E16C
	0x03207054 ADRP X0, 0xF1A000
	0x03207058 LDR X0, [X0 + 0x738]
	0x0320705C BL 0x1C16D08
	0x03207060 MOV X1, X0
	0x03207064 MOV X0, X19
	0x03207068 BL 0x1C16DEC

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {27}
	004 Move W8, [X0+16]
	005 Compare W8, 0
	006 JumpIfEqual {23}
	007 Move X11, [X0+24]
	008 Compare X11, 0
	009 JumpIfEqual {27}
	010 Move W9, [X11+24]
	011 Move X0, X31
	012 Move W10, W1
	013 Add X11, X11, 28
	014 Subtract X12, X8, 1
	015 NotImplemented "Instruction CMP not yet implemented."
	016 Move W13, [X11]
	017 Move X8, X12
	018 NotImplemented "Instruction BFM not yet implemented."
	019 NotImplemented "Instruction UDIV not yet implemented."
	020 NotImplemented "Instruction MSUB not yet implemented."
	021 Compare X12, 0
	022 JumpIfNotEqual {14}
	023 Move W0, W31
	024 Move X30, [X31+16]
	025 Return X0
	026 Call 0x1C17F28
	027 Call 0x1C17F20

Method: Mono.Math.BigInteger[] DwordDivMod(Mono.Math.BigInteger n, System.UInt32 d)

Disassembly:
	0x03209470 MOV X1, X19
	0x03209474 MOV X2, X31
	0x03209478 BL 0x32E16E0
	0x0320947C B 0x32094C0
	0x03209480 ADRP X8, 0xF18000
	0x03209484 LDR X8, [X8 + 0x7C0]
	0x03209488 MOV X1, X19
	0x0320948C LDR X0, [X8]
	0x03209490 BL 0x32094D4
	0x03209494 ADRP X8, 0xF18000
	0x03209498 LDR X8, [X8 + 0x7A0]
	0x0320949C MOV X21, X0
	0x032094A0 LDR X8, [X8]
	0x032094A4 MOV X0, X8
	0x032094A8 BL 0x1C16F10
	0x032094AC MOV X1, X21
	0x032094B0 MOV X2, X19
	0x032094B4 MOV X3, X31
	0x032094B8 MOV X20, X0
	0x032094BC BL 0x32E1E8C
	0x032094C0 MOV X0, X20
	0x032094C4 LDP X20, X19, [X31 + 0x20]
	0x032094C8 LDP X22, X21, [X31 + 0x10]
	0x032094CC LDR X30, [X31], #0x30
	0x032094D0 RET
	0x032094D4 STR X30, [X31 - 0x30]!
	0x032094D8 STP X22, X21, [X31 + 0x10]
	0x032094DC STP X20, X19, [X31 + 0x20]
	0x032094E0 ADRP X21, 0x11D3000
	0x032094E4 ADRP X22, 0xEEC000
	0x032094E8 LDRB W8, [X21 + 0x278]
	0x032094EC LDR X22, [X22 + 0xC48]
	0x032094F0 MOV X19, X1
	0x032094F4 MOV X20, X0
	0x032094F8 TBNZ X8, 0x0, 0x3209510
	0x032094FC ADRP X0, 0xEEC000
	0x03209500 LDR X0, [X0 + 0xC48]
	0x03209504 BL 0x1C16CF4
	0x03209508 MOVZ W8, 0x1
	0x0320950C STRB W8, [X21 + 0x278]
	0x03209510 LDR X0, [X22]
	0x03209514 LDR W8, [X0 + 0xE0]
	0x03209518 CBNZ W8, 0x3209520
	0x0320951C BL 0x1C16DFC
	0x03209520 MOV X0, X31
	0x03209524 BL 0x3338524
	0x03209528 MOV X1, X20
	0x0320952C MOV X2, X19
	0x03209530 LDP X20, X19, [X31 + 0x20]
	0x03209534 LDP X22, X21, [X31 + 0x10]
	0x03209538 MOV X3, X31
	0x0320953C LDR X30, [X31], #0x30
	0x03209540 B 0x3227D04
	0x03209544 SUB X31, X31, 0x30
	0x03209548 STP X30, X21, [X31 + 0x10]
	0x0320954C STP X20, X19, [X31 + 0x20]
	0x03209550 ADRP X19, 0x11D3000
	0x03209554 STR X0, [X31 + 0x8]
	0x03209558 ADRP X20, 0xF18000
	0x0320955C LDRB W8, [X19 + 0x269]
	0x03209560 LDR X20, [X20 + 0x7A8]
	0x03209564 TBNZ X8, 0x0, 0x320957C
	0x03209568 ADRP X0, 0xF18000
	0x0320956C LDR X0, [X0 + 0x7A8]
	0x03209570 BL 0x1C16CF4
	0x03209574 MOVZ W8, 0x1
	0x03209578 STRB W8, [X19 + 0x269]
	0x0320957C ADD X0, X31, 0x8
	0x03209580 BL 0x3209634
	0x03209584 MOV X19, X0
	0x03209588 ADD X0, X31, 0x8
	0x0320958C BL 0x32095C8
	0x03209590 LDR X8, [X20]
	0x03209594 MOV W20, W0
	0x03209598 MOV X0, X8
	0x0320959C BL 0x1C16F10
	0x032095A0 MOV X1, X19
	0x032095A4 MOV W2, W20
	0x032095A8 MOV X3, X31
	0x032095AC MOV X21, X0
	0x032095B0 BL 0x32E2368
	0x032095B4 MOV X0, X21
	0x032095B8 LDP X20, X19, [X31 + 0x20]
	0x032095BC LDP X30, X21, [X31 + 0x10]
	0x032095C0 ADD X31, X31, 0x30
	0x032095C4 RET
	0x032095C8 STR X30, [X31 - 0x20]!
	0x032095CC STP X20, X19, [X31 + 0x10]
	0x032095D0 ADRP X20, 0x11D3000
	0x032095D4 LDRB W8, [X20 + 0x26C]
	0x032095D8 MOV X19, X0
	0x032095DC TBNZ X8, 0x0, 0x32095F4
	0x032095E0 ADRP X0, 0xF15000
	0x032095E4 LDR X0, [X0 + 0xD78]
	0x032095E8 BL 0x1C16CF4
	0x032095EC MOVZ W8, 0x1
	0x032095F0 STRB W8, [X20 + 0x26C]
	0x032095F4 LDR W0, [X19 + 0x4]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X19, 0x11D4000
	008 Move W8, [X19+606]
	009 Move W21, W1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0xF19000
	016 Move X0, [X0+1768]
	017 Call 0x1C17CF4
	018 Move X0, 0xF19000
	019 Move X0, [X0+1328]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X19+606], W8
	023 Compare X20, 0
	024 JumpIfEqual {110}
	025 Move X23, 0xF19000
	026 Move X23, [X23+1328]
	027 Move W22, [X20+16]
	028 Move X0, [X23]
	029 Call 0x1C17F10
	030 Move W2, W22
	031 Move X19, X0
	032 Call BigInteger..ctor, X0, X1, X2
	033 Move W11, [X20+16]
	034 Compare W11, 0
	035 JumpIfEqual {59}
	036 Move X8, [X20+24]
	037 Compare X8, 0
	038 JumpIfEqual {110}
	039 Move W9, [X8+24]
	040 Move X20, X31
	041 Move W10, W21
	042 Add X11, X11, 7
	043 Subtract X13, X11, 8
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Compare X19, 0
	046 JumpIfEqual {110}
	047 Move X12, [X19+24]
	048 Compare X12, 0
	049 JumpIfEqual {110}
	050 Move W14, [X12+24]
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move W13, [X8]
	053 NotImplemented "Instruction BFM not yet implemented."
	054 NotImplemented "Instruction UDIV not yet implemented."
	055 Move [X12], W14
	056 Subtract X11, X11, 1
	057 NotImplemented "Instruction CMP not yet implemented."
	058 NotImplemented "Instruction MSUB not yet implemented."
	059 Compare X19, 0
	060 JumpIfEqual {110}
	061 Move W20, W31
	062 Move X21, 0xF19000
	063 Move X21, [X21+1768]
	064 Move X0, X19
	065 Call BigInteger.Normalize, X0
	066 Move X0, [X23]
	067 Move W8, [X0+224]
	068 Compare W8, 0
	069 JumpIfNotEqual {71}
	070 Call 0x1C17DFC
	071 Move W0, W20
	072 Call BigInteger.op_Implicit, X0
	073 Move X8, [X21]
	074 Move X20, X0
	075 Move W1, 2
	076 Move X0, X8
	077 Call 0x1C17D6C
	078 Compare X0, 0
	079 JumpIfEqual {110}
	080 Move X8, [X0]
	081 Move X21, X0
	082 Move X0, X19
	083 Move X1, [X8+64]
	084 Call 0x1C17E00
	085 Compare X0, 0
	086 JumpIfEqual {112}
	087 Move W8, [X21+24]
	088 Compare W8, 0
	089 JumpIfEqual {111}
	090 Move [X21+32], X19
	091 Compare X20, 0
	092 JumpIfEqual {100}
	093 Move X8, [X21]
	094 Move X0, X20
	095 Move X1, [X8+64]
	096 Call 0x1C17E00
	097 Compare X0, 0
	098 JumpIfEqual {112}
	099 Move W8, [X21+24]
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Move [X21+40], X20
	102 Move X0, X21
	103 Move X20, [X31+32]
	104 Move X19, [X31+40]
	105 Move X22, [X31+16]
	106 Move X21, [X31+24]
	107 Move X30, [X31+48]
	108 Move X23, [X31+56]
	109 Return X0
	110 Call 0x1C17F20
	111 Call 0x1C17F28
	112 Call 0x1C17F44
	113 Move X1, X31
	114 Call 0x1C17DEC

Method: Mono.Math.BigInteger[] multiByteDivide(Mono.Math.BigInteger bi1, Mono.Math.BigInteger bi2)

Disassembly:
	0x0320706C STP X30, X19, [X31 - 0x10]!
	0x03207070 CBZ X0, 0x32070DC
	0x03207074 LDR W8, [X0 + 0x10]
	0x03207078 CBZ W8, 0x32070C4
	0x0320707C LDR X11, [X0 + 0x18]
	0x03207080 CBZ X11, 0x32070DC
	0x03207084 LDR W9, [X11 + 0x18]
	0x03207088 MOV X19, X31
	0x0320708C MOV W10, W1
	0x03207090 ADD X11, X11, 0x1C
	0x03207094 SUB X12, X8, 0x1
	0x03207098 CMP X12, X9
	0x0320709C B.CS 0x32070D8
	0x032070A0 LDR W13, [X11, X8, LSL #2]
	0x032070A4 BFM X13, X19, 0x20, 0x1F
	0x032070A8 UDIV X14, X13, X10
	0x032070AC STR W14, [X11, X8, LSL #2]
	0x032070B0 NOP
	0x032070B4 MSUB X19, X14, X10, X13
	0x032070B8 MOV X8, X12
	0x032070BC CBNZ X12, 0x3207094
	0x032070C0 B 0x32070C8
	0x032070C4 MOV W19, W31
	0x032070C8 BL 0x3205BB4
	0x032070CC MOV W0, W19
	0x032070D0 LDP X30, X19, [X31], #0x10
	0x032070D4 RET
	0x032070D8 BL 0x1C16F28
	0x032070DC BL 0x1C16F20
	0x032070E0 STR X30, [X31 - 0x10]!
	0x032070E4 LDR W8, [X0 + 0x10]
	0x032070E8 CBZ W8, 0x3207124
	0x032070EC LDR X11, [X0 + 0x18]
	0x032070F0 CBZ X11, 0x3207134
	0x032070F4 LDR W10, [X11 + 0x18]
	0x032070F8 MOV X9, X31
	0x032070FC MOV W0, W31
	0x03207100 ADD X11, X11, 0x20
	0x03207104 CMP X9, X10
	0x03207108 B.CS 0x3207130
	0x0320710C LDR W12, [X11, X9, LSL #2]
	0x03207110 ADD X9, X9, 0x1
	0x03207114 CMP X9, X8
	0x03207118 EOR W0, W12, W0, 0x0
	0x0320711C B.CC 0x3207104
	0x03207120 B 0x3207128
	0x03207124 MOV W0, W31
	0x03207128 LDR X30, [X31], #0x10
	0x0320712C RET
	0x03207130 BL 0x1C16F28
	0x03207134 BL 0x1C16F20
	0x03207138 MOVZ W1, 0xA
	0x0320713C B 0x3206DE8
	0x03207140 STP X30, X21, [X31 - 0x20]!
	0x03207144 STP X20, X19, [X31 + 0x10]
	0x03207148 ADRP X21, 0x11D5000
	0x0320714C LDRB W8, [X21 + 0x253]
	0x03207150 MOV X20, X1
	0x03207154 MOV X19, X0
	0x03207158 TBNZ X8, 0x0, 0x3207188
	0x0320715C ADRP X0, 0xF1A000
	0x03207160 LDR X0, [X0 + 0x530]
	0x03207164 BL 0x1C16CF4
	0x03207168 ADRP X0, 0xEEC000
	0x0320716C LDR X0, [X0 + 0x758]
	0x03207170 BL 0x1C16CF4
	0x03207174 ADRP X0, 0xEF4000
	0x03207178 LDR X0, [X0 + 0x720]
	0x0320717C BL 0x1C16CF4
	0x03207180 MOVZ W8, 0x1
	0x03207184 STRB W8, [X21 + 0x253]
	0x03207188 CBZ X20, 0x320725C
	0x0320718C ADRP X8, 0xEEC000
	0x03207190 LDR X8, [X8 + 0x758]
	0x03207194 LDR X9, [X8]
	0x03207198 LDR X8, [X20]
	0x0320719C CMP X8, X9
	0x032071A0 B.EQ 0x32071C8
	0x032071A4 ADRP X9, 0xF1A000
	0x032071A8 LDR X9, [X9 + 0x530]
	0x032071AC LDRB W10, [X8 + 0x130]
	0x032071B0 LDR X0, [X9]
	0x032071B4 LDRB W9, [X0 + 0x130]
	0x032071B8 CMP W10, W9
	0x032071BC B.CS 0x320722C
	0x032071C0 MOV X20, X31
	0x032071C4 B 0x3207240
	0x032071C8 MOV X0, X20
	0x032071CC BL 0x1C16E08
	0x032071D0 LDR W8, [X0]
	0x032071D4 TBNZ X8, 0x1F, 0x320725C
	0x032071D8 ADRP X8, 0xF1A000
	0x032071DC LDR X8, [X8 + 0x530]
	0x032071E0 LDR X0, [X8]
	0x032071E4 LDR W8, [X0 + 0xE0]
	0x032071E8 CBNZ W8, 0x32071F0
	0x032071EC BL 0x1C16DFC
	0x032071F0 ADRP X8, 0xEF4000
	0x032071F4 LDR X8, [X8 + 0x720]
	0x032071F8 LDR X9, [X20]
	0x032071FC MOV X0, X20
	0x03207200 LDR X1, [X8]
	0x03207204 LDR X8, [X9 + 0x40]
	0x03207208 LDR X9, [X1 + 0x40]
	0x0320720C CMP X8, X9
	0x03207210 B.NE 0x3207284
	0x03207214 BL 0x1C16E08
	0x03207218 LDR W1, [X0]
	0x0320721C MOV X0, X19
	0x03207220 LDP X20, X19, [X31 + 0x10]
	0x03207224 LDP X30, X21, [X31], #0x20
	0x03207228 B 0x3205C94
	0x0320722C LDR X8, [X8 + 0xC8]
	0x03207230 ADD X8, X8, X9, 0x3, LSL
	0x03207234 LDUR X8, [X8 - 0x8]
	0x03207238 CMP X8, X0
	0x0320723C CSEL X20, X20, X31, EQ
	0x03207240 LDR W8, [X0 + 0xE0]
	0x03207244 CBNZ W8, 0x320724C
	0x03207248 BL 0x1C16DFC
	0x0320724C MOV X0, X20
	0x03207250 MOV X1, X31
	0x03207254 BL 0x3201DDC
	0x03207258 TBZ X0, 0x0, 0x3207264
	0x0320725C MOV W0, W31
	0x03207260 B 0x3207278
	0x03207264 MOV X0, X19
	0x03207268 MOV X1, X20
	0x0320726C BL 0x3205D00
	0x03207270 CMP W0, 0x0
	0x03207274 CSET W0, EQ
	0x03207278 LDP X20, X19, [X31 + 0x10]
	0x0320727C LDP X30, X21, [X31], #0x20
	0x03207280 RET
	0x03207284 BL 0x1C171E0
	0x03207288 STP X29, X30, [X31 - 0x60]!
	0x0320728C STP X28, X27, [X31 + 0x10]
	0x03207290 STP X26, X25, [X31 + 0x20]
	0x03207294 STP X24, X23, [X31 + 0x30]
	0x03207298 STP X22, X21, [X31 + 0x40]
	0x0320729C STP X20, X19, [X31 + 0x50]
	0x032072A0 ADRP X19, 0x11D5000
	0x032072A4 LDRB W8, [X19 + 0x263]
	0x032072A8 MOV X23, X1
	0x032072AC MOV X25, X0
	0x032072B0 TBNZ X8, 0x0, 0x32072E0
	0x032072B4 ADRP X0, 0xF1A000
	0x032072B8 LDR X0, [X0 + 0x6E8]
	0x032072BC BL 0x1C16CF4
	0x032072C0 ADRP X0, 0xF1A000
	0x032072C4 LDR X0, [X0 + 0x530]
	0x032072C8 BL 0x1C16CF4
	0x032072CC ADRP X0, 0xF1A000
	0x032072D0 LDR X0, [X0 + 0x598]
	0x032072D4 BL 0x1C16CF4
	0x032072D8 MOVZ W8, 0x1
	0x032072DC STRB W8, [X19 + 0x263]
	0x032072E0 CBZ X23, 0x3207734
	0x032072E4 LDR W8, [X23 + 0x10]
	0x032072E8 CMP W8, 0x1
	0x032072EC B.NE 0x320734C
	0x032072F0 LDR X8, [X23 + 0x18]
	0x032072F4 CBZ X8, 0x3207734
	0x032072F8 LDR W9, [X8 + 0x18]
	0x032072FC CBZ W9, 0x3207724
	0x03207300 LDR W1, [X8 + 0x20]
	0x03207304 MOV X0, X25
	0x03207308 BL 0x32085F8
	0x0320730C ADRP X8, 0xF1A000
	0x03207310 LDR X8, [X8 + 0x530]
	0x03207314 MOV W19, W0
	0x03207318 LDR X8, [X8]
	0x0320731C LDR W9, [X8 + 0xE0]
	0x03207320 CBNZ W9, 0x320732C
	0x03207324 MOV X0, X8
	0x03207328 BL 0x1C16DFC
	0x0320732C MOV W0, W19
	0x03207330 LDP X20, X19, [X31 + 0x50]
	0x03207334 LDP X22, X21, [X31 + 0x40]
	0x03207338 LDP X24, X23, [X31 + 0x30]
	0x0320733C LDP X26, X25, [X31 + 0x20]
	0x03207340 LDP X28, X27, [X31 + 0x10]
	0x03207344 LDP X29, X30, [X31], #0x60
	0x03207348 B 0x32016C0
	0x0320734C ADRP X21, 0xF1A000
	0x03207350 LDR X21, [X21 + 0x6E8]
	0x03207354 MOVZ W1, 0x2
	0x03207358 LDR X0, [X21]
	0x0320735C BL 0x1C16D6C
	0x03207360 ADRP X28, 0xF1A000
	0x03207364 LDR X28, [X28 + 0x530]
	0x03207368 MOV X19, X0
	0x0320736C LDR X8, [X28]
	0x03207370 LDR W9, [X8 + 0xE0]
	0x03207374 CBNZ W9, 0x3207380
	0x03207378 MOV X0, X8
	0x0320737C BL 0x1C16DFC
	0x03207380 MOV W0, W31
	0x03207384 BL 0x3201A60
	0x03207388 CBZ X19, 0x3207734
	0x0320738C MOV X20, X0
	0x03207390 CBZ X0, 0x32073A8
	0x03207394 LDR X8, [X19]
	0x03207398 MOV X0, X20
	0x0320739C LDR X1, [X8 + 0x40]
	0x032073A0 BL 0x1C16E00
	0x032073A4 CBZ X0, 0x3207728
	0x032073A8 LDR W8, [X19 + 0x18]
	0x032073AC CBZ W8, 0x3207724
	0x032073B0 MOVZ W0, 0x1
	0x032073B4 STR X20, [X19 + 0x20]
	0x032073B8 BL 0x3201A60
	0x032073BC MOV X20, X0
	0x032073C0 CBZ X0, 0x32073D8
	0x032073C4 LDR X8, [X19]
	0x032073C8 MOV X0, X20
	0x032073CC LDR X1, [X8 + 0x40]
	0x032073D0 BL 0x1C16E00
	0x032073D4 CBZ X0, 0x3207728
	0x032073D8 LDR W8, [X19 + 0x18]
	0x032073DC CMP W8, 0x1
	0x032073E0 B.LS 0x3207724
	0x032073E4 STR X20, [X19 + 0x28]
	0x032073E8 LDR X0, [X21]
	0x032073EC MOVZ W1, 0x2
	0x032073F0 BL 0x1C16D6C
	0x032073F4 LDR X8, [X21]
	0x032073F8 MOV X20, X0
	0x032073FC MOVZ W1, 0x2
	0x03207400 MOV X0, X8
	0x03207404 BL 0x1C16D6C
	0x03207408 MOV X21, X0
	0x0320740C MOV W0, W31
	0x03207410 BL 0x3201A60
	0x03207414 CBZ X21, 0x3207734
	0x03207418 MOV X22, X0
	0x0320741C CBZ X0, 0x3207434
	0x03207420 LDR X8, [X21]
	0x03207424 MOV X0, X22
	0x03207428 LDR X1, [X8 + 0x40]
	0x0320742C BL 0x1C16E00
	0x03207430 CBZ X0, 0x3207728
	0x03207434 LDR W8, [X21 + 0x18]
	0x03207438 CBZ W8, 0x3207724
	0x0320743C MOV W0, W31
	0x03207440 STR X22, [X21 + 0x20]
	0x03207444 BL 0x3201A60
	0x03207448 MOV X22, X0
	0x0320744C CBZ X0, 0x3207464
	0x03207450 LDR X8, [X21]
	0x03207454 MOV X0, X22
	0x03207458 LDR X1, [X8 + 0x40]
	0x0320745C BL 0x1C16E00
	0x03207460 CBZ X0, 0x3207728
	0x03207464 LDR W8, [X21 + 0x18]
	0x03207468 CMP W8, 0x1
	0x0320746C B.LS 0x3207724
	0x03207470 STR X22, [X21 + 0x28]
	0x03207474 ADRP X8, 0xF1A000
	0x03207478 LDR X8, [X8 + 0x598]
	0x0320747C LDR X0, [X8]
	0x03207480 BL 0x1C16F10
	0x03207484 MOV X1, X23
	0x03207488 MOV X22, X0
	0x0320748C BL 0x3207780
	0x03207490 MOV W29, W31
	0x03207494 LDR X0, [X28]
	0x03207498 MOV X24, X25
	0x0320749C LDR W8, [X0 + 0xE0]
	0x032074A0 CBNZ W8, 0x32074A8
	0x032074A4 BL 0x1C16DFC
	0x032074A8 MOV X0, X24
	0x032074AC MOV W1, W31
	0x032074B0 BL 0x3206D34
	0x032074B4 TBZ X0, 0x0, 0x320768C
	0x032074B8 CMP W29, 0x2
	0x032074BC B.GE 0x32074D4
	0x032074C0 MOV X0, X23
	0x032074C4 MOV X1, X24
	0x032074C8 BL 0x320606C
	0x032074CC CBNZ X20, 0x3207594
	0x032074D0 B 0x3207734

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X19, 0x11D6000
	012 Move W8, [X19+607]
	013 Move X22, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0xF1B000
	020 Move X0, [X0+1768]
	021 Call 0x1C17CF4
	022 Move X0, 0xF1B000
	023 Move X0, [X0+1328]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X19+607], W8
	027 Move X0, X20
	028 Move X1, X22
	029 Call Kernel.Compare, X0, X1
	030 Add W31, W0, 1
	031 Compare X20, 0
	032 JumpIfEqual {318}
	033 Move X0, X20
	034 Call BigInteger.Normalize, X0
	035 Compare X22, 0
	036 JumpIfEqual {318}
	037 Move X0, X22
	038 Call BigInteger.Normalize, X0
	039 Move W26, [X22+16]
	040 Subtract W8, W26, 1
	041 Move X8, [X22+24]
	042 Compare X8, 0
	043 JumpIfEqual {318}
	044 Move W9, [X8+24]
	045 Compare W9, 0
	046 JumpIfEqual {317}
	047 Move W1, [X8+32]
	048 Move X0, X20
	049 Move X20, [X31+64]
	050 Move X19, [X31+72]
	051 Move X22, [X31+48]
	052 Move X21, [X31+56]
	053 Move X24, [X31+32]
	054 Move X23, [X31+40]
	055 Move X26, [X31+16]
	056 Move X25, [X31+24]
	057 Move X30, [X31+80]
	058 Move X27, [X31+88]
	059 Call Kernel.DwordDivMod, X0, X1
	060 Return X0
	061 Move X8, 0xF1B000
	062 Move X8, [X8+1768]
	063 Move W1, 2
	064 Move X0, [X8]
	065 Call 0x1C17D6C
	066 Move X21, 0xF1B000
	067 Move X21, [X21+1328]
	068 Move X22, X0
	069 Move X8, [X21]
	070 Move W9, [X8+224]
	071 Compare W9, 0
	072 JumpIfNotEqual {75}
	073 Move X0, X8
	074 Call 0x1C17DFC
	075 Move W0, W31
	076 Call BigInteger.op_Implicit, X0
	077 Compare X22, 0
	078 JumpIfEqual {318}
	079 Move X19, X0
	080 Compare X0, 0
	081 JumpIfEqual {88}
	082 Move X8, [X22]
	083 Move X0, X19
	084 Move X1, [X8+64]
	085 Call 0x1C17E00
	086 Compare X0, 0
	087 JumpIfEqual {319}
	088 Move W8, [X22+24]
	089 Compare W8, 0
	090 JumpIfEqual {317}
	091 Move [X22+32], X19
	092 Move X0, [X21]
	093 Call 0x1C17F10
	094 Move X1, X20
	095 Move X19, X0
	096 Call BigInteger..ctor, X0, X1
	097 Compare X19, 0
	098 JumpIfNotEqual {296}
	099 Move X9, [X22+24]
	100 Compare X9, 0
	101 JumpIfEqual {318}
	102 Move W10, [X9+24]
	103 NotImplemented "Instruction CMP not yet implemented."
	104 Move W25, [X20+16]
	105 Add X8, X9, W8
	106 Move W8, [X8+32]
	107 Move W19, W31
	108 Subtract W27, W25, W26
	109 Move TEMP, X8
	110 And TEMP, TEMP, -2147483648
	111 Compare TEMP, -2147483648
	112 JumpIfEqual {124}
	113 Move W9, 0x80000000
	114 Move W10, W9
	115 ShiftRight W10, 1
	116 And W10, W10, 0x7FFFFFFF
	117 Add W19, W19, 1
	118 Compare W10, 0
	119 JumpIfEqual {124}
	120 And W11, W8, W9
	121 Move W9, W10
	122 Compare W11, 0
	123 JumpIfEqual {114}
	124 Move X23, 0xF1B000
	125 Move X23, [X23+1328]
	126 Move X0, [X23]
	127 Call 0x1C17F10
	128 Add W2, W27, 1
	129 Move X21, X0
	130 Call BigInteger..ctor, X0, X1, X2
	131 Move X0, [X23]
	132 Move W8, [X0+224]
	133 Compare W8, 0
	134 JumpIfNotEqual {136}
	135 Call 0x1C17DFC
	136 Move X0, X20
	137 Move W1, W19
	138 Call Kernel.LeftShift, X0, X1
	139 Compare X0, 0
	140 JumpIfEqual {318}
	141 Move X24, [X0+24]
	142 Move X20, X0
	143 Move X0, X22
	144 Move W1, W19
	145 Call Kernel.LeftShift, X0, X1
	146 Compare X0, 0
	147 JumpIfEqual {318}
	148 Move X11, [X0+24]
	149 Compare X11, 0
	150 JumpIfEqual {318}
	151 Move W8, [X0+16]
	152 Move X9, [X11+24]
	153 Subtract W10, W8, 1
	154 NotImplemented "Instruction CMP not yet implemented."
	155 Subtract W12, W8, 2
	156 NotImplemented "Instruction CMP not yet implemented."
	157 Add W13, W25, 1
	158 Subtract W8, W13, W8
	159 NotImplemented "Instruction CMP not yet implemented."
	160 Compare X24, 0
	161 JumpIfEqual {318}
	162 Add X13, X11, W10
	163 Add X15, X11, W12
	164 Add W14, W26, 1
	165 Move W10, [X24+24]
	166 Move W12, [X13+32]
	167 Move W13, [X15+32]
	168 Move X14, W14
	169 NotImplemented "Instruction CMP not yet implemented."
	170 And X9, X9, 0
	171 Add X11, X11, 32
	172 NotImplemented "Instruction CSINC not yet implemented."
	173 Move W17, W27
	174 Move X16, 1
	175 NotImplemented "Instruction CMP not yet implemented."
	176 Subtract W0, W25, 1
	177 NotImplemented "Instruction CMP not yet implemented."
	178 Add X4, X24, 32
	179 Move W3, [X4]
	180 Move W1, [X4]
	181 Subtract W2, W25, 2
	182 Add X4, X4, W2
	183 NotImplemented "Instruction BFM not yet implemented."
	184 NotImplemented "Instruction UDIV not yet implemented."
	185 NotImplemented "Instruction MSUB not yet implemented."
	186 NotImplemented "Instruction CMP not yet implemented."
	187 NotImplemented "Instruction CMP not yet implemented."
	188 Move W5, [X4]
	189 Multiply X6, X1, X13
	190 NotImplemented "Instruction BFM not yet implemented."
	191 NotImplemented "Instruction CMP not yet implemented."
	192 Add X3, X3, X12
	193 Move X5, X3
	194 ShiftRight X5, 32
	195 And X5, X5, 0x7FFFFFFF
	196 Subtract X1, X1, 1
	197 Compare X5, 0
	198 JumpIfEqual {186}
	199 Move X2, X31
	200 Move X3, X31
	201 And X4, X1, 0
	202 NotImplemented "Instruction CMP not yet implemented."
	203 Add X5, X17, X2
	204 NotImplemented "Instruction CMP not yet implemented."
	205 Move W6, [X11]
	206 Add X5, X24, W5
	207 Move W7, [X5+32]
	208 Add X2, X2, 1
	209 NotImplemented "Instruction MADD not yet implemented."
	210 Subtract W6, W7, W3
	211 Move X3, X3
	212 ShiftRight X3, 32
	213 And X3, X3, 0x7FFFFFFF
	214 NotImplemented "Instruction CINC not yet implemented."
	215 NotImplemented "Instruction CMP not yet implemented."
	216 Move [X5+32], W6
	217 Compare X3, 0
	218 JumpIfEqual {237}
	219 Move X2, X31
	220 Move X3, X31
	221 Subtract W1, W1, 1
	222 Add X4, X17, X2
	223 NotImplemented "Instruction CMP not yet implemented."
	224 NotImplemented "Instruction CMP not yet implemented."
	225 Add X4, X24, W4
	226 Add X4, X4, 32
	227 Move W5, [X4]
	228 Move W6, [X11]
	229 Add X2, X2, 1
	230 NotImplemented "Instruction CMP not yet implemented."
	231 Add X3, X3, X5
	232 Add X3, X3, X6
	233 Move [X4], W3
	234 Move X3, X3
	235 ShiftRight X3, 32
	236 And X3, X3, 0x7FFFFFFF
	237 Compare X21, 0
	238 JumpIfEqual {318}
	239 Move X2, [X21+24]
	240 Compare X2, 0
	241 JumpIfEqual {318}
	242 Move W3, [X2+24]
	243 NotImplemented "Instruction CMP not yet implemented."
	244 Subtract W8, W8, 1
	245 Add X2, X2, W17
	246 Subtract X17, X17, 1
	247 NotImplemented "Instruction CMP not yet implemented."
	248 Move W25, W0
	249 Move [X2+32], W1
	250 Compare X21, 0
	251 JumpIfEqual {318}
	252 Move X0, X21
	253 Call BigInteger.Normalize, X0
	254 Move X0, X20
	255 Call BigInteger.Normalize, X0
	256 Move X8, 0xF1B000
	257 Move X8, [X8+1768]
	258 Move W1, 2
	259 Move X0, [X8]
	260 Call 0x1C17D6C
	261 Compare X0, 0
	262 JumpIfEqual {318}
	263 Move X8, [X0]
	264 Move X22, X0
	265 Move X0, X21
	266 Move X1, [X8+64]
	267 Call 0x1C17E00
	268 Compare X0, 0
	269 JumpIfEqual {319}
	270 Move W8, [X22+24]
	271 Compare W8, 0
	272 JumpIfEqual {317}
	273 Move X8, [X22]
	274 Move [X22+32], X21
	275 Move X0, X20
	276 Move X1, [X8+64]
	277 Call 0x1C17E00
	278 Compare X0, 0
	279 JumpIfEqual {319}
	280 Move W8, [X22+24]
	281 NotImplemented "Instruction CMP not yet implemented."
	282 Move [X22+40], X20
	283 Compare W19, 0
	284 JumpIfEqual {305}
	285 Move X0, [X23]
	286 Move W8, [X0+224]
	287 Compare W8, 0
	288 JumpIfNotEqual {290}
	289 Call 0x1C17DFC
	290 Move X0, X20
	291 Move W1, W19
	292 Call Kernel.RightShift, X0, X1
	293 Move X19, X0
	294 Compare X0, 0
	295 JumpIfEqual {302}
	296 Move X8, [X22]
	297 Move X0, X19
	298 Move X1, [X8+64]
	299 Call 0x1C17E00
	300 Compare X0, 0
	301 JumpIfEqual {319}
	302 Move W8, [X22+24]
	303 NotImplemented "Instruction CMP not yet implemented."
	304 Move [X22+40], X19
	305 Move X0, X22
	306 Move X20, [X31+64]
	307 Move X19, [X31+72]
	308 Move X22, [X31+48]
	309 Move X21, [X31+56]
	310 Move X24, [X31+32]
	311 Move X23, [X31+40]
	312 Move X26, [X31+16]
	313 Move X25, [X31+24]
	314 Move X30, [X31+80]
	315 Move X27, [X31+88]
	316 Return X0
	317 Call 0x1C17F28
	318 Call 0x1C17F20
	319 Call 0x1C17F44
	320 Move X1, X31
	321 Call 0x1C17DEC

Method: Mono.Math.BigInteger LeftShift(Mono.Math.BigInteger bi, System.Int32 n)

Disassembly:
	0x032075FC B.LS 0x3207724
	0x03207600 STR X25, [X20 + 0x28]
	0x03207604 LDR X8, [X21 + 0x18]
	0x03207608 CMP W8, 0x1
	0x0320760C B.LS 0x3207724
	0x03207610 LDR X25, [X21 + 0x28]
	0x03207614 CBZ X25, 0x3207630
	0x03207618 LDR X8, [X21]
	0x0320761C MOV X0, X25
	0x03207620 LDR X1, [X8 + 0x40]
	0x03207624 BL 0x1C16E00
	0x03207628 CBZ X0, 0x3207728
	0x0320762C LDR X8, [X21 + 0x18]
	0x03207630 CBZ W8, 0x3207724
	0x03207634 STR X25, [X21 + 0x20]
	0x03207638 LDR W9, [X23 + 0x18]
	0x0320763C CMP W9, 0x1
	0x03207640 B.LS 0x3207724
	0x03207644 LDR X25, [X23 + 0x28]
	0x03207648 CBZ X25, 0x3207664
	0x0320764C LDR X8, [X21]
	0x03207650 MOV X0, X25
	0x03207654 LDR X1, [X8 + 0x40]
	0x03207658 BL 0x1C16E00
	0x0320765C CBZ X0, 0x3207728
	0x03207660 LDR W8, [X21 + 0x18]
	0x03207664 CMP W8, 0x1
	0x03207668 B.LS 0x3207724
	0x0320766C STR X25, [X21 + 0x28]
	0x03207670 LDR W8, [X23 + 0x18]
	0x03207674 CMP W8, 0x1
	0x03207678 B.LS 0x3207724
	0x0320767C LDR X25, [X23 + 0x28]
	0x03207680 ADD W29, W29, 0x1
	0x03207684 MOV X23, X24
	0x03207688 B 0x3207494
	0x0320768C LDR W8, [X21 + 0x18]
	0x03207690 CBZ W8, 0x3207724
	0x03207694 LDR X0, [X28]
	0x03207698 LDR X21, [X21 + 0x20]
	0x0320769C LDR W8, [X0 + 0xE0]
	0x032076A0 CBNZ W8, 0x32076A8
	0x032076A4 BL 0x1C16DFC
	0x032076A8 MOVZ W1, 0x1
	0x032076AC MOV X0, X21
	0x032076B0 BL 0x3206D34
	0x032076B4 TBNZ X0, 0x0, 0x3207738
	0x032076B8 LDR W8, [X19 + 0x18]
	0x032076BC CBZ W8, 0x3207724
	0x032076C0 CMP W8, 0x1
	0x032076C4 B.EQ 0x3207724
	0x032076C8 CBZ X20, 0x3207734
	0x032076CC LDR W8, [X20 + 0x18]
	0x032076D0 CBZ W8, 0x3207724
	0x032076D4 LDR X0, [X28]
	0x032076D8 LDP X21, X19, [X19 + 0x20]
	0x032076DC LDR X20, [X20 + 0x20]
	0x032076E0 LDR W8, [X0 + 0xE0]
	0x032076E4 CBNZ W8, 0x32076EC
	0x032076E8 BL 0x1C16DFC
	0x032076EC MOV X0, X19
	0x032076F0 MOV X1, X20
	0x032076F4 BL 0x3201838
	0x032076F8 CBZ X22, 0x3207734
	0x032076FC MOV X2, X0
	0x03207700 MOV X0, X22
	0x03207704 MOV X1, X21
	0x03207708 LDP X20, X19, [X31 + 0x50]
	0x0320770C LDP X22, X21, [X31 + 0x40]
	0x03207710 LDP X24, X23, [X31 + 0x30]
	0x03207714 LDP X26, X25, [X31 + 0x20]
	0x03207718 LDP X28, X27, [X31 + 0x10]
	0x0320771C LDP X29, X30, [X31], #0x60
	0x03207720 B 0x320824C
	0x03207724 BL 0x1C16F28
	0x03207728 BL 0x1C16F44
	0x0320772C MOV X1, X31
	0x03207730 BL 0x1C16DEC
	0x03207734 BL 0x1C16F20
	0x03207738 ADRP X0, 0xF1A000
	0x0320773C LDR X0, [X0 + 0x560]
	0x03207740 BL 0x1C16D08
	0x03207744 BL 0x1C16F10
	0x03207748 MOV X19, X0
	0x0320774C ADRP X0, 0xF1A000
	0x03207750 LDR X0, [X0 + 0x740]
	0x03207754 BL 0x1C16D08
	0x03207758 MOV X1, X0
	0x0320775C MOV X0, X19
	0x03207760 MOV X2, X31
	0x03207764 BL 0x3316338
	0x03207768 ADRP X0, 0xF1A000
	0x0320776C LDR X0, [X0 + 0x748]
	0x03207770 BL 0x1C16D08
	0x03207774 MOV X1, X0
	0x03207778 MOV X0, X19
	0x0320777C BL 0x1C16DEC
	0x03207780 STR X30, [X31 - 0x30]!
	0x03207784 STP X22, X21, [X31 + 0x10]
	0x03207788 STP X20, X19, [X31 + 0x20]
	0x0320778C ADRP X21, 0x11D5000
	0x03207790 LDRB W8, [X21 + 0x257]
	0x03207794 MOV X20, X1
	0x03207798 MOV X19, X0
	0x0320779C TBNZ X8, 0x0, 0x32077B4
	0x032077A0 ADRP X0, 0xF1A000
	0x032077A4 LDR X0, [X0 + 0x530]
	0x032077A8 BL 0x1C16CF4
	0x032077AC MOVZ W8, 0x1
	0x032077B0 STRB W8, [X21 + 0x257]
	0x032077B4 MOV X0, X19
	0x032077B8 MOV X1, X31
	0x032077BC BL 0x33BDD8C
	0x032077C0 STR X20, [X19 + 0x10]
	0x032077C4 CBZ X20, 0x320784C
	0x032077C8 ADRP X21, 0xF1A000
	0x032077CC LDR X21, [X21 + 0x530]
	0x032077D0 LDR W22, [X20 + 0x10]
	0x032077D4 LDR X0, [X21]
	0x032077D8 BL 0x1C16F10
	0x032077DC MOVZ W2, 0x1

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X19, 0x11D6000
	009 Move W8, [X19+608]
	010 Move W21, W1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xF1B000
	017 Move X0, [X0+1328]
	018 Call 0x1C17CF4
	019 Move X0, 0xF1B000
	020 Move X0, [X0+1776]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X19+608], W8
	024 Move X8, 0xF1B000
	025 Move X8, [X8+1328]
	026 Compare W21, 0
	027 JumpIfEqual {76}
	028 Compare X20, 0
	029 JumpIfEqual {136}
	030 Move X0, [X8]
	031 Move W24, [X20+16]
	032 NotImplemented "Instruction SBFM not yet implemented."
	033 And W23, W21, 31
	034 Call 0x1C17F10
	035 Add W8, W22, W24
	036 Add W2, W8, 1
	037 Move X19, X0
	038 Call BigInteger..ctor, X0, X1, X2
	039 Move W8, [X20+16]
	040 Compare W23, 0
	041 JumpIfEqual {85}
	042 Compare W8, 0
	043 JumpIfEqual {113}
	044 Move X12, [X20+24]
	045 Compare X12, 0
	046 JumpIfEqual {136}
	047 Move W11, [X12+24]
	048 Move X14, W22
	049 Subtract W13, W31, W21
	050 Move X14, X14
	051 ShiftRight X14, 62
	052 And X14, X14, 0x1FFFFFFF
	053 Move X10, X31
	054 Move W9, W31
	055 Add X12, X12, 32
	056 And W13, W13, 31
	057 Add X14, X14, 32
	058 Move W15, W22
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Compare X19, 0
	061 JumpIfEqual {136}
	062 Move X16, [X19+24]
	063 Compare X16, 0
	064 JumpIfEqual {136}
	065 Move W17, [X16+24]
	066 Add W0, W15, W10
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Move W17, [X12]
	069 Add X16, X16, X14
	070 NotImplemented "Instruction LSLV not yet implemented."
	071 Or W9, W0, W9
	072 Move [X16], W9
	073 Add X10, X10, 1
	074 NotImplemented "Instruction CMP not yet implemented."
	075 NotImplemented "Instruction LSRV not yet implemented."
	076 Compare X20, 0
	077 JumpIfEqual {136}
	078 Move X0, [X8]
	079 Move W21, [X20+16]
	080 Call 0x1C17F10
	081 Add W2, W21, 1
	082 Move X1, X20
	083 Move X19, X0
	084 Call BigInteger..ctor, X0, X1, X2
	085 Compare W8, 0
	086 JumpIfEqual {111}
	087 Compare X19, 0
	088 JumpIfEqual {136}
	089 Move W11, W22
	090 Move X10, [X19+24]
	091 Move X13, W11
	092 Move X11, [X20+24]
	093 Move X9, X31
	094 Add X13, X10, X13
	095 Move W12, W22
	096 Add X13, X13, 32
	097 Add X14, X11, 32
	098 Compare X11, 0
	099 JumpIfEqual {136}
	100 Move W15, [X11+24]
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Compare X10, 0
	103 JumpIfEqual {136}
	104 Move W15, [X10+24]
	105 Add W16, W12, W9
	106 NotImplemented "Instruction CMP not yet implemented."
	107 Move W15, [X14]
	108 Move [X13], W15
	109 Add X9, X9, 1
	110 NotImplemented "Instruction CMP not yet implemented."
	111 Compare X19, 0
	112 JumpIfNotEqual {125}
	113 Compare X19, 0
	114 JumpIfEqual {136}
	115 Move X8, X31
	116 Move W9, W31
	117 Move X10, [X19+24]
	118 Compare X10, 0
	119 JumpIfEqual {136}
	120 Move W11, [X10+24]
	121 Add X8, X8, W22
	122 NotImplemented "Instruction CMP not yet implemented."
	123 Add X8, X10, X8
	124 Move [X8+32], W9
	125 Move X0, X19
	126 Call BigInteger.Normalize, X0
	127 Move X0, X19
	128 Move X20, [X31+48]
	129 Move X19, [X31+56]
	130 Move X22, [X31+32]
	131 Move X21, [X31+40]
	132 Move X24, [X31+16]
	133 Move X23, [X31+24]
	134 Move X30, [X31+64]
	135 Return X0
	136 Call 0x1C17F20
	137 Call 0x1C17F28

Method: Mono.Math.BigInteger RightShift(Mono.Math.BigInteger bi, System.Int32 n)

Disassembly:
	0x032077E4 MOV X20, X0
	0x032077E8 BL 0x32059AC
	0x032077EC STR X20, [X19 + 0x18]
	0x032077F0 CBZ X20, 0x320784C
	0x032077F4 LDR X8, [X20 + 0x18]
	0x032077F8 CBZ X8, 0x320784C
	0x032077FC LDR W10, [X8 + 0x18]
	0x03207800 UBFM W9, W22, 0x1F, 0x1E
	0x03207804 CMP W9, W10
	0x03207808 B.CS 0x3207850
	0x0320780C ADD X8, X8, W9, 0x2, UXTW
	0x03207810 MOVZ W9, 0x1
	0x03207814 STR W9, [X8 + 0x20]
	0x03207818 LDR X0, [X21]
	0x0320781C LDR X21, [X19 + 0x10]
	0x03207820 LDR W8, [X0 + 0xE0]
	0x03207824 CBNZ W8, 0x320782C
	0x03207828 BL 0x1C16DFC
	0x0320782C MOV X0, X20
	0x03207830 MOV X1, X21
	0x03207834 BL 0x32064D4
	0x03207838 STR X0, [X19 + 0x18]
	0x0320783C LDP X20, X19, [X31 + 0x20]
	0x03207840 LDP X22, X21, [X31 + 0x10]
	0x03207844 LDR X30, [X31], #0x30
	0x03207848 RET
	0x0320784C BL 0x1C16F20
	0x03207850 BL 0x1C16F28
	0x03207854 STP X30, X23, [X31 - 0x30]!
	0x03207858 STP X22, X21, [X31 + 0x10]
	0x0320785C STP X20, X19, [X31 + 0x20]
	0x03207860 ADRP X22, 0x11D5000
	0x03207864 ADRP X23, 0xF1A000
	0x03207868 LDRB W8, [X22 + 0x25B]
	0x0320786C LDR X23, [X23 + 0x530]
	0x03207870 MOV X19, X2
	0x03207874 MOV X21, X1
	0x03207878 MOV X20, X0
	0x0320787C TBNZ X8, 0x0, 0x3207894
	0x03207880 ADRP X0, 0xF1A000
	0x03207884 LDR X0, [X0 + 0x530]
	0x03207888 BL 0x1C16CF4
	0x0320788C MOVZ W8, 0x1
	0x03207890 STRB W8, [X22 + 0x25B]
	0x03207894 LDR X0, [X23]
	0x03207898 BL 0x1C16F10
	0x0320789C MOVZ W1, 0x1
	0x032078A0 MOV X22, X0
	0x032078A4 BL 0x3205C0C
	0x032078A8 LDR X0, [X23]
	0x032078AC LDR W8, [X0 + 0xE0]
	0x032078B0 CBNZ W8, 0x32078B8
	0x032078B4 BL 0x1C16DFC
	0x032078B8 MOV X0, X19
	0x032078BC MOV W1, W31
	0x032078C0 BL 0x3205C94
	0x032078C4 TBNZ X0, 0x0, 0x3207940
	0x032078C8 CBZ X19, 0x3207954
	0x032078CC MOV X0, X19
	0x032078D0 MOV W1, W31
	0x032078D4 BL 0x3206BC0
	0x032078D8 ANDS W31, W0, 0x1
	0x032078DC MOV X0, X19
	0x032078E0 CSEL X22, X21, X22, NE
	0x032078E4 BL 0x32019E0
	0x032078E8 CMP W0, 0x2
	0x032078EC B.LT 0x3207940
	0x032078F0 MOVZ W23, 0x1
	0x032078F4 MOV X0, X20
	0x032078F8 MOV X1, X21
	0x032078FC MOV X2, X21
	0x03207900 BL 0x32080D0
	0x03207904 MOV X21, X0
	0x03207908 MOV X0, X19
	0x0320790C MOV W1, W23
	0x03207910 BL 0x3206BC0
	0x03207914 TBZ X0, 0x0, 0x320792C
	0x03207918 MOV X0, X20
	0x0320791C MOV X1, X21
	0x03207920 MOV X2, X22
	0x03207924 BL 0x32080D0
	0x03207928 MOV X22, X0
	0x0320792C MOV X0, X19
	0x03207930 ADD W23, W23, 0x1
	0x03207934 BL 0x32019E0
	0x03207938 CMP W23, W0
	0x0320793C B.LT 0x32078F4
	0x03207940 MOV X0, X22
	0x03207944 LDP X20, X19, [X31 + 0x20]
	0x03207948 LDP X22, X21, [X31 + 0x10]
	0x0320794C LDP X30, X23, [X31], #0x30
	0x03207950 RET
	0x03207954 BL 0x1C16F20
	0x03207958 MOV X1, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X19, 0x11D6000
	008 Move W8, [X19+609]
	009 Move W20, W1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0xF1B000
	016 Move X0, [X0+1328]
	017 Call 0x1C17CF4
	018 Move X0, 0xF1B000
	019 Move X0, [X0+1784]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X19+609], W8
	023 Move X8, 0xF1B000
	024 Move X8, [X8+1328]
	025 Compare W20, 0
	026 JumpIfEqual {69}
	027 Compare X21, 0
	028 JumpIfEqual {100}
	029 Move X0, [X8]
	030 Move W23, [X21+16]
	031 NotImplemented "Instruction SBFM not yet implemented."
	032 Call 0x1C17F10
	033 Subtract W8, W23, W22
	034 Add W2, W8, 1
	035 Move X19, X0
	036 Call BigInteger..ctor, X0, X1, X2
	037 Compare X19, 0
	038 JumpIfEqual {100}
	039 Move X8, [X19+24]
	040 Compare X8, 0
	041 JumpIfEqual {100}
	042 Move W9, [X8+24]
	043 And W11, W20, 31
	044 Subtract W10, W9, 2
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Compare W11, 0
	047 Invalid "Jump target not found in method."
	048 Move X12, [X21+24]
	049 Compare X12, 0
	050 JumpIfEqual {100}
	051 Move W14, [X12+24]
	052 Subtract W16, W31, W20
	053 Move W13, W31
	054 Move X15, W22
	055 And W16, W16, 31
	056 Add X17, X15, W10
	057 NotImplemented "Instruction CMP not yet implemented."
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Add X17, X12, X17
	060 Move W17, [X17+32]
	061 Move W10, W10
	062 Add X0, X8, X10
	063 Subtract W10, W10, 1
	064 NotImplemented "Instruction LSRV not yet implemented."
	065 Or W13, W1, W13
	066 Add W31, W10, 1
	067 Move [X0+32], W13
	068 NotImplemented "Instruction LSLV not yet implemented."
	069 Move X0, [X8]
	070 Call 0x1C17F10
	071 Move X1, X21
	072 Move X19, X0
	073 Call BigInteger..ctor, X0, X1
	074 Move X11, [X21+24]
	075 Compare X11, 0
	076 JumpIfEqual {100}
	077 Move W12, [X11+24]
	078 Move X13, W22
	079 Add X14, X13, W10
	080 NotImplemented "Instruction CMP not yet implemented."
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Add X14, X11, X14
	083 Move W14, [X14+32]
	084 Move W10, W10
	085 Add X15, X8, X10
	086 Subtract W10, W10, 1
	087 Add W31, W10, 1
	088 Move [X15+32], W14
	089 Move X0, X19
	090 Call BigInteger.Normalize, X0
	091 Move X0, X19
	092 Move X20, [X31+32]
	093 Move X19, [X31+40]
	094 Move X22, [X31+16]
	095 Move X21, [X31+24]
	096 Move X30, [X31+48]
	097 Move X23, [X31+56]
	098 Return X0
	099 Call 0x1C17F28
	100 Call 0x1C17F20

Method: System.Void Multiply(System.UInt32[] x, System.UInt32 xOffset, System.UInt32 xLen, System.UInt32[] y, System.UInt32 yOffset, System.UInt32 yLen, System.UInt32[] d, System.UInt32 dOffset)

Disassembly:
	0x032074FC LDR W8, [X0 + 0xE0]
	0x03207500 CBNZ W8, 0x3207508
	0x03207504 BL 0x1C16DFC
	0x03207508 MOV X0, X26
	0x0320750C MOV X1, X27
	0x03207510 BL 0x3201838
	0x03207514 CBZ X22, 0x3207734
	0x03207518 MOV X2, X0
	0x0320751C MOV X0, X22
	0x03207520 MOV X1, X25
	0x03207524 BL 0x320824C
	0x03207528 LDR X8, [X19 + 0x18]
	0x0320752C CMP W8, 0x1
	0x03207530 B.LS 0x3207724
	0x03207534 LDR X26, [X19 + 0x28]
	0x03207538 MOV X25, X0
	0x0320753C CBZ X26, 0x3207558
	0x03207540 LDR X8, [X19]
	0x03207544 MOV X0, X26
	0x03207548 LDR X1, [X8 + 0x40]
	0x0320754C BL 0x1C16E00
	0x03207550 CBZ X0, 0x3207728
	0x03207554 LDR X8, [X19 + 0x18]
	0x03207558 CBZ W8, 0x3207724
	0x0320755C STR X26, [X19 + 0x20]
	0x03207560 CBZ X25, 0x320757C
	0x03207564 LDR X8, [X19]
	0x03207568 MOV X0, X25
	0x0320756C LDR X1, [X8 + 0x40]
	0x03207570 BL 0x1C16E00
	0x03207574 CBZ X0, 0x3207728
	0x03207578 LDR W8, [X19 + 0x18]
	0x0320757C CMP W8, 0x1
	0x03207580 B.LS 0x3207724
	0x03207584 MOV X0, X23
	0x03207588 MOV X1, X24
	0x0320758C STR X25, [X19 + 0x28]
	0x03207590 BL 0x320606C
	0x03207594 LDR X8, [X20 + 0x18]
	0x03207598 MOV X23, X0
	0x0320759C CMP W8, 0x1
	0x032075A0 B.LS 0x3207724
	0x032075A4 LDR X25, [X20 + 0x28]
	0x032075A8 CBZ X25, 0x32075C4
	0x032075AC LDR X8, [X20]
	0x032075B0 MOV X0, X25
	0x032075B4 LDR X1, [X8 + 0x40]
	0x032075B8 BL 0x1C16E00
	0x032075BC CBZ X0, 0x3207728
	0x032075C0 LDR X8, [X20 + 0x18]
	0x032075C4 CBZ W8, 0x3207724
	0x032075C8 STR X25, [X20 + 0x20]
	0x032075CC CBZ X23, 0x3207734
	0x032075D0 LDR W9, [X23 + 0x18]
	0x032075D4 CBZ W9, 0x3207724
	0x032075D8 LDR X25, [X23 + 0x20]
	0x032075DC CBZ X25, 0x32075F8
	0x032075E0 LDR X8, [X20]
	0x032075E4 MOV X0, X25
	0x032075E8 LDR X1, [X8 + 0x40]
	0x032075EC BL 0x1C16E00
	0x032075F0 CBZ X0, 0x3207728
	0x032075F4 LDR W8, [X20 + 0x18]

ISIL:
	001 Compare X0, 0
	002 JumpIfEqual {9}
	003 Move W8, [X0+24]
	004 Compare W8, 0
	005 JumpIfEqual {9}
	006 Add X8, X0, 32
	007 Compare X3, 0
	008 JumpIfNotEqual {12}
	009 Move X8, X31
	010 Compare X3, 0
	011 JumpIfEqual {18}
	012 Move W9, [X3+24]
	013 Compare W9, 0
	014 JumpIfEqual {18}
	015 Add X14, X3, 32
	016 Compare X6, 0
	017 JumpIfNotEqual {21}
	018 Move X14, X31
	019 Compare X6, 0
	020 JumpIfEqual {25}
	021 Move W9, [X6+24]
	022 Compare W9, 0
	023 JumpIfEqual {25}
	024 Add X11, X6, 32
	025 Move X11, X31
	026 Add X8, X8, W1
	027 Add X9, X8, W2
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move W12, W4
	030 Add X10, X14, W4
	031 Move X15, X12
	032 ShiftRight X15, 62
	033 And X15, X15, 0x1FFFFFFF
	034 Add X11, X11, W7
	035 Add X12, X10, W5
	036 Add X13, X10, 4
	037 Add X14, X14, X15
	038 Move W15, [X8]
	039 Compare W15, 0
	040 JumpIfEqual {68}
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move W17, [X10]
	043 Move W0, [X11]
	044 Move X16, X11
	045 NotImplemented "Instruction CMP not yet implemented."
	046 NotImplemented "Instruction MADD not yet implemented."
	047 Move [X16+4], W15
	048 Move X15, X15
	049 ShiftRight X15, 32
	050 And X15, X15, 0x7FFFFFFF
	051 Move W16, 4
	052 Move W0, [X11]
	053 Move W17, [X8]
	054 Move W1, [X14]
	055 Add X15, X15, X0
	056 NotImplemented "Instruction MADD not yet implemented."
	057 Move [X11], W15
	058 Add X16, X16, 4
	059 Add X17, X14, X16
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move X15, X15
	062 ShiftRight X15, 32
	063 And X15, X15, 0x7FFFFFFF
	064 Add X16, X11, X16
	065 Compare X15, 0
	066 JumpIfEqual {68}
	067 Move [X16], W15
	068 Add X8, X8, 4
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Add X11, X11, 4
	071 Return 

Method: System.Void MultiplyMod2p32pmod(System.UInt32[] x, System.Int32 xOffset, System.Int32 xLen, System.UInt32[] y, System.Int32 yOffest, System.Int32 yLen, System.UInt32[] d, System.Int32 dOffset, System.Int32 mod)

Disassembly:
	0x03208CD4 BL 0x3206C5C
	0x03208CD8 MOV X0, X19
	0x03208CDC LDP X20, X19, [X31 + 0x10]
	0x03208CE0 LDP X30, X21, [X31], #0x20
	0x03208CE4 RET
	0x03208CE8 BL 0x1C16F20
	0x03208CEC LDR X8, [X0]
	0x03208CF0 MOV X2, X31
	0x03208CF4 LDP X4, X3, [X8 + 0x1C8]
	0x03208CF8 BR X4
	0x03208CFC SUB X31, X31, 0x70
	0x03208D00 STP X29, X30, [X31 + 0x10]
	0x03208D04 STP X28, X27, [X31 + 0x20]
	0x03208D08 STP X26, X25, [X31 + 0x30]
	0x03208D0C STP X24, X23, [X31 + 0x40]
	0x03208D10 STP X22, X21, [X31 + 0x50]
	0x03208D14 STP X20, X19, [X31 + 0x60]
	0x03208D18 STR X2, [X31 + 0x8]
	0x03208D1C ADRP X19, 0x11D4000
	0x03208D20 ADRP X24, 0xF19000
	0x03208D24 LDRB W8, [X19 + 0x267]
	0x03208D28 LDR X24, [X24 + 0x530]
	0x03208D2C MOV W21, W1
	0x03208D30 MOV X20, X0
	0x03208D34 TBNZ X8, 0x0, 0x3208D4C
	0x03208D38 ADRP X0, 0xF19000
	0x03208D3C LDR X0, [X0 + 0x530]
	0x03208D40 BL 0x1C16CF4
	0x03208D44 MOVZ W8, 0x1
	0x03208D48 STRB W8, [X19 + 0x267]
	0x03208D4C LDR X8, [X20]
	0x03208D50 LDR X2, [X31 + 0x8]
	0x03208D54 MOV X0, X20
	0x03208D58 MOV W1, W21
	0x03208D5C LDP X9, X3, [X8 + 0x1B8]
	0x03208D60 BLR X9
	0x03208D64 LDR X8, [X24]
	0x03208D68 MOV X21, X0
	0x03208D6C LDR W9, [X8 + 0xE0]
	0x03208D70 CBNZ W9, 0x3208D7C
	0x03208D74 MOV X0, X8
	0x03208D78 BL 0x1C16DFC
	0x03208D7C MOVZ W8, 0xD796
	0x03208D80 MOVK W8, 0xC0CF0000
	0x03208D84 ORR W1, W8, 0x1
	0x03208D88 MOV X0, X21
	0x03208D8C BL 0x3206008
	0x03208D90 LDR X8, [X20]
	0x03208D94 MOV W22, W0
	0x03208D98 MOV X0, X20
	0x03208D9C LDP X9, X1, [X8 + 0x198]
	0x03208DA0 BLR X9
	0x03208DA4 LDR X8, [X24]
	0x03208DA8 MOVZ W19, 0xC235
	0x03208DAC MOVZ W28, 0xDCB1
	0x03208DB0 MOVZ W27, 0x286B
	0x03208DB4 LDR X8, [X8 + 0xB8]
	0x03208DB8 SXTW X26, W0
	0x03208DBC MOVK W19, 0x4F720000
	0x03208DC0 MOVK W28, 0x8D30000
	0x03208DC4 LDR X29, [X8]
	0x03208DC8 MOVK W27, 0x3F300000
	0x03208DCC MUL W8, W22, W19
	0x03208DD0 CMP W8, W28
	0x03208DD4 B.CC 0x3208F8C
	0x03208DD8 MOVZ W8, 0x42C9
	0x03208DDC MOVK W8, 0xB2160000
	0x03208DE0 UMADDL X8, X22, X8, X31
	0x03208DE4 UBFM X8, X8, 0x24, 0x3F
	0x03208DE8 MOVZ W9, 0x17
	0x03208DEC MSUB W8, W8, W9, W22
	0x03208DF0 CBZ W8, 0x3208F8C
	0x03208DF4 MOVZ W8, 0x6BCB
	0x03208DF8 MOVK W8, 0xAF280000
	0x03208DFC UMADDL X8, X22, X8, X31
	0x03208E00 UBFM X8, X8, 0x20, 0x3F
	0x03208E04 SUB W9, W22, W8
	0x03208E08 ADD W8, W8, W9, 0x1, LSR
	0x03208E0C UBFM W8, W8, 0x4, 0x1F

ISIL:
	001 Compare X0, 0
	002 JumpIfEqual {9}
	003 Move W8, [X0+24]
	004 Compare W8, 0
	005 JumpIfEqual {9}
	006 Add X8, X0, 32
	007 Compare X3, 0
	008 JumpIfNotEqual {12}
	009 Move X8, X31
	010 Compare X3, 0
	011 JumpIfEqual {18}
	012 Move W9, [X3+24]
	013 Compare W9, 0
	014 JumpIfEqual {18}
	015 Add X15, X3, 32
	016 Compare X6, 0
	017 JumpIfNotEqual {21}
	018 Move X15, X31
	019 Compare X6, 0
	020 JumpIfEqual {25}
	021 Move W9, [X6+24]
	022 Compare W9, 0
	023 JumpIfEqual {25}
	024 Add X11, X6, 32
	025 Move X11, X31
	026 Add X8, X8, W1
	027 Add X9, X8, W2
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move W14, [X31]
	030 NotImplemented "Instruction SBFM not yet implemented."
	031 Add X10, X15, W4
	032 Add X11, X11, W7
	033 Add X12, X10, W5
	034 Add X13, X10, 4
	035 Add X14, X11, W14
	036 Add X15, X15, X16
	037 Move W16, [X8]
	038 Compare W16, 0
	039 JumpIfEqual {80}
	040 NotImplemented "Instruction CMP not yet implemented."
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move W17, [X10]
	043 Move W1, [X11]
	044 Move X0, X11
	045 NotImplemented "Instruction MADD not yet implemented."
	046 Move [X0+4], W16
	047 NotImplemented "Instruction CMP not yet implemented."
	048 NotImplemented "Instruction CSET not yet implemented."
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move X16, X16
	051 ShiftRight X16, 32
	052 And X16, X16, 0x7FFFFFFF
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move X0, X31
	055 Add X2, X11, X0
	056 Add X17, X15, X0
	057 Move W5, [X2+4]
	058 Move W3, [X8]
	059 Move W4, [X17+4]
	060 Add X1, X2, 8
	061 Add X16, X16, X5
	062 Add X6, X17, 8
	063 NotImplemented "Instruction CMP not yet implemented."
	064 NotImplemented "Instruction MADD not yet implemented."
	065 NotImplemented "Instruction CSET not yet implemented."
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move [X2+4], W16
	068 Move X16, X16
	069 ShiftRight X16, 32
	070 And X16, X16, 0x7FFFFFFF
	071 Add X0, X0, 4
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Add X0, X11, X0
	074 Add X0, X0, 4
	075 Compare W17, 0
	076 JumpIfEqual {80}
	077 Compare X16, 0
	078 JumpIfEqual {80}
	079 Move [X0], W16
	080 Add X8, X8, 4
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Add X11, X11, 4
	083 Return 

Method: System.UInt32 modInverse(Mono.Math.BigInteger bi, System.UInt32 modulus)

Disassembly:
	0x032095F8 ADDS W31, W0, 0x1
	0x032095FC B.NE 0x3209628
	0x03209600 ADRP X8, 0xF15000
	0x03209604 LDR X8, [X8 + 0xD78]
	0x03209608 LDR W20, [X19]
	0x0320960C LDR X0, [X8]
	0x03209610 LDR W8, [X0 + 0xE0]
	0x03209614 CBNZ W8, 0x320961C
	0x03209618 BL 0x1C16DFC
	0x0320961C MOV W0, W20
	0x03209620 BL 0x3EB1C60
	0x03209624 STR W0, [X19 + 0x4]
	0x03209628 LDP X20, X19, [X31 + 0x10]
	0x0320962C LDR X30, [X31], #0x20
	0x03209630 RET
	0x03209634 STP X30, X21, [X31 - 0x20]!
	0x03209638 STP X20, X19, [X31 + 0x10]
	0x0320963C ADRP X21, 0x11D3000
	0x03209640 ADRP X20, 0xF15000
	0x03209644 LDRB W8, [X21 + 0x26D]
	0x03209648 LDR X20, [X20 + 0xD78]
	0x0320964C MOV X19, X0
	0x03209650 TBNZ X8, 0x0, 0x3209668
	0x03209654 ADRP X0, 0xF15000
	0x03209658 LDR X0, [X0 + 0xD78]
	0x0320965C BL 0x1C16CF4
	0x03209660 MOVZ W8, 0x1
	0x03209664 STRB W8, [X21 + 0x26D]
	0x03209668 MOV X0, X19
	0x0320966C BL 0x32095C8
	0x03209670 LDR X8, [X20]
	0x03209674 MOV W19, W0
	0x03209678 LDR W9, [X8 + 0xE0]
	0x0320967C CBNZ W9, 0x3209688
	0x03209680 MOV X0, X8
	0x03209684 BL 0x1C16DFC
	0x03209688 MOV W0, W19
	0x0320968C LDP X20, X19, [X31 + 0x10]
	0x03209690 LDP X30, X21, [X31], #0x20
	0x03209694 B 0x3209784
	0x03209698 STR X30, [X31 - 0x30]!
	0x0320969C STP X22, X21, [X31 + 0x10]
	0x032096A0 STP X20, X19, [X31 + 0x20]
	0x032096A4 ADRP X21, 0x11D3000
	0x032096A8 ADRP X22, 0xF15000
	0x032096AC LDRB W8, [X21 + 0x26A]
	0x032096B0 LDR X22, [X22 + 0xD78]
	0x032096B4 MOV W19, W1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x11D4000
	007 Move X22, 0xF19000
	008 Move W8, [X21+610]
	009 Move X22, [X22+1328]
	010 Move W19, W1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xF19000
	017 Move X0, [X0+1328]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+610], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X0, X20
	027 Move W1, W19
	028 Call Kernel.DwordMod, X0, X1
	029 Move W8, W0
	030 Move W9, W31
	031 Move W0, 1
	032 Move W10, W19
	033 Compare W8, 0
	034 JumpIfEqual {47}
	035 NotImplemented "Instruction CMP not yet implemented."
	036 NotImplemented "Instruction UDIV not yet implemented."
	037 NotImplemented "Instruction MSUB not yet implemented."
	038 Compare W10, 0
	039 JumpIfEqual {49}
	040 NotImplemented "Instruction CMP not yet implemented."
	041 NotImplemented "Instruction MADD not yet implemented."
	042 NotImplemented "Instruction UDIV not yet implemented."
	043 NotImplemented "Instruction MADD not yet implemented."
	044 NotImplemented "Instruction MSUB not yet implemented."
	045 Compare W8, 0
	046 JumpIfNotEqual {35}
	047 Move W0, W8
	048 Subtract W0, W19, W9
	049 Move W0, W10
	050 Move X20, [X31+32]
	051 Move X19, [X31+40]
	052 Move X22, [X31+16]
	053 Move X21, [X31+24]
	054 Move X30, [X31+48]
	055 Return X0

Method: Mono.Math.BigInteger modInverse(Mono.Math.BigInteger bi, Mono.Math.BigInteger modulus)

Disassembly:
	0x03208288 LDR X23, [X23 + 0x530]
	0x0320828C MOV X0, X22
	0x03208290 MOV X1, X21
	0x03208294 BL 0x3205D00
	0x03208298 MOV W20, W0
	0x0320829C ADDS W31, W0, 0x1
	0x032082A0 B.EQ 0x32082D4
	0x032082A4 CMP W20, 0x1
	0x032082A8 B.EQ 0x32082F0
	0x032082AC CBNZ W20, 0x32083CC
	0x032082B0 LDR X0, [X23]
	0x032082B4 LDR W8, [X0 + 0xE0]
	0x032082B8 CBNZ W8, 0x32082C0
	0x032082BC BL 0x1C16DFC
	0x032082C0 LDP X20, X19, [X31 + 0x20]
	0x032082C4 LDP X22, X21, [X31 + 0x10]
	0x032082C8 MOV W0, W31
	0x032082CC LDP X30, X23, [X31], #0x30
	0x032082D0 B 0x3201A60
	0x032082D4 LDR X0, [X23]
	0x032082D8 LDR W8, [X0 + 0xE0]
	0x032082DC CBNZ W8, 0x32082E4
	0x032082E0 BL 0x1C16DFC
	0x032082E4 MOV X0, X21
	0x032082E8 MOV X1, X22
	0x032082EC B 0x3208308
	0x032082F0 LDR X0, [X23]
	0x032082F4 LDR W8, [X0 + 0xE0]
	0x032082F8 CBNZ W8, 0x3208300
	0x032082FC BL 0x1C16DFC
	0x03208300 MOV X0, X22
	0x03208304 MOV X1, X21
	0x03208308 BL 0x3201B04
	0x0320830C MOV X21, X0
	0x03208310 LDR X0, [X23]
	0x03208314 LDR X22, [X19 + 0x10]
	0x03208318 LDR W8, [X0 + 0xE0]
	0x0320831C CBNZ W8, 0x3208324
	0x03208320 BL 0x1C16DFC
	0x03208324 MOV X0, X21
	0x03208328 MOV X1, X22
	0x0320832C BL 0x3205D00
	0x03208330 TBNZ X0, 0x1F, 0x3208380
	0x03208334 CBZ X21, 0x32083C8
	0x03208338 LDR X22, [X19 + 0x10]
	0x0320833C CBZ X22, 0x32083C8
	0x03208340 LDR W8, [X21 + 0x10]
	0x03208344 LDR W9, [X22 + 0x10]
	0x03208348 CMP W8, W9, LSL
	0x0320834C B.CS 0x3208360
	0x03208350 MOV X0, X19
	0x03208354 MOV X1, X21
	0x03208358 BL 0x3207A7C
	0x0320835C B 0x3208380
	0x03208360 LDR X0, [X23]
	0x03208364 LDR W8, [X0 + 0xE0]
	0x03208368 CBNZ W8, 0x3208370
	0x0320836C BL 0x1C16DFC
	0x03208370 MOV X0, X21
	0x03208374 MOV X1, X22
	0x03208378 BL 0x3201C74
	0x0320837C MOV X21, X0
	0x03208380 ADDS W31, W20, 0x1
	0x03208384 B.EQ 0x320839C
	0x03208388 MOV X0, X21
	0x0320838C LDP X20, X19, [X31 + 0x20]
	0x03208390 LDP X22, X21, [X31 + 0x10]
	0x03208394 LDP X30, X23, [X31], #0x30
	0x03208398 RET
	0x0320839C LDR X0, [X23]
	0x032083A0 LDR X19, [X19 + 0x10]
	0x032083A4 LDR W8, [X0 + 0xE0]
	0x032083A8 CBNZ W8, 0x32083B0
	0x032083AC BL 0x1C16DFC
	0x032083B0 MOV X0, X19
	0x032083B4 MOV X1, X21
	0x032083B8 LDP X20, X19, [X31 + 0x20]
	0x032083BC LDP X22, X21, [X31 + 0x10]
	0x032083C0 LDP X30, X23, [X31], #0x30
	0x032083C4 B 0x3201B04
	0x032083C8 BL 0x1C16F20
	0x032083CC ADRP X0, 0xEEB000
	0x032083D0 LDR X0, [X0 + 0x7D0]
	0x032083D4 BL 0x1C16D08
	0x032083D8 BL 0x1C16F10
	0x032083DC MOV X1, X31
	0x032083E0 MOV X19, X0
	0x032083E4 BL 0x33B2C54
	0x032083E8 ADRP X0, 0xF19000
	0x032083EC LDR X0, [X0 + 0x768]
	0x032083F0 BL 0x1C16D08
	0x032083F4 MOV X1, X0
	0x032083F8 MOV X0, X19
	0x032083FC BL 0x1C16DEC
	0x03208400 STP X30, X23, [X31 - 0x30]!
	0x03208404 STP X22, X21, [X31 + 0x10]
	0x03208408 STP X20, X19, [X31 + 0x20]
	0x0320840C ADRP X22, 0x11D4000
	0x03208410 ADRP X23, 0xF19000
	0x03208414 LDRB W8, [X22 + 0x25C]
	0x03208418 LDR X23, [X23 + 0x530]
	0x0320841C MOV X19, X2
	0x03208420 MOV W21, W1
	0x03208424 MOV X20, X0
	0x03208428 TBNZ X8, 0x0, 0x3208440
	0x0320842C ADRP X0, 0xF19000
	0x03208430 LDR X0, [X0 + 0x530]
	0x03208434 BL 0x1C16CF4
	0x03208438 MOVZ W8, 0x1
	0x0320843C STRB W8, [X22 + 0x25C]
	0x03208440 LDR X0, [X23]
	0x03208444 BL 0x1C16F10
	0x03208448 MOV W1, W21
	0x0320844C MOV X22, X0
	0x03208450 BL 0x3205C0C
	0x03208454 MOV X0, X20
	0x03208458 MOV X1, X22
	0x0320845C MOV X2, X19
	0x03208460 LDP X20, X19, [X31 + 0x20]
	0x03208464 LDP X22, X21, [X31 + 0x10]
	0x03208468 LDP X30, X23, [X31], #0x30
	0x0320846C B 0x3207854
	0x03208470 STP X30, X23, [X31 - 0x30]!
	0x03208474 STP X22, X21, [X31 + 0x10]
	0x03208478 STP X20, X19, [X31 + 0x20]
	0x0320847C ADRP X19, 0x11D4000
	0x03208480 LDRB W8, [X19 + 0x25E]
	0x03208484 MOV W21, W1
	0x03208488 MOV X20, X0
	0x0320848C TBNZ X8, 0x0, 0x32084B0
	0x03208490 ADRP X0, 0xF19000
	0x03208494 LDR X0, [X0 + 0x6E8]
	0x03208498 BL 0x1C16CF4
	0x0320849C ADRP X0, 0xF19000
	0x032084A0 LDR X0, [X0 + 0x530]
	0x032084A4 BL 0x1C16CF4
	0x032084A8 MOVZ W8, 0x1
	0x032084AC STRB W8, [X19 + 0x25E]
	0x032084B0 CBZ X20, 0x32085E4
	0x032084B4 ADRP X23, 0xF19000
	0x032084B8 LDR X23, [X23 + 0x530]
	0x032084BC LDR W22, [X20 + 0x10]
	0x032084C0 LDR X0, [X23]
	0x032084C4 BL 0x1C16F10
	0x032084C8 MOV W2, W22
	0x032084CC MOV X19, X0
	0x032084D0 BL 0x32059AC
	0x032084D4 LDR W11, [X20 + 0x10]
	0x032084D8 CBZ W11, 0x320853C
	0x032084DC LDR X8, [X20 + 0x18]
	0x032084E0 CBZ X8, 0x32085E4
	0x032084E4 LDR W9, [X8 + 0x18]
	0x032084E8 MOV X20, X31
	0x032084EC MOV W10, W21
	0x032084F0 ADD X11, X11, 0x7
	0x032084F4 SUB X13, X11, 0x8
	0x032084F8 CMP X13, X9
	0x032084FC B.CS 0x32085E8
	0x03208500 CBZ X19, 0x32085E4
	0x03208504 LDR X12, [X19 + 0x18]
	0x03208508 CBZ X12, 0x32085E4
	0x0320850C LDR W14, [X12 + 0x18]
	0x03208510 CMP X13, X14
	0x03208514 B.CS 0x32085E8
	0x03208518 LDR W13, [X8, X11, LSL #2]
	0x0320851C BFM X13, X20, 0x20, 0x1F
	0x03208520 UDIV X14, X13, X10
	0x03208524 STR W14, [X12, X11, LSL #2]
	0x03208528 SUB X11, X11, 0x1
	0x0320852C CMP X11, 0x7
	0x03208530 MSUB X20, X14, X10, X13
	0x03208534 B.NE 0x32084F4
	0x03208538 B 0x3208544
	0x0320853C CBZ X19, 0x32085E4
	0x03208540 MOV W20, W31
	0x03208544 ADRP X21, 0xF19000
	0x03208548 LDR X21, [X21 + 0x6E8]
	0x0320854C MOV X0, X19
	0x03208550 BL 0x3205BB4
	0x03208554 LDR X0, [X23]
	0x03208558 LDR W8, [X0 + 0xE0]
	0x0320855C CBNZ W8, 0x3208564
	0x03208560 BL 0x1C16DFC
	0x03208564 MOV W0, W20
	0x03208568 BL 0x32016C0
	0x0320856C LDR X8, [X21]
	0x03208570 MOV X20, X0
	0x03208574 MOVZ W1, 0x2
	0x03208578 MOV X0, X8
	0x0320857C BL 0x1C16D6C
	0x03208580 CBZ X0, 0x32085E4
	0x03208584 LDR X8, [X0]
	0x03208588 MOV X21, X0
	0x0320858C MOV X0, X19
	0x03208590 LDR X1, [X8 + 0x40]
	0x03208594 BL 0x1C16E00
	0x03208598 CBZ X0, 0x32085EC
	0x0320859C LDR W8, [X21 + 0x18]
	0x032085A0 CBZ W8, 0x32085E8
	0x032085A4 STR X19, [X21 + 0x20]
	0x032085A8 CBZ X20, 0x32085C4
	0x032085AC LDR X8, [X21]
	0x032085B0 MOV X0, X20
	0x032085B4 LDR X1, [X8 + 0x40]
	0x032085B8 BL 0x1C16E00
	0x032085BC CBZ X0, 0x32085EC
	0x032085C0 LDR W8, [X21 + 0x18]
	0x032085C4 CMP W8, 0x1
	0x032085C8 B.LS 0x32085E8
	0x032085CC STR X20, [X21 + 0x28]
	0x032085D0 MOV X0, X21
	0x032085D4 LDP X20, X19, [X31 + 0x20]
	0x032085D8 LDP X22, X21, [X31 + 0x10]
	0x032085DC LDP X30, X23, [X31], #0x30
	0x032085E0 RET
	0x032085E4 BL 0x1C16F20
	0x032085E8 BL 0x1C16F28
	0x032085EC BL 0x1C16F44
	0x032085F0 MOV X1, X31
	0x032085F4 BL 0x1C16DEC
	0x032085F8 STR X30, [X31 - 0x30]!
	0x032085FC STP X22, X21, [X31 + 0x10]
	0x03208600 STP X20, X19, [X31 + 0x20]
	0x03208604 ADRP X21, 0x11D4000
	0x03208608 ADRP X22, 0xF19000
	0x0320860C LDRB W8, [X21 + 0x262]
	0x03208610 LDR X22, [X22 + 0x530]
	0x03208614 MOV W19, W1
	0x03208618 MOV X20, X0
	0x0320861C TBNZ X8, 0x0, 0x3208634
	0x03208620 ADRP X0, 0xF19000
	0x03208624 LDR X0, [X0 + 0x530]
	0x03208628 BL 0x1C16CF4
	0x0320862C MOVZ W8, 0x1
	0x03208630 STRB W8, [X21 + 0x262]
	0x03208634 LDR X0, [X22]
	0x03208638 LDR W8, [X0 + 0xE0]
	0x0320863C CBNZ W8, 0x3208644
	0x03208640 BL 0x1C16DFC
	0x03208644 MOV X0, X20
	0x03208648 MOV W1, W19
	0x0320864C BL 0x3206008
	0x03208650 MOV W8, W0
	0x03208654 MOV W9, W31
	0x03208658 MOVZ W0, 0x1
	0x0320865C MOV W10, W19
	0x03208660 CBZ W8, 0x3208694
	0x03208664 CMP W8, 0x1
	0x03208668 B.EQ 0x32086A8
	0x0320866C UDIV W11, W10, W8
	0x03208670 MSUB W10, W11, W8, W10
	0x03208674 CBZ W10, 0x32086A4
	0x03208678 CMP W10, 0x1
	0x0320867C MADD W9, W11, W0, W9
	0x03208680 B.EQ 0x320869C
	0x03208684 UDIV W11, W8, W10
	0x03208688 MADD W0, W11, W9, W0
	0x0320868C MSUB W8, W11, W10, W8
	0x03208690 CBNZ W8, 0x3208664
	0x03208694 MOV W0, W8
	0x03208698 B 0x32086A8
	0x0320869C SUB W0, W19, W9
	0x032086A0 B 0x32086A8
	0x032086A4 MOV W0, W10
	0x032086A8 LDP X20, X19, [X31 + 0x20]
	0x032086AC LDP X22, X21, [X31 + 0x10]
	0x032086B0 LDR X30, [X31], #0x30
	0x032086B4 RET
	0x032086B8 STR X30, [X31 - 0x30]!
	0x032086BC STP X22, X21, [X31 + 0x10]
	0x032086C0 STP X20, X19, [X31 + 0x20]
	0x032086C4 LDR X8, [X2 + 0x8]
	0x032086C8 STP X1, X2, [X0 + 0x20]
	0x032086CC MOV X19, X0
	0x032086D0 MOV X20, X2
	0x032086D4 STR X8, [X0 + 0x10]
	0x032086D8 LDRB W22, [X2 + 0x52]
	0x032086DC STR X0, [X0 + 0x40]
	0x032086E0 MOV X0, X2
	0x032086E4 MOV X21, X1
	0x032086E8 BL 0x1C16D84
	0x032086EC TBZ X0, 0x0, 0x3208704
	0x032086F0 CMP W22, 0x2
	0x032086F4 B.NE 0x3208740
	0x032086F8 ADRP X8, 0xFFFFFFFFFE9AB000
	0x032086FC ADD X8, X8, 0x870
	0x03208700 B 0x3208784
	0x03208704 CMP W22, 0x1
	0x03208708 B.NE 0x320873C
	0x0320870C LDRB W8, [X19 + 0x70]
	0x03208710 CBZ W8, 0x3208754
	0x03208714 MOV X0, X20
	0x03208718 BL 0x1C16D7C
	0x0320871C MOV W21, W0
	0x03208720 MOV X0, X20
	0x03208724 BL 0x1C17238
	0x03208728 TBZ X21, 0x0, 0x3208760
	0x0320872C TBZ X0, 0x0, 0x3208770
	0x03208730 ADRP X8, 0xFFFFFFFFFE9AB000
	0x03208734 ADD X8, X8, 0x98C
	0x03208738 B 0x3208784
	0x0320873C CBZ X21, 0x32087A4
	0x03208740 LDR X8, [X19 + 0x10]
	0x03208744 LDR X9, [X19 + 0x20]
	0x03208748 STR X8, [X19 + 0x18]
	0x0320874C STR X9, [X19 + 0x40]
	0x03208750 B 0x3208788
	0x03208754 ADRP X8, 0xFFFFFFFFFE9AB000
	0x03208758 ADD X8, X8, 0x84C
	0x0320875C B 0x3208784
	0x03208760 TBZ X0, 0x0, 0x320877C
	0x03208764 ADRP X8, 0xFFFFFFFFFE9AB000
	0x03208768 ADD X8, X8, 0x8B4
	0x0320876C B 0x3208784
	0x03208770 ADRP X8, 0xFFFFFFFFFE9AB000
	0x03208774 ADD X8, X8, 0x940
	0x03208778 B 0x3208784
	0x0320877C ADRP X8, 0xFFFFFFFFFE9AB000

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X19, 0x11D5000
	014 Move W8, [X19+611]
	015 Move X23, X1
	016 Move X25, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {32}
	021 Move X0, 0xF1A000
	022 Move X0, [X0+1768]
	023 Call 0x1C17CF4
	024 Move X0, 0xF1A000
	025 Move X0, [X0+1328]
	026 Call 0x1C17CF4
	027 Move X0, 0xF1A000
	028 Move X0, [X0+1432]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X19+611], W8
	032 Compare X23, 0
	033 JumpIfEqual {363}
	034 Move W8, [X23+16]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move X8, [X23+24]
	037 Compare X8, 0
	038 JumpIfEqual {363}
	039 Move W9, [X8+24]
	040 Compare W9, 0
	041 JumpIfEqual {359}
	042 Move W1, [X8+32]
	043 Move X0, X25
	044 Call Kernel.modInverse, X0, X1
	045 Move X8, 0xF1A000
	046 Move X8, [X8+1328]
	047 Move W19, W0
	048 Move X8, [X8]
	049 Move W9, [X8+224]
	050 Compare W9, 0
	051 JumpIfNotEqual {54}
	052 Move X0, X8
	053 Call 0x1C17DFC
	054 Move W0, W19
	055 Move X20, [X31+80]
	056 Move X19, [X31+88]
	057 Move X22, [X31+64]
	058 Move X21, [X31+72]
	059 Move X24, [X31+48]
	060 Move X23, [X31+56]
	061 Move X26, [X31+32]
	062 Move X25, [X31+40]
	063 Move X28, [X31+16]
	064 Move X27, [X31+24]
	065 Move X29, [X31+96]
	066 Move X30, [X31+104]
	067 Call BigInteger.op_Implicit, X0
	068 Return X0
	069 Move X21, 0xF1A000
	070 Move X21, [X21+1768]
	071 Move W1, 2
	072 Move X0, [X21]
	073 Call 0x1C17D6C
	074 Move X28, 0xF1A000
	075 Move X28, [X28+1328]
	076 Move X19, X0
	077 Move X8, [X28]
	078 Move W9, [X8+224]
	079 Compare W9, 0
	080 JumpIfNotEqual {83}
	081 Move X0, X8
	082 Call 0x1C17DFC
	083 Move W0, W31
	084 Call BigInteger.op_Implicit, X0
	085 Compare X19, 0
	086 JumpIfEqual {363}
	087 Move X20, X0
	088 Compare X0, 0
	089 JumpIfEqual {96}
	090 Move X8, [X19]
	091 Move X0, X20
	092 Move X1, [X8+64]
	093 Call 0x1C17E00
	094 Compare X0, 0
	095 JumpIfEqual {360}
	096 Move W8, [X19+24]
	097 Compare W8, 0
	098 JumpIfEqual {359}
	099 Move W0, 1
	100 Move [X19+32], X20
	101 Call BigInteger.op_Implicit, X0
	102 Move X20, X0
	103 Compare X0, 0
	104 JumpIfEqual {111}
	105 Move X8, [X19]
	106 Move X0, X20
	107 Move X1, [X8+64]
	108 Call 0x1C17E00
	109 Compare X0, 0
	110 JumpIfEqual {360}
	111 Move W8, [X19+24]
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Move [X19+40], X20
	114 Move X0, [X21]
	115 Move W1, 2
	116 Call 0x1C17D6C
	117 Move X8, [X21]
	118 Move X20, X0
	119 Move W1, 2
	120 Move X0, X8
	121 Call 0x1C17D6C
	122 Move X21, X0
	123 Move W0, W31
	124 Call BigInteger.op_Implicit, X0
	125 Compare X21, 0
	126 JumpIfEqual {363}
	127 Move X22, X0
	128 Compare X0, 0
	129 JumpIfEqual {136}
	130 Move X8, [X21]
	131 Move X0, X22
	132 Move X1, [X8+64]
	133 Call 0x1C17E00
	134 Compare X0, 0
	135 JumpIfEqual {360}
	136 Move W8, [X21+24]
	137 Compare W8, 0
	138 JumpIfEqual {359}
	139 Move W0, W31
	140 Move [X21+32], X22
	141 Call BigInteger.op_Implicit, X0
	142 Move X22, X0
	143 Compare X0, 0
	144 JumpIfEqual {151}
	145 Move X8, [X21]
	146 Move X0, X22
	147 Move X1, [X8+64]
	148 Call 0x1C17E00
	149 Compare X0, 0
	150 JumpIfEqual {360}
	151 Move W8, [X21+24]
	152 NotImplemented "Instruction CMP not yet implemented."
	153 Move [X21+40], X22
	154 Move X8, 0xF1A000
	155 Move X8, [X8+1432]
	156 Move X0, [X8]
	157 Call 0x1C17F10
	158 Move X1, X23
	159 Move X22, X0
	160 Call ModulusRing..ctor, X0, X1
	161 Move W29, W31
	162 Move X0, [X28]
	163 Move X24, X25
	164 Move W8, [X0+224]
	165 Compare W8, 0
	166 JumpIfNotEqual {168}
	167 Call 0x1C17DFC
	168 Move X0, X24
	169 Move W1, W31
	170 Call BigInteger.op_Inequality, X0, X1
	171 Move TEMP, X0
	172 And TEMP, TEMP, 1
	173 Compare TEMP, 1
	174 JumpIfNotEqual {304}
	175 NotImplemented "Instruction CMP not yet implemented."
	176 Move X0, X23
	177 Move X1, X24
	178 Call Kernel.multiByteDivide, X0, X1
	179 Compare X20, 0
	180 JumpIfNotEqual {237}
	181 Move W8, [X19+24]
	182 Compare W8, 0
	183 JumpIfEqual {359}
	184 NotImplemented "Instruction CMP not yet implemented."
	185 Compare X20, 0
	186 JumpIfEqual {363}
	187 Move W8, [X20+24]
	188 Compare W8, 0
	189 JumpIfEqual {359}
	190 Move X0, [X28]
	191 Move X25, [X19+32]
	192 Move X26, [X19+40]
	193 Move X27, [X20+32]
	194 Move W8, [X0+224]
	195 Compare W8, 0
	196 JumpIfNotEqual {198}
	197 Call 0x1C17DFC
	198 Move X0, X26
	199 Move X1, X27
	200 Call BigInteger.op_Multiply, X0, X1
	201 Compare X22, 0
	202 JumpIfEqual {363}
	203 Move X2, X0
	204 Move X0, X22
	205 Move X1, X25
	206 Call ModulusRing.Difference, X0, X1, X2
	207 Move X8, [X19+24]
	208 NotImplemented "Instruction CMP not yet implemented."
	209 Move X26, [X19+40]
	210 Move X25, X0
	211 Compare X26, 0
	212 JumpIfEqual {220}
	213 Move X8, [X19]
	214 Move X0, X26
	215 Move X1, [X8+64]
	216 Call 0x1C17E00
	217 Compare X0, 0
	218 JumpIfEqual {360}
	219 Move X8, [X19+24]
	220 Compare W8, 0
	221 JumpIfEqual {359}
	222 Move [X19+32], X26
	223 Compare X25, 0
	224 JumpIfEqual {232}
	225 Move X8, [X19]
	226 Move X0, X25
	227 Move X1, [X8+64]
	228 Call 0x1C17E00
	229 Compare X0, 0
	230 JumpIfEqual {360}
	231 Move W8, [X19+24]
	232 NotImplemented "Instruction CMP not yet implemented."
	233 Move X0, X23
	234 Move X1, X24
	235 Move [X19+40], X25
	236 Call Kernel.multiByteDivide, X0, X1
	237 Move X8, [X20+24]
	238 Move X23, X0
	239 NotImplemented "Instruction CMP not yet implemented."
	240 Move X25, [X20+40]
	241 Compare X25, 0
	242 JumpIfEqual {250}
	243 Move X8, [X20]
	244 Move X0, X25
	245 Move X1, [X8+64]
	246 Call 0x1C17E00
	247 Compare X0, 0
	248 JumpIfEqual {360}
	249 Move X8, [X20+24]
	250 Compare W8, 0
	251 JumpIfEqual {359}
	252 Move [X20+32], X25
	253 Compare X23, 0
	254 JumpIfEqual {363}
	255 Move W9, [X23+24]
	256 Compare W9, 0
	257 JumpIfEqual {359}
	258 Move X25, [X23+32]
	259 Compare X25, 0
	260 JumpIfEqual {268}
	261 Move X8, [X20]
	262 Move X0, X25
	263 Move X1, [X8+64]
	264 Call 0x1C17E00
	265 Compare X0, 0
	266 JumpIfEqual {360}
	267 Move W8, [X20+24]
	268 NotImplemented "Instruction CMP not yet implemented."
	269 Move [X20+40], X25
	270 Move X8, [X21+24]
	271 NotImplemented "Instruction CMP not yet implemented."
	272 Move X25, [X21+40]
	273 Compare X25, 0
	274 JumpIfEqual {282}
	275 Move X8, [X21]
	276 Move X0, X25
	277 Move X1, [X8+64]
	278 Call 0x1C17E00
	279 Compare X0, 0
	280 JumpIfEqual {360}
	281 Move X8, [X21+24]
	282 Compare W8, 0
	283 JumpIfEqual {359}
	284 Move [X21+32], X25
	285 Move W9, [X23+24]
	286 NotImplemented "Instruction CMP not yet implemented."
	287 Move X25, [X23+40]
	288 Compare X25, 0
	289 JumpIfEqual {297}
	290 Move X8, [X21]
	291 Move X0, X25
	292 Move X1, [X8+64]
	293 Call 0x1C17E00
	294 Compare X0, 0
	295 JumpIfEqual {360}
	296 Move W8, [X21+24]
	297 NotImplemented "Instruction CMP not yet implemented."
	298 Move [X21+40], X25
	299 Move W8, [X23+24]
	300 NotImplemented "Instruction CMP not yet implemented."
	301 Move X25, [X23+40]
	302 Add W29, W29, 1
	303 Move X23, X24
	304 Move W8, [X21+24]
	305 Compare W8, 0
	306 JumpIfEqual {359}
	307 Move X0, [X28]
	308 Move X21, [X21+32]
	309 Move W8, [X0+224]
	310 Compare W8, 0
	311 JumpIfNotEqual {313}
	312 Call 0x1C17DFC
	313 Move W1, 1
	314 Move X0, X21
	315 Call BigInteger.op_Inequality, X0, X1
	316 Move TEMP, X0
	317 And TEMP, TEMP, 1
	318 Compare TEMP, 1
	319 JumpIfEqual {364}
	320 Move W8, [X19+24]
	321 Compare W8, 0
	322 JumpIfEqual {359}
	323 NotImplemented "Instruction CMP not yet implemented."
	324 Compare X20, 0
	325 JumpIfEqual {363}
	326 Move W8, [X20+24]
	327 Compare W8, 0
	328 JumpIfEqual {359}
	329 Move X0, [X28]
	330 Move X21, [X19+32]
	331 Move X19, [X19+40]
	332 Move X20, [X20+32]
	333 Move W8, [X0+224]
	334 Compare W8, 0
	335 JumpIfNotEqual {337}
	336 Call 0x1C17DFC
	337 Move X0, X19
	338 Move X1, X20
	339 Call BigInteger.op_Multiply, X0, X1
	340 Compare X22, 0
	341 JumpIfEqual {363}
	342 Move X2, X0
	343 Move X0, X22
	344 Move X1, X21
	345 Move X20, [X31+80]
	346 Move X19, [X31+88]
	347 Move X22, [X31+64]
	348 Move X21, [X31+72]
	349 Move X24, [X31+48]
	350 Move X23, [X31+56]
	351 Move X26, [X31+32]
	352 Move X25, [X31+40]
	353 Move X28, [X31+16]
	354 Move X27, [X31+24]
	355 Move X29, [X31+96]
	356 Move X30, [X31+104]
	357 Call ModulusRing.Difference, X0, X1, X2
	358 Return X0
	359 Call 0x1C17F28
	360 Call 0x1C17F44
	361 Move X1, X31
	362 Call 0x1C17DEC
	363 Call 0x1C17F20
	364 Move X0, 0xF1A000
	365 Move X0, [X0+1376]
	366 Call 0x1C17D08
	367 Call 0x1C17F10
	368 Move X19, X0
	369 Move X0, 0xF1A000
	370 Move X0, [X0+1856]
	371 Call 0x1C17D08
	372 Move X1, X0
	373 Move X0, X19
	374 Move X2, X31
	375 Call ArithmeticException..ctor, X0, X1
	376 Move X0, 0xF1A000
	377 Move X0, [X0+1864]
	378 Call 0x1C17D08
	379 Move X1, X0
	380 Move X0, X19
	381 Call 0x1C17DEC

