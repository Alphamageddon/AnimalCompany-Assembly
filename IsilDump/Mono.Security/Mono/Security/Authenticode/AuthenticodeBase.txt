Type: Mono.Security.Authenticode.AuthenticodeBase

Method: System.Void .ctor()

Disassembly:
	0x03204558 STRB W8, [X19 + 0x23E]
	0x0320455C STR X21, [X31 + 0x18]
	0x03204560 CBZ X20, 0x32046E0
	0x03204564 LDR X8, [X20 + 0x38]
	0x03204568 CBZ X8, 0x32046E0
	0x0320456C ADRP X28, 0xF1C000
	0x03204570 ADRP X29, 0xF1D000
	0x03204574 ADRP X21, 0xF1D000
	0x03204578 ADRP X19, 0xF1D000
	0x0320457C ADRP X22, 0xF1D000
	0x03204580 LDR X28, [X28 + 0xB98]
	0x03204584 LDR X29, [X29 + 0x6C0]
	0x03204588 LDR X21, [X21 + 0x6B0]
	0x0320458C LDR X19, [X19 + 0x6B8]
	0x03204590 LDR X22, [X22 + 0x6D0]
	0x03204594 MOV W23, W31
	0x03204598 MOV X24, X31
	0x0320459C MOV X25, X31
	0x032045A0 LDR X0, [X8 + 0x20]
	0x032045A4 CBZ X0, 0x32046E0
	0x032045A8 LDR X8, [X0]
	0x032045AC LDR X9, [X8 + 0x298]
	0x032045B0 LDR X1, [X8 + 0x2A0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x11D9000
	006 Move X20, 0xEF0000
	007 Move W8, [X21+567]
	008 Move X20, [X20+1560]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xEF0000
	015 Move X0, [X0+1560]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+567], W8
	019 Move X0, X19
	020 Move X1, X31
	021 Call Object..ctor, X0
	022 Move X0, [X20]
	023 Move W1, 4096
	024 Call 0x1C17D6C
	025 Move [X19+16], X0
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Return 

Method: System.Int32 get_PEOffset()

Disassembly:
	0x032045B4 BLR X9
	0x032045B8 CMP W23, W0
	0x032045BC B.GE 0x32046E4
	0x032045C0 LDR X8, [X20 + 0x38]
	0x032045C4 CBZ X8, 0x32046E0
	0x032045C8 LDR X0, [X8 + 0x20]
	0x032045CC CBZ X0, 0x32046E0
	0x032045D0 LDR X8, [X0]
	0x032045D4 MOV W1, W23
	0x032045D8 LDR X9, [X8 + 0x2E8]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W8, [X0+32]
	004 Move X19, X0
	005 NotImplemented "Instruction CMP not yet implemented."
	006 Move X0, X19
	007 Call AuthenticodeBase.ReadFirstBlock, X0
	008 Move W0, [X19+40]
	009 Move X30, [X31+16]
	010 Move X19, [X31+24]
	011 Return X0

Method: System.Void Open(System.String filename)

Disassembly:
	0x032046AC B 0x32046D4
	0x032046B0 LDR X1, [X19]
	0x032046B4 MOV X0, X27
	0x032046B8 MOV X2, X31
	0x032046BC BL 0x321BA08
	0x032046C0 TBNZ X0, 0x0, 0x32046D4
	0x032046C4 LDR X1, [X22]
	0x032046C8 MOV X0, X27
	0x032046CC MOV X2, X31
	0x032046D0 BL 0x321BA08
	0x032046D4 LDR X8, [X20 + 0x38]
	0x032046D8 ADD W23, W23, 0x1
	0x032046DC CBNZ X8, 0x32045A0
	0x032046E0 BL 0x1C16F20
	0x032046E4 ADRP X8, 0xF1D000
	0x032046E8 LDR X8, [X8 + 0x6A0]
	0x032046EC MOV X0, X25
	0x032046F0 MOV X2, X31
	0x032046F4 LDR X1, [X8]
	0x032046F8 BL 0x3226EF8
	0x032046FC MOV W8, W31
	0x03204700 CBZ X24, 0x3204CA4
	0x03204704 TBNZ X0, 0x0, 0x3204CA4
	0x03204708 LDR X1, [X31 + 0x10]
	0x0320470C MOV X0, X24
	0x03204710 MOV X2, X31
	0x03204714 BL 0x31E7EC0
	0x03204718 TBZ X0, 0x0, 0x32048B0
	0x0320471C LDR X0, [X31 + 0x8]
	0x03204720 CBZ X0, 0x32046E0
	0x03204724 LDR X8, [X0]
	0x03204728 LDP X9, X1, [X8 + 0x168]
	0x0320472C BLR X9
	0x03204730 ADRP X8, 0xF1C000
	0x03204734 LDR X8, [X8 + 0xBD8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x11D9000
	006 Move W8, [X21+568]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xF1E000
	014 Move X0, [X0+1648]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+568], W8
	018 Move X21, 0xF1E000
	019 Move X0, [X19+24]
	020 Move X21, [X21+1648]
	021 Compare X0, 0
	022 JumpIfEqual {28}
	023 Move X8, [X0]
	024 Move X9, [X8+632]
	025 Move X1, [X8+640]
	026 NotImplemented "Instruction BLR not yet implemented."
	027 Move [X19+24], X31
	028 Move X0, [X21]
	029 Call 0x1C17F10
	030 Move W2, 3
	031 Move W3, 1
	032 Move W4, 1
	033 Move X1, X20
	034 Move X5, X31
	035 Move X21, X0
	036 Call FileStream..ctor, X0, X1, X2, X3, X4
	037 Move [X19+24], X21
	038 Move [X19+32], W31
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move X30, [X31+32]
	042 Move X21, [X31+40]
	043 Return 

Method: System.Void Open(System.Byte[] rawdata)

Disassembly:
	0x03204764 MOV X0, X8
	0x03204768 BL 0x1C16F10
	0x0320476C MOVZ W1, 0x31
	0x03204770 MOV X2, X31
	0x03204774 MOV X23, X0
	0x03204778 BL 0x31E79E8
	0x0320477C LDR X8, [X20 + 0x38]
	0x03204780 CBZ X8, 0x32046E0
	0x03204784 LDR X0, [X8 + 0x20]
	0x03204788 CBZ X0, 0x32046E0
	0x0320478C LDR X8, [X0]
	0x03204790 LDR X9, [X8 + 0x388]
	0x03204794 LDR X1, [X8 + 0x390]
	0x03204798 BLR X9
	0x0320479C MOV X25, X0
	0x032047A0 CBZ X0, 0x3204CF8
	0x032047A4 ADRP X19, 0xEEF000
	0x032047A8 LDR X19, [X19 + 0xE18]
	0x032047AC LDR X8, [X25]
	0x032047B0 LDR X1, [X19]
	0x032047B4 LDRH W9, [X8 + 0x12E]
	0x032047B8 CBZ X9, 0x32047DC
	0x032047BC LDR X10, [X8 + 0xB0]
	0x032047C0 ADD X10, X10, 0x8
	0x032047C4 LDUR X11, [X10 - 0x8]
	0x032047C8 CMP X11, X1
	0x032047CC B.EQ 0x32047EC
	0x032047D0 SUBS X9, X9, 0x1
	0x032047D4 ADD X10, X10, 0x10
	0x032047D8 B.NE 0x32047C4
	0x032047DC MOV X0, X25
	0x032047E0 MOV W2, W31
	0x032047E4 BL 0x1C5C788

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x11D9000
	006 Move W8, [X21+569]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xEF8000
	014 Move X0, [X0+1368]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+569], W8
	018 Move X21, 0xEF8000
	019 Move X0, [X19+24]
	020 Move X21, [X21+1368]
	021 Compare X0, 0
	022 JumpIfEqual {28}
	023 Move X8, [X0]
	024 Move X9, [X8+632]
	025 Move X1, [X8+640]
	026 NotImplemented "Instruction BLR not yet implemented."
	027 Move [X19+24], X31
	028 Move X0, [X21]
	029 Call 0x1C17F10
	030 Move X1, X20
	031 Move W2, W31
	032 Move X3, X31
	033 Move X21, X0
	034 Call MemoryStream..ctor, X0, X1, X2
	035 Move [X19+24], X21
	036 Move [X19+32], W31
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X30, [X31+32]
	040 Move X21, [X31+40]
	041 Return 

Method: System.Void Close()

Disassembly:
	0x03204738 MOV X22, X0
	0x0320473C LDR X8, [X8]
	0x03204740 LDR W9, [X8 + 0xE0]
	0x03204744 CBNZ W9, 0x3204750
	0x03204748 MOV X0, X8
	0x0320474C BL 0x1C16DFC
	0x03204750 MOV X0, X22
	0x03204754 MOV X1, X31
	0x03204758 BL 0x3264820
	0x0320475C LDR X8, [X28]
	0x03204760 MOV X22, X0

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+24]
	005 Compare X0, 0
	006 JumpIfEqual {12}
	007 Move X8, [X0]
	008 Move X9, [X8+632]
	009 Move X1, [X8+640]
	010 NotImplemented "Instruction BLR not yet implemented."
	011 Move [X19+24], X31
	012 Move X30, [X31+16]
	013 Move X19, [X31+24]
	014 Return 

Method: System.Void ReadFirstBlock()

Disassembly:
	0x032045DC LDR X2, [X8 + 0x2F0]
	0x032045E0 BLR X9
	0x032045E4 CBZ X0, 0x32046E0
	0x032045E8 LDR X8, [X0]
	0x032045EC LDR X1, [X28]
	0x032045F0 MOV X26, X0
	0x032045F4 LDRB W10, [X8 + 0x130]
	0x032045F8 LDRB W9, [X1 + 0x130]
	0x032045FC CMP W10, W9
	0x03204600 B.CC 0x3204CC8
	0x03204604 LDR X8, [X8 + 0xC8]
	0x03204608 ADD X8, X8, X9, 0x3, LSL
	0x0320460C LDUR X8, [X8 - 0x8]
	0x03204610 CMP X8, X1
	0x03204614 B.NE 0x3204CC8
	0x03204618 MOV X0, X26
	0x0320461C MOV W1, W31
	0x03204620 MOV X2, X31
	0x03204624 BL 0x31E8704
	0x03204628 MOV X1, X31
	0x0320462C BL 0x31E909C
	0x03204630 LDR X1, [X29]
	0x03204634 MOV X2, X31
	0x03204638 MOV X27, X0
	0x0320463C BL 0x321BA08
	0x03204640 TBZ X0, 0x0, 0x3204674
	0x03204644 MOVZ W1, 0x1
	0x03204648 MOV X0, X26
	0x0320464C MOV X2, X31
	0x03204650 BL 0x31E8704
	0x03204654 CBZ X0, 0x32046E0
	0x03204658 MOV W1, W31
	0x0320465C MOV X2, X31
	0x03204660 BL 0x31E8704
	0x03204664 MOV X1, X31
	0x03204668 BL 0x31E909C
	0x0320466C MOV X25, X0
	0x03204670 B 0x32046D4
	0x03204674 LDR X1, [X21]
	0x03204678 MOV X0, X27
	0x0320467C MOV X2, X31
	0x03204680 BL 0x321BA08
	0x03204684 TBZ X0, 0x0, 0x32046B0
	0x03204688 MOVZ W1, 0x1
	0x0320468C MOV X0, X26
	0x03204690 MOV X2, X31
	0x03204694 BL 0x31E8704
	0x03204698 CBZ X0, 0x32046E0
	0x0320469C MOV W1, W31
	0x032046A0 MOV X2, X31
	0x032046A4 BL 0x31E8704
	0x032046A8 MOV X24, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Call AuthenticodeBase.ProcessFirstBlock, X0
	005 Compare W0, 0
	006 JumpIfNotEqual {11}
	007 Move X20, [X31+16]
	008 Move X19, [X31+24]
	009 Move X30, [X31+32]
	010 Return 
	011 Move X8, 0xEF0000
	012 Move X8, [X8+2512]
	013 Move W20, W0
	014 Move X0, X8
	015 Call 0x1C17D08
	016 Move W1, 1
	017 Call 0x1C17D6C
	018 Move X19, X0
	019 Move [X31+12], W20
	020 Move X0, 0xEF0000
	021 Move X0, [X0+1880]
	022 Call 0x1C17D08
	023 Add X1, X31, 12
	024 Call 0x1C17E04
	025 Move X20, X0
	026 Move X0, X19
	027 Call 0x19913C0
	028 Move X0, X19
	029 Move X1, X20
	030 Call 0x19990B4
	031 Move X0, X19
	032 Move X1, X31
	033 Move X2, X20
	034 Call 0x1994444
	035 Move X0, 0xF1E000
	036 Move X0, [X0+1632]
	037 Call 0x1C17D08
	038 Move X1, X19
	039 Move X2, X31
	040 Call Locale.GetText, X0, X1
	041 Move X19, X0
	042 Move X0, 0xEF0000
	043 Move X0, [X0+2880]
	044 Call 0x1C17D08
	045 Call 0x1C17F10
	046 Move X1, X19
	047 Move X2, X31
	048 Move X20, X0
	049 Call NotSupportedException..ctor, X0, X1
	050 Move X0, 0xF1E000
	051 Move X0, [X0+1640]
	052 Call 0x1C17D08
	053 Move X1, X0
	054 Move X0, X20
	055 Call 0x1C17DEC

Method: System.Int32 ProcessFirstBlock()

Disassembly:
	0x032047E8 B 0x32047F8
	0x032047EC LDRSW X9, [X10]
	0x032047F0 ADD X8, X8, X9, 0x4, LSL
	0x032047F4 ADD X0, X8, 0x138
	0x032047F8 LDP X8, X1, [X0]
	0x032047FC MOV X0, X25
	0x03204800 BLR X8
	0x03204804 TBZ X0, 0x0, 0x32048B8
	0x03204808 LDR X8, [X25]
	0x0320480C LDR X1, [X19]
	0x03204810 LDRH W9, [X8 + 0x12E]
	0x03204814 CBZ X9, 0x3204838
	0x03204818 LDR X10, [X8 + 0xB0]
	0x0320481C ADD X10, X10, 0x8
	0x03204820 LDUR X11, [X10 - 0x8]
	0x03204824 CMP X11, X1
	0x03204828 B.EQ 0x3204848
	0x0320482C SUBS X9, X9, 0x1
	0x03204830 ADD X10, X10, 0x10
	0x03204834 B.NE 0x3204820
	0x03204838 MOVZ W2, 0x1
	0x0320483C MOV X0, X25
	0x03204840 BL 0x1C5C788
	0x03204844 B 0x3204858
	0x03204848 LDR W9, [X10]
	0x0320484C ADD W9, W9, 0x1
	0x03204850 ADD X8, X8, W9, 0x4, SXTW
	0x03204854 ADD X0, X8, 0x138
	0x03204858 LDP X8, X1, [X0]
	0x0320485C MOV X0, X25
	0x03204860 BLR X8
	0x03204864 MOV X8, X0
	0x03204868 CBZ X0, 0x3204898
	0x0320486C LDR X9, [X8]
	0x03204870 LDR X1, [X28]
	0x03204874 LDRB W11, [X9 + 0x130]
	0x03204878 LDRB W10, [X1 + 0x130]
	0x0320487C CMP W11, W10
	0x03204880 B.CC 0x3204CD0
	0x03204884 LDR X9, [X9 + 0xC8]
	0x03204888 ADD X9, X9, X10, 0x3, LSL
	0x0320488C LDUR X9, [X9 - 0x8]
	0x03204890 CMP X9, X1
	0x03204894 B.NE 0x3204CD0
	0x03204898 CBZ X23, 0x3204CD8
	0x0320489C MOV X0, X23
	0x032048A0 MOV X1, X8
	0x032048A4 MOV X2, X31
	0x032048A8 BL 0x31E7ED0
	0x032048AC B 0x32047AC
	0x032048B0 MOV W8, W31
	0x032048B4 B 0x3204CA4
	0x032048B8 MOV X26, X31
	0x032048BC MOVZ W19, 0xC
	0x032048C0 ADRP X29, 0xEEF000
	0x032048C4 LDR X29, [X29 + 0xE00]
	0x032048C8 MOV X0, X25
	0x032048CC LDR X1, [X29]
	0x032048D0 BL 0x1C16E00
	0x032048D4 CBZ X0, 0x3204934
	0x032048D8 LDR X8, [X0]
	0x032048DC LDR X1, [X29]
	0x032048E0 MOV X24, X0
	0x032048E4 LDRH W9, [X8 + 0x12E]
	0x032048E8 CBZ X9, 0x320490C
	0x032048EC LDR X10, [X8 + 0xB0]
	0x032048F0 ADD X10, X10, 0x8
	0x032048F4 LDUR X11, [X10 - 0x8]
	0x032048F8 CMP X11, X1
	0x032048FC B.EQ 0x320491C
	0x03204900 SUBS X9, X9, 0x1
	0x03204904 ADD X10, X10, 0x10
	0x03204908 B.NE 0x32048F4
	0x0320490C MOV X0, X24
	0x03204910 MOV W2, W31
	0x03204914 BL 0x1C5C788
	0x03204918 B 0x3204928
	0x0320491C LDRSW X9, [X10]
	0x03204920 ADD X8, X8, X9, 0x4, LSL
	0x03204924 ADD X0, X8, 0x138
	0x03204928 LDP X8, X1, [X0]
	0x0320492C MOV X0, X24
	0x03204930 BLR X8
	0x03204934 CBNZ X26, 0x3204CFC
	0x03204938 CMP W19, 0xC
	0x0320493C B.EQ 0x3204944
	0x03204940 CBNZ W19, 0x3204CA4
	0x03204944 LDR X19, [X31 + 0x8]
	0x03204948 LDR X8, [X19]
	0x0320494C MOV X0, X19
	0x03204950 LDR X9, [X8 + 0x258]
	0x03204954 LDR X1, [X8 + 0x260]
	0x03204958 BLR X9
	0x0320495C CBZ X23, 0x32046E0
	0x03204960 LDR X8, [X23]
	0x03204964 MOV X0, X23
	0x03204968 LDP X9, X1, [X8 + 0x178]
	0x0320496C BLR X9
	0x03204970 MOV X1, X0
	0x03204974 MOV X0, X19
	0x03204978 MOV X2, X31
	0x0320497C BL 0x32513F4
	0x03204980 LDR X8, [X20 + 0x38]
	0x03204984 CBZ X8, 0x32046E0
	0x03204988 MOV X24, X0
	0x0320498C MOV X0, X8
	0x03204990 MOV X1, X31
	0x03204994 BL 0x31EB068
	0x03204998 LDR X8, [X20 + 0x38]
	0x0320499C CBZ X8, 0x32046E0
	0x032049A0 LDR X25, [X8 + 0x38]
	0x032049A4 MOV X21, X0
	0x032049A8 MOV X0, X8
	0x032049AC MOV X1, X31
	0x032049B0 BL 0x31EAFDC
	0x032049B4 LDR X8, [X31 + 0x18]
	0x032049B8 LDR X8, [X8 + 0x58]
	0x032049BC CBZ X8, 0x32046E0
	0x032049C0 MOV X26, X0
	0x032049C4 MOV X0, X8
	0x032049C8 MOV X1, X31
	0x032049CC BL 0x31EDE74
	0x032049D0 MOV X23, X0
	0x032049D4 CBZ X0, 0x3204D04
	0x032049D8 ADRP X19, 0xF1D000
	0x032049DC LDR X19, [X19 + 0x1A0]
	0x032049E0 MOV X0, X23
	0x032049E4 MOV X1, X31
	0x032049E8 BL 0x31EE254
	0x032049EC TBZ X0, 0x0, 0x3204AC8
	0x032049F0 MOV X0, X23
	0x032049F4 MOV X1, X31
	0x032049F8 BL 0x31EDECC
	0x032049FC MOV X27, X0
	0x03204A00 MOV X1, X25
	0x03204A04 MOV X2, X26
	0x03204A08 MOV X3, X0
	0x03204A0C BL 0x3204EC4
	0x03204A10 TBZ X0, 0x0, 0x32049E0
	0x03204A14 CBZ X27, 0x3204CE8
	0x03204A18 LDR X8, [X27]
	0x03204A1C LDP X9, X1, [X8 + 0x1C8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move X0, [X0+24]
	006 Compare X0, 0
	007 JumpIfEqual {55}
	008 Move X8, [X0]
	009 Move X1, X31
	010 Move X9, [X8+520]
	011 Move X2, [X8+528]
	012 NotImplemented "Instruction BLR not yet implemented."
	013 Move X1, [X19+16]
	014 Compare X1, 0
	015 JumpIfEqual {106}
	016 Move X0, [X19+24]
	017 Compare X0, 0
	018 JumpIfEqual {106}
	019 Move X8, [X0]
	020 Move W3, [X1+24]
	021 Move W2, W31
	022 Move X9, [X8+856]
	023 Move X4, [X8+864]
	024 NotImplemented "Instruction BLR not yet implemented."
	025 Move W8, 1
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move [X19+32], W8
	028 Move [X19+36], W0
	029 Move X0, [X19+16]
	030 Move W1, W31
	031 Move X2, X31
	032 Call BitConverterLE.ToUInt16, X0, X1
	033 Move W8, 0x5A4D
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move X0, [X19+16]
	036 Move W1, 60
	037 Move X2, X31
	038 Call BitConverterLE.ToInt32, X0, X1
	039 Move X8, [X19+16]
	040 Move [X19+40], W0
	041 Compare X8, 0
	042 JumpIfEqual {106}
	043 Move W8, [X8+24]
	044 Move W20, W0
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move X0, [X19+24]
	047 Compare X0, 0
	048 JumpIfEqual {106}
	049 Move X8, [X0]
	050 Move X9, [X8+488]
	051 Move X1, [X8+496]
	052 NotImplemented "Instruction BLR not yet implemented."
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move W0, 4
	055 Move W0, 1
	056 Move W0, 2
	057 Move W0, 3
	058 Move X20, [X31+16]
	059 Move X19, [X31+24]
	060 Move X30, [X31+32]
	061 Return X0
	062 Move X0, [X19+16]
	063 Move W1, [X19+40]
	064 Move X2, X31
	065 Call BitConverterLE.ToUInt32, X0, X1
	066 Move W8, 0x4550
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Move W8, [X19+40]
	069 Move X0, [X19+16]
	070 Move X2, X31
	071 Add W1, W8, 24
	072 Call BitConverterLE.ToUInt16, X0, X1
	073 Move W9, [X19+40]
	074 And W8, W0, 0xFFFF
	075 Move X0, [X19+16]
	076 Move W10, 152
	077 Move W11, 168
	078 NotImplemented "Instruction CMP not yet implemented."
	079 NotImplemented "Instruction CSEL not yet implemented."
	080 Move W12, 156
	081 Move W13, 172
	082 NotImplemented "Instruction CSET not yet implemented."
	083 Add W1, W9, W10
	084 Move X2, X31
	085 Move [X19+56], W8
	086 NotImplemented "Instruction CSEL not yet implemented."
	087 Call BitConverterLE.ToInt32, X0, X1
	088 Move W9, [X19+40]
	089 Move X8, [X19+16]
	090 Move [X19+44], W0
	091 Move X2, X31
	092 Add W1, W9, W20
	093 Move X0, X8
	094 Call BitConverterLE.ToInt32, X0, X1
	095 Move W9, [X19+40]
	096 Move X8, [X19+16]
	097 Move [X19+48], W0
	098 Move X2, X31
	099 Add W1, W9, 12
	100 Move X0, X8
	101 Call BitConverterLE.ToInt32, X0, X1
	102 Move W8, W0
	103 Move W0, W31
	104 Move [X19+52], W8
	105 Move W0, 5
	106 Call 0x1C17F20
	107 Move X0, 0xF1E000
	108 Move X0, [X0+1656]
	109 Call 0x1C17D08
	110 Move X1, X31
	111 Call Locale.GetText, X0
	112 Move X19, [X19+16]
	113 Move X20, X0
	114 Move X0, X19
	115 Call 0x19913C0
	116 Move X8, [X19+24]
	117 Move X0, 0xEF0000
	118 Move [X31+12], W8
	119 Move X0, [X0+1880]
	120 Call 0x1C17D08
	121 Add X1, X31, 12
	122 Call 0x1C17E04
	123 Move X1, X0
	124 Move X0, X20
	125 Move X2, X31
	126 Call String.Format, X0, X1
	127 Move X19, X0
	128 Move X0, 0xEF0000
	129 Move X0, [X0+2880]
	130 Call 0x1C17D08
	131 Call 0x1C17F10
	132 Move X1, X19
	133 Move X2, X31
	134 Move X20, X0
	135 Call NotSupportedException..ctor, X0, X1
	136 Move X0, 0xF1E000
	137 Move X0, [X0+1664]
	138 Call 0x1C17D08
	139 Move X1, X0
	140 Move X0, X20
	141 Call 0x1C17DEC

Method: System.Byte[] GetSecurityEntry()

Disassembly:
	0x03204A20 MOV X0, X27
	0x03204A24 BLR X9
	0x03204A28 CBZ X0, 0x3204CEC
	0x03204A2C CBZ X21, 0x3204CE4
	0x03204A30 LDR W8, [X0 + 0x18]
	0x03204A34 LDR W9, [X21 + 0x18]
	0x03204A38 CMP W8, W9, ASR
	0x03204A3C B.LE 0x32049E0
	0x03204A40 LDR X8, [X31 + 0x18]
	0x03204A44 STR X27, [X8 + 0x70]
	0x03204A48 LDR X8, [X27]
	0x03204A4C LDP X9, X1, [X8 + 0x1D8]
	0x03204A50 MOV X0, X27
	0x03204A54 BLR X9
	0x03204A58 CBZ X0, 0x3204CF4
	0x03204A5C LDR X1, [X19]
	0x03204A60 LDR X8, [X0]
	0x03204A64 CMP X8, X1
	0x03204A68 B.NE 0x3204CF0
	0x03204A6C MOV X1, X24
	0x03204A70 MOV X2, X22
	0x03204A74 MOV X3, X21
	0x03204A78 MOV X4, X31
	0x03204A7C BL 0x325CC18
	0x03204A80 TBZ X0, 0x0, 0x32049E0
	0x03204A84 LDR X19, [X31 + 0x18]
	0x03204A88 LDR X0, [X19 + 0x88]
	0x03204A8C CBZ X0, 0x3204D10
	0x03204A90 LDR X1, [X19 + 0x58]
	0x03204A94 MOV X2, X31
	0x03204A98 BL 0x31F6A0C
	0x03204A9C LDR X0, [X19 + 0x88]
	0x03204AA0 CBZ X0, 0x3204D14
	0x03204AA4 MOV X1, X27
	0x03204AA8 MOV X2, X31
	0x03204AAC BL 0x31F6A24
	0x03204AB0 LDR X9, [X31 + 0x18]
	0x03204AB4 AND W8, W0, 0x1
	0x03204AB8 MOV X22, X31
	0x03204ABC MOVZ W19, 0xF
	0x03204AC0 STRB W8, [X9 + 0x7C]
	0x03204AC4 B 0x3204AD0
	0x03204AC8 MOV X22, X31
	0x03204ACC MOVZ W19, 0xF
	0x03204AD0 LDR X1, [X29]
	0x03204AD4 MOV X0, X23
	0x03204AD8 BL 0x1C16E00
	0x03204ADC CBZ X0, 0x3204B3C
	0x03204AE0 LDR X8, [X0]
	0x03204AE4 LDR X1, [X29]
	0x03204AE8 MOV X23, X0
	0x03204AEC LDRH W9, [X8 + 0x12E]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x11D9000
	005 Move W8, [X20+570]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xEF0000
	012 Move X0, [X0+1560]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+570], W8
	016 Move W8, [X19+32]
	017 NotImplemented "Instruction CMP not yet implemented."
	018 Move X0, X19
	019 Call AuthenticodeBase.ReadFirstBlock, X0
	020 Move W8, [X19+48]
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move X9, 0xEF0000
	023 Move X9, [X9+1560]
	024 Subtract W1, W8, 8
	025 Move X0, [X9]
	026 Call 0x1C17D6C
	027 Move X8, [X19+24]
	028 Compare X8, 0
	029 JumpIfEqual {57}
	030 Move X9, [X8]
	031 Move W10, [X19+44]
	032 Move X20, X0
	033 Move X0, X8
	034 Move X11, [X9+520]
	035 Move X2, [X9+528]
	036 Add W9, W10, 8
	037 Move X1, W9
	038 NotImplemented "Instruction BLR not yet implemented."
	039 Compare X20, 0
	040 JumpIfEqual {57}
	041 Move X0, [X19+24]
	042 Compare X0, 0
	043 JumpIfEqual {57}
	044 Move X8, [X0]
	045 Move W3, [X20+24]
	046 Move X1, X20
	047 Move W2, W31
	048 Move X9, [X8+856]
	049 Move X4, [X8+864]
	050 NotImplemented "Instruction BLR not yet implemented."
	051 Move X20, X31
	052 Move X0, X20
	053 Move X20, [X31+16]
	054 Move X19, [X31+24]
	055 Move X30, [X31+32]
	056 Return X0
	057 Call 0x1C17F20

Method: System.Byte[] GetHash(System.Security.Cryptography.HashAlgorithm hash)

Disassembly:
	0x03204AF0 CBZ X9, 0x3204B14
	0x03204AF4 LDR X10, [X8 + 0xB0]
	0x03204AF8 ADD X10, X10, 0x8
	0x03204AFC LDUR X11, [X10 - 0x8]
	0x03204B00 CMP X11, X1
	0x03204B04 B.EQ 0x3204B24
	0x03204B08 SUBS X9, X9, 0x1
	0x03204B0C ADD X10, X10, 0x10
	0x03204B10 B.NE 0x3204AFC
	0x03204B14 MOV X0, X23
	0x03204B18 MOV W2, W31
	0x03204B1C BL 0x1C5C788
	0x03204B20 B 0x3204B30
	0x03204B24 LDRSW X9, [X10]
	0x03204B28 ADD X8, X8, X9, 0x4, LSL
	0x03204B2C ADD X0, X8, 0x138
	0x03204B30 LDP X8, X1, [X0]
	0x03204B34 MOV X0, X23
	0x03204B38 BLR X8
	0x03204B3C CBNZ X22, 0x3204D08
	0x03204B40 CMP W19, 0xF
	0x03204B44 B.EQ 0x3204B4C
	0x03204B48 CBNZ W19, 0x3204CA4
	0x03204B4C LDR X8, [X20 + 0x38]
	0x03204B50 CBZ X8, 0x32046E0
	0x03204B54 LDR X0, [X8 + 0x28]
	0x03204B58 LDR X26, [X31 + 0x18]
	0x03204B5C CBZ X0, 0x32046E0
	0x03204B60 LDR X8, [X0]
	0x03204B64 LDR X9, [X8 + 0x298]
	0x03204B68 LDR X1, [X8 + 0x2A0]
	0x03204B6C BLR X9
	0x03204B70 CBZ W0, 0x3204C88
	0x03204B74 LDR X8, [X20 + 0x38]
	0x03204B78 CBZ X8, 0x32046E0
	0x03204B7C ADRP X19, 0xF1D000
	0x03204B80 ADRP X25, 0xF1C000
	0x03204B84 LDR X19, [X19 + 0x6C8]
	0x03204B88 LDR X25, [X25 + 0xCB0]
	0x03204B8C MOV W22, W31
	0x03204B90 LDR X0, [X8 + 0x28]
	0x03204B94 CBZ X0, 0x32046E0
	0x03204B98 LDR X8, [X0]
	0x03204B9C LDR X9, [X8 + 0x298]
	0x03204BA0 LDR X1, [X8 + 0x2A0]
	0x03204BA4 BLR X9
	0x03204BA8 CMP W22, W0
	0x03204BAC B.GE 0x3204C90
	0x03204BB0 LDR X8, [X20 + 0x38]
	0x03204BB4 CBZ X8, 0x32046E0
	0x03204BB8 LDR X0, [X8 + 0x28]
	0x03204BBC CBZ X0, 0x32046E0
	0x03204BC0 LDR X8, [X0]
	0x03204BC4 MOV W1, W22
	0x03204BC8 LDR X9, [X8 + 0x2E8]
	0x03204BCC LDR X2, [X8 + 0x2F0]
	0x03204BD0 BLR X9
	0x03204BD4 CBZ X0, 0x32046E0
	0x03204BD8 LDR X8, [X0]
	0x03204BDC LDR X1, [X28]
	0x03204BE0 MOV X23, X0
	0x03204BE4 LDRB W10, [X8 + 0x130]
	0x03204BE8 LDRB W9, [X1 + 0x130]
	0x03204BEC CMP W10, W9
	0x03204BF0 B.CC 0x3204CDC
	0x03204BF4 LDR X8, [X8 + 0xC8]
	0x03204BF8 ADD X8, X8, X9, 0x3, LSL
	0x03204BFC LDUR X8, [X8 - 0x8]
	0x03204C00 CMP X8, X1
	0x03204C04 B.NE 0x3204CDC
	0x03204C08 MOV X0, X23
	0x03204C0C MOV W1, W31
	0x03204C10 MOV X2, X31
	0x03204C14 BL 0x31E8704
	0x03204C18 MOV X1, X31
	0x03204C1C BL 0x31E909C
	0x03204C20 LDR X1, [X19]
	0x03204C24 MOV X2, X31
	0x03204C28 BL 0x321BA08
	0x03204C2C TBZ X0, 0x0, 0x3204C78
	0x03204C30 MOVZ W1, 0x1
	0x03204C34 MOV X0, X23
	0x03204C38 MOV X2, X31
	0x03204C3C BL 0x31E8704
	0x03204C40 LDR X8, [X25]
	0x03204C44 MOV X23, X0
	0x03204C48 MOV X0, X8
	0x03204C4C BL 0x1C16F10
	0x03204C50 MOV X1, X23
	0x03204C54 MOV X2, X31
	0x03204C58 MOV X24, X0
	0x03204C5C BL 0x31EA8B8
	0x03204C60 MOV X0, X26
	0x03204C64 MOV X1, X24
	0x03204C68 MOV X2, X21
	0x03204C6C BL 0x3204FC0
	0x03204C70 AND W8, W0, 0x1
	0x03204C74 STRB W8, [X26 + 0x7D]
	0x03204C78 LDR X8, [X20 + 0x38]
	0x03204C7C ADD W22, W22, 0x1
	0x03204C80 CBNZ X8, 0x3204B90
	0x03204C84 B 0x32046E0
	0x03204C88 MOVZ W8, 0x1
	0x03204C8C STRB W8, [X26 + 0x7D]
	0x03204C90 LDRB W8, [X26 + 0x7C]
	0x03204C94 CBZ W8, 0x3204CA4
	0x03204C98 LDRB W8, [X26 + 0x7D]
	0x03204C9C CMP W8, 0x0
	0x03204CA0 CSET W8, NE
	0x03204CA4 LDP X20, X19, [X31 + 0x70]
	0x03204CA8 LDP X22, X21, [X31 + 0x60]
	0x03204CAC LDP X24, X23, [X31 + 0x50]
	0x03204CB0 LDP X26, X25, [X31 + 0x40]
	0x03204CB4 LDP X28, X27, [X31 + 0x30]
	0x03204CB8 LDP X29, X30, [X31 + 0x20]
	0x03204CBC AND W0, W8, 0x1
	0x03204CC0 ADD X31, X31, 0x80
	0x03204CC4 RET
	0x03204CC8 MOV X0, X26
	0x03204CCC BL 0x1C171E0
	0x03204CD0 MOV X0, X8
	0x03204CD4 BL 0x1C171E0
	0x03204CD8 BL 0x1C16F20
	0x03204CDC MOV X0, X23
	0x03204CE0 BL 0x1C171E0
	0x03204CE4 BL 0x1C16F20
	0x03204CE8 BL 0x1C16F20
	0x03204CEC BL 0x1C16F20
	0x03204CF0 BL 0x1C171E0
	0x03204CF4 BL 0x1C16F20
	0x03204CF8 BL 0x1C16F20
	0x03204CFC MOV X0, X26
	0x03204D00 BL 0x1C16F18
	0x03204D04 BL 0x1C16F20
	0x03204D08 MOV X0, X22
	0x03204D0C BL 0x1C16F18
	0x03204D10 BL 0x1C16F20
	0x03204D14 BL 0x1C16F20
	0x03204D18 B 0x3204D50
	0x03204D1C B 0x3204D50
	0x03204D20 B 0x3204D50
	0x03204D24 B 0x3204D50
	0x03204D28 B 0x3204E08
	0x03204D2C B 0x3204D50
	0x03204D30 B 0x3204D50
	0x03204D34 B 0x3204D50
	0x03204D38 B 0x3204D50
	0x03204D3C B 0x3204D50
	0x03204D40 B 0x3204D50
	0x03204D44 B 0x3204D50
	0x03204D48 B 0x3204D50
	0x03204D4C B 0x3204D50
	0x03204D50 MOV X24, X0
	0x03204D54 CMP W1, 0x1
	0x03204D58 B.NE 0x3204D74
	0x03204D5C MOV X0, X24
	0x03204D60 BL 0x3EB1AD0
	0x03204D64 LDR X22, [X0]
	0x03204D68 BL 0x3EB1AE0
	0x03204D6C MOV W19, W31
	0x03204D70 B 0x3204AD0
	0x03204D74 MOV X22, X31
	0x03204D78 B 0x3204D80
	0x03204D7C MOV X24, X0
	0x03204D80 LDR X1, [X29]
	0x03204D84 MOV X0, X23
	0x03204D88 BL 0x1C16E00
	0x03204D8C MOV X19, X0
	0x03204D90 CBZ X0, 0x3204DEC
	0x03204D94 LDR X8, [X19]
	0x03204D98 LDR X1, [X29]
	0x03204D9C LDRH W9, [X8 + 0x12E]
	0x03204DA0 CBZ X9, 0x3204DC4
	0x03204DA4 LDR X10, [X8 + 0xB0]
	0x03204DA8 ADD X10, X10, 0x8
	0x03204DAC LDUR X11, [X10 - 0x8]
	0x03204DB0 CMP X11, X1
	0x03204DB4 B.EQ 0x3204DD4
	0x03204DB8 SUBS X9, X9, 0x1
	0x03204DBC ADD X10, X10, 0x10
	0x03204DC0 B.NE 0x3204DAC
	0x03204DC4 MOV X0, X19
	0x03204DC8 MOV W2, W31
	0x03204DCC BL 0x1C5C788
	0x03204DD0 B 0x3204DE0
	0x03204DD4 LDRSW X9, [X10]
	0x03204DD8 ADD X8, X8, X9, 0x4, LSL
	0x03204DDC ADD X0, X8, 0x138
	0x03204DE0 LDP X8, X1, [X0]
	0x03204DE4 MOV X0, X19
	0x03204DE8 BLR X8
	0x03204DEC CBZ X22, 0x3204EB0
	0x03204DF0 MOV X0, X22
	0x03204DF4 BL 0x1C16F18
	0x03204DF8 B 0x3204E08
	0x03204DFC B 0x3204E08
	0x03204E00 B 0x3204E08
	0x03204E04 B 0x3204E08
	0x03204E08 MOV X24, X0
	0x03204E0C CMP W1, 0x1
	0x03204E10 B.NE 0x3204E2C
	0x03204E14 MOV X0, X24
	0x03204E18 BL 0x3EB1AD0
	0x03204E1C LDR X26, [X0]
	0x03204E20 BL 0x3EB1AE0
	0x03204E24 MOV W19, W31
	0x03204E28 B 0x32048C0
	0x03204E2C MOV X26, X31
	0x03204E30 B 0x3204E38
	0x03204E34 MOV X24, X0
	0x03204E38 ADRP X20, 0xEEF000
	0x03204E3C LDR X20, [X20 + 0xE00]
	0x03204E40 LDR X1, [X20]
	0x03204E44 MOV X0, X25
	0x03204E48 BL 0x1C16E00
	0x03204E4C MOV X19, X0
	0x03204E50 CBZ X0, 0x3204EAC
	0x03204E54 LDR X8, [X19]
	0x03204E58 LDR X1, [X20]
	0x03204E5C LDRH W9, [X8 + 0x12E]
	0x03204E60 CBZ X9, 0x3204E84
	0x03204E64 LDR X10, [X8 + 0xB0]
	0x03204E68 ADD X10, X10, 0x8
	0x03204E6C LDUR X11, [X10 - 0x8]
	0x03204E70 CMP X11, X1
	0x03204E74 B.EQ 0x3204E94
	0x03204E78 SUBS X9, X9, 0x1
	0x03204E7C ADD X10, X10, 0x10
	0x03204E80 B.NE 0x3204E6C
	0x03204E84 MOV X0, X19
	0x03204E88 MOV W2, W31
	0x03204E8C BL 0x1C5C788
	0x03204E90 B 0x3204EA0
	0x03204E94 LDRSW X9, [X10]
	0x03204E98 ADD X8, X8, X9, 0x4, LSL
	0x03204E9C ADD X0, X8, 0x138
	0x03204EA0 LDP X8, X1, [X0]
	0x03204EA4 MOV X0, X19
	0x03204EA8 BLR X8
	0x03204EAC CBNZ X26, 0x3204EB8
	0x03204EB0 MOV X0, X24
	0x03204EB4 BL 0x1D2C690
	0x03204EB8 MOV X0, X26
	0x03204EBC BL 0x1C16F18
	0x03204EC0 BL 0x1990590
	0x03204EC4 STP X30, X23, [X31 - 0x30]!
	0x03204EC8 STP X22, X21, [X31 + 0x10]
	0x03204ECC STP X20, X19, [X31 + 0x20]
	0x03204ED0 CBZ X3, 0x3204FB8
	0x03204ED4 LDR X8, [X3]
	0x03204ED8 MOV X21, X1
	0x03204EDC MOV X0, X3
	0x03204EE0 MOV X19, X3
	0x03204EE4 LDP X9, X1, [X8 + 0x188]
	0x03204EE8 MOV X20, X2
	0x03204EEC BLR X9
	0x03204EF0 MOV X1, X0
	0x03204EF4 MOV X0, X21
	0x03204EF8 MOV X2, X31
	0x03204EFC BL 0x3226EF8
	0x03204F00 TBNZ X0, 0x0, 0x3204F9C
	0x03204F04 CBZ X20, 0x3204FB8
	0x03204F08 LDR X8, [X19]
	0x03204F0C MOV X0, X19
	0x03204F10 LDR X9, [X8 + 0x208]
	0x03204F14 LDR X1, [X8 + 0x210]
	0x03204F18 BLR X9
	0x03204F1C CBZ X0, 0x3204FB8
	0x03204F20 LDR W8, [X20 + 0x18]
	0x03204F24 LDR W9, [X0 + 0x18]
	0x03204F28 CMP W8, W9
	0x03204F2C B.NE 0x3204F9C
	0x03204F30 SUBS W21, W8, 0x1
	0x03204F34 B.LT 0x3204FB0
	0x03204F38 MOV W22, W31
	0x03204F3C CMP W22, W8
	0x03204F40 B.CS 0x3204FBC
	0x03204F44 LDR X8, [X19]
	0x03204F48 ADD X9, X20, W22, SXTW
	0x03204F4C LDRB W23, [X9 + 0x20]
	0x03204F50 MOV X0, X19
	0x03204F54 LDR X9, [X8 + 0x208]
	0x03204F58 LDR X1, [X8 + 0x210]
	0x03204F5C BLR X9
	0x03204F60 CBZ X0, 0x3204FB8
	0x03204F64 LDR W8, [X0 + 0x18]
	0x03204F68 CMP W21, W8
	0x03204F6C B.CS 0x3204FBC
	0x03204F70 ADD X8, X0, W21, SXTW
	0x03204F74 LDRB W8, [X8 + 0x20]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x11D9000
	009 Move W8, [X21+571]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xEF0000
	017 Move X0, [X0+1560]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+571], W8
	021 Move W8, [X20+32]
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move X0, X20
	024 Call AuthenticodeBase.ReadFirstBlock, X0
	025 Move X0, [X20+24]
	026 Compare X0, 0
	027 JumpIfEqual {298}
	028 Move X8, [X0]
	029 NotImplemented "Instruction LDRSW not yet implemented."
	030 Move X9, [X8+520]
	031 Move X2, [X8+528]
	032 NotImplemented "Instruction BLR not yet implemented."
	033 Move W8, [X20+44]
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move W8, [X20+52]
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move W8, [X20+32]
	038 Move X21, [X20+16]
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move X0, X20
	041 Call AuthenticodeBase.ReadFirstBlock, X0
	042 Compare X21, 0
	043 JumpIfEqual {298}
	044 Move W8, [X20+40]
	045 Move W9, [X21+24]
	046 Add W8, W8, 12
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Add X8, X21, W8
	049 Move [X8+32], W31
	050 Move W8, [X20+32]
	051 Move X21, [X20+16]
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move X0, X20
	054 Call AuthenticodeBase.ReadFirstBlock, X0
	055 Compare X21, 0
	056 JumpIfEqual {298}
	057 Move W8, [X20+40]
	058 Move W9, [X21+24]
	059 Add W8, W8, 13
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Add X8, X21, W8
	062 Move [X8+32], W31
	063 Move W8, [X20+32]
	064 Move X21, [X20+16]
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Move X0, X20
	067 Call AuthenticodeBase.ReadFirstBlock, X0
	068 Compare X21, 0
	069 JumpIfEqual {298}
	070 Move W8, [X20+40]
	071 Move W9, [X21+24]
	072 Add W8, W8, 14
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Add X8, X21, W8
	075 Move [X8+32], W31
	076 Move W8, [X20+32]
	077 Move X21, [X20+16]
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Move X0, X20
	080 Call AuthenticodeBase.ReadFirstBlock, X0
	081 Compare X21, 0
	082 JumpIfEqual {298}
	083 Move W8, [X20+40]
	084 Move W9, [X21+24]
	085 Add W8, W8, 15
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Add X8, X21, W8
	088 Move [X8+32], W31
	089 Move W8, [X20+32]
	090 Move X21, [X20+16]
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Move X0, X20
	093 Call AuthenticodeBase.ReadFirstBlock, X0
	094 Compare X21, 0
	095 JumpIfEqual {298}
	096 Move W8, [X20+40]
	097 Move W9, [X21+24]
	098 Add W8, W8, 16
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Add X8, X21, W8
	101 Move [X8+32], W31
	102 Move W8, [X20+32]
	103 Move X21, [X20+16]
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Move X0, X20
	106 Call AuthenticodeBase.ReadFirstBlock, X0
	107 Compare X21, 0
	108 JumpIfEqual {298}
	109 Move W8, [X20+40]
	110 Move W9, [X21+24]
	111 Add W8, W8, 17
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Add X8, X21, W8
	114 Move [X8+32], W31
	115 Move W8, [X20+32]
	116 Move X21, [X20+16]
	117 NotImplemented "Instruction CMP not yet implemented."
	118 Move X0, X20
	119 Call AuthenticodeBase.ReadFirstBlock, X0
	120 Compare X21, 0
	121 JumpIfEqual {298}
	122 Move W8, [X20+40]
	123 Move W9, [X21+24]
	124 Add W8, W8, 18
	125 NotImplemented "Instruction CMP not yet implemented."
	126 Add X8, X21, W8
	127 Move [X8+32], W31
	128 Move W8, [X20+32]
	129 Move X21, [X20+16]
	130 NotImplemented "Instruction CMP not yet implemented."
	131 Move X0, X20
	132 Call AuthenticodeBase.ReadFirstBlock, X0
	133 Compare X21, 0
	134 JumpIfEqual {298}
	135 Move W8, [X20+40]
	136 Move W9, [X21+24]
	137 Add W8, W8, 19
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Add X8, X21, W8
	140 Move [X8+32], W31
	141 Move W8, [X20+52]
	142 Move W9, [X20+36]
	143 Move W21, W31
	144 Subtract W9, W8, W9
	145 Move X22, X31
	146 Move [X20+36], W8
	147 Compare X19, 0
	148 JumpIfNotEqual {175}
	149 Move X22, W9
	150 Compare X19, 0
	151 JumpIfNotEqual {175}
	152 Move X0, [X20+24]
	153 Compare X0, 0
	154 JumpIfEqual {298}
	155 Move X8, [X0]
	156 Move X9, [X8+488]
	157 Move X1, [X8+496]
	158 NotImplemented "Instruction BLR not yet implemented."
	159 Move X8, [X20+24]
	160 Compare X8, 0
	161 JumpIfEqual {298}
	162 Move X9, [X8]
	163 And W10, W0, 7
	164 Move X0, X8
	165 Move X11, [X9+488]
	166 Move X1, [X9+496]
	167 Move W9, 8
	168 Subtract W9, W9, W10
	169 NotImplemented "Instruction CSEL not yet implemented."
	170 NotImplemented "Instruction BLR not yet implemented."
	171 NotImplemented "Instruction LDRSW not yet implemented."
	172 Subtract X22, X0, X8
	173 Compare X19, 0
	174 JumpIfEqual {298}
	175 Move W23, [X20+40]
	176 Move X1, [X20+16]
	177 Move X0, X19
	178 Move W2, W31
	179 Add W3, W23, 88
	180 Move X4, X1
	181 Move W5, W31
	182 Move X6, X31
	183 Call HashAlgorithm.TransformBlock, X0, X1, X2, X3, X4, X5
	184 Move W8, [X20+56]
	185 Move X1, [X20+16]
	186 Add W2, W23, 92
	187 Move W9, 76
	188 Move W10, 60
	189 NotImplemented "Instruction CMP not yet implemented."
	190 Move W11, 176
	191 Move W12, 160
	192 NotImplemented "Instruction CSEL not yet implemented."
	193 Move X0, X19
	194 Move X4, X1
	195 Move W5, W2
	196 Move X6, X31
	197 NotImplemented "Instruction CSEL not yet implemented."
	198 Call HashAlgorithm.TransformBlock, X0, X1, X2, X3, X4, X5
	199 Move W8, [X20+36]
	200 Move X1, [X20+16]
	201 Add W2, W23, W24
	202 Move X0, X19
	203 Subtract W3, W8, W2
	204 Compare X22, 0
	205 JumpIfEqual {284}
	206 Move X4, X1
	207 Move W5, W2
	208 Move X6, X31
	209 Call HashAlgorithm.TransformBlock, X0, X1, X2, X3, X4, X5
	210 And W9, W22, 4095
	211 Move X1, [X20+16]
	212 Move X0, [X20+24]
	213 NotImplemented "Instruction SBFM not yet implemented."
	214 Move W10, 4096
	215 NotImplemented "Instruction CSET not yet implemented."
	216 NotImplemented "Instruction CSEL not yet implemented."
	217 Subtract X10, X8, X11
	218 NotImplemented "Instruction CSINV not yet implemented."
	219 NotImplemented "Instruction CMP not yet implemented."
	220 Add X8, X8, X9
	221 Add X23, X8, 1
	222 Compare X1, 0
	223 JumpIfEqual {298}
	224 Compare X0, 0
	225 JumpIfEqual {298}
	226 Move X8, [X0]
	227 Move W3, [X1+24]
	228 Move W2, W31
	229 Move X9, [X8+856]
	230 Move X4, [X8+864]
	231 NotImplemented "Instruction BLR not yet implemented."
	232 Move X1, [X20+16]
	233 Compare X1, 0
	234 JumpIfEqual {298}
	235 Move W3, [X1+24]
	236 Move X0, X19
	237 Move W2, W31
	238 Move X4, X1
	239 Move W5, W31
	240 Move X6, X31
	241 Call HashAlgorithm.TransformBlock, X0, X1, X2, X3, X4, X5
	242 Move X1, [X20+16]
	243 Move X0, [X20+24]
	244 Subtract X23, X23, 1
	245 NotImplemented "Instruction CMP not yet implemented."
	246 Compare X0, 0
	247 JumpIfEqual {298}
	248 Move X8, [X0]
	249 Move W2, W31
	250 Move W3, W22
	251 Move X9, [X8+856]
	252 Move X4, [X8+864]
	253 NotImplemented "Instruction BLR not yet implemented."
	254 NotImplemented "Instruction CMP not yet implemented."
	255 Move X1, [X20+16]
	256 Move X0, X19
	257 NotImplemented "Instruction CMP not yet implemented."
	258 Move W2, W31
	259 Move W3, W22
	260 Move X4, X1
	261 Move W5, W31
	262 Move X6, X31
	263 Call HashAlgorithm.TransformBlock, X0, X1, X2, X3, X4, X5
	264 Move X8, 0xEF0000
	265 Move X8, [X8+1560]
	266 Move W1, W21
	267 Move X0, [X8]
	268 Call 0x1C17D6C
	269 Move X1, X0
	270 Move X0, X19
	271 Move W2, W31
	272 Move W3, W21
	273 Move X20, [X31+48]
	274 Move X19, [X31+56]
	275 Move X22, [X31+32]
	276 Move X21, [X31+40]
	277 Move X24, [X31+16]
	278 Move X23, [X31+24]
	279 Move X0, X31
	280 Move X30, [X31+64]
	281 Return X0
	282 Move W2, W31
	283 Move W3, W22
	284 Move X4, X31
	285 Call HashAlgorithm.TransformFinalBlock, X0, X1, X2, X3
	286 Move X8, [X19]
	287 Move X0, X19
	288 Move X20, [X31+48]
	289 Move X19, [X31+56]
	290 Move X22, [X31+32]
	291 Move X21, [X31+40]
	292 Move X2, [X8+488]
	293 Move X1, [X8+496]
	294 Move X24, [X31+16]
	295 Move X23, [X31+24]
	296 Move X30, [X31+64]
	297 CallNoReturn X2
	298 Call 0x1C17F20
	299 Call 0x1C17F28

