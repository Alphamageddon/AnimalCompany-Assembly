Type: Mono.Security.Authenticode.AuthenticodeDeformatter

Method: System.Void .ctor()

Disassembly:
	0x03204F78 CMP W23, W8
	0x03204F7C CSET W0, EQ
	0x03204F80 B.NE 0x3204FA0
	0x03204F84 LDR W8, [X20 + 0x18]
	0x03204F88 ADD W22, W22, 0x1
	0x03204F8C SUB W21, W21, 0x1
	0x03204F90 CMP W22, W8
	0x03204F94 B.LT 0x3204F3C
	0x03204F98 B 0x3204FA0
	0x03204F9C MOV W0, W31
	0x03204FA0 LDP X20, X19, [X31 + 0x20]
	0x03204FA4 LDP X22, X21, [X31 + 0x10]
	0x03204FA8 LDP X30, X23, [X31], #0x30
	0x03204FAC RET
	0x03204FB0 MOVZ W0, 0x1
	0x03204FB4 B 0x3204FA0
	0x03204FB8 BL 0x1C16F20
	0x03204FBC BL 0x1C16F28
	0x03204FC0 SUB X31, X31, 0xF0
	0x03204FC4 STP X29, X30, [X31 + 0x90]
	0x03204FC8 STP X28, X27, [X31 + 0xA0]
	0x03204FCC STP X26, X25, [X31 + 0xB0]
	0x03204FD0 STP X24, X23, [X31 + 0xC0]
	0x03204FD4 STP X22, X21, [X31 + 0xD0]
	0x03204FD8 STP X20, X19, [X31 + 0xE0]
	0x03204FDC ADRP X19, 0x11D8000
	0x03204FE0 LDRB W8, [X19 + 0x23F]
	0x03204FE4 MOV X22, X2
	0x03204FE8 MOV X20, X1
	0x03204FEC MOV X21, X0
	0x03204FF0 TBNZ X8, 0x0, 0x32050B0
	0x03204FF4 ADRP X0, 0xF1C000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x11D9000
	006 Move X21, 0xF1E000
	007 Move W8, [X20+572]
	008 Move X21, [X21+1672]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xF1E000
	015 Move X0, [X0+1672]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+572], W8
	019 Move X0, X19
	020 Call AuthenticodeBase..ctor, X0
	021 Move TEMP, 0
	022 Not TEMP
	023 Move W8, TEMP
	024 Move [X19+120], W8
	025 Move X0, [X21]
	026 Call 0x1C17F10
	027 Move X1, X31
	028 Move X20, X0
	029 Call X509Chain..ctor, X0
	030 Move [X19+136], X20
	031 Move X0, [X21]
	032 Call 0x1C17F10
	033 Move X1, X31
	034 Move X20, X0
	035 Call X509Chain..ctor, X0
	036 Move [X19+144], X20
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X30, [X31+32]
	040 Move X21, [X31+40]
	041 Return 

Method: System.Void .ctor(System.Byte[] rawData)

Disassembly:
	0x03204FF8 LDR X0, [X0 + 0xB98]
	0x03204FFC BL 0x1C16CF4
	0x03205000 ADRP X0, 0xEEE000
	0x03205004 LDR X0, [X0 + 0xE00]
	0x03205008 BL 0x1C16CF4
	0x0320500C ADRP X0, 0xEEE000
	0x03205010 LDR X0, [X0 + 0xE18]
	0x03205014 BL 0x1C16CF4
	0x03205018 ADRP X0, 0xF1B000
	0x0320501C LDR X0, [X0 + 0xF88]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X1
	005 Move X20, X0
	006 Call AuthenticodeDeformatter..ctor, X0
	007 Move X0, X20
	008 Move X1, X19
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X30, [X31+32]

Method: System.Void set_RawData(System.Byte[] value)

Disassembly:
	0x03205020 BL 0x1C16CF4
	0x03205024 ADRP X0, 0xF1C000
	0x03205028 LDR X0, [X0 + 0x1A0]
	0x0320502C BL 0x1C16CF4
	0x03205030 ADRP X0, 0xF1C000
	0x03205034 LDR X0, [X0 + 0x6D8]
	0x03205038 BL 0x1C16CF4
	0x0320503C ADRP X0, 0xF1B000
	0x03205040 LDR X0, [X0 + 0xD18]
	0x03205044 BL 0x1C16CF4
	0x03205048 ADRP X0, 0xF1B000
	0x0320504C LDR X0, [X0 + 0xD20]
	0x03205050 BL 0x1C16CF4
	0x03205054 ADRP X0, 0xF1C000
	0x03205058 LDR X0, [X0 + 0x6B0]
	0x0320505C BL 0x1C16CF4
	0x03205060 ADRP X0, 0xF1C000
	0x03205064 LDR X0, [X0 + 0x6E0]
	0x03205068 BL 0x1C16CF4
	0x0320506C ADRP X0, 0xF1C000
	0x03205070 LDR X0, [X0 + 0x6C0]
	0x03205074 BL 0x1C16CF4
	0x03205078 ADRP X0, 0xF1B000
	0x0320507C LDR X0, [X0 + 0xD40]
	0x03205080 BL 0x1C16CF4
	0x03205084 ADRP X0, 0xF1B000
	0x03205088 LDR X0, [X0 + 0xD50]
	0x0320508C BL 0x1C16CF4
	0x03205090 ADRP X0, 0xF1B000
	0x03205094 LDR X0, [X0 + 0xD58]
	0x03205098 BL 0x1C16CF4
	0x0320509C ADRP X0, 0xF1B000
	0x032050A0 LDR X0, [X0 + 0xD80]
	0x032050A4 BL 0x1C16CF4
	0x032050A8 MOVZ W8, 0x1
	0x032050AC STRB W8, [X19 + 0x23F]
	0x032050B0 CBZ X20, 0x3205248
	0x032050B4 LDRB W8, [X20 + 0x10]
	0x032050B8 CMP W8, 0x1
	0x032050BC B.HI 0x320547C
	0x032050C0 LDR X0, [X20 + 0x20]
	0x032050C4 STR X21, [X31 + 0x8]
	0x032050C8 CBZ X0, 0x3205248
	0x032050CC ADRP X27, 0xF1B000
	0x032050D0 ADRP X28, 0xF1C000
	0x032050D4 ADRP X29, 0xF1C000
	0x032050D8 ADRP X19, 0xF1C000
	0x032050DC LDR X27, [X27 + 0xB98]
	0x032050E0 LDR X28, [X28 + 0x6C0]
	0x032050E4 LDR X29, [X29 + 0x6B0]
	0x032050E8 LDR X19, [X19 + 0x6E0]
	0x032050EC MOV X24, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, X1
	005 Move X19, X0
	006 Call AuthenticodeDeformatter.Reset, X0
	007 Move [X19+72], X20
	008 Move X0, X19
	009 Call AuthenticodeDeformatter.CheckSignature, X0
	010 Move X20, [X31+16]
	011 Move X19, [X31+24]
	012 Move X30, [X31+32]
	013 Return 
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Move X20, X0
	016 Move X0, X20
	017 Call 0x3EB2AD0
	018 Move X20, X0
	019 Move X0, 0xF1D000
	020 Move X0, [X0+1680]
	021 Call 0x1C17D08
	022 Move X8, [X20]
	023 Move X1, [X8]
	024 Call 0x1C18270
	025 Move TEMP, X0
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {42}
	029 Move X0, 0xEF5000
	030 Move X0, [X0+3264]
	031 Call 0x1C17D08
	032 Move X8, [X20]
	033 Move X1, [X8]
	034 Call 0x1C18270
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfNotEqual {46}
	039 Call 0x3EB2AE0
	040 Move W8, 1
	041 Move [X19+120], W8
	042 Move X19, [X20]
	043 Call 0x3EB2AE0
	044 Move X0, X19
	045 Call 0x1C17F18
	046 Move W0, 8
	047 Call 0x3EB2AF0
	048 Move X8, [X20]
	049 Move [X0], X8
	050 Move X1, 0xCB0000
	051 Add X1, X1, 3672
	052 Move X2, X31
	053 Call 0x3EB2B00
	054 Move X20, X0
	055 Call 0x3EB2AE0
	056 Move X0, X20
	057 Call 0x1D2D690
	058 Call 0x1991590

Method: Mono.Security.X509.X509Certificate get_SigningCertificate()

Disassembly:
	0x03205488 LDP X24, X23, [X31 + 0xC0]
	0x0320548C LDP X26, X25, [X31 + 0xB0]

ISIL:
	001 Move X0, [X0+112]
	002 Return X0

Method: System.Boolean CheckSignature()

Disassembly:
	0x03205194 MOV X2, X31
	0x03205198 BL 0x31E8704
	0x0320519C CBZ X0, 0x3205248
	0x032051A0 MOV W1, W31
	0x032051A4 MOV X2, X31
	0x032051A8 BL 0x31E8704
	0x032051AC MOV X1, X31
	0x032051B0 BL 0x31E909C
	0x032051B4 MOV X24, X0
	0x032051B8 B 0x320523C
	0x032051BC LDR X1, [X29]
	0x032051C0 MOV X0, X26
	0x032051C4 MOV X2, X31
	0x032051C8 BL 0x321BA08
	0x032051CC TBZ X0, 0x0, 0x32051F8
	0x032051D0 MOVZ W1, 0x1
	0x032051D4 MOV X0, X25
	0x032051D8 MOV X2, X31
	0x032051DC BL 0x31E8704
	0x032051E0 CBZ X0, 0x3205248
	0x032051E4 MOV W1, W31
	0x032051E8 MOV X2, X31
	0x032051EC BL 0x31E8704
	0x032051F0 MOV X23, X0
	0x032051F4 B 0x320523C
	0x032051F8 LDR X1, [X19]
	0x032051FC MOV X0, X26
	0x03205200 MOV X2, X31
	0x03205204 BL 0x321BA08
	0x03205208 TBZ X0, 0x0, 0x320523C
	0x0320520C MOVZ W1, 0x1
	0x03205210 MOV X0, X25
	0x03205214 MOV X2, X31
	0x03205218 BL 0x31E8704
	0x0320521C CBZ X0, 0x3205248
	0x03205220 MOV W1, W31
	0x03205224 MOV X2, X31
	0x03205228 BL 0x31E8704
	0x0320522C MOV X1, X31
	0x03205230 BL 0x31E9324
	0x03205234 LDR X8, [X31 + 0x8]
	0x03205238 STR X0, [X8 + 0x68]
	0x0320523C LDR X0, [X20 + 0x20]
	0x03205240 ADD W21, W21, 0x1
	0x03205244 CBNZ X0, 0x32050F8
	0x03205248 BL 0x1C16F20
	0x0320524C ADRP X8, 0xF1B000
	0x03205250 LDR X8, [X8 + 0xD80]
	0x03205254 MOV X0, X24
	0x03205258 MOV X2, X31
	0x0320525C LDR X1, [X8]
	0x03205260 BL 0x3226EF8
	0x03205264 MOV W8, W31
	0x03205268 CBZ X23, 0x3205480
	0x0320526C LDR X28, [X31 + 0x8]
	0x03205270 TBNZ X0, 0x0, 0x3205480
	0x03205274 MOV X0, X23
	0x03205278 MOV X1, X31
	0x0320527C BL 0x31E7CE8
	0x03205280 CMP W0, 0x14
	0x03205284 B.LE 0x32052AC
	0x03205288 CMP W0, 0x20
	0x0320528C B.EQ 0x32052E8
	0x03205290 CMP W0, 0x30
	0x03205294 B.EQ 0x32052DC
	0x03205298 CMP W0, 0x40
	0x0320529C B.NE 0x32052C8
	0x032052A0 ADRP X8, 0xF1B000
	0x032052A4 LDR X8, [X8 + 0xD58]
	0x032052A8 B 0x32052F0
	0x032052AC CMP W0, 0x10
	0x032052B0 B.EQ 0x32052D0
	0x032052B4 CMP W0, 0x14
	0x032052B8 B.NE 0x32052C8
	0x032052BC ADRP X8, 0xF1B000
	0x032052C0 LDR X8, [X8 + 0xD40]
	0x032052C4 B 0x32052F0
	0x032052C8 MOV X0, X31
	0x032052CC B 0x32052F4
	0x032052D0 ADRP X8, 0xF1B000
	0x032052D4 LDR X8, [X8 + 0xD50]
	0x032052D8 B 0x32052F0
	0x032052DC ADRP X8, 0xF1B000
	0x032052E0 LDR X8, [X8 + 0xD18]
	0x032052E4 B 0x32052F0
	0x032052E8 ADRP X8, 0xF1B000
	0x032052EC LDR X8, [X8 + 0xD20]
	0x032052F0 LDR X0, [X8]
	0x032052F4 MOV X1, X31
	0x032052F8 BL 0x3251238
	0x032052FC CBZ X0, 0x3205248
	0x03205300 MOV X1, X22
	0x03205304 MOV X2, X31
	0x03205308 MOV X21, X0
	0x0320530C BL 0x32513F4
	0x03205310 MOV X1, X0
	0x03205314 MOV X0, X23
	0x03205318 MOV X2, X31
	0x0320531C BL 0x31E7EC0
	0x03205320 TBZ X0, 0x0, 0x320547C
	0x03205324 MOV X0, X20
	0x03205328 MOV X1, X31
	0x0320532C BL 0x31EB068
	0x03205330 LDR X8, [X27]
	0x03205334 MOV X22, X0
	0x03205338 MOV X0, X8
	0x0320533C BL 0x1C16F10
	0x03205340 MOVZ W1, 0x31
	0x03205344 MOV X2, X31
	0x03205348 MOV X23, X0
	0x0320534C BL 0x31E79E8
	0x03205350 LDR X0, [X20 + 0x20]
	0x03205354 CBZ X0, 0x3205248
	0x03205358 LDR X8, [X0]
	0x0320535C LDR X9, [X8 + 0x388]
	0x03205360 LDR X1, [X8 + 0x390]
	0x03205364 BLR X9
	0x03205368 MOV X25, X0
	0x0320536C CBZ X0, 0x32057BC
	0x03205370 ADRP X19, 0xEEE000
	0x03205374 LDR X19, [X19 + 0xE18]
	0x03205378 LDR X8, [X25]
	0x0320537C LDR X1, [X19]
	0x03205380 LDRH W9, [X8 + 0x12E]
	0x03205384 CBZ X9, 0x32053A8
	0x03205388 LDR X10, [X8 + 0xB0]
	0x0320538C ADD X10, X10, 0x8
	0x03205390 LDUR X11, [X10 - 0x8]
	0x03205394 CMP X11, X1
	0x03205398 B.EQ 0x32053B8
	0x0320539C SUBS X9, X9, 0x1
	0x032053A0 ADD X10, X10, 0x10
	0x032053A4 B.NE 0x3205390
	0x032053A8 MOV X0, X25
	0x032053AC MOV W2, W31
	0x032053B0 BL 0x1C5C788
	0x032053B4 B 0x32053C4
	0x032053B8 LDRSW X9, [X10]
	0x032053BC ADD X8, X8, X9, 0x4, LSL
	0x032053C0 ADD X0, X8, 0x138
	0x032053C4 LDP X8, X1, [X0]
	0x032053C8 MOV X0, X25
	0x032053CC BLR X8
	0x032053D0 TBZ X0, 0x0, 0x32054A4
	0x032053D4 LDR X8, [X25]
	0x032053D8 LDR X1, [X19]
	0x032053DC LDRH W9, [X8 + 0x12E]
	0x032053E0 CBZ X9, 0x3205404
	0x032053E4 LDR X10, [X8 + 0xB0]
	0x032053E8 ADD X10, X10, 0x8
	0x032053EC LDUR X11, [X10 - 0x8]
	0x032053F0 CMP X11, X1
	0x032053F4 B.EQ 0x3205414
	0x032053F8 SUBS X9, X9, 0x1
	0x032053FC ADD X10, X10, 0x10
	0x03205400 B.NE 0x32053EC
	0x03205404 MOVZ W2, 0x1
	0x03205408 MOV X0, X25
	0x0320540C BL 0x1C5C788
	0x03205410 B 0x3205424
	0x03205414 LDR W9, [X10]
	0x03205418 ADD W9, W9, 0x1
	0x0320541C ADD X8, X8, W9, 0x4, SXTW
	0x03205420 ADD X0, X8, 0x138
	0x03205424 LDP X8, X1, [X0]
	0x03205428 MOV X0, X25
	0x0320542C BLR X8
	0x03205430 MOV X8, X0
	0x03205434 CBZ X0, 0x3205464
	0x03205438 LDR X9, [X8]
	0x0320543C LDR X1, [X27]
	0x03205440 LDRB W11, [X9 + 0x130]
	0x03205444 LDRB W10, [X1 + 0x130]
	0x03205448 CMP W11, W10
	0x0320544C B.CC 0x3205794
	0x03205450 LDR X9, [X9 + 0xC8]
	0x03205454 ADD X9, X9, X10, 0x3, LSL
	0x03205458 LDUR X9, [X9 - 0x8]
	0x0320545C CMP X9, X1
	0x03205460 B.NE 0x3205794
	0x03205464 CBZ X23, 0x320579C
	0x03205468 MOV X0, X23
	0x0320546C MOV X1, X8
	0x03205470 MOV X2, X31
	0x03205474 BL 0x31E7ED0
	0x03205478 B 0x3205378
	0x0320547C MOV W8, W31
	0x03205480 LDP X20, X19, [X31 + 0xE0]
	0x03205484 LDP X22, X21, [X31 + 0xD0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x11D8000
	007 Move W8, [X20+573]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {27}
	013 Move X0, 0xF1C000
	014 Move X0, [X0+3184]
	015 Call 0x1C17CF4
	016 Move X0, 0xF1D000
	017 Move X0, [X0+1688]
	018 Call 0x1C17CF4
	019 Move X0, 0xF1D000
	020 Move X0, [X0+1696]
	021 Call 0x1C17CF4
	022 Move X0, 0xF1D000
	023 Move X0, [X0+1704]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X20+573], W8
	027 Move X1, [X19+64]
	028 Compare X1, 0
	029 JumpIfEqual {32}
	030 Move X0, X19
	031 Call AuthenticodeBase.Open, X0, X1
	032 Move X1, [X19+72]
	033 Move X0, X19
	034 Call AuthenticodeBase.Open, X0, X1
	035 Move X0, X19
	036 Call AuthenticodeBase.GetSecurityEntry, X0
	037 Move [X19+128], X0
	038 Compare X0, 0
	039 JumpIfEqual {88}
	040 Move X8, 0xF1C000
	041 Move X8, [X8+3184]
	042 Move X21, X0
	043 Move X0, [X8]
	044 Call 0x1C17F10
	045 Move X1, X21
	046 Move X2, X31
	047 Move X20, X0
	048 Call ContentInfo..ctor, X0, X1
	049 Compare X20, 0
	050 JumpIfEqual {209}
	051 Move X8, 0xF1D000
	052 Move X8, [X8+1704]
	053 Move X0, [X20+16]
	054 Move X2, X31
	055 Move X1, [X8]
	056 Call String.op_Inequality, X0, X1
	057 Move TEMP, X0
	058 And TEMP, TEMP, 1
	059 Compare TEMP, 1
	060 JumpIfEqual {85}
	061 Move X8, 0xF1D000
	062 Move X21, [X20+24]
	063 Move X8, [X8+1688]
	064 Move X0, [X8]
	065 Call 0x1C17F10
	066 Move X1, X21
	067 Move X2, X31
	068 Move X20, X0
	069 Call SignedData..ctor, X0, X1
	070 Compare X20, 0
	071 JumpIfEqual {209}
	072 Move X8, [X20+32]
	073 Compare X8, 0
	074 JumpIfEqual {209}
	075 Move X0, [X8+16]
	076 Move X8, 0xF1D000
	077 Move X8, [X8+1696]
	078 Move X2, X31
	079 Move X1, [X8]
	080 Call String.op_Inequality, X0, X1
	081 Move TEMP, X0
	082 And TEMP, TEMP, 1
	083 Compare TEMP, 1
	084 JumpIfNotEqual {105}
	085 Move X0, [X19+24]
	086 Compare X0, 0
	087 JumpIfNotEqual {93}
	088 Move X0, [X19+24]
	089 Move W8, 1
	090 Move [X19+120], W8
	091 Compare X0, 0
	092 JumpIfEqual {99}
	093 Move X8, [X0]
	094 Move X9, [X8+632]
	095 Move X1, [X8+640]
	096 NotImplemented "Instruction BLR not yet implemented."
	097 Move W0, W31
	098 Move [X19+24], X31
	099 Move X20, [X31+32]
	100 Move X19, [X31+40]
	101 Move X22, [X31+16]
	102 Move X21, [X31+24]
	103 Move X30, [X31+48]
	104 Return X0
	105 Move X8, [X20+40]
	106 Move [X19+88], X8
	107 Move X8, [X20+32]
	108 Compare X8, 0
	109 JumpIfEqual {209}
	110 Move X21, [X8+24]
	111 Compare X21, 0
	112 JumpIfEqual {209}
	113 Move X0, X21
	114 Move W1, W31
	115 Move X2, X31
	116 Call ASN1.get_Item, X0, X1
	117 Compare X0, 0
	118 JumpIfEqual {209}
	119 Move W1, 1
	120 Move X2, X31
	121 Call ASN1.get_Item, X0, X1
	122 Compare X0, 0
	123 JumpIfEqual {209}
	124 Move W1, 1
	125 Move X2, X31
	126 Call ASN1.get_Item, X0, X1
	127 Move [X19+96], X0
	128 Compare X0, 0
	129 JumpIfEqual {209}
	130 Move X1, X31
	131 Call ASN1.get_Length, X0
	132 NotImplemented "Instruction CMP not yet implemented."
	133 NotImplemented "Instruction CMP not yet implemented."
	134 NotImplemented "Instruction CMP not yet implemented."
	135 NotImplemented "Instruction CMP not yet implemented."
	136 Move X0, X31
	137 Call SHA512.Create
	138 NotImplemented "Instruction CMP not yet implemented."
	139 NotImplemented "Instruction CMP not yet implemented."
	140 Move X0, X31
	141 Call SHA1.Create
	142 Move X0, [X19+24]
	143 Move W8, 5
	144 Move X0, X31
	145 Call MD5.Create
	146 Move X0, X31
	147 Call SHA256.Create
	148 Move X0, X31
	149 Call SHA384.Create
	150 Move X22, X0
	151 Move X0, X19
	152 Move X1, X22
	153 Call AuthenticodeBase.GetHash, X0, X1
	154 Move X8, [X19+24]
	155 Move [X19+80], X0
	156 Compare X8, 0
	157 JumpIfEqual {164}
	158 Move X9, [X8]
	159 Move X0, X8
	160 Move X10, [X9+632]
	161 Move X1, [X9+640]
	162 NotImplemented "Instruction BLR not yet implemented."
	163 Move [X19+24], X31
	164 Move X0, [X19+96]
	165 Compare X0, 0
	166 JumpIfEqual {209}
	167 Move X1, [X19+80]
	168 Move X2, X31
	169 Call ASN1.CompareValue, X0, X1
	170 Move TEMP, X0
	171 And TEMP, TEMP, 1
	172 Compare TEMP, 1
	173 JumpIfEqual {176}
	174 Move W8, 2
	175 Move [X19+120], W8
	176 Move X0, X21
	177 Move W1, W31
	178 Move X2, X31
	179 Call ASN1.get_Item, X0, X1
	180 Compare X0, 0
	181 JumpIfEqual {209}
	182 Move X1, X31
	183 Call ASN1.get_Value, X0
	184 Compare X22, 0
	185 JumpIfEqual {209}
	186 Move X8, [X22]
	187 Move X21, X0
	188 Move X0, X22
	189 Move X9, [X8+600]
	190 Move X1, [X8+608]
	191 NotImplemented "Instruction BLR not yet implemented."
	192 Move X0, X22
	193 Move X1, X21
	194 Move X2, X31
	195 Call HashAlgorithm.ComputeHash, X0, X1
	196 Move X2, X0
	197 Move X0, X19
	198 Move X1, X20
	199 Move X3, X22
	200 Call AuthenticodeDeformatter.VerifySignature, X0, X1, X2, X3
	201 Move TEMP, X0
	202 And TEMP, TEMP, 1
	203 Compare TEMP, 1
	204 JumpIfNotEqual {208}
	205 Move W8, [X19+120]
	206 NotImplemented "Instruction CMP not yet implemented."
	207 NotImplemented "Instruction CSET not yet implemented."
	208 Move W0, W31
	209 Call 0x1C17F20

Method: System.Boolean CompareIssuerSerial(System.String issuer, System.Byte[] serial, Mono.Security.X509.X509Certificate x509)

Disassembly:
	0x03205EC4 ADD X16, X8, 0x20
	0x03205EC8 ADD X17, X9, 0x20
	0x03205ECC CMP X10, X14
	0x03205ED0 B.CS 0x3206000
	0x03205ED4 CBZ X8, 0x3206004
	0x03205ED8 LDR X11, [X8 + 0x18]
	0x03205EDC CMP X10, W11, UXTW
	0x03205EE0 B.CS 0x3206000
	0x03205EE4 CBZ X9, 0x3206004
	0x03205EE8 LDR X12, [X9 + 0x18]
	0x03205EEC CMP X10, W12, UXTW
	0x03205EF0 B.CS 0x3206000
	0x03205EF4 LDR W0, [X15, X10, LSL #2]
	0x03205EF8 LDR W1, [X16, X10, LSL #2]
	0x03205EFC ADD W0, W0, W13
	0x03205F00 SUB W1, W1, W0
	0x03205F04 STR W1, [X17, X10, LSL #2]
	0x03205F08 LDR W2, [X21 + 0x10]
	0x03205F0C CMP W0, W13
	0x03205F10 CSET W13, CC
	0x03205F14 ADDS W31, W0, W1
	0x03205F18 CSET W0, CS
	0x03205F1C ADD X10, X10, 0x1
	0x03205F20 CMP X10, X2
	0x03205F24 ORR W13, W13, W0, 0x0
	0x03205F28 B.CC 0x3205ECC
	0x03205F2C LDR W14, [X19 + 0x10]
	0x03205F30 CMP W14, W10
	0x03205F34 B.EQ 0x3205FE4
	0x03205F38 TBZ X13, 0x0, 0x3205FA0
	0x03205F3C CMP W10, W11
	0x03205F40 CSEL X14, X10, X11, HI
	0x03205F44 CMP W10, W12
	0x03205F48 CSEL X15, X10, X12, HI
	0x03205F4C ADD X13, X8, 0x20
	0x03205F50 AND X14, X14, 0x0
	0x03205F54 AND X15, X15, 0x0
	0x03205F58 ADD X16, X9, 0x20
	0x03205F5C CMP X14, X10
	0x03205F60 B.EQ 0x3206000
	0x03205F64 CMP X15, X10
	0x03205F68 B.EQ 0x3206000
	0x03205F6C LDR W17, [X13, X10, LSL #2]
	0x03205F70 SUB W17, W17, 0x1
	0x03205F74 STR W17, [X16, X10, LSL #2]
	0x03205F78 LDR W1, [X13, X10, LSL #2]
	0x03205F7C LDR W0, [X19 + 0x10]
	0x03205F80 ADD X17, X10, 0x1
	0x03205F84 CBNZ W1, 0x3205F94
	0x03205F88 CMP X17, X0
	0x03205F8C MOV X10, X17
	0x03205F90 B.CC 0x3205F5C
	0x03205F94 CMP W17, W0
	0x03205F98 B.EQ 0x3205FE4
	0x03205F9C MOV W10, W17
	0x03205FA0 CMP W10, W11
	0x03205FA4 CSEL W11, W10, W11, HI
	0x03205FA8 CMP W10, W12
	0x03205FAC MOV W13, W10
	0x03205FB0 ADD X9, X9, 0x20
	0x03205FB4 CSEL W10, W10, W12, HI
	0x03205FB8 ADD X8, X8, 0x20
	0x03205FBC CMP X11, X13

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Compare X3, 0
	008 JumpIfEqual {68}
	009 Move X8, [X3]
	010 Move X21, X1
	011 Move X0, X3
	012 Move X19, X3
	013 Move X9, [X8+392]
	014 Move X1, [X8+400]
	015 Move X20, X2
	016 NotImplemented "Instruction BLR not yet implemented."
	017 Move X1, X0
	018 Move X0, X21
	019 Move X2, X31
	020 Call String.op_Inequality, X0, X1
	021 Move TEMP, X0
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {59}
	025 Compare X20, 0
	026 JumpIfEqual {68}
	027 Move X8, [X19]
	028 Move X0, X19
	029 Move X9, [X8+520]
	030 Move X1, [X8+528]
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Compare X0, 0
	033 JumpIfEqual {68}
	034 Move W8, [X20+24]
	035 Move W9, [X0+24]
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Subtract W21, W8, 1
	038 Move W22, W31
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move X8, [X19]
	041 Add X9, X20, W22
	042 Move W23, [X9+32]
	043 Move X0, X19
	044 Move X9, [X8+520]
	045 Move X1, [X8+528]
	046 NotImplemented "Instruction BLR not yet implemented."
	047 Compare X0, 0
	048 JumpIfEqual {68}
	049 Move W8, [X0+24]
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Add X8, X0, W21
	052 Move W8, [X8+32]
	053 NotImplemented "Instruction CMP not yet implemented."
	054 NotImplemented "Instruction CSET not yet implemented."
	055 Move W8, [X20+24]
	056 Add W22, W22, 1
	057 Subtract W21, W21, 1
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move W0, W31
	060 Move X20, [X31+32]
	061 Move X19, [X31+40]
	062 Move X22, [X31+16]
	063 Move X21, [X31+24]
	064 Move X30, [X31+48]
	065 Move X23, [X31+56]
	066 Return X0
	067 Move W0, 1
	068 Call 0x1C17F20
	069 Call 0x1C17F28

Method: System.Boolean VerifySignature(Mono.Security.PKCS7/SignedData sd, System.Byte[] calculatedMessageDigest, System.Security.Cryptography.HashAlgorithm ha)

Disassembly:
	0x03205490 LDP X28, X27, [X31 + 0xA0]
	0x03205494 LDP X29, X30, [X31 + 0x90]
	0x03205498 AND W0, W8, 0x1
	0x0320549C ADD X31, X31, 0xF0
	0x032054A0 RET
	0x032054A4 MOV X26, X31
	0x032054A8 MOVZ W19, 0x15
	0x032054AC ADRP X8, 0xEEE000
	0x032054B0 LDR X8, [X8 + 0xE00]
	0x032054B4 MOV X0, X25
	0x032054B8 LDR X1, [X8]
	0x032054BC MOV X29, X8
	0x032054C0 BL 0x1C16E00
	0x032054C4 CBZ X0, 0x3205524
	0x032054C8 LDR X8, [X0]
	0x032054CC LDR X1, [X29]
	0x032054D0 MOV X24, X0
	0x032054D4 LDRH W9, [X8 + 0x12E]
	0x032054D8 CBZ X9, 0x32054FC
	0x032054DC LDR X10, [X8 + 0xB0]
	0x032054E0 ADD X10, X10, 0x8
	0x032054E4 LDUR X11, [X10 - 0x8]
	0x032054E8 CMP X11, X1
	0x032054EC B.EQ 0x320550C
	0x032054F0 SUBS X9, X9, 0x1
	0x032054F4 ADD X10, X10, 0x10
	0x032054F8 B.NE 0x32054E4
	0x032054FC MOV X0, X24
	0x03205500 MOV W2, W31
	0x03205504 BL 0x1C5C788
	0x03205508 B 0x3205518
	0x0320550C LDRSW X9, [X10]
	0x03205510 ADD X8, X8, X9, 0x4, LSL
	0x03205514 ADD X0, X8, 0x138
	0x03205518 LDP X8, X1, [X0]
	0x0320551C MOV X0, X24
	0x03205520 BLR X8
	0x03205524 CBNZ X26, 0x32057C0
	0x03205528 CMP W19, 0x15
	0x0320552C B.EQ 0x3205534
	0x03205530 CBNZ W19, 0x3205480
	0x03205534 CBZ X23, 0x3205248
	0x03205538 LDR X8, [X23]
	0x0320553C MOV X0, X23
	0x03205540 LDP X9, X1, [X8 + 0x178]
	0x03205544 BLR X9
	0x03205548 MOV X1, X0
	0x0320554C MOV X0, X21
	0x03205550 MOV X2, X31
	0x03205554 BL 0x32513F4
	0x03205558 LDR X23, [X20 + 0x38]
	0x0320555C MOV X24, X0
	0x03205560 MOV X0, X20
	0x03205564 MOV X1, X31
	0x03205568 BL 0x31EAFDC
	0x0320556C LDR X8, [X28 + 0x58]
	0x03205570 CBZ X8, 0x3205248
	0x03205574 MOV X25, X0
	0x03205578 MOV X0, X8
	0x0320557C MOV X1, X31
	0x03205580 BL 0x31EDE74
	0x03205584 MOV X20, X0
	0x03205588 CBZ X0, 0x32057C8
	0x0320558C ADRP X19, 0xF1B000
	0x03205590 LDR X19, [X19 + 0xF88]
	0x03205594 MOV X0, X20
	0x03205598 MOV X1, X31
	0x0320559C BL 0x31EE254
	0x032055A0 TBZ X0, 0x0, 0x3205704
	0x032055A4 MOV X0, X20
	0x032055A8 MOV X1, X31
	0x032055AC BL 0x31EDECC
	0x032055B0 MOV X26, X0
	0x032055B4 MOV X1, X23
	0x032055B8 MOV X2, X25
	0x032055BC MOV X3, X0
	0x032055C0 BL 0x3204EC4
	0x032055C4 TBZ X0, 0x0, 0x3205594
	0x032055C8 CBZ X26, 0x32057A4
	0x032055CC LDR X8, [X26]
	0x032055D0 LDP X9, X1, [X8 + 0x1C8]
	0x032055D4 MOV X0, X26
	0x032055D8 BLR X9
	0x032055DC CBZ X0, 0x32057A8
	0x032055E0 CBZ X22, 0x32057A0
	0x032055E4 LDR W8, [X0 + 0x18]
	0x032055E8 LDR W9, [X22 + 0x18]
	0x032055EC CMP W8, W9
	0x032055F0 B.LE 0x3205594
	0x032055F4 LDR X8, [X26]
	0x032055F8 LDP X9, X1, [X8 + 0x1D8]
	0x032055FC MOV X0, X26
	0x03205600 BLR X9
	0x03205604 MOV X28, X0
	0x03205608 CBZ X0, 0x3205624
	0x0320560C ADRP X8, 0xF1C000
	0x03205610 LDR X8, [X8 + 0x1A0]
	0x03205614 LDR X1, [X8]
	0x03205618 LDR X8, [X28]
	0x0320561C CMP X8, X1
	0x03205620 B.NE 0x32057B4
	0x03205624 ADRP X8, 0xF1C000
	0x03205628 LDR X8, [X8 + 0x6D8]
	0x0320562C LDR X0, [X8]
	0x03205630 BL 0x1C16F10
	0x03205634 MOV X27, X0
	0x03205638 MOVZ W1, 0x400
	0x0320563C BL 0x32012EC
	0x03205640 CBZ X28, 0x32057B0
	0x03205644 LDR X8, [X28]
	0x03205648 LDP X9, X2, [X8 + 0x1E8]
	0x0320564C ADD X8, X31, 0x50
	0x03205650 MOV X0, X28
	0x03205654 MOV W1, W31
	0x03205658 BLR X9
	0x0320565C LDP V0, V1, [X31 + 0x50]
	0x03205660 LDP V2, V3, [X31 + 0x70]
	0x03205664 LDR X28, [X31 + 0x8]
	0x03205668 STP V0, V1, [X31 + 0x10]
	0x0320566C STP V2, V3, [X31 + 0x30]
	0x03205670 CBZ X27, 0x32057AC
	0x03205674 LDR X8, [X27]
	0x03205678 LDP V0, V1, [X31 + 0x10]
	0x0320567C LDP V2, V3, [X31 + 0x30]
	0x03205680 LDR X9, [X8 + 0x1F8]
	0x03205684 STP V0, V1, [X31 + 0x50]
	0x03205688 STP V2, V3, [X31 + 0x70]
	0x0320568C LDR X2, [X8 + 0x200]
	0x03205690 ADD X1, X31, 0x50
	0x03205694 MOV X0, X27
	0x03205698 BLR X9
	0x0320569C LDR X0, [X19]
	0x032056A0 LDR W8, [X0 + 0xE0]
	0x032056A4 CBNZ W8, 0x32056AC
	0x032056A8 BL 0x1C16DFC
	0x032056AC MOVZ W4, 0x1
	0x032056B0 MOV X0, X27
	0x032056B4 MOV X1, X21
	0x032056B8 MOV X2, X24
	0x032056BC MOV X3, X22
	0x032056C0 BL 0x31FF314
	0x032056C4 TBZ X0, 0x0, 0x3205594
	0x032056C8 LDR X0, [X28 + 0x90]
	0x032056CC CBZ X0, 0x32057D4
	0x032056D0 LDR X1, [X28 + 0x58]
	0x032056D4 MOV X2, X31
	0x032056D8 BL 0x31F6A0C
	0x032056DC LDR X0, [X28 + 0x90]
	0x032056E0 CBZ X0, 0x32057D8
	0x032056E4 MOV X1, X26
	0x032056E8 MOV X2, X31
	0x032056EC MOV X26, X29
	0x032056F0 BL 0x31F6A24
	0x032056F4 MOV W21, W0
	0x032056F8 MOV X19, X31
	0x032056FC MOVZ W22, 0x1
	0x03205700 B 0x3205714
	0x03205704 MOV X26, X29
	0x03205708 MOV X19, X31
	0x0320570C MOV W22, W31
	0x03205710 MOV W21, W31
	0x03205714 LDR X1, [X26]
	0x03205718 MOV X0, X20
	0x0320571C BL 0x1C16E00
	0x03205720 CBZ X0, 0x3205780
	0x03205724 LDR X8, [X0]
	0x03205728 LDR X1, [X26]
	0x0320572C MOV X20, X0
	0x03205730 LDRH W9, [X8 + 0x12E]
	0x03205734 CBZ X9, 0x3205758
	0x03205738 LDR X10, [X8 + 0xB0]
	0x0320573C ADD X10, X10, 0x8
	0x03205740 LDUR X11, [X10 - 0x8]
	0x03205744 CMP X11, X1
	0x03205748 B.EQ 0x3205768
	0x0320574C SUBS X9, X9, 0x1
	0x03205750 ADD X10, X10, 0x10
	0x03205754 B.NE 0x3205740
	0x03205758 MOV X0, X20
	0x0320575C MOV W2, W31
	0x03205760 BL 0x1C5C788
	0x03205764 B 0x3205774
	0x03205768 LDRSW X9, [X10]
	0x0320576C ADD X8, X8, X9, 0x4, LSL
	0x03205770 ADD X0, X8, 0x138
	0x03205774 LDP X8, X1, [X0]
	0x03205778 MOV X0, X20
	0x0320577C BLR X8
	0x03205780 CBNZ X19, 0x32057CC
	0x03205784 AND W8, W22, W21, 0x0
	0x03205788 B 0x3205480
	0x0320578C MOV X0, X25
	0x03205790 BL 0x1C171E0
	0x03205794 MOV X0, X8
	0x03205798 BL 0x1C171E0
	0x0320579C BL 0x1C16F20
	0x032057A0 BL 0x1C16F20
	0x032057A4 BL 0x1C16F20
	0x032057A8 BL 0x1C16F20
	0x032057AC BL 0x1C16F20
	0x032057B0 BL 0x1C16F20
	0x032057B4 MOV X0, X28
	0x032057B8 BL 0x1C171E0
	0x032057BC BL 0x1C16F20
	0x032057C0 MOV X0, X26
	0x032057C4 BL 0x1C16F18
	0x032057C8 BL 0x1C16F20
	0x032057CC MOV X0, X19
	0x032057D0 BL 0x1C16F18
	0x032057D4 BL 0x1C16F20
	0x032057D8 BL 0x1C16F20
	0x032057DC B 0x320582C
	0x032057E0 B 0x320582C
	0x032057E4 B 0x320582C
	0x032057E8 B 0x320582C
	0x032057EC B 0x32058EC
	0x032057F0 B 0x320582C
	0x032057F4 B 0x320582C
	0x032057F8 B 0x320582C
	0x032057FC B 0x320582C
	0x03205800 B 0x320582C
	0x03205804 B 0x320582C
	0x03205808 B 0x320582C
	0x0320580C B 0x320582C
	0x03205810 B 0x320582C
	0x03205814 B 0x320582C
	0x03205818 B 0x320582C
	0x0320581C B 0x320582C
	0x03205820 B 0x320582C
	0x03205824 B 0x320582C
	0x03205828 B 0x320582C
	0x0320582C MOV X24, X0
	0x03205830 CMP W1, 0x1
	0x03205834 B.NE 0x3205858
	0x03205838 MOV X0, X24
	0x0320583C BL 0x3EB1AD0
	0x03205840 LDR X19, [X0]
	0x03205844 BL 0x3EB1AE0
	0x03205848 MOV W22, W31
	0x0320584C MOV W21, W31
	0x03205850 MOV X26, X29
	0x03205854 B 0x3205714
	0x03205858 MOV X19, X31
	0x0320585C B 0x3205864
	0x03205860 MOV X24, X0
	0x03205864 LDR X1, [X29]
	0x03205868 MOV X0, X20
	0x0320586C BL 0x1C16E00
	0x03205870 MOV X20, X0
	0x03205874 CBZ X0, 0x32058D0
	0x03205878 LDR X8, [X20]
	0x0320587C LDR X1, [X29]
	0x03205880 LDRH W9, [X8 + 0x12E]
	0x03205884 CBZ X9, 0x32058A8
	0x03205888 LDR X10, [X8 + 0xB0]
	0x0320588C ADD X10, X10, 0x8
	0x03205890 LDUR X11, [X10 - 0x8]
	0x03205894 CMP X11, X1
	0x03205898 B.EQ 0x32058B8
	0x0320589C SUBS X9, X9, 0x1
	0x032058A0 ADD X10, X10, 0x10
	0x032058A4 B.NE 0x3205890
	0x032058A8 MOV X0, X20
	0x032058AC MOV W2, W31
	0x032058B0 BL 0x1C5C788
	0x032058B4 B 0x32058C4
	0x032058B8 LDRSW X9, [X10]
	0x032058BC ADD X8, X8, X9, 0x4, LSL
	0x032058C0 ADD X0, X8, 0x138
	0x032058C4 LDP X8, X1, [X0]
	0x032058C8 MOV X0, X20
	0x032058CC BLR X8
	0x032058D0 CBZ X19, 0x3205998
	0x032058D4 MOV X0, X19
	0x032058D8 BL 0x1C16F18
	0x032058DC B 0x32058EC
	0x032058E0 B 0x32058EC
	0x032058E4 B 0x32058EC
	0x032058E8 B 0x32058EC
	0x032058EC MOV X24, X0
	0x032058F0 CMP W1, 0x1
	0x032058F4 B.NE 0x3205914
	0x032058F8 MOV X0, X24
	0x032058FC BL 0x3EB1AD0
	0x03205900 LDR X26, [X0]
	0x03205904 BL 0x3EB1AE0
	0x03205908 LDR X28, [X31 + 0x8]
	0x0320590C MOV W19, W31
	0x03205910 B 0x32054AC
	0x03205914 MOV X26, X31
	0x03205918 B 0x3205920
	0x0320591C MOV X24, X0
	0x03205920 ADRP X20, 0xEEE000
	0x03205924 LDR X20, [X20 + 0xE00]
	0x03205928 LDR X1, [X20]
	0x0320592C MOV X0, X25
	0x03205930 BL 0x1C16E00
	0x03205934 MOV X19, X0
	0x03205938 CBZ X0, 0x3205994
	0x0320593C LDR X8, [X19]
	0x03205940 LDR X1, [X20]
	0x03205944 LDRH W9, [X8 + 0x12E]
	0x03205948 CBZ X9, 0x320596C
	0x0320594C LDR X10, [X8 + 0xB0]
	0x03205950 ADD X10, X10, 0x8
	0x03205954 LDUR X11, [X10 - 0x8]
	0x03205958 CMP X11, X1
	0x0320595C B.EQ 0x320597C
	0x03205960 SUBS X9, X9, 0x1
	0x03205964 ADD X10, X10, 0x10
	0x03205968 B.NE 0x3205954
	0x0320596C MOV X0, X19
	0x03205970 MOV W2, W31
	0x03205974 BL 0x1C5C788
	0x03205978 B 0x3205988
	0x0320597C LDRSW X9, [X10]
	0x03205980 ADD X8, X8, X9, 0x4, LSL
	0x03205984 ADD X0, X8, 0x138
	0x03205988 LDP X8, X1, [X0]
	0x0320598C MOV X0, X19
	0x03205990 BLR X8
	0x03205994 CBNZ X26, 0x32059A0
	0x03205998 MOV X0, X24
	0x0320599C BL 0x1D2C690
	0x032059A0 MOV X0, X26
	0x032059A4 BL 0x1C16F18
	0x032059A8 BL 0x1990590
	0x032059AC STR X30, [X31 - 0x30]!
	0x032059B0 STP X22, X21, [X31 + 0x10]
	0x032059B4 STP X20, X19, [X31 + 0x20]
	0x032059B8 ADRP X22, 0x11D7000
	0x032059BC ADRP X21, 0xF17000
	0x032059C0 LDRB W8, [X22 + 0x241]
	0x032059C4 LDR X21, [X21 + 0xD08]
	0x032059C8 MOV W19, W2
	0x032059CC MOV X20, X0
	0x032059D0 TBNZ X8, 0x0, 0x32059E8
	0x032059D4 ADRP X0, 0xF17000
	0x032059D8 LDR X0, [X0 + 0xD08]
	0x032059DC BL 0x1C16CF4
	0x032059E0 MOVZ W8, 0x1
	0x032059E4 STRB W8, [X22 + 0x241]
	0x032059E8 MOVZ W8, 0x1
	0x032059EC MOV X0, X20
	0x032059F0 MOV X1, X31
	0x032059F4 STR W8, [X20 + 0x10]
	0x032059F8 BL 0x33BDD8C
	0x032059FC LDR X0, [X21]
	0x03205A00 MOV W1, W19
	0x03205A04 BL 0x1C16D6C
	0x03205A08 STR X0, [X20 + 0x18]
	0x03205A0C STR W19, [X20 + 0x10]
	0x03205A10 LDP X20, X19, [X31 + 0x20]
	0x03205A14 LDP X22, X21, [X31 + 0x10]
	0x03205A18 LDR X30, [X31], #0x30
	0x03205A1C RET
	0x03205A20 STP X30, X23, [X31 - 0x30]!
	0x03205A24 STP X22, X21, [X31 + 0x10]
	0x03205A28 STP X20, X19, [X31 + 0x20]
	0x03205A2C ADRP X21, 0x11D7000
	0x03205A30 LDRB W8, [X21 + 0x242]
	0x03205A34 MOV X19, X1
	0x03205A38 MOV X20, X0
	0x03205A3C TBNZ X8, 0x0, 0x3205A54
	0x03205A40 ADRP X0, 0xF17000
	0x03205A44 LDR X0, [X0 + 0xD08]
	0x03205A48 BL 0x1C16CF4
	0x03205A4C MOVZ W8, 0x1
	0x03205A50 STRB W8, [X21 + 0x242]
	0x03205A54 MOVZ W8, 0x1
	0x03205A58 MOV X0, X20
	0x03205A5C MOV X1, X31
	0x03205A60 STR W8, [X20 + 0x10]
	0x03205A64 BL 0x33BDD8C
	0x03205A68 CBZ X19, 0x3205ADC
	0x03205A6C LDR X0, [X19 + 0x18]
	0x03205A70 CBZ X0, 0x3205ADC
	0x03205A74 MOV X1, X31
	0x03205A78 BL 0x33A01F0
	0x03205A7C CBZ X0, 0x3205AC0
	0x03205A80 ADRP X23, 0xF17000
	0x03205A84 LDR X23, [X23 + 0xD08]
	0x03205A88 MOV X21, X0
	0x03205A8C LDR X22, [X23]
	0x03205A90 MOV X1, X22
	0x03205A94 BL 0x1C16E00
	0x03205A98 CBZ X0, 0x3205AB4
	0x03205A9C STR X0, [X20 + 0x18]
	0x03205AA0 LDR X22, [X23]
	0x03205AA4 MOV X0, X21
	0x03205AA8 MOV X1, X22
	0x03205AAC BL 0x1C16E00
	0x03205AB0 CBNZ X0, 0x3205AC4
	0x03205AB4 MOV X0, X21
	0x03205AB8 MOV X1, X22
	0x03205ABC BL 0x1C171E0
	0x03205AC0 STR X31, [X20 + 0x18]
	0x03205AC4 LDR W8, [X19 + 0x10]
	0x03205AC8 LDP X22, X21, [X31 + 0x10]
	0x03205ACC STR W8, [X20 + 0x10]
	0x03205AD0 LDP X20, X19, [X31 + 0x20]
	0x03205AD4 LDP X30, X23, [X31], #0x30
	0x03205AD8 RET
	0x03205ADC BL 0x1C16F20
	0x03205AE0 STP X30, X23, [X31 - 0x30]!
	0x03205AE4 STP X22, X21, [X31 + 0x10]
	0x03205AE8 STP X20, X19, [X31 + 0x20]
	0x03205AEC ADRP X23, 0x11D7000
	0x03205AF0 ADRP X22, 0xF17000
	0x03205AF4 LDRB W8, [X23 + 0x243]
	0x03205AF8 LDR X22, [X22 + 0xD08]
	0x03205AFC MOV W21, W2
	0x03205B00 MOV X20, X1
	0x03205B04 MOV X19, X0
	0x03205B08 TBNZ X8, 0x0, 0x3205B20
	0x03205B0C ADRP X0, 0xF17000
	0x03205B10 LDR X0, [X0 + 0xD08]
	0x03205B14 BL 0x1C16CF4
	0x03205B18 MOVZ W8, 0x1
	0x03205B1C STRB W8, [X23 + 0x243]
	0x03205B20 MOVZ W8, 0x1
	0x03205B24 MOV X0, X19
	0x03205B28 MOV X1, X31
	0x03205B2C STR W8, [X19 + 0x10]
	0x03205B30 BL 0x33BDD8C
	0x03205B34 LDR X0, [X22]
	0x03205B38 MOV W1, W21
	0x03205B3C BL 0x1C16D6C
	0x03205B40 STR X0, [X19 + 0x18]
	0x03205B44 CBZ X20, 0x3205BAC
	0x03205B48 LDR W12, [X20 + 0x10]
	0x03205B4C CBZ W12, 0x3205B98
	0x03205B50 LDR X9, [X20 + 0x18]
	0x03205B54 MOV X8, X31
	0x03205B58 ADD X10, X0, 0x20
	0x03205B5C ADD X11, X9, 0x20
	0x03205B60 CBZ X9, 0x3205BAC
	0x03205B64 LDR W12, [X9 + 0x18]
	0x03205B68 CMP X8, X12
	0x03205B6C B.CS 0x3205BB0
	0x03205B70 CBZ X0, 0x3205BAC
	0x03205B74 LDR W12, [X0 + 0x18]
	0x03205B78 CMP X8, X12
	0x03205B7C B.CS 0x3205BB0
	0x03205B80 LDR W12, [X11, X8, LSL #2]
	0x03205B84 STR W12, [X10, X8, LSL #2]
	0x03205B88 LDR W12, [X20 + 0x10]
	0x03205B8C ADD X8, X8, 0x1
	0x03205B90 CMP X8, X12
	0x03205B94 B.CC 0x3205B60
	0x03205B98 STR W12, [X19 + 0x10]
	0x03205B9C LDP X20, X19, [X31 + 0x20]
	0x03205BA0 LDP X22, X21, [X31 + 0x10]
	0x03205BA4 LDP X30, X23, [X31], #0x30
	0x03205BA8 RET
	0x03205BAC BL 0x1C16F20
	0x03205BB0 BL 0x1C16F28
	0x03205BB4 STR X30, [X31 - 0x10]!
	0x03205BB8 LDR W10, [X0 + 0x10]
	0x03205BBC CBZ W10, 0x3205BF4
	0x03205BC0 LDR X8, [X0 + 0x18]
	0x03205BC4 CBZ X8, 0x3205C08
	0x03205BC8 LDR W9, [X8 + 0x18]
	0x03205BCC SUB W10, W10, 0x1
	0x03205BD0 CMP W10, W9
	0x03205BD4 B.CS 0x3205C04
	0x03205BD8 ADD X11, X8, W10, 0x2, SXTW
	0x03205BDC LDR W11, [X11 + 0x20]
	0x03205BE0 CBNZ W11, 0x3205BFC
	0x03205BE4 STR W10, [X0 + 0x10]
	0x03205BE8 SUB W10, W10, 0x1
	0x03205BEC ADDS W31, W10, 0x1
	0x03205BF0 B.NE 0x3205BD0
	0x03205BF4 MOVZ W8, 0x1
	0x03205BF8 STR W8, [X0 + 0x10]
	0x03205BFC LDR X30, [X31], #0x10
	0x03205C00 RET
	0x03205C04 BL 0x1C16F28
	0x03205C08 BL 0x1C16F20
	0x03205C0C STR X30, [X31 - 0x30]!
	0x03205C10 STP X22, X21, [X31 + 0x10]
	0x03205C14 STP X20, X19, [X31 + 0x20]
	0x03205C18 ADRP X22, 0x11D7000
	0x03205C1C ADRP X21, 0xF17000
	0x03205C20 LDRB W8, [X22 + 0x245]
	0x03205C24 LDR X21, [X21 + 0xD08]
	0x03205C28 MOV W20, W1
	0x03205C2C MOV X19, X0
	0x03205C30 TBNZ X8, 0x0, 0x3205C48
	0x03205C34 ADRP X0, 0xF17000
	0x03205C38 LDR X0, [X0 + 0xD08]
	0x03205C3C BL 0x1C16CF4
	0x03205C40 MOVZ W8, 0x1
	0x03205C44 STRB W8, [X22 + 0x245]
	0x03205C48 MOVZ W8, 0x1
	0x03205C4C MOV X0, X19
	0x03205C50 MOV X1, X31
	0x03205C54 STR W8, [X19 + 0x10]
	0x03205C58 BL 0x33BDD8C
	0x03205C5C LDR X0, [X21]
	0x03205C60 MOVZ W1, 0x1
	0x03205C64 BL 0x1C16D6C
	0x03205C68 CBZ X0, 0x3205C8C
	0x03205C6C LDR W8, [X0 + 0x18]
	0x03205C70 CBZ W8, 0x3205C90
	0x03205C74 STR W20, [X0 + 0x20]
	0x03205C78 STR X0, [X19 + 0x18]
	0x03205C7C LDP X20, X19, [X31 + 0x20]
	0x03205C80 LDP X22, X21, [X31 + 0x10]
	0x03205C84 LDR X30, [X31], #0x30
	0x03205C88 RET
	0x03205C8C BL 0x1C16F20
	0x03205C90 BL 0x1C16F28
	0x03205C94 STR X30, [X31 - 0x20]!
	0x03205C98 STP X20, X19, [X31 + 0x10]
	0x03205C9C CBZ X0, 0x3205CF8
	0x03205CA0 LDR W8, [X0 + 0x10]
	0x03205CA4 MOV W19, W1
	0x03205CA8 MOV X20, X0
	0x03205CAC CMP W8, 0x1
	0x03205CB0 B.EQ 0x3205CC8
	0x03205CB4 MOV X0, X20
	0x03205CB8 BL 0x3205BB4
	0x03205CBC LDR W8, [X20 + 0x10]
	0x03205CC0 CMP W8, 0x1
	0x03205CC4 B.NE 0x3205CE8
	0x03205CC8 LDR X8, [X20 + 0x18]
	0x03205CCC CBZ X8, 0x3205CF8
	0x03205CD0 LDR W9, [X8 + 0x18]
	0x03205CD4 CBZ W9, 0x3205CFC
	0x03205CD8 LDR W8, [X8 + 0x20]
	0x03205CDC CMP W8, W19
	0x03205CE0 CSET W0, EQ
	0x03205CE4 B 0x3205CEC
	0x03205CE8 MOV W0, W31
	0x03205CEC LDP X20, X19, [X31 + 0x10]
	0x03205CF0 LDR X30, [X31], #0x20
	0x03205CF4 RET
	0x03205CF8 BL 0x1C16F20
	0x03205CFC BL 0x1C16F28
	0x03205D00 STR X30, [X31 - 0x10]!
	0x03205D04 CBZ X0, 0x3205E3C
	0x03205D08 CBZ X1, 0x3205E3C
	0x03205D0C LDR W10, [X0 + 0x10]
	0x03205D10 LDR W9, [X1 + 0x10]
	0x03205D14 MOV W8, W10
	0x03205D18 CBZ W10, 0x3205D40
	0x03205D1C LDR X11, [X0 + 0x18]
	0x03205D20 CBZ X11, 0x3205E3C
	0x03205D24 LDR W12, [X11 + 0x18]
	0x03205D28 SUB W10, W8, 0x1
	0x03205D2C CMP W10, W12
	0x03205D30 B.CS 0x3205E40
	0x03205D34 ADD X11, X11, W10, 0x2, SXTW
	0x03205D38 LDR W11, [X11 + 0x20]
	0x03205D3C CBZ W11, 0x3205D14
	0x03205D40 SUB W10, W8, 0x1
	0x03205D44 MOV W11, W9
	0x03205D48 CBZ W9, 0x3205D70
	0x03205D4C LDR X12, [X1 + 0x18]
	0x03205D50 CBZ X12, 0x3205E3C
	0x03205D54 LDR W13, [X12 + 0x18]
	0x03205D58 SUB W9, W11, 0x1
	0x03205D5C CMP W9, W13
	0x03205D60 B.CS 0x3205E40
	0x03205D64 ADD X12, X12, W9, 0x2, SXTW
	0x03205D68 LDR W12, [X12 + 0x20]
	0x03205D6C CBZ W12, 0x3205D44
	0x03205D70 ORR W9, W11, W8, 0x0
	0x03205D74 CBZ W9, 0x3205D88
	0x03205D78 CMP W8, W11
	0x03205D7C B.CS 0x3205D90
	0x03205D80 MOVN W0, 0x0
	0x03205D84 B 0x3205E34
	0x03205D88 MOV W0, W31
	0x03205D8C B 0x3205E34
	0x03205D90 B.LS 0x3205D9C
	0x03205D94 MOVZ W0, 0x1
	0x03205D98 B 0x3205E34
	0x03205D9C LDR X8, [X0 + 0x18]
	0x03205DA0 MOV W9, W10
	0x03205DA4 CBZ W10, 0x3205DF0
	0x03205DA8 CBZ X8, 0x3205E3C
	0x03205DAC LDR W10, [X8 + 0x18]
	0x03205DB0 CMP W9, W10
	0x03205DB4 B.CS 0x3205E40
	0x03205DB8 LDR X10, [X1 + 0x18]
	0x03205DBC CBZ X10, 0x3205E3C
	0x03205DC0 LDR W11, [X10 + 0x18]
	0x03205DC4 CMP W9, W11
	0x03205DC8 B.CS 0x3205E40
	0x03205DCC MOV W11, W9
	0x03205DD0 ADD X12, X8, X11, 0x2, LSL
	0x03205DD4 ADD X10, X10, X11, 0x2, LSL
	0x03205DD8 LDR W11, [X12 + 0x20]
	0x03205DDC LDR W10, [X10 + 0x20]
	0x03205DE0 CMP W11, W10
	0x03205DE4 SUB W10, W9, 0x1
	0x03205DE8 B.EQ 0x3205DA0
	0x03205DEC B 0x3205DF4
	0x03205DF0 CBZ X8, 0x3205E3C
	0x03205DF4 LDR W10, [X8 + 0x18]
	0x03205DF8 CMP W9, W10
	0x03205DFC B.CS 0x3205E40
	0x03205E00 LDR X10, [X1 + 0x18]
	0x03205E04 CBZ X10, 0x3205E3C
	0x03205E08 LDR W11, [X10 + 0x18]
	0x03205E0C CMP W9, W11
	0x03205E10 B.CS 0x3205E40
	0x03205E14 MOV W9, W9
	0x03205E18 ADD X8, X8, X9, 0x2, LSL
	0x03205E1C ADD X9, X10, X9, 0x2, LSL
	0x03205E20 LDR W8, [X8 + 0x20]
	0x03205E24 LDR W9, [X9 + 0x20]
	0x03205E28 CMP W8, W9
	0x03205E2C B.CC 0x3205D80
	0x03205E30 CSET W0, HI
	0x03205E34 LDR X30, [X31], #0x10
	0x03205E38 RET
	0x03205E3C BL 0x1C16F20
	0x03205E40 BL 0x1C16F28
	0x03205E44 STR X30, [X31 - 0x30]!
	0x03205E48 STP X22, X21, [X31 + 0x10]
	0x03205E4C STP X20, X19, [X31 + 0x20]
	0x03205E50 ADRP X20, 0x11D7000
	0x03205E54 LDRB W8, [X20 + 0x25D]
	0x03205E58 MOV X21, X1
	0x03205E5C MOV X19, X0
	0x03205E60 TBNZ X8, 0x0, 0x3205E78
	0x03205E64 ADRP X0, 0xF1C000
	0x03205E68 LDR X0, [X0 + 0x530]
	0x03205E6C BL 0x1C16CF4
	0x03205E70 MOVZ W8, 0x1
	0x03205E74 STRB W8, [X20 + 0x25D]
	0x03205E78 CBZ X19, 0x3206004
	0x03205E7C ADRP X8, 0xF1C000
	0x03205E80 LDR X8, [X8 + 0x530]
	0x03205E84 LDR W22, [X19 + 0x10]
	0x03205E88 LDR X0, [X8]
	0x03205E8C BL 0x1C16F10
	0x03205E90 MOV W2, W22
	0x03205E94 MOV X20, X0
	0x03205E98 BL 0x32059AC
	0x03205E9C CBZ X20, 0x3206004
	0x03205EA0 CBZ X21, 0x3206004
	0x03205EA4 LDR X11, [X21 + 0x18]
	0x03205EA8 CBZ X11, 0x3206004
	0x03205EAC LDR X8, [X19 + 0x18]
	0x03205EB0 LDR X9, [X20 + 0x18]
	0x03205EB4 LDR W14, [X11 + 0x18]
	0x03205EB8 MOV X10, X31
	0x03205EBC MOV W13, W31
	0x03205EC0 ADD X15, X11, 0x20

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X29
	003 Move [X31+40], X30
	004 Move [X31+48], X28
	005 Move [X31+56], X27
	006 Move [X31+64], X26
	007 Move [X31+72], X25
	008 Move [X31+80], X24
	009 Move [X31+88], X23
	010 Move [X31+96], X22
	011 Move [X31+104], X21
	012 Move [X31+112], X20
	013 Move [X31+120], X19
	014 Move X19, 0x11D8000
	015 Move W8, [X19+574]
	016 Move X20, X1
	017 Move X21, X0
	018 Move [X31+8], X3
	019 Move [X31+16], X2
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {62}
	024 Move X0, 0xF1C000
	025 Move X0, [X0+2968]
	026 Call 0x1C17CF4
	027 Move X0, 0xF1C000
	028 Move X0, [X0+3032]
	029 Call 0x1C17CF4
	030 Move X0, 0xEEF000
	031 Move X0, [X0+3584]
	032 Call 0x1C17CF4
	033 Move X0, 0xEEF000
	034 Move X0, [X0+3608]
	035 Call 0x1C17CF4
	036 Move X0, 0xF1D000
	037 Move X0, [X0+416]
	038 Call 0x1C17CF4
	039 Move X0, 0xF1C000
	040 Move X0, [X0+3248]
	041 Call 0x1C17CF4
	042 Move X0, 0xF1D000
	043 Move X0, [X0+1712]
	044 Call 0x1C17CF4
	045 Move X0, 0xF1D000
	046 Move X0, [X0+1720]
	047 Call 0x1C17CF4
	048 Move X0, 0xF1D000
	049 Move X0, [X0+1728]
	050 Call 0x1C17CF4
	051 Move X0, 0xF1D000
	052 Move X0, [X0+1736]
	053 Call 0x1C17CF4
	054 Move X0, 0xF1D000
	055 Move X0, [X0+1696]
	056 Call 0x1C17CF4
	057 Move X0, 0xF1D000
	058 Move X0, [X0+1744]
	059 Call 0x1C17CF4
	060 Move W8, 1
	061 Move [X19+574], W8
	062 Move [X31+24], X21
	063 Compare X20, 0
	064 JumpIfEqual {172}
	065 Move X8, [X20+56]
	066 Compare X8, 0
	067 JumpIfEqual {172}
	068 Move X28, 0xF1C000
	069 Move X29, 0xF1D000
	070 Move X21, 0xF1D000
	071 Move X19, 0xF1D000
	072 Move X22, 0xF1D000
	073 Move X28, [X28+2968]
	074 Move X29, [X29+1728]
	075 Move X21, [X21+1712]
	076 Move X19, [X19+1720]
	077 Move X22, [X22+1744]
	078 Move W23, W31
	079 Move X24, X31
	080 Move X25, X31
	081 Move X0, [X8+32]
	082 Compare X0, 0
	083 JumpIfEqual {172}
	084 Move X8, [X0]
	085 Move X9, [X8+664]
	086 Move X1, [X8+672]
	087 NotImplemented "Instruction BLR not yet implemented."
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Move X8, [X20+56]
	090 Compare X8, 0
	091 JumpIfEqual {172}
	092 Move X0, [X8+32]
	093 Compare X0, 0
	094 JumpIfEqual {172}
	095 Move X8, [X0]
	096 Move W1, W23
	097 Move X9, [X8+744]
	098 Move X2, [X8+752]
	099 NotImplemented "Instruction BLR not yet implemented."
	100 Compare X0, 0
	101 JumpIfEqual {172}
	102 Move X8, [X0]
	103 Move X1, [X28]
	104 Move X26, X0
	105 Move W10, [X8+304]
	106 Move W9, [X1+304]
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Move X8, [X8+200]
	109 Add X8, X8, X9
	110 NotImplemented "Instruction LDUR not yet implemented."
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Move X0, X26
	113 Move W1, W31
	114 Move X2, X31
	115 Call ASN1.get_Item, X0, X1
	116 Move X1, X31
	117 Call ASN1Convert.ToOid, X0
	118 Move X1, [X29]
	119 Move X2, X31
	120 Move X27, X0
	121 Call String.op_Equality, X0, X1
	122 Move TEMP, X0
	123 And TEMP, TEMP, 1
	124 Compare TEMP, 1
	125 JumpIfNotEqual {138}
	126 Move W1, 1
	127 Move X0, X26
	128 Move X2, X31
	129 Call ASN1.get_Item, X0, X1
	130 Compare X0, 0
	131 JumpIfEqual {172}
	132 Move W1, W31
	133 Move X2, X31
	134 Call ASN1.get_Item, X0, X1
	135 Move X1, X31
	136 Call ASN1Convert.ToOid, X0
	137 Move X25, X0
	138 Move X1, [X21]
	139 Move X0, X27
	140 Move X2, X31
	141 Call String.op_Equality, X0, X1
	142 Move TEMP, X0
	143 And TEMP, TEMP, 1
	144 Compare TEMP, 1
	145 JumpIfNotEqual {156}
	146 Move W1, 1
	147 Move X0, X26
	148 Move X2, X31
	149 Call ASN1.get_Item, X0, X1
	150 Compare X0, 0
	151 JumpIfEqual {172}
	152 Move W1, W31
	153 Move X2, X31
	154 Call ASN1.get_Item, X0, X1
	155 Move X24, X0
	156 Move X1, [X19]
	157 Move X0, X27
	158 Move X2, X31
	159 Call String.op_Equality, X0, X1
	160 Move TEMP, X0
	161 And TEMP, TEMP, 1
	162 Compare TEMP, 1
	163 JumpIfEqual {168}
	164 Move X1, [X22]
	165 Move X0, X27
	166 Move X2, X31
	167 Call String.op_Equality, X0, X1
	168 Move X8, [X20+56]
	169 Add W23, W23, 1
	170 Compare X8, 0
	171 JumpIfNotEqual {81}
	172 Call 0x1C17F20
	173 Move X8, 0xF1D000
	174 Move X8, [X8+1696]
	175 Move X0, X25
	176 Move X2, X31
	177 Move X1, [X8]
	178 Call String.op_Inequality, X0, X1
	179 Move W8, W31
	180 Compare X24, 0
	181 JumpIfEqual {584}
	182 Move TEMP, X0
	183 And TEMP, TEMP, 1
	184 Compare TEMP, 1
	185 JumpIfEqual {584}
	186 Move X1, [X31+16]
	187 Move X0, X24
	188 Move X2, X31
	189 Call ASN1.CompareValue, X0, X1
	190 Move TEMP, X0
	191 And TEMP, TEMP, 1
	192 Compare TEMP, 1
	193 JumpIfNotEqual {301}
	194 Move X0, [X31+8]
	195 Compare X0, 0
	196 JumpIfEqual {172}
	197 Move X8, [X0]
	198 Move X9, [X8+360]
	199 Move X1, [X8+368]
	200 NotImplemented "Instruction BLR not yet implemented."
	201 Move X8, 0xF1C000
	202 Move X8, [X8+3032]
	203 Move X22, X0
	204 Move X8, [X8]
	205 Move W9, [X8+224]
	206 Compare W9, 0
	207 JumpIfNotEqual {210}
	208 Move X0, X8
	209 Call 0x1C17DFC
	210 Move X0, X22
	211 Move X1, X31
	212 Call CryptoConfig.MapNameToOID, X0
	213 Move X8, [X28]
	214 Move X22, X0
	215 Move X0, X8
	216 Call 0x1C17F10
	217 Move W1, 49
	218 Move X2, X31
	219 Move X23, X0
	220 Call ASN1..ctor, X0, X1
	221 Move X8, [X20+56]
	222 Compare X8, 0
	223 JumpIfEqual {172}
	224 Move X0, [X8+32]
	225 Compare X0, 0
	226 JumpIfEqual {172}
	227 Move X8, [X0]
	228 Move X9, [X8+904]
	229 Move X1, [X8+912]
	230 NotImplemented "Instruction BLR not yet implemented."
	231 Move X25, X0
	232 Compare X0, 0
	233 JumpIfEqual {611}
	234 Move X19, 0xEEF000
	235 Move X19, [X19+3608]
	236 Move X8, [X25]
	237 Move X1, [X19]
	238 NotImplemented "Instruction LDRH not yet implemented."
	239 Compare X9, 0
	240 JumpIfEqual {247}
	241 Move X10, [X8+176]
	242 Add X10, X10, 8
	243 NotImplemented "Instruction LDUR not yet implemented."
	244 NotImplemented "Instruction CMP not yet implemented."
	245 Subtract X9, X9, 1
	246 Add X10, X10, 16
	247 Move X0, X25
	248 Move W2, W31
	249 Call 0x1C5D788
	250 NotImplemented "Instruction LDRSW not yet implemented."
	251 Add X8, X8, X9
	252 Add X0, X8, 312
	253 Move X8, [X0]
	254 Move X1, [X0+8]
	255 Move X0, X25
	256 NotImplemented "Instruction BLR not yet implemented."
	257 Move TEMP, X0
	258 And TEMP, TEMP, 1
	259 Compare TEMP, 1
	260 JumpIfNotEqual {302}
	261 Move X8, [X25]
	262 Move X1, [X19]
	263 NotImplemented "Instruction LDRH not yet implemented."
	264 Compare X9, 0
	265 JumpIfEqual {272}
	266 Move X10, [X8+176]
	267 Add X10, X10, 8
	268 NotImplemented "Instruction LDUR not yet implemented."
	269 NotImplemented "Instruction CMP not yet implemented."
	270 Subtract X9, X9, 1
	271 Add X10, X10, 16
	272 Move W2, 1
	273 Move X0, X25
	274 Call 0x1C5D788
	275 Move W9, [X10]
	276 Add W9, W9, 1
	277 Add X8, X8, W9
	278 Add X0, X8, 312
	279 Move X8, [X0]
	280 Move X1, [X0+8]
	281 Move X0, X25
	282 NotImplemented "Instruction BLR not yet implemented."
	283 Move X8, X0
	284 Compare X0, 0
	285 JumpIfEqual {295}
	286 Move X9, [X8]
	287 Move X1, [X28]
	288 Move W11, [X9+304]
	289 Move W10, [X1+304]
	290 NotImplemented "Instruction CMP not yet implemented."
	291 Move X9, [X9+200]
	292 Add X9, X9, X10
	293 NotImplemented "Instruction LDUR not yet implemented."
	294 NotImplemented "Instruction CMP not yet implemented."
	295 Compare X23, 0
	296 JumpIfEqual {603}
	297 Move X0, X23
	298 Move X1, X8
	299 Move X2, X31
	300 Call ASN1.Add, X0, X1
	301 Move W8, W31
	302 Move X26, X31
	303 Move W19, 12
	304 Move X29, 0xEEF000
	305 Move X29, [X29+3584]
	306 Move X0, X25
	307 Move X1, [X29]
	308 Call 0x1C17E00
	309 Compare X0, 0
	310 JumpIfEqual {333}
	311 Move X8, [X0]
	312 Move X1, [X29]
	313 Move X24, X0
	314 NotImplemented "Instruction LDRH not yet implemented."
	315 Compare X9, 0
	316 JumpIfEqual {323}
	317 Move X10, [X8+176]
	318 Add X10, X10, 8
	319 NotImplemented "Instruction LDUR not yet implemented."
	320 NotImplemented "Instruction CMP not yet implemented."
	321 Subtract X9, X9, 1
	322 Add X10, X10, 16
	323 Move X0, X24
	324 Move W2, W31
	325 Call 0x1C5D788
	326 NotImplemented "Instruction LDRSW not yet implemented."
	327 Add X8, X8, X9
	328 Add X0, X8, 312
	329 Move X8, [X0]
	330 Move X1, [X0+8]
	331 Move X0, X24
	332 NotImplemented "Instruction BLR not yet implemented."
	333 Compare X26, 0
	334 JumpIfNotEqual {612}
	335 NotImplemented "Instruction CMP not yet implemented."
	336 Compare W19, 0
	337 JumpIfNotEqual {584}
	338 Move X19, [X31+8]
	339 Move X8, [X19]
	340 Move X0, X19
	341 Move X9, [X8+600]
	342 Move X1, [X8+608]
	343 NotImplemented "Instruction BLR not yet implemented."
	344 Compare X23, 0
	345 JumpIfEqual {172}
	346 Move X8, [X23]
	347 Move X0, X23
	348 Move X9, [X8+376]
	349 Move X1, [X8+384]
	350 NotImplemented "Instruction BLR not yet implemented."
	351 Move X1, X0
	352 Move X0, X19
	353 Move X2, X31
	354 Call HashAlgorithm.ComputeHash, X0, X1
	355 Move X8, [X20+56]
	356 Compare X8, 0
	357 JumpIfEqual {172}
	358 Move X24, X0
	359 Move X0, X8
	360 Move X1, X31
	361 Call SignerInfo.get_Signature, X0
	362 Move X8, [X20+56]
	363 Compare X8, 0
	364 JumpIfEqual {172}
	365 Move X25, [X8+56]
	366 Move X21, X0
	367 Move X0, X8
	368 Move X1, X31
	369 Call SignerInfo.get_SerialNumber, X0
	370 Move X8, [X31+24]
	371 Move X8, [X8+88]
	372 Compare X8, 0
	373 JumpIfEqual {172}
	374 Move X26, X0
	375 Move X0, X8
	376 Move X1, X31
	377 Call X509CertificateCollection.GetEnumerator, X0
	378 Move X23, X0
	379 Compare X0, 0
	380 JumpIfEqual {614}
	381 Move X19, 0xF1D000
	382 Move X19, [X19+416]
	383 Move X0, X23
	384 Move X1, X31
	385 Call X509CertificateEnumerator.MoveNext, X0
	386 Move TEMP, X0
	387 And TEMP, TEMP, 1
	388 Compare TEMP, 1
	389 JumpIfNotEqual {455}
	390 Move X0, X23
	391 Move X1, X31
	392 Call X509CertificateEnumerator.get_Current, X0
	393 Move X27, X0
	394 Move X1, X25
	395 Move X2, X26
	396 Move X3, X0
	397 Call AuthenticodeDeformatter.CompareIssuerSerial, X0, X1, X2, X3
	398 Move TEMP, X0
	399 And TEMP, TEMP, 1
	400 Compare TEMP, 1
	401 JumpIfNotEqual {383}
	402 Compare X27, 0
	403 JumpIfEqual {607}
	404 Move X8, [X27]
	405 Move X9, [X8+456]
	406 Move X1, [X8+464]
	407 Move X0, X27
	408 NotImplemented "Instruction BLR not yet implemented."
	409 Compare X0, 0
	410 JumpIfEqual {608}
	411 Compare X21, 0
	412 JumpIfEqual {606}
	413 Move W8, [X0+24]
	414 Move W9, [X21+24]
	415 NotImplemented "Instruction CMP not yet implemented."
	416 Move X8, [X31+24]
	417 Move [X8+112], X27
	418 Move X8, [X27]
	419 Move X9, [X8+472]
	420 Move X1, [X8+480]
	421 Move X0, X27
	422 NotImplemented "Instruction BLR not yet implemented."
	423 Compare X0, 0
	424 JumpIfEqual {610}
	425 Move X1, [X19]
	426 Move X8, [X0]
	427 NotImplemented "Instruction CMP not yet implemented."
	428 Move X1, X24
	429 Move X2, X22
	430 Move X3, X21
	431 Move X4, X31
	432 Call RSACryptoServiceProvider.VerifyHash, X0, X1, X2, X3
	433 Move TEMP, X0
	434 And TEMP, TEMP, 1
	435 Compare TEMP, 1
	436 JumpIfNotEqual {383}
	437 Move X19, [X31+24]
	438 Move X0, [X19+136]
	439 Compare X0, 0
	440 JumpIfEqual {617}
	441 Move X1, [X19+88]
	442 Move X2, X31
	443 Call X509Chain.LoadCertificates, X0, X1
	444 Move X0, [X19+136]
	445 Compare X0, 0
	446 JumpIfEqual {618}
	447 Move X1, X27
	448 Move X2, X31
	449 Call X509Chain.Build, X0, X1
	450 Move X9, [X31+24]
	451 And W8, W0, 1
	452 Move X22, X31
	453 Move W19, 15
	454 Move [X9+124], W8
	455 Move X22, X31
	456 Move W19, 15
	457 Move X1, [X29]
	458 Move X0, X23
	459 Call 0x1C17E00
	460 Compare X0, 0
	461 JumpIfEqual {484}
	462 Move X8, [X0]
	463 Move X1, [X29]
	464 Move X23, X0
	465 NotImplemented "Instruction LDRH not yet implemented."
	466 Compare X9, 0
	467 JumpIfEqual {474}
	468 Move X10, [X8+176]
	469 Add X10, X10, 8
	470 NotImplemented "Instruction LDUR not yet implemented."
	471 NotImplemented "Instruction CMP not yet implemented."
	472 Subtract X9, X9, 1
	473 Add X10, X10, 16
	474 Move X0, X23
	475 Move W2, W31
	476 Call 0x1C5D788
	477 NotImplemented "Instruction LDRSW not yet implemented."
	478 Add X8, X8, X9
	479 Add X0, X8, 312
	480 Move X8, [X0]
	481 Move X1, [X0+8]
	482 Move X0, X23
	483 NotImplemented "Instruction BLR not yet implemented."
	484 Compare X22, 0
	485 JumpIfNotEqual {615}
	486 NotImplemented "Instruction CMP not yet implemented."
	487 Compare W19, 0
	488 JumpIfNotEqual {584}
	489 Move X8, [X20+56]
	490 Compare X8, 0
	491 JumpIfEqual {172}
	492 Move X0, [X8+40]
	493 Move X26, [X31+24]
	494 Compare X0, 0
	495 JumpIfEqual {172}
	496 Move X8, [X0]
	497 Move X9, [X8+664]
	498 Move X1, [X8+672]
	499 NotImplemented "Instruction BLR not yet implemented."
	500 Compare W0, 0
	501 JumpIfEqual {576}
	502 Move X8, [X20+56]
	503 Compare X8, 0
	504 JumpIfEqual {172}
	505 Move X19, 0xF1D000
	506 Move X25, 0xF1C000
	507 Move X19, [X19+1736]
	508 Move X25, [X25+3248]
	509 Move W22, W31
	510 Move X0, [X8+40]
	511 Compare X0, 0
	512 JumpIfEqual {172}
	513 Move X8, [X0]
	514 Move X9, [X8+664]
	515 Move X1, [X8+672]
	516 NotImplemented "Instruction BLR not yet implemented."
	517 NotImplemented "Instruction CMP not yet implemented."
	518 Move X8, [X20+56]
	519 Compare X8, 0
	520 JumpIfEqual {172}
	521 Move X0, [X8+40]
	522 Compare X0, 0
	523 JumpIfEqual {172}
	524 Move X8, [X0]
	525 Move W1, W22
	526 Move X9, [X8+744]
	527 Move X2, [X8+752]
	528 NotImplemented "Instruction BLR not yet implemented."
	529 Compare X0, 0
	530 JumpIfEqual {172}
	531 Move X8, [X0]
	532 Move X1, [X28]
	533 Move X23, X0
	534 Move W10, [X8+304]
	535 Move W9, [X1+304]
	536 NotImplemented "Instruction CMP not yet implemented."
	537 Move X8, [X8+200]
	538 Add X8, X8, X9
	539 NotImplemented "Instruction LDUR not yet implemented."
	540 NotImplemented "Instruction CMP not yet implemented."
	541 Move X0, X23
	542 Move W1, W31
	543 Move X2, X31
	544 Call ASN1.get_Item, X0, X1
	545 Move X1, X31
	546 Call ASN1Convert.ToOid, X0
	547 Move X1, [X19]
	548 Move X2, X31
	549 Call String.op_Equality, X0, X1
	550 Move TEMP, X0
	551 And TEMP, TEMP, 1
	552 Compare TEMP, 1
	553 JumpIfNotEqual {572}
	554 Move W1, 1
	555 Move X0, X23
	556 Move X2, X31
	557 Call ASN1.get_Item, X0, X1
	558 Move X8, [X25]
	559 Move X23, X0
	560 Move X0, X8
	561 Call 0x1C17F10
	562 Move X1, X23
	563 Move X2, X31
	564 Move X24, X0
	565 Call SignerInfo..ctor, X0, X1
	566 Move X0, X26
	567 Move X1, X24
	568 Move X2, X21
	569 Call AuthenticodeDeformatter.VerifyCounterSignature, X0, X1, X2
	570 And W8, W0, 1
	571 Move [X26+125], W8
	572 Move X8, [X20+56]
	573 Add W22, W22, 1
	574 Compare X8, 0
	575 JumpIfNotEqual {510}
	576 Move W8, 1
	577 Move [X26+125], W8
	578 Move W8, [X26+124]
	579 Compare W8, 0
	580 JumpIfEqual {584}
	581 Move W8, [X26+125]
	582 NotImplemented "Instruction CMP not yet implemented."
	583 NotImplemented "Instruction CSET not yet implemented."
	584 Move X20, [X31+112]
	585 Move X19, [X31+120]
	586 Move X22, [X31+96]
	587 Move X21, [X31+104]
	588 Move X24, [X31+80]
	589 Move X23, [X31+88]
	590 Move X26, [X31+64]
	591 Move X25, [X31+72]
	592 Move X28, [X31+48]
	593 Move X27, [X31+56]
	594 Move X29, [X31+32]
	595 Move X30, [X31+40]
	596 And W0, W8, 1
	597 Add X31, X31, 128
	598 Return X0
	599 Move X0, X26
	600 Call 0x1C181E0
	601 Move X0, X8
	602 Call 0x1C181E0
	603 Call 0x1C17F20
	604 Move X0, X23
	605 Call 0x1C181E0
	606 Call 0x1C17F20
	607 Call 0x1C17F20
	608 Call 0x1C17F20
	609 Call 0x1C181E0
	610 Call 0x1C17F20
	611 Call 0x1C17F20
	612 Move X0, X26
	613 Call 0x1C17F18
	614 Call 0x1C17F20
	615 Move X0, X22
	616 Call 0x1C17F18
	617 Call 0x1C17F20
	618 Call 0x1C17F20
	619 Move X24, X0
	620 NotImplemented "Instruction CMP not yet implemented."
	621 Move X0, X24
	622 Call 0x3EB2AD0
	623 Move X22, [X0]
	624 Call 0x3EB2AE0
	625 Move W19, W31
	626 Move X22, X31
	627 Move X24, X0
	628 Move X1, [X29]
	629 Move X0, X23
	630 Call 0x1C17E00
	631 Move X19, X0
	632 Compare X0, 0
	633 JumpIfEqual {655}
	634 Move X8, [X19]
	635 Move X1, [X29]
	636 NotImplemented "Instruction LDRH not yet implemented."
	637 Compare X9, 0
	638 JumpIfEqual {645}
	639 Move X10, [X8+176]
	640 Add X10, X10, 8
	641 NotImplemented "Instruction LDUR not yet implemented."
	642 NotImplemented "Instruction CMP not yet implemented."
	643 Subtract X9, X9, 1
	644 Add X10, X10, 16
	645 Move X0, X19
	646 Move W2, W31
	647 Call 0x1C5D788
	648 NotImplemented "Instruction LDRSW not yet implemented."
	649 Add X8, X8, X9
	650 Add X0, X8, 312
	651 Move X8, [X0]
	652 Move X1, [X0+8]
	653 Move X0, X19
	654 NotImplemented "Instruction BLR not yet implemented."
	655 Compare X22, 0
	656 JumpIfEqual {699}
	657 Move X0, X22
	658 Call 0x1C17F18
	659 Move X24, X0
	660 NotImplemented "Instruction CMP not yet implemented."
	661 Move X0, X24
	662 Call 0x3EB2AD0
	663 Move X26, [X0]
	664 Call 0x3EB2AE0
	665 Move W19, W31
	666 Move X26, X31
	667 Move X24, X0
	668 Move X20, 0xEEF000
	669 Move X20, [X20+3584]
	670 Move X1, [X20]
	671 Move X0, X25
	672 Call 0x1C17E00
	673 Move X19, X0
	674 Compare X0, 0
	675 JumpIfEqual {697}
	676 Move X8, [X19]
	677 Move X1, [X20]
	678 NotImplemented "Instruction LDRH not yet implemented."
	679 Compare X9, 0
	680 JumpIfEqual {687}
	681 Move X10, [X8+176]
	682 Add X10, X10, 8
	683 NotImplemented "Instruction LDUR not yet implemented."
	684 NotImplemented "Instruction CMP not yet implemented."
	685 Subtract X9, X9, 1
	686 Add X10, X10, 16
	687 Move X0, X19
	688 Move W2, W31
	689 Call 0x1C5D788
	690 NotImplemented "Instruction LDRSW not yet implemented."
	691 Add X8, X8, X9
	692 Add X0, X8, 312
	693 Move X8, [X0]
	694 Move X1, [X0+8]
	695 Move X0, X19
	696 NotImplemented "Instruction BLR not yet implemented."
	697 Compare X26, 0
	698 JumpIfNotEqual {701}
	699 Move X0, X24
	700 Call 0x1D2D690
	701 Move X0, X26
	702 Call 0x1C17F18
	703 Call 0x1991590

Method: System.Boolean VerifyCounterSignature(Mono.Security.PKCS7/SignerInfo cs, System.Byte[] signature)

Disassembly:
	0x03205FC0 B.EQ 0x3206000
	0x03205FC4 CMP X10, X13
	0x03205FC8 B.EQ 0x3206000
	0x03205FCC LDR W12, [X8, X13, LSL #2]
	0x03205FD0 STR W12, [X9, X13, LSL #2]
	0x03205FD4 LDR W12, [X19 + 0x10]
	0x03205FD8 ADD X13, X13, 0x1
	0x03205FDC CMP X13, X12
	0x03205FE0 B.CC 0x3205FBC
	0x03205FE4 MOV X0, X20
	0x03205FE8 BL 0x3205BB4
	0x03205FEC MOV X0, X20
	0x03205FF0 LDP X20, X19, [X31 + 0x20]
	0x03205FF4 LDP X22, X21, [X31 + 0x10]
	0x03205FF8 LDR X30, [X31], #0x30
	0x03205FFC RET
	0x03206000 BL 0x1C16F28
	0x03206004 BL 0x1C16F20
	0x03206008 STR X30, [X31 - 0x10]!
	0x0320600C CBZ X0, 0x3206068
	0x03206010 LDR W8, [X0 + 0x10]
	0x03206014 CBZ W8, 0x3206058
	0x03206018 LDR X11, [X0 + 0x18]
	0x0320601C CBZ X11, 0x3206068
	0x03206020 LDR W9, [X11 + 0x18]
	0x03206024 MOV X0, X31
	0x03206028 MOV W10, W1
	0x0320602C ADD X11, X11, 0x1C
	0x03206030 SUB X12, X8, 0x1
	0x03206034 CMP X12, X9
	0x03206038 B.CS 0x3206064
	0x0320603C LDR W13, [X11, X8, LSL #2]
	0x03206040 MOV X8, X12
	0x03206044 BFM X13, X0, 0x20, 0x1F
	0x03206048 UDIV X14, X13, X10
	0x0320604C MSUB X0, X14, X10, X13
	0x03206050 CBNZ X12, 0x3206030
	0x03206054 B 0x320605C
	0x03206058 MOV W0, W31
	0x0320605C LDR X30, [X31], #0x10
	0x03206060 RET
	0x03206064 BL 0x1C16F28
	0x03206068 BL 0x1C16F20
	0x0320606C STP X30, X27, [X31 - 0x50]!
	0x03206070 STP X26, X25, [X31 + 0x10]
	0x03206074 STP X24, X23, [X31 + 0x20]
	0x03206078 STP X22, X21, [X31 + 0x30]
	0x0320607C STP X20, X19, [X31 + 0x40]
	0x03206080 ADRP X19, 0x11D6000
	0x03206084 LDRB W8, [X19 + 0x25F]
	0x03206088 MOV X22, X1
	0x0320608C MOV X20, X0
	0x03206090 TBNZ X8, 0x0, 0x32060B4
	0x03206094 ADRP X0, 0xF1B000
	0x03206098 LDR X0, [X0 + 0x6E8]
	0x0320609C BL 0x1C16CF4
	0x032060A0 ADRP X0, 0xF1B000
	0x032060A4 LDR X0, [X0 + 0x530]
	0x032060A8 BL 0x1C16CF4
	0x032060AC MOVZ W8, 0x1
	0x032060B0 STRB W8, [X19 + 0x25F]
	0x032060B4 MOV X0, X20
	0x032060B8 MOV X1, X22
	0x032060BC BL 0x3205D00
	0x032060C0 ADDS W31, W0, 0x1
	0x032060C4 B.EQ 0x320611C
	0x032060C8 CBZ X20, 0x32064C4
	0x032060CC MOV X0, X20
	0x032060D0 BL 0x3205BB4
	0x032060D4 CBZ X22, 0x32064C4
	0x032060D8 MOV X0, X22
	0x032060DC BL 0x3205BB4
	0x032060E0 LDR W26, [X22 + 0x10]
	0x032060E4 SUBS W8, W26, 0x1
	0x032060E8 B.NE 0x32061A0
	0x032060EC LDR X8, [X22 + 0x18]
	0x032060F0 CBZ X8, 0x32064C4
	0x032060F4 LDR W9, [X8 + 0x18]
	0x032060F8 CBZ W9, 0x32064C0
	0x032060FC LDR W1, [X8 + 0x20]
	0x03206100 MOV X0, X20
	0x03206104 LDP X20, X19, [X31 + 0x40]
	0x03206108 LDP X22, X21, [X31 + 0x30]
	0x0320610C LDP X24, X23, [X31 + 0x20]
	0x03206110 LDP X26, X25, [X31 + 0x10]
	0x03206114 LDP X30, X27, [X31], #0x50
	0x03206118 B 0x3208470
	0x0320611C ADRP X8, 0xF1B000
	0x03206120 LDR X8, [X8 + 0x6E8]
	0x03206124 MOVZ W1, 0x2
	0x03206128 LDR X0, [X8]
	0x0320612C BL 0x1C16D6C
	0x03206130 ADRP X21, 0xF1B000
	0x03206134 LDR X21, [X21 + 0x530]
	0x03206138 MOV X22, X0
	0x0320613C LDR X8, [X21]
	0x03206140 LDR W9, [X8 + 0xE0]
	0x03206144 CBNZ W9, 0x3206150
	0x03206148 MOV X0, X8
	0x0320614C BL 0x1C16DFC
	0x03206150 MOV W0, W31
	0x03206154 BL 0x3201A60
	0x03206158 CBZ X22, 0x32064C4
	0x0320615C MOV X19, X0
	0x03206160 CBZ X0, 0x3206178
	0x03206164 LDR X8, [X22]
	0x03206168 MOV X0, X19
	0x0320616C LDR X1, [X8 + 0x40]
	0x03206170 BL 0x1C16E00
	0x03206174 CBZ X0, 0x32064C8
	0x03206178 LDR W8, [X22 + 0x18]
	0x0320617C CBZ W8, 0x32064C0
	0x03206180 STR X19, [X22 + 0x20]
	0x03206184 LDR X0, [X21]
	0x03206188 BL 0x1C16F10
	0x0320618C MOV X1, X20
	0x03206190 MOV X19, X0
	0x03206194 BL 0x3205A20
	0x03206198 CBNZ X19, 0x3206480
	0x0320619C B 0x3206494
	0x032061A0 LDR X9, [X22 + 0x18]
	0x032061A4 CBZ X9, 0x32064C4
	0x032061A8 LDR W10, [X9 + 0x18]
	0x032061AC CMP W8, W10
	0x032061B0 B.CS 0x32064C0
	0x032061B4 LDR W25, [X20 + 0x10]
	0x032061B8 ADD X8, X9, W8, 0x2, SXTW
	0x032061BC LDR W8, [X8 + 0x20]
	0x032061C0 MOV W19, W31
	0x032061C4 SUB W27, W25, W26
	0x032061C8 TBNZ X8, 0x1F, 0x32061E8
	0x032061CC MOVZ W9, 0x80000000
	0x032061D0 UBFM W10, W9, 0x1, 0x1F
	0x032061D4 ADD W19, W19, 0x1
	0x032061D8 CBZ W10, 0x32061E8
	0x032061DC AND W11, W8, W9, 0x1
	0x032061E0 MOV W9, W10
	0x032061E4 CBZ W11, 0x32061D0
	0x032061E8 ADRP X23, 0xF1B000
	0x032061EC LDR X23, [X23 + 0x530]
	0x032061F0 LDR X0, [X23]
	0x032061F4 BL 0x1C16F10
	0x032061F8 ADD W2, W27, 0x1
	0x032061FC MOV X21, X0
	0x03206200 BL 0x32059AC
	0x03206204 LDR X0, [X23]
	0x03206208 LDR W8, [X0 + 0xE0]
	0x0320620C CBNZ W8, 0x3206214
	0x03206210 BL 0x1C16DFC
	0x03206214 MOV X0, X20
	0x03206218 MOV W1, W19
	0x0320621C BL 0x32065FC
	0x03206220 CBZ X0, 0x32064C4
	0x03206224 LDR X24, [X0 + 0x18]
	0x03206228 MOV X20, X0
	0x0320622C MOV X0, X22
	0x03206230 MOV W1, W19
	0x03206234 BL 0x32065FC
	0x03206238 CBZ X0, 0x32064C4
	0x0320623C LDR X11, [X0 + 0x18]
	0x03206240 CBZ X11, 0x32064C4
	0x03206244 LDR W8, [X0 + 0x10]
	0x03206248 LDR X9, [X11 + 0x18]
	0x0320624C SUB W10, W8, 0x1
	0x03206250 CMP W10, W9
	0x03206254 B.CS 0x32064C0
	0x03206258 SUB W12, W8, 0x2
	0x0320625C CMP W12, W9
	0x03206260 B.CS 0x32064C0
	0x03206264 ADD W13, W25, 0x1
	0x03206268 SUB W8, W13, W8
	0x0320626C CMP W8, 0x1
	0x03206270 B.LT 0x32063E4
	0x03206274 CBZ X24, 0x32064C4
	0x03206278 ADD X13, X11, W10, 0x2, SXTW
	0x0320627C ADD X15, X11, W12, 0x2, SXTW
	0x03206280 ADD W14, W26, 0x1
	0x03206284 LDR W10, [X24 + 0x18]
	0x03206288 LDR W12, [X13 + 0x20]
	0x0320628C LDR W13, [X15 + 0x20]
	0x03206290 SXTW X14, W14
	0x03206294 CMP X14, 0x1
	0x03206298 AND X9, X9, 0x0
	0x0320629C ADD X11, X11, 0x20
	0x032062A0 CSINC X15, X14, X31, GT
	0x032062A4 MOV W17, W27
	0x032062A8 MOVZ X16, 0x1
	0x032062AC CMP W25, W10
	0x032062B0 B.CS 0x32064C0
	0x032062B4 SUB W0, W25, 0x1
	0x032062B8 CMP W0, W10
	0x032062BC B.CS 0x32064C0
	0x032062C0 ADD X4, X24, 0x20
	0x032062C4 LDR W3, [X4, W0, SXTW]
	0x032062C8 LDR W1, [X4, W25, SXTW]
	0x032062CC SUB W2, W25, 0x2
	0x032062D0 ADD X4, X4, W2, 0x2, SXTW
	0x032062D4 BFM X3, X1, 0x20, 0x1F
	0x032062D8 UDIV X1, X3, X12
	0x032062DC MSUB X3, X1, X12, X3
	0x032062E0 CMP X1, X16
	0x032062E4 B.EQ 0x3206304
	0x032062E8 CMP W2, W10
	0x032062EC B.CS 0x32064C0
	0x032062F0 LDR W5, [X4]
	0x032062F4 MUL X6, X1, X13
	0x032062F8 BFM X5, X3, 0x20, 0x1F
	0x032062FC CMP X6, X5
	0x03206300 B.LS 0x3206314
	0x03206304 ADD X3, X3, X12
	0x03206308 UBFM X5, X3, 0x20, 0x3F
	0x0320630C SUB X1, X1, 0x1
	0x03206310 CBZ X5, 0x32062E0
	0x03206314 MOV X2, X31
	0x03206318 MOV X3, X31
	0x0320631C AND X4, X1, 0x0
	0x03206320 CMP X9, X2
	0x03206324 B.EQ 0x32064C0
	0x03206328 ADD X5, X17, X2
	0x0320632C CMP W5, W10
	0x03206330 B.CS 0x32064C0
	0x03206334 LDR W6, [X11, X2, LSL #2]
	0x03206338 ADD X5, X24, W5, 0x2, SXTW
	0x0320633C LDR W7, [X5 + 0x20]
	0x03206340 ADD X2, X2, 0x1
	0x03206344 MADD X3, X4, X6, X3
	0x03206348 SUBS W6, W7, W3
	0x0320634C UBFM X3, X3, 0x20, 0x3F
	0x03206350 CINC X3, X3, CC
	0x03206354 CMP X2, X14
	0x03206358 STR W6, [X5 + 0x20]
	0x0320635C B.LT 0x3206320
	0x03206360 CBZ X3, 0x32063AC
	0x03206364 MOV X2, X31
	0x03206368 MOV X3, X31
	0x0320636C SUB W1, W1, 0x1
	0x03206370 ADD X4, X17, X2
	0x03206374 CMP W4, W10
	0x03206378 B.CS 0x32064C0
	0x0320637C CMP X9, X2
	0x03206380 B.EQ 0x32064C0
	0x03206384 ADD X4, X24, W4, 0x2, SXTW
	0x03206388 LDR W5, [X4 + 0x20]!
	0x0320638C LDR W6, [X11, X2, LSL #2]
	0x03206390 ADD X2, X2, 0x1
	0x03206394 CMP X15, X2
	0x03206398 ADD X3, X3, X5
	0x0320639C ADD X3, X3, X6
	0x032063A0 STR W3, [X4]
	0x032063A4 UBFM X3, X3, 0x20, 0x3F
	0x032063A8 B.NE 0x3206370
	0x032063AC CBZ X21, 0x32064C4
	0x032063B0 LDR X2, [X21 + 0x18]
	0x032063B4 CBZ X2, 0x32064C4
	0x032063B8 LDR W3, [X2 + 0x18]
	0x032063BC CMP W17, W3
	0x032063C0 B.CS 0x32064C0
	0x032063C4 SUB W8, W8, 0x1
	0x032063C8 ADD X2, X2, W17, 0x2, SXTW
	0x032063CC SUB X17, X17, 0x1
	0x032063D0 CMP W8, 0x0
	0x032063D4 MOV W25, W0
	0x032063D8 STR W1, [X2 + 0x20]
	0x032063DC B.GT 0x32062AC
	0x032063E0 B 0x32063E8
	0x032063E4 CBZ X21, 0x32064C4
	0x032063E8 MOV X0, X21
	0x032063EC BL 0x3205BB4
	0x032063F0 MOV X0, X20
	0x032063F4 BL 0x3205BB4
	0x032063F8 ADRP X8, 0xF1B000
	0x032063FC LDR X8, [X8 + 0x6E8]
	0x03206400 MOVZ W1, 0x2
	0x03206404 LDR X0, [X8]
	0x03206408 BL 0x1C16D6C
	0x0320640C CBZ X0, 0x32064C4
	0x03206410 LDR X8, [X0]
	0x03206414 MOV X22, X0
	0x03206418 MOV X0, X21
	0x0320641C LDR X1, [X8 + 0x40]
	0x03206420 BL 0x1C16E00
	0x03206424 CBZ X0, 0x32064C8
	0x03206428 LDR W8, [X22 + 0x18]
	0x0320642C CBZ W8, 0x32064C0
	0x03206430 LDR X8, [X22]
	0x03206434 STR X21, [X22 + 0x20]
	0x03206438 MOV X0, X20
	0x0320643C LDR X1, [X8 + 0x40]
	0x03206440 BL 0x1C16E00
	0x03206444 CBZ X0, 0x32064C8
	0x03206448 LDR W8, [X22 + 0x18]
	0x0320644C CMP W8, 0x1
	0x03206450 B.LS 0x32064C0
	0x03206454 STR X20, [X22 + 0x28]
	0x03206458 CBZ W19, 0x32064A4
	0x0320645C LDR X0, [X23]
	0x03206460 LDR W8, [X0 + 0xE0]
	0x03206464 CBNZ W8, 0x320646C
	0x03206468 BL 0x1C16DFC
	0x0320646C MOV X0, X20
	0x03206470 MOV W1, W19
	0x03206474 BL 0x32067E4
	0x03206478 MOV X19, X0
	0x0320647C CBZ X0, 0x3206494
	0x03206480 LDR X8, [X22]
	0x03206484 MOV X0, X19
	0x03206488 LDR X1, [X8 + 0x40]
	0x0320648C BL 0x1C16E00
	0x03206490 CBZ X0, 0x32064C8
	0x03206494 LDR W8, [X22 + 0x18]
	0x03206498 CMP W8, 0x1
	0x0320649C B.LS 0x32064C0
	0x032064A0 STR X19, [X22 + 0x28]
	0x032064A4 MOV X0, X22
	0x032064A8 LDP X20, X19, [X31 + 0x40]
	0x032064AC LDP X22, X21, [X31 + 0x30]
	0x032064B0 LDP X24, X23, [X31 + 0x20]
	0x032064B4 LDP X26, X25, [X31 + 0x10]
	0x032064B8 LDP X30, X27, [X31], #0x50
	0x032064BC RET
	0x032064C0 BL 0x1C16F28
	0x032064C4 BL 0x1C16F20
	0x032064C8 BL 0x1C16F44
	0x032064CC MOV X1, X31
	0x032064D0 BL 0x1C16DEC
	0x032064D4 STR X30, [X31 - 0x10]!
	0x032064D8 BL 0x320606C
	0x032064DC CBZ X0, 0x32064F4
	0x032064E0 LDR W8, [X0 + 0x18]
	0x032064E4 CBZ W8, 0x32064F8
	0x032064E8 LDR X0, [X0 + 0x20]
	0x032064EC LDR X30, [X31], #0x10
	0x032064F0 RET
	0x032064F4 BL 0x1C16F20
	0x032064F8 BL 0x1C16F28
	0x032064FC CBZ X0, 0x3206514
	0x03206500 LDR W8, [X0 + 0x18]
	0x03206504 CBZ W8, 0x3206514
	0x03206508 ADD X8, X0, 0x20
	0x0320650C CBNZ X3, 0x320651C
	0x03206510 B 0x3206530
	0x03206514 MOV X8, X31
	0x03206518 CBZ X3, 0x3206530
	0x0320651C LDR W9, [X3 + 0x18]
	0x03206520 CBZ W9, 0x3206530
	0x03206524 ADD X14, X3, 0x20
	0x03206528 CBNZ X6, 0x3206538
	0x0320652C B 0x3206548
	0x03206530 MOV X14, X31
	0x03206534 CBZ X6, 0x3206548
	0x03206538 LDR W9, [X6 + 0x18]
	0x0320653C CBZ W9, 0x3206548
	0x03206540 ADD X11, X6, 0x20
	0x03206544 B 0x320654C
	0x03206548 MOV X11, X31
	0x0320654C ADD X8, X8, W1, 0x2, UXTW
	0x03206550 ADD X9, X8, W2, 0x2, UXTW
	0x03206554 CMP X8, X9
	0x03206558 B.CS 0x32065F4
	0x0320655C MOV W12, W4
	0x03206560 ADD X10, X14, W4, 0x2, UXTW
	0x03206564 UBFM X15, X12, 0x3E, 0x3D
	0x03206568 ADD X11, X11, W7, 0x2, UXTW
	0x0320656C ADD X12, X10, W5, 0x2, UXTW
	0x03206570 ADD X13, X10, 0x4
	0x03206574 ADD X14, X14, X15
	0x03206578 LDR W15, [X8]
	0x0320657C CBZ W15, 0x32065E4
	0x03206580 CMP X10, X12
	0x03206584 B.CS 0x32065E4
	0x03206588 LDR W17, [X10]
	0x0320658C LDR W0, [X11]
	0x03206590 MOV X16, X11
	0x03206594 CMP X13, X12
	0x03206598 MADD X15, X17, X15, X0
	0x0320659C STR W15, [X16], #0x4
	0x032065A0 UBFM X15, X15, 0x20, 0x3F
	0x032065A4 B.CS 0x32065DC
	0x032065A8 MOVZ W16, 0x4
	0x032065AC LDR W0, [X11, X16, LSL]
	0x032065B0 LDR W17, [X8]
	0x032065B4 LDR W1, [X14, X16, LSL]
	0x032065B8 ADD X15, X15, X0
	0x032065BC MADD X15, X1, X17, X15
	0x032065C0 STR W15, [X11, X16, LSL]
	0x032065C4 ADD X16, X16, 0x4
	0x032065C8 ADD X17, X14, X16
	0x032065CC CMP X17, X12
	0x032065D0 UBFM X15, X15, 0x20, 0x3F
	0x032065D4 B.CC 0x32065AC
	0x032065D8 ADD X16, X11, X16
	0x032065DC CBZ X15, 0x32065E4
	0x032065E0 STR W15, [X16]
	0x032065E4 ADD X8, X8, 0x4
	0x032065E8 CMP X8, X9
	0x032065EC ADD X11, X11, 0x4
	0x032065F0 B.CC 0x3206578
	0x032065F4 RET
	0x032065F8 B 0x32065FC
	0x032065FC STR X30, [X31 - 0x40]!
	0x03206600 STP X24, X23, [X31 + 0x10]
	0x03206604 STP X22, X21, [X31 + 0x20]
	0x03206608 STP X20, X19, [X31 + 0x30]
	0x0320660C ADRP X19, 0x11D6000
	0x03206610 LDRB W8, [X19 + 0x260]
	0x03206614 MOV W21, W1
	0x03206618 MOV X20, X0
	0x0320661C TBNZ X8, 0x0, 0x3206640
	0x03206620 ADRP X0, 0xF1B000
	0x03206624 LDR X0, [X0 + 0x530]
	0x03206628 BL 0x1C16CF4
	0x0320662C ADRP X0, 0xF1B000
	0x03206630 LDR X0, [X0 + 0x6F0]
	0x03206634 BL 0x1C16CF4
	0x03206638 MOVZ W8, 0x1
	0x0320663C STRB W8, [X19 + 0x260]
	0x03206640 ADRP X8, 0xF1B000
	0x03206644 LDR X8, [X8 + 0x530]
	0x03206648 CBZ W21, 0x32066FC
	0x0320664C CBZ X20, 0x32067D8
	0x03206650 LDR X0, [X8]
	0x03206654 LDR W24, [X20 + 0x10]
	0x03206658 SBFM W22, W21, 0x5, 0x1F
	0x0320665C AND W23, W21, 0x1F
	0x03206660 BL 0x1C16F10
	0x03206664 ADD W8, W22, W24
	0x03206668 ADD W2, W8, 0x1
	0x0320666C MOV X19, X0
	0x03206670 BL 0x32059AC
	0x03206674 LDR W8, [X20 + 0x10]
	0x03206678 CBZ W23, 0x3206720
	0x0320667C CBZ W8, 0x320678C
	0x03206680 LDR X12, [X20 + 0x18]
	0x03206684 CBZ X12, 0x32067D8
	0x03206688 LDR W11, [X12 + 0x18]
	0x0320668C SXTW X14, W22
	0x03206690 SUB W13, W31, W21
	0x03206694 UBFM X14, X14, 0x3E, 0x3D
	0x03206698 MOV X10, X31
	0x0320669C MOV W9, W31
	0x032066A0 ADD X12, X12, 0x20
	0x032066A4 AND W13, W13, 0x1F
	0x032066A8 ADD X14, X14, 0x20
	0x032066AC MOV W15, W22
	0x032066B0 CMP X10, X11
	0x032066B4 B.CS 0x32067DC
	0x032066B8 CBZ X19, 0x32067D8
	0x032066BC LDR X16, [X19 + 0x18]
	0x032066C0 CBZ X16, 0x32067D8
	0x032066C4 LDR W17, [X16 + 0x18]
	0x032066C8 ADD W0, W15, W10
	0x032066CC CMP W0, W17
	0x032066D0 B.CS 0x32067DC
	0x032066D4 LDR W17, [X12, X10, LSL #2]
	0x032066D8 ADD X16, X16, X14
	0x032066DC LSLV W0, W17, W23
	0x032066E0 ORR W9, W0, W9, 0x0
	0x032066E4 STR W9, [X16, X10, LSL #2]
	0x032066E8 ADD X10, X10, 0x1
	0x032066EC CMP X8, X10
	0x032066F0 LSRV W9, W17, W13
	0x032066F4 B.NE 0x32066B0
	0x032066F8 B 0x3206798
	0x032066FC CBZ X20, 0x32067D8
	0x03206700 LDR X0, [X8]
	0x03206704 LDR W21, [X20 + 0x10]
	0x03206708 BL 0x1C16F10
	0x0320670C ADD W2, W21, 0x1
	0x03206710 MOV X1, X20
	0x03206714 MOV X19, X0
	0x03206718 BL 0x3205AE0
	0x0320671C B 0x32067C0
	0x03206720 CBZ W8, 0x3206784
	0x03206724 CBZ X19, 0x32067D8
	0x03206728 MOV W11, W22
	0x0320672C LDR X10, [X19 + 0x18]
	0x03206730 SXTW X13, W11
	0x03206734 LDR X11, [X20 + 0x18]
	0x03206738 MOV X9, X31
	0x0320673C ADD X13, X10, X13, 0x2, LSL
	0x03206740 MOV W12, W22
	0x03206744 ADD X13, X13, 0x20
	0x03206748 ADD X14, X11, 0x20
	0x0320674C CBZ X11, 0x32067D8
	0x03206750 LDR W15, [X11 + 0x18]
	0x03206754 CMP X9, X15
	0x03206758 B.CS 0x32067DC
	0x0320675C CBZ X10, 0x32067D8
	0x03206760 LDR W15, [X10 + 0x18]
	0x03206764 ADD W16, W12, W9
	0x03206768 CMP W16, W15
	0x0320676C B.CS 0x32067DC
	0x03206770 LDR W15, [X14, X9, LSL #2]
	0x03206774 STR W15, [X13, X9, LSL #2]
	0x03206778 ADD X9, X9, 0x1
	0x0320677C CMP X8, X9
	0x03206780 B.NE 0x320674C
	0x03206784 CBNZ X19, 0x32067B8
	0x03206788 B 0x32067D8
	0x0320678C CBZ X19, 0x32067D8
	0x03206790 MOV X8, X31
	0x03206794 MOV W9, W31
	0x03206798 LDR X10, [X19 + 0x18]
	0x0320679C CBZ X10, 0x32067D8
	0x032067A0 LDR W11, [X10 + 0x18]
	0x032067A4 ADD X8, X8, W22, SXTW
	0x032067A8 CMP W8, W11
	0x032067AC B.CS 0x32067DC
	0x032067B0 ADD X8, X10, X8, 0x2, LSL
	0x032067B4 STR W9, [X8 + 0x20]
	0x032067B8 MOV X0, X19
	0x032067BC BL 0x3205BB4
	0x032067C0 MOV X0, X19
	0x032067C4 LDP X20, X19, [X31 + 0x30]
	0x032067C8 LDP X22, X21, [X31 + 0x20]
	0x032067CC LDP X24, X23, [X31 + 0x10]
	0x032067D0 LDR X30, [X31], #0x40
	0x032067D4 RET
	0x032067D8 BL 0x1C16F20
	0x032067DC BL 0x1C16F28
	0x032067E0 B 0x32067E4
	0x032067E4 STP X30, X23, [X31 - 0x30]!
	0x032067E8 STP X22, X21, [X31 + 0x10]
	0x032067EC STP X20, X19, [X31 + 0x20]
	0x032067F0 ADRP X19, 0x11D6000
	0x032067F4 LDRB W8, [X19 + 0x261]
	0x032067F8 MOV W20, W1
	0x032067FC MOV X21, X0
	0x03206800 TBNZ X8, 0x0, 0x3206824
	0x03206804 ADRP X0, 0xF1B000
	0x03206808 LDR X0, [X0 + 0x530]
	0x0320680C BL 0x1C16CF4
	0x03206810 ADRP X0, 0xF1B000
	0x03206814 LDR X0, [X0 + 0x6F8]
	0x03206818 BL 0x1C16CF4
	0x0320681C MOVZ W8, 0x1
	0x03206820 STRB W8, [X19 + 0x261]
	0x03206824 ADRP X8, 0xF1B000
	0x03206828 LDR X8, [X8 + 0x530]
	0x0320682C CBZ W20, 0x32068D8
	0x03206830 CBZ X21, 0x3206958
	0x03206834 LDR X0, [X8]
	0x03206838 LDR W23, [X21 + 0x10]
	0x0320683C SBFM W22, W20, 0x5, 0x1F
	0x03206840 BL 0x1C16F10
	0x03206844 SUB W8, W23, W22
	0x03206848 ADD W2, W8, 0x1
	0x0320684C MOV X19, X0
	0x03206850 BL 0x32059AC
	0x03206854 CBZ X19, 0x3206958
	0x03206858 LDR X8, [X19 + 0x18]
	0x0320685C CBZ X8, 0x3206958
	0x03206860 LDR W9, [X8 + 0x18]
	0x03206864 AND W11, W20, 0x1F
	0x03206868 SUB W10, W9, 0x2
	0x0320686C CMP W9, 0x1
	0x03206870 CBZ W11, 0x32068F0
	0x03206874 B.EQ 0x3206938
	0x03206878 LDR X12, [X21 + 0x18]
	0x0320687C CBZ X12, 0x3206958
	0x03206880 LDR W14, [X12 + 0x18]
	0x03206884 SUB W16, W31, W20
	0x03206888 MOV W13, W31
	0x0320688C SXTW X15, W22
	0x03206890 AND W16, W16, 0x1F
	0x03206894 ADD X17, X15, W10, UXTW
	0x03206898 CMP W17, W14
	0x0320689C B.CS 0x3206954
	0x032068A0 CMP W9, 0x1
	0x032068A4 B.LS 0x3206954
	0x032068A8 ADD X17, X12, X17, 0x2, LSL
	0x032068AC LDR W17, [X17 + 0x20]
	0x032068B0 MOV W10, W10
	0x032068B4 ADD X0, X8, X10, 0x2, LSL
	0x032068B8 SUB W10, W10, 0x1
	0x032068BC LSRV W1, W17, W11
	0x032068C0 ORR W13, W1, W13, 0x0
	0x032068C4 ADDS W31, W10, 0x1
	0x032068C8 STR W13, [X0 + 0x20]
	0x032068CC LSLV W13, W17, W16
	0x032068D0 B.NE 0x3206894
	0x032068D4 B 0x3206938
	0x032068D8 LDR X0, [X8]
	0x032068DC BL 0x1C16F10
	0x032068E0 MOV X1, X21
	0x032068E4 MOV X19, X0
	0x032068E8 BL 0x3205A20
	0x032068EC B 0x3206940
	0x032068F0 B.EQ 0x3206938
	0x032068F4 LDR X11, [X21 + 0x18]
	0x032068F8 CBZ X11, 0x3206958
	0x032068FC LDR W12, [X11 + 0x18]
	0x03206900 SXTW X13, W22
	0x03206904 ADD X14, X13, W10, UXTW
	0x03206908 CMP W14, W12
	0x0320690C B.CS 0x3206954
	0x03206910 CMP W9, 0x1
	0x03206914 B.LS 0x3206954
	0x03206918 ADD X14, X11, X14, 0x2, LSL
	0x0320691C LDR W14, [X14 + 0x20]
	0x03206920 MOV W10, W10
	0x03206924 ADD X15, X8, X10, 0x2, LSL
	0x03206928 SUB W10, W10, 0x1
	0x0320692C ADDS W31, W10, 0x1
	0x03206930 STR W14, [X15 + 0x20]
	0x03206934 B.NE 0x3206904
	0x03206938 MOV X0, X19
	0x0320693C BL 0x3205BB4
	0x03206940 MOV X0, X19
	0x03206944 LDP X20, X19, [X31 + 0x20]
	0x03206948 LDP X22, X21, [X31 + 0x10]
	0x0320694C LDP X30, X23, [X31], #0x30
	0x03206950 RET
	0x03206954 BL 0x1C16F28
	0x03206958 BL 0x1C16F20
	0x0320695C STR X30, [X31 - 0x20]!
	0x03206960 STP X20, X19, [X31 + 0x10]
	0x03206964 ADRP X19, 0x11D6000
	0x03206968 ADRP X20, 0xF1B000
	0x0320696C LDRB W8, [X19 + 0x24A]
	0x03206970 LDR X20, [X20 + 0x530]
	0x03206974 TBNZ X8, 0x0, 0x320698C
	0x03206978 ADRP X0, 0xF1B000
	0x0320697C LDR X0, [X0 + 0x530]
	0x03206980 BL 0x1C16CF4
	0x03206984 MOVZ W8, 0x1
	0x03206988 STRB W8, [X19 + 0x24A]
	0x0320698C LDR X8, [X20]
	0x03206990 LDR W9, [X8 + 0xE0]
	0x03206994 CBNZ W9, 0x32069A4
	0x03206998 MOV X0, X8
	0x0320699C BL 0x1C16DFC
	0x032069A0 LDR X8, [X20]
	0x032069A4 LDR X9, [X8 + 0xB8]
	0x032069A8 LDR X9, [X9 + 0x8]

ISIL:
	001 Subtract X31, X31, 240
	002 Move [X31+144], X29
	003 Move [X31+152], X30
	004 Move [X31+160], X28
	005 Move [X31+168], X27
	006 Move [X31+176], X26
	007 Move [X31+184], X25
	008 Move [X31+192], X24
	009 Move [X31+200], X23
	010 Move [X31+208], X22
	011 Move [X31+216], X21
	012 Move [X31+224], X20
	013 Move [X31+232], X19
	014 Move X19, 0x11D8000
	015 Move W8, [X19+575]
	016 Move X22, X2
	017 Move X20, X1
	018 Move X21, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {70}
	023 Move X0, 0xF1C000
	024 Move X0, [X0+2968]
	025 Call 0x1C17CF4
	026 Move X0, 0xEEE000
	027 Move X0, [X0+3584]
	028 Call 0x1C17CF4
	029 Move X0, 0xEEE000
	030 Move X0, [X0+3608]
	031 Call 0x1C17CF4
	032 Move X0, 0xF1B000
	033 Move X0, [X0+3976]
	034 Call 0x1C17CF4
	035 Move X0, 0xF1C000
	036 Move X0, [X0+416]
	037 Call 0x1C17CF4
	038 Move X0, 0xF1C000
	039 Move X0, [X0+1752]
	040 Call 0x1C17CF4
	041 Move X0, 0xF1B000
	042 Move X0, [X0+3352]
	043 Call 0x1C17CF4
	044 Move X0, 0xF1B000
	045 Move X0, [X0+3360]
	046 Call 0x1C17CF4
	047 Move X0, 0xF1C000
	048 Move X0, [X0+1712]
	049 Call 0x1C17CF4
	050 Move X0, 0xF1C000
	051 Move X0, [X0+1760]
	052 Call 0x1C17CF4
	053 Move X0, 0xF1C000
	054 Move X0, [X0+1728]
	055 Call 0x1C17CF4
	056 Move X0, 0xF1B000
	057 Move X0, [X0+3392]
	058 Call 0x1C17CF4
	059 Move X0, 0xF1B000
	060 Move X0, [X0+3408]
	061 Call 0x1C17CF4
	062 Move X0, 0xF1B000
	063 Move X0, [X0+3416]
	064 Call 0x1C17CF4
	065 Move X0, 0xF1B000
	066 Move X0, [X0+3456]
	067 Call 0x1C17CF4
	068 Move W8, 1
	069 Move [X19+575], W8
	070 Compare X20, 0
	071 JumpIfEqual {183}
	072 Move W8, [X20+16]
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move X0, [X20+32]
	075 Move [X31+8], X21
	076 Compare X0, 0
	077 JumpIfEqual {183}
	078 Move X27, 0xF1B000
	079 Move X28, 0xF1C000
	080 Move X29, 0xF1C000
	081 Move X19, 0xF1C000
	082 Move X27, [X27+2968]
	083 Move X28, [X28+1728]
	084 Move X29, [X29+1712]
	085 Move X19, [X19+1760]
	086 Move X24, X31
	087 Move X23, X31
	088 Move W21, W31
	089 Move X8, [X0]
	090 Move X9, [X8+664]
	091 Move X1, [X8+672]
	092 NotImplemented "Instruction BLR not yet implemented."
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Move X0, [X20+32]
	095 Compare X0, 0
	096 JumpIfEqual {183}
	097 Move X8, [X0]
	098 Move W1, W21
	099 Move X9, [X8+744]
	100 Move X2, [X8+752]
	101 NotImplemented "Instruction BLR not yet implemented."
	102 Compare X0, 0
	103 JumpIfEqual {183}
	104 Move X8, [X0]
	105 Move X1, [X27]
	106 Move X25, X0
	107 Move W10, [X8+304]
	108 Move W9, [X1+304]
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Move X8, [X8+200]
	111 Add X8, X8, X9
	112 NotImplemented "Instruction LDUR not yet implemented."
	113 NotImplemented "Instruction CMP not yet implemented."
	114 Move X0, X25
	115 Move W1, W31
	116 Move X2, X31
	117 Call ASN1.get_Item, X0, X1
	118 Move X1, X31
	119 Call ASN1Convert.ToOid, X0
	120 Move X1, [X28]
	121 Move X2, X31
	122 Move X26, X0
	123 Call String.op_Equality, X0, X1
	124 Move TEMP, X0
	125 And TEMP, TEMP, 1
	126 Compare TEMP, 1
	127 JumpIfNotEqual {140}
	128 Move W1, 1
	129 Move X0, X25
	130 Move X2, X31
	131 Call ASN1.get_Item, X0, X1
	132 Compare X0, 0
	133 JumpIfEqual {183}
	134 Move W1, W31
	135 Move X2, X31
	136 Call ASN1.get_Item, X0, X1
	137 Move X1, X31
	138 Call ASN1Convert.ToOid, X0
	139 Move X24, X0
	140 Move X1, [X29]
	141 Move X0, X26
	142 Move X2, X31
	143 Call String.op_Equality, X0, X1
	144 Move TEMP, X0
	145 And TEMP, TEMP, 1
	146 Compare TEMP, 1
	147 JumpIfNotEqual {158}
	148 Move W1, 1
	149 Move X0, X25
	150 Move X2, X31
	151 Call ASN1.get_Item, X0, X1
	152 Compare X0, 0
	153 JumpIfEqual {183}
	154 Move W1, W31
	155 Move X2, X31
	156 Call ASN1.get_Item, X0, X1
	157 Move X23, X0
	158 Move X1, [X19]
	159 Move X0, X26
	160 Move X2, X31
	161 Call String.op_Equality, X0, X1
	162 Move TEMP, X0
	163 And TEMP, TEMP, 1
	164 Compare TEMP, 1
	165 JumpIfNotEqual {179}
	166 Move W1, 1
	167 Move X0, X25
	168 Move X2, X31
	169 Call ASN1.get_Item, X0, X1
	170 Compare X0, 0
	171 JumpIfEqual {183}
	172 Move W1, W31
	173 Move X2, X31
	174 Call ASN1.get_Item, X0, X1
	175 Move X1, X31
	176 Call ASN1Convert.ToDateTime, X0
	177 Move X8, [X31+8]
	178 Move [X8+104], X0
	179 Move X0, [X20+32]
	180 Add W21, W21, 1
	181 Compare X0, 0
	182 JumpIfNotEqual {89}
	183 Call 0x1C17F20
	184 Move X8, 0xF1B000
	185 Move X8, [X8+3456]
	186 Move X0, X24
	187 Move X2, X31
	188 Move X1, [X8]
	189 Call String.op_Inequality, X0, X1
	190 Move W8, W31
	191 Compare X23, 0
	192 JumpIfEqual {324}
	193 Move X28, [X31+8]
	194 Move TEMP, X0
	195 And TEMP, TEMP, 1
	196 Compare TEMP, 1
	197 JumpIfEqual {324}
	198 Move X0, X23
	199 Move X1, X31
	200 Call ASN1.get_Length, X0
	201 NotImplemented "Instruction CMP not yet implemented."
	202 NotImplemented "Instruction CMP not yet implemented."
	203 NotImplemented "Instruction CMP not yet implemented."
	204 NotImplemented "Instruction CMP not yet implemented."
	205 Move X8, 0xF1B000
	206 Move X8, [X8+3416]
	207 NotImplemented "Instruction CMP not yet implemented."
	208 NotImplemented "Instruction CMP not yet implemented."
	209 Move X8, 0xF1B000
	210 Move X8, [X8+3392]
	211 Move X0, X31
	212 Move X8, 0xF1B000
	213 Move X8, [X8+3408]
	214 Move X8, 0xF1B000
	215 Move X8, [X8+3352]
	216 Move X8, 0xF1B000
	217 Move X8, [X8+3360]
	218 Move X0, [X8]
	219 Move X1, X31
	220 Call HashAlgorithm.Create, X0
	221 Compare X0, 0
	222 JumpIfEqual {183}
	223 Move X1, X22
	224 Move X2, X31
	225 Move X21, X0
	226 Call HashAlgorithm.ComputeHash, X0, X1
	227 Move X1, X0
	228 Move X0, X23
	229 Move X2, X31
	230 Call ASN1.CompareValue, X0, X1
	231 Move TEMP, X0
	232 And TEMP, TEMP, 1
	233 Compare TEMP, 1
	234 JumpIfNotEqual {323}
	235 Move X0, X20
	236 Move X1, X31
	237 Call SignerInfo.get_Signature, X0
	238 Move X8, [X27]
	239 Move X22, X0
	240 Move X0, X8
	241 Call 0x1C17F10
	242 Move W1, 49
	243 Move X2, X31
	244 Move X23, X0
	245 Call ASN1..ctor, X0, X1
	246 Move X0, [X20+32]
	247 Compare X0, 0
	248 JumpIfEqual {183}
	249 Move X8, [X0]
	250 Move X9, [X8+904]
	251 Move X1, [X8+912]
	252 NotImplemented "Instruction BLR not yet implemented."
	253 Move X25, X0
	254 Compare X0, 0
	255 JumpIfEqual {568}
	256 Move X19, 0xEEE000
	257 Move X19, [X19+3608]
	258 Move X8, [X25]
	259 Move X1, [X19]
	260 NotImplemented "Instruction LDRH not yet implemented."
	261 Compare X9, 0
	262 JumpIfEqual {269}
	263 Move X10, [X8+176]
	264 Add X10, X10, 8
	265 NotImplemented "Instruction LDUR not yet implemented."
	266 NotImplemented "Instruction CMP not yet implemented."
	267 Subtract X9, X9, 1
	268 Add X10, X10, 16
	269 Move X0, X25
	270 Move W2, W31
	271 Call 0x1C5D788
	272 NotImplemented "Instruction LDRSW not yet implemented."
	273 Add X8, X8, X9
	274 Add X0, X8, 312
	275 Move X8, [X0]
	276 Move X1, [X0+8]
	277 Move X0, X25
	278 NotImplemented "Instruction BLR not yet implemented."
	279 Move TEMP, X0
	280 And TEMP, TEMP, 1
	281 Compare TEMP, 1
	282 JumpIfNotEqual {339}
	283 Move X8, [X25]
	284 Move X1, [X19]
	285 NotImplemented "Instruction LDRH not yet implemented."
	286 Compare X9, 0
	287 JumpIfEqual {294}
	288 Move X10, [X8+176]
	289 Add X10, X10, 8
	290 NotImplemented "Instruction LDUR not yet implemented."
	291 NotImplemented "Instruction CMP not yet implemented."
	292 Subtract X9, X9, 1
	293 Add X10, X10, 16
	294 Move W2, 1
	295 Move X0, X25
	296 Call 0x1C5D788
	297 Move W9, [X10]
	298 Add W9, W9, 1
	299 Add X8, X8, W9
	300 Add X0, X8, 312
	301 Move X8, [X0]
	302 Move X1, [X0+8]
	303 Move X0, X25
	304 NotImplemented "Instruction BLR not yet implemented."
	305 Move X8, X0
	306 Compare X0, 0
	307 JumpIfEqual {317}
	308 Move X9, [X8]
	309 Move X1, [X27]
	310 Move W11, [X9+304]
	311 Move W10, [X1+304]
	312 NotImplemented "Instruction CMP not yet implemented."
	313 Move X9, [X9+200]
	314 Add X9, X9, X10
	315 NotImplemented "Instruction LDUR not yet implemented."
	316 NotImplemented "Instruction CMP not yet implemented."
	317 Compare X23, 0
	318 JumpIfEqual {560}
	319 Move X0, X23
	320 Move X1, X8
	321 Move X2, X31
	322 Call ASN1.Add, X0, X1
	323 Move W8, W31
	324 Move X20, [X31+224]
	325 Move X19, [X31+232]
	326 Move X22, [X31+208]
	327 Move X21, [X31+216]
	328 Move X24, [X31+192]
	329 Move X23, [X31+200]
	330 Move X26, [X31+176]
	331 Move X25, [X31+184]
	332 Move X28, [X31+160]
	333 Move X27, [X31+168]
	334 Move X29, [X31+144]
	335 Move X30, [X31+152]
	336 And W0, W8, 1
	337 Add X31, X31, 240
	338 Return X0
	339 Move X26, X31
	340 Move W19, 21
	341 Move X8, 0xEEE000
	342 Move X8, [X8+3584]
	343 Move X0, X25
	344 Move X1, [X8]
	345 Move X29, X8
	346 Call 0x1C17E00
	347 Compare X0, 0
	348 JumpIfEqual {371}
	349 Move X8, [X0]
	350 Move X1, [X29]
	351 Move X24, X0
	352 NotImplemented "Instruction LDRH not yet implemented."
	353 Compare X9, 0
	354 JumpIfEqual {361}
	355 Move X10, [X8+176]
	356 Add X10, X10, 8
	357 NotImplemented "Instruction LDUR not yet implemented."
	358 NotImplemented "Instruction CMP not yet implemented."
	359 Subtract X9, X9, 1
	360 Add X10, X10, 16
	361 Move X0, X24
	362 Move W2, W31
	363 Call 0x1C5D788
	364 NotImplemented "Instruction LDRSW not yet implemented."
	365 Add X8, X8, X9
	366 Add X0, X8, 312
	367 Move X8, [X0]
	368 Move X1, [X0+8]
	369 Move X0, X24
	370 NotImplemented "Instruction BLR not yet implemented."
	371 Compare X26, 0
	372 JumpIfNotEqual {569}
	373 NotImplemented "Instruction CMP not yet implemented."
	374 Compare W19, 0
	375 JumpIfNotEqual {324}
	376 Compare X23, 0
	377 JumpIfEqual {183}
	378 Move X8, [X23]
	379 Move X0, X23
	380 Move X9, [X8+376]
	381 Move X1, [X8+384]
	382 NotImplemented "Instruction BLR not yet implemented."
	383 Move X1, X0
	384 Move X0, X21
	385 Move X2, X31
	386 Call HashAlgorithm.ComputeHash, X0, X1
	387 Move X23, [X20+56]
	388 Move X24, X0
	389 Move X0, X20
	390 Move X1, X31
	391 Call SignerInfo.get_SerialNumber, X0
	392 Move X8, [X28+88]
	393 Compare X8, 0
	394 JumpIfEqual {183}
	395 Move X25, X0
	396 Move X0, X8
	397 Move X1, X31
	398 Call X509CertificateCollection.GetEnumerator, X0
	399 Move X20, X0
	400 Compare X0, 0
	401 JumpIfEqual {571}
	402 Move X19, 0xF1B000
	403 Move X19, [X19+3976]
	404 Move X0, X20
	405 Move X1, X31
	406 Call X509CertificateEnumerator.MoveNext, X0
	407 Move TEMP, X0
	408 And TEMP, TEMP, 1
	409 Compare TEMP, 1
	410 JumpIfNotEqual {522}
	411 Move X0, X20
	412 Move X1, X31
	413 Call X509CertificateEnumerator.get_Current, X0
	414 Move X26, X0
	415 Move X1, X23
	416 Move X2, X25
	417 Move X3, X0
	418 Call AuthenticodeDeformatter.CompareIssuerSerial, X0, X1, X2, X3
	419 Move TEMP, X0
	420 And TEMP, TEMP, 1
	421 Compare TEMP, 1
	422 JumpIfNotEqual {404}
	423 Compare X26, 0
	424 JumpIfEqual {562}
	425 Move X8, [X26]
	426 Move X9, [X8+456]
	427 Move X1, [X8+464]
	428 Move X0, X26
	429 NotImplemented "Instruction BLR not yet implemented."
	430 Compare X0, 0
	431 JumpIfEqual {563}
	432 Compare X22, 0
	433 JumpIfEqual {561}
	434 Move W8, [X0+24]
	435 Move W9, [X22+24]
	436 NotImplemented "Instruction CMP not yet implemented."
	437 Move X8, [X26]
	438 Move X9, [X8+472]
	439 Move X1, [X8+480]
	440 Move X0, X26
	441 NotImplemented "Instruction BLR not yet implemented."
	442 Move X28, X0
	443 Compare X0, 0
	444 JumpIfEqual {450}
	445 Move X8, 0xF1C000
	446 Move X8, [X8+416]
	447 Move X1, [X8]
	448 Move X8, [X28]
	449 NotImplemented "Instruction CMP not yet implemented."
	450 Move X8, 0xF1C000
	451 Move X8, [X8+1752]
	452 Move X0, [X8]
	453 Call 0x1C17F10
	454 Move X27, X0
	455 Move W1, 1024
	456 Call RSAManaged..ctor, X0, X1
	457 Compare X28, 0
	458 JumpIfEqual {565}
	459 Move X8, [X28]
	460 Move X9, [X8+488]
	461 Move X2, [X8+496]
	462 Add X8, X31, 80
	463 Move X0, X28
	464 Move W1, W31
	465 NotImplemented "Instruction BLR not yet implemented."
	466 Move V0, [X31+80]
	467 Move V1, [X31+96]
	468 Move V2, [X31+112]
	469 Move V3, [X31+128]
	470 Move X28, [X31+8]
	471 Move [X31+16], V0
	472 Move [X31+24], V1
	473 Move [X31+48], V2
	474 Move [X31+56], V3
	475 Compare X27, 0
	476 JumpIfEqual {564}
	477 Move X8, [X27]
	478 Move V0, [X31+16]
	479 Move V1, [X31+32]
	480 Move V2, [X31+48]
	481 Move V3, [X31+64]
	482 Move X9, [X8+504]
	483 Move [X31+80], V0
	484 Move [X31+88], V1
	485 Move [X31+112], V2
	486 Move [X31+120], V3
	487 Move X2, [X8+512]
	488 Add X1, X31, 80
	489 Move X0, X27
	490 NotImplemented "Instruction BLR not yet implemented."
	491 Move X0, [X19]
	492 Move W8, [X0+224]
	493 Compare W8, 0
	494 JumpIfNotEqual {496}
	495 Call 0x1C17DFC
	496 Move W4, 1
	497 Move X0, X27
	498 Move X1, X21
	499 Move X2, X24
	500 Move X3, X22
	501 Call PKCS1.Verify_v15, X0, X1, X2, X3, X4
	502 Move TEMP, X0
	503 And TEMP, TEMP, 1
	504 Compare TEMP, 1
	505 JumpIfNotEqual {404}
	506 Move X0, [X28+144]
	507 Compare X0, 0
	508 JumpIfEqual {574}
	509 Move X1, [X28+88]
	510 Move X2, X31
	511 Call X509Chain.LoadCertificates, X0, X1
	512 Move X0, [X28+144]
	513 Compare X0, 0
	514 JumpIfEqual {575}
	515 Move X1, X26
	516 Move X2, X31
	517 Move X26, X29
	518 Call X509Chain.Build, X0, X1
	519 Move W21, W0
	520 Move X19, X31
	521 Move W22, 1
	522 Move X26, X29
	523 Move X19, X31
	524 Move W22, W31
	525 Move W21, W31
	526 Move X1, [X26]
	527 Move X0, X20
	528 Call 0x1C17E00
	529 Compare X0, 0
	530 JumpIfEqual {553}
	531 Move X8, [X0]
	532 Move X1, [X26]
	533 Move X20, X0
	534 NotImplemented "Instruction LDRH not yet implemented."
	535 Compare X9, 0
	536 JumpIfEqual {543}
	537 Move X10, [X8+176]
	538 Add X10, X10, 8
	539 NotImplemented "Instruction LDUR not yet implemented."
	540 NotImplemented "Instruction CMP not yet implemented."
	541 Subtract X9, X9, 1
	542 Add X10, X10, 16
	543 Move X0, X20
	544 Move W2, W31
	545 Call 0x1C5D788
	546 NotImplemented "Instruction LDRSW not yet implemented."
	547 Add X8, X8, X9
	548 Add X0, X8, 312
	549 Move X8, [X0]
	550 Move X1, [X0+8]
	551 Move X0, X20
	552 NotImplemented "Instruction BLR not yet implemented."
	553 Compare X19, 0
	554 JumpIfNotEqual {572}
	555 And W8, W22, W21
	556 Move X0, X25
	557 Call 0x1C181E0
	558 Move X0, X8
	559 Call 0x1C181E0
	560 Call 0x1C17F20
	561 Call 0x1C17F20
	562 Call 0x1C17F20
	563 Call 0x1C17F20
	564 Call 0x1C17F20
	565 Call 0x1C17F20
	566 Move X0, X28
	567 Call 0x1C181E0
	568 Call 0x1C17F20
	569 Move X0, X26
	570 Call 0x1C17F18
	571 Call 0x1C17F20
	572 Move X0, X19
	573 Call 0x1C17F18
	574 Call 0x1C17F20
	575 Call 0x1C17F20
	576 Move X24, X0
	577 NotImplemented "Instruction CMP not yet implemented."
	578 Move X0, X24
	579 Call 0x3EB2AD0
	580 Move X19, [X0]
	581 Call 0x3EB2AE0
	582 Move W22, W31
	583 Move W21, W31
	584 Move X26, X29
	585 Move X19, X31
	586 Move X24, X0
	587 Move X1, [X29]
	588 Move X0, X20
	589 Call 0x1C17E00
	590 Move X20, X0
	591 Compare X0, 0
	592 JumpIfEqual {614}
	593 Move X8, [X20]
	594 Move X1, [X29]
	595 NotImplemented "Instruction LDRH not yet implemented."
	596 Compare X9, 0
	597 JumpIfEqual {604}
	598 Move X10, [X8+176]
	599 Add X10, X10, 8
	600 NotImplemented "Instruction LDUR not yet implemented."
	601 NotImplemented "Instruction CMP not yet implemented."
	602 Subtract X9, X9, 1
	603 Add X10, X10, 16
	604 Move X0, X20
	605 Move W2, W31
	606 Call 0x1C5D788
	607 NotImplemented "Instruction LDRSW not yet implemented."
	608 Add X8, X8, X9
	609 Add X0, X8, 312
	610 Move X8, [X0]
	611 Move X1, [X0+8]
	612 Move X0, X20
	613 NotImplemented "Instruction BLR not yet implemented."
	614 Compare X19, 0
	615 JumpIfEqual {659}
	616 Move X0, X19
	617 Call 0x1C17F18
	618 Move X24, X0
	619 NotImplemented "Instruction CMP not yet implemented."
	620 Move X0, X24
	621 Call 0x3EB2AD0
	622 Move X26, [X0]
	623 Call 0x3EB2AE0
	624 Move X28, [X31+8]
	625 Move W19, W31
	626 Move X26, X31
	627 Move X24, X0
	628 Move X20, 0xEEE000
	629 Move X20, [X20+3584]
	630 Move X1, [X20]
	631 Move X0, X25
	632 Call 0x1C17E00
	633 Move X19, X0
	634 Compare X0, 0
	635 JumpIfEqual {657}
	636 Move X8, [X19]
	637 Move X1, [X20]
	638 NotImplemented "Instruction LDRH not yet implemented."
	639 Compare X9, 0
	640 JumpIfEqual {647}
	641 Move X10, [X8+176]
	642 Add X10, X10, 8
	643 NotImplemented "Instruction LDUR not yet implemented."
	644 NotImplemented "Instruction CMP not yet implemented."
	645 Subtract X9, X9, 1
	646 Add X10, X10, 16
	647 Move X0, X19
	648 Move W2, W31
	649 Call 0x1C5D788
	650 NotImplemented "Instruction LDRSW not yet implemented."
	651 Add X8, X8, X9
	652 Add X0, X8, 312
	653 Move X8, [X0]
	654 Move X1, [X0+8]
	655 Move X0, X19
	656 NotImplemented "Instruction BLR not yet implemented."
	657 Compare X26, 0
	658 JumpIfNotEqual {661}
	659 Move X0, X24
	660 Call 0x1D2D690
	661 Move X0, X26
	662 Call 0x1C17F18
	663 Call 0x1991590

Method: System.Void Reset()

Disassembly:
	0x032050F0 MOV X23, X31
	0x032050F4 MOV W21, W31
	0x032050F8 LDR X8, [X0]
	0x032050FC LDR X9, [X8 + 0x298]
	0x03205100 LDR X1, [X8 + 0x2A0]
	0x03205104 BLR X9
	0x03205108 CMP W21, W0
	0x0320510C B.GE 0x320524C
	0x03205110 LDR X0, [X20 + 0x20]
	0x03205114 CBZ X0, 0x3205248
	0x03205118 LDR X8, [X0]
	0x0320511C MOV W1, W21
	0x03205120 LDR X9, [X8 + 0x2E8]
	0x03205124 LDR X2, [X8 + 0x2F0]
	0x03205128 BLR X9
	0x0320512C CBZ X0, 0x3205248
	0x03205130 LDR X8, [X0]
	0x03205134 LDR X1, [X27]
	0x03205138 MOV X25, X0
	0x0320513C LDRB W10, [X8 + 0x130]
	0x03205140 LDRB W9, [X1 + 0x130]
	0x03205144 CMP W10, W9
	0x03205148 B.CC 0x320578C
	0x0320514C LDR X8, [X8 + 0xC8]
	0x03205150 ADD X8, X8, X9, 0x3, LSL
	0x03205154 LDUR X8, [X8 - 0x8]
	0x03205158 CMP X8, X1
	0x0320515C B.NE 0x320578C
	0x03205160 MOV X0, X25
	0x03205164 MOV W1, W31
	0x03205168 MOV X2, X31
	0x0320516C BL 0x31E8704
	0x03205170 MOV X1, X31
	0x03205174 BL 0x31E909C
	0x03205178 LDR X1, [X28]
	0x0320517C MOV X2, X31
	0x03205180 MOV X26, X0
	0x03205184 BL 0x321BA08
	0x03205188 TBZ X0, 0x0, 0x32051BC
	0x0320518C MOVZ W1, 0x1
	0x03205190 MOV X0, X25

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x11D8000
	005 Move W8, [X20+576]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xEF0000
	012 Move X0, [X0+2544]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+576], W8
	016 Move X0, [X19+136]
	017 Move TEMP, 0
	018 Not TEMP
	019 Move W8, TEMP
	020 Move [X19+128], X31
	021 Move [X19+96], X31
	022 Move [X19+112], X31
	023 Move [X19+72], X31
	024 Move [X19+80], X31
	025 Move [X19+64], X31
	026 Move [X19+120], W8
	027 NotImplemented "Instruction STRH not yet implemented."
	028 Compare X0, 0
	029 JumpIfEqual {52}
	030 Move X1, X31
	031 Call X509Chain.Reset, X0
	032 Move X0, [X19+144]
	033 Compare X0, 0
	034 JumpIfEqual {52}
	035 Move X20, 0xEF0000
	036 Move X20, [X20+2544]
	037 Move X1, X31
	038 Call X509Chain.Reset, X0
	039 Move X0, [X20]
	040 Move W8, [X0+224]
	041 Compare W8, 0
	042 JumpIfNotEqual {45}
	043 Call 0x1C17DFC
	044 Move X0, [X20]
	045 Move X8, [X0+184]
	046 Move X8, [X8+16]
	047 Move [X19+104], X8
	048 Move X20, [X31+16]
	049 Move X19, [X31+24]
	050 Move X30, [X31+32]
	051 Return 
	052 Call 0x1C17F20

