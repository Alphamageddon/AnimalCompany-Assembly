Type: Mono.Security.Cryptography.MD4

Method: System.Void .ctor()

Disassembly:
	0x031FF390 MOV X0, X8
	0x031FF394 BL 0x1C16DFC
	0x031FF398 MOV X0, X23
	0x031FF39C BL 0x31FF238
	0x031FF3A0 LDR X8, [X20]
	0x031FF3A4 MOV X1, X0
	0x031FF3A8 MOV X0, X20
	0x031FF3AC LDP X9, X2, [X8 + 0x1D8]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X1, X31
	004 Move X19, X0
	005 Call HashAlgorithm..ctor, X0
	006 Move W8, 128
	007 Move [X19+20], W8
	008 Move X30, [X31+16]
	009 Move X19, [X31+24]
	010 Return 

Method: Mono.Security.Cryptography.MD4 Create()

Disassembly:
	0x031FF3B0 BLR X9
	0x031FF3B4 MOV W1, W24
	0x031FF3B8 BL 0x31FF1AC
	0x031FF3BC MOV X20, X0
	0x031FF3C0 MOV X0, X22
	0x031FF3C4 MOV X1, X19
	0x031FF3C8 MOV W2, W24
	0x031FF3CC BL 0x31FF4EC
	0x031FF3D0 MOV X1, X20
	0x031FF3D4 BL 0x31FF120
	0x031FF3D8 TBNZ X0, 0x0, 0x31FF46C
	0x031FF3DC TBZ X21, 0x0, 0x31FF46C
	0x031FF3E0 CBZ X20, 0x31FF4E8
	0x031FF3E4 LDR W8, [X20 + 0x18]
	0x031FF3E8 CBZ W8, 0x31FF4E4
	0x031FF3EC LDRB W9, [X20 + 0x20]
	0x031FF3F0 CBNZ W9, 0x31FF468
	0x031FF3F4 CMP W8, 0x1
	0x031FF3F8 B.LS 0x31FF4E4
	0x031FF3FC LDRB W9, [X20 + 0x21]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x11DE000
	005 Move X20, 0xF23000
	006 Move W8, [X19+534]
	007 Move X20, [X20+1056]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xF23000
	013 Move X0, [X0+1056]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+534], W8
	017 Move X0, [X20]
	018 Call 0x1C17F10
	019 Move X19, X0
	020 Call MD4Managed..ctor, X0
	021 Move X0, X19
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X30, [X31+32]
	025 Return X0

