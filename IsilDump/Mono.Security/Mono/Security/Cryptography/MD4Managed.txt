Type: Mono.Security.Cryptography.MD4Managed

Method: System.Void .ctor()

Disassembly:
	0x031FF400 CMP W9, 0x1
	0x031FF404 B.NE 0x31FF468
	0x031FF408 CBZ X19, 0x31FF4E8
	0x031FF40C LDR W1, [X19 + 0x18]
	0x031FF410 MOVZ W9, 0x2
	0x031FF414 ORN W10, W31, W1, 0x0
	0x031FF418 ADD W10, W10, W8
	0x031FF41C CMP W10, 0x2
	0x031FF420 CSEL W22, W10, W9, GT
	0x031FF424 CMP W10, 0x3
	0x031FF428 B.LT 0x31FF454
	0x031FF42C MOVZ W9, 0x2
	0x031FF430 CMP W8, W9
	0x031FF434 B.EQ 0x31FF4E4
	0x031FF438 ADD X10, X20, W9, SXTW
	0x031FF43C LDRB W10, [X10 + 0x20]
	0x031FF440 CMP W10, 0xFF
	0x031FF444 B.NE 0x31FF468
	0x031FF448 ADD W9, W9, 0x1
	0x031FF44C CMP W22, W9
	0x031FF450 B.NE 0x31FF430
	0x031FF454 CMP W22, W8
	0x031FF458 B.CS 0x31FF4E4
	0x031FF45C ADD X8, X20, W22, UXTW
	0x031FF460 LDRB W8, [X8 + 0x20]
	0x031FF464 CBZ W8, 0x31FF484
	0x031FF468 MOV W0, W31
	0x031FF46C LDP X20, X19, [X31 + 0x30]
	0x031FF470 LDP X22, X21, [X31 + 0x20]
	0x031FF474 LDP X24, X23, [X31 + 0x10]
	0x031FF478 AND W0, W0, 0x1
	0x031FF47C LDP X30, X25, [X31], #0x40
	0x031FF480 RET
	0x031FF484 ADRP X8, 0xEF4000
	0x031FF488 LDR X8, [X8 + 0x618]
	0x031FF48C LDR X0, [X8]
	0x031FF490 BL 0x1C16D6C
	0x031FF494 CBZ X0, 0x31FF4E8
	0x031FF498 LDR W4, [X0 + 0x18]
	0x031FF49C MOV X21, X0
	0x031FF4A0 ADD W1, W22, 0x1
	0x031FF4A4 MOV X0, X20
	0x031FF4A8 MOV X2, X21
	0x031FF4AC MOV W3, W31
	0x031FF4B0 MOV X5, X31
	0x031FF4B4 BL 0x33A8A9C
	0x031FF4B8 LDR X0, [X25]
	0x031FF4BC LDR W8, [X0 + 0xE0]
	0x031FF4C0 CBNZ W8, 0x31FF4C8
	0x031FF4C4 BL 0x1C16DFC
	0x031FF4C8 MOV X0, X21
	0x031FF4CC MOV X1, X19

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x11DE000
	007 Move X20, 0xF1E000
	008 Move X21, 0xEF5000
	009 Move W8, [X22+535]
	010 Move X20, [X20+3336]
	011 Move X21, [X21+1560]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0xEF5000
	018 Move X0, [X0+1560]
	019 Call 0x1C17CF4
	020 Move X0, 0xF1E000
	021 Move X0, [X0+3336]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+535], W8
	025 Move X0, X19
	026 Move X1, X31
	027 Call HashAlgorithm..ctor, X0
	028 Move W8, 128
	029 Move [X19+20], W8
	030 Move X0, [X20]
	031 Move W1, 4
	032 Call 0x1C17D6C
	033 Move [X19+40], X0
	034 Move X0, [X20]
	035 Move W1, 2
	036 Call 0x1C17D6C
	037 Move [X19+56], X0
	038 Move X0, [X21]
	039 Move W1, 64
	040 Call 0x1C17D6C
	041 Move [X19+48], X0
	042 Move X0, [X21]
	043 Move W1, 16
	044 Call 0x1C17D6C
	045 Move [X19+72], X0
	046 Move X0, [X20]
	047 Move W1, 16
	048 Call 0x1C17D6C
	049 Move X8, [X19]
	050 Move [X19+64], X0
	051 Move X0, X19
	052 Move X20, [X31+32]
	053 Move X19, [X31+40]
	054 Move X2, [X8+600]
	055 Move X1, [X8+608]
	056 Move X22, [X31+16]
	057 Move X21, [X31+24]
	058 Move X30, [X31+48]
	059 CallNoReturn X2

Method: System.Void Initialize()

Disassembly:
	0x031FF4D0 LDP X20, X19, [X31 + 0x30]
	0x031FF4D4 LDP X22, X21, [X31 + 0x20]
	0x031FF4D8 LDP X24, X23, [X31 + 0x10]
	0x031FF4DC LDP X30, X25, [X31], #0x40
	0x031FF4E0 B 0x31FF120
	0x031FF4E4 BL 0x1C16F28
	0x031FF4E8 BL 0x1C16F20
	0x031FF4EC STR X30, [X31 - 0x40]!
	0x031FF4F0 STP X24, X23, [X31 + 0x10]
	0x031FF4F4 STP X22, X21, [X31 + 0x20]
	0x031FF4F8 STP X20, X19, [X31 + 0x30]
	0x031FF4FC ADRP X22, 0x11DD000
	0x031FF500 LDRB W8, [X22 + 0x21D]
	0x031FF504 MOV W19, W2
	0x031FF508 MOV X20, X1
	0x031FF50C MOV X21, X0
	0x031FF510 TBNZ X8, 0x0, 0x31FF54C
	0x031FF514 ADRP X0, 0xF21000
	0x031FF518 LDR X0, [X0 + 0xB98]
	0x031FF51C BL 0x1C16CF4
	0x031FF520 ADRP X0, 0xEF4000
	0x031FF524 LDR X0, [X0 + 0x618]
	0x031FF528 BL 0x1C16CF4
	0x031FF52C ADRP X0, 0xF21000
	0x031FF530 LDR X0, [X0 + 0xBD8]
	0x031FF534 BL 0x1C16CF4
	0x031FF538 ADRP X0, 0xEF4000
	0x031FF53C LDR X0, [X0 + 0x5A8]
	0x031FF540 BL 0x1C16CF4
	0x031FF544 MOVZ W8, 0x1
	0x031FF548 STRB W8, [X22 + 0x21D]
	0x031FF54C CBZ X20, 0x31FF7C8
	0x031FF550 CBZ X21, 0x31FF7C8
	0x031FF554 LDR X8, [X21]
	0x031FF558 MOV X0, X21
	0x031FF55C LDP X9, X1, [X8 + 0x1D8]
	0x031FF560 BLR X9
	0x031FF564 LDR X8, [X21]
	0x031FF568 LDR W23, [X20 + 0x18]
	0x031FF56C MOV W22, W0
	0x031FF570 MOV X0, X21
	0x031FF574 LDP X9, X1, [X8 + 0x168]
	0x031FF578 BLR X9
	0x031FF57C CMP W23, W22, ASR
	0x031FF580 MOV X21, X0

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+56]
	004 Compare X8, 0
	005 JumpIfEqual {48}
	006 Move W9, [X8+24]
	007 Compare W9, 0
	008 JumpIfEqual {47}
	009 NotImplemented "Instruction CMP not yet implemented."
	010 Move [X8+32], W31
	011 Move [X8+36], W31
	012 Move X8, [X0+40]
	013 Move X19, X0
	014 Compare X8, 0
	015 JumpIfEqual {48}
	016 Move W9, [X8+24]
	017 Compare W9, 0
	018 JumpIfEqual {47}
	019 Move W10, 0x2301
	020 NotImplemented "Instruction MOVK not yet implemented."
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move [X8+32], W10
	023 Move W10, 0xAB89
	024 NotImplemented "Instruction MOVK not yet implemented."
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move [X8+36], W10
	027 Move W10, 0xDCFE
	028 NotImplemented "Instruction MOVK not yet implemented."
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move [X8+40], W10
	031 Move W9, 0x5476
	032 NotImplemented "Instruction MOVK not yet implemented."
	033 Move [X8+44], W9
	034 Move X0, [X19+48]
	035 Move W2, 64
	036 Move W1, W31
	037 Move X3, X31
	038 Call Array.Clear, X0, X1, X2
	039 Move X0, [X19+64]
	040 Move W2, 16
	041 Move W1, W31
	042 Move X3, X31
	043 Move X30, [X31+16]
	044 Move X19, [X31+24]
	045 Call Array.Clear, X0, X1, X2
	046 Return 
	047 Call 0x1C17F28
	048 Call 0x1C17F20

Method: System.Void HashCore(System.Byte[] array, System.Int32 ibStart, System.Int32 cbSize)

Disassembly:
	0x031FF584 B.NE 0x31FF7CC
	0x031FF588 ADRP X23, 0xF21000
	0x031FF58C LDR X23, [X23 + 0xBD8]
	0x031FF590 LDR X0, [X23]
	0x031FF594 LDR W8, [X0 + 0xE0]
	0x031FF598 CBNZ W8, 0x31FF5A0
	0x031FF59C BL 0x1C16DFC
	0x031FF5A0 MOV X0, X21
	0x031FF5A4 MOV X1, X31
	0x031FF5A8 BL 0x3264820
	0x031FF5AC MOV X21, X20
	0x031FF5B0 CBZ X0, 0x31FF6C0
	0x031FF5B4 ADRP X24, 0xF21000
	0x031FF5B8 LDR X24, [X24 + 0xB98]
	0x031FF5BC MOV X22, X0
	0x031FF5C0 LDR X0, [X24]
	0x031FF5C4 BL 0x1C16F10
	0x031FF5C8 MOVZ W1, 0x30
	0x031FF5CC MOV X2, X31
	0x031FF5D0 MOV X21, X0
	0x031FF5D4 BL 0x31E79E8
	0x031FF5D8 LDR X0, [X23]
	0x031FF5DC LDR W8, [X0 + 0xE0]
	0x031FF5E0 CBNZ W8, 0x31FF5E8
	0x031FF5E4 BL 0x1C16DFC
	0x031FF5E8 MOV X0, X22
	0x031FF5EC MOV X1, X31
	0x031FF5F0 BL 0x3264FF4
	0x031FF5F4 LDR X8, [X24]
	0x031FF5F8 MOV X23, X0
	0x031FF5FC MOV X0, X8
	0x031FF600 BL 0x1C16F10
	0x031FF604 MOV X1, X23
	0x031FF608 MOV X2, X31
	0x031FF60C MOV X22, X0
	0x031FF610 BL 0x31E7A44
	0x031FF614 CBZ X21, 0x31FF7C8
	0x031FF618 MOV X0, X21
	0x031FF61C MOV X1, X22
	0x031FF620 MOV X2, X31
	0x031FF624 BL 0x31E7ED0
	0x031FF628 LDR X0, [X24]
	0x031FF62C BL 0x1C16F10
	0x031FF630 MOVZ W1, 0x5
	0x031FF634 MOV X2, X31
	0x031FF638 MOV X22, X0
	0x031FF63C BL 0x31E79E8
	0x031FF640 MOV X0, X21
	0x031FF644 MOV X1, X22
	0x031FF648 MOV X2, X31
	0x031FF64C BL 0x31E7ED0
	0x031FF650 LDR X0, [X24]
	0x031FF654 BL 0x1C16F10
	0x031FF658 MOVZ W1, 0x4
	0x031FF65C MOV X2, X20
	0x031FF660 MOV X3, X31
	0x031FF664 MOV X22, X0
	0x031FF668 BL 0x31E7A14
	0x031FF66C LDR X0, [X24]
	0x031FF670 BL 0x1C16F10
	0x031FF674 MOVZ W1, 0x30
	0x031FF678 MOV X2, X31
	0x031FF67C MOV X23, X0
	0x031FF680 BL 0x31E79E8
	0x031FF684 CBZ X23, 0x31FF7C8
	0x031FF688 MOV X0, X23
	0x031FF68C MOV X1, X21
	0x031FF690 MOV X2, X31
	0x031FF694 BL 0x31E7ED0
	0x031FF698 MOV X0, X23
	0x031FF69C MOV X1, X22
	0x031FF6A0 MOV X2, X31
	0x031FF6A4 BL 0x31E7ED0

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X8, [X0+56]
	009 Compare X8, 0
	010 JumpIfEqual {79}
	011 Move W10, [X8+24]
	012 Compare W10, 0
	013 JumpIfEqual {78}
	014 Move W9, [X8+32]
	015 Move W11, W3
	016 ShiftRight W11, 29
	017 And W11, W11, 0xFFFFFFF
	018 Move W19, W3
	019 Move W20, W2
	020 Add W12, W9, W3
	021 Move X22, X0
	022 Move X21, X1
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move [X8+32], W12
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move W10, [X8+36]
	027 Add W10, W10, 1
	028 Move [X8+36], W10
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move W10, [X8+36]
	031 Move W24, W9
	032 ShiftRight W24, 3
	033 And W24, W24, 255
	034 Move W9, 64
	035 Subtract W23, W9, W24
	036 Add W9, W10, W19
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move [X8+36], W9
	039 Move W23, W31
	040 Move X2, [X22+48]
	041 Move X0, X21
	042 Move W1, W20
	043 Move W3, W24
	044 Move W4, W23
	045 Move X5, X31
	046 Call Buffer.BlockCopy, X0, X1, X2, X3, X4
	047 Move X1, [X22+40]
	048 Move X2, [X22+48]
	049 Move X0, X22
	050 Move W3, W31
	051 Call MD4Managed.MD4Transform, X0, X1, X2, X3
	052 Xor W8, W24, 127
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move X1, [X22+40]
	055 Add W3, W20, W23
	056 Move X0, X22
	057 Move X2, X21
	058 Call MD4Managed.MD4Transform, X0, X1, X2, X3
	059 Add W8, W23, 127
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Add W23, W23, 64
	062 Move W24, W31
	063 Move X2, [X22+48]
	064 Add W1, W23, W20
	065 Subtract W4, W19, W23
	066 Move X0, X21
	067 Move W3, W24
	068 Move X20, [X31+48]
	069 Move X19, [X31+56]
	070 Move X22, [X31+32]
	071 Move X21, [X31+40]
	072 Move X24, [X31+16]
	073 Move X23, [X31+24]
	074 Move X5, X31
	075 Move X30, [X31+64]
	076 Call Buffer.BlockCopy, X0, X1, X2, X3, X4
	077 Return 
	078 Call 0x1C17F28
	079 Call 0x1C17F20

Method: System.Byte[] HashFinal()

Disassembly:
	0x031FFD20 ADRP X0, 0xF22000
	0x031FFD24 LDR X0, [X0 + 0x440]
	0x031FFD28 BL 0x1C16CF4
	0x031FFD2C MOVZ W8, 0x1
	0x031FFD30 STRB W8, [X20 + 0x220]
	0x031FFD34 MOV X0, X19
	0x031FFD38 BL 0x31FFBAC
	0x031FFD3C MOVZ W8, 0xD733
	0x031FFD40 MOVK W8, 0x73600000
	0x031FFD44 CMP W0, W8
	0x031FFD48 B.HI 0x31FFDA8
	0x031FFD4C MOVZ W8, 0xF834
	0x031FFD50 MOVK W8, 0x18BC0000
	0x031FFD54 CMP W0, W8
	0x031FFD58 B.HI 0x31FFDF4
	0x031FFD5C MOVZ W8, 0x1627
	0x031FFD60 MOVK W8, 0xC520000
	0x031FFD64 CMP W0, W8
	0x031FFD68 B.EQ 0x31FFE8C
	0x031FFD6C MOVZ W8, 0xF834
	0x031FFD70 MOVK W8, 0x18BC0000
	0x031FFD74 CMP W0, W8
	0x031FFD78 B.NE 0x31FFF38
	0x031FFD7C ADRP X8, 0xF21000
	0x031FFD80 LDR X8, [X8 + 0xD40]
	0x031FFD84 MOV X0, X19
	0x031FFD88 MOV X2, X31
	0x031FFD8C LDR X1, [X8]
	0x031FFD90 BL 0x321BA08
	0x031FFD94 TBZ X0, 0x0, 0x31FFF38
	0x031FFD98 LDP X20, X19, [X31 + 0x10]
	0x031FFD9C MOV X0, X31
	0x031FFDA0 LDR X30, [X31], #0x20
	0x031FFDA4 B 0x325D0E8
	0x031FFDA8 MOVZ W8, 0xF99A
	0x031FFDAC MOVK W8, 0xB0B20000
	0x031FFDB0 CMP W0, W8
	0x031FFDB4 B.HI 0x31FFE40
	0x031FFDB8 B.EQ 0x31FFEB8
	0x031FFDBC MOVZ W8, 0xDF12
	0x031FFDC0 MOVK W8, 0x78600000
	0x031FFDC4 CMP W0, W8
	0x031FFDC8 B.NE 0x31FFF38
	0x031FFDCC ADRP X8, 0xF21000
	0x031FFDD0 LDR X8, [X8 + 0xD48]
	0x031FFDD4 MOV X0, X19
	0x031FFDD8 MOV X2, X31
	0x031FFDDC LDR X1, [X8]
	0x031FFDE0 BL 0x321BA08
	0x031FFDE4 TBZ X0, 0x0, 0x31FFF38
	0x031FFDE8 LDP X20, X19, [X31 + 0x10]
	0x031FFDEC LDR X30, [X31], #0x20
	0x031FFDF0 B 0x31FDCDC
	0x031FFDF4 MOVZ W8, 0xD5A0
	0x031FFDF8 MOVK W8, 0x72600000
	0x031FFDFC CMP W0, W8
	0x031FFE00 B.EQ 0x31FFEE4
	0x031FFE04 MOVZ W8, 0xD733
	0x031FFE08 MOVK W8, 0x73600000
	0x031FFE0C CMP W0, W8
	0x031FFE10 B.NE 0x31FFF38
	0x031FFE14 ADRP X8, 0xF21000
	0x031FFE18 LDR X8, [X8 + 0xD50]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x11DE000
	006 Move X21, 0xEF5000
	007 Move W8, [X20+536]
	008 Move X21, [X21+1560]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xEF5000
	015 Move X0, [X0+1560]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+536], W8
	019 Move X0, [X21]
	020 Move W1, 8
	021 Call 0x1C17D6C
	022 Move X2, [X19+56]
	023 Move X1, X0
	024 Move X20, X0
	025 Call MD4Managed.Encode, X0, X1, X2
	026 Move X8, [X19+56]
	027 Compare X8, 0
	028 JumpIfEqual {73}
	029 Move W9, [X8+24]
	030 Compare W9, 0
	031 JumpIfEqual {74}
	032 Move W8, [X8+32]
	033 Move W9, 120
	034 Move W10, 56
	035 Move W8, W8
	036 ShiftRight W8, 3
	037 And W8, W8, 255
	038 NotImplemented "Instruction CMP not yet implemented."
	039 NotImplemented "Instruction CSEL not yet implemented."
	040 Subtract W21, W9, W8
	041 Move W1, W21
	042 Call MD4Managed.Padding, X0, X1
	043 Move X8, [X19]
	044 Move X1, X0
	045 Move X0, X19
	046 Move W2, W31
	047 Move X9, [X8+568]
	048 Move X4, [X8+576]
	049 Move W3, W21
	050 NotImplemented "Instruction BLR not yet implemented."
	051 Move X8, [X19]
	052 Move W3, 8
	053 Move X0, X19
	054 Move X1, X20
	055 Move X9, [X8+568]
	056 Move X4, [X8+576]
	057 Move W2, W31
	058 NotImplemented "Instruction BLR not yet implemented."
	059 Move X1, [X19+72]
	060 Move X2, [X19+40]
	061 Call MD4Managed.Encode, X0, X1, X2
	062 Move X8, [X19]
	063 Move X0, X19
	064 Move X9, [X8+600]
	065 Move X1, [X8+608]
	066 NotImplemented "Instruction BLR not yet implemented."
	067 Move X0, [X19+72]
	068 Move X20, [X31+16]
	069 Move X19, [X31+24]
	070 Move X30, [X31+32]
	071 Move X21, [X31+40]
	072 Return X0
	073 Call 0x1C17F20
	074 Call 0x1C17F28

Method: System.Byte[] Padding(System.Int32 nLength)

Disassembly:
	0x031FFF14 MOV X0, X19
	0x031FFF18 MOV X2, X31
	0x031FFF1C LDR X1, [X8]
	0x031FFF20 BL 0x321BA08
	0x031FFF24 TBZ X0, 0x0, 0x31FFF38
	0x031FFF28 LDP X20, X19, [X31 + 0x10]
	0x031FFF2C MOV X0, X31
	0x031FFF30 LDR X30, [X31], #0x20
	0x031FFF34 B 0x325F434
	0x031FFF38 ADRP X8, 0xEF4000
	0x031FFF3C LDR X8, [X8 + 0x6C0]
	0x031FFF40 LDR X0, [X8]
	0x031FFF44 LDR W8, [X0 + 0xE0]
	0x031FFF48 CBNZ W8, 0x31FFF50
	0x031FFF4C BL 0x1C16DFC
	0x031FFF50 ADRP X8, 0xF1D000
	0x031FFF54 LDR X8, [X8 + 0x1B0]
	0x031FFF58 ADRP X9, 0xF22000
	0x031FFF5C LDR X9, [X9 + 0x458]
	0x031FFF60 LDR X1, [X8]
	0x031FFF64 LDR X2, [X9]
	0x031FFF68 MOV X0, X19
	0x031FFF6C BL 0x1C1703C
	0x031FFF70 MOV X1, X31
	0x031FFF74 BL 0x33A703C
	0x031FFF78 CBZ X0, 0x31FFFB0
	0x031FFF7C ADRP X9, 0xF22000
	0x031FFF80 LDR X9, [X9 + 0x450]
	0x031FFF84 LDR X8, [X0]
	0x031FFF88 LDR X1, [X9]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x11DE000
	005 Move W8, [X20+537]
	006 Move W19, W1
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xEF5000
	012 Move X0, [X0+1560]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+537], W8
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Move X8, 0xEF5000
	018 Move X8, [X8+1560]
	019 Move W1, W19
	020 Move X0, [X8]
	021 Call 0x1C17D6C
	022 Compare X0, 0
	023 JumpIfEqual {34}
	024 Move W8, [X0+24]
	025 Compare W8, 0
	026 JumpIfEqual {35}
	027 Move W8, 128
	028 Move [X0+32], W8
	029 Move X0, X31
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X30, [X31+32]
	033 Return X0
	034 Call 0x1C17F20
	035 Call 0x1C17F28

Method: System.UInt32 F(System.UInt32 x, System.UInt32 y, System.UInt32 z)

Disassembly:
	0x031FFF8C LDRB W10, [X8 + 0x130]
	0x031FFF90 LDRB W9, [X1 + 0x130]
	0x031FFF94 CMP W10, W9
	0x031FFF98 B.CC 0x31FFFBC

ISIL:
	001 And W8, W2, W1
	002 NotImplemented "Instruction BIC not yet implemented."
	003 Or W0, W9, W8
	004 Return X0

Method: System.UInt32 G(System.UInt32 x, System.UInt32 y, System.UInt32 z)

Disassembly:
	0x031FFF9C LDR X8, [X8 + 0xC8]
	0x031FFFA0 ADD X8, X8, X9, 0x3, LSL
	0x031FFFA4 LDUR X8, [X8 - 0x8]
	0x031FFFA8 CMP X8, X1
	0x031FFFAC B.NE 0x31FFFBC

ISIL:
	001 Or W8, W3, W2
	002 And W8, W8, W1
	003 And W9, W3, W2
	004 Or W0, W8, W9
	005 Return X0

Method: System.UInt32 H(System.UInt32 x, System.UInt32 y, System.UInt32 z)

Disassembly:
	0x031FFFB0 LDP X20, X19, [X31 + 0x10]
	0x031FFFB4 LDR X30, [X31], #0x20
	0x031FFFB8 RET

ISIL:
	001 Xor W8, W2, W1
	002 Xor W0, W8, W3
	003 Return X0

Method: System.UInt32 ROL(System.UInt32 x, System.Byte n)

Disassembly:
	0x031FFFBC BL 0x1C171E0
	0x031FFFC0 B 0x31FFFC8
	0x031FFFC4 B 0x31FFFC8

ISIL:
	001 Subtract W8, W31, W2
	002 NotImplemented "Instruction RORV not yet implemented."
	003 Return X0

Method: System.Void FF(ref System.UInt32 a, System.UInt32 b, System.UInt32 c, System.UInt32 d, System.UInt32 x, System.Byte s)

Disassembly:
	0x031FFFC8 MOV X20, X0
	0x031FFFCC CMP W1, 0x1
	0x031FFFD0 B.NE 0x320007C
	0x031FFFD4 MOV X0, X20
	0x031FFFD8 BL 0x3EB1AD0
	0x031FFFDC MOV X20, X0
	0x031FFFE0 ADRP X0, 0xEFA000
	0x031FFFE4 LDR X0, [X0 + 0xCC0]
	0x031FFFE8 BL 0x1C16D08
	0x031FFFEC LDR X8, [X20]

ISIL:
	001 Move W8, [X1]
	002 And W9, W3, W2
	003 NotImplemented "Instruction BIC not yet implemented."
	004 Or W9, W10, W9
	005 Add W9, W9, W5
	006 Add W8, W9, W8
	007 Subtract W9, W31, W6
	008 NotImplemented "Instruction RORV not yet implemented."
	009 Move [X1], W8
	010 Return 

Method: System.Void GG(ref System.UInt32 a, System.UInt32 b, System.UInt32 c, System.UInt32 d, System.UInt32 x, System.Byte s)

Disassembly:
	0x031FFFF0 LDR X1, [X8]
	0x031FFFF4 BL 0x1C17270
	0x031FFFF8 TBZ X0, 0x0, 0x3200054
	0x031FFFFC BL 0x3EB1AE0
	0x03200000 ADRP X0, 0xF21000
	0x03200004 LDR X0, [X0 + 0x140]
	0x03200008 BL 0x1C16D08
	0x0320000C MOV X1, X19
	0x03200010 MOV X2, X31
	0x03200014 BL 0x321B938
	0x03200018 MOV X19, X0
	0x0320001C ADRP X0, 0xF20000
	0x03200020 LDR X0, [X0 + 0xCE0]
	0x03200024 BL 0x1C16D08

ISIL:
	001 Move W8, [X1]
	002 Or W9, W4, W3
	003 And W10, W4, W3
	004 And W9, W9, W2
	005 Or W9, W9, W10
	006 Move W11, 0x7999
	007 Add W9, W5, W9
	008 NotImplemented "Instruction MOVK not yet implemented."
	009 Add W8, W9, W8
	010 Add W8, W8, W11
	011 Subtract W9, W31, W6
	012 NotImplemented "Instruction RORV not yet implemented."
	013 Move [X1], W8
	014 Return 

Method: System.Void HH(ref System.UInt32 a, System.UInt32 b, System.UInt32 c, System.UInt32 d, System.UInt32 x, System.Byte s)

Disassembly:
	0x03200028 BL 0x1C16F10
	0x0320002C MOV X1, X19
	0x03200030 MOV X2, X31
	0x03200034 MOV X20, X0
	0x03200038 BL 0x3252170
	0x0320003C ADRP X0, 0xF21000
	0x03200040 LDR X0, [X0 + 0x458]
	0x03200044 BL 0x1C16D08
	0x03200048 MOV X1, X0
	0x0320004C MOV X0, X20
	0x03200050 BL 0x1C16DEC
	0x03200054 MOVZ W0, 0x8

ISIL:
	001 Move W8, [X1]
	002 Xor W9, W3, W2
	003 Xor W9, W9, W4
	004 Move W10, 0xEBA1
	005 Add W9, W5, W9
	006 NotImplemented "Instruction MOVK not yet implemented."
	007 Add W8, W9, W8
	008 Add W8, W8, W10
	009 Subtract W9, W31, W6
	010 NotImplemented "Instruction RORV not yet implemented."
	011 Move [X1], W8
	012 Return 

Method: System.Void Encode(System.Byte[] output, System.UInt32[] input)

Disassembly:
	0x031FFE1C MOV X0, X19
	0x031FFE20 MOV X2, X31
	0x031FFE24 LDR X1, [X8]
	0x031FFE28 BL 0x321BA08
	0x031FFE2C TBZ X0, 0x0, 0x31FFF38
	0x031FFE30 LDP X20, X19, [X31 + 0x10]
	0x031FFE34 MOV X0, X31
	0x031FFE38 LDR X30, [X31], #0x20
	0x031FFE3C B 0x32560FC
	0x031FFE40 MOVZ W8, 0xB20B
	0x031FFE44 MOVK W8, 0xB4720000
	0x031FFE48 CMP W0, W8
	0x031FFE4C B.EQ 0x31FFF0C
	0x031FFE50 MOVZ W8, 0x1476
	0x031FFE54 MOVK W8, 0xB6140000
	0x031FFE58 CMP W0, W8
	0x031FFE5C B.NE 0x31FFF38
	0x031FFE60 ADRP X8, 0xF21000
	0x031FFE64 LDR X8, [X8 + 0xD18]
	0x031FFE68 MOV X0, X19
	0x031FFE6C MOV X2, X31
	0x031FFE70 LDR X1, [X8]
	0x031FFE74 BL 0x321BA08
	0x031FFE78 TBZ X0, 0x0, 0x31FFF38
	0x031FFE7C LDP X20, X19, [X31 + 0x10]
	0x031FFE80 MOV X0, X31
	0x031FFE84 LDR X30, [X31], #0x20
	0x031FFE88 B 0x325E6BC
	0x031FFE8C ADRP X8, 0xF22000
	0x031FFE90 LDR X8, [X8 + 0x440]
	0x031FFE94 MOV X0, X19
	0x031FFE98 MOV X2, X31
	0x031FFE9C LDR X1, [X8]
	0x031FFEA0 BL 0x321BA08
	0x031FFEA4 TBZ X0, 0x0, 0x31FFF38
	0x031FFEA8 LDP X20, X19, [X31 + 0x10]
	0x031FFEAC MOV X0, X31
	0x031FFEB0 LDR X30, [X31], #0x20
	0x031FFEB4 B 0x3259E04
	0x031FFEB8 ADRP X8, 0xF21000
	0x031FFEBC LDR X8, [X8 + 0xD20]
	0x031FFEC0 MOV X0, X19
	0x031FFEC4 MOV X2, X31
	0x031FFEC8 LDR X1, [X8]
	0x031FFECC BL 0x321BA08
	0x031FFED0 TBZ X0, 0x0, 0x31FFF38
	0x031FFED4 LDP X20, X19, [X31 + 0x10]
	0x031FFED8 MOV X0, X31
	0x031FFEDC LDR X30, [X31], #0x20
	0x031FFEE0 B 0x325D984
	0x031FFEE4 ADRP X8, 0xF22000
	0x031FFEE8 LDR X8, [X8 + 0x438]
	0x031FFEEC MOV X0, X19
	0x031FFEF0 MOV X2, X31
	0x031FFEF4 LDR X1, [X8]
	0x031FFEF8 BL 0x321BA08
	0x031FFEFC TBZ X0, 0x0, 0x31FFF38
	0x031FFF00 LDP X20, X19, [X31 + 0x10]
	0x031FFF04 LDR X30, [X31], #0x20
	0x031FFF08 B 0x31FE3B0
	0x031FFF0C ADRP X8, 0xF21000
	0x031FFF10 LDR X8, [X8 + 0xD58]

ISIL:
	001 Move [X31-16], X30
	002 Compare X1, 0
	003 JumpIfEqual {59}
	004 Move W10, [X1+24]
	005 NotImplemented "Instruction CMP not yet implemented."
	006 Move W9, 3
	007 Move TEMP, 0
	008 Not TEMP
	009 Move W8, TEMP
	010 Compare X2, 0
	011 JumpIfEqual {59}
	012 Move W12, [X2+24]
	013 Add W11, W8, 1
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Subtract W12, W9, 3
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Add X10, X2, W11
	018 Add X10, X10, 32
	019 Move W13, [X10]
	020 Add X14, X1, W12
	021 Move [X14+32], W13
	022 Move W13, [X2+24]
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move W13, [X1+24]
	025 Add W12, W12, 1
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move W13, [X10]
	028 Subtract W14, W9, 2
	029 Add X14, X1, W14
	030 Move W13, W13
	031 ShiftRight W13, 8
	032 And W13, W13, 0x7FFFFFFF
	033 Move [X14+32], W13
	034 Move W13, [X2+24]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move W13, [X1+24]
	037 Add W11, W12, 1
	038 NotImplemented "Instruction CMP not yet implemented."
	039 NotImplemented "Instruction LDRH not yet implemented."
	040 Subtract W13, W9, 1
	041 Add X13, X1, W13
	042 Add W8, W8, 1
	043 Move [X13+32], W12
	044 Move W12, [X2+24]
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move W12, [X1+24]
	047 Add W11, W11, 1
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move W10, [X10+3]
	050 Add X12, X1, W9
	051 Add W11, W11, 1
	052 Add W9, W9, 4
	053 Move [X12+32], W10
	054 Move W10, [X1+24]
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move X30, [X31+16]
	057 Return 
	058 Call 0x1C17F28
	059 Call 0x1C17F20

Method: System.Void Decode(System.UInt32[] output, System.Byte[] input, System.Int32 index)

Disassembly:
	0x03200058 BL 0x3EB1AF0
	0x0320005C LDR X8, [X20]
	0x03200060 STR X8, [X0]
	0x03200064 ADRP X1, 0xCB4000
	0x03200068 ADD X1, X1, 0xE58
	0x0320006C MOV X2, X31
	0x03200070 BL 0x3EB1B00
	0x03200074 MOV X20, X0
	0x03200078 BL 0x3EB1AE0
	0x0320007C MOV X0, X20
	0x03200080 BL 0x1D2C690
	0x03200084 BL 0x1990590
	0x03200088 STP X30, X25, [X31 - 0x40]!
	0x0320008C STP X24, X23, [X31 + 0x10]
	0x03200090 STP X22, X21, [X31 + 0x20]
	0x03200094 STP X20, X19, [X31 + 0x30]
	0x03200098 ADRP X25, 0x11DC000
	0x0320009C ADRP X22, 0xEF3000
	0x032000A0 ADRP X19, 0xF21000
	0x032000A4 ADRP X20, 0xF20000
	0x032000A8 ADRP X24, 0xF21000
	0x032000AC ADRP X23, 0xF21000
	0x032000B0 ADRP X21, 0xF21000
	0x032000B4 LDR X22, [X22 + 0x618]
	0x032000B8 LDRB W8, [X25 + 0x221]
	0x032000BC LDR X19, [X19 + 0x460]
	0x032000C0 LDR X20, [X20 + 0xF88]
	0x032000C4 LDR X24, [X24 + 0x468]
	0x032000C8 LDR X23, [X23 + 0x470]
	0x032000CC LDR X21, [X21 + 0x478]
	0x032000D0 TBNZ X8, 0x0, 0x3200124
	0x032000D4 ADRP X0, 0xEF3000
	0x032000D8 LDR X0, [X0 + 0x618]
	0x032000DC BL 0x1C16CF4
	0x032000E0 ADRP X0, 0xF20000
	0x032000E4 LDR X0, [X0 + 0xF88]
	0x032000E8 BL 0x1C16CF4
	0x032000EC ADRP X0, 0xF21000
	0x032000F0 LDR X0, [X0 + 0x478]
	0x032000F4 BL 0x1C16CF4
	0x032000F8 ADRP X0, 0xF21000
	0x032000FC LDR X0, [X0 + 0x470]
	0x03200100 BL 0x1C16CF4
	0x03200104 ADRP X0, 0xF21000
	0x03200108 LDR X0, [X0 + 0x460]
	0x0320010C BL 0x1C16CF4
	0x03200110 ADRP X0, 0xF21000
	0x03200114 LDR X0, [X0 + 0x468]
	0x03200118 BL 0x1C16CF4
	0x0320011C MOVZ W8, 0x1

ISIL:
	001 Move [X31-16], X30
	002 Compare X1, 0
	003 JumpIfEqual {49}
	004 Move W12, [X1+24]
	005 Move X8, X12
	006 ShiftRight X8, 32
	007 And X8, X8, 0x7FFFFFFF
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Move X8, X31
	010 Move W9, W3
	011 Move X10, W12
	012 Add X11, X1, 32
	013 Move X12, X12
	014 ShiftRight X12, 62
	015 And X12, X12, 0x1FFFFFFF
	016 Compare X2, 0
	017 JumpIfEqual {49}
	018 Move W14, [X2+24]
	019 Add X13, X9, X8
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Add X15, X13, 1
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Add X15, X15, 1
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Add W15, W15, 1
	026 NotImplemented "Instruction CMP not yet implemented."
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Add X14, X9, X8
	029 Add X17, X14, 1
	030 Add X13, X2, W13
	031 Add X17, X2, W17
	032 Add X15, X9, X8
	033 Add X16, X2, 32
	034 Move W13, [X13+32]
	035 Add X14, X14, 2
	036 Move W17, [X17+32]
	037 Add X15, X15, 3
	038 Move W14, [X16]
	039 Move W15, [X16]
	040 NotImplemented "Instruction BFM not yet implemented."
	041 Subtract X10, X10, 1
	042 NotImplemented "Instruction BFM not yet implemented."
	043 NotImplemented "Instruction BFM not yet implemented."
	044 Move [X11], W13
	045 Add X8, X8, 4
	046 Move X30, [X31+16]
	047 Return 
	048 Call 0x1C17F28
	049 Call 0x1C17F20

Method: System.Void MD4Transform(System.UInt32[] state, System.Byte[] block, System.Int32 index)

Disassembly:
	0x031FF6A8 LDR X8, [X23]
	0x031FF6AC MOV X0, X23
	0x031FF6B0 LDP X9, X1, [X8 + 0x178]
	0x031FF6B4 BLR X9
	0x031FF6B8 MOV X21, X0
	0x031FF6BC CBZ X0, 0x31FF7C8
	0x031FF6C0 LDR W8, [X21 + 0x18]
	0x031FF6C4 LDR W4, [X20 + 0x18]
	0x031FF6C8 ADRP X23, 0xEF4000
	0x031FF6CC ADRP X22, 0xEF4000
	0x031FF6D0 LDR X23, [X23 + 0x5A8]
	0x031FF6D4 LDR X22, [X22 + 0x618]
	0x031FF6D8 SUB W3, W8, W4
	0x031FF6DC MOV X0, X20
	0x031FF6E0 MOV W1, W31
	0x031FF6E4 MOV X2, X21
	0x031FF6E8 MOV X5, X31
	0x031FF6EC BL 0x33A8A9C
	0x031FF6F0 LDR X0, [X23]
	0x031FF6F4 LDR W8, [X0 + 0xE0]
	0x031FF6F8 CBNZ W8, 0x31FF700
	0x031FF6FC BL 0x1C16DFC
	0x031FF700 LDR W8, [X21 + 0x18]
	0x031FF704 MOVZ W0, 0x8
	0x031FF708 MOV X2, X31
	0x031FF70C SUB W8, W19, W8
	0x031FF710 SUB W1, W8, 0x3
	0x031FF714 BL 0x337EDF0
	0x031FF718 LDR W9, [X21 + 0x18]
	0x031FF71C LDR X8, [X22]
	0x031FF720 ADD W19, W0, 0x3
	0x031FF724 MOV W22, W0
	0x031FF728 ADD W1, W19, W9
	0x031FF72C MOV X0, X8
	0x031FF730 BL 0x1C16D6C
	0x031FF734 CBZ X0, 0x31FF7C8
	0x031FF738 LDR X9, [X0 + 0x18]
	0x031FF73C MOV X20, X0
	0x031FF740 CMP W9, 0x1
	0x031FF744 B.LS 0x31FF7C4
	0x031FF748 ADD W10, W22, 0x2
	0x031FF74C MOVZ W8, 0x1
	0x031FF750 CMP W10, 0x3
	0x031FF754 STRB W8, [X20 + 0x21]
	0x031FF758 B.LT 0x31FF790
	0x031FF75C MOV W11, W10
	0x031FF760 MOV X8, X31
	0x031FF764 AND X9, X9, 0x0
	0x031FF768 ADD X10, X20, 0x22
	0x031FF76C SUB X11, X11, 0x2
	0x031FF770 MOVZ W12, 0xFF
	0x031FF774 ADD X13, X8, 0x2
	0x031FF778 CMP X13, X9
	0x031FF77C B.CS 0x31FF7C4
	0x031FF780 STRB W12, [X10, X8, LSL]
	0x031FF784 ADD X8, X8, 0x1
	0x031FF788 CMP X11, X8
	0x031FF78C B.NE 0x31FF774
	0x031FF790 LDR W4, [X21 + 0x18]
	0x031FF794 MOV X0, X21
	0x031FF798 MOV W1, W31
	0x031FF79C MOV X2, X20
	0x031FF7A0 MOV W3, W19
	0x031FF7A4 MOV X5, X31
	0x031FF7A8 BL 0x33A8A9C
	0x031FF7AC MOV X0, X20
	0x031FF7B0 LDP X20, X19, [X31 + 0x30]
	0x031FF7B4 LDP X22, X21, [X31 + 0x20]
	0x031FF7B8 LDP X24, X23, [X31 + 0x10]
	0x031FF7BC LDR X30, [X31], #0x40
	0x031FF7C0 RET
	0x031FF7C4 BL 0x1C16F28
	0x031FF7C8 BL 0x1C16F20
	0x031FF7CC ADRP X0, 0xF22000
	0x031FF7D0 LDR X0, [X0 + 0x428]
	0x031FF7D4 BL 0x1C16D08
	0x031FF7D8 MOV X1, X21
	0x031FF7DC MOV X2, X31
	0x031FF7E0 BL 0x321B938
	0x031FF7E4 MOV X19, X0
	0x031FF7E8 ADRP X0, 0xF21000
	0x031FF7EC LDR X0, [X0 + 0xCE0]
	0x031FF7F0 BL 0x1C16D08
	0x031FF7F4 BL 0x1C16F10
	0x031FF7F8 MOV X1, X19
	0x031FF7FC MOV X2, X31
	0x031FF800 MOV X20, X0
	0x031FF804 BL 0x3252170
	0x031FF808 ADRP X0, 0xF22000
	0x031FF80C LDR X0, [X0 + 0x430]
	0x031FF810 BL 0x1C16D08
	0x031FF814 MOV X1, X0
	0x031FF818 MOV X0, X20
	0x031FF81C BL 0x1C16DEC
	0x031FF820 STP X30, X21, [X31 - 0x20]!
	0x031FF824 STP X20, X19, [X31 + 0x10]
	0x031FF828 ADRP X21, 0x11DD000
	0x031FF82C LDRB W8, [X21 + 0x21E]
	0x031FF830 MOV W20, W1
	0x031FF834 MOV X19, X0
	0x031FF838 TBNZ X8, 0x0, 0x31FF91C
	0x031FF83C ADRP X0, 0xF22000
	0x031FF840 LDR X0, [X0 + 0x1A8]
	0x031FF844 BL 0x1C16CF4
	0x031FF848 ADRP X0, 0xF22000
	0x031FF84C LDR X0, [X0 + 0x438]
	0x031FF850 BL 0x1C16CF4
	0x031FF854 ADRP X0, 0xF21000
	0x031FF858 LDR X0, [X0 + 0xD18]
	0x031FF85C BL 0x1C16CF4
	0x031FF860 ADRP X0, 0xF22000
	0x031FF864 LDR X0, [X0 + 0x1B0]
	0x031FF868 BL 0x1C16CF4
	0x031FF86C ADRP X0, 0xF21000
	0x031FF870 LDR X0, [X0 + 0xD20]
	0x031FF874 BL 0x1C16CF4
	0x031FF878 ADRP X0, 0xF21000
	0x031FF87C LDR X0, [X0 + 0xD40]
	0x031FF880 BL 0x1C16CF4
	0x031FF884 ADRP X0, 0xF22000
	0x031FF888 LDR X0, [X0 + 0x1B8]
	0x031FF88C BL 0x1C16CF4
	0x031FF890 ADRP X0, 0xF22000
	0x031FF894 LDR X0, [X0 + 0x1C0]
	0x031FF898 BL 0x1C16CF4
	0x031FF89C ADRP X0, 0xF22000
	0x031FF8A0 LDR X0, [X0 + 0x130]
	0x031FF8A4 BL 0x1C16CF4
	0x031FF8A8 ADRP X0, 0xF22000
	0x031FF8AC LDR X0, [X0 + 0x1C8]
	0x031FF8B0 BL 0x1C16CF4
	0x031FF8B4 ADRP X0, 0xF22000
	0x031FF8B8 LDR X0, [X0 + 0x1D0]
	0x031FF8BC BL 0x1C16CF4
	0x031FF8C0 ADRP X0, 0xF21000
	0x031FF8C4 LDR X0, [X0 + 0xD48]
	0x031FF8C8 BL 0x1C16CF4
	0x031FF8CC ADRP X0, 0xF21000
	0x031FF8D0 LDR X0, [X0 + 0xD50]
	0x031FF8D4 BL 0x1C16CF4
	0x031FF8D8 ADRP X0, 0xF22000
	0x031FF8DC LDR X0, [X0 + 0x1D8]
	0x031FF8E0 BL 0x1C16CF4
	0x031FF8E4 ADRP X0, 0xF21000
	0x031FF8E8 LDR X0, [X0 + 0xD58]
	0x031FF8EC BL 0x1C16CF4
	0x031FF8F0 ADRP X0, 0xF22000
	0x031FF8F4 LDR X0, [X0 + 0x1E0]
	0x031FF8F8 BL 0x1C16CF4
	0x031FF8FC ADRP X0, 0xF22000
	0x031FF900 LDR X0, [X0 + 0x1E8]
	0x031FF904 BL 0x1C16CF4
	0x031FF908 ADRP X0, 0xF22000
	0x031FF90C LDR X0, [X0 + 0x440]
	0x031FF910 BL 0x1C16CF4
	0x031FF914 MOVZ W8, 0x1
	0x031FF918 STRB W8, [X21 + 0x21E]
	0x031FF91C MOV X0, X19
	0x031FF920 BL 0x31FFBAC
	0x031FF924 MOVZ W8, 0x999D
	0x031FF928 MOVK W8, 0x2ADB0000
	0x031FF92C CMP W0, W8
	0x031FF930 B.HI 0x31FF970
	0x031FF934 MOVZ W8, 0x8E98
	0x031FF938 MOVK W8, 0x23DB0000
	0x031FF93C CMP W0, W8
	0x031FF940 B.HI 0x31FF9A0
	0x031FF944 MOVZ W8, 0xBEEE
	0x031FF948 MOVK W8, 0x1E6E0000
	0x031FF94C CMP W0, W8
	0x031FF950 B.EQ 0x31FFA50
	0x031FF954 MOVZ W8, 0x8E98
	0x031FF958 MOVK W8, 0x23DB0000
	0x031FF95C CMP W0, W8
	0x031FF960 B.NE 0x31FFB44
	0x031FF964 ADRP X8, 0xF22000
	0x031FF968 LDR X8, [X8 + 0x1B0]
	0x031FF96C B 0x31FFA58
	0x031FF970 MOVZ W8, 0x4B4F
	0x031FF974 MOVK W8, 0x93AB0000
	0x031FF978 CMP W0, W8
	0x031FF97C B.HI 0x31FF9F8
	0x031FF980 B.EQ 0x31FFA78
	0x031FF984 MOVZ W8, 0xA1D8
	0x031FF988 MOVK W8, 0x342F0000
	0x031FF98C CMP W0, W8
	0x031FF990 B.NE 0x31FFB44
	0x031FF994 ADRP X8, 0xF22000
	0x031FF998 LDR X8, [X8 + 0x1E8]
	0x031FF99C B 0x31FFA58
	0x031FF9A0 MOVZ W8, 0x902B
	0x031FF9A4 MOVK W8, 0x24DB0000
	0x031FF9A8 CMP W0, W8
	0x031FF9AC B.EQ 0x31FFAA0
	0x031FF9B0 MOVZ W8, 0x980A
	0x031FF9B4 MOVK W8, 0x29DB0000
	0x031FF9B8 CMP W0, W8
	0x031FF9BC B.EQ 0x31FFAC8
	0x031FF9C0 MOVZ W8, 0x999D
	0x031FF9C4 MOVK W8, 0x2ADB0000
	0x031FF9C8 CMP W0, W8
	0x031FF9CC B.NE 0x31FFB44
	0x031FF9D0 ADRP X8, 0xF22000
	0x031FF9D4 LDR X8, [X8 + 0x1C8]
	0x031FF9D8 MOV X0, X19
	0x031FF9DC MOV X2, X31
	0x031FF9E0 LDR X1, [X8]
	0x031FF9E4 BL 0x321BA08
	0x031FF9E8 TBZ X0, 0x0, 0x31FFB44
	0x031FF9EC ADRP X8, 0xF21000
	0x031FF9F0 LDR X8, [X8 + 0xD48]
	0x031FF9F4 B 0x31FFB3C
	0x031FF9F8 MOVZ W8, 0x4CE2
	0x031FF9FC MOVK W8, 0x94AB0000
	0x031FFA00 CMP W0, W8
	0x031FFA04 B.EQ 0x31FFAF0
	0x031FFA08 MOVZ W8, 0x4E75
	0x031FFA0C MOVK W8, 0x95AB0000
	0x031FFA10 CMP W0, W8
	0x031FFA14 B.EQ 0x31FFB18
	0x031FFA18 MOVZ W8, 0xECD7
	0x031FFA1C MOVK W8, 0xD0380000
	0x031FFA20 CMP W0, W8
	0x031FFA24 B.NE 0x31FFB44
	0x031FFA28 ADRP X8, 0xF22000
	0x031FFA2C LDR X8, [X8 + 0x1A8]
	0x031FFA30 MOV X0, X19
	0x031FFA34 MOV X2, X31
	0x031FFA38 LDR X1, [X8]
	0x031FFA3C BL 0x321BA08
	0x031FFA40 TBZ X0, 0x0, 0x31FFB44
	0x031FFA44 ADRP X8, 0xF22000
	0x031FFA48 LDR X8, [X8 + 0x440]
	0x031FFA4C B 0x31FFB3C
	0x031FFA50 ADRP X8, 0xF22000
	0x031FFA54 LDR X8, [X8 + 0x130]
	0x031FFA58 LDR X1, [X8]
	0x031FFA5C MOV X0, X19
	0x031FFA60 MOV X2, X31
	0x031FFA64 BL 0x321BA08
	0x031FFA68 TBZ X0, 0x0, 0x31FFB44
	0x031FFA6C ADRP X8, 0xF21000
	0x031FFA70 LDR X8, [X8 + 0xD40]
	0x031FFA74 B 0x31FFB3C
	0x031FFA78 ADRP X8, 0xF22000
	0x031FFA7C LDR X8, [X8 + 0x1B8]
	0x031FFA80 MOV X0, X19
	0x031FFA84 MOV X2, X31
	0x031FFA88 LDR X1, [X8]
	0x031FFA8C BL 0x321BA08
	0x031FFA90 TBZ X0, 0x0, 0x31FFB44
	0x031FFA94 ADRP X8, 0xF21000
	0x031FFA98 LDR X8, [X8 + 0xD20]
	0x031FFA9C B 0x31FFB3C
	0x031FFAA0 ADRP X8, 0xF22000
	0x031FFAA4 LDR X8, [X8 + 0x1D8]
	0x031FFAA8 MOV X0, X19
	0x031FFAAC MOV X2, X31
	0x031FFAB0 LDR X1, [X8]
	0x031FFAB4 BL 0x321BA08
	0x031FFAB8 TBZ X0, 0x0, 0x31FFB44
	0x031FFABC ADRP X8, 0xF21000
	0x031FFAC0 LDR X8, [X8 + 0xD50]
	0x031FFAC4 B 0x31FFB3C
	0x031FFAC8 ADRP X8, 0xF22000
	0x031FFACC LDR X8, [X8 + 0x1E0]
	0x031FFAD0 MOV X0, X19
	0x031FFAD4 MOV X2, X31
	0x031FFAD8 LDR X1, [X8]
	0x031FFADC BL 0x321BA08
	0x031FFAE0 TBZ X0, 0x0, 0x31FFB44
	0x031FFAE4 ADRP X8, 0xF22000
	0x031FFAE8 LDR X8, [X8 + 0x438]
	0x031FFAEC B 0x31FFB3C
	0x031FFAF0 ADRP X8, 0xF22000
	0x031FFAF4 LDR X8, [X8 + 0x1C0]
	0x031FFAF8 MOV X0, X19
	0x031FFAFC MOV X2, X31
	0x031FFB00 LDR X1, [X8]
	0x031FFB04 BL 0x321BA08
	0x031FFB08 TBZ X0, 0x0, 0x31FFB44
	0x031FFB0C ADRP X8, 0xF21000
	0x031FFB10 LDR X8, [X8 + 0xD18]
	0x031FFB14 B 0x31FFB3C
	0x031FFB18 ADRP X8, 0xF22000
	0x031FFB1C LDR X8, [X8 + 0x1D0]
	0x031FFB20 MOV X0, X19
	0x031FFB24 MOV X2, X31
	0x031FFB28 LDR X1, [X8]
	0x031FFB2C BL 0x321BA08
	0x031FFB30 TBZ X0, 0x0, 0x31FFB44
	0x031FFB34 ADRP X8, 0xF21000
	0x031FFB38 LDR X8, [X8 + 0xD58]
	0x031FFB3C LDR X0, [X8]
	0x031FFB40 B 0x31FFB4C
	0x031FFB44 TBNZ X20, 0x0, 0x31FFB58
	0x031FFB48 MOV X0, X31
	0x031FFB4C LDP X20, X19, [X31 + 0x10]
	0x031FFB50 LDP X30, X21, [X31], #0x20
	0x031FFB54 RET
	0x031FFB58 ADRP X0, 0xF22000
	0x031FFB5C LDR X0, [X0 + 0x140]
	0x031FFB60 BL 0x1C16D08
	0x031FFB64 MOV X1, X19
	0x031FFB68 MOV X2, X31
	0x031FFB6C BL 0x321B938
	0x031FFB70 MOV X19, X0
	0x031FFB74 ADRP X0, 0xF21000
	0x031FFB78 LDR X0, [X0 + 0xCE0]
	0x031FFB7C BL 0x1C16D08
	0x031FFB80 BL 0x1C16F10
	0x031FFB84 MOV X1, X19
	0x031FFB88 MOV X2, X31
	0x031FFB8C MOV X20, X0
	0x031FFB90 BL 0x3252170
	0x031FFB94 ADRP X0, 0xF22000
	0x031FFB98 LDR X0, [X0 + 0x448]
	0x031FFB9C BL 0x1C16D08
	0x031FFBA0 MOV X1, X0
	0x031FFBA4 MOV X0, X20
	0x031FFBA8 BL 0x1C16DEC
	0x031FFBAC STR X30, [X31 - 0x30]!
	0x031FFBB0 STP X22, X21, [X31 + 0x10]
	0x031FFBB4 STP X20, X19, [X31 + 0x20]
	0x031FFBB8 CBZ X0, 0x31FFC10
	0x031FFBBC LDR W8, [X0 + 0x10]
	0x031FFBC0 MOVZ W20, 0x9DC5
	0x031FFBC4 MOV X19, X0
	0x031FFBC8 MOVK W20, 0x811C0000
	0x031FFBCC CMP W8, 0x1
	0x031FFBD0 B.LT 0x31FFC14
	0x031FFBD4 MOVZ W22, 0x193
	0x031FFBD8 MOV W21, W31
	0x031FFBDC MOVK W22, 0x1000000
	0x031FFBE0 MOV X0, X19
	0x031FFBE4 MOV W1, W21
	0x031FFBE8 MOV X2, X31
	0x031FFBEC BL 0x3222A1C
	0x031FFBF0 LDR W8, [X19 + 0x10]
	0x031FFBF4 AND W9, W0, 0xFFFF
	0x031FFBF8 EOR W9, W20, W9, 0x0
	0x031FFBFC ADD W21, W21, 0x1
	0x031FFC00 CMP W21, W8
	0x031FFC04 MUL W20, W9, W22
	0x031FFC08 B.LT 0x31FFBE0
	0x031FFC0C B 0x31FFC14
	0x031FFC10 MOV W20, W31
	0x031FFC14 MOV W0, W20
	0x031FFC18 LDP X20, X19, [X31 + 0x20]
	0x031FFC1C LDP X22, X21, [X31 + 0x10]
	0x031FFC20 LDR X30, [X31], #0x30
	0x031FFC24 RET
	0x031FFC28 STP X30, X21, [X31 - 0x20]!
	0x031FFC2C STP X20, X19, [X31 + 0x10]
	0x031FFC30 ADRP X20, 0x11DD000
	0x031FFC34 ADRP X21, 0xF21000
	0x031FFC38 LDRB W8, [X20 + 0x21F]
	0x031FFC3C LDR X21, [X21 + 0xF88]
	0x031FFC40 MOV X19, X0
	0x031FFC44 TBNZ X8, 0x0, 0x31FFC5C
	0x031FFC48 ADRP X0, 0xF21000
	0x031FFC4C LDR X0, [X0 + 0xF88]
	0x031FFC50 BL 0x1C16CF4
	0x031FFC54 MOVZ W8, 0x1
	0x031FFC58 STRB W8, [X20 + 0x21F]
	0x031FFC5C LDR X0, [X21]
	0x031FFC60 LDR W8, [X0 + 0xE0]
	0x031FFC64 CBNZ W8, 0x31FFC6C
	0x031FFC68 BL 0x1C16DFC
	0x031FFC6C MOVZ W1, 0x1
	0x031FFC70 MOV X0, X19
	0x031FFC74 BL 0x31FF820
	0x031FFC78 LDP X20, X19, [X31 + 0x10]
	0x031FFC7C LDP X30, X21, [X31], #0x20
	0x031FFC80 B 0x31FFC84
	0x031FFC84 STR X30, [X31 - 0x20]!
	0x031FFC88 STP X20, X19, [X31 + 0x10]
	0x031FFC8C ADRP X20, 0x11DD000
	0x031FFC90 LDRB W8, [X20 + 0x220]
	0x031FFC94 MOV X19, X0
	0x031FFC98 TBNZ X8, 0x0, 0x31FFD34
	0x031FFC9C ADRP X0, 0xF22000
	0x031FFCA0 LDR X0, [X0 + 0x450]
	0x031FFCA4 BL 0x1C16CF4
	0x031FFCA8 ADRP X0, 0xF22000
	0x031FFCAC LDR X0, [X0 + 0x458]
	0x031FFCB0 BL 0x1C16CF4
	0x031FFCB4 ADRP X0, 0xF1D000
	0x031FFCB8 LDR X0, [X0 + 0x1B0]
	0x031FFCBC BL 0x1C16CF4
	0x031FFCC0 ADRP X0, 0xEF4000
	0x031FFCC4 LDR X0, [X0 + 0x6C0]
	0x031FFCC8 BL 0x1C16CF4
	0x031FFCCC ADRP X0, 0xF22000
	0x031FFCD0 LDR X0, [X0 + 0x438]
	0x031FFCD4 BL 0x1C16CF4
	0x031FFCD8 ADRP X0, 0xF21000
	0x031FFCDC LDR X0, [X0 + 0xD18]
	0x031FFCE0 BL 0x1C16CF4
	0x031FFCE4 ADRP X0, 0xF21000
	0x031FFCE8 LDR X0, [X0 + 0xD20]
	0x031FFCEC BL 0x1C16CF4
	0x031FFCF0 ADRP X0, 0xF21000
	0x031FFCF4 LDR X0, [X0 + 0xD40]
	0x031FFCF8 BL 0x1C16CF4
	0x031FFCFC ADRP X0, 0xF21000
	0x031FFD00 LDR X0, [X0 + 0xD48]
	0x031FFD04 BL 0x1C16CF4
	0x031FFD08 ADRP X0, 0xF21000
	0x031FFD0C LDR X0, [X0 + 0xD50]
	0x031FFD10 BL 0x1C16CF4
	0x031FFD14 ADRP X0, 0xF21000
	0x031FFD18 LDR X0, [X0 + 0xD58]
	0x031FFD1C BL 0x1C16CF4

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Compare X1, 0
	013 JumpIfEqual {418}
	014 Move W8, [X1+24]
	015 Move X19, X1
	016 Compare W8, 0
	017 JumpIfEqual {417}
	018 NotImplemented "Instruction CMP not yet implemented."
	019 NotImplemented "Instruction CMP not yet implemented."
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Move X1, [X0+64]
	022 Move W23, [X19+32]
	023 Move W21, [X19+36]
	024 Move W22, [X19+40]
	025 Move W24, [X19+44]
	026 Move X20, X0
	027 Call MD4Managed.Decode, X0, X1, X2, X3
	028 Move X1, [X20+64]
	029 Compare X1, 0
	030 JumpIfEqual {418}
	031 Move W8, [X1+24]
	032 Compare W8, 0
	033 JumpIfEqual {417}
	034 NotImplemented "Instruction CMP not yet implemented."
	035 NotImplemented "Instruction CMP not yet implemented."
	036 NotImplemented "Instruction CMP not yet implemented."
	037 NotImplemented "Instruction CMP not yet implemented."
	038 NotImplemented "Instruction CMP not yet implemented."
	039 NotImplemented "Instruction CMP not yet implemented."
	040 NotImplemented "Instruction CMP not yet implemented."
	041 NotImplemented "Instruction CMP not yet implemented."
	042 NotImplemented "Instruction CMP not yet implemented."
	043 NotImplemented "Instruction CMP not yet implemented."
	044 NotImplemented "Instruction CMP not yet implemented."
	045 NotImplemented "Instruction CMP not yet implemented."
	046 NotImplemented "Instruction CMP not yet implemented."
	047 NotImplemented "Instruction CMP not yet implemented."
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move W8, [X19+24]
	050 Compare W8, 0
	051 JumpIfEqual {417}
	052 Move W0, [X1+32]
	053 Move W9, [X1+36]
	054 And W20, W22, W21
	055 NotImplemented "Instruction BIC not yet implemented."
	056 Add W20, W20, W23
	057 Add W20, W20, W25
	058 Add W20, W20, W0
	059 NotImplemented "Instruction EXTR not yet implemented."
	060 And W23, W20, W21
	061 NotImplemented "Instruction BIC not yet implemented."
	062 Add W23, W23, W24
	063 Add W23, W23, W25
	064 Add W23, W23, W9
	065 Move W12, [X1+40]
	066 Move W10, [X1+44]
	067 NotImplemented "Instruction EXTR not yet implemented."
	068 And W24, W23, W20
	069 NotImplemented "Instruction BIC not yet implemented."
	070 Add W22, W24, W22
	071 Add W22, W22, W25
	072 Add W22, W22, W12
	073 NotImplemented "Instruction EXTR not yet implemented."
	074 And W24, W22, W23
	075 NotImplemented "Instruction BIC not yet implemented."
	076 Add W21, W24, W21
	077 Add W21, W21, W25
	078 Add W21, W21, W10
	079 Move W14, [X1+48]
	080 Move W13, [X1+52]
	081 NotImplemented "Instruction EXTR not yet implemented."
	082 And W24, W21, W22
	083 NotImplemented "Instruction BIC not yet implemented."
	084 Add W20, W24, W20
	085 Add W20, W20, W25
	086 Add W20, W20, W14
	087 NotImplemented "Instruction EXTR not yet implemented."
	088 And W24, W20, W21
	089 NotImplemented "Instruction BIC not yet implemented."
	090 Add W23, W24, W23
	091 Add W23, W23, W25
	092 Add W23, W23, W13
	093 Move W15, [X1+56]
	094 Move W11, [X1+60]
	095 NotImplemented "Instruction EXTR not yet implemented."
	096 And W24, W23, W20
	097 NotImplemented "Instruction BIC not yet implemented."
	098 Add W22, W24, W22
	099 Add W22, W22, W25
	100 Add W22, W22, W15
	101 NotImplemented "Instruction EXTR not yet implemented."
	102 And W24, W22, W23
	103 NotImplemented "Instruction BIC not yet implemented."
	104 Add W21, W24, W21
	105 Add W21, W21, W25
	106 Add W21, W21, W11
	107 Move W6, [X1+64]
	108 Move W17, [X1+68]
	109 NotImplemented "Instruction EXTR not yet implemented."
	110 And W24, W21, W22
	111 NotImplemented "Instruction BIC not yet implemented."
	112 Add W20, W24, W20
	113 Add W20, W20, W25
	114 Add W20, W20, W6
	115 NotImplemented "Instruction EXTR not yet implemented."
	116 And W24, W20, W21
	117 NotImplemented "Instruction BIC not yet implemented."
	118 Add W23, W24, W23
	119 Add W23, W23, W25
	120 Add W23, W23, W17
	121 Move W2, [X1+72]
	122 Move W16, [X1+76]
	123 NotImplemented "Instruction EXTR not yet implemented."
	124 And W24, W23, W20
	125 NotImplemented "Instruction BIC not yet implemented."
	126 Add W22, W24, W22
	127 Add W22, W22, W25
	128 Add W22, W22, W2
	129 NotImplemented "Instruction EXTR not yet implemented."
	130 And W24, W22, W23
	131 NotImplemented "Instruction BIC not yet implemented."
	132 Add W21, W24, W21
	133 Add W21, W21, W25
	134 Add W21, W21, W16
	135 Move W4, [X1+80]
	136 Move W3, [X1+84]
	137 NotImplemented "Instruction EXTR not yet implemented."
	138 And W24, W21, W22
	139 NotImplemented "Instruction BIC not yet implemented."
	140 Add W20, W24, W20
	141 Add W20, W20, W25
	142 Add W20, W20, W4
	143 NotImplemented "Instruction EXTR not yet implemented."
	144 And W24, W20, W21
	145 NotImplemented "Instruction BIC not yet implemented."
	146 Add W23, W24, W23
	147 Add W23, W23, W25
	148 Add W23, W23, W3
	149 Move W5, [X1+88]
	150 Move W1, [X1+92]
	151 NotImplemented "Instruction EXTR not yet implemented."
	152 And W24, W23, W20
	153 NotImplemented "Instruction BIC not yet implemented."
	154 Add W22, W24, W22
	155 Add W22, W22, W25
	156 Add W22, W22, W5
	157 NotImplemented "Instruction EXTR not yet implemented."
	158 And W24, W22, W23
	159 Add W26, W0, W20
	160 NotImplemented "Instruction BIC not yet implemented."
	161 Add W21, W24, W21
	162 Add W20, W21, W20
	163 Add W27, W14, W23
	164 Or W23, W22, W23
	165 Add W20, W20, W1
	166 And W23, W23, W20
	167 Move W7, 0x7999
	168 Or W23, W23, W24
	169 NotImplemented "Instruction MOVK not yet implemented."
	170 Add W23, W26, W23
	171 Or W24, W22, W20
	172 Add W23, W23, W7
	173 Add W25, W6, W22
	174 And W22, W22, W20
	175 And W24, W24, W23
	176 Or W22, W24, W22
	177 NotImplemented "Instruction EXTR not yet implemented."
	178 Add W22, W27, W22
	179 Or W24, W26, W20
	180 Add W22, W22, W7
	181 NotImplemented "Instruction EXTR not yet implemented."
	182 And W20, W26, W20
	183 And W24, W24, W22
	184 Or W20, W24, W20
	185 NotImplemented "Instruction EXTR not yet implemented."
	186 Add W20, W25, W20
	187 Or W24, W27, W23
	188 Add W20, W20, W7
	189 And W23, W27, W23
	190 And W24, W24, W20
	191 Add W21, W4, W21
	192 Or W23, W24, W23
	193 NotImplemented "Instruction EXTR not yet implemented."
	194 Add W21, W21, W23
	195 Or W24, W25, W22
	196 Add W21, W21, W7
	197 And W22, W25, W22
	198 And W24, W24, W21
	199 Add W26, W9, W26
	200 Or W22, W24, W22
	201 NotImplemented "Instruction EXTR not yet implemented."
	202 Add W22, W26, W22
	203 Or W24, W23, W20
	204 Add W22, W22, W7
	205 And W20, W23, W20
	206 And W24, W24, W22
	207 Add W27, W13, W27
	208 Or W20, W24, W20
	209 NotImplemented "Instruction EXTR not yet implemented."
	210 Add W20, W27, W20
	211 Or W24, W26, W21
	212 Add W20, W20, W7
	213 And W21, W26, W21
	214 And W24, W24, W20
	215 Add W25, W17, W25
	216 Or W21, W24, W21
	217 NotImplemented "Instruction EXTR not yet implemented."
	218 Add W21, W25, W21
	219 Or W24, W27, W22
	220 Add W21, W21, W7
	221 And W22, W27, W22
	222 And W24, W24, W21
	223 Add W23, W3, W23
	224 Or W22, W24, W22
	225 NotImplemented "Instruction EXTR not yet implemented."
	226 Add W22, W23, W22
	227 Or W24, W25, W20
	228 Add W22, W22, W7
	229 And W20, W25, W20
	230 And W24, W24, W22
	231 Add W26, W12, W26
	232 Or W20, W24, W20
	233 NotImplemented "Instruction EXTR not yet implemented."
	234 Add W20, W26, W20
	235 Or W24, W23, W21
	236 Add W20, W20, W7
	237 And W21, W23, W21
	238 And W24, W24, W20
	239 Add W27, W15, W27
	240 Or W21, W24, W21
	241 NotImplemented "Instruction EXTR not yet implemented."
	242 Add W21, W27, W21
	243 Or W24, W26, W22
	244 Add W21, W21, W7
	245 And W22, W26, W22
	246 And W24, W24, W21
	247 Add W25, W2, W25
	248 NotImplemented "Instruction EXTR not yet implemented."
	249 Or W22, W24, W22
	250 Or W24, W27, W20
	251 And W28, W27, W20
	252 Add W20, W25, W22
	253 Add W22, W20, W7
	254 And W24, W24, W22
	255 Add W23, W5, W23
	256 Or W24, W24, W28
	257 NotImplemented "Instruction EXTR not yet implemented."
	258 Add W23, W23, W24
	259 Or W25, W20, W21
	260 Add W23, W23, W7
	261 And W21, W20, W21
	262 And W25, W25, W23
	263 Add W26, W10, W26
	264 Or W21, W25, W21
	265 NotImplemented "Instruction EXTR not yet implemented."
	266 Add W21, W26, W21
	267 Or W25, W24, W22
	268 Add W21, W21, W7
	269 And W22, W24, W22
	270 And W25, W25, W21
	271 Or W22, W25, W22
	272 Add W27, W11, W27
	273 NotImplemented "Instruction EXTR not yet implemented."
	274 Add W22, W27, W22
	275 Or W25, W26, W23
	276 Add W22, W22, W7
	277 And W23, W26, W23
	278 And W25, W25, W22
	279 Or W23, W25, W23
	280 Add W20, W16, W20
	281 NotImplemented "Instruction EXTR not yet implemented."
	282 Add W20, W20, W23
	283 Or W25, W27, W21
	284 Add W20, W20, W7
	285 And W21, W27, W21
	286 And W25, W25, W20
	287 Add W24, W1, W24
	288 Or W21, W25, W21
	289 Add W21, W24, W21
	290 Add W7, W21, W7
	291 NotImplemented "Instruction EXTR not yet implemented."
	292 NotImplemented "Instruction EXTR not yet implemented."
	293 Xor W20, W21, W20
	294 Add W26, W0, W26
	295 Move W0, 0xEBA1
	296 Add W4, W4, W21
	297 Xor W21, W20, W22
	298 NotImplemented "Instruction MOVK not yet implemented."
	299 Add W21, W26, W21
	300 Add W21, W21, W0
	301 Add W6, W6, W27
	302 Xor W20, W20, W21
	303 NotImplemented "Instruction EXTR not yet implemented."
	304 Add W6, W6, W20
	305 Xor W7, W22, W7
	306 Add W6, W6, W0
	307 Add W14, W14, W23
	308 Xor W7, W7, W6
	309 NotImplemented "Instruction EXTR not yet implemented."
	310 Add W14, W14, W7
	311 Xor W7, W20, W21
	312 Add W14, W14, W0
	313 Xor W7, W7, W14
	314 Add W2, W2, W20
	315 NotImplemented "Instruction EXTR not yet implemented."
	316 Add W4, W4, W7
	317 Xor W6, W20, W6
	318 Add W4, W4, W0
	319 Add W12, W12, W22
	320 Xor W6, W6, W4
	321 NotImplemented "Instruction EXTR not yet implemented."
	322 Add W12, W12, W6
	323 Xor W14, W7, W14
	324 Add W12, W12, W0
	325 Xor W14, W14, W12
	326 NotImplemented "Instruction EXTR not yet implemented."
	327 Add W14, W2, W14
	328 Xor W2, W6, W4
	329 Add W14, W14, W0
	330 Add W15, W15, W20
	331 Xor W2, W2, W14
	332 NotImplemented "Instruction EXTR not yet implemented."
	333 Add W15, W15, W2
	334 Xor W12, W4, W12
	335 Add W15, W15, W0
	336 Add W5, W5, W7
	337 Xor W12, W12, W15
	338 NotImplemented "Instruction EXTR not yet implemented."
	339 Add W12, W5, W12
	340 Xor W14, W2, W14
	341 Add W12, W12, W0
	342 Add W9, W9, W6
	343 Xor W14, W14, W12
	344 Add W2, W13, W2
	345 NotImplemented "Instruction EXTR not yet implemented."
	346 Add W9, W9, W14
	347 Xor W14, W13, W15
	348 Add W9, W9, W0
	349 Add W17, W17, W4
	350 Xor W14, W14, W9
	351 Add W15, W3, W13
	352 NotImplemented "Instruction EXTR not yet implemented."
	353 Add W14, W17, W14
	354 Xor W12, W13, W12
	355 Add W14, W14, W0
	356 Xor W12, W12, W14
	357 Add W10, W10, W13
	358 NotImplemented "Instruction EXTR not yet implemented."
	359 Add W12, W2, W12
	360 Xor W17, W13, W9
	361 Add W9, W12, W0
	362 Xor W17, W17, W9
	363 NotImplemented "Instruction EXTR not yet implemented."
	364 Add W15, W15, W17
	365 Xor W17, W12, W14
	366 Add W14, W15, W0
	367 Move W27, [X19+32]
	368 Xor W15, W17, W14
	369 Add W10, W10, W15
	370 Add W10, W10, W0
	371 NotImplemented "Instruction EXTR not yet implemented."
	372 Add W17, W27, W15
	373 NotImplemented "Instruction CMP not yet implemented."
	374 Move [X19+32], W17
	375 NotImplemented "Instruction EXTR not yet implemented."
	376 Xor W9, W17, W9
	377 Add W13, W16, W13
	378 Xor W9, W9, W10
	379 Add W9, W13, W9
	380 Xor W14, W15, W14
	381 Add W13, W9, W0
	382 Add W11, W11, W12
	383 NotImplemented "Instruction EXTR not yet implemented."
	384 Xor W13, W14, W13
	385 Add W11, W11, W13
	386 Xor W13, W9, W10
	387 Add W10, W11, W0
	388 Move W12, [X19+36]
	389 Add W15, W1, W17
	390 Xor W11, W13, W10
	391 Add W11, W15, W11
	392 Add W11, W11, W0
	393 NotImplemented "Instruction EXTR not yet implemented."
	394 Add W11, W12, W11
	395 NotImplemented "Instruction CMP not yet implemented."
	396 Move [X19+36], W11
	397 Move W11, [X19+40]
	398 NotImplemented "Instruction EXTR not yet implemented."
	399 NotImplemented "Instruction CMP not yet implemented."
	400 Add W10, W11, W10
	401 Move [X19+40], W10
	402 Move W8, [X19+44]
	403 Move X22, [X31+64]
	404 Move X21, [X31+72]
	405 Move X24, [X31+48]
	406 Move X23, [X31+56]
	407 Move X26, [X31+32]
	408 Move X25, [X31+40]
	409 Add W8, W8, W9
	410 Move [X19+44], W8
	411 Move X20, [X31+80]
	412 Move X19, [X31+88]
	413 Move X28, [X31+16]
	414 Move X27, [X31+24]
	415 Move X30, [X31+96]
	416 Return 
	417 Call 0x1C17F28
	418 Call 0x1C17F20

