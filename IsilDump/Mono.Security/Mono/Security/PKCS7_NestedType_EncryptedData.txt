Type: Mono.Security.PKCS7/EncryptedData

Method: System.Void .ctor()

Disassembly:
	0x031EAEA0 STP X22, X21, [X31 + 0x20]
	0x031EAEA4 STP X20, X19, [X31 + 0x30]
	0x031EAEA8 ADRP X20, 0x11F2000
	0x031EAEAC ADRP X21, 0xF09000
	0x031EAEB0 LDRB W8, [X20 + 0x194]
	0x031EAEB4 LDR X21, [X21 + 0x8F0]
	0x031EAEB8 MOV X19, X0

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X1, X31
	004 Move X19, X0
	005 Call Object..ctor, X0
	006 Move [X19+16], W31
	007 Move X30, [X31+16]
	008 Move X19, [X31+24]
	009 Return 

Method: System.Void .ctor(Mono.Security.ASN1 asn1)

Disassembly:
	0x031EAEBC TBNZ X8, 0x0, 0x31EAEEC
	0x031EAEC0 ADRP X0, 0xF09000
	0x031EAEC4 LDR X0, [X0 + 0x8F0]
	0x031EAEC8 BL 0x1C16CF4
	0x031EAECC ADRP X0, 0xF36000
	0x031EAED0 LDR X0, [X0 + 0xCF8]
	0x031EAED4 BL 0x1C16CF4
	0x031EAED8 ADRP X0, 0xF09000
	0x031EAEDC LDR X0, [X0 + 0x838]
	0x031EAEE0 BL 0x1C16CF4
	0x031EAEE4 MOVZ W8, 0x1
	0x031EAEE8 STRB W8, [X20 + 0x194]
	0x031EAEEC LDR X0, [X21]
	0x031EAEF0 BL 0x1C16F10
	0x031EAEF4 MOV X1, X31
	0x031EAEF8 MOV X20, X0
	0x031EAEFC BL 0x3231AC4
	0x031EAF00 CBZ X19, 0x31EAFD0
	0x031EAF04 ADRP X23, 0xF36000
	0x031EAF08 ADRP X24, 0xF09000
	0x031EAF0C LDR X23, [X23 + 0xCF8]
	0x031EAF10 LDR X24, [X24 + 0x838]
	0x031EAF14 MOV W21, W31
	0x031EAF18 LDR X0, [X19 + 0x20]
	0x031EAF1C CBZ X0, 0x31EAF30
	0x031EAF20 LDR X8, [X0]
	0x031EAF24 LDR X9, [X8 + 0x298]
	0x031EAF28 LDR X1, [X8 + 0x2A0]
	0x031EAF2C BLR X9
	0x031EAF30 CMP W21, W0
	0x031EAF34 B.GE 0x31EAFAC
	0x031EAF38 MOV X0, X19
	0x031EAF3C MOV W1, W21
	0x031EAF40 BL 0x31E8704
	0x031EAF44 LDR X8, [X23]
	0x031EAF48 MOV X22, X0
	0x031EAF4C LDR W9, [X8 + 0xE0]
	0x031EAF50 CBNZ W9, 0x31EAF5C
	0x031EAF54 MOV X0, X8
	0x031EAF58 BL 0x1C16DFC
	0x031EAF5C MOVZ W2, 0x1
	0x031EAF60 MOV X0, X20
	0x031EAF64 MOV X1, X22
	0x031EAF68 BL 0x31F2590
	0x031EAF6C LDR X0, [X19 + 0x20]
	0x031EAF70 CBZ X0, 0x31EAF84
	0x031EAF74 LDR X8, [X0]
	0x031EAF78 LDR X9, [X8 + 0x298]
	0x031EAF7C LDR X1, [X8 + 0x2A0]
	0x031EAF80 BLR X9
	0x031EAF84 SUB W8, W0, 0x1
	0x031EAF88 CMP W21, W8
	0x031EAF8C B.GE 0x31EAFA4
	0x031EAF90 CBZ X20, 0x31EAFD0
	0x031EAF94 LDR X1, [X24]
	0x031EAF98 MOV X0, X20
	0x031EAF9C MOV X2, X31
	0x031EAFA0 BL 0x32333E0
	0x031EAFA4 ADD W21, W21, 0x1
	0x031EAFA8 B 0x31EAF18
	0x031EAFAC CBZ X20, 0x31EAFD0
	0x031EAFB0 LDR X8, [X20]
	0x031EAFB4 MOV X0, X20
	0x031EAFB8 LDP X20, X19, [X31 + 0x30]
	0x031EAFBC LDP X22, X21, [X31 + 0x20]
	0x031EAFC0 LDP X2, X1, [X8 + 0x168]
	0x031EAFC4 LDP X24, X23, [X31 + 0x10]
	0x031EAFC8 LDR X30, [X31], #0x40
	0x031EAFCC BR X2
	0x031EAFD0 BL 0x1C16F20
	0x031EAFD4 LDR X0, [X0 + 0x38]
	0x031EAFD8 RET
	0x031EAFDC STR X30, [X31 - 0x20]!
	0x031EAFE0 STP X20, X19, [X31 + 0x10]
	0x031EAFE4 ADRP X20, 0x11F2000
	0x031EAFE8 LDRB W8, [X20 + 0x177]
	0x031EAFEC MOV X19, X0
	0x031EAFF0 TBNZ X8, 0x0, 0x31EB008
	0x031EAFF4 ADRP X0, 0xF09000
	0x031EAFF8 LDR X0, [X0 + 0x618]
	0x031EAFFC BL 0x1C16CF4
	0x031EB000 MOVZ W8, 0x1
	0x031EB004 STRB W8, [X20 + 0x177]
	0x031EB008 LDR X0, [X19 + 0x40]
	0x031EB00C CBZ X0, 0x31EB038
	0x031EB010 MOV X1, X31
	0x031EB014 BL 0x33A01F0
	0x031EB018 CBZ X0, 0x31EB038
	0x031EB01C ADRP X8, 0xF08000
	0x031EB020 LDR X8, [X8 + 0x618]
	0x031EB024 MOV X19, X0
	0x031EB028 LDR X20, [X8]
	0x031EB02C MOV X1, X20
	0x031EB030 BL 0x1C16E00
	0x031EB034 CBZ X0, 0x31EB044
	0x031EB038 LDP X20, X19, [X31 + 0x10]
	0x031EB03C LDR X30, [X31], #0x20
	0x031EB040 RET
	0x031EB044 MOV X0, X19
	0x031EB048 MOV X1, X20
	0x031EB04C BL 0x1C171E0
	0x031EB050 LDR X0, [X0 + 0x20]
	0x031EB054 RET
	0x031EB058 LDR X0, [X0 + 0x18]
	0x031EB05C RET
	0x031EB060 STR X1, [X0 + 0x18]
	0x031EB064 RET
	0x031EB068 STR X30, [X31 - 0x20]!
	0x031EB06C STP X20, X19, [X31 + 0x10]
	0x031EB070 ADRP X20, 0x11F1000
	0x031EB074 LDRB W8, [X20 + 0x178]
	0x031EB078 MOV X19, X0
	0x031EB07C TBNZ X8, 0x0, 0x31EB094
	0x031EB080 ADRP X0, 0xF08000
	0x031EB084 LDR X0, [X0 + 0x618]
	0x031EB088 BL 0x1C16CF4
	0x031EB08C MOVZ W8, 0x1
	0x031EB090 STRB W8, [X20 + 0x178]
	0x031EB094 LDR X0, [X19 + 0x30]
	0x031EB098 CBZ X0, 0x31EB0C4
	0x031EB09C MOV X1, X31
	0x031EB0A0 BL 0x33A01F0
	0x031EB0A4 CBZ X0, 0x31EB0C4
	0x031EB0A8 ADRP X8, 0xF08000
	0x031EB0AC LDR X8, [X8 + 0x618]
	0x031EB0B0 MOV X19, X0
	0x031EB0B4 LDR X20, [X8]
	0x031EB0B8 MOV X1, X20
	0x031EB0BC BL 0x1C16E00
	0x031EB0C0 CBZ X0, 0x31EB0D0
	0x031EB0C4 LDP X20, X19, [X31 + 0x10]
	0x031EB0C8 LDR X30, [X31], #0x20
	0x031EB0CC RET
	0x031EB0D0 MOV X0, X19
	0x031EB0D4 MOV X1, X20
	0x031EB0D8 BL 0x1C171E0
	0x031EB0DC LDR X0, [X0 + 0x28]
	0x031EB0E0 RET
	0x031EB0E4 LDRB W0, [X0 + 0x10]
	0x031EB0E8 RET
	0x031EB0EC STP X30, X21, [X31 - 0x20]!
	0x031EB0F0 STP X20, X19, [X31 + 0x10]
	0x031EB0F4 MOV X20, X1
	0x031EB0F8 MOV X1, X31
	0x031EB0FC MOV X19, X2
	0x031EB100 MOV X21, X0
	0x031EB104 BL 0x33BDD8C
	0x031EB108 STP X20, X19, [X21 + 0x10]
	0x031EB10C LDP X20, X19, [X31 + 0x10]
	0x031EB110 LDP X30, X21, [X31], #0x20
	0x031EB114 RET
	0x031EB118 LDR X0, [X0 + 0x10]
	0x031EB11C RET
	0x031EB120 LDR X0, [X0 + 0x18]
	0x031EB124 RET
	0x031EB128 STR X30, [X31 - 0x30]!
	0x031EB12C STP X22, X21, [X31 + 0x10]
	0x031EB130 STP X20, X19, [X31 + 0x20]
	0x031EB134 ADRP X20, 0x11F1000
	0x031EB138 ADRP X21, 0xF35000
	0x031EB13C ADRP X22, 0xF35000
	0x031EB140 LDRB W8, [X20 + 0x179]
	0x031EB144 LDR X21, [X21 + 0xBA0]
	0x031EB148 LDR X22, [X22 + 0xCB8]
	0x031EB14C MOV X19, X0
	0x031EB150 TBNZ X8, 0x0, 0x31EB174
	0x031EB154 ADRP X0, 0xF35000
	0x031EB158 LDR X0, [X0 + 0xBA0]
	0x031EB15C BL 0x1C16CF4
	0x031EB160 ADRP X0, 0xF35000
	0x031EB164 LDR X0, [X0 + 0xCB8]
	0x031EB168 BL 0x1C16CF4
	0x031EB16C MOVZ W8, 0x1
	0x031EB170 STRB W8, [X20 + 0x179]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x11F3000
	008 Move W8, [X21+369]
	009 Move X20, X1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xF37000
	016 Move X0, [X0+3184]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+369], W8
	020 Move X0, X19
	021 Move X1, X31
	022 Call Object..ctor, X0
	023 Move [X19+16], W31
	024 Compare X20, 0
	025 JumpIfEqual {130}
	026 Move W8, [X20+16]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move X0, [X20+32]
	029 Compare X0, 0
	030 JumpIfEqual {131}
	031 Move X8, [X0]
	032 Move X9, [X8+664]
	033 Move X1, [X8+672]
	034 NotImplemented "Instruction BLR not yet implemented."
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move X0, X20
	037 Move W1, W31
	038 Call ASN1.get_Item, X0, X1
	039 Compare X0, 0
	040 JumpIfEqual {130}
	041 Move W8, [X0+16]
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X0, X20
	044 Move W1, W31
	045 Call ASN1.get_Item, X0, X1
	046 Compare X0, 0
	047 JumpIfEqual {130}
	048 Call ASN1.get_Value, X0
	049 Compare X0, 0
	050 JumpIfEqual {130}
	051 Move W8, [X0+24]
	052 Compare W8, 0
	053 JumpIfEqual {145}
	054 Move W8, [X0+32]
	055 Move W1, 1
	056 Move X0, X20
	057 Move [X19+16], W8
	058 Call ASN1.get_Item, X0, X1
	059 Compare X0, 0
	060 JumpIfEqual {130}
	061 Move W8, [X0+16]
	062 NotImplemented "Instruction CMP not yet implemented."
	063 NotImplemented "Instruction CSEL not yet implemented."
	064 Compare X20, 0
	065 JumpIfEqual {130}
	066 Move X0, X20
	067 Move W1, W31
	068 Call ASN1.get_Item, X0, X1
	069 Compare X0, 0
	070 JumpIfEqual {130}
	071 Move W8, [X0+16]
	072 NotImplemented "Instruction CMP not yet implemented."
	073 NotImplemented "Instruction CSEL not yet implemented."
	074 Move X23, 0xF37000
	075 Move X23, [X23+3184]
	076 Call ASN1Convert.ToOid, X0
	077 Move X8, [X23]
	078 Move X21, X0
	079 Move X0, X8
	080 Call 0x1C17F10
	081 Move X22, X0
	082 Call ContentInfo..ctor, X0
	083 Move [X22+16], X21
	084 Move [X19+24], X22
	085 Compare X20, 0
	086 JumpIfEqual {130}
	087 Move W1, 1
	088 Move X0, X20
	089 Call ASN1.get_Item, X0, X1
	090 Compare X0, 0
	091 JumpIfEqual {130}
	092 Move W8, [X0+16]
	093 Move X21, X0
	094 NotImplemented "Instruction CMP not yet implemented."
	095 NotImplemented "Instruction CSEL not yet implemented."
	096 Move X0, X21
	097 Move W1, W31
	098 Call ASN1.get_Item, X0, X1
	099 Call ASN1Convert.ToOid, X0
	100 Move X8, [X23]
	101 Move X22, X0
	102 Move X0, X8
	103 Call 0x1C17F10
	104 Move X23, X0
	105 Call ContentInfo..ctor, X0
	106 Move W1, 1
	107 Move X0, X21
	108 Move [X23+16], X22
	109 Move [X19+32], X23
	110 Call ASN1.get_Item, X0, X1
	111 Move [X23+24], X0
	112 Compare X20, 0
	113 JumpIfEqual {130}
	114 Move W1, 2
	115 Move X0, X20
	116 Call ASN1.get_Item, X0, X1
	117 Compare X0, 0
	118 JumpIfEqual {130}
	119 Move W8, [X0+16]
	120 NotImplemented "Instruction CMP not yet implemented."
	121 Call ASN1.get_Value, X0
	122 Move [X19+40], X0
	123 Move X20, [X31+32]
	124 Move X19, [X31+40]
	125 Move X22, [X31+16]
	126 Move X21, [X31+24]
	127 Move X30, [X31+48]
	128 Move X23, [X31+56]
	129 Return 
	130 Call 0x1C17F20
	131 Move X0, 0xF11000
	132 Move X0, [X0+1400]
	133 Call 0x1C17D08
	134 Call 0x1C17F10
	135 Move X19, X0
	136 Move X0, 0xF36000
	137 Move X0, [X0+3192]
	138 Move X0, 0xF11000
	139 Move X0, [X0+1400]
	140 Call 0x1C17D08
	141 Call 0x1C17F10
	142 Move X19, X0
	143 Move X0, 0xF36000
	144 Move X0, [X0+3200]
	145 Call 0x1C17F28
	146 Move X0, 0xF11000
	147 Move X0, [X0+1400]
	148 Call 0x1C17D08
	149 Call 0x1C17F10
	150 Move X19, X0
	151 Move X0, 0xF36000
	152 Move X0, [X0+3208]
	153 Move X0, 0xF11000
	154 Move X0, [X0+1400]
	155 Call 0x1C17D08
	156 Call 0x1C17F10
	157 Move X19, X0
	158 Move X0, 0xF36000
	159 Move X0, [X0+3216]
	160 Move X0, 0xF11000
	161 Move X0, [X0+1400]
	162 Call 0x1C17D08
	163 Call 0x1C17F10
	164 Move X19, X0
	165 Move X0, 0xF36000
	166 Move X0, [X0+3224]
	167 Move X0, 0xF11000
	168 Move X0, [X0+1400]
	169 Call 0x1C17D08
	170 Call 0x1C17F10
	171 Move X19, X0
	172 Move X0, 0xF36000
	173 Move X0, [X0+3232]
	174 Call 0x1C17D08
	175 Move X1, X0
	176 Move X0, X19
	177 Move X2, X31
	178 Call ArgumentException..ctor, X0, X1
	179 Move X0, 0xF36000
	180 Move X0, [X0+3240]
	181 Call 0x1C17D08
	182 Move X1, X0
	183 Move X0, X19
	184 Call 0x1C17DEC

Method: Mono.Security.PKCS7/ContentInfo get_EncryptionAlgorithm()

Disassembly:
	0x031EB174 MOV X0, X19
	0x031EB178 MOV X1, X31

ISIL:
	001 Move X0, [X0+32]
	002 Return X0

Method: System.Byte[] get_EncryptedContent()

Disassembly:
	0x031EB17C BL 0x33BDD8C
	0x031EB180 MOVZ W8, 0x7D0
	0x031EB184 STR W8, [X19 + 0x34]
	0x031EB188 LDR X0, [X21]
	0x031EB18C BL 0x1C16F10
	0x031EB190 MOV X1, X31
	0x031EB194 MOV X20, X0
	0x031EB198 BL 0x3351F5C
	0x031EB19C STR X20, [X19 + 0x18]
	0x031EB1A0 LDR X0, [X21]
	0x031EB1A4 BL 0x1C16F10
	0x031EB1A8 MOV X1, X31
	0x031EB1AC MOV X20, X0
	0x031EB1B0 BL 0x3351F5C
	0x031EB1B4 STR X20, [X19 + 0x20]
	0x031EB1B8 LDR X0, [X22]
	0x031EB1BC BL 0x1C16F10
	0x031EB1C0 MOV X1, X31
	0x031EB1C4 MOV X20, X0
	0x031EB1C8 BL 0x3351EFC
	0x031EB1CC STR X20, [X19 + 0x28]
	0x031EB1D0 STRH W31, [X19 + 0x30]
	0x031EB1D4 STRB W31, [X19 + 0x32]
	0x031EB1D8 LDR X0, [X21]
	0x031EB1DC BL 0x1C16F10
	0x031EB1E0 MOV X1, X31
	0x031EB1E4 MOV X20, X0
	0x031EB1E8 BL 0x3351F5C
	0x031EB1EC STR X20, [X19 + 0x38]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x11F2000
	005 Move W8, [X20+370]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xF09000
	012 Move X0, [X0+1560]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+370], W8
	016 Move X0, [X19+40]
	017 Compare X0, 0
	018 JumpIfEqual {31}
	019 Move X1, X31
	020 Call Array.Clone, X0
	021 Compare X0, 0
	022 JumpIfEqual {31}
	023 Move X8, 0xF09000
	024 Move X8, [X8+1560]
	025 Move X19, X0
	026 Move X20, [X8]
	027 Move X1, X20
	028 Call 0x1C17E00
	029 Compare X0, 0
	030 JumpIfEqual {35}
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Return X0
	035 Move X0, X19
	036 Move X1, X20
	037 Call 0x1C181E0

