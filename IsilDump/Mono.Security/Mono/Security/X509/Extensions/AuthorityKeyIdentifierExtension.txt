Type: Mono.Security.X509.Extensions.AuthorityKeyIdentifierExtension

Method: System.Void .ctor(Mono.Security.X509.X509Extension extension)

Disassembly:
	0x031F9C7C LDR W2, [X20 + 0x18]

ISIL:
	001 Call X509Extension..ctor, X0, X1
	002 Return 

Method: System.Void Decode()

Disassembly:
	0x031F9C80 MOV X19, X0
	0x031F9C84 MOV X0, X20
	0x031F9C88 MOV W1, W31
	0x031F9C8C MOV X3, X31
	0x031F9C90 BL 0x339FA34
	0x031F9C94 MOV X0, X19
	0x031F9C98 LDP X20, X19, [X31 + 0x20]
	0x031F9C9C LDP X22, X21, [X31 + 0x10]
	0x031F9CA0 LDP X30, X23, [X31], #0x30
	0x031F9CA4 RET
	0x031F9CA8 BL 0x1C16F20
	0x031F9CAC STP X30, X19, [X31 - 0x10]!
	0x031F9CB0 LDRB W8, [X0 + 0x10]
	0x031F9CB4 CBNZ W8, 0x31F9CC4
	0x031F9CB8 LDR X1, [X0 + 0x20]
	0x031F9CBC LDP X30, X19, [X31], #0x10
	0x031F9CC0 B 0x31F9D0C
	0x031F9CC4 ADRP X0, 0xF23000
	0x031F9CC8 LDR X0, [X0 + 0x4B8]
	0x031F9CCC BL 0x1C16D08
	0x031F9CD0 BL 0x1C16F10
	0x031F9CD4 MOV X19, X0
	0x031F9CD8 ADRP X0, 0xF28000
	0x031F9CDC LDR X0, [X0 + 0x328]
	0x031F9CE0 BL 0x1C16D08
	0x031F9CE4 MOV X1, X0
	0x031F9CE8 MOV X0, X19
	0x031F9CEC MOV X2, X31
	0x031F9CF0 BL 0x338C448
	0x031F9CF4 ADRP X0, 0xF28000
	0x031F9CF8 LDR X0, [X0 + 0x348]
	0x031F9CFC BL 0x1C16D08
	0x031F9D00 MOV X1, X0
	0x031F9D04 MOV X0, X19
	0x031F9D08 BL 0x1C16DEC
	0x031F9D0C STP X30, X25, [X31 - 0x40]!
	0x031F9D10 STP X24, X23, [X31 + 0x10]
	0x031F9D14 STP X22, X21, [X31 + 0x20]
	0x031F9D18 STP X20, X19, [X31 + 0x30]
	0x031F9D1C ADRP X22, 0x11E3000
	0x031F9D20 ADRP X23, 0xEFA000
	0x031F9D24 ADRP X19, 0xF28000
	0x031F9D28 LDRB W8, [X22 + 0x1E3]
	0x031F9D2C LDR X23, [X23 + 0x618]
	0x031F9D30 LDR X19, [X19 + 0x320]
	0x031F9D34 MOV X21, X1
	0x031F9D38 MOV X20, X0
	0x031F9D3C TBNZ X8, 0x0, 0x31F9D6C
	0x031F9D40 ADRP X0, 0xEFA000
	0x031F9D44 LDR X0, [X0 + 0x618]
	0x031F9D48 BL 0x1C16CF4
	0x031F9D4C ADRP X0, 0xF28000
	0x031F9D50 LDR X0, [X0 + 0x320]
	0x031F9D54 BL 0x1C16CF4
	0x031F9D58 ADRP X0, 0xF27000
	0x031F9D5C LDR X0, [X0 + 0xEA0]
	0x031F9D60 BL 0x1C16CF4
	0x031F9D64 MOVZ W8, 0x1
	0x031F9D68 STRB W8, [X22 + 0x1E3]
	0x031F9D6C LDR X0, [X23]
	0x031F9D70 MOVZ W1, 0x18
	0x031F9D74 BL 0x1C16D6C
	0x031F9D78 LDR X8, [X19]
	0x031F9D7C MOV X19, X0
	0x031F9D80 LDR W9, [X8 + 0xE0]
	0x031F9D84 CBNZ W9, 0x31F9D90
	0x031F9D88 MOV X0, X8
	0x031F9D8C BL 0x1C16DFC
	0x031F9D90 MOV X0, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x11E4000
	006 Move W8, [X20+472]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xF28000
	013 Move X0, [X0+2968]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+472], W8
	017 Move X0, [X19+32]
	018 Compare X0, 0
	019 JumpIfEqual {58}
	020 Move X20, 0xF28000
	021 Move X20, [X20+2968]
	022 Call ASN1.get_Value, X0
	023 Move X8, [X20]
	024 Move X21, X0
	025 Move X0, X8
	026 Call 0x1C17F10
	027 Move X1, X21
	028 Move X20, X0
	029 Call ASN1..ctor, X0, X1
	030 Compare X20, 0
	031 JumpIfEqual {58}
	032 Move W8, [X20+16]
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move W21, W31
	035 Move X0, [X20+32]
	036 Compare X0, 0
	037 JumpIfEqual {42}
	038 Move X8, [X0]
	039 Move X9, [X8+664]
	040 Move X1, [X8+672]
	041 NotImplemented "Instruction BLR not yet implemented."
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X0, X20
	044 Move W1, W21
	045 Call ASN1.get_Item, X0, X1
	046 Compare X0, 0
	047 JumpIfEqual {58}
	048 Move W8, [X0+16]
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Call ASN1.get_Value, X0
	051 Move [X19+40], X0
	052 Add W21, W21, 1
	053 Move X20, [X31+16]
	054 Move X19, [X31+24]
	055 Move X30, [X31+32]
	056 Move X21, [X31+40]
	057 Return 
	058 Call 0x1C17F20
	059 Move X0, 0xF03000
	060 Move X0, [X0+1400]
	061 Call 0x1C17D08
	062 Call 0x1C17F10
	063 Move X19, X0
	064 Move X0, 0xF29000
	065 Move X0, [X0+720]
	066 Call 0x1C17D08
	067 Move X1, X0
	068 Move X0, X19
	069 Move X2, X31
	070 Call ArgumentException..ctor, X0, X1
	071 Move X0, 0xF29000
	072 Move X0, [X0+728]
	073 Call 0x1C17D08
	074 Move X1, X0
	075 Move X0, X19
	076 Call 0x1C17DEC

Method: System.Void Encode()

Disassembly:
	0x031F9D94 BL 0x3252CD4
	0x031F9D98 CBZ X0, 0x31F9FE4
	0x031F9D9C LDR X8, [X0]
	0x031F9DA0 MOVZ W1, 0x2
	0x031F9DA4 MOV X22, X0
	0x031F9DA8 LDR X9, [X8 + 0x248]
	0x031F9DAC LDR X2, [X8 + 0x250]
	0x031F9DB0 BLR X9
	0x031F9DB4 MOV X1, X21
	0x031F9DB8 MOV W2, W31
	0x031F9DBC BL 0x31FA0B4
	0x031F9DC0 LDR X8, [X22]
	0x031F9DC4 MOV X1, X0
	0x031F9DC8 MOV X0, X22
	0x031F9DCC LDP X9, X2, [X8 + 0x1F8]
	0x031F9DD0 BLR X9
	0x031F9DD4 LDR X8, [X22]
	0x031F9DD8 MOV X0, X22
	0x031F9DDC LDR X9, [X8 + 0x278]
	0x031F9DE0 LDR X1, [X8 + 0x280]
	0x031F9DE4 BLR X9
	0x031F9DE8 CBZ X0, 0x31F9FE4
	0x031F9DEC ADRP X25, 0xF27000
	0x031F9DF0 LDR X8, [X0]
	0x031F9DF4 LDR X25, [X25 + 0xEA0]
	0x031F9DF8 LDR X24, [X20 + 0x18]
	0x031F9DFC MOV X23, X0
	0x031F9E00 LDRH W9, [X8 + 0x12E]
	0x031F9E04 LDR X1, [X25]
	0x031F9E08 CBZ X9, 0x31F9E2C
	0x031F9E0C LDR X10, [X8 + 0xB0]
	0x031F9E10 ADD X10, X10, 0x8
	0x031F9E14 LDUR X11, [X10 - 0x8]
	0x031F9E18 CMP X11, X1
	0x031F9E1C B.EQ 0x31F9E3C
	0x031F9E20 SUBS X9, X9, 0x1
	0x031F9E24 ADD X10, X10, 0x10
	0x031F9E28 B.NE 0x31F9E14
	0x031F9E2C MOVZ W2, 0x3
	0x031F9E30 MOV X0, X23
	0x031F9E34 BL 0x1C5C788
	0x031F9E38 B 0x31F9E4C
	0x031F9E3C LDR W9, [X10]
	0x031F9E40 ADD W9, W9, 0x3
	0x031F9E44 ADD X8, X8, W9, 0x4, SXTW
	0x031F9E48 ADD X0, X8, 0x138
	0x031F9E4C LDP X8, X6, [X0]
	0x031F9E50 MOVZ W3, 0x8
	0x031F9E54 MOV X0, X23
	0x031F9E58 MOV X1, X24
	0x031F9E5C MOV W2, W31
	0x031F9E60 MOV X4, X19
	0x031F9E64 MOV W5, W31
	0x031F9E68 BLR X8
	0x031F9E6C MOVZ W2, 0x7
	0x031F9E70 MOV X1, X21
	0x031F9E74 BL 0x31FA0B4
	0x031F9E78 LDR X8, [X22]
	0x031F9E7C MOV X1, X0
	0x031F9E80 MOV X0, X22
	0x031F9E84 LDP X9, X2, [X8 + 0x1F8]
	0x031F9E88 BLR X9
	0x031F9E8C LDR X8, [X22]
	0x031F9E90 MOV X0, X22
	0x031F9E94 LDR X9, [X8 + 0x278]
	0x031F9E98 LDR X1, [X8 + 0x280]
	0x031F9E9C BLR X9
	0x031F9EA0 CBZ X0, 0x31F9FE4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x11E4000
	008 Move X22, 0xF28000
	009 Move W8, [X20+473]
	010 Move X22, [X22+2968]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xF28000
	017 Move X0, [X0+2968]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+473], W8
	021 Move X0, [X22]
	022 Call 0x1C17F10
	023 Move X1, X31
	024 Move X20, X0
	025 Call Object..ctor, X0
	026 Move W8, 48
	027 Move [X20+16], W8
	028 Move [X20+24], X31
	029 Move X23, [X19+40]
	030 Compare X23, 0
	031 JumpIfEqual {62}
	032 Move X0, [X22]
	033 Call 0x1C17F10
	034 Move X1, X31
	035 Move X21, X0
	036 Call Object..ctor, X0
	037 Move W8, 128
	038 Move X0, X20
	039 Move X1, X21
	040 Move [X21+16], W8
	041 Move [X21+24], X23
	042 Call ASN1.Add, X0, X1
	043 Move X0, [X22]
	044 Call 0x1C17F10
	045 Move X1, X31
	046 Move X21, X0
	047 Call Object..ctor, X0
	048 Move W8, 4
	049 Move [X21+24], X31
	050 Move [X21+16], W8
	051 Move [X19+32], X21
	052 Move X0, X21
	053 Move X1, X20
	054 Move X20, [X31+32]
	055 Move X19, [X31+40]
	056 Move X22, [X31+16]
	057 Move X21, [X31+24]
	058 Move X30, [X31+48]
	059 Move X23, [X31+56]
	060 Call ASN1.Add, X0, X1
	061 Return 
	062 Move X0, 0xEFB000
	063 Move X0, [X0+1456]
	064 Call 0x1C17D08
	065 Call 0x1C17F10
	066 Move X19, X0
	067 Move X0, 0xF29000
	068 Move X0, [X0+720]
	069 Call 0x1C17D08
	070 Move X1, X0
	071 Move X0, X19
	072 Move X2, X31
	073 Call InvalidOperationException..ctor, X0, X1
	074 Move X0, 0xF29000
	075 Move X0, [X0+736]
	076 Call 0x1C17D08
	077 Move X1, X0
	078 Move X0, X19
	079 Call 0x1C17DEC

Method: System.Byte[] get_Identifier()

Disassembly:
	0x031F9EA4 LDR X8, [X0]
	0x031F9EA8 LDR X24, [X20 + 0x18]
	0x031F9EAC LDR X1, [X25]
	0x031F9EB0 MOV X23, X0
	0x031F9EB4 LDRH W9, [X8 + 0x12E]
	0x031F9EB8 CBZ X9, 0x31F9EDC
	0x031F9EBC LDR X10, [X8 + 0xB0]
	0x031F9EC0 ADD X10, X10, 0x8
	0x031F9EC4 LDUR X11, [X10 - 0x8]
	0x031F9EC8 CMP X11, X1
	0x031F9ECC B.EQ 0x31F9EEC
	0x031F9ED0 SUBS X9, X9, 0x1
	0x031F9ED4 ADD X10, X10, 0x10
	0x031F9ED8 B.NE 0x31F9EC4
	0x031F9EDC MOVZ W2, 0x3
	0x031F9EE0 MOV X0, X23
	0x031F9EE4 BL 0x1C5C788
	0x031F9EE8 B 0x31F9EFC
	0x031F9EEC LDR W9, [X10]
	0x031F9EF0 ADD W9, W9, 0x3
	0x031F9EF4 ADD X8, X8, W9, 0x4, SXTW
	0x031F9EF8 ADD X0, X8, 0x138
	0x031F9EFC LDP X8, X6, [X0]
	0x031F9F00 MOVZ W3, 0x8
	0x031F9F04 MOVZ W5, 0x8
	0x031F9F08 MOV X0, X23
	0x031F9F0C MOV X1, X24
	0x031F9F10 MOV W2, W31
	0x031F9F14 MOV X4, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x11E4000
	005 Move W8, [X20+474]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xEFB000
	012 Move X0, [X0+1560]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+474], W8
	016 Move X0, [X19+40]
	017 Compare X0, 0
	018 JumpIfEqual {31}
	019 Move X1, X31
	020 Call Array.Clone, X0
	021 Compare X0, 0
	022 JumpIfEqual {31}
	023 Move X8, 0xEFB000
	024 Move X8, [X8+1560]
	025 Move X19, X0
	026 Move X20, [X8]
	027 Move X1, X20
	028 Call 0x1C17E00
	029 Compare X0, 0
	030 JumpIfEqual {35}
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Return X0
	035 Move X0, X19
	036 Move X1, X20
	037 Call 0x1C181E0

Method: System.String ToString()

Disassembly:
	0x031F9F18 BLR X8
	0x031F9F1C MOVZ W2, 0xE
	0x031F9F20 MOV X1, X21
	0x031F9F24 BL 0x31FA0B4
	0x031F9F28 LDR X8, [X22]
	0x031F9F2C MOV X1, X0
	0x031F9F30 MOV X0, X22
	0x031F9F34 LDP X9, X2, [X8 + 0x1F8]
	0x031F9F38 BLR X9
	0x031F9F3C LDR X8, [X22]
	0x031F9F40 MOV X0, X22
	0x031F9F44 LDR X9, [X8 + 0x278]
	0x031F9F48 LDR X1, [X8 + 0x280]
	0x031F9F4C BLR X9
	0x031F9F50 CBZ X0, 0x31F9FE4
	0x031F9F54 LDR X8, [X0]
	0x031F9F58 LDR X20, [X20 + 0x18]
	0x031F9F5C LDR X1, [X25]
	0x031F9F60 MOV X21, X0
	0x031F9F64 LDRH W9, [X8 + 0x12E]
	0x031F9F68 CBZ X9, 0x31F9F8C
	0x031F9F6C LDR X10, [X8 + 0xB0]
	0x031F9F70 ADD X10, X10, 0x8
	0x031F9F74 LDUR X11, [X10 - 0x8]
	0x031F9F78 CMP X11, X1
	0x031F9F7C B.EQ 0x31F9F9C
	0x031F9F80 SUBS X9, X9, 0x1
	0x031F9F84 ADD X10, X10, 0x10
	0x031F9F88 B.NE 0x31F9F74
	0x031F9F8C MOVZ W2, 0x3
	0x031F9F90 MOV X0, X21
	0x031F9F94 BL 0x1C5C788
	0x031F9F98 B 0x31F9FAC
	0x031F9F9C LDR W9, [X10]
	0x031F9FA0 ADD W9, W9, 0x3
	0x031F9FA4 ADD X8, X8, W9, 0x4, SXTW
	0x031F9FA8 ADD X0, X8, 0x138
	0x031F9FAC LDP X8, X6, [X0]
	0x031F9FB0 MOVZ W3, 0x8
	0x031F9FB4 MOVZ W5, 0x10
	0x031F9FB8 MOV X0, X21
	0x031F9FBC MOV X1, X20
	0x031F9FC0 MOV W2, W31
	0x031F9FC4 MOV X4, X19
	0x031F9FC8 BLR X8
	0x031F9FCC MOV X0, X19
	0x031F9FD0 LDP X20, X19, [X31 + 0x30]
	0x031F9FD4 LDP X22, X21, [X31 + 0x20]
	0x031F9FD8 LDP X24, X23, [X31 + 0x10]
	0x031F9FDC LDP X30, X25, [X31], #0x40
	0x031F9FE0 RET
	0x031F9FE4 BL 0x1C16F20
	0x031F9FE8 STP X30, X19, [X31 - 0x10]!
	0x031F9FEC LDRB W8, [X0 + 0x10]
	0x031F9FF0 CBNZ W8, 0x31FA000
	0x031F9FF4 LDR X1, [X0 + 0x28]
	0x031F9FF8 LDP X30, X19, [X31], #0x10
	0x031F9FFC B 0x31F9D0C
	0x031FA000 ADRP X0, 0xF22000
	0x031FA004 LDR X0, [X0 + 0x4B8]
	0x031FA008 BL 0x1C16D08
	0x031FA00C BL 0x1C16F10
	0x031FA010 MOV X19, X0
	0x031FA014 ADRP X0, 0xF27000
	0x031FA018 LDR X0, [X0 + 0x328]
	0x031FA01C BL 0x1C16D08
	0x031FA020 MOV X1, X0
	0x031FA024 MOV X0, X19
	0x031FA028 MOV X2, X31
	0x031FA02C BL 0x338C448
	0x031FA030 ADRP X0, 0xF27000
	0x031FA034 LDR X0, [X0 + 0x350]
	0x031FA038 BL 0x1C16D08
	0x031FA03C MOV X1, X0
	0x031FA040 MOV X0, X19
	0x031FA044 BL 0x1C16DEC
	0x031FA048 STP X30, X19, [X31 - 0x10]!
	0x031FA04C LDRB W8, [X0 + 0x10]
	0x031FA050 CBNZ W8, 0x31FA0A8
	0x031FA054 MOV X19, X0
	0x031FA058 LDR X0, [X0 + 0x20]
	0x031FA05C CBZ X0, 0x31FA0B0
	0x031FA060 LDR W2, [X0 + 0x18]
	0x031FA064 MOV W1, W31
	0x031FA068 MOV X3, X31
	0x031FA06C BL 0x339FA34
	0x031FA070 LDR X0, [X19 + 0x28]
	0x031FA074 CBZ X0, 0x31FA0B0
	0x031FA078 LDR W2, [X0 + 0x18]
	0x031FA07C MOV W1, W31
	0x031FA080 MOV X3, X31

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X20, 0x11E4000
	010 Move X21, 0xEFB000
	011 Move W8, [X20+475]
	012 Move X21, [X21+2288]
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {35}
	018 Move X0, 0xEFD000
	019 Move X0, [X0+3144]
	020 Call 0x1C17CF4
	021 Move X0, 0xEFB000
	022 Move X0, [X0+2288]
	023 Call 0x1C17CF4
	024 Move X0, 0xEFB000
	025 Move X0, [X0+3544]
	026 Call 0x1C17CF4
	027 Move X0, 0xF28000
	028 Move X0, [X0+2984]
	029 Call 0x1C17CF4
	030 Move X0, 0xF29000
	031 Move X0, [X0+744]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X20+475], W8
	035 Move X0, [X21]
	036 Call 0x1C17F10
	037 Move X1, X31
	038 Move X20, X0
	039 Call StringBuilder..ctor, X0
	040 Move X8, [X19+40]
	041 Compare X8, 0
	042 JumpIfEqual {95}
	043 Compare X20, 0
	044 JumpIfEqual {94}
	045 Move X8, 0xF29000
	046 Move X8, [X8+744]
	047 Move X0, X20
	048 Move X2, X31
	049 Move X1, [X8]
	050 Call StringBuilder.Append, X0, X1
	051 Move X25, [X19+40]
	052 Compare X25, 0
	053 JumpIfEqual {94}
	054 Move X22, 0xEFD000
	055 Move X23, 0xF28000
	056 Move X24, 0xEFB000
	057 Move X22, [X22+3144]
	058 Move X23, [X23+2984]
	059 Move X24, [X24+3544]
	060 Move X21, X31
	061 NotImplemented "Instruction LDRSW not yet implemented."
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move X0, [X22]
	064 Move W8, [X0+224]
	065 Compare W8, 0
	066 JumpIfNotEqual {68}
	067 Call 0x1C17DFC
	068 Move X0, X31
	069 Call CultureInfo.get_InvariantCulture
	070 Move W8, [X25+24]
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move X1, [X23]
	073 Add X8, X25, X21
	074 Move X2, X0
	075 Add X0, X8, 32
	076 Move X3, X31
	077 Call Byte.ToString, X0, X1, X2
	078 Move X1, X0
	079 Move X0, X20
	080 Move X2, X31
	081 Call StringBuilder.Append, X0, X1
	082 Move TEMP, X21
	083 And TEMP, TEMP, 1
	084 Compare TEMP, 1
	085 JumpIfNotEqual {90}
	086 Move X1, [X24]
	087 Move X0, X20
	088 Move X2, X31
	089 Call StringBuilder.Append, X0, X1
	090 Move X25, [X19+40]
	091 Add X21, X21, 1
	092 Compare X25, 0
	093 JumpIfNotEqual {61}
	094 Call 0x1C17F20
	095 Compare X20, 0
	096 JumpIfEqual {94}
	097 Move X8, [X20]
	098 Move X0, X20
	099 Move X20, [X31+48]
	100 Move X19, [X31+56]
	101 Move X22, [X31+32]
	102 Move X21, [X31+40]
	103 Move X2, [X8+360]
	104 Move X1, [X8+368]
	105 Move X24, [X31+16]
	106 Move X23, [X31+24]
	107 Move X30, [X31+64]
	108 Move X25, [X31+72]
	109 CallNoReturn X2
	110 Call 0x1C17F28

