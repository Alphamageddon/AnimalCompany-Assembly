Type: Mono.Security.X509.Extensions.BasicConstraintsExtension

Method: System.Void .ctor(Mono.Security.X509.X509Extension extension)

Disassembly:
	0x031F8500 B 0x31F8508

ISIL:
	001 Call X509Extension..ctor, X0, X1
	002 Return 

Method: System.Void Decode()

Disassembly:
	0x031FA084 BL 0x339FA34
	0x031FA088 LDR X0, [X19 + 0x18]
	0x031FA08C CBZ X0, 0x31FA0A0
	0x031FA090 LDR W2, [X0 + 0x18]
	0x031FA094 MOV W1, W31
	0x031FA098 MOV X3, X31
	0x031FA09C BL 0x339FA34
	0x031FA0A0 MOVZ W8, 0x1
	0x031FA0A4 STRB W8, [X19 + 0x10]
	0x031FA0A8 LDP X30, X19, [X31], #0x10
	0x031FA0AC RET
	0x031FA0B0 BL 0x1C16F20
	0x031FA0B4 STR X30, [X31 - 0x30]!
	0x031FA0B8 STP X22, X21, [X31 + 0x10]
	0x031FA0BC STP X20, X19, [X31 + 0x20]
	0x031FA0C0 ADRP X21, 0x11E2000
	0x031FA0C4 ADRP X22, 0xEF9000
	0x031FA0C8 LDRB W8, [X21 + 0x1E4]
	0x031FA0CC LDR X22, [X22 + 0x618]
	0x031FA0D0 MOV W20, W2
	0x031FA0D4 MOV X19, X1
	0x031FA0D8 TBNZ X8, 0x0, 0x31FA0F0
	0x031FA0DC ADRP X0, 0xEF9000
	0x031FA0E0 LDR X0, [X0 + 0x618]
	0x031FA0E4 BL 0x1C16CF4
	0x031FA0E8 MOVZ W8, 0x1
	0x031FA0EC STRB W8, [X21 + 0x1E4]
	0x031FA0F0 LDR X0, [X22]
	0x031FA0F4 MOVZ W1, 0x8
	0x031FA0F8 BL 0x1C16D6C
	0x031FA0FC CBZ X19, 0x31FA2A8
	0x031FA100 LDR W8, [X19 + 0x18]
	0x031FA104 CMP W8, W20
	0x031FA108 B.LS 0x31FA2A4
	0x031FA10C ADD X9, X19, W20, SXTW
	0x031FA110 LDRB W10, [X9 + 0x20]!
	0x031FA114 CBZ X0, 0x31FA2A8
	0x031FA118 LDR W8, [X0 + 0x18]
	0x031FA11C CBZ W8, 0x31FA2A4
	0x031FA120 STRB W10, [X0 + 0x20]
	0x031FA124 LDR W10, [X19 + 0x18]
	0x031FA128 CMP W10, W20
	0x031FA12C B.LS 0x31FA2A4
	0x031FA130 ADD W11, W20, 0x1
	0x031FA134 CMP W11, W10
	0x031FA138 B.CS 0x31FA2A4
	0x031FA13C CMP W8, 0x1
	0x031FA140 B.LS 0x31FA2A4
	0x031FA144 ADD X10, X19, W11, SXTW
	0x031FA148 LDRB W12, [X10 + 0x20]!
	0x031FA14C LDRB W9, [X9]
	0x031FA150 UBFM W12, W12, 0x8, 0x7
	0x031FA154 EXTR W9, W9, W12, 0x19
	0x031FA158 STRB W9, [X0 + 0x21]
	0x031FA15C LDR W9, [X19 + 0x18]
	0x031FA160 CMP W11, W9
	0x031FA164 B.CS 0x31FA2A4
	0x031FA168 ADD W11, W20, 0x2
	0x031FA16C CMP W11, W9
	0x031FA170 B.CS 0x31FA2A4
	0x031FA174 CMP W8, 0x2
	0x031FA178 B.LS 0x31FA2A4
	0x031FA17C ADD X9, X19, W11, SXTW
	0x031FA180 LDRB W12, [X9 + 0x20]!
	0x031FA184 LDRB W10, [X10]
	0x031FA188 UBFM W12, W12, 0x8, 0x7
	0x031FA18C EXTR W10, W10, W12, 0x1A
	0x031FA190 STRB W10, [X0 + 0x22]
	0x031FA194 LDR W10, [X19 + 0x18]
	0x031FA198 CMP W11, W10
	0x031FA19C B.CS 0x31FA2A4
	0x031FA1A0 ADD W11, W20, 0x3
	0x031FA1A4 CMP W11, W10
	0x031FA1A8 B.CS 0x31FA2A4
	0x031FA1AC CMP W8, 0x3
	0x031FA1B0 B.LS 0x31FA2A4
	0x031FA1B4 ADD X10, X19, W11, SXTW

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x11E3000
	006 Move W8, [X20+476]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xF27000
	013 Move X0, [X0+2968]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+476], W8
	017 Move X0, [X19+32]
	018 Move TEMP, 0
	019 Not TEMP
	020 Move W8, TEMP
	021 Move [X19+40], W31
	022 Move [X19+44], W8
	023 Compare X0, 0
	024 JumpIfEqual {70}
	025 Move X20, 0xF27000
	026 Move X20, [X20+2968]
	027 Call ASN1.get_Value, X0
	028 Move X8, [X20]
	029 Move X21, X0
	030 Move X0, X8
	031 Call 0x1C17F10
	032 Move X1, X21
	033 Move X20, X0
	034 Call ASN1..ctor, X0, X1
	035 Compare X20, 0
	036 JumpIfEqual {70}
	037 Move W8, [X20+16]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move X0, X20
	040 Move W1, W31
	041 Call ASN1.get_Item, X0, X1
	042 Compare X0, 0
	043 JumpIfEqual {65}
	044 Move W8, [X0+16]
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Call ASN1.get_Value, X0
	047 Compare X0, 0
	048 JumpIfEqual {70}
	049 Move W8, [X0+24]
	050 Compare W8, 0
	051 JumpIfEqual {89}
	052 Move W8, [X0+32]
	053 Move W1, 1
	054 Move X0, X20
	055 NotImplemented "Instruction CMP not yet implemented."
	056 NotImplemented "Instruction CSET not yet implemented."
	057 Move [X19+40], W8
	058 Call ASN1.get_Item, X0, X1
	059 Compare X0, 0
	060 JumpIfEqual {65}
	061 Move W8, [X0+16]
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Call ASN1Convert.ToInt32, X0
	064 Move [X19+44], W0
	065 Move X20, [X31+16]
	066 Move X19, [X31+24]
	067 Move X30, [X31+32]
	068 Move X21, [X31+40]
	069 Return 
	070 Call 0x1C17F20
	071 Move X0, 0xF02000
	072 Move X0, [X0+1400]
	073 Call 0x1C17D08
	074 Call 0x1C17F10
	075 Move X19, X0
	076 Move X0, 0xF28000
	077 Move X0, [X0+752]
	078 Call 0x1C17D08
	079 Move X1, X0
	080 Move X0, X19
	081 Move X2, X31
	082 Call ArgumentException..ctor, X0, X1
	083 Move X0, 0xF28000
	084 Move X0, [X0+760]
	085 Call 0x1C17D08
	086 Move X1, X0
	087 Move X0, X19
	088 Call 0x1C17DEC
	089 Call 0x1C17F28

Method: System.Void Encode()

Disassembly:
	0x031FA1B8 LDRB W12, [X10 + 0x20]!
	0x031FA1BC LDRB W9, [X9]
	0x031FA1C0 UBFM W12, W12, 0x8, 0x7
	0x031FA1C4 EXTR W9, W9, W12, 0x1B
	0x031FA1C8 STRB W9, [X0 + 0x23]
	0x031FA1CC LDR W9, [X19 + 0x18]
	0x031FA1D0 CMP W11, W9
	0x031FA1D4 B.CS 0x31FA2A4
	0x031FA1D8 ADD W11, W20, 0x4
	0x031FA1DC CMP W11, W9
	0x031FA1E0 B.CS 0x31FA2A4
	0x031FA1E4 CMP W8, 0x4
	0x031FA1E8 B.LS 0x31FA2A4
	0x031FA1EC ADD X9, X19, W11, SXTW
	0x031FA1F0 LDRB W12, [X9 + 0x20]!
	0x031FA1F4 LDRB W10, [X10]
	0x031FA1F8 UBFM W12, W12, 0x8, 0x7
	0x031FA1FC EXTR W10, W10, W12, 0x1C
	0x031FA200 STRB W10, [X0 + 0x24]
	0x031FA204 LDR W10, [X19 + 0x18]
	0x031FA208 CMP W11, W10
	0x031FA20C B.CS 0x31FA2A4
	0x031FA210 ADD W11, W20, 0x5
	0x031FA214 CMP W11, W10
	0x031FA218 B.CS 0x31FA2A4
	0x031FA21C CMP W8, 0x5
	0x031FA220 B.LS 0x31FA2A4
	0x031FA224 ADD X10, X19, W11, SXTW
	0x031FA228 LDRB W12, [X10 + 0x20]!
	0x031FA22C LDRB W9, [X9]
	0x031FA230 UBFM W12, W12, 0x8, 0x7
	0x031FA234 EXTR W9, W9, W12, 0x1D
	0x031FA238 STRB W9, [X0 + 0x25]
	0x031FA23C LDR W12, [X19 + 0x18]
	0x031FA240 CMP W11, W12
	0x031FA244 B.CS 0x31FA2A4
	0x031FA248 ADD W9, W20, 0x6
	0x031FA24C CMP W9, W12
	0x031FA250 B.CS 0x31FA2A4
	0x031FA254 CMP W8, 0x6
	0x031FA258 B.LS 0x31FA2A4
	0x031FA25C ADD X11, X19, W9, SXTW
	0x031FA260 LDRB W12, [X11 + 0x20]!
	0x031FA264 LDRB W10, [X10]
	0x031FA268 UBFM W12, W12, 0x8, 0x7
	0x031FA26C EXTR W10, W10, W12, 0x1E
	0x031FA270 STRB W10, [X0 + 0x26]
	0x031FA274 LDR W10, [X19 + 0x18]
	0x031FA278 CMP W9, W10
	0x031FA27C B.CS 0x31FA2A4
	0x031FA280 CMP W8, 0x7
	0x031FA284 B.LS 0x31FA2A4
	0x031FA288 LDRB W8, [X11]
	0x031FA28C LDP X20, X19, [X31 + 0x20]
	0x031FA290 LDP X22, X21, [X31 + 0x10]
	0x031FA294 UBFM W8, W8, 0x1F, 0x1E
	0x031FA298 STRB W8, [X0 + 0x27]
	0x031FA29C LDR X30, [X31], #0x30
	0x031FA2A0 RET
	0x031FA2A4 BL 0x1C16F28
	0x031FA2A8 BL 0x1C16F20
	0x031FA2AC STP X30, X23, [X31 - 0x30]!
	0x031FA2B0 STP X22, X21, [X31 + 0x10]
	0x031FA2B4 STP X20, X19, [X31 + 0x20]
	0x031FA2B8 ADRP X23, 0x11E2000
	0x031FA2BC ADRP X22, 0xEF9000
	0x031FA2C0 ADRP X19, 0xF27000
	0x031FA2C4 ADRP X20, 0xF27000
	0x031FA2C8 ADRP X21, 0xF27000
	0x031FA2CC LDRB W8, [X23 + 0x1E6]
	0x031FA2D0 LDR X22, [X22 + 0x618]
	0x031FA2D4 LDR X19, [X19 + 0x358]
	0x031FA2D8 LDR X20, [X20 + 0x318]
	0x031FA2DC LDR X21, [X21 + 0x360]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x11E3000
	008 Move X23, 0xF27000
	009 Move W8, [X20+477]
	010 Move X23, [X23+2968]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xF27000
	017 Move X0, [X0+2968]
	018 Call 0x1C17CF4
	019 Move X0, 0xEFA000
	020 Move X0, [X0+1560]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X20+477], W8
	024 Move X0, [X23]
	025 Call 0x1C17F10
	026 Move X1, X31
	027 Move X20, X0
	028 Call Object..ctor, X0
	029 Move W8, 48
	030 Move [X20+16], W8
	031 Move [X20+24], X31
	032 Move W8, [X19+40]
	033 Compare W8, 0
	034 JumpIfEqual {71}
	035 Move X8, 0xEFA000
	036 Move X8, [X8+1560]
	037 Move W1, 1
	038 Move X0, [X8]
	039 Call 0x1C17D6C
	040 Compare X0, 0
	041 JumpIfEqual {90}
	042 Move W8, [X0+24]
	043 Move X21, X0
	044 Compare W8, 0
	045 JumpIfEqual {91}
	046 Move W8, 255
	047 Move [X21+32], W8
	048 Move X0, [X23]
	049 Call 0x1C17F10
	050 Move X1, X31
	051 Move X22, X0
	052 Call Object..ctor, X0
	053 Move W8, 1
	054 Move X0, X20
	055 Move X1, X22
	056 Move [X22+16], W8
	057 Move [X22+24], X21
	058 Call ASN1.Add, X0, X1
	059 Move W8, [X19+40]
	060 Compare W8, 0
	061 JumpIfEqual {71}
	062 Move W0, [X19+44]
	063 Move TEMP, X0
	064 And TEMP, TEMP, -2147483648
	065 Compare TEMP, -2147483648
	066 JumpIfEqual {71}
	067 Call ASN1Convert.FromInt32, X0
	068 Move X1, X0
	069 Move X0, X20
	070 Call ASN1.Add, X0, X1
	071 Move X0, [X23]
	072 Call 0x1C17F10
	073 Move X1, X31
	074 Move X21, X0
	075 Call Object..ctor, X0
	076 Move W8, 4
	077 Move [X21+24], X31
	078 Move [X21+16], W8
	079 Move [X19+32], X21
	080 Move X0, X21
	081 Move X1, X20
	082 Move X20, [X31+32]
	083 Move X19, [X31+40]
	084 Move X22, [X31+16]
	085 Move X21, [X31+24]
	086 Move X30, [X31+48]
	087 Move X23, [X31+56]
	088 Call ASN1.Add, X0, X1
	089 Return 
	090 Call 0x1C17F20
	091 Call 0x1C17F28

Method: System.Boolean get_CertificateAuthority()

Disassembly:
	0x031FA2E0 TBNZ X8, 0x0, 0x31FA31C
	0x031FA2E4 ADRP X0, 0xEF9000

ISIL:
	001 Move W0, [X0+40]
	002 Return X0

Method: System.String ToString()

Disassembly:
	0x031FA2E8 LDR X0, [X0 + 0x618]
	0x031FA2EC BL 0x1C16CF4
	0x031FA2F0 ADRP X0, 0xF27000
	0x031FA2F4 LDR X0, [X0 + 0x318]
	0x031FA2F8 BL 0x1C16CF4
	0x031FA2FC ADRP X0, 0xF27000
	0x031FA300 LDR X0, [X0 + 0x358]
	0x031FA304 BL 0x1C16CF4
	0x031FA308 ADRP X0, 0xF27000
	0x031FA30C LDR X0, [X0 + 0x360]
	0x031FA310 BL 0x1C16CF4
	0x031FA314 MOVZ W8, 0x1
	0x031FA318 STRB W8, [X23 + 0x1E6]
	0x031FA31C LDR X0, [X22]
	0x031FA320 MOVZ W1, 0x8
	0x031FA324 BL 0x1C16D6C
	0x031FA328 LDR X1, [X19]
	0x031FA32C MOV X2, X31
	0x031FA330 MOV X19, X0
	0x031FA334 BL 0x32C5BD8
	0x031FA338 LDR X8, [X20]
	0x031FA33C MOVZ W1, 0x8
	0x031FA340 LDR X8, [X8 + 0xB8]
	0x031FA344 STR X19, [X8]
	0x031FA348 LDR X0, [X22]
	0x031FA34C BL 0x1C16D6C
	0x031FA350 LDR X1, [X21]
	0x031FA354 MOV X2, X31
	0x031FA358 MOV X19, X0
	0x031FA35C BL 0x32C5BD8
	0x031FA360 LDR X8, [X20]
	0x031FA364 LDP X22, X21, [X31 + 0x10]
	0x031FA368 LDR X8, [X8 + 0xB8]
	0x031FA36C STR X19, [X8 + 0x8]
	0x031FA370 LDP X20, X19, [X31 + 0x20]
	0x031FA374 LDP X30, X23, [X31], #0x30
	0x031FA378 RET
	0x031FA37C STP X30, X25, [X31 - 0x40]!
	0x031FA380 STP X24, X23, [X31 + 0x10]
	0x031FA384 STP X22, X21, [X31 + 0x20]
	0x031FA388 STP X20, X19, [X31 + 0x30]
	0x031FA38C ADRP X21, 0x11E2000
	0x031FA390 ADRP X23, 0xEF9000
	0x031FA394 ADRP X20, 0xF27000
	0x031FA398 LDRB W8, [X21 + 0x1E7]
	0x031FA39C LDR X23, [X23 + 0x618]
	0x031FA3A0 LDR X20, [X20 + 0x320]
	0x031FA3A4 MOV X19, X1
	0x031FA3A8 MOV X22, X0
	0x031FA3AC TBNZ X8, 0x0, 0x31FA3E8
	0x031FA3B0 ADRP X0, 0xEF9000
	0x031FA3B4 LDR X0, [X0 + 0x618]
	0x031FA3B8 BL 0x1C16CF4
	0x031FA3BC ADRP X0, 0xF27000
	0x031FA3C0 LDR X0, [X0 + 0x368]
	0x031FA3C4 BL 0x1C16CF4
	0x031FA3C8 ADRP X0, 0xF27000
	0x031FA3CC LDR X0, [X0 + 0x320]
	0x031FA3D0 BL 0x1C16CF4
	0x031FA3D4 ADRP X0, 0xF26000
	0x031FA3D8 LDR X0, [X0 + 0xEA0]
	0x031FA3DC BL 0x1C16CF4
	0x031FA3E0 MOVZ W8, 0x1
	0x031FA3E4 STRB W8, [X21 + 0x1E7]
	0x031FA3E8 LDR X0, [X23]
	0x031FA3EC MOVZ W1, 0x15
	0x031FA3F0 BL 0x1C16D6C
	0x031FA3F4 LDR X8, [X20]
	0x031FA3F8 MOV X20, X0
	0x031FA3FC LDR W9, [X8 + 0xE0]
	0x031FA400 CBNZ W9, 0x31FA40C
	0x031FA404 MOV X0, X8
	0x031FA408 BL 0x1C16DFC
	0x031FA40C MOV X0, X31
	0x031FA410 BL 0x3252CD4
	0x031FA414 CBZ X0, 0x31FA6A4
	0x031FA418 LDR X8, [X0]
	0x031FA41C ADRP X25, 0xF27000
	0x031FA420 MOVZ W1, 0x2
	0x031FA424 MOV X21, X0
	0x031FA428 LDR X9, [X8 + 0x248]
	0x031FA42C LDR X2, [X8 + 0x250]
	0x031FA430 LDR X25, [X25 + 0x368]
	0x031FA434 BLR X9
	0x031FA438 CBZ X22, 0x31FA4E8
	0x031FA43C LDR W8, [X22 + 0x10]
	0x031FA440 CMP W8, 0x0
	0x031FA444 B.LE 0x31FA4E8
	0x031FA448 LDR X0, [X25]
	0x031FA44C LDR W8, [X0 + 0xE0]
	0x031FA450 CBNZ W8, 0x31FA458
	0x031FA454 BL 0x1C16DFC
	0x031FA458 MOV X0, X22
	0x031FA45C MOV W1, W31
	0x031FA460 BL 0x31FA6A8
	0x031FA464 LDR X8, [X21]
	0x031FA468 MOV X1, X0
	0x031FA46C MOV X0, X21
	0x031FA470 LDP X9, X2, [X8 + 0x1F8]
	0x031FA474 BLR X9
	0x031FA478 LDR X8, [X21]
	0x031FA47C MOV X0, X21
	0x031FA480 LDR X9, [X8 + 0x278]
	0x031FA484 LDR X1, [X8 + 0x280]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x11E3000
	008 Move X21, 0xEFA000
	009 Move W8, [X20+478]
	010 Move X21, [X21+2288]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {39}
	016 Move X0, 0xEFC000
	017 Move X0, [X0+3144]
	018 Call 0x1C17CF4
	019 Move X0, 0xEFA000
	020 Move X0, [X0+2288]
	021 Call 0x1C17CF4
	022 Move X0, 0xF28000
	023 Move X0, [X0+768]
	024 Call 0x1C17CF4
	025 Move X0, 0xF01000
	026 Move X0, [X0+3784]
	027 Call 0x1C17CF4
	028 Move X0, 0xF28000
	029 Move X0, [X0+776]
	030 Call 0x1C17CF4
	031 Move X0, 0xEFC000
	032 Move X0, [X0+1944]
	033 Call 0x1C17CF4
	034 Move X0, 0xF28000
	035 Move X0, [X0+784]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X20+478], W8
	039 Move X0, [X21]
	040 Call 0x1C17F10
	041 Move X1, X31
	042 Move X20, X0
	043 Call StringBuilder..ctor, X0
	044 Compare X20, 0
	045 JumpIfEqual {115}
	046 Move X8, 0xF28000
	047 Move X8, [X8+768]
	048 Move X21, 0xF28000
	049 Move X22, 0xF01000
	050 Move X23, 0xF28000
	051 Move X1, [X8]
	052 Move X21, [X21+784]
	053 Move X22, [X22+3784]
	054 Move X23, [X23+776]
	055 Move X0, X20
	056 Move X2, X31
	057 Call StringBuilder.Append, X0, X1
	058 Move W8, [X19+40]
	059 Move X0, X20
	060 Move X2, X31
	061 NotImplemented "Instruction CMP not yet implemented."
	062 NotImplemented "Instruction CSEL not yet implemented."
	063 Move X1, [X8]
	064 Call StringBuilder.Append, X0, X1
	065 Move X0, X31
	066 Call Environment.get_NewLine
	067 Move X1, X0
	068 Move X0, X20
	069 Move X2, X31
	070 Call StringBuilder.Append, X0, X1
	071 Move X1, [X23]
	072 Move X0, X20
	073 Move X2, X31
	074 Call StringBuilder.Append, X0, X1
	075 Add X19, X19, 44
	076 Move W8, [X19]
	077 Add W31, W8, 1
	078 Move X8, 0xEFC000
	079 Move X8, [X8+3144]
	080 Move X0, [X8]
	081 Move W8, [X0+224]
	082 Compare W8, 0
	083 JumpIfNotEqual {85}
	084 Call 0x1C17DFC
	085 Move X0, X31
	086 Call CultureInfo.get_InvariantCulture
	087 Move X1, X0
	088 Move X0, X19
	089 Move X2, X31
	090 Call Int32.ToString, X0, X1
	091 Move X1, X0
	092 Move X8, 0xEFC000
	093 Move X8, [X8+1944]
	094 Move X1, [X8]
	095 Move X0, X20
	096 Move X2, X31
	097 Call StringBuilder.Append, X0, X1
	098 Move X0, X31
	099 Call Environment.get_NewLine
	100 Move X1, X0
	101 Move X0, X20
	102 Move X2, X31
	103 Call StringBuilder.Append, X0, X1
	104 Move X8, [X20]
	105 Move X0, X20
	106 Move X20, [X31+32]
	107 Move X19, [X31+40]
	108 Move X22, [X31+16]
	109 Move X21, [X31+24]
	110 Move X2, [X8+360]
	111 Move X1, [X8+368]
	112 Move X30, [X31+48]
	113 Move X23, [X31+56]
	114 CallNoReturn X2
	115 Call 0x1C17F20

