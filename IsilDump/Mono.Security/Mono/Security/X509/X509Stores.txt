Type: Mono.Security.X509.X509Stores

Method: System.Void .ctor(System.String path, System.Boolean newFormat)

Disassembly:
	0x031F99CC LDP X20, X19, [X31 + 0x20]
	0x031F99D0 LDP X22, X21, [X31 + 0x10]
	0x031F99D4 LDR X30, [X31], #0x30
	0x031F99D8 RET
	0x031F99DC ADRP X0, 0xEFF000
	0x031F99E0 LDR X0, [X0 + 0x528]
	0x031F99E4 BL 0x1C16D08
	0x031F99E8 BL 0x1C16F10
	0x031F99EC MOV X19, X0
	0x031F99F0 ADRP X0, 0xF28000
	0x031F99F4 LDR X0, [X0 + 0x338]
	0x031F99F8 BL 0x1C16D08

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, X1
	006 Move X1, X31
	007 Move X20, X0
	008 And W21, W2, 1
	009 Call Object..ctor, X0
	010 Move [X20+16], X19
	011 Move [X20+24], W21
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move X30, [X31+32]
	015 Move X21, [X31+40]
	016 Return 

Method: Mono.Security.X509.X509Store get_TrustedRoot()

Disassembly:
	0x031F9A94 CMP W1, 0x1
	0x031F9A98 MOV X21, X0
	0x031F9A9C B.NE 0x31F9ACC
	0x031F9AA0 MOV X0, X21
	0x031F9AA4 BL 0x3EB1AD0
	0x031F9AA8 LDR X20, [X0]
	0x031F9AAC BL 0x3EB1AE0
	0x031F9AB0 MOV X0, X19
	0x031F9AB4 MOV X1, X31
	0x031F9AB8 BL 0x33CB4DC
	0x031F9ABC CBNZ X20, 0x31F9AD4
	0x031F9AC0 LDP X20, X19, [X31 + 0x10]
	0x031F9AC4 LDP X30, X21, [X31], #0x20
	0x031F9AC8 RET
	0x031F9ACC MOV X20, X31
	0x031F9AD0 B 0x31F9AE0
	0x031F9AD4 MOV X0, X20
	0x031F9AD8 BL 0x1C16F18
	0x031F9ADC MOV X21, X0
	0x031F9AE0 MOV X0, X19
	0x031F9AE4 MOV X1, X31
	0x031F9AE8 BL 0x33CB4DC
	0x031F9AEC CBNZ X20, 0x31F9AF8
	0x031F9AF0 MOV X0, X21
	0x031F9AF4 BL 0x1D2C690
	0x031F9AF8 MOV X0, X20
	0x031F9AFC BL 0x1C16F18
	0x031F9B00 BL 0x1990590
	0x031F9B04 STP X30, X21, [X31 - 0x20]!
	0x031F9B08 STP X20, X19, [X31 + 0x10]
	0x031F9B0C ADRP X21, 0x11E3000
	0x031F9B10 ADRP X20, 0xF01000
	0x031F9B14 LDRB W8, [X21 + 0x1E2]
	0x031F9B18 LDR X20, [X20 + 0xC10]
	0x031F9B1C MOV X19, X0
	0x031F9B20 TBNZ X8, 0x0, 0x31F9B38
	0x031F9B24 ADRP X0, 0xF01000
	0x031F9B28 LDR X0, [X0 + 0xC10]
	0x031F9B2C BL 0x1C16CF4
	0x031F9B30 MOVZ W8, 0x1
	0x031F9B34 STRB W8, [X21 + 0x1E2]
	0x031F9B38 MOV X0, X19
	0x031F9B3C MOV W1, W31
	0x031F9B40 BL 0x31FA048
	0x031F9B44 LDR X0, [X20]
	0x031F9B48 LDR W8, [X0 + 0xE0]
	0x031F9B4C CBNZ W8, 0x31F9B54
	0x031F9B50 BL 0x1C16DFC
	0x031F9B54 MOV X0, X19
	0x031F9B58 LDP X20, X19, [X31 + 0x10]
	0x031F9B5C MOV X1, X31
	0x031F9B60 LDP X30, X21, [X31], #0x20
	0x031F9B64 B 0x33B3E9C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x11E4000
	007 Move W8, [X20+470]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {24}
	013 Move X0, 0xF22000
	014 Move X0, [X0+464]
	015 Call 0x1C17CF4
	016 Move X0, 0xF29000
	017 Move X0, [X0+688]
	018 Call 0x1C17CF4
	019 Move X0, 0xF29000
	020 Move X0, [X0+696]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X20+470], W8
	024 Move X20, [X19+32]
	025 Compare X20, 0
	026 JumpIfNotEqual {56}
	027 Move X8, 0xF22000
	028 Move X8, [X8+464]
	029 Move X20, [X19+16]
	030 Move X0, [X8]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move X8, 0xF29000
	036 Move X8, [X8+696]
	037 Move X0, X20
	038 Move X2, X31
	039 Move X1, [X8]
	040 Call Path.Combine, X0, X1
	041 Move X8, 0xF29000
	042 Move W22, [X19+24]
	043 Move X8, [X8+688]
	044 Move X21, X0
	045 Move X8, [X8]
	046 Move X0, X8
	047 Call 0x1C17F10
	048 Move X1, X31
	049 Move X20, X0
	050 Call Object..ctor, X0
	051 Move W8, 1
	052 Move [X20+16], X21
	053 Move [X20+41], W22
	054 Move [X20+40], W8
	055 Move [X19+32], X20
	056 Move X0, X20
	057 Move X20, [X31+32]
	058 Move X19, [X31+40]
	059 Move X22, [X31+16]
	060 Move X21, [X31+24]
	061 Move X30, [X31+48]
	062 Return X0

Method: Mono.Security.X509.X509Store Open(System.String storeName, System.Boolean create)

Disassembly:
	0x031F9B68 STP X30, X23, [X31 - 0x30]!
	0x031F9B6C STP X22, X21, [X31 + 0x10]
	0x031F9B70 STP X20, X19, [X31 + 0x20]
	0x031F9B74 ADRP X20, 0x11E3000
	0x031F9B78 ADRP X22, 0xEFA000
	0x031F9B7C LDRB W8, [X20 + 0x1E5]
	0x031F9B80 LDR X22, [X22 + 0x618]
	0x031F9B84 MOV W19, W2
	0x031F9B88 MOV X21, X1
	0x031F9B8C TBNZ X8, 0x0, 0x31F9BBC
	0x031F9B90 ADRP X0, 0xEFA000
	0x031F9B94 LDR X0, [X0 + 0x618]
	0x031F9B98 BL 0x1C16CF4
	0x031F9B9C ADRP X0, 0xEFC000
	0x031F9BA0 LDR X0, [X0 + 0xC48]
	0x031F9BA4 BL 0x1C16CF4
	0x031F9BA8 ADRP X0, 0xEFA000
	0x031F9BAC LDR X0, [X0 + 0x5A8]
	0x031F9BB0 BL 0x1C16CF4
	0x031F9BB4 MOVZ W8, 0x1
	0x031F9BB8 STRB W8, [X20 + 0x1E5]
	0x031F9BBC LDR X0, [X22]
	0x031F9BC0 MOVZ W1, 0x7
	0x031F9BC4 BL 0x1C16D6C
	0x031F9BC8 CBZ X21, 0x31F9CA8
	0x031F9BCC ADRP X8, 0xEFA000
	0x031F9BD0 LDR X8, [X8 + 0x5A8]
	0x031F9BD4 MOV X20, X0
	0x031F9BD8 ADRP X23, 0xEFC000
	0x031F9BDC LDR W22, [X21 + 0x10]
	0x031F9BE0 LDR X0, [X8]
	0x031F9BE4 LDR W8, [X0 + 0xE0]
	0x031F9BE8 LDR X23, [X23 + 0xC48]
	0x031F9BEC CBNZ W8, 0x31F9BF4
	0x031F9BF0 BL 0x1C16DFC
	0x031F9BF4 SUB W0, W22, W19
	0x031F9BF8 MOVZ W1, 0x7
	0x031F9BFC MOV X2, X31
	0x031F9C00 BL 0x337EE94
	0x031F9C04 MOV W22, W0
	0x031F9C08 MOV X0, X31
	0x031F9C0C BL 0x3242EC8
	0x031F9C10 LDR X8, [X23]
	0x031F9C14 MOV X23, X0
	0x031F9C18 LDR W9, [X8 + 0xE0]
	0x031F9C1C CBNZ W9, 0x31F9C28
	0x031F9C20 MOV X0, X8
	0x031F9C24 BL 0x1C16DFC
	0x031F9C28 MOV X0, X31
	0x031F9C2C BL 0x33387A0
	0x031F9C30 MOV X1, X0
	0x031F9C34 MOV X0, X21
	0x031F9C38 MOV X2, X31
	0x031F9C3C BL 0x322B7DC
	0x031F9C40 CBZ X23, 0x31F9CA8
	0x031F9C44 LDR X8, [X23]
	0x031F9C48 MOV X1, X0
	0x031F9C4C MOV X0, X23
	0x031F9C50 MOV W2, W19
	0x031F9C54 LDR X9, [X8 + 0x278]
	0x031F9C58 LDR X6, [X8 + 0x280]
	0x031F9C5C MOV W3, W22
	0x031F9C60 MOV X4, X20
	0x031F9C64 MOV W5, W31
	0x031F9C68 BLR X9
	0x031F9C6C MOV X1, X20
	0x031F9C70 MOV W2, W31
	0x031F9C74 BL 0x31FA0B4
	0x031F9C78 CBZ X20, 0x31F9CA8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x11E4000
	007 Move W8, [X22+471]
	008 Move W19, W2
	009 Move X20, X1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0xF22000
	016 Move X0, [X0+464]
	017 Call 0x1C17CF4
	018 Move X0, 0xF29000
	019 Move X0, [X0+688]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+471], W8
	023 Compare X20, 0
	024 JumpIfEqual {67}
	025 Move X8, 0xF22000
	026 Move X8, [X8+464]
	027 Move X21, [X21+16]
	028 Move X0, [X8]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1C17DFC
	033 Move X0, X21
	034 Move X1, X20
	035 Move X2, X31
	036 Call Path.Combine, X0, X1
	037 Move X20, X0
	038 Move TEMP, X19
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfEqual {50}
	042 Move X0, X20
	043 Move X1, X31
	044 Call Directory.Exists, X0
	045 Move X19, X31
	046 Move TEMP, X0
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfNotEqual {60}
	050 Move X8, 0xF29000
	051 Move X8, [X8+688]
	052 Move X0, [X8]
	053 Call 0x1C17F10
	054 Move X1, X31
	055 Move X19, X0
	056 Call Object..ctor, X0
	057 Move W8, 1
	058 Move [X19+16], X20
	059 NotImplemented "Instruction STRH not yet implemented."
	060 Move X0, X19
	061 Move X20, [X31+32]
	062 Move X19, [X31+40]
	063 Move X22, [X31+16]
	064 Move X21, [X31+24]
	065 Move X30, [X31+48]
	066 Return X0
	067 Move X0, 0xF00000
	068 Move X0, [X0+1320]
	069 Call 0x1C17D08
	070 Call 0x1C17F10
	071 Move X19, X0
	072 Move X0, 0xF29000
	073 Move X0, [X0+704]
	074 Call 0x1C17D08
	075 Move X1, X0
	076 Move X0, X19
	077 Move X2, X31
	078 Call ArgumentNullException..ctor, X0, X1
	079 Move X0, 0xF29000
	080 Move X0, [X0+712]
	081 Call 0x1C17D08
	082 Move X1, X0
	083 Move X0, X19
	084 Call 0x1C17DEC

