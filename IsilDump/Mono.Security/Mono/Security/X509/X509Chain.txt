Type: Mono.Security.X509.X509Chain

Method: System.Void .ctor()

Disassembly:
	0x031F7860 LDP X2, X1, [X9 + 0x178]
	0x031F7864 LDR X30, [X31], #0x20
	0x031F7868 BR X2
	0x031F786C ADRP X0, 0xF2A000
	0x031F7870 LDR X0, [X0 + 0x238]
	0x031F7874 BL 0x1C16D08
	0x031F7878 MOV X19, X0
	0x031F787C ADRP X0, 0xF04000
	0x031F7880 LDR X0, [X0 + 0x578]
	0x031F7884 BL 0x1C16D08
	0x031F7888 BL 0x1C16F10
	0x031F788C MOV X1, X19
	0x031F7890 MOV X2, X31
	0x031F7894 MOV X20, X0
	0x031F7898 BL 0x3314A68
	0x031F789C ADRP X0, 0xF2A000
	0x031F78A0 LDR X0, [X0 + 0x248]
	0x031F78A4 BL 0x1C16D08
	0x031F78A8 MOV X1, X0
	0x031F78AC MOV X0, X20
	0x031F78B0 BL 0x1C16DEC
	0x031F78B4 ADRP X0, 0xF01000
	0x031F78B8 LDR X0, [X0 + 0x528]
	0x031F78BC BL 0x1C16D08
	0x031F78C0 BL 0x1C16F10

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x11E6000
	006 Move X20, 0xF2A000
	007 Move W8, [X21+445]
	008 Move X20, [X20+3256]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xF2A000
	015 Move X0, [X0+3256]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+445], W8
	019 Move X0, X19
	020 Move X1, X31
	021 Call Object..ctor, X0
	022 Move X0, [X20]
	023 Call 0x1C17F10
	024 Move X1, X31
	025 Move X20, X0
	026 Call CollectionBase..ctor, X0
	027 Move [X19+24], X20
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X30, [X31+32]
	031 Move X21, [X31+40]
	032 Return 

Method: Mono.Security.X509.X509CertificateCollection get_TrustAnchors()

Disassembly:
	0x031F78C4 MOV X19, X0
	0x031F78C8 ADRP X0, 0xF2A000
	0x031F78CC LDR X0, [X0 + 0x250]
	0x031F78D0 BL 0x1C16D08
	0x031F78D4 MOV X1, X0
	0x031F78D8 MOV X0, X19
	0x031F78DC MOV X2, X31
	0x031F78E0 BL 0x330E100
	0x031F78E4 ADRP X0, 0xF2A000
	0x031F78E8 LDR X0, [X0 + 0x248]
	0x031F78EC BL 0x1C16D08
	0x031F78F0 MOV X1, X0
	0x031F78F4 MOV X0, X19
	0x031F78F8 BL 0x1C16DEC
	0x031F78FC STP X30, X19, [X31 - 0x10]!
	0x031F7900 MOV X19, X0
	0x031F7904 LDR X0, [X0 + 0x20]
	0x031F7908 CBNZ X0, 0x31F7920
	0x031F790C LDR X8, [X19]
	0x031F7910 MOV X0, X19
	0x031F7914 LDP X9, X1, [X8 + 0x188]
	0x031F7918 BLR X9
	0x031F791C LDR X0, [X19 + 0x20]
	0x031F7920 LDP X30, X19, [X31], #0x10
	0x031F7924 RET
	0x031F7928 RET
	0x031F792C RET
	0x031F7930 LDR X0, [X0 + 0x10]
	0x031F7934 RET
	0x031F7938 LDRB W0, [X0 + 0x18]
	0x031F793C RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x11E6000
	005 Move W8, [X20+446]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xF2A000
	012 Move X0, [X0+3256]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+446], W8
	016 Move X0, [X19+16]
	017 Compare X0, 0
	018 JumpIfNotEqual {34}
	019 Move X8, 0xF2A000
	020 Move X8, [X8+3256]
	021 Move X0, [X8]
	022 Call 0x1C17F10
	023 Move X1, X31
	024 Move X20, X0
	025 Call CollectionBase..ctor, X0
	026 Move [X19+16], X20
	027 Call X509StoreManager.get_TrustedRootCertificates
	028 Compare X20, 0
	029 JumpIfEqual {38}
	030 Move X1, X0
	031 Move X0, X20
	032 Call X509CertificateCollection.AddRange, X0, X1
	033 Move X0, [X19+16]
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X30, [X31+32]
	037 Return X0
	038 Call 0x1C17F20

Method: System.Void LoadCertificates(Mono.Security.X509.X509CertificateCollection collection)

Disassembly:
	0x031F7A0C B.NE 0x31F7A6C
	0x031F7A10 MOV W20, W31
	0x031F7A14 CBZ X8, 0x31F7A20
	0x031F7A18 LDR W23, [X8 + 0x18]
	0x031F7A1C B 0x31F7A24
	0x031F7A20 MOV W23, W31

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+24]
	003 Compare X0, 0
	004 JumpIfEqual {8}
	005 Move X30, [X31+16]
	006 Call X509CertificateCollection.AddRange, X0, X1
	007 Return 
	008 Call 0x1C17F20

Method: System.Boolean Build(Mono.Security.X509.X509Certificate leaf)

Disassembly:
	0x031F7A24 CMP W20, W23
	0x031F7A28 B.GE 0x31F7A80
	0x031F7A2C MOV W1, W20
	0x031F7A30 BL 0x31E8704
	0x031F7A34 LDR X8, [X22 + 0x20]
	0x031F7A38 CBZ X8, 0x31F7A8C
	0x031F7A3C MOV X21, X0
	0x031F7A40 MOV X0, X8
	0x031F7A44 MOV W1, W20
	0x031F7A48 BL 0x31E8704
	0x031F7A4C CMP X21, X0
	0x031F7A50 B.NE 0x31F7A80
	0x031F7A54 LDR X0, [X19 + 0x20]
	0x031F7A58 CBZ X0, 0x31F7A8C
	0x031F7A5C LDR X8, [X0 + 0x18]
	0x031F7A60 ADD W20, W20, 0x1
	0x031F7A64 CBNZ X8, 0x31F7A18
	0x031F7A68 B 0x31F7A20
	0x031F7A6C MOV W0, W31
	0x031F7A70 LDP X20, X19, [X31 + 0x20]
	0x031F7A74 LDP X22, X21, [X31 + 0x10]
	0x031F7A78 LDP X30, X23, [X31], #0x30
	0x031F7A7C RET
	0x031F7A80 CMP W20, W23
	0x031F7A84 CSET W0, GE
	0x031F7A88 B 0x31F7A70
	0x031F7A8C BL 0x1C16F20
	0x031F7A90 STR X30, [X31 - 0x10]!
	0x031F7A94 LDR X0, [X0 + 0x10]
	0x031F7A98 CBZ X0, 0x31F7AAC
	0x031F7A9C LDR X8, [X0]
	0x031F7AA0 LDP X2, X1, [X8 + 0x158]
	0x031F7AA4 LDR X30, [X31], #0x10
	0x031F7AA8 BR X2
	0x031F7AAC BL 0x1C16F20
	0x031F7AB0 STP X29, X30, [X31 - 0x60]!
	0x031F7AB4 STP X28, X27, [X31 + 0x10]
	0x031F7AB8 STP X26, X25, [X31 + 0x20]
	0x031F7ABC STP X24, X23, [X31 + 0x30]
	0x031F7AC0 STP X22, X21, [X31 + 0x40]
	0x031F7AC4 STP X20, X19, [X31 + 0x50]
	0x031F7AC8 ADRP X23, 0x11E5000
	0x031F7ACC LDRB W8, [X23 + 0x1C6]
	0x031F7AD0 MOV W20, W3
	0x031F7AD4 MOV W21, W2
	0x031F7AD8 MOV X19, X1
	0x031F7ADC MOV X22, X0
	0x031F7AE0 TBNZ X8, 0x0, 0x31F7B40
	0x031F7AE4 ADRP X0, 0xF05000
	0x031F7AE8 LDR X0, [X0 + 0x9E8]
	0x031F7AEC BL 0x1C16CF4
	0x031F7AF0 ADRP X0, 0xEFE000
	0x031F7AF4 LDR X0, [X0 + 0xC48]
	0x031F7AF8 BL 0x1C16CF4
	0x031F7AFC ADRP X0, 0xF2A000
	0x031F7B00 LDR X0, [X0 + 0x258]
	0x031F7B04 BL 0x1C16CF4
	0x031F7B08 ADRP X0, 0xEFC000
	0x031F7B0C LDR X0, [X0 + 0xDD8]
	0x031F7B10 BL 0x1C16CF4
	0x031F7B14 ADRP X0, 0xEFE000
	0x031F7B18 LDR X0, [X0 + 0x1A0]
	0x031F7B1C BL 0x1C16CF4
	0x031F7B20 ADRP X0, 0xF29000
	0x031F7B24 LDR X0, [X0 + 0xBA8]
	0x031F7B28 BL 0x1C16CF4
	0x031F7B2C ADRP X0, 0xF05000
	0x031F7B30 LDR X0, [X0 + 0x790]
	0x031F7B34 BL 0x1C16CF4
	0x031F7B38 MOVZ W8, 0x1
	0x031F7B3C STRB W8, [X23 + 0x1C6]
	0x031F7B40 LDR X0, [X22 + 0x20]
	0x031F7B44 CBZ X0, 0x31F7CD0
	0x031F7B48 ADRP X23, 0xEFE000
	0x031F7B4C ADRP X27, 0xF29000
	0x031F7B50 ADRP X25, 0xF05000
	0x031F7B54 LDR X23, [X23 + 0xC48]
	0x031F7B58 LDR X27, [X27 + 0xBA8]
	0x031F7B5C LDR X25, [X25 + 0x790]
	0x031F7B60 BL 0x31E7D00
	0x031F7B64 ADRP X29, 0xEFC000
	0x031F7B68 ADRP X26, 0xF2A000
	0x031F7B6C LDR X29, [X29 + 0xDD8]
	0x031F7B70 LDR X26, [X26 + 0x258]
	0x031F7B74 MOV X22, X0
	0x031F7B78 MOV W28, W31
	0x031F7B7C MOV W24, W20
	0x031F7B80 CMP W28, W21
	0x031F7B84 B.GE 0x31F7BE8
	0x031F7B88 CBZ X22, 0x31F7CD0
	0x031F7B8C LDR X0, [X23]
	0x031F7B90 LDR W8, [X0 + 0xE0]
	0x031F7B94 CBNZ W8, 0x31F7B9C
	0x031F7B98 BL 0x1C16DFC
	0x031F7B9C MOV X0, X31
	0x031F7BA0 BL 0x3338524
	0x031F7BA4 LDR W8, [X22 + 0x18]
	0x031F7BA8 CMP W24, W8
	0x031F7BAC B.CS 0x31F7CD4
	0x031F7BB0 LDR X1, [X27]
	0x031F7BB4 ADD X8, X22, W24, SXTW
	0x031F7BB8 MOV X2, X0
	0x031F7BBC ADD X0, X8, 0x20
	0x031F7BC0 MOV X3, X31
	0x031F7BC4 BL 0x3319D9C
	0x031F7BC8 CBZ X19, 0x31F7CD0
	0x031F7BCC MOV X1, X0
	0x031F7BD0 MOV X0, X19
	0x031F7BD4 MOV X2, X31
	0x031F7BD8 ADD W24, W24, 0x1
	0x031F7BDC BL 0x32333E0
	0x031F7BE0 MOV X8, X29
	0x031F7BE4 B 0x31F7BF0
	0x031F7BE8 MOV X8, X26
	0x031F7BEC CBZ X19, 0x31F7CD0
	0x031F7BF0 LDR X1, [X8]
	0x031F7BF4 MOV X0, X19
	0x031F7BF8 MOV X2, X31
	0x031F7BFC BL 0x32333E0
	0x031F7C00 ADD W28, W28, 0x1
	0x031F7C04 CMP W28, 0x8
	0x031F7C08 B.NE 0x31F7B80
	0x031F7C0C ADRP X8, 0xEFE000
	0x031F7C10 LDR X8, [X8 + 0x1A0]
	0x031F7C14 MOV X0, X19
	0x031F7C18 MOV X2, X31
	0x031F7C1C LDR X1, [X8]
	0x031F7C20 BL 0x32333E0
	0x031F7C24 ADRP X24, 0xF05000
	0x031F7C28 LDR X24, [X24 + 0x9E8]
	0x031F7C2C CMP W21, 0x1
	0x031F7C30 B.LT 0x31F7CA0
	0x031F7C34 CBZ X22, 0x31F7CD0
	0x031F7C38 LDR W8, [X22 + 0x18]
	0x031F7C3C CMP W20, W8
	0x031F7C40 B.CS 0x31F7CD4
	0x031F7C44 ADD X8, X22, W20, SXTW
	0x031F7C48 LDRB W23, [X8 + 0x20]
	0x031F7C4C CMP W23, 0x1F
	0x031F7C50 B.LS 0x31F7C84
	0x031F7C54 LDR X0, [X24]
	0x031F7C58 LDR W8, [X0 + 0xE0]
	0x031F7C5C CBNZ W8, 0x31F7C64
	0x031F7C60 BL 0x1C16DFC
	0x031F7C64 MOV W0, W23
	0x031F7C68 MOV X1, X31
	0x031F7C6C BL 0x3319FC0
	0x031F7C70 MOV W1, W0
	0x031F7C74 MOV X0, X19
	0x031F7C78 MOV X2, X31
	0x031F7C7C BL 0x3233D30
	0x031F7C80 B 0x31F7C94
	0x031F7C84 LDR X1, [X25]
	0x031F7C88 MOV X0, X19
	0x031F7C8C MOV X2, X31
	0x031F7C90 BL 0x32333E0
	0x031F7C94 SUBS W21, W21, 0x1
	0x031F7C98 ADD W20, W20, 0x1
	0x031F7C9C B.NE 0x31F7C38
	0x031F7CA0 MOV X0, X31
	0x031F7CA4 BL 0x33C1548
	0x031F7CA8 MOV X1, X0
	0x031F7CAC MOV X0, X19
	0x031F7CB0 LDP X20, X19, [X31 + 0x50]
	0x031F7CB4 LDP X22, X21, [X31 + 0x40]
	0x031F7CB8 LDP X24, X23, [X31 + 0x30]
	0x031F7CBC LDP X26, X25, [X31 + 0x20]
	0x031F7CC0 LDP X28, X27, [X31 + 0x10]
	0x031F7CC4 MOV X2, X31
	0x031F7CC8 LDP X29, X30, [X31], #0x60
	0x031F7CCC B 0x32333E0
	0x031F7CD0 BL 0x1C16F20
	0x031F7CD4 BL 0x1C16F28
	0x031F7CD8 STP X30, X23, [X31 - 0x30]!
	0x031F7CDC STP X22, X21, [X31 + 0x10]
	0x031F7CE0 STP X20, X19, [X31 + 0x20]
	0x031F7CE4 ADRP X20, 0x11E5000
	0x031F7CE8 ADRP X21, 0xEFC000
	0x031F7CEC LDRB W8, [X20 + 0x1C7]
	0x031F7CF0 LDR X21, [X21 + 0x8F0]
	0x031F7CF4 MOV X19, X0
	0x031F7CF8 TBNZ X8, 0x0, 0x31F7D10
	0x031F7CFC ADRP X0, 0xEFC000
	0x031F7D00 LDR X0, [X0 + 0x8F0]
	0x031F7D04 BL 0x1C16CF4
	0x031F7D08 MOVZ W8, 0x1
	0x031F7D0C STRB W8, [X20 + 0x1C7]
	0x031F7D10 LDR X0, [X21]
	0x031F7D14 BL 0x1C16F10
	0x031F7D18 MOV X1, X31
	0x031F7D1C MOV X20, X0
	0x031F7D20 BL 0x3231AC4
	0x031F7D24 LDR X8, [X19 + 0x20]
	0x031F7D28 CBZ X8, 0x31F7DAC
	0x031F7D2C LDR X8, [X8 + 0x18]
	0x031F7D30 CBZ X8, 0x31F7D70
	0x031F7D34 LDR W8, [X8 + 0x18]
	0x031F7D38 CMP W8, 0x8
	0x031F7D3C AND W21, W8, 0x7
	0x031F7D40 B.LT 0x31F7D74
	0x031F7D44 MOV W22, W31
	0x031F7D48 SBFM W23, W8, 0x3, 0x1F
	0x031F7D4C MOVZ W2, 0x8
	0x031F7D50 MOV X0, X19
	0x031F7D54 MOV X1, X20
	0x031F7D58 MOV W3, W22
	0x031F7D5C BL 0x31F7AB0
	0x031F7D60 SUBS W23, W23, 0x1
	0x031F7D64 ADD W22, W22, 0x8
	0x031F7D68 B.NE 0x31F7D4C
	0x031F7D6C B 0x31F7D78
	0x031F7D70 MOV W21, W31
	0x031F7D74 MOV W22, W31
	0x031F7D78 MOV X0, X19
	0x031F7D7C MOV X1, X20
	0x031F7D80 MOV W2, W21
	0x031F7D84 MOV W3, W22
	0x031F7D88 BL 0x31F7AB0
	0x031F7D8C CBZ X20, 0x31F7DAC
	0x031F7D90 LDR X8, [X20]
	0x031F7D94 MOV X0, X20
	0x031F7D98 LDP X20, X19, [X31 + 0x20]
	0x031F7D9C LDP X22, X21, [X31 + 0x10]
	0x031F7DA0 LDP X2, X1, [X8 + 0x168]
	0x031F7DA4 LDP X30, X23, [X31], #0x30
	0x031F7DA8 BR X2
	0x031F7DAC BL 0x1C16F20
	0x031F7DB0 MOV X1, X31
	0x031F7DB4 B 0x3351EFC
	0x031F7DB8 STR X30, [X31 - 0x30]!
	0x031F7DBC STP X22, X21, [X31 + 0x10]
	0x031F7DC0 STP X20, X19, [X31 + 0x20]
	0x031F7DC4 ADRP X21, 0x11E5000
	0x031F7DC8 LDRB W8, [X21 + 0x1C9]
	0x031F7DCC MOV X19, X1

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x11E6000
	009 Move W8, [X21+447]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xEFD000
	017 Move X0, [X0+3584]
	018 Call 0x1C17CF4
	019 Move X0, 0xF2A000
	020 Move X0, [X0+3256]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+447], W8
	024 Move X0, [X19+40]
	025 Move [X19+48], W31
	026 Compare X0, 0
	027 JumpIfEqual {69}
	028 Move X1, X31
	029 Call CollectionBase.get_Count, X0
	030 Subtract W21, W0, 1
	031 Move W22, W0
	032 Move X0, [X19+40]
	033 Compare X0, 0
	034 JumpIfEqual {215}
	035 Move W1, W31
	036 Call X509CertificateCollection.get_Item, X0, X1
	037 Move X2, X0
	038 Move X0, X19
	039 Move X1, X20
	040 Call X509Chain.IsParent, X0, X1, X2
	041 Move TEMP, X0
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfNotEqual {119}
	045 Move W23, 1
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move X0, [X19+40]
	048 Compare X0, 0
	049 JumpIfEqual {215}
	050 Subtract W1, W23, 1
	051 Call X509CertificateCollection.get_Item, X0, X1
	052 Move X8, [X19+40]
	053 Compare X8, 0
	054 JumpIfEqual {215}
	055 Move X24, X0
	056 Move X0, X8
	057 Move W1, W23
	058 Call X509CertificateCollection.get_Item, X0, X1
	059 Move X2, X0
	060 Move X0, X19
	061 Move X1, X24
	062 Call X509Chain.IsParent, X0, X1, X2
	063 Move TEMP, X0
	064 And TEMP, TEMP, 1
	065 Compare TEMP, 1
	066 JumpIfNotEqual {106}
	067 Add W23, W23, 1
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move X8, 0xF2A000
	070 Move X8, [X8+3256]
	071 Move X0, [X8]
	072 Call 0x1C17F10
	073 Move X1, X31
	074 Move X21, X0
	075 Call CollectionBase..ctor, X0
	076 Move [X19+40], X21
	077 Compare X20, 0
	078 JumpIfEqual {114}
	079 Move X0, X20
	080 Call X509Certificate.get_IsSelfSigned, X0
	081 Move X21, X20
	082 Move TEMP, X0
	083 And TEMP, TEMP, 1
	084 Compare TEMP, 1
	085 JumpIfEqual {115}
	086 Move X22, X20
	087 Move X0, [X19+40]
	088 Compare X0, 0
	089 JumpIfEqual {215}
	090 Move X1, X22
	091 Move X21, X22
	092 Call X509CertificateCollection.Add, X0, X1
	093 Move X0, X19
	094 Move X1, X22
	095 Call X509Chain.FindCertificateParent, X0, X1
	096 Compare X0, 0
	097 JumpIfEqual {115}
	098 Move X22, X0
	099 Call X509Certificate.get_IsSelfSigned, X0
	100 Move TEMP, X0
	101 And TEMP, TEMP, 1
	102 Compare TEMP, 1
	103 JumpIfNotEqual {87}
	104 Move X0, X19
	105 Move X1, X20
	106 NotImplemented "Instruction CMP not yet implemented."
	107 Move X0, [X19+40]
	108 Compare X0, 0
	109 JumpIfEqual {215}
	110 Move W1, W21
	111 Call X509CertificateCollection.get_Item, X0, X1
	112 Move X1, X0
	113 Move X0, X19
	114 Move X21, X31
	115 Move X0, X19
	116 Move X1, X21
	117 Call X509Chain.FindCertificateRoot, X0, X1
	118 Move [X19+32], X0
	119 Move X0, [X19+40]
	120 Compare X0, 0
	121 JumpIfEqual {125}
	122 Move W8, [X19+48]
	123 Compare W8, 0
	124 JumpIfEqual {136}
	125 Move W8, [X19+48]
	126 NotImplemented "Instruction CMP not yet implemented."
	127 NotImplemented "Instruction CSET not yet implemented."
	128 Move X20, [X31+48]
	129 Move X19, [X31+56]
	130 Move X22, [X31+32]
	131 Move X21, [X31+40]
	132 Move X24, [X31+16]
	133 Move X23, [X31+24]
	134 Move X30, [X31+64]
	135 Return X0
	136 Call X509CertificateCollection.GetEnumerator, X0
	137 Move X22, X0
	138 Compare X0, 0
	139 JumpIfEqual {216}
	140 Move X0, X22
	141 Call X509CertificateEnumerator.MoveNext, X0
	142 Move TEMP, X0
	143 And TEMP, TEMP, 1
	144 Compare TEMP, 1
	145 JumpIfNotEqual {157}
	146 Move X0, X22
	147 Call X509CertificateEnumerator.get_Current, X0
	148 Move X1, X0
	149 Move X0, X19
	150 Call X509Chain.IsValid, X0, X1
	151 Move TEMP, X0
	152 And TEMP, TEMP, 1
	153 Compare TEMP, 1
	154 JumpIfEqual {140}
	155 Move X21, X31
	156 Move W23, 14
	157 Move X21, X31
	158 Move W23, 15
	159 Move X24, 0xEFD000
	160 Move X24, [X24+3584]
	161 Move X0, X22
	162 Move X1, [X24]
	163 Call 0x1C17E00
	164 Compare X0, 0
	165 JumpIfEqual {188}
	166 Move X8, [X0]
	167 Move X1, [X24]
	168 Move X22, X0
	169 NotImplemented "Instruction LDRH not yet implemented."
	170 Compare X9, 0
	171 JumpIfEqual {178}
	172 Move X10, [X8+176]
	173 Add X10, X10, 8
	174 NotImplemented "Instruction LDUR not yet implemented."
	175 NotImplemented "Instruction CMP not yet implemented."
	176 Subtract X9, X9, 1
	177 Add X10, X10, 16
	178 Move X0, X22
	179 Move W2, W31
	180 Call 0x1C5D788
	181 NotImplemented "Instruction LDRSW not yet implemented."
	182 Add X8, X8, X9
	183 Add X0, X8, 312
	184 Move X8, [X0]
	185 Move X1, [X0+8]
	186 Move X0, X22
	187 NotImplemented "Instruction BLR not yet implemented."
	188 Compare X21, 0
	189 JumpIfNotEqual {217}
	190 NotImplemented "Instruction CMP not yet implemented."
	191 Compare W23, 0
	192 JumpIfNotEqual {214}
	193 Move X0, X19
	194 Move X1, X20
	195 Call X509Chain.IsValid, X0, X1
	196 Move TEMP, X0
	197 And TEMP, TEMP, 1
	198 Compare TEMP, 1
	199 JumpIfNotEqual {209}
	200 Move X1, [X19+32]
	201 Compare X1, 0
	202 JumpIfEqual {125}
	203 Move X0, X19
	204 Call X509Chain.IsValid, X0, X1
	205 Move TEMP, X0
	206 And TEMP, TEMP, 1
	207 Compare TEMP, 1
	208 JumpIfEqual {125}
	209 Move W8, [X19+48]
	210 NotImplemented "Instruction CMP not yet implemented."
	211 Move W8, 1
	212 Move W0, W31
	213 Move [X19+48], W8
	214 Move W0, W31
	215 Call 0x1C17F20
	216 Call 0x1C17F20
	217 Move X0, X21
	218 Call 0x1C17F18
	219 Move X23, X0
	220 NotImplemented "Instruction CMP not yet implemented."
	221 Move X0, X23
	222 Call 0x3EB2AD0
	223 Move X21, [X0]
	224 Call 0x3EB2AE0
	225 Move W23, W31
	226 Move X21, X31
	227 Move X23, X0
	228 Move X20, 0xEFD000
	229 Move X20, [X20+3584]
	230 Move X1, [X20]
	231 Move X0, X22
	232 Call 0x1C17E00
	233 Move X19, X0
	234 Compare X0, 0
	235 JumpIfEqual {257}
	236 Move X8, [X19]
	237 Move X1, [X20]
	238 NotImplemented "Instruction LDRH not yet implemented."
	239 Compare X9, 0
	240 JumpIfEqual {247}
	241 Move X10, [X8+176]
	242 Add X10, X10, 8
	243 NotImplemented "Instruction LDUR not yet implemented."
	244 NotImplemented "Instruction CMP not yet implemented."
	245 Subtract X9, X9, 1
	246 Add X10, X10, 16
	247 Move X0, X19
	248 Move W2, W31
	249 Call 0x1C5D788
	250 NotImplemented "Instruction LDRSW not yet implemented."
	251 Add X8, X8, X9
	252 Add X0, X8, 312
	253 Move X8, [X0]
	254 Move X1, [X0+8]
	255 Move X0, X19
	256 NotImplemented "Instruction BLR not yet implemented."
	257 Compare X21, 0
	258 JumpIfNotEqual {261}
	259 Move X0, X23
	260 Call 0x1D2D690
	261 Move X0, X21
	262 Call 0x1C17F18
	263 Call 0x1991590

Method: System.Void Reset()

Disassembly:
	0x031F83E4 BL 0x1C16CF4
	0x031F83E8 MOVZ W8, 0x1
	0x031F83EC STRB W8, [X20 + 0x1CC]
	0x031F83F0 ADRP X23, 0xEFB000
	0x031F83F4 LDR X23, [X23 + 0xE00]
	0x031F83F8 MOV X0, X19
	0x031F83FC MOV X1, X31
	0x031F8400 BL 0x32ED1E0
	0x031F8404 MOV X19, X0
	0x031F8408 CBZ X0, 0x31F84E0
	0x031F840C LDR X8, [X19]
	0x031F8410 LDP X9, X1, [X8 + 0x1E8]
	0x031F8414 MOV X0, X19
	0x031F8418 BLR X9
	0x031F841C MOV X1, X0
	0x031F8420 ADRP X8, 0xEFB000

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+24]
	005 Move [X19+48], W31
	006 Move [X19+16], X31
	007 Compare X0, 0
	008 JumpIfEqual {22}
	009 Move X1, X31
	010 Call CollectionBase.Clear, X0
	011 Move X0, [X19+40]
	012 Compare X0, 0
	013 JumpIfEqual {19}
	014 Move X1, X31
	015 Move X30, [X31+16]
	016 Move X19, [X31+24]
	017 Call CollectionBase.Clear, X0
	018 Return 
	019 Move X30, [X31+16]
	020 Move X19, [X31+24]
	021 Return 
	022 Call 0x1C17F20

Method: System.Boolean IsValid(Mono.Security.X509.X509Certificate cert)

Disassembly:
	0x031F8338 BL 0x1C16D08
	0x031F833C LDR X8, [X22]
	0x031F8340 LDR X1, [X8]
	0x031F8344 BL 0x1C17270
	0x031F8348 TBZ X0, 0x0, 0x31F8370
	0x031F834C BL 0x3EB1AE0
	0x031F8350 B 0x31F82F8
	0x031F8354 MOV X0, X19
	0x031F8358 LDP X20, X19, [X31 + 0x30]
	0x031F835C LDP X22, X21, [X31 + 0x20]
	0x031F8360 LDP X24, X23, [X31 + 0x10]
	0x031F8364 LDR X30, [X31], #0x40
	0x031F8368 RET
	0x031F836C BL 0x1C16F28
	0x031F8370 MOVZ W0, 0x8
	0x031F8374 BL 0x3EB1AF0
	0x031F8378 LDR X8, [X22]
	0x031F837C STR X8, [X0]
	0x031F8380 ADRP X1, 0xCBC000
	0x031F8384 ADD X1, X1, 0xE58
	0x031F8388 MOV X2, X31
	0x031F838C BL 0x3EB1B00
	0x031F8390 B 0x31F8394
	0x031F8394 MOV X22, X0
	0x031F8398 BL 0x3EB1AE0
	0x031F839C MOV X0, X22
	0x031F83A0 BL 0x1D2C690
	0x031F83A4 BL 0x1990590
	0x031F83A8 STP X30, X23, [X31 - 0x30]!
	0x031F83AC STP X22, X21, [X31 + 0x10]
	0x031F83B0 STP X20, X19, [X31 + 0x20]
	0x031F83B4 ADRP X20, 0x11E4000
	0x031F83B8 LDRB W8, [X20 + 0x1CC]
	0x031F83BC MOV X19, X1
	0x031F83C0 TBNZ X8, 0x0, 0x31F83F0
	0x031F83C4 ADRP X0, 0xEFB000
	0x031F83C8 LDR X0, [X0 + 0x618]
	0x031F83CC BL 0x1C16CF4
	0x031F83D0 ADRP X0, 0xEFB000
	0x031F83D4 LDR X0, [X0 + 0xE00]
	0x031F83D8 BL 0x1C16CF4
	0x031F83DC ADRP X0, 0xF29000
	0x031F83E0 LDR X0, [X0 + 0x280]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x11E5000
	006 Move W8, [X21+448]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xF2A000
	014 Move X0, [X0+560]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+448], W8
	018 Compare X19, 0
	019 JumpIfEqual {56}
	020 Move X0, X19
	021 Call X509Certificate.get_IsCurrent, X0
	022 Move W19, W0
	023 Move TEMP, X0
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfNotEqual {48}
	027 Move X20, 0xF2A000
	028 Move X20, [X20+560]
	029 Move X0, [X20]
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move X21, 0x11E5000
	035 Move W8, [X21+518]
	036 Compare W8, 0
	037 JumpIfNotEqual {43}
	038 Move X0, 0xF2A000
	039 Move X0, [X0+560]
	040 Call 0x1C17CF4
	041 Move W8, 1
	042 Move [X21+518], W8
	043 Move X0, [X20]
	044 Move W8, [X0+224]
	045 Compare W8, 0
	046 JumpIfNotEqual {50}
	047 Call 0x1C17DFC
	048 Move W8, 2
	049 Move [X20+48], W8
	050 And W0, W19, 1
	051 Move X20, [X31+16]
	052 Move X19, [X31+24]
	053 Move X30, [X31+32]
	054 Move X21, [X31+40]
	055 Return X0
	056 Call 0x1C17F20

Method: Mono.Security.X509.X509Certificate FindCertificateParent(Mono.Security.X509.X509Certificate child)

Disassembly:
	0x031F7DD0 MOV X20, X0
	0x031F7DD4 TBNZ X8, 0x0, 0x31F7DEC
	0x031F7DD8 ADRP X0, 0xF2A000
	0x031F7DDC LDR X0, [X0 + 0xF8]
	0x031F7DE0 BL 0x1C16CF4
	0x031F7DE4 MOVZ W8, 0x1
	0x031F7DE8 STRB W8, [X21 + 0x1C9]
	0x031F7DEC CBZ X19, 0x31F7EA8
	0x031F7DF0 LDR X0, [X20 + 0x10]
	0x031F7DF4 CBZ X0, 0x31F7E88
	0x031F7DF8 ADRP X22, 0xF2A000
	0x031F7DFC LDR X22, [X22 + 0xF8]
	0x031F7E00 MOV W21, W31
	0x031F7E04 LDR X8, [X0]
	0x031F7E08 LDR X9, [X8 + 0x298]
	0x031F7E0C LDR X1, [X8 + 0x2A0]
	0x031F7E10 BLR X9
	0x031F7E14 CMP W21, W0
	0x031F7E18 B.GE 0x31F7E8C
	0x031F7E1C LDR X0, [X20 + 0x10]
	0x031F7E20 CBZ X0, 0x31F7E88
	0x031F7E24 LDR X8, [X0]
	0x031F7E28 MOV W1, W21
	0x031F7E2C LDR X9, [X8 + 0x2E8]
	0x031F7E30 LDR X2, [X8 + 0x2F0]
	0x031F7E34 BLR X9
	0x031F7E38 CBZ X0, 0x31F7E88
	0x031F7E3C LDR X8, [X0]
	0x031F7E40 LDR X1, [X22]
	0x031F7E44 LDRB W10, [X8 + 0x130]
	0x031F7E48 LDRB W9, [X1 + 0x130]
	0x031F7E4C CMP W10, W9
	0x031F7E50 B.CC 0x31F7EA4
	0x031F7E54 LDR X8, [X8 + 0xC8]
	0x031F7E58 ADD X8, X8, X9, 0x3, LSL
	0x031F7E5C LDUR X8, [X8 - 0x8]
	0x031F7E60 CMP X8, X1
	0x031F7E64 B.NE 0x31F7EA4
	0x031F7E68 LDR X0, [X0 + 0x10]
	0x031F7E6C MOV X1, X19
	0x031F7E70 MOV X2, X31
	0x031F7E74 BL 0x321BA08
	0x031F7E78 TBNZ X0, 0x0, 0x31F7E90
	0x031F7E7C LDR X0, [X20 + 0x10]
	0x031F7E80 ADD W21, W21, 0x1
	0x031F7E84 CBNZ X0, 0x31F7E04
	0x031F7E88 BL 0x1C16F20
	0x031F7E8C MOVN W21, 0x0
	0x031F7E90 MOV W0, W21
	0x031F7E94 LDP X20, X19, [X31 + 0x20]
	0x031F7E98 LDP X22, X21, [X31 + 0x10]
	0x031F7E9C LDR X30, [X31], #0x30
	0x031F7EA0 RET
	0x031F7EA4 BL 0x1C171E0
	0x031F7EA8 ADRP X0, 0xF01000
	0x031F7EAC LDR X0, [X0 + 0x528]
	0x031F7EB0 BL 0x1C16D08
	0x031F7EB4 BL 0x1C16F10
	0x031F7EB8 MOV X19, X0
	0x031F7EBC ADRP X0, 0xF29000
	0x031F7EC0 LDR X0, [X0 + 0xBE0]
	0x031F7EC4 BL 0x1C16D08
	0x031F7EC8 MOV X1, X0
	0x031F7ECC MOV X0, X19
	0x031F7ED0 MOV X2, X31
	0x031F7ED4 BL 0x330E100
	0x031F7ED8 ADRP X0, 0xF2A000
	0x031F7EDC LDR X0, [X0 + 0x260]
	0x031F7EE0 BL 0x1C16D08
	0x031F7EE4 MOV X1, X0
	0x031F7EE8 MOV X0, X19
	0x031F7EEC BL 0x1C16DEC
	0x031F7EF0 STR X30, [X31 - 0x10]!
	0x031F7EF4 LDR X0, [X0 + 0x10]
	0x031F7EF8 CBZ X0, 0x31F7F10
	0x031F7EFC LDR X8, [X0]
	0x031F7F00 LDR X2, [X8 + 0x388]
	0x031F7F04 LDR X1, [X8 + 0x390]
	0x031F7F08 LDR X30, [X31], #0x10
	0x031F7F0C BR X2
	0x031F7F10 BL 0x1C16F20
	0x031F7F14 STR X30, [X31 - 0x30]!
	0x031F7F18 STP X22, X21, [X31 + 0x10]
	0x031F7F1C STP X20, X19, [X31 + 0x20]
	0x031F7F20 MOV X19, X1
	0x031F7F24 MOV X1, X31
	0x031F7F28 MOV X20, X0
	0x031F7F2C AND W21, W2, 0x1
	0x031F7F30 AND W22, W3, 0x1
	0x031F7F34 BL 0x33BDD8C
	0x031F7F38 STR X19, [X20 + 0x10]
	0x031F7F3C STRB W21, [X20 + 0x28]
	0x031F7F40 STRB W22, [X20 + 0x29]
	0x031F7F44 LDP X20, X19, [X31 + 0x20]
	0x031F7F48 LDP X22, X21, [X31 + 0x10]
	0x031F7F4C LDR X30, [X31], #0x30
	0x031F7F50 RET
	0x031F7F54 STP X30, X19, [X31 - 0x10]!
	0x031F7F58 MOV X19, X0
	0x031F7F5C LDR X0, [X0 + 0x18]
	0x031F7F60 CBNZ X0, 0x31F7F74
	0x031F7F64 LDR X1, [X19 + 0x10]
	0x031F7F68 MOV X0, X19
	0x031F7F6C BL 0x31F7F7C
	0x031F7F70 STR X0, [X19 + 0x18]
	0x031F7F74 LDP X30, X19, [X31], #0x10
	0x031F7F78 RET
	0x031F7F7C STR X30, [X31 - 0x40]!
	0x031F7F80 STP X24, X23, [X31 + 0x10]
	0x031F7F84 STP X22, X21, [X31 + 0x20]
	0x031F7F88 STP X20, X19, [X31 + 0x30]
	0x031F7F8C ADRP X19, 0x11E5000
	0x031F7F90 ADRP X23, 0xF29000
	0x031F7F94 ADRP X22, 0xF23000
	0x031F7F98 LDRB W8, [X19 + 0x1CF]
	0x031F7F9C LDR X23, [X23 + 0xCB8]
	0x031F7FA0 LDR X22, [X22 + 0x1D0]
	0x031F7FA4 MOV X21, X1
	0x031F7FA8 MOV X20, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x11E6000
	008 Move W8, [X20+449]
	009 Move X19, X1
	010 Move X22, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xEFD000
	016 Move X0, [X0+3584]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+449], W8
	020 Move X0, [X22+24]
	021 Compare X0, 0
	022 JumpIfEqual {86}
	023 Move X23, 0xEFD000
	024 Move X23, [X23+3584]
	025 Call X509CertificateCollection.GetEnumerator, X0
	026 Move X20, X0
	027 Compare X0, 0
	028 JumpIfEqual {87}
	029 Move X0, X20
	030 Call X509CertificateEnumerator.MoveNext, X0
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfNotEqual {47}
	035 Move X0, X20
	036 Call X509CertificateEnumerator.get_Current, X0
	037 Move X21, X0
	038 Move X0, X22
	039 Move X1, X19
	040 Move X2, X21
	041 Call X509Chain.IsParent, X0, X1, X2
	042 Move TEMP, X0
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfNotEqual {29}
	046 Move X19, X31
	047 Move X19, X31
	048 Move X21, X31
	049 Move X1, [X23]
	050 Move X0, X20
	051 Call 0x1C17E00
	052 Compare X0, 0
	053 JumpIfEqual {76}
	054 Move X8, [X0]
	055 Move X1, [X23]
	056 Move X20, X0
	057 NotImplemented "Instruction LDRH not yet implemented."
	058 Compare X9, 0
	059 JumpIfEqual {66}
	060 Move X10, [X8+176]
	061 Add X10, X10, 8
	062 NotImplemented "Instruction LDUR not yet implemented."
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Subtract X9, X9, 1
	065 Add X10, X10, 16
	066 Move X0, X20
	067 Move W2, W31
	068 Call 0x1C5D788
	069 NotImplemented "Instruction LDRSW not yet implemented."
	070 Add X8, X8, X9
	071 Add X0, X8, 312
	072 Move X8, [X0]
	073 Move X1, [X0+8]
	074 Move X0, X20
	075 NotImplemented "Instruction BLR not yet implemented."
	076 Compare X19, 0
	077 JumpIfNotEqual {88}
	078 Move X0, X21
	079 Move X20, [X31+32]
	080 Move X19, [X31+40]
	081 Move X22, [X31+16]
	082 Move X21, [X31+24]
	083 Move X30, [X31+48]
	084 Move X23, [X31+56]
	085 Return X0
	086 Call 0x1C17F20
	087 Call 0x1C17F20
	088 Move X0, X19
	089 Call 0x1C17F18
	090 Move X21, X0
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Move X0, X21
	093 Call 0x3EB2AD0
	094 Move X19, [X0]
	095 Call 0x3EB2AE0
	096 Move X19, X31
	097 Move X21, X0
	098 Move X1, [X23]
	099 Move X0, X20
	100 Call 0x1C17E00
	101 Move X20, X0
	102 Compare X0, 0
	103 JumpIfEqual {125}
	104 Move X8, [X20]
	105 Move X1, [X23]
	106 NotImplemented "Instruction LDRH not yet implemented."
	107 Compare X9, 0
	108 JumpIfEqual {115}
	109 Move X10, [X8+176]
	110 Add X10, X10, 8
	111 NotImplemented "Instruction LDUR not yet implemented."
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Subtract X9, X9, 1
	114 Add X10, X10, 16
	115 Move X0, X20
	116 Move W2, W31
	117 Call 0x1C5D788
	118 NotImplemented "Instruction LDRSW not yet implemented."
	119 Add X8, X8, X9
	120 Add X0, X8, 312
	121 Move X8, [X0]
	122 Move X1, [X0+8]
	123 Move X0, X20
	124 NotImplemented "Instruction BLR not yet implemented."
	125 Compare X19, 0
	126 JumpIfNotEqual {129}
	127 Move X0, X21
	128 Call 0x1D2D690
	129 Move X0, X19
	130 Call 0x1C17F18
	131 Call 0x1991590

Method: Mono.Security.X509.X509Certificate FindCertificateRoot(Mono.Security.X509.X509Certificate potentialRoot)

Disassembly:
	0x031F7FAC TBNZ X8, 0x0, 0x31F7FE8
	0x031F7FB0 ADRP X0, 0xF23000
	0x031F7FB4 LDR X0, [X0 + 0x1D0]
	0x031F7FB8 BL 0x1C16CF4
	0x031F7FBC ADRP X0, 0xF29000
	0x031F7FC0 LDR X0, [X0 + 0xCB8]
	0x031F7FC4 BL 0x1C16CF4
	0x031F7FC8 ADRP X0, 0xF2A000
	0x031F7FCC LDR X0, [X0 + 0x268]
	0x031F7FD0 BL 0x1C16CF4
	0x031F7FD4 ADRP X0, 0xF2A000
	0x031F7FD8 LDR X0, [X0 + 0x270]
	0x031F7FDC BL 0x1C16CF4
	0x031F7FE0 MOVZ W8, 0x1
	0x031F7FE4 STRB W8, [X19 + 0x1CF]
	0x031F7FE8 LDR X0, [X23]
	0x031F7FEC BL 0x1C16F10
	0x031F7FF0 MOV X1, X31
	0x031F7FF4 MOV X19, X0
	0x031F7FF8 BL 0x3351EFC
	0x031F7FFC LDR X0, [X22]
	0x031F8000 LDR X22, [X20 + 0x10]
	0x031F8004 LDR W8, [X0 + 0xE0]
	0x031F8008 CBNZ W8, 0x31F8010
	0x031F800C BL 0x1C16DFC
	0x031F8010 MOV X0, X22
	0x031F8014 MOV X1, X21
	0x031F8018 MOV X2, X31
	0x031F801C BL 0x32FCE04
	0x031F8020 MOV X1, X0
	0x031F8024 MOV W2, W31
	0x031F8028 MOV X21, X0
	0x031F802C BL 0x31F8680
	0x031F8030 TBZ X0, 0x0, 0x31F8104
	0x031F8034 LDRB W8, [X20 + 0x29]
	0x031F8038 ADRP X9, 0xF29000
	0x031F803C ADRP X10, 0xF29000
	0x031F8040 LDR X9, [X9 + 0x270]
	0x031F8044 LDR X10, [X10 + 0x268]
	0x031F8048 CMP W8, 0x0
	0x031F804C MOV X0, X21
	0x031F8050 MOV X2, X31
	0x031F8054 CSEL X8, X9, X10, EQ
	0x031F8058 LDR X1, [X8]
	0x031F805C BL 0x32EC4D4
	0x031F8060 CBZ X0, 0x31F8104
	0x031F8064 LDR X8, [X0 + 0x18]
	0x031F8068 MOV X20, X0
	0x031F806C CBZ X8, 0x31F8104
	0x031F8070 CMP W8, 0x1
	0x031F8074 B.LT 0x31F8104
	0x031F8078 ADRP X21, 0xF01000
	0x031F807C LDR X21, [X21 + 0xCC0]
	0x031F8080 MOV X23, X31
	0x031F8084 ADD X24, X20, 0x20
	0x031F8088 CMP X23, W8, UXTW
	0x031F808C B.CS 0x31F811C
	0x031F8090 LDR X1, [X24, X23, LSL #3]
	0x031F8094 BL 0x31F85B0
	0x031F8098 MOV X1, X0
	0x031F809C CBZ X19, 0x31F80BC
	0x031F80A0 MOV X0, X19
	0x031F80A4 BL 0x31EA848
	0x031F80A8 LDR W8, [X20 + 0x18]
	0x031F80AC ADD X23, X23, 0x1
	0x031F80B0 CMP X23, W8, SXTW
	0x031F80B4 B.LT 0x31F8088
	0x031F80B8 B 0x31F8104
	0x031F80BC BL 0x1C16F20
	0x031F80C0 B 0x31F8140
	0x031F80C4 B 0x31F80CC
	0x031F80C8 B 0x31F80CC
	0x031F80CC MOV X22, X0
	0x031F80D0 CMP W1, 0x1
	0x031F80D4 B.NE 0x31F814C
	0x031F80D8 MOV X0, X22
	0x031F80DC BL 0x3EB1AD0
	0x031F80E0 MOV X22, X0
	0x031F80E4 MOV X0, X21
	0x031F80E8 BL 0x1C16D08
	0x031F80EC LDR X8, [X22]
	0x031F80F0 LDR X1, [X8]
	0x031F80F4 BL 0x1C17270
	0x031F80F8 TBZ X0, 0x0, 0x31F8120
	0x031F80FC BL 0x3EB1AE0
	0x031F8100 B 0x31F80A8
	0x031F8104 MOV X0, X19
	0x031F8108 LDP X20, X19, [X31 + 0x30]
	0x031F810C LDP X22, X21, [X31 + 0x20]
	0x031F8110 LDP X24, X23, [X31 + 0x10]
	0x031F8114 LDR X30, [X31], #0x40
	0x031F8118 RET
	0x031F811C BL 0x1C16F28
	0x031F8120 MOVZ W0, 0x8
	0x031F8124 BL 0x3EB1AF0
	0x031F8128 LDR X8, [X22]
	0x031F812C STR X8, [X0]
	0x031F8130 ADRP X1, 0xCBC000
	0x031F8134 ADD X1, X1, 0xE58
	0x031F8138 MOV X2, X31
	0x031F813C BL 0x3EB1B00
	0x031F8140 B 0x31F8144
	0x031F8144 MOV X22, X0
	0x031F8148 BL 0x3EB1AE0
	0x031F814C MOV X0, X22
	0x031F8150 BL 0x1D2C690
	0x031F8154 BL 0x1990590
	0x031F8158 STR X30, [X31 - 0x20]!
	0x031F815C STP X20, X19, [X31 + 0x10]
	0x031F8160 ADRP X20, 0x11E4000
	0x031F8164 LDRB W8, [X20 + 0x1CB]
	0x031F8168 MOV X19, X0
	0x031F816C TBNZ X8, 0x0, 0x31F8184
	0x031F8170 ADRP X0, 0xF28000
	0x031F8174 LDR X0, [X0 + 0xBA0]
	0x031F8178 BL 0x1C16CF4
	0x031F817C MOVZ W8, 0x1
	0x031F8180 STRB W8, [X20 + 0x1CB]
	0x031F8184 LDRB W8, [X19 + 0x28]
	0x031F8188 CBZ W8, 0x31F81B8
	0x031F818C LDR X20, [X19 + 0x20]
	0x031F8190 CBNZ X20, 0x31F81A8
	0x031F8194 LDR X1, [X19 + 0x10]
	0x031F8198 MOV X0, X19
	0x031F819C BL 0x31F81E0
	0x031F81A0 MOV X20, X0
	0x031F81A4 STR X0, [X19 + 0x20]
	0x031F81A8 MOV X0, X20
	0x031F81AC LDP X20, X19, [X31 + 0x10]
	0x031F81B0 LDR X30, [X31], #0x20
	0x031F81B4 RET
	0x031F81B8 ADRP X8, 0xF28000
	0x031F81BC LDR X8, [X8 + 0xBA0]
	0x031F81C0 LDR X0, [X8]
	0x031F81C4 BL 0x1C16F10
	0x031F81C8 MOV X1, X31
	0x031F81CC MOV X20, X0
	0x031F81D0 BL 0x3351F5C
	0x031F81D4 STR X20, [X19 + 0x20]
	0x031F81D8 CBNZ X20, 0x31F81A8
	0x031F81DC B 0x31F8194
	0x031F81E0 STR X30, [X31 - 0x40]!
	0x031F81E4 STP X24, X23, [X31 + 0x10]
	0x031F81E8 STP X22, X21, [X31 + 0x20]
	0x031F81EC STP X20, X19, [X31 + 0x30]
	0x031F81F0 ADRP X19, 0x11E4000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X21, 0x11E6000
	010 Move W8, [X21+450]
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0xEFD000
	018 Move X0, [X0+3584]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+450], W8
	022 Compare X19, 0
	023 JumpIfEqual {104}
	024 Move X0, X20
	025 Move X1, X19
	026 Call X509Chain.IsTrusted, X0, X1
	027 Move TEMP, X0
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {103}
	031 Move X0, X20
	032 Call X509Chain.get_TrustAnchors, X0
	033 Compare X0, 0
	034 JumpIfEqual {117}
	035 Call X509CertificateCollection.GetEnumerator, X0
	036 Move X22, X0
	037 Compare X0, 0
	038 JumpIfEqual {118}
	039 Move X0, X22
	040 Call X509CertificateEnumerator.MoveNext, X0
	041 Move TEMP, X0
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfNotEqual {58}
	045 Move X0, X22
	046 Call X509CertificateEnumerator.get_Current, X0
	047 Move X23, X0
	048 Move X0, X20
	049 Move X1, X19
	050 Move X2, X23
	051 Call X509Chain.IsParent, X0, X1, X2
	052 Move TEMP, X0
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfNotEqual {39}
	056 Move X21, X31
	057 Move W24, 6
	058 Move X21, X31
	059 Move X23, X31
	060 Move W24, 7
	061 Move X25, 0xEFC000
	062 Move X25, [X25+3584]
	063 Move X0, X22
	064 Move X1, [X25]
	065 Call 0x1C17E00
	066 Compare X0, 0
	067 JumpIfEqual {90}
	068 Move X8, [X0]
	069 Move X1, [X25]
	070 Move X22, X0
	071 NotImplemented "Instruction LDRH not yet implemented."
	072 Compare X9, 0
	073 JumpIfEqual {80}
	074 Move X10, [X8+176]
	075 Add X10, X10, 8
	076 NotImplemented "Instruction LDUR not yet implemented."
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Subtract X9, X9, 1
	079 Add X10, X10, 16
	080 Move X0, X22
	081 Move W2, W31
	082 Call 0x1C5D788
	083 NotImplemented "Instruction LDRSW not yet implemented."
	084 Add X8, X8, X9
	085 Add X0, X8, 312
	086 Move X8, [X0]
	087 Move X1, [X0+8]
	088 Move X0, X22
	089 NotImplemented "Instruction BLR not yet implemented."
	090 Compare X21, 0
	091 JumpIfNotEqual {119}
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Compare W24, 0
	094 JumpIfNotEqual {107}
	095 Move X0, X19
	096 Call X509Certificate.get_IsSelfSigned, X0
	097 Move TEMP, X0
	098 And TEMP, TEMP, 1
	099 Compare TEMP, 1
	100 JumpIfNotEqual {104}
	101 Move W8, 32
	102 Move [X20+48], W8
	103 Move X23, X19
	104 Move X23, X31
	105 Move W8, 0x10000
	106 Move [X20+48], W8
	107 Move X0, X23
	108 Move X20, [X31+48]
	109 Move X19, [X31+56]
	110 Move X22, [X31+32]
	111 Move X21, [X31+40]
	112 Move X24, [X31+16]
	113 Move X23, [X31+24]
	114 Move X30, [X31+64]
	115 Move X25, [X31+72]
	116 Return X0
	117 Call 0x1C17F20
	118 Call 0x1C17F20
	119 Move X0, X21
	120 Call 0x1C17F18
	121 Move X23, X0
	122 NotImplemented "Instruction CMP not yet implemented."
	123 Move X0, X23
	124 Call 0x3EB2AD0
	125 Move X21, [X0]
	126 Call 0x3EB2AE0
	127 Move W24, W31
	128 Move X23, X31
	129 Move X21, X31
	130 Move X23, X0
	131 Move X20, 0xEFC000
	132 Move X20, [X20+3584]
	133 Move X1, [X20]
	134 Move X0, X22
	135 Call 0x1C17E00
	136 Move X19, X0
	137 Compare X0, 0
	138 JumpIfEqual {160}
	139 Move X8, [X19]
	140 Move X1, [X20]
	141 NotImplemented "Instruction LDRH not yet implemented."
	142 Compare X9, 0
	143 JumpIfEqual {150}
	144 Move X10, [X8+176]
	145 Add X10, X10, 8
	146 NotImplemented "Instruction LDUR not yet implemented."
	147 NotImplemented "Instruction CMP not yet implemented."
	148 Subtract X9, X9, 1
	149 Add X10, X10, 16
	150 Move X0, X19
	151 Move W2, W31
	152 Call 0x1C5D788
	153 NotImplemented "Instruction LDRSW not yet implemented."
	154 Add X8, X8, X9
	155 Add X0, X8, 312
	156 Move X8, [X0]
	157 Move X1, [X0+8]
	158 Move X0, X19
	159 NotImplemented "Instruction BLR not yet implemented."
	160 Compare X21, 0
	161 JumpIfNotEqual {164}
	162 Move X0, X23
	163 Call 0x1D2D690
	164 Move X0, X21
	165 Call 0x1C17F18
	166 Call 0x1991590

Method: System.Boolean IsTrusted(Mono.Security.X509.X509Certificate potentialTrusted)

Disassembly:
	0x031F8424 LDR X8, [X8 + 0x618]
	0x031F8428 LDR X0, [X8]
	0x031F842C BL 0x1C16D6C
	0x031F8430 MOV X20, X0
	0x031F8434 CBZ X0, 0x31F84EC
	0x031F8438 LDR X8, [X19]
	0x031F843C LDR W3, [X20 + 0x18]
	0x031F8440 LDR X9, [X8 + 0x358]
	0x031F8444 LDR X4, [X8 + 0x360]
	0x031F8448 MOV X0, X19
	0x031F844C MOV X1, X20

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X1
	004 Call X509Chain.get_TrustAnchors, X0
	005 Compare X0, 0
	006 JumpIfEqual {14}
	007 Move X1, X19
	008 Call X509CertificateCollection.IndexOf, X0, X1
	009 Add W31, W0, 1
	010 NotImplemented "Instruction CSET not yet implemented."
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 Return X0
	014 Call 0x1C17F20

Method: System.Boolean IsParent(Mono.Security.X509.X509Certificate child, Mono.Security.X509.X509Certificate parent)

Disassembly:
	0x031F81F4 ADRP X23, 0xF28000
	0x031F81F8 ADRP X22, 0xF22000
	0x031F81FC LDRB W8, [X19 + 0x1D0]
	0x031F8200 LDR X23, [X23 + 0xBA0]
	0x031F8204 LDR X22, [X22 + 0x1D0]
	0x031F8208 MOV X20, X1
	0x031F820C MOV X21, X0
	0x031F8210 TBNZ X8, 0x0, 0x31F8240
	0x031F8214 ADRP X0, 0xF28000
	0x031F8218 LDR X0, [X0 + 0xBA0]
	0x031F821C BL 0x1C16CF4
	0x031F8220 ADRP X0, 0xF22000
	0x031F8224 LDR X0, [X0 + 0x1D0]
	0x031F8228 BL 0x1C16CF4
	0x031F822C ADRP X0, 0xF29000
	0x031F8230 LDR X0, [X0 + 0x278]
	0x031F8234 BL 0x1C16CF4
	0x031F8238 MOVZ W8, 0x1
	0x031F823C STRB W8, [X19 + 0x1D0]
	0x031F8240 LDR X0, [X23]
	0x031F8244 BL 0x1C16F10
	0x031F8248 MOV X1, X31
	0x031F824C MOV X19, X0
	0x031F8250 BL 0x3351F5C
	0x031F8254 LDR X0, [X22]
	0x031F8258 LDR X21, [X21 + 0x10]
	0x031F825C LDR W8, [X0 + 0xE0]
	0x031F8260 CBNZ W8, 0x31F8268
	0x031F8264 BL 0x1C16DFC
	0x031F8268 MOV X0, X21
	0x031F826C MOV X1, X20
	0x031F8270 MOV X2, X31
	0x031F8274 BL 0x32FCE04
	0x031F8278 MOV X1, X0
	0x031F827C MOV W2, W31
	0x031F8280 MOV X20, X0
	0x031F8284 BL 0x31F8680
	0x031F8288 TBZ X0, 0x0, 0x31F8354
	0x031F828C ADRP X8, 0xF29000
	0x031F8290 LDR X8, [X8 + 0x278]
	0x031F8294 MOV X0, X20
	0x031F8298 MOV X2, X31
	0x031F829C LDR X1, [X8]
	0x031F82A0 BL 0x32EC4D4
	0x031F82A4 CBZ X0, 0x31F8354
	0x031F82A8 LDR X8, [X0 + 0x18]
	0x031F82AC MOV X20, X0
	0x031F82B0 CBZ X8, 0x31F8354
	0x031F82B4 CMP W8, 0x1
	0x031F82B8 B.LT 0x31F8354
	0x031F82BC ADRP X21, 0xF01000
	0x031F82C0 LDR X21, [X21 + 0xCC0]
	0x031F82C4 MOV X23, X31
	0x031F82C8 ADD X24, X20, 0x20
	0x031F82CC CMP X23, W8, UXTW
	0x031F82D0 B.CS 0x31F836C
	0x031F82D4 LDR X1, [X24, X23, LSL #3]
	0x031F82D8 BL 0x31F8618
	0x031F82DC MOV X1, X0
	0x031F82E0 CBZ X19, 0x31F830C
	0x031F82E4 LDR X8, [X19]
	0x031F82E8 LDR X9, [X8 + 0x308]
	0x031F82EC LDR X2, [X8 + 0x310]
	0x031F82F0 MOV X0, X19
	0x031F82F4 BLR X9
	0x031F82F8 LDR W8, [X20 + 0x18]
	0x031F82FC ADD X23, X23, 0x1
	0x031F8300 CMP X23, W8, SXTW
	0x031F8304 B.LT 0x31F82CC
	0x031F8308 B 0x31F8354
	0x031F830C BL 0x1C16F20
	0x031F8310 B 0x31F8390
	0x031F8314 B 0x31F831C
	0x031F8318 B 0x31F831C
	0x031F831C MOV X22, X0
	0x031F8320 CMP W1, 0x1
	0x031F8324 B.NE 0x31F839C
	0x031F8328 MOV X0, X22
	0x031F832C BL 0x3EB1AD0
	0x031F8330 MOV X22, X0
	0x031F8334 MOV X0, X21

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x11E5000
	008 Move W8, [X22+451]
	009 Move X21, X2
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xF2A000
	017 Move X0, [X0+544]
	018 Call 0x1C17CF4
	019 Move X0, 0xF2A000
	020 Move X0, [X0+552]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+451], W8
	024 Compare X20, 0
	025 JumpIfEqual {104}
	026 Move X8, [X20]
	027 Move X0, X20
	028 Move X9, [X8+392]
	029 Move X1, [X8+400]
	030 NotImplemented "Instruction BLR not yet implemented."
	031 Compare X21, 0
	032 JumpIfEqual {104}
	033 Move X8, [X21]
	034 Move X22, X0
	035 Move X0, X21
	036 Move X9, [X8+552]
	037 Move X1, [X8+560]
	038 NotImplemented "Instruction BLR not yet implemented."
	039 Move X1, X0
	040 Move X0, X22
	041 Move X2, X31
	042 Call String.op_Inequality, X0, X1
	043 Move TEMP, X0
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfNotEqual {48}
	047 Move W0, W31
	048 Move W8, [X21+152]
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move X0, X19
	051 Move X1, X21
	052 Call X509Chain.IsTrusted, X0, X1
	053 Move TEMP, X0
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfEqual {81}
	057 Move X0, [X21+184]
	058 Compare X0, 0
	059 JumpIfEqual {104}
	060 Move X8, 0xF2A000
	061 Move X8, [X8+552]
	062 Move X1, [X8]
	063 Call X509ExtensionCollection.get_Item, X0, X1
	064 Compare X0, 0
	065 JumpIfEqual {79}
	066 Move X8, 0xF2A000
	067 Move X8, [X8+544]
	068 Move X22, X0
	069 Move X0, [X8]
	070 Call 0x1C17F10
	071 Move X1, X22
	072 Move X23, X0
	073 Call X509Extension..ctor, X0, X1
	074 Compare X23, 0
	075 JumpIfEqual {104}
	076 Move W8, [X23+40]
	077 Compare W8, 0
	078 JumpIfNotEqual {81}
	079 Move W8, 1024
	080 Move [X19+48], W8
	081 Move X8, [X21]
	082 Move X0, X21
	083 Move X9, [X8+472]
	084 Move X1, [X8+480]
	085 NotImplemented "Instruction BLR not yet implemented."
	086 Move X1, X0
	087 Move X0, X20
	088 Call X509Certificate.VerifySignature, X0, X1
	089 Move TEMP, X0
	090 And TEMP, TEMP, 1
	091 Compare TEMP, 1
	092 JumpIfNotEqual {94}
	093 Move W0, 1
	094 Move W0, W31
	095 Move W8, 8
	096 Move [X19+48], W8
	097 Move X20, [X31+32]
	098 Move X19, [X31+40]
	099 Move X22, [X31+16]
	100 Move X21, [X31+24]
	101 Move X30, [X31+48]
	102 Move X23, [X31+56]
	103 Return X0
	104 Call 0x1C17F20

