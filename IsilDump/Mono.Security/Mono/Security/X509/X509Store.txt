Type: Mono.Security.X509.X509Store

Method: System.Void .ctor(System.String path, System.Boolean crl, System.Boolean newFormat)

Disassembly:
	0x031F8F14 BL 0x1C171E0
	0x031F8F18 STP X30, X25, [X31 - 0x40]!
	0x031F8F1C STP X24, X23, [X31 + 0x10]
	0x031F8F20 STP X22, X21, [X31 + 0x20]
	0x031F8F24 STP X20, X19, [X31 + 0x30]
	0x031F8F28 ADRP X20, 0x11E4000
	0x031F8F2C ADRP X21, 0xEFB000
	0x031F8F30 LDRB W8, [X20 + 0x1DB]
	0x031F8F34 LDR X21, [X21 + 0x8F0]
	0x031F8F38 MOV X19, X0
	0x031F8F3C TBNZ X8, 0x0, 0x31F8F84
	0x031F8F40 ADRP X0, 0xEFD000
	0x031F8F44 LDR X0, [X0 + 0xC48]
	0x031F8F48 BL 0x1C16CF4
	0x031F8F4C ADRP X0, 0xEFB000
	0x031F8F50 LDR X0, [X0 + 0x8F0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X1
	007 Move X1, X31
	008 Move X20, X0
	009 And W21, W2, 1
	010 And W22, W3, 1
	011 Call Object..ctor, X0
	012 Move [X20+16], X19
	013 Move [X20+40], W21
	014 Move [X20+41], W22
	015 Move X20, [X31+32]
	016 Move X19, [X31+40]
	017 Move X22, [X31+16]
	018 Move X21, [X31+24]
	019 Move X30, [X31+48]
	020 Return 

Method: Mono.Security.X509.X509CertificateCollection get_Certificates()

Disassembly:
	0x031F8F54 BL 0x1C16CF4
	0x031F8F58 ADRP X0, 0xEFB000
	0x031F8F5C LDR X0, [X0 + 0xDD8]
	0x031F8F60 BL 0x1C16CF4
	0x031F8F64 ADRP X0, 0xF28000
	0x031F8F68 LDR X0, [X0 + 0xBA8]
	0x031F8F6C BL 0x1C16CF4
	0x031F8F70 ADRP X0, 0xF29000
	0x031F8F74 LDR X0, [X0 + 0x2E8]
	0x031F8F78 BL 0x1C16CF4

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+24]
	005 Compare X0, 0
	006 JumpIfNotEqual {11}
	007 Move X1, [X19+16]
	008 Move X0, X19
	009 Call X509Store.BuildCertificatesCollection, X0, X1
	010 Move [X19+24], X0
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 Return X0

Method: System.Collections.ArrayList get_Crls()

Disassembly:
	0x031F9158 STR W0, [X19 + 0x2C]
	0x031F915C LDP X20, X19, [X31 + 0x10]
	0x031F9160 LDP X30, X21, [X31], #0x20
	0x031F9164 RET
	0x031F9168 BL 0x1C16F20
	0x031F916C ADRP X0, 0xF02000
	0x031F9170 LDR X0, [X0 + 0x578]
	0x031F9174 BL 0x1C16D08
	0x031F9178 BL 0x1C16F10
	0x031F917C MOV X19, X0
	0x031F9180 ADRP X0, 0xF28000
	0x031F9184 LDR X0, [X0 + 0x2F0]
	0x031F9188 BL 0x1C16D08
	0x031F918C MOV X1, X0
	0x031F9190 MOV X0, X19
	0x031F9194 MOV X2, X31
	0x031F9198 BL 0x3314A68
	0x031F919C ADRP X0, 0xF28000
	0x031F91A0 LDR X0, [X0 + 0x2F8]
	0x031F91A4 BL 0x1C16D08
	0x031F91A8 MOV X1, X0
	0x031F91AC MOV X0, X19
	0x031F91B0 BL 0x1C16DEC
	0x031F91B4 BL 0x1C16F28
	0x031F91B8 STP X30, X23, [X31 - 0x30]!
	0x031F91BC STP X22, X21, [X31 + 0x10]
	0x031F91C0 STP X20, X19, [X31 + 0x20]
	0x031F91C4 ADRP X20, 0x11E3000
	0x031F91C8 ADRP X23, 0xF27000
	0x031F91CC LDRB W8, [X20 + 0x1DD]
	0x031F91D0 LDR X23, [X23 + 0xB98]
	0x031F91D4 MOV X19, X0
	0x031F91D8 TBNZ X8, 0x0, 0x31F91FC
	0x031F91DC ADRP X0, 0xF27000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x11E4000
	005 Move W8, [X20+459]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xF28000
	012 Move X0, [X0+2976]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+459], W8
	016 Move W8, [X19+40]
	017 Compare W8, 0
	018 JumpIfEqual {32}
	019 Move X20, [X19+32]
	020 Compare X20, 0
	021 JumpIfNotEqual {27}
	022 Move X1, [X19+16]
	023 Move X0, X19
	024 Call X509Store.BuildCrlsCollection, X0, X1
	025 Move X20, X0
	026 Move [X19+32], X0
	027 Move X0, X20
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X30, [X31+32]
	031 Return X0
	032 Move X8, 0xF28000
	033 Move X8, [X8+2976]
	034 Move X0, [X8]
	035 Call 0x1C17F10
	036 Move X1, X31
	037 Move X20, X0
	038 Call ArrayList..ctor, X0
	039 Move [X19+32], X20
	040 Compare X20, 0
	041 JumpIfNotEqual {27}

Method: System.Byte[] Load(System.String filename)

Disassembly:
	0x031F93A8 MOV X2, X31
	0x031F93AC BL 0x32333E0
	0x031F93B0 LDRB W8, [X19 + 0x28]
	0x031F93B4 MOV X0, X20
	0x031F93B8 MOV X2, X31
	0x031F93BC CMP W8, 0x0
	0x031F93C0 CSEL X8, X21, X22, EQ
	0x031F93C4 LDR X1, [X8]
	0x031F93C8 BL 0x32333E0
	0x031F93CC MOV X0, X31
	0x031F93D0 BL 0x33C1548
	0x031F93D4 MOV X1, X0
	0x031F93D8 MOV X0, X20
	0x031F93DC MOV X2, X31
	0x031F93E0 BL 0x32333E0
	0x031F93E4 LDR X1, [X23]
	0x031F93E8 MOV X0, X20
	0x031F93EC MOV X2, X31
	0x031F93F0 BL 0x32333E0
	0x031F93F4 LDR W8, [X19 + 0x2C]!
	0x031F93F8 ADDS W31, W8, 0x1
	0x031F93FC B.EQ 0x31F9438
	0x031F9400 ADRP X8, 0xEFC000
	0x031F9404 LDR X8, [X8 + 0xC48]
	0x031F9408 LDR X0, [X8]
	0x031F940C LDR W8, [X0 + 0xE0]
	0x031F9410 CBNZ W8, 0x31F9418
	0x031F9414 BL 0x1C16DFC
	0x031F9418 MOV X0, X31
	0x031F941C BL 0x3338524
	0x031F9420 MOV X1, X0
	0x031F9424 MOV X0, X19
	0x031F9428 MOV X2, X31
	0x031F942C BL 0x337B824
	0x031F9430 MOV X1, X0
	0x031F9434 B 0x31F9444
	0x031F9438 ADRP X8, 0xEFC000
	0x031F943C LDR X8, [X8 + 0x798]
	0x031F9440 LDR X1, [X8]
	0x031F9444 MOV X0, X20
	0x031F9448 MOV X2, X31
	0x031F944C BL 0x32333E0
	0x031F9450 MOV X0, X31
	0x031F9454 BL 0x33C1548
	0x031F9458 MOV X1, X0
	0x031F945C MOV X0, X20
	0x031F9460 MOV X2, X31
	0x031F9464 BL 0x32333E0
	0x031F9468 LDR X8, [X20]
	0x031F946C MOV X0, X20
	0x031F9470 LDP X20, X19, [X31 + 0x20]
	0x031F9474 LDP X22, X21, [X31 + 0x10]
	0x031F9478 LDP X2, X1, [X8 + 0x168]
	0x031F947C LDP X30, X23, [X31], #0x30
	0x031F9480 BR X2
	0x031F9484 BL 0x1C16F20
	0x031F9488 STP X30, X21, [X31 - 0x20]!
	0x031F948C STP X20, X19, [X31 + 0x10]
	0x031F9490 ADRP X21, 0x11E3000
	0x031F9494 ADRP X20, 0xEFA000
	0x031F9498 LDRB W8, [X21 + 0x1DF]
	0x031F949C LDR X20, [X20 + 0x618]
	0x031F94A0 MOV X19, X0
	0x031F94A4 TBNZ X8, 0x0, 0x31F94BC
	0x031F94A8 ADRP X0, 0xEFA000
	0x031F94AC LDR X0, [X0 + 0x618]
	0x031F94B0 BL 0x1C16CF4
	0x031F94B4 MOVZ W8, 0x1
	0x031F94B8 STRB W8, [X21 + 0x1DF]
	0x031F94BC MOV X0, X19
	0x031F94C0 MOV X1, X31
	0x031F94C4 BL 0x33BDD8C
	0x031F94C8 STRB W31, [X19 + 0x10]
	0x031F94CC LDR X0, [X20]
	0x031F94D0 MOVZ W1, 0x15
	0x031F94D4 BL 0x1C16D6C
	0x031F94D8 STR X0, [X19 + 0x20]
	0x031F94DC LDR X0, [X20]
	0x031F94E0 MOVZ W1, 0x15
	0x031F94E4 BL 0x1C16D6C
	0x031F94E8 STR X0, [X19 + 0x28]
	0x031F94EC LDP X20, X19, [X31 + 0x10]
	0x031F94F0 LDP X30, X21, [X31], #0x20
	0x031F94F4 RET
	0x031F94F8 STP X30, X21, [X31 - 0x20]!
	0x031F94FC STP X20, X19, [X31 + 0x10]
	0x031F9500 MOV X19, X2
	0x031F9504 MOV X20, X1
	0x031F9508 MOV X21, X0
	0x031F950C BL 0x31F9488
	0x031F9510 MOV X0, X21
	0x031F9514 MOV X1, X20
	0x031F9518 BL 0x31F9530
	0x031F951C MOV X1, X19
	0x031F9520 LDP X20, X19, [X31 + 0x10]
	0x031F9524 MOV X0, X21
	0x031F9528 LDP X30, X21, [X31], #0x20
	0x031F952C B 0x31F9938
	0x031F9530 STP X30, X25, [X31 - 0x40]!
	0x031F9534 STP X24, X23, [X31 + 0x10]
	0x031F9538 STP X22, X21, [X31 + 0x20]
	0x031F953C STP X20, X19, [X31 + 0x30]
	0x031F9540 ADRP X20, 0x11E3000
	0x031F9544 LDRB W8, [X20 + 0x1E0]
	0x031F9548 MOV X21, X1
	0x031F954C MOV X19, X0
	0x031F9550 TBNZ X8, 0x0, 0x31F958C
	0x031F9554 ADRP X0, 0xEFA000
	0x031F9558 LDR X0, [X0 + 0x618]
	0x031F955C BL 0x1C16CF4
	0x031F9560 ADRP X0, 0xF28000
	0x031F9564 LDR X0, [X0 + 0x318]
	0x031F9568 BL 0x1C16CF4
	0x031F956C ADRP X0, 0xF28000
	0x031F9570 LDR X0, [X0 + 0x320]
	0x031F9574 BL 0x1C16CF4
	0x031F9578 ADRP X0, 0xF27000
	0x031F957C LDR X0, [X0 + 0xEA0]
	0x031F9580 BL 0x1C16CF4
	0x031F9584 MOVZ W8, 0x1
	0x031F9588 STRB W8, [X20 + 0x1E0]
	0x031F958C LDRB W8, [X19 + 0x10]
	0x031F9590 CBNZ W8, 0x31F98F0
	0x031F9594 ADRP X8, 0xF28000
	0x031F9598 LDR X8, [X8 + 0x320]
	0x031F959C LDR X0, [X8]
	0x031F95A0 LDR W8, [X0 + 0xE0]
	0x031F95A4 CBNZ W8, 0x31F95AC
	0x031F95A8 BL 0x1C16DFC
	0x031F95AC MOV X0, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x11E4000
	008 Move W8, [X20+460]
	009 Move X19, X1
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0xEFB000
	015 Move X0, [X0+1560]
	016 Call 0x1C17CF4
	017 Move X0, 0xEFB000
	018 Move X0, [X0+3584]
	019 Call 0x1C17CF4
	020 Move X0, 0xF29000
	021 Move X0, [X0+640]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+460], W8
	025 Move X23, 0xEFB000
	026 Move X23, [X23+3584]
	027 Move X0, X19
	028 Move X1, X31
	029 Call File.OpenRead, X0
	030 Move X19, X0
	031 Compare X0, 0
	032 JumpIfEqual {91}
	033 Move X8, [X19]
	034 Move X9, [X8+488]
	035 Move X1, [X8+496]
	036 Move X0, X19
	037 NotImplemented "Instruction BLR not yet implemented."
	038 Move X1, X0
	039 Move X8, 0xEFB000
	040 Move X8, [X8+1560]
	041 Move X0, [X8]
	042 Call 0x1C17D6C
	043 Move X20, X0
	044 Compare X0, 0
	045 JumpIfEqual {94}
	046 Move X8, [X19]
	047 Move W3, [X20+24]
	048 Move X9, [X8+856]
	049 Move X4, [X8+864]
	050 Move X0, X19
	051 Move X1, X20
	052 Move W2, W31
	053 NotImplemented "Instruction BLR not yet implemented."
	054 Move X8, [X19]
	055 Move X1, [X8+640]
	056 Move X9, [X8+632]
	057 Move X0, X19
	058 NotImplemented "Instruction BLR not yet implemented."
	059 Move X21, X31
	060 Move X8, [X19]
	061 Move X1, [X23]
	062 NotImplemented "Instruction LDRH not yet implemented."
	063 Compare X9, 0
	064 JumpIfEqual {71}
	065 Move X10, [X8+176]
	066 Add X10, X10, 8
	067 NotImplemented "Instruction LDUR not yet implemented."
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Subtract X9, X9, 1
	070 Add X10, X10, 16
	071 Move X0, X19
	072 Move W2, W31
	073 Call 0x1C5D788
	074 NotImplemented "Instruction LDRSW not yet implemented."
	075 Add X8, X8, X9
	076 Add X0, X8, 312
	077 Move X8, [X0]
	078 Move X1, [X0+8]
	079 Move X0, X19
	080 NotImplemented "Instruction BLR not yet implemented."
	081 Compare X21, 0
	082 JumpIfNotEqual {92}
	083 Move X0, X20
	084 Move X20, [X31+32]
	085 Move X19, [X31+40]
	086 Move X22, [X31+16]
	087 Move X21, [X31+24]
	088 Move X30, [X31+48]
	089 Move X23, [X31+56]
	090 Return X0
	091 Call 0x1C17F20
	092 Move X0, X21
	093 Call 0x1C17F18
	094 Call 0x1C17F20
	095 Move X22, X0
	096 Move X22, X0
	097 Move X20, X31
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Move X0, X22
	100 Call 0x3EB2AD0
	101 Move X21, [X0]
	102 Call 0x3EB2AE0
	103 Compare X19, 0
	104 JumpIfNotEqual {60}
	105 Move X21, X31
	106 Move X22, X0
	107 Compare X19, 0
	108 JumpIfEqual {130}
	109 Move X8, [X19]
	110 Move X1, [X23]
	111 NotImplemented "Instruction LDRH not yet implemented."
	112 Compare X9, 0
	113 JumpIfEqual {120}
	114 Move X10, [X8+176]
	115 Add X10, X10, 8
	116 NotImplemented "Instruction LDUR not yet implemented."
	117 NotImplemented "Instruction CMP not yet implemented."
	118 Subtract X9, X9, 1
	119 Add X10, X10, 16
	120 Move X0, X19
	121 Move W2, W31
	122 Call 0x1C5D788
	123 NotImplemented "Instruction LDRSW not yet implemented."
	124 Add X8, X8, X9
	125 Add X0, X8, 312
	126 Move X8, [X0]
	127 Move X1, [X0+8]
	128 Move X0, X19
	129 NotImplemented "Instruction BLR not yet implemented."
	130 Compare X21, 0
	131 JumpIfNotEqual {134}
	132 Move X0, X22
	133 Call 0x1D2D690
	134 Move X0, X21
	135 Call 0x1C17F18
	136 Call 0x1991590

Method: Mono.Security.X509.X509Certificate LoadCertificate(System.String filename)

Disassembly:
	0x031F95B0 BL 0x3252CD4
	0x031F95B4 CBZ X0, 0x31F98EC
	0x031F95B8 LDR X8, [X0]
	0x031F95BC ADRP X25, 0xF28000
	0x031F95C0 MOVZ W1, 0x2
	0x031F95C4 MOV X20, X0
	0x031F95C8 LDR X9, [X8 + 0x248]
	0x031F95CC LDR X2, [X8 + 0x250]
	0x031F95D0 LDR X25, [X25 + 0x318]
	0x031F95D4 BLR X9
	0x031F95D8 CBZ X21, 0x31F9694
	0x031F95DC LDR W8, [X21 + 0x10]
	0x031F95E0 CMP W8, 0x0
	0x031F95E4 B.LE 0x31F9694
	0x031F95E8 MOV X0, X19
	0x031F95EC MOV X1, X21
	0x031F95F0 MOV W2, W31
	0x031F95F4 BL 0x31F9B68
	0x031F95F8 LDR X8, [X20]
	0x031F95FC MOV X1, X0
	0x031F9600 MOV X0, X20
	0x031F9604 LDP X9, X2, [X8 + 0x1F8]
	0x031F9608 BLR X9
	0x031F960C LDR X8, [X20]
	0x031F9610 MOV X0, X20
	0x031F9614 LDR X9, [X8 + 0x278]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x11E4000
	006 Move X20, 0xF28000
	007 Move W8, [X21+461]
	008 Move X20, [X20+3264]
	009 Move X19, X1
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xF28000
	015 Move X0, [X0+3264]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+461], W8
	019 Move X1, X19
	020 Call X509Store.Load, X0, X1
	021 Move X8, [X20]
	022 Move X19, X0
	023 Move X0, X8
	024 Call 0x1C17F10
	025 Move X1, X19
	026 Move X20, X0
	027 Call X509Certificate..ctor, X0, X1
	028 Move X0, X20
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X30, [X31+32]
	032 Move X21, [X31+40]
	033 Return X0

Method: Mono.Security.X509.X509Crl LoadCrl(System.String filename)

Disassembly:
	0x031F9618 LDR X1, [X8 + 0x280]
	0x031F961C BLR X9
	0x031F9620 LDR X8, [X25]
	0x031F9624 MOV X22, X0
	0x031F9628 LDR W9, [X8 + 0xE0]
	0x031F962C CBNZ W9, 0x31F963C
	0x031F9630 MOV X0, X8
	0x031F9634 BL 0x1C16DFC
	0x031F9638 LDR X8, [X25]
	0x031F963C CBZ X22, 0x31F98EC
	0x031F9640 ADRP X10, 0xF27000
	0x031F9644 LDR X9, [X8 + 0xB8]
	0x031F9648 LDR X8, [X22]
	0x031F964C LDR X23, [X19 + 0x20]
	0x031F9650 LDR X10, [X10 + 0xEA0]
	0x031F9654 LDR X24, [X9]
	0x031F9658 LDRH W9, [X8 + 0x12E]
	0x031F965C LDR X1, [X10]
	0x031F9660 CBZ X9, 0x31F9684
	0x031F9664 LDR X10, [X8 + 0xB0]
	0x031F9668 ADD X10, X10, 0x8
	0x031F966C LDUR X11, [X10 - 0x8]
	0x031F9670 CMP X11, X1
	0x031F9674 B.EQ 0x31F96D0
	0x031F9678 SUBS X9, X9, 0x1
	0x031F967C ADD X10, X10, 0x10

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x11E4000
	006 Move X20, 0xF29000
	007 Move W8, [X21+462]
	008 Move X20, [X20+648]
	009 Move X19, X1
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xF29000
	015 Move X0, [X0+648]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+462], W8
	019 Move X1, X19
	020 Call X509Store.Load, X0, X1
	021 Move X8, [X20]
	022 Move X19, X0
	023 Move X0, X8
	024 Call 0x1C17F10
	025 Move X1, X19
	026 Move X20, X0
	027 Call X509Crl..ctor, X0, X1
	028 Move X0, X20
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X30, [X31+32]
	032 Move X21, [X31+40]
	033 Return X0

Method: System.Boolean CheckStore(System.String path, System.Boolean throwException)

Disassembly:
	0x031F9680 B.NE 0x31F966C
	0x031F9684 MOVZ W2, 0x3
	0x031F9688 MOV X0, X22
	0x031F968C BL 0x1C5C788
	0x031F9690 B 0x31F96E0
	0x031F9694 LDR X0, [X25]
	0x031F9698 LDR W8, [X0 + 0xE0]
	0x031F969C CBNZ W8, 0x31F96A8
	0x031F96A0 BL 0x1C16DFC
	0x031F96A4 LDR X0, [X25]
	0x031F96A8 LDR X8, [X0 + 0xB8]
	0x031F96AC LDR X2, [X19 + 0x20]
	0x031F96B0 MOVZ W4, 0x8
	0x031F96B4 MOV W1, W31
	0x031F96B8 LDR X0, [X8 + 0x8]
	0x031F96BC MOV W3, W31
	0x031F96C0 MOV X5, X31
	0x031F96C4 BL 0x33A8A9C
	0x031F96C8 CBNZ X21, 0x31F9704
	0x031F96CC B 0x31F97BC
	0x031F96D0 LDR W9, [X10]
	0x031F96D4 ADD W9, W9, 0x3
	0x031F96D8 ADD X8, X8, W9, 0x4, SXTW
	0x031F96DC ADD X0, X8, 0x138
	0x031F96E0 LDP X8, X6, [X0]
	0x031F96E4 MOVZ W3, 0x8
	0x031F96E8 MOV X0, X22
	0x031F96EC MOV X1, X24
	0x031F96F0 MOV W2, W31
	0x031F96F4 MOV X4, X23
	0x031F96F8 MOV W5, W31
	0x031F96FC BLR X8
	0x031F9700 CBZ X21, 0x31F97BC
	0x031F9704 LDR W8, [X21 + 0x10]
	0x031F9708 CMP W8, 0x7
	0x031F970C B.LE 0x31F97BC
	0x031F9710 MOVZ W2, 0x7
	0x031F9714 MOV X0, X19
	0x031F9718 MOV X1, X21
	0x031F971C BL 0x31F9B68
	0x031F9720 LDR X8, [X20]
	0x031F9724 MOV X1, X0
	0x031F9728 MOV X0, X20
	0x031F972C LDP X9, X2, [X8 + 0x1F8]
	0x031F9730 BLR X9
	0x031F9734 LDR X8, [X20]
	0x031F9738 MOV X0, X20
	0x031F973C LDR X9, [X8 + 0x278]
	0x031F9740 LDR X1, [X8 + 0x280]
	0x031F9744 BLR X9
	0x031F9748 LDR X8, [X25]
	0x031F974C MOV X22, X0
	0x031F9750 LDR W9, [X8 + 0xE0]
	0x031F9754 CBNZ W9, 0x31F9764
	0x031F9758 MOV X0, X8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W2
	005 Move X20, X1
	006 Move X0, X1
	007 Move X1, X31
	008 Call Directory.Exists, X0
	009 Move TEMP, X0
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfNotEqual {14}
	013 Move W0, 1
	014 Move X0, X20
	015 Move X1, X31
	016 Call Directory.CreateDirectory, X0
	017 Move X0, X20
	018 Move X1, X31
	019 Call Directory.Exists, X0
	020 Move X20, [X31+16]
	021 Move X19, [X31+24]
	022 And W0, W0, 1
	023 Move X30, [X31+32]
	024 Return X0
	025 Move X20, X0
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X0, X20
	028 Call 0x3EB2AD0
	029 Move X20, X0
	030 Move X0, 0xF01000
	031 Move X0, [X0+3264]
	032 Call 0x1C17D08
	033 Move X8, [X20]
	034 Move X1, [X8]
	035 Call 0x1C18270
	036 Move TEMP, X0
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfNotEqual {47}
	040 Move X20, [X20]
	041 Call 0x3EB2AE0
	042 Move TEMP, X19
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfEqual {55}
	046 Move W0, W31
	047 Move W0, 8
	048 Call 0x3EB2AF0
	049 Move X8, [X20]
	050 Move [X0], X8
	051 Move X1, 0xCBC000
	052 Add X1, X1, 3672
	053 Move X2, X31
	054 Call 0x3EB2B00
	055 Move X0, X20
	056 Call 0x1C17F18
	057 Move X20, X0
	058 Call 0x3EB2AE0
	059 Move X0, X20
	060 Call 0x1D2D690
	061 Call 0x1991590

Method: Mono.Security.X509.X509CertificateCollection BuildCertificatesCollection(System.String storeName)

Disassembly:
	0x031F8F7C MOVZ W8, 0x1
	0x031F8F80 STRB W8, [X20 + 0x1DB]
	0x031F8F84 LDR X0, [X21]
	0x031F8F88 BL 0x1C16F10
	0x031F8F8C MOV X1, X31
	0x031F8F90 MOV X20, X0
	0x031F8F94 BL 0x3231AC4
	0x031F8F98 LDR X8, [X19 + 0x28]
	0x031F8F9C CBZ X8, 0x31F905C
	0x031F8FA0 CBZ X20, 0x31F9058
	0x031F8FA4 ADRP X8, 0xF29000
	0x031F8FA8 LDR X8, [X8 + 0x2E8]
	0x031F8FAC MOV X0, X20
	0x031F8FB0 MOV X2, X31
	0x031F8FB4 LDR X1, [X8]
	0x031F8FB8 BL 0x32333E0
	0x031F8FBC LDR X25, [X19 + 0x28]
	0x031F8FC0 CBZ X25, 0x31F9058
	0x031F8FC4 ADRP X22, 0xEFD000
	0x031F8FC8 ADRP X23, 0xF28000
	0x031F8FCC ADRP X24, 0xEFB000
	0x031F8FD0 LDR X22, [X22 + 0xC48]
	0x031F8FD4 LDR X23, [X23 + 0xBA8]
	0x031F8FD8 LDR X24, [X24 + 0xDD8]
	0x031F8FDC MOV X21, X31
	0x031F8FE0 LDRSW X8, [X25 + 0x18]
	0x031F8FE4 CMP X21, X8
	0x031F8FE8 B.GE 0x31F905C
	0x031F8FEC LDR X0, [X22]
	0x031F8FF0 LDR W8, [X0 + 0xE0]
	0x031F8FF4 CBNZ W8, 0x31F8FFC
	0x031F8FF8 BL 0x1C16DFC
	0x031F8FFC MOV X0, X31
	0x031F9000 BL 0x3338524
	0x031F9004 LDR W8, [X25 + 0x18]
	0x031F9008 CMP X21, X8
	0x031F900C B.CS 0x31F9080
	0x031F9010 LDR X1, [X23]
	0x031F9014 ADD X8, X25, X21
	0x031F9018 MOV X2, X0
	0x031F901C ADD X0, X8, 0x20
	0x031F9020 MOV X3, X31
	0x031F9024 BL 0x3319D9C
	0x031F9028 MOV X1, X0
	0x031F902C MOV X0, X20
	0x031F9030 MOV X2, X31
	0x031F9034 BL 0x32333E0
	0x031F9038 TBZ X21, 0x0, 0x31F904C
	0x031F903C LDR X1, [X24]
	0x031F9040 MOV X0, X20
	0x031F9044 MOV X2, X31
	0x031F9048 BL 0x32333E0
	0x031F904C LDR X25, [X19 + 0x28]
	0x031F9050 ADD X21, X21, 0x1
	0x031F9054 CBNZ X25, 0x31F8FE0
	0x031F9058 BL 0x1C16F20
	0x031F905C CBZ X20, 0x31F9058
	0x031F9060 LDR X8, [X20]
	0x031F9064 MOV X0, X20
	0x031F9068 LDP X20, X19, [X31 + 0x30]
	0x031F906C LDP X22, X21, [X31 + 0x20]
	0x031F9070 LDP X2, X1, [X8 + 0x168]
	0x031F9074 LDP X24, X23, [X31 + 0x10]
	0x031F9078 LDP X30, X25, [X31], #0x40
	0x031F907C BR X2
	0x031F9080 BL 0x1C16F28
	0x031F9084 STP X30, X21, [X31 - 0x20]!
	0x031F9088 STP X20, X19, [X31 + 0x10]
	0x031F908C ADRP X20, 0x11E3000
	0x031F9090 LDRB W8, [X20 + 0x1DC]
	0x031F9094 MOV X19, X0
	0x031F9098 TBNZ X8, 0x0, 0x31F90B0
	0x031F909C ADRP X0, 0xF27000
	0x031F90A0 LDR X0, [X0 + 0xB98]
	0x031F90A4 BL 0x1C16CF4
	0x031F90A8 MOVZ W8, 0x1
	0x031F90AC STRB W8, [X20 + 0x1DC]
	0x031F90B0 LDR X0, [X19 + 0x20]
	0x031F90B4 MOVN W8, 0x0
	0x031F90B8 STRB W31, [X19 + 0x28]
	0x031F90BC STR W8, [X19 + 0x2C]
	0x031F90C0 CBZ X0, 0x31F9168
	0x031F90C4 ADRP X20, 0xF27000
	0x031F90C8 LDR X20, [X20 + 0xB98]
	0x031F90CC BL 0x31E7D00
	0x031F90D0 LDR X8, [X20]
	0x031F90D4 MOV X21, X0
	0x031F90D8 MOV X0, X8
	0x031F90DC BL 0x1C16F10
	0x031F90E0 MOV X1, X21
	0x031F90E4 MOV X20, X0
	0x031F90E8 BL 0x31E7A44
	0x031F90EC CBZ X20, 0x31F9168
	0x031F90F0 LDRB W8, [X20 + 0x10]
	0x031F90F4 CMP W8, 0x30
	0x031F90F8 B.NE 0x31F916C
	0x031F90FC MOV X0, X20
	0x031F9100 MOV W1, W31
	0x031F9104 BL 0x31E8704
	0x031F9108 CBZ X0, 0x31F915C
	0x031F910C LDRB W8, [X0 + 0x10]
	0x031F9110 CMP W8, 0x1
	0x031F9114 B.NE 0x31F9148
	0x031F9118 BL 0x31E7D00
	0x031F911C CBZ X0, 0x31F9168
	0x031F9120 LDR W8, [X0 + 0x18]
	0x031F9124 CBZ W8, 0x31F91B4
	0x031F9128 LDRB W8, [X0 + 0x20]
	0x031F912C MOVZ W1, 0x1
	0x031F9130 MOV X0, X20
	0x031F9134 CMP W8, 0xFF
	0x031F9138 CSET W8, EQ
	0x031F913C STRB W8, [X19 + 0x28]
	0x031F9140 BL 0x31E8704
	0x031F9144 CBZ X0, 0x31F915C
	0x031F9148 LDRB W8, [X0 + 0x10]
	0x031F914C CMP W8, 0x2
	0x031F9150 B.NE 0x31F915C
	0x031F9154 BL 0x31E8F8C

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X19, 0x11E5000
	009 Move X23, 0xF29000
	010 Move X22, 0xF23000
	011 Move W8, [X19+463]
	012 Move X23, [X23+3256]
	013 Move X22, [X22+464]
	014 Move X21, X1
	015 Move X20, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {34}
	020 Move X0, 0xF23000
	021 Move X0, [X0+464]
	022 Call 0x1C17CF4
	023 Move X0, 0xF29000
	024 Move X0, [X0+3256]
	025 Call 0x1C17CF4
	026 Move X0, 0xF2A000
	027 Move X0, [X0+616]
	028 Call 0x1C17CF4
	029 Move X0, 0xF2A000
	030 Move X0, [X0+624]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X19+463], W8
	034 Move X0, [X23]
	035 Call 0x1C17F10
	036 Move X1, X31
	037 Move X19, X0
	038 Call CollectionBase..ctor, X0
	039 Move X0, [X22]
	040 Move X22, [X20+16]
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Move X0, X22
	046 Move X1, X21
	047 Move X2, X31
	048 Call Path.Combine, X0, X1
	049 Move X1, X0
	050 Move W2, W31
	051 Move X21, X0
	052 Call X509Store.CheckStore, X0, X1, X2
	053 Move TEMP, X0
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfNotEqual {106}
	057 Move W8, [X20+41]
	058 Move X9, 0xF29000
	059 Move X10, 0xF29000
	060 Move X9, [X9+624]
	061 Move X10, [X10+616]
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move X0, X21
	064 Move X2, X31
	065 NotImplemented "Instruction CSEL not yet implemented."
	066 Move X1, [X8]
	067 Call Directory.GetFiles, X0, X1
	068 Compare X0, 0
	069 JumpIfEqual {106}
	070 Move X8, [X0+24]
	071 Move X20, X0
	072 Compare X8, 0
	073 JumpIfEqual {106}
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move X21, 0xF01000
	076 Move X21, [X21+3264]
	077 Move X23, X31
	078 Add X24, X20, 32
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Move X1, [X24]
	081 Call X509Store.LoadCertificate, X0, X1
	082 Move X1, X0
	083 Compare X19, 0
	084 JumpIfEqual {90}
	085 Move X0, X19
	086 Call X509CertificateCollection.Add, X0, X1
	087 Move W8, [X20+24]
	088 Add X23, X23, 1
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Call 0x1C17F20
	091 Move X22, X0
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Move X0, X22
	094 Call 0x3EB2AD0
	095 Move X22, X0
	096 Move X0, X21
	097 Call 0x1C17D08
	098 Move X8, [X22]
	099 Move X1, [X8]
	100 Call 0x1C18270
	101 Move TEMP, X0
	102 And TEMP, TEMP, 1
	103 Compare TEMP, 1
	104 JumpIfNotEqual {116}
	105 Call 0x3EB2AE0
	106 Move X0, X19
	107 Move X20, [X31+48]
	108 Move X19, [X31+56]
	109 Move X22, [X31+32]
	110 Move X21, [X31+40]
	111 Move X24, [X31+16]
	112 Move X23, [X31+24]
	113 Move X30, [X31+64]
	114 Return X0
	115 Call 0x1C17F28
	116 Move W0, 8
	117 Call 0x3EB2AF0
	118 Move X8, [X22]
	119 Move [X0], X8
	120 Move X1, 0xCBC000
	121 Add X1, X1, 3672
	122 Move X2, X31
	123 Call 0x3EB2B00
	124 Move X22, X0
	125 Call 0x3EB2AE0
	126 Move X0, X22
	127 Call 0x1D2D690
	128 Call 0x1991590

Method: System.Collections.ArrayList BuildCrlsCollection(System.String storeName)

Disassembly:
	0x031F91E0 LDR X0, [X0 + 0xB98]
	0x031F91E4 BL 0x1C16CF4
	0x031F91E8 ADRP X0, 0xEFA000
	0x031F91EC LDR X0, [X0 + 0x618]
	0x031F91F0 BL 0x1C16CF4
	0x031F91F4 MOVZ W8, 0x1
	0x031F91F8 STRB W8, [X20 + 0x1DD]
	0x031F91FC LDR X0, [X23]
	0x031F9200 BL 0x1C16F10
	0x031F9204 MOV X1, X31
	0x031F9208 MOV X20, X0
	0x031F920C BL 0x33BDD8C
	0x031F9210 MOVZ W8, 0x30
	0x031F9214 STRB W8, [X20 + 0x10]
	0x031F9218 STR X31, [X20 + 0x18]
	0x031F921C LDRB W8, [X19 + 0x28]
	0x031F9220 CBZ W8, 0x31F929C
	0x031F9224 ADRP X8, 0xEFA000
	0x031F9228 LDR X8, [X8 + 0x618]
	0x031F922C MOVZ W1, 0x1
	0x031F9230 LDR X0, [X8]
	0x031F9234 BL 0x1C16D6C
	0x031F9238 CBZ X0, 0x31F92D8
	0x031F923C LDR W8, [X0 + 0x18]
	0x031F9240 MOV X21, X0
	0x031F9244 CBZ W8, 0x31F92DC
	0x031F9248 MOVZ W8, 0xFF
	0x031F924C STRB W8, [X21 + 0x20]
	0x031F9250 LDR X0, [X23]
	0x031F9254 BL 0x1C16F10
	0x031F9258 MOV X1, X31
	0x031F925C MOV X22, X0
	0x031F9260 BL 0x33BDD8C
	0x031F9264 MOVZ W8, 0x1
	0x031F9268 MOV X0, X20
	0x031F926C MOV X1, X22
	0x031F9270 STRB W8, [X22 + 0x10]
	0x031F9274 STR X21, [X22 + 0x18]
	0x031F9278 BL 0x31E7ED0
	0x031F927C LDRB W8, [X19 + 0x28]
	0x031F9280 CBZ W8, 0x31F929C
	0x031F9284 LDR W0, [X19 + 0x2C]
	0x031F9288 TBNZ X0, 0x1F, 0x31F929C
	0x031F928C BL 0x31E8C1C
	0x031F9290 MOV X1, X0
	0x031F9294 MOV X0, X20
	0x031F9298 BL 0x31E7ED0
	0x031F929C LDR X0, [X23]
	0x031F92A0 BL 0x1C16F10
	0x031F92A4 MOV X1, X31
	0x031F92A8 MOV X21, X0
	0x031F92AC BL 0x33BDD8C
	0x031F92B0 MOVZ W8, 0x4
	0x031F92B4 STR X31, [X21 + 0x18]
	0x031F92B8 STRB W8, [X21 + 0x10]
	0x031F92BC STR X21, [X19 + 0x20]
	0x031F92C0 MOV X0, X21
	0x031F92C4 MOV X1, X20
	0x031F92C8 LDP X20, X19, [X31 + 0x20]
	0x031F92CC LDP X22, X21, [X31 + 0x10]
	0x031F92D0 LDP X30, X23, [X31], #0x30
	0x031F92D4 B 0x31E7ED0
	0x031F92D8 BL 0x1C16F20
	0x031F92DC BL 0x1C16F28
	0x031F92E0 LDRB W0, [X0 + 0x28]
	0x031F92E4 RET
	0x031F92E8 STP X30, X23, [X31 - 0x30]!
	0x031F92EC STP X22, X21, [X31 + 0x10]
	0x031F92F0 STP X20, X19, [X31 + 0x20]
	0x031F92F4 ADRP X20, 0x11E3000
	0x031F92F8 ADRP X21, 0xEFA000
	0x031F92FC LDRB W8, [X20 + 0x1DE]
	0x031F9300 LDR X21, [X21 + 0x8F0]
	0x031F9304 MOV X19, X0
	0x031F9308 TBNZ X8, 0x0, 0x31F9368
	0x031F930C ADRP X0, 0xEFC000
	0x031F9310 LDR X0, [X0 + 0xC48]
	0x031F9314 BL 0x1C16CF4
	0x031F9318 ADRP X0, 0xEFA000
	0x031F931C LDR X0, [X0 + 0x8F0]
	0x031F9320 BL 0x1C16CF4
	0x031F9324 ADRP X0, 0xF28000
	0x031F9328 LDR X0, [X0 + 0x300]
	0x031F932C BL 0x1C16CF4
	0x031F9330 ADRP X0, 0xF01000
	0x031F9334 LDR X0, [X0 + 0xEC8]
	0x031F9338 BL 0x1C16CF4
	0x031F933C ADRP X0, 0xF28000
	0x031F9340 LDR X0, [X0 + 0x308]
	0x031F9344 BL 0x1C16CF4
	0x031F9348 ADRP X0, 0xEFC000
	0x031F934C LDR X0, [X0 + 0x798]
	0x031F9350 BL 0x1C16CF4
	0x031F9354 ADRP X0, 0xF28000
	0x031F9358 LDR X0, [X0 + 0x310]
	0x031F935C BL 0x1C16CF4
	0x031F9360 MOVZ W8, 0x1
	0x031F9364 STRB W8, [X20 + 0x1DE]
	0x031F9368 LDR X0, [X21]
	0x031F936C BL 0x1C16F10
	0x031F9370 MOV X1, X31
	0x031F9374 MOV X20, X0
	0x031F9378 BL 0x3231AC4
	0x031F937C CBZ X20, 0x31F9484
	0x031F9380 ADRP X8, 0xF28000
	0x031F9384 LDR X8, [X8 + 0x300]
	0x031F9388 ADRP X21, 0xF28000
	0x031F938C ADRP X22, 0xF01000
	0x031F9390 ADRP X23, 0xF28000
	0x031F9394 LDR X1, [X8]
	0x031F9398 LDR X21, [X21 + 0x310]
	0x031F939C LDR X22, [X22 + 0xEC8]
	0x031F93A0 LDR X23, [X23 + 0x308]
	0x031F93A4 MOV X0, X20

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X19, 0x11E4000
	009 Move X23, 0xF28000
	010 Move X22, 0xF22000
	011 Move W8, [X19+464]
	012 Move X23, [X23+2976]
	013 Move X22, [X22+464]
	014 Move X20, X1
	015 Move X21, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {31}
	020 Move X0, 0xF28000
	021 Move X0, [X0+2976]
	022 Call 0x1C17CF4
	023 Move X0, 0xF22000
	024 Move X0, [X0+464]
	025 Call 0x1C17CF4
	026 Move X0, 0xF29000
	027 Move X0, [X0+632]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X19+464], W8
	031 Move X0, [X23]
	032 Call 0x1C17F10
	033 Move X1, X31
	034 Move X19, X0
	035 Call ArrayList..ctor, X0
	036 Move X0, [X22]
	037 Move X21, [X21+16]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Move X0, X21
	043 Move X1, X20
	044 Move X2, X31
	045 Call Path.Combine, X0, X1
	046 Move X1, X0
	047 Move W2, W31
	048 Move X20, X0
	049 Call X509Store.CheckStore, X0, X1, X2
	050 Move TEMP, X0
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfNotEqual {101}
	054 Move X8, 0xF29000
	055 Move X8, [X8+632]
	056 Move X0, X20
	057 Move X2, X31
	058 Move X1, [X8]
	059 Call Directory.GetFiles, X0, X1
	060 Compare X0, 0
	061 JumpIfEqual {101}
	062 Move X8, [X0+24]
	063 Move X20, X0
	064 Compare X8, 0
	065 JumpIfEqual {101}
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move X21, 0xF01000
	068 Move X21, [X21+3264]
	069 Move X23, X31
	070 Add X24, X20, 32
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move X1, [X24]
	073 Call X509Store.LoadCrl, X0, X1
	074 Move X1, X0
	075 Compare X19, 0
	076 JumpIfEqual {85}
	077 Move X8, [X19]
	078 Move X9, [X8+776]
	079 Move X2, [X8+784]
	080 Move X0, X19
	081 NotImplemented "Instruction BLR not yet implemented."
	082 Move W8, [X20+24]
	083 Add X23, X23, 1
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Call 0x1C17F20
	086 Move X22, X0
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Move X0, X22
	089 Call 0x3EB2AD0
	090 Move X22, X0
	091 Move X0, X21
	092 Call 0x1C17D08
	093 Move X8, [X22]
	094 Move X1, [X8]
	095 Call 0x1C18270
	096 Move TEMP, X0
	097 And TEMP, TEMP, 1
	098 Compare TEMP, 1
	099 JumpIfNotEqual {111}
	100 Call 0x3EB2AE0
	101 Move X0, X19
	102 Move X20, [X31+48]
	103 Move X19, [X31+56]
	104 Move X22, [X31+32]
	105 Move X21, [X31+40]
	106 Move X24, [X31+16]
	107 Move X23, [X31+24]
	108 Move X30, [X31+64]
	109 Return X0
	110 Call 0x1C17F28
	111 Move W0, 8
	112 Call 0x3EB2AF0
	113 Move X8, [X22]
	114 Move [X0], X8
	115 Move X1, 0xCBC000
	116 Add X1, X1, 3672
	117 Move X2, X31
	118 Call 0x3EB2B00
	119 Move X22, X0
	120 Call 0x3EB2AE0
	121 Move X0, X22
	122 Call 0x1D2D690
	123 Call 0x1991590

