Type: Mono.Security.X509.X509Crl/X509CrlEntry

Method: System.Void .ctor(Mono.Security.ASN1 entry)

Disassembly:
	0x031F4A90 LDP X9, X1, [X8 + 0x178]
	0x031F4A94 BLR X9
	0x031F4A98 ORR W22, W22, 0x6
	0x031F4A9C STR X0, [X19 + 0x78]
	0x031F4AA0 MOVZ W2, 0x81
	0x031F4AA4 MOV X0, X21
	0x031F4AA8 MOV W1, W22
	0x031F4AAC BL 0x31E8834
	0x031F4AB0 CBZ X0, 0x31F4AC0
	0x031F4AB4 BL 0x31E7D00
	0x031F4AB8 ADD W22, W22, 0x1
	0x031F4ABC STR X0, [X19 + 0xA8]
	0x031F4AC0 MOVZ W2, 0x82
	0x031F4AC4 MOV X0, X21
	0x031F4AC8 MOV W1, W22
	0x031F4ACC BL 0x31E8834
	0x031F4AD0 CBZ X0, 0x31F4AE0
	0x031F4AD4 BL 0x31E7D00
	0x031F4AD8 ADD W22, W22, 0x1
	0x031F4ADC STR X0, [X19 + 0xB0]
	0x031F4AE0 MOVZ W2, 0xA3
	0x031F4AE4 MOV X0, X21
	0x031F4AE8 MOV W1, W22
	0x031F4AEC BL 0x31E8834
	0x031F4AF0 ADRP X23, 0xF2D000
	0x031F4AF4 LDR X23, [X23 + 0xE0]
	0x031F4AF8 MOV X21, X0
	0x031F4AFC CBZ X0, 0x31F4B48
	0x031F4B00 LDR X0, [X21 + 0x20]
	0x031F4B04 CBZ X0, 0x31F4B48
	0x031F4B08 LDR X8, [X0]
	0x031F4B0C LDR X1, [X8 + 0x2A0]
	0x031F4B10 LDR X9, [X8 + 0x298]
	0x031F4B14 BLR X9
	0x031F4B18 CMP W0, 0x1
	0x031F4B1C B.NE 0x31F4B48
	0x031F4B20 MOV X0, X21
	0x031F4B24 MOV W1, W31
	0x031F4B28 BL 0x31E8704
	0x031F4B2C MOV X22, X0
	0x031F4B30 LDR X0, [X23]
	0x031F4B34 BL 0x1C16F10
	0x031F4B38 MOV X21, X0
	0x031F4B3C MOV X1, X22
	0x031F4B40 BL 0x31F3B64
	0x031F4B44 B 0x31F4B5C
	0x031F4B48 LDR X0, [X23]
	0x031F4B4C BL 0x1C16F10
	0x031F4B50 MOV X21, X0
	0x031F4B54 MOV X1, X31
	0x031F4B58 BL 0x31F3B64
	0x031F4B5C STR X21, [X19 + 0xB8]
	0x031F4B60 CBZ X20, 0x31F4D48

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x11E9000
	007 Move W8, [X21+415]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xF2D000
	015 Move X0, [X0+3024]
	016 Call 0x1C17CF4
	017 Move X0, 0xF2E000
	018 Move X0, [X0+224]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+415], W8
	022 Move X0, X19
	023 Move X1, X31
	024 Call Object..ctor, X0
	025 Compare X20, 0
	026 JumpIfEqual {62}
	027 Move X0, X20
	028 Move W1, W31
	029 Call ASN1.get_Item, X0, X1
	030 Compare X0, 0
	031 JumpIfEqual {62}
	032 Move X21, 0xF2D000
	033 Move X22, 0xF2E000
	034 Move X21, [X21+3024]
	035 Move X22, [X22+224]
	036 Call ASN1.get_Value, X0
	037 Move [X19+16], X0
	038 Move X1, [X21]
	039 Call 0x21475E8, X0
	040 Move W1, 1
	041 Move X0, X20
	042 Call ASN1.get_Item, X0, X1
	043 Call ASN1Convert.ToDateTime, X0
	044 Move [X19+24], X0
	045 Move W1, 2
	046 Move X0, X20
	047 Call ASN1.get_Item, X0, X1
	048 Move X8, [X22]
	049 Move X20, X0
	050 Move X0, X8
	051 Call 0x1C17F10
	052 Move X1, X20
	053 Move X21, X0
	054 Call X509ExtensionCollection..ctor, X0, X1
	055 Move [X19+32], X21
	056 Move X20, [X31+32]
	057 Move X19, [X31+40]
	058 Move X22, [X31+16]
	059 Move X21, [X31+24]
	060 Move X30, [X31+48]
	061 Return 
	062 Call 0x1C17F20

Method: System.Byte[] get_SerialNumber()

Disassembly:
	0x031F5118 BL 0x33A8A9C
	0x031F511C MOV X19, X21
	0x031F5120 MOV X0, X19
	0x031F5124 LDP X20, X19, [X31 + 0x10]
	0x031F5128 LDP X30, X21, [X31], #0x20
	0x031F512C RET
	0x031F5130 BL 0x1C16F20
	0x031F5134 BL 0x1C16F28
	0x031F5138 STR X1, [X0 + 0x90]
	0x031F513C CBZ X1, 0x31F5144
	0x031F5140 STR X31, [X0 + 0x88]
	0x031F5144 RET
	0x031F5148 LDR X0, [X0 + 0xB8]
	0x031F514C RET
	0x031F5150 STR X30, [X31 - 0x30]!
	0x031F5154 STP X22, X21, [X31 + 0x10]
	0x031F5158 STP X20, X19, [X31 + 0x20]
	0x031F515C ADRP X20, 0x11E7000
	0x031F5160 LDRB W8, [X20 + 0x1A5]
	0x031F5164 MOV X19, X0
	0x031F5168 TBNZ X8, 0x0, 0x31F5198
	0x031F516C ADRP X0, 0xEFE000
	0x031F5170 LDR X0, [X0 + 0x618]
	0x031F5174 BL 0x1C16CF4
	0x031F5178 ADRP X0, 0xEFE000
	0x031F517C LDR X0, [X0 + 0xE00]
	0x031F5180 BL 0x1C16CF4
	0x031F5184 ADRP X0, 0xF2B000
	0x031F5188 LDR X0, [X0 + 0xF88]
	0x031F518C BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x11E8000
	005 Move W8, [X20+416]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xEFF000
	012 Move X0, [X0+1560]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+416], W8
	016 Move X0, [X19+16]
	017 Compare X0, 0
	018 JumpIfEqual {35}
	019 Move X1, X31
	020 Call Array.Clone, X0
	021 Compare X0, 0
	022 JumpIfEqual {31}
	023 Move X8, 0xEFF000
	024 Move X8, [X8+1560]
	025 Move X19, X0
	026 Move X20, [X8]
	027 Move X1, X20
	028 Call 0x1C17E00
	029 Compare X0, 0
	030 JumpIfEqual {36}
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Return X0
	035 Call 0x1C17F20
	036 Move X0, X19
	037 Move X1, X20
	038 Call 0x1C181E0

Method: System.DateTime get_RevocationDate()

Disassembly:
	0x031F569C MOV X19, X0
	0x031F56A0 TBNZ X8, 0x0, 0x31F56B8

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: Mono.Security.X509.X509ExtensionCollection get_Extensions()

Disassembly:
	0x031F56A4 ADRP X0, 0xEFE000
	0x031F56A8 LDR X0, [X0 + 0x618]

ISIL:
	001 Move X0, [X0+32]
	002 Return X0

