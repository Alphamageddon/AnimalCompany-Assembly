Type: Mono.Security.X509.X509StoreManager

Method: System.String get_CurrentUserPath()

Disassembly:
	0x031F975C BL 0x1C16DFC
	0x031F9760 LDR X8, [X25]
	0x031F9764 CBZ X22, 0x31F98EC
	0x031F9768 ADRP X10, 0xF27000
	0x031F976C LDR X9, [X8 + 0xB8]
	0x031F9770 LDR X8, [X22]
	0x031F9774 LDR X23, [X19 + 0x20]
	0x031F9778 LDR X10, [X10 + 0xEA0]
	0x031F977C LDR X24, [X9]
	0x031F9780 LDRH W9, [X8 + 0x12E]
	0x031F9784 LDR X1, [X10]
	0x031F9788 CBZ X9, 0x31F97AC
	0x031F978C LDR X10, [X8 + 0xB0]
	0x031F9790 ADD X10, X10, 0x8
	0x031F9794 LDUR X11, [X10 - 0x8]
	0x031F9798 CMP X11, X1
	0x031F979C B.EQ 0x31F97F4
	0x031F97A0 SUBS X9, X9, 0x1
	0x031F97A4 ADD X10, X10, 0x10
	0x031F97A8 B.NE 0x31F9794
	0x031F97AC MOVZ W2, 0x3
	0x031F97B0 MOV X0, X22
	0x031F97B4 BL 0x1C5C788
	0x031F97B8 B 0x31F9804
	0x031F97BC LDR X0, [X25]
	0x031F97C0 LDR W8, [X0 + 0xE0]
	0x031F97C4 CBNZ W8, 0x31F97D0
	0x031F97C8 BL 0x1C16DFC
	0x031F97CC LDR X0, [X25]
	0x031F97D0 LDR X8, [X0 + 0xB8]
	0x031F97D4 LDR X2, [X19 + 0x20]
	0x031F97D8 MOVZ W3, 0x8
	0x031F97DC MOVZ W4, 0x8
	0x031F97E0 LDR X0, [X8 + 0x8]
	0x031F97E4 MOV W1, W31
	0x031F97E8 MOV X5, X31
	0x031F97EC BL 0x33A8A9C
	0x031F97F0 B 0x31F9824
	0x031F97F4 LDR W9, [X10]
	0x031F97F8 ADD W9, W9, 0x3
	0x031F97FC ADD X8, X8, W9, 0x4, SXTW
	0x031F9800 ADD X0, X8, 0x138
	0x031F9804 LDP X8, X6, [X0]
	0x031F9808 MOVZ W3, 0x8
	0x031F980C MOVZ W5, 0x8
	0x031F9810 MOV X0, X22
	0x031F9814 MOV X1, X24
	0x031F9818 MOV W2, W31
	0x031F981C MOV X4, X23
	0x031F9820 BLR X8
	0x031F9824 MOV X0, X31
	0x031F9828 BL 0x31FE3B0
	0x031F982C MOV X22, X0
	0x031F9830 CBZ X21, 0x31F9858
	0x031F9834 MOV X0, X31
	0x031F9838 BL 0x3242C30
	0x031F983C CBZ X0, 0x31F98EC
	0x031F9840 LDR X8, [X0]
	0x031F9844 MOV X1, X21
	0x031F9848 LDR X9, [X8 + 0x268]
	0x031F984C LDR X2, [X8 + 0x270]
	0x031F9850 BLR X9

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x11E4000
	005 Move X20, 0xF29000
	006 Move W8, [X19+465]
	007 Move X20, [X20+656]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {26}
	012 Move X0, 0xF22000
	013 Move X0, [X0+464]
	014 Call 0x1C17CF4
	015 Move X0, 0xF29000
	016 Move X0, [X0+656]
	017 Call 0x1C17CF4
	018 Move X0, 0xF29000
	019 Move X0, [X0+664]
	020 Call 0x1C17CF4
	021 Move X0, 0xF29000
	022 Move X0, [X0+672]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X19+465], W8
	026 Move X8, [X20]
	027 Move X8, [X8+184]
	028 Move X0, [X8]
	029 Compare X0, 0
	030 JumpIfNotEqual {66}
	031 Move W0, 26
	032 Move X1, X31
	033 Call Environment.GetFolderPath, X0
	034 Move X8, 0xF22000
	035 Move X8, [X8+464]
	036 Move X19, X0
	037 Move X8, [X8]
	038 Move W9, [X8+224]
	039 Compare W9, 0
	040 JumpIfNotEqual {43}
	041 Move X0, X8
	042 Call 0x1C17DFC
	043 Move X8, 0xF29000
	044 Move X8, [X8+664]
	045 Move X0, X19
	046 Move X2, X31
	047 Move X1, [X8]
	048 Call Path.Combine, X0, X1
	049 Move X8, [X20]
	050 Move X9, 0xF29000
	051 Move X2, X31
	052 Move X8, [X8+184]
	053 Move [X8], X0
	054 Move X8, [X20]
	055 Move X8, [X8+184]
	056 Move X9, [X9+672]
	057 Move X0, [X8]
	058 Move X1, [X9]
	059 Call Path.Combine, X0, X1
	060 Move X8, [X20]
	061 Move X8, [X8+184]
	062 Move [X8], X0
	063 Move X8, [X20]
	064 Move X8, [X8+184]
	065 Move X0, [X8]
	066 Move X20, [X31+16]
	067 Move X19, [X31+24]
	068 Move X30, [X31+32]
	069 Return X0

Method: System.String get_LocalMachinePath()

Disassembly:
	0x031F9854 B 0x31F986C
	0x031F9858 ADRP X8, 0xEFA000
	0x031F985C LDR X8, [X8 + 0x618]
	0x031F9860 MOV W1, W31
	0x031F9864 LDR X0, [X8]
	0x031F9868 BL 0x1C16D6C
	0x031F986C MOV X21, X0
	0x031F9870 CBZ X22, 0x31F98EC
	0x031F9874 MOV X0, X22
	0x031F9878 MOV X1, X21
	0x031F987C MOV X2, X31
	0x031F9880 BL 0x32513F4
	0x031F9884 LDR X2, [X19 + 0x28]
	0x031F9888 MOVZ W4, 0x10
	0x031F988C MOV W1, W31
	0x031F9890 MOV W3, W31
	0x031F9894 MOV X5, X31
	0x031F9898 MOV X19, X0
	0x031F989C BL 0x33A8A9C
	0x031F98A0 CBZ X21, 0x31F98EC
	0x031F98A4 LDR W2, [X21 + 0x18]
	0x031F98A8 MOV X0, X21
	0x031F98AC MOV W1, W31
	0x031F98B0 MOV X3, X31
	0x031F98B4 BL 0x339FA34
	0x031F98B8 CBZ X19, 0x31F98EC
	0x031F98BC LDR W2, [X19 + 0x18]
	0x031F98C0 MOV X0, X19
	0x031F98C4 MOV W1, W31
	0x031F98C8 MOV X3, X31
	0x031F98CC BL 0x339FA34
	0x031F98D0 MOV X0, X20
	0x031F98D4 LDP X20, X19, [X31 + 0x30]
	0x031F98D8 LDP X22, X21, [X31 + 0x20]
	0x031F98DC LDP X24, X23, [X31 + 0x10]
	0x031F98E0 MOV X1, X31
	0x031F98E4 LDP X30, X25, [X31], #0x40
	0x031F98E8 B 0x3260840
	0x031F98EC BL 0x1C16F20
	0x031F98F0 ADRP X0, 0xF23000
	0x031F98F4 LDR X0, [X0 + 0x4B8]
	0x031F98F8 BL 0x1C16D08
	0x031F98FC BL 0x1C16F10
	0x031F9900 MOV X19, X0
	0x031F9904 ADRP X0, 0xF28000
	0x031F9908 LDR X0, [X0 + 0x328]
	0x031F990C BL 0x1C16D08
	0x031F9910 MOV X1, X0
	0x031F9914 MOV X0, X19
	0x031F9918 MOV X2, X31
	0x031F991C BL 0x338C448
	0x031F9920 ADRP X0, 0xF28000
	0x031F9924 LDR X0, [X0 + 0x330]
	0x031F9928 BL 0x1C16D08
	0x031F992C MOV X1, X0
	0x031F9930 MOV X0, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x11E4000
	005 Move X20, 0xF29000
	006 Move W8, [X19+466]
	007 Move X20, [X20+656]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {26}
	012 Move X0, 0xF22000
	013 Move X0, [X0+464]
	014 Call 0x1C17CF4
	015 Move X0, 0xF29000
	016 Move X0, [X0+656]
	017 Call 0x1C17CF4
	018 Move X0, 0xF29000
	019 Move X0, [X0+664]
	020 Call 0x1C17CF4
	021 Move X0, 0xF29000
	022 Move X0, [X0+672]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X19+466], W8
	026 Move X8, [X20]
	027 Move X8, [X8+184]
	028 Move X0, [X8+8]
	029 Compare X0, 0
	030 JumpIfNotEqual {60}
	031 Move W0, 35
	032 Move X1, X31
	033 Call Environment.GetFolderPath, X0
	034 Move X8, 0xF22000
	035 Move X8, [X8+464]
	036 Move X19, X0
	037 Move X8, [X8]
	038 Move W9, [X8+224]
	039 Compare W9, 0
	040 JumpIfNotEqual {43}
	041 Move X0, X8
	042 Call 0x1C17DFC
	043 Move X8, 0xF29000
	044 Move X8, [X8+664]
	045 Move X0, X19
	046 Move X2, X31
	047 Move X1, [X8]
	048 Call Path.Combine, X0, X1
	049 Move X8, [X20]
	050 Move X2, X31
	051 Move X8, [X8+184]
	052 Move [X8+8], X0
	053 Move X8, 0xF29000
	054 Move X8, [X8+672]
	055 Move X1, [X8]
	056 Call Path.Combine, X0, X1
	057 Move X8, [X20]
	058 Move X8, [X8+184]
	059 Move [X8+8], X0
	060 Move X20, [X31+16]
	061 Move X19, [X31+24]
	062 Move X30, [X31+32]
	063 Return X0

Method: Mono.Security.X509.X509Stores get_CurrentUser()

Disassembly:
	0x031F9934 BL 0x1C16DEC
	0x031F9938 STR X30, [X31 - 0x30]!
	0x031F993C STP X22, X21, [X31 + 0x10]
	0x031F9940 STP X20, X19, [X31 + 0x20]
	0x031F9944 ADRP X21, 0x11E3000
	0x031F9948 LDRB W8, [X21 + 0x1E1]
	0x031F994C MOV X20, X1
	0x031F9950 MOV X19, X0
	0x031F9954 TBNZ X8, 0x0, 0x31F996C
	0x031F9958 ADRP X0, 0xEFA000
	0x031F995C LDR X0, [X0 + 0x618]
	0x031F9960 BL 0x1C16CF4
	0x031F9964 MOVZ W8, 0x1
	0x031F9968 STRB W8, [X21 + 0x1E1]
	0x031F996C CBZ X20, 0x31F99DC
	0x031F9970 LDRB W8, [X19 + 0x10]
	0x031F9974 CBNZ W8, 0x31F9A10
	0x031F9978 MOV X0, X20
	0x031F997C MOV X1, X31
	0x031F9980 BL 0x33A01F0
	0x031F9984 CBZ X0, 0x31F99C8
	0x031F9988 ADRP X22, 0xEFA000
	0x031F998C LDR X22, [X22 + 0x618]
	0x031F9990 MOV X20, X0
	0x031F9994 LDR X21, [X22]
	0x031F9998 MOV X1, X21
	0x031F999C BL 0x1C16E00
	0x031F99A0 CBZ X0, 0x31F9A58
	0x031F99A4 STR X0, [X19 + 0x18]
	0x031F99A8 LDR X19, [X22]
	0x031F99AC MOV X0, X20
	0x031F99B0 MOV X1, X19
	0x031F99B4 BL 0x1C16E00
	0x031F99B8 CBNZ X0, 0x31F99CC
	0x031F99BC MOV X0, X20
	0x031F99C0 MOV X1, X19
	0x031F99C4 BL 0x1C171E0
	0x031F99C8 STR X31, [X19 + 0x18]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0x11E4000
	006 Move X21, 0xF29000
	007 Move W8, [X19+467]
	008 Move X21, [X21+656]
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0xF29000
	014 Move X0, [X0+656]
	015 Call 0x1C17CF4
	016 Move X0, 0xF29000
	017 Move X0, [X0+680]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X19+467], W8
	021 Move X8, [X21]
	022 Move X8, [X8+184]
	023 Move X19, [X8+16]
	024 Compare X19, 0
	025 JumpIfNotEqual {41}
	026 Call X509StoreManager.get_CurrentUserPath
	027 Move X8, 0xF29000
	028 Move X8, [X8+680]
	029 Move X20, X0
	030 Move X8, [X8]
	031 Move X0, X8
	032 Call 0x1C17F10
	033 Move X1, X31
	034 Move X19, X0
	035 Call Object..ctor, X0
	036 Move [X19+16], X20
	037 Move [X19+24], W31
	038 Move X8, [X21]
	039 Move X8, [X8+184]
	040 Move [X8+16], X19
	041 Move X0, X19
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X30, [X31+32]
	045 Move X21, [X31+40]
	046 Return X0

Method: Mono.Security.X509.X509Stores get_LocalMachine()

Disassembly:
	0x031F99FC MOV X1, X0
	0x031F9A00 MOV X0, X19
	0x031F9A04 MOV X2, X31
	0x031F9A08 BL 0x330E100
	0x031F9A0C B 0x31F9A40
	0x031F9A10 ADRP X0, 0xF23000
	0x031F9A14 LDR X0, [X0 + 0x4B8]
	0x031F9A18 BL 0x1C16D08
	0x031F9A1C BL 0x1C16F10
	0x031F9A20 MOV X19, X0
	0x031F9A24 ADRP X0, 0xF28000
	0x031F9A28 LDR X0, [X0 + 0x328]
	0x031F9A2C BL 0x1C16D08
	0x031F9A30 MOV X1, X0
	0x031F9A34 MOV X0, X19
	0x031F9A38 MOV X2, X31
	0x031F9A3C BL 0x338C448
	0x031F9A40 ADRP X0, 0xF28000
	0x031F9A44 LDR X0, [X0 + 0x340]
	0x031F9A48 BL 0x1C16D08
	0x031F9A4C MOV X1, X0
	0x031F9A50 MOV X0, X19
	0x031F9A54 BL 0x1C16DEC
	0x031F9A58 MOV X0, X20
	0x031F9A5C MOV X1, X21
	0x031F9A60 BL 0x1C171E0
	0x031F9A64 STP X30, X21, [X31 - 0x20]!
	0x031F9A68 STP X20, X19, [X31 + 0x10]
	0x031F9A6C LDRB W8, [X0 + 0x10]
	0x031F9A70 MOV X19, X0
	0x031F9A74 CBNZ W8, 0x31F9A80
	0x031F9A78 MOV X0, X19
	0x031F9A7C BL 0x31F9B04
	0x031F9A80 MOV X0, X19
	0x031F9A84 LDP X20, X19, [X31 + 0x10]
	0x031F9A88 MOV X1, X31
	0x031F9A8C LDP X30, X21, [X31], #0x20
	0x031F9A90 B 0x33CB4DC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0x11E4000
	006 Move X21, 0xF29000
	007 Move W8, [X19+468]
	008 Move X21, [X21+656]
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0xF29000
	014 Move X0, [X0+656]
	015 Call 0x1C17CF4
	016 Move X0, 0xF29000
	017 Move X0, [X0+680]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X19+468], W8
	021 Move X8, [X21]
	022 Move X8, [X8+184]
	023 Move X19, [X8+24]
	024 Compare X19, 0
	025 JumpIfNotEqual {41}
	026 Call X509StoreManager.get_LocalMachinePath
	027 Move X8, 0xF29000
	028 Move X8, [X8+680]
	029 Move X20, X0
	030 Move X8, [X8]
	031 Move X0, X8
	032 Call 0x1C17F10
	033 Move X1, X31
	034 Move X19, X0
	035 Call Object..ctor, X0
	036 Move [X19+16], X20
	037 Move [X19+24], W31
	038 Move X8, [X21]
	039 Move X8, [X8+184]
	040 Move [X8+24], X19
	041 Move X0, X19
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X30, [X31+32]
	045 Move X21, [X31+40]
	046 Return X0

Method: Mono.Security.X509.X509CertificateCollection get_TrustedRootCertificates()

Disassembly:
	0x031F7940 STP X30, X23, [X31 - 0x30]!
	0x031F7944 STP X22, X21, [X31 + 0x10]
	0x031F7948 STP X20, X19, [X31 + 0x20]
	0x031F794C ADRP X21, 0x11E5000
	0x031F7950 LDRB W8, [X21 + 0x1C5]
	0x031F7954 MOV X20, X1
	0x031F7958 MOV X19, X0
	0x031F795C TBNZ X8, 0x0, 0x31F7974
	0x031F7960 ADRP X0, 0xF2A000
	0x031F7964 LDR X0, [X0 + 0xF8]
	0x031F7968 BL 0x1C16CF4
	0x031F796C MOVZ W8, 0x1
	0x031F7970 STRB W8, [X21 + 0x1C5]
	0x031F7974 CBZ X20, 0x31F7A6C
	0x031F7978 ADRP X8, 0xF2A000
	0x031F797C LDR X8, [X8 + 0xF8]
	0x031F7980 LDR X9, [X20]
	0x031F7984 LDR X8, [X8]
	0x031F7988 LDRB W11, [X9 + 0x130]
	0x031F798C LDRB W10, [X8 + 0x130]
	0x031F7990 CMP W11, W10
	0x031F7994 B.CC 0x31F7A6C
	0x031F7998 LDR X9, [X9 + 0xC8]
	0x031F799C ADD X9, X9, X10, 0x3, LSL
	0x031F79A0 LDUR X9, [X9 - 0x8]
	0x031F79A4 CMP X9, X8
	0x031F79A8 CSEL X22, X20, X31, EQ
	0x031F79AC B.NE 0x31F7A6C
	0x031F79B0 CBZ X22, 0x31F7A8C
	0x031F79B4 LDRB W8, [X19 + 0x18]
	0x031F79B8 LDRB W9, [X22 + 0x18]
	0x031F79BC CMP W8, W9
	0x031F79C0 B.NE 0x31F7A6C
	0x031F79C4 LDR X0, [X19 + 0x10]
	0x031F79C8 LDR X1, [X22 + 0x10]
	0x031F79CC MOV X2, X31
	0x031F79D0 BL 0x3226EF8
	0x031F79D4 TBNZ X0, 0x0, 0x31F7A6C
	0x031F79D8 LDR X0, [X19 + 0x20]
	0x031F79DC CBZ X0, 0x31F7A8C
	0x031F79E0 LDR X8, [X0 + 0x18]
	0x031F79E4 CBZ X8, 0x31F79F0
	0x031F79E8 LDR W9, [X8 + 0x18]
	0x031F79EC B 0x31F79F4
	0x031F79F0 MOV W9, W31
	0x031F79F4 LDR X10, [X22 + 0x20]
	0x031F79F8 CBZ X10, 0x31F7A8C
	0x031F79FC LDR X10, [X10 + 0x18]
	0x031F7A00 CBZ X10, 0x31F7A08
	0x031F7A04 LDR W10, [X10 + 0x18]
	0x031F7A08 CMP W9, W10

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x11E6000
	005 Move X20, 0xF2A000
	006 Move W8, [X19+469]
	007 Move X20, [X20+3256]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xF2A000
	013 Move X0, [X0+3256]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+469], W8
	017 Move X0, [X20]
	018 Call 0x1C17F10
	019 Move X1, X31
	020 Move X19, X0
	021 Call CollectionBase..ctor, X0
	022 Call X509StoreManager.get_CurrentUser
	023 Compare X0, 0
	024 JumpIfEqual {63}
	025 Call X509Stores.get_TrustedRoot, X0
	026 Compare X0, 0
	027 JumpIfEqual {63}
	028 Move X1, [X0+24]
	029 Move X20, X0
	030 Compare X1, 0
	031 JumpIfNotEqual {37}
	032 Move X1, [X20+16]
	033 Move X0, X20
	034 Call X509Store.BuildCertificatesCollection, X0, X1
	035 Move X1, X0
	036 Move [X20+24], X0
	037 Compare X19, 0
	038 JumpIfEqual {63}
	039 Move X0, X19
	040 Call X509CertificateCollection.AddRange, X0, X1
	041 Call X509StoreManager.get_LocalMachine
	042 Compare X0, 0
	043 JumpIfEqual {63}
	044 Call X509Stores.get_TrustedRoot, X0
	045 Compare X0, 0
	046 JumpIfEqual {63}
	047 Move X1, [X0+24]
	048 Move X20, X0
	049 Compare X1, 0
	050 JumpIfNotEqual {56}
	051 Move X1, [X20+16]
	052 Move X0, X20
	053 Call X509Store.BuildCertificatesCollection, X0, X1
	054 Move X1, X0
	055 Move [X20+24], X0
	056 Move X0, X19
	057 Call X509CertificateCollection.AddRange, X0, X1
	058 Move X0, X19
	059 Move X20, [X31+16]
	060 Move X19, [X31+24]
	061 Move X30, [X31+32]
	062 Return X0
	063 Call 0x1C17F20

