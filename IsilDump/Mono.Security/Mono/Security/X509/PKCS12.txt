Type: Mono.Security.X509.PKCS12

Method: System.Void .ctor()

Disassembly:
	0x031EC128 BL 0x31E8704
	0x031EC12C CBZ X0, 0x31EC21C
	0x031EC130 LDRB W8, [X0 + 0x10]
	0x031EC134 CMP W8, 0x30
	0x031EC138 CSEL X25, X0, X25, EQ
	0x031EC13C B.NE 0x31EC268
	0x031EC140 CBZ X25, 0x31EC21C
	0x031EC144 MOV X0, X25
	0x031EC148 MOV W1, W31
	0x031EC14C BL 0x31E8704
	0x031EC150 CBZ X0, 0x31EC21C
	0x031EC154 LDRB W8, [X0 + 0x10]
	0x031EC158 CMP W8, 0x6
	0x031EC15C CSEL X23, X25, X23, EQ
	0x031EC160 CSEL X24, X0, X24, EQ
	0x031EC164 B.NE 0x31EC288
	0x031EC168 MOV X0, X24
	0x031EC16C BL 0x31E909C
	0x031EC170 CBZ X23, 0x31EC21C
	0x031EC174 MOV X27, X0
	0x031EC178 MOVZ W1, 0x1
	0x031EC17C MOV X0, X23
	0x031EC180 BL 0x31E8704
	0x031EC184 CBZ X0, 0x31EC21C
	0x031EC188 MOV X28, X0
	0x031EC18C MOV W29, W31
	0x031EC190 LDR X0, [X28 + 0x20]
	0x031EC194 CBZ X0, 0x31EC1A8
	0x031EC198 LDR X8, [X0]
	0x031EC19C LDR X9, [X8 + 0x298]
	0x031EC1A0 LDR X1, [X8 + 0x2A0]
	0x031EC1A4 BLR X9
	0x031EC1A8 CMP W29, W0
	0x031EC1AC B.GE 0x31EC214
	0x031EC1B0 MOV X0, X28
	0x031EC1B4 MOV W1, W29
	0x031EC1B8 BL 0x31E8704
	0x031EC1BC LDR X1, [X21]
	0x031EC1C0 MOV X20, X0
	0x031EC1C4 MOV X0, X27
	0x031EC1C8 MOV X2, X31
	0x031EC1CC BL 0x321BA08
	0x031EC1D0 TBZ X0, 0x0, 0x31EC1E8
	0x031EC1D4 CBZ X20, 0x31EC21C
	0x031EC1D8 LDRB W8, [X20 + 0x10]
	0x031EC1DC CMP W8, 0x1E
	0x031EC1E0 B.EQ 0x31EC20C
	0x031EC1E4 B 0x31EC220
	0x031EC1E8 LDR X1, [X19]
	0x031EC1EC MOV X0, X27
	0x031EC1F0 MOV X2, X31
	0x031EC1F4 BL 0x321BA08
	0x031EC1F8 TBZ X0, 0x0, 0x31EC20C
	0x031EC1FC CBZ X20, 0x31EC21C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x11F1000
	007 Move X21, 0xF35000
	008 Move X22, 0xF35000
	009 Move W8, [X20+377]
	010 Move X21, [X21+2976]
	011 Move X22, [X22+3256]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0xF35000
	018 Move X0, [X0+2976]
	019 Call 0x1C17CF4
	020 Move X0, 0xF35000
	021 Move X0, [X0+3256]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+377], W8
	025 Move X0, X19
	026 Move X1, X31
	027 Call Object..ctor, X0
	028 Move W8, 2000
	029 Move [X19+52], W8
	030 Move X0, [X21]
	031 Call 0x1C17F10
	032 Move X1, X31
	033 Move X20, X0
	034 Call ArrayList..ctor, X0
	035 Move [X19+24], X20
	036 Move X0, [X21]
	037 Call 0x1C17F10
	038 Move X1, X31
	039 Move X20, X0
	040 Call ArrayList..ctor, X0
	041 Move [X19+32], X20
	042 Move X0, [X22]
	043 Call 0x1C17F10
	044 Move X1, X31
	045 Move X20, X0
	046 Call CollectionBase..ctor, X0
	047 Move [X19+40], X20
	048 NotImplemented "Instruction STRH not yet implemented."
	049 Move [X19+50], W31
	050 Move X0, [X21]
	051 Call 0x1C17F10
	052 Move X1, X31
	053 Move X20, X0
	054 Call ArrayList..ctor, X0
	055 Move [X19+56], X20
	056 Move X20, [X31+32]
	057 Move X19, [X31+40]
	058 Move X22, [X31+16]
	059 Move X21, [X31+24]
	060 Move X30, [X31+48]
	061 Return 

Method: System.Void .ctor(System.Byte[] data)

Disassembly:
	0x031EC200 LDRB W8, [X20 + 0x10]
	0x031EC204 CMP W8, 0x4
	0x031EC208 B.NE 0x31EC220
	0x031EC20C ADD W29, W29, 0x1
	0x031EC210 B 0x31EC190
	0x031EC214 ADD W26, W26, 0x1
	0x031EC218 B 0x31EC100
	0x031EC21C BL 0x1C16F20
	0x031EC220 ADRP X0, 0xF0F000
	0x031EC224 LDR X0, [X0 + 0x578]
	0x031EC228 BL 0x1C16D08
	0x031EC22C BL 0x1C16F10
	0x031EC230 MOV X19, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X1
	005 Move X20, X0
	006 Call PKCS12..ctor, X0
	007 Move X0, X20
	008 Move X1, X31
	009 Call PKCS12.set_Password, X0, X1
	010 Move X0, X20
	011 Move X1, X19
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move X30, [X31+32]
	015 Call PKCS12.Decode, X0, X1
	016 Return 

Method: System.Void .ctor(System.Byte[] data, System.String password)

Disassembly:
	0x031ECA74 B 0x31ECAE4
	0x031ECA78 B 0x31ECAE4
	0x031ECA7C B 0x31ECAE4
	0x031ECA80 B 0x31ECAE4
	0x031ECA84 B 0x31ECAE4
	0x031ECA88 B 0x31ECAE4
	0x031ECA8C B 0x31ECAE4
	0x031ECA90 B 0x31ECAE4
	0x031ECA94 B 0x31ECAE4
	0x031ECA98 B 0x31ECAE4
	0x031ECA9C B 0x31ECAE4
	0x031ECAA0 B 0x31ECAE4
	0x031ECAA4 B 0x31ECAE4
	0x031ECAA8 B 0x31ECAE4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, X2
	006 Move X20, X1
	007 Move X21, X0
	008 Call PKCS12..ctor, X0
	009 Move X0, X21
	010 Move X1, X19
	011 Call PKCS12.set_Password, X0, X1
	012 Move X1, X20
	013 Move X20, [X31+16]
	014 Move X19, [X31+24]
	015 Move X0, X21
	016 Move X30, [X31+32]
	017 Move X21, [X31+40]
	018 Call PKCS12.Decode, X0, X1
	019 Return 

Method: System.Void Decode(System.Byte[] data)

Disassembly:
	0x031EC3F0 STP X20, X19, [X31 + 0x10]
	0x031EC3F4 MOV X19, X0
	0x031EC3F8 LDR X0, [X0 + 0x10]
	0x031EC3FC CBZ X0, 0x31EC410
	0x031EC400 LDR W2, [X0 + 0x18]
	0x031EC404 MOV W1, W31
	0x031EC408 MOV X3, X31
	0x031EC40C BL 0x339FA34
	0x031EC410 STR X31, [X19 + 0x10]
	0x031EC414 MOV X0, X19
	0x031EC418 LDP X20, X19, [X31 + 0x10]
	0x031EC41C MOV X1, X31
	0x031EC420 LDP X30, X21, [X31], #0x20
	0x031EC424 B 0x33CB4DC
	0x031EC428 CMP W1, 0x1
	0x031EC42C MOV X21, X0
	0x031EC430 B.NE 0x31EC460
	0x031EC434 MOV X0, X21
	0x031EC438 BL 0x3EB1AD0
	0x031EC43C LDR X20, [X0]
	0x031EC440 BL 0x3EB1AE0
	0x031EC444 MOV X0, X19
	0x031EC448 MOV X1, X31
	0x031EC44C BL 0x33CB4DC
	0x031EC450 CBNZ X20, 0x31EC468
	0x031EC454 LDP X20, X19, [X31 + 0x10]
	0x031EC458 LDP X30, X21, [X31], #0x20
	0x031EC45C RET
	0x031EC460 MOV X20, X31
	0x031EC464 B 0x31EC474
	0x031EC468 MOV X0, X20
	0x031EC46C BL 0x1C16F18
	0x031EC470 MOV X21, X0
	0x031EC474 MOV X0, X19
	0x031EC478 MOV X1, X31
	0x031EC47C BL 0x33CB4DC
	0x031EC480 CBNZ X20, 0x31EC48C
	0x031EC484 MOV X0, X21
	0x031EC488 BL 0x1D2C690
	0x031EC48C MOV X0, X20
	0x031EC490 BL 0x1C16F18
	0x031EC494 BL 0x1990590
	0x031EC498 LDR W0, [X0 + 0x34]
	0x031EC49C RET
	0x031EC4A0 STR W1, [X0 + 0x34]
	0x031EC4A4 RET
	0x031EC4A8 SUB X31, X31, 0xE0
	0x031EC4AC STP X29, X30, [X31 + 0x80]
	0x031EC4B0 STP X28, X27, [X31 + 0x90]
	0x031EC4B4 STP X26, X25, [X31 + 0xA0]
	0x031EC4B8 STP X24, X23, [X31 + 0xB0]
	0x031EC4BC STP X22, X21, [X31 + 0xC0]
	0x031EC4C0 STP X20, X19, [X31 + 0xD0]
	0x031EC4C4 ADRP X20, 0x11F0000
	0x031EC4C8 LDRB W8, [X20 + 0x17C]
	0x031EC4CC MOV X19, X0
	0x031EC4D0 TBNZ X8, 0x0, 0x31EC530
	0x031EC4D4 ADRP X0, 0xF34000
	0x031EC4D8 LDR X0, [X0 + 0xDF8]
	0x031EC4DC BL 0x1C16CF4
	0x031EC4E0 ADRP X0, 0xF07000
	0x031EC4E4 LDR X0, [X0 + 0xE00]
	0x031EC4E8 BL 0x1C16CF4
	0x031EC4EC ADRP X0, 0xF07000
	0x031EC4F0 LDR X0, [X0 + 0xE18]
	0x031EC4F4 BL 0x1C16CF4
	0x031EC4F8 ADRP X0, 0xF34000
	0x031EC4FC LDR X0, [X0 + 0xE00]
	0x031EC500 BL 0x1C16CF4
	0x031EC504 ADRP X0, 0xF34000
	0x031EC508 LDR X0, [X0 + 0xE08]
	0x031EC50C BL 0x1C16CF4
	0x031EC510 ADRP X0, 0xF34000
	0x031EC514 LDR X0, [X0 + 0xE18]
	0x031EC518 BL 0x1C16CF4
	0x031EC51C ADRP X0, 0xF34000
	0x031EC520 LDR X0, [X0 + 0xE30]
	0x031EC524 BL 0x1C16CF4
	0x031EC528 MOVZ W8, 0x1
	0x031EC52C STRB W8, [X20 + 0x17C]
	0x031EC530 LDRB W8, [X19 + 0x30]
	0x031EC534 CBZ W8, 0x31EC998
	0x031EC538 LDR X0, [X19 + 0x18]
	0x031EC53C CBZ X0, 0x31ECA18
	0x031EC540 LDR X8, [X0]
	0x031EC544 LDR X9, [X8 + 0x328]
	0x031EC548 LDR X1, [X8 + 0x330]
	0x031EC54C BLR X9
	0x031EC550 LDR X0, [X19 + 0x38]
	0x031EC554 CBZ X0, 0x31ECA18
	0x031EC558 LDR X8, [X0]
	0x031EC55C LDR X9, [X8 + 0x388]
	0x031EC560 LDR X1, [X8 + 0x390]
	0x031EC564 BLR X9
	0x031EC568 MOV X20, X0
	0x031EC56C CBZ X0, 0x31ECA1C
	0x031EC570 ADRP X26, 0xF07000
	0x031EC574 ADRP X27, 0xF34000
	0x031EC578 ADRP X28, 0xF34000
	0x031EC57C ADRP X29, 0xF34000
	0x031EC580 ADRP X25, 0xF34000
	0x031EC584 LDR X26, [X26 + 0xE18]
	0x031EC588 LDR X27, [X27 + 0xE08]
	0x031EC58C LDR X28, [X28 + 0xE18]
	0x031EC590 LDR X29, [X29 + 0xE00]
	0x031EC594 LDR X25, [X25 + 0xE30]
	0x031EC598 LDR X8, [X20]
	0x031EC59C LDR X1, [X26]
	0x031EC5A0 LDRH W9, [X8 + 0x12E]
	0x031EC5A4 CBZ X9, 0x31EC5C8
	0x031EC5A8 LDR X10, [X8 + 0xB0]
	0x031EC5AC ADD X10, X10, 0x8
	0x031EC5B0 LDUR X11, [X10 - 0x8]
	0x031EC5B4 CMP X11, X1
	0x031EC5B8 B.EQ 0x31EC5D8
	0x031EC5BC SUBS X9, X9, 0x1
	0x031EC5C0 ADD X10, X10, 0x10
	0x031EC5C4 B.NE 0x31EC5B0
	0x031EC5C8 MOV X0, X20
	0x031EC5CC MOV W2, W31
	0x031EC5D0 BL 0x1C5C788
	0x031EC5D4 B 0x31EC5E4
	0x031EC5D8 LDRSW X9, [X10]
	0x031EC5DC ADD X8, X8, X9, 0x4, LSL
	0x031EC5E0 ADD X0, X8, 0x138
	0x031EC5E4 LDP X8, X1, [X0]
	0x031EC5E8 MOV X0, X20
	0x031EC5EC BLR X8
	0x031EC5F0 TBZ X0, 0x0, 0x31EC908
	0x031EC5F4 LDR X8, [X20]
	0x031EC5F8 LDR X1, [X26]
	0x031EC5FC LDRH W9, [X8 + 0x12E]
	0x031EC600 CBZ X9, 0x31EC624
	0x031EC604 LDR X10, [X8 + 0xB0]
	0x031EC608 ADD X10, X10, 0x8
	0x031EC60C LDUR X11, [X10 - 0x8]
	0x031EC610 CMP X11, X1
	0x031EC614 B.EQ 0x31EC634
	0x031EC618 SUBS X9, X9, 0x1
	0x031EC61C ADD X10, X10, 0x10
	0x031EC620 B.NE 0x31EC60C
	0x031EC624 MOVZ W2, 0x1
	0x031EC628 MOV X0, X20
	0x031EC62C BL 0x1C5C788
	0x031EC630 B 0x31EC644
	0x031EC634 LDR W9, [X10]
	0x031EC638 ADD W9, W9, 0x1
	0x031EC63C ADD X8, X8, W9, 0x4, SXTW
	0x031EC640 ADD X0, X8, 0x138
	0x031EC644 LDP X8, X1, [X0]
	0x031EC648 MOV X0, X20
	0x031EC64C BLR X8
	0x031EC650 MOV X21, X0
	0x031EC654 CBZ X0, 0x31EC9CC
	0x031EC658 LDR X8, [X21]
	0x031EC65C LDR X1, [X27]
	0x031EC660 LDRB W10, [X8 + 0x130]
	0x031EC664 LDRB W9, [X1 + 0x130]
	0x031EC668 CMP W10, W9
	0x031EC66C B.CC 0x31EC9C4
	0x031EC670 LDR X8, [X8 + 0xC8]
	0x031EC674 ADD X8, X8, X9, 0x3, LSL
	0x031EC678 LDUR X8, [X8 - 0x8]
	0x031EC67C CMP X8, X1
	0x031EC680 B.NE 0x31EC9C4
	0x031EC684 LDR X0, [X21 + 0x10]
	0x031EC688 CBZ X0, 0x31EC9D0
	0x031EC68C LDR X1, [X28]
	0x031EC690 MOV X2, X31
	0x031EC694 BL 0x322693C
	0x031EC698 TBZ X0, 0x0, 0x31EC734
	0x031EC69C LDR X0, [X21 + 0x18]
	0x031EC6A0 CBZ X0, 0x31EC9E8
	0x031EC6A4 MOVZ W1, 0x1
	0x031EC6A8 BL 0x31E8704
	0x031EC6AC CBZ X0, 0x31EC9DC
	0x031EC6B0 BL 0x31E7D00
	0x031EC6B4 MOV X22, X0
	0x031EC6B8 LDR X0, [X29]
	0x031EC6BC BL 0x1C16F10
	0x031EC6C0 MOV X21, X0
	0x031EC6C4 MOV X1, X22
	0x031EC6C8 MOV X2, X31
	0x031EC6CC BL 0x3200240
	0x031EC6D0 CBZ X21, 0x31EC9E4
	0x031EC6D4 MOV X0, X21
	0x031EC6D8 MOV X1, X31
	0x031EC6DC BL 0x32004C8
	0x031EC6E0 MOV X21, X0
	0x031EC6E4 CBZ X0, 0x31EC9D4
	0x031EC6E8 LDR W8, [X21 + 0x18]
	0x031EC6EC CBZ W8, 0x31EC9D8
	0x031EC6F0 LDRB W8, [X21 + 0x20]
	0x031EC6F4 CMP W8, 0x2
	0x031EC6F8 B.EQ 0x31EC848
	0x031EC6FC CMP W8, 0x30
	0x031EC700 B.NE 0x31EC884
	0x031EC704 LDR X22, [X19 + 0x18]
	0x031EC708 MOV X0, X21
	0x031EC70C MOV X1, X31
	0x031EC710 BL 0x3200678
	0x031EC714 MOV X1, X0
	0x031EC718 CBZ X22, 0x31ECA08
	0x031EC71C LDR X8, [X22]
	0x031EC720 LDR X9, [X8 + 0x308]
	0x031EC724 LDR X2, [X8 + 0x310]
	0x031EC728 MOV X0, X22
	0x031EC72C BLR X9
	0x031EC730 B 0x31EC884
	0x031EC734 LDR X0, [X21 + 0x10]
	0x031EC738 CBZ X0, 0x31EC9E0
	0x031EC73C LDR X1, [X25]
	0x031EC740 MOV X2, X31
	0x031EC744 BL 0x322693C
	0x031EC748 TBZ X0, 0x0, 0x31EC598
	0x031EC74C LDR X0, [X21 + 0x18]
	0x031EC750 CBZ X0, 0x31EC9EC
	0x031EC754 MOVZ W1, 0x1
	0x031EC758 BL 0x31E8704
	0x031EC75C CBZ X0, 0x31EC9F8
	0x031EC760 BL 0x31E7D00
	0x031EC764 ADRP X8, 0xF34000
	0x031EC768 LDR X8, [X8 + 0xDF8]
	0x031EC76C MOV X22, X0
	0x031EC770 LDR X0, [X8]
	0x031EC774 BL 0x1C16F10
	0x031EC778 MOV X21, X0
	0x031EC77C MOV X1, X22
	0x031EC780 MOV X2, X31
	0x031EC784 BL 0x3200ED4
	0x031EC788 CBZ X21, 0x31EC9FC
	0x031EC78C LDR X22, [X21 + 0x10]
	0x031EC790 MOV X0, X21
	0x031EC794 MOV X1, X31
	0x031EC798 BL 0x3201228
	0x031EC79C LDR W24, [X21 + 0x20]
	0x031EC7A0 MOV X23, X0
	0x031EC7A4 MOV X0, X21
	0x031EC7A8 MOV X1, X31
	0x031EC7AC BL 0x32011B4
	0x031EC7B0 MOV X4, X0
	0x031EC7B4 MOV X0, X19
	0x031EC7B8 MOV X1, X22
	0x031EC7BC MOV X2, X23
	0x031EC7C0 MOV W3, W24
	0x031EC7C4 BL 0x31ECBAC
	0x031EC7C8 MOV X21, X0
	0x031EC7CC LDR X0, [X29]
	0x031EC7D0 BL 0x1C16F10
	0x031EC7D4 MOV X22, X0
	0x031EC7D8 MOV X1, X21
	0x031EC7DC MOV X2, X31
	0x031EC7E0 BL 0x3200240
	0x031EC7E4 CBZ X22, 0x31EC9F0
	0x031EC7E8 MOV X0, X22
	0x031EC7EC MOV X1, X31
	0x031EC7F0 BL 0x32004C8
	0x031EC7F4 MOV X22, X0
	0x031EC7F8 CBZ X0, 0x31ECA00
	0x031EC7FC LDR W8, [X22 + 0x18]
	0x031EC800 CBZ W8, 0x31ECA04
	0x031EC804 LDRB W8, [X22 + 0x20]
	0x031EC808 CMP W8, 0x2
	0x031EC80C B.EQ 0x31EC89C
	0x031EC810 CMP W8, 0x30
	0x031EC814 B.NE 0x31EC8D8
	0x031EC818 LDR X23, [X19 + 0x18]
	0x031EC81C MOV X0, X22
	0x031EC820 MOV X1, X31
	0x031EC824 BL 0x3200678
	0x031EC828 MOV X1, X0
	0x031EC82C CBZ X23, 0x31ECA14
	0x031EC830 LDR X8, [X23]
	0x031EC834 LDR X9, [X8 + 0x308]
	0x031EC838 LDR X2, [X8 + 0x310]
	0x031EC83C MOV X0, X23
	0x031EC840 BLR X9
	0x031EC844 B 0x31EC8D8
	0x031EC848 LDR X22, [X19 + 0x18]
	0x031EC84C MOVI V0.2D, 0x0
	0x031EC850 STP V0, V0, [X31 + 0x60]
	0x031EC854 STP V0, V0, [X31 + 0x40]
	0x031EC858 ADD X1, X31, 0x40
	0x031EC85C MOV X0, X21
	0x031EC860 MOV X2, X31
	0x031EC864 BL 0x3200C34
	0x031EC868 MOV X1, X0
	0x031EC86C CBZ X22, 0x31ECA0C
	0x031EC870 LDR X8, [X22]
	0x031EC874 LDR X9, [X8 + 0x308]
	0x031EC878 LDR X2, [X8 + 0x310]
	0x031EC87C MOV X0, X22
	0x031EC880 BLR X9
	0x031EC884 LDR W2, [X21 + 0x18]
	0x031EC888 MOV X0, X21
	0x031EC88C MOV W1, W31
	0x031EC890 MOV X3, X31
	0x031EC894 BL 0x339FA34
	0x031EC898 B 0x31EC598
	0x031EC89C LDR X23, [X19 + 0x18]
	0x031EC8A0 MOVI V0.2D, 0x0
	0x031EC8A4 STP V0, V0, [X31 + 0x20]
	0x031EC8A8 STP V0, V0, [X31]
	0x031EC8AC ADD X1, X31, 0x0
	0x031EC8B0 MOV X0, X22
	0x031EC8B4 MOV X2, X31
	0x031EC8B8 BL 0x3200C34
	0x031EC8BC MOV X1, X0
	0x031EC8C0 CBZ X23, 0x31ECA10
	0x031EC8C4 LDR X8, [X23]
	0x031EC8C8 LDR X9, [X8 + 0x308]
	0x031EC8CC LDR X2, [X8 + 0x310]
	0x031EC8D0 MOV X0, X23
	0x031EC8D4 BLR X9
	0x031EC8D8 LDR W2, [X22 + 0x18]
	0x031EC8DC MOV X0, X22
	0x031EC8E0 MOV W1, W31
	0x031EC8E4 MOV X3, X31
	0x031EC8E8 BL 0x339FA34
	0x031EC8EC CBZ X21, 0x31EC9F4
	0x031EC8F0 LDR W2, [X21 + 0x18]
	0x031EC8F4 MOV X0, X21
	0x031EC8F8 MOV W1, W31
	0x031EC8FC MOV X3, X31
	0x031EC900 BL 0x339FA34
	0x031EC904 B 0x31EC598
	0x031EC908 ADRP X23, 0xF07000
	0x031EC90C LDR X23, [X23 + 0xE00]
	0x031EC910 MOV X21, X31
	0x031EC914 MOVZ W22, 0xC
	0x031EC918 LDR X1, [X23]
	0x031EC91C MOV X0, X20
	0x031EC920 BL 0x1C16E00
	0x031EC924 CBZ X0, 0x31EC984
	0x031EC928 LDR X8, [X0]
	0x031EC92C LDR X1, [X23]
	0x031EC930 MOV X20, X0
	0x031EC934 LDRH W9, [X8 + 0x12E]
	0x031EC938 CBZ X9, 0x31EC95C
	0x031EC93C LDR X10, [X8 + 0xB0]
	0x031EC940 ADD X10, X10, 0x8
	0x031EC944 LDUR X11, [X10 - 0x8]
	0x031EC948 CMP X11, X1
	0x031EC94C B.EQ 0x31EC96C
	0x031EC950 SUBS X9, X9, 0x1
	0x031EC954 ADD X10, X10, 0x10
	0x031EC958 B.NE 0x31EC944
	0x031EC95C MOV X0, X20
	0x031EC960 MOV W2, W31
	0x031EC964 BL 0x1C5C788
	0x031EC968 B 0x31EC978
	0x031EC96C LDRSW X9, [X10]
	0x031EC970 ADD X8, X8, X9, 0x4, LSL
	0x031EC974 ADD X0, X8, 0x138
	0x031EC978 LDP X8, X1, [X0]
	0x031EC97C MOV X0, X20
	0x031EC980 BLR X8
	0x031EC984 CBNZ X21, 0x31ECA20
	0x031EC988 CMP W22, 0xC
	0x031EC98C B.EQ 0x31EC994
	0x031EC990 CBNZ W22, 0x31EC9A4
	0x031EC994 STRB W31, [X19 + 0x30]
	0x031EC998 LDR X0, [X19 + 0x18]
	0x031EC99C MOV X1, X31
	0x031EC9A0 BL 0x33591C0
	0x031EC9A4 LDP X20, X19, [X31 + 0xD0]
	0x031EC9A8 LDP X22, X21, [X31 + 0xC0]
	0x031EC9AC LDP X24, X23, [X31 + 0xB0]
	0x031EC9B0 LDP X26, X25, [X31 + 0xA0]
	0x031EC9B4 LDP X28, X27, [X31 + 0x90]
	0x031EC9B8 LDP X29, X30, [X31 + 0x80]
	0x031EC9BC ADD X31, X31, 0xE0
	0x031EC9C0 RET
	0x031EC9C4 MOV X0, X21
	0x031EC9C8 BL 0x1C171E0
	0x031EC9CC BL 0x1C16F20
	0x031EC9D0 BL 0x1C16F20
	0x031EC9D4 BL 0x1C16F20
	0x031EC9D8 BL 0x1C16F28
	0x031EC9DC BL 0x1C16F20
	0x031EC9E0 BL 0x1C16F20
	0x031EC9E4 BL 0x1C16F20
	0x031EC9E8 BL 0x1C16F20
	0x031EC9EC BL 0x1C16F20
	0x031EC9F0 BL 0x1C16F20
	0x031EC9F4 BL 0x1C16F20
	0x031EC9F8 BL 0x1C16F20
	0x031EC9FC BL 0x1C16F20
	0x031ECA00 BL 0x1C16F20
	0x031ECA04 BL 0x1C16F28
	0x031ECA08 BL 0x1C16F20
	0x031ECA0C BL 0x1C16F20
	0x031ECA10 BL 0x1C16F20
	0x031ECA14 BL 0x1C16F20
	0x031ECA18 BL 0x1C16F20
	0x031ECA1C BL 0x1C16F20
	0x031ECA20 MOV X0, X21
	0x031ECA24 BL 0x1C16F18
	0x031ECA28 B 0x31ECAE4
	0x031ECA2C B 0x31ECAE4
	0x031ECA30 B 0x31ECAE4
	0x031ECA34 B 0x31ECAE4
	0x031ECA38 B 0x31ECAE4
	0x031ECA3C B 0x31ECAE4
	0x031ECA40 B 0x31ECAE4
	0x031ECA44 B 0x31ECAE4
	0x031ECA48 B 0x31ECAE4
	0x031ECA4C B 0x31ECAE4
	0x031ECA50 B 0x31ECAE4
	0x031ECA54 B 0x31ECAE4
	0x031ECA58 B 0x31ECAE4
	0x031ECA5C B 0x31ECAE4
	0x031ECA60 B 0x31ECAE4
	0x031ECA64 B 0x31ECAE4
	0x031ECA68 B 0x31ECAE4
	0x031ECA6C B 0x31ECAE4
	0x031ECA70 B 0x31ECAE4

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X21, 0x11F1000
	013 Move X25, 0xF35000
	014 Move W8, [X21+378]
	015 Move X25, [X25+2968]
	016 Move X20, X1
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {45}
	022 Move X0, 0xF35000
	023 Move X0, [X0+2968]
	024 Call 0x1C17CF4
	025 Move X0, 0xF08000
	026 Move X0, [X0+1560]
	027 Call 0x1C17CF4
	028 Move X0, 0xF35000
	029 Move X0, [X0+3184]
	030 Call 0x1C17CF4
	031 Move X0, 0xF35000
	032 Move X0, [X0+3440]
	033 Call 0x1C17CF4
	034 Move X0, 0xF35000
	035 Move X0, [X0+3448]
	036 Call 0x1C17CF4
	037 Move X0, 0xF35000
	038 Move X0, [X0+3336]
	039 Call 0x1C17CF4
	040 Move X0, 0xF35000
	041 Move X0, [X0+3456]
	042 Call 0x1C17CF4
	043 Move W8, 1
	044 Move [X21+378], W8
	045 Move X0, [X25]
	046 Call 0x1C17F10
	047 Move X1, X20
	048 Move X21, X0
	049 Call ASN1..ctor, X0, X1
	050 Compare X21, 0
	051 JumpIfEqual {352}
	052 Move W8, [X21+16]
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move X0, X21
	055 Move W1, W31
	056 Call ASN1.get_Item, X0, X1
	057 Compare X0, 0
	058 JumpIfEqual {352}
	059 Move W8, [X0+16]
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move X26, 0xF35000
	062 Move X26, [X26+3184]
	063 Move W1, 1
	064 Move X0, X21
	065 Call ASN1.get_Item, X0, X1
	066 Move X8, [X26]
	067 Move X22, X0
	068 Move X0, X8
	069 Call 0x1C17F10
	070 Move X1, X22
	071 Move X20, X0
	072 Call ContentInfo..ctor, X0, X1
	073 Compare X20, 0
	074 JumpIfEqual {352}
	075 Move X27, 0xF35000
	076 Move X27, [X27+3456]
	077 Move X0, [X20+16]
	078 Move X2, X31
	079 Move X1, [X27]
	080 Call String.op_Inequality, X0, X1
	081 Move TEMP, X0
	082 And TEMP, TEMP, 1
	083 Compare TEMP, 1
	084 JumpIfEqual {408}
	085 Move X0, [X21+32]
	086 Compare X0, 0
	087 JumpIfEqual {207}
	088 Move X8, [X0]
	089 Move X9, [X8+664]
	090 Move X1, [X8+672]
	091 NotImplemented "Instruction BLR not yet implemented."
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Move W1, 2
	094 Move X0, X21
	095 Call ASN1.get_Item, X0, X1
	096 Compare X0, 0
	097 JumpIfEqual {352}
	098 Move W8, [X0+16]
	099 Move X22, X0
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Move X0, X22
	102 Move W1, W31
	103 Call ASN1.get_Item, X0, X1
	104 Compare X0, 0
	105 JumpIfEqual {352}
	106 Move W8, [X0+16]
	107 NotImplemented "Instruction CMP not yet implemented."
	108 NotImplemented "Instruction CSEL not yet implemented."
	109 Compare X21, 0
	110 JumpIfEqual {352}
	111 Move X0, X21
	112 Move W1, W31
	113 Call ASN1.get_Item, X0, X1
	114 Compare X0, 0
	115 JumpIfEqual {352}
	116 Move W1, W31
	117 Call ASN1.get_Item, X0, X1
	118 Call ASN1Convert.ToOid, X0
	119 Move X8, 0xF35000
	120 Move X8, [X8+3336]
	121 Move X2, X31
	122 Move X1, [X8]
	123 Call String.op_Inequality, X0, X1
	124 Move TEMP, X0
	125 And TEMP, TEMP, 1
	126 Compare TEMP, 1
	127 JumpIfEqual {422}
	128 Move W1, 1
	129 Move X0, X21
	130 Call ASN1.get_Item, X0, X1
	131 Compare X0, 0
	132 JumpIfEqual {352}
	133 Call ASN1.get_Value, X0
	134 Move X21, X0
	135 Move W1, 1
	136 Move X0, X22
	137 Call ASN1.get_Item, X0, X1
	138 Compare X0, 0
	139 JumpIfEqual {352}
	140 Move W8, [X0+16]
	141 Move X23, X0
	142 NotImplemented "Instruction CMP not yet implemented."
	143 Move W8, 1
	144 Move [X19+52], W8
	145 Move X0, [X22+32]
	146 Compare X0, 0
	147 JumpIfEqual {162}
	148 Move X8, [X0]
	149 Move X9, [X8+664]
	150 Move X1, [X8+672]
	151 NotImplemented "Instruction BLR not yet implemented."
	152 NotImplemented "Instruction CMP not yet implemented."
	153 Move W1, 2
	154 Move X0, X22
	155 Call ASN1.get_Item, X0, X1
	156 Compare X0, 0
	157 JumpIfEqual {352}
	158 Move W8, [X0+16]
	159 NotImplemented "Instruction CMP not yet implemented."
	160 Call ASN1Convert.ToInt32, X0
	161 Move [X19+52], W0
	162 Move X0, [X20+24]
	163 Compare X0, 0
	164 JumpIfEqual {352}
	165 Move W1, W31
	166 Call ASN1.get_Item, X0, X1
	167 Compare X0, 0
	168 JumpIfEqual {352}
	169 Call ASN1.get_Value, X0
	170 Move X24, [X19+16]
	171 Move X22, X0
	172 Move X0, X23
	173 Call ASN1.get_Value, X0
	174 Move W3, [X19+52]
	175 Move X1, X24
	176 Move X2, X0
	177 Move X4, X22
	178 Call PKCS12.MAC, X0, X1, X2, X3, X4
	179 Move X1, X21
	180 Move X2, X0
	181 Call PKCS12.Compare, X0, X1, X2
	182 Move TEMP, X0
	183 And TEMP, TEMP, 1
	184 Compare TEMP, 1
	185 JumpIfEqual {207}
	186 Move X8, 0xF08000
	187 Move X8, [X8+1560]
	188 Move W1, 2
	189 Move X0, [X8]
	190 Call 0x1C17D6C
	191 Move X24, X0
	192 Move X0, X23
	193 Call ASN1.get_Value, X0
	194 Move W3, [X19+52]
	195 Move X1, X24
	196 Move X2, X0
	197 Move X4, X22
	198 Call PKCS12.MAC, X0, X1, X2, X3, X4
	199 Move X1, X21
	200 Move X2, X0
	201 Call PKCS12.Compare, X0, X1, X2
	202 Move TEMP, X0
	203 And TEMP, TEMP, 1
	204 Compare TEMP, 1
	205 JumpIfNotEqual {436}
	206 Move [X19+16], X24
	207 Move X0, [X20+24]
	208 Compare X0, 0
	209 JumpIfEqual {352}
	210 Move W1, W31
	211 Call ASN1.get_Item, X0, X1
	212 Compare X0, 0
	213 JumpIfEqual {352}
	214 Call ASN1.get_Value, X0
	215 Move X8, [X25]
	216 Move X21, X0
	217 Move X0, X8
	218 Call 0x1C17F10
	219 Move X1, X21
	220 Move X20, X0
	221 Call ASN1..ctor, X0, X1
	222 Compare X20, 0
	223 JumpIfEqual {352}
	224 Move X24, 0xF35000
	225 Move X28, 0xF35000
	226 Move X24, [X24+3448]
	227 Move X28, [X28+3440]
	228 Move W21, W31
	229 Move X0, [X20+32]
	230 Compare X0, 0
	231 JumpIfEqual {236}
	232 Move X8, [X0]
	233 Move X9, [X8+664]
	234 Move X1, [X8+672]
	235 NotImplemented "Instruction BLR not yet implemented."
	236 NotImplemented "Instruction CMP not yet implemented."
	237 Move X0, X20
	238 Move W1, W21
	239 Call ASN1.get_Item, X0, X1
	240 Move X8, [X26]
	241 Move X23, X0
	242 Move X0, X8
	243 Call 0x1C17F10
	244 Move X1, X23
	245 Move X22, X0
	246 Call ContentInfo..ctor, X0, X1
	247 Compare X22, 0
	248 JumpIfEqual {352}
	249 Move X23, [X22+16]
	250 Move X1, [X27]
	251 Move X2, X31
	252 Move X0, X23
	253 Call String.op_Equality, X0, X1
	254 Move TEMP, X0
	255 And TEMP, TEMP, 1
	256 Compare TEMP, 1
	257 JumpIfNotEqual {291}
	258 Move X0, [X22+24]
	259 Compare X0, 0
	260 JumpIfEqual {352}
	261 Move W1, W31
	262 Call ASN1.get_Item, X0, X1
	263 Compare X0, 0
	264 JumpIfEqual {352}
	265 Call ASN1.get_Value, X0
	266 Move X8, [X25]
	267 Move X23, X0
	268 Move X0, X8
	269 Call 0x1C17F10
	270 Move X1, X23
	271 Move X22, X0
	272 Call ASN1..ctor, X0, X1
	273 Compare X22, 0
	274 JumpIfEqual {352}
	275 Move W23, W31
	276 Move X0, [X22+32]
	277 Compare X0, 0
	278 JumpIfEqual {283}
	279 Move X8, [X0]
	280 Move X9, [X8+664]
	281 Move X1, [X8+672]
	282 NotImplemented "Instruction BLR not yet implemented."
	283 NotImplemented "Instruction CMP not yet implemented."
	284 Move X0, X22
	285 Move W1, W23
	286 Call ASN1.get_Item, X0, X1
	287 Move X1, X0
	288 Move X0, X19
	289 Call PKCS12.ReadSafeBag, X0, X1
	290 Add W23, W23, 1
	291 Move X1, [X24]
	292 Move X0, X23
	293 Move X2, X31
	294 Call String.op_Equality, X0, X1
	295 Move TEMP, X0
	296 And TEMP, TEMP, 1
	297 Compare TEMP, 1
	298 JumpIfNotEqual {353}
	299 Move X0, [X22+24]
	300 Compare X0, 0
	301 JumpIfEqual {352}
	302 Move W1, W31
	303 Call ASN1.get_Item, X0, X1
	304 Move X8, [X28]
	305 Move X22, X0
	306 Move X0, X8
	307 Call 0x1C17F10
	308 Move X1, X22
	309 Move X23, X0
	310 Call EncryptedData..ctor, X0, X1
	311 Move X0, X19
	312 Move X1, X23
	313 Call PKCS12.Decrypt, X0, X1
	314 Move X8, [X25]
	315 Move X23, X0
	316 Move X0, X8
	317 Call 0x1C17F10
	318 Move X1, X23
	319 Move X22, X0
	320 Call ASN1..ctor, X0, X1
	321 Compare X22, 0
	322 JumpIfEqual {352}
	323 Move W23, W31
	324 Move X0, [X22+32]
	325 Compare X0, 0
	326 JumpIfEqual {331}
	327 Move X8, [X0]
	328 Move X9, [X8+664]
	329 Move X1, [X8+672]
	330 NotImplemented "Instruction BLR not yet implemented."
	331 NotImplemented "Instruction CMP not yet implemented."
	332 Move X0, X22
	333 Move W1, W23
	334 Call ASN1.get_Item, X0, X1
	335 Move X1, X0
	336 Move X0, X19
	337 Call PKCS12.ReadSafeBag, X0, X1
	338 Add W23, W23, 1
	339 Add W21, W21, 1
	340 Move X20, [X31+80]
	341 Move X19, [X31+88]
	342 Move X22, [X31+64]
	343 Move X21, [X31+72]
	344 Move X24, [X31+48]
	345 Move X23, [X31+56]
	346 Move X26, [X31+32]
	347 Move X25, [X31+40]
	348 Move X28, [X31+16]
	349 Move X27, [X31+24]
	350 Move X30, [X31+96]
	351 Return 
	352 Call 0x1C17F20
	353 Move X0, 0xF35000
	354 Move X0, [X0+3464]
	355 Call 0x1C17D08
	356 Move X1, X0
	357 Move X0, X23
	358 Move X2, X31
	359 Call String.op_Equality, X0, X1
	360 Move TEMP, X0
	361 And TEMP, TEMP, 1
	362 Compare TEMP, 1
	363 JumpIfNotEqual {376}
	364 Move X0, 0xF11000
	365 Move X0, [X0+1880]
	366 Call 0x1C17D08
	367 Call 0x1C17F10
	368 Move X19, X0
	369 Move X0, 0xF35000
	370 Move X0, [X0+3472]
	371 Call 0x1C17D08
	372 Move X1, X0
	373 Move X0, X19
	374 Move X2, X31
	375 Call NotImplementedException..ctor, X0, X1
	376 Move X0, 0xF10000
	377 Move X0, [X0+1400]
	378 Call 0x1C17D08
	379 Call 0x1C17F10
	380 Move X19, X0
	381 Move X0, 0xF35000
	382 Move X0, [X0+3480]
	383 Call 0x1C17D08
	384 Move X1, X0
	385 Move X0, X19
	386 Move X2, X31
	387 Call ArgumentException..ctor, X0, X1
	388 Move X0, 0xF35000
	389 Move X0, [X0+3488]
	390 Call 0x1C17D08
	391 Move X1, X0
	392 Move X0, X19
	393 Call 0x1C17DEC
	394 Move X0, 0xF10000
	395 Move X0, [X0+1400]
	396 Call 0x1C17D08
	397 Call 0x1C17F10
	398 Move X19, X0
	399 Move X0, 0xF35000
	400 Move X0, [X0+3496]
	401 Move X0, 0xF10000
	402 Move X0, [X0+1400]
	403 Call 0x1C17D08
	404 Call 0x1C17F10
	405 Move X19, X0
	406 Move X0, 0xF35000
	407 Move X0, [X0+3504]
	408 Move X0, 0xF10000
	409 Move X0, [X0+1400]
	410 Call 0x1C17D08
	411 Call 0x1C17F10
	412 Move X19, X0
	413 Move X0, 0xF35000
	414 Move X0, [X0+3512]
	415 Move X0, 0xF10000
	416 Move X0, [X0+1400]
	417 Call 0x1C17D08
	418 Call 0x1C17F10
	419 Move X19, X0
	420 Move X0, 0xF35000
	421 Move X0, [X0+3520]
	422 Move X0, 0xF10000
	423 Move X0, [X0+1400]
	424 Call 0x1C17D08
	425 Call 0x1C17F10
	426 Move X19, X0
	427 Move X0, 0xF35000
	428 Move X0, [X0+3528]
	429 Move X0, 0xF10000
	430 Move X0, [X0+1400]
	431 Call 0x1C17D08
	432 Call 0x1C17F10
	433 Move X19, X0
	434 Move X0, 0xF35000
	435 Move X0, [X0+3536]
	436 Move X0, 0xF35000
	437 Move X0, [X0+3296]
	438 Call 0x1C17D08
	439 Call 0x1C17F10
	440 Move X19, X0
	441 Move X0, 0xF35000
	442 Move X0, [X0+3544]
	443 Call 0x1C17D08
	444 Move X1, X0
	445 Move X0, X19
	446 Move X2, X31
	447 Call CryptographicException..ctor, X0, X1
	448 Move X0, 0xF10000
	449 Move X0, [X0+1400]
	450 Call 0x1C17D08
	451 Call 0x1C17F10
	452 Move X19, X0
	453 Move X0, 0xF35000
	454 Move X0, [X0+3552]

Method: System.Void Finalize()

Disassembly:
	0x031ED3EC BL 0x321BA08
	0x031ED3F0 TBZ X0, 0x0, 0x31ED6FC
	0x031ED3F4 ADRP X8, 0xF33000
	0x031ED3F8 ADRP X9, 0xF33000
	0x031ED3FC LDR X8, [X8 + 0xEF8]
	0x031ED400 LDR X9, [X9 + 0xD48]
	0x031ED404 B 0x31ED620
	0x031ED408 MOVZ W8, 0xB5C6
	0x031ED40C MOVK W8, 0xADD20000
	0x031ED410 CMP W0, W8
	0x031ED414 B.EQ 0x31ED598
	0x031ED418 MOVZ W8, 0xB759
	0x031ED41C MOVK W8, 0xAED20000
	0x031ED420 CMP W0, W8
	0x031ED424 B.EQ 0x31ED5C0
	0x031ED428 MOVZ W8, 0xB8EC
	0x031ED42C MOVK W8, 0xAFD20000
	0x031ED430 CMP W0, W8
	0x031ED434 B.NE 0x31ED6FC
	0x031ED438 ADRP X8, 0xF33000
	0x031ED43C LDR X8, [X8 + 0xEE8]
	0x031ED440 MOV X0, X20
	0x031ED444 MOV X2, X31
	0x031ED448 LDR X1, [X8]
	0x031ED44C BL 0x321BA08
	0x031ED450 TBZ X0, 0x0, 0x31ED6FC
	0x031ED454 ADRP X8, 0xF33000
	0x031ED458 ADRP X9, 0xF33000
	0x031ED45C LDR X8, [X8 + 0xEB0]
	0x031ED460 LDR X9, [X9 + 0xD40]
	0x031ED464 MOV W23, W31
	0x031ED468 MOV W20, W31
	0x031ED46C MOVZ W21, 0x5
	0x031ED470 B 0x31ED668
	0x031ED474 MOVZ W8, 0x501E
	0x031ED478 MOVK W8, 0xD53B0000
	0x031ED47C CMP W0, W8
	0x031ED480 B.EQ 0x31ED5F4
	0x031ED484 MOVZ W8, 0x54D7
	0x031ED488 MOVK W8, 0xD83B0000
	0x031ED48C CMP W0, W8
	0x031ED490 B.EQ 0x31ED630
	0x031ED494 MOVZ W8, 0x57FD

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, X0
	006 Move X0, [X0+16]
	007 Compare X0, 0
	008 JumpIfEqual {13}
	009 Move W2, [X0+24]
	010 Move W1, W31
	011 Move X3, X31
	012 Call Array.Clear, X0, X1, X2
	013 Move [X19+16], X31
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X1, X31
	018 Move X30, [X31+32]
	019 Move X21, [X31+40]
	020 Call Object.Finalize, X0
	021 Return 
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move X21, X0
	024 Move X0, X21
	025 Call 0x3EB2AD0
	026 Move X20, [X0]
	027 Call 0x3EB2AE0
	028 Move X0, X19
	029 Move X1, X31
	030 Call Object.Finalize, X0
	031 Compare X20, 0
	032 JumpIfNotEqual {39}
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Move X21, [X31+40]
	037 Return 
	038 Move X20, X31
	039 Move X0, X20
	040 Call 0x1C17F18
	041 Move X21, X0
	042 Move X0, X19
	043 Move X1, X31
	044 Call Object.Finalize, X0
	045 Compare X20, 0
	046 JumpIfNotEqual {49}
	047 Move X0, X21
	048 Call 0x1D2D690
	049 Move X0, X20
	050 Call 0x1C17F18
	051 Call 0x1991590

Method: System.Void set_Password(System.String value)

Disassembly:
	0x031EC234 ADRP X0, 0xF34000
	0x031EC238 LDR X0, [X0 + 0xE58]
	0x031EC23C BL 0x1C16D08
	0x031EC240 MOV X1, X0
	0x031EC244 MOV X0, X19
	0x031EC248 MOV X2, X31
	0x031EC24C BL 0x3314A68
	0x031EC250 ADRP X0, 0xF34000
	0x031EC254 LDR X0, [X0 + 0xE60]
	0x031EC258 BL 0x1C16D08
	0x031EC25C MOV X1, X0
	0x031EC260 MOV X0, X19
	0x031EC264 BL 0x1C16DEC
	0x031EC268 ADRP X0, 0xF0F000
	0x031EC26C LDR X0, [X0 + 0x578]
	0x031EC270 BL 0x1C16D08
	0x031EC274 BL 0x1C16F10
	0x031EC278 MOV X19, X0
	0x031EC27C ADRP X0, 0xF34000
	0x031EC280 LDR X0, [X0 + 0xE68]
	0x031EC284 B 0x31EC23C
	0x031EC288 ADRP X0, 0xF0F000
	0x031EC28C LDR X0, [X0 + 0x578]
	0x031EC290 BL 0x1C16D08
	0x031EC294 BL 0x1C16F10
	0x031EC298 MOV X19, X0
	0x031EC29C ADRP X0, 0xF34000
	0x031EC2A0 LDR X0, [X0 + 0xE70]
	0x031EC2A4 B 0x31EC23C
	0x031EC2A8 ADRP X0, 0xF0F000
	0x031EC2AC LDR X0, [X0 + 0x578]
	0x031EC2B0 BL 0x1C16D08
	0x031EC2B4 BL 0x1C16F10
	0x031EC2B8 MOV X19, X0
	0x031EC2BC ADRP X0, 0xF34000
	0x031EC2C0 LDR X0, [X0 + 0xE78]
	0x031EC2C4 B 0x31EC23C
	0x031EC2C8 ADRP X0, 0xF0F000
	0x031EC2CC LDR X0, [X0 + 0x578]
	0x031EC2D0 BL 0x1C16D08
	0x031EC2D4 BL 0x1C16F10
	0x031EC2D8 MOV X19, X0
	0x031EC2DC ADRP X0, 0xF34000
	0x031EC2E0 LDR X0, [X0 + 0xE80]
	0x031EC2E4 B 0x31EC23C
	0x031EC2E8 ADRP X0, 0xF0F000
	0x031EC2EC LDR X0, [X0 + 0x578]
	0x031EC2F0 BL 0x1C16D08
	0x031EC2F4 BL 0x1C16F10
	0x031EC2F8 MOV X19, X0
	0x031EC2FC ADRP X0, 0xF34000
	0x031EC300 LDR X0, [X0 + 0xE88]
	0x031EC304 B 0x31EC23C
	0x031EC308 ADRP X0, 0xF07000
	0x031EC30C LDR X0, [X0 + 0xB40]
	0x031EC310 BL 0x1C16D08
	0x031EC314 BL 0x1C16F10
	0x031EC318 MOV X19, X0
	0x031EC31C ADRP X0, 0xF34000
	0x031EC320 LDR X0, [X0 + 0xE90]
	0x031EC324 BL 0x1C16D08
	0x031EC328 MOV X1, X0
	0x031EC32C MOV X0, X19
	0x031EC330 MOV X2, X31
	0x031EC334 BL 0x3379A44
	0x031EC338 B 0x31EC250
	0x031EC33C ADRP X0, 0xF0F000
	0x031EC340 LDR X0, [X0 + 0x578]
	0x031EC344 BL 0x1C16D08
	0x031EC348 BL 0x1C16F10
	0x031EC34C MOV X19, X0
	0x031EC350 ADRP X0, 0xF34000
	0x031EC354 LDR X0, [X0 + 0xE98]
	0x031EC358 B 0x31EC23C
	0x031EC35C STP X30, X23, [X31 - 0x30]!
	0x031EC360 STP X22, X21, [X31 + 0x10]
	0x031EC364 STP X20, X19, [X31 + 0x20]
	0x031EC368 CBZ X1, 0x31EC3E8
	0x031EC36C LDR X8, [X1 + 0x20]
	0x031EC370 MOV X20, X1
	0x031EC374 CBZ X8, 0x31EC3E8
	0x031EC378 MOV X19, X0
	0x031EC37C LDR X0, [X8 + 0x18]
	0x031EC380 CBZ X0, 0x31EC3E8
	0x031EC384 LDR X21, [X8 + 0x10]
	0x031EC388 MOV W1, W31
	0x031EC38C BL 0x31E8704
	0x031EC390 CBZ X0, 0x31EC3E8
	0x031EC394 BL 0x31E7D00
	0x031EC398 LDR X8, [X20 + 0x20]
	0x031EC39C CBZ X8, 0x31EC3E8
	0x031EC3A0 MOV X22, X0
	0x031EC3A4 LDR X0, [X8 + 0x18]
	0x031EC3A8 CBZ X0, 0x31EC3E8
	0x031EC3AC MOVZ W1, 0x1
	0x031EC3B0 BL 0x31E8704
	0x031EC3B4 BL 0x31E8F8C
	0x031EC3B8 MOV W23, W0
	0x031EC3BC MOV X0, X20
	0x031EC3C0 BL 0x31EA17C
	0x031EC3C4 MOV X4, X0
	0x031EC3C8 MOV X0, X19
	0x031EC3CC MOV X1, X21
	0x031EC3D0 MOV X2, X22
	0x031EC3D4 LDP X20, X19, [X31 + 0x20]
	0x031EC3D8 LDP X22, X21, [X31 + 0x10]
	0x031EC3DC MOV W3, W23
	0x031EC3E0 LDP X30, X23, [X31], #0x30
	0x031EC3E4 B 0x31ECBAC
	0x031EC3E8 BL 0x1C16F20
	0x031EC3EC STP X30, X21, [X31 - 0x20]!

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x11F1000
	009 Move W8, [X21+379]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xF08000
	017 Move X0, [X0+1560]
	018 Call 0x1C17CF4
	019 Move X0, 0xF35000
	020 Move X0, [X0+3432]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+379], W8
	024 Move X0, [X19+16]
	025 Compare X0, 0
	026 JumpIfEqual {31}
	027 Move W2, [X0+24]
	028 Move W1, W31
	029 Move X3, X31
	030 Call Array.Clear, X0, X1, X2
	031 Move [X19+16], X31
	032 Compare X20, 0
	033 JumpIfEqual {73}
	034 Move W21, [X20+16]
	035 Subtract W22, W21, 1
	036 Move X23, 0xF35000
	037 Move X23, [X23+3432]
	038 Move X0, [X23]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 Move X24, 0x11F1000
	044 Move W8, [X24+517]
	045 Compare W8, 0
	046 JumpIfNotEqual {52}
	047 Move X0, 0xF35000
	048 Move X0, [X0+3432]
	049 Call 0x1C17CF4
	050 Move W8, 1
	051 Move [X24+517], W8
	052 Move X0, [X23]
	053 Move W8, [X0+224]
	054 Compare W8, 0
	055 JumpIfNotEqual {58}
	056 Call 0x1C17DFC
	057 Move X0, [X23]
	058 Move X8, [X0+184]
	059 Move W8, [X8]
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move X0, X20
	062 Move W1, W22
	063 Move X2, X31
	064 Call String.get_Chars, X0, X1
	065 And W31, W0, 0xFFFF
	066 NotImplemented "Instruction CSET not yet implemented."
	067 Move X8, 0xF08000
	068 Move X8, [X8+1560]
	069 Move W1, 2
	070 Move X0, [X8]
	071 Call 0x1C17D6C
	072 Move [X19+16], X0
	073 Move X20, [X31+48]
	074 Move X19, [X31+56]
	075 Move X22, [X31+32]
	076 Move X21, [X31+40]
	077 Move X24, [X31+16]
	078 Move X23, [X31+24]
	079 Move X30, [X31+64]
	080 Return 
	081 Move W8, [X0+224]
	082 Compare W8, 0
	083 JumpIfNotEqual {85}
	084 Call 0x1C17DFC
	085 Move W8, [X24+517]
	086 Compare W8, 0
	087 JumpIfNotEqual {93}
	088 Move X0, 0xF35000
	089 Move X0, [X0+3432]
	090 Call 0x1C17CF4
	091 Move W8, 1
	092 Move [X24+517], W8
	093 Move X0, [X23]
	094 Move W8, [X0+224]
	095 Compare W8, 0
	096 JumpIfNotEqual {99}
	097 Call 0x1C17DFC
	098 Move X0, [X23]
	099 Move X8, [X0+184]
	100 Move W21, [X8]
	101 Move W8, W31
	102 Move X9, 0xF08000
	103 Move X9, [X9+1560]
	104 Add W8, W21, W8
	105 Move W1, W8
	106 ShiftRight W1, 31
	107 And W1, W1, 0x3FFFFFFF
	108 Move X0, [X9]
	109 Call 0x1C17D6C
	110 Move [X19+16], X0
	111 Move X0, X31
	112 Call Encoding.get_BigEndianUnicode
	113 Compare X0, 0
	114 JumpIfEqual {131}
	115 Move X8, [X0]
	116 Move X4, [X19+16]
	117 Move X1, X20
	118 Move W3, W21
	119 Move X7, [X8+632]
	120 Move X6, [X8+640]
	121 Move X20, [X31+48]
	122 Move X19, [X31+56]
	123 Move X22, [X31+32]
	124 Move X21, [X31+40]
	125 Move X24, [X31+16]
	126 Move X23, [X31+24]
	127 Move W2, W31
	128 Move W5, W31
	129 Move X30, [X31+64]
	130 CallNoReturn X7
	131 Call 0x1C17F20

Method: System.Int32 get_IterationCount()

Disassembly:
	0x031ED498 MOVK W8, 0xDA3B0000
	0x031ED49C CMP W0, W8

ISIL:
	001 Move W0, [X0+52]
	002 Return X0

Method: System.Void set_IterationCount(System.Int32 value)

Disassembly:
	0x031ED4A0 B.NE 0x31ED6FC
	0x031ED4A4 ADRP X8, 0xF33000

ISIL:
	001 Move [X0+52], W1
	002 Return 

Method: System.Collections.ArrayList get_Keys()

Disassembly:
	0x031ED4A8 LDR X8, [X8 + 0xF10]
	0x031ED4AC MOV X0, X20
	0x031ED4B0 MOV X2, X31
	0x031ED4B4 LDR X1, [X8]
	0x031ED4B8 BL 0x321BA08
	0x031ED4BC TBZ X0, 0x0, 0x31ED6FC
	0x031ED4C0 ADRP X8, 0xF33000
	0x031ED4C4 ADRP X9, 0xF33000
	0x031ED4C8 LDR X8, [X8 + 0xF18]
	0x031ED4CC LDR X9, [X9 + 0xD50]
	0x031ED4D0 B 0x31ED65C
	0x031ED4D4 ADRP X8, 0xF33000
	0x031ED4D8 LDR X8, [X8 + 0xF08]
	0x031ED4DC MOV X0, X20
	0x031ED4E0 MOV X2, X31
	0x031ED4E4 LDR X1, [X8]
	0x031ED4E8 BL 0x321BA08
	0x031ED4EC TBZ X0, 0x0, 0x31ED6FC
	0x031ED4F0 ADRP X8, 0xF33000
	0x031ED4F4 LDR X8, [X8 + 0xF18]
	0x031ED4F8 MOVZ W21, 0x5
	0x031ED4FC B 0x31ED5E8
	0x031ED500 ADRP X8, 0xF33000
	0x031ED504 LDR X8, [X8 + 0xEE0]
	0x031ED508 MOV X0, X20
	0x031ED50C MOV X2, X31
	0x031ED510 LDR X1, [X8]
	0x031ED514 BL 0x321BA08
	0x031ED518 TBZ X0, 0x0, 0x31ED6FC
	0x031ED51C ADRP X8, 0xF33000
	0x031ED520 ADRP X9, 0xF33000
	0x031ED524 LDR X8, [X8 + 0xEF8]
	0x031ED528 LDR X9, [X9 + 0xD40]
	0x031ED52C B 0x31ED620
	0x031ED530 ADRP X8, 0xF33000
	0x031ED534 LDR X8, [X8 + 0xEB8]
	0x031ED538 MOV X0, X20
	0x031ED53C MOV X2, X31
	0x031ED540 LDR X1, [X8]
	0x031ED544 BL 0x321BA08
	0x031ED548 TBZ X0, 0x0, 0x31ED6FC
	0x031ED54C ADRP X8, 0xF33000
	0x031ED550 LDR X8, [X8 + 0xEC0]
	0x031ED554 MOVZ W21, 0x18
	0x031ED558 B 0x31ED5E8
	0x031ED55C ADRP X8, 0xF33000
	0x031ED560 LDR X8, [X8 + 0xEF0]
	0x031ED564 MOV X0, X20
	0x031ED568 MOV X2, X31
	0x031ED56C LDR X1, [X8]
	0x031ED570 BL 0x321BA08
	0x031ED574 TBZ X0, 0x0, 0x31ED6FC
	0x031ED578 ADRP X8, 0xF33000
	0x031ED57C ADRP X9, 0xF33000
	0x031ED580 LDR X8, [X8 + 0xEB0]
	0x031ED584 LDR X9, [X9 + 0xD40]
	0x031ED588 MOV W23, W31
	0x031ED58C MOV W20, W31
	0x031ED590 MOVZ W21, 0x10
	0x031ED594 B 0x31ED668
	0x031ED598 ADRP X8, 0xF33000
	0x031ED59C LDR X8, [X8 + 0xEC8]
	0x031ED5A0 MOV X0, X20
	0x031ED5A4 MOV X2, X31
	0x031ED5A8 LDR X1, [X8]
	0x031ED5AC BL 0x321BA08
	0x031ED5B0 TBZ X0, 0x0, 0x31ED6FC
	0x031ED5B4 ADRP X8, 0xF33000
	0x031ED5B8 LDR X8, [X8 + 0xEC0]
	0x031ED5BC B 0x31ED5E4
	0x031ED5C0 ADRP X8, 0xF33000
	0x031ED5C4 LDR X8, [X8 + 0xED8]
	0x031ED5C8 MOV X0, X20
	0x031ED5CC MOV X2, X31
	0x031ED5D0 LDR X1, [X8]
	0x031ED5D4 BL 0x321BA08
	0x031ED5D8 TBZ X0, 0x0, 0x31ED6FC
	0x031ED5DC ADRP X8, 0xF33000
	0x031ED5E0 LDR X8, [X8 + 0xF18]
	0x031ED5E4 MOVZ W21, 0x10
	0x031ED5E8 ADRP X9, 0xF33000
	0x031ED5EC LDR X9, [X9 + 0xD40]
	0x031ED5F0 B 0x31ED660
	0x031ED5F4 ADRP X8, 0xF33000
	0x031ED5F8 LDR X8, [X8 + 0xF00]
	0x031ED5FC MOV X0, X20
	0x031ED600 MOV X2, X31
	0x031ED604 LDR X1, [X8]
	0x031ED608 BL 0x321BA08
	0x031ED60C TBZ X0, 0x0, 0x31ED6FC
	0x031ED610 ADRP X8, 0xF33000
	0x031ED614 ADRP X9, 0xF33000
	0x031ED618 LDR X8, [X8 + 0xEF8]
	0x031ED61C LDR X9, [X9 + 0xD50]
	0x031ED620 MOVZ W20, 0x8
	0x031ED624 MOVZ W23, 0x1
	0x031ED628 MOVZ W21, 0x8
	0x031ED62C B 0x31ED668
	0x031ED630 ADRP X8, 0xF33000
	0x031ED634 LDR X8, [X8 + 0xED0]
	0x031ED638 MOV X0, X20
	0x031ED63C MOV X2, X31
	0x031ED640 LDR X1, [X8]
	0x031ED644 BL 0x321BA08
	0x031ED648 TBZ X0, 0x0, 0x31ED6FC
	0x031ED64C ADRP X8, 0xF33000
	0x031ED650 ADRP X9, 0xF33000
	0x031ED654 LDR X8, [X8 + 0xF18]
	0x031ED658 LDR X9, [X9 + 0xD48]
	0x031ED65C MOVZ W21, 0x4
	0x031ED660 MOVZ W20, 0x8
	0x031ED664 MOVZ W23, 0x1
	0x031ED668 LDR X9, [X9]
	0x031ED66C MOV X1, X31
	0x031ED670 STR X9, [X19 + 0x10]
	0x031ED674 LDR X0, [X8]
	0x031ED678 BL 0x3261080
	0x031ED67C MOV X22, X0
	0x031ED680 MOV X0, X19
	0x031ED684 MOV W1, W21
	0x031ED688 BL 0x31ED8BC
	0x031ED68C CBZ X22, 0x31ED6F8
	0x031ED690 LDR X8, [X22]
	0x031ED694 MOV X1, X0
	0x031ED698 MOV X0, X22
	0x031ED69C LDP X9, X2, [X8 + 0x1F8]
	0x031ED6A0 BLR X9
	0x031ED6A4 CBZ W23, 0x31ED6E0
	0x031ED6A8 MOV X0, X19
	0x031ED6AC MOV W1, W20
	0x031ED6B0 BL 0x31ED92C
	0x031ED6B4 LDR X8, [X22]
	0x031ED6B8 MOV X1, X0
	0x031ED6BC MOV X0, X22
	0x031ED6C0 LDP X9, X2, [X8 + 0x1D8]
	0x031ED6C4 BLR X9
	0x031ED6C8 LDR X8, [X22]
	0x031ED6CC MOVZ W1, 0x1
	0x031ED6D0 MOV X0, X22
	0x031ED6D4 LDR X9, [X8 + 0x248]
	0x031ED6D8 LDR X2, [X8 + 0x250]
	0x031ED6DC BLR X9
	0x031ED6E0 MOV X0, X22
	0x031ED6E4 LDP X20, X19, [X31 + 0x30]
	0x031ED6E8 LDP X22, X21, [X31 + 0x20]
	0x031ED6EC LDP X24, X23, [X31 + 0x10]
	0x031ED6F0 LDR X30, [X31], #0x40
	0x031ED6F4 RET
	0x031ED6F8 BL 0x1C16F20
	0x031ED6FC ADRP X0, 0xF33000
	0x031ED700 LDR X0, [X0 + 0xF28]
	0x031ED704 BL 0x1C16D08
	0x031ED708 MOV X1, X31
	0x031ED70C MOV X2, X31
	0x031ED710 BL 0x321B938
	0x031ED714 MOV X19, X0
	0x031ED718 ADRP X0, 0xF06000
	0x031ED71C LDR X0, [X0 + 0xB40]
	0x031ED720 BL 0x1C16D08
	0x031ED724 BL 0x1C16F10
	0x031ED728 MOV X1, X19
	0x031ED72C MOV X2, X31
	0x031ED730 MOV X20, X0
	0x031ED734 BL 0x3379A44
	0x031ED738 ADRP X0, 0xF33000
	0x031ED73C LDR X0, [X0 + 0xF30]
	0x031ED740 BL 0x1C16D08
	0x031ED744 MOV X1, X0
	0x031ED748 MOV X0, X20
	0x031ED74C BL 0x1C16DEC
	0x031ED750 MOV X1, X31
	0x031ED754 B 0x33BDD8C
	0x031ED758 STR X30, [X31 - 0x30]!
	0x031ED75C STP X22, X21, [X31 + 0x10]
	0x031ED760 STP X20, X19, [X31 + 0x20]
	0x031ED764 ADRP X21, 0x11EF000
	0x031ED768 LDRB W8, [X21 + 0x18D]
	0x031ED76C MOV X20, X1
	0x031ED770 MOV X19, X0
	0x031ED774 TBNZ X8, 0x0, 0x31ED78C
	0x031ED778 ADRP X0, 0xF06000
	0x031ED77C LDR X0, [X0 + 0x618]
	0x031ED780 BL 0x1C16CF4
	0x031ED784 MOVZ W8, 0x1
	0x031ED788 STRB W8, [X21 + 0x18D]
	0x031ED78C ADRP X22, 0xF06000
	0x031ED790 LDR X22, [X22 + 0x618]
	0x031ED794 CBZ X20, 0x31ED7E0
	0x031ED798 MOV X0, X20
	0x031ED79C MOV X1, X31
	0x031ED7A0 BL 0x33A01F0
	0x031ED7A4 CBZ X0, 0x31ED7F4
	0x031ED7A8 LDR X21, [X22]
	0x031ED7AC MOV X20, X0
	0x031ED7B0 MOV X1, X21
	0x031ED7B4 BL 0x1C16E00
	0x031ED7B8 CBZ X0, 0x31ED808
	0x031ED7BC STR X0, [X19 + 0x20]
	0x031ED7C0 LDR X19, [X22]
	0x031ED7C4 MOV X0, X20
	0x031ED7C8 MOV X1, X19
	0x031ED7CC BL 0x1C16E00
	0x031ED7D0 CBNZ X0, 0x31ED7F8
	0x031ED7D4 MOV X0, X20
	0x031ED7D8 MOV X1, X19
	0x031ED7DC BL 0x1C171E0
	0x031ED7E0 LDR X0, [X22]
	0x031ED7E4 MOV W1, W31
	0x031ED7E8 BL 0x1C16D6C
	0x031ED7EC STR X0, [X19 + 0x20]
	0x031ED7F0 B 0x31ED7F8
	0x031ED7F4 STR X31, [X19 + 0x20]
	0x031ED7F8 LDP X20, X19, [X31 + 0x20]
	0x031ED7FC LDP X22, X21, [X31 + 0x10]
	0x031ED800 LDR X30, [X31], #0x30
	0x031ED804 RET
	0x031ED808 MOV X0, X20
	0x031ED80C MOV X1, X21
	0x031ED810 BL 0x1C171E0
	0x031ED814 STR X30, [X31 - 0x30]!
	0x031ED818 STP X22, X21, [X31 + 0x10]
	0x031ED81C STP X20, X19, [X31 + 0x20]
	0x031ED820 ADRP X21, 0x11EF000
	0x031ED824 LDRB W8, [X21 + 0x18E]
	0x031ED828 MOV X20, X1
	0x031ED82C MOV X19, X0
	0x031ED830 TBNZ X8, 0x0, 0x31ED848
	0x031ED834 ADRP X0, 0xF06000
	0x031ED838 LDR X0, [X0 + 0x618]
	0x031ED83C BL 0x1C16CF4
	0x031ED840 MOVZ W8, 0x1
	0x031ED844 STRB W8, [X21 + 0x18E]
	0x031ED848 CBZ X20, 0x31ED89C
	0x031ED84C MOV X0, X20
	0x031ED850 MOV X1, X31
	0x031ED854 BL 0x33A01F0
	0x031ED858 CBZ X0, 0x31ED89C
	0x031ED85C ADRP X22, 0xF06000
	0x031ED860 LDR X22, [X22 + 0x618]
	0x031ED864 MOV X20, X0
	0x031ED868 LDR X21, [X22]
	0x031ED86C MOV X1, X21
	0x031ED870 BL 0x1C16E00
	0x031ED874 CBZ X0, 0x31ED8B0
	0x031ED878 STR X0, [X19 + 0x28]
	0x031ED87C LDR X19, [X22]
	0x031ED880 MOV X0, X20
	0x031ED884 MOV X1, X19
	0x031ED888 BL 0x1C16E00
	0x031ED88C CBNZ X0, 0x31ED8A0
	0x031ED890 MOV X0, X20
	0x031ED894 MOV X1, X19
	0x031ED898 BL 0x1C171E0
	0x031ED89C STR X31, [X19 + 0x28]
	0x031ED8A0 LDP X20, X19, [X31 + 0x20]
	0x031ED8A4 LDP X22, X21, [X31 + 0x10]
	0x031ED8A8 LDR X30, [X31], #0x30
	0x031ED8AC RET
	0x031ED8B0 MOV X0, X20
	0x031ED8B4 MOV X1, X21
	0x031ED8B8 BL 0x1C171E0
	0x031ED8BC STR X30, [X31 - 0x30]!
	0x031ED8C0 STP X22, X21, [X31 + 0x10]
	0x031ED8C4 STP X20, X19, [X31 + 0x20]
	0x031ED8C8 ADRP X22, 0x11EF000
	0x031ED8CC ADRP X21, 0xF33000
	0x031ED8D0 LDRB W8, [X22 + 0x190]
	0x031ED8D4 LDR X21, [X21 + 0xDE8]
	0x031ED8D8 MOV W19, W1
	0x031ED8DC MOV X20, X0
	0x031ED8E0 TBNZ X8, 0x0, 0x31ED8F8
	0x031ED8E4 ADRP X0, 0xF33000
	0x031ED8E8 LDR X0, [X0 + 0xDE8]
	0x031ED8EC BL 0x1C16CF4
	0x031ED8F0 MOVZ W8, 0x1
	0x031ED8F4 STRB W8, [X22 + 0x190]
	0x031ED8F8 LDR X0, [X21]
	0x031ED8FC LDR W8, [X0 + 0xE0]
	0x031ED900 CBNZ W8, 0x31ED90C
	0x031ED904 BL 0x1C16DFC
	0x031ED908 LDR X0, [X21]
	0x031ED90C LDR X8, [X0 + 0xB8]
	0x031ED910 MOV X0, X20
	0x031ED914 MOV W2, W19
	0x031ED918 LDP X20, X19, [X31 + 0x20]
	0x031ED91C LDR X1, [X8]
	0x031ED920 LDP X22, X21, [X31 + 0x10]
	0x031ED924 LDR X30, [X31], #0x30
	0x031ED928 B 0x31F204C
	0x031ED92C STR X30, [X31 - 0x30]!
	0x031ED930 STP X22, X21, [X31 + 0x10]
	0x031ED934 STP X20, X19, [X31 + 0x20]
	0x031ED938 ADRP X22, 0x11EF000
	0x031ED93C ADRP X21, 0xF33000
	0x031ED940 LDRB W8, [X22 + 0x191]
	0x031ED944 LDR X21, [X21 + 0xDE8]
	0x031ED948 MOV W19, W1
	0x031ED94C MOV X20, X0
	0x031ED950 TBNZ X8, 0x0, 0x31ED968
	0x031ED954 ADRP X0, 0xF33000
	0x031ED958 LDR X0, [X0 + 0xDE8]
	0x031ED95C BL 0x1C16CF4
	0x031ED960 MOVZ W8, 0x1
	0x031ED964 STRB W8, [X22 + 0x191]
	0x031ED968 LDR X0, [X21]
	0x031ED96C LDR W8, [X0 + 0xE0]
	0x031ED970 CBNZ W8, 0x31ED97C
	0x031ED974 BL 0x1C16DFC
	0x031ED978 LDR X0, [X21]
	0x031ED97C LDR X8, [X0 + 0xB8]
	0x031ED980 MOV X0, X20
	0x031ED984 MOV W2, W19
	0x031ED988 LDP X20, X19, [X31 + 0x20]
	0x031ED98C LDR X1, [X8 + 0x8]
	0x031ED990 LDP X22, X21, [X31 + 0x10]
	0x031ED994 LDR X30, [X31], #0x30
	0x031ED998 B 0x31F204C
	0x031ED99C STR X30, [X31 - 0x40]!
	0x031ED9A0 STP X24, X23, [X31 + 0x10]
	0x031ED9A4 STP X22, X21, [X31 + 0x20]
	0x031ED9A8 STP X20, X19, [X31 + 0x30]
	0x031ED9AC ADRP X24, 0x11EF000
	0x031ED9B0 LDRB W8, [X24 + 0x180]
	0x031ED9B4 MOV X20, X4
	0x031ED9B8 MOV W19, W3
	0x031ED9BC MOV X21, X2
	0x031ED9C0 MOV X22, X1
	0x031ED9C4 MOV X23, X0
	0x031ED9C8 TBNZ X8, 0x0, 0x31ED9EC
	0x031ED9CC ADRP X0, 0xF33000
	0x031ED9D0 LDR X0, [X0 + 0xEA0]
	0x031ED9D4 BL 0x1C16CF4
	0x031ED9D8 ADRP X0, 0xF06000
	0x031ED9DC LDR X0, [X0 + 0xE00]
	0x031ED9E0 BL 0x1C16CF4
	0x031ED9E4 MOVZ W8, 0x1
	0x031ED9E8 STRB W8, [X24 + 0x180]
	0x031ED9EC ADRP X24, 0xF06000
	0x031ED9F0 LDR X24, [X24 + 0xE00]
	0x031ED9F4 MOV X0, X23
	0x031ED9F8 MOV X1, X22
	0x031ED9FC MOV X2, X21
	0x031EDA00 MOV W3, W19
	0x031EDA04 BL 0x31ED1BC
	0x031EDA08 MOV X19, X0
	0x031EDA0C CBZ X0, 0x31EDB24
	0x031EDA10 LDR X8, [X19]
	0x031EDA14 LDR X1, [X8 + 0x280]
	0x031EDA18 LDR X9, [X8 + 0x278]
	0x031EDA1C MOV X0, X19
	0x031EDA20 BLR X9
	0x031EDA24 CBZ X20, 0x31EDB30
	0x031EDA28 MOV X21, X0
	0x031EDA2C CBZ X0, 0x31EDB34
	0x031EDA30 ADRP X9, 0xF33000
	0x031EDA34 LDR X8, [X21]
	0x031EDA38 LDR X9, [X9 + 0xEA0]
	0x031EDA3C LDR W22, [X20 + 0x18]
	0x031EDA40 LDR X1, [X9]
	0x031EDA44 LDRH W9, [X8 + 0x12E]
	0x031EDA48 CBZ X9, 0x31EDA6C
	0x031EDA4C LDR X10, [X8 + 0xB0]
	0x031EDA50 ADD X10, X10, 0x8
	0x031EDA54 LDUR X11, [X10 - 0x8]
	0x031EDA58 CMP X11, X1
	0x031EDA5C B.EQ 0x31EDA7C
	0x031EDA60 SUBS X9, X9, 0x1
	0x031EDA64 ADD X10, X10, 0x10
	0x031EDA68 B.NE 0x31EDA54
	0x031EDA6C MOVZ W2, 0x4
	0x031EDA70 MOV X0, X21
	0x031EDA74 BL 0x1C5C788
	0x031EDA78 B 0x31EDA8C
	0x031EDA7C LDR W9, [X10]
	0x031EDA80 ADD W9, W9, 0x4
	0x031EDA84 ADD X8, X8, W9, 0x4, SXTW
	0x031EDA88 ADD X0, X8, 0x138
	0x031EDA8C LDP X8, X4, [X0]
	0x031EDA90 MOV X0, X21
	0x031EDA94 MOV X1, X20
	0x031EDA98 MOV W2, W31
	0x031EDA9C MOV W3, W22
	0x031EDAA0 BLR X8
	0x031EDAA4 MOV X21, X0
	0x031EDAA8 MOV X20, X31
	0x031EDAAC CBZ X19, 0x31EDB08
	0x031EDAB0 LDR X8, [X19]
	0x031EDAB4 LDR X1, [X24]
	0x031EDAB8 LDRH W9, [X8 + 0x12E]
	0x031EDABC CBZ X9, 0x31EDAE0
	0x031EDAC0 LDR X10, [X8 + 0xB0]
	0x031EDAC4 ADD X10, X10, 0x8
	0x031EDAC8 LDUR X11, [X10 - 0x8]
	0x031EDACC CMP X11, X1
	0x031EDAD0 B.EQ 0x31EDAF0
	0x031EDAD4 SUBS X9, X9, 0x1
	0x031EDAD8 ADD X10, X10, 0x10
	0x031EDADC B.NE 0x31EDAC8
	0x031EDAE0 MOV X0, X19
	0x031EDAE4 MOV W2, W31
	0x031EDAE8 BL 0x1C5C788
	0x031EDAEC B 0x31EDAFC
	0x031EDAF0 LDRSW X9, [X10]
	0x031EDAF4 ADD X8, X8, X9, 0x4, LSL
	0x031EDAF8 ADD X0, X8, 0x138
	0x031EDAFC LDP X8, X1, [X0]
	0x031EDB00 MOV X0, X19
	0x031EDB04 BLR X8
	0x031EDB08 CBNZ X20, 0x31EDB28
	0x031EDB0C MOV X0, X21
	0x031EDB10 LDP X20, X19, [X31 + 0x30]
	0x031EDB14 LDP X22, X21, [X31 + 0x20]
	0x031EDB18 LDP X24, X23, [X31 + 0x10]
	0x031EDB1C LDR X30, [X31], #0x40
	0x031EDB20 RET
	0x031EDB24 BL 0x1C16F20
	0x031EDB28 MOV X0, X20
	0x031EDB2C BL 0x1C16F18
	0x031EDB30 BL 0x1C16F20
	0x031EDB34 BL 0x1C16F20
	0x031EDB38 B 0x31EDB44
	0x031EDB3C B 0x31EDB44
	0x031EDB40 B 0x31EDB44
	0x031EDB44 MOV X21, X0
	0x031EDB48 CMP W1, 0x1
	0x031EDB4C B.NE 0x31EDB6C
	0x031EDB50 MOV X0, X21
	0x031EDB54 BL 0x3EB1AD0
	0x031EDB58 LDR X20, [X0]
	0x031EDB5C BL 0x3EB1AE0
	0x031EDB60 MOV X21, X31
	0x031EDB64 CBNZ X19, 0x31EDAB0
	0x031EDB68 B 0x31EDB08
	0x031EDB6C MOV X20, X31
	0x031EDB70 B 0x31EDB78
	0x031EDB74 MOV X21, X0
	0x031EDB78 CBZ X19, 0x31EDBD4
	0x031EDB7C LDR X8, [X19]
	0x031EDB80 LDR X1, [X24]
	0x031EDB84 LDRH W9, [X8 + 0x12E]
	0x031EDB88 CBZ X9, 0x31EDBAC
	0x031EDB8C LDR X10, [X8 + 0xB0]
	0x031EDB90 ADD X10, X10, 0x8
	0x031EDB94 LDUR X11, [X10 - 0x8]
	0x031EDB98 CMP X11, X1
	0x031EDB9C B.EQ 0x31EDBBC
	0x031EDBA0 SUBS X9, X9, 0x1
	0x031EDBA4 ADD X10, X10, 0x10
	0x031EDBA8 B.NE 0x31EDB94

ISIL:
	001 Subtract X31, X31, 224
	002 Move [X31+128], X29
	003 Move [X31+136], X30
	004 Move [X31+144], X28
	005 Move [X31+152], X27
	006 Move [X31+160], X26
	007 Move [X31+168], X25
	008 Move [X31+176], X24
	009 Move [X31+184], X23
	010 Move [X31+192], X22
	011 Move [X31+200], X21
	012 Move [X31+208], X20
	013 Move [X31+216], X19
	014 Move X20, 0x11F0000
	015 Move W8, [X20+380]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {44}
	021 Move X0, 0xF34000
	022 Move X0, [X0+3576]
	023 Call 0x1C17CF4
	024 Move X0, 0xF07000
	025 Move X0, [X0+3584]
	026 Call 0x1C17CF4
	027 Move X0, 0xF07000
	028 Move X0, [X0+3608]
	029 Call 0x1C17CF4
	030 Move X0, 0xF34000
	031 Move X0, [X0+3584]
	032 Call 0x1C17CF4
	033 Move X0, 0xF34000
	034 Move X0, [X0+3592]
	035 Call 0x1C17CF4
	036 Move X0, 0xF34000
	037 Move X0, [X0+3608]
	038 Call 0x1C17CF4
	039 Move X0, 0xF34000
	040 Move X0, [X0+3632]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X20+380], W8
	044 Move W8, [X19+48]
	045 Compare W8, 0
	046 JumpIfEqual {351}
	047 Move X0, [X19+24]
	048 Compare X0, 0
	049 JumpIfEqual {389}
	050 Move X8, [X0]
	051 Move X9, [X8+808]
	052 Move X1, [X8+816]
	053 NotImplemented "Instruction BLR not yet implemented."
	054 Move X0, [X19+56]
	055 Compare X0, 0
	056 JumpIfEqual {389}
	057 Move X8, [X0]
	058 Move X9, [X8+904]
	059 Move X1, [X8+912]
	060 NotImplemented "Instruction BLR not yet implemented."
	061 Move X20, X0
	062 Compare X0, 0
	063 JumpIfEqual {390}
	064 Move X26, 0xF07000
	065 Move X27, 0xF34000
	066 Move X28, 0xF34000
	067 Move X29, 0xF34000
	068 Move X25, 0xF34000
	069 Move X26, [X26+3608]
	070 Move X27, [X27+3592]
	071 Move X28, [X28+3608]
	072 Move X29, [X29+3584]
	073 Move X25, [X25+3632]
	074 Move X8, [X20]
	075 Move X1, [X26]
	076 NotImplemented "Instruction LDRH not yet implemented."
	077 Compare X9, 0
	078 JumpIfEqual {85}
	079 Move X10, [X8+176]
	080 Add X10, X10, 8
	081 NotImplemented "Instruction LDUR not yet implemented."
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Subtract X9, X9, 1
	084 Add X10, X10, 16
	085 Move X0, X20
	086 Move W2, W31
	087 Call 0x1C5D788
	088 NotImplemented "Instruction LDRSW not yet implemented."
	089 Add X8, X8, X9
	090 Add X0, X8, 312
	091 Move X8, [X0]
	092 Move X1, [X0+8]
	093 Move X0, X20
	094 NotImplemented "Instruction BLR not yet implemented."
	095 Move TEMP, X0
	096 And TEMP, TEMP, 1
	097 Compare TEMP, 1
	098 JumpIfNotEqual {314}
	099 Move X8, [X20]
	100 Move X1, [X26]
	101 NotImplemented "Instruction LDRH not yet implemented."
	102 Compare X9, 0
	103 JumpIfEqual {110}
	104 Move X10, [X8+176]
	105 Add X10, X10, 8
	106 NotImplemented "Instruction LDUR not yet implemented."
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Subtract X9, X9, 1
	109 Add X10, X10, 16
	110 Move W2, 1
	111 Move X0, X20
	112 Call 0x1C5D788
	113 Move W9, [X10]
	114 Add W9, W9, 1
	115 Add X8, X8, W9
	116 Add X0, X8, 312
	117 Move X8, [X0]
	118 Move X1, [X0+8]
	119 Move X0, X20
	120 NotImplemented "Instruction BLR not yet implemented."
	121 Move X21, X0
	122 Compare X0, 0
	123 JumpIfEqual {370}
	124 Move X8, [X21]
	125 Move X1, [X27]
	126 Move W10, [X8+304]
	127 Move W9, [X1+304]
	128 NotImplemented "Instruction CMP not yet implemented."
	129 Move X8, [X8+200]
	130 Add X8, X8, X9
	131 NotImplemented "Instruction LDUR not yet implemented."
	132 NotImplemented "Instruction CMP not yet implemented."
	133 Move X0, [X21+16]
	134 Compare X0, 0
	135 JumpIfEqual {371}
	136 Move X1, [X28]
	137 Move X2, X31
	138 Call String.Equals, X0, X1
	139 Move TEMP, X0
	140 And TEMP, TEMP, 1
	141 Compare TEMP, 1
	142 JumpIfNotEqual {184}
	143 Move X0, [X21+24]
	144 Compare X0, 0
	145 JumpIfEqual {377}
	146 Move W1, 1
	147 Call ASN1.get_Item, X0, X1
	148 Compare X0, 0
	149 JumpIfEqual {374}
	150 Call ASN1.get_Value, X0
	151 Move X22, X0
	152 Move X0, [X29]
	153 Call 0x1C17F10
	154 Move X21, X0
	155 Move X1, X22
	156 Move X2, X31
	157 Call PrivateKeyInfo..ctor, X0, X1
	158 Compare X21, 0
	159 JumpIfEqual {376}
	160 Move X0, X21
	161 Move X1, X31
	162 Call PrivateKeyInfo.get_PrivateKey, X0
	163 Move X21, X0
	164 Compare X0, 0
	165 JumpIfEqual {372}
	166 Move W8, [X21+24]
	167 Compare W8, 0
	168 JumpIfEqual {373}
	169 Move W8, [X21+32]
	170 NotImplemented "Instruction CMP not yet implemented."
	171 NotImplemented "Instruction CMP not yet implemented."
	172 Move X22, [X19+24]
	173 Move X0, X21
	174 Move X1, X31
	175 Call PrivateKeyInfo.DecodeRSA, X0
	176 Move X1, X0
	177 Compare X22, 0
	178 JumpIfEqual {385}
	179 Move X8, [X22]
	180 Move X9, [X8+776]
	181 Move X2, [X8+784]
	182 Move X0, X22
	183 NotImplemented "Instruction BLR not yet implemented."
	184 Move X0, [X21+16]
	185 Compare X0, 0
	186 JumpIfEqual {375}
	187 Move X1, [X25]
	188 Move X2, X31
	189 Call String.Equals, X0, X1
	190 Move TEMP, X0
	191 And TEMP, TEMP, 1
	192 Compare TEMP, 1
	193 JumpIfNotEqual {74}
	194 Move X0, [X21+24]
	195 Compare X0, 0
	196 JumpIfEqual {378}
	197 Move W1, 1
	198 Call ASN1.get_Item, X0, X1
	199 Compare X0, 0
	200 JumpIfEqual {381}
	201 Call ASN1.get_Value, X0
	202 Move X8, 0xF34000
	203 Move X8, [X8+3576]
	204 Move X22, X0
	205 Move X0, [X8]
	206 Call 0x1C17F10
	207 Move X21, X0
	208 Move X1, X22
	209 Move X2, X31
	210 Call EncryptedPrivateKeyInfo..ctor, X0, X1
	211 Compare X21, 0
	212 JumpIfEqual {382}
	213 Move X22, [X21+16]
	214 Move X0, X21
	215 Move X1, X31
	216 Call EncryptedPrivateKeyInfo.get_Salt, X0
	217 Move W24, [X21+32]
	218 Move X23, X0
	219 Move X0, X21
	220 Move X1, X31
	221 Call EncryptedPrivateKeyInfo.get_EncryptedData, X0
	222 Move X4, X0
	223 Move X0, X19
	224 Move X1, X22
	225 Move X2, X23
	226 Move W3, W24
	227 Call PKCS12.Decrypt, X0, X1, X2, X3, X4
	228 Move X21, X0
	229 Move X0, [X29]
	230 Call 0x1C17F10
	231 Move X22, X0
	232 Move X1, X21
	233 Move X2, X31
	234 Call PrivateKeyInfo..ctor, X0, X1
	235 Compare X22, 0
	236 JumpIfEqual {379}
	237 Move X0, X22
	238 Move X1, X31
	239 Call PrivateKeyInfo.get_PrivateKey, X0
	240 Move X22, X0
	241 Compare X0, 0
	242 JumpIfEqual {383}
	243 Move W8, [X22+24]
	244 Compare W8, 0
	245 JumpIfEqual {384}
	246 Move W8, [X22+32]
	247 NotImplemented "Instruction CMP not yet implemented."
	248 NotImplemented "Instruction CMP not yet implemented."
	249 Move X23, [X19+24]
	250 Move X0, X22
	251 Move X1, X31
	252 Call PrivateKeyInfo.DecodeRSA, X0
	253 Move X1, X0
	254 Compare X23, 0
	255 JumpIfEqual {388}
	256 Move X8, [X23]
	257 Move X9, [X8+776]
	258 Move X2, [X8+784]
	259 Move X0, X23
	260 NotImplemented "Instruction BLR not yet implemented."
	261 Move X22, [X19+24]
	262 NotImplemented "Instruction MOVI not yet implemented."
	263 Move [X31+96], V0
	264 Move [X31+104], V0
	265 Move [X31+64], V0
	266 Move [X31+72], V0
	267 Add X1, X31, 64
	268 Move X0, X21
	269 Move X2, X31
	270 Call PrivateKeyInfo.DecodeDSA, X0, X1
	271 Move X1, X0
	272 Compare X22, 0
	273 JumpIfEqual {386}
	274 Move X8, [X22]
	275 Move X9, [X8+776]
	276 Move X2, [X8+784]
	277 Move X0, X22
	278 NotImplemented "Instruction BLR not yet implemented."
	279 Move W2, [X21+24]
	280 Move X0, X21
	281 Move W1, W31
	282 Move X3, X31
	283 Call Array.Clear, X0, X1, X2
	284 Move X23, [X19+24]
	285 NotImplemented "Instruction MOVI not yet implemented."
	286 Move [X31+32], V0
	287 Move [X31+40], V0
	288 Move [X31], V0
	289 Move [X31+8], V0
	290 Add X1, X31, 0
	291 Move X0, X22
	292 Move X2, X31
	293 Call PrivateKeyInfo.DecodeDSA, X0, X1
	294 Move X1, X0
	295 Compare X23, 0
	296 JumpIfEqual {387}
	297 Move X8, [X23]
	298 Move X9, [X8+776]
	299 Move X2, [X8+784]
	300 Move X0, X23
	301 NotImplemented "Instruction BLR not yet implemented."
	302 Move W2, [X22+24]
	303 Move X0, X22
	304 Move W1, W31
	305 Move X3, X31
	306 Call Array.Clear, X0, X1, X2
	307 Compare X21, 0
	308 JumpIfEqual {380}
	309 Move W2, [X21+24]
	310 Move X0, X21
	311 Move W1, W31
	312 Move X3, X31
	313 Call Array.Clear, X0, X1, X2
	314 Move X23, 0xF07000
	315 Move X23, [X23+3584]
	316 Move X21, X31
	317 Move W22, 12
	318 Move X1, [X23]
	319 Move X0, X20
	320 Call 0x1C17E00
	321 Compare X0, 0
	322 JumpIfEqual {345}
	323 Move X8, [X0]
	324 Move X1, [X23]
	325 Move X20, X0
	326 NotImplemented "Instruction LDRH not yet implemented."
	327 Compare X9, 0
	328 JumpIfEqual {335}
	329 Move X10, [X8+176]
	330 Add X10, X10, 8
	331 NotImplemented "Instruction LDUR not yet implemented."
	332 NotImplemented "Instruction CMP not yet implemented."
	333 Subtract X9, X9, 1
	334 Add X10, X10, 16
	335 Move X0, X20
	336 Move W2, W31
	337 Call 0x1C5D788
	338 NotImplemented "Instruction LDRSW not yet implemented."
	339 Add X8, X8, X9
	340 Add X0, X8, 312
	341 Move X8, [X0]
	342 Move X1, [X0+8]
	343 Move X0, X20
	344 NotImplemented "Instruction BLR not yet implemented."
	345 Compare X21, 0
	346 JumpIfNotEqual {391}
	347 NotImplemented "Instruction CMP not yet implemented."
	348 Compare W22, 0
	349 JumpIfNotEqual {354}
	350 Move [X19+48], W31
	351 Move X0, [X19+24]
	352 Move X1, X31
	353 Call ArrayList.ReadOnly, X0
	354 Move X20, [X31+208]
	355 Move X19, [X31+216]
	356 Move X22, [X31+192]
	357 Move X21, [X31+200]
	358 Move X24, [X31+176]
	359 Move X23, [X31+184]
	360 Move X26, [X31+160]
	361 Move X25, [X31+168]
	362 Move X28, [X31+144]
	363 Move X27, [X31+152]
	364 Move X29, [X31+128]
	365 Move X30, [X31+136]
	366 Add X31, X31, 224
	367 Return X0
	368 Move X0, X21
	369 Call 0x1C181E0
	370 Call 0x1C17F20
	371 Call 0x1C17F20
	372 Call 0x1C17F20
	373 Call 0x1C17F28
	374 Call 0x1C17F20
	375 Call 0x1C17F20
	376 Call 0x1C17F20
	377 Call 0x1C17F20
	378 Call 0x1C17F20
	379 Call 0x1C17F20
	380 Call 0x1C17F20
	381 Call 0x1C17F20
	382 Call 0x1C17F20
	383 Call 0x1C17F20
	384 Call 0x1C17F28
	385 Call 0x1C17F20
	386 Call 0x1C17F20
	387 Call 0x1C17F20
	388 Call 0x1C17F20
	389 Call 0x1C17F20
	390 Call 0x1C17F20
	391 Move X0, X21
	392 Call 0x1C17F18
	393 Move X23, 0xF07000
	394 Move X23, [X23+3584]
	395 NotImplemented "Instruction CMP not yet implemented."
	396 Call 0x3EB2AD0
	397 Move X21, [X0]
	398 Call 0x3EB2AE0
	399 Move W22, W31
	400 Move X19, X0
	401 Move X21, X31
	402 Move X19, X0
	403 Move X8, 0xF07000
	404 Move X8, [X8+3584]
	405 Move X1, [X8]
	406 Move X0, X20
	407 Call 0x1C17E00
	408 Move X20, X0
	409 Compare X0, 0
	410 JumpIfEqual {434}
	411 Move X8, [X20]
	412 Move X10, 0xF07000
	413 NotImplemented "Instruction LDRH not yet implemented."
	414 Move X10, [X10+3584]
	415 Move X1, [X10]
	416 Compare X9, 0
	417 JumpIfEqual {424}
	418 Move X10, [X8+176]
	419 Add X10, X10, 8
	420 NotImplemented "Instruction LDUR not yet implemented."
	421 NotImplemented "Instruction CMP not yet implemented."
	422 Subtract X9, X9, 1
	423 Add X10, X10, 16
	424 Move X0, X20
	425 Move W2, W31
	426 Call 0x1C5D788
	427 NotImplemented "Instruction LDRSW not yet implemented."
	428 Add X8, X8, X9
	429 Add X0, X8, 312
	430 Move X8, [X0]
	431 Move X1, [X0+8]
	432 Move X0, X20
	433 NotImplemented "Instruction BLR not yet implemented."
	434 Compare X21, 0
	435 JumpIfNotEqual {438}
	436 Move X0, X19
	437 Call 0x1D2D690
	438 Move X0, X21
	439 Call 0x1C17F18
	440 Call 0x1991590

Method: Mono.Security.X509.X509CertificateCollection get_Certificates()

Disassembly:
	0x031EDD5C STRB W31, [X20]
	0x031EDD60 STP V0, V0, [X19 + 0x20]
	0x031EDD64 STP V0, V0, [X19]
	0x031EDD68 B 0x31EDD7C
	0x031EDD6C LDP V1, V0, [X31 + 0x60]
	0x031EDD70 LDP V3, V2, [X31 + 0x40]
	0x031EDD74 STP V1, V0, [X19 + 0x20]
	0x031EDD78 STP V3, V2, [X19]
	0x031EDD7C LDP X20, X19, [X31 + 0xB0]
	0x031EDD80 LDP X22, X21, [X31 + 0xA0]
	0x031EDD84 LDP X24, X23, [X31 + 0x90]
	0x031EDD88 LDR X30, [X31 + 0x80]
	0x031EDD8C ADD X31, X31, 0xC0
	0x031EDD90 RET
	0x031EDD94 BL 0x1C16F20
	0x031EDD98 BL 0x1C16F20
	0x031EDD9C BL 0x1C16F20
	0x031EDDA0 MOV X0, X22
	0x031EDDA4 BL 0x1C16F18
	0x031EDDA8 B 0x31EDDC0
	0x031EDDAC B 0x31EDDC0
	0x031EDDB0 B 0x31EDDC0
	0x031EDDB4 B 0x31EDDC0
	0x031EDDB8 B 0x31EDDC0
	0x031EDDBC B 0x31EDDC0
	0x031EDDC0 MOV X23, X0
	0x031EDDC4 CMP W1, 0x1
	0x031EDDC8 B.NE 0x31EDDE4
	0x031EDDCC MOV X0, X23
	0x031EDDD0 BL 0x3EB1AD0
	0x031EDDD4 LDR X22, [X0]
	0x031EDDD8 BL 0x3EB1AE0
	0x031EDDDC MOV W23, W31
	0x031EDDE0 B 0x31EDCD4
	0x031EDDE4 MOV X22, X31
	0x031EDDE8 B 0x31EDDF0
	0x031EDDEC MOV X23, X0
	0x031EDDF0 LDR X1, [X24]
	0x031EDDF4 MOV X0, X21
	0x031EDDF8 BL 0x1C16E00
	0x031EDDFC MOV X19, X0
	0x031EDE00 CBZ X0, 0x31EDE5C
	0x031EDE04 LDR X8, [X19]
	0x031EDE08 LDR X1, [X24]
	0x031EDE0C LDRH W9, [X8 + 0x12E]
	0x031EDE10 CBZ X9, 0x31EDE34
	0x031EDE14 LDR X10, [X8 + 0xB0]
	0x031EDE18 ADD X10, X10, 0x8
	0x031EDE1C LDUR X11, [X10 - 0x8]
	0x031EDE20 CMP X11, X1
	0x031EDE24 B.EQ 0x31EDE44
	0x031EDE28 SUBS X9, X9, 0x1
	0x031EDE2C ADD X10, X10, 0x10
	0x031EDE30 B.NE 0x31EDE1C
	0x031EDE34 MOV X0, X19
	0x031EDE38 MOV W2, W31
	0x031EDE3C BL 0x1C5C788
	0x031EDE40 B 0x31EDE50
	0x031EDE44 LDRSW X9, [X10]
	0x031EDE48 ADD X8, X8, X9, 0x4, LSL
	0x031EDE4C ADD X0, X8, 0x138
	0x031EDE50 LDP X8, X1, [X0]
	0x031EDE54 MOV X0, X19
	0x031EDE58 BLR X8
	0x031EDE5C CBNZ X22, 0x31EDE68
	0x031EDE60 MOV X0, X23
	0x031EDE64 BL 0x1D2C690
	0x031EDE68 MOV X0, X22
	0x031EDE6C BL 0x1C16F18
	0x031EDE70 BL 0x1990590
	0x031EDE74 STP X30, X21, [X31 - 0x20]!
	0x031EDE78 STP X20, X19, [X31 + 0x10]
	0x031EDE7C ADRP X20, 0x11EF000
	0x031EDE80 ADRP X21, 0xF33000
	0x031EDE84 LDRB W8, [X20 + 0x1B5]
	0x031EDE88 LDR X21, [X21 + 0xF38]
	0x031EDE8C MOV X19, X0
	0x031EDE90 TBNZ X8, 0x0, 0x31EDEA8
	0x031EDE94 ADRP X0, 0xF33000
	0x031EDE98 LDR X0, [X0 + 0xF38]
	0x031EDE9C BL 0x1C16CF4
	0x031EDEA0 MOVZ W8, 0x1
	0x031EDEA4 STRB W8, [X20 + 0x1B5]
	0x031EDEA8 LDR X0, [X21]
	0x031EDEAC BL 0x1C16F10
	0x031EDEB0 MOV X1, X19
	0x031EDEB4 MOV X20, X0
	0x031EDEB8 BL 0x31F64F0
	0x031EDEBC MOV X0, X20
	0x031EDEC0 LDP X20, X19, [X31 + 0x10]
	0x031EDEC4 LDP X30, X21, [X31], #0x20
	0x031EDEC8 RET
	0x031EDECC STR X30, [X31 - 0x20]!
	0x031EDED0 STP X20, X19, [X31 + 0x10]
	0x031EDED4 ADRP X20, 0x11EF000
	0x031EDED8 LDRB W8, [X20 + 0x1B8]
	0x031EDEDC MOV X19, X0
	0x031EDEE0 TBNZ X8, 0x0, 0x31EDF04
	0x031EDEE4 ADRP X0, 0xF06000
	0x031EDEE8 LDR X0, [X0 + 0xE18]
	0x031EDEEC BL 0x1C16CF4
	0x031EDEF0 ADRP X0, 0xF33000
	0x031EDEF4 LDR X0, [X0 + 0xCC0]
	0x031EDEF8 BL 0x1C16CF4
	0x031EDEFC MOVZ W8, 0x1
	0x031EDF00 STRB W8, [X20 + 0x1B8]
	0x031EDF04 LDR X19, [X19 + 0x10]
	0x031EDF08 CBZ X19, 0x31EDFB8
	0x031EDF0C ADRP X10, 0xF06000
	0x031EDF10 LDR X8, [X19]
	0x031EDF14 LDR X10, [X10 + 0xE18]
	0x031EDF18 LDRH W9, [X8 + 0x12E]
	0x031EDF1C LDR X1, [X10]
	0x031EDF20 CBZ X9, 0x31EDF44
	0x031EDF24 LDR X10, [X8 + 0xB0]
	0x031EDF28 ADD X10, X10, 0x8
	0x031EDF2C LDUR X11, [X10 - 0x8]
	0x031EDF30 CMP X11, X1
	0x031EDF34 B.EQ 0x31EDF54
	0x031EDF38 SUBS X9, X9, 0x1
	0x031EDF3C ADD X10, X10, 0x10
	0x031EDF40 B.NE 0x31EDF2C
	0x031EDF44 MOVZ W2, 0x1
	0x031EDF48 MOV X0, X19
	0x031EDF4C BL 0x1C5C788
	0x031EDF50 B 0x31EDF64
	0x031EDF54 LDR W9, [X10]
	0x031EDF58 ADD W9, W9, 0x1
	0x031EDF5C ADD X8, X8, W9, 0x4, SXTW
	0x031EDF60 ADD X0, X8, 0x138
	0x031EDF64 LDP X8, X1, [X0]
	0x031EDF68 MOV X0, X19
	0x031EDF6C BLR X8
	0x031EDF70 CBZ X0, 0x31EDFA8
	0x031EDF74 ADRP X9, 0xF33000
	0x031EDF78 LDR X9, [X9 + 0xCC0]
	0x031EDF7C LDR X8, [X0]
	0x031EDF80 LDR X1, [X9]
	0x031EDF84 LDRB W10, [X8 + 0x130]
	0x031EDF88 LDRB W9, [X1 + 0x130]
	0x031EDF8C CMP W10, W9
	0x031EDF90 B.CC 0x31EDFB4
	0x031EDF94 LDR X8, [X8 + 0xC8]
	0x031EDF98 ADD X8, X8, X9, 0x3, LSL
	0x031EDF9C LDUR X8, [X8 - 0x8]
	0x031EDFA0 CMP X8, X1
	0x031EDFA4 B.NE 0x31EDFB4
	0x031EDFA8 LDP X20, X19, [X31 + 0x10]
	0x031EDFAC LDR X30, [X31], #0x20
	0x031EDFB0 RET
	0x031EDFB4 BL 0x1C171E0
	0x031EDFB8 BL 0x1C16F20
	0x031EDFBC SUB X31, X31, 0xC0
	0x031EDFC0 STR X30, [X31 + 0x80]
	0x031EDFC4 STP X24, X23, [X31 + 0x90]
	0x031EDFC8 STP X22, X21, [X31 + 0xA0]
	0x031EDFCC STP X20, X19, [X31 + 0xB0]
	0x031EDFD0 ADRP X20, 0x11EF000
	0x031EDFD4 LDRB W8, [X20 + 0x1A4]
	0x031EDFD8 MOV X19, X0
	0x031EDFDC TBNZ X8, 0x0, 0x31EE00C
	0x031EDFE0 ADRP X0, 0xF33000
	0x031EDFE4 LDR X0, [X0 + 0xB98]
	0x031EDFE8 BL 0x1C16CF4
	0x031EDFEC ADRP X0, 0xF33000
	0x031EDFF0 LDR X0, [X0 + 0xF40]
	0x031EDFF4 BL 0x1C16CF4
	0x031EDFF8 ADRP X0, 0xF33000
	0x031EDFFC LDR X0, [X0 + 0xF48]
	0x031EE000 BL 0x1C16CF4
	0x031EE004 MOVZ W8, 0x1
	0x031EE008 STRB W8, [X20 + 0x1A4]
	0x031EE00C LDR X8, [X19 + 0x48]
	0x031EE010 CBZ X8, 0x31EE208
	0x031EE014 LDR X8, [X19 + 0x90]
	0x031EE018 CBNZ X8, 0x31EE1E4
	0x031EE01C ADRP X8, 0xF32000
	0x031EE020 LDR X0, [X19 + 0x40]
	0x031EE024 LDR X8, [X8 + 0xF48]
	0x031EE028 MOV X2, X31
	0x031EE02C LDR X1, [X8]
	0x031EE030 BL 0x321BA08
	0x031EE034 TBZ X0, 0x0, 0x31EE1E4
	0x031EE038 ADRP X23, 0xF32000
	0x031EE03C LDR X23, [X23 + 0xB98]
	0x031EE040 MOVI V0.2D, 0x0
	0x031EE044 STP V0, V0, [X31 + 0x20]
	0x031EE048 LDR X21, [X19 + 0x60]
	0x031EE04C LDR X0, [X23]
	0x031EE050 BL 0x1C16F10
	0x031EE054 MOV X1, X21
	0x031EE058 MOV X20, X0
	0x031EE05C BL 0x31E7A44
	0x031EE060 CBZ X20, 0x31EE200
	0x031EE064 LDRB W8, [X20 + 0x10]
	0x031EE068 CMP W8, 0x2
	0x031EE06C B.NE 0x31EE200
	0x031EE070 MOV X0, X20
	0x031EE074 BL 0x31E7D00
	0x031EE078 MOV X1, X0
	0x031EE07C BL 0x31F50A4
	0x031EE080 LDR X8, [X23]
	0x031EE084 LDR X22, [X19 + 0x48]
	0x031EE088 MOV X20, X0
	0x031EE08C MOV X0, X8
	0x031EE090 BL 0x1C16F10
	0x031EE094 MOV X1, X22
	0x031EE098 MOV X21, X0
	0x031EE09C BL 0x31E7A44
	0x031EE0A0 CBZ X21, 0x31EE200
	0x031EE0A4 LDRB W8, [X21 + 0x10]
	0x031EE0A8 CMP W8, 0x30
	0x031EE0AC B.NE 0x31EE200
	0x031EE0B0 LDR X0, [X21 + 0x20]
	0x031EE0B4 CBZ X0, 0x31EE1E8
	0x031EE0B8 LDR X8, [X0]
	0x031EE0BC LDR X9, [X8 + 0x298]
	0x031EE0C0 LDR X1, [X8 + 0x2A0]
	0x031EE0C4 BLR X9
	0x031EE0C8 CMP W0, 0x3
	0x031EE0CC B.LT 0x31EE200
	0x031EE0D0 MOV X0, X21
	0x031EE0D4 MOV W1, W31
	0x031EE0D8 BL 0x31E8704
	0x031EE0DC CBZ X0, 0x31EE250
	0x031EE0E0 LDRB W8, [X0 + 0x10]
	0x031EE0E4 CMP W8, 0x2
	0x031EE0E8 B.NE 0x31EE200
	0x031EE0EC MOVZ W1, 0x1
	0x031EE0F0 MOV X0, X21
	0x031EE0F4 BL 0x31E8704
	0x031EE0F8 CBZ X0, 0x31EE250
	0x031EE0FC LDRB W8, [X0 + 0x10]
	0x031EE100 CMP W8, 0x2
	0x031EE104 B.NE 0x31EE200
	0x031EE108 MOVZ W1, 0x2
	0x031EE10C MOV X0, X21
	0x031EE110 BL 0x31E8704
	0x031EE114 CBZ X0, 0x31EE250
	0x031EE118 LDRB W8, [X0 + 0x10]
	0x031EE11C CMP W8, 0x2
	0x031EE120 B.NE 0x31EE200
	0x031EE124 MOV X0, X21
	0x031EE128 MOV W1, W31
	0x031EE12C BL 0x31E8704
	0x031EE130 CBZ X0, 0x31EE250
	0x031EE134 BL 0x31E7D00
	0x031EE138 MOV X1, X0
	0x031EE13C BL 0x31F50A4
	0x031EE140 MOV X22, X0
	0x031EE144 MOVZ W1, 0x1
	0x031EE148 MOV X0, X21
	0x031EE14C BL 0x31E8704
	0x031EE150 CBZ X0, 0x31EE250
	0x031EE154 BL 0x31E7D00
	0x031EE158 MOV X1, X0
	0x031EE15C BL 0x31F50A4
	0x031EE160 MOV X23, X0
	0x031EE164 MOVZ W1, 0x2
	0x031EE168 MOV X0, X21
	0x031EE16C BL 0x31E8704
	0x031EE170 CBZ X0, 0x31EE250
	0x031EE174 BL 0x31E7D00
	0x031EE178 MOV X1, X0
	0x031EE17C BL 0x31F50A4
	0x031EE180 CBZ X20, 0x31EE250
	0x031EE184 ADRP X8, 0xF32000
	0x031EE188 LDR X8, [X8 + 0xF40]
	0x031EE18C MOV X21, X0
	0x031EE190 LDR X0, [X8]
	0x031EE194 BL 0x1C16F10
	0x031EE198 LDR W8, [X20 + 0x18]

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X20, 0x11F0000
	014 Move W8, [X20+381]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {40}
	020 Move X0, 0xF34000
	021 Move X0, [X0+3184]
	022 Call 0x1C17CF4
	023 Move X0, 0xF07000
	024 Move X0, [X0+3584]
	025 Call 0x1C17CF4
	026 Move X0, 0xF07000
	027 Move X0, [X0+3608]
	028 Call 0x1C17CF4
	029 Move X0, 0xF34000
	030 Move X0, [X0+3592]
	031 Call 0x1C17CF4
	032 Move X0, 0xF34000
	033 Move X0, [X0+3264]
	034 Call 0x1C17CF4
	035 Move X0, 0xF34000
	036 Move X0, [X0+3664]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X20+381], W8
	040 Move W8, [X19+50]
	041 Compare W8, 0
	042 JumpIfEqual {210}
	043 Move X0, [X19+40]
	044 Compare X0, 0
	045 JumpIfEqual {235}
	046 Move X1, X31
	047 Call CollectionBase.Clear, X0
	048 Move X0, [X19+56]
	049 Compare X0, 0
	050 JumpIfEqual {235}
	051 Move X8, [X0]
	052 Move X24, 0xF07000
	053 Move X9, [X8+904]
	054 Move X1, [X8+912]
	055 Move X24, [X24+3584]
	056 NotImplemented "Instruction BLR not yet implemented."
	057 Move X20, X0
	058 Compare X0, 0
	059 JumpIfEqual {236}
	060 Move X25, 0xF07000
	061 Move X26, 0xF34000
	062 Move X27, 0xF34000
	063 Move X28, 0xF34000
	064 Move X29, 0xF34000
	065 Move X25, [X25+3608]
	066 Move X26, [X26+3592]
	067 Move X27, [X27+3664]
	068 Move X28, [X28+3184]
	069 Move X29, [X29+3264]
	070 Move X8, [X20]
	071 Move X1, [X25]
	072 NotImplemented "Instruction LDRH not yet implemented."
	073 Compare X9, 0
	074 JumpIfEqual {81}
	075 Move X10, [X8+176]
	076 Add X10, X10, 8
	077 NotImplemented "Instruction LDUR not yet implemented."
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Subtract X9, X9, 1
	080 Add X10, X10, 16
	081 Move X0, X20
	082 Move W2, W31
	083 Call 0x1C5D788
	084 NotImplemented "Instruction LDRSW not yet implemented."
	085 Add X8, X8, X9
	086 Add X0, X8, 312
	087 Move X8, [X0]
	088 Move X1, [X0+8]
	089 Move X0, X20
	090 NotImplemented "Instruction BLR not yet implemented."
	091 Move TEMP, X0
	092 And TEMP, TEMP, 1
	093 Compare TEMP, 1
	094 JumpIfNotEqual {175}
	095 Move X8, [X20]
	096 Move X1, [X25]
	097 NotImplemented "Instruction LDRH not yet implemented."
	098 Compare X9, 0
	099 JumpIfEqual {106}
	100 Move X10, [X8+176]
	101 Add X10, X10, 8
	102 NotImplemented "Instruction LDUR not yet implemented."
	103 NotImplemented "Instruction CMP not yet implemented."
	104 Subtract X9, X9, 1
	105 Add X10, X10, 16
	106 Move W2, 1
	107 Move X0, X20
	108 Call 0x1C5D788
	109 Move W9, [X10]
	110 Add W9, W9, 1
	111 Add X8, X8, W9
	112 Add X0, X8, 312
	113 Move X8, [X0]
	114 Move X1, [X0+8]
	115 Move X0, X20
	116 NotImplemented "Instruction BLR not yet implemented."
	117 Move X21, X0
	118 Compare X0, 0
	119 JumpIfEqual {227}
	120 Move X8, [X21]
	121 Move X1, [X26]
	122 Move W10, [X8+304]
	123 Move W9, [X1+304]
	124 NotImplemented "Instruction CMP not yet implemented."
	125 Move X8, [X8+200]
	126 Add X8, X8, X9
	127 NotImplemented "Instruction LDUR not yet implemented."
	128 NotImplemented "Instruction CMP not yet implemented."
	129 Move X0, [X21+16]
	130 Compare X0, 0
	131 JumpIfEqual {228}
	132 Move X1, [X27]
	133 Move X2, X31
	134 Call String.Equals, X0, X1
	135 Move TEMP, X0
	136 And TEMP, TEMP, 1
	137 Compare TEMP, 1
	138 JumpIfNotEqual {70}
	139 Move X0, [X21+24]
	140 Compare X0, 0
	141 JumpIfEqual {234}
	142 Move W1, 1
	143 Call ASN1.get_Item, X0, X1
	144 Compare X0, 0
	145 JumpIfEqual {231}
	146 Call ASN1.get_Value, X0
	147 Move X21, X0
	148 Move X0, [X28]
	149 Call 0x1C17F10
	150 Move X22, X0
	151 Move X1, X21
	152 Call ContentInfo..ctor, X0, X1
	153 Compare X22, 0
	154 JumpIfEqual {233}
	155 Move X0, [X22+24]
	156 Compare X0, 0
	157 JumpIfEqual {229}
	158 Move X21, [X19+40]
	159 Move W1, W31
	160 Call ASN1.get_Item, X0, X1
	161 Compare X0, 0
	162 JumpIfEqual {230}
	163 Call ASN1.get_Value, X0
	164 Move X23, X0
	165 Move X0, [X29]
	166 Call 0x1C17F10
	167 Move X22, X0
	168 Move X1, X23
	169 Call X509Certificate..ctor, X0, X1
	170 Compare X21, 0
	171 JumpIfEqual {232}
	172 Move X0, X21
	173 Move X1, X22
	174 Call X509CertificateCollection.Add, X0, X1
	175 Move X21, X31
	176 Move W22, 5
	177 Move X1, [X24]
	178 Move X0, X20
	179 Call 0x1C17E00
	180 Compare X0, 0
	181 JumpIfEqual {204}
	182 Move X8, [X0]
	183 Move X1, [X24]
	184 Move X20, X0
	185 NotImplemented "Instruction LDRH not yet implemented."
	186 Compare X9, 0
	187 JumpIfEqual {194}
	188 Move X10, [X8+176]
	189 Add X10, X10, 8
	190 NotImplemented "Instruction LDUR not yet implemented."
	191 NotImplemented "Instruction CMP not yet implemented."
	192 Subtract X9, X9, 1
	193 Add X10, X10, 16
	194 Move X0, X20
	195 Move W2, W31
	196 Call 0x1C5D788
	197 NotImplemented "Instruction LDRSW not yet implemented."
	198 Add X8, X8, X9
	199 Add X0, X8, 312
	200 Move X8, [X0]
	201 Move X1, [X0+8]
	202 Move X0, X20
	203 NotImplemented "Instruction BLR not yet implemented."
	204 Compare X21, 0
	205 JumpIfNotEqual {237}
	206 NotImplemented "Instruction CMP not yet implemented."
	207 Compare W22, 0
	208 JumpIfNotEqual {211}
	209 Move [X19+50], W31
	210 Move X8, [X19+40]
	211 Move X20, [X31+80]
	212 Move X19, [X31+88]
	213 Move X22, [X31+64]
	214 Move X21, [X31+72]
	215 Move X24, [X31+48]
	216 Move X23, [X31+56]
	217 Move X26, [X31+32]
	218 Move X25, [X31+40]
	219 Move X28, [X31+16]
	220 Move X27, [X31+24]
	221 Move X0, X8
	222 Move X29, [X31+96]
	223 Move X30, [X31+104]
	224 Return X0
	225 Move X0, X21
	226 Call 0x1C181E0
	227 Call 0x1C17F20
	228 Call 0x1C17F20
	229 Call 0x1C17F20
	230 Call 0x1C17F20
	231 Call 0x1C17F20
	232 Call 0x1C17F20
	233 Call 0x1C17F20
	234 Call 0x1C17F20
	235 Call 0x1C17F20
	236 Call 0x1C17F20
	237 Move X0, X21
	238 Call 0x1C17F18
	239 NotImplemented "Instruction CMP not yet implemented."
	240 Call 0x3EB2AD0
	241 Move X21, [X0]
	242 Call 0x3EB2AE0
	243 Move W22, W31
	244 Move X19, X0
	245 Move X21, X31
	246 Move X19, X0
	247 Move X1, [X24]
	248 Move X0, X20
	249 Call 0x1C17E00
	250 Move X20, X0
	251 Compare X0, 0
	252 JumpIfEqual {274}
	253 Move X8, [X20]
	254 Move X1, [X24]
	255 NotImplemented "Instruction LDRH not yet implemented."
	256 Compare X9, 0
	257 JumpIfEqual {264}
	258 Move X10, [X8+176]
	259 Add X10, X10, 8
	260 NotImplemented "Instruction LDUR not yet implemented."
	261 NotImplemented "Instruction CMP not yet implemented."
	262 Subtract X9, X9, 1
	263 Add X10, X10, 16
	264 Move X0, X20
	265 Move W2, W31
	266 Call 0x1C5D788
	267 NotImplemented "Instruction LDRSW not yet implemented."
	268 Add X8, X8, X9
	269 Add X0, X8, 312
	270 Move X8, [X0]
	271 Move X1, [X0+8]
	272 Move X0, X20
	273 NotImplemented "Instruction BLR not yet implemented."
	274 Compare X21, 0
	275 JumpIfNotEqual {278}
	276 Move X0, X19
	277 Call 0x1D2D690
	278 Move X0, X21
	279 Call 0x1C17F18
	280 Call 0x1991590

Method: System.Security.Cryptography.RandomNumberGenerator get_RNG()

Disassembly:
	0x031EE19C MOV X2, X31
	0x031EE1A0 MOV X24, X0
	0x031EE1A4 UBFM W1, W8, 0x1D, 0x1C
	0x031EE1A8 BL 0x32667F0
	0x031EE1AC STR X24, [X19 + 0x90]
	0x031EE1B0 LDP V0, V1, [X31 + 0x20]
	0x031EE1B4 STP V0, V1, [X31]
	0x031EE1B8 CBZ X24, 0x31EE250

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+64]
	005 Compare X0, 0
	006 JumpIfNotEqual {9}
	007 Call RandomNumberGenerator.Create
	008 Move [X19+64], X0
	009 Move X30, [X31+16]
	010 Move X19, [X31+24]
	011 Return X0

Method: System.Boolean Compare(System.Byte[] expected, System.Byte[] actual)

Disassembly:
	0x031ECC00 BL 0x31ED1BC
	0x031ECC04 MOV X19, X0
	0x031ECC08 CBZ X0, 0x31ECCDC
	0x031ECC0C LDR X8, [X19]
	0x031ECC10 LDR X1, [X8 + 0x2A0]
	0x031ECC14 LDR X9, [X8 + 0x298]
	0x031ECC18 MOV X0, X19
	0x031ECC1C BLR X9
	0x031ECC20 CBZ X20, 0x31ECCE0
	0x031ECC24 MOV X21, X0
	0x031ECC28 CBZ X0, 0x31ECCE4
	0x031ECC2C ADRP X9, 0xF34000
	0x031ECC30 LDR X8, [X21]
	0x031ECC34 LDR X9, [X9 + 0xEA0]
	0x031ECC38 LDR W22, [X20 + 0x18]
	0x031ECC3C LDR X1, [X9]
	0x031ECC40 LDRH W9, [X8 + 0x12E]
	0x031ECC44 CBZ X9, 0x31ECC68
	0x031ECC48 LDR X10, [X8 + 0xB0]
	0x031ECC4C ADD X10, X10, 0x8
	0x031ECC50 LDUR X11, [X10 - 0x8]
	0x031ECC54 CMP X11, X1
	0x031ECC58 B.EQ 0x31ECC78
	0x031ECC5C SUBS X9, X9, 0x1
	0x031ECC60 ADD X10, X10, 0x10
	0x031ECC64 B.NE 0x31ECC50
	0x031ECC68 MOVZ W2, 0x4
	0x031ECC6C MOV X0, X21
	0x031ECC70 BL 0x1C5C788
	0x031ECC74 B 0x31ECC88
	0x031ECC78 LDR W9, [X10]
	0x031ECC7C ADD W9, W9, 0x4
	0x031ECC80 ADD X8, X8, W9, 0x4, SXTW
	0x031ECC84 ADD X0, X8, 0x138

ISIL:
	001 Move [X31-16], X30
	002 Compare X1, 0
	003 JumpIfEqual {29}
	004 Compare X2, 0
	005 JumpIfEqual {29}
	006 Move W8, [X1+24]
	007 Move W9, [X2+24]
	008 NotImplemented "Instruction CMP not yet implemented."
	009 NotImplemented "Instruction CMP not yet implemented."
	010 Move W9, W31
	011 Subtract W8, W31, W8
	012 Add W31, W8, W9
	013 Move X9, W9
	014 Add X10, X1, X9
	015 Add X11, X2, X9
	016 Move W10, [X10+32]
	017 Move W11, [X11+32]
	018 Add W12, W8, W9
	019 NotImplemented "Instruction CMP not yet implemented."
	020 NotImplemented "Instruction CSET not yet implemented."
	021 Add W31, W12, 1
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Add W9, W9, 1
	024 Move W0, W31
	025 Move W0, 1
	026 Move X30, [X31+16]
	027 Return X0
	028 Call 0x1C17F28
	029 Call 0x1C17F20

Method: System.Security.Cryptography.SymmetricAlgorithm GetSymmetricAlgorithm(System.String algorithmOid, System.Byte[] salt, System.Int32 iterationCount)

Disassembly:
	0x031EE1BC LDR X8, [X24]
	0x031EE1C0 LDP V0, V1, [X31]
	0x031EE1C4 ADD X1, X31, 0x40
	0x031EE1C8 MOV X0, X24
	0x031EE1CC LDR X9, [X8 + 0x1F8]
	0x031EE1D0 STP X22, X23, [X31 + 0x40]
	0x031EE1D4 STP X21, X20, [X31 + 0x50]
	0x031EE1D8 STP V0, V1, [X31 + 0x60]
	0x031EE1DC LDR X2, [X8 + 0x200]
	0x031EE1E0 BLR X9
	0x031EE1E4 LDR X0, [X19 + 0x90]
	0x031EE1E8 LDP X20, X19, [X31 + 0xB0]
	0x031EE1EC LDP X22, X21, [X31 + 0xA0]
	0x031EE1F0 LDP X24, X23, [X31 + 0x90]
	0x031EE1F4 LDR X30, [X31 + 0x80]
	0x031EE1F8 ADD X31, X31, 0xC0
	0x031EE1FC RET
	0x031EE200 MOV X0, X31
	0x031EE204 B 0x31EE1E8
	0x031EE208 ADRP X0, 0xF32000
	0x031EE20C LDR X0, [X0 + 0xCE0]
	0x031EE210 BL 0x1C16D08
	0x031EE214 BL 0x1C16F10
	0x031EE218 MOV X19, X0
	0x031EE21C ADRP X0, 0xF32000
	0x031EE220 LDR X0, [X0 + 0xF50]
	0x031EE224 BL 0x1C16D08
	0x031EE228 MOV X1, X0
	0x031EE22C MOV X0, X19
	0x031EE230 MOV X2, X31
	0x031EE234 BL 0x3252170
	0x031EE238 ADRP X0, 0xF32000
	0x031EE23C LDR X0, [X0 + 0xF58]
	0x031EE240 BL 0x1C16D08
	0x031EE244 MOV X1, X0
	0x031EE248 MOV X0, X19
	0x031EE24C BL 0x1C16DEC
	0x031EE250 BL 0x1C16F20
	0x031EE254 STR X30, [X31 - 0x20]!
	0x031EE258 STP X20, X19, [X31 + 0x10]
	0x031EE25C ADRP X20, 0x11EE000
	0x031EE260 LDRB W8, [X20 + 0x1BC]
	0x031EE264 MOV X19, X0
	0x031EE268 TBNZ X8, 0x0, 0x31EE280
	0x031EE26C ADRP X0, 0xF05000
	0x031EE270 LDR X0, [X0 + 0xE18]
	0x031EE274 BL 0x1C16CF4
	0x031EE278 MOVZ W8, 0x1
	0x031EE27C STRB W8, [X20 + 0x1BC]
	0x031EE280 LDR X19, [X19 + 0x10]
	0x031EE284 CBZ X19, 0x31EE2F0
	0x031EE288 ADRP X10, 0xF05000
	0x031EE28C LDR X8, [X19]
	0x031EE290 LDR X10, [X10 + 0xE18]
	0x031EE294 LDRH W9, [X8 + 0x12E]
	0x031EE298 LDR X1, [X10]
	0x031EE29C CBZ X9, 0x31EE2C0
	0x031EE2A0 LDR X10, [X8 + 0xB0]
	0x031EE2A4 ADD X10, X10, 0x8
	0x031EE2A8 LDUR X11, [X10 - 0x8]
	0x031EE2AC CMP X11, X1
	0x031EE2B0 B.EQ 0x31EE2D0
	0x031EE2B4 SUBS X9, X9, 0x1
	0x031EE2B8 ADD X10, X10, 0x10
	0x031EE2BC B.NE 0x31EE2A8
	0x031EE2C0 MOV X0, X19
	0x031EE2C4 MOV W2, W31
	0x031EE2C8 BL 0x1C5C788
	0x031EE2CC B 0x31EE2DC
	0x031EE2D0 LDRSW X9, [X10]
	0x031EE2D4 ADD X8, X8, X9, 0x4, LSL
	0x031EE2D8 ADD X0, X8, 0x138
	0x031EE2DC LDP X2, X1, [X0]
	0x031EE2E0 MOV X0, X19
	0x031EE2E4 LDP X20, X19, [X31 + 0x10]
	0x031EE2E8 LDR X30, [X31], #0x20
	0x031EE2EC BR X2
	0x031EE2F0 BL 0x1C16F20
	0x031EE2F4 SUB X31, X31, 0xF0
	0x031EE2F8 STR X30, [X31 + 0xC0]
	0x031EE2FC STP X22, X21, [X31 + 0xD0]
	0x031EE300 STP X20, X19, [X31 + 0xE0]
	0x031EE304 ADRP X21, 0x11EE000
	0x031EE308 LDRB W8, [X21 + 0x182]
	0x031EE30C MOV X19, X1
	0x031EE310 MOV X20, X0
	0x031EE314 TBNZ X8, 0x0, 0x31EE338
	0x031EE318 ADRP X0, 0xF32000
	0x031EE31C LDR X0, [X0 + 0xF60]
	0x031EE320 BL 0x1C16CF4
	0x031EE324 ADRP X0, 0xF32000
	0x031EE328 LDR X0, [X0 + 0xF48]
	0x031EE32C BL 0x1C16CF4
	0x031EE330 MOVZ W8, 0x1
	0x031EE334 STRB W8, [X21 + 0x182]
	0x031EE338 STRB W31, [X31 + 0xCC]
	0x031EE33C CBZ X19, 0x31EE458
	0x031EE340 ADRP X22, 0xF32000
	0x031EE344 LDR X22, [X22 + 0xF60]
	0x031EE348 MOV X0, X19
	0x031EE34C MOV X1, X31
	0x031EE350 BL 0x32004C8
	0x031EE354 LDR X21, [X19 + 0x18]
	0x031EE358 LDR X1, [X22]
	0x031EE35C MOV X19, X0
	0x031EE360 MOV X0, X21
	0x031EE364 MOV X2, X31
	0x031EE368 BL 0x321BA08
	0x031EE36C TBZ X0, 0x0, 0x31EE3A0
	0x031EE370 LDR X20, [X20 + 0x18]
	0x031EE374 MOV X0, X19
	0x031EE378 MOV X1, X31
	0x031EE37C BL 0x3200678
	0x031EE380 MOV X1, X0
	0x031EE384 CBZ X20, 0x31EE464
	0x031EE388 LDR X8, [X20]
	0x031EE38C LDR X9, [X8 + 0x308]
	0x031EE390 LDR X2, [X8 + 0x310]
	0x031EE394 MOV X0, X20
	0x031EE398 BLR X9
	0x031EE39C B 0x31EE424
	0x031EE3A0 ADRP X8, 0xF32000
	0x031EE3A4 LDR X8, [X8 + 0xF48]
	0x031EE3A8 LDR X1, [X8]
	0x031EE3AC MOV X0, X21
	0x031EE3B0 MOV X2, X31
	0x031EE3B4 BL 0x321BA08
	0x031EE3B8 TBZ X0, 0x0, 0x31EE468
	0x031EE3BC ADD X8, X31, 0x40
	0x031EE3C0 ADD X1, X31, 0xCC
	0x031EE3C4 MOV X0, X20
	0x031EE3C8 BL 0x31EDBEC
	0x031EE3CC LDP V0, V1, [X31 + 0x40]
	0x031EE3D0 LDP V2, V3, [X31 + 0x60]
	0x031EE3D4 LDRB W8, [X31 + 0xCC]
	0x031EE3D8 STP V0, V1, [X31 + 0x80]
	0x031EE3DC STP V2, V3, [X31 + 0xA0]
	0x031EE3E0 CBZ W8, 0x31EE424
	0x031EE3E4 LDR X20, [X20 + 0x18]
	0x031EE3E8 LDP V0, V1, [X31 + 0x80]
	0x031EE3EC LDP V2, V3, [X31 + 0xA0]
	0x031EE3F0 STP V0, V1, [X31]
	0x031EE3F4 STP V2, V3, [X31 + 0x20]
	0x031EE3F8 ADD X1, X31, 0x0
	0x031EE3FC MOV X0, X19
	0x031EE400 MOV X2, X31
	0x031EE404 BL 0x3200C34
	0x031EE408 MOV X1, X0
	0x031EE40C CBZ X20, 0x31EE4CC
	0x031EE410 LDR X8, [X20]
	0x031EE414 LDR X9, [X8 + 0x308]
	0x031EE418 LDR X2, [X8 + 0x310]
	0x031EE41C MOV X0, X20
	0x031EE420 BLR X9
	0x031EE424 MOV X21, X31
	0x031EE428 CBZ X19, 0x31EE458
	0x031EE42C LDR W2, [X19 + 0x18]
	0x031EE430 MOV X0, X19
	0x031EE434 MOV W1, W31
	0x031EE438 MOV X3, X31
	0x031EE43C BL 0x339FA34
	0x031EE440 CBNZ X21, 0x31EE45C
	0x031EE444 LDP X20, X19, [X31 + 0xE0]
	0x031EE448 LDP X22, X21, [X31 + 0xD0]
	0x031EE44C LDR X30, [X31 + 0xC0]
	0x031EE450 ADD X31, X31, 0xF0
	0x031EE454 RET
	0x031EE458 BL 0x1C16F20
	0x031EE45C MOV X0, X21
	0x031EE460 BL 0x1C16F18
	0x031EE464 BL 0x1C16F20
	0x031EE468 ADRP X0, 0xF32000
	0x031EE46C LDR X0, [X0 + 0xF68]
	0x031EE470 BL 0x1C16D08
	0x031EE474 MOV X1, X0
	0x031EE478 MOV X0, X21
	0x031EE47C MOV X2, X31
	0x031EE480 BL 0x321BA08
	0x031EE484 ADRP X0, 0xF32000
	0x031EE488 LDR X0, [X0 + 0xCE0]
	0x031EE48C BL 0x1C16D08
	0x031EE490 BL 0x1C16F10
	0x031EE494 MOV X20, X0
	0x031EE498 ADRP X0, 0xF32000
	0x031EE49C LDR X0, [X0 + 0xF70]
	0x031EE4A0 BL 0x1C16D08
	0x031EE4A4 MOV X1, X0
	0x031EE4A8 MOV X0, X20
	0x031EE4AC MOV X2, X31
	0x031EE4B0 BL 0x3252170
	0x031EE4B4 ADRP X0, 0xF32000
	0x031EE4B8 LDR X0, [X0 + 0xF78]
	0x031EE4BC BL 0x1C16D08
	0x031EE4C0 MOV X1, X0
	0x031EE4C4 MOV X0, X20
	0x031EE4C8 BL 0x1C16DEC
	0x031EE4CC BL 0x1C16F20
	0x031EE4D0 B 0x31EE4F0
	0x031EE4D4 B 0x31EE4F0
	0x031EE4D8 B 0x31EE4F0
	0x031EE4DC B 0x31EE4F0
	0x031EE4E0 B 0x31EE4F0
	0x031EE4E4 B 0x31EE4F0
	0x031EE4E8 B 0x31EE4F0
	0x031EE4EC B 0x31EE4F0
	0x031EE4F0 MOV X20, X0
	0x031EE4F4 CMP W1, 0x1
	0x031EE4F8 B.NE 0x31EE510
	0x031EE4FC MOV X0, X20
	0x031EE500 BL 0x3EB1AD0
	0x031EE504 LDR X21, [X0]
	0x031EE508 BL 0x3EB1AE0
	0x031EE50C B 0x31EE428
	0x031EE510 MOV X21, X31
	0x031EE514 B 0x31EE51C
	0x031EE518 MOV X20, X0
	0x031EE51C CBNZ X19, 0x31EE524
	0x031EE520 BL 0x1C16F20
	0x031EE524 LDR W2, [X19 + 0x18]
	0x031EE528 MOV X0, X19
	0x031EE52C MOV W1, W31
	0x031EE530 MOV X3, X31
	0x031EE534 BL 0x339FA34
	0x031EE538 CBNZ X21, 0x31EE544
	0x031EE53C MOV X0, X20
	0x031EE540 BL 0x1D2C690
	0x031EE544 MOV X0, X21
	0x031EE548 BL 0x1C16F18
	0x031EE54C BL 0x1990590
	0x031EE550 SUB X31, X31, 0x70
	0x031EE554 STP X29, X30, [X31 + 0x10]
	0x031EE558 STP X28, X27, [X31 + 0x20]
	0x031EE55C STP X26, X25, [X31 + 0x30]
	0x031EE560 STP X24, X23, [X31 + 0x40]
	0x031EE564 STP X22, X21, [X31 + 0x50]
	0x031EE568 STP X20, X19, [X31 + 0x60]
	0x031EE56C ADRP X20, 0x11EE000
	0x031EE570 LDRB W8, [X20 + 0x184]
	0x031EE574 MOV X21, X2
	0x031EE578 MOV X19, X1
	0x031EE57C TBNZ X8, 0x0, 0x31EE624
	0x031EE580 ADRP X0, 0xF32000
	0x031EE584 LDR X0, [X0 + 0xB98]
	0x031EE588 BL 0x1C16CF4
	0x031EE58C ADRP X0, 0xF32000
	0x031EE590 LDR X0, [X0 + 0xBA0]
	0x031EE594 BL 0x1C16CF4
	0x031EE598 ADRP X0, 0xF05000
	0x031EE59C LDR X0, [X0 + 0x618]
	0x031EE5A0 BL 0x1C16CF4
	0x031EE5A4 ADRP X0, 0xF32000
	0x031EE5A8 LDR X0, [X0 + 0xC70]
	0x031EE5AC BL 0x1C16CF4
	0x031EE5B0 ADRP X0, 0xF32000
	0x031EE5B4 LDR X0, [X0 + 0xF80]
	0x031EE5B8 BL 0x1C16CF4
	0x031EE5BC ADRP X0, 0xF05000
	0x031EE5C0 LDR X0, [X0 + 0x818]
	0x031EE5C4 BL 0x1C16CF4
	0x031EE5C8 ADRP X0, 0xF05000
	0x031EE5CC LDR X0, [X0 + 0xE00]
	0x031EE5D0 BL 0x1C16CF4
	0x031EE5D4 ADRP X0, 0xF05000
	0x031EE5D8 LDR X0, [X0 + 0xE18]
	0x031EE5DC BL 0x1C16CF4
	0x031EE5E0 ADRP X0, 0xF07000
	0x031EE5E4 LDR X0, [X0 + 0x278]
	0x031EE5E8 BL 0x1C16CF4
	0x031EE5EC ADRP X0, 0xF32000
	0x031EE5F0 LDR X0, [X0 + 0xE10]
	0x031EE5F4 BL 0x1C16CF4
	0x031EE5F8 ADRP X0, 0xF32000
	0x031EE5FC LDR X0, [X0 + 0xE38]
	0x031EE600 BL 0x1C16CF4
	0x031EE604 ADRP X0, 0xF32000
	0x031EE608 LDR X0, [X0 + 0xE40]
	0x031EE60C BL 0x1C16CF4
	0x031EE610 ADRP X0, 0xF32000
	0x031EE614 LDR X0, [X0 + 0xE50]
	0x031EE618 BL 0x1C16CF4
	0x031EE61C MOVZ W8, 0x1
	0x031EE620 STRB W8, [X20 + 0x184]
	0x031EE624 CBZ X19, 0x31EEFD8
	0x031EE628 LDR X8, [X19]
	0x031EE62C ADRP X28, 0xF32000
	0x031EE630 ADRP X22, 0xF32000
	0x031EE634 MOV X0, X19
	0x031EE638 LDP X9, X1, [X8 + 0x1F8]
	0x031EE63C LDR X28, [X28 + 0xB98]
	0x031EE640 LDR X22, [X22 + 0xC70]
	0x031EE644 BLR X9
	0x031EE648 LDR X8, [X28]
	0x031EE64C MOV X19, X0
	0x031EE650 MOV X0, X8
	0x031EE654 BL 0x1C16F10
	0x031EE658 MOV X1, X31
	0x031EE65C MOV X20, X0
	0x031EE660 BL 0x33BDD8C
	0x031EE664 MOVZ W8, 0x4
	0x031EE668 STRB W8, [X20 + 0x10]
	0x031EE66C STR X19, [X20 + 0x18]
	0x031EE670 LDR X0, [X22]
	0x031EE674 BL 0x1C16F10
	0x031EE678 MOV X19, X0
	0x031EE67C BL 0x31E9B58
	0x031EE680 CBZ X19, 0x31EEFD8
	0x031EE684 ADRP X8, 0xF32000
	0x031EE688 LDR X8, [X8 + 0xE38]
	0x031EE68C LDR X0, [X19 + 0x18]
	0x031EE690 LDR X8, [X8]
	0x031EE694 STR X8, [X19 + 0x10]
	0x031EE698 CBZ X0, 0x31EEFD8
	0x031EE69C ADRP X22, 0xF32000
	0x031EE6A0 LDR X22, [X22 + 0xE50]
	0x031EE6A4 MOV X1, X20
	0x031EE6A8 BL 0x31E7ED0
	0x031EE6AC LDR X0, [X28]
	0x031EE6B0 BL 0x1C16F10
	0x031EE6B4 MOV X1, X31
	0x031EE6B8 MOV X20, X0
	0x031EE6BC BL 0x33BDD8C
	0x031EE6C0 MOVZ W8, 0xA0
	0x031EE6C4 MOV X0, X19
	0x031EE6C8 STRB W8, [X20 + 0x10]
	0x031EE6CC STR X31, [X20 + 0x18]
	0x031EE6D0 BL 0x31E9DD4
	0x031EE6D4 MOV X1, X0
	0x031EE6D8 MOV X0, X20
	0x031EE6DC BL 0x31E7ED0
	0x031EE6E0 LDR X0, [X28]
	0x031EE6E4 BL 0x1C16F10
	0x031EE6E8 MOV X1, X31
	0x031EE6EC MOV X19, X0
	0x031EE6F0 BL 0x33BDD8C
	0x031EE6F4 MOVZ W8, 0x30
	0x031EE6F8 STRB W8, [X19 + 0x10]
	0x031EE6FC STR X31, [X19 + 0x18]
	0x031EE700 LDR X0, [X22]
	0x031EE704 BL 0x31E8DA0
	0x031EE708 MOV X1, X0
	0x031EE70C MOV X0, X19
	0x031EE710 BL 0x31E7ED0
	0x031EE714 MOV X0, X19
	0x031EE718 MOV X1, X20
	0x031EE71C STR X19, [X31]
	0x031EE720 BL 0x31E7ED0
	0x031EE724 CBZ X21, 0x31EEFAC
	0x031EE728 LDR X0, [X28]
	0x031EE72C ADRP X19, 0xF05000
	0x031EE730 LDR X19, [X19 + 0x818]
	0x031EE734 BL 0x1C16F10
	0x031EE738 MOV X1, X31
	0x031EE73C MOV X23, X0
	0x031EE740 BL 0x33BDD8C
	0x031EE744 MOVZ W8, 0x31
	0x031EE748 STRB W8, [X23 + 0x10]
	0x031EE74C STR X31, [X23 + 0x18]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X19, 0x11EF000
	009 Move X24, 0xF33000
	010 Move W8, [X19+382]
	011 Move X24, [X24+3560]
	012 Move W21, W3
	013 Move X22, X2
	014 Move X20, X1
	015 Move X23, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {82}
	020 Move X0, 0xF33000
	021 Move X0, [X0+3560]
	022 Call 0x1C17CF4
	023 Move X0, 0xF33000
	024 Move X0, [X0+3752]
	025 Call 0x1C17CF4
	026 Move X0, 0xF33000
	027 Move X0, [X0+3760]
	028 Call 0x1C17CF4
	029 Move X0, 0xF33000
	030 Move X0, [X0+3768]
	031 Call 0x1C17CF4
	032 Move X0, 0xF33000
	033 Move X0, [X0+3392]
	034 Call 0x1C17CF4
	035 Move X0, 0xF33000
	036 Move X0, [X0+3776]
	037 Call 0x1C17CF4
	038 Move X0, 0xF33000
	039 Move X0, [X0+3784]
	040 Call 0x1C17CF4
	041 Move X0, 0xF33000
	042 Move X0, [X0+3792]
	043 Call 0x1C17CF4
	044 Move X0, 0xF33000
	045 Move X0, [X0+3800]
	046 Call 0x1C17CF4
	047 Move X0, 0xF33000
	048 Move X0, [X0+3808]
	049 Call 0x1C17CF4
	050 Move X0, 0xF33000
	051 Move X0, [X0+3816]
	052 Call 0x1C17CF4
	053 Move X0, 0xF33000
	054 Move X0, [X0+3824]
	055 Call 0x1C17CF4
	056 Move X0, 0xF33000
	057 Move X0, [X0+3832]
	058 Call 0x1C17CF4
	059 Move X0, 0xF33000
	060 Move X0, [X0+3400]
	061 Call 0x1C17CF4
	062 Move X0, 0xF33000
	063 Move X0, [X0+3840]
	064 Call 0x1C17CF4
	065 Move X0, 0xF33000
	066 Move X0, [X0+3848]
	067 Call 0x1C17CF4
	068 Move X0, 0xF33000
	069 Move X0, [X0+3856]
	070 Call 0x1C17CF4
	071 Move X0, 0xF33000
	072 Move X0, [X0+3408]
	073 Call 0x1C17CF4
	074 Move X0, 0xF33000
	075 Move X0, [X0+3864]
	076 Call 0x1C17CF4
	077 Move X0, 0xF33000
	078 Move X0, [X0+3872]
	079 Call 0x1C17CF4
	080 Move W8, 1
	081 Move [X19+382], W8
	082 Move X0, [X24]
	083 Call 0x1C17F10
	084 Move X1, X31
	085 Move X19, X0
	086 Call Object..ctor, X0
	087 Compare X19, 0
	088 JumpIfEqual {360}
	089 Move X1, [X23+16]
	090 Move X0, X19
	091 Call DeriveBytes.set_Password, X0, X1
	092 Move X0, X19
	093 Move X1, X22
	094 Call DeriveBytes.set_Salt, X0, X1
	095 Move X0, X20
	096 Move X1, X31
	097 Move [X19+24], W21
	098 Call <PrivateImplementationDetails>.ComputeStringHash, X0
	099 Move W8, 0xB8EC
	100 NotImplemented "Instruction MOVK not yet implemented."
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Move W8, 0xB2A0
	103 NotImplemented "Instruction MOVK not yet implemented."
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Move W8, 0xDED8
	106 NotImplemented "Instruction MOVK not yet implemented."
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Move W8, 0xE06B
	109 NotImplemented "Instruction MOVK not yet implemented."
	110 NotImplemented "Instruction CMP not yet implemented."
	111 Move X8, 0xF33000
	112 Move X8, [X8+3752]
	113 Move X0, X20
	114 Move X2, X31
	115 Move X1, [X8]
	116 Call String.op_Equality, X0, X1
	117 Move TEMP, X0
	118 And TEMP, TEMP, 1
	119 Compare TEMP, 1
	120 JumpIfNotEqual {361}
	121 Move X8, 0xF33000
	122 Move X8, [X8+3864]
	123 Move W21, 4
	124 Move W8, 0x4CF8
	125 NotImplemented "Instruction MOVK not yet implemented."
	126 NotImplemented "Instruction CMP not yet implemented."
	127 Move W8, 0xBA7F
	128 NotImplemented "Instruction MOVK not yet implemented."
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Move W8, 0xBDA5
	131 NotImplemented "Instruction MOVK not yet implemented."
	132 NotImplemented "Instruction CMP not yet implemented."
	133 Move W8, 0x4CF8
	134 NotImplemented "Instruction MOVK not yet implemented."
	135 NotImplemented "Instruction CMP not yet implemented."
	136 Move X8, 0xF33000
	137 Move X8, [X8+3872]
	138 Move X0, X20
	139 Move X2, X31
	140 Move X1, [X8]
	141 Call String.op_Equality, X0, X1
	142 Move TEMP, X0
	143 And TEMP, TEMP, 1
	144 Compare TEMP, 1
	145 JumpIfNotEqual {361}
	146 Move X8, 0xF33000
	147 Move X9, 0xF33000
	148 Move X8, [X8+3832]
	149 Move X9, [X9+3400]
	150 Move W8, 0xB5C6
	151 NotImplemented "Instruction MOVK not yet implemented."
	152 NotImplemented "Instruction CMP not yet implemented."
	153 Move W8, 0xB759
	154 NotImplemented "Instruction MOVK not yet implemented."
	155 NotImplemented "Instruction CMP not yet implemented."
	156 Move W8, 0xB8EC
	157 NotImplemented "Instruction MOVK not yet implemented."
	158 NotImplemented "Instruction CMP not yet implemented."
	159 Move X8, 0xF33000
	160 Move X8, [X8+3816]
	161 Move X0, X20
	162 Move X2, X31
	163 Move X1, [X8]
	164 Call String.op_Equality, X0, X1
	165 Move TEMP, X0
	166 And TEMP, TEMP, 1
	167 Compare TEMP, 1
	168 JumpIfNotEqual {361}
	169 Move X8, 0xF33000
	170 Move X9, 0xF33000
	171 Move X8, [X8+3760]
	172 Move X9, [X9+3392]
	173 Move W23, W31
	174 Move W20, W31
	175 Move W21, 5
	176 Move W8, 0x501E
	177 NotImplemented "Instruction MOVK not yet implemented."
	178 NotImplemented "Instruction CMP not yet implemented."
	179 Move W8, 0x54D7
	180 NotImplemented "Instruction MOVK not yet implemented."
	181 NotImplemented "Instruction CMP not yet implemented."
	182 Move W8, 0x57FD
	183 NotImplemented "Instruction MOVK not yet implemented."
	184 NotImplemented "Instruction CMP not yet implemented."
	185 Move X8, 0xF33000
	186 Move X8, [X8+3856]
	187 Move X0, X20
	188 Move X2, X31
	189 Move X1, [X8]
	190 Call String.op_Equality, X0, X1
	191 Move TEMP, X0
	192 And TEMP, TEMP, 1
	193 Compare TEMP, 1
	194 JumpIfNotEqual {361}
	195 Move X8, 0xF33000
	196 Move X9, 0xF33000
	197 Move X8, [X8+3864]
	198 Move X9, [X9+3408]
	199 Move X8, 0xF33000
	200 Move X8, [X8+3848]
	201 Move X0, X20
	202 Move X2, X31
	203 Move X1, [X8]
	204 Call String.op_Equality, X0, X1
	205 Move TEMP, X0
	206 And TEMP, TEMP, 1
	207 Compare TEMP, 1
	208 JumpIfNotEqual {361}
	209 Move X8, 0xF33000
	210 Move X8, [X8+3864]
	211 Move W21, 5
	212 Move X8, 0xF33000
	213 Move X8, [X8+3808]
	214 Move X0, X20
	215 Move X2, X31
	216 Move X1, [X8]
	217 Call String.op_Equality, X0, X1
	218 Move TEMP, X0
	219 And TEMP, TEMP, 1
	220 Compare TEMP, 1
	221 JumpIfNotEqual {361}
	222 Move X8, 0xF33000
	223 Move X9, 0xF33000
	224 Move X8, [X8+3832]
	225 Move X9, [X9+3392]
	226 Move X8, 0xF33000
	227 Move X8, [X8+3768]
	228 Move X0, X20
	229 Move X2, X31
	230 Move X1, [X8]
	231 Call String.op_Equality, X0, X1
	232 Move TEMP, X0
	233 And TEMP, TEMP, 1
	234 Compare TEMP, 1
	235 JumpIfNotEqual {361}
	236 Move X8, 0xF33000
	237 Move X8, [X8+3776]
	238 Move W21, 24
	239 Move X8, 0xF33000
	240 Move X8, [X8+3824]
	241 Move X0, X20
	242 Move X2, X31
	243 Move X1, [X8]
	244 Call String.op_Equality, X0, X1
	245 Move TEMP, X0
	246 And TEMP, TEMP, 1
	247 Compare TEMP, 1
	248 JumpIfNotEqual {361}
	249 Move X8, 0xF33000
	250 Move X9, 0xF33000
	251 Move X8, [X8+3760]
	252 Move X9, [X9+3392]
	253 Move W23, W31
	254 Move W20, W31
	255 Move W21, 16
	256 Move X8, 0xF33000
	257 Move X8, [X8+3784]
	258 Move X0, X20
	259 Move X2, X31
	260 Move X1, [X8]
	261 Call String.op_Equality, X0, X1
	262 Move TEMP, X0
	263 And TEMP, TEMP, 1
	264 Compare TEMP, 1
	265 JumpIfNotEqual {361}
	266 Move X8, 0xF33000
	267 Move X8, [X8+3776]
	268 Move X8, 0xF33000
	269 Move X8, [X8+3800]
	270 Move X0, X20
	271 Move X2, X31
	272 Move X1, [X8]
	273 Call String.op_Equality, X0, X1
	274 Move TEMP, X0
	275 And TEMP, TEMP, 1
	276 Compare TEMP, 1
	277 JumpIfNotEqual {361}
	278 Move X8, 0xF33000
	279 Move X8, [X8+3864]
	280 Move W21, 16
	281 Move X9, 0xF33000
	282 Move X9, [X9+3392]
	283 Move X8, 0xF33000
	284 Move X8, [X8+3840]
	285 Move X0, X20
	286 Move X2, X31
	287 Move X1, [X8]
	288 Call String.op_Equality, X0, X1
	289 Move TEMP, X0
	290 And TEMP, TEMP, 1
	291 Compare TEMP, 1
	292 JumpIfNotEqual {361}
	293 Move X8, 0xF33000
	294 Move X9, 0xF33000
	295 Move X8, [X8+3832]
	296 Move X9, [X9+3408]
	297 Move W20, 8
	298 Move W23, 1
	299 Move W21, 8
	300 Move X8, 0xF33000
	301 Move X8, [X8+3792]
	302 Move X0, X20
	303 Move X2, X31
	304 Move X1, [X8]
	305 Call String.op_Equality, X0, X1
	306 Move TEMP, X0
	307 And TEMP, TEMP, 1
	308 Compare TEMP, 1
	309 JumpIfNotEqual {361}
	310 Move X8, 0xF33000
	311 Move X9, 0xF33000
	312 Move X8, [X8+3864]
	313 Move X9, [X9+3400]
	314 Move W21, 4
	315 Move W20, 8
	316 Move W23, 1
	317 Move X9, [X9]
	318 Move X1, X31
	319 Move [X19+16], X9
	320 Move X0, [X8]
	321 Call SymmetricAlgorithm.Create, X0
	322 Move X22, X0
	323 Move X0, X19
	324 Move W1, W21
	325 Call DeriveBytes.DeriveKey, X0, X1
	326 Compare X22, 0
	327 JumpIfEqual {360}
	328 Move X8, [X22]
	329 Move X1, X0
	330 Move X0, X22
	331 Move X9, [X8+504]
	332 Move X2, [X8+512]
	333 NotImplemented "Instruction BLR not yet implemented."
	334 Compare W23, 0
	335 JumpIfEqual {351}
	336 Move X0, X19
	337 Move W1, W20
	338 Call DeriveBytes.DeriveIV, X0, X1
	339 Move X8, [X22]
	340 Move X1, X0
	341 Move X0, X22
	342 Move X9, [X8+472]
	343 Move X2, [X8+480]
	344 NotImplemented "Instruction BLR not yet implemented."
	345 Move X8, [X22]
	346 Move W1, 1
	347 Move X0, X22
	348 Move X9, [X8+584]
	349 Move X2, [X8+592]
	350 NotImplemented "Instruction BLR not yet implemented."
	351 Move X0, X22
	352 Move X20, [X31+48]
	353 Move X19, [X31+56]
	354 Move X22, [X31+32]
	355 Move X21, [X31+40]
	356 Move X24, [X31+16]
	357 Move X23, [X31+24]
	358 Move X30, [X31+64]
	359 Return X0
	360 Call 0x1C17F20
	361 Move X0, 0xF33000
	362 Move X0, [X0+3880]
	363 Call 0x1C17D08
	364 Move X1, X31
	365 Move X2, X31
	366 Call String.Concat, X0, X1
	367 Move X19, X0
	368 Move X0, 0xF06000
	369 Move X0, [X0+2880]
	370 Call 0x1C17D08
	371 Call 0x1C17F10
	372 Move X1, X19
	373 Move X2, X31
	374 Move X20, X0
	375 Call NotSupportedException..ctor, X0, X1
	376 Move X0, 0xF33000
	377 Move X0, [X0+3888]
	378 Call 0x1C17D08
	379 Move X1, X0
	380 Move X0, X20
	381 Call 0x1C17DEC

Method: System.Byte[] Decrypt(System.String algorithmOid, System.Byte[] salt, System.Int32 iterationCount, System.Byte[] encryptedData)

Disassembly:
	0x031EDBAC MOV X0, X19
	0x031EDBB0 MOV W2, W31
	0x031EDBB4 BL 0x1C5C788
	0x031EDBB8 B 0x31EDBC8
	0x031EDBBC LDRSW X9, [X10]
	0x031EDBC0 ADD X8, X8, X9, 0x4, LSL
	0x031EDBC4 ADD X0, X8, 0x138
	0x031EDBC8 LDP X8, X1, [X0]
	0x031EDBCC MOV X0, X19
	0x031EDBD0 BLR X8
	0x031EDBD4 CBNZ X20, 0x31EDBE0
	0x031EDBD8 MOV X0, X21
	0x031EDBDC BL 0x1D2C690
	0x031EDBE0 MOV X0, X20
	0x031EDBE4 BL 0x1C16F18
	0x031EDBE8 BL 0x1990590
	0x031EDBEC SUB X31, X31, 0xC0
	0x031EDBF0 STR X30, [X31 + 0x80]
	0x031EDBF4 STP X24, X23, [X31 + 0x90]
	0x031EDBF8 STP X22, X21, [X31 + 0xA0]
	0x031EDBFC STP X20, X19, [X31 + 0xB0]
	0x031EDC00 ADRP X22, 0x11EF000
	0x031EDC04 LDRB W9, [X22 + 0x181]
	0x031EDC08 MOV X20, X1
	0x031EDC0C MOV X21, X0
	0x031EDC10 MOV X19, X8
	0x031EDC14 TBNZ X9, 0x0, 0x31EDC2C
	0x031EDC18 ADRP X0, 0xF06000
	0x031EDC1C LDR X0, [X0 + 0xE00]
	0x031EDC20 BL 0x1C16CF4
	0x031EDC24 MOVZ W8, 0x1
	0x031EDC28 STRB W8, [X22 + 0x181]
	0x031EDC2C MOVI V0.2D, 0x0
	0x031EDC30 MOV X0, X21
	0x031EDC34 STP V0, V0, [X31 + 0x60]
	0x031EDC38 STP V0, V0, [X31 + 0x40]
	0x031EDC3C BL 0x31ECD5C
	0x031EDC40 CBZ X0, 0x31EDD98
	0x031EDC44 ADRP X24, 0xF06000
	0x031EDC48 LDR X24, [X24 + 0xE00]
	0x031EDC4C BL 0x31EDE74
	0x031EDC50 MOV X21, X0
	0x031EDC54 CBZ X0, 0x31EDD9C
	0x031EDC58 MOV X0, X21
	0x031EDC5C BL 0x31EE254
	0x031EDC60 TBZ X0, 0x0, 0x31EDCCC
	0x031EDC64 MOV X0, X21
	0x031EDC68 BL 0x31EDECC
	0x031EDC6C MOV X22, X0
	0x031EDC70 CBZ X0, 0x31EDD94
	0x031EDC74 LDR X8, [X22]
	0x031EDC78 LDP X9, X1, [X8 + 0x1A8]
	0x031EDC7C MOV X0, X22
	0x031EDC80 BLR X9
	0x031EDC84 CBZ X0, 0x31EDC58
	0x031EDC88 MOV X0, X22
	0x031EDC8C BL 0x31EDFBC
	0x031EDC90 CBZ X0, 0x31EDC58
	0x031EDC94 MOVZ W8, 0x1
	0x031EDC98 STRB W8, [X20]
	0x031EDC9C LDR X8, [X0]
	0x031EDCA0 LDP X9, X2, [X8 + 0x1E8]
	0x031EDCA4 ADD X8, X31, 0x0
	0x031EDCA8 MOV W1, W31
	0x031EDCAC BLR X9
	0x031EDCB0 LDP V0, V1, [X31]
	0x031EDCB4 LDP V2, V3, [X31 + 0x20]
	0x031EDCB8 MOV X22, X31
	0x031EDCBC MOVZ W23, 0x4
	0x031EDCC0 STP V0, V1, [X31 + 0x40]
	0x031EDCC4 STP V2, V3, [X31 + 0x60]
	0x031EDCC8 B 0x31EDCD4
	0x031EDCCC MOV X22, X31
	0x031EDCD0 MOVZ W23, 0x5
	0x031EDCD4 LDR X1, [X24]
	0x031EDCD8 MOV X0, X21
	0x031EDCDC BL 0x1C16E00
	0x031EDCE0 CBZ X0, 0x31EDD40
	0x031EDCE4 LDR X8, [X0]
	0x031EDCE8 LDR X1, [X24]
	0x031EDCEC MOV X21, X0
	0x031EDCF0 LDRH W9, [X8 + 0x12E]
	0x031EDCF4 CBZ X9, 0x31EDD18
	0x031EDCF8 LDR X10, [X8 + 0xB0]
	0x031EDCFC ADD X10, X10, 0x8
	0x031EDD00 LDUR X11, [X10 - 0x8]
	0x031EDD04 CMP X11, X1
	0x031EDD08 B.EQ 0x31EDD28
	0x031EDD0C SUBS X9, X9, 0x1
	0x031EDD10 ADD X10, X10, 0x10
	0x031EDD14 B.NE 0x31EDD00
	0x031EDD18 MOV X0, X21
	0x031EDD1C MOV W2, W31
	0x031EDD20 BL 0x1C5C788
	0x031EDD24 B 0x31EDD34
	0x031EDD28 LDRSW X9, [X10]
	0x031EDD2C ADD X8, X8, X9, 0x4, LSL
	0x031EDD30 ADD X0, X8, 0x138
	0x031EDD34 LDP X8, X1, [X0]
	0x031EDD38 MOV X0, X21
	0x031EDD3C BLR X8
	0x031EDD40 CBNZ X22, 0x31EDDA0
	0x031EDD44 CMP W23, 0x5
	0x031EDD48 B.EQ 0x31EDD58
	0x031EDD4C CMP W23, 0x4
	0x031EDD50 B.EQ 0x31EDD6C
	0x031EDD54 CBNZ W23, 0x31EDD7C
	0x031EDD58 MOVI V0.2D, 0x0

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x11F0000
	009 Move W8, [X24+383]
	010 Move X20, X4
	011 Move W19, W3
	012 Move X21, X2
	013 Move X22, X1
	014 Move X23, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0xF34000
	020 Move X0, [X0+3744]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X24+383], W8
	024 Move X0, X23
	025 Move X1, X22
	026 Move X2, X21
	027 Move W3, W19
	028 Call PKCS12.GetSymmetricAlgorithm, X0, X1, X2, X3
	029 Move X19, X0
	030 Compare X0, 0
	031 JumpIfEqual {90}
	032 Move X8, [X19]
	033 Move X1, [X8+672]
	034 Move X9, [X8+664]
	035 Move X0, X19
	036 NotImplemented "Instruction BLR not yet implemented."
	037 Compare X20, 0
	038 JumpIfEqual {91}
	039 Move X21, X0
	040 Compare X0, 0
	041 JumpIfEqual {92}
	042 Move X9, 0xF34000
	043 Move X8, [X21]
	044 Move X9, [X9+3744]
	045 Move W22, [X20+24]
	046 Move X1, [X9]
	047 NotImplemented "Instruction LDRH not yet implemented."
	048 Compare X9, 0
	049 JumpIfEqual {56}
	050 Move X10, [X8+176]
	051 Add X10, X10, 8
	052 NotImplemented "Instruction LDUR not yet implemented."
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Subtract X9, X9, 1
	055 Add X10, X10, 16
	056 Move W2, 4
	057 Move X0, X21
	058 Call 0x1C5D788
	059 Move W9, [X10]
	060 Add W9, W9, 4
	061 Add X8, X8, W9
	062 Add X0, X8, 312
	063 Move X8, [X0]
	064 Move X4, [X0+8]
	065 Move X0, X21
	066 Move X1, X20
	067 Move W2, W31
	068 Move W3, W22
	069 NotImplemented "Instruction BLR not yet implemented."
	070 Move X20, X0
	071 Move X21, X31
	072 Compare X19, 0
	073 JumpIfEqual {77}
	074 Move X0, X19
	075 Move X1, X31
	076 Call SymmetricAlgorithm.Clear, X0
	077 Compare X21, 0
	078 JumpIfNotEqual {88}
	079 Move X0, X20
	080 Move X20, [X31+48]
	081 Move X19, [X31+56]
	082 Move X22, [X31+32]
	083 Move X21, [X31+40]
	084 Move X24, [X31+16]
	085 Move X23, [X31+24]
	086 Move X30, [X31+64]
	087 Return X0
	088 Move X0, X21
	089 Call 0x1C17F18
	090 Call 0x1C17F20
	091 Call 0x1C17F20
	092 Call 0x1C17F20
	093 Move X20, X0
	094 Move X19, X31
	095 Move X20, X0
	096 NotImplemented "Instruction CMP not yet implemented."
	097 Move X0, X20
	098 Call 0x3EB2AD0
	099 Move X21, [X0]
	100 Call 0x3EB2AE0
	101 Move X20, X31
	102 Compare X19, 0
	103 JumpIfNotEqual {74}
	104 Move X21, X31
	105 Move X20, X0
	106 Compare X19, 0
	107 JumpIfEqual {111}
	108 Move X0, X19
	109 Move X1, X31
	110 Call SymmetricAlgorithm.Clear, X0
	111 Compare X21, 0
	112 JumpIfNotEqual {115}
	113 Move X0, X20
	114 Call 0x1D2D690
	115 Move X0, X21
	116 Call 0x1C17F18
	117 Call 0x1991590

Method: System.Byte[] Decrypt(Mono.Security.PKCS7/EncryptedData ed)

Disassembly:
	0x031ED35C MOVZ W8, 0xE06B
	0x031ED360 MOVK W8, 0x4F590000
	0x031ED364 CMP W0, W8
	0x031ED368 B.NE 0x31ED6FC
	0x031ED36C ADRP X8, 0xF33000
	0x031ED370 LDR X8, [X8 + 0xEA8]
	0x031ED374 MOV X0, X20
	0x031ED378 MOV X2, X31
	0x031ED37C LDR X1, [X8]
	0x031ED380 BL 0x321BA08
	0x031ED384 TBZ X0, 0x0, 0x31ED6FC
	0x031ED388 ADRP X8, 0xF33000
	0x031ED38C LDR X8, [X8 + 0xF18]
	0x031ED390 MOVZ W21, 0x4
	0x031ED394 B 0x31ED5E8
	0x031ED398 MOVZ W8, 0x4CF8
	0x031ED39C MOVK W8, 0xD33B0000
	0x031ED3A0 CMP W0, W8
	0x031ED3A4 B.HI 0x31ED474
	0x031ED3A8 MOVZ W8, 0xBA7F
	0x031ED3AC MOVK W8, 0xB0D20000
	0x031ED3B0 CMP W0, W8
	0x031ED3B4 B.EQ 0x31ED530
	0x031ED3B8 MOVZ W8, 0xBDA5
	0x031ED3BC MOVK W8, 0xB2D20000
	0x031ED3C0 CMP W0, W8
	0x031ED3C4 B.EQ 0x31ED55C
	0x031ED3C8 MOVZ W8, 0x4CF8
	0x031ED3CC MOVK W8, 0xD33B0000
	0x031ED3D0 CMP W0, W8
	0x031ED3D4 B.NE 0x31ED6FC
	0x031ED3D8 ADRP X8, 0xF33000
	0x031ED3DC LDR X8, [X8 + 0xF20]
	0x031ED3E0 MOV X0, X20
	0x031ED3E4 MOV X2, X31
	0x031ED3E8 LDR X1, [X8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Compare X1, 0
	008 JumpIfEqual {49}
	009 Move X8, [X1+32]
	010 Move X20, X1
	011 Compare X8, 0
	012 JumpIfEqual {49}
	013 Move X19, X0
	014 Move X0, [X8+24]
	015 Compare X0, 0
	016 JumpIfEqual {49}
	017 Move X21, [X8+16]
	018 Move W1, W31
	019 Call ASN1.get_Item, X0, X1
	020 Compare X0, 0
	021 JumpIfEqual {49}
	022 Call ASN1.get_Value, X0
	023 Move X8, [X20+32]
	024 Compare X8, 0
	025 JumpIfEqual {49}
	026 Move X22, X0
	027 Move X0, [X8+24]
	028 Compare X0, 0
	029 JumpIfEqual {49}
	030 Move W1, 1
	031 Call ASN1.get_Item, X0, X1
	032 Call ASN1Convert.ToInt32, X0
	033 Move W23, W0
	034 Move X0, X20
	035 Call EncryptedData.get_EncryptedContent, X0
	036 Move X4, X0
	037 Move X0, X19
	038 Move X1, X21
	039 Move X2, X22
	040 Move X20, [X31+32]
	041 Move X19, [X31+40]
	042 Move X22, [X31+16]
	043 Move X21, [X31+24]
	044 Move W3, W23
	045 Move X30, [X31+48]
	046 Move X23, [X31+56]
	047 Call PKCS12.Decrypt, X0, X1, X2, X3, X4
	048 Return X0
	049 Call 0x1C17F20

Method: System.Byte[] Encrypt(System.String algorithmOid, System.Byte[] salt, System.Int32 iterationCount, System.Byte[] data)

Disassembly:
	0x031EE99C MOV X24, X0
	0x031EE9A0 LDRB W10, [X8 + 0x130]
	0x031EE9A4 LDR X1, [X9]
	0x031EE9A8 LDRB W9, [X1 + 0x130]
	0x031EE9AC CMP W10, W9
	0x031EE9B0 B.CC 0x31EEFD0
	0x031EE9B4 LDR X8, [X8 + 0xC8]
	0x031EE9B8 ADD X8, X8, X9, 0x3, LSL
	0x031EE9BC LDUR X8, [X8 - 0x8]
	0x031EE9C0 CMP X8, X1
	0x031EE9C4 B.NE 0x31EEFD0
	0x031EE9C8 LDR X8, [X24]
	0x031EE9CC MOV X0, X24
	0x031EE9D0 LDR X9, [X8 + 0x298]
	0x031EE9D4 LDR X1, [X8 + 0x2A0]
	0x031EE9D8 BLR X9
	0x031EE9DC CMP W0, 0x1
	0x031EE9E0 B.LT 0x31EE7CC
	0x031EE9E4 LDR X0, [X28]
	0x031EE9E8 BL 0x1C16F10
	0x031EE9EC MOV X1, X31
	0x031EE9F0 MOV X22, X0
	0x031EE9F4 BL 0x33BDD8C
	0x031EE9F8 MOVZ W8, 0x30
	0x031EE9FC STRB W8, [X22 + 0x10]
	0x031EEA00 STR X31, [X22 + 0x18]
	0x031EEA04 ADRP X8, 0xF32000
	0x031EEA08 LDR X8, [X8 + 0xE10]
	0x031EEA0C LDR X0, [X8]
	0x031EEA10 BL 0x31E8DA0
	0x031EEA14 MOV X1, X0
	0x031EEA18 MOV X0, X22
	0x031EEA1C BL 0x31E7ED0
	0x031EEA20 LDR X0, [X28]
	0x031EEA24 BL 0x1C16F10
	0x031EEA28 MOV X1, X31
	0x031EEA2C MOV X23, X0
	0x031EEA30 BL 0x33BDD8C
	0x031EEA34 MOVZ W8, 0x31
	0x031EEA38 STRB W8, [X23 + 0x10]
	0x031EEA3C STR X31, [X23 + 0x18]
	0x031EEA40 LDR X8, [X24]
	0x031EEA44 MOV X0, X24
	0x031EEA48 LDR X9, [X8 + 0x388]
	0x031EEA4C LDR X1, [X8 + 0x390]
	0x031EEA50 BLR X9
	0x031EEA54 MOV X24, X0
	0x031EEA58 CBZ X0, 0x31EEF00
	0x031EEA5C LDR X8, [X24]
	0x031EEA60 LDR X1, [X29]
	0x031EEA64 LDRH W9, [X8 + 0x12E]
	0x031EEA68 CBZ X9, 0x31EEA8C
	0x031EEA6C LDR X10, [X8 + 0xB0]
	0x031EEA70 ADD X10, X10, 0x8
	0x031EEA74 LDUR X11, [X10 - 0x8]
	0x031EEA78 CMP X11, X1
	0x031EEA7C B.EQ 0x31EEA9C
	0x031EEA80 SUBS X9, X9, 0x1
	0x031EEA84 ADD X10, X10, 0x10
	0x031EEA88 B.NE 0x31EEA74
	0x031EEA8C MOV X0, X24
	0x031EEA90 MOV W2, W31
	0x031EEA94 BL 0x1C5C788
	0x031EEA98 B 0x31EEAA8
	0x031EEA9C LDRSW X9, [X10]
	0x031EEAA0 ADD X8, X8, X9, 0x4, LSL
	0x031EEAA4 ADD X0, X8, 0x138
	0x031EEAA8 LDP X8, X1, [X0]
	0x031EEAAC MOV X0, X24
	0x031EEAB0 BLR X8
	0x031EEAB4 TBZ X0, 0x0, 0x31EEB78
	0x031EEAB8 LDR X8, [X24]
	0x031EEABC LDR X1, [X29]
	0x031EEAC0 LDRH W9, [X8 + 0x12E]
	0x031EEAC4 CBZ X9, 0x31EEAE8
	0x031EEAC8 LDR X10, [X8 + 0xB0]
	0x031EEACC ADD X10, X10, 0x8
	0x031EEAD0 LDUR X11, [X10 - 0x8]
	0x031EEAD4 CMP X11, X1
	0x031EEAD8 B.EQ 0x31EEAF8
	0x031EEADC SUBS X9, X9, 0x1
	0x031EEAE0 ADD X10, X10, 0x10
	0x031EEAE4 B.NE 0x31EEAD0
	0x031EEAE8 MOVZ W2, 0x1
	0x031EEAEC MOV X0, X24
	0x031EEAF0 BL 0x1C5C788
	0x031EEAF4 B 0x31EEB08
	0x031EEAF8 LDR W9, [X10]
	0x031EEAFC ADD W9, W9, 0x1
	0x031EEB00 ADD X8, X8, W9, 0x4, SXTW
	0x031EEB04 ADD X0, X8, 0x138
	0x031EEB08 LDP X8, X1, [X0]
	0x031EEB0C MOV X0, X24
	0x031EEB10 BLR X8
	0x031EEB14 MOV X26, X0
	0x031EEB18 CBZ X0, 0x31EEB38
	0x031EEB1C LDR X27, [X19]
	0x031EEB20 MOV X0, X26
	0x031EEB24 MOV X1, X27
	0x031EEB28 BL 0x1C16E00
	0x031EEB2C MOV X25, X0
	0x031EEB30 CBNZ X0, 0x31EEB3C
	0x031EEB34 B 0x31EEED8
	0x031EEB38 MOV X25, X31
	0x031EEB3C LDR X0, [X28]
	0x031EEB40 BL 0x1C16F10
	0x031EEB44 MOV X26, X0
	0x031EEB48 MOV X1, X31
	0x031EEB4C BL 0x33BDD8C
	0x031EEB50 STRB W20, [X26 + 0x10]
	0x031EEB54 STR X31, [X26 + 0x18]
	0x031EEB58 MOV X0, X26
	0x031EEB5C MOV X1, X25
	0x031EEB60 BL 0x31E7D90
	0x031EEB64 CBZ X23, 0x31EEED0
	0x031EEB68 MOV X0, X23
	0x031EEB6C MOV X1, X26
	0x031EEB70 BL 0x31E7ED0
	0x031EEB74 B 0x31EEA5C
	0x031EEB78 MOV X25, X31
	0x031EEB7C MOVZ W26, 0x9
	0x031EEB80 ADRP X8, 0xF05000
	0x031EEB84 LDR X8, [X8 + 0xE00]
	0x031EEB88 MOV X0, X24
	0x031EEB8C LDR X1, [X8]
	0x031EEB90 BL 0x1C16E00
	0x031EEB94 CBZ X0, 0x31EEE74
	0x031EEB98 LDR X8, [X0]
	0x031EEB9C ADRP X10, 0xF05000
	0x031EEBA0 MOV X24, X0
	0x031EEBA4 LDRH W9, [X8 + 0x12E]
	0x031EEBA8 LDR X10, [X10 + 0xE00]
	0x031EEBAC LDR X1, [X10]
	0x031EEBB0 CBZ X9, 0x31EEBD4
	0x031EEBB4 LDR X10, [X8 + 0xB0]
	0x031EEBB8 ADD X10, X10, 0x8
	0x031EEBBC LDUR X11, [X10 - 0x8]
	0x031EEBC0 CMP X11, X1
	0x031EEBC4 B.EQ 0x31EEE5C
	0x031EEBC8 SUBS X9, X9, 0x1
	0x031EEBCC ADD X10, X10, 0x10
	0x031EEBD0 B.NE 0x31EEBBC
	0x031EEBD4 MOV X0, X24
	0x031EEBD8 MOV W2, W31
	0x031EEBDC BL 0x1C5C788
	0x031EEBE0 B 0x31EEE68
	0x031EEBE4 LDR W9, [X10]
	0x031EEBE8 ADD W9, W9, 0x1

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x11EF000
	009 Move W8, [X24+384]
	010 Move X20, X4
	011 Move W19, W3
	012 Move X21, X2
	013 Move X22, X1
	014 Move X23, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0xF33000
	020 Move X0, [X0+3744]
	021 Call 0x1C17CF4
	022 Move X0, 0xF06000
	023 Move X0, [X0+3584]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X24+384], W8
	027 Move X24, 0xF06000
	028 Move X24, [X24+3584]
	029 Move X0, X23
	030 Move X1, X22
	031 Move X2, X21
	032 Move W3, W19
	033 Call PKCS12.GetSymmetricAlgorithm, X0, X1, X2, X3
	034 Move X19, X0
	035 Compare X0, 0
	036 JumpIfEqual {111}
	037 Move X8, [X19]
	038 Move X1, [X8+640]
	039 Move X9, [X8+632]
	040 Move X0, X19
	041 NotImplemented "Instruction BLR not yet implemented."
	042 Compare X20, 0
	043 JumpIfEqual {114}
	044 Move X21, X0
	045 Compare X0, 0
	046 JumpIfEqual {115}
	047 Move X9, 0xF33000
	048 Move X8, [X21]
	049 Move X9, [X9+3744]
	050 Move W22, [X20+24]
	051 Move X1, [X9]
	052 NotImplemented "Instruction LDRH not yet implemented."
	053 Compare X9, 0
	054 JumpIfEqual {61}
	055 Move X10, [X8+176]
	056 Add X10, X10, 8
	057 NotImplemented "Instruction LDUR not yet implemented."
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Subtract X9, X9, 1
	060 Add X10, X10, 16
	061 Move W2, 4
	062 Move X0, X21
	063 Call 0x1C5D788
	064 Move W9, [X10]
	065 Add W9, W9, 4
	066 Add X8, X8, W9
	067 Add X0, X8, 312
	068 Move X8, [X0]
	069 Move X4, [X0+8]
	070 Move X0, X21
	071 Move X1, X20
	072 Move W2, W31
	073 Move W3, W22
	074 NotImplemented "Instruction BLR not yet implemented."
	075 Move X21, X0
	076 Move X20, X31
	077 Compare X19, 0
	078 JumpIfEqual {100}
	079 Move X8, [X19]
	080 Move X1, [X24]
	081 NotImplemented "Instruction LDRH not yet implemented."
	082 Compare X9, 0
	083 JumpIfEqual {90}
	084 Move X10, [X8+176]
	085 Add X10, X10, 8
	086 NotImplemented "Instruction LDUR not yet implemented."
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Subtract X9, X9, 1
	089 Add X10, X10, 16
	090 Move X0, X19
	091 Move W2, W31
	092 Call 0x1C5D788
	093 NotImplemented "Instruction LDRSW not yet implemented."
	094 Add X8, X8, X9
	095 Add X0, X8, 312
	096 Move X8, [X0]
	097 Move X1, [X0+8]
	098 Move X0, X19
	099 NotImplemented "Instruction BLR not yet implemented."
	100 Compare X20, 0
	101 JumpIfNotEqual {112}
	102 Move X0, X21
	103 Move X20, [X31+48]
	104 Move X19, [X31+56]
	105 Move X22, [X31+32]
	106 Move X21, [X31+40]
	107 Move X24, [X31+16]
	108 Move X23, [X31+24]
	109 Move X30, [X31+64]
	110 Return X0
	111 Call 0x1C17F20
	112 Move X0, X20
	113 Call 0x1C17F18
	114 Call 0x1C17F20
	115 Call 0x1C17F20
	116 Move X21, X0
	117 NotImplemented "Instruction CMP not yet implemented."
	118 Move X0, X21
	119 Call 0x3EB2AD0
	120 Move X20, [X0]
	121 Call 0x3EB2AE0
	122 Move X21, X31
	123 Compare X19, 0
	124 JumpIfNotEqual {79}
	125 Move X20, X31
	126 Move X21, X0
	127 Compare X19, 0
	128 JumpIfEqual {150}
	129 Move X8, [X19]
	130 Move X1, [X24]
	131 NotImplemented "Instruction LDRH not yet implemented."
	132 Compare X9, 0
	133 JumpIfEqual {140}
	134 Move X10, [X8+176]
	135 Add X10, X10, 8
	136 NotImplemented "Instruction LDUR not yet implemented."
	137 NotImplemented "Instruction CMP not yet implemented."
	138 Subtract X9, X9, 1
	139 Add X10, X10, 16
	140 Move X0, X19
	141 Move W2, W31
	142 Call 0x1C5D788
	143 NotImplemented "Instruction LDRSW not yet implemented."
	144 Add X8, X8, X9
	145 Add X0, X8, 312
	146 Move X8, [X0]
	147 Move X1, [X0+8]
	148 Move X0, X19
	149 NotImplemented "Instruction BLR not yet implemented."
	150 Compare X20, 0
	151 JumpIfNotEqual {154}
	152 Move X0, X21
	153 Call 0x1D2D690
	154 Move X0, X20
	155 Call 0x1C17F18
	156 Call 0x1991590

Method: System.Security.Cryptography.DSAParameters GetExistingParameters(out System.Boolean found)

Disassembly:
	0x031EEBEC ADD X8, X8, W9, 0x4, SXTW
	0x031EEBF0 ADD X0, X8, 0x138
	0x031EEBF4 LDP X8, X1, [X0]
	0x031EEBF8 MOV X0, X21
	0x031EEBFC BLR X8
	0x031EEC00 CBZ X0, 0x31EEFD8
	0x031EEC04 ADRP X9, 0xF32000
	0x031EEC08 LDR X8, [X0]
	0x031EEC0C LDR X9, [X9 + 0xBA0]
	0x031EEC10 MOV X24, X0
	0x031EEC14 LDRB W10, [X8 + 0x130]
	0x031EEC18 LDR X1, [X9]
	0x031EEC1C LDRB W9, [X1 + 0x130]
	0x031EEC20 CMP W10, W9
	0x031EEC24 B.CC 0x31EEFD0
	0x031EEC28 LDR X8, [X8 + 0xC8]
	0x031EEC2C ADD X8, X8, X9, 0x3, LSL
	0x031EEC30 LDUR X8, [X8 - 0x8]
	0x031EEC34 CMP X8, X1
	0x031EEC38 B.NE 0x31EEFD0
	0x031EEC3C LDR X8, [X24]
	0x031EEC40 MOV X0, X24
	0x031EEC44 LDR X9, [X8 + 0x298]
	0x031EEC48 LDR X1, [X8 + 0x2A0]
	0x031EEC4C BLR X9
	0x031EEC50 CMP W0, 0x1
	0x031EEC54 B.LT 0x31EE7CC
	0x031EEC58 LDR X0, [X28]
	0x031EEC5C BL 0x1C16F10
	0x031EEC60 MOV X1, X31
	0x031EEC64 MOV X22, X0
	0x031EEC68 BL 0x33BDD8C
	0x031EEC6C MOVZ W8, 0x30
	0x031EEC70 STRB W8, [X22 + 0x10]
	0x031EEC74 STR X31, [X22 + 0x18]
	0x031EEC78 ADRP X8, 0xF32000
	0x031EEC7C LDR X8, [X8 + 0xE40]
	0x031EEC80 LDR X0, [X8]
	0x031EEC84 BL 0x31E8DA0
	0x031EEC88 MOV X1, X0
	0x031EEC8C MOV X0, X22
	0x031EEC90 BL 0x31E7ED0
	0x031EEC94 LDR X0, [X28]
	0x031EEC98 BL 0x1C16F10
	0x031EEC9C MOV X1, X31
	0x031EECA0 MOV X23, X0
	0x031EECA4 BL 0x33BDD8C
	0x031EECA8 MOVZ W8, 0x31
	0x031EECAC STRB W8, [X23 + 0x10]
	0x031EECB0 STR X31, [X23 + 0x18]
	0x031EECB4 LDR X8, [X24]
	0x031EECB8 MOV X0, X24
	0x031EECBC LDR X9, [X8 + 0x388]
	0x031EECC0 LDR X1, [X8 + 0x390]
	0x031EECC4 BLR X9
	0x031EECC8 MOV X24, X0
	0x031EECCC CBZ X0, 0x31EEF08
	0x031EECD0 LDR X8, [X24]
	0x031EECD4 LDR X1, [X29]
	0x031EECD8 LDRH W9, [X8 + 0x12E]
	0x031EECDC CBZ X9, 0x31EED00
	0x031EECE0 LDR X10, [X8 + 0xB0]
	0x031EECE4 ADD X10, X10, 0x8
	0x031EECE8 LDUR X11, [X10 - 0x8]
	0x031EECEC CMP X11, X1
	0x031EECF0 B.EQ 0x31EED10
	0x031EECF4 SUBS X9, X9, 0x1
	0x031EECF8 ADD X10, X10, 0x10
	0x031EECFC B.NE 0x31EECE8
	0x031EED00 MOV X0, X24
	0x031EED04 MOV W2, W31
	0x031EED08 BL 0x1C5C788
	0x031EED0C B 0x31EED1C
	0x031EED10 LDRSW X9, [X10]
	0x031EED14 ADD X8, X8, X9, 0x4, LSL
	0x031EED18 ADD X0, X8, 0x138
	0x031EED1C LDP X8, X1, [X0]
	0x031EED20 MOV X0, X24
	0x031EED24 BLR X8
	0x031EED28 TBZ X0, 0x0, 0x31EEDF0
	0x031EED2C LDR X8, [X24]
	0x031EED30 LDR X1, [X29]
	0x031EED34 LDRH W9, [X8 + 0x12E]
	0x031EED38 CBZ X9, 0x31EED5C
	0x031EED3C LDR X10, [X8 + 0xB0]
	0x031EED40 ADD X10, X10, 0x8
	0x031EED44 LDUR X11, [X10 - 0x8]
	0x031EED48 CMP X11, X1
	0x031EED4C B.EQ 0x31EED6C
	0x031EED50 SUBS X9, X9, 0x1
	0x031EED54 ADD X10, X10, 0x10
	0x031EED58 B.NE 0x31EED44
	0x031EED5C MOVZ W2, 0x1
	0x031EED60 MOV X0, X24
	0x031EED64 BL 0x1C5C788
	0x031EED68 B 0x31EED7C
	0x031EED6C LDR W9, [X10]
	0x031EED70 ADD W9, W9, 0x1
	0x031EED74 ADD X8, X8, W9, 0x4, SXTW
	0x031EED78 ADD X0, X8, 0x138
	0x031EED7C LDP X8, X1, [X0]
	0x031EED80 MOV X0, X24
	0x031EED84 BLR X8
	0x031EED88 MOV X26, X0
	0x031EED8C CBZ X0, 0x31EEDAC
	0x031EED90 LDR X27, [X19]
	0x031EED94 MOV X0, X26
	0x031EED98 MOV X1, X27
	0x031EED9C BL 0x1C16E00
	0x031EEDA0 MOV X25, X0
	0x031EEDA4 CBNZ X0, 0x31EEDB0
	0x031EEDA8 B 0x31EEEF0
	0x031EEDAC MOV X25, X31
	0x031EEDB0 LDR X0, [X28]
	0x031EEDB4 BL 0x1C16F10
	0x031EEDB8 MOV X26, X0
	0x031EEDBC MOV X1, X31
	0x031EEDC0 BL 0x33BDD8C
	0x031EEDC4 MOVZ W8, 0x4
	0x031EEDC8 STRB W8, [X26 + 0x10]
	0x031EEDCC STR X31, [X26 + 0x18]
	0x031EEDD0 MOV X0, X26
	0x031EEDD4 MOV X1, X25
	0x031EEDD8 BL 0x31E7D90
	0x031EEDDC CBZ X23, 0x31EEEE8
	0x031EEDE0 MOV X0, X23
	0x031EEDE4 MOV X1, X26
	0x031EEDE8 BL 0x31E7ED0
	0x031EEDEC B 0x31EECD0
	0x031EEDF0 MOV X25, X31
	0x031EEDF4 MOVZ W26, 0xC
	0x031EEDF8 ADRP X8, 0xF05000
	0x031EEDFC LDR X8, [X8 + 0xE00]
	0x031EEE00 MOV X0, X24
	0x031EEE04 LDR X1, [X8]
	0x031EEE08 BL 0x1C16E00
	0x031EEE0C CBZ X0, 0x31EEE9C
	0x031EEE10 LDR X8, [X0]
	0x031EEE14 ADRP X10, 0xF05000
	0x031EEE18 MOV X24, X0
	0x031EEE1C LDRH W9, [X8 + 0x12E]
	0x031EEE20 LDR X10, [X10 + 0xE00]
	0x031EEE24 LDR X1, [X10]
	0x031EEE28 CBZ X9, 0x31EEE4C
	0x031EEE2C LDR X10, [X8 + 0xB0]
	0x031EEE30 ADD X10, X10, 0x8
	0x031EEE34 LDUR X11, [X10 - 0x8]
	0x031EEE38 CMP X11, X1
	0x031EEE3C B.EQ 0x31EEE84
	0x031EEE40 SUBS X9, X9, 0x1
	0x031EEE44 ADD X10, X10, 0x10
	0x031EEE48 B.NE 0x31EEE34
	0x031EEE4C MOV X0, X24
	0x031EEE50 MOV W2, W31
	0x031EEE54 BL 0x1C5C788
	0x031EEE58 B 0x31EEE90
	0x031EEE5C LDRSW X9, [X10]
	0x031EEE60 ADD X8, X8, X9, 0x4, LSL
	0x031EEE64 ADD X0, X8, 0x138
	0x031EEE68 LDP X8, X1, [X0]
	0x031EEE6C MOV X0, X24
	0x031EEE70 BLR X8

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+128], X30
	003 Move [X31+144], X24
	004 Move [X31+152], X23
	005 Move [X31+160], X22
	006 Move [X31+168], X21
	007 Move [X31+176], X20
	008 Move [X31+184], X19
	009 Move X22, 0x11EF000
	010 Move W9, [X22+385]
	011 Move X20, X1
	012 Move X21, X0
	013 Move X19, X8
	014 Move TEMP, X9
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xF06000
	019 Move X0, [X0+3584]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+385], W8
	023 NotImplemented "Instruction MOVI not yet implemented."
	024 Move X0, X21
	025 Move [X31+96], V0
	026 Move [X31+104], V0
	027 Move [X31+64], V0
	028 Move [X31+72], V0
	029 Call PKCS12.get_Certificates, X0
	030 Compare X0, 0
	031 JumpIfEqual {137}
	032 Move X24, 0xF06000
	033 Move X24, [X24+3584]
	034 Call X509CertificateCollection.GetEnumerator, X0
	035 Move X21, X0
	036 Compare X0, 0
	037 JumpIfEqual {138}
	038 Move X0, X21
	039 Call X509CertificateEnumerator.MoveNext, X0
	040 Move TEMP, X0
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfNotEqual {78}
	044 Move X0, X21
	045 Call X509CertificateEnumerator.get_Current, X0
	046 Move X22, X0
	047 Compare X0, 0
	048 JumpIfEqual {136}
	049 Move X8, [X22]
	050 Move X9, [X8+424]
	051 Move X1, [X8+432]
	052 Move X0, X22
	053 NotImplemented "Instruction BLR not yet implemented."
	054 Compare X0, 0
	055 JumpIfEqual {38}
	056 Move X0, X22
	057 Call X509Certificate.get_DSA, X0
	058 Compare X0, 0
	059 JumpIfEqual {38}
	060 Move W8, 1
	061 Move [X20], W8
	062 Move X8, [X0]
	063 Move X9, [X8+488]
	064 Move X2, [X8+496]
	065 Add X8, X31, 0
	066 Move W1, W31
	067 NotImplemented "Instruction BLR not yet implemented."
	068 Move V0, [X31]
	069 Move V1, [X31+16]
	070 Move V2, [X31+32]
	071 Move V3, [X31+48]
	072 Move X22, X31
	073 Move W23, 4
	074 Move [X31+64], V0
	075 Move [X31+72], V1
	076 Move [X31+96], V2
	077 Move [X31+104], V3
	078 Move X22, X31
	079 Move W23, 5
	080 Move X1, [X24]
	081 Move X0, X21
	082 Call 0x1C17E00
	083 Compare X0, 0
	084 JumpIfEqual {107}
	085 Move X8, [X0]
	086 Move X1, [X24]
	087 Move X21, X0
	088 NotImplemented "Instruction LDRH not yet implemented."
	089 Compare X9, 0
	090 JumpIfEqual {97}
	091 Move X10, [X8+176]
	092 Add X10, X10, 8
	093 NotImplemented "Instruction LDUR not yet implemented."
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Subtract X9, X9, 1
	096 Add X10, X10, 16
	097 Move X0, X21
	098 Move W2, W31
	099 Call 0x1C5D788
	100 NotImplemented "Instruction LDRSW not yet implemented."
	101 Add X8, X8, X9
	102 Add X0, X8, 312
	103 Move X8, [X0]
	104 Move X1, [X0+8]
	105 Move X0, X21
	106 NotImplemented "Instruction BLR not yet implemented."
	107 Compare X22, 0
	108 JumpIfNotEqual {139}
	109 NotImplemented "Instruction CMP not yet implemented."
	110 NotImplemented "Instruction CMP not yet implemented."
	111 Compare W23, 0
	112 JumpIfNotEqual {127}
	113 NotImplemented "Instruction MOVI not yet implemented."
	114 Move [X20], W31
	115 Move [X19+32], V0
	116 Move [X19+40], V0
	117 Move [X19], V0
	118 Move [X19+8], V0
	119 Move V1, [X31+96]
	120 Move V0, [X31+112]
	121 Move V3, [X31+64]
	122 Move V2, [X31+80]
	123 Move [X19+32], V1
	124 Move [X19+40], V0
	125 Move [X19], V3
	126 Move [X19+8], V2
	127 Move X20, [X31+176]
	128 Move X19, [X31+184]
	129 Move X22, [X31+160]
	130 Move X21, [X31+168]
	131 Move X24, [X31+144]
	132 Move X23, [X31+152]
	133 Move X30, [X31+128]
	134 Add X31, X31, 192
	135 Return X0
	136 Call 0x1C17F20
	137 Call 0x1C17F20
	138 Call 0x1C17F20
	139 Move X0, X22
	140 Call 0x1C17F18
	141 Move X23, X0
	142 NotImplemented "Instruction CMP not yet implemented."
	143 Move X0, X23
	144 Call 0x3EB2AD0
	145 Move X22, [X0]
	146 Call 0x3EB2AE0
	147 Move W23, W31
	148 Move X22, X31
	149 Move X23, X0
	150 Move X1, [X24]
	151 Move X0, X21
	152 Call 0x1C17E00
	153 Move X19, X0
	154 Compare X0, 0
	155 JumpIfEqual {177}
	156 Move X8, [X19]
	157 Move X1, [X24]
	158 NotImplemented "Instruction LDRH not yet implemented."
	159 Compare X9, 0
	160 JumpIfEqual {167}
	161 Move X10, [X8+176]
	162 Add X10, X10, 8
	163 NotImplemented "Instruction LDUR not yet implemented."
	164 NotImplemented "Instruction CMP not yet implemented."
	165 Subtract X9, X9, 1
	166 Add X10, X10, 16
	167 Move X0, X19
	168 Move W2, W31
	169 Call 0x1C5D788
	170 NotImplemented "Instruction LDRSW not yet implemented."
	171 Add X8, X8, X9
	172 Add X0, X8, 312
	173 Move X8, [X0]
	174 Move X1, [X0+8]
	175 Move X0, X19
	176 NotImplemented "Instruction BLR not yet implemented."
	177 Compare X22, 0
	178 JumpIfNotEqual {181}
	179 Move X0, X23
	180 Call 0x1D2D690
	181 Move X0, X22
	182 Call 0x1C17F18
	183 Call 0x1991590

Method: System.Void AddPrivateKey(Mono.Security.Cryptography.PKCS8/PrivateKeyInfo pki)

Disassembly:
	0x031EF2F4 ADRP X26, 0xF31000
	0x031EF2F8 ADRP X27, 0xF31000
	0x031EF2FC ADRP X28, 0xF31000
	0x031EF300 LDR X19, [X19 + 0xE18]
	0x031EF304 LDR X20, [X20 + 0xE08]
	0x031EF308 LDR X26, [X26 + 0xE50]
	0x031EF30C LDR X27, [X27 + 0xC70]
	0x031EF310 LDR X28, [X28 + 0xCC0]
	0x031EF314 LDR X8, [X21]
	0x031EF318 LDR X1, [X19]
	0x031EF31C LDRH W9, [X8 + 0x12E]
	0x031EF320 CBZ X9, 0x31EF344
	0x031EF324 LDR X10, [X8 + 0xB0]
	0x031EF328 ADD X10, X10, 0x8
	0x031EF32C LDUR X11, [X10 - 0x8]
	0x031EF330 CMP X11, X1
	0x031EF334 B.EQ 0x31EF354
	0x031EF338 SUBS X9, X9, 0x1
	0x031EF33C ADD X10, X10, 0x10
	0x031EF340 B.NE 0x31EF32C
	0x031EF344 MOV X0, X21
	0x031EF348 MOV W2, W31
	0x031EF34C BL 0x1C5C788
	0x031EF350 B 0x31EF360
	0x031EF354 LDRSW X9, [X10]
	0x031EF358 ADD X8, X8, X9, 0x4, LSL
	0x031EF35C ADD X0, X8, 0x138
	0x031EF360 LDP X8, X1, [X0]
	0x031EF364 MOV X0, X21
	0x031EF368 BLR X8
	0x031EF36C TBZ X0, 0x0, 0x31EF49C
	0x031EF370 LDR X8, [X21]
	0x031EF374 LDR X1, [X19]
	0x031EF378 LDRH W9, [X8 + 0x12E]
	0x031EF37C CBZ X9, 0x31EF3A0
	0x031EF380 LDR X10, [X8 + 0xB0]
	0x031EF384 ADD X10, X10, 0x8
	0x031EF388 LDUR X11, [X10 - 0x8]
	0x031EF38C CMP X11, X1
	0x031EF390 B.EQ 0x31EF3B0
	0x031EF394 SUBS X9, X9, 0x1
	0x031EF398 ADD X10, X10, 0x10
	0x031EF39C B.NE 0x31EF388
	0x031EF3A0 MOVZ W2, 0x1
	0x031EF3A4 MOV X0, X21
	0x031EF3A8 BL 0x1C5C788
	0x031EF3AC B 0x31EF3C0
	0x031EF3B0 LDR W9, [X10]
	0x031EF3B4 ADD W9, W9, 0x1
	0x031EF3B8 ADD X8, X8, W9, 0x4, SXTW
	0x031EF3BC ADD X0, X8, 0x138
	0x031EF3C0 LDP X8, X1, [X0]
	0x031EF3C4 MOV X0, X21
	0x031EF3C8 BLR X8
	0x031EF3CC MOV X22, X0
	0x031EF3D0 CBZ X0, 0x31F0BA8
	0x031EF3D4 LDR X8, [X22]
	0x031EF3D8 LDR X1, [X20]
	0x031EF3DC LDRB W10, [X8 + 0x130]
	0x031EF3E0 LDRB W9, [X1 + 0x130]
	0x031EF3E4 CMP W10, W9
	0x031EF3E8 B.CC 0x31F0B7C
	0x031EF3EC LDR X8, [X8 + 0xC8]
	0x031EF3F0 ADD X8, X8, X9, 0x3, LSL
	0x031EF3F4 LDUR X8, [X8 - 0x8]
	0x031EF3F8 CMP X8, X1
	0x031EF3FC B.NE 0x31F0B7C
	0x031EF400 LDR X0, [X22 + 0x10]
	0x031EF404 CBZ X0, 0x31F0BAC
	0x031EF408 LDR X1, [X26]
	0x031EF40C MOV X2, X31
	0x031EF410 BL 0x322693C
	0x031EF414 TBZ X0, 0x0, 0x31EF314
	0x031EF418 LDR X0, [X22 + 0x18]
	0x031EF41C CBZ X0, 0x31F0C00
	0x031EF420 MOVZ W1, 0x1
	0x031EF424 BL 0x31E8704
	0x031EF428 CBZ X0, 0x31F0BF8
	0x031EF42C BL 0x31E7D00
	0x031EF430 MOV X22, X0
	0x031EF434 LDR X0, [X27]
	0x031EF438 BL 0x1C16F10
	0x031EF43C MOV X23, X0
	0x031EF440 MOV X1, X22
	0x031EF444 BL 0x31E9BEC
	0x031EF448 CBZ X23, 0x31F0C04
	0x031EF44C LDR X0, [X23 + 0x18]
	0x031EF450 CBZ X0, 0x31F0BF0
	0x031EF454 MOV W1, W31
	0x031EF458 BL 0x31E8704
	0x031EF45C CBZ X0, 0x31F0BF4
	0x031EF460 BL 0x31E7D00
	0x031EF464 MOV X23, X0
	0x031EF468 LDR X0, [X28]
	0x031EF46C BL 0x1C16F10
	0x031EF470 MOV X22, X0
	0x031EF474 MOV X1, X23
	0x031EF478 BL 0x31EA6BC
	0x031EF47C CBZ X24, 0x31F0BFC
	0x031EF480 LDR X8, [X24]
	0x031EF484 LDR X9, [X8 + 0x308]
	0x031EF488 LDR X2, [X8 + 0x310]
	0x031EF48C MOV X0, X24
	0x031EF490 MOV X1, X22
	0x031EF494 BLR X9
	0x031EF498 B 0x31EF314
	0x031EF49C MOV X22, X31
	0x031EF4A0 ADRP X8, 0xF04000
	0x031EF4A4 LDR X8, [X8 + 0xE00]
	0x031EF4A8 MOV X0, X21
	0x031EF4AC LDR X1, [X8]
	0x031EF4B0 BL 0x1C16E00
	0x031EF4B4 CBZ X0, 0x31EF51C
	0x031EF4B8 LDR X8, [X0]
	0x031EF4BC ADRP X10, 0xF04000
	0x031EF4C0 MOV X21, X0
	0x031EF4C4 LDRH W9, [X8 + 0x12E]
	0x031EF4C8 LDR X10, [X10 + 0xE00]
	0x031EF4CC LDR X1, [X10]
	0x031EF4D0 CBZ X9, 0x31EF4F4
	0x031EF4D4 LDR X10, [X8 + 0xB0]
	0x031EF4D8 ADD X10, X10, 0x8
	0x031EF4DC LDUR X11, [X10 - 0x8]
	0x031EF4E0 CMP X11, X1
	0x031EF4E4 B.EQ 0x31EF504
	0x031EF4E8 SUBS X9, X9, 0x1
	0x031EF4EC ADD X10, X10, 0x10
	0x031EF4F0 B.NE 0x31EF4DC
	0x031EF4F4 MOV X0, X21
	0x031EF4F8 MOV W2, W31
	0x031EF4FC BL 0x1C5C788
	0x031EF500 B 0x31EF510
	0x031EF504 LDRSW X9, [X10]
	0x031EF508 ADD X8, X8, X9, 0x4, LSL
	0x031EF50C ADD X0, X8, 0x138
	0x031EF510 LDP X8, X1, [X0]
	0x031EF514 MOV X0, X21
	0x031EF518 BLR X8
	0x031EF51C CBNZ X22, 0x31F0C5C
	0x031EF520 LDR X0, [X25]
	0x031EF524 BL 0x1C16F10
	0x031EF528 MOV X1, X31
	0x031EF52C MOV X21, X0
	0x031EF530 BL 0x3351F5C
	0x031EF534 LDR X0, [X25]
	0x031EF538 BL 0x1C16F10
	0x031EF53C MOV X1, X31
	0x031EF540 STR X0, [X31 + 0x10]
	0x031EF544 BL 0x3351F5C
	0x031EF548 LDR X0, [X31 + 0x18]
	0x031EF54C BL 0x31ECD5C

ISIL:
	001 Subtract X31, X31, 240
	002 Move [X31+192], X30
	003 Move [X31+208], X22
	004 Move [X31+216], X21
	005 Move [X31+224], X20
	006 Move [X31+232], X19
	007 Move X21, 0x11EE000
	008 Move W8, [X21+386]
	009 Move X19, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0xF32000
	016 Move X0, [X0+3936]
	017 Call 0x1C17CF4
	018 Move X0, 0xF32000
	019 Move X0, [X0+3912]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+386], W8
	023 Move [X31+204], W31
	024 Compare X19, 0
	025 JumpIfEqual {116}
	026 Move X22, 0xF32000
	027 Move X22, [X22+3936]
	028 Move X0, X19
	029 Move X1, X31
	030 Call PrivateKeyInfo.get_PrivateKey, X0
	031 Move X21, [X19+24]
	032 Move X1, [X22]
	033 Move X19, X0
	034 Move X0, X21
	035 Move X2, X31
	036 Call String.op_Equality, X0, X1
	037 Move TEMP, X0
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfNotEqual {53}
	041 Move X20, [X20+24]
	042 Move X0, X19
	043 Move X1, X31
	044 Call PrivateKeyInfo.DecodeRSA, X0
	045 Move X1, X0
	046 Compare X20, 0
	047 JumpIfEqual {119}
	048 Move X8, [X20]
	049 Move X9, [X8+776]
	050 Move X2, [X8+784]
	051 Move X0, X20
	052 NotImplemented "Instruction BLR not yet implemented."
	053 Move X8, 0xF32000
	054 Move X8, [X8+3912]
	055 Move X1, [X8]
	056 Move X0, X21
	057 Move X2, X31
	058 Call String.op_Equality, X0, X1
	059 Move TEMP, X0
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfNotEqual {120}
	063 Add X8, X31, 64
	064 Add X1, X31, 204
	065 Move X0, X20
	066 Call PKCS12.GetExistingParameters, X0, X1
	067 Move V0, [X31+64]
	068 Move V1, [X31+80]
	069 Move V2, [X31+96]
	070 Move V3, [X31+112]
	071 Move W8, [X31+204]
	072 Move [X31+128], V0
	073 Move [X31+136], V1
	074 Move [X31+160], V2
	075 Move [X31+168], V3
	076 Compare W8, 0
	077 JumpIfEqual {99}
	078 Move X20, [X20+24]
	079 Move V0, [X31+128]
	080 Move V1, [X31+144]
	081 Move V2, [X31+160]
	082 Move V3, [X31+176]
	083 Move [X31], V0
	084 Move [X31+8], V1
	085 Move [X31+32], V2
	086 Move [X31+40], V3
	087 Add X1, X31, 0
	088 Move X0, X19
	089 Move X2, X31
	090 Call PrivateKeyInfo.DecodeDSA, X0, X1
	091 Move X1, X0
	092 Compare X20, 0
	093 JumpIfEqual {145}
	094 Move X8, [X20]
	095 Move X9, [X8+776]
	096 Move X2, [X8+784]
	097 Move X0, X20
	098 NotImplemented "Instruction BLR not yet implemented."
	099 Move X21, X31
	100 Compare X19, 0
	101 JumpIfEqual {116}
	102 Move W2, [X19+24]
	103 Move X0, X19
	104 Move W1, W31
	105 Move X3, X31
	106 Call Array.Clear, X0, X1, X2
	107 Compare X21, 0
	108 JumpIfNotEqual {117}
	109 Move X20, [X31+224]
	110 Move X19, [X31+232]
	111 Move X22, [X31+208]
	112 Move X21, [X31+216]
	113 Move X30, [X31+192]
	114 Add X31, X31, 240
	115 Return 
	116 Call 0x1C17F20
	117 Move X0, X21
	118 Call 0x1C17F18
	119 Call 0x1C17F20
	120 Move X0, 0xF32000
	121 Move X0, [X0+3944]
	122 Call 0x1C17D08
	123 Move X1, X0
	124 Move X0, X21
	125 Move X2, X31
	126 Call String.op_Equality, X0, X1
	127 Move X0, 0xF32000
	128 Move X0, [X0+3296]
	129 Call 0x1C17D08
	130 Call 0x1C17F10
	131 Move X20, X0
	132 Move X0, 0xF32000
	133 Move X0, [X0+3952]
	134 Call 0x1C17D08
	135 Move X1, X0
	136 Move X0, X20
	137 Move X2, X31
	138 Call CryptographicException..ctor, X0, X1
	139 Move X0, 0xF32000
	140 Move X0, [X0+3960]
	141 Call 0x1C17D08
	142 Move X1, X0
	143 Move X0, X20
	144 Call 0x1C17DEC
	145 Call 0x1C17F20
	146 Move X20, X0
	147 NotImplemented "Instruction CMP not yet implemented."
	148 Move X0, X20
	149 Call 0x3EB2AD0
	150 Move X21, [X0]
	151 Call 0x3EB2AE0
	152 Move X21, X31
	153 Move X20, X0
	154 Compare X19, 0
	155 JumpIfNotEqual {157}
	156 Call 0x1C17F20
	157 Move W2, [X19+24]
	158 Move X0, X19
	159 Move W1, W31
	160 Move X3, X31
	161 Call Array.Clear, X0, X1, X2
	162 Compare X21, 0
	163 JumpIfNotEqual {166}
	164 Move X0, X20
	165 Call 0x1D2D690
	166 Move X0, X21
	167 Call 0x1C17F18
	168 Call 0x1991590

Method: System.Void ReadSafeBag(Mono.Security.ASN1 safeBag)

Disassembly:
	0x031ECC88 LDP X8, X4, [X0]
	0x031ECC8C MOV X0, X21
	0x031ECC90 MOV X1, X20
	0x031ECC94 MOV W2, W31
	0x031ECC98 MOV W3, W22
	0x031ECC9C BLR X8
	0x031ECCA0 MOV X20, X0
	0x031ECCA4 MOV X21, X31
	0x031ECCA8 CBZ X19, 0x31ECCB8
	0x031ECCAC MOV X0, X19
	0x031ECCB0 MOV X1, X31
	0x031ECCB4 BL 0x3260840
	0x031ECCB8 CBNZ X21, 0x31ECCD4
	0x031ECCBC MOV X0, X20
	0x031ECCC0 LDP X20, X19, [X31 + 0x30]
	0x031ECCC4 LDP X22, X21, [X31 + 0x20]
	0x031ECCC8 LDP X24, X23, [X31 + 0x10]
	0x031ECCCC LDR X30, [X31], #0x40
	0x031ECCD0 RET
	0x031ECCD4 MOV X0, X21
	0x031ECCD8 BL 0x1C16F18
	0x031ECCDC BL 0x1C16F20
	0x031ECCE0 BL 0x1C16F20
	0x031ECCE4 BL 0x1C16F20
	0x031ECCE8 B 0x31ECD00
	0x031ECCEC B 0x31ECCF0
	0x031ECCF0 MOV X20, X0
	0x031ECCF4 MOV X19, X31
	0x031ECCF8 B 0x31ECD04
	0x031ECCFC B 0x31ECD00
	0x031ECD00 MOV X20, X0
	0x031ECD04 CMP W1, 0x1
	0x031ECD08 B.NE 0x31ECD28
	0x031ECD0C MOV X0, X20
	0x031ECD10 BL 0x3EB1AD0
	0x031ECD14 LDR X21, [X0]
	0x031ECD18 BL 0x3EB1AE0
	0x031ECD1C MOV X20, X31
	0x031ECD20 CBNZ X19, 0x31ECCAC
	0x031ECD24 B 0x31ECCB8
	0x031ECD28 MOV X21, X31
	0x031ECD2C B 0x31ECD34
	0x031ECD30 MOV X20, X0
	0x031ECD34 CBZ X19, 0x31ECD44
	0x031ECD38 MOV X0, X19
	0x031ECD3C MOV X1, X31
	0x031ECD40 BL 0x3260840
	0x031ECD44 CBNZ X21, 0x31ECD50
	0x031ECD48 MOV X0, X20
	0x031ECD4C BL 0x1D2C690
	0x031ECD50 MOV X0, X21
	0x031ECD54 BL 0x1C16F18
	0x031ECD58 BL 0x1990590
	0x031ECD5C STP X29, X30, [X31 - 0x60]!
	0x031ECD60 STP X28, X27, [X31 + 0x10]
	0x031ECD64 STP X26, X25, [X31 + 0x20]
	0x031ECD68 STP X24, X23, [X31 + 0x30]
	0x031ECD6C STP X22, X21, [X31 + 0x40]
	0x031ECD70 STP X20, X19, [X31 + 0x50]
	0x031ECD74 ADRP X20, 0x11F0000
	0x031ECD78 LDRB W8, [X20 + 0x17D]
	0x031ECD7C MOV X19, X0
	0x031ECD80 TBNZ X8, 0x0, 0x31ECDD4
	0x031ECD84 ADRP X0, 0xF34000
	0x031ECD88 LDR X0, [X0 + 0xC70]
	0x031ECD8C BL 0x1C16CF4
	0x031ECD90 ADRP X0, 0xF07000
	0x031ECD94 LDR X0, [X0 + 0xE00]
	0x031ECD98 BL 0x1C16CF4
	0x031ECD9C ADRP X0, 0xF07000
	0x031ECDA0 LDR X0, [X0 + 0xE18]
	0x031ECDA4 BL 0x1C16CF4
	0x031ECDA8 ADRP X0, 0xF34000
	0x031ECDAC LDR X0, [X0 + 0xE08]
	0x031ECDB0 BL 0x1C16CF4
	0x031ECDB4 ADRP X0, 0xF34000
	0x031ECDB8 LDR X0, [X0 + 0xCC0]
	0x031ECDBC BL 0x1C16CF4
	0x031ECDC0 ADRP X0, 0xF34000
	0x031ECDC4 LDR X0, [X0 + 0xE50]
	0x031ECDC8 BL 0x1C16CF4
	0x031ECDCC MOVZ W8, 0x1
	0x031ECDD0 STRB W8, [X20 + 0x17D]
	0x031ECDD4 LDRB W8, [X19 + 0x32]
	0x031ECDD8 CBZ W8, 0x31ED044
	0x031ECDDC LDR X0, [X19 + 0x28]
	0x031ECDE0 CBZ X0, 0x31ED090
	0x031ECDE4 MOV X1, X31
	0x031ECDE8 BL 0x3352028
	0x031ECDEC LDR X0, [X19 + 0x38]
	0x031ECDF0 CBZ X0, 0x31ED090
	0x031ECDF4 LDR X8, [X0]
	0x031ECDF8 ADRP X24, 0xF07000
	0x031ECDFC LDR X9, [X8 + 0x388]
	0x031ECE00 LDR X1, [X8 + 0x390]
	0x031ECE04 LDR X24, [X24 + 0xE00]
	0x031ECE08 BLR X9
	0x031ECE0C MOV X20, X0
	0x031ECE10 CBZ X0, 0x31ED094
	0x031ECE14 ADRP X25, 0xF07000
	0x031ECE18 ADRP X26, 0xF34000
	0x031ECE1C ADRP X27, 0xF34000
	0x031ECE20 ADRP X28, 0xF34000
	0x031ECE24 ADRP X29, 0xF34000
	0x031ECE28 LDR X25, [X25 + 0xE18]
	0x031ECE2C LDR X26, [X26 + 0xE08]
	0x031ECE30 LDR X27, [X27 + 0xE50]
	0x031ECE34 LDR X28, [X28 + 0xC70]
	0x031ECE38 LDR X29, [X29 + 0xCC0]
	0x031ECE3C LDR X8, [X20]
	0x031ECE40 LDR X1, [X25]
	0x031ECE44 LDRH W9, [X8 + 0x12E]
	0x031ECE48 CBZ X9, 0x31ECE6C
	0x031ECE4C LDR X10, [X8 + 0xB0]
	0x031ECE50 ADD X10, X10, 0x8
	0x031ECE54 LDUR X11, [X10 - 0x8]
	0x031ECE58 CMP X11, X1
	0x031ECE5C B.EQ 0x31ECE7C
	0x031ECE60 SUBS X9, X9, 0x1
	0x031ECE64 ADD X10, X10, 0x10
	0x031ECE68 B.NE 0x31ECE54
	0x031ECE6C MOV X0, X20
	0x031ECE70 MOV W2, W31
	0x031ECE74 BL 0x1C5C788
	0x031ECE78 B 0x31ECE88
	0x031ECE7C LDRSW X9, [X10]
	0x031ECE80 ADD X8, X8, X9, 0x4, LSL
	0x031ECE84 ADD X0, X8, 0x138
	0x031ECE88 LDP X8, X1, [X0]
	0x031ECE8C MOV X0, X20
	0x031ECE90 BLR X8
	0x031ECE94 TBZ X0, 0x0, 0x31ECFBC
	0x031ECE98 LDR X8, [X20]
	0x031ECE9C LDR X1, [X25]
	0x031ECEA0 LDRH W9, [X8 + 0x12E]
	0x031ECEA4 CBZ X9, 0x31ECEC8
	0x031ECEA8 LDR X10, [X8 + 0xB0]
	0x031ECEAC ADD X10, X10, 0x8
	0x031ECEB0 LDUR X11, [X10 - 0x8]
	0x031ECEB4 CMP X11, X1
	0x031ECEB8 B.EQ 0x31ECED8
	0x031ECEBC SUBS X9, X9, 0x1
	0x031ECEC0 ADD X10, X10, 0x10
	0x031ECEC4 B.NE 0x31ECEB0
	0x031ECEC8 MOVZ W2, 0x1
	0x031ECECC MOV X0, X20
	0x031ECED0 BL 0x1C5C788
	0x031ECED4 B 0x31ECEE8
	0x031ECED8 LDR W9, [X10]
	0x031ECEDC ADD W9, W9, 0x1
	0x031ECEE0 ADD X8, X8, W9, 0x4, SXTW
	0x031ECEE4 ADD X0, X8, 0x138
	0x031ECEE8 LDP X8, X1, [X0]
	0x031ECEEC MOV X0, X20
	0x031ECEF0 BLR X8
	0x031ECEF4 MOV X21, X0
	0x031ECEF8 CBZ X0, 0x31ED070
	0x031ECEFC LDR X8, [X21]
	0x031ECF00 LDR X1, [X26]
	0x031ECF04 LDRB W10, [X8 + 0x130]
	0x031ECF08 LDRB W9, [X1 + 0x130]
	0x031ECF0C CMP W10, W9
	0x031ECF10 B.CC 0x31ED068
	0x031ECF14 LDR X8, [X8 + 0xC8]
	0x031ECF18 ADD X8, X8, X9, 0x3, LSL
	0x031ECF1C LDUR X8, [X8 - 0x8]
	0x031ECF20 CMP X8, X1
	0x031ECF24 B.NE 0x31ED068
	0x031ECF28 LDR X0, [X21 + 0x10]
	0x031ECF2C CBZ X0, 0x31ED074
	0x031ECF30 LDR X1, [X27]
	0x031ECF34 MOV X2, X31
	0x031ECF38 BL 0x322693C
	0x031ECF3C TBZ X0, 0x0, 0x31ECE3C
	0x031ECF40 LDR X0, [X21 + 0x18]
	0x031ECF44 CBZ X0, 0x31ED08C
	0x031ECF48 MOVZ W1, 0x1
	0x031ECF4C BL 0x31E8704
	0x031ECF50 CBZ X0, 0x31ED080
	0x031ECF54 BL 0x31E7D00
	0x031ECF58 MOV X21, X0
	0x031ECF5C LDR X0, [X28]
	0x031ECF60 BL 0x1C16F10
	0x031ECF64 MOV X22, X0
	0x031ECF68 MOV X1, X21
	0x031ECF6C BL 0x31E9BEC
	0x031ECF70 CBZ X22, 0x31ED088
	0x031ECF74 LDR X0, [X22 + 0x18]
	0x031ECF78 CBZ X0, 0x31ED078
	0x031ECF7C LDR X21, [X19 + 0x28]
	0x031ECF80 MOV W1, W31
	0x031ECF84 BL 0x31E8704
	0x031ECF88 CBZ X0, 0x31ED07C
	0x031ECF8C BL 0x31E7D00
	0x031ECF90 MOV X23, X0
	0x031ECF94 LDR X0, [X29]
	0x031ECF98 BL 0x1C16F10
	0x031ECF9C MOV X22, X0
	0x031ECFA0 MOV X1, X23
	0x031ECFA4 BL 0x31EA6BC
	0x031ECFA8 CBZ X21, 0x31ED084
	0x031ECFAC MOV X0, X21
	0x031ECFB0 MOV X1, X22
	0x031ECFB4 BL 0x31EA848
	0x031ECFB8 B 0x31ECE3C
	0x031ECFBC MOV X21, X31
	0x031ECFC0 MOVZ W22, 0x5
	0x031ECFC4 LDR X1, [X24]
	0x031ECFC8 MOV X0, X20
	0x031ECFCC BL 0x1C16E00
	0x031ECFD0 CBZ X0, 0x31ED030
	0x031ECFD4 LDR X8, [X0]
	0x031ECFD8 LDR X1, [X24]
	0x031ECFDC MOV X20, X0
	0x031ECFE0 LDRH W9, [X8 + 0x12E]
	0x031ECFE4 CBZ X9, 0x31ED008
	0x031ECFE8 LDR X10, [X8 + 0xB0]
	0x031ECFEC ADD X10, X10, 0x8
	0x031ECFF0 LDUR X11, [X10 - 0x8]
	0x031ECFF4 CMP X11, X1
	0x031ECFF8 B.EQ 0x31ED018
	0x031ECFFC SUBS X9, X9, 0x1
	0x031ED000 ADD X10, X10, 0x10
	0x031ED004 B.NE 0x31ECFF0
	0x031ED008 MOV X0, X20
	0x031ED00C MOV W2, W31
	0x031ED010 BL 0x1C5C788
	0x031ED014 B 0x31ED024
	0x031ED018 LDRSW X9, [X10]
	0x031ED01C ADD X8, X8, X9, 0x4, LSL
	0x031ED020 ADD X0, X8, 0x138
	0x031ED024 LDP X8, X1, [X0]
	0x031ED028 MOV X0, X20
	0x031ED02C BLR X8
	0x031ED030 CBNZ X21, 0x31ED098
	0x031ED034 CMP W22, 0x5
	0x031ED038 B.EQ 0x31ED040
	0x031ED03C CBNZ W22, 0x31ED048
	0x031ED040 STRB W31, [X19 + 0x32]
	0x031ED044 LDR X8, [X19 + 0x28]
	0x031ED048 LDP X20, X19, [X31 + 0x50]
	0x031ED04C LDP X22, X21, [X31 + 0x40]
	0x031ED050 LDP X24, X23, [X31 + 0x30]
	0x031ED054 LDP X26, X25, [X31 + 0x20]
	0x031ED058 LDP X28, X27, [X31 + 0x10]
	0x031ED05C MOV X0, X8
	0x031ED060 LDP X29, X30, [X31], #0x60
	0x031ED064 RET
	0x031ED068 MOV X0, X21
	0x031ED06C BL 0x1C171E0
	0x031ED070 BL 0x1C16F20
	0x031ED074 BL 0x1C16F20
	0x031ED078 BL 0x1C16F20
	0x031ED07C BL 0x1C16F20
	0x031ED080 BL 0x1C16F20
	0x031ED084 BL 0x1C16F20
	0x031ED088 BL 0x1C16F20
	0x031ED08C BL 0x1C16F20
	0x031ED090 BL 0x1C16F20
	0x031ED094 BL 0x1C16F20
	0x031ED098 MOV X0, X21
	0x031ED09C BL 0x1C16F18
	0x031ED0A0 B 0x31ED0EC
	0x031ED0A4 B 0x31ED0EC
	0x031ED0A8 B 0x31ED0EC
	0x031ED0AC B 0x31ED0EC
	0x031ED0B0 B 0x31ED0EC
	0x031ED0B4 B 0x31ED0EC
	0x031ED0B8 B 0x31ED0EC
	0x031ED0BC B 0x31ED0EC
	0x031ED0C0 B 0x31ED0EC
	0x031ED0C4 B 0x31ED0EC
	0x031ED0C8 B 0x31ED0EC
	0x031ED0CC B 0x31ED0EC
	0x031ED0D0 B 0x31ED0EC
	0x031ED0D4 B 0x31ED0EC
	0x031ED0D8 B 0x31ED0EC
	0x031ED0DC B 0x31ED0EC
	0x031ED0E0 B 0x31ED0EC
	0x031ED0E4 B 0x31ED0EC
	0x031ED0E8 B 0x31ED0EC
	0x031ED0EC CMP W1, 0x1
	0x031ED0F0 B.NE 0x31ED108
	0x031ED0F4 BL 0x3EB1AD0
	0x031ED0F8 LDR X21, [X0]
	0x031ED0FC BL 0x3EB1AE0
	0x031ED100 MOV W22, W31
	0x031ED104 B 0x31ECFC4
	0x031ED108 MOV X19, X0
	0x031ED10C MOV X21, X31
	0x031ED110 B 0x31ED118
	0x031ED114 MOV X19, X0
	0x031ED118 LDR X1, [X24]
	0x031ED11C MOV X0, X20
	0x031ED120 BL 0x1C16E00
	0x031ED124 MOV X20, X0
	0x031ED128 CBZ X0, 0x31ED184
	0x031ED12C LDR X8, [X20]
	0x031ED130 LDR X1, [X24]
	0x031ED134 LDRH W9, [X8 + 0x12E]
	0x031ED138 CBZ X9, 0x31ED15C
	0x031ED13C LDR X10, [X8 + 0xB0]
	0x031ED140 ADD X10, X10, 0x8
	0x031ED144 LDUR X11, [X10 - 0x8]
	0x031ED148 CMP X11, X1
	0x031ED14C B.EQ 0x31ED16C
	0x031ED150 SUBS X9, X9, 0x1
	0x031ED154 ADD X10, X10, 0x10
	0x031ED158 B.NE 0x31ED144
	0x031ED15C MOV X0, X20
	0x031ED160 MOV W2, W31
	0x031ED164 BL 0x1C5C788
	0x031ED168 B 0x31ED178
	0x031ED16C LDRSW X9, [X10]
	0x031ED170 ADD X8, X8, X9, 0x4, LSL
	0x031ED174 ADD X0, X8, 0x138
	0x031ED178 LDP X8, X1, [X0]
	0x031ED17C MOV X0, X20
	0x031ED180 BLR X8
	0x031ED184 CBNZ X21, 0x31ED190
	0x031ED188 MOV X0, X19
	0x031ED18C BL 0x1D2C690
	0x031ED190 MOV X0, X21
	0x031ED194 BL 0x1C16F18
	0x031ED198 BL 0x1990590
	0x031ED19C STP X30, X19, [X31 - 0x10]!
	0x031ED1A0 MOV X19, X0
	0x031ED1A4 LDR X0, [X0 + 0x40]
	0x031ED1A8 CBNZ X0, 0x31ED1B4
	0x031ED1AC BL 0x3256158
	0x031ED1B0 STR X0, [X19 + 0x40]
	0x031ED1B4 LDP X30, X19, [X31], #0x10
	0x031ED1B8 RET
	0x031ED1BC STR X30, [X31 - 0x40]!
	0x031ED1C0 STP X24, X23, [X31 + 0x10]
	0x031ED1C4 STP X22, X21, [X31 + 0x20]
	0x031ED1C8 STP X20, X19, [X31 + 0x30]
	0x031ED1CC ADRP X19, 0x11EF000
	0x031ED1D0 ADRP X24, 0xF33000
	0x031ED1D4 LDRB W8, [X19 + 0x17E]
	0x031ED1D8 LDR X24, [X24 + 0xDE8]
	0x031ED1DC MOV W21, W3
	0x031ED1E0 MOV X22, X2
	0x031ED1E4 MOV X20, X1
	0x031ED1E8 MOV X23, X0
	0x031ED1EC TBNZ X8, 0x0, 0x31ED2E8
	0x031ED1F0 ADRP X0, 0xF33000
	0x031ED1F4 LDR X0, [X0 + 0xDE8]
	0x031ED1F8 BL 0x1C16CF4
	0x031ED1FC ADRP X0, 0xF33000
	0x031ED200 LDR X0, [X0 + 0xEA8]
	0x031ED204 BL 0x1C16CF4
	0x031ED208 ADRP X0, 0xF33000
	0x031ED20C LDR X0, [X0 + 0xEB0]
	0x031ED210 BL 0x1C16CF4
	0x031ED214 ADRP X0, 0xF33000
	0x031ED218 LDR X0, [X0 + 0xEB8]
	0x031ED21C BL 0x1C16CF4
	0x031ED220 ADRP X0, 0xF33000
	0x031ED224 LDR X0, [X0 + 0xD40]
	0x031ED228 BL 0x1C16CF4
	0x031ED22C ADRP X0, 0xF33000
	0x031ED230 LDR X0, [X0 + 0xEC0]
	0x031ED234 BL 0x1C16CF4
	0x031ED238 ADRP X0, 0xF33000
	0x031ED23C LDR X0, [X0 + 0xEC8]
	0x031ED240 BL 0x1C16CF4
	0x031ED244 ADRP X0, 0xF33000
	0x031ED248 LDR X0, [X0 + 0xED0]
	0x031ED24C BL 0x1C16CF4
	0x031ED250 ADRP X0, 0xF33000
	0x031ED254 LDR X0, [X0 + 0xED8]
	0x031ED258 BL 0x1C16CF4
	0x031ED25C ADRP X0, 0xF33000
	0x031ED260 LDR X0, [X0 + 0xEE0]
	0x031ED264 BL 0x1C16CF4
	0x031ED268 ADRP X0, 0xF33000
	0x031ED26C LDR X0, [X0 + 0xEE8]
	0x031ED270 BL 0x1C16CF4
	0x031ED274 ADRP X0, 0xF33000
	0x031ED278 LDR X0, [X0 + 0xEF0]
	0x031ED27C BL 0x1C16CF4
	0x031ED280 ADRP X0, 0xF33000
	0x031ED284 LDR X0, [X0 + 0xEF8]
	0x031ED288 BL 0x1C16CF4
	0x031ED28C ADRP X0, 0xF33000
	0x031ED290 LDR X0, [X0 + 0xD48]
	0x031ED294 BL 0x1C16CF4
	0x031ED298 ADRP X0, 0xF33000
	0x031ED29C LDR X0, [X0 + 0xF00]
	0x031ED2A0 BL 0x1C16CF4
	0x031ED2A4 ADRP X0, 0xF33000
	0x031ED2A8 LDR X0, [X0 + 0xF08]
	0x031ED2AC BL 0x1C16CF4
	0x031ED2B0 ADRP X0, 0xF33000
	0x031ED2B4 LDR X0, [X0 + 0xF10]
	0x031ED2B8 BL 0x1C16CF4
	0x031ED2BC ADRP X0, 0xF33000
	0x031ED2C0 LDR X0, [X0 + 0xD50]
	0x031ED2C4 BL 0x1C16CF4
	0x031ED2C8 ADRP X0, 0xF33000
	0x031ED2CC LDR X0, [X0 + 0xF18]
	0x031ED2D0 BL 0x1C16CF4
	0x031ED2D4 ADRP X0, 0xF33000
	0x031ED2D8 LDR X0, [X0 + 0xF20]
	0x031ED2DC BL 0x1C16CF4
	0x031ED2E0 MOVZ W8, 0x1
	0x031ED2E4 STRB W8, [X19 + 0x17E]
	0x031ED2E8 LDR X0, [X24]
	0x031ED2EC BL 0x1C16F10
	0x031ED2F0 MOV X1, X31
	0x031ED2F4 MOV X19, X0
	0x031ED2F8 BL 0x33BDD8C
	0x031ED2FC CBZ X19, 0x31ED6F8
	0x031ED300 LDR X1, [X23 + 0x10]
	0x031ED304 MOV X0, X19
	0x031ED308 BL 0x31ED758
	0x031ED30C MOV X0, X19
	0x031ED310 MOV X1, X22
	0x031ED314 BL 0x31ED814
	0x031ED318 MOV X0, X20
	0x031ED31C MOV X1, X31
	0x031ED320 STR W21, [X19 + 0x18]
	0x031ED324 BL 0x31FFBAC
	0x031ED328 MOVZ W8, 0xB8EC
	0x031ED32C MOVK W8, 0xAFD20000
	0x031ED330 CMP W0, W8
	0x031ED334 B.HI 0x31ED398
	0x031ED338 MOVZ W8, 0xB2A0
	0x031ED33C MOVK W8, 0xABD20000
	0x031ED340 CMP W0, W8
	0x031ED344 B.HI 0x31ED408
	0x031ED348 B.EQ 0x31ED4D4
	0x031ED34C MOVZ W8, 0xDED8
	0x031ED350 MOVK W8, 0x4E590000
	0x031ED354 CMP W0, W8
	0x031ED358 B.EQ 0x31ED500

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X29
	003 Move [X31+40], X30
	004 Move [X31+48], X28
	005 Move [X31+56], X27
	006 Move [X31+64], X26
	007 Move [X31+72], X25
	008 Move [X31+80], X24
	009 Move [X31+88], X23
	010 Move [X31+96], X22
	011 Move [X31+104], X21
	012 Move [X31+112], X20
	013 Move [X31+120], X19
	014 Move X19, 0x11F1000
	015 Move W8, [X19+387]
	016 Move X21, X1
	017 Move X25, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {66}
	022 Move X0, 0xF35000
	023 Move X0, [X0+3184]
	024 Call 0x1C17CF4
	025 Move X0, 0xF35000
	026 Move X0, [X0+3576]
	027 Call 0x1C17CF4
	028 Move X0, 0xF35000
	029 Move X0, [X0+3584]
	030 Call 0x1C17CF4
	031 Move X0, 0xF35000
	032 Move X0, [X0+3592]
	033 Call 0x1C17CF4
	034 Move X0, 0xF35000
	035 Move X0, [X0+3264]
	036 Call 0x1C17CF4
	037 Move X0, 0xF35000
	038 Move X0, [X0+3600]
	039 Call 0x1C17CF4
	040 Move X0, 0xF35000
	041 Move X0, [X0+3608]
	042 Call 0x1C17CF4
	043 Move X0, 0xF35000
	044 Move X0, [X0+3616]
	045 Call 0x1C17CF4
	046 Move X0, 0xF35000
	047 Move X0, [X0+3624]
	048 Call 0x1C17CF4
	049 Move X0, 0xF35000
	050 Move X0, [X0+3632]
	051 Call 0x1C17CF4
	052 Move X0, 0xF35000
	053 Move X0, [X0+3640]
	054 Call 0x1C17CF4
	055 Move X0, 0xF35000
	056 Move X0, [X0+3648]
	057 Call 0x1C17CF4
	058 Move X0, 0xF35000
	059 Move X0, [X0+3656]
	060 Call 0x1C17CF4
	061 Move X0, 0xF35000
	062 Move X0, [X0+3664]
	063 Call 0x1C17CF4
	064 Move W8, 1
	065 Move [X19+387], W8
	066 Compare X21, 0
	067 JumpIfEqual {410}
	068 Move W8, [X21+16]
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move X0, X21
	071 Move W1, W31
	072 Call ASN1.get_Item, X0, X1
	073 Compare X0, 0
	074 JumpIfEqual {410}
	075 Move W8, [X0+16]
	076 Move X20, X0
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Move X19, 0xF35000
	079 Move X19, [X19+3608]
	080 Move W1, 1
	081 Move X0, X21
	082 Call ASN1.get_Item, X0, X1
	083 Move X22, X0
	084 Move X0, X20
	085 Call ASN1Convert.ToOid, X0
	086 Move X1, [X19]
	087 Move X2, X31
	088 Move X19, X0
	089 Call String.op_Equality, X0, X1
	090 Move TEMP, X0
	091 And TEMP, TEMP, 1
	092 Compare TEMP, 1
	093 JumpIfNotEqual {111}
	094 Compare X22, 0
	095 JumpIfEqual {410}
	096 Move X0, X22
	097 Call ASN1.get_Value, X0
	098 Move X8, 0xF35000
	099 Move X8, [X8+3584]
	100 Move X20, X0
	101 Move X8, [X8]
	102 Move X0, X8
	103 Call 0x1C17F10
	104 Move X1, X20
	105 Move X2, X31
	106 Move X22, X0
	107 Call PrivateKeyInfo..ctor, X0, X1
	108 Move X0, X25
	109 Move X1, X22
	110 Call PKCS12.AddPrivateKey, X0, X1
	111 Move X8, 0xF35000
	112 Move X8, [X8+3632]
	113 Move X0, X19
	114 Move X2, X31
	115 Move X1, [X8]
	116 Call String.op_Equality, X0, X1
	117 Move TEMP, X0
	118 And TEMP, TEMP, 1
	119 Compare TEMP, 1
	120 JumpIfNotEqual {172}
	121 Compare X22, 0
	122 JumpIfEqual {410}
	123 Move X0, X22
	124 Call ASN1.get_Value, X0
	125 Move X8, 0xF35000
	126 Move X8, [X8+3576]
	127 Move X22, X0
	128 Move X8, [X8]
	129 Move X0, X8
	130 Call 0x1C17F10
	131 Move X1, X22
	132 Move X2, X31
	133 Move X20, X0
	134 Call EncryptedPrivateKeyInfo..ctor, X0, X1
	135 Compare X20, 0
	136 JumpIfEqual {410}
	137 Move X22, [X20+16]
	138 Move X0, X20
	139 Move X1, X31
	140 Call EncryptedPrivateKeyInfo.get_Salt, X0
	141 Move W23, [X20+32]
	142 Move X24, X0
	143 Move X0, X20
	144 Move X1, X31
	145 Call EncryptedPrivateKeyInfo.get_EncryptedData, X0
	146 Move X4, X0
	147 Move X0, X25
	148 Move X1, X22
	149 Move X2, X24
	150 Move W3, W23
	151 Call PKCS12.Decrypt, X0, X1, X2, X3, X4
	152 Move X8, 0xF35000
	153 Move X8, [X8+3584]
	154 Move X20, X0
	155 Move X8, [X8]
	156 Move X0, X8
	157 Call 0x1C17F10
	158 Move X1, X20
	159 Move X2, X31
	160 Move X22, X0
	161 Call PrivateKeyInfo..ctor, X0, X1
	162 Move X0, X25
	163 Move X1, X22
	164 Call PKCS12.AddPrivateKey, X0, X1
	165 Compare X20, 0
	166 JumpIfEqual {410}
	167 Move W2, [X20+24]
	168 Move X0, X20
	169 Move W1, W31
	170 Move X3, X31
	171 Call Array.Clear, X0, X1, X2
	172 Move X8, 0xF35000
	173 Move X8, [X8+3664]
	174 Move X0, X19
	175 Move X2, X31
	176 Move X1, [X8]
	177 Call String.op_Equality, X0, X1
	178 Move TEMP, X0
	179 And TEMP, TEMP, 1
	180 Compare TEMP, 1
	181 JumpIfNotEqual {229}
	182 Compare X22, 0
	183 JumpIfEqual {410}
	184 Move X0, X22
	185 Call ASN1.get_Value, X0
	186 Move X8, 0xF35000
	187 Move X8, [X8+3184]
	188 Move X22, X0
	189 Move X8, [X8]
	190 Move X0, X8
	191 Call 0x1C17F10
	192 Move X1, X22
	193 Move X20, X0
	194 Call ContentInfo..ctor, X0, X1
	195 Compare X20, 0
	196 JumpIfEqual {410}
	197 Move X8, 0xF35000
	198 Move X0, [X20+16]
	199 Move X8, [X8+3640]
	200 Move X2, X31
	201 Move X1, [X8]
	202 Call String.op_Inequality, X0, X1
	203 Move TEMP, X0
	204 And TEMP, TEMP, 1
	205 Compare TEMP, 1
	206 JumpIfEqual {464}
	207 Move X0, [X20+24]
	208 Compare X0, 0
	209 JumpIfEqual {410}
	210 Move W1, W31
	211 Call ASN1.get_Item, X0, X1
	212 Compare X0, 0
	213 JumpIfEqual {410}
	214 Call ASN1.get_Value, X0
	215 Move X8, 0xF35000
	216 Move X8, [X8+3264]
	217 Move X22, X0
	218 Move X8, [X8]
	219 Move X0, X8
	220 Call 0x1C17F10
	221 Move X1, X22
	222 Move X20, X0
	223 Call X509Certificate..ctor, X0, X1
	224 Move X0, [X25+40]
	225 Compare X0, 0
	226 JumpIfEqual {410}
	227 Move X1, X20
	228 Call X509CertificateCollection.Add, X0, X1
	229 Move X8, 0xF35000
	230 Move X8, [X8+3616]
	231 Move X0, X19
	232 Move X2, X31
	233 Move X1, [X8]
	234 Call String.op_Equality, X0, X1
	235 Move TEMP, X0
	236 And TEMP, TEMP, 1
	237 Compare TEMP, 1
	238 JumpIfEqual {272}
	239 Move X8, 0xF35000
	240 Move X8, [X8+3624]
	241 Move X0, X19
	242 Move X2, X31
	243 Move X1, [X8]
	244 Call String.op_Equality, X0, X1
	245 Move TEMP, X0
	246 And TEMP, TEMP, 1
	247 Compare TEMP, 1
	248 JumpIfNotEqual {262}
	249 Compare X22, 0
	250 JumpIfEqual {410}
	251 Move X0, X22
	252 Call ASN1.get_Value, X0
	253 Move X8, [X25+32]
	254 Compare X8, 0
	255 JumpIfEqual {410}
	256 Move X9, [X8]
	257 Move X1, X0
	258 Move X0, X8
	259 Move X10, [X9+776]
	260 Move X2, [X9+784]
	261 NotImplemented "Instruction BLR not yet implemented."
	262 Move X8, 0xF34000
	263 Move X8, [X8+3656]
	264 Move X0, X19
	265 Move X2, X31
	266 Move X1, [X8]
	267 Call String.op_Equality, X0, X1
	268 Move TEMP, X0
	269 And TEMP, TEMP, 1
	270 Compare TEMP, 1
	271 JumpIfNotEqual {476}
	272 Move X0, [X21+32]
	273 Move [X31+8], X19
	274 Move [X31+16], X25
	275 Move [X31+24], X21
	276 Compare X0, 0
	277 JumpIfEqual {283}
	278 Move X8, [X0]
	279 Move X9, [X8+664]
	280 Move X1, [X8+672]
	281 NotImplemented "Instruction BLR not yet implemented."
	282 NotImplemented "Instruction CMP not yet implemented."
	283 Move X8, 0xF34000
	284 Move X8, [X8+3592]
	285 Move X9, [X31+16]
	286 Move X0, [X8]
	287 Move X20, [X9+56]
	288 Call 0x1C17F10
	289 Move X1, X31
	290 Move X22, X0
	291 Call Object..ctor, X0
	292 Move X9, [X31+8]
	293 Move X8, [X31+24]
	294 Move [X22+16], X9
	295 Move [X22+24], X8
	296 Compare X20, 0
	297 JumpIfEqual {410}
	298 Move X8, [X20]
	299 Move X0, X20
	300 Move X1, X22
	301 Move X20, [X31+112]
	302 Move X19, [X31+120]
	303 Move X3, [X8+776]
	304 Move X2, [X8+784]
	305 Move X22, [X31+96]
	306 Move X21, [X31+104]
	307 Move X24, [X31+80]
	308 Move X23, [X31+88]
	309 Move X26, [X31+64]
	310 Move X25, [X31+72]
	311 Move X28, [X31+48]
	312 Move X27, [X31+56]
	313 Move X29, [X31+32]
	314 Move X30, [X31+40]
	315 Add X31, X31, 128
	316 CallNoReturn X3
	317 Move X0, [X31+24]
	318 Move W1, 2
	319 Call ASN1.get_Item, X0, X1
	320 Compare X0, 0
	321 JumpIfEqual {410}
	322 Move W8, [X0+16]
	323 Move X22, X0
	324 NotImplemented "Instruction CMP not yet implemented."
	325 Move X21, 0xF34000
	326 Move X19, 0xF34000
	327 Move X21, [X21+3600]
	328 Move X19, [X19+3648]
	329 Move X23, X31
	330 Move X24, X31
	331 Move X25, X31
	332 Move W26, W31
	333 Move X0, [X22+32]
	334 Compare X0, 0
	335 JumpIfEqual {340}
	336 Move X8, [X0]
	337 Move X9, [X8+664]
	338 Move X1, [X8+672]
	339 NotImplemented "Instruction BLR not yet implemented."
	340 NotImplemented "Instruction CMP not yet implemented."
	341 Move X0, X22
	342 Move W1, W26
	343 Call ASN1.get_Item, X0, X1
	344 Compare X0, 0
	345 JumpIfEqual {410}
	346 Move W8, [X0+16]
	347 NotImplemented "Instruction CMP not yet implemented."
	348 NotImplemented "Instruction CSEL not yet implemented."
	349 Compare X25, 0
	350 JumpIfEqual {410}
	351 Move X0, X25
	352 Move W1, W31
	353 Call ASN1.get_Item, X0, X1
	354 Compare X0, 0
	355 JumpIfEqual {410}
	356 Move W8, [X0+16]
	357 NotImplemented "Instruction CMP not yet implemented."
	358 NotImplemented "Instruction CSEL not yet implemented."
	359 NotImplemented "Instruction CSEL not yet implemented."
	360 Move X0, X24
	361 Call ASN1Convert.ToOid, X0
	362 Compare X23, 0
	363 JumpIfEqual {410}
	364 Move X27, X0
	365 Move W1, 1
	366 Move X0, X23
	367 Call ASN1.get_Item, X0, X1
	368 Compare X0, 0
	369 JumpIfEqual {410}
	370 Move X28, X0
	371 Move W29, W31
	372 Move X0, [X28+32]
	373 Compare X0, 0
	374 JumpIfEqual {379}
	375 Move X8, [X0]
	376 Move X9, [X8+664]
	377 Move X1, [X8+672]
	378 NotImplemented "Instruction BLR not yet implemented."
	379 NotImplemented "Instruction CMP not yet implemented."
	380 Move X0, X28
	381 Move W1, W29
	382 Call ASN1.get_Item, X0, X1
	383 Move X1, [X21]
	384 Move X20, X0
	385 Move X0, X27
	386 Move X2, X31
	387 Call String.op_Equality, X0, X1
	388 Move TEMP, X0
	389 And TEMP, TEMP, 1
	390 Compare TEMP, 1
	391 JumpIfNotEqual {396}
	392 Compare X20, 0
	393 JumpIfEqual {410}
	394 Move W8, [X20+16]
	395 NotImplemented "Instruction CMP not yet implemented."
	396 Move X1, [X19]
	397 Move X0, X27
	398 Move X2, X31
	399 Call String.op_Equality, X0, X1
	400 Move TEMP, X0
	401 And TEMP, TEMP, 1
	402 Compare TEMP, 1
	403 JumpIfNotEqual {408}
	404 Compare X20, 0
	405 JumpIfEqual {410}
	406 Move W8, [X20+16]
	407 NotImplemented "Instruction CMP not yet implemented."
	408 Add W29, W29, 1
	409 Add W26, W26, 1
	410 Call 0x1C17F20
	411 Move X0, 0xF0F000
	412 Move X0, [X0+1400]
	413 Call 0x1C17D08
	414 Call 0x1C17F10
	415 Move X19, X0
	416 Move X0, 0xF34000
	417 Move X0, [X0+3672]
	418 Call 0x1C17D08
	419 Move X1, X0
	420 Move X0, X19
	421 Move X2, X31
	422 Call ArgumentException..ctor, X0, X1
	423 Move X0, 0xF34000
	424 Move X0, [X0+3680]
	425 Call 0x1C17D08
	426 Move X1, X0
	427 Move X0, X19
	428 Call 0x1C17DEC
	429 Move X0, 0xF0F000
	430 Move X0, [X0+1400]
	431 Call 0x1C17D08
	432 Call 0x1C17F10
	433 Move X19, X0
	434 Move X0, 0xF34000
	435 Move X0, [X0+3688]
	436 Move X0, 0xF0F000
	437 Move X0, [X0+1400]
	438 Call 0x1C17D08
	439 Call 0x1C17F10
	440 Move X19, X0
	441 Move X0, 0xF34000
	442 Move X0, [X0+3696]
	443 Move X0, 0xF0F000
	444 Move X0, [X0+1400]
	445 Call 0x1C17D08
	446 Call 0x1C17F10
	447 Move X19, X0
	448 Move X0, 0xF34000
	449 Move X0, [X0+3704]
	450 Move X0, 0xF0F000
	451 Move X0, [X0+1400]
	452 Call 0x1C17D08
	453 Call 0x1C17F10
	454 Move X19, X0
	455 Move X0, 0xF34000
	456 Move X0, [X0+3712]
	457 Move X0, 0xF0F000
	458 Move X0, [X0+1400]
	459 Call 0x1C17D08
	460 Call 0x1C17F10
	461 Move X19, X0
	462 Move X0, 0xF34000
	463 Move X0, [X0+3720]
	464 Move X0, 0xF07000
	465 Move X0, [X0+2880]
	466 Call 0x1C17D08
	467 Call 0x1C17F10
	468 Move X19, X0
	469 Move X0, 0xF34000
	470 Move X0, [X0+3728]
	471 Call 0x1C17D08
	472 Move X1, X0
	473 Move X0, X19
	474 Move X2, X31
	475 Call NotSupportedException..ctor, X0, X1
	476 Move X0, 0xF0F000
	477 Move X0, [X0+1400]
	478 Call 0x1C17D08
	479 Call 0x1C17F10
	480 Move X19, X0
	481 Move X0, 0xF34000
	482 Move X0, [X0+3736]

Method: Mono.Security.ASN1 CertificateSafeBag(Mono.Security.X509.X509Certificate x509, System.Collections.IDictionary attributes)

Disassembly:
	0x031EF550 CBZ X0, 0x31F0C34
	0x031EF554 BL 0x31EDE74
	0x031EF558 MOV X25, X0
	0x031EF55C CBZ X0, 0x31F0C68
	0x031EF560 ADRP X20, 0xF04000
	0x031EF564 ADRP X19, 0xF31000
	0x031EF568 LDR X20, [X20 + 0xE18]
	0x031EF56C LDR X19, [X19 + 0xCC0]
	0x031EF570 MOV X0, X25
	0x031EF574 BL 0x31EE254
	0x031EF578 TBZ X0, 0x0, 0x31EF808
	0x031EF57C MOV X0, X25
	0x031EF580 BL 0x31EDECC
	0x031EF584 CBZ X24, 0x31F0BB8
	0x031EF588 LDR X8, [X24]
	0x031EF58C MOV X26, X0
	0x031EF590 LDR X1, [X8 + 0x390]
	0x031EF594 LDR X9, [X8 + 0x388]
	0x031EF598 MOV X0, X24
	0x031EF59C BLR X9
	0x031EF5A0 MOV X27, X0
	0x031EF5A4 CBZ X0, 0x31EF7AC
	0x031EF5A8 MOV W22, W31
	0x031EF5AC LDR X8, [X27]
	0x031EF5B0 LDR X1, [X20]
	0x031EF5B4 LDRH W9, [X8 + 0x12E]
	0x031EF5B8 CBZ X9, 0x31EF5DC
	0x031EF5BC LDR X10, [X8 + 0xB0]
	0x031EF5C0 ADD X10, X10, 0x8
	0x031EF5C4 LDUR X11, [X10 - 0x8]
	0x031EF5C8 CMP X11, X1
	0x031EF5CC B.EQ 0x31EF5EC
	0x031EF5D0 SUBS X9, X9, 0x1
	0x031EF5D4 ADD X10, X10, 0x10
	0x031EF5D8 B.NE 0x31EF5C4
	0x031EF5DC MOV X0, X27
	0x031EF5E0 MOV W2, W31
	0x031EF5E4 BL 0x1C5C788
	0x031EF5E8 B 0x31EF5F8
	0x031EF5EC LDRSW X9, [X10]
	0x031EF5F0 ADD X8, X8, X9, 0x4, LSL
	0x031EF5F4 ADD X0, X8, 0x138
	0x031EF5F8 LDP X8, X1, [X0]
	0x031EF5FC MOV X0, X27
	0x031EF600 BLR X8
	0x031EF604 TBZ X0, 0x0, 0x31EF6D8
	0x031EF608 LDR X8, [X27]
	0x031EF60C LDR X1, [X20]
	0x031EF610 LDRH W9, [X8 + 0x12E]
	0x031EF614 CBZ X9, 0x31EF638
	0x031EF618 LDR X10, [X8 + 0xB0]
	0x031EF61C ADD X10, X10, 0x8
	0x031EF620 LDUR X11, [X10 - 0x8]
	0x031EF624 CMP X11, X1
	0x031EF628 B.EQ 0x31EF648
	0x031EF62C SUBS X9, X9, 0x1
	0x031EF630 ADD X10, X10, 0x10
	0x031EF634 B.NE 0x31EF620
	0x031EF638 MOVZ W2, 0x1
	0x031EF63C MOV X0, X27
	0x031EF640 BL 0x1C5C788
	0x031EF644 B 0x31EF658
	0x031EF648 LDR W9, [X10]
	0x031EF64C ADD W9, W9, 0x1
	0x031EF650 ADD X8, X8, W9, 0x4, SXTW
	0x031EF654 ADD X0, X8, 0x138
	0x031EF658 LDP X8, X1, [X0]
	0x031EF65C MOV X0, X27
	0x031EF660 BLR X8
	0x031EF664 MOV X23, X0
	0x031EF668 CBZ X0, 0x31EF698
	0x031EF66C LDR X8, [X23]
	0x031EF670 LDR X1, [X19]
	0x031EF674 LDRB W10, [X8 + 0x130]
	0x031EF678 LDRB W9, [X1 + 0x130]
	0x031EF67C CMP W10, W9
	0x031EF680 B.CC 0x31EF790
	0x031EF684 LDR X8, [X8 + 0xC8]
	0x031EF688 ADD X8, X8, X9, 0x3, LSL
	0x031EF68C LDUR X8, [X8 - 0x8]
	0x031EF690 CMP X8, X1
	0x031EF694 B.NE 0x31EF790
	0x031EF698 CBZ X26, 0x31EF79C
	0x031EF69C LDR X8, [X26]
	0x031EF6A0 LDP X9, X1, [X8 + 0x1F8]
	0x031EF6A4 MOV X0, X26
	0x031EF6A8 BLR X9
	0x031EF6AC CBZ X23, 0x31EF7A4
	0x031EF6B0 LDR X8, [X23]
	0x031EF6B4 MOV X28, X0
	0x031EF6B8 LDP X9, X1, [X8 + 0x1F8]
	0x031EF6BC MOV X0, X23
	0x031EF6C0 BLR X9
	0x031EF6C4 MOV X1, X28
	0x031EF6C8 MOV X2, X0
	0x031EF6CC BL 0x31EBC00
	0x031EF6D0 ORR W22, W22, W0, 0x0
	0x031EF6D4 B 0x31EF5AC
	0x031EF6D8 MOV X29, X31
	0x031EF6DC MOVZ W28, 0x9
	0x031EF6E0 ADRP X8, 0xF04000
	0x031EF6E4 LDR X8, [X8 + 0xE00]
	0x031EF6E8 LDR X1, [X8]
	0x031EF6EC MOV X0, X27
	0x031EF6F0 BL 0x1C16E00
	0x031EF6F4 MOV X23, X0
	0x031EF6F8 CBZ X0, 0x31EF75C
	0x031EF6FC LDR X8, [X23]
	0x031EF700 ADRP X10, 0xF04000
	0x031EF704 LDRH W9, [X8 + 0x12E]
	0x031EF708 LDR X10, [X10 + 0xE00]
	0x031EF70C LDR X1, [X10]
	0x031EF710 CBZ X9, 0x31EF734
	0x031EF714 LDR X10, [X8 + 0xB0]
	0x031EF718 ADD X10, X10, 0x8
	0x031EF71C LDUR X11, [X10 - 0x8]
	0x031EF720 CMP X11, X1
	0x031EF724 B.EQ 0x31EF744
	0x031EF728 SUBS X9, X9, 0x1
	0x031EF72C ADD X10, X10, 0x10
	0x031EF730 B.NE 0x31EF71C
	0x031EF734 MOV X0, X23
	0x031EF738 MOV W2, W31
	0x031EF73C BL 0x1C5C788
	0x031EF740 B 0x31EF750
	0x031EF744 LDRSW X9, [X10]
	0x031EF748 ADD X8, X8, X9, 0x4, LSL
	0x031EF74C ADD X0, X8, 0x138
	0x031EF750 LDP X8, X1, [X0]
	0x031EF754 MOV X0, X23
	0x031EF758 BLR X8
	0x031EF75C CBNZ X29, 0x31F0BB0
	0x031EF760 CMP W28, 0x9
	0x031EF764 B.EQ 0x31EF76C
	0x031EF768 CBNZ W28, 0x31EF814
	0x031EF76C TBNZ X22, 0x0, 0x31EF570
	0x031EF770 CBZ X21, 0x31F0C1C
	0x031EF774 LDR X8, [X21]
	0x031EF778 LDR X9, [X8 + 0x308]
	0x031EF77C LDR X2, [X8 + 0x310]
	0x031EF780 MOV X0, X21
	0x031EF784 MOV X1, X26
	0x031EF788 BLR X9
	0x031EF78C B 0x31EF570
	0x031EF790 MOV X0, X23
	0x031EF794 BL 0x1C171E0
	0x031EF798 B 0x31F0CA0
	0x031EF79C BL 0x1C16F20
	0x031EF7A0 B 0x31F0CA0
	0x031EF7A4 BL 0x1C16F20
	0x031EF7A8 B 0x31F0CA0
	0x031EF7AC BL 0x1C16F20
	0x031EF7B0 B 0x31F0CA0
	0x031EF7B4 B 0x31EF7BC
	0x031EF7B8 B 0x31EF7E0
	0x031EF7BC MOV X28, X1
	0x031EF7C0 MOV X23, X0
	0x031EF7C4 MOV W22, W31
	0x031EF7C8 B 0x31EF7E8
	0x031EF7CC B 0x31EF7E0
	0x031EF7D0 B 0x31EF7E0
	0x031EF7D4 B 0x31EF7E0
	0x031EF7D8 B 0x31EF7E0
	0x031EF7DC B 0x31EF7E0
	0x031EF7E0 MOV X28, X1
	0x031EF7E4 MOV X23, X0
	0x031EF7E8 CMP W28, 0x1
	0x031EF7EC B.NE 0x31F0AAC
	0x031EF7F0 MOV X0, X23
	0x031EF7F4 BL 0x3EB1AD0
	0x031EF7F8 LDR X29, [X0]
	0x031EF7FC BL 0x3EB1AE0
	0x031EF800 MOV W28, W31
	0x031EF804 B 0x31EF6E0
	0x031EF808 MOV X26, X31
	0x031EF80C MOVZ W28, 0xA
	0x031EF810 B 0x31EF818
	0x031EF814 MOV X26, X31
	0x031EF818 ADRP X19, 0xF04000
	0x031EF81C LDR X19, [X19 + 0xE00]
	0x031EF820 MOV X0, X25
	0x031EF824 LDR X1, [X19]
	0x031EF828 BL 0x1C16E00
	0x031EF82C CBZ X0, 0x31EF88C
	0x031EF830 LDR X8, [X0]
	0x031EF834 LDR X1, [X19]
	0x031EF838 MOV X23, X0
	0x031EF83C LDRH W9, [X8 + 0x12E]
	0x031EF840 CBZ X9, 0x31EF864
	0x031EF844 LDR X10, [X8 + 0xB0]
	0x031EF848 ADD X10, X10, 0x8
	0x031EF84C LDUR X11, [X10 - 0x8]
	0x031EF850 CMP X11, X1
	0x031EF854 B.EQ 0x31EF874
	0x031EF858 SUBS X9, X9, 0x1
	0x031EF85C ADD X10, X10, 0x10
	0x031EF860 B.NE 0x31EF84C
	0x031EF864 MOV X0, X23
	0x031EF868 MOV W2, W31
	0x031EF86C BL 0x1C5C788
	0x031EF870 B 0x31EF880
	0x031EF874 LDRSW X9, [X10]
	0x031EF878 ADD X8, X8, X9, 0x4, LSL
	0x031EF87C ADD X0, X8, 0x138
	0x031EF880 LDP X8, X1, [X0]
	0x031EF884 MOV X0, X23
	0x031EF888 BLR X8
	0x031EF88C CBNZ X26, 0x31F0C6C
	0x031EF890 CMP W28, 0xA
	0x031EF894 B.EQ 0x31EF89C
	0x031EF898 CBNZ W28, 0x31F0760
	0x031EF89C CBZ X24, 0x31F0C34
	0x031EF8A0 LDR X8, [X24]
	0x031EF8A4 MOV X0, X24
	0x031EF8A8 LDR X9, [X8 + 0x388]
	0x031EF8AC LDR X1, [X8 + 0x390]
	0x031EF8B0 BLR X9
	0x031EF8B4 MOV X24, X0
	0x031EF8B8 CBZ X0, 0x31F0C7C
	0x031EF8BC ADRP X19, 0xF04000
	0x031EF8C0 ADRP X20, 0xF31000
	0x031EF8C4 LDR X19, [X19 + 0xE18]
	0x031EF8C8 LDR X20, [X20 + 0xCC0]
	0x031EF8CC LDR X8, [X24]
	0x031EF8D0 LDR X1, [X19]
	0x031EF8D4 LDRH W9, [X8 + 0x12E]
	0x031EF8D8 CBZ X9, 0x31EF8FC
	0x031EF8DC LDR X10, [X8 + 0xB0]
	0x031EF8E0 ADD X10, X10, 0x8
	0x031EF8E4 LDUR X11, [X10 - 0x8]
	0x031EF8E8 CMP X11, X1
	0x031EF8EC B.EQ 0x31EF90C
	0x031EF8F0 SUBS X9, X9, 0x1
	0x031EF8F4 ADD X10, X10, 0x10
	0x031EF8F8 B.NE 0x31EF8E4
	0x031EF8FC MOV X0, X24
	0x031EF900 MOV W2, W31
	0x031EF904 BL 0x1C5C788
	0x031EF908 B 0x31EF918
	0x031EF90C LDRSW X9, [X10]
	0x031EF910 ADD X8, X8, X9, 0x4, LSL
	0x031EF914 ADD X0, X8, 0x138
	0x031EF918 LDP X8, X1, [X0]
	0x031EF91C MOV X0, X24
	0x031EF920 BLR X8
	0x031EF924 TBZ X0, 0x0, 0x31EFB4C
	0x031EF928 LDR X8, [X24]
	0x031EF92C LDR X1, [X19]
	0x031EF930 LDRH W9, [X8 + 0x12E]
	0x031EF934 CBZ X9, 0x31EF958
	0x031EF938 LDR X10, [X8 + 0xB0]
	0x031EF93C ADD X10, X10, 0x8
	0x031EF940 LDUR X11, [X10 - 0x8]
	0x031EF944 CMP X11, X1
	0x031EF948 B.EQ 0x31EF968
	0x031EF94C SUBS X9, X9, 0x1
	0x031EF950 ADD X10, X10, 0x10
	0x031EF954 B.NE 0x31EF940
	0x031EF958 MOVZ W2, 0x1
	0x031EF95C MOV X0, X24
	0x031EF960 BL 0x1C5C788
	0x031EF964 B 0x31EF978
	0x031EF968 LDR W9, [X10]
	0x031EF96C ADD W9, W9, 0x1
	0x031EF970 ADD X8, X8, W9, 0x4, SXTW
	0x031EF974 ADD X0, X8, 0x138
	0x031EF978 LDP X8, X1, [X0]
	0x031EF97C MOV X0, X24
	0x031EF980 BLR X8
	0x031EF984 MOV X25, X0
	0x031EF988 CBZ X0, 0x31EF9B8
	0x031EF98C LDR X8, [X25]
	0x031EF990 LDR X1, [X20]
	0x031EF994 LDRB W10, [X8 + 0x130]
	0x031EF998 LDRB W9, [X1 + 0x130]
	0x031EF99C CMP W10, W9
	0x031EF9A0 B.CC 0x31F0BE0
	0x031EF9A4 LDR X8, [X8 + 0xC8]
	0x031EF9A8 ADD X8, X8, X9, 0x3, LSL
	0x031EF9AC LDUR X8, [X8 - 0x8]
	0x031EF9B0 CMP X8, X1
	0x031EF9B4 B.NE 0x31F0BE0
	0x031EF9B8 LDR X0, [X31 + 0x18]
	0x031EF9BC BL 0x31ECD5C
	0x031EF9C0 CBZ X0, 0x31F0C10
	0x031EF9C4 BL 0x31EDE74
	0x031EF9C8 MOV X27, X0
	0x031EF9CC CBZ X0, 0x31EFAF4
	0x031EF9D0 MOV W22, W31
	0x031EF9D4 MOV X0, X27
	0x031EF9D8 BL 0x31EE254
	0x031EF9DC TBZ X0, 0x0, 0x31EFA2C
	0x031EF9E0 MOV X0, X27
	0x031EF9E4 BL 0x31EDECC
	0x031EF9E8 CBZ X25, 0x31EFAE4
	0x031EF9EC LDR X8, [X25]
	0x031EF9F0 MOV X23, X0
	0x031EF9F4 LDP X9, X1, [X8 + 0x1F8]
	0x031EF9F8 MOV X0, X25
	0x031EF9FC BLR X9
	0x031EFA00 CBZ X23, 0x31EFAEC
	0x031EFA04 LDR X8, [X23]
	0x031EFA08 MOV X26, X0
	0x031EFA0C LDP X9, X1, [X8 + 0x1F8]
	0x031EFA10 MOV X0, X23
	0x031EFA14 BLR X9
	0x031EFA18 MOV X1, X26
	0x031EFA1C MOV X2, X0
	0x031EFA20 BL 0x31EBC00
	0x031EFA24 ORR W22, W22, W0, 0x0
	0x031EFA28 B 0x31EF9D4
	0x031EFA2C MOV X28, X31
	0x031EFA30 MOVZ W26, 0xF
	0x031EFA34 ADRP X8, 0xF04000
	0x031EFA38 LDR X8, [X8 + 0xE00]
	0x031EFA3C LDR X1, [X8]
	0x031EFA40 MOV X0, X27
	0x031EFA44 BL 0x1C16E00
	0x031EFA48 MOV X23, X0
	0x031EFA4C CBZ X0, 0x31EFAB0
	0x031EFA50 LDR X8, [X23]
	0x031EFA54 ADRP X10, 0xF04000
	0x031EFA58 LDRH W9, [X8 + 0x12E]
	0x031EFA5C LDR X10, [X10 + 0xE00]
	0x031EFA60 LDR X1, [X10]
	0x031EFA64 CBZ X9, 0x31EFA88
	0x031EFA68 LDR X10, [X8 + 0xB0]
	0x031EFA6C ADD X10, X10, 0x8
	0x031EFA70 LDUR X11, [X10 - 0x8]
	0x031EFA74 CMP X11, X1
	0x031EFA78 B.EQ 0x31EFA98
	0x031EFA7C SUBS X9, X9, 0x1
	0x031EFA80 ADD X10, X10, 0x10
	0x031EFA84 B.NE 0x31EFA70
	0x031EFA88 MOV X0, X23
	0x031EFA8C MOV W2, W31
	0x031EFA90 BL 0x1C5C788
	0x031EFA94 B 0x31EFAA4
	0x031EFA98 LDRSW X9, [X10]
	0x031EFA9C ADD X8, X8, X9, 0x4, LSL
	0x031EFAA0 ADD X0, X8, 0x138
	0x031EFAA4 LDP X8, X1, [X0]
	0x031EFAA8 MOV X0, X23
	0x031EFAAC BLR X8
	0x031EFAB0 CBNZ X28, 0x31F0C08
	0x031EFAB4 CMP W26, 0xF
	0x031EFAB8 B.EQ 0x31EFAC0
	0x031EFABC CBNZ W26, 0x31EFB58
	0x031EFAC0 TBNZ X22, 0x0, 0x31EF8CC
	0x031EFAC4 LDR X0, [X31 + 0x10]
	0x031EFAC8 CBZ X0, 0x31F0C28
	0x031EFACC LDR X8, [X0]
	0x031EFAD0 LDR X9, [X8 + 0x308]
	0x031EFAD4 LDR X2, [X8 + 0x310]
	0x031EFAD8 MOV X1, X25
	0x031EFADC BLR X9
	0x031EFAE0 B 0x31EF8CC
	0x031EFAE4 BL 0x1C16F20
	0x031EFAE8 B 0x31F0CA0
	0x031EFAEC BL 0x1C16F20
	0x031EFAF0 B 0x31F0CA0
	0x031EFAF4 BL 0x1C16F20
	0x031EFAF8 B 0x31F0CA0
	0x031EFAFC B 0x31EFB08
	0x031EFB00 B 0x31EFB24
	0x031EFB04 B 0x31EFB24
	0x031EFB08 MOV X26, X1
	0x031EFB0C MOV X23, X0
	0x031EFB10 MOV W22, W31
	0x031EFB14 B 0x31EFB2C
	0x031EFB18 B 0x31EFB24
	0x031EFB1C B 0x31EFB24
	0x031EFB20 B 0x31EFB24
	0x031EFB24 MOV X26, X1
	0x031EFB28 MOV X23, X0
	0x031EFB2C CMP W26, 0x1
	0x031EFB30 B.NE 0x31F0B14
	0x031EFB34 MOV X0, X23
	0x031EFB38 BL 0x3EB1AD0
	0x031EFB3C LDR X28, [X0]
	0x031EFB40 BL 0x3EB1AE0
	0x031EFB44 MOV W26, W31
	0x031EFB48 B 0x31EFA34
	0x031EFB4C MOV X25, X31
	0x031EFB50 MOVZ W26, 0x10
	0x031EFB54 B 0x31EFB5C
	0x031EFB58 MOV X25, X31
	0x031EFB5C ADRP X8, 0xF04000
	0x031EFB60 LDR X8, [X8 + 0xE00]
	0x031EFB64 MOV X0, X24
	0x031EFB68 LDR X1, [X8]
	0x031EFB6C BL 0x1C16E00
	0x031EFB70 CBZ X0, 0x31EFBD8
	0x031EFB74 LDR X8, [X0]
	0x031EFB78 ADRP X10, 0xF04000
	0x031EFB7C MOV X23, X0
	0x031EFB80 LDRH W9, [X8 + 0x12E]
	0x031EFB84 LDR X10, [X10 + 0xE00]
	0x031EFB88 LDR X1, [X10]
	0x031EFB8C CBZ X9, 0x31EFBB0
	0x031EFB90 LDR X10, [X8 + 0xB0]
	0x031EFB94 ADD X10, X10, 0x8
	0x031EFB98 LDUR X11, [X10 - 0x8]
	0x031EFB9C CMP X11, X1
	0x031EFBA0 B.EQ 0x31EFBC0
	0x031EFBA4 SUBS X9, X9, 0x1
	0x031EFBA8 ADD X10, X10, 0x10
	0x031EFBAC B.NE 0x31EFB98
	0x031EFBB0 MOV X0, X23
	0x031EFBB4 MOV W2, W31
	0x031EFBB8 BL 0x1C5C788
	0x031EFBBC B 0x31EFBCC
	0x031EFBC0 LDRSW X9, [X10]
	0x031EFBC4 ADD X8, X8, X9, 0x4, LSL
	0x031EFBC8 ADD X0, X8, 0x138
	0x031EFBCC LDP X8, X1, [X0]
	0x031EFBD0 MOV X0, X23
	0x031EFBD4 BLR X8
	0x031EFBD8 CBNZ X25, 0x31F0C80
	0x031EFBDC ADRP X25, 0xF04000
	0x031EFBE0 LDR X25, [X25 + 0xE00]
	0x031EFBE4 ORR W8, W26, 0x10
	0x031EFBE8 CMP W8, 0x10
	0x031EFBEC B.NE 0x31F0760
	0x031EFBF0 LDR X0, [X31 + 0x10]
	0x031EFBF4 CBZ X0, 0x31F0C34
	0x031EFBF8 LDR X8, [X0]
	0x031EFBFC LDR X9, [X8 + 0x388]
	0x031EFC00 LDR X1, [X8 + 0x390]
	0x031EFC04 BLR X9
	0x031EFC08 MOV X22, X0
	0x031EFC0C CBZ X0, 0x31F0C88
	0x031EFC10 ADRP X19, 0xF04000
	0x031EFC14 ADRP X20, 0xF31000
	0x031EFC18 LDR X19, [X19 + 0xE18]
	0x031EFC1C LDR X20, [X20 + 0xCC0]
	0x031EFC20 LDR X23, [X31 + 0x18]
	0x031EFC24 LDR X8, [X22]
	0x031EFC28 LDR X1, [X19]
	0x031EFC2C LDRH W9, [X8 + 0x12E]
	0x031EFC30 CBZ X9, 0x31EFC54
	0x031EFC34 LDR X10, [X8 + 0xB0]
	0x031EFC38 ADD X10, X10, 0x8
	0x031EFC3C LDUR X11, [X10 - 0x8]
	0x031EFC40 CMP X11, X1
	0x031EFC44 B.EQ 0x31EFC64
	0x031EFC48 SUBS X9, X9, 0x1
	0x031EFC4C ADD X10, X10, 0x10
	0x031EFC50 B.NE 0x31EFC3C
	0x031EFC54 MOV X0, X22
	0x031EFC58 MOV W2, W31
	0x031EFC5C BL 0x1C5C788
	0x031EFC60 B 0x31EFC70
	0x031EFC64 LDRSW X9, [X10]
	0x031EFC68 ADD X8, X8, X9, 0x4, LSL
	0x031EFC6C ADD X0, X8, 0x138
	0x031EFC70 LDP X8, X1, [X0]
	0x031EFC74 MOV X0, X22
	0x031EFC78 BLR X8
	0x031EFC7C TBZ X0, 0x0, 0x31EFD24
	0x031EFC80 LDR X8, [X22]
	0x031EFC84 LDR X1, [X19]
	0x031EFC88 LDRH W9, [X8 + 0x12E]
	0x031EFC8C CBZ X9, 0x31EFCB0
	0x031EFC90 LDR X10, [X8 + 0xB0]
	0x031EFC94 ADD X10, X10, 0x8
	0x031EFC98 LDUR X11, [X10 - 0x8]
	0x031EFC9C CMP X11, X1
	0x031EFCA0 B.EQ 0x31EFCC0
	0x031EFCA4 SUBS X9, X9, 0x1
	0x031EFCA8 ADD X10, X10, 0x10
	0x031EFCAC B.NE 0x31EFC98
	0x031EFCB0 MOVZ W2, 0x1
	0x031EFCB4 MOV X0, X22
	0x031EFCB8 BL 0x1C5C788
	0x031EFCBC B 0x31EFCD0
	0x031EFCC0 LDR W9, [X10]
	0x031EFCC4 ADD W9, W9, 0x1
	0x031EFCC8 ADD X8, X8, W9, 0x4, SXTW
	0x031EFCCC ADD X0, X8, 0x138
	0x031EFCD0 LDP X8, X1, [X0]
	0x031EFCD4 MOV X0, X22
	0x031EFCD8 BLR X8
	0x031EFCDC MOV X8, X0
	0x031EFCE0 CBZ X0, 0x31EFD10
	0x031EFCE4 LDR X9, [X8]
	0x031EFCE8 LDR X1, [X20]
	0x031EFCEC LDRB W11, [X9 + 0x130]
	0x031EFCF0 LDRB W10, [X1 + 0x130]
	0x031EFCF4 CMP W11, W10
	0x031EFCF8 B.CC 0x31F0BE8
	0x031EFCFC LDR X9, [X9 + 0xC8]
	0x031EFD00 ADD X9, X9, X10, 0x3, LSL
	0x031EFD04 LDUR X9, [X9 - 0x8]
	0x031EFD08 CMP X9, X1
	0x031EFD0C B.NE 0x31F0BE8
	0x031EFD10 MOV X0, X23
	0x031EFD14 MOV X1, X8
	0x031EFD18 MOV X2, X31
	0x031EFD1C BL 0x31F1904
	0x031EFD20 B 0x31EFC24
	0x031EFD24 MOV X24, X31
	0x031EFD28 MOVZ W19, 0x13
	0x031EFD2C LDR X1, [X25]
	0x031EFD30 MOV X0, X22
	0x031EFD34 BL 0x1C16E00
	0x031EFD38 CBZ X0, 0x31EFD98
	0x031EFD3C LDR X8, [X0]
	0x031EFD40 LDR X1, [X25]
	0x031EFD44 MOV X22, X0
	0x031EFD48 LDRH W9, [X8 + 0x12E]
	0x031EFD4C CBZ X9, 0x31EFD70
	0x031EFD50 LDR X10, [X8 + 0xB0]
	0x031EFD54 ADD X10, X10, 0x8
	0x031EFD58 LDUR X11, [X10 - 0x8]
	0x031EFD5C CMP X11, X1
	0x031EFD60 B.EQ 0x31EFD80
	0x031EFD64 SUBS X9, X9, 0x1
	0x031EFD68 ADD X10, X10, 0x10
	0x031EFD6C B.NE 0x31EFD58
	0x031EFD70 MOV X0, X22
	0x031EFD74 MOV W2, W31
	0x031EFD78 BL 0x1C5C788
	0x031EFD7C B 0x31EFD8C
	0x031EFD80 LDRSW X9, [X10]
	0x031EFD84 ADD X8, X8, X9, 0x4, LSL
	0x031EFD88 ADD X0, X8, 0x138
	0x031EFD8C LDP X8, X1, [X0]
	0x031EFD90 MOV X0, X22
	0x031EFD94 BLR X8
	0x031EFD98 CBNZ X24, 0x31F0C74
	0x031EFD9C CMP W19, 0x13
	0x031EFDA0 B.EQ 0x31EFDA8
	0x031EFDA4 CBNZ W19, 0x31F0760
	0x031EFDA8 CBZ X21, 0x31F0C34
	0x031EFDAC LDR X8, [X21]
	0x031EFDB0 MOV X0, X21
	0x031EFDB4 LDR X9, [X8 + 0x388]
	0x031EFDB8 LDR X1, [X8 + 0x390]
	0x031EFDBC BLR X9
	0x031EFDC0 MOV X21, X0
	0x031EFDC4 CBZ X0, 0x31F0C8C
	0x031EFDC8 ADRP X19, 0xF04000
	0x031EFDCC ADRP X20, 0xF31000
	0x031EFDD0 LDR X19, [X19 + 0xE18]
	0x031EFDD4 LDR X20, [X20 + 0xCC0]
	0x031EFDD8 LDR X22, [X31 + 0x18]
	0x031EFDDC LDR X8, [X21]
	0x031EFDE0 LDR X1, [X19]
	0x031EFDE4 LDRH W9, [X8 + 0x12E]
	0x031EFDE8 CBZ X9, 0x31EFE0C
	0x031EFDEC LDR X10, [X8 + 0xB0]
	0x031EFDF0 ADD X10, X10, 0x8
	0x031EFDF4 LDUR X11, [X10 - 0x8]
	0x031EFDF8 CMP X11, X1
	0x031EFDFC B.EQ 0x31EFE1C
	0x031EFE00 SUBS X9, X9, 0x1
	0x031EFE04 ADD X10, X10, 0x10
	0x031EFE08 B.NE 0x31EFDF4
	0x031EFE0C MOV X0, X21
	0x031EFE10 MOV W2, W31
	0x031EFE14 BL 0x1C5C788
	0x031EFE18 B 0x31EFE28
	0x031EFE1C LDRSW X9, [X10]
	0x031EFE20 ADD X8, X8, X9, 0x4, LSL
	0x031EFE24 ADD X0, X8, 0x138
	0x031EFE28 LDP X8, X1, [X0]
	0x031EFE2C MOV X0, X21
	0x031EFE30 BLR X8
	0x031EFE34 TBZ X0, 0x0, 0x31EFEDC
	0x031EFE38 LDR X8, [X21]
	0x031EFE3C LDR X1, [X19]
	0x031EFE40 LDRH W9, [X8 + 0x12E]
	0x031EFE44 CBZ X9, 0x31EFE68
	0x031EFE48 LDR X10, [X8 + 0xB0]
	0x031EFE4C ADD X10, X10, 0x8
	0x031EFE50 LDUR X11, [X10 - 0x8]
	0x031EFE54 CMP X11, X1
	0x031EFE58 B.EQ 0x31EFE78
	0x031EFE5C SUBS X9, X9, 0x1
	0x031EFE60 ADD X10, X10, 0x10
	0x031EFE64 B.NE 0x31EFE50
	0x031EFE68 MOVZ W2, 0x1
	0x031EFE6C MOV X0, X21
	0x031EFE70 BL 0x1C5C788
	0x031EFE74 B 0x31EFE88
	0x031EFE78 LDR W9, [X10]
	0x031EFE7C ADD W9, W9, 0x1
	0x031EFE80 ADD X8, X8, W9, 0x4, SXTW
	0x031EFE84 ADD X0, X8, 0x138
	0x031EFE88 LDP X8, X1, [X0]
	0x031EFE8C MOV X0, X21
	0x031EFE90 BLR X8
	0x031EFE94 MOV X8, X0
	0x031EFE98 CBZ X0, 0x31EFEC8
	0x031EFE9C LDR X9, [X8]
	0x031EFEA0 LDR X1, [X20]
	0x031EFEA4 LDRB W11, [X9 + 0x130]
	0x031EFEA8 LDRB W10, [X1 + 0x130]
	0x031EFEAC CMP W11, W10
	0x031EFEB0 B.CC 0x31F0C14
	0x031EFEB4 LDR X9, [X9 + 0xC8]
	0x031EFEB8 ADD X9, X9, X10, 0x3, LSL
	0x031EFEBC LDUR X9, [X9 - 0x8]
	0x031EFEC0 CMP X9, X1
	0x031EFEC4 B.NE 0x31F0C14
	0x031EFEC8 MOV X0, X22
	0x031EFECC MOV X1, X8
	0x031EFED0 MOV X2, X31
	0x031EFED4 BL 0x31F16B8
	0x031EFED8 B 0x31EFDDC
	0x031EFEDC MOV X22, X31
	0x031EFEE0 MOVZ W19, 0x16
	0x031EFEE4 LDR X1, [X25]
	0x031EFEE8 MOV X0, X21
	0x031EFEEC BL 0x1C16E00
	0x031EFEF0 CBZ X0, 0x31EFF50
	0x031EFEF4 LDR X8, [X0]
	0x031EFEF8 LDR X1, [X25]
	0x031EFEFC MOV X21, X0
	0x031EFF00 LDRH W9, [X8 + 0x12E]
	0x031EFF04 CBZ X9, 0x31EFF28
	0x031EFF08 LDR X10, [X8 + 0xB0]
	0x031EFF0C ADD X10, X10, 0x8
	0x031EFF10 LDUR X11, [X10 - 0x8]
	0x031EFF14 CMP X11, X1
	0x031EFF18 B.EQ 0x31EFF38
	0x031EFF1C SUBS X9, X9, 0x1
	0x031EFF20 ADD X10, X10, 0x10
	0x031EFF24 B.NE 0x31EFF10
	0x031EFF28 MOV X0, X21
	0x031EFF2C MOV W2, W31
	0x031EFF30 BL 0x1C5C788
	0x031EFF34 B 0x31EFF44
	0x031EFF38 LDRSW X9, [X10]
	0x031EFF3C ADD X8, X8, X9, 0x4, LSL
	0x031EFF40 ADD X0, X8, 0x138
	0x031EFF44 LDP X8, X1, [X0]
	0x031EFF48 MOV X0, X21
	0x031EFF4C BLR X8
	0x031EFF50 CBNZ X22, 0x31F0C5C
	0x031EFF54 CMP W19, 0x16
	0x031EFF58 B.EQ 0x31EFF60
	0x031EFF5C CBNZ W19, 0x31F0760
	0x031EFF60 LDR X24, [X31 + 0x18]
	0x031EFF64 LDR X0, [X24 + 0x38]
	0x031EFF68 CBZ X0, 0x31F0C34
	0x031EFF6C LDR X8, [X0]
	0x031EFF70 LDR X9, [X8 + 0x298]
	0x031EFF74 LDR X1, [X8 + 0x2A0]
	0x031EFF78 BLR X9
	0x031EFF7C ADRP X26, 0xF31000
	0x031EFF80 LDR X26, [X26 + 0xB98]
	0x031EFF84 CMP W0, 0x1
	0x031EFF88 B.LT 0x31F01DC
	0x031EFF8C LDR X0, [X26]
	0x031EFF90 BL 0x1C16F10
	0x031EFF94 MOV X1, X31
	0x031EFF98 MOV X21, X0
	0x031EFF9C BL 0x33BDD8C
	0x031EFFA0 MOVZ W8, 0x30
	0x031EFFA4 STRB W8, [X21 + 0x10]
	0x031EFFA8 STR X31, [X21 + 0x18]
	0x031EFFAC LDR X0, [X24 + 0x38]
	0x031EFFB0 CBZ X0, 0x31F0C34
	0x031EFFB4 LDR X8, [X0]
	0x031EFFB8 LDR X9, [X8 + 0x388]
	0x031EFFBC LDR X1, [X8 + 0x390]
	0x031EFFC0 BLR X9
	0x031EFFC4 MOV X22, X0
	0x031EFFC8 CBZ X0, 0x31F0C90
	0x031EFFCC ADRP X19, 0xF04000
	0x031EFFD0 ADRP X20, 0xF31000
	0x031EFFD4 ADRP X24, 0xF31000
	0x031EFFD8 LDR X19, [X19 + 0xE18]
	0x031EFFDC LDR X20, [X20 + 0xE08]
	0x031EFFE0 LDR X24, [X24 + 0xE50]
	0x031EFFE4 LDR X8, [X22]
	0x031EFFE8 LDR X1, [X19]
	0x031EFFEC LDRH W9, [X8 + 0x12E]
	0x031EFFF0 CBZ X9, 0x31F0014
	0x031EFFF4 LDR X10, [X8 + 0xB0]
	0x031EFFF8 ADD X10, X10, 0x8
	0x031EFFFC LDUR X11, [X10 - 0x8]
	0x031F0000 CMP X11, X1
	0x031F0004 B.EQ 0x31F0024
	0x031F0008 SUBS X9, X9, 0x1
	0x031F000C ADD X10, X10, 0x10
	0x031F0010 B.NE 0x31EFFFC
	0x031F0014 MOV X0, X22
	0x031F0018 MOV W2, W31
	0x031F001C BL 0x1C5C788
	0x031F0020 B 0x31F0030
	0x031F0024 LDRSW X9, [X10]
	0x031F0028 ADD X8, X8, X9, 0x4, LSL
	0x031F002C ADD X0, X8, 0x138
	0x031F0030 LDP X8, X1, [X0]
	0x031F0034 MOV X0, X22
	0x031F0038 BLR X8
	0x031F003C TBZ X0, 0x0, 0x31F00F8
	0x031F0040 LDR X8, [X22]
	0x031F0044 LDR X1, [X19]
	0x031F0048 LDRH W9, [X8 + 0x12E]
	0x031F004C CBZ X9, 0x31F0070
	0x031F0050 LDR X10, [X8 + 0xB0]
	0x031F0054 ADD X10, X10, 0x8
	0x031F0058 LDUR X11, [X10 - 0x8]
	0x031F005C CMP X11, X1
	0x031F0060 B.EQ 0x31F0080
	0x031F0064 SUBS X9, X9, 0x1
	0x031F0068 ADD X10, X10, 0x10
	0x031F006C B.NE 0x31F0058
	0x031F0070 MOVZ W2, 0x1
	0x031F0074 MOV X0, X22
	0x031F0078 BL 0x1C5C788
	0x031F007C B 0x31F0090
	0x031F0080 LDR W9, [X10]
	0x031F0084 ADD W9, W9, 0x1
	0x031F0088 ADD X8, X8, W9, 0x4, SXTW
	0x031F008C ADD X0, X8, 0x138
	0x031F0090 LDP X8, X1, [X0]
	0x031F0094 MOV X0, X22
	0x031F0098 BLR X8
	0x031F009C MOV X23, X0
	0x031F00A0 CBZ X0, 0x31F0C40
	0x031F00A4 LDR X8, [X23]
	0x031F00A8 LDR X1, [X20]
	0x031F00AC LDRB W10, [X8 + 0x130]
	0x031F00B0 LDRB W9, [X1 + 0x130]
	0x031F00B4 CMP W10, W9
	0x031F00B8 B.CC 0x31F0C20
	0x031F00BC LDR X8, [X8 + 0xC8]
	0x031F00C0 ADD X8, X8, X9, 0x3, LSL
	0x031F00C4 LDUR X8, [X8 - 0x8]
	0x031F00C8 CMP X8, X1
	0x031F00CC B.NE 0x31F0C20
	0x031F00D0 LDR X0, [X23 + 0x10]
	0x031F00D4 CBZ X0, 0x31F0C44
	0x031F00D8 LDR X1, [X24]
	0x031F00DC MOV X2, X31
	0x031F00E0 BL 0x322693C
	0x031F00E4 TBZ X0, 0x0, 0x31EFFE4
	0x031F00E8 LDR X1, [X23 + 0x18]
	0x031F00EC MOV X0, X21
	0x031F00F0 BL 0x31E7ED0
	0x031F00F4 B 0x31EFFE4
	0x031F00F8 MOV X24, X31
	0x031F00FC MOVZ W19, 0x1A
	0x031F0100 LDR X1, [X25]
	0x031F0104 MOV X0, X22
	0x031F0108 BL 0x1C16E00
	0x031F010C CBZ X0, 0x31F016C
	0x031F0110 LDR X8, [X0]
	0x031F0114 LDR X1, [X25]
	0x031F0118 MOV X22, X0
	0x031F011C LDRH W9, [X8 + 0x12E]
	0x031F0120 CBZ X9, 0x31F0144
	0x031F0124 LDR X10, [X8 + 0xB0]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X20, 0x11EE000
	015 Move W8, [X20+388]
	016 Move X21, X2
	017 Move X19, X1
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {63}
	022 Move X0, 0xF32000
	023 Move X0, [X0+2968]
	024 Call 0x1C17CF4
	025 Move X0, 0xF32000
	026 Move X0, [X0+2976]
	027 Call 0x1C17CF4
	028 Move X0, 0xF05000
	029 Move X0, [X0+1560]
	030 Call 0x1C17CF4
	031 Move X0, 0xF32000
	032 Move X0, [X0+3184]
	033 Call 0x1C17CF4
	034 Move X0, 0xF32000
	035 Move X0, [X0+3968]
	036 Call 0x1C17CF4
	037 Move X0, 0xF05000
	038 Move X0, [X0+2072]
	039 Call 0x1C17CF4
	040 Move X0, 0xF05000
	041 Move X0, [X0+3584]
	042 Call 0x1C17CF4
	043 Move X0, 0xF05000
	044 Move X0, [X0+3608]
	045 Call 0x1C17CF4
	046 Move X0, 0xF07000
	047 Move X0, [X0+632]
	048 Call 0x1C17CF4
	049 Move X0, 0xF32000
	050 Move X0, [X0+3600]
	051 Call 0x1C17CF4
	052 Move X0, 0xF32000
	053 Move X0, [X0+3640]
	054 Call 0x1C17CF4
	055 Move X0, 0xF32000
	056 Move X0, [X0+3648]
	057 Call 0x1C17CF4
	058 Move X0, 0xF32000
	059 Move X0, [X0+3664]
	060 Call 0x1C17CF4
	061 Move W8, 1
	062 Move [X20+388], W8
	063 Compare X19, 0
	064 JumpIfEqual {680}
	065 Move X8, [X19]
	066 Move X28, 0xF32000
	067 Move X22, 0xF32000
	068 Move X0, X19
	069 Move X9, [X8+504]
	070 Move X1, [X8+512]
	071 Move X28, [X28+2968]
	072 Move X22, [X22+3184]
	073 NotImplemented "Instruction BLR not yet implemented."
	074 Move X8, [X28]
	075 Move X19, X0
	076 Move X0, X8
	077 Call 0x1C17F10
	078 Move X1, X31
	079 Move X20, X0
	080 Call Object..ctor, X0
	081 Move W8, 4
	082 Move [X20+16], W8
	083 Move [X20+24], X19
	084 Move X0, [X22]
	085 Call 0x1C17F10
	086 Move X19, X0
	087 Call ContentInfo..ctor, X0
	088 Compare X19, 0
	089 JumpIfEqual {680}
	090 Move X8, 0xF32000
	091 Move X8, [X8+3640]
	092 Move X0, [X19+24]
	093 Move X8, [X8]
	094 Move [X19+16], X8
	095 Compare X0, 0
	096 JumpIfEqual {680}
	097 Move X22, 0xF32000
	098 Move X22, [X22+3664]
	099 Move X1, X20
	100 Call ASN1.Add, X0, X1
	101 Move X0, [X28]
	102 Call 0x1C17F10
	103 Move X1, X31
	104 Move X20, X0
	105 Call Object..ctor, X0
	106 Move W8, 160
	107 Move X0, X19
	108 Move [X20+16], W8
	109 Move [X20+24], X31
	110 Call ContentInfo.GetASN1, X0
	111 Move X1, X0
	112 Move X0, X20
	113 Call ASN1.Add, X0, X1
	114 Move X0, [X28]
	115 Call 0x1C17F10
	116 Move X1, X31
	117 Move X19, X0
	118 Call Object..ctor, X0
	119 Move W8, 48
	120 Move [X19+16], W8
	121 Move [X19+24], X31
	122 Move X0, [X22]
	123 Call ASN1Convert.FromOid, X0
	124 Move X1, X0
	125 Move X0, X19
	126 Call ASN1.Add, X0, X1
	127 Move X0, X19
	128 Move X1, X20
	129 Move [X31], X19
	130 Call ASN1.Add, X0, X1
	131 Compare X21, 0
	132 JumpIfEqual {663}
	133 Move X0, [X28]
	134 Move X19, 0xF05000
	135 Move X19, [X19+2072]
	136 Call 0x1C17F10
	137 Move X1, X31
	138 Move X23, X0
	139 Call Object..ctor, X0
	140 Move W8, 49
	141 Move [X23+16], W8
	142 Move [X23+24], X31
	143 Move X8, [X21]
	144 Move X1, [X19]
	145 NotImplemented "Instruction LDRH not yet implemented."
	146 Compare X9, 0
	147 JumpIfEqual {154}
	148 Move X10, [X8+176]
	149 Add X10, X10, 8
	150 NotImplemented "Instruction LDUR not yet implemented."
	151 NotImplemented "Instruction CMP not yet implemented."
	152 Subtract X9, X9, 1
	153 Add X10, X10, 16
	154 Move W2, 6
	155 Move X0, X21
	156 Call 0x1C5D788
	157 Move W9, [X10]
	158 Add W9, W9, 6
	159 Add X8, X8, W9
	160 Add X0, X8, 312
	161 Move X8, [X0]
	162 Move X1, [X0+8]
	163 Move X0, X21
	164 NotImplemented "Instruction BLR not yet implemented."
	165 Compare X0, 0
	166 JumpIfEqual {680}
	167 Move X29, 0xF05000
	168 Move X19, 0xF05000
	169 Move X29, [X29+3608]
	170 Move X19, [X19+1560]
	171 Move X21, X0
	172 Move W20, 30
	173 Move [X31+8], X23
	174 Move X8, [X21]
	175 Move X1, [X29]
	176 NotImplemented "Instruction LDRH not yet implemented."
	177 Compare X9, 0
	178 JumpIfEqual {185}
	179 Move X10, [X8+176]
	180 Add X10, X10, 8
	181 NotImplemented "Instruction LDUR not yet implemented."
	182 NotImplemented "Instruction CMP not yet implemented."
	183 Subtract X9, X9, 1
	184 Add X10, X10, 16
	185 Move X0, X21
	186 Move W2, W31
	187 Call 0x1C5D788
	188 NotImplemented "Instruction LDRSW not yet implemented."
	189 Add X8, X8, X9
	190 Add X0, X8, 312
	191 Move X8, [X0]
	192 Move X1, [X0+8]
	193 Move X0, X21
	194 NotImplemented "Instruction BLR not yet implemented."
	195 Move TEMP, X0
	196 And TEMP, TEMP, 1
	197 Compare TEMP, 1
	198 JumpIfNotEqual {650}
	199 Move X8, [X21]
	200 Move X10, 0xF32000
	201 NotImplemented "Instruction LDRH not yet implemented."
	202 Move X10, [X10+3968]
	203 Move X1, [X10]
	204 Compare X9, 0
	205 JumpIfEqual {212}
	206 Move X10, [X8+176]
	207 Add X10, X10, 8
	208 NotImplemented "Instruction LDUR not yet implemented."
	209 NotImplemented "Instruction CMP not yet implemented."
	210 Subtract X9, X9, 1
	211 Add X10, X10, 16
	212 Move X0, X21
	213 Move W2, W31
	214 Call 0x1C5D788
	215 NotImplemented "Instruction LDRSW not yet implemented."
	216 Add X8, X8, X9
	217 Add X0, X8, 312
	218 Move X8, [X0]
	219 Move X1, [X0+8]
	220 Move X0, X21
	221 NotImplemented "Instruction BLR not yet implemented."
	222 Move X22, X0
	223 Compare X0, 0
	224 JumpIfEqual {230}
	225 Move X8, 0xF07000
	226 Move X8, [X8+632]
	227 Move X1, [X8]
	228 Move X8, [X22]
	229 NotImplemented "Instruction CMP not yet implemented."
	230 Move X8, 0xF32000
	231 Move X8, [X8+3600]
	232 Move X0, X22
	233 Move X2, X31
	234 Move X1, [X8]
	235 Call String.op_Equality, X0, X1
	236 Move TEMP, X0
	237 And TEMP, TEMP, 1
	238 Compare TEMP, 1
	239 JumpIfNotEqual {256}
	240 Move X8, [X21]
	241 Move X10, 0xF32000
	242 NotImplemented "Instruction LDRH not yet implemented."
	243 Move X10, [X10+3968]
	244 Move X1, [X10]
	245 Compare X9, 0
	246 JumpIfEqual {253}
	247 Move X10, [X8+176]
	248 Add X10, X10, 8
	249 NotImplemented "Instruction LDUR not yet implemented."
	250 NotImplemented "Instruction CMP not yet implemented."
	251 Subtract X9, X9, 1
	252 Add X10, X10, 16
	253 Move W2, 1
	254 Move X0, X21
	255 Call 0x1C5D788
	256 Move X8, 0xF32000
	257 Move X8, [X8+3648]
	258 Move X0, X22
	259 Move X2, X31
	260 Move X1, [X8]
	261 Call String.op_Equality, X0, X1
	262 Move TEMP, X0
	263 And TEMP, TEMP, 1
	264 Compare TEMP, 1
	265 JumpIfNotEqual {174}
	266 Move X8, [X21]
	267 Move X10, 0xF32000
	268 NotImplemented "Instruction LDRH not yet implemented."
	269 Move X10, [X10+3968]
	270 Move X1, [X10]
	271 Compare X9, 0
	272 JumpIfEqual {279}
	273 Move X10, [X8+176]
	274 Add X10, X10, 8
	275 NotImplemented "Instruction LDUR not yet implemented."
	276 NotImplemented "Instruction CMP not yet implemented."
	277 Subtract X9, X9, 1
	278 Add X10, X10, 16
	279 Move W2, 1
	280 Move X0, X21
	281 Call 0x1C5D788
	282 Move W9, [X10]
	283 Add W9, W9, 1
	284 Add X8, X8, W9
	285 Add X0, X8, 312
	286 Move X8, [X0]
	287 Move X1, [X0+8]
	288 Move X0, X21
	289 NotImplemented "Instruction BLR not yet implemented."
	290 Compare X0, 0
	291 JumpIfEqual {680}
	292 Move X9, 0xF32000
	293 Move X8, [X0]
	294 Move X9, [X9+2976]
	295 Move X24, X0
	296 Move W10, [X8+304]
	297 Move X1, [X9]
	298 Move W9, [X1+304]
	299 NotImplemented "Instruction CMP not yet implemented."
	300 Move X8, [X8+200]
	301 Add X8, X8, X9
	302 NotImplemented "Instruction LDUR not yet implemented."
	303 NotImplemented "Instruction CMP not yet implemented."
	304 Move X8, [X24]
	305 Move X0, X24
	306 Move X9, [X8+664]
	307 Move X1, [X8+672]
	308 NotImplemented "Instruction BLR not yet implemented."
	309 NotImplemented "Instruction CMP not yet implemented."
	310 Move X0, [X28]
	311 Call 0x1C17F10
	312 Move X1, X31
	313 Move X22, X0
	314 Call Object..ctor, X0
	315 Move W8, 48
	316 Move [X22+16], W8
	317 Move [X22+24], X31
	318 Move X8, 0xF32000
	319 Move X8, [X8+3600]
	320 Move X0, [X8]
	321 Call ASN1Convert.FromOid, X0
	322 Move X1, X0
	323 Move X0, X22
	324 Call ASN1.Add, X0, X1
	325 Move X0, [X28]
	326 Call 0x1C17F10
	327 Move X1, X31
	328 Move X23, X0
	329 Call Object..ctor, X0
	330 Move W8, 49
	331 Move [X23+16], W8
	332 Move [X23+24], X31
	333 Move X8, [X24]
	334 Move X0, X24
	335 Move X9, [X8+904]
	336 Move X1, [X8+912]
	337 NotImplemented "Instruction BLR not yet implemented."
	338 Move X24, X0
	339 Compare X0, 0
	340 JumpIfEqual {638}
	341 Move X8, [X24]
	342 Move X1, [X29]
	343 NotImplemented "Instruction LDRH not yet implemented."
	344 Compare X9, 0
	345 JumpIfEqual {352}
	346 Move X10, [X8+176]
	347 Add X10, X10, 8
	348 NotImplemented "Instruction LDUR not yet implemented."
	349 NotImplemented "Instruction CMP not yet implemented."
	350 Subtract X9, X9, 1
	351 Add X10, X10, 16
	352 Move X0, X24
	353 Move W2, W31
	354 Call 0x1C5D788
	355 NotImplemented "Instruction LDRSW not yet implemented."
	356 Add X8, X8, X9
	357 Add X0, X8, 312
	358 Move X8, [X0]
	359 Move X1, [X0+8]
	360 Move X0, X24
	361 NotImplemented "Instruction BLR not yet implemented."
	362 Move TEMP, X0
	363 And TEMP, TEMP, 1
	364 Compare TEMP, 1
	365 JumpIfNotEqual {414}
	366 Move X8, [X24]
	367 Move X1, [X29]
	368 NotImplemented "Instruction LDRH not yet implemented."
	369 Compare X9, 0
	370 JumpIfEqual {377}
	371 Move X10, [X8+176]
	372 Add X10, X10, 8
	373 NotImplemented "Instruction LDUR not yet implemented."
	374 NotImplemented "Instruction CMP not yet implemented."
	375 Subtract X9, X9, 1
	376 Add X10, X10, 16
	377 Move W2, 1
	378 Move X0, X24
	379 Call 0x1C5D788
	380 Move W9, [X10]
	381 Add W9, W9, 1
	382 Add X8, X8, W9
	383 Add X0, X8, 312
	384 Move X8, [X0]
	385 Move X1, [X0+8]
	386 Move X0, X24
	387 NotImplemented "Instruction BLR not yet implemented."
	388 Move X26, X0
	389 Compare X0, 0
	390 JumpIfEqual {398}
	391 Move X27, [X19]
	392 Move X0, X26
	393 Move X1, X27
	394 Call 0x1C17E00
	395 Move X25, X0
	396 Compare X0, 0
	397 JumpIfNotEqual {399}
	398 Move X25, X31
	399 Move X0, [X28]
	400 Call 0x1C17F10
	401 Move X26, X0
	402 Move X1, X31
	403 Call Object..ctor, X0
	404 Move [X26+16], W20
	405 Move [X26+24], X31
	406 Move X0, X26
	407 Move X1, X25
	408 Call ASN1.set_Value, X0, X1
	409 Compare X23, 0
	410 JumpIfEqual {630}
	411 Move X0, X23
	412 Move X1, X26
	413 Call ASN1.Add, X0, X1
	414 Move X25, X31
	415 Move W26, 9
	416 Move X8, 0xF05000
	417 Move X8, [X8+3584]
	418 Move X0, X24
	419 Move X1, [X8]
	420 Call 0x1C17E00
	421 Compare X0, 0
	422 JumpIfEqual {606}
	423 Move X8, [X0]
	424 Move X10, 0xF05000
	425 Move X24, X0
	426 NotImplemented "Instruction LDRH not yet implemented."
	427 Move X10, [X10+3584]
	428 Move X1, [X10]
	429 Compare X9, 0
	430 JumpIfEqual {437}
	431 Move X10, [X8+176]
	432 Add X10, X10, 8
	433 NotImplemented "Instruction LDUR not yet implemented."
	434 NotImplemented "Instruction CMP not yet implemented."
	435 Subtract X9, X9, 1
	436 Add X10, X10, 16
	437 Move X0, X24
	438 Move W2, W31
	439 Call 0x1C5D788
	440 Move W9, [X10]
	441 Add W9, W9, 1
	442 Add X8, X8, W9
	443 Add X0, X8, 312
	444 Move X8, [X0]
	445 Move X1, [X0+8]
	446 Move X0, X21
	447 NotImplemented "Instruction BLR not yet implemented."
	448 Compare X0, 0
	449 JumpIfEqual {680}
	450 Move X9, 0xF32000
	451 Move X8, [X0]
	452 Move X9, [X9+2976]
	453 Move X24, X0
	454 Move W10, [X8+304]
	455 Move X1, [X9]
	456 Move W9, [X1+304]
	457 NotImplemented "Instruction CMP not yet implemented."
	458 Move X8, [X8+200]
	459 Add X8, X8, X9
	460 NotImplemented "Instruction LDUR not yet implemented."
	461 NotImplemented "Instruction CMP not yet implemented."
	462 Move X8, [X24]
	463 Move X0, X24
	464 Move X9, [X8+664]
	465 Move X1, [X8+672]
	466 NotImplemented "Instruction BLR not yet implemented."
	467 NotImplemented "Instruction CMP not yet implemented."
	468 Move X0, [X28]
	469 Call 0x1C17F10
	470 Move X1, X31
	471 Move X22, X0
	472 Call Object..ctor, X0
	473 Move W8, 48
	474 Move [X22+16], W8
	475 Move [X22+24], X31
	476 Move X8, 0xF32000
	477 Move X8, [X8+3648]
	478 Move X0, [X8]
	479 Call ASN1Convert.FromOid, X0
	480 Move X1, X0
	481 Move X0, X22
	482 Call ASN1.Add, X0, X1
	483 Move X0, [X28]
	484 Call 0x1C17F10
	485 Move X1, X31
	486 Move X23, X0
	487 Call Object..ctor, X0
	488 Move W8, 49
	489 Move [X23+16], W8
	490 Move [X23+24], X31
	491 Move X8, [X24]
	492 Move X0, X24
	493 Move X9, [X8+904]
	494 Move X1, [X8+912]
	495 NotImplemented "Instruction BLR not yet implemented."
	496 Move X24, X0
	497 Compare X0, 0
	498 JumpIfEqual {639}
	499 Move X8, [X24]
	500 Move X1, [X29]
	501 NotImplemented "Instruction LDRH not yet implemented."
	502 Compare X9, 0
	503 JumpIfEqual {510}
	504 Move X10, [X8+176]
	505 Add X10, X10, 8
	506 NotImplemented "Instruction LDUR not yet implemented."
	507 NotImplemented "Instruction CMP not yet implemented."
	508 Subtract X9, X9, 1
	509 Add X10, X10, 16
	510 Move X0, X24
	511 Move W2, W31
	512 Call 0x1C5D788
	513 NotImplemented "Instruction LDRSW not yet implemented."
	514 Add X8, X8, X9
	515 Add X0, X8, 312
	516 Move X8, [X0]
	517 Move X1, [X0+8]
	518 Move X0, X24
	519 NotImplemented "Instruction BLR not yet implemented."
	520 Move TEMP, X0
	521 And TEMP, TEMP, 1
	522 Compare TEMP, 1
	523 JumpIfNotEqual {573}
	524 Move X8, [X24]
	525 Move X1, [X29]
	526 NotImplemented "Instruction LDRH not yet implemented."
	527 Compare X9, 0
	528 JumpIfEqual {535}
	529 Move X10, [X8+176]
	530 Add X10, X10, 8
	531 NotImplemented "Instruction LDUR not yet implemented."
	532 NotImplemented "Instruction CMP not yet implemented."
	533 Subtract X9, X9, 1
	534 Add X10, X10, 16
	535 Move W2, 1
	536 Move X0, X24
	537 Call 0x1C5D788
	538 Move W9, [X10]
	539 Add W9, W9, 1
	540 Add X8, X8, W9
	541 Add X0, X8, 312
	542 Move X8, [X0]
	543 Move X1, [X0+8]
	544 Move X0, X24
	545 NotImplemented "Instruction BLR not yet implemented."
	546 Move X26, X0
	547 Compare X0, 0
	548 JumpIfEqual {556}
	549 Move X27, [X19]
	550 Move X0, X26
	551 Move X1, X27
	552 Call 0x1C17E00
	553 Move X25, X0
	554 Compare X0, 0
	555 JumpIfNotEqual {557}
	556 Move X25, X31
	557 Move X0, [X28]
	558 Call 0x1C17F10
	559 Move X26, X0
	560 Move X1, X31
	561 Call Object..ctor, X0
	562 Move W8, 4
	563 Move [X26+16], W8
	564 Move [X26+24], X31
	565 Move X0, X26
	566 Move X1, X25
	567 Call ASN1.set_Value, X0, X1
	568 Compare X23, 0
	569 JumpIfEqual {634}
	570 Move X0, X23
	571 Move X1, X26
	572 Call ASN1.Add, X0, X1
	573 Move X25, X31
	574 Move W26, 12
	575 Move X8, 0xF05000
	576 Move X8, [X8+3584]
	577 Move X0, X24
	578 Move X1, [X8]
	579 Call 0x1C17E00
	580 Compare X0, 0
	581 JumpIfEqual {616}
	582 Move X8, [X0]
	583 Move X10, 0xF05000
	584 Move X24, X0
	585 NotImplemented "Instruction LDRH not yet implemented."
	586 Move X10, [X10+3584]
	587 Move X1, [X10]
	588 Compare X9, 0
	589 JumpIfEqual {596}
	590 Move X10, [X8+176]
	591 Add X10, X10, 8
	592 NotImplemented "Instruction LDUR not yet implemented."
	593 NotImplemented "Instruction CMP not yet implemented."
	594 Subtract X9, X9, 1
	595 Add X10, X10, 16
	596 Move X0, X24
	597 Move W2, W31
	598 Call 0x1C5D788
	599 NotImplemented "Instruction LDRSW not yet implemented."
	600 Add X8, X8, X9
	601 Add X0, X8, 312
	602 Move X8, [X0]
	603 Move X1, [X0+8]
	604 Move X0, X24
	605 NotImplemented "Instruction BLR not yet implemented."
	606 Compare X25, 0
	607 JumpIfNotEqual {683}
	608 NotImplemented "Instruction CMP not yet implemented."
	609 NotImplemented "Instruction LDRSW not yet implemented."
	610 Add X8, X8, X9
	611 Add X0, X8, 312
	612 Move X8, [X0]
	613 Move X1, [X0+8]
	614 Move X0, X24
	615 NotImplemented "Instruction BLR not yet implemented."
	616 Compare X25, 0
	617 JumpIfNotEqual {683}
	618 NotImplemented "Instruction CMP not yet implemented."
	619 Compare W26, 0
	620 JumpIfNotEqual {663}
	621 Move X0, X22
	622 Move X1, X23
	623 Call ASN1.Add, X0, X1
	624 Move X23, [X31+8]
	625 Compare X23, 0
	626 JumpIfEqual {680}
	627 Move X0, X23
	628 Move X1, X22
	629 Call ASN1.Add, X0, X1
	630 Call 0x1C17F20
	631 Move X0, X26
	632 Move X1, X27
	633 Call 0x1C181E0
	634 Call 0x1C17F20
	635 Move X0, X26
	636 Move X1, X27
	637 Call 0x1C181E0
	638 Call 0x1C17F20
	639 Call 0x1C17F20
	640 NotImplemented "Instruction CMP not yet implemented."
	641 Call 0x3EB2AD0
	642 Move X25, [X0]
	643 Call 0x3EB2AE0
	644 Move W26, W31
	645 NotImplemented "Instruction CMP not yet implemented."
	646 Call 0x3EB2AD0
	647 Move X25, [X0]
	648 Call 0x3EB2AE0
	649 Move W26, W31
	650 Compare X23, 0
	651 JumpIfEqual {680}
	652 Move X0, [X23+32]
	653 Compare X0, 0
	654 JumpIfEqual {663}
	655 Move X8, [X0]
	656 Move X9, [X8+664]
	657 Move X1, [X8+672]
	658 NotImplemented "Instruction BLR not yet implemented."
	659 NotImplemented "Instruction CMP not yet implemented."
	660 Move X0, [X31]
	661 Move X1, [X31+8]
	662 Call ASN1.Add, X0, X1
	663 Move X0, [X31]
	664 Move X20, [X31+96]
	665 Move X19, [X31+104]
	666 Move X22, [X31+80]
	667 Move X21, [X31+88]
	668 Move X24, [X31+64]
	669 Move X23, [X31+72]
	670 Move X26, [X31+48]
	671 Move X25, [X31+56]
	672 Move X28, [X31+32]
	673 Move X27, [X31+40]
	674 Move X29, [X31+16]
	675 Move X30, [X31+24]
	676 Add X31, X31, 112
	677 Return X0
	678 Move X0, X24
	679 Call 0x1C181E0
	680 Call 0x1C17F20
	681 Move X0, X22
	682 Call 0x1C181E0
	683 Move X0, X25
	684 Call 0x1C17F18
	685 Move X19, X0
	686 Move X25, X31
	687 Move X19, X0
	688 Move X25, X31
	689 Move X19, X0
	690 Move X8, 0xF04000
	691 Move X8, [X8+3584]
	692 Move X1, [X8]
	693 Move X0, X24
	694 Call 0x1C17E00
	695 Move X20, X0
	696 Compare X0, 0
	697 JumpIfEqual {721}
	698 Move X8, [X20]
	699 Move X10, 0xF04000
	700 NotImplemented "Instruction LDRH not yet implemented."
	701 Move X10, [X10+3584]
	702 Move X1, [X10]
	703 Compare X9, 0
	704 JumpIfEqual {711}
	705 Move X10, [X8+176]
	706 Add X10, X10, 8
	707 NotImplemented "Instruction LDUR not yet implemented."
	708 NotImplemented "Instruction CMP not yet implemented."
	709 Subtract X9, X9, 1
	710 Add X10, X10, 16
	711 Move X0, X20
	712 Move W2, W31
	713 Call 0x1C5D788
	714 NotImplemented "Instruction LDRSW not yet implemented."
	715 Add X8, X8, X9
	716 Add X0, X8, 312
	717 Move X8, [X0]
	718 Move X1, [X0+8]
	719 Move X0, X20
	720 NotImplemented "Instruction BLR not yet implemented."
	721 Compare X25, 0
	722 JumpIfEqual {759}
	723 Move X0, X25
	724 Call 0x1C17F18
	725 Move X19, X0
	726 Move X8, 0xF04000
	727 Move X8, [X8+3584]
	728 Move X1, [X8]
	729 Move X0, X24
	730 Call 0x1C17E00
	731 Move X20, X0
	732 Compare X0, 0
	733 JumpIfEqual {757}
	734 Move X8, [X20]
	735 Move X10, 0xF04000
	736 NotImplemented "Instruction LDRH not yet implemented."
	737 Move X10, [X10+3584]
	738 Move X1, [X10]
	739 Compare X9, 0
	740 JumpIfEqual {747}
	741 Move X10, [X8+176]
	742 Add X10, X10, 8
	743 NotImplemented "Instruction LDUR not yet implemented."
	744 NotImplemented "Instruction CMP not yet implemented."
	745 Subtract X9, X9, 1
	746 Add X10, X10, 16
	747 Move X0, X20
	748 Move W2, W31
	749 Call 0x1C5D788
	750 NotImplemented "Instruction LDRSW not yet implemented."
	751 Add X8, X8, X9
	752 Add X0, X8, 312
	753 Move X8, [X0]
	754 Move X1, [X0+8]
	755 Move X0, X20
	756 NotImplemented "Instruction BLR not yet implemented."
	757 Compare X25, 0
	758 JumpIfNotEqual {761}
	759 Move X0, X19
	760 Call 0x1D2D690
	761 Move X0, X25
	762 Call 0x1C17F18
	763 Call 0x1991590

Method: System.Byte[] MAC(System.Byte[] password, System.Byte[] salt, System.Int32 iterations, System.Byte[] data)

Disassembly:
	0x031ECAAC B 0x31ECAE4
	0x031ECAB0 B 0x31ECAE4
	0x031ECAB4 B 0x31ECAE4
	0x031ECAB8 B 0x31ECAE4
	0x031ECABC B 0x31ECAE4
	0x031ECAC0 B 0x31ECAE4
	0x031ECAC4 B 0x31ECAE4
	0x031ECAC8 B 0x31ECAE4
	0x031ECACC B 0x31ECAE4
	0x031ECAD0 B 0x31ECAE4
	0x031ECAD4 B 0x31ECAE4
	0x031ECAD8 B 0x31ECAE4
	0x031ECADC B 0x31ECAE4
	0x031ECAE0 B 0x31ECAE4
	0x031ECAE4 ADRP X23, 0xF07000
	0x031ECAE8 LDR X23, [X23 + 0xE00]
	0x031ECAEC CMP W1, 0x1
	0x031ECAF0 B.NE 0x31ECB08
	0x031ECAF4 BL 0x3EB1AD0
	0x031ECAF8 LDR X21, [X0]
	0x031ECAFC BL 0x3EB1AE0
	0x031ECB00 MOV W22, W31
	0x031ECB04 B 0x31EC918
	0x031ECB08 MOV X19, X0
	0x031ECB0C MOV X21, X31
	0x031ECB10 B 0x31ECB18
	0x031ECB14 MOV X19, X0
	0x031ECB18 ADRP X8, 0xF07000
	0x031ECB1C LDR X8, [X8 + 0xE00]
	0x031ECB20 LDR X1, [X8]
	0x031ECB24 MOV X0, X20
	0x031ECB28 BL 0x1C16E00
	0x031ECB2C MOV X20, X0
	0x031ECB30 CBZ X0, 0x31ECB94
	0x031ECB34 LDR X8, [X20]
	0x031ECB38 ADRP X10, 0xF07000
	0x031ECB3C LDRH W9, [X8 + 0x12E]
	0x031ECB40 LDR X10, [X10 + 0xE00]
	0x031ECB44 LDR X1, [X10]
	0x031ECB48 CBZ X9, 0x31ECB6C
	0x031ECB4C LDR X10, [X8 + 0xB0]
	0x031ECB50 ADD X10, X10, 0x8
	0x031ECB54 LDUR X11, [X10 - 0x8]
	0x031ECB58 CMP X11, X1
	0x031ECB5C B.EQ 0x31ECB7C
	0x031ECB60 SUBS X9, X9, 0x1
	0x031ECB64 ADD X10, X10, 0x10
	0x031ECB68 B.NE 0x31ECB54
	0x031ECB6C MOV X0, X20
	0x031ECB70 MOV W2, W31
	0x031ECB74 BL 0x1C5C788
	0x031ECB78 B 0x31ECB88
	0x031ECB7C LDRSW X9, [X10]
	0x031ECB80 ADD X8, X8, X9, 0x4, LSL
	0x031ECB84 ADD X0, X8, 0x138
	0x031ECB88 LDP X8, X1, [X0]
	0x031ECB8C MOV X0, X20
	0x031ECB90 BLR X8
	0x031ECB94 CBNZ X21, 0x31ECBA0
	0x031ECB98 MOV X0, X19
	0x031ECB9C BL 0x1D2C690
	0x031ECBA0 MOV X0, X21
	0x031ECBA4 BL 0x1C16F18
	0x031ECBA8 BL 0x1990590
	0x031ECBAC STR X30, [X31 - 0x40]!
	0x031ECBB0 STP X24, X23, [X31 + 0x10]
	0x031ECBB4 STP X22, X21, [X31 + 0x20]
	0x031ECBB8 STP X20, X19, [X31 + 0x30]
	0x031ECBBC ADRP X24, 0x11F0000
	0x031ECBC0 LDRB W8, [X24 + 0x17F]
	0x031ECBC4 MOV X20, X4
	0x031ECBC8 MOV W19, W3
	0x031ECBCC MOV X21, X2
	0x031ECBD0 MOV X22, X1
	0x031ECBD4 MOV X23, X0
	0x031ECBD8 TBNZ X8, 0x0, 0x31ECBF0
	0x031ECBDC ADRP X0, 0xF34000
	0x031ECBE0 LDR X0, [X0 + 0xEA0]
	0x031ECBE4 BL 0x1C16CF4
	0x031ECBE8 MOVZ W8, 0x1
	0x031ECBEC STRB W8, [X24 + 0x17F]
	0x031ECBF0 MOV X0, X23
	0x031ECBF4 MOV X1, X22
	0x031ECBF8 MOV X2, X21
	0x031ECBFC MOV W3, W19

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x11F1000
	009 Move X24, 0xF35000
	010 Move W8, [X20+389]
	011 Move X24, [X24+3560]
	012 Move X19, X4
	013 Move W21, W3
	014 Move X22, X2
	015 Move X23, X1
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {31}
	020 Move X0, 0xF35000
	021 Move X0, [X0+3560]
	022 Call 0x1C17CF4
	023 Move X0, 0xF35000
	024 Move X0, [X0+3568]
	025 Call 0x1C17CF4
	026 Move X0, 0xF35000
	027 Move X0, [X0+3392]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X20+389], W8
	031 Move X0, [X24]
	032 Call 0x1C17F10
	033 Move X1, X31
	034 Move X20, X0
	035 Call Object..ctor, X0
	036 Compare X20, 0
	037 JumpIfEqual {92}
	038 Move X8, 0xF35000
	039 Move X8, [X8+3392]
	040 Move X0, X20
	041 Move X1, X23
	042 Move X8, [X8]
	043 Move [X20+16], X8
	044 Call DeriveBytes.set_Password, X0, X1
	045 Move X0, X20
	046 Move X1, X22
	047 Call DeriveBytes.set_Salt, X0, X1
	048 Move X0, X31
	049 Move [X20+24], W21
	050 Call HMAC.Create
	051 Compare X0, 0
	052 JumpIfEqual {93}
	053 Move X9, 0xF35000
	054 Move X9, [X9+3568]
	055 Move X8, [X0]
	056 Move X21, X0
	057 Move X1, [X9]
	058 Move W10, [X8+304]
	059 Move W9, [X1+304]
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move X8, [X8+200]
	062 Add X8, X8, X9
	063 NotImplemented "Instruction LDUR not yet implemented."
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move W1, 20
	066 Move X0, X20
	067 Call DeriveBytes.DeriveMAC, X0, X1
	068 Move X8, [X21]
	069 Move X1, X0
	070 Move X0, X21
	071 Move X9, [X8+632]
	072 Move X2, [X8+640]
	073 NotImplemented "Instruction BLR not yet implemented."
	074 Compare X19, 0
	075 JumpIfEqual {92}
	076 Move W3, [X19+24]
	077 Move X0, X21
	078 Move X1, X19
	079 Move X20, [X31+48]
	080 Move X19, [X31+56]
	081 Move X22, [X31+32]
	082 Move X21, [X31+40]
	083 Move X24, [X31+16]
	084 Move X23, [X31+24]
	085 Move W2, W31
	086 Move X4, X31
	087 Move X30, [X31+64]
	088 Call HashAlgorithm.ComputeHash, X0, X1, X2, X3
	089 Return X0
	090 Move X0, X21
	091 Call 0x1C181E0
	092 Call 0x1C17F20
	093 Move W1, 20
	094 Move X0, X20
	095 Call DeriveBytes.DeriveMAC, X0, X1
	096 Call 0x1C17F20

Method: System.Byte[] GetBytes()

Disassembly:
	0x031F0198 LDR X9, [X8 + 0x298]
	0x031F019C LDR X1, [X8 + 0x2A0]
	0x031F01A0 BLR X9
	0x031F01A4 CMP W0, 0x1
	0x031F01A8 B.LT 0x31F01DC
	0x031F01AC ADRP X8, 0xF30000
	0x031F01B0 LDR X8, [X8 + 0xEB8]
	0x031F01B4 MOV X0, X24
	0x031F01B8 MOV X1, X21
	0x031F01BC LDR X2, [X8]
	0x031F01C0 BL 0x31F13C8
	0x031F01C4 CBZ X0, 0x31F0C34
	0x031F01C8 BL 0x31E9DD4
	0x031F01CC MOV X1, X0
	0x031F01D0 LDR X0, [X31 + 0x8]
	0x031F01D4 CBZ X0, 0x31F0C34
	0x031F01D8 BL 0x31E7ED0
	0x031F01DC LDR X0, [X24 + 0x38]
	0x031F01E0 CBZ X0, 0x31F0C34
	0x031F01E4 LDR X8, [X0]
	0x031F01E8 LDR X9, [X8 + 0x298]
	0x031F01EC LDR X1, [X8 + 0x2A0]
	0x031F01F0 BLR X9
	0x031F01F4 CMP W0, 0x1
	0x031F01F8 B.LT 0x31F04E8
	0x031F01FC LDR X0, [X26]
	0x031F0200 BL 0x1C16F10
	0x031F0204 MOV X1, X31
	0x031F0208 MOV X21, X0
	0x031F020C BL 0x33BDD8C
	0x031F0210 MOVZ W8, 0x30
	0x031F0214 STRB W8, [X21 + 0x10]
	0x031F0218 STR X31, [X21 + 0x18]
	0x031F021C LDR X0, [X24 + 0x38]
	0x031F0220 CBZ X0, 0x31F0C34
	0x031F0224 LDR X8, [X0]
	0x031F0228 LDR X9, [X8 + 0x388]
	0x031F022C LDR X1, [X8 + 0x390]
	0x031F0230 BLR X9
	0x031F0234 MOV X22, X0
	0x031F0238 CBZ X0, 0x31F0C98
	0x031F023C ADRP X19, 0xF03000
	0x031F0240 ADRP X20, 0xF30000
	0x031F0244 ADRP X24, 0xF30000
	0x031F0248 ADRP X25, 0xF30000
	0x031F024C LDR X19, [X19 + 0xE18]
	0x031F0250 LDR X20, [X20 + 0xE08]
	0x031F0254 LDR X24, [X24 + 0xE18]
	0x031F0258 LDR X25, [X25 + 0xE30]
	0x031F025C LDR X8, [X22]
	0x031F0260 LDR X1, [X19]
	0x031F0264 LDRH W9, [X8 + 0x12E]
	0x031F0268 CBZ X9, 0x31F028C
	0x031F026C LDR X10, [X8 + 0xB0]
	0x031F0270 ADD X10, X10, 0x8
	0x031F0274 LDUR X11, [X10 - 0x8]
	0x031F0278 CMP X11, X1
	0x031F027C B.EQ 0x31F029C
	0x031F0280 SUBS X9, X9, 0x1
	0x031F0284 ADD X10, X10, 0x10
	0x031F0288 B.NE 0x31F0274
	0x031F028C MOV X0, X22
	0x031F0290 MOV W2, W31
	0x031F0294 BL 0x1C5C788
	0x031F0298 B 0x31F02A8
	0x031F029C LDRSW X9, [X10]
	0x031F02A0 ADD X8, X8, X9, 0x4, LSL
	0x031F02A4 ADD X0, X8, 0x138
	0x031F02A8 LDP X8, X1, [X0]
	0x031F02AC MOV X0, X22
	0x031F02B0 BLR X8
	0x031F02B4 TBZ X0, 0x0, 0x31F0388
	0x031F02B8 LDR X8, [X22]
	0x031F02BC LDR X1, [X19]
	0x031F02C0 LDRH W9, [X8 + 0x12E]
	0x031F02C4 CBZ X9, 0x31F02E8
	0x031F02C8 LDR X10, [X8 + 0xB0]
	0x031F02CC ADD X10, X10, 0x8
	0x031F02D0 LDUR X11, [X10 - 0x8]
	0x031F02D4 CMP X11, X1
	0x031F02D8 B.EQ 0x31F02F8
	0x031F02DC SUBS X9, X9, 0x1
	0x031F02E0 ADD X10, X10, 0x10
	0x031F02E4 B.NE 0x31F02D0
	0x031F02E8 MOVZ W2, 0x1
	0x031F02EC MOV X0, X22
	0x031F02F0 BL 0x1C5C788
	0x031F02F4 B 0x31F0308
	0x031F02F8 LDR W9, [X10]
	0x031F02FC ADD W9, W9, 0x1
	0x031F0300 ADD X8, X8, W9, 0x4, SXTW
	0x031F0304 ADD X0, X8, 0x138
	0x031F0308 LDP X8, X1, [X0]
	0x031F030C MOV X0, X22
	0x031F0310 BLR X8
	0x031F0314 MOV X23, X0
	0x031F0318 CBZ X0, 0x31F0C48
	0x031F031C LDR X8, [X23]
	0x031F0320 LDR X1, [X20]
	0x031F0324 LDRB W10, [X8 + 0x130]
	0x031F0328 LDRB W9, [X1 + 0x130]
	0x031F032C CMP W10, W9
	0x031F0330 B.CC 0x31F0C2C
	0x031F0334 LDR X8, [X8 + 0xC8]
	0x031F0338 ADD X8, X8, X9, 0x3, LSL
	0x031F033C LDUR X8, [X8 - 0x8]
	0x031F0340 CMP X8, X1
	0x031F0344 B.NE 0x31F0C2C
	0x031F0348 LDR X0, [X23 + 0x10]
	0x031F034C CBZ X0, 0x31F0C4C
	0x031F0350 LDR X1, [X24]
	0x031F0354 MOV X2, X31
	0x031F0358 BL 0x322693C
	0x031F035C TBNZ X0, 0x0, 0x31F0378
	0x031F0360 LDR X0, [X23 + 0x10]
	0x031F0364 CBZ X0, 0x31F0C58
	0x031F0368 LDR X1, [X25]
	0x031F036C MOV X2, X31
	0x031F0370 BL 0x322693C
	0x031F0374 TBZ X0, 0x0, 0x31F025C
	0x031F0378 LDR X1, [X23 + 0x18]
	0x031F037C MOV X0, X21
	0x031F0380 BL 0x31E7ED0
	0x031F0384 B 0x31F025C
	0x031F0388 MOV X24, X31
	0x031F038C MOVZ W19, 0x1F
	0x031F0390 ADRP X25, 0xF03000
	0x031F0394 LDR X25, [X25 + 0xE00]
	0x031F0398 MOV X0, X22
	0x031F039C LDR X1, [X25]
	0x031F03A0 BL 0x1C16E00
	0x031F03A4 CBZ X0, 0x31F0404
	0x031F03A8 LDR X8, [X0]
	0x031F03AC LDR X1, [X25]
	0x031F03B0 MOV X22, X0
	0x031F03B4 LDRH W9, [X8 + 0x12E]
	0x031F03B8 CBZ X9, 0x31F03DC
	0x031F03BC LDR X10, [X8 + 0xB0]
	0x031F03C0 ADD X10, X10, 0x8
	0x031F03C4 LDUR X11, [X10 - 0x8]
	0x031F03C8 CMP X11, X1
	0x031F03CC B.EQ 0x31F03EC
	0x031F03D0 SUBS X9, X9, 0x1
	0x031F03D4 ADD X10, X10, 0x10
	0x031F03D8 B.NE 0x31F03C4
	0x031F03DC MOV X0, X22
	0x031F03E0 MOV W2, W31
	0x031F03E4 BL 0x1C5C788
	0x031F03E8 B 0x31F03F8
	0x031F03EC LDRSW X9, [X10]
	0x031F03F0 ADD X8, X8, X9, 0x4, LSL
	0x031F03F4 ADD X0, X8, 0x138
	0x031F03F8 LDP X8, X1, [X0]
	0x031F03FC MOV X0, X22
	0x031F0400 BLR X8
	0x031F0404 CBNZ X24, 0x31F0C74
	0x031F0408 CMP W19, 0x1F
	0x031F040C B.EQ 0x31F0414
	0x031F0410 CBNZ W19, 0x31F0760
	0x031F0414 CBZ X21, 0x31F0C34
	0x031F0418 ADRP X26, 0xF30000
	0x031F041C LDR X0, [X21 + 0x20]
	0x031F0420 LDR X26, [X26 + 0xB98]
	0x031F0424 LDR X24, [X31 + 0x18]
	0x031F0428 CBZ X0, 0x31F04E8
	0x031F042C LDR X8, [X0]
	0x031F0430 LDR X9, [X8 + 0x298]
	0x031F0434 LDR X1, [X8 + 0x2A0]
	0x031F0438 BLR X9
	0x031F043C CMP W0, 0x1
	0x031F0440 B.LT 0x31F04E8
	0x031F0444 LDR X0, [X26]
	0x031F0448 BL 0x1C16F10
	0x031F044C MOV X1, X31
	0x031F0450 MOV X22, X0
	0x031F0454 BL 0x33BDD8C
	0x031F0458 MOVZ W8, 0xA0
	0x031F045C STR X31, [X22 + 0x18]
	0x031F0460 STRB W8, [X22 + 0x10]
	0x031F0464 LDR X8, [X21]
	0x031F0468 MOV X0, X21
	0x031F046C LDP X9, X1, [X8 + 0x178]
	0x031F0470 BLR X9
	0x031F0474 LDR X8, [X26]
	0x031F0478 MOV X21, X0
	0x031F047C MOV X0, X8
	0x031F0480 BL 0x1C16F10
	0x031F0484 MOV X1, X31
	0x031F0488 MOV X23, X0
	0x031F048C BL 0x33BDD8C
	0x031F0490 MOVZ W8, 0x4
	0x031F0494 MOV X0, X22
	0x031F0498 MOV X1, X23
	0x031F049C STRB W8, [X23 + 0x10]
	0x031F04A0 STR X21, [X23 + 0x18]
	0x031F04A4 BL 0x31E7ED0
	0x031F04A8 ADRP X8, 0xF30000
	0x031F04AC LDR X8, [X8 + 0xC70]
	0x031F04B0 LDR X0, [X8]
	0x031F04B4 BL 0x1C16F10
	0x031F04B8 ADRP X8, 0xF30000
	0x031F04BC LDR X8, [X8 + 0xD80]
	0x031F04C0 MOV X21, X0
	0x031F04C4 LDR X19, [X8]
	0x031F04C8 BL 0x31E9B58
	0x031F04CC MOV X0, X21
	0x031F04D0 STP X19, X22, [X21 + 0x10]
	0x031F04D4 BL 0x31E9DD4
	0x031F04D8 MOV X1, X0
	0x031F04DC LDR X0, [X31 + 0x8]
	0x031F04E0 CBZ X0, 0x31F0C34
	0x031F04E4 BL 0x31E7ED0
	0x031F04E8 LDR X0, [X24 + 0x38]
	0x031F04EC CBZ X0, 0x31F0C34
	0x031F04F0 LDR X8, [X0]
	0x031F04F4 LDR X9, [X8 + 0x298]
	0x031F04F8 LDR X1, [X8 + 0x2A0]
	0x031F04FC BLR X9
	0x031F0500 CMP W0, 0x1
	0x031F0504 B.LT 0x31F0780
	0x031F0508 LDR X0, [X26]
	0x031F050C BL 0x1C16F10
	0x031F0510 MOV X1, X31
	0x031F0514 MOV X21, X0
	0x031F0518 BL 0x33BDD8C
	0x031F051C MOVZ W8, 0x30
	0x031F0520 STRB W8, [X21 + 0x10]
	0x031F0524 STR X31, [X21 + 0x18]
	0x031F0528 LDR X0, [X24 + 0x38]
	0x031F052C CBZ X0, 0x31F0C34
	0x031F0530 LDR X8, [X0]
	0x031F0534 LDR X9, [X8 + 0x388]
	0x031F0538 LDR X1, [X8 + 0x390]
	0x031F053C BLR X9
	0x031F0540 MOV X22, X0
	0x031F0544 CBZ X0, 0x31F0C9C
	0x031F0548 ADRP X19, 0xF03000
	0x031F054C ADRP X20, 0xF30000
	0x031F0550 ADRP X24, 0xF30000
	0x031F0554 LDR X19, [X19 + 0xE18]
	0x031F0558 LDR X20, [X20 + 0xE08]
	0x031F055C LDR X24, [X24 + 0xE28]
	0x031F0560 LDR X8, [X22]
	0x031F0564 LDR X1, [X19]
	0x031F0568 LDRH W9, [X8 + 0x12E]
	0x031F056C CBZ X9, 0x31F0590
	0x031F0570 LDR X10, [X8 + 0xB0]
	0x031F0574 ADD X10, X10, 0x8
	0x031F0578 LDUR X11, [X10 - 0x8]
	0x031F057C CMP X11, X1
	0x031F0580 B.EQ 0x31F05A0
	0x031F0584 SUBS X9, X9, 0x1
	0x031F0588 ADD X10, X10, 0x10
	0x031F058C B.NE 0x31F0578
	0x031F0590 MOV X0, X22
	0x031F0594 MOV W2, W31
	0x031F0598 BL 0x1C5C788
	0x031F059C B 0x31F05AC
	0x031F05A0 LDRSW X9, [X10]
	0x031F05A4 ADD X8, X8, X9, 0x4, LSL
	0x031F05A8 ADD X0, X8, 0x138
	0x031F05AC LDP X8, X1, [X0]
	0x031F05B0 MOV X0, X22
	0x031F05B4 BLR X8
	0x031F05B8 TBZ X0, 0x0, 0x31F0674
	0x031F05BC LDR X8, [X22]
	0x031F05C0 LDR X1, [X19]
	0x031F05C4 LDRH W9, [X8 + 0x12E]
	0x031F05C8 CBZ X9, 0x31F05EC
	0x031F05CC LDR X10, [X8 + 0xB0]
	0x031F05D0 ADD X10, X10, 0x8
	0x031F05D4 LDUR X11, [X10 - 0x8]
	0x031F05D8 CMP X11, X1
	0x031F05DC B.EQ 0x31F05FC
	0x031F05E0 SUBS X9, X9, 0x1
	0x031F05E4 ADD X10, X10, 0x10
	0x031F05E8 B.NE 0x31F05D4
	0x031F05EC MOVZ W2, 0x1
	0x031F05F0 MOV X0, X22
	0x031F05F4 BL 0x1C5C788
	0x031F05F8 B 0x31F060C
	0x031F05FC LDR W9, [X10]
	0x031F0600 ADD W9, W9, 0x1
	0x031F0604 ADD X8, X8, W9, 0x4, SXTW
	0x031F0608 ADD X0, X8, 0x138
	0x031F060C LDP X8, X1, [X0]
	0x031F0610 MOV X0, X22
	0x031F0614 BLR X8
	0x031F0618 MOV X23, X0
	0x031F061C CBZ X0, 0x31F0C50
	0x031F0620 LDR X8, [X23]
	0x031F0624 LDR X1, [X20]
	0x031F0628 LDRB W10, [X8 + 0x130]
	0x031F062C LDRB W9, [X1 + 0x130]
	0x031F0630 CMP W10, W9
	0x031F0634 B.CC 0x31F0C38
	0x031F0638 LDR X8, [X8 + 0xC8]
	0x031F063C ADD X8, X8, X9, 0x3, LSL
	0x031F0640 LDUR X8, [X8 - 0x8]
	0x031F0644 CMP X8, X1
	0x031F0648 B.NE 0x31F0C38
	0x031F064C LDR X0, [X23 + 0x10]
	0x031F0650 CBZ X0, 0x31F0C54
	0x031F0654 LDR X1, [X24]
	0x031F0658 MOV X2, X31
	0x031F065C BL 0x322693C
	0x031F0660 TBZ X0, 0x0, 0x31F0560
	0x031F0664 LDR X1, [X23 + 0x18]
	0x031F0668 MOV X0, X21
	0x031F066C BL 0x31E7ED0
	0x031F0670 B 0x31F0560
	0x031F0674 MOV X24, X31
	0x031F0678 MOVZ W19, 0x23
	0x031F067C LDR X1, [X25]
	0x031F0680 MOV X0, X22
	0x031F0684 BL 0x1C16E00
	0x031F0688 CBZ X0, 0x31F06E8
	0x031F068C LDR X8, [X0]
	0x031F0690 LDR X1, [X25]
	0x031F0694 MOV X22, X0
	0x031F0698 LDRH W9, [X8 + 0x12E]
	0x031F069C CBZ X9, 0x31F06C0
	0x031F06A0 LDR X10, [X8 + 0xB0]
	0x031F06A4 ADD X10, X10, 0x8
	0x031F06A8 LDUR X11, [X10 - 0x8]
	0x031F06AC CMP X11, X1
	0x031F06B0 B.EQ 0x31F06D0
	0x031F06B4 SUBS X9, X9, 0x1
	0x031F06B8 ADD X10, X10, 0x10
	0x031F06BC B.NE 0x31F06A8
	0x031F06C0 MOV X0, X22
	0x031F06C4 MOV W2, W31
	0x031F06C8 BL 0x1C5C788
	0x031F06CC B 0x31F06DC
	0x031F06D0 LDRSW X9, [X10]
	0x031F06D4 ADD X8, X8, X9, 0x4, LSL
	0x031F06D8 ADD X0, X8, 0x138
	0x031F06DC LDP X8, X1, [X0]
	0x031F06E0 MOV X0, X22
	0x031F06E4 BLR X8
	0x031F06E8 CBNZ X24, 0x31F0C74
	0x031F06EC CMP W19, 0x23
	0x031F06F0 B.EQ 0x31F06F8
	0x031F06F4 CBNZ W19, 0x31F0760
	0x031F06F8 CBZ X21, 0x31F0C34
	0x031F06FC ADRP X26, 0xF30000
	0x031F0700 LDR X0, [X21 + 0x20]
	0x031F0704 LDR X26, [X26 + 0xB98]
	0x031F0708 LDR X24, [X31 + 0x18]
	0x031F070C CBZ X0, 0x31F0780
	0x031F0710 LDR X8, [X0]
	0x031F0714 LDR X9, [X8 + 0x298]
	0x031F0718 LDR X1, [X8 + 0x2A0]
	0x031F071C BLR X9
	0x031F0720 CMP W0, 0x1
	0x031F0724 B.LT 0x31F0780
	0x031F0728 ADRP X8, 0xF30000
	0x031F072C LDR X8, [X8 + 0xEB8]
	0x031F0730 MOV X0, X24
	0x031F0734 MOV X1, X21
	0x031F0738 LDR X2, [X8]
	0x031F073C BL 0x31F13C8
	0x031F0740 CBZ X0, 0x31F0C34
	0x031F0744 BL 0x31E9DD4
	0x031F0748 LDR X19, [X31 + 0x8]
	0x031F074C CBZ X19, 0x31F0C34
	0x031F0750 MOV X1, X0
	0x031F0754 MOV X0, X19
	0x031F0758 BL 0x31E7ED0
	0x031F075C B 0x31F0788
	0x031F0760 LDP X20, X19, [X31 + 0x70]
	0x031F0764 LDP X22, X21, [X31 + 0x60]
	0x031F0768 LDP X24, X23, [X31 + 0x50]
	0x031F076C LDP X26, X25, [X31 + 0x40]
	0x031F0770 LDP X28, X27, [X31 + 0x30]
	0x031F0774 LDP X29, X30, [X31 + 0x20]
	0x031F0778 ADD X31, X31, 0x80
	0x031F077C RET
	0x031F0780 LDR X19, [X31 + 0x8]
	0x031F0784 CBZ X19, 0x31F0C34
	0x031F0788 LDR X8, [X19]
	0x031F078C MOV X0, X19
	0x031F0790 LDP X9, X1, [X8 + 0x178]
	0x031F0794 BLR X9
	0x031F0798 LDR X8, [X26]
	0x031F079C MOV X20, X0
	0x031F07A0 MOV X0, X8
	0x031F07A4 BL 0x1C16F10
	0x031F07A8 MOV X1, X31
	0x031F07AC MOV X21, X0
	0x031F07B0 BL 0x33BDD8C
	0x031F07B4 MOVZ W8, 0x4
	0x031F07B8 STRB W8, [X21 + 0x10]
	0x031F07BC STR X20, [X21 + 0x18]
	0x031F07C0 LDR X0, [X26]
	0x031F07C4 BL 0x1C16F10
	0x031F07C8 MOV X1, X31
	0x031F07CC MOV X20, X0
	0x031F07D0 BL 0x33BDD8C
	0x031F07D4 MOVZ W8, 0xA0
	0x031F07D8 MOV X0, X20
	0x031F07DC MOV X1, X21
	0x031F07E0 STRB W8, [X20 + 0x10]
	0x031F07E4 STR X31, [X20 + 0x18]
	0x031F07E8 BL 0x31E7ED0
	0x031F07EC ADRP X8, 0xF30000
	0x031F07F0 LDR X8, [X8 + 0xC70]
	0x031F07F4 LDR X0, [X8]
	0x031F07F8 BL 0x1C16F10
	0x031F07FC ADRP X8, 0xF30000
	0x031F0800 LDR X8, [X8 + 0xD80]
	0x031F0804 MOV X21, X0
	0x031F0808 LDR X19, [X8]
	0x031F080C BL 0x31E9B58
	0x031F0810 STP X19, X20, [X21 + 0x10]
	0x031F0814 LDR X0, [X26]
	0x031F0818 BL 0x1C16F10
	0x031F081C MOV X1, X31
	0x031F0820 MOV X20, X0
	0x031F0824 BL 0x33BDD8C
	0x031F0828 MOVZ W8, 0x30
	0x031F082C STRB W8, [X20 + 0x10]
	0x031F0830 STR X31, [X20 + 0x18]
	0x031F0834 LDR X8, [X24 + 0x10]
	0x031F0838 CBZ X8, 0x31F09C8
	0x031F083C ADRP X8, 0xF03000
	0x031F0840 LDR X8, [X8 + 0x618]
	0x031F0844 MOVZ W1, 0x14
	0x031F0848 LDR X0, [X8]
	0x031F084C BL 0x1C16D6C
	0x031F0850 LDR X8, [X24 + 0x40]
	0x031F0854 MOV X22, X0
	0x031F0858 CBNZ X8, 0x31F0870
	0x031F085C MOV X0, X31
	0x031F0860 BL 0x3256158
	0x031F0864 MOV X8, X0
	0x031F0868 STR X0, [X24 + 0x40]
	0x031F086C CBZ X0, 0x31F0C34
	0x031F0870 LDR X9, [X8]
	0x031F0874 MOV X0, X8
	0x031F0878 MOV X1, X22
	0x031F087C LDP X10, X2, [X9 + 0x198]
	0x031F0880 BLR X10
	0x031F0884 LDR X0, [X21 + 0x18]
	0x031F0888 CBZ X0, 0x31F0C34
	0x031F088C MOV X27, X24
	0x031F0890 LDR X24, [X24 + 0x10]
	0x031F0894 LDR W23, [X27 + 0x34]
	0x031F0898 MOV W1, W31
	0x031F089C BL 0x31E8704
	0x031F08A0 CBZ X0, 0x31F0C34
	0x031F08A4 BL 0x31E7D00
	0x031F08A8 MOV X1, X24
	0x031F08AC MOV X2, X22
	0x031F08B0 MOV W3, W23
	0x031F08B4 MOV X4, X0
	0x031F08B8 BL 0x31EBAAC
	0x031F08BC LDR X8, [X26]
	0x031F08C0 MOV X23, X0
	0x031F08C4 MOV X0, X8
	0x031F08C8 BL 0x1C16F10
	0x031F08CC MOV X1, X31
	0x031F08D0 MOV X24, X0
	0x031F08D4 BL 0x33BDD8C
	0x031F08D8 MOVZ W19, 0x30
	0x031F08DC STR X31, [X24 + 0x18]
	0x031F08E0 STRB W19, [X24 + 0x10]
	0x031F08E4 ADRP X8, 0xF30000
	0x031F08E8 LDR X8, [X8 + 0xD08]
	0x031F08EC LDR X0, [X8]
	0x031F08F0 BL 0x31E8DA0
	0x031F08F4 MOV X1, X0
	0x031F08F8 MOV X0, X24
	0x031F08FC BL 0x31E7ED0
	0x031F0900 LDR X0, [X26]
	0x031F0904 BL 0x1C16F10
	0x031F0908 MOV X1, X31
	0x031F090C MOV X25, X0
	0x031F0910 BL 0x33BDD8C
	0x031F0914 MOVZ W8, 0x5
	0x031F0918 MOV X0, X24
	0x031F091C MOV X1, X25
	0x031F0920 STRB W8, [X25 + 0x10]
	0x031F0924 STR X31, [X25 + 0x18]
	0x031F0928 BL 0x31E7ED0
	0x031F092C LDR X0, [X26]
	0x031F0930 BL 0x1C16F10
	0x031F0934 MOV X1, X31
	0x031F0938 MOV X25, X0
	0x031F093C BL 0x33BDD8C
	0x031F0940 MOV X0, X25
	0x031F0944 MOV X1, X24
	0x031F0948 STRB W19, [X25 + 0x10]
	0x031F094C STR X31, [X25 + 0x18]
	0x031F0950 BL 0x31E7ED0
	0x031F0954 LDR X0, [X26]
	0x031F0958 BL 0x1C16F10
	0x031F095C MOV X1, X31
	0x031F0960 MOV X24, X0
	0x031F0964 BL 0x33BDD8C
	0x031F0968 MOVZ W19, 0x4
	0x031F096C MOV X0, X25
	0x031F0970 MOV X1, X24
	0x031F0974 STRB W19, [X24 + 0x10]
	0x031F0978 STR X23, [X24 + 0x18]
	0x031F097C BL 0x31E7ED0
	0x031F0980 MOV X0, X20
	0x031F0984 MOV X1, X25
	0x031F0988 BL 0x31E7ED0
	0x031F098C LDR X0, [X26]
	0x031F0990 BL 0x1C16F10
	0x031F0994 MOV X1, X31
	0x031F0998 MOV X23, X0
	0x031F099C BL 0x33BDD8C
	0x031F09A0 MOV X0, X20
	0x031F09A4 MOV X1, X23
	0x031F09A8 STRB W19, [X23 + 0x10]
	0x031F09AC STR X22, [X23 + 0x18]
	0x031F09B0 BL 0x31E7ED0
	0x031F09B4 LDR W0, [X27 + 0x34]
	0x031F09B8 BL 0x31E8C1C
	0x031F09BC MOV X1, X0
	0x031F09C0 MOV X0, X20
	0x031F09C4 BL 0x31E7ED0
	0x031F09C8 ADRP X8, 0xF03000
	0x031F09CC LDR X8, [X8 + 0x618]
	0x031F09D0 MOVZ W1, 0x1
	0x031F09D4 LDR X0, [X8]
	0x031F09D8 BL 0x1C16D6C
	0x031F09DC CBZ X0, 0x31F0C34
	0x031F09E0 LDR W8, [X0 + 0x18]
	0x031F09E4 MOV X19, X0
	0x031F09E8 CBZ W8, 0x31F0C94
	0x031F09EC MOVZ W8, 0x3
	0x031F09F0 STRB W8, [X19 + 0x20]
	0x031F09F4 LDR X0, [X26]
	0x031F09F8 BL 0x1C16F10
	0x031F09FC MOV X1, X31
	0x031F0A00 MOV X22, X0
	0x031F0A04 BL 0x33BDD8C
	0x031F0A08 MOVZ W8, 0x2
	0x031F0A0C STRB W8, [X22 + 0x10]
	0x031F0A10 STR X19, [X22 + 0x18]
	0x031F0A14 LDR X0, [X26]
	0x031F0A18 BL 0x1C16F10
	0x031F0A1C MOV X1, X31
	0x031F0A20 MOV X19, X0
	0x031F0A24 BL 0x33BDD8C
	0x031F0A28 MOVZ W8, 0x30
	0x031F0A2C MOV X0, X19
	0x031F0A30 MOV X1, X22
	0x031F0A34 STRB W8, [X19 + 0x10]
	0x031F0A38 STR X31, [X19 + 0x18]
	0x031F0A3C BL 0x31E7ED0
	0x031F0A40 MOV X0, X21
	0x031F0A44 BL 0x31E9DD4
	0x031F0A48 MOV X1, X0
	0x031F0A4C MOV X0, X19
	0x031F0A50 BL 0x31E7ED0
	0x031F0A54 LDR X0, [X20 + 0x20]
	0x031F0A58 CBZ X0, 0x31F0A80
	0x031F0A5C LDR X8, [X0]
	0x031F0A60 LDR X9, [X8 + 0x298]
	0x031F0A64 LDR X1, [X8 + 0x2A0]
	0x031F0A68 BLR X9
	0x031F0A6C CMP W0, 0x1
	0x031F0A70 B.LT 0x31F0A80
	0x031F0A74 MOV X0, X19
	0x031F0A78 MOV X1, X20
	0x031F0A7C BL 0x31E7ED0
	0x031F0A80 LDR X8, [X19]
	0x031F0A84 MOV X0, X19
	0x031F0A88 LDP X20, X19, [X31 + 0x70]
	0x031F0A8C LDP X22, X21, [X31 + 0x60]
	0x031F0A90 LDP X2, X1, [X8 + 0x178]
	0x031F0A94 LDP X24, X23, [X31 + 0x50]
	0x031F0A98 LDP X26, X25, [X31 + 0x40]
	0x031F0A9C LDP X28, X27, [X31 + 0x30]
	0x031F0AA0 LDP X29, X30, [X31 + 0x20]
	0x031F0AA4 ADD X31, X31, 0x80
	0x031F0AA8 BR X2
	0x031F0AAC MOV X29, X31
	0x031F0AB0 ADRP X8, 0xF03000
	0x031F0AB4 LDR X8, [X8 + 0xE00]
	0x031F0AB8 LDR X1, [X8]
	0x031F0ABC MOV X0, X27
	0x031F0AC0 BL 0x1C16E00
	0x031F0AC4 MOV X26, X0
	0x031F0AC8 CBZ X0, 0x31F0B9C
	0x031F0ACC LDR X8, [X26]
	0x031F0AD0 ADRP X10, 0xF03000
	0x031F0AD4 LDRH W9, [X8 + 0x12E]
	0x031F0AD8 LDR X10, [X10 + 0xE00]
	0x031F0ADC LDR X1, [X10]
	0x031F0AE0 CBZ X9, 0x31F0B04
	0x031F0AE4 LDR X10, [X8 + 0xB0]
	0x031F0AE8 ADD X10, X10, 0x8
	0x031F0AEC LDUR X11, [X10 - 0x8]
	0x031F0AF0 CMP X11, X1
	0x031F0AF4 B.EQ 0x31F0B84
	0x031F0AF8 SUBS X9, X9, 0x1
	0x031F0AFC ADD X10, X10, 0x10
	0x031F0B00 B.NE 0x31F0AEC
	0x031F0B04 MOV X0, X26
	0x031F0B08 MOV W2, W31
	0x031F0B0C BL 0x1C5C788
	0x031F0B10 B 0x31F0B90
	0x031F0B14 MOV X28, X31
	0x031F0B18 ADRP X8, 0xF03000
	0x031F0B1C LDR X8, [X8 + 0xE00]
	0x031F0B20 LDR X1, [X8]
	0x031F0B24 MOV X0, X27
	0x031F0B28 BL 0x1C16E00
	0x031F0B2C MOV X25, X0
	0x031F0B30 CBZ X0, 0x31F0BD4
	0x031F0B34 LDR X8, [X25]
	0x031F0B38 ADRP X10, 0xF03000
	0x031F0B3C LDRH W9, [X8 + 0x12E]
	0x031F0B40 LDR X10, [X10 + 0xE00]
	0x031F0B44 LDR X1, [X10]
	0x031F0B48 CBZ X9, 0x31F0B6C
	0x031F0B4C LDR X10, [X8 + 0xB0]
	0x031F0B50 ADD X10, X10, 0x8
	0x031F0B54 LDUR X11, [X10 - 0x8]
	0x031F0B58 CMP X11, X1
	0x031F0B5C B.EQ 0x31F0BBC
	0x031F0B60 SUBS X9, X9, 0x1
	0x031F0B64 ADD X10, X10, 0x10
	0x031F0B68 B.NE 0x31F0B54
	0x031F0B6C MOV X0, X25
	0x031F0B70 MOV W2, W31
	0x031F0B74 BL 0x1C5C788
	0x031F0B78 B 0x31F0BC8
	0x031F0B7C MOV X0, X22
	0x031F0B80 BL 0x1C171E0
	0x031F0B84 LDRSW X9, [X10]
	0x031F0B88 ADD X8, X8, X9, 0x4, LSL
	0x031F0B8C ADD X0, X8, 0x138
	0x031F0B90 LDP X8, X1, [X0]
	0x031F0B94 MOV X0, X26
	0x031F0B98 BLR X8
	0x031F0B9C CBZ X29, 0x31F123C
	0x031F0BA0 MOV X0, X29
	0x031F0BA4 BL 0x1C16F18
	0x031F0BA8 BL 0x1C16F20
	0x031F0BAC BL 0x1C16F20
	0x031F0BB0 MOV X0, X29
	0x031F0BB4 BL 0x1C16F18
	0x031F0BB8 BL 0x1C16F20
	0x031F0BBC LDRSW X9, [X10]
	0x031F0BC0 ADD X8, X8, X9, 0x4, LSL
	0x031F0BC4 ADD X0, X8, 0x138
	0x031F0BC8 LDP X8, X1, [X0]
	0x031F0BCC MOV X0, X25
	0x031F0BD0 BLR X8
	0x031F0BD4 CBZ X28, 0x31F116C
	0x031F0BD8 MOV X0, X28
	0x031F0BDC BL 0x1C16F18
	0x031F0BE0 MOV X0, X25
	0x031F0BE4 BL 0x1C171E0
	0x031F0BE8 MOV X0, X8
	0x031F0BEC BL 0x1C171E0
	0x031F0BF0 BL 0x1C16F20
	0x031F0BF4 BL 0x1C16F20
	0x031F0BF8 BL 0x1C16F20
	0x031F0BFC BL 0x1C16F20
	0x031F0C00 BL 0x1C16F20
	0x031F0C04 BL 0x1C16F20
	0x031F0C08 MOV X0, X28
	0x031F0C0C BL 0x1C16F18
	0x031F0C10 BL 0x1C16F20
	0x031F0C14 MOV X0, X8
	0x031F0C18 BL 0x1C171E0
	0x031F0C1C BL 0x1C16F20
	0x031F0C20 MOV X0, X23
	0x031F0C24 BL 0x1C171E0
	0x031F0C28 BL 0x1C16F20
	0x031F0C2C MOV X0, X23
	0x031F0C30 BL 0x1C171E0
	0x031F0C34 BL 0x1C16F20
	0x031F0C38 MOV X0, X23
	0x031F0C3C BL 0x1C171E0
	0x031F0C40 BL 0x1C16F20
	0x031F0C44 BL 0x1C16F20
	0x031F0C48 BL 0x1C16F20
	0x031F0C4C BL 0x1C16F20
	0x031F0C50 BL 0x1C16F20
	0x031F0C54 BL 0x1C16F20
	0x031F0C58 BL 0x1C16F20
	0x031F0C5C MOV X0, X22
	0x031F0C60 BL 0x1C16F18
	0x031F0C64 BL 0x1C16F20
	0x031F0C68 BL 0x1C16F20
	0x031F0C6C MOV X0, X26
	0x031F0C70 BL 0x1C16F18
	0x031F0C74 MOV X0, X24
	0x031F0C78 BL 0x1C16F18
	0x031F0C7C BL 0x1C16F20
	0x031F0C80 MOV X0, X25
	0x031F0C84 BL 0x1C16F18
	0x031F0C88 BL 0x1C16F20
	0x031F0C8C BL 0x1C16F20
	0x031F0C90 BL 0x1C16F20
	0x031F0C94 BL 0x1C16F28
	0x031F0C98 BL 0x1C16F20
	0x031F0C9C BL 0x1C16F20
	0x031F0CA0 MOV X26, X1
	0x031F0CA4 MOV X23, X0
	0x031F0CA8 B 0x31F0B18
	0x031F0CAC MOV X28, X1
	0x031F0CB0 MOV X23, X0
	0x031F0CB4 B 0x31F0AB0
	0x031F0CB8 B 0x31F0D18
	0x031F0CBC B 0x31F0DE0
	0x031F0CC0 B 0x31F0EA8
	0x031F0CC4 B 0x31F0FBC
	0x031F0CC8 B 0x31F10A0
	0x031F0CCC B 0x31F1164
	0x031F0CD0 B 0x31F1234
	0x031F0CD4 B 0x31F12F8
	0x031F0CD8 B 0x31F0D18
	0x031F0CDC B 0x31F0DE0
	0x031F0CE0 B 0x31F0DE0
	0x031F0CE4 B 0x31F0EA8
	0x031F0CE8 B 0x31F0DE0
	0x031F0CEC B 0x31F0D18
	0x031F0CF0 B 0x31F0D18
	0x031F0CF4 B 0x31F0D18
	0x031F0CF8 B 0x31F0DE0
	0x031F0CFC B 0x31F0DE0
	0x031F0D00 B 0x31F0DE0
	0x031F0D04 B 0x31F0EA8
	0x031F0D08 B 0x31F0EA8
	0x031F0D0C B 0x31F0EA8
	0x031F0D10 B 0x31F0D18
	0x031F0D14 B 0x31F0D18
	0x031F0D18 MOV X23, X0
	0x031F0D1C CMP W1, 0x1
	0x031F0D20 B.NE 0x31F0D44
	0x031F0D24 MOV X0, X23
	0x031F0D28 BL 0x3EB1AD0
	0x031F0D2C LDR X24, [X0]
	0x031F0D30 BL 0x3EB1AE0
	0x031F0D34 ADRP X25, 0xF03000
	0x031F0D38 LDR X25, [X25 + 0xE00]
	0x031F0D3C MOV W19, W31
	0x031F0D40 B 0x31F067C
	0x031F0D44 MOV X24, X31
	0x031F0D48 B 0x31F0D50
	0x031F0D4C MOV X23, X0
	0x031F0D50 ADRP X8, 0xF03000
	0x031F0D54 LDR X8, [X8 + 0xE00]
	0x031F0D58 LDR X1, [X8]
	0x031F0D5C MOV X0, X22
	0x031F0D60 BL 0x1C16E00
	0x031F0D64 MOV X19, X0
	0x031F0D68 CBZ X0, 0x31F0DCC
	0x031F0D6C LDR X8, [X19]
	0x031F0D70 ADRP X10, 0xF03000
	0x031F0D74 LDRH W9, [X8 + 0x12E]
	0x031F0D78 LDR X10, [X10 + 0xE00]
	0x031F0D7C LDR X1, [X10]
	0x031F0D80 CBZ X9, 0x31F0DA4
	0x031F0D84 LDR X10, [X8 + 0xB0]
	0x031F0D88 ADD X10, X10, 0x8
	0x031F0D8C LDUR X11, [X10 - 0x8]
	0x031F0D90 CMP X11, X1
	0x031F0D94 B.EQ 0x31F0DB4
	0x031F0D98 SUBS X9, X9, 0x1
	0x031F0D9C ADD X10, X10, 0x10
	0x031F0DA0 B.NE 0x31F0D8C
	0x031F0DA4 MOV X0, X19
	0x031F0DA8 MOV W2, W31
	0x031F0DAC BL 0x1C5C788
	0x031F0DB0 B 0x31F0DC0
	0x031F0DB4 LDRSW X9, [X10]
	0x031F0DB8 ADD X8, X8, X9, 0x4, LSL
	0x031F0DBC ADD X0, X8, 0x138
	0x031F0DC0 LDP X8, X1, [X0]
	0x031F0DC4 MOV X0, X19
	0x031F0DC8 BLR X8
	0x031F0DCC CBZ X24, 0x31F13A4
	0x031F0DD0 MOV X0, X24
	0x031F0DD4 BL 0x1C16F18
	0x031F0DD8 B 0x31F0DE0
	0x031F0DDC B 0x31F0DE0
	0x031F0DE0 MOV X23, X0
	0x031F0DE4 CMP W1, 0x1
	0x031F0DE8 B.NE 0x31F0E04
	0x031F0DEC MOV X0, X23
	0x031F0DF0 BL 0x3EB1AD0
	0x031F0DF4 LDR X24, [X0]
	0x031F0DF8 BL 0x3EB1AE0
	0x031F0DFC MOV W19, W31
	0x031F0E00 B 0x31F0390
	0x031F0E04 MOV X24, X31
	0x031F0E08 B 0x31F0E10
	0x031F0E0C MOV X23, X0
	0x031F0E10 ADRP X8, 0xF03000
	0x031F0E14 LDR X8, [X8 + 0xE00]
	0x031F0E18 LDR X1, [X8]
	0x031F0E1C MOV X0, X22
	0x031F0E20 BL 0x1C16E00
	0x031F0E24 MOV X19, X0
	0x031F0E28 CBZ X0, 0x31F0E8C
	0x031F0E2C LDR X8, [X19]
	0x031F0E30 ADRP X10, 0xF03000
	0x031F0E34 LDRH W9, [X8 + 0x12E]
	0x031F0E38 LDR X10, [X10 + 0xE00]
	0x031F0E3C LDR X1, [X10]
	0x031F0E40 CBZ X9, 0x31F0E64
	0x031F0E44 LDR X10, [X8 + 0xB0]
	0x031F0E48 ADD X10, X10, 0x8
	0x031F0E4C LDUR X11, [X10 - 0x8]
	0x031F0E50 CMP X11, X1
	0x031F0E54 B.EQ 0x31F0E74
	0x031F0E58 SUBS X9, X9, 0x1
	0x031F0E5C ADD X10, X10, 0x10
	0x031F0E60 B.NE 0x31F0E4C
	0x031F0E64 MOV X0, X19
	0x031F0E68 MOV W2, W31
	0x031F0E6C BL 0x1C5C788
	0x031F0E70 B 0x31F0E80
	0x031F0E74 LDRSW X9, [X10]
	0x031F0E78 ADD X8, X8, X9, 0x4, LSL
	0x031F0E7C ADD X0, X8, 0x138
	0x031F0E80 LDP X8, X1, [X0]
	0x031F0E84 MOV X0, X19
	0x031F0E88 BLR X8
	0x031F0E8C CBZ X24, 0x31F13A4
	0x031F0E90 MOV X0, X24
	0x031F0E94 BL 0x1C16F18
	0x031F0E98 B 0x31F0EA8
	0x031F0E9C B 0x31F0EA8
	0x031F0EA0 B 0x31F1164
	0x031F0EA4 B 0x31F1164
	0x031F0EA8 MOV X23, X0
	0x031F0EAC CMP W1, 0x1
	0x031F0EB0 B.NE 0x31F0ED4
	0x031F0EB4 MOV X0, X23
	0x031F0EB8 BL 0x3EB1AD0
	0x031F0EBC LDR X24, [X0]
	0x031F0EC0 BL 0x3EB1AE0
	0x031F0EC4 ADRP X25, 0xF03000
	0x031F0EC8 LDR X25, [X25 + 0xE00]
	0x031F0ECC MOV W19, W31
	0x031F0ED0 B 0x31F0100
	0x031F0ED4 MOV X24, X31
	0x031F0ED8 B 0x31F0EE0
	0x031F0EDC MOV X23, X0
	0x031F0EE0 ADRP X8, 0xF03000
	0x031F0EE4 LDR X8, [X8 + 0xE00]
	0x031F0EE8 LDR X1, [X8]
	0x031F0EEC MOV X0, X22
	0x031F0EF0 BL 0x1C16E00
	0x031F0EF4 MOV X19, X0
	0x031F0EF8 CBZ X0, 0x31F0F5C
	0x031F0EFC LDR X8, [X19]
	0x031F0F00 ADRP X10, 0xF03000
	0x031F0F04 LDRH W9, [X8 + 0x12E]
	0x031F0F08 LDR X10, [X10 + 0xE00]
	0x031F0F0C LDR X1, [X10]
	0x031F0F10 CBZ X9, 0x31F0F34
	0x031F0F14 LDR X10, [X8 + 0xB0]
	0x031F0F18 ADD X10, X10, 0x8
	0x031F0F1C LDUR X11, [X10 - 0x8]
	0x031F0F20 CMP X11, X1
	0x031F0F24 B.EQ 0x31F0F44
	0x031F0F28 SUBS X9, X9, 0x1
	0x031F0F2C ADD X10, X10, 0x10
	0x031F0F30 B.NE 0x31F0F1C
	0x031F0F34 MOV X0, X19
	0x031F0F38 MOV W2, W31
	0x031F0F3C BL 0x1C5C788
	0x031F0F40 B 0x31F0F50
	0x031F0F44 LDRSW X9, [X10]
	0x031F0F48 ADD X8, X8, X9, 0x4, LSL
	0x031F0F4C ADD X0, X8, 0x138
	0x031F0F50 LDP X8, X1, [X0]
	0x031F0F54 MOV X0, X19
	0x031F0F58 BLR X8
	0x031F0F5C CBZ X24, 0x31F13A4
	0x031F0F60 MOV X0, X24
	0x031F0F64 BL 0x1C16F18
	0x031F0F68 B 0x31F0FBC
	0x031F0F6C B 0x31F1234
	0x031F0F70 B 0x31F1234
	0x031F0F74 B 0x31F0FBC
	0x031F0F78 B 0x31F10A0
	0x031F0F7C B 0x31F1164
	0x031F0F80 B 0x31F1164
	0x031F0F84 B 0x31F1164
	0x031F0F88 B 0x31F1164
	0x031F0F8C B 0x31F0FBC
	0x031F0F90 B 0x31F12F8
	0x031F0F94 B 0x31F12F8
	0x031F0F98 B 0x31F12F8
	0x031F0F9C B 0x31F12F8
	0x031F0FA0 B 0x31F12F8
	0x031F0FA4 B 0x31F12F8
	0x031F0FA8 B 0x31F12F8
	0x031F0FAC B 0x31F12F8
	0x031F0FB0 B 0x31F12F8
	0x031F0FB4 B 0x31F12F8
	0x031F0FB8 B 0x31F12F8
	0x031F0FBC MOV X23, X0
	0x031F0FC0 CMP W1, 0x1
	0x031F0FC4 B.NE 0x31F0FE8
	0x031F0FC8 MOV X0, X23
	0x031F0FCC BL 0x3EB1AD0
	0x031F0FD0 LDR X22, [X0]
	0x031F0FD4 BL 0x3EB1AE0
	0x031F0FD8 ADRP X25, 0xF03000
	0x031F0FDC LDR X25, [X25 + 0xE00]
	0x031F0FE0 MOV W19, W31
	0x031F0FE4 B 0x31EFEE4
	0x031F0FE8 MOV X22, X31
	0x031F0FEC B 0x31F0FF4
	0x031F0FF0 MOV X23, X0
	0x031F0FF4 ADRP X8, 0xF03000
	0x031F0FF8 LDR X8, [X8 + 0xE00]
	0x031F0FFC LDR X1, [X8]
	0x031F1000 MOV X0, X21
	0x031F1004 BL 0x1C16E00
	0x031F1008 MOV X19, X0
	0x031F100C CBZ X0, 0x31F1070
	0x031F1010 LDR X8, [X19]
	0x031F1014 ADRP X10, 0xF02000
	0x031F1018 LDRH W9, [X8 + 0x12E]
	0x031F101C LDR X10, [X10 + 0xE00]
	0x031F1020 LDR X1, [X10]
	0x031F1024 CBZ X9, 0x31F1048
	0x031F1028 LDR X10, [X8 + 0xB0]
	0x031F102C ADD X10, X10, 0x8
	0x031F1030 LDUR X11, [X10 - 0x8]
	0x031F1034 CMP X11, X1
	0x031F1038 B.EQ 0x31F1058
	0x031F103C SUBS X9, X9, 0x1
	0x031F1040 ADD X10, X10, 0x10
	0x031F1044 B.NE 0x31F1030
	0x031F1048 MOV X0, X19
	0x031F104C MOV W2, W31
	0x031F1050 BL 0x1C5C788
	0x031F1054 B 0x31F1064
	0x031F1058 LDRSW X9, [X10]
	0x031F105C ADD X8, X8, X9, 0x4, LSL
	0x031F1060 ADD X0, X8, 0x138
	0x031F1064 LDP X8, X1, [X0]
	0x031F1068 MOV X0, X19
	0x031F106C BLR X8
	0x031F1070 CBZ X22, 0x31F13A4
	0x031F1074 MOV X0, X22
	0x031F1078 BL 0x1C16F18
	0x031F107C B 0x31F10A0
	0x031F1080 B 0x31F1164
	0x031F1084 B 0x31F1234
	0x031F1088 B 0x31F1234
	0x031F108C B 0x31F1234
	0x031F1090 B 0x31F1234
	0x031F1094 B 0x31F1234
	0x031F1098 B 0x31F10A0
	0x031F109C B 0x31F1164
	0x031F10A0 MOV X23, X0
	0x031F10A4 CMP W1, 0x1
	0x031F10A8 B.NE 0x31F10CC
	0x031F10AC MOV X0, X23
	0x031F10B0 BL 0x3EB1AD0
	0x031F10B4 LDR X24, [X0]
	0x031F10B8 BL 0x3EB1AE0
	0x031F10BC ADRP X25, 0xF02000
	0x031F10C0 LDR X25, [X25 + 0xE00]
	0x031F10C4 MOV W19, W31
	0x031F10C8 B 0x31EFD2C
	0x031F10CC MOV X24, X31
	0x031F10D0 B 0x31F10D8
	0x031F10D4 MOV X23, X0
	0x031F10D8 ADRP X8, 0xF02000
	0x031F10DC LDR X8, [X8 + 0xE00]
	0x031F10E0 LDR X1, [X8]
	0x031F10E4 MOV X0, X22
	0x031F10E8 BL 0x1C16E00
	0x031F10EC MOV X19, X0
	0x031F10F0 CBZ X0, 0x31F1154
	0x031F10F4 LDR X8, [X19]
	0x031F10F8 ADRP X10, 0xF02000
	0x031F10FC LDRH W9, [X8 + 0x12E]
	0x031F1100 LDR X10, [X10 + 0xE00]
	0x031F1104 LDR X1, [X10]
	0x031F1108 CBZ X9, 0x31F112C
	0x031F110C LDR X10, [X8 + 0xB0]
	0x031F1110 ADD X10, X10, 0x8
	0x031F1114 LDUR X11, [X10 - 0x8]
	0x031F1118 CMP X11, X1
	0x031F111C B.EQ 0x31F113C
	0x031F1120 SUBS X9, X9, 0x1
	0x031F1124 ADD X10, X10, 0x10
	0x031F1128 B.NE 0x31F1114
	0x031F112C MOV X0, X19
	0x031F1130 MOV W2, W31
	0x031F1134 BL 0x1C5C788
	0x031F1138 B 0x31F1148
	0x031F113C LDRSW X9, [X10]
	0x031F1140 ADD X8, X8, X9, 0x4, LSL
	0x031F1144 ADD X0, X8, 0x138
	0x031F1148 LDP X8, X1, [X0]
	0x031F114C MOV X0, X19
	0x031F1150 BLR X8
	0x031F1154 CBZ X24, 0x31F13A4
	0x031F1158 MOV X0, X24
	0x031F115C BL 0x1C16F18
	0x031F1160 B 0x31F1164
	0x031F1164 MOV X26, X1
	0x031F1168 MOV X23, X0
	0x031F116C CMP W26, 0x1
	0x031F1170 B.NE 0x31F118C
	0x031F1174 MOV X0, X23
	0x031F1178 BL 0x3EB1AD0
	0x031F117C LDR X25, [X0]
	0x031F1180 BL 0x3EB1AE0
	0x031F1184 MOV W26, W31
	0x031F1188 B 0x31EFB5C
	0x031F118C MOV X25, X31
	0x031F1190 B 0x31F1198
	0x031F1194 MOV X23, X0
	0x031F1198 ADRP X8, 0xF02000
	0x031F119C LDR X8, [X8 + 0xE00]
	0x031F11A0 LDR X1, [X8]
	0x031F11A4 MOV X0, X24
	0x031F11A8 BL 0x1C16E00
	0x031F11AC MOV X19, X0
	0x031F11B0 CBZ X0, 0x31F1214
	0x031F11B4 LDR X8, [X19]
	0x031F11B8 ADRP X10, 0xF02000
	0x031F11BC LDRH W9, [X8 + 0x12E]
	0x031F11C0 LDR X10, [X10 + 0xE00]
	0x031F11C4 LDR X1, [X10]
	0x031F11C8 CBZ X9, 0x31F11EC
	0x031F11CC LDR X10, [X8 + 0xB0]
	0x031F11D0 ADD X10, X10, 0x8
	0x031F11D4 LDUR X11, [X10 - 0x8]
	0x031F11D8 CMP X11, X1
	0x031F11DC B.EQ 0x31F11FC
	0x031F11E0 SUBS X9, X9, 0x1
	0x031F11E4 ADD X10, X10, 0x10
	0x031F11E8 B.NE 0x31F11D4
	0x031F11EC MOV X0, X19
	0x031F11F0 MOV W2, W31
	0x031F11F4 BL 0x1C5C788
	0x031F11F8 B 0x31F1208
	0x031F11FC LDRSW X9, [X10]
	0x031F1200 ADD X8, X8, X9, 0x4, LSL
	0x031F1204 ADD X0, X8, 0x138
	0x031F1208 LDP X8, X1, [X0]
	0x031F120C MOV X0, X19
	0x031F1210 BLR X8
	0x031F1214 CBZ X25, 0x31F13A4
	0x031F1218 MOV X0, X25
	0x031F121C BL 0x1C16F18
	0x031F1220 B 0x31F12F8
	0x031F1224 B 0x31F12F8
	0x031F1228 B 0x31F12F8
	0x031F122C B 0x31F12F8
	0x031F1230 B 0x31F12F8
	0x031F1234 MOV X28, X1
	0x031F1238 MOV X23, X0
	0x031F123C CMP W28, 0x1
	0x031F1240 B.NE 0x31F125C
	0x031F1244 MOV X0, X23
	0x031F1248 BL 0x3EB1AD0
	0x031F124C LDR X26, [X0]
	0x031F1250 BL 0x3EB1AE0
	0x031F1254 MOV W28, W31
	0x031F1258 B 0x31EF818
	0x031F125C MOV X26, X31
	0x031F1260 B 0x31F1268
	0x031F1264 MOV X23, X0
	0x031F1268 ADRP X8, 0xF02000
	0x031F126C LDR X8, [X8 + 0xE00]
	0x031F1270 LDR X1, [X8]
	0x031F1274 MOV X0, X25
	0x031F1278 BL 0x1C16E00
	0x031F127C MOV X19, X0
	0x031F1280 CBZ X0, 0x31F12E4
	0x031F1284 LDR X8, [X19]
	0x031F1288 ADRP X10, 0xF02000
	0x031F128C LDRH W9, [X8 + 0x12E]
	0x031F1290 LDR X10, [X10 + 0xE00]
	0x031F1294 LDR X1, [X10]
	0x031F1298 CBZ X9, 0x31F12BC
	0x031F129C LDR X10, [X8 + 0xB0]
	0x031F12A0 ADD X10, X10, 0x8
	0x031F12A4 LDUR X11, [X10 - 0x8]
	0x031F12A8 CMP X11, X1
	0x031F12AC B.EQ 0x31F12CC
	0x031F12B0 SUBS X9, X9, 0x1
	0x031F12B4 ADD X10, X10, 0x10
	0x031F12B8 B.NE 0x31F12A4
	0x031F12BC MOV X0, X19
	0x031F12C0 MOV W2, W31
	0x031F12C4 BL 0x1C5C788
	0x031F12C8 B 0x31F12D8
	0x031F12CC LDRSW X9, [X10]
	0x031F12D0 ADD X8, X8, X9, 0x4, LSL
	0x031F12D4 ADD X0, X8, 0x138
	0x031F12D8 LDP X8, X1, [X0]
	0x031F12DC MOV X0, X19
	0x031F12E0 BLR X8
	0x031F12E4 CBZ X26, 0x31F13A4
	0x031F12E8 MOV X0, X26
	0x031F12EC BL 0x1C16F18
	0x031F12F0 B 0x31F12F8
	0x031F12F4 B 0x31F12F8
	0x031F12F8 MOV X23, X0
	0x031F12FC CMP W1, 0x1
	0x031F1300 B.NE 0x31F1318
	0x031F1304 MOV X0, X23
	0x031F1308 BL 0x3EB1AD0
	0x031F130C LDR X22, [X0]
	0x031F1310 BL 0x3EB1AE0
	0x031F1314 B 0x31EF4A0
	0x031F1318 MOV X22, X31
	0x031F131C B 0x31F1324
	0x031F1320 MOV X23, X0
	0x031F1324 ADRP X8, 0xF02000
	0x031F1328 LDR X8, [X8 + 0xE00]
	0x031F132C LDR X1, [X8]
	0x031F1330 MOV X0, X21
	0x031F1334 BL 0x1C16E00
	0x031F1338 MOV X19, X0
	0x031F133C CBZ X0, 0x31F13A0
	0x031F1340 LDR X8, [X19]
	0x031F1344 ADRP X10, 0xF02000
	0x031F1348 LDRH W9, [X8 + 0x12E]
	0x031F134C LDR X10, [X10 + 0xE00]
	0x031F1350 LDR X1, [X10]
	0x031F1354 CBZ X9, 0x31F1378
	0x031F1358 LDR X10, [X8 + 0xB0]
	0x031F135C ADD X10, X10, 0x8
	0x031F1360 LDUR X11, [X10 - 0x8]
	0x031F1364 CMP X11, X1
	0x031F1368 B.EQ 0x31F1388
	0x031F136C SUBS X9, X9, 0x1
	0x031F1370 ADD X10, X10, 0x10
	0x031F1374 B.NE 0x31F1360
	0x031F1378 MOV X0, X19
	0x031F137C MOV W2, W31
	0x031F1380 BL 0x1C5C788
	0x031F1384 B 0x31F1394
	0x031F1388 LDRSW X9, [X10]
	0x031F138C ADD X8, X8, X9, 0x4, LSL
	0x031F1390 ADD X0, X8, 0x138
	0x031F1394 LDP X8, X1, [X0]
	0x031F1398 MOV X0, X19
	0x031F139C BLR X8
	0x031F13A0 CBNZ X22, 0x31F13AC
	0x031F13A4 MOV X0, X23
	0x031F13A8 BL 0x1D2C690
	0x031F13AC MOV X0, X22
	0x031F13B0 BL 0x1C16F18
	0x031F13B4 BL 0x1990590
	0x031F13B8 MOV X2, X31
	0x031F13BC B 0x31F1904
	0x031F13C0 MOV X2, X31
	0x031F13C4 B 0x31F16B8
	0x031F13C8 STP X29, X30, [X31 - 0x60]!
	0x031F13CC STP X28, X27, [X31 + 0x10]
	0x031F13D0 STP X26, X25, [X31 + 0x20]
	0x031F13D4 STP X24, X23, [X31 + 0x30]
	0x031F13D8 STP X22, X21, [X31 + 0x40]
	0x031F13DC STP X20, X19, [X31 + 0x50]
	0x031F13E0 ADRP X22, 0x11EB000
	0x031F13E4 ADRP X23, 0xF02000
	0x031F13E8 LDRB W8, [X22 + 0x187]
	0x031F13EC LDR X23, [X23 + 0x618]
	0x031F13F0 MOV X19, X2
	0x031F13F4 MOV X21, X1
	0x031F13F8 MOV X20, X0
	0x031F13FC TBNZ X8, 0x0, 0x31F1444
	0x031F1400 ADRP X0, 0xF2F000
	0x031F1404 LDR X0, [X0 + 0xB98]
	0x031F1408 BL 0x1C16CF4
	0x031F140C ADRP X0, 0xF02000
	0x031F1410 LDR X0, [X0 + 0x618]
	0x031F1414 BL 0x1C16CF4
	0x031F1418 ADRP X0, 0xF2F000
	0x031F141C LDR X0, [X0 + 0xC70]
	0x031F1420 BL 0x1C16CF4
	0x031F1424 ADRP X0, 0xF2F000
	0x031F1428 LDR X0, [X0 + 0xD78]
	0x031F142C BL 0x1C16CF4
	0x031F1430 ADRP X0, 0xF2F000
	0x031F1434 LDR X0, [X0 + 0xD80]
	0x031F1438 BL 0x1C16CF4
	0x031F143C MOVZ W8, 0x1
	0x031F1440 STRB W8, [X22 + 0x187]
	0x031F1444 LDR X0, [X23]
	0x031F1448 MOVZ W1, 0x8
	0x031F144C BL 0x1C16D6C
	0x031F1450 LDR X8, [X20 + 0x40]
	0x031F1454 MOV X22, X0
	0x031F1458 CBNZ X8, 0x31F1470
	0x031F145C MOV X0, X31
	0x031F1460 BL 0x3256158
	0x031F1464 MOV X8, X0
	0x031F1468 STR X0, [X20 + 0x40]
	0x031F146C CBZ X0, 0x31F16B4
	0x031F1470 LDR X9, [X8]
	0x031F1474 ADRP X26, 0xF2F000
	0x031F1478 MOV X0, X8
	0x031F147C MOV X1, X22
	0x031F1480 LDP X10, X2, [X9 + 0x198]
	0x031F1484 LDR X26, [X26 + 0xB98]
	0x031F1488 BLR X10
	0x031F148C LDR X0, [X26]
	0x031F1490 BL 0x1C16F10
	0x031F1494 MOV X1, X31
	0x031F1498 MOV X24, X0
	0x031F149C BL 0x33BDD8C
	0x031F14A0 MOVZ W27, 0x30
	0x031F14A4 STRB W27, [X24 + 0x10]
	0x031F14A8 STR X31, [X24 + 0x18]
	0x031F14AC LDR X0, [X26]
	0x031F14B0 BL 0x1C16F10
	0x031F14B4 MOV X1, X31
	0x031F14B8 MOV X23, X0
	0x031F14BC BL 0x33BDD8C
	0x031F14C0 MOVZ W8, 0x4
	0x031F14C4 MOV X0, X24
	0x031F14C8 MOV X1, X23
	0x031F14CC STRB W8, [X23 + 0x10]
	0x031F14D0 STR X22, [X23 + 0x18]
	0x031F14D4 BL 0x31E7ED0
	0x031F14D8 LDR W0, [X20 + 0x34]
	0x031F14DC BL 0x31E8C1C
	0x031F14E0 MOV X1, X0
	0x031F14E4 MOV X0, X24
	0x031F14E8 BL 0x31E7ED0
	0x031F14EC LDR X0, [X26]
	0x031F14F0 BL 0x1C16F10
	0x031F14F4 MOV X1, X31
	0x031F14F8 MOV X23, X0
	0x031F14FC BL 0x33BDD8C
	0x031F1500 MOV X0, X19
	0x031F1504 STRB W27, [X23 + 0x10]
	0x031F1508 STR X31, [X23 + 0x18]
	0x031F150C BL 0x31E8DA0
	0x031F1510 MOV X1, X0
	0x031F1514 MOV X0, X23
	0x031F1518 BL 0x31E7ED0
	0x031F151C MOV X0, X23
	0x031F1520 MOV X1, X24
	0x031F1524 BL 0x31E7ED0
	0x031F1528 CBZ X21, 0x31F16B4
	0x031F152C LDR X8, [X21]
	0x031F1530 ADRP X25, 0xF2F000
	0x031F1534 ADRP X29, 0xF2F000
	0x031F1538 ADRP X28, 0xF2F000
	0x031F153C LDP X9, X1, [X8 + 0x178]
	0x031F1540 LDR W24, [X20 + 0x34]
	0x031F1544 LDR X25, [X25 + 0xD80]
	0x031F1548 LDR X29, [X29 + 0xC70]
	0x031F154C LDR X28, [X28 + 0xD78]
	0x031F1550 MOV X0, X21
	0x031F1554 BLR X9
	0x031F1558 MOV X4, X0
	0x031F155C MOV X0, X20
	0x031F1560 MOV X1, X19
	0x031F1564 MOV X2, X22
	0x031F1568 MOV W3, W24
	0x031F156C BL 0x31ED99C
	0x031F1570 LDR X8, [X26]
	0x031F1574 MOV X19, X0
	0x031F1578 MOV X0, X8
	0x031F157C BL 0x1C16F10
	0x031F1580 MOV X1, X31
	0x031F1584 MOV X20, X0
	0x031F1588 BL 0x33BDD8C
	0x031F158C MOVZ W8, 0x80
	0x031F1590 STRB W8, [X20 + 0x10]
	0x031F1594 STR X19, [X20 + 0x18]
	0x031F1598 LDR X0, [X26]
	0x031F159C BL 0x1C16F10
	0x031F15A0 MOV X1, X31
	0x031F15A4 MOV X19, X0
	0x031F15A8 BL 0x33BDD8C
	0x031F15AC STRB W27, [X19 + 0x10]
	0x031F15B0 STR X31, [X19 + 0x18]
	0x031F15B4 LDR X0, [X25]
	0x031F15B8 BL 0x31E8DA0
	0x031F15BC MOV X1, X0
	0x031F15C0 MOV X0, X19
	0x031F15C4 BL 0x31E7ED0
	0x031F15C8 MOV X0, X19
	0x031F15CC MOV X1, X23
	0x031F15D0 BL 0x31E7ED0
	0x031F15D4 MOV X0, X19
	0x031F15D8 MOV X1, X20
	0x031F15DC BL 0x31E7ED0
	0x031F15E0 ADRP X8, 0xF02000
	0x031F15E4 LDR X8, [X8 + 0x618]
	0x031F15E8 MOVZ W1, 0x1
	0x031F15EC LDR X0, [X8]
	0x031F15F0 BL 0x1C16D6C
	0x031F15F4 LDR X8, [X26]
	0x031F15F8 MOV X20, X0
	0x031F15FC MOV X0, X8
	0x031F1600 BL 0x1C16F10
	0x031F1604 MOV X1, X31
	0x031F1608 MOV X21, X0
	0x031F160C BL 0x33BDD8C
	0x031F1610 MOVZ W8, 0x2
	0x031F1614 STRB W8, [X21 + 0x10]
	0x031F1618 STR X20, [X21 + 0x18]
	0x031F161C LDR X0, [X26]
	0x031F1620 BL 0x1C16F10
	0x031F1624 MOV X1, X31
	0x031F1628 MOV X20, X0
	0x031F162C BL 0x33BDD8C
	0x031F1630 MOV X0, X20
	0x031F1634 MOV X1, X21
	0x031F1638 STRB W27, [X20 + 0x10]
	0x031F163C STR X31, [X20 + 0x18]
	0x031F1640 BL 0x31E7ED0
	0x031F1644 MOV X0, X20
	0x031F1648 MOV X1, X19
	0x031F164C BL 0x31E7ED0
	0x031F1650 LDR X0, [X26]
	0x031F1654 BL 0x1C16F10
	0x031F1658 MOV X1, X31
	0x031F165C MOV X19, X0
	0x031F1660 BL 0x33BDD8C
	0x031F1664 MOVZ W8, 0xA0
	0x031F1668 MOV X0, X19
	0x031F166C MOV X1, X20
	0x031F1670 STRB W8, [X19 + 0x10]
	0x031F1674 STR X31, [X19 + 0x18]
	0x031F1678 BL 0x31E7ED0
	0x031F167C LDR X0, [X29]
	0x031F1680 BL 0x1C16F10
	0x031F1684 LDR X21, [X28]
	0x031F1688 MOV X20, X0
	0x031F168C BL 0x31E9B58
	0x031F1690 STP X21, X19, [X20 + 0x10]
	0x031F1694 MOV X0, X20
	0x031F1698 LDP X20, X19, [X31 + 0x50]
	0x031F169C LDP X22, X21, [X31 + 0x40]
	0x031F16A0 LDP X24, X23, [X31 + 0x30]
	0x031F16A4 LDP X26, X25, [X31 + 0x20]
	0x031F16A8 LDP X28, X27, [X31 + 0x10]
	0x031F16AC LDP X29, X30, [X31], #0x60
	0x031F16B0 RET
	0x031F16B4 BL 0x1C16F20
	0x031F16B8 STR X30, [X31 - 0x60]!
	0x031F16BC STP X28, X27, [X31 + 0x10]
	0x031F16C0 STP X26, X25, [X31 + 0x20]
	0x031F16C4 STP X24, X23, [X31 + 0x30]
	0x031F16C8 STP X22, X21, [X31 + 0x40]
	0x031F16CC STP X20, X19, [X31 + 0x50]
	0x031F16D0 ADRP X22, 0x11EB000
	0x031F16D4 LDRB W8, [X22 + 0x188]
	0x031F16D8 MOV X20, X2
	0x031F16DC MOV X21, X1
	0x031F16E0 MOV X19, X0
	0x031F16E4 TBNZ X8, 0x0, 0x31F1720
	0x031F16E8 ADRP X0, 0xF2F000
	0x031F16EC LDR X0, [X0 + 0xC70]
	0x031F16F0 BL 0x1C16CF4
	0x031F16F4 ADRP X0, 0xF2F000
	0x031F16F8 LDR X0, [X0 + 0xE08]
	0x031F16FC BL 0x1C16CF4
	0x031F1700 ADRP X0, 0xF2F000
	0x031F1704 LDR X0, [X0 + 0xCC0]
	0x031F1708 BL 0x1C16CF4
	0x031F170C ADRP X0, 0xF2F000
	0x031F1710 LDR X0, [X0 + 0xE50]
	0x031F1714 BL 0x1C16CF4
	0x031F1718 MOVZ W8, 0x1
	0x031F171C STRB W8, [X22 + 0x188]
	0x031F1720 LDR X0, [X19 + 0x38]
	0x031F1724 CBZ X0, 0x31F18F8
	0x031F1728 ADRP X26, 0xF2F000
	0x031F172C ADRP X25, 0xF2F000
	0x031F1730 ADRP X27, 0xF2F000
	0x031F1734 ADRP X28, 0xF2F000
	0x031F1738 LDR X26, [X26 + 0xE08]
	0x031F173C LDR X25, [X25 + 0xE50]
	0x031F1740 LDR X27, [X27 + 0xC70]
	0x031F1744 LDR X28, [X28 + 0xCC0]
	0x031F1748 MOV W22, W31
	0x031F174C LDR X8, [X0]
	0x031F1750 LDR X9, [X8 + 0x298]
	0x031F1754 LDR X1, [X8 + 0x2A0]
	0x031F1758 BLR X9
	0x031F175C LDR X23, [X19 + 0x38]
	0x031F1760 CMP W22, W0
	0x031F1764 B.GE 0x31F1888
	0x031F1768 CBZ X23, 0x31F18F8
	0x031F176C LDR X8, [X23]
	0x031F1770 MOV X0, X23
	0x031F1774 MOV W1, W22
	0x031F1778 LDR X9, [X8 + 0x2E8]
	0x031F177C LDR X2, [X8 + 0x2F0]
	0x031F1780 BLR X9
	0x031F1784 CBZ X0, 0x31F18F8
	0x031F1788 LDR X8, [X0]
	0x031F178C LDR X1, [X26]
	0x031F1790 MOV X23, X0
	0x031F1794 LDRB W10, [X8 + 0x130]
	0x031F1798 LDRB W9, [X1 + 0x130]
	0x031F179C CMP W10, W9
	0x031F17A0 B.CC 0x31F18FC
	0x031F17A4 LDR X8, [X8 + 0xC8]
	0x031F17A8 ADD X8, X8, X9, 0x3, LSL
	0x031F17AC LDUR X8, [X8 - 0x8]
	0x031F17B0 CMP X8, X1
	0x031F17B4 B.NE 0x31F18FC
	0x031F17B8 LDR X0, [X23 + 0x10]
	0x031F17BC CBZ X0, 0x31F18F8
	0x031F17C0 LDR X1, [X25]
	0x031F17C4 MOV X2, X31
	0x031F17C8 BL 0x322693C
	0x031F17CC TBZ X0, 0x0, 0x31F1878
	0x031F17D0 LDR X0, [X23 + 0x18]
	0x031F17D4 CBZ X0, 0x31F18F8
	0x031F17D8 MOVZ W1, 0x1
	0x031F17DC BL 0x31E8704
	0x031F17E0 CBZ X0, 0x31F18F8
	0x031F17E4 BL 0x31E7D00
	0x031F17E8 LDR X8, [X27]
	0x031F17EC MOV X24, X0
	0x031F17F0 MOV X0, X8
	0x031F17F4 BL 0x1C16F10
	0x031F17F8 MOV X1, X24
	0x031F17FC MOV X23, X0
	0x031F1800 BL 0x31E9BEC
	0x031F1804 CBZ X23, 0x31F18F8
	0x031F1808 LDR X0, [X23 + 0x18]
	0x031F180C CBZ X0, 0x31F18F8
	0x031F1810 MOV W1, W31
	0x031F1814 BL 0x31E8704
	0x031F1818 CBZ X0, 0x31F18F8
	0x031F181C BL 0x31E7D00
	0x031F1820 LDR X8, [X28]
	0x031F1824 MOV X24, X0
	0x031F1828 MOV X0, X8
	0x031F182C BL 0x1C16F10
	0x031F1830 MOV X1, X24
	0x031F1834 MOV X23, X0
	0x031F1838 BL 0x31EA6BC
	0x031F183C CBZ X21, 0x31F18F8
	0x031F1840 LDR X8, [X21]
	0x031F1844 MOV X0, X21
	0x031F1848 LDP X9, X1, [X8 + 0x1F8]
	0x031F184C BLR X9
	0x031F1850 CBZ X23, 0x31F18F8
	0x031F1854 LDR X8, [X23]
	0x031F1858 MOV X24, X0
	0x031F185C MOV X0, X23
	0x031F1860 LDP X9, X1, [X8 + 0x1F8]
	0x031F1864 BLR X9
	0x031F1868 MOV X1, X24
	0x031F186C MOV X2, X0
	0x031F1870 BL 0x31EBC00
	0x031F1874 TBNZ X0, 0x0, 0x31F18DC
	0x031F1878 LDR X0, [X19 + 0x38]
	0x031F187C ADD W22, W22, 0x1
	0x031F1880 CBNZ X0, 0x31F174C
	0x031F1884 B 0x31F18F8
	0x031F1888 MOV X1, X21
	0x031F188C MOV X2, X20
	0x031F1890 BL 0x31EE550
	0x031F1894 LDR X8, [X26]
	0x031F1898 MOV X21, X0
	0x031F189C MOV X0, X8
	0x031F18A0 BL 0x1C16F10
	0x031F18A4 LDR X22, [X25]
	0x031F18A8 MOV X1, X31
	0x031F18AC MOV X20, X0
	0x031F18B0 BL 0x33BDD8C
	0x031F18B4 STP X22, X21, [X20 + 0x10]
	0x031F18B8 CBZ X23, 0x31F18F8
	0x031F18BC LDR X8, [X23]
	0x031F18C0 MOV X0, X23
	0x031F18C4 MOV X1, X20
	0x031F18C8 LDR X9, [X8 + 0x308]
	0x031F18CC LDR X2, [X8 + 0x310]
	0x031F18D0 BLR X9
	0x031F18D4 MOVZ W8, 0x1
	0x031F18D8 STRB W8, [X19 + 0x32]
	0x031F18DC LDP X20, X19, [X31 + 0x50]
	0x031F18E0 LDP X22, X21, [X31 + 0x40]
	0x031F18E4 LDP X24, X23, [X31 + 0x30]
	0x031F18E8 LDP X26, X25, [X31 + 0x20]
	0x031F18EC LDP X28, X27, [X31 + 0x10]
	0x031F18F0 LDR X30, [X31], #0x60
	0x031F18F4 RET
	0x031F18F8 BL 0x1C16F20
	0x031F18FC MOV X0, X23
	0x031F1900 BL 0x1C171E0
	0x031F1904 SUB X31, X31, 0x80
	0x031F1908 STP X29, X30, [X31 + 0x20]
	0x031F190C STP X28, X27, [X31 + 0x30]
	0x031F1910 STP X26, X25, [X31 + 0x40]
	0x031F1914 STP X24, X23, [X31 + 0x50]
	0x031F1918 STP X22, X21, [X31 + 0x60]
	0x031F191C STP X20, X19, [X31 + 0x70]
	0x031F1920 ADRP X19, 0x11EB000
	0x031F1924 LDRB W8, [X19 + 0x189]
	0x031F1928 MOV X20, X0
	0x031F192C STR X2, [X31 + 0x10]
	0x031F1930 STR X1, [X31]
	0x031F1934 TBNZ X8, 0x0, 0x31F1994
	0x031F1938 ADRP X0, 0xF2F000
	0x031F193C LDR X0, [X0 + 0xBA0]
	0x031F1940 BL 0x1C16CF4
	0x031F1944 ADRP X0, 0xF02000
	0x031F1948 LDR X0, [X0 + 0x618]
	0x031F194C BL 0x1C16CF4
	0x031F1950 ADRP X0, 0xF2F000
	0x031F1954 LDR X0, [X0 + 0xC70]
	0x031F1958 BL 0x1C16CF4
	0x031F195C ADRP X0, 0xF02000
	0x031F1960 LDR X0, [X0 + 0x818]
	0x031F1964 BL 0x1C16CF4
	0x031F1968 ADRP X0, 0xF2F000
	0x031F196C LDR X0, [X0 + 0xE08]
	0x031F1970 BL 0x1C16CF4
	0x031F1974 ADRP X0, 0xF2F000
	0x031F1978 LDR X0, [X0 + 0xCC0]
	0x031F197C BL 0x1C16CF4
	0x031F1980 ADRP X0, 0xF2F000
	0x031F1984 LDR X0, [X0 + 0xE50]
	0x031F1988 BL 0x1C16CF4
	0x031F198C MOVZ W8, 0x1
	0x031F1990 STRB W8, [X19 + 0x189]
	0x031F1994 LDR X0, [X20 + 0x38]
	0x031F1998 MOV W22, W31
	0x031F199C STR X20, [X31 + 0x8]
	0x031F19A0 CMP X0, 0x0
	0x031F19A4 CSET W8, EQ
	0x031F19A8 TBNZ X8, 0x0, 0x31F1DF0
	0x031F19AC LDR X8, [X0]
	0x031F19B0 LDR X9, [X8 + 0x298]
	0x031F19B4 LDR X1, [X8 + 0x2A0]
	0x031F19B8 BLR X9
	0x031F19BC CMP W22, W0
	0x031F19C0 B.GE 0x31F1DD0
	0x031F19C4 LDR X0, [X20 + 0x38]
	0x031F19C8 CBZ X0, 0x31F1DF0
	0x031F19CC LDR X8, [X0]
	0x031F19D0 MOV W1, W22
	0x031F19D4 LDR X9, [X8 + 0x2E8]
	0x031F19D8 LDR X2, [X8 + 0x2F0]
	0x031F19DC BLR X9
	0x031F19E0 CBZ X0, 0x31F1DF0
	0x031F19E4 ADRP X9, 0xF2F000
	0x031F19E8 LDR X8, [X0]
	0x031F19EC LDR X9, [X9 + 0xE08]
	0x031F19F0 MOV X23, X0
	0x031F19F4 LDRB W10, [X8 + 0x130]
	0x031F19F8 LDR X1, [X9]
	0x031F19FC LDRB W9, [X1 + 0x130]
	0x031F1A00 CMP W10, W9
	0x031F1A04 B.CC 0x31F1E08
	0x031F1A08 LDR X8, [X8 + 0xC8]
	0x031F1A0C ADD X8, X8, X9, 0x3, LSL
	0x031F1A10 LDUR X8, [X8 - 0x8]
	0x031F1A14 CMP X8, X1
	0x031F1A18 B.NE 0x31F1E08
	0x031F1A1C LDR X0, [X23 + 0x10]
	0x031F1A20 CBZ X0, 0x31F1DF0
	0x031F1A24 ADRP X8, 0xF2F000
	0x031F1A28 LDR X8, [X8 + 0xE50]
	0x031F1A2C MOV X2, X31
	0x031F1A30 LDR X1, [X8]
	0x031F1A34 BL 0x322693C
	0x031F1A38 TBZ X0, 0x0, 0x31F1D60
	0x031F1A3C LDR X23, [X23 + 0x18]
	0x031F1A40 CBZ X23, 0x31F1DF0
	0x031F1A44 MOVZ W1, 0x1
	0x031F1A48 MOV X0, X23
	0x031F1A4C BL 0x31E8704
	0x031F1A50 CBZ X0, 0x31F1DF0
	0x031F1A54 BL 0x31E7D00
	0x031F1A58 ADRP X8, 0xF2F000
	0x031F1A5C LDR X8, [X8 + 0xC70]
	0x031F1A60 MOV X21, X0
	0x031F1A64 LDR X8, [X8]
	0x031F1A68 MOV X0, X8
	0x031F1A6C BL 0x1C16F10
	0x031F1A70 MOV X1, X21
	0x031F1A74 MOV X19, X0
	0x031F1A78 BL 0x31E9BEC
	0x031F1A7C CBZ X19, 0x31F1DF0
	0x031F1A80 LDR X0, [X19 + 0x18]
	0x031F1A84 CBZ X0, 0x31F1DF0
	0x031F1A88 MOV W1, W31
	0x031F1A8C BL 0x31E8704
	0x031F1A90 CBZ X0, 0x31F1DF0
	0x031F1A94 BL 0x31E7D00
	0x031F1A98 ADRP X8, 0xF2F000
	0x031F1A9C LDR X8, [X8 + 0xCC0]
	0x031F1AA0 MOV X19, X0
	0x031F1AA4 LDR X8, [X8]
	0x031F1AA8 MOV X0, X8
	0x031F1AAC BL 0x1C16F10
	0x031F1AB0 MOV X1, X19
	0x031F1AB4 MOV X24, X0
	0x031F1AB8 BL 0x31EA6BC
	0x031F1ABC LDR X20, [X31 + 0x10]
	0x031F1AC0 LDR X0, [X31]
	0x031F1AC4 CBZ X0, 0x31F1DF0
	0x031F1AC8 LDR X8, [X0]
	0x031F1ACC LDP X9, X1, [X8 + 0x1F8]
	0x031F1AD0 BLR X9
	0x031F1AD4 CBZ X24, 0x31F1DF0
	0x031F1AD8 LDR X8, [X24]
	0x031F1ADC MOV X19, X0
	0x031F1AE0 MOV X0, X24
	0x031F1AE4 LDP X9, X1, [X8 + 0x1F8]
	0x031F1AE8 BLR X9
	0x031F1AEC MOV X1, X19
	0x031F1AF0 MOV X2, X0
	0x031F1AF4 BL 0x31EBC00
	0x031F1AF8 ANDS W31, W0, 0x1
	0x031F1AFC CSINV W1, W22, W31, NE
	0x031F1B00 CBZ X20, 0x31F1D80
	0x031F1B04 LDR X20, [X31 + 0x8]
	0x031F1B08 TBZ X0, 0x0, 0x31F1D64
	0x031F1B0C LDR X0, [X23 + 0x20]
	0x031F1B10 CBZ X0, 0x31F1D60
	0x031F1B14 LDR X8, [X0]
	0x031F1B18 LDR X9, [X8 + 0x298]
	0x031F1B1C LDR X1, [X8 + 0x2A0]
	0x031F1B20 BLR X9
	0x031F1B24 CMP W0, 0x3
	0x031F1B28 B.NE 0x31F1D60
	0x031F1B2C MOVZ W1, 0x2
	0x031F1B30 MOV X0, X23
	0x031F1B34 BL 0x31E8704
	0x031F1B38 CBZ X0, 0x31F1DF0
	0x031F1B3C STR W31, [X31 + 0x1C]
	0x031F1B40 ADRP X20, 0xF02000
	0x031F1B44 LDR X19, [X31 + 0x10]
	0x031F1B48 LDR X20, [X20 + 0x818]
	0x031F1B4C MOV X23, X0
	0x031F1B50 MOV W24, W31
	0x031F1B54 LDR X0, [X23 + 0x20]
	0x031F1B58 CBZ X0, 0x31F1B6C
	0x031F1B5C LDR X8, [X0]
	0x031F1B60 LDR X9, [X8 + 0x298]
	0x031F1B64 LDR X1, [X8 + 0x2A0]
	0x031F1B68 BLR X9
	0x031F1B6C CMP W24, W0
	0x031F1B70 B.GE 0x31F1D88
	0x031F1B74 MOV X0, X23
	0x031F1B78 MOV W1, W24
	0x031F1B7C BL 0x31E8704
	0x031F1B80 CBZ X0, 0x31F1DF0
	0x031F1B84 MOV W1, W31
	0x031F1B88 MOV X26, X0
	0x031F1B8C BL 0x31E8704
	0x031F1B90 BL 0x31E909C
	0x031F1B94 LDR X8, [X19]
	0x031F1B98 LDR X1, [X20]
	0x031F1B9C MOV X25, X0
	0x031F1BA0 LDRH W9, [X8 + 0x12E]
	0x031F1BA4 CBZ X9, 0x31F1BC8
	0x031F1BA8 LDR X10, [X8 + 0xB0]
	0x031F1BAC ADD X10, X10, 0x8
	0x031F1BB0 LDUR X11, [X10 - 0x8]
	0x031F1BB4 CMP X11, X1
	0x031F1BB8 B.EQ 0x31F1BD8
	0x031F1BBC SUBS X9, X9, 0x1
	0x031F1BC0 ADD X10, X10, 0x10
	0x031F1BC4 B.NE 0x31F1BB0
	0x031F1BC8 MOV X0, X19
	0x031F1BCC MOV W2, W31
	0x031F1BD0 BL 0x1C5C788
	0x031F1BD4 B 0x31F1BE4
	0x031F1BD8 LDRSW X9, [X10]
	0x031F1BDC ADD X8, X8, X9, 0x4, LSL
	0x031F1BE0 ADD X0, X8, 0x138
	0x031F1BE4 LDP X8, X2, [X0]
	0x031F1BE8 MOV X0, X19
	0x031F1BEC MOV X1, X25
	0x031F1BF0 BLR X8
	0x031F1BF4 CBZ X0, 0x31F1D58
	0x031F1BF8 ADRP X9, 0xF2F000
	0x031F1BFC LDR X8, [X0]
	0x031F1C00 LDR X9, [X9 + 0xBA0]
	0x031F1C04 MOV X25, X0
	0x031F1C08 LDRB W10, [X8 + 0x130]
	0x031F1C0C LDR X1, [X9]
	0x031F1C10 LDRB W9, [X1 + 0x130]
	0x031F1C14 CMP W10, W9
	0x031F1C18 B.CC 0x31F1E00
	0x031F1C1C LDR X8, [X8 + 0xC8]
	0x031F1C20 ADD X8, X8, X9, 0x3, LSL
	0x031F1C24 LDUR X8, [X8 - 0x8]
	0x031F1C28 CMP X8, X1
	0x031F1C2C B.NE 0x31F1E00
	0x031F1C30 MOVZ W1, 0x1
	0x031F1C34 MOV X0, X26
	0x031F1C38 BL 0x31E8704
	0x031F1C3C LDR X8, [X25]
	0x031F1C40 MOV X26, X0
	0x031F1C44 MOV X0, X25
	0x031F1C48 LDR X9, [X8 + 0x298]
	0x031F1C4C LDR X1, [X8 + 0x2A0]
	0x031F1C50 BLR X9
	0x031F1C54 CBZ X26, 0x31F1DF0
	0x031F1C58 MOV W27, W0
	0x031F1C5C LDR X0, [X26 + 0x20]
	0x031F1C60 CBZ X0, 0x31F1C74
	0x031F1C64 LDR X8, [X0]
	0x031F1C68 LDR X9, [X8 + 0x298]
	0x031F1C6C LDR X1, [X8 + 0x2A0]
	0x031F1C70 BLR X9
	0x031F1C74 CMP W27, W0
	0x031F1C78 B.NE 0x31F1D58
	0x031F1C7C MOV W27, W31
	0x031F1C80 MOV W20, W31
	0x031F1C84 LDR X0, [X26 + 0x20]
	0x031F1C88 CBZ X0, 0x31F1C9C
	0x031F1C8C LDR X8, [X0]
	0x031F1C90 LDR X9, [X8 + 0x298]
	0x031F1C94 LDR X1, [X8 + 0x2A0]
	0x031F1C98 BLR X9
	0x031F1C9C CMP W27, W0
	0x031F1CA0 B.GE 0x31F1D24
	0x031F1CA4 MOV X0, X26
	0x031F1CA8 MOV W1, W27
	0x031F1CAC BL 0x31E8704
	0x031F1CB0 LDR X8, [X25]
	0x031F1CB4 MOV X28, X0
	0x031F1CB8 MOV X0, X25
	0x031F1CBC MOV W1, W27
	0x031F1CC0 LDR X9, [X8 + 0x2E8]
	0x031F1CC4 LDR X2, [X8 + 0x2F0]
	0x031F1CC8 BLR X9
	0x031F1CCC CBZ X0, 0x31F1CF8
	0x031F1CD0 ADRP X8, 0xF02000
	0x031F1CD4 LDR X8, [X8 + 0x618]
	0x031F1CD8 MOV X21, X0
	0x031F1CDC LDR X19, [X8]
	0x031F1CE0 MOV X1, X19
	0x031F1CE4 BL 0x1C16E00
	0x031F1CE8 MOV X29, X0
	0x031F1CEC CBZ X0, 0x31F1DF4
	0x031F1CF0 CBNZ X28, 0x31F1D00
	0x031F1CF4 B 0x31F1DF0
	0x031F1CF8 MOV X29, X31
	0x031F1CFC CBZ X28, 0x31F1DF0
	0x031F1D00 MOV X0, X28
	0x031F1D04 BL 0x31E7D00
	0x031F1D08 MOV X1, X29
	0x031F1D0C MOV X2, X0
	0x031F1D10 BL 0x31EBC00
	0x031F1D14 AND W8, W0, 0x1
	0x031F1D18 ADD W20, W20, W8
	0x031F1D1C ADD W27, W27, 0x1
	0x031F1D20 B 0x31F1C84
	0x031F1D24 LDR X0, [X26 + 0x20]
	0x031F1D28 CBZ X0, 0x31F1D3C
	0x031F1D2C LDR X8, [X0]
	0x031F1D30 LDR X9, [X8 + 0x298]
	0x031F1D34 LDR X1, [X8 + 0x2A0]
	0x031F1D38 BLR X9
	0x031F1D3C LDR W8, [X31 + 0x1C]
	0x031F1D40 CMP W20, W0
	0x031F1D44 ADRP X20, 0xF02000
	0x031F1D48 LDR X19, [X31 + 0x10]
	0x031F1D4C CINC W8, W8, EQ
	0x031F1D50 STR W8, [X31 + 0x1C]
	0x031F1D54 LDR X20, [X20 + 0x818]
	0x031F1D58 ADD W24, W24, 0x1
	0x031F1D5C B 0x31F1B54
	0x031F1D60 MOVN W1, 0x0
	0x031F1D64 LDR X0, [X20 + 0x38]
	0x031F1D68 ADD W22, W22, 0x1
	0x031F1D6C CMP X0, 0x0
	0x031F1D70 CSET W8, EQ
	0x031F1D74 ADDS W31, W1, 0x1
	0x031F1D78 B.EQ 0x31F19A8
	0x031F1D7C B 0x31F1DB4
	0x031F1D80 LDR X20, [X31 + 0x8]
	0x031F1D84 B 0x31F1D64
	0x031F1D88 LDR X0, [X23 + 0x20]
	0x031F1D8C CBZ X0, 0x31F1DA0
	0x031F1D90 LDR X8, [X0]
	0x031F1D94 LDR X9, [X8 + 0x298]
	0x031F1D98 LDR X1, [X8 + 0x2A0]
	0x031F1D9C BLR X9
	0x031F1DA0 LDR W8, [X31 + 0x1C]
	0x031F1DA4 LDR X20, [X31 + 0x8]
	0x031F1DA8 CMP W8, W0
	0x031F1DAC CSINV W1, W22, W31, EQ
	0x031F1DB0 B 0x31F1D64
	0x031F1DB4 CBZ X0, 0x31F1DF0
	0x031F1DB8 LDR X8, [X0]
	0x031F1DBC LDR X9, [X8 + 0x3D8]
	0x031F1DC0 LDR X2, [X8 + 0x3E0]
	0x031F1DC4 BLR X9
	0x031F1DC8 MOVZ W8, 0x1
	0x031F1DCC STRB W8, [X20 + 0x32]
	0x031F1DD0 LDP X20, X19, [X31 + 0x70]
	0x031F1DD4 LDP X22, X21, [X31 + 0x60]
	0x031F1DD8 LDP X24, X23, [X31 + 0x50]
	0x031F1DDC LDP X26, X25, [X31 + 0x40]
	0x031F1DE0 LDP X28, X27, [X31 + 0x30]
	0x031F1DE4 LDP X29, X30, [X31 + 0x20]
	0x031F1DE8 ADD X31, X31, 0x80
	0x031F1DEC RET
	0x031F1DF0 BL 0x1C16F20
	0x031F1DF4 MOV X0, X21
	0x031F1DF8 MOV X1, X19
	0x031F1DFC BL 0x1C171E0
	0x031F1E00 MOV X0, X25
	0x031F1E04 BL 0x1C171E0
	0x031F1E08 MOV X0, X23
	0x031F1E0C BL 0x1C171E0
	0x031F1E10 STR X30, [X31 - 0x30]!
	0x031F1E14 STP X22, X21, [X31 + 0x10]
	0x031F1E18 STP X20, X19, [X31 + 0x20]
	0x031F1E1C ADRP X20, 0x11EB000
	0x031F1E20 LDRB W8, [X20 + 0x18A]
	0x031F1E24 MOV X19, X0
	0x031F1E28 TBNZ X8, 0x0, 0x31F1E40
	0x031F1E2C ADRP X0, 0xF2F000
	0x031F1E30 LDR X0, [X0 + 0xD68]
	0x031F1E34 BL 0x1C16CF4
	0x031F1E38 MOVZ W8, 0x1
	0x031F1E3C STRB W8, [X20 + 0x18A]
	0x031F1E40 ADRP X21, 0xF2F000
	0x031F1E44 LDR X22, [X19 + 0x10]
	0x031F1E48 LDR X21, [X21 + 0xD68]
	0x031F1E4C MOV X0, X19
	0x031F1E50 BL 0x31EF198
	0x031F1E54 MOV X20, X0
	0x031F1E58 CBZ X22, 0x31F1EBC
	0x031F1E5C MOV X0, X31
	0x031F1E60 BL 0x3242CD8
	0x031F1E64 CBZ X0, 0x31F1ED4
	0x031F1E68 LDR X8, [X0]
	0x031F1E6C LDR X1, [X19 + 0x10]
	0x031F1E70 LDR X9, [X8 + 0x378]
	0x031F1E74 LDR X2, [X8 + 0x380]
	0x031F1E78 BLR X9
	0x031F1E7C LDR X8, [X21]
	0x031F1E80 MOV X22, X0
	0x031F1E84 MOV X0, X8
	0x031F1E88 BL 0x1C16F10
	0x031F1E8C MOV X1, X20
	0x031F1E90 MOV X2, X22
	0x031F1E94 MOV X21, X0
	0x031F1E98 BL 0x31EBA74
	0x031F1E9C CBZ X21, 0x31F1ED4
	0x031F1EA0 LDR W8, [X19 + 0x34]
	0x031F1EA4 MOV X0, X21
	0x031F1EA8 LDP X20, X19, [X31 + 0x20]
	0x031F1EAC STR W8, [X21 + 0x34]
	0x031F1EB0 LDP X22, X21, [X31 + 0x10]
	0x031F1EB4 LDR X30, [X31], #0x30
	0x031F1EB8 RET
	0x031F1EBC LDR X0, [X21]
	0x031F1EC0 BL 0x1C16F10
	0x031F1EC4 MOV X1, X20
	0x031F1EC8 MOV X21, X0
	0x031F1ECC BL 0x31EB200
	0x031F1ED0 CBNZ X21, 0x31F1EA0
	0x031F1ED4 BL 0x1C16F20
	0x031F1ED8 STR X30, [X31 - 0x20]!
	0x031F1EDC STP X20, X19, [X31 + 0x10]
	0x031F1EE0 ADRP X20, 0x11EB000
	0x031F1EE4 ADRP X19, 0xF2F000
	0x031F1EE8 LDRB W8, [X20 + 0x18B]
	0x031F1EEC LDR X19, [X19 + 0xD68]
	0x031F1EF0 TBNZ X8, 0x0, 0x31F1F08
	0x031F1EF4 ADRP X0, 0xF2F000
	0x031F1EF8 LDR X0, [X0 + 0xD68]
	0x031F1EFC BL 0x1C16CF4
	0x031F1F00 MOVZ W8, 0x1
	0x031F1F04 STRB W8, [X20 + 0x18B]
	0x031F1F08 LDR X0, [X19]
	0x031F1F0C LDR W8, [X0 + 0xE0]
	0x031F1F10 CBNZ W8, 0x31F1F1C
	0x031F1F14 BL 0x1C16DFC
	0x031F1F18 LDR X0, [X19]
	0x031F1F1C LDR X8, [X0 + 0xB8]
	0x031F1F20 LDP X20, X19, [X31 + 0x10]
	0x031F1F24 LDR W0, [X8]
	0x031F1F28 LDR X30, [X31], #0x20
	0x031F1F2C RET
	0x031F1F30 STR X30, [X31 - 0x20]!
	0x031F1F34 STP X20, X19, [X31 + 0x10]
	0x031F1F38 ADRP X19, 0x11EB000
	0x031F1F3C ADRP X20, 0xF2F000
	0x031F1F40 LDRB W8, [X19 + 0x18C]
	0x031F1F44 LDR X20, [X20 + 0xD68]
	0x031F1F48 TBNZ X8, 0x0, 0x31F1F60
	0x031F1F4C ADRP X0, 0xF2F000
	0x031F1F50 LDR X0, [X0 + 0xD68]
	0x031F1F54 BL 0x1C16CF4
	0x031F1F58 MOVZ W8, 0x1
	0x031F1F5C STRB W8, [X19 + 0x18C]
	0x031F1F60 LDR X8, [X20]
	0x031F1F64 LDP X20, X19, [X31 + 0x10]
	0x031F1F68 MOVN W9, 0x80000000
	0x031F1F6C LDR X8, [X8 + 0xB8]
	0x031F1F70 STR W9, [X8]
	0x031F1F74 LDR X30, [X31], #0x20
	0x031F1F78 RET
	0x031F1F7C STR X1, [X0 + 0x10]
	0x031F1F80 RET
	0x031F1F84 STR W1, [X0 + 0x18]
	0x031F1F88 RET
	0x031F1F8C STR X30, [X31 - 0x10]!
	0x031F1F90 CBZ X3, 0x31F2048
	0x031F1F94 LDR X8, [X3 + 0x18]
	0x031F1F98 CBZ W8, 0x31F203C
	0x031F1F9C CBZ X1, 0x31F2048
	0x031F1FA0 LDR W10, [X1 + 0x18]
	0x031F1FA4 ADD W9, W2, W8
	0x031F1FA8 SUB W9, W9, 0x1
	0x031F1FAC CMP W9, W10
	0x031F1FB0 B.CS 0x31F203C
	0x031F1FB4 SUB W8, W8, 0x1
	0x031F1FB8 ADD X10, X1, W9, SXTW
	0x031F1FBC ADD X8, X3, W8, SXTW
	0x031F1FC0 LDRB W8, [X8 + 0x20]
	0x031F1FC4 LDRB W9, [X10 + 0x20]
	0x031F1FC8 ADD W8, W8, W9
	0x031F1FCC ADD W9, W8, 0x1
	0x031F1FD0 STRB W9, [X10 + 0x20]
	0x031F1FD4 LDR X10, [X3 + 0x18]
	0x031F1FD8 SUBS W8, W10, 0x2
	0x031F1FDC B.MI 0x31F2040
	0x031F1FE0 AND X10, X10, 0x0
	0x031F1FE4 CMP X10, W8, UXTW
	0x031F1FE8 B.LS 0x31F203C
	0x031F1FEC MOV W8, W8
	0x031F1FF0 UBFM W11, W9, 0x8, 0x1F
	0x031F1FF4 ADD X9, X3, 0x20
	0x031F1FF8 MOV W10, W2
	0x031F1FFC LDR W13, [X1 + 0x18]
	0x031F2000 ADD X12, X10, X8
	0x031F2004 CMP W12, W13
	0x031F2008 B.CS 0x31F203C
	0x031F200C LDRB W13, [X9, X8, LSL]
	0x031F2010 ADD X12, X1, W12, SXTW
	0x031F2014 LDRB W14, [X12 + 0x20]
	0x031F2018 SUBS X8, X8, 0x1
	0x031F201C ADD W11, W11, W13
	0x031F2020 ADD W11, W11, W14
	0x031F2024 STRB W11, [X12 + 0x20]
	0x031F2028 B.LT 0x31F2040
	0x031F202C LDR W12, [X3 + 0x18]
	0x031F2030 SBFM W11, W11, 0x8, 0x1F
	0x031F2034 CMP X8, X12
	0x031F2038 B.CC 0x31F1FFC
	0x031F203C BL 0x1C16F28
	0x031F2040 LDR X30, [X31], #0x10
	0x031F2044 RET
	0x031F2048 BL 0x1C16F20
	0x031F204C SUB X31, X31, 0x70
	0x031F2050 STP X29, X30, [X31 + 0x10]
	0x031F2054 STP X28, X27, [X31 + 0x20]
	0x031F2058 STP X26, X25, [X31 + 0x30]
	0x031F205C STP X24, X23, [X31 + 0x40]
	0x031F2060 STP X22, X21, [X31 + 0x50]
	0x031F2064 STP X20, X19, [X31 + 0x60]
	0x031F2068 ADRP X22, 0x11EA000
	0x031F206C ADRP X21, 0xF2E000
	0x031F2070 LDRB W8, [X22 + 0x18F]
	0x031F2074 LDR X21, [X21 + 0xF88]
	0x031F2078 MOV W23, W2
	0x031F207C MOV X19, X1
	0x031F2080 MOV X20, X0
	0x031F2084 TBNZ X8, 0x0, 0x31F20A8
	0x031F2088 ADRP X0, 0xF01000
	0x031F208C LDR X0, [X0 + 0x618]
	0x031F2090 BL 0x1C16CF4
	0x031F2094 ADRP X0, 0xF2E000
	0x031F2098 LDR X0, [X0 + 0xF88]
	0x031F209C BL 0x1C16CF4
	0x031F20A0 MOVZ W8, 0x1
	0x031F20A4 STRB W8, [X22 + 0x18F]
	0x031F20A8 LDR X0, [X21]
	0x031F20AC LDR X21, [X20 + 0x10]
	0x031F20B0 LDR W8, [X0 + 0xE0]
	0x031F20B4 CBNZ W8, 0x31F20BC
	0x031F20B8 BL 0x1C16DFC
	0x031F20BC MOV X0, X21
	0x031F20C0 MOV X1, X31
	0x031F20C4 BL 0x31FFC84
	0x031F20C8 CBZ X0, 0x31F2478
	0x031F20CC LDR X8, [X0]
	0x031F20D0 ADRP X27, 0xF01000
	0x031F20D4 MOV X21, X0
	0x031F20D8 LDP X9, X1, [X8 + 0x1D8]
	0x031F20DC LDR X27, [X27 + 0x618]
	0x031F20E0 BLR X9
	0x031F20E4 LDR X8, [X27]
	0x031F20E8 MOV W24, W0
	0x031F20EC MOV W1, W23
	0x031F20F0 MOV X0, X8
	0x031F20F4 BL 0x1C16D6C
	0x031F20F8 LDR X8, [X20 + 0x28]
	0x031F20FC MOV X22, X0
	0x031F2100 CBZ X8, 0x31F2184
	0x031F2104 LDR X8, [X8 + 0x18]
	0x031F2108 CBZ X8, 0x31F2184
	0x031F210C LDR X0, [X27]
	0x031F2110 ADD W9, W8, 0x3F
	0x031F2114 ADD W8, W8, 0x7E
	0x031F2118 CMP W9, 0x0
	0x031F211C CSEL W8, W8, W9, LT
	0x031F2120 AND W1, W8, 0xFFFFFFC0
	0x031F2124 BL 0x1C16D6C
	0x031F2128 CBZ X0, 0x31F2478
	0x031F212C LDR W9, [X0 + 0x18]
	0x031F2130 MOV X25, X0
	0x031F2134 CBZ W9, 0x31F2194
	0x031F2138 MOV W8, W31
	0x031F213C LDR X10, [X20 + 0x28]
	0x031F2140 CBZ X10, 0x31F2478
	0x031F2144 LDR W12, [X10 + 0x18]
	0x031F2148 SDIV W11, W8, W12
	0x031F214C MSUB W11, W11, W12, W8
	0x031F2150 CMP W11, W12
	0x031F2154 B.CS 0x31F2474
	0x031F2158 CMP W8, W9
	0x031F215C B.CS 0x31F2474
	0x031F2160 ADD X9, X10, W11, SXTW
	0x031F2164 LDRB W9, [X9 + 0x20]
	0x031F2168 ADD X10, X25, W8, SXTW
	0x031F216C ADD W8, W8, 0x1
	0x031F2170 STRB W9, [X10 + 0x20]
	0x031F2174 LDR W9, [X25 + 0x18]
	0x031F2178 CMP W8, W9
	0x031F217C B.NE 0x31F213C
	0x031F2180 B 0x31F2194
	0x031F2184 LDR X0, [X27]
	0x031F2188 MOV W1, W31
	0x031F218C BL 0x1C16D6C
	0x031F2190 MOV X25, X0
	0x031F2194 LDR X8, [X20 + 0x20]
	0x031F2198 CBZ X8, 0x31F221C
	0x031F219C LDR X8, [X8 + 0x18]
	0x031F21A0 CBZ X8, 0x31F221C
	0x031F21A4 LDR X0, [X27]
	0x031F21A8 ADD W9, W8, 0x3F
	0x031F21AC ADD W8, W8, 0x7E
	0x031F21B0 CMP W9, 0x0
	0x031F21B4 CSEL W8, W8, W9, LT
	0x031F21B8 AND W1, W8, 0xFFFFFFC0
	0x031F21BC BL 0x1C16D6C
	0x031F21C0 CBZ X0, 0x31F2478
	0x031F21C4 LDR W9, [X0 + 0x18]
	0x031F21C8 MOV X26, X0
	0x031F21CC CBZ W9, 0x31F222C
	0x031F21D0 MOV W8, W31
	0x031F21D4 LDR X10, [X20 + 0x20]
	0x031F21D8 CBZ X10, 0x31F2478
	0x031F21DC LDR W12, [X10 + 0x18]
	0x031F21E0 SDIV W11, W8, W12
	0x031F21E4 MSUB W11, W11, W12, W8
	0x031F21E8 CMP W11, W12
	0x031F21EC B.CS 0x31F2474
	0x031F21F0 CMP W8, W9
	0x031F21F4 B.CS 0x31F2474
	0x031F21F8 ADD X9, X10, W11, SXTW
	0x031F21FC LDRB W9, [X9 + 0x20]
	0x031F2200 ADD X10, X26, W8, SXTW
	0x031F2204 ADD W8, W8, 0x1
	0x031F2208 STRB W9, [X10 + 0x20]
	0x031F220C LDR W9, [X26 + 0x18]
	0x031F2210 CMP W8, W9
	0x031F2214 B.NE 0x31F21D4
	0x031F2218 B 0x31F222C
	0x031F221C LDR X0, [X27]
	0x031F2220 MOV W1, W31
	0x031F2224 BL 0x1C16D6C
	0x031F2228 MOV X26, X0
	0x031F222C CBZ X25, 0x31F2478
	0x031F2230 CBZ X26, 0x31F2478
	0x031F2234 LDR W8, [X25 + 0x18]
	0x031F2238 LDR W9, [X26 + 0x18]
	0x031F223C LDR X0, [X27]
	0x031F2240 SBFM W28, W24, 0x3, 0x1F
	0x031F2244 ADD W1, W9, W8
	0x031F2248 BL 0x1C16D6C
	0x031F224C LDR W4, [X25 + 0x18]
	0x031F2250 MOV X24, X0
	0x031F2254 MOV X0, X25
	0x031F2258 MOV W1, W31
	0x031F225C MOV X2, X24
	0x031F2260 MOV W3, W31
	0x031F2264 MOV X5, X31
	0x031F2268 BL 0x33A8A9C
	0x031F226C LDR W3, [X25 + 0x18]
	0x031F2270 LDR W4, [X26 + 0x18]
	0x031F2274 MOV X0, X26
	0x031F2278 MOV W1, W31
	0x031F227C MOV X2, X24
	0x031F2280 MOV X5, X31
	0x031F2284 BL 0x33A8A9C
	0x031F2288 LDR X0, [X27]
	0x031F228C MOVZ W1, 0x40
	0x031F2290 BL 0x1C16D6C
	0x031F2294 ADD W8, W23, W28
	0x031F2298 SUB W8, W8, 0x1
	0x031F229C SDIV W29, W8, W28
	0x031F22A0 SUBS W8, W29, 0x1
	0x031F22A4 STR W28, [X31 + 0xC]
	0x031F22A8 B.LT 0x31F2450
	0x031F22AC CBZ X19, 0x31F2478
	0x031F22B0 LDR W9, [X31 + 0xC]
	0x031F22B4 MOV X23, X0
	0x031F22B8 MOVZ W28, 0x1
	0x031F22BC MUL W8, W8, W9
	0x031F22C0 STR W8, [X31 + 0x8]
	0x031F22C4 LDR W3, [X19 + 0x18]
	0x031F22C8 MOV X0, X21
	0x031F22CC MOV X1, X19
	0x031F22D0 MOV W2, W31
	0x031F22D4 MOV X4, X19
	0x031F22D8 MOV W5, W31
	0x031F22DC MOV X6, X31
	0x031F22E0 BL 0x32519D0
	0x031F22E4 CBZ X24, 0x31F2478
	0x031F22E8 LDR W3, [X24 + 0x18]
	0x031F22EC MOV X0, X21
	0x031F22F0 MOV X1, X24
	0x031F22F4 MOV W2, W31
	0x031F22F8 MOV X4, X31
	0x031F22FC BL 0x3251BB0
	0x031F2300 LDR X8, [X21]
	0x031F2304 MOV X0, X21
	0x031F2308 LDP X9, X1, [X8 + 0x1E8]
	0x031F230C BLR X9
	0x031F2310 LDR X8, [X21]
	0x031F2314 MOV X26, X0
	0x031F2318 MOV X0, X21
	0x031F231C LDR X9, [X8 + 0x258]
	0x031F2320 LDR X1, [X8 + 0x260]
	0x031F2324 BLR X9
	0x031F2328 LDR W8, [X20 + 0x18]
	0x031F232C CMP W8, 0x1
	0x031F2330 B.EQ 0x31F2368
	0x031F2334 MOVZ W27, 0x1
	0x031F2338 CBZ X26, 0x31F2478
	0x031F233C LDR W3, [X26 + 0x18]
	0x031F2340 MOV X0, X21
	0x031F2344 MOV X1, X26
	0x031F2348 MOV W2, W31
	0x031F234C MOV X4, X31
	0x031F2350 BL 0x3251540
	0x031F2354 LDR W8, [X20 + 0x18]
	0x031F2358 ADD W27, W27, 0x1
	0x031F235C MOV X26, X0
	0x031F2360 CMP W27, W8
	0x031F2364 B.NE 0x31F2338
	0x031F2368 CBZ X23, 0x31F2478
	0x031F236C LDR W9, [X23 + 0x18]
	0x031F2370 CBZ W9, 0x31F23B8
	0x031F2374 MOV W8, W31
	0x031F2378 CBZ X26, 0x31F2478
	0x031F237C LDR W11, [X26 + 0x18]
	0x031F2380 SDIV W10, W8, W11
	0x031F2384 MSUB W10, W10, W11, W8
	0x031F2388 CMP W10, W11
	0x031F238C B.CS 0x31F2474
	0x031F2390 CMP W8, W9
	0x031F2394 B.CS 0x31F2474
	0x031F2398 ADD X9, X26, W10, SXTW
	0x031F239C LDRB W9, [X9 + 0x20]
	0x031F23A0 ADD X10, X23, W8, SXTW
	0x031F23A4 ADD W8, W8, 0x1
	0x031F23A8 STRB W9, [X10 + 0x20]
	0x031F23AC LDR W9, [X23 + 0x18]
	0x031F23B0 CMP W8, W9
	0x031F23B4 B.NE 0x31F2378

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X29
	003 Move [X31+40], X30
	004 Move [X31+48], X28
	005 Move [X31+56], X27
	006 Move [X31+64], X26
	007 Move [X31+72], X25
	008 Move [X31+80], X24
	009 Move [X31+88], X23
	010 Move [X31+96], X22
	011 Move [X31+104], X21
	012 Move [X31+112], X20
	013 Move [X31+120], X19
	014 Move [X31+24], X0
	015 Move X19, 0x11ED000
	016 Move X20, 0xF31000
	017 Move X25, 0xF31000
	018 Move W8, [X19+390]
	019 Move X20, [X20+2968]
	020 Move X25, [X25+2976]
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {72}
	025 Move X0, 0xF31000
	026 Move X0, [X0+2968]
	027 Call 0x1C17CF4
	028 Move X0, 0xF31000
	029 Move X0, [X0+2976]
	030 Call 0x1C17CF4
	031 Move X0, 0xF04000
	032 Move X0, [X0+1560]
	033 Call 0x1C17CF4
	034 Move X0, 0xF31000
	035 Move X0, [X0+3184]
	036 Call 0x1C17CF4
	037 Move X0, 0xF04000
	038 Move X0, [X0+3584]
	039 Call 0x1C17CF4
	040 Move X0, 0xF04000
	041 Move X0, [X0+3608]
	042 Call 0x1C17CF4
	043 Move X0, 0xF31000
	044 Move X0, [X0+3592]
	045 Call 0x1C17CF4
	046 Move X0, 0xF31000
	047 Move X0, [X0+3264]
	048 Call 0x1C17CF4
	049 Move X0, 0xF31000
	050 Move X0, [X0+3608]
	051 Call 0x1C17CF4
	052 Move X0, 0xF31000
	053 Move X0, [X0+3768]
	054 Call 0x1C17CF4
	055 Move X0, 0xF31000
	056 Move X0, [X0+3624]
	057 Call 0x1C17CF4
	058 Move X0, 0xF31000
	059 Move X0, [X0+3336]
	060 Call 0x1C17CF4
	061 Move X0, 0xF31000
	062 Move X0, [X0+3632]
	063 Call 0x1C17CF4
	064 Move X0, 0xF31000
	065 Move X0, [X0+3456]
	066 Call 0x1C17CF4
	067 Move X0, 0xF31000
	068 Move X0, [X0+3664]
	069 Call 0x1C17CF4
	070 Move W8, 1
	071 Move [X19+390], W8
	072 Move X0, [X20]
	073 Call 0x1C17F10
	074 Move X1, X31
	075 Move X19, X0
	076 Call Object..ctor, X0
	077 Move W8, 48
	078 Move [X19+16], W8
	079 Move [X19+24], X31
	080 Move X0, [X25]
	081 Move [X31+8], X19
	082 Call 0x1C17F10
	083 Move X1, X31
	084 Move X24, X0
	085 Call ArrayList..ctor, X0
	086 Move X8, [X31+24]
	087 Move X0, [X8+56]
	088 Compare X0, 0
	089 JumpIfEqual {1787}
	090 Move X8, [X0]
	091 Move X9, [X8+904]
	092 Move X1, [X8+912]
	093 NotImplemented "Instruction BLR not yet implemented."
	094 Move X21, X0
	095 Compare X0, 0
	096 JumpIfEqual {1799}
	097 Move X19, 0xF04000
	098 Move X20, 0xF31000
	099 Move X26, 0xF31000
	100 Move X27, 0xF31000
	101 Move X28, 0xF31000
	102 Move X19, [X19+3608]
	103 Move X20, [X20+3592]
	104 Move X26, [X26+3664]
	105 Move X27, [X27+3184]
	106 Move X28, [X28+3264]
	107 Move X8, [X21]
	108 Move X1, [X19]
	109 NotImplemented "Instruction LDRH not yet implemented."
	110 Compare X9, 0
	111 JumpIfEqual {118}
	112 Move X10, [X8+176]
	113 Add X10, X10, 8
	114 NotImplemented "Instruction LDUR not yet implemented."
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Subtract X9, X9, 1
	117 Add X10, X10, 16
	118 Move X0, X21
	119 Move W2, W31
	120 Call 0x1C5D788
	121 NotImplemented "Instruction LDRSW not yet implemented."
	122 Add X8, X8, X9
	123 Add X0, X8, 312
	124 Move X8, [X0]
	125 Move X1, [X0+8]
	126 Move X0, X21
	127 NotImplemented "Instruction BLR not yet implemented."
	128 Move TEMP, X0
	129 And TEMP, TEMP, 1
	130 Compare TEMP, 1
	131 JumpIfNotEqual {214}
	132 Move X8, [X21]
	133 Move X1, [X19]
	134 NotImplemented "Instruction LDRH not yet implemented."
	135 Compare X9, 0
	136 JumpIfEqual {143}
	137 Move X10, [X8+176]
	138 Add X10, X10, 8
	139 NotImplemented "Instruction LDUR not yet implemented."
	140 NotImplemented "Instruction CMP not yet implemented."
	141 Subtract X9, X9, 1
	142 Add X10, X10, 16
	143 Move W2, 1
	144 Move X0, X21
	145 Call 0x1C5D788
	146 Move W9, [X10]
	147 Add W9, W9, 1
	148 Add X8, X8, W9
	149 Add X0, X8, 312
	150 Move X8, [X0]
	151 Move X1, [X0+8]
	152 Move X0, X21
	153 NotImplemented "Instruction BLR not yet implemented."
	154 Move X22, X0
	155 Compare X0, 0
	156 JumpIfEqual {1750}
	157 Move X8, [X22]
	158 Move X1, [X20]
	159 Move W10, [X8+304]
	160 Move W9, [X1+304]
	161 NotImplemented "Instruction CMP not yet implemented."
	162 Move X8, [X8+200]
	163 Add X8, X8, X9
	164 NotImplemented "Instruction LDUR not yet implemented."
	165 NotImplemented "Instruction CMP not yet implemented."
	166 Move X0, [X22+16]
	167 Compare X0, 0
	168 JumpIfEqual {1751}
	169 Move X1, [X26]
	170 Move X2, X31
	171 Call String.Equals, X0, X1
	172 Move TEMP, X0
	173 And TEMP, TEMP, 1
	174 Compare TEMP, 1
	175 JumpIfNotEqual {107}
	176 Move X0, [X22+24]
	177 Compare X0, 0
	178 JumpIfEqual {1774}
	179 Move W1, 1
	180 Call ASN1.get_Item, X0, X1
	181 Compare X0, 0
	182 JumpIfEqual {1772}
	183 Call ASN1.get_Value, X0
	184 Move X22, X0
	185 Move X0, [X27]
	186 Call 0x1C17F10
	187 Move X23, X0
	188 Move X1, X22
	189 Call ContentInfo..ctor, X0, X1
	190 Compare X23, 0
	191 JumpIfEqual {1775}
	192 Move X0, [X23+24]
	193 Compare X0, 0
	194 JumpIfEqual {1770}
	195 Move W1, W31
	196 Call ASN1.get_Item, X0, X1
	197 Compare X0, 0
	198 JumpIfEqual {1771}
	199 Call ASN1.get_Value, X0
	200 Move X23, X0
	201 Move X0, [X28]
	202 Call 0x1C17F10
	203 Move X22, X0
	204 Move X1, X23
	205 Call X509Certificate..ctor, X0, X1
	206 Compare X24, 0
	207 JumpIfEqual {1773}
	208 Move X8, [X24]
	209 Move X9, [X8+776]
	210 Move X2, [X8+784]
	211 Move X0, X24
	212 Move X1, X22
	213 NotImplemented "Instruction BLR not yet implemented."
	214 Move X22, X31
	215 Move X8, 0xF04000
	216 Move X8, [X8+3584]
	217 Move X0, X21
	218 Move X1, [X8]
	219 Call 0x1C17E00
	220 Compare X0, 0
	221 JumpIfEqual {246}
	222 Move X8, [X0]
	223 Move X10, 0xF04000
	224 Move X21, X0
	225 NotImplemented "Instruction LDRH not yet implemented."
	226 Move X10, [X10+3584]
	227 Move X1, [X10]
	228 Compare X9, 0
	229 JumpIfEqual {236}
	230 Move X10, [X8+176]
	231 Add X10, X10, 8
	232 NotImplemented "Instruction LDUR not yet implemented."
	233 NotImplemented "Instruction CMP not yet implemented."
	234 Subtract X9, X9, 1
	235 Add X10, X10, 16
	236 Move X0, X21
	237 Move W2, W31
	238 Call 0x1C5D788
	239 NotImplemented "Instruction LDRSW not yet implemented."
	240 Add X8, X8, X9
	241 Add X0, X8, 312
	242 Move X8, [X0]
	243 Move X1, [X0+8]
	244 Move X0, X21
	245 NotImplemented "Instruction BLR not yet implemented."
	246 Compare X22, 0
	247 JumpIfNotEqual {1797}
	248 Move X0, [X25]
	249 Call 0x1C17F10
	250 Move X1, X31
	251 Move X21, X0
	252 Call ArrayList..ctor, X0
	253 Move X0, [X25]
	254 Call 0x1C17F10
	255 Move X1, X31
	256 Move [X31+16], X0
	257 Call ArrayList..ctor, X0
	258 Move X0, [X31+24]
	259 Call PKCS12.get_Certificates, X0
	260 Compare X0, 0
	261 JumpIfEqual {1787}
	262 Call X509CertificateCollection.GetEnumerator, X0
	263 Move X25, X0
	264 Compare X0, 0
	265 JumpIfEqual {1800}
	266 Move X20, 0xF04000
	267 Move X19, 0xF31000
	268 Move X20, [X20+3608]
	269 Move X19, [X19+3264]
	270 Move X0, X25
	271 Call X509CertificateEnumerator.MoveNext, X0
	272 Move TEMP, X0
	273 And TEMP, TEMP, 1
	274 Compare TEMP, 1
	275 JumpIfNotEqual {434}
	276 Move X0, X25
	277 Call X509CertificateEnumerator.get_Current, X0
	278 Compare X24, 0
	279 JumpIfEqual {1754}
	280 Move X8, [X24]
	281 Move X26, X0
	282 Move X1, [X8+912]
	283 Move X9, [X8+904]
	284 Move X0, X24
	285 NotImplemented "Instruction BLR not yet implemented."
	286 Move X27, X0
	287 Compare X0, 0
	288 JumpIfEqual {422}
	289 Move W22, W31
	290 Move X8, [X27]
	291 Move X1, [X20]
	292 NotImplemented "Instruction LDRH not yet implemented."
	293 Compare X9, 0
	294 JumpIfEqual {301}
	295 Move X10, [X8+176]
	296 Add X10, X10, 8
	297 NotImplemented "Instruction LDUR not yet implemented."
	298 NotImplemented "Instruction CMP not yet implemented."
	299 Subtract X9, X9, 1
	300 Add X10, X10, 16
	301 Move X0, X27
	302 Move W2, W31
	303 Call 0x1C5D788
	304 NotImplemented "Instruction LDRSW not yet implemented."
	305 Add X8, X8, X9
	306 Add X0, X8, 312
	307 Move X8, [X0]
	308 Move X1, [X0+8]
	309 Move X0, X27
	310 NotImplemented "Instruction BLR not yet implemented."
	311 Move TEMP, X0
	312 And TEMP, TEMP, 1
	313 Compare TEMP, 1
	314 JumpIfNotEqual {368}
	315 Move X8, [X27]
	316 Move X1, [X20]
	317 NotImplemented "Instruction LDRH not yet implemented."
	318 Compare X9, 0
	319 JumpIfEqual {326}
	320 Move X10, [X8+176]
	321 Add X10, X10, 8
	322 NotImplemented "Instruction LDUR not yet implemented."
	323 NotImplemented "Instruction CMP not yet implemented."
	324 Subtract X9, X9, 1
	325 Add X10, X10, 16
	326 Move W2, 1
	327 Move X0, X27
	328 Call 0x1C5D788
	329 Move W9, [X10]
	330 Add W9, W9, 1
	331 Add X8, X8, W9
	332 Add X0, X8, 312
	333 Move X8, [X0]
	334 Move X1, [X0+8]
	335 Move X0, X27
	336 NotImplemented "Instruction BLR not yet implemented."
	337 Move X23, X0
	338 Compare X0, 0
	339 JumpIfEqual {349}
	340 Move X8, [X23]
	341 Move X1, [X19]
	342 Move W10, [X8+304]
	343 Move W9, [X1+304]
	344 NotImplemented "Instruction CMP not yet implemented."
	345 Move X8, [X8+200]
	346 Add X8, X8, X9
	347 NotImplemented "Instruction LDUR not yet implemented."
	348 NotImplemented "Instruction CMP not yet implemented."
	349 Compare X26, 0
	350 JumpIfEqual {420}
	351 Move X8, [X26]
	352 Move X9, [X8+504]
	353 Move X1, [X8+512]
	354 Move X0, X26
	355 NotImplemented "Instruction BLR not yet implemented."
	356 Compare X23, 0
	357 JumpIfEqual {421}
	358 Move X8, [X23]
	359 Move X28, X0
	360 Move X9, [X8+504]
	361 Move X1, [X8+512]
	362 Move X0, X23
	363 NotImplemented "Instruction BLR not yet implemented."
	364 Move X1, X28
	365 Move X2, X0
	366 Call PKCS12.Compare, X0, X1, X2
	367 Or W22, W22, W0
	368 Move X29, X31
	369 Move W28, 9
	370 Move X8, 0xF04000
	371 Move X8, [X8+3584]
	372 Move X1, [X8]
	373 Move X0, X27
	374 Call 0x1C17E00
	375 Move X23, X0
	376 Compare X0, 0
	377 JumpIfEqual {401}
	378 Move X8, [X23]
	379 Move X10, 0xF04000
	380 NotImplemented "Instruction LDRH not yet implemented."
	381 Move X10, [X10+3584]
	382 Move X1, [X10]
	383 Compare X9, 0
	384 JumpIfEqual {391}
	385 Move X10, [X8+176]
	386 Add X10, X10, 8
	387 NotImplemented "Instruction LDUR not yet implemented."
	388 NotImplemented "Instruction CMP not yet implemented."
	389 Subtract X9, X9, 1
	390 Add X10, X10, 16
	391 Move X0, X23
	392 Move W2, W31
	393 Call 0x1C5D788
	394 NotImplemented "Instruction LDRSW not yet implemented."
	395 Add X8, X8, X9
	396 Add X0, X8, 312
	397 Move X8, [X0]
	398 Move X1, [X0+8]
	399 Move X0, X23
	400 NotImplemented "Instruction BLR not yet implemented."
	401 Compare X29, 0
	402 JumpIfNotEqual {1752}
	403 NotImplemented "Instruction CMP not yet implemented."
	404 Compare W28, 0
	405 JumpIfNotEqual {436}
	406 Move TEMP, X22
	407 And TEMP, TEMP, 1
	408 Compare TEMP, 1
	409 JumpIfEqual {270}
	410 Compare X21, 0
	411 JumpIfEqual {1781}
	412 Move X8, [X21]
	413 Move X9, [X8+776]
	414 Move X2, [X8+784]
	415 Move X0, X21
	416 Move X1, X26
	417 NotImplemented "Instruction BLR not yet implemented."
	418 Move X0, X23
	419 Call 0x1C181E0
	420 Call 0x1C17F20
	421 Call 0x1C17F20
	422 Call 0x1C17F20
	423 Move X28, X1
	424 Move X23, X0
	425 Move W22, W31
	426 Move X28, X1
	427 Move X23, X0
	428 NotImplemented "Instruction CMP not yet implemented."
	429 Move X0, X23
	430 Call 0x3EB2AD0
	431 Move X29, [X0]
	432 Call 0x3EB2AE0
	433 Move W28, W31
	434 Move X26, X31
	435 Move W28, 10
	436 Move X26, X31
	437 Move X19, 0xF04000
	438 Move X19, [X19+3584]
	439 Move X0, X25
	440 Move X1, [X19]
	441 Call 0x1C17E00
	442 Compare X0, 0
	443 JumpIfEqual {466}
	444 Move X8, [X0]
	445 Move X1, [X19]
	446 Move X23, X0
	447 NotImplemented "Instruction LDRH not yet implemented."
	448 Compare X9, 0
	449 JumpIfEqual {456}
	450 Move X10, [X8+176]
	451 Add X10, X10, 8
	452 NotImplemented "Instruction LDUR not yet implemented."
	453 NotImplemented "Instruction CMP not yet implemented."
	454 Subtract X9, X9, 1
	455 Add X10, X10, 16
	456 Move X0, X23
	457 Move W2, W31
	458 Call 0x1C5D788
	459 NotImplemented "Instruction LDRSW not yet implemented."
	460 Add X8, X8, X9
	461 Add X0, X8, 312
	462 Move X8, [X0]
	463 Move X1, [X0+8]
	464 Move X0, X23
	465 NotImplemented "Instruction BLR not yet implemented."
	466 Compare X26, 0
	467 JumpIfNotEqual {1801}
	468 NotImplemented "Instruction CMP not yet implemented."
	469 Compare W28, 0
	470 JumpIfNotEqual {1452}
	471 Compare X24, 0
	472 JumpIfEqual {1787}
	473 Move X8, [X24]
	474 Move X0, X24
	475 Move X9, [X8+904]
	476 Move X1, [X8+912]
	477 NotImplemented "Instruction BLR not yet implemented."
	478 Move X24, X0
	479 Compare X0, 0
	480 JumpIfEqual {1805}
	481 Move X19, 0xF04000
	482 Move X20, 0xF31000
	483 Move X19, [X19+3608]
	484 Move X20, [X20+3264]
	485 Move X8, [X24]
	486 Move X1, [X19]
	487 NotImplemented "Instruction LDRH not yet implemented."
	488 Compare X9, 0
	489 JumpIfEqual {496}
	490 Move X10, [X8+176]
	491 Add X10, X10, 8
	492 NotImplemented "Instruction LDUR not yet implemented."
	493 NotImplemented "Instruction CMP not yet implemented."
	494 Subtract X9, X9, 1
	495 Add X10, X10, 16
	496 Move X0, X24
	497 Move W2, W31
	498 Call 0x1C5D788
	499 NotImplemented "Instruction LDRSW not yet implemented."
	500 Add X8, X8, X9
	501 Add X0, X8, 312
	502 Move X8, [X0]
	503 Move X1, [X0+8]
	504 Move X0, X24
	505 NotImplemented "Instruction BLR not yet implemented."
	506 Move TEMP, X0
	507 And TEMP, TEMP, 1
	508 Compare TEMP, 1
	509 JumpIfNotEqual {645}
	510 Move X8, [X24]
	511 Move X1, [X19]
	512 NotImplemented "Instruction LDRH not yet implemented."
	513 Compare X9, 0
	514 JumpIfEqual {521}
	515 Move X10, [X8+176]
	516 Add X10, X10, 8
	517 NotImplemented "Instruction LDUR not yet implemented."
	518 NotImplemented "Instruction CMP not yet implemented."
	519 Subtract X9, X9, 1
	520 Add X10, X10, 16
	521 Move W2, 1
	522 Move X0, X24
	523 Call 0x1C5D788
	524 Move W9, [X10]
	525 Add W9, W9, 1
	526 Add X8, X8, W9
	527 Add X0, X8, 312
	528 Move X8, [X0]
	529 Move X1, [X0+8]
	530 Move X0, X24
	531 NotImplemented "Instruction BLR not yet implemented."
	532 Move X25, X0
	533 Compare X0, 0
	534 JumpIfEqual {544}
	535 Move X8, [X25]
	536 Move X1, [X20]
	537 Move W10, [X8+304]
	538 Move W9, [X1+304]
	539 NotImplemented "Instruction CMP not yet implemented."
	540 Move X8, [X8+200]
	541 Add X8, X8, X9
	542 NotImplemented "Instruction LDUR not yet implemented."
	543 NotImplemented "Instruction CMP not yet implemented."
	544 Move X0, [X31+24]
	545 Call PKCS12.get_Certificates, X0
	546 Compare X0, 0
	547 JumpIfEqual {1778}
	548 Call X509CertificateCollection.GetEnumerator, X0
	549 Move X27, X0
	550 Compare X0, 0
	551 JumpIfEqual {633}
	552 Move W22, W31
	553 Move X0, X27
	554 Call X509CertificateEnumerator.MoveNext, X0
	555 Move TEMP, X0
	556 And TEMP, TEMP, 1
	557 Compare TEMP, 1
	558 JumpIfNotEqual {581}
	559 Move X0, X27
	560 Call X509CertificateEnumerator.get_Current, X0
	561 Compare X25, 0
	562 JumpIfEqual {631}
	563 Move X8, [X25]
	564 Move X23, X0
	565 Move X9, [X8+504]
	566 Move X1, [X8+512]
	567 Move X0, X25
	568 NotImplemented "Instruction BLR not yet implemented."
	569 Compare X23, 0
	570 JumpIfEqual {632}
	571 Move X8, [X23]
	572 Move X26, X0
	573 Move X9, [X8+504]
	574 Move X1, [X8+512]
	575 Move X0, X23
	576 NotImplemented "Instruction BLR not yet implemented."
	577 Move X1, X26
	578 Move X2, X0
	579 Call PKCS12.Compare, X0, X1, X2
	580 Or W22, W22, W0
	581 Move X28, X31
	582 Move W26, 15
	583 Move X8, 0xF04000
	584 Move X8, [X8+3584]
	585 Move X1, [X8]
	586 Move X0, X27
	587 Call 0x1C17E00
	588 Move X23, X0
	589 Compare X0, 0
	590 JumpIfEqual {614}
	591 Move X8, [X23]
	592 Move X10, 0xF04000
	593 NotImplemented "Instruction LDRH not yet implemented."
	594 Move X10, [X10+3584]
	595 Move X1, [X10]
	596 Compare X9, 0
	597 JumpIfEqual {604}
	598 Move X10, [X8+176]
	599 Add X10, X10, 8
	600 NotImplemented "Instruction LDUR not yet implemented."
	601 NotImplemented "Instruction CMP not yet implemented."
	602 Subtract X9, X9, 1
	603 Add X10, X10, 16
	604 Move X0, X23
	605 Move W2, W31
	606 Call 0x1C5D788
	607 NotImplemented "Instruction LDRSW not yet implemented."
	608 Add X8, X8, X9
	609 Add X0, X8, 312
	610 Move X8, [X0]
	611 Move X1, [X0+8]
	612 Move X0, X23
	613 NotImplemented "Instruction BLR not yet implemented."
	614 Compare X28, 0
	615 JumpIfNotEqual {1776}
	616 NotImplemented "Instruction CMP not yet implemented."
	617 Compare W26, 0
	618 JumpIfNotEqual {647}
	619 Move TEMP, X22
	620 And TEMP, TEMP, 1
	621 Compare TEMP, 1
	622 JumpIfEqual {485}
	623 Move X0, [X31+16]
	624 Compare X0, 0
	625 JumpIfEqual {1784}
	626 Move X8, [X0]
	627 Move X9, [X8+776]
	628 Move X2, [X8+784]
	629 Move X1, X25
	630 NotImplemented "Instruction BLR not yet implemented."
	631 Call 0x1C17F20
	632 Call 0x1C17F20
	633 Call 0x1C17F20
	634 Move X26, X1
	635 Move X23, X0
	636 Move W22, W31
	637 Move X26, X1
	638 Move X23, X0
	639 NotImplemented "Instruction CMP not yet implemented."
	640 Move X0, X23
	641 Call 0x3EB2AD0
	642 Move X28, [X0]
	643 Call 0x3EB2AE0
	644 Move W26, W31
	645 Move X25, X31
	646 Move W26, 16
	647 Move X25, X31
	648 Move X8, 0xF04000
	649 Move X8, [X8+3584]
	650 Move X0, X24
	651 Move X1, [X8]
	652 Call 0x1C17E00
	653 Compare X0, 0
	654 JumpIfEqual {679}
	655 Move X8, [X0]
	656 Move X10, 0xF04000
	657 Move X23, X0
	658 NotImplemented "Instruction LDRH not yet implemented."
	659 Move X10, [X10+3584]
	660 Move X1, [X10]
	661 Compare X9, 0
	662 JumpIfEqual {669}
	663 Move X10, [X8+176]
	664 Add X10, X10, 8
	665 NotImplemented "Instruction LDUR not yet implemented."
	666 NotImplemented "Instruction CMP not yet implemented."
	667 Subtract X9, X9, 1
	668 Add X10, X10, 16
	669 Move X0, X23
	670 Move W2, W31
	671 Call 0x1C5D788
	672 NotImplemented "Instruction LDRSW not yet implemented."
	673 Add X8, X8, X9
	674 Add X0, X8, 312
	675 Move X8, [X0]
	676 Move X1, [X0+8]
	677 Move X0, X23
	678 NotImplemented "Instruction BLR not yet implemented."
	679 Compare X25, 0
	680 JumpIfNotEqual {1806}
	681 Move X25, 0xF04000
	682 Move X25, [X25+3584]
	683 Or W8, W26, 16
	684 NotImplemented "Instruction CMP not yet implemented."
	685 Move X0, [X31+16]
	686 Compare X0, 0
	687 JumpIfEqual {1787}
	688 Move X8, [X0]
	689 Move X9, [X8+904]
	690 Move X1, [X8+912]
	691 NotImplemented "Instruction BLR not yet implemented."
	692 Move X22, X0
	693 Compare X0, 0
	694 JumpIfEqual {1808}
	695 Move X19, 0xF04000
	696 Move X20, 0xF31000
	697 Move X19, [X19+3608]
	698 Move X20, [X20+3264]
	699 Move X23, [X31+24]
	700 Move X8, [X22]
	701 Move X1, [X19]
	702 NotImplemented "Instruction LDRH not yet implemented."
	703 Compare X9, 0
	704 JumpIfEqual {711}
	705 Move X10, [X8+176]
	706 Add X10, X10, 8
	707 NotImplemented "Instruction LDUR not yet implemented."
	708 NotImplemented "Instruction CMP not yet implemented."
	709 Subtract X9, X9, 1
	710 Add X10, X10, 16
	711 Move X0, X22
	712 Move W2, W31
	713 Call 0x1C5D788
	714 NotImplemented "Instruction LDRSW not yet implemented."
	715 Add X8, X8, X9
	716 Add X0, X8, 312
	717 Move X8, [X0]
	718 Move X1, [X0+8]
	719 Move X0, X22
	720 NotImplemented "Instruction BLR not yet implemented."
	721 Move TEMP, X0
	722 And TEMP, TEMP, 1
	723 Compare TEMP, 1
	724 JumpIfNotEqual {763}
	725 Move X8, [X22]
	726 Move X1, [X19]
	727 NotImplemented "Instruction LDRH not yet implemented."
	728 Compare X9, 0
	729 JumpIfEqual {736}
	730 Move X10, [X8+176]
	731 Add X10, X10, 8
	732 NotImplemented "Instruction LDUR not yet implemented."
	733 NotImplemented "Instruction CMP not yet implemented."
	734 Subtract X9, X9, 1
	735 Add X10, X10, 16
	736 Move W2, 1
	737 Move X0, X22
	738 Call 0x1C5D788
	739 Move W9, [X10]
	740 Add W9, W9, 1
	741 Add X8, X8, W9
	742 Add X0, X8, 312
	743 Move X8, [X0]
	744 Move X1, [X0+8]
	745 Move X0, X22
	746 NotImplemented "Instruction BLR not yet implemented."
	747 Move X8, X0
	748 Compare X0, 0
	749 JumpIfEqual {759}
	750 Move X9, [X8]
	751 Move X1, [X20]
	752 Move W11, [X9+304]
	753 Move W10, [X1+304]
	754 NotImplemented "Instruction CMP not yet implemented."
	755 Move X9, [X9+200]
	756 Add X9, X9, X10
	757 NotImplemented "Instruction LDUR not yet implemented."
	758 NotImplemented "Instruction CMP not yet implemented."
	759 Move X0, X23
	760 Move X1, X8
	761 Move X2, X31
	762 Call PKCS12.RemoveCertificate, X0, X1, X2
	763 Move X24, X31
	764 Move W19, 19
	765 Move X1, [X25]
	766 Move X0, X22
	767 Call 0x1C17E00
	768 Compare X0, 0
	769 JumpIfEqual {792}
	770 Move X8, [X0]
	771 Move X1, [X25]
	772 Move X22, X0
	773 NotImplemented "Instruction LDRH not yet implemented."
	774 Compare X9, 0
	775 JumpIfEqual {782}
	776 Move X10, [X8+176]
	777 Add X10, X10, 8
	778 NotImplemented "Instruction LDUR not yet implemented."
	779 NotImplemented "Instruction CMP not yet implemented."
	780 Subtract X9, X9, 1
	781 Add X10, X10, 16
	782 Move X0, X22
	783 Move W2, W31
	784 Call 0x1C5D788
	785 NotImplemented "Instruction LDRSW not yet implemented."
	786 Add X8, X8, X9
	787 Add X0, X8, 312
	788 Move X8, [X0]
	789 Move X1, [X0+8]
	790 Move X0, X22
	791 NotImplemented "Instruction BLR not yet implemented."
	792 Compare X24, 0
	793 JumpIfNotEqual {1803}
	794 NotImplemented "Instruction CMP not yet implemented."
	795 Compare W19, 0
	796 JumpIfNotEqual {1452}
	797 Compare X21, 0
	798 JumpIfEqual {1787}
	799 Move X8, [X21]
	800 Move X0, X21
	801 Move X9, [X8+904]
	802 Move X1, [X8+912]
	803 NotImplemented "Instruction BLR not yet implemented."
	804 Move X21, X0
	805 Compare X0, 0
	806 JumpIfEqual {1809}
	807 Move X19, 0xF04000
	808 Move X20, 0xF31000
	809 Move X19, [X19+3608]
	810 Move X20, [X20+3264]
	811 Move X22, [X31+24]
	812 Move X8, [X21]
	813 Move X1, [X19]
	814 NotImplemented "Instruction LDRH not yet implemented."
	815 Compare X9, 0
	816 JumpIfEqual {823}
	817 Move X10, [X8+176]
	818 Add X10, X10, 8
	819 NotImplemented "Instruction LDUR not yet implemented."
	820 NotImplemented "Instruction CMP not yet implemented."
	821 Subtract X9, X9, 1
	822 Add X10, X10, 16
	823 Move X0, X21
	824 Move W2, W31
	825 Call 0x1C5D788
	826 NotImplemented "Instruction LDRSW not yet implemented."
	827 Add X8, X8, X9
	828 Add X0, X8, 312
	829 Move X8, [X0]
	830 Move X1, [X0+8]
	831 Move X0, X21
	832 NotImplemented "Instruction BLR not yet implemented."
	833 Move TEMP, X0
	834 And TEMP, TEMP, 1
	835 Compare TEMP, 1
	836 JumpIfNotEqual {875}
	837 Move X8, [X21]
	838 Move X1, [X19]
	839 NotImplemented "Instruction LDRH not yet implemented."
	840 Compare X9, 0
	841 JumpIfEqual {848}
	842 Move X10, [X8+176]
	843 Add X10, X10, 8
	844 NotImplemented "Instruction LDUR not yet implemented."
	845 NotImplemented "Instruction CMP not yet implemented."
	846 Subtract X9, X9, 1
	847 Add X10, X10, 16
	848 Move W2, 1
	849 Move X0, X21
	850 Call 0x1C5D788
	851 Move W9, [X10]
	852 Add W9, W9, 1
	853 Add X8, X8, W9
	854 Add X0, X8, 312
	855 Move X8, [X0]
	856 Move X1, [X0+8]
	857 Move X0, X21
	858 NotImplemented "Instruction BLR not yet implemented."
	859 Move X8, X0
	860 Compare X0, 0
	861 JumpIfEqual {871}
	862 Move X9, [X8]
	863 Move X1, [X20]
	864 Move W11, [X9+304]
	865 Move W10, [X1+304]
	866 NotImplemented "Instruction CMP not yet implemented."
	867 Move X9, [X9+200]
	868 Add X9, X9, X10
	869 NotImplemented "Instruction LDUR not yet implemented."
	870 NotImplemented "Instruction CMP not yet implemented."
	871 Move X0, X22
	872 Move X1, X8
	873 Move X2, X31
	874 Call PKCS12.AddCertificate, X0, X1, X2
	875 Move X22, X31
	876 Move W19, 22
	877 Move X1, [X25]
	878 Move X0, X21
	879 Call 0x1C17E00
	880 Compare X0, 0
	881 JumpIfEqual {904}
	882 Move X8, [X0]
	883 Move X1, [X25]
	884 Move X21, X0
	885 NotImplemented "Instruction LDRH not yet implemented."
	886 Compare X9, 0
	887 JumpIfEqual {894}
	888 Move X10, [X8+176]
	889 Add X10, X10, 8
	890 NotImplemented "Instruction LDUR not yet implemented."
	891 NotImplemented "Instruction CMP not yet implemented."
	892 Subtract X9, X9, 1
	893 Add X10, X10, 16
	894 Move X0, X21
	895 Move W2, W31
	896 Call 0x1C5D788
	897 NotImplemented "Instruction LDRSW not yet implemented."
	898 Add X8, X8, X9
	899 Add X0, X8, 312
	900 Move X8, [X0]
	901 Move X1, [X0+8]
	902 Move X0, X21
	903 NotImplemented "Instruction BLR not yet implemented."
	904 Compare X22, 0
	905 JumpIfNotEqual {1797}
	906 NotImplemented "Instruction CMP not yet implemented."
	907 Compare W19, 0
	908 JumpIfNotEqual {1452}
	909 Move X24, [X31+24]
	910 Move X0, [X24+56]
	911 Compare X0, 0
	912 JumpIfEqual {1787}
	913 Move X8, [X0]
	914 Move X9, [X8+664]
	915 Move X1, [X8+672]
	916 NotImplemented "Instruction BLR not yet implemented."
	917 Move X26, 0xF31000
	918 Move X26, [X26+2968]
	919 NotImplemented "Instruction CMP not yet implemented."
	920 Move X0, [X26]
	921 Call 0x1C17F10
	922 Move X1, X31
	923 Move X21, X0
	924 Call Object..ctor, X0
	925 Move W8, 48
	926 Move [X21+16], W8
	927 Move [X21+24], X31
	928 Move X0, [X24+56]
	929 Compare X0, 0
	930 JumpIfEqual {1787}
	931 Move X8, [X0]
	932 Move X9, [X8+904]
	933 Move X1, [X8+912]
	934 NotImplemented "Instruction BLR not yet implemented."
	935 Move X22, X0
	936 Compare X0, 0
	937 JumpIfEqual {1810}
	938 Move X19, 0xF04000
	939 Move X20, 0xF31000
	940 Move X24, 0xF31000
	941 Move X19, [X19+3608]
	942 Move X20, [X20+3592]
	943 Move X24, [X24+3664]
	944 Move X8, [X22]
	945 Move X1, [X19]
	946 NotImplemented "Instruction LDRH not yet implemented."
	947 Compare X9, 0
	948 JumpIfEqual {955}
	949 Move X10, [X8+176]
	950 Add X10, X10, 8
	951 NotImplemented "Instruction LDUR not yet implemented."
	952 NotImplemented "Instruction CMP not yet implemented."
	953 Subtract X9, X9, 1
	954 Add X10, X10, 16
	955 Move X0, X22
	956 Move W2, W31
	957 Call 0x1C5D788
	958 NotImplemented "Instruction LDRSW not yet implemented."
	959 Add X8, X8, X9
	960 Add X0, X8, 312
	961 Move X8, [X0]
	962 Move X1, [X0+8]
	963 Move X0, X22
	964 NotImplemented "Instruction BLR not yet implemented."
	965 Move TEMP, X0
	966 And TEMP, TEMP, 1
	967 Compare TEMP, 1
	968 JumpIfNotEqual {1016}
	969 Move X8, [X22]
	970 Move X1, [X19]
	971 NotImplemented "Instruction LDRH not yet implemented."
	972 Compare X9, 0
	973 JumpIfEqual {980}
	974 Move X10, [X8+176]
	975 Add X10, X10, 8
	976 NotImplemented "Instruction LDUR not yet implemented."
	977 NotImplemented "Instruction CMP not yet implemented."
	978 Subtract X9, X9, 1
	979 Add X10, X10, 16
	980 Move W2, 1
	981 Move X0, X22
	982 Call 0x1C5D788
	983 Move W9, [X10]
	984 Add W9, W9, 1
	985 Add X8, X8, W9
	986 Add X0, X8, 312
	987 Move X8, [X0]
	988 Move X1, [X0+8]
	989 Move X0, X22
	990 NotImplemented "Instruction BLR not yet implemented."
	991 Move X23, X0
	992 Compare X0, 0
	993 JumpIfEqual {1790}
	994 Move X8, [X23]
	995 Move X1, [X20]
	996 Move W10, [X8+304]
	997 Move W9, [X1+304]
	998 NotImplemented "Instruction CMP not yet implemented."
	999 Move X8, [X8+200]
	1000 Add X8, X8, X9
	1001 NotImplemented "Instruction LDUR not yet implemented."
	1002 NotImplemented "Instruction CMP not yet implemented."
	1003 Move X0, [X23+16]
	1004 Compare X0, 0
	1005 JumpIfEqual {1791}
	1006 Move X1, [X24]
	1007 Move X2, X31
	1008 Call String.Equals, X0, X1
	1009 Move TEMP, X0
	1010 And TEMP, TEMP, 1
	1011 Compare TEMP, 1
	1012 JumpIfNotEqual {944}
	1013 Move X1, [X23+24]
	1014 Move X0, X21
	1015 Call ASN1.Add, X0, X1
	1016 Move X24, X31
	1017 Move W19, 26
	1018 Move X1, [X25]
	1019 Move X0, X22
	1020 Call 0x1C17E00
	1021 Compare X0, 0
	1022 JumpIfEqual {1045}
	1023 Move X8, [X0]
	1024 Move X1, [X25]
	1025 Move X22, X0
	1026 NotImplemented "Instruction LDRH not yet implemented."
	1027 Compare X9, 0
	1028 JumpIfEqual {1035}
	1029 Move X10, [X8+176]
	1030 Add X10, X10, 8
	1031 NotImplemented "Instruction LDUR not yet implemented."
	1032 NotImplemented "Instruction CMP not yet implemented."
	1033 Subtract X9, X9, 1
	1034 Add X10, X10, 16
	1035 Move X0, X22
	1036 Move W2, W31
	1037 Call 0x1C5D788
	1038 NotImplemented "Instruction LDRSW not yet implemented."
	1039 Add X8, X8, X9
	1040 Add X0, X8, 312
	1041 Move X8, [X0]
	1042 Move X1, [X0+8]
	1043 Move X0, X22
	1044 NotImplemented "Instruction BLR not yet implemented."
	1045 Compare X24, 0
	1046 JumpIfNotEqual {1803}
	1047 NotImplemented "Instruction CMP not yet implemented."
	1048 Compare W19, 0
	1049 JumpIfNotEqual {1452}
	1050 Compare X21, 0
	1051 JumpIfEqual {1787}
	1052 Move X26, 0xF30000
	1053 Move X0, [X21+32]
	1054 Move X26, [X26+2968]
	1055 Move X24, [X31+24]
	1056 Compare X0, 0
	1057 JumpIfEqual {1077}
	1058 Move X8, [X0]
	1059 Move X9, [X8+664]
	1060 Move X1, [X8+672]
	1061 NotImplemented "Instruction BLR not yet implemented."
	1062 NotImplemented "Instruction CMP not yet implemented."
	1063 Move X8, 0xF30000
	1064 Move X8, [X8+3768]
	1065 Move X0, X24
	1066 Move X1, X21
	1067 Move X2, [X8]
	1068 Call PKCS12.EncryptedContentInfo, X0, X1, X2
	1069 Compare X0, 0
	1070 JumpIfEqual {1787}
	1071 Call ContentInfo.GetASN1, X0
	1072 Move X1, X0
	1073 Move X0, [X31+8]
	1074 Compare X0, 0
	1075 JumpIfEqual {1787}
	1076 Call ASN1.Add, X0, X1
	1077 Move X0, [X24+56]
	1078 Compare X0, 0
	1079 JumpIfEqual {1787}
	1080 Move X8, [X0]
	1081 Move X9, [X8+664]
	1082 Move X1, [X8+672]
	1083 NotImplemented "Instruction BLR not yet implemented."
	1084 NotImplemented "Instruction CMP not yet implemented."
	1085 Move X0, [X26]
	1086 Call 0x1C17F10
	1087 Move X1, X31
	1088 Move X21, X0
	1089 Call Object..ctor, X0
	1090 Move W8, 48
	1091 Move [X21+16], W8
	1092 Move [X21+24], X31
	1093 Move X0, [X24+56]
	1094 Compare X0, 0
	1095 JumpIfEqual {1787}
	1096 Move X8, [X0]
	1097 Move X9, [X8+904]
	1098 Move X1, [X8+912]
	1099 NotImplemented "Instruction BLR not yet implemented."
	1100 Move X22, X0
	1101 Compare X0, 0
	1102 JumpIfEqual {1812}
	1103 Move X19, 0xF03000
	1104 Move X20, 0xF30000
	1105 Move X24, 0xF30000
	1106 Move X25, 0xF30000
	1107 Move X19, [X19+3608]
	1108 Move X20, [X20+3592]
	1109 Move X24, [X24+3608]
	1110 Move X25, [X25+3632]
	1111 Move X8, [X22]
	1112 Move X1, [X19]
	1113 NotImplemented "Instruction LDRH not yet implemented."
	1114 Compare X9, 0
	1115 JumpIfEqual {1122}
	1116 Move X10, [X8+176]
	1117 Add X10, X10, 8
	1118 NotImplemented "Instruction LDUR not yet implemented."
	1119 NotImplemented "Instruction CMP not yet implemented."
	1120 Subtract X9, X9, 1
	1121 Add X10, X10, 16
	1122 Move X0, X22
	1123 Move W2, W31
	1124 Call 0x1C5D788
	1125 NotImplemented "Instruction LDRSW not yet implemented."
	1126 Add X8, X8, X9
	1127 Add X0, X8, 312
	1128 Move X8, [X0]
	1129 Move X1, [X0+8]
	1130 Move X0, X22
	1131 NotImplemented "Instruction BLR not yet implemented."
	1132 Move TEMP, X0
	1133 And TEMP, TEMP, 1
	1134 Compare TEMP, 1
	1135 JumpIfNotEqual {1193}
	1136 Move X8, [X22]
	1137 Move X1, [X19]
	1138 NotImplemented "Instruction LDRH not yet implemented."
	1139 Compare X9, 0
	1140 JumpIfEqual {1147}
	1141 Move X10, [X8+176]
	1142 Add X10, X10, 8
	1143 NotImplemented "Instruction LDUR not yet implemented."
	1144 NotImplemented "Instruction CMP not yet implemented."
	1145 Subtract X9, X9, 1
	1146 Add X10, X10, 16
	1147 Move W2, 1
	1148 Move X0, X22
	1149 Call 0x1C5D788
	1150 Move W9, [X10]
	1151 Add W9, W9, 1
	1152 Add X8, X8, W9
	1153 Add X0, X8, 312
	1154 Move X8, [X0]
	1155 Move X1, [X0+8]
	1156 Move X0, X22
	1157 NotImplemented "Instruction BLR not yet implemented."
	1158 Move X23, X0
	1159 Compare X0, 0
	1160 JumpIfEqual {1792}
	1161 Move X8, [X23]
	1162 Move X1, [X20]
	1163 Move W10, [X8+304]
	1164 Move W9, [X1+304]
	1165 NotImplemented "Instruction CMP not yet implemented."
	1166 Move X8, [X8+200]
	1167 Add X8, X8, X9
	1168 NotImplemented "Instruction LDUR not yet implemented."
	1169 NotImplemented "Instruction CMP not yet implemented."
	1170 Move X0, [X23+16]
	1171 Compare X0, 0
	1172 JumpIfEqual {1793}
	1173 Move X1, [X24]
	1174 Move X2, X31
	1175 Call String.Equals, X0, X1
	1176 Move TEMP, X0
	1177 And TEMP, TEMP, 1
	1178 Compare TEMP, 1
	1179 JumpIfEqual {1190}
	1180 Move X0, [X23+16]
	1181 Compare X0, 0
	1182 JumpIfEqual {1796}
	1183 Move X1, [X25]
	1184 Move X2, X31
	1185 Call String.Equals, X0, X1
	1186 Move TEMP, X0
	1187 And TEMP, TEMP, 1
	1188 Compare TEMP, 1
	1189 JumpIfNotEqual {1111}
	1190 Move X1, [X23+24]
	1191 Move X0, X21
	1192 Call ASN1.Add, X0, X1
	1193 Move X24, X31
	1194 Move W19, 31
	1195 Move X25, 0xF03000
	1196 Move X25, [X25+3584]
	1197 Move X0, X22
	1198 Move X1, [X25]
	1199 Call 0x1C17E00
	1200 Compare X0, 0
	1201 JumpIfEqual {1224}
	1202 Move X8, [X0]
	1203 Move X1, [X25]
	1204 Move X22, X0
	1205 NotImplemented "Instruction LDRH not yet implemented."
	1206 Compare X9, 0
	1207 JumpIfEqual {1214}
	1208 Move X10, [X8+176]
	1209 Add X10, X10, 8
	1210 NotImplemented "Instruction LDUR not yet implemented."
	1211 NotImplemented "Instruction CMP not yet implemented."
	1212 Subtract X9, X9, 1
	1213 Add X10, X10, 16
	1214 Move X0, X22
	1215 Move W2, W31
	1216 Call 0x1C5D788
	1217 NotImplemented "Instruction LDRSW not yet implemented."
	1218 Add X8, X8, X9
	1219 Add X0, X8, 312
	1220 Move X8, [X0]
	1221 Move X1, [X0+8]
	1222 Move X0, X22
	1223 NotImplemented "Instruction BLR not yet implemented."
	1224 Compare X24, 0
	1225 JumpIfNotEqual {1803}
	1226 NotImplemented "Instruction CMP not yet implemented."
	1227 Compare W19, 0
	1228 JumpIfNotEqual {1452}
	1229 Compare X21, 0
	1230 JumpIfEqual {1787}
	1231 Move X26, 0xF30000
	1232 Move X0, [X21+32]
	1233 Move X26, [X26+2968]
	1234 Move X24, [X31+24]
	1235 Compare X0, 0
	1236 JumpIfEqual {1286}
	1237 Move X8, [X0]
	1238 Move X9, [X8+664]
	1239 Move X1, [X8+672]
	1240 NotImplemented "Instruction BLR not yet implemented."
	1241 NotImplemented "Instruction CMP not yet implemented."
	1242 Move X0, [X26]
	1243 Call 0x1C17F10
	1244 Move X1, X31
	1245 Move X22, X0
	1246 Call Object..ctor, X0
	1247 Move W8, 160
	1248 Move [X22+24], X31
	1249 Move [X22+16], W8
	1250 Move X8, [X21]
	1251 Move X0, X21
	1252 Move X9, [X8+376]
	1253 Move X1, [X8+384]
	1254 NotImplemented "Instruction BLR not yet implemented."
	1255 Move X8, [X26]
	1256 Move X21, X0
	1257 Move X0, X8
	1258 Call 0x1C17F10
	1259 Move X1, X31
	1260 Move X23, X0
	1261 Call Object..ctor, X0
	1262 Move W8, 4
	1263 Move X0, X22
	1264 Move X1, X23
	1265 Move [X23+16], W8
	1266 Move [X23+24], X21
	1267 Call ASN1.Add, X0, X1
	1268 Move X8, 0xF30000
	1269 Move X8, [X8+3184]
	1270 Move X0, [X8]
	1271 Call 0x1C17F10
	1272 Move X8, 0xF30000
	1273 Move X8, [X8+3456]
	1274 Move X21, X0
	1275 Move X19, [X8]
	1276 Call ContentInfo..ctor, X0
	1277 Move X0, X21
	1278 Move [X21+16], X19
	1279 Move [X21+24], X22
	1280 Call ContentInfo.GetASN1, X0
	1281 Move X1, X0
	1282 Move X0, [X31+8]
	1283 Compare X0, 0
	1284 JumpIfEqual {1787}
	1285 Call ASN1.Add, X0, X1
	1286 Move X0, [X24+56]
	1287 Compare X0, 0
	1288 JumpIfEqual {1787}
	1289 Move X8, [X0]
	1290 Move X9, [X8+664]
	1291 Move X1, [X8+672]
	1292 NotImplemented "Instruction BLR not yet implemented."
	1293 NotImplemented "Instruction CMP not yet implemented."
	1294 Move X0, [X26]
	1295 Call 0x1C17F10
	1296 Move X1, X31
	1297 Move X21, X0
	1298 Call Object..ctor, X0
	1299 Move W8, 48
	1300 Move [X21+16], W8
	1301 Move [X21+24], X31
	1302 Move X0, [X24+56]
	1303 Compare X0, 0
	1304 JumpIfEqual {1787}
	1305 Move X8, [X0]
	1306 Move X9, [X8+904]
	1307 Move X1, [X8+912]
	1308 NotImplemented "Instruction BLR not yet implemented."
	1309 Move X22, X0
	1310 Compare X0, 0
	1311 JumpIfEqual {1813}
	1312 Move X19, 0xF03000
	1313 Move X20, 0xF30000
	1314 Move X24, 0xF30000
	1315 Move X19, [X19+3608]
	1316 Move X20, [X20+3592]
	1317 Move X24, [X24+3624]
	1318 Move X8, [X22]
	1319 Move X1, [X19]
	1320 NotImplemented "Instruction LDRH not yet implemented."
	1321 Compare X9, 0
	1322 JumpIfEqual {1329}
	1323 Move X10, [X8+176]
	1324 Add X10, X10, 8
	1325 NotImplemented "Instruction LDUR not yet implemented."
	1326 NotImplemented "Instruction CMP not yet implemented."
	1327 Subtract X9, X9, 1
	1328 Add X10, X10, 16
	1329 Move X0, X22
	1330 Move W2, W31
	1331 Call 0x1C5D788
	1332 NotImplemented "Instruction LDRSW not yet implemented."
	1333 Add X8, X8, X9
	1334 Add X0, X8, 312
	1335 Move X8, [X0]
	1336 Move X1, [X0+8]
	1337 Move X0, X22
	1338 NotImplemented "Instruction BLR not yet implemented."
	1339 Move TEMP, X0
	1340 And TEMP, TEMP, 1
	1341 Compare TEMP, 1
	1342 JumpIfNotEqual {1390}
	1343 Move X8, [X22]
	1344 Move X1, [X19]
	1345 NotImplemented "Instruction LDRH not yet implemented."
	1346 Compare X9, 0
	1347 JumpIfEqual {1354}
	1348 Move X10, [X8+176]
	1349 Add X10, X10, 8
	1350 NotImplemented "Instruction LDUR not yet implemented."
	1351 NotImplemented "Instruction CMP not yet implemented."
	1352 Subtract X9, X9, 1
	1353 Add X10, X10, 16
	1354 Move W2, 1
	1355 Move X0, X22
	1356 Call 0x1C5D788
	1357 Move W9, [X10]
	1358 Add W9, W9, 1
	1359 Add X8, X8, W9
	1360 Add X0, X8, 312
	1361 Move X8, [X0]
	1362 Move X1, [X0+8]
	1363 Move X0, X22
	1364 NotImplemented "Instruction BLR not yet implemented."
	1365 Move X23, X0
	1366 Compare X0, 0
	1367 JumpIfEqual {1794}
	1368 Move X8, [X23]
	1369 Move X1, [X20]
	1370 Move W10, [X8+304]
	1371 Move W9, [X1+304]
	1372 NotImplemented "Instruction CMP not yet implemented."
	1373 Move X8, [X8+200]
	1374 Add X8, X8, X9
	1375 NotImplemented "Instruction LDUR not yet implemented."
	1376 NotImplemented "Instruction CMP not yet implemented."
	1377 Move X0, [X23+16]
	1378 Compare X0, 0
	1379 JumpIfEqual {1795}
	1380 Move X1, [X24]
	1381 Move X2, X31
	1382 Call String.Equals, X0, X1
	1383 Move TEMP, X0
	1384 And TEMP, TEMP, 1
	1385 Compare TEMP, 1
	1386 JumpIfNotEqual {1318}
	1387 Move X1, [X23+24]
	1388 Move X0, X21
	1389 Call ASN1.Add, X0, X1
	1390 Move X24, X31
	1391 Move W19, 35
	1392 Move X1, [X25]
	1393 Move X0, X22
	1394 Call 0x1C17E00
	1395 Compare X0, 0
	1396 JumpIfEqual {1419}
	1397 Move X8, [X0]
	1398 Move X1, [X25]
	1399 Move X22, X0
	1400 NotImplemented "Instruction LDRH not yet implemented."
	1401 Compare X9, 0
	1402 JumpIfEqual {1409}
	1403 Move X10, [X8+176]
	1404 Add X10, X10, 8
	1405 NotImplemented "Instruction LDUR not yet implemented."
	1406 NotImplemented "Instruction CMP not yet implemented."
	1407 Subtract X9, X9, 1
	1408 Add X10, X10, 16
	1409 Move X0, X22
	1410 Move W2, W31
	1411 Call 0x1C5D788
	1412 NotImplemented "Instruction LDRSW not yet implemented."
	1413 Add X8, X8, X9
	1414 Add X0, X8, 312
	1415 Move X8, [X0]
	1416 Move X1, [X0+8]
	1417 Move X0, X22
	1418 NotImplemented "Instruction BLR not yet implemented."
	1419 Compare X24, 0
	1420 JumpIfNotEqual {1803}
	1421 NotImplemented "Instruction CMP not yet implemented."
	1422 Compare W19, 0
	1423 JumpIfNotEqual {1452}
	1424 Compare X21, 0
	1425 JumpIfEqual {1787}
	1426 Move X26, 0xF30000
	1427 Move X0, [X21+32]
	1428 Move X26, [X26+2968]
	1429 Move X24, [X31+24]
	1430 Compare X0, 0
	1431 JumpIfEqual {1466}
	1432 Move X8, [X0]
	1433 Move X9, [X8+664]
	1434 Move X1, [X8+672]
	1435 NotImplemented "Instruction BLR not yet implemented."
	1436 NotImplemented "Instruction CMP not yet implemented."
	1437 Move X8, 0xF30000
	1438 Move X8, [X8+3768]
	1439 Move X0, X24
	1440 Move X1, X21
	1441 Move X2, [X8]
	1442 Call PKCS12.EncryptedContentInfo, X0, X1, X2
	1443 Compare X0, 0
	1444 JumpIfEqual {1787}
	1445 Call ContentInfo.GetASN1, X0
	1446 Move X19, [X31+8]
	1447 Compare X19, 0
	1448 JumpIfEqual {1787}
	1449 Move X1, X0
	1450 Move X0, X19
	1451 Call ASN1.Add, X0, X1
	1452 Move X20, [X31+112]
	1453 Move X19, [X31+120]
	1454 Move X22, [X31+96]
	1455 Move X21, [X31+104]
	1456 Move X24, [X31+80]
	1457 Move X23, [X31+88]
	1458 Move X26, [X31+64]
	1459 Move X25, [X31+72]
	1460 Move X28, [X31+48]
	1461 Move X27, [X31+56]
	1462 Move X29, [X31+32]
	1463 Move X30, [X31+40]
	1464 Add X31, X31, 128
	1465 Return X0
	1466 Move X19, [X31+8]
	1467 Compare X19, 0
	1468 JumpIfEqual {1787}
	1469 Move X8, [X19]
	1470 Move X0, X19
	1471 Move X9, [X8+376]
	1472 Move X1, [X8+384]
	1473 NotImplemented "Instruction BLR not yet implemented."
	1474 Move X8, [X26]
	1475 Move X20, X0
	1476 Move X0, X8
	1477 Call 0x1C17F10
	1478 Move X1, X31
	1479 Move X21, X0
	1480 Call Object..ctor, X0
	1481 Move W8, 4
	1482 Move [X21+16], W8
	1483 Move [X21+24], X20
	1484 Move X0, [X26]
	1485 Call 0x1C17F10
	1486 Move X1, X31
	1487 Move X20, X0
	1488 Call Object..ctor, X0
	1489 Move W8, 160
	1490 Move X0, X20
	1491 Move X1, X21
	1492 Move [X20+16], W8
	1493 Move [X20+24], X31
	1494 Call ASN1.Add, X0, X1
	1495 Move X8, 0xF30000
	1496 Move X8, [X8+3184]
	1497 Move X0, [X8]
	1498 Call 0x1C17F10
	1499 Move X8, 0xF30000
	1500 Move X8, [X8+3456]
	1501 Move X21, X0
	1502 Move X19, [X8]
	1503 Call ContentInfo..ctor, X0
	1504 Move [X21+16], X19
	1505 Move [X21+24], X20
	1506 Move X0, [X26]
	1507 Call 0x1C17F10
	1508 Move X1, X31
	1509 Move X20, X0
	1510 Call Object..ctor, X0
	1511 Move W8, 48
	1512 Move [X20+16], W8
	1513 Move [X20+24], X31
	1514 Move X8, [X24+16]
	1515 Compare X8, 0
	1516 JumpIfEqual {1621}
	1517 Move X8, 0xF03000
	1518 Move X8, [X8+1560]
	1519 Move W1, 20
	1520 Move X0, [X8]
	1521 Call 0x1C17D6C
	1522 Move X8, [X24+64]
	1523 Move X22, X0
	1524 Compare X8, 0
	1525 JumpIfNotEqual {1532}
	1526 Move X0, X31
	1527 Call RandomNumberGenerator.Create
	1528 Move X8, X0
	1529 Move [X24+64], X0
	1530 Compare X0, 0
	1531 JumpIfEqual {1787}
	1532 Move X9, [X8]
	1533 Move X0, X8
	1534 Move X1, X22
	1535 Move X10, [X9+408]
	1536 Move X2, [X9+416]
	1537 NotImplemented "Instruction BLR not yet implemented."
	1538 Move X0, [X21+24]
	1539 Compare X0, 0
	1540 JumpIfEqual {1787}
	1541 Move X27, X24
	1542 Move X24, [X24+16]
	1543 Move W23, [X27+52]
	1544 Move W1, W31
	1545 Call ASN1.get_Item, X0, X1
	1546 Compare X0, 0
	1547 JumpIfEqual {1787}
	1548 Call ASN1.get_Value, X0
	1549 Move X1, X24
	1550 Move X2, X22
	1551 Move W3, W23
	1552 Move X4, X0
	1553 Call PKCS12.MAC, X0, X1, X2, X3, X4
	1554 Move X8, [X26]
	1555 Move X23, X0
	1556 Move X0, X8
	1557 Call 0x1C17F10
	1558 Move X1, X31
	1559 Move X24, X0
	1560 Call Object..ctor, X0
	1561 Move W19, 48
	1562 Move [X24+24], X31
	1563 Move [X24+16], W19
	1564 Move X8, 0xF30000
	1565 Move X8, [X8+3336]
	1566 Move X0, [X8]
	1567 Call ASN1Convert.FromOid, X0
	1568 Move X1, X0
	1569 Move X0, X24
	1570 Call ASN1.Add, X0, X1
	1571 Move X0, [X26]
	1572 Call 0x1C17F10
	1573 Move X1, X31
	1574 Move X25, X0
	1575 Call Object..ctor, X0
	1576 Move W8, 5
	1577 Move X0, X24
	1578 Move X1, X25
	1579 Move [X25+16], W8
	1580 Move [X25+24], X31
	1581 Call ASN1.Add, X0, X1
	1582 Move X0, [X26]
	1583 Call 0x1C17F10
	1584 Move X1, X31
	1585 Move X25, X0
	1586 Call Object..ctor, X0
	1587 Move X0, X25
	1588 Move X1, X24
	1589 Move [X25+16], W19
	1590 Move [X25+24], X31
	1591 Call ASN1.Add, X0, X1
	1592 Move X0, [X26]
	1593 Call 0x1C17F10
	1594 Move X1, X31
	1595 Move X24, X0
	1596 Call Object..ctor, X0
	1597 Move W19, 4
	1598 Move X0, X25
	1599 Move X1, X24
	1600 Move [X24+16], W19
	1601 Move [X24+24], X23
	1602 Call ASN1.Add, X0, X1
	1603 Move X0, X20
	1604 Move X1, X25
	1605 Call ASN1.Add, X0, X1
	1606 Move X0, [X26]
	1607 Call 0x1C17F10
	1608 Move X1, X31
	1609 Move X23, X0
	1610 Call Object..ctor, X0
	1611 Move X0, X20
	1612 Move X1, X23
	1613 Move [X23+16], W19
	1614 Move [X23+24], X22
	1615 Call ASN1.Add, X0, X1
	1616 Move W0, [X27+52]
	1617 Call ASN1Convert.FromInt32, X0
	1618 Move X1, X0
	1619 Move X0, X20
	1620 Call ASN1.Add, X0, X1
	1621 Move X8, 0xF03000
	1622 Move X8, [X8+1560]
	1623 Move W1, 1
	1624 Move X0, [X8]
	1625 Call 0x1C17D6C
	1626 Compare X0, 0
	1627 JumpIfEqual {1787}
	1628 Move W8, [X0+24]
	1629 Move X19, X0
	1630 Compare W8, 0
	1631 JumpIfEqual {1811}
	1632 Move W8, 3
	1633 Move [X19+32], W8
	1634 Move X0, [X26]
	1635 Call 0x1C17F10
	1636 Move X1, X31
	1637 Move X22, X0
	1638 Call Object..ctor, X0
	1639 Move W8, 2
	1640 Move [X22+16], W8
	1641 Move [X22+24], X19
	1642 Move X0, [X26]
	1643 Call 0x1C17F10
	1644 Move X1, X31
	1645 Move X19, X0
	1646 Call Object..ctor, X0
	1647 Move W8, 48
	1648 Move X0, X19
	1649 Move X1, X22
	1650 Move [X19+16], W8
	1651 Move [X19+24], X31
	1652 Call ASN1.Add, X0, X1
	1653 Move X0, X21
	1654 Call ContentInfo.GetASN1, X0
	1655 Move X1, X0
	1656 Move X0, X19
	1657 Call ASN1.Add, X0, X1
	1658 Move X0, [X20+32]
	1659 Compare X0, 0
	1660 JumpIfEqual {1669}
	1661 Move X8, [X0]
	1662 Move X9, [X8+664]
	1663 Move X1, [X8+672]
	1664 NotImplemented "Instruction BLR not yet implemented."
	1665 NotImplemented "Instruction CMP not yet implemented."
	1666 Move X0, X19
	1667 Move X1, X20
	1668 Call ASN1.Add, X0, X1
	1669 Move X8, [X19]
	1670 Move X0, X19
	1671 Move X20, [X31+112]
	1672 Move X19, [X31+120]
	1673 Move X22, [X31+96]
	1674 Move X21, [X31+104]
	1675 Move X2, [X8+376]
	1676 Move X1, [X8+384]
	1677 Move X24, [X31+80]
	1678 Move X23, [X31+88]
	1679 Move X26, [X31+64]
	1680 Move X25, [X31+72]
	1681 Move X28, [X31+48]
	1682 Move X27, [X31+56]
	1683 Move X29, [X31+32]
	1684 Move X30, [X31+40]
	1685 Add X31, X31, 128
	1686 CallNoReturn X2
	1687 Move X29, X31
	1688 Move X8, 0xF03000
	1689 Move X8, [X8+3584]
	1690 Move X1, [X8]
	1691 Move X0, X27
	1692 Call 0x1C17E00
	1693 Move X26, X0
	1694 Compare X0, 0
	1695 JumpIfEqual {1746}
	1696 Move X8, [X26]
	1697 Move X10, 0xF03000
	1698 NotImplemented "Instruction LDRH not yet implemented."
	1699 Move X10, [X10+3584]
	1700 Move X1, [X10]
	1701 Compare X9, 0
	1702 JumpIfEqual {1709}
	1703 Move X10, [X8+176]
	1704 Add X10, X10, 8
	1705 NotImplemented "Instruction LDUR not yet implemented."
	1706 NotImplemented "Instruction CMP not yet implemented."
	1707 Subtract X9, X9, 1
	1708 Add X10, X10, 16
	1709 Move X0, X26
	1710 Move W2, W31
	1711 Call 0x1C5D788
	1712 Move X28, X31
	1713 Move X8, 0xF03000
	1714 Move X8, [X8+3584]
	1715 Move X1, [X8]
	1716 Move X0, X27
	1717 Call 0x1C17E00
	1718 Move X25, X0
	1719 Compare X0, 0
	1720 JumpIfEqual {1762}
	1721 Move X8, [X25]
	1722 Move X10, 0xF03000
	1723 NotImplemented "Instruction LDRH not yet implemented."
	1724 Move X10, [X10+3584]
	1725 Move X1, [X10]
	1726 Compare X9, 0
	1727 JumpIfEqual {1734}
	1728 Move X10, [X8+176]
	1729 Add X10, X10, 8
	1730 NotImplemented "Instruction LDUR not yet implemented."
	1731 NotImplemented "Instruction CMP not yet implemented."
	1732 Subtract X9, X9, 1
	1733 Add X10, X10, 16
	1734 Move X0, X25
	1735 Move W2, W31
	1736 Call 0x1C5D788
	1737 Move X0, X22
	1738 Call 0x1C181E0
	1739 NotImplemented "Instruction LDRSW not yet implemented."
	1740 Add X8, X8, X9
	1741 Add X0, X8, 312
	1742 Move X8, [X0]
	1743 Move X1, [X0+8]
	1744 Move X0, X26
	1745 NotImplemented "Instruction BLR not yet implemented."
	1746 Compare X29, 0
	1747 JumpIfEqual {2093}
	1748 Move X0, X29
	1749 Call 0x1C17F18
	1750 Call 0x1C17F20
	1751 Call 0x1C17F20
	1752 Move X0, X29
	1753 Call 0x1C17F18
	1754 Call 0x1C17F20
	1755 NotImplemented "Instruction LDRSW not yet implemented."
	1756 Add X8, X8, X9
	1757 Add X0, X8, 312
	1758 Move X8, [X0]
	1759 Move X1, [X0+8]
	1760 Move X0, X25
	1761 NotImplemented "Instruction BLR not yet implemented."
	1762 Compare X28, 0
	1763 JumpIfEqual {2048}
	1764 Move X0, X28
	1765 Call 0x1C17F18
	1766 Move X0, X25
	1767 Call 0x1C181E0
	1768 Move X0, X8
	1769 Call 0x1C181E0
	1770 Call 0x1C17F20
	1771 Call 0x1C17F20
	1772 Call 0x1C17F20
	1773 Call 0x1C17F20
	1774 Call 0x1C17F20
	1775 Call 0x1C17F20
	1776 Move X0, X28
	1777 Call 0x1C17F18
	1778 Call 0x1C17F20
	1779 Move X0, X8
	1780 Call 0x1C181E0
	1781 Call 0x1C17F20
	1782 Move X0, X23
	1783 Call 0x1C181E0
	1784 Call 0x1C17F20
	1785 Move X0, X23
	1786 Call 0x1C181E0
	1787 Call 0x1C17F20
	1788 Move X0, X23
	1789 Call 0x1C181E0
	1790 Call 0x1C17F20
	1791 Call 0x1C17F20
	1792 Call 0x1C17F20
	1793 Call 0x1C17F20
	1794 Call 0x1C17F20
	1795 Call 0x1C17F20
	1796 Call 0x1C17F20
	1797 Move X0, X22
	1798 Call 0x1C17F18
	1799 Call 0x1C17F20
	1800 Call 0x1C17F20
	1801 Move X0, X26
	1802 Call 0x1C17F18
	1803 Move X0, X24
	1804 Call 0x1C17F18
	1805 Call 0x1C17F20
	1806 Move X0, X25
	1807 Call 0x1C17F18
	1808 Call 0x1C17F20
	1809 Call 0x1C17F20
	1810 Call 0x1C17F20
	1811 Call 0x1C17F28
	1812 Call 0x1C17F20
	1813 Call 0x1C17F20
	1814 Move X26, X1
	1815 Move X23, X0
	1816 Move X28, X1
	1817 Move X23, X0
	1818 Move X23, X0
	1819 NotImplemented "Instruction CMP not yet implemented."
	1820 Move X0, X23
	1821 Call 0x3EB2AD0
	1822 Move X24, [X0]
	1823 Call 0x3EB2AE0
	1824 Move X25, 0xF03000
	1825 Move X25, [X25+3584]
	1826 Move W19, W31
	1827 Move X24, X31
	1828 Move X23, X0
	1829 Move X8, 0xF03000
	1830 Move X8, [X8+3584]
	1831 Move X1, [X8]
	1832 Move X0, X22
	1833 Call 0x1C17E00
	1834 Move X19, X0
	1835 Compare X0, 0
	1836 JumpIfEqual {1860}
	1837 Move X8, [X19]
	1838 Move X10, 0xF03000
	1839 NotImplemented "Instruction LDRH not yet implemented."
	1840 Move X10, [X10+3584]
	1841 Move X1, [X10]
	1842 Compare X9, 0
	1843 JumpIfEqual {1850}
	1844 Move X10, [X8+176]
	1845 Add X10, X10, 8
	1846 NotImplemented "Instruction LDUR not yet implemented."
	1847 NotImplemented "Instruction CMP not yet implemented."
	1848 Subtract X9, X9, 1
	1849 Add X10, X10, 16
	1850 Move X0, X19
	1851 Move W2, W31
	1852 Call 0x1C5D788
	1853 NotImplemented "Instruction LDRSW not yet implemented."
	1854 Add X8, X8, X9
	1855 Add X0, X8, 312
	1856 Move X8, [X0]
	1857 Move X1, [X0+8]
	1858 Move X0, X19
	1859 NotImplemented "Instruction BLR not yet implemented."
	1860 Compare X24, 0
	1861 JumpIfEqual {2177}
	1862 Move X0, X24
	1863 Call 0x1C17F18
	1864 Move X23, X0
	1865 NotImplemented "Instruction CMP not yet implemented."
	1866 Move X0, X23
	1867 Call 0x3EB2AD0
	1868 Move X24, [X0]
	1869 Call 0x3EB2AE0
	1870 Move W19, W31
	1871 Move X24, X31
	1872 Move X23, X0
	1873 Move X8, 0xF03000
	1874 Move X8, [X8+3584]
	1875 Move X1, [X8]
	1876 Move X0, X22
	1877 Call 0x1C17E00
	1878 Move X19, X0
	1879 Compare X0, 0
	1880 JumpIfEqual {1904}
	1881 Move X8, [X19]
	1882 Move X10, 0xF03000
	1883 NotImplemented "Instruction LDRH not yet implemented."
	1884 Move X10, [X10+3584]
	1885 Move X1, [X10]
	1886 Compare X9, 0
	1887 JumpIfEqual {1894}
	1888 Move X10, [X8+176]
	1889 Add X10, X10, 8
	1890 NotImplemented "Instruction LDUR not yet implemented."
	1891 NotImplemented "Instruction CMP not yet implemented."
	1892 Subtract X9, X9, 1
	1893 Add X10, X10, 16
	1894 Move X0, X19
	1895 Move W2, W31
	1896 Call 0x1C5D788
	1897 NotImplemented "Instruction LDRSW not yet implemented."
	1898 Add X8, X8, X9
	1899 Add X0, X8, 312
	1900 Move X8, [X0]
	1901 Move X1, [X0+8]
	1902 Move X0, X19
	1903 NotImplemented "Instruction BLR not yet implemented."
	1904 Compare X24, 0
	1905 JumpIfEqual {2177}
	1906 Move X0, X24
	1907 Call 0x1C17F18
	1908 Move X23, X0
	1909 NotImplemented "Instruction CMP not yet implemented."
	1910 Move X0, X23
	1911 Call 0x3EB2AD0
	1912 Move X24, [X0]
	1913 Call 0x3EB2AE0
	1914 Move X25, 0xF03000
	1915 Move X25, [X25+3584]
	1916 Move W19, W31
	1917 Move X24, X31
	1918 Move X23, X0
	1919 Move X8, 0xF03000
	1920 Move X8, [X8+3584]
	1921 Move X1, [X8]
	1922 Move X0, X22
	1923 Call 0x1C17E00
	1924 Move X19, X0
	1925 Compare X0, 0
	1926 JumpIfEqual {1950}
	1927 Move X8, [X19]
	1928 Move X10, 0xF03000
	1929 NotImplemented "Instruction LDRH not yet implemented."
	1930 Move X10, [X10+3584]
	1931 Move X1, [X10]
	1932 Compare X9, 0
	1933 JumpIfEqual {1940}
	1934 Move X10, [X8+176]
	1935 Add X10, X10, 8
	1936 NotImplemented "Instruction LDUR not yet implemented."
	1937 NotImplemented "Instruction CMP not yet implemented."
	1938 Subtract X9, X9, 1
	1939 Add X10, X10, 16
	1940 Move X0, X19
	1941 Move W2, W31
	1942 Call 0x1C5D788
	1943 NotImplemented "Instruction LDRSW not yet implemented."
	1944 Add X8, X8, X9
	1945 Add X0, X8, 312
	1946 Move X8, [X0]
	1947 Move X1, [X0+8]
	1948 Move X0, X19
	1949 NotImplemented "Instruction BLR not yet implemented."
	1950 Compare X24, 0
	1951 JumpIfEqual {2177}
	1952 Move X0, X24
	1953 Call 0x1C17F18
	1954 Move X23, X0
	1955 NotImplemented "Instruction CMP not yet implemented."
	1956 Move X0, X23
	1957 Call 0x3EB2AD0
	1958 Move X22, [X0]
	1959 Call 0x3EB2AE0
	1960 Move X25, 0xF03000
	1961 Move X25, [X25+3584]
	1962 Move W19, W31
	1963 Move X22, X31
	1964 Move X23, X0
	1965 Move X8, 0xF03000
	1966 Move X8, [X8+3584]
	1967 Move X1, [X8]
	1968 Move X0, X21
	1969 Call 0x1C17E00
	1970 Move X19, X0
	1971 Compare X0, 0
	1972 JumpIfEqual {1996}
	1973 Move X8, [X19]
	1974 Move X10, 0xF02000
	1975 NotImplemented "Instruction LDRH not yet implemented."
	1976 Move X10, [X10+3584]
	1977 Move X1, [X10]
	1978 Compare X9, 0
	1979 JumpIfEqual {1986}
	1980 Move X10, [X8+176]
	1981 Add X10, X10, 8
	1982 NotImplemented "Instruction LDUR not yet implemented."
	1983 NotImplemented "Instruction CMP not yet implemented."
	1984 Subtract X9, X9, 1
	1985 Add X10, X10, 16
	1986 Move X0, X19
	1987 Move W2, W31
	1988 Call 0x1C5D788
	1989 NotImplemented "Instruction LDRSW not yet implemented."
	1990 Add X8, X8, X9
	1991 Add X0, X8, 312
	1992 Move X8, [X0]
	1993 Move X1, [X0+8]
	1994 Move X0, X19
	1995 NotImplemented "Instruction BLR not yet implemented."
	1996 Compare X22, 0
	1997 JumpIfEqual {2177}
	1998 Move X0, X22
	1999 Call 0x1C17F18
	2000 Move X23, X0
	2001 NotImplemented "Instruction CMP not yet implemented."
	2002 Move X0, X23
	2003 Call 0x3EB2AD0
	2004 Move X24, [X0]
	2005 Call 0x3EB2AE0
	2006 Move X25, 0xF02000
	2007 Move X25, [X25+3584]
	2008 Move W19, W31
	2009 Move X24, X31
	2010 Move X23, X0
	2011 Move X8, 0xF02000
	2012 Move X8, [X8+3584]
	2013 Move X1, [X8]
	2014 Move X0, X22
	2015 Call 0x1C17E00
	2016 Move X19, X0
	2017 Compare X0, 0
	2018 JumpIfEqual {2042}
	2019 Move X8, [X19]
	2020 Move X10, 0xF02000
	2021 NotImplemented "Instruction LDRH not yet implemented."
	2022 Move X10, [X10+3584]
	2023 Move X1, [X10]
	2024 Compare X9, 0
	2025 JumpIfEqual {2032}
	2026 Move X10, [X8+176]
	2027 Add X10, X10, 8
	2028 NotImplemented "Instruction LDUR not yet implemented."
	2029 NotImplemented "Instruction CMP not yet implemented."
	2030 Subtract X9, X9, 1
	2031 Add X10, X10, 16
	2032 Move X0, X19
	2033 Move W2, W31
	2034 Call 0x1C5D788
	2035 NotImplemented "Instruction LDRSW not yet implemented."
	2036 Add X8, X8, X9
	2037 Add X0, X8, 312
	2038 Move X8, [X0]
	2039 Move X1, [X0+8]
	2040 Move X0, X19
	2041 NotImplemented "Instruction BLR not yet implemented."
	2042 Compare X24, 0
	2043 JumpIfEqual {2177}
	2044 Move X0, X24
	2045 Call 0x1C17F18
	2046 Move X26, X1
	2047 Move X23, X0
	2048 NotImplemented "Instruction CMP not yet implemented."
	2049 Move X0, X23
	2050 Call 0x3EB2AD0
	2051 Move X25, [X0]
	2052 Call 0x3EB2AE0
	2053 Move W26, W31
	2054 Move X25, X31
	2055 Move X23, X0
	2056 Move X8, 0xF02000
	2057 Move X8, [X8+3584]
	2058 Move X1, [X8]
	2059 Move X0, X24
	2060 Call 0x1C17E00
	2061 Move X19, X0
	2062 Compare X0, 0
	2063 JumpIfEqual {2087}
	2064 Move X8, [X19]
	2065 Move X10, 0xF02000
	2066 NotImplemented "Instruction LDRH not yet implemented."
	2067 Move X10, [X10+3584]
	2068 Move X1, [X10]
	2069 Compare X9, 0
	2070 JumpIfEqual {2077}
	2071 Move X10, [X8+176]
	2072 Add X10, X10, 8
	2073 NotImplemented "Instruction LDUR not yet implemented."
	2074 NotImplemented "Instruction CMP not yet implemented."
	2075 Subtract X9, X9, 1
	2076 Add X10, X10, 16
	2077 Move X0, X19
	2078 Move W2, W31
	2079 Call 0x1C5D788
	2080 NotImplemented "Instruction LDRSW not yet implemented."
	2081 Add X8, X8, X9
	2082 Add X0, X8, 312
	2083 Move X8, [X0]
	2084 Move X1, [X0+8]
	2085 Move X0, X19
	2086 NotImplemented "Instruction BLR not yet implemented."
	2087 Compare X25, 0
	2088 JumpIfEqual {2177}
	2089 Move X0, X25
	2090 Call 0x1C17F18
	2091 Move X28, X1
	2092 Move X23, X0
	2093 NotImplemented "Instruction CMP not yet implemented."
	2094 Move X0, X23
	2095 Call 0x3EB2AD0
	2096 Move X26, [X0]
	2097 Call 0x3EB2AE0
	2098 Move W28, W31
	2099 Move X26, X31
	2100 Move X23, X0
	2101 Move X8, 0xF02000
	2102 Move X8, [X8+3584]
	2103 Move X1, [X8]
	2104 Move X0, X25
	2105 Call 0x1C17E00
	2106 Move X19, X0
	2107 Compare X0, 0
	2108 JumpIfEqual {2132}
	2109 Move X8, [X19]
	2110 Move X10, 0xF02000
	2111 NotImplemented "Instruction LDRH not yet implemented."
	2112 Move X10, [X10+3584]
	2113 Move X1, [X10]
	2114 Compare X9, 0
	2115 JumpIfEqual {2122}
	2116 Move X10, [X8+176]
	2117 Add X10, X10, 8
	2118 NotImplemented "Instruction LDUR not yet implemented."
	2119 NotImplemented "Instruction CMP not yet implemented."
	2120 Subtract X9, X9, 1
	2121 Add X10, X10, 16
	2122 Move X0, X19
	2123 Move W2, W31
	2124 Call 0x1C5D788
	2125 NotImplemented "Instruction LDRSW not yet implemented."
	2126 Add X8, X8, X9
	2127 Add X0, X8, 312
	2128 Move X8, [X0]
	2129 Move X1, [X0+8]
	2130 Move X0, X19
	2131 NotImplemented "Instruction BLR not yet implemented."
	2132 Compare X26, 0
	2133 JumpIfEqual {2177}
	2134 Move X0, X26
	2135 Call 0x1C17F18
	2136 Move X23, X0
	2137 NotImplemented "Instruction CMP not yet implemented."
	2138 Move X0, X23
	2139 Call 0x3EB2AD0
	2140 Move X22, [X0]
	2141 Call 0x3EB2AE0
	2142 Move X22, X31
	2143 Move X23, X0
	2144 Move X8, 0xF02000
	2145 Move X8, [X8+3584]
	2146 Move X1, [X8]
	2147 Move X0, X21
	2148 Call 0x1C17E00
	2149 Move X19, X0
	2150 Compare X0, 0
	2151 JumpIfEqual {2175}
	2152 Move X8, [X19]
	2153 Move X10, 0xF02000
	2154 NotImplemented "Instruction LDRH not yet implemented."
	2155 Move X10, [X10+3584]
	2156 Move X1, [X10]
	2157 Compare X9, 0
	2158 JumpIfEqual {2165}
	2159 Move X10, [X8+176]
	2160 Add X10, X10, 8
	2161 NotImplemented "Instruction LDUR not yet implemented."
	2162 NotImplemented "Instruction CMP not yet implemented."
	2163 Subtract X9, X9, 1
	2164 Add X10, X10, 16
	2165 Move X0, X19
	2166 Move W2, W31
	2167 Call 0x1C5D788
	2168 NotImplemented "Instruction LDRSW not yet implemented."
	2169 Add X8, X8, X9
	2170 Add X0, X8, 312
	2171 Move X8, [X0]
	2172 Move X1, [X0+8]
	2173 Move X0, X19
	2174 NotImplemented "Instruction BLR not yet implemented."
	2175 Compare X22, 0
	2176 JumpIfNotEqual {2179}
	2177 Move X0, X23
	2178 Call 0x1D2D690
	2179 Move X0, X22
	2180 Call 0x1C17F18
	2181 Call 0x1991590

Method: Mono.Security.PKCS7/ContentInfo EncryptedContentInfo(Mono.Security.ASN1 safeBags, System.String algorithmOid)

Disassembly:
	0x031F23C8 MOV W27, W31
	0x031F23CC MOV W25, W31
	0x031F23D0 MOV X1, X24
	0x031F23D4 MOV W2, W27
	0x031F23D8 MOV X3, X23
	0x031F23DC BL 0x31F1F8C
	0x031F23E0 LDR W8, [X24 + 0x18]
	0x031F23E4 ADD W25, W25, 0x1
	0x031F23E8 ADD W27, W27, 0x40
	0x031F23EC ADD W9, W8, 0x3F
	0x031F23F0 CMP W8, 0x0
	0x031F23F4 CSEL W8, W9, W8, LT
	0x031F23F8 CMP W25, W8, ASR
	0x031F23FC B.NE 0x31F23D0
	0x031F2400 CMP W28, W29
	0x031F2404 B.NE 0x31F241C
	0x031F2408 CBZ X22, 0x31F2478
	0x031F240C LDR W8, [X22 + 0x18]
	0x031F2410 LDR W3, [X31 + 0x8]
	0x031F2414 SUB W4, W8, W3
	0x031F2418 B 0x31F2430
	0x031F241C CBZ X26, 0x31F2478
	0x031F2420 LDR W9, [X31 + 0xC]
	0x031F2424 LDR W4, [X26 + 0x18]
	0x031F2428 SUB W8, W28, 0x1
	0x031F242C MUL W3, W8, W9
	0x031F2430 MOV X0, X26
	0x031F2434 MOV W1, W31
	0x031F2438 MOV X2, X22
	0x031F243C MOV X5, X31
	0x031F2440 BL 0x33A8A9C
	0x031F2444 ADD W28, W28, 0x1
	0x031F2448 CMP W28, W29
	0x031F244C B.LE 0x31F22C4
	0x031F2450 MOV X0, X22
	0x031F2454 LDP X20, X19, [X31 + 0x60]
	0x031F2458 LDP X22, X21, [X31 + 0x50]
	0x031F245C LDP X24, X23, [X31 + 0x40]
	0x031F2460 LDP X26, X25, [X31 + 0x30]
	0x031F2464 LDP X28, X27, [X31 + 0x20]
	0x031F2468 LDP X29, X30, [X31 + 0x10]
	0x031F246C ADD X31, X31, 0x70
	0x031F2470 RET
	0x031F2474 BL 0x1C16F28
	0x031F2478 BL 0x1C16F20
	0x031F247C STR X30, [X31 - 0x40]!
	0x031F2480 STP X24, X23, [X31 + 0x10]
	0x031F2484 STP X22, X21, [X31 + 0x20]
	0x031F2488 STP X20, X19, [X31 + 0x30]
	0x031F248C ADRP X24, 0x11EA000
	0x031F2490 ADRP X22, 0xF01000
	0x031F2494 ADRP X19, 0xF2E000
	0x031F2498 ADRP X20, 0xF2E000
	0x031F249C ADRP X23, 0xF2E000
	0x031F24A0 ADRP X21, 0xF2E000
	0x031F24A4 LDRB W8, [X24 + 0x193]
	0x031F24A8 LDR X22, [X22 + 0x618]
	0x031F24AC LDR X19, [X19 + 0xF90]
	0x031F24B0 LDR X20, [X20 + 0xDE8]
	0x031F24B4 LDR X23, [X23 + 0xF98]
	0x031F24B8 LDR X21, [X21 + 0xFA0]
	0x031F24BC TBNZ X8, 0x0, 0x31F2504
	0x031F24C0 ADRP X0, 0xF01000
	0x031F24C4 LDR X0, [X0 + 0x618]
	0x031F24C8 BL 0x1C16CF4
	0x031F24CC ADRP X0, 0xF2E000
	0x031F24D0 LDR X0, [X0 + 0xDE8]
	0x031F24D4 BL 0x1C16CF4
	0x031F24D8 ADRP X0, 0xF2E000
	0x031F24DC LDR X0, [X0 + 0xFA0]
	0x031F24E0 BL 0x1C16CF4
	0x031F24E4 ADRP X0, 0xF2E000
	0x031F24E8 LDR X0, [X0 + 0xF90]
	0x031F24EC BL 0x1C16CF4
	0x031F24F0 ADRP X0, 0xF2E000
	0x031F24F4 LDR X0, [X0 + 0xF98]
	0x031F24F8 BL 0x1C16CF4
	0x031F24FC MOVZ W8, 0x1
	0x031F2500 STRB W8, [X24 + 0x193]
	0x031F2504 LDR X0, [X22]
	0x031F2508 MOVZ W1, 0x40
	0x031F250C BL 0x1C16D6C
	0x031F2510 LDR X1, [X19]
	0x031F2514 MOV X2, X31
	0x031F2518 MOV X19, X0
	0x031F251C BL 0x32C5BD8
	0x031F2520 LDR X8, [X20]
	0x031F2524 MOVZ W1, 0x40
	0x031F2528 LDR X8, [X8 + 0xB8]
	0x031F252C STR X19, [X8]
	0x031F2530 LDR X0, [X22]
	0x031F2534 BL 0x1C16D6C
	0x031F2538 LDR X1, [X23]
	0x031F253C MOV X2, X31
	0x031F2540 MOV X19, X0
	0x031F2544 BL 0x32C5BD8
	0x031F2548 LDR X8, [X20]
	0x031F254C MOVZ W1, 0x40
	0x031F2550 LDR X8, [X8 + 0xB8]
	0x031F2554 STR X19, [X8 + 0x8]
	0x031F2558 LDR X0, [X22]
	0x031F255C BL 0x1C16D6C
	0x031F2560 LDR X1, [X21]
	0x031F2564 MOV X2, X31
	0x031F2568 MOV X19, X0
	0x031F256C BL 0x32C5BD8
	0x031F2570 LDR X8, [X20]
	0x031F2574 LDP X22, X21, [X31 + 0x20]
	0x031F2578 LDP X24, X23, [X31 + 0x10]
	0x031F257C LDR X8, [X8 + 0xB8]
	0x031F2580 STR X19, [X8 + 0x10]
	0x031F2584 LDP X20, X19, [X31 + 0x30]
	0x031F2588 LDR X30, [X31], #0x40
	0x031F258C RET
	0x031F2590 STP X29, X30, [X31 - 0x60]!
	0x031F2594 STP X28, X27, [X31 + 0x10]
	0x031F2598 STP X26, X25, [X31 + 0x20]
	0x031F259C STP X24, X23, [X31 + 0x30]
	0x031F25A0 STP X22, X21, [X31 + 0x40]
	0x031F25A4 STP X20, X19, [X31 + 0x50]
	0x031F25A8 ADRP X22, 0x11EA000
	0x031F25AC LDRB W8, [X22 + 0x196]
	0x031F25B0 MOV W19, W2
	0x031F25B4 MOV X20, X1
	0x031F25B8 MOV X21, X0
	0x031F25BC TBNZ X8, 0x0, 0x31F2700
	0x031F25C0 ADRP X0, 0xF0A000
	0x031F25C4 LDR X0, [X0 + 0x8D8]
	0x031F25C8 BL 0x1C16CF4
	0x031F25CC ADRP X0, 0xF01000
	0x031F25D0 LDR X0, [X0 + 0x8F0]
	0x031F25D4 BL 0x1C16CF4
	0x031F25D8 ADRP X0, 0xF2E000
	0x031F25DC LDR X0, [X0 + 0xFA8]
	0x031F25E0 BL 0x1C16CF4
	0x031F25E4 ADRP X0, 0xF2E000
	0x031F25E8 LDR X0, [X0 + 0xCF8]
	0x031F25EC BL 0x1C16CF4
	0x031F25F0 ADRP X0, 0xF2E000
	0x031F25F4 LDR X0, [X0 + 0xFB0]
	0x031F25F8 BL 0x1C16CF4
	0x031F25FC ADRP X0, 0xF2E000
	0x031F2600 LDR X0, [X0 + 0xFB8]
	0x031F2604 BL 0x1C16CF4
	0x031F2608 ADRP X0, 0xF01000
	0x031F260C LDR X0, [X0 + 0xDD8]
	0x031F2610 BL 0x1C16CF4
	0x031F2614 ADRP X0, 0xF2E000
	0x031F2618 LDR X0, [X0 + 0xFC0]
	0x031F261C BL 0x1C16CF4
	0x031F2620 ADRP X0, 0xF2E000
	0x031F2624 LDR X0, [X0 + 0xFC8]
	0x031F2628 BL 0x1C16CF4
	0x031F262C ADRP X0, 0xF2E000
	0x031F2630 LDR X0, [X0 + 0xFD0]
	0x031F2634 BL 0x1C16CF4
	0x031F2638 ADRP X0, 0xF2E000
	0x031F263C LDR X0, [X0 + 0xFD8]
	0x031F2640 BL 0x1C16CF4
	0x031F2644 ADRP X0, 0xF2E000
	0x031F2648 LDR X0, [X0 + 0xFE0]
	0x031F264C BL 0x1C16CF4
	0x031F2650 ADRP X0, 0xF2E000
	0x031F2654 LDR X0, [X0 + 0xFE8]
	0x031F2658 BL 0x1C16CF4
	0x031F265C ADRP X0, 0xF01000
	0x031F2660 LDR X0, [X0 + 0x838]
	0x031F2664 BL 0x1C16CF4
	0x031F2668 ADRP X0, 0xF2E000
	0x031F266C LDR X0, [X0 + 0xFF0]
	0x031F2670 BL 0x1C16CF4
	0x031F2674 ADRP X0, 0xF2E000
	0x031F2678 LDR X0, [X0 + 0xFF8]
	0x031F267C BL 0x1C16CF4
	0x031F2680 ADRP X0, 0xF2F000
	0x031F2684 LDR X0, [X0]
	0x031F2688 BL 0x1C16CF4
	0x031F268C ADRP X0, 0xF2F000
	0x031F2690 LDR X0, [X0 + 0x8]
	0x031F2694 BL 0x1C16CF4
	0x031F2698 ADRP X0, 0xF2F000
	0x031F269C LDR X0, [X0 + 0x10]
	0x031F26A0 BL 0x1C16CF4
	0x031F26A4 ADRP X0, 0xF0C000
	0x031F26A8 LDR X0, [X0 + 0xCD8]
	0x031F26AC BL 0x1C16CF4
	0x031F26B0 ADRP X0, 0xF2F000
	0x031F26B4 LDR X0, [X0 + 0x18]

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X22, 0x11EB000
	014 Move X23, 0xF02000
	015 Move W8, [X22+391]
	016 Move X23, [X23+1560]
	017 Move X19, X2
	018 Move X21, X1
	019 Move X20, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {41}
	024 Move X0, 0xF2F000
	025 Move X0, [X0+2968]
	026 Call 0x1C17CF4
	027 Move X0, 0xF02000
	028 Move X0, [X0+1560]
	029 Call 0x1C17CF4
	030 Move X0, 0xF2F000
	031 Move X0, [X0+3184]
	032 Call 0x1C17CF4
	033 Move X0, 0xF2F000
	034 Move X0, [X0+3448]
	035 Call 0x1C17CF4
	036 Move X0, 0xF2F000
	037 Move X0, [X0+3456]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X22+391], W8
	041 Move X0, [X23]
	042 Move W1, 8
	043 Call 0x1C17D6C
	044 Move X8, [X20+64]
	045 Move X22, X0
	046 Compare X8, 0
	047 JumpIfNotEqual {54}
	048 Move X0, X31
	049 Call RandomNumberGenerator.Create
	050 Move X8, X0
	051 Move [X20+64], X0
	052 Compare X0, 0
	053 JumpIfEqual {209}
	054 Move X9, [X8]
	055 Move X26, 0xF2F000
	056 Move X0, X8
	057 Move X1, X22
	058 Move X10, [X9+408]
	059 Move X2, [X9+416]
	060 Move X26, [X26+2968]
	061 NotImplemented "Instruction BLR not yet implemented."
	062 Move X0, [X26]
	063 Call 0x1C17F10
	064 Move X1, X31
	065 Move X24, X0
	066 Call Object..ctor, X0
	067 Move W27, 48
	068 Move [X24+16], W27
	069 Move [X24+24], X31
	070 Move X0, [X26]
	071 Call 0x1C17F10
	072 Move X1, X31
	073 Move X23, X0
	074 Call Object..ctor, X0
	075 Move W8, 4
	076 Move X0, X24
	077 Move X1, X23
	078 Move [X23+16], W8
	079 Move [X23+24], X22
	080 Call ASN1.Add, X0, X1
	081 Move W0, [X20+52]
	082 Call ASN1Convert.FromInt32, X0
	083 Move X1, X0
	084 Move X0, X24
	085 Call ASN1.Add, X0, X1
	086 Move X0, [X26]
	087 Call 0x1C17F10
	088 Move X1, X31
	089 Move X23, X0
	090 Call Object..ctor, X0
	091 Move X0, X19
	092 Move [X23+16], W27
	093 Move [X23+24], X31
	094 Call ASN1Convert.FromOid, X0
	095 Move X1, X0
	096 Move X0, X23
	097 Call ASN1.Add, X0, X1
	098 Move X0, X23
	099 Move X1, X24
	100 Call ASN1.Add, X0, X1
	101 Compare X21, 0
	102 JumpIfEqual {209}
	103 Move X8, [X21]
	104 Move X25, 0xF2F000
	105 Move X29, 0xF2F000
	106 Move X28, 0xF2F000
	107 Move X9, [X8+376]
	108 Move X1, [X8+384]
	109 Move W24, [X20+52]
	110 Move X25, [X25+3456]
	111 Move X29, [X29+3184]
	112 Move X28, [X28+3448]
	113 Move X0, X21
	114 NotImplemented "Instruction BLR not yet implemented."
	115 Move X4, X0
	116 Move X0, X20
	117 Move X1, X19
	118 Move X2, X22
	119 Move W3, W24
	120 Call PKCS12.Encrypt, X0, X1, X2, X3, X4
	121 Move X8, [X26]
	122 Move X19, X0
	123 Move X0, X8
	124 Call 0x1C17F10
	125 Move X1, X31
	126 Move X20, X0
	127 Call Object..ctor, X0
	128 Move W8, 128
	129 Move [X20+16], W8
	130 Move [X20+24], X19
	131 Move X0, [X26]
	132 Call 0x1C17F10
	133 Move X1, X31
	134 Move X19, X0
	135 Call Object..ctor, X0
	136 Move [X19+16], W27
	137 Move [X19+24], X31
	138 Move X0, [X25]
	139 Call ASN1Convert.FromOid, X0
	140 Move X1, X0
	141 Move X0, X19
	142 Call ASN1.Add, X0, X1
	143 Move X0, X19
	144 Move X1, X23
	145 Call ASN1.Add, X0, X1
	146 Move X0, X19
	147 Move X1, X20
	148 Call ASN1.Add, X0, X1
	149 Move X8, 0xF02000
	150 Move X8, [X8+1560]
	151 Move W1, 1
	152 Move X0, [X8]
	153 Call 0x1C17D6C
	154 Move X8, [X26]
	155 Move X20, X0
	156 Move X0, X8
	157 Call 0x1C17F10
	158 Move X1, X31
	159 Move X21, X0
	160 Call Object..ctor, X0
	161 Move W8, 2
	162 Move [X21+16], W8
	163 Move [X21+24], X20
	164 Move X0, [X26]
	165 Call 0x1C17F10
	166 Move X1, X31
	167 Move X20, X0
	168 Call Object..ctor, X0
	169 Move X0, X20
	170 Move X1, X21
	171 Move [X20+16], W27
	172 Move [X20+24], X31
	173 Call ASN1.Add, X0, X1
	174 Move X0, X20
	175 Move X1, X19
	176 Call ASN1.Add, X0, X1
	177 Move X0, [X26]
	178 Call 0x1C17F10
	179 Move X1, X31
	180 Move X19, X0
	181 Call Object..ctor, X0
	182 Move W8, 160
	183 Move X0, X19
	184 Move X1, X20
	185 Move [X19+16], W8
	186 Move [X19+24], X31
	187 Call ASN1.Add, X0, X1
	188 Move X0, [X29]
	189 Call 0x1C17F10
	190 Move X21, [X28]
	191 Move X20, X0
	192 Call ContentInfo..ctor, X0
	193 Move [X20+16], X21
	194 Move [X20+24], X19
	195 Move X0, X20
	196 Move X20, [X31+80]
	197 Move X19, [X31+88]
	198 Move X22, [X31+64]
	199 Move X21, [X31+72]
	200 Move X24, [X31+48]
	201 Move X23, [X31+56]
	202 Move X26, [X31+32]
	203 Move X25, [X31+40]
	204 Move X28, [X31+16]
	205 Move X27, [X31+24]
	206 Move X29, [X31+96]
	207 Move X30, [X31+104]
	208 Return X0
	209 Call 0x1C17F20

Method: System.Void AddCertificate(Mono.Security.X509.X509Certificate cert)

Disassembly:
	0x031F23C0 CMP W8, 0x7F
	0x031F23C4 B.CC 0x31F2400

ISIL:
	001 Move X2, X31
	002 Call PKCS12.AddCertificate, X0, X1, X2
	003 Return 

Method: System.Void AddCertificate(Mono.Security.X509.X509Certificate cert, System.Collections.IDictionary attributes)

Disassembly:
	0x031F26B8 BL 0x1C16CF4
	0x031F26BC ADRP X0, 0xF2F000
	0x031F26C0 LDR X0, [X0 + 0x20]
	0x031F26C4 BL 0x1C16CF4
	0x031F26C8 ADRP X0, 0xF01000
	0x031F26CC LDR X0, [X0 + 0x988]
	0x031F26D0 BL 0x1C16CF4
	0x031F26D4 ADRP X0, 0xF2F000
	0x031F26D8 LDR X0, [X0 + 0x28]
	0x031F26DC BL 0x1C16CF4
	0x031F26E0 ADRP X0, 0xF2F000
	0x031F26E4 LDR X0, [X0 + 0x30]
	0x031F26E8 BL 0x1C16CF4
	0x031F26EC ADRP X0, 0xF2F000
	0x031F26F0 LDR X0, [X0 + 0x38]
	0x031F26F4 BL 0x1C16CF4
	0x031F26F8 MOVZ W8, 0x1
	0x031F26FC STRB W8, [X22 + 0x196]
	0x031F2700 CBZ X20, 0x31F2D50
	0x031F2704 ADRP X25, 0xF2E000
	0x031F2708 ADRP X26, 0xF0A000
	0x031F270C ADRP X27, 0xF2E000
	0x031F2710 ADRP X28, 0xF0C000
	0x031F2714 LDR X25, [X25 + 0xCF8]
	0x031F2718 LDR X26, [X26 + 0x8D8]
	0x031F271C LDR X27, [X27 + 0xFA8]
	0x031F2720 LDR X28, [X28 + 0xCD8]
	0x031F2724 MOV W22, W31
	0x031F2728 LDR X0, [X20 + 0x20]
	0x031F272C CBZ X0, 0x31F2740
	0x031F2730 LDR X8, [X0]
	0x031F2734 LDR X9, [X8 + 0x298]
	0x031F2738 LDR X1, [X8 + 0x2A0]
	0x031F273C BLR X9
	0x031F2740 CMP W22, W0
	0x031F2744 B.GE 0x31F2D34
	0x031F2748 MOV X0, X20
	0x031F274C MOV W1, W22
	0x031F2750 BL 0x31E8704
	0x031F2754 CBZ X0, 0x31F2D50
	0x031F2758 MOVZ W1, 0x1
	0x031F275C MOV X24, X0
	0x031F2760 BL 0x31E8704
	0x031F2764 CBZ X0, 0x31F2D2C
	0x031F2768 MOV X23, X0
	0x031F276C MOV X0, X24
	0x031F2770 MOV W1, W31
	0x031F2774 BL 0x31E8704
	0x031F2778 CBZ X0, 0x31F2D2C
	0x031F277C MOV X24, X0
	0x031F2780 LDR X0, [X25]
	0x031F2784 LDR W8, [X0 + 0xE0]
	0x031F2788 CBNZ W8, 0x31F2794
	0x031F278C BL 0x1C16DFC
	0x031F2790 LDR X0, [X25]
	0x031F2794 LDR X8, [X0 + 0xB8]
	0x031F2798 LDR X1, [X24 + 0x18]
	0x031F279C LDR X2, [X8]
	0x031F27A0 BL 0x31E7E38
	0x031F27A4 TBZ X0, 0x0, 0x31F27B8
	0x031F27A8 ADRP X8, 0xF2E000
	0x031F27AC LDR X8, [X8 + 0xFF0]
	0x031F27B0 CBNZ X21, 0x31F2B34
	0x031F27B4 B 0x31F2D50
	0x031F27B8 LDR X0, [X25]
	0x031F27BC LDR W8, [X0 + 0xE0]
	0x031F27C0 CBNZ W8, 0x31F27CC
	0x031F27C4 BL 0x1C16DFC
	0x031F27C8 LDR X0, [X25]
	0x031F27CC LDR X8, [X0 + 0xB8]
	0x031F27D0 LDR X1, [X24 + 0x18]
	0x031F27D4 LDR X2, [X8 + 0x8]
	0x031F27D8 BL 0x31E7E38
	0x031F27DC TBZ X0, 0x0, 0x31F27F0
	0x031F27E0 ADRP X8, 0xF2E000
	0x031F27E4 LDR X8, [X8 + 0xFE0]
	0x031F27E8 CBNZ X21, 0x31F2B34
	0x031F27EC B 0x31F2D50
	0x031F27F0 LDR X0, [X25]
	0x031F27F4 LDR W8, [X0 + 0xE0]
	0x031F27F8 CBNZ W8, 0x31F2804
	0x031F27FC BL 0x1C16DFC
	0x031F2800 LDR X0, [X25]
	0x031F2804 LDR X8, [X0 + 0xB8]
	0x031F2808 LDR X1, [X24 + 0x18]
	0x031F280C LDR X2, [X8 + 0x10]
	0x031F2810 BL 0x31E7E38
	0x031F2814 TBZ X0, 0x0, 0x31F2828
	0x031F2818 ADRP X8, 0xF2E000
	0x031F281C LDR X8, [X8 + 0xFE8]
	0x031F2820 CBNZ X21, 0x31F2B34
	0x031F2824 B 0x31F2D50
	0x031F2828 LDR X0, [X25]
	0x031F282C LDR W8, [X0 + 0xE0]
	0x031F2830 CBNZ W8, 0x31F283C
	0x031F2834 BL 0x1C16DFC
	0x031F2838 LDR X0, [X25]
	0x031F283C LDR X8, [X0 + 0xB8]
	0x031F2840 LDR X1, [X24 + 0x18]
	0x031F2844 LDR X2, [X8 + 0x18]
	0x031F2848 BL 0x31E7E38
	0x031F284C TBZ X0, 0x0, 0x31F2860
	0x031F2850 ADRP X8, 0xF2E000
	0x031F2854 LDR X8, [X8 + 0xFD8]
	0x031F2858 CBNZ X21, 0x31F2B34
	0x031F285C B 0x31F2D50
	0x031F2860 LDR X0, [X25]
	0x031F2864 LDR W8, [X0 + 0xE0]
	0x031F2868 CBNZ W8, 0x31F2874
	0x031F286C BL 0x1C16DFC
	0x031F2870 LDR X0, [X25]
	0x031F2874 LDR X8, [X0 + 0xB8]
	0x031F2878 LDR X1, [X24 + 0x18]
	0x031F287C LDR X2, [X8 + 0x20]
	0x031F2880 BL 0x31E7E38
	0x031F2884 TBZ X0, 0x0, 0x31F2898
	0x031F2888 ADRP X8, 0xF2E000
	0x031F288C LDR X8, [X8 + 0xFD0]
	0x031F2890 CBNZ X21, 0x31F2B34
	0x031F2894 B 0x31F2D50
	0x031F2898 LDR X0, [X25]
	0x031F289C LDR W8, [X0 + 0xE0]
	0x031F28A0 CBNZ W8, 0x31F28AC
	0x031F28A4 BL 0x1C16DFC
	0x031F28A8 LDR X0, [X25]
	0x031F28AC LDR X8, [X0 + 0xB8]
	0x031F28B0 LDR X1, [X24 + 0x18]
	0x031F28B4 LDR X2, [X8 + 0x28]
	0x031F28B8 BL 0x31E7E38
	0x031F28BC TBZ X0, 0x0, 0x31F28D0
	0x031F28C0 ADRP X8, 0xF2E000
	0x031F28C4 LDR X8, [X8 + 0xFF8]
	0x031F28C8 CBNZ X21, 0x31F2B34
	0x031F28CC B 0x31F2D50
	0x031F28D0 LDR X0, [X25]
	0x031F28D4 LDR W8, [X0 + 0xE0]
	0x031F28D8 CBNZ W8, 0x31F28E4
	0x031F28DC BL 0x1C16DFC
	0x031F28E0 LDR X0, [X25]
	0x031F28E4 LDR X8, [X0 + 0xB8]
	0x031F28E8 LDR X1, [X24 + 0x18]
	0x031F28EC LDR X2, [X8 + 0x30]
	0x031F28F0 BL 0x31E7E38
	0x031F28F4 TBZ X0, 0x0, 0x31F2908
	0x031F28F8 ADRP X8, 0xF2F000
	0x031F28FC LDR X8, [X8 + 0x10]
	0x031F2900 CBNZ X21, 0x31F2B34

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X22, 0x11EB000
	013 Move W8, [X22+392]
	014 Move X20, X2
	015 Move X21, X1
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {35}
	021 Move X0, 0xF2F000
	022 Move X0, [X0+3184]
	023 Call 0x1C17CF4
	024 Move X0, 0xF2F000
	025 Move X0, [X0+3592]
	026 Call 0x1C17CF4
	027 Move X0, 0xF2F000
	028 Move X0, [X0+3264]
	029 Call 0x1C17CF4
	030 Move X0, 0xF2F000
	031 Move X0, [X0+3664]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X22+392], W8
	035 Move X0, [X19+56]
	036 Compare X0, 0
	037 JumpIfEqual {176}
	038 Move X26, 0xF2F000
	039 Move X25, 0xF2F000
	040 Move X27, 0xF2F000
	041 Move X28, 0xF2F000
	042 Move X26, [X26+3592]
	043 Move X25, [X25+3664]
	044 Move X27, [X27+3184]
	045 Move X28, [X28+3264]
	046 Move W22, W31
	047 Move X8, [X0]
	048 Move X9, [X8+664]
	049 Move X1, [X8+672]
	050 NotImplemented "Instruction BLR not yet implemented."
	051 Move X23, [X19+56]
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Compare X23, 0
	054 JumpIfEqual {176}
	055 Move X8, [X23]
	056 Move X0, X23
	057 Move W1, W22
	058 Move X9, [X8+744]
	059 Move X2, [X8+752]
	060 NotImplemented "Instruction BLR not yet implemented."
	061 Compare X0, 0
	062 JumpIfEqual {176}
	063 Move X8, [X0]
	064 Move X1, [X26]
	065 Move X23, X0
	066 Move W10, [X8+304]
	067 Move W9, [X1+304]
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move X8, [X8+200]
	070 Add X8, X8, X9
	071 NotImplemented "Instruction LDUR not yet implemented."
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Move X0, [X23+16]
	074 Compare X0, 0
	075 JumpIfEqual {176}
	076 Move X1, [X25]
	077 Move X2, X31
	078 Call String.Equals, X0, X1
	079 Move TEMP, X0
	080 And TEMP, TEMP, 1
	081 Compare TEMP, 1
	082 JumpIfNotEqual {137}
	083 Move X0, [X23+24]
	084 Compare X0, 0
	085 JumpIfEqual {176}
	086 Move W1, 1
	087 Call ASN1.get_Item, X0, X1
	088 Compare X0, 0
	089 JumpIfEqual {176}
	090 Call ASN1.get_Value, X0
	091 Move X8, [X27]
	092 Move X24, X0
	093 Move X0, X8
	094 Call 0x1C17F10
	095 Move X1, X24
	096 Move X23, X0
	097 Call ContentInfo..ctor, X0, X1
	098 Compare X23, 0
	099 JumpIfEqual {176}
	100 Move X0, [X23+24]
	101 Compare X0, 0
	102 JumpIfEqual {176}
	103 Move W1, W31
	104 Call ASN1.get_Item, X0, X1
	105 Compare X0, 0
	106 JumpIfEqual {176}
	107 Call ASN1.get_Value, X0
	108 Move X8, [X28]
	109 Move X24, X0
	110 Move X0, X8
	111 Call 0x1C17F10
	112 Move X1, X24
	113 Move X23, X0
	114 Call X509Certificate..ctor, X0, X1
	115 Compare X21, 0
	116 JumpIfEqual {176}
	117 Move X8, [X21]
	118 Move X0, X21
	119 Move X9, [X8+504]
	120 Move X1, [X8+512]
	121 NotImplemented "Instruction BLR not yet implemented."
	122 Compare X23, 0
	123 JumpIfEqual {176}
	124 Move X8, [X23]
	125 Move X24, X0
	126 Move X0, X23
	127 Move X9, [X8+504]
	128 Move X1, [X8+512]
	129 NotImplemented "Instruction BLR not yet implemented."
	130 Move X1, X24
	131 Move X2, X0
	132 Call PKCS12.Compare, X0, X1, X2
	133 Move TEMP, X0
	134 And TEMP, TEMP, 1
	135 Compare TEMP, 1
	136 JumpIfEqual {164}
	137 Move X0, [X19+56]
	138 Add W22, W22, 1
	139 Compare X0, 0
	140 JumpIfNotEqual {47}
	141 Move X1, X21
	142 Move X2, X20
	143 Call PKCS12.CertificateSafeBag, X0, X1, X2
	144 Move X8, [X26]
	145 Move X21, X0
	146 Move X0, X8
	147 Call 0x1C17F10
	148 Move X22, [X25]
	149 Move X1, X31
	150 Move X20, X0
	151 Call Object..ctor, X0
	152 Move [X20+16], X22
	153 Move [X20+24], X21
	154 Compare X23, 0
	155 JumpIfEqual {176}
	156 Move X8, [X23]
	157 Move X0, X23
	158 Move X1, X20
	159 Move X9, [X8+776]
	160 Move X2, [X8+784]
	161 NotImplemented "Instruction BLR not yet implemented."
	162 Move W8, 1
	163 Move [X19+50], W8
	164 Move X20, [X31+80]
	165 Move X19, [X31+88]
	166 Move X22, [X31+64]
	167 Move X21, [X31+72]
	168 Move X24, [X31+48]
	169 Move X23, [X31+56]
	170 Move X26, [X31+32]
	171 Move X25, [X31+40]
	172 Move X28, [X31+16]
	173 Move X27, [X31+24]
	174 Move X30, [X31+96]
	175 Return 
	176 Call 0x1C17F20
	177 Move X0, X23
	178 Call 0x1C181E0

Method: System.Void RemoveCertificate(Mono.Security.X509.X509Certificate cert)

Disassembly:
	0x031F23B8 LDR W8, [X24 + 0x18]
	0x031F23BC ADD W8, W8, 0x3F

ISIL:
	001 Move X2, X31
	002 Call PKCS12.RemoveCertificate, X0, X1, X2
	003 Return 

Method: System.Void RemoveCertificate(Mono.Security.X509.X509Certificate cert, System.Collections.IDictionary attrs)

Disassembly:
	0x031F2904 B 0x31F2D50
	0x031F2908 LDR X0, [X25]
	0x031F290C LDR W8, [X0 + 0xE0]
	0x031F2910 CBNZ W8, 0x31F291C
	0x031F2914 BL 0x1C16DFC
	0x031F2918 LDR X0, [X25]
	0x031F291C LDR X8, [X0 + 0xB8]
	0x031F2920 LDR X1, [X24 + 0x18]
	0x031F2924 LDR X2, [X8 + 0x40]
	0x031F2928 BL 0x31E7E38
	0x031F292C TBZ X0, 0x0, 0x31F2940
	0x031F2930 ADRP X8, 0xF2E000
	0x031F2934 LDR X8, [X8 + 0xFB0]
	0x031F2938 CBNZ X21, 0x31F2B34
	0x031F293C B 0x31F2D50
	0x031F2940 LDR X0, [X25]
	0x031F2944 LDR W8, [X0 + 0xE0]
	0x031F2948 CBNZ W8, 0x31F2954
	0x031F294C BL 0x1C16DFC
	0x031F2950 LDR X0, [X25]
	0x031F2954 LDR X8, [X0 + 0xB8]
	0x031F2958 LDR X1, [X24 + 0x18]
	0x031F295C LDR X2, [X8 + 0x48]
	0x031F2960 BL 0x31E7E38
	0x031F2964 TBZ X0, 0x0, 0x31F2978
	0x031F2968 ADRP X8, 0xF2F000
	0x031F296C LDR X8, [X8 + 0x30]
	0x031F2970 CBNZ X21, 0x31F2B34
	0x031F2974 B 0x31F2D50
	0x031F2978 LDR X0, [X25]
	0x031F297C LDR W8, [X0 + 0xE0]
	0x031F2980 CBNZ W8, 0x31F298C
	0x031F2984 BL 0x1C16DFC
	0x031F2988 LDR X0, [X25]
	0x031F298C LDR X8, [X0 + 0xB8]
	0x031F2990 LDR X1, [X24 + 0x18]
	0x031F2994 LDR X2, [X8 + 0x50]
	0x031F2998 BL 0x31E7E38
	0x031F299C TBZ X0, 0x0, 0x31F29B0
	0x031F29A0 ADRP X8, 0xF2F000
	0x031F29A4 LDR X8, [X8 + 0x38]
	0x031F29A8 CBNZ X21, 0x31F2B34
	0x031F29AC B 0x31F2D50
	0x031F29B0 LDR X0, [X25]
	0x031F29B4 LDR W8, [X0 + 0xE0]
	0x031F29B8 CBNZ W8, 0x31F29C4
	0x031F29BC BL 0x1C16DFC
	0x031F29C0 LDR X0, [X25]
	0x031F29C4 LDR X8, [X0 + 0xB8]
	0x031F29C8 LDR X1, [X24 + 0x18]
	0x031F29CC LDR X2, [X8 + 0x58]
	0x031F29D0 BL 0x31E7E38
	0x031F29D4 TBZ X0, 0x0, 0x31F29E8
	0x031F29D8 ADRP X8, 0xF2F000
	0x031F29DC LDR X8, [X8]
	0x031F29E0 CBNZ X21, 0x31F2B34
	0x031F29E4 B 0x31F2D50
	0x031F29E8 LDR X0, [X25]
	0x031F29EC LDR W8, [X0 + 0xE0]
	0x031F29F0 CBNZ W8, 0x31F29FC
	0x031F29F4 BL 0x1C16DFC
	0x031F29F8 LDR X0, [X25]
	0x031F29FC LDR X8, [X0 + 0xB8]
	0x031F2A00 LDR X1, [X24 + 0x18]
	0x031F2A04 LDR X2, [X8 + 0x60]
	0x031F2A08 BL 0x31E7E38
	0x031F2A0C TBZ X0, 0x0, 0x31F2A20
	0x031F2A10 ADRP X8, 0xF2E000
	0x031F2A14 LDR X8, [X8 + 0xFC0]
	0x031F2A18 CBNZ X21, 0x31F2B34
	0x031F2A1C B 0x31F2D50
	0x031F2A20 LDR X0, [X25]
	0x031F2A24 LDR W8, [X0 + 0xE0]
	0x031F2A28 CBNZ W8, 0x31F2A34
	0x031F2A2C BL 0x1C16DFC
	0x031F2A30 LDR X0, [X25]
	0x031F2A34 LDR X8, [X0 + 0xB8]
	0x031F2A38 LDR X1, [X24 + 0x18]
	0x031F2A3C LDR X2, [X8 + 0x68]
	0x031F2A40 BL 0x31E7E38
	0x031F2A44 TBZ X0, 0x0, 0x31F2A58
	0x031F2A48 ADRP X8, 0xF2F000
	0x031F2A4C LDR X8, [X8 + 0x18]
	0x031F2A50 CBNZ X21, 0x31F2B34
	0x031F2A54 B 0x31F2D50
	0x031F2A58 LDR X0, [X25]
	0x031F2A5C LDR W8, [X0 + 0xE0]
	0x031F2A60 CBNZ W8, 0x31F2A6C
	0x031F2A64 BL 0x1C16DFC
	0x031F2A68 LDR X0, [X25]
	0x031F2A6C LDR X8, [X0 + 0xB8]
	0x031F2A70 LDR X1, [X24 + 0x18]
	0x031F2A74 LDR X2, [X8 + 0x70]
	0x031F2A78 BL 0x31E7E38
	0x031F2A7C TBZ X0, 0x0, 0x31F2A90
	0x031F2A80 ADRP X8, 0xF2F000
	0x031F2A84 LDR X8, [X8 + 0x28]
	0x031F2A88 CBNZ X21, 0x31F2B34
	0x031F2A8C B 0x31F2D50
	0x031F2A90 LDR X0, [X25]
	0x031F2A94 LDR W8, [X0 + 0xE0]
	0x031F2A98 CBNZ W8, 0x31F2AA4
	0x031F2A9C BL 0x1C16DFC
	0x031F2AA0 LDR X0, [X25]
	0x031F2AA4 LDR X8, [X0 + 0xB8]
	0x031F2AA8 LDR X1, [X24 + 0x18]
	0x031F2AAC LDR X2, [X8 + 0x78]
	0x031F2AB0 BL 0x31E7E38
	0x031F2AB4 TBZ X0, 0x0, 0x31F2AC8
	0x031F2AB8 ADRP X8, 0xF2F000
	0x031F2ABC LDR X8, [X8 + 0x20]
	0x031F2AC0 CBNZ X21, 0x31F2B34
	0x031F2AC4 B 0x31F2D50
	0x031F2AC8 LDR X0, [X25]
	0x031F2ACC LDR W8, [X0 + 0xE0]
	0x031F2AD0 CBNZ W8, 0x31F2ADC
	0x031F2AD4 BL 0x1C16DFC
	0x031F2AD8 LDR X0, [X25]
	0x031F2ADC LDR X8, [X0 + 0xB8]
	0x031F2AE0 LDR X1, [X24 + 0x18]
	0x031F2AE4 LDR X2, [X8 + 0x38]
	0x031F2AE8 BL 0x31E7E38
	0x031F2AEC CBZ X21, 0x31F2D50
	0x031F2AF0 ADRP X8, 0xF2E000
	0x031F2AF4 LDR X8, [X8 + 0xFC8]
	0x031F2AF8 TBNZ X0, 0x0, 0x31F2B34
	0x031F2AFC ADRP X8, 0xF2F000
	0x031F2B00 LDR X8, [X8 + 0x8]
	0x031F2B04 MOV X0, X21
	0x031F2B08 MOV X2, X31
	0x031F2B0C LDR X1, [X8]
	0x031F2B10 BL 0x32333E0
	0x031F2B14 MOV X0, X24
	0x031F2B18 BL 0x31E909C
	0x031F2B1C MOV X1, X0
	0x031F2B20 MOV X0, X21
	0x031F2B24 MOV X2, X31
	0x031F2B28 BL 0x32333E0
	0x031F2B2C ADRP X8, 0xF2E000
	0x031F2B30 LDR X8, [X8 + 0xFB8]
	0x031F2B34 LDR X1, [X8]
	0x031F2B38 MOV X0, X21
	0x031F2B3C MOV X2, X31
	0x031F2B40 BL 0x32333E0
	0x031F2B44 LDRB W8, [X23 + 0x10]
	0x031F2B48 CMP W8, 0x14
	0x031F2B4C B.EQ 0x31F2BD4
	0x031F2B50 CMP W8, 0x1E
	0x031F2B54 B.NE 0x31F2BE0
	0x031F2B58 ADRP X8, 0xF01000
	0x031F2B5C LDR X8, [X8 + 0x8F0]
	0x031F2B60 LDR X0, [X8]
	0x031F2B64 BL 0x1C16F10
	0x031F2B68 MOV X1, X31
	0x031F2B6C MOV X24, X0
	0x031F2B70 BL 0x3231AC4
	0x031F2B74 MOV X0, X23
	0x031F2B78 BL 0x31E7D00
	0x031F2B7C CBZ X0, 0x31F2D50
	0x031F2B80 MOVZ W29, 0x1
	0x031F2B84 LDR W8, [X0 + 0x18]
	0x031F2B88 CMP W29, W8
	0x031F2B8C B.GE 0x31F2C14
	0x031F2B90 MOV X0, X23
	0x031F2B94 BL 0x31E7D00
	0x031F2B98 CBZ X0, 0x31F2D50
	0x031F2B9C LDR W8, [X0 + 0x18]
	0x031F2BA0 CMP W29, W8
	0x031F2BA4 B.CS 0x31F2D54
	0x031F2BA8 CBZ X24, 0x31F2D50
	0x031F2BAC ADD X8, X0, W29, SXTW
	0x031F2BB0 LDRB W1, [X8 + 0x20]
	0x031F2BB4 MOV X0, X24
	0x031F2BB8 MOV X2, X31
	0x031F2BBC BL 0x3233D30
	0x031F2BC0 MOV X0, X23
	0x031F2BC4 ADD W29, W29, 0x2
	0x031F2BC8 BL 0x31E7D00
	0x031F2BCC CBNZ X0, 0x31F2B84
	0x031F2BD0 B 0x31F2D50
	0x031F2BD4 MOV X0, X31
	0x031F2BD8 BL 0x3242D80
	0x031F2BDC B 0x31F2BE8
	0x031F2BE0 MOV X0, X31
	0x031F2BE4 BL 0x3241948
	0x031F2BE8 MOV X24, X0
	0x031F2BEC MOV X0, X23
	0x031F2BF0 BL 0x31E7D00
	0x031F2BF4 CBZ X24, 0x31F2D50
	0x031F2BF8 LDR X8, [X24]
	0x031F2BFC MOV X1, X0
	0x031F2C00 MOV X0, X24
	0x031F2C04 LDR X9, [X8 + 0x378]
	0x031F2C08 LDR X2, [X8 + 0x380]
	0x031F2C0C BLR X9
	0x031F2C10 B 0x31F2C28
	0x031F2C14 CBZ X24, 0x31F2D50
	0x031F2C18 LDR X8, [X24]
	0x031F2C1C MOV X0, X24
	0x031F2C20 LDP X9, X1, [X8 + 0x168]
	0x031F2C24 BLR X9
	0x031F2C28 MOV X23, X0
	0x031F2C2C LDR X0, [X26]
	0x031F2C30 MOVZ W1, 0x9
	0x031F2C34 BL 0x1C16D6C
	0x031F2C38 LDR X1, [X27]
	0x031F2C3C MOV X2, X31
	0x031F2C40 MOV X24, X0
	0x031F2C44 BL 0x32C5BD8
	0x031F2C48 TBZ X19, 0x0, 0x31F2CDC
	0x031F2C4C CBZ X23, 0x31F2D50
	0x031F2C50 LDR W3, [X23 + 0x10]
	0x031F2C54 MOV X0, X23
	0x031F2C58 MOV X1, X24
	0x031F2C5C MOV W2, W31
	0x031F2C60 MOV X4, X31
	0x031F2C64 BL 0x322BE98
	0x031F2C68 CMP W0, 0x0
	0x031F2C6C B.GT 0x31F2CA8
	0x031F2C70 ADRP X8, 0xF01000
	0x031F2C74 LDR X8, [X8 + 0xDD8]
	0x031F2C78 MOV X0, X23
	0x031F2C7C MOV X2, X31
	0x031F2C80 LDR X1, [X8]
	0x031F2C84 BL 0x3226F64
	0x031F2C88 TBNZ X0, 0x0, 0x31F2CA8
	0x031F2C8C ADRP X8, 0xF01000
	0x031F2C90 LDR X8, [X8 + 0xDD8]
	0x031F2C94 MOV X0, X23
	0x031F2C98 MOV X2, X31
	0x031F2C9C LDR X1, [X8]
	0x031F2CA0 BL 0x3226588
	0x031F2CA4 TBZ X0, 0x0, 0x31F2CDC
	0x031F2CA8 ADRP X8, 0xF01000
	0x031F2CAC LDR X1, [X28]
	0x031F2CB0 LDR X8, [X8 + 0x988]
	0x031F2CB4 MOV X0, X23
	0x031F2CB8 MOV X3, X31
	0x031F2CBC LDR X2, [X8]
	0x031F2CC0 BL 0x32293BC
	0x031F2CC4 LDR X2, [X28]
	0x031F2CC8 MOV X1, X0
	0x031F2CCC MOV X3, X31
	0x031F2CD0 MOV X0, X2
	0x031F2CD4 BL 0x32274B8
	0x031F2CD8 MOV X23, X0
	0x031F2CDC CBZ X21, 0x31F2D50
	0x031F2CE0 MOV X0, X21
	0x031F2CE4 MOV X1, X23
	0x031F2CE8 MOV X2, X31
	0x031F2CEC BL 0x32333E0
	0x031F2CF0 LDR X0, [X20 + 0x20]
	0x031F2CF4 CBZ X0, 0x31F2D08
	0x031F2CF8 LDR X8, [X0]
	0x031F2CFC LDR X9, [X8 + 0x298]
	0x031F2D00 LDR X1, [X8 + 0x2A0]
	0x031F2D04 BLR X9
	0x031F2D08 SUB W8, W0, 0x1
	0x031F2D0C CMP W22, W8
	0x031F2D10 B.GE 0x31F2D2C
	0x031F2D14 ADRP X8, 0xF01000
	0x031F2D18 LDR X8, [X8 + 0x838]
	0x031F2D1C MOV X0, X21
	0x031F2D20 MOV X2, X31
	0x031F2D24 LDR X1, [X8]
	0x031F2D28 BL 0x32333E0
	0x031F2D2C ADD W22, W22, 0x1
	0x031F2D30 B 0x31F2728
	0x031F2D34 LDP X20, X19, [X31 + 0x50]
	0x031F2D38 LDP X22, X21, [X31 + 0x40]
	0x031F2D3C LDP X24, X23, [X31 + 0x30]
	0x031F2D40 LDP X26, X25, [X31 + 0x20]
	0x031F2D44 LDP X28, X27, [X31 + 0x10]
	0x031F2D48 LDP X29, X30, [X31], #0x60
	0x031F2D4C RET
	0x031F2D50 BL 0x1C16F20
	0x031F2D54 BL 0x1C16F28
	0x031F2D58 STP X30, X25, [X31 - 0x40]!
	0x031F2D5C STP X24, X23, [X31 + 0x10]
	0x031F2D60 STP X22, X21, [X31 + 0x20]
	0x031F2D64 STP X20, X19, [X31 + 0x30]
	0x031F2D68 ADRP X22, 0x11EA000
	0x031F2D6C ADRP X24, 0xF01000
	0x031F2D70 LDRB W8, [X22 + 0x195]
	0x031F2D74 LDR X24, [X24 + 0x8F0]
	0x031F2D78 MOV W19, W3
	0x031F2D7C MOV X20, X2
	0x031F2D80 MOV W23, W1
	0x031F2D84 MOV X21, X0
	0x031F2D88 TBNZ X8, 0x0, 0x31F2DAC
	0x031F2D8C ADRP X0, 0xF01000
	0x031F2D90 LDR X0, [X0 + 0x8F0]
	0x031F2D94 BL 0x1C16CF4
	0x031F2D98 ADRP X0, 0xF2E000
	0x031F2D9C LDR X0, [X0 + 0xCF8]
	0x031F2DA0 BL 0x1C16CF4
	0x031F2DA4 MOVZ W8, 0x1
	0x031F2DA8 STRB W8, [X22 + 0x195]
	0x031F2DAC LDR X0, [X24]
	0x031F2DB0 BL 0x1C16F10
	0x031F2DB4 MOV X1, X31
	0x031F2DB8 MOV X22, X0
	0x031F2DBC BL 0x3231AC4
	0x031F2DC0 TBZ X23, 0x0, 0x31F2E4C
	0x031F2DC4 CBZ X21, 0x31F2F14
	0x031F2DC8 LDR X0, [X21 + 0x20]
	0x031F2DCC CBZ X0, 0x31F2EF0
	0x031F2DD0 LDR X8, [X0]
	0x031F2DD4 LDR X9, [X8 + 0x298]
	0x031F2DD8 LDR X1, [X8 + 0x2A0]
	0x031F2DDC BLR X9
	0x031F2DE0 SUBS W23, W0, 0x1
	0x031F2DE4 B.MI 0x31F2EF0
	0x031F2DE8 ADRP X25, 0xF2E000
	0x031F2DEC LDR X25, [X25 + 0xCF8]
	0x031F2DF0 MOV X0, X21
	0x031F2DF4 MOV W1, W23
	0x031F2DF8 BL 0x31E8704
	0x031F2DFC LDR X8, [X25]
	0x031F2E00 MOV X24, X0
	0x031F2E04 LDR W9, [X8 + 0xE0]
	0x031F2E08 CBNZ W9, 0x31F2E14
	0x031F2E0C MOV X0, X8

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X29
	003 Move [X31+40], X30
	004 Move [X31+48], X28
	005 Move [X31+56], X27
	006 Move [X31+64], X26
	007 Move [X31+72], X25
	008 Move [X31+80], X24
	009 Move [X31+88], X23
	010 Move [X31+96], X22
	011 Move [X31+104], X21
	012 Move [X31+112], X20
	013 Move [X31+120], X19
	014 Move X19, 0x11EB000
	015 Move W8, [X19+393]
	016 Move X20, X0
	017 Move [X31+16], X2
	018 Move [X31], X1
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {46}
	023 Move X0, 0xF2F000
	024 Move X0, [X0+2976]
	025 Call 0x1C17CF4
	026 Move X0, 0xF02000
	027 Move X0, [X0+1560]
	028 Call 0x1C17CF4
	029 Move X0, 0xF2F000
	030 Move X0, [X0+3184]
	031 Call 0x1C17CF4
	032 Move X0, 0xF02000
	033 Move X0, [X0+2072]
	034 Call 0x1C17CF4
	035 Move X0, 0xF2F000
	036 Move X0, [X0+3592]
	037 Call 0x1C17CF4
	038 Move X0, 0xF2F000
	039 Move X0, [X0+3264]
	040 Call 0x1C17CF4
	041 Move X0, 0xF2F000
	042 Move X0, [X0+3664]
	043 Call 0x1C17CF4
	044 Move W8, 1
	045 Move [X19+393], W8
	046 Move X0, [X20+56]
	047 Move W22, W31
	048 Move [X31+8], X20
	049 NotImplemented "Instruction CMP not yet implemented."
	050 NotImplemented "Instruction CSET not yet implemented."
	051 Move TEMP, X8
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfEqual {353}
	055 Move X8, [X0]
	056 Move X9, [X8+664]
	057 Move X1, [X8+672]
	058 NotImplemented "Instruction BLR not yet implemented."
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move X0, [X20+56]
	061 Compare X0, 0
	062 JumpIfEqual {353}
	063 Move X8, [X0]
	064 Move W1, W22
	065 Move X9, [X8+744]
	066 Move X2, [X8+752]
	067 NotImplemented "Instruction BLR not yet implemented."
	068 Compare X0, 0
	069 JumpIfEqual {353}
	070 Move X9, 0xF2F000
	071 Move X8, [X0]
	072 Move X9, [X9+3592]
	073 Move X23, X0
	074 Move W10, [X8+304]
	075 Move X1, [X9]
	076 Move W9, [X1+304]
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Move X8, [X8+200]
	079 Add X8, X8, X9
	080 NotImplemented "Instruction LDUR not yet implemented."
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Move X0, [X23+16]
	083 Compare X0, 0
	084 JumpIfEqual {353}
	085 Move X8, 0xF2F000
	086 Move X8, [X8+3664]
	087 Move X2, X31
	088 Move X1, [X8]
	089 Call String.Equals, X0, X1
	090 Move TEMP, X0
	091 And TEMP, TEMP, 1
	092 Compare TEMP, 1
	093 JumpIfNotEqual {311}
	094 Move X23, [X23+24]
	095 Compare X23, 0
	096 JumpIfEqual {353}
	097 Move W1, 1
	098 Move X0, X23
	099 Call ASN1.get_Item, X0, X1
	100 Compare X0, 0
	101 JumpIfEqual {353}
	102 Call ASN1.get_Value, X0
	103 Move X8, 0xF2F000
	104 Move X8, [X8+3184]
	105 Move X21, X0
	106 Move X8, [X8]
	107 Move X0, X8
	108 Call 0x1C17F10
	109 Move X1, X21
	110 Move X19, X0
	111 Call ContentInfo..ctor, X0, X1
	112 Compare X19, 0
	113 JumpIfEqual {353}
	114 Move X0, [X19+24]
	115 Compare X0, 0
	116 JumpIfEqual {353}
	117 Move W1, W31
	118 Call ASN1.get_Item, X0, X1
	119 Compare X0, 0
	120 JumpIfEqual {353}
	121 Call ASN1.get_Value, X0
	122 Move X8, 0xF2F000
	123 Move X8, [X8+3264]
	124 Move X19, X0
	125 Move X8, [X8]
	126 Move X0, X8
	127 Call 0x1C17F10
	128 Move X1, X19
	129 Move X24, X0
	130 Call X509Certificate..ctor, X0, X1
	131 Move X20, [X31+16]
	132 Move X0, [X31]
	133 Compare X0, 0
	134 JumpIfEqual {353}
	135 Move X8, [X0]
	136 Move X9, [X8+504]
	137 Move X1, [X8+512]
	138 NotImplemented "Instruction BLR not yet implemented."
	139 Compare X24, 0
	140 JumpIfEqual {353}
	141 Move X8, [X24]
	142 Move X19, X0
	143 Move X0, X24
	144 Move X9, [X8+504]
	145 Move X1, [X8+512]
	146 NotImplemented "Instruction BLR not yet implemented."
	147 Move X1, X19
	148 Move X2, X0
	149 Call PKCS12.Compare, X0, X1, X2
	150 And W31, W0, 1
	151 NotImplemented "Instruction CSINV not yet implemented."
	152 Compare X20, 0
	153 JumpIfEqual {319}
	154 Move X20, [X31+8]
	155 Move TEMP, X0
	156 And TEMP, TEMP, 1
	157 Compare TEMP, 1
	158 JumpIfNotEqual {314}
	159 Move X0, [X23+32]
	160 Compare X0, 0
	161 JumpIfEqual {311}
	162 Move X8, [X0]
	163 Move X9, [X8+664]
	164 Move X1, [X8+672]
	165 NotImplemented "Instruction BLR not yet implemented."
	166 NotImplemented "Instruction CMP not yet implemented."
	167 Move W1, 2
	168 Move X0, X23
	169 Call ASN1.get_Item, X0, X1
	170 Compare X0, 0
	171 JumpIfEqual {353}
	172 Move [X31+28], W31
	173 Move X20, 0xF02000
	174 Move X19, [X31+16]
	175 Move X20, [X20+2072]
	176 Move X23, X0
	177 Move W24, W31
	178 Move X0, [X23+32]
	179 Compare X0, 0
	180 JumpIfEqual {185}
	181 Move X8, [X0]
	182 Move X9, [X8+664]
	183 Move X1, [X8+672]
	184 NotImplemented "Instruction BLR not yet implemented."
	185 NotImplemented "Instruction CMP not yet implemented."
	186 Move X0, X23
	187 Move W1, W24
	188 Call ASN1.get_Item, X0, X1
	189 Compare X0, 0
	190 JumpIfEqual {353}
	191 Move W1, W31
	192 Move X26, X0
	193 Call ASN1.get_Item, X0, X1
	194 Call ASN1Convert.ToOid, X0
	195 Move X8, [X19]
	196 Move X1, [X20]
	197 Move X25, X0
	198 NotImplemented "Instruction LDRH not yet implemented."
	199 Compare X9, 0
	200 JumpIfEqual {207}
	201 Move X10, [X8+176]
	202 Add X10, X10, 8
	203 NotImplemented "Instruction LDUR not yet implemented."
	204 NotImplemented "Instruction CMP not yet implemented."
	205 Subtract X9, X9, 1
	206 Add X10, X10, 16
	207 Move X0, X19
	208 Move W2, W31
	209 Call 0x1C5D788
	210 NotImplemented "Instruction LDRSW not yet implemented."
	211 Add X8, X8, X9
	212 Add X0, X8, 312
	213 Move X8, [X0]
	214 Move X2, [X0+8]
	215 Move X0, X19
	216 Move X1, X25
	217 NotImplemented "Instruction BLR not yet implemented."
	218 Compare X0, 0
	219 JumpIfEqual {310}
	220 Move X9, 0xF2F000
	221 Move X8, [X0]
	222 Move X9, [X9+2976]
	223 Move X25, X0
	224 Move W10, [X8+304]
	225 Move X1, [X9]
	226 Move W9, [X1+304]
	227 NotImplemented "Instruction CMP not yet implemented."
	228 Move X8, [X8+200]
	229 Add X8, X8, X9
	230 NotImplemented "Instruction LDUR not yet implemented."
	231 NotImplemented "Instruction CMP not yet implemented."
	232 Move W1, 1
	233 Move X0, X26
	234 Call ASN1.get_Item, X0, X1
	235 Move X8, [X25]
	236 Move X26, X0
	237 Move X0, X25
	238 Move X9, [X8+664]
	239 Move X1, [X8+672]
	240 NotImplemented "Instruction BLR not yet implemented."
	241 Compare X26, 0
	242 JumpIfEqual {353}
	243 Move W27, W0
	244 Move X0, [X26+32]
	245 Compare X0, 0
	246 JumpIfEqual {251}
	247 Move X8, [X0]
	248 Move X9, [X8+664]
	249 Move X1, [X8+672]
	250 NotImplemented "Instruction BLR not yet implemented."
	251 NotImplemented "Instruction CMP not yet implemented."
	252 Move W27, W31
	253 Move W20, W31
	254 Move X0, [X26+32]
	255 Compare X0, 0
	256 JumpIfEqual {261}
	257 Move X8, [X0]
	258 Move X9, [X8+664]
	259 Move X1, [X8+672]
	260 NotImplemented "Instruction BLR not yet implemented."
	261 NotImplemented "Instruction CMP not yet implemented."
	262 Move X0, X26
	263 Move W1, W27
	264 Call ASN1.get_Item, X0, X1
	265 Move X8, [X25]
	266 Move X28, X0
	267 Move X0, X25
	268 Move W1, W27
	269 Move X9, [X8+744]
	270 Move X2, [X8+752]
	271 NotImplemented "Instruction BLR not yet implemented."
	272 Compare X0, 0
	273 JumpIfEqual {285}
	274 Move X8, 0xF02000
	275 Move X8, [X8+1560]
	276 Move X21, X0
	277 Move X19, [X8]
	278 Move X1, X19
	279 Call 0x1C17E00
	280 Move X29, X0
	281 Compare X0, 0
	282 JumpIfEqual {354}
	283 Compare X28, 0
	284 JumpIfNotEqual {288}
	285 Move X29, X31
	286 Compare X28, 0
	287 JumpIfEqual {353}
	288 Move X0, X28
	289 Call ASN1.get_Value, X0
	290 Move X1, X29
	291 Move X2, X0
	292 Call PKCS12.Compare, X0, X1, X2
	293 And W8, W0, 1
	294 Add W20, W20, W8
	295 Add W27, W27, 1
	296 Move X0, [X26+32]
	297 Compare X0, 0
	298 JumpIfEqual {303}
	299 Move X8, [X0]
	300 Move X9, [X8+664]
	301 Move X1, [X8+672]
	302 NotImplemented "Instruction BLR not yet implemented."
	303 Move W8, [X31+28]
	304 NotImplemented "Instruction CMP not yet implemented."
	305 Move X20, 0xF02000
	306 Move X19, [X31+16]
	307 NotImplemented "Instruction CINC not yet implemented."
	308 Move [X31+28], W8
	309 Move X20, [X20+2072]
	310 Add W24, W24, 1
	311 Move TEMP, 0
	312 Not TEMP
	313 Move W1, TEMP
	314 Move X0, [X20+56]
	315 Add W22, W22, 1
	316 NotImplemented "Instruction CMP not yet implemented."
	317 NotImplemented "Instruction CSET not yet implemented."
	318 Add W31, W1, 1
	319 Move X20, [X31+8]
	320 Move X0, [X23+32]
	321 Compare X0, 0
	322 JumpIfEqual {327}
	323 Move X8, [X0]
	324 Move X9, [X8+664]
	325 Move X1, [X8+672]
	326 NotImplemented "Instruction BLR not yet implemented."
	327 Move W8, [X31+28]
	328 Move X20, [X31+8]
	329 NotImplemented "Instruction CMP not yet implemented."
	330 NotImplemented "Instruction CSINV not yet implemented."
	331 Compare X0, 0
	332 JumpIfEqual {353}
	333 Move X8, [X0]
	334 Move X9, [X8+984]
	335 Move X2, [X8+992]
	336 NotImplemented "Instruction BLR not yet implemented."
	337 Move W8, 1
	338 Move [X20+50], W8
	339 Move X20, [X31+112]
	340 Move X19, [X31+120]
	341 Move X22, [X31+96]
	342 Move X21, [X31+104]
	343 Move X24, [X31+80]
	344 Move X23, [X31+88]
	345 Move X26, [X31+64]
	346 Move X25, [X31+72]
	347 Move X28, [X31+48]
	348 Move X27, [X31+56]
	349 Move X29, [X31+32]
	350 Move X30, [X31+40]
	351 Add X31, X31, 128
	352 Return 
	353 Call 0x1C17F20
	354 Move X0, X21
	355 Move X1, X19
	356 Call 0x1C181E0
	357 Move X0, X25
	358 Call 0x1C181E0
	359 Move X0, X23
	360 Call 0x1C181E0

Method: System.Object Clone()

Disassembly:
	0x031F2E10 BL 0x1C16DFC
	0x031F2E14 AND W2, W19, 0x1
	0x031F2E18 MOV X0, X22
	0x031F2E1C MOV X1, X24
	0x031F2E20 BL 0x31F2590
	0x031F2E24 CBZ W23, 0x31F2EF0
	0x031F2E28 CBZ X22, 0x31F2F14
	0x031F2E2C MOV X0, X22
	0x031F2E30 MOV X1, X20
	0x031F2E34 MOV X2, X31
	0x031F2E38 BL 0x32333E0
	0x031F2E3C CMP W23, 0x0
	0x031F2E40 SUB W23, W23, 0x1
	0x031F2E44 B.GT 0x31F2DF0
	0x031F2E48 B 0x31F2EF4
	0x031F2E4C CBZ X21, 0x31F2F14
	0x031F2E50 ADRP X25, 0xF2E000
	0x031F2E54 LDR X25, [X25 + 0xCF8]
	0x031F2E58 MOV W23, W31
	0x031F2E5C LDR X0, [X21 + 0x20]
	0x031F2E60 CBZ X0, 0x31F2E74
	0x031F2E64 LDR X8, [X0]
	0x031F2E68 LDR X9, [X8 + 0x298]
	0x031F2E6C LDR X1, [X8 + 0x2A0]
	0x031F2E70 BLR X9
	0x031F2E74 CMP W23, W0
	0x031F2E78 B.GE 0x31F2EF0
	0x031F2E7C MOV X0, X21
	0x031F2E80 MOV W1, W23
	0x031F2E84 BL 0x31E8704
	0x031F2E88 LDR X8, [X25]
	0x031F2E8C MOV X24, X0
	0x031F2E90 LDR W9, [X8 + 0xE0]
	0x031F2E94 CBNZ W9, 0x31F2EA0
	0x031F2E98 MOV X0, X8
	0x031F2E9C BL 0x1C16DFC
	0x031F2EA0 AND W2, W19, 0x1
	0x031F2EA4 MOV X0, X22
	0x031F2EA8 MOV X1, X24
	0x031F2EAC BL 0x31F2590
	0x031F2EB0 LDR X0, [X21 + 0x20]
	0x031F2EB4 CBZ X0, 0x31F2EC8
	0x031F2EB8 LDR X8, [X0]
	0x031F2EBC LDR X9, [X8 + 0x298]
	0x031F2EC0 LDR X1, [X8 + 0x2A0]
	0x031F2EC4 BLR X9
	0x031F2EC8 SUB W8, W0, 0x1
	0x031F2ECC CMP W23, W8
	0x031F2ED0 B.GE 0x31F2EE8
	0x031F2ED4 CBZ X22, 0x31F2F14

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x11EB000
	007 Move W8, [X20+394]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xF2F000
	014 Move X0, [X0+3432]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X20+394], W8
	018 Move X21, 0xF2F000
	019 Move X22, [X19+16]
	020 Move X21, [X21+3432]
	021 Move X0, X19
	022 Call PKCS12.GetBytes, X0
	023 Move X20, X0
	024 Compare X22, 0
	025 JumpIfEqual {54}
	026 Move X0, X31
	027 Call Encoding.get_BigEndianUnicode
	028 Compare X0, 0
	029 JumpIfEqual {61}
	030 Move X8, [X0]
	031 Move X1, [X19+16]
	032 Move X9, [X8+888]
	033 Move X2, [X8+896]
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move X8, [X21]
	036 Move X22, X0
	037 Move X0, X8
	038 Call 0x1C17F10
	039 Move X1, X20
	040 Move X2, X22
	041 Move X21, X0
	042 Call PKCS12..ctor, X0, X1, X2
	043 Compare X21, 0
	044 JumpIfEqual {61}
	045 Move W8, [X19+52]
	046 Move X0, X21
	047 Move X20, [X31+32]
	048 Move X19, [X31+40]
	049 Move [X21+52], W8
	050 Move X22, [X31+16]
	051 Move X21, [X31+24]
	052 Move X30, [X31+48]
	053 Return X0
	054 Move X0, [X21]
	055 Call 0x1C17F10
	056 Move X1, X20
	057 Move X21, X0
	058 Call PKCS12..ctor, X0, X1
	059 Compare X21, 0
	060 JumpIfNotEqual {45}
	061 Call 0x1C17F20

Method: System.Int32 get_MaximumPasswordLength()

Disassembly:
	0x031F2ED8 MOV X0, X22
	0x031F2EDC MOV X1, X20
	0x031F2EE0 MOV X2, X31
	0x031F2EE4 BL 0x32333E0
	0x031F2EE8 ADD W23, W23, 0x1
	0x031F2EEC B 0x31F2E5C
	0x031F2EF0 CBZ X22, 0x31F2F14
	0x031F2EF4 LDR X8, [X22]
	0x031F2EF8 MOV X0, X22
	0x031F2EFC LDP X20, X19, [X31 + 0x30]
	0x031F2F00 LDP X22, X21, [X31 + 0x20]
	0x031F2F04 LDP X2, X1, [X8 + 0x168]
	0x031F2F08 LDP X24, X23, [X31 + 0x10]
	0x031F2F0C LDP X30, X25, [X31], #0x40
	0x031F2F10 BR X2
	0x031F2F14 BL 0x1C16F20
	0x031F2F18 STP X29, X30, [X31 - 0x60]!
	0x031F2F1C STP X28, X27, [X31 + 0x10]
	0x031F2F20 STP X26, X25, [X31 + 0x20]
	0x031F2F24 STP X24, X23, [X31 + 0x30]
	0x031F2F28 STP X22, X21, [X31 + 0x40]
	0x031F2F2C STP X20, X19, [X31 + 0x50]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x11EB000
	005 Move X19, 0xF2F000
	006 Move W8, [X20+395]
	007 Move X19, [X19+3432]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xF2F000
	013 Move X0, [X0+3432]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+395], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move W0, [X8]
	027 Move X30, [X31+32]
	028 Return X0

Method: System.Void .cctor()

Disassembly:
	0x031F2F30 ADRP X29, 0x11EA000
	0x031F2F34 ADRP X21, 0xF01000
	0x031F2F38 ADRP X19, 0xF2F000
	0x031F2F3C ADRP X20, 0xF2E000
	0x031F2F40 ADRP X28, 0xF2F000
	0x031F2F44 ADRP X27, 0xF2F000
	0x031F2F48 ADRP X26, 0xF2F000
	0x031F2F4C ADRP X25, 0xF2F000
	0x031F2F50 ADRP X24, 0xF2F000
	0x031F2F54 ADRP X23, 0xF2F000
	0x031F2F58 ADRP X22, 0xF2F000
	0x031F2F5C LDR X21, [X21 + 0x618]
	0x031F2F60 LDR X19, [X19 + 0x40]
	0x031F2F64 LDR X20, [X20 + 0xCF8]
	0x031F2F68 LDR X28, [X28 + 0x48]
	0x031F2F6C LDR X27, [X27 + 0x50]
	0x031F2F70 LDR X26, [X26 + 0x58]
	0x031F2F74 LDR X25, [X25 + 0x60]
	0x031F2F78 LDR X24, [X24 + 0x68]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x11EB000
	005 Move X20, 0xF2F000
	006 Move W8, [X19+396]
	007 Move X20, [X20+3432]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xF2F000
	013 Move X0, [X0+3432]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+396], W8
	017 Move X8, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move TEMP, 0x80000000
	021 Not TEMP
	022 Move W9, TEMP
	023 Move X8, [X8+184]
	024 Move [X8], W9
	025 Move X30, [X31+32]
	026 Return 

