Type: Mono.Security.BitConverterLE

Method: System.Byte[] GetUIntBytes(System.Byte* bytes)

Disassembly:
	0x031EA894 MOV X2, X31
	0x031EA898 BL 0x330E100
	0x031EA89C ADRP X0, 0xF36000
	0x031EA8A0 LDR X0, [X0 + 0xCF0]
	0x031EA8A4 BL 0x1C16D08
	0x031EA8A8 MOV X1, X0
	0x031EA8AC MOV X0, X19
	0x031EA8B0 BL 0x1C16DEC
	0x031EA8B4 BL 0x1C16F20
	0x031EA8B8 STP X30, X23, [X31 - 0x30]!
	0x031EA8BC STP X22, X21, [X31 + 0x10]
	0x031EA8C0 STP X20, X19, [X31 + 0x20]
	0x031EA8C4 ADRP X21, 0x11F2000
	0x031EA8C8 LDRB W8, [X21 + 0x176]
	0x031EA8CC MOV X20, X1
	0x031EA8D0 MOV X19, X0
	0x031EA8D4 TBNZ X8, 0x0, 0x31EA8EC
	0x031EA8D8 ADRP X0, 0xF36000
	0x031EA8DC LDR X0, [X0 + 0xCF8]
	0x031EA8E0 BL 0x1C16CF4
	0x031EA8E4 MOVZ W8, 0x1
	0x031EA8E8 STRB W8, [X21 + 0x176]
	0x031EA8EC MOV X0, X19
	0x031EA8F0 BL 0x31EAC28
	0x031EA8F4 CBZ X20, 0x31EABB8
	0x031EA8F8 MOV X0, X20
	0x031EA8FC MOV W1, W31
	0x031EA900 BL 0x31E8704
	0x031EA904 CBZ X0, 0x31EABB8
	0x031EA908 LDRB W8, [X0 + 0x10]
	0x031EA90C CMP W8, 0x30
	0x031EA910 B.NE 0x31EABBC
	0x031EA914 MOV X0, X20
	0x031EA918 MOV W1, W31
	0x031EA91C BL 0x31E8704
	0x031EA920 CBZ X0, 0x31EABB8
	0x031EA924 LDR X0, [X0 + 0x20]
	0x031EA928 CBZ X0, 0x31EABBC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x11F3000
	006 Move X21, 0xF0A000
	007 Move W8, [X20+364]
	008 Move X21, [X21+1560]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xF0A000
	015 Move X0, [X0+1560]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+364], W8
	019 Move X0, [X21]
	020 Move W1, 4
	021 Call 0x1C17D6C
	022 Compare X0, 0
	023 JumpIfEqual {44}
	024 Move W8, [X0+24]
	025 Compare W8, 0
	026 JumpIfEqual {43}
	027 Move W9, [X19]
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move [X0+32], W9
	030 Move W9, [X19+1]
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move [X0+33], W9
	033 Move W9, [X19+2]
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move [X0+34], W9
	036 Move W8, [X19+3]
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move [X0+35], W8
	040 Move X30, [X31+32]
	041 Move X21, [X31+40]
	042 Return X0
	043 Call 0x1C17F28
	044 Call 0x1C17F20

Method: System.Byte[] GetULongBytes(System.Byte* bytes)

Disassembly:
	0x031EA92C LDR X8, [X0]
	0x031EA930 LDR X9, [X8 + 0x298]
	0x031EA934 LDR X1, [X8 + 0x2A0]
	0x031EA938 BLR X9
	0x031EA93C CMP W0, 0x4
	0x031EA940 B.LE 0x31EABBC
	0x031EA944 MOV X0, X20
	0x031EA948 MOV W1, W31
	0x031EA94C BL 0x31E8704
	0x031EA950 CBZ X0, 0x31EABB8
	0x031EA954 MOV W1, W31
	0x031EA958 BL 0x31E8704
	0x031EA95C CBZ X0, 0x31EABB8
	0x031EA960 LDRB W8, [X0 + 0x10]
	0x031EA964 CMP W8, 0x2
	0x031EA968 B.NE 0x31EABDC
	0x031EA96C MOV X0, X20
	0x031EA970 MOV W1, W31
	0x031EA974 BL 0x31E8704
	0x031EA978 CBZ X0, 0x31EABB8
	0x031EA97C MOV W1, W31
	0x031EA980 BL 0x31E8704
	0x031EA984 CBZ X0, 0x31EABB8
	0x031EA988 BL 0x31E7D00
	0x031EA98C CBZ X0, 0x31EABB8
	0x031EA990 LDR W8, [X0 + 0x18]
	0x031EA994 CBZ W8, 0x31EAC24
	0x031EA998 LDRB W8, [X0 + 0x20]
	0x031EA99C MOV X0, X20
	0x031EA9A0 MOV W1, W31
	0x031EA9A4 STRB W8, [X19 + 0x10]
	0x031EA9A8 BL 0x31E8704
	0x031EA9AC CBZ X0, 0x31EABB8
	0x031EA9B0 MOVZ W1, 0x1
	0x031EA9B4 BL 0x31E8704
	0x031EA9B8 CBZ X0, 0x31EABB8
	0x031EA9BC LDRB W8, [X0 + 0x10]
	0x031EA9C0 MOV X21, X0
	0x031EA9C4 CMP W8, 0x80
	0x031EA9C8 B.NE 0x31EA9E8
	0x031EA9CC LDRB W8, [X19 + 0x10]
	0x031EA9D0 CMP W8, 0x3
	0x031EA9D4 B.NE 0x31EA9E8
	0x031EA9D8 MOV X0, X21
	0x031EA9DC BL 0x31E7D00
	0x031EA9E0 STR X0, [X19 + 0x48]
	0x031EA9E4 B 0x31EAA38
	0x031EA9E8 ADRP X22, 0xF36000
	0x031EA9EC LDR X22, [X22 + 0xCF8]
	0x031EA9F0 MOV X0, X21
	0x031EA9F4 MOV W1, W31
	0x031EA9F8 BL 0x31E8704
	0x031EA9FC LDR X8, [X22]
	0x031EAA00 MOV X22, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x11F3000
	006 Move X21, 0xF0A000
	007 Move W8, [X20+365]
	008 Move X21, [X21+1560]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xF0A000
	015 Move X0, [X0+1560]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+365], W8
	019 Move X0, [X21]
	020 Move W1, 8
	021 Call 0x1C17D6C
	022 Compare X0, 0
	023 JumpIfEqual {56}
	024 Move W8, [X0+24]
	025 Compare W8, 0
	026 JumpIfEqual {55}
	027 Move W9, [X19]
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move [X0+32], W9
	030 Move W9, [X19+1]
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move [X0+33], W9
	033 Move W9, [X19+2]
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move [X0+34], W9
	036 Move W9, [X19+3]
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move [X0+35], W9
	039 Move W9, [X19+4]
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move [X0+36], W9
	042 Move W9, [X19+5]
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move [X0+37], W9
	045 Move W9, [X19+6]
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move [X0+38], W9
	048 Move W8, [X19+7]
	049 Move X20, [X31+16]
	050 Move X19, [X31+24]
	051 Move [X0+39], W8
	052 Move X30, [X31+32]
	053 Move X21, [X31+40]
	054 Return X0
	055 Call 0x1C17F28
	056 Call 0x1C17F20

Method: System.Byte[] GetBytes(System.Int32 value)

Disassembly:
	0x031E9D88 ADRP X0, 0xF12000
	0x031E9D8C LDR X0, [X0 + 0x578]
	0x031E9D90 BL 0x1C16D08
	0x031E9D94 BL 0x1C16F10
	0x031E9D98 MOV X19, X0
	0x031E9D9C ADRP X0, 0xF37000

ISIL:
	001 Move [X31-16], X30
	002 Move [X31+12], W0
	003 Add X0, X31, 12
	004 Call BitConverterLE.GetUIntBytes, X0
	005 Move X30, [X31+16]
	006 Return X0

Method: System.Byte[] GetBytes(System.Int64 value)

Disassembly:
	0x031EAA04 LDR W9, [X8 + 0xE0]
	0x031EAA08 CBNZ W9, 0x31EAA14
	0x031EAA0C MOV X0, X8
	0x031EAA10 BL 0x1C16DFC
	0x031EAA14 MOV X0, X22
	0x031EAA18 BL 0x31EAE98

ISIL:
	001 Move [X31-16], X30
	002 Move [X31+8], X0
	003 Add X0, X31, 8
	004 Call BitConverterLE.GetULongBytes, X0
	005 Move X30, [X31+16]
	006 Return X0

Method: System.Void UShortFromBytes(System.Byte* dst, System.Byte[] src, System.Int32 startIndex)

Disassembly:
	0x031EAA1C STR X0, [X19 + 0x38]
	0x031EAA20 MOVZ W1, 0x1
	0x031EAA24 MOV X0, X21
	0x031EAA28 BL 0x31E8704
	0x031EAA2C CBZ X0, 0x31EABB8
	0x031EAA30 BL 0x31E7D00
	0x031EAA34 STR X0, [X19 + 0x40]
	0x031EAA38 MOV X0, X20
	0x031EAA3C MOV W1, W31
	0x031EAA40 BL 0x31E8704
	0x031EAA44 CBZ X0, 0x31EABB8
	0x031EAA48 MOVZ W1, 0x2
	0x031EAA4C BL 0x31E8704
	0x031EAA50 CBZ X0, 0x31EABB8
	0x031EAA54 MOV W1, W31
	0x031EAA58 BL 0x31E8704
	0x031EAA5C BL 0x31E909C
	0x031EAA60 STR X0, [X19 + 0x18]
	0x031EAA64 MOV X0, X20

ISIL:
	001 Move [X31-16], X30
	002 Compare X1, 0
	003 JumpIfEqual {18}
	004 Move W8, [X1+24]
	005 NotImplemented "Instruction CMP not yet implemented."
	006 Add X8, X1, W2
	007 Move W8, [X8+32]
	008 Move [X0], W8
	009 Move W9, [X1+24]
	010 Add W8, W2, 1
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Add X8, X1, W8
	013 Move W8, [X8+32]
	014 Move [X0+1], W8
	015 Move X30, [X31+16]
	016 Return 
	017 Call 0x1C17F28
	018 Call 0x1C17F20

Method: System.Void UIntFromBytes(System.Byte* dst, System.Byte[] src, System.Int32 startIndex)

Disassembly:
	0x031EAA68 MOV W1, W31
	0x031EAA6C BL 0x31E8704
	0x031EAA70 CBZ X0, 0x31EABB8
	0x031EAA74 MOVZ W1, 0x3
	0x031EAA78 BL 0x31E8704
	0x031EAA7C CBZ X0, 0x31EABB8
	0x031EAA80 LDRB W8, [X0 + 0x10]
	0x031EAA84 MOV X21, X0
	0x031EAA88 CMP W8, 0xA0
	0x031EAA8C B.NE 0x31EAAE8
	0x031EAA90 MOV W22, W31
	0x031EAA94 LDR X0, [X21 + 0x20]
	0x031EAA98 CBZ X0, 0x31EAAAC
	0x031EAA9C LDR X8, [X0]
	0x031EAAA0 LDR X9, [X8 + 0x298]
	0x031EAAA4 LDR X1, [X8 + 0x2A0]
	0x031EAAA8 BLR X9
	0x031EAAAC CMP W22, W0
	0x031EAAB0 B.GE 0x31EAAF0
	0x031EAAB4 LDR X23, [X19 + 0x20]
	0x031EAAB8 MOV X0, X21
	0x031EAABC MOV W1, W22
	0x031EAAC0 BL 0x31E8704
	0x031EAAC4 CBZ X23, 0x31EABB8
	0x031EAAC8 LDR X8, [X23]
	0x031EAACC MOV X1, X0
	0x031EAAD0 MOV X0, X23
	0x031EAAD4 LDR X9, [X8 + 0x308]
	0x031EAAD8 LDR X2, [X8 + 0x310]
	0x031EAADC BLR X9
	0x031EAAE0 ADD W22, W22, 0x1
	0x031EAAE4 B 0x31EAA94
	0x031EAAE8 MOVZ W21, 0x4

ISIL:
	001 Move [X31-16], X30
	002 Compare X1, 0
	003 JumpIfEqual {30}
	004 Move W8, [X1+24]
	005 NotImplemented "Instruction CMP not yet implemented."
	006 Add X8, X1, W2
	007 Move W8, [X8+32]
	008 Move [X0], W8
	009 Move W9, [X1+24]
	010 Add W8, W2, 1
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Add X8, X1, W8
	013 Move W8, [X8+32]
	014 Move [X0+1], W8
	015 Move W9, [X1+24]
	016 Add W8, W2, 2
	017 NotImplemented "Instruction CMP not yet implemented."
	018 Add X8, X1, W8
	019 Move W8, [X8+32]
	020 Move [X0+2], W8
	021 Move W9, [X1+24]
	022 Add W8, W2, 3
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Add X8, X1, W8
	025 Move W8, [X8+32]
	026 Move [X0+3], W8
	027 Move X30, [X31+16]
	028 Return 
	029 Call 0x1C17F28
	030 Call 0x1C17F20

Method: System.Int32 ToInt32(System.Byte[] value, System.Int32 startIndex)

Disassembly:
	0x031EAAEC B 0x31EAAF4
	0x031EAAF0 MOVZ W21, 0x5
	0x031EAAF4 MOV X0, X20
	0x031EAAF8 MOV W1, W31
	0x031EAAFC BL 0x31E8704
	0x031EAB00 CBZ X0, 0x31EABB8
	0x031EAB04 MOV W1, W21
	0x031EAB08 BL 0x31E8704
	0x031EAB0C CBZ X0, 0x31EABB8

ISIL:
	001 Move [X31-16], X30
	002 Move W2, W1
	003 Move X1, X0
	004 Add X0, X31, 12
	005 Move [X31+12], W31
	006 Call BitConverterLE.UIntFromBytes, X0, X1, X2
	007 Move W0, [X31+12]
	008 Move X30, [X31+16]
	009 Return X0

Method: System.UInt16 ToUInt16(System.Byte[] value, System.Int32 startIndex)

Disassembly:
	0x031EAB10 LDRB W8, [X0 + 0x10]
	0x031EAB14 CMP W8, 0x4
	0x031EAB18 B.NE 0x31EAB24
	0x031EAB1C BL 0x31E7D00
	0x031EAB20 STR X0, [X19 + 0x30]
	0x031EAB24 MOV X0, X20
	0x031EAB28 MOV W1, W31
	0x031EAB2C BL 0x31E8704
	0x031EAB30 CBZ X0, 0x31EABB8

ISIL:
	001 Move [X31-16], X30
	002 Move W2, W1
	003 Move X1, X0
	004 Add X0, X31, 12
	005 NotImplemented "Instruction STRH not yet implemented."
	006 Call BitConverterLE.UShortFromBytes, X0, X1, X2
	007 NotImplemented "Instruction LDRH not yet implemented."
	008 Move X30, [X31+16]
	009 Return X0

Method: System.UInt32 ToUInt32(System.Byte[] value, System.Int32 startIndex)

Disassembly:
	0x031EAB34 ADD W1, W21, 0x1
	0x031EAB38 BL 0x31E8704
	0x031EAB3C CBZ X0, 0x31EABA8
	0x031EAB40 LDRB W8, [X0 + 0x10]
	0x031EAB44 MOV X20, X0
	0x031EAB48 CMP W8, 0xA1
	0x031EAB4C B.NE 0x31EABA8
	0x031EAB50 MOV W21, W31
	0x031EAB54 LDR X0, [X20 + 0x20]

ISIL:
	001 Move [X31-16], X30
	002 Move W2, W1
	003 Move X1, X0
	004 Add X0, X31, 12
	005 Move [X31+12], W31
	006 Call BitConverterLE.UIntFromBytes, X0, X1, X2
	007 Move W0, [X31+12]
	008 Move X30, [X31+16]
	009 Return X0

