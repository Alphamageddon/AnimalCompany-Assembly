Type: UnityEngine.ProBuilder.KdTree.KdTree`2/<GetEnumerator>d__33

Method: System.Void .ctor(System.Int32 <>1__state)

Disassembly:
	0x0239B41C LDR X0, [X8 + 0x50]
	0x0239B420 BL 0x1C16E04
	0x0239B424 LDR X8, [X19 + 0x28]
	0x0239B428 LDR X9, [X31 + 0x28]
	0x0239B42C CMP X8, X9
	0x0239B430 B.NE 0x239B440
	0x0239B434 LDP X30, X19, [X31 + 0x30]
	0x0239B438 ADD X31, X31, 0x40
	0x0239B43C RET
	0x0239B440 BL 0x3EB1B20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move [X20+16], W19
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X30, [X31+32]
	012 Return 

Method: System.Void System.IDisposable.Dispose()

Disassembly:
	0x0239B444 STR X30, [X31 - 0x20]!

ISIL:
	001 Return 

Method: System.Boolean MoveNext()

Disassembly:
	0x0239B448 STP X20, X19, [X31 + 0x10]
	0x0239B44C MOV W19, W1
	0x0239B450 MOV X1, X31
	0x0239B454 MOV X20, X0
	0x0239B458 BL 0x33BDD8C
	0x0239B45C STR W19, [X20 + 0x10]
	0x0239B460 LDP X20, X19, [X31 + 0x10]
	0x0239B464 LDR X30, [X31], #0x20
	0x0239B468 RET
	0x0239B46C RET
	0x0239B470 SUB X31, X31, 0x30
	0x0239B474 STP X30, X21, [X31 + 0x10]
	0x0239B478 STP X20, X19, [X31 + 0x20]
	0x0239B47C LDR W8, [X0 + 0x10]
	0x0239B480 MOV X19, X0
	0x0239B484 MOV X20, X1
	0x0239B488 CMP W8, 0x1
	0x0239B48C B.EQ 0x239B4C4
	0x0239B490 CBNZ W8, 0x239B514
	0x0239B494 LDR X8, [X19 + 0x28]
	0x0239B498 MOVN W9, 0x0
	0x0239B49C STR W9, [X19 + 0x10]
	0x0239B4A0 CBZ X8, 0x239B558
	0x0239B4A4 LDR X21, [X8 + 0x10]
	0x0239B4A8 BL 0x1C16D44
	0x0239B4AC CBZ X21, 0x239B558
	0x0239B4B0 LDR X9, [X21 + 0x10]
	0x0239B4B4 MOV W8, W31
	0x0239B4B8 STR W31, [X19 + 0x38]
	0x0239B4BC STR X9, [X19 + 0x30]
	0x0239B4C0 B 0x239B504
	0x0239B4C4 LDR X8, [X19 + 0x40]
	0x0239B4C8 MOVN W9, 0x0
	0x0239B4CC STR W9, [X19 + 0x10]
	0x0239B4D0 CBNZ X8, 0x239B4E0
	0x0239B4D4 B 0x239B558
	0x0239B4D8 B.CS 0x239B55C
	0x0239B4DC ADD X8, X9, W8, 0x3, SXTW
	0x0239B4E0 LDR X21, [X8 + 0x20]
	0x0239B4E4 BL 0x1C16D44
	0x0239B4E8 STR X21, [X19 + 0x40]
	0x0239B4EC CBNZ X21, 0x239B51C
	0x0239B4F0 LDR W8, [X19 + 0x38]
	0x0239B4F4 LDR X9, [X19 + 0x30]
	0x0239B4F8 STR X31, [X19 + 0x40]
	0x0239B4FC ADD W8, W8, 0x1
	0x0239B500 STR W8, [X19 + 0x38]
	0x0239B504 CBZ X9, 0x239B558
	0x0239B508 LDR W10, [X9 + 0x18]
	0x0239B50C CMP W8, W10
	0x0239B510 B.LT 0x239B4D8
	0x0239B514 MOV W0, W31
	0x0239B518 B 0x239B548
	0x0239B51C LDP X1, X2, [X21 + 0x10]
	0x0239B520 STP X31, X31, [X31]
	0x0239B524 LDR X8, [X20 + 0x20]
	0x0239B528 ADD X0, X31, 0x0
	0x0239B52C LDR X8, [X8 + 0xC0]
	0x0239B530 LDR X3, [X8 + 0x58]
	0x0239B534 BL 0x2EE2840
	0x0239B538 LDR V0, [X31]
	0x0239B53C MOVZ W0, 0x1
	0x0239B540 STR W0, [X19 + 0x10]
	0x0239B544 STUR V0, [X19 + 0x18]
	0x0239B548 LDP X20, X19, [X31 + 0x20]
	0x0239B54C LDP X30, X21, [X31 + 0x10]
	0x0239B550 ADD X31, X31, 0x30
	0x0239B554 RET
	0x0239B558 BL 0x1C16F20
	0x0239B55C BL 0x1C16F28
	0x0239B560 LDP X8, X1, [X0 + 0x18]
	0x0239B564 MOV X0, X8
	0x0239B568 RET
	0x0239B56C STR X30, [X31 - 0x20]!
	0x0239B570 STP X20, X19, [X31 + 0x10]
	0x0239B574 ADRP X0, 0x1D58000
	0x0239B578 LDR X0, [X0 + 0xB40]
	0x0239B57C MOV X19, X1
	0x0239B580 BL 0x1C16D08
	0x0239B584 BL 0x1C16F10
	0x0239B588 MOV X1, X31
	0x0239B58C MOV X20, X0
	0x0239B590 BL 0x3380310
	0x0239B594 MOV X0, X20
	0x0239B598 MOV X1, X19
	0x0239B59C BL 0x1C16DEC
	0x0239B5A0 SUB X31, X31, 0x20
	0x0239B5A4 STR X30, [X31 + 0x10]
	0x0239B5A8 LDUR V0, [X0 + 0x18]
	0x0239B5AC STR V0, [X31]
	0x0239B5B0 LDR X8, [X1 + 0x20]
	0x0239B5B4 ADD X1, X31, 0x0
	0x0239B5B8 LDR X8, [X8 + 0xC0]
	0x0239B5BC LDR X0, [X8 + 0x50]
	0x0239B5C0 BL 0x1C16E04
	0x0239B5C4 LDR X30, [X31 + 0x10]
	0x0239B5C8 ADD X31, X31, 0x20
	0x0239B5CC RET
	0x0239B5D0 STP X30, X21, [X31 - 0x20]!
	0x0239B5D4 STP X20, X19, [X31 + 0x10]
	0x0239B5D8 MOV W20, W1
	0x0239B5DC MOV X1, X31
	0x0239B5E0 MOV X19, X2
	0x0239B5E4 MOV X21, X0
	0x0239B5E8 BL 0x33BDD8C
	0x0239B5EC LDR X8, [X19 + 0x20]
	0x0239B5F0 MOVZ W1, 0x4
	0x0239B5F4 LDR X8, [X8 + 0xC0]
	0x0239B5F8 LDR X8, [X8]
	0x0239B5FC LDR X19, [X8 + 0x80]
	0x0239B600 MOV X0, X19
	0x0239B604 BL 0x1C16D14
	0x0239B608 MOV X0, X21
	0x0239B60C MOV X1, X19
	0x0239B610 BL 0x1C16D18
	0x0239B614 STR W20, [X0]
	0x0239B618 LDP X20, X19, [X31 + 0x10]
	0x0239B61C LDP X30, X21, [X31], #0x20
	0x0239B620 RET
	0x0239B624 RET
	0x0239B628 STP X29, X30, [X31 - 0x60]!
	0x0239B62C STP X28, X27, [X31 + 0x10]
	0x0239B630 STP X26, X25, [X31 + 0x20]
	0x0239B634 STP X24, X23, [X31 + 0x30]
	0x0239B638 STP X22, X21, [X31 + 0x40]
	0x0239B63C STP X20, X19, [X31 + 0x50]
	0x0239B640 ADD X29, X31, 0x0
	0x0239B644 SUB X31, X31, 0x20
	0x0239B648 MRS X8, 0xC000
	0x0239B64C STUR X8, [X29 - 0x10]
	0x0239B650 LDR X8, [X8 + 0x28]
	0x0239B654 MOV X19, X1
	0x0239B658 MOV X20, X0
	0x0239B65C STUR X8, [X29 - 0x8]
	0x0239B660 LDR X8, [X19 + 0x20]!
	0x0239B664 LDR X8, [X8 + 0xC0]
	0x0239B668 LDP X9, X10, [X8 + 0x40]
	0x0239B66C LDR X11, [X8 + 0x50]
	0x0239B670 LDR W27, [X9 + 0xFC]
	0x0239B674 LDR W24, [X11 + 0xFC]
	0x0239B678 LDR W12, [X10 + 0xFC]
	0x0239B67C ADD X9, X31, 0x0
	0x0239B680 ADD X10, X27, 0xF
	0x0239B684 AND X10, X10, 0x1FFFFFFFF
	0x0239B688 SUB X28, X9, X10
	0x0239B68C ADD X31, X28, 0x0
	0x0239B690 ADD X9, X31, 0x0
	0x0239B694 SUB X22, X9, X10
	0x0239B698 ADD X31, X22, 0x0
	0x0239B69C ADD X10, X12, 0xF
	0x0239B6A0 ADD X9, X31, 0x0
	0x0239B6A4 AND X10, X10, 0x1FFFFFFFF
	0x0239B6A8 SUB X26, X9, X10
	0x0239B6AC STUR X12, [X29 - 0x18]
	0x0239B6B0 ADD X31, X26, 0x0
	0x0239B6B4 ADD X9, X31, 0x0
	0x0239B6B8 SUB X25, X9, X10
	0x0239B6BC ADD X31, X25, 0x0
	0x0239B6C0 ADD X10, X24, 0xF
	0x0239B6C4 ADD X9, X31, 0x0
	0x0239B6C8 AND X10, X10, 0x1FFFFFFFF
	0x0239B6CC SUB X23, X9, X10
	0x0239B6D0 ADD X31, X23, 0x0
	0x0239B6D4 LDR X8, [X8]
	0x0239B6D8 LDR X1, [X8 + 0x80]
	0x0239B6DC BL 0x1C16D18
	0x0239B6E0 LDR X8, [X19]
	0x0239B6E4 LDR W21, [X0]
	0x0239B6E8 MOV X0, X20
	0x0239B6EC LDR X8, [X8 + 0xC0]
	0x0239B6F0 LDR X8, [X8]
	0x0239B6F4 LDR X8, [X8 + 0x80]
	0x0239B6F8 ADD X1, X8, 0x40
	0x0239B6FC BL 0x1C16D18
	0x0239B700 CMP W21, 0x1
	0x0239B704 B.EQ 0x239B790
	0x0239B708 CBNZ W21, 0x239B9A0
	0x0239B70C LDR X8, [X19]
	0x0239B710 STUR X24, [X29 - 0x20]
	0x0239B714 LDR X21, [X0]
	0x0239B718 MOVZ W1, 0x4
	0x0239B71C LDR X8, [X8 + 0xC0]
	0x0239B720 LDR X8, [X8]
	0x0239B724 LDR X24, [X8 + 0x80]
	0x0239B728 MOV X0, X24
	0x0239B72C BL 0x1C16D14
	0x0239B730 MOV X0, X20
	0x0239B734 MOV X1, X24
	0x0239B738 BL 0x1C16D18
	0x0239B73C MOVN W8, 0x0
	0x0239B740 STR W8, [X0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move W8, [X0+16]
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Move X23, [X0+32]
	010 Move X9, -25612288
	011 Add X9, X9, 3310
	012 NotImplemented "Instruction ADR not yet implemented."
	013 Move W11, [X9]
	014 Add X10, X10, X11
	015 Move X19, X0
	016 Move X20, X1
	017 CallNoReturn X10
	018 Move TEMP, 0
	019 Not TEMP
	020 Move W8, TEMP
	021 Move [X19+16], W8
	022 Move TEMP, 0
	023 Not TEMP
	024 Move W8, TEMP
	025 Move [X19+16], W8
	026 Move X8, [X20+32]
	027 Move X8, [X8+192]
	028 Move X0, [X8+16]
	029 Move W8, [X0+309]
	030 Move TEMP, X8
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfEqual {35}
	034 Call 0x1C5D684
	035 Call 0x1C17F10
	036 Move X8, [X20+32]
	037 Move X21, X0
	038 Move X8, [X8+192]
	039 Move X1, [X8+24]
	040 Call 0x2375C48, X0
	041 Move [X19+40], X21
	042 Move X8, [X20+32]
	043 Move X8, [X8+192]
	044 Move X0, [X8+32]
	045 Move W8, [X0+309]
	046 Move TEMP, X8
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfEqual {51}
	050 Call 0x1C5D684
	051 Call 0x1C17F10
	052 Move X8, [X20+32]
	053 Move X22, X0
	054 Move X8, [X8+192]
	055 Move X1, [X8+40]
	056 Call Stack`1<Object>..ctor, X0
	057 Compare X21, 0
	058 JumpIfEqual {236}
	059 Move [X21+16], X22
	060 Move X8, [X20+32]
	061 Move X22, [X19+40]
	062 Move X8, [X8+192]
	063 Move X0, [X8+32]
	064 Move W8, [X0+309]
	065 Move TEMP, X8
	066 And TEMP, TEMP, 1
	067 Compare TEMP, 1
	068 JumpIfEqual {70}
	069 Call 0x1C5D684
	070 Call 0x1C17F10
	071 Move X8, [X20+32]
	072 Move X21, X0
	073 Move X8, [X8+192]
	074 Move X1, [X8+40]
	075 Call Stack`1<Object>..ctor, X0
	076 Compare X22, 0
	077 JumpIfEqual {236}
	078 Move [X22+24], X21
	079 Move X8, [X20+32]
	080 Move X21, [X19+40]
	081 Move X8, [X8+192]
	082 Move X0, [X8+56]
	083 Move W8, [X0+309]
	084 Move TEMP, X8
	085 And TEMP, TEMP, 1
	086 Compare TEMP, 1
	087 JumpIfEqual {89}
	088 Call 0x1C5D684
	089 Call 0x1C17F10
	090 Move X8, [X20+32]
	091 Move X1, X21
	092 Move X22, X0
	093 Move X8, [X8+192]
	094 Move X2, [X8+48]
	095 Move X3, [X8+64]
	096 Call Action`1<Object>..ctor, X0, X1, X2
	097 Move [X19+48], X22
	098 Move X8, [X20+32]
	099 Move X21, [X19+40]
	100 Move X8, [X8+192]
	101 Move X0, [X8+56]
	102 Move W8, [X0+309]
	103 Move TEMP, X8
	104 And TEMP, TEMP, 1
	105 Compare TEMP, 1
	106 JumpIfEqual {108}
	107 Call 0x1C5D684
	108 Call 0x1C17F10
	109 Move X8, [X20+32]
	110 Move X1, X21
	111 Move X20, X0
	112 Move X8, [X8+192]
	113 Move X3, [X8+64]
	114 Move X2, [X8+72]
	115 Call Action`1<Object>..ctor, X0, X1, X2
	116 Move [X19+56], X20
	117 Compare X23, 0
	118 JumpIfEqual {236}
	119 Move X8, [X23+32]
	120 Compare X8, 0
	121 JumpIfEqual {228}
	122 Move W0, 1
	123 Move [X19+24], X8
	124 Move [X19+16], W0
	125 Move TEMP, 0
	126 Not TEMP
	127 Move W8, TEMP
	128 Move [X19+16], W8
	129 Compare X23, 0
	130 JumpIfEqual {236}
	131 Move X8, [X19+48]
	132 Compare X8, 0
	133 JumpIfEqual {236}
	134 Move X1, [X23+32]
	135 Move X9, [X8+24]
	136 Move X0, [X8+64]
	137 Move X2, [X8+40]
	138 NotImplemented "Instruction BLR not yet implemented."
	139 Move X8, [X19+56]
	140 Compare X8, 0
	141 JumpIfEqual {236}
	142 Move X1, [X23+32]
	143 Move X9, [X8+24]
	144 Move X0, [X8+64]
	145 Move X2, [X8+40]
	146 NotImplemented "Instruction BLR not yet implemented."
	147 Move X8, [X19+40]
	148 Compare X8, 0
	149 JumpIfEqual {236}
	150 Move X9, [X20+32]
	151 Move X0, [X8+16]
	152 Move X9, [X9+192]
	153 Move X1, [X9+96]
	154 Call Enumerable.Any, X0
	155 Move X8, [X19+40]
	156 Compare X8, 0
	157 JumpIfEqual {236}
	158 Move TEMP, X0
	159 And TEMP, TEMP, 1
	160 Compare TEMP, 1
	161 JumpIfNotEqual {188}
	162 Move X0, [X8+16]
	163 Compare X0, 0
	164 JumpIfEqual {236}
	165 Move X8, [X20+32]
	166 Move X8, [X8+192]
	167 Move X1, [X8+112]
	168 Call Stack`1<Object>.Pop, X0
	169 Move X8, [X19+48]
	170 Compare X8, 0
	171 JumpIfEqual {236}
	172 Move X20, X0
	173 Move X9, [X8+24]
	174 Move X0, [X8+64]
	175 Move X2, [X8+40]
	176 Move X1, X20
	177 NotImplemented "Instruction BLR not yet implemented."
	178 Move X8, [X19+56]
	179 Compare X8, 0
	180 JumpIfEqual {236}
	181 Move X9, [X8+24]
	182 Move X0, [X8+64]
	183 Move X2, [X8+40]
	184 Move X1, X20
	185 NotImplemented "Instruction BLR not yet implemented."
	186 Move W8, 2
	187 Move [X19+24], X20
	188 Move X9, [X20+32]
	189 Move X0, [X8+24]
	190 Move X9, [X9+192]
	191 Move X1, [X9+96]
	192 Call Enumerable.Any, X0
	193 Move TEMP, X0
	194 And TEMP, TEMP, 1
	195 Compare TEMP, 1
	196 JumpIfNotEqual {228}
	197 Move X8, [X19+40]
	198 Compare X8, 0
	199 JumpIfEqual {236}
	200 Move X0, [X8+24]
	201 Compare X0, 0
	202 JumpIfEqual {236}
	203 Move X8, [X20+32]
	204 Move X8, [X8+192]
	205 Move X1, [X8+112]
	206 Call Stack`1<Object>.Pop, X0
	207 Move X8, [X19+48]
	208 Compare X8, 0
	209 JumpIfEqual {236}
	210 Move X20, X0
	211 Move X9, [X8+24]
	212 Move X0, [X8+64]
	213 Move X2, [X8+40]
	214 Move X1, X20
	215 NotImplemented "Instruction BLR not yet implemented."
	216 Move X8, [X19+56]
	217 Compare X8, 0
	218 JumpIfEqual {236}
	219 Move X9, [X8+24]
	220 Move X0, [X8+64]
	221 Move X2, [X8+40]
	222 Move X1, X20
	223 NotImplemented "Instruction BLR not yet implemented."
	224 Move [X19+24], X20
	225 Move W8, 3
	226 Move [X19+16], W8
	227 Move W0, 1
	228 Move W0, W31
	229 Move X20, [X31+32]
	230 Move X19, [X31+40]
	231 Move X22, [X31+16]
	232 Move X21, [X31+24]
	233 Move X30, [X31+48]
	234 Move X23, [X31+56]
	235 Return X0
	236 Call 0x1C17F20

Method: UnityEngine.ProBuilder.KdTree.KdTreeNode`2<TKey, TValue> System.Collections.Generic.IEnumerator<UnityEngine.ProBuilder.KdTree.KdTreeNode<TKey,TValue>>.get_Current()

Disassembly:
	0x0239B744 CBZ X21, 0x239BB34
	0x0239B748 LDR X21, [X21 + 0x10]

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void System.Collections.IEnumerator.Reset()

Disassembly:
	0x0239B74C BL 0x1C16D44
	0x0239B750 CBZ X21, 0x239BB34
	0x0239B754 LDR X8, [X19]
	0x0239B758 LDR X21, [X21 + 0x10]
	0x0239B75C MOVZ W1, 0x8
	0x0239B760 LDR X8, [X8 + 0xC0]
	0x0239B764 LDR X8, [X8]
	0x0239B768 LDR X8, [X8 + 0x80]
	0x0239B76C ADD X24, X8, 0x60
	0x0239B770 MOV X0, X24
	0x0239B774 BL 0x1C16D14
	0x0239B778 MOV X0, X20
	0x0239B77C MOV X1, X24

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X0, 0x1D59000
	005 Move X0, [X0+2880]
	006 Move X19, X1
	007 Call 0x1C17D08
	008 Call 0x1C17F10
	009 Move X1, X31
	010 Move X20, X0
	011 Call NotSupportedException..ctor, X0
	012 Move X0, X20
	013 Move X1, X19
	014 Call 0x1C17DEC

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x0239B780 BL 0x1C16D18
	0x0239B784 MOV W24, W31

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

