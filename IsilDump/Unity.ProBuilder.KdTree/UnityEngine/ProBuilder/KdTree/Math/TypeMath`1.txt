Type: UnityEngine.ProBuilder.KdTree.Math.TypeMath`1

Method: System.Int32 Compare(T a, T b)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Boolean AreEqual(T a, T b)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Boolean AreEqual(T[] a, T[] b)

Disassembly:
	0x027181B4 CBZ W8, 0x2718210
	0x027181B8 LDR X0, [X19]
	0x027181BC LDRB W8, [X0 + 0x135]
	0x027181C0 TBNZ X8, 0x0, 0x27181C8
	0x027181C4 BL 0x1C5C684
	0x027181C8 LDR X8, [X23]
	0x027181CC LDR X9, [X0 + 0xC0]
	0x027181D0 LDR W10, [X8 + 0xE0]
	0x027181D4 LDR X21, [X9 + 0x10]
	0x027181D8 CBNZ W10, 0x27181E4
	0x027181DC MOV X0, X8
	0x027181E0 BL 0x1C16DFC
	0x027181E4 MOV X0, X21
	0x027181E8 MOV X1, X31
	0x027181EC BL 0x338C698
	0x027181F0 CBZ X0, 0x27188A8
	0x027181F4 LDR X8, [X0]
	0x027181F8 LDR X9, [X8 + 0x438]
	0x027181FC LDR X1, [X8 + 0x440]
	0x02718200 BLR X9
	0x02718204 CMP W0, 0x1
	0x02718208 CSET W21, NE
	0x0271820C B 0x2718214
	0x02718210 MOV W21, W31
	0x02718214 LDR X0, [X19]
	0x02718218 LDRB W8, [X0 + 0x135]
	0x0271821C TBNZ X8, 0x0, 0x2718224
	0x02718220 BL 0x1C5C684
	0x02718224 LDR X8, [X0 + 0xC0]
	0x02718228 ADRP X22, 0x19E5000
	0x0271822C LDR X0, [X8 + 0x8]
	0x02718230 LDRB W8, [X0 + 0x135]
	0x02718234 LDR X22, [X22 + 0x968]
	0x02718238 TBNZ X8, 0x0, 0x2718240
	0x0271823C BL 0x1C5C684
	0x02718240 LDR X8, [X0 + 0xB8]
	0x02718244 STRB W21, [X8 + 0x5]
	0x02718248 LDR X0, [X23]
	0x0271824C LDR X21, [X22]
	0x02718250 LDR W8, [X0 + 0xE0]
	0x02718254 CBNZ W8, 0x271825C
	0x02718258 BL 0x1C16DFC
	0x0271825C MOV X0, X21
	0x02718260 MOV X1, X31
	0x02718264 BL 0x338C698
	0x02718268 MOV X1, X0
	0x0271826C MOV X0, X20
	0x02718270 MOV X2, X31

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Compare X1, 0
	009 JumpIfEqual {52}
	010 Move X19, X2
	011 Compare X2, 0
	012 JumpIfEqual {52}
	013 Move X8, [X1+24]
	014 Move W9, [X19+24]
	015 Move X20, X1
	016 NotImplemented "Instruction CMP not yet implemented."
	017 NotImplemented "Instruction CMP not yet implemented."
	018 Move X21, X0
	019 Move X22, X31
	020 And X8, X8, 0
	021 Add X23, X20, 32
	022 Add X24, X19, 32
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move W8, [X19+24]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X8, [X21]
	027 Move V0, [X23]
	028 Move V1, [X24]
	029 Move X0, X21
	030 Move X9, [X8+616]
	031 Move X1, [X8+624]
	032 NotImplemented "Instruction BLR not yet implemented."
	033 Move TEMP, X0
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfNotEqual {42}
	037 Move W8, [X20+24]
	038 Add X22, X22, 1
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move W0, W31
	041 Move W0, 1
	042 Move X20, [X31+48]
	043 Move X19, [X31+56]
	044 Move X22, [X31+32]
	045 Move X21, [X31+40]
	046 Move X24, [X31+16]
	047 Move X23, [X31+24]
	048 And W0, W0, 1
	049 Move X30, [X31+64]
	050 Return X0
	051 Call 0x1C17F28
	052 Call 0x1C17F20

Method: T get_MinValue()

Disassembly:
	

ISIL:
No ISIL was generated
Method: T get_MaxValue()

Disassembly:
	

ISIL:
No ISIL was generated
Method: T Min(T a, T b)

Disassembly:
	0x02718274 BL 0x3395194
	0x02718278 LDR X8, [X19]
	0x0271827C AND W21, W0, 0x1
	0x02718280 LDRB W9, [X8 + 0x135]
	0x02718284 TBNZ X9, 0x0, 0x2718294
	0x02718288 MOV X0, X8
	0x0271828C BL 0x1C5C684
	0x02718290 MOV X8, X0
	0x02718294 LDR X8, [X8 + 0xC0]
	0x02718298 ADRP X22, 0x1A03000
	0x0271829C LDR X0, [X8 + 0x8]
	0x027182A0 LDRB W8, [X0 + 0x135]
	0x027182A4 LDR X22, [X22 + 0xB60]

ISIL:
	001 Move [X31-32], D9
	002 Move [X31-24], D8
	003 Move [X31+16], X30
	004 Move X8, [X0]
	005 Move V8, V1
	006 Move V9, V0
	007 Move X9, [X8+600]
	008 Move X1, [X8+608]
	009 NotImplemented "Instruction BLR not yet implemented."
	010 Move X30, [X31+16]
	011 NotImplemented "Instruction CMP not yet implemented."
	012 NotImplemented "Instruction FCSEL not yet implemented."
	013 Move D9, [X31+32]
	014 Move D8, [X31+40]
	015 Return X0

Method: T Max(T a, T b)

Disassembly:
	0x027182A8 TBNZ X8, 0x0, 0x27182B0
	0x027182AC BL 0x1C5C684
	0x027182B0 LDR X8, [X0 + 0xB8]
	0x027182B4 MOV X1, X31
	0x027182B8 STRB W21, [X8 + 0x9]
	0x027182BC LDR X0, [X22]
	0x027182C0 BL 0x338C698
	0x027182C4 MOV X1, X0
	0x027182C8 MOV X0, X20
	0x027182CC MOV X2, X31
	0x027182D0 BL 0x3395194
	0x027182D4 LDR X8, [X19]
	0x027182D8 AND W21, W0, 0x1

ISIL:
	001 Move [X31-32], D9
	002 Move [X31-24], D8
	003 Move [X31+16], X30
	004 Move X8, [X0]
	005 Move V8, V1
	006 Move V9, V0
	007 Move X9, [X8+600]
	008 Move X1, [X8+608]
	009 NotImplemented "Instruction BLR not yet implemented."
	010 Move X30, [X31+16]
	011 NotImplemented "Instruction CMP not yet implemented."
	012 NotImplemented "Instruction FCSEL not yet implemented."
	013 Move D9, [X31+32]
	014 Move D8, [X31+40]
	015 Return X0

Method: T get_Zero()

Disassembly:
	

ISIL:
No ISIL was generated
Method: T get_NegativeInfinity()

Disassembly:
	

ISIL:
No ISIL was generated
Method: T get_PositiveInfinity()

Disassembly:
	

ISIL:
No ISIL was generated
Method: T Add(T a, T b)

Disassembly:
	

ISIL:
No ISIL was generated
Method: T Subtract(T a, T b)

Disassembly:
	

ISIL:
No ISIL was generated
Method: T Multiply(T a, T b)

Disassembly:
	

ISIL:
No ISIL was generated
Method: T DistanceSquaredBetweenPoints(T[] a, T[] b)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Void .ctor()

Disassembly:
	0x027182DC LDRB W9, [X8 + 0x135]
	0x027182E0 TBNZ X9, 0x0, 0x27182F0

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

