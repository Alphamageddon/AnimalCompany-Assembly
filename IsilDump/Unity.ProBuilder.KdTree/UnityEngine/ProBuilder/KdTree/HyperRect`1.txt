Type: UnityEngine.ProBuilder.KdTree.HyperRect`1

Method: T[] get_MinPoint()

Disassembly:
	0x02DE19A0 LDR X8, [X21]
	0x02DE19A4 LDR W8, [X8 + 0x104]

ISIL:
	001 Move X0, [X0]
	002 Return X0

Method: System.Void set_MinPoint(T[] value)

Disassembly:
	0x02DE19A8 NOP
	0x02DE19AC MADD X8, X28, X8, X21
	0x02DE19B0 ADD X1, X8, 0x20
	0x02DE19B4 MOV X0, X22
	0x02DE19B8 MOV X2, X23
	0x02DE19BC BL 0x3EB1AC0
	0x02DE19C0 CBZ X26, 0x2DE1A40
	0x02DE19C4 LDR W8, [X26 + 0x18]
	0x02DE19C8 CMP X28, X8
	0x02DE19CC B.CS 0x2DE1A7C
	0x02DE19D0 LDR X8, [X26]
	0x02DE19D4 MOV X1, X22
	0x02DE19D8 MOV X2, X23
	0x02DE19DC LDR W8, [X8 + 0x104]
	0x02DE19E0 NOP
	0x02DE19E4 MADD X8, X28, X8, X26
	0x02DE19E8 ADD X0, X8, 0x20
	0x02DE19EC BL 0x3EB1AC0
	0x02DE19F0 LDR X0, [X19 + 0x20]
	0x02DE19F4 LDRB W8, [X0 + 0x135]
	0x02DE19F8 TBNZ X8, 0x0, 0x2DE1A00
	0x02DE19FC BL 0x1C5C684
	0x02DE1A00 LDR X8, [X0 + 0xC0]
	0x02DE1A04 LDR X0, [X8 + 0x48]
	0x02DE1A08 LDRB W8, [X0 + 0x135]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X1, 0
	005 JumpIfEqual {35}
	006 Move X20, X0
	007 Move X0, [X2+32]
	008 Move X19, X1
	009 Move W8, [X0+309]
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {15}
	014 Call 0x1C5D684
	015 Move X8, [X0+192]
	016 Move X0, [X8+16]
	017 Move W8, [X0+309]
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {23}
	022 Call 0x1C5D684
	023 Move W1, [X19+24]
	024 Call 0x1C17D6C
	025 Move X1, X0
	026 Move [X20], X0
	027 Move X0, X19
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move W2, W31
	031 Move X3, X31
	032 Move X30, [X31+32]
	033 Call Array.CopyTo, X0, X1, X2
	034 Return 
	035 Call 0x1C17F20

Method: T[] get_MaxPoint()

Disassembly:
	0x02DE1A0C TBNZ X8, 0x0, 0x2DE1A14
	0x02DE1A10 BL 0x1C5C684

ISIL:
	001 Move X0, [X0+8]
	002 Return X0

Method: System.Void set_MaxPoint(T[] value)

Disassembly:
	0x02DE1A14 LDR W8, [X26 + 0x18]
	0x02DE1A18 CMP X28, X8
	0x02DE1A1C B.CS 0x2DE1A7C
	0x02DE1A20 LDR W24, [X21 + 0x18]
	0x02DE1A24 ADD X28, X28, 0x1
	0x02DE1A28 CMP X28, W24, SXTW
	0x02DE1A2C B.LT 0x2DE16AC
	0x02DE1A30 B 0x2DE1A44
	0x02DE1A34 LDUR X8, [X29 - 0x30]
	0x02DE1A38 LDR X8, [X8 + 0x8]
	0x02DE1A3C CBNZ X8, 0x2DE1818
	0x02DE1A40 BL 0x1C16F20
	0x02DE1A44 LDUR X8, [X29 - 0x38]
	0x02DE1A48 LDR X8, [X8 + 0x28]
	0x02DE1A4C LDUR X9, [X29 - 0x8]
	0x02DE1A50 CMP X8, X9
	0x02DE1A54 B.NE 0x2DE1A80
	0x02DE1A58 MOV X0, X26
	0x02DE1A5C ADD X31, X29, 0x0
	0x02DE1A60 LDP X20, X19, [X31 + 0x50]
	0x02DE1A64 LDP X22, X21, [X31 + 0x40]
	0x02DE1A68 LDP X24, X23, [X31 + 0x30]
	0x02DE1A6C LDP X26, X25, [X31 + 0x20]
	0x02DE1A70 LDP X28, X27, [X31 + 0x10]
	0x02DE1A74 LDP X29, X30, [X31], #0x60

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X1, 0
	005 JumpIfEqual {35}
	006 Move X20, X0
	007 Move X0, [X2+32]
	008 Move X19, X1
	009 Move W8, [X0+309]
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {15}
	014 Call 0x1C5D684
	015 Move X8, [X0+192]
	016 Move X0, [X8+16]
	017 Move W8, [X0+309]
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {23}
	022 Call 0x1C5D684
	023 Move W1, [X19+24]
	024 Call 0x1C17D6C
	025 Move X1, X0
	026 Move [X20+8], X0
	027 Move X0, X19
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move W2, W31
	031 Move X3, X31
	032 Move X30, [X31+32]
	033 Call Array.CopyTo, X0, X1, X2
	034 Return 
	035 Call 0x1C17F20

Method: UnityEngine.ProBuilder.KdTree.HyperRect`1<T> Infinite(System.Int32 dimensions, UnityEngine.ProBuilder.KdTree.ITypeMath`1<T> math)

Disassembly:
	0x02DE1A78 RET
	0x02DE1A7C BL 0x1C16F28
	0x02DE1A80 BL 0x3EB1B20
	0x02DE1A84 SUB X31, X31, 0x40
	0x02DE1A88 STP X31, X30, [X31 + 0x8]
	0x02DE1A8C STP X22, X21, [X31 + 0x20]
	0x02DE1A90 STP X20, X19, [X31 + 0x30]
	0x02DE1A94 STR X31, [X31]
	0x02DE1A98 LDR X8, [X1 + 0x20]
	0x02DE1A9C MOV X19, X1
	0x02DE1AA0 MOV X20, X0
	0x02DE1AA4 ADD X9, X8, 0x135
	0x02DE1AA8 LDRH W9, [X9]
	0x02DE1AAC TBNZ X9, 0x0, 0x2DE1AC8
	0x02DE1AB0 MOV X0, X8
	0x02DE1AB4 BL 0x1C5C684
	0x02DE1AB8 LDR X8, [X19 + 0x20]
	0x02DE1ABC ADD X9, X8, 0x135
	0x02DE1AC0 LDRH W9, [X9]
	0x02DE1AC4 B 0x2DE1ACC
	0x02DE1AC8 MOV X0, X8
	0x02DE1ACC LDR X10, [X0 + 0xC0]
	0x02DE1AD0 LDR X10, [X10 + 0x30]
	0x02DE1AD4 LDR X21, [X10]
	0x02DE1AD8 TBNZ X9, 0x0, 0x2DE1AE8
	0x02DE1ADC MOV X0, X8
	0x02DE1AE0 BL 0x1C5C684
	0x02DE1AE4 MOV X8, X0
	0x02DE1AE8 LDR X8, [X8 + 0xC0]
	0x02DE1AEC MOV X0, X20
	0x02DE1AF0 LDR X1, [X8 + 0x30]
	0x02DE1AF4 BLR X21
	0x02DE1AF8 LDR X8, [X19 + 0x20]
	0x02DE1AFC MOV X21, X0
	0x02DE1B00 ADD X9, X8, 0x135
	0x02DE1B04 LDRH W9, [X9]
	0x02DE1B08 TBNZ X9, 0x0, 0x2DE1B24
	0x02DE1B0C MOV X0, X8
	0x02DE1B10 BL 0x1C5C684
	0x02DE1B14 LDR X8, [X19 + 0x20]
	0x02DE1B18 ADD X9, X8, 0x135
	0x02DE1B1C LDRH W9, [X9]
	0x02DE1B20 B 0x2DE1B28
	0x02DE1B24 MOV X0, X8
	0x02DE1B28 LDR X10, [X0 + 0xC0]
	0x02DE1B2C LDR X10, [X10 + 0x18]
	0x02DE1B30 LDR X22, [X10]
	0x02DE1B34 TBNZ X9, 0x0, 0x2DE1B44
	0x02DE1B38 MOV X0, X8
	0x02DE1B3C BL 0x1C5C684
	0x02DE1B40 MOV X8, X0
	0x02DE1B44 LDR X8, [X8 + 0xC0]
	0x02DE1B48 ADD X0, X31, 0x0
	0x02DE1B4C MOV X1, X21
	0x02DE1B50 LDR X2, [X8 + 0x18]
	0x02DE1B54 BLR X22
	0x02DE1B58 LDR X8, [X19 + 0x20]
	0x02DE1B5C ADD X9, X8, 0x135
	0x02DE1B60 LDRH W9, [X9]
	0x02DE1B64 TBNZ X9, 0x0, 0x2DE1B80
	0x02DE1B68 MOV X0, X8
	0x02DE1B6C BL 0x1C5C684
	0x02DE1B70 LDR X8, [X19 + 0x20]
	0x02DE1B74 ADD X9, X8, 0x135
	0x02DE1B78 LDRH W9, [X9]
	0x02DE1B7C B 0x2DE1B84
	0x02DE1B80 MOV X0, X8
	0x02DE1B84 LDR X10, [X0 + 0xC0]
	0x02DE1B88 LDR X10, [X10 + 0x50]
	0x02DE1B8C LDR X21, [X10]
	0x02DE1B90 TBNZ X9, 0x0, 0x2DE1BA0
	0x02DE1B94 MOV X0, X8
	0x02DE1B98 BL 0x1C5C684
	0x02DE1B9C MOV X8, X0
	0x02DE1BA0 LDR X8, [X8 + 0xC0]
	0x02DE1BA4 MOV X0, X20
	0x02DE1BA8 LDR X1, [X8 + 0x50]
	0x02DE1BAC BLR X21
	0x02DE1BB0 LDR X8, [X19 + 0x20]
	0x02DE1BB4 MOV X20, X0
	0x02DE1BB8 ADD X9, X8, 0x135
	0x02DE1BBC LDRH W9, [X9]
	0x02DE1BC0 TBNZ X9, 0x0, 0x2DE1BDC
	0x02DE1BC4 MOV X0, X8
	0x02DE1BC8 BL 0x1C5C684
	0x02DE1BCC LDR X8, [X19 + 0x20]
	0x02DE1BD0 ADD X9, X8, 0x135
	0x02DE1BD4 LDRH W9, [X9]
	0x02DE1BD8 B 0x2DE1BE0
	0x02DE1BDC MOV X0, X8
	0x02DE1BE0 LDR X10, [X0 + 0xC0]
	0x02DE1BE4 LDR X10, [X10 + 0x28]
	0x02DE1BE8 LDR X19, [X10]
	0x02DE1BEC TBNZ X9, 0x0, 0x2DE1BFC
	0x02DE1BF0 MOV X0, X8
	0x02DE1BF4 BL 0x1C5C684
	0x02DE1BF8 MOV X8, X0
	0x02DE1BFC LDR X8, [X8 + 0xC0]
	0x02DE1C00 ADD X0, X31, 0x0
	0x02DE1C04 MOV X1, X20
	0x02DE1C08 LDR X2, [X8 + 0x28]
	0x02DE1C0C BLR X19
	0x02DE1C10 LDP X0, X1, [X31]
	0x02DE1C14 LDP X20, X19, [X31 + 0x30]
	0x02DE1C18 LDP X22, X21, [X31 + 0x20]
	0x02DE1C1C LDR X30, [X31 + 0x10]
	0x02DE1C20 ADD X31, X31, 0x40
	0x02DE1C24 RET
	0x02DE1C28 RET
	0x02DE1C2C RET
	0x02DE1C30 RET
	0x02DE1C34 RET
	0x02DE1C38 STR X30, [X31 - 0x20]!
	0x02DE1C3C STP X20, X19, [X31 + 0x10]
	0x02DE1C40 ADRP X19, 0x15FA000
	0x02DE1C44 ADRP X20, 0x133D000
	0x02DE1C48 LDRB W8, [X19 + 0x9B7]
	0x02DE1C4C LDR X20, [X20 + 0xF38]
	0x02DE1C50 TBNZ X8, 0x0, 0x2DE1C68
	0x02DE1C54 ADRP X0, 0x133D000
	0x02DE1C58 LDR X0, [X0 + 0xF38]
	0x02DE1C5C BL 0x1C16CF4
	0x02DE1C60 MOVZ W8, 0x1
	0x02DE1C64 STRB W8, [X19 + 0x9B7]
	0x02DE1C68 LDR X19, [X20]
	0x02DE1C6C LDR X8, [X19 + 0x38]
	0x02DE1C70 CBNZ X8, 0x2DE1C80
	0x02DE1C74 MOV X0, X19
	0x02DE1C78 BL 0x1C5C6E0
	0x02DE1C7C LDR X8, [X19 + 0x38]
	0x02DE1C80 LDR X0, [X8 + 0x10]
	0x02DE1C84 LDRB W8, [X0 + 0x135]
	0x02DE1C88 TBNZ X8, 0x0, 0x2DE1C90
	0x02DE1C8C BL 0x1C5C684
	0x02DE1C90 LDR W8, [X0 + 0xE0]
	0x02DE1C94 CBNZ W8, 0x2DE1C9C
	0x02DE1C98 BL 0x1C16DFC
	0x02DE1C9C LDR X8, [X19 + 0x38]
	0x02DE1CA0 LDR X0, [X8 + 0x10]
	0x02DE1CA4 LDRB W8, [X0 + 0x135]
	0x02DE1CA8 TBNZ X8, 0x0, 0x2DE1CB0
	0x02DE1CAC BL 0x1C5C684
	0x02DE1CB0 LDR X8, [X0 + 0xB8]
	0x02DE1CB4 LDP X20, X19, [X31 + 0x10]
	0x02DE1CB8 LDR X0, [X8]
	0x02DE1CBC LDR X30, [X31], #0x20
	0x02DE1CC0 RET
	0x02DE1CC4 RET
	0x02DE1CC8 RET
	0x02DE1CCC STR X30, [X31 - 0x20]!
	0x02DE1CD0 STP X20, X19, [X31 + 0x10]
	0x02DE1CD4 ADRP X19, 0x15FA000
	0x02DE1CD8 ADRP X20, 0x133D000
	0x02DE1CDC LDRB W8, [X19 + 0x9B8]
	0x02DE1CE0 LDR X20, [X20 + 0xF38]
	0x02DE1CE4 TBNZ X8, 0x0, 0x2DE1CFC
	0x02DE1CE8 ADRP X0, 0x133D000
	0x02DE1CEC LDR X0, [X0 + 0xF38]
	0x02DE1CF0 BL 0x1C16CF4
	0x02DE1CF4 MOVZ W8, 0x1
	0x02DE1CF8 STRB W8, [X19 + 0x9B8]
	0x02DE1CFC LDR X19, [X20]
	0x02DE1D00 LDR X8, [X19 + 0x38]
	0x02DE1D04 CBNZ X8, 0x2DE1D14
	0x02DE1D08 MOV X0, X19
	0x02DE1D0C BL 0x1C5C6E0

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+8], X31
	003 Move [X31+16], X30
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move [X31], X31
	011 Move X8, [X2+32]
	012 Move X19, X2
	013 Move X20, X1
	014 Move W23, W0
	015 Move W9, [X8+309]
	016 Move TEMP, X9
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {23}
	020 Move X0, X8
	021 Call 0x1C5D684
	022 Move X8, X0
	023 Move X8, [X8+192]
	024 Move X0, [X8+16]
	025 Move W8, [X0+309]
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {31}
	030 Call 0x1C5D684
	031 Move W1, W23
	032 Call 0x1C17D6C
	033 Move X8, [X19+32]
	034 Move X21, X0
	035 Move W9, [X8+309]
	036 Move TEMP, X9
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfEqual {43}
	040 Move X0, X8
	041 Call 0x1C5D684
	042 Move X8, X0
	043 Move X8, [X8+192]
	044 Add X0, X31, 0
	045 Move X1, X21
	046 Move X2, [X8+24]
	047 Call 0x2DE19A8, X0, X1
	048 Move X0, [X19+32]
	049 Move W8, [X0+309]
	050 Move TEMP, X8
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfEqual {55}
	054 Call 0x1C5D684
	055 Move X8, [X0+192]
	056 Move X0, [X8+16]
	057 Move W8, [X0+309]
	058 Move TEMP, X8
	059 And TEMP, TEMP, 1
	060 Compare TEMP, 1
	061 JumpIfEqual {63}
	062 Call 0x1C5D684
	063 Move W1, W23
	064 Call 0x1C17D6C
	065 Move X8, [X19+32]
	066 Move X21, X0
	067 Move W9, [X8+309]
	068 Move TEMP, X9
	069 And TEMP, TEMP, 1
	070 Compare TEMP, 1
	071 JumpIfEqual {75}
	072 Move X0, X8
	073 Call 0x1C5D684
	074 Move X8, X0
	075 Move X8, [X8+192]
	076 Add X0, X31, 0
	077 Move X1, X21
	078 Move X2, [X8+40]
	079 Call 0x2DE1A14, X0, X1
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Move X22, [X31]
	082 Move X21, [X31+8]
	083 Move X24, X31
	084 Move W23, W23
	085 Move X0, [X19+32]
	086 Move W8, [X0+309]
	087 Move TEMP, X8
	088 And TEMP, TEMP, 1
	089 Compare TEMP, 1
	090 JumpIfEqual {92}
	091 Call 0x1C5D684
	092 Compare X20, 0
	093 JumpIfEqual {206}
	094 Move X0, [X19+32]
	095 Move W8, [X0+309]
	096 Move TEMP, X8
	097 And TEMP, TEMP, 1
	098 Compare TEMP, 1
	099 JumpIfEqual {101}
	100 Call 0x1C5D684
	101 Move X8, [X0+192]
	102 Move X1, [X8+56]
	103 Move W8, [X1+309]
	104 Move TEMP, X8
	105 And TEMP, TEMP, 1
	106 Compare TEMP, 1
	107 JumpIfEqual {111}
	108 Move X0, X1
	109 Call 0x1C5D684
	110 Move X1, X0
	111 Move X8, [X20]
	112 NotImplemented "Instruction LDRH not yet implemented."
	113 Compare X9, 0
	114 JumpIfEqual {121}
	115 Move X10, [X8+176]
	116 Add X10, X10, 8
	117 NotImplemented "Instruction LDUR not yet implemented."
	118 NotImplemented "Instruction CMP not yet implemented."
	119 Subtract X9, X9, 1
	120 Add X10, X10, 16
	121 Move W2, 11
	122 Move X0, X20
	123 Call 0x1C5D788
	124 Move W9, [X10]
	125 Add W9, W9, 11
	126 Add X8, X8, W9
	127 Add X0, X8, 312
	128 Move X8, [X0]
	129 Move X1, [X0+8]
	130 Move X0, X20
	131 NotImplemented "Instruction BLR not yet implemented."
	132 Compare X22, 0
	133 JumpIfEqual {206}
	134 Move W8, [X22+24]
	135 NotImplemented "Instruction CMP not yet implemented."
	136 Add X8, X22, X24
	137 Move [X8+32], S0
	138 Move X0, [X19+32]
	139 Add X8, X0, 309
	140 NotImplemented "Instruction LDRH not yet implemented."
	141 Move TEMP, X8
	142 And TEMP, TEMP, 1
	143 Compare TEMP, 1
	144 JumpIfEqual {149}
	145 Call 0x1C5D684
	146 Move X0, [X19+32]
	147 Add X8, X0, 309
	148 NotImplemented "Instruction LDRH not yet implemented."
	149 Move TEMP, X8
	150 And TEMP, TEMP, 1
	151 Compare TEMP, 1
	152 JumpIfEqual {154}
	153 Call 0x1C5D684
	154 Move X8, [X0+192]
	155 Move X1, [X8+56]
	156 Move W8, [X1+309]
	157 Move TEMP, X8
	158 And TEMP, TEMP, 1
	159 Compare TEMP, 1
	160 JumpIfEqual {164}
	161 Move X0, X1
	162 Call 0x1C5D684
	163 Move X1, X0
	164 Move X8, [X20]
	165 NotImplemented "Instruction LDRH not yet implemented."
	166 Compare X9, 0
	167 JumpIfEqual {174}
	168 Move X10, [X8+176]
	169 Add X10, X10, 8
	170 NotImplemented "Instruction LDUR not yet implemented."
	171 NotImplemented "Instruction CMP not yet implemented."
	172 Subtract X9, X9, 1
	173 Add X10, X10, 16
	174 Move W2, 12
	175 Move X0, X20
	176 Call 0x1C5D788
	177 Move W9, [X10]
	178 Add W9, W9, 12
	179 Add X8, X8, W9
	180 Add X0, X8, 312
	181 Move X8, [X0]
	182 Move X1, [X0+8]
	183 Move X0, X20
	184 NotImplemented "Instruction BLR not yet implemented."
	185 Compare X21, 0
	186 JumpIfEqual {206}
	187 Move W8, [X21+24]
	188 NotImplemented "Instruction CMP not yet implemented."
	189 Add X8, X21, X24
	190 Add X24, X24, 1
	191 NotImplemented "Instruction CMP not yet implemented."
	192 Move [X8+32], S0
	193 Move X22, [X31]
	194 Move X21, [X31+8]
	195 Move X0, X22
	196 Move X1, X21
	197 Move X20, [X31+64]
	198 Move X19, [X31+72]
	199 Move X22, [X31+48]
	200 Move X21, [X31+56]
	201 Move X24, [X31+32]
	202 Move X23, [X31+40]
	203 Move X30, [X31+16]
	204 Add X31, X31, 80
	205 Return X0
	206 Call 0x1C17F20
	207 Call 0x1C17F28

Method: T[] GetClosestPoint(T[] toPoint, UnityEngine.ProBuilder.KdTree.ITypeMath`1<T> math)

Disassembly:
	0x02DE1D10 LDR X8, [X19 + 0x38]
	0x02DE1D14 LDR X0, [X8 + 0x10]
	0x02DE1D18 LDRB W8, [X0 + 0x135]
	0x02DE1D1C TBNZ X8, 0x0, 0x2DE1D24
	0x02DE1D20 BL 0x1C5C684
	0x02DE1D24 LDR W8, [X0 + 0xE0]
	0x02DE1D28 CBNZ W8, 0x2DE1D30
	0x02DE1D2C BL 0x1C16DFC
	0x02DE1D30 LDR X8, [X19 + 0x38]
	0x02DE1D34 LDR X0, [X8 + 0x10]
	0x02DE1D38 LDRB W8, [X0 + 0x135]
	0x02DE1D3C TBNZ X8, 0x0, 0x2DE1D44
	0x02DE1D40 BL 0x1C5C684
	0x02DE1D44 LDR X8, [X0 + 0xB8]
	0x02DE1D48 LDP X20, X19, [X31 + 0x10]
	0x02DE1D4C LDR X0, [X8]
	0x02DE1D50 LDR X30, [X31], #0x20
	0x02DE1D54 RET
	0x02DE1D58 STR X30, [X31 - 0x30]!
	0x02DE1D5C STP X22, X21, [X31 + 0x10]
	0x02DE1D60 STP X20, X19, [X31 + 0x20]
	0x02DE1D64 MOV X19, X0
	0x02DE1D68 LDR X0, [X0 + 0x20]
	0x02DE1D6C LDRB W8, [X0 + 0x135]
	0x02DE1D70 TBNZ X8, 0x0, 0x2DE1D78
	0x02DE1D74 BL 0x1C5C684
	0x02DE1D78 LDR X8, [X0 + 0xC0]
	0x02DE1D7C LDR X0, [X8 + 0x10]
	0x02DE1D80 LDRB W8, [X0 + 0x135]
	0x02DE1D84 TBNZ X8, 0x0, 0x2DE1D8C
	0x02DE1D88 BL 0x1C5C684
	0x02DE1D8C LDR W8, [X0 + 0xE0]
	0x02DE1D90 CBNZ W8, 0x2DE1D98
	0x02DE1D94 BL 0x1C16DFC
	0x02DE1D98 LDR X0, [X19 + 0x20]
	0x02DE1D9C LDRB W8, [X0 + 0x135]
	0x02DE1DA0 TBNZ X8, 0x0, 0x2DE1DA8
	0x02DE1DA4 BL 0x1C5C684
	0x02DE1DA8 LDR X8, [X0 + 0xC0]
	0x02DE1DAC LDR X0, [X8 + 0x10]
	0x02DE1DB0 LDRB W8, [X0 + 0x135]
	0x02DE1DB4 TBNZ X8, 0x0, 0x2DE1DBC
	0x02DE1DB8 BL 0x1C5C684
	0x02DE1DBC LDR X8, [X0 + 0xB8]
	0x02DE1DC0 LDR X20, [X8 + 0x8]
	0x02DE1DC4 CBNZ X20, 0x2DE1F04
	0x02DE1DC8 LDR X0, [X19 + 0x20]
	0x02DE1DCC LDRB W8, [X0 + 0x135]
	0x02DE1DD0 TBNZ X8, 0x0, 0x2DE1DD8
	0x02DE1DD4 BL 0x1C5C684
	0x02DE1DD8 LDR X8, [X0 + 0xC0]
	0x02DE1DDC LDR X0, [X8 + 0x10]
	0x02DE1DE0 LDRB W8, [X0 + 0x135]
	0x02DE1DE4 TBNZ X8, 0x0, 0x2DE1DEC
	0x02DE1DE8 BL 0x1C5C684
	0x02DE1DEC LDR W8, [X0 + 0xE0]
	0x02DE1DF0 CBNZ W8, 0x2DE1DF8
	0x02DE1DF4 BL 0x1C16DFC
	0x02DE1DF8 LDR X0, [X19 + 0x20]
	0x02DE1DFC LDRB W8, [X0 + 0x135]
	0x02DE1E00 TBNZ X8, 0x0, 0x2DE1E08
	0x02DE1E04 BL 0x1C5C684
	0x02DE1E08 LDR X8, [X0 + 0xC0]
	0x02DE1E0C LDR X0, [X8 + 0x10]
	0x02DE1E10 LDRB W8, [X0 + 0x135]
	0x02DE1E14 TBNZ X8, 0x0, 0x2DE1E1C
	0x02DE1E18 BL 0x1C5C684
	0x02DE1E1C LDR X8, [X19 + 0x20]
	0x02DE1E20 LDR X9, [X0 + 0xB8]
	0x02DE1E24 LDRB W10, [X8 + 0x135]
	0x02DE1E28 LDR X21, [X9]
	0x02DE1E2C TBNZ X10, 0x0, 0x2DE1E3C
	0x02DE1E30 MOV X0, X8
	0x02DE1E34 BL 0x1C5C684
	0x02DE1E38 MOV X8, X0
	0x02DE1E3C LDR X8, [X8 + 0xC0]
	0x02DE1E40 LDR X0, [X8 + 0x8]
	0x02DE1E44 LDRB W8, [X0 + 0x135]
	0x02DE1E48 TBNZ X8, 0x0, 0x2DE1E50
	0x02DE1E4C BL 0x1C5C684
	0x02DE1E50 BL 0x1C16F10
	0x02DE1E54 LDR X8, [X19 + 0x20]
	0x02DE1E58 MOV X20, X0
	0x02DE1E5C ADD X9, X8, 0x135
	0x02DE1E60 LDRH W9, [X9]
	0x02DE1E64 TBNZ X9, 0x0, 0x2DE1E80
	0x02DE1E68 MOV X0, X8
	0x02DE1E6C BL 0x1C5C684
	0x02DE1E70 LDR X8, [X19 + 0x20]
	0x02DE1E74 ADD X9, X8, 0x135
	0x02DE1E78 LDRH W9, [X9]
	0x02DE1E7C B 0x2DE1E84
	0x02DE1E80 MOV X0, X8
	0x02DE1E84 LDR X10, [X0 + 0xC0]
	0x02DE1E88 LDR X22, [X10 + 0x18]
	0x02DE1E8C TBNZ X9, 0x0, 0x2DE1E9C
	0x02DE1E90 MOV X0, X8
	0x02DE1E94 BL 0x1C5C684
	0x02DE1E98 MOV X8, X0
	0x02DE1E9C LDR X8, [X8 + 0xC0]
	0x02DE1EA0 MOV X0, X20
	0x02DE1EA4 MOV X1, X21
	0x02DE1EA8 MOV X2, X22
	0x02DE1EAC LDR X3, [X8 + 0x20]
	0x02DE1EB0 BL 0x2D30578
	0x02DE1EB4 LDR X0, [X19 + 0x20]
	0x02DE1EB8 LDRB W8, [X0 + 0x135]
	0x02DE1EBC TBNZ X8, 0x0, 0x2DE1EC4
	0x02DE1EC0 BL 0x1C5C684
	0x02DE1EC4 LDR X8, [X0 + 0xC0]
	0x02DE1EC8 LDR X0, [X8 + 0x10]
	0x02DE1ECC LDRB W8, [X0 + 0x135]
	0x02DE1ED0 TBNZ X8, 0x0, 0x2DE1ED8
	0x02DE1ED4 BL 0x1C5C684
	0x02DE1ED8 LDR X8, [X0 + 0xB8]
	0x02DE1EDC STR X20, [X8 + 0x8]
	0x02DE1EE0 LDR X0, [X19 + 0x20]
	0x02DE1EE4 LDRB W8, [X0 + 0x135]
	0x02DE1EE8 TBNZ X8, 0x0, 0x2DE1EF0
	0x02DE1EEC BL 0x1C5C684
	0x02DE1EF0 LDR X8, [X0 + 0xC0]
	0x02DE1EF4 LDR X0, [X8 + 0x10]
	0x02DE1EF8 LDRB W8, [X0 + 0x135]
	0x02DE1EFC TBNZ X8, 0x0, 0x2DE1F04
	0x02DE1F00 BL 0x1C5C684
	0x02DE1F04 MOV X0, X20
	0x02DE1F08 LDP X20, X19, [X31 + 0x20]
	0x02DE1F0C LDP X22, X21, [X31 + 0x10]
	0x02DE1F10 LDR X30, [X31], #0x30
	0x02DE1F14 RET
	0x02DE1F18 STP X30, X23, [X31 - 0x30]!
	0x02DE1F1C STP X22, X21, [X31 + 0x10]
	0x02DE1F20 STP X20, X19, [X31 + 0x20]
	0x02DE1F24 MOV X19, X0
	0x02DE1F28 LDR X0, [X0 + 0x20]
	0x02DE1F2C LDRB W8, [X0 + 0x135]
	0x02DE1F30 TBNZ X8, 0x0, 0x2DE1F38
	0x02DE1F34 BL 0x1C5C684
	0x02DE1F38 LDR X8, [X0 + 0xC0]
	0x02DE1F3C LDR X0, [X8 + 0x10]
	0x02DE1F40 LDRB W8, [X0 + 0x135]
	0x02DE1F44 TBNZ X8, 0x0, 0x2DE1F4C
	0x02DE1F48 BL 0x1C5C684
	0x02DE1F4C LDR W8, [X0 + 0xE0]
	0x02DE1F50 CBNZ W8, 0x2DE1F58
	0x02DE1F54 BL 0x1C16DFC
	0x02DE1F58 LDR X0, [X19 + 0x20]
	0x02DE1F5C LDRB W8, [X0 + 0x135]
	0x02DE1F60 TBNZ X8, 0x0, 0x2DE1F68
	0x02DE1F64 BL 0x1C5C684
	0x02DE1F68 LDR X8, [X0 + 0xC0]
	0x02DE1F6C LDR X0, [X8 + 0x10]
	0x02DE1F70 LDRB W8, [X0 + 0x135]
	0x02DE1F74 TBNZ X8, 0x0, 0x2DE1F7C
	0x02DE1F78 BL 0x1C5C684
	0x02DE1F7C LDR X8, [X0 + 0xB8]
	0x02DE1F80 LDR X20, [X8 + 0x8]
	0x02DE1F84 CBNZ X20, 0x2DE20F0
	0x02DE1F88 LDR X0, [X19 + 0x20]
	0x02DE1F8C LDRB W8, [X0 + 0x135]
	0x02DE1F90 TBNZ X8, 0x0, 0x2DE1F98
	0x02DE1F94 BL 0x1C5C684
	0x02DE1F98 LDR X8, [X0 + 0xC0]

ISIL:
	001 Move [X31-80], D9
	002 Move [X31-72], D8
	003 Move [X31+16], X30
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Compare X1, 0
	012 JumpIfEqual {175}
	013 Move X22, X0
	014 Move X0, [X3+32]
	015 Move X19, X3
	016 Move X20, X2
	017 Move X21, X1
	018 Move W8, [X0+309]
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {24}
	023 Call 0x1C5D684
	024 Move X8, [X0+192]
	025 Move X0, [X8+16]
	026 Move W8, [X0+309]
	027 Move TEMP, X8
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {32}
	031 Call 0x1C5D684
	032 Move W1, [X21+24]
	033 Call 0x1C17D6C
	034 Move X8, [X21+24]
	035 Move X23, X0
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X24, X31
	038 And X8, X8, 0
	039 Move X9, [X22]
	040 Compare X9, 0
	041 JumpIfEqual {175}
	042 Move W10, [X9+24]
	043 NotImplemented "Instruction CMP not yet implemented."
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Add X8, X9, X24
	046 Add X25, X21, X24
	047 Move V8, [X8+32]
	048 Add X25, X25, 32
	049 Move V9, [X25]
	050 Compare X20, 0
	051 JumpIfEqual {175}
	052 Move X0, [X19+32]
	053 Move W8, [X0+309]
	054 Move TEMP, X8
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfEqual {59}
	058 Call 0x1C5D684
	059 Move X8, [X0+192]
	060 Move X1, [X8+56]
	061 Move W8, [X1+309]
	062 Move TEMP, X8
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfEqual {69}
	066 Move X0, X1
	067 Call 0x1C5D684
	068 Move X1, X0
	069 Move X8, [X20]
	070 NotImplemented "Instruction LDRH not yet implemented."
	071 Compare X9, 0
	072 JumpIfEqual {79}
	073 Move X10, [X8+176]
	074 Add X10, X10, 8
	075 NotImplemented "Instruction LDUR not yet implemented."
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Subtract X9, X9, 1
	078 Add X10, X10, 16
	079 Move X0, X20
	080 Move W2, W31
	081 Call 0x1C5D788
	082 NotImplemented "Instruction LDRSW not yet implemented."
	083 Add X8, X8, X9
	084 Add X0, X8, 312
	085 Move X8, [X0]
	086 Move X1, [X0+8]
	087 Move X0, X20
	088 Move V0, V8
	089 Move V1, V9
	090 NotImplemented "Instruction BLR not yet implemented."
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Move X8, [X22]
	093 Compare X8, 0
	094 JumpIfEqual {175}
	095 Move W9, [X8+24]
	096 NotImplemented "Instruction CMP not yet implemented."
	097 Compare X23, 0
	098 JumpIfEqual {175}
	099 Move W9, [X23+24]
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Add X8, X8, X24
	102 Add X25, X8, 32
	103 Move X8, [X22+8]
	104 Compare X8, 0
	105 JumpIfEqual {175}
	106 Move W9, [X8+24]
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Move W9, [X21+24]
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Move X0, [X19+32]
	111 Add X8, X8, X24
	112 Move V8, [X8+32]
	113 Move V9, [X25]
	114 Move W8, [X0+309]
	115 Move TEMP, X8
	116 And TEMP, TEMP, 1
	117 Compare TEMP, 1
	118 JumpIfEqual {120}
	119 Call 0x1C5D684
	120 Move X8, [X0+192]
	121 Move X1, [X8+56]
	122 Move W8, [X1+309]
	123 Move TEMP, X8
	124 And TEMP, TEMP, 1
	125 Compare TEMP, 1
	126 JumpIfEqual {130}
	127 Move X0, X1
	128 Call 0x1C5D684
	129 Move X1, X0
	130 Move X8, [X20]
	131 NotImplemented "Instruction LDRH not yet implemented."
	132 Compare X9, 0
	133 JumpIfEqual {140}
	134 Move X10, [X8+176]
	135 Add X10, X10, 8
	136 NotImplemented "Instruction LDUR not yet implemented."
	137 NotImplemented "Instruction CMP not yet implemented."
	138 Subtract X9, X9, 1
	139 Add X10, X10, 16
	140 Move X0, X20
	141 Move W2, W31
	142 Call 0x1C5D788
	143 NotImplemented "Instruction LDRSW not yet implemented."
	144 Add X8, X8, X9
	145 Add X0, X8, 312
	146 Move X8, [X0]
	147 Move X1, [X0+8]
	148 Move X0, X20
	149 Move V0, V8
	150 Move V1, V9
	151 NotImplemented "Instruction BLR not yet implemented."
	152 Move TEMP, X0
	153 And TEMP, TEMP, -2147483648
	154 Compare TEMP, -2147483648
	155 JumpIfEqual {168}
	156 Move W8, [X21+24]
	157 NotImplemented "Instruction CMP not yet implemented."
	158 Compare X23, 0
	159 JumpIfEqual {175}
	160 Move W8, [X23+24]
	161 NotImplemented "Instruction CMP not yet implemented."
	162 Move V0, [X25]
	163 Add X8, X23, X24
	164 Add X24, X24, 1
	165 Move [X8+32], S0
	166 Move W8, [X21+24]
	167 NotImplemented "Instruction CMP not yet implemented."
	168 Move X8, [X22+8]
	169 Compare X8, 0
	170 JumpIfEqual {175}
	171 Move W9, [X8+24]
	172 NotImplemented "Instruction CMP not yet implemented."
	173 Compare X23, 0
	174 JumpIfNotEqual {99}
	175 Call 0x1C17F20
	176 Move X0, X23
	177 Move X20, [X31+64]
	178 Move X19, [X31+72]
	179 Move X22, [X31+48]
	180 Move X21, [X31+56]
	181 Move X24, [X31+32]
	182 Move X23, [X31+40]
	183 Move X30, [X31+16]
	184 Move X25, [X31+24]
	185 Move D9, [X31+80]
	186 Move D8, [X31+88]
	187 Return X0
	188 Call 0x1C17F28

Method: UnityEngine.ProBuilder.KdTree.HyperRect`1<T> Clone()

Disassembly:
	0x02DE1F9C LDR X0, [X8 + 0x10]
	0x02DE1FA0 LDRB W8, [X0 + 0x135]
	0x02DE1FA4 TBNZ X8, 0x0, 0x2DE1FAC
	0x02DE1FA8 BL 0x1C5C684
	0x02DE1FAC LDR W8, [X0 + 0xE0]
	0x02DE1FB0 CBNZ W8, 0x2DE1FB8
	0x02DE1FB4 BL 0x1C16DFC
	0x02DE1FB8 LDR X0, [X19 + 0x20]
	0x02DE1FBC LDRB W8, [X0 + 0x135]
	0x02DE1FC0 TBNZ X8, 0x0, 0x2DE1FC8
	0x02DE1FC4 BL 0x1C5C684
	0x02DE1FC8 LDR X8, [X0 + 0xC0]
	0x02DE1FCC LDR X0, [X8 + 0x10]
	0x02DE1FD0 LDRB W8, [X0 + 0x135]
	0x02DE1FD4 TBNZ X8, 0x0, 0x2DE1FDC
	0x02DE1FD8 BL 0x1C5C684
	0x02DE1FDC LDR X8, [X19 + 0x20]
	0x02DE1FE0 LDR X9, [X0 + 0xB8]
	0x02DE1FE4 LDRB W10, [X8 + 0x135]
	0x02DE1FE8 LDR X21, [X9]
	0x02DE1FEC TBNZ X10, 0x0, 0x2DE1FFC
	0x02DE1FF0 MOV X0, X8
	0x02DE1FF4 BL 0x1C5C684
	0x02DE1FF8 MOV X8, X0
	0x02DE1FFC LDR X8, [X8 + 0xC0]
	0x02DE2000 LDR X0, [X8 + 0x8]
	0x02DE2004 LDRB W8, [X0 + 0x135]
	0x02DE2008 TBNZ X8, 0x0, 0x2DE2010
	0x02DE200C BL 0x1C5C684
	0x02DE2010 BL 0x1C16F10
	0x02DE2014 LDR X8, [X19 + 0x20]
	0x02DE2018 MOV X20, X0
	0x02DE201C ADD X9, X8, 0x135
	0x02DE2020 LDRH W9, [X9]
	0x02DE2024 TBNZ X9, 0x0, 0x2DE2040
	0x02DE2028 MOV X0, X8
	0x02DE202C BL 0x1C5C684
	0x02DE2030 LDR X8, [X19 + 0x20]
	0x02DE2034 ADD X9, X8, 0x135
	0x02DE2038 LDRH W9, [X9]
	0x02DE203C B 0x2DE2044
	0x02DE2040 MOV X0, X8
	0x02DE2044 LDR X10, [X0 + 0xC0]
	0x02DE2048 LDR X10, [X10 + 0x20]
	0x02DE204C LDR X23, [X10]
	0x02DE2050 TBNZ X9, 0x0, 0x2DE206C

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move [X31], X31
	007 Move [X31+8], X31
	008 Move X8, [X1+32]
	009 Move X20, X1
	010 Move X19, X0
	011 Add X9, X8, 309
	012 NotImplemented "Instruction LDRH not yet implemented."
	013 Move TEMP, X9
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, X8
	018 Call 0x1C5D684
	019 Move X8, [X20+32]
	020 Add X9, X8, 309
	021 NotImplemented "Instruction LDRH not yet implemented."
	022 Move X21, [X19]
	023 Move TEMP, X9
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {30}
	027 Move X0, X8
	028 Call 0x1C5D684
	029 Move X8, X0
	030 Move X8, [X8+192]
	031 Add X0, X31, 0
	032 Move X1, X21
	033 Move X2, [X8+24]
	034 Call 0x2DE19A8, X0, X1
	035 Move X0, [X20+32]
	036 Add X8, X0, 309
	037 NotImplemented "Instruction LDRH not yet implemented."
	038 Move TEMP, X8
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfEqual {46}
	042 Call 0x1C5D684
	043 Move X0, [X20+32]
	044 Add X8, X0, 309
	045 NotImplemented "Instruction LDRH not yet implemented."
	046 Move X19, [X19+8]
	047 Move TEMP, X8
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfEqual {52}
	051 Call 0x1C5D684
	052 Move X8, [X0+192]
	053 Add X0, X31, 0
	054 Move X1, X19
	055 Move X2, [X8+40]
	056 Call 0x2DE1A14, X0, X1
	057 Move X0, [X31]
	058 Move X1, [X31+8]
	059 Move X20, [X31+32]
	060 Move X19, [X31+40]
	061 Move X30, [X31+16]
	062 Move X21, [X31+24]
	063 Add X31, X31, 48
	064 Return X0

