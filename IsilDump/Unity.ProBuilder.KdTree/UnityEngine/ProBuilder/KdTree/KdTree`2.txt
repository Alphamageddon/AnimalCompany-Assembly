Type: UnityEngine.ProBuilder.KdTree.KdTree`2

Method: System.Void .ctor(System.Int32 dimensions, UnityEngine.ProBuilder.KdTree.ITypeMath`1<TKey> typeMath)

Disassembly:
	0x02EA8258 SUBS X9, X9, 0x1
	0x02EA825C ADD X10, X10, 0x10
	0x02EA8260 B.NE 0x2EA824C
	0x02EA8264 MOV X0, X22
	0x02EA8268 MOV W2, W31
	0x02EA826C BL 0x1C5C788
	0x02EA8270 B 0x2EA8280
	0x02EA8274 LDRSW X9, [X10]
	0x02EA8278 ADD X8, X8, X9, 0x4, LSL
	0x02EA827C ADD X0, X8, 0x138
	0x02EA8280 LDP X8, X1, [X0]
	0x02EA8284 MOV X0, X22
	0x02EA8288 MOV V0.16B, V9.16B

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W20, W1
	006 Move X1, X31
	007 Move X19, X2
	008 Move X21, X0
	009 Call Object..ctor, X0
	010 Move [X21+16], W20
	011 Move [X21+24], X19
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move [X21+44], W31
	015 Move X30, [X31+32]
	016 Move X21, [X31+40]
	017 Return 

Method: System.Void .ctor(System.Int32 dimensions, UnityEngine.ProBuilder.KdTree.ITypeMath`1<TKey> typeMath, UnityEngine.ProBuilder.KdTree.AddDuplicateBehavior addDuplicateBehavior)

Disassembly:
	0x02EA828C MOV V1.16B, V8.16B
	0x02EA8290 BLR X8
	0x02EA8294 CMP W0, 0x0
	0x02EA8298 B.GT 0x2EA82BC
	0x02EA829C CBZ X19, 0x2EA82E4
	0x02EA82A0 LDR X8, [X20 + 0x20]
	0x02EA82A4 MOV X0, X19
	0x02EA82A8 MOV X1, X21
	0x02EA82AC MOV V0.16B, V9.16B
	0x02EA82B0 LDR X8, [X8 + 0xC0]
	0x02EA82B4 LDR X2, [X8 + 0x158]
	0x02EA82B8 BL 0x2409C94
	0x02EA82BC LDP X20, X19, [X31 + 0x90]
	0x02EA82C0 LDP X22, X21, [X31 + 0x80]
	0x02EA82C4 LDP X24, X23, [X31 + 0x70]
	0x02EA82C8 LDP X26, X25, [X31 + 0x60]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move W21, W1
	007 Move X1, X31
	008 Move W19, W3
	009 Move X20, X2
	010 Move X22, X0
	011 Call Object..ctor, X0
	012 Move [X22+16], W21
	013 Move [X22+24], X20
	014 Move [X22+40], W19
	015 Move [X22+44], W31
	016 Move X20, [X31+32]
	017 Move X19, [X31+40]
	018 Move X22, [X31+16]
	019 Move X21, [X31+24]
	020 Move X30, [X31+48]
	021 Return 

Method: UnityEngine.ProBuilder.KdTree.AddDuplicateBehavior get_AddDuplicateBehavior()

Disassembly:
	0x02EA82CC LDP X28, X27, [X31 + 0x50]
	0x02EA82D0 LDP X29, X30, [X31 + 0x40]

ISIL:
	001 Move W0, [X0+40]
	002 Return X0

Method: System.Void set_AddDuplicateBehavior(UnityEngine.ProBuilder.KdTree.AddDuplicateBehavior value)

Disassembly:
	0x02EA82D4 LDP D9, D8, [X31 + 0x30]
	0x02EA82D8 LDR V10, [X31 + 0x20]

ISIL:
	001 Move [X0+40], W1
	002 Return 

Method: System.Boolean Add(TKey[] point, TValue value)

Disassembly:
	0x02EA82DC ADD X31, X31, 0xA0
	0x02EA82E0 RET
	0x02EA82E4 BL 0x1C16F20
	0x02EA82E8 BL 0x1C16F28
	0x02EA82EC STR D8, [X31 - 0x50]!
	0x02EA82F0 STR X30, [X31 + 0x8]
	0x02EA82F4 STP X26, X25, [X31 + 0x10]
	0x02EA82F8 STP X24, X23, [X31 + 0x20]
	0x02EA82FC STP X22, X21, [X31 + 0x30]
	0x02EA8300 STP X20, X19, [X31 + 0x40]
	0x02EA8304 LDR X8, [X3 + 0x20]
	0x02EA8308 MOV X21, X0
	0x02EA830C LDR X24, [X21 + 0x18]
	0x02EA8310 MOV X19, X3
	0x02EA8314 LDR X8, [X8 + 0xC0]
	0x02EA8318 MOV W23, W2
	0x02EA831C MOV V8.16B, V0.16B
	0x02EA8320 MOV X22, X1
	0x02EA8324 LDR X0, [X8 + 0xD0]
	0x02EA8328 LDRB W8, [X0 + 0x135]
	0x02EA832C TBNZ X8, 0x0, 0x2EA8334
	0x02EA8330 BL 0x1C5C684
	0x02EA8334 BL 0x1C16F10
	0x02EA8338 LDR X8, [X19 + 0x20]
	0x02EA833C MOV W1, W23
	0x02EA8340 MOV X2, X24
	0x02EA8344 MOV X20, X0
	0x02EA8348 LDR X8, [X8 + 0xC0]
	0x02EA834C LDR X3, [X8 + 0xD8]
	0x02EA8350 BL 0x2409BF8
	0x02EA8354 LDR X8, [X19 + 0x20]
	0x02EA8358 LDR W0, [X21 + 0x10]
	0x02EA835C LDP X1, X23, [X21 + 0x18]
	0x02EA8360 LDR X8, [X8 + 0xC0]
	0x02EA8364 LDR X2, [X8 + 0xE0]
	0x02EA8368 BL 0x2DE0A78
	0x02EA836C LDR X26, [X21 + 0x18]
	0x02EA8370 CBZ X26, 0x2EA84F4
	0x02EA8374 LDR X8, [X19 + 0x20]
	0x02EA8378 MOV X25, X1
	0x02EA837C MOV X24, X0
	0x02EA8380 LDR X8, [X8 + 0xC0]
	0x02EA8384 LDR X1, [X8 + 0x8]
	0x02EA8388 LDRB W8, [X1 + 0x135]
	0x02EA838C TBNZ X8, 0x0, 0x2EA839C
	0x02EA8390 MOV X0, X1
	0x02EA8394 BL 0x1C5C684
	0x02EA8398 MOV X1, X0
	0x02EA839C LDR X8, [X26]
	0x02EA83A0 LDRH W9, [X8 + 0x12E]
	0x02EA83A4 CBZ X9, 0x2EA83C8
	0x02EA83A8 LDR X10, [X8 + 0xB0]
	0x02EA83AC ADD X10, X10, 0x8
	0x02EA83B0 LDUR X11, [X10 - 0x8]
	0x02EA83B4 CMP X11, X1
	0x02EA83B8 B.EQ 0x2EA83D8
	0x02EA83BC SUBS X9, X9, 0x1
	0x02EA83C0 ADD X10, X10, 0x10
	0x02EA83C4 B.NE 0x2EA83B0
	0x02EA83C8 MOVZ W2, 0x9
	0x02EA83CC MOV X0, X26
	0x02EA83D0 BL 0x1C5C788
	0x02EA83D4 B 0x2EA83E8
	0x02EA83D8 LDR W9, [X10]
	0x02EA83DC ADD W9, W9, 0x9
	0x02EA83E0 ADD X8, X8, W9, 0x4, SXTW
	0x02EA83E4 ADD X0, X8, 0x138
	0x02EA83E8 LDP X8, X1, [X0]
	0x02EA83EC MOV X0, X26
	0x02EA83F0 MOV V0.16B, V8.16B
	0x02EA83F4 MOV V1.16B, V8.16B
	0x02EA83F8 BLR X8
	0x02EA83FC LDR X8, [X19 + 0x20]
	0x02EA8400 MOV X0, X21
	0x02EA8404 MOV X1, X23
	0x02EA8408 MOV X2, X22
	0x02EA840C LDR X8, [X8 + 0xC0]
	0x02EA8410 MOV X3, X24
	0x02EA8414 MOV X4, X25
	0x02EA8418 MOV W5, W31
	0x02EA841C LDR X7, [X8 + 0x100]
	0x02EA8420 MOV X6, X20
	0x02EA8424 BL 0x2EA7D58
	0x02EA8428 CBZ X20, 0x2EA84F4
	0x02EA842C LDR X8, [X19 + 0x20]
	0x02EA8430 MOV X0, X20
	0x02EA8434 LDR X8, [X8 + 0xC0]
	0x02EA8438 LDR X1, [X8 + 0x108]
	0x02EA843C BL 0x2409C78
	0x02EA8440 LDR X8, [X19 + 0x20]
	0x02EA8444 MOV W22, W0
	0x02EA8448 LDR X8, [X8 + 0xC0]
	0x02EA844C LDR X8, [X8 + 0xC8]
	0x02EA8450 LDRB W9, [X8 + 0x135]
	0x02EA8454 TBNZ X9, 0x0, 0x2EA8464
	0x02EA8458 MOV X0, X8
	0x02EA845C BL 0x1C5C684
	0x02EA8460 MOV X8, X0
	0x02EA8464 MOV X0, X8
	0x02EA8468 MOV W1, W22
	0x02EA846C BL 0x1C16D6C
	0x02EA8470 CMP W22, 0x1
	0x02EA8474 MOV X21, X0
	0x02EA8478 B.LT 0x2EA84D4
	0x02EA847C MOV W23, W22
	0x02EA8480 LDR X8, [X19 + 0x20]
	0x02EA8484 MOV X0, X20
	0x02EA8488 LDR X8, [X8 + 0xC0]
	0x02EA848C LDR X1, [X8 + 0x110]
	0x02EA8490 BL 0x2409EAC
	0x02EA8494 CBZ X21, 0x2EA84F4
	0x02EA8498 MOV X22, X0
	0x02EA849C CBZ X0, 0x2EA84B4
	0x02EA84A0 LDR X8, [X21]
	0x02EA84A4 MOV X0, X22
	0x02EA84A8 LDR X1, [X8 + 0x40]
	0x02EA84AC BL 0x1C16E00
	0x02EA84B0 CBZ X0, 0x2EA84FC
	0x02EA84B4 LDR W9, [X21 + 0x18]
	0x02EA84B8 SUB X8, X23, 0x1
	0x02EA84BC CMP W8, W9
	0x02EA84C0 B.CS 0x2EA84F8
	0x02EA84C4 ADD X8, X21, W8, 0x3, SXTW
	0x02EA84C8 SUBS X23, X23, 0x1
	0x02EA84CC STR X22, [X8 + 0x20]
	0x02EA84D0 B.NE 0x2EA8480
	0x02EA84D4 MOV X0, X21
	0x02EA84D8 LDP X20, X19, [X31 + 0x40]
	0x02EA84DC LDP X22, X21, [X31 + 0x30]
	0x02EA84E0 LDP X24, X23, [X31 + 0x20]
	0x02EA84E4 LDP X26, X25, [X31 + 0x10]
	0x02EA84E8 LDR X30, [X31 + 0x8]
	0x02EA84EC LDR V8, [X31], #0x50
	0x02EA84F0 RET
	0x02EA84F4 BL 0x1C16F20
	0x02EA84F8 BL 0x1C16F28
	0x02EA84FC BL 0x1C16F44
	0x02EA8500 MOV X1, X31
	0x02EA8504 BL 0x1C16DEC
	0x02EA8508 LDR W0, [X0 + 0x2C]
	0x02EA850C RET
	0x02EA8510 STR W1, [X0 + 0x2C]
	0x02EA8514 RET
	0x02EA8518 STP D9, D8, [X31 - 0x70]!
	0x02EA851C STR X30, [X31 + 0x10]
	0x02EA8520 STP X28, X27, [X31 + 0x20]
	0x02EA8524 STP X26, X25, [X31 + 0x30]
	0x02EA8528 STP X24, X23, [X31 + 0x40]
	0x02EA852C STP X22, X21, [X31 + 0x50]
	0x02EA8530 STP X20, X19, [X31 + 0x60]
	0x02EA8534 LDR X25, [X0 + 0x20]
	0x02EA8538 MOV X19, X2
	0x02EA853C CBZ X25, 0x2EA86C4
	0x02EA8540 MOV X20, X3
	0x02EA8544 MOV X21, X0
	0x02EA8548 MOV X22, X1
	0x02EA854C MOVN W26, 0x0
	0x02EA8550 MOVZ W27, 0x28
	0x02EA8554 MOVZ W28, 0x30
	0x02EA8558 LDR X23, [X21 + 0x18]
	0x02EA855C CBZ X23, 0x2EA86FC
	0x02EA8560 LDR X8, [X20 + 0x20]
	0x02EA8564 LDR X24, [X25 + 0x10]
	0x02EA8568 LDR X8, [X8 + 0xC0]
	0x02EA856C LDR X1, [X8 + 0x8]
	0x02EA8570 LDRB W8, [X1 + 0x135]
	0x02EA8574 TBNZ X8, 0x0, 0x2EA8584
	0x02EA8578 MOV X0, X1
	0x02EA857C BL 0x1C5C684
	0x02EA8580 MOV X1, X0
	0x02EA8584 LDR X8, [X23]
	0x02EA8588 LDRH W9, [X8 + 0x12E]
	0x02EA858C CBZ X9, 0x2EA85B0
	0x02EA8590 LDR X10, [X8 + 0xB0]
	0x02EA8594 ADD X10, X10, 0x8
	0x02EA8598 LDUR X11, [X10 - 0x8]
	0x02EA859C CMP X11, X1
	0x02EA85A0 B.EQ 0x2EA85C0
	0x02EA85A4 SUBS X9, X9, 0x1
	0x02EA85A8 ADD X10, X10, 0x10
	0x02EA85AC B.NE 0x2EA8598
	0x02EA85B0 MOVZ W2, 0x6
	0x02EA85B4 MOV X0, X23
	0x02EA85B8 BL 0x1C5C788
	0x02EA85BC B 0x2EA85D0
	0x02EA85C0 LDR W9, [X10]
	0x02EA85C4 ADD W9, W9, 0x6
	0x02EA85C8 ADD X8, X8, W9, 0x4, SXTW
	0x02EA85CC ADD X0, X8, 0x138
	0x02EA85D0 LDP X8, X3, [X0]
	0x02EA85D4 MOV X0, X23
	0x02EA85D8 MOV X1, X22
	0x02EA85DC MOV X2, X24
	0x02EA85E0 BLR X8
	0x02EA85E4 TBNZ X0, 0x0, 0x2EA86D0
	0x02EA85E8 CBZ X22, 0x2EA86FC

ISIL:
	001 Move [X31-112], D9
	002 Move [X31-104], D8
	003 Move [X31+16], X29
	004 Move [X31+24], X30
	005 Move [X31+32], X28
	006 Move [X31+40], X27
	007 Move [X31+48], X26
	008 Move [X31+56], X25
	009 Move [X31+64], X24
	010 Move [X31+72], X23
	011 Move [X31+80], X22
	012 Move [X31+88], X21
	013 Move [X31+96], X20
	014 Move [X31+104], X19
	015 Move X8, [X3+32]
	016 Move X19, X3
	017 Move W20, W2
	018 Move X22, X1
	019 Move X8, [X8+192]
	020 Move X21, X0
	021 Move X8, [X8+56]
	022 Move W9, [X8+309]
	023 Move TEMP, X9
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {30}
	027 Move X0, X8
	028 Call 0x1C5D684
	029 Move X8, X0
	030 Move X0, X8
	031 Call 0x1C17F10
	032 Move X1, X31
	033 Move X23, X0
	034 Call Object..ctor, X0
	035 Move [X23+16], X22
	036 Move [X23+24], W20
	037 Move X24, X21
	038 Add X24, X24, 32
	039 Move X8, [X24]
	040 Compare X8, 0
	041 JumpIfEqual {156}
	042 Move TEMP, 0
	043 Not TEMP
	044 Move W27, TEMP
	045 Move W29, 48
	046 Move X25, [X21+24]
	047 Compare X25, 0
	048 JumpIfEqual {201}
	049 Move X24, X8
	050 Move X8, [X19+32]
	051 Move W28, [X21+16]
	052 Move X26, [X24+16]
	053 Move X8, [X8+192]
	054 Move X1, [X8+8]
	055 Move W8, [X1+309]
	056 Move TEMP, X8
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfEqual {63}
	060 Move X0, X1
	061 Call 0x1C5D684
	062 Move X1, X0
	063 Move X8, [X25]
	064 NotImplemented "Instruction LDRH not yet implemented."
	065 Compare X9, 0
	066 JumpIfEqual {73}
	067 Move X10, [X8+176]
	068 Add X10, X10, 8
	069 NotImplemented "Instruction LDUR not yet implemented."
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Subtract X9, X9, 1
	072 Add X10, X10, 16
	073 Move W2, 6
	074 Move X0, X25
	075 Call 0x1C5D788
	076 Move W9, [X10]
	077 Add W9, W9, 6
	078 Add X8, X8, W9
	079 Add X0, X8, 312
	080 Move X8, [X0]
	081 Move X3, [X0+8]
	082 Move X0, X25
	083 Move X1, X22
	084 Move X2, X26
	085 NotImplemented "Instruction BLR not yet implemented."
	086 Move TEMP, X0
	087 And TEMP, TEMP, 1
	088 Compare TEMP, 1
	089 JumpIfNotEqual {93}
	090 Move W8, [X21+40]
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Move [X24+24], W20
	093 Compare X22, 0
	094 JumpIfEqual {201}
	095 Move W8, [X22+24]
	096 Add W9, W27, 1
	097 NotImplemented "Instruction SDIV not yet implemented."
	098 NotImplemented "Instruction MSUB not yet implemented."
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Move X8, [X24+16]
	101 Compare X8, 0
	102 JumpIfEqual {201}
	103 Move W9, [X8+24]
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Move X25, [X21+24]
	106 Compare X25, 0
	107 JumpIfEqual {201}
	108 Move X9, [X19+32]
	109 Move X10, W27
	110 Add X8, X8, X10
	111 Move V9, [X8+32]
	112 Move X9, [X9+192]
	113 Move X1, [X9+8]
	114 Add X9, X22, X10
	115 Move V8, [X9+32]
	116 Move W9, [X1+309]
	117 Move TEMP, X9
	118 And TEMP, TEMP, 1
	119 Compare TEMP, 1
	120 JumpIfEqual {124}
	121 Move X0, X1
	122 Call 0x1C5D684
	123 Move X1, X0
	124 Move X8, [X25]
	125 NotImplemented "Instruction LDRH not yet implemented."
	126 Compare X9, 0
	127 JumpIfEqual {134}
	128 Move X10, [X8+176]
	129 Add X10, X10, 8
	130 NotImplemented "Instruction LDUR not yet implemented."
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Subtract X9, X9, 1
	133 Add X10, X10, 16
	134 Move X0, X25
	135 Move W2, W31
	136 Call 0x1C5D788
	137 NotImplemented "Instruction LDRSW not yet implemented."
	138 Add X8, X8, X9
	139 Add X0, X8, 312
	140 Move X8, [X0]
	141 Move X1, [X0+8]
	142 Move X0, X25
	143 Move V0, V8
	144 Move V1, V9
	145 NotImplemented "Instruction BLR not yet implemented."
	146 NotImplemented "Instruction CMP not yet implemented."
	147 Move W8, 40
	148 NotImplemented "Instruction CSEL not yet implemented."
	149 Move X8, [X24]
	150 Compare X8, 0
	151 JumpIfNotEqual {46}
	152 Add X8, X24, 40
	153 Add X9, X24, 48
	154 NotImplemented "Instruction CMP not yet implemented."
	155 NotImplemented "Instruction CSEL not yet implemented."
	156 Move X8, [X19+32]
	157 Move X8, [X8+192]
	158 Move X0, [X8+56]
	159 Move W8, [X0+309]
	160 Move TEMP, X8
	161 And TEMP, TEMP, 1
	162 Compare TEMP, 1
	163 JumpIfEqual {165}
	164 Call 0x1C5D684
	165 Call 0x1C17F10
	166 Move X1, X31
	167 Move X23, X0
	168 Call Object..ctor, X0
	169 Move [X23+16], X22
	170 Move [X23+24], W20
	171 Move [X24], X23
	172 Move W8, [X21+44]
	173 Move W0, 1
	174 Add W8, W8, 1
	175 Move [X21+44], W8
	176 Compare W8, 0
	177 JumpIfEqual {185}
	178 NotImplemented "Instruction CMP not yet implemented."
	179 Move X8, [X19+32]
	180 Move X0, X24
	181 Move W1, W20
	182 Move X8, [X8+192]
	183 Move X2, [X8+88]
	184 Call 0x2EA7968, X0, X1
	185 Move W0, W31
	186 Move X20, [X31+96]
	187 Move X19, [X31+104]
	188 Move X22, [X31+80]
	189 Move X21, [X31+88]
	190 Move X24, [X31+64]
	191 Move X23, [X31+72]
	192 Move X26, [X31+48]
	193 Move X25, [X31+56]
	194 Move X28, [X31+32]
	195 Move X27, [X31+40]
	196 Move X29, [X31+16]
	197 Move X30, [X31+24]
	198 Move D9, [X31+112]
	199 Move D8, [X31+120]
	200 Return X0
	201 Call 0x1C17F20
	202 Call 0x1C17F28
	203 NotImplemented "Instruction CMP not yet implemented."
	204 Move X0, 0x1278000
	205 Move X0, [X0+160]
	206 Call 0x1C17D08
	207 Call 0x1C17F10
	208 Move X1, X31
	209 Move X20, X0
	210 Call DuplicateNodeError..ctor, X0
	211 Move X0, 0x124C000
	212 Move X0, [X0+2000]
	213 Call 0x1C17D08
	214 Call 0x1C17F10
	215 Move X20, X0
	216 Move X0, 0x1278000
	217 Move X0, [X0+168]
	218 Call 0x1C17D08
	219 Move X1, X0
	220 Move X0, X20
	221 Move X2, X31
	222 Call Exception..ctor, X0, X1
	223 Move X0, X20
	224 Move X1, X19
	225 Call 0x1C17DEC

Method: System.Void ReadChildNodes(UnityEngine.ProBuilder.KdTree.KdTreeNode`2<TKey, TValue> removedNode)

Disassembly:
	0x02EA85EC LDR W8, [X21 + 0x10]
	0x02EA85F0 LDR W9, [X22 + 0x18]
	0x02EA85F4 ADD W10, W26, 0x1
	0x02EA85F8 SDIV W11, W10, W8
	0x02EA85FC MSUB W26, W11, W8, W10
	0x02EA8600 CMP W26, W9
	0x02EA8604 B.CS 0x2EA8700
	0x02EA8608 LDR X8, [X25 + 0x10]
	0x02EA860C CBZ X8, 0x2EA86FC
	0x02EA8610 LDR W9, [X8 + 0x18]
	0x02EA8614 CMP W26, W9
	0x02EA8618 B.CS 0x2EA8700
	0x02EA861C LDR X23, [X21 + 0x18]
	0x02EA8620 CBZ X23, 0x2EA86FC
	0x02EA8624 LDR X9, [X20 + 0x20]
	0x02EA8628 SXTW X10, W26
	0x02EA862C ADD X8, X8, X10, 0x2, LSL
	0x02EA8630 LDR V9, [X8 + 0x20]
	0x02EA8634 LDR X9, [X9 + 0xC0]
	0x02EA8638 LDR X1, [X9 + 0x8]
	0x02EA863C ADD X9, X22, X10, 0x2, LSL
	0x02EA8640 LDR V8, [X9 + 0x20]
	0x02EA8644 LDRB W9, [X1 + 0x135]
	0x02EA8648 TBNZ X9, 0x0, 0x2EA8658
	0x02EA864C MOV X0, X1
	0x02EA8650 BL 0x1C5C684
	0x02EA8654 MOV X1, X0
	0x02EA8658 LDR X8, [X23]
	0x02EA865C LDRH W9, [X8 + 0x12E]
	0x02EA8660 CBZ X9, 0x2EA8684
	0x02EA8664 LDR X10, [X8 + 0xB0]
	0x02EA8668 ADD X10, X10, 0x8
	0x02EA866C LDUR X11, [X10 - 0x8]
	0x02EA8670 CMP X11, X1
	0x02EA8674 B.EQ 0x2EA8694
	0x02EA8678 SUBS X9, X9, 0x1
	0x02EA867C ADD X10, X10, 0x10
	0x02EA8680 B.NE 0x2EA866C
	0x02EA8684 MOV X0, X23
	0x02EA8688 MOV W2, W31
	0x02EA868C BL 0x1C5C788
	0x02EA8690 B 0x2EA86A0
	0x02EA8694 LDRSW X9, [X10]
	0x02EA8698 ADD X8, X8, X9, 0x4, LSL
	0x02EA869C ADD X0, X8, 0x138
	0x02EA86A0 LDP X8, X1, [X0]
	0x02EA86A4 MOV X0, X23
	0x02EA86A8 MOV V0.16B, V8.16B
	0x02EA86AC MOV V1.16B, V9.16B
	0x02EA86B0 BLR X8
	0x02EA86B4 CMP W0, 0x0
	0x02EA86B8 CSEL X8, X28, X27, GT
	0x02EA86BC LDR X25, [X25, X8, LSL]
	0x02EA86C0 CBNZ X25, 0x2EA8558
	0x02EA86C4 MOV W0, W31
	0x02EA86C8 STR W31, [X19]
	0x02EA86CC B 0x2EA86DC
	0x02EA86D0 LDR W8, [X25 + 0x18]
	0x02EA86D4 MOVZ W0, 0x1
	0x02EA86D8 STR W8, [X19]
	0x02EA86DC LDP X20, X19, [X31 + 0x60]
	0x02EA86E0 LDP X22, X21, [X31 + 0x50]
	0x02EA86E4 LDP X24, X23, [X31 + 0x40]
	0x02EA86E8 LDP X26, X25, [X31 + 0x30]
	0x02EA86EC LDP X28, X27, [X31 + 0x20]
	0x02EA86F0 LDR X30, [X31 + 0x10]
	0x02EA86F4 LDP D9, D8, [X31], #0x70
	0x02EA86F8 RET
	0x02EA86FC BL 0x1C16F20
	0x02EA8700 BL 0x1C16F28
	0x02EA8704 STR X30, [X31 - 0x10]!
	0x02EA8708 STR W31, [X31 + 0xC]
	0x02EA870C LDR X8, [X2 + 0x20]
	0x02EA8710 ADD X2, X31, 0xC
	0x02EA8714 LDR X8, [X8 + 0xC0]
	0x02EA8718 LDR X3, [X8 + 0x170]
	0x02EA871C BL 0x2EA8518
	0x02EA8720 LDR W8, [X31 + 0xC]
	0x02EA8724 ANDS W31, W0, 0x1
	0x02EA8728 CSEL W0, W8, W31, NE
	0x02EA872C LDR X30, [X31], #0x10
	0x02EA8730 RET
	0x02EA8734 STR X30, [X31 - 0x50]!
	0x02EA8738 STP X26, X25, [X31 + 0x10]
	0x02EA873C STP X24, X23, [X31 + 0x20]
	0x02EA8740 STP X22, X21, [X31 + 0x30]
	0x02EA8744 STP X20, X19, [X31 + 0x40]
	0x02EA8748 LDR X8, [X0 + 0x20]
	0x02EA874C MOV X19, X2
	0x02EA8750 CBZ X8, 0x2EA8854
	0x02EA8754 LDR X8, [X3 + 0x20]
	0x02EA8758 MOV X23, X0
	0x02EA875C MOV X20, X3
	0x02EA8760 MOV W21, W1
	0x02EA8764 LDR X8, [X8 + 0xC0]
	0x02EA8768 LDR X0, [X8 + 0x90]
	0x02EA876C LDRB W8, [X0 + 0x135]
	0x02EA8770 TBNZ X8, 0x0, 0x2EA8778
	0x02EA8774 BL 0x1C5C684
	0x02EA8778 BL 0x1C16F10
	0x02EA877C LDR X8, [X20 + 0x20]
	0x02EA8780 MOV X22, X0
	0x02EA8784 LDR X8, [X8 + 0xC0]
	0x02EA8788 LDR X1, [X8 + 0x98]
	0x02EA878C BL 0x24F1248
	0x02EA8790 CBZ X22, 0x2EA8880
	0x02EA8794 LDR X8, [X20 + 0x20]
	0x02EA8798 LDR X1, [X23 + 0x20]
	0x02EA879C MOV X0, X22
	0x02EA87A0 LDR X8, [X8 + 0xC0]
	0x02EA87A4 LDR X2, [X8 + 0xA0]
	0x02EA87A8 BL 0x24F1750
	0x02EA87AC LDR W8, [X22 + 0x20]
	0x02EA87B0 CMP W8, 0x1
	0x02EA87B4 B.LT 0x2EA8850
	0x02EA87B8 MOVZ W25, 0x28
	0x02EA87BC MOVZ W26, 0x30
	0x02EA87C0 LDR X8, [X20 + 0x20]
	0x02EA87C4 MOV X0, X22
	0x02EA87C8 LDR X8, [X8 + 0xC0]
	0x02EA87CC LDR X1, [X8 + 0xA8]
	0x02EA87D0 BL 0x24F18D4
	0x02EA87D4 CBZ X0, 0x2EA8880

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Compare X1, 0
	010 JumpIfEqual {144}
	011 Move X8, [X2+32]
	012 Move X9, [X1+40]
	013 Move X19, X2
	014 Move X23, X1
	015 Move X8, [X8+192]
	016 Move X20, X0
	017 Compare X9, 0
	018 JumpIfNotEqual {22}
	019 Move X9, [X23+48]
	020 Compare X9, 0
	021 JumpIfEqual {135}
	022 Move X0, [X8+144]
	023 Move W8, [X0+309]
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {29}
	028 Call 0x1C5D684
	029 Call 0x1C17F10
	030 Move X8, [X19+32]
	031 Move X21, X0
	032 Move X8, [X8+192]
	033 Move X1, [X8+152]
	034 Call Queue`1<Object>..ctor, X0
	035 Move X8, [X19+32]
	036 Move X8, [X8+192]
	037 Move X0, [X8+144]
	038 Move W8, [X0+309]
	039 Move TEMP, X8
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfEqual {44}
	043 Call 0x1C5D684
	044 Call 0x1C17F10
	045 Move X8, [X19+32]
	046 Move X22, X0
	047 Move X8, [X8+192]
	048 Move X1, [X8+152]
	049 Call Queue`1<Object>..ctor, X0
	050 Move X1, [X23+40]
	051 Compare X1, 0
	052 JumpIfEqual {60}
	053 Compare X22, 0
	054 JumpIfEqual {144}
	055 Move X8, [X19+32]
	056 Move X0, X22
	057 Move X8, [X8+192]
	058 Move X2, [X8+160]
	059 Call Queue`1<Object>.Enqueue, X0, X1
	060 Move X1, [X23+48]
	061 Compare X1, 0
	062 JumpIfEqual {70}
	063 Compare X22, 0
	064 JumpIfEqual {144}
	065 Move X8, [X19+32]
	066 Move X0, X22
	067 Move X8, [X8+192]
	068 Move X2, [X8+160]
	069 Call Queue`1<Object>.Enqueue, X0, X1
	070 Compare X22, 0
	071 JumpIfEqual {144}
	072 Move W8, [X22+32]
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move X8, [X19+32]
	075 Move X0, X22
	076 Move X8, [X8+192]
	077 Move X1, [X8+168]
	078 Call Queue`1<Object>.Dequeue, X0
	079 Compare X21, 0
	080 JumpIfEqual {144}
	081 Move X8, [X19+32]
	082 Move X23, X0
	083 Move X0, X21
	084 Move X1, X23
	085 Move X8, [X8+192]
	086 Move X2, [X8+160]
	087 Call Queue`1<Object>.Enqueue, X0, X1
	088 Compare X23, 0
	089 JumpIfEqual {144}
	090 Add X24, X23, 40
	091 Add X23, X23, 48
	092 Move TEMP, 2
	093 Not TEMP
	094 Move W25, TEMP
	095 Add W25, W25, 2
	096 NotImplemented "Instruction CMP not yet implemented."
	097 NotImplemented "Instruction CSEL not yet implemented."
	098 Move X1, [X8]
	099 Compare X1, 0
	100 JumpIfEqual {108}
	101 Move X8, [X19+32]
	102 Move X0, X22
	103 Move X8, [X8+192]
	104 Move X2, [X8+160]
	105 Call Queue`1<Object>.Enqueue, X0, X1
	106 NotImplemented "Instruction CMP not yet implemented."
	107 Move [X24], X31
	108 Add W31, W25, 3
	109 Move [X23], X31
	110 Move W8, [X22+32]
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Compare X21, 0
	113 JumpIfEqual {144}
	114 Move W8, [X21+32]
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Move X8, [X19+32]
	117 Move X0, X21
	118 Move X8, [X8+192]
	119 Move X1, [X8+168]
	120 Call Queue`1<Object>.Dequeue, X0
	121 Move X8, [X19+32]
	122 Move W9, [X20+44]
	123 Move X8, [X8+192]
	124 Subtract W9, W9, 1
	125 Move [X20+44], W9
	126 Compare X0, 0
	127 JumpIfEqual {144}
	128 Move X1, [X0+16]
	129 Move W2, [X0+24]
	130 Move X3, [X8+184]
	131 Move X0, X20
	132 Call 0x2EA82DC, X0, X1, X2
	133 Move W8, [X21+32]
	134 NotImplemented "Instruction CMP not yet implemented."
	135 Move X20, [X31+48]
	136 Move X19, [X31+56]
	137 Move X22, [X31+32]
	138 Move X21, [X31+40]
	139 Move X24, [X31+16]
	140 Move X23, [X31+24]
	141 Move X30, [X31+64]
	142 Move X25, [X31+72]
	143 Return 
	144 Call 0x1C17F20

Method: System.Void RemoveAt(TKey[] point)

Disassembly:
	0x02EA87D8 STR W21, [X31 + 0xC]
	0x02EA87DC LDR X8, [X20 + 0x20]
	0x02EA87E0 MOV X23, X0
	0x02EA87E4 ADD X1, X31, 0xC
	0x02EA87E8 ADD X24, X23, 0x18
	0x02EA87EC LDR X8, [X8 + 0xC0]
	0x02EA87F0 LDR X0, [X8 + 0x30]
	0x02EA87F4 BL 0x1C16E04
	0x02EA87F8 LDR X8, [X20 + 0x20]
	0x02EA87FC MOV X1, X0
	0x02EA8800 MOV X0, X24
	0x02EA8804 LDR X8, [X8 + 0xC0]
	0x02EA8808 LDR X2, [X8 + 0x180]
	0x02EA880C BL 0x337B650
	0x02EA8810 TBNZ X0, 0x0, 0x2EA8874
	0x02EA8814 MOVN W24, 0x2
	0x02EA8818 ADDS W31, W24, 0x1
	0x02EA881C CSEL X8, X26, X25, EQ
	0x02EA8820 LDR X1, [X23, X8, LSL]
	0x02EA8824 CBZ X1, 0x2EA883C
	0x02EA8828 LDR X8, [X20 + 0x20]
	0x02EA882C MOV X0, X22
	0x02EA8830 LDR X8, [X8 + 0xC0]
	0x02EA8834 LDR X2, [X8 + 0xA0]
	0x02EA8838 BL 0x24F1750
	0x02EA883C ADDS W24, W24, 0x2
	0x02EA8840 B.MI 0x2EA8818
	0x02EA8844 LDR W8, [X22 + 0x20]
	0x02EA8848 CMP W8, 0x0
	0x02EA884C B.GT 0x2EA87C0
	0x02EA8850 MOV X8, X31
	0x02EA8854 MOV W0, W31
	0x02EA8858 STR X8, [X19]
	0x02EA885C LDP X20, X19, [X31 + 0x40]
	0x02EA8860 LDP X22, X21, [X31 + 0x30]
	0x02EA8864 LDP X24, X23, [X31 + 0x20]
	0x02EA8868 LDP X26, X25, [X31 + 0x10]
	0x02EA886C LDR X30, [X31], #0x50
	0x02EA8870 RET
	0x02EA8874 LDR X8, [X23 + 0x10]
	0x02EA8878 MOVZ W0, 0x1
	0x02EA887C B 0x2EA8858
	0x02EA8880 BL 0x1C16F20
	0x02EA8884 STR X30, [X31 - 0x10]!
	0x02EA8888 STR X31, [X31 + 0x8]
	0x02EA888C LDR X8, [X2 + 0x20]
	0x02EA8890 ADD X2, X31, 0x8
	0x02EA8894 LDR X8, [X8 + 0xC0]
	0x02EA8898 LDR X3, [X8 + 0x188]
	0x02EA889C BL 0x2EA8734
	0x02EA88A0 LDR X8, [X31 + 0x8]
	0x02EA88A4 ANDS W31, W0, 0x1
	0x02EA88A8 CSEL X0, X8, X31, NE
	0x02EA88AC LDR X30, [X31], #0x10
	0x02EA88B0 RET
	0x02EA88B4 SUB X31, X31, 0x70
	0x02EA88B8 STP X29, X30, [X31 + 0x10]
	0x02EA88BC STP X28, X27, [X31 + 0x20]
	0x02EA88C0 STP X26, X25, [X31 + 0x30]
	0x02EA88C4 STP X24, X23, [X31 + 0x40]
	0x02EA88C8 STP X22, X21, [X31 + 0x50]
	0x02EA88CC STP X20, X19, [X31 + 0x60]
	0x02EA88D0 ADRP X19, 0x1533000
	0x02EA88D4 LDRB W8, [X19 + 0xA5A]
	0x02EA88D8 MOV W20, W3
	0x02EA88DC MOV X21, X2
	0x02EA88E0 MOV X22, X1
	0x02EA88E4 STP X0, X4, [X31]
	0x02EA88E8 TBNZ X8, 0x0, 0x2EA8924
	0x02EA88EC ADRP X0, 0x1277000
	0x02EA88F0 LDR X0, [X0 + 0xB8]
	0x02EA88F4 BL 0x1C16CF4
	0x02EA88F8 ADRP X0, 0x1277000
	0x02EA88FC LDR X0, [X0 + 0xC0]
	0x02EA8900 BL 0x1C16CF4
	0x02EA8904 ADRP X0, 0x1277000
	0x02EA8908 LDR X0, [X0 + 0xC8]
	0x02EA890C BL 0x1C16CF4
	0x02EA8910 ADRP X0, 0x124B000
	0x02EA8914 LDR X0, [X0 + 0x988]
	0x02EA8918 BL 0x1C16CF4
	0x02EA891C MOVZ W8, 0x1
	0x02EA8920 STRB W8, [X19 + 0xA5A]
	0x02EA8924 CBZ X22, 0x2EA8A24
	0x02EA8928 LDR X8, [X22]
	0x02EA892C MOV X0, X22
	0x02EA8930 LDP X9, X1, [X8 + 0x168]
	0x02EA8934 BLR X9
	0x02EA8938 CBZ X21, 0x2EA8A24
	0x02EA893C ADRP X25, 0x1277000
	0x02EA8940 ADRP X26, 0x1277000
	0x02EA8944 ADRP X28, 0x1277000
	0x02EA8948 LDR X25, [X25 + 0xC8]
	0x02EA894C LDR X26, [X26 + 0xC0]
	0x02EA8950 LDR X28, [X28 + 0xB8]
	0x02EA8954 MOV X1, X0
	0x02EA8958 MOV X0, X21
	0x02EA895C MOV X2, X31
	0x02EA8960 BL 0x32338A8
	0x02EA8964 ADD W24, W20, 0x1
	0x02EA8968 MOVN W29, 0x0
	0x02EA896C MOVZ W27, 0x28
	0x02EA8970 MOVZ W19, 0x30
	0x02EA8974 TBNZ X20, 0x1F, 0x2EA8998
	0x02EA8978 MOV W23, W31
	0x02EA897C LDR X1, [X28]
	0x02EA8980 MOV X0, X21
	0x02EA8984 MOV X2, X31
	0x02EA8988 BL 0x32333E0
	0x02EA898C ADD W23, W23, 0x1
	0x02EA8990 CMP W23, W20
	0x02EA8994 B.LE 0x2EA897C
	0x02EA8998 ADDS W31, W29, 0x1
	0x02EA899C CSEL X8, X25, X26, EQ
	0x02EA89A0 LDR X1, [X8]
	0x02EA89A4 MOV X0, X21
	0x02EA89A8 MOV X2, X31
	0x02EA89AC BL 0x32333E0
	0x02EA89B0 CMP W29, 0x0
	0x02EA89B4 CSEL X8, X19, X27, GT
	0x02EA89B8 LDR X1, [X22, X8, LSL]
	0x02EA89BC CBZ X1, 0x2EA89E0
	0x02EA89C0 LDP X0, X8, [X31]
	0x02EA89C4 MOV X2, X21
	0x02EA89C8 MOV W3, W24
	0x02EA89CC LDR X8, [X8 + 0x20]
	0x02EA89D0 LDR X8, [X8 + 0xC0]
	0x02EA89D4 LDR X4, [X8 + 0x190]
	0x02EA89D8 BL 0x2EA88B4
	0x02EA89DC B 0x2EA89F8
	0x02EA89E0 ADRP X8, 0x124B000
	0x02EA89E4 LDR X8, [X8 + 0x988]
	0x02EA89E8 MOV X0, X21
	0x02EA89EC MOV X2, X31
	0x02EA89F0 LDR X1, [X8]
	0x02EA89F4 BL 0x32338A8
	0x02EA89F8 ADDS W31, W29, 0x2
	0x02EA89FC ADD W29, W29, 0x2
	0x02EA8A00 B.CS 0x2EA8974
	0x02EA8A04 LDP X20, X19, [X31 + 0x60]
	0x02EA8A08 LDP X22, X21, [X31 + 0x50]
	0x02EA8A0C LDP X24, X23, [X31 + 0x40]
	0x02EA8A10 LDP X26, X25, [X31 + 0x30]
	0x02EA8A14 LDP X28, X27, [X31 + 0x20]
	0x02EA8A18 LDP X29, X30, [X31 + 0x10]
	0x02EA8A1C ADD X31, X31, 0x70
	0x02EA8A20 RET
	0x02EA8A24 BL 0x1C16F20
	0x02EA8A28 STP X30, X21, [X31 - 0x20]!
	0x02EA8A2C STP X20, X19, [X31 + 0x10]
	0x02EA8A30 ADRP X21, 0x1533000
	0x02EA8A34 LDRB W8, [X21 + 0xA5B]
	0x02EA8A38 MOV X20, X1
	0x02EA8A3C MOV X19, X0
	0x02EA8A40 TBNZ X8, 0x0, 0x2EA8A64
	0x02EA8A44 ADRP X0, 0x124B000
	0x02EA8A48 LDR X0, [X0 + 0x8F0]
	0x02EA8A4C BL 0x1C16CF4
	0x02EA8A50 ADRP X0, 0x124B000
	0x02EA8A54 LDR X0, [X0 + 0x988]
	0x02EA8A58 BL 0x1C16CF4
	0x02EA8A5C MOVZ W8, 0x1
	0x02EA8A60 STRB W8, [X21 + 0xA5B]
	0x02EA8A64 LDR X8, [X19 + 0x20]
	0x02EA8A68 CBZ X8, 0x2EA8AC4
	0x02EA8A6C ADRP X8, 0x124B000
	0x02EA8A70 LDR X8, [X8 + 0x8F0]
	0x02EA8A74 LDR X0, [X8]
	0x02EA8A78 BL 0x1C16F10
	0x02EA8A7C MOV X1, X31
	0x02EA8A80 MOV X21, X0
	0x02EA8A84 BL 0x3231AC4
	0x02EA8A88 LDR X8, [X20 + 0x20]
	0x02EA8A8C LDR X1, [X19 + 0x20]
	0x02EA8A90 MOV X0, X19
	0x02EA8A94 MOV X2, X21
	0x02EA8A98 LDR X8, [X8 + 0xC0]
	0x02EA8A9C MOV W3, W31
	0x02EA8AA0 LDR X4, [X8 + 0x190]
	0x02EA8AA4 BL 0x2EA88B4
	0x02EA8AA8 CBZ X21, 0x2EA8ADC
	0x02EA8AAC LDR X8, [X21]
	0x02EA8AB0 LDP X20, X19, [X31 + 0x10]
	0x02EA8AB4 MOV X0, X21
	0x02EA8AB8 LDP X2, X1, [X8 + 0x168]
	0x02EA8ABC LDP X30, X21, [X31], #0x20
	0x02EA8AC0 BR X2
	0x02EA8AC4 ADRP X8, 0x124B000
	0x02EA8AC8 LDR X8, [X8 + 0x988]
	0x02EA8ACC LDP X20, X19, [X31 + 0x10]
	0x02EA8AD0 LDR X0, [X8]

ISIL:
	001 Move [X31-112], D9
	002 Move [X31-104], D8
	003 Move [X31+16], X29
	004 Move [X31+24], X30
	005 Move [X31+32], X28
	006 Move [X31+40], X27
	007 Move [X31+48], X26
	008 Move [X31+56], X25
	009 Move [X31+64], X24
	010 Move [X31+72], X23
	011 Move [X31+80], X22
	012 Move [X31+88], X21
	013 Move [X31+96], X20
	014 Move [X31+104], X19
	015 Move X8, [X0+32]
	016 Compare X8, 0
	017 JumpIfEqual {218}
	018 Move X22, [X0+24]
	019 Move X19, X0
	020 Compare X22, 0
	021 JumpIfEqual {233}
	022 Move X9, [X2+32]
	023 Move X21, X1
	024 Move X23, [X8+16]
	025 Move X20, X2
	026 Move X9, [X9+192]
	027 Move X1, [X9+8]
	028 Move W9, [X1+309]
	029 Move TEMP, X9
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {36}
	033 Move X0, X1
	034 Call 0x1C5D684
	035 Move X1, X0
	036 Move X8, [X22]
	037 NotImplemented "Instruction LDRH not yet implemented."
	038 Compare X9, 0
	039 JumpIfEqual {46}
	040 Move X10, [X8+176]
	041 Add X10, X10, 8
	042 NotImplemented "Instruction LDUR not yet implemented."
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Subtract X9, X9, 1
	045 Add X10, X10, 16
	046 Move W2, 6
	047 Move X0, X22
	048 Call 0x1C5D788
	049 Move W9, [X10]
	050 Add W9, W9, 6
	051 Add X8, X8, W9
	052 Add X0, X8, 312
	053 Move X8, [X0]
	054 Move X3, [X0+8]
	055 Move X0, X22
	056 Move X1, X21
	057 Move X2, X23
	058 NotImplemented "Instruction BLR not yet implemented."
	059 Move X22, [X19+32]
	060 Move TEMP, X0
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfNotEqual {89}
	064 Move [X19+32], X31
	065 Move X8, [X20+32]
	066 Move W9, [X19+44]
	067 Move X0, X19
	068 Move X1, X22
	069 Move X8, [X8+192]
	070 Subtract W9, W9, 1
	071 Move [X19+44], W9
	072 Move X20, [X31+96]
	073 Move X19, [X31+104]
	074 Move X2, [X8+192]
	075 Move X22, [X31+80]
	076 Move X21, [X31+88]
	077 Move X24, [X31+64]
	078 Move X23, [X31+72]
	079 Move X26, [X31+48]
	080 Move X25, [X31+56]
	081 Move X28, [X31+32]
	082 Move X27, [X31+40]
	083 Move X29, [X31+16]
	084 Move X30, [X31+24]
	085 Move D9, [X31+112]
	086 Move D8, [X31+120]
	087 Call 0x2EA85EC, X0, X1
	088 Return 
	089 Compare X21, 0
	090 JumpIfEqual {233}
	091 Move TEMP, 0
	092 Not TEMP
	093 Move W26, TEMP
	094 Move W8, [X19+16]
	095 Move W9, [X21+24]
	096 Add W10, W26, 1
	097 NotImplemented "Instruction SDIV not yet implemented."
	098 NotImplemented "Instruction MSUB not yet implemented."
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Compare X22, 0
	101 JumpIfEqual {233}
	102 Move X8, [X22+16]
	103 Compare X8, 0
	104 JumpIfEqual {233}
	105 Move W10, [X8+24]
	106 Move X9, W26
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Move X23, [X19+24]
	109 Compare X23, 0
	110 JumpIfEqual {233}
	111 Move X10, [X20+32]
	112 Add X8, X8, X9
	113 Move V9, [X8+32]
	114 Move X10, [X10+192]
	115 Move X1, [X10+8]
	116 Add X10, X21, X9
	117 Move V8, [X10+32]
	118 Move W9, [X1+309]
	119 Move TEMP, X9
	120 And TEMP, TEMP, 1
	121 Compare TEMP, 1
	122 JumpIfEqual {126}
	123 Move X0, X1
	124 Call 0x1C5D684
	125 Move X1, X0
	126 Move X8, [X23]
	127 NotImplemented "Instruction LDRH not yet implemented."
	128 Compare X9, 0
	129 JumpIfEqual {136}
	130 Move X10, [X8+176]
	131 Add X10, X10, 8
	132 NotImplemented "Instruction LDUR not yet implemented."
	133 NotImplemented "Instruction CMP not yet implemented."
	134 Subtract X9, X9, 1
	135 Add X10, X10, 16
	136 Move X0, X23
	137 Move W2, W31
	138 Call 0x1C5D788
	139 NotImplemented "Instruction LDRSW not yet implemented."
	140 Add X8, X8, X9
	141 Add X0, X8, 312
	142 Move X8, [X0]
	143 Move X1, [X0+8]
	144 Move X0, X23
	145 Move V0, V8
	146 Move V1, V9
	147 NotImplemented "Instruction BLR not yet implemented."
	148 NotImplemented "Instruction CMP not yet implemented."
	149 Move W8, 40
	150 Move W9, 48
	151 NotImplemented "Instruction CSEL not yet implemented."
	152 Move X8, [X22]
	153 Add X29, X22, 40
	154 Add X27, X22, 48
	155 NotImplemented "Instruction CSEL not yet implemented."
	156 Compare X8, 0
	157 JumpIfEqual {218}
	158 Move X24, [X19+24]
	159 Compare X24, 0
	160 JumpIfEqual {233}
	161 Move X9, [X20+32]
	162 Move X25, [X8+16]
	163 Move W23, W0
	164 Move X9, [X9+192]
	165 Move X1, [X9+8]
	166 Move W9, [X1+309]
	167 Move TEMP, X9
	168 And TEMP, TEMP, 1
	169 Compare TEMP, 1
	170 JumpIfEqual {174}
	171 Move X0, X1
	172 Call 0x1C5D684
	173 Move X1, X0
	174 Move X8, [X24]
	175 NotImplemented "Instruction LDRH not yet implemented."
	176 Compare X9, 0
	177 JumpIfEqual {184}
	178 Move X10, [X8+176]
	179 Add X10, X10, 8
	180 NotImplemented "Instruction LDUR not yet implemented."
	181 NotImplemented "Instruction CMP not yet implemented."
	182 Subtract X9, X9, 1
	183 Add X10, X10, 16
	184 Move W2, 6
	185 Move X0, X24
	186 Call 0x1C5D788
	187 Move W9, [X10]
	188 Add W9, W9, 6
	189 Add X8, X8, W9
	190 Add X0, X8, 312
	191 Move X8, [X0]
	192 Move X3, [X0+8]
	193 Move X0, X24
	194 Move X1, X21
	195 Move X2, X25
	196 NotImplemented "Instruction BLR not yet implemented."
	197 Move X1, [X28]
	198 Move TEMP, X0
	199 And TEMP, TEMP, 1
	200 Compare TEMP, 1
	201 JumpIfNotEqual {215}
	202 Move X8, [X20+32]
	203 NotImplemented "Instruction CMP not yet implemented."
	204 NotImplemented "Instruction CSEL not yet implemented."
	205 Move X0, X19
	206 Move X8, [X8+192]
	207 Move [X9], X31
	208 Move W9, [X19+44]
	209 Subtract W9, W9, 1
	210 Move [X19+44], W9
	211 Move X2, [X8+192]
	212 Call 0x2EA85EC, X0, X1
	213 Compare X22, 0
	214 JumpIfNotEqual {94}
	215 Move X22, X1
	216 Compare X22, 0
	217 JumpIfNotEqual {94}
	218 Move X20, [X31+96]
	219 Move X19, [X31+104]
	220 Move X22, [X31+80]
	221 Move X21, [X31+88]
	222 Move X24, [X31+64]
	223 Move X23, [X31+72]
	224 Move X26, [X31+48]
	225 Move X25, [X31+56]
	226 Move X28, [X31+32]
	227 Move X27, [X31+40]
	228 Move X29, [X31+16]
	229 Move X30, [X31+24]
	230 Move D9, [X31+112]
	231 Move D8, [X31+120]
	232 Return 
	233 Call 0x1C17F20
	234 Call 0x1C17F28

Method: UnityEngine.ProBuilder.KdTree.KdTreeNode`2<TKey, TValue>[] GetNearestNeighbours(TKey[] point, System.Int32 count)

Disassembly:
	0x02EA8AD4 LDP X30, X21, [X31], #0x20
	0x02EA8AD8 RET
	0x02EA8ADC BL 0x1C16F20
	0x02EA8AE0 STR X30, [X31 - 0x40]!
	0x02EA8AE4 STP X24, X23, [X31 + 0x10]
	0x02EA8AE8 STP X22, X21, [X31 + 0x20]
	0x02EA8AEC STP X20, X19, [X31 + 0x30]
	0x02EA8AF0 CBZ X1, 0x2EA8BB8
	0x02EA8AF4 MOV X20, X2
	0x02EA8AF8 CBZ X2, 0x2EA8BCC
	0x02EA8AFC LDR X8, [X3 + 0x20]
	0x02EA8B00 LDR W10, [X20 + 0x1C]
	0x02EA8B04 MOV X19, X3
	0x02EA8B08 LDR X9, [X8 + 0xC0]
	0x02EA8B0C LDR X8, [X20 + 0x10]
	0x02EA8B10 ADD W10, W10, 0x1
	0x02EA8B14 LDR X9, [X9 + 0x1A0]
	0x02EA8B18 STR W10, [X20 + 0x1C]
	0x02EA8B1C CBZ X8, 0x2EA8BCC
	0x02EA8B20 LDRSW X10, [X20 + 0x18]
	0x02EA8B24 LDR W11, [X8 + 0x18]
	0x02EA8B28 MOV X22, X1
	0x02EA8B2C MOV X21, X0
	0x02EA8B30 CMP W10, W11
	0x02EA8B34 B.CS 0x2EA8B4C
	0x02EA8B38 ADD W9, W10, 0x1
	0x02EA8B3C ADD X8, X8, X10, 0x3, LSL
	0x02EA8B40 STR W9, [X20 + 0x18]
	0x02EA8B44 STR X22, [X8 + 0x20]
	0x02EA8B48 B 0x2EA8B64
	0x02EA8B4C LDR X8, [X9 + 0x20]
	0x02EA8B50 MOV X0, X20
	0x02EA8B54 MOV X1, X22
	0x02EA8B58 LDR X8, [X8 + 0xC0]
	0x02EA8B5C LDR X2, [X8 + 0x70]
	0x02EA8B60 BL 0x301BF90
	0x02EA8B64 ADD X23, X22, 0x28
	0x02EA8B68 ADD X22, X22, 0x30
	0x02EA8B6C MOVN W24, 0x2
	0x02EA8B70 ADD W24, W24, 0x2
	0x02EA8B74 CMP W24, 0x0
	0x02EA8B78 CSEL X8, X22, X23, GT
	0x02EA8B7C LDR X1, [X8]
	0x02EA8B80 CBZ X1, 0x2EA8BA8
	0x02EA8B84 LDR X8, [X19 + 0x20]
	0x02EA8B88 MOV X0, X21
	0x02EA8B8C MOV X2, X20
	0x02EA8B90 LDR X8, [X8 + 0xC0]
	0x02EA8B94 LDR X3, [X8 + 0x1A8]
	0x02EA8B98 BL 0x2EA8AE0
	0x02EA8B9C CMP W24, 0x0
	0x02EA8BA0 B.GT 0x2EA8BB4
	0x02EA8BA4 STR X31, [X23]
	0x02EA8BA8 ADDS W31, W24, 0x3
	0x02EA8BAC B.HI 0x2EA8B70
	0x02EA8BB0 B 0x2EA8BB8
	0x02EA8BB4 STR X31, [X22]
	0x02EA8BB8 LDP X20, X19, [X31 + 0x30]
	0x02EA8BBC LDP X22, X21, [X31 + 0x20]
	0x02EA8BC0 LDP X24, X23, [X31 + 0x10]
	0x02EA8BC4 LDR X30, [X31], #0x40
	0x02EA8BC8 RET
	0x02EA8BCC BL 0x1C16F20
	0x02EA8BD0 SUB X31, X31, 0x80
	0x02EA8BD4 STP D9, D8, [X31 + 0x10]
	0x02EA8BD8 STP X29, X30, [X31 + 0x20]
	0x02EA8BDC STP X28, X27, [X31 + 0x30]
	0x02EA8BE0 STP X26, X25, [X31 + 0x40]
	0x02EA8BE4 STP X24, X23, [X31 + 0x50]
	0x02EA8BE8 STP X22, X21, [X31 + 0x60]
	0x02EA8BEC STP X20, X19, [X31 + 0x70]
	0x02EA8BF0 ADD W9, W3, 0x1
	0x02EA8BF4 CMP W9, W4
	0x02EA8BF8 STR X5, [X31 + 0x8]
	0x02EA8BFC STR W4, [X31 + 0x4]
	0x02EA8C00 B.GT 0x2EA8D7C
	0x02EA8C04 MOV X22, X1
	0x02EA8C08 CBZ X1, 0x2EA8DA4
	0x02EA8C0C MOV W21, W2
	0x02EA8C10 MOV W23, W3
	0x02EA8C14 MOV X24, X0
	0x02EA8C18 SXTW X28, W21
	0x02EA8C1C LDR W8, [X22 + 0x18]
	0x02EA8C20 CMP W23, W8
	0x02EA8C24 B.CS 0x2EA8DA0
	0x02EA8C28 MOV W29, W9
	0x02EA8C2C ADD X9, X22, 0x20
	0x02EA8C30 ADD X20, X9, W23, 0x3, SXTW
	0x02EA8C34 ADD X19, X9, W29, 0x3, SXTW
	0x02EA8C38 CMP W29, W8
	0x02EA8C3C B.CS 0x2EA8DA0
	0x02EA8C40 LDR X26, [X19]
	0x02EA8C44 CBZ X26, 0x2EA8DA4
	0x02EA8C48 LDR X8, [X26 + 0x10]
	0x02EA8C4C CBZ X8, 0x2EA8DA4
	0x02EA8C50 LDR W9, [X8 + 0x18]
	0x02EA8C54 CMP W9, W21
	0x02EA8C58 B.LS 0x2EA8DA0
	0x02EA8C5C LDR X25, [X20]
	0x02EA8C60 CBZ X25, 0x2EA8DA4
	0x02EA8C64 LDR X9, [X25 + 0x10]
	0x02EA8C68 CBZ X9, 0x2EA8DA4
	0x02EA8C6C LDR W10, [X9 + 0x18]
	0x02EA8C70 CMP W10, W21
	0x02EA8C74 B.LS 0x2EA8DA0
	0x02EA8C78 LDR X27, [X24 + 0x18]
	0x02EA8C7C CBZ X27, 0x2EA8DA4
	0x02EA8C80 LDR X10, [X31 + 0x8]
	0x02EA8C84 ADD X8, X8, X28, 0x2, LSL
	0x02EA8C88 LDR V8, [X8 + 0x20]
	0x02EA8C8C ADD X8, X9, X28, 0x2, LSL
	0x02EA8C90 LDR X10, [X10 + 0x20]
	0x02EA8C94 LDR V9, [X8 + 0x20]
	0x02EA8C98 LDR X10, [X10 + 0xC0]
	0x02EA8C9C LDR X1, [X10 + 0x8]
	0x02EA8CA0 LDRB W9, [X1 + 0x135]
	0x02EA8CA4 TBNZ X9, 0x0, 0x2EA8CB4
	0x02EA8CA8 MOV X0, X1
	0x02EA8CAC BL 0x1C5C684
	0x02EA8CB0 MOV X1, X0
	0x02EA8CB4 LDR X8, [X27]
	0x02EA8CB8 LDRH W9, [X8 + 0x12E]
	0x02EA8CBC CBZ X9, 0x2EA8CE0
	0x02EA8CC0 LDR X10, [X8 + 0xB0]
	0x02EA8CC4 ADD X10, X10, 0x8
	0x02EA8CC8 LDUR X11, [X10 - 0x8]
	0x02EA8CCC CMP X11, X1
	0x02EA8CD0 B.EQ 0x2EA8CF0
	0x02EA8CD4 SUBS X9, X9, 0x1
	0x02EA8CD8 ADD X10, X10, 0x10
	0x02EA8CDC B.NE 0x2EA8CC8
	0x02EA8CE0 MOV X0, X27
	0x02EA8CE4 MOV W2, W31
	0x02EA8CE8 BL 0x1C5C788
	0x02EA8CEC B 0x2EA8CFC
	0x02EA8CF0 LDRSW X9, [X10]
	0x02EA8CF4 ADD X8, X8, X9, 0x4, LSL
	0x02EA8CF8 ADD X0, X8, 0x138
	0x02EA8CFC LDP X8, X1, [X0]
	0x02EA8D00 MOV X0, X27
	0x02EA8D04 MOV V0.16B, V8.16B
	0x02EA8D08 MOV V1.16B, V9.16B
	0x02EA8D0C BLR X8
	0x02EA8D10 TBZ X0, 0x1F, 0x2EA8D68
	0x02EA8D14 LDR X8, [X22]
	0x02EA8D18 MOV X0, X26
	0x02EA8D1C LDR X1, [X8 + 0x40]
	0x02EA8D20 BL 0x1C16E00
	0x02EA8D24 CBZ X0, 0x2EA8DA8
	0x02EA8D28 LDR W8, [X22 + 0x18]
	0x02EA8D2C CMP W23, W8
	0x02EA8D30 B.CS 0x2EA8DA0
	0x02EA8D34 STR X26, [X20]
	0x02EA8D38 LDR X8, [X22]
	0x02EA8D3C MOV X0, X25
	0x02EA8D40 LDR X1, [X8 + 0x40]
	0x02EA8D44 BL 0x1C16E00
	0x02EA8D48 CBZ X0, 0x2EA8DA8
	0x02EA8D4C LDR X8, [X22 + 0x18]
	0x02EA8D50 CMP W29, W8
	0x02EA8D54 B.CS 0x2EA8DA0

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move W8, [X0+44]
	011 Move X19, X3
	012 NotImplemented "Instruction CMP not yet implemented."
	013 NotImplemented "Instruction CSEL not yet implemented."
	014 Move TEMP, X23
	015 And TEMP, TEMP, -2147483648
	016 Compare TEMP, -2147483648
	017 JumpIfEqual {177}
	018 Move X8, [X19+32]
	019 Move X8, [X8+192]
	020 Compare W23, 0
	021 JumpIfEqual {76}
	022 Move X21, X0
	023 Move X0, [X8+208]
	024 Move X24, [X21+24]
	025 Move X22, X1
	026 Move W8, [X0+309]
	027 Move TEMP, X8
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {32}
	031 Call 0x1C5D684
	032 Call 0x1C17F10
	033 Move X8, [X19+32]
	034 Move W1, W23
	035 Move X2, X24
	036 Move X20, X0
	037 Move X8, [X8+192]
	038 Move X3, [X8+216]
	039 Call 0x240ABF8, X0, X1, X2
	040 Move X8, [X19+32]
	041 Move W0, [X21+16]
	042 Move X1, [X21+24]
	043 Move X8, [X8+192]
	044 Move X2, [X8+224]
	045 Call 0x2DE1A78, X0, X1
	046 Move X26, [X21+24]
	047 Compare X26, 0
	048 JumpIfEqual {172}
	049 Move X8, [X19+32]
	050 Move X24, X1
	051 Move X25, [X21+32]
	052 Move X23, X0
	053 Move X8, [X8+192]
	054 Move X1, [X8+8]
	055 Move W8, [X1+309]
	056 Move TEMP, X8
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfEqual {63}
	060 Move X0, X1
	061 Call 0x1C5D684
	062 Move X1, X0
	063 Move X8, [X26]
	064 NotImplemented "Instruction LDRH not yet implemented."
	065 Compare X9, 0
	066 JumpIfEqual {73}
	067 Move X10, [X8+176]
	068 Add X10, X10, 8
	069 NotImplemented "Instruction LDUR not yet implemented."
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Subtract X9, X9, 1
	072 Add X10, X10, 16
	073 Move W2, 2
	074 Move X0, X26
	075 Call 0x1C5D788
	076 Move X0, [X8+200]
	077 Move W8, [X0+309]
	078 Move TEMP, X8
	079 And TEMP, TEMP, 1
	080 Compare TEMP, 1
	081 JumpIfEqual {83}
	082 Call 0x1C5D684
	083 Move X20, [X31+64]
	084 Move X19, [X31+72]
	085 Move X22, [X31+48]
	086 Move X21, [X31+56]
	087 Move X24, [X31+32]
	088 Move X23, [X31+40]
	089 Move X26, [X31+16]
	090 Move X25, [X31+24]
	091 Move W1, W31
	092 Move X30, [X31+80]
	093 Call 0x1C17D6C
	094 Return X0
	095 Move W9, [X10]
	096 Add W9, W9, 2
	097 Add X8, X8, W9
	098 Add X0, X8, 312
	099 Move X8, [X0]
	100 Move X1, [X0+8]
	101 Move X0, X26
	102 NotImplemented "Instruction BLR not yet implemented."
	103 Move X8, [X19+32]
	104 Move X0, X21
	105 Move X1, X25
	106 Move X2, X22
	107 Move X8, [X8+192]
	108 Move X3, X23
	109 Move X4, X24
	110 Move W5, W31
	111 Move X7, [X8+256]
	112 Move X6, X20
	113 Call 0x2EA8D58, X0, X1, X2, X3, X4, X5, X6
	114 Compare X20, 0
	115 JumpIfEqual {172}
	116 Move X8, [X19+32]
	117 Move X0, X20
	118 Move X8, [X8+192]
	119 Move X1, [X8+264]
	120 Call 0x240AC78, X0
	121 Move X8, [X19+32]
	122 Move W22, W0
	123 Move X8, [X8+192]
	124 Move X8, [X8+200]
	125 Move W9, [X8+309]
	126 Move TEMP, X9
	127 And TEMP, TEMP, 1
	128 Compare TEMP, 1
	129 JumpIfEqual {133}
	130 Move X0, X8
	131 Call 0x1C5D684
	132 Move X8, X0
	133 Move X0, X8
	134 Move W1, W22
	135 Call 0x1C17D6C
	136 NotImplemented "Instruction CMP not yet implemented."
	137 Move X21, X0
	138 Move W23, W22
	139 Move X8, [X19+32]
	140 Move X0, X20
	141 Move X8, [X8+192]
	142 Move X1, [X8+272]
	143 Call 0x240AEAC, X0
	144 Compare X21, 0
	145 JumpIfEqual {172}
	146 Move X22, X0
	147 Compare X0, 0
	148 JumpIfEqual {155}
	149 Move X8, [X21]
	150 Move X0, X22
	151 Move X1, [X8+64]
	152 Call 0x1C17E00
	153 Compare X0, 0
	154 JumpIfEqual {174}
	155 Move W9, [X21+24]
	156 Subtract X8, X23, 1
	157 NotImplemented "Instruction CMP not yet implemented."
	158 Add X8, X21, W8
	159 Subtract X23, X23, 1
	160 Move [X8+32], X22
	161 Move X0, X21
	162 Move X20, [X31+64]
	163 Move X19, [X31+72]
	164 Move X22, [X31+48]
	165 Move X21, [X31+56]
	166 Move X24, [X31+32]
	167 Move X23, [X31+40]
	168 Move X26, [X31+16]
	169 Move X25, [X31+24]
	170 Move X30, [X31+80]
	171 Return X0
	172 Call 0x1C17F20
	173 Call 0x1C17F28
	174 Call 0x1C17F44
	175 Move X1, X31
	176 Call 0x1C17DEC
	177 Move X0, 0x1254000
	178 Move X0, [X0+1400]
	179 Call 0x1C17D08
	180 Call 0x1C17F10
	181 Move X20, X0
	182 Move X0, 0x1278000
	183 Move X0, [X0+176]
	184 Call 0x1C17D08
	185 Move X1, X0
	186 Move X0, X20
	187 Move X2, X31
	188 Call ArgumentException..ctor, X0, X1
	189 Move X0, X20
	190 Move X1, X19
	191 Call 0x1C17DEC

Method: System.Void AddNearestNeighbours(UnityEngine.ProBuilder.KdTree.KdTreeNode`2<TKey, TValue> node, TKey[] target, UnityEngine.ProBuilder.KdTree.HyperRect`1<TKey> rect, System.Int32 depth, UnityEngine.ProBuilder.KdTree.NearestNeighbourList`2<UnityEngine.ProBuilder.KdTree.KdTreeNode`2<TKey, TValue>, TKey> nearestNeighbours, TKey maxSearchRadiusSquared)

Disassembly:
	0x02EA8D58 CMP W23, W8
	0x02EA8D5C STR X25, [X19]
	0x02EA8D60 B.CC 0x2EA8C38
	0x02EA8D64 B 0x2EA8DA0
	0x02EA8D68 LDR W8, [X31 + 0x4]
	0x02EA8D6C ADD W9, W29, 0x1
	0x02EA8D70 MOV W23, W29
	0x02EA8D74 CMP W9, W8
	0x02EA8D78 B.LE 0x2EA8C1C
	0x02EA8D7C LDP X20, X19, [X31 + 0x70]
	0x02EA8D80 LDP X22, X21, [X31 + 0x60]
	0x02EA8D84 LDP X24, X23, [X31 + 0x50]
	0x02EA8D88 LDP X26, X25, [X31 + 0x40]
	0x02EA8D8C LDP X28, X27, [X31 + 0x30]
	0x02EA8D90 LDP X29, X30, [X31 + 0x20]
	0x02EA8D94 LDP D9, D8, [X31 + 0x10]
	0x02EA8D98 ADD X31, X31, 0x80
	0x02EA8D9C RET
	0x02EA8DA0 BL 0x1C16F28
	0x02EA8DA4 BL 0x1C16F20
	0x02EA8DA8 BL 0x1C16F44
	0x02EA8DAC MOV X1, X31
	0x02EA8DB0 BL 0x1C16DEC
	0x02EA8DB4 SUB X31, X31, 0x70
	0x02EA8DB8 STP D9, D8, [X31 + 0x10]
	0x02EA8DBC STP X30, X27, [X31 + 0x20]
	0x02EA8DC0 STP X26, X25, [X31 + 0x30]
	0x02EA8DC4 STP X24, X23, [X31 + 0x40]
	0x02EA8DC8 STP X22, X21, [X31 + 0x50]
	0x02EA8DCC STP X20, X19, [X31 + 0x60]
	0x02EA8DD0 ADRP X25, 0x1533000
	0x02EA8DD4 LDRB W8, [X25 + 0xA5C]
	0x02EA8DD8 MOV X20, X5
	0x02EA8DDC MOV W23, W4
	0x02EA8DE0 MOV W22, W3
	0x02EA8DE4 MOV W24, W2
	0x02EA8DE8 MOV X19, X1
	0x02EA8DEC MOV X21, X0
	0x02EA8DF0 TBNZ X8, 0x0, 0x2EA8E08
	0x02EA8DF4 ADRP X0, 0x124B000
	0x02EA8DF8 LDR X0, [X0 + 0x5A8]
	0x02EA8DFC BL 0x1C16CF4
	0x02EA8E00 MOVZ W8, 0x1
	0x02EA8E04 STRB W8, [X25 + 0xA5C]
	0x02EA8E08 CMP W22, W23
	0x02EA8E0C B.NE 0x2EA8E5C
	0x02EA8E10 CBZ X19, 0x2EA9024
	0x02EA8E14 LDR W8, [X19 + 0x18]
	0x02EA8E18 CMP W8, W22
	0x02EA8E1C B.LS 0x2EA9028
	0x02EA8E20 ADD X23, X19, W22, 0x3, SXTW
	0x02EA8E24 LDR X8, [X23 + 0x20]!
	0x02EA8E28 CBZ X8, 0x2EA9024
	0x02EA8E2C LDR X9, [X20 + 0x20]
	0x02EA8E30 LDR X1, [X8 + 0x10]
	0x02EA8E34 LDR W2, [X8 + 0x18]
	0x02EA8E38 MOV X0, X21
	0x02EA8E3C LDR X9, [X9 + 0xC0]
	0x02EA8E40 LDR X3, [X9 + 0xB8]
	0x02EA8E44 BL 0x2EA72DC
	0x02EA8E48 LDR W8, [X19 + 0x18]
	0x02EA8E4C CMP W8, W22
	0x02EA8E50 B.LS 0x2EA9028
	0x02EA8E54 STR X31, [X23]
	0x02EA8E58 B 0x2EA9004
	0x02EA8E5C LDR X8, [X20 + 0x20]
	0x02EA8E60 ADRP X25, 0x124B000
	0x02EA8E64 MOV X0, X21
	0x02EA8E68 MOV X1, X19
	0x02EA8E6C LDR X8, [X8 + 0xC0]
	0x02EA8E70 MOV W2, W24
	0x02EA8E74 MOV W3, W22
	0x02EA8E78 MOV W4, W23
	0x02EA8E7C LDR X5, [X8 + 0x1B0]
	0x02EA8E80 LDR X25, [X25 + 0x5A8]
	0x02EA8E84 BL 0x2EA8BD0
	0x02EA8E88 LDR X0, [X25]
	0x02EA8E8C LDR W8, [X0 + 0xE0]
	0x02EA8E90 CBNZ W8, 0x2EA8E98
	0x02EA8E94 BL 0x1C16DFC
	0x02EA8E98 SUB W8, W23, W22
	0x02EA8E9C ADD W8, W8, 0x1
	0x02EA8EA0 SCVTF S0, W8
	0x02EA8EA4 FMOV S1, 0.5
	0x02EA8EA8 FMUL S9, S0, S1
	0x02EA8EAC FCVT S8, S9
	0x02EA8EB0 ADD X0, X31, 0x8
	0x02EA8EB4 MOV V0.16B, V8.16B
	0x02EA8EB8 BL 0x3EB1C00
	0x02EA8EBC FCMP S9, 0x0
	0x02EA8EC0 B.GE 0x2EA8EDC
	0x02EA8EC4 FMOV D1, -0.5
	0x02EA8EC8 FCMP D0, D1
	0x02EA8ECC B.NE 0x2EA8F04
	0x02EA8ED0 LDR V0, [X31 + 0x8]
	0x02EA8ED4 FMOV D1, -1
	0x02EA8ED8 B 0x2EA8EF0
	0x02EA8EDC FMOV D1, 0.5
	0x02EA8EE0 FCMP D0, D1
	0x02EA8EE4 B.NE 0x2EA8F10
	0x02EA8EE8 LDR V0, [X31 + 0x8]
	0x02EA8EEC FMOV D1, 1
	0x02EA8EF0 FCVTZS X8, D0
	0x02EA8EF4 FADD D1, D0, D1
	0x02EA8EF8 ANDS X31, X8, 0x1
	0x02EA8EFC FCSEL D0, D0, D1, EQ
	0x02EA8F00 B 0x2EA8F18
	0x02EA8F04 FADD D0, D8, D1
	0x02EA8F08 FRINTP D0, D0
	0x02EA8F0C B 0x2EA8F18
	0x02EA8F10 FADD D0, D8, D1
	0x02EA8F14 FRINTM D0, D0
	0x02EA8F18 MOVZ X8, 0x7FF00000
	0x02EA8F1C FMOV D1, X8
	0x02EA8F20 FCVTZS W9, D0
	0x02EA8F24 FCMP D0, D1
	0x02EA8F28 MOVZ W8, 0x80000000
	0x02EA8F2C CSEL W8, W8, W9, EQ
	0x02EA8F30 CBZ X19, 0x2EA9024
	0x02EA8F34 LDR W9, [X19 + 0x18]
	0x02EA8F38 ADD W25, W8, W22
	0x02EA8F3C SUB W26, W25, 0x1
	0x02EA8F40 CMP W26, W9
	0x02EA8F44 B.CS 0x2EA9028
	0x02EA8F48 ADD X27, X19, W26, 0x3, SXTW
	0x02EA8F4C LDR X8, [X27 + 0x20]!
	0x02EA8F50 CBZ X8, 0x2EA9024
	0x02EA8F54 LDR X9, [X20 + 0x20]
	0x02EA8F58 LDR X1, [X8 + 0x10]
	0x02EA8F5C LDR W2, [X8 + 0x18]
	0x02EA8F60 MOV X0, X21
	0x02EA8F64 LDR X9, [X9 + 0xC0]
	0x02EA8F68 LDR X3, [X9 + 0xB8]
	0x02EA8F6C BL 0x2EA72DC
	0x02EA8F70 LDR W8, [X19 + 0x18]
	0x02EA8F74 CMP W26, W8
	0x02EA8F78 B.CS 0x2EA9028
	0x02EA8F7C STR X31, [X27]
	0x02EA8F80 LDR W8, [X21 + 0x10]
	0x02EA8F84 ADD W9, W24, 0x1
	0x02EA8F88 CMP W26, W22
	0x02EA8F8C SDIV W10, W9, W8
	0x02EA8F90 MSUB W24, W10, W8, W9
	0x02EA8F94 B.LE 0x2EA8FBC
	0x02EA8F98 LDR X8, [X20 + 0x20]
	0x02EA8F9C SUB W4, W25, 0x2
	0x02EA8FA0 MOV X0, X21
	0x02EA8FA4 MOV X1, X19
	0x02EA8FA8 LDR X8, [X8 + 0xC0]
	0x02EA8FAC MOV W2, W24
	0x02EA8FB0 MOV W3, W22
	0x02EA8FB4 LDR X5, [X8 + 0x1B8]
	0x02EA8FB8 BL 0x2EA8DB4
	0x02EA8FBC CMP W26, W23
	0x02EA8FC0 B.GE 0x2EA9004
	0x02EA8FC4 LDR X8, [X20 + 0x20]
	0x02EA8FC8 MOV X0, X21
	0x02EA8FCC MOV X1, X19
	0x02EA8FD0 MOV W2, W24
	0x02EA8FD4 LDR X8, [X8 + 0xC0]
	0x02EA8FD8 MOV W3, W25
	0x02EA8FDC MOV W4, W23
	0x02EA8FE0 LDP X20, X19, [X31 + 0x60]
	0x02EA8FE4 LDR X5, [X8 + 0x1B8]
	0x02EA8FE8 LDP X22, X21, [X31 + 0x50]
	0x02EA8FEC LDP X24, X23, [X31 + 0x40]
	0x02EA8FF0 LDP X26, X25, [X31 + 0x30]
	0x02EA8FF4 LDP X30, X27, [X31 + 0x20]
	0x02EA8FF8 LDP D9, D8, [X31 + 0x10]
	0x02EA8FFC ADD X31, X31, 0x70
	0x02EA9000 B 0x2EA8DB4
	0x02EA9004 LDP X20, X19, [X31 + 0x60]
	0x02EA9008 LDP X22, X21, [X31 + 0x50]
	0x02EA900C LDP X24, X23, [X31 + 0x40]
	0x02EA9010 LDP X26, X25, [X31 + 0x30]
	0x02EA9014 LDP X30, X27, [X31 + 0x20]
	0x02EA9018 LDP D9, D8, [X31 + 0x10]
	0x02EA901C ADD X31, X31, 0x70
	0x02EA9020 RET
	0x02EA9024 BL 0x1C16F20
	0x02EA9028 BL 0x1C16F28
	0x02EA902C STP X30, X21, [X31 - 0x20]!
	0x02EA9030 STP X20, X19, [X31 + 0x10]
	0x02EA9034 LDR X8, [X1 + 0x20]
	0x02EA9038 MOV X19, X1
	0x02EA903C MOV X20, X0
	0x02EA9040 LDR X8, [X8 + 0xC0]
	0x02EA9044 LDR X8, [X8 + 0x198]
	0x02EA9048 LDRB W9, [X8 + 0x135]
	0x02EA904C TBNZ X9, 0x0, 0x2EA905C
	0x02EA9050 MOV X0, X8
	0x02EA9054 BL 0x1C5C684
	0x02EA9058 MOV X8, X0
	0x02EA905C MOV X0, X8
	0x02EA9060 BL 0x1C16F10
	0x02EA9064 LDR X8, [X19 + 0x20]
	0x02EA9068 MOV X21, X0
	0x02EA906C LDR X8, [X8 + 0xC0]
	0x02EA9070 LDR X1, [X8 + 0x1C0]
	0x02EA9074 BL 0x301B7C4
	0x02EA9078 LDR X8, [X19 + 0x20]
	0x02EA907C LDR X1, [X20 + 0x20]
	0x02EA9080 MOV X0, X20
	0x02EA9084 MOV X2, X21
	0x02EA9088 LDR X8, [X8 + 0xC0]
	0x02EA908C LDR X3, [X8 + 0x1A8]
	0x02EA9090 BL 0x2EA8AE0
	0x02EA9094 LDR X1, [X20 + 0x20]
	0x02EA9098 CBZ X1, 0x2EA90BC
	0x02EA909C LDR X8, [X19 + 0x20]
	0x02EA90A0 MOV X0, X20
	0x02EA90A4 LDR X8, [X8 + 0xC0]
	0x02EA90A8 LDR X8, [X8 + 0x1C8]
	0x02EA90AC LDR X8, [X8 + 0x20]
	0x02EA90B0 LDR X8, [X8 + 0xC0]
	0x02EA90B4 LDR X2, [X8 + 0x1E0]
	0x02EA90B8 BL 0x2EA9108
	0x02EA90BC CBZ X21, 0x2EA9104
	0x02EA90C0 LDR X8, [X19 + 0x20]
	0x02EA90C4 MOV X0, X21
	0x02EA90C8 LDR X8, [X8 + 0xC0]
	0x02EA90CC LDR X1, [X8 + 0x1D0]
	0x02EA90D0 BL 0x301DDC4
	0x02EA90D4 LDR X8, [X19 + 0x20]
	0x02EA90D8 LDR W9, [X21 + 0x18]
	0x02EA90DC MOV X1, X0
	0x02EA90E0 MOV X0, X20
	0x02EA90E4 LDR X8, [X8 + 0xC0]
	0x02EA90E8 LDP X20, X19, [X31 + 0x10]
	0x02EA90EC SUB W4, W9, 0x1
	0x02EA90F0 MOV W2, W31
	0x02EA90F4 LDR X5, [X8 + 0x1B8]
	0x02EA90F8 MOV W3, W31
	0x02EA90FC LDP X30, X21, [X31], #0x20
	0x02EA9100 B 0x2EA8DB4
	0x02EA9104 BL 0x1C16F20
	0x02EA9108 STP X30, X23, [X31 - 0x30]!
	0x02EA910C STP X22, X21, [X31 + 0x10]
	0x02EA9110 STP X20, X19, [X31 + 0x20]
	0x02EA9114 CBZ X1, 0x2EA9180
	0x02EA9118 MOV X19, X2
	0x02EA911C MOV X20, X0
	0x02EA9120 ADD X22, X1, 0x28
	0x02EA9124 ADD X21, X1, 0x30
	0x02EA9128 MOVN W23, 0x2
	0x02EA912C ADD W23, W23, 0x2
	0x02EA9130 CMP W23, 0x0
	0x02EA9134 CSEL X8, X21, X22, GT
	0x02EA9138 LDR X1, [X8]
	0x02EA913C CBZ X1, 0x2EA9160
	0x02EA9140 LDR X8, [X19 + 0x20]
	0x02EA9144 MOV X0, X20
	0x02EA9148 LDR X8, [X8 + 0xC0]
	0x02EA914C LDR X2, [X8 + 0x1E0]
	0x02EA9150 BL 0x2EA9108
	0x02EA9154 CMP W23, 0x0
	0x02EA9158 B.GT 0x2EA916C
	0x02EA915C STR X31, [X22]
	0x02EA9160 ADDS W31, W23, 0x3
	0x02EA9164 B.HI 0x2EA912C
	0x02EA9168 B 0x2EA9170
	0x02EA916C STR X31, [X21]
	0x02EA9170 LDP X20, X19, [X31 + 0x20]
	0x02EA9174 LDP X22, X21, [X31 + 0x10]
	0x02EA9178 LDP X30, X23, [X31], #0x30
	0x02EA917C RET
	0x02EA9180 BL 0x1C16F20
	0x02EA9184 LDR X8, [X0 + 0x20]
	0x02EA9188 CBZ X8, 0x2EA91A0
	0x02EA918C LDR X9, [X1 + 0x20]
	0x02EA9190 MOV X1, X8
	0x02EA9194 LDR X9, [X9 + 0xC0]
	0x02EA9198 LDR X2, [X9 + 0x1E0]
	0x02EA919C B 0x2EA9108
	0x02EA91A0 RET
	0x02EA91A4 STR X30, [X31 - 0x30]!
	0x02EA91A8 STP X22, X21, [X31 + 0x10]
	0x02EA91AC STP X20, X19, [X31 + 0x20]
	0x02EA91B0 ADRP X22, 0x1532000
	0x02EA91B4 ADRP X21, 0x1276000
	0x02EA91B8 LDRB W8, [X22 + 0xA5D]
	0x02EA91BC LDR X21, [X21 + 0xD0]
	0x02EA91C0 MOV X19, X1
	0x02EA91C4 MOV X20, X0
	0x02EA91C8 TBNZ X8, 0x0, 0x2EA91EC
	0x02EA91CC ADRP X0, 0x1276000
	0x02EA91D0 LDR X0, [X0 + 0xD0]
	0x02EA91D4 BL 0x1C16CF4
	0x02EA91D8 ADRP X0, 0x124A000
	0x02EA91DC LDR X0, [X0 + 0xE00]
	0x02EA91E0 BL 0x1C16CF4
	0x02EA91E4 MOVZ W8, 0x1
	0x02EA91E8 STRB W8, [X22 + 0xA5D]
	0x02EA91EC LDR X0, [X21]
	0x02EA91F0 ADRP X22, 0x124A000
	0x02EA91F4 LDR X22, [X22 + 0xE00]
	0x02EA91F8 BL 0x1C16F10
	0x02EA91FC MOV X1, X31
	0x02EA9200 MOV X21, X0
	0x02EA9204 BL 0x32B0928
	0x02EA9208 MOV X0, X19
	0x02EA920C MOV X1, X31
	0x02EA9210 BL 0x32ED01C
	0x02EA9214 MOV X19, X0
	0x02EA9218 CBZ X21, 0x2EA92B8
	0x02EA921C MOV X0, X21
	0x02EA9220 MOV X1, X19
	0x02EA9224 MOV X2, X20
	0x02EA9228 MOV X3, X31
	0x02EA922C BL 0x32B10F4
	0x02EA9230 CBZ X19, 0x2EA92C4
	0x02EA9234 LDR X8, [X19]
	0x02EA9238 LDR X1, [X8 + 0x2A0]
	0x02EA923C LDR X9, [X8 + 0x298]
	0x02EA9240 MOV X0, X19
	0x02EA9244 BLR X9
	0x02EA9248 MOV X20, X31
	0x02EA924C LDR X8, [X19]
	0x02EA9250 LDR X1, [X22]
	0x02EA9254 LDRH W9, [X8 + 0x12E]
	0x02EA9258 CBZ X9, 0x2EA927C
	0x02EA925C LDR X10, [X8 + 0xB0]
	0x02EA9260 ADD X10, X10, 0x8
	0x02EA9264 LDUR X11, [X10 - 0x8]
	0x02EA9268 CMP X11, X1
	0x02EA926C B.EQ 0x2EA928C
	0x02EA9270 SUBS X9, X9, 0x1
	0x02EA9274 ADD X10, X10, 0x10
	0x02EA9278 B.NE 0x2EA9264
	0x02EA927C MOV X0, X19
	0x02EA9280 MOV W2, W31
	0x02EA9284 BL 0x1C5C788
	0x02EA9288 B 0x2EA9298
	0x02EA928C LDRSW X9, [X10]
	0x02EA9290 ADD X8, X8, X9, 0x4, LSL
	0x02EA9294 ADD X0, X8, 0x138
	0x02EA9298 LDP X8, X1, [X0]
	0x02EA929C MOV X0, X19
	0x02EA92A0 BLR X8
	0x02EA92A4 CBNZ X20, 0x2EA92BC
	0x02EA92A8 LDP X20, X19, [X31 + 0x20]
	0x02EA92AC LDP X22, X21, [X31 + 0x10]
	0x02EA92B0 LDR X30, [X31], #0x30
	0x02EA92B4 RET
	0x02EA92B8 BL 0x1C16F20
	0x02EA92BC MOV X0, X20
	0x02EA92C0 BL 0x1C16F18
	0x02EA92C4 BL 0x1C16F20
	0x02EA92C8 B 0x2EA92CC
	0x02EA92CC MOV X21, X0
	0x02EA92D0 CMP W1, 0x1
	0x02EA92D4 B.NE 0x2EA92F0
	0x02EA92D8 MOV X0, X21
	0x02EA92DC BL 0x3EB1AD0
	0x02EA92E0 LDR X20, [X0]
	0x02EA92E4 BL 0x3EB1AE0
	0x02EA92E8 CBNZ X19, 0x2EA924C

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+32], D10
	003 Move [X31+48], D9
	004 Move [X31+56], D8
	005 Move [X31+64], X29
	006 Move [X31+72], X30
	007 Move [X31+80], X28
	008 Move [X31+88], X27
	009 Move [X31+96], X26
	010 Move [X31+104], X25
	011 Move [X31+112], X24
	012 Move [X31+120], X23
	013 Move [X31+128], X22
	014 Move [X31+136], X21
	015 Move [X31+144], X20
	016 Move [X31+152], X19
	017 Move [X31+16], X3
	018 Move [X31+24], X4
	019 Move [X31], X31
	020 Move [X31+8], X31
	021 Compare X1, 0
	022 JumpIfEqual {384}
	023 Move X8, [X7+32]
	024 Move X21, X1
	025 Move W19, [X0+16]
	026 Move X22, X0
	027 Move X8, [X8+192]
	028 Add X0, X31, 16
	029 Move X20, X7
	030 Move V8, V0
	031 Move X1, [X8+288]
	032 Move W25, W5
	033 Move X23, X2
	034 Move X24, X6
	035 Call 0x2DE1F9C, X0
	036 Move X8, [X21+16]
	037 Compare X8, 0
	038 JumpIfEqual {401}
	039 Move W9, [X8+24]
	040 NotImplemented "Instruction SDIV not yet implemented."
	041 Move [X31+44], W25
	042 NotImplemented "Instruction MSUB not yet implemented."
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move X27, X1
	045 Compare X1, 0
	046 JumpIfEqual {401}
	047 Move W9, [X27+24]
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X9, [X20+32]
	050 Move X19, W25
	051 Add X8, X8, X19
	052 Move V0, [X8+32]
	053 Move X8, [X9+192]
	054 Add X9, X27, X19
	055 Move X26, X0
	056 Move [X9+32], S0
	057 Move X1, [X8+288]
	058 Add X0, X31, 16
	059 Call 0x2DE1F9C, X0
	060 Move X8, [X21+16]
	061 Compare X8, 0
	062 JumpIfEqual {401}
	063 Move W9, [X8+24]
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move X9, [X20+32]
	066 Add X8, X8, X19
	067 Move X28, X0
	068 Move X9, [X9+192]
	069 Add X8, X8, 32
	070 Move V0, [X8]
	071 Compare X0, 0
	072 JumpIfEqual {401}
	073 Move W10, [X28+24]
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Add X10, X28, X19
	076 Move [X10+32], S0
	077 Compare X23, 0
	078 JumpIfEqual {401}
	079 Move W10, [X23+24]
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Move X25, [X22+24]
	082 Compare X25, 0
	083 JumpIfEqual {401}
	084 Move X29, X1
	085 Move X1, [X9+8]
	086 Add X9, X23, X19
	087 Move V9, [X9+32]
	088 Move V10, [X8]
	089 Move W9, [X1+309]
	090 Move TEMP, X9
	091 And TEMP, TEMP, 1
	092 Compare TEMP, 1
	093 JumpIfEqual {97}
	094 Move X0, X1
	095 Call 0x1C5D684
	096 Move X1, X0
	097 Move X8, [X25]
	098 Move X19, X24
	099 NotImplemented "Instruction LDRH not yet implemented."
	100 Compare X9, 0
	101 JumpIfEqual {108}
	102 Move X10, [X8+176]
	103 Add X10, X10, 8
	104 NotImplemented "Instruction LDUR not yet implemented."
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Subtract X9, X9, 1
	107 Add X10, X10, 16
	108 Move X0, X25
	109 Move W2, W31
	110 Call 0x1C5D788
	111 NotImplemented "Instruction LDRSW not yet implemented."
	112 Add X8, X8, X9
	113 Add X0, X8, 312
	114 Move X8, [X0]
	115 Move X1, [X0+8]
	116 Move X0, X25
	117 Move V0, V9
	118 Move V1, V10
	119 NotImplemented "Instruction BLR not yet implemented."
	120 NotImplemented "Instruction CMP not yet implemented."
	121 Move W8, 48
	122 Move W9, 40
	123 NotImplemented "Instruction CSEL not yet implemented."
	124 NotImplemented "Instruction CSEL not yet implemented."
	125 NotImplemented "Instruction CSEL not yet implemented."
	126 Move [X31], X10
	127 Move [X31+8], X11
	128 NotImplemented "Instruction CSEL not yet implemented."
	129 Move X1, [X21]
	130 Move X25, [X21]
	131 Compare X1, 0
	132 JumpIfEqual {146}
	133 Move X8, [X20+32]
	134 NotImplemented "Instruction CMP not yet implemented."
	135 NotImplemented "Instruction CSEL not yet implemented."
	136 NotImplemented "Instruction CSEL not yet implemented."
	137 Move X8, [X8+192]
	138 Move X0, X22
	139 Move X2, X23
	140 Move X6, X19
	141 Move X7, [X8+256]
	142 Move W8, [X31+44]
	143 Move V0, V8
	144 Add W5, W8, 1
	145 Call 0x2EA8D58, X0, X1, X2, X3, X4, X5, X6
	146 Move X8, [X20+32]
	147 Move X2, [X22+24]
	148 Add X0, X31, 0
	149 Move X1, X23
	150 Move X8, [X8+192]
	151 Move X3, [X8+312]
	152 Call 0x2DE1D10, X0, X1, X2
	153 Move X27, [X22+24]
	154 Compare X27, 0
	155 JumpIfEqual {401}
	156 Move X8, [X20+32]
	157 Move X26, X0
	158 Move X8, [X8+192]
	159 Move X1, [X8+8]
	160 Move W8, [X1+309]
	161 Move TEMP, X8
	162 And TEMP, TEMP, 1
	163 Compare TEMP, 1
	164 JumpIfEqual {168}
	165 Move X0, X1
	166 Call 0x1C5D684
	167 Move X1, X0
	168 Move X8, [X27]
	169 NotImplemented "Instruction LDRH not yet implemented."
	170 Compare X9, 0
	171 JumpIfEqual {178}
	172 Move X10, [X8+176]
	173 Add X10, X10, 8
	174 NotImplemented "Instruction LDUR not yet implemented."
	175 NotImplemented "Instruction CMP not yet implemented."
	176 Subtract X9, X9, 1
	177 Add X10, X10, 16
	178 Move W2, 13
	179 Move X0, X27
	180 Call 0x1C5D788
	181 Move W9, [X10]
	182 Add W9, W9, 13
	183 Add X8, X8, W9
	184 Add X0, X8, 312
	185 Move X8, [X0]
	186 Move X3, [X0+8]
	187 Move X0, X27
	188 Move X1, X26
	189 Move X2, X23
	190 NotImplemented "Instruction BLR not yet implemented."
	191 Move X26, [X22+24]
	192 Compare X26, 0
	193 JumpIfEqual {401}
	194 Move X8, [X20+32]
	195 Move V9, V0
	196 Move X8, [X8+192]
	197 Move X1, [X8+8]
	198 Move W8, [X1+309]
	199 Move TEMP, X8
	200 And TEMP, TEMP, 1
	201 Compare TEMP, 1
	202 JumpIfEqual {206}
	203 Move X0, X1
	204 Call 0x1C5D684
	205 Move X1, X0
	206 Move X8, [X26]
	207 NotImplemented "Instruction LDRH not yet implemented."
	208 Compare X9, 0
	209 JumpIfEqual {216}
	210 Move X10, [X8+176]
	211 Add X10, X10, 8
	212 NotImplemented "Instruction LDUR not yet implemented."
	213 NotImplemented "Instruction CMP not yet implemented."
	214 Subtract X9, X9, 1
	215 Add X10, X10, 16
	216 Move X0, X26
	217 Move W2, W31
	218 Call 0x1C5D788
	219 NotImplemented "Instruction LDRSW not yet implemented."
	220 Add X8, X8, X9
	221 Add X0, X8, 312
	222 Move X8, [X0]
	223 Move X1, [X0+8]
	224 Move X0, X26
	225 Move V0, V9
	226 Move V1, V8
	227 NotImplemented "Instruction BLR not yet implemented."
	228 NotImplemented "Instruction CMP not yet implemented."
	229 Compare X19, 0
	230 JumpIfEqual {401}
	231 Move X8, [X20+32]
	232 Move X0, X19
	233 Move X8, [X8+192]
	234 Move X1, [X8+328]
	235 Call 0x240AED0, X0
	236 Move TEMP, X0
	237 And TEMP, TEMP, 1
	238 Compare TEMP, 1
	239 JumpIfNotEqual {286}
	240 Move X8, [X20+32]
	241 Move X26, [X22+24]
	242 Move X0, X19
	243 Move X8, [X8+192]
	244 Move X1, [X8+336]
	245 Call 0x240AE38, X0
	246 Compare X26, 0
	247 JumpIfEqual {401}
	248 Move X8, [X20+32]
	249 Move V10, V0
	250 Move X8, [X8+192]
	251 Move X1, [X8+8]
	252 Move W8, [X1+309]
	253 Move TEMP, X8
	254 And TEMP, TEMP, 1
	255 Compare TEMP, 1
	256 JumpIfEqual {260}
	257 Move X0, X1
	258 Call 0x1C5D684
	259 Move X1, X0
	260 Move X8, [X26]
	261 NotImplemented "Instruction LDRH not yet implemented."
	262 Compare X9, 0
	263 JumpIfEqual {270}
	264 Move X10, [X8+176]
	265 Add X10, X10, 8
	266 NotImplemented "Instruction LDUR not yet implemented."
	267 NotImplemented "Instruction CMP not yet implemented."
	268 Subtract X9, X9, 1
	269 Add X10, X10, 16
	270 Move X0, X26
	271 Move W2, W31
	272 Call 0x1C5D788
	273 NotImplemented "Instruction LDRSW not yet implemented."
	274 Add X8, X8, X9
	275 Add X0, X8, 312
	276 Move X8, [X0]
	277 Move X1, [X0+8]
	278 Move X0, X26
	279 Move V0, V9
	280 Move V1, V10
	281 NotImplemented "Instruction BLR not yet implemented."
	282 Move TEMP, X0
	283 And TEMP, TEMP, -2147483648
	284 Compare TEMP, -2147483648
	285 JumpIfNotEqual {299}
	286 Move X8, [X20+32]
	287 Move X3, [X31]
	288 Move X4, [X31+8]
	289 Move X0, X22
	290 Move X1, X25
	291 Move X8, [X8+192]
	292 Move X2, X23
	293 Move X6, X19
	294 Move V0, V8
	295 Move X7, [X8+256]
	296 Move W8, [X31+44]
	297 Add W5, W8, 1
	298 Call 0x2EA8D58, X0, X1, X2, X3, X4, X5, X6
	299 Move X24, [X22+24]
	300 Compare X24, 0
	301 JumpIfEqual {401}
	302 Move X8, [X20+32]
	303 Move X25, [X21+16]
	304 Move X8, [X8+192]
	305 Move X1, [X8+8]
	306 Move W8, [X1+309]
	307 Move TEMP, X8
	308 And TEMP, TEMP, 1
	309 Compare TEMP, 1
	310 JumpIfEqual {314}
	311 Move X0, X1
	312 Call 0x1C5D684
	313 Move X1, X0
	314 Move X8, [X24]
	315 NotImplemented "Instruction LDRH not yet implemented."
	316 Compare X9, 0
	317 JumpIfEqual {324}
	318 Move X10, [X8+176]
	319 Add X10, X10, 8
	320 NotImplemented "Instruction LDUR not yet implemented."
	321 NotImplemented "Instruction CMP not yet implemented."
	322 Subtract X9, X9, 1
	323 Add X10, X10, 16
	324 Move W2, 13
	325 Move X0, X24
	326 Call 0x1C5D788
	327 Move W9, [X10]
	328 Add W9, W9, 13
	329 Add X8, X8, W9
	330 Add X0, X8, 312
	331 Move X8, [X0]
	332 Move X3, [X0+8]
	333 Move X0, X24
	334 Move X1, X25
	335 Move X2, X23
	336 NotImplemented "Instruction BLR not yet implemented."
	337 Move X22, [X22+24]
	338 Compare X22, 0
	339 JumpIfEqual {401}
	340 Move X8, [X20+32]
	341 Move V9, V0
	342 Move X8, [X8+192]
	343 Move X1, [X8+8]
	344 Move W8, [X1+309]
	345 Move TEMP, X8
	346 And TEMP, TEMP, 1
	347 Compare TEMP, 1
	348 JumpIfEqual {352}
	349 Move X0, X1
	350 Call 0x1C5D684
	351 Move X1, X0
	352 Move X8, [X22]
	353 NotImplemented "Instruction LDRH not yet implemented."
	354 Compare X9, 0
	355 JumpIfEqual {362}
	356 Move X10, [X8+176]
	357 Add X10, X10, 8
	358 NotImplemented "Instruction LDUR not yet implemented."
	359 NotImplemented "Instruction CMP not yet implemented."
	360 Subtract X9, X9, 1
	361 Add X10, X10, 16
	362 Move X0, X22
	363 Move W2, W31
	364 Call 0x1C5D788
	365 NotImplemented "Instruction LDRSW not yet implemented."
	366 Add X8, X8, X9
	367 Add X0, X8, 312
	368 Move X8, [X0]
	369 Move X1, [X0+8]
	370 Move X0, X22
	371 Move V0, V9
	372 Move V1, V8
	373 NotImplemented "Instruction BLR not yet implemented."
	374 NotImplemented "Instruction CMP not yet implemented."
	375 Compare X19, 0
	376 JumpIfEqual {401}
	377 Move X8, [X20+32]
	378 Move X0, X19
	379 Move X1, X21
	380 Move V0, V9
	381 Move X8, [X8+192]
	382 Move X2, [X8+344]
	383 Call 0x240AC94, X0, X1, X2
	384 Move X20, [X31+144]
	385 Move X19, [X31+152]
	386 Move X22, [X31+128]
	387 Move X21, [X31+136]
	388 Move X24, [X31+112]
	389 Move X23, [X31+120]
	390 Move X26, [X31+96]
	391 Move X25, [X31+104]
	392 Move X28, [X31+80]
	393 Move X27, [X31+88]
	394 Move X29, [X31+64]
	395 Move X30, [X31+72]
	396 Move D9, [X31+48]
	397 Move D8, [X31+56]
	398 Move V10, [X31+32]
	399 Add X31, X31, 160
	400 Return 
	401 Call 0x1C17F20
	402 Call 0x1C17F28

Method: UnityEngine.ProBuilder.KdTree.KdTreeNode`2<TKey, TValue>[] RadialSearch(TKey[] center, TKey radius, System.Int32 count)

Disassembly:
	0x02EA92EC B 0x2EA92A4
	0x02EA92F0 MOV X20, X31
	0x02EA92F4 B 0x2EA92FC
	0x02EA92F8 MOV X21, X0
	0x02EA92FC CBZ X19, 0x2EA9358
	0x02EA9300 LDR X8, [X19]
	0x02EA9304 LDR X1, [X22]
	0x02EA9308 LDRH W9, [X8 + 0x12E]
	0x02EA930C CBZ X9, 0x2EA9330
	0x02EA9310 LDR X10, [X8 + 0xB0]
	0x02EA9314 ADD X10, X10, 0x8
	0x02EA9318 LDUR X11, [X10 - 0x8]
	0x02EA931C CMP X11, X1
	0x02EA9320 B.EQ 0x2EA9340
	0x02EA9324 SUBS X9, X9, 0x1
	0x02EA9328 ADD X10, X10, 0x10
	0x02EA932C B.NE 0x2EA9318
	0x02EA9330 MOV X0, X19
	0x02EA9334 MOV W2, W31
	0x02EA9338 BL 0x1C5C788
	0x02EA933C B 0x2EA934C
	0x02EA9340 LDRSW X9, [X10]
	0x02EA9344 ADD X8, X8, X9, 0x4, LSL
	0x02EA9348 ADD X0, X8, 0x138
	0x02EA934C LDP X8, X1, [X0]
	0x02EA9350 MOV X0, X19
	0x02EA9354 BLR X8
	0x02EA9358 CBNZ X20, 0x2EA9364
	0x02EA935C MOV X0, X21
	0x02EA9360 BL 0x1D2C690
	0x02EA9364 MOV X0, X20
	0x02EA9368 BL 0x1C16F18
	0x02EA936C BL 0x1990590
	0x02EA9370 STR X30, [X31 - 0x30]!
	0x02EA9374 STP X22, X21, [X31 + 0x10]
	0x02EA9378 STP X20, X19, [X31 + 0x20]
	0x02EA937C ADRP X22, 0x1532000
	0x02EA9380 ADRP X21, 0x1276000
	0x02EA9384 LDRB W8, [X22 + 0xA5E]
	0x02EA9388 LDR X21, [X21 + 0xD0]
	0x02EA938C MOV X20, X1
	0x02EA9390 MOV X19, X0
	0x02EA9394 TBNZ X8, 0x0, 0x2EA93B8
	0x02EA9398 ADRP X0, 0x1276000
	0x02EA939C LDR X0, [X0 + 0xD0]
	0x02EA93A0 BL 0x1C16CF4
	0x02EA93A4 ADRP X0, 0x124A000
	0x02EA93A8 LDR X0, [X0 + 0xE00]
	0x02EA93AC BL 0x1C16CF4
	0x02EA93B0 MOVZ W8, 0x1
	0x02EA93B4 STRB W8, [X22 + 0xA5E]
	0x02EA93B8 LDR X0, [X21]
	0x02EA93BC ADRP X22, 0x124A000
	0x02EA93C0 LDR X22, [X22 + 0xE00]
	0x02EA93C4 BL 0x1C16F10
	0x02EA93C8 MOV X1, X31
	0x02EA93CC MOV X21, X0
	0x02EA93D0 BL 0x32B0928
	0x02EA93D4 MOVZ W1, 0x3
	0x02EA93D8 MOV X0, X19
	0x02EA93DC MOV X2, X31
	0x02EA93E0 BL 0x32ED148
	0x02EA93E4 MOV X19, X0
	0x02EA93E8 CBZ X21, 0x2EA94D8
	0x02EA93EC MOV X0, X21
	0x02EA93F0 MOV X1, X19
	0x02EA93F4 MOV X2, X31
	0x02EA93F8 BL 0x32B09A8
	0x02EA93FC MOV X21, X0
	0x02EA9400 LDR X0, [X20 + 0x20]
	0x02EA9404 LDRB W8, [X0 + 0x135]
	0x02EA9408 TBNZ X8, 0x0, 0x2EA9410
	0x02EA940C BL 0x1C5C684
	0x02EA9410 LDR X8, [X0 + 0xC0]
	0x02EA9414 LDR X1, [X8]
	0x02EA9418 LDRB W8, [X1 + 0x135]
	0x02EA941C TBNZ X8, 0x0, 0x2EA942C
	0x02EA9420 MOV X0, X1
	0x02EA9424 BL 0x1C5C684
	0x02EA9428 MOV X1, X0
	0x02EA942C CBZ X21, 0x2EA9458
	0x02EA9430 LDR X8, [X21]
	0x02EA9434 LDRB W9, [X1 + 0x130]
	0x02EA9438 LDRB W10, [X8 + 0x130]
	0x02EA943C CMP W10, W9
	0x02EA9440 B.CC 0x2EA94D0
	0x02EA9444 LDR X8, [X8 + 0xC8]
	0x02EA9448 ADD X8, X8, X9, 0x3, LSL
	0x02EA944C LDUR X8, [X8 - 0x8]
	0x02EA9450 CMP X8, X1
	0x02EA9454 B.NE 0x2EA94D0
	0x02EA9458 MOV X20, X31
	0x02EA945C CBZ X19, 0x2EA94B8
	0x02EA9460 LDR X8, [X19]
	0x02EA9464 LDR X1, [X22]
	0x02EA9468 LDRH W9, [X8 + 0x12E]
	0x02EA946C CBZ X9, 0x2EA9490
	0x02EA9470 LDR X10, [X8 + 0xB0]
	0x02EA9474 ADD X10, X10, 0x8
	0x02EA9478 LDUR X11, [X10 - 0x8]
	0x02EA947C CMP X11, X1
	0x02EA9480 B.EQ 0x2EA94A0
	0x02EA9484 SUBS X9, X9, 0x1
	0x02EA9488 ADD X10, X10, 0x10
	0x02EA948C B.NE 0x2EA9478
	0x02EA9490 MOV X0, X19
	0x02EA9494 MOV W2, W31
	0x02EA9498 BL 0x1C5C788
	0x02EA949C B 0x2EA94AC
	0x02EA94A0 LDRSW X9, [X10]
	0x02EA94A4 ADD X8, X8, X9, 0x4, LSL
	0x02EA94A8 ADD X0, X8, 0x138
	0x02EA94AC LDP X8, X1, [X0]
	0x02EA94B0 MOV X0, X19
	0x02EA94B4 BLR X8
	0x02EA94B8 CBNZ X20, 0x2EA94DC
	0x02EA94BC MOV X0, X21
	0x02EA94C0 LDP X20, X19, [X31 + 0x20]
	0x02EA94C4 LDP X22, X21, [X31 + 0x10]
	0x02EA94C8 LDR X30, [X31], #0x30
	0x02EA94CC RET
	0x02EA94D0 MOV X0, X21
	0x02EA94D4 BL 0x1C171E0
	0x02EA94D8 BL 0x1C16F20
	0x02EA94DC MOV X0, X20
	0x02EA94E0 BL 0x1C16F18
	0x02EA94E4 B 0x2EA94E8
	0x02EA94E8 MOV X21, X0
	0x02EA94EC CMP W1, 0x1
	0x02EA94F0 B.NE 0x2EA9510
	0x02EA94F4 MOV X0, X21
	0x02EA94F8 BL 0x3EB1AD0
	0x02EA94FC LDR X20, [X0]
	0x02EA9500 BL 0x3EB1AE0
	0x02EA9504 MOV X21, X31

ISIL:
	001 Move [X31-80], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X8, [X3+32]
	012 Move X21, X0
	013 Move X24, [X21+24]
	014 Move X19, X3
	015 Move X8, [X8+192]
	016 Move W23, W2
	017 Move V8, V0
	018 Move X22, X1
	019 Move X0, [X8+208]
	020 Move W8, [X0+309]
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {26}
	025 Call 0x1C5D684
	026 Call 0x1C17F10
	027 Move X8, [X19+32]
	028 Move W1, W23
	029 Move X2, X24
	030 Move X20, X0
	031 Move X8, [X8+192]
	032 Move X3, [X8+216]
	033 Call 0x240ABF8, X0, X1, X2
	034 Move X8, [X19+32]
	035 Move W0, [X21+16]
	036 Move X1, [X21+24]
	037 Move X23, [X21+32]
	038 Move X8, [X8+192]
	039 Move X2, [X8+224]
	040 Call 0x2DE1A78, X0, X1
	041 Move X26, [X21+24]
	042 Compare X26, 0
	043 JumpIfEqual {150}
	044 Move X8, [X19+32]
	045 Move X25, X1
	046 Move X24, X0
	047 Move X8, [X8+192]
	048 Move X1, [X8+8]
	049 Move W8, [X1+309]
	050 Move TEMP, X8
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfEqual {57}
	054 Move X0, X1
	055 Call 0x1C5D684
	056 Move X1, X0
	057 Move X8, [X26]
	058 NotImplemented "Instruction LDRH not yet implemented."
	059 Compare X9, 0
	060 JumpIfEqual {67}
	061 Move X10, [X8+176]
	062 Add X10, X10, 8
	063 NotImplemented "Instruction LDUR not yet implemented."
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Subtract X9, X9, 1
	066 Add X10, X10, 16
	067 Move W2, 9
	068 Move X0, X26
	069 Call 0x1C5D788
	070 Move W9, [X10]
	071 Add W9, W9, 9
	072 Add X8, X8, W9
	073 Add X0, X8, 312
	074 Move X8, [X0]
	075 Move X1, [X0+8]
	076 Move X0, X26
	077 Move V0, V8
	078 Move V1, V8
	079 NotImplemented "Instruction BLR not yet implemented."
	080 Move X8, [X19+32]
	081 Move X0, X21
	082 Move X1, X23
	083 Move X2, X22
	084 Move X8, [X8+192]
	085 Move X3, X24
	086 Move X4, X25
	087 Move W5, W31
	088 Move X7, [X8+256]
	089 Move X6, X20
	090 Call 0x2EA8D58, X0, X1, X2, X3, X4, X5, X6
	091 Compare X20, 0
	092 JumpIfEqual {150}
	093 Move X8, [X19+32]
	094 Move X0, X20
	095 Move X8, [X8+192]
	096 Move X1, [X8+264]
	097 Call 0x240AC78, X0
	098 Move X8, [X19+32]
	099 Move W22, W0
	100 Move X8, [X8+192]
	101 Move X8, [X8+200]
	102 Move W9, [X8+309]
	103 Move TEMP, X9
	104 And TEMP, TEMP, 1
	105 Compare TEMP, 1
	106 JumpIfEqual {110}
	107 Move X0, X8
	108 Call 0x1C5D684
	109 Move X8, X0
	110 Move X0, X8
	111 Move W1, W22
	112 Call 0x1C17D6C
	113 NotImplemented "Instruction CMP not yet implemented."
	114 Move X21, X0
	115 Move W23, W22
	116 Move X8, [X19+32]
	117 Move X0, X20
	118 Move X8, [X8+192]
	119 Move X1, [X8+272]
	120 Call 0x240AEAC, X0
	121 Compare X21, 0
	122 JumpIfEqual {150}
	123 Move X22, X0
	124 Compare X0, 0
	125 JumpIfEqual {132}
	126 Move X8, [X21]
	127 Move X0, X22
	128 Move X1, [X8+64]
	129 Call 0x1C17E00
	130 Compare X0, 0
	131 JumpIfEqual {152}
	132 Move W9, [X21+24]
	133 Subtract X8, X23, 1
	134 NotImplemented "Instruction CMP not yet implemented."
	135 Add X8, X21, W8
	136 Subtract X23, X23, 1
	137 Move [X8+32], X22
	138 Move X0, X21
	139 Move X20, [X31+64]
	140 Move X19, [X31+72]
	141 Move X22, [X31+48]
	142 Move X21, [X31+56]
	143 Move X24, [X31+32]
	144 Move X23, [X31+40]
	145 Move X26, [X31+16]
	146 Move X25, [X31+24]
	147 Move X30, [X31+8]
	148 Move V8, [X31+80]
	149 Return X0
	150 Call 0x1C17F20
	151 Call 0x1C17F28
	152 Call 0x1C17F44
	153 Move X1, X31
	154 Call 0x1C17DEC

Method: System.Int32 get_Count()

Disassembly:
	0x02EA9508 CBNZ X19, 0x2EA9460
	0x02EA950C B 0x2EA94B8

ISIL:
	001 Move W0, [X0+44]
	002 Return X0

Method: System.Void set_Count(System.Int32 value)

Disassembly:
	0x02EA9510 MOV X20, X31
	0x02EA9514 B 0x2EA951C

ISIL:
	001 Move [X0+44], W1
	002 Return 

Method: System.Boolean TryFindValueAt(TKey[] point, out TValue value)

Disassembly:
	0x02EA9518 MOV X21, X0
	0x02EA951C CBZ X19, 0x2EA9578
	0x02EA9520 LDR X8, [X19]
	0x02EA9524 LDR X1, [X22]
	0x02EA9528 LDRH W9, [X8 + 0x12E]
	0x02EA952C CBZ X9, 0x2EA9550
	0x02EA9530 LDR X10, [X8 + 0xB0]
	0x02EA9534 ADD X10, X10, 0x8
	0x02EA9538 LDUR X11, [X10 - 0x8]
	0x02EA953C CMP X11, X1
	0x02EA9540 B.EQ 0x2EA9560
	0x02EA9544 SUBS X9, X9, 0x1
	0x02EA9548 ADD X10, X10, 0x10
	0x02EA954C B.NE 0x2EA9538
	0x02EA9550 MOV X0, X19
	0x02EA9554 MOV W2, W31
	0x02EA9558 BL 0x1C5C788
	0x02EA955C B 0x2EA956C
	0x02EA9560 LDRSW X9, [X10]
	0x02EA9564 ADD X8, X8, X9, 0x4, LSL
	0x02EA9568 ADD X0, X8, 0x138
	0x02EA956C LDP X8, X1, [X0]
	0x02EA9570 MOV X0, X19
	0x02EA9574 BLR X8
	0x02EA9578 CBNZ X20, 0x2EA9584
	0x02EA957C MOV X0, X21
	0x02EA9580 BL 0x1D2C690
	0x02EA9584 MOV X0, X20
	0x02EA9588 BL 0x1C16F18
	0x02EA958C BL 0x1990590
	0x02EA9590 STR X30, [X31 - 0x20]!
	0x02EA9594 STP X20, X19, [X31 + 0x10]
	0x02EA9598 LDR X8, [X1 + 0x20]
	0x02EA959C MOV X20, X1
	0x02EA95A0 MOV X19, X0
	0x02EA95A4 LDR X8, [X8 + 0xC0]
	0x02EA95A8 LDR X8, [X8 + 0x1E8]
	0x02EA95AC LDRB W9, [X8 + 0x135]
	0x02EA95B0 TBNZ X9, 0x0, 0x2EA95C0
	0x02EA95B4 MOV X0, X8
	0x02EA95B8 BL 0x1C5C684
	0x02EA95BC MOV X8, X0
	0x02EA95C0 MOV X0, X8
	0x02EA95C4 BL 0x1C16F10
	0x02EA95C8 LDR X8, [X20 + 0x20]
	0x02EA95CC MOV W1, W31
	0x02EA95D0 MOV X20, X0
	0x02EA95D4 LDR X8, [X8 + 0xC0]
	0x02EA95D8 LDR X2, [X8 + 0x1F0]
	0x02EA95DC BL 0x239A41C
	0x02EA95E0 CBZ X20, 0x2EA95F8
	0x02EA95E4 STR X19, [X20 + 0x20]
	0x02EA95E8 MOV X0, X20
	0x02EA95EC LDP X20, X19, [X31 + 0x10]
	0x02EA95F0 LDR X30, [X31], #0x20
	0x02EA95F4 RET
	0x02EA95F8 BL 0x1C16F20
	0x02EA95FC LDR X8, [X1 + 0x20]
	0x02EA9600 LDR X8, [X8 + 0xC0]
	0x02EA9604 LDR X1, [X8 + 0x200]
	0x02EA9608 B 0x2EA9590
	0x02EA960C STR X30, [X31 - 0x30]!
	0x02EA9610 STP X22, X21, [X31 + 0x10]
	0x02EA9614 STP X20, X19, [X31 + 0x20]
	0x02EA9618 MOV W21, W1
	0x02EA961C MOV X1, X31
	0x02EA9620 MOV X19, X3
	0x02EA9624 MOV X20, X2
	0x02EA9628 MOV X22, X0
	0x02EA962C BL 0x33BDD8C
	0x02EA9630 STR W21, [X22 + 0x10]
	0x02EA9634 STR X20, [X22 + 0x18]
	0x02EA9638 LDR X8, [X19 + 0x20]
	0x02EA963C MOV X0, X22
	0x02EA9640 LDP X20, X19, [X31 + 0x20]
	0x02EA9644 LDP X22, X21, [X31 + 0x10]
	0x02EA9648 LDR X8, [X8 + 0xC0]
	0x02EA964C MOV W1, W31
	0x02EA9650 LDR X2, [X8 + 0x10]
	0x02EA9654 LDR X3, [X2]
	0x02EA9658 LDR X30, [X31], #0x30
	0x02EA965C BR X3
	0x02EA9660 STP X30, X21, [X31 - 0x20]!
	0x02EA9664 STP X20, X19, [X31 + 0x10]
	0x02EA9668 LDR X8, [X4 + 0x20]
	0x02EA966C MOV W20, W3
	0x02EA9670 MOV X19, X4
	0x02EA9674 MOV X21, X0
	0x02EA9678 LDR X8, [X8 + 0xC0]
	0x02EA967C LDR X3, [X8 + 0x18]
	0x02EA9680 LDR X8, [X3]
	0x02EA9684 BLR X8
	0x02EA9688 LDR X8, [X19 + 0x20]
	0x02EA968C MOV W1, W20
	0x02EA9690 LDP X20, X19, [X31 + 0x10]
	0x02EA9694 MOV X0, X21
	0x02EA9698 LDR X8, [X8 + 0xC0]
	0x02EA969C LDR X2, [X8 + 0x20]
	0x02EA96A0 LDR X3, [X2]
	0x02EA96A4 LDP X30, X21, [X31], #0x20
	0x02EA96A8 BR X3
	0x02EA96AC LDR W0, [X0 + 0x28]
	0x02EA96B0 RET
	0x02EA96B4 STR W1, [X0 + 0x28]
	0x02EA96B8 RET
	0x02EA96BC STP X29, X30, [X31 - 0x60]!
	0x02EA96C0 STP X28, X27, [X31 + 0x10]
	0x02EA96C4 STP X26, X25, [X31 + 0x20]
	0x02EA96C8 STP X24, X23, [X31 + 0x30]
	0x02EA96CC STP X22, X21, [X31 + 0x40]
	0x02EA96D0 STP X20, X19, [X31 + 0x50]
	0x02EA96D4 ADD X29, X31, 0x0
	0x02EA96D8 SUB X31, X31, 0x70
	0x02EA96DC MRS X23, 0xC000
	0x02EA96E0 LDR X8, [X23 + 0x28]
	0x02EA96E4 MOV X19, X3
	0x02EA96E8 MOV X22, X1
	0x02EA96EC STUR X8, [X29 - 0x8]
	0x02EA96F0 STP X0, X2, [X29 - 0x30]
	0x02EA96F4 LDR X20, [X3 + 0x20]
	0x02EA96F8 LDR X8, [X20 + 0xC0]
	0x02EA96FC LDR X9, [X8 + 0x30]
	0x02EA9700 LDR X8, [X8 + 0x60]

ISIL:
	001 Move [X31-112], D9
	002 Move [X31-104], D8
	003 Move [X31+16], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X25, [X0+32]
	015 Move X19, X2
	016 Compare X25, 0
	017 JumpIfEqual {127}
	018 Move X20, X3
	019 Move X21, X0
	020 Move X22, X1
	021 Move TEMP, 0
	022 Not TEMP
	023 Move W26, TEMP
	024 Move W27, 40
	025 Move W28, 48
	026 Move X23, [X21+24]
	027 Compare X23, 0
	028 JumpIfEqual {146}
	029 Move X8, [X20+32]
	030 Move X24, [X25+16]
	031 Move X8, [X8+192]
	032 Move X1, [X8+8]
	033 Move W8, [X1+309]
	034 Move TEMP, X8
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfEqual {41}
	038 Move X0, X1
	039 Call 0x1C5D684
	040 Move X1, X0
	041 Move X8, [X23]
	042 NotImplemented "Instruction LDRH not yet implemented."
	043 Compare X9, 0
	044 JumpIfEqual {51}
	045 Move X10, [X8+176]
	046 Add X10, X10, 8
	047 NotImplemented "Instruction LDUR not yet implemented."
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Subtract X9, X9, 1
	050 Add X10, X10, 16
	051 Move W2, 6
	052 Move X0, X23
	053 Call 0x1C5D788
	054 Move W9, [X10]
	055 Add W9, W9, 6
	056 Add X8, X8, W9
	057 Add X0, X8, 312
	058 Move X8, [X0]
	059 Move X3, [X0+8]
	060 Move X0, X23
	061 Move X1, X22
	062 Move X2, X24
	063 NotImplemented "Instruction BLR not yet implemented."
	064 Move TEMP, X0
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfEqual {129}
	068 Compare X22, 0
	069 JumpIfEqual {146}
	070 Move W8, [X21+16]
	071 Move W9, [X22+24]
	072 Add W10, W26, 1
	073 NotImplemented "Instruction SDIV not yet implemented."
	074 NotImplemented "Instruction MSUB not yet implemented."
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Move X8, [X25+16]
	077 Compare X8, 0
	078 JumpIfEqual {146}
	079 Move W9, [X8+24]
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Move X23, [X21+24]
	082 Compare X23, 0
	083 JumpIfEqual {146}
	084 Move X9, [X20+32]
	085 Move X10, W26
	086 Add X8, X8, X10
	087 Move V9, [X8+32]
	088 Move X9, [X9+192]
	089 Move X1, [X9+8]
	090 Add X9, X22, X10
	091 Move V8, [X9+32]
	092 Move W9, [X1+309]
	093 Move TEMP, X9
	094 And TEMP, TEMP, 1
	095 Compare TEMP, 1
	096 JumpIfEqual {100}
	097 Move X0, X1
	098 Call 0x1C5D684
	099 Move X1, X0
	100 Move X8, [X23]
	101 NotImplemented "Instruction LDRH not yet implemented."
	102 Compare X9, 0
	103 JumpIfEqual {110}
	104 Move X10, [X8+176]
	105 Add X10, X10, 8
	106 NotImplemented "Instruction LDUR not yet implemented."
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Subtract X9, X9, 1
	109 Add X10, X10, 16
	110 Move X0, X23
	111 Move W2, W31
	112 Call 0x1C5D788
	113 NotImplemented "Instruction LDRSW not yet implemented."
	114 Add X8, X8, X9
	115 Add X0, X8, 312
	116 Move X8, [X0]
	117 Move X1, [X0+8]
	118 Move X0, X23
	119 Move V0, V8
	120 Move V1, V9
	121 NotImplemented "Instruction BLR not yet implemented."
	122 NotImplemented "Instruction CMP not yet implemented."
	123 NotImplemented "Instruction CSEL not yet implemented."
	124 Move X25, [X25]
	125 Compare X25, 0
	126 JumpIfNotEqual {26}
	127 Move W0, W31
	128 Move [X19], W31
	129 Move W8, [X25+24]
	130 Move W0, 1
	131 Move [X19], W8
	132 Move X20, [X31+96]
	133 Move X19, [X31+104]
	134 Move X22, [X31+80]
	135 Move X21, [X31+88]
	136 Move X24, [X31+64]
	137 Move X23, [X31+72]
	138 Move X26, [X31+48]
	139 Move X25, [X31+56]
	140 Move X28, [X31+32]
	141 Move X27, [X31+40]
	142 Move X30, [X31+16]
	143 Move D9, [X31+112]
	144 Move D8, [X31+120]
	145 Return X0
	146 Call 0x1C17F20
	147 Call 0x1C17F28

Method: TValue FindValueAt(TKey[] point)

Disassembly:
	0x02EA9704 LDR W25, [X9 + 0xFC]
	0x02EA9708 LDR W10, [X8 + 0xFC]
	0x02EA970C ADD X8, X31, 0x0
	0x02EA9710 STP X2, X10, [X29 - 0x48]
	0x02EA9714 ADD X10, X10, 0xF
	0x02EA9718 AND X10, X10, 0x1FFFFFFFF
	0x02EA971C SUB X8, X8, X10
	0x02EA9720 STUR X8, [X29 - 0x38]
	0x02EA9724 ADD X31, X8, 0x0
	0x02EA9728 ADD X8, X31, 0x0
	0x02EA972C SUB X28, X8, X10
	0x02EA9730 ADD X31, X28, 0x0

ISIL:
	001 Move [X31-16], X30
	002 Move [X31+12], W31
	003 Move X8, [X2+32]
	004 Add X2, X31, 12
	005 Move X8, [X8+192]
	006 Move X3, [X8+368]
	007 Call 0x2EA9518, X0, X1, X2
	008 Move W8, [X31+12]
	009 And W31, W0, 1
	010 NotImplemented "Instruction CSEL not yet implemented."
	011 Move X30, [X31+16]
	012 Return X0

Method: System.Boolean TryFindValue(TValue value, out TKey[] point)

Disassembly:
	0x02EA9734 ADD X10, X25, 0xF
	0x02EA9738 ADD X8, X31, 0x0
	0x02EA973C AND X10, X10, 0x1FFFFFFFF
	0x02EA9740 SUB X24, X8, X10
	0x02EA9744 ADD X31, X24, 0x0
	0x02EA9748 LDR W8, [X9 + 0x28]
	0x02EA974C MOV X0, X24
	0x02EA9750 CMP W8, 0x0
	0x02EA9754 SUB X8, X29, 0x28
	0x02EA9758 CSEL X1, X2, X8, LT
	0x02EA975C MOV X2, X25
	0x02EA9760 BL 0x3EB1AC0
	0x02EA9764 LDR X8, [X20 + 0xC0]
	0x02EA9768 LDR X0, [X8 + 0x38]
	0x02EA976C LDRB W8, [X0 + 0x135]
	0x02EA9770 TBNZ X8, 0x0, 0x2EA9778
	0x02EA9774 BL 0x1C5C684
	0x02EA9778 STUR X23, [X29 - 0x60]
	0x02EA977C BL 0x1C16F10
	0x02EA9780 LDR X8, [X19 + 0x20]
	0x02EA9784 MOV X23, X0
	0x02EA9788 MOV X4, X24
	0x02EA978C LDR X8, [X8 + 0xC0]
	0x02EA9790 LDR X9, [X8 + 0x30]
	0x02EA9794 LDR X1, [X8 + 0x40]
	0x02EA9798 LDR W8, [X9 + 0x28]
	0x02EA979C LDR X0, [X1]
	0x02EA97A0 TBNZ X8, 0x1F, 0x2EA97A8
	0x02EA97A4 LDR X4, [X24]
	0x02EA97A8 STP X22, X4, [X29 - 0x20]
	0x02EA97AC LDR X8, [X1 + 0x10]
	0x02EA97B0 SUB X3, X29, 0x20
	0x02EA97B4 MOV X2, X23
	0x02EA97B8 BLR X8
	0x02EA97BC LDUR X8, [X29 - 0x30]
	0x02EA97C0 LDR X20, [X8 + 0x20]
	0x02EA97C4 CBZ X20, 0x2EA9A88
	0x02EA97C8 MOVN W27, 0x0
	0x02EA97CC STUR X23, [X29 - 0x68]
	0x02EA97D0 STP X25, X24, [X29 - 0x58]
	0x02EA97D4 LDR X8, [X19 + 0x20]
	0x02EA97D8 LDUR X9, [X29 - 0x30]
	0x02EA97DC MOV X0, X20
	0x02EA97E0 LDR X8, [X8 + 0xC0]
	0x02EA97E4 LDR W21, [X9 + 0x10]
	0x02EA97E8 LDR X23, [X9 + 0x18]
	0x02EA97EC LDR X8, [X8 + 0x38]
	0x02EA97F0 LDR X1, [X8 + 0x80]
	0x02EA97F4 BL 0x1C16D18
	0x02EA97F8 CBZ X23, 0x2EA9C24
	0x02EA97FC LDR X8, [X19 + 0x20]
	0x02EA9800 LDR X24, [X0]
	0x02EA9804 LDR X8, [X8 + 0xC0]
	0x02EA9808 LDR X1, [X8 + 0x8]
	0x02EA980C LDRB W8, [X1 + 0x135]
	0x02EA9810 TBNZ X8, 0x0, 0x2EA9820
	0x02EA9814 MOV X0, X1
	0x02EA9818 BL 0x1C5C684
	0x02EA981C MOV X1, X0
	0x02EA9820 LDR X8, [X23]
	0x02EA9824 LDRH W9, [X8 + 0x12E]
	0x02EA9828 CBZ X9, 0x2EA984C
	0x02EA982C LDR X10, [X8 + 0xB0]
	0x02EA9830 ADD X10, X10, 0x8
	0x02EA9834 LDUR X11, [X10 - 0x8]
	0x02EA9838 CMP X11, X1
	0x02EA983C B.EQ 0x2EA985C
	0x02EA9840 SUBS X9, X9, 0x1
	0x02EA9844 ADD X10, X10, 0x10
	0x02EA9848 B.NE 0x2EA9834
	0x02EA984C MOVZ W2, 0x6
	0x02EA9850 MOV X0, X23
	0x02EA9854 BL 0x1C5C788
	0x02EA9858 B 0x2EA986C
	0x02EA985C LDR W9, [X10]
	0x02EA9860 ADD W9, W9, 0x6
	0x02EA9864 ADD X8, X8, W9, 0x4, SXTW
	0x02EA9868 ADD X0, X8, 0x138
	0x02EA986C LDP X8, X3, [X0]
	0x02EA9870 MOV X0, X23
	0x02EA9874 MOV X1, X22
	0x02EA9878 MOV X2, X24
	0x02EA987C BLR X8
	0x02EA9880 TBZ X0, 0x0, 0x2EA98F8

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X8, [X0+32]
	011 Move X19, X2
	012 Compare X8, 0
	013 JumpIfEqual {86}
	014 Move X8, [X3+32]
	015 Move X23, X0
	016 Move X20, X3
	017 Move W21, W1
	018 Move X8, [X8+192]
	019 Move X0, [X8+144]
	020 Move W8, [X0+309]
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {26}
	025 Call 0x1C5D684
	026 Call 0x1C17F10
	027 Move X8, [X20+32]
	028 Move X22, X0
	029 Move X8, [X8+192]
	030 Move X1, [X8+152]
	031 Call Queue`1<Object>..ctor, X0
	032 Compare X22, 0
	033 JumpIfEqual {100}
	034 Move X8, [X20+32]
	035 Move X1, [X23+32]
	036 Move X0, X22
	037 Move X8, [X8+192]
	038 Move X2, [X8+160]
	039 Call Queue`1<Object>.Enqueue, X0, X1
	040 Move W8, [X22+32]
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move W25, 40
	043 Move W26, 48
	044 Move X8, [X20+32]
	045 Move X0, X22
	046 Move X8, [X8+192]
	047 Move X1, [X8+168]
	048 Call Queue`1<Object>.Dequeue, X0
	049 Compare X0, 0
	050 JumpIfEqual {100}
	051 Move [X31+12], W21
	052 Move X8, [X20+32]
	053 Move X23, X0
	054 Add X1, X31, 12
	055 Add X24, X23, 24
	056 Move X8, [X8+192]
	057 Move X0, [X8+48]
	058 Call 0x1C17E04
	059 Move X8, [X20+32]
	060 Move X1, X0
	061 Move X0, X24
	062 Move X8, [X8+192]
	063 Move X2, [X8+384]
	064 Call Int32.Equals, X0, X1
	065 Move TEMP, X0
	066 And TEMP, TEMP, 1
	067 Compare TEMP, 1
	068 JumpIfEqual {98}
	069 Move TEMP, 2
	070 Not TEMP
	071 Move W24, TEMP
	072 Add W31, W24, 1
	073 NotImplemented "Instruction CSEL not yet implemented."
	074 Move X1, [X23]
	075 Compare X1, 0
	076 JumpIfEqual {82}
	077 Move X8, [X20+32]
	078 Move X0, X22
	079 Move X8, [X8+192]
	080 Move X2, [X8+160]
	081 Call Queue`1<Object>.Enqueue, X0, X1
	082 Add W24, W24, 2
	083 Move W8, [X22+32]
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Move X8, X31
	086 Move W0, W31
	087 Move [X19], X8
	088 Move X20, [X31+64]
	089 Move X19, [X31+72]
	090 Move X22, [X31+48]
	091 Move X21, [X31+56]
	092 Move X24, [X31+32]
	093 Move X23, [X31+40]
	094 Move X26, [X31+16]
	095 Move X25, [X31+24]
	096 Move X30, [X31+80]
	097 Return X0
	098 Move X8, [X23+16]
	099 Move W0, 1
	100 Call 0x1C17F20

Method: TKey[] FindValue(TValue value)

Disassembly:
	0x02EA9884 LDR X8, [X19 + 0x20]
	0x02EA9888 LDUR X0, [X29 - 0x30]
	0x02EA988C LDR X8, [X8 + 0xC0]
	0x02EA9890 LDR X1, [X8 + 0x50]
	0x02EA9894 LDR X8, [X1]
	0x02EA9898 BLR X8
	0x02EA989C CMP W0, 0x2
	0x02EA98A0 B.NE 0x2EA9B1C
	0x02EA98A4 LDR X23, [X19 + 0x20]
	0x02EA98A8 LDUR X26, [X29 - 0x58]
	0x02EA98AC SUB X9, X29, 0x28
	0x02EA98B0 LDR X8, [X23 + 0xC0]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31+8], X31
	003 Move X8, [X2+32]
	004 Add X2, X31, 8
	005 Move X8, [X8+192]
	006 Move X3, [X8+392]
	007 Call 0x2EA9734, X0, X1, X2
	008 Move X8, [X31+8]
	009 And W31, W0, 1
	010 NotImplemented "Instruction CSEL not yet implemented."
	011 Move X30, [X31+16]
	012 Return X0

Method: System.Void AddNodeToStringBuilder(UnityEngine.ProBuilder.KdTree.KdTreeNode`2<TKey, TValue> node, System.Text.StringBuilder sb, System.Int32 depth)

Disassembly:
	0x02EA98B4 MOV X2, X26
	0x02EA98B8 LDR X8, [X8 + 0x30]
	0x02EA98BC LDR W8, [X8 + 0x28]
	0x02EA98C0 CMP W8, 0x0
	0x02EA98C4 LDP X24, X8, [X29 - 0x50]
	0x02EA98C8 CSEL X1, X8, X9, LT
	0x02EA98CC MOV X0, X24
	0x02EA98D0 BL 0x3EB1AC0
	0x02EA98D4 CBZ X20, 0x2EA9C24
	0x02EA98D8 LDR X8, [X23 + 0xC0]
	0x02EA98DC MOV X0, X20
	0x02EA98E0 MOV X2, X24
	0x02EA98E4 MOV W3, W26
	0x02EA98E8 LDR X8, [X8 + 0x38]
	0x02EA98EC LDR X8, [X8 + 0x80]
	0x02EA98F0 ADD X1, X8, 0x20
	0x02EA98F4 BL 0x1C16D1C
	0x02EA98F8 CBZ X22, 0x2EA9C24
	0x02EA98FC LDR W8, [X22 + 0x18]
	0x02EA9900 ADD W9, W27, 0x1
	0x02EA9904 SDIV W10, W9, W21
	0x02EA9908 MSUB W26, W10, W21, W9
	0x02EA990C CMP W26, W8
	0x02EA9910 B.CS 0x2EA9C28
	0x02EA9914 LDR X8, [X22]
	0x02EA9918 LDP X0, X9, [X29 - 0x38]
	0x02EA991C LDUR X2, [X29 - 0x40]
	0x02EA9920 SXTW X24, W26
	0x02EA9924 LDR W8, [X8 + 0x104]
	0x02EA9928 LDR X23, [X9 + 0x18]
	0x02EA992C NOP
	0x02EA9930 MADD X8, X8, X24, X22
	0x02EA9934 ADD X1, X8, 0x20
	0x02EA9938 BL 0x3EB1AC0
	0x02EA993C LDR X8, [X19 + 0x20]
	0x02EA9940 MOV X0, X20
	0x02EA9944 LDR X8, [X8 + 0xC0]
	0x02EA9948 LDR X8, [X8 + 0x38]
	0x02EA994C LDR X1, [X8 + 0x80]
	0x02EA9950 BL 0x1C16D18
	0x02EA9954 LDR X8, [X0]
	0x02EA9958 CBZ X8, 0x2EA9C24
	0x02EA995C LDR W9, [X8 + 0x18]
	0x02EA9960 CMP W26, W9
	0x02EA9964 B.CS 0x2EA9C28
	0x02EA9968 LDR X9, [X8]
	0x02EA996C LDUR X2, [X29 - 0x40]
	0x02EA9970 MOV X0, X28
	0x02EA9974 LDR W9, [X9 + 0x104]
	0x02EA9978 NOP
	0x02EA997C MADD X8, X9, X24, X8
	0x02EA9980 ADD X1, X8, 0x20
	0x02EA9984 BL 0x3EB1AC0
	0x02EA9988 CBZ X23, 0x2EA9C24
	0x02EA998C LDR X8, [X19 + 0x20]
	0x02EA9990 LDR X8, [X8 + 0xC0]
	0x02EA9994 LDR X1, [X8 + 0x8]
	0x02EA9998 LDRB W9, [X1 + 0x135]
	0x02EA999C TBNZ X9, 0x0, 0x2EA99B4
	0x02EA99A0 MOV X0, X1
	0x02EA99A4 BL 0x1C5C684
	0x02EA99A8 LDR X8, [X19 + 0x20]
	0x02EA99AC MOV X1, X0
	0x02EA99B0 LDR X8, [X8 + 0xC0]
	0x02EA99B4 LDR X8, [X8 + 0x60]
	0x02EA99B8 LDUR X24, [X29 - 0x38]
	0x02EA99BC MOV X25, X28
	0x02EA99C0 LDR W8, [X8 + 0x28]
	0x02EA99C4 TBNZ X8, 0x1F, 0x2EA99D4
	0x02EA99C8 LDUR X8, [X29 - 0x38]
	0x02EA99CC LDR X25, [X28]
	0x02EA99D0 LDR X24, [X8]
	0x02EA99D4 LDR X8, [X23]
	0x02EA99D8 LDRH W9, [X8 + 0x12E]
	0x02EA99DC CBZ X9, 0x2EA9A00
	0x02EA99E0 LDR X10, [X8 + 0xB0]
	0x02EA99E4 ADD X10, X10, 0x8
	0x02EA99E8 LDUR X11, [X10 - 0x8]
	0x02EA99EC CMP X11, X1
	0x02EA99F0 B.EQ 0x2EA9A10
	0x02EA99F4 SUBS X9, X9, 0x1
	0x02EA99F8 ADD X10, X10, 0x10
	0x02EA99FC B.NE 0x2EA99E8
	0x02EA9A00 MOV X0, X23
	0x02EA9A04 MOV W2, W31
	0x02EA9A08 BL 0x1C5C788
	0x02EA9A0C B 0x2EA9A1C
	0x02EA9A10 LDRSW X9, [X10]
	0x02EA9A14 ADD X8, X8, X9, 0x4, LSL
	0x02EA9A18 ADD X0, X8, 0x138
	0x02EA9A1C STP X24, X25, [X29 - 0x20]
	0x02EA9A20 LDR X1, [X0 + 0x8]
	0x02EA9A24 SUB X3, X29, 0x20

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X19, 0x1533000
	015 Move W8, [X19+2650]
	016 Move W20, W3
	017 Move X21, X2
	018 Move X22, X1
	019 Move [X31], X0
	020 Move [X31+8], X4
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {39}
	025 Move X0, 0x1277000
	026 Move X0, [X0+184]
	027 Call 0x1C17CF4
	028 Move X0, 0x1277000
	029 Move X0, [X0+192]
	030 Call 0x1C17CF4
	031 Move X0, 0x1277000
	032 Move X0, [X0+200]
	033 Call 0x1C17CF4
	034 Move X0, 0x124B000
	035 Move X0, [X0+2440]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X19+2650], W8
	039 Compare X22, 0
	040 JumpIfEqual {116}
	041 Move X8, [X22]
	042 Move X0, X22
	043 Move X9, [X8+360]
	044 Move X1, [X8+368]
	045 NotImplemented "Instruction BLR not yet implemented."
	046 Compare X21, 0
	047 JumpIfEqual {116}
	048 Move X25, 0x1277000
	049 Move X26, 0x1277000
	050 Move X28, 0x1277000
	051 Move X25, [X25+200]
	052 Move X26, [X26+192]
	053 Move X28, [X28+184]
	054 Move X1, X0
	055 Move X0, X21
	056 Move X2, X31
	057 Call StringBuilder.AppendLine, X0, X1
	058 Add W24, W20, 1
	059 Move TEMP, 0
	060 Not TEMP
	061 Move W29, TEMP
	062 Move W27, 40
	063 Move W19, 48
	064 Move TEMP, X20
	065 And TEMP, TEMP, -2147483648
	066 Compare TEMP, -2147483648
	067 JumpIfEqual {75}
	068 Move W23, W31
	069 Move X1, [X28]
	070 Move X0, X21
	071 Move X2, X31
	072 Call StringBuilder.Append, X0, X1
	073 Add W23, W23, 1
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Add W31, W29, 1
	076 NotImplemented "Instruction CSEL not yet implemented."
	077 Move X1, [X8]
	078 Move X0, X21
	079 Move X2, X31
	080 Call StringBuilder.Append, X0, X1
	081 NotImplemented "Instruction CMP not yet implemented."
	082 NotImplemented "Instruction CSEL not yet implemented."
	083 Move X1, [X22]
	084 Compare X1, 0
	085 JumpIfEqual {94}
	086 Move X0, [X31]
	087 Move X8, [X31+8]
	088 Move X2, X21
	089 Move W3, W24
	090 Move X8, [X8+32]
	091 Move X8, [X8+192]
	092 Move X4, [X8+400]
	093 Call 0x2EA98B4, X0, X1, X2, X3
	094 Move X8, 0x124B000
	095 Move X8, [X8+2440]
	096 Move X0, X21
	097 Move X2, X31
	098 Move X1, [X8]
	099 Call StringBuilder.AppendLine, X0, X1
	100 Add W31, W29, 2
	101 Add W29, W29, 2
	102 Move X20, [X31+96]
	103 Move X19, [X31+104]
	104 Move X22, [X31+80]
	105 Move X21, [X31+88]
	106 Move X24, [X31+64]
	107 Move X23, [X31+72]
	108 Move X26, [X31+48]
	109 Move X25, [X31+56]
	110 Move X28, [X31+32]
	111 Move X27, [X31+40]
	112 Move X29, [X31+16]
	113 Move X30, [X31+24]
	114 Add X31, X31, 112
	115 Return 
	116 Call 0x1C17F20

Method: System.String ToString()

Disassembly:
	0x02EA9A28 SUB X4, X29, 0xC
	0x02EA9A2C MOV X2, X23
	0x02EA9A30 LDP X0, X8, [X1 + 0x8]
	0x02EA9A34 BLR X8
	0x02EA9A38 CBZ X20, 0x2EA9C24
	0x02EA9A3C LDR X8, [X19 + 0x20]
	0x02EA9A40 LDUR W23, [X29 - 0xC]
	0x02EA9A44 MOV X0, X20
	0x02EA9A48 LDR X8, [X8 + 0xC0]
	0x02EA9A4C MOV W1, W23
	0x02EA9A50 LDR X2, [X8 + 0x70]
	0x02EA9A54 LDR X8, [X2]
	0x02EA9A58 BLR X8
	0x02EA9A5C LDR X8, [X19 + 0x20]
	0x02EA9A60 LDR X8, [X8 + 0xC0]
	0x02EA9A64 CBZ X0, 0x2EA9B9C
	0x02EA9A68 LDR X2, [X8 + 0x70]
	0x02EA9A6C MOV X0, X20
	0x02EA9A70 MOV W1, W23
	0x02EA9A74 MOV X27, X26
	0x02EA9A78 LDR X8, [X2]
	0x02EA9A7C BLR X8
	0x02EA9A80 MOV X20, X0
	0x02EA9A84 B 0x2EA97D4
	0x02EA9A88 LDR X20, [X19 + 0x20]
	0x02EA9A8C LDUR X9, [X29 - 0x48]
	0x02EA9A90 MOV X0, X24
	0x02EA9A94 MOV X2, X25
	0x02EA9A98 LDR X8, [X20 + 0xC0]
	0x02EA9A9C LDR X8, [X8 + 0x30]
	0x02EA9AA0 LDR W8, [X8 + 0x28]
	0x02EA9AA4 CMP W8, 0x0
	0x02EA9AA8 SUB X8, X29, 0x28
	0x02EA9AAC CSEL X1, X9, X8, LT
	0x02EA9AB0 BL 0x3EB1AC0
	0x02EA9AB4 LDR X8, [X20 + 0xC0]
	0x02EA9AB8 LDR X0, [X8 + 0x38]
	0x02EA9ABC LDRB W8, [X0 + 0x135]
	0x02EA9AC0 TBNZ X8, 0x0, 0x2EA9AC8
	0x02EA9AC4 BL 0x1C5C684
	0x02EA9AC8 LDUR X20, [X29 - 0x60]
	0x02EA9ACC BL 0x1C16F10
	0x02EA9AD0 LDR X8, [X19 + 0x20]
	0x02EA9AD4 MOV X23, X0
	0x02EA9AD8 LDR X8, [X8 + 0xC0]
	0x02EA9ADC LDR X9, [X8 + 0x30]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1533000
	006 Move W8, [X21+2651]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x124B000
	014 Move X0, [X0+2288]
	015 Call 0x1C17CF4
	016 Move X0, 0x124B000
	017 Move X0, [X0+2440]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2651], W8
	021 Move X8, [X19+32]
	022 Compare X8, 0
	023 JumpIfEqual {50}
	024 Move X8, 0x124B000
	025 Move X8, [X8+2288]
	026 Move X0, [X8]
	027 Call 0x1C17F10
	028 Move X1, X31
	029 Move X21, X0
	030 Call StringBuilder..ctor, X0
	031 Move X8, [X20+32]
	032 Move X1, [X19+32]
	033 Move X0, X19
	034 Move X2, X21
	035 Move X8, [X8+192]
	036 Move W3, W31
	037 Move X4, [X8+400]
	038 Call 0x2EA98B4, X0, X1, X2, X3
	039 Compare X21, 0
	040 JumpIfEqual {58}
	041 Move X8, [X21]
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X0, X21
	045 Move X2, [X8+360]
	046 Move X1, [X8+368]
	047 Move X30, [X31+32]
	048 Move X21, [X31+40]
	049 CallNoReturn X2
	050 Move X8, 0x124B000
	051 Move X8, [X8+2440]
	052 Move X20, [X31+16]
	053 Move X19, [X31+24]
	054 Move X0, [X8]
	055 Move X30, [X31+32]
	056 Move X21, [X31+40]
	057 Return X0
	058 Call 0x1C17F20

Method: System.Void AddNodesToList(UnityEngine.ProBuilder.KdTree.KdTreeNode`2<TKey, TValue> node, System.Collections.Generic.List`1<UnityEngine.ProBuilder.KdTree.KdTreeNode`2<TKey, TValue>> nodes)

Disassembly:
	0x02EA9AE0 LDR X1, [X8 + 0x40]
	0x02EA9AE4 LDR W9, [X9 + 0x28]
	0x02EA9AE8 LDR X8, [X1]
	0x02EA9AEC TBNZ X9, 0x1F, 0x2EA9AF4
	0x02EA9AF0 LDR X24, [X24]
	0x02EA9AF4 STP X22, X24, [X29 - 0x20]
	0x02EA9AF8 LDR X9, [X1 + 0x10]
	0x02EA9AFC SUB X3, X29, 0x20
	0x02EA9B00 MOV X0, X8
	0x02EA9B04 MOV X2, X23
	0x02EA9B08 MOV X4, X24
	0x02EA9B0C BLR X9
	0x02EA9B10 LDUR X8, [X29 - 0x30]
	0x02EA9B14 STR X23, [X8 + 0x20]
	0x02EA9B18 B 0x2EA9BB8
	0x02EA9B1C CBZ W0, 0x2EA9B94
	0x02EA9B20 CMP W0, 0x3
	0x02EA9B24 B.NE 0x2EA9C2C
	0x02EA9B28 LDR X19, [X19 + 0x20]
	0x02EA9B2C MOV X21, X20
	0x02EA9B30 LDP X20, X9, [X29 - 0x50]
	0x02EA9B34 LDUR X2, [X29 - 0x58]
	0x02EA9B38 LDR X8, [X19 + 0xC0]
	0x02EA9B3C MOV X0, X20
	0x02EA9B40 LDR X8, [X8 + 0x30]
	0x02EA9B44 LDR W8, [X8 + 0x28]
	0x02EA9B48 CMP W8, 0x0
	0x02EA9B4C SUB X8, X29, 0x28
	0x02EA9B50 CSEL X1, X9, X8, LT
	0x02EA9B54 BL 0x3EB1AC0
	0x02EA9B58 CBZ X21, 0x2EA9C24
	0x02EA9B5C LDR X8, [X19 + 0xC0]
	0x02EA9B60 LDR X9, [X8 + 0x30]
	0x02EA9B64 LDR X1, [X8 + 0x58]
	0x02EA9B68 LDR W8, [X9 + 0x28]
	0x02EA9B6C LDR X0, [X1]
	0x02EA9B70 TBNZ X8, 0x1F, 0x2EA9B78
	0x02EA9B74 LDR X20, [X20]
	0x02EA9B78 STUR X20, [X29 - 0x20]
	0x02EA9B7C LDR X8, [X1 + 0x10]
	0x02EA9B80 SUB X3, X29, 0x20
	0x02EA9B84 MOV X2, X21
	0x02EA9B88 MOV X4, X20
	0x02EA9B8C BLR X8
	0x02EA9B90 MOV W0, W31
	0x02EA9B94 LDUR X20, [X29 - 0x60]
	0x02EA9B98 B 0x2EA9BF4
	0x02EA9B9C LDR X3, [X8 + 0x78]
	0x02EA9BA0 LDUR X2, [X29 - 0x68]
	0x02EA9BA4 MOV X0, X20
	0x02EA9BA8 MOV W1, W23
	0x02EA9BAC LDR X8, [X3]
	0x02EA9BB0 BLR X8
	0x02EA9BB4 LDUR X20, [X29 - 0x60]
	0x02EA9BB8 LDR X8, [X19 + 0x20]
	0x02EA9BBC LDUR X21, [X29 - 0x30]
	0x02EA9BC0 LDR X8, [X8 + 0xC0]
	0x02EA9BC4 MOV X0, X21
	0x02EA9BC8 LDR X1, [X8 + 0x80]
	0x02EA9BCC LDR X8, [X1]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Compare X1, 0
	009 JumpIfEqual {59}
	010 Move X20, X2
	011 Compare X2, 0
	012 JumpIfEqual {67}
	013 Move X8, [X3+32]
	014 Move W10, [X20+28]
	015 Move X19, X3
	016 Move X9, [X8+192]
	017 Move X8, [X20+16]
	018 Add W10, W10, 1
	019 Move X9, [X9+416]
	020 Move [X20+28], W10
	021 Compare X8, 0
	022 JumpIfEqual {67}
	023 NotImplemented "Instruction LDRSW not yet implemented."
	024 Move W11, [X8+24]
	025 Move X22, X1
	026 Move X21, X0
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Add W9, W10, 1
	029 Add X8, X8, X10
	030 Move [X20+24], W9
	031 Move [X8+32], X22
	032 Move X8, [X9+32]
	033 Move X0, X20
	034 Move X1, X22
	035 Move X8, [X8+192]
	036 Move X2, [X8+112]
	037 Call List`1<Object>.AddWithResize, X0, X1
	038 Add X23, X22, 40
	039 Add X22, X22, 48
	040 Move TEMP, 2
	041 Not TEMP
	042 Move W24, TEMP
	043 Add W24, W24, 2
	044 NotImplemented "Instruction CMP not yet implemented."
	045 NotImplemented "Instruction CSEL not yet implemented."
	046 Move X1, [X8]
	047 Compare X1, 0
	048 JumpIfEqual {57}
	049 Move X8, [X19+32]
	050 Move X0, X21
	051 Move X2, X20
	052 Move X8, [X8+192]
	053 Move X3, [X8+424]
	054 Call 0x2EA9AE0, X0, X1, X2
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move [X23], X31
	057 Add W31, W24, 3
	058 Move [X22], X31
	059 Move X20, [X31+48]
	060 Move X19, [X31+56]
	061 Move X22, [X31+32]
	062 Move X21, [X31+40]
	063 Move X24, [X31+16]
	064 Move X23, [X31+24]
	065 Move X30, [X31+64]
	066 Return 
	067 Call 0x1C17F20

Method: System.Void SortNodesArray(UnityEngine.ProBuilder.KdTree.KdTreeNode`2<TKey, TValue>[] nodes, System.Int32 byDimension, System.Int32 fromIndex, System.Int32 toIndex)

Disassembly:
	0x02EA9BD0 BLR X8
	0x02EA9BD4 LDR X8, [X19 + 0x20]
	0x02EA9BD8 ADD W1, W0, 0x1
	0x02EA9BDC MOV X0, X21
	0x02EA9BE0 LDR X8, [X8 + 0xC0]
	0x02EA9BE4 LDR X2, [X8 + 0x10]
	0x02EA9BE8 LDR X8, [X2]
	0x02EA9BEC BLR X8
	0x02EA9BF0 MOVZ W0, 0x1
	0x02EA9BF4 LDR X8, [X20 + 0x28]
	0x02EA9BF8 LDUR X9, [X29 - 0x8]
	0x02EA9BFC CMP X8, X9
	0x02EA9C00 B.NE 0x2EA9C90
	0x02EA9C04 ADD X31, X29, 0x0
	0x02EA9C08 LDP X20, X19, [X31 + 0x50]
	0x02EA9C0C LDP X22, X21, [X31 + 0x40]
	0x02EA9C10 LDP X24, X23, [X31 + 0x30]
	0x02EA9C14 LDP X26, X25, [X31 + 0x20]
	0x02EA9C18 LDP X28, X27, [X31 + 0x10]
	0x02EA9C1C LDP X29, X30, [X31], #0x60
	0x02EA9C20 RET
	0x02EA9C24 BL 0x1C16F20
	0x02EA9C28 BL 0x1C16F28
	0x02EA9C2C CMP W0, 0x1
	0x02EA9C30 B.NE 0x2EA9C54
	0x02EA9C34 ADRP X0, 0x1276000
	0x02EA9C38 LDR X0, [X0 + 0xA0]
	0x02EA9C3C BL 0x1C16D08
	0x02EA9C40 BL 0x1C16F10
	0x02EA9C44 MOV X1, X31
	0x02EA9C48 MOV X20, X0
	0x02EA9C4C BL 0x38ED2D8
	0x02EA9C50 B 0x2EA9C84
	0x02EA9C54 ADRP X0, 0x124A000
	0x02EA9C58 LDR X0, [X0 + 0x7D0]
	0x02EA9C5C BL 0x1C16D08
	0x02EA9C60 BL 0x1C16F10
	0x02EA9C64 MOV X20, X0
	0x02EA9C68 ADRP X0, 0x1276000
	0x02EA9C6C LDR X0, [X0 + 0xA8]
	0x02EA9C70 BL 0x1C16D08
	0x02EA9C74 MOV X1, X0
	0x02EA9C78 MOV X0, X20
	0x02EA9C7C MOV X2, X31
	0x02EA9C80 BL 0x33B2C70
	0x02EA9C84 MOV X0, X20
	0x02EA9C88 MOV X1, X19
	0x02EA9C8C BL 0x1C16DEC
	0x02EA9C90 BL 0x3EB1B20
	0x02EA9C94 STP X29, X30, [X31 - 0x60]!
	0x02EA9C98 STP X28, X27, [X31 + 0x10]
	0x02EA9C9C STP X26, X25, [X31 + 0x20]
	0x02EA9CA0 STP X24, X23, [X31 + 0x30]
	0x02EA9CA4 STP X22, X21, [X31 + 0x40]
	0x02EA9CA8 STP X20, X19, [X31 + 0x50]
	0x02EA9CAC ADD X29, X31, 0x0
	0x02EA9CB0 SUB X31, X31, 0x20
	0x02EA9CB4 MRS X27, 0xC000
	0x02EA9CB8 LDR X8, [X27 + 0x28]
	0x02EA9CBC MOV X19, X2
	0x02EA9CC0 STUR X8, [X29 - 0x8]
	0x02EA9CC4 LDR X8, [X19 + 0x20]!
	0x02EA9CC8 LDR X8, [X8 + 0xC0]
	0x02EA9CCC LDR X9, [X8 + 0x30]
	0x02EA9CD0 LDR W20, [X9 + 0xFC]
	0x02EA9CD4 ADD X9, X31, 0x0
	0x02EA9CD8 ADD X10, X20, 0xF
	0x02EA9CDC AND X10, X10, 0x1FFFFFFFF
	0x02EA9CE0 SUB X22, X9, X10
	0x02EA9CE4 ADD X31, X22, 0x0
	0x02EA9CE8 CBZ X1, 0x2EAA0D0
	0x02EA9CEC MOV X25, X1
	0x02EA9CF0 LDR X1, [X8 + 0x88]
	0x02EA9CF4 MOV X21, X0
	0x02EA9CF8 MOV X0, X25
	0x02EA9CFC LDR X8, [X1]
	0x02EA9D00 BLR X8
	0x02EA9D04 TBNZ X0, 0x0, 0x2EAA0A0
	0x02EA9D08 LDR X8, [X19]
	0x02EA9D0C LDR X8, [X8 + 0xC0]
	0x02EA9D10 LDR X0, [X8 + 0x90]
	0x02EA9D14 LDRB W8, [X0 + 0x135]
	0x02EA9D18 TBNZ X8, 0x0, 0x2EA9D20
	0x02EA9D1C BL 0x1C5C684
	0x02EA9D20 BL 0x1C16F10
	0x02EA9D24 LDR X8, [X19]
	0x02EA9D28 MOV X23, X0
	0x02EA9D2C LDR X8, [X8 + 0xC0]
	0x02EA9D30 LDR X1, [X8 + 0x98]
	0x02EA9D34 LDR X8, [X1]
	0x02EA9D38 BLR X8
	0x02EA9D3C LDR X8, [X19]
	0x02EA9D40 LDR X8, [X8 + 0xC0]
	0x02EA9D44 LDR X0, [X8 + 0x90]
	0x02EA9D48 LDRB W8, [X0 + 0x135]
	0x02EA9D4C TBNZ X8, 0x0, 0x2EA9D54
	0x02EA9D50 BL 0x1C5C684
	0x02EA9D54 BL 0x1C16F10
	0x02EA9D58 LDR X8, [X19]
	0x02EA9D5C MOV X24, X0
	0x02EA9D60 LDR X8, [X8 + 0xC0]
	0x02EA9D64 LDR X1, [X8 + 0x98]
	0x02EA9D68 LDR X8, [X1]
	0x02EA9D6C BLR X8
	0x02EA9D70 LDR X8, [X19]
	0x02EA9D74 MOV X0, X25
	0x02EA9D78 LDR X8, [X8 + 0xC0]
	0x02EA9D7C LDR X8, [X8 + 0x38]
	0x02EA9D80 LDR X8, [X8 + 0x80]
	0x02EA9D84 ADD X1, X8, 0x60
	0x02EA9D88 BL 0x1C16D18
	0x02EA9D8C LDR X8, [X0]
	0x02EA9D90 CBZ X8, 0x2EA9DDC
	0x02EA9D94 LDR X8, [X19]
	0x02EA9D98 MOV X0, X25
	0x02EA9D9C LDR X8, [X8 + 0xC0]
	0x02EA9DA0 LDR X8, [X8 + 0x38]
	0x02EA9DA4 LDR X8, [X8 + 0x80]
	0x02EA9DA8 ADD X1, X8, 0x60
	0x02EA9DAC BL 0x1C16D18
	0x02EA9DB0 CBZ X24, 0x2EAA0D0

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+16], D9
	003 Move [X31+24], D8
	004 Move [X31+32], X29
	005 Move [X31+40], X30
	006 Move [X31+48], X28
	007 Move [X31+56], X27
	008 Move [X31+64], X26
	009 Move [X31+72], X25
	010 Move [X31+80], X24
	011 Move [X31+88], X23
	012 Move [X31+96], X22
	013 Move [X31+104], X21
	014 Move [X31+112], X20
	015 Move [X31+120], X19
	016 Add W9, W3, 1
	017 NotImplemented "Instruction CMP not yet implemented."
	018 Move [X31+8], X5
	019 Move [X31+4], W4
	020 Move X22, X1
	021 Compare X1, 0
	022 JumpIfEqual {135}
	023 Move W21, W2
	024 Move W23, W3
	025 Move X24, X0
	026 Move X28, W21
	027 Move W8, [X22+24]
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move W29, W9
	030 Add X9, X22, 32
	031 Add X20, X9, W23
	032 Add X19, X9, W29
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X26, [X19]
	035 Compare X26, 0
	036 JumpIfEqual {135}
	037 Move X8, [X26+16]
	038 Compare X8, 0
	039 JumpIfEqual {135}
	040 Move W9, [X8+24]
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move X25, [X20]
	043 Compare X25, 0
	044 JumpIfEqual {135}
	045 Move X9, [X25+16]
	046 Compare X9, 0
	047 JumpIfEqual {135}
	048 Move W10, [X9+24]
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move X27, [X24+24]
	051 Compare X27, 0
	052 JumpIfEqual {135}
	053 Move X10, [X31+8]
	054 Add X8, X8, X28
	055 Move V8, [X8+32]
	056 Add X8, X9, X28
	057 Move X10, [X10+32]
	058 Move V9, [X8+32]
	059 Move X10, [X10+192]
	060 Move X1, [X10+8]
	061 Move W9, [X1+309]
	062 Move TEMP, X9
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfEqual {69}
	066 Move X0, X1
	067 Call 0x1C5D684
	068 Move X1, X0
	069 Move X8, [X27]
	070 NotImplemented "Instruction LDRH not yet implemented."
	071 Compare X9, 0
	072 JumpIfEqual {79}
	073 Move X10, [X8+176]
	074 Add X10, X10, 8
	075 NotImplemented "Instruction LDUR not yet implemented."
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Subtract X9, X9, 1
	078 Add X10, X10, 16
	079 Move X0, X27
	080 Move W2, W31
	081 Call 0x1C5D788
	082 NotImplemented "Instruction LDRSW not yet implemented."
	083 Add X8, X8, X9
	084 Add X0, X8, 312
	085 Move X8, [X0]
	086 Move X1, [X0+8]
	087 Move X0, X27
	088 Move V0, V8
	089 Move V1, V9
	090 NotImplemented "Instruction BLR not yet implemented."
	091 Move TEMP, X0
	092 And TEMP, TEMP, -2147483648
	093 Compare TEMP, -2147483648
	094 JumpIfNotEqual {114}
	095 Move X8, [X22]
	096 Move X0, X26
	097 Move X1, [X8+64]
	098 Call 0x1C17E00
	099 Compare X0, 0
	100 JumpIfEqual {136}
	101 Move W8, [X22+24]
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Move [X20], X26
	104 Move X8, [X22]
	105 Move X0, X25
	106 Move X1, [X8+64]
	107 Call 0x1C17E00
	108 Compare X0, 0
	109 JumpIfEqual {136}
	110 Move X8, [X22+24]
	111 NotImplemented "Instruction CMP not yet implemented."
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Move [X19], X25
	114 Move W8, [X31+4]
	115 Add W9, W29, 1
	116 Move W23, W29
	117 NotImplemented "Instruction CMP not yet implemented."
	118 Move X20, [X31+112]
	119 Move X19, [X31+120]
	120 Move X22, [X31+96]
	121 Move X21, [X31+104]
	122 Move X24, [X31+80]
	123 Move X23, [X31+88]
	124 Move X26, [X31+64]
	125 Move X25, [X31+72]
	126 Move X28, [X31+48]
	127 Move X27, [X31+56]
	128 Move X29, [X31+32]
	129 Move X30, [X31+40]
	130 Move D9, [X31+16]
	131 Move D8, [X31+24]
	132 Add X31, X31, 128
	133 Return 
	134 Call 0x1C17F28
	135 Call 0x1C17F20
	136 Call 0x1C17F44
	137 Move X1, X31
	138 Call 0x1C17DEC

Method: System.Void AddNodesBalanced(UnityEngine.ProBuilder.KdTree.KdTreeNode`2<TKey, TValue>[] nodes, System.Int32 byDimension, System.Int32 fromIndex, System.Int32 toIndex)

Disassembly:
	0x02EA9DB4 LDR X8, [X19]
	0x02EA9DB8 LDR X4, [X0]
	0x02EA9DBC SUB X3, X29, 0x20
	0x02EA9DC0 MOV X2, X24
	0x02EA9DC4 LDR X8, [X8 + 0xC0]
	0x02EA9DC8 LDR X1, [X8 + 0xA0]
	0x02EA9DCC LDR X0, [X1]
	0x02EA9DD0 STUR X4, [X29 - 0x20]
	0x02EA9DD4 LDR X8, [X1 + 0x10]
	0x02EA9DD8 BLR X8
	0x02EA9DDC LDR X8, [X19]
	0x02EA9DE0 MOV X0, X25
	0x02EA9DE4 LDR X8, [X8 + 0xC0]
	0x02EA9DE8 LDR X8, [X8 + 0x38]
	0x02EA9DEC LDR X8, [X8 + 0x80]
	0x02EA9DF0 ADD X1, X8, 0x80
	0x02EA9DF4 BL 0x1C16D18
	0x02EA9DF8 LDR X8, [X0]
	0x02EA9DFC CBZ X8, 0x2EA9E4C
	0x02EA9E00 LDR X8, [X19]
	0x02EA9E04 MOV X0, X25
	0x02EA9E08 LDR X8, [X8 + 0xC0]
	0x02EA9E0C LDR X8, [X8 + 0x38]
	0x02EA9E10 LDR X8, [X8 + 0x80]
	0x02EA9E14 ADD X1, X8, 0x80
	0x02EA9E18 BL 0x1C16D18
	0x02EA9E1C CBZ X24, 0x2EAA0D0
	0x02EA9E20 LDR X8, [X19]
	0x02EA9E24 LDR X4, [X0]
	0x02EA9E28 SUB X3, X29, 0x20
	0x02EA9E2C MOV X2, X24
	0x02EA9E30 LDR X8, [X8 + 0xC0]
	0x02EA9E34 LDR X1, [X8 + 0xA0]
	0x02EA9E38 LDR X0, [X1]
	0x02EA9E3C STUR X4, [X29 - 0x20]
	0x02EA9E40 LDR X8, [X1 + 0x10]
	0x02EA9E44 BLR X8
	0x02EA9E48 B 0x2EA9E50
	0x02EA9E4C CBZ X24, 0x2EAA0D0
	0x02EA9E50 LDR X8, [X19]
	0x02EA9E54 MOV X0, X24
	0x02EA9E58 LDR X8, [X8 + 0xC0]
	0x02EA9E5C LDR X1, [X8 + 0xB0]
	0x02EA9E60 LDR X8, [X1]
	0x02EA9E64 BLR X8
	0x02EA9E68 CMP W0, 0x1
	0x02EA9E6C B.LT 0x2EA9F7C
	0x02EA9E70 LDR X8, [X19]
	0x02EA9E74 SUB X4, X29, 0x20
	0x02EA9E78 MOV X2, X24
	0x02EA9E7C MOV X3, X31
	0x02EA9E80 LDR X8, [X8 + 0xC0]
	0x02EA9E84 LDR X1, [X8 + 0xA8]
	0x02EA9E88 LDR X0, [X1]
	0x02EA9E8C LDR X8, [X1 + 0x10]
	0x02EA9E90 BLR X8
	0x02EA9E94 CBZ X23, 0x2EAA0D0
	0x02EA9E98 LDR X8, [X19]
	0x02EA9E9C LDUR X25, [X29 - 0x20]
	0x02EA9EA0 SUB X3, X29, 0x20
	0x02EA9EA4 MOV X2, X23
	0x02EA9EA8 LDR X8, [X8 + 0xC0]
	0x02EA9EAC MOV X4, X25
	0x02EA9EB0 LDR X1, [X8 + 0xA0]
	0x02EA9EB4 LDR X0, [X1]
	0x02EA9EB8 STUR X25, [X29 - 0x20]
	0x02EA9EBC LDR X8, [X1 + 0x10]
	0x02EA9EC0 BLR X8
	0x02EA9EC4 CBZ X25, 0x2EAA0D0
	0x02EA9EC8 MOVN W28, 0x2
	0x02EA9ECC LDR X8, [X19]
	0x02EA9ED0 ADD W26, W28, 0x2
	0x02EA9ED4 MOV X0, X25
	0x02EA9ED8 MOV W1, W26
	0x02EA9EDC LDR X8, [X8 + 0xC0]
	0x02EA9EE0 LDR X2, [X8 + 0x70]
	0x02EA9EE4 LDR X8, [X2]
	0x02EA9EE8 BLR X8
	0x02EA9EEC CBZ X0, 0x2EA9F54
	0x02EA9EF0 LDR X8, [X19]
	0x02EA9EF4 MOV X0, X25
	0x02EA9EF8 MOV W1, W26
	0x02EA9EFC LDR X8, [X8 + 0xC0]
	0x02EA9F00 LDR X2, [X8 + 0x70]
	0x02EA9F04 LDR X8, [X2]
	0x02EA9F08 BLR X8
	0x02EA9F0C LDR X8, [X19]
	0x02EA9F10 MOV X4, X0
	0x02EA9F14 SUB X3, X29, 0x20
	0x02EA9F18 MOV X2, X24
	0x02EA9F1C LDR X8, [X8 + 0xC0]
	0x02EA9F20 LDR X1, [X8 + 0xA0]
	0x02EA9F24 LDR X0, [X1]
	0x02EA9F28 STUR X4, [X29 - 0x20]
	0x02EA9F2C LDR X8, [X1 + 0x10]
	0x02EA9F30 BLR X8
	0x02EA9F34 LDR X8, [X19]
	0x02EA9F38 MOV X0, X25
	0x02EA9F3C MOV W1, W26
	0x02EA9F40 MOV X2, X31
	0x02EA9F44 LDR X8, [X8 + 0xC0]
	0x02EA9F48 LDR X3, [X8 + 0x78]
	0x02EA9F4C LDR X8, [X3]
	0x02EA9F50 BLR X8
	0x02EA9F54 ADDS W28, W28, 0x2
	0x02EA9F58 B.MI 0x2EA9ECC
	0x02EA9F5C LDR X8, [X19]
	0x02EA9F60 MOV X0, X24
	0x02EA9F64 LDR X8, [X8 + 0xC0]
	0x02EA9F68 LDR X1, [X8 + 0xB0]
	0x02EA9F6C LDR X8, [X1]
	0x02EA9F70 BLR X8
	0x02EA9F74 CMP W0, 0x0
	0x02EA9F78 B.GT 0x2EA9E70
	0x02EA9F7C CBZ X23, 0x2EAA0D0
	0x02EA9F80 LDR X8, [X19]
	0x02EA9F84 MOV X0, X23
	0x02EA9F88 LDR X8, [X8 + 0xC0]
	0x02EA9F8C LDR X1, [X8 + 0xB0]
	0x02EA9F90 LDR X8, [X1]
	0x02EA9F94 BLR X8
	0x02EA9F98 CMP W0, 0x1
	0x02EA9F9C B.LT 0x2EAA0A0
	0x02EA9FA0 LDR X8, [X19]
	0x02EA9FA4 SUB X4, X29, 0x20
	0x02EA9FA8 MOV X2, X23
	0x02EA9FAC MOV X3, X31
	0x02EA9FB0 LDR X8, [X8 + 0xC0]
	0x02EA9FB4 LDR X1, [X8 + 0xA8]
	0x02EA9FB8 LDR X0, [X1]
	0x02EA9FBC LDR X8, [X1 + 0x10]
	0x02EA9FC0 BLR X8
	0x02EA9FC4 LDR X8, [X19]
	0x02EA9FC8 LDUR X24, [X29 - 0x20]
	0x02EA9FCC MOV X0, X21
	0x02EA9FD0 LDR X8, [X8 + 0xC0]
	0x02EA9FD4 LDR X1, [X8 + 0x80]
	0x02EA9FD8 LDR X8, [X1]
	0x02EA9FDC BLR X8
	0x02EA9FE0 LDR X8, [X19]
	0x02EA9FE4 SUB W1, W0, 0x1
	0x02EA9FE8 MOV X0, X21
	0x02EA9FEC LDR X8, [X8 + 0xC0]
	0x02EA9FF0 LDR X2, [X8 + 0x10]
	0x02EA9FF4 LDR X8, [X2]
	0x02EA9FF8 BLR X8
	0x02EA9FFC LDR X8, [X19]
	0x02EAA000 MOV X0, X24
	0x02EAA004 LDR X8, [X8 + 0xC0]
	0x02EAA008 LDR X8, [X8 + 0x38]
	0x02EAA00C LDR X1, [X8 + 0x80]
	0x02EAA010 BL 0x1C16D18
	0x02EAA014 LDR X8, [X19]
	0x02EAA018 LDR X25, [X0]
	0x02EAA01C MOV X0, X24
	0x02EAA020 LDR X8, [X8 + 0xC0]
	0x02EAA024 LDR X8, [X8 + 0x38]
	0x02EAA028 LDR X8, [X8 + 0x80]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], D9
	003 Move [X31+24], D8
	004 Move [X31+32], X30
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X25, 0x1533000
	015 Move W8, [X25+2652]
	016 Move X20, X5
	017 Move W23, W4
	018 Move W22, W3
	019 Move W24, W2
	020 Move X19, X1
	021 Move X21, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {31}
	026 Move X0, 0x124B000
	027 Move X0, [X0+1448]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X25+2652], W8
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Compare X19, 0
	033 JumpIfEqual {170}
	034 Move W8, [X19+24]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Add X23, X19, W22
	037 Add X23, X23, 32
	038 Move X8, [X23]
	039 Compare X8, 0
	040 JumpIfEqual {170}
	041 Move X9, [X20+32]
	042 Move X1, [X8+16]
	043 Move W2, [X8+24]
	044 Move X0, X21
	045 Move X9, [X9+192]
	046 Move X3, [X9+184]
	047 Call 0x2EA82DC, X0, X1, X2
	048 Move W8, [X19+24]
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move [X23], X31
	051 Move X8, [X20+32]
	052 Move X25, 0x124B000
	053 Move X0, X21
	054 Move X1, X19
	055 Move X8, [X8+192]
	056 Move W2, W24
	057 Move W3, W22
	058 Move W4, W23
	059 Move X5, [X8+432]
	060 Move X25, [X25+1448]
	061 Call 0x2EA9BD0, X0, X1, X2, X3, X4
	062 Move X0, [X25]
	063 Move W8, [X0+224]
	064 Compare W8, 0
	065 JumpIfNotEqual {67}
	066 Call 0x1C17DFC
	067 Subtract W8, W23, W22
	068 Add W8, W8, 1
	069 NotImplemented "Instruction SCVTF not yet implemented."
	070 Move S1, 0.5
	071 Multiply S9, S0, S1
	072 NotImplemented "Instruction FCVT not yet implemented."
	073 Add X0, X31, 8
	074 Move V0, V8
	075 Call 0x3EB2C00
	076 NotImplemented "Instruction FCMP not yet implemented."
	077 Move D1, -0.5
	078 NotImplemented "Instruction FCMP not yet implemented."
	079 Move V0, [X31+8]
	080 Move D1, -1
	081 Move D1, 0.5
	082 NotImplemented "Instruction FCMP not yet implemented."
	083 Move V0, [X31+8]
	084 Move D1, 1
	085 NotImplemented "Instruction FCVTZS not yet implemented."
	086 Add D1, D0, D1
	087 And X31, X8, 1
	088 NotImplemented "Instruction FCSEL not yet implemented."
	089 Add D0, D8, D1
	090 NotImplemented "Instruction FRINTP not yet implemented."
	091 Add D0, D8, D1
	092 NotImplemented "Instruction FRINTM not yet implemented."
	093 Move X8, 0x7FF00000
	094 Move D1, X8
	095 NotImplemented "Instruction FCVTZS not yet implemented."
	096 NotImplemented "Instruction FCMP not yet implemented."
	097 Move W8, 0x80000000
	098 NotImplemented "Instruction CSEL not yet implemented."
	099 Compare X19, 0
	100 JumpIfEqual {170}
	101 Move W9, [X19+24]
	102 Add W25, W8, W22
	103 Subtract W26, W25, 1
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Add X27, X19, W26
	106 Add X27, X27, 32
	107 Move X8, [X27]
	108 Compare X8, 0
	109 JumpIfEqual {170}
	110 Move X9, [X20+32]
	111 Move X1, [X8+16]
	112 Move W2, [X8+24]
	113 Move X0, X21
	114 Move X9, [X9+192]
	115 Move X3, [X9+184]
	116 Call 0x2EA82DC, X0, X1, X2
	117 Move W8, [X19+24]
	118 NotImplemented "Instruction CMP not yet implemented."
	119 Move [X27], X31
	120 Move W8, [X21+16]
	121 Add W9, W24, 1
	122 NotImplemented "Instruction CMP not yet implemented."
	123 NotImplemented "Instruction SDIV not yet implemented."
	124 NotImplemented "Instruction MSUB not yet implemented."
	125 Move X8, [X20+32]
	126 Subtract W4, W25, 2
	127 Move X0, X21
	128 Move X1, X19
	129 Move X8, [X8+192]
	130 Move W2, W24
	131 Move W3, W22
	132 Move X5, [X8+440]
	133 Call 0x2EA9DB4, X0, X1, X2, X3, X4
	134 NotImplemented "Instruction CMP not yet implemented."
	135 Move X8, [X20+32]
	136 Move X0, X21
	137 Move X1, X19
	138 Move W2, W24
	139 Move X8, [X8+192]
	140 Move W3, W25
	141 Move W4, W23
	142 Move X20, [X31+96]
	143 Move X19, [X31+104]
	144 Move X5, [X8+440]
	145 Move X22, [X31+80]
	146 Move X21, [X31+88]
	147 Move X24, [X31+64]
	148 Move X23, [X31+72]
	149 Move X26, [X31+48]
	150 Move X25, [X31+56]
	151 Move X30, [X31+32]
	152 Move X27, [X31+40]
	153 Move D9, [X31+16]
	154 Move D8, [X31+24]
	155 Add X31, X31, 112
	156 Move X20, [X31+96]
	157 Move X19, [X31+104]
	158 Move X22, [X31+80]
	159 Move X21, [X31+88]
	160 Move X24, [X31+64]
	161 Move X23, [X31+72]
	162 Move X26, [X31+48]
	163 Move X25, [X31+56]
	164 Move X30, [X31+32]
	165 Move X27, [X31+40]
	166 Move D9, [X31+16]
	167 Move D8, [X31+24]
	168 Add X31, X31, 112
	169 Return 
	170 Call 0x1C17F20
	171 Call 0x1C17F28

Method: System.Void Balance()

Disassembly:
	0x02EAA02C ADD X1, X8, 0x20
	0x02EAA030 BL 0x1C16D18
	0x02EAA034 MOV X1, X0
	0x02EAA038 MOV X0, X22
	0x02EAA03C MOV X2, X20
	0x02EAA040 BL 0x3EB1AC0
	0x02EAA044 LDR X8, [X19]
	0x02EAA048 LDR X9, [X8 + 0xC0]
	0x02EAA04C LDR X8, [X9 + 0x30]
	0x02EAA050 LDR W10, [X8 + 0x28]
	0x02EAA054 MOV X8, X22
	0x02EAA058 TBNZ X10, 0x1F, 0x2EAA060
	0x02EAA05C LDR X8, [X22]
	0x02EAA060 LDR X1, [X9 + 0xB8]
	0x02EAA064 SUB X3, X29, 0x20
	0x02EAA068 SUB X4, X29, 0xC
	0x02EAA06C MOV X2, X21
	0x02EAA070 LDR X0, [X1]
	0x02EAA074 STP X25, X8, [X29 - 0x20]
	0x02EAA078 LDR X8, [X1 + 0x10]
	0x02EAA07C BLR X8
	0x02EAA080 LDR X8, [X19]
	0x02EAA084 MOV X0, X23
	0x02EAA088 LDR X8, [X8 + 0xC0]
	0x02EAA08C LDR X1, [X8 + 0xB0]
	0x02EAA090 LDR X8, [X1]
	0x02EAA094 BLR X8
	0x02EAA098 CMP W0, 0x0
	0x02EAA09C B.GT 0x2EA9FA0
	0x02EAA0A0 LDR X8, [X27 + 0x28]
	0x02EAA0A4 LDUR X9, [X29 - 0x8]
	0x02EAA0A8 CMP X8, X9
	0x02EAA0AC B.NE 0x2EAA0D4
	0x02EAA0B0 ADD X31, X29, 0x0
	0x02EAA0B4 LDP X20, X19, [X31 + 0x50]
	0x02EAA0B8 LDP X22, X21, [X31 + 0x40]
	0x02EAA0BC LDP X24, X23, [X31 + 0x30]
	0x02EAA0C0 LDP X26, X25, [X31 + 0x20]
	0x02EAA0C4 LDP X28, X27, [X31 + 0x10]
	0x02EAA0C8 LDP X29, X30, [X31], #0x60
	0x02EAA0CC RET
	0x02EAA0D0 BL 0x1C16F20
	0x02EAA0D4 BL 0x3EB1B20
	0x02EAA0D8 STP X29, X30, [X31 - 0x60]!
	0x02EAA0DC STP X28, X27, [X31 + 0x10]
	0x02EAA0E0 STP X26, X25, [X31 + 0x20]
	0x02EAA0E4 STP X24, X23, [X31 + 0x30]
	0x02EAA0E8 STP X22, X21, [X31 + 0x40]
	0x02EAA0EC STP X20, X19, [X31 + 0x50]
	0x02EAA0F0 ADD X29, X31, 0x0
	0x02EAA0F4 SUB X31, X31, 0x30
	0x02EAA0F8 MRS X8, 0xC000
	0x02EAA0FC STUR X8, [X29 - 0x30]
	0x02EAA100 LDR X8, [X8 + 0x28]
	0x02EAA104 MOV X20, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X1+32]
	006 Move X19, X1
	007 Move X20, X0
	008 Move X8, [X8+192]
	009 Move X8, [X8+408]
	010 Move W9, [X8+309]
	011 Move TEMP, X9
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {18}
	015 Move X0, X8
	016 Call 0x1C5D684
	017 Move X8, X0
	018 Move X0, X8
	019 Call 0x1C17F10
	020 Move X8, [X19+32]
	021 Move X21, X0
	022 Move X8, [X8+192]
	023 Move X1, [X8+448]
	024 Call List`1<Object>..ctor, X0
	025 Move X8, [X19+32]
	026 Move X1, [X20+32]
	027 Move X0, X20
	028 Move X2, X21
	029 Move X8, [X8+192]
	030 Move X3, [X8+424]
	031 Call 0x2EA9AE0, X0, X1, X2
	032 Move X1, [X20+32]
	033 Compare X1, 0
	034 JumpIfEqual {43}
	035 Move X8, [X19+32]
	036 Move X0, X20
	037 Move X8, [X8+192]
	038 Move X8, [X8+456]
	039 Move X8, [X8+32]
	040 Move X8, [X8+192]
	041 Move X2, [X8+480]
	042 Call 0x2EAA108, X0, X1
	043 Compare X21, 0
	044 JumpIfEqual {65}
	045 Move X8, [X19+32]
	046 Move X0, X21
	047 Move X8, [X8+192]
	048 Move X1, [X8+464]
	049 Call List`1<Object>.ToArray, X0
	050 Move X8, [X19+32]
	051 Move W9, [X21+24]
	052 Move X1, X0
	053 Move X0, X20
	054 Move X8, [X8+192]
	055 Move X20, [X31+16]
	056 Move X19, [X31+24]
	057 Subtract W4, W9, 1
	058 Move W2, W31
	059 Move X5, [X8+440]
	060 Move W3, W31
	061 Move X30, [X31+32]
	062 Move X21, [X31+40]
	063 Call 0x2EA9DB4, X0, X1, X2, X3, X4
	064 Return 
	065 Call 0x1C17F20

Method: System.Void RemoveChildNodes(UnityEngine.ProBuilder.KdTree.KdTreeNode`2<TKey, TValue> node)

Disassembly:
	0x02EAA108 STUR X8, [X29 - 0x8]
	0x02EAA10C LDR X8, [X2 + 0x20]
	0x02EAA110 LDR X8, [X8 + 0xC0]
	0x02EAA114 LDR X9, [X8 + 0x60]
	0x02EAA118 LDR W10, [X9 + 0xFC]
	0x02EAA11C ADD X9, X31, 0x0
	0x02EAA120 STUR X10, [X29 - 0x28]
	0x02EAA124 ADD X10, X10, 0xF
	0x02EAA128 AND X10, X10, 0x1FFFFFFFF
	0x02EAA12C SUB X23, X9, X10
	0x02EAA130 ADD X31, X23, 0x0
	0x02EAA134 ADD X9, X31, 0x0
	0x02EAA138 SUB X24, X9, X10
	0x02EAA13C ADD X31, X24, 0x0
	0x02EAA140 LDR X0, [X0 + 0x20]
	0x02EAA144 CBZ X0, 0x2EAA510
	0x02EAA148 LDR X8, [X8 + 0x38]
	0x02EAA14C MOV X21, X1
	0x02EAA150 LDR X25, [X20 + 0x18]
	0x02EAA154 MOV X19, X2
	0x02EAA158 LDR X1, [X8 + 0x80]
	0x02EAA15C BL 0x1C16D18
	0x02EAA160 CBZ X25, 0x2EAA544
	0x02EAA164 LDR X8, [X19 + 0x20]
	0x02EAA168 LDR X26, [X0]
	0x02EAA16C LDR X8, [X8 + 0xC0]
	0x02EAA170 LDR X1, [X8 + 0x8]
	0x02EAA174 LDRB W8, [X1 + 0x135]
	0x02EAA178 TBNZ X8, 0x0, 0x2EAA188
	0x02EAA17C MOV X0, X1
	0x02EAA180 BL 0x1C5C684

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Compare X1, 0
	008 JumpIfEqual {38}
	009 Move X19, X2
	010 Move X20, X0
	011 Add X22, X1, 40
	012 Add X21, X1, 48
	013 Move TEMP, 2
	014 Not TEMP
	015 Move W23, TEMP
	016 Add W23, W23, 2
	017 NotImplemented "Instruction CMP not yet implemented."
	018 NotImplemented "Instruction CSEL not yet implemented."
	019 Move X1, [X8]
	020 Compare X1, 0
	021 JumpIfEqual {29}
	022 Move X8, [X19+32]
	023 Move X0, X20
	024 Move X8, [X8+192]
	025 Move X2, [X8+480]
	026 Call 0x2EAA108, X0, X1
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move [X22], X31
	029 Add W31, W23, 3
	030 Move [X21], X31
	031 Move X20, [X31+32]
	032 Move X19, [X31+40]
	033 Move X22, [X31+16]
	034 Move X21, [X31+24]
	035 Move X30, [X31+48]
	036 Move X23, [X31+56]
	037 Return 
	038 Call 0x1C17F20

Method: System.Void Clear()

Disassembly:
	0x02EAA184 MOV X1, X0
	0x02EAA188 LDR X8, [X25]
	0x02EAA18C LDRH W9, [X8 + 0x12E]
	0x02EAA190 CBZ X9, 0x2EAA1B4
	0x02EAA194 LDR X10, [X8 + 0xB0]
	0x02EAA198 ADD X10, X10, 0x8
	0x02EAA19C LDUR X11, [X10 - 0x8]
	0x02EAA1A0 CMP X11, X1

ISIL:
	001 Move X8, [X0+32]
	002 Compare X8, 0
	003 JumpIfEqual {10}
	004 Move X9, [X1+32]
	005 Move X1, X8
	006 Move X9, [X9+192]
	007 Move X2, [X9+480]
	008 Call 0x2EAA108, X0, X1
	009 Return 
	010 Return 

Method: System.Void SaveToFile(System.String filename)

Disassembly:
	0x02EAA1A4 B.EQ 0x2EAA1C4
	0x02EAA1A8 SUBS X9, X9, 0x1
	0x02EAA1AC ADD X10, X10, 0x10
	0x02EAA1B0 B.NE 0x2EAA19C
	0x02EAA1B4 MOVZ W2, 0x6
	0x02EAA1B8 MOV X0, X25
	0x02EAA1BC BL 0x1C5C788
	0x02EAA1C0 B 0x2EAA1D4
	0x02EAA1C4 LDR W9, [X10]
	0x02EAA1C8 ADD W9, W9, 0x6
	0x02EAA1CC ADD X8, X8, W9, 0x4, SXTW
	0x02EAA1D0 ADD X0, X8, 0x138
	0x02EAA1D4 LDP X8, X3, [X0]
	0x02EAA1D8 MOV X0, X25
	0x02EAA1DC MOV X1, X21
	0x02EAA1E0 MOV X2, X26
	0x02EAA1E4 BLR X8
	0x02EAA1E8 LDR X25, [X20 + 0x20]
	0x02EAA1EC TBZ X0, 0x0, 0x2EAA248
	0x02EAA1F0 STR X31, [X20 + 0x20]
	0x02EAA1F4 LDR X8, [X19 + 0x20]
	0x02EAA1F8 MOV X0, X20
	0x02EAA1FC LDR X8, [X8 + 0xC0]
	0x02EAA200 LDR X1, [X8 + 0x80]
	0x02EAA204 LDR X8, [X1]
	0x02EAA208 BLR X8
	0x02EAA20C LDR X8, [X19 + 0x20]
	0x02EAA210 SUB W1, W0, 0x1
	0x02EAA214 MOV X0, X20
	0x02EAA218 LDR X8, [X8 + 0xC0]
	0x02EAA21C LDR X2, [X8 + 0x10]
	0x02EAA220 LDR X8, [X2]
	0x02EAA224 BLR X8
	0x02EAA228 LDR X8, [X19 + 0x20]
	0x02EAA22C MOV X0, X20
	0x02EAA230 MOV X1, X25
	0x02EAA234 LDR X8, [X8 + 0xC0]
	0x02EAA238 LDR X2, [X8 + 0xC0]
	0x02EAA23C LDR X8, [X2]
	0x02EAA240 BLR X8
	0x02EAA244 B 0x2EAA510
	0x02EAA248 CBZ X21, 0x2EAA544
	0x02EAA24C MOVN W22, 0x0
	0x02EAA250 LDR W8, [X20 + 0x10]
	0x02EAA254 LDR W9, [X21 + 0x18]
	0x02EAA258 ADD W10, W22, 0x1
	0x02EAA25C SDIV W11, W10, W8
	0x02EAA260 MSUB W22, W11, W8, W10
	0x02EAA264 CMP W22, W9
	0x02EAA268 B.CS 0x2EAA548
	0x02EAA26C LDR X8, [X21]
	0x02EAA270 LDUR X2, [X29 - 0x28]
	0x02EAA274 LDR X26, [X20 + 0x18]
	0x02EAA278 SXTW X27, W22
	0x02EAA27C LDR W8, [X8 + 0x104]
	0x02EAA280 MOV X0, X23
	0x02EAA284 MADD X8, X8, X27, X21
	0x02EAA288 ADD X1, X8, 0x20
	0x02EAA28C BL 0x3EB1AC0
	0x02EAA290 LDR X8, [X19 + 0x20]
	0x02EAA294 MOV X0, X25
	0x02EAA298 LDR X8, [X8 + 0xC0]
	0x02EAA29C LDR X8, [X8 + 0x38]
	0x02EAA2A0 LDR X1, [X8 + 0x80]
	0x02EAA2A4 BL 0x1C16D18
	0x02EAA2A8 LDR X8, [X0]
	0x02EAA2AC CBZ X8, 0x2EAA544
	0x02EAA2B0 LDR W9, [X8 + 0x18]
	0x02EAA2B4 CMP W27, W9
	0x02EAA2B8 B.CS 0x2EAA548
	0x02EAA2BC LDR X9, [X8]
	0x02EAA2C0 LDUR X2, [X29 - 0x28]
	0x02EAA2C4 MOV X0, X24
	0x02EAA2C8 LDR W9, [X9 + 0x104]
	0x02EAA2CC NOP
	0x02EAA2D0 MADD X8, X9, X27, X8
	0x02EAA2D4 ADD X1, X8, 0x20
	0x02EAA2D8 BL 0x3EB1AC0
	0x02EAA2DC CBZ X26, 0x2EAA544
	0x02EAA2E0 LDR X8, [X19 + 0x20]
	0x02EAA2E4 LDR X8, [X8 + 0xC0]
	0x02EAA2E8 LDR X1, [X8 + 0x8]
	0x02EAA2EC LDRB W9, [X1 + 0x135]
	0x02EAA2F0 TBNZ X9, 0x0, 0x2EAA308
	0x02EAA2F4 MOV X0, X1
	0x02EAA2F8 BL 0x1C5C684
	0x02EAA2FC LDR X8, [X19 + 0x20]
	0x02EAA300 MOV X1, X0
	0x02EAA304 LDR X8, [X8 + 0xC0]
	0x02EAA308 LDR X8, [X8 + 0x60]
	0x02EAA30C MOV X27, X23
	0x02EAA310 MOV X28, X24
	0x02EAA314 LDR W8, [X8 + 0x28]
	0x02EAA318 TBNZ X8, 0x1F, 0x2EAA324
	0x02EAA31C LDR X27, [X23]
	0x02EAA320 LDR X28, [X24]
	0x02EAA324 LDR X8, [X26]
	0x02EAA328 LDRH W9, [X8 + 0x12E]
	0x02EAA32C CBZ X9, 0x2EAA350
	0x02EAA330 LDR X10, [X8 + 0xB0]
	0x02EAA334 ADD X10, X10, 0x8
	0x02EAA338 LDUR X11, [X10 - 0x8]
	0x02EAA33C CMP X11, X1
	0x02EAA340 B.EQ 0x2EAA360
	0x02EAA344 SUBS X9, X9, 0x1
	0x02EAA348 ADD X10, X10, 0x10
	0x02EAA34C B.NE 0x2EAA338
	0x02EAA350 MOV X0, X26
	0x02EAA354 MOV W2, W31
	0x02EAA358 BL 0x1C5C788
	0x02EAA35C B 0x2EAA36C
	0x02EAA360 LDRSW X9, [X10]
	0x02EAA364 ADD X8, X8, X9, 0x4, LSL
	0x02EAA368 ADD X0, X8, 0x138
	0x02EAA36C STP X27, X28, [X29 - 0x20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1532000
	007 Move X21, 0x1276000
	008 Move W8, [X22+2653]
	009 Move X21, [X21+208]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x1276000
	017 Move X0, [X0+208]
	018 Call 0x1C17CF4
	019 Move X0, 0x124A000
	020 Move X0, [X0+3584]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+2653], W8
	024 Move X0, [X21]
	025 Move X22, 0x124A000
	026 Move X22, [X22+3584]
	027 Call 0x1C17F10
	028 Move X1, X31
	029 Move X21, X0
	030 Call BinaryFormatter..ctor, X0
	031 Move X0, X19
	032 Move X1, X31
	033 Call File.Create, X0
	034 Move X19, X0
	035 Compare X21, 0
	036 JumpIfEqual {79}
	037 Move X0, X21
	038 Move X1, X19
	039 Move X2, X20
	040 Move X3, X31
	041 Call BinaryFormatter.Serialize, X0, X1, X2
	042 Compare X19, 0
	043 JumpIfEqual {82}
	044 Move X8, [X19]
	045 Move X1, [X8+672]
	046 Move X9, [X8+664]
	047 Move X0, X19
	048 NotImplemented "Instruction BLR not yet implemented."
	049 Move X20, X31
	050 Move X8, [X19]
	051 Move X1, [X22]
	052 NotImplemented "Instruction LDRH not yet implemented."
	053 Compare X9, 0
	054 JumpIfEqual {61}
	055 Move X10, [X8+176]
	056 Add X10, X10, 8
	057 NotImplemented "Instruction LDUR not yet implemented."
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Subtract X9, X9, 1
	060 Add X10, X10, 16
	061 Move X0, X19
	062 Move W2, W31
	063 Call 0x1C5D788
	064 NotImplemented "Instruction LDRSW not yet implemented."
	065 Add X8, X8, X9
	066 Add X0, X8, 312
	067 Move X8, [X0]
	068 Move X1, [X0+8]
	069 Move X0, X19
	070 NotImplemented "Instruction BLR not yet implemented."
	071 Compare X20, 0
	072 JumpIfNotEqual {80}
	073 Move X20, [X31+32]
	074 Move X19, [X31+40]
	075 Move X22, [X31+16]
	076 Move X21, [X31+24]
	077 Move X30, [X31+48]
	078 Return 
	079 Call 0x1C17F20
	080 Move X0, X20
	081 Call 0x1C17F18
	082 Call 0x1C17F20
	083 Move X21, X0
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Move X0, X21
	086 Call 0x3EB2AD0
	087 Move X20, [X0]
	088 Call 0x3EB2AE0
	089 Compare X19, 0
	090 JumpIfNotEqual {50}
	091 Move X20, X31
	092 Move X21, X0
	093 Compare X19, 0
	094 JumpIfEqual {116}
	095 Move X8, [X19]
	096 Move X1, [X22]
	097 NotImplemented "Instruction LDRH not yet implemented."
	098 Compare X9, 0
	099 JumpIfEqual {106}
	100 Move X10, [X8+176]
	101 Add X10, X10, 8
	102 NotImplemented "Instruction LDUR not yet implemented."
	103 NotImplemented "Instruction CMP not yet implemented."
	104 Subtract X9, X9, 1
	105 Add X10, X10, 16
	106 Move X0, X19
	107 Move W2, W31
	108 Call 0x1C5D788
	109 NotImplemented "Instruction LDRSW not yet implemented."
	110 Add X8, X8, X9
	111 Add X0, X8, 312
	112 Move X8, [X0]
	113 Move X1, [X0+8]
	114 Move X0, X19
	115 NotImplemented "Instruction BLR not yet implemented."
	116 Compare X20, 0
	117 JumpIfNotEqual {120}
	118 Move X0, X21
	119 Call 0x1D2D690
	120 Move X0, X20
	121 Call 0x1C17F18
	122 Call 0x1991590

Method: UnityEngine.ProBuilder.KdTree.KdTree`2<TKey, TValue> LoadFromFile(System.String filename)

Disassembly:
	0x02EAA370 LDR X1, [X0 + 0x8]
	0x02EAA374 SUB X3, X29, 0x20
	0x02EAA378 SUB X4, X29, 0xC
	0x02EAA37C MOV X2, X26
	0x02EAA380 LDP X0, X8, [X1 + 0x8]
	0x02EAA384 BLR X8
	0x02EAA388 CBZ X25, 0x2EAA544
	0x02EAA38C LDR X8, [X19 + 0x20]
	0x02EAA390 LDUR W26, [X29 - 0xC]
	0x02EAA394 MOV X0, X25
	0x02EAA398 LDR X8, [X8 + 0xC0]
	0x02EAA39C MOV W1, W26
	0x02EAA3A0 LDR X2, [X8 + 0x70]
	0x02EAA3A4 LDR X8, [X2]
	0x02EAA3A8 BLR X8
	0x02EAA3AC CBZ X0, 0x2EAA510
	0x02EAA3B0 LDR X8, [X19 + 0x20]
	0x02EAA3B4 LDR X27, [X20 + 0x18]
	0x02EAA3B8 MOV X0, X25
	0x02EAA3BC MOV W1, W26
	0x02EAA3C0 LDR X8, [X8 + 0xC0]
	0x02EAA3C4 LDR X2, [X8 + 0x70]
	0x02EAA3C8 LDR X8, [X2]
	0x02EAA3CC BLR X8
	0x02EAA3D0 LDR X8, [X19 + 0x20]
	0x02EAA3D4 LDR X8, [X8 + 0xC0]
	0x02EAA3D8 LDR X8, [X8 + 0x38]
	0x02EAA3DC LDR X1, [X8 + 0x80]
	0x02EAA3E0 BL 0x1C16D18
	0x02EAA3E4 CBZ X27, 0x2EAA544
	0x02EAA3E8 LDR X8, [X19 + 0x20]
	0x02EAA3EC LDR X28, [X0]
	0x02EAA3F0 LDR X8, [X8 + 0xC0]
	0x02EAA3F4 LDR X1, [X8 + 0x8]
	0x02EAA3F8 LDRB W8, [X1 + 0x135]
	0x02EAA3FC TBNZ X8, 0x0, 0x2EAA40C
	0x02EAA400 MOV X0, X1
	0x02EAA404 BL 0x1C5C684
	0x02EAA408 MOV X1, X0
	0x02EAA40C LDR X8, [X27]
	0x02EAA410 LDRH W9, [X8 + 0x12E]
	0x02EAA414 CBZ X9, 0x2EAA438
	0x02EAA418 LDR X10, [X8 + 0xB0]
	0x02EAA41C ADD X10, X10, 0x8
	0x02EAA420 LDUR X11, [X10 - 0x8]
	0x02EAA424 CMP X11, X1
	0x02EAA428 B.EQ 0x2EAA448
	0x02EAA42C SUBS X9, X9, 0x1
	0x02EAA430 ADD X10, X10, 0x10
	0x02EAA434 B.NE 0x2EAA420
	0x02EAA438 MOVZ W2, 0x6
	0x02EAA43C MOV X0, X27
	0x02EAA440 BL 0x1C5C788
	0x02EAA444 B 0x2EAA458
	0x02EAA448 LDR W9, [X10]
	0x02EAA44C ADD W9, W9, 0x6
	0x02EAA450 ADD X8, X8, W9, 0x4, SXTW
	0x02EAA454 ADD X0, X8, 0x138
	0x02EAA458 LDP X8, X3, [X0]
	0x02EAA45C MOV X0, X27
	0x02EAA460 MOV X1, X21
	0x02EAA464 MOV X2, X28
	0x02EAA468 BLR X8
	0x02EAA46C LDR X8, [X19 + 0x20]
	0x02EAA470 MOV W28, W0
	0x02EAA474 MOV X0, X25
	0x02EAA478 MOV W1, W26
	0x02EAA47C LDR X8, [X8 + 0xC0]
	0x02EAA480 LDR X2, [X8 + 0x70]
	0x02EAA484 LDR X8, [X2]
	0x02EAA488 BLR X8
	0x02EAA48C MOV X27, X0
	0x02EAA490 TBZ X28, 0x0, 0x2EAA508
	0x02EAA494 LDR X8, [X19 + 0x20]
	0x02EAA498 MOV X0, X25
	0x02EAA49C MOV W1, W26
	0x02EAA4A0 MOV X2, X31
	0x02EAA4A4 LDR X8, [X8 + 0xC0]
	0x02EAA4A8 LDR X3, [X8 + 0x78]
	0x02EAA4AC LDR X8, [X3]
	0x02EAA4B0 BLR X8
	0x02EAA4B4 LDR X8, [X19 + 0x20]
	0x02EAA4B8 MOV X0, X20
	0x02EAA4BC LDR X8, [X8 + 0xC0]
	0x02EAA4C0 LDR X1, [X8 + 0x80]
	0x02EAA4C4 LDR X8, [X1]
	0x02EAA4C8 BLR X8
	0x02EAA4CC LDR X8, [X19 + 0x20]
	0x02EAA4D0 SUB W1, W0, 0x1
	0x02EAA4D4 MOV X0, X20
	0x02EAA4D8 LDR X8, [X8 + 0xC0]
	0x02EAA4DC LDR X2, [X8 + 0x10]
	0x02EAA4E0 LDR X8, [X2]
	0x02EAA4E4 BLR X8
	0x02EAA4E8 LDR X8, [X19 + 0x20]
	0x02EAA4EC MOV X0, X20
	0x02EAA4F0 MOV X1, X27
	0x02EAA4F4 LDR X8, [X8 + 0xC0]
	0x02EAA4F8 LDR X2, [X8 + 0xC0]
	0x02EAA4FC LDR X8, [X2]
	0x02EAA500 BLR X8
	0x02EAA504 B 0x2EAA50C
	0x02EAA508 MOV X25, X27
	0x02EAA50C CBNZ X25, 0x2EAA250
	0x02EAA510 LDUR X8, [X29 - 0x30]
	0x02EAA514 LDR X8, [X8 + 0x28]
	0x02EAA518 LDUR X9, [X29 - 0x8]
	0x02EAA51C CMP X8, X9
	0x02EAA520 B.NE 0x2EAA54C
	0x02EAA524 ADD X31, X29, 0x0
	0x02EAA528 LDP X20, X19, [X31 + 0x50]
	0x02EAA52C LDP X22, X21, [X31 + 0x40]
	0x02EAA530 LDP X24, X23, [X31 + 0x30]
	0x02EAA534 LDP X26, X25, [X31 + 0x20]
	0x02EAA538 LDP X28, X27, [X31 + 0x10]
	0x02EAA53C LDP X29, X30, [X31], #0x60
	0x02EAA540 RET
	0x02EAA544 BL 0x1C16F20
	0x02EAA548 BL 0x1C16F28
	0x02EAA54C BL 0x3EB1B20
	0x02EAA550 STP X29, X30, [X31 - 0x60]!
	0x02EAA554 STP X28, X27, [X31 + 0x10]
	0x02EAA558 STP X26, X25, [X31 + 0x20]
	0x02EAA55C STP X24, X23, [X31 + 0x30]
	0x02EAA560 STP X22, X21, [X31 + 0x40]
	0x02EAA564 STP X20, X19, [X31 + 0x50]
	0x02EAA568 ADD X29, X31, 0x0
	0x02EAA56C SUB X31, X31, 0x50
	0x02EAA570 MRS X27, 0xC000
	0x02EAA574 LDR X8, [X27 + 0x28]
	0x02EAA578 ADD X10, X31, 0x0
	0x02EAA57C MOV X19, X3
	0x02EAA580 MOV W24, W2
	0x02EAA584 STUR X8, [X29 - 0x8]
	0x02EAA588 LDR X8, [X3 + 0x20]
	0x02EAA58C MOV X23, X1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1532000
	007 Move X21, 0x1276000
	008 Move W8, [X22+2654]
	009 Move X21, [X21+208]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x1276000
	017 Move X0, [X0+208]
	018 Call 0x1C17CF4
	019 Move X0, 0x124A000
	020 Move X0, [X0+3584]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+2654], W8
	024 Move X0, [X21]
	025 Move X22, 0x124A000
	026 Move X22, [X22+3584]
	027 Call 0x1C17F10
	028 Move X1, X31
	029 Move X21, X0
	030 Call BinaryFormatter..ctor, X0
	031 Move W1, 3
	032 Move X0, X19
	033 Move X2, X31
	034 Call File.Open, X0, X1
	035 Move X19, X0
	036 Compare X21, 0
	037 JumpIfEqual {105}
	038 Move X0, X21
	039 Move X1, X19
	040 Move X2, X31
	041 Call BinaryFormatter.Deserialize, X0, X1
	042 Move X21, X0
	043 Move X0, [X20+32]
	044 Move W8, [X0+309]
	045 Move TEMP, X8
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfEqual {50}
	049 Call 0x1C5D684
	050 Move X8, [X0+192]
	051 Move X1, [X8]
	052 Move W8, [X1+309]
	053 Move TEMP, X8
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfEqual {60}
	057 Move X0, X1
	058 Call 0x1C5D684
	059 Move X1, X0
	060 Compare X21, 0
	061 JumpIfEqual {70}
	062 Move X8, [X21]
	063 Move W9, [X1+304]
	064 Move W10, [X8+304]
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Move X8, [X8+200]
	067 Add X8, X8, X9
	068 NotImplemented "Instruction LDUR not yet implemented."
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move X20, X31
	071 Compare X19, 0
	072 JumpIfEqual {94}
	073 Move X8, [X19]
	074 Move X1, [X22]
	075 NotImplemented "Instruction LDRH not yet implemented."
	076 Compare X9, 0
	077 JumpIfEqual {84}
	078 Move X10, [X8+176]
	079 Add X10, X10, 8
	080 NotImplemented "Instruction LDUR not yet implemented."
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Subtract X9, X9, 1
	083 Add X10, X10, 16
	084 Move X0, X19
	085 Move W2, W31
	086 Call 0x1C5D788
	087 NotImplemented "Instruction LDRSW not yet implemented."
	088 Add X8, X8, X9
	089 Add X0, X8, 312
	090 Move X8, [X0]
	091 Move X1, [X0+8]
	092 Move X0, X19
	093 NotImplemented "Instruction BLR not yet implemented."
	094 Compare X20, 0
	095 JumpIfNotEqual {106}
	096 Move X0, X21
	097 Move X20, [X31+32]
	098 Move X19, [X31+40]
	099 Move X22, [X31+16]
	100 Move X21, [X31+24]
	101 Move X30, [X31+48]
	102 Return X0
	103 Move X0, X21
	104 Call 0x1C181E0
	105 Call 0x1C17F20
	106 Move X0, X20
	107 Call 0x1C17F18
	108 Move X21, X0
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Move X0, X21
	111 Call 0x3EB2AD0
	112 Move X20, [X0]
	113 Call 0x3EB2AE0
	114 Move X21, X31
	115 Compare X19, 0
	116 JumpIfNotEqual {73}
	117 Move X20, X31
	118 Move X21, X0
	119 Compare X19, 0
	120 JumpIfEqual {142}
	121 Move X8, [X19]
	122 Move X1, [X22]
	123 NotImplemented "Instruction LDRH not yet implemented."
	124 Compare X9, 0
	125 JumpIfEqual {132}
	126 Move X10, [X8+176]
	127 Add X10, X10, 8
	128 NotImplemented "Instruction LDUR not yet implemented."
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Subtract X9, X9, 1
	131 Add X10, X10, 16
	132 Move X0, X19
	133 Move W2, W31
	134 Call 0x1C5D788
	135 NotImplemented "Instruction LDRSW not yet implemented."
	136 Add X8, X8, X9
	137 Add X0, X8, 312
	138 Move X8, [X0]
	139 Move X1, [X0+8]
	140 Move X0, X19
	141 NotImplemented "Instruction BLR not yet implemented."
	142 Compare X20, 0
	143 JumpIfNotEqual {146}
	144 Move X0, X21
	145 Call 0x1D2D690
	146 Move X0, X20
	147 Call 0x1C17F18
	148 Call 0x1991590

Method: System.Collections.Generic.IEnumerator`1<UnityEngine.ProBuilder.KdTree.KdTreeNode`2<TKey, TValue>> GetEnumerator()

Disassembly:
	0x02EAA590 MOV X21, X0
	0x02EAA594 LDR X8, [X8 + 0xC0]
	0x02EAA598 LDR X9, [X8 + 0x60]
	0x02EAA59C LDR W9, [X9 + 0xFC]
	0x02EAA5A0 ADD X9, X9, 0xF
	0x02EAA5A4 AND X9, X9, 0x1FFFFFFFF
	0x02EAA5A8 SUB X22, X10, X9
	0x02EAA5AC ADD X31, X22, 0x0
	0x02EAA5B0 LDR X1, [X8 + 0x80]
	0x02EAA5B4 LDR X8, [X1]
	0x02EAA5B8 BLR X8
	0x02EAA5BC CMP W0, W24
	0x02EAA5C0 B.GE 0x2EAA5E0
	0x02EAA5C4 LDR X8, [X19 + 0x20]
	0x02EAA5C8 MOV X0, X21
	0x02EAA5CC LDR X8, [X8 + 0xC0]
	0x02EAA5D0 LDR X1, [X8 + 0x80]
	0x02EAA5D4 LDR X8, [X1]
	0x02EAA5D8 BLR X8
	0x02EAA5DC MOV W24, W0
	0x02EAA5E0 TBNZ X24, 0x1F, 0x2EAA86C
	0x02EAA5E4 CBZ W24, 0x2EAA6B4
	0x02EAA5E8 LDR X8, [X19 + 0x20]
	0x02EAA5EC LDR X25, [X21 + 0x18]
	0x02EAA5F0 LDR X8, [X8 + 0xC0]
	0x02EAA5F4 LDR X0, [X8 + 0xD0]
	0x02EAA5F8 LDRB W8, [X0 + 0x135]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X1+32]
	005 Move X20, X1
	006 Move X19, X0
	007 Move X8, [X8+192]
	008 Move X8, [X8+488]
	009 Move W9, [X8+309]
	010 Move TEMP, X9
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {17}
	014 Move X0, X8
	015 Call 0x1C5D684
	016 Move X8, X0
	017 Move X0, X8
	018 Call 0x1C17F10
	019 Move X8, [X20+32]
	020 Move W1, W31
	021 Move X20, X0
	022 Move X8, [X8+192]
	023 Move X2, [X8+496]
	024 Call 0x239B41C, X0, X1
	025 Compare X20, 0
	026 JumpIfEqual {33}
	027 Move [X20+32], X19
	028 Move X0, X20
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X30, [X31+32]
	032 Return X0
	033 Call 0x1C17F20

Method: System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()

Disassembly:
	0x02EAA5FC TBNZ X8, 0x0, 0x2EAA604
	0x02EAA600 BL 0x1C5C684
	0x02EAA604 BL 0x1C16F10
	0x02EAA608 LDR X8, [X19 + 0x20]

ISIL:
	001 Move X8, [X1+32]
	002 Move X8, [X8+192]
	003 Move X1, [X8+512]
	004 Call 0x2EAA590, X0
	005 Return X0

