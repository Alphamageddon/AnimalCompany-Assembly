Type: UnityEngine.ProBuilder.KdTree.KdTreeNode`2

Method: System.Void .ctor()

Disassembly:
	0x02EA78E0 CBZ X21, 0x2EA7ACC
	0x02EA78E4 MOVN W26, 0x0

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Void .ctor(TKey[] point, TValue value)

Disassembly:
	0x02EA78E8 LDR W8, [X19 + 0x10]
	0x02EA78EC LDR W9, [X21 + 0x18]
	0x02EA78F0 ADD W10, W26, 0x1
	0x02EA78F4 SDIV W11, W10, W8
	0x02EA78F8 MSUB W26, W11, W8, W10
	0x02EA78FC CMP W26, W9
	0x02EA7900 B.CS 0x2EA7AD0
	0x02EA7904 CBZ X22, 0x2EA7ACC
	0x02EA7908 LDR X8, [X22 + 0x10]
	0x02EA790C CBZ X8, 0x2EA7ACC
	0x02EA7910 LDR W10, [X8 + 0x18]
	0x02EA7914 SXTW X9, W26

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, X1
	006 Move X1, X31
	007 Move W19, W2
	008 Move X21, X0
	009 Call Object..ctor, X0
	010 Move [X21+16], X20
	011 Move [X21+24], W19
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move X30, [X31+32]
	015 Move X21, [X31+40]
	016 Return 

Method: UnityEngine.ProBuilder.KdTree.KdTreeNode`2<TKey, TValue> get_Item(System.Int32 compare)

Disassembly:
	0x02EA7918 CMP W9, W10
	0x02EA791C B.CS 0x2EA7AD0
	0x02EA7920 LDR X23, [X19 + 0x18]
	0x02EA7924 CBZ X23, 0x2EA7ACC
	0x02EA7928 LDR X10, [X20 + 0x20]
	0x02EA792C ADD X8, X8, X9, 0x2, LSL

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 Move W8, 40
	003 Move W9, 48
	004 NotImplemented "Instruction CSEL not yet implemented."
	005 Move X0, [X0]
	006 Return X0

Method: System.Void set_Item(System.Int32 compare, UnityEngine.ProBuilder.KdTree.KdTreeNode`2<TKey, TValue> value)

Disassembly:
	0x02EA7930 LDR V9, [X8 + 0x20]
	0x02EA7934 LDR X10, [X10 + 0xC0]
	0x02EA7938 LDR X1, [X10 + 0x8]
	0x02EA793C ADD X10, X21, X9, 0x2, LSL
	0x02EA7940 LDR V8, [X10 + 0x20]
	0x02EA7944 LDRB W9, [X1 + 0x135]

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 Move W8, 40
	003 Move W9, 48
	004 NotImplemented "Instruction CSEL not yet implemented."
	005 Move [X0], X2
	006 Return 

Method: System.Boolean get_IsLeaf()

Disassembly:
	0x02EA7948 TBNZ X9, 0x0, 0x2EA7958
	0x02EA794C MOV X0, X1
	0x02EA7950 BL 0x1C5C684
	0x02EA7954 MOV X1, X0
	0x02EA7958 LDR X8, [X23]
	0x02EA795C LDRH W9, [X8 + 0x12E]
	0x02EA7960 CBZ X9, 0x2EA7984
	0x02EA7964 LDR X10, [X8 + 0xB0]

ISIL:
	001 Move X8, [X0+40]
	002 Compare X8, 0
	003 JumpIfEqual {6}
	004 Move W0, W31
	005 Return X0
	006 Move X8, [X0+48]
	007 NotImplemented "Instruction CMP not yet implemented."
	008 NotImplemented "Instruction CSET not yet implemented."
	009 Return X0

Method: System.Void AddDuplicate(TValue value)

Disassembly:
	0x02EA7968 ADD X10, X10, 0x8
	0x02EA796C LDUR X11, [X10 - 0x8]
	0x02EA7970 CMP X11, X1
	0x02EA7974 B.EQ 0x2EA7994
	0x02EA7978 SUBS X9, X9, 0x1
	0x02EA797C ADD X10, X10, 0x10
	0x02EA7980 B.NE 0x2EA796C
	0x02EA7984 MOV X0, X23
	0x02EA7988 MOV W2, W31
	0x02EA798C BL 0x1C5C788
	0x02EA7990 B 0x2EA79A0
	0x02EA7994 LDRSW X9, [X10]
	0x02EA7998 ADD X8, X8, X9, 0x4, LSL
	0x02EA799C ADD X0, X8, 0x138
	0x02EA79A0 LDP X8, X1, [X0]
	0x02EA79A4 MOV X0, X23
	0x02EA79A8 MOV V0.16B, V8.16B
	0x02EA79AC MOV V1.16B, V9.16B
	0x02EA79B0 BLR X8
	0x02EA79B4 CMP W0, 0x0
	0x02EA79B8 MOVZ W8, 0x28
	0x02EA79BC MOVZ W9, 0x30
	0x02EA79C0 CSEL X8, X9, X8, GT
	0x02EA79C4 LDR X8, [X22, X8, LSL]
	0x02EA79C8 ADD X29, X22, 0x28
	0x02EA79CC ADD X27, X22, 0x30
	0x02EA79D0 CSEL X28, X27, X29, GT
	0x02EA79D4 CBZ X8, 0x2EA7AAC
	0x02EA79D8 LDR X24, [X19 + 0x18]
	0x02EA79DC CBZ X24, 0x2EA7ACC
	0x02EA79E0 LDR X9, [X20 + 0x20]
	0x02EA79E4 LDR X25, [X8 + 0x10]
	0x02EA79E8 MOV W23, W0
	0x02EA79EC LDR X9, [X9 + 0xC0]
	0x02EA79F0 LDR X1, [X9 + 0x8]
	0x02EA79F4 LDRB W9, [X1 + 0x135]
	0x02EA79F8 TBNZ X9, 0x0, 0x2EA7A08
	0x02EA79FC MOV X0, X1
	0x02EA7A00 BL 0x1C5C684
	0x02EA7A04 MOV X1, X0
	0x02EA7A08 LDR X8, [X24]
	0x02EA7A0C LDRH W9, [X8 + 0x12E]
	0x02EA7A10 CBZ X9, 0x2EA7A34
	0x02EA7A14 LDR X10, [X8 + 0xB0]
	0x02EA7A18 ADD X10, X10, 0x8
	0x02EA7A1C LDUR X11, [X10 - 0x8]
	0x02EA7A20 CMP X11, X1
	0x02EA7A24 B.EQ 0x2EA7A44
	0x02EA7A28 SUBS X9, X9, 0x1
	0x02EA7A2C ADD X10, X10, 0x10
	0x02EA7A30 B.NE 0x2EA7A1C
	0x02EA7A34 MOVZ W2, 0x6
	0x02EA7A38 MOV X0, X24
	0x02EA7A3C BL 0x1C5C788
	0x02EA7A40 B 0x2EA7A54
	0x02EA7A44 LDR W9, [X10]
	0x02EA7A48 ADD W9, W9, 0x6
	0x02EA7A4C ADD X8, X8, W9, 0x4, SXTW
	0x02EA7A50 ADD X0, X8, 0x138
	0x02EA7A54 LDP X8, X3, [X0]
	0x02EA7A58 MOV X0, X24
	0x02EA7A5C MOV X1, X21
	0x02EA7A60 MOV X2, X25
	0x02EA7A64 BLR X8
	0x02EA7A68 LDR X1, [X28]
	0x02EA7A6C TBZ X0, 0x0, 0x2EA7AA4
	0x02EA7A70 LDR X8, [X20 + 0x20]
	0x02EA7A74 CMP W23, 0x0
	0x02EA7A78 CSEL X9, X27, X29, GT
	0x02EA7A7C MOV X0, X19
	0x02EA7A80 LDR X8, [X8 + 0xC0]
	0x02EA7A84 STR X31, [X9]
	0x02EA7A88 LDR W9, [X19 + 0x2C]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X2+32]
	007 Move X20, X0
	008 Move X0, [X0+32]
	009 Move W19, W1
	010 Move X9, [X8+192]
	011 Compare X0, 0
	012 JumpIfEqual {27}
	013 Move W10, [X0+28]
	014 Move X8, [X0+16]
	015 Move X9, [X9+40]
	016 Add W10, W10, 1
	017 Move [X0+28], W10
	018 Compare X8, 0
	019 JumpIfEqual {83}
	020 NotImplemented "Instruction LDRSW not yet implemented."
	021 Move W11, [X8+24]
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Add W9, W10, 1
	024 Add X8, X8, X10
	025 Move [X0+24], W9
	026 Move [X8+32], W19
	027 Move X0, [X9+24]
	028 Move X22, X2
	029 Move W8, [X0+309]
	030 Move TEMP, X8
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfEqual {35}
	034 Call 0x1C5D684
	035 Call 0x1C17F10
	036 Move X8, [X22+32]
	037 Move X21, X0
	038 Move X8, [X8+192]
	039 Move X1, [X8+32]
	040 Call List`1<Int32>..ctor, X0
	041 Compare X21, 0
	042 JumpIfEqual {83}
	043 Move X8, [X22+32]
	044 Move W10, [X21+28]
	045 Move X9, [X8+192]
	046 Move X8, [X21+16]
	047 Add W10, W10, 1
	048 Move X9, [X9+40]
	049 Move [X21+28], W10
	050 Compare X8, 0
	051 JumpIfEqual {83}
	052 NotImplemented "Instruction LDRSW not yet implemented."
	053 Move W11, [X8+24]
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Add W9, W10, 1
	056 Add X8, X8, X10
	057 Move [X21+24], W9
	058 Move [X8+32], W19
	059 Move X8, [X9+32]
	060 Move W1, W19
	061 Move X20, [X31+32]
	062 Move X19, [X31+40]
	063 Move X22, [X31+16]
	064 Move X21, [X31+24]
	065 Move X8, [X8+192]
	066 Move X2, [X8+112]
	067 Move X30, [X31+48]
	068 Call List`1<Int32>.AddWithResize, X0, X1
	069 Return 
	070 Move X8, [X9+32]
	071 Move X0, X21
	072 Move W1, W19
	073 Move X8, [X8+192]
	074 Move X2, [X8+112]
	075 Call List`1<Int32>.AddWithResize, X0, X1
	076 Move [X20+32], X21
	077 Move X20, [X31+32]
	078 Move X19, [X31+40]
	079 Move X22, [X31+16]
	080 Move X21, [X31+24]
	081 Move X30, [X31+48]
	082 Return 
	083 Call 0x1C17F20

Method: System.String ToString()

Disassembly:
	0x02EA7A8C SUB W9, W9, 0x1
	0x02EA7A90 STR W9, [X19 + 0x2C]
	0x02EA7A94 LDR X2, [X8 + 0xC0]
	0x02EA7A98 BL 0x2EA75EC
	0x02EA7A9C CBNZ X22, 0x2EA78E8
	0x02EA7AA0 B 0x2EA7AAC
	0x02EA7AA4 MOV X22, X1
	0x02EA7AA8 CBNZ X22, 0x2EA78E8
	0x02EA7AAC LDP X20, X19, [X31 + 0x60]
	0x02EA7AB0 LDP X22, X21, [X31 + 0x50]
	0x02EA7AB4 LDP X24, X23, [X31 + 0x40]
	0x02EA7AB8 LDP X26, X25, [X31 + 0x30]
	0x02EA7ABC LDP X28, X27, [X31 + 0x20]
	0x02EA7AC0 LDP X29, X30, [X31 + 0x10]
	0x02EA7AC4 LDP D9, D8, [X31], #0x70
	0x02EA7AC8 RET
	0x02EA7ACC BL 0x1C16F20
	0x02EA7AD0 BL 0x1C16F28
	0x02EA7AD4 STR X30, [X31 - 0x50]!
	0x02EA7AD8 STP X26, X25, [X31 + 0x10]
	0x02EA7ADC STP X24, X23, [X31 + 0x20]
	0x02EA7AE0 STP X22, X21, [X31 + 0x30]
	0x02EA7AE4 STP X20, X19, [X31 + 0x40]
	0x02EA7AE8 LDR W8, [X0 + 0x2C]
	0x02EA7AEC MOV X19, X3
	0x02EA7AF0 CMP W8, W2
	0x02EA7AF4 CSEL W23, W8, W2, LT
	0x02EA7AF8 TBNZ X23, 0x1F, 0x2EA7D1C
	0x02EA7AFC LDR X8, [X19 + 0x20]
	0x02EA7B00 LDR X8, [X8 + 0xC0]
	0x02EA7B04 CBZ W23, 0x2EA7BCC
	0x02EA7B08 MOV X21, X0
	0x02EA7B0C LDR X0, [X8 + 0xD0]
	0x02EA7B10 LDR X24, [X21 + 0x18]
	0x02EA7B14 MOV X22, X1
	0x02EA7B18 LDRB W8, [X0 + 0x135]
	0x02EA7B1C TBNZ X8, 0x0, 0x2EA7B24
	0x02EA7B20 BL 0x1C5C684
	0x02EA7B24 BL 0x1C16F10
	0x02EA7B28 LDR X8, [X19 + 0x20]
	0x02EA7B2C MOV W1, W23
	0x02EA7B30 MOV X2, X24
	0x02EA7B34 MOV X20, X0
	0x02EA7B38 LDR X8, [X8 + 0xC0]
	0x02EA7B3C LDR X3, [X8 + 0xD8]
	0x02EA7B40 BL 0x2409BF8
	0x02EA7B44 LDR X8, [X19 + 0x20]
	0x02EA7B48 LDR W0, [X21 + 0x10]
	0x02EA7B4C LDR X1, [X21 + 0x18]
	0x02EA7B50 LDR X8, [X8 + 0xC0]
	0x02EA7B54 LDR X2, [X8 + 0xE0]
	0x02EA7B58 BL 0x2DE0A78
	0x02EA7B5C LDR X26, [X21 + 0x18]
	0x02EA7B60 CBZ X26, 0x2EA7D08
	0x02EA7B64 LDR X8, [X19 + 0x20]
	0x02EA7B68 MOV X24, X1
	0x02EA7B6C LDR X25, [X21 + 0x20]
	0x02EA7B70 MOV X23, X0
	0x02EA7B74 LDR X8, [X8 + 0xC0]
	0x02EA7B78 LDR X1, [X8 + 0x8]
	0x02EA7B7C LDRB W8, [X1 + 0x135]
	0x02EA7B80 TBNZ X8, 0x0, 0x2EA7B90

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X19, 0x1535000
	008 Move X22, 0x124D000
	009 Move W8, [X19+2648]
	010 Move X22, [X22+2288]
	011 Move X21, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x124D000
	018 Move X0, [X0+2288]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X19+2648], W8
	022 Move X0, [X22]
	023 Call 0x1C17F10
	024 Move X1, X31
	025 Move X19, X0
	026 Call StringBuilder..ctor, X0
	027 Move X8, [X20+16]
	028 Compare X8, 0
	029 JumpIfEqual {51}
	030 Move X22, X31
	031 Move W23, 32
	032 Move W9, [X8+24]
	033 NotImplemented "Instruction CMP not yet implemented."
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move X9, [X21+32]
	036 Add X0, X8, X23
	037 Move X9, [X9+192]
	038 Move X1, [X9+56]
	039 Call Single.ToString, X0
	040 Compare X19, 0
	041 JumpIfEqual {51}
	042 Move X1, X0
	043 Move X0, X19
	044 Move X2, X31
	045 Add X22, X22, 1
	046 Add X23, X23, 4
	047 Call StringBuilder.Append, X0, X1
	048 Move X8, [X20+16]
	049 Compare X8, 0
	050 JumpIfNotEqual {32}
	051 Call 0x1C17F20
	052 Move X8, [X21+32]
	053 Add X0, X20, 24
	054 Move X8, [X8+192]
	055 Move X1, [X8+64]
	056 Call Int32.ToString, X0
	057 Compare X19, 0
	058 JumpIfEqual {51}
	059 Move X1, X0
	060 Move X0, X19
	061 Move X2, X31
	062 Call StringBuilder.Append, X0, X1
	063 Move X8, [X19]
	064 Move X0, X19
	065 Move X20, [X31+32]
	066 Move X19, [X31+40]
	067 Move X22, [X31+16]
	068 Move X21, [X31+24]
	069 Move X2, [X8+360]
	070 Move X1, [X8+368]
	071 Move X30, [X31+48]
	072 Move X23, [X31+56]
	073 CallNoReturn X2
	074 Call 0x1C17F28

