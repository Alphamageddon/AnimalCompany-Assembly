Type: UnityEngine.GUISkin

Method: System.Void .ctor()

Disassembly:
	0x03C724A4 CBNZ X8, 0x3C724BC
	0x03C724A8 ADRP X0, 0xFFFFFFFFFCE93000
	0x03C724AC ADD X0, X0, 0x5DA
	0x03C724B0 BL 0x1C16CB8
	0x03C724B4 MOV X8, X0
	0x03C724B8 STR X0, [X23 + 0x720]
	0x03C724BC MOV X0, X20
	0x03C724C0 MOV X1, X21
	0x03C724C4 BLR X8
	0x03C724C8 LDR X0, [X25]
	0x03C724CC CBZ X0, 0x3C7290C
	0x03C724D0 ADRP X21, 0x4EE000
	0x03C724D4 LDR X21, [X21 + 0x478]
	0x03C724D8 LDR X2, [X19 + 0xB8]
	0x03C724DC LDR X3, [X24]
	0x03C724E0 LDR X1, [X21]
	0x03C724E4 BL 0x2AA5084
	0x03C724E8 LDR X20, [X19 + 0xB8]
	0x03C724EC CBZ X20, 0x3C7290C
	0x03C724F0 LDR X21, [X21]
	0x03C724F4 STR X21, [X20 + 0x78]
	0x03C724F8 LDR X8, [X23 + 0x720]
	0x03C724FC CBNZ X8, 0x3C72514
	0x03C72500 ADRP X0, 0xFFFFFFFFFCE93000
	0x03C72504 ADD X0, X0, 0x5DA
	0x03C72508 BL 0x1C16CB8
	0x03C7250C MOV X8, X0
	0x03C72510 STR X0, [X23 + 0x720]
	0x03C72514 MOV X0, X20
	0x03C72518 MOV X1, X21
	0x03C7251C BLR X8
	0x03C72520 LDR X0, [X25]
	0x03C72524 CBZ X0, 0x3C7290C
	0x03C72528 ADRP X21, 0x4EE000
	0x03C7252C LDR X21, [X21 + 0x480]
	0x03C72530 LDR X2, [X19 + 0xC0]
	0x03C72534 LDR X3, [X24]
	0x03C72538 LDR X1, [X21]
	0x03C7253C BL 0x2AA5084
	0x03C72540 LDR X20, [X19 + 0xC0]
	0x03C72544 CBZ X20, 0x3C7290C
	0x03C72548 LDR X21, [X21]
	0x03C7254C STR X21, [X20 + 0x78]
	0x03C72550 LDR X8, [X23 + 0x720]
	0x03C72554 CBNZ X8, 0x3C7256C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x775000
	007 Move X22, 0x4EF000
	008 Move X21, 0x4EF000
	009 Move W8, [X20+1744]
	010 Move X22, [X22+1000]
	011 Move X21, [X21+1008]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x4EF000
	018 Move X0, [X0+1000]
	019 Call 0x1C17CF4
	020 Move X0, 0x4EF000
	021 Move X0, [X0+1008]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+1744], W8
	025 Move X0, [X22]
	026 Call 0x1C17F10
	027 Move X9, -51929088
	028 Move V1, [X9+40]
	029 Move W8, 257
	030 Move V0, 0
	031 Move W9, 0x3F800000
	032 Move X1, X31
	033 Move X20, X0
	034 NotImplemented "Instruction STRH not yet implemented."
	035 Move [X0+20], V0
	036 Move [X0+36], V1
	037 Move [X0+52], W9
	038 Call Object..ctor, X0
	039 Move X0, X19
	040 Move X1, X31
	041 Move [X19+224], X20
	042 Move [X19+232], X31
	043 Call ScriptableObject..ctor, X0
	044 Move X0, [X21]
	045 Move W1, 1
	046 Call 0x1C17D6C
	047 Move [X19+216], X0
	048 Move X20, [X31+32]
	049 Move X19, [X31+40]
	050 Move X22, [X31+16]
	051 Move X21, [X31+24]
	052 Move X30, [X31+48]
	053 Return 

Method: System.Void OnEnable()

Disassembly:
	0x03C72558 ADRP X0, 0xFFFFFFFFFCE93000

ISIL:
No ISIL was generated
Method: System.Void CleanupRoots()

Disassembly:
	0x03C725D8 ADRP X21, 0x4EE000
	0x03C725DC LDR X21, [X21 + 0x490]
	0x03C725E0 LDR X2, [X19 + 0xD0]
	0x03C725E4 LDR X3, [X24]
	0x03C725E8 LDR X1, [X21]
	0x03C725EC BL 0x2AA5084
	0x03C725F0 LDR X20, [X19 + 0xD0]
	0x03C725F4 CBZ X20, 0x3C7290C
	0x03C725F8 LDR X21, [X21]
	0x03C725FC STR X21, [X20 + 0x78]
	0x03C72600 LDR X8, [X23 + 0x720]
	0x03C72604 CBNZ X8, 0x3C7261C
	0x03C72608 ADRP X0, 0xFFFFFFFFFCE93000
	0x03C7260C ADD X0, X0, 0x5DA
	0x03C72610 BL 0x1C16CB8
	0x03C72614 MOV X8, X0
	0x03C72618 STR X0, [X23 + 0x720]
	0x03C7261C MOV X0, X20
	0x03C72620 MOV X1, X21

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x775000
	005 Move X20, 0x4EF000
	006 Move W8, [X19+1745]
	007 Move X20, [X20+648]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x4EF000
	013 Move X0, [X0+648]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+1745], W8
	017 Move X8, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X8, [X8+184]
	021 Move [X8+16], X31
	022 Move [X8], X31
	023 Move X30, [X31+32]
	024 Return 

Method: UnityEngine.Font get_font()

Disassembly:
	0x03C6BC2C LDR X0, [X19 + 0x620]
	0x03C6BC30 CBNZ X0, 0x3C6BC44

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void set_font(UnityEngine.Font value)

Disassembly:
	0x03C72624 BLR X8
	0x03C72628 LDR X8, [X19 + 0xD8]
	0x03C7262C CBZ X8, 0x3C726CC
	0x03C72630 ADRP X20, 0xFFFFFFFFFCE8D000
	0x03C72634 MOVZ W26, 0x4
	0x03C72638 ADRP X27, 0x774000
	0x03C7263C ADD X20, X20, 0x869
	0x03C72640 LDR W9, [X8 + 0x18]
	0x03C72644 SUB X28, X26, 0x4
	0x03C72648 CMP X28, W9, SXTW
	0x03C7264C B.GE 0x3C726CC
	0x03C72650 CMP X28, X9
	0x03C72654 B.CS 0x3C72910
	0x03C72658 LDR X22, [X8, X26, LSL #3]
	0x03C7265C CBZ X22, 0x3C726C0
	0x03C72660 LDR X1, [X22 + 0x78]
	0x03C72664 LDR X21, [X25]
	0x03C72668 CBNZ X1, 0x3C7269C
	0x03C7266C LDR X8, [X27 + 0x718]
	0x03C72670 CBNZ X8, 0x3C72684
	0x03C72674 MOV X0, X20
	0x03C72678 BL 0x1C16CB8
	0x03C7267C MOV X8, X0
	0x03C72680 STR X0, [X27 + 0x718]
	0x03C72684 MOV X0, X22
	0x03C72688 BLR X8
	0x03C7268C STR X0, [X22 + 0x78]
	0x03C72690 LDR X8, [X19 + 0xD8]
	0x03C72694 CBZ X8, 0x3C7290C
	0x03C72698 MOV X1, X0
	0x03C7269C LDR W9, [X8 + 0x18]
	0x03C726A0 CMP X28, X9
	0x03C726A4 B.CS 0x3C72910
	0x03C726A8 CBZ X21, 0x3C7290C
	0x03C726AC LDR X2, [X8, X26, LSL #3]
	0x03C726B0 LDR X3, [X24]
	0x03C726B4 MOV X0, X21
	0x03C726B8 BL 0x2AA5084
	0x03C726BC LDR X8, [X19 + 0xD8]
	0x03C726C0 ADD X26, X26, 0x1
	0x03C726C4 CBNZ X8, 0x3C72640
	0x03C726C8 B 0x3C7290C
	0x03C726CC LDR X0, [X19 + 0xE8]
	0x03C726D0 CBZ X0, 0x3C7290C
	0x03C726D4 ADRP X27, 0x4EE000
	0x03C726D8 ADRP X26, 0x4EE000
	0x03C726DC LDR X27, [X27 + 0x4C0]
	0x03C726E0 LDR X26, [X26 + 0x408]
	0x03C726E4 ADD X20, X19, 0x68
	0x03C726E8 MOV X2, X20
	0x03C726EC LDR X1, [X27]
	0x03C726F0 LDR X3, [X26]
	0x03C726F4 BL 0x2AA6B2C
	0x03C726F8 TBNZ X0, 0x0, 0x3C7276C
	0x03C726FC ADRP X8, 0x4A8000
	0x03C72700 LDR X8, [X8 + 0x890]
	0x03C72704 LDR X0, [X8]
	0x03C72708 BL 0x1C16F10

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x775000
	008 Move X22, 0x4EF000
	009 Move X21, 0x482000
	010 Move W8, [X23+1746]
	011 Move X22, [X22+648]
	012 Move X21, [X21+1432]
	013 Move X20, X1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {30}
	019 Move X0, 0x4EF000
	020 Move X0, [X0+648]
	021 Call 0x1C17CF4
	022 Move X0, 0x4A9000
	023 Move X0, [X0+2192]
	024 Call 0x1C17CF4
	025 Move X0, 0x482000
	026 Move X0, [X0+1432]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X23+1746], W8
	030 Move [X19+24], X20
	031 Move X8, [X22]
	032 Move X0, [X21]
	033 Move X8, [X8+184]
	034 Move W9, [X0+224]
	035 Move X20, [X8+16]
	036 Compare W9, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Move X0, X20
	040 Move X1, X19
	041 Move X2, X31
	042 Call Object.op_Equality, X0, X1
	043 Move TEMP, X0
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfNotEqual {66}
	047 Move X8, 0x4A9000
	048 Move X8, [X8+2192]
	049 Move X20, [X19+24]
	050 Move X0, [X8]
	051 Move W8, [X0+224]
	052 Compare W8, 0
	053 JumpIfNotEqual {55}
	054 Call 0x1C17DFC
	055 Move X21, 0x775000
	056 Move X8, [X21+2008]
	057 Compare X8, 0
	058 JumpIfNotEqual {64}
	059 Move X0, -51740672
	060 Add X0, X0, 274
	061 Call 0x1C17CB8
	062 Move X8, X0
	063 Move [X21+2008], X0
	064 Move X0, X20
	065 NotImplemented "Instruction BLR not yet implemented."
	066 Move X0, X19
	067 Move X20, [X31+32]
	068 Move X19, [X31+40]
	069 Move X22, [X31+16]
	070 Move X21, [X31+24]
	071 Move X30, [X31+48]
	072 Move X23, [X31+56]
	073 Call GUISkin.Apply, X0
	074 Return 

Method: UnityEngine.GUIStyle get_box()

Disassembly:
	0x03C69C80 CBZ X8, 0x3C69D70
	0x03C69C84 TBZ X0, 0x0, 0x3C69D00

ISIL:
	001 Move X0, [X0+32]
	002 Return X0

Method: System.Void set_box(UnityEngine.GUIStyle value)

Disassembly:
	0x03C72748 MOV X0, X21
	0x03C7274C MOV X1, X22

ISIL:
	001 Move [X0+32], X1
	002 Call GUISkin.Apply, X0
	003 Return 

Method: UnityEngine.GUIStyle get_label()

Disassembly:
	0x03C68938 MOV X8, X0
	0x03C6893C STR X0, [X21 + 0x588]

ISIL:
	001 Move X0, [X0+56]
	002 Return X0

Method: System.Void set_label(UnityEngine.GUIStyle value)

Disassembly:
	0x03C72750 BLR X8
	0x03C72754 LDR X0, [X25]

ISIL:
	001 Move [X0+56], X1
	002 Call GUISkin.Apply, X0
	003 Return 

Method: UnityEngine.GUIStyle get_textField()

Disassembly:
	0x03C6E718 LDP S9, S8, [X21 + 0x28]
	0x03C6E71C LDR X0, [X8]

ISIL:
	001 Move X0, [X0+64]
	002 Return X0

Method: System.Void set_textField(UnityEngine.GUIStyle value)

Disassembly:
	0x03C72758 CBZ X0, 0x3C7290C
	0x03C7275C LDR X2, [X20]

ISIL:
	001 Move [X0+64], X1
	002 Call GUISkin.Apply, X0
	003 Return 

Method: UnityEngine.GUIStyle get_textArea()

Disassembly:
	0x03C72760 LDR X1, [X27]
	0x03C72764 LDR X3, [X24]

ISIL:
	001 Move X0, [X0+72]
	002 Return X0

Method: System.Void set_textArea(UnityEngine.GUIStyle value)

Disassembly:
	0x03C72768 BL 0x2AA5084
	0x03C7276C LDR X0, [X19 + 0xE8]

ISIL:
	001 Move [X0+72], X1
	002 Call GUISkin.Apply, X0
	003 Return 

Method: UnityEngine.GUIStyle get_button()

Disassembly:
	0x03C6E5C4 LDR X30, [X31], #0x30
	0x03C6E5C8 B 0x3C6E5CC

ISIL:
	001 Move X0, [X0+40]
	002 Return X0

Method: System.Void set_button(UnityEngine.GUIStyle value)

Disassembly:
	0x03C72770 CBZ X0, 0x3C7290C
	0x03C72774 ADRP X27, 0x4EE000

ISIL:
	001 Move [X0+40], X1
	002 Call GUISkin.Apply, X0
	003 Return 

Method: UnityEngine.GUIStyle get_toggle()

Disassembly:
	0x03C6EA5C MOV X1, X19
	0x03C6EA60 LDP X20, X19, [X31 + 0x60]

ISIL:
	001 Move X0, [X0+48]
	002 Return X0

Method: System.Void set_toggle(UnityEngine.GUIStyle value)

Disassembly:
	0x03C72778 LDR X27, [X27 + 0x498]
	0x03C7277C LDR X3, [X26]

ISIL:
	001 Move [X0+48], X1
	002 Call GUISkin.Apply, X0
	003 Return 

Method: UnityEngine.GUIStyle get_window()

Disassembly:
	0x03C70104 LDP X2, X1, [X8 + 0x1E8]
	0x03C70108 LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Move X0, [X0+80]
	002 Return X0

Method: System.Void set_window(UnityEngine.GUIStyle value)

Disassembly:
	0x03C72780 ADD X20, X19, 0x88
	0x03C72784 MOV X2, X20

ISIL:
	001 Move [X0+80], X1
	002 Call GUISkin.Apply, X0
	003 Return 

Method: UnityEngine.GUIStyle get_horizontalSlider()

Disassembly:
	0x03C6EBDC LDR X8, [X0]
	0x03C6EBE0 STR X20, [X0 + 0x40]

ISIL:
	001 Move X0, [X0+88]
	002 Return X0

Method: System.Void set_horizontalSlider(UnityEngine.GUIStyle value)

Disassembly:
	0x03C72788 LDR X1, [X27]
	0x03C7278C BL 0x2AA6B2C

ISIL:
	001 Move [X0+88], X1
	002 Call GUISkin.Apply, X0
	003 Return 

Method: UnityEngine.GUIStyle get_horizontalSliderThumb()

Disassembly:
	0x03C6EBE4 MOV X1, X20
	0x03C6EBE8 MOV X21, X0

ISIL:
	001 Move X0, [X0+96]
	002 Return X0

Method: System.Void set_horizontalSliderThumb(UnityEngine.GUIStyle value)

Disassembly:
	0x03C72790 TBNZ X0, 0x0, 0x3C727FC
	0x03C72794 ADRP X8, 0x4A8000

ISIL:
	001 Move [X0+96], X1
	002 Call GUISkin.Apply, X0
	003 Return 

Method: UnityEngine.GUIStyle get_horizontalSliderThumbExtent()

Disassembly:
	0x03C72798 LDR X8, [X8 + 0x890]
	0x03C7279C LDR X0, [X8]

ISIL:
	001 Move X0, [X0+104]
	002 Return X0

Method: System.Void set_horizontalSliderThumbExtent(UnityEngine.GUIStyle value)

Disassembly:
	0x03C727A0 BL 0x1C16F10
	0x03C727A4 MOV X21, X0

ISIL:
	001 Move [X0+104], X1
	002 Call GUISkin.Apply, X0
	003 Return 

Method: UnityEngine.GUIStyle get_sliderMixed()

Disassembly:
	0x03C727A8 BL 0x3C71974
	0x03C727AC STR X21, [X20]

ISIL:
	001 Move X0, [X0+136]
	002 Return X0

Method: System.Void set_sliderMixed(UnityEngine.GUIStyle value)

Disassembly:
	0x03C727B0 CBZ X21, 0x3C7290C
	0x03C727B4 LDR X22, [X27]

ISIL:
	001 Move [X0+136], X1
	002 Call GUISkin.Apply, X0
	003 Return 

Method: UnityEngine.GUIStyle get_verticalSlider()

Disassembly:
	0x03C727B8 STR X22, [X21 + 0x78]
	0x03C727BC LDR X8, [X23 + 0x720]

ISIL:
	001 Move X0, [X0+112]
	002 Return X0

Method: System.Void set_verticalSlider(UnityEngine.GUIStyle value)

Disassembly:
	0x03C727C0 CBNZ X8, 0x3C727D8
	0x03C727C4 ADRP X0, 0xFFFFFFFFFCE93000

ISIL:
	001 Move [X0+112], X1
	002 Call GUISkin.Apply, X0
	003 Return 

Method: UnityEngine.GUIStyle get_verticalSliderThumb()

Disassembly:
	0x03C727C8 ADD X0, X0, 0x5DA
	0x03C727CC BL 0x1C16CB8

ISIL:
	001 Move X0, [X0+120]
	002 Return X0

Method: System.Void set_verticalSliderThumb(UnityEngine.GUIStyle value)

Disassembly:
	0x03C727D0 MOV X8, X0
	0x03C727D4 STR X0, [X23 + 0x720]

ISIL:
	001 Move [X0+120], X1
	002 Call GUISkin.Apply, X0
	003 Return 

Method: UnityEngine.GUIStyle get_verticalSliderThumbExtent()

Disassembly:
	0x03C727D8 MOV X0, X21
	0x03C727DC MOV X1, X22

ISIL:
	001 Move X0, [X0+128]
	002 Return X0

Method: System.Void set_verticalSliderThumbExtent(UnityEngine.GUIStyle value)

Disassembly:
	0x03C727E0 BLR X8
	0x03C727E4 LDR X0, [X25]

ISIL:
	001 Move [X0+128], X1
	002 Call GUISkin.Apply, X0
	003 Return 

Method: UnityEngine.GUIStyle get_horizontalScrollbar()

Disassembly:
	0x03C727E8 CBZ X0, 0x3C7290C
	0x03C727EC LDR X2, [X20]

ISIL:
	001 Move X0, [X0+144]
	002 Return X0

Method: System.Void set_horizontalScrollbar(UnityEngine.GUIStyle value)

Disassembly:
	0x03C727F0 LDR X1, [X27]
	0x03C727F4 LDR X3, [X24]

ISIL:
	001 Move [X0+144], X1
	002 Call GUISkin.Apply, X0
	003 Return 

Method: UnityEngine.GUIStyle get_horizontalScrollbarThumb()

Disassembly:
	0x03C727F8 BL 0x2AA5084
	0x03C727FC LDR X0, [X19 + 0xE8]

ISIL:
	001 Move X0, [X0+152]
	002 Return X0

Method: System.Void set_horizontalScrollbarThumb(UnityEngine.GUIStyle value)

Disassembly:
	0x03C72800 CBZ X0, 0x3C7290C
	0x03C72804 ADRP X21, 0x4EE000

ISIL:
	001 Move [X0+152], X1
	002 Call GUISkin.Apply, X0
	003 Return 

Method: UnityEngine.GUIStyle get_horizontalScrollbarLeftButton()

Disassembly:
	0x03C72808 LDR X21, [X21 + 0x450]
	0x03C7280C LDR X3, [X26]

ISIL:
	001 Move X0, [X0+160]
	002 Return X0

Method: System.Void set_horizontalScrollbarLeftButton(UnityEngine.GUIStyle value)

Disassembly:
	0x03C72810 ADD X19, X19, 0x80
	0x03C72814 MOV X2, X19

ISIL:
	001 Move [X0+160], X1
	002 Call GUISkin.Apply, X0
	003 Return 

Method: UnityEngine.GUIStyle get_horizontalScrollbarRightButton()

Disassembly:
	0x03C72818 LDR X1, [X21]
	0x03C7281C BL 0x2AA6B2C

ISIL:
	001 Move X0, [X0+168]
	002 Return X0

Method: System.Void set_horizontalScrollbarRightButton(UnityEngine.GUIStyle value)

Disassembly:
	0x03C72820 TBNZ X0, 0x0, 0x3C72898
	0x03C72824 ADRP X8, 0x4A8000

ISIL:
	001 Move [X0+168], X1
	002 Call GUISkin.Apply, X0
	003 Return 

Method: UnityEngine.GUIStyle get_verticalScrollbar()

Disassembly:
	0x03C72828 LDR X8, [X8 + 0x890]
	0x03C7282C LDR X0, [X8]

ISIL:
	001 Move X0, [X0+176]
	002 Return X0

Method: System.Void set_verticalScrollbar(UnityEngine.GUIStyle value)

Disassembly:
	0x03C72830 BL 0x1C16F10
	0x03C72834 MOV X20, X0

ISIL:
	001 Move [X0+176], X1
	002 Call GUISkin.Apply, X0
	003 Return 

Method: UnityEngine.GUIStyle get_verticalScrollbarThumb()

Disassembly:
	0x03C72838 BL 0x3C71974
	0x03C7283C STR X20, [X19]

ISIL:
	001 Move X0, [X0+184]
	002 Return X0

Method: System.Void set_verticalScrollbarThumb(UnityEngine.GUIStyle value)

Disassembly:
	0x03C72840 LDR X0, [X25]
	0x03C72844 CBZ X0, 0x3C7290C

ISIL:
	001 Move [X0+184], X1
	002 Call GUISkin.Apply, X0
	003 Return 

Method: UnityEngine.GUIStyle get_verticalScrollbarUpButton()

Disassembly:
	0x03C72848 LDR X1, [X21]
	0x03C7284C LDR X3, [X24]

ISIL:
	001 Move X0, [X0+192]
	002 Return X0

Method: System.Void set_verticalScrollbarUpButton(UnityEngine.GUIStyle value)

Disassembly:
	0x03C72850 MOV X2, X20
	0x03C72854 BL 0x2AA5084

ISIL:
	001 Move [X0+192], X1
	002 Call GUISkin.Apply, X0
	003 Return 

Method: UnityEngine.GUIStyle get_verticalScrollbarDownButton()

Disassembly:
	0x03C72858 LDR X19, [X19]
	0x03C7285C CBZ X19, 0x3C7290C

ISIL:
	001 Move X0, [X0+200]
	002 Return X0

Method: System.Void set_verticalScrollbarDownButton(UnityEngine.GUIStyle value)

Disassembly:
	0x03C72860 ADRP X8, 0x4EE000
	0x03C72864 LDR X8, [X8 + 0x4B0]

ISIL:
	001 Move [X0+200], X1
	002 Call GUISkin.Apply, X0
	003 Return 

Method: UnityEngine.GUIStyle get_scrollView()

Disassembly:
	0x03C72868 LDR X20, [X8]
	0x03C7286C STR X20, [X19 + 0x78]

ISIL:
	001 Move X0, [X0+208]
	002 Return X0

Method: System.Void set_scrollView(UnityEngine.GUIStyle value)

Disassembly:
	0x03C72870 LDR X8, [X23 + 0x720]
	0x03C72874 CBNZ X8, 0x3C7288C

ISIL:
	001 Move [X0+208], X1
	002 Call GUISkin.Apply, X0
	003 Return 

Method: UnityEngine.GUIStyle[] get_customStyles()

Disassembly:
	0x03C72878 ADRP X0, 0xFFFFFFFFFCE93000
	0x03C7287C ADD X0, X0, 0x5DA

ISIL:
	001 Move X0, [X0+216]
	002 Return X0

Method: System.Void set_customStyles(UnityEngine.GUIStyle[] value)

Disassembly:
	0x03C72880 BL 0x1C16CB8
	0x03C72884 MOV X8, X0

ISIL:
	001 Move [X0+216], X1
	002 Call GUISkin.Apply, X0
	003 Return 

Method: UnityEngine.GUISettings get_settings()

Disassembly:
	0x03C6BB70 LDR X0, [X20]
	0x03C6BB74 LDR X8, [X0 + 0xB8]

ISIL:
	001 Move X0, [X0+224]
	002 Return X0

Method: UnityEngine.GUIStyle get_error()

Disassembly:
	0x03C72888 STR X0, [X23 + 0x720]
	0x03C7288C MOV X0, X19
	0x03C72890 MOV X1, X20
	0x03C72894 BLR X8
	0x03C72898 BL 0x3C71888
	0x03C7289C CBZ X0, 0x3C7290C
	0x03C728A0 ADRP X20, 0x774000
	0x03C728A4 LDR X8, [X20 + 0x768]
	0x03C728A8 MOV X19, X0
	0x03C728AC CBNZ X8, 0x3C728C4
	0x03C728B0 ADRP X0, 0xFFFFFFFFFCE93000
	0x03C728B4 ADD X0, X0, 0x60B
	0x03C728B8 BL 0x1C16CB8
	0x03C728BC MOV X8, X0
	0x03C728C0 STR X0, [X20 + 0x768]
	0x03C728C4 MOVZ W1, 0x1
	0x03C728C8 MOV X0, X19
	0x03C728CC BLR X8
	0x03C728D0 BL 0x3C71888
	0x03C728D4 CBZ X0, 0x3C7290C
	0x03C728D8 BL 0x3C729A4
	0x03C728DC CBZ X0, 0x3C7290C
	0x03C728E0 LDP X20, X19, [X31 + 0x50]
	0x03C728E4 LDP X22, X21, [X31 + 0x40]
	0x03C728E8 LDP X24, X23, [X31 + 0x30]
	0x03C728EC LDP X26, X25, [X31 + 0x20]
	0x03C728F0 LDP X28, X27, [X31 + 0x10]
	0x03C728F4 FMOV S0, 1
	0x03C728F8 FMOV S1, W31
	0x03C728FC FMOV S2, W31
	0x03C72900 FMOV S3, 1
	0x03C72904 LDR X30, [X31], #0x60
	0x03C72908 B 0x3C72A00
	0x03C7290C BL 0x1C16F20
	0x03C72910 BL 0x1C16F28
	0x03C72914 STR X30, [X31 - 0x20]!
	0x03C72918 STP X20, X19, [X31 + 0x10]
	0x03C7291C MOV X19, X0
	0x03C72920 LDR X0, [X0 + 0x78]
	0x03C72924 CBNZ X0, 0x3C72954
	0x03C72928 ADRP X20, 0x774000
	0x03C7292C LDR X8, [X20 + 0x718]
	0x03C72930 CBNZ X8, 0x3C72948
	0x03C72934 ADRP X0, 0xFFFFFFFFFCE8D000
	0x03C72938 ADD X0, X0, 0x869
	0x03C7293C BL 0x1C16CB8
	0x03C72940 MOV X8, X0
	0x03C72944 STR X0, [X20 + 0x718]
	0x03C72948 MOV X0, X19
	0x03C7294C BLR X8
	0x03C72950 STR X0, [X19 + 0x78]
	0x03C72954 LDP X20, X19, [X31 + 0x10]
	0x03C72958 LDR X30, [X31], #0x20
	0x03C7295C RET
	0x03C72960 STP X30, X21, [X31 - 0x20]!
	0x03C72964 STP X20, X19, [X31 + 0x10]
	0x03C72968 ADRP X21, 0x774000
	0x03C7296C LDR X2, [X21 + 0x768]
	0x03C72970 MOV W19, W1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, 0x775000
	007 Move X21, 0x4EF000
	008 Move W8, [X19+1747]
	009 Move X21, [X21+648]
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0x4EF000
	015 Move X0, [X0+648]
	016 Call 0x1C17CF4
	017 Move X0, 0x4A9000
	018 Move X0, [X0+2192]
	019 Call 0x1C17CF4
	020 Move X0, 0x4EF000
	021 Move X0, [X0+1024]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X19+1747], W8
	025 Move X8, [X21]
	026 Move X9, [X8+184]
	027 Move X9, [X9]
	028 Compare X9, 0
	029 JumpIfNotEqual {61}
	030 Move X8, 0x4A9000
	031 Move X8, [X8+2192]
	032 Move X0, [X8]
	033 Call 0x1C17F10
	034 Move X19, X0
	035 Call GUIStyle..ctor, X0
	036 Move X8, [X21]
	037 Move X8, [X8+184]
	038 Move [X8], X19
	039 Move X8, [X21]
	040 Move X8, [X8+184]
	041 Move X19, [X8]
	042 Compare X19, 0
	043 JumpIfEqual {69}
	044 Move X8, 0x4EF000
	045 Move X8, [X8+1024]
	046 Move X22, 0x775000
	047 Move X20, [X8]
	048 Move [X19+120], X20
	049 Move X8, [X22+1824]
	050 Compare X8, 0
	051 JumpIfNotEqual {57}
	052 Move X0, -51822592
	053 Add X0, X0, 1498
	054 Call 0x1C17CB8
	055 Move X8, X0
	056 Move [X22+1824], X0
	057 Move X0, X19
	058 Move X1, X20
	059 NotImplemented "Instruction BLR not yet implemented."
	060 Move X8, [X21]
	061 Move X8, [X8+184]
	062 Move X20, [X31+32]
	063 Move X19, [X31+40]
	064 Move X22, [X31+16]
	065 Move X21, [X31+24]
	066 Move X0, [X8]
	067 Move X30, [X31+48]
	068 Return X0
	069 Call 0x1C17F20

Method: System.Void Apply()

Disassembly:
	0x03C7255C ADD X0, X0, 0x5DA
	0x03C72560 BL 0x1C16CB8
	0x03C72564 MOV X8, X0
	0x03C72568 STR X0, [X23 + 0x720]
	0x03C7256C MOV X0, X20
	0x03C72570 MOV X1, X21
	0x03C72574 BLR X8
	0x03C72578 LDR X0, [X25]
	0x03C7257C CBZ X0, 0x3C7290C
	0x03C72580 ADRP X21, 0x4EE000
	0x03C72584 LDR X21, [X21 + 0x438]
	0x03C72588 LDR X2, [X19 + 0xC8]
	0x03C7258C LDR X3, [X24]
	0x03C72590 LDR X1, [X21]
	0x03C72594 BL 0x2AA5084
	0x03C72598 LDR X20, [X19 + 0xC8]
	0x03C7259C CBZ X20, 0x3C7290C
	0x03C725A0 LDR X21, [X21]
	0x03C725A4 STR X21, [X20 + 0x78]
	0x03C725A8 LDR X8, [X23 + 0x720]
	0x03C725AC CBNZ X8, 0x3C725C4
	0x03C725B0 ADRP X0, 0xFFFFFFFFFCE93000
	0x03C725B4 ADD X0, X0, 0x5DA
	0x03C725B8 BL 0x1C16CB8
	0x03C725BC MOV X8, X0
	0x03C725C0 STR X0, [X23 + 0x720]
	0x03C725C4 MOV X0, X20
	0x03C725C8 MOV X1, X21
	0x03C725CC BLR X8
	0x03C725D0 LDR X0, [X25]
	0x03C725D4 CBZ X0, 0x3C7290C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x775000
	005 Move W8, [X20+1748]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0x482000
	012 Move X0, [X0+2600]
	013 Call 0x1C17CF4
	014 Move X0, 0x4EF000
	015 Move X0, [X0+1016]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1748], W8
	019 Move X8, [X19+216]
	020 Compare X8, 0
	021 JumpIfNotEqual {34}
	022 Move X8, 0x482000
	023 Move X8, [X8+2600]
	024 Move X0, [X8]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X8, 0x4EF000
	030 Move X8, [X8+1016]
	031 Move X1, X31
	032 Move X0, [X8]
	033 Call Debug.Log, X0
	034 Move X0, X19
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X30, [X31+32]
	038 Call GUISkin.BuildStyleCache, X0
	039 Return 

Method: System.Void BuildStyleCache()

Disassembly:
	0x03C72A44 LDP X20, X19, [X31 + 0x20]
	0x03C72A48 LDR X30, [X31 + 0x10]
	0x03C72A4C ADD X31, X31, 0x30
	0x03C72A50 RET
	0x03C72A54 SUB X31, X31, 0x40
	0x03C72A58 STP X30, X21, [X31 + 0x20]
	0x03C72A5C STP X20, X19, [X31 + 0x30]
	0x03C72A60 ADRP X19, 0x774000
	0x03C72A64 LDRB W8, [X19 + 0x6D6]
	0x03C72A68 MOV X21, X1
	0x03C72A6C MOV X20, X0
	0x03C72A70 TBNZ X8, 0x0, 0x3C72AD0
	0x03C72A74 ADRP X0, 0x481000
	0x03C72A78 LDR X0, [X0 + 0xA28]
	0x03C72A7C BL 0x1C16CF4
	0x03C72A80 ADRP X0, 0x4AA000
	0x03C72A84 LDR X0, [X0 + 0xE68]
	0x03C72A88 BL 0x1C16CF4
	0x03C72A8C ADRP X0, 0x481000
	0x03C72A90 LDR X0, [X0 + 0xAC8]
	0x03C72A94 BL 0x1C16CF4
	0x03C72A98 ADRP X0, 0x4EE000
	0x03C72A9C LDR X0, [X0 + 0x4E0]
	0x03C72AA0 BL 0x1C16CF4
	0x03C72AA4 ADRP X0, 0x4EE000
	0x03C72AA8 LDR X0, [X0 + 0x4E8]
	0x03C72AAC BL 0x1C16CF4
	0x03C72AB0 ADRP X0, 0x4EE000
	0x03C72AB4 LDR X0, [X0 + 0x4F0]
	0x03C72AB8 BL 0x1C16CF4
	0x03C72ABC ADRP X0, 0x4EE000
	0x03C72AC0 LDR X0, [X0 + 0x4F8]
	0x03C72AC4 BL 0x1C16CF4
	0x03C72AC8 MOVZ W8, 0x1
	0x03C72ACC STRB W8, [X19 + 0x6D6]
	0x03C72AD0 MOV X0, X20
	0x03C72AD4 MOV X1, X21
	0x03C72AD8 BL 0x3C72C64
	0x03C72ADC CBNZ X0, 0x3C72C4C
	0x03C72AE0 ADRP X8, 0x481000
	0x03C72AE4 LDR X8, [X8 + 0xAC8]
	0x03C72AE8 MOVZ W1, 0x6
	0x03C72AEC LDR X0, [X8]
	0x03C72AF0 BL 0x1C16D6C
	0x03C72AF4 CBZ X0, 0x3C72C60
	0x03C72AF8 LDR W8, [X0 + 0x18]
	0x03C72AFC MOV X19, X0
	0x03C72B00 CBZ W8, 0x3C72C5C
	0x03C72B04 ADRP X9, 0x4EE000
	0x03C72B08 LDR X9, [X9 + 0x4F8]
	0x03C72B0C CMP W8, 0x1
	0x03C72B10 LDR X9, [X9]
	0x03C72B14 STR X9, [X19 + 0x20]
	0x03C72B18 B.EQ 0x3C72C5C
	0x03C72B1C CMP W8, 0x2
	0x03C72B20 STR X21, [X19 + 0x28]
	0x03C72B24 B.LS 0x3C72C5C
	0x03C72B28 ADRP X8, 0x4EE000
	0x03C72B2C LDR X8, [X8 + 0x4E8]
	0x03C72B30 MOV X0, X20
	0x03C72B34 MOV X1, X31
	0x03C72B38 LDR X8, [X8]
	0x03C72B3C STR X8, [X19 + 0x30]
	0x03C72B40 BL 0x3C389D4
	0x03C72B44 LDR W8, [X19 + 0x18]
	0x03C72B48 CMP W8, 0x3
	0x03C72B4C B.LS 0x3C72C5C
	0x03C72B50 CMP W8, 0x4
	0x03C72B54 STR X0, [X19 + 0x38]
	0x03C72B58 B.EQ 0x3C72C5C
	0x03C72B5C ADRP X8, 0x4EE000
	0x03C72B60 LDR X8, [X8 + 0x4F0]
	0x03C72B64 ADRP X20, 0x774000
	0x03C72B68 ADRP X21, 0x4E7000
	0x03C72B6C LDR X8, [X8]
	0x03C72B70 STR X8, [X19 + 0x40]
	0x03C72B74 LDRB W8, [X20 + 0x510]
	0x03C72B78 LDR X21, [X21 + 0x20]
	0x03C72B7C TBNZ X8, 0x0, 0x3C72B94
	0x03C72B80 ADRP X0, 0x4E7000
	0x03C72B84 LDR X0, [X0 + 0x20]
	0x03C72B88 BL 0x1C16CF4
	0x03C72B8C MOVZ W8, 0x1
	0x03C72B90 STRB W8, [X20 + 0x510]
	0x03C72B94 LDR X8, [X21]
	0x03C72B98 LDR X8, [X8 + 0xB8]
	0x03C72B9C LDR X20, [X8]
	0x03C72BA0 CBZ X20, 0x3C72BF4
	0x03C72BA4 ADRP X21, 0x774000
	0x03C72BA8 LDR X8, [X21 + 0x4A8]
	0x03C72BAC CBNZ X8, 0x3C72BC4
	0x03C72BB0 ADRP X0, 0xFFFFFFFFFCE7F000
	0x03C72BB4 ADD X0, X0, 0x566
	0x03C72BB8 BL 0x1C16CB8
	0x03C72BBC MOV X8, X0
	0x03C72BC0 STR X0, [X21 + 0x4A8]
	0x03C72BC4 MOV X0, X20
	0x03C72BC8 BLR X8
	0x03C72BCC ADRP X8, 0x4AA000
	0x03C72BD0 LDR X8, [X8 + 0xE68]
	0x03C72BD4 MOVN X9, 0x0
	0x03C72BD8 STR W0, [X31 + 0x18]
	0x03C72BDC ADD X0, X31, 0x8
	0x03C72BE0 LDR X8, [X8]
	0x03C72BE4 MOV X1, X31
	0x03C72BE8 STP X8, X9, [X31 + 0x8]
	0x03C72BEC BL 0x33B162C
	0x03C72BF0 B 0x3C72C00
	0x03C72BF4 ADRP X8, 0x4EE000
	0x03C72BF8 LDR X8, [X8 + 0x4E0]
	0x03C72BFC LDR X0, [X8]
	0x03C72C00 LDR W8, [X19 + 0x18]
	0x03C72C04 CMP W8, 0x5
	0x03C72C08 B.LS 0x3C72C5C
	0x03C72C0C STR X0, [X19 + 0x48]
	0x03C72C10 MOV X0, X19
	0x03C72C14 MOV X1, X31
	0x03C72C18 BL 0x32278CC
	0x03C72C1C ADRP X8, 0x481000
	0x03C72C20 LDR X8, [X8 + 0xA28]
	0x03C72C24 MOV X19, X0
	0x03C72C28 LDR X8, [X8]
	0x03C72C2C LDR W9, [X8 + 0xE0]
	0x03C72C30 CBNZ W9, 0x3C72C3C
	0x03C72C34 MOV X0, X8
	0x03C72C38 BL 0x1C16DFC
	0x03C72C3C MOV X0, X19
	0x03C72C40 MOV X1, X31
	0x03C72C44 BL 0x3C06A04
	0x03C72C48 BL 0x3C71888
	0x03C72C4C LDP X20, X19, [X31 + 0x30]
	0x03C72C50 LDP X30, X21, [X31 + 0x20]
	0x03C72C54 ADD X31, X31, 0x40
	0x03C72C58 RET
	0x03C72C5C BL 0x1C16F28
	0x03C72C60 BL 0x1C16F20
	0x03C72C64 SUB X31, X31, 0x30
	0x03C72C68 STP X30, X21, [X31 + 0x10]
	0x03C72C6C STP X20, X19, [X31 + 0x20]
	0x03C72C70 ADRP X21, 0x774000
	0x03C72C74 LDRB W8, [X21 + 0x6D7]
	0x03C72C78 MOV X19, X1
	0x03C72C7C MOV X20, X0
	0x03C72C80 TBNZ X8, 0x0, 0x3C72C98
	0x03C72C84 ADRP X0, 0x4EE000
	0x03C72C88 LDR X0, [X0 + 0x408]
	0x03C72C8C BL 0x1C16CF4
	0x03C72C90 MOVZ W8, 0x1
	0x03C72C94 STRB W8, [X21 + 0x6D7]
	0x03C72C98 STR X31, [X31 + 0x8]
	0x03C72C9C LDR X0, [X20 + 0xE8]
	0x03C72CA0 CBNZ X0, 0x3C72CB0
	0x03C72CA4 MOV X0, X20
	0x03C72CA8 BL 0x3C71A44
	0x03C72CAC LDR X0, [X20 + 0xE8]
	0x03C72CB0 CBZ X0, 0x3C72CE8
	0x03C72CB4 ADRP X8, 0x4EE000
	0x03C72CB8 LDR X8, [X8 + 0x408]
	0x03C72CBC ADD X2, X31, 0x8
	0x03C72CC0 MOV X1, X19
	0x03C72CC4 LDR X3, [X8]
	0x03C72CC8 BL 0x2AA6B2C
	0x03C72CCC LDR X8, [X31 + 0x8]
	0x03C72CD0 LDP X20, X19, [X31 + 0x20]
	0x03C72CD4 LDP X30, X21, [X31 + 0x10]
	0x03C72CD8 ANDS W31, W0, 0x1
	0x03C72CDC CSEL X0, X8, X31, NE
	0x03C72CE0 ADD X31, X31, 0x30
	0x03C72CE4 RET
	0x03C72CE8 BL 0x1C16F20
	0x03C72CEC SUB X31, X31, 0x50
	0x03C72CF0 STR X30, [X31 + 0x30]
	0x03C72CF4 STP X20, X19, [X31 + 0x40]
	0x03C72CF8 ADRP X20, 0x774000
	0x03C72CFC LDRB W8, [X20 + 0x6D9]
	0x03C72D00 MOV X19, X0
	0x03C72D04 TBNZ X8, 0x0, 0x3C72D34
	0x03C72D08 ADRP X0, 0x4EE000
	0x03C72D0C LDR X0, [X0 + 0x500]
	0x03C72D10 BL 0x1C16CF4
	0x03C72D14 ADRP X0, 0x4EE000
	0x03C72D18 LDR X0, [X0 + 0x508]
	0x03C72D1C BL 0x1C16CF4
	0x03C72D20 ADRP X0, 0x4EE000
	0x03C72D24 LDR X0, [X0 + 0x510]
	0x03C72D28 BL 0x1C16CF4
	0x03C72D2C MOVZ W8, 0x1
	0x03C72D30 STRB W8, [X20 + 0x6D9]
	0x03C72D34 LDR X0, [X19 + 0xE8]
	0x03C72D38 CBNZ X0, 0x3C72D48
	0x03C72D3C MOV X0, X19
	0x03C72D40 BL 0x3C71A44
	0x03C72D44 LDR X0, [X19 + 0xE8]
	0x03C72D48 CBZ X0, 0x3C72DA8
	0x03C72D4C ADRP X8, 0x4EE000
	0x03C72D50 LDR X8, [X8 + 0x500]
	0x03C72D54 LDR X1, [X8]
	0x03C72D58 BL 0x2AA4F58
	0x03C72D5C CBZ X0, 0x3C72DA8
	0x03C72D60 ADRP X8, 0x4EE000
	0x03C72D64 LDR X8, [X8 + 0x510]
	0x03C72D68 ADRP X19, 0x4EE000
	0x03C72D6C LDR X1, [X8]
	0x03C72D70 LDR X19, [X19 + 0x508]
	0x03C72D74 ADD X8, X31, 0x18
	0x03C72D78 BL 0x275A7AC
	0x03C72D7C LDUR V0, [X31 + 0x18]
	0x03C72D80 LDR X8, [X31 + 0x28]
	0x03C72D84 LDR X0, [X19]
	0x03C72D88 ADD X1, X31, 0x0
	0x03C72D8C STR V0, [X31]
	0x03C72D90 STR X8, [X31 + 0x10]
	0x03C72D94 BL 0x1C16E04
	0x03C72D98 LDP X20, X19, [X31 + 0x40]
	0x03C72D9C LDR X30, [X31 + 0x30]
	0x03C72DA0 ADD X31, X31, 0x50
	0x03C72DA4 RET
	0x03C72DA8 BL 0x1C16F20
	0x03C72DAC STP X30, X21, [X31 - 0x20]!
	0x03C72DB0 STP X20, X19, [X31 + 0x10]
	0x03C72DB4 LDR X8, [X2 + 0x8]
	0x03C72DB8 STP X1, X2, [X0 + 0x20]
	0x03C72DBC MOV X19, X0
	0x03C72DC0 MOV X20, X1
	0x03C72DC4 STR X8, [X0 + 0x10]
	0x03C72DC8 LDRB W21, [X2 + 0x52]
	0x03C72DCC STR X0, [X0 + 0x40]
	0x03C72DD0 MOV X0, X2
	0x03C72DD4 BL 0x1C16D84
	0x03C72DD8 TBZ X0, 0x0, 0x3C72DF0
	0x03C72DDC CBNZ W21, 0x3C72DF4
	0x03C72DE0 ADRP X8, 0xFFFFFFFFFDF9A000
	0x03C72DE4 ADD X8, X8, 0x410
	0x03C72DE8 STR X8, [X19 + 0x18]
	0x03C72DEC B 0x3C72E04
	0x03C72DF0 CBZ X20, 0x3C72E1C
	0x03C72DF4 LDR X8, [X19 + 0x10]
	0x03C72DF8 LDR X9, [X19 + 0x20]
	0x03C72DFC STR X8, [X19 + 0x18]
	0x03C72E00 STR X9, [X19 + 0x40]
	0x03C72E04 ADRP X8, 0xFFFFFFFFFDF9A000
	0x03C72E08 ADD X8, X8, 0x3D0
	0x03C72E0C STR X8, [X19 + 0x38]
	0x03C72E10 LDP X20, X19, [X31 + 0x10]
	0x03C72E14 LDP X30, X21, [X31], #0x20
	0x03C72E18 RET
	0x03C72E1C ADRP X1, 0xFFFFFFFFFCEA9000
	0x03C72E20 ADD X1, X1, 0xEE3
	0x03C72E24 MOV X0, X31
	0x03C72E28 BL 0x1C16F3C
	0x03C72E2C MOV X1, X31
	0x03C72E30 BL 0x1C16DEC
	0x03C72E34 LDR X8, [X0 + 0x40]
	0x03C72E38 LDR X2, [X0 + 0x18]
	0x03C72E3C LDR X1, [X0 + 0x28]
	0x03C72E40 MOV X0, X8
	0x03C72E44 BR X2
	0x03C72E48 STR X30, [X31 - 0x30]!
	0x03C72E4C STP X22, X21, [X31 + 0x10]
	0x03C72E50 STP X20, X19, [X31 + 0x20]
	0x03C72E54 ADRP X21, 0x774000
	0x03C72E58 ADRP X22, 0x4EE000
	0x03C72E5C LDRB W8, [X21 + 0x6DA]
	0x03C72E60 LDR X22, [X22 + 0x2A8]
	0x03C72E64 MOV W19, W1
	0x03C72E68 MOV X20, X0
	0x03C72E6C TBNZ X8, 0x0, 0x3C72EA8
	0x03C72E70 ADRP X0, 0x4EE000
	0x03C72E74 LDR X0, [X0 + 0x518]
	0x03C72E78 BL 0x1C16CF4
	0x03C72E7C ADRP X0, 0x4EE000
	0x03C72E80 LDR X0, [X0 + 0x520]
	0x03C72E84 BL 0x1C16CF4
	0x03C72E88 ADRP X0, 0x4EE000
	0x03C72E8C LDR X0, [X0 + 0x2A8]
	0x03C72E90 BL 0x1C16CF4
	0x03C72E94 ADRP X0, 0x481000
	0x03C72E98 LDR X0, [X0 + 0x6C0]
	0x03C72E9C BL 0x1C16CF4
	0x03C72EA0 MOVZ W8, 0x1
	0x03C72EA4 STRB W8, [X21 + 0x6DA]
	0x03C72EA8 LDR X0, [X22]
	0x03C72EAC STR X31, [X31 + 0x8]
	0x03C72EB0 LDR W8, [X0 + 0xE0]
	0x03C72EB4 CBNZ W8, 0x3C72EC0
	0x03C72EB8 BL 0x1C16DFC
	0x03C72EBC LDR X0, [X22]
	0x03C72EC0 LDR X8, [X0 + 0xB8]
	0x03C72EC4 LDR X0, [X8]
	0x03C72EC8 CBZ X0, 0x3C72F8C
	0x03C72ECC ADRP X8, 0x4EE000
	0x03C72ED0 LDR X8, [X8 + 0x518]
	0x03C72ED4 ADD X2, X31, 0x8
	0x03C72ED8 MOV W1, W19
	0x03C72EDC LDR X3, [X8]
	0x03C72EE0 BL 0x2A150AC
	0x03C72EE4 TBZ X0, 0x0, 0x3C72F2C
	0x03C72EE8 LDR X0, [X31 + 0x8]
	0x03C72EEC CBZ X0, 0x3C72F8C
	0x03C72EF0 MOV X1, X31
	0x03C72EF4 BL 0x33BE520
	0x03C72EF8 ADRP X8, 0x481000
	0x03C72EFC LDR X8, [X8 + 0x6C0]
	0x03C72F00 MOV X21, X0
	0x03C72F04 LDR X8, [X8]
	0x03C72F08 LDR W9, [X8 + 0xE0]
	0x03C72F0C CBNZ W9, 0x3C72F18
	0x03C72F10 MOV X0, X8
	0x03C72F14 BL 0x1C16DFC
	0x03C72F18 MOV X0, X21
	0x03C72F1C MOV X1, X20
	0x03C72F20 MOV X2, X31
	0x03C72F24 BL 0x3395F0C
	0x03C72F28 TBZ X0, 0x0, 0x3C72F78
	0x03C72F2C MOV X0, X20
	0x03C72F30 MOV X1, X31
	0x03C72F34 BL 0x33A703C
	0x03C72F38 LDR X8, [X22]
	0x03C72F3C STR X0, [X31 + 0x8]
	0x03C72F40 LDR W9, [X8 + 0xE0]
	0x03C72F44 CBNZ W9, 0x3C72F54
	0x03C72F48 MOV X0, X8
	0x03C72F4C BL 0x1C16DFC
	0x03C72F50 LDR X8, [X22]
	0x03C72F54 LDR X8, [X8 + 0xB8]
	0x03C72F58 LDR X0, [X8]
	0x03C72F5C CBZ X0, 0x3C72F8C
	0x03C72F60 ADRP X8, 0x4EE000
	0x03C72F64 LDR X8, [X8 + 0x520]
	0x03C72F68 LDR X2, [X31 + 0x8]
	0x03C72F6C MOV W1, W19
	0x03C72F70 LDR X3, [X8]
	0x03C72F74 BL 0x2A13678
	0x03C72F78 LDR X0, [X31 + 0x8]
	0x03C72F7C LDP X20, X19, [X31 + 0x20]
	0x03C72F80 LDP X22, X21, [X31 + 0x10]
	0x03C72F84 LDR X30, [X31], #0x30
	0x03C72F88 RET
	0x03C72F8C BL 0x1C16F20
	0x03C72F90 STR X30, [X31 - 0x30]!
	0x03C72F94 STP X22, X21, [X31 + 0x10]
	0x03C72F98 STP X20, X19, [X31 + 0x20]
	0x03C72F9C ADRP X21, 0x774000
	0x03C72FA0 ADRP X22, 0x4EE000
	0x03C72FA4 ADRP X19, 0x4EE000
	0x03C72FA8 ADRP X20, 0x4EE000
	0x03C72FAC LDRB W8, [X21 + 0x6DB]
	0x03C72FB0 LDR X22, [X22 + 0x528]
	0x03C72FB4 LDR X19, [X19 + 0x530]
	0x03C72FB8 LDR X20, [X20 + 0x2A8]
	0x03C72FBC TBNZ X8, 0x0, 0x3C72FEC
	0x03C72FC0 ADRP X0, 0x4EE000
	0x03C72FC4 LDR X0, [X0 + 0x530]
	0x03C72FC8 BL 0x1C16CF4
	0x03C72FCC ADRP X0, 0x4EE000
	0x03C72FD0 LDR X0, [X0 + 0x528]
	0x03C72FD4 BL 0x1C16CF4
	0x03C72FD8 ADRP X0, 0x4EE000
	0x03C72FDC LDR X0, [X0 + 0x2A8]
	0x03C72FE0 BL 0x1C16CF4
	0x03C72FE4 MOVZ W8, 0x1
	0x03C72FE8 STRB W8, [X21 + 0x6DB]
	0x03C72FEC LDR X0, [X22]
	0x03C72FF0 BL 0x1C16F10
	0x03C72FF4 LDR X1, [X19]
	0x03C72FF8 MOV X19, X0
	0x03C72FFC BL 0x2A12DD4
	0x03C73000 LDR X8, [X20]
	0x03C73004 LDP X22, X21, [X31 + 0x10]
	0x03C73008 LDR X8, [X8 + 0xB8]
	0x03C7300C STR X19, [X8]
	0x03C73010 LDP X20, X19, [X31 + 0x20]
	0x03C73014 LDR X30, [X31], #0x30
	0x03C73018 RET
	0x03C7301C STR X30, [X31 - 0x20]!
	0x03C73020 STP X20, X19, [X31 + 0x10]
	0x03C73024 ADRP X20, 0x773000
	0x03C73028 LDR X1, [X20 + 0x6E0]
	0x03C7302C MOV X19, X0
	0x03C73030 CBNZ X1, 0x3C73048
	0x03C73034 ADRP X0, 0xFFFFFFFFFCE82000
	0x03C73038 ADD X0, X0, 0x74A
	0x03C7303C BL 0x1C16CB8
	0x03C73040 MOV X1, X0
	0x03C73044 STR X0, [X20 + 0x6E0]
	0x03C73048 MOV X0, X19
	0x03C7304C LDP X20, X19, [X31 + 0x10]
	0x03C73050 LDR X30, [X31], #0x20
	0x03C73054 BR X1
	0x03C73058 STP X30, X21, [X31 - 0x20]!
	0x03C7305C STP X20, X19, [X31 + 0x10]
	0x03C73060 ADRP X21, 0x773000
	0x03C73064 LDR X2, [X21 + 0x6E8]
	0x03C73068 MOV X19, X1
	0x03C7306C MOV X20, X0
	0x03C73070 CBNZ X2, 0x3C73088
	0x03C73074 ADRP X0, 0xFFFFFFFFFCEA1000
	0x03C73078 ADD X0, X0, 0xF65
	0x03C7307C BL 0x1C16CB8
	0x03C73080 MOV X2, X0
	0x03C73084 STR X0, [X21 + 0x6E8]
	0x03C73088 MOV X0, X20
	0x03C7308C MOV X1, X19
	0x03C73090 LDP X20, X19, [X31 + 0x10]
	0x03C73094 LDP X30, X21, [X31], #0x20
	0x03C73098 BR X2
	0x03C7309C SUB X31, X31, 0x30
	0x03C730A0 STP X31, X30, [X31 + 0x8]
	0x03C730A4 STP X20, X19, [X31 + 0x20]
	0x03C730A8 ADRP X20, 0x773000
	0x03C730AC LDR X8, [X20 + 0x708]
	0x03C730B0 MOV X19, X0
	0x03C730B4 STR X31, [X31]
	0x03C730B8 CBNZ X8, 0x3C730D0
	0x03C730BC ADRP X0, 0xFFFFFFFFFCEA6000
	0x03C730C0 ADD X0, X0, 0xCC
	0x03C730C4 BL 0x1C16CB8
	0x03C730C8 MOV X8, X0
	0x03C730CC STR X0, [X20 + 0x708]
	0x03C730D0 ADD X1, X31, 0x0
	0x03C730D4 MOV X0, X19
	0x03C730D8 BLR X8
	0x03C730DC LDP S0, S1, [X31]
	0x03C730E0 LDP S2, S3, [X31 + 0x8]
	0x03C730E4 LDP X20, X19, [X31 + 0x20]
	0x03C730E8 LDR X30, [X31 + 0x10]
	0x03C730EC ADD X31, X31, 0x30
	0x03C730F0 RET
	0x03C730F4 STP X30, X21, [X31 - 0x20]!
	0x03C730F8 STP X20, X19, [X31 + 0x10]
	0x03C730FC ADRP X21, 0x773000
	0x03C73100 LDR X2, [X21 + 0x708]
	0x03C73104 MOV X19, X1
	0x03C73108 MOV X20, X0
	0x03C7310C CBNZ X2, 0x3C73124
	0x03C73110 ADRP X0, 0xFFFFFFFFFCEA6000
	0x03C73114 ADD X0, X0, 0xCC
	0x03C73118 BL 0x1C16CB8
	0x03C7311C MOV X2, X0
	0x03C73120 STR X0, [X21 + 0x708]
	0x03C73124 MOV X0, X20
	0x03C73128 MOV X1, X19
	0x03C7312C LDP X20, X19, [X31 + 0x10]
	0x03C73130 LDP X30, X21, [X31], #0x20
	0x03C73134 BR X2
	0x03C73138 STP X30, X21, [X31 - 0x20]!
	0x03C7313C STP X20, X19, [X31 + 0x10]
	0x03C73140 ADRP X21, 0x773000
	0x03C73144 LDR X2, [X21 + 0x710]
	0x03C73148 MOV X19, X1
	0x03C7314C MOV X20, X0
	0x03C73150 CBNZ X2, 0x3C73168
	0x03C73154 ADRP X0, 0xFFFFFFFFFCE7C000
	0x03C73158 ADD X0, X0, 0x5D4
	0x03C7315C BL 0x1C16CB8
	0x03C73160 MOV X2, X0
	0x03C73164 STR X0, [X21 + 0x710]
	0x03C73168 MOV X0, X20
	0x03C7316C MOV X1, X19
	0x03C73170 LDP X20, X19, [X31 + 0x10]
	0x03C73174 LDP X30, X21, [X31], #0x20
	0x03C73178 BR X2
	0x03C7317C STP X30, X19, [X31 - 0x10]!
	0x03C73180 ADRP X19, 0x773000
	0x03C73184 LDR X0, [X19 + 0x6F0]
	0x03C73188 CBNZ X0, 0x3C7319C
	0x03C7318C ADRP X0, 0xFFFFFFFFFCEB2000
	0x03C73190 ADD X0, X0, 0x463
	0x03C73194 BL 0x1C16CB8
	0x03C73198 STR X0, [X19 + 0x6F0]
	0x03C7319C LDP X30, X19, [X31], #0x10
	0x03C731A0 BR X0
	0x03C731A4 STR X30, [X31 - 0x20]!
	0x03C731A8 STP X20, X19, [X31 + 0x10]
	0x03C731AC ADRP X20, 0x773000
	0x03C731B0 LDR X1, [X20 + 0x6F8]
	0x03C731B4 MOV X19, X0
	0x03C731B8 CBNZ X1, 0x3C731D0
	0x03C731BC ADRP X0, 0xFFFFFFFFFCEB4000
	0x03C731C0 ADD X0, X0, 0x2F8
	0x03C731C4 BL 0x1C16CB8
	0x03C731C8 MOV X1, X0
	0x03C731CC STR X0, [X20 + 0x6F8]
	0x03C731D0 MOV X0, X19
	0x03C731D4 LDP X20, X19, [X31 + 0x10]
	0x03C731D8 LDR X30, [X31], #0x20
	0x03C731DC BR X1
	0x03C731E0 STR X30, [X31 - 0x20]!
	0x03C731E4 STP X20, X19, [X31 + 0x10]
	0x03C731E8 MOV X1, X31
	0x03C731EC MOV X19, X0
	0x03C731F0 BL 0x33BDD8C
	0x03C731F4 ADRP X20, 0x773000
	0x03C731F8 LDR X8, [X20 + 0x6F0]
	0x03C731FC CBNZ X8, 0x3C73214
	0x03C73200 ADRP X0, 0xFFFFFFFFFCEB2000
	0x03C73204 ADD X0, X0, 0x463
	0x03C73208 BL 0x1C16CB8
	0x03C7320C MOV X8, X0
	0x03C73210 STR X0, [X20 + 0x6F0]
	0x03C73214 BLR X8
	0x03C73218 STR X0, [X19 + 0x10]
	0x03C7321C LDP X20, X19, [X31 + 0x10]
	0x03C73220 LDR X30, [X31], #0x20
	0x03C73224 RET
	0x03C73228 STP X30, X21, [X31 - 0x20]!
	0x03C7322C STP X20, X19, [X31 + 0x10]
	0x03C73230 MOV X20, X1
	0x03C73234 MOV X1, X31
	0x03C73238 MOV X19, X2
	0x03C7323C MOV X21, X0
	0x03C73240 BL 0x33BDD8C
	0x03C73244 STP X19, X20, [X21 + 0x10]
	0x03C73248 LDP X20, X19, [X31 + 0x10]
	0x03C7324C LDP X30, X21, [X31], #0x20
	0x03C73250 RET
	0x03C73254 STR X30, [X31 - 0x30]!
	0x03C73258 STP X22, X21, [X31 + 0x10]
	0x03C7325C STP X20, X19, [X31 + 0x20]
	0x03C73260 ADRP X21, 0x773000
	0x03C73264 ADRP X22, 0x4ED000
	0x03C73268 LDRB W8, [X21 + 0x700]
	0x03C7326C LDR X22, [X22 + 0x538]
	0x03C73270 MOV X19, X1
	0x03C73274 MOV X20, X0
	0x03C73278 TBNZ X8, 0x0, 0x3C73290
	0x03C7327C ADRP X0, 0x4ED000
	0x03C73280 LDR X0, [X0 + 0x538]
	0x03C73284 BL 0x1C16CF4
	0x03C73288 MOVZ W8, 0x1
	0x03C7328C STRB W8, [X21 + 0x700]
	0x03C73290 LDR X0, [X22]
	0x03C73294 BL 0x1C16F10
	0x03C73298 MOV X1, X31
	0x03C7329C MOV X21, X0
	0x03C732A0 BL 0x33BDD8C
	0x03C732A4 STP X19, X20, [X21 + 0x10]
	0x03C732A8 MOV X0, X21
	0x03C732AC LDP X20, X19, [X31 + 0x20]
	0x03C732B0 LDP X22, X21, [X31 + 0x10]
	0x03C732B4 LDR X30, [X31], #0x30
	0x03C732B8 RET
	0x03C732BC STP X30, X21, [X31 - 0x20]!
	0x03C732C0 STP X20, X19, [X31 + 0x10]
	0x03C732C4 LDR X8, [X0 + 0x18]
	0x03C732C8 MOV X19, X0
	0x03C732CC CBNZ X8, 0x3C732FC
	0x03C732D0 ADRP X20, 0x773000
	0x03C732D4 LDR X8, [X20 + 0x6F8]
	0x03C732D8 CBNZ X8, 0x3C732F0
	0x03C732DC ADRP X0, 0xFFFFFFFFFCEB4000
	0x03C732E0 ADD X0, X0, 0x2F8
	0x03C732E4 BL 0x1C16CB8
	0x03C732E8 MOV X8, X0
	0x03C732EC STR X0, [X20 + 0x6F8]
	0x03C732F0 MOV X0, X19
	0x03C732F4 BLR X8
	0x03C732F8 STR X31, [X19 + 0x10]
	0x03C732FC MOV X0, X19
	0x03C73300 LDP X20, X19, [X31 + 0x10]
	0x03C73304 MOV X1, X31
	0x03C73308 LDP X30, X21, [X31], #0x20
	0x03C7330C B 0x33CB4DC
	0x03C73310 CMP W1, 0x1
	0x03C73314 MOV X21, X0
	0x03C73318 B.NE 0x3C73348
	0x03C7331C MOV X0, X21
	0x03C73320 BL 0x3EB1AD0
	0x03C73324 LDR X20, [X0]
	0x03C73328 BL 0x3EB1AE0
	0x03C7332C MOV X0, X19
	0x03C73330 MOV X1, X31
	0x03C73334 BL 0x33CB4DC
	0x03C73338 CBNZ X20, 0x3C73350
	0x03C7333C LDP X20, X19, [X31 + 0x10]
	0x03C73340 LDP X30, X21, [X31], #0x20
	0x03C73344 RET
	0x03C73348 MOV X20, X31
	0x03C7334C B 0x3C7335C
	0x03C73350 MOV X0, X20
	0x03C73354 BL 0x1C16F18
	0x03C73358 MOV X21, X0
	0x03C7335C MOV X0, X19
	0x03C73360 MOV X1, X31
	0x03C73364 BL 0x33CB4DC
	0x03C73368 CBNZ X20, 0x3C73374
	0x03C7336C MOV X0, X21
	0x03C73370 BL 0x1D2C690
	0x03C73374 MOV X0, X20
	0x03C73378 BL 0x1C16F18
	0x03C7337C BL 0x1990590
	0x03C73380 STR X30, [X31 - 0x20]!
	0x03C73384 STP X20, X19, [X31 + 0x10]
	0x03C73388 ADRP X20, 0x773000
	0x03C7338C LDR X1, [X20 + 0x718]
	0x03C73390 MOV X19, X0
	0x03C73394 CBNZ X1, 0x3C733AC
	0x03C73398 ADRP X0, 0xFFFFFFFFFCE8C000
	0x03C7339C ADD X0, X0, 0x869
	0x03C733A0 BL 0x1C16CB8
	0x03C733A4 MOV X1, X0
	0x03C733A8 STR X0, [X20 + 0x718]
	0x03C733AC MOV X0, X19
	0x03C733B0 LDP X20, X19, [X31 + 0x10]
	0x03C733B4 LDR X30, [X31], #0x20
	0x03C733B8 BR X1
	0x03C733BC STP X30, X21, [X31 - 0x20]!
	0x03C733C0 STP X20, X19, [X31 + 0x10]
	0x03C733C4 ADRP X21, 0x773000
	0x03C733C8 LDR X2, [X21 + 0x720]
	0x03C733CC MOV X19, X1
	0x03C733D0 MOV X20, X0
	0x03C733D4 CBNZ X2, 0x3C733EC
	0x03C733D8 ADRP X0, 0xFFFFFFFFFCE92000
	0x03C733DC ADD X0, X0, 0x5DA
	0x03C733E0 BL 0x1C16CB8
	0x03C733E4 MOV X2, X0
	0x03C733E8 STR X0, [X21 + 0x720]
	0x03C733EC MOV X0, X20
	0x03C733F0 MOV X1, X19
	0x03C733F4 LDP X20, X19, [X31 + 0x10]
	0x03C733F8 LDP X30, X21, [X31], #0x20
	0x03C733FC BR X2
	0x03C73400 STR X30, [X31 - 0x20]!
	0x03C73404 STP X20, X19, [X31 + 0x10]
	0x03C73408 ADRP X20, 0x773000
	0x03C7340C LDR X1, [X20 + 0x730]
	0x03C73410 MOV X19, X0
	0x03C73414 CBNZ X1, 0x3C7342C
	0x03C73418 ADRP X0, 0xFFFFFFFFFCE88000
	0x03C7341C ADD X0, X0, 0x8B7
	0x03C73420 BL 0x1C16CB8
	0x03C73424 MOV X1, X0
	0x03C73428 STR X0, [X20 + 0x730]
	0x03C7342C MOV X0, X19
	0x03C73430 LDP X20, X19, [X31 + 0x10]
	0x03C73434 LDR X30, [X31], #0x20
	0x03C73438 BR X1
	0x03C7343C STP X30, X21, [X31 - 0x20]!
	0x03C73440 STP X20, X19, [X31 + 0x10]
	0x03C73444 ADRP X21, 0x773000
	0x03C73448 LDR X2, [X21 + 0x738]
	0x03C7344C MOV W19, W1
	0x03C73450 MOV X20, X0
	0x03C73454 CBNZ X2, 0x3C7346C
	0x03C73458 ADRP X0, 0xFFFFFFFFFCE94000
	0x03C7345C ADD X0, X0, 0x967
	0x03C73460 BL 0x1C16CB8
	0x03C73464 MOV X2, X0
	0x03C73468 STR X0, [X21 + 0x738]
	0x03C7346C MOV X0, X20
	0x03C73470 MOV W1, W19
	0x03C73474 LDP X20, X19, [X31 + 0x10]
	0x03C73478 LDP X30, X21, [X31], #0x20
	0x03C7347C BR X2
	0x03C73480 STR X30, [X31 - 0x20]!
	0x03C73484 STP X20, X19, [X31 + 0x10]
	0x03C73488 ADRP X20, 0x773000
	0x03C7348C LDR X1, [X20 + 0x740]
	0x03C73490 MOV X19, X0
	0x03C73494 CBNZ X1, 0x3C734AC
	0x03C73498 ADRP X0, 0xFFFFFFFFFCEB2000
	0x03C7349C ADD X0, X0, 0x485
	0x03C734A0 BL 0x1C16CB8
	0x03C734A4 MOV X1, X0
	0x03C734A8 STR X0, [X20 + 0x740]
	0x03C734AC MOV X0, X19
	0x03C734B0 LDP X20, X19, [X31 + 0x10]
	0x03C734B4 LDR X30, [X31], #0x20
	0x03C734B8 BR X1
	0x03C734BC STR X30, [X31 - 0x20]!
	0x03C734C0 STP X20, X19, [X31 + 0x10]
	0x03C734C4 ADRP X20, 0x773000
	0x03C734C8 LDR X8, [X20 + 0x7F0]
	0x03C734CC MOV X19, X0
	0x03C734D0 STR X31, [X31 + 0x8]
	0x03C734D4 CBNZ X8, 0x3C734EC
	0x03C734D8 ADRP X0, 0xFFFFFFFFFCE96000
	0x03C734DC ADD X0, X0, 0x9B4
	0x03C734E0 BL 0x1C16CB8
	0x03C734E4 MOV X8, X0
	0x03C734E8 STR X0, [X20 + 0x7F0]
	0x03C734EC ADD X1, X31, 0x8
	0x03C734F0 MOV X0, X19
	0x03C734F4 BLR X8
	0x03C734F8 LDP S0, S1, [X31 + 0x8]
	0x03C734FC LDP X20, X19, [X31 + 0x10]
	0x03C73500 LDR X30, [X31], #0x20
	0x03C73504 RET
	0x03C73508 STP X30, X21, [X31 - 0x20]!
	0x03C7350C STP X20, X19, [X31 + 0x10]
	0x03C73510 ADRP X21, 0x773000
	0x03C73514 LDR X2, [X21 + 0x7F0]
	0x03C73518 MOV X19, X1
	0x03C7351C MOV X20, X0
	0x03C73520 CBNZ X2, 0x3C73538
	0x03C73524 ADRP X0, 0xFFFFFFFFFCE96000
	0x03C73528 ADD X0, X0, 0x9B4
	0x03C7352C BL 0x1C16CB8
	0x03C73530 MOV X2, X0
	0x03C73534 STR X0, [X21 + 0x7F0]
	0x03C73538 MOV X0, X20
	0x03C7353C MOV X1, X19
	0x03C73540 LDP X20, X19, [X31 + 0x10]
	0x03C73544 LDP X30, X21, [X31], #0x20
	0x03C73548 BR X2
	0x03C7354C STR X30, [X31 - 0x20]!
	0x03C73550 STP X20, X19, [X31 + 0x10]
	0x03C73554 ADRP X20, 0x773000
	0x03C73558 LDR X8, [X20 + 0x7F8]
	0x03C7355C MOV X19, X0
	0x03C73560 STP S0, S1, [X31 + 0x8]
	0x03C73564 CBNZ X8, 0x3C7357C
	0x03C73568 ADRP X0, 0xFFFFFFFFFCEB2000
	0x03C7356C ADD X0, X0, 0x4ED
	0x03C73570 BL 0x1C16CB8
	0x03C73574 MOV X8, X0
	0x03C73578 STR X0, [X20 + 0x7F8]
	0x03C7357C ADD X1, X31, 0x8
	0x03C73580 MOV X0, X19
	0x03C73584 BLR X8
	0x03C73588 LDP X20, X19, [X31 + 0x10]
	0x03C7358C LDR X30, [X31], #0x20
	0x03C73590 RET
	0x03C73594 STP X30, X21, [X31 - 0x20]!
	0x03C73598 STP X20, X19, [X31 + 0x10]
	0x03C7359C ADRP X21, 0x773000
	0x03C735A0 LDR X2, [X21 + 0x7F8]
	0x03C735A4 MOV X19, X1
	0x03C735A8 MOV X20, X0
	0x03C735AC CBNZ X2, 0x3C735C4
	0x03C735B0 ADRP X0, 0xFFFFFFFFFCEB2000
	0x03C735B4 ADD X0, X0, 0x4ED
	0x03C735B8 BL 0x1C16CB8
	0x03C735BC MOV X2, X0
	0x03C735C0 STR X0, [X21 + 0x7F8]
	0x03C735C4 MOV X0, X20
	0x03C735C8 MOV X1, X19
	0x03C735CC LDP X20, X19, [X31 + 0x10]
	0x03C735D0 LDP X30, X21, [X31], #0x20
	0x03C735D4 BR X2
	0x03C735D8 STR X30, [X31 - 0x20]!
	0x03C735DC STP X20, X19, [X31 + 0x10]
	0x03C735E0 ADRP X20, 0x773000
	0x03C735E4 LDR X1, [X20 + 0x748]
	0x03C735E8 MOV X19, X0
	0x03C735EC CBNZ X1, 0x3C73604
	0x03C735F0 ADRP X0, 0xFFFFFFFFFCEAA000
	0x03C735F4 ADD X0, X0, 0x5FF
	0x03C735F8 BL 0x1C16CB8
	0x03C735FC MOV X1, X0
	0x03C73600 STR X0, [X20 + 0x748]
	0x03C73604 MOV X0, X19
	0x03C73608 LDP X20, X19, [X31 + 0x10]
	0x03C7360C LDR X30, [X31], #0x20
	0x03C73610 BR X1
	0x03C73614 STR X30, [X31 - 0x20]!
	0x03C73618 STP X20, X19, [X31 + 0x10]
	0x03C7361C ADRP X20, 0x773000
	0x03C73620 LDR X1, [X20 + 0x750]
	0x03C73624 MOV X19, X0
	0x03C73628 CBNZ X1, 0x3C73640
	0x03C7362C ADRP X0, 0xFFFFFFFFFCE94000
	0x03C73630 ADD X0, X0, 0x9A3
	0x03C73634 BL 0x1C16CB8
	0x03C73638 MOV X1, X0
	0x03C7363C STR X0, [X20 + 0x750]
	0x03C73640 MOV X0, X19
	0x03C73644 LDP X20, X19, [X31 + 0x10]
	0x03C73648 LDR X30, [X31], #0x20
	0x03C7364C BR X1
	0x03C73650 STR X30, [X31 - 0x20]!
	0x03C73654 STP X20, X19, [X31 + 0x10]
	0x03C73658 ADRP X20, 0x773000
	0x03C7365C LDR X1, [X20 + 0x758]
	0x03C73660 MOV X19, X0
	0x03C73664 CBNZ X1, 0x3C7367C
	0x03C73668 ADRP X0, 0xFFFFFFFFFCEA1000
	0x03C7366C ADD X0, X0, 0xFA6
	0x03C73670 BL 0x1C16CB8
	0x03C73674 MOV X1, X0
	0x03C73678 STR X0, [X20 + 0x758]
	0x03C7367C MOV X0, X19
	0x03C73680 LDP X20, X19, [X31 + 0x10]
	0x03C73684 LDR X30, [X31], #0x20
	0x03C73688 BR X1
	0x03C7368C STR X30, [X31 - 0x20]!
	0x03C73690 STP X20, X19, [X31 + 0x10]
	0x03C73694 ADRP X20, 0x773000
	0x03C73698 LDR X1, [X20 + 0x760]
	0x03C7369C MOV X19, X0
	0x03C736A0 CBNZ X1, 0x3C736B8
	0x03C736A4 ADRP X0, 0xFFFFFFFFFCEA1000
	0x03C736A8 ADD X0, X0, 0xFCF
	0x03C736AC BL 0x1C16CB8
	0x03C736B0 MOV X1, X0
	0x03C736B4 STR X0, [X20 + 0x760]
	0x03C736B8 MOV X0, X19
	0x03C736BC LDP X20, X19, [X31 + 0x10]
	0x03C736C0 LDR X30, [X31], #0x20
	0x03C736C4 BR X1
	0x03C736C8 STR X30, [X31 - 0x20]!
	0x03C736CC STP X20, X19, [X31 + 0x10]
	0x03C736D0 ADRP X20, 0x773000
	0x03C736D4 LDR X1, [X20 + 0x770]
	0x03C736D8 MOV X19, X0
	0x03C736DC CBNZ X1, 0x3C736F4
	0x03C736E0 ADRP X0, 0xFFFFFFFFFCE98000
	0x03C736E4 ADD X0, X0, 0x8B7
	0x03C736E8 BL 0x1C16CB8
	0x03C736EC MOV X1, X0
	0x03C736F0 STR X0, [X20 + 0x770]
	0x03C736F4 MOV X0, X19
	0x03C736F8 LDP X20, X19, [X31 + 0x10]
	0x03C736FC LDR X30, [X31], #0x20
	0x03C73700 BR X1
	0x03C73704 STP X30, X21, [X31 - 0x20]!
	0x03C73708 STP X20, X19, [X31 + 0x10]
	0x03C7370C ADRP X21, 0x773000
	0x03C73710 LDR X2, [X21 + 0x778]
	0x03C73714 MOV W19, W1
	0x03C73718 MOV X20, X0
	0x03C7371C CBNZ X2, 0x3C73734
	0x03C73720 ADRP X0, 0xFFFFFFFFFCEA4000
	0x03C73724 ADD X0, X0, 0xE0
	0x03C73728 BL 0x1C16CB8
	0x03C7372C MOV X2, X0
	0x03C73730 STR X0, [X21 + 0x778]
	0x03C73734 MOV X0, X20
	0x03C73738 MOV W1, W19
	0x03C7373C LDP X20, X19, [X31 + 0x10]
	0x03C73740 LDP X30, X21, [X31], #0x20
	0x03C73744 BR X2
	0x03C73748 STR X30, [X31 - 0x20]!
	0x03C7374C STP X20, X19, [X31 + 0x10]
	0x03C73750 ADRP X20, 0x773000
	0x03C73754 LDR X8, [X20 + 0x800]
	0x03C73758 MOV X19, X0
	0x03C7375C STP S0, S1, [X31 + 0x8]
	0x03C73760 CBNZ X8, 0x3C73778
	0x03C73764 ADRP X0, 0xFFFFFFFFFCEB0000
	0x03C73768 ADD X0, X0, 0x6FD
	0x03C7376C BL 0x1C16CB8
	0x03C73770 MOV X8, X0
	0x03C73774 STR X0, [X20 + 0x800]
	0x03C73778 ADD X1, X31, 0x8
	0x03C7377C MOV X0, X19
	0x03C73780 BLR X8
	0x03C73784 LDP X20, X19, [X31 + 0x10]
	0x03C73788 LDR X30, [X31], #0x20
	0x03C7378C RET
	0x03C73790 STP X30, X21, [X31 - 0x20]!
	0x03C73794 STP X20, X19, [X31 + 0x10]
	0x03C73798 ADRP X21, 0x773000
	0x03C7379C LDR X2, [X21 + 0x800]
	0x03C737A0 MOV X19, X1
	0x03C737A4 MOV X20, X0
	0x03C737A8 CBNZ X2, 0x3C737C0
	0x03C737AC ADRP X0, 0xFFFFFFFFFCEB0000
	0x03C737B0 ADD X0, X0, 0x6FD
	0x03C737B4 BL 0x1C16CB8
	0x03C737B8 MOV X2, X0
	0x03C737BC STR X0, [X21 + 0x800]
	0x03C737C0 MOV X0, X20
	0x03C737C4 MOV X1, X19
	0x03C737C8 LDP X20, X19, [X31 + 0x10]
	0x03C737CC LDP X30, X21, [X31], #0x20
	0x03C737D0 BR X2
	0x03C737D4 STR X30, [X31 - 0x20]!
	0x03C737D8 STP X20, X19, [X31 + 0x10]
	0x03C737DC ADRP X20, 0x773000
	0x03C737E0 LDR X1, [X20 + 0x780]
	0x03C737E4 MOV X19, X0
	0x03C737E8 CBNZ X1, 0x3C73800
	0x03C737EC ADRP X0, 0xFFFFFFFFFCE9C000
	0x03C737F0 ADD X0, X0, 0x973
	0x03C737F4 BL 0x1C16CB8
	0x03C737F8 MOV X1, X0
	0x03C737FC STR X0, [X20 + 0x780]
	0x03C73800 MOV X0, X19
	0x03C73804 LDP X20, X19, [X31 + 0x10]
	0x03C73808 LDR X30, [X31], #0x20
	0x03C7380C BR X1
	0x03C73810 STP X30, X21, [X31 - 0x20]!
	0x03C73814 STP X20, X19, [X31 + 0x10]
	0x03C73818 ADRP X21, 0x773000
	0x03C7381C LDR X2, [X21 + 0x788]
	0x03C73820 MOV X19, X1
	0x03C73824 MOV X20, X0
	0x03C73828 CBNZ X2, 0x3C73840
	0x03C7382C ADRP X0, 0xFFFFFFFFFCEB0000
	0x03C73830 ADD X0, X0, 0x672
	0x03C73834 BL 0x1C16CB8
	0x03C73838 MOV X2, X0
	0x03C7383C STR X0, [X21 + 0x788]
	0x03C73840 MOV X0, X20
	0x03C73844 MOV X1, X19
	0x03C73848 LDP X20, X19, [X31 + 0x10]
	0x03C7384C LDP X30, X21, [X31], #0x20
	0x03C73850 BR X2
	0x03C73854 STR X30, [X31 - 0x20]!
	0x03C73858 STP X20, X19, [X31 + 0x10]
	0x03C7385C ADRP X20, 0x773000
	0x03C73860 LDR X1, [X20 + 0x790]
	0x03C73864 MOV X19, X0
	0x03C73868 CBNZ X1, 0x3C73880
	0x03C7386C ADRP X0, 0xFFFFFFFFFCE7E000
	0x03C73870 ADD X0, X0, 0x5EF
	0x03C73874 BL 0x1C16CB8
	0x03C73878 MOV X1, X0
	0x03C7387C STR X0, [X20 + 0x790]
	0x03C73880 MOV X0, X19
	0x03C73884 LDP X20, X19, [X31 + 0x10]
	0x03C73888 LDR X30, [X31], #0x20
	0x03C7388C BR X1
	0x03C73890 STP X30, X21, [X31 - 0x20]!
	0x03C73894 STP X20, X19, [X31 + 0x10]
	0x03C73898 ADRP X21, 0x773000
	0x03C7389C LDR X2, [X21 + 0x798]
	0x03C738A0 MOV W19, W1
	0x03C738A4 MOV X20, X0
	0x03C738A8 CBNZ X2, 0x3C738C0
	0x03C738AC ADRP X0, 0xFFFFFFFFFCE7E000
	0x03C738B0 ADD X0, X0, 0x625
	0x03C738B4 BL 0x1C16CB8
	0x03C738B8 MOV X2, X0
	0x03C738BC STR X0, [X21 + 0x798]
	0x03C738C0 MOV X0, X20
	0x03C738C4 MOV W1, W19
	0x03C738C8 LDP X20, X19, [X31 + 0x10]
	0x03C738CC LDP X30, X21, [X31], #0x20
	0x03C738D0 BR X2
	0x03C738D4 STP X30, X21, [X31 - 0x20]!
	0x03C738D8 STP X20, X19, [X31 + 0x10]
	0x03C738DC ADRP X21, 0x773000
	0x03C738E0 LDR X2, [X21 + 0x7A0]
	0x03C738E4 MOV W19, W1
	0x03C738E8 MOV X20, X0
	0x03C738EC CBNZ X2, 0x3C73904
	0x03C738F0 ADRP X0, 0xFFFFFFFFFCE90000
	0x03C738F4 ADD X0, X0, 0x7DA
	0x03C738F8 BL 0x1C16CB8
	0x03C738FC MOV X2, X0
	0x03C73900 STR X0, [X21 + 0x7A0]
	0x03C73904 MOV X0, X20
	0x03C73908 MOV W1, W19
	0x03C7390C LDP X20, X19, [X31 + 0x10]
	0x03C73910 LDP X30, X21, [X31], #0x20

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X20, 0x775000
	013 Move W8, [X20+1749]
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {114}
	019 Move X0, 0x4EF000
	020 Move X0, [X0+1032]
	021 Call 0x1C17CF4
	022 Move X0, 0x4EF000
	023 Move X0, [X0+1040]
	024 Call 0x1C17CF4
	025 Move X0, 0x4EF000
	026 Move X0, [X0+1048]
	027 Call 0x1C17CF4
	028 Move X0, 0x4EF000
	029 Move X0, [X0+1056]
	030 Call 0x1C17CF4
	031 Move X0, 0x4A9000
	032 Move X0, [X0+2192]
	033 Call 0x1C17CF4
	034 Move X0, 0x48F000
	035 Move X0, [X0+752]
	036 Call 0x1C17CF4
	037 Move X0, 0x4EF000
	038 Move X0, [X0+1064]
	039 Call 0x1C17CF4
	040 Move X0, 0x4EF000
	041 Move X0, [X0+1072]
	042 Call 0x1C17CF4
	043 Move X0, 0x4D5000
	044 Move X0, [X0+3792]
	045 Call 0x1C17CF4
	046 Move X0, 0x4EF000
	047 Move X0, [X0+1080]
	048 Call 0x1C17CF4
	049 Move X0, 0x4EF000
	050 Move X0, [X0+1088]
	051 Call 0x1C17CF4
	052 Move X0, 0x4EF000
	053 Move X0, [X0+1096]
	054 Call 0x1C17CF4
	055 Move X0, 0x4EF000
	056 Move X0, [X0+1104]
	057 Call 0x1C17CF4
	058 Move X0, 0x4EF000
	059 Move X0, [X0+1112]
	060 Call 0x1C17CF4
	061 Move X0, 0x4EF000
	062 Move X0, [X0+1120]
	063 Call 0x1C17CF4
	064 Move X0, 0x4EF000
	065 Move X0, [X0+1128]
	066 Call 0x1C17CF4
	067 Move X0, 0x4EF000
	068 Move X0, [X0+1136]
	069 Call 0x1C17CF4
	070 Move X0, 0x4AC000
	071 Move X0, [X0+3160]
	072 Call 0x1C17CF4
	073 Move X0, 0x4EF000
	074 Move X0, [X0+1144]
	075 Call 0x1C17CF4
	076 Move X0, 0x4EF000
	077 Move X0, [X0+1152]
	078 Call 0x1C17CF4
	079 Move X0, 0x4EF000
	080 Move X0, [X0+1160]
	081 Call 0x1C17CF4
	082 Move X0, 0x4EF000
	083 Move X0, [X0+1168]
	084 Call 0x1C17CF4
	085 Move X0, 0x4EF000
	086 Move X0, [X0+1176]
	087 Call 0x1C17CF4
	088 Move X0, 0x4EF000
	089 Move X0, [X0+1184]
	090 Call 0x1C17CF4
	091 Move X0, 0x4EF000
	092 Move X0, [X0+1192]
	093 Call 0x1C17CF4
	094 Move X0, 0x4EF000
	095 Move X0, [X0+1200]
	096 Call 0x1C17CF4
	097 Move X0, 0x4EF000
	098 Move X0, [X0+1208]
	099 Call 0x1C17CF4
	100 Move X0, 0x4EF000
	101 Move X0, [X0+1216]
	102 Call 0x1C17CF4
	103 Move X0, 0x4EF000
	104 Move X0, [X0+1224]
	105 Call 0x1C17CF4
	106 Move X0, 0x4EF000
	107 Move X0, [X0+1232]
	108 Call 0x1C17CF4
	109 Move X0, 0x4EF000
	110 Move X0, [X0+1240]
	111 Call 0x1C17CF4
	112 Move W8, 1
	113 Move [X20+1749], W8
	114 Move X8, [X19+32]
	115 Compare X8, 0
	116 JumpIfNotEqual {124}
	117 Move X8, 0x4A9000
	118 Move X8, [X8+2192]
	119 Move X0, [X8]
	120 Call 0x1C17F10
	121 Move X20, X0
	122 Call GUIStyle..ctor, X0
	123 Move [X19+32], X20
	124 Move X8, [X19+40]
	125 Compare X8, 0
	126 JumpIfNotEqual {134}
	127 Move X8, 0x4A9000
	128 Move X8, [X8+2192]
	129 Move X0, [X8]
	130 Call 0x1C17F10
	131 Move X20, X0
	132 Call GUIStyle..ctor, X0
	133 Move [X19+40], X20
	134 Move X8, [X19+48]
	135 Compare X8, 0
	136 JumpIfNotEqual {144}
	137 Move X8, 0x4A9000
	138 Move X8, [X8+2192]
	139 Move X0, [X8]
	140 Call 0x1C17F10
	141 Move X20, X0
	142 Call GUIStyle..ctor, X0
	143 Move [X19+48], X20
	144 Move X8, [X19+56]
	145 Compare X8, 0
	146 JumpIfNotEqual {154}
	147 Move X8, 0x4A9000
	148 Move X8, [X8+2192]
	149 Move X0, [X8]
	150 Call 0x1C17F10
	151 Move X20, X0
	152 Call GUIStyle..ctor, X0
	153 Move [X19+56], X20
	154 Move X8, [X19+80]
	155 Compare X8, 0
	156 JumpIfNotEqual {164}
	157 Move X8, 0x4A9000
	158 Move X8, [X8+2192]
	159 Move X0, [X8]
	160 Call 0x1C17F10
	161 Move X20, X0
	162 Call GUIStyle..ctor, X0
	163 Move [X19+80], X20
	164 Move X8, [X19+64]
	165 Compare X8, 0
	166 JumpIfNotEqual {174}
	167 Move X8, 0x4A9000
	168 Move X8, [X8+2192]
	169 Move X0, [X8]
	170 Call 0x1C17F10
	171 Move X20, X0
	172 Call GUIStyle..ctor, X0
	173 Move [X19+64], X20
	174 Move X8, [X19+72]
	175 Compare X8, 0
	176 JumpIfNotEqual {184}
	177 Move X8, 0x4A9000
	178 Move X8, [X8+2192]
	179 Move X0, [X8]
	180 Call 0x1C17F10
	181 Move X20, X0
	182 Call GUIStyle..ctor, X0
	183 Move [X19+72], X20
	184 Move X8, [X19+88]
	185 Compare X8, 0
	186 JumpIfNotEqual {194}
	187 Move X8, 0x4A9000
	188 Move X8, [X8+2192]
	189 Move X0, [X8]
	190 Call 0x1C17F10
	191 Move X20, X0
	192 Call GUIStyle..ctor, X0
	193 Move [X19+88], X20
	194 Move X8, [X19+96]
	195 Compare X8, 0
	196 JumpIfNotEqual {204}
	197 Move X8, 0x4A9000
	198 Move X8, [X8+2192]
	199 Move X0, [X8]
	200 Call 0x1C17F10
	201 Move X20, X0
	202 Call GUIStyle..ctor, X0
	203 Move [X19+96], X20
	204 Move X8, [X19+112]
	205 Compare X8, 0
	206 JumpIfNotEqual {214}
	207 Move X8, 0x4A9000
	208 Move X8, [X8+2192]
	209 Move X0, [X8]
	210 Call 0x1C17F10
	211 Move X20, X0
	212 Call GUIStyle..ctor, X0
	213 Move [X19+112], X20
	214 Move X8, [X19+120]
	215 Compare X8, 0
	216 JumpIfNotEqual {224}
	217 Move X8, 0x4A9000
	218 Move X8, [X8+2192]
	219 Move X0, [X8]
	220 Call 0x1C17F10
	221 Move X20, X0
	222 Call GUIStyle..ctor, X0
	223 Move [X19+120], X20
	224 Move X8, [X19+144]
	225 Compare X8, 0
	226 JumpIfNotEqual {234}
	227 Move X8, 0x4A9000
	228 Move X8, [X8+2192]
	229 Move X0, [X8]
	230 Call 0x1C17F10
	231 Move X20, X0
	232 Call GUIStyle..ctor, X0
	233 Move [X19+144], X20
	234 Move X8, [X19+152]
	235 Compare X8, 0
	236 JumpIfNotEqual {244}
	237 Move X8, 0x4A9000
	238 Move X8, [X8+2192]
	239 Move X0, [X8]
	240 Call 0x1C17F10
	241 Move X20, X0
	242 Call GUIStyle..ctor, X0
	243 Move [X19+152], X20
	244 Move X8, [X19+160]
	245 Compare X8, 0
	246 JumpIfNotEqual {254}
	247 Move X8, 0x4A9000
	248 Move X8, [X8+2192]
	249 Move X0, [X8]
	250 Call 0x1C17F10
	251 Move X20, X0
	252 Call GUIStyle..ctor, X0
	253 Move [X19+160], X20
	254 Move X8, [X19+168]
	255 Compare X8, 0
	256 JumpIfNotEqual {264}
	257 Move X8, 0x4A9000
	258 Move X8, [X8+2192]
	259 Move X0, [X8]
	260 Call 0x1C17F10
	261 Move X20, X0
	262 Call GUIStyle..ctor, X0
	263 Move [X19+168], X20
	264 Move X8, [X19+176]
	265 Compare X8, 0
	266 JumpIfNotEqual {274}
	267 Move X8, 0x4A9000
	268 Move X8, [X8+2192]
	269 Move X0, [X8]
	270 Call 0x1C17F10
	271 Move X20, X0
	272 Call GUIStyle..ctor, X0
	273 Move [X19+176], X20
	274 Move X8, [X19+184]
	275 Compare X8, 0
	276 JumpIfNotEqual {284}
	277 Move X8, 0x4A9000
	278 Move X8, [X8+2192]
	279 Move X0, [X8]
	280 Call 0x1C17F10
	281 Move X20, X0
	282 Call GUIStyle..ctor, X0
	283 Move [X19+184], X20
	284 Move X8, [X19+192]
	285 Compare X8, 0
	286 JumpIfNotEqual {294}
	287 Move X8, 0x4A9000
	288 Move X8, [X8+2192]
	289 Move X0, [X8]
	290 Call 0x1C17F10
	291 Move X20, X0
	292 Call GUIStyle..ctor, X0
	293 Move [X19+192], X20
	294 Move X8, [X19+200]
	295 Compare X8, 0
	296 JumpIfNotEqual {304}
	297 Move X8, 0x4A9000
	298 Move X8, [X8+2192]
	299 Move X0, [X8]
	300 Call 0x1C17F10
	301 Move X20, X0
	302 Call GUIStyle..ctor, X0
	303 Move [X19+200], X20
	304 Move X21, 0x48F000
	305 Move X8, [X19+208]
	306 Move X21, [X21+752]
	307 Compare X8, 0
	308 JumpIfNotEqual {316}
	309 Move X8, 0x4A9000
	310 Move X8, [X8+2192]
	311 Move X0, [X8]
	312 Call 0x1C17F10
	313 Move X20, X0
	314 Call GUIStyle..ctor, X0
	315 Move [X19+208], X20
	316 Move X0, [X21]
	317 Move W8, [X0+224]
	318 Compare W8, 0
	319 JumpIfNotEqual {321}
	320 Call 0x1C17DFC
	321 Move X20, 0x76B000
	322 Move W8, [X20+2342]
	323 Compare W8, 0
	324 JumpIfNotEqual {330}
	325 Move X0, 0x48F000
	326 Move X0, [X0+752]
	327 Call 0x1C17CF4
	328 Move W8, 1
	329 Move [X20+2342], W8
	330 Move X0, [X21]
	331 Move X22, 0x4EF000
	332 Move X20, 0x4EF000
	333 Move W8, [X0+224]
	334 Move X22, [X22+1056]
	335 Move X20, [X20+1040]
	336 Compare W8, 0
	337 JumpIfNotEqual {340}
	338 Call 0x1C17DFC
	339 Move X0, [X21]
	340 Move X8, [X0+184]
	341 Move X0, [X22]
	342 Move X21, [X8+24]
	343 Call 0x1C17F10
	344 Move X2, [X20]
	345 Move X1, X21
	346 Move X20, X0
	347 Call Dictionary`2<Object, Object>..ctor, X0, X1
	348 Move X25, X19
	349 Move [X25+232], X20
	350 Compare X20, 0
	351 JumpIfEqual {1072}
	352 Move X21, 0x4EF000
	353 Move X24, 0x4EF000
	354 Move X21, [X21+1088]
	355 Move X24, [X24+1048]
	356 Move X2, [X19+32]
	357 Move X0, X20
	358 Move X1, [X21]
	359 Move X3, [X24]
	360 Call Dictionary`2<Object, Object>.set_Item, X0, X1, X2
	361 Move X20, [X19+32]
	362 Compare X20, 0
	363 JumpIfEqual {1072}
	364 Move X21, [X21]
	365 Move X23, 0x775000
	366 Move [X20+120], X21
	367 Move X8, [X23+1824]
	368 Compare X8, 0
	369 JumpIfNotEqual {375}
	370 Move X0, -51822592
	371 Add X0, X0, 1498
	372 Call 0x1C17CB8
	373 Move X8, X0
	374 Move [X23+1824], X0
	375 Move X0, X20
	376 Move X1, X21
	377 NotImplemented "Instruction BLR not yet implemented."
	378 Move X0, [X25]
	379 Compare X0, 0
	380 JumpIfEqual {1072}
	381 Move X21, 0x4D5000
	382 Move X21, [X21+3792]
	383 Move X2, [X19+40]
	384 Move X3, [X24]
	385 Move X1, [X21]
	386 Call Dictionary`2<Object, Object>.set_Item, X0, X1, X2
	387 Move X20, [X19+40]
	388 Compare X20, 0
	389 JumpIfEqual {1072}
	390 Move X21, [X21]
	391 Move [X20+120], X21
	392 Move X8, [X23+1824]
	393 Compare X8, 0
	394 JumpIfNotEqual {400}
	395 Move X0, -51822592
	396 Add X0, X0, 1498
	397 Call 0x1C17CB8
	398 Move X8, X0
	399 Move [X23+1824], X0
	400 Move X0, X20
	401 Move X1, X21
	402 NotImplemented "Instruction BLR not yet implemented."
	403 Move X0, [X25]
	404 Compare X0, 0
	405 JumpIfEqual {1072}
	406 Move X21, 0x4EE000
	407 Move X21, [X21+1120]
	408 Move X2, [X19+48]
	409 Move X3, [X24]
	410 Move X1, [X21]
	411 Call Dictionary`2<Object, Object>.set_Item, X0, X1, X2
	412 Move X20, [X19+48]
	413 Compare X20, 0
	414 JumpIfEqual {1072}
	415 Move X21, [X21]
	416 Move [X20+120], X21
	417 Move X8, [X23+1824]
	418 Compare X8, 0
	419 JumpIfNotEqual {425}
	420 Move X0, -51826688
	421 Add X0, X0, 1498
	422 Call 0x1C17CB8
	423 Move X8, X0
	424 Move [X23+1824], X0
	425 Move X0, X20
	426 Move X1, X21
	427 NotImplemented "Instruction BLR not yet implemented."
	428 Move X0, [X25]
	429 Compare X0, 0
	430 JumpIfEqual {1072}
	431 Move X21, 0x4AB000
	432 Move X21, [X21+3160]
	433 Move X2, [X19+56]
	434 Move X3, [X24]
	435 Move X1, [X21]
	436 Call Dictionary`2<Object, Object>.set_Item, X0, X1, X2
	437 Move X20, [X19+56]
	438 Compare X20, 0
	439 JumpIfEqual {1072}
	440 Move X21, [X21]
	441 Move [X20+120], X21
	442 Move X8, [X23+1824]
	443 Compare X8, 0
	444 JumpIfNotEqual {450}
	445 Move X0, -51826688
	446 Add X0, X0, 1498
	447 Call 0x1C17CB8
	448 Move X8, X0
	449 Move [X23+1824], X0
	450 Move X0, X20
	451 Move X1, X21
	452 NotImplemented "Instruction BLR not yet implemented."
	453 Move X0, [X25]
	454 Compare X0, 0
	455 JumpIfEqual {1072}
	456 Move X21, 0x4EE000
	457 Move X21, [X21+1232]
	458 Move X2, [X19+80]
	459 Move X3, [X24]
	460 Move X1, [X21]
	461 Call Dictionary`2<Object, Object>.set_Item, X0, X1, X2
	462 Move X20, [X19+80]
	463 Compare X20, 0
	464 JumpIfEqual {1072}
	465 Move X21, [X21]
	466 Move [X20+120], X21
	467 Move X8, [X23+1824]
	468 Compare X8, 0
	469 JumpIfNotEqual {475}
	470 Move X0, -51826688
	471 Add X0, X0, 1498
	472 Call 0x1C17CB8
	473 Move X8, X0
	474 Move [X23+1824], X0
	475 Move X0, X20
	476 Move X1, X21
	477 NotImplemented "Instruction BLR not yet implemented."
	478 Move X0, [X25]
	479 Compare X0, 0
	480 JumpIfEqual {1072}
	481 Move X21, 0x4EE000
	482 Move X21, [X21+1064]
	483 Move X2, [X19+64]
	484 Move X3, [X24]
	485 Move X1, [X21]
	486 Call Dictionary`2<Object, Object>.set_Item, X0, X1, X2
	487 Move X20, [X19+64]
	488 Compare X20, 0
	489 JumpIfEqual {1072}
	490 Move X21, [X21]
	491 Move [X20+120], X21
	492 Move X8, [X23+1824]
	493 Compare X8, 0
	494 JumpIfNotEqual {500}
	495 Move X0, -51826688
	496 Add X0, X0, 1498
	497 Call 0x1C17CB8
	498 Move X8, X0
	499 Move [X23+1824], X0
	500 Move X0, X20
	501 Move X1, X21
	502 NotImplemented "Instruction BLR not yet implemented."
	503 Move X0, [X25]
	504 Compare X0, 0
	505 JumpIfEqual {1072}
	506 Move X21, 0x4EE000
	507 Move X21, [X21+1160]
	508 Move X2, [X19+72]
	509 Move X3, [X24]
	510 Move X1, [X21]
	511 Call Dictionary`2<Object, Object>.set_Item, X0, X1, X2
	512 Move X20, [X19+72]
	513 Compare X20, 0
	514 JumpIfEqual {1072}
	515 Move X21, [X21]
	516 Move [X20+120], X21
	517 Move X8, [X23+1824]
	518 Compare X8, 0
	519 JumpIfNotEqual {525}
	520 Move X0, -51826688
	521 Add X0, X0, 1498
	522 Call 0x1C17CB8
	523 Move X8, X0
	524 Move [X23+1824], X0
	525 Move X0, X20
	526 Move X1, X21
	527 NotImplemented "Instruction BLR not yet implemented."
	528 Move X0, [X25]
	529 Compare X0, 0
	530 JumpIfEqual {1072}
	531 Move X21, 0x4EE000
	532 Move X21, [X21+1184]
	533 Move X2, [X19+88]
	534 Move X3, [X24]
	535 Move X1, [X21]
	536 Call Dictionary`2<Object, Object>.set_Item, X0, X1, X2
	537 Move X20, [X19+88]
	538 Compare X20, 0
	539 JumpIfEqual {1072}
	540 Move X21, [X21]
	541 Move [X20+120], X21
	542 Move X8, [X23+1824]
	543 Compare X8, 0
	544 JumpIfNotEqual {550}
	545 Move X0, -51826688
	546 Add X0, X0, 1498
	547 Call 0x1C17CB8
	548 Move X8, X0
	549 Move [X23+1824], X0
	550 Move X0, X20
	551 Move X1, X21
	552 NotImplemented "Instruction BLR not yet implemented."
	553 Move X0, [X25]
	554 Compare X0, 0
	555 JumpIfEqual {1072}
	556 Move X21, 0x4EE000
	557 Move X21, [X21+1192]
	558 Move X2, [X19+96]
	559 Move X3, [X24]
	560 Move X1, [X21]
	561 Call Dictionary`2<Object, Object>.set_Item, X0, X1, X2
	562 Move X20, [X19+96]
	563 Compare X20, 0
	564 JumpIfEqual {1072}
	565 Move X21, [X21]
	566 Move [X20+120], X21
	567 Move X8, [X23+1824]
	568 Compare X8, 0
	569 JumpIfNotEqual {575}
	570 Move X0, -51826688
	571 Add X0, X0, 1498
	572 Call 0x1C17CB8
	573 Move X8, X0
	574 Move [X23+1824], X0
	575 Move X0, X20
	576 Move X1, X21
	577 NotImplemented "Instruction BLR not yet implemented."
	578 Move X0, [X25]
	579 Compare X0, 0
	580 JumpIfEqual {1072}
	581 Move X21, 0x4EE000
	582 Move X21, [X21+1096]
	583 Move X2, [X19+112]
	584 Move X3, [X24]
	585 Move X1, [X21]
	586 Call Dictionary`2<Object, Object>.set_Item, X0, X1, X2
	587 Move X20, [X19+112]
	588 Compare X20, 0
	589 JumpIfEqual {1072}
	590 Move X21, [X21]
	591 Move [X20+120], X21
	592 Move X8, [X23+1824]
	593 Compare X8, 0
	594 JumpIfNotEqual {600}
	595 Move X0, -51826688
	596 Add X0, X0, 1498
	597 Call 0x1C17CB8
	598 Move X8, X0
	599 Move [X23+1824], X0
	600 Move X0, X20
	601 Move X1, X21
	602 NotImplemented "Instruction BLR not yet implemented."
	603 Move X0, [X25]
	604 Compare X0, 0
	605 JumpIfEqual {1072}
	606 Move X21, 0x4EE000
	607 Move X21, [X21+1224]
	608 Move X2, [X19+120]
	609 Move X3, [X24]
	610 Move X1, [X21]
	611 Call Dictionary`2<Object, Object>.set_Item, X0, X1, X2
	612 Move X20, [X19+120]
	613 Compare X20, 0
	614 JumpIfEqual {1072}
	615 Move X21, [X21]
	616 Move [X20+120], X21
	617 Move X8, [X23+1824]
	618 Compare X8, 0
	619 JumpIfNotEqual {625}
	620 Move X0, -51826688
	621 Add X0, X0, 1498
	622 Call 0x1C17CB8
	623 Move X8, X0
	624 Move [X23+1824], X0
	625 Move X0, X20
	626 Move X1, X21
	627 NotImplemented "Instruction BLR not yet implemented."
	628 Move X0, [X25]
	629 Compare X0, 0
	630 JumpIfEqual {1072}
	631 Move X21, 0x4EE000
	632 Move X21, [X21+1128]
	633 Move X2, [X19+144]
	634 Move X3, [X24]
	635 Move X1, [X21]
	636 Call Dictionary`2<Object, Object>.set_Item, X0, X1, X2
	637 Move X20, [X19+144]
	638 Compare X20, 0
	639 JumpIfEqual {1072}
	640 Move X21, [X21]
	641 Move [X20+120], X21
	642 Move X8, [X23+1824]
	643 Compare X8, 0
	644 JumpIfNotEqual {650}
	645 Move X0, -51826688
	646 Add X0, X0, 1498
	647 Call 0x1C17CB8
	648 Move X8, X0
	649 Move [X23+1824], X0
	650 Move X0, X20
	651 Move X1, X21
	652 NotImplemented "Instruction BLR not yet implemented."
	653 Move X0, [X25]
	654 Compare X0, 0
	655 JumpIfEqual {1072}
	656 Move X21, 0x4EE000
	657 Move X21, [X21+1136]
	658 Move X2, [X19+152]
	659 Move X3, [X24]
	660 Move X1, [X21]
	661 Call Dictionary`2<Object, Object>.set_Item, X0, X1, X2
	662 Move X20, [X19+152]
	663 Compare X20, 0
	664 JumpIfEqual {1072}
	665 Move X21, [X21]
	666 Move [X20+120], X21
	667 Move X8, [X23+1824]
	668 Compare X8, 0
	669 JumpIfNotEqual {675}
	670 Move X0, -51826688
	671 Add X0, X0, 1498
	672 Call 0x1C17CB8
	673 Move X8, X0
	674 Move [X23+1824], X0
	675 Move X0, X20
	676 Move X1, X21
	677 NotImplemented "Instruction BLR not yet implemented."
	678 Move X0, [X25]
	679 Compare X0, 0
	680 JumpIfEqual {1072}
	681 Move X21, 0x4EE000
	682 Move X21, [X21+1072]
	683 Move X2, [X19+160]
	684 Move X3, [X24]
	685 Move X1, [X21]
	686 Call Dictionary`2<Object, Object>.set_Item, X0, X1, X2
	687 Move X20, [X19+160]
	688 Compare X20, 0
	689 JumpIfEqual {1072}
	690 Move X21, [X21]
	691 Move [X20+120], X21
	692 Move X8, [X23+1824]
	693 Compare X8, 0
	694 JumpIfNotEqual {700}
	695 Move X0, -51826688
	696 Add X0, X0, 1498
	697 Call 0x1C17CB8
	698 Move X8, X0
	699 Move [X23+1824], X0
	700 Move X0, X20
	701 Move X1, X21
	702 NotImplemented "Instruction BLR not yet implemented."
	703 Move X0, [X25]
	704 Compare X0, 0
	705 JumpIfEqual {1072}
	706 Move X21, 0x4EE000
	707 Move X21, [X21+1208]
	708 Move X2, [X19+168]
	709 Move X3, [X24]
	710 Move X1, [X21]
	711 Call Dictionary`2<Object, Object>.set_Item, X0, X1, X2
	712 Move X20, [X19+168]
	713 Compare X20, 0
	714 JumpIfEqual {1072}
	715 Move X21, [X21]
	716 Move [X20+120], X21
	717 Move X8, [X23+1824]
	718 Compare X8, 0
	719 JumpIfNotEqual {725}
	720 Move X0, -51826688
	721 Add X0, X0, 1498
	722 Call 0x1C17CB8
	723 Move X8, X0
	724 Move [X23+1824], X0
	725 Move X0, X20
	726 Move X1, X21
	727 NotImplemented "Instruction BLR not yet implemented."
	728 Move X0, [X25]
	729 Compare X0, 0
	730 JumpIfEqual {1072}
	731 Move X21, 0x4EE000
	732 Move X21, [X21+1240]
	733 Move X2, [X19+176]
	734 Move X3, [X24]
	735 Move X1, [X21]
	736 Call Dictionary`2<Object, Object>.set_Item, X0, X1, X2
	737 Move X20, [X19+176]
	738 Compare X20, 0
	739 JumpIfEqual {1072}
	740 Move X21, [X21]
	741 Move [X20+120], X21
	742 Move X8, [X23+1824]
	743 Compare X8, 0
	744 JumpIfNotEqual {750}
	745 Move X0, -51826688
	746 Add X0, X0, 1498
	747 Call 0x1C17CB8
	748 Move X8, X0
	749 Move [X23+1824], X0
	750 Move X0, X20
	751 Move X1, X21
	752 NotImplemented "Instruction BLR not yet implemented."
	753 Move X0, [X25]
	754 Compare X0, 0
	755 JumpIfEqual {1072}
	756 Move X21, 0x4EE000
	757 Move X21, [X21+1144]
	758 Move X2, [X19+184]
	759 Move X3, [X24]
	760 Move X1, [X21]
	761 Call Dictionary`2<Object, Object>.set_Item, X0, X1, X2
	762 Move X20, [X19+184]
	763 Compare X20, 0
	764 JumpIfEqual {1072}
	765 Move X21, [X21]
	766 Move [X20+120], X21
	767 Move X8, [X23+1824]
	768 Compare X8, 0
	769 JumpIfNotEqual {775}
	770 Move X0, -51826688
	771 Add X0, X0, 1498
	772 Call 0x1C17CB8
	773 Move X8, X0
	774 Move [X23+1824], X0
	775 Move X0, X20
	776 Move X1, X21
	777 NotImplemented "Instruction BLR not yet implemented."
	778 Move X0, [X25]
	779 Compare X0, 0
	780 JumpIfEqual {1072}
	781 Move X21, 0x4EE000
	782 Move X21, [X21+1152]
	783 Move X2, [X19+192]
	784 Move X3, [X24]
	785 Move X1, [X21]
	786 Call Dictionary`2<Object, Object>.set_Item, X0, X1, X2
	787 Move X20, [X19+192]
	788 Compare X20, 0
	789 JumpIfEqual {1072}
	790 Move X21, [X21]
	791 Move [X20+120], X21
	792 Move X8, [X23+1824]
	793 Compare X8, 0
	794 JumpIfNotEqual {800}
	795 Move X0, -51826688
	796 Add X0, X0, 1498
	797 Call 0x1C17CB8
	798 Move X8, X0
	799 Move [X23+1824], X0
	800 Move X0, X20
	801 Move X1, X21
	802 NotImplemented "Instruction BLR not yet implemented."
	803 Move X0, [X25]
	804 Compare X0, 0
	805 JumpIfEqual {1072}
	806 Move X21, 0x4EE000
	807 Move X21, [X21+1080]
	808 Move X2, [X19+200]
	809 Move X3, [X24]
	810 Move X1, [X21]
	811 Call Dictionary`2<Object, Object>.set_Item, X0, X1, X2
	812 Move X20, [X19+200]
	813 Compare X20, 0
	814 JumpIfEqual {1072}
	815 Move X21, [X21]
	816 Move [X20+120], X21
	817 Move X8, [X23+1824]
	818 Compare X8, 0
	819 JumpIfNotEqual {825}
	820 Move X0, -51826688
	821 Add X0, X0, 1498
	822 Call 0x1C17CB8
	823 Move X8, X0
	824 Move [X23+1824], X0
	825 Move X0, X20
	826 Move X1, X21
	827 NotImplemented "Instruction BLR not yet implemented."
	828 Move X0, [X25]
	829 Compare X0, 0
	830 JumpIfEqual {1072}
	831 Move X21, 0x4EE000
	832 Move X21, [X21+1168]
	833 Move X2, [X19+208]
	834 Move X3, [X24]
	835 Move X1, [X21]
	836 Call Dictionary`2<Object, Object>.set_Item, X0, X1, X2
	837 Move X20, [X19+208]
	838 Compare X20, 0
	839 JumpIfEqual {1072}
	840 Move X21, [X21]
	841 Move [X20+120], X21
	842 Move X8, [X23+1824]
	843 Compare X8, 0
	844 JumpIfNotEqual {850}
	845 Move X0, -51826688
	846 Add X0, X0, 1498
	847 Call 0x1C17CB8
	848 Move X8, X0
	849 Move [X23+1824], X0
	850 Move X0, X20
	851 Move X1, X21
	852 NotImplemented "Instruction BLR not yet implemented."
	853 Move X8, [X19+216]
	854 Compare X8, 0
	855 JumpIfEqual {897}
	856 Move X20, -51851264
	857 Move W26, 4
	858 Move X27, 0x774000
	859 Add X20, X20, 2153
	860 Move W9, [X8+24]
	861 Subtract X28, X26, 4
	862 NotImplemented "Instruction CMP not yet implemented."
	863 NotImplemented "Instruction CMP not yet implemented."
	864 Move X22, [X8]
	865 Compare X22, 0
	866 JumpIfEqual {894}
	867 Move X1, [X22+120]
	868 Move X21, [X25]
	869 Compare X1, 0
	870 JumpIfNotEqual {885}
	871 Move X8, [X27+1816]
	872 Compare X8, 0
	873 JumpIfNotEqual {878}
	874 Move X0, X20
	875 Call 0x1C17CB8
	876 Move X8, X0
	877 Move [X27+1816], X0
	878 Move X0, X22
	879 NotImplemented "Instruction BLR not yet implemented."
	880 Move [X22+120], X0
	881 Move X8, [X19+216]
	882 Compare X8, 0
	883 JumpIfEqual {1072}
	884 Move X1, X0
	885 Move W9, [X8+24]
	886 NotImplemented "Instruction CMP not yet implemented."
	887 Compare X21, 0
	888 JumpIfEqual {1072}
	889 Move X2, [X8]
	890 Move X3, [X24]
	891 Move X0, X21
	892 Call Dictionary`2<Object, Object>.set_Item, X0, X1, X2
	893 Move X8, [X19+216]
	894 Add X26, X26, 1
	895 Compare X8, 0
	896 JumpIfNotEqual {860}
	897 Move X0, [X19+232]
	898 Compare X0, 0
	899 JumpIfEqual {1072}
	900 Move X27, 0x4EE000
	901 Move X26, 0x4EE000
	902 Move X27, [X27+1216]
	903 Move X26, [X26+1032]
	904 Add X20, X19, 104
	905 Move X2, X20
	906 Move X1, [X27]
	907 Move X3, [X26]
	908 Call Dictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	909 Move TEMP, X0
	910 And TEMP, TEMP, 1
	911 Compare TEMP, 1
	912 JumpIfEqual {944}
	913 Move X8, 0x4A8000
	914 Move X8, [X8+2192]
	915 Move X0, [X8]
	916 Call 0x1C17F10
	917 Move X21, X0
	918 Call GUIStyle..ctor, X0
	919 Move [X20], X21
	920 Compare X21, 0
	921 JumpIfEqual {1072}
	922 Move X8, 0x4EE000
	923 Move X8, [X8+1112]
	924 Move X22, [X8]
	925 Move [X21+120], X22
	926 Move X8, [X23+1824]
	927 Compare X8, 0
	928 JumpIfNotEqual {934}
	929 Move X0, -51826688
	930 Add X0, X0, 1498
	931 Call 0x1C17CB8
	932 Move X8, X0
	933 Move [X23+1824], X0
	934 Move X0, X21
	935 Move X1, X22
	936 NotImplemented "Instruction BLR not yet implemented."
	937 Move X0, [X25]
	938 Compare X0, 0
	939 JumpIfEqual {1072}
	940 Move X2, [X20]
	941 Move X1, [X27]
	942 Move X3, [X24]
	943 Call Dictionary`2<Object, Object>.set_Item, X0, X1, X2
	944 Move X0, [X19+232]
	945 Compare X0, 0
	946 JumpIfEqual {1072}
	947 Move X27, 0x4EE000
	948 Move X27, [X27+1176]
	949 Move X3, [X26]
	950 Add X20, X19, 136
	951 Move X2, X20
	952 Move X1, [X27]
	953 Call Dictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	954 Move TEMP, X0
	955 And TEMP, TEMP, 1
	956 Compare TEMP, 1
	957 JumpIfEqual {987}
	958 Move X8, 0x4A8000
	959 Move X8, [X8+2192]
	960 Move X0, [X8]
	961 Call 0x1C17F10
	962 Move X21, X0
	963 Call GUIStyle..ctor, X0
	964 Move [X20], X21
	965 Compare X21, 0
	966 JumpIfEqual {1072}
	967 Move X22, [X27]
	968 Move [X21+120], X22
	969 Move X8, [X23+1824]
	970 Compare X8, 0
	971 JumpIfNotEqual {977}
	972 Move X0, -51826688
	973 Add X0, X0, 1498
	974 Call 0x1C17CB8
	975 Move X8, X0
	976 Move [X23+1824], X0
	977 Move X0, X21
	978 Move X1, X22
	979 NotImplemented "Instruction BLR not yet implemented."
	980 Move X0, [X25]
	981 Compare X0, 0
	982 JumpIfEqual {1072}
	983 Move X2, [X20]
	984 Move X1, [X27]
	985 Move X3, [X24]
	986 Call Dictionary`2<Object, Object>.set_Item, X0, X1, X2
	987 Move X0, [X19+232]
	988 Compare X0, 0
	989 JumpIfEqual {1072}
	990 Move X21, 0x4EE000
	991 Move X21, [X21+1104]
	992 Move X3, [X26]
	993 Add X19, X19, 128
	994 Move X2, X19
	995 Move X1, [X21]
	996 Call Dictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	997 Move TEMP, X0
	998 And TEMP, TEMP, 1
	999 Compare TEMP, 1
	1000 JumpIfEqual {1033}
	1001 Move X8, 0x4A8000
	1002 Move X8, [X8+2192]
	1003 Move X0, [X8]
	1004 Call 0x1C17F10
	1005 Move X20, X0
	1006 Call GUIStyle..ctor, X0
	1007 Move [X19], X20
	1008 Move X0, [X25]
	1009 Compare X0, 0
	1010 JumpIfEqual {1072}
	1011 Move X1, [X21]
	1012 Move X3, [X24]
	1013 Move X2, X20
	1014 Call Dictionary`2<Object, Object>.set_Item, X0, X1, X2
	1015 Move X19, [X19]
	1016 Compare X19, 0
	1017 JumpIfEqual {1072}
	1018 Move X8, 0x4EE000
	1019 Move X8, [X8+1200]
	1020 Move X20, [X8]
	1021 Move [X19+120], X20
	1022 Move X8, [X23+1824]
	1023 Compare X8, 0
	1024 JumpIfNotEqual {1030}
	1025 Move X0, -51826688
	1026 Add X0, X0, 1498
	1027 Call 0x1C17CB8
	1028 Move X8, X0
	1029 Move [X23+1824], X0
	1030 Move X0, X19
	1031 Move X1, X20
	1032 NotImplemented "Instruction BLR not yet implemented."
	1033 Call GUISkin.get_error
	1034 Compare X0, 0
	1035 JumpIfEqual {1072}
	1036 Move X20, 0x774000
	1037 Move X8, [X20+1896]
	1038 Move X19, X0
	1039 Compare X8, 0
	1040 JumpIfNotEqual {1046}
	1041 Move X0, -51826688
	1042 Add X0, X0, 1547
	1043 Call 0x1C17CB8
	1044 Move X8, X0
	1045 Move [X20+1896], X0
	1046 Move W1, 1
	1047 Move X0, X19
	1048 NotImplemented "Instruction BLR not yet implemented."
	1049 Call GUISkin.get_error
	1050 Compare X0, 0
	1051 JumpIfEqual {1072}
	1052 Call GUIStyle.get_normal, X0
	1053 Compare X0, 0
	1054 JumpIfEqual {1072}
	1055 Move X20, [X31+80]
	1056 Move X19, [X31+88]
	1057 Move X22, [X31+64]
	1058 Move X21, [X31+72]
	1059 Move X24, [X31+48]
	1060 Move X23, [X31+56]
	1061 Move X26, [X31+32]
	1062 Move X25, [X31+40]
	1063 Move X28, [X31+16]
	1064 Move X27, [X31+24]
	1065 Move S0, 1
	1066 Move S1, W31
	1067 Move S2, W31
	1068 Move S3, 1
	1069 Move X30, [X31+96]
	1070 Call GUIStyleState.set_textColor, X0, X1
	1071 Return 
	1072 Call 0x1C17F20
	1073 Call 0x1C17F28

Method: UnityEngine.GUIStyle GetStyle(System.String styleName)

Disassembly:
	0x03C73A54 MOV W21, W5
	0x03C73A58 MOV W23, W4
	0x03C73A5C MOV W24, W3
	0x03C73A60 MOV X20, X2
	0x03C73A64 MOV X22, X1
	0x03C73A68 MOV X25, X0
	0x03C73A6C CBNZ X7, 0x3C73A84
	0x03C73A70 ADRP X0, 0xFFFFFFFFFCE9E000
	0x03C73A74 ADD X0, X0, 0x5B2
	0x03C73A78 BL 0x1C16CB8
	0x03C73A7C MOV X7, X0
	0x03C73A80 STR X0, [X26 + 0x808]
	0x03C73A84 AND W3, W24, 0x1
	0x03C73A88 AND W4, W23, 0x1
	0x03C73A8C AND W5, W21, 0x1
	0x03C73A90 AND W6, W19, 0x1
	0x03C73A94 MOV X0, X25
	0x03C73A98 MOV X1, X22
	0x03C73A9C MOV X2, X20
	0x03C73AA0 LDP X20, X19, [X31 + 0x40]
	0x03C73AA4 LDP X22, X21, [X31 + 0x30]
	0x03C73AA8 LDP X24, X23, [X31 + 0x20]
	0x03C73AAC LDP X26, X25, [X31 + 0x10]
	0x03C73AB0 LDR X30, [X31], #0x50
	0x03C73AB4 BR X7
	0x03C73AB8 SUB X31, X31, 0x40
	0x03C73ABC STP X30, X23, [X31 + 0x10]
	0x03C73AC0 STP X22, X21, [X31 + 0x20]
	0x03C73AC4 STP X20, X19, [X31 + 0x30]
	0x03C73AC8 ADRP X23, 0x773000
	0x03C73ACC LDR X8, [X23 + 0x810]
	0x03C73AD0 MOV W21, W3
	0x03C73AD4 MOV W19, W2
	0x03C73AD8 MOV X20, X1
	0x03C73ADC MOV X22, X0
	0x03C73AE0 STP S0, S1, [X31]
	0x03C73AE4 STP S2, S3, [X31 + 0x8]
	0x03C73AE8 CBNZ X8, 0x3C73B00
	0x03C73AEC ADRP X0, 0xFFFFFFFFFCE8E000
	0x03C73AF0 ADD X0, X0, 0x553
	0x03C73AF4 BL 0x1C16CB8
	0x03C73AF8 MOV X8, X0
	0x03C73AFC STR X0, [X23 + 0x810]
	0x03C73B00 AND W4, W21, 0x1
	0x03C73B04 ADD X1, X31, 0x0
	0x03C73B08 MOV X0, X22
	0x03C73B0C MOV X2, X20
	0x03C73B10 MOV W3, W19
	0x03C73B14 BLR X8
	0x03C73B18 LDP X20, X19, [X31 + 0x30]
	0x03C73B1C LDP X22, X21, [X31 + 0x20]
	0x03C73B20 LDP X30, X23, [X31 + 0x10]
	0x03C73B24 ADD X31, X31, 0x40
	0x03C73B28 RET
	0x03C73B2C STR X30, [X31 - 0x40]!
	0x03C73B30 STP X24, X23, [X31 + 0x10]
	0x03C73B34 STP X22, X21, [X31 + 0x20]
	0x03C73B38 STP X20, X19, [X31 + 0x30]
	0x03C73B3C ADRP X24, 0x773000
	0x03C73B40 LDR X5, [X24 + 0x810]
	0x03C73B44 MOV W21, W4
	0x03C73B48 MOV W19, W3
	0x03C73B4C MOV X20, X2
	0x03C73B50 MOV X22, X1
	0x03C73B54 MOV X23, X0
	0x03C73B58 CBNZ X5, 0x3C73B70
	0x03C73B5C ADRP X0, 0xFFFFFFFFFCE8E000
	0x03C73B60 ADD X0, X0, 0x553
	0x03C73B64 BL 0x1C16CB8
	0x03C73B68 MOV X5, X0
	0x03C73B6C STR X0, [X24 + 0x810]
	0x03C73B70 AND W4, W21, 0x1
	0x03C73B74 MOV X0, X23
	0x03C73B78 MOV X1, X22
	0x03C73B7C MOV X2, X20
	0x03C73B80 MOV W3, W19
	0x03C73B84 LDP X20, X19, [X31 + 0x30]
	0x03C73B88 LDP X22, X21, [X31 + 0x20]
	0x03C73B8C LDP X24, X23, [X31 + 0x10]
	0x03C73B90 LDR X30, [X31], #0x40
	0x03C73B94 BR X5
	0x03C73B98 SUB X31, X31, 0x50
	0x03C73B9C STR X30, [X31 + 0x20]
	0x03C73BA0 STP X22, X21, [X31 + 0x30]
	0x03C73BA4 STP X20, X19, [X31 + 0x40]
	0x03C73BA8 ADRP X22, 0x773000
	0x03C73BAC LDR X8, [X22 + 0x818]
	0x03C73BB0 MOV W19, W2
	0x03C73BB4 MOV X20, X1
	0x03C73BB8 MOV X21, X0
	0x03C73BBC STP S0, S1, [X31 + 0x10]
	0x03C73BC0 STP S2, S3, [X31 + 0x18]
	0x03C73BC4 STP S4, S5, [X31]
	0x03C73BC8 STP S6, S7, [X31 + 0x8]
	0x03C73BCC CBNZ X8, 0x3C73BE4
	0x03C73BD0 ADRP X0, 0xFFFFFFFFFCEB9000
	0x03C73BD4 ADD X0, X0, 0xC98
	0x03C73BD8 BL 0x1C16CB8
	0x03C73BDC MOV X8, X0
	0x03C73BE0 STR X0, [X22 + 0x818]
	0x03C73BE4 ADD X1, X31, 0x10
	0x03C73BE8 ADD X4, X31, 0x0
	0x03C73BEC MOV X0, X21
	0x03C73BF0 MOV X2, X20
	0x03C73BF4 MOV W3, W19
	0x03C73BF8 BLR X8
	0x03C73BFC LDP X20, X19, [X31 + 0x40]
	0x03C73C00 LDP X22, X21, [X31 + 0x30]
	0x03C73C04 LDR X30, [X31 + 0x20]
	0x03C73C08 ADD X31, X31, 0x50
	0x03C73C0C RET
	0x03C73C10 STR X30, [X31 - 0x40]!
	0x03C73C14 STP X24, X23, [X31 + 0x10]
	0x03C73C18 STP X22, X21, [X31 + 0x20]
	0x03C73C1C STP X20, X19, [X31 + 0x30]
	0x03C73C20 ADRP X24, 0x773000
	0x03C73C24 LDR X5, [X24 + 0x818]
	0x03C73C28 MOV X19, X4
	0x03C73C2C MOV W20, W3
	0x03C73C30 MOV X21, X2
	0x03C73C34 MOV X22, X1
	0x03C73C38 MOV X23, X0
	0x03C73C3C CBNZ X5, 0x3C73C54
	0x03C73C40 ADRP X0, 0xFFFFFFFFFCEB9000
	0x03C73C44 ADD X0, X0, 0xC98
	0x03C73C48 BL 0x1C16CB8
	0x03C73C4C MOV X5, X0
	0x03C73C50 STR X0, [X24 + 0x818]
	0x03C73C54 MOV X0, X23
	0x03C73C58 MOV X1, X22
	0x03C73C5C MOV X2, X21
	0x03C73C60 MOV W3, W20

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+40], X21
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move X19, 0x774000
	007 Move W8, [X19+1750]
	008 Move X21, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {37}
	014 Move X0, 0x481000
	015 Move X0, [X0+2600]
	016 Call 0x1C17CF4
	017 Move X0, 0x4AA000
	018 Move X0, [X0+3688]
	019 Call 0x1C17CF4
	020 Move X0, 0x481000
	021 Move X0, [X0+2760]
	022 Call 0x1C17CF4
	023 Move X0, 0x4EE000
	024 Move X0, [X0+1248]
	025 Call 0x1C17CF4
	026 Move X0, 0x4EE000
	027 Move X0, [X0+1256]
	028 Call 0x1C17CF4
	029 Move X0, 0x4EE000
	030 Move X0, [X0+1264]
	031 Call 0x1C17CF4
	032 Move X0, 0x4EE000
	033 Move X0, [X0+1272]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X19+1750], W8
	037 Move X0, X20
	038 Move X1, X21
	039 Call GUISkin.FindStyle, X0, X1
	040 Compare X0, 0
	041 JumpIfNotEqual {138}
	042 Move X8, 0x481000
	043 Move X8, [X8+2760]
	044 Move W1, 6
	045 Move X0, [X8]
	046 Call 0x1C17D6C
	047 Compare X0, 0
	048 JumpIfEqual {145}
	049 Move W8, [X0+24]
	050 Move X19, X0
	051 Compare W8, 0
	052 JumpIfEqual {144}
	053 Move X9, 0x4EE000
	054 Move X9, [X9+1272]
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move X9, [X9]
	057 Move [X19+32], X9
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move [X19+40], X21
	060 Move X8, 0x4EE000
	061 Move X8, [X8+1256]
	062 Move X0, X20
	063 Move X1, X31
	064 Move X8, [X8]
	065 Move [X19+48], X8
	066 Call Object.get_name, X0
	067 Move W8, [X19+24]
	068 NotImplemented "Instruction CMP not yet implemented."
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move [X19+56], X0
	071 Move X8, 0x4EE000
	072 Move X8, [X8+1264]
	073 Move X20, 0x774000
	074 Move X21, 0x4E7000
	075 Move X8, [X8]
	076 Move [X19+64], X8
	077 Move W8, [X20+1296]
	078 Move X21, [X21+32]
	079 Move TEMP, X8
	080 And TEMP, TEMP, 1
	081 Compare TEMP, 1
	082 JumpIfEqual {88}
	083 Move X0, 0x4E7000
	084 Move X0, [X0+32]
	085 Call 0x1C17CF4
	086 Move W8, 1
	087 Move [X20+1296], W8
	088 Move X8, [X21]
	089 Move X8, [X8+184]
	090 Move X20, [X8]
	091 Compare X20, 0
	092 JumpIfEqual {116}
	093 Move X21, 0x774000
	094 Move X8, [X21+1192]
	095 Compare X8, 0
	096 JumpIfNotEqual {102}
	097 Move X0, -51908608
	098 Add X0, X0, 1382
	099 Call 0x1C17CB8
	100 Move X8, X0
	101 Move [X21+1192], X0
	102 Move X0, X20
	103 NotImplemented "Instruction BLR not yet implemented."
	104 Move X8, 0x4AA000
	105 Move X8, [X8+3688]
	106 Move TEMP, 0
	107 Not TEMP
	108 Move X9, TEMP
	109 Move [X31+24], W0
	110 Add X0, X31, 8
	111 Move X8, [X8]
	112 Move X1, X31
	113 Move [X31+8], X8
	114 Move [X31+16], X9
	115 Call Enum.ToString, X0
	116 Move X8, 0x4EE000
	117 Move X8, [X8+1248]
	118 Move X0, [X8]
	119 Move W8, [X19+24]
	120 NotImplemented "Instruction CMP not yet implemented."
	121 Move [X19+72], X0
	122 Move X0, X19
	123 Move X1, X31
	124 Call String.Concat, X0
	125 Move X8, 0x481000
	126 Move X8, [X8+2600]
	127 Move X19, X0
	128 Move X8, [X8]
	129 Move W9, [X8+224]
	130 Compare W9, 0
	131 JumpIfNotEqual {134}
	132 Move X0, X8
	133 Call 0x1C17DFC
	134 Move X0, X19
	135 Move X1, X31
	136 Call Debug.LogWarning, X0
	137 Call GUISkin.get_error
	138 Move X20, [X31+48]
	139 Move X19, [X31+56]
	140 Move X30, [X31+32]
	141 Move X21, [X31+40]
	142 Add X31, X31, 64
	143 Return X0
	144 Call 0x1C17F28
	145 Call 0x1C17F20

Method: UnityEngine.GUIStyle FindStyle(System.String styleName)

Disassembly:
	0x03C73C64 MOV X4, X19
	0x03C73C68 LDP X20, X19, [X31 + 0x30]
	0x03C73C6C LDP X22, X21, [X31 + 0x20]
	0x03C73C70 LDP X24, X23, [X31 + 0x10]
	0x03C73C74 LDR X30, [X31], #0x40
	0x03C73C78 BR X5
	0x03C73C7C SUB X31, X31, 0xB0
	0x03C73C80 STR X30, [X31 + 0x50]
	0x03C73C84 STP X28, X27, [X31 + 0x60]
	0x03C73C88 STP X26, X25, [X31 + 0x70]
	0x03C73C8C STP X24, X23, [X31 + 0x80]
	0x03C73C90 STP X22, X21, [X31 + 0x90]
	0x03C73C94 STP X20, X19, [X31 + 0xA0]
	0x03C73C98 ADRP X28, 0x773000
	0x03C73C9C LDR W27, [X31 + 0xB0]
	0x03C73CA0 LDUR V16, [X31 + 0xB8]
	0x03C73CA4 LDR X8, [X28 + 0x820]
	0x03C73CA8 MOV W19, W7
	0x03C73CAC MOV W21, W6
	0x03C73CB0 MOV W22, W5
	0x03C73CB4 MOV W23, W4
	0x03C73CB8 MOV W25, W3
	0x03C73CBC MOV W26, W2
	0x03C73CC0 MOV X20, X1
	0x03C73CC4 MOV X24, X0
	0x03C73CC8 STP S0, S1, [X31 + 0x40]
	0x03C73CCC STP S2, S3, [X31 + 0x48]
	0x03C73CD0 STP S4, S5, [X31 + 0x30]
	0x03C73CD4 STP S6, S7, [X31 + 0x38]
	0x03C73CD8 STR V16, [X31 + 0x2]
	0x03C73CDC CBNZ X8, 0x3C73CF4
	0x03C73CE0 ADRP X0, 0xFFFFFFFFFCEA0000
	0x03C73CE4 ADD X0, X0, 0x38F
	0x03C73CE8 BL 0x1C16CB8

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x774000
	007 Move W8, [X21+1751]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x4EE000
	015 Move X0, [X0+1032]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1751], W8
	019 Move [X31+8], X31
	020 Move X0, [X20+232]
	021 Compare X0, 0
	022 JumpIfNotEqual {26}
	023 Move X0, X20
	024 Call GUISkin.BuildStyleCache, X0
	025 Move X0, [X20+232]
	026 Compare X0, 0
	027 JumpIfEqual {43}
	028 Move X8, 0x4EE000
	029 Move X8, [X8+1032]
	030 Add X2, X31, 8
	031 Move X1, X19
	032 Move X3, [X8]
	033 Call Dictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	034 Move X8, [X31+8]
	035 Move X20, [X31+32]
	036 Move X19, [X31+40]
	037 Move X30, [X31+16]
	038 Move X21, [X31+24]
	039 And W31, W0, 1
	040 NotImplemented "Instruction CSEL not yet implemented."
	041 Add X31, X31, 48
	042 Return X0
	043 Call 0x1C17F20

Method: System.Void MakeCurrent()

Disassembly:
	0x03C685B4 MOV X2, X31
	0x03C685B8 BL 0x3C3883C
	0x03C685BC TBZ X0, 0x0, 0x3C685F0
	0x03C685C0 ADRP X8, 0x48B000
	0x03C685C4 LDR X8, [X8 + 0xA28]
	0x03C685C8 LDR X0, [X8]
	0x03C685CC LDR W8, [X0 + 0xE0]
	0x03C685D0 CBNZ W8, 0x3C685D8
	0x03C685D4 BL 0x1C16DFC
	0x03C685D8 ADRP X8, 0x4F8000
	0x03C685DC LDR X8, [X8 + 0x290]
	0x03C685E0 MOV X1, X31
	0x03C685E4 LDR X0, [X8]
	0x03C685E8 BL 0x3C06A04
	0x03C685EC B 0x3C68A80
	0x03C685F0 FCMP S12, 0x0
	0x03C685F4 B.NE 0x3C6862C
	0x03C685F8 CBZ X20, 0x3C68AA8
	0x03C685FC LDR X8, [X20]
	0x03C68600 MOV X0, X20
	0x03C68604 LDP X9, X1, [X8 + 0x188]
	0x03C68608 BLR X9
	0x03C6860C LDR X8, [X20]
	0x03C68610 MOV W23, W0
	0x03C68614 MOV X0, X20
	0x03C68618 LDP X9, X1, [X8 + 0x1A8]
	0x03C6861C BLR X9
	0x03C68620 SCVTF S0, W23
	0x03C68624 SCVTF S1, W0
	0x03C68628 FDIV S12, S0, S1
	0x03C6862C ADRP X23, 0x770000
	0x03C68630 LDR V4, [X31 + 0x1E0]
	0x03C68634 LDR V5, [X31 + 0x1E4]
	0x03C68638 LDRB W8, [X23 + 0xE5A]
	0x03C6863C LDR V6, [X31 + 0x1E8]
	0x03C68640 LDR V7, [X31 + 0x1EC]
	0x03C68644 AND W22, W22, 0x1
	0x03C68648 STP S8, S9, [X31 + 0x34]
	0x03C6864C STR S7, [X31 + 0x5C]
	0x03C68650 CBNZ W8, 0x3C68684
	0x03C68654 ADRP X0, 0x492000
	0x03C68658 LDR X0, [X0 + 0x9A0]
	0x03C6865C MOV V8.16B, V4.16B
	0x03C68660 MOV V9.16B, V5.16B
	0x03C68664 MOV V13.16B, V6.16B
	0x03C68668 BL 0x1C16CF4
	0x03C6866C LDR V7, [X31 + 0x5C]
	0x03C68670 MOV V6.16B, V13.16B
	0x03C68674 MOV V5.16B, V9.16B
	0x03C68678 MOV V4.16B, V8.16B
	0x03C6867C MOVZ W8, 0x1
	0x03C68680 STRB W8, [X23 + 0xE5A]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x77F000
	007 Move X20, 0x4F9000
	008 Move X21, 0x4B3000
	009 Move W8, [X22+1752]
	010 Move X20, [X20+648]
	011 Move X21, [X21+2192]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x4F9000
	018 Move X0, [X0+648]
	019 Call 0x1C17CF4
	020 Move X0, 0x4B3000
	021 Move X0, [X0+2192]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+1752], W8
	025 Move X8, [X20]
	026 Move X8, [X8+184]
	027 Move [X8+16], X19
	028 Move X0, [X21]
	029 Move X19, [X19+24]
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move X21, 0x77F000
	035 Move X8, [X21+2008]
	036 Compare X8, 0
	037 JumpIfNotEqual {43}
	038 Move X0, -51699712
	039 Add X0, X0, 274
	040 Call 0x1C17CB8
	041 Move X8, X0
	042 Move [X21+2008], X0
	043 Move X0, X19
	044 NotImplemented "Instruction BLR not yet implemented."
	045 Move X8, [X20]
	046 Move X8, [X8+184]
	047 Move X8, [X8+8]
	048 Compare X8, 0
	049 JumpIfEqual {59}
	050 Move X2, [X8+24]
	051 Move X0, [X8+64]
	052 Move X1, [X8+40]
	053 Move X20, [X31+32]
	054 Move X19, [X31+40]
	055 Move X22, [X31+16]
	056 Move X21, [X31+24]
	057 Move X30, [X31+48]
	058 CallNoReturn X2
	059 Move X20, [X31+32]
	060 Move X19, [X31+40]
	061 Move X22, [X31+16]
	062 Move X21, [X31+24]
	063 Move X30, [X31+48]
	064 Return 

Method: System.Collections.IEnumerator GetEnumerator()

Disassembly:
	0x03C73CEC MOV X8, X0
	0x03C73CF0 STR X0, [X28 + 0x820]
	0x03C73CF4 ADD X9, X31, 0x20
	0x03C73CF8 ADD X10, X31, 0x30
	0x03C73CFC AND W3, W26, 0x1
	0x03C73D00 AND W4, W25, 0x1
	0x03C73D04 AND W5, W23, 0x1
	0x03C73D08 AND W6, W22, 0x1
	0x03C73D0C AND W7, W21, 0x1
	0x03C73D10 ADD X1, X31, 0x40
	0x03C73D14 MOV X0, X24
	0x03C73D18 MOV X2, X20
	0x03C73D1C STR W27, [X31 + 0x8]
	0x03C73D20 STP X10, X9, [X31 + 0x10]
	0x03C73D24 STR W19, [X31]
	0x03C73D28 BLR X8
	0x03C73D2C LDP X20, X19, [X31 + 0xA0]
	0x03C73D30 LDP X22, X21, [X31 + 0x90]
	0x03C73D34 LDP X24, X23, [X31 + 0x80]
	0x03C73D38 LDP X26, X25, [X31 + 0x70]
	0x03C73D3C LDP X28, X27, [X31 + 0x60]
	0x03C73D40 LDR X30, [X31 + 0x50]
	0x03C73D44 ADD X31, X31, 0xB0
	0x03C73D48 RET
	0x03C73D4C SUB X31, X31, 0x70
	0x03C73D50 STP X29, X30, [X31 + 0x10]
	0x03C73D54 STP X28, X27, [X31 + 0x20]
	0x03C73D58 STP X26, X25, [X31 + 0x30]
	0x03C73D5C STP X24, X23, [X31 + 0x40]
	0x03C73D60 STP X22, X21, [X31 + 0x50]
	0x03C73D64 STP X20, X19, [X31 + 0x60]
	0x03C73D68 ADRP X8, 0x773000
	0x03C73D6C LDP X29, X28, [X31 + 0x80]
	0x03C73D70 LDR W19, [X31 + 0x78]
	0x03C73D74 LDR X8, [X8 + 0x820]
	0x03C73D78 LDR W27, [X31 + 0x70]
	0x03C73D7C MOV W21, W6
	0x03C73D80 MOV W23, W5
	0x03C73D84 MOV W24, W4
	0x03C73D88 MOV W25, W3
	0x03C73D8C MOV X20, X2
	0x03C73D90 MOV X22, X1
	0x03C73D94 MOV X26, X0
	0x03C73D98 CBNZ X8, 0x3C73DBC
	0x03C73D9C ADRP X0, 0xFFFFFFFFFCEA0000
	0x03C73DA0 ADD X0, X0, 0x38F
	0x03C73DA4 STR W7, [X31 + 0xC]
	0x03C73DA8 BL 0x1C16CB8

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0x774000
	006 Move W8, [X20+1753]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {23}
	012 Move X0, 0x4EE000
	013 Move X0, [X0+1280]
	014 Call 0x1C17CF4
	015 Move X0, 0x4EE000
	016 Move X0, [X0+1288]
	017 Call 0x1C17CF4
	018 Move X0, 0x4EE000
	019 Move X0, [X0+1296]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+1753], W8
	023 Move X0, [X19+232]
	024 Compare X0, 0
	025 JumpIfNotEqual {29}
	026 Move X0, X19
	027 Call GUISkin.BuildStyleCache, X0
	028 Move X0, [X19+232]
	029 Compare X0, 0
	030 JumpIfEqual {56}
	031 Move X8, 0x4EE000
	032 Move X8, [X8+1280]
	033 Move X1, [X8]
	034 Call Dictionary`2<Object, Object>.get_Values, X0
	035 Compare X0, 0
	036 JumpIfEqual {56}
	037 Move X8, 0x4EE000
	038 Move X8, [X8+1296]
	039 Move X19, 0x4EE000
	040 Move X1, [X8]
	041 Move X19, [X19+1288]
	042 Add X8, X31, 24
	043 Call ValueCollection<Object, Object>.GetEnumerator, X0
	044 NotImplemented "Instruction LDUR not yet implemented."
	045 Move X8, [X31+40]
	046 Move X0, [X19]
	047 Add X1, X31, 0
	048 Move [X31], V0
	049 Move [X31+16], X8
	050 Call 0x1C17E04
	051 Move X20, [X31+64]
	052 Move X19, [X31+72]
	053 Move X30, [X31+48]
	054 Add X31, X31, 80
	055 Return X0
	056 Call 0x1C17F20

