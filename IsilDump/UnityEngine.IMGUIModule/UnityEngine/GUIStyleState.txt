Type: UnityEngine.GUIStyleState

Method: UnityEngine.Texture2D get_background()

Disassembly:
	0x03C7401C STR X30, [X31 - 0x40]!
	0x03C74020 STP X24, X23, [X31 + 0x10]
	0x03C74024 STP X22, X21, [X31 + 0x20]
	0x03C74028 STP X20, X19, [X31 + 0x30]
	0x03C7402C ADRP X24, 0x772000
	0x03C74030 LDR X5, [X24 + 0x838]
	0x03C74034 MOV W19, W4
	0x03C74038 MOV W20, W3
	0x03C7403C MOV X21, X2
	0x03C74040 MOV X22, X1
	0x03C74044 MOV X23, X0
	0x03C74048 CBNZ X5, 0x3C74060
	0x03C7404C ADRP X0, 0xFFFFFFFFFCE8F000
	0x03C74050 ADD X0, X0, 0x80F
	0x03C74054 BL 0x1C16CB8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x773000
	005 Move X1, [X20+1760]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51896320
	010 Add X0, X0, 1866
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+1760], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void set_background(UnityEngine.Texture2D value)

Disassembly:
	0x03C74058 MOV X5, X0
	0x03C7405C STR X0, [X24 + 0x838]
	0x03C74060 MOV X0, X23
	0x03C74064 MOV X1, X22
	0x03C74068 MOV X2, X21
	0x03C7406C MOV W3, W20
	0x03C74070 MOV W4, W19
	0x03C74074 LDP X20, X19, [X31 + 0x30]
	0x03C74078 LDP X22, X21, [X31 + 0x20]
	0x03C7407C LDP X24, X23, [X31 + 0x10]
	0x03C74080 LDR X30, [X31], #0x40
	0x03C74084 BR X5
	0x03C74088 SUB X31, X31, 0x30
	0x03C7408C STP X30, X21, [X31 + 0x10]
	0x03C74090 STP X20, X19, [X31 + 0x20]
	0x03C74094 ADRP X21, 0x772000
	0x03C74098 LDR X8, [X21 + 0x840]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x773000
	006 Move X2, [X21+1768]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51769344
	012 Add X0, X0, 3941
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+1768], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: UnityEngine.Color get_textColor()

Disassembly:
	0x03C7409C MOV X19, X1
	0x03C740A0 MOV X20, X0
	0x03C740A4 STR X31, [X31 + 0x8]
	0x03C740A8 CBNZ X8, 0x3C740C0
	0x03C740AC ADRP X0, 0xFFFFFFFFFCEB7000
	0x03C740B0 ADD X0, X0, 0x2C
	0x03C740B4 BL 0x1C16CB8
	0x03C740B8 MOV X8, X0
	0x03C740BC STR X0, [X21 + 0x840]
	0x03C740C0 ADD X2, X31, 0x8
	0x03C740C4 MOV X0, X20
	0x03C740C8 MOV X1, X19
	0x03C740CC BLR X8
	0x03C740D0 LDP S0, S1, [X31 + 0x8]
	0x03C740D4 LDP X20, X19, [X31 + 0x20]
	0x03C740D8 LDP X30, X21, [X31 + 0x10]
	0x03C740DC ADD X31, X31, 0x30
	0x03C740E0 RET
	0x03C740E4 STR X30, [X31 - 0x30]!
	0x03C740E8 STP X22, X21, [X31 + 0x10]
	0x03C740EC STP X20, X19, [X31 + 0x20]
	0x03C740F0 ADRP X22, 0x772000

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+8], X31
	003 Move [X31+16], X30
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x773000
	007 Move X8, [X20+1800]
	008 Move X19, X0
	009 Move [X31], X31
	010 Compare X8, 0
	011 JumpIfNotEqual {17}
	012 Move X0, -51748864
	013 Add X0, X0, 204
	014 Call 0x1C17CB8
	015 Move X8, X0
	016 Move [X20+1800], X0
	017 Add X1, X31, 0
	018 Move X0, X19
	019 NotImplemented "Instruction BLR not yet implemented."
	020 Move S0, [X31]
	021 Move S1, [X31+4]
	022 Move S2, [X31+8]
	023 Move S3, [X31+12]
	024 Move X20, [X31+32]
	025 Move X19, [X31+40]
	026 Move X30, [X31+16]
	027 Add X31, X31, 48
	028 Return X0

Method: System.Void set_textColor(UnityEngine.Color value)

Disassembly:
	0x03C73A00 AND W4, W22, 0x1
	0x03C73A04 AND W5, W21, 0x1
	0x03C73A08 AND W6, W20, 0x1
	0x03C73A0C ADD X1, X31, 0x0
	0x03C73A10 MOV X0, X23
	0x03C73A14 MOV X2, X19
	0x03C73A18 BLR X8
	0x03C73A1C LDP X20, X19, [X31 + 0x40]
	0x03C73A20 LDP X22, X21, [X31 + 0x30]
	0x03C73A24 LDP X24, X23, [X31 + 0x20]
	0x03C73A28 LDP X30, X25, [X31 + 0x10]
	0x03C73A2C ADD X31, X31, 0x50
	0x03C73A30 RET
	0x03C73A34 STR X30, [X31 - 0x50]!
	0x03C73A38 STP X26, X25, [X31 + 0x10]
	0x03C73A3C STP X24, X23, [X31 + 0x20]
	0x03C73A40 STP X22, X21, [X31 + 0x30]
	0x03C73A44 STP X20, X19, [X31 + 0x40]
	0x03C73A48 ADRP X26, 0x773000
	0x03C73A4C LDR X7, [X26 + 0x808]
	0x03C73A50 MOV W19, W6

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+32], X20
	004 Move [X31+40], X19
	005 Move X20, 0x774000
	006 Move X8, [X20+1808]
	007 Move X19, X0
	008 Move [X31], S0
	009 Move [X31+8], S1
	010 Move [X31+8], S2
	011 Move [X31+16], S3
	012 Compare X8, 0
	013 JumpIfNotEqual {19}
	014 Move X0, -51916800
	015 Add X0, X0, 1492
	016 Call 0x1C17CB8
	017 Move X8, X0
	018 Move [X20+1808], X0
	019 Add X1, X31, 0
	020 Move X0, X19
	021 NotImplemented "Instruction BLR not yet implemented."
	022 Move X20, [X31+32]
	023 Move X19, [X31+40]
	024 Move X30, [X31+16]
	025 Add X31, X31, 48
	026 Return 

Method: System.IntPtr Init()

Disassembly:
	0x03C7417C MOV X0, X20
	0x03C74180 MOV X1, X19
	0x03C74184 BLR X8
	0x03C74188 LDP S0, S1, [X31]
	0x03C7418C LDP X20, X19, [X31 + 0x20]
	0x03C74190 LDP X30, X21, [X31 + 0x10]
	0x03C74194 ADD X31, X31, 0x30
	0x03C74198 RET
	0x03C7419C STP X30, X23, [X31 - 0x30]!
	0x03C741A0 STP X22, X21, [X31 + 0x10]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, 0x773000
	004 Move X0, [X19+1776]
	005 Compare X0, 0
	006 JumpIfNotEqual {11}
	007 Move X0, -51699712
	008 Add X0, X0, 1123
	009 Call 0x1C17CB8
	010 Move [X19+1776], X0
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 CallNoReturn X0

Method: System.Void Cleanup()

Disassembly:
	0x03C741A4 STP X20, X19, [X31 + 0x20]
	0x03C741A8 ADRP X23, 0x772000
	0x03C741AC LDR X4, [X23 + 0x848]
	0x03C741B0 MOV X19, X3
	0x03C741B4 MOV X20, X2
	0x03C741B8 MOV X21, X1
	0x03C741BC MOV X22, X0
	0x03C741C0 CBNZ X4, 0x3C741D8
	0x03C741C4 ADRP X0, 0xFFFFFFFFFCE95000
	0x03C741C8 ADD X0, X0, 0x9FB
	0x03C741CC BL 0x1C16CB8
	0x03C741D0 MOV X4, X0
	0x03C741D4 STR X0, [X23 + 0x848]
	0x03C741D8 MOV X0, X22
	0x03C741DC MOV X1, X21

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x773000
	005 Move X1, [X20+1784]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51691520
	010 Add X0, X0, 760
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+1784], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void .ctor()

Disassembly:
	0x03C741E0 MOV X2, X20
	0x03C741E4 MOV X3, X19
	0x03C741E8 LDP X20, X19, [X31 + 0x20]
	0x03C741EC LDP X22, X21, [X31 + 0x10]
	0x03C741F0 LDP X30, X23, [X31], #0x30
	0x03C741F4 BR X4
	0x03C741F8 STR D8, [X31 - 0x30]!
	0x03C741FC STP X30, X21, [X31 + 0x10]
	0x03C74200 STP X20, X19, [X31 + 0x20]
	0x03C74204 ADRP X21, 0x772000
	0x03C74208 LDR X2, [X21 + 0x7B8]
	0x03C7420C MOV V8.16B, V0.16B
	0x03C74210 MOV X19, X1
	0x03C74214 MOV X20, X0
	0x03C74218 CBNZ X2, 0x3C74230
	0x03C7421C ADRP X0, 0xFFFFFFFFFCE87000
	0x03C74220 ADD X0, X0, 0x8E1
	0x03C74224 BL 0x1C16CB8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X1, X31
	005 Move X19, X0
	006 Call Object..ctor, X0
	007 Move X20, 0x773000
	008 Move X8, [X20+1776]
	009 Compare X8, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51699712
	012 Add X0, X0, 1123
	013 Call 0x1C17CB8
	014 Move X8, X0
	015 Move [X20+1776], X0
	016 NotImplemented "Instruction BLR not yet implemented."
	017 Move [X19+16], X0
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Return 

Method: System.Void .ctor(UnityEngine.GUIStyle sourceStyle, System.IntPtr source)

Disassembly:
	0x03C74228 MOV X2, X0
	0x03C7422C STR X0, [X21 + 0x7B8]
	0x03C74230 MOV X0, X20
	0x03C74234 MOV X1, X19
	0x03C74238 LDP X20, X19, [X31 + 0x20]
	0x03C7423C LDP X30, X21, [X31 + 0x10]
	0x03C74240 MOV V0.16B, V8.16B
	0x03C74244 LDR V8, [X31], #0x30
	0x03C74248 BR X2
	0x03C7424C SUB X31, X31, 0x30
	0x03C74250 STP X30, X21, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, X1
	006 Move X1, X31
	007 Move X19, X2
	008 Move X21, X0
	009 Call Object..ctor, X0
	010 Move [X21+16], X19
	011 Move [X21+24], X20
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move X30, [X31+32]
	015 Move X21, [X31+40]
	016 Return 

Method: UnityEngine.GUIStyleState GetGUIStyleState(UnityEngine.GUIStyle sourceStyle, System.IntPtr source)

Disassembly:
	0x03C74254 STP X20, X19, [X31 + 0x20]
	0x03C74258 ADRP X21, 0x772000
	0x03C7425C LDR X8, [X21 + 0x850]
	0x03C74260 MOV X19, X1
	0x03C74264 MOV X20, X0
	0x03C74268 STR X31, [X31 + 0x8]
	0x03C7426C CBNZ X8, 0x3C74284
	0x03C74270 ADRP X0, 0xFFFFFFFFFCE99000
	0x03C74274 ADD X0, X0, 0x5AC
	0x03C74278 BL 0x1C16CB8
	0x03C7427C MOV X8, X0
	0x03C74280 STR X0, [X21 + 0x850]
	0x03C74284 ADD X2, X31, 0x8
	0x03C74288 MOV X0, X20
	0x03C7428C MOV X1, X19
	0x03C74290 BLR X8
	0x03C74294 LDP S0, S1, [X31 + 0x8]
	0x03C74298 LDP X20, X19, [X31 + 0x20]
	0x03C7429C LDP X30, X21, [X31 + 0x10]
	0x03C742A0 ADD X31, X31, 0x30
	0x03C742A4 RET
	0x03C742A8 STR X30, [X31 - 0x30]!
	0x03C742AC STP X22, X21, [X31 + 0x10]
	0x03C742B0 STP X20, X19, [X31 + 0x20]
	0x03C742B4 ADRP X22, 0x772000
	0x03C742B8 LDR X3, [X22 + 0x850]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x773000
	007 Move X22, 0x4ED000
	008 Move W8, [X21+1792]
	009 Move X22, [X22+1336]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x4ED000
	017 Move X0, [X0+1336]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1792], W8
	021 Move X0, [X22]
	022 Call 0x1C17F10
	023 Move X1, X31
	024 Move X21, X0
	025 Call Object..ctor, X0
	026 Move [X21+16], X19
	027 Move [X21+24], X20
	028 Move X0, X21
	029 Move X20, [X31+32]
	030 Move X19, [X31+40]
	031 Move X22, [X31+16]
	032 Move X21, [X31+24]
	033 Move X30, [X31+48]
	034 Return X0

Method: System.Void Finalize()

Disassembly:
	0x03C742BC MOV X19, X2
	0x03C742C0 MOV X20, X1
	0x03C742C4 MOV X21, X0
	0x03C742C8 CBNZ X3, 0x3C742E0
	0x03C742CC ADRP X0, 0xFFFFFFFFFCE99000
	0x03C742D0 ADD X0, X0, 0x5AC
	0x03C742D4 BL 0x1C16CB8
	0x03C742D8 MOV X3, X0
	0x03C742DC STR X0, [X22 + 0x850]
	0x03C742E0 MOV X0, X21
	0x03C742E4 MOV X1, X20
	0x03C742E8 MOV X2, X19
	0x03C742EC LDP X20, X19, [X31 + 0x20]
	0x03C742F0 LDP X22, X21, [X31 + 0x10]
	0x03C742F4 LDR X30, [X31], #0x30
	0x03C742F8 BR X3
	0x03C742FC STP X30, X21, [X31 - 0x20]!
	0x03C74300 STP X20, X19, [X31 + 0x10]
	0x03C74304 ADRP X21, 0x772000
	0x03C74308 LDR X2, [X21 + 0x858]
	0x03C7430C MOV X19, X1
	0x03C74310 MOV X20, X0
	0x03C74314 CBNZ X2, 0x3C7432C
	0x03C74318 ADRP X0, 0xFFFFFFFFFCEAB000
	0x03C7431C ADD X0, X0, 0x3F7
	0x03C74320 BL 0x1C16CB8
	0x03C74324 MOV X2, X0
	0x03C74328 STR X0, [X21 + 0x858]
	0x03C7432C MOV X0, X20
	0x03C74330 MOV X1, X19
	0x03C74334 LDP X20, X19, [X31 + 0x10]
	0x03C74338 LDP X30, X21, [X31], #0x20
	0x03C7433C BR X2
	0x03C74340 STP X30, X19, [X31 - 0x10]!
	0x03C74344 ADRP X19, 0x772000
	0x03C74348 LDR X0, [X19 + 0x7D0]
	0x03C7434C CBNZ X0, 0x3C74360
	0x03C74350 ADRP X0, 0xFFFFFFFFFCEB6000
	0x03C74354 ADD X0, X0, 0xFF6
	0x03C74358 BL 0x1C16CB8
	0x03C7435C STR X0, [X19 + 0x7D0]
	0x03C74360 LDP X30, X19, [X31], #0x10
	0x03C74364 BR X0
	0x03C74368 STP X30, X21, [X31 - 0x20]!
	0x03C7436C STP X20, X19, [X31 + 0x10]
	0x03C74370 ADRP X21, 0x772000
	0x03C74374 LDRB W8, [X21 + 0x7E1]
	0x03C74378 MOV X20, X1
	0x03C7437C MOV X19, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X0+24]
	006 Move X19, X0
	007 Compare X8, 0
	008 JumpIfNotEqual {21}
	009 Move X20, 0x773000
	010 Move X8, [X20+1784]
	011 Compare X8, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51691520
	014 Add X0, X0, 760
	015 Call 0x1C17CB8
	016 Move X8, X0
	017 Move [X20+1784], X0
	018 Move X0, X19
	019 NotImplemented "Instruction BLR not yet implemented."
	020 Move [X19+16], X31
	021 Move X0, X19
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X1, X31
	025 Move X30, [X31+32]
	026 Move X21, [X31+40]
	027 Call Object.Finalize, X0
	028 Return 
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X21, X0
	031 Move X0, X21
	032 Call 0x3EB2AD0
	033 Move X20, [X0]
	034 Call 0x3EB2AE0
	035 Move X0, X19
	036 Move X1, X31
	037 Call Object.Finalize, X0
	038 Compare X20, 0
	039 JumpIfNotEqual {46}
	040 Move X20, [X31+16]
	041 Move X19, [X31+24]
	042 Move X30, [X31+32]
	043 Move X21, [X31+40]
	044 Return 
	045 Move X20, X31
	046 Move X0, X20
	047 Call 0x1C17F18
	048 Move X21, X0
	049 Move X0, X19
	050 Move X1, X31
	051 Call Object.Finalize, X0
	052 Compare X20, 0
	053 JumpIfNotEqual {56}
	054 Move X0, X21
	055 Call 0x1D2D690
	056 Move X0, X20
	057 Call 0x1C17F18
	058 Call 0x1991590

Method: System.Void get_textColor_Injected(out UnityEngine.Color ret)

Disassembly:
	0x03C740F4 LDR X3, [X22 + 0x840]
	0x03C740F8 MOV X19, X2
	0x03C740FC MOV X20, X1
	0x03C74100 MOV X21, X0
	0x03C74104 CBNZ X3, 0x3C7411C
	0x03C74108 ADRP X0, 0xFFFFFFFFFCEB7000
	0x03C7410C ADD X0, X0, 0x2C
	0x03C74110 BL 0x1C16CB8
	0x03C74114 MOV X3, X0
	0x03C74118 STR X0, [X22 + 0x840]
	0x03C7411C MOV X0, X21
	0x03C74120 MOV X1, X20
	0x03C74124 MOV X2, X19
	0x03C74128 LDP X20, X19, [X31 + 0x20]
	0x03C7412C LDP X22, X21, [X31 + 0x10]
	0x03C74130 LDR X30, [X31], #0x30
	0x03C74134 BR X3

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x773000
	006 Move X2, [X21+1800]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51748864
	012 Add X0, X0, 204
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+1800], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void set_textColor_Injected(ref UnityEngine.Color value)

Disassembly:
	0x03C74138 SUB X31, X31, 0x30
	0x03C7413C STP X30, X21, [X31 + 0x10]
	0x03C74140 STP X20, X19, [X31 + 0x20]
	0x03C74144 ADRP X21, 0x772000
	0x03C74148 LDR X8, [X21 + 0x848]
	0x03C7414C MOV X19, X1
	0x03C74150 MOV X20, X0
	0x03C74154 STP S0, S1, [X31 + 0x8]
	0x03C74158 STR X31, [X31]
	0x03C7415C CBNZ X8, 0x3C74174
	0x03C74160 ADRP X0, 0xFFFFFFFFFCE95000
	0x03C74164 ADD X0, X0, 0x9FB
	0x03C74168 BL 0x1C16CB8
	0x03C7416C MOV X8, X0
	0x03C74170 STR X0, [X21 + 0x848]
	0x03C74174 ADD X2, X31, 0x8
	0x03C74178 ADD X3, X31, 0x0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x773000
	006 Move X2, [X21+1808]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51920896
	012 Add X0, X0, 1492
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+1808], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

