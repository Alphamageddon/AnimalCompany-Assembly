Type: UnityEngine.GUITargetAttribute

Method: System.Int32 GetGUITargetAttrValue(System.Type klass, System.String methodName)

Disassembly:
	0x03C761E0 LDR X8, [X20]
	0x03C761E4 LDR X9, [X0 + 0xB8]
	0x03C761E8 LDR W10, [X8 + 0xE0]
	0x03C761EC LDR W19, [X9 + 0x8]
	0x03C761F0 CBNZ W10, 0x3C761FC
	0x03C761F4 MOV X0, X8
	0x03C761F8 BL 0x1C16DFC
	0x03C761FC MOV W0, W19
	0x03C76200 MOV W1, W31
	0x03C76204 BL 0x3C6C17C
	0x03C76208 ADRP X8, 0x4A8000
	0x03C7620C LDR X8, [X8 + 0xBD0]
	0x03C76210 LDR X0, [X8]
	0x03C76214 LDR W8, [X0 + 0xE0]
	0x03C76218 CBNZ W8, 0x3C76220
	0x03C7621C BL 0x1C16DFC
	0x03C76220 BL 0x3C6CFDC
	0x03C76224 MOV X19, X31
	0x03C76228 LDR X0, [X21]
	0x03C7622C LDR W8, [X0 + 0xE0]
	0x03C76230 CBNZ W8, 0x3C76238
	0x03C76234 BL 0x1C16DFC
	0x03C76238 ADRP X20, 0x770000
	0x03C7623C LDR X0, [X20 + 0x930]
	0x03C76240 CBNZ X0, 0x3C76254
	0x03C76244 ADRP X0, 0xFFFFFFFFFCE83000
	0x03C76248 ADD X0, X0, 0xA91
	0x03C7624C BL 0x1C16CB8
	0x03C76250 STR X0, [X20 + 0x930]
	0x03C76254 BLR X0
	0x03C76258 CBNZ X19, 0x3C7626C
	0x03C7625C LDP X20, X19, [X31 + 0x20]
	0x03C76260 LDP X22, X21, [X31 + 0x10]
	0x03C76264 LDR X30, [X31], #0x30
	0x03C76268 RET
	0x03C7626C MOV X0, X19
	0x03C76270 BL 0x1C16F18
	0x03C76274 BL 0x1C16F20
	0x03C76278 B 0x3C76288
	0x03C7627C B 0x3C76288
	0x03C76280 B 0x3C76288
	0x03C76284 B 0x3C76288
	0x03C76288 MOV X20, X0
	0x03C7628C CMP W1, 0x1
	0x03C76290 B.NE 0x3C762A8
	0x03C76294 MOV X0, X20
	0x03C76298 BL 0x3EB1AD0
	0x03C7629C LDR X19, [X0]
	0x03C762A0 BL 0x3EB1AE0
	0x03C762A4 B 0x3C76228
	0x03C762A8 MOV X19, X31
	0x03C762AC B 0x3C762B4
	0x03C762B0 MOV X20, X0
	0x03C762B4 LDR X0, [X21]
	0x03C762B8 LDR W8, [X0 + 0xE0]
	0x03C762BC CBNZ W8, 0x3C762C4
	0x03C762C0 BL 0x1C16DFC
	0x03C762C4 ADRP X21, 0x770000
	0x03C762C8 LDR X0, [X21 + 0x930]
	0x03C762CC CBNZ X0, 0x3C762E0
	0x03C762D0 ADRP X0, 0xFFFFFFFFFCE83000
	0x03C762D4 ADD X0, X0, 0xA91
	0x03C762D8 BL 0x1C16CB8
	0x03C762DC STR X0, [X21 + 0x930]
	0x03C762E0 BLR X0
	0x03C762E4 CBNZ X19, 0x3C762F0
	0x03C762E8 MOV X0, X20
	0x03C762EC BL 0x1D2C690
	0x03C762F0 MOV X0, X19
	0x03C762F4 BL 0x1C16F18
	0x03C762F8 BL 0x1990590
	0x03C762FC STP X30, X21, [X31 - 0x20]!
	0x03C76300 STP X20, X19, [X31 + 0x10]
	0x03C76304 ADRP X20, 0x770000
	0x03C76308 ADRP X21, 0x4A9000
	0x03C7630C LDRB W8, [X20 + 0x94A]
	0x03C76310 LDR X21, [X21 + 0x5C8]
	0x03C76314 MOV X19, X0
	0x03C76318 TBNZ X8, 0x0, 0x3C76330
	0x03C7631C ADRP X0, 0x4A9000
	0x03C76320 LDR X0, [X0 + 0x5C8]
	0x03C76324 BL 0x1C16CF4
	0x03C76328 MOVZ W8, 0x1
	0x03C7632C STRB W8, [X20 + 0x94A]
	0x03C76330 LDR X0, [X21]
	0x03C76334 LDR W8, [X0 + 0xE0]
	0x03C76338 CBNZ W8, 0x3C76340
	0x03C7633C BL 0x1C16DFC
	0x03C76340 ADRP X20, 0x770000
	0x03C76344 LDR X0, [X20 + 0x930]
	0x03C76348 CBNZ X0, 0x3C7635C
	0x03C7634C ADRP X0, 0xFFFFFFFFFCE83000
	0x03C76350 ADD X0, X0, 0xA91
	0x03C76354 BL 0x1C16CB8
	0x03C76358 STR X0, [X20 + 0x930]
	0x03C7635C BLR X0
	0x03C76360 MOV X0, X19
	0x03C76364 LDP X20, X19, [X31 + 0x10]
	0x03C76368 LDP X30, X21, [X31], #0x20
	0x03C7636C B 0x3C76370
	0x03C76370 STP X30, X21, [X31 - 0x20]!
	0x03C76374 STP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X21, 0x771000
	010 Move W8, [X21+2144]
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {28}
	017 Move X0, 0x4EB000
	018 Move X0, [X0+1360]
	019 Call 0x1C17CF4
	020 Move X0, 0x4EB000
	021 Move X0, [X0+1368]
	022 Call 0x1C17CF4
	023 Move X0, 0x47E000
	024 Move X0, [X0+1728]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X21+2144], W8
	028 Compare X20, 0
	029 JumpIfEqual {120}
	030 Move W2, 52
	031 Move X0, X20
	032 Move X1, X19
	033 Move X3, X31
	034 Call Type.GetMethod, X0, X1, X2
	035 Move X1, X31
	036 Move X2, X31
	037 Move X19, X0
	038 Call MethodInfo.op_Inequality, X0, X1
	039 Move TEMP, X0
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfNotEqual {90}
	043 Compare X19, 0
	044 JumpIfEqual {120}
	045 Move X8, [X19]
	046 Move W1, 1
	047 Move X0, X19
	048 Move X9, [X8+504]
	049 Move X2, [X8+512]
	050 NotImplemented "Instruction BLR not yet implemented."
	051 Compare X0, 0
	052 JumpIfEqual {90}
	053 Move W8, [X0+24]
	054 Move X19, X0
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move X24, 0x4EB000
	057 Move X25, 0x47E000
	058 Move X24, [X24+1360]
	059 Move X25, [X25+1728]
	060 Move X22, X31
	061 Add X23, X19, 32
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move X0, [X23]
	064 Compare X0, 0
	065 JumpIfEqual {120}
	066 Move X1, X31
	067 Call "il2cpp_vm_object_is_inst", X0
	068 Move X8, [X25]
	069 Move X21, [X24]
	070 Move X20, X0
	071 Move W9, [X8+224]
	072 Compare W9, 0
	073 JumpIfNotEqual {76}
	074 Move X0, X8
	075 Call 0x1C17DFC
	076 Move X0, X21
	077 Move X1, X31
	078 Call Type.GetTypeFromHandle, X0
	079 Move X1, X0
	080 Move X0, X20
	081 Move X2, X31
	082 Call Type.op_Inequality, X0, X1
	083 Move TEMP, X0
	084 And TEMP, TEMP, 1
	085 Compare TEMP, 1
	086 JumpIfNotEqual {102}
	087 Move W8, [X19+24]
	088 Add X22, X22, 1
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Move TEMP, 0
	091 Not TEMP
	092 Move W0, TEMP
	093 Move X20, [X31+48]
	094 Move X19, [X31+56]
	095 Move X22, [X31+32]
	096 Move X21, [X31+40]
	097 Move X24, [X31+16]
	098 Move X23, [X31+24]
	099 Move X30, [X31+64]
	100 Move X25, [X31+72]
	101 Return X0
	102 Move W8, [X19+24]
	103 NotImplemented "Instruction CMP not yet implemented."
	104 Add X8, X19, 32
	105 Move X8, [X8]
	106 Compare X8, 0
	107 JumpIfEqual {120}
	108 Move X9, 0x4EB000
	109 Move X9, [X9+1368]
	110 Move X10, [X8]
	111 Move X9, [X9]
	112 Move W12, [X10+304]
	113 Move W11, [X9+304]
	114 NotImplemented "Instruction CMP not yet implemented."
	115 Move X10, [X10+200]
	116 Add X10, X10, X11
	117 NotImplemented "Instruction LDUR not yet implemented."
	118 NotImplemented "Instruction CMP not yet implemented."
	119 Move W0, [X8+16]
	120 Call 0x1C17F20
	121 Call 0x1C17F28

