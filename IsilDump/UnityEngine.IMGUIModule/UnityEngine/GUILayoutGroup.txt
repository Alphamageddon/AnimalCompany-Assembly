Type: UnityEngine.GUILayoutGroup

Method: System.Int32 get_marginLeft()

Disassembly:
	0x03C78684 B 0x3C7868C
	0x03C78688 MOV X19, X0

ISIL:
	001 Move W0, [X0+128]
	002 Return X0

Method: System.Int32 get_marginRight()

Disassembly:
	0x03C7868C ADRP X8, 0x4E8000
	0x03C78690 LDR X8, [X8 + 0x350]

ISIL:
	001 Move W0, [X0+132]
	002 Return X0

Method: System.Int32 get_marginTop()

Disassembly:
	0x03C78694 LDR X1, [X8]
	0x03C78698 ADD X0, X31, 0x60

ISIL:
	001 Move W0, [X0+136]
	002 Return X0

Method: System.Int32 get_marginBottom()

Disassembly:
	0x03C7869C BL 0x2BC434C
	0x03C786A0 CBZ X20, 0x3C7870C

ISIL:
	001 Move W0, [X0+140]
	002 Return X0

Method: System.Void .ctor()

Disassembly:
	0x03C70B68 MOV X0, X20
	0x03C70B6C BL 0x3C70DD4
	0x03C70B70 TBZ X0, 0x0, 0x3C70C20
	0x03C70B74 ADRP X22, 0x4F0000
	0x03C70B78 LDR X22, [X22 + 0x2B0]
	0x03C70B7C LDR X0, [X22]
	0x03C70B80 LDR W8, [X0 + 0xE0]
	0x03C70B84 CBNZ W8, 0x3C70B90
	0x03C70B88 BL 0x1C16DFC
	0x03C70B8C LDR X0, [X22]
	0x03C70B90 LDR X8, [X0 + 0xB8]
	0x03C70B94 LDR X8, [X8 + 0x10]
	0x03C70B98 CBZ X8, 0x3C70DC8
	0x03C70B9C LDR X22, [X8 + 0x18]
	0x03C70BA0 ADRP X8, 0x4F0000
	0x03C70BA4 LDR X8, [X8 + 0x3D0]
	0x03C70BA8 LDR X0, [X8]
	0x03C70BAC BL 0x1C16F10
	0x03C70BB0 MOV X1, X20
	0x03C70BB4 MOV X2, X21
	0x03C70BB8 MOV X3, X19
	0x03C70BBC MOV X23, X0
	0x03C70BC0 BL 0x3C70E80
	0x03C70BC4 CBZ X22, 0x3C70DC8
	0x03C70BC8 MOV X0, X22
	0x03C70BCC MOV X1, X23
	0x03C70BD0 B 0x3C70D6C
	0x03C70BD4 ADRP X19, 0x4F0000
	0x03C70BD8 LDR X19, [X19 + 0x2B0]
	0x03C70BDC LDR X0, [X19]
	0x03C70BE0 LDR W8, [X0 + 0xE0]
	0x03C70BE4 CBNZ W8, 0x3C70BF0
	0x03C70BE8 BL 0x1C16DFC
	0x03C70BEC LDR X0, [X19]
	0x03C70BF0 LDR X8, [X0 + 0xB8]
	0x03C70BF4 LDR X8, [X8 + 0x10]
	0x03C70BF8 CBZ X8, 0x3C70DC8
	0x03C70BFC LDR X0, [X8 + 0x18]
	0x03C70C00 CBZ X0, 0x3C70DC8
	0x03C70C04 BL 0x3C706B4
	0x03C70C08 CBZ X0, 0x3C70DC8
	0x03C70C0C ADD X8, X0, 0x20
	0x03C70C10 ADD X9, X0, 0x24
	0x03C70C14 ADD X10, X0, 0x28
	0x03C70C18 ADD X11, X0, 0x2C
	0x03C70C1C B 0x3C70DA0
	0x03C70C20 FMOV S8, W31
	0x03C70C24 CBZ X19, 0x3C70CDC
	0x03C70C28 LDR W8, [X19 + 0x18]
	0x03C70C2C FMOV S9, W31
	0x03C70C30 CMP W8, 0x1
	0x03C70C34 B.LT 0x3C70CE0
	0x03C70C38 ADRP X24, 0x483000
	0x03C70C3C LDR X24, [X24 + 0xA90]
	0x03C70C40 MOV X22, X31
	0x03C70C44 ADD X23, X19, 0x20
	0x03C70C48 FMOV S9, W31
	0x03C70C4C FMOV S8, W31
	0x03C70C50 CMP W22, W8
	0x03C70C54 B.CS 0x3C70DCC
	0x03C70C58 LDR X8, [X23, X22, LSL #3]
	0x03C70C5C CBZ X8, 0x3C70DC8
	0x03C70C60 LDR W9, [X8 + 0x10]
	0x03C70C64 CMP W9, 0x3
	0x03C70C68 B.EQ 0x3C70CA0
	0x03C70C6C CMP W9, 0x5
	0x03C70C70 B.NE 0x3C70CC8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x777000
	008 Move X22, 0x4F1000
	009 Move X20, 0x4F1000
	010 Move X21, 0x4AB000
	011 Move W8, [X23+2424]
	012 Move X22, [X22+824]
	013 Move X20, [X20+832]
	014 Move X21, [X21+2192]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {34}
	020 Move X0, 0x4F1000
	021 Move X0, [X0+840]
	022 Call 0x1C17CF4
	023 Move X0, 0x4AB000
	024 Move X0, [X0+2192]
	025 Call 0x1C17CF4
	026 Move X0, 0x4F1000
	027 Move X0, [X0+832]
	028 Call 0x1C17CF4
	029 Move X0, 0x4F1000
	030 Move X0, [X0+824]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X23+2424], W8
	034 Move X0, [X22]
	035 Move X22, 0x4F1000
	036 Move X22, [X22+840]
	037 Call 0x1C17F10
	038 Move X1, [X20]
	039 Move X20, X0
	040 Call List`1<Object>..ctor, X0
	041 Move X9, -51916800
	042 Move V0, [X9+54]
	043 Move W10, 0x42C80000
	044 Move W8, 1
	045 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	046 Move [X19+72], X20
	047 Move [X19+84], W31
	048 NotImplemented "Instruction STRH not yet implemented."
	049 NotImplemented "Instruction STRH not yet implemented."
	050 NotImplemented "Instruction STRH not yet implemented."
	051 Move [X19+92], V0
	052 Move [X19+7], V1
	053 Move X0, [X21]
	054 Move W8, [X0+224]
	055 Compare W8, 0
	056 JumpIfNotEqual {58}
	057 Call 0x1C17DFC
	058 Call GUIStyle.get_none
	059 Move X8, [X22]
	060 Move X20, X0
	061 Move W9, [X8+224]
	062 Compare W9, 0
	063 JumpIfNotEqual {66}
	064 Move X0, X8
	065 Call 0x1C17DFC
	066 Move X0, X19
	067 Move X1, X20
	068 Move X20, [X31+32]
	069 Move X19, [X31+40]
	070 Move X22, [X31+16]
	071 Move X21, [X31+24]
	072 Move S0, W31
	073 Move S1, W31
	074 Move S2, W31
	075 Move S3, W31
	076 Move X30, [X31+48]
	077 Move X23, [X31+56]
	078 Call GUILayoutEntry..ctor, X0, V0, V1, V2, V3, X1
	079 Return 

Method: System.Void ApplyOptions(UnityEngine.GUILayoutOption[] options)

Disassembly:
	0x03C786A4 MOV X0, X20
	0x03C786A8 BL 0x1C16F18
	0x03C786AC MOV X19, X0
	0x03C786B0 CMP W1, 0x1
	0x03C786B4 B.NE 0x3C786E8
	0x03C786B8 MOV X0, X19
	0x03C786BC BL 0x3EB1AD0
	0x03C786C0 LDR X20, [X0]
	0x03C786C4 BL 0x3EB1AE0
	0x03C786C8 ADRP X8, 0x4E8000
	0x03C786CC LDR X8, [X8 + 0x350]
	0x03C786D0 ADD X0, X31, 0x40
	0x03C786D4 LDR X1, [X8]
	0x03C786D8 BL 0x2BC434C
	0x03C786DC CBZ X20, 0x3C78578
	0x03C786E0 MOV X0, X20
	0x03C786E4 BL 0x1C16F18
	0x03C786E8 MOV X20, X31
	0x03C786EC B 0x3C786F4
	0x03C786F0 MOV X19, X0
	0x03C786F4 ADRP X8, 0x4E8000
	0x03C786F8 LDR X8, [X8 + 0x350]
	0x03C786FC LDR X1, [X8]
	0x03C78700 ADD X0, X31, 0x40
	0x03C78704 BL 0x2BC434C
	0x03C78708 CBNZ X20, 0x3C78714
	0x03C7870C MOV X0, X19
	0x03C78710 BL 0x1D2C690
	0x03C78714 MOV X0, X20
	0x03C78718 BL 0x1C16F18
	0x03C7871C BL 0x1990590
	0x03C78720 SUB X31, X31, 0xB0
	0x03C78724 STP D9, D8, [X31 + 0x60]
	0x03C78728 STP X30, X25, [X31 + 0x70]
	0x03C7872C STP X24, X23, [X31 + 0x80]
	0x03C78730 STP X22, X21, [X31 + 0x90]
	0x03C78734 STP X20, X19, [X31 + 0xA0]
	0x03C78738 ADRP X20, 0x76E000
	0x03C7873C LDRB W8, [X20 + 0x97E]
	0x03C78740 MOV X19, X0
	0x03C78744 TBNZ X8, 0x0, 0x3C787A4
	0x03C78748 ADRP X0, 0x4E8000
	0x03C7874C LDR X0, [X0 + 0x350]
	0x03C78750 BL 0x1C16CF4
	0x03C78754 ADRP X0, 0x4E8000
	0x03C78758 LDR X0, [X0 + 0x358]
	0x03C7875C BL 0x1C16CF4
	0x03C78760 ADRP X0, 0x4E8000
	0x03C78764 LDR X0, [X0 + 0x360]
	0x03C78768 BL 0x1C16CF4
	0x03C7876C ADRP X0, 0x4A2000
	0x03C78770 LDR X0, [X0 + 0x890]
	0x03C78774 BL 0x1C16CF4
	0x03C78778 ADRP X0, 0x4E8000
	0x03C7877C LDR X0, [X0 + 0x368]
	0x03C78780 BL 0x1C16CF4
	0x03C78784 ADRP X0, 0x4E8000
	0x03C78788 LDR X0, [X0 + 0x398]
	0x03C7878C BL 0x1C16CF4
	0x03C78790 ADRP X0, 0x4E8000
	0x03C78794 LDR X0, [X0 + 0x3A0]
	0x03C78798 BL 0x1C16CF4
	0x03C7879C MOVZ W8, 0x1
	0x03C787A0 STRB W8, [X20 + 0x97E]
	0x03C787A4 STP X31, X31, [X31 + 0x40]
	0x03C787A8 STR X31, [X31 + 0x50]
	0x03C787AC STP X31, X31, [X31 + 0x20]
	0x03C787B0 STR X31, [X31 + 0x30]
	0x03C787B4 LDR X0, [X19 + 0x48]
	0x03C787B8 CBZ X0, 0x3C78C0C
	0x03C787BC LDR W8, [X0 + 0x18]
	0x03C787C0 CBZ W8, 0x3C78928

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X21, 0x76F000
	011 Move W8, [X21+2425]
	012 Move X19, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x47C000
	019 Move X0, [X0+1880]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+2425], W8
	023 Compare X19, 0
	024 JumpIfEqual {64}
	025 Move X0, X20
	026 Move X1, X19
	027 Call GUILayoutEntry.ApplyOptions, X0, X1
	028 Move X8, [X19+24]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X26, 0x47C000
	031 Move X26, [X26+1880]
	032 Move X21, X31
	033 Add X22, X19, 32
	034 Move W23, 1
	035 Move W24, 13
	036 Move W25, 50
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X9, [X22]
	039 Compare X9, 0
	040 JumpIfEqual {74}
	041 Move W10, [X9+16]
	042 NotImplemented "Instruction CMP not yet implemented."
	043 NotImplemented "Instruction LSLV not yet implemented."
	044 And W31, W11, W24
	045 And W31, W11, W25
	046 Move [X20+108], W23
	047 Move [X20+109], W23
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X0, [X9+24]
	050 Compare X0, 0
	051 JumpIfEqual {74}
	052 Move X8, [X0]
	053 Move X1, [X26]
	054 Move X8, [X8+64]
	055 Move X9, [X1+64]
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Call 0x1C17E08
	058 Move V0, [X0]
	059 NotImplemented "Instruction SCVTF not yet implemented."
	060 Move [X20+84], S0
	061 Move X8, [X19+24]
	062 Add X21, X21, 1
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move X20, [X31+64]
	065 Move X19, [X31+72]
	066 Move X22, [X31+48]
	067 Move X21, [X31+56]
	068 Move X24, [X31+32]
	069 Move X23, [X31+40]
	070 Move X26, [X31+16]
	071 Move X25, [X31+24]
	072 Move X30, [X31+80]
	073 Return 
	074 Call 0x1C17F20
	075 Call 0x1C17F28
	076 Call 0x1C181E0

Method: System.Void ApplyStyleSettings(UnityEngine.GUIStyle style)

Disassembly:
	0x03C787C4 LDRB W8, [X19 + 0x50]
	0x03C787C8 STR X31, [X19 + 0x78]
	0x03C787CC STR W31, [X19 + 0x68]
	0x03C787D0 CBZ W8, 0x3C7894C
	0x03C787D4 ADRP X8, 0x4E8000
	0x03C787D8 LDR X8, [X8 + 0x368]
	0x03C787DC LDR X1, [X8]
	0x03C787E0 ADD X8, X31, 0x8
	0x03C787E4 BL 0x301CB58
	0x03C787E8 LDUR V0, [X31 + 0x8]
	0x03C787EC LDR X8, [X31 + 0x18]
	0x03C787F0 ADRP X21, 0x4E8000
	0x03C787F4 MOV W23, W31
	0x03C787F8 STR V0, [X31 + 0x4]
	0x03C787FC STR X8, [X31 + 0x50]
	0x03C78800 LDR X21, [X21 + 0x358]
	0x03C78804 MOVZ W22, 0x1
	0x03C78808 LDR X1, [X21]
	0x03C7880C ADD X0, X31, 0x40
	0x03C78810 BL 0x2BC4350
	0x03C78814 TBZ X0, 0x0, 0x3C788C4
	0x03C78818 LDR X20, [X31 + 0x50]
	0x03C7881C CBZ X20, 0x3C78C04
	0x03C78820 LDR X8, [X20]
	0x03C78824 LDP X9, X1, [X8 + 0x1C8]
	0x03C78828 MOV X0, X20
	0x03C7882C BLR X9
	0x03C78830 LDRB W8, [X20 + 0x38]
	0x03C78834 CBZ W8, 0x3C78844

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, X1
	005 Move X19, X0
	006 Call GUILayoutEntry.ApplyStyleSettings, X0, X1
	007 Compare X20, 0
	008 JumpIfEqual {33}
	009 Move X0, X20
	010 Call GUIStyle.get_margin, X0
	011 Compare X0, 0
	012 JumpIfEqual {33}
	013 Move X1, X31
	014 Move X20, X0
	015 Call RectOffset.get_left, X0
	016 Move [X19+128], W0
	017 Move X0, X20
	018 Move X1, X31
	019 Call RectOffset.get_right, X0
	020 Move [X19+132], W0
	021 Move X0, X20
	022 Move X1, X31
	023 Call RectOffset.get_top, X0
	024 Move [X19+136], W0
	025 Move X0, X20
	026 Move X1, X31
	027 Call RectOffset.get_bottom, X0
	028 Move [X19+140], W0
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X30, [X31+32]
	032 Return 
	033 Call 0x1C17F20

Method: System.Void ResetCursor()

Disassembly:
	0x03C704F4 LDR X0, [X0 + 0x2E0]
	0x03C704F8 BL 0x1C16CF4

ISIL:
	001 Move [X0+96], W31
	002 Return 

Method: UnityEngine.GUILayoutEntry GetNext()

Disassembly:
	0x03C716B4 ADRP X8, 0x4A9000
	0x03C716B8 LDR X8, [X8 + 0x890]
	0x03C716BC LDR X20, [X19 + 0x18]
	0x03C716C0 LDR X0, [X8]
	0x03C716C4 LDR W8, [X0 + 0xE0]
	0x03C716C8 CBNZ W8, 0x3C716D0
	0x03C716CC BL 0x1C16DFC
	0x03C716D0 ADRP X21, 0x775000
	0x03C716D4 LDR X8, [X21 + 0x7D8]
	0x03C716D8 CBNZ X8, 0x3C716F0
	0x03C716DC ADRP X0, 0xFFFFFFFFFCEA8000
	0x03C716E0 ADD X0, X0, 0x112
	0x03C716E4 BL 0x1C16CB8
	0x03C716E8 MOV X8, X0
	0x03C716EC STR X0, [X21 + 0x7D8]
	0x03C716F0 MOV X0, X20
	0x03C716F4 BLR X8
	0x03C716F8 MOV X0, X19
	0x03C716FC LDP X20, X19, [X31 + 0x20]
	0x03C71700 LDP X22, X21, [X31 + 0x10]
	0x03C71704 LDP X30, X23, [X31], #0x30
	0x03C71708 B 0x3C7155C
	0x03C7170C STR X30, [X31 - 0x20]!
	0x03C71710 STP X20, X19, [X31 + 0x10]
	0x03C71714 ADRP X20, 0x775000
	0x03C71718 LDR X1, [X20 + 0x7D8]
	0x03C7171C MOV X19, X0
	0x03C71720 CBNZ X1, 0x3C71738
	0x03C71724 ADRP X0, 0xFFFFFFFFFCEA8000
	0x03C71728 ADD X0, X0, 0x112
	0x03C7172C BL 0x1C16CB8
	0x03C71730 MOV X1, X0
	0x03C71734 STR X0, [X20 + 0x7D8]
	0x03C71738 MOV X0, X19
	0x03C7173C LDP X20, X19, [X31 + 0x10]
	0x03C71740 LDR X30, [X31], #0x20
	0x03C71744 BR X1
	0x03C71748 STR X1, [X0 + 0x20]
	0x03C7174C B 0x3C7155C
	0x03C71750 STR X1, [X0 + 0x38]
	0x03C71754 B 0x3C7155C
	0x03C71758 STR X1, [X0 + 0x40]
	0x03C7175C B 0x3C7155C
	0x03C71760 LDR X0, [X0 + 0x48]
	0x03C71764 RET
	0x03C71768 STR X1, [X0 + 0x48]
	0x03C7176C B 0x3C7155C
	0x03C71770 STR X1, [X0 + 0x28]
	0x03C71774 B 0x3C7155C
	0x03C71778 STR X1, [X0 + 0x30]
	0x03C7177C B 0x3C7155C
	0x03C71780 STR X1, [X0 + 0x50]
	0x03C71784 B 0x3C7155C
	0x03C71788 STR X1, [X0 + 0x58]
	0x03C7178C B 0x3C7155C
	0x03C71790 STR X1, [X0 + 0x60]
	0x03C71794 B 0x3C7155C
	0x03C71798 LDR X0, [X0 + 0x68]
	0x03C7179C RET
	0x03C717A0 STR X1, [X0 + 0x68]
	0x03C717A4 B 0x3C7155C
	0x03C717A8 LDR X0, [X0 + 0x88]
	0x03C717AC RET
	0x03C717B0 STR X1, [X0 + 0x88]
	0x03C717B4 B 0x3C7155C
	0x03C717B8 LDR X0, [X0 + 0x70]
	0x03C717BC RET
	0x03C717C0 STR X1, [X0 + 0x70]
	0x03C717C4 B 0x3C7155C
	0x03C717C8 LDR X0, [X0 + 0x78]
	0x03C717CC RET
	0x03C717D0 STR X1, [X0 + 0x78]
	0x03C717D4 B 0x3C7155C
	0x03C717D8 LDR X0, [X0 + 0x80]
	0x03C717DC RET
	0x03C717E0 STR X1, [X0 + 0x80]
	0x03C717E4 B 0x3C7155C
	0x03C717E8 LDR X0, [X0 + 0x90]
	0x03C717EC RET
	0x03C717F0 STR X1, [X0 + 0x90]
	0x03C717F4 B 0x3C7155C
	0x03C717F8 LDR X0, [X0 + 0x98]
	0x03C717FC RET
	0x03C71800 STR X1, [X0 + 0x98]
	0x03C71804 B 0x3C7155C
	0x03C71808 LDR X0, [X0 + 0xA0]
	0x03C7180C RET
	0x03C71810 STR X1, [X0 + 0xA0]
	0x03C71814 B 0x3C7155C
	0x03C71818 LDR X0, [X0 + 0xA8]
	0x03C7181C RET
	0x03C71820 STR X1, [X0 + 0xA8]
	0x03C71824 B 0x3C7155C
	0x03C71828 LDR X0, [X0 + 0xB0]
	0x03C7182C RET
	0x03C71830 STR X1, [X0 + 0xB0]
	0x03C71834 B 0x3C7155C
	0x03C71838 LDR X0, [X0 + 0xB8]
	0x03C7183C RET
	0x03C71840 STR X1, [X0 + 0xB8]
	0x03C71844 B 0x3C7155C
	0x03C71848 LDR X0, [X0 + 0xC0]
	0x03C7184C RET
	0x03C71850 STR X1, [X0 + 0xC0]
	0x03C71854 B 0x3C7155C
	0x03C71858 LDR X0, [X0 + 0xC8]
	0x03C7185C RET
	0x03C71860 STR X1, [X0 + 0xC8]
	0x03C71864 B 0x3C7155C
	0x03C71868 LDR X0, [X0 + 0xD0]
	0x03C7186C RET
	0x03C71870 STR X1, [X0 + 0xD0]
	0x03C71874 B 0x3C7155C
	0x03C71878 LDR X0, [X0 + 0xD8]
	0x03C7187C RET
	0x03C71880 STR X1, [X0 + 0xD8]
	0x03C71884 B 0x3C7155C
	0x03C71888 STR X30, [X31 - 0x30]!
	0x03C7188C STP X22, X21, [X31 + 0x10]
	0x03C71890 STP X20, X19, [X31 + 0x20]
	0x03C71894 ADRP X19, 0x775000
	0x03C71898 ADRP X21, 0x4EF000
	0x03C7189C LDRB W8, [X19 + 0x6D3]
	0x03C718A0 LDR X21, [X21 + 0x288]
	0x03C718A4 TBNZ X8, 0x0, 0x3C718D4
	0x03C718A8 ADRP X0, 0x4EF000
	0x03C718AC LDR X0, [X0 + 0x288]
	0x03C718B0 BL 0x1C16CF4
	0x03C718B4 ADRP X0, 0x4A9000
	0x03C718B8 LDR X0, [X0 + 0x890]
	0x03C718BC BL 0x1C16CF4
	0x03C718C0 ADRP X0, 0x4EF000
	0x03C718C4 LDR X0, [X0 + 0x400]
	0x03C718C8 BL 0x1C16CF4
	0x03C718CC MOVZ W8, 0x1
	0x03C718D0 STRB W8, [X19 + 0x6D3]
	0x03C718D4 LDR X8, [X21]
	0x03C718D8 LDR X9, [X8 + 0xB8]
	0x03C718DC LDR X9, [X9]
	0x03C718E0 CBNZ X9, 0x3C71958
	0x03C718E4 ADRP X8, 0x4A9000
	0x03C718E8 LDR X8, [X8 + 0x890]
	0x03C718EC LDR X0, [X8]
	0x03C718F0 BL 0x1C16F10
	0x03C718F4 MOV X19, X0
	0x03C718F8 BL 0x3C71974
	0x03C718FC LDR X8, [X21]
	0x03C71900 LDR X8, [X8 + 0xB8]
	0x03C71904 STR X19, [X8]
	0x03C71908 LDR X8, [X21]
	0x03C7190C LDR X8, [X8 + 0xB8]
	0x03C71910 LDR X19, [X8]
	0x03C71914 CBZ X19, 0x3C71970
	0x03C71918 ADRP X8, 0x4EF000
	0x03C7191C LDR X8, [X8 + 0x400]
	0x03C71920 ADRP X22, 0x775000
	0x03C71924 LDR X20, [X8]
	0x03C71928 STR X20, [X19 + 0x78]
	0x03C7192C LDR X8, [X22 + 0x720]
	0x03C71930 CBNZ X8, 0x3C71948
	0x03C71934 ADRP X0, 0xFFFFFFFFFCE94000
	0x03C71938 ADD X0, X0, 0x5DA
	0x03C7193C BL 0x1C16CB8
	0x03C71940 MOV X8, X0
	0x03C71944 STR X0, [X22 + 0x720]
	0x03C71948 MOV X0, X19
	0x03C7194C MOV X1, X20
	0x03C71950 BLR X8
	0x03C71954 LDR X8, [X21]
	0x03C71958 LDR X8, [X8 + 0xB8]
	0x03C7195C LDP X20, X19, [X31 + 0x20]
	0x03C71960 LDP X22, X21, [X31 + 0x10]
	0x03C71964 LDR X0, [X8]
	0x03C71968 LDR X30, [X31], #0x30
	0x03C7196C RET
	0x03C71970 BL 0x1C16F20
	0x03C71974 STP X30, X21, [X31 - 0x20]!
	0x03C71978 STP X20, X19, [X31 + 0x10]
	0x03C7197C ADRP X21, 0x775000
	0x03C71980 ADRP X20, 0x4A9000
	0x03C71984 LDRB W8, [X21 + 0x7E0]
	0x03C71988 LDR X20, [X20 + 0x890]
	0x03C7198C MOV X19, X0
	0x03C71990 TBNZ X8, 0x0, 0x3C719A8
	0x03C71994 ADRP X0, 0x4A9000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+48], X22
	004 Move [X31+56], X21
	005 Move [X31+64], X20
	006 Move [X31+72], X19
	007 Move X20, 0x776000
	008 Move W8, [X20+2426]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0x4F0000
	015 Move X0, [X0+720]
	016 Call 0x1C17CF4
	017 Move X0, 0x4F0000
	018 Move X0, [X0+920]
	019 Call 0x1C17CF4
	020 Move X0, 0x4F0000
	021 Move X0, [X0+928]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+2426], W8
	025 Move X21, X19
	026 Add X21, X21, 96
	027 Move W1, [X21]
	028 NotImplemented "Instruction LDUR not yet implemented."
	029 Compare X0, 0
	030 JumpIfEqual {87}
	031 Move W8, [X0+24]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X8, 0x4F0000
	034 Move X8, [X8+928]
	035 Move X2, [X8]
	036 Call List`1<Object>.get_Item, X0, X1
	037 Move W8, [X21]
	038 Add W8, W8, 1
	039 Move [X21], W8
	040 Move X20, 0x776000
	041 Move X22, 0x4E9000
	042 Move W8, [X20+1296]
	043 Move X22, [X22+32]
	044 Move TEMP, X8
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfEqual {53}
	048 Move X0, 0x4E9000
	049 Move X0, [X0+32]
	050 Call 0x1C17CF4
	051 Move W8, 1
	052 Move [X20+1296], W8
	053 Move X8, [X22]
	054 Move X8, [X8+184]
	055 Move X20, [X8]
	056 Compare X20, 0
	057 JumpIfEqual {87}
	058 Move X22, 0x776000
	059 Move X8, [X22+1192]
	060 Compare X8, 0
	061 JumpIfNotEqual {67}
	062 Move X0, -51900416
	063 Add X0, X0, 1382
	064 Call 0x1C17CB8
	065 Move X8, X0
	066 Move [X22+1192], X0
	067 Move X0, X20
	068 NotImplemented "Instruction BLR not yet implemented."
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move X19, 0x4F0000
	071 Move X19, [X19+720]
	072 Move X0, [X19]
	073 Move W8, [X0+224]
	074 Compare W8, 0
	075 JumpIfNotEqual {78}
	076 Call 0x1C17DFC
	077 Move X0, [X19]
	078 Move X8, [X0+184]
	079 Move X0, [X8]
	080 Move X20, [X31+64]
	081 Move X19, [X31+72]
	082 Move X22, [X31+48]
	083 Move X21, [X31+56]
	084 Move X30, [X31+32]
	085 Add X31, X31, 80
	086 Return X0
	087 Call 0x1C17F20
	088 Move X0, 0x483000
	089 Move X0, [X0+2760]
	090 Call 0x1C17D08
	091 Move W1, 7
	092 Call 0x1C17D6C
	093 Move X22, X19
	094 Move X19, X0
	095 Call 0x19913C0
	096 Move X0, 0x4F0000
	097 Move X0, [X0+936]
	098 Call 0x1C17D08
	099 Move X2, X0
	100 Move X0, X19
	101 Move X1, X31
	102 Call 0x1994444
	103 Move X0, X21
	104 Move X1, X31
	105 Call Int32.ToString, X0
	106 Move X20, X0
	107 Move X0, X19
	108 Call 0x19913C0
	109 Move W1, 1
	110 Move X0, X19
	111 Move X2, X20
	112 Call 0x1994444
	113 Move X0, X19
	114 Call 0x19913C0
	115 Move X0, 0x4F0000
	116 Move X0, [X0+944]
	117 Call 0x1C17D08
	118 Move X2, X0
	119 Move W1, 2
	120 Move X0, X19
	121 Call 0x1994444
	122 Move X20, [X22+72]
	123 Move X0, X20
	124 Call 0x19913C0
	125 Move X0, 0x4F0000
	126 Move X0, [X0+920]
	127 Call 0x1C17D08
	128 Move W8, [X20+24]
	129 Add X0, X31, 44
	130 Move X1, X31
	131 Move [X31+44], W8
	132 Call Int32.ToString, X0
	133 Move X20, X0
	134 Move X0, X19
	135 Call 0x19913C0
	136 Move W1, 3
	137 Move X0, X19
	138 Move X2, X20
	139 Call 0x1994444
	140 Move X0, X19
	141 Call 0x19913C0
	142 Move X0, 0x4F0000
	143 Move X0, [X0+952]
	144 Call 0x1C17D08
	145 Move X2, X0
	146 Move W1, 4
	147 Move X0, X19
	148 Call 0x1994444
	149 Call Event.get_current
	150 Move X20, X0
	151 Call 0x19913C0
	152 Move X0, X20
	153 Call Event.get_rawType, X0
	154 Move W20, W0
	155 Move X0, 0x4AC000
	156 Move X0, [X0+3688]
	157 Call 0x1C17D08
	158 Move TEMP, 0
	159 Not TEMP
	160 Move X8, TEMP
	161 Move [X31+8], X0
	162 Move [X31+16], X8
	163 Add X0, X31, 8
	164 Move X1, X31
	165 Move [X31+24], W20
	166 Call Enum.ToString, X0
	167 Move X20, X0
	168 Move X0, X19
	169 Call 0x19913C0
	170 Move W1, 5
	171 Move X0, X19
	172 Move X2, X20
	173 Call 0x1994444
	174 Move X0, X19
	175 Call 0x19913C0
	176 Move X0, 0x4F0000
	177 Move X0, [X0+960]
	178 Call 0x1C17D08
	179 Move X2, X0
	180 Move W1, 6
	181 Move X0, X19
	182 Call 0x1994444
	183 Move X0, X19
	184 Move X1, X31
	185 Call String.Concat, X0
	186 Move X19, X0
	187 Move X0, 0x48B000
	188 Move X0, [X0+1400]
	189 Call 0x1C17D08
	190 Call 0x1C17F10
	191 Move X1, X19
	192 Move X2, X31
	193 Move X20, X0
	194 Call ArgumentException..ctor, X0, X1
	195 Move X0, 0x4F0000
	196 Move X0, [X0+968]
	197 Call 0x1C17D08
	198 Move X1, X0
	199 Move X0, X20
	200 Call 0x1C17DEC

Method: System.Void Add(UnityEngine.GUILayoutEntry e)

Disassembly:
	0x03C71610 LDR X8, [X8 + 0xB8]
	0x03C71614 STR X31, [X8 + 0x10]
	0x03C71618 STR X31, [X8]
	0x03C7161C LDR X30, [X31], #0x20
	0x03C71620 RET
	0x03C71624 STP X30, X23, [X31 - 0x30]!
	0x03C71628 STP X22, X21, [X31 + 0x10]
	0x03C7162C STP X20, X19, [X31 + 0x20]
	0x03C71630 ADRP X23, 0x775000
	0x03C71634 ADRP X22, 0x4EF000
	0x03C71638 ADRP X21, 0x482000
	0x03C7163C LDRB W8, [X23 + 0x6D2]
	0x03C71640 LDR X22, [X22 + 0x288]
	0x03C71644 LDR X21, [X21 + 0x598]
	0x03C71648 MOV X20, X1
	0x03C7164C MOV X19, X0
	0x03C71650 TBNZ X8, 0x0, 0x3C71680
	0x03C71654 ADRP X0, 0x4EF000
	0x03C71658 LDR X0, [X0 + 0x288]
	0x03C7165C BL 0x1C16CF4
	0x03C71660 ADRP X0, 0x4A9000
	0x03C71664 LDR X0, [X0 + 0x890]
	0x03C71668 BL 0x1C16CF4
	0x03C7166C ADRP X0, 0x482000
	0x03C71670 LDR X0, [X0 + 0x598]
	0x03C71674 BL 0x1C16CF4
	0x03C71678 MOVZ W8, 0x1
	0x03C7167C STRB W8, [X23 + 0x6D2]
	0x03C71680 STR X20, [X19 + 0x18]
	0x03C71684 LDR X8, [X22]
	0x03C71688 LDR X0, [X21]
	0x03C7168C LDR X8, [X8 + 0xB8]
	0x03C71690 LDR W9, [X0 + 0xE0]
	0x03C71694 LDR X20, [X8 + 0x10]
	0x03C71698 CBNZ W9, 0x3C716A0
	0x03C7169C BL 0x1C16DFC
	0x03C716A0 MOV X0, X20
	0x03C716A4 MOV X1, X19
	0x03C716A8 MOV X2, X31
	0x03C716AC BL 0x3C3883C
	0x03C716B0 TBZ X0, 0x0, 0x3C716F8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x776000
	006 Move W8, [X21+2427]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x4F0000
	014 Move X0, [X0+912]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2427], W8
	018 Move X0, [X20+72]
	019 Compare X0, 0
	020 JumpIfEqual {52}
	021 Move X9, 0x4F0000
	022 Move X9, [X9+912]
	023 Move W10, [X0+28]
	024 Move X8, [X0+16]
	025 Move X9, [X9]
	026 Add W10, W10, 1
	027 Move [X0+28], W10
	028 Compare X8, 0
	029 JumpIfEqual {52}
	030 NotImplemented "Instruction LDRSW not yet implemented."
	031 Move W11, [X8+24]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Add W9, W10, 1
	034 Add X8, X8, X10
	035 Move [X0+24], W9
	036 Move [X8+32], X19
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X30, [X31+32]
	040 Move X21, [X31+40]
	041 Return 
	042 Move X8, [X9+32]
	043 Move X1, X19
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X8, [X8+192]
	047 Move X2, [X8+112]
	048 Move X30, [X31+32]
	049 Move X21, [X31+40]
	050 Call List`1<Object>.AddWithResize, X0, X1
	051 Return 
	052 Call 0x1C17F20

Method: System.Void CalcWidth()

Disassembly:
	0x03C78838 TBZ X22, 0x0, 0x3C78858
	0x03C7883C MOV W8, W31
	0x03C78840 B 0x3C78870
	0x03C78844 LDR V0, [X19 + 0x78]
	0x03C78848 LDR V1, [X20 + 0x18]
	0x03C7884C FADD V0.2S, V0.2S, V1.2S
	0x03C78850 STR D0, [X19 + 0x78]
	0x03C78854 B 0x3C788B0
	0x03C78858 LDR X8, [X20]
	0x03C7885C LDP X9, X1, [X8 + 0x198]
	0x03C78860 MOV X0, X20
	0x03C78864 BLR X9
	0x03C78868 CMP W23, W0
	0x03C7886C CSEL W8, W23, W0, GT
	0x03C78870 ADD X9, X19, 0x54
	0x03C78874 LDR V0, [X20 + 0x18]
	0x03C78878 UNIMPLEMENTED
	0x03C7887C LDR V3, [X19 + 0x78]
	0x03C78880 SCVTF S2, W8
	0x03C78884 UNIMPLEMENTED
	0x03C78888 FADD V0.2S, V0.2S, V1.2S
	0x03C7888C FADD V0.2S, V0.2S, V2.2S
	0x03C78890 FADD V0.2S, V3.2S, V0.2S
	0x03C78894 STR D0, [X19 + 0x78]
	0x03C78898 LDR X8, [X20]
	0x03C7889C LDP X9, X1, [X8 + 0x1A8]
	0x03C788A0 MOV X0, X20
	0x03C788A4 BLR X9
	0x03C788A8 MOV W22, W31
	0x03C788AC MOV W23, W0
	0x03C788B0 LDR W8, [X19 + 0x68]
	0x03C788B4 LDR W9, [X20 + 0x34]
	0x03C788B8 ADD W8, W9, W8
	0x03C788BC STR W8, [X19 + 0x68]
	0x03C788C0 B 0x3C78808
	0x03C788C4 ADRP X8, 0x4E8000
	0x03C788C8 LDR X8, [X8 + 0x350]
	0x03C788CC ADD X0, X31, 0x40
	0x03C788D0 LDR X1, [X8]
	0x03C788D4 BL 0x2BC434C
	0x03C788D8 ADD X8, X19, 0x54
	0x03C788DC LDR V0, [X19 + 0x78]
	0x03C788E0 UNIMPLEMENTED
	0x03C788E4 LDR X0, [X19 + 0x48]
	0x03C788E8 FSUB V0.2S, V0.2S, V1.2S
	0x03C788EC STR D0, [X19 + 0x78]
	0x03C788F0 CBZ X0, 0x3C78C0C
	0x03C788F4 LDR W8, [X0 + 0x18]
	0x03C788F8 CBZ W8, 0x3C78A54
	0x03C788FC ADRP X8, 0x4E8000
	0x03C78900 LDR X8, [X8 + 0x3A0]
	0x03C78904 MOV W1, W31
	0x03C78908 LDR X2, [X8]
	0x03C7890C BL 0x301BCCC
	0x03C78910 CBZ X0, 0x3C78C0C
	0x03C78914 LDR X8, [X0]
	0x03C78918 LDP X9, X1, [X8 + 0x198]
	0x03C7891C BLR X9
	0x03C78920 MOV W20, W0
	0x03C78924 B 0x3C78A5C
	0x03C78928 LDR X0, [X19 + 0x40]
	0x03C7892C CBZ X0, 0x3C78C0C
	0x03C78930 BL 0x3C74750
	0x03C78934 CBZ X0, 0x3C78C0C
	0x03C78938 MOV X1, X31
	0x03C7893C BL 0x3C0CA10
	0x03C78940 SCVTF S0, W0
	0x03C78944 STP S0, S0, [X19 + 0x18]
	0x03C78948 B 0x3C78BD8
	0x03C7894C ADRP X8, 0x4E8000
	0x03C78950 LDR X8, [X8 + 0x368]
	0x03C78954 LDR X1, [X8]
	0x03C78958 ADD X8, X31, 0x8
	0x03C7895C BL 0x301CB58
	0x03C78960 LDUR V0, [X31 + 0x8]
	0x03C78964 LDR X8, [X31 + 0x18]
	0x03C78968 ADRP X24, 0x4E8000
	0x03C7896C MOV W23, W31
	0x03C78970 STR V0, [X31 + 0x2]
	0x03C78974 STR X8, [X31 + 0x30]
	0x03C78978 LDR X24, [X24 + 0x358]
	0x03C7897C MOV W20, W31
	0x03C78980 MOVZ W25, 0x1
	0x03C78984 LDR X1, [X24]
	0x03C78988 ADD X0, X31, 0x20
	0x03C7898C BL 0x2BC4350
	0x03C78990 TBZ X0, 0x0, 0x3C78A3C
	0x03C78994 LDR X21, [X31 + 0x30]
	0x03C78998 CBZ X21, 0x3C78C08
	0x03C7899C LDR X8, [X21]
	0x03C789A0 LDP X9, X1, [X8 + 0x1C8]
	0x03C789A4 MOV X0, X21
	0x03C789A8 BLR X9
	0x03C789AC LDRB W8, [X21 + 0x38]
	0x03C789B0 CBZ W8, 0x3C78A28
	0x03C789B4 LDR X9, [X21]
	0x03C789B8 LDP X8, X1, [X9 + 0x198]
	0x03C789BC TBZ X25, 0x0, 0x3C789E4
	0x03C789C0 MOV X0, X21
	0x03C789C4 BLR X8
	0x03C789C8 LDR X8, [X21]
	0x03C789CC MOV W22, W0
	0x03C789D0 LDP X9, X1, [X8 + 0x1A8]
	0x03C789D4 MOV X0, X21
	0x03C789D8 BLR X9
	0x03C789DC MOV W23, W0
	0x03C789E0 B 0x3C78A0C
	0x03C789E4 MOV X0, X21
	0x03C789E8 BLR X8
	0x03C789EC LDR X8, [X21]
	0x03C789F0 CMP W0, W20
	0x03C789F4 CSEL W22, W0, W20, LT
	0x03C789F8 LDP X9, X1, [X8 + 0x1A8]
	0x03C789FC MOV X0, X21
	0x03C78A00 BLR X9
	0x03C78A04 CMP W0, W23
	0x03C78A08 CSEL W23, W0, W23, LT
	0x03C78A0C LDR V0, [X21 + 0x18]
	0x03C78A10 LDR V1, [X19 + 0x78]
	0x03C78A14 MOV W25, W31
	0x03C78A18 MOV W20, W22
	0x00000000 INVALID
	0x00000000 INVALID
	0x03C78A24 STR D0, [X19 + 0x78]
	0x03C78A28 LDR W8, [X19 + 0x68]
	0x03C78A2C LDR W9, [X21 + 0x34]
	0x03C78A30 ADD W8, W9, W8
	0x03C78A34 STR W8, [X19 + 0x68]
	0x03C78A38 B 0x3C78984
	0x03C78A3C ADRP X8, 0x4E8000
	0x03C78A40 LDR X8, [X8 + 0x350]
	0x03C78A44 ADD X0, X31, 0x20
	0x03C78A48 LDR X1, [X8]
	0x03C78A4C BL 0x2BC434C
	0x03C78A50 B 0x3C78A5C
	0x03C78A54 MOV W23, W31
	0x03C78A58 MOV W20, W31
	0x03C78A5C ADRP X8, 0x4A2000
	0x03C78A60 LDR X8, [X8 + 0x890]
	0x03C78A64 LDR X21, [X19 + 0x40]
	0x03C78A68 LDR X0, [X8]
	0x03C78A6C LDR W8, [X0 + 0xE0]
	0x03C78A70 CBNZ W8, 0x3C78A78
	0x03C78A74 BL 0x1C16DFC
	0x03C78A78 BL 0x3C6BB04
	0x03C78A7C CMP X21, X0
	0x03C78A80 B.NE 0x3C78A8C
	0x03C78A84 LDRB W8, [X19 + 0x6D]
	0x03C78A88 CBZ W8, 0x3C78BF4
	0x03C78A8C LDR X0, [X19 + 0x40]
	0x03C78A90 CBZ X0, 0x3C78C0C
	0x03C78A94 BL 0x3C74750
	0x03C78A98 CBZ X0, 0x3C78C0C
	0x03C78A9C MOV X1, X31
	0x03C78AA0 BL 0x3C0C920
	0x03C78AA4 LDR X8, [X19 + 0x40]
	0x03C78AA8 CMP W0, W20
	0x03C78AAC CSEL W20, W0, W20, GT
	0x03C78AB0 CBZ X8, 0x3C78C0C
	0x03C78AB4 MOV X0, X8
	0x03C78AB8 BL 0x3C74750
	0x03C78ABC CBZ X0, 0x3C78C0C
	0x03C78AC0 MOV X1, X31
	0x03C78AC4 SCVTF S8, W20
	0x03C78AC8 BL 0x3C0C95C
	0x03C78ACC CMP W0, W23
	0x03C78AD0 CSEL W8, W0, W23, GT
	0x03C78AD4 SCVTF S9, W8
	0x03C78AD8 LDR V1, [X19 + 0x78]
	0x03C78ADC LDP S2, S0, [X19 + 0x18]
	0x03C78AE0 FADD S1, S8, S1
	0x03C78AE4 FADD S1, S9, S1
	0x03C78AE8 FCMP S2, S1
	0x03C78AEC FCSEL S1, S2, S1, GT
	0x03C78AF0 FCMP S0, 0x0
	0x03C78AF4 STR S1, [X19 + 0x18]
	0x03C78AF8 B.NE 0x3C78B5C
	0x03C78AFC LDR X20, [X19 + 0x40]
	0x03C78B00 CBZ X20, 0x3C78C0C
	0x03C78B04 ADRP X23, 0x76E000
	0x03C78B08 LDR W21, [X19 + 0x34]
	0x03C78B0C LDR X8, [X23 + 0x760]
	0x03C78B10 LDR W22, [X19 + 0x68]
	0x03C78B14 CBNZ X8, 0x3C78B2C
	0x03C78B18 ADRP X0, 0xFFFFFFFFFCE9C000
	0x03C78B1C ADD X0, X0, 0xFCF
	0x03C78B20 BL 0x1C16CB8
	0x03C78B24 MOV X8, X0
	0x03C78B28 STR X0, [X23 + 0x760]
	0x03C78B2C MOV X0, X20
	0x03C78B30 BLR X8
	0x03C78B34 LDR V0, [X19 + 0x7C]
	0x03C78B38 LDR V1, [X19 + 0x18]
	0x03C78B3C AND W8, W0, 0x1
	0x03C78B40 ADD W9, W22, W21
	0x03C78B44 FADD S0, S8, S0
	0x03C78B48 ADD W8, W9, W8
	0x03C78B4C FADD S0, S9, S0
	0x03C78B50 STR W8, [X19 + 0x34]
	0x03C78B54 STR S0, [X19 + 0x1C]
	0x03C78B58 B 0x3C78B60
	0x03C78B5C STR W31, [X19 + 0x34]
	0x03C78B60 LDR X20, [X19 + 0x40]
	0x03C78B64 FCMP S0, S1
	0x03C78B68 FCSEL S0, S0, S1, GT
	0x03C78B6C STR S0, [X19 + 0x1C]
	0x03C78B70 CBZ X20, 0x3C78C0C
	0x03C78B74 ADRP X21, 0x76E000
	0x03C78B78 LDR X8, [X21 + 0x750]
	0x03C78B7C CBNZ X8, 0x3C78B94
	0x03C78B80 ADRP X0, 0xFFFFFFFFFCE8F000
	0x03C78B84 ADD X0, X0, 0x9A3
	0x03C78B88 BL 0x1C16CB8
	0x03C78B8C MOV X8, X0
	0x03C78B90 STR X0, [X21 + 0x750]
	0x03C78B94 MOV X0, X20
	0x03C78B98 BLR X8
	0x03C78B9C FCMP S0, 0x0
	0x03C78BA0 B.EQ 0x3C78BD8
	0x03C78BA4 LDR X20, [X19 + 0x40]
	0x03C78BA8 CBZ X20, 0x3C78C0C
	0x03C78BAC LDR X8, [X21 + 0x750]
	0x03C78BB0 CBNZ X8, 0x3C78BC8
	0x03C78BB4 ADRP X0, 0xFFFFFFFFFCE8F000
	0x03C78BB8 ADD X0, X0, 0x9A3
	0x03C78BBC BL 0x1C16CB8
	0x03C78BC0 MOV X8, X0
	0x03C78BC4 STR X0, [X21 + 0x750]
	0x03C78BC8 MOV X0, X20
	0x03C78BCC BLR X8
	0x03C78BD0 STP S0, S0, [X19 + 0x18]
	0x03C78BD4 STR W31, [X19 + 0x34]
	0x03C78BD8 LDP X20, X19, [X31 + 0xA0]
	0x03C78BDC LDP X22, X21, [X31 + 0x90]
	0x03C78BE0 LDP X24, X23, [X31 + 0x80]
	0x03C78BE4 LDP X30, X25, [X31 + 0x70]
	0x03C78BE8 LDP D9, D8, [X31 + 0x60]
	0x03C78BEC ADD X31, X31, 0xB0
	0x03C78BF0 RET
	0x03C78BF4 FMOV S9, W31
	0x03C78BF8 FMOV S8, W31
	0x03C78BFC STP W20, W23, [X19 + 0x88]
	0x03C78C00 B 0x3C78AD8
	0x03C78C04 BL 0x1C16F20
	0x03C78C08 BL 0x1C16F20
	0x03C78C0C BL 0x1C16F20
	0x03C78C10 B 0x3C78C14
	0x03C78C14 MOV X21, X0
	0x03C78C18 MOV W20, W22
	0x03C78C1C B 0x3C78C38
	0x03C78C20 B 0x3C78C34
	0x03C78C24 B 0x3C78C34
	0x03C78C28 B 0x3C78CA8
	0x03C78C2C B 0x3C78C34
	0x03C78C30 B 0x3C78C34
	0x03C78C34 MOV X21, X0
	0x03C78C38 CMP W1, 0x1
	0x03C78C3C B.NE 0x3C78C70
	0x03C78C40 MOV X0, X21
	0x03C78C44 BL 0x3EB1AD0
	0x03C78C48 LDR X22, [X0]
	0x03C78C4C BL 0x3EB1AE0
	0x03C78C50 ADRP X8, 0x4E8000
	0x03C78C54 LDR X8, [X8 + 0x350]
	0x03C78C58 ADD X0, X31, 0x20
	0x03C78C5C LDR X1, [X8]
	0x03C78C60 BL 0x2BC434C
	0x03C78C64 CBZ X22, 0x3C78A5C
	0x03C78C68 MOV X0, X22
	0x03C78C6C BL 0x1C16F18
	0x03C78C70 MOV X22, X31
	0x03C78C74 B 0x3C78C7C
	0x03C78C78 MOV X21, X0
	0x03C78C7C ADRP X8, 0x4E8000
	0x03C78C80 LDR X8, [X8 + 0x350]
	0x03C78C84 LDR X1, [X8]
	0x03C78C88 ADD X0, X31, 0x20
	0x03C78C8C BL 0x2BC434C
	0x03C78C90 CBZ X22, 0x3C78D08
	0x03C78C94 MOV X0, X22
	0x03C78C98 BL 0x1C16F18
	0x03C78C9C B 0x3C78CA8
	0x03C78CA0 B 0x3C78CA8
	0x03C78CA4 B 0x3C78CA8
	0x03C78CA8 MOV X21, X0
	0x03C78CAC CMP W1, 0x1
	0x03C78CB0 B.NE 0x3C78CE4
	0x03C78CB4 MOV X0, X21
	0x03C78CB8 BL 0x3EB1AD0
	0x03C78CBC LDR X20, [X0]
	0x03C78CC0 BL 0x3EB1AE0
	0x03C78CC4 ADRP X8, 0x4E8000
	0x03C78CC8 LDR X8, [X8 + 0x350]
	0x03C78CCC ADD X0, X31, 0x40
	0x03C78CD0 LDR X1, [X8]
	0x03C78CD4 BL 0x2BC434C
	0x03C78CD8 CBZ X20, 0x3C788D8
	0x03C78CDC MOV X0, X20
	0x03C78CE0 BL 0x1C16F18
	0x03C78CE4 MOV X20, X31
	0x03C78CE8 B 0x3C78CF0
	0x03C78CEC MOV X21, X0
	0x03C78CF0 ADRP X8, 0x4E8000
	0x03C78CF4 LDR X8, [X8 + 0x350]
	0x03C78CF8 LDR X1, [X8]
	0x03C78CFC ADD X0, X31, 0x40
	0x03C78D00 BL 0x2BC434C
	0x03C78D04 CBNZ X20, 0x3C78D10
	0x03C78D08 MOV X0, X21
	0x03C78D0C BL 0x1D2C690
	0x03C78D10 MOV X0, X20
	0x03C78D14 BL 0x1C16F18
	0x03C78D18 BL 0x1990590
	0x03C78D1C SUB X31, X31, 0x100
	0x03C78D20 STP D15, D14, [X31 + 0x80]
	0x03C78D24 STP D13, D12, [X31 + 0x90]
	0x03C78D28 STP D11, D10, [X31 + 0xA0]
	0x03C78D2C STP D9, D8, [X31 + 0xB0]
	0x03C78D30 STR X30, [X31 + 0xC0]
	0x03C78D34 STP X24, X23, [X31 + 0xD0]
	0x03C78D38 STP X22, X21, [X31 + 0xE0]
	0x03C78D3C STP X20, X19, [X31 + 0xF0]
	0x03C78D40 ADRP X20, 0x76E000
	0x03C78D44 LDRB W8, [X20 + 0x97F]
	0x03C78D48 MOV V8.16B, V1.16B
	0x03C78D4C MOV V9.16B, V0.16B
	0x03C78D50 MOV X19, X0
	0x03C78D54 TBNZ X8, 0x0, 0x3C78DB4
	0x03C78D58 ADRP X0, 0x4E8000
	0x03C78D5C LDR X0, [X0 + 0x350]
	0x03C78D60 BL 0x1C16CF4
	0x03C78D64 ADRP X0, 0x4E8000
	0x03C78D68 LDR X0, [X0 + 0x358]
	0x03C78D6C BL 0x1C16CF4
	0x03C78D70 ADRP X0, 0x4E8000
	0x03C78D74 LDR X0, [X0 + 0x360]
	0x03C78D78 BL 0x1C16CF4
	0x03C78D7C ADRP X0, 0x4A2000
	0x03C78D80 LDR X0, [X0 + 0x890]
	0x03C78D84 BL 0x1C16CF4
	0x03C78D88 ADRP X0, 0x4E8000
	0x03C78D8C LDR X0, [X0 + 0x368]
	0x03C78D90 BL 0x1C16CF4
	0x03C78D94 ADRP X0, 0x4E8000
	0x03C78D98 LDR X0, [X0 + 0x398]
	0x03C78D9C BL 0x1C16CF4
	0x03C78DA0 ADRP X0, 0x4E8000
	0x03C78DA4 LDR X0, [X0 + 0x3A0]
	0x03C78DA8 BL 0x1C16CF4
	0x03C78DAC MOVZ W8, 0x1
	0x03C78DB0 STRB W8, [X20 + 0x97F]
	0x03C78DB4 STP X31, X31, [X31 + 0x60]
	0x03C78DB8 STR X31, [X31 + 0x70]
	0x03C78DBC STP X31, X31, [X31 + 0x40]
	0x03C78DC0 STR X31, [X31 + 0x50]
	0x03C78DC4 STP X31, X31, [X31 + 0x20]
	0x03C78DC8 STR X31, [X31 + 0x30]
	0x03C78DCC LDR X8, [X19 + 0x48]
	0x03C78DD0 STR S9, [X19 + 0x24]
	0x03C78DD4 STR S8, [X19 + 0x2C]
	0x03C78DD8 CBZ X8, 0x3C793F0
	0x03C78DDC LDR W8, [X8 + 0x18]
	0x03C78DE0 CBZ W8, 0x3C793BC
	0x03C78DE4 LDR X0, [X19 + 0x40]
	0x03C78DE8 CBZ X0, 0x3C793F0
	0x03C78DEC ADRP X21, 0x4A2000
	0x03C78DF0 LDR X21, [X21 + 0x890]
	0x03C78DF4 BL 0x3C74750
	0x03C78DF8 MOV X20, X0
	0x03C78DFC LDR X0, [X21]
	0x03C78E00 LDRB W8, [X19 + 0x51]
	0x03C78E04 LDRB W22, [X19 + 0x50]
	0x03C78E08 LDR X21, [X19 + 0x40]
	0x03C78E0C LDR W9, [X0 + 0xE0]
	0x03C78E10 CMP W8, 0x0
	0x03C78E14 FMOV S0, W31
	0x03C78E18 FCSEL S9, S9, S0, EQ
	0x03C78E1C CBNZ W9, 0x3C78E24
	0x03C78E20 BL 0x1C16DFC
	0x03C78E24 BL 0x3C6BB04
	0x03C78E28 CMP X21, X0
	0x03C78E2C CBZ W22, 0x3C7912C
	0x03C78E30 B.EQ 0x3C78EE4
	0x03C78E34 CBZ X20, 0x3C793F0
	0x03C78E38 MOV X0, X20
	0x03C78E3C MOV X1, X31
	0x03C78E40 BL 0x3C0C920
	0x03C78E44 MOV W21, W0
	0x03C78E48 MOV X0, X20
	0x03C78E4C MOV X1, X31
	0x03C78E50 BL 0x3C0C95C
	0x03C78E54 LDR X8, [X19 + 0x48]
	0x03C78E58 CBZ X8, 0x3C793F0
	0x03C78E5C LDR W9, [X8 + 0x18]
	0x03C78E60 SCVTF S10, W21
	0x03C78E64 SCVTF S11, W0
	0x03C78E68 CBZ W9, 0x3C78ED8
	0x03C78E6C ADRP X20, 0x4E8000
	0x03C78E70 LDR X20, [X20 + 0x3A0]
	0x03C78E74 MOV X0, X8
	0x03C78E78 MOV W1, W31
	0x03C78E7C LDR X2, [X20]
	0x03C78E80 BL 0x301BCCC
	0x03C78E84 CBZ X0, 0x3C793F0
	0x03C78E88 LDR X8, [X0]
	0x03C78E8C LDP X9, X1, [X8 + 0x198]
	0x03C78E90 BLR X9
	0x03C78E94 LDR X8, [X19 + 0x48]
	0x03C78E98 SCVTF S0, W0
	0x03C78E9C FCMP S10, S0
	0x03C78EA0 FCSEL S10, S10, S0, GT
	0x03C78EA4 CBZ X8, 0x3C793F0
	0x03C78EA8 LDR W9, [X8 + 0x18]
	0x03C78EAC LDR X2, [X20]
	0x03C78EB0 MOV X0, X8
	0x03C78EB4 SUB W1, W9, 0x1
	0x03C78EB8 BL 0x301BCCC
	0x03C78EBC CBZ X0, 0x3C793F0
	0x03C78EC0 LDR X8, [X0]
	0x03C78EC4 LDP X9, X1, [X8 + 0x1A8]
	0x03C78EC8 BLR X9
	0x03C78ECC SCVTF S0, W0
	0x03C78ED0 FCMP S11, S0
	0x03C78ED4 FCSEL S11, S11, S0, GT
	0x03C78ED8 FADD S0, S11, S10
	0x03C78EDC FADD S9, S9, S10
	0x03C78EE0 FSUB S8, S8, S0

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+96], D9
	003 Move [X31+104], D8
	004 Move [X31+112], X30
	005 Move [X31+120], X25
	006 Move [X31+128], X24
	007 Move [X31+136], X23
	008 Move [X31+144], X22
	009 Move [X31+152], X21
	010 Move [X31+160], X20
	011 Move [X31+168], X19
	012 Move X20, 0x76F000
	013 Move W8, [X20+2428]
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {42}
	019 Move X0, 0x4E9000
	020 Move X0, [X0+848]
	021 Call 0x1C17CF4
	022 Move X0, 0x4E9000
	023 Move X0, [X0+856]
	024 Call 0x1C17CF4
	025 Move X0, 0x4E9000
	026 Move X0, [X0+864]
	027 Call 0x1C17CF4
	028 Move X0, 0x4A3000
	029 Move X0, [X0+2192]
	030 Call 0x1C17CF4
	031 Move X0, 0x4E9000
	032 Move X0, [X0+872]
	033 Call 0x1C17CF4
	034 Move X0, 0x4E9000
	035 Move X0, [X0+920]
	036 Call 0x1C17CF4
	037 Move X0, 0x4E9000
	038 Move X0, [X0+928]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X20+2428], W8
	042 Move [X31+64], X31
	043 Move [X31+72], X31
	044 Move [X31+80], X31
	045 Move [X31+32], X31
	046 Move [X31+40], X31
	047 Move [X31+48], X31
	048 Move X0, [X19+72]
	049 Compare X0, 0
	050 JumpIfEqual {411}
	051 Move W8, [X0+24]
	052 Compare W8, 0
	053 JumpIfEqual {174}
	054 Move W8, [X19+80]
	055 Move [X19+112], X31
	056 Move [X19+100], W31
	057 Compare W8, 0
	058 JumpIfEqual {185}
	059 Move X8, 0x4E9000
	060 Move X8, [X8+872]
	061 Move X1, [X8]
	062 Add X8, X31, 8
	063 Call List`1<Object>.GetEnumerator, X0
	064 NotImplemented "Instruction LDUR not yet implemented."
	065 Move X8, [X31+24]
	066 Move X24, 0x4E9000
	067 Move W23, W31
	068 Move [X31+4], V0
	069 Move [X31+80], X8
	070 Move X24, [X24+856]
	071 Move W22, W31
	072 Move W25, 1
	073 Move X1, [X24]
	074 Add X0, X31, 64
	075 Call Enumerator<Object>.MoveNext, X0
	076 Move TEMP, X0
	077 And TEMP, TEMP, 1
	078 Compare TEMP, 1
	079 JumpIfNotEqual {162}
	080 Move X21, [X31+80]
	081 Compare X21, 0
	082 JumpIfEqual {409}
	083 Move X8, [X21]
	084 Move X9, [X8+440]
	085 Move X1, [X8+448]
	086 Move X0, X21
	087 NotImplemented "Instruction BLR not yet implemented."
	088 Move W8, [X21+56]
	089 Compare W8, 0
	090 JumpIfEqual {158}
	091 Move X9, [X21]
	092 Move X8, [X9+376]
	093 Move X1, [X9+384]
	094 Move TEMP, X25
	095 And TEMP, TEMP, 1
	096 Compare TEMP, 1
	097 JumpIfNotEqual {107}
	098 Move X0, X21
	099 NotImplemented "Instruction BLR not yet implemented."
	100 Move X8, [X21]
	101 Move W20, W0
	102 Move X9, [X8+392]
	103 Move X1, [X8+400]
	104 Move X0, X21
	105 NotImplemented "Instruction BLR not yet implemented."
	106 Move W23, W0
	107 Move X0, X21
	108 NotImplemented "Instruction BLR not yet implemented."
	109 Move X8, [X21]
	110 NotImplemented "Instruction CMP not yet implemented."
	111 NotImplemented "Instruction CSEL not yet implemented."
	112 Move X9, [X8+392]
	113 Move X1, [X8+400]
	114 Move X0, X21
	115 NotImplemented "Instruction BLR not yet implemented."
	116 NotImplemented "Instruction CMP not yet implemented."
	117 NotImplemented "Instruction CSEL not yet implemented."
	118 Move X8, [X21]
	119 Move V8, [X21+16]
	120 Move X9, [X8+376]
	121 Move X1, [X8+384]
	122 Move X0, X21
	123 NotImplemented "Instruction BLR not yet implemented."
	124 Move X8, [X21]
	125 Move W22, W0
	126 Move X9, [X8+392]
	127 Move X1, [X8+400]
	128 Move X0, X21
	129 NotImplemented "Instruction BLR not yet implemented."
	130 Move V0, [X19+112]
	131 Add W8, W0, W22
	132 NotImplemented "Instruction SCVTF not yet implemented."
	133 Add S1, S8, S1
	134 NotImplemented "Instruction FCMP not yet implemented."
	135 NotImplemented "Instruction FCSEL not yet implemented."
	136 Move [X19+112], S0
	137 Move X8, [X21]
	138 Move V8, [X21+20]
	139 Move X9, [X8+376]
	140 Move X1, [X8+384]
	141 Move X0, X21
	142 NotImplemented "Instruction BLR not yet implemented."
	143 Move X8, [X21]
	144 Move W22, W0
	145 Move X9, [X8+392]
	146 Move X1, [X8+400]
	147 Move X0, X21
	148 NotImplemented "Instruction BLR not yet implemented."
	149 Move V0, [X19+116]
	150 Add W8, W0, W22
	151 NotImplemented "Instruction SCVTF not yet implemented."
	152 Add S1, S8, S1
	153 NotImplemented "Instruction FCMP not yet implemented."
	154 Move W25, W31
	155 NotImplemented "Instruction FCSEL not yet implemented."
	156 Move W22, W20
	157 Move [X19+116], S0
	158 Move W8, [X19+100]
	159 Move W9, [X21+48]
	160 Add W8, W9, W8
	161 Move [X19+100], W8
	162 Move X8, 0x4E9000
	163 Move X8, [X8+848]
	164 Add X0, X31, 64
	165 Move X1, [X8]
	166 Call Enumerator<Object>.Dispose, X0
	167 Move W20, W22
	168 Move V0, [X19+112]
	169 Add W8, W23, W20
	170 NotImplemented "Instruction SCVTF not yet implemented."
	171 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	172 Subtract V0, V0, V1
	173 Move [X19+112], D0
	174 Move X0, [X19+64]
	175 Compare X0, 0
	176 JumpIfEqual {411}
	177 Call GUIStyle.get_padding, X0
	178 Compare X0, 0
	179 JumpIfEqual {411}
	180 Move X1, X31
	181 Call RectOffset.get_horizontal, X0
	182 NotImplemented "Instruction SCVTF not yet implemented."
	183 Move [X19+16], S0
	184 Move [X19+24], S0
	185 Move X8, 0x4E9000
	186 Move X8, [X8+872]
	187 Move X1, [X8]
	188 Add X8, X31, 8
	189 Call List`1<Object>.GetEnumerator, X0
	190 NotImplemented "Instruction LDUR not yet implemented."
	191 Move X8, [X31+24]
	192 Move X21, 0x4E9000
	193 Move W23, W31
	194 Move [X31+2], V0
	195 Move [X31+48], X8
	196 Move X21, [X21+856]
	197 Move W22, 1
	198 Move X1, [X21]
	199 Add X0, X31, 32
	200 Call Enumerator<Object>.MoveNext, X0
	201 Move TEMP, X0
	202 And TEMP, TEMP, 1
	203 Compare TEMP, 1
	204 JumpIfNotEqual {258}
	205 Move X20, [X31+48]
	206 Compare X20, 0
	207 JumpIfEqual {410}
	208 Move X8, [X20]
	209 Move X9, [X8+440]
	210 Move X1, [X8+448]
	211 Move X0, X20
	212 NotImplemented "Instruction BLR not yet implemented."
	213 Move W8, [X20+56]
	214 Compare W8, 0
	215 JumpIfEqual {221}
	216 Move TEMP, X22
	217 And TEMP, TEMP, 1
	218 Compare TEMP, 1
	219 JumpIfNotEqual {225}
	220 Move W0, W31
	221 Move V0, [X19+112]
	222 Move V1, [X20+16]
	223 Add V0, V0, V1
	224 Move [X19+112], D0
	225 Move X8, [X20]
	226 Move X9, [X8+376]
	227 Move X1, [X8+384]
	228 Move X0, X20
	229 NotImplemented "Instruction BLR not yet implemented."
	230 NotImplemented "Instruction CMP not yet implemented."
	231 Move W0, W23
	232 Move X8, [X20]
	233 Move X9, [X8+376]
	234 Move X1, [X8+384]
	235 Move X0, X20
	236 NotImplemented "Instruction BLR not yet implemented."
	237 Add X8, X19, 84
	238 Move V0, [X20+16]
	239 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	240 Move V3, [X19+112]
	241 NotImplemented "Instruction SCVTF not yet implemented."
	242 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	243 Add V0, V0, V1
	244 Add V0, V0, V2
	245 Add V0, V3, V0
	246 Move [X19+112], D0
	247 Move X8, [X20]
	248 Move X9, [X8+392]
	249 Move X1, [X8+400]
	250 Move X0, X20
	251 NotImplemented "Instruction BLR not yet implemented."
	252 Move W22, W31
	253 Move W23, W0
	254 Move W8, [X19+100]
	255 Move W9, [X20+48]
	256 Add W8, W9, W8
	257 Move [X19+100], W8
	258 Move X8, 0x4E9000
	259 Move X8, [X8+848]
	260 Add X0, X31, 32
	261 Move X1, [X8]
	262 Call Enumerator<Object>.Dispose, X0
	263 Add X8, X19, 84
	264 Move V0, [X19+112]
	265 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	266 Move X0, [X19+72]
	267 Subtract V0, V0, V1
	268 Move [X19+112], D0
	269 Compare X0, 0
	270 JumpIfEqual {411}
	271 Move W8, [X0+24]
	272 Compare W8, 0
	273 JumpIfEqual {286}
	274 Move X8, 0x4E9000
	275 Move X8, [X8+928]
	276 Move W1, W31
	277 Move X2, [X8]
	278 Call List`1<Object>.get_Item, X0, X1
	279 Compare X0, 0
	280 JumpIfEqual {411}
	281 Move X8, [X0]
	282 Move X9, [X8+376]
	283 Move X1, [X8+384]
	284 NotImplemented "Instruction BLR not yet implemented."
	285 Move W20, W0
	286 Move W23, W31
	287 Move W20, W31
	288 Move X8, 0x4A3000
	289 Move X8, [X8+2192]
	290 Move X21, [X19+64]
	291 Move X0, [X8]
	292 Move W8, [X0+224]
	293 Compare W8, 0
	294 JumpIfNotEqual {296}
	295 Call 0x1C17DFC
	296 Call GUIStyle.get_none
	297 NotImplemented "Instruction CMP not yet implemented."
	298 Move W8, [X19+108]
	299 Compare W8, 0
	300 JumpIfEqual {405}
	301 Move X0, [X19+64]
	302 Compare X0, 0
	303 JumpIfEqual {411}
	304 Call GUIStyle.get_padding, X0
	305 Compare X0, 0
	306 JumpIfEqual {411}
	307 Move X1, X31
	308 Call RectOffset.get_left, X0
	309 Move X8, [X19+64]
	310 NotImplemented "Instruction CMP not yet implemented."
	311 NotImplemented "Instruction CSEL not yet implemented."
	312 Compare X8, 0
	313 JumpIfEqual {411}
	314 Move X0, X8
	315 Call GUIStyle.get_padding, X0
	316 Compare X0, 0
	317 JumpIfEqual {411}
	318 Move X1, X31
	319 NotImplemented "Instruction SCVTF not yet implemented."
	320 Call RectOffset.get_right, X0
	321 NotImplemented "Instruction CMP not yet implemented."
	322 NotImplemented "Instruction CSEL not yet implemented."
	323 NotImplemented "Instruction SCVTF not yet implemented."
	324 Move V1, [X19+112]
	325 Move S2, [X19+16]
	326 Move S0, [X19+20]
	327 Add S1, S8, S1
	328 Add S1, S9, S1
	329 NotImplemented "Instruction FCMP not yet implemented."
	330 NotImplemented "Instruction FCSEL not yet implemented."
	331 NotImplemented "Instruction FCMP not yet implemented."
	332 Move [X19+16], S1
	333 Move X20, [X19+64]
	334 Compare X20, 0
	335 JumpIfEqual {411}
	336 Move X23, 0x76F000
	337 Move W21, [X19+48]
	338 Move X8, [X23+1880]
	339 Move W22, [X19+100]
	340 Compare X8, 0
	341 JumpIfNotEqual {347}
	342 Move X0, -51785728
	343 Add X0, X0, 4006
	344 Call 0x1C17CB8
	345 Move X8, X0
	346 Move [X23+1880], X0
	347 Move X0, X20
	348 NotImplemented "Instruction BLR not yet implemented."
	349 Move V0, [X19+116]
	350 Move V1, [X19+16]
	351 And W8, W0, 1
	352 Add W9, W22, W21
	353 Add S0, S8, S0
	354 Add W8, W9, W8
	355 Add S0, S9, S0
	356 Move [X19+48], W8
	357 Move [X19+20], S0
	358 Move [X19+48], W31
	359 Move X20, [X19+64]
	360 NotImplemented "Instruction FCMP not yet implemented."
	361 NotImplemented "Instruction FCSEL not yet implemented."
	362 Move [X19+20], S0
	363 Compare X20, 0
	364 JumpIfEqual {411}
	365 Move X21, 0x76F000
	366 Move X8, [X21+1864]
	367 Compare X8, 0
	368 JumpIfNotEqual {374}
	369 Move X0, -51748864
	370 Add X0, X0, 1535
	371 Call 0x1C17CB8
	372 Move X8, X0
	373 Move [X21+1864], X0
	374 Move X0, X20
	375 NotImplemented "Instruction BLR not yet implemented."
	376 NotImplemented "Instruction FCMP not yet implemented."
	377 Move X20, [X19+64]
	378 Compare X20, 0
	379 JumpIfEqual {411}
	380 Move X8, [X21+1864]
	381 Compare X8, 0
	382 JumpIfNotEqual {388}
	383 Move X0, -51748864
	384 Add X0, X0, 1535
	385 Call 0x1C17CB8
	386 Move X8, X0
	387 Move [X21+1864], X0
	388 Move X0, X20
	389 NotImplemented "Instruction BLR not yet implemented."
	390 Move [X19+16], S0
	391 Move [X19+24], S0
	392 Move [X19+48], W31
	393 Move X20, [X31+160]
	394 Move X19, [X31+168]
	395 Move X22, [X31+144]
	396 Move X21, [X31+152]
	397 Move X24, [X31+128]
	398 Move X23, [X31+136]
	399 Move X30, [X31+112]
	400 Move X25, [X31+120]
	401 Move D9, [X31+96]
	402 Move D8, [X31+104]
	403 Add X31, X31, 176
	404 Return 
	405 Move S9, W31
	406 Move S8, W31
	407 Move [X19+128], W20
	408 Move [X19+132], W23
	409 Call 0x1C17F20
	410 Call 0x1C17F20
	411 Call 0x1C17F20
	412 Move X21, X0
	413 NotImplemented "Instruction CMP not yet implemented."
	414 Move X0, X21
	415 Call 0x3EB2AD0
	416 Move X20, [X0]
	417 Call 0x3EB2AE0
	418 Move X8, 0x4E9000
	419 Move X8, [X8+848]
	420 Add X0, X31, 32
	421 Move X1, [X8]
	422 Call Enumerator<Object>.Dispose, X0
	423 Compare X20, 0
	424 JumpIfEqual {263}
	425 Move X0, X20
	426 Call 0x1C17F18
	427 Move X20, X31
	428 Move X21, X0
	429 Move X8, 0x4E9000
	430 Move X8, [X8+848]
	431 Move X1, [X8]
	432 Add X0, X31, 32
	433 Call Enumerator<Object>.Dispose, X0
	434 Compare X20, 0
	435 JumpIfEqual {464}
	436 Move X0, X20
	437 Call 0x1C17F18
	438 Move X21, X0
	439 Move W20, W22
	440 Move X21, X0
	441 NotImplemented "Instruction CMP not yet implemented."
	442 Move X0, X21
	443 Call 0x3EB2AD0
	444 Move X22, [X0]
	445 Call 0x3EB2AE0
	446 Move X8, 0x4E9000
	447 Move X8, [X8+848]
	448 Add X0, X31, 64
	449 Move X1, [X8]
	450 Call Enumerator<Object>.Dispose, X0
	451 Compare X22, 0
	452 JumpIfEqual {168}
	453 Move X0, X22
	454 Call 0x1C17F18
	455 Move X22, X31
	456 Move X21, X0
	457 Move X8, 0x4E9000
	458 Move X8, [X8+848]
	459 Move X1, [X8]
	460 Add X0, X31, 64
	461 Call Enumerator<Object>.Dispose, X0
	462 Compare X22, 0
	463 JumpIfNotEqual {466}
	464 Move X0, X21
	465 Call 0x1D2D690
	466 Move X0, X22
	467 Call 0x1C17F18
	468 Call 0x1991590

Method: System.Void SetHorizontal(System.Single x, System.Single width)

Disassembly:
	0x03C78EE4 LDR X0, [X19 + 0x48]
	0x03C78EE8 CBZ X0, 0x3C793F0
	0x03C78EEC LDR W8, [X0 + 0x18]
	0x03C78EF0 LDR V1, [X19 + 0x54]
	0x03C78EF4 LDP S2, S0, [X19 + 0x78]
	0x03C78EF8 FMOV S10, W31
	0x03C78EFC SUB W8, W8, 0x1
	0x03C78F00 SCVTF S3, W8
	0x03C78F04 FMUL S1, S1, S3
	0x03C78F08 FCMP S2, S0
	0x03C78F0C FSUB S1, S8, S1
	0x03C78F10 FMOV S8, W31
	0x03C78F14 B.EQ 0x3C78F38
	0x03C78F18 FSUB S3, S1, S2
	0x03C78F1C FSUB S2, S0, S2
	0x03C78F20 FDIV S2, S3, S2
	0x03C78F24 FCMP S2, 0x0
	0x03C78F28 FMOV S8, W31
	0x03C78F2C B.MI 0x3C78F38
	0x03C78F30 FMOV S3, 1
	0x03C78F34 FMIN S8, S2, S3
	0x03C78F38 FCMP S1, S0
	0x03C78F3C B.LE 0x3C78F58
	0x03C78F40 LDR W8, [X19 + 0x68]
	0x03C78F44 CMP W8, 0x1
	0x03C78F48 B.LT 0x3C78F58
	0x03C78F4C FSUB S0, S1, S0
	0x03C78F50 SCVTF S1, W8
	0x03C78F54 FDIV S10, S0, S1
	0x03C78F58 ADRP X8, 0x4E8000
	0x03C78F5C LDR X8, [X8 + 0x368]
	0x03C78F60 LDR X1, [X8]
	0x03C78F64 ADD X8, X31, 0x8
	0x03C78F68 BL 0x301CB58
	0x03C78F6C LDUR V0, [X31 + 0x8]
	0x03C78F70 LDR X8, [X31 + 0x18]
	0x03C78F74 ADRP X22, 0x4E8000
	0x03C78F78 LDR X22, [X22 + 0x358]
	0x03C78F7C FMOV S1, W31
	0x03C78F80 MOV W20, W31
	0x03C78F84 MOVZ W23, 0x1
	0x03C78F88 FMOV D14, 0.5
	0x03C78F8C FMAX S13, S8, S1
	0x03C78F90 STR V0, [X31 + 0x6]
	0x03C78F94 STR X8, [X31 + 0x70]
	0x03C78F98 LDR X1, [X22]
	0x03C78F9C ADD X0, X31, 0x60
	0x03C78FA0 BL 0x2BC4350
	0x03C78FA4 TBZ X0, 0x0, 0x3C7911C
	0x03C78FA8 LDR X21, [X31 + 0x70]
	0x03C78FAC CBZ X21, 0x3C793E4
	0x03C78FB0 LDP S12, S11, [X21 + 0x18]
	0x03C78FB4 LDRB W8, [X21 + 0x38]
	0x03C78FB8 LDR V15, [X21 + 0x34]
	0x03C78FBC CBZ W8, 0x3C79000
	0x03C78FC0 LDR X8, [X21]
	0x03C78FC4 LDP X9, X1, [X8 + 0x198]
	0x03C78FC8 MOV X0, X21
	0x03C78FCC BLR X9
	0x03C78FD0 LDR X8, [X21]
	0x03C78FD4 ANDS W31, W23, 0x1
	0x03C78FD8 LDP X9, X1, [X8 + 0x1A8]
	0x03C78FDC CSEL W8, W31, W0, NE
	0x03C78FE0 CMP W20, W8
	0x03C78FE4 CSEL W24, W20, W8, GT
	0x03C78FE8 MOV X0, X21
	0x03C78FEC BLR X9
	0x03C78FF0 SCVTF S0, W24
	0x03C78FF4 MOV W20, W0
	0x03C78FF8 MOV W23, W31
	0x03C78FFC FADD S9, S9, S0
	0x03C79000 FCVT S0, S9
	0x03C79004 ADD X0, X31, 0x8
	0x03C79008 BL 0x3EB1C00
	0x03C7900C FCMP S9, 0x0
	0x03C79010 B.GE 0x3C7902C
	0x03C79014 FMOV D1, -0.5
	0x03C79018 FCMP D0, D1
	0x03C7901C B.NE 0x3C79054
	0x03C79020 LDR V0, [X31 + 0x8]
	0x03C79024 FMOV S1, -1
	0x03C79028 B 0x3C7903C
	0x03C7902C FCMP D0, D14
	0x03C79030 B.NE 0x3C79064
	0x03C79034 LDR V0, [X31 + 0x8]
	0x03C79038 FMOV S1, 1
	0x03C7903C FCVTZS X8, D0
	0x00000000 INVALID
	0x03C79044 FADD S1, S0, S1
	0x03C79048 ANDS X31, X8, 0x1
	0x03C7904C FCSEL S8, S0, S1, EQ
	0x03C79050 B 0x3C79070
	0x03C79054 FMOV S0, -0.5
	0x03C79058 FADD S0, S9, S0
	0x03C7905C FRINTP S8, S0
	0x03C79060 B 0x3C79070
	0x03C79064 FMOV S0, 0.5
	0x03C79068 FADD S0, S9, S0
	0x03C7906C FRINTM S8, S0
	0x03C79070 FSUB S0, S11, S12
	0x03C79074 SCVTF S1, S15
	0x03C79078 FMUL S0, S13, S0
	0x03C7907C FADD S0, S12, S0
	0x03C79080 FMUL S1, S10, S1
	0x03C79084 FADD S11, S0, S1
	0x03C79088 FCVT S0, S11
	0x03C7908C ADD X0, X31, 0x8
	0x03C79090 BL 0x3EB1C00
	0x03C79094 FCMP S11, 0x0
	0x03C79098 B.GE 0x3C790B4
	0x03C7909C FMOV D1, -0.5
	0x03C790A0 FCMP D0, D1
	0x03C790A4 B.NE 0x3C790DC
	0x03C790A8 LDR V0, [X31 + 0x8]
	0x03C790AC FMOV S1, -1
	0x03C790B0 B 0x3C790C4
	0x03C790B4 FCMP D0, D14
	0x03C790B8 B.NE 0x3C790EC
	0x03C790BC LDR V0, [X31 + 0x8]
	0x03C790C0 FMOV S1, 1
	0x03C790C4 FCVTZS X8, D0
	0x00000000 INVALID
	0x03C790CC FADD S1, S0, S1
	0x03C790D0 ANDS X31, X8, 0x1
	0x03C790D4 FCSEL S1, S0, S1, EQ
	0x03C790D8 B 0x3C790F8
	0x03C790DC FMOV S0, -0.5
	0x03C790E0 FADD S0, S11, S0
	0x03C790E4 FRINTP S1, S0
	0x03C790E8 B 0x3C790F8
	0x03C790EC FMOV S0, 0.5
	0x03C790F0 FADD S0, S11, S0
	0x03C790F4 FRINTM S1, S0
	0x03C790F8 LDR X8, [X21]
	0x03C790FC LDP X9, X1, [X8 + 0x1E8]
	0x03C79100 MOV X0, X21
	0x03C79104 MOV V0.16B, V8.16B
	0x03C79108 BLR X9
	0x03C7910C LDR V0, [X19 + 0x54]
	0x03C79110 FADD S0, S11, S0
	0x03C79114 FADD S9, S9, S0
	0x03C79118 B 0x3C78F98
	0x03C7911C ADRP X8, 0x4E7000
	0x03C79120 LDR X8, [X8 + 0x350]
	0x03C79124 ADD X0, X31, 0x60
	0x03C79128 B 0x3C793B4
	0x03C7912C B.EQ 0x3C79238
	0x03C79130 LDR X0, [X19 + 0x48]
	0x03C79134 CBZ X0, 0x3C793F0
	0x03C79138 ADRP X8, 0x4E7000
	0x03C7913C LDR X8, [X8 + 0x368]
	0x03C79140 LDR X1, [X8]
	0x03C79144 ADD X8, X31, 0x8
	0x03C79148 BL 0x301CB58
	0x03C7914C LDUR V0, [X31 + 0x8]
	0x03C79150 LDR X8, [X31 + 0x18]
	0x03C79154 ADRP X22, 0x4E7000
	0x03C79158 STR V0, [X31 + 0x4]
	0x03C7915C STR X8, [X31 + 0x50]
	0x03C79160 LDR X22, [X22 + 0x358]
	0x03C79164 LDR X1, [X22]
	0x03C79168 ADD X0, X31, 0x40
	0x03C7916C BL 0x2BC4350
	0x03C79170 TBZ X0, 0x0, 0x3C79228
	0x03C79174 LDR X19, [X31 + 0x50]
	0x03C79178 CBZ X19, 0x3C793E8
	0x03C7917C LDR X8, [X19]
	0x03C79180 LDP X9, X1, [X8 + 0x198]
	0x03C79184 MOV X0, X19
	0x03C79188 BLR X9
	0x03C7918C CBZ X20, 0x3C793EC
	0x03C79190 MOV W21, W0
	0x03C79194 MOV X0, X20
	0x03C79198 MOV X1, X31
	0x03C7919C BL 0x3C0C920
	0x03C791A0 LDR X8, [X19]
	0x03C791A4 CMP W21, W0
	0x03C791A8 CSEL W23, W21, W0, GT
	0x03C791AC LDP X9, X1, [X8 + 0x1A8]
	0x03C791B0 MOV X0, X19
	0x03C791B4 BLR X9
	0x03C791B8 MOV W21, W0
	0x03C791BC MOV X0, X20
	0x03C791C0 MOV X1, X31
	0x03C791C4 BL 0x3C0C95C
	0x03C791C8 CMP W21, W0
	0x03C791CC LDR W8, [X19 + 0x34]
	0x03C791D0 CSEL W9, W21, W0, GT
	0x03C791D4 SCVTF S2, W9
	0x03C791D8 SCVTF S1, W23
	0x03C791DC FSUB S2, S8, S2
	0x03C791E0 FADD S0, S9, S1
	0x03C791E4 FSUB S1, S2, S1
	0x03C791E8 CBZ W8, 0x3C79200
	0x03C791EC LDR X8, [X19]
	0x03C791F0 LDP X9, X1, [X8 + 0x1E8]
	0x03C791F4 MOV X0, X19
	0x03C791F8 BLR X9
	0x03C791FC B 0x3C79164
	0x03C79200 LDR X8, [X19]
	0x03C79204 LDP S3, S2, [X19 + 0x18]
	0x03C79208 LDP X9, X1, [X8 + 0x1E8]
	0x03C7920C FCMP S1, S2
	0x03C79210 FCSEL S2, S2, S1, GT
	0x03C79214 FCMP S1, S3
	0x03C79218 FCSEL S1, S2, S3, PL
	0x03C7921C MOV X0, X19
	0x03C79220 BLR X9
	0x03C79224 B 0x3C79164
	0x03C79228 ADRP X8, 0x4E7000
	0x03C7922C LDR X8, [X8 + 0x350]
	0x03C79230 ADD X0, X31, 0x40
	0x03C79234 B 0x3C793B4
	0x03C79238 LDR X8, [X19]
	0x03C7923C MOV X0, X19
	0x03C79240 LDP X9, X1, [X8 + 0x198]
	0x03C79244 BLR X9
	0x03C79248 LDR X8, [X19]
	0x03C7924C MOV W20, W0
	0x03C79250 MOV X0, X19
	0x03C79254 LDP X9, X1, [X8 + 0x1A8]
	0x03C79258 BLR X9
	0x03C7925C LDR X8, [X19]
	0x03C79260 MOV W21, W0
	0x03C79264 MOV X0, X19
	0x03C79268 LDP X9, X1, [X8 + 0x198]
	0x03C7926C BLR X9
	0x03C79270 LDR X9, [X19 + 0x48]
	0x03C79274 CBZ X9, 0x3C793F0
	0x03C79278 ADRP X8, 0x4E7000
	0x03C7927C LDR X8, [X8 + 0x368]
	0x03C79280 SCVTF S0, W20
	0x03C79284 FSUB S9, S9, S0
	0x03C79288 LDR X1, [X8]
	0x03C7928C ADD W8, W0, W21
	0x03C79290 SCVTF S0, W8
	0x03C79294 ADD X8, X31, 0x8
	0x03C79298 MOV X0, X9
	0x03C7929C FADD S8, S0, S8
	0x03C792A0 BL 0x301CB58
	0x03C792A4 LDUR V0, [X31 + 0x8]
	0x03C792A8 LDR X8, [X31 + 0x18]
	0x03C792AC ADRP X22, 0x4E7000
	0x03C792B0 STR V0, [X31 + 0x2]
	0x03C792B4 STR X8, [X31 + 0x30]
	0x03C792B8 LDR X22, [X22 + 0x358]
	0x03C792BC LDR X1, [X22]
	0x03C792C0 ADD X0, X31, 0x20
	0x03C792C4 BL 0x2BC4350
	0x03C792C8 TBZ X0, 0x0, 0x3C793A8
	0x03C792CC LDR X19, [X31 + 0x30]
	0x03C792D0 CBZ X19, 0x3C793F4
	0x03C792D4 LDR X9, [X19]
	0x03C792D8 LDR W10, [X19 + 0x34]
	0x03C792DC LDP X8, X1, [X9 + 0x198]
	0x03C792E0 CBZ W10, 0x3C7933C
	0x03C792E4 MOV X0, X19
	0x03C792E8 BLR X8
	0x03C792EC LDR X8, [X19]
	0x03C792F0 MOV W20, W0
	0x03C792F4 LDP X9, X1, [X8 + 0x1A8]
	0x03C792F8 MOV X0, X19
	0x03C792FC BLR X9
	0x03C79300 LDR X8, [X19]
	0x03C79304 MOV W21, W0
	0x03C79308 LDP X9, X1, [X8 + 0x198]
	0x03C7930C MOV X0, X19
	0x03C79310 BLR X9
	0x03C79314 LDR X8, [X19]
	0x03C79318 ADD W9, W0, W21
	0x03C7931C SCVTF S0, W20
	0x03C79320 SCVTF S1, W9
	0x03C79324 LDP X10, X1, [X8 + 0x1E8]
	0x03C79328 FADD S0, S9, S0
	0x03C7932C FSUB S1, S8, S1
	0x03C79330 MOV X0, X19
	0x03C79334 BLR X10
	0x03C79338 B 0x3C792BC
	0x03C7933C MOV X0, X19
	0x03C79340 BLR X8
	0x03C79344 LDR X8, [X19]
	0x03C79348 MOV W20, W0
	0x03C7934C LDP X9, X1, [X8 + 0x1A8]
	0x03C79350 MOV X0, X19
	0x03C79354 BLR X9
	0x03C79358 LDR X8, [X19]
	0x03C7935C MOV W21, W0
	0x03C79360 LDP X9, X1, [X8 + 0x198]
	0x03C79364 MOV X0, X19
	0x03C79368 BLR X9
	0x03C7936C LDR X9, [X19]
	0x03C79370 LDP S0, S1, [X19 + 0x18]
	0x03C79374 ADD W8, W0, W21
	0x03C79378 SCVTF S2, W8
	0x03C7937C FSUB S2, S8, S2
	0x03C79380 LDP X8, X1, [X9 + 0x1E8]
	0x03C79384 FCMP S2, S1
	0x03C79388 FCSEL S1, S1, S2, GT
	0x03C7938C FCMP S2, S0
	0x03C79390 FCSEL S1, S1, S0, PL
	0x03C79394 SCVTF S0, W20
	0x03C79398 FADD S0, S9, S0
	0x03C7939C MOV X0, X19
	0x03C793A0 BLR X8
	0x03C793A4 B 0x3C792BC
	0x03C793A8 ADRP X8, 0x4E7000
	0x03C793AC LDR X8, [X8 + 0x350]
	0x03C793B0 ADD X0, X31, 0x20
	0x03C793B4 LDR X1, [X8]
	0x03C793B8 BL 0x2BC434C
	0x03C793BC LDP X20, X19, [X31 + 0xF0]
	0x03C793C0 LDP X22, X21, [X31 + 0xE0]
	0x03C793C4 LDP X24, X23, [X31 + 0xD0]
	0x03C793C8 LDR X30, [X31 + 0xC0]
	0x03C793CC LDP D9, D8, [X31 + 0xB0]
	0x03C793D0 LDP D11, D10, [X31 + 0xA0]
	0x03C793D4 LDP D13, D12, [X31 + 0x90]
	0x03C793D8 LDP D15, D14, [X31 + 0x80]
	0x03C793DC ADD X31, X31, 0x100
	0x03C793E0 RET
	0x03C793E4 BL 0x1C16F20
	0x03C793E8 BL 0x1C16F20
	0x03C793EC BL 0x1C16F20
	0x03C793F0 BL 0x1C16F20
	0x03C793F4 BL 0x1C16F20
	0x03C793F8 B 0x3C79488
	0x03C793FC B 0x3C79488
	0x03C79400 B 0x3C79430
	0x03C79404 B 0x3C79488
	0x03C79408 B 0x3C79488
	0x03C7940C B 0x3C79488
	0x03C79410 B 0x3C79488
	0x03C79414 B 0x3C79430
	0x03C79418 B 0x3C79430
	0x03C7941C B 0x3C79430
	0x03C79420 B 0x3C79430
	0x03C79424 B 0x3C79430
	0x03C79428 B 0x3C79430
	0x03C7942C B 0x3C79430
	0x03C79430 MOV X19, X0
	0x03C79434 CMP W1, 0x1
	0x03C79438 B.NE 0x3C7945C
	0x03C7943C MOV X0, X19
	0x03C79440 BL 0x3EB1AD0
	0x03C79444 LDR X20, [X0]
	0x03C79448 BL 0x3EB1AE0
	0x03C7944C ADRP X8, 0x4E7000
	0x03C79450 LDR X8, [X8 + 0x350]
	0x03C79454 ADD X0, X31, 0x40
	0x03C79458 B 0x3C79518
	0x03C7945C MOV X20, X31
	0x03C79460 B 0x3C79468
	0x03C79464 MOV X19, X0
	0x03C79468 ADRP X8, 0x4E7000
	0x03C7946C LDR X8, [X8 + 0x350]
	0x03C79470 LDR X1, [X8]
	0x03C79474 ADD X0, X31, 0x40
	0x03C79478 BL 0x2BC434C
	0x03C7947C CBZ X20, 0x3C79550
	0x03C79480 MOV X0, X20
	0x03C79484 BL 0x1C16F18
	0x03C79488 MOV X19, X0
	0x03C7948C CMP W1, 0x1
	0x03C79490 B.NE 0x3C794B4
	0x03C79494 MOV X0, X19
	0x03C79498 BL 0x3EB1AD0
	0x03C7949C LDR X20, [X0]
	0x03C794A0 BL 0x3EB1AE0
	0x03C794A4 ADRP X8, 0x4E7000
	0x03C794A8 LDR X8, [X8 + 0x350]
	0x03C794AC ADD X0, X31, 0x20
	0x03C794B0 B 0x3C79518
	0x03C794B4 MOV X20, X31
	0x03C794B8 B 0x3C794C0
	0x03C794BC MOV X19, X0
	0x03C794C0 ADRP X8, 0x4E7000
	0x03C794C4 LDR X8, [X8 + 0x350]
	0x03C794C8 LDR X1, [X8]
	0x03C794CC ADD X0, X31, 0x20
	0x03C794D0 BL 0x2BC434C
	0x03C794D4 CBZ X20, 0x3C79550
	0x03C794D8 MOV X0, X20
	0x03C794DC BL 0x1C16F18
	0x03C794E0 B 0x3C794F0
	0x03C794E4 B 0x3C794F0
	0x03C794E8 B 0x3C794F0
	0x03C794EC B 0x3C794F0
	0x03C794F0 MOV X19, X0
	0x03C794F4 CMP W1, 0x1
	0x03C794F8 B.NE 0x3C7952C
	0x03C794FC MOV X0, X19
	0x03C79500 BL 0x3EB1AD0
	0x03C79504 LDR X20, [X0]
	0x03C79508 BL 0x3EB1AE0
	0x03C7950C ADRP X8, 0x4E7000
	0x03C79510 LDR X8, [X8 + 0x350]
	0x03C79514 ADD X0, X31, 0x60
	0x03C79518 LDR X1, [X8]
	0x03C7951C BL 0x2BC434C
	0x03C79520 CBZ X20, 0x3C793BC
	0x03C79524 MOV X0, X20
	0x03C79528 BL 0x1C16F18
	0x03C7952C MOV X20, X31
	0x03C79530 B 0x3C79538
	0x03C79534 MOV X19, X0
	0x03C79538 ADRP X8, 0x4E7000
	0x03C7953C LDR X8, [X8 + 0x350]
	0x03C79540 LDR X1, [X8]
	0x03C79544 ADD X0, X31, 0x60
	0x03C79548 BL 0x2BC434C
	0x03C7954C CBNZ X20, 0x3C79558
	0x03C79550 MOV X0, X19
	0x03C79554 BL 0x1D2C690
	0x03C79558 MOV X0, X20
	0x03C7955C BL 0x1C16F18
	0x03C79560 BL 0x1990590
	0x03C79564 SUB X31, X31, 0x80
	0x03C79568 STP X29, X30, [X31 + 0x20]
	0x03C7956C STP X28, X27, [X31 + 0x30]
	0x03C79570 STP X26, X25, [X31 + 0x40]
	0x03C79574 STP X24, X23, [X31 + 0x50]
	0x03C79578 STP X22, X21, [X31 + 0x60]
	0x03C7957C STP X20, X19, [X31 + 0x70]
	0x03C79580 ADRP X21, 0x76D000
	0x03C79584 ADRP X19, 0x47A000
	0x03C79588 LDRB W8, [X21 + 0x980]
	0x03C7958C LDR X19, [X19 + 0x988]
	0x03C79590 MOV X20, X0
	0x03C79594 TBNZ X8, 0x0, 0x3C79630
	0x03C79598 ADRP X0, 0x4E7000
	0x03C7959C LDR X0, [X0 + 0x350]
	0x03C795A0 BL 0x1C16CF4
	0x03C795A4 ADRP X0, 0x4E7000
	0x03C795A8 LDR X0, [X0 + 0x358]
	0x03C795AC BL 0x1C16CF4
	0x03C795B0 ADRP X0, 0x4E7000
	0x03C795B4 LDR X0, [X0 + 0x360]
	0x03C795B8 BL 0x1C16CF4
	0x03C795BC ADRP X0, 0x4E7000
	0x03C795C0 LDR X0, [X0 + 0x348]
	0x03C795C4 BL 0x1C16CF4
	0x03C795C8 ADRP X0, 0x4E7000
	0x03C795CC LDR X0, [X0 + 0x368]
	0x03C795D0 BL 0x1C16CF4
	0x03C795D4 ADRP X0, 0x47A000
	0x03C795D8 LDR X0, [X0 + 0xAC8]
	0x03C795DC BL 0x1C16CF4
	0x03C795E0 ADRP X0, 0x47B000
	0x03C795E4 LDR X0, [X0 + 0xFE0]
	0x03C795E8 BL 0x1C16CF4
	0x03C795EC ADRP X0, 0x4E7000
	0x03C795F0 LDR X0, [X0 + 0x580]
	0x03C795F4 BL 0x1C16CF4
	0x03C795F8 ADRP X0, 0x47A000
	0x03C795FC LDR X0, [X0 + 0xDD8]
	0x03C79600 BL 0x1C16CF4
	0x03C79604 ADRP X0, 0x485000
	0x03C79608 LDR X0, [X0 + 0x6D8]
	0x03C7960C BL 0x1C16CF4
	0x03C79610 ADRP X0, 0x47A000
	0x03C79614 LDR X0, [X0 + 0x988]
	0x03C79618 BL 0x1C16CF4
	0x03C7961C ADRP X0, 0x4E7000
	0x03C79620 LDR X0, [X0 + 0x588]
	0x03C79624 BL 0x1C16CF4
	0x03C79628 MOVZ W8, 0x1
	0x03C7962C STRB W8, [X21 + 0x980]
	0x03C79630 ADRP X23, 0x4E7000
	0x03C79634 ADRP X28, 0x47A000
	0x03C79638 ADRP X25, 0x47A000
	0x03C7963C ADRP X29, 0x4E7000
	0x03C79640 ADRP X22, 0x4E7000
	0x03C79644 ADRP X26, 0x4E7000
	0x03C79648 ADRP X27, 0x47B000
	0x03C7964C LDR X23, [X23 + 0x348]
	0x03C79650 LDR X28, [X28 + 0xDD8]
	0x03C79654 LDR X25, [X25 + 0xAC8]
	0x03C79658 LDR X29, [X29 + 0x588]
	0x03C7965C LDR X22, [X22 + 0x580]
	0x03C79660 LDR X26, [X26 + 0x358]
	0x03C79664 LDR X27, [X27 + 0xFE0]
	0x03C79668 LDR X24, [X19]
	0x03C7966C MOV W21, W31
	0x03C79670 STP X31, X31, [X31 + 0x8]
	0x03C79674 STR X31, [X31 + 0x18]
	0x03C79678 MOV X19, X24
	0x03C7967C LDR X0, [X23]
	0x03C79680 LDR W8, [X0 + 0xE0]
	0x03C79684 CBNZ W8, 0x3C79690
	0x03C79688 BL 0x1C16DFC
	0x03C7968C LDR X0, [X23]
	0x03C79690 LDR X8, [X0 + 0xB8]
	0x03C79694 LDR W8, [X8 + 0x10]
	0x03C79698 CMP W21, W8
	0x03C7969C B.GE 0x3C796BC
	0x03C796A0 LDR X1, [X28]
	0x03C796A4 MOV X0, X19
	0x03C796A8 MOV X2, X31
	0x03C796AC BL 0x321B938
	0x03C796B0 MOV X19, X0
	0x03C796B4 ADD W21, W21, 0x1
	0x03C796B8 B 0x3C7967C
	0x03C796BC LDR X0, [X25]
	0x03C796C0 MOVZ W1, 0x5
	0x03C796C4 BL 0x1C16D6C
	0x03C796C8 CBZ X0, 0x3C7986C
	0x03C796CC LDR W8, [X0 + 0x18]
	0x03C796D0 MOV X21, X0
	0x03C796D4 CBZ W8, 0x3C79868
	0x03C796D8 MOV X0, X20
	0x03C796DC STR X24, [X21 + 0x20]
	0x03C796E0 BL 0x3C77080
	0x03C796E4 LDR W8, [X21 + 0x18]
	0x03C796E8 CMP W8, 0x1
	0x03C796EC B.LS 0x3C79868
	0x03C796F0 CMP W8, 0x2
	0x03C796F4 STR X0, [X21 + 0x28]
	0x03C796F8 B.EQ 0x3C79868
	0x03C796FC LDR X8, [X29]
	0x03C79700 ADD X0, X20, 0x78
	0x03C79704 MOV X1, X31
	0x03C79708 STR X8, [X21 + 0x30]
	0x03C7970C BL 0x338FE24
	0x03C79710 LDR W8, [X21 + 0x18]
	0x03C79714 CMP W8, 0x3
	0x03C79718 B.LS 0x3C79868
	0x03C7971C CMP W8, 0x4

ISIL:
	001 Subtract X31, X31, 256
	002 Move [X31+128], D15
	003 Move [X31+136], D14
	004 Move [X31+144], D13
	005 Move [X31+152], D12
	006 Move [X31+160], D11
	007 Move [X31+168], D10
	008 Move [X31+176], D9
	009 Move [X31+184], D8
	010 Move [X31+192], X30
	011 Move [X31+208], X24
	012 Move [X31+216], X23
	013 Move [X31+224], X22
	014 Move [X31+232], X21
	015 Move [X31+240], X20
	016 Move [X31+248], X19
	017 Move X20, 0x76F000
	018 Move W8, [X20+2429]
	019 Move V8, V1
	020 Move V9, V0
	021 Move X19, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {49}
	026 Move X0, 0x4E9000
	027 Move X0, [X0+848]
	028 Call 0x1C17CF4
	029 Move X0, 0x4E9000
	030 Move X0, [X0+856]
	031 Call 0x1C17CF4
	032 Move X0, 0x4E9000
	033 Move X0, [X0+864]
	034 Call 0x1C17CF4
	035 Move X0, 0x4A3000
	036 Move X0, [X0+2192]
	037 Call 0x1C17CF4
	038 Move X0, 0x4E9000
	039 Move X0, [X0+872]
	040 Call 0x1C17CF4
	041 Move X0, 0x4E9000
	042 Move X0, [X0+920]
	043 Call 0x1C17CF4
	044 Move X0, 0x4E9000
	045 Move X0, [X0+928]
	046 Call 0x1C17CF4
	047 Move W8, 1
	048 Move [X20+2429], W8
	049 Move [X31+96], X31
	050 Move [X31+104], X31
	051 Move [X31+112], X31
	052 Move [X31+64], X31
	053 Move [X31+72], X31
	054 Move [X31+80], X31
	055 Move [X31+32], X31
	056 Move [X31+40], X31
	057 Move [X31+48], X31
	058 Move W8, [X19+81]
	059 Move X0, [X19+64]
	060 Move S0, W31
	061 Move [X19+32], S9
	062 NotImplemented "Instruction CMP not yet implemented."
	063 NotImplemented "Instruction FCSEL not yet implemented."
	064 Move [X19+40], S8
	065 Compare X0, 0
	066 JumpIfEqual {482}
	067 Move X20, 0x4A3000
	068 Move X20, [X20+2192]
	069 Call GUIStyle.get_padding, X0
	070 Move X8, [X20]
	071 Move W22, [X19+80]
	072 Move X21, [X19+64]
	073 Move X20, X0
	074 Move W9, [X8+224]
	075 Compare W9, 0
	076 JumpIfNotEqual {79}
	077 Move X0, X8
	078 Call 0x1C17DFC
	079 Call GUIStyle.get_none
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Compare W22, 0
	082 Invalid "Jump target not found in method."
	083 Move X0, [X19+72]
	084 Compare X0, 0
	085 JumpIfEqual {482}
	086 Move X8, 0x4E9000
	087 Move X8, [X8+872]
	088 Move X1, [X8]
	089 Add X8, X31, 8
	090 Call List`1<Object>.GetEnumerator, X0
	091 NotImplemented "Instruction LDUR not yet implemented."
	092 Move X8, [X31+24]
	093 Move X22, 0x4E8000
	094 Move [X31+6], V0
	095 Move [X31+112], X8
	096 Move X22, [X22+856]
	097 Move X1, [X22]
	098 Add X0, X31, 96
	099 Call Enumerator<Object>.MoveNext, X0
	100 Move TEMP, X0
	101 And TEMP, TEMP, 1
	102 Compare TEMP, 1
	103 JumpIfNotEqual {155}
	104 Move X19, [X31+112]
	105 Compare X19, 0
	106 JumpIfEqual {478}
	107 Move X8, [X19]
	108 Move X9, [X8+376]
	109 Move X1, [X8+384]
	110 Move X0, X19
	111 NotImplemented "Instruction BLR not yet implemented."
	112 Compare X20, 0
	113 JumpIfEqual {479}
	114 Move W21, W0
	115 Move X0, X20
	116 Move X1, X31
	117 Call RectOffset.get_left, X0
	118 Move X8, [X19]
	119 NotImplemented "Instruction CMP not yet implemented."
	120 NotImplemented "Instruction CSEL not yet implemented."
	121 Move X9, [X8+392]
	122 Move X1, [X8+400]
	123 Move X0, X19
	124 NotImplemented "Instruction BLR not yet implemented."
	125 Move W21, W0
	126 Move X0, X20
	127 Move X1, X31
	128 Call RectOffset.get_right, X0
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Move W8, [X19+48]
	131 NotImplemented "Instruction CSEL not yet implemented."
	132 NotImplemented "Instruction SCVTF not yet implemented."
	133 NotImplemented "Instruction SCVTF not yet implemented."
	134 Subtract S2, S8, S2
	135 Add S0, S9, S1
	136 Subtract S1, S2, S1
	137 Compare W8, 0
	138 JumpIfEqual {144}
	139 Move X8, [X19]
	140 Move X9, [X8+472]
	141 Move X1, [X8+480]
	142 Move X0, X19
	143 NotImplemented "Instruction BLR not yet implemented."
	144 Move X8, [X19]
	145 Move S3, [X19+16]
	146 Move S2, [X19+20]
	147 Move X9, [X8+472]
	148 Move X1, [X8+480]
	149 NotImplemented "Instruction FCMP not yet implemented."
	150 NotImplemented "Instruction FCSEL not yet implemented."
	151 NotImplemented "Instruction FCMP not yet implemented."
	152 NotImplemented "Instruction FCSEL not yet implemented."
	153 Move X0, X19
	154 NotImplemented "Instruction BLR not yet implemented."
	155 Move X8, 0x4E8000
	156 Move X8, [X8+848]
	157 Add X0, X31, 96
	158 Compare X20, 0
	159 JumpIfEqual {482}
	160 Move X0, X20
	161 Move X1, X31
	162 Call RectOffset.get_left, X0
	163 Move W21, W0
	164 Move X0, X20
	165 Move X1, X31
	166 Call RectOffset.get_right, X0
	167 Move X8, [X19+72]
	168 Compare X8, 0
	169 JumpIfEqual {482}
	170 Move W9, [X8+24]
	171 NotImplemented "Instruction SCVTF not yet implemented."
	172 NotImplemented "Instruction SCVTF not yet implemented."
	173 Compare W9, 0
	174 JumpIfEqual {207}
	175 Move X20, 0x4E8000
	176 Move X20, [X20+928]
	177 Move X0, X8
	178 Move W1, W31
	179 Move X2, [X20]
	180 Call List`1<Object>.get_Item, X0, X1
	181 Compare X0, 0
	182 JumpIfEqual {482}
	183 Move X8, [X0]
	184 Move X9, [X8+376]
	185 Move X1, [X8+384]
	186 NotImplemented "Instruction BLR not yet implemented."
	187 Move X8, [X19+72]
	188 NotImplemented "Instruction SCVTF not yet implemented."
	189 NotImplemented "Instruction FCMP not yet implemented."
	190 NotImplemented "Instruction FCSEL not yet implemented."
	191 Compare X8, 0
	192 JumpIfEqual {482}
	193 Move W9, [X8+24]
	194 Move X2, [X20]
	195 Move X0, X8
	196 Subtract W1, W9, 1
	197 Call List`1<Object>.get_Item, X0, X1
	198 Compare X0, 0
	199 JumpIfEqual {482}
	200 Move X8, [X0]
	201 Move X9, [X8+392]
	202 Move X1, [X8+400]
	203 NotImplemented "Instruction BLR not yet implemented."
	204 NotImplemented "Instruction SCVTF not yet implemented."
	205 NotImplemented "Instruction FCMP not yet implemented."
	206 NotImplemented "Instruction FCSEL not yet implemented."
	207 Add S0, S11, S10
	208 Add S9, S9, S10
	209 Subtract S8, S8, S0
	210 Move X0, [X19+72]
	211 Compare X0, 0
	212 JumpIfEqual {482}
	213 Move W8, [X0+24]
	214 Move V1, [X19+84]
	215 Move S2, [X19+112]
	216 Move S0, [X19+116]
	217 Move S10, W31
	218 Subtract W8, W8, 1
	219 NotImplemented "Instruction SCVTF not yet implemented."
	220 Multiply S1, S1, S3
	221 NotImplemented "Instruction FCMP not yet implemented."
	222 Subtract S1, S8, S1
	223 Move S8, W31
	224 Subtract S3, S1, S2
	225 Subtract S2, S0, S2
	226 NotImplemented "Instruction FDIV not yet implemented."
	227 NotImplemented "Instruction FCMP not yet implemented."
	228 Move S8, W31
	229 Move S3, 1
	230 NotImplemented "Instruction FMIN not yet implemented."
	231 NotImplemented "Instruction FCMP not yet implemented."
	232 Move W8, [X19+100]
	233 NotImplemented "Instruction CMP not yet implemented."
	234 Subtract S0, S1, S0
	235 NotImplemented "Instruction SCVTF not yet implemented."
	236 NotImplemented "Instruction FDIV not yet implemented."
	237 Move X8, 0x4E8000
	238 Move X8, [X8+872]
	239 Move X1, [X8]
	240 Add X8, X31, 8
	241 Call List`1<Object>.GetEnumerator, X0
	242 NotImplemented "Instruction LDUR not yet implemented."
	243 Move X8, [X31+24]
	244 Move X22, 0x4E8000
	245 Move X22, [X22+856]
	246 Move S1, W31
	247 Move W20, W31
	248 Move W23, 1
	249 Move D14, 0.5
	250 NotImplemented "Instruction FMAX not yet implemented."
	251 Move [X31+2], V0
	252 Move [X31+48], X8
	253 Move X1, [X22]
	254 Add X0, X31, 32
	255 Call Enumerator<Object>.MoveNext, X0
	256 Move TEMP, X0
	257 And TEMP, TEMP, 1
	258 Compare TEMP, 1
	259 JumpIfNotEqual {346}
	260 Move X21, [X31+48]
	261 Compare X21, 0
	262 JumpIfEqual {480}
	263 Move S12, [X21+16]
	264 Move S11, [X21+20]
	265 Move W8, [X21+56]
	266 Move V15, [X21+48]
	267 Compare W8, 0
	268 JumpIfEqual {287}
	269 Move X8, [X21]
	270 Move X9, [X8+376]
	271 Move X1, [X8+384]
	272 Move X0, X21
	273 NotImplemented "Instruction BLR not yet implemented."
	274 Move X8, [X21]
	275 And W31, W23, 1
	276 Move X9, [X8+392]
	277 Move X1, [X8+400]
	278 NotImplemented "Instruction CSEL not yet implemented."
	279 NotImplemented "Instruction CMP not yet implemented."
	280 NotImplemented "Instruction CSEL not yet implemented."
	281 Move X0, X21
	282 NotImplemented "Instruction BLR not yet implemented."
	283 NotImplemented "Instruction SCVTF not yet implemented."
	284 Move W20, W0
	285 Move W23, W31
	286 Add S9, S9, S0
	287 NotImplemented "Instruction FCVT not yet implemented."
	288 Add X0, X31, 8
	289 Call 0x3EB2C00
	290 NotImplemented "Instruction FCMP not yet implemented."
	291 Move D1, -0.5
	292 NotImplemented "Instruction FCMP not yet implemented."
	293 Move V0, [X31+8]
	294 Move S1, -1
	295 NotImplemented "Instruction FCMP not yet implemented."
	296 Move V0, [X31+8]
	297 Move S1, 1
	298 NotImplemented "Instruction FCVTZS not yet implemented."
	299 NotImplemented "Instruction INVALID not yet implemented."
	300 Add S1, S0, S1
	301 And X31, X8, 1
	302 NotImplemented "Instruction FCSEL not yet implemented."
	303 Move S0, -0.5
	304 Add S0, S9, S0
	305 NotImplemented "Instruction FRINTP not yet implemented."
	306 Move S0, 0.5
	307 Add S0, S9, S0
	308 NotImplemented "Instruction FRINTM not yet implemented."
	309 Subtract S0, S11, S12
	310 NotImplemented "Instruction SCVTF not yet implemented."
	311 Multiply S0, S13, S0
	312 Add S0, S12, S0
	313 Multiply S1, S10, S1
	314 Add S11, S0, S1
	315 NotImplemented "Instruction FCVT not yet implemented."
	316 Add X0, X31, 8
	317 Call 0x3EB2C00
	318 NotImplemented "Instruction FCMP not yet implemented."
	319 Move D1, -0.5
	320 NotImplemented "Instruction FCMP not yet implemented."
	321 Move V0, [X31+8]
	322 Move S1, -1
	323 NotImplemented "Instruction FCMP not yet implemented."
	324 Move V0, [X31+8]
	325 Move S1, 1
	326 NotImplemented "Instruction FCVTZS not yet implemented."
	327 NotImplemented "Instruction INVALID not yet implemented."
	328 Add S1, S0, S1
	329 And X31, X8, 1
	330 NotImplemented "Instruction FCSEL not yet implemented."
	331 Move S0, -0.5
	332 Add S0, S11, S0
	333 NotImplemented "Instruction FRINTP not yet implemented."
	334 Move S0, 0.5
	335 Add S0, S11, S0
	336 NotImplemented "Instruction FRINTM not yet implemented."
	337 Move X8, [X21]
	338 Move X9, [X8+472]
	339 Move X1, [X8+480]
	340 Move X0, X21
	341 Move V0, V8
	342 NotImplemented "Instruction BLR not yet implemented."
	343 Move V0, [X19+84]
	344 Add S0, S11, S0
	345 Add S9, S9, S0
	346 Move X8, 0x4E8000
	347 Move X8, [X8+848]
	348 Add X0, X31, 32
	349 Move X8, [X19]
	350 Move X0, X19
	351 Move X9, [X8+376]
	352 Move X1, [X8+384]
	353 NotImplemented "Instruction BLR not yet implemented."
	354 Move X8, [X19]
	355 Move W20, W0
	356 Move X0, X19
	357 Move X9, [X8+376]
	358 Move X1, [X8+384]
	359 NotImplemented "Instruction BLR not yet implemented."
	360 Move X8, [X19]
	361 Move W21, W0
	362 Move X0, X19
	363 Move X9, [X8+392]
	364 Move X1, [X8+400]
	365 NotImplemented "Instruction BLR not yet implemented."
	366 Move X9, [X19+72]
	367 Compare X9, 0
	368 JumpIfEqual {482}
	369 Move X8, 0x4E8000
	370 Move X8, [X8+872]
	371 NotImplemented "Instruction SCVTF not yet implemented."
	372 Subtract S9, S9, S0
	373 Move X1, [X8]
	374 Add W8, W0, W21
	375 NotImplemented "Instruction SCVTF not yet implemented."
	376 Add X8, X31, 8
	377 Move X0, X9
	378 Add S8, S0, S8
	379 Call List`1<Object>.GetEnumerator, X0
	380 NotImplemented "Instruction LDUR not yet implemented."
	381 Move X8, [X31+24]
	382 Move X22, 0x4E8000
	383 Move [X31+4], V0
	384 Move [X31+80], X8
	385 Move X22, [X22+856]
	386 Move X1, [X22]
	387 Add X0, X31, 64
	388 Call Enumerator<Object>.MoveNext, X0
	389 Move TEMP, X0
	390 And TEMP, TEMP, 1
	391 Compare TEMP, 1
	392 JumpIfNotEqual {456}
	393 Move X19, [X31+80]
	394 Compare X19, 0
	395 JumpIfEqual {481}
	396 Move X9, [X19]
	397 Move W10, [X19+48]
	398 Move X8, [X9+376]
	399 Move X1, [X9+384]
	400 Compare W10, 0
	401 JumpIfEqual {426}
	402 Move X0, X19
	403 NotImplemented "Instruction BLR not yet implemented."
	404 Move X8, [X19]
	405 Move W20, W0
	406 Move X9, [X8+376]
	407 Move X1, [X8+384]
	408 Move X0, X19
	409 NotImplemented "Instruction BLR not yet implemented."
	410 Move X8, [X19]
	411 Move W21, W0
	412 Move X9, [X8+392]
	413 Move X1, [X8+400]
	414 Move X0, X19
	415 NotImplemented "Instruction BLR not yet implemented."
	416 Move X8, [X19]
	417 Add W9, W0, W21
	418 NotImplemented "Instruction SCVTF not yet implemented."
	419 NotImplemented "Instruction SCVTF not yet implemented."
	420 Move X10, [X8+472]
	421 Move X1, [X8+480]
	422 Add S0, S9, S0
	423 Subtract S1, S8, S1
	424 Move X0, X19
	425 NotImplemented "Instruction BLR not yet implemented."
	426 Move X0, X19
	427 NotImplemented "Instruction BLR not yet implemented."
	428 Move X8, [X19]
	429 Move W20, W0
	430 Move X9, [X8+376]
	431 Move X1, [X8+384]
	432 Move X0, X19
	433 NotImplemented "Instruction BLR not yet implemented."
	434 Move X8, [X19]
	435 Move W21, W0
	436 Move X9, [X8+392]
	437 Move X1, [X8+400]
	438 Move X0, X19
	439 NotImplemented "Instruction BLR not yet implemented."
	440 Move X9, [X19]
	441 Move S0, [X19+16]
	442 Move S1, [X19+20]
	443 Add W8, W0, W21
	444 NotImplemented "Instruction SCVTF not yet implemented."
	445 Subtract S2, S8, S2
	446 Move X8, [X9+472]
	447 Move X1, [X9+480]
	448 NotImplemented "Instruction FCMP not yet implemented."
	449 NotImplemented "Instruction FCSEL not yet implemented."
	450 NotImplemented "Instruction FCMP not yet implemented."
	451 NotImplemented "Instruction FCSEL not yet implemented."
	452 NotImplemented "Instruction SCVTF not yet implemented."
	453 Add S0, S9, S0
	454 Move X0, X19
	455 NotImplemented "Instruction BLR not yet implemented."
	456 Move X8, 0x4E8000
	457 Move X8, [X8+848]
	458 Add X0, X31, 64
	459 Move X1, [X8]
	460 Call Enumerator<Object>.Dispose, X0
	461 Move X20, [X31+240]
	462 Move X19, [X31+248]
	463 Move X22, [X31+224]
	464 Move X21, [X31+232]
	465 Move X24, [X31+208]
	466 Move X23, [X31+216]
	467 Move X30, [X31+192]
	468 Move D9, [X31+176]
	469 Move D8, [X31+184]
	470 Move D11, [X31+160]
	471 Move D10, [X31+168]
	472 Move D13, [X31+144]
	473 Move D12, [X31+152]
	474 Move D15, [X31+128]
	475 Move D14, [X31+136]
	476 Add X31, X31, 256
	477 Return 
	478 Call 0x1C17F20
	479 Call 0x1C17F20
	480 Call 0x1C17F20
	481 Call 0x1C17F20
	482 Call 0x1C17F20
	483 Move X19, X0
	484 NotImplemented "Instruction CMP not yet implemented."
	485 Move X0, X19
	486 Call 0x3EB2AD0
	487 Move X20, [X0]
	488 Call 0x3EB2AE0
	489 Move X8, 0x4E8000
	490 Move X8, [X8+848]
	491 Add X0, X31, 32
	492 Move X20, X31
	493 Move X19, X0
	494 Move X8, 0x4E8000
	495 Move X8, [X8+848]
	496 Move X1, [X8]
	497 Add X0, X31, 32
	498 Call Enumerator<Object>.Dispose, X0
	499 Compare X20, 0
	500 JumpIfEqual {547}
	501 Move X0, X20
	502 Call 0x1C17F18
	503 Move X19, X0
	504 NotImplemented "Instruction CMP not yet implemented."
	505 Move X0, X19
	506 Call 0x3EB2AD0
	507 Move X20, [X0]
	508 Call 0x3EB2AE0
	509 Move X8, 0x4E8000
	510 Move X8, [X8+848]
	511 Add X0, X31, 96
	512 Move X20, X31
	513 Move X19, X0
	514 Move X8, 0x4E8000
	515 Move X8, [X8+848]
	516 Move X1, [X8]
	517 Add X0, X31, 96
	518 Call Enumerator<Object>.Dispose, X0
	519 Compare X20, 0
	520 JumpIfEqual {547}
	521 Move X0, X20
	522 Call 0x1C17F18
	523 Move X19, X0
	524 NotImplemented "Instruction CMP not yet implemented."
	525 Move X0, X19
	526 Call 0x3EB2AD0
	527 Move X20, [X0]
	528 Call 0x3EB2AE0
	529 Move X8, 0x4E8000
	530 Move X8, [X8+848]
	531 Add X0, X31, 64
	532 Move X1, [X8]
	533 Call Enumerator<Object>.Dispose, X0
	534 Compare X20, 0
	535 JumpIfEqual {461}
	536 Move X0, X20
	537 Call 0x1C17F18
	538 Move X20, X31
	539 Move X19, X0
	540 Move X8, 0x4E8000
	541 Move X8, [X8+848]
	542 Move X1, [X8]
	543 Add X0, X31, 64
	544 Call Enumerator<Object>.Dispose, X0
	545 Compare X20, 0
	546 JumpIfNotEqual {549}
	547 Move X0, X19
	548 Call 0x1D2D690
	549 Move X0, X20
	550 Call 0x1C17F18
	551 Call 0x1991590

Method: System.Void CalcHeight()

Disassembly:
	0x03C79720 STR X0, [X21 + 0x38]
	0x03C79724 B.EQ 0x3C79868
	0x03C79728 LDR X8, [X22]
	0x03C7972C MOV X0, X21
	0x03C79730 MOV X1, X31
	0x03C79734 STR X8, [X21 + 0x40]
	0x03C79738 BL 0x32278CC
	0x03C7973C LDR X8, [X23]
	0x03C79740 MOV X22, X0
	0x03C79744 LDR W9, [X8 + 0xE0]
	0x03C79748 CBNZ W9, 0x3C79758
	0x03C7974C MOV X0, X8
	0x03C79750 BL 0x1C16DFC
	0x03C79754 LDR X8, [X23]
	0x03C79758 LDR X8, [X8 + 0xB8]
	0x03C7975C LDR W9, [X8 + 0x10]
	0x03C79760 ADD W9, W9, 0x4
	0x03C79764 STR W9, [X8 + 0x10]
	0x03C79768 LDR X0, [X20 + 0x48]
	0x03C7976C CBZ X0, 0x3C7986C
	0x03C79770 ADRP X8, 0x4E7000
	0x03C79774 LDR X8, [X8 + 0x368]
	0x03C79778 LDR X1, [X8]
	0x03C7977C ADD X8, X31, 0x8
	0x03C79780 BL 0x301CB58
	0x03C79784 MOV X21, X31
	0x03C79788 LDR X1, [X26]
	0x03C7978C MOV X20, X22
	0x03C79790 ADD X0, X31, 0x8
	0x03C79794 BL 0x2BC4350
	0x03C79798 TBZ X0, 0x0, 0x3C797E4
	0x03C7979C LDR X8, [X31 + 0x18]
	0x03C797A0 CMP X8, 0x0
	0x03C797A4 CSEL X21, X21, X8, EQ
	0x03C797A8 CBZ X8, 0x3C797C8
	0x03C797AC CBZ X21, 0x3C79864
	0x03C797B0 LDR X8, [X21]
	0x03C797B4 LDP X9, X1, [X8 + 0x168]
	0x03C797B8 MOV X0, X21
	0x03C797BC BLR X9
	0x03C797C0 MOV X1, X0
	0x03C797C4 B 0x3C797CC
	0x03C797C8 MOV X1, X31
	0x03C797CC LDR X2, [X27]
	0x03C797D0 MOV X0, X20
	0x03C797D4 MOV X3, X31
	0x03C797D8 BL 0x32274B8
	0x03C797DC MOV X22, X0
	0x03C797E0 B 0x3C79788
	0x03C797E4 ADRP X8, 0x4E7000
	0x03C797E8 LDR X8, [X8 + 0x350]
	0x03C797EC ADD X0, X31, 0x8
	0x03C797F0 LDR X1, [X8]
	0x03C797F4 BL 0x2BC434C
	0x03C797F8 ADRP X8, 0x485000
	0x03C797FC LDR X8, [X8 + 0x6D8]
	0x03C79800 MOV X0, X20
	0x03C79804 MOV X1, X19
	0x03C79808 MOV X3, X31
	0x03C7980C LDR X2, [X8]
	0x03C79810 BL 0x32274B8
	0x03C79814 LDR X8, [X23]
	0x03C79818 MOV X19, X0
	0x03C7981C LDR W9, [X8 + 0xE0]
	0x03C79820 CBNZ W9, 0x3C79830
	0x03C79824 MOV X0, X8
	0x03C79828 BL 0x1C16DFC
	0x03C7982C LDR X8, [X23]
	0x03C79830 LDR X8, [X8 + 0xB8]
	0x03C79834 MOV X0, X19
	0x03C79838 LDP X20, X19, [X31 + 0x70]
	0x03C7983C LDP X22, X21, [X31 + 0x60]
	0x03C79840 LDR W9, [X8 + 0x10]
	0x03C79844 LDP X24, X23, [X31 + 0x50]
	0x03C79848 LDP X26, X25, [X31 + 0x40]
	0x03C7984C LDP X28, X27, [X31 + 0x30]
	0x03C79850 LDP X29, X30, [X31 + 0x20]
	0x03C79854 SUB W9, W9, 0x4
	0x03C79858 STR W9, [X8 + 0x10]
	0x03C7985C ADD X31, X31, 0x80
	0x03C79860 RET
	0x03C79864 BL 0x1C16F20
	0x03C79868 BL 0x1C16F28
	0x03C7986C BL 0x1C16F20
	0x03C79870 B 0x3C7987C
	0x03C79874 B 0x3C7987C
	0x03C79878 B 0x3C7987C
	0x03C7987C MOV X21, X0
	0x03C79880 CMP W1, 0x1
	0x03C79884 B.NE 0x3C798B8
	0x03C79888 MOV X0, X21
	0x03C7988C BL 0x3EB1AD0
	0x03C79890 LDR X22, [X0]
	0x03C79894 BL 0x3EB1AE0
	0x03C79898 ADRP X8, 0x4E7000
	0x03C7989C LDR X8, [X8 + 0x350]
	0x03C798A0 ADD X0, X31, 0x8
	0x03C798A4 LDR X1, [X8]
	0x03C798A8 BL 0x2BC434C
	0x03C798AC CBZ X22, 0x3C797F8
	0x03C798B0 MOV X0, X22
	0x03C798B4 BL 0x1C16F18
	0x03C798B8 MOV X22, X31
	0x03C798BC B 0x3C798C4
	0x03C798C0 MOV X21, X0
	0x03C798C4 ADRP X8, 0x4E7000
	0x03C798C8 LDR X8, [X8 + 0x350]
	0x03C798CC LDR X1, [X8]
	0x03C798D0 ADD X0, X31, 0x8
	0x03C798D4 BL 0x2BC434C
	0x03C798D8 CBNZ X22, 0x3C798E4
	0x03C798DC MOV X0, X21
	0x03C798E0 BL 0x1D2C690
	0x03C798E4 MOV X0, X22
	0x03C798E8 BL 0x1C16F18
	0x03C798EC BL 0x1990590
	0x03C798F0 STP X30, X21, [X31 - 0x20]!
	0x03C798F4 STP X20, X19, [X31 + 0x10]
	0x03C798F8 ADRP X20, 0x76D000
	0x03C798FC ADRP X19, 0x4A1000
	0x03C79900 LDRB W8, [X20 + 0x981]
	0x03C79904 LDR X19, [X19 + 0x890]
	0x03C79908 TBNZ X8, 0x0, 0x3C79938
	0x03C7990C ADRP X0, 0x4E7000
	0x03C79910 LDR X0, [X0 + 0x348]
	0x03C79914 BL 0x1C16CF4
	0x03C79918 ADRP X0, 0x4E7000
	0x03C7991C LDR X0, [X0 + 0x2D0]
	0x03C79920 BL 0x1C16CF4
	0x03C79924 ADRP X0, 0x4A1000
	0x03C79928 LDR X0, [X0 + 0x890]
	0x03C7992C BL 0x1C16CF4
	0x03C79930 MOVZ W8, 0x1
	0x03C79934 STRB W8, [X20 + 0x981]
	0x03C79938 LDR X0, [X19]
	0x03C7993C ADRP X20, 0x4E7000
	0x03C79940 LDR W8, [X0 + 0xE0]
	0x03C79944 LDR X20, [X20 + 0x348]
	0x03C79948 CBNZ W8, 0x3C79950
	0x03C7994C BL 0x1C16DFC
	0x03C79950 ADRP X21, 0x4E7000
	0x03C79954 LDR X21, [X21 + 0x2D0]
	0x03C79958 BL 0x3C6BB04
	0x03C7995C LDR X8, [X20]
	0x03C79960 MOV X19, X0
	0x03C79964 MOV X0, X8
	0x03C79968 BL 0x1C16F10
	0x03C7996C LDR X8, [X20]
	0x03C79970 MOV X20, X0
	0x03C79974 LDR W9, [X8 + 0xE0]
	0x03C79978 CBNZ W9, 0x3C79984
	0x03C7997C MOV X0, X8
	0x03C79980 BL 0x1C16DFC
	0x03C79984 FMOV S0, W31
	0x03C79988 FMOV S1, 1
	0x03C7998C FMOV S2, W31
	0x03C79990 FMOV S3, 1
	0x03C79994 MOV X0, X20
	0x03C79998 MOV X1, X19
	0x03C7999C BL 0x3C76BBC
	0x03C799A0 LDR X8, [X21]
	0x03C799A4 LDR X8, [X8 + 0xB8]
	0x03C799A8 STR X20, [X8]
	0x03C799AC LDP X20, X19, [X31 + 0x10]
	0x03C799B0 LDP X30, X21, [X31], #0x20
	0x03C799B4 RET
	0x03C799B8 STP X30, X21, [X31 - 0x20]!
	0x03C799BC STP X20, X19, [X31 + 0x10]
	0x03C799C0 ADRP X21, 0x76D000
	0x03C799C4 ADRP X20, 0x4E7000
	0x03C799C8 LDRB W8, [X21 + 0x987]
	0x03C799CC LDR X20, [X20 + 0x2D0]
	0x03C799D0 MOV X19, X0
	0x03C799D4 TBNZ X8, 0x0, 0x3C799EC
	0x03C799D8 ADRP X0, 0x4E7000
	0x03C799DC LDR X0, [X0 + 0x2D0]
	0x03C799E0 BL 0x1C16CF4
	0x03C799E4 MOVZ W8, 0x1
	0x03C799E8 STRB W8, [X21 + 0x987]
	0x03C799EC MOVZ W8, 0x101
	0x03C799F0 STRH W8, [X19 + 0xA8]
	0x03C799F4 LDR X0, [X20]
	0x03C799F8 LDR W8, [X0 + 0xE0]
	0x03C799FC CBNZ W8, 0x3C79A04
	0x03C79A00 BL 0x1C16DFC
	0x03C79A04 MOV X0, X19
	0x03C79A08 LDP X20, X19, [X31 + 0x10]
	0x03C79A0C MOV X1, X31
	0x03C79A10 LDP X30, X21, [X31], #0x20
	0x03C79A14 B 0x3C6FB68
	0x03C79A18 STP D9, D8, [X31 - 0x20]!
	0x03C79A1C STP X30, X19, [X31 + 0x10]
	0x03C79A20 LDRB W8, [X0 + 0xA8]
	0x03C79A24 LDP S9, S8, [X0 + 0x10]
	0x03C79A28 MOV X19, X0
	0x03C79A2C CBZ W8, 0x3C79A34
	0x03C79A30 STR X31, [X19 + 0x10]
	0x03C79A34 MOV X0, X19
	0x03C79A38 MOV X1, X31
	0x03C79A3C BL 0x3C77838
	0x03C79A40 LDR V0, [X19 + 0x10]
	0x03C79A44 LDRB W8, [X19 + 0xA8]
	0x03C79A48 STR D0, [X19 + 0x90]
	0x03C79A4C CBZ W8, 0x3C79A8C
	0x03C79A50 FCMP S9, 0x0
	0x03C79A54 B.NE 0x3C79A68
	0x03C79A58 MOVZ W8, 0x42000000
	0x03C79A5C FMOV S1, W8
	0x03C79A60 FCMP S0, S1
	0x03C79A64 B.LE 0x3C79A7C
	0x03C79A68 MOVZ W8, 0x42000000
	0x03C79A6C FCMP S9, 0x0
	0x03C79A70 FMOV S0, W8
	0x03C79A74 FCSEL S0, S9, S0, NE
	0x03C79A78 STR S0, [X19 + 0x10]
	0x03C79A7C FCMP S8, 0x0
	0x03C79A80 B.EQ 0x3C79A8C
	0x03C79A84 STR S8, [X19 + 0x14]
	0x03C79A88 STR W31, [X19 + 0x30]
	0x03C79A8C LDP X30, X19, [X31 + 0x10]
	0x03C79A90 LDP D9, D8, [X31], #0x20
	0x03C79A94 RET
	0x03C79A98 STR D10, [X31 - 0x30]!
	0x03C79A9C STP D9, D8, [X31 + 0x10]
	0x03C79AA0 STP X30, X19, [X31 + 0x20]
	0x03C79AA4 LDRB W8, [X0 + 0xAB]
	0x03C79AA8 MOV V8.16B, V1.16B
	0x03C79AAC MOV V9.16B, V0.16B
	0x03C79AB0 MOV X19, X0
	0x03C79AB4 MOV V10.16B, V1.16B
	0x03C79AB8 CBZ W8, 0x3C79AF8
	0x03C79ABC LDR X0, [X19 + 0xB8]
	0x03C79AC0 CBZ X0, 0x3C79B74
	0x03C79AC4 MOV X1, X31
	0x03C79AC8 BL 0x3C735D8
	0x03C79ACC LDR X0, [X19 + 0xB8]
	0x03C79AD0 CBZ X0, 0x3C79B74
	0x03C79AD4 MOV X1, X31
	0x03C79AD8 MOV V10.16B, V0.16B
	0x03C79ADC BL 0x3C74660
	0x03C79AE0 CBZ X0, 0x3C79B74
	0x03C79AE4 MOV X1, X31
	0x03C79AE8 BL 0x3C0C8A8
	0x03C79AEC FSUB S0, S8, S10
	0x03C79AF0 SCVTF S1, W0
	0x03C79AF4 FSUB S10, S0, S1
	0x03C79AF8 LDRB W8, [X19 + 0xA8]
	0x03C79AFC CBZ W8, 0x3C79B1C
	0x03C79B00 LDR V1, [X19 + 0x90]
	0x03C79B04 FCMP S10, S1
	0x03C79B08 B.MI 0x3C79B38
	0x03C79B0C LDR V0, [X19 + 0x94]
	0x03C79B10 STRB W31, [X19 + 0xAA]
	0x03C79B14 STP S1, S0, [X19 + 0x10]
	0x03C79B18 B 0x3C79B20
	0x03C79B1C STRB W31, [X19 + 0xAA]
	0x03C79B20 MOV X0, X19
	0x03C79B24 MOV V0.16B, V9.16B
	0x03C79B28 MOV V1.16B, V10.16B
	0x03C79B2C MOV X1, X31
	0x03C79B30 BL 0x3C77EE4
	0x03C79B34 B 0x3C79B5C
	0x03C79B38 LDR V0, [X19 + 0x94]
	0x03C79B3C MOVZ W8, 0x1
	0x03C79B40 MOV X0, X19
	0x03C79B44 MOV X1, X31
	0x03C79B48 STP S1, S0, [X19 + 0x10]
	0x03C79B4C MOV V0.16B, V9.16B
	0x03C79B50 STRB W8, [X19 + 0xAA]
	0x03C79B54 BL 0x3C77EE4
	0x03C79B58 LDR V10, [X19 + 0x90]
	0x03C79B5C STR S8, [X19 + 0x28]
	0x03C79B60 STR S10, [X19 + 0xA0]
	0x03C79B64 LDP X30, X19, [X31 + 0x20]
	0x03C79B68 LDP D9, D8, [X31 + 0x10]
	0x03C79B6C LDR V10, [X31], #0x30
	0x03C79B70 RET
	0x03C79B74 BL 0x1C16F20
	0x03C79B78 STR D10, [X31 - 0x30]!
	0x03C79B7C STP D9, D8, [X31 + 0x10]
	0x03C79B80 STP X30, X19, [X31 + 0x20]
	0x03C79B84 LDRB W8, [X0 + 0xA9]
	0x03C79B88 LDP S10, S9, [X0 + 0x18]
	0x03C79B8C MOV X19, X0
	0x03C79B90 CBZ W8, 0x3C79B98
	0x03C79B94 STR X31, [X19 + 0x18]
	0x03C79B98 MOV X0, X19
	0x03C79B9C MOV X1, X31
	0x03C79BA0 BL 0x3C78720
	0x03C79BA4 LDR V0, [X19 + 0x18]
	0x03C79BA8 LDRB W8, [X19 + 0xAA]
	0x03C79BAC STR D0, [X19 + 0x98]
	0x03C79BB0 CBZ W8, 0x3C79BFC
	0x03C79BB4 LDR X0, [X19 + 0xB0]
	0x03C79BB8 CBZ X0, 0x3C79C50
	0x03C79BBC MOV X1, X31
	0x03C79BC0 BL 0x3C73614
	0x03C79BC4 LDR X0, [X19 + 0xB0]
	0x03C79BC8 CBZ X0, 0x3C79C50
	0x03C79BCC MOV X1, X31
	0x03C79BD0 MOV V8.16B, V0.16B
	0x03C79BD4 BL 0x3C74660
	0x03C79BD8 CBZ X0, 0x3C79C50
	0x03C79BDC MOV X1, X31
	0x03C79BE0 BL 0x3C0C920
	0x03C79BE4 LDR V0, [X19 + 0x18]
	0x03C79BE8 SCVTF S1, W0
	0x03C79BEC FADD S1, S8, S1
	0x03C79BF0 UNIMPLEMENTED
	0x03C79BF4 FADD V0.2S, V0.2S, V1.2S
	0x03C79BF8 STR D0, [X19 + 0x18]
	0x03C79BFC LDRB W8, [X19 + 0xA9]
	0x03C79C00 CBZ W8, 0x3C79C40
	0x03C79C04 FCMP S10, 0x0
	0x03C79C08 B.NE 0x3C79C1C
	0x03C79C0C MOVZ W8, 0x42000000
	0x03C79C10 FMOV S1, W8
	0x03C79C14 FCMP S0, S1
	0x03C79C18 B.LE 0x3C79C30
	0x03C79C1C MOVZ W8, 0x42000000
	0x03C79C20 FCMP S10, 0x0
	0x03C79C24 FMOV S0, W8
	0x03C79C28 FCSEL S0, S10, S0, NE
	0x03C79C2C STR S0, [X19 + 0x18]
	0x03C79C30 FCMP S9, 0x0
	0x03C79C34 B.EQ 0x3C79C40
	0x03C79C38 STR S9, [X19 + 0x1C]
	0x03C79C3C STR W31, [X19 + 0x34]
	0x03C79C40 LDP X30, X19, [X31 + 0x20]
	0x03C79C44 LDP D9, D8, [X31 + 0x10]
	0x03C79C48 LDR V10, [X31], #0x30
	0x03C79C4C RET
	0x03C79C50 BL 0x1C16F20
	0x03C79C54 STP D11, D10, [X31 - 0x30]!
	0x03C79C58 STP D9, D8, [X31 + 0x10]
	0x03C79C5C STP X30, X19, [X31 + 0x20]
	0x03C79C60 LDRB W8, [X0 + 0xAA]
	0x03C79C64 MOV V8.16B, V1.16B
	0x03C79C68 MOV V9.16B, V0.16B
	0x03C79C6C MOV X19, X0
	0x03C79C70 MOV V10.16B, V1.16B
	0x03C79C74 CBZ W8, 0x3C79CB4
	0x03C79C78 LDR X0, [X19 + 0xB0]
	0x03C79C7C CBZ X0, 0x3C79DBC
	0x03C79C80 MOV X1, X31
	0x03C79C84 BL 0x3C73614
	0x03C79C88 LDR X0, [X19 + 0xB0]
	0x03C79C8C CBZ X0, 0x3C79DBC
	0x03C79C90 MOV X1, X31
	0x03C79C94 MOV V10.16B, V0.16B
	0x03C79C98 BL 0x3C74660
	0x03C79C9C CBZ X0, 0x3C79DBC
	0x03C79CA0 MOV X1, X31
	0x03C79CA4 BL 0x3C0C920
	0x03C79CA8 SCVTF S0, W0
	0x03C79CAC FADD S0, S10, S0
	0x03C79CB0 FSUB S10, S8, S0
	0x03C79CB4 LDRB W8, [X19 + 0xA9]
	0x03C79CB8 CBZ W8, 0x3C79CD0
	0x03C79CBC LDR V1, [X19 + 0x98]
	0x03C79CC0 FCMP S10, S1
	0x03C79CC4 B.MI 0x3C79CE8
	0x03C79CC8 LDR V0, [X19 + 0x9C]
	0x03C79CCC STP S1, S0, [X19 + 0x18]
	0x03C79CD0 MOV X0, X19
	0x03C79CD4 MOV V0.16B, V9.16B
	0x03C79CD8 MOV V1.16B, V10.16B
	0x03C79CDC MOV X1, X31
	0x03C79CE0 BL 0x3C78D1C
	0x03C79CE4 B 0x3C79DA4
	0x03C79CE8 LDRB W8, [X19 + 0xAA]
	0x03C79CEC CBNZ W8, 0x3C79D80
	0x03C79CF0 LDRB W8, [X19 + 0xAB]
	0x03C79CF4 CBNZ W8, 0x3C79D80
	0x03C79CF8 LDR X0, [X19 + 0xB8]
	0x03C79CFC CBZ X0, 0x3C79DBC
	0x03C79D00 LDR V11, [X19 + 0x28]
	0x03C79D04 MOV X1, X31
	0x03C79D08 BL 0x3C735D8
	0x03C79D0C LDR X0, [X19 + 0xB8]
	0x03C79D10 CBZ X0, 0x3C79DBC
	0x03C79D14 MOV X1, X31
	0x03C79D18 MOV V10.16B, V0.16B

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+96], D9
	003 Move [X31+104], D8
	004 Move [X31+112], X30
	005 Move [X31+120], X25
	006 Move [X31+128], X24
	007 Move [X31+136], X23
	008 Move [X31+144], X22
	009 Move [X31+152], X21
	010 Move [X31+160], X20
	011 Move [X31+168], X19
	012 Move X20, 0x76E000
	013 Move W8, [X20+2430]
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {42}
	019 Move X0, 0x4E8000
	020 Move X0, [X0+848]
	021 Call 0x1C17CF4
	022 Move X0, 0x4E8000
	023 Move X0, [X0+856]
	024 Call 0x1C17CF4
	025 Move X0, 0x4E8000
	026 Move X0, [X0+864]
	027 Call 0x1C17CF4
	028 Move X0, 0x4A2000
	029 Move X0, [X0+2192]
	030 Call 0x1C17CF4
	031 Move X0, 0x4E8000
	032 Move X0, [X0+872]
	033 Call 0x1C17CF4
	034 Move X0, 0x4E8000
	035 Move X0, [X0+920]
	036 Call 0x1C17CF4
	037 Move X0, 0x4E8000
	038 Move X0, [X0+928]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X20+2430], W8
	042 Move [X31+64], X31
	043 Move [X31+72], X31
	044 Move [X31+80], X31
	045 Move [X31+32], X31
	046 Move [X31+40], X31
	047 Move [X31+48], X31
	048 Move X0, [X19+72]
	049 Compare X0, 0
	050 JumpIfEqual {366}
	051 Move W8, [X0+24]
	052 Compare W8, 0
	053 JumpIfEqual {155}
	054 Move W8, [X19+80]
	055 Move [X19+120], X31
	056 Move [X19+104], W31
	057 Compare W8, 0
	058 JumpIfEqual {166}
	059 Move X8, 0x4E8000
	060 Move X8, [X8+872]
	061 Move X1, [X8]
	062 Add X8, X31, 8
	063 Call List`1<Object>.GetEnumerator, X0
	064 NotImplemented "Instruction LDUR not yet implemented."
	065 Move X8, [X31+24]
	066 Move X21, 0x4E8000
	067 Move W23, W31
	068 Move [X31+4], V0
	069 Move [X31+80], X8
	070 Move X21, [X21+856]
	071 Move W22, 1
	072 Move X1, [X21]
	073 Add X0, X31, 64
	074 Call Enumerator<Object>.MoveNext, X0
	075 Move TEMP, X0
	076 And TEMP, TEMP, 1
	077 Compare TEMP, 1
	078 JumpIfNotEqual {127}
	079 Move X20, [X31+80]
	080 Compare X20, 0
	081 JumpIfEqual {364}
	082 Move X8, [X20]
	083 Move X9, [X8+456]
	084 Move X1, [X8+464]
	085 Move X0, X20
	086 NotImplemented "Instruction BLR not yet implemented."
	087 Move W8, [X20+56]
	088 Compare W8, 0
	089 JumpIfEqual {95}
	090 Move TEMP, X22
	091 And TEMP, TEMP, 1
	092 Compare TEMP, 1
	093 JumpIfNotEqual {99}
	094 Move W8, W31
	095 Move V0, [X19+120]
	096 Move V1, [X20+24]
	097 Add V0, V0, V1
	098 Move [X19+120], D0
	099 Move X8, [X20]
	100 Move X9, [X8+408]
	101 Move X1, [X8+416]
	102 Move X0, X20
	103 NotImplemented "Instruction BLR not yet implemented."
	104 NotImplemented "Instruction CMP not yet implemented."
	105 NotImplemented "Instruction CSEL not yet implemented."
	106 Add X9, X19, 84
	107 Move V0, [X20+24]
	108 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	109 Move V3, [X19+120]
	110 NotImplemented "Instruction SCVTF not yet implemented."
	111 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	112 Add V0, V0, V1
	113 Add V0, V0, V2
	114 Add V0, V3, V0
	115 Move [X19+120], D0
	116 Move X8, [X20]
	117 Move X9, [X8+424]
	118 Move X1, [X8+432]
	119 Move X0, X20
	120 NotImplemented "Instruction BLR not yet implemented."
	121 Move W22, W31
	122 Move W23, W0
	123 Move W8, [X19+104]
	124 Move W9, [X20+52]
	125 Add W8, W9, W8
	126 Move [X19+104], W8
	127 Move X8, 0x4E8000
	128 Move X8, [X8+848]
	129 Add X0, X31, 64
	130 Move X1, [X8]
	131 Call Enumerator<Object>.Dispose, X0
	132 Add X8, X19, 84
	133 Move V0, [X19+120]
	134 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	135 Move X0, [X19+72]
	136 Subtract V0, V0, V1
	137 Move [X19+120], D0
	138 Compare X0, 0
	139 JumpIfEqual {366}
	140 Move W8, [X0+24]
	141 Compare W8, 0
	142 JumpIfEqual {241}
	143 Move X8, 0x4E8000
	144 Move X8, [X8+928]
	145 Move W1, W31
	146 Move X2, [X8]
	147 Call List`1<Object>.get_Item, X0, X1
	148 Compare X0, 0
	149 JumpIfEqual {366}
	150 Move X8, [X0]
	151 Move X9, [X8+408]
	152 Move X1, [X8+416]
	153 NotImplemented "Instruction BLR not yet implemented."
	154 Move W20, W0
	155 Move X0, [X19+64]
	156 Compare X0, 0
	157 JumpIfEqual {366}
	158 Call GUIStyle.get_padding, X0
	159 Compare X0, 0
	160 JumpIfEqual {366}
	161 Move X1, X31
	162 Call RectOffset.get_vertical, X0
	163 NotImplemented "Instruction SCVTF not yet implemented."
	164 Move [X19+24], S0
	165 Move [X19+32], S0
	166 Move X8, 0x4E8000
	167 Move X8, [X8+872]
	168 Move X1, [X8]
	169 Add X8, X31, 8
	170 Call List`1<Object>.GetEnumerator, X0
	171 NotImplemented "Instruction LDUR not yet implemented."
	172 Move X8, [X31+24]
	173 Move X24, 0x4E8000
	174 Move W23, W31
	175 Move [X31+2], V0
	176 Move [X31+48], X8
	177 Move X24, [X24+856]
	178 Move W20, W31
	179 Move W25, 1
	180 Move X1, [X24]
	181 Add X0, X31, 32
	182 Call Enumerator<Object>.MoveNext, X0
	183 Move TEMP, X0
	184 And TEMP, TEMP, 1
	185 Compare TEMP, 1
	186 JumpIfNotEqual {236}
	187 Move X21, [X31+48]
	188 Compare X21, 0
	189 JumpIfEqual {365}
	190 Move X8, [X21]
	191 Move X9, [X8+456]
	192 Move X1, [X8+464]
	193 Move X0, X21
	194 NotImplemented "Instruction BLR not yet implemented."
	195 Move W8, [X21+56]
	196 Compare W8, 0
	197 JumpIfEqual {232}
	198 Move X9, [X21]
	199 Move X8, [X9+408]
	200 Move X1, [X9+416]
	201 Move TEMP, X25
	202 And TEMP, TEMP, 1
	203 Compare TEMP, 1
	204 JumpIfNotEqual {214}
	205 Move X0, X21
	206 NotImplemented "Instruction BLR not yet implemented."
	207 Move X8, [X21]
	208 Move W22, W0
	209 Move X9, [X8+424]
	210 Move X1, [X8+432]
	211 Move X0, X21
	212 NotImplemented "Instruction BLR not yet implemented."
	213 Move W23, W0
	214 Move X0, X21
	215 NotImplemented "Instruction BLR not yet implemented."
	216 Move X8, [X21]
	217 NotImplemented "Instruction CMP not yet implemented."
	218 NotImplemented "Instruction CSEL not yet implemented."
	219 Move X9, [X8+424]
	220 Move X1, [X8+432]
	221 Move X0, X21
	222 NotImplemented "Instruction BLR not yet implemented."
	223 NotImplemented "Instruction CMP not yet implemented."
	224 NotImplemented "Instruction CSEL not yet implemented."
	225 Move V0, [X21+24]
	226 Move V1, [X19+120]
	227 Move W25, W31
	228 Move W20, W22
	229 NotImplemented "Instruction INVALID not yet implemented."
	230 NotImplemented "Instruction INVALID not yet implemented."
	231 Move [X19+120], D0
	232 Move W8, [X19+104]
	233 Move W9, [X21+52]
	234 Add W8, W9, W8
	235 Move [X19+104], W8
	236 Move X8, 0x4E8000
	237 Move X8, [X8+848]
	238 Add X0, X31, 32
	239 Move X1, [X8]
	240 Call Enumerator<Object>.Dispose, X0
	241 Move W23, W31
	242 Move W20, W31
	243 Move X8, 0x4A2000
	244 Move X8, [X8+2192]
	245 Move X21, [X19+64]
	246 Move X0, [X8]
	247 Move W8, [X0+224]
	248 Compare W8, 0
	249 JumpIfNotEqual {251}
	250 Call 0x1C17DFC
	251 Call GUIStyle.get_none
	252 NotImplemented "Instruction CMP not yet implemented."
	253 Move W8, [X19+109]
	254 Compare W8, 0
	255 JumpIfEqual {360}
	256 Move X0, [X19+64]
	257 Compare X0, 0
	258 JumpIfEqual {366}
	259 Call GUIStyle.get_padding, X0
	260 Compare X0, 0
	261 JumpIfEqual {366}
	262 Move X1, X31
	263 Call RectOffset.get_top, X0
	264 Move X8, [X19+64]
	265 NotImplemented "Instruction CMP not yet implemented."
	266 NotImplemented "Instruction CSEL not yet implemented."
	267 Compare X8, 0
	268 JumpIfEqual {366}
	269 Move X0, X8
	270 Call GUIStyle.get_padding, X0
	271 Compare X0, 0
	272 JumpIfEqual {366}
	273 Move X1, X31
	274 NotImplemented "Instruction SCVTF not yet implemented."
	275 Call RectOffset.get_bottom, X0
	276 NotImplemented "Instruction CMP not yet implemented."
	277 NotImplemented "Instruction CSEL not yet implemented."
	278 NotImplemented "Instruction SCVTF not yet implemented."
	279 Move V1, [X19+120]
	280 Move S2, [X19+24]
	281 Move S0, [X19+28]
	282 Add S1, S8, S1
	283 Add S1, S9, S1
	284 NotImplemented "Instruction FCMP not yet implemented."
	285 NotImplemented "Instruction FCSEL not yet implemented."
	286 NotImplemented "Instruction FCMP not yet implemented."
	287 Move [X19+24], S1
	288 Move X20, [X19+64]
	289 Compare X20, 0
	290 JumpIfEqual {366}
	291 Move X23, 0x76E000
	292 Move W21, [X19+52]
	293 Move X8, [X23+1888]
	294 Move W22, [X19+104]
	295 Compare X8, 0
	296 JumpIfNotEqual {302}
	297 Move X0, -51789824
	298 Add X0, X0, 4047
	299 Call 0x1C17CB8
	300 Move X8, X0
	301 Move [X23+1888], X0
	302 Move X0, X20
	303 NotImplemented "Instruction BLR not yet implemented."
	304 Move V0, [X19+124]
	305 Move V1, [X19+24]
	306 And W8, W0, 1
	307 Add W9, W22, W21
	308 Add S0, S8, S0
	309 Add W8, W9, W8
	310 Add S0, S9, S0
	311 Move [X19+52], W8
	312 Move [X19+28], S0
	313 Move [X19+52], W31
	314 Move X20, [X19+64]
	315 NotImplemented "Instruction FCMP not yet implemented."
	316 NotImplemented "Instruction FCSEL not yet implemented."
	317 Move [X19+28], S0
	318 Compare X20, 0
	319 JumpIfEqual {366}
	320 Move X21, 0x76E000
	321 Move X8, [X21+1872]
	322 Compare X8, 0
	323 JumpIfNotEqual {329}
	324 Move X0, -51843072
	325 Add X0, X0, 2467
	326 Call 0x1C17CB8
	327 Move X8, X0
	328 Move [X21+1872], X0
	329 Move X0, X20
	330 NotImplemented "Instruction BLR not yet implemented."
	331 NotImplemented "Instruction FCMP not yet implemented."
	332 Move X20, [X19+64]
	333 Compare X20, 0
	334 JumpIfEqual {366}
	335 Move X8, [X21+1872]
	336 Compare X8, 0
	337 JumpIfNotEqual {343}
	338 Move X0, -51843072
	339 Add X0, X0, 2467
	340 Call 0x1C17CB8
	341 Move X8, X0
	342 Move [X21+1872], X0
	343 Move X0, X20
	344 NotImplemented "Instruction BLR not yet implemented."
	345 Move [X19+24], S0
	346 Move [X19+32], S0
	347 Move [X19+52], W31
	348 Move X20, [X31+160]
	349 Move X19, [X31+168]
	350 Move X22, [X31+144]
	351 Move X21, [X31+152]
	352 Move X24, [X31+128]
	353 Move X23, [X31+136]
	354 Move X30, [X31+112]
	355 Move X25, [X31+120]
	356 Move D9, [X31+96]
	357 Move D8, [X31+104]
	358 Add X31, X31, 176
	359 Return 
	360 Move S9, W31
	361 Move S8, W31
	362 Move [X19+136], W20
	363 Move [X19+140], W23
	364 Call 0x1C17F20
	365 Call 0x1C17F20
	366 Call 0x1C17F20
	367 Move X21, X0
	368 Move W20, W22
	369 Move X21, X0
	370 NotImplemented "Instruction CMP not yet implemented."
	371 Move X0, X21
	372 Call 0x3EB2AD0
	373 Move X22, [X0]
	374 Call 0x3EB2AE0
	375 Move X8, 0x4E8000
	376 Move X8, [X8+848]
	377 Add X0, X31, 32
	378 Move X1, [X8]
	379 Call Enumerator<Object>.Dispose, X0
	380 Compare X22, 0
	381 JumpIfEqual {243}
	382 Move X0, X22
	383 Call 0x1C17F18
	384 Move X22, X31
	385 Move X21, X0
	386 Move X8, 0x4E8000
	387 Move X8, [X8+848]
	388 Move X1, [X8]
	389 Add X0, X31, 32
	390 Call Enumerator<Object>.Dispose, X0
	391 Compare X22, 0
	392 JumpIfEqual {419}
	393 Move X0, X22
	394 Call 0x1C17F18
	395 Move X21, X0
	396 NotImplemented "Instruction CMP not yet implemented."
	397 Move X0, X21
	398 Call 0x3EB2AD0
	399 Move X20, [X0]
	400 Call 0x3EB2AE0
	401 Move X8, 0x4E8000
	402 Move X8, [X8+848]
	403 Add X0, X31, 64
	404 Move X1, [X8]
	405 Call Enumerator<Object>.Dispose, X0
	406 Compare X20, 0
	407 JumpIfEqual {132}
	408 Move X0, X20
	409 Call 0x1C17F18
	410 Move X20, X31
	411 Move X21, X0
	412 Move X8, 0x4E8000
	413 Move X8, [X8+848]
	414 Move X1, [X8]
	415 Add X0, X31, 64
	416 Call Enumerator<Object>.Dispose, X0
	417 Compare X20, 0
	418 JumpIfNotEqual {421}
	419 Move X0, X21
	420 Call 0x1D2D690
	421 Move X0, X20
	422 Call 0x1C17F18
	423 Call 0x1991590

Method: System.Void SetVertical(System.Single y, System.Single height)

Disassembly:
	0x03C79D1C BL 0x3C74660
	0x03C79D20 CBZ X0, 0x3C79DBC
	0x03C79D24 MOV X1, X31
	0x03C79D28 BL 0x3C0C8A8
	0x03C79D2C LDR V0, [X19 + 0x90]
	0x03C79D30 FSUB S1, S11, S10
	0x03C79D34 SCVTF S2, W0
	0x03C79D38 FSUB S1, S1, S2
	0x03C79D3C FCMP S1, S0
	0x03C79D40 STR S1, [X19 + 0xA0]
	0x03C79D44 B.PL 0x3C79D50
	0x03C79D48 MOV V1.16B, V0.16B
	0x03C79D4C STR S0, [X19 + 0xA0]
	0x03C79D50 LDR X8, [X19]
	0x03C79D54 LDR V0, [X19 + 0x20]
	0x03C79D58 LDR V10, [X19 + 0x28]
	0x03C79D5C MOV X0, X19
	0x03C79D60 LDP X9, X1, [X8 + 0x1D8]
	0x03C79D64 BLR X9
	0x03C79D68 LDR X8, [X19]
	0x03C79D6C MOV X0, X19
	0x03C79D70 LDP X9, X1, [X8 + 0x1C8]
	0x03C79D74 BLR X9
	0x03C79D78 LDR V1, [X19 + 0x98]
	0x03C79D7C STR S10, [X19 + 0x28]
	0x03C79D80 LDR V0, [X19 + 0x9C]
	0x03C79D84 LDR V11, [X19 + 0x18]
	0x03C79D88 MOV X0, X19
	0x03C79D8C MOV X1, X31
	0x03C79D90 STP S1, S0, [X19 + 0x18]
	0x03C79D94 MOV V0.16B, V9.16B
	0x03C79D98 BL 0x3C78D1C
	0x03C79D9C LDR V10, [X19 + 0x98]
	0x03C79DA0 STR D11, [X19 + 0x18]
	0x03C79DA4 STR S8, [X19 + 0x2C]
	0x03C79DA8 STR S10, [X19 + 0xA4]
	0x03C79DAC LDP X30, X19, [X31 + 0x20]
	0x03C79DB0 LDP D9, D8, [X31 + 0x10]
	0x03C79DB4 LDP D11, D10, [X31], #0x30
	0x03C79DB8 RET
	0x03C79DBC BL 0x1C16F20
	0x03C79DC0 STR X30, [X31 - 0x20]!
	0x03C79DC4 STP X20, X19, [X31 + 0x10]
	0x03C79DC8 MOV X1, X31
	0x03C79DCC MOV X19, X0
	0x03C79DD0 BL 0x33BDD8C
	0x03C79DD4 ADRP X20, 0x76D000
	0x03C79DD8 LDR X8, [X20 + 0x990]
	0x03C79DDC CBNZ X8, 0x3C79DF4
	0x03C79DE0 ADRP X0, 0xFFFFFFFFFCE96000
	0x03C79DE4 ADD X0, X0, 0x9ED
	0x03C79DE8 BL 0x1C16CB8
	0x03C79DEC MOV X8, X0
	0x03C79DF0 STR X0, [X20 + 0x990]
	0x03C79DF4 BLR X8
	0x03C79DF8 STR X0, [X19 + 0x10]
	0x03C79DFC LDP X20, X19, [X31 + 0x10]
	0x03C79E00 LDR X30, [X31], #0x20
	0x03C79E04 RET
	0x03C79E08 STP X30, X19, [X31 - 0x10]!
	0x03C79E0C ADRP X19, 0x76D000
	0x03C79E10 LDR X0, [X19 + 0x990]
	0x03C79E14 CBNZ X0, 0x3C79E28
	0x03C79E18 ADRP X0, 0xFFFFFFFFFCE96000
	0x03C79E1C ADD X0, X0, 0x9ED
	0x03C79E20 BL 0x1C16CB8
	0x03C79E24 STR X0, [X19 + 0x990]
	0x03C79E28 LDP X30, X19, [X31], #0x10
	0x03C79E2C BR X0
	0x03C79E30 STP X30, X21, [X31 - 0x20]!
	0x03C79E34 STP X20, X19, [X31 + 0x10]
	0x03C79E38 ADRP X21, 0x76D000
	0x03C79E3C ADRP X20, 0x481000
	0x03C79E40 LDRB W8, [X21 + 0x988]
	0x03C79E44 LDR X20, [X20 + 0xC10]
	0x03C79E48 MOV X19, X0
	0x03C79E4C TBNZ X8, 0x0, 0x3C79E64
	0x03C79E50 ADRP X0, 0x481000
	0x03C79E54 LDR X0, [X0 + 0xC10]
	0x03C79E58 BL 0x1C16CF4
	0x03C79E5C MOVZ W8, 0x1
	0x03C79E60 STRB W8, [X21 + 0x988]
	0x03C79E64 MOV X0, X19
	0x03C79E68 BL 0x3C79E90
	0x03C79E6C LDR X0, [X20]
	0x03C79E70 LDR W8, [X0 + 0xE0]
	0x03C79E74 CBNZ W8, 0x3C79E7C
	0x03C79E78 BL 0x1C16DFC
	0x03C79E7C MOV X0, X19
	0x03C79E80 LDP X20, X19, [X31 + 0x10]
	0x03C79E84 MOV X1, X31
	0x03C79E88 LDP X30, X21, [X31], #0x20
	0x03C79E8C B 0x33B3E9C
	0x03C79E90 STP X30, X21, [X31 - 0x20]!
	0x03C79E94 STP X20, X19, [X31 + 0x10]
	0x03C79E98 MOV X19, X0
	0x03C79E9C LDR X0, [X0 + 0x10]
	0x03C79EA0 MOV X1, X31
	0x03C79EA4 MOV X2, X31
	0x03C79EA8 BL 0x33C5D2C
	0x03C79EAC TBZ X0, 0x0, 0x3C79EE0
	0x03C79EB0 ADRP X21, 0x76D000
	0x03C79EB4 LDR X8, [X21 + 0x998]
	0x03C79EB8 LDR X20, [X19 + 0x10]
	0x03C79EBC CBNZ X8, 0x3C79ED4
	0x03C79EC0 ADRP X0, 0xFFFFFFFFFCEA8000
	0x03C79EC4 ADD X0, X0, 0x245
	0x03C79EC8 BL 0x1C16CB8
	0x03C79ECC MOV X8, X0
	0x03C79ED0 STR X0, [X21 + 0x998]
	0x03C79ED4 MOV X0, X20
	0x03C79ED8 BLR X8
	0x03C79EDC STR X31, [X19 + 0x10]
	0x03C79EE0 LDP X20, X19, [X31 + 0x10]
	0x03C79EE4 LDP X30, X21, [X31], #0x20
	0x03C79EE8 RET
	0x03C79EEC STP X30, X21, [X31 - 0x20]!
	0x03C79EF0 STP X20, X19, [X31 + 0x10]
	0x03C79EF4 MOV X19, X0
	0x03C79EF8 BL 0x3C79E90
	0x03C79EFC MOV X0, X19
	0x03C79F00 LDP X20, X19, [X31 + 0x10]
	0x03C79F04 MOV X1, X31
	0x03C79F08 LDP X30, X21, [X31], #0x20
	0x03C79F0C B 0x33CB4DC
	0x03C79F10 CMP W1, 0x1
	0x03C79F14 MOV X21, X0
	0x03C79F18 B.NE 0x3C79F48
	0x03C79F1C MOV X0, X21
	0x03C79F20 BL 0x3EB1AD0
	0x03C79F24 LDR X20, [X0]
	0x03C79F28 BL 0x3EB1AE0
	0x03C79F2C MOV X0, X19
	0x03C79F30 MOV X1, X31
	0x03C79F34 BL 0x33CB4DC
	0x03C79F38 CBNZ X20, 0x3C79F50
	0x03C79F3C LDP X20, X19, [X31 + 0x10]
	0x03C79F40 LDP X30, X21, [X31], #0x20
	0x03C79F44 RET
	0x03C79F48 MOV X20, X31
	0x03C79F4C B 0x3C79F5C
	0x03C79F50 MOV X0, X20
	0x03C79F54 BL 0x1C16F18
	0x03C79F58 MOV X21, X0
	0x03C79F5C MOV X0, X19
	0x03C79F60 MOV X1, X31
	0x03C79F64 BL 0x33CB4DC
	0x03C79F68 CBNZ X20, 0x3C79F74
	0x03C79F6C MOV X0, X21
	0x03C79F70 BL 0x1D2C690
	0x03C79F74 MOV X0, X20
	0x03C79F78 BL 0x1C16F18
	0x03C79F7C BL 0x1990590
	0x03C79F80 STR X30, [X31 - 0x20]!
	0x03C79F84 STP X20, X19, [X31 + 0x10]
	0x03C79F88 ADRP X20, 0x76D000
	0x03C79F8C LDR X1, [X20 + 0x998]
	0x03C79F90 MOV X19, X0
	0x03C79F94 CBNZ X1, 0x3C79FAC
	0x03C79F98 ADRP X0, 0xFFFFFFFFFCEA8000
	0x03C79F9C ADD X0, X0, 0x245
	0x03C79FA0 BL 0x1C16CB8
	0x03C79FA4 MOV X1, X0
	0x03C79FA8 STR X0, [X20 + 0x998]
	0x03C79FAC MOV X0, X19
	0x03C79FB0 LDP X20, X19, [X31 + 0x10]
	0x03C79FB4 LDR X30, [X31], #0x20
	0x03C79FB8 BR X1
	0x03C79FBC MOV X1, X31
	0x03C79FC0 B 0x33BDD8C
	0x03C79FC4 MOV X1, X31
	0x03C79FC8 B 0x33BDD8C
	0x03C79FCC AND W8, W3, 0x1
	0x03C79FD0 STP S0, S1, [X0]
	0x03C79FD4 STP S2, S3, [X0 + 0x8]
	0x03C79FD8 STP S4, S5, [X0 + 0x10]
	0x03C79FDC STP S6, S7, [X0 + 0x18]
	0x03C79FE0 STP X1, X2, [X0 + 0x20]
	0x03C79FE4 STR X5, [X0 + 0x30]
	0x03C79FE8 STRB W8, [X0 + 0x38]
	0x03C79FEC STR W4, [X0 + 0x3C]
	0x03C79FF0 RET
	0x03C79FF4 STP X30, X19, [X31 - 0x10]!
	0x03C79FF8 LDR X8, [X0 + 0x20]
	0x03C79FFC MOV X19, X0
	0x03C7A000 CBZ X8, 0x3C7A044
	0x03C7A004 LDR X8, [X19 + 0x28]
	0x03C7A008 CBZ X8, 0x3C7A044
	0x03C7A00C MOV X0, X19
	0x03C7A010 BL 0x3C7A074
	0x03C7A014 CMP W0, 0x7
	0x03C7A018 B.HI 0x3C7A044
	0x03C7A01C ADRP X9, 0xFFFFFFFFFCF1D000
	0x03C7A020 MOV W8, W0
	0x03C7A024 ADD X9, X9, 0xE4A
	0x03C7A028 ADR X10, 0x10
	0x03C7A02C LDRB W11, [X9, X8, LSL]
	0x03C7A030 ADD X10, X10, X11, 0x2, LSL
	0x03C7A034 BR X10
	0x03C7A038 MOV X0, X19
	0x03C7A03C LDP X30, X19, [X31], #0x10
	0x03C7A040 B 0x3C7A09C
	0x03C7A044 LDR V0, [X19 + 0x10]
	0x03C7A048 LDP X30, X19, [X31], #0x10
	0x03C7A04C RET
	0x03C7A050 MOV X0, X19
	0x03C7A054 LDP X30, X19, [X31], #0x10
	0x03C7A058 B 0x3C7A5C4
	0x03C7A05C MOV X0, X19
	0x03C7A060 LDP X30, X19, [X31], #0x10
	0x03C7A064 B 0x3C7A4A8
	0x03C7A068 MOV X0, X19
	0x03C7A06C LDP X30, X19, [X31], #0x10
	0x03C7A070 B 0x3C7A660
	0x03C7A074 STP X30, X19, [X31 - 0x10]!
	0x03C7A078 MOV X19, X0
	0x03C7A07C MOV X0, X31
	0x03C7A080 BL 0x3C63934
	0x03C7A084 CBZ X0, 0x3C7A098
	0x03C7A088 LDR W1, [X19 + 0x3C]
	0x03C7A08C MOV X2, X31
	0x03C7A090 LDP X30, X19, [X31], #0x10
	0x03C7A094 B 0x3C63424
	0x03C7A098 BL 0x1C16F20
	0x03C7A09C SUB X31, X31, 0x70
	0x03C7A0A0 STR D12, [X31 + 0x10]
	0x03C7A0A4 STP D11, D10, [X31 + 0x18]
	0x03C7A0A8 STP D9, D8, [X31 + 0x28]
	0x03C7A0AC STR X30, [X31 + 0x38]
	0x03C7A0B0 STP X24, X23, [X31 + 0x40]
	0x03C7A0B4 STP X22, X21, [X31 + 0x50]
	0x03C7A0B8 STP X20, X19, [X31 + 0x60]
	0x03C7A0BC ADRP X20, 0x76C000
	0x03C7A0C0 ADRP X23, 0x4A5000
	0x03C7A0C4 LDRB W8, [X20 + 0x9A0]
	0x03C7A0C8 LDR X23, [X23 + 0x5C8]
	0x03C7A0CC MOV X19, X0
	0x03C7A0D0 TBNZ X8, 0x0, 0x3C7A118
	0x03C7A0D4 ADRP X0, 0x47A000
	0x03C7A0D8 LDR X0, [X0 + 0x9F0]
	0x03C7A0DC BL 0x1C16CF4
	0x03C7A0E0 ADRP X0, 0x4A5000
	0x03C7A0E4 LDR X0, [X0 + 0x5C8]
	0x03C7A0E8 BL 0x1C16CF4
	0x03C7A0EC ADRP X0, 0x4A0000
	0x03C7A0F0 LDR X0, [X0 + 0x4C0]
	0x03C7A0F4 BL 0x1C16CF4
	0x03C7A0F8 ADRP X0, 0x479000
	0x03C7A0FC LDR X0, [X0 + 0x5A8]
	0x03C7A100 BL 0x1C16CF4
	0x03C7A104 ADRP X0, 0x4E5000
	0x03C7A108 LDR X0, [X0 + 0x750]
	0x03C7A10C BL 0x1C16CF4
	0x03C7A110 MOVZ W8, 0x1
	0x03C7A114 STRB W8, [X20 + 0x9A0]
	0x03C7A118 ADRP X21, 0x479000
	0x03C7A11C LDR X21, [X21 + 0x5A8]
	0x03C7A120 MOV X0, X19
	0x03C7A124 STR X31, [X31 + 0x8]
	0x03C7A128 BL 0x3C7B0C0
	0x03C7A12C MOV X0, X31
	0x03C7A130 MOV V10.16B, V0.16B
	0x03C7A134 MOV V8.16B, V1.16B
	0x03C7A138 MOV V11.16B, V2.16B
	0x03C7A13C MOV V9.16B, V3.16B
	0x03C7A140 BL 0x3C63934
	0x03C7A144 LDR X8, [X23]
	0x03C7A148 MOV X20, X0
	0x03C7A14C LDR W9, [X8 + 0xE0]
	0x03C7A150 CBNZ W9, 0x3C7A15C
	0x03C7A154 MOV X0, X8
	0x03C7A158 BL 0x1C16DFC
	0x03C7A15C MOV V0.16B, V10.16B
	0x03C7A160 MOV V1.16B, V8.16B
	0x03C7A164 MOV V2.16B, V11.16B
	0x03C7A168 MOV V3.16B, V9.16B
	0x03C7A16C MOV X0, X20
	0x03C7A170 MOV X1, X31
	0x03C7A174 BL 0x3C6B314
	0x03C7A178 MOV W20, W0
	0x03C7A17C MOV X0, X31
	0x03C7A180 BL 0x3C0B398
	0x03C7A184 LDR X0, [X21]
	0x03C7A188 LDR V12, [X19]
	0x03C7A18C LDR W8, [X0 + 0xE0]
	0x03C7A190 CBNZ W8, 0x3C7A198
	0x03C7A194 BL 0x1C16DFC
	0x03C7A198 MOV V0.16B, V12.16B
	0x03C7A19C MOV V1.16B, V10.16B
	0x03C7A1A0 MOV X0, X31
	0x03C7A1A4 BL 0x337EEBC
	0x03C7A1A8 MOV V12.16B, V0.16B
	0x03C7A1AC LDR V0, [X19]
	0x03C7A1B0 LDR V1, [X19 + 0x8]
	0x03C7A1B4 MOV X0, X31
	0x03C7A1B8 FADD S0, S0, S1
	0x03C7A1BC FADD S1, S11, S10
	0x03C7A1C0 BL 0x337EE18
	0x03C7A1C4 LDR V1, [X19 + 0x4]
	0x03C7A1C8 MOV V11.16B, V0.16B
	0x03C7A1CC MOV X0, X31
	0x03C7A1D0 MOV V0.16B, V1.16B
	0x03C7A1D4 MOV V1.16B, V8.16B
	0x03C7A1D8 BL 0x337EEBC
	0x03C7A1DC MOV V10.16B, V0.16B
	0x03C7A1E0 LDR V0, [X19 + 0x4]
	0x03C7A1E4 LDR V1, [X19 + 0xC]
	0x03C7A1E8 MOV X0, X31
	0x03C7A1EC FADD S0, S0, S1
	0x03C7A1F0 FADD S1, S9, S8
	0x03C7A1F4 BL 0x337EE18
	0x03C7A1F8 LDP S1, S2, [X19 + 0x18]
	0x03C7A1FC FCMP S1, S2
	0x03C7A200 B.EQ 0x3C7A30C
	0x03C7A204 MOV X0, X31
	0x03C7A208 FSUB S8, S11, S12
	0x03C7A20C FSUB S9, S0, S10
	0x03C7A210 BL 0x3C63934
	0x03C7A214 LDR X8, [X23]
	0x03C7A218 MOV X21, X0
	0x03C7A21C LDR W9, [X8 + 0xE0]
	0x03C7A220 CBNZ W9, 0x3C7A22C
	0x03C7A224 MOV X0, X8
	0x03C7A228 BL 0x1C16DFC
	0x03C7A22C MOV V0.16B, V12.16B
	0x03C7A230 MOV V1.16B, V10.16B
	0x03C7A234 MOV V2.16B, V8.16B
	0x03C7A238 MOV V3.16B, V9.16B
	0x03C7A23C MOV X0, X21
	0x03C7A240 MOV X1, X31
	0x03C7A244 BL 0x3C6B314
	0x03C7A248 ORR W8, W20, W0, 0x0
	0x03C7A24C TBZ X8, 0x0, 0x3C7A30C
	0x03C7A250 ADRP X22, 0x4A0000
	0x03C7A254 LDR X22, [X22 + 0x4C0]
	0x03C7A258 LDR X0, [X22]
	0x03C7A25C LDR W8, [X0 + 0xE0]
	0x03C7A260 CBNZ W8, 0x3C7A268
	0x03C7A264 BL 0x1C16DFC
	0x03C7A268 ADRP X24, 0x76C000
	0x03C7A26C LDRB W8, [X24 + 0x9D2]
	0x03C7A270 CBNZ W8, 0x3C7A288
	0x03C7A274 ADRP X0, 0x4A0000
	0x03C7A278 LDR X0, [X0 + 0x4C0]
	0x03C7A27C BL 0x1C16CF4
	0x03C7A280 MOVZ W8, 0x1
	0x03C7A284 STRB W8, [X24 + 0x9D2]
	0x03C7A288 LDR X0, [X22]
	0x03C7A28C LDR W8, [X0 + 0xE0]
	0x03C7A290 CBNZ W8, 0x3C7A29C
	0x03C7A294 BL 0x1C16DFC
	0x03C7A298 LDR X0, [X22]
	0x03C7A29C LDR X8, [X0 + 0xB8]
	0x03C7A2A0 STR W31, [X8 + 0x24]
	0x03C7A2A4 LDR X0, [X23]
	0x03C7A2A8 LDR W21, [X19 + 0x3C]
	0x03C7A2AC LDR W8, [X0 + 0xE0]
	0x03C7A2B0 CBNZ W8, 0x3C7A2B8
	0x03C7A2B4 BL 0x1C16DFC
	0x03C7A2B8 MOV W0, W21
	0x03C7A2BC MOV X1, X31
	0x03C7A2C0 BL 0x3C6AA0C
	0x03C7A2C4 MOV X0, X31
	0x03C7A2C8 BL 0x3C63934
	0x03C7A2CC CBZ X0, 0x3C7A4A4
	0x03C7A2D0 MOV X1, X31
	0x03C7A2D4 BL 0x3C66240
	0x03C7A2D8 TBZ X20, 0x0, 0x3C7A334
	0x03C7A2DC LDP S0, S1, [X19 + 0x18]
	0x03C7A2E0 LDP S2, S3, [X19 + 0x10]
	0x03C7A2E4 MOV X0, X19
	0x03C7A2E8 FCMP S0, S1
	0x03C7A2EC FCSEL S4, S0, S1, MI
	0x03C7A2F0 FCSEL S0, S0, S1, GT
	0x03C7A2F4 FSUB S0, S0, S3
	0x03C7A2F8 FCMP S0, S2
	0x03C7A2FC FCSEL S0, S0, S2, MI
	0x03C7A300 FCMP S4, S2
	0x03C7A304 FCSEL S0, S0, S4, LE
	0x03C7A308 BL 0x3C7AC0C
	0x03C7A30C LDR V0, [X19 + 0x10]
	0x03C7A310 LDP X20, X19, [X31 + 0x60]
	0x03C7A314 LDP X22, X21, [X31 + 0x50]
	0x03C7A318 LDP X24, X23, [X31 + 0x40]
	0x03C7A31C LDR X30, [X31 + 0x38]
	0x03C7A320 LDP D9, D8, [X31 + 0x28]
	0x03C7A324 LDP D11, D10, [X31 + 0x18]
	0x03C7A328 LDR V12, [X31 + 0x10]
	0x03C7A32C ADD X31, X31, 0x70
	0x03C7A330 RET
	0x03C7A334 LDR X0, [X22]
	0x03C7A338 LDR W8, [X0 + 0xE0]
	0x03C7A33C CBNZ W8, 0x3C7A344
	0x03C7A340 BL 0x1C16DFC
	0x03C7A344 MOVZ W0, 0x1
	0x03C7A348 MOV X1, X31
	0x03C7A34C BL 0x3C66A1C
	0x03C7A350 MOV X0, X19
	0x03C7A354 BL 0x3C7AC54
	0x03C7A358 TBZ X0, 0x0, 0x3C7A464
	0x03C7A35C MOV X0, X19
	0x03C7A360 BL 0x3C7ACC4
	0x03C7A364 CBZ X0, 0x3C7A4A4
	0x03C7A368 STRB W31, [X0 + 0x18]
	0x03C7A36C ADRP X8, 0x4E5000
	0x03C7A370 LDR X8, [X8 + 0x750]
	0x03C7A374 LDR X0, [X8]
	0x03C7A378 LDR W8, [X0 + 0xE0]
	0x03C7A37C CBNZ W8, 0x3C7A384
	0x03C7A380 BL 0x1C16DFC
	0x03C7A384 MOV X0, X31
	0x03C7A388 BL 0x3C3C5F8
	0x03C7A38C ADRP X8, 0x47A000
	0x03C7A390 LDR X8, [X8 + 0x9F0]
	0x03C7A394 STR X0, [X31 + 0x8]
	0x03C7A398 LDR X8, [X8]
	0x03C7A39C LDR W9, [X8 + 0xE0]
	0x03C7A3A0 CBNZ W9, 0x3C7A3AC
	0x03C7A3A4 MOV X0, X8
	0x03C7A3A8 BL 0x1C16DFC
	0x03C7A3AC ADRP X8, 0xFFFFFFFFFCE74000
	0x03C7A3B0 LDR V0, [X8 + 0x250]
	0x03C7A3B4 ADD X0, X31, 0x8
	0x03C7A3B8 MOV X1, X31
	0x03C7A3BC BL 0x335FF68
	0x03C7A3C0 LDR X8, [X22]
	0x03C7A3C4 MOV X20, X0
	0x03C7A3C8 LDR W9, [X8 + 0xE0]
	0x03C7A3CC CBNZ W9, 0x3C7A3D8
	0x03C7A3D0 MOV X0, X8
	0x03C7A3D4 BL 0x1C16DFC
	0x03C7A3D8 ADRP X21, 0x76C000
	0x03C7A3DC LDRB W8, [X21 + 0x982]
	0x03C7A3E0 CBNZ W8, 0x3C7A3F8
	0x03C7A3E4 ADRP X0, 0x4A0000
	0x03C7A3E8 LDR X0, [X0 + 0x4C0]
	0x03C7A3EC BL 0x1C16CF4
	0x03C7A3F0 MOVZ W8, 0x1
	0x03C7A3F4 STRB W8, [X21 + 0x982]
	0x03C7A3F8 LDR X0, [X22]
	0x03C7A3FC LDR W8, [X0 + 0xE0]
	0x03C7A400 CBNZ W8, 0x3C7A40C
	0x03C7A404 BL 0x1C16DFC
	0x03C7A408 LDR X0, [X22]
	0x03C7A40C LDR X8, [X0 + 0xB8]
	0x03C7A410 MOV X0, X19
	0x03C7A414 STR X20, [X8 + 0x28]
	0x03C7A418 BL 0x3C7ADC8
	0x03C7A41C LDRB W8, [X24 + 0x9D2]
	0x03C7A420 MOV W20, W0
	0x03C7A424 CBNZ W8, 0x3C7A43C
	0x03C7A428 ADRP X0, 0x4A0000
	0x03C7A42C LDR X0, [X0 + 0x4C0]
	0x03C7A430 BL 0x1C16CF4
	0x03C7A434 MOVZ W8, 0x1
	0x03C7A438 STRB W8, [X24 + 0x9D2]
	0x03C7A43C LDR X0, [X22]
	0x03C7A440 LDR W8, [X0 + 0xE0]
	0x03C7A444 CBNZ W8, 0x3C7A450
	0x03C7A448 BL 0x1C16DFC
	0x03C7A44C LDR X0, [X22]
	0x03C7A450 LDR X8, [X0 + 0xB8]
	0x03C7A454 MOV X0, X19
	0x03C7A458 STR W20, [X8 + 0x24]
	0x03C7A45C BL 0x3C7AE2C
	0x03C7A460 B 0x3C7A310
	0x03C7A464 MOV X0, X19
	0x03C7A468 BL 0x3C7AEB4
	0x03C7A46C MOV X0, X19
	0x03C7A470 MOV V8.16B, V0.16B
	0x03C7A474 BL 0x3C7AC0C
	0x03C7A478 LDP S1, S0, [X19 + 0x18]
	0x03C7A47C LDR V2, [X19 + 0x14]
	0x03C7A480 FCMP S1, S0
	0x03C7A484 FCSEL S3, S1, S0, MI
	0x03C7A488 FCSEL S0, S1, S0, GT
	0x03C7A48C FSUB S0, S0, S2
	0x03C7A490 FCMP S0, S8
	0x03C7A494 FCSEL S0, S0, S8, MI
	0x03C7A498 FCMP S3, S8
	0x03C7A49C FCSEL S0, S0, S3, LE
	0x03C7A4A0 B 0x3C7A310
	0x03C7A4A4 BL 0x1C16F20
	0x03C7A4A8 STP D9, D8, [X31 - 0x30]!
	0x03C7A4AC STP X30, X21, [X31 + 0x10]
	0x03C7A4B0 STP X20, X19, [X31 + 0x20]
	0x03C7A4B4 ADRP X20, 0x76C000
	0x03C7A4B8 ADRP X21, 0x4A5000
	0x03C7A4BC LDRB W8, [X20 + 0x9A1]
	0x03C7A4C0 LDR X21, [X21 + 0x5C8]
	0x03C7A4C4 MOV X19, X0
	0x03C7A4C8 TBNZ X8, 0x0, 0x3C7A4EC
	0x03C7A4CC ADRP X0, 0x4A5000
	0x03C7A4D0 LDR X0, [X0 + 0x5C8]
	0x03C7A4D4 BL 0x1C16CF4
	0x03C7A4D8 ADRP X0, 0x4A0000
	0x03C7A4DC LDR X0, [X0 + 0x4C0]
	0x03C7A4E0 BL 0x1C16CF4
	0x03C7A4E4 MOVZ W8, 0x1
	0x03C7A4E8 STRB W8, [X20 + 0x9A1]
	0x03C7A4EC LDR X0, [X21]
	0x03C7A4F0 LDR W8, [X0 + 0xE0]
	0x03C7A4F4 CBNZ W8, 0x3C7A4FC
	0x03C7A4F8 BL 0x1C16DFC
	0x03C7A4FC MOV X0, X31
	0x03C7A500 BL 0x3C6AB88
	0x03C7A504 LDR W8, [X19 + 0x3C]
	0x03C7A508 CMP W0, W8
	0x03C7A50C B.NE 0x3C7A5AC
	0x03C7A510 MOV X0, X19
	0x03C7A514 BL 0x3C7ACC4
	0x03C7A518 CBZ X0, 0x3C7A5C0
	0x03C7A51C LDRB W8, [X0 + 0x18]
	0x03C7A520 MOV X20, X0
	0x03C7A524 CBZ W8, 0x3C7A5AC
	0x03C7A528 ADRP X8, 0x4A0000
	0x03C7A52C LDR X8, [X8 + 0x4C0]
	0x03C7A530 LDR X0, [X8]
	0x03C7A534 LDR W8, [X0 + 0xE0]
	0x03C7A538 CBNZ W8, 0x3C7A540
	0x03C7A53C BL 0x1C16DFC
	0x03C7A540 MOVZ W0, 0x1
	0x03C7A544 MOV X1, X31
	0x03C7A548 BL 0x3C66A1C
	0x03C7A54C MOV X0, X31
	0x03C7A550 BL 0x3C63934
	0x03C7A554 CBZ X0, 0x3C7A5C0
	0x03C7A558 MOV X1, X31
	0x03C7A55C BL 0x3C66240
	0x03C7A560 MOV X0, X19

ISIL:
	001 Subtract X31, X31, 256
	002 Move [X31+128], D15
	003 Move [X31+136], D14
	004 Move [X31+144], D13
	005 Move [X31+152], D12
	006 Move [X31+160], D11
	007 Move [X31+168], D10
	008 Move [X31+176], D9
	009 Move [X31+184], D8
	010 Move [X31+192], X30
	011 Move [X31+208], X24
	012 Move [X31+216], X23
	013 Move [X31+224], X22
	014 Move [X31+232], X21
	015 Move [X31+240], X20
	016 Move [X31+248], X19
	017 Move X20, 0x76E000
	018 Move W8, [X20+2431]
	019 Move V8, V1
	020 Move V9, V0
	021 Move X19, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {49}
	026 Move X0, 0x4E8000
	027 Move X0, [X0+848]
	028 Call 0x1C17CF4
	029 Move X0, 0x4E8000
	030 Move X0, [X0+856]
	031 Call 0x1C17CF4
	032 Move X0, 0x4E8000
	033 Move X0, [X0+864]
	034 Call 0x1C17CF4
	035 Move X0, 0x4A2000
	036 Move X0, [X0+2192]
	037 Call 0x1C17CF4
	038 Move X0, 0x4E8000
	039 Move X0, [X0+872]
	040 Call 0x1C17CF4
	041 Move X0, 0x4E8000
	042 Move X0, [X0+920]
	043 Call 0x1C17CF4
	044 Move X0, 0x4E8000
	045 Move X0, [X0+928]
	046 Call 0x1C17CF4
	047 Move W8, 1
	048 Move [X20+2431], W8
	049 Move [X31+96], X31
	050 Move [X31+104], X31
	051 Move [X31+112], X31
	052 Move [X31+64], X31
	053 Move [X31+72], X31
	054 Move [X31+80], X31
	055 Move [X31+32], X31
	056 Move [X31+40], X31
	057 Move [X31+48], X31
	058 Move X8, [X19+72]
	059 Move [X19+36], S9
	060 Move [X19+44], S8
	061 Compare X8, 0
	062 JumpIfEqual {486}
	063 Move W8, [X8+24]
	064 Compare W8, 0
	065 JumpIfEqual {466}
	066 Move X0, [X19+64]
	067 Compare X0, 0
	068 JumpIfEqual {486}
	069 Move X21, 0x4A2000
	070 Move X21, [X21+2192]
	071 Call GUIStyle.get_padding, X0
	072 Move X20, X0
	073 Move X0, [X21]
	074 Move W8, [X19+81]
	075 Move W22, [X19+80]
	076 Move X21, [X19+64]
	077 Move W9, [X0+224]
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Move S0, W31
	080 NotImplemented "Instruction FCSEL not yet implemented."
	081 Compare W9, 0
	082 JumpIfNotEqual {84}
	083 Call 0x1C17DFC
	084 Call GUIStyle.get_none
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Compare W22, 0
	087 Invalid "Jump target not found in method."
	088 Compare X20, 0
	089 JumpIfEqual {486}
	090 Move X0, X20
	091 Move X1, X31
	092 Call RectOffset.get_top, X0
	093 Move W21, W0
	094 Move X0, X20
	095 Move X1, X31
	096 Call RectOffset.get_bottom, X0
	097 Move X8, [X19+72]
	098 Compare X8, 0
	099 JumpIfEqual {486}
	100 Move W9, [X8+24]
	101 NotImplemented "Instruction SCVTF not yet implemented."
	102 NotImplemented "Instruction SCVTF not yet implemented."
	103 Compare W9, 0
	104 JumpIfEqual {137}
	105 Move X20, 0x4E8000
	106 Move X20, [X20+928]
	107 Move X0, X8
	108 Move W1, W31
	109 Move X2, [X20]
	110 Call List`1<Object>.get_Item, X0, X1
	111 Compare X0, 0
	112 JumpIfEqual {486}
	113 Move X8, [X0]
	114 Move X9, [X8+408]
	115 Move X1, [X8+416]
	116 NotImplemented "Instruction BLR not yet implemented."
	117 Move X8, [X19+72]
	118 NotImplemented "Instruction SCVTF not yet implemented."
	119 NotImplemented "Instruction FCMP not yet implemented."
	120 NotImplemented "Instruction FCSEL not yet implemented."
	121 Compare X8, 0
	122 JumpIfEqual {486}
	123 Move W9, [X8+24]
	124 Move X2, [X20]
	125 Move X0, X8
	126 Subtract W1, W9, 1
	127 Call List`1<Object>.get_Item, X0, X1
	128 Compare X0, 0
	129 JumpIfEqual {486}
	130 Move X8, [X0]
	131 Move X9, [X8+424]
	132 Move X1, [X8+432]
	133 NotImplemented "Instruction BLR not yet implemented."
	134 NotImplemented "Instruction SCVTF not yet implemented."
	135 NotImplemented "Instruction FCMP not yet implemented."
	136 NotImplemented "Instruction FCSEL not yet implemented."
	137 Add S0, S11, S10
	138 Add S9, S9, S10
	139 Subtract S8, S8, S0
	140 Move X0, [X19+72]
	141 Compare X0, 0
	142 JumpIfEqual {486}
	143 Move W8, [X0+24]
	144 Move V1, [X19+84]
	145 Move S2, [X19+120]
	146 Move S0, [X19+124]
	147 Move S10, W31
	148 Subtract W8, W8, 1
	149 NotImplemented "Instruction SCVTF not yet implemented."
	150 Multiply S1, S1, S3
	151 NotImplemented "Instruction FCMP not yet implemented."
	152 Subtract S1, S8, S1
	153 Move S8, W31
	154 Subtract S3, S1, S2
	155 Subtract S2, S0, S2
	156 NotImplemented "Instruction FDIV not yet implemented."
	157 NotImplemented "Instruction FCMP not yet implemented."
	158 Move S8, W31
	159 Move S3, 1
	160 NotImplemented "Instruction FMIN not yet implemented."
	161 NotImplemented "Instruction FCMP not yet implemented."
	162 Move W8, [X19+104]
	163 NotImplemented "Instruction CMP not yet implemented."
	164 Subtract S0, S1, S0
	165 NotImplemented "Instruction SCVTF not yet implemented."
	166 NotImplemented "Instruction FDIV not yet implemented."
	167 Move X8, 0x4E8000
	168 Move X8, [X8+872]
	169 Move X1, [X8]
	170 Add X8, X31, 8
	171 Call List`1<Object>.GetEnumerator, X0
	172 NotImplemented "Instruction LDUR not yet implemented."
	173 Move X8, [X31+24]
	174 Move X22, 0x4E8000
	175 Move X22, [X22+856]
	176 Move S1, W31
	177 Move W20, W31
	178 Move W23, 1
	179 Move D14, 0.5
	180 NotImplemented "Instruction FMAX not yet implemented."
	181 Move [X31+6], V0
	182 Move [X31+112], X8
	183 Move X1, [X22]
	184 Add X0, X31, 96
	185 Call Enumerator<Object>.MoveNext, X0
	186 Move TEMP, X0
	187 And TEMP, TEMP, 1
	188 Compare TEMP, 1
	189 JumpIfNotEqual {276}
	190 Move X21, [X31+112]
	191 Compare X21, 0
	192 JumpIfEqual {483}
	193 Move S12, [X21+24]
	194 Move S11, [X21+28]
	195 Move W8, [X21+56]
	196 Move V15, [X21+52]
	197 Compare W8, 0
	198 JumpIfEqual {217}
	199 Move X8, [X21]
	200 Move X9, [X8+408]
	201 Move X1, [X8+416]
	202 Move X0, X21
	203 NotImplemented "Instruction BLR not yet implemented."
	204 Move X8, [X21]
	205 And W31, W23, 1
	206 Move X9, [X8+424]
	207 Move X1, [X8+432]
	208 NotImplemented "Instruction CSEL not yet implemented."
	209 NotImplemented "Instruction CMP not yet implemented."
	210 NotImplemented "Instruction CSEL not yet implemented."
	211 Move X0, X21
	212 NotImplemented "Instruction BLR not yet implemented."
	213 NotImplemented "Instruction SCVTF not yet implemented."
	214 Move W20, W0
	215 Move W23, W31
	216 Add S9, S9, S0
	217 NotImplemented "Instruction FCVT not yet implemented."
	218 Add X0, X31, 8
	219 Call 0x3EB2C00
	220 NotImplemented "Instruction FCMP not yet implemented."
	221 Move D1, -0.5
	222 NotImplemented "Instruction FCMP not yet implemented."
	223 Move V0, [X31+8]
	224 Move S1, -1
	225 NotImplemented "Instruction FCMP not yet implemented."
	226 Move V0, [X31+8]
	227 Move S1, 1
	228 NotImplemented "Instruction FCVTZS not yet implemented."
	229 NotImplemented "Instruction INVALID not yet implemented."
	230 Add S1, S0, S1
	231 And X31, X8, 1
	232 NotImplemented "Instruction FCSEL not yet implemented."
	233 Move S0, -0.5
	234 Add S0, S9, S0
	235 NotImplemented "Instruction FRINTP not yet implemented."
	236 Move S0, 0.5
	237 Add S0, S9, S0
	238 NotImplemented "Instruction FRINTM not yet implemented."
	239 Subtract S0, S11, S12
	240 NotImplemented "Instruction SCVTF not yet implemented."
	241 Multiply S0, S13, S0
	242 Add S0, S12, S0
	243 Multiply S1, S10, S1
	244 Add S11, S0, S1
	245 NotImplemented "Instruction FCVT not yet implemented."
	246 Add X0, X31, 8
	247 Call 0x3EB2C00
	248 NotImplemented "Instruction FCMP not yet implemented."
	249 Move D1, -0.5
	250 NotImplemented "Instruction FCMP not yet implemented."
	251 Move V0, [X31+8]
	252 Move S1, -1
	253 NotImplemented "Instruction FCMP not yet implemented."
	254 Move V0, [X31+8]
	255 Move S1, 1
	256 NotImplemented "Instruction FCVTZS not yet implemented."
	257 NotImplemented "Instruction INVALID not yet implemented."
	258 Add S1, S0, S1
	259 And X31, X8, 1
	260 NotImplemented "Instruction FCSEL not yet implemented."
	261 Move S0, -0.5
	262 Add S0, S11, S0
	263 NotImplemented "Instruction FRINTP not yet implemented."
	264 Move S0, 0.5
	265 Add S0, S11, S0
	266 NotImplemented "Instruction FRINTM not yet implemented."
	267 Move X8, [X21]
	268 Move X9, [X8+488]
	269 Move X1, [X8+496]
	270 Move X0, X21
	271 Move V0, V8
	272 NotImplemented "Instruction BLR not yet implemented."
	273 Move V0, [X19+84]
	274 Add S0, S11, S0
	275 Add S9, S9, S0
	276 Move X8, 0x4E7000
	277 Move X8, [X8+848]
	278 Add X0, X31, 96
	279 Move X0, [X19+72]
	280 Compare X0, 0
	281 JumpIfEqual {486}
	282 Move X8, 0x4E7000
	283 Move X8, [X8+872]
	284 Move X1, [X8]
	285 Add X8, X31, 8
	286 Call List`1<Object>.GetEnumerator, X0
	287 NotImplemented "Instruction LDUR not yet implemented."
	288 Move X8, [X31+24]
	289 Move X22, 0x4E7000
	290 Move [X31+4], V0
	291 Move [X31+80], X8
	292 Move X22, [X22+856]
	293 Move X1, [X22]
	294 Add X0, X31, 64
	295 Call Enumerator<Object>.MoveNext, X0
	296 Move TEMP, X0
	297 And TEMP, TEMP, 1
	298 Compare TEMP, 1
	299 JumpIfNotEqual {351}
	300 Move X19, [X31+80]
	301 Compare X19, 0
	302 JumpIfEqual {484}
	303 Move X8, [X19]
	304 Move X9, [X8+408]
	305 Move X1, [X8+416]
	306 Move X0, X19
	307 NotImplemented "Instruction BLR not yet implemented."
	308 Compare X20, 0
	309 JumpIfEqual {485}
	310 Move W21, W0
	311 Move X0, X20
	312 Move X1, X31
	313 Call RectOffset.get_top, X0
	314 Move X8, [X19]
	315 NotImplemented "Instruction CMP not yet implemented."
	316 NotImplemented "Instruction CSEL not yet implemented."
	317 Move X9, [X8+424]
	318 Move X1, [X8+432]
	319 Move X0, X19
	320 NotImplemented "Instruction BLR not yet implemented."
	321 Move W21, W0
	322 Move X0, X20
	323 Move X1, X31
	324 Call RectOffset.get_bottom, X0
	325 NotImplemented "Instruction CMP not yet implemented."
	326 Move W8, [X19+52]
	327 NotImplemented "Instruction CSEL not yet implemented."
	328 NotImplemented "Instruction SCVTF not yet implemented."
	329 NotImplemented "Instruction SCVTF not yet implemented."
	330 Subtract S2, S8, S2
	331 Add S0, S9, S1
	332 Subtract S1, S2, S1
	333 Compare W8, 0
	334 JumpIfEqual {340}
	335 Move X8, [X19]
	336 Move X9, [X8+488]
	337 Move X1, [X8+496]
	338 Move X0, X19
	339 NotImplemented "Instruction BLR not yet implemented."
	340 Move X8, [X19]
	341 Move S3, [X19+24]
	342 Move S2, [X19+28]
	343 Move X9, [X8+488]
	344 Move X1, [X8+496]
	345 NotImplemented "Instruction FCMP not yet implemented."
	346 NotImplemented "Instruction FCSEL not yet implemented."
	347 NotImplemented "Instruction FCMP not yet implemented."
	348 NotImplemented "Instruction FCSEL not yet implemented."
	349 Move X0, X19
	350 NotImplemented "Instruction BLR not yet implemented."
	351 Move X8, 0x4E7000
	352 Move X8, [X8+848]
	353 Add X0, X31, 64
	354 Move X8, [X19]
	355 Move X0, X19
	356 Move X9, [X8+408]
	357 Move X1, [X8+416]
	358 NotImplemented "Instruction BLR not yet implemented."
	359 Move X8, [X19]
	360 Move W20, W0
	361 Move X0, X19
	362 Move X9, [X8+424]
	363 Move X1, [X8+432]
	364 NotImplemented "Instruction BLR not yet implemented."
	365 Move X8, [X19]
	366 Move W21, W0
	367 Move X0, X19
	368 Move X9, [X8+408]
	369 Move X1, [X8+416]
	370 NotImplemented "Instruction BLR not yet implemented."
	371 Move X9, [X19+72]
	372 Compare X9, 0
	373 JumpIfEqual {486}
	374 Move X8, 0x4E7000
	375 Move X8, [X8+872]
	376 NotImplemented "Instruction SCVTF not yet implemented."
	377 Subtract S9, S9, S0
	378 Move X1, [X8]
	379 Add W8, W0, W21
	380 NotImplemented "Instruction SCVTF not yet implemented."
	381 Add X8, X31, 8
	382 Move X0, X9
	383 Add S8, S0, S8
	384 Call List`1<Object>.GetEnumerator, X0
	385 NotImplemented "Instruction LDUR not yet implemented."
	386 Move X8, [X31+24]
	387 Move X22, 0x4E7000
	388 Move [X31+2], V0
	389 Move [X31+48], X8
	390 Move X22, [X22+856]
	391 Move X1, [X22]
	392 Add X0, X31, 32
	393 Call Enumerator<Object>.MoveNext, X0
	394 Move TEMP, X0
	395 And TEMP, TEMP, 1
	396 Compare TEMP, 1
	397 JumpIfNotEqual {461}
	398 Move X19, [X31+48]
	399 Compare X19, 0
	400 JumpIfEqual {487}
	401 Move X9, [X19]
	402 Move W10, [X19+52]
	403 Move X8, [X9+408]
	404 Move X1, [X9+416]
	405 Compare W10, 0
	406 JumpIfEqual {431}
	407 Move X0, X19
	408 NotImplemented "Instruction BLR not yet implemented."
	409 Move X8, [X19]
	410 Move W20, W0
	411 Move X9, [X8+424]
	412 Move X1, [X8+432]
	413 Move X0, X19
	414 NotImplemented "Instruction BLR not yet implemented."
	415 Move X8, [X19]
	416 Move W21, W0
	417 Move X9, [X8+408]
	418 Move X1, [X8+416]
	419 Move X0, X19
	420 NotImplemented "Instruction BLR not yet implemented."
	421 Move X8, [X19]
	422 Add W9, W0, W21
	423 NotImplemented "Instruction SCVTF not yet implemented."
	424 NotImplemented "Instruction SCVTF not yet implemented."
	425 Move X10, [X8+488]
	426 Move X1, [X8+496]
	427 Add S0, S9, S0
	428 Subtract S1, S8, S1
	429 Move X0, X19
	430 NotImplemented "Instruction BLR not yet implemented."
	431 Move X0, X19
	432 NotImplemented "Instruction BLR not yet implemented."
	433 Move X8, [X19]
	434 Move W20, W0
	435 Move X9, [X8+424]
	436 Move X1, [X8+432]
	437 Move X0, X19
	438 NotImplemented "Instruction BLR not yet implemented."
	439 Move X8, [X19]
	440 Move W21, W0
	441 Move X9, [X8+408]
	442 Move X1, [X8+416]
	443 Move X0, X19
	444 NotImplemented "Instruction BLR not yet implemented."
	445 Move X9, [X19]
	446 Move S0, [X19+24]
	447 Move S1, [X19+28]
	448 Add W8, W0, W21
	449 NotImplemented "Instruction SCVTF not yet implemented."
	450 Subtract S2, S8, S2
	451 Move X8, [X9+488]
	452 Move X1, [X9+496]
	453 NotImplemented "Instruction FCMP not yet implemented."
	454 NotImplemented "Instruction FCSEL not yet implemented."
	455 NotImplemented "Instruction FCMP not yet implemented."
	456 NotImplemented "Instruction FCSEL not yet implemented."
	457 NotImplemented "Instruction SCVTF not yet implemented."
	458 Add S0, S9, S0
	459 Move X0, X19
	460 NotImplemented "Instruction BLR not yet implemented."
	461 Move X8, 0x4E7000
	462 Move X8, [X8+848]
	463 Add X0, X31, 32
	464 Move X1, [X8]
	465 Call Enumerator<Object>.Dispose, X0
	466 Move X20, [X31+240]
	467 Move X19, [X31+248]
	468 Move X22, [X31+224]
	469 Move X21, [X31+232]
	470 Move X24, [X31+208]
	471 Move X23, [X31+216]
	472 Move X30, [X31+192]
	473 Move D9, [X31+176]
	474 Move D8, [X31+184]
	475 Move D11, [X31+160]
	476 Move D10, [X31+168]
	477 Move D13, [X31+144]
	478 Move D12, [X31+152]
	479 Move D15, [X31+128]
	480 Move D14, [X31+136]
	481 Add X31, X31, 256
	482 Return 
	483 Call 0x1C17F20
	484 Call 0x1C17F20
	485 Call 0x1C17F20
	486 Call 0x1C17F20
	487 Call 0x1C17F20
	488 Move X19, X0
	489 NotImplemented "Instruction CMP not yet implemented."
	490 Move X0, X19
	491 Call 0x3EB2AD0
	492 Move X20, [X0]
	493 Call 0x3EB2AE0
	494 Move X8, 0x4E7000
	495 Move X8, [X8+848]
	496 Add X0, X31, 64
	497 Move X20, X31
	498 Move X19, X0
	499 Move X8, 0x4E7000
	500 Move X8, [X8+848]
	501 Move X1, [X8]
	502 Add X0, X31, 64
	503 Call Enumerator<Object>.Dispose, X0
	504 Compare X20, 0
	505 JumpIfEqual {552}
	506 Move X0, X20
	507 Call 0x1C17F18
	508 Move X19, X0
	509 NotImplemented "Instruction CMP not yet implemented."
	510 Move X0, X19
	511 Call 0x3EB2AD0
	512 Move X20, [X0]
	513 Call 0x3EB2AE0
	514 Move X8, 0x4E7000
	515 Move X8, [X8+848]
	516 Add X0, X31, 32
	517 Move X20, X31
	518 Move X19, X0
	519 Move X8, 0x4E7000
	520 Move X8, [X8+848]
	521 Move X1, [X8]
	522 Add X0, X31, 32
	523 Call Enumerator<Object>.Dispose, X0
	524 Compare X20, 0
	525 JumpIfEqual {552}
	526 Move X0, X20
	527 Call 0x1C17F18
	528 Move X19, X0
	529 NotImplemented "Instruction CMP not yet implemented."
	530 Move X0, X19
	531 Call 0x3EB2AD0
	532 Move X20, [X0]
	533 Call 0x3EB2AE0
	534 Move X8, 0x4E7000
	535 Move X8, [X8+848]
	536 Add X0, X31, 96
	537 Move X1, [X8]
	538 Call Enumerator<Object>.Dispose, X0
	539 Compare X20, 0
	540 JumpIfEqual {466}
	541 Move X0, X20
	542 Call 0x1C17F18
	543 Move X20, X31
	544 Move X19, X0
	545 Move X8, 0x4E7000
	546 Move X8, [X8+848]
	547 Move X1, [X8]
	548 Add X0, X31, 96
	549 Call Enumerator<Object>.Dispose, X0
	550 Compare X20, 0
	551 JumpIfNotEqual {554}
	552 Move X0, X19
	553 Call 0x1D2D690
	554 Move X0, X20
	555 Call 0x1C17F18
	556 Call 0x1991590

Method: System.String ToString()

Disassembly:
	0x03C7A564 BL 0x3C7AF54
	0x03C7A568 LDP S1, S8, [X20 + 0x10]
	0x03C7A56C MOV X0, X19
	0x03C7A570 FSUB S9, S0, S1
	0x03C7A574 BL 0x3C7AFA0
	0x03C7A578 LDP S2, S1, [X19 + 0x18]
	0x03C7A57C LDR V3, [X19 + 0x14]
	0x03C7A580 FDIV S0, S9, S0
	0x03C7A584 FADD S0, S8, S0
	0x03C7A588 FCMP S2, S1
	0x03C7A58C FCSEL S4, S2, S1, MI
	0x03C7A590 FCSEL S1, S2, S1, GT
	0x03C7A594 FSUB S1, S1, S3
	0x03C7A598 FCMP S1, S0
	0x03C7A59C FCSEL S1, S1, S0, MI
	0x03C7A5A0 FCMP S4, S0
	0x03C7A5A4 FCSEL S0, S1, S4, LE
	0x03C7A5A8 B 0x3C7A5B0
	0x03C7A5AC LDR V0, [X19 + 0x10]
	0x03C7A5B0 LDP X20, X19, [X31 + 0x20]
	0x03C7A5B4 LDP X30, X21, [X31 + 0x10]
	0x03C7A5B8 LDP D9, D8, [X31], #0x30
	0x03C7A5BC RET
	0x03C7A5C0 BL 0x1C16F20
	0x03C7A5C4 STP X30, X21, [X31 - 0x20]!
	0x03C7A5C8 STP X20, X19, [X31 + 0x10]
	0x03C7A5CC ADRP X21, 0x76C000
	0x03C7A5D0 ADRP X20, 0x4A5000
	0x03C7A5D4 LDRB W8, [X21 + 0x9A2]
	0x03C7A5D8 LDR X20, [X20 + 0x5C8]
	0x03C7A5DC MOV X19, X0
	0x03C7A5E0 TBNZ X8, 0x0, 0x3C7A5F8
	0x03C7A5E4 ADRP X0, 0x4A5000
	0x03C7A5E8 LDR X0, [X0 + 0x5C8]
	0x03C7A5EC BL 0x1C16CF4
	0x03C7A5F0 MOVZ W8, 0x1
	0x03C7A5F4 STRB W8, [X21 + 0x9A2]
	0x03C7A5F8 LDR X0, [X20]
	0x03C7A5FC LDR W8, [X0 + 0xE0]
	0x03C7A600 CBNZ W8, 0x3C7A608
	0x03C7A604 BL 0x1C16DFC
	0x03C7A608 MOV X0, X31
	0x03C7A60C BL 0x3C6AB88
	0x03C7A610 LDR W8, [X19 + 0x3C]
	0x03C7A614 CMP W0, W8
	0x03C7A618 B.NE 0x3C7A64C
	0x03C7A61C MOV X0, X31
	0x03C7A620 BL 0x3C63934
	0x03C7A624 CBZ X0, 0x3C7A65C
	0x03C7A628 MOV X1, X31
	0x03C7A62C BL 0x3C66240
	0x03C7A630 LDR X0, [X20]
	0x03C7A634 LDR W8, [X0 + 0xE0]
	0x03C7A638 CBNZ W8, 0x3C7A640
	0x03C7A63C BL 0x1C16DFC
	0x03C7A640 MOV W0, W31
	0x03C7A644 MOV X1, X31
	0x03C7A648 BL 0x3C6AA0C
	0x03C7A64C LDR V0, [X19 + 0x10]
	0x03C7A650 LDP X20, X19, [X31 + 0x10]
	0x03C7A654 LDP X30, X21, [X31], #0x20
	0x03C7A658 RET
	0x03C7A65C BL 0x1C16F20
	0x03C7A660 STP D11, D10, [X31 - 0x60]!
	0x03C7A664 STP D9, D8, [X31 + 0x10]
	0x03C7A668 STR X30, [X31 + 0x20]
	0x03C7A66C STP X24, X23, [X31 + 0x30]
	0x03C7A670 STP X22, X21, [X31 + 0x40]
	0x03C7A674 STP X20, X19, [X31 + 0x50]
	0x03C7A678 ADRP X20, 0x76C000
	0x03C7A67C ADRP X22, 0x4A5000
	0x03C7A680 LDRB W8, [X20 + 0x9A3]
	0x03C7A684 LDR X22, [X22 + 0x5C8]
	0x03C7A688 MOV X19, X0
	0x03C7A68C TBNZ X8, 0x0, 0x3C7A6D4
	0x03C7A690 ADRP X0, 0x47A000
	0x03C7A694 LDR X0, [X0 + 0x9F0]
	0x03C7A698 BL 0x1C16CF4
	0x03C7A69C ADRP X0, 0x4A4000
	0x03C7A6A0 LDR X0, [X0 + 0xBD0]
	0x03C7A6A4 BL 0x1C16CF4
	0x03C7A6A8 ADRP X0, 0x4A5000
	0x03C7A6AC LDR X0, [X0 + 0x5C8]
	0x03C7A6B0 BL 0x1C16CF4
	0x03C7A6B4 ADRP X0, 0x4A0000
	0x03C7A6B8 LDR X0, [X0 + 0x4C0]
	0x03C7A6BC BL 0x1C16CF4
	0x03C7A6C0 ADRP X0, 0x4E5000
	0x03C7A6C4 LDR X0, [X0 + 0x750]
	0x03C7A6C8 BL 0x1C16CF4
	0x03C7A6CC MOVZ W8, 0x1
	0x03C7A6D0 STRB W8, [X20 + 0x9A3]
	0x03C7A6D4 STR X31, [X31 + 0x28]
	0x03C7A6D8 ADRP X23, 0x4A4000
	0x03C7A6DC LDP S8, S9, [X19]
	0x03C7A6E0 LDP S10, S11, [X19 + 0x8]
	0x03C7A6E4 LDR X23, [X23 + 0xBD0]
	0x03C7A6E8 MOV X0, X31
	0x03C7A6EC BL 0x3C63934
	0x03C7A6F0 LDR X8, [X22]
	0x03C7A6F4 MOV X20, X0
	0x03C7A6F8 LDR W9, [X8 + 0xE0]
	0x03C7A6FC CBNZ W9, 0x3C7A708
	0x03C7A700 MOV X0, X8
	0x03C7A704 BL 0x1C16DFC
	0x03C7A708 MOV V0.16B, V8.16B
	0x03C7A70C MOV V1.16B, V9.16B
	0x03C7A710 MOV V2.16B, V10.16B
	0x03C7A714 MOV V3.16B, V11.16B
	0x03C7A718 MOV X0, X20
	0x03C7A71C MOV X1, X31
	0x03C7A720 BL 0x3C6B314
	0x03C7A724 LDR X8, [X23]
	0x03C7A728 LDR X21, [X19 + 0x20]
	0x03C7A72C LDP S11, S9, [X19]
	0x03C7A730 LDP S10, S8, [X19 + 0x8]
	0x03C7A734 LDR W9, [X8 + 0xE0]
	0x03C7A738 MOV W20, W0
	0x03C7A73C CBNZ W9, 0x3C7A748
	0x03C7A740 MOV X0, X8
	0x03C7A744 BL 0x1C16DFC
	0x03C7A748 CBZ X21, 0x3C7ABC0
	0x03C7A74C LDR X8, [X23]
	0x03C7A750 LDR W2, [X19 + 0x3C]
	0x03C7A754 AND W4, W20, 0x1
	0x03C7A758 MOV X0, X21
	0x03C7A75C LDR X8, [X8 + 0xB8]
	0x03C7A760 MOV V0.16B, V11.16B
	0x03C7A764 MOV V1.16B, V9.16B
	0x03C7A768 MOV V2.16B, V10.16B
	0x03C7A76C LDR X1, [X8 + 0x18]
	0x03C7A770 MOV V3.16B, V8.16B
	0x03C7A774 MOV W3, W31
	0x03C7A778 MOV X5, X31
	0x03C7A77C BL 0x3C68EF0
	0x03C7A780 LDP S0, S2, [X19 + 0x18]
	0x03C7A784 LDR V1, [X19 + 0x10]
	0x03C7A788 FCMP S0, S2
	0x03C7A78C FCSEL S3, S0, S2, MI
	0x03C7A790 FCMP S1, S3
	0x03C7A794 B.LT 0x3C7A870
	0x03C7A798 FCMP S0, S2
	0x03C7A79C FCSEL S0, S0, S2, GT
	0x03C7A7A0 FCMP S1, S0
	0x03C7A7A4 B.HI 0x3C7A870
	0x03C7A7A8 LDR X21, [X19 + 0x30]
	0x03C7A7AC CBZ X21, 0x3C7A80C
	0x03C7A7B0 MOV X0, X19
	0x03C7A7B4 BL 0x3C7B048
	0x03C7A7B8 LDR X0, [X23]
	0x03C7A7BC MOV V8.16B, V0.16B
	0x03C7A7C0 MOV V9.16B, V1.16B
	0x03C7A7C4 MOV V10.16B, V2.16B
	0x03C7A7C8 LDR W8, [X0 + 0xE0]
	0x03C7A7CC MOV V11.16B, V3.16B
	0x03C7A7D0 CBNZ W8, 0x3C7A7D8
	0x03C7A7D4 BL 0x1C16DFC
	0x03C7A7D8 LDR X8, [X23]
	0x03C7A7DC LDR W2, [X19 + 0x3C]
	0x03C7A7E0 AND W4, W20, 0x1
	0x03C7A7E4 MOV X0, X21
	0x03C7A7E8 LDR X8, [X8 + 0xB8]
	0x03C7A7EC MOV V0.16B, V8.16B
	0x03C7A7F0 MOV V1.16B, V9.16B
	0x03C7A7F4 MOV V2.16B, V10.16B
	0x03C7A7F8 LDR X1, [X8 + 0x18]
	0x03C7A7FC MOV V3.16B, V11.16B
	0x03C7A800 MOV W3, W31
	0x03C7A804 MOV X5, X31
	0x03C7A808 BL 0x3C68EF0
	0x03C7A80C LDR X21, [X19 + 0x28]
	0x03C7A810 MOV X0, X19
	0x03C7A814 BL 0x3C7B0C0
	0x03C7A818 LDR X0, [X23]
	0x03C7A81C MOV V8.16B, V0.16B
	0x03C7A820 MOV V9.16B, V1.16B
	0x03C7A824 MOV V10.16B, V2.16B
	0x03C7A828 LDR W8, [X0 + 0xE0]
	0x03C7A82C MOV V11.16B, V3.16B
	0x03C7A830 CBNZ W8, 0x3C7A838
	0x03C7A834 BL 0x1C16DFC
	0x03C7A838 CBZ X21, 0x3C7ABC0
	0x03C7A83C LDR X8, [X23]
	0x03C7A840 LDR W2, [X19 + 0x3C]
	0x03C7A844 AND W4, W20, 0x1
	0x03C7A848 MOV X0, X21
	0x03C7A84C LDR X8, [X8 + 0xB8]
	0x03C7A850 MOV V0.16B, V8.16B
	0x03C7A854 MOV V1.16B, V9.16B
	0x03C7A858 MOV V2.16B, V10.16B
	0x03C7A85C LDR X1, [X8 + 0x18]
	0x03C7A860 MOV V3.16B, V11.16B
	0x03C7A864 MOV W3, W31
	0x03C7A868 MOV X5, X31
	0x03C7A86C BL 0x3C68EF0
	0x03C7A870 LDR X0, [X22]
	0x03C7A874 LDR W8, [X0 + 0xE0]
	0x03C7A878 CBNZ W8, 0x3C7A880
	0x03C7A87C BL 0x1C16DFC
	0x03C7A880 MOV X0, X31
	0x03C7A884 BL 0x3C6AB88
	0x03C7A888 LDR W8, [X19 + 0x3C]
	0x03C7A88C CMP W0, W8
	0x03C7A890 B.NE 0x3C7AB74
	0x03C7A894 EOR W8, W20, 0x1
	0x03C7A898 TBNZ X8, 0x0, 0x3C7AB74
	0x03C7A89C LDP S0, S1, [X19 + 0x18]
	0x03C7A8A0 FCMP S0, S1
	0x03C7A8A4 B.EQ 0x3C7AB74
	0x03C7A8A8 MOV X0, X19
	0x03C7A8AC BL 0x3C7B0C0
	0x03C7A8B0 LDRB W8, [X19 + 0x38]
	0x03C7A8B4 CBZ W8, 0x3C7A8CC
	0x03C7A8B8 LDR V8, [X19 + 0x4]
	0x03C7A8BC LDR V11, [X19 + 0xC]
	0x03C7A8C0 MOV V9.16B, V0.16B
	0x03C7A8C4 MOV V10.16B, V2.16B
	0x03C7A8C8 B 0x3C7A8DC
	0x03C7A8CC LDR V9, [X19]
	0x03C7A8D0 LDR V10, [X19 + 0x8]
	0x03C7A8D4 MOV V8.16B, V1.16B
	0x03C7A8D8 MOV V11.16B, V3.16B
	0x03C7A8DC MOV X0, X31
	0x03C7A8E0 BL 0x3C63934
	0x03C7A8E4 LDR X8, [X22]
	0x03C7A8E8 MOV X20, X0
	0x03C7A8EC LDR W9, [X8 + 0xE0]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X29
	003 Move [X31+40], X30
	004 Move [X31+48], X28
	005 Move [X31+56], X27
	006 Move [X31+64], X26
	007 Move [X31+72], X25
	008 Move [X31+80], X24
	009 Move [X31+88], X23
	010 Move [X31+96], X22
	011 Move [X31+104], X21
	012 Move [X31+112], X20
	013 Move [X31+120], X19
	014 Move X21, 0x76D000
	015 Move X19, 0x47A000
	016 Move W8, [X21+2432]
	017 Move X19, [X19+2440]
	018 Move X20, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {61}
	023 Move X0, 0x4E7000
	024 Move X0, [X0+848]
	025 Call 0x1C17CF4
	026 Move X0, 0x4E7000
	027 Move X0, [X0+856]
	028 Call 0x1C17CF4
	029 Move X0, 0x4E7000
	030 Move X0, [X0+864]
	031 Call 0x1C17CF4
	032 Move X0, 0x4E7000
	033 Move X0, [X0+840]
	034 Call 0x1C17CF4
	035 Move X0, 0x4E7000
	036 Move X0, [X0+872]
	037 Call 0x1C17CF4
	038 Move X0, 0x47A000
	039 Move X0, [X0+2760]
	040 Call 0x1C17CF4
	041 Move X0, 0x47B000
	042 Move X0, [X0+4064]
	043 Call 0x1C17CF4
	044 Move X0, 0x4E7000
	045 Move X0, [X0+1408]
	046 Call 0x1C17CF4
	047 Move X0, 0x47A000
	048 Move X0, [X0+3544]
	049 Call 0x1C17CF4
	050 Move X0, 0x485000
	051 Move X0, [X0+1752]
	052 Call 0x1C17CF4
	053 Move X0, 0x47A000
	054 Move X0, [X0+2440]
	055 Call 0x1C17CF4
	056 Move X0, 0x4E7000
	057 Move X0, [X0+1416]
	058 Call 0x1C17CF4
	059 Move W8, 1
	060 Move [X21+2432], W8
	061 Move X23, 0x4E7000
	062 Move X28, 0x47A000
	063 Move X25, 0x47A000
	064 Move X29, 0x4E7000
	065 Move X22, 0x4E7000
	066 Move X26, 0x4E7000
	067 Move X27, 0x47B000
	068 Move X23, [X23+840]
	069 Move X28, [X28+3544]
	070 Move X25, [X25+2760]
	071 Move X29, [X29+1416]
	072 Move X22, [X22+1408]
	073 Move X26, [X26+856]
	074 Move X27, [X27+4064]
	075 Move X24, [X19]
	076 Move W21, W31
	077 Move [X31+8], X31
	078 Move [X31+16], X31
	079 Move [X31+24], X31
	080 Move X19, X24
	081 Move X0, [X23]
	082 Move W8, [X0+224]
	083 Compare W8, 0
	084 JumpIfNotEqual {87}
	085 Call 0x1C17DFC
	086 Move X0, [X23]
	087 Move X8, [X0+184]
	088 Move W8, [X8+16]
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Move X1, [X28]
	091 Move X0, X19
	092 Move X2, X31
	093 Call String.Concat, X0, X1
	094 Move X19, X0
	095 Add W21, W21, 1
	096 Move X0, [X25]
	097 Move W1, 5
	098 Call 0x1C17D6C
	099 Compare X0, 0
	100 JumpIfEqual {215}
	101 Move W8, [X0+24]
	102 Move X21, X0
	103 Compare W8, 0
	104 JumpIfEqual {214}
	105 Move X0, X20
	106 Move [X21+32], X24
	107 Call GUILayoutEntry.ToString, X0
	108 Move W8, [X21+24]
	109 NotImplemented "Instruction CMP not yet implemented."
	110 NotImplemented "Instruction CMP not yet implemented."
	111 Move [X21+40], X0
	112 Move X8, [X29]
	113 Add X0, X20, 120
	114 Move X1, X31
	115 Move [X21+48], X8
	116 Call Single.ToString, X0
	117 Move W8, [X21+24]
	118 NotImplemented "Instruction CMP not yet implemented."
	119 NotImplemented "Instruction CMP not yet implemented."
	120 Move [X21+56], X0
	121 Move X8, [X22]
	122 Move X0, X21
	123 Move X1, X31
	124 Move [X21+64], X8
	125 Call String.Concat, X0
	126 Move X8, [X23]
	127 Move X22, X0
	128 Move W9, [X8+224]
	129 Compare W9, 0
	130 JumpIfNotEqual {134}
	131 Move X0, X8
	132 Call 0x1C17DFC
	133 Move X8, [X23]
	134 Move X8, [X8+184]
	135 Move W9, [X8+16]
	136 Add W9, W9, 4
	137 Move [X8+16], W9
	138 Move X0, [X20+72]
	139 Compare X0, 0
	140 JumpIfEqual {215}
	141 Move X8, 0x4E7000
	142 Move X8, [X8+872]
	143 Move X1, [X8]
	144 Add X8, X31, 8
	145 Call List`1<Object>.GetEnumerator, X0
	146 Move X21, X31
	147 Move X1, [X26]
	148 Move X20, X22
	149 Add X0, X31, 8
	150 Call Enumerator<Object>.MoveNext, X0
	151 Move TEMP, X0
	152 And TEMP, TEMP, 1
	153 Compare TEMP, 1
	154 JumpIfNotEqual {174}
	155 Move X8, [X31+24]
	156 NotImplemented "Instruction CMP not yet implemented."
	157 NotImplemented "Instruction CSEL not yet implemented."
	158 Compare X8, 0
	159 JumpIfEqual {168}
	160 Compare X21, 0
	161 JumpIfEqual {213}
	162 Move X8, [X21]
	163 Move X9, [X8+360]
	164 Move X1, [X8+368]
	165 Move X0, X21
	166 NotImplemented "Instruction BLR not yet implemented."
	167 Move X1, X0
	168 Move X1, X31
	169 Move X2, [X27]
	170 Move X0, X20
	171 Move X3, X31
	172 Call String.Concat, X0, X1, X2
	173 Move X22, X0
	174 Move X8, 0x4E7000
	175 Move X8, [X8+848]
	176 Add X0, X31, 8
	177 Move X1, [X8]
	178 Call Enumerator<Object>.Dispose, X0
	179 Move X8, 0x485000
	180 Move X8, [X8+1752]
	181 Move X0, X20
	182 Move X1, X19
	183 Move X3, X31
	184 Move X2, [X8]
	185 Call String.Concat, X0, X1, X2
	186 Move X8, [X23]
	187 Move X19, X0
	188 Move W9, [X8+224]
	189 Compare W9, 0
	190 JumpIfNotEqual {194}
	191 Move X0, X8
	192 Call 0x1C17DFC
	193 Move X8, [X23]
	194 Move X8, [X8+184]
	195 Move X0, X19
	196 Move X20, [X31+112]
	197 Move X19, [X31+120]
	198 Move X22, [X31+96]
	199 Move X21, [X31+104]
	200 Move W9, [X8+16]
	201 Move X24, [X31+80]
	202 Move X23, [X31+88]
	203 Move X26, [X31+64]
	204 Move X25, [X31+72]
	205 Move X28, [X31+48]
	206 Move X27, [X31+56]
	207 Move X29, [X31+32]
	208 Move X30, [X31+40]
	209 Subtract W9, W9, 4
	210 Move [X8+16], W9
	211 Add X31, X31, 128
	212 Return X0
	213 Call 0x1C17F20
	214 Call 0x1C17F28
	215 Call 0x1C17F20
	216 Move X21, X0
	217 NotImplemented "Instruction CMP not yet implemented."
	218 Move X0, X21
	219 Call 0x3EB2AD0
	220 Move X22, [X0]
	221 Call 0x3EB2AE0
	222 Move X8, 0x4E7000
	223 Move X8, [X8+848]
	224 Add X0, X31, 8
	225 Move X1, [X8]
	226 Call Enumerator<Object>.Dispose, X0
	227 Compare X22, 0
	228 JumpIfEqual {179}
	229 Move X0, X22
	230 Call 0x1C17F18
	231 Move X22, X31
	232 Move X21, X0
	233 Move X8, 0x4E7000
	234 Move X8, [X8+848]
	235 Move X1, [X8]
	236 Add X0, X31, 8
	237 Call Enumerator<Object>.Dispose, X0
	238 Compare X22, 0
	239 JumpIfNotEqual {242}
	240 Move X0, X21
	241 Call 0x1D2D690
	242 Move X0, X22
	243 Call 0x1C17F18
	244 Call 0x1991590

Method: System.Void .cctor()

Disassembly:
	0x03C7A8F0 CBNZ W9, 0x3C7A8FC
	0x03C7A8F4 MOV X0, X8
	0x03C7A8F8 BL 0x1C16DFC
	0x03C7A8FC MOV V0.16B, V9.16B
	0x03C7A900 MOV V1.16B, V8.16B
	0x03C7A904 MOV V2.16B, V10.16B
	0x03C7A908 MOV V3.16B, V11.16B
	0x03C7A90C MOV X0, X20
	0x03C7A910 MOV X1, X31
	0x03C7A914 BL 0x3C6B314
	0x03C7A918 ADRP X23, 0x4A0000
	0x03C7A91C LDR X23, [X23 + 0x4C0]
	0x03C7A920 MOV W20, W0
	0x03C7A924 LDR X8, [X23]
	0x03C7A928 LDR W9, [X8 + 0xE0]
	0x03C7A92C CBZ W9, 0x3C7A994
	0x03C7A930 TBZ X20, 0x0, 0x3C7A9A0
	0x03C7A934 ADRP X20, 0x76C000
	0x03C7A938 LDRB W8, [X20 + 0x9D3]
	0x03C7A93C CBNZ W8, 0x3C7A954
	0x03C7A940 ADRP X0, 0x4A0000
	0x03C7A944 LDR X0, [X0 + 0x4C0]
	0x03C7A948 BL 0x1C16CF4
	0x03C7A94C MOVZ W8, 0x1
	0x03C7A950 STRB W8, [X20 + 0x9D3]
	0x03C7A954 LDR X0, [X23]
	0x03C7A958 LDR W8, [X0 + 0xE0]
	0x03C7A95C CBNZ W8, 0x3C7A968
	0x03C7A960 BL 0x1C16DFC
	0x03C7A964 LDR X0, [X23]
	0x03C7A968 LDR X8, [X0 + 0xB8]
	0x03C7A96C LDR W8, [X8 + 0x24]
	0x03C7A970 CBZ W8, 0x3C7AB74
	0x03C7A974 LDR X0, [X22]
	0x03C7A978 LDR W8, [X0 + 0xE0]
	0x03C7A97C CBNZ W8, 0x3C7A984
	0x03C7A980 BL 0x1C16DFC
	0x03C7A984 MOV W0, W31
	0x03C7A988 MOV X1, X31
	0x03C7A98C BL 0x3C6AA0C
	0x03C7A990 B 0x3C7AB74
	0x03C7A994 MOV X0, X8
	0x03C7A998 BL 0x1C16DFC
	0x03C7A99C TBNZ X20, 0x0, 0x3C7A934
	0x03C7A9A0 MOV X0, X31
	0x03C7A9A4 BL 0x3C66C24
	0x03C7A9A8 ADRP X22, 0x4E5000
	0x03C7A9AC LDR X22, [X22 + 0x750]
	0x03C7A9B0 LDR X0, [X22]
	0x03C7A9B4 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x76D000
	006 Move X19, 0x4A1000
	007 Move W8, [X20+2433]
	008 Move X19, [X19+2192]
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {24}
	013 Move X0, 0x4E7000
	014 Move X0, [X0+840]
	015 Call 0x1C17CF4
	016 Move X0, 0x4E7000
	017 Move X0, [X0+720]
	018 Call 0x1C17CF4
	019 Move X0, 0x4A1000
	020 Move X0, [X0+2192]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X20+2433], W8
	024 Move X0, [X19]
	025 Move X20, 0x4E7000
	026 Move W8, [X0+224]
	027 Move X20, [X20+840]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X21, 0x4E7000
	032 Move X21, [X21+720]
	033 Call GUIStyle.get_none
	034 Move X8, [X20]
	035 Move X19, X0
	036 Move X0, X8
	037 Call 0x1C17F10
	038 Move X8, [X20]
	039 Move X20, X0
	040 Move W9, [X8+224]
	041 Compare W9, 0
	042 JumpIfNotEqual {45}
	043 Move X0, X8
	044 Call 0x1C17DFC
	045 Move S0, W31
	046 Move S1, 1
	047 Move S2, W31
	048 Move S3, 1
	049 Move X0, X20
	050 Move X1, X19
	051 Call GUILayoutEntry..ctor, X0, V0, V1, V2, V3, X1
	052 Move X8, [X21]
	053 Move X8, [X8+184]
	054 Move [X8], X20
	055 Move X20, [X31+16]
	056 Move X19, [X31+24]
	057 Move X30, [X31+32]
	058 Move X21, [X31+40]
	059 Return 

