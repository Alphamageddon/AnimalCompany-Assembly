Type: UnityEngine.TextSelectingUtilities

Method: System.Boolean get_hasSelection()

Disassembly:
	0x03C7C450 BL 0x1C16DFC
	0x03C7C454 MOV X0, X19
	0x03C7C458 MOV X1, X31
	0x03C7C45C BL 0x3C06048
	0x03C7C460 LDP X20, X19, [X31 + 0x30]
	0x03C7C464 LDP X30, X21, [X31 + 0x20]
	0x03C7C468 ADD X31, X31, 0x40
	0x03C7C46C RET
	0x03C7C470 LDR X0, [X19 + 0x10]
	0x03C7C474 CBZ X0, 0x3C7C50C
	0x03C7C478 LDP X20, X19, [X31 + 0x30]
	0x03C7C47C LDP X30, X21, [X31 + 0x20]
	0x03C7C480 ADD X31, X31, 0x40
	0x03C7C484 B 0x3C7D2CC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W1, [X0+52]
	005 Move X19, X0
	006 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	007 Move W1, [X19+56]
	008 Move W20, W0
	009 Move X0, X19
	010 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 NotImplemented "Instruction CSET not yet implemented."
	015 Move X30, [X31+32]
	016 Return X0

Method: System.Boolean get_revealCursor()

Disassembly:
	0x03C832C8 STRB W31, [X0 + 0x18]
	0x03C832CC STR W8, [X0 + 0x14]

ISIL:
	001 Move W0, [X0+48]
	002 Return X0

Method: System.Void set_revealCursor(System.Boolean value)

Disassembly:
	0x03C7C4D0 MOV X0, X19
	0x03C7C4D4 LDP X20, X19, [X31 + 0x30]
	0x03C7C4D8 LDP X30, X21, [X31 + 0x20]
	0x03C7C4DC ADD X31, X31, 0x40
	0x03C7C4E0 B 0x3C7D434
	0x03C7C4E4 MOV X0, X19
	0x03C7C4E8 LDP X20, X19, [X31 + 0x30]
	0x03C7C4EC LDP X30, X21, [X31 + 0x20]
	0x03C7C4F0 ADD X31, X31, 0x40
	0x03C7C4F4 B 0x3C7D4F0
	0x03C7C4F8 MOV X0, X19
	0x03C7C4FC LDP X20, X19, [X31 + 0x30]

ISIL:
	001 Move W9, [X0+48]
	002 And W8, W1, 1
	003 NotImplemented "Instruction CMP not yet implemented."
	004 Move X9, [X0+80]
	005 Move [X0+48], W8
	006 Compare X9, 0
	007 JumpIfEqual {12}
	008 Move X2, [X9+24]
	009 Move X0, [X9+64]
	010 Move X1, [X9+40]
	011 CallNoReturn X2
	012 Return 

Method: System.Int32 get_m_CharacterCount()

Disassembly:
	0x03C832D0 BL 0x3C823B4
	0x03C832D4 LDR W1, [X19 + 0x38]
	0x03C832D8 MOV W20, W0
	0x03C832DC MOV X0, X19
	0x03C832E0 BL 0x3C823B4
	0x03C832E4 LDR W1, [X19 + 0x34]
	0x03C832E8 MOV W21, W0
	0x03C832EC MOV X0, X19
	0x03C832F0 BL 0x3C823B4
	0x03C832F4 CMP W20, W21

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+40]
	003 Compare X0, 0
	004 JumpIfEqual {12}
	005 Move X1, X31
	006 Call TextHandle.get_textInfo, X0
	007 Compare X0, 0
	008 JumpIfEqual {12}
	009 Move W0, [X0+16]
	010 Move X30, [X31+16]
	011 Return X0
	012 Call 0x1C17F20

Method: System.Int32 get_characterCount()

Disassembly:
	0x03C832F8 MOV W20, W0
	0x03C832FC B.GE 0x3C83328
	0x03C83300 MOV X0, X19
	0x03C83304 MOV W1, W20
	0x03C83308 BL 0x3C83904
	0x03C8330C LDR W8, [X19 + 0x34]
	0x03C83310 CMP W8, W0
	0x03C83314 B.EQ 0x3C83398
	0x03C83318 LDR X8, [X19 + 0x40]
	0x03C8331C STR W0, [X19 + 0x34]
	0x03C83320 CBNZ X8, 0x3C83380
	0x03C83324 B 0x3C83398
	0x03C83328 LDR W1, [X19 + 0x38]
	0x03C8332C MOV X0, X19
	0x03C83330 BL 0x3C823B4
	0x03C83334 MOV W1, W0
	0x03C83338 MOV X0, X19
	0x03C8333C BL 0x3C83904
	0x03C83340 LDR W8, [X19 + 0x34]
	0x03C83344 CMP W8, W0
	0x03C83348 B.EQ 0x3C83368
	0x03C8334C LDR X8, [X19 + 0x40]
	0x03C83350 STR W0, [X19 + 0x34]
	0x03C83354 CBZ X8, 0x3C83368
	0x03C83358 LDR X9, [X8 + 0x18]
	0x03C8335C LDR X0, [X8 + 0x40]
	0x03C83360 LDR X1, [X8 + 0x28]
	0x03C83364 BLR X9
	0x03C83368 LDR W8, [X19 + 0x38]
	0x03C8336C CMP W8, W20
	0x03C83370 B.EQ 0x3C83398
	0x03C83374 LDR X8, [X19 + 0x48]
	0x03C83378 STR W20, [X19 + 0x38]
	0x03C8337C CBZ X8, 0x3C83398
	0x03C83380 LDR X2, [X8 + 0x18]
	0x03C83384 LDR X0, [X8 + 0x40]
	0x03C83388 LDR X1, [X8 + 0x28]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Call TextSelectingUtilities.get_m_CharacterCount, X0
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Move X0, [X19+40]
	008 Compare X0, 0
	009 JumpIfEqual {40}
	010 Move X1, X31
	011 Call TextHandle.get_textInfo, X0
	012 Compare X0, 0
	013 JumpIfEqual {40}
	014 Move X20, [X0+48]
	015 Move X0, X19
	016 Call TextSelectingUtilities.get_m_CharacterCount, X0
	017 Compare X20, 0
	018 JumpIfEqual {40}
	019 Move W9, [X20+24]
	020 Subtract W8, W0, 1
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move W9, 392
	023 NotImplemented "Instruction SMADDL not yet implemented."
	024 NotImplemented "Instruction LDRH not yet implemented."
	025 Move W9, 0x200B
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X0, X19
	028 Call TextSelectingUtilities.get_m_CharacterCount, X0
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Subtract W0, W0, 1
	032 Move X30, [X31+32]
	033 Return X0
	034 Move X0, X19
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X30, [X31+32]
	038 Call TextSelectingUtilities.get_m_CharacterCount, X0
	039 Return X0
	040 Call 0x1C17F20
	041 Call 0x1C17F28

Method: UnityEngine.TextCore.Text.TextElementInfo[] get_m_TextElementInfos()

Disassembly:
	0x03C8338C LDP X20, X19, [X31 + 0x10]
	0x03C83390 LDP X30, X21, [X31], #0x20
	0x03C83394 BR X2
	0x03C83398 LDP X20, X19, [X31 + 0x10]
	0x03C8339C LDP X30, X21, [X31], #0x20
	0x03C833A0 RET
	0x03C833A4 STP X30, X21, [X31 - 0x20]!
	0x03C833A8 STP X20, X19, [X31 + 0x10]
	0x03C833AC LDR W1, [X0 + 0x34]
	0x03C833B0 MOVN W8, 0x0

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+40]
	003 Compare X0, 0
	004 JumpIfEqual {12}
	005 Move X1, X31
	006 Call TextHandle.get_textInfo, X0
	007 Compare X0, 0
	008 JumpIfEqual {12}
	009 Move X0, [X0+48]
	010 Move X30, [X31+16]
	011 Return X0
	012 Call 0x1C17F20

Method: System.Int32 get_cursorIndex()

Disassembly:
	0x03C7C51C MOV X19, X0
	0x03C7C520 BL 0x3C823B4

ISIL:
	001 Move W1, [X0+52]
	002 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	003 Return X0

Method: System.Void set_cursorIndex(System.Int32 value)

Disassembly:
	0x03C7C568 STR W1, [X19 + 0x34]
	0x03C7C56C CBZ X8, 0x3C7C5AC
	0x03C7C570 LDR X9, [X8 + 0x18]
	0x03C7C574 LDR X0, [X8 + 0x40]
	0x03C7C578 LDR X1, [X8 + 0x28]
	0x03C7C57C BLR X9
	0x03C7C580 B 0x3C7C5A8
	0x03C7C584 LDR W1, [X19 + 0x38]
	0x03C7C588 MOV X0, X19
	0x03C7C58C BL 0x3C823B4
	0x03C7C590 LDR W1, [X19 + 0x34]

ISIL:
	001 Move W8, [X0+52]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Move X8, [X0+64]
	004 Move [X0+52], W1
	005 Compare X8, 0
	006 JumpIfEqual {11}
	007 Move X2, [X8+24]
	008 Move X0, [X8+64]
	009 Move X1, [X8+40]
	010 CallNoReturn X2
	011 Return 

Method: System.Void SetCursorIndexWithoutNotify(System.Int32 index)

Disassembly:
	0x03C7EF80 MOVZ W1, 0x25
	0x03C7EF84 LDR X0, [X8]

ISIL:
	001 Move [X0+52], W1
	002 Return 

Method: System.Int32 get_selectIndex()

Disassembly:
	0x03C7C5B0 BL 0x3C823B4
	0x03C7C5B4 LDR W8, [X19 + 0x38]

ISIL:
	001 Move W1, [X0+56]
	002 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	003 Return X0

Method: System.Void set_selectIndex(System.Int32 value)

Disassembly:
	0x03C7C5FC LDR X1, [X8 + 0x28]
	0x03C7C600 BLR X9
	0x03C7C604 MOVN W8, 0x0
	0x03C7C608 STRB W31, [X19 + 0x18]
	0x03C7C60C STR W8, [X19 + 0x14]
	0x03C7C610 LDP X20, X19, [X31 + 0x10]
	0x03C7C614 LDR X30, [X31], #0x20
	0x03C7C618 RET
	0x03C7C61C STR X30, [X31 - 0x20]!
	0x03C7C620 STP X20, X19, [X31 + 0x10]
	0x03C7C624 LDR W1, [X0 + 0x38]

ISIL:
	001 Move W8, [X0+56]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Move X8, [X0+72]
	004 Move [X0+56], W1
	005 Compare X8, 0
	006 JumpIfEqual {11}
	007 Move X2, [X8+24]
	008 Move X0, [X8+64]
	009 Move X1, [X8+40]
	010 CallNoReturn X2
	011 Return 

Method: System.Void SetSelectIndexWithoutNotify(System.Int32 index)

Disassembly:
	0x03C7EF88 BL 0x3C82048
	0x03C7EF8C ADRP X8, 0x4E2000

ISIL:
	001 Move [X0+56], W1
	002 Return 

Method: System.String get_selectedText()

Disassembly:
	0x03C8340C STR W0, [X19 + 0x34]
	0x03C83410 CBNZ X8, 0x3C83470
	0x03C83414 B 0x3C83488
	0x03C83418 LDR W1, [X19 + 0x38]
	0x03C8341C MOV X0, X19
	0x03C83420 BL 0x3C823B4
	0x03C83424 MOV W1, W0
	0x03C83428 MOV X0, X19
	0x03C8342C BL 0x3C839B0
	0x03C83430 LDR W8, [X19 + 0x34]
	0x03C83434 CMP W8, W0
	0x03C83438 B.EQ 0x3C83458
	0x03C8343C LDR X8, [X19 + 0x40]
	0x03C83440 STR W0, [X19 + 0x34]
	0x03C83444 CBZ X8, 0x3C83458
	0x03C83448 LDR X9, [X8 + 0x18]
	0x03C8344C LDR X0, [X8 + 0x40]
	0x03C83450 LDR X1, [X8 + 0x28]
	0x03C83454 BLR X9
	0x03C83458 LDR W8, [X19 + 0x38]
	0x03C8345C CMP W8, W20
	0x03C83460 B.EQ 0x3C83488
	0x03C83464 LDR X8, [X19 + 0x48]
	0x03C83468 STR W20, [X19 + 0x38]
	0x03C8346C CBZ X8, 0x3C83488
	0x03C83470 LDR X2, [X8 + 0x18]
	0x03C83474 LDR X0, [X8 + 0x40]
	0x03C83478 LDR X1, [X8 + 0x28]
	0x03C8347C LDP X20, X19, [X31 + 0x10]
	0x03C83480 LDP X30, X21, [X31], #0x20
	0x03C83484 BR X2
	0x03C83488 LDP X20, X19, [X31 + 0x10]
	0x03C8348C LDP X30, X21, [X31], #0x20
	0x03C83490 RET
	0x03C83494 STR X30, [X31 - 0x30]!
	0x03C83498 STP X22, X21, [X31 + 0x10]
	0x03C8349C STP X20, X19, [X31 + 0x20]
	0x03C834A0 LDR W1, [X0 + 0x34]
	0x03C834A4 MOVN W8, 0x0
	0x03C834A8 MOV X19, X0
	0x03C834AC STRB W31, [X0 + 0x18]
	0x03C834B0 STR W8, [X0 + 0x14]
	0x03C834B4 BL 0x3C823B4
	0x03C834B8 LDR W1, [X19 + 0x38]
	0x03C834BC MOV W20, W0
	0x03C834C0 MOV X0, X19
	0x03C834C4 BL 0x3C823B4
	0x03C834C8 LDR W1, [X19 + 0x34]
	0x03C834CC MOV W21, W0
	0x03C834D0 MOV X0, X19
	0x03C834D4 BL 0x3C823B4
	0x03C834D8 MOV W22, W0
	0x03C834DC MOV X0, X19
	0x03C834E0 BL 0x3C822F8
	0x03C834E4 CMP W22, W0
	0x03C834E8 B.GE 0x3C83598
	0x03C834EC LDR W1, [X19 + 0x34]
	0x03C834F0 MOV X0, X19
	0x03C834F4 BL 0x3C823B4
	0x03C834F8 ADD W1, W0, 0x1
	0x03C834FC MOV X0, X19
	0x03C83500 BL 0x3C83A64
	0x03C83504 LDR W8, [X19 + 0x34]
	0x03C83508 CMP W8, W0
	0x03C8350C B.EQ 0x3C8352C
	0x03C83510 LDR X8, [X19 + 0x40]
	0x03C83514 STR W0, [X19 + 0x34]
	0x03C83518 CBZ X8, 0x3C8352C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x764000
	007 Move W8, [X20+2502]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x471000
	014 Move X0, [X0+2440]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X20+2502], W8
	018 Move W1, [X19+52]
	019 Move X0, X19
	020 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	021 Move W1, [X19+56]
	022 Move W20, W0
	023 Move X0, X19
	024 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X8, 0x471000
	027 Move X8, [X8+2440]
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X0, [X8]
	033 Move X30, [X31+48]
	034 Return X0
	035 Move W1, [X19+52]
	036 Move X0, X19
	037 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	038 Move W1, [X19+56]
	039 Move W21, W0
	040 Move X0, X19
	041 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	042 Move X20, [X19+40]
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move W1, [X19+52]
	045 Move X0, X19
	046 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	047 Move W1, [X19+56]
	048 Move W21, W0
	049 Move X0, X19
	050 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	051 Move W1, [X19+52]
	052 Move W1, [X19+56]
	053 Move X0, X19
	054 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	055 Move W1, [X19+52]
	056 Move W21, W0
	057 Move X0, X19
	058 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	059 Move W1, [X19+56]
	060 Move W22, W0
	061 Move X0, X19
	062 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	063 Compare X20, 0
	064 JumpIfEqual {76}
	065 Subtract W2, W22, W0
	066 Move X0, X20
	067 Move W1, W21
	068 Move X20, [X31+32]
	069 Move X19, [X31+40]
	070 Move X22, [X31+16]
	071 Move X21, [X31+24]
	072 Move X3, X31
	073 Move X30, [X31+48]
	074 Call TextHandle.Substring, X0, X1, X2
	075 Return X0
	076 Call 0x1C17F20

Method: System.Void .ctor(UnityEngine.TextCore.Text.TextHandle textHandle)

Disassembly:
	0x03C8351C LDR X9, [X8 + 0x18]
	0x03C83520 LDR X0, [X8 + 0x40]
	0x03C83524 LDR X1, [X8 + 0x28]
	0x03C83528 BLR X9
	0x03C8352C CMP W20, W21
	0x03C83530 B.GE 0x3C83598
	0x03C83534 LDR W1, [X19 + 0x34]
	0x03C83538 MOV X0, X19
	0x03C8353C BL 0x3C823B4
	0x03C83540 LDR W1, [X19 + 0x38]
	0x03C83544 MOV W20, W0
	0x03C83548 MOV X0, X19
	0x03C8354C BL 0x3C823B4
	0x03C83550 CMP W20, W0
	0x03C83554 B.LE 0x3C83598
	0x03C83558 LDR W1, [X19 + 0x38]
	0x03C8355C MOV X0, X19
	0x03C83560 BL 0x3C823B4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X1
	005 Move TEMP, 0
	006 Not TEMP
	007 Move W8, TEMP
	008 NotImplemented "Instruction MOVI not yet implemented."
	009 Move X1, X31
	010 Move X20, X0
	011 Move [X0+16], W31
	012 NotImplemented "Instruction STRH not yet implemented."
	013 Move [X0+26], W31
	014 Move [X0+20], W8
	015 Move [X0+28], D0
	016 Move [X0+52], D0
	017 Call Object..ctor, X0
	018 Move [X20+40], X19
	019 Move X20, [X31+16]
	020 Move X19, [X31+24]
	021 Move X30, [X31+32]
	022 Return 

Method: System.Boolean HandleKeyEvent(UnityEngine.Event e)

Disassembly:
	0x03C83564 LDR W8, [X19 + 0x34]
	0x03C83568 CMP W8, W0
	0x03C8356C B.EQ 0x3C83598
	0x03C83570 LDR X8, [X19 + 0x40]
	0x03C83574 STR W0, [X19 + 0x34]
	0x03C83578 CBZ X8, 0x3C83598
	0x03C8357C LDR X2, [X8 + 0x18]
	0x03C83580 LDR X0, [X8 + 0x40]
	0x03C83584 LDR X1, [X8 + 0x28]
	0x03C83588 LDP X20, X19, [X31 + 0x20]
	0x03C8358C LDP X22, X21, [X31 + 0x10]
	0x03C83590 LDR X30, [X31], #0x30
	0x03C83594 BR X2
	0x03C83598 LDP X20, X19, [X31 + 0x20]
	0x03C8359C LDP X22, X21, [X31 + 0x10]
	0x03C835A0 LDR X30, [X31], #0x30
	0x03C835A4 RET
	0x03C835A8 STR X30, [X31 - 0x30]!
	0x03C835AC STP X22, X21, [X31 + 0x10]
	0x03C835B0 STP X20, X19, [X31 + 0x20]
	0x03C835B4 LDR W1, [X0 + 0x34]
	0x03C835B8 MOVN W8, 0x0
	0x03C835BC MOV X19, X0
	0x03C835C0 STRB W31, [X0 + 0x18]
	0x03C835C4 STR W8, [X0 + 0x14]
	0x03C835C8 BL 0x3C823B4
	0x03C835CC LDR W1, [X19 + 0x38]
	0x03C835D0 MOV W20, W0
	0x03C835D4 MOV X0, X19
	0x03C835D8 BL 0x3C823B4
	0x03C835DC LDR W1, [X19 + 0x34]
	0x03C835E0 MOV W21, W0
	0x03C835E4 MOV X0, X19
	0x03C835E8 BL 0x3C823B4
	0x03C835EC CMP W0, 0x2
	0x03C835F0 B.LT 0x3C8369C
	0x03C835F4 LDR W1, [X19 + 0x34]
	0x03C835F8 LDR X22, [X19 + 0x28]
	0x03C835FC MOV X0, X19
	0x03C83600 BL 0x3C823B4
	0x03C83604 CBZ X22, 0x3C83700
	0x03C83608 SUB W2, W0, 0x2
	0x03C8360C MOVZ W1, 0xA
	0x03C83610 MOV X0, X22
	0x03C83614 MOV X3, X31
	0x03C83618 BL 0x3CCAF90
	0x03C8361C LDR W9, [X19 + 0x34]
	0x03C83620 ADD W8, W0, 0x1
	0x03C83624 CMP W9, W8
	0x03C83628 B.EQ 0x3C83648
	0x03C8362C LDR X9, [X19 + 0x40]
	0x03C83630 STR W8, [X19 + 0x34]
	0x03C83634 CBZ X9, 0x3C83648
	0x03C83638 LDR X8, [X9 + 0x18]
	0x03C8363C LDR X0, [X9 + 0x40]
	0x03C83640 LDR X1, [X9 + 0x28]
	0x03C83644 BLR X8
	0x03C83648 CMP W20, W21
	0x03C8364C B.LE 0x3C836F0
	0x03C83650 LDR W1, [X19 + 0x34]
	0x03C83654 MOV X0, X19
	0x03C83658 BL 0x3C823B4
	0x03C8365C LDR W1, [X19 + 0x38]
	0x03C83660 MOV W20, W0
	0x03C83664 MOV X0, X19
	0x03C83668 BL 0x3C823B4
	0x03C8366C CMP W20, W0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x764000
	008 Move W8, [X21+2503]
	009 Move X19, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0x4DE000
	016 Move X0, [X0+1968]
	017 Call 0x1C17CF4
	018 Move X0, 0x4DE000
	019 Move X0, [X0+1976]
	020 Call 0x1C17CF4
	021 Move X0, 0x4DE000
	022 Move X0, [X0+1984]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+2503], W8
	026 Call TextSelectingUtilities.InitKeyActions, X0
	027 Compare X19, 0
	028 JumpIfEqual {82}
	029 Move X23, 0x4DE000
	030 Move X23, [X23+1984]
	031 Move X0, X19
	032 Move X1, X31
	033 Call Event.get_modifiers, X0
	034 Move W21, W0
	035 Move X0, X19
	036 Move X1, X31
	037 Call Event.get_modifiers, X0
	038 And W1, W0, 0xFFFFFFDF
	039 Move X0, X19
	040 Move X2, X31
	041 Call Event.set_modifiers, X0, X1
	042 Move X8, [X23]
	043 Move X8, [X8+184]
	044 Move X0, [X8]
	045 Compare X0, 0
	046 JumpIfEqual {82}
	047 Move X8, 0x4DE000
	048 Move X8, [X8+1968]
	049 Move X1, X19
	050 Move X2, [X8]
	051 Call Dictionary`2<Object, Int32Enum>.ContainsKey, X0, X1
	052 Move W22, W0
	053 Move TEMP, X0
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfNotEqual {70}
	057 Move X8, [X23]
	058 Move X8, [X8+184]
	059 Move X0, [X8]
	060 Compare X0, 0
	061 JumpIfEqual {82}
	062 Move X8, 0x4DE000
	063 Move X8, [X8+1976]
	064 Move X1, X19
	065 Move X2, [X8]
	066 Call Dictionary`2<Object, Int32Enum>.get_Item, X0, X1
	067 Move W1, W0
	068 Move X0, X20
	069 Call TextSelectingUtilities.PerformOperation, X0, X1
	070 Move X0, X19
	071 Move W1, W21
	072 Move X2, X31
	073 Call Event.set_modifiers, X0, X1
	074 And W0, W22, 1
	075 Move X20, [X31+32]
	076 Move X19, [X31+40]
	077 Move X22, [X31+16]
	078 Move X21, [X31+24]
	079 Move X30, [X31+48]
	080 Move X23, [X31+56]
	081 Return X0
	082 Call 0x1C17F20

Method: System.Boolean PerformOperation(UnityEngine.TextSelectOp operation)

Disassembly:
	0x03C83A74 MOV W2, W1
	0x03C83A78 MOVZ W1, 0xA
	0x03C83A7C MOV X3, X31
	0x03C83A80 BL 0x3CCAEA8
	0x03C83A84 ADDS W31, W0, 0x1
	0x03C83A88 B.EQ 0x3C83A94
	0x03C83A8C LDP X30, X19, [X31], #0x10
	0x03C83A90 RET
	0x03C83A94 MOV X0, X19
	0x03C83A98 LDP X30, X19, [X31], #0x10
	0x03C83A9C B 0x3C822F8
	0x03C83AA0 BL 0x1C16F20
	0x03C83AA4 STP X30, X21, [X31 - 0x20]!
	0x03C83AA8 STP X20, X19, [X31 + 0x10]
	0x03C83AAC LDR W1, [X0 + 0x34]
	0x03C83AB0 MOV X19, X0
	0x03C83AB4 BL 0x3C823B4
	0x03C83AB8 LDR W1, [X19 + 0x34]
	0x03C83ABC MOV W20, W0
	0x03C83AC0 MOV X0, X19
	0x03C83AC4 BL 0x3C823B4
	0x03C83AC8 LDR W1, [X19 + 0x38]
	0x03C83ACC MOV W21, W0
	0x03C83AD0 MOV X0, X19
	0x03C83AD4 BL 0x3C823B4
	0x03C83AD8 CMP W21, W0
	0x03C83ADC B.GE 0x3C83B28
	0x03C83AE0 MOVZ W2, 0x1
	0x03C83AE4 MOV X0, X19
	0x03C83AE8 MOV W1, W20
	0x03C83AEC BL 0x3C83BB4
	0x03C83AF0 LDR W8, [X19 + 0x34]
	0x03C83AF4 CMP W8, W0
	0x03C83AF8 B.EQ 0x3C83B18
	0x03C83AFC LDR X8, [X19 + 0x40]
	0x03C83B00 STR W0, [X19 + 0x34]
	0x03C83B04 CBZ X8, 0x3C83B18
	0x03C83B08 LDR X9, [X8 + 0x18]
	0x03C83B0C LDR X0, [X8 + 0x40]
	0x03C83B10 LDR X1, [X8 + 0x28]
	0x03C83B14 BLR X9
	0x03C83B18 MOV X0, X19
	0x03C83B1C MOV W1, W20
	0x03C83B20 MOV W2, W31
	0x03C83B24 B 0x3C83B6C
	0x03C83B28 MOV X0, X19
	0x03C83B2C MOV W1, W20
	0x03C83B30 MOV W2, W31
	0x03C83B34 BL 0x3C83BB4
	0x03C83B38 LDR W8, [X19 + 0x34]
	0x03C83B3C CMP W8, W0
	0x03C83B40 B.EQ 0x3C83B60
	0x03C83B44 LDR X8, [X19 + 0x40]
	0x03C83B48 STR W0, [X19 + 0x34]
	0x03C83B4C CBZ X8, 0x3C83B60
	0x03C83B50 LDR X9, [X8 + 0x18]
	0x03C83B54 LDR X0, [X8 + 0x40]
	0x03C83B58 LDR X1, [X8 + 0x28]
	0x03C83B5C BLR X9
	0x03C83B60 MOVZ W2, 0x1
	0x03C83B64 MOV X0, X19
	0x03C83B68 MOV W1, W20
	0x03C83B6C BL 0x3C83BB4
	0x03C83B70 LDR W8, [X19 + 0x38]
	0x03C83B74 CMP W8, W0
	0x03C83B78 B.EQ 0x3C83B98
	0x03C83B7C LDR X8, [X19 + 0x48]
	0x03C83B80 STR W0, [X19 + 0x38]
	0x03C83B84 CBZ X8, 0x3C83B98
	0x03C83B88 LDR X9, [X8 + 0x18]
	0x03C83B8C LDR X0, [X8 + 0x40]
	0x03C83B90 LDR X1, [X8 + 0x28]
	0x03C83B94 BLR X9
	0x03C83B98 MOVZ W8, 0x100
	0x03C83B9C MOVN W9, 0x0
	0x03C83BA0 STRH W8, [X19 + 0x18]
	0x03C83BA4 STR W9, [X19 + 0x14]
	0x03C83BA8 LDP X20, X19, [X31 + 0x10]
	0x03C83BAC LDP X30, X21, [X31], #0x20
	0x03C83BB0 RET
	0x03C83BB4 STR X30, [X31 - 0x30]!
	0x03C83BB8 STP X22, X21, [X31 + 0x10]
	0x03C83BBC STP X20, X19, [X31 + 0x20]
	0x03C83BC0 MOV W21, W2
	0x03C83BC4 MOV W20, W1
	0x03C83BC8 MOV X19, X0
	0x03C83BCC BL 0x3C822F8
	0x03C83BD0 CBZ W0, 0x3C83C8C
	0x03C83BD4 MOV X0, X19
	0x03C83BD8 BL 0x3C822F8
	0x03C83BDC CMP W0, W20
	0x03C83BE0 B.NE 0x3C83BF4
	0x03C83BE4 MOV X0, X19
	0x03C83BE8 MOV W1, W20
	0x03C83BEC BL 0x3C7DEA8
	0x03C83BF0 MOV W20, W0
	0x03C83BF4 MOV X0, X19
	0x03C83BF8 MOV W1, W20
	0x03C83BFC BL 0x3C8432C
	0x03C83C00 CMP W0, 0x4
	0x03C83C04 B.EQ 0x3C83CD8
	0x03C83C08 MOV W22, W0
	0x03C83C0C MOV X0, X19
	0x03C83C10 CBZ W21, 0x3C83C58
	0x03C83C14 CMP W21, 0x1
	0x03C83C18 B.EQ 0x3C83C30
	0x03C83C1C MOV W1, W20
	0x03C83C20 BL 0x3C8432C
	0x03C83C24 CMP W0, W22
	0x03C83C28 B.EQ 0x3C83C0C
	0x03C83C2C B 0x3C83C94
	0x03C83C30 MOV W1, W20
	0x03C83C34 BL 0x3C7DEA8
	0x03C83C38 MOV W20, W0
	0x03C83C3C CBZ W0, 0x3C83CC4
	0x03C83C40 MOV X0, X19
	0x03C83C44 MOV W1, W20
	0x03C83C48 BL 0x3C8432C
	0x03C83C4C CMP W0, W22
	0x03C83C50 B.EQ 0x3C83C0C
	0x03C83C54 B 0x3C83C98
	0x03C83C58 MOV W1, W20
	0x03C83C5C BL 0x3C7DDC8
	0x03C83C60 MOV W20, W0

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+40], X21
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move X21, 0x764000
	007 Move W8, [X21+2504]
	008 Move W20, W1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0x471000
	015 Move X0, [X0+2600]
	016 Call 0x1C17CF4
	017 Move X0, 0x4DE000
	018 Move X0, [X0+2008]
	019 Call 0x1C17CF4
	020 Move X0, 0x4DE000
	021 Move X0, [X0+1728]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+2504], W8
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X9, -51294208
	027 Move W8, W20
	028 Add X9, X9, 3737
	029 NotImplemented "Instruction ADR not yet implemented."
	030 Move W11, [X9]
	031 Add X10, X10, X11
	032 CallNoReturn X10
	033 Move X0, X19
	034 Call TextSelectingUtilities.SelectLeft, X0
	035 Move X0, X19
	036 Call TextSelectingUtilities.SelectRight, X0
	037 Move X0, X19
	038 Call TextSelectingUtilities.SelectUp, X0
	039 Move X0, X19
	040 Call TextSelectingUtilities.SelectDown, X0
	041 Move W8, [X19+52]
	042 Compare W8, 0
	043 JumpIfEqual {111}
	044 Move X8, [X19+64]
	045 Move [X19+52], W31
	046 Compare X8, 0
	047 JumpIfEqual {111}
	048 Move X9, [X8+24]
	049 Move X0, [X8+64]
	050 Move X1, [X8+40]
	051 NotImplemented "Instruction BLR not yet implemented."
	052 Move X0, X19
	053 Call TextSelectingUtilities.SelectTextEnd, X0
	054 Move X8, 0x4DE000
	055 Move X8, [X8+2008]
	056 Move TEMP, 0
	057 Not TEMP
	058 Move X9, TEMP
	059 Add X0, X31, 8
	060 Move X1, X31
	061 Move X8, [X8]
	062 Move [X31+24], W20
	063 Move [X31+8], X8
	064 Move [X31+16], X9
	065 Call Enum.ToString, X0
	066 Move X8, 0x4DE000
	067 Move X8, [X8+1728]
	068 Move X1, X0
	069 Move X2, X31
	070 Move X8, [X8]
	071 Move X0, X8
	072 Call String.Concat, X0, X1
	073 Move X8, 0x471000
	074 Move X8, [X8+2600]
	075 Move X19, X0
	076 Move X8, [X8]
	077 Move W9, [X8+224]
	078 Compare W9, 0
	079 JumpIfNotEqual {82}
	080 Move X0, X8
	081 Call 0x1C17DFC
	082 Move X0, X19
	083 Move X1, X31
	084 Call Debug.Log, X0
	085 Move X0, X19
	086 Call TextSelectingUtilities.ExpandSelectGraphicalLineStart, X0
	087 Move X0, X19
	088 Call TextSelectingUtilities.ExpandSelectGraphicalLineEnd, X0
	089 Move X0, X19
	090 Call TextSelectingUtilities.SelectGraphicalLineStart, X0
	091 Move X0, X19
	092 Call TextSelectingUtilities.SelectGraphicalLineEnd, X0
	093 Move X0, X19
	094 Call TextSelectingUtilities.SelectWordLeft, X0
	095 Move X0, X19
	096 Call TextSelectingUtilities.SelectWordRight, X0
	097 Move X0, X19
	098 Call TextSelectingUtilities.SelectToEndOfPreviousWord, X0
	099 Move X0, X19
	100 Call TextSelectingUtilities.SelectToStartOfNextWord, X0
	101 Move X0, X19
	102 Call TextSelectingUtilities.SelectParagraphBackward, X0
	103 Move X0, X19
	104 Call TextSelectingUtilities.SelectParagraphForward, X0
	105 Move X0, X19
	106 Call TextSelectingUtilities.Copy, X0
	107 Move X0, X19
	108 Call TextSelectingUtilities.SelectAll, X0
	109 Move X0, X19
	110 Call TextSelectingUtilities.SelectNone, X0
	111 Move X20, [X31+48]
	112 Move X19, [X31+56]
	113 Move X30, [X31+32]
	114 Move X21, [X31+40]
	115 Move W0, W31
	116 Add X31, X31, 64
	117 Return X0

Method: System.Void MapKey(System.String key, UnityEngine.TextSelectOp action)

Disassembly:
	0x03C84828 MOV X0, X19
	0x03C8482C LDP X20, X19, [X31 + 0x10]
	0x03C84830 LDR X30, [X31], #0x20
	0x03C84834 BR X1
	0x03C84838 STR X30, [X31 - 0x20]!
	0x03C8483C STP X20, X19, [X31 + 0x10]
	0x03C84840 ADRP X20, 0x762000
	0x03C84844 LDR X1, [X20 + 0xAD0]
	0x03C84848 MOV X19, X0
	0x03C8484C CBNZ X1, 0x3C84864
	0x03C84850 ADRP X0, 0xFFFFFFFFFCE6D000
	0x03C84854 ADD X0, X0, 0x69A
	0x03C84858 BL 0x1C16CB8
	0x03C8485C MOV X1, X0
	0x03C84860 STR X0, [X20 + 0xAD0]
	0x03C84864 MOV X0, X19
	0x03C84868 LDP X20, X19, [X31 + 0x10]
	0x03C8486C LDR X30, [X31], #0x20
	0x03C84870 BR X1
	0x03C84874 STR X30, [X31 - 0x20]!
	0x03C84878 STP X20, X19, [X31 + 0x10]
	0x03C8487C ADRP X20, 0x762000
	0x03C84880 LDR X1, [X20 + 0xAD0]
	0x03C84884 MOV X19, X0
	0x03C84888 CBNZ X1, 0x3C848A0
	0x03C8488C ADRP X0, 0xFFFFFFFFFCE6D000
	0x03C84890 ADD X0, X0, 0x69A
	0x03C84894 BL 0x1C16CB8
	0x03C84898 MOV X1, X0
	0x03C8489C STR X0, [X20 + 0xAD0]
	0x03C848A0 MOV X0, X19
	0x03C848A4 LDP X20, X19, [X31 + 0x10]
	0x03C848A8 LDR X30, [X31], #0x20
	0x03C848AC BR X1
	0x03C848B0 STR X30, [X31 - 0x20]!
	0x03C848B4 STP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x763000
	007 Move X22, 0x4DD000
	008 Move W8, [X21+2505]
	009 Move X22, [X22+1984]
	010 Move W19, W1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x4DD000
	017 Move X0, [X0+2016]
	018 Call 0x1C17CF4
	019 Move X0, 0x4DD000
	020 Move X0, [X0+1984]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+2505], W8
	024 Move X8, [X22]
	025 Move X0, X20
	026 Move X1, X31
	027 Move X8, [X8+184]
	028 Move X21, [X8]
	029 Call Event.KeyboardEvent, X0
	030 Compare X21, 0
	031 JumpIfEqual {45}
	032 Move X8, 0x4DD000
	033 Move X8, [X8+2016]
	034 Move X1, X0
	035 Move X0, X21
	036 Move W2, W19
	037 Move X3, [X8]
	038 Move X20, [X31+32]
	039 Move X19, [X31+40]
	040 Move X22, [X31+16]
	041 Move X21, [X31+24]
	042 Move X30, [X31+48]
	043 Call Dictionary`2<Object, Int32Enum>.set_Item, X0, X1, X2
	044 Return 
	045 Call 0x1C17F20

Method: System.Void InitKeyActions()

Disassembly:
	0x03C83670 B.GE 0x3C836F0
	0x03C83674 LDR W1, [X19 + 0x38]
	0x03C83678 MOV X0, X19
	0x03C8367C BL 0x3C823B4
	0x03C83680 LDR W8, [X19 + 0x34]
	0x03C83684 CMP W8, W0
	0x03C83688 B.EQ 0x3C836F0
	0x03C8368C LDR X8, [X19 + 0x40]
	0x03C83690 STR W0, [X19 + 0x34]
	0x03C83694 CBNZ X8, 0x3C836D4
	0x03C83698 B 0x3C836F0
	0x03C8369C LDR W8, [X19 + 0x34]
	0x03C836A0 CBZ W8, 0x3C836C0
	0x03C836A4 LDR X8, [X19 + 0x40]
	0x03C836A8 STR W31, [X19 + 0x34]
	0x03C836AC CBZ X8, 0x3C836C0
	0x03C836B0 LDR X9, [X8 + 0x18]
	0x03C836B4 LDR X0, [X8 + 0x40]
	0x03C836B8 LDR X1, [X8 + 0x28]
	0x03C836BC BLR X9
	0x03C836C0 LDR W8, [X19 + 0x38]
	0x03C836C4 CBZ W8, 0x3C836F0
	0x03C836C8 LDR X8, [X19 + 0x48]
	0x03C836CC STR W31, [X19 + 0x38]
	0x03C836D0 CBZ X8, 0x3C836F0
	0x03C836D4 LDR X2, [X8 + 0x18]
	0x03C836D8 LDR X0, [X8 + 0x40]
	0x03C836DC LDR X1, [X8 + 0x28]
	0x03C836E0 LDP X20, X19, [X31 + 0x20]
	0x03C836E4 LDP X22, X21, [X31 + 0x10]
	0x03C836E8 LDR X30, [X31], #0x30
	0x03C836EC BR X2
	0x03C836F0 LDP X20, X19, [X31 + 0x20]
	0x03C836F4 LDP X22, X21, [X31 + 0x10]
	0x03C836F8 LDR X30, [X31], #0x30
	0x03C836FC RET
	0x03C83700 BL 0x1C16F20
	0x03C83704 STP X30, X19, [X31 - 0x10]!
	0x03C83708 LDR W1, [X0 + 0x34]
	0x03C8370C MOVN W8, 0x0
	0x03C83710 MOV X19, X0
	0x03C83714 STRB W31, [X0 + 0x18]
	0x03C83718 STR W8, [X0 + 0x14]
	0x03C8371C BL 0x3C823B4
	0x03C83720 MOV W1, W0
	0x03C83724 MOV X0, X19
	0x03C83728 BL 0x3C83904
	0x03C8372C LDR W8, [X19 + 0x34]
	0x03C83730 CMP W8, W0
	0x03C83734 B.EQ 0x3C83758
	0x03C83738 LDR X8, [X19 + 0x40]
	0x03C8373C STR W0, [X19 + 0x34]
	0x03C83740 CBZ X8, 0x3C83758
	0x03C83744 LDR X2, [X8 + 0x18]
	0x03C83748 LDR X0, [X8 + 0x40]
	0x03C8374C LDR X1, [X8 + 0x28]
	0x03C83750 LDP X30, X19, [X31], #0x10
	0x03C83754 BR X2
	0x03C83758 LDP X30, X19, [X31], #0x10
	0x03C8375C RET
	0x03C83760 STP X30, X19, [X31 - 0x10]!
	0x03C83764 LDR W1, [X0 + 0x34]
	0x03C83768 MOVN W8, 0x0
	0x03C8376C MOV X19, X0
	0x03C83770 STRB W31, [X0 + 0x18]
	0x03C83774 STR W8, [X0 + 0x14]
	0x03C83778 BL 0x3C823B4
	0x03C8377C MOV W1, W0
	0x03C83780 MOV X0, X19
	0x03C83784 BL 0x3C839B0
	0x03C83788 LDR W8, [X19 + 0x34]
	0x03C8378C CMP W8, W0
	0x03C83790 B.EQ 0x3C837B4
	0x03C83794 LDR X8, [X19 + 0x40]
	0x03C83798 STR W0, [X19 + 0x34]
	0x03C8379C CBZ X8, 0x3C837B4
	0x03C837A0 LDR X2, [X8 + 0x18]
	0x03C837A4 LDR X0, [X8 + 0x40]
	0x03C837A8 LDR X1, [X8 + 0x28]
	0x03C837AC LDP X30, X19, [X31], #0x10
	0x03C837B0 BR X2
	0x03C837B4 LDP X30, X19, [X31], #0x10
	0x03C837B8 RET
	0x03C837BC STP X30, X19, [X31 - 0x10]!
	0x03C837C0 LDR W8, [X0 + 0x34]
	0x03C837C4 MOV X19, X0
	0x03C837C8 CBZ W8, 0x3C837E8
	0x03C837CC LDR X8, [X19 + 0x40]
	0x03C837D0 STR W31, [X19 + 0x34]
	0x03C837D4 CBZ X8, 0x3C837E8
	0x03C837D8 LDR X9, [X8 + 0x18]
	0x03C837DC LDR X0, [X8 + 0x40]
	0x03C837E0 LDR X1, [X8 + 0x28]
	0x03C837E4 BLR X9
	0x03C837E8 LDR W8, [X19 + 0x38]
	0x03C837EC MOVN W9, 0x80000000
	0x03C837F0 CMP W8, W9
	0x03C837F4 B.EQ 0x3C83814
	0x03C837F8 LDR X8, [X19 + 0x48]
	0x03C837FC STR W9, [X19 + 0x38]
	0x03C83800 CBZ X8, 0x3C83814
	0x03C83804 LDR X9, [X8 + 0x18]
	0x03C83808 LDR X0, [X8 + 0x40]
	0x03C8380C LDR X1, [X8 + 0x28]
	0x03C83810 BLR X9
	0x03C83814 MOVN W8, 0x0
	0x03C83818 STRB W31, [X19 + 0x18]
	0x03C8381C STR W8, [X19 + 0x14]
	0x03C83820 LDP X30, X19, [X31], #0x10
	0x03C83824 RET
	0x03C83828 STR X30, [X31 - 0x30]!
	0x03C8382C STP X22, X21, [X31 + 0x10]
	0x03C83830 STP X20, X19, [X31 + 0x20]
	0x03C83834 ADRP X21, 0x763000
	0x03C83838 ADRP X22, 0x4DD000
	0x03C8383C LDRB W8, [X21 + 0x9C9]
	0x03C83840 LDR X22, [X22 + 0x7C0]
	0x03C83844 MOV W19, W1
	0x03C83848 MOV X20, X0
	0x03C8384C TBNZ X8, 0x0, 0x3C83870
	0x03C83850 ADRP X0, 0x4DD000
	0x03C83854 LDR X0, [X0 + 0x7E0]
	0x03C83858 BL 0x1C16CF4
	0x03C8385C ADRP X0, 0x4DD000
	0x03C83860 LDR X0, [X0 + 0x7C0]
	0x03C83864 BL 0x1C16CF4
	0x03C83868 MOVZ W8, 0x1
	0x03C8386C STRB W8, [X21 + 0x9C9]
	0x03C83870 LDR X8, [X22]
	0x03C83874 MOV X0, X20
	0x03C83878 MOV X1, X31
	0x03C8387C LDR X8, [X8 + 0xB8]
	0x03C83880 LDR X21, [X8]
	0x03C83884 BL 0x3C63B3C
	0x03C83888 CBZ X21, 0x3C838B4
	0x03C8388C ADRP X8, 0x4DD000
	0x03C83890 LDR X8, [X8 + 0x7E0]
	0x03C83894 MOV X1, X0
	0x03C83898 MOV X0, X21
	0x03C8389C MOV W2, W19
	0x03C838A0 LDR X3, [X8]
	0x03C838A4 LDP X20, X19, [X31 + 0x20]
	0x03C838A8 LDP X22, X21, [X31 + 0x10]
	0x03C838AC LDR X30, [X31], #0x30
	0x03C838B0 B 0x2AA2008
	0x03C838B4 BL 0x1C16F20
	0x03C838B8 STP X30, X19, [X31 - 0x10]!
	0x03C838BC MOV X19, X0
	0x03C838C0 TBZ X1, 0x0, 0x3C838CC
	0x03C838C4 MOV X0, X19
	0x03C838C8 BL 0x3C837BC
	0x03C838CC LDRB W8, [X19 + 0x30]
	0x03C838D0 CMP W8, 0x1
	0x03C838D4 B.EQ 0x3C838FC
	0x03C838D8 LDR X8, [X19 + 0x50]
	0x03C838DC MOVZ W9, 0x1
	0x03C838E0 STRB W9, [X19 + 0x30]
	0x03C838E4 CBZ X8, 0x3C838FC
	0x03C838E8 LDR X2, [X8 + 0x18]
	0x03C838EC LDR X0, [X8 + 0x40]
	0x03C838F0 LDR X1, [X8 + 0x28]
	0x03C838F4 LDP X30, X19, [X31], #0x10
	0x03C838F8 BR X2
	0x03C838FC LDP X30, X19, [X31], #0x10
	0x03C83900 RET
	0x03C83904 STR D8, [X31 - 0x30]!
	0x03C83908 STP X30, X21, [X31 + 0x10]
	0x03C8390C STP X20, X19, [X31 + 0x20]
	0x03C83910 ADRP X21, 0x763000
	0x03C83914 LDRB W8, [X21 + 0x9CE]
	0x03C83918 MOV W20, W1
	0x03C8391C MOV X19, X0
	0x03C83920 TBNZ X8, 0x0, 0x3C83938
	0x03C83924 ADRP X0, 0x49C000
	0x03C83928 LDR X0, [X0 + 0x5C8]
	0x03C8392C BL 0x1C16CF4
	0x03C83930 MOVZ W8, 0x1
	0x03C83934 STRB W8, [X21 + 0x9CE]
	0x03C83938 LDR X0, [X19 + 0x28]
	0x03C8393C CBZ X0, 0x3C839AC
	0x03C83940 ADRP X21, 0x49C000
	0x03C83944 LDR X21, [X21 + 0x5C8]
	0x03C83948 MOVZ W3, 0x1
	0x03C8394C MOV W1, W20
	0x03C83950 MOV W2, W31
	0x03C83954 MOV X4, X31
	0x03C83958 BL 0x3CC9CC0
	0x03C8395C LDR X0, [X21]
	0x03C83960 MOV V8.16B, V1.16B
	0x03C83964 LDR W8, [X0 + 0xE0]
	0x03C83968 CBNZ W8, 0x3C83970
	0x03C8396C BL 0x1C16DFC
	0x03C83970 MOV X0, X31
	0x03C83974 BL 0x3C6FDD0
	0x03C83978 LDR X0, [X19 + 0x28]
	0x03C8397C CBZ X0, 0x3C839AC
	0x03C83980 LDP X20, X19, [X31 + 0x20]
	0x03C83984 LDP X30, X21, [X31 + 0x10]
	0x03C83988 MOV V1.16B, V0.16B
	0x03C8398C FMOV S2, -1
	0x03C83990 FDIV S1, S2, S1
	0x03C83994 FMOV S0, W31
	0x03C83998 FADD S1, S8, S1
	0x03C8399C MOVZ W1, 0x1
	0x03C839A0 MOV X2, X31
	0x03C839A4 LDR V8, [X31], #0x30
	0x03C839A8 B 0x3CC9E4C
	0x03C839AC BL 0x1C16F20
	0x03C839B0 STP D9, D8, [X31 - 0x30]!
	0x03C839B4 STP X30, X21, [X31 + 0x10]
	0x03C839B8 STP X20, X19, [X31 + 0x20]
	0x03C839BC ADRP X21, 0x763000
	0x03C839C0 LDRB W8, [X21 + 0x9CF]
	0x03C839C4 MOV W20, W1
	0x03C839C8 MOV X19, X0
	0x03C839CC TBNZ X8, 0x0, 0x3C839E4
	0x03C839D0 ADRP X0, 0x49C000
	0x03C839D4 LDR X0, [X0 + 0x5C8]
	0x03C839D8 BL 0x1C16CF4
	0x03C839DC MOVZ W8, 0x1
	0x03C839E0 STRB W8, [X21 + 0x9CF]
	0x03C839E4 LDR X0, [X19 + 0x28]
	0x03C839E8 CBZ X0, 0x3C83A60
	0x03C839EC ADRP X21, 0x49C000
	0x03C839F0 LDR X21, [X21 + 0x5C8]
	0x03C839F4 MOVZ W3, 0x1
	0x03C839F8 MOV W1, W20
	0x03C839FC MOV W2, W31
	0x03C83A00 MOV X4, X31
	0x03C83A04 BL 0x3CC9CC0
	0x03C83A08 LDR X0, [X21]
	0x03C83A0C MOV V8.16B, V0.16B
	0x03C83A10 MOV V9.16B, V1.16B
	0x03C83A14 LDR W8, [X0 + 0xE0]
	0x03C83A18 CBNZ W8, 0x3C83A20
	0x03C83A1C BL 0x1C16DFC
	0x03C83A20 MOV X0, X31
	0x03C83A24 BL 0x3C6FDD0
	0x03C83A28 LDR X0, [X19 + 0x28]
	0x03C83A2C CBZ X0, 0x3C83A60
	0x03C83A30 ADRP X8, 0xFFFFFFFFFCE67000
	0x03C83A34 LDR V2, [X8 + 0x2B0]
	0x03C83A38 LDP X20, X19, [X31 + 0x20]
	0x03C83A3C LDP X30, X21, [X31 + 0x10]
	0x03C83A40 FMOV S1, -1
	0x03C83A44 FDIV S0, S1, S0
	0x03C83A48 FADD S1, S9, S0
	0x03C83A4C FADD S0, S8, S2
	0x03C83A50 MOVZ W1, 0x1
	0x03C83A54 MOV X2, X31
	0x03C83A58 LDP D9, D8, [X31], #0x30
	0x03C83A5C B 0x3CC9E4C
	0x03C83A60 BL 0x1C16F20
	0x03C83A64 STP X30, X19, [X31 - 0x10]!
	0x03C83A68 MOV X19, X0
	0x03C83A6C LDR X0, [X0 + 0x28]
	0x03C83A70 CBZ X0, 0x3C83AA0

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X19, 0x764000
	015 Move X20, 0x4DE000
	016 Move W8, [X19+2506]
	017 Move X20, [X20+1984]
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {102}
	022 Move X0, 0x4DE000
	023 Move X0, [X0+1992]
	024 Call 0x1C17CF4
	025 Move X0, 0x4DE000
	026 Move X0, [X0+2000]
	027 Call 0x1C17CF4
	028 Move X0, 0x4DE000
	029 Move X0, [X0+1984]
	030 Call 0x1C17CF4
	031 Move X0, 0x4DE000
	032 Move X0, [X0+1776]
	033 Call 0x1C17CF4
	034 Move X0, 0x4DE000
	035 Move X0, [X0+1784]
	036 Call 0x1C17CF4
	037 Move X0, 0x4DE000
	038 Move X0, [X0+1792]
	039 Call 0x1C17CF4
	040 Move X0, 0x4DE000
	041 Move X0, [X0+1800]
	042 Call 0x1C17CF4
	043 Move X0, 0x4DE000
	044 Move X0, [X0+1808]
	045 Call 0x1C17CF4
	046 Move X0, 0x4DE000
	047 Move X0, [X0+1816]
	048 Call 0x1C17CF4
	049 Move X0, 0x4DE000
	050 Move X0, [X0+1824]
	051 Call 0x1C17CF4
	052 Move X0, 0x4DE000
	053 Move X0, [X0+1576]
	054 Call 0x1C17CF4
	055 Move X0, 0x4DE000
	056 Move X0, [X0+1832]
	057 Call 0x1C17CF4
	058 Move X0, 0x4DE000
	059 Move X0, [X0+1840]
	060 Call 0x1C17CF4
	061 Move X0, 0x4DE000
	062 Move X0, [X0+1848]
	063 Call 0x1C17CF4
	064 Move X0, 0x4DE000
	065 Move X0, [X0+1856]
	066 Call 0x1C17CF4
	067 Move X0, 0x4DE000
	068 Move X0, [X0+1864]
	069 Call 0x1C17CF4
	070 Move X0, 0x4DE000
	071 Move X0, [X0+1872]
	072 Call 0x1C17CF4
	073 Move X0, 0x4DE000
	074 Move X0, [X0+1880]
	075 Call 0x1C17CF4
	076 Move X0, 0x4DE000
	077 Move X0, [X0+1888]
	078 Call 0x1C17CF4
	079 Move X0, 0x4DE000
	080 Move X0, [X0+1896]
	081 Call 0x1C17CF4
	082 Move X0, 0x4DE000
	083 Move X0, [X0+1904]
	084 Call 0x1C17CF4
	085 Move X0, 0x4DE000
	086 Move X0, [X0+1912]
	087 Call 0x1C17CF4
	088 Move X0, 0x4DE000
	089 Move X0, [X0+1920]
	090 Call 0x1C17CF4
	091 Move X0, 0x4DE000
	092 Move X0, [X0+1928]
	093 Call 0x1C17CF4
	094 Move X0, 0x4DE000
	095 Move X0, [X0+1936]
	096 Call 0x1C17CF4
	097 Move X0, 0x4DE000
	098 Move X0, [X0+1944]
	099 Call 0x1C17CF4
	100 Move W8, 1
	101 Move [X19+2506], W8
	102 Move X8, [X20]
	103 Move X8, [X8+184]
	104 Move X8, [X8]
	105 Compare X8, 0
	106 JumpIfEqual {121}
	107 Move X20, [X31+96]
	108 Move X19, [X31+104]
	109 Move X22, [X31+80]
	110 Move X21, [X31+88]
	111 Move X24, [X31+64]
	112 Move X23, [X31+72]
	113 Move X26, [X31+48]
	114 Move X25, [X31+56]
	115 Move X28, [X31+32]
	116 Move X27, [X31+40]
	117 Move X29, [X31+16]
	118 Move X30, [X31+24]
	119 Add X31, X31, 112
	120 Return 
	121 Move X8, 0x4DE000
	122 Move X8, [X8+2000]
	123 Move X0, [X8]
	124 Call 0x1C17F10
	125 Move X8, 0x4DE000
	126 Move X8, [X8+1992]
	127 Move X19, X0
	128 Move X1, [X8]
	129 Call Dictionary`2<Object, Int32Enum>..ctor, X0
	130 Move X8, [X20]
	131 Move W1, W31
	132 Move X8, [X8+184]
	133 Move [X8], X19
	134 Move X8, 0x4DE000
	135 Move X8, [X8+1824]
	136 Move X0, [X8]
	137 Call TextSelectingUtilities.MapKey, X0, X1
	138 Move X8, 0x4DE000
	139 Move X8, [X8+1888]
	140 Move W1, 1
	141 Move X0, [X8]
	142 Call TextSelectingUtilities.MapKey, X0, X1
	143 Move X8, 0x4DE000
	144 Move X8, [X8+1904]
	145 Move W1, 2
	146 Move X0, [X8]
	147 Call TextSelectingUtilities.MapKey, X0, X1
	148 Move X8, 0x4DE000
	149 Move X8, [X8+1816]
	150 Move W1, 3
	151 Move X0, [X8]
	152 Call TextSelectingUtilities.MapKey, X0, X1
	153 Move X0, X31
	154 Call SystemInfo.get_operatingSystemFamily
	155 Move X28, 0x4DE000
	156 Move X26, 0x4DE000
	157 Move X27, 0x4DE000
	158 Move X19, 0x4DE000
	159 Move X21, 0x4DE000
	160 Move X22, 0x4DE000
	161 Move X28, [X28+1808]
	162 Move X26, [X26+1928]
	163 Move X27, [X27+1880]
	164 Move X19, [X19+1848]
	165 Move X21, [X21+1840]
	166 Move X22, [X22+1936]
	167 NotImplemented "Instruction CMP not yet implemented."
	168 Move X0, [X26]
	169 Move W1, 4
	170 Move W8, 4
	171 Move [X31+8], W8
	172 Call TextSelectingUtilities.MapKey, X0, X1
	173 Move X0, [X28]
	174 Move W1, 5
	175 Move W8, 5
	176 Move [X31+12], W8
	177 Call TextSelectingUtilities.MapKey, X0, X1
	178 Move X0, [X22]
	179 Move W1, 8
	180 Move W8, 8
	181 Move [X31], W8
	182 Call TextSelectingUtilities.MapKey, X0, X1
	183 Move X0, [X21]
	184 Move W1, 9
	185 Move W8, 9
	186 Move [X31+4], W8
	187 Call TextSelectingUtilities.MapKey, X0, X1
	188 Move X0, [X19]
	189 Move W1, 16
	190 Move W25, 16
	191 Call TextSelectingUtilities.MapKey, X0, X1
	192 Move X0, [X27]
	193 Move W1, 17
	194 Move W24, 17
	195 Call TextSelectingUtilities.MapKey, X0, X1
	196 Move X8, 0x4DE000
	197 Move X8, [X8+1912]
	198 Move W1, 12
	199 Move X0, [X8]
	200 Call TextSelectingUtilities.MapKey, X0, X1
	201 Move X9, 0x4DE000
	202 Move X29, 0x4DE000
	203 Move X20, 0x4DE000
	204 Move X28, 0x4DE000
	205 Move X26, 0x4DE000
	206 Move X27, 0x4DE000
	207 Move X19, 0x4DE000
	208 Move X21, 0x4DE000
	209 Move X22, 0x4DE000
	210 Move X9, [X9+1896]
	211 Move X29, [X29+1944]
	212 Move X20, [X20+1792]
	213 Move X28, [X28+1784]
	214 Move X26, [X26+1864]
	215 Move X27, [X27+1872]
	216 Move X19, [X19+1920]
	217 Move X21, [X21+1800]
	218 Move X22, [X22+1832]
	219 Move W23, 19
	220 Move W1, 13
	221 Move X9, 0x4DE000
	222 Move X29, 0x4DE000
	223 Move W8, 19
	224 Move X9, [X9+1776]
	225 Move X29, [X29+1856]
	226 Move [X31+12], W8
	227 Move X20, 0x4DE000
	228 Move X20, [X20+1576]
	229 Move W10, 11
	230 Move W8, 10
	231 Move [X31+4], W8
	232 Move [X31+8], W10
	233 Move W8, 17
	234 Move W23, 18
	235 Move [X31], W8
	236 Move W24, 16
	237 Move W25, 15
	238 Move W1, 14
	239 Move X0, [X22]
	240 Move X22, X9
	241 Call TextSelectingUtilities.MapKey, X0, X1
	242 Move X0, [X21]
	243 Move W1, W25
	244 Call TextSelectingUtilities.MapKey, X0, X1
	245 Move X0, [X19]
	246 Move W1, W24
	247 Call TextSelectingUtilities.MapKey, X0, X1
	248 Move X0, [X27]
	249 Move W1, [X31]
	250 Call TextSelectingUtilities.MapKey, X0, X1
	251 Move X0, [X26]
	252 Move W1, [X31+4]
	253 Call TextSelectingUtilities.MapKey, X0, X1
	254 Move X0, [X28]
	255 Move W1, [X31+8]
	256 Call TextSelectingUtilities.MapKey, X0, X1
	257 Move X0, [X20]
	258 Move W1, [X31+12]
	259 Call TextSelectingUtilities.MapKey, X0, X1
	260 Move X0, [X29]
	261 Move W1, W23
	262 Call TextSelectingUtilities.MapKey, X0, X1
	263 Move X0, [X22]
	264 Move X20, [X31+96]
	265 Move X19, [X31+104]
	266 Move X22, [X31+80]
	267 Move X21, [X31+88]
	268 Move X24, [X31+64]
	269 Move X23, [X31+72]
	270 Move X26, [X31+48]
	271 Move X25, [X31+56]
	272 Move X28, [X31+32]
	273 Move X27, [X31+40]
	274 Move X29, [X31+16]
	275 Move X30, [X31+24]
	276 Move W1, 18
	277 Add X31, X31, 112
	278 Call TextSelectingUtilities.MapKey, X0, X1
	279 Return 

Method: System.Void ClearCursorPos()

Disassembly:
	0x03C7EF90 LDR X8, [X8 + 0x608]
	0x03C7EF94 MOVZ W1, 0x25
	0x03C7EF98 LDR X0, [X8]
	0x03C7EF9C BL 0x3C82048

ISIL:
	001 Move TEMP, 0
	002 Not TEMP
	003 Move W8, TEMP
	004 Move [X0+24], W31
	005 Move [X0+20], W8
	006 Return 

Method: System.Void OnFocus(System.Boolean selectAll = True)

Disassembly:
	0x03C848B8 ADRP X20, 0x762000
	0x03C848BC LDR X1, [X20 + 0xAE0]
	0x03C848C0 MOV X19, X0
	0x03C848C4 CBNZ X1, 0x3C848DC
	0x03C848C8 ADRP X0, 0xFFFFFFFFFCE81000
	0x03C848CC ADD X0, X0, 0x724
	0x03C848D0 BL 0x1C16CB8
	0x03C848D4 MOV X1, X0
	0x03C848D8 STR X0, [X20 + 0xAE0]
	0x03C848DC MOV X0, X19
	0x03C848E0 LDP X20, X19, [X31 + 0x10]
	0x03C848E4 LDR X30, [X31], #0x20
	0x03C848E8 BR X1
	0x03C848EC STR X30, [X31 - 0x20]!
	0x03C848F0 STP X20, X19, [X31 + 0x10]
	0x03C848F4 ADRP X20, 0x762000
	0x03C848F8 LDR X1, [X20 + 0xAE0]
	0x03C848FC MOV X19, X0
	0x03C84900 CBNZ X1, 0x3C84918

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move TEMP, X1
	005 And TEMP, TEMP, 1
	006 Compare TEMP, 1
	007 JumpIfNotEqual {10}
	008 Move X0, X19
	009 Call TextSelectingUtilities.SelectAll, X0
	010 Move W8, [X19+48]
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Move X8, [X19+80]
	013 Move W9, 1
	014 Move [X19+48], W9
	015 Compare X8, 0
	016 JumpIfEqual {23}
	017 Move X2, [X8+24]
	018 Move X0, [X8+64]
	019 Move X1, [X8+40]
	020 Move X30, [X31+16]
	021 Move X19, [X31+24]
	022 CallNoReturn X2
	023 Move X30, [X31+16]
	024 Move X19, [X31+24]
	025 Return 

Method: System.Void SelectAll()

Disassembly:
	0x03C847BC BR X3
	0x03C847C0 STR X30, [X31 - 0x20]!
	0x03C847C4 STP X20, X19, [X31 + 0x10]
	0x03C847C8 ADRP X20, 0x762000
	0x03C847CC LDR X1, [X20 + 0xAC0]
	0x03C847D0 MOV X19, X0
	0x03C847D4 CBNZ X1, 0x3C847EC
	0x03C847D8 ADRP X0, 0xFFFFFFFFFCE6D000
	0x03C847DC ADD X0, X0, 0x65A
	0x03C847E0 BL 0x1C16CB8
	0x03C847E4 MOV X1, X0
	0x03C847E8 STR X0, [X20 + 0xAC0]
	0x03C847EC MOV X0, X19
	0x03C847F0 LDP X20, X19, [X31 + 0x10]
	0x03C847F4 LDR X30, [X31], #0x20
	0x03C847F8 BR X1
	0x03C847FC STR X30, [X31 - 0x20]!
	0x03C84800 STP X20, X19, [X31 + 0x10]
	0x03C84804 ADRP X20, 0x762000
	0x03C84808 LDR X1, [X20 + 0xAC0]
	0x03C8480C MOV X19, X0
	0x03C84810 CBNZ X1, 0x3C84828
	0x03C84814 ADRP X0, 0xFFFFFFFFFCE6D000
	0x03C84818 ADD X0, X0, 0x65A
	0x03C8481C BL 0x1C16CB8
	0x03C84820 MOV X1, X0
	0x03C84824 STR X0, [X20 + 0xAC0]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W8, [X0+52]
	004 Move X19, X0
	005 Compare W8, 0
	006 JumpIfEqual {15}
	007 Move X8, [X19+64]
	008 Move [X19+52], W31
	009 Compare X8, 0
	010 JumpIfEqual {15}
	011 Move X9, [X8+24]
	012 Move X0, [X8+64]
	013 Move X1, [X8+40]
	014 NotImplemented "Instruction BLR not yet implemented."
	015 Move W8, [X19+56]
	016 Move TEMP, 0x80000000
	017 Not TEMP
	018 Move W9, TEMP
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move X8, [X19+72]
	021 Move [X19+56], W9
	022 Compare X8, 0
	023 JumpIfEqual {28}
	024 Move X9, [X8+24]
	025 Move X0, [X8+64]
	026 Move X1, [X8+40]
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Move TEMP, 0
	029 Not TEMP
	030 Move W8, TEMP
	031 Move [X19+24], W31
	032 Move [X19+20], W8
	033 Move X30, [X31+16]
	034 Move X19, [X31+24]
	035 Return 

Method: System.Void SelectNone()

Disassembly:
	0x03C7F1CC MOVZ W8, 0x1B
	0x03C7F1D0 STR W8, [X31 + 0x94]
	0x03C7F1D4 ADRP X8, 0x4E1000
	0x03C7F1D8 LDR X8, [X8 + 0x730]
	0x03C7F1DC STR X8, [X31 + 0xA0]
	0x03C7F1E0 MOVZ W8, 0x1A
	0x03C7F1E4 STR W8, [X31 + 0x90]
	0x03C7F1E8 ADRP X8, 0x4E1000
	0x03C7F1EC LDR X8, [X8 + 0x790]
	0x03C7F1F0 STR X8, [X31 + 0x80]
	0x03C7F1F4 ADRP X8, 0x4E1000
	0x03C7F1F8 LDR X8, [X8 + 0x710]
	0x03C7F1FC STR W9, [X31 + 0x9C]
	0x03C7F200 MOVZ W9, 0x1A
	0x03C7F204 STR W9, [X31 + 0x8C]
	0x03C7F208 MOVZ W9, 0x1B
	0x03C7F20C STR W9, [X31 + 0xA8]
	0x03C7F210 MOVZ W9, 0x17
	0x03C7F214 STR W9, [X31 + 0xC4]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W1, [X0+52]
	004 Move X19, X0
	005 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	006 Move W8, [X19+56]
	007 NotImplemented "Instruction CMP not yet implemented."
	008 Move X8, [X19+72]
	009 Move [X19+56], W0
	010 Compare X8, 0
	011 JumpIfEqual {16}
	012 Move X9, [X8+24]
	013 Move X0, [X8+64]
	014 Move X1, [X8+40]
	015 NotImplemented "Instruction BLR not yet implemented."
	016 Move TEMP, 0
	017 Not TEMP
	018 Move W8, TEMP
	019 Move [X19+24], W31
	020 Move [X19+20], W8
	021 Move X30, [X31+16]
	022 Move X19, [X31+24]
	023 Return 

Method: System.Void SelectLeft()

Disassembly:
	0x03C83C64 MOV X0, X19
	0x03C83C68 BL 0x3C822F8
	0x03C83C6C CMP W20, W0
	0x03C83C70 B.EQ 0x3C83CB0
	0x03C83C74 MOV X0, X19
	0x03C83C78 MOV W1, W20
	0x03C83C7C BL 0x3C8432C
	0x03C83C80 CMP W0, W22
	0x03C83C84 B.EQ 0x3C83C0C
	0x03C83C88 B 0x3C83CD8
	0x03C83C8C MOV W20, W31
	0x03C83C90 B 0x3C83CD8
	0x03C83C94 CBZ W21, 0x3C83CD8
	0x03C83C98 MOV X0, X19
	0x03C83C9C MOV W1, W20
	0x03C83CA0 LDP X20, X19, [X31 + 0x20]
	0x03C83CA4 LDP X22, X21, [X31 + 0x10]
	0x03C83CA8 LDR X30, [X31], #0x30
	0x03C83CAC B 0x3C7DDC8
	0x03C83CB0 MOV X0, X19
	0x03C83CB4 LDP X20, X19, [X31 + 0x20]
	0x03C83CB8 LDP X22, X21, [X31 + 0x10]
	0x03C83CBC LDR X30, [X31], #0x30
	0x03C83CC0 B 0x3C822F8
	0x03C83CC4 MOV X0, X19
	0x03C83CC8 MOV W1, W31
	0x03C83CCC BL 0x3C8432C
	0x03C83CD0 CMP W0, W22
	0x03C83CD4 B.NE 0x3C83CEC
	0x03C83CD8 MOV W0, W20
	0x03C83CDC LDP X20, X19, [X31 + 0x20]
	0x03C83CE0 LDP X22, X21, [X31 + 0x10]
	0x03C83CE4 LDR X30, [X31], #0x30
	0x03C83CE8 RET
	0x03C83CEC MOV X0, X19
	0x03C83CF0 MOV W1, W31
	0x03C83CF4 B 0x3C83CA0
	0x03C83CF8 STR X30, [X31 - 0x20]!
	0x03C83CFC STP X20, X19, [X31 + 0x10]
	0x03C83D00 MOVN W8, 0x0
	0x03C83D04 MOV X19, X0
	0x03C83D08 STRB W31, [X0 + 0x18]
	0x03C83D0C STR W8, [X0 + 0x14]
	0x03C83D10 BL 0x3C822F8
	0x03C83D14 LDR W1, [X19 + 0x34]
	0x03C83D18 MOV W20, W0
	0x03C83D1C MOV X0, X19
	0x03C83D20 BL 0x3C823B4
	0x03C83D24 CMP W0, W20
	0x03C83D28 B.GE 0x3C83D6C
	0x03C83D2C LDR W1, [X19 + 0x34]
	0x03C83D30 MOV X0, X19
	0x03C83D34 BL 0x3C823B4
	0x03C83D38 MOV W1, W0
	0x03C83D3C MOV X0, X19
	0x03C83D40 BL 0x3C83A64
	0x03C83D44 LDR W8, [X19 + 0x34]
	0x03C83D48 CMP W8, W0
	0x03C83D4C B.EQ 0x3C83D6C
	0x03C83D50 LDR X8, [X19 + 0x40]
	0x03C83D54 STR W0, [X19 + 0x34]
	0x03C83D58 CBZ X8, 0x3C83D6C
	0x03C83D5C LDR X9, [X8 + 0x18]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W8, [X0+25]
	005 Move X19, X0
	006 Compare W8, 0
	007 JumpIfEqual {43}
	008 Move W1, [X19+52]
	009 Move X0, X19
	010 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	011 Move W1, [X19+56]
	012 Move W20, W0
	013 Move X0, X19
	014 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	015 NotImplemented "Instruction CMP not yet implemented."
	016 Move W1, [X19+52]
	017 Move X0, X19
	018 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	019 Move W1, [X19+56]
	020 Move W20, W0
	021 Move X0, X19
	022 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	023 Move W8, [X19+52]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X8, [X19+64]
	026 Move [X19+52], W0
	027 Compare X8, 0
	028 JumpIfEqual {33}
	029 Move X9, [X8+24]
	030 Move X0, [X8+64]
	031 Move X1, [X8+40]
	032 NotImplemented "Instruction BLR not yet implemented."
	033 Move W8, [X19+56]
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move X8, [X19+72]
	036 Move [X19+56], W20
	037 Compare X8, 0
	038 JumpIfEqual {43}
	039 Move X9, [X8+24]
	040 Move X0, [X8+64]
	041 Move X1, [X8+40]
	042 NotImplemented "Instruction BLR not yet implemented."
	043 Move W1, [X19+52]
	044 Move X0, X19
	045 Move [X19+25], W31
	046 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	047 Move W1, W0
	048 Move X0, X19
	049 Call TextSelectingUtilities.PreviousCodePointIndex, X0, X1
	050 Move W8, [X19+52]
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move X8, [X19+64]
	053 Move [X19+52], W0
	054 Compare X8, 0
	055 JumpIfEqual {63}
	056 Move X2, [X8+24]
	057 Move X0, [X8+64]
	058 Move X1, [X8+40]
	059 Move X20, [X31+16]
	060 Move X19, [X31+24]
	061 Move X30, [X31+32]
	062 CallNoReturn X2
	063 Move X20, [X31+16]
	064 Move X19, [X31+24]
	065 Move X30, [X31+32]
	066 Return 

Method: System.Void SelectRight()

Disassembly:
	0x03C83D60 LDR X0, [X8 + 0x40]
	0x03C83D64 LDR X1, [X8 + 0x28]
	0x03C83D68 BLR X9
	0x03C83D6C LDR W1, [X19 + 0x38]
	0x03C83D70 MOV X0, X19
	0x03C83D74 BL 0x3C823B4
	0x03C83D78 CBZ W0, 0x3C83DD8
	0x03C83D7C LDR W1, [X19 + 0x38]
	0x03C83D80 LDR X20, [X19 + 0x28]
	0x03C83D84 MOV X0, X19
	0x03C83D88 BL 0x3C823B4
	0x03C83D8C CBZ X20, 0x3C83DE4
	0x03C83D90 SUB W2, W0, 0x1
	0x03C83D94 MOVZ W1, 0xA
	0x03C83D98 MOV X0, X20
	0x03C83D9C MOV X3, X31
	0x03C83DA0 BL 0x3CCAF90
	0x03C83DA4 LDR W9, [X19 + 0x38]
	0x03C83DA8 ADD W8, W0, 0x1
	0x03C83DAC CMP W9, W8
	0x03C83DB0 B.EQ 0x3C83DD8
	0x03C83DB4 LDR X9, [X19 + 0x48]
	0x03C83DB8 STR W8, [X19 + 0x38]
	0x03C83DBC CBZ X9, 0x3C83DD8
	0x03C83DC0 LDR X2, [X9 + 0x18]
	0x03C83DC4 LDR X0, [X9 + 0x40]
	0x03C83DC8 LDR X1, [X9 + 0x28]
	0x03C83DCC LDP X20, X19, [X31 + 0x10]
	0x03C83DD0 LDR X30, [X31], #0x20
	0x03C83DD4 BR X2
	0x03C83DD8 LDP X20, X19, [X31 + 0x10]
	0x03C83DDC LDR X30, [X31], #0x20
	0x03C83DE0 RET
	0x03C83DE4 BL 0x1C16F20
	0x03C83DE8 STP X30, X21, [X31 - 0x20]!
	0x03C83DEC STP X20, X19, [X31 + 0x10]
	0x03C83DF0 MOV W19, W1
	0x03C83DF4 MOV X20, X0
	0x03C83DF8 BL 0x3C822F8
	0x03C83DFC CMP W0, W19
	0x03C83E00 B.LE 0x3C83E5C
	0x03C83E04 MOV W21, W0
	0x03C83E08 MOV X0, X20
	0x03C83E0C MOV W1, W19
	0x03C83E10 BL 0x3C8432C
	0x03C83E14 CBZ W0, 0x3C83E4C
	0x03C83E18 MOV X0, X20
	0x03C83E1C MOV W1, W19
	0x03C83E20 BL 0x3C7DDC8
	0x03C83E24 MOV W19, W0
	0x03C83E28 CMP W0, W21
	0x03C83E2C B.LT 0x3C83E08
	0x03C83E30 B 0x3C83E5C
	0x03C83E34 MOV X0, X20
	0x03C83E38 MOV W1, W19
	0x03C83E3C BL 0x3C7DDC8
	0x03C83E40 MOV W19, W0
	0x03C83E44 CMP W0, W21
	0x03C83E48 B.GE 0x3C83E5C
	0x03C83E4C MOV X0, X20
	0x03C83E50 MOV W1, W19
	0x03C83E54 BL 0x3C8432C
	0x03C83E58 CBZ W0, 0x3C83E34

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W8, [X0+25]
	005 Move X19, X0
	006 Compare W8, 0
	007 JumpIfEqual {43}
	008 Move W1, [X19+52]
	009 Move X0, X19
	010 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	011 Move W1, [X19+56]
	012 Move W20, W0
	013 Move X0, X19
	014 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	015 NotImplemented "Instruction CMP not yet implemented."
	016 Move W1, [X19+52]
	017 Move X0, X19
	018 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	019 Move W1, [X19+56]
	020 Move W20, W0
	021 Move X0, X19
	022 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	023 Move W8, [X19+52]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X8, [X19+64]
	026 Move [X19+52], W0
	027 Compare X8, 0
	028 JumpIfEqual {33}
	029 Move X9, [X8+24]
	030 Move X0, [X8+64]
	031 Move X1, [X8+40]
	032 NotImplemented "Instruction BLR not yet implemented."
	033 Move W8, [X19+56]
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move X8, [X19+72]
	036 Move [X19+56], W20
	037 Compare X8, 0
	038 JumpIfEqual {43}
	039 Move X9, [X8+24]
	040 Move X0, [X8+64]
	041 Move X1, [X8+40]
	042 NotImplemented "Instruction BLR not yet implemented."
	043 Move W1, [X19+52]
	044 Move X0, X19
	045 Move [X19+25], W31
	046 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	047 Move W1, W0
	048 Move X0, X19
	049 Call TextSelectingUtilities.NextCodePointIndex, X0, X1
	050 Move W8, [X19+52]
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move X8, [X19+64]
	053 Move [X19+52], W0
	054 Compare X8, 0
	055 JumpIfEqual {63}
	056 Move X2, [X8+24]
	057 Move X0, [X8+64]
	058 Move X1, [X8+40]
	059 Move X20, [X31+16]
	060 Move X19, [X31+24]
	061 Move X30, [X31+32]
	062 CallNoReturn X2
	063 Move X20, [X31+16]
	064 Move X19, [X31+24]
	065 Move X30, [X31+32]
	066 Return 

Method: System.Void SelectUp()

Disassembly:
	0x03C83E5C MOV W0, W19
	0x03C83E60 LDP X20, X19, [X31 + 0x10]
	0x03C83E64 LDP X30, X21, [X31], #0x20
	0x03C83E68 RET
	0x03C83E6C STR X30, [X31 - 0x20]!
	0x03C83E70 STP X20, X19, [X31 + 0x10]
	0x03C83E74 MOV X19, X0
	0x03C83E78 BL 0x3C7DEA8
	0x03C83E7C MOV W20, W0
	0x03C83E80 CMP W0, 0x1
	0x03C83E84 B.LT 0x3C83ED0
	0x03C83E88 MOV X0, X19
	0x03C83E8C MOV W1, W20
	0x03C83E90 BL 0x3C8432C
	0x03C83E94 CBZ W0, 0x3C83EBC
	0x03C83E98 MOV X0, X19
	0x03C83E9C MOV W1, W20
	0x03C83EA0 B 0x3C83E78
	0x03C83EA4 MOV X0, X19
	0x03C83EA8 MOV W1, W20
	0x03C83EAC BL 0x3C7DEA8
	0x03C83EB0 MOV W20, W0
	0x03C83EB4 CMP W0, 0x1
	0x03C83EB8 B.LT 0x3C83ED4
	0x03C83EBC MOV X0, X19
	0x03C83EC0 MOV W1, W20
	0x03C83EC4 BL 0x3C8432C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W1, [X0+52]
	005 Move X20, [X0+40]
	006 Move X19, X0
	007 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	008 Compare X20, 0
	009 JumpIfEqual {31}
	010 Move W1, W0
	011 Move X0, X20
	012 Move X2, X31
	013 Call TextHandle.LineUpCharacterPosition, X0, X1
	014 Move W8, [X19+52]
	015 NotImplemented "Instruction CMP not yet implemented."
	016 Move X8, [X19+64]
	017 Move [X19+52], W0
	018 Compare X8, 0
	019 JumpIfEqual {27}
	020 Move X2, [X8+24]
	021 Move X0, [X8+64]
	022 Move X1, [X8+40]
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 CallNoReturn X2
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Return 
	031 Call 0x1C17F20

Method: System.Void SelectDown()

Disassembly:
	0x03C83EC8 CBZ W0, 0x3C83EA4
	0x03C83ECC B 0x3C83ED4
	0x03C83ED0 CBZ W20, 0x3C83EF8
	0x03C83ED4 MOV X0, X19
	0x03C83ED8 MOV W1, W20
	0x03C83EDC BL 0x3C8432C
	0x03C83EE0 CBZ W0, 0x3C83EF8
	0x03C83EE4 MOV X0, X19
	0x03C83EE8 MOV W1, W20
	0x03C83EEC LDP X20, X19, [X31 + 0x10]
	0x03C83EF0 LDR X30, [X31], #0x20
	0x03C83EF4 B 0x3C7DDC8
	0x03C83EF8 MOV W0, W20
	0x03C83EFC LDP X20, X19, [X31 + 0x10]
	0x03C83F00 LDR X30, [X31], #0x20
	0x03C83F04 RET
	0x03C83F08 STR X30, [X31 - 0x30]!
	0x03C83F0C STP X22, X21, [X31 + 0x10]
	0x03C83F10 STP X20, X19, [X31 + 0x20]
	0x03C83F14 LDR W8, [X0 + 0x34]
	0x03C83F18 AND W9, W1, 0x1
	0x03C83F1C MOV X19, X0
	0x03C83F20 STRB W9, [X0 + 0x1A]
	0x03C83F24 MOV W1, W8
	0x03C83F28 BL 0x3C823B4
	0x03C83F2C LDR W1, [X19 + 0x38]
	0x03C83F30 MOV W20, W0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W1, [X0+52]
	005 Move X20, [X0+40]
	006 Move X19, X0
	007 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	008 Compare X20, 0
	009 JumpIfEqual {31}
	010 Move W1, W0
	011 Move X0, X20
	012 Move X2, X31
	013 Call TextHandle.LineDownCharacterPosition, X0, X1
	014 Move W8, [X19+52]
	015 NotImplemented "Instruction CMP not yet implemented."
	016 Move X8, [X19+64]
	017 Move [X19+52], W0
	018 Compare X8, 0
	019 JumpIfEqual {27}
	020 Move X2, [X8+24]
	021 Move X0, [X8+64]
	022 Move X1, [X8+40]
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 CallNoReturn X2
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Return 
	031 Call 0x1C17F20

Method: System.Void SelectTextEnd()

Disassembly:
	0x03C84274 CMP W8, W0
	0x03C84278 B.EQ 0x3C8431C
	0x03C8427C LDR X8, [X19 + 0x48]
	0x03C84280 STR W0, [X19 + 0x38]
	0x03C84284 CBZ X8, 0x3C8431C
	0x03C84288 LDR X2, [X8 + 0x18]
	0x03C8428C LDR X0, [X8 + 0x40]
	0x03C84290 LDR X1, [X8 + 0x28]
	0x03C84294 LDP X20, X19, [X31 + 0x10]
	0x03C84298 LDR X30, [X31], #0x20
	0x03C8429C BR X2
	0x03C842A0 MOV X0, X19
	0x03C842A4 BL 0x3C822F8
	0x03C842A8 LDR W8, [X19 + 0x34]
	0x03C842AC CMP W8, W0
	0x03C842B0 B.EQ 0x3C842D0

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call TextSelectingUtilities.get_characterCount, X0
	005 Move W8, [X19+52]
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Move X8, [X19+64]
	008 Move [X19+52], W0
	009 Compare X8, 0
	010 JumpIfEqual {17}
	011 Move X2, [X8+24]
	012 Move X0, [X8+64]
	013 Move X1, [X8+40]
	014 Move X30, [X31+16]
	015 Move X19, [X31+24]
	016 CallNoReturn X2
	017 Move X30, [X31+16]
	018 Move X19, [X31+24]
	019 Return 

Method: System.Void SelectTextStart()

Disassembly:
	0x03C8424C LDR X9, [X8 + 0x18]
	0x03C84250 LDR X0, [X8 + 0x40]
	0x03C84254 LDR X1, [X8 + 0x28]
	0x03C84258 BLR X9
	0x03C8425C LDR W8, [X19 + 0x1C]
	0x03C84260 MOVZ W2, 0x1
	0x03C84264 MOV X0, X19
	0x03C84268 ADD W1, W8, 0x1
	0x03C8426C BL 0x3C83BB4
	0x03C84270 LDR W8, [X19 + 0x38]

ISIL:
	001 Move W8, [X0+52]
	002 Compare W8, 0
	003 JumpIfEqual {12}
	004 Move X8, [X0+64]
	005 Move [X0+52], W31
	006 Compare X8, 0
	007 JumpIfEqual {12}
	008 Move X2, [X8+24]
	009 Move X0, [X8+64]
	010 Move X1, [X8+40]
	011 CallNoReturn X2
	012 Return 

Method: System.Void SelectToStartOfNextWord()

Disassembly:
	0x03C841F0 MOV X0, X19
	0x03C841F4 BL 0x3C822F8
	0x03C841F8 CBZ X20, 0x3C84328
	0x03C841FC LDR W8, [X19 + 0x20]
	0x03C84200 SUB W9, W0, 0x1
	0x03C84204 MOVZ W1, 0xA
	0x03C84208 MOV X0, X20
	0x03C8420C ADD W8, W8, 0x1
	0x03C84210 CMP W9, W8
	0x03C84214 CSEL W2, W9, W8, LT
	0x03C84218 MOV X3, X31
	0x03C8421C BL 0x3CCAF90
	0x03C84220 B 0x3C84270
	0x03C84224 SUB W1, W20, 0x1
	0x03C84228 MOV X0, X19
	0x03C8422C MOV W2, W31
	0x03C84230 BL 0x3C83BB4
	0x03C84234 LDR W8, [X19 + 0x34]
	0x03C84238 CMP W8, W0
	0x03C8423C B.EQ 0x3C8425C
	0x03C84240 LDR X8, [X19 + 0x40]
	0x03C84244 STR W0, [X19 + 0x34]
	0x03C84248 CBZ X8, 0x3C8425C

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W1, [X0+52]
	004 Move TEMP, 0
	005 Not TEMP
	006 Move W8, TEMP
	007 Move X19, X0
	008 Move [X0+24], W31
	009 Move [X0+20], W8
	010 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	011 Move W1, W0
	012 Move X0, X19
	013 Call TextSelectingUtilities.FindStartOfNextWord, X0, X1
	014 Move W8, [X19+52]
	015 NotImplemented "Instruction CMP not yet implemented."
	016 Move X8, [X19+64]
	017 Move [X19+52], W0
	018 Compare X8, 0
	019 JumpIfEqual {26}
	020 Move X2, [X8+24]
	021 Move X0, [X8+64]
	022 Move X1, [X8+40]
	023 Move X30, [X31+16]
	024 Move X19, [X31+24]
	025 CallNoReturn X2
	026 Move X30, [X31+16]
	027 Move X19, [X31+24]
	028 Return 

Method: System.Void SelectToEndOfPreviousWord()

Disassembly:
	0x03C84194 B.EQ 0x3C841B4
	0x03C84198 LDR X8, [X19 + 0x40]
	0x03C8419C STR W0, [X19 + 0x34]
	0x03C841A0 CBZ X8, 0x3C841B4
	0x03C841A4 LDR X9, [X8 + 0x18]
	0x03C841A8 LDR X0, [X8 + 0x40]
	0x03C841AC LDR X1, [X8 + 0x28]
	0x03C841B0 BLR X9
	0x03C841B4 LDR W8, [X19 + 0x20]
	0x03C841B8 MOV X0, X19
	0x03C841BC MOV W2, W31
	0x03C841C0 SUB W1, W8, 0x1
	0x03C841C4 B 0x3C8426C
	0x03C841C8 LDR W8, [X19 + 0x34]
	0x03C841CC CBZ W8, 0x3C841EC
	0x03C841D0 LDR X8, [X19 + 0x40]
	0x03C841D4 STR W31, [X19 + 0x34]
	0x03C841D8 CBZ X8, 0x3C841EC
	0x03C841DC LDR X9, [X8 + 0x18]
	0x03C841E0 LDR X0, [X8 + 0x40]
	0x03C841E4 LDR X1, [X8 + 0x28]
	0x03C841E8 BLR X9
	0x03C841EC LDR X20, [X19 + 0x28]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W1, [X0+52]
	004 Move TEMP, 0
	005 Not TEMP
	006 Move W8, TEMP
	007 Move X19, X0
	008 Move [X0+24], W31
	009 Move [X0+20], W8
	010 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	011 Move W1, W0
	012 Move X0, X19
	013 Call TextSelectingUtilities.FindEndOfPreviousWord, X0, X1
	014 Move W8, [X19+52]
	015 NotImplemented "Instruction CMP not yet implemented."
	016 Move X8, [X19+64]
	017 Move [X19+52], W0
	018 Compare X8, 0
	019 JumpIfEqual {26}
	020 Move X2, [X8+24]
	021 Move X0, [X8+64]
	022 Move X1, [X8+40]
	023 Move X30, [X31+16]
	024 Move X19, [X31+24]
	025 CallNoReturn X2
	026 Move X30, [X31+16]
	027 Move X19, [X31+24]
	028 Return 

Method: System.Void SelectWordRight()

Disassembly:
	0x03C83F34 MOV X0, X19
	0x03C83F38 BL 0x3C823B4
	0x03C83F3C CMP W20, W0
	0x03C83F40 MOVZ W21, 0x38
	0x03C83F44 MOVZ W22, 0x34
	0x03C83F48 CSEL X8, X22, X21, LT
	0x03C83F4C LDR W1, [X19, X8, LSL]
	0x03C83F50 MOV X0, X19
	0x03C83F54 BL 0x3C823B4
	0x03C83F58 LDR W1, [X19 + 0x34]
	0x03C83F5C STR W0, [X19 + 0x1C]
	0x03C83F60 MOV X0, X19
	0x03C83F64 BL 0x3C823B4
	0x03C83F68 LDR W1, [X19 + 0x38]
	0x03C83F6C MOV W20, W0
	0x03C83F70 MOV X0, X19
	0x03C83F74 BL 0x3C823B4
	0x03C83F78 CMP W20, W0
	0x03C83F7C CSEL X8, X21, X22, LT
	0x03C83F80 LDR W1, [X19, X8, LSL]
	0x03C83F84 MOV X0, X19
	0x03C83F88 BL 0x3C823B4
	0x03C83F8C STR W0, [X19 + 0x20]
	0x03C83F90 LDP X20, X19, [X31 + 0x20]
	0x03C83F94 LDP X22, X21, [X31 + 0x10]
	0x03C83F98 LDR X30, [X31], #0x30
	0x03C83F9C RET
	0x03C83FA0 STRB W1, [X0 + 0x10]
	0x03C83FA4 RET
	0x03C83FA8 STR X30, [X31 - 0x20]!
	0x03C83FAC STP X20, X19, [X31 + 0x10]
	0x03C83FB0 MOV X19, X0
	0x03C83FB4 LDR X0, [X0 + 0x28]
	0x03C83FB8 CBZ X0, 0x3C84040
	0x03C83FBC MOV W20, W1
	0x03C83FC0 MOVZ W1, 0x1
	0x03C83FC4 MOV X2, X31
	0x03C83FC8 BL 0x3CC9E4C
	0x03C83FCC LDR W8, [X19 + 0x38]
	0x03C83FD0 CMP W8, W0
	0x03C83FD4 B.EQ 0x3C83FF4
	0x03C83FD8 LDR X8, [X19 + 0x48]
	0x03C83FDC STR W0, [X19 + 0x38]
	0x03C83FE0 CBZ X8, 0x3C83FF4
	0x03C83FE4 LDR X9, [X8 + 0x18]
	0x03C83FE8 LDR X0, [X8 + 0x40]
	0x03C83FEC LDR X1, [X8 + 0x28]
	0x03C83FF0 BLR X9
	0x03C83FF4 TBNZ X20, 0x0, 0x3C84034
	0x03C83FF8 LDR W1, [X19 + 0x38]
	0x03C83FFC MOV X0, X19
	0x03C84000 BL 0x3C823B4
	0x03C84004 LDR W8, [X19 + 0x34]
	0x03C84008 CMP W8, W0
	0x03C8400C B.EQ 0x3C84034
	0x03C84010 LDR X8, [X19 + 0x40]
	0x03C84014 STR W0, [X19 + 0x34]
	0x03C84018 CBZ X8, 0x3C84034
	0x03C8401C LDR X2, [X8 + 0x18]
	0x03C84020 LDR X0, [X8 + 0x40]
	0x03C84024 LDR X1, [X8 + 0x28]
	0x03C84028 LDP X20, X19, [X31 + 0x10]
	0x03C8402C LDR X30, [X31], #0x20
	0x03C84030 BR X2
	0x03C84034 LDP X20, X19, [X31 + 0x10]
	0x03C84038 LDR X30, [X31], #0x20
	0x03C8403C RET
	0x03C84040 BL 0x1C16F20
	0x03C84044 STR X30, [X31 - 0x20]!
	0x03C84048 STP X20, X19, [X31 + 0x10]
	0x03C8404C MOV X19, X0
	0x03C84050 LDR X0, [X0 + 0x28]
	0x03C84054 CBZ X0, 0x3C84328
	0x03C84058 LDRB W20, [X19 + 0x1A]
	0x03C8405C MOVZ W1, 0x1
	0x03C84060 MOV X2, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move W1, [X0+56]
	007 Move TEMP, 0
	008 Not TEMP
	009 Move W8, TEMP
	010 Move X19, X0
	011 Move [X0+24], W31
	012 Move [X0+20], W8
	013 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	014 Move W1, [X19+52]
	015 Move W21, W0
	016 Move X0, X19
	017 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	018 Move W1, [X19+56]
	019 Move W20, W0
	020 Move X0, X19
	021 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	022 Move W1, [X19+52]
	023 Move W22, W0
	024 Move X0, X19
	025 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	026 Move W8, [X19+56]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move X8, [X19+72]
	029 Move [X19+56], W0
	030 Compare X8, 0
	031 JumpIfEqual {36}
	032 Move X9, [X8+24]
	033 Move X0, [X8+64]
	034 Move X1, [X8+40]
	035 NotImplemented "Instruction BLR not yet implemented."
	036 Move X0, X19
	037 Call TextSelectingUtilities.MoveWordRight, X0
	038 Move W8, [X19+56]
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move X8, [X19+72]
	041 Move [X19+56], W21
	042 Compare X8, 0
	043 JumpIfEqual {48}
	044 Move X9, [X8+24]
	045 Move X0, [X8+64]
	046 Move X1, [X8+40]
	047 NotImplemented "Instruction BLR not yet implemented."
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move W1, [X19+52]
	050 Move X0, X19
	051 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	052 Move W1, [X19+56]
	053 Move W20, W0
	054 Move X0, X19
	055 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move W8, 56
	058 Move W9, 52
	059 NotImplemented "Instruction CSEL not yet implemented."
	060 Move W1, [X19]
	061 Move X0, X19
	062 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	063 Move W8, [X19+52]
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move X8, [X19+64]
	066 Move [X19+52], W0
	067 Compare X8, 0
	068 JumpIfEqual {78}
	069 Move X2, [X8+24]
	070 Move X0, [X8+64]
	071 Move X1, [X8+40]
	072 Move X20, [X31+32]
	073 Move X19, [X31+40]
	074 Move X22, [X31+16]
	075 Move X21, [X31+24]
	076 Move X30, [X31+48]
	077 CallNoReturn X2
	078 Move X20, [X31+32]
	079 Move X19, [X31+40]
	080 Move X22, [X31+16]
	081 Move X21, [X31+24]
	082 Move X30, [X31+48]
	083 Return 

Method: System.Void SelectWordLeft()

Disassembly:
	0x03C84064 BL 0x3CC9E4C
	0x03C84068 MOV W1, W0
	0x03C8406C CBZ W20, 0x3C840BC
	0x03C84070 MOV X0, X19
	0x03C84074 BL 0x3C823B4
	0x03C84078 LDR W8, [X19 + 0x1C]
	0x03C8407C LDRB W9, [X19 + 0x10]
	0x03C84080 MOV W20, W0
	0x03C84084 CMP W0, W8
	0x03C84088 CBZ W9, 0x3C840D8
	0x03C8408C B.LE 0x3C84130
	0x03C84090 LDR W9, [X19 + 0x20]
	0x03C84094 CMP W20, W9
	0x03C84098 B.LT 0x3C840E8
	0x03C8409C MOV X0, X19
	0x03C840A0 BL 0x3C822F8
	0x03C840A4 CMP W20, W0
	0x03C840A8 B.GE 0x3C842A0
	0x03C840AC MOV X0, X19
	0x03C840B0 MOV W1, W20
	0x03C840B4 BL 0x3C83A64
	0x03C840B8 B 0x3C842A8
	0x03C840BC LDR W8, [X19 + 0x34]
	0x03C840C0 CMP W8, W1
	0x03C840C4 B.EQ 0x3C8431C
	0x03C840C8 LDR X8, [X19 + 0x40]
	0x03C840CC STR W1, [X19 + 0x34]
	0x03C840D0 CBNZ X8, 0x3C84288
	0x03C840D4 B 0x3C8431C
	0x03C840D8 B.LE 0x3C8417C
	0x03C840DC LDR W9, [X19 + 0x20]
	0x03C840E0 CMP W20, W9
	0x03C840E4 B.GE 0x3C84224
	0x03C840E8 LDR W10, [X19 + 0x34]
	0x03C840EC CMP W10, W8
	0x03C840F0 B.EQ 0x3C84114
	0x03C840F4 LDR X10, [X19 + 0x40]
	0x03C840F8 STR W8, [X19 + 0x34]
	0x03C840FC CBZ X10, 0x3C84114
	0x03C84100 LDR X8, [X10 + 0x18]
	0x03C84104 LDR X0, [X10 + 0x40]
	0x03C84108 LDR X1, [X10 + 0x28]
	0x03C8410C BLR X8
	0x03C84110 LDR W9, [X19 + 0x20]
	0x03C84114 LDR W8, [X19 + 0x38]
	0x03C84118 CMP W8, W9
	0x03C8411C B.EQ 0x3C8431C
	0x03C84120 LDR X8, [X19 + 0x48]
	0x03C84124 STR W9, [X19 + 0x38]
	0x03C84128 CBNZ X8, 0x3C84288
	0x03C8412C B 0x3C8431C
	0x03C84130 SUBS W2, W20, 0x1
	0x03C84134 B.LT 0x3C841C8
	0x03C84138 LDR X0, [X19 + 0x28]
	0x03C8413C CBZ X0, 0x3C84328
	0x03C84140 MOVZ W1, 0xA
	0x03C84144 MOV X3, X31
	0x03C84148 BL 0x3CCAF90
	0x03C8414C LDR W9, [X19 + 0x34]
	0x03C84150 ADD W8, W0, 0x1
	0x03C84154 CMP W9, W8
	0x03C84158 B.EQ 0x3C841EC
	0x03C8415C LDR X9, [X19 + 0x40]
	0x03C84160 STR W8, [X19 + 0x34]
	0x03C84164 CBZ X9, 0x3C841EC
	0x03C84168 LDR X8, [X9 + 0x18]
	0x03C8416C LDR X0, [X9 + 0x40]
	0x03C84170 LDR X1, [X9 + 0x28]
	0x03C84174 BLR X8
	0x03C84178 B 0x3C841EC
	0x03C8417C MOVZ W2, 0x1
	0x03C84180 MOV X0, X19
	0x03C84184 MOV W1, W20
	0x03C84188 BL 0x3C83BB4
	0x03C8418C LDR W8, [X19 + 0x34]
	0x03C84190 CMP W8, W0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move W1, [X0+56]
	007 Move TEMP, 0
	008 Not TEMP
	009 Move W8, TEMP
	010 Move X19, X0
	011 Move [X0+24], W31
	012 Move [X0+20], W8
	013 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	014 Move W1, [X19+52]
	015 Move W21, W0
	016 Move X0, X19
	017 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	018 Move W1, [X19+56]
	019 Move W20, W0
	020 Move X0, X19
	021 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	022 Move W1, [X19+52]
	023 Move W22, W0
	024 Move X0, X19
	025 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	026 Move W8, [X19+56]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move X8, [X19+72]
	029 Move [X19+56], W0
	030 Compare X8, 0
	031 JumpIfEqual {36}
	032 Move X9, [X8+24]
	033 Move X0, [X8+64]
	034 Move X1, [X8+40]
	035 NotImplemented "Instruction BLR not yet implemented."
	036 Move X0, X19
	037 Call TextSelectingUtilities.MoveWordLeft, X0
	038 Move W8, [X19+56]
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move X8, [X19+72]
	041 Move [X19+56], W21
	042 Compare X8, 0
	043 JumpIfEqual {48}
	044 Move X9, [X8+24]
	045 Move X0, [X8+64]
	046 Move X1, [X8+40]
	047 NotImplemented "Instruction BLR not yet implemented."
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move W1, [X19+52]
	050 Move X0, X19
	051 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	052 Move W1, [X19+56]
	053 Move W20, W0
	054 Move X0, X19
	055 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move W8, 56
	058 Move W9, 52
	059 NotImplemented "Instruction CSEL not yet implemented."
	060 Move W1, [X19]
	061 Move X0, X19
	062 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	063 Move W8, [X19+52]
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move X8, [X19+64]
	066 Move [X19+52], W0
	067 Compare X8, 0
	068 JumpIfEqual {78}
	069 Move X2, [X8+24]
	070 Move X0, [X8+64]
	071 Move X1, [X8+40]
	072 Move X20, [X31+32]
	073 Move X19, [X31+40]
	074 Move X22, [X31+16]
	075 Move X21, [X31+24]
	076 Move X30, [X31+48]
	077 CallNoReturn X2
	078 Move X20, [X31+32]
	079 Move X19, [X31+40]
	080 Move X22, [X31+16]
	081 Move X21, [X31+24]
	082 Move X30, [X31+48]
	083 Return 

Method: System.Void SelectGraphicalLineStart()

Disassembly:
	0x03C84704 STP X20, X19, [X31 + 0x20]
	0x03C84708 ADRP X22, 0x762000
	0x03C8470C LDR X3, [X22 + 0x9E0]
	0x03C84710 MOV W19, W2
	0x03C84714 MOV V8.16B, V0.16B
	0x03C84718 MOV X20, X1
	0x03C8471C MOV X21, X0
	0x03C84720 CBNZ X3, 0x3C84738
	0x03C84724 ADRP X0, 0xFFFFFFFFFCE6B000
	0x03C84728 ADD X0, X0, 0x668
	0x03C8472C BL 0x1C16CB8
	0x03C84730 MOV X3, X0
	0x03C84734 STR X0, [X22 + 0x9E0]
	0x03C84738 MOV X0, X21
	0x03C8473C MOV X1, X20
	0x03C84740 MOV W2, W19
	0x03C84744 LDP X20, X19, [X31 + 0x20]
	0x03C84748 LDP X22, X21, [X31 + 0x10]
	0x03C8474C LDR X30, [X31 + 0x8]
	0x03C84750 MOV V0.16B, V8.16B
	0x03C84754 LDR V8, [X31], #0x30
	0x03C84758 BR X3
	0x03C8475C STR D8, [X31 - 0x30]!

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W1, [X0+52]
	004 Move TEMP, 0
	005 Not TEMP
	006 Move W8, TEMP
	007 Move X19, X0
	008 Move [X0+24], W31
	009 Move [X0+20], W8
	010 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	011 Move W1, W0
	012 Move X0, X19
	013 Call TextSelectingUtilities.GetGraphicalLineStart, X0, X1
	014 Move W8, [X19+52]
	015 NotImplemented "Instruction CMP not yet implemented."
	016 Move X8, [X19+64]
	017 Move [X19+52], W0
	018 Compare X8, 0
	019 JumpIfEqual {26}
	020 Move X2, [X8+24]
	021 Move X0, [X8+64]
	022 Move X1, [X8+40]
	023 Move X30, [X31+16]
	024 Move X19, [X31+24]
	025 CallNoReturn X2
	026 Move X30, [X31+16]
	027 Move X19, [X31+24]
	028 Return 

Method: System.Void SelectGraphicalLineEnd()

Disassembly:
	0x03C84760 STR X30, [X31 + 0x8]
	0x03C84764 STP X22, X21, [X31 + 0x10]
	0x03C84768 STP X20, X19, [X31 + 0x20]
	0x03C8476C ADRP X22, 0x762000
	0x03C84770 LDR X3, [X22 + 0x9E0]
	0x03C84774 MOV W19, W2
	0x03C84778 MOV V8.16B, V0.16B
	0x03C8477C MOV X20, X1
	0x03C84780 MOV X21, X0
	0x03C84784 CBNZ X3, 0x3C8479C
	0x03C84788 ADRP X0, 0xFFFFFFFFFCE6B000
	0x03C8478C ADD X0, X0, 0x668
	0x03C84790 BL 0x1C16CB8
	0x03C84794 MOV X3, X0
	0x03C84798 STR X0, [X22 + 0x9E0]
	0x03C8479C MOV X0, X21
	0x03C847A0 MOV X1, X20
	0x03C847A4 MOV W2, W19
	0x03C847A8 LDP X20, X19, [X31 + 0x20]
	0x03C847AC LDP X22, X21, [X31 + 0x10]
	0x03C847B0 LDR X30, [X31 + 0x8]
	0x03C847B4 MOV V0.16B, V8.16B
	0x03C847B8 LDR V8, [X31], #0x30

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W1, [X0+52]
	004 Move TEMP, 0
	005 Not TEMP
	006 Move W8, TEMP
	007 Move X19, X0
	008 Move [X0+24], W31
	009 Move [X0+20], W8
	010 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	011 Move W1, W0
	012 Move X0, X19
	013 Call TextSelectingUtilities.GetGraphicalLineEnd, X0, X1
	014 Move W8, [X19+52]
	015 NotImplemented "Instruction CMP not yet implemented."
	016 Move X8, [X19+64]
	017 Move [X19+52], W0
	018 Compare X8, 0
	019 JumpIfEqual {26}
	020 Move X2, [X8+24]
	021 Move X0, [X8+64]
	022 Move X1, [X8+40]
	023 Move X30, [X31+16]
	024 Move X19, [X31+24]
	025 CallNoReturn X2
	026 Move X30, [X31+16]
	027 Move X19, [X31+24]
	028 Return 

Method: System.Void SelectParagraphForward()

Disassembly:
	0x03C84494 BL 0x3C822F8
	0x03C84498 CMP W0, W19
	0x03C8449C B.GE 0x3C844A8
	0x03C844A0 MOV W8, W31
	0x03C844A4 B 0x3C84514
	0x03C844A8 CBZ W19, 0x3C844BC
	0x03C844AC MOV X0, X20
	0x03C844B0 BL 0x3C822F8
	0x03C844B4 CMP W0, W19
	0x03C844B8 B.NE 0x3C844C4
	0x03C844BC MOVZ W8, 0x1
	0x03C844C0 B 0x3C84514
	0x03C844C4 MOV X0, X20
	0x03C844C8 BL 0x3C8238C
	0x03C844CC CBZ X0, 0x3C84524
	0x03C844D0 LDR W8, [X0 + 0x18]
	0x03C844D4 CMP W8, W19
	0x03C844D8 B.LS 0x3C84528
	0x03C844DC ADRP X8, 0x471000
	0x03C844E0 LDR X8, [X8 + 0x170]
	0x03C844E4 MOVZ W9, 0x188
	0x03C844E8 UMADDL X9, X19, X9, X0
	0x03C844EC LDRH W19, [X9 + 0x20]
	0x03C844F0 LDR X8, [X8]
	0x03C844F4 LDR W10, [X8 + 0xE0]
	0x03C844F8 CBNZ W10, 0x3C84504
	0x03C844FC MOV X0, X8
	0x03C84500 BL 0x1C16DFC
	0x03C84504 MOV W0, W19
	0x03C84508 MOV X1, X31
	0x03C8450C BL 0x331C0FC
	0x03C84510 EOR W8, W0, 0x1
	0x03C84514 LDP X20, X19, [X31 + 0x10]
	0x03C84518 AND W0, W8, 0x1
	0x03C8451C LDP X30, X21, [X31], #0x20
	0x03C84520 RET
	0x03C84524 BL 0x1C16F20
	0x03C84528 BL 0x1C16F28
	0x03C8452C STR X30, [X31 - 0x30]!
	0x03C84530 STP X22, X21, [X31 + 0x10]
	0x03C84534 STP X20, X19, [X31 + 0x20]
	0x03C84538 CBZ X0, 0x3C84590
	0x03C8453C LDR W8, [X0 + 0x10]
	0x03C84540 MOVZ W20, 0x9DC5
	0x03C84544 MOV X19, X0
	0x03C84548 MOVK W20, 0x811C0000
	0x03C8454C CMP W8, 0x1
	0x03C84550 B.LT 0x3C84594
	0x03C84554 MOVZ W22, 0x193
	0x03C84558 MOV W21, W31
	0x03C8455C MOVK W22, 0x1000000
	0x03C84560 MOV X0, X19
	0x03C84564 MOV W1, W21
	0x03C84568 MOV X2, X31
	0x03C8456C BL 0x3222A1C
	0x03C84570 LDR W8, [X19 + 0x10]
	0x03C84574 AND W9, W0, 0xFFFF
	0x03C84578 EOR W9, W20, W9, 0x0
	0x03C8457C ADD W21, W21, 0x1
	0x03C84580 CMP W21, W8
	0x03C84584 MUL W20, W9, W22
	0x03C84588 B.LT 0x3C84560
	0x03C8458C B 0x3C84594
	0x03C84590 MOV W20, W31
	0x03C84594 MOV W0, W20
	0x03C84598 LDP X20, X19, [X31 + 0x20]
	0x03C8459C LDP X22, X21, [X31 + 0x10]
	0x03C845A0 LDR X30, [X31], #0x30
	0x03C845A4 RET

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move W1, [X0+52]
	007 Move TEMP, 0
	008 Not TEMP
	009 Move W8, TEMP
	010 Move X19, X0
	011 Move [X0+24], W31
	012 Move [X0+20], W8
	013 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	014 Move W1, [X19+56]
	015 Move W20, W0
	016 Move X0, X19
	017 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	018 Move W1, [X19+52]
	019 Move W21, W0
	020 Move X0, X19
	021 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	022 Move W22, W0
	023 Move X0, X19
	024 Call TextSelectingUtilities.get_characterCount, X0
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move W1, [X19+52]
	027 Move X0, X19
	028 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	029 Add W1, W0, 1
	030 Move X0, X19
	031 Call TextSelectingUtilities.IndexOfEndOfLine, X0, X1
	032 Move W8, [X19+52]
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X8, [X19+64]
	035 Move [X19+52], W0
	036 Compare X8, 0
	037 JumpIfEqual {42}
	038 Move X9, [X8+24]
	039 Move X0, [X8+64]
	040 Move X1, [X8+40]
	041 NotImplemented "Instruction BLR not yet implemented."
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move W1, [X19+52]
	044 Move X0, X19
	045 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	046 Move W1, [X19+56]
	047 Move W20, W0
	048 Move X0, X19
	049 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move W1, [X19+56]
	052 Move X0, X19
	053 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	054 Move W8, [X19+52]
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move X8, [X19+64]
	057 Move [X19+52], W0
	058 Compare X8, 0
	059 JumpIfEqual {69}
	060 Move X2, [X8+24]
	061 Move X0, [X8+64]
	062 Move X1, [X8+40]
	063 Move X20, [X31+32]
	064 Move X19, [X31+40]
	065 Move X22, [X31+16]
	066 Move X21, [X31+24]
	067 Move X30, [X31+48]
	068 CallNoReturn X2
	069 Move X20, [X31+32]
	070 Move X19, [X31+40]
	071 Move X22, [X31+16]
	072 Move X21, [X31+24]
	073 Move X30, [X31+48]
	074 Return 

Method: System.Void SelectParagraphBackward()

Disassembly:
	0x03C845A8 LDR W0, [X0]
	0x03C845AC RET
	0x03C845B0 LDP S0, S1, [X0 + 0x4]
	0x03C845B4 RET
	0x03C845B8 STP S0, S1, [X0 + 0x4]
	0x03C845BC RET
	0x03C845C0 LDP S0, S1, [X0 + 0xC]
	0x03C845C4 RET
	0x03C845C8 STP S0, S1, [X0 + 0xC]
	0x03C845CC RET
	0x03C845D0 LDP S0, S1, [X0 + 0x14]
	0x03C845D4 RET
	0x03C845D8 STP S0, S1, [X0 + 0x14]
	0x03C845DC RET
	0x03C845E0 LDR V0, [X0 + 0x1C]
	0x03C845E4 RET
	0x03C845E8 LDR W0, [X0 + 0x20]
	0x03C845EC RET
	0x03C845F0 LDR W0, [X0 + 0x24]
	0x03C845F4 RET
	0x03C845F8 LDR V0, [X0 + 0x2C]
	0x03C845FC RET
	0x03C84600 LDR V0, [X0 + 0x30]
	0x03C84604 RET
	0x03C84608 LDR W0, [X0 + 0x28]
	0x03C8460C RET
	0x03C84610 LDR V0, [X0 + 0x3C]
	0x03C84614 RET
	0x03C84618 LDR V0, [X0 + 0x40]
	0x03C8461C RET
	0x03C84620 LDR V0, [X0 + 0x34]
	0x03C84624 RET
	0x03C84628 LDR V0, [X0 + 0x38]
	0x03C8462C RET
	0x03C84630 STR D8, [X31 - 0x30]!
	0x03C84634 STR X30, [X31 + 0x8]
	0x03C84638 STP X22, X21, [X31 + 0x10]
	0x03C8463C STP X20, X19, [X31 + 0x20]
	0x03C84640 ADRP X22, 0x762000
	0x03C84644 LDR X3, [X22 + 0x9D8]
	0x03C84648 MOV W19, W2
	0x03C8464C MOV V8.16B, V0.16B
	0x03C84650 MOV X20, X1
	0x03C84654 MOV X21, X0
	0x03C84658 CBNZ X3, 0x3C84670
	0x03C8465C ADRP X0, 0xFFFFFFFFFCEA4000
	0x03C84660 ADD X0, X0, 0xF39
	0x03C84664 BL 0x1C16CB8
	0x03C84668 MOV X3, X0
	0x03C8466C STR X0, [X22 + 0x9D8]
	0x03C84670 MOV X0, X21
	0x03C84674 MOV X1, X20
	0x03C84678 MOV W2, W19
	0x03C8467C LDP X20, X19, [X31 + 0x20]
	0x03C84680 LDP X22, X21, [X31 + 0x10]
	0x03C84684 LDR X30, [X31 + 0x8]
	0x03C84688 MOV V0.16B, V8.16B
	0x03C8468C LDR V8, [X31], #0x30
	0x03C84690 BR X3
	0x03C84694 STR D8, [X31 - 0x30]!
	0x03C84698 STR X30, [X31 + 0x8]
	0x03C8469C STP X22, X21, [X31 + 0x10]
	0x03C846A0 STP X20, X19, [X31 + 0x20]
	0x03C846A4 ADRP X22, 0x762000
	0x03C846A8 LDR X3, [X22 + 0x9D8]
	0x03C846AC MOV W19, W2
	0x03C846B0 MOV V8.16B, V0.16B
	0x03C846B4 MOV X20, X1
	0x03C846B8 MOV X21, X0
	0x03C846BC CBNZ X3, 0x3C846D4
	0x03C846C0 ADRP X0, 0xFFFFFFFFFCEA4000
	0x03C846C4 ADD X0, X0, 0xF39
	0x03C846C8 BL 0x1C16CB8
	0x03C846CC MOV X3, X0
	0x03C846D0 STR X0, [X22 + 0x9D8]
	0x03C846D4 MOV X0, X21
	0x03C846D8 MOV X1, X20
	0x03C846DC MOV W2, W19
	0x03C846E0 LDP X20, X19, [X31 + 0x20]
	0x03C846E4 LDP X22, X21, [X31 + 0x10]
	0x03C846E8 LDR X30, [X31 + 0x8]
	0x03C846EC MOV V0.16B, V8.16B
	0x03C846F0 LDR V8, [X31], #0x30
	0x03C846F4 BR X3
	0x03C846F8 STR D8, [X31 - 0x30]!
	0x03C846FC STR X30, [X31 + 0x8]
	0x03C84700 STP X22, X21, [X31 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move W1, [X0+52]
	007 Move TEMP, 0
	008 Not TEMP
	009 Move W8, TEMP
	010 Move X19, X0
	011 Move [X0+24], W31
	012 Move [X0+20], W8
	013 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	014 Move W1, [X19+56]
	015 Move W20, W0
	016 Move X0, X19
	017 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	018 Move W1, [X19+52]
	019 Move W21, W0
	020 Move X0, X19
	021 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move W1, [X19+52]
	024 Move X22, [X19+40]
	025 Move X0, X19
	026 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	027 Compare X22, 0
	028 JumpIfEqual {96}
	029 Subtract W2, W0, 2
	030 Move W1, 10
	031 Move X0, X22
	032 Move X3, X31
	033 Call TextHandle.LastIndexOf, X0, X1, X2
	034 Move W9, [X19+52]
	035 Add W8, W0, 1
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X9, [X19+64]
	038 Move [X19+52], W8
	039 Compare X9, 0
	040 JumpIfEqual {45}
	041 Move X8, [X9+24]
	042 Move X0, [X9+64]
	043 Move X1, [X9+40]
	044 NotImplemented "Instruction BLR not yet implemented."
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move W1, [X19+52]
	047 Move X0, X19
	048 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	049 Move W1, [X19+56]
	050 Move W20, W0
	051 Move X0, X19
	052 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move W1, [X19+56]
	055 Move X0, X19
	056 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	057 Move W8, [X19+52]
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move X8, [X19+64]
	060 Move [X19+52], W0
	061 Compare X8, 0
	062 JumpIfNotEqual {81}
	063 Move W8, [X19+52]
	064 Compare W8, 0
	065 JumpIfEqual {74}
	066 Move X8, [X19+64]
	067 Move [X19+52], W31
	068 Compare X8, 0
	069 JumpIfEqual {74}
	070 Move X9, [X8+24]
	071 Move X0, [X8+64]
	072 Move X1, [X8+40]
	073 NotImplemented "Instruction BLR not yet implemented."
	074 Move W8, [X19+56]
	075 Compare W8, 0
	076 JumpIfEqual {90}
	077 Move X8, [X19+72]
	078 Move [X19+56], W31
	079 Compare X8, 0
	080 JumpIfEqual {90}
	081 Move X2, [X8+24]
	082 Move X0, [X8+64]
	083 Move X1, [X8+40]
	084 Move X20, [X31+32]
	085 Move X19, [X31+40]
	086 Move X22, [X31+16]
	087 Move X21, [X31+24]
	088 Move X30, [X31+48]
	089 CallNoReturn X2
	090 Move X20, [X31+32]
	091 Move X19, [X31+40]
	092 Move X22, [X31+16]
	093 Move X21, [X31+24]
	094 Move X30, [X31+48]
	095 Return 
	096 Call 0x1C17F20

Method: System.Void SelectCurrentWord()

Disassembly:
	0x03C84AA4 CBNZ X1, 0x3C84ABC
	0x03C84AA8 ADRP X0, 0xFFFFFFFFFCEA1000
	0x03C84AAC ADD X0, X0, 0x56F
	0x03C84AB0 BL 0x1C16CB8
	0x03C84AB4 MOV X1, X0
	0x03C84AB8 STR X0, [X20 + 0xA08]
	0x03C84ABC MOV W0, W19
	0x03C84AC0 LDP X20, X19, [X31 + 0x10]
	0x03C84AC4 LDR X30, [X31], #0x20
	0x03C84AC8 BR X1
	0x03C84ACC STR X30, [X31 - 0x20]!
	0x03C84AD0 STP X20, X19, [X31 + 0x10]
	0x03C84AD4 ADRP X20, 0x762000
	0x03C84AD8 LDR X1, [X20 + 0xA10]
	0x03C84ADC MOV W19, W0
	0x03C84AE0 CBNZ X1, 0x3C84AF8
	0x03C84AE4 ADRP X0, 0xFFFFFFFFFCE97000
	0x03C84AE8 ADD X0, X0, 0x39F
	0x03C84AEC BL 0x1C16CB8
	0x03C84AF0 MOV X1, X0
	0x03C84AF4 STR X0, [X20 + 0xA10]
	0x03C84AF8 MOV W0, W19
	0x03C84AFC LDP X20, X19, [X31 + 0x10]
	0x03C84B00 LDR X30, [X31], #0x20
	0x03C84B04 BR X1
	0x03C84B08 STP X30, X19, [X31 - 0x10]!
	0x03C84B0C ADRP X19, 0x762000
	0x03C84B10 LDR X0, [X19 + 0xA18]
	0x03C84B14 CBNZ X0, 0x3C84B28
	0x03C84B18 ADRP X0, 0xFFFFFFFFFCE93000
	0x03C84B1C ADD X0, X0, 0x1AF
	0x03C84B20 BL 0x1C16CB8
	0x03C84B24 STR X0, [X19 + 0xA18]
	0x03C84B28 LDP X30, X19, [X31], #0x10
	0x03C84B2C BR X0
	0x03C84B30 SUB X31, X31, 0x70
	0x03C84B34 STP X30, X21, [X31 + 0x50]
	0x03C84B38 STP X20, X19, [X31 + 0x60]
	0x03C84B3C ADRP X21, 0x762000
	0x03C84B40 MOV X19, X8
	0x03C84B44 LDR X8, [X21 + 0xA70]
	0x03C84B48 MOV W20, W0
	0x03C84B4C MOVI V0.2D, 0x0
	0x03C84B50 STR W31, [X31 + 0x40]
	0x03C84B54 STP V0, V0, [X31 + 0x20]
	0x03C84B58 STP V0, V0, [X31]
	0x03C84B5C CBNZ X8, 0x3C84B74
	0x03C84B60 ADRP X0, 0xFFFFFFFFFCE97000
	0x03C84B64 ADD X0, X0, 0x3D1
	0x03C84B68 BL 0x1C16CB8
	0x03C84B6C MOV X8, X0
	0x03C84B70 STR X0, [X21 + 0xA70]
	0x03C84B74 ADD X1, X31, 0x0
	0x03C84B78 MOV W0, W20
	0x03C84B7C BLR X8
	0x03C84B80 ADD X1, X31, 0x0
	0x03C84B84 MOVZ W2, 0x44
	0x03C84B88 MOV X0, X19
	0x03C84B8C BL 0x3EB1AC0
	0x03C84B90 LDP X20, X19, [X31 + 0x60]
	0x03C84B94 LDP X30, X21, [X31 + 0x50]
	0x03C84B98 ADD X31, X31, 0x70
	0x03C84B9C RET
	0x03C84BA0 STP X30, X21, [X31 - 0x20]!
	0x03C84BA4 STP X20, X19, [X31 + 0x10]
	0x03C84BA8 ADRP X21, 0x762000
	0x03C84BAC LDR X2, [X21 + 0xA70]
	0x03C84BB0 MOV X19, X1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W1, [X0+52]
	006 Move X19, X0
	007 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	008 Move W1, [X19+52]
	009 Move W20, W0
	010 Move X0, X19
	011 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	012 Move W1, [X19+56]
	013 Move W21, W0
	014 Move X0, X19
	015 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Move W2, 1
	018 Move X0, X19
	019 Move W1, W20
	020 Call TextSelectingUtilities.FindEndOfClassification, X0, X1, X2
	021 Move W8, [X19+52]
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move X8, [X19+64]
	024 Move [X19+52], W0
	025 Compare X8, 0
	026 JumpIfEqual {31}
	027 Move X9, [X8+24]
	028 Move X0, [X8+64]
	029 Move X1, [X8+40]
	030 NotImplemented "Instruction BLR not yet implemented."
	031 Move X0, X19
	032 Move W1, W20
	033 Move W2, W31
	034 Move X0, X19
	035 Move W1, W20
	036 Move W2, W31
	037 Call TextSelectingUtilities.FindEndOfClassification, X0, X1, X2
	038 Move W8, [X19+52]
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move X8, [X19+64]
	041 Move [X19+52], W0
	042 Compare X8, 0
	043 JumpIfEqual {48}
	044 Move X9, [X8+24]
	045 Move X0, [X8+64]
	046 Move X1, [X8+40]
	047 NotImplemented "Instruction BLR not yet implemented."
	048 Move W2, 1
	049 Move X0, X19
	050 Move W1, W20
	051 Call TextSelectingUtilities.FindEndOfClassification, X0, X1, X2
	052 Move W8, [X19+56]
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move X8, [X19+72]
	055 Move [X19+56], W0
	056 Compare X8, 0
	057 JumpIfEqual {62}
	058 Move X9, [X8+24]
	059 Move X0, [X8+64]
	060 Move X1, [X8+40]
	061 NotImplemented "Instruction BLR not yet implemented."
	062 Move W8, 256
	063 Move TEMP, 0
	064 Not TEMP
	065 Move W9, TEMP
	066 NotImplemented "Instruction STRH not yet implemented."
	067 Move [X19+20], W9
	068 Move X20, [X31+16]
	069 Move X19, [X31+24]
	070 Move X30, [X31+32]
	071 Move X21, [X31+40]
	072 Return 

Method: System.Void SelectCurrentParagraph()

Disassembly:
	0x03C84CF8 MOV W19, W0
	0x03C84CFC CBNZ X1, 0x3C84D14
	0x03C84D00 ADRP X0, 0xFFFFFFFFFCEA3000
	0x03C84D04 ADD X0, X0, 0x31D
	0x03C84D08 BL 0x1C16CB8
	0x03C84D0C MOV X1, X0
	0x03C84D10 STR X0, [X20 + 0x9F0]
	0x03C84D14 MOV W0, W19
	0x03C84D18 LDP X20, X19, [X31 + 0x10]
	0x03C84D1C LDR X30, [X31], #0x20
	0x03C84D20 BR X1
	0x03C84D24 STR X30, [X31 - 0x20]!
	0x03C84D28 STP X20, X19, [X31 + 0x10]
	0x03C84D2C ADRP X20, 0x762000
	0x03C84D30 LDR X1, [X20 + 0x9F8]
	0x03C84D34 MOV W19, W0
	0x03C84D38 CBNZ X1, 0x3C84D50
	0x03C84D3C ADRP X0, 0xFFFFFFFFFCE77000
	0x03C84D40 ADD X0, X0, 0x931
	0x03C84D44 BL 0x1C16CB8
	0x03C84D48 MOV X1, X0
	0x03C84D4C STR X0, [X20 + 0x9F8]
	0x03C84D50 MOV W0, W19
	0x03C84D54 LDP X20, X19, [X31 + 0x10]
	0x03C84D58 LDR X30, [X31], #0x20
	0x03C84D5C BR X1
	0x03C84D60 STP X30, X19, [X31 - 0x10]!
	0x03C84D64 ADRP X19, 0x762000
	0x03C84D68 LDR X0, [X19 + 0xA28]
	0x03C84D6C CBNZ X0, 0x3C84D80
	0x03C84D70 ADRP X0, 0xFFFFFFFFFCE89000
	0x03C84D74 ADD X0, X0, 0x611
	0x03C84D78 BL 0x1C16CB8
	0x03C84D7C STR X0, [X19 + 0xA28]
	0x03C84D80 LDP X30, X19, [X31], #0x10
	0x03C84D84 BR X0
	0x03C84D88 SUB X31, X31, 0x20
	0x03C84D8C STP X30, X19, [X31 + 0x10]
	0x03C84D90 ADRP X19, 0x762000
	0x03C84D94 LDR X8, [X19 + 0xA80]
	0x03C84D98 STR W31, [X31 + 0x8]
	0x03C84D9C STR X31, [X31]
	0x03C84DA0 CBNZ X8, 0x3C84DB8
	0x03C84DA4 ADRP X0, 0xFFFFFFFFFCE97000
	0x03C84DA8 ADD X0, X0, 0x417
	0x03C84DAC BL 0x1C16CB8
	0x03C84DB0 MOV X8, X0
	0x03C84DB4 STR X0, [X19 + 0xA80]
	0x03C84DB8 ADD X0, X31, 0x0
	0x03C84DBC BLR X8
	0x03C84DC0 LDP S0, S1, [X31]
	0x03C84DC4 LDR V2, [X31 + 0x8]
	0x03C84DC8 LDP X30, X19, [X31 + 0x10]
	0x03C84DCC ADD X31, X31, 0x20
	0x03C84DD0 RET
	0x03C84DD4 STR X30, [X31 - 0x20]!
	0x03C84DD8 STP X20, X19, [X31 + 0x10]
	0x03C84DDC ADRP X20, 0x762000
	0x03C84DE0 LDR X1, [X20 + 0xA80]
	0x03C84DE4 MOV X19, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move TEMP, 0
	005 Not TEMP
	006 Move W8, TEMP
	007 Move X19, X0
	008 Move [X0+24], W31
	009 Move [X0+20], W8
	010 Call TextSelectingUtilities.get_characterCount, X0
	011 Move W1, [X19+52]
	012 Move W20, W0
	013 Move X0, X19
	014 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	015 NotImplemented "Instruction CMP not yet implemented."
	016 Move W1, [X19+52]
	017 Move X0, X19
	018 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	019 Move W1, W0
	020 Move X0, X19
	021 Call TextSelectingUtilities.IndexOfEndOfLine, X0, X1
	022 Move W8, [X19+52]
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move X8, [X19+64]
	025 Move [X19+52], W0
	026 Compare X8, 0
	027 JumpIfEqual {32}
	028 Move X9, [X8+24]
	029 Move X0, [X8+64]
	030 Move X1, [X8+40]
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move W1, [X19+56]
	033 Move X0, X19
	034 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	035 Compare W0, 0
	036 JumpIfEqual {62}
	037 Move W1, [X19+56]
	038 Move X20, [X19+40]
	039 Move X0, X19
	040 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	041 Compare X20, 0
	042 JumpIfEqual {66}
	043 Subtract W2, W0, 1
	044 Move W1, 10
	045 Move X0, X20
	046 Move X3, X31
	047 Call TextHandle.LastIndexOf, X0, X1, X2
	048 Move W9, [X19+56]
	049 Add W8, W0, 1
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move X9, [X19+72]
	052 Move [X19+56], W8
	053 Compare X9, 0
	054 JumpIfEqual {62}
	055 Move X2, [X9+24]
	056 Move X0, [X9+64]
	057 Move X1, [X9+40]
	058 Move X20, [X31+16]
	059 Move X19, [X31+24]
	060 Move X30, [X31+32]
	061 CallNoReturn X2
	062 Move X20, [X31+16]
	063 Move X19, [X31+24]
	064 Move X30, [X31+32]
	065 Return 
	066 Call 0x1C17F20

Method: System.Void MoveRight()

Disassembly:
	0x03C7D61C BL 0x3C7B9D0
	0x03C7D620 LDR X0, [X20]
	0x03C7D624 LDR W8, [X0 + 0xE0]
	0x03C7D628 CBNZ W8, 0x3C7D630
	0x03C7D62C BL 0x1C16DFC
	0x03C7D630 MOV X0, X31
	0x03C7D634 BL 0x3C753A0
	0x03C7D638 LDR X1, [X21]
	0x03C7D63C MOV X2, X31
	0x03C7D640 MOV X21, X0
	0x03C7D644 BL 0x3226EF8
	0x03C7D648 MOV W20, W0
	0x03C7D64C TBZ X0, 0x0, 0x3C7D670
	0x03C7D650 LDRB W8, [X19 + 0x26]
	0x03C7D654 CBNZ W8, 0x3C7D664
	0x03C7D658 MOV X0, X21
	0x03C7D65C BL 0x3C7E114
	0x03C7D660 MOV X21, X0
	0x03C7D664 MOV X0, X19
	0x03C7D668 MOV X1, X21
	0x03C7D66C BL 0x3C7B79C
	0x03C7D670 AND W0, W20, 0x1
	0x03C7D674 LDP X20, X19, [X31 + 0x10]
	0x03C7D678 LDP X30, X21, [X31], #0x20
	0x03C7D67C RET
	0x03C7D680 STP X30, X21, [X31 - 0x20]!
	0x03C7D684 STP X20, X19, [X31 + 0x10]
	0x03C7D688 MOV X19, X0
	0x03C7D68C BL 0x3C7B9D0
	0x03C7D690 MOV X0, X19
	0x03C7D694 BL 0x3C7B40C
	0x03C7D698 TBZ X0, 0x0, 0x3C7D6A8
	0x03C7D69C MOV X0, X19
	0x03C7D6A0 BL 0x3C7D980
	0x03C7D6A4 B 0x3C7D728
	0x03C7D6A8 LDR X20, [X19 + 0x10]
	0x03C7D6AC MOV X0, X19
	0x03C7D6B0 BL 0x3C7B500
	0x03C7D6B4 CBZ X20, 0x3C7D738
	0x03C7D6B8 MOV W1, W0
	0x03C7D6BC MOV X0, X20
	0x03C7D6C0 BL 0x3C7DB28
	0x03C7D6C4 MOV W20, W0
	0x03C7D6C8 MOV X0, X19
	0x03C7D6CC BL 0x3C7B500
	0x03C7D6D0 CMP W0, W20
	0x03C7D6D4 B.NE 0x3C7D6E0
	0x03C7D6D8 MOV W0, W31
	0x03C7D6DC B 0x3C7D72C
	0x03C7D6E0 LDR X21, [X19 + 0x28]
	0x03C7D6E4 MOV X0, X19
	0x03C7D6E8 BL 0x3C7B500
	0x03C7D6EC CBZ X21, 0x3C7D738
	0x03C7D6F0 SUB W2, W0, W20
	0x03C7D6F4 MOV X0, X21
	0x03C7D6F8 MOV W1, W20
	0x03C7D6FC MOV X3, X31
	0x03C7D700 BL 0x3228B90
	0x03C7D704 MOV X1, X0
	0x03C7D708 MOV X0, X19
	0x03C7D70C BL 0x3C7B630
	0x03C7D710 MOV X0, X19
	0x03C7D714 MOV W1, W20
	0x03C7D718 BL 0x3C7B524
	0x03C7D71C MOV X0, X19
	0x03C7D720 MOV W1, W20
	0x03C7D724 BL 0x3C7B5B8
	0x03C7D728 MOVZ W0, 0x1
	0x03C7D72C LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W1, [X0+56]
	005 Move TEMP, 0
	006 Not TEMP
	007 Move W8, TEMP
	008 Move X19, X0
	009 Move [X0+24], W31
	010 Move [X0+20], W8
	011 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	012 Move W1, [X19+52]
	013 Move W20, W0
	014 Move X0, X19
	015 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Move W1, [X19+52]
	018 Move X0, X19
	019 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	020 Move W1, W0
	021 Move X0, X19
	022 Call TextSelectingUtilities.NextCodePointIndex, X0, X1
	023 Move W8, [X19+52]
	024 Move W1, W0
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X8, [X19+64]
	027 Move [X19+52], W1
	028 Compare X8, 0
	029 JumpIfEqual {52}
	030 Move X9, [X8+24]
	031 Move X0, [X8+64]
	032 Move X1, [X8+40]
	033 NotImplemented "Instruction BLR not yet implemented."
	034 Move W1, [X19+56]
	035 Move X0, X19
	036 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	037 Move W1, [X19+52]
	038 Move W20, W0
	039 Move X0, X19
	040 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move W1, [X19+56]
	043 Move X0, X19
	044 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	045 Move W8, [X19+52]
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move X8, [X19+64]
	048 Move [X19+52], W0
	049 Compare X8, 0
	050 JumpIfNotEqual {60}
	051 Move W1, [X19+52]
	052 Move X0, X19
	053 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	054 Move W8, [X19+56]
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move X8, [X19+72]
	057 Move [X19+56], W0
	058 Compare X8, 0
	059 JumpIfEqual {67}
	060 Move X2, [X8+24]
	061 Move X0, [X8+64]
	062 Move X1, [X8+40]
	063 Move X20, [X31+16]
	064 Move X19, [X31+24]
	065 Move X30, [X31+32]
	066 CallNoReturn X2
	067 Move X20, [X31+16]
	068 Move X19, [X31+24]
	069 Move X30, [X31+32]
	070 Return 

Method: System.Void MoveLeft()

Disassembly:
	0x03C7D510 BL 0x3C7D980
	0x03C7D514 B 0x3C7D590
	0x03C7D518 MOV X0, X19
	0x03C7D51C BL 0x3C7B500
	0x03C7D520 CMP W0, 0x1
	0x03C7D524 B.LT 0x3C7D5A0
	0x03C7D528 LDR X20, [X19 + 0x10]
	0x03C7D52C MOV X0, X19
	0x03C7D530 BL 0x3C7B500
	0x03C7D534 CBZ X20, 0x3C7D5A8
	0x03C7D538 MOV W1, W0
	0x03C7D53C MOV X0, X20
	0x03C7D540 BL 0x3C7DEA8
	0x03C7D544 LDR X21, [X19 + 0x28]
	0x03C7D548 MOV W20, W0
	0x03C7D54C MOV X0, X19
	0x03C7D550 BL 0x3C7B500
	0x03C7D554 CBZ X21, 0x3C7D5A8
	0x03C7D558 SUB W2, W0, W20
	0x03C7D55C MOV X0, X21
	0x03C7D560 MOV W1, W20
	0x03C7D564 MOV X3, X31
	0x03C7D568 BL 0x3228B90
	0x03C7D56C MOV X1, X0
	0x03C7D570 MOV X0, X19
	0x03C7D574 BL 0x3C7B630
	0x03C7D578 LDR X8, [X19 + 0x10]
	0x03C7D57C CBZ X8, 0x3C7D5A8
	0x03C7D580 MOVN W9, 0x0
	0x03C7D584 STP W20, W20, [X8 + 0x34]
	0x03C7D588 STRB W31, [X8 + 0x18]
	0x03C7D58C STR W9, [X8 + 0x14]
	0x03C7D590 MOVZ W0, 0x1
	0x03C7D594 LDP X20, X19, [X31 + 0x10]
	0x03C7D598 LDP X30, X21, [X31], #0x20
	0x03C7D59C RET
	0x03C7D5A0 MOV W0, W31
	0x03C7D5A4 B 0x3C7D594
	0x03C7D5A8 BL 0x1C16F20
	0x03C7D5AC STP X30, X19, [X31 - 0x10]!
	0x03C7D5B0 MOV X19, X0
	0x03C7D5B4 LDR X0, [X0 + 0x10]
	0x03C7D5B8 CBZ X0, 0x3C7D5CC
	0x03C7D5BC BL 0x3C7E07C
	0x03C7D5C0 MOV X0, X19
	0x03C7D5C4 LDP X30, X19, [X31], #0x10
	0x03C7D5C8 B 0x3C7D980
	0x03C7D5CC BL 0x1C16F20
	0x03C7D5D0 STP X30, X21, [X31 - 0x20]!
	0x03C7D5D4 STP X20, X19, [X31 + 0x10]
	0x03C7D5D8 ADRP X21, 0x769000
	0x03C7D5DC ADRP X20, 0x4A2000
	0x03C7D5E0 LDRB W8, [X21 + 0x9B1]
	0x03C7D5E4 LDR X20, [X20 + 0x5C8]
	0x03C7D5E8 MOV X19, X0
	0x03C7D5EC TBNZ X8, 0x0, 0x3C7D610
	0x03C7D5F0 ADRP X0, 0x4A2000
	0x03C7D5F4 LDR X0, [X0 + 0x5C8]
	0x03C7D5F8 BL 0x1C16CF4
	0x03C7D5FC ADRP X0, 0x476000
	0x03C7D600 LDR X0, [X0 + 0x988]
	0x03C7D604 BL 0x1C16CF4
	0x03C7D608 MOVZ W8, 0x1
	0x03C7D60C STRB W8, [X21 + 0x9B1]
	0x03C7D610 ADRP X21, 0x476000
	0x03C7D614 LDR X21, [X21 + 0x988]
	0x03C7D618 MOV X0, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W1, [X0+56]
	005 Move X19, X0
	006 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	007 Move W1, [X19+52]
	008 Move W20, W0
	009 Move X0, X19
	010 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Move W1, [X19+52]
	013 Move X0, X19
	014 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	015 Move W1, W0
	016 Move X0, X19
	017 Call TextSelectingUtilities.PreviousCodePointIndex, X0, X1
	018 Move W8, [X19+52]
	019 Move W1, W0
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Move X8, [X19+64]
	022 Move [X19+52], W1
	023 Compare X8, 0
	024 JumpIfEqual {38}
	025 Move X9, [X8+24]
	026 Move X0, [X8+64]
	027 Move X1, [X8+40]
	028 NotImplemented "Instruction BLR not yet implemented."
	029 Move W1, [X19+56]
	030 Move X0, X19
	031 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	032 Move W1, [X19+52]
	033 Move W20, W0
	034 Move X0, X19
	035 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move W1, [X19+52]
	038 Move X0, X19
	039 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	040 Move W8, [X19+56]
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move X8, [X19+72]
	043 Move [X19+56], W0
	044 Compare X8, 0
	045 JumpIfNotEqual {55}
	046 Move W1, [X19+56]
	047 Move X0, X19
	048 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	049 Move W8, [X19+52]
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move X8, [X19+64]
	052 Move [X19+52], W0
	053 Compare X8, 0
	054 JumpIfEqual {59}
	055 Move X9, [X8+24]
	056 Move X0, [X8+64]
	057 Move X1, [X8+40]
	058 NotImplemented "Instruction BLR not yet implemented."
	059 Move TEMP, 0
	060 Not TEMP
	061 Move W8, TEMP
	062 Move [X19+24], W31
	063 Move [X19+20], W8
	064 Move X20, [X31+16]
	065 Move X19, [X31+24]
	066 Move X30, [X31+32]
	067 Return 

Method: System.Void MoveUp()

Disassembly:
	0x03C7D730 LDP X30, X21, [X31], #0x20
	0x03C7D734 RET
	0x03C7D738 BL 0x1C16F20
	0x03C7D73C STP X30, X21, [X31 - 0x20]!
	0x03C7D740 STP X20, X19, [X31 + 0x10]
	0x03C7D744 MOV X19, X0
	0x03C7D748 BL 0x3C7B9D0
	0x03C7D74C MOV X0, X19
	0x03C7D750 BL 0x3C7B40C
	0x03C7D754 TBZ X0, 0x0, 0x3C7D768
	0x03C7D758 MOV X0, X19
	0x03C7D75C BL 0x3C7D980
	0x03C7D760 MOVZ W0, 0x1
	0x03C7D764 B 0x3C7D7B4
	0x03C7D768 MOV X0, X19
	0x03C7D76C BL 0x3C7B500
	0x03C7D770 MOV W21, W0
	0x03C7D774 MOV W20, W21
	0x03C7D778 CBZ W21, 0x3C7D7A0
	0x03C7D77C LDR X0, [X19 + 0x28]
	0x03C7D780 CBZ X0, 0x3C7D830
	0x03C7D784 SUB W21, W20, 0x1
	0x03C7D788 MOV W1, W21
	0x03C7D78C MOV X2, X31
	0x03C7D790 BL 0x3222A1C
	0x03C7D794 AND W8, W0, 0xFFFF
	0x03C7D798 CMP W8, 0xA
	0x03C7D79C B.NE 0x3C7D774
	0x03C7D7A0 MOV X0, X19
	0x03C7D7A4 BL 0x3C7B500
	0x03C7D7A8 CMP W0, W20
	0x03C7D7AC B.NE 0x3C7D7C0
	0x03C7D7B0 MOV W0, W31
	0x03C7D7B4 LDP X20, X19, [X31 + 0x10]
	0x03C7D7B8 LDP X30, X21, [X31], #0x20
	0x03C7D7BC RET
	0x03C7D7C0 LDR X21, [X19 + 0x28]
	0x03C7D7C4 MOV X0, X19
	0x03C7D7C8 BL 0x3C7B500
	0x03C7D7CC CBZ X21, 0x3C7D830
	0x03C7D7D0 SUB W2, W0, W20
	0x03C7D7D4 MOV X0, X21
	0x03C7D7D8 MOV W1, W20
	0x03C7D7DC MOV X3, X31
	0x03C7D7E0 BL 0x3228B90
	0x03C7D7E4 MOV X1, X0
	0x03C7D7E8 MOV X0, X19
	0x03C7D7EC BL 0x3C7B630
	0x03C7D7F0 LDR X21, [X19 + 0x10]
	0x03C7D7F4 MOV X0, X19
	0x03C7D7F8 MOV W1, W20
	0x03C7D7FC BL 0x3C7B524
	0x03C7D800 CBZ X21, 0x3C7D830
	0x03C7D804 LDR W8, [X21 + 0x38]
	0x03C7D808 CMP W8, W20
	0x03C7D80C B.EQ 0x3C7D760
	0x03C7D810 LDR X8, [X21 + 0x48]
	0x03C7D814 STR W20, [X21 + 0x38]
	0x03C7D818 CBZ X8, 0x3C7D760
	0x03C7D81C LDR X9, [X8 + 0x18]
	0x03C7D820 LDR X0, [X8 + 0x40]
	0x03C7D824 LDR X1, [X8 + 0x28]
	0x03C7D828 BLR X9
	0x03C7D82C B 0x3C7D760
	0x03C7D830 BL 0x1C16F20
	0x03C7D834 STR X30, [X31 - 0x30]!
	0x03C7D838 STP X22, X21, [X31 + 0x10]
	0x03C7D83C STP X20, X19, [X31 + 0x20]
	0x03C7D840 MOV X19, X0
	0x03C7D844 BL 0x3C7B9D0
	0x03C7D848 MOV X0, X19
	0x03C7D84C BL 0x3C7B40C
	0x03C7D850 TBZ X0, 0x0, 0x3C7D860
	0x03C7D854 MOV X0, X19
	0x03C7D858 BL 0x3C7D980
	0x03C7D85C B 0x3C7D8D0
	0x03C7D860 LDR X20, [X19 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W1, [X0+56]
	005 Move X19, X0
	006 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	007 Move W1, [X19+52]
	008 Move W20, W0
	009 Move X0, X19
	010 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Move W1, [X19+52]
	013 Move X0, X19
	014 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	015 Move W8, [X19+56]
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Move X8, [X19+72]
	018 Move [X19+56], W0
	019 Compare X8, 0
	020 JumpIfNotEqual {30}
	021 Move W1, [X19+56]
	022 Move X0, X19
	023 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	024 Move W8, [X19+52]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X8, [X19+64]
	027 Move [X19+52], W0
	028 Compare X8, 0
	029 JumpIfEqual {34}
	030 Move X9, [X8+24]
	031 Move X0, [X8+64]
	032 Move X1, [X8+40]
	033 NotImplemented "Instruction BLR not yet implemented."
	034 Move W1, [X19+52]
	035 Move X20, [X19+40]
	036 Move X0, X19
	037 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	038 Compare X20, 0
	039 JumpIfEqual {79}
	040 Move W1, W0
	041 Move X0, X20
	042 Move X2, X31
	043 Call TextHandle.LineUpCharacterPosition, X0, X1
	044 Move W8, [X19+56]
	045 Move W20, W0
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move X8, [X19+72]
	048 Move [X19+56], W20
	049 Compare X8, 0
	050 JumpIfEqual {55}
	051 Move X9, [X8+24]
	052 Move X0, [X8+64]
	053 Move X1, [X8+40]
	054 NotImplemented "Instruction BLR not yet implemented."
	055 Move W8, [X19+52]
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move X8, [X19+64]
	058 Move [X19+52], W20
	059 Compare X8, 0
	060 JumpIfEqual {66}
	061 Move X9, [X8+24]
	062 Move X0, [X8+64]
	063 Move X1, [X8+40]
	064 NotImplemented "Instruction BLR not yet implemented."
	065 Move W20, [X19+52]
	066 Move X0, X19
	067 Move W1, W20
	068 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move TEMP, 0
	071 Not TEMP
	072 Move W8, TEMP
	073 Move [X19+24], W31
	074 Move [X19+20], W8
	075 Move X20, [X31+16]
	076 Move X19, [X31+24]
	077 Move X30, [X31+32]
	078 Return 
	079 Call 0x1C17F20

Method: System.Void MoveDown()

Disassembly:
	0x03C7D864 MOV X0, X19
	0x03C7D868 BL 0x3C7B500
	0x03C7D86C CBZ X20, 0x3C7D8EC
	0x03C7D870 MOV W1, W0
	0x03C7D874 MOV X0, X20
	0x03C7D878 BL 0x3C7DC04
	0x03C7D87C MOV W20, W0
	0x03C7D880 MOV X0, X19
	0x03C7D884 BL 0x3C7B500
	0x03C7D888 LDR X21, [X19 + 0x28]
	0x03C7D88C CBZ X21, 0x3C7D8EC
	0x03C7D890 LDR W8, [X21 + 0x10]
	0x03C7D894 CMP W0, W8
	0x03C7D898 B.GE 0x3C7D8D8
	0x03C7D89C MOV X0, X19
	0x03C7D8A0 BL 0x3C7B500
	0x03C7D8A4 MOV W22, W0
	0x03C7D8A8 MOV X0, X19
	0x03C7D8AC BL 0x3C7B500
	0x03C7D8B0 SUB W2, W20, W0
	0x03C7D8B4 MOV X0, X21
	0x03C7D8B8 MOV W1, W22
	0x03C7D8BC MOV X3, X31
	0x03C7D8C0 BL 0x3228B90
	0x03C7D8C4 MOV X1, X0
	0x03C7D8C8 MOV X0, X19
	0x03C7D8CC BL 0x3C7B630
	0x03C7D8D0 MOVZ W0, 0x1
	0x03C7D8D4 B 0x3C7D8DC
	0x03C7D8D8 MOV W0, W31
	0x03C7D8DC LDP X20, X19, [X31 + 0x20]
	0x03C7D8E0 LDP X22, X21, [X31 + 0x10]
	0x03C7D8E4 LDR X30, [X31], #0x30
	0x03C7D8E8 RET
	0x03C7D8EC BL 0x1C16F20
	0x03C7D8F0 STR X30, [X31 - 0x30]!
	0x03C7D8F4 STP X22, X21, [X31 + 0x10]
	0x03C7D8F8 STP X20, X19, [X31 + 0x20]
	0x03C7D8FC ADRP X21, 0x769000
	0x03C7D900 ADRP X22, 0x4E3000
	0x03C7D904 LDRB W8, [X21 + 0x9AD]
	0x03C7D908 LDR X22, [X22 + 0x5B0]
	0x03C7D90C MOV W19, W1
	0x03C7D910 MOV X20, X0
	0x03C7D914 TBNZ X8, 0x0, 0x3C7D938
	0x03C7D918 ADRP X0, 0x4E3000
	0x03C7D91C LDR X0, [X0 + 0x6C8]
	0x03C7D920 BL 0x1C16CF4
	0x03C7D924 ADRP X0, 0x4E3000
	0x03C7D928 LDR X0, [X0 + 0x5B0]
	0x03C7D92C BL 0x1C16CF4
	0x03C7D930 MOVZ W8, 0x1
	0x03C7D934 STRB W8, [X21 + 0x9AD]
	0x03C7D938 LDR X8, [X22]
	0x03C7D93C MOV X0, X20
	0x03C7D940 MOV X1, X31
	0x03C7D944 LDR X8, [X8 + 0xB8]
	0x03C7D948 LDR X21, [X8]
	0x03C7D94C BL 0x3C63B3C
	0x03C7D950 CBZ X21, 0x3C7D97C
	0x03C7D954 ADRP X8, 0x4E3000
	0x03C7D958 LDR X8, [X8 + 0x6C8]
	0x03C7D95C MOV X1, X0
	0x03C7D960 MOV X0, X21
	0x03C7D964 MOV W2, W19
	0x03C7D968 LDR X3, [X8]
	0x03C7D96C LDP X20, X19, [X31 + 0x20]
	0x03C7D970 LDP X22, X21, [X31 + 0x10]
	0x03C7D974 LDR X30, [X31], #0x30
	0x03C7D978 B 0x2AA2008
	0x03C7D97C BL 0x1C16F20
	0x03C7D980 STP X30, X25, [X31 - 0x40]!
	0x03C7D984 STP X24, X23, [X31 + 0x10]
	0x03C7D988 STP X22, X21, [X31 + 0x20]
	0x03C7D98C STP X20, X19, [X31 + 0x30]
	0x03C7D990 MOV X20, X0
	0x03C7D994 BL 0x3C7B500
	0x03C7D998 MOV W19, W0
	0x03C7D99C MOV X0, X20
	0x03C7D9A0 BL 0x3C7B594

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W1, [X0+56]
	005 Move X19, X0
	006 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	007 Move W1, [X19+52]
	008 Move W20, W0
	009 Move X0, X19
	010 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Move W1, [X19+52]
	013 Move X0, X19
	014 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	015 Move W8, [X19+56]
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Move X8, [X19+72]
	018 Move [X19+56], W0
	019 Compare X8, 0
	020 JumpIfNotEqual {30}
	021 Move W1, [X19+56]
	022 Move X0, X19
	023 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	024 Move W8, [X19+52]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X8, [X19+64]
	027 Move [X19+52], W0
	028 Compare X8, 0
	029 JumpIfEqual {34}
	030 Move X9, [X8+24]
	031 Move X0, [X8+64]
	032 Move X1, [X8+40]
	033 NotImplemented "Instruction BLR not yet implemented."
	034 Move W1, [X19+52]
	035 Move X20, [X19+40]
	036 Move X0, X19
	037 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	038 Compare X20, 0
	039 JumpIfEqual {82}
	040 Move W1, W0
	041 Move X0, X20
	042 Move X2, X31
	043 Call TextHandle.LineDownCharacterPosition, X0, X1
	044 Move W8, [X19+56]
	045 Move W20, W0
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move X8, [X19+72]
	048 Move [X19+56], W20
	049 Compare X8, 0
	050 JumpIfEqual {55}
	051 Move X9, [X8+24]
	052 Move X0, [X8+64]
	053 Move X1, [X8+40]
	054 NotImplemented "Instruction BLR not yet implemented."
	055 Move W8, [X19+52]
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move X8, [X19+64]
	058 Move [X19+52], W20
	059 Compare X8, 0
	060 JumpIfEqual {66}
	061 Move X9, [X8+24]
	062 Move X0, [X8+64]
	063 Move X1, [X8+40]
	064 NotImplemented "Instruction BLR not yet implemented."
	065 Move W20, [X19+52]
	066 Move X0, X19
	067 Move W1, W20
	068 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	069 Move W20, W0
	070 Move X0, X19
	071 Call TextSelectingUtilities.get_characterCount, X0
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Move TEMP, 0
	074 Not TEMP
	075 Move W8, TEMP
	076 Move [X19+24], W31
	077 Move [X19+20], W8
	078 Move X20, [X31+16]
	079 Move X19, [X31+24]
	080 Move X30, [X31+32]
	081 Return 
	082 Call 0x1C17F20

Method: System.Void MoveLineStart()

Disassembly:
	0x03C7D9A4 MOV W21, W0
	0x03C7D9A8 CMP W19, W0
	0x03C7D9AC B.EQ 0x3C7DB08
	0x03C7D9B0 MOV X0, X20
	0x03C7D9B4 BL 0x3C7B500
	0x03C7D9B8 MOV W23, W0
	0x03C7D9BC MOV X0, X20
	0x03C7D9C0 BL 0x3C7B594
	0x03C7D9C4 LDR X22, [X20 + 0x28]
	0x03C7D9C8 CMP W23, W0
	0x03C7D9CC B.GE 0x3C7DA64
	0x03C7D9D0 MOV X0, X20
	0x03C7D9D4 BL 0x3C7B500
	0x03C7D9D8 CBZ X22, 0x3C7DB24
	0x03C7D9DC MOV W2, W0
	0x03C7D9E0 MOV X0, X22
	0x03C7D9E4 MOV W1, W31
	0x03C7D9E8 MOV X3, X31
	0x03C7D9EC BL 0x3228DE4
	0x03C7D9F0 LDR X23, [X20 + 0x28]
	0x03C7D9F4 MOV X22, X0
	0x03C7D9F8 MOV X0, X20
	0x03C7D9FC BL 0x3C7B594
	0x03C7DA00 LDR X8, [X20 + 0x28]
	0x03C7DA04 CBZ X8, 0x3C7DB24
	0x03C7DA08 LDR W25, [X8 + 0x10]
	0x03C7DA0C MOV W24, W0
	0x03C7DA10 MOV X0, X20
	0x03C7DA14 BL 0x3C7B594
	0x03C7DA18 CBZ X23, 0x3C7DB24
	0x03C7DA1C SUB W2, W25, W0
	0x03C7DA20 MOV X0, X23
	0x03C7DA24 MOV W1, W24
	0x03C7DA28 MOV X3, X31
	0x03C7DA2C BL 0x3228DE4
	0x03C7DA30 MOV X1, X0
	0x03C7DA34 MOV X0, X22
	0x03C7DA38 MOV X2, X31
	0x03C7DA3C BL 0x321B938
	0x03C7DA40 MOV X1, X0
	0x03C7DA44 MOV X0, X20
	0x03C7DA48 BL 0x3C7B630
	0x03C7DA4C LDR X22, [X20 + 0x10]
	0x03C7DA50 MOV X0, X20
	0x03C7DA54 BL 0x3C7B500
	0x03C7DA58 CBZ X22, 0x3C7DB24
	0x03C7DA5C STR W0, [X22 + 0x38]
	0x03C7DA60 B 0x3C7DAF4
	0x03C7DA64 MOV X0, X20
	0x03C7DA68 BL 0x3C7B594
	0x03C7DA6C CBZ X22, 0x3C7DB24
	0x03C7DA70 MOV W2, W0
	0x03C7DA74 MOV X0, X22
	0x03C7DA78 MOV W1, W31
	0x03C7DA7C MOV X3, X31
	0x03C7DA80 BL 0x3228DE4
	0x03C7DA84 LDR X23, [X20 + 0x28]
	0x03C7DA88 MOV X22, X0
	0x03C7DA8C MOV X0, X20
	0x03C7DA90 BL 0x3C7B500
	0x03C7DA94 LDR X8, [X20 + 0x28]
	0x03C7DA98 CBZ X8, 0x3C7DB24
	0x03C7DA9C LDR W25, [X8 + 0x10]
	0x03C7DAA0 MOV W24, W0
	0x03C7DAA4 MOV X0, X20
	0x03C7DAA8 BL 0x3C7B500
	0x03C7DAAC CBZ X23, 0x3C7DB24
	0x03C7DAB0 SUB W2, W25, W0
	0x03C7DAB4 MOV X0, X23
	0x03C7DAB8 MOV W1, W24
	0x03C7DABC MOV X3, X31
	0x03C7DAC0 BL 0x3228DE4
	0x03C7DAC4 MOV X1, X0
	0x03C7DAC8 MOV X0, X22
	0x03C7DACC MOV X2, X31
	0x03C7DAD0 BL 0x321B938
	0x03C7DAD4 MOV X1, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move W1, [X0+56]
	007 Move X19, X0
	008 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	009 Move W1, [X19+52]
	010 Move W20, W0
	011 Move X0, X19
	012 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	013 NotImplemented "Instruction CMP not yet implemented."
	014 Move W8, 52
	015 Move W9, 56
	016 NotImplemented "Instruction CSEL not yet implemented."
	017 Move W1, [X19]
	018 Move X0, X19
	019 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	020 Add W22, W0, 1
	021 Move W21, 392
	022 Subtract W20, W22, 1
	023 Move X0, X19
	024 Call TextSelectingUtilities.get_m_TextElementInfos, X0
	025 Compare X0, 0
	026 JumpIfEqual {84}
	027 Move W9, [X0+24]
	028 Subtract W8, W22, 2
	029 NotImplemented "Instruction CMP not yet implemented."
	030 NotImplemented "Instruction SMADDL not yet implemented."
	031 NotImplemented "Instruction LDRH not yet implemented."
	032 Move W22, W20
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move W8, [X19+52]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move X8, [X19+64]
	037 Move [X19+52], W20
	038 Compare X8, 0
	039 JumpIfEqual {44}
	040 Move X9, [X8+24]
	041 Move X0, [X8+64]
	042 Move X1, [X8+40]
	043 NotImplemented "Instruction BLR not yet implemented."
	044 Move W8, [X19+56]
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move X8, [X19+72]
	047 Move [X19+56], W20
	048 Compare X8, 0
	049 JumpIfNotEqual {68}
	050 Move W8, [X19+52]
	051 Compare W8, 0
	052 JumpIfEqual {61}
	053 Move X8, [X19+64]
	054 Move [X19+52], W31
	055 Compare X8, 0
	056 JumpIfEqual {61}
	057 Move X9, [X8+24]
	058 Move X0, [X8+64]
	059 Move X1, [X8+40]
	060 NotImplemented "Instruction BLR not yet implemented."
	061 Move W8, [X19+56]
	062 Compare W8, 0
	063 JumpIfEqual {77}
	064 Move X8, [X19+72]
	065 Move [X19+56], W31
	066 Compare X8, 0
	067 JumpIfEqual {77}
	068 Move X2, [X8+24]
	069 Move X0, [X8+64]
	070 Move X1, [X8+40]
	071 Move X20, [X31+32]
	072 Move X19, [X31+40]
	073 Move X22, [X31+16]
	074 Move X21, [X31+24]
	075 Move X30, [X31+48]
	076 CallNoReturn X2
	077 Move X20, [X31+32]
	078 Move X19, [X31+40]
	079 Move X22, [X31+16]
	080 Move X21, [X31+24]
	081 Move X30, [X31+48]
	082 Return 
	083 Call 0x1C17F28
	084 Call 0x1C17F20

Method: System.Void MoveLineEnd()

Disassembly:
	0x03C7DAD8 MOV X0, X20
	0x03C7DADC BL 0x3C7B630
	0x03C7DAE0 LDR X22, [X20 + 0x10]
	0x03C7DAE4 MOV X0, X20
	0x03C7DAE8 BL 0x3C7B594
	0x03C7DAEC CBZ X22, 0x3C7DB24
	0x03C7DAF0 STR W0, [X22 + 0x34]
	0x03C7DAF4 LDR X8, [X20 + 0x10]
	0x03C7DAF8 CBZ X8, 0x3C7DB24
	0x03C7DAFC MOVN W9, 0x0
	0x03C7DB00 STRB W31, [X8 + 0x18]
	0x03C7DB04 STR W9, [X8 + 0x14]
	0x03C7DB08 CMP W19, W21
	0x03C7DB0C LDP X20, X19, [X31 + 0x30]
	0x03C7DB10 LDP X22, X21, [X31 + 0x20]
	0x03C7DB14 LDP X24, X23, [X31 + 0x10]
	0x03C7DB18 CSET W0, NE
	0x03C7DB1C LDP X30, X25, [X31], #0x40
	0x03C7DB20 RET
	0x03C7DB24 BL 0x1C16F20
	0x03C7DB28 STP X30, X21, [X31 - 0x20]!
	0x03C7DB2C STP X20, X19, [X31 + 0x10]
	0x03C7DB30 CBZ W1, 0x3C7DBE8
	0x03C7DB34 MOV X19, X0
	0x03C7DB38 BL 0x3C7DEA8
	0x03C7DB3C MOV W20, W0
	0x03C7DB40 CMP W0, 0x1
	0x03C7DB44 B.LT 0x3C7DB8C
	0x03C7DB48 MOVZ W21, 0x188
	0x03C7DB4C MOV X0, X19
	0x03C7DB50 BL 0x3C8238C
	0x03C7DB54 CBZ X0, 0x3C7DBFC
	0x03C7DB58 LDR W8, [X0 + 0x18]
	0x03C7DB5C CMP W20, W8
	0x03C7DB60 B.CS 0x3C7DC00
	0x03C7DB64 UMADDL X8, X20, X21, X0
	0x03C7DB68 LDRH W8, [X8 + 0x20]
	0x03C7DB6C CMP W8, 0x20
	0x03C7DB70 B.NE 0x3C7DB8C
	0x03C7DB74 MOV X0, X19
	0x03C7DB78 MOV W1, W20
	0x03C7DB7C BL 0x3C7DEA8
	0x03C7DB80 MOV W20, W0
	0x03C7DB84 CMP W0, 0x1
	0x03C7DB88 B.GE 0x3C7DB4C
	0x03C7DB8C MOV X0, X19
	0x03C7DB90 MOV W1, W20
	0x03C7DB94 BL 0x3C8432C
	0x03C7DB98 CMP W0, 0x3
	0x03C7DB9C B.EQ 0x3C7DBEC
	0x03C7DBA0 CMP W20, 0x1
	0x03C7DBA4 B.LT 0x3C7DBEC
	0x03C7DBA8 MOV W21, W0
	0x03C7DBAC MOV X0, X19
	0x03C7DBB0 MOV W1, W20
	0x03C7DBB4 BL 0x3C7DEA8
	0x03C7DBB8 MOV W1, W0
	0x03C7DBBC MOV X0, X19
	0x03C7DBC0 BL 0x3C8432C
	0x03C7DBC4 CMP W0, W21
	0x03C7DBC8 B.NE 0x3C7DBEC
	0x03C7DBCC MOV X0, X19
	0x03C7DBD0 MOV W1, W20
	0x03C7DBD4 BL 0x3C7DEA8
	0x03C7DBD8 MOV W20, W0
	0x03C7DBDC CMP W0, 0x1
	0x03C7DBE0 B.GE 0x3C7DBAC
	0x03C7DBE4 B 0x3C7DBEC
	0x03C7DBE8 MOV W20, W31
	0x03C7DBEC MOV W0, W20
	0x03C7DBF0 LDP X20, X19, [X31 + 0x10]
	0x03C7DBF4 LDP X30, X21, [X31], #0x20
	0x03C7DBF8 RET
	0x03C7DBFC BL 0x1C16F20
	0x03C7DC00 BL 0x1C16F28
	0x03C7DC04 STR X30, [X31 - 0x30]!
	0x03C7DC08 STP X22, X21, [X31 + 0x10]
	0x03C7DC0C STP X20, X19, [X31 + 0x20]
	0x03C7DC10 MOV W20, W1
	0x03C7DC14 MOV X19, X0
	0x03C7DC18 BL 0x3C822F8
	0x03C7DC1C CMP W0, W20
	0x03C7DC20 B.NE 0x3C7DC2C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move W1, [X0+56]
	007 Move X19, X0
	008 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	009 Move W1, [X19+52]
	010 Move W20, W0
	011 Move X0, X19
	012 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	013 NotImplemented "Instruction CMP not yet implemented."
	014 Move W8, 52
	015 Move W9, 56
	016 NotImplemented "Instruction CSEL not yet implemented."
	017 Move W1, [X19]
	018 Move X0, X19
	019 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	020 Move W20, W0
	021 Move X0, X19
	022 Call TextSelectingUtilities.get_characterCount, X0
	023 Move W21, W0
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move W22, 392
	026 Move X0, X19
	027 Call TextSelectingUtilities.get_m_TextElementInfos, X0
	028 Compare X0, 0
	029 JumpIfEqual {84}
	030 Move W8, [X0+24]
	031 NotImplemented "Instruction CMP not yet implemented."
	032 NotImplemented "Instruction SMADDL not yet implemented."
	033 NotImplemented "Instruction LDRH not yet implemented."
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Add W20, W20, 1
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move W8, [X19+52]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move X8, [X19+64]
	040 Move [X19+52], W21
	041 Compare X8, 0
	042 JumpIfEqual {47}
	043 Move X9, [X8+24]
	044 Move X0, [X8+64]
	045 Move X1, [X8+40]
	046 NotImplemented "Instruction BLR not yet implemented."
	047 Move W8, [X19+56]
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X8, [X19+72]
	050 Move [X19+56], W21
	051 Compare X8, 0
	052 JumpIfNotEqual {69}
	053 Move W8, [X19+52]
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move X8, [X19+64]
	056 Move [X19+52], W20
	057 Compare X8, 0
	058 JumpIfEqual {63}
	059 Move X9, [X8+24]
	060 Move X0, [X8+64]
	061 Move X1, [X8+40]
	062 NotImplemented "Instruction BLR not yet implemented."
	063 Move W8, [X19+56]
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move X8, [X19+72]
	066 Move [X19+56], W20
	067 Compare X8, 0
	068 JumpIfEqual {78}
	069 Move X2, [X8+24]
	070 Move X0, [X8+64]
	071 Move X1, [X8+40]
	072 Move X20, [X31+32]
	073 Move X19, [X31+40]
	074 Move X22, [X31+16]
	075 Move X21, [X31+24]
	076 Move X30, [X31+48]
	077 CallNoReturn X2
	078 Move X20, [X31+32]
	079 Move X19, [X31+40]
	080 Move X22, [X31+16]
	081 Move X21, [X31+24]
	082 Move X30, [X31+48]
	083 Return 
	084 Call 0x1C17F20
	085 Call 0x1C17F28

Method: System.Void MoveGraphicalLineStart()

Disassembly:
	0x03C7E2CC MOV X19, X0
	0x03C7E2D0 TBNZ X8, 0x0, 0x3C7E2E8
	0x03C7E2D4 ADRP X0, 0x477000
	0x03C7E2D8 LDR X0, [X0 + 0x278]
	0x03C7E2DC BL 0x1C16CF4
	0x03C7E2E0 MOVZ W8, 0x1
	0x03C7E2E4 STRB W8, [X21 + 0x9B4]
	0x03C7E2E8 LDR X0, [X19 + 0x38]
	0x03C7E2EC CBNZ X20, 0x3C7E304
	0x03C7E2F0 ADRP X8, 0x477000
	0x03C7E2F4 LDR X8, [X8 + 0x278]
	0x03C7E2F8 LDR X8, [X8]
	0x03C7E2FC LDR X8, [X8 + 0xB8]
	0x03C7E300 LDR X20, [X8]
	0x03C7E304 CBZ X0, 0x3C7E334
	0x03C7E308 MOV X1, X20
	0x03C7E30C MOV X2, X31
	0x03C7E310 BL 0x3C69948
	0x03C7E314 ADD X1, X19, 0x50
	0x03C7E318 MOV X0, X19
	0x03C7E31C BL 0x3C7E338
	0x03C7E320 ADD X1, X19, 0x54
	0x03C7E324 MOV X0, X19
	0x03C7E328 LDP X20, X19, [X31 + 0x10]
	0x03C7E32C LDP X30, X21, [X31], #0x20
	0x03C7E330 B 0x3C7E338
	0x03C7E334 BL 0x1C16F20
	0x03C7E338 STR X30, [X31 - 0x20]!
	0x03C7E33C STP X20, X19, [X31 + 0x10]
	0x03C7E340 MOV X19, X1
	0x03C7E344 MOV X20, X0
	0x03C7E348 BL 0x3C82190
	0x03C7E34C LDR W1, [X19]
	0x03C7E350 MOV X0, X20
	0x03C7E354 BL 0x3C821DC
	0x03C7E358 TBNZ X0, 0x0, 0x3C7E36C
	0x03C7E35C LDR W1, [X19]
	0x03C7E360 MOV X0, X20
	0x03C7E364 BL 0x3C80060
	0x03C7E368 STR W0, [X19]
	0x03C7E36C LDP X20, X19, [X31 + 0x10]
	0x03C7E370 LDR X30, [X31], #0x20
	0x03C7E374 RET
	0x03C7E378 LDP S0, S1, [X0 + 0x40]
	0x03C7E37C LDP S2, S3, [X0 + 0x48]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W1, [X0+52]
	005 Move X19, X0
	006 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	007 Move W1, [X19+56]
	008 Move W20, W0
	009 Move X0, X19
	010 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Move W8, 56
	013 Move W9, 52
	014 NotImplemented "Instruction CSEL not yet implemented."
	015 Move W1, [X19]
	016 Move X0, X19
	017 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	018 Move W1, W0
	019 Move X0, X19
	020 Call TextSelectingUtilities.GetGraphicalLineStart, X0, X1
	021 Move W8, [X19+56]
	022 Move W20, W0
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move X8, [X19+72]
	025 Move [X19+56], W20
	026 Compare X8, 0
	027 JumpIfEqual {32}
	028 Move X9, [X8+24]
	029 Move X0, [X8+64]
	030 Move X1, [X8+40]
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move W8, [X19+52]
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X8, [X19+64]
	035 Move [X19+52], W20
	036 Compare X8, 0
	037 JumpIfEqual {45}
	038 Move X2, [X8+24]
	039 Move X0, [X8+64]
	040 Move X1, [X8+40]
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move X30, [X31+32]
	044 CallNoReturn X2
	045 Move X20, [X31+16]
	046 Move X19, [X31+24]
	047 Move X30, [X31+32]
	048 Return 

Method: System.Void MoveGraphicalLineEnd()

Disassembly:
	0x03C7E380 RET
	0x03C7E384 STP D11, D10, [X31 - 0x40]!
	0x03C7E388 STP D9, D8, [X31 + 0x10]
	0x03C7E38C STR X30, [X31 + 0x20]
	0x03C7E390 STP X20, X19, [X31 + 0x30]
	0x03C7E394 MOV V9.16B, V2.16B
	0x03C7E398 LDR V2, [X0 + 0x40]
	0x03C7E39C MOV V8.16B, V3.16B
	0x03C7E3A0 MOV X19, X0
	0x03C7E3A4 MOV V10.16B, V0.16B
	0x03C7E3A8 FCMP S2, S0
	0x03C7E3AC MOV V11.16B, V1.16B
	0x03C7E3B0 B.NE 0x3C7E3EC
	0x03C7E3B4 LDR V0, [X19 + 0x4C]
	0x03C7E3B8 FCMP S0, S8
	0x03C7E3BC B.NE 0x3C7E3EC
	0x03C7E3C0 LDR V0, [X19 + 0x48]
	0x03C7E3C4 FCMP S0, S9
	0x03C7E3C8 B.NE 0x3C7E3EC
	0x03C7E3CC LDR V0, [X19 + 0x44]
	0x03C7E3D0 FCMP S0, S11
	0x03C7E3D4 B.NE 0x3C7E3EC
	0x03C7E3D8 LDP X20, X19, [X31 + 0x30]
	0x03C7E3DC LDR X30, [X31 + 0x20]
	0x03C7E3E0 LDP D9, D8, [X31 + 0x10]
	0x03C7E3E4 LDP D11, D10, [X31], #0x40
	0x03C7E3E8 RET
	0x03C7E3EC ADRP X20, 0x75B000
	0x03C7E3F0 LDRB W8, [X20 + 0x78F]
	0x03C7E3F4 CBNZ W8, 0x3C7E40C
	0x03C7E3F8 ADRP X0, 0x47D000
	0x03C7E3FC LDR X0, [X0 + 0xF08]
	0x03C7E400 BL 0x1C16CF4
	0x03C7E404 MOVZ W8, 0x1
	0x03C7E408 STRB W8, [X20 + 0x78F]
	0x03C7E40C ADRP X8, 0x47D000
	0x03C7E410 LDR X8, [X8 + 0xF08]
	0x03C7E414 MOV X0, X19
	0x03C7E418 LDR X30, [X31 + 0x20]
	0x03C7E41C LDR X8, [X8]
	0x03C7E420 LDR X8, [X8 + 0xB8]
	0x03C7E424 LDR V0, [X8]
	0x03C7E428 STP S10, S11, [X19 + 0x40]
	0x03C7E42C STP S9, S8, [X19 + 0x48]
	0x03C7E430 LDP D9, D8, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W1, [X0+52]
	005 Move X19, X0
	006 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	007 Move W1, [X19+56]
	008 Move W20, W0
	009 Move X0, X19
	010 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Move W8, 56
	013 Move W9, 52
	014 NotImplemented "Instruction CSEL not yet implemented."
	015 Move W1, [X19]
	016 Move X0, X19
	017 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	018 Move W1, W0
	019 Move X0, X19
	020 Call TextSelectingUtilities.GetGraphicalLineEnd, X0, X1
	021 Move W8, [X19+56]
	022 Move W20, W0
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move X8, [X19+72]
	025 Move [X19+56], W20
	026 Compare X8, 0
	027 JumpIfEqual {32}
	028 Move X9, [X8+24]
	029 Move X0, [X8+64]
	030 Move X1, [X8+40]
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move W8, [X19+52]
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X8, [X19+64]
	035 Move [X19+52], W20
	036 Compare X8, 0
	037 JumpIfEqual {45}
	038 Move X2, [X8+24]
	039 Move X0, [X8+64]
	040 Move X1, [X8+40]
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move X30, [X31+32]
	044 CallNoReturn X2
	045 Move X20, [X31+16]
	046 Move X19, [X31+24]
	047 Move X30, [X31+32]
	048 Return 

Method: System.Void MoveTextStart()

Disassembly:
	0x03C7DF9C RET
	0x03C7DFA0 SUB X31, X31, 0x30
	0x03C7DFA4 STP X30, X21, [X31 + 0x10]
	0x03C7DFA8 STP X20, X19, [X31 + 0x20]
	0x03C7DFAC ADRP X20, 0x769000
	0x03C7DFB0 STRH W1, [X31 + 0xC]
	0x03C7DFB4 ADRP X21, 0x478000
	0x03C7DFB8 LDRB W8, [X20 + 0x9AF]
	0x03C7DFBC LDR X21, [X21 + 0x170]
	0x03C7DFC0 MOV X19, X0
	0x03C7DFC4 TBNZ X8, 0x0, 0x3C7DFDC
	0x03C7DFC8 ADRP X0, 0x478000
	0x03C7DFCC LDR X0, [X0 + 0x170]
	0x03C7DFD0 BL 0x1C16CF4
	0x03C7DFD4 MOVZ W8, 0x1
	0x03C7DFD8 STRB W8, [X20 + 0x9AF]
	0x03C7DFDC LDR X0, [X21]
	0x03C7DFE0 LDR W8, [X0 + 0xE0]
	0x03C7DFE4 CBNZ W8, 0x3C7DFEC
	0x03C7DFE8 BL 0x1C16DFC
	0x03C7DFEC ADD X0, X31, 0xC
	0x03C7DFF0 MOV X1, X31
	0x03C7DFF4 BL 0x330A76C

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W8, [X0+52]
	004 Move X19, X0
	005 Compare W8, 0
	006 JumpIfEqual {15}
	007 Move X8, [X19+64]
	008 Move [X19+52], W31
	009 Compare X8, 0
	010 JumpIfEqual {15}
	011 Move X9, [X8+24]
	012 Move X0, [X8+64]
	013 Move X1, [X8+40]
	014 NotImplemented "Instruction BLR not yet implemented."
	015 Move W8, [X19+56]
	016 Compare W8, 0
	017 JumpIfEqual {28}
	018 Move X8, [X19+72]
	019 Move [X19+56], W31
	020 Compare X8, 0
	021 JumpIfEqual {28}
	022 Move X2, [X8+24]
	023 Move X0, [X8+64]
	024 Move X1, [X8+40]
	025 Move X30, [X31+16]
	026 Move X19, [X31+24]
	027 CallNoReturn X2
	028 Move X30, [X31+16]
	029 Move X19, [X31+24]
	030 Return 

Method: System.Void MoveTextEnd()

Disassembly:
	0x03C7DFF8 MOV X1, X0
	0x03C7DFFC MOV X0, X19
	0x03C7E000 BL 0x3C7B79C
	0x03C7E004 LDP X20, X19, [X31 + 0x20]
	0x03C7E008 LDP X30, X21, [X31 + 0x10]
	0x03C7E00C ADD X31, X31, 0x30
	0x03C7E010 RET
	0x03C7E014 STR X30, [X31 - 0x20]!
	0x03C7E018 STP X20, X19, [X31 + 0x10]
	0x03C7E01C ADRP X19, 0x768000
	0x03C7E020 ADRP X20, 0x4A1000
	0x03C7E024 LDRB W8, [X19 + 0x9B0]
	0x03C7E028 LDR X20, [X20 + 0x5C8]
	0x03C7E02C TBNZ X8, 0x0, 0x3C7E044
	0x03C7E030 ADRP X0, 0x4A1000
	0x03C7E034 LDR X0, [X0 + 0x5C8]
	0x03C7E038 BL 0x1C16CF4
	0x03C7E03C MOVZ W8, 0x1
	0x03C7E040 STRB W8, [X19 + 0x9B0]
	0x03C7E044 LDR X0, [X20]
	0x03C7E048 LDR W8, [X0 + 0xE0]
	0x03C7E04C CBNZ W8, 0x3C7E054
	0x03C7E050 BL 0x1C16DFC
	0x03C7E054 MOV X0, X31
	0x03C7E058 BL 0x3C753A0
	0x03C7E05C CBZ X0, 0x3C7E078
	0x03C7E060 LDR W8, [X0 + 0x10]
	0x03C7E064 LDP X20, X19, [X31 + 0x10]
	0x03C7E068 CMP W8, 0x0
	0x03C7E06C CSET W0, NE

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Call TextSelectingUtilities.get_characterCount, X0
	006 Move W8, [X19+52]
	007 Move W20, W0
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Move X8, [X19+64]
	010 Move [X19+52], W20
	011 Compare X8, 0
	012 JumpIfEqual {17}
	013 Move X9, [X8+24]
	014 Move X0, [X8+64]
	015 Move X1, [X8+40]
	016 NotImplemented "Instruction BLR not yet implemented."
	017 Move W8, [X19+56]
	018 NotImplemented "Instruction CMP not yet implemented."
	019 Move X8, [X19+72]
	020 Move [X19+56], W20
	021 Compare X8, 0
	022 JumpIfEqual {30}
	023 Move X2, [X8+24]
	024 Move X0, [X8+64]
	025 Move X1, [X8+40]
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 CallNoReturn X2
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X30, [X31+32]
	033 Return 

Method: System.Void MoveParagraphForward()

Disassembly:
	0x03C7E070 LDR X30, [X31], #0x20
	0x03C7E074 RET
	0x03C7E078 BL 0x1C16F20
	0x03C7E07C STR X30, [X31 - 0x20]!
	0x03C7E080 STP X20, X19, [X31 + 0x10]
	0x03C7E084 ADRP X20, 0x768000
	0x03C7E088 LDRB W8, [X20 + 0x9D0]
	0x03C7E08C MOV X19, X0
	0x03C7E090 TBNZ X8, 0x0, 0x3C7E0A8
	0x03C7E094 ADRP X0, 0x4A1000
	0x03C7E098 LDR X0, [X0 + 0x5C8]
	0x03C7E09C BL 0x1C16CF4
	0x03C7E0A0 MOVZ W8, 0x1
	0x03C7E0A4 STRB W8, [X20 + 0x9D0]
	0x03C7E0A8 LDR W1, [X19 + 0x38]
	0x03C7E0AC MOV X0, X19
	0x03C7E0B0 BL 0x3C823B4
	0x03C7E0B4 LDR W1, [X19 + 0x34]
	0x03C7E0B8 MOV W20, W0
	0x03C7E0BC MOV X0, X19
	0x03C7E0C0 BL 0x3C823B4
	0x03C7E0C4 CMP W20, W0
	0x03C7E0C8 B.NE 0x3C7E0D8
	0x03C7E0CC LDP X20, X19, [X31 + 0x10]
	0x03C7E0D0 LDR X30, [X31], #0x20
	0x03C7E0D4 RET
	0x03C7E0D8 ADRP X20, 0x4A1000
	0x03C7E0DC LDR X20, [X20 + 0x5C8]
	0x03C7E0E0 MOV X0, X19
	0x03C7E0E4 BL 0x3C8240C
	0x03C7E0E8 LDR X8, [X20]
	0x03C7E0EC MOV X19, X0
	0x03C7E0F0 LDR W9, [X8 + 0xE0]
	0x03C7E0F4 CBNZ W9, 0x3C7E100
	0x03C7E0F8 MOV X0, X8
	0x03C7E0FC BL 0x1C16DFC
	0x03C7E100 MOV X0, X19
	0x03C7E104 LDP X20, X19, [X31 + 0x10]
	0x03C7E108 MOV X1, X31
	0x03C7E10C LDR X30, [X31], #0x20
	0x03C7E110 B 0x3C753C8
	0x03C7E114 STR X30, [X31 - 0x20]!
	0x03C7E118 STP X20, X19, [X31 + 0x10]
	0x03C7E11C ADRP X20, 0x768000
	0x03C7E120 LDRB W8, [X20 + 0x9B2]
	0x03C7E124 MOV X19, X0
	0x03C7E128 TBNZ X8, 0x0, 0x3C7E14C
	0x03C7E12C ADRP X0, 0x475000
	0x03C7E130 LDR X0, [X0 + 0xDD8]
	0x03C7E134 BL 0x1C16CF4
	0x03C7E138 ADRP X0, 0x4B3000
	0x03C7E13C LDR X0, [X0 + 0x420]
	0x03C7E140 BL 0x1C16CF4
	0x03C7E144 MOVZ W8, 0x1
	0x03C7E148 STRB W8, [X20 + 0x9B2]
	0x03C7E14C CBZ X19, 0x3C7E1A4
	0x03C7E150 ADRP X8, 0x4B3000
	0x03C7E154 ADRP X9, 0x475000
	0x03C7E158 LDR X8, [X8 + 0x420]
	0x03C7E15C LDR X9, [X9 + 0xDD8]
	0x03C7E160 MOV X0, X19
	0x03C7E164 MOV X3, X31
	0x03C7E168 LDR X1, [X8]
	0x03C7E16C LDR X2, [X9]
	0x03C7E170 BL 0x32293BC
	0x03C7E174 CBZ X0, 0x3C7E1A4
	0x03C7E178 MOVZ W1, 0xA

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W1, [X0+52]
	005 Move X19, X0
	006 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	007 Move W1, [X19+56]
	008 Move W20, W0
	009 Move X0, X19
	010 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Move W8, 56
	013 Move W9, 52
	014 NotImplemented "Instruction CSEL not yet implemented."
	015 Move W1, [X19]
	016 Move X0, X19
	017 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	018 Move W8, [X19+52]
	019 Move W1, W0
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Move X8, [X19+64]
	022 Move [X19+52], W1
	023 Compare X8, 0
	024 JumpIfEqual {30}
	025 Move X9, [X8+24]
	026 Move X0, [X8+64]
	027 Move X1, [X8+40]
	028 NotImplemented "Instruction BLR not yet implemented."
	029 Move W1, [X19+52]
	030 Move X0, X19
	031 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	032 Move W20, W0
	033 Move X0, X19
	034 Call TextSelectingUtilities.get_characterCount, X0
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move W1, [X19+52]
	037 Move X0, X19
	038 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	039 Add W1, W0, 1
	040 Move X0, X19
	041 Call TextSelectingUtilities.IndexOfEndOfLine, X0, X1
	042 Move W8, [X19+52]
	043 Move W20, W0
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move X8, [X19+64]
	046 Move [X19+52], W20
	047 Compare X8, 0
	048 JumpIfEqual {53}
	049 Move X9, [X8+24]
	050 Move X0, [X8+64]
	051 Move X1, [X8+40]
	052 NotImplemented "Instruction BLR not yet implemented."
	053 Move W8, [X19+56]
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move X8, [X19+72]
	056 Move [X19+56], W20
	057 Compare X8, 0
	058 JumpIfEqual {66}
	059 Move X2, [X8+24]
	060 Move X0, [X8+64]
	061 Move X1, [X8+40]
	062 Move X20, [X31+16]
	063 Move X19, [X31+24]
	064 Move X30, [X31+32]
	065 CallNoReturn X2
	066 Move X20, [X31+16]
	067 Move X19, [X31+24]
	068 Move X30, [X31+32]
	069 Return 

Method: System.Void MoveParagraphBackward()

Disassembly:
	0x03C7E17C MOVZ W2, 0x20
	0x03C7E180 MOV X3, X31
	0x03C7E184 BL 0x32296D0
	0x03C7E188 CBZ X0, 0x3C7E1A4
	0x03C7E18C LDP X20, X19, [X31 + 0x10]
	0x03C7E190 MOVZ W1, 0xD
	0x03C7E194 MOVZ W2, 0x20
	0x03C7E198 MOV X3, X31
	0x03C7E19C LDR X30, [X31], #0x20
	0x03C7E1A0 B 0x32296D0
	0x03C7E1A4 BL 0x1C16F20
	0x03C7E1A8 STP X30, X19, [X31 - 0x10]!
	0x03C7E1AC MOV W1, W31
	0x03C7E1B0 MOV X19, X0
	0x03C7E1B4 BL 0x3C7B488
	0x03C7E1B8 LDR X0, [X19 + 0x10]
	0x03C7E1BC CBZ X0, 0x3C7E1C8
	0x03C7E1C0 LDP X30, X19, [X31], #0x10
	0x03C7E1C4 B 0x3C7E1CC
	0x03C7E1C8 BL 0x1C16F20
	0x03C7E1CC STP X30, X19, [X31 - 0x10]!
	0x03C7E1D0 LDR W1, [X0 + 0x34]
	0x03C7E1D4 MOV X19, X0
	0x03C7E1D8 BL 0x3C823B4
	0x03C7E1DC LDR W8, [X19 + 0x38]
	0x03C7E1E0 CMP W8, W0
	0x03C7E1E4 B.EQ 0x3C7E204
	0x03C7E1E8 LDR X8, [X19 + 0x48]
	0x03C7E1EC STR W0, [X19 + 0x38]
	0x03C7E1F0 CBZ X8, 0x3C7E204
	0x03C7E1F4 LDR X9, [X8 + 0x18]
	0x03C7E1F8 LDR X0, [X8 + 0x40]
	0x03C7E1FC LDR X1, [X8 + 0x28]
	0x03C7E200 BLR X9
	0x03C7E204 MOVN W8, 0x0
	0x03C7E208 STRB W31, [X19 + 0x18]
	0x03C7E20C STR W8, [X19 + 0x14]
	0x03C7E210 LDP X30, X19, [X31], #0x10
	0x03C7E214 RET
	0x03C7E218 STR X30, [X31 - 0x20]!
	0x03C7E21C STP X20, X19, [X31 + 0x10]
	0x03C7E220 ADRP X19, 0x768000
	0x03C7E224 ADRP X20, 0x475000
	0x03C7E228 LDRB W8, [X19 + 0x9B3]
	0x03C7E22C LDR X20, [X20 + 0x970]
	0x03C7E230 TBNZ X8, 0x0, 0x3C7E248
	0x03C7E234 ADRP X0, 0x475000
	0x03C7E238 LDR X0, [X0 + 0x970]
	0x03C7E23C BL 0x1C16CF4
	0x03C7E240 MOVZ W8, 0x1
	0x03C7E244 STRB W8, [X19 + 0x9B3]
	0x03C7E248 LDR X0, [X20]
	0x03C7E24C LDR W8, [X0 + 0xE0]
	0x03C7E250 CBNZ W8, 0x3C7E258
	0x03C7E254 BL 0x1C16DFC
	0x03C7E258 MOV X0, X31
	0x03C7E25C BL 0x3C01AB0
	0x03C7E260 CMP W0, 0x11
	0x03C7E264 B.EQ 0x3C7E270
	0x03C7E268 CMP W0, 0xB
	0x03C7E26C B.NE 0x3C7E28C
	0x03C7E270 MOV X0, X31
	0x03C7E274 BL 0x3C3CCF4
	0x03C7E278 LDP X20, X19, [X31 + 0x10]
	0x03C7E27C ORN W8, W31, W0, 0x0
	0x03C7E280 AND W0, W8, 0x1
	0x03C7E284 LDR X30, [X31], #0x20
	0x03C7E288 RET
	0x03C7E28C LDP X20, X19, [X31 + 0x10]
	0x03C7E290 MOV X0, X31
	0x03C7E294 LDR X30, [X31], #0x20
	0x03C7E298 B 0x3C3CC00
	0x03C7E29C STR X30, [X31 - 0x10]!
	0x03C7E2A0 LDR X0, [X0 + 0x38]
	0x03C7E2A4 CBZ X0, 0x3C7E2B4
	0x03C7E2A8 MOV X1, X31
	0x03C7E2AC LDR X30, [X31], #0x10
	0x03C7E2B0 B 0x3C69940
	0x03C7E2B4 BL 0x1C16F20
	0x03C7E2B8 STP X30, X21, [X31 - 0x20]!
	0x03C7E2BC STP X20, X19, [X31 + 0x10]
	0x03C7E2C0 ADRP X21, 0x768000
	0x03C7E2C4 LDRB W8, [X21 + 0x9B4]
	0x03C7E2C8 MOV X20, X1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W1, [X0+52]
	005 Move X19, X0
	006 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	007 Move W1, [X19+56]
	008 Move W20, W0
	009 Move X0, X19
	010 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Move W8, 56
	013 Move W9, 52
	014 NotImplemented "Instruction CSEL not yet implemented."
	015 Move W1, [X19]
	016 Move X0, X19
	017 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	018 Move W8, [X19+52]
	019 Move W1, W0
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Move X8, [X19+64]
	022 Move [X19+52], W1
	023 Compare X8, 0
	024 JumpIfEqual {30}
	025 Move X9, [X8+24]
	026 Move X0, [X8+64]
	027 Move X1, [X8+40]
	028 NotImplemented "Instruction BLR not yet implemented."
	029 Move W1, [X19+52]
	030 Move X0, X19
	031 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move W1, [X19+52]
	034 Move X20, [X19+40]
	035 Move X0, X19
	036 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	037 Compare X20, 0
	038 JumpIfEqual {90}
	039 Subtract W2, W0, 2
	040 Move W1, 10
	041 Move X0, X20
	042 Move X3, X31
	043 Call TextHandle.LastIndexOf, X0, X1, X2
	044 Move W8, [X19+52]
	045 Add W20, W0, 1
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move X8, [X19+64]
	048 Move [X19+52], W20
	049 Compare X8, 0
	050 JumpIfEqual {55}
	051 Move X9, [X8+24]
	052 Move X0, [X8+64]
	053 Move X1, [X8+40]
	054 NotImplemented "Instruction BLR not yet implemented."
	055 Move W8, [X19+56]
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move X8, [X19+72]
	058 Move [X19+56], W20
	059 Compare X8, 0
	060 JumpIfNotEqual {79}
	061 Move W8, [X19+52]
	062 Compare W8, 0
	063 JumpIfEqual {72}
	064 Move X8, [X19+64]
	065 Move [X19+52], W31
	066 Compare X8, 0
	067 JumpIfEqual {72}
	068 Move X9, [X8+24]
	069 Move X0, [X8+64]
	070 Move X1, [X8+40]
	071 NotImplemented "Instruction BLR not yet implemented."
	072 Move W8, [X19+56]
	073 Compare W8, 0
	074 JumpIfEqual {86}
	075 Move X8, [X19+72]
	076 Move [X19+56], W31
	077 Compare X8, 0
	078 JumpIfEqual {86}
	079 Move X2, [X8+24]
	080 Move X0, [X8+64]
	081 Move X1, [X8+40]
	082 Move X20, [X31+16]
	083 Move X19, [X31+24]
	084 Move X30, [X31+32]
	085 CallNoReturn X2
	086 Move X20, [X31+16]
	087 Move X19, [X31+24]
	088 Move X30, [X31+32]
	089 Return 
	090 Call 0x1C17F20

Method: System.Void MoveWordRight()

Disassembly:
	0x03C7DC24 MOV W22, W20
	0x03C7DC28 B 0x3C7DCF4
	0x03C7DC2C MOV W21, W0
	0x03C7DC30 MOV X0, X19
	0x03C7DC34 MOV W1, W20
	0x03C7DC38 BL 0x3C8432C
	0x03C7DC3C CMP W0, 0x3
	0x03C7DC40 B.NE 0x3C7DCB8
	0x03C7DC44 MOV X0, X19
	0x03C7DC48 BL 0x3C8238C
	0x03C7DC4C CBZ X0, 0x3C7DDC4
	0x03C7DC50 LDR W8, [X0 + 0x18]
	0x03C7DC54 CMP W8, W20
	0x03C7DC58 B.LS 0x3C7DDC0
	0x03C7DC5C SXTW X22, W20
	0x03C7DC60 MOVZ W8, 0x188
	0x03C7DC64 MADD X8, X22, X8, X0
	0x03C7DC68 LDRH W8, [X8 + 0x20]
	0x03C7DC6C CMP W8, 0x9
	0x03C7DC70 B.EQ 0x3C7DCA0
	0x03C7DC74 MOV X0, X19
	0x03C7DC78 BL 0x3C8238C
	0x03C7DC7C CBZ X0, 0x3C7DDC4
	0x03C7DC80 LDR W8, [X0 + 0x18]
	0x03C7DC84 CMP W8, W20
	0x03C7DC88 B.LS 0x3C7DDC0
	0x03C7DC8C MOVZ W8, 0x188
	0x03C7DC90 MADD X8, X22, X8, X0
	0x03C7DC94 LDRH W8, [X8 + 0x20]
	0x03C7DC98 CMP W8, 0xA
	0x03C7DC9C B.NE 0x3C7DCE8
	0x03C7DCA0 MOV X0, X19
	0x03C7DCA4 MOV W1, W20
	0x03C7DCA8 LDP X20, X19, [X31 + 0x20]
	0x03C7DCAC LDP X22, X21, [X31 + 0x10]
	0x03C7DCB0 LDR X30, [X31], #0x30
	0x03C7DCB4 B 0x3C7DDC8
	0x03C7DCB8 MOV W22, W0
	0x03C7DCBC MOV X0, X19
	0x03C7DCC0 MOV W1, W20
	0x03C7DCC4 BL 0x3C7DDC8
	0x03C7DCC8 MOV W20, W0
	0x03C7DCCC CMP W0, W21
	0x03C7DCD0 B.GE 0x3C7DCE8
	0x03C7DCD4 MOV X0, X19
	0x03C7DCD8 MOV W1, W20
	0x03C7DCDC BL 0x3C8432C
	0x03C7DCE0 CMP W0, W22
	0x03C7DCE4 B.EQ 0x3C7DCBC
	0x03C7DCE8 CMP W20, W21
	0x03C7DCEC MOV W22, W21
	0x03C7DCF0 B.NE 0x3C7DD08
	0x03C7DCF4 MOV W0, W22
	0x03C7DCF8 LDP X20, X19, [X31 + 0x20]
	0x03C7DCFC LDP X22, X21, [X31 + 0x10]
	0x03C7DD00 LDR X30, [X31], #0x30
	0x03C7DD04 RET
	0x03C7DD08 MOV X0, X19
	0x03C7DD0C BL 0x3C8238C
	0x03C7DD10 CBZ X0, 0x3C7DDC4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W1, [X0+52]
	005 Move X19, X0
	006 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	007 Move W1, [X19+56]
	008 Move W20, W0
	009 Move X0, X19
	010 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Move W8, 56
	013 Move W9, 52
	014 NotImplemented "Instruction CSEL not yet implemented."
	015 Move W1, [X19]
	016 Move X0, X19
	017 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	018 Move W8, [X19+52]
	019 Move W1, W0
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Move X8, [X19+64]
	022 Move [X19+52], W1
	023 Compare X8, 0
	024 JumpIfEqual {30}
	025 Move X9, [X8+24]
	026 Move X0, [X8+64]
	027 Move X1, [X8+40]
	028 NotImplemented "Instruction BLR not yet implemented."
	029 Move W1, [X19+52]
	030 Move X0, X19
	031 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	032 Move W1, W0
	033 Move X0, X19
	034 Call TextSelectingUtilities.FindNextSeperator, X0, X1
	035 Move W8, [X19+56]
	036 Move W20, W0
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X8, [X19+72]
	039 Move [X19+56], W20
	040 Compare X8, 0
	041 JumpIfEqual {46}
	042 Move X9, [X8+24]
	043 Move X0, [X8+64]
	044 Move X1, [X8+40]
	045 NotImplemented "Instruction BLR not yet implemented."
	046 Move W8, [X19+52]
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move X8, [X19+64]
	049 Move [X19+52], W20
	050 Compare X8, 0
	051 JumpIfEqual {56}
	052 Move X9, [X8+24]
	053 Move X0, [X8+64]
	054 Move X1, [X8+40]
	055 NotImplemented "Instruction BLR not yet implemented."
	056 Move TEMP, 0
	057 Not TEMP
	058 Move W8, TEMP
	059 Move [X19+24], W31
	060 Move [X19+20], W8
	061 Move X20, [X31+16]
	062 Move X19, [X31+24]
	063 Move X30, [X31+32]
	064 Return 

Method: System.Void MoveToStartOfNextWord()

Disassembly:
	0x03C7DD14 LDR W8, [X0 + 0x18]
	0x03C7DD18 CMP W20, W8
	0x03C7DD1C B.CS 0x3C7DDC0
	0x03C7DD20 MOV W8, W20
	0x03C7DD24 SXTW X22, W8
	0x03C7DD28 MOVZ W8, 0x188
	0x03C7DD2C MADD X8, X22, X8, X0
	0x03C7DD30 LDRH W8, [X8 + 0x20]
	0x03C7DD34 CMP W8, 0x20
	0x03C7DD38 B.NE 0x3C7DD78
	0x03C7DD3C CMP W20, W21
	0x03C7DD40 B.GE 0x3C7DC24
	0x03C7DD44 MOV W22, W20
	0x03C7DD48 MOV X0, X19
	0x03C7DD4C MOV W1, W22
	0x03C7DD50 BL 0x3C8432C
	0x03C7DD54 CMP W0, 0x3
	0x03C7DD58 B.NE 0x3C7DCF4
	0x03C7DD5C MOV X0, X19
	0x03C7DD60 MOV W1, W22
	0x03C7DD64 BL 0x3C7DDC8
	0x03C7DD68 MOV W22, W0
	0x03C7DD6C CMP W0, W21
	0x03C7DD70 B.LT 0x3C7DD48
	0x03C7DD74 B 0x3C7DCF4
	0x03C7DD78 MOV X0, X19
	0x03C7DD7C BL 0x3C8238C
	0x03C7DD80 CBZ X0, 0x3C7DDC4
	0x03C7DD84 LDR W8, [X0 + 0x18]
	0x03C7DD88 CMP W20, W8
	0x03C7DD8C B.CS 0x3C7DDC0
	0x03C7DD90 MOVZ W8, 0x188
	0x03C7DD94 MADD X8, X22, X8, X0
	0x03C7DD98 LDRH W8, [X8 + 0x20]
	0x03C7DD9C CMP W8, 0x9
	0x03C7DDA0 B.EQ 0x3C7DC24
	0x03C7DDA4 MOV X0, X19
	0x03C7DDA8 BL 0x3C8238C
	0x03C7DDAC CBZ X0, 0x3C7DDC4
	0x03C7DDB0 LDR W8, [X0 + 0x18]
	0x03C7DDB4 MOV W22, W20
	0x03C7DDB8 CMP W20, W8
	0x03C7DDBC B.CC 0x3C7DCF4
	0x03C7DDC0 BL 0x1C16F28
	0x03C7DDC4 BL 0x1C16F20
	0x03C7DDC8 STP X30, X23, [X31 - 0x30]!
	0x03C7DDCC STP X22, X21, [X31 + 0x10]
	0x03C7DDD0 STP X20, X19, [X31 + 0x20]
	0x03C7DDD4 ADRP X21, 0x769000
	0x03C7DDD8 LDRB W8, [X21 + 0x9CD]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W1, [X0+52]
	005 Move TEMP, 0
	006 Not TEMP
	007 Move W8, TEMP
	008 Move X19, X0
	009 Move [X0+24], W31
	010 Move [X0+20], W8
	011 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	012 Move W1, [X19+56]
	013 Move W20, W0
	014 Move X0, X19
	015 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Move W1, [X19+52]
	018 Move X0, X19
	019 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	020 Move W1, W0
	021 Move X0, X19
	022 Call TextSelectingUtilities.FindStartOfNextWord, X0, X1
	023 Move W8, [X19+56]
	024 Move W20, W0
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X8, [X19+72]
	027 Move [X19+56], W20
	028 Compare X8, 0
	029 JumpIfEqual {34}
	030 Move X9, [X8+24]
	031 Move X0, [X8+64]
	032 Move X1, [X8+40]
	033 NotImplemented "Instruction BLR not yet implemented."
	034 Move W8, [X19+52]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move X8, [X19+64]
	037 Move [X19+52], W20
	038 Compare X8, 0
	039 JumpIfEqual {53}
	040 Move X2, [X8+24]
	041 Move X0, [X8+64]
	042 Move X1, [X8+40]
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move X30, [X31+32]
	046 CallNoReturn X2
	047 Move X0, X19
	048 Move X20, [X31+16]
	049 Move X19, [X31+24]
	050 Move X30, [X31+32]
	051 Call TextSelectingUtilities.MoveRight, X0
	052 Return 
	053 Move X20, [X31+16]
	054 Move X19, [X31+24]
	055 Move X30, [X31+32]
	056 Return 

Method: System.Void MoveToEndOfPreviousWord()

Disassembly:
	0x03C7DDDC MOV W20, W1
	0x03C7DDE0 MOV X19, X0
	0x03C7DDE4 TBNZ X8, 0x0, 0x3C7DDFC
	0x03C7DDE8 ADRP X0, 0x478000
	0x03C7DDEC LDR X0, [X0 + 0x170]
	0x03C7DDF0 BL 0x1C16CF4
	0x03C7DDF4 MOVZ W8, 0x1
	0x03C7DDF8 STRB W8, [X21 + 0x9CD]
	0x03C7DDFC MOV X0, X19
	0x03C7DE00 BL 0x3C822F8
	0x03C7DE04 CMP W0, W20
	0x03C7DE08 MOV X0, X19
	0x03C7DE0C CINC W20, W20, GT
	0x03C7DE10 BL 0x3C822F8
	0x03C7DE14 CMP W20, W0
	0x03C7DE18 B.GE 0x3C7DE8C
	0x03C7DE1C ADRP X22, 0x478000
	0x03C7DE20 LDR X22, [X22 + 0x170]
	0x03C7DE24 MOVZ W8, 0x188
	0x03C7DE28 SMADDL X8, X20, X8, X31
	0x03C7DE2C ADD X23, X8, 0x20
	0x03C7DE30 SXTW X20, W20
	0x03C7DE34 MOV X0, X19
	0x03C7DE38 BL 0x3C8238C
	0x03C7DE3C CBZ X0, 0x3C7DEA0
	0x03C7DE40 LDR W8, [X0 + 0x18]
	0x03C7DE44 CMP W20, W8
	0x03C7DE48 B.CS 0x3C7DEA4
	0x03C7DE4C LDR X8, [X22]
	0x03C7DE50 LDRH W21, [X0, X23, LSL]
	0x03C7DE54 LDR W9, [X8 + 0xE0]
	0x03C7DE58 CBNZ W9, 0x3C7DE64
	0x03C7DE5C MOV X0, X8
	0x03C7DE60 BL 0x1C16DFC
	0x03C7DE64 MOV W0, W21
	0x03C7DE68 MOV X1, X31
	0x03C7DE6C BL 0x331C0FC
	0x03C7DE70 TBZ X0, 0x0, 0x3C7DE8C
	0x03C7DE74 MOV X0, X19
	0x03C7DE78 ADD X20, X20, 0x1
	0x03C7DE7C BL 0x3C822F8
	0x03C7DE80 CMP X20, W0, SXTW
	0x03C7DE84 ADD X23, X23, 0x188
	0x03C7DE88 B.LT 0x3C7DE34
	0x03C7DE8C MOV W0, W20
	0x03C7DE90 LDP X20, X19, [X31 + 0x20]
	0x03C7DE94 LDP X22, X21, [X31 + 0x10]
	0x03C7DE98 LDP X30, X23, [X31], #0x30
	0x03C7DE9C RET
	0x03C7DEA0 BL 0x1C16F20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W1, [X0+52]
	005 Move TEMP, 0
	006 Not TEMP
	007 Move W8, TEMP
	008 Move X19, X0
	009 Move [X0+24], W31
	010 Move [X0+20], W8
	011 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	012 Move W1, [X19+56]
	013 Move W20, W0
	014 Move X0, X19
	015 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Move W1, [X19+52]
	018 Move X0, X19
	019 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	020 Move W1, W0
	021 Move X0, X19
	022 Call TextSelectingUtilities.FindEndOfPreviousWord, X0, X1
	023 Move W8, [X19+56]
	024 Move W20, W0
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X8, [X19+72]
	027 Move [X19+56], W20
	028 Compare X8, 0
	029 JumpIfEqual {34}
	030 Move X9, [X8+24]
	031 Move X0, [X8+64]
	032 Move X1, [X8+40]
	033 NotImplemented "Instruction BLR not yet implemented."
	034 Move W8, [X19+52]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move X8, [X19+64]
	037 Move [X19+52], W20
	038 Compare X8, 0
	039 JumpIfEqual {53}
	040 Move X2, [X8+24]
	041 Move X0, [X8+64]
	042 Move X1, [X8+40]
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move X30, [X31+32]
	046 CallNoReturn X2
	047 Move X0, X19
	048 Move X20, [X31+16]
	049 Move X19, [X31+24]
	050 Move X30, [X31+32]
	051 Call TextSelectingUtilities.MoveLeft, X0
	052 Return 
	053 Move X20, [X31+16]
	054 Move X19, [X31+24]
	055 Move X30, [X31+32]
	056 Return 

Method: System.Void MoveWordLeft()

Disassembly:
	0x03C7DEA4 BL 0x1C16F28
	0x03C7DEA8 STP X30, X23, [X31 - 0x30]!
	0x03C7DEAC STP X22, X21, [X31 + 0x10]
	0x03C7DEB0 STP X20, X19, [X31 + 0x20]
	0x03C7DEB4 ADRP X21, 0x769000
	0x03C7DEB8 LDRB W8, [X21 + 0x9CC]
	0x03C7DEBC MOV W20, W1
	0x03C7DEC0 MOV X19, X0
	0x03C7DEC4 TBNZ X8, 0x0, 0x3C7DEDC
	0x03C7DEC8 ADRP X0, 0x478000
	0x03C7DECC LDR X0, [X0 + 0x170]
	0x03C7DED0 BL 0x1C16CF4
	0x03C7DED4 MOVZ W8, 0x1
	0x03C7DED8 STRB W8, [X21 + 0x9CC]
	0x03C7DEDC CMP W20, 0x0
	0x03C7DEE0 CSET W8, GT
	0x03C7DEE4 SUB W0, W20, W8
	0x03C7DEE8 CMP W0, 0x1
	0x03C7DEEC B.LT 0x3C7DF68
	0x03C7DEF0 ADRP X22, 0x478000
	0x03C7DEF4 LDR X22, [X22 + 0x170]
	0x03C7DEF8 MOVZ W8, 0x188
	0x03C7DEFC UMADDL X8, X0, X8, X31
	0x03C7DF00 MOV W21, W0
	0x03C7DF04 ADD X23, X8, 0x20
	0x03C7DF08 MOV X0, X19
	0x03C7DF0C BL 0x3C8238C
	0x03C7DF10 CBZ X0, 0x3C7DF78
	0x03C7DF14 LDR W8, [X0 + 0x18]
	0x03C7DF18 CMP X21, X8
	0x03C7DF1C B.CS 0x3C7DF7C
	0x03C7DF20 LDR X8, [X22]
	0x03C7DF24 LDRH W20, [X0, X23, LSL]
	0x03C7DF28 LDR W9, [X8 + 0xE0]
	0x03C7DF2C CBNZ W9, 0x3C7DF38
	0x03C7DF30 MOV X0, X8
	0x03C7DF34 BL 0x1C16DFC
	0x03C7DF38 MOV W0, W20
	0x03C7DF3C MOV X1, X31
	0x03C7DF40 BL 0x331C0FC
	0x03C7DF44 TBZ X0, 0x0, 0x3C7DF64
	0x03C7DF48 SUB X21, X21, 0x1
	0x03C7DF4C ADD W8, W21, 0x1
	0x03C7DF50 CMP W8, 0x2
	0x03C7DF54 SUB X23, X23, 0x188
	0x03C7DF58 B.GE 0x3C7DF08
	0x03C7DF5C MOV W0, W31
	0x03C7DF60 B 0x3C7DF68
	0x03C7DF64 MOV W0, W21
	0x03C7DF68 LDP X20, X19, [X31 + 0x20]
	0x03C7DF6C LDP X22, X21, [X31 + 0x10]
	0x03C7DF70 LDP X30, X23, [X31], #0x30
	0x03C7DF74 RET
	0x03C7DF78 BL 0x1C16F20
	0x03C7DF7C BL 0x1C16F28
	0x03C7DF80 STR W1, [X0 + 0x34]
	0x03C7DF84 RET
	0x03C7DF88 STR W1, [X0 + 0x38]
	0x03C7DF8C RET
	0x03C7DF90 MOVN W8, 0x0
	0x03C7DF94 STRB W31, [X0 + 0x18]
	0x03C7DF98 STR W8, [X0 + 0x14]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W1, [X0+52]
	005 Move X19, X0
	006 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	007 Move W1, [X19+56]
	008 Move W20, W0
	009 Move X0, X19
	010 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Move W8, 56
	013 Move W9, 52
	014 NotImplemented "Instruction CSEL not yet implemented."
	015 Move W1, [X19]
	016 Move X0, X19
	017 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	018 Move W8, [X19+52]
	019 Move W1, W0
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Move X8, [X19+64]
	022 Move [X19+52], W1
	023 Compare X8, 0
	024 JumpIfEqual {30}
	025 Move X9, [X8+24]
	026 Move X0, [X8+64]
	027 Move X1, [X8+40]
	028 NotImplemented "Instruction BLR not yet implemented."
	029 Move W1, [X19+52]
	030 Move X0, X19
	031 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	032 Move W1, W0
	033 Move X0, X19
	034 Call TextSelectingUtilities.FindPrevSeperator, X0, X1
	035 Move W8, [X19+52]
	036 Move W1, W0
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X8, [X19+64]
	039 Move [X19+52], W1
	040 Compare X8, 0
	041 JumpIfEqual {47}
	042 Move X9, [X8+24]
	043 Move X0, [X8+64]
	044 Move X1, [X8+40]
	045 NotImplemented "Instruction BLR not yet implemented."
	046 Move W1, [X19+52]
	047 Move X0, X19
	048 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	049 Move W8, [X19+56]
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move X8, [X19+72]
	052 Move [X19+56], W0
	053 Compare X8, 0
	054 JumpIfEqual {62}
	055 Move X2, [X8+24]
	056 Move X0, [X8+64]
	057 Move X1, [X8+40]
	058 Move X20, [X31+16]
	059 Move X19, [X31+24]
	060 Move X30, [X31+32]
	061 CallNoReturn X2
	062 Move X20, [X31+16]
	063 Move X19, [X31+24]
	064 Move X30, [X31+32]
	065 Return 

Method: System.Void MouseDragSelectsWholeWords(System.Boolean on)

Disassembly:
	0x03C84F08 ADD X0, X0, 0x983
	0x03C84F0C BL 0x1C16CB8
	0x03C84F10 STR X0, [X19 + 0xA40]
	0x03C84F14 LDP X30, X19, [X31], #0x10
	0x03C84F18 BR X0
	0x03C84F1C SUB X31, X31, 0x20
	0x03C84F20 STP X30, X19, [X31 + 0x10]
	0x03C84F24 ADRP X19, 0x762000
	0x03C84F28 LDR X8, [X19 + 0xA90]
	0x03C84F2C STR X31, [X31 + 0x8]
	0x03C84F30 CBNZ X8, 0x3C84F48
	0x03C84F34 ADRP X0, 0xFFFFFFFFFCE77000
	0x03C84F38 ADD X0, X0, 0x967
	0x03C84F3C BL 0x1C16CB8
	0x03C84F40 MOV X8, X0
	0x03C84F44 STR X0, [X19 + 0xA90]
	0x03C84F48 ADD X0, X31, 0x8
	0x03C84F4C BLR X8
	0x03C84F50 LDP S0, S1, [X31 + 0x8]
	0x03C84F54 LDP X30, X19, [X31 + 0x10]
	0x03C84F58 ADD X31, X31, 0x20
	0x03C84F5C RET
	0x03C84F60 STR X30, [X31 - 0x20]!
	0x03C84F64 STP X20, X19, [X31 + 0x10]
	0x03C84F68 ADRP X20, 0x762000
	0x03C84F6C LDR X1, [X20 + 0xA90]
	0x03C84F70 MOV X19, X0
	0x03C84F74 CBNZ X1, 0x3C84F8C
	0x03C84F78 ADRP X0, 0xFFFFFFFFFCE77000
	0x03C84F7C ADD X0, X0, 0x967
	0x03C84F80 BL 0x1C16CB8
	0x03C84F84 MOV X1, X0
	0x03C84F88 STR X0, [X20 + 0xA90]
	0x03C84F8C MOV X0, X19
	0x03C84F90 LDP X20, X19, [X31 + 0x10]
	0x03C84F94 LDR X30, [X31], #0x20
	0x03C84F98 BR X1
	0x03C84F9C SUB X31, X31, 0x20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move W8, [X0+52]
	007 And W9, W1, 1
	008 Move X19, X0
	009 Move [X0+26], W9
	010 Move W1, W8
	011 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	012 Move W1, [X19+56]
	013 Move W20, W0
	014 Move X0, X19
	015 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Move W21, 56
	018 Move W22, 52
	019 NotImplemented "Instruction CSEL not yet implemented."
	020 Move W1, [X19]
	021 Move X0, X19
	022 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	023 Move W1, [X19+52]
	024 Move [X19+28], W0
	025 Move X0, X19
	026 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	027 Move W1, [X19+56]
	028 Move W20, W0
	029 Move X0, X19
	030 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	031 NotImplemented "Instruction CMP not yet implemented."
	032 NotImplemented "Instruction CSEL not yet implemented."
	033 Move W1, [X19]
	034 Move X0, X19
	035 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	036 Move [X19+32], W0
	037 Move X20, [X31+32]
	038 Move X19, [X31+40]
	039 Move X22, [X31+16]
	040 Move X21, [X31+24]
	041 Move X30, [X31+48]
	042 Return 

Method: System.Void ExpandSelectGraphicalLineStart()

Disassembly:
	0x03C842B4 LDR X8, [X19 + 0x40]
	0x03C842B8 STR W0, [X19 + 0x34]
	0x03C842BC CBZ X8, 0x3C842D0
	0x03C842C0 LDR X9, [X8 + 0x18]
	0x03C842C4 LDR X0, [X8 + 0x40]
	0x03C842C8 LDR X1, [X8 + 0x28]
	0x03C842CC BLR X9
	0x03C842D0 LDR X0, [X19 + 0x28]
	0x03C842D4 CBZ X0, 0x3C84328
	0x03C842D8 LDR W8, [X19 + 0x20]
	0x03C842DC MOVZ W1, 0xA
	0x03C842E0 MOV X3, X31
	0x03C842E4 SUB W8, W8, 0x2
	0x03C842E8 BIC W2, W8, W8, 0x1F
	0x03C842EC BL 0x3CCAF90
	0x03C842F0 LDR W9, [X19 + 0x38]
	0x03C842F4 ADD W8, W0, 0x1
	0x03C842F8 CMP W9, W8
	0x03C842FC B.EQ 0x3C8431C
	0x03C84300 LDR X9, [X19 + 0x48]
	0x03C84304 STR W8, [X19 + 0x38]
	0x03C84308 CBZ X9, 0x3C8431C
	0x03C8430C LDR X2, [X9 + 0x18]
	0x03C84310 LDR X0, [X9 + 0x40]
	0x03C84314 LDR X1, [X9 + 0x28]
	0x03C84318 B 0x3C84294
	0x03C8431C LDP X20, X19, [X31 + 0x10]
	0x03C84320 LDR X30, [X31], #0x20
	0x03C84324 RET
	0x03C84328 BL 0x1C16F20
	0x03C8432C STP X30, X23, [X31 - 0x30]!
	0x03C84330 STP X22, X21, [X31 + 0x10]
	0x03C84334 STP X20, X19, [X31 + 0x20]
	0x03C84338 ADRP X21, 0x762000
	0x03C8433C LDRB W8, [X21 + 0x9D1]
	0x03C84340 MOV W19, W1
	0x03C84344 MOV X20, X0
	0x03C84348 TBNZ X8, 0x0, 0x3C84360
	0x03C8434C ADRP X0, 0x471000
	0x03C84350 LDR X0, [X0 + 0x170]
	0x03C84354 BL 0x1C16CF4
	0x03C84358 MOVZ W8, 0x1
	0x03C8435C STRB W8, [X21 + 0x9D1]
	0x03C84360 MOV X0, X20
	0x03C84364 BL 0x3C8238C
	0x03C84368 CBZ X0, 0x3C84430
	0x03C8436C LDR W8, [X0 + 0x18]
	0x03C84370 CMP W8, W19
	0x03C84374 B.LS 0x3C84434
	0x03C84378 SXTW X22, W19
	0x03C8437C MOVZ W8, 0x188
	0x03C84380 MADD X8, X22, X8, X0
	0x03C84384 LDRH W21, [X8 + 0x20]
	0x03C84388 CMP W21, 0xA
	0x03C8438C B.NE 0x3C84398
	0x03C84390 MOVZ W0, 0x4
	0x03C84394 B 0x3C84420
	0x03C84398 ADRP X23, 0x471000
	0x03C8439C LDR X23, [X23 + 0x170]
	0x03C843A0 LDR X0, [X23]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W1, [X0+52]
	006 Move TEMP, 0
	007 Not TEMP
	008 Move W8, TEMP
	009 Move X19, X0
	010 Move [X0+24], W31
	011 Move [X0+20], W8
	012 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	013 Move W1, [X19+56]
	014 Move W20, W0
	015 Move X0, X19
	016 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	017 Move W1, [X19+52]
	018 Move W21, W0
	019 Move X0, X19
	020 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move W20, W0
	023 Move X0, X19
	024 Move W1, W20
	025 Call TextSelectingUtilities.GetGraphicalLineStart, X0, X1
	026 Move W8, [X19+52]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move X8, [X19+64]
	029 Move [X19+52], W0
	030 Compare X8, 0
	031 JumpIfNotEqual {54}
	032 Move W1, [X19+56]
	033 Move X0, X19
	034 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	035 Move W1, W0
	036 Move X0, X19
	037 Call TextSelectingUtilities.GetGraphicalLineStart, X0, X1
	038 Move W8, [X19+52]
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move X8, [X19+64]
	041 Move [X19+52], W0
	042 Compare X8, 0
	043 JumpIfEqual {48}
	044 Move X9, [X8+24]
	045 Move X0, [X8+64]
	046 Move X1, [X8+40]
	047 NotImplemented "Instruction BLR not yet implemented."
	048 Move W8, [X19+56]
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move X8, [X19+72]
	051 Move [X19+56], W20
	052 Compare X8, 0
	053 JumpIfEqual {62}
	054 Move X2, [X8+24]
	055 Move X0, [X8+64]
	056 Move X1, [X8+40]
	057 Move X20, [X31+16]
	058 Move X19, [X31+24]
	059 Move X30, [X31+32]
	060 Move X21, [X31+40]
	061 CallNoReturn X2
	062 Move X20, [X31+16]
	063 Move X19, [X31+24]
	064 Move X30, [X31+32]
	065 Move X21, [X31+40]
	066 Return 

Method: System.Void ExpandSelectGraphicalLineEnd()

Disassembly:
	0x03C843A4 LDR W8, [X0 + 0xE0]
	0x03C843A8 CBNZ W8, 0x3C843B0
	0x03C843AC BL 0x1C16DFC
	0x03C843B0 MOV W0, W21
	0x03C843B4 MOV X1, X31
	0x03C843B8 BL 0x3317FCC
	0x03C843BC TBZ X0, 0x0, 0x3C843C8
	0x03C843C0 MOVZ W0, 0x3
	0x03C843C4 B 0x3C84420
	0x03C843C8 LDR X0, [X23]
	0x03C843CC LDR W8, [X0 + 0xE0]
	0x03C843D0 CBNZ W8, 0x3C843D8
	0x03C843D4 BL 0x1C16DFC
	0x03C843D8 MOV W0, W21
	0x03C843DC MOV X1, X31
	0x03C843E0 BL 0x331ABF0
	0x03C843E4 TBNZ X0, 0x0, 0x3C84414
	0x03C843E8 MOV X0, X20
	0x03C843EC BL 0x3C8238C
	0x03C843F0 CBZ X0, 0x3C84430
	0x03C843F4 LDR W8, [X0 + 0x18]
	0x03C843F8 CMP W8, W19
	0x03C843FC B.LS 0x3C84434
	0x03C84400 MOVZ W8, 0x188
	0x03C84404 MADD X8, X22, X8, X0
	0x03C84408 LDRH W8, [X8 + 0x20]
	0x03C8440C CMP W8, 0x27
	0x03C84410 B.NE 0x3C8441C
	0x03C84414 MOV W0, W31
	0x03C84418 B 0x3C84420
	0x03C8441C MOVZ W0, 0x1
	0x03C84420 LDP X20, X19, [X31 + 0x20]
	0x03C84424 LDP X22, X21, [X31 + 0x10]
	0x03C84428 LDP X30, X23, [X31], #0x30
	0x03C8442C RET
	0x03C84430 BL 0x1C16F20
	0x03C84434 BL 0x1C16F28
	0x03C84438 STP X30, X19, [X31 - 0x10]!
	0x03C8443C MOV W19, W1
	0x03C84440 BL 0x3C822F8
	0x03C84444 CMP W0, W19
	0x03C84448 CSEL W8, W0, W19, LT
	0x03C8444C CMP W19, 0x0
	0x03C84450 CSEL W0, W31, W8, LT
	0x03C84454 LDP X30, X19, [X31], #0x10
	0x03C84458 RET
	0x03C8445C STP X30, X21, [X31 - 0x20]!
	0x03C84460 STP X20, X19, [X31 + 0x10]
	0x03C84464 ADRP X21, 0x762000
	0x03C84468 LDRB W8, [X21 + 0x9CB]
	0x03C8446C MOV W19, W1
	0x03C84470 MOV X20, X0
	0x03C84474 TBNZ X8, 0x0, 0x3C8448C
	0x03C84478 ADRP X0, 0x471000
	0x03C8447C LDR X0, [X0 + 0x170]
	0x03C84480 BL 0x1C16CF4
	0x03C84484 MOVZ W8, 0x1
	0x03C84488 STRB W8, [X21 + 0x9CB]
	0x03C8448C TBNZ X19, 0x1F, 0x3C844A0
	0x03C84490 MOV X0, X20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W1, [X0+52]
	006 Move TEMP, 0
	007 Not TEMP
	008 Move W8, TEMP
	009 Move X19, X0
	010 Move [X0+24], W31
	011 Move [X0+20], W8
	012 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	013 Move W1, [X19+56]
	014 Move W20, W0
	015 Move X0, X19
	016 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	017 Move W1, [X19+52]
	018 Move W21, W0
	019 Move X0, X19
	020 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move W20, W0
	023 Move X0, X19
	024 Move W1, W20
	025 Call TextSelectingUtilities.GetGraphicalLineEnd, X0, X1
	026 Move W8, [X19+52]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move X8, [X19+64]
	029 Move [X19+52], W0
	030 Compare X8, 0
	031 JumpIfNotEqual {54}
	032 Move W1, [X19+56]
	033 Move X0, X19
	034 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	035 Move W1, W0
	036 Move X0, X19
	037 Call TextSelectingUtilities.GetGraphicalLineEnd, X0, X1
	038 Move W8, [X19+52]
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move X8, [X19+64]
	041 Move [X19+52], W0
	042 Compare X8, 0
	043 JumpIfEqual {48}
	044 Move X9, [X8+24]
	045 Move X0, [X8+64]
	046 Move X1, [X8+40]
	047 NotImplemented "Instruction BLR not yet implemented."
	048 Move W8, [X19+56]
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move X8, [X19+72]
	051 Move [X19+56], W20
	052 Compare X8, 0
	053 JumpIfEqual {62}
	054 Move X2, [X8+24]
	055 Move X0, [X8+64]
	056 Move X1, [X8+40]
	057 Move X20, [X31+16]
	058 Move X19, [X31+24]
	059 Move X30, [X31+32]
	060 Move X21, [X31+40]
	061 CallNoReturn X2
	062 Move X20, [X31+16]
	063 Move X19, [X31+24]
	064 Move X30, [X31+32]
	065 Move X21, [X31+40]
	066 Return 

Method: System.Void DblClickSnap(UnityEngine.TextEditor/DblClickSnapping snapping)

Disassembly:
	0x03C84FA0 STP X30, X19, [X31 + 0x10]
	0x03C84FA4 ADRP X19, 0x762000

ISIL:
	001 Move [X0+16], W1
	002 Return 

Method: System.Void MoveCursorToPosition_Internal(UnityEngine.Vector2 cursorPosition, System.Boolean shift)

Disassembly:
	0x03C84FA8 LDR X8, [X19 + 0xA98]
	0x03C84FAC STP S0, S1, [X31 + 0x8]
	0x03C84FB0 CBNZ X8, 0x3C84FC8
	0x03C84FB4 ADRP X0, 0xFFFFFFFFFCE6F000
	0x03C84FB8 ADD X0, X0, 0x98A
	0x03C84FBC BL 0x1C16CB8
	0x03C84FC0 MOV X8, X0
	0x03C84FC4 STR X0, [X19 + 0xA98]
	0x03C84FC8 ADD X0, X31, 0x8
	0x03C84FCC BLR X8
	0x03C84FD0 LDP X30, X19, [X31 + 0x10]
	0x03C84FD4 ADD X31, X31, 0x20
	0x03C84FD8 RET
	0x03C84FDC STR X30, [X31 - 0x20]!
	0x03C84FE0 STP X20, X19, [X31 + 0x10]
	0x03C84FE4 ADRP X20, 0x762000
	0x03C84FE8 LDR X1, [X20 + 0xA98]
	0x03C84FEC MOV X19, X0
	0x03C84FF0 CBNZ X1, 0x3C85008
	0x03C84FF4 ADRP X0, 0xFFFFFFFFFCE6F000
	0x03C84FF8 ADD X0, X0, 0x98A
	0x03C84FFC BL 0x1C16CB8
	0x03C85000 MOV X1, X0
	0x03C85004 STR X0, [X20 + 0xA98]
	0x03C85008 MOV X0, X19
	0x03C8500C LDP X20, X19, [X31 + 0x10]
	0x03C85010 LDR X30, [X31], #0x20
	0x03C85014 BR X1
	0x03C85018 STP X30, X19, [X31 - 0x10]!
	0x03C8501C ADRP X19, 0x761000
	0x03C85020 LDR X0, [X19 + 0xA48]
	0x03C85024 CBNZ X0, 0x3C85038
	0x03C85028 ADRP X0, 0xFFFFFFFFFCE84000
	0x03C8502C ADD X0, X0, 0xA7D
	0x03C85030 BL 0x1C16CB8
	0x03C85034 STR X0, [X19 + 0xA48]
	0x03C85038 LDP X30, X19, [X31], #0x10
	0x03C8503C BR X0
	0x03C85040 STP X30, X19, [X31 - 0x10]!

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move X0, [X0+40]
	006 Compare X0, 0
	007 JumpIfEqual {46}
	008 Move W20, W1
	009 Move W1, 1
	010 Move X2, X31
	011 Call TextHandle.GetCursorIndexFromPosition, X0, X1, X2
	012 Move W8, [X19+56]
	013 NotImplemented "Instruction CMP not yet implemented."
	014 Move X8, [X19+72]
	015 Move [X19+56], W0
	016 Compare X8, 0
	017 JumpIfEqual {22}
	018 Move X9, [X8+24]
	019 Move X0, [X8+64]
	020 Move X1, [X8+40]
	021 NotImplemented "Instruction BLR not yet implemented."
	022 Move TEMP, X20
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {42}
	026 Move W1, [X19+56]
	027 Move X0, X19
	028 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	029 Move W8, [X19+52]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X8, [X19+64]
	032 Move [X19+52], W0
	033 Compare X8, 0
	034 JumpIfEqual {42}
	035 Move X2, [X8+24]
	036 Move X0, [X8+64]
	037 Move X1, [X8+40]
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move X30, [X31+32]
	041 CallNoReturn X2
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X30, [X31+32]
	045 Return 
	046 Call 0x1C17F20

Method: System.Void SelectToPosition(UnityEngine.Vector2 cursorPosition)

Disassembly:
	0x03C85044 ADRP X19, 0x761000
	0x03C85048 LDR X0, [X19 + 0xA50]
	0x03C8504C CBNZ X0, 0x3C85060
	0x03C85050 ADRP X0, 0xFFFFFFFFFCE9A000
	0x03C85054 ADD X0, X0, 0x447
	0x03C85058 BL 0x1C16CB8
	0x03C8505C STR X0, [X19 + 0xA50]
	0x03C85060 LDP X30, X19, [X31], #0x10
	0x03C85064 BR X0
	0x03C85068 STP X30, X19, [X31 - 0x10]!
	0x03C8506C ADRP X19, 0x761000
	0x03C85070 LDR X0, [X19 + 0xA58]
	0x03C85074 CBNZ X0, 0x3C85088
	0x03C85078 ADRP X0, 0xFFFFFFFFFCE94000
	0x03C8507C ADD X0, X0, 0x178
	0x03C85080 BL 0x1C16CB8
	0x03C85084 STR X0, [X19 + 0xA58]
	0x03C85088 LDP X30, X19, [X31], #0x10
	0x03C8508C BR X0
	0x03C85090 SUB X31, X31, 0x120
	0x03C85094 STP X29, X30, [X31 + 0xE0]
	0x03C85098 STP X24, X23, [X31 + 0xF0]
	0x03C8509C STP X22, X21, [X31 + 0x100]
	0x03C850A0 STP X20, X19, [X31 + 0x110]
	0x03C850A4 ADRP X19, 0x761000
	0x03C850A8 LDRB W8, [X19 + 0xA60]
	0x03C850AC TBNZ X8, 0x0, 0x3C850C4
	0x03C850B0 ADRP X0, 0x4DB000
	0x03C850B4 LDR X0, [X0 + 0x7E8]
	0x03C850B8 BL 0x1C16CF4
	0x03C850BC MOVZ W8, 0x1
	0x03C850C0 STRB W8, [X19 + 0xA60]
	0x03C850C4 ADRP X20, 0x761000
	0x03C850C8 ADRP X19, 0x4DB000
	0x03C850CC LDR X8, [X20 + 0xA50]
	0x03C850D0 LDR X19, [X19 + 0x7E8]
	0x03C850D4 CBNZ X8, 0x3C850EC
	0x03C850D8 ADRP X0, 0xFFFFFFFFFCE9A000
	0x03C850DC ADD X0, X0, 0x447
	0x03C850E0 BL 0x1C16CB8
	0x03C850E4 MOV X8, X0
	0x03C850E8 STR X0, [X20 + 0xA50]
	0x03C850EC BLR X8
	0x03C850F0 LDR X8, [X19]
	0x03C850F4 MOV W21, W0
	0x03C850F8 MOV W1, W21
	0x03C850FC MOV X0, X8
	0x03C85100 BL 0x1C16D6C
	0x03C85104 CMP W21, 0x1
	0x03C85108 MOV X19, X0
	0x03C8510C B.LT 0x3C851AC
	0x03C85110 ADRP X22, 0xFFFFFFFFFCE96000
	0x03C85114 MOV X20, X31
	0x03C85118 MOV W23, W21
	0x03C8511C ADD X21, X19, 0x20
	0x03C85120 ADRP X24, 0x761000
	0x03C85124 ADD X22, X22, 0x3D1
	0x03C85128 LDR X8, [X24 + 0xA70]
	0x03C8512C MOVI V0.2D, 0x0
	0x03C85130 STR W31, [X31 + 0xD0]
	0x03C85134 STP V0, V0, [X31 + 0xB0]
	0x03C85138 STP V0, V0, [X31 + 0x90]
	0x03C8513C CBNZ X8, 0x3C85150
	0x03C85140 MOV X0, X22
	0x03C85144 BL 0x1C16CB8
	0x03C85148 MOV X8, X0
	0x03C8514C STR X0, [X24 + 0xA70]
	0x03C85150 ADD X1, X31, 0x90
	0x03C85154 MOV W0, W20
	0x03C85158 BLR X8
	0x03C8515C ADD X0, X31, 0x48
	0x03C85160 ADD X1, X31, 0x90
	0x03C85164 MOVZ W2, 0x44
	0x03C85168 BL 0x3EB1AC0
	0x03C8516C CBZ X19, 0x3C851C8
	0x03C85170 ADD X0, X31, 0x0
	0x03C85174 ADD X1, X31, 0x48
	0x03C85178 MOVZ W2, 0x44
	0x03C8517C BL 0x3EB1AC0
	0x03C85180 LDR W8, [X19 + 0x18]
	0x03C85184 CMP X20, X8
	0x03C85188 B.CS 0x3C851CC
	0x03C8518C ADD X1, X31, 0x0
	0x03C85190 MOVZ W2, 0x44
	0x03C85194 MOV X0, X21
	0x03C85198 BL 0x3EB1AC0
	0x03C8519C ADD X20, X20, 0x1
	0x03C851A0 CMP X23, X20
	0x03C851A4 ADD X21, X21, 0x44
	0x03C851A8 B.NE 0x3C85128
	0x03C851AC MOV X0, X19
	0x03C851B0 LDP X20, X19, [X31 + 0x110]
	0x03C851B4 LDP X22, X21, [X31 + 0x100]
	0x03C851B8 LDP X24, X23, [X31 + 0xF0]
	0x03C851BC LDP X29, X30, [X31 + 0xE0]
	0x03C851C0 ADD X31, X31, 0x120
	0x03C851C4 RET
	0x03C851C8 BL 0x1C16F20
	0x03C851CC BL 0x1C16F28
	0x03C851D0 STP X30, X19, [X31 - 0x10]!
	0x03C851D4 ADRP X19, 0x761000
	0x03C851D8 LDR X0, [X19 + 0xA68]
	0x03C851DC CBNZ X0, 0x3C851F0
	0x03C851E0 ADRP X0, 0xFFFFFFFFFCE94000
	0x03C851E4 ADD X0, X0, 0x1A0
	0x03C851E8 BL 0x1C16CB8
	0x03C851EC STR X0, [X19 + 0xA68]
	0x03C851F0 LDP X30, X19, [X31], #0x10
	0x03C851F4 BR X0
	0x03C851F8 STP D9, D8, [X31 - 0x30]!
	0x03C851FC STR X30, [X31 + 0x10]
	0x03C85200 STP X20, X19, [X31 + 0x20]
	0x03C85204 ADRP X20, 0x761000
	0x03C85208 ADRP X19, 0x4DB000
	0x03C8520C LDRB W8, [X20 + 0xAA0]
	0x03C85210 LDR X19, [X19 + 0x7F0]
	0x03C85214 TBNZ X8, 0x0, 0x3C85244
	0x03C85218 ADRP X0, 0x4DB000
	0x03C8521C LDR X0, [X0 + 0x7F8]
	0x03C85220 BL 0x1C16CF4
	0x03C85224 ADRP X0, 0x4DB000
	0x03C85228 LDR X0, [X0 + 0x800]
	0x03C8522C BL 0x1C16CF4
	0x03C85230 ADRP X0, 0x4DB000
	0x03C85234 LDR X0, [X0 + 0x7F0]
	0x03C85238 BL 0x1C16CF4
	0x03C8523C MOVZ W8, 0x1
	0x03C85240 STRB W8, [X20 + 0xAA0]
	0x03C85244 LDR X0, [X19]
	0x03C85248 LDR W8, [X0 + 0xE0]
	0x03C8524C CBNZ W8, 0x3C85258
	0x03C85250 BL 0x1C16DFC
	0x03C85254 LDR X0, [X19]
	0x03C85258 LDR X8, [X0 + 0xB8]
	0x03C8525C LDR X9, [X8 + 0x28]
	0x03C85260 CBZ X9, 0x3C852C0
	0x03C85264 LDR W9, [X0 + 0xE0]
	0x03C85268 CBNZ W9, 0x3C85278
	0x03C8526C BL 0x1C16DFC
	0x03C85270 LDR X8, [X19]
	0x03C85274 LDR X8, [X8 + 0xB8]
	0x03C85278 LDR X8, [X8 + 0x28]
	0x03C8527C CBZ X8, 0x3C853B8
	0x03C85280 LDR X9, [X8 + 0x18]
	0x03C85284 LDR X0, [X8 + 0x40]
	0x03C85288 LDR X1, [X8 + 0x28]
	0x03C8528C BLR X9
	0x03C85290 LDR X8, [X19]
	0x03C85294 UBFM X10, X0, 0x20, 0x3F
	0x03C85298 CMP W0, 0x2
	0x03C8529C LDR X9, [X8 + 0xB8]
	0x03C852A0 STP W10, W1, [X9 + 0x30]
	0x03C852A4 LDR X8, [X8 + 0xB8]
	0x03C852A8 CSET W9, EQ
	0x03C852AC CMP W0, 0x0
	0x03C852B0 CSET W10, NE
	0x03C852B4 STRB W9, [X8 + 0x38]
	0x03C852B8 STRB W10, [X8 + 0x39]
	0x03C852BC B 0x3C853A8
	0x03C852C0 ADRP X20, 0x761000
	0x03C852C4 LDR X8, [X20 + 0xA68]
	0x03C852C8 CBNZ X8, 0x3C852E0
	0x03C852CC ADRP X0, 0xFFFFFFFFFCE94000
	0x03C852D0 ADD X0, X0, 0x1A0
	0x03C852D4 BL 0x1C16CB8
	0x03C852D8 MOV X8, X0
	0x03C852DC STR X0, [X20 + 0xA68]
	0x03C852E0 BLR X8
	0x03C852E4 TBZ X0, 0x0, 0x3C85310
	0x03C852E8 LDR X0, [X19]
	0x03C852EC LDR W8, [X0 + 0xE0]
	0x03C852F0 CBNZ W8, 0x3C852FC
	0x03C852F4 BL 0x1C16DFC
	0x03C852F8 LDR X0, [X19]
	0x03C852FC LDR X8, [X0 + 0xB8]
	0x03C85300 STR X31, [X8 + 0x30]
	0x03C85304 LDR X8, [X0 + 0xB8]
	0x03C85308 STRH W31, [X8 + 0x38]
	0x03C8530C B 0x3C853A8
	0x03C85310 BL 0x3C84D88
	0x03C85314 LDR X0, [X19]
	0x03C85318 MOV V8.16B, V0.16B
	0x03C8531C MOV V9.16B, V1.16B
	0x03C85320 LDR W8, [X0 + 0xE0]
	0x03C85324 CBNZ W8, 0x3C85330
	0x03C85328 BL 0x1C16DFC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move X0, [X0+40]
	006 Compare X0, 0
	007 JumpIfEqual {184}
	008 Move W20, [X19+26]
	009 Move W1, 1
	010 Move X2, X31
	011 Call TextHandle.GetCursorIndexFromPosition, X0, X1, X2
	012 Move W1, W0
	013 Compare W20, 0
	014 JumpIfEqual {31}
	015 Move X0, X19
	016 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	017 Move W8, [X19+28]
	018 Move W9, [X19+16]
	019 Move W20, W0
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Compare W9, 0
	022 Invalid "Jump target not found in method."
	023 Move W9, [X19+32]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X0, X19
	026 Call TextSelectingUtilities.get_characterCount, X0
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move X0, X19
	029 Move W1, W20
	030 Call TextSelectingUtilities.IndexOfEndOfLine, X0, X1
	031 Move W8, [X19+52]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X8, [X19+64]
	034 Move [X19+52], W1
	035 Compare X8, 0
	036 JumpIfNotEqual {142}
	037 Move W9, [X19+32]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move W10, [X19+52]
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move X10, [X19+64]
	042 Move [X19+52], W8
	043 Compare X10, 0
	044 JumpIfEqual {50}
	045 Move X8, [X10+24]
	046 Move X0, [X10+64]
	047 Move X1, [X10+40]
	048 NotImplemented "Instruction BLR not yet implemented."
	049 Move W9, [X19+32]
	050 Move W8, [X19+56]
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move X8, [X19+72]
	053 Move [X19+56], W9
	054 Compare X8, 0
	055 JumpIfNotEqual {142}
	056 Subtract W2, W20, 1
	057 Move X0, [X19+40]
	058 Compare X0, 0
	059 JumpIfEqual {184}
	060 Move W1, 10
	061 Move X3, X31
	062 Call TextHandle.LastIndexOf, X0, X1, X2
	063 Move W9, [X19+52]
	064 Add W8, W0, 1
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Move X9, [X19+64]
	067 Move [X19+52], W8
	068 Compare X9, 0
	069 JumpIfEqual {103}
	070 Move X8, [X9+24]
	071 Move X0, [X9+64]
	072 Move X1, [X9+40]
	073 NotImplemented "Instruction BLR not yet implemented."
	074 Move W2, 1
	075 Move X0, X19
	076 Move W1, W20
	077 Call TextSelectingUtilities.FindEndOfClassification, X0, X1, X2
	078 Move W8, [X19+52]
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Move X8, [X19+64]
	081 Move [X19+52], W0
	082 Compare X8, 0
	083 JumpIfEqual {88}
	084 Move X9, [X8+24]
	085 Move X0, [X8+64]
	086 Move X1, [X8+40]
	087 NotImplemented "Instruction BLR not yet implemented."
	088 Move W8, [X19+32]
	089 Move X0, X19
	090 Move W2, W31
	091 Subtract W1, W8, 1
	092 Move W8, [X19+52]
	093 Compare W8, 0
	094 JumpIfEqual {103}
	095 Move X8, [X19+64]
	096 Move [X19+52], W31
	097 Compare X8, 0
	098 JumpIfEqual {103}
	099 Move X9, [X8+24]
	100 Move X0, [X8+64]
	101 Move X1, [X8+40]
	102 NotImplemented "Instruction BLR not yet implemented."
	103 Move X20, [X19+40]
	104 Move X0, X19
	105 Call TextSelectingUtilities.get_characterCount, X0
	106 Compare X20, 0
	107 JumpIfEqual {184}
	108 Move W8, [X19+32]
	109 Subtract W9, W0, 1
	110 Move W1, 10
	111 Move X0, X20
	112 Add W8, W8, 1
	113 NotImplemented "Instruction CMP not yet implemented."
	114 NotImplemented "Instruction CSEL not yet implemented."
	115 Move X3, X31
	116 Call TextHandle.LastIndexOf, X0, X1, X2
	117 Subtract W1, W20, 1
	118 Move X0, X19
	119 Move W2, W31
	120 Call TextSelectingUtilities.FindEndOfClassification, X0, X1, X2
	121 Move W8, [X19+52]
	122 NotImplemented "Instruction CMP not yet implemented."
	123 Move X8, [X19+64]
	124 Move [X19+52], W0
	125 Compare X8, 0
	126 JumpIfEqual {131}
	127 Move X9, [X8+24]
	128 Move X0, [X8+64]
	129 Move X1, [X8+40]
	130 NotImplemented "Instruction BLR not yet implemented."
	131 Move W8, [X19+28]
	132 Move W2, 1
	133 Move X0, X19
	134 Add W1, W8, 1
	135 Call TextSelectingUtilities.FindEndOfClassification, X0, X1, X2
	136 Move W8, [X19+56]
	137 NotImplemented "Instruction CMP not yet implemented."
	138 Move X8, [X19+72]
	139 Move [X19+56], W0
	140 Compare X8, 0
	141 JumpIfEqual {180}
	142 Move X2, [X8+24]
	143 Move X0, [X8+64]
	144 Move X1, [X8+40]
	145 Move X20, [X31+16]
	146 Move X19, [X31+24]
	147 Move X30, [X31+32]
	148 CallNoReturn X2
	149 Move X0, X19
	150 Call TextSelectingUtilities.get_characterCount, X0
	151 Move W8, [X19+52]
	152 NotImplemented "Instruction CMP not yet implemented."
	153 Move X8, [X19+64]
	154 Move [X19+52], W0
	155 Compare X8, 0
	156 JumpIfEqual {161}
	157 Move X9, [X8+24]
	158 Move X0, [X8+64]
	159 Move X1, [X8+40]
	160 NotImplemented "Instruction BLR not yet implemented."
	161 Move X0, [X19+40]
	162 Compare X0, 0
	163 JumpIfEqual {184}
	164 Move W8, [X19+32]
	165 Move W1, 10
	166 Move X3, X31
	167 Subtract W8, W8, 2
	168 NotImplemented "Instruction BIC not yet implemented."
	169 Call TextHandle.LastIndexOf, X0, X1, X2
	170 Move W9, [X19+56]
	171 Add W8, W0, 1
	172 NotImplemented "Instruction CMP not yet implemented."
	173 Move X9, [X19+72]
	174 Move [X19+56], W8
	175 Compare X9, 0
	176 JumpIfEqual {180}
	177 Move X2, [X9+24]
	178 Move X0, [X9+64]
	179 Move X1, [X9+40]
	180 Move X20, [X31+16]
	181 Move X19, [X31+24]
	182 Move X30, [X31+32]
	183 Return 
	184 Call 0x1C17F20

Method: System.Int32 FindNextSeperator(System.Int32 startPos)

Disassembly:
	0x03C84DE8 CBNZ X1, 0x3C84E00
	0x03C84DEC ADRP X0, 0xFFFFFFFFFCE97000
	0x03C84DF0 ADD X0, X0, 0x417
	0x03C84DF4 BL 0x1C16CB8
	0x03C84DF8 MOV X1, X0
	0x03C84DFC STR X0, [X20 + 0xA80]
	0x03C84E00 MOV X0, X19
	0x03C84E04 LDP X20, X19, [X31 + 0x10]
	0x03C84E08 LDR X30, [X31], #0x20
	0x03C84E0C BR X1
	0x03C84E10 SUB X31, X31, 0x20
	0x03C84E14 STP X30, X19, [X31 + 0x10]
	0x03C84E18 ADRP X19, 0x762000
	0x03C84E1C LDR X8, [X19 + 0xA88]
	0x03C84E20 STR X31, [X31 + 0x8]
	0x03C84E24 CBNZ X8, 0x3C84E3C
	0x03C84E28 ADRP X0, 0xFFFFFFFFFCE9D000
	0x03C84E2C ADD X0, X0, 0x281
	0x03C84E30 BL 0x1C16CB8
	0x03C84E34 MOV X8, X0
	0x03C84E38 STR X0, [X19 + 0xA88]
	0x03C84E3C ADD X0, X31, 0x8
	0x03C84E40 BLR X8
	0x03C84E44 LDP S0, S1, [X31 + 0x8]
	0x03C84E48 LDP X30, X19, [X31 + 0x10]
	0x03C84E4C ADD X31, X31, 0x20
	0x03C84E50 RET
	0x03C84E54 STR X30, [X31 - 0x20]!
	0x03C84E58 STP X20, X19, [X31 + 0x10]
	0x03C84E5C ADRP X20, 0x762000
	0x03C84E60 LDR X1, [X20 + 0xA88]
	0x03C84E64 MOV X19, X0
	0x03C84E68 CBNZ X1, 0x3C84E80

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W19, W1
	006 Move X20, X0
	007 Call TextSelectingUtilities.get_characterCount, X0
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Move W21, W0
	010 Move X0, X20
	011 Move W1, W19
	012 Call TextSelectingUtilities.ClassifyChar, X0, X1
	013 Compare W0, 0
	014 JumpIfEqual {25}
	015 Move X0, X20
	016 Move W1, W19
	017 Call TextSelectingUtilities.NextCodePointIndex, X0, X1
	018 Move W19, W0
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move X0, X20
	021 Move W1, W19
	022 Call TextSelectingUtilities.NextCodePointIndex, X0, X1
	023 Move W19, W0
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X0, X20
	026 Move W1, W19
	027 Call TextSelectingUtilities.ClassifyChar, X0, X1
	028 Compare W0, 0
	029 JumpIfEqual {20}
	030 Move W0, W19
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Move X21, [X31+40]
	035 Return X0

Method: System.Int32 FindPrevSeperator(System.Int32 startPos)

Disassembly:
	0x03C84E6C ADRP X0, 0xFFFFFFFFFCE9D000
	0x03C84E70 ADD X0, X0, 0x281
	0x03C84E74 BL 0x1C16CB8
	0x03C84E78 MOV X1, X0
	0x03C84E7C STR X0, [X20 + 0xA88]
	0x03C84E80 MOV X0, X19
	0x03C84E84 LDP X20, X19, [X31 + 0x10]
	0x03C84E88 LDR X30, [X31], #0x20
	0x03C84E8C BR X1
	0x03C84E90 STP X30, X19, [X31 - 0x10]!
	0x03C84E94 ADRP X19, 0x762000
	0x03C84E98 LDR X0, [X19 + 0xA30]
	0x03C84E9C CBNZ X0, 0x3C84EB0
	0x03C84EA0 ADRP X0, 0xFFFFFFFFFCE8B000
	0x03C84EA4 ADD X0, X0, 0xA1B
	0x03C84EA8 BL 0x1C16CB8
	0x03C84EAC STR X0, [X19 + 0xA30]
	0x03C84EB0 LDP X30, X19, [X31], #0x10
	0x03C84EB4 BR X0
	0x03C84EB8 STR X30, [X31 - 0x20]!
	0x03C84EBC STP X20, X19, [X31 + 0x10]
	0x03C84EC0 ADRP X20, 0x762000
	0x03C84EC4 LDR X1, [X20 + 0xA38]
	0x03C84EC8 MOV W19, W0
	0x03C84ECC CBNZ X1, 0x3C84EE4
	0x03C84ED0 ADRP X0, 0xFFFFFFFFFCE79000
	0x03C84ED4 ADD X0, X0, 0x939
	0x03C84ED8 BL 0x1C16CB8
	0x03C84EDC MOV X1, X0
	0x03C84EE0 STR X0, [X20 + 0xA38]
	0x03C84EE4 MOV W0, W19
	0x03C84EE8 LDP X20, X19, [X31 + 0x10]
	0x03C84EEC LDR X30, [X31], #0x20
	0x03C84EF0 BR X1
	0x03C84EF4 STP X30, X19, [X31 - 0x10]!
	0x03C84EF8 ADRP X19, 0x762000
	0x03C84EFC LDR X0, [X19 + 0xA40]
	0x03C84F00 CBNZ X0, 0x3C84F14
	0x03C84F04 ADRP X0, 0xFFFFFFFFFCE79000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Call TextSelectingUtilities.PreviousCodePointIndex, X0, X1
	006 Move W20, W0
	007 NotImplemented "Instruction CMP not yet implemented."
	008 Move X0, X19
	009 Move W1, W20
	010 Call TextSelectingUtilities.ClassifyChar, X0, X1
	011 Compare W0, 0
	012 JumpIfEqual {20}
	013 Move X0, X19
	014 Move W1, W20
	015 Move X0, X19
	016 Move W1, W20
	017 Call TextSelectingUtilities.PreviousCodePointIndex, X0, X1
	018 Move W20, W0
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move X0, X19
	021 Move W1, W20
	022 Call TextSelectingUtilities.ClassifyChar, X0, X1
	023 Compare W0, 0
	024 JumpIfEqual {15}
	025 Compare W20, 0
	026 JumpIfEqual {39}
	027 Move X0, X19
	028 Move W1, W20
	029 Call TextSelectingUtilities.ClassifyChar, X0, X1
	030 Compare W0, 0
	031 JumpIfEqual {39}
	032 Move X0, X19
	033 Move W1, W20
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X30, [X31+32]
	037 Call TextSelectingUtilities.NextCodePointIndex, X0, X1
	038 Return X0
	039 Move W0, W20
	040 Move X20, [X31+16]
	041 Move X19, [X31+24]
	042 Move X30, [X31+32]
	043 Return X0

Method: System.Int32 FindStartOfNextWord(System.Int32 p)

Disassembly:
	0x03C7EC04 ADRP X0, 0x4E2000
	0x03C7EC08 LDR X0, [X0 + 0x5F8]
	0x03C7EC0C BL 0x1C16CF4
	0x03C7EC10 ADRP X0, 0x4E2000
	0x03C7EC14 LDR X0, [X0 + 0x6F8]
	0x03C7EC18 BL 0x1C16CF4
	0x03C7EC1C ADRP X0, 0x4E2000
	0x03C7EC20 LDR X0, [X0 + 0x700]
	0x03C7EC24 BL 0x1C16CF4
	0x03C7EC28 ADRP X0, 0x4E2000
	0x03C7EC2C LDR X0, [X0 + 0x600]
	0x03C7EC30 BL 0x1C16CF4
	0x03C7EC34 ADRP X0, 0x4E2000
	0x03C7EC38 LDR X0, [X0 + 0x608]
	0x03C7EC3C BL 0x1C16CF4
	0x03C7EC40 ADRP X0, 0x4E2000
	0x03C7EC44 LDR X0, [X0 + 0x610]
	0x03C7EC48 BL 0x1C16CF4
	0x03C7EC4C ADRP X0, 0x4E2000
	0x03C7EC50 LDR X0, [X0 + 0x708]
	0x03C7EC54 BL 0x1C16CF4
	0x03C7EC58 ADRP X0, 0x4E2000
	0x03C7EC5C LDR X0, [X0 + 0x618]
	0x03C7EC60 BL 0x1C16CF4
	0x03C7EC64 ADRP X0, 0x4E2000
	0x03C7EC68 LDR X0, [X0 + 0x620]
	0x03C7EC6C BL 0x1C16CF4
	0x03C7EC70 ADRP X0, 0x4E2000
	0x03C7EC74 LDR X0, [X0 + 0x710]
	0x03C7EC78 BL 0x1C16CF4
	0x03C7EC7C ADRP X0, 0x4E2000
	0x03C7EC80 LDR X0, [X0 + 0x718]
	0x03C7EC84 BL 0x1C16CF4
	0x03C7EC88 ADRP X0, 0x4E2000
	0x03C7EC8C LDR X0, [X0 + 0x720]
	0x03C7EC90 BL 0x1C16CF4
	0x03C7EC94 ADRP X0, 0x4E2000
	0x03C7EC98 LDR X0, [X0 + 0x628]
	0x03C7EC9C BL 0x1C16CF4
	0x03C7ECA0 ADRP X0, 0x4C7000
	0x03C7ECA4 LDR X0, [X0 + 0xFB0]
	0x03C7ECA8 BL 0x1C16CF4
	0x03C7ECAC ADRP X0, 0x4E2000
	0x03C7ECB0 LDR X0, [X0 + 0x630]
	0x03C7ECB4 BL 0x1C16CF4
	0x03C7ECB8 ADRP X0, 0x4E2000
	0x03C7ECBC LDR X0, [X0 + 0x728]
	0x03C7ECC0 BL 0x1C16CF4
	0x03C7ECC4 ADRP X0, 0x4E2000
	0x03C7ECC8 LDR X0, [X0 + 0x638]
	0x03C7ECCC BL 0x1C16CF4
	0x03C7ECD0 ADRP X0, 0x4C9000
	0x03C7ECD4 LDR X0, [X0 + 0x220]
	0x03C7ECD8 BL 0x1C16CF4
	0x03C7ECDC ADRP X0, 0x4E2000
	0x03C7ECE0 LDR X0, [X0 + 0x640]
	0x03C7ECE4 BL 0x1C16CF4
	0x03C7ECE8 ADRP X0, 0x4E2000
	0x03C7ECEC LDR X0, [X0 + 0x648]
	0x03C7ECF0 BL 0x1C16CF4
	0x03C7ECF4 ADRP X0, 0x4E2000
	0x03C7ECF8 LDR X0, [X0 + 0x730]
	0x03C7ECFC BL 0x1C16CF4
	0x03C7ED00 ADRP X0, 0x4E2000
	0x03C7ED04 LDR X0, [X0 + 0x738]
	0x03C7ED08 BL 0x1C16CF4
	0x03C7ED0C ADRP X0, 0x4E2000
	0x03C7ED10 LDR X0, [X0 + 0x650]
	0x03C7ED14 BL 0x1C16CF4
	0x03C7ED18 ADRP X0, 0x4E2000
	0x03C7ED1C LDR X0, [X0 + 0x658]
	0x03C7ED20 BL 0x1C16CF4
	0x03C7ED24 ADRP X0, 0x4AE000
	0x03C7ED28 LDR X0, [X0 + 0xB38]
	0x03C7ED2C BL 0x1C16CF4
	0x03C7ED30 ADRP X0, 0x4E2000
	0x03C7ED34 LDR X0, [X0 + 0x660]
	0x03C7ED38 BL 0x1C16CF4
	0x03C7ED3C ADRP X0, 0x4E2000
	0x03C7ED40 LDR X0, [X0 + 0x668]
	0x03C7ED44 BL 0x1C16CF4
	0x03C7ED48 ADRP X0, 0x4E2000
	0x03C7ED4C LDR X0, [X0 + 0x670]
	0x03C7ED50 BL 0x1C16CF4
	0x03C7ED54 ADRP X0, 0x4E2000
	0x03C7ED58 LDR X0, [X0 + 0x678]
	0x03C7ED5C BL 0x1C16CF4
	0x03C7ED60 ADRP X0, 0x4C9000
	0x03C7ED64 LDR X0, [X0 + 0x298]
	0x03C7ED68 BL 0x1C16CF4
	0x03C7ED6C ADRP X0, 0x4E2000
	0x03C7ED70 LDR X0, [X0 + 0x740]
	0x03C7ED74 BL 0x1C16CF4
	0x03C7ED78 ADRP X0, 0x4E2000
	0x03C7ED7C LDR X0, [X0 + 0x748]
	0x03C7ED80 BL 0x1C16CF4
	0x03C7ED84 ADRP X0, 0x4E2000
	0x03C7ED88 LDR X0, [X0 + 0x750]
	0x03C7ED8C BL 0x1C16CF4
	0x03C7ED90 ADRP X0, 0x4E2000
	0x03C7ED94 LDR X0, [X0 + 0x758]
	0x03C7ED98 BL 0x1C16CF4
	0x03C7ED9C ADRP X0, 0x4B9000
	0x03C7EDA0 LDR X0, [X0 + 0x760]
	0x03C7EDA4 BL 0x1C16CF4
	0x03C7EDA8 ADRP X0, 0x4E2000
	0x03C7EDAC LDR X0, [X0 + 0x760]
	0x03C7EDB0 BL 0x1C16CF4
	0x03C7EDB4 ADRP X0, 0x4E2000
	0x03C7EDB8 LDR X0, [X0 + 0x768]
	0x03C7EDBC BL 0x1C16CF4
	0x03C7EDC0 ADRP X0, 0x4E2000
	0x03C7EDC4 LDR X0, [X0 + 0x680]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move W20, W1
	007 Move X19, X0
	008 Call TextSelectingUtilities.get_characterCount, X0
	009 NotImplemented "Instruction CMP not yet implemented."
	010 Move W22, W20
	011 Move W21, W0
	012 Move X0, X19
	013 Move W1, W20
	014 Call TextSelectingUtilities.ClassifyChar, X0, X1
	015 NotImplemented "Instruction CMP not yet implemented."
	016 Move X0, X19
	017 Call TextSelectingUtilities.get_m_TextElementInfos, X0
	018 Compare X0, 0
	019 JumpIfEqual {104}
	020 Move W8, [X0+24]
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move X22, W20
	023 Move W8, 392
	024 NotImplemented "Instruction MADD not yet implemented."
	025 NotImplemented "Instruction LDRH not yet implemented."
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X0, X19
	028 Call TextSelectingUtilities.get_m_TextElementInfos, X0
	029 Compare X0, 0
	030 JumpIfEqual {104}
	031 Move W8, [X0+24]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move W8, 392
	034 NotImplemented "Instruction MADD not yet implemented."
	035 NotImplemented "Instruction LDRH not yet implemented."
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X0, X19
	038 Move W1, W20
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X22, [X31+16]
	042 Move X21, [X31+24]
	043 Move X30, [X31+48]
	044 Move W22, W0
	045 Move X0, X19
	046 Move W1, W20
	047 Call TextSelectingUtilities.NextCodePointIndex, X0, X1
	048 Move W20, W0
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move X0, X19
	051 Move W1, W20
	052 Call TextSelectingUtilities.ClassifyChar, X0, X1
	053 NotImplemented "Instruction CMP not yet implemented."
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move W22, W21
	056 Move W0, W22
	057 Move X20, [X31+32]
	058 Move X19, [X31+40]
	059 Move X22, [X31+16]
	060 Move X21, [X31+24]
	061 Move X30, [X31+48]
	062 Return X0
	063 Move X0, X19
	064 Call TextSelectingUtilities.get_m_TextElementInfos, X0
	065 Compare X0, 0
	066 JumpIfEqual {104}
	067 Move W8, [X0+24]
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move W8, W20
	070 Move X22, W8
	071 Move W8, 392
	072 NotImplemented "Instruction MADD not yet implemented."
	073 NotImplemented "Instruction LDRH not yet implemented."
	074 NotImplemented "Instruction CMP not yet implemented."
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Move W22, W20
	077 Move X0, X19
	078 Move W1, W22
	079 Call TextSelectingUtilities.ClassifyChar, X0, X1
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Move X0, X19
	082 Move W1, W22
	083 Call TextSelectingUtilities.NextCodePointIndex, X0, X1
	084 Move W22, W0
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move X0, X19
	087 Call TextSelectingUtilities.get_m_TextElementInfos, X0
	088 Compare X0, 0
	089 JumpIfEqual {104}
	090 Move W8, [X0+24]
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Move W8, 392
	093 NotImplemented "Instruction MADD not yet implemented."
	094 NotImplemented "Instruction LDRH not yet implemented."
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Move X0, X19
	097 Call TextSelectingUtilities.get_m_TextElementInfos, X0
	098 Compare X0, 0
	099 JumpIfEqual {104}
	100 Move W8, [X0+24]
	101 Move W22, W20
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Call 0x1C17F28
	104 Call 0x1C17F20

Method: System.Int32 FindEndOfPreviousWord(System.Int32 p)

Disassembly:
	0x03C7EB28 LDP X24, X23, [X31 + 0x10]
	0x03C7EB2C LDR X30, [X31], #0x40
	0x03C7EB30 RET
	0x03C7EB34 BL 0x1C16F20
	0x03C7EB38 SUB X31, X31, 0x170
	0x03C7EB3C STP X29, X30, [X31 + 0x110]
	0x03C7EB40 STP X28, X27, [X31 + 0x120]
	0x03C7EB44 STP X26, X25, [X31 + 0x130]
	0x03C7EB48 STP X24, X23, [X31 + 0x140]
	0x03C7EB4C STP X22, X21, [X31 + 0x150]
	0x03C7EB50 STP X20, X19, [X31 + 0x160]
	0x03C7EB54 ADRP X19, 0x768000
	0x03C7EB58 ADRP X20, 0x4E2000
	0x03C7EB5C LDRB W8, [X19 + 0x9C1]
	0x03C7EB60 LDR X20, [X20 + 0x2A0]
	0x03C7EB64 TBNZ X8, 0x0, 0x3C7EE64
	0x03C7EB68 ADRP X0, 0x4E2000
	0x03C7EB6C LDR X0, [X0 + 0x6E0]
	0x03C7EB70 BL 0x1C16CF4
	0x03C7EB74 ADRP X0, 0x4E2000
	0x03C7EB78 LDR X0, [X0 + 0x6E8]
	0x03C7EB7C BL 0x1C16CF4
	0x03C7EB80 ADRP X0, 0x4E2000
	0x03C7EB84 LDR X0, [X0 + 0x2A0]
	0x03C7EB88 BL 0x1C16CF4
	0x03C7EB8C ADRP X0, 0x4E2000
	0x03C7EB90 LDR X0, [X0 + 0x5C8]
	0x03C7EB94 BL 0x1C16CF4
	0x03C7EB98 ADRP X0, 0x4C9000
	0x03C7EB9C LDR X0, [X0 + 0xF8]
	0x03C7EBA0 BL 0x1C16CF4
	0x03C7EBA4 ADRP X0, 0x4C6000
	0x03C7EBA8 LDR X0, [X0 + 0xE98]
	0x03C7EBAC BL 0x1C16CF4
	0x03C7EBB0 ADRP X0, 0x4E2000
	0x03C7EBB4 LDR X0, [X0 + 0x6F0]
	0x03C7EBB8 BL 0x1C16CF4
	0x03C7EBBC ADRP X0, 0x4E2000
	0x03C7EBC0 LDR X0, [X0 + 0x5D0]
	0x03C7EBC4 BL 0x1C16CF4
	0x03C7EBC8 ADRP X0, 0x4E2000
	0x03C7EBCC LDR X0, [X0 + 0x5D8]
	0x03C7EBD0 BL 0x1C16CF4
	0x03C7EBD4 ADRP X0, 0x4E2000
	0x03C7EBD8 LDR X0, [X0 + 0x5E0]
	0x03C7EBDC BL 0x1C16CF4
	0x03C7EBE0 ADRP X0, 0x4E2000
	0x03C7EBE4 LDR X0, [X0 + 0x5E8]
	0x03C7EBE8 BL 0x1C16CF4
	0x03C7EBEC ADRP X0, 0x4C7000
	0x03C7EBF0 LDR X0, [X0 + 0xFA8]
	0x03C7EBF4 BL 0x1C16CF4
	0x03C7EBF8 ADRP X0, 0x4E2000
	0x03C7EBFC LDR X0, [X0 + 0x5F0]
	0x03C7EC00 BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Compare W1, 0
	006 JumpIfEqual {44}
	007 Move X19, X0
	008 Call TextSelectingUtilities.PreviousCodePointIndex, X0, X1
	009 Move W20, W0
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Move W21, 392
	012 Move X0, X19
	013 Call TextSelectingUtilities.get_m_TextElementInfos, X0
	014 Compare X0, 0
	015 JumpIfEqual {51}
	016 Move W8, [X0+24]
	017 NotImplemented "Instruction CMP not yet implemented."
	018 NotImplemented "Instruction UMADDL not yet implemented."
	019 NotImplemented "Instruction LDRH not yet implemented."
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Move X0, X19
	022 Move W1, W20
	023 Call TextSelectingUtilities.PreviousCodePointIndex, X0, X1
	024 Move W20, W0
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X0, X19
	027 Move W1, W20
	028 Call TextSelectingUtilities.ClassifyChar, X0, X1
	029 NotImplemented "Instruction CMP not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move W21, W0
	032 Move X0, X19
	033 Move W1, W20
	034 Call TextSelectingUtilities.PreviousCodePointIndex, X0, X1
	035 Move W1, W0
	036 Move X0, X19
	037 Call TextSelectingUtilities.ClassifyChar, X0, X1
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move X0, X19
	040 Move W1, W20
	041 Call TextSelectingUtilities.PreviousCodePointIndex, X0, X1
	042 Move W20, W0
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move W20, W31
	045 Move W0, W20
	046 Move X20, [X31+16]
	047 Move X19, [X31+24]
	048 Move X30, [X31+32]
	049 Move X21, [X31+40]
	050 Return X0
	051 Call 0x1C17F20
	052 Call 0x1C17F28

Method: System.Int32 FindEndOfClassification(System.Int32 p, UnityEngine.TextSelectingUtilities/Direction dir)

Disassembly:
	0x03C84BB4 MOV W20, W0
	0x03C84BB8 CBNZ X2, 0x3C84BD0
	0x03C84BBC ADRP X0, 0xFFFFFFFFFCE97000
	0x03C84BC0 ADD X0, X0, 0x3D1
	0x03C84BC4 BL 0x1C16CB8
	0x03C84BC8 MOV X2, X0
	0x03C84BCC STR X0, [X21 + 0xA70]
	0x03C84BD0 MOV W0, W20
	0x03C84BD4 MOV X1, X19
	0x03C84BD8 LDP X20, X19, [X31 + 0x10]
	0x03C84BDC LDP X30, X21, [X31], #0x20
	0x03C84BE0 BR X2
	0x03C84BE4 SUB X31, X31, 0x50
	0x03C84BE8 STR X30, [X31 + 0x30]
	0x03C84BEC STP X20, X19, [X31 + 0x40]
	0x03C84BF0 ADRP X20, 0x762000
	0x03C84BF4 MOV X19, X8
	0x03C84BF8 LDR X8, [X20 + 0xA78]
	0x03C84BFC MOVI V0.2D, 0x0
	0x03C84C00 STR X31, [X31 + 0x20]
	0x03C84C04 STP V0, V0, [X31]
	0x03C84C08 CBNZ X8, 0x3C84C20
	0x03C84C0C ADRP X0, 0xFFFFFFFFFCE95000
	0x03C84C10 ADD X0, X0, 0x1C3
	0x03C84C14 BL 0x1C16CB8
	0x03C84C18 MOV X8, X0
	0x03C84C1C STR X0, [X20 + 0xA78]
	0x03C84C20 ADD X0, X31, 0x0
	0x03C84C24 BLR X8
	0x03C84C28 LDR X8, [X31 + 0x20]
	0x03C84C2C LDP V1, V0, [X31]
	0x03C84C30 LDR X30, [X31 + 0x30]
	0x03C84C34 STR X8, [X19 + 0x20]
	0x03C84C38 STP V1, V0, [X19]
	0x03C84C3C LDP X20, X19, [X31 + 0x40]
	0x03C84C40 ADD X31, X31, 0x50
	0x03C84C44 RET
	0x03C84C48 STR X30, [X31 - 0x20]!
	0x03C84C4C STP X20, X19, [X31 + 0x10]
	0x03C84C50 ADRP X20, 0x762000
	0x03C84C54 LDR X1, [X20 + 0xA78]
	0x03C84C58 MOV X19, X0
	0x03C84C5C CBNZ X1, 0x3C84C74
	0x03C84C60 ADRP X0, 0xFFFFFFFFFCE95000
	0x03C84C64 ADD X0, X0, 0x1C3
	0x03C84C68 BL 0x1C16CB8
	0x03C84C6C MOV X1, X0
	0x03C84C70 STR X0, [X20 + 0xA78]
	0x03C84C74 MOV X0, X19
	0x03C84C78 LDP X20, X19, [X31 + 0x10]
	0x03C84C7C LDR X30, [X31], #0x20
	0x03C84C80 BR X1
	0x03C84C84 STP X30, X19, [X31 - 0x10]!
	0x03C84C88 ADRP X19, 0x762000
	0x03C84C8C LDR X0, [X19 + 0xA20]
	0x03C84C90 CBNZ X0, 0x3C84CA4
	0x03C84C94 ADRP X0, 0xFFFFFFFFFCE6B000
	0x03C84C98 ADD X0, X0, 0x6DF
	0x03C84C9C BL 0x1C16CB8
	0x03C84CA0 STR X0, [X19 + 0xA20]
	0x03C84CA4 LDP X30, X19, [X31], #0x10
	0x03C84CA8 BR X0
	0x03C84CAC STR X30, [X31 - 0x20]!
	0x03C84CB0 STP X20, X19, [X31 + 0x10]
	0x03C84CB4 ADRP X20, 0x762000
	0x03C84CB8 LDR X1, [X20 + 0x9E8]
	0x03C84CBC MOV W19, W0
	0x03C84CC0 CBNZ X1, 0x3C84CD8
	0x03C84CC4 ADRP X0, 0xFFFFFFFFFCE93000
	0x03C84CC8 ADD X0, X0, 0x17D
	0x03C84CCC BL 0x1C16CB8
	0x03C84CD0 MOV X1, X0
	0x03C84CD4 STR X0, [X20 + 0x9E8]
	0x03C84CD8 MOV W0, W19
	0x03C84CDC LDP X20, X19, [X31 + 0x10]
	0x03C84CE0 LDR X30, [X31], #0x20
	0x03C84CE4 BR X1
	0x03C84CE8 STR X30, [X31 - 0x20]!
	0x03C84CEC STP X20, X19, [X31 + 0x10]
	0x03C84CF0 ADRP X20, 0x762000
	0x03C84CF4 LDR X1, [X20 + 0x9F0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move W21, W2
	007 Move W20, W1
	008 Move X19, X0
	009 Call TextSelectingUtilities.get_characterCount, X0
	010 Compare W0, 0
	011 JumpIfEqual {50}
	012 Move X0, X19
	013 Call TextSelectingUtilities.get_characterCount, X0
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Move X0, X19
	016 Move W1, W20
	017 Call TextSelectingUtilities.PreviousCodePointIndex, X0, X1
	018 Move W20, W0
	019 Move X0, X19
	020 Move W1, W20
	021 Call TextSelectingUtilities.ClassifyChar, X0, X1
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move W22, W0
	024 Move X0, X19
	025 Compare W21, 0
	026 JumpIfEqual {40}
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move W1, W20
	029 Call TextSelectingUtilities.ClassifyChar, X0, X1
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move W1, W20
	032 Call TextSelectingUtilities.PreviousCodePointIndex, X0, X1
	033 Move W20, W0
	034 Compare W0, 0
	035 JumpIfEqual {70}
	036 Move X0, X19
	037 Move W1, W20
	038 Call TextSelectingUtilities.ClassifyChar, X0, X1
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move W1, W20
	041 Call TextSelectingUtilities.NextCodePointIndex, X0, X1
	042 Move W20, W0
	043 Move X0, X19
	044 Call TextSelectingUtilities.get_characterCount, X0
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move X0, X19
	047 Move W1, W20
	048 Call TextSelectingUtilities.ClassifyChar, X0, X1
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move W20, W31
	051 Compare W21, 0
	052 JumpIfEqual {74}
	053 Move X0, X19
	054 Move W1, W20
	055 Move X20, [X31+32]
	056 Move X19, [X31+40]
	057 Move X22, [X31+16]
	058 Move X21, [X31+24]
	059 Move X30, [X31+48]
	060 Call TextSelectingUtilities.NextCodePointIndex, X0, X1
	061 Return X0
	062 Move X0, X19
	063 Move X20, [X31+32]
	064 Move X19, [X31+40]
	065 Move X22, [X31+16]
	066 Move X21, [X31+24]
	067 Move X30, [X31+48]
	068 Call TextSelectingUtilities.get_characterCount, X0
	069 Return X0
	070 Move X0, X19
	071 Move W1, W31
	072 Call TextSelectingUtilities.ClassifyChar, X0, X1
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move W0, W20
	075 Move X20, [X31+32]
	076 Move X19, [X31+40]
	077 Move X22, [X31+16]
	078 Move X21, [X31+24]
	079 Move X30, [X31+48]
	080 Return X0
	081 Move X0, X19
	082 Move W1, W31

Method: System.Int32 ClampTextIndex(System.Int32 index)

Disassembly:
	0x03C85438 STP X24, X23, [X31 + 0xF0]
	0x03C8543C STP X22, X21, [X31 + 0x100]
	0x03C85440 STP X20, X19, [X31 + 0x110]
	0x03C85444 ADRP X20, 0x761000
	0x03C85448 ADRP X28, 0x4DB000
	0x03C8544C LDRB W8, [X20 + 0xAA2]
	0x03C85450 LDR X28, [X28 + 0x7F0]
	0x03C85454 MOV W19, W0
	0x03C85458 TBNZ X8, 0x0, 0x3C85494

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W19, W1
	004 Call TextSelectingUtilities.get_characterCount, X0
	005 NotImplemented "Instruction CMP not yet implemented."
	006 NotImplemented "Instruction CSEL not yet implemented."
	007 NotImplemented "Instruction CMP not yet implemented."
	008 NotImplemented "Instruction CSEL not yet implemented."
	009 Move X30, [X31+16]
	010 Move X19, [X31+24]
	011 Return X0

Method: System.Int32 EnsureValidCodePointIndex(System.Int32 index)

Disassembly:
	0x03C833B4 MOV X19, X0
	0x03C833B8 STRB W31, [X0 + 0x18]
	0x03C833BC STR W8, [X0 + 0x14]
	0x03C833C0 BL 0x3C823B4
	0x03C833C4 LDR W1, [X19 + 0x38]
	0x03C833C8 MOV W20, W0
	0x03C833CC MOV X0, X19
	0x03C833D0 BL 0x3C823B4
	0x03C833D4 LDR W1, [X19 + 0x34]
	0x03C833D8 MOV W21, W0
	0x03C833DC MOV X0, X19
	0x03C833E0 BL 0x3C823B4
	0x03C833E4 CMP W20, W21
	0x03C833E8 MOV W20, W0
	0x03C833EC B.LE 0x3C83418
	0x03C833F0 MOV X0, X19
	0x03C833F4 MOV W1, W20
	0x03C833F8 BL 0x3C839B0
	0x03C833FC LDR W8, [X19 + 0x34]
	0x03C83400 CMP W8, W0
	0x03C83404 B.EQ 0x3C83488
	0x03C83408 LDR X8, [X19 + 0x40]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W20, W1
	005 Move X19, X0
	006 Call TextSelectingUtilities.get_characterCount, X0
	007 NotImplemented "Instruction CMP not yet implemented."
	008 NotImplemented "Instruction CSEL not yet implemented."
	009 NotImplemented "Instruction CMP not yet implemented."
	010 NotImplemented "Instruction CSEL not yet implemented."
	011 Move X0, X19
	012 Move W1, W20
	013 Call TextSelectingUtilities.IsValidCodePointIndex, X0, X1
	014 Move TEMP, X0
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfNotEqual {23}
	018 Move W0, W20
	019 Move X20, [X31+16]
	020 Move X19, [X31+24]
	021 Move X30, [X31+32]
	022 Return X0
	023 Move X0, X19
	024 Move W1, W20
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Call TextSelectingUtilities.NextCodePointIndex, X0, X1
	029 Return X0

Method: System.Boolean IsValidCodePointIndex(System.Int32 index)

Disassembly:
	0x03C8545C ADRP X0, 0x498000
	0x03C85460 LDR X0, [X0 + 0xF98]
	0x03C85464 BL 0x1C16CF4
	0x03C85468 ADRP X0, 0x4D2000
	0x03C8546C LDR X0, [X0 + 0x448]
	0x03C85470 BL 0x1C16CF4
	0x03C85474 ADRP X0, 0x46E000
	0x03C85478 LDR X0, [X0 + 0x598]
	0x03C8547C BL 0x1C16CF4
	0x03C85480 ADRP X0, 0x4DB000
	0x03C85484 LDR X0, [X0 + 0x7F0]
	0x03C85488 BL 0x1C16CF4
	0x03C8548C MOVZ W8, 0x1
	0x03C85490 STRB W8, [X20 + 0xAA2]
	0x03C85494 LDR X0, [X28]
	0x03C85498 STR W31, [X31 + 0x78]
	0x03C8549C STR X31, [X31 + 0x70]
	0x03C854A0 LDR W8, [X0 + 0xE0]
	0x03C854A4 CBNZ W8, 0x3C854AC
	0x03C854A8 BL 0x1C16DFC
	0x03C854AC BL 0x3C851F8
	0x03C854B0 LDR X8, [X28]
	0x03C854B4 MOV X0, X31
	0x03C854B8 LDR X8, [X8 + 0xB8]
	0x03C854BC LDP S8, S9, [X8 + 0x30]
	0x03C854C0 BL 0x3C04A74
	0x03C854C4 LDR X8, [X28]
	0x03C854C8 MOV W20, W0
	0x03C854CC LDR X9, [X8 + 0xB8]
	0x03C854D0 LDR X9, [X9 + 0x20]
	0x03C854D4 CBZ X9, 0x3C85504
	0x03C854D8 LDR W10, [X8 + 0xE0]
	0x03C854DC CBNZ W10, 0x3C854F8
	0x03C854E0 MOV X0, X8
	0x03C854E4 BL 0x1C16DFC
	0x03C854E8 LDR X8, [X28]
	0x03C854EC LDR X9, [X8 + 0xB8]
	0x03C854F0 LDR X9, [X9 + 0x20]
	0x03C854F4 CBZ X9, 0x3C85D78
	0x03C854F8 LDR W9, [X9 + 0x18]
	0x03C854FC CMP W20, W9
	0x03C85500 B.EQ 0x3C8553C
	0x03C85504 ADRP X8, 0x498000
	0x03C85508 LDR X8, [X8 + 0xF98]
	0x03C8550C MOV W1, W20
	0x03C85510 LDR X0, [X8]
	0x03C85514 BL 0x1C16D6C
	0x03C85518 LDR X8, [X28]
	0x03C8551C MOV X20, X0
	0x03C85520 LDR W9, [X8 + 0xE0]
	0x03C85524 CBNZ W9, 0x3C85534
	0x03C85528 MOV X0, X8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x762000
	006 Move W8, [X21+2507]
	007 Move W19, W1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x471000
	014 Move X0, [X0+368]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2507], W8
	018 Move TEMP, X19
	019 And TEMP, TEMP, -2147483648
	020 Compare TEMP, -2147483648
	021 JumpIfEqual {25}
	022 Move X0, X20
	023 Call TextSelectingUtilities.get_characterCount, X0
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move W8, W31
	026 Compare W19, 0
	027 JumpIfEqual {31}
	028 Move X0, X20
	029 Call TextSelectingUtilities.get_characterCount, X0
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move W8, 1
	032 Move X0, X20
	033 Call TextSelectingUtilities.get_m_TextElementInfos, X0
	034 Compare X0, 0
	035 JumpIfEqual {59}
	036 Move W8, [X0+24]
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X8, 0x471000
	039 Move X8, [X8+368]
	040 Move W9, 392
	041 NotImplemented "Instruction UMADDL not yet implemented."
	042 NotImplemented "Instruction LDRH not yet implemented."
	043 Move X8, [X8]
	044 Move W10, [X8+224]
	045 Compare W10, 0
	046 JumpIfNotEqual {49}
	047 Move X0, X8
	048 Call 0x1C17DFC
	049 Move W0, W19
	050 Move X1, X31
	051 Call Char.IsLowSurrogate, X0
	052 Xor W8, W0, 1
	053 Move X20, [X31+16]
	054 Move X19, [X31+24]
	055 And W0, W8, 1
	056 Move X30, [X31+32]
	057 Move X21, [X31+40]
	058 Return X0
	059 Call 0x1C17F20
	060 Call 0x1C17F28

Method: System.Int32 IndexOfEndOfLine(System.Int32 startIndex)

Disassembly:
	0x03C84A64 MOV W19, W0
	0x03C84A68 CBNZ X1, 0x3C84A80
	0x03C84A6C ADRP X0, 0xFFFFFFFFFCE79000
	0x03C84A70 ADD X0, X0, 0x909
	0x03C84A74 BL 0x1C16CB8
	0x03C84A78 MOV X1, X0
	0x03C84A7C STR X0, [X20 + 0xA00]
	0x03C84A80 MOV W0, W19
	0x03C84A84 LDP X20, X19, [X31 + 0x10]
	0x03C84A88 LDR X30, [X31], #0x20
	0x03C84A8C BR X1
	0x03C84A90 STR X30, [X31 - 0x20]!
	0x03C84A94 STP X20, X19, [X31 + 0x10]
	0x03C84A98 ADRP X20, 0x762000
	0x03C84A9C LDR X1, [X20 + 0xA08]
	0x03C84AA0 MOV W19, W0

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+40]
	005 Compare X0, 0
	006 JumpIfEqual {20}
	007 Move W2, W1
	008 Move W1, 10
	009 Move X3, X31
	010 Call TextHandle.IndexOf, X0, X1, X2
	011 Add W31, W0, 1
	012 Move X30, [X31+16]
	013 Move X19, [X31+24]
	014 Return X0
	015 Move X0, X19
	016 Move X30, [X31+16]
	017 Move X19, [X31+24]
	018 Call TextSelectingUtilities.get_characterCount, X0
	019 Return X0
	020 Call 0x1C17F20

Method: System.Int32 PreviousCodePointIndex(System.Int32 index)

Disassembly:
	0x03C7EEA8 LDR X8, [X8 + 0x6E0]
	0x03C7EEAC MOV X19, X0
	0x03C7EEB0 LDR X1, [X8]
	0x03C7EEB4 BL 0x2AA1784
	0x03C7EEB8 LDR X8, [X20]
	0x03C7EEBC MOV W1, W31
	0x03C7EEC0 LDR X8, [X8 + 0xB8]
	0x03C7EEC4 STR X19, [X8]
	0x03C7EEC8 ADRP X8, 0x4AE000
	0x03C7EECC LDR X8, [X8 + 0xB38]
	0x03C7EED0 LDR X0, [X8]
	0x03C7EED4 BL 0x3C82048
	0x03C7EED8 ADRP X8, 0x4B9000
	0x03C7EEDC LDR X8, [X8 + 0x760]
	0x03C7EEE0 MOVZ W1, 0x1
	0x03C7EEE4 LDR X0, [X8]
	0x03C7EEE8 BL 0x3C82048
	0x03C7EEEC ADRP X8, 0x4C7000
	0x03C7EEF0 LDR X8, [X8 + 0xFA8]
	0x03C7EEF4 MOVZ W1, 0x2
	0x03C7EEF8 LDR X0, [X8]
	0x03C7EEFC BL 0x3C82048
	0x03C7EF00 ADRP X8, 0x4C7000
	0x03C7EF04 LDR X8, [X8 + 0xFB0]
	0x03C7EF08 MOVZ W1, 0x3
	0x03C7EF0C LDR X0, [X8]
	0x03C7EF10 BL 0x3C82048
	0x03C7EF14 ADRP X8, 0x4E2000
	0x03C7EF18 LDR X8, [X8 + 0x720]
	0x03C7EF1C MOVZ W1, 0x12
	0x03C7EF20 LDR X0, [X8]
	0x03C7EF24 BL 0x3C82048
	0x03C7EF28 ADRP X8, 0x4E2000
	0x03C7EF2C LDR X8, [X8 + 0x760]
	0x03C7EF30 MOVZ W1, 0x13
	0x03C7EF34 LDR X0, [X8]
	0x03C7EF38 BL 0x3C82048
	0x03C7EF3C ADRP X8, 0x4E2000
	0x03C7EF40 LDR X8, [X8 + 0x770]
	0x03C7EF44 MOVZ W1, 0x14
	0x03C7EF48 LDR X0, [X8]
	0x03C7EF4C BL 0x3C82048
	0x03C7EF50 ADRP X8, 0x4E2000
	0x03C7EF54 LDR X8, [X8 + 0x718]
	0x03C7EF58 MOVZ W1, 0x15
	0x03C7EF5C LDR X0, [X8]
	0x03C7EF60 BL 0x3C82048
	0x03C7EF64 ADRP X8, 0x4C9000
	0x03C7EF68 LDR X8, [X8 + 0xF8]
	0x03C7EF6C MOVZ W1, 0x24
	0x03C7EF70 LDR X0, [X8]
	0x03C7EF74 BL 0x3C82048
	0x03C7EF78 ADRP X8, 0x4C9000
	0x03C7EF7C LDR X8, [X8 + 0x220]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x769000
	008 Move W8, [X21+2508]
	009 Move W20, W1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x478000
	016 Move X0, [X0+368]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+2508], W8
	020 NotImplemented "Instruction CMP not yet implemented."
	021 NotImplemented "Instruction CSET not yet implemented."
	022 Subtract W0, W20, W8
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move X22, 0x478000
	025 Move X22, [X22+368]
	026 Move W8, 392
	027 NotImplemented "Instruction UMADDL not yet implemented."
	028 Move W21, W0
	029 Add X23, X8, 32
	030 Move X0, X19
	031 Call TextSelectingUtilities.get_m_TextElementInfos, X0
	032 Compare X0, 0
	033 JumpIfEqual {63}
	034 Move W8, [X0+24]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move X8, [X22]
	037 NotImplemented "Instruction LDRH not yet implemented."
	038 Move W9, [X8+224]
	039 Compare W9, 0
	040 JumpIfNotEqual {43}
	041 Move X0, X8
	042 Call 0x1C17DFC
	043 Move W0, W20
	044 Move X1, X31
	045 Call Char.IsLowSurrogate, X0
	046 Move TEMP, X0
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfNotEqual {55}
	050 Subtract X21, X21, 1
	051 Add W8, W21, 1
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Subtract X23, X23, 392
	054 Move W0, W31
	055 Move W0, W21
	056 Move X20, [X31+32]
	057 Move X19, [X31+40]
	058 Move X22, [X31+16]
	059 Move X21, [X31+24]
	060 Move X30, [X31+48]
	061 Move X23, [X31+56]
	062 Return X0
	063 Call 0x1C17F20
	064 Call 0x1C17F28

Method: System.Int32 NextCodePointIndex(System.Int32 index)

Disassembly:
	0x03C7EDC8 BL 0x1C16CF4
	0x03C7EDCC ADRP X0, 0x4E2000
	0x03C7EDD0 LDR X0, [X0 + 0x688]
	0x03C7EDD4 BL 0x1C16CF4
	0x03C7EDD8 ADRP X0, 0x4E2000
	0x03C7EDDC LDR X0, [X0 + 0x770]
	0x03C7EDE0 BL 0x1C16CF4
	0x03C7EDE4 ADRP X0, 0x4E2000
	0x03C7EDE8 LDR X0, [X0 + 0x778]
	0x03C7EDEC BL 0x1C16CF4
	0x03C7EDF0 ADRP X0, 0x4E2000
	0x03C7EDF4 LDR X0, [X0 + 0x690]
	0x03C7EDF8 BL 0x1C16CF4
	0x03C7EDFC ADRP X0, 0x4E2000
	0x03C7EE00 LDR X0, [X0 + 0x698]
	0x03C7EE04 BL 0x1C16CF4
	0x03C7EE08 ADRP X0, 0x4E2000
	0x03C7EE0C LDR X0, [X0 + 0x780]
	0x03C7EE10 BL 0x1C16CF4
	0x03C7EE14 ADRP X0, 0x4E2000
	0x03C7EE18 LDR X0, [X0 + 0x6A0]
	0x03C7EE1C BL 0x1C16CF4
	0x03C7EE20 ADRP X0, 0x4E2000
	0x03C7EE24 LDR X0, [X0 + 0x6A8]
	0x03C7EE28 BL 0x1C16CF4
	0x03C7EE2C ADRP X0, 0x4E2000
	0x03C7EE30 LDR X0, [X0 + 0x788]
	0x03C7EE34 BL 0x1C16CF4
	0x03C7EE38 ADRP X0, 0x4E2000
	0x03C7EE3C LDR X0, [X0 + 0x790]
	0x03C7EE40 BL 0x1C16CF4
	0x03C7EE44 ADRP X0, 0x4E2000
	0x03C7EE48 LDR X0, [X0 + 0x6B0]
	0x03C7EE4C BL 0x1C16CF4
	0x03C7EE50 ADRP X0, 0x4E2000
	0x03C7EE54 LDR X0, [X0 + 0x798]
	0x03C7EE58 BL 0x1C16CF4
	0x03C7EE5C MOVZ W8, 0x1
	0x03C7EE60 STRB W8, [X19 + 0x9C1]
	0x03C7EE64 LDR X8, [X20]
	0x03C7EE68 LDR X8, [X8 + 0xB8]
	0x03C7EE6C LDR X8, [X8]
	0x03C7EE70 CBZ X8, 0x3C7EE94
	0x03C7EE74 LDP X20, X19, [X31 + 0x160]
	0x03C7EE78 LDP X22, X21, [X31 + 0x150]
	0x03C7EE7C LDP X24, X23, [X31 + 0x140]
	0x03C7EE80 LDP X26, X25, [X31 + 0x130]
	0x03C7EE84 LDP X28, X27, [X31 + 0x120]
	0x03C7EE88 LDP X29, X30, [X31 + 0x110]
	0x03C7EE8C ADD X31, X31, 0x170
	0x03C7EE90 RET
	0x03C7EE94 ADRP X8, 0x4E2000
	0x03C7EE98 LDR X8, [X8 + 0x6E8]
	0x03C7EE9C LDR X0, [X8]
	0x03C7EEA0 BL 0x1C16F10
	0x03C7EEA4 ADRP X8, 0x4E2000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x769000
	008 Move W8, [X21+2509]
	009 Move W20, W1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x478000
	016 Move X0, [X0+368]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+2509], W8
	020 Move X0, X19
	021 Call TextSelectingUtilities.get_characterCount, X0
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move X0, X19
	024 NotImplemented "Instruction CINC not yet implemented."
	025 Call TextSelectingUtilities.get_characterCount, X0
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X22, 0x478000
	028 Move X22, [X22+368]
	029 Move W8, 392
	030 NotImplemented "Instruction SMADDL not yet implemented."
	031 Add X23, X8, 32
	032 Move X20, W20
	033 Move X0, X19
	034 Call TextSelectingUtilities.get_m_TextElementInfos, X0
	035 Compare X0, 0
	036 JumpIfEqual {66}
	037 Move W8, [X0+24]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move X8, [X22]
	040 NotImplemented "Instruction LDRH not yet implemented."
	041 Move W9, [X8+224]
	042 Compare W9, 0
	043 JumpIfNotEqual {46}
	044 Move X0, X8
	045 Call 0x1C17DFC
	046 Move W0, W21
	047 Move X1, X31
	048 Call Char.IsLowSurrogate, X0
	049 Move TEMP, X0
	050 And TEMP, TEMP, 1
	051 Compare TEMP, 1
	052 JumpIfNotEqual {58}
	053 Move X0, X19
	054 Add X20, X20, 1
	055 Call TextSelectingUtilities.get_characterCount, X0
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Add X23, X23, 392
	058 Move W0, W20
	059 Move X20, [X31+32]
	060 Move X19, [X31+40]
	061 Move X22, [X31+16]
	062 Move X21, [X31+24]
	063 Move X30, [X31+48]
	064 Move X23, [X31+56]
	065 Return X0
	066 Call 0x1C17F20
	067 Call 0x1C17F28

Method: System.Int32 GetGraphicalLineStart(System.Int32 p)

Disassembly:
	0x03C84904 ADRP X0, 0xFFFFFFFFFCE81000
	0x03C84908 ADD X0, X0, 0x724
	0x03C8490C BL 0x1C16CB8
	0x03C84910 MOV X1, X0
	0x03C84914 STR X0, [X20 + 0xAE0]
	0x03C84918 MOV X0, X19
	0x03C8491C LDP X20, X19, [X31 + 0x10]
	0x03C84920 LDR X30, [X31], #0x20
	0x03C84924 BR X1
	0x03C84928 STR X30, [X31 - 0x20]!
	0x03C8492C STP X20, X19, [X31 + 0x10]
	0x03C84930 ADRP X20, 0x762000
	0x03C84934 LDR X1, [X20 + 0xAF0]
	0x03C84938 MOV X19, X0
	0x03C8493C CBNZ X1, 0x3C84954
	0x03C84940 ADRP X0, 0xFFFFFFFFFCE85000
	0x03C84944 ADD X0, X0, 0xAA3
	0x03C84948 BL 0x1C16CB8
	0x03C8494C MOV X1, X0
	0x03C84950 STR X0, [X20 + 0xAF0]
	0x03C84954 MOV X0, X19
	0x03C84958 LDP X20, X19, [X31 + 0x10]
	0x03C8495C LDR X30, [X31], #0x20
	0x03C84960 BR X1
	0x03C84964 STR X30, [X31 - 0x20]!
	0x03C84968 STP X20, X19, [X31 + 0x10]
	0x03C8496C ADRP X20, 0x762000
	0x03C84970 LDR X1, [X20 + 0xAF0]
	0x03C84974 MOV X19, X0
	0x03C84978 CBNZ X1, 0x3C84990
	0x03C8497C ADRP X0, 0xFFFFFFFFFCE85000
	0x03C84980 ADD X0, X0, 0xAA3
	0x03C84984 BL 0x1C16CB8
	0x03C84988 MOV X1, X0
	0x03C8498C STR X0, [X20 + 0xAF0]
	0x03C84990 MOV X0, X19
	0x03C84994 LDP X20, X19, [X31 + 0x10]
	0x03C84998 LDR X30, [X31], #0x20
	0x03C8499C BR X1
	0x03C849A0 STR X30, [X31 - 0x20]!
	0x03C849A4 STP X20, X19, [X31 + 0x10]
	0x03C849A8 ADRP X20, 0x762000
	0x03C849AC LDR X1, [X20 + 0x9E8]

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x763000
	007 Move W8, [X21+2510]
	008 Move W20, W1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x49C000
	015 Move X0, [X0+1480]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2510], W8
	019 Move X0, [X19+40]
	020 Compare X0, 0
	021 JumpIfEqual {54}
	022 Move X21, 0x49C000
	023 Move X21, [X21+1480]
	024 Move W3, 1
	025 Move W1, W20
	026 Move W2, W31
	027 Move X4, X31
	028 Call TextHandle.GetCursorPositionFromStringIndexUsingLineHeight, X0, X1, X2, X3
	029 Move X0, [X21]
	030 Move V8, V1
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move X0, X31
	036 Call GUIUtility.get_pixelsPerPoint
	037 Move X0, [X19+40]
	038 Compare X0, 0
	039 JumpIfEqual {54}
	040 Move X20, [X31+32]
	041 Move X19, [X31+40]
	042 Move X30, [X31+16]
	043 Move X21, [X31+24]
	044 Move V1, V0
	045 Move S2, -1
	046 NotImplemented "Instruction FDIV not yet implemented."
	047 Move S0, W31
	048 Add S1, S8, S1
	049 Move W1, 1
	050 Move X2, X31
	051 Move V8, [X31+48]
	052 Call TextHandle.GetCursorIndexFromPosition, X0, X1, X2
	053 Return X0
	054 Call 0x1C17F20

Method: System.Int32 GetGraphicalLineEnd(System.Int32 p)

Disassembly:
	0x03C849B0 MOV W19, W0
	0x03C849B4 CBNZ X1, 0x3C849CC
	0x03C849B8 ADRP X0, 0xFFFFFFFFFCE93000
	0x03C849BC ADD X0, X0, 0x17D
	0x03C849C0 BL 0x1C16CB8
	0x03C849C4 MOV X1, X0
	0x03C849C8 STR X0, [X20 + 0x9E8]
	0x03C849CC MOV W0, W19
	0x03C849D0 LDP X20, X19, [X31 + 0x10]
	0x03C849D4 LDR X30, [X31], #0x20
	0x03C849D8 BR X1
	0x03C849DC STR X30, [X31 - 0x20]!
	0x03C849E0 STP X20, X19, [X31 + 0x10]
	0x03C849E4 ADRP X20, 0x762000
	0x03C849E8 LDR X1, [X20 + 0x9F0]
	0x03C849EC MOV W19, W0
	0x03C849F0 CBNZ X1, 0x3C84A08
	0x03C849F4 ADRP X0, 0xFFFFFFFFFCEA3000
	0x03C849F8 ADD X0, X0, 0x31D
	0x03C849FC BL 0x1C16CB8
	0x03C84A00 MOV X1, X0
	0x03C84A04 STR X0, [X20 + 0x9F0]
	0x03C84A08 MOV W0, W19
	0x03C84A0C LDP X20, X19, [X31 + 0x10]
	0x03C84A10 LDR X30, [X31], #0x20
	0x03C84A14 BR X1
	0x03C84A18 STR X30, [X31 - 0x20]!
	0x03C84A1C STP X20, X19, [X31 + 0x10]
	0x03C84A20 ADRP X20, 0x762000
	0x03C84A24 LDR X1, [X20 + 0x9F8]
	0x03C84A28 MOV W19, W0
	0x03C84A2C CBNZ X1, 0x3C84A44
	0x03C84A30 ADRP X0, 0xFFFFFFFFFCE77000
	0x03C84A34 ADD X0, X0, 0x931
	0x03C84A38 BL 0x1C16CB8
	0x03C84A3C MOV X1, X0
	0x03C84A40 STR X0, [X20 + 0x9F8]
	0x03C84A44 MOV W0, W19
	0x03C84A48 LDP X20, X19, [X31 + 0x10]
	0x03C84A4C LDR X30, [X31], #0x20
	0x03C84A50 BR X1
	0x03C84A54 STR X30, [X31 - 0x20]!
	0x03C84A58 STP X20, X19, [X31 + 0x10]
	0x03C84A5C ADRP X20, 0x762000
	0x03C84A60 LDR X1, [X20 + 0xA00]

ISIL:
	001 Move [X31-48], D9
	002 Move [X31-40], D8
	003 Move [X31+16], X30
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x763000
	008 Move W8, [X21+2511]
	009 Move W20, W1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x49C000
	016 Move X0, [X0+1480]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+2511], W8
	020 Move X0, [X19+40]
	021 Compare X0, 0
	022 JumpIfEqual {58}
	023 Move X21, 0x49C000
	024 Move X21, [X21+1480]
	025 Move W3, 1
	026 Move W1, W20
	027 Move W2, W31
	028 Move X4, X31
	029 Call TextHandle.GetCursorPositionFromStringIndexUsingLineHeight, X0, X1, X2, X3
	030 Move X0, [X21]
	031 Move V8, V0
	032 Move V9, V1
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Move X0, X31
	038 Call GUIUtility.get_pixelsPerPoint
	039 Move X0, [X19+40]
	040 Compare X0, 0
	041 JumpIfEqual {58}
	042 Move X8, -52006912
	043 Move V2, [X8+688]
	044 Move X20, [X31+32]
	045 Move X19, [X31+40]
	046 Move X30, [X31+16]
	047 Move X21, [X31+24]
	048 Move S1, -1
	049 NotImplemented "Instruction FDIV not yet implemented."
	050 Add S1, S9, S0
	051 Add S0, S8, S2
	052 Move W1, 1
	053 Move X2, X31
	054 Move D9, [X31+48]
	055 Move D8, [X31+56]
	056 Call TextHandle.GetCursorIndexFromPosition, X0, X1, X2
	057 Return X0
	058 Call 0x1C17F20

Method: System.Void Copy()

Disassembly:
	0x03C7F07C BL 0x3C82048
	0x03C7F080 LDR X0, [X21]
	0x03C7F084 MOVZ W1, 0x16
	0x03C7F088 MOVZ W24, 0x16
	0x03C7F08C BL 0x3C82048
	0x03C7F090 ADRP X8, 0x4E1000
	0x03C7F094 LDR X8, [X8 + 0x650]
	0x03C7F098 ADRP X10, 0x4E1000
	0x03C7F09C ADRP X11, 0x4E1000
	0x03C7F0A0 ADRP X12, 0x4E1000
	0x03C7F0A4 STR X8, [X31 + 0xB8]
	0x03C7F0A8 ADRP X13, 0x4E1000
	0x03C7F0AC ADRP X14, 0x4E1000
	0x03C7F0B0 ADRP X15, 0x4E1000
	0x03C7F0B4 ADRP X16, 0x4E1000
	0x03C7F0B8 ADRP X0, 0x4E1000
	0x03C7F0BC ADRP X3, 0x4E1000
	0x03C7F0C0 ADRP X6, 0x4E1000
	0x03C7F0C4 ADRP X21, 0x4E1000
	0x03C7F0C8 ADRP X8, 0x4E1000
	0x03C7F0CC LDR X10, [X10 + 0x660]
	0x03C7F0D0 LDR X11, [X11 + 0x668]
	0x03C7F0D4 LDR X12, [X12 + 0x658]
	0x03C7F0D8 LDR X13, [X13 + 0x628]
	0x03C7F0DC LDR X14, [X14 + 0x680]
	0x03C7F0E0 LDR X15, [X15 + 0x610]
	0x03C7F0E4 LDR X16, [X16 + 0x600]
	0x03C7F0E8 LDR X0, [X0 + 0x5D0]
	0x03C7F0EC LDR X3, [X3 + 0x630]
	0x03C7F0F0 LDR X6, [X6 + 0x768]
	0x03C7F0F4 LDR X21, [X21 + 0x5E0]
	0x03C7F0F8 LDR X8, [X8 + 0x798]
	0x03C7F0FC ADRP X20, 0x4E1000
	0x03C7F100 ADRP X23, 0x4E1000
	0x03C7F104 MOVZ W9, 0x22
	0x03C7F108 STR X8, [X31 + 0x108]
	0x03C7F10C ADRP X8, 0x4E1000
	0x03C7F110 LDR X8, [X8 + 0x700]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x768000
	005 Move W8, [X20+2512]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x4A1000
	012 Move X0, [X0+1480]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2512], W8
	016 Move W1, [X19+56]
	017 Move X0, X19
	018 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	019 Move W1, [X19+52]
	020 Move W20, W0
	021 Move X0, X19
	022 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X30, [X31+32]
	027 Return 
	028 Move X20, 0x4A1000
	029 Move X20, [X20+1480]
	030 Move X0, X19
	031 Call TextSelectingUtilities.get_selectedText, X0
	032 Move X8, [X20]
	033 Move X19, X0
	034 Move W9, [X8+224]
	035 Compare W9, 0
	036 JumpIfNotEqual {39}
	037 Move X0, X8
	038 Call 0x1C17DFC
	039 Move X0, X19
	040 Move X20, [X31+16]
	041 Move X19, [X31+24]
	042 Move X1, X31
	043 Move X30, [X31+32]
	044 Call GUIUtility.set_systemCopyBuffer, X0
	045 Return 

Method: UnityEngine.TextSelectingUtilities/CharacterType ClassifyChar(System.Int32 index)

Disassembly:
	0x03C8532C LDR X0, [X19]
	0x03C85330 LDR X8, [X0 + 0xB8]
	0x03C85334 ADRP X20, 0x761000
	0x03C85338 STP S8, S9, [X8 + 0x30]
	0x03C8533C LDR X8, [X20 + 0xA08]
	0x03C85340 CBNZ X8, 0x3C85358
	0x03C85344 ADRP X0, 0xFFFFFFFFFCEA0000
	0x03C85348 ADD X0, X0, 0x56F
	0x03C8534C BL 0x1C16CB8
	0x03C85350 MOV X8, X0
	0x03C85354 STR X0, [X20 + 0xA08]
	0x03C85358 MOV W0, W31
	0x03C8535C BLR X8
	0x03C85360 LDR X8, [X19]
	0x03C85364 AND W9, W0, 0x1
	0x03C85368 ADRP X20, 0x761000
	0x03C8536C LDR X8, [X8 + 0xB8]
	0x03C85370 STRB W9, [X8 + 0x38]
	0x03C85374 LDR X8, [X20 + 0xA00]
	0x03C85378 CBNZ X8, 0x3C85390
	0x03C8537C ADRP X0, 0xFFFFFFFFFCE78000
	0x03C85380 ADD X0, X0, 0x909
	0x03C85384 BL 0x1C16CB8
	0x03C85388 MOV X8, X0
	0x03C8538C STR X0, [X20 + 0xA00]
	0x03C85390 MOV W0, W31
	0x03C85394 BLR X8
	0x03C85398 LDR X8, [X19]
	0x03C8539C AND W9, W0, 0x1
	0x03C853A0 LDR X8, [X8 + 0xB8]
	0x03C853A4 STRB W9, [X8 + 0x39]
	0x03C853A8 LDP X20, X19, [X31 + 0x20]
	0x03C853AC LDR X30, [X31 + 0x10]
	0x03C853B0 LDP D9, D8, [X31], #0x30
	0x03C853B4 RET
	0x03C853B8 BL 0x1C16F20
	0x03C853BC STR X30, [X31 - 0x20]!
	0x03C853C0 STP X20, X19, [X31 + 0x10]
	0x03C853C4 ADRP X20, 0x761000
	0x03C853C8 ADRP X19, 0x4DB000
	0x03C853CC LDRB W8, [X20 + 0xAA1]
	0x03C853D0 LDR X19, [X19 + 0x7F0]
	0x03C853D4 TBNZ X8, 0x0, 0x3C853EC
	0x03C853D8 ADRP X0, 0x4DB000
	0x03C853DC LDR X0, [X0 + 0x7F0]
	0x03C853E0 BL 0x1C16CF4
	0x03C853E4 MOVZ W8, 0x1
	0x03C853E8 STRB W8, [X20 + 0xAA1]
	0x03C853EC LDR X0, [X19]
	0x03C853F0 LDR W8, [X0 + 0xE0]
	0x03C853F4 CBNZ W8, 0x3C85400
	0x03C853F8 BL 0x1C16DFC
	0x03C853FC LDR X0, [X19]
	0x03C85400 LDR X8, [X0 + 0xB8]
	0x03C85404 LDP X20, X19, [X31 + 0x10]
	0x03C85408 MOVZ W9, 0x1
	0x03C8540C STRB W9, [X8]
	0x03C85410 LDR X30, [X31], #0x20
	0x03C85414 RET
	0x03C85418 SUB X31, X31, 0x120
	0x03C8541C STP D15, D14, [X31 + 0x80]
	0x03C85420 STP D13, D12, [X31 + 0x90]
	0x03C85424 STP D11, D10, [X31 + 0xA0]
	0x03C85428 STP D9, D8, [X31 + 0xB0]
	0x03C8542C STP X29, X30, [X31 + 0xC0]
	0x03C85430 STP X28, X27, [X31 + 0xD0]
	0x03C85434 STP X26, X25, [X31 + 0xE0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x762000
	008 Move W8, [X21+2513]
	009 Move W19, W1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x471000
	016 Move X0, [X0+368]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+2513], W8
	020 Move X0, X20
	021 Call TextSelectingUtilities.get_m_TextElementInfos, X0
	022 Compare X0, 0
	023 JumpIfEqual {78}
	024 Move W8, [X0+24]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X22, W19
	027 Move W8, 392
	028 NotImplemented "Instruction MADD not yet implemented."
	029 NotImplemented "Instruction LDRH not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move W0, 4
	032 Move X23, 0x471000
	033 Move X23, [X23+368]
	034 Move X0, [X23]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Move W0, W21
	040 Move X1, X31
	041 Call Char.IsWhiteSpace, X0
	042 Move TEMP, X0
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfNotEqual {47}
	046 Move W0, 3
	047 Move X0, [X23]
	048 Move W8, [X0+224]
	049 Compare W8, 0
	050 JumpIfNotEqual {52}
	051 Call 0x1C17DFC
	052 Move W0, W21
	053 Move X1, X31
	054 Call Char.IsLetterOrDigit, X0
	055 Move TEMP, X0
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfEqual {69}
	059 Move X0, X20
	060 Call TextSelectingUtilities.get_m_TextElementInfos, X0
	061 Compare X0, 0
	062 JumpIfEqual {78}
	063 Move W8, [X0+24]
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move W8, 392
	066 NotImplemented "Instruction MADD not yet implemented."
	067 NotImplemented "Instruction LDRH not yet implemented."
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move W0, W31
	070 Move W0, 1
	071 Move X20, [X31+32]
	072 Move X19, [X31+40]
	073 Move X22, [X31+16]
	074 Move X21, [X31+24]
	075 Move X30, [X31+48]
	076 Move X23, [X31+56]
	077 Return X0
	078 Call 0x1C17F20
	079 Call 0x1C17F28

