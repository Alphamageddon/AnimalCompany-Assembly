Type: UnityEngine.GUILayoutUtility

Method: UnityEngine.Rect Internal_GetWindowRect(System.Int32 windowID)

Disassembly:
	0x03C704FC ADRP X0, 0x4F0000
	0x03C70500 LDR X0, [X0 + 0x2D0]
	0x03C70504 BL 0x1C16CF4
	0x03C70508 ADRP X0, 0x483000
	0x03C7050C LDR X0, [X0 + 0x6C0]
	0x03C70510 BL 0x1C16CF4
	0x03C70514 MOVZ W8, 0x1
	0x03C70518 STRB W8, [X22 + 0x6A2]
	0x03C7051C LDR X0, [X21]
	0x03C70520 LDR X20, [X20]
	0x03C70524 LDR W8, [X0 + 0xE0]
	0x03C70528 CBNZ W8, 0x3C70530
	0x03C7052C BL 0x1C16DFC
	0x03C70530 MOV X0, X20
	0x03C70534 MOV X1, X31
	0x03C70538 BL 0x338C698
	0x03C7053C CBZ X0, 0x3C705B0
	0x03C70540 LDR X8, [X0]
	0x03C70544 MOV X1, X19
	0x03C70548 LDR X9, [X8 + 0x2A8]
	0x03C7054C LDR X2, [X8 + 0x2B0]
	0x03C70550 BLR X9
	0x03C70554 TBZ X0, 0x0, 0x3C705B4
	0x03C70558 MOV X0, X19
	0x03C7055C MOV X1, X31
	0x03C70560 BL 0x33A703C
	0x03C70564 CBZ X0, 0x3C7059C
	0x03C70568 ADRP X9, 0x4F0000
	0x03C7056C LDR X9, [X9 + 0x2D0]
	0x03C70570 LDR X8, [X0]
	0x03C70574 LDR X1, [X9]
	0x03C70578 LDRB W10, [X8 + 0x130]
	0x03C7057C LDRB W9, [X1 + 0x130]
	0x03C70580 CMP W10, W9
	0x03C70584 B.CC 0x3C705AC
	0x03C70588 LDR X8, [X8 + 0xC8]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x777000
	007 Move X20, 0x4F1000
	008 Move W8, [X21+1683]
	009 Move X20, [X20+688]
	010 Move W19, W0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x4F1000
	016 Move X0, [X0+688]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+1683], W8
	020 Move X0, [X20]
	021 Move [X31], X31
	022 Move [X31+8], X31
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X20, 0x777000
	028 Move X8, [X20+1712]
	029 Compare X8, 0
	030 JumpIfNotEqual {36}
	031 Move X0, -51798016
	032 Add X0, X0, 2390
	033 Call 0x1C17CB8
	034 Move X8, X0
	035 Move [X20+1712], X0
	036 Add X1, X31, 0
	037 Move W0, W19
	038 NotImplemented "Instruction BLR not yet implemented."
	039 Move S0, [X31]
	040 Move S1, [X31+4]
	041 Move S2, [X31+8]
	042 Move S3, [X31+12]
	043 Move X20, [X31+32]
	044 Move X19, [X31+40]
	045 Move X30, [X31+16]
	046 Move X21, [X31+24]
	047 Add X31, X31, 48
	048 Return X0

Method: System.Void Internal_MoveWindow(System.Int32 windowID, UnityEngine.Rect r)

Disassembly:
	0x03C705D0 BL 0x1C16D08
	0x03C705D4 MOV X20, X0
	0x03C705D8 ADRP X0, 0x4F0000
	0x03C705DC LDR X0, [X0 + 0x380]
	0x03C705E0 BL 0x1C16D08
	0x03C705E4 MOV X2, X0
	0x03C705E8 MOV X0, X19
	0x03C705EC MOV X1, X20
	0x03C705F0 MOV X3, X31
	0x03C705F4 BL 0x330E16C
	0x03C705F8 ADRP X0, 0x4F0000
	0x03C705FC LDR X0, [X0 + 0x388]
	0x03C70600 BL 0x1C16D08
	0x03C70604 MOV X1, X0
	0x03C70608 MOV X0, X19
	0x03C7060C BL 0x1C16DEC
	0x03C70610 STP X30, X21, [X31 - 0x20]!
	0x03C70614 STP X20, X19, [X31 + 0x10]
	0x03C70618 ADRP X21, 0x776000
	0x03C7061C LDRB W8, [X21 + 0x97B]
	0x03C70620 MOV X19, X1
	0x03C70624 MOV X20, X0
	0x03C70628 TBNZ X8, 0x0, 0x3C70640
	0x03C7062C ADRP X0, 0x4F0000
	0x03C70630 LDR X0, [X0 + 0x390]
	0x03C70634 BL 0x1C16CF4
	0x03C70638 MOVZ W8, 0x1
	0x03C7063C STRB W8, [X21 + 0x97B]
	0x03C70640 LDR X0, [X20 + 0x48]
	0x03C70644 CBZ X0, 0x3C706B0
	0x03C70648 ADRP X9, 0x4F0000
	0x03C7064C LDR X9, [X9 + 0x390]
	0x03C70650 LDR W10, [X0 + 0x1C]
	0x03C70654 LDR X8, [X0 + 0x10]
	0x03C70658 LDR X9, [X9]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x777000
	007 Move [X31], S0
	008 Move [X31+8], S1
	009 Move [X31+8], S2
	010 Move [X31+16], S3
	011 Move X21, 0x4F1000
	012 Move W8, [X20+1684]
	013 Move X21, [X21+688]
	014 Move W19, W0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0x4F1000
	020 Move X0, [X0+688]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X20+1684], W8
	024 Move X0, [X21]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X20, 0x777000
	030 Move X8, [X20+1720]
	031 Compare X8, 0
	032 JumpIfNotEqual {38}
	033 Move X0, -51888128
	034 Add X0, X0, 2351
	035 Call 0x1C17CB8
	036 Move X8, X0
	037 Move [X20+1720], X0
	038 Add X1, X31, 0
	039 Move W0, W19
	040 NotImplemented "Instruction BLR not yet implemented."
	041 Move X20, [X31+32]
	042 Move X19, [X31+40]
	043 Move X30, [X31+16]
	044 Move X21, [X31+24]
	045 Add X31, X31, 48
	046 Return 

Method: System.Int32 get_unbalancedgroupscount()

Disassembly:
	0x03C706A0 LDR X8, [X8 + 0xC0]
	0x03C706A4 LDR X2, [X8 + 0x70]
	0x03C706A8 LDP X30, X21, [X31], #0x20
	0x03C706AC B 0x301BF90
	0x03C706B0 BL 0x1C16F20
	0x03C706B4 SUB X31, X31, 0x50
	0x03C706B8 STR X30, [X31 + 0x20]
	0x03C706BC STP X22, X21, [X31 + 0x30]
	0x03C706C0 STP X20, X19, [X31 + 0x40]
	0x03C706C4 ADRP X20, 0x776000
	0x03C706C8 LDRB W8, [X20 + 0x97A]
	0x03C706CC MOV X19, X0
	0x03C706D0 TBNZ X8, 0x0, 0x3C70700
	0x03C706D4 ADRP X0, 0x4F0000
	0x03C706D8 LDR X0, [X0 + 0x2D0]
	0x03C706DC BL 0x1C16CF4
	0x03C706E0 ADRP X0, 0x4F0000
	0x03C706E4 LDR X0, [X0 + 0x398]
	0x03C706E8 BL 0x1C16CF4
	0x03C706EC ADRP X0, 0x4F0000
	0x03C706F0 LDR X0, [X0 + 0x3A0]
	0x03C706F4 BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x777000
	005 Move X19, 0x4F1000
	006 Move W8, [X20+1685]
	007 Move X19, [X19+688]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x4F1000
	013 Move X0, [X0+688]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+1685], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move W0, [X8+40]
	027 Move X30, [X31+32]
	028 Return X0

Method: System.Void set_unbalancedgroupscount(System.Int32 value)

Disassembly:
	0x03C706F8 MOVZ W8, 0x1
	0x03C706FC STRB W8, [X20 + 0x97A]
	0x03C70700 MOV X21, X19
	0x03C70704 LDR W1, [X21 + 0x60]!
	0x03C70708 LDUR X0, [X21 - 0x18]
	0x03C7070C CBZ X0, 0x3C707DC
	0x03C70710 LDR W8, [X0 + 0x18]
	0x03C70714 CMP W1, W8
	0x03C70718 B.GE 0x3C7073C
	0x03C7071C ADRP X8, 0x4F0000
	0x03C70720 LDR X8, [X8 + 0x3A0]
	0x03C70724 LDR X2, [X8]
	0x03C70728 BL 0x301BCCC
	0x03C7072C LDR W8, [X21]
	0x03C70730 ADD W8, W8, 0x1
	0x03C70734 STR W8, [X21]
	0x03C70738 B 0x3C707C8
	0x03C7073C ADRP X20, 0x776000
	0x03C70740 ADRP X22, 0x4E9000
	0x03C70744 LDRB W8, [X20 + 0x510]
	0x03C70748 LDR X22, [X22 + 0x20]
	0x03C7074C TBNZ X8, 0x0, 0x3C70764
	0x03C70750 ADRP X0, 0x4E9000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x777000
	006 Move X20, 0x4F1000
	007 Move W8, [X21+1686]
	008 Move X20, [X20+688]
	009 Move W19, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x4F1000
	015 Move X0, [X0+688]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1686], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {25}
	023 Call 0x1C17DFC
	024 Move X0, [X20]
	025 Move X8, [X0+184]
	026 Move [X8+40], W19
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Return 

Method: UnityEngine.GUILayoutUtility/LayoutCache GetLayoutCache(System.Int32 instanceID, System.Boolean isWindow)

Disassembly:
	0x03C70754 LDR X0, [X0 + 0x20]
	0x03C70758 BL 0x1C16CF4
	0x03C7075C MOVZ W8, 0x1
	0x03C70760 STRB W8, [X20 + 0x510]
	0x03C70764 LDR X8, [X22]
	0x03C70768 LDR X8, [X8 + 0xB8]
	0x03C7076C LDR X20, [X8]
	0x03C70770 CBZ X20, 0x3C707DC
	0x03C70774 ADRP X22, 0x776000
	0x03C70778 LDR X8, [X22 + 0x4A8]
	0x03C7077C CBNZ X8, 0x3C70794
	0x03C70780 ADRP X0, 0xFFFFFFFFFCE81000
	0x03C70784 ADD X0, X0, 0x566
	0x03C70788 BL 0x1C16CB8
	0x03C7078C MOV X8, X0
	0x03C70790 STR X0, [X22 + 0x4A8]
	0x03C70794 MOV X0, X20
	0x03C70798 BLR X8
	0x03C7079C CMP W0, 0x7
	0x03C707A0 B.EQ 0x3C707E0
	0x03C707A4 ADRP X19, 0x4F0000
	0x03C707A8 LDR X19, [X19 + 0x2D0]
	0x03C707AC LDR X0, [X19]
	0x03C707B0 LDR W8, [X0 + 0xE0]
	0x03C707B4 CBNZ W8, 0x3C707C0
	0x03C707B8 BL 0x1C16DFC
	0x03C707BC LDR X0, [X19]
	0x03C707C0 LDR X8, [X0 + 0xB8]
	0x03C707C4 LDR X0, [X8]
	0x03C707C8 LDP X20, X19, [X31 + 0x40]
	0x03C707CC LDP X22, X21, [X31 + 0x30]
	0x03C707D0 LDR X30, [X31 + 0x20]
	0x03C707D4 ADD X31, X31, 0x50
	0x03C707D8 RET
	0x03C707DC BL 0x1C16F20
	0x03C707E0 ADRP X0, 0x483000
	0x03C707E4 LDR X0, [X0 + 0xAC8]
	0x03C707E8 BL 0x1C16D08
	0x03C707EC MOVZ W1, 0x7
	0x03C707F0 BL 0x1C16D6C
	0x03C707F4 MOV X22, X19
	0x03C707F8 MOV X19, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x777000
	007 Move X21, 0x4F1000
	008 Move W8, [X22+1687]
	009 Move X21, [X21+688]
	010 Move W20, W1
	011 Move W19, W0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x4F1000
	017 Move X0, [X0+800]
	018 Call 0x1C17CF4
	019 Move X0, 0x4F1000
	020 Move X0, [X0+688]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1687], W8
	024 Move X0, [X21]
	025 Move [X31+8], X31
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {31}
	029 Call 0x1C17DFC
	030 Move X0, [X21]
	031 Move X8, [X0+184]
	032 And W31, W20, 1
	033 Add X9, X8, 8
	034 NotImplemented "Instruction CSEL not yet implemented."
	035 Move X0, [X8]
	036 Compare X0, 0
	037 JumpIfEqual {51}
	038 Move X8, 0x4F1000
	039 Move X8, [X8+800]
	040 Add X2, X31, 8
	041 Move W1, W19
	042 Move X3, [X8]
	043 Call Dictionary`2<Int32, Object>.TryGetValue, X0, X1, X2
	044 Move X0, [X31+8]
	045 Move X20, [X31+32]
	046 Move X19, [X31+40]
	047 Move X22, [X31+16]
	048 Move X21, [X31+24]
	049 Move X30, [X31+48]
	050 Return X0
	051 Call 0x1C17F20

Method: UnityEngine.GUILayoutUtility/LayoutCache SelectIDList(System.Int32 instanceID, System.Boolean isWindow)

Disassembly:
	0x03C6D17C TBNZ X8, 0x0, 0x3C6D1A0
	0x03C6D180 ADRP X0, 0x4B1000
	0x03C6D184 LDR X0, [X0 + 0xBD0]
	0x03C6D188 BL 0x1C16CF4
	0x03C6D18C ADRP X0, 0x4AD000
	0x03C6D190 LDR X0, [X0 + 0x4C0]
	0x03C6D194 BL 0x1C16CF4
	0x03C6D198 MOVZ W8, 0x1
	0x03C6D19C STRB W8, [X22 + 0x677]
	0x03C6D1A0 LDR X0, [X21]
	0x03C6D1A4 ADRP X21, 0x4AD000
	0x03C6D1A8 LDR W8, [X0 + 0xE0]
	0x03C6D1AC LDR X21, [X21 + 0x4C0]
	0x03C6D1B0 CBNZ W8, 0x3C6D1B8
	0x03C6D1B4 BL 0x1C16DFC
	0x03C6D1B8 MOV X0, X20
	0x03C6D1BC BL 0x3C678AC
	0x03C6D1C0 LDR X8, [X21]
	0x03C6D1C4 MOV X20, X0
	0x03C6D1C8 LDR W9, [X8 + 0xE0]
	0x03C6D1CC CBNZ W9, 0x3C6D1D8
	0x03C6D1D0 MOV X0, X8
	0x03C6D1D4 BL 0x1C16DFC
	0x03C6D1D8 BL 0x3C6748C
	0x03C6D1DC CBZ X0, 0x3C6D1FC
	0x03C6D1E0 LDR X1, [X0 + 0x38]
	0x03C6D1E4 MOV X0, X20
	0x03C6D1E8 MOV X2, X19
	0x03C6D1EC LDP X20, X19, [X31 + 0x20]
	0x03C6D1F0 LDP X22, X21, [X31 + 0x10]
	0x03C6D1F4 LDR X30, [X31], #0x30
	0x03C6D1F8 B 0x3C6D200
	0x03C6D1FC BL 0x1C16F20
	0x03C6D200 STP D11, D10, [X31 - 0x50]!
	0x03C6D204 STP D9, D8, [X31 + 0x10]
	0x03C6D208 STP X30, X23, [X31 + 0x20]
	0x03C6D20C STP X22, X21, [X31 + 0x30]
	0x03C6D210 STP X20, X19, [X31 + 0x40]
	0x03C6D214 ADRP X23, 0x779000
	0x03C6D218 ADRP X22, 0x4F3000
	0x03C6D21C LDRB W8, [X23 + 0x679]
	0x03C6D220 LDR X22, [X22 + 0x2B0]
	0x03C6D224 MOV X21, X2
	0x03C6D228 MOV X19, X1
	0x03C6D22C MOV X20, X0
	0x03C6D230 TBNZ X8, 0x0, 0x3C6D254
	0x03C6D234 ADRP X0, 0x4F3000
	0x03C6D238 LDR X0, [X0 + 0x2B0]
	0x03C6D23C BL 0x1C16CF4
	0x03C6D240 ADRP X0, 0x4AD000
	0x03C6D244 LDR X0, [X0 + 0x4C0]
	0x03C6D248 BL 0x1C16CF4
	0x03C6D24C MOVZ W8, 0x1
	0x03C6D250 STRB W8, [X23 + 0x679]
	0x03C6D254 LDR X0, [X22]
	0x03C6D258 ADRP X22, 0x4AD000
	0x03C6D25C LDR W8, [X0 + 0xE0]
	0x03C6D260 LDR X22, [X22 + 0x4C0]
	0x03C6D264 CBNZ W8, 0x3C6D26C
	0x03C6D268 BL 0x1C16DFC
	0x03C6D26C MOV X0, X20
	0x03C6D270 MOV X1, X19
	0x03C6D274 MOV X2, X21
	0x03C6D278 BL 0x3C6D33C
	0x03C6D27C LDR X0, [X22]
	0x03C6D280 MOV V8.16B, V0.16B
	0x03C6D284 MOV V9.16B, V1.16B
	0x03C6D288 MOV V10.16B, V2.16B
	0x03C6D28C LDR W8, [X0 + 0xE0]
	0x03C6D290 MOV V11.16B, V3.16B
	0x03C6D294 CBNZ W8, 0x3C6D29C
	0x03C6D298 BL 0x1C16DFC
	0x03C6D29C MOV V0.16B, V8.16B
	0x03C6D2A0 MOV V1.16B, V9.16B
	0x03C6D2A4 MOV X0, X20
	0x03C6D2A8 MOV X1, X19
	0x03C6D2AC LDP X20, X19, [X31 + 0x40]
	0x03C6D2B0 LDP X22, X21, [X31 + 0x30]
	0x03C6D2B4 LDP X30, X23, [X31 + 0x20]
	0x03C6D2B8 LDP D9, D8, [X31 + 0x10]
	0x03C6D2BC MOV V2.16B, V10.16B

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x77A000
	007 Move X22, 0x4F4000
	008 Move W8, [X21+1688]
	009 Move X22, [X22+688]
	010 Move W20, W1
	011 Move W19, W0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {27}
	016 Move X0, 0x4F4000
	017 Move X0, [X0+696]
	018 Call 0x1C17CF4
	019 Move X0, 0x4F4000
	020 Move X0, [X0+688]
	021 Call 0x1C17CF4
	022 Move X0, 0x4F4000
	023 Move X0, [X0+704]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+1688], W8
	027 Move X0, [X22]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfEqual {36}
	031 Move X8, [X0+184]
	032 And W31, W20, 1
	033 Add X9, X8, 8
	034 NotImplemented "Instruction CSEL not yet implemented."
	035 Move X21, [X8]
	036 Call 0x1C17DFC
	037 Move X0, [X22]
	038 And W31, W20, 1
	039 Move X8, [X0+184]
	040 Move W9, [X0+224]
	041 Add X10, X8, 8
	042 NotImplemented "Instruction CSEL not yet implemented."
	043 Move X21, [X8]
	044 Compare W9, 0
	045 JumpIfNotEqual {47}
	046 Call 0x1C17DFC
	047 And W1, W20, 1
	048 Move W0, W19
	049 Call GUILayoutUtility.GetLayoutCache, X0, X1
	050 Move X20, X0
	051 Compare X0, 0
	052 JumpIfNotEqual {69}
	053 Move X8, 0x4F4000
	054 Move X8, [X8+704]
	055 Move X0, [X8]
	056 Call 0x1C17F10
	057 Move W1, W19
	058 Move X20, X0
	059 Call LayoutCache..ctor, X0, X1
	060 Compare X21, 0
	061 JumpIfEqual {94}
	062 Move X8, 0x4F4000
	063 Move X8, [X8+696]
	064 Move X0, X21
	065 Move W1, W19
	066 Move X2, X20
	067 Move X3, [X8]
	068 Call Dictionary`2<Int32, Object>.set_Item, X0, X1, X2
	069 Move X0, [X22]
	070 Move W8, [X0+224]
	071 Compare W8, 0
	072 JumpIfNotEqual {75}
	073 Call 0x1C17DFC
	074 Move X0, [X22]
	075 Compare X20, 0
	076 JumpIfEqual {94}
	077 Move X8, [X0+184]
	078 Move X8, [X8+16]
	079 Compare X8, 0
	080 JumpIfEqual {94}
	081 Move X9, [X20+24]
	082 Move X0, X20
	083 Move X22, [X31+16]
	084 Move X21, [X31+24]
	085 Move [X8+24], X9
	086 Move X9, [X20+32]
	087 Move [X8+32], X9
	088 Move X9, [X20+40]
	089 Move X20, [X31+32]
	090 Move X19, [X31+40]
	091 Move [X8+40], X9
	092 Move X30, [X31+48]
	093 Return X0
	094 Call 0x1C17F20

Method: System.Void RemoveSelectedIdList(System.Int32 instanceID, System.Boolean isWindow)

Disassembly:
	0x03C708C8 MOVZ W1, 0x4
	0x03C708CC MOV X0, X19
	0x03C708D0 BL 0x1993444
	0x03C708D4 BL 0x3C63934
	0x03C708D8 MOV X20, X0
	0x03C708DC BL 0x19903C0
	0x03C708E0 MOV X0, X20
	0x03C708E4 BL 0x3C62C04
	0x03C708E8 MOV W20, W0
	0x03C708EC ADRP X0, 0x4AC000
	0x03C708F0 LDR X0, [X0 + 0xE68]
	0x03C708F4 BL 0x1C16D08
	0x03C708F8 MOVN X8, 0x0
	0x03C708FC STP X0, X8, [X31 + 0x8]
	0x03C70900 ADD X0, X31, 0x8
	0x03C70904 MOV X1, X31
	0x03C70908 STR W20, [X31 + 0x18]
	0x03C7090C BL 0x33B162C
	0x03C70910 MOV X20, X0
	0x03C70914 MOV X0, X19
	0x03C70918 BL 0x19903C0
	0x03C7091C MOVZ W1, 0x5
	0x03C70920 MOV X0, X19
	0x03C70924 MOV X2, X20
	0x03C70928 BL 0x1993444
	0x03C7092C MOV X0, X19
	0x03C70930 BL 0x19903C0
	0x03C70934 ADRP X0, 0x4F0000
	0x03C70938 LDR X0, [X0 + 0x3C0]
	0x03C7093C BL 0x1C16D08
	0x03C70940 MOV X2, X0
	0x03C70944 MOVZ W1, 0x6
	0x03C70948 MOV X0, X19
	0x03C7094C BL 0x1993444
	0x03C70950 MOV X0, X19
	0x03C70954 MOV X1, X31
	0x03C70958 BL 0x32278CC
	0x03C7095C MOV X19, X0
	0x03C70960 ADRP X0, 0x48B000
	0x03C70964 LDR X0, [X0 + 0x578]
	0x03C70968 BL 0x1C16D08
	0x03C7096C BL 0x1C16F10
	0x03C70970 MOV X1, X19
	0x03C70974 MOV X2, X31
	0x03C70978 MOV X20, X0
	0x03C7097C BL 0x3314A68
	0x03C70980 ADRP X0, 0x4F0000
	0x03C70984 LDR X0, [X0 + 0x3C8]
	0x03C70988 BL 0x1C16D08
	0x03C7098C MOV X1, X0
	0x03C70990 MOV X0, X20
	0x03C70994 BL 0x1C16DEC
	0x03C70998 STR X30, [X31 - 0x30]!

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x777000
	007 Move X21, 0x4F1000
	008 Move W8, [X22+1689]
	009 Move X21, [X21+688]
	010 Move W20, W1
	011 Move W19, W0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {27}
	016 Move X0, 0x4F1000
	017 Move X0, [X0+808]
	018 Call 0x1C17CF4
	019 Move X0, 0x4F1000
	020 Move X0, [X0+816]
	021 Call 0x1C17CF4
	022 Move X0, 0x4F1000
	023 Move X0, [X0+688]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X22+1689], W8
	027 Move X0, [X21]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {33}
	031 Call 0x1C17DFC
	032 Move X0, [X21]
	033 Move X8, [X0+184]
	034 And W31, W20, 1
	035 Add X9, X8, 8
	036 NotImplemented "Instruction CSEL not yet implemented."
	037 Move X20, [X8]
	038 Compare X20, 0
	039 JumpIfEqual {68}
	040 Move X8, 0x4F1000
	041 Move X8, [X8+808]
	042 Move X0, X20
	043 Move W1, W19
	044 Move X2, [X8]
	045 Call Dictionary`2<Int32, Object>.ContainsKey, X0, X1
	046 Move TEMP, X0
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfNotEqual {62}
	050 Move X8, 0x4F1000
	051 Move X8, [X8+816]
	052 Move X0, X20
	053 Move W1, W19
	054 Move X20, [X31+32]
	055 Move X19, [X31+40]
	056 Move X2, [X8]
	057 Move X22, [X31+16]
	058 Move X21, [X31+24]
	059 Move X30, [X31+48]
	060 Call Dictionary`2<Int32, Object>.Remove, X0, X1
	061 Return 
	062 Move X20, [X31+32]
	063 Move X19, [X31+40]
	064 Move X22, [X31+16]
	065 Move X21, [X31+24]
	066 Move X30, [X31+48]
	067 Return 
	068 Call 0x1C17F20

Method: System.Void Begin(System.Int32 instanceID)

Disassembly:
	0x03C7099C STP X22, X21, [X31 + 0x10]
	0x03C709A0 STP X20, X19, [X31 + 0x20]
	0x03C709A4 ADRP X22, 0x776000
	0x03C709A8 ADRP X21, 0x483000
	0x03C709AC LDRB W8, [X22 + 0x971]
	0x03C709B0 LDR X21, [X21 + 0x7D0]
	0x03C709B4 MOV X19, X1
	0x03C709B8 MOV X20, X0
	0x03C709BC TBNZ X8, 0x0, 0x3C709E0
	0x03C709C0 ADRP X0, 0x483000
	0x03C709C4 LDR X0, [X0 + 0x7D0]
	0x03C709C8 BL 0x1C16CF4
	0x03C709CC ADRP X0, 0x4AF000
	0x03C709D0 LDR X0, [X0 + 0x5C8]
	0x03C709D4 BL 0x1C16CF4
	0x03C709D8 MOVZ W8, 0x1
	0x03C709DC STRB W8, [X22 + 0x971]
	0x03C709E0 LDR X0, [X21]
	0x03C709E4 ADRP X21, 0x4AF000
	0x03C709E8 LDR W8, [X0 + 0xE0]
	0x03C709EC LDR X21, [X21 + 0x5C8]
	0x03C709F0 CBNZ W8, 0x3C709F8
	0x03C709F4 BL 0x1C16DFC
	0x03C709F8 MOV X0, X20
	0x03C709FC MOV X1, X19
	0x03C70A00 MOV X2, X31
	0x03C70A04 BL 0x33B2C70
	0x03C70A08 LDR X0, [X21]
	0x03C70A0C LDR W8, [X0 + 0xE0]
	0x03C70A10 CBNZ W8, 0x3C70A18
	0x03C70A14 BL 0x1C16DFC
	0x03C70A18 ADRP X19, 0x776000
	0x03C70A1C LDRB W8, [X19 + 0x985]
	0x03C70A20 CBNZ W8, 0x3C70A38
	0x03C70A24 ADRP X0, 0x4AF000
	0x03C70A28 LDR X0, [X0 + 0x5C8]
	0x03C70A2C BL 0x1C16CF4
	0x03C70A30 MOVZ W8, 0x1
	0x03C70A34 STRB W8, [X19 + 0x985]
	0x03C70A38 LDR X0, [X21]
	0x03C70A3C LDR W8, [X0 + 0xE0]
	0x03C70A40 CBNZ W8, 0x3C70A4C
	0x03C70A44 BL 0x1C16DFC
	0x03C70A48 LDR X0, [X21]
	0x03C70A4C LDR X8, [X0 + 0xB8]
	0x03C70A50 LDP X20, X19, [X31 + 0x20]
	0x03C70A54 LDP X22, X21, [X31 + 0x10]
	0x03C70A58 MOVZ W9, 0x1
	0x03C70A5C STRB W9, [X8 + 0x50]
	0x03C70A60 LDR X30, [X31], #0x30
	0x03C70A64 RET
	0x03C70A68 STP D9, D8, [X31 - 0x50]!
	0x03C70A6C STR X30, [X31 + 0x10]
	0x03C70A70 STP X24, X23, [X31 + 0x20]
	0x03C70A74 STP X22, X21, [X31 + 0x30]
	0x03C70A78 STP X20, X19, [X31 + 0x40]
	0x03C70A7C ADRP X22, 0x776000
	0x03C70A80 ADRP X23, 0x4AF000
	0x03C70A84 LDRB W8, [X22 + 0x6A8]
	0x03C70A88 LDR X23, [X23 + 0x5C8]
	0x03C70A8C MOV X19, X2
	0x03C70A90 MOV X20, X1
	0x03C70A94 MOV X21, X0
	0x03C70A98 TBNZ X8, 0x0, 0x3C70AE0
	0x03C70A9C ADRP X0, 0x4F0000
	0x03C70AA0 LDR X0, [X0 + 0x348]
	0x03C70AA4 BL 0x1C16CF4
	0x03C70AA8 ADRP X0, 0x4F0000
	0x03C70AAC LDR X0, [X0 + 0x2B0]
	0x03C70AB0 BL 0x1C16CF4
	0x03C70AB4 ADRP X0, 0x4AF000
	0x03C70AB8 LDR X0, [X0 + 0x5C8]
	0x03C70ABC BL 0x1C16CF4
	0x03C70AC0 ADRP X0, 0x4F0000
	0x03C70AC4 LDR X0, [X0 + 0x3D0]
	0x03C70AC8 BL 0x1C16CF4
	0x03C70ACC ADRP X0, 0x483000
	0x03C70AD0 LDR X0, [X0 + 0xA90]
	0x03C70AD4 BL 0x1C16CF4
	0x03C70AD8 MOVZ W8, 0x1
	0x03C70ADC STRB W8, [X22 + 0x6A8]
	0x03C70AE0 LDR X0, [X23]
	0x03C70AE4 LDR W8, [X0 + 0xE0]
	0x03C70AE8 CBNZ W8, 0x3C70AF0
	0x03C70AEC BL 0x1C16DFC
	0x03C70AF0 BL 0x3C67304
	0x03C70AF4 ADRP X22, 0x776000
	0x03C70AF8 ADRP X23, 0x4E9000
	0x03C70AFC LDRB W8, [X22 + 0x510]
	0x03C70B00 LDR X23, [X23 + 0x20]
	0x03C70B04 TBNZ X8, 0x0, 0x3C70B1C
	0x03C70B08 ADRP X0, 0x4E9000
	0x03C70B0C LDR X0, [X0 + 0x20]
	0x03C70B10 BL 0x1C16CF4
	0x03C70B14 MOVZ W8, 0x1
	0x03C70B18 STRB W8, [X22 + 0x510]
	0x03C70B1C LDR X8, [X23]
	0x03C70B20 LDR X8, [X8 + 0xB8]
	0x03C70B24 LDR X22, [X8]
	0x03C70B28 CBZ X22, 0x3C70DC8
	0x03C70B2C ADRP X23, 0x776000
	0x03C70B30 LDR X8, [X23 + 0x4A8]
	0x03C70B34 CBNZ X8, 0x3C70B4C
	0x03C70B38 ADRP X0, 0xFFFFFFFFFCE81000
	0x03C70B3C ADD X0, X0, 0x566
	0x03C70B40 BL 0x1C16CB8
	0x03C70B44 MOV X8, X0
	0x03C70B48 STR X0, [X23 + 0x4A8]
	0x03C70B4C MOV X0, X22
	0x03C70B50 BLR X8
	0x03C70B54 CMP W0, 0xC
	0x03C70B58 B.EQ 0x3C70D70
	0x03C70B5C CMP W0, 0x8
	0x03C70B60 B.NE 0x3C70BD4
	0x03C70B64 CBZ X20, 0x3C70DC8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x777000
	008 Move X21, 0x4F1000
	009 Move W8, [X20+1690]
	010 Move X21, [X21+688]
	011 Move W19, W0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x4F1000
	017 Move X0, [X0+720]
	018 Call 0x1C17CF4
	019 Move X0, 0x4F1000
	020 Move X0, [X0+688]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X20+1690], W8
	024 Move X0, [X21]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move W0, W19
	030 Move W1, W31
	031 Call GUILayoutUtility.SelectIDList, X0, X1
	032 Move X20, 0x777000
	033 Move X22, 0x4EA000
	034 Move W8, [X20+1296]
	035 Move X22, [X22+32]
	036 Move X19, X0
	037 Move TEMP, X8
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfEqual {46}
	041 Move X0, 0x4EA000
	042 Move X0, [X0+32]
	043 Call 0x1C17CF4
	044 Move W8, 1
	045 Move [X20+1296], W8
	046 Move X8, [X22]
	047 Move X8, [X8+184]
	048 Move X20, [X8]
	049 Compare X20, 0
	050 JumpIfEqual {138}
	051 Move X22, 0x777000
	052 Move X8, [X22+1192]
	053 Compare X8, 0
	054 JumpIfNotEqual {60}
	055 Move X0, -51896320
	056 Add X0, X0, 1382
	057 Call 0x1C17CB8
	058 Move X8, X0
	059 Move [X22+1192], X0
	060 Move X0, X20
	061 NotImplemented "Instruction BLR not yet implemented."
	062 Move X8, [X21]
	063 Move W20, W0
	064 Move W9, [X8+224]
	065 Compare W9, 0
	066 JumpIfNotEqual {70}
	067 Move X0, X8
	068 Call 0x1C17DFC
	069 Move X8, [X21]
	070 Move X8, [X8+184]
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move X23, [X8+16]
	073 Move X22, 0x4F1000
	074 Move X22, [X22+720]
	075 Move X0, [X22]
	076 Call 0x1C17F10
	077 Move X20, X0
	078 Call GUILayoutGroup..ctor, X0
	079 Compare X19, 0
	080 JumpIfEqual {138}
	081 Move [X19+24], X20
	082 Compare X23, 0
	083 JumpIfEqual {138}
	084 Move [X23+24], X20
	085 Move X8, [X21]
	086 Move X8, [X8+184]
	087 Move X8, [X8+16]
	088 Compare X8, 0
	089 JumpIfEqual {138}
	090 Move X0, [X8+32]
	091 Compare X0, 0
	092 JumpIfEqual {138}
	093 Move X8, [X0]
	094 Move X9, [X8+520]
	095 Move X1, [X8+528]
	096 NotImplemented "Instruction BLR not yet implemented."
	097 Move X8, [X21]
	098 Move X8, [X8+184]
	099 Move X8, [X8+16]
	100 Compare X8, 0
	101 JumpIfEqual {138}
	102 Move X0, [X8+32]
	103 Compare X0, 0
	104 JumpIfEqual {138}
	105 Move X9, [X0]
	106 Move X1, [X8+24]
	107 Move X8, [X9+616]
	108 Move X2, [X9+624]
	109 NotImplemented "Instruction BLR not yet implemented."
	110 Move X8, [X21]
	111 Move X0, [X22]
	112 Move X8, [X8+184]
	113 Move X21, [X8+16]
	114 Call 0x1C17F10
	115 Move X20, X0
	116 Call GUILayoutGroup..ctor, X0
	117 Move [X19+40], X20
	118 Compare X21, 0
	119 JumpIfEqual {138}
	120 Move [X21+40], X20
	121 Compare X19, 0
	122 JumpIfEqual {138}
	123 Compare X23, 0
	124 JumpIfEqual {138}
	125 Move X8, [X19+24]
	126 Move [X23+24], X8
	127 Move X8, [X19+32]
	128 Move [X23+32], X8
	129 Move X8, [X19+40]
	130 Move [X23+40], X8
	131 Move X20, [X31+32]
	132 Move X19, [X31+40]
	133 Move X22, [X31+16]
	134 Move X21, [X31+24]
	135 Move X30, [X31+48]
	136 Move X23, [X31+56]
	137 Return 
	138 Call 0x1C17F20

Method: System.Void BeginContainer(UnityEngine.GUILayoutUtility/LayoutCache cache)

Disassembly:
	0x03C70C74 LDR X0, [X8 + 0x18]
	0x03C70C78 CBZ X0, 0x3C70DC8
	0x03C70C7C LDR X8, [X0]
	0x03C70C80 LDR X1, [X24]
	0x03C70C84 LDR X8, [X8 + 0x40]
	0x03C70C88 LDR X9, [X1 + 0x40]
	0x03C70C8C CMP X8, X9
	0x03C70C90 B.NE 0x3C70DD0
	0x03C70C94 BL 0x1C16E08
	0x03C70C98 LDR V8, [X0]
	0x03C70C9C B 0x3C70CC8
	0x03C70CA0 LDR X0, [X8 + 0x18]
	0x03C70CA4 CBZ X0, 0x3C70DC8
	0x03C70CA8 LDR X8, [X0]
	0x03C70CAC LDR X1, [X24]
	0x03C70CB0 LDR X8, [X8 + 0x40]
	0x03C70CB4 LDR X9, [X1 + 0x40]
	0x03C70CB8 CMP X8, X9
	0x03C70CBC B.NE 0x3C70DD0
	0x03C70CC0 BL 0x1C16E08
	0x03C70CC4 LDR V9, [X0]
	0x03C70CC8 LDR W8, [X19 + 0x18]
	0x03C70CCC ADD X22, X22, 0x1
	0x03C70CD0 CMP W22, W8
	0x03C70CD4 B.LT 0x3C70C50
	0x03C70CD8 B 0x3C70CE0
	0x03C70CDC FMOV S9, W31
	0x03C70CE0 MOV X0, X20
	0x03C70CE4 MOV X1, X21
	0x03C70CE8 MOV V0.16B, V9.16B
	0x03C70CEC MOV V1.16B, V8.16B
	0x03C70CF0 BL 0x3C74138
	0x03C70CF4 ADRP X21, 0x4F0000
	0x03C70CF8 LDR X21, [X21 + 0x2B0]
	0x03C70CFC MOV V8.16B, V0.16B
	0x03C70D00 MOV V9.16B, V1.16B
	0x03C70D04 LDR X0, [X21]
	0x03C70D08 LDR W8, [X0 + 0xE0]
	0x03C70D0C CBNZ W8, 0x3C70D18
	0x03C70D10 BL 0x1C16DFC
	0x03C70D14 LDR X0, [X21]
	0x03C70D18 LDR X8, [X0 + 0xB8]
	0x03C70D1C LDR X8, [X8 + 0x10]
	0x03C70D20 CBZ X8, 0x3C70DC8
	0x03C70D24 LDR X21, [X8 + 0x18]
	0x03C70D28 ADRP X8, 0x4F0000
	0x03C70D2C LDR X8, [X8 + 0x348]
	0x03C70D30 FRINTP S8, S8
	0x03C70D34 FRINTP S9, S9
	0x03C70D38 LDR X0, [X8]
	0x03C70D3C BL 0x1C16F10
	0x03C70D40 MOV V0.16B, V8.16B
	0x03C70D44 MOV V1.16B, V8.16B
	0x03C70D48 MOV V2.16B, V9.16B
	0x03C70D4C MOV V3.16B, V9.16B
	0x03C70D50 MOV X1, X20
	0x03C70D54 MOV X2, X19
	0x03C70D58 MOV X22, X0
	0x03C70D5C BL 0x3C70F58
	0x03C70D60 CBZ X21, 0x3C70DC8
	0x03C70D64 MOV X0, X21
	0x03C70D68 MOV X1, X22
	0x03C70D6C BL 0x3C70610
	0x03C70D70 ADRP X19, 0x4F0000
	0x03C70D74 LDR X19, [X19 + 0x2B0]
	0x03C70D78 LDR X0, [X19]
	0x03C70D7C LDR W8, [X0 + 0xE0]
	0x03C70D80 CBNZ W8, 0x3C70D8C
	0x03C70D84 BL 0x1C16DFC
	0x03C70D88 LDR X0, [X19]
	0x03C70D8C LDR X11, [X0 + 0xB8]
	0x03C70D90 ADD X8, X11, 0x18
	0x03C70D94 ADD X9, X11, 0x1C
	0x03C70D98 ADD X10, X11, 0x20
	0x03C70D9C ADD X11, X11, 0x24
	0x03C70DA0 LDR V0, [X8]
	0x03C70DA4 LDR V1, [X9]
	0x03C70DA8 LDR V2, [X10]
	0x03C70DAC LDR V3, [X11]
	0x03C70DB0 LDP X20, X19, [X31 + 0x40]
	0x03C70DB4 LDP X22, X21, [X31 + 0x30]
	0x03C70DB8 LDP X24, X23, [X31 + 0x20]
	0x03C70DBC LDR X30, [X31 + 0x10]
	0x03C70DC0 LDP D9, D8, [X31], #0x50
	0x03C70DC4 RET
	0x03C70DC8 BL 0x1C16F20
	0x03C70DCC BL 0x1C16F28

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x777000
	006 Move W8, [X20+1691]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x4F1000
	013 Move X0, [X0+720]
	014 Call 0x1C17CF4
	015 Move X0, 0x4F1000
	016 Move X0, [X0+688]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+1691], W8
	020 Move X20, 0x777000
	021 Move X21, 0x4EA000
	022 Move W8, [X20+1296]
	023 Move X21, [X21+32]
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {33}
	028 Move X0, 0x4EA000
	029 Move X0, [X0+32]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X20+1296], W8
	033 Move X8, [X21]
	034 Move X8, [X8+184]
	035 Move X20, [X8]
	036 Compare X20, 0
	037 JumpIfEqual {104}
	038 Move X21, 0x777000
	039 Move X8, [X21+1192]
	040 Compare X8, 0
	041 JumpIfNotEqual {47}
	042 Move X0, -51896320
	043 Add X0, X0, 1382
	044 Call 0x1C17CB8
	045 Move X8, X0
	046 Move [X21+1192], X0
	047 Move X0, X20
	048 NotImplemented "Instruction BLR not yet implemented."
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move X21, 0x4F1000
	051 Move X21, [X21+720]
	052 Move X0, [X21]
	053 Call 0x1C17F10
	054 Move X20, X0
	055 Call GUILayoutGroup..ctor, X0
	056 Compare X19, 0
	057 JumpIfEqual {104}
	058 Move X0, [X19+32]
	059 Move [X19+24], X20
	060 Compare X0, 0
	061 JumpIfEqual {104}
	062 Move X8, [X0]
	063 Move X9, [X8+520]
	064 Move X1, [X8+528]
	065 NotImplemented "Instruction BLR not yet implemented."
	066 Move X0, [X19+32]
	067 Compare X0, 0
	068 JumpIfEqual {104}
	069 Move X8, [X0]
	070 Move X1, [X19+24]
	071 Move X9, [X8+616]
	072 Move X2, [X8+624]
	073 NotImplemented "Instruction BLR not yet implemented."
	074 Move X0, [X21]
	075 Call 0x1C17F10
	076 Move X20, X0
	077 Call GUILayoutGroup..ctor, X0
	078 Move [X19+40], X20
	079 Move X20, 0x4F1000
	080 Move X20, [X20+688]
	081 Move X0, [X20]
	082 Move W8, [X0+224]
	083 Compare W8, 0
	084 JumpIfNotEqual {87}
	085 Call 0x1C17DFC
	086 Move X0, [X20]
	087 Compare X19, 0
	088 JumpIfEqual {104}
	089 Move X8, [X0+184]
	090 Move X8, [X8+16]
	091 Compare X8, 0
	092 JumpIfEqual {104}
	093 Move X9, [X19+24]
	094 Move [X8+24], X9
	095 Move X9, [X19+32]
	096 Move [X8+32], X9
	097 Move X9, [X19+40]
	098 Move X20, [X31+16]
	099 Move X19, [X31+24]
	100 Move [X8+40], X9
	101 Move X30, [X31+32]
	102 Move X21, [X31+40]
	103 Return 
	104 Call 0x1C17F20

Method: System.Void BeginWindow(System.Int32 windowID, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options)

Disassembly:
	0x03C6D3EC STRB W8, [X22 + 0x67A]
	0x03C6D3F0 LDR X0, [X21]
	0x03C6D3F4 ADRP X21, 0x4AD000
	0x03C6D3F8 LDR W8, [X0 + 0xE0]
	0x03C6D3FC LDR X21, [X21 + 0x4C0]
	0x03C6D400 CBNZ W8, 0x3C6D408
	0x03C6D404 BL 0x1C16DFC
	0x03C6D408 MOV X0, X20
	0x03C6D40C BL 0x3C678AC
	0x03C6D410 LDR X8, [X21]
	0x03C6D414 MOV X20, X0
	0x03C6D418 LDR W9, [X8 + 0xE0]
	0x03C6D41C CBNZ W9, 0x3C6D428
	0x03C6D420 MOV X0, X8
	0x03C6D424 BL 0x1C16DFC
	0x03C6D428 BL 0x3C6748C
	0x03C6D42C CBZ X0, 0x3C6D44C
	0x03C6D430 LDR X1, [X0 + 0x20]
	0x03C6D434 MOV X0, X20
	0x03C6D438 MOV X2, X19
	0x03C6D43C LDP X20, X19, [X31 + 0x20]
	0x03C6D440 LDP X22, X21, [X31 + 0x10]
	0x03C6D444 LDR X30, [X31], #0x30
	0x03C6D448 B 0x3C6D450
	0x03C6D44C BL 0x1C16F20
	0x03C6D450 STP D11, D10, [X31 - 0x50]!
	0x03C6D454 STP D9, D8, [X31 + 0x10]
	0x03C6D458 STP X30, X23, [X31 + 0x20]
	0x03C6D45C STP X22, X21, [X31 + 0x30]
	0x03C6D460 STP X20, X19, [X31 + 0x40]
	0x03C6D464 ADRP X23, 0x779000
	0x03C6D468 ADRP X22, 0x4F3000
	0x03C6D46C LDRB W8, [X23 + 0x67B]
	0x03C6D470 LDR X22, [X22 + 0x2B0]
	0x03C6D474 MOV X21, X2
	0x03C6D478 MOV X19, X1
	0x03C6D47C MOV X20, X0
	0x03C6D480 TBNZ X8, 0x0, 0x3C6D4A4
	0x03C6D484 ADRP X0, 0x4F3000
	0x03C6D488 LDR X0, [X0 + 0x2B0]
	0x03C6D48C BL 0x1C16CF4
	0x03C6D490 ADRP X0, 0x4AD000
	0x03C6D494 LDR X0, [X0 + 0x4C0]
	0x03C6D498 BL 0x1C16CF4
	0x03C6D49C MOVZ W8, 0x1
	0x03C6D4A0 STRB W8, [X23 + 0x67B]
	0x03C6D4A4 LDR X0, [X22]
	0x03C6D4A8 ADRP X22, 0x4AD000
	0x03C6D4AC LDR W8, [X0 + 0xE0]
	0x03C6D4B0 LDR X22, [X22 + 0x4C0]
	0x03C6D4B4 CBNZ W8, 0x3C6D4BC
	0x03C6D4B8 BL 0x1C16DFC
	0x03C6D4BC MOV X0, X20
	0x03C6D4C0 MOV X1, X19
	0x03C6D4C4 MOV X2, X21
	0x03C6D4C8 BL 0x3C6D33C
	0x03C6D4CC LDR X0, [X22]
	0x03C6D4D0 MOV V8.16B, V0.16B
	0x03C6D4D4 MOV V9.16B, V1.16B
	0x03C6D4D8 MOV V10.16B, V2.16B
	0x03C6D4DC LDR W8, [X0 + 0xE0]
	0x03C6D4E0 MOV V11.16B, V3.16B
	0x03C6D4E4 CBNZ W8, 0x3C6D4EC
	0x03C6D4E8 BL 0x1C16DFC
	0x03C6D4EC MOV V0.16B, V8.16B
	0x03C6D4F0 MOV V1.16B, V9.16B
	0x03C6D4F4 MOV X0, X20
	0x03C6D4F8 MOV X1, X19
	0x03C6D4FC LDP X20, X19, [X31 + 0x40]
	0x03C6D500 LDP X22, X21, [X31 + 0x30]
	0x03C6D504 LDP X30, X23, [X31 + 0x20]
	0x03C6D508 LDP D9, D8, [X31 + 0x10]
	0x03C6D50C MOV V2.16B, V10.16B
	0x03C6D510 MOV V3.16B, V11.16B
	0x03C6D514 LDP D11, D10, [X31], #0x50
	0x03C6D518 B 0x3C68C88
	0x03C6D51C STR X30, [X31 - 0x30]!
	0x03C6D520 STP X22, X21, [X31 + 0x10]
	0x03C6D524 STP X20, X19, [X31 + 0x20]
	0x03C6D528 ADRP X22, 0x779000
	0x03C6D52C ADRP X21, 0x4B1000
	0x03C6D530 LDRB W8, [X22 + 0x67C]
	0x03C6D534 LDR X21, [X21 + 0xBD0]
	0x03C6D538 MOV X19, X1
	0x03C6D53C MOV X20, X0
	0x03C6D540 TBNZ X8, 0x0, 0x3C6D564
	0x03C6D544 ADRP X0, 0x4B1000
	0x03C6D548 LDR X0, [X0 + 0xBD0]
	0x03C6D54C BL 0x1C16CF4
	0x03C6D550 ADRP X0, 0x4AD000
	0x03C6D554 LDR X0, [X0 + 0x4C0]
	0x03C6D558 BL 0x1C16CF4
	0x03C6D55C MOVZ W8, 0x1
	0x03C6D560 STRB W8, [X22 + 0x67C]
	0x03C6D564 LDR X0, [X21]
	0x03C6D568 ADRP X21, 0x4AD000
	0x03C6D56C LDR W8, [X0 + 0xE0]
	0x03C6D570 LDR X21, [X21 + 0x4C0]
	0x03C6D574 CBNZ W8, 0x3C6D57C
	0x03C6D578 BL 0x1C16DFC
	0x03C6D57C MOV X0, X20
	0x03C6D580 BL 0x3C678AC
	0x03C6D584 LDR X8, [X21]
	0x03C6D588 MOV X20, X0
	0x03C6D58C LDR W9, [X8 + 0xE0]
	0x03C6D590 CBNZ W9, 0x3C6D59C
	0x03C6D594 MOV X0, X8
	0x03C6D598 BL 0x1C16DFC
	0x03C6D59C BL 0x3C6748C
	0x03C6D5A0 CBZ X0, 0x3C6D5C0
	0x03C6D5A4 LDR X1, [X0 + 0x28]
	0x03C6D5A8 MOV X0, X20
	0x03C6D5AC MOV X2, X19
	0x03C6D5B0 LDP X20, X19, [X31 + 0x20]
	0x03C6D5B4 LDP X22, X21, [X31 + 0x10]
	0x03C6D5B8 LDR X30, [X31], #0x30
	0x03C6D5BC B 0x3C6D5CC
	0x03C6D5C0 BL 0x1C16F20
	0x03C6D5C4 LDR X0, [X0 + 0x28]
	0x03C6D5C8 RET
	0x03C6D5CC STP D11, D10, [X31 - 0x50]!
	0x03C6D5D0 STP D9, D8, [X31 + 0x10]
	0x03C6D5D4 STP X30, X23, [X31 + 0x20]
	0x03C6D5D8 STP X22, X21, [X31 + 0x30]
	0x03C6D5DC STP X20, X19, [X31 + 0x40]
	0x03C6D5E0 ADRP X23, 0x779000
	0x03C6D5E4 ADRP X22, 0x4F3000
	0x03C6D5E8 LDRB W8, [X23 + 0x67D]
	0x03C6D5EC LDR X22, [X22 + 0x2B0]
	0x03C6D5F0 MOV X21, X2
	0x03C6D5F4 MOV X19, X1
	0x03C6D5F8 MOV X20, X0
	0x03C6D5FC TBNZ X8, 0x0, 0x3C6D620
	0x03C6D600 ADRP X0, 0x4F3000
	0x03C6D604 LDR X0, [X0 + 0x2B0]
	0x03C6D608 BL 0x1C16CF4
	0x03C6D60C ADRP X0, 0x4AD000
	0x03C6D610 LDR X0, [X0 + 0x4C0]
	0x03C6D614 BL 0x1C16CF4
	0x03C6D618 MOVZ W8, 0x1
	0x03C6D61C STRB W8, [X23 + 0x67D]
	0x03C6D620 LDR X0, [X22]
	0x03C6D624 ADRP X22, 0x4AD000
	0x03C6D628 LDR W8, [X0 + 0xE0]
	0x03C6D62C LDR X22, [X22 + 0x4C0]
	0x03C6D630 CBNZ W8, 0x3C6D638
	0x03C6D634 BL 0x1C16DFC
	0x03C6D638 MOV X0, X20
	0x03C6D63C MOV X1, X19
	0x03C6D640 MOV X2, X21
	0x03C6D644 BL 0x3C6D33C
	0x03C6D648 LDR X0, [X22]
	0x03C6D64C MOV V8.16B, V0.16B
	0x03C6D650 MOV V9.16B, V1.16B
	0x03C6D654 MOV V10.16B, V2.16B
	0x03C6D658 LDR W8, [X0 + 0xE0]
	0x03C6D65C MOV V11.16B, V3.16B
	0x03C6D660 CBNZ W8, 0x3C6D668

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X19, 0x77A000
	011 Move X24, 0x4F4000
	012 Move W8, [X19+1692]
	013 Move X24, [X24+688]
	014 Move X20, X2
	015 Move X22, X1
	016 Move W21, W0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {29}
	021 Move X0, 0x4F4000
	022 Move X0, [X0+720]
	023 Call 0x1C17CF4
	024 Move X0, 0x4F4000
	025 Move X0, [X0+688]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X19+1692], W8
	029 Move X0, [X24]
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move W1, 1
	035 Move W0, W21
	036 Move W23, 1
	037 Call GUILayoutUtility.SelectIDList, X0, X1
	038 Move X25, 0x77A000
	039 Move X26, 0x4ED000
	040 Move W8, [X25+1296]
	041 Move X26, [X26+32]
	042 Move X19, X0
	043 Move TEMP, X8
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfEqual {51}
	047 Move X0, 0x4ED000
	048 Move X0, [X0+32]
	049 Call 0x1C17CF4
	050 Move [X25+1296], W23
	051 Move X8, [X26]
	052 Move X8, [X8+184]
	053 Move X23, [X8]
	054 Compare X23, 0
	055 JumpIfEqual {193}
	056 Move X25, 0x77A000
	057 Move X8, [X25+1192]
	058 Compare X8, 0
	059 JumpIfNotEqual {65}
	060 Move X0, -51884032
	061 Add X0, X0, 1382
	062 Call 0x1C17CB8
	063 Move X8, X0
	064 Move [X25+1192], X0
	065 Move X0, X23
	066 NotImplemented "Instruction BLR not yet implemented."
	067 Move X8, [X24]
	068 Move W23, W0
	069 Move W9, [X8+224]
	070 Compare W9, 0
	071 JumpIfNotEqual {75}
	072 Move X0, X8
	073 Call 0x1C17DFC
	074 Move X8, [X24]
	075 Move X8, [X8+184]
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Move X26, [X8+16]
	078 Move X25, 0x4F4000
	079 Move X25, [X25+720]
	080 Move X0, [X25]
	081 Call 0x1C17F10
	082 Move X23, X0
	083 Call GUILayoutGroup..ctor, X0
	084 Compare X19, 0
	085 JumpIfEqual {193}
	086 Move [X19+24], X23
	087 Compare X26, 0
	088 JumpIfEqual {193}
	089 Move [X26+24], X23
	090 Move X8, [X24]
	091 Move X8, [X8+184]
	092 Move X8, [X8+16]
	093 Compare X8, 0
	094 JumpIfEqual {193}
	095 Move X0, [X8+24]
	096 Compare X0, 0
	097 JumpIfEqual {193}
	098 Move X8, [X0]
	099 Move [X0+64], X22
	100 Move X1, X22
	101 Move X9, [X8+504]
	102 Move X2, [X8+512]
	103 NotImplemented "Instruction BLR not yet implemented."
	104 Move X0, [X24]
	105 Move X8, [X0+184]
	106 Move X8, [X8+16]
	107 Compare X8, 0
	108 JumpIfEqual {193}
	109 Move X9, [X8+24]
	110 Compare X9, 0
	111 JumpIfEqual {193}
	112 Move [X9+92], W21
	113 Compare X20, 0
	114 JumpIfEqual {133}
	115 Move W9, [X0+224]
	116 Compare W9, 0
	117 JumpIfNotEqual {124}
	118 Call 0x1C17DFC
	119 Move X8, [X24]
	120 Move X8, [X8+184]
	121 Move X8, [X8+16]
	122 Compare X8, 0
	123 JumpIfEqual {193}
	124 Move X0, [X8+24]
	125 Compare X0, 0
	126 JumpIfEqual {193}
	127 Move X8, [X0]
	128 Move X1, X20
	129 Move X9, [X8+520]
	130 Move X2, [X8+528]
	131 NotImplemented "Instruction BLR not yet implemented."
	132 Move X0, [X24]
	133 Move W8, [X0+224]
	134 Compare W8, 0
	135 JumpIfNotEqual {138}
	136 Call 0x1C17DFC
	137 Move X0, [X24]
	138 Move X8, [X0+184]
	139 Move X8, [X8+16]
	140 Compare X8, 0
	141 JumpIfEqual {193}
	142 Move X0, [X8+32]
	143 Compare X0, 0
	144 JumpIfEqual {193}
	145 Move X8, [X0]
	146 Move X9, [X8+520]
	147 Move X1, [X8+528]
	148 NotImplemented "Instruction BLR not yet implemented."
	149 Move X8, [X24]
	150 Move X8, [X8+184]
	151 Move X8, [X8+16]
	152 Compare X8, 0
	153 JumpIfEqual {193}
	154 Move X0, [X8+32]
	155 Compare X0, 0
	156 JumpIfEqual {193}
	157 Move X9, [X0]
	158 Move X1, [X8+24]
	159 Move X8, [X9+616]
	160 Move X2, [X9+624]
	161 NotImplemented "Instruction BLR not yet implemented."
	162 Move X8, [X24]
	163 Move X0, [X25]
	164 Move X8, [X8+184]
	165 Move X21, [X8+16]
	166 Call 0x1C17F10
	167 Move X20, X0
	168 Call GUILayoutGroup..ctor, X0
	169 Move [X19+40], X20
	170 Compare X21, 0
	171 JumpIfEqual {193}
	172 Move [X21+40], X20
	173 Compare X19, 0
	174 JumpIfEqual {193}
	175 Compare X26, 0
	176 JumpIfEqual {193}
	177 Move X8, [X19+24]
	178 Move [X26+24], X8
	179 Move X8, [X19+32]
	180 Move [X26+32], X8
	181 Move X8, [X19+40]
	182 Move [X26+40], X8
	183 Move X20, [X31+64]
	184 Move X19, [X31+72]
	185 Move X22, [X31+48]
	186 Move X21, [X31+56]
	187 Move X24, [X31+32]
	188 Move X23, [X31+40]
	189 Move X26, [X31+16]
	190 Move X25, [X31+24]
	191 Move X30, [X31+80]
	192 Return 
	193 Call 0x1C17F20

Method: System.Void Layout()

Disassembly:
	0x03C6D664 BL 0x1C16DFC
	0x03C6D668 MOV V0.16B, V8.16B
	0x03C6D66C MOV V1.16B, V9.16B
	0x03C6D670 MOV X0, X20
	0x03C6D674 MOV X1, X19
	0x03C6D678 LDP X20, X19, [X31 + 0x40]
	0x03C6D67C LDP X22, X21, [X31 + 0x30]
	0x03C6D680 LDP X30, X23, [X31 + 0x20]
	0x03C6D684 LDP D9, D8, [X31 + 0x10]
	0x03C6D688 MOV V2.16B, V10.16B
	0x03C6D68C MOV V3.16B, V11.16B
	0x03C6D690 LDP D11, D10, [X31], #0x50
	0x03C6D694 B 0x3C68FC0
	0x03C6D698 STP X30, X23, [X31 - 0x30]!
	0x03C6D69C STP X22, X21, [X31 + 0x10]
	0x03C6D6A0 STP X20, X19, [X31 + 0x20]
	0x03C6D6A4 ADRP X22, 0x779000
	0x03C6D6A8 ADRP X23, 0x4AD000
	0x03C6D6AC LDRB W8, [X22 + 0x67E]
	0x03C6D6B0 LDR X23, [X23 + 0x4C0]
	0x03C6D6B4 MOV X19, X2
	0x03C6D6B8 MOV W20, W1
	0x03C6D6BC MOV X21, X0
	0x03C6D6C0 TBNZ X8, 0x0, 0x3C6D6D8
	0x03C6D6C4 ADRP X0, 0x4AD000
	0x03C6D6C8 LDR X0, [X0 + 0x4C0]
	0x03C6D6CC BL 0x1C16CF4
	0x03C6D6D0 MOVZ W8, 0x1
	0x03C6D6D4 STRB W8, [X22 + 0x67E]
	0x03C6D6D8 LDR X0, [X23]
	0x03C6D6DC LDR W8, [X0 + 0xE0]
	0x03C6D6E0 CBNZ W8, 0x3C6D6E8
	0x03C6D6E4 BL 0x1C16DFC
	0x03C6D6E8 BL 0x3C6748C
	0x03C6D6EC CBZ X0, 0x3C6D714
	0x03C6D6F0 LDR X3, [X0 + 0x40]
	0x03C6D6F4 MOV X0, X21
	0x03C6D6F8 MOV W1, W20
	0x03C6D6FC MOV X4, X19
	0x03C6D700 LDP X20, X19, [X31 + 0x20]
	0x03C6D704 LDP X22, X21, [X31 + 0x10]
	0x03C6D708 MOV W2, W31
	0x03C6D70C LDP X30, X23, [X31], #0x30
	0x03C6D710 B 0x3C6D720
	0x03C6D714 BL 0x1C16F20
	0x03C6D718 LDR X0, [X0 + 0x40]
	0x03C6D71C RET
	0x03C6D720 STP D11, D10, [X31 - 0x80]!
	0x03C6D724 STP D9, D8, [X31 + 0x10]
	0x03C6D728 STR X30, [X31 + 0x20]
	0x03C6D72C STP X28, X27, [X31 + 0x30]
	0x03C6D730 STP X26, X25, [X31 + 0x40]
	0x03C6D734 STP X24, X23, [X31 + 0x50]
	0x03C6D738 STP X22, X21, [X31 + 0x60]
	0x03C6D73C STP X20, X19, [X31 + 0x70]
	0x03C6D740 ADRP X23, 0x779000
	0x03C6D744 ADRP X26, 0x4B2000
	0x03C6D748 LDRB W8, [X23 + 0x67F]
	0x03C6D74C LDR X26, [X26 + 0x5C8]
	0x03C6D750 MOV X24, X4
	0x03C6D754 MOV X19, X3
	0x03C6D758 MOV W21, W2
	0x03C6D75C MOV W20, W1
	0x03C6D760 MOV X22, X0
	0x03C6D764 TBNZ X8, 0x0, 0x3C6D7A0
	0x03C6D768 ADRP X0, 0x4B1000
	0x03C6D76C LDR X0, [X0 + 0xBD0]
	0x03C6D770 BL 0x1C16CF4
	0x03C6D774 ADRP X0, 0x4F3000
	0x03C6D778 LDR X0, [X0 + 0x2B0]
	0x03C6D77C BL 0x1C16CF4
	0x03C6D780 ADRP X0, 0x4B2000
	0x03C6D784 LDR X0, [X0 + 0x5C8]
	0x03C6D788 BL 0x1C16CF4
	0x03C6D78C ADRP X0, 0x4AD000
	0x03C6D790 LDR X0, [X0 + 0x4C0]
	0x03C6D794 BL 0x1C16CF4
	0x03C6D798 MOVZ W8, 0x1
	0x03C6D79C STRB W8, [X23 + 0x67F]
	0x03C6D7A0 LDR X0, [X26]
	0x03C6D7A4 ADRP X27, 0x4B1000
	0x03C6D7A8 LDR W8, [X0 + 0xE0]
	0x03C6D7AC LDR X27, [X27 + 0xBD0]
	0x03C6D7B0 CBNZ W8, 0x3C6D7B8
	0x03C6D7B4 BL 0x1C16DFC
	0x03C6D7B8 MOVZ W0, 0x1
	0x03C6D7BC BL 0x3C6D954
	0x03C6D7C0 LDR X8, [X27]
	0x03C6D7C4 MOV W23, W0
	0x03C6D7C8 LDR W9, [X8 + 0xE0]
	0x03C6D7CC CBNZ W9, 0x3C6D7D8
	0x03C6D7D0 MOV X0, X8
	0x03C6D7D4 BL 0x1C16DFC
	0x03C6D7D8 ADRP X28, 0x4F3000
	0x03C6D7DC LDR X28, [X28 + 0x2B0]
	0x03C6D7E0 MOV X0, X22
	0x03C6D7E4 BL 0x3C678AC
	0x03C6D7E8 BL 0x3C6AA80
	0x03C6D7EC CMP W0, W23
	0x03C6D7F0 B.NE 0x3C6D854
	0x03C6D7F4 LDR X0, [X26]
	0x03C6D7F8 LDR W8, [X0 + 0xE0]
	0x03C6D7FC CBNZ W8, 0x3C6D804
	0x03C6D800 BL 0x1C16DFC
	0x03C6D804 ADRP X25, 0x779000
	0x03C6D808 LDR X8, [X25 + 0x8F0]
	0x03C6D80C CBNZ X8, 0x3C6D824
	0x03C6D810 ADRP X0, 0xFFFFFFFFFCEAA000
	0x03C6D814 ADD X0, X0, 0x14D
	0x03C6D818 BL 0x1C16CB8
	0x03C6D81C MOV X8, X0
	0x03C6D820 STR X0, [X25 + 0x8F0]
	0x03C6D824 BLR X8
	0x03C6D828 MOV X1, X0
	0x03C6D82C MOV X0, X22
	0x03C6D830 MOV X2, X31
	0x03C6D834 BL 0x321B938
	0x03C6D838 LDR X8, [X27]
	0x03C6D83C MOV X25, X0
	0x03C6D840 LDR W9, [X8 + 0xE0]
	0x03C6D844 CBNZ W9, 0x3C6D86C
	0x03C6D848 MOV X0, X8
	0x03C6D84C BL 0x1C16DFC
	0x03C6D850 B 0x3C6D86C
	0x03C6D854 LDR X0, [X27]
	0x03C6D858 MOV X25, X22
	0x03C6D85C LDR W8, [X0 + 0xE0]
	0x03C6D860 CBNZ W8, 0x3C6D86C
	0x03C6D864 BL 0x1C16DFC
	0x03C6D868 MOV X25, X22
	0x03C6D86C MOV X0, X25
	0x03C6D870 BL 0x3C678AC
	0x03C6D874 LDR X8, [X28]
	0x03C6D878 MOV X25, X0
	0x03C6D87C LDR W9, [X8 + 0xE0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, 0x77A000
	007 Move X21, 0x4F4000
	008 Move W8, [X19+1693]
	009 Move X21, [X21+688]
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x4F4000
	015 Move X0, [X0+688]
	016 Call 0x1C17CF4
	017 Move X0, 0x4B3000
	018 Move X0, [X0+1480]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X19+1693], W8
	022 Move X0, [X21]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {28}
	026 Call 0x1C17DFC
	027 Move X0, [X21]
	028 Move X8, [X0+184]
	029 Move X8, [X8+16]
	030 Compare X8, 0
	031 JumpIfEqual {165}
	032 Move X9, [X8+24]
	033 Compare X9, 0
	034 JumpIfEqual {165}
	035 Move W10, [X0+224]
	036 Move W19, [X9+92]
	037 Compare W10, 0
	038 JumpIfNotEqual {45}
	039 Call 0x1C17DFC
	040 Move X8, [X21]
	041 Move X8, [X8+184]
	042 Move X8, [X8+16]
	043 Compare X8, 0
	044 JumpIfEqual {165}
	045 Move X0, [X8+24]
	046 Add W31, W19, 1
	047 Call GUILayoutUtility.LayoutSingleGroup, X0
	048 Compare X0, 0
	049 JumpIfEqual {165}
	050 Move X8, [X0]
	051 Move X9, [X8+440]
	052 Move X1, [X8+448]
	053 NotImplemented "Instruction BLR not yet implemented."
	054 Move X8, [X21]
	055 Move X8, [X8+184]
	056 Move X8, [X8+16]
	057 Compare X8, 0
	058 JumpIfEqual {165}
	059 Move X19, [X8+24]
	060 Move X0, X31
	061 Call Screen.get_width
	062 Move X8, 0x4B3000
	063 Move X8, [X8+1480]
	064 Move W20, W0
	065 Move X8, [X8]
	066 Move W9, [X8+224]
	067 Compare W9, 0
	068 JumpIfNotEqual {71}
	069 Move X0, X8
	070 Call 0x1C17DFC
	071 Move X22, 0x77A000
	072 Move X0, [X22+2152]
	073 Compare X0, 0
	074 JumpIfNotEqual {79}
	075 Move X0, -51646464
	076 Add X0, X0, 138
	077 Call 0x1C17CB8
	078 Move [X22+2152], X0
	079 NotImplemented "Instruction BLR not yet implemented."
	080 Move X8, [X21]
	081 Move X8, [X8+184]
	082 Move X8, [X8+16]
	083 Compare X8, 0
	084 JumpIfEqual {165}
	085 Move X8, [X8+24]
	086 Compare X8, 0
	087 JumpIfEqual {165}
	088 Compare X19, 0
	089 JumpIfEqual {165}
	090 Move X9, [X19]
	091 Move V1, [X8+20]
	092 NotImplemented "Instruction SCVTF not yet implemented."
	093 NotImplemented "Instruction FDIV not yet implemented."
	094 Move X8, [X9+472]
	095 Move X1, [X9+480]
	096 NotImplemented "Instruction FCMP not yet implemented."
	097 NotImplemented "Instruction FCSEL not yet implemented."
	098 Move S0, W31
	099 Move X0, X19
	100 NotImplemented "Instruction BLR not yet implemented."
	101 Move X8, [X21]
	102 Move X8, [X8+184]
	103 Move X8, [X8+16]
	104 Compare X8, 0
	105 JumpIfEqual {165}
	106 Move X0, [X8+24]
	107 Compare X0, 0
	108 JumpIfEqual {165}
	109 Move X8, [X0]
	110 Move X9, [X8+456]
	111 Move X1, [X8+464]
	112 NotImplemented "Instruction BLR not yet implemented."
	113 Move X8, [X21]
	114 Move X8, [X8+184]
	115 Move X8, [X8+16]
	116 Compare X8, 0
	117 JumpIfEqual {165}
	118 Move X19, [X8+24]
	119 Move X0, X31
	120 Call Screen.get_height
	121 Move X8, [X22+2152]
	122 Move W20, W0
	123 Compare X8, 0
	124 JumpIfNotEqual {130}
	125 Move X0, -51646464
	126 Add X0, X0, 138
	127 Call 0x1C17CB8
	128 Move X8, X0
	129 Move [X22+2152], X0
	130 NotImplemented "Instruction BLR not yet implemented."
	131 Move X8, [X21]
	132 Move X8, [X8+184]
	133 Move X8, [X8+16]
	134 Compare X8, 0
	135 JumpIfEqual {165}
	136 Move X8, [X8+24]
	137 Compare X8, 0
	138 JumpIfEqual {165}
	139 Compare X19, 0
	140 JumpIfEqual {165}
	141 Move X9, [X19]
	142 Move V1, [X8+28]
	143 NotImplemented "Instruction SCVTF not yet implemented."
	144 NotImplemented "Instruction FDIV not yet implemented."
	145 Move X8, [X9+488]
	146 Move X1, [X9+496]
	147 NotImplemented "Instruction FCMP not yet implemented."
	148 NotImplemented "Instruction FCSEL not yet implemented."
	149 Move S0, W31
	150 Move X0, X19
	151 NotImplemented "Instruction BLR not yet implemented."
	152 Move X8, [X21]
	153 Move X8, [X8+184]
	154 Move X8, [X8+16]
	155 Compare X8, 0
	156 JumpIfEqual {165}
	157 Move X0, [X8+40]
	158 Move X20, [X31+32]
	159 Move X19, [X31+40]
	160 Move X22, [X31+16]
	161 Move X21, [X31+24]
	162 Move X30, [X31+48]
	163 Call GUILayoutUtility.LayoutFreeGroup, X0
	164 Return 
	165 Call 0x1C17F20

Method: System.Void LayoutFromEditorWindow()

Disassembly:
	0x03C7112C ADRP X20, 0x775000
	0x03C71130 LDRB W8, [X20 + 0x6C1]
	0x03C71134 MOV X19, X0
	0x03C71138 TBNZ X8, 0x0, 0x3C71168
	0x03C7113C ADRP X0, 0x4EF000
	0x03C71140 LDR X0, [X0 + 0x2D0]
	0x03C71144 BL 0x1C16CF4
	0x03C71148 ADRP X0, 0x482000
	0x03C7114C LDR X0, [X0 + 0xE00]
	0x03C71150 BL 0x1C16CF4
	0x03C71154 ADRP X0, 0x482000
	0x03C71158 LDR X0, [X0 + 0xE18]
	0x03C7115C BL 0x1C16CF4
	0x03C71160 MOVZ W8, 0x1
	0x03C71164 STRB W8, [X20 + 0x6C1]
	0x03C71168 LDR X8, [X19 + 0x28]
	0x03C7116C CBZ X8, 0x3C71334
	0x03C71170 STR W31, [X8 + 0x60]
	0x03C71174 LDR X8, [X19 + 0x18]
	0x03C71178 CBZ X8, 0x3C71334
	0x03C7117C STR W31, [X8 + 0x60]
	0x03C71180 LDR X0, [X19 + 0x20]
	0x03C71184 CBZ X0, 0x3C71334
	0x03C71188 LDR X8, [X0]
	0x03C7118C ADRP X21, 0x482000
	0x03C71190 LDR X9, [X8 + 0x238]
	0x03C71194 LDR X1, [X8 + 0x240]
	0x03C71198 LDR X21, [X21 + 0xE00]
	0x03C7119C BLR X9
	0x03C711A0 MOV X19, X0
	0x03C711A4 CBZ X0, 0x3C71338
	0x03C711A8 ADRP X20, 0x482000
	0x03C711AC ADRP X22, 0x4EF000
	0x03C711B0 LDR X20, [X20 + 0xE18]
	0x03C711B4 LDR X22, [X22 + 0x2D0]
	0x03C711B8 LDR X8, [X19]
	0x03C711BC LDR X1, [X20]
	0x03C711C0 LDRH W9, [X8 + 0x12E]
	0x03C711C4 CBZ X9, 0x3C711E8
	0x03C711C8 LDR X10, [X8 + 0xB0]
	0x03C711CC ADD X10, X10, 0x8
	0x03C711D0 LDUR X11, [X10 - 0x8]
	0x03C711D4 CMP X11, X1
	0x03C711D8 B.EQ 0x3C711F8
	0x03C711DC SUBS X9, X9, 0x1
	0x03C711E0 ADD X10, X10, 0x10
	0x03C711E4 B.NE 0x3C711D0
	0x03C711E8 MOV X0, X19
	0x03C711EC MOV W2, W31
	0x03C711F0 BL 0x1C5C788
	0x03C711F4 B 0x3C71204
	0x03C711F8 LDRSW X9, [X10]
	0x03C711FC ADD X8, X8, X9, 0x4, LSL
	0x03C71200 ADD X0, X8, 0x138
	0x03C71204 LDP X8, X1, [X0]
	0x03C71208 MOV X0, X19
	0x03C7120C BLR X8
	0x03C71210 TBZ X0, 0x0, 0x3C712A8
	0x03C71214 LDR X8, [X19]
	0x03C71218 LDR X1, [X20]
	0x03C7121C LDRH W9, [X8 + 0x12E]
	0x03C71220 CBZ X9, 0x3C71244
	0x03C71224 LDR X10, [X8 + 0xB0]
	0x03C71228 ADD X10, X10, 0x8
	0x03C7122C LDUR X11, [X10 - 0x8]
	0x03C71230 CMP X11, X1
	0x03C71234 B.EQ 0x3C71254
	0x03C71238 SUBS X9, X9, 0x1
	0x03C7123C ADD X10, X10, 0x10
	0x03C71240 B.NE 0x3C7122C
	0x03C71244 MOVZ W2, 0x1
	0x03C71248 MOV X0, X19
	0x03C7124C BL 0x1C5C788
	0x03C71250 B 0x3C71264
	0x03C71254 LDR W9, [X10]
	0x03C71258 ADD W9, W9, 0x1
	0x03C7125C ADD X8, X8, W9, 0x4, SXTW
	0x03C71260 ADD X0, X8, 0x138
	0x03C71264 LDP X8, X1, [X0]
	0x03C71268 MOV X0, X19
	0x03C7126C BLR X8
	0x03C71270 CBZ X0, 0x3C71330
	0x03C71274 LDR X8, [X0]
	0x03C71278 LDR X1, [X22]
	0x03C7127C LDRB W10, [X8 + 0x130]
	0x03C71280 LDRB W9, [X1 + 0x130]
	0x03C71284 CMP W10, W9
	0x03C71288 B.CC 0x3C7132C
	0x03C7128C LDR X8, [X8 + 0xC8]
	0x03C71290 ADD X8, X8, X9, 0x3, LSL
	0x03C71294 LDUR X8, [X8 - 0x8]
	0x03C71298 CMP X8, X1
	0x03C7129C B.NE 0x3C7132C
	0x03C712A0 STR W31, [X0 + 0x60]
	0x03C712A4 B 0x3C711B8
	0x03C712A8 MOV X20, X31
	0x03C712AC LDR X1, [X21]
	0x03C712B0 MOV X0, X19
	0x03C712B4 BL 0x1C16E00
	0x03C712B8 CBZ X0, 0x3C71318
	0x03C712BC LDR X8, [X0]
	0x03C712C0 LDR X1, [X21]
	0x03C712C4 MOV X19, X0
	0x03C712C8 LDRH W9, [X8 + 0x12E]
	0x03C712CC CBZ X9, 0x3C712F0
	0x03C712D0 LDR X10, [X8 + 0xB0]
	0x03C712D4 ADD X10, X10, 0x8
	0x03C712D8 LDUR X11, [X10 - 0x8]
	0x03C712DC CMP X11, X1
	0x03C712E0 B.EQ 0x3C71300
	0x03C712E4 SUBS X9, X9, 0x1
	0x03C712E8 ADD X10, X10, 0x10
	0x03C712EC B.NE 0x3C712D8
	0x03C712F0 MOV X0, X19
	0x03C712F4 MOV W2, W31
	0x03C712F8 BL 0x1C5C788
	0x03C712FC B 0x3C7130C
	0x03C71300 LDRSW X9, [X10]
	0x03C71304 ADD X8, X8, X9, 0x4, LSL
	0x03C71308 ADD X0, X8, 0x138
	0x03C7130C LDP X8, X1, [X0]
	0x03C71310 MOV X0, X19
	0x03C71314 BLR X8
	0x03C71318 CBNZ X20, 0x3C7133C
	0x03C7131C LDP X20, X19, [X31 + 0x20]
	0x03C71320 LDP X22, X21, [X31 + 0x10]
	0x03C71324 LDR X30, [X31], #0x30
	0x03C71328 RET
	0x03C7132C BL 0x1C171E0
	0x03C71330 BL 0x1C16F20
	0x03C71334 BL 0x1C16F20
	0x03C71338 BL 0x1C16F20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, 0x776000
	007 Move X21, 0x4F0000
	008 Move W8, [X19+1694]
	009 Move X21, [X21+688]
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {28}
	014 Move X0, 0x483000
	015 Move X0, [X0+2600]
	016 Call 0x1C17CF4
	017 Move X0, 0x4F0000
	018 Move X0, [X0+688]
	019 Call 0x1C17CF4
	020 Move X0, 0x4AF000
	021 Move X0, [X0+1480]
	022 Call 0x1C17CF4
	023 Move X0, 0x4F0000
	024 Move X0, [X0+880]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X19+1694], W8
	028 Move X0, [X21]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {34}
	032 Call 0x1C17DFC
	033 Move X0, [X21]
	034 Move X8, [X0+184]
	035 Move X8, [X8+16]
	036 Compare X8, 0
	037 JumpIfEqual {164}
	038 Move X9, [X8+24]
	039 Compare X9, 0
	040 JumpIfEqual {146}
	041 Move W9, [X0+224]
	042 Compare W9, 0
	043 JumpIfNotEqual {50}
	044 Call 0x1C17DFC
	045 Move X8, [X21]
	046 Move X8, [X8+184]
	047 Move X8, [X8+16]
	048 Compare X8, 0
	049 JumpIfEqual {164}
	050 Move X0, [X8+24]
	051 Compare X0, 0
	052 JumpIfEqual {164}
	053 Move X8, [X0]
	054 Move X9, [X8+440]
	055 Move X1, [X8+448]
	056 NotImplemented "Instruction BLR not yet implemented."
	057 Move X8, [X21]
	058 Move X8, [X8+184]
	059 Move X8, [X8+16]
	060 Compare X8, 0
	061 JumpIfEqual {164}
	062 Move X20, 0x4AF000
	063 Move X19, [X8+24]
	064 Move X20, [X20+1480]
	065 Move X0, X31
	066 Call Screen.get_width
	067 Move X8, [X20]
	068 Move W20, W0
	069 Move W9, [X8+224]
	070 Compare W9, 0
	071 JumpIfNotEqual {74}
	072 Move X0, X8
	073 Call 0x1C17DFC
	074 Move X22, 0x776000
	075 Move X0, [X22+2152]
	076 Compare X0, 0
	077 JumpIfNotEqual {82}
	078 Move X0, -51662848
	079 Add X0, X0, 138
	080 Call 0x1C17CB8
	081 Move [X22+2152], X0
	082 NotImplemented "Instruction BLR not yet implemented."
	083 Compare X19, 0
	084 JumpIfEqual {164}
	085 Move X8, [X19]
	086 NotImplemented "Instruction SCVTF not yet implemented."
	087 NotImplemented "Instruction FDIV not yet implemented."
	088 Move S0, W31
	089 Move X9, [X8+472]
	090 Move X1, [X8+480]
	091 Move X0, X19
	092 NotImplemented "Instruction BLR not yet implemented."
	093 Move X8, [X21]
	094 Move X8, [X8+184]
	095 Move X8, [X8+16]
	096 Compare X8, 0
	097 JumpIfEqual {164}
	098 Move X0, [X8+24]
	099 Compare X0, 0
	100 JumpIfEqual {164}
	101 Move X8, [X0]
	102 Move X9, [X8+456]
	103 Move X1, [X8+464]
	104 NotImplemented "Instruction BLR not yet implemented."
	105 Move X8, [X21]
	106 Move X8, [X8+184]
	107 Move X8, [X8+16]
	108 Compare X8, 0
	109 JumpIfEqual {164}
	110 Move X19, [X8+24]
	111 Move X0, X31
	112 Call Screen.get_height
	113 Move X8, [X22+2152]
	114 Move W20, W0
	115 Compare X8, 0
	116 JumpIfNotEqual {122}
	117 Move X0, -51662848
	118 Add X0, X0, 138
	119 Call 0x1C17CB8
	120 Move X8, X0
	121 Move [X22+2152], X0
	122 NotImplemented "Instruction BLR not yet implemented."
	123 Compare X19, 0
	124 JumpIfEqual {164}
	125 Move X8, [X19]
	126 NotImplemented "Instruction SCVTF not yet implemented."
	127 NotImplemented "Instruction FDIV not yet implemented."
	128 Move S0, W31
	129 Move X9, [X8+488]
	130 Move X1, [X8+496]
	131 Move X0, X19
	132 NotImplemented "Instruction BLR not yet implemented."
	133 Move X8, [X21]
	134 Move X8, [X8+184]
	135 Move X8, [X8+16]
	136 Compare X8, 0
	137 JumpIfEqual {164}
	138 Move X0, [X8+40]
	139 Move X20, [X31+32]
	140 Move X19, [X31+40]
	141 Move X22, [X31+16]
	142 Move X21, [X31+24]
	143 Move X30, [X31+48]
	144 Call GUILayoutUtility.LayoutFreeGroup, X0
	145 Return 
	146 Move X8, 0x483000
	147 Move X8, [X8+2600]
	148 Move X0, [X8]
	149 Move W8, [X0+224]
	150 Compare W8, 0
	151 JumpIfNotEqual {153}
	152 Call 0x1C17DFC
	153 Move X8, 0x4F0000
	154 Move X8, [X8+880]
	155 Move X20, [X31+32]
	156 Move X19, [X31+40]
	157 Move X22, [X31+16]
	158 Move X21, [X31+24]
	159 Move X1, X31
	160 Move X0, [X8]
	161 Move X30, [X31+48]
	162 Call Debug.LogError, X0
	163 Return 
	164 Call 0x1C17F20

Method: System.Void LayoutFromContainer(System.Single w, System.Single h)

Disassembly:
	0x03C7133C MOV X0, X20
	0x03C71340 BL 0x1C16F18
	0x03C71344 B 0x3C71350
	0x03C71348 B 0x3C71350
	0x03C7134C B 0x3C71350
	0x03C71350 CMP W1, 0x1
	0x03C71354 B.NE 0x3C71368
	0x03C71358 BL 0x3EB1AD0
	0x03C7135C LDR X20, [X0]
	0x03C71360 BL 0x3EB1AE0
	0x03C71364 B 0x3C712AC
	0x03C71368 STR X0, [X31 + 0x8]
	0x03C7136C MOV X20, X31
	0x03C71370 B 0x3C71378
	0x03C71374 STR X0, [X31 + 0x8]
	0x03C71378 LDR X1, [X21]
	0x03C7137C MOV X0, X19
	0x03C71380 BL 0x1C16E00
	0x03C71384 MOV X19, X0
	0x03C71388 CBZ X0, 0x3C713E4
	0x03C7138C LDR X8, [X19]
	0x03C71390 LDR X1, [X21]
	0x03C71394 LDRH W9, [X8 + 0x12E]
	0x03C71398 CBZ X9, 0x3C713BC
	0x03C7139C LDR X10, [X8 + 0xB0]
	0x03C713A0 ADD X10, X10, 0x8
	0x03C713A4 LDUR X11, [X10 - 0x8]
	0x03C713A8 CMP X11, X1
	0x03C713AC B.EQ 0x3C713CC
	0x03C713B0 SUBS X9, X9, 0x1
	0x03C713B4 ADD X10, X10, 0x10
	0x03C713B8 B.NE 0x3C713A4
	0x03C713BC MOV X0, X19
	0x03C713C0 MOV W2, W31
	0x03C713C4 BL 0x1C5C788
	0x03C713C8 B 0x3C713D8
	0x03C713CC LDRSW X9, [X10]
	0x03C713D0 ADD X8, X8, X9, 0x4, LSL
	0x03C713D4 ADD X0, X8, 0x138
	0x03C713D8 LDP X8, X1, [X0]
	0x03C713DC MOV X0, X19
	0x03C713E0 BLR X8
	0x03C713E4 CBNZ X20, 0x3C713F0
	0x03C713E8 LDR X0, [X31 + 0x8]
	0x03C713EC BL 0x1D2C690
	0x03C713F0 MOV X0, X20
	0x03C713F4 BL 0x1C16F18
	0x03C713F8 BL 0x1990590
	0x03C713FC STP X30, X19, [X31 - 0x10]!
	0x03C71400 ADRP X19, 0x775000
	0x03C71404 LDR X0, [X19 + 0x6C8]
	0x03C71408 CBNZ X0, 0x3C7141C
	0x03C7140C ADRP X0, 0xFFFFFFFFFCEB9000
	0x03C71410 ADD X0, X0, 0xF4E
	0x03C71414 BL 0x1C16CB8
	0x03C71418 STR X0, [X19 + 0x6C8]
	0x03C7141C LDP X30, X19, [X31], #0x10
	0x03C71420 BR X0
	0x03C71424 LDP S0, S1, [X0 + 0x14]
	0x03C71428 LDP S2, S3, [X0 + 0x1C]
	0x03C7142C RET
	0x03C71430 STP X30, X19, [X31 - 0x10]!
	0x03C71434 LDR V0, [X0 + 0x24]
	0x03C71438 FCMP S0, 0x0
	0x03C7143C B.GE 0x3C71464
	0x03C71440 ADRP X19, 0x775000
	0x03C71444 LDR X0, [X19 + 0x6C8]
	0x03C71448 CBNZ X0, 0x3C7145C
	0x03C7144C ADRP X0, 0xFFFFFFFFFCEB9000
	0x03C71450 ADD X0, X0, 0xF4E
	0x03C71454 BL 0x1C16CB8
	0x03C71458 STR X0, [X19 + 0x6C8]
	0x03C7145C LDP X30, X19, [X31], #0x10
	0x03C71460 BR X0
	0x03C71464 LDP X30, X19, [X31], #0x10
	0x03C71468 RET
	0x03C7146C LDP S0, S1, [X0 + 0x28]
	0x03C71470 LDP S2, S3, [X0 + 0x30]
	0x03C71474 RET
	0x03C71478 ADRP X9, 0xFFFFFFFFFCE7A000
	0x03C7147C LDR V1, [X9 + 0x28]
	0x03C71480 MOVZ W8, 0x101
	0x03C71484 FMOV V0.4S, 0x0
	0x03C71488 MOVZ W9, 0x3F800000
	0x03C7148C MOV X1, X31
	0x03C71490 STRH W8, [X0 + 0x10]
	0x03C71494 STUR V0, [X0 + 0x14]
	0x03C71498 STUR V1, [X0 + 0x24]
	0x03C7149C STR W9, [X0 + 0x34]
	0x03C714A0 B 0x33BDD8C
	0x03C714A4 STR X30, [X31 - 0x30]!
	0x03C714A8 STP X22, X21, [X31 + 0x10]
	0x03C714AC STP X20, X19, [X31 + 0x20]
	0x03C714B0 ADRP X20, 0x775000
	0x03C714B4 ADRP X22, 0x4EF000
	0x03C714B8 ADRP X21, 0x4EF000
	0x03C714BC LDRB W8, [X20 + 0x6D0]
	0x03C714C0 LDR X22, [X22 + 0x3E8]

ISIL:
	001 Move [X31-48], D9
	002 Move [X31-40], D8
	003 Move [X31+16], X30
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x776000
	007 Move X19, 0x4F0000
	008 Move W8, [X20+1695]
	009 Move X19, [X19+688]
	010 Move V8, V1
	011 Move V9, V0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {27}
	016 Move X0, 0x483000
	017 Move X0, [X0+2600]
	018 Call 0x1C17CF4
	019 Move X0, 0x4F0000
	020 Move X0, [X0+688]
	021 Call 0x1C17CF4
	022 Move X0, 0x4F0000
	023 Move X0, [X0+880]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X20+1695], W8
	027 Move X0, [X19]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {33}
	031 Call 0x1C17DFC
	032 Move X0, [X19]
	033 Move X8, [X0+184]
	034 Move X8, [X8+16]
	035 Compare X8, 0
	036 JumpIfEqual {127}
	037 Move X9, [X8+24]
	038 Compare X9, 0
	039 JumpIfEqual {109}
	040 Move W9, [X0+224]
	041 Compare W9, 0
	042 JumpIfNotEqual {49}
	043 Call 0x1C17DFC
	044 Move X8, [X19]
	045 Move X8, [X8+184]
	046 Move X8, [X8+16]
	047 Compare X8, 0
	048 JumpIfEqual {127}
	049 Move X0, [X8+24]
	050 Compare X0, 0
	051 JumpIfEqual {127}
	052 Move X8, [X0]
	053 Move X9, [X8+440]
	054 Move X1, [X8+448]
	055 NotImplemented "Instruction BLR not yet implemented."
	056 Move X8, [X19]
	057 Move X8, [X8+184]
	058 Move X8, [X8+16]
	059 Compare X8, 0
	060 JumpIfEqual {127}
	061 Move X0, [X8+24]
	062 Compare X0, 0
	063 JumpIfEqual {127}
	064 Move X8, [X0]
	065 Move S0, W31
	066 Move V1, V9
	067 Move X9, [X8+472]
	068 Move X1, [X8+480]
	069 NotImplemented "Instruction BLR not yet implemented."
	070 Move X8, [X19]
	071 Move X8, [X8+184]
	072 Move X8, [X8+16]
	073 Compare X8, 0
	074 JumpIfEqual {127}
	075 Move X0, [X8+24]
	076 Compare X0, 0
	077 JumpIfEqual {127}
	078 Move X8, [X0]
	079 Move X9, [X8+456]
	080 Move X1, [X8+464]
	081 NotImplemented "Instruction BLR not yet implemented."
	082 Move X8, [X19]
	083 Move X8, [X8+184]
	084 Move X8, [X8+16]
	085 Compare X8, 0
	086 JumpIfEqual {127}
	087 Move X0, [X8+24]
	088 Compare X0, 0
	089 JumpIfEqual {127}
	090 Move X8, [X0]
	091 Move S0, W31
	092 Move V1, V8
	093 Move X9, [X8+488]
	094 Move X1, [X8+496]
	095 NotImplemented "Instruction BLR not yet implemented."
	096 Move X8, [X19]
	097 Move X8, [X8+184]
	098 Move X8, [X8+16]
	099 Compare X8, 0
	100 JumpIfEqual {127}
	101 Move X0, [X8+40]
	102 Move X20, [X31+32]
	103 Move X19, [X31+40]
	104 Move X30, [X31+16]
	105 Move D9, [X31+48]
	106 Move D8, [X31+56]
	107 Call GUILayoutUtility.LayoutFreeGroup, X0
	108 Return 
	109 Move X8, 0x483000
	110 Move X8, [X8+2600]
	111 Move X0, [X8]
	112 Move W8, [X0+224]
	113 Compare W8, 0
	114 JumpIfNotEqual {116}
	115 Call 0x1C17DFC
	116 Move X8, 0x4F0000
	117 Move X8, [X8+880]
	118 Move X20, [X31+32]
	119 Move X19, [X31+40]
	120 Move X30, [X31+16]
	121 Move X1, X31
	122 Move X0, [X8]
	123 Move D9, [X31+48]
	124 Move D8, [X31+56]
	125 Call Debug.LogError, X0
	126 Return 
	127 Call 0x1C17F20

Method: System.Void LayoutFreeGroup(UnityEngine.GUILayoutGroup toplevel)

Disassembly:
	0x03C70DF8 MOV X8, X0
	0x03C70DFC STR X0, [X20 + 0x750]
	0x03C70E00 MOV X0, X19
	0x03C70E04 BLR X8
	0x03C70E08 FCMP S0, 0x0
	0x03C70E0C B.NE 0x3C70E70
	0x03C70E10 ADRP X20, 0x776000
	0x03C70E14 LDR X8, [X20 + 0x740]
	0x03C70E18 CBNZ X8, 0x3C70E30
	0x03C70E1C ADRP X0, 0xFFFFFFFFFCEB5000
	0x03C70E20 ADD X0, X0, 0x485
	0x03C70E24 BL 0x1C16CB8
	0x03C70E28 MOV X8, X0
	0x03C70E2C STR X0, [X20 + 0x740]
	0x03C70E30 MOV X0, X19
	0x03C70E34 BLR X8
	0x03C70E38 TBZ X0, 0x0, 0x3C70E70
	0x03C70E3C ADRP X20, 0x776000
	0x03C70E40 LDR X8, [X20 + 0x730]
	0x03C70E44 CBNZ X8, 0x3C70E5C
	0x03C70E48 ADRP X0, 0xFFFFFFFFFCE8B000
	0x03C70E4C ADD X0, X0, 0x8B7
	0x03C70E50 BL 0x1C16CB8
	0x03C70E54 MOV X8, X0
	0x03C70E58 STR X0, [X20 + 0x730]
	0x03C70E5C MOV X0, X19
	0x03C70E60 BLR X8
	0x03C70E64 CMP W0, 0x2
	0x03C70E68 CSET W0, NE
	0x03C70E6C B 0x3C70E74
	0x03C70E70 MOV W0, W31
	0x03C70E74 LDP X20, X19, [X31 + 0x10]
	0x03C70E78 LDR X30, [X31], #0x20
	0x03C70E7C RET
	0x03C70E80 STR X30, [X31 - 0x40]!
	0x03C70E84 STP X24, X23, [X31 + 0x10]
	0x03C70E88 STP X22, X21, [X31 + 0x20]
	0x03C70E8C STP X20, X19, [X31 + 0x30]
	0x03C70E90 ADRP X24, 0x776000
	0x03C70E94 ADRP X23, 0x4F0000
	0x03C70E98 LDRB W8, [X24 + 0x977]
	0x03C70E9C LDR X23, [X23 + 0x348]
	0x03C70EA0 MOV X20, X3
	0x03C70EA4 MOV X21, X2
	0x03C70EA8 MOV X22, X1
	0x03C70EAC MOV X19, X0
	0x03C70EB0 TBNZ X8, 0x0, 0x3C70ED4
	0x03C70EB4 ADRP X0, 0x4AE000
	0x03C70EB8 LDR X0, [X0 + 0xBD0]
	0x03C70EBC BL 0x1C16CF4
	0x03C70EC0 ADRP X0, 0x4F0000
	0x03C70EC4 LDR X0, [X0 + 0x348]
	0x03C70EC8 BL 0x1C16CF4
	0x03C70ECC MOVZ W8, 0x1
	0x03C70ED0 STRB W8, [X24 + 0x977]
	0x03C70ED4 LDR X0, [X23]
	0x03C70ED8 ADRP X23, 0x4AE000
	0x03C70EDC LDR W8, [X0 + 0xE0]
	0x03C70EE0 LDR X23, [X23 + 0xBD0]
	0x03C70EE4 CBNZ W8, 0x3C70EEC
	0x03C70EE8 BL 0x1C16DFC
	0x03C70EEC FMOV S0, W31
	0x03C70EF0 FMOV S1, W31
	0x03C70EF4 FMOV S2, W31
	0x03C70EF8 FMOV S3, W31
	0x03C70EFC MOV X0, X19
	0x03C70F00 MOV X1, X22
	0x03C70F04 BL 0x3C76BBC
	0x03C70F08 LDR X0, [X23]
	0x03C70F0C BL 0x1C16F10
	0x03C70F10 MOV X1, X21
	0x03C70F14 MOV X22, X0
	0x03C70F18 BL 0x3C6CF4C
	0x03C70F1C LDR X8, [X19]
	0x03C70F20 STR X22, [X19 + 0x48]
	0x03C70F24 MOV X0, X19
	0x03C70F28 MOV X1, X20
	0x03C70F2C LDR X9, [X8 + 0x208]
	0x03C70F30 LDR X2, [X8 + 0x210]
	0x03C70F34 BLR X9
	0x03C70F38 LDR V0, [X19 + 0x18]
	0x03C70F3C LDP X22, X21, [X31 + 0x20]
	0x03C70F40 LDP X24, X23, [X31 + 0x10]
	0x03C70F44 STR D0, [X19 + 0x50]
	0x03C70F48 LDP X20, X19, [X31 + 0x30]
	0x03C70F4C LDR X30, [X31], #0x40
	0x03C70F50 RET
	0x03C70F54 B 0x3C74138
	0x03C70F58 STP D11, D10, [X31 - 0x50]!
	0x03C70F5C STP D9, D8, [X31 + 0x10]
	0x03C70F60 STP X30, X23, [X31 + 0x20]
	0x03C70F64 STP X22, X21, [X31 + 0x30]
	0x03C70F68 STP X20, X19, [X31 + 0x40]
	0x03C70F6C ADRP X23, 0x776000
	0x03C70F70 ADRP X22, 0x4AA000
	0x03C70F74 LDRB W8, [X23 + 0x973]
	0x03C70F78 LDR X22, [X22 + 0x890]
	0x03C70F7C MOV X19, X2
	0x03C70F80 MOV X21, X1
	0x03C70F84 MOV V8.16B, V3.16B
	0x03C70F88 MOV V9.16B, V2.16B
	0x03C70F8C MOV V10.16B, V1.16B
	0x03C70F90 MOV V11.16B, V0.16B
	0x03C70F94 MOV X20, X0
	0x03C70F98 TBNZ X8, 0x0, 0x3C70FB0
	0x03C70F9C ADRP X0, 0x4AA000
	0x03C70FA0 LDR X0, [X0 + 0x890]
	0x03C70FA4 BL 0x1C16CF4
	0x03C70FA8 MOVZ W8, 0x1
	0x03C70FAC STRB W8, [X23 + 0x973]
	0x03C70FB0 MOVZ W8, 0x1

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+32], X30
	003 Move [X31+48], X24
	004 Move [X31+56], X23
	005 Move [X31+64], X22
	006 Move [X31+72], X21
	007 Move [X31+80], X20
	008 Move [X31+88], X19
	009 Move X20, 0x777000
	010 Move W8, [X20+1696]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {36}
	016 Move X0, 0x4F1000
	017 Move X0, [X0+848]
	018 Call 0x1C17CF4
	019 Move X0, 0x4F1000
	020 Move X0, [X0+856]
	021 Call 0x1C17CF4
	022 Move X0, 0x4F1000
	023 Move X0, [X0+864]
	024 Call 0x1C17CF4
	025 Move X0, 0x4F1000
	026 Move X0, [X0+720]
	027 Call 0x1C17CF4
	028 Move X0, 0x4F1000
	029 Move X0, [X0+688]
	030 Call 0x1C17CF4
	031 Move X0, 0x4F1000
	032 Move X0, [X0+872]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X20+1696], W8
	036 Move [X31+8], X31
	037 Move [X31+16], X31
	038 Move [X31+24], X31
	039 Compare X19, 0
	040 JumpIfEqual {98}
	041 Move X0, [X19+72]
	042 Compare X0, 0
	043 JumpIfEqual {98}
	044 Move X8, 0x4F1000
	045 Move X8, [X8+872]
	046 Move X21, 0x4F1000
	047 Move X21, [X21+856]
	048 Move X23, 0x4F1000
	049 Move X1, [X8]
	050 Move X24, 0x4F1000
	051 Move X22, 0x4F1000
	052 Move X23, [X23+720]
	053 Move X24, [X24+688]
	054 Move X22, [X22+848]
	055 Add X8, X31, 8
	056 Call List`1<Object>.GetEnumerator, X0
	057 Move X1, [X21]
	058 Add X0, X31, 8
	059 Call Enumerator<Object>.MoveNext, X0
	060 Move TEMP, X0
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfNotEqual {83}
	064 Move X20, [X31+24]
	065 Compare X20, 0
	066 JumpIfEqual {76}
	067 Move X8, [X20]
	068 Move X1, [X23]
	069 Move W10, [X8+304]
	070 Move W9, [X1+304]
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move X8, [X8+200]
	073 Add X8, X8, X9
	074 NotImplemented "Instruction LDUR not yet implemented."
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Move X0, [X24]
	077 Move W8, [X0+224]
	078 Compare W8, 0
	079 JumpIfNotEqual {81}
	080 Call 0x1C17DFC
	081 Move X0, X20
	082 Call GUILayoutUtility.LayoutSingleGroup, X0
	083 Move X1, [X22]
	084 Add X0, X31, 8
	085 Call Enumerator<Object>.Dispose, X0
	086 Move [X19+96], W31
	087 Move X20, [X31+80]
	088 Move X19, [X31+88]
	089 Move X22, [X31+64]
	090 Move X21, [X31+72]
	091 Move X24, [X31+48]
	092 Move X23, [X31+56]
	093 Move X30, [X31+32]
	094 Add X31, X31, 96
	095 Return 
	096 Move X0, X20
	097 Call 0x1C181E0
	098 Call 0x1C17F20
	099 Move X20, X0
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Move X0, X20
	102 Call 0x3EB2AD0
	103 Move X21, [X0]
	104 Call 0x3EB2AE0
	105 Move X1, [X22]
	106 Add X0, X31, 8
	107 Call Enumerator<Object>.Dispose, X0
	108 Compare X21, 0
	109 JumpIfEqual {86}
	110 Move X0, X21
	111 Call 0x1C17F18
	112 Move X21, X31
	113 Move X20, X0
	114 Move X1, [X22]
	115 Add X0, X31, 8
	116 Call Enumerator<Object>.Dispose, X0
	117 Compare X21, 0
	118 JumpIfNotEqual {121}
	119 Move X0, X20
	120 Call 0x1D2D690
	121 Move X0, X21
	122 Call 0x1C17F18
	123 Call 0x1991590

Method: System.Void LayoutSingleGroup(UnityEngine.GUILayoutGroup i)

Disassembly:
	0x03C70FB4 STP X31, X31, [X20 + 0x20]
	0x03C70FB8 STRB W8, [X20 + 0x38]
	0x03C70FBC LDR X0, [X22]
	0x03C70FC0 LDR W8, [X0 + 0xE0]
	0x03C70FC4 CBNZ W8, 0x3C70FCC
	0x03C70FC8 BL 0x1C16DFC
	0x03C70FCC BL 0x3C6BB04
	0x03C70FD0 STR X0, [X20 + 0x40]
	0x03C70FD4 MOV X0, X20
	0x03C70FD8 MOV X1, X31
	0x03C70FDC BL 0x33BDD8C
	0x03C70FE0 LDR X8, [X20]
	0x03C70FE4 STP S11, S10, [X20 + 0x10]
	0x03C70FE8 STP S9, S8, [X20 + 0x18]
	0x03C70FEC STR X21, [X20 + 0x40]
	0x03C70FF0 LDP X9, X2, [X8 + 0x1F8]
	0x03C70FF4 MOV X0, X20
	0x03C70FF8 MOV X1, X21
	0x03C70FFC BLR X9
	0x03C71000 LDR X8, [X20]
	0x03C71004 MOV X0, X20
	0x03C71008 MOV X1, X19
	0x03C7100C LDP X20, X19, [X31 + 0x40]
	0x03C71010 LDR X3, [X8 + 0x208]
	0x03C71014 LDR X2, [X8 + 0x210]
	0x03C71018 LDP X22, X21, [X31 + 0x30]
	0x03C7101C LDP X30, X23, [X31 + 0x20]
	0x03C71020 LDP D9, D8, [X31 + 0x10]
	0x03C71024 LDP D11, D10, [X31], #0x50
	0x03C71028 BR X3
	0x03C7102C STP X30, X23, [X31 - 0x30]!
	0x03C71030 STP X22, X21, [X31 + 0x10]
	0x03C71034 STP X20, X19, [X31 + 0x20]
	0x03C71038 ADRP X19, 0x775000
	0x03C7103C ADRP X23, 0x4EF000
	0x03C71040 ADRP X22, 0x4EF000
	0x03C71044 ADRP X20, 0x4EF000
	0x03C71048 ADRP X21, 0x4EF000
	0x03C7104C LDRB W8, [X19 + 0x6A9]
	0x03C71050 LDR X23, [X23 + 0x3D8]
	0x03C71054 LDR X22, [X22 + 0x3E0]
	0x03C71058 LDR X20, [X20 + 0x2B0]
	0x03C7105C LDR X21, [X21 + 0x2C0]
	0x03C71060 TBNZ X8, 0x0, 0x3C7109C
	0x03C71064 ADRP X0, 0x4EF000
	0x03C71068 LDR X0, [X0 + 0x3E0]
	0x03C7106C BL 0x1C16CF4
	0x03C71070 ADRP X0, 0x4EF000
	0x03C71074 LDR X0, [X0 + 0x3D8]
	0x03C71078 BL 0x1C16CF4
	0x03C7107C ADRP X0, 0x4EF000
	0x03C71080 LDR X0, [X0 + 0x2B0]
	0x03C71084 BL 0x1C16CF4
	0x03C71088 ADRP X0, 0x4EF000
	0x03C7108C LDR X0, [X0 + 0x2C0]
	0x03C71090 BL 0x1C16CF4
	0x03C71094 MOVZ W8, 0x1
	0x03C71098 STRB W8, [X19 + 0x6A9]
	0x03C7109C LDR X0, [X23]
	0x03C710A0 BL 0x1C16F10
	0x03C710A4 LDR X1, [X22]
	0x03C710A8 MOV X19, X0
	0x03C710AC BL 0x2A12DD4
	0x03C710B0 LDR X8, [X20]
	0x03C710B4 LDR X8, [X8 + 0xB8]
	0x03C710B8 STR X19, [X8]
	0x03C710BC LDR X0, [X23]
	0x03C710C0 BL 0x1C16F10
	0x03C710C4 LDR X1, [X22]
	0x03C710C8 MOV X19, X0
	0x03C710CC BL 0x2A12DD4
	0x03C710D0 LDR X8, [X20]
	0x03C710D4 LDR X8, [X8 + 0xB8]
	0x03C710D8 STR X19, [X8 + 0x8]
	0x03C710DC LDR X0, [X21]
	0x03C710E0 BL 0x1C16F10
	0x03C710E4 MOVN W1, 0x0
	0x03C710E8 MOV X19, X0
	0x03C710EC BL 0x3C6F7FC
	0x03C710F0 LDR X8, [X20]
	0x03C710F4 ADRP X9, 0xFFFFFFFFFCE79000
	0x03C710F8 LDR V0, [X9 + 0xBC]
	0x03C710FC LDP X22, X21, [X31 + 0x10]
	0x03C71100 LDR X8, [X8 + 0xB8]
	0x03C71104 STR X19, [X8 + 0x10]
	0x03C71108 LDP X20, X19, [X31 + 0x20]
	0x03C7110C STUR V0, [X8 + 0x18]
	0x03C71110 LDP X30, X23, [X31], #0x30
	0x03C71114 RET
	0x03C71118 STR W1, [X0 + 0x10]
	0x03C7111C RET
	0x03C71120 STR X30, [X31 - 0x30]!
	0x03C71124 STP X22, X21, [X31 + 0x10]
	0x03C71128 STP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-48], D9
	002 Move [X31-40], D8
	003 Move [X31+16], X30
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x777000
	007 Move W8, [X20+1697]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x4F1000
	014 Move X0, [X0+688]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X20+1697], W8
	018 Compare X19, 0
	019 JumpIfEqual {121}
	020 Move W8, [X19+89]
	021 Compare W8, 0
	022 JumpIfEqual {80}
	023 Move X8, [X19]
	024 Move X20, 0x4F1000
	025 Move X0, X19
	026 Move X9, [X8+440]
	027 Move X1, [X8+448]
	028 Move X20, [X20+688]
	029 NotImplemented "Instruction BLR not yet implemented."
	030 Move X0, [X20]
	031 Move W20, [X19+92]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1C17DFC
	036 Move W0, W20
	037 Call GUILayoutUtility.Internal_GetWindowRect, X0
	038 Move X8, [X19]
	039 Move V8, V1
	040 Move V9, V3
	041 Move S3, [X19+16]
	042 Move S1, [X19+20]
	043 Move X9, [X8+472]
	044 Move X1, [X8+480]
	045 Move X0, X19
	046 NotImplemented "Instruction FCMP not yet implemented."
	047 NotImplemented "Instruction FCSEL not yet implemented."
	048 NotImplemented "Instruction FCMP not yet implemented."
	049 NotImplemented "Instruction FCSEL not yet implemented."
	050 NotImplemented "Instruction BLR not yet implemented."
	051 Move X8, [X19]
	052 Move X0, X19
	053 Move X9, [X8+456]
	054 Move X1, [X8+464]
	055 NotImplemented "Instruction BLR not yet implemented."
	056 Move X8, [X19]
	057 Move S1, [X19+24]
	058 Move S0, [X19+28]
	059 Move X0, X19
	060 Move X9, [X8+488]
	061 Move X1, [X8+496]
	062 NotImplemented "Instruction FCMP not yet implemented."
	063 NotImplemented "Instruction FCSEL not yet implemented."
	064 NotImplemented "Instruction FCMP not yet implemented."
	065 NotImplemented "Instruction FCSEL not yet implemented."
	066 Move V0, V8
	067 NotImplemented "Instruction BLR not yet implemented."
	068 Move W0, [X19+92]
	069 Move S0, [X19+32]
	070 Move S1, [X19+36]
	071 Move S2, [X19+40]
	072 Move S3, [X19+44]
	073 Move X20, [X31+32]
	074 Move X19, [X31+40]
	075 Move X30, [X31+16]
	076 Move D9, [X31+48]
	077 Move D8, [X31+56]
	078 Call GUILayoutUtility.Internal_MoveWindow, X0, X1
	079 Return 
	080 Move X8, [X19]
	081 Move S8, [X19+16]
	082 Move S9, [X19+20]
	083 Move X0, X19
	084 Move X9, [X8+440]
	085 Move X1, [X8+448]
	086 NotImplemented "Instruction BLR not yet implemented."
	087 Move X8, [X19]
	088 Move V1, [X19+20]
	089 Move V0, [X19+32]
	090 Move X0, X19
	091 Move X9, [X8+472]
	092 Move X1, [X8+480]
	093 NotImplemented "Instruction FCMP not yet implemented."
	094 NotImplemented "Instruction FCSEL not yet implemented."
	095 NotImplemented "Instruction FCMP not yet implemented."
	096 NotImplemented "Instruction FCSEL not yet implemented."
	097 NotImplemented "Instruction BLR not yet implemented."
	098 Move X8, [X19]
	099 Move S8, [X19+24]
	100 Move S9, [X19+28]
	101 Move X0, X19
	102 Move X9, [X8+456]
	103 Move X1, [X8+464]
	104 NotImplemented "Instruction BLR not yet implemented."
	105 Move X8, [X19]
	106 Move V1, [X19+28]
	107 Move V0, [X19+36]
	108 Move X0, X19
	109 Move X2, [X8+488]
	110 Move X1, [X8+496]
	111 Move X20, [X31+32]
	112 Move X19, [X31+40]
	113 Move X30, [X31+16]
	114 NotImplemented "Instruction FCMP not yet implemented."
	115 NotImplemented "Instruction FCSEL not yet implemented."
	116 NotImplemented "Instruction FCMP not yet implemented."
	117 NotImplemented "Instruction FCSEL not yet implemented."
	118 Move D9, [X31+48]
	119 Move D8, [X31+56]
	120 CallNoReturn X2
	121 Call 0x1C17F20

Method: UnityEngine.GUILayoutGroup CreateGUILayoutGroupInstanceOfType(System.Type LayoutType)

Disassembly:
	0x03C714C4 LDR X21, [X21 + 0x3F0]
	0x03C714C8 MOV X19, X0
	0x03C714CC TBNZ X8, 0x0, 0x3C714F0
	0x03C714D0 ADRP X0, 0x4EF000
	0x03C714D4 LDR X0, [X0 + 0x3E8]
	0x03C714D8 BL 0x1C16CF4
	0x03C714DC ADRP X0, 0x4EF000
	0x03C714E0 LDR X0, [X0 + 0x3F0]
	0x03C714E4 BL 0x1C16CF4
	0x03C714E8 MOVZ W8, 0x1
	0x03C714EC STRB W8, [X20 + 0x6D0]
	0x03C714F0 LDR X0, [X22]
	0x03C714F4 BL 0x1C16F10
	0x03C714F8 ADRP X9, 0xFFFFFFFFFCE7A000
	0x03C714FC LDR V1, [X9 + 0x28]
	0x03C71500 MOVZ W8, 0x101
	0x03C71504 FMOV V0.4S, 0x0
	0x03C71508 MOVZ W9, 0x3F800000
	0x03C7150C MOV X1, X31
	0x03C71510 MOV X20, X0
	0x03C71514 STRH W8, [X0 + 0x10]
	0x03C71518 STUR V0, [X0 + 0x14]
	0x03C7151C STUR V1, [X0 + 0x24]
	0x03C71520 STR W9, [X0 + 0x34]
	0x03C71524 BL 0x33BDD8C
	0x03C71528 MOV X0, X19
	0x03C7152C MOV X1, X31
	0x03C71530 STP X20, X31, [X19 + 0xE0]
	0x03C71534 BL 0x3C36D2C
	0x03C71538 LDR X0, [X21]
	0x03C7153C MOVZ W1, 0x1
	0x03C71540 BL 0x1C16D6C
	0x03C71544 STR X0, [X19 + 0xD8]
	0x03C71548 LDP X20, X19, [X31 + 0x20]
	0x03C7154C LDP X22, X21, [X31 + 0x10]
	0x03C71550 LDR X30, [X31], #0x30
	0x03C71554 RET
	0x03C71558 B 0x3C7155C
	0x03C7155C STR X30, [X31 - 0x20]!
	0x03C71560 STP X20, X19, [X31 + 0x10]
	0x03C71564 ADRP X20, 0x775000
	0x03C71568 LDRB W8, [X20 + 0x6D4]
	0x03C7156C MOV X19, X0
	0x03C71570 TBNZ X8, 0x0, 0x3C71594
	0x03C71574 ADRP X0, 0x482000
	0x03C71578 LDR X0, [X0 + 0xA28]
	0x03C7157C BL 0x1C16CF4
	0x03C71580 ADRP X0, 0x4EF000
	0x03C71584 LDR X0, [X0 + 0x3F8]
	0x03C71588 BL 0x1C16CF4
	0x03C7158C MOVZ W8, 0x1
	0x03C71590 STRB W8, [X20 + 0x6D4]
	0x03C71594 LDR X8, [X19 + 0xD8]
	0x03C71598 CBNZ X8, 0x3C715C8
	0x03C7159C ADRP X8, 0x482000
	0x03C715A0 LDR X8, [X8 + 0xA28]
	0x03C715A4 LDR X0, [X8]
	0x03C715A8 LDR W8, [X0 + 0xE0]
	0x03C715AC CBNZ W8, 0x3C715B4
	0x03C715B0 BL 0x1C16DFC
	0x03C715B4 ADRP X8, 0x4EF000
	0x03C715B8 LDR X8, [X8 + 0x3F8]
	0x03C715BC MOV X1, X31
	0x03C715C0 LDR X0, [X8]
	0x03C715C4 BL 0x3C06048
	0x03C715C8 MOV X0, X19
	0x03C715CC LDP X20, X19, [X31 + 0x10]
	0x03C715D0 LDR X30, [X31], #0x20
	0x03C715D4 B 0x3C71A44
	0x03C715D8 STR X30, [X31 - 0x20]!
	0x03C715DC STP X20, X19, [X31 + 0x10]
	0x03C715E0 ADRP X19, 0x775000
	0x03C715E4 ADRP X20, 0x4EF000
	0x03C715E8 LDRB W8, [X19 + 0x6D1]
	0x03C715EC LDR X20, [X20 + 0x288]
	0x03C715F0 TBNZ X8, 0x0, 0x3C71608
	0x03C715F4 ADRP X0, 0x4EF000
	0x03C715F8 LDR X0, [X0 + 0x288]
	0x03C715FC BL 0x1C16CF4
	0x03C71600 MOVZ W8, 0x1
	0x03C71604 STRB W8, [X19 + 0x6D1]
	0x03C71608 LDR X8, [X20]
	0x03C7160C LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x776000
	007 Move X20, 0x4F0000
	008 Move X21, 0x483000
	009 Move W8, [X22+1698]
	010 Move X20, [X20+736]
	011 Move X21, [X21+1728]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {28}
	017 Move X0, 0x4F0000
	018 Move X0, [X0+736]
	019 Call 0x1C17CF4
	020 Move X0, 0x4F0000
	021 Move X0, [X0+720]
	022 Call 0x1C17CF4
	023 Move X0, 0x483000
	024 Move X0, [X0+1728]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X22+1698], W8
	028 Move X0, [X21]
	029 Move X20, [X20]
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move X0, X20
	035 Move X1, X31
	036 Call Type.GetTypeFromHandle, X0
	037 Compare X0, 0
	038 JumpIfEqual {71}
	039 Move X8, [X0]
	040 Move X1, X19
	041 Move X9, [X8+680]
	042 Move X2, [X8+688]
	043 NotImplemented "Instruction BLR not yet implemented."
	044 Move TEMP, X0
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfNotEqual {72}
	048 Move X0, X19
	049 Move X1, X31
	050 Call Activator.CreateInstance, X0
	051 Compare X0, 0
	052 JumpIfEqual {64}
	053 Move X9, 0x4F0000
	054 Move X9, [X9+720]
	055 Move X8, [X0]
	056 Move X1, [X9]
	057 Move W10, [X8+304]
	058 Move W9, [X1+304]
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move X8, [X8+200]
	061 Add X8, X8, X9
	062 NotImplemented "Instruction LDUR not yet implemented."
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move X20, [X31+32]
	065 Move X19, [X31+40]
	066 Move X22, [X31+16]
	067 Move X21, [X31+24]
	068 Move X30, [X31+48]
	069 Return X0
	070 Call 0x1C181E0
	071 Call 0x1C17F20
	072 Move X0, 0x48B000
	073 Move X0, [X0+1400]
	074 Call 0x1C17D08
	075 Call 0x1C17F10
	076 Move X19, X0
	077 Move X0, 0x4F0000
	078 Move X0, [X0+888]
	079 Call 0x1C17D08
	080 Move X20, X0
	081 Move X0, 0x4F0000
	082 Move X0, [X0+896]
	083 Call 0x1C17D08
	084 Move X2, X0
	085 Move X0, X19
	086 Move X1, X20
	087 Move X3, X31
	088 Call ArgumentException..ctor, X0, X1, X2
	089 Move X0, 0x4F0000
	090 Move X0, [X0+904]
	091 Call 0x1C17D08
	092 Move X1, X0
	093 Move X0, X19
	094 Call 0x1C17DEC

Method: UnityEngine.GUILayoutGroup BeginLayoutGroup(UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options, System.Type layoutType)

Disassembly:
	0x03C6EF6C LDR X9, [X8 + 0x258]
	0x03C6EF70 LDR X1, [X8 + 0x260]
	0x03C6EF74 BLR X9
	0x03C6EF78 LDR X8, [X19]
	0x03C6EF7C LDR X8, [X8 + 0xB8]
	0x03C6EF80 LDR X19, [X8 + 0x10]
	0x03C6EF84 CBZ X19, 0x3C6F010
	0x03C6EF88 LDR X0, [X19 + 0x20]
	0x03C6EF8C CBZ X0, 0x3C6F010
	0x03C6EF90 LDR X8, [X0]
	0x03C6EF94 LDR X9, [X8 + 0x248]
	0x03C6EF98 LDR X1, [X8 + 0x250]
	0x03C6EF9C BLR X9
	0x03C6EFA0 CBZ X0, 0x3C6F000
	0x03C6EFA4 ADRP X8, 0x4F2000
	0x03C6EFA8 LDR X8, [X8 + 0x2D0]
	0x03C6EFAC LDR X9, [X0]
	0x03C6EFB0 LDR X1, [X8]
	0x03C6EFB4 LDRB W10, [X9 + 0x130]
	0x03C6EFB8 LDRB W8, [X1 + 0x130]
	0x03C6EFBC CMP W10, W8
	0x03C6EFC0 B.CC 0x3C6EFFC
	0x03C6EFC4 LDR X10, [X9 + 0xC8]
	0x03C6EFC8 SUB X9, X8, 0x1
	0x03C6EFCC LDR X10, [X10, X9, LSL #3]
	0x03C6EFD0 CMP X10, X1
	0x03C6EFD4 B.NE 0x3C6EFFC
	0x03C6EFD8 STR X0, [X19 + 0x18]
	0x03C6EFDC LDR X10, [X0]
	0x03C6EFE0 LDRB W11, [X10 + 0x130]
	0x03C6EFE4 CMP W11, W8
	0x03C6EFE8 B.CC 0x3C6EFFC
	0x03C6EFEC LDR X8, [X10 + 0xC8]
	0x03C6EFF0 LDR X8, [X8, X9, LSL #3]
	0x03C6EFF4 CMP X8, X1
	0x03C6EFF8 B.EQ 0x3C6F004
	0x03C6EFFC BL 0x1C171E0
	0x03C6F000 STR X31, [X19 + 0x18]
	0x03C6F004 LDP X20, X19, [X31 + 0x10]
	0x03C6F008 LDP X30, X21, [X31], #0x20
	0x03C6F00C RET
	0x03C6F010 BL 0x1C16F20
	0x03C6F014 STP D11, D10, [X31 - 0x60]!
	0x03C6F018 STP D9, D8, [X31 + 0x10]
	0x03C6F01C STR X30, [X31 + 0x20]
	0x03C6F020 STP X24, X23, [X31 + 0x30]
	0x03C6F024 STP X22, X21, [X31 + 0x40]
	0x03C6F028 STP X20, X19, [X31 + 0x50]
	0x03C6F02C ADRP X24, 0x777000
	0x03C6F030 ADRP X23, 0x4AF000
	0x03C6F034 LDRB W8, [X24 + 0x68D]
	0x03C6F038 LDR X23, [X23 + 0xBD0]
	0x03C6F03C MOV X19, X3
	0x03C6F040 MOV X22, X2
	0x03C6F044 MOV X20, X1
	0x03C6F048 MOV V8.16B, V3.16B
	0x03C6F04C MOV V9.16B, V2.16B
	0x03C6F050 MOV V10.16B, V1.16B
	0x03C6F054 MOV V11.16B, V0.16B
	0x03C6F058 MOV W21, W0
	0x03C6F05C TBNZ X8, 0x0, 0x3C6F080
	0x03C6F060 ADRP X0, 0x4AF000
	0x03C6F064 LDR X0, [X0 + 0xBD0]
	0x03C6F068 BL 0x1C16CF4
	0x03C6F06C ADRP X0, 0x4AB000
	0x03C6F070 LDR X0, [X0 + 0x4C0]
	0x03C6F074 BL 0x1C16CF4
	0x03C6F078 MOVZ W8, 0x1
	0x03C6F07C STRB W8, [X24 + 0x68D]
	0x03C6F080 LDR X0, [X23]
	0x03C6F084 ADRP X23, 0x4AB000
	0x03C6F088 LDR W8, [X0 + 0xE0]
	0x03C6F08C LDR X23, [X23 + 0x4C0]
	0x03C6F090 CBNZ W8, 0x3C6F098
	0x03C6F094 BL 0x1C16DFC
	0x03C6F098 MOV X0, X22
	0x03C6F09C BL 0x3C678AC
	0x03C6F0A0 LDR X8, [X23]
	0x03C6F0A4 MOV X22, X0
	0x03C6F0A8 LDR W9, [X8 + 0xE0]
	0x03C6F0AC CBNZ W9, 0x3C6F0B8
	0x03C6F0B0 MOV X0, X8
	0x03C6F0B4 BL 0x1C16DFC
	0x03C6F0B8 BL 0x3C6748C
	0x03C6F0BC CBZ X0, 0x3C6F100
	0x03C6F0C0 LDR X3, [X0 + 0x50]
	0x03C6F0C4 MOV W0, W21
	0x03C6F0C8 MOV V2.16B, V9.16B
	0x03C6F0CC MOV V3.16B, V8.16B
	0x03C6F0D0 MOV X1, X20
	0x03C6F0D4 MOV X2, X22
	0x03C6F0D8 MOV X4, X19
	0x03C6F0DC LDP X20, X19, [X31 + 0x50]
	0x03C6F0E0 LDP X22, X21, [X31 + 0x40]
	0x03C6F0E4 LDP X24, X23, [X31 + 0x30]
	0x03C6F0E8 LDR X30, [X31 + 0x20]
	0x03C6F0EC LDP D9, D8, [X31 + 0x10]
	0x03C6F0F0 MOV V0.16B, V11.16B
	0x03C6F0F4 MOV V1.16B, V10.16B
	0x03C6F0F8 LDP D11, D10, [X31], #0x60
	0x03C6F0FC B 0x3C6F10C
	0x03C6F100 BL 0x1C16F20
	0x03C6F104 LDR X0, [X0 + 0x50]
	0x03C6F108 RET
	0x03C6F10C STP D11, D10, [X31 - 0x70]!
	0x03C6F110 STP D9, D8, [X31 + 0x10]
	0x03C6F114 STP X30, X27, [X31 + 0x20]
	0x03C6F118 STP X26, X25, [X31 + 0x30]
	0x03C6F11C STP X24, X23, [X31 + 0x40]
	0x03C6F120 STP X22, X21, [X31 + 0x50]
	0x03C6F124 STP X20, X19, [X31 + 0x60]
	0x03C6F128 ADRP X25, 0x777000
	0x03C6F12C ADRP X24, 0x4B0000
	0x03C6F130 LDRB W8, [X25 + 0x68E]
	0x03C6F134 LDR X24, [X24 + 0x5C8]
	0x03C6F138 MOV X22, X4
	0x03C6F13C MOV X19, X3
	0x03C6F140 MOV X20, X2
	0x03C6F144 MOV X23, X1
	0x03C6F148 MOV V8.16B, V3.16B
	0x03C6F14C MOV V9.16B, V2.16B
	0x03C6F150 MOV V10.16B, V1.16B
	0x03C6F154 MOV V11.16B, V0.16B
	0x03C6F158 MOV W21, W0
	0x03C6F15C TBNZ X8, 0x0, 0x3C6F1A4
	0x03C6F160 ADRP X0, 0x4B0000
	0x03C6F164 LDR X0, [X0 + 0x5C8]
	0x03C6F168 BL 0x1C16CF4
	0x03C6F16C ADRP X0, 0x4AB000
	0x03C6F170 LDR X0, [X0 + 0x4C0]
	0x03C6F174 BL 0x1C16CF4
	0x03C6F178 ADRP X0, 0x4F1000
	0x03C6F17C LDR X0, [X0 + 0x310]
	0x03C6F180 BL 0x1C16CF4
	0x03C6F184 ADRP X0, 0x4F1000
	0x03C6F188 LDR X0, [X0 + 0x318]
	0x03C6F18C BL 0x1C16CF4
	0x03C6F190 ADRP X0, 0x4C7000
	0x03C6F194 LDR X0, [X0 + 0x798]
	0x03C6F198 BL 0x1C16CF4
	0x03C6F19C MOVZ W8, 0x1
	0x03C6F1A0 STRB W8, [X25 + 0x68E]
	0x03C6F1A4 LDR X0, [X24]
	0x03C6F1A8 ADRP X24, 0x4F1000
	0x03C6F1AC ADRP X27, 0x4C7000
	0x03C6F1B0 ADRP X26, 0x4F1000
	0x03C6F1B4 ADRP X25, 0x4AB000
	0x03C6F1B8 LDR W8, [X0 + 0xE0]
	0x03C6F1BC LDR X24, [X24 + 0x318]
	0x03C6F1C0 LDR X27, [X27 + 0x798]
	0x03C6F1C4 LDR X26, [X26 + 0x310]
	0x03C6F1C8 LDR X25, [X25 + 0x4C0]
	0x03C6F1CC CBNZ W8, 0x3C6F1D4
	0x03C6F1D0 BL 0x1C16DFC
	0x03C6F1D4 BL 0x3C67304
	0x03C6F1D8 LDR X0, [X24]
	0x03C6F1DC BL 0x1C16F10
	0x03C6F1E0 MOV X1, X31
	0x03C6F1E4 MOV X24, X0
	0x03C6F1E8 BL 0x33BDD8C
	0x03C6F1EC STR X23, [X24 + 0x10]
	0x03C6F1F0 STP S11, S10, [X24 + 0x18]
	0x03C6F1F4 STP S9, S8, [X24 + 0x20]
	0x03C6F1F8 STP X22, X19, [X24 + 0x28]
	0x03C6F1FC LDR X0, [X27]
	0x03C6F200 BL 0x1C16F10
	0x03C6F204 LDR X2, [X26]
	0x03C6F208 MOV X1, X24
	0x03C6F20C MOV X22, X0
	0x03C6F210 BL 0x3C6C8E0
	0x03C6F214 LDR X0, [X25]
	0x03C6F218 LDR W8, [X0 + 0xE0]
	0x03C6F21C CBNZ W8, 0x3C6F224
	0x03C6F220 BL 0x1C16DFC
	0x03C6F224 MOV W0, W21
	0x03C6F228 MOV V2.16B, V9.16B
	0x03C6F22C MOV V3.16B, V8.16B
	0x03C6F230 MOV X1, X22
	0x03C6F234 MOV X2, X20
	0x03C6F238 MOV X3, X19
	0x03C6F23C LDP X20, X19, [X31 + 0x60]
	0x03C6F240 LDP X22, X21, [X31 + 0x50]
	0x03C6F244 LDP X24, X23, [X31 + 0x40]
	0x03C6F248 LDP X26, X25, [X31 + 0x30]
	0x03C6F24C LDP X30, X27, [X31 + 0x20]
	0x03C6F250 LDP D9, D8, [X31 + 0x10]
	0x03C6F254 MOV V0.16B, V11.16B
	0x03C6F258 MOV V1.16B, V10.16B
	0x03C6F25C LDP D11, D10, [X31], #0x70
	0x03C6F260 B 0x3C6BCD0
	0x03C6F264 STP D11, D10, [X31 - 0x50]!
	0x03C6F268 STP D9, D8, [X31 + 0x10]
	0x03C6F26C STR X30, [X31 + 0x20]
	0x03C6F270 STP X22, X21, [X31 + 0x30]
	0x03C6F274 STP X20, X19, [X31 + 0x40]
	0x03C6F278 MOV X21, X1
	0x03C6F27C MOV X1, X31
	0x03C6F280 MOV X19, X4
	0x03C6F284 MOV X20, X3
	0x03C6F288 MOV V8.16B, V3.16B
	0x03C6F28C MOV V9.16B, V2.16B
	0x03C6F290 MOV V10.16B, V1.16B
	0x03C6F294 MOV V11.16B, V0.16B
	0x03C6F298 MOV X22, X0
	0x03C6F29C BL 0x33BDD8C
	0x03C6F2A0 STR X21, [X22 + 0x10]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+32], X30
	003 Move [X31+48], X24
	004 Move [X31+56], X23
	005 Move [X31+64], X22
	006 Move [X31+72], X21
	007 Move [X31+80], X20
	008 Move [X31+88], X19
	009 Move X23, 0x779000
	010 Move X19, 0x4F3000
	011 Move W8, [X23+1699]
	012 Move X19, [X19+688]
	013 Move X22, X2
	014 Move X20, X1
	015 Move X21, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {28}
	020 Move X0, 0x4F3000
	021 Move X0, [X0+720]
	022 Call 0x1C17CF4
	023 Move X0, 0x4F3000
	024 Move X0, [X0+688]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X23+1699], W8
	028 Move X0, [X19]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1C17DFC
	033 Move X23, 0x779000
	034 Move W8, [X23+2435]
	035 Compare W8, 0
	036 JumpIfNotEqual {42}
	037 Move X0, 0x4F3000
	038 Move X0, [X0+688]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X23+2435], W8
	042 Move X0, [X19]
	043 Move W8, [X0+224]
	044 Compare W8, 0
	045 JumpIfNotEqual {48}
	046 Call 0x1C17DFC
	047 Move X0, [X19]
	048 Move X8, [X0+184]
	049 Move X24, 0x778000
	050 Move W9, [X24+2436]
	051 Move W8, [X8+40]
	052 Add W23, W8, 1
	053 Compare W9, 0
	054 JumpIfNotEqual {60}
	055 Move X0, X19
	056 Call 0x1C17CF4
	057 Move X0, [X19]
	058 Move W8, 1
	059 Move [X24+2436], W8
	060 Move W8, [X0+224]
	061 Compare W8, 0
	062 JumpIfNotEqual {65}
	063 Call 0x1C17DFC
	064 Move X0, [X19]
	065 Move X8, [X0+184]
	066 Move X24, 0x4EB000
	067 Move [X8+40], W23
	068 Move X23, 0x778000
	069 Move W8, [X23+1296]
	070 Move X24, [X24+32]
	071 Move TEMP, X8
	072 And TEMP, TEMP, 1
	073 Compare TEMP, 1
	074 JumpIfEqual {80}
	075 Move X0, 0x4EB000
	076 Move X0, [X0+32]
	077 Call 0x1C17CF4
	078 Move W8, 1
	079 Move [X23+1296], W8
	080 Move X8, [X24]
	081 Move X8, [X8+184]
	082 Move X23, [X8]
	083 Compare X23, 0
	084 JumpIfEqual {200}
	085 Move X24, 0x778000
	086 Move X8, [X24+1192]
	087 Compare X8, 0
	088 JumpIfNotEqual {94}
	089 Move X0, -51892224
	090 Add X0, X0, 1382
	091 Call 0x1C17CB8
	092 Move X8, X0
	093 Move [X24+1192], X0
	094 Move X0, X23
	095 NotImplemented "Instruction BLR not yet implemented."
	096 Or W8, W0, 4
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Move X0, [X19]
	099 Move W8, [X0+224]
	100 Compare W8, 0
	101 JumpIfNotEqual {103}
	102 Call 0x1C17DFC
	103 Move X0, X22
	104 Call GUILayoutUtility.CreateGUILayoutGroupInstanceOfType, X0
	105 Compare X0, 0
	106 JumpIfEqual {200}
	107 Move X8, [X0]
	108 Move [X0+64], X21
	109 Move X1, X21
	110 Move X22, X0
	111 Move X9, [X8+504]
	112 Move X2, [X8+512]
	113 NotImplemented "Instruction BLR not yet implemented."
	114 Compare X20, 0
	115 JumpIfEqual {122}
	116 Move X8, [X22]
	117 Move X0, X22
	118 Move X1, X20
	119 Move X9, [X8+520]
	120 Move X2, [X8+528]
	121 NotImplemented "Instruction BLR not yet implemented."
	122 Move X0, [X19]
	123 Move W8, [X0+224]
	124 Compare W8, 0
	125 JumpIfNotEqual {128}
	126 Call 0x1C17DFC
	127 Move X0, [X19]
	128 Move X8, [X0+184]
	129 Move X8, [X8+16]
	130 Compare X8, 0
	131 JumpIfEqual {200}
	132 Move X0, [X8+24]
	133 Compare X0, 0
	134 JumpIfEqual {200}
	135 Move X1, X22
	136 Call GUILayoutGroup.Add, X0, X1
	137 Move X0, [X19]
	138 Move W8, [X0+224]
	139 Compare W8, 0
	140 JumpIfNotEqual {143}
	141 Call 0x1C17DFC
	142 Move X0, [X19]
	143 Move X8, [X0+184]
	144 Move X8, [X8+16]
	145 Compare X8, 0
	146 JumpIfEqual {200}
	147 Move X0, [X8+24]
	148 Compare X0, 0
	149 JumpIfEqual {200}
	150 Call GUILayoutGroup.GetNext, X0
	151 Compare X0, 0
	152 JumpIfEqual {201}
	153 Move X8, 0x4F2000
	154 Move X8, [X8+720]
	155 Move X9, [X0]
	156 Move X22, X0
	157 Move X8, [X8]
	158 Move W11, [X9+304]
	159 Move W10, [X8+304]
	160 NotImplemented "Instruction CMP not yet implemented."
	161 Move X9, [X9+200]
	162 Add X9, X9, X10
	163 NotImplemented "Instruction LDUR not yet implemented."
	164 NotImplemented "Instruction CMP not yet implemented."
	165 Move [X22+96], W31
	166 Move X0, [X19]
	167 Move W8, [X0+224]
	168 Compare W8, 0
	169 JumpIfNotEqual {172}
	170 Call 0x1C17DFC
	171 Move X0, [X19]
	172 Move X8, [X0+184]
	173 Move X8, [X8+16]
	174 Compare X8, 0
	175 JumpIfEqual {200}
	176 Move X0, [X8+32]
	177 Compare X0, 0
	178 JumpIfEqual {200}
	179 Move X8, [X0]
	180 Move X1, X22
	181 Move X9, [X8+616]
	182 Move X2, [X8+624]
	183 NotImplemented "Instruction BLR not yet implemented."
	184 Move X8, [X19]
	185 Move X8, [X8+184]
	186 Move X8, [X8+16]
	187 Compare X8, 0
	188 JumpIfEqual {200}
	189 Move [X8+24], X22
	190 Move X0, X22
	191 Move X20, [X31+80]
	192 Move X19, [X31+88]
	193 Move X22, [X31+64]
	194 Move X21, [X31+72]
	195 Move X24, [X31+48]
	196 Move X23, [X31+56]
	197 Move X30, [X31+32]
	198 Add X31, X31, 96
	199 Return X0
	200 Call 0x1C17F20
	201 Call Event.get_current
	202 Move X19, X0
	203 Call 0x19913C0
	204 Move X0, X19
	205 Call Event.get_type, X0
	206 Move W19, W0
	207 Move X0, 0x4AE000
	208 Move X0, [X0+3688]
	209 Call 0x1C17D08
	210 Move TEMP, 0
	211 Not TEMP
	212 Move X8, TEMP
	213 Move [X31+8], X0
	214 Move [X31+16], X8
	215 Add X0, X31, 8
	216 Move X1, X31
	217 Move [X31+24], W19
	218 Call Enum.ToString, X0
	219 Move X19, X0
	220 Move X0, 0x4F2000
	221 Move X0, [X0+744]
	222 Call 0x1C17D08
	223 Move X1, X19
	224 Move X2, X31
	225 Call String.Concat, X0, X1
	226 Move X19, X0
	227 Move X0, 0x4F2000
	228 Move X0, [X0+752]
	229 Call 0x1C17D08
	230 Call 0x1C17F10
	231 Move X1, X19
	232 Move X20, X0
	233 Call ExitGUIException..ctor, X0, X1
	234 Move X0, 0x4F2000
	235 Move X0, [X0+760]
	236 Call 0x1C17D08
	237 Move X1, X0
	238 Move X0, X20
	239 Call 0x1C17DEC

Method: System.Void EndLayoutGroup()

Disassembly:
	0x03C6F2F0 LDP X30, X21, [X31], #0x20
	0x03C6F2F4 RET
	0x03C6F2F8 STR X30, [X31 - 0x30]!
	0x03C6F2FC STP X22, X21, [X31 + 0x10]
	0x03C6F300 STP X20, X19, [X31 + 0x20]
	0x03C6F304 ADRP X22, 0x777000
	0x03C6F308 ADRP X21, 0x484000
	0x03C6F30C ADRP X20, 0x4F1000
	0x03C6F310 LDRB W8, [X22 + 0x691]
	0x03C6F314 LDR X21, [X21 + 0x758]
	0x03C6F318 LDR X20, [X20 + 0x2C8]
	0x03C6F31C MOV W19, W0
	0x03C6F320 TBNZ X8, 0x0, 0x3C6F344
	0x03C6F324 ADRP X0, 0x4F1000
	0x03C6F328 LDR X0, [X0 + 0x2C8]
	0x03C6F32C BL 0x1C16CF4
	0x03C6F330 ADRP X0, 0x484000
	0x03C6F334 LDR X0, [X0 + 0x758]
	0x03C6F338 BL 0x1C16CF4
	0x03C6F33C MOVZ W8, 0x1
	0x03C6F340 STRB W8, [X22 + 0x691]
	0x03C6F344 LDR X0, [X21]
	0x03C6F348 AND W8, W19, 0x1
	0x03C6F34C ADD X1, X31, 0xC
	0x03C6F350 STR W8, [X31 + 0xC]
	0x03C6F354 BL 0x1C16E04
	0x03C6F358 LDR X8, [X20]
	0x03C6F35C MOV X19, X0
	0x03C6F360 MOV X0, X8
	0x03C6F364 BL 0x1C16F10
	0x03C6F368 MOV X1, X31
	0x03C6F36C MOV X20, X0
	0x03C6F370 BL 0x33BDD8C
	0x03C6F374 MOVZ W8, 0x7
	0x03C6F378 STR W8, [X20 + 0x10]
	0x03C6F37C STR X19, [X20 + 0x18]
	0x03C6F380 MOV X0, X20
	0x03C6F384 LDP X20, X19, [X31 + 0x20]
	0x03C6F388 LDP X22, X21, [X31 + 0x10]
	0x03C6F38C LDR X30, [X31], #0x30
	0x03C6F390 RET
	0x03C6F394 STP X30, X23, [X31 - 0x30]!
	0x03C6F398 STP X22, X21, [X31 + 0x10]
	0x03C6F39C STP X20, X19, [X31 + 0x20]
	0x03C6F3A0 ADRP X22, 0x777000
	0x03C6F3A4 ADRP X21, 0x4F1000
	0x03C6F3A8 LDRB W8, [X22 + 0x692]
	0x03C6F3AC LDR X21, [X21 + 0x2B0]
	0x03C6F3B0 MOV W19, W1
	0x03C6F3B4 MOV X20, X0
	0x03C6F3B8 TBNZ X8, 0x0, 0x3C6F3D0
	0x03C6F3BC ADRP X0, 0x4F1000
	0x03C6F3C0 LDR X0, [X0 + 0x2B0]
	0x03C6F3C4 BL 0x1C16CF4
	0x03C6F3C8 MOVZ W8, 0x1
	0x03C6F3CC STRB W8, [X22 + 0x692]
	0x03C6F3D0 LDR X0, [X21]
	0x03C6F3D4 LDR W8, [X0 + 0xE0]
	0x03C6F3D8 CBNZ W8, 0x3C6F3E4
	0x03C6F3DC BL 0x1C16DFC
	0x03C6F3E0 LDR X0, [X21]
	0x03C6F3E4 LDR X8, [X0 + 0xB8]
	0x03C6F3E8 LDR X8, [X8 + 0x10]
	0x03C6F3EC CBZ X8, 0x3C6F4E0
	0x03C6F3F0 ADRP X22, 0x777000
	0x03C6F3F4 ADRP X23, 0x4EA000
	0x03C6F3F8 LDRB W9, [X22 + 0x510]
	0x03C6F3FC LDR X21, [X8 + 0x18]
	0x03C6F400 LDR X23, [X23 + 0x20]
	0x03C6F404 TBNZ X9, 0x0, 0x3C6F41C
	0x03C6F408 ADRP X0, 0x4EA000
	0x03C6F40C LDR X0, [X0 + 0x20]
	0x03C6F410 BL 0x1C16CF4
	0x03C6F414 MOVZ W8, 0x1
	0x03C6F418 STRB W8, [X22 + 0x510]
	0x03C6F41C LDR X8, [X23]
	0x03C6F420 LDR X8, [X8 + 0xB8]
	0x03C6F424 LDR X22, [X8]
	0x03C6F428 CBZ X22, 0x3C6F4E0
	0x03C6F42C ADRP X23, 0x777000
	0x03C6F430 LDR X8, [X23 + 0x4A8]
	0x03C6F434 CBNZ X8, 0x3C6F44C
	0x03C6F438 ADRP X0, 0xFFFFFFFFFCE82000
	0x03C6F43C ADD X0, X0, 0x566
	0x03C6F440 BL 0x1C16CB8
	0x03C6F444 MOV X8, X0
	0x03C6F448 STR X0, [X23 + 0x4A8]
	0x03C6F44C MOV X0, X22
	0x03C6F450 BLR X8
	0x03C6F454 CBZ X21, 0x3C6F4E0
	0x03C6F458 CMP W0, 0x8
	0x03C6F45C B.NE 0x3C6F4B4
	0x03C6F460 MOVZ W8, 0x1
	0x03C6F464 STRB W8, [X21 + 0x51]
	0x03C6F468 LDUR V0, [X20 + 0x18]
	0x03C6F46C STR V0, [X21 + 0x2]
	0x03C6F470 LDR X1, [X20 + 0x28]
	0x03C6F474 CBZ X1, 0x3C6F48C
	0x03C6F478 LDR X8, [X21]
	0x03C6F47C MOV X0, X21
	0x03C6F480 LDR X9, [X8 + 0x208]
	0x03C6F484 LDR X2, [X8 + 0x210]
	0x03C6F488 BLR X9
	0x03C6F48C MOVZ W8, 0x1
	0x03C6F490 STR W19, [X21 + 0x5C]
	0x03C6F494 STRB W8, [X21 + 0x59]
	0x03C6F498 LDR X1, [X20 + 0x30]
	0x03C6F49C LDR X8, [X21]
	0x03C6F4A0 MOV X0, X21
	0x03C6F4A4 STR X1, [X21 + 0x40]
	0x03C6F4A8 LDP X9, X2, [X8 + 0x1F8]
	0x03C6F4AC BLR X9
	0x03C6F4B0 B 0x3C6F4B8
	0x03C6F4B4 STR W31, [X21 + 0x60]
	0x03C6F4B8 LDR X8, [X20 + 0x10]
	0x03C6F4BC CBZ X8, 0x3C6F4E0
	0x03C6F4C0 LDR X3, [X8 + 0x18]
	0x03C6F4C4 LDR X0, [X8 + 0x40]
	0x03C6F4C8 LDR X2, [X8 + 0x28]
	0x03C6F4CC MOV W1, W19
	0x03C6F4D0 LDP X20, X19, [X31 + 0x20]
	0x03C6F4D4 LDP X22, X21, [X31 + 0x10]
	0x03C6F4D8 LDP X30, X23, [X31], #0x30
	0x03C6F4DC BR X3
	0x03C6F4E0 BL 0x1C16F20
	0x03C6F4E4 LDR X8, [X0]
	0x03C6F4E8 STR X1, [X0 + 0x40]
	0x03C6F4EC LDP X3, X2, [X8 + 0x1F8]
	0x03C6F4F0 BR X3
	0x03C6F4F4 STR W31, [X0 + 0x60]
	0x03C6F4F8 RET
	0x03C6F4FC SUB X31, X31, 0x30
	0x03C6F500 STP X30, X21, [X31 + 0x10]
	0x03C6F504 STP X20, X19, [X31 + 0x20]
	0x03C6F508 ADRP X21, 0x777000
	0x03C6F50C ADRP X20, 0x4F1000
	0x03C6F510 LDRB W8, [X21 + 0x693]
	0x03C6F514 LDR X20, [X20 + 0x2B0]
	0x03C6F518 MOV W19, W0
	0x03C6F51C TBNZ X8, 0x0, 0x3C6F534
	0x03C6F520 ADRP X0, 0x4F1000
	0x03C6F524 LDR X0, [X0 + 0x2B0]
	0x03C6F528 BL 0x1C16CF4
	0x03C6F52C MOVZ W8, 0x1
	0x03C6F530 STRB W8, [X21 + 0x693]
	0x03C6F534 LDR X0, [X20]
	0x03C6F538 STP X31, X31, [X31]
	0x03C6F53C LDR W8, [X0 + 0xE0]
	0x03C6F540 CBNZ W8, 0x3C6F548
	0x03C6F544 BL 0x1C16DFC
	0x03C6F548 ADRP X20, 0x777000
	0x03C6F54C LDR X8, [X20 + 0x6B0]
	0x03C6F550 CBNZ X8, 0x3C6F568
	0x03C6F554 ADRP X0, 0xFFFFFFFFFCE9A000
	0x03C6F558 ADD X0, X0, 0x956

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x778000
	006 Move X19, 0x4F2000
	007 Move W8, [X20+1700]
	008 Move X19, [X19+688]
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {27}
	013 Move X0, 0x485000
	014 Move X0, [X0+2600]
	015 Call 0x1C17CF4
	016 Move X0, 0x4F2000
	017 Move X0, [X0+720]
	018 Call 0x1C17CF4
	019 Move X0, 0x4F2000
	020 Move X0, [X0+688]
	021 Call 0x1C17CF4
	022 Move X0, 0x4F2000
	023 Move X0, [X0+768]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X20+1700], W8
	027 Move X0, [X19]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Move X20, 0x778000
	033 Move W8, [X20+2435]
	034 Compare W8, 0
	035 JumpIfNotEqual {41}
	036 Move X0, 0x4F2000
	037 Move X0, [X0+688]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X20+2435], W8
	041 Move X0, [X19]
	042 Move W8, [X0+224]
	043 Compare W8, 0
	044 JumpIfNotEqual {47}
	045 Call 0x1C17DFC
	046 Move X0, [X19]
	047 Move X8, [X0+184]
	048 Move X21, 0x778000
	049 Move W9, [X21+2436]
	050 Move W20, [X8+40]
	051 Compare W9, 0
	052 JumpIfNotEqual {58}
	053 Move X0, X19
	054 Call 0x1C17CF4
	055 Move X0, [X19]
	056 Move W8, 1
	057 Move [X21+2436], W8
	058 Move W8, [X0+224]
	059 Subtract W20, W20, 1
	060 Compare W8, 0
	061 JumpIfNotEqual {64}
	062 Call 0x1C17DFC
	063 Move X0, [X19]
	064 Move X9, [X0+184]
	065 Move X8, [X9+16]
	066 Move [X9+40], W20
	067 Compare X8, 0
	068 JumpIfEqual {180}
	069 Move X0, [X8+32]
	070 Compare X0, 0
	071 JumpIfEqual {180}
	072 Move X8, [X0]
	073 Move X9, [X8+472]
	074 Move X1, [X8+480]
	075 NotImplemented "Instruction BLR not yet implemented."
	076 Compare W0, 0
	077 JumpIfEqual {148}
	078 Move X0, [X19]
	079 Move W8, [X0+224]
	080 Compare W8, 0
	081 JumpIfNotEqual {84}
	082 Call 0x1C17DFC
	083 Move X0, [X19]
	084 Move X8, [X0+184]
	085 Move X8, [X8+16]
	086 Compare X8, 0
	087 JumpIfEqual {180}
	088 Move X0, [X8+32]
	089 Compare X0, 0
	090 JumpIfEqual {180}
	091 Move X8, [X0]
	092 Move X9, [X8+600]
	093 Move X1, [X8+608]
	094 NotImplemented "Instruction BLR not yet implemented."
	095 Move X8, [X19]
	096 Move X8, [X8+184]
	097 Move X8, [X8+16]
	098 Compare X8, 0
	099 JumpIfEqual {180}
	100 Move X0, [X8+32]
	101 Compare X0, 0
	102 JumpIfEqual {180}
	103 Move X8, [X0]
	104 Move X9, [X8+472]
	105 Move X1, [X8+480]
	106 NotImplemented "Instruction BLR not yet implemented."
	107 Move X8, [X19]
	108 Move W20, W0
	109 Move W9, [X8+224]
	110 Compare W9, 0
	111 JumpIfNotEqual {115}
	112 Move X0, X8
	113 Call 0x1C17DFC
	114 Move X8, [X19]
	115 Move X8, [X8+184]
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Move X21, [X8+16]
	118 Compare X21, 0
	119 JumpIfEqual {180}
	120 Move X0, [X21+32]
	121 Compare X0, 0
	122 JumpIfEqual {180}
	123 Move X8, [X0]
	124 Move X9, [X8+584]
	125 Move X1, [X8+592]
	126 NotImplemented "Instruction BLR not yet implemented."
	127 Compare X0, 0
	128 JumpIfEqual {174}
	129 Move X8, 0x4F2000
	130 Move X8, [X8+720]
	131 Move X9, [X0]
	132 Move X1, [X8]
	133 Move W10, [X9+304]
	134 Move W8, [X1+304]
	135 NotImplemented "Instruction CMP not yet implemented."
	136 Move X10, [X9+200]
	137 Subtract X9, X8, 1
	138 Move X10, [X10]
	139 NotImplemented "Instruction CMP not yet implemented."
	140 Move [X21+24], X0
	141 Move X10, [X0]
	142 Move W11, [X10+304]
	143 NotImplemented "Instruction CMP not yet implemented."
	144 Move X8, [X10+200]
	145 Move X8, [X8]
	146 NotImplemented "Instruction CMP not yet implemented."
	147 Call 0x1C181E0
	148 Move X8, 0x485000
	149 Move X8, [X8+2600]
	150 Move X0, [X8]
	151 Move W8, [X0+224]
	152 Compare W8, 0
	153 JumpIfNotEqual {155}
	154 Call 0x1C17DFC
	155 Move X8, 0x4F2000
	156 Move X8, [X8+768]
	157 Move X20, [X31+16]
	158 Move X19, [X31+24]
	159 Move X1, X31
	160 Move X0, [X8]
	161 Move X30, [X31+32]
	162 Move X21, [X31+40]
	163 Call Debug.LogError, X0
	164 Return 
	165 Move X8, 0x4F2000
	166 Move X8, [X8+720]
	167 Move X0, [X8]
	168 Call 0x1C17F10
	169 Move X19, X0
	170 Call GUILayoutGroup..ctor, X0
	171 Compare X21, 0
	172 JumpIfEqual {180}
	173 Move [X21+24], X19
	174 Move [X21+24], X31
	175 Move X20, [X31+16]
	176 Move X19, [X31+24]
	177 Move X30, [X31+32]
	178 Move X21, [X31+40]
	179 Return 
	180 Call 0x1C17F20

Method: UnityEngine.GUILayoutGroup BeginLayoutArea(UnityEngine.GUIStyle style, System.Type layoutType)

Disassembly:
	0x03C6FA80 CMP W20, 0x8
	0x03C6FA84 LDR X23, [X8 + 0x10]
	0x03C6FA88 B.NE 0x3C6FB34
	0x03C6FA8C ADRP X22, 0x4F1000
	0x03C6FA90 LDR X22, [X22 + 0x2D0]
	0x03C6FA94 LDR X0, [X22]
	0x03C6FA98 BL 0x1C16F10
	0x03C6FA9C MOV X20, X0
	0x03C6FAA0 BL 0x3C6FB68
	0x03C6FAA4 CBZ X19, 0x3C6FB64
	0x03C6FAA8 STR X20, [X19 + 0x18]
	0x03C6FAAC CBZ X23, 0x3C6FB64
	0x03C6FAB0 STR X20, [X23 + 0x18]
	0x03C6FAB4 LDR X8, [X21]
	0x03C6FAB8 LDR X8, [X8 + 0xB8]
	0x03C6FABC LDR X8, [X8 + 0x10]
	0x03C6FAC0 CBZ X8, 0x3C6FB64
	0x03C6FAC4 LDR X0, [X8 + 0x20]
	0x03C6FAC8 CBZ X0, 0x3C6FB64
	0x03C6FACC LDR X8, [X0]
	0x03C6FAD0 LDR X9, [X8 + 0x208]
	0x03C6FAD4 LDR X1, [X8 + 0x210]
	0x03C6FAD8 BLR X9
	0x03C6FADC LDR X8, [X21]
	0x03C6FAE0 LDR X8, [X8 + 0xB8]
	0x03C6FAE4 LDR X8, [X8 + 0x10]
	0x03C6FAE8 CBZ X8, 0x3C6FB64
	0x03C6FAEC LDR X0, [X8 + 0x20]
	0x03C6FAF0 CBZ X0, 0x3C6FB64
	0x03C6FAF4 LDR X9, [X0]
	0x03C6FAF8 LDR X1, [X8 + 0x18]
	0x03C6FAFC LDR X8, [X9 + 0x268]
	0x03C6FB00 LDR X2, [X9 + 0x270]
	0x03C6FB04 BLR X8
	0x03C6FB08 LDR X8, [X21]
	0x03C6FB0C LDR X0, [X22]
	0x03C6FB10 LDR X8, [X8 + 0xB8]
	0x03C6FB14 LDR X21, [X8 + 0x10]
	0x03C6FB18 BL 0x1C16F10
	0x03C6FB1C MOV X20, X0
	0x03C6FB20 BL 0x3C6FB68
	0x03C6FB24 STR X20, [X19 + 0x28]
	0x03C6FB28 CBZ X21, 0x3C6FB64
	0x03C6FB2C STR X20, [X21 + 0x28]
	0x03C6FB30 B 0x3C6FB54
	0x03C6FB34 CBZ X19, 0x3C6FB64
	0x03C6FB38 CBZ X23, 0x3C6FB64
	0x03C6FB3C LDR X8, [X19 + 0x18]
	0x03C6FB40 STR X8, [X23 + 0x18]
	0x03C6FB44 LDR X8, [X19 + 0x20]
	0x03C6FB48 STR X8, [X23 + 0x20]
	0x03C6FB4C LDR X8, [X19 + 0x28]
	0x03C6FB50 STR X8, [X23 + 0x28]
	0x03C6FB54 LDP X20, X19, [X31 + 0x20]
	0x03C6FB58 LDP X22, X21, [X31 + 0x10]
	0x03C6FB5C LDP X30, X23, [X31], #0x30
	0x03C6FB60 RET
	0x03C6FB64 BL 0x1C16F20
	0x03C6FB68 STP X30, X23, [X31 - 0x30]!
	0x03C6FB6C STP X22, X21, [X31 + 0x10]
	0x03C6FB70 STP X20, X19, [X31 + 0x20]
	0x03C6FB74 ADRP X23, 0x777000
	0x03C6FB78 ADRP X22, 0x4F1000
	0x03C6FB7C ADRP X20, 0x4F1000
	0x03C6FB80 ADRP X21, 0x4AB000
	0x03C6FB84 LDRB W8, [X23 + 0x978]
	0x03C6FB88 LDR X22, [X22 + 0x338]
	0x03C6FB8C LDR X20, [X20 + 0x340]
	0x03C6FB90 LDR X21, [X21 + 0x890]
	0x03C6FB94 MOV X19, X0
	0x03C6FB98 TBNZ X8, 0x0, 0x3C6FBD4
	0x03C6FB9C ADRP X0, 0x4F1000
	0x03C6FBA0 LDR X0, [X0 + 0x348]
	0x03C6FBA4 BL 0x1C16CF4
	0x03C6FBA8 ADRP X0, 0x4AB000
	0x03C6FBAC LDR X0, [X0 + 0x890]
	0x03C6FBB0 BL 0x1C16CF4
	0x03C6FBB4 ADRP X0, 0x4F1000
	0x03C6FBB8 LDR X0, [X0 + 0x340]
	0x03C6FBBC BL 0x1C16CF4
	0x03C6FBC0 ADRP X0, 0x4F1000
	0x03C6FBC4 LDR X0, [X0 + 0x338]
	0x03C6FBC8 BL 0x1C16CF4
	0x03C6FBCC MOVZ W8, 0x1
	0x03C6FBD0 STRB W8, [X23 + 0x978]
	0x03C6FBD4 LDR X0, [X22]
	0x03C6FBD8 ADRP X22, 0x4F1000
	0x03C6FBDC LDR X22, [X22 + 0x348]
	0x03C6FBE0 BL 0x1C16F10
	0x03C6FBE4 LDR X1, [X20]
	0x03C6FBE8 MOV X20, X0
	0x03C6FBEC BL 0x301B7C4
	0x03C6FBF0 ADRP X9, 0xFFFFFFFFFCE7D000
	0x03C6FBF4 LDR V0, [X9 + 0x36]
	0x03C6FBF8 MOVZ W10, 0x42C80000
	0x03C6FBFC MOVZ W8, 0x1
	0x03C6FC00 UNIMPLEMENTED
	0x03C6FC04 STR X20, [X19 + 0x48]
	0x03C6FC08 STR W31, [X19 + 0x54]
	0x03C6FC0C STRH W31, [X19 + 0x6C]
	0x03C6FC10 STRH W8, [X19 + 0x50]
	0x03C6FC14 STRH W8, [X19 + 0x58]
	0x03C6FC18 STUR V0, [X19 + 0x5C]
	0x03C6FC1C STR V1, [X19 + 0x7]
	0x03C6FC20 LDR X0, [X21]
	0x03C6FC24 LDR W8, [X0 + 0xE0]
	0x03C6FC28 CBNZ W8, 0x3C6FC30
	0x03C6FC2C BL 0x1C16DFC
	0x03C6FC30 BL 0x3C6BB04
	0x03C6FC34 LDR X8, [X22]
	0x03C6FC38 MOV X20, X0
	0x03C6FC3C LDR W9, [X8 + 0xE0]
	0x03C6FC40 CBNZ W9, 0x3C6FC4C
	0x03C6FC44 MOV X0, X8
	0x03C6FC48 BL 0x1C16DFC
	0x03C6FC4C MOV X0, X19
	0x03C6FC50 MOV X1, X20
	0x03C6FC54 LDP X20, X19, [X31 + 0x20]
	0x03C6FC58 LDP X22, X21, [X31 + 0x10]
	0x03C6FC5C FMOV S0, W31
	0x03C6FC60 FMOV S1, W31
	0x03C6FC64 FMOV S2, W31
	0x03C6FC68 FMOV S3, W31
	0x03C6FC6C LDP X30, X23, [X31], #0x30
	0x03C6FC70 B 0x3C76BBC
	0x03C6FC74 STP X30, X21, [X31 - 0x20]!
	0x03C6FC78 STP X20, X19, [X31 + 0x10]
	0x03C6FC7C ADRP X20, 0x777000
	0x03C6FC80 LDRB W8, [X20 + 0x69B]
	0x03C6FC84 MOV X19, X0
	0x03C6FC88 TBNZ X8, 0x0, 0x3C6FCAC
	0x03C6FC8C ADRP X0, 0x4F1000
	0x03C6FC90 LDR X0, [X0 + 0x2D0]
	0x03C6FC94 BL 0x1C16CF4
	0x03C6FC98 ADRP X0, 0x4F1000
	0x03C6FC9C LDR X0, [X0 + 0x2B0]
	0x03C6FCA0 BL 0x1C16CF4
	0x03C6FCA4 MOVZ W8, 0x1
	0x03C6FCA8 STRB W8, [X20 + 0x69B]
	0x03C6FCAC ADRP X20, 0x777000
	0x03C6FCB0 ADRP X21, 0x4EA000
	0x03C6FCB4 LDRB W8, [X20 + 0x510]
	0x03C6FCB8 LDR X21, [X21 + 0x20]
	0x03C6FCBC TBNZ X8, 0x0, 0x3C6FCD4
	0x03C6FCC0 ADRP X0, 0x4EA000
	0x03C6FCC4 LDR X0, [X0 + 0x20]
	0x03C6FCC8 BL 0x1C16CF4
	0x03C6FCCC MOVZ W8, 0x1
	0x03C6FCD0 STRB W8, [X20 + 0x510]
	0x03C6FCD4 LDR X8, [X21]
	0x03C6FCD8 LDR X8, [X8 + 0xB8]
	0x03C6FCDC LDR X20, [X8]
	0x03C6FCE0 CBZ X20, 0x3C6FDCC
	0x03C6FCE4 ADRP X21, 0x777000
	0x03C6FCE8 LDR X8, [X21 + 0x4A8]
	0x03C6FCEC CBNZ X8, 0x3C6FD04
	0x03C6FCF0 ADRP X0, 0xFFFFFFFFFCE82000
	0x03C6FCF4 ADD X0, X0, 0x566
	0x03C6FCF8 BL 0x1C16CB8
	0x03C6FCFC MOV X8, X0
	0x03C6FD00 STR X0, [X21 + 0x4A8]
	0x03C6FD04 MOV X0, X20
	0x03C6FD08 BLR X8
	0x03C6FD0C CMP W0, 0x8
	0x03C6FD10 B.NE 0x3C6FD7C
	0x03C6FD14 ADRP X21, 0x4F1000
	0x03C6FD18 LDR X21, [X21 + 0x2D0]
	0x03C6FD1C LDR X0, [X21]
	0x03C6FD20 BL 0x1C16F10
	0x03C6FD24 MOV X20, X0
	0x03C6FD28 BL 0x3C6FB68
	0x03C6FD2C CBZ X19, 0x3C6FDCC
	0x03C6FD30 LDR X0, [X19 + 0x20]
	0x03C6FD34 STR X20, [X19 + 0x18]
	0x03C6FD38 CBZ X0, 0x3C6FDCC
	0x03C6FD3C LDR X8, [X0]
	0x03C6FD40 LDR X9, [X8 + 0x208]
	0x03C6FD44 LDR X1, [X8 + 0x210]
	0x03C6FD48 BLR X9
	0x03C6FD4C LDR X0, [X19 + 0x20]
	0x03C6FD50 CBZ X0, 0x3C6FDCC
	0x03C6FD54 LDR X8, [X0]
	0x03C6FD58 LDR X1, [X19 + 0x18]
	0x03C6FD5C LDR X9, [X8 + 0x268]
	0x03C6FD60 LDR X2, [X8 + 0x270]
	0x03C6FD64 BLR X9
	0x03C6FD68 LDR X0, [X21]
	0x03C6FD6C BL 0x1C16F10
	0x03C6FD70 MOV X20, X0
	0x03C6FD74 BL 0x3C6FB68
	0x03C6FD78 STR X20, [X19 + 0x28]
	0x03C6FD7C ADRP X20, 0x4F1000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+40], X23
	004 Move [X31+48], X22
	005 Move [X31+56], X21
	006 Move [X31+64], X20
	007 Move [X31+72], X19
	008 Move X22, 0x778000
	009 Move X19, 0x4F2000
	010 Move W8, [X22+1701]
	011 Move X19, [X19+688]
	012 Move X21, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x4F2000
	019 Move X0, [X0+720]
	020 Call 0x1C17CF4
	021 Move X0, 0x4F2000
	022 Move X0, [X0+688]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X22+1701], W8
	026 Move X0, [X19]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X22, 0x778000
	032 Move W8, [X22+2435]
	033 Compare W8, 0
	034 JumpIfNotEqual {40}
	035 Move X0, 0x4F2000
	036 Move X0, [X0+688]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X22+2435], W8
	040 Move X0, [X19]
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {46}
	044 Call 0x1C17DFC
	045 Move X0, [X19]
	046 Move X8, [X0+184]
	047 Move X23, 0x778000
	048 Move W9, [X23+2436]
	049 Move W8, [X8+40]
	050 Add W22, W8, 1
	051 Compare W9, 0
	052 JumpIfNotEqual {58}
	053 Move X0, X19
	054 Call 0x1C17CF4
	055 Move X0, [X19]
	056 Move W8, 1
	057 Move [X23+2436], W8
	058 Move W8, [X0+224]
	059 Compare W8, 0
	060 JumpIfNotEqual {63}
	061 Call 0x1C17DFC
	062 Move X0, [X19]
	063 Move X8, [X0+184]
	064 Move X23, 0x4EB000
	065 Move [X8+40], W22
	066 Move X22, 0x778000
	067 Move W8, [X22+1296]
	068 Move X23, [X23+32]
	069 Move TEMP, X8
	070 And TEMP, TEMP, 1
	071 Compare TEMP, 1
	072 JumpIfEqual {78}
	073 Move X0, 0x4EB000
	074 Move X0, [X0+32]
	075 Call 0x1C17CF4
	076 Move W8, 1
	077 Move [X22+1296], W8
	078 Move X8, [X23]
	079 Move X8, [X8+184]
	080 Move X22, [X8]
	081 Compare X22, 0
	082 JumpIfEqual {184}
	083 Move X23, 0x778000
	084 Move X8, [X23+1192]
	085 Compare X8, 0
	086 JumpIfNotEqual {92}
	087 Move X0, -51892224
	088 Add X0, X0, 1382
	089 Call 0x1C17CB8
	090 Move X8, X0
	091 Move [X23+1192], X0
	092 Move X0, X22
	093 NotImplemented "Instruction BLR not yet implemented."
	094 Or W8, W0, 4
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Move X0, [X19]
	097 Move W8, [X0+224]
	098 Compare W8, 0
	099 JumpIfNotEqual {101}
	100 Call 0x1C17DFC
	101 Move X0, X21
	102 Call GUILayoutUtility.CreateGUILayoutGroupInstanceOfType, X0
	103 Compare X0, 0
	104 JumpIfEqual {184}
	105 Move X8, [X0]
	106 Move [X0+64], X20
	107 Move X1, X20
	108 Move X21, X0
	109 Move X9, [X8+504]
	110 Move X2, [X8+512]
	111 NotImplemented "Instruction BLR not yet implemented."
	112 Move X8, [X19]
	113 Move X8, [X8+184]
	114 Move X8, [X8+16]
	115 Compare X8, 0
	116 JumpIfEqual {184}
	117 Move X0, [X8+40]
	118 Compare X0, 0
	119 JumpIfEqual {184}
	120 Move X1, X21
	121 Call GUILayoutGroup.Add, X0, X1
	122 Move X0, [X19]
	123 Move W8, [X0+224]
	124 Compare W8, 0
	125 JumpIfNotEqual {128}
	126 Call 0x1C17DFC
	127 Move X0, [X19]
	128 Move X8, [X0+184]
	129 Move X8, [X8+16]
	130 Compare X8, 0
	131 JumpIfEqual {184}
	132 Move X0, [X8+40]
	133 Compare X0, 0
	134 JumpIfEqual {184}
	135 Call GUILayoutGroup.GetNext, X0
	136 Compare X0, 0
	137 JumpIfEqual {185}
	138 Move X8, 0x4F2000
	139 Move X8, [X8+720]
	140 Move X9, [X0]
	141 Move X21, X0
	142 Move X8, [X8]
	143 Move W11, [X9+304]
	144 Move W10, [X8+304]
	145 NotImplemented "Instruction CMP not yet implemented."
	146 Move X9, [X9+200]
	147 Add X9, X9, X10
	148 NotImplemented "Instruction LDUR not yet implemented."
	149 NotImplemented "Instruction CMP not yet implemented."
	150 Move [X21+96], W31
	151 Move X0, [X19]
	152 Move W8, [X0+224]
	153 Compare W8, 0
	154 JumpIfNotEqual {157}
	155 Call 0x1C17DFC
	156 Move X0, [X19]
	157 Move X8, [X0+184]
	158 Move X8, [X8+16]
	159 Compare X8, 0
	160 JumpIfEqual {184}
	161 Move X0, [X8+32]
	162 Compare X0, 0
	163 JumpIfEqual {184}
	164 Move X8, [X0]
	165 Move X1, X21
	166 Move X9, [X8+616]
	167 Move X2, [X8+624]
	168 NotImplemented "Instruction BLR not yet implemented."
	169 Move X8, [X19]
	170 Move X8, [X8+184]
	171 Move X8, [X8+16]
	172 Compare X8, 0
	173 JumpIfEqual {184}
	174 Move [X8+24], X21
	175 Move X0, X21
	176 Move X20, [X31+64]
	177 Move X19, [X31+72]
	178 Move X22, [X31+48]
	179 Move X21, [X31+56]
	180 Move X30, [X31+32]
	181 Move X23, [X31+40]
	182 Add X31, X31, 80
	183 Return X0
	184 Call 0x1C17F20
	185 Call Event.get_current
	186 Move X19, X0
	187 Call 0x19913C0
	188 Move X0, X19
	189 Call Event.get_type, X0
	190 Move W19, W0
	191 Move X0, 0x4AE000
	192 Move X0, [X0+3688]
	193 Call 0x1C17D08
	194 Move TEMP, 0
	195 Not TEMP
	196 Move X8, TEMP
	197 Move [X31+8], X0
	198 Move [X31+16], X8
	199 Add X0, X31, 8
	200 Move X1, X31
	201 Move [X31+24], W19
	202 Call Enum.ToString, X0
	203 Move X19, X0
	204 Move X0, 0x4F2000
	205 Move X0, [X0+744]
	206 Call 0x1C17D08
	207 Move X1, X19
	208 Move X2, X31
	209 Call String.Concat, X0, X1
	210 Move X19, X0
	211 Move X0, 0x4F2000
	212 Move X0, [X0+752]
	213 Call 0x1C17D08
	214 Call 0x1C17F10
	215 Move X1, X19
	216 Move X20, X0
	217 Call ExitGUIException..ctor, X0, X1
	218 Move X0, 0x4F2000
	219 Move X0, [X0+776]
	220 Call 0x1C17D08
	221 Move X1, X0
	222 Move X0, X20
	223 Call 0x1C17DEC

Method: System.Void EndLayoutArea()

Disassembly:
	0x03C6FE94 LDR X1, [X8]
	0x03C6FE98 ADRP X24, 0x4F1000
	0x03C6FE9C ADRP X22, 0x4F1000
	0x03C6FEA0 LDR X23, [X23 + 0x2D0]
	0x03C6FEA4 LDR X24, [X24 + 0x2B0]
	0x03C6FEA8 LDR X22, [X22 + 0x350]
	0x03C6FEAC ADD X8, X31, 0x8
	0x03C6FEB0 BL 0x301CB58
	0x03C6FEB4 LDR X1, [X21]
	0x03C6FEB8 ADD X0, X31, 0x8
	0x03C6FEBC BL 0x2BC4350
	0x03C6FEC0 TBZ X0, 0x0, 0x3C6FF14
	0x03C6FEC4 LDR X20, [X31 + 0x18]
	0x03C6FEC8 CBZ X20, 0x3C6FEF8
	0x03C6FECC LDR X8, [X20]
	0x03C6FED0 LDR X1, [X23]
	0x03C6FED4 LDRB W10, [X8 + 0x130]
	0x03C6FED8 LDRB W9, [X1 + 0x130]
	0x03C6FEDC CMP W10, W9
	0x03C6FEE0 B.CC 0x3C6FF3C
	0x03C6FEE4 LDR X8, [X8 + 0xC8]
	0x03C6FEE8 ADD X8, X8, X9, 0x3, LSL
	0x03C6FEEC LDUR X8, [X8 - 0x8]
	0x03C6FEF0 CMP X8, X1
	0x03C6FEF4 B.NE 0x3C6FF3C
	0x03C6FEF8 LDR X0, [X24]
	0x03C6FEFC LDR W8, [X0 + 0xE0]
	0x03C6FF00 CBNZ W8, 0x3C6FF08
	0x03C6FF04 BL 0x1C16DFC
	0x03C6FF08 MOV X0, X20
	0x03C6FF0C BL 0x3C6FFB4
	0x03C6FF10 B 0x3C6FEB4
	0x03C6FF14 LDR X1, [X22]
	0x03C6FF18 ADD X0, X31, 0x8
	0x03C6FF1C BL 0x2BC434C
	0x03C6FF20 STR W31, [X19 + 0x60]
	0x03C6FF24 LDP X20, X19, [X31 + 0x50]
	0x03C6FF28 LDP X22, X21, [X31 + 0x40]
	0x03C6FF2C LDP X24, X23, [X31 + 0x30]
	0x03C6FF30 LDR X30, [X31 + 0x20]
	0x03C6FF34 ADD X31, X31, 0x60
	0x03C6FF38 RET
	0x03C6FF3C MOV X0, X20
	0x03C6FF40 BL 0x1C171E0
	0x03C6FF44 BL 0x1C16F20
	0x03C6FF48 B 0x3C6FF50
	0x03C6FF4C B 0x3C6FF50
	0x03C6FF50 MOV X20, X0
	0x03C6FF54 CMP W1, 0x1
	0x03C6FF58 B.NE 0x3C6FF84
	0x03C6FF5C MOV X0, X20
	0x03C6FF60 BL 0x3EB1AD0
	0x03C6FF64 LDR X21, [X0]
	0x03C6FF68 BL 0x3EB1AE0
	0x03C6FF6C LDR X1, [X22]
	0x03C6FF70 ADD X0, X31, 0x8
	0x03C6FF74 BL 0x2BC434C
	0x03C6FF78 CBZ X21, 0x3C6FF20
	0x03C6FF7C MOV X0, X21
	0x03C6FF80 BL 0x1C16F18
	0x03C6FF84 MOV X21, X31
	0x03C6FF88 B 0x3C6FF90
	0x03C6FF8C MOV X20, X0
	0x03C6FF90 LDR X1, [X22]
	0x03C6FF94 ADD X0, X31, 0x8
	0x03C6FF98 BL 0x2BC434C
	0x03C6FF9C CBNZ X21, 0x3C6FFA8
	0x03C6FFA0 MOV X0, X20
	0x03C6FFA4 BL 0x1D2C690
	0x03C6FFA8 MOV X0, X21
	0x03C6FFAC BL 0x1C16F18
	0x03C6FFB0 BL 0x1990590
	0x03C6FFB4 STP D9, D8, [X31 - 0x30]!
	0x03C6FFB8 STR X30, [X31 + 0x10]
	0x03C6FFBC STP X20, X19, [X31 + 0x20]
	0x03C6FFC0 ADRP X20, 0x777000
	0x03C6FFC4 LDRB W8, [X20 + 0x6A1]
	0x03C6FFC8 MOV X19, X0
	0x03C6FFCC TBNZ X8, 0x0, 0x3C6FFE4
	0x03C6FFD0 ADRP X0, 0x4F1000
	0x03C6FFD4 LDR X0, [X0 + 0x2B0]
	0x03C6FFD8 BL 0x1C16CF4
	0x03C6FFDC MOVZ W8, 0x1
	0x03C6FFE0 STRB W8, [X20 + 0x6A1]
	0x03C6FFE4 CBZ X19, 0x3C70128
	0x03C6FFE8 LDRB W8, [X19 + 0x59]
	0x03C6FFEC CBZ W8, 0x3C700A4
	0x03C6FFF0 LDR X8, [X19]
	0x03C6FFF4 ADRP X20, 0x4F1000
	0x03C6FFF8 MOV X0, X19
	0x03C6FFFC LDP X9, X1, [X8 + 0x1B8]
	0x03C70000 LDR X20, [X20 + 0x2B0]
	0x03C70004 BLR X9
	0x03C70008 LDR X0, [X20]
	0x03C7000C LDR W20, [X19 + 0x5C]
	0x03C70010 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x778000
	006 Move X19, 0x4F2000
	007 Move W8, [X20+1702]
	008 Move X19, [X19+688]
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x4F2000
	014 Move X0, [X0+720]
	015 Call 0x1C17CF4
	016 Move X0, 0x4F2000
	017 Move X0, [X0+688]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+1702], W8
	021 Move X0, [X19]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X20, 0x778000
	027 Move W8, [X20+2435]
	028 Compare W8, 0
	029 JumpIfNotEqual {35}
	030 Move X0, 0x4F2000
	031 Move X0, [X0+688]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X20+2435], W8
	035 Move X0, [X19]
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {41}
	039 Call 0x1C17DFC
	040 Move X0, [X19]
	041 Move X8, [X0+184]
	042 Move X21, 0x778000
	043 Move W9, [X21+2436]
	044 Move W20, [X8+40]
	045 Compare W9, 0
	046 JumpIfNotEqual {52}
	047 Move X0, X19
	048 Call 0x1C17CF4
	049 Move X0, [X19]
	050 Move W8, 1
	051 Move [X21+2436], W8
	052 Move W8, [X0+224]
	053 Subtract W20, W20, 1
	054 Compare W8, 0
	055 JumpIfNotEqual {58}
	056 Call 0x1C17DFC
	057 Move X0, [X19]
	058 Move X9, [X0+184]
	059 Move X8, [X9+16]
	060 Move [X9+40], W20
	061 Compare X8, 0
	062 JumpIfEqual {109}
	063 Move X0, [X8+32]
	064 Compare X0, 0
	065 JumpIfEqual {109}
	066 Move X8, [X0]
	067 Move X9, [X8+600]
	068 Move X1, [X8+608]
	069 NotImplemented "Instruction BLR not yet implemented."
	070 Move X8, [X19]
	071 Move X8, [X8+184]
	072 Move X19, [X8+16]
	073 Compare X19, 0
	074 JumpIfEqual {109}
	075 Move X0, [X19+32]
	076 Compare X0, 0
	077 JumpIfEqual {109}
	078 Move X8, [X0]
	079 Move X9, [X8+584]
	080 Move X1, [X8+592]
	081 NotImplemented "Instruction BLR not yet implemented."
	082 Compare X0, 0
	083 JumpIfEqual {103}
	084 Move X8, 0x4F2000
	085 Move X8, [X8+720]
	086 Move X9, [X0]
	087 Move X1, [X8]
	088 Move W10, [X9+304]
	089 Move W8, [X1+304]
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Move X10, [X9+200]
	092 Subtract X9, X8, 1
	093 Move X10, [X10]
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Move [X19+24], X0
	096 Move X10, [X0]
	097 Move W11, [X10+304]
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Move X8, [X10+200]
	100 Move X8, [X8]
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Call 0x1C181E0
	103 Move [X19+24], X31
	104 Move X20, [X31+16]
	105 Move X19, [X31+24]
	106 Move X30, [X31+32]
	107 Move X21, [X31+40]
	108 Return 
	109 Call 0x1C17F20

Method: UnityEngine.Rect GetRect(UnityEngine.GUIContent content, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options)

Disassembly:
	0x03C6E33C MOVZ W8, 0x1
	0x03C6E340 STRB W8, [X20 + 0x6A4]
	0x03C6E344 LDR X0, [X19]
	0x03C6E348 LDR W8, [X0 + 0xE0]
	0x03C6E34C CBNZ W8, 0x3C6E354
	0x03C6E350 BL 0x1C16DFC
	0x03C6E354 ADRP X20, 0x778000
	0x03C6E358 LDRB W8, [X20 + 0x983]
	0x03C6E35C CBNZ W8, 0x3C6E374
	0x03C6E360 ADRP X0, 0x4F2000
	0x03C6E364 LDR X0, [X0 + 0x2B0]
	0x03C6E368 BL 0x1C16CF4
	0x03C6E36C MOVZ W8, 0x1
	0x03C6E370 STRB W8, [X20 + 0x983]
	0x03C6E374 LDR X0, [X19]
	0x03C6E378 LDR W8, [X0 + 0xE0]
	0x03C6E37C CBNZ W8, 0x3C6E388
	0x03C6E380 BL 0x1C16DFC
	0x03C6E384 LDR X0, [X19]
	0x03C6E388 LDR X8, [X0 + 0xB8]
	0x03C6E38C ADRP X21, 0x778000
	0x03C6E390 LDRB W9, [X21 + 0x984]
	0x03C6E394 LDR W20, [X8 + 0x28]
	0x03C6E398 CBNZ W9, 0x3C6E3B0
	0x03C6E39C MOV X0, X19
	0x03C6E3A0 BL 0x1C16CF4
	0x03C6E3A4 LDR X0, [X19]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x779000
	008 Move X23, 0x4F3000
	009 Move W8, [X22+1703]
	010 Move X23, [X23+688]
	011 Move X19, X2
	012 Move X20, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x4F3000
	019 Move X0, [X0+688]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+1703], W8
	023 Move X0, [X23]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, X21
	029 Move X1, X20
	030 Move X2, X19
	031 Move X20, [X31+32]
	032 Move X19, [X31+40]
	033 Move X22, [X31+16]
	034 Move X21, [X31+24]
	035 Move X30, [X31+48]
	036 Move X23, [X31+56]
	037 Call GUILayoutUtility.DoGetRect, X0, X1, X2
	038 Return X0

Method: UnityEngine.Rect DoGetRect(UnityEngine.GUIContent content, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options)

Disassembly:
	0x03C71A68 TBNZ X8, 0x0, 0x3C71BE8
	0x03C71A6C ADRP X0, 0x4EF000
	0x03C71A70 LDR X0, [X0 + 0x408]
	0x03C71A74 BL 0x1C16CF4
	0x03C71A78 ADRP X0, 0x4EF000
	0x03C71A7C LDR X0, [X0 + 0x410]
	0x03C71A80 BL 0x1C16CF4
	0x03C71A84 ADRP X0, 0x4EF000
	0x03C71A88 LDR X0, [X0 + 0x418]
	0x03C71A8C BL 0x1C16CF4
	0x03C71A90 ADRP X0, 0x4EF000
	0x03C71A94 LDR X0, [X0 + 0x420]
	0x03C71A98 BL 0x1C16CF4
	0x03C71A9C ADRP X0, 0x4A9000
	0x03C71AA0 LDR X0, [X0 + 0x890]
	0x03C71AA4 BL 0x1C16CF4
	0x03C71AA8 ADRP X0, 0x48F000
	0x03C71AAC LDR X0, [X0 + 0x2F0]
	0x03C71AB0 BL 0x1C16CF4
	0x03C71AB4 ADRP X0, 0x4EF000
	0x03C71AB8 LDR X0, [X0 + 0x428]
	0x03C71ABC BL 0x1C16CF4
	0x03C71AC0 ADRP X0, 0x4EF000
	0x03C71AC4 LDR X0, [X0 + 0x430]
	0x03C71AC8 BL 0x1C16CF4
	0x03C71ACC ADRP X0, 0x4D5000
	0x03C71AD0 LDR X0, [X0 + 0xED0]
	0x03C71AD4 BL 0x1C16CF4
	0x03C71AD8 ADRP X0, 0x4EF000
	0x03C71ADC LDR X0, [X0 + 0x438]
	0x03C71AE0 BL 0x1C16CF4
	0x03C71AE4 ADRP X0, 0x4EF000
	0x03C71AE8 LDR X0, [X0 + 0x440]
	0x03C71AEC BL 0x1C16CF4
	0x03C71AF0 ADRP X0, 0x4EF000
	0x03C71AF4 LDR X0, [X0 + 0x448]
	0x03C71AF8 BL 0x1C16CF4
	0x03C71AFC ADRP X0, 0x4EF000
	0x03C71B00 LDR X0, [X0 + 0x450]
	0x03C71B04 BL 0x1C16CF4
	0x03C71B08 ADRP X0, 0x4EF000
	0x03C71B0C LDR X0, [X0 + 0x458]
	0x03C71B10 BL 0x1C16CF4
	0x03C71B14 ADRP X0, 0x4EF000
	0x03C71B18 LDR X0, [X0 + 0x460]
	0x03C71B1C BL 0x1C16CF4
	0x03C71B20 ADRP X0, 0x4EF000
	0x03C71B24 LDR X0, [X0 + 0x468]
	0x03C71B28 BL 0x1C16CF4
	0x03C71B2C ADRP X0, 0x4EF000
	0x03C71B30 LDR X0, [X0 + 0x470]
	0x03C71B34 BL 0x1C16CF4
	0x03C71B38 ADRP X0, 0x4AC000
	0x03C71B3C LDR X0, [X0 + 0xC58]
	0x03C71B40 BL 0x1C16CF4
	0x03C71B44 ADRP X0, 0x4EF000
	0x03C71B48 LDR X0, [X0 + 0x478]
	0x03C71B4C BL 0x1C16CF4
	0x03C71B50 ADRP X0, 0x4EF000
	0x03C71B54 LDR X0, [X0 + 0x480]
	0x03C71B58 BL 0x1C16CF4
	0x03C71B5C ADRP X0, 0x4EF000
	0x03C71B60 LDR X0, [X0 + 0x488]
	0x03C71B64 BL 0x1C16CF4
	0x03C71B68 ADRP X0, 0x4EF000
	0x03C71B6C LDR X0, [X0 + 0x490]
	0x03C71B70 BL 0x1C16CF4
	0x03C71B74 ADRP X0, 0x4EF000
	0x03C71B78 LDR X0, [X0 + 0x498]
	0x03C71B7C BL 0x1C16CF4
	0x03C71B80 ADRP X0, 0x4EF000
	0x03C71B84 LDR X0, [X0 + 0x4A0]
	0x03C71B88 BL 0x1C16CF4
	0x03C71B8C ADRP X0, 0x4EF000
	0x03C71B90 LDR X0, [X0 + 0x4A8]
	0x03C71B94 BL 0x1C16CF4
	0x03C71B98 ADRP X0, 0x4EF000
	0x03C71B9C LDR X0, [X0 + 0x4B0]
	0x03C71BA0 BL 0x1C16CF4
	0x03C71BA4 ADRP X0, 0x4EF000
	0x03C71BA8 LDR X0, [X0 + 0x4B8]
	0x03C71BAC BL 0x1C16CF4
	0x03C71BB0 ADRP X0, 0x4EF000
	0x03C71BB4 LDR X0, [X0 + 0x4C0]
	0x03C71BB8 BL 0x1C16CF4
	0x03C71BBC ADRP X0, 0x4EF000
	0x03C71BC0 LDR X0, [X0 + 0x4C8]
	0x03C71BC4 BL 0x1C16CF4
	0x03C71BC8 ADRP X0, 0x4EF000
	0x03C71BCC LDR X0, [X0 + 0x4D0]
	0x03C71BD0 BL 0x1C16CF4
	0x03C71BD4 ADRP X0, 0x4EF000
	0x03C71BD8 LDR X0, [X0 + 0x4D8]
	0x03C71BDC BL 0x1C16CF4
	0x03C71BE0 MOVZ W8, 0x1
	0x03C71BE4 STRB W8, [X20 + 0x6D5]
	0x03C71BE8 LDR X8, [X19 + 0x20]
	0x03C71BEC CBNZ X8, 0x3C71C0C
	0x03C71BF0 ADRP X8, 0x4A9000
	0x03C71BF4 LDR X8, [X8 + 0x890]
	0x03C71BF8 LDR X0, [X8]
	0x03C71BFC BL 0x1C16F10
	0x03C71C00 MOV X20, X0
	0x03C71C04 BL 0x3C71974
	0x03C71C08 STR X20, [X19 + 0x20]
	0x03C71C0C LDR X8, [X19 + 0x28]
	0x03C71C10 CBNZ X8, 0x3C71C30
	0x03C71C14 ADRP X8, 0x4A9000
	0x03C71C18 LDR X8, [X8 + 0x890]
	0x03C71C1C LDR X0, [X8]
	0x03C71C20 BL 0x1C16F10
	0x03C71C24 MOV X20, X0
	0x03C71C28 BL 0x3C71974
	0x03C71C2C STR X20, [X19 + 0x28]
	0x03C71C30 LDR X8, [X19 + 0x30]
	0x03C71C34 CBNZ X8, 0x3C71C54
	0x03C71C38 ADRP X8, 0x4A9000
	0x03C71C3C LDR X8, [X8 + 0x890]
	0x03C71C40 LDR X0, [X8]
	0x03C71C44 BL 0x1C16F10
	0x03C71C48 MOV X20, X0
	0x03C71C4C BL 0x3C71974
	0x03C71C50 STR X20, [X19 + 0x30]
	0x03C71C54 LDR X8, [X19 + 0x38]
	0x03C71C58 CBNZ X8, 0x3C71C78
	0x03C71C5C ADRP X8, 0x4A9000
	0x03C71C60 LDR X8, [X8 + 0x890]
	0x03C71C64 LDR X0, [X8]
	0x03C71C68 BL 0x1C16F10
	0x03C71C6C MOV X20, X0
	0x03C71C70 BL 0x3C71974
	0x03C71C74 STR X20, [X19 + 0x38]
	0x03C71C78 LDR X8, [X19 + 0x50]
	0x03C71C7C CBNZ X8, 0x3C71C9C
	0x03C71C80 ADRP X8, 0x4A9000
	0x03C71C84 LDR X8, [X8 + 0x890]
	0x03C71C88 LDR X0, [X8]
	0x03C71C8C BL 0x1C16F10
	0x03C71C90 MOV X20, X0
	0x03C71C94 BL 0x3C71974
	0x03C71C98 STR X20, [X19 + 0x50]
	0x03C71C9C LDR X8, [X19 + 0x40]
	0x03C71CA0 CBNZ X8, 0x3C71CC0
	0x03C71CA4 ADRP X8, 0x4A9000
	0x03C71CA8 LDR X8, [X8 + 0x890]
	0x03C71CAC LDR X0, [X8]
	0x03C71CB0 BL 0x1C16F10
	0x03C71CB4 MOV X20, X0
	0x03C71CB8 BL 0x3C71974
	0x03C71CBC STR X20, [X19 + 0x40]
	0x03C71CC0 LDR X8, [X19 + 0x48]
	0x03C71CC4 CBNZ X8, 0x3C71CE4
	0x03C71CC8 ADRP X8, 0x4A9000
	0x03C71CCC LDR X8, [X8 + 0x890]
	0x03C71CD0 LDR X0, [X8]
	0x03C71CD4 BL 0x1C16F10
	0x03C71CD8 MOV X20, X0
	0x03C71CDC BL 0x3C71974
	0x03C71CE0 STR X20, [X19 + 0x48]
	0x03C71CE4 LDR X8, [X19 + 0x58]
	0x03C71CE8 CBNZ X8, 0x3C71D08
	0x03C71CEC ADRP X8, 0x4A9000
	0x03C71CF0 LDR X8, [X8 + 0x890]
	0x03C71CF4 LDR X0, [X8]
	0x03C71CF8 BL 0x1C16F10
	0x03C71CFC MOV X20, X0
	0x03C71D00 BL 0x3C71974
	0x03C71D04 STR X20, [X19 + 0x58]
	0x03C71D08 LDR X8, [X19 + 0x60]
	0x03C71D0C CBNZ X8, 0x3C71D2C
	0x03C71D10 ADRP X8, 0x4A9000
	0x03C71D14 LDR X8, [X8 + 0x890]
	0x03C71D18 LDR X0, [X8]
	0x03C71D1C BL 0x1C16F10
	0x03C71D20 MOV X20, X0
	0x03C71D24 BL 0x3C71974
	0x03C71D28 STR X20, [X19 + 0x60]
	0x03C71D2C LDR X8, [X19 + 0x70]
	0x03C71D30 CBNZ X8, 0x3C71D50
	0x03C71D34 ADRP X8, 0x4A9000
	0x03C71D38 LDR X8, [X8 + 0x890]
	0x03C71D3C LDR X0, [X8]
	0x03C71D40 BL 0x1C16F10
	0x03C71D44 MOV X20, X0
	0x03C71D48 BL 0x3C71974
	0x03C71D4C STR X20, [X19 + 0x70]
	0x03C71D50 LDR X8, [X19 + 0x78]
	0x03C71D54 CBNZ X8, 0x3C71D74
	0x03C71D58 ADRP X8, 0x4A9000
	0x03C71D5C LDR X8, [X8 + 0x890]
	0x03C71D60 LDR X0, [X8]
	0x03C71D64 BL 0x1C16F10
	0x03C71D68 MOV X20, X0
	0x03C71D6C BL 0x3C71974
	0x03C71D70 STR X20, [X19 + 0x78]
	0x03C71D74 LDR X8, [X19 + 0x90]
	0x03C71D78 CBNZ X8, 0x3C71D98
	0x03C71D7C ADRP X8, 0x4A9000
	0x03C71D80 LDR X8, [X8 + 0x890]
	0x03C71D84 LDR X0, [X8]
	0x03C71D88 BL 0x1C16F10
	0x03C71D8C MOV X20, X0
	0x03C71D90 BL 0x3C71974
	0x03C71D94 STR X20, [X19 + 0x90]
	0x03C71D98 LDR X8, [X19 + 0x98]
	0x03C71D9C CBNZ X8, 0x3C71DBC
	0x03C71DA0 ADRP X8, 0x4A9000
	0x03C71DA4 LDR X8, [X8 + 0x890]
	0x03C71DA8 LDR X0, [X8]
	0x03C71DAC BL 0x1C16F10
	0x03C71DB0 MOV X20, X0
	0x03C71DB4 BL 0x3C71974
	0x03C71DB8 STR X20, [X19 + 0x98]
	0x03C71DBC LDR X8, [X19 + 0xA0]
	0x03C71DC0 CBNZ X8, 0x3C71DE0
	0x03C71DC4 ADRP X8, 0x4A9000
	0x03C71DC8 LDR X8, [X8 + 0x890]
	0x03C71DCC LDR X0, [X8]
	0x03C71DD0 BL 0x1C16F10

ISIL:
	001 Move [X31-80], D9
	002 Move [X31-72], D8
	003 Move [X31+16], X30
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X22, 0x776000
	011 Move X23, 0x4AF000
	012 Move W8, [X22+1704]
	013 Move X23, [X23+1480]
	014 Move X19, X2
	015 Move X20, X1
	016 Move X21, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {38}
	021 Move X0, 0x4F0000
	022 Move X0, [X0+840]
	023 Call 0x1C17CF4
	024 Move X0, 0x4F0000
	025 Move X0, [X0+688]
	026 Call 0x1C17CF4
	027 Move X0, 0x4AF000
	028 Move X0, [X0+1480]
	029 Call 0x1C17CF4
	030 Move X0, 0x4F0000
	031 Move X0, [X0+976]
	032 Call 0x1C17CF4
	033 Move X0, 0x483000
	034 Move X0, [X0+2704]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X22+1704], W8
	038 Move X0, [X23]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 Call GUIUtility.CheckOnGUI
	044 Move X22, 0x776000
	045 Move X23, 0x4E9000
	046 Move W8, [X22+1296]
	047 Move X23, [X23+32]
	048 Move TEMP, X8
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfEqual {57}
	052 Move X0, 0x4E9000
	053 Move X0, [X0+32]
	054 Call 0x1C17CF4
	055 Move W8, 1
	056 Move [X22+1296], W8
	057 Move X8, [X23]
	058 Move X8, [X8+184]
	059 Move X22, [X8]
	060 Compare X22, 0
	061 JumpIfEqual {240}
	062 Move X23, 0x776000
	063 Move X8, [X23+1192]
	064 Compare X8, 0
	065 JumpIfNotEqual {71}
	066 Move X0, -51900416
	067 Add X0, X0, 1382
	068 Call 0x1C17CB8
	069 Move X8, X0
	070 Move [X23+1192], X0
	071 Move X0, X22
	072 NotImplemented "Instruction BLR not yet implemented."
	073 NotImplemented "Instruction CMP not yet implemented."
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Compare X20, 0
	076 JumpIfEqual {240}
	077 Move X0, X20
	078 Call GUIStyle.get_isHeightDependantOnWidth, X0
	079 Move TEMP, X0
	080 And TEMP, TEMP, 1
	081 Compare TEMP, 1
	082 JumpIfNotEqual {131}
	083 Move X22, 0x4F0000
	084 Move X22, [X22+688]
	085 Move X0, [X22]
	086 Move W8, [X0+224]
	087 Compare W8, 0
	088 JumpIfNotEqual {91}
	089 Call 0x1C17DFC
	090 Move X0, [X22]
	091 Move X8, [X0+184]
	092 Move X8, [X8+16]
	093 Compare X8, 0
	094 JumpIfEqual {240}
	095 Move X22, [X8+24]
	096 Move X8, 0x4F0000
	097 Move X8, [X8+976]
	098 Move X0, [X8]
	099 Call 0x1C17F10
	100 Move X1, X20
	101 Move X2, X21
	102 Move X3, X19
	103 Move X23, X0
	104 Call GUIWordWrapSizer..ctor, X0, X1, X2, X3
	105 Compare X22, 0
	106 JumpIfEqual {240}
	107 Move X0, X22
	108 Move X1, X23
	109 Move X19, 0x4F0000
	110 Move X19, [X19+688]
	111 Move X0, [X19]
	112 Move W8, [X0+224]
	113 Compare W8, 0
	114 JumpIfNotEqual {117}
	115 Call 0x1C17DFC
	116 Move X0, [X19]
	117 Move X8, [X0+184]
	118 Move X8, [X8+16]
	119 Compare X8, 0
	120 JumpIfEqual {240}
	121 Move X0, [X8+24]
	122 Compare X0, 0
	123 JumpIfEqual {240}
	124 Call GUILayoutGroup.GetNext, X0
	125 Compare X0, 0
	126 JumpIfEqual {240}
	127 Add X8, X0, 32
	128 Add X9, X0, 36
	129 Add X10, X0, 40
	130 Add X11, X0, 44
	131 Move S8, W31
	132 Compare X19, 0
	133 JumpIfEqual {173}
	134 Move W8, [X19+24]
	135 Move S9, W31
	136 NotImplemented "Instruction CMP not yet implemented."
	137 Move X24, 0x483000
	138 Move X24, [X24+2704]
	139 Move X22, X31
	140 Add X23, X19, 32
	141 Move S9, W31
	142 Move S8, W31
	143 NotImplemented "Instruction CMP not yet implemented."
	144 Move X8, [X23]
	145 Compare X8, 0
	146 JumpIfEqual {240}
	147 Move W9, [X8+16]
	148 NotImplemented "Instruction CMP not yet implemented."
	149 NotImplemented "Instruction CMP not yet implemented."
	150 Move X0, [X8+24]
	151 Compare X0, 0
	152 JumpIfEqual {240}
	153 Move X8, [X0]
	154 Move X1, [X24]
	155 Move X8, [X8+64]
	156 Move X9, [X1+64]
	157 NotImplemented "Instruction CMP not yet implemented."
	158 Call 0x1C17E08
	159 Move V8, [X0]
	160 Move X0, [X8+24]
	161 Compare X0, 0
	162 JumpIfEqual {240}
	163 Move X8, [X0]
	164 Move X1, [X24]
	165 Move X8, [X8+64]
	166 Move X9, [X1+64]
	167 NotImplemented "Instruction CMP not yet implemented."
	168 Call 0x1C17E08
	169 Move V9, [X0]
	170 Move W8, [X19+24]
	171 Add X22, X22, 1
	172 NotImplemented "Instruction CMP not yet implemented."
	173 Move S9, W31
	174 Move X0, X20
	175 Move X1, X21
	176 Move V0, V9
	177 Move V1, V8
	178 Call GUIStyle.Internal_CalcSizeWithConstraints, X0, X1, X2
	179 Move X21, 0x4F0000
	180 Move X21, [X21+688]
	181 Move V8, V0
	182 Move V9, V1
	183 Move X0, [X21]
	184 Move W8, [X0+224]
	185 Compare W8, 0
	186 JumpIfNotEqual {189}
	187 Call 0x1C17DFC
	188 Move X0, [X21]
	189 Move X8, [X0+184]
	190 Move X8, [X8+16]
	191 Compare X8, 0
	192 JumpIfEqual {240}
	193 Move X21, [X8+24]
	194 Move X8, 0x4F0000
	195 Move X8, [X8+840]
	196 NotImplemented "Instruction FRINTP not yet implemented."
	197 NotImplemented "Instruction FRINTP not yet implemented."
	198 Move X0, [X8]
	199 Call 0x1C17F10
	200 Move V0, V8
	201 Move V1, V8
	202 Move V2, V9
	203 Move V3, V9
	204 Move X1, X20
	205 Move X2, X19
	206 Move X22, X0
	207 Call GUILayoutEntry..ctor, X0, V0, V1, V2, V3, X1, X2
	208 Compare X21, 0
	209 JumpIfEqual {240}
	210 Move X0, X21
	211 Move X1, X22
	212 Call GUILayoutGroup.Add, X0, X1
	213 Move X19, 0x4F0000
	214 Move X19, [X19+688]
	215 Move X0, [X19]
	216 Move W8, [X0+224]
	217 Compare W8, 0
	218 JumpIfNotEqual {221}
	219 Call 0x1C17DFC
	220 Move X0, [X19]
	221 Move X11, [X0+184]
	222 Add X8, X11, 24
	223 Add X9, X11, 28
	224 Add X10, X11, 32
	225 Add X11, X11, 36
	226 Move V0, [X8]
	227 Move V1, [X9]
	228 Move V2, [X10]
	229 Move V3, [X11]
	230 Move X20, [X31+64]
	231 Move X19, [X31+72]
	232 Move X22, [X31+48]
	233 Move X21, [X31+56]
	234 Move X24, [X31+32]
	235 Move X23, [X31+40]
	236 Move X30, [X31+16]
	237 Move D9, [X31+80]
	238 Move D8, [X31+88]
	239 Return X0
	240 Call 0x1C17F20
	241 Call 0x1C17F28
	242 Call 0x1C181E0

Method: System.Void .cctor()

Disassembly:
	0x03C7202C CBNZ X8, 0x3C72044
	0x03C72030 ADRP X0, 0xFFFFFFFFFCE93000
	0x03C72034 ADD X0, X0, 0x5DA
	0x03C72038 BL 0x1C16CB8
	0x03C7203C MOV X8, X0
	0x03C72040 STR X0, [X23 + 0x720]
	0x03C72044 MOV X0, X20
	0x03C72048 MOV X1, X21
	0x03C7204C BLR X8
	0x03C72050 LDR X0, [X25]
	0x03C72054 CBZ X0, 0x3C7290C
	0x03C72058 ADRP X21, 0x4AB000
	0x03C7205C LDR X21, [X21 + 0xC58]
	0x03C72060 LDR X2, [X19 + 0x38]
	0x03C72064 LDR X3, [X24]
	0x03C72068 LDR X1, [X21]
	0x03C7206C BL 0x2AA5084
	0x03C72070 LDR X20, [X19 + 0x38]
	0x03C72074 CBZ X20, 0x3C7290C
	0x03C72078 LDR X21, [X21]
	0x03C7207C STR X21, [X20 + 0x78]
	0x03C72080 LDR X8, [X23 + 0x720]
	0x03C72084 CBNZ X8, 0x3C7209C
	0x03C72088 ADRP X0, 0xFFFFFFFFFCE93000
	0x03C7208C ADD X0, X0, 0x5DA
	0x03C72090 BL 0x1C16CB8
	0x03C72094 MOV X8, X0
	0x03C72098 STR X0, [X23 + 0x720]
	0x03C7209C MOV X0, X20
	0x03C720A0 MOV X1, X21
	0x03C720A4 BLR X8
	0x03C720A8 LDR X0, [X25]
	0x03C720AC CBZ X0, 0x3C7290C
	0x03C720B0 ADRP X21, 0x4EE000
	0x03C720B4 LDR X21, [X21 + 0x4D0]
	0x03C720B8 LDR X2, [X19 + 0x50]
	0x03C720BC LDR X3, [X24]
	0x03C720C0 LDR X1, [X21]
	0x03C720C4 BL 0x2AA5084
	0x03C720C8 LDR X20, [X19 + 0x50]
	0x03C720CC CBZ X20, 0x3C7290C
	0x03C720D0 LDR X21, [X21]
	0x03C720D4 STR X21, [X20 + 0x78]
	0x03C720D8 LDR X8, [X23 + 0x720]
	0x03C720DC CBNZ X8, 0x3C720F4
	0x03C720E0 ADRP X0, 0xFFFFFFFFFCE93000
	0x03C720E4 ADD X0, X0, 0x5DA
	0x03C720E8 BL 0x1C16CB8
	0x03C720EC MOV X8, X0
	0x03C720F0 STR X0, [X23 + 0x720]
	0x03C720F4 MOV X0, X20
	0x03C720F8 MOV X1, X21
	0x03C720FC BLR X8
	0x03C72100 LDR X0, [X25]
	0x03C72104 CBZ X0, 0x3C7290C
	0x03C72108 ADRP X21, 0x4EE000
	0x03C7210C LDR X21, [X21 + 0x428]
	0x03C72110 LDR X2, [X19 + 0x40]
	0x03C72114 LDR X3, [X24]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X19, 0x775000
	008 Move X23, 0x4EF000
	009 Move X22, 0x4EF000
	010 Move X20, 0x4EF000
	011 Move X21, 0x4EF000
	012 Move W8, [X19+1705]
	013 Move X23, [X23+984]
	014 Move X22, [X22+992]
	015 Move X20, [X20+688]
	016 Move X21, [X21+704]
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {35}
	021 Move X0, 0x4EF000
	022 Move X0, [X0+992]
	023 Call 0x1C17CF4
	024 Move X0, 0x4EF000
	025 Move X0, [X0+984]
	026 Call 0x1C17CF4
	027 Move X0, 0x4EF000
	028 Move X0, [X0+688]
	029 Call 0x1C17CF4
	030 Move X0, 0x4EF000
	031 Move X0, [X0+704]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X19+1705], W8
	035 Move X0, [X23]
	036 Call 0x1C17F10
	037 Move X1, [X22]
	038 Move X19, X0
	039 Call Dictionary`2<Int32, Object>..ctor, X0
	040 Move X8, [X20]
	041 Move X8, [X8+184]
	042 Move [X8], X19
	043 Move X0, [X23]
	044 Call 0x1C17F10
	045 Move X1, [X22]
	046 Move X19, X0
	047 Call Dictionary`2<Int32, Object>..ctor, X0
	048 Move X8, [X20]
	049 Move X8, [X8+184]
	050 Move [X8+8], X19
	051 Move X0, [X21]
	052 Call 0x1C17F10
	053 Move TEMP, 0
	054 Not TEMP
	055 Move W1, TEMP
	056 Move X19, X0
	057 Call LayoutCache..ctor, X0, X1
	058 Move X8, [X20]
	059 Move X9, -51933184
	060 Move V0, [X9+188]
	061 Move X22, [X31+16]
	062 Move X21, [X31+24]
	063 Move X8, [X8+184]
	064 Move [X8+16], X19
	065 Move X20, [X31+32]
	066 Move X19, [X31+40]
	067 Move [X8+24], V0
	068 Move X30, [X31+48]
	069 Move X23, [X31+56]
	070 Return 

Method: System.Void Internal_GetWindowRect_Injected(System.Int32 windowID, out UnityEngine.Rect ret)

Disassembly:
	0x03C7058C ADD X8, X8, X9, 0x3, LSL
	0x03C70590 LDUR X8, [X8 - 0x8]
	0x03C70594 CMP X8, X1
	0x03C70598 B.NE 0x3C705AC
	0x03C7059C LDP X20, X19, [X31 + 0x20]
	0x03C705A0 LDP X22, X21, [X31 + 0x10]
	0x03C705A4 LDR X30, [X31], #0x30
	0x03C705A8 RET
	0x03C705AC BL 0x1C171E0
	0x03C705B0 BL 0x1C16F20
	0x03C705B4 ADRP X0, 0x48B000
	0x03C705B8 LDR X0, [X0 + 0x578]
	0x03C705BC BL 0x1C16D08
	0x03C705C0 BL 0x1C16F10
	0x03C705C4 MOV X19, X0
	0x03C705C8 ADRP X0, 0x4F0000
	0x03C705CC LDR X0, [X0 + 0x378]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x777000
	006 Move X2, [X21+1712]
	007 Move X19, X1
	008 Move W20, W0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51798016
	012 Add X0, X0, 2390
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+1712], X0
	016 Move W0, W20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void Internal_MoveWindow_Injected(System.Int32 windowID, ref UnityEngine.Rect r)

Disassembly:
	0x03C7065C ADD W10, W10, 0x1
	0x03C70660 STR W10, [X0 + 0x1C]
	0x03C70664 CBZ X8, 0x3C706B0
	0x03C70668 LDRSW X10, [X0 + 0x18]
	0x03C7066C LDR W11, [X8 + 0x18]
	0x03C70670 CMP W10, W11
	0x03C70674 B.CS 0x3C70694
	0x03C70678 ADD W9, W10, 0x1
	0x03C7067C ADD X8, X8, X10, 0x3, LSL
	0x03C70680 STR W9, [X0 + 0x18]
	0x03C70684 STR X19, [X8 + 0x20]
	0x03C70688 LDP X20, X19, [X31 + 0x10]
	0x03C7068C LDP X30, X21, [X31], #0x20
	0x03C70690 RET
	0x03C70694 LDR X8, [X9 + 0x20]
	0x03C70698 MOV X1, X19
	0x03C7069C LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x777000
	006 Move X2, [X21+1720]
	007 Move X19, X1
	008 Move W20, W0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51888128
	012 Add X0, X0, 2351
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+1720], X0
	016 Move W0, W20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

