Type: UnityEngine.GUIStateObjects

Method: System.Object GetStateObject(System.Type t, System.Int32 controlID)

Disassembly:
	0x03C73E48 STR X0, [X22 + 0x828]
	0x03C73E4C ADD X1, X31, 0x0
	0x03C73E50 ADD X4, X31, 0x18
	0x03C73E54 MOV X0, X21
	0x03C73E58 MOV X2, X20
	0x03C73E5C MOV W3, W19
	0x03C73E60 BLR X8
	0x03C73E64 LDP S0, S1, [X31 + 0x18]
	0x03C73E68 LDP X20, X19, [X31 + 0x30]
	0x03C73E6C LDP X22, X21, [X31 + 0x20]
	0x03C73E70 LDR X30, [X31 + 0x10]
	0x03C73E74 ADD X31, X31, 0x40
	0x03C73E78 RET
	0x03C73E7C STR X30, [X31 - 0x40]!
	0x03C73E80 STP X24, X23, [X31 + 0x10]
	0x03C73E84 STP X22, X21, [X31 + 0x20]
	0x03C73E88 STP X20, X19, [X31 + 0x30]
	0x03C73E8C ADRP X24, 0x773000
	0x03C73E90 LDR X5, [X24 + 0x828]
	0x03C73E94 MOV X19, X4
	0x03C73E98 MOV W20, W3
	0x03C73E9C MOV X21, X2
	0x03C73EA0 MOV X22, X1
	0x03C73EA4 MOV X23, X0
	0x03C73EA8 CBNZ X5, 0x3C73EC0
	0x03C73EAC ADRP X0, 0xFFFFFFFFFCEA1000
	0x03C73EB0 ADD X0, X0, 0xFF9
	0x03C73EB4 BL 0x1C16CB8
	0x03C73EB8 MOV X5, X0
	0x03C73EBC STR X0, [X24 + 0x828]
	0x03C73EC0 MOV X0, X23
	0x03C73EC4 MOV X1, X22
	0x03C73EC8 MOV X2, X21
	0x03C73ECC MOV W3, W20
	0x03C73ED0 MOV X4, X19
	0x03C73ED4 LDP X20, X19, [X31 + 0x30]
	0x03C73ED8 LDP X22, X21, [X31 + 0x20]
	0x03C73EDC LDP X24, X23, [X31 + 0x10]
	0x03C73EE0 LDR X30, [X31], #0x40
	0x03C73EE4 BR X5
	0x03C73EE8 SUB X31, X31, 0x40
	0x03C73EEC STP X30, X21, [X31 + 0x20]
	0x03C73EF0 STP X20, X19, [X31 + 0x30]
	0x03C73EF4 ADRP X21, 0x773000
	0x03C73EF8 LDR X8, [X21 + 0x830]
	0x03C73EFC MOV X19, X1
	0x03C73F00 MOV X20, X0
	0x03C73F04 STP S0, S1, [X31 + 0x10]
	0x03C73F08 STP S2, S3, [X31 + 0x18]
	0x03C73F0C STP S4, S5, [X31 + 0x8]
	0x03C73F10 CBNZ X8, 0x3C73F28
	0x03C73F14 ADRP X0, 0xFFFFFFFFFCEB9000
	0x03C73F18 ADD X0, X0, 0xD15
	0x03C73F1C BL 0x1C16CB8
	0x03C73F20 MOV X8, X0
	0x03C73F24 STR X0, [X21 + 0x830]
	0x03C73F28 ADD X1, X31, 0x10
	0x03C73F2C ADD X3, X31, 0x8
	0x03C73F30 MOV X0, X20
	0x03C73F34 MOV X2, X19
	0x03C73F38 BLR X8
	0x03C73F3C LDP X20, X19, [X31 + 0x30]
	0x03C73F40 LDP X30, X21, [X31 + 0x20]
	0x03C73F44 ADD X31, X31, 0x40
	0x03C73F48 RET
	0x03C73F4C STP X30, X23, [X31 - 0x30]!
	0x03C73F50 STP X22, X21, [X31 + 0x10]
	0x03C73F54 STP X20, X19, [X31 + 0x20]
	0x03C73F58 ADRP X23, 0x773000
	0x03C73F5C LDR X4, [X23 + 0x830]
	0x03C73F60 MOV X19, X3
	0x03C73F64 MOV X20, X2
	0x03C73F68 MOV X21, X1
	0x03C73F6C MOV X22, X0
	0x03C73F70 CBNZ X4, 0x3C73F88
	0x03C73F74 ADRP X0, 0xFFFFFFFFFCEB9000
	0x03C73F78 ADD X0, X0, 0xD15
	0x03C73F7C BL 0x1C16CB8
	0x03C73F80 MOV X4, X0
	0x03C73F84 STR X0, [X23 + 0x830]
	0x03C73F88 MOV X0, X22
	0x03C73F8C MOV X1, X21

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x774000
	007 Move X22, 0x4EE000
	008 Move W8, [X21+1754]
	009 Move X22, [X22+680]
	010 Move W19, W1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0x4EE000
	017 Move X0, [X0+1304]
	018 Call 0x1C17CF4
	019 Move X0, 0x4EE000
	020 Move X0, [X0+1312]
	021 Call 0x1C17CF4
	022 Move X0, 0x4EE000
	023 Move X0, [X0+680]
	024 Call 0x1C17CF4
	025 Move X0, 0x481000
	026 Move X0, [X0+1728]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X21+1754], W8
	030 Move X0, [X22]
	031 Move [X31+8], X31
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {37}
	035 Call 0x1C17DFC
	036 Move X0, [X22]
	037 Move X8, [X0+184]
	038 Move X0, [X8]
	039 Compare X0, 0
	040 JumpIfEqual {101}
	041 Move X8, 0x4EE000
	042 Move X8, [X8+1304]
	043 Add X2, X31, 8
	044 Move W1, W19
	045 Move X3, [X8]
	046 Call Dictionary`2<Int32, Object>.TryGetValue, X0, X1, X2
	047 Move TEMP, X0
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfNotEqual {73}
	051 Move X0, [X31+8]
	052 Compare X0, 0
	053 JumpIfEqual {101}
	054 Move X1, X31
	055 Call "il2cpp_vm_object_is_inst", X0
	056 Move X8, 0x481000
	057 Move X8, [X8+1728]
	058 Move X21, X0
	059 Move X8, [X8]
	060 Move W9, [X8+224]
	061 Compare W9, 0
	062 JumpIfNotEqual {65}
	063 Move X0, X8
	064 Call 0x1C17DFC
	065 Move X0, X21
	066 Move X1, X20
	067 Move X2, X31
	068 Call Type.op_Inequality, X0, X1
	069 Move TEMP, X0
	070 And TEMP, TEMP, 1
	071 Compare TEMP, 1
	072 JumpIfNotEqual {94}
	073 Move X0, X20
	074 Move X1, X31
	075 Call Activator.CreateInstance, X0
	076 Move X8, [X22]
	077 Move [X31+8], X0
	078 Move W9, [X8+224]
	079 Compare W9, 0
	080 JumpIfNotEqual {84}
	081 Move X0, X8
	082 Call 0x1C17DFC
	083 Move X8, [X22]
	084 Move X8, [X8+184]
	085 Move X0, [X8]
	086 Compare X0, 0
	087 JumpIfEqual {101}
	088 Move X8, 0x4EE000
	089 Move X8, [X8+1312]
	090 Move X2, [X31+8]
	091 Move W1, W19
	092 Move X3, [X8]
	093 Call Dictionary`2<Int32, Object>.set_Item, X0, X1, X2
	094 Move X0, [X31+8]
	095 Move X20, [X31+32]
	096 Move X19, [X31+40]
	097 Move X22, [X31+16]
	098 Move X21, [X31+24]
	099 Move X30, [X31+48]
	100 Return X0
	101 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x03C73F90 MOV X2, X20
	0x03C73F94 MOV X3, X19
	0x03C73F98 LDP X20, X19, [X31 + 0x20]
	0x03C73F9C LDP X22, X21, [X31 + 0x10]
	0x03C73FA0 LDP X30, X23, [X31], #0x30
	0x03C73FA4 BR X4
	0x03C73FA8 SUB X31, X31, 0x40
	0x03C73FAC STP X30, X23, [X31 + 0x10]
	0x03C73FB0 STP X22, X21, [X31 + 0x20]
	0x03C73FB4 STP X20, X19, [X31 + 0x30]
	0x03C73FB8 ADRP X23, 0x773000
	0x03C73FBC LDR X8, [X23 + 0x838]
	0x03C73FC0 MOV W19, W3
	0x03C73FC4 MOV W20, W2
	0x03C73FC8 MOV X21, X1
	0x03C73FCC MOV X22, X0
	0x03C73FD0 STP S0, S1, [X31]
	0x03C73FD4 STP S2, S3, [X31 + 0x8]
	0x03C73FD8 CBNZ X8, 0x3C73FF0
	0x03C73FDC ADRP X0, 0xFFFFFFFFFCE90000
	0x03C73FE0 ADD X0, X0, 0x80F
	0x03C73FE4 BL 0x1C16CB8
	0x03C73FE8 MOV X8, X0
	0x03C73FEC STR X0, [X23 + 0x838]
	0x03C73FF0 ADD X1, X31, 0x0
	0x03C73FF4 MOV X0, X22
	0x03C73FF8 MOV X2, X21
	0x03C73FFC MOV W3, W20
	0x03C74000 MOV W4, W19
	0x03C74004 BLR X8
	0x03C74008 LDP X20, X19, [X31 + 0x30]
	0x03C7400C LDP X22, X21, [X31 + 0x20]
	0x03C74010 LDP X30, X23, [X31 + 0x10]
	0x03C74014 ADD X31, X31, 0x40
	0x03C74018 RET

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x774000
	007 Move X22, 0x4EE000
	008 Move X19, 0x4EE000
	009 Move X20, 0x4EE000
	010 Move W8, [X21+1755]
	011 Move X22, [X22+1320]
	012 Move X19, [X19+1328]
	013 Move X20, [X20+680]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0x4EE000
	019 Move X0, [X0+1328]
	020 Call 0x1C17CF4
	021 Move X0, 0x4EE000
	022 Move X0, [X0+1320]
	023 Call 0x1C17CF4
	024 Move X0, 0x4EE000
	025 Move X0, [X0+680]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+1755], W8
	029 Move X0, [X22]
	030 Call 0x1C17F10
	031 Move X1, [X19]
	032 Move X19, X0
	033 Call Dictionary`2<Int32, Object>..ctor, X0
	034 Move X8, [X20]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move X8, [X8+184]
	038 Move [X8], X19
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X30, [X31+48]
	042 Return 

