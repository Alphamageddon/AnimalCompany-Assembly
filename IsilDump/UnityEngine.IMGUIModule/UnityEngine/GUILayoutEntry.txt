Type: UnityEngine.GUILayoutEntry

Method: UnityEngine.GUIStyle get_style()

Disassembly:
	0x03C77AAC LDR X8, [X8 + 0x368]
	0x03C77AB0 LDR X1, [X8]

ISIL:
	001 Move X0, [X0+64]
	002 Return X0

Method: System.Void set_style(UnityEngine.GUIStyle value)

Disassembly:
	0x03C704E4 LDR X21, [X21 + 0x6C0]
	0x03C704E8 MOV X19, X0
	0x03C704EC TBNZ X8, 0x0, 0x3C7051C
	0x03C704F0 ADRP X0, 0x4F0000

ISIL:
	001 Move X8, [X0]
	002 Move [X0+64], X1
	003 Move X3, [X8+504]
	004 Move X2, [X8+512]
	005 CallNoReturn X3

Method: System.Int32 get_marginLeft()

Disassembly:
	0x03C77AB4 ADD X8, X31, 0x8
	0x03C77AB8 BL 0x301CB58
	0x03C77ABC LDUR V0, [X31 + 0x8]
	0x03C77AC0 LDR X8, [X31 + 0x18]
	0x03C77AC4 ADRP X21, 0x4E9000
	0x03C77AC8 MOV W23, W31
	0x03C77ACC STR V0, [X31 + 0x2]
	0x03C77AD0 STR X8, [X31 + 0x30]
	0x03C77AD4 LDR X21, [X21 + 0x358]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+64]
	003 Compare X0, 0
	004 JumpIfEqual {12}
	005 Call GUIStyle.get_margin, X0
	006 Compare X0, 0
	007 JumpIfEqual {12}
	008 Move X1, X31
	009 Move X30, [X31+16]
	010 Call RectOffset.get_left, X0
	011 Return X0
	012 Call 0x1C17F20

Method: System.Int32 get_marginRight()

Disassembly:
	0x03C77AD8 MOVZ W22, 0x1
	0x03C77ADC LDR X1, [X21]
	0x03C77AE0 ADD X0, X31, 0x20
	0x03C77AE4 BL 0x2BC4350
	0x03C77AE8 TBZ X0, 0x0, 0x3C77BAC
	0x03C77AEC LDR X20, [X31 + 0x30]
	0x03C77AF0 CBZ X20, 0x3C77DC4
	0x03C77AF4 LDR X8, [X20]
	0x03C77AF8 LDP X9, X1, [X8 + 0x1B8]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+64]
	003 Compare X0, 0
	004 JumpIfEqual {12}
	005 Call GUIStyle.get_margin, X0
	006 Compare X0, 0
	007 JumpIfEqual {12}
	008 Move X1, X31
	009 Move X30, [X31+16]
	010 Call RectOffset.get_right, X0
	011 Return X0
	012 Call 0x1C17F20

Method: System.Int32 get_marginTop()

Disassembly:
	0x03C77AFC MOV X0, X20
	0x03C77B00 BLR X9
	0x03C77B04 LDRB W8, [X20 + 0x38]
	0x03C77B08 CBZ W8, 0x3C77B18
	0x03C77B0C TBZ X22, 0x0, 0x3C77B2C
	0x03C77B10 MOV W0, W31
	0x03C77B14 B 0x3C77B58
	0x03C77B18 LDR V0, [X19 + 0x70]
	0x03C77B1C LDR V1, [X20 + 0x10]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+64]
	003 Compare X0, 0
	004 JumpIfEqual {12}
	005 Call GUIStyle.get_margin, X0
	006 Compare X0, 0
	007 JumpIfEqual {12}
	008 Move X1, X31
	009 Move X30, [X31+16]
	010 Call RectOffset.get_top, X0
	011 Return X0
	012 Call 0x1C17F20

Method: System.Int32 get_marginBottom()

Disassembly:
	0x03C77B20 FADD V0.2S, V0.2S, V1.2S
	0x03C77B24 STR D0, [X19 + 0x70]
	0x03C77B28 B 0x3C77B98
	0x03C77B2C LDR X8, [X20]
	0x03C77B30 LDP X9, X1, [X8 + 0x178]
	0x03C77B34 MOV X0, X20
	0x03C77B38 BLR X9
	0x03C77B3C CMP W23, W0
	0x03C77B40 MOV W0, W23

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+64]
	003 Compare X0, 0
	004 JumpIfEqual {12}
	005 Call GUIStyle.get_margin, X0
	006 Compare X0, 0
	007 JumpIfEqual {12}
	008 Move X1, X31
	009 Move X30, [X31+16]
	010 Call RectOffset.get_bottom, X0
	011 Return X0
	012 Call 0x1C17F20

Method: System.Int32 get_marginHorizontal()

Disassembly:
	0x03C77B44 B.GT 0x3C77B58
	0x03C77B48 LDR X8, [X20]
	0x03C77B4C LDP X9, X1, [X8 + 0x178]
	0x03C77B50 MOV X0, X20
	0x03C77B54 BLR X9
	0x03C77B58 ADD X8, X19, 0x54
	0x03C77B5C LDR V0, [X20 + 0x10]
	0x03C77B60 UNIMPLEMENTED
	0x03C77B64 LDR V3, [X19 + 0x70]
	0x03C77B68 SCVTF S2, W0
	0x03C77B6C UNIMPLEMENTED
	0x03C77B70 FADD V0.2S, V0.2S, V1.2S
	0x03C77B74 FADD V0.2S, V0.2S, V2.2S
	0x03C77B78 FADD V0.2S, V3.2S, V0.2S
	0x03C77B7C STR D0, [X19 + 0x70]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X0]
	005 Move X19, X0
	006 Move X9, [X8+376]
	007 Move X1, [X8+384]
	008 NotImplemented "Instruction BLR not yet implemented."
	009 Move X8, [X19]
	010 Move W20, W0
	011 Move X0, X19
	012 Move X9, [X8+392]
	013 Move X1, [X8+400]
	014 NotImplemented "Instruction BLR not yet implemented."
	015 Add W0, W0, W20
	016 Move X20, [X31+16]
	017 Move X19, [X31+24]
	018 Move X30, [X31+32]
	019 Return X0

Method: System.Int32 get_marginVertical()

Disassembly:
	0x03C77B80 LDR X8, [X20]
	0x03C77B84 LDP X9, X1, [X8 + 0x188]
	0x03C77B88 MOV X0, X20
	0x03C77B8C BLR X9
	0x03C77B90 MOV W22, W31
	0x03C77B94 MOV W23, W0
	0x03C77B98 LDR W8, [X19 + 0x64]
	0x03C77B9C LDR W9, [X20 + 0x30]
	0x03C77BA0 ADD W8, W9, W8
	0x03C77BA4 STR W8, [X19 + 0x64]
	0x03C77BA8 B 0x3C77ADC
	0x03C77BAC ADRP X8, 0x4E9000
	0x03C77BB0 LDR X8, [X8 + 0x350]
	0x03C77BB4 ADD X0, X31, 0x20
	0x03C77BB8 LDR X1, [X8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X0]
	005 Move X19, X0
	006 Move X9, [X8+424]
	007 Move X1, [X8+432]
	008 NotImplemented "Instruction BLR not yet implemented."
	009 Move X8, [X19]
	010 Move W20, W0
	011 Move X0, X19
	012 Move X9, [X8+408]
	013 Move X1, [X8+416]
	014 NotImplemented "Instruction BLR not yet implemented."
	015 Add W0, W0, W20
	016 Move X20, [X31+16]
	017 Move X19, [X31+24]
	018 Move X30, [X31+32]
	019 Return X0

Method: System.Void .ctor(System.Single _minWidth, System.Single _maxWidth, System.Single _minHeight, System.Single _maxHeight, UnityEngine.GUIStyle _style)

Disassembly:
	0x03C77BBC BL 0x2BC434C
	0x03C77BC0 ADD X8, X19, 0x54
	0x03C77BC4 LDR V0, [X19 + 0x70]
	0x03C77BC8 UNIMPLEMENTED
	0x03C77BCC LDR X0, [X19 + 0x48]
	0x03C77BD0 FSUB V0.2S, V0.2S, V1.2S
	0x03C77BD4 STR D0, [X19 + 0x70]
	0x03C77BD8 CBZ X0, 0x3C77DC8
	0x03C77BDC LDR W8, [X0 + 0x18]
	0x03C77BE0 CBZ W8, 0x3C77C10
	0x03C77BE4 ADRP X8, 0x4E9000
	0x03C77BE8 LDR X8, [X8 + 0x3A0]
	0x03C77BEC MOV W1, W31
	0x03C77BF0 LDR X2, [X8]
	0x03C77BF4 BL 0x301BCCC
	0x03C77BF8 CBZ X0, 0x3C77DC8
	0x03C77BFC LDR X8, [X0]
	0x03C77C00 LDP X9, X1, [X8 + 0x178]
	0x03C77C04 BLR X9
	0x03C77C08 MOV W20, W0
	0x03C77C0C B 0x3C77C18
	0x03C77C10 MOV W23, W31
	0x03C77C14 MOV W20, W31
	0x03C77C18 ADRP X8, 0x4A3000
	0x03C77C1C LDR X8, [X8 + 0x890]
	0x03C77C20 LDR X21, [X19 + 0x40]
	0x03C77C24 LDR X0, [X8]
	0x03C77C28 LDR W8, [X0 + 0xE0]
	0x03C77C2C CBNZ W8, 0x3C77C34
	0x03C77C30 BL 0x1C16DFC
	0x03C77C34 BL 0x3C6BB04
	0x03C77C38 CMP X21, X0
	0x03C77C3C B.NE 0x3C77C48
	0x03C77C40 LDRB W8, [X19 + 0x6C]
	0x03C77C44 CBZ W8, 0x3C77DB0
	0x03C77C48 LDR X0, [X19 + 0x40]
	0x03C77C4C CBZ X0, 0x3C77DC8
	0x03C77C50 BL 0x3C74750
	0x03C77C54 CBZ X0, 0x3C77DC8
	0x03C77C58 MOV X1, X31
	0x03C77C5C BL 0x3C0C8A8
	0x03C77C60 LDR X8, [X19 + 0x40]
	0x03C77C64 CMP W0, W20
	0x03C77C68 CSEL W20, W0, W20, GT
	0x03C77C6C CBZ X8, 0x3C77DC8
	0x03C77C70 MOV X0, X8
	0x03C77C74 BL 0x3C74750
	0x03C77C78 CBZ X0, 0x3C77DC8
	0x03C77C7C MOV X1, X31
	0x03C77C80 SCVTF S8, W20
	0x03C77C84 BL 0x3C0C8E4
	0x03C77C88 CMP W0, W23
	0x03C77C8C CSEL W8, W0, W23, GT

ISIL:
	001 Move [X31-80], D11
	002 Move [X31-72], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X22, 0x770000
	011 Move X21, 0x4A4000
	012 Move W8, [X22+2418]
	013 Move X21, [X21+2192]
	014 Move X20, X1
	015 Move V8, V3
	016 Move V9, V2
	017 Move V10, V1
	018 Move V11, V0
	019 Move X19, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {29}
	024 Move X0, 0x4A4000
	025 Move X0, [X0+2192]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X22+2418], W8
	029 Move W8, 1
	030 Move [X19+32], X31
	031 Move [X19+40], X31
	032 Move [X19+56], W8
	033 Move X0, [X21]
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {38}
	037 Call 0x1C17DFC
	038 Call GUIStyle.get_none
	039 Move [X19+64], X0
	040 Move X0, X19
	041 Move X1, X31
	042 Call Object..ctor, X0
	043 Move [X19+16], S11
	044 Move [X19+24], S10
	045 Move [X19+24], S9
	046 Move [X19+32], S8
	047 Compare X20, 0
	048 JumpIfNotEqual {56}
	049 Move X0, [X21]
	050 Move W8, [X0+224]
	051 Compare W8, 0
	052 JumpIfNotEqual {54}
	053 Call 0x1C17DFC
	054 Call GUIStyle.get_none
	055 Move X20, X0
	056 Move X8, [X19]
	057 Move [X19+64], X20
	058 Move X0, X19
	059 Move X1, X20
	060 Move X3, [X8+504]
	061 Move X2, [X8+512]
	062 Move X20, [X31+64]
	063 Move X19, [X31+72]
	064 Move X22, [X31+48]
	065 Move X21, [X31+56]
	066 Move X30, [X31+32]
	067 Move D9, [X31+16]
	068 Move D8, [X31+24]
	069 Move D11, [X31+80]
	070 Move D10, [X31+88]
	071 CallNoReturn X3

Method: System.Void .ctor(System.Single _minWidth, System.Single _maxWidth, System.Single _minHeight, System.Single _maxHeight, UnityEngine.GUIStyle _style, UnityEngine.GUILayoutOption[] options)

Disassembly:
	0x03C71F58 LDR X1, [X21]
	0x03C71F5C LDR X3, [X24]
	0x03C71F60 BL 0x2AA5084
	0x03C71F64 LDR X20, [X19 + 0x20]
	0x03C71F68 CBZ X20, 0x3C7290C
	0x03C71F6C LDR X21, [X21]
	0x03C71F70 ADRP X23, 0x775000
	0x03C71F74 STR X21, [X20 + 0x78]
	0x03C71F78 LDR X8, [X23 + 0x720]
	0x03C71F7C CBNZ X8, 0x3C71F94
	0x03C71F80 ADRP X0, 0xFFFFFFFFFCE94000
	0x03C71F84 ADD X0, X0, 0x5DA
	0x03C71F88 BL 0x1C16CB8
	0x03C71F8C MOV X8, X0
	0x03C71F90 STR X0, [X23 + 0x720]
	0x03C71F94 MOV X0, X20
	0x03C71F98 MOV X1, X21
	0x03C71F9C BLR X8
	0x03C71FA0 LDR X0, [X25]
	0x03C71FA4 CBZ X0, 0x3C7290C
	0x03C71FA8 ADRP X21, 0x4D5000
	0x03C71FAC LDR X21, [X21 + 0xED0]
	0x03C71FB0 LDR X2, [X19 + 0x28]
	0x03C71FB4 LDR X3, [X24]
	0x03C71FB8 LDR X1, [X21]
	0x03C71FBC BL 0x2AA5084
	0x03C71FC0 LDR X20, [X19 + 0x28]
	0x03C71FC4 CBZ X20, 0x3C7290C
	0x03C71FC8 LDR X21, [X21]
	0x03C71FCC STR X21, [X20 + 0x78]
	0x03C71FD0 LDR X8, [X23 + 0x720]
	0x03C71FD4 CBNZ X8, 0x3C71FEC
	0x03C71FD8 ADRP X0, 0xFFFFFFFFFCE94000
	0x03C71FDC ADD X0, X0, 0x5DA
	0x03C71FE0 BL 0x1C16CB8
	0x03C71FE4 MOV X8, X0
	0x03C71FE8 STR X0, [X23 + 0x720]
	0x03C71FEC MOV X0, X20
	0x03C71FF0 MOV X1, X21
	0x03C71FF4 BLR X8
	0x03C71FF8 LDR X0, [X25]
	0x03C71FFC CBZ X0, 0x3C7290C
	0x03C72000 ADRP X21, 0x4EE000
	0x03C72004 LDR X21, [X21 + 0x460]
	0x03C72008 LDR X2, [X19 + 0x30]
	0x03C7200C LDR X3, [X24]
	0x03C72010 LDR X1, [X21]
	0x03C72014 BL 0x2AA5084
	0x03C72018 LDR X20, [X19 + 0x30]
	0x03C7201C CBZ X20, 0x3C7290C
	0x03C72020 LDR X21, [X21]
	0x03C72024 STR X21, [X20 + 0x78]
	0x03C72028 LDR X8, [X23 + 0x720]

ISIL:
	001 Move [X31-80], D11
	002 Move [X31-72], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X23, 0x776000
	012 Move X22, 0x4AA000
	013 Move W8, [X23+2419]
	014 Move X22, [X22+2192]
	015 Move X19, X2
	016 Move X21, X1
	017 Move V8, V3
	018 Move V9, V2
	019 Move V10, V1
	020 Move V11, V0
	021 Move X20, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {31}
	026 Move X0, 0x4AA000
	027 Move X0, [X0+2192]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X23+2419], W8
	031 Move W8, 1
	032 Move [X20+32], X31
	033 Move [X20+40], X31
	034 Move [X20+56], W8
	035 Move X0, [X22]
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {40}
	039 Call 0x1C17DFC
	040 Call GUIStyle.get_none
	041 Move [X20+64], X0
	042 Move X0, X20
	043 Move X1, X31
	044 Call Object..ctor, X0
	045 Move X8, [X20]
	046 Move [X20+16], S11
	047 Move [X20+24], S10
	048 Move [X20+24], S9
	049 Move [X20+32], S8
	050 Move [X20+64], X21
	051 Move X9, [X8+504]
	052 Move X2, [X8+512]
	053 Move X0, X20
	054 Move X1, X21
	055 NotImplemented "Instruction BLR not yet implemented."
	056 Move X8, [X20]
	057 Move X0, X20
	058 Move X1, X19
	059 Move X20, [X31+64]
	060 Move X19, [X31+72]
	061 Move X3, [X8+520]
	062 Move X2, [X8+528]
	063 Move X22, [X31+48]
	064 Move X21, [X31+56]
	065 Move X30, [X31+32]
	066 Move X23, [X31+40]
	067 Move D9, [X31+16]
	068 Move D8, [X31+24]
	069 Move D11, [X31+80]
	070 Move D10, [X31+88]
	071 CallNoReturn X3

Method: System.Void CalcWidth()

Disassembly:
	0x03C77C90 SCVTF S9, W8

ISIL:
	001 Return 

Method: System.Void CalcHeight()

Disassembly:
	0x03C77C94 LDR V1, [X19 + 0x70]

ISIL:
	001 Return 

Method: System.Void SetHorizontal(System.Single x, System.Single width)

Disassembly:
	0x03C77C98 LDP S2, S0, [X19 + 0x10]
	0x03C77C9C FADD S1, S8, S1
	0x03C77CA0 FADD S1, S9, S1

ISIL:
	001 Move [X0+32], S0
	002 Move [X0+40], S1
	003 Return 

Method: System.Void SetVertical(System.Single y, System.Single height)

Disassembly:
	0x03C77CA4 FCMP S2, S1
	0x03C77CA8 FCSEL S1, S2, S1, GT
	0x03C77CAC FCMP S0, 0x0

ISIL:
	001 Move [X0+36], S0
	002 Move [X0+44], S1
	003 Return 

Method: System.Void ApplyStyleSettings(UnityEngine.GUIStyle style)

Disassembly:
	0x03C77CB0 STR S1, [X19 + 0x10]
	0x03C77CB4 B.NE 0x3C77D18
	0x03C77CB8 LDR X20, [X19 + 0x40]
	0x03C77CBC CBZ X20, 0x3C77DC8
	0x03C77CC0 ADRP X23, 0x76F000
	0x03C77CC4 LDR W21, [X19 + 0x30]
	0x03C77CC8 LDR X8, [X23 + 0x758]
	0x03C77CCC LDR W22, [X19 + 0x64]
	0x03C77CD0 CBNZ X8, 0x3C77CE8
	0x03C77CD4 ADRP X0, 0xFFFFFFFFFCE9D000
	0x03C77CD8 ADD X0, X0, 0xFA6
	0x03C77CDC BL 0x1C16CB8
	0x03C77CE0 MOV X8, X0
	0x03C77CE4 STR X0, [X23 + 0x758]
	0x03C77CE8 MOV X0, X20
	0x03C77CEC BLR X8
	0x03C77CF0 LDR V0, [X19 + 0x74]
	0x03C77CF4 LDR V1, [X19 + 0x10]
	0x03C77CF8 AND W8, W0, 0x1
	0x03C77CFC ADD W9, W22, W21
	0x03C77D00 FADD S0, S8, S0
	0x03C77D04 ADD W8, W9, W8
	0x03C77D08 FADD S0, S9, S0
	0x03C77D0C STR W8, [X19 + 0x30]
	0x03C77D10 STR S0, [X19 + 0x14]
	0x03C77D14 B 0x3C77D1C
	0x03C77D18 STR W31, [X19 + 0x30]
	0x03C77D1C LDR X20, [X19 + 0x40]
	0x03C77D20 FCMP S0, S1
	0x03C77D24 FCSEL S0, S0, S1, GT
	0x03C77D28 STR S0, [X19 + 0x14]
	0x03C77D2C CBZ X20, 0x3C77DC8
	0x03C77D30 ADRP X21, 0x76F000
	0x03C77D34 LDR X8, [X21 + 0x748]
	0x03C77D38 CBNZ X8, 0x3C77D50
	0x03C77D3C ADRP X0, 0xFFFFFFFFFCEA6000
	0x03C77D40 ADD X0, X0, 0x5FF
	0x03C77D44 BL 0x1C16CB8
	0x03C77D48 MOV X8, X0
	0x03C77D4C STR X0, [X21 + 0x748]
	0x03C77D50 MOV X0, X20
	0x03C77D54 BLR X8
	0x03C77D58 FCMP S0, 0x0
	0x03C77D5C B.EQ 0x3C77D94
	0x03C77D60 LDR X20, [X19 + 0x40]
	0x03C77D64 CBZ X20, 0x3C77DC8
	0x03C77D68 LDR X8, [X21 + 0x748]
	0x03C77D6C CBNZ X8, 0x3C77D84
	0x03C77D70 ADRP X0, 0xFFFFFFFFFCEA6000
	0x03C77D74 ADD X0, X0, 0x5FF
	0x03C77D78 BL 0x1C16CB8
	0x03C77D7C MOV X8, X0
	0x03C77D80 STR X0, [X21 + 0x748]
	0x03C77D84 MOV X0, X20
	0x03C77D88 BLR X8
	0x03C77D8C STP S0, S0, [X19 + 0x10]
	0x03C77D90 STR W31, [X19 + 0x30]
	0x03C77D94 LDP X20, X19, [X31 + 0xA0]
	0x03C77D98 LDP X22, X21, [X31 + 0x90]
	0x03C77D9C LDP X24, X23, [X31 + 0x80]
	0x03C77DA0 LDP X30, X25, [X31 + 0x70]
	0x03C77DA4 LDP D9, D8, [X31 + 0x60]
	0x03C77DA8 ADD X31, X31, 0xB0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Compare X1, 0
	006 JumpIfEqual {63}
	007 Move X21, 0x770000
	008 Move X8, [X21+1864]
	009 Move X19, X1
	010 Move X20, X0
	011 Compare X8, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51744768
	014 Add X0, X0, 1535
	015 Call 0x1C17CB8
	016 Move X8, X0
	017 Move [X21+1864], X0
	018 Move X0, X19
	019 NotImplemented "Instruction BLR not yet implemented."
	020 NotImplemented "Instruction FCMP not yet implemented."
	021 Move X21, 0x770000
	022 Move X8, [X21+1880]
	023 Compare X8, 0
	024 JumpIfNotEqual {30}
	025 Move X0, -51781632
	026 Add X0, X0, 4006
	027 Call 0x1C17CB8
	028 Move X8, X0
	029 Move [X21+1880], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 And W8, W0, 1
	033 Compare X20, 0
	034 JumpIfEqual {63}
	035 Move [X20+48], W8
	036 Move X21, 0x770000
	037 Move X8, [X21+1872]
	038 Compare X8, 0
	039 JumpIfNotEqual {45}
	040 Move X0, -51834880
	041 Add X0, X0, 2467
	042 Call 0x1C17CB8
	043 Move X8, X0
	044 Move [X21+1872], X0
	045 Move X0, X19
	046 NotImplemented "Instruction BLR not yet implemented."
	047 NotImplemented "Instruction FCMP not yet implemented."
	048 Move X21, 0x770000
	049 Move X8, [X21+1888]
	050 Compare X8, 0
	051 JumpIfNotEqual {57}
	052 Move X0, -51781632
	053 Add X0, X0, 4047
	054 Call 0x1C17CB8
	055 Move X8, X0
	056 Move [X21+1888], X0
	057 Move X0, X19
	058 NotImplemented "Instruction BLR not yet implemented."
	059 And W8, W0, 1
	060 Move W8, W31
	061 Compare X20, 0
	062 JumpIfNotEqual {35}
	063 Call 0x1C17F20
	064 Move W8, W31
	065 Move [X20+52], W8
	066 Move [X20+64], X19
	067 Move X20, [X31+16]
	068 Move X19, [X31+24]
	069 Move X30, [X31+32]
	070 Move X21, [X31+40]
	071 Return 

Method: System.Void ApplyOptions(UnityEngine.GUILayoutOption[] options)

Disassembly:
	0x03C77DAC RET
	0x03C77DB0 FMOV S9, W31
	0x03C77DB4 FMOV S8, W31
	0x03C77DB8 STP W20, W23, [X19 + 0x80]
	0x03C77DBC B 0x3C77C94
	0x03C77DC0 BL 0x1C16F20
	0x03C77DC4 BL 0x1C16F20
	0x03C77DC8 BL 0x1C16F20
	0x03C77DCC B 0x3C77DF0
	0x03C77DD0 B 0x3C77DF0
	0x03C77DD4 B 0x3C77E60
	0x03C77DD8 B 0x3C77E60
	0x03C77DDC B 0x3C77E70
	0x03C77DE0 B 0x3C77E70
	0x03C77DE4 B 0x3C77DF0
	0x03C77DE8 B 0x3C77DF0
	0x03C77DEC B 0x3C77DF0
	0x03C77DF0 MOV X21, X0
	0x03C77DF4 CMP W1, 0x1
	0x03C77DF8 B.NE 0x3C77E2C
	0x03C77DFC MOV X0, X21
	0x03C77E00 BL 0x3EB1AD0
	0x03C77E04 LDR X20, [X0]
	0x03C77E08 BL 0x3EB1AE0
	0x03C77E0C ADRP X8, 0x4E9000
	0x03C77E10 LDR X8, [X8 + 0x350]
	0x03C77E14 ADD X0, X31, 0x20
	0x03C77E18 LDR X1, [X8]
	0x03C77E1C BL 0x2BC434C
	0x03C77E20 CBZ X20, 0x3C77BC0
	0x03C77E24 MOV X0, X20
	0x03C77E28 BL 0x1C16F18
	0x03C77E2C MOV X20, X31
	0x03C77E30 B 0x3C77E38
	0x03C77E34 MOV X21, X0
	0x03C77E38 ADRP X8, 0x4E9000
	0x03C77E3C LDR X8, [X8 + 0x350]
	0x03C77E40 LDR X1, [X8]
	0x03C77E44 ADD X0, X31, 0x20
	0x03C77E48 BL 0x2BC434C
	0x03C77E4C CBZ X20, 0x3C77ED0
	0x03C77E50 MOV X0, X20
	0x03C77E54 BL 0x1C16F18
	0x03C77E58 B 0x3C77E60
	0x03C77E5C B 0x3C77E60
	0x03C77E60 MOV X21, X0
	0x03C77E64 MOV W20, W22
	0x03C77E68 B 0x3C77E74
	0x03C77E6C B 0x3C77E70
	0x03C77E70 MOV X21, X0
	0x03C77E74 CMP W1, 0x1
	0x03C77E78 B.NE 0x3C77EAC
	0x03C77E7C MOV X0, X21
	0x03C77E80 BL 0x3EB1AD0
	0x03C77E84 LDR X22, [X0]
	0x03C77E88 BL 0x3EB1AE0
	0x03C77E8C ADRP X8, 0x4E9000
	0x03C77E90 LDR X8, [X8 + 0x350]
	0x03C77E94 ADD X0, X31, 0x40
	0x03C77E98 LDR X1, [X8]
	0x03C77E9C BL 0x2BC434C
	0x03C77EA0 CBZ X22, 0x3C77A68
	0x03C77EA4 MOV X0, X22
	0x03C77EA8 BL 0x1C16F18
	0x03C77EAC MOV X22, X31
	0x03C77EB0 B 0x3C77EB8
	0x03C77EB4 MOV X21, X0
	0x03C77EB8 ADRP X8, 0x4E9000
	0x03C77EBC LDR X8, [X8 + 0x350]
	0x03C77EC0 LDR X1, [X8]
	0x03C77EC4 ADD X0, X31, 0x40
	0x03C77EC8 BL 0x2BC434C
	0x03C77ECC CBNZ X22, 0x3C77ED8
	0x03C77ED0 MOV X0, X21
	0x03C77ED4 BL 0x1D2C690
	0x03C77ED8 MOV X0, X22
	0x03C77EDC BL 0x1C16F18
	0x03C77EE0 BL 0x1990590
	0x03C77EE4 SUB X31, X31, 0x100
	0x03C77EE8 STP D15, D14, [X31 + 0x80]
	0x03C77EEC STP D13, D12, [X31 + 0x90]
	0x03C77EF0 STP D11, D10, [X31 + 0xA0]
	0x03C77EF4 STP D9, D8, [X31 + 0xB0]
	0x03C77EF8 STR X30, [X31 + 0xC0]
	0x03C77EFC STP X24, X23, [X31 + 0xD0]
	0x03C77F00 STP X22, X21, [X31 + 0xE0]
	0x03C77F04 STP X20, X19, [X31 + 0xF0]
	0x03C77F08 ADRP X20, 0x76F000
	0x03C77F0C LDRB W8, [X20 + 0x97D]
	0x03C77F10 MOV V8.16B, V1.16B
	0x03C77F14 MOV V9.16B, V0.16B
	0x03C77F18 MOV X19, X0
	0x03C77F1C TBNZ X8, 0x0, 0x3C77F7C
	0x03C77F20 ADRP X0, 0x4E9000
	0x03C77F24 LDR X0, [X0 + 0x350]
	0x03C77F28 BL 0x1C16CF4
	0x03C77F2C ADRP X0, 0x4E9000
	0x03C77F30 LDR X0, [X0 + 0x358]
	0x03C77F34 BL 0x1C16CF4
	0x03C77F38 ADRP X0, 0x4E9000
	0x03C77F3C LDR X0, [X0 + 0x360]
	0x03C77F40 BL 0x1C16CF4
	0x03C77F44 ADRP X0, 0x4A3000
	0x03C77F48 LDR X0, [X0 + 0x890]
	0x03C77F4C BL 0x1C16CF4
	0x03C77F50 ADRP X0, 0x4E9000
	0x03C77F54 LDR X0, [X0 + 0x368]
	0x03C77F58 BL 0x1C16CF4
	0x03C77F5C ADRP X0, 0x4E9000
	0x03C77F60 LDR X0, [X0 + 0x398]
	0x03C77F64 BL 0x1C16CF4
	0x03C77F68 ADRP X0, 0x4E9000
	0x03C77F6C LDR X0, [X0 + 0x3A0]
	0x03C77F70 BL 0x1C16CF4
	0x03C77F74 MOVZ W8, 0x1
	0x03C77F78 STRB W8, [X20 + 0x97D]
	0x03C77F7C STP X31, X31, [X31 + 0x60]
	0x03C77F80 STR X31, [X31 + 0x70]
	0x03C77F84 STP X31, X31, [X31 + 0x40]
	0x03C77F88 STR X31, [X31 + 0x50]
	0x03C77F8C STP X31, X31, [X31 + 0x20]
	0x03C77F90 STR X31, [X31 + 0x30]
	0x03C77F94 LDRB W8, [X19 + 0x51]
	0x03C77F98 LDR X0, [X19 + 0x40]
	0x03C77F9C FMOV S0, W31
	0x03C77FA0 STR S9, [X19 + 0x20]
	0x03C77FA4 CMP W8, 0x0
	0x03C77FA8 FCSEL S9, S9, S0, EQ
	0x03C77FAC STR S8, [X19 + 0x28]
	0x03C77FB0 CBZ X0, 0x3C785B0
	0x03C77FB4 ADRP X20, 0x4A3000
	0x03C77FB8 LDR X20, [X20 + 0x890]
	0x03C77FBC BL 0x3C74750
	0x03C77FC0 LDR X8, [X20]
	0x03C77FC4 LDRB W22, [X19 + 0x50]
	0x03C77FC8 LDR X21, [X19 + 0x40]
	0x03C77FCC MOV X20, X0
	0x03C77FD0 LDR W9, [X8 + 0xE0]
	0x03C77FD4 CBNZ W9, 0x3C77FE0
	0x03C77FD8 MOV X0, X8
	0x03C77FDC BL 0x1C16DFC
	0x03C77FE0 BL 0x3C6BB04
	0x03C77FE4 CMP X21, X0
	0x03C77FE8 CBZ W22, 0x3C780F8
	0x03C77FEC B.EQ 0x3C783F4
	0x03C77FF0 LDR X0, [X19 + 0x48]
	0x03C77FF4 CBZ X0, 0x3C785B0
	0x03C77FF8 ADRP X8, 0x4E9000
	0x03C77FFC LDR X8, [X8 + 0x368]
	0x03C78000 LDR X1, [X8]
	0x03C78004 ADD X8, X31, 0x8
	0x03C78008 BL 0x301CB58
	0x03C7800C LDUR V0, [X31 + 0x8]
	0x03C78010 LDR X8, [X31 + 0x18]
	0x03C78014 ADRP X22, 0x4E8000
	0x03C78018 STR V0, [X31 + 0x6]
	0x03C7801C STR X8, [X31 + 0x70]
	0x03C78020 LDR X22, [X22 + 0x358]
	0x03C78024 LDR X1, [X22]
	0x03C78028 ADD X0, X31, 0x60
	0x03C7802C BL 0x2BC4350
	0x03C78030 TBZ X0, 0x0, 0x3C780E8
	0x03C78034 LDR X19, [X31 + 0x70]
	0x03C78038 CBZ X19, 0x3C785A0
	0x03C7803C LDR X8, [X19]
	0x03C78040 LDP X9, X1, [X8 + 0x178]
	0x03C78044 MOV X0, X19
	0x03C78048 BLR X9
	0x03C7804C CBZ X20, 0x3C785A4
	0x03C78050 MOV W21, W0
	0x03C78054 MOV X0, X20
	0x03C78058 MOV X1, X31
	0x03C7805C BL 0x3C0C8A8
	0x03C78060 LDR X8, [X19]
	0x03C78064 CMP W21, W0
	0x03C78068 CSEL W23, W21, W0, GT
	0x03C7806C LDP X9, X1, [X8 + 0x188]
	0x03C78070 MOV X0, X19
	0x03C78074 BLR X9
	0x03C78078 MOV W21, W0
	0x03C7807C MOV X0, X20

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X21, 0x770000
	010 Move W8, [X21+2420]
	011 Move X20, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x47D000
	018 Move X0, [X0+1880]
	019 Call 0x1C17CF4
	020 Move X0, 0x47D000
	021 Move X0, [X0+2704]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+2420], W8
	025 Compare X20, 0
	026 JumpIfEqual {166}
	027 Move W8, [X20+24]
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move X24, 0x47D000
	030 Move X25, 0x47D000
	031 Move X24, [X24+2704]
	032 Move X25, [X25+1880]
	033 Move X23, -51245056
	034 Move X21, X31
	035 Add X22, X20, 32
	036 Add X23, X23, 3650
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X8, [X22]
	039 Compare X8, 0
	040 JumpIfEqual {175}
	041 Move W9, [X8+16]
	042 NotImplemented "Instruction CMP not yet implemented."
	043 NotImplemented "Instruction ADR not yet implemented."
	044 Move W11, [X23]
	045 Add X10, X10, X11
	046 CallNoReturn X10
	047 Move X0, [X8+24]
	048 Compare X0, 0
	049 JumpIfEqual {175}
	050 Move X8, [X0]
	051 Move X1, [X24]
	052 Move X8, [X8+64]
	053 Move X9, [X1+64]
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Call 0x1C17E08
	056 Move V0, [X0]
	057 Move [X19+48], W31
	058 Move [X19+16], S0
	059 Move [X19+24], S0
	060 Move X0, [X8+24]
	061 Compare X0, 0
	062 JumpIfEqual {175}
	063 Move X8, [X0]
	064 Move X1, [X24]
	065 Move X8, [X8+64]
	066 Move X9, [X1+64]
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Call 0x1C17E08
	069 Move V0, [X0]
	070 Move [X19+52], W31
	071 Move [X19+24], S0
	072 Move [X19+32], S0
	073 Move X0, [X8+24]
	074 Compare X0, 0
	075 JumpIfEqual {175}
	076 Move X8, [X0]
	077 Move X1, [X24]
	078 Move X8, [X8+64]
	079 Move X9, [X1+64]
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Call 0x1C17E08
	082 Move V0, [X0]
	083 Move V1, [X19+20]
	084 Move [X19+16], S0
	085 NotImplemented "Instruction FCMP not yet implemented."
	086 Move [X19+20], S0
	087 Move X0, [X8+24]
	088 Compare X0, 0
	089 JumpIfEqual {175}
	090 Move X8, [X0]
	091 Move X1, [X24]
	092 Move X8, [X8+64]
	093 Move X9, [X1+64]
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Call 0x1C17E08
	096 Move V0, [X0]
	097 Move V1, [X19+16]
	098 Move [X19+20], S0
	099 NotImplemented "Instruction FCMP not yet implemented."
	100 Move [X19+16], S0
	101 Move [X19+48], W31
	102 Move X0, [X8+24]
	103 Compare X0, 0
	104 JumpIfEqual {175}
	105 Move X8, [X0]
	106 Move X1, [X24]
	107 Move X8, [X8+64]
	108 Move X9, [X1+64]
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Call 0x1C17E08
	111 Move V0, [X0]
	112 Move V1, [X19+28]
	113 Move [X19+24], S0
	114 NotImplemented "Instruction FCMP not yet implemented."
	115 Move [X19+28], S0
	116 Move X0, [X8+24]
	117 Compare X0, 0
	118 JumpIfEqual {175}
	119 Move X8, [X0]
	120 Move X1, [X24]
	121 Move X8, [X8+64]
	122 Move X9, [X1+64]
	123 NotImplemented "Instruction CMP not yet implemented."
	124 Call 0x1C17E08
	125 Move V0, [X0]
	126 Move V1, [X19+24]
	127 Move [X19+28], S0
	128 NotImplemented "Instruction FCMP not yet implemented."
	129 Move [X19+24], S0
	130 Move [X19+52], W31
	131 Move X0, [X8+24]
	132 Compare X0, 0
	133 JumpIfEqual {175}
	134 Move X8, [X0]
	135 Move X1, [X25]
	136 Move X8, [X8+64]
	137 Move X9, [X1+64]
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Call 0x1C17E08
	140 Move W8, [X0]
	141 Move [X19+48], W8
	142 Move X0, [X8+24]
	143 Compare X0, 0
	144 JumpIfEqual {175}
	145 Move X8, [X0]
	146 Move X1, [X25]
	147 Move X8, [X8+64]
	148 Move X9, [X1+64]
	149 NotImplemented "Instruction CMP not yet implemented."
	150 Call 0x1C17E08
	151 Move W8, [X0]
	152 Move [X19+52], W8
	153 Move W8, [X20+24]
	154 Add X21, X21, 1
	155 NotImplemented "Instruction CMP not yet implemented."
	156 Move V0, [X19+20]
	157 NotImplemented "Instruction FCMP not yet implemented."
	158 Move V1, [X19+16]
	159 NotImplemented "Instruction FCMP not yet implemented."
	160 Move [X19+20], S1
	161 Move V0, [X19+28]
	162 NotImplemented "Instruction FCMP not yet implemented."
	163 Move V1, [X19+24]
	164 NotImplemented "Instruction FCMP not yet implemented."
	165 Move [X19+28], S1
	166 Move X20, [X31+48]
	167 Move X19, [X31+56]
	168 Move X22, [X31+32]
	169 Move X21, [X31+40]
	170 Move X24, [X31+16]
	171 Move X23, [X31+24]
	172 Move X30, [X31+64]
	173 Move X25, [X31+72]
	174 Return 
	175 Call 0x1C17F20
	176 Call 0x1C17F28
	177 Call 0x1C181E0

Method: System.String ToString()

Disassembly:
	0x03C78080 MOV X1, X31
	0x03C78084 BL 0x3C0C8E4
	0x03C78088 CMP W21, W0
	0x03C7808C LDR W8, [X19 + 0x30]
	0x03C78090 CSEL W9, W21, W0, GT
	0x03C78094 SCVTF S2, W9
	0x03C78098 SCVTF S1, W23
	0x03C7809C FSUB S2, S8, S2
	0x03C780A0 FADD S0, S9, S1
	0x03C780A4 FSUB S1, S2, S1
	0x03C780A8 CBZ W8, 0x3C780C0
	0x03C780AC LDR X8, [X19]
	0x03C780B0 LDP X9, X1, [X8 + 0x1D8]
	0x03C780B4 MOV X0, X19
	0x03C780B8 BLR X9
	0x03C780BC B 0x3C78024
	0x03C780C0 LDR X8, [X19]
	0x03C780C4 LDP S3, S2, [X19 + 0x10]
	0x03C780C8 LDP X9, X1, [X8 + 0x1D8]
	0x03C780CC FCMP S1, S2
	0x03C780D0 FCSEL S2, S2, S1, GT
	0x03C780D4 FCMP S1, S3
	0x03C780D8 FCSEL S1, S2, S3, PL
	0x03C780DC MOV X0, X19
	0x03C780E0 BLR X9
	0x03C780E4 B 0x3C78024
	0x03C780E8 ADRP X8, 0x4E8000
	0x03C780EC LDR X8, [X8 + 0x350]
	0x03C780F0 ADD X0, X31, 0x60
	0x03C780F4 B 0x3C78570
	0x03C780F8 B.EQ 0x3C781AC
	0x03C780FC CBZ X20, 0x3C785B0
	0x03C78100 MOV X0, X20
	0x03C78104 MOV X1, X31
	0x03C78108 BL 0x3C0C8A8
	0x03C7810C MOV W21, W0
	0x03C78110 MOV X0, X20
	0x03C78114 MOV X1, X31
	0x03C78118 BL 0x3C0C8E4
	0x03C7811C LDR X8, [X19 + 0x48]
	0x03C78120 CBZ X8, 0x3C785B0
	0x03C78124 LDR W9, [X8 + 0x18]
	0x03C78128 SCVTF S10, W21
	0x03C7812C SCVTF S11, W0
	0x03C78130 CBZ W9, 0x3C781A0
	0x03C78134 ADRP X20, 0x4E8000
	0x03C78138 LDR X20, [X20 + 0x3A0]
	0x03C7813C MOV X0, X8
	0x03C78140 MOV W1, W31
	0x03C78144 LDR X2, [X20]
	0x03C78148 BL 0x301BCCC
	0x03C7814C CBZ X0, 0x3C785B0
	0x03C78150 LDR X8, [X0]
	0x03C78154 LDP X9, X1, [X8 + 0x178]
	0x03C78158 BLR X9
	0x03C7815C LDR X8, [X19 + 0x48]
	0x03C78160 SCVTF S0, W0
	0x03C78164 FCMP S10, S0
	0x03C78168 FCSEL S10, S10, S0, GT
	0x03C7816C CBZ X8, 0x3C785B0
	0x03C78170 LDR W9, [X8 + 0x18]
	0x03C78174 LDR X2, [X20]
	0x03C78178 MOV X0, X8
	0x03C7817C SUB W1, W9, 0x1
	0x03C78180 BL 0x301BCCC
	0x03C78184 CBZ X0, 0x3C785B0
	0x03C78188 LDR X8, [X0]
	0x03C7818C LDP X9, X1, [X8 + 0x188]
	0x03C78190 BLR X9
	0x03C78194 SCVTF S0, W0
	0x03C78198 FCMP S11, S0
	0x03C7819C FCSEL S11, S11, S0, GT
	0x03C781A0 FADD S0, S11, S10
	0x03C781A4 FADD S9, S9, S10
	0x03C781A8 FSUB S8, S8, S0
	0x03C781AC LDR X0, [X19 + 0x48]
	0x03C781B0 CBZ X0, 0x3C785B0
	0x03C781B4 LDR W8, [X0 + 0x18]
	0x03C781B8 LDR V1, [X19 + 0x54]
	0x03C781BC LDP S2, S0, [X19 + 0x70]
	0x03C781C0 FMOV S10, W31
	0x03C781C4 SUB W8, W8, 0x1
	0x03C781C8 SCVTF S3, W8
	0x03C781CC FMUL S1, S1, S3
	0x03C781D0 FCMP S2, S0
	0x03C781D4 FSUB S1, S8, S1
	0x03C781D8 FMOV S8, W31
	0x03C781DC B.EQ 0x3C78200
	0x03C781E0 FSUB S3, S1, S2
	0x03C781E4 FSUB S2, S0, S2
	0x03C781E8 FDIV S2, S3, S2
	0x03C781EC FCMP S2, 0x0
	0x03C781F0 FMOV S8, W31
	0x03C781F4 B.MI 0x3C78200
	0x03C781F8 FMOV S3, 1
	0x03C781FC FMIN S8, S2, S3
	0x03C78200 FCMP S1, S0
	0x03C78204 B.LE 0x3C78220
	0x03C78208 LDR W8, [X19 + 0x64]
	0x03C7820C CMP W8, 0x1
	0x03C78210 B.LT 0x3C78220
	0x03C78214 FSUB S0, S1, S0
	0x03C78218 SCVTF S1, W8
	0x03C7821C FDIV S10, S0, S1
	0x03C78220 ADRP X8, 0x4E8000
	0x03C78224 LDR X8, [X8 + 0x368]
	0x03C78228 LDR X1, [X8]
	0x03C7822C ADD X8, X31, 0x8
	0x03C78230 BL 0x301CB58
	0x03C78234 LDUR V0, [X31 + 0x8]
	0x03C78238 LDR X8, [X31 + 0x18]
	0x03C7823C ADRP X22, 0x4E8000
	0x03C78240 LDR X22, [X22 + 0x358]
	0x03C78244 FMOV S1, W31
	0x03C78248 MOV W20, W31
	0x03C7824C MOVZ W23, 0x1
	0x03C78250 FMOV D14, 0.5
	0x03C78254 FMAX S13, S8, S1
	0x03C78258 STR V0, [X31 + 0x2]
	0x03C7825C STR X8, [X31 + 0x30]
	0x03C78260 LDR X1, [X22]
	0x03C78264 ADD X0, X31, 0x20
	0x03C78268 BL 0x2BC4350
	0x03C7826C TBZ X0, 0x0, 0x3C783E4
	0x03C78270 LDR X21, [X31 + 0x30]
	0x03C78274 CBZ X21, 0x3C785A8
	0x03C78278 LDP S12, S11, [X21 + 0x10]
	0x03C7827C LDRB W8, [X21 + 0x38]
	0x03C78280 LDR V15, [X21 + 0x30]
	0x03C78284 CBZ W8, 0x3C782C8
	0x03C78288 LDR X8, [X21]
	0x03C7828C LDP X9, X1, [X8 + 0x178]
	0x03C78290 MOV X0, X21
	0x03C78294 BLR X9
	0x03C78298 LDR X8, [X21]
	0x03C7829C ANDS W31, W23, 0x1
	0x03C782A0 LDP X9, X1, [X8 + 0x188]
	0x03C782A4 CSEL W8, W31, W0, NE
	0x03C782A8 CMP W20, W8
	0x03C782AC CSEL W24, W20, W8, GT
	0x03C782B0 MOV X0, X21
	0x03C782B4 BLR X9
	0x03C782B8 SCVTF S0, W24
	0x03C782BC MOV W20, W0
	0x03C782C0 MOV W23, W31
	0x03C782C4 FADD S9, S9, S0
	0x03C782C8 FCVT S0, S9
	0x03C782CC ADD X0, X31, 0x8
	0x03C782D0 BL 0x3EB1C00
	0x03C782D4 FCMP S9, 0x0
	0x03C782D8 B.GE 0x3C782F4
	0x03C782DC FMOV D1, -0.5
	0x03C782E0 FCMP D0, D1
	0x03C782E4 B.NE 0x3C7831C
	0x03C782E8 LDR V0, [X31 + 0x8]
	0x03C782EC FMOV S1, -1
	0x03C782F0 B 0x3C78304
	0x03C782F4 FCMP D0, D14
	0x03C782F8 B.NE 0x3C7832C
	0x03C782FC LDR V0, [X31 + 0x8]
	0x03C78300 FMOV S1, 1
	0x03C78304 FCVTZS X8, D0
	0x00000000 INVALID
	0x03C7830C FADD S1, S0, S1
	0x03C78310 ANDS X31, X8, 0x1
	0x03C78314 FCSEL S8, S0, S1, EQ
	0x03C78318 B 0x3C78338
	0x03C7831C FMOV S0, -0.5
	0x03C78320 FADD S0, S9, S0
	0x03C78324 FRINTP S8, S0
	0x03C78328 B 0x3C78338
	0x03C7832C FMOV S0, 0.5
	0x03C78330 FADD S0, S9, S0
	0x03C78334 FRINTM S8, S0
	0x03C78338 FSUB S0, S11, S12
	0x03C7833C SCVTF S1, S15
	0x03C78340 FMUL S0, S13, S0
	0x03C78344 FADD S0, S12, S0
	0x03C78348 FMUL S1, S10, S1
	0x03C7834C FADD S11, S0, S1
	0x03C78350 FCVT S0, S11
	0x03C78354 ADD X0, X31, 0x8
	0x03C78358 BL 0x3EB1C00
	0x03C7835C FCMP S11, 0x0
	0x03C78360 B.GE 0x3C7837C
	0x03C78364 FMOV D1, -0.5
	0x03C78368 FCMP D0, D1
	0x03C7836C B.NE 0x3C783A4
	0x03C78370 LDR V0, [X31 + 0x8]
	0x03C78374 FMOV S1, -1
	0x03C78378 B 0x3C7838C
	0x03C7837C FCMP D0, D14
	0x03C78380 B.NE 0x3C783B4
	0x03C78384 LDR V0, [X31 + 0x8]
	0x03C78388 FMOV S1, 1
	0x03C7838C FCVTZS X8, D0
	0x00000000 INVALID
	0x03C78394 FADD S1, S0, S1
	0x03C78398 ANDS X31, X8, 0x1
	0x03C7839C FCSEL S1, S0, S1, EQ
	0x03C783A0 B 0x3C783C0
	0x03C783A4 FMOV S0, -0.5
	0x03C783A8 FADD S0, S11, S0
	0x03C783AC FRINTP S1, S0
	0x03C783B0 B 0x3C783C0
	0x03C783B4 FMOV S0, 0.5
	0x03C783B8 FADD S0, S11, S0
	0x03C783BC FRINTM S1, S0
	0x03C783C0 LDR X8, [X21]
	0x03C783C4 LDP X9, X1, [X8 + 0x1D8]
	0x03C783C8 MOV X0, X21
	0x03C783CC MOV V0.16B, V8.16B
	0x03C783D0 BLR X9
	0x03C783D4 LDR V0, [X19 + 0x54]
	0x03C783D8 FADD S0, S11, S0
	0x03C783DC FADD S9, S9, S0
	0x03C783E0 B 0x3C78260
	0x03C783E4 ADRP X8, 0x4E8000
	0x03C783E8 LDR X8, [X8 + 0x350]
	0x03C783EC ADD X0, X31, 0x20
	0x03C783F0 B 0x3C78570
	0x03C783F4 LDR X8, [X19]
	0x03C783F8 MOV X0, X19
	0x03C783FC LDP X9, X1, [X8 + 0x178]
	0x03C78400 BLR X9
	0x03C78404 LDR X8, [X19]
	0x03C78408 MOV W20, W0
	0x03C7840C MOV X0, X19
	0x03C78410 LDP X9, X1, [X8 + 0x178]
	0x03C78414 BLR X9
	0x03C78418 LDR X8, [X19]
	0x03C7841C MOV W21, W0
	0x03C78420 MOV X0, X19
	0x03C78424 LDP X9, X1, [X8 + 0x188]
	0x03C78428 BLR X9
	0x03C7842C LDR X9, [X19 + 0x48]
	0x03C78430 CBZ X9, 0x3C785B0
	0x03C78434 ADRP X8, 0x4E8000
	0x03C78438 LDR X8, [X8 + 0x368]
	0x03C7843C SCVTF S0, W20
	0x03C78440 FSUB S9, S9, S0
	0x03C78444 LDR X1, [X8]
	0x03C78448 ADD W8, W0, W21
	0x03C7844C SCVTF S0, W8
	0x03C78450 ADD X8, X31, 0x8
	0x03C78454 MOV X0, X9
	0x03C78458 FADD S8, S0, S8
	0x03C7845C BL 0x301CB58
	0x03C78460 LDUR V0, [X31 + 0x8]
	0x03C78464 LDR X8, [X31 + 0x18]
	0x03C78468 ADRP X22, 0x4E8000
	0x03C7846C STR V0, [X31 + 0x4]
	0x03C78470 STR X8, [X31 + 0x50]
	0x03C78474 LDR X22, [X22 + 0x358]
	0x03C78478 LDR X1, [X22]
	0x03C7847C ADD X0, X31, 0x40
	0x03C78480 BL 0x2BC4350
	0x03C78484 TBZ X0, 0x0, 0x3C78564
	0x03C78488 LDR X19, [X31 + 0x50]
	0x03C7848C CBZ X19, 0x3C785AC
	0x03C78490 LDR X9, [X19]
	0x03C78494 LDR W10, [X19 + 0x30]
	0x03C78498 LDP X8, X1, [X9 + 0x178]
	0x03C7849C CBZ W10, 0x3C784F8
	0x03C784A0 MOV X0, X19
	0x03C784A4 BLR X8
	0x03C784A8 LDR X8, [X19]
	0x03C784AC MOV W20, W0
	0x03C784B0 LDP X9, X1, [X8 + 0x178]
	0x03C784B4 MOV X0, X19
	0x03C784B8 BLR X9
	0x03C784BC LDR X8, [X19]
	0x03C784C0 MOV W21, W0
	0x03C784C4 LDP X9, X1, [X8 + 0x188]
	0x03C784C8 MOV X0, X19
	0x03C784CC BLR X9
	0x03C784D0 LDR X8, [X19]
	0x03C784D4 ADD W9, W0, W21
	0x03C784D8 SCVTF S0, W20
	0x03C784DC SCVTF S1, W9
	0x03C784E0 LDP X10, X1, [X8 + 0x1D8]
	0x03C784E4 FADD S0, S9, S0
	0x03C784E8 FSUB S1, S8, S1
	0x03C784EC MOV X0, X19
	0x03C784F0 BLR X10
	0x03C784F4 B 0x3C78478
	0x03C784F8 MOV X0, X19
	0x03C784FC BLR X8
	0x03C78500 LDR X8, [X19]
	0x03C78504 MOV W20, W0
	0x03C78508 LDP X9, X1, [X8 + 0x178]
	0x03C7850C MOV X0, X19
	0x03C78510 BLR X9
	0x03C78514 LDR X8, [X19]
	0x03C78518 MOV W21, W0
	0x03C7851C LDP X9, X1, [X8 + 0x188]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X20, 0x76F000
	015 Move X25, 0x47C000
	016 Move W8, [X20+2421]
	017 Move X25, [X25+2440]
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {61}
	023 Move X0, 0x4E9000
	024 Move X0, [X0+840]
	025 Call 0x1C17CF4
	026 Move X0, 0x47C000
	027 Move X0, [X0+2512]
	028 Call 0x1C17CF4
	029 Move X0, 0x47C000
	030 Move X0, [X0+2704]
	031 Call 0x1C17CF4
	032 Move X0, 0x47C000
	033 Move X0, [X0+2760]
	034 Call 0x1C17CF4
	035 Move X0, 0x4E9000
	036 Move X0, [X0+1384]
	037 Call 0x1C17CF4
	038 Move X0, 0x4E9000
	039 Move X0, [X0+1392]
	040 Call 0x1C17CF4
	041 Move X0, 0x481000
	042 Move X0, [X0+1016]
	043 Call 0x1C17CF4
	044 Move X0, 0x47C000
	045 Move X0, [X0+3544]
	046 Call 0x1C17CF4
	047 Move X0, 0x47D000
	048 Move X0, [X0+680]
	049 Call 0x1C17CF4
	050 Move X0, 0x4E9000
	051 Move X0, [X0+1400]
	052 Call 0x1C17CF4
	053 Move X0, 0x485000
	054 Move X0, [X0+3360]
	055 Call 0x1C17CF4
	056 Move X0, 0x47C000
	057 Move X0, [X0+2440]
	058 Call 0x1C17CF4
	059 Move W8, 1
	060 Move [X20+2421], W8
	061 Move X24, 0x4E9000
	062 Move X26, 0x47C000
	063 Move X29, 0x47C000
	064 Move X23, 0x47C000
	065 Move X22, 0x4E9000
	066 Move X28, 0x47C000
	067 Move X27, 0x47D000
	068 Move X24, [X24+840]
	069 Move X26, [X26+3544]
	070 Move X29, [X29+2760]
	071 Move X23, [X23+2512]
	072 Move X22, [X22+1400]
	073 Move X28, [X28+2704]
	074 Move X21, [X25]
	075 Move X27, [X27+680]
	076 Move W20, W31
	077 Move X0, [X24]
	078 Move W8, [X0+224]
	079 Compare W8, 0
	080 JumpIfNotEqual {83}
	081 Call 0x1C17DFC
	082 Move X0, [X24]
	083 Move X8, [X0+184]
	084 Move W8, [X8+16]
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move X1, [X26]
	087 Move X0, X21
	088 Move X2, X31
	089 Call String.Concat, X0, X1
	090 Move X21, X0
	091 Add W20, W20, 1
	092 Move X0, [X29]
	093 Move W1, 12
	094 Call 0x1C17D6C
	095 Compare X0, 0
	096 JumpIfEqual {312}
	097 Move W8, [X0+24]
	098 Move X20, X0
	099 Compare W8, 0
	100 JumpIfEqual {308}
	101 Move [X20+32], X21
	102 Move X0, [X23]
	103 Move W1, 6
	104 Call 0x1C17D6C
	105 Move X23, [X19+64]
	106 Move X22, [X22]
	107 Move X21, X0
	108 Compare X23, 0
	109 JumpIfEqual {126}
	110 Move X24, [X23+120]
	111 Compare X24, 0
	112 JumpIfNotEqual {129}
	113 Move X24, 0x76F000
	114 Move X8, [X24+1816]
	115 Compare X8, 0
	116 JumpIfNotEqual {122}
	117 Move X0, -51871744
	118 Add X0, X0, 2153
	119 Call 0x1C17CB8
	120 Move X8, X0
	121 Move [X24+1816], X0
	122 Move X0, X23
	123 NotImplemented "Instruction BLR not yet implemented."
	124 Move X24, X0
	125 Move [X23+120], X0
	126 Move X8, 0x485000
	127 Move X8, [X8+3360]
	128 Move X24, [X8]
	129 Compare X21, 0
	130 JumpIfEqual {312}
	131 Compare X24, 0
	132 JumpIfEqual {139}
	133 Move X8, [X21]
	134 Move X0, X24
	135 Move X1, [X8+64]
	136 Call 0x1C17E00
	137 Compare X0, 0
	138 JumpIfEqual {309}
	139 Move W8, [X21+24]
	140 Compare W8, 0
	141 JumpIfEqual {308}
	142 Move X0, X19
	143 Move X1, X31
	144 Move [X21+32], X24
	145 Call "il2cpp_vm_object_is_inst", X0
	146 Move X23, X0
	147 Compare X0, 0
	148 JumpIfEqual {155}
	149 Move X8, [X21]
	150 Move X0, X23
	151 Move X1, [X8+64]
	152 Call 0x1C17E00
	153 Compare X0, 0
	154 JumpIfEqual {309}
	155 Move W8, [X21+24]
	156 NotImplemented "Instruction CMP not yet implemented."
	157 Move [X21+40], X23
	158 Move V0, [X19+32]
	159 Move X0, [X28]
	160 Add X1, X31, 12
	161 Move [X31+12], S0
	162 Call 0x1C17E04
	163 Move X23, X0
	164 Compare X0, 0
	165 JumpIfEqual {172}
	166 Move X8, [X21]
	167 Move X0, X23
	168 Move X1, [X8+64]
	169 Call 0x1C17E00
	170 Compare X0, 0
	171 JumpIfEqual {309}
	172 Move W8, [X21+24]
	173 NotImplemented "Instruction CMP not yet implemented."
	174 Move [X21+48], X23
	175 Move V0, [X19+40]
	176 Move V1, [X19+32]
	177 Move X0, [X28]
	178 Add X1, X31, 8
	179 Add S0, S0, S1
	180 Move [X31+8], S0
	181 Call 0x1C17E04
	182 Move X23, X0
	183 Compare X0, 0
	184 JumpIfEqual {191}
	185 Move X8, [X21]
	186 Move X0, X23
	187 Move X1, [X8+64]
	188 Call 0x1C17E00
	189 Compare X0, 0
	190 JumpIfEqual {309}
	191 Move W8, [X21+24]
	192 NotImplemented "Instruction CMP not yet implemented."
	193 Move [X21+56], X23
	194 Move V0, [X19+36]
	195 Move X0, [X28]
	196 Add X1, X31, 4
	197 Move [X31+4], S0
	198 Call 0x1C17E04
	199 Move X23, X0
	200 Compare X0, 0
	201 JumpIfEqual {208}
	202 Move X8, [X21]
	203 Move X0, X23
	204 Move X1, [X8+64]
	205 Call 0x1C17E00
	206 Compare X0, 0
	207 JumpIfEqual {309}
	208 Move W8, [X21+24]
	209 NotImplemented "Instruction CMP not yet implemented."
	210 Move [X21+64], X23
	211 Move V0, [X19+44]
	212 Move V1, [X19+36]
	213 Move X0, [X28]
	214 Add X1, X31, 0
	215 Add S0, S0, S1
	216 Move [X31], S0
	217 Call 0x1C17E04
	218 Move X23, X0
	219 Compare X0, 0
	220 JumpIfEqual {227}
	221 Move X8, [X21]
	222 Move X0, X23
	223 Move X1, [X8+64]
	224 Call 0x1C17E00
	225 Compare X0, 0
	226 JumpIfEqual {309}
	227 Move W8, [X21+24]
	228 NotImplemented "Instruction CMP not yet implemented."
	229 Move X0, X22
	230 Move X1, X21
	231 Move X2, X31
	232 Move [X21+72], X23
	233 Call UnityString.Format, X0, X1
	234 Move W8, [X20+24]
	235 NotImplemented "Instruction CMP not yet implemented."
	236 Move [X20+40], X0
	237 Move X21, 0x481000
	238 Move X21, [X21+1016]
	239 NotImplemented "Instruction CMP not yet implemented."
	240 Move X8, 0x4E9000
	241 Move X8, [X8+1384]
	242 Add X0, X19, 16
	243 Move X1, X31
	244 Move X8, [X8]
	245 Move [X20+48], X8
	246 Call Single.ToString, X0
	247 Move W8, [X20+24]
	248 NotImplemented "Instruction CMP not yet implemented."
	249 NotImplemented "Instruction CMP not yet implemented."
	250 Move [X20+56], X0
	251 Move X8, [X27]
	252 Add X0, X19, 20
	253 Move X1, X31
	254 Move [X20+64], X8
	255 Call Single.ToString, X0
	256 Move W8, [X20+24]
	257 NotImplemented "Instruction CMP not yet implemented."
	258 NotImplemented "Instruction CMP not yet implemented."
	259 Move [X20+72], X0
	260 Move W9, [X19+48]
	261 NotImplemented "Instruction CMP not yet implemented."
	262 NotImplemented "Instruction CSEL not yet implemented."
	263 Move X9, [X9]
	264 NotImplemented "Instruction CMP not yet implemented."
	265 Move [X20+80], X9
	266 Move X8, 0x4E9000
	267 Move X8, [X8+1392]
	268 Add X0, X19, 24
	269 Move X1, X31
	270 Move X8, [X8]
	271 Move [X20+88], X8
	272 Call Single.ToString, X0
	273 Move W8, [X20+24]
	274 NotImplemented "Instruction CMP not yet implemented."
	275 NotImplemented "Instruction CMP not yet implemented."
	276 Move [X20+96], X0
	277 Move X8, [X27]
	278 Add X0, X19, 28
	279 Move X1, X31
	280 Move [X20+104], X8
	281 Call Single.ToString, X0
	282 Move W8, [X20+24]
	283 NotImplemented "Instruction CMP not yet implemented."
	284 NotImplemented "Instruction CMP not yet implemented."
	285 Move [X20+112], X0
	286 Move W8, [X19+52]
	287 Move X0, X20
	288 Move X1, X31
	289 NotImplemented "Instruction CMP not yet implemented."
	290 NotImplemented "Instruction CSEL not yet implemented."
	291 Move X8, [X8]
	292 Move [X20+120], X8
	293 Call String.Concat, X0
	294 Move X20, [X31+96]
	295 Move X19, [X31+104]
	296 Move X22, [X31+80]
	297 Move X21, [X31+88]
	298 Move X24, [X31+64]
	299 Move X23, [X31+72]
	300 Move X26, [X31+48]
	301 Move X25, [X31+56]
	302 Move X28, [X31+32]
	303 Move X27, [X31+40]
	304 Move X29, [X31+16]
	305 Move X30, [X31+24]
	306 Add X31, X31, 112
	307 Return X0
	308 Call 0x1C17F28
	309 Call 0x1C17F44
	310 Move X1, X31
	311 Call 0x1C17DEC
	312 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x03C78520 MOV X0, X19
	0x03C78524 BLR X9
	0x03C78528 LDR X9, [X19]
	0x03C7852C LDP S0, S1, [X19 + 0x10]
	0x03C78530 ADD W8, W0, W21
	0x03C78534 SCVTF S2, W8
	0x03C78538 FSUB S2, S8, S2
	0x03C7853C LDP X8, X1, [X9 + 0x1D8]
	0x03C78540 FCMP S2, S1
	0x03C78544 FCSEL S1, S1, S2, GT
	0x03C78548 FCMP S2, S0
	0x03C7854C FCSEL S1, S1, S0, PL
	0x03C78550 SCVTF S0, W20
	0x03C78554 FADD S0, S9, S0
	0x03C78558 MOV X0, X19
	0x03C7855C BLR X8
	0x03C78560 B 0x3C78478
	0x03C78564 ADRP X8, 0x4E8000
	0x03C78568 LDR X8, [X8 + 0x350]
	0x03C7856C ADD X0, X31, 0x40
	0x03C78570 LDR X1, [X8]
	0x03C78574 BL 0x2BC434C
	0x03C78578 LDP X20, X19, [X31 + 0xF0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x76F000
	005 Move X19, 0x4E9000
	006 Move W8, [X20+2422]
	007 Move X19, [X19+840]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x4E9000
	013 Move X0, [X0+840]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+2422], W8
	017 Move X8, [X19]
	018 Move X9, -51957760
	019 Move V0, [X9+188]
	020 Move X8, [X8+184]
	021 Move [X8], V0
	022 Move X8, [X19]
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X8, [X8+184]
	026 Move [X8+16], W31
	027 Move X30, [X31+32]
	028 Return 

