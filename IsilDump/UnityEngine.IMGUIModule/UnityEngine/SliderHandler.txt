Type: UnityEngine.SliderHandler

Method: System.Void .ctor(UnityEngine.Rect position, System.Single currentValue, System.Single size, System.Single start, System.Single end, UnityEngine.GUIStyle slider, UnityEngine.GUIStyle thumb, System.Boolean horiz, System.Int32 id, UnityEngine.GUIStyle thumbExtent = null)

Disassembly:
	0x03C7AFCC MOV X1, X31
	0x03C7AFD0 BL 0x3C74750
	0x03C7AFD4 CBZ X0, 0x3C7B044
	0x03C7AFD8 MOV X1, X31
	0x03C7AFDC BL 0x3C0C9D4
	0x03C7AFE0 B 0x3C7B004
	0x03C7AFE4 LDR X0, [X19 + 0x20]
	0x03C7AFE8 CBZ X0, 0x3C7B044
	0x03C7AFEC LDR V10, [X19 + 0xC]
	0x03C7AFF0 MOV X1, X31

ISIL:
	001 And W8, W3, 1
	002 Move [X0], S0
	003 Move [X0+8], S1
	004 Move [X0+8], S2
	005 Move [X0+16], S3
	006 Move [X0+16], S4
	007 Move [X0+24], S5
	008 Move [X0+24], S6
	009 Move [X0+32], S7
	010 Move [X0+32], X1
	011 Move [X0+40], X2
	012 Move [X0+48], X5
	013 Move [X0+56], W8
	014 Move [X0+60], W4
	015 Return 

Method: System.Single Handle()

Disassembly:
	0x03C7AFF4 BL 0x3C74750
	0x03C7AFF8 CBZ X0, 0x3C7B044
	0x03C7AFFC MOV X1, X31
	0x03C7B000 BL 0x3C0CA10
	0x03C7B004 MOV W20, W0
	0x03C7B008 MOV X0, X19
	0x03C7B00C BL 0x3C7B378
	0x03C7B010 SCVTF S1, W20
	0x03C7B014 FSUB S2, S8, S9
	0x03C7B018 FCMP S8, S9
	0x03C7B01C LDP X20, X19, [X31 + 0x20]
	0x03C7B020 LDR X30, [X31 + 0x18]
	0x03C7B024 LDP D9, D8, [X31 + 0x8]
	0x03C7B028 FMOV S3, 1
	0x03C7B02C FSUB S1, S10, S1
	0x03C7B030 FSUB S0, S1, S0
	0x03C7B034 FCSEL S1, S3, S2, EQ
	0x03C7B038 FDIV S0, S0, S1
	0x03C7B03C LDR V10, [X31], #0x30
	0x03C7B040 RET
	0x03C7B044 BL 0x1C16F20
	0x03C7B048 STP D9, D8, [X31 - 0x20]!
	0x03C7B04C STP X30, X19, [X31 + 0x10]
	0x03C7B050 MOV X19, X0
	0x03C7B054 LDR X0, [X0 + 0x30]
	0x03C7B058 CBZ X0, 0x3C7B0BC
	0x03C7B05C MOV X1, X31
	0x03C7B060 BL 0x3C735D8
	0x03C7B064 LDR X0, [X19 + 0x30]
	0x03C7B068 CBZ X0, 0x3C7B0BC
	0x03C7B06C MOV X1, X31
	0x03C7B070 MOV V8.16B, V0.16B

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+32]
	004 Move X19, X0
	005 Compare X8, 0
	006 JumpIfEqual {25}
	007 Move X8, [X19+40]
	008 Compare X8, 0
	009 JumpIfEqual {25}
	010 Move X0, X19
	011 Call SliderHandler.CurrentEventType, X0
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Move X9, -51261440
	014 Move W8, W0
	015 Add X9, X9, 3658
	016 NotImplemented "Instruction ADR not yet implemented."
	017 Move W11, [X9]
	018 Add X10, X10, X11
	019 CallNoReturn X10
	020 Move X0, X19
	021 Move X30, [X31+16]
	022 Move X19, [X31+24]
	023 Call SliderHandler.OnMouseDown, X0
	024 Return V0
	025 Move V0, [X19+16]
	026 Move X30, [X31+16]
	027 Move X19, [X31+24]
	028 Return V0
	029 Move X0, X19
	030 Move X30, [X31+16]
	031 Move X19, [X31+24]
	032 Call SliderHandler.OnMouseUp, X0
	033 Return V0
	034 Move X0, X19
	035 Move X30, [X31+16]
	036 Move X19, [X31+24]
	037 Call SliderHandler.OnMouseDrag, X0
	038 Return V0
	039 Move X0, X19
	040 Move X30, [X31+16]
	041 Move X19, [X31+24]
	042 Call SliderHandler.OnRepaint, X0
	043 Return V0

Method: System.Single OnMouseDown()

Disassembly:
	0x03C7B09C FMUL S4, S9, S4
	0x03C7B0A0 FADD S1, S1, S3
	0x03C7B0A4 FSUB S0, S0, S2
	0x03C7B0A8 FSUB S1, S1, S4
	0x03C7B0AC MOV V2.16B, V8.16B
	0x03C7B0B0 MOV V3.16B, V9.16B
	0x03C7B0B4 LDP D9, D8, [X31], #0x20
	0x03C7B0B8 RET
	0x03C7B0BC BL 0x1C16F20
	0x03C7B0C0 LDRB W8, [X0 + 0x38]
	0x03C7B0C4 CBZ W8, 0x3C7B0CC
	0x03C7B0C8 B 0x3C7B258
	0x03C7B0CC B 0x3C7B138
	0x03C7B0D0 STR X30, [X31 - 0x20]!
	0x03C7B0D4 STP X20, X19, [X31 + 0x10]
	0x03C7B0D8 LDRB W20, [X0 + 0x38]
	0x03C7B0DC MOV X19, X0
	0x03C7B0E0 BL 0x3C7B0C0
	0x03C7B0E4 CBZ W20, 0x3C7B0F8
	0x03C7B0E8 LDR V1, [X19]
	0x03C7B0EC FADD S0, S2, S0
	0x03C7B0F0 FSUB S0, S0, S1
	0x03C7B0F4 B 0x3C7B104
	0x03C7B0F8 LDR V0, [X19 + 0x4]
	0x03C7B0FC FADD S1, S3, S1
	0x03C7B100 FSUB S0, S1, S0
	0x03C7B104 LDP X20, X19, [X31 + 0x10]
	0x03C7B108 LDR X30, [X31], #0x20
	0x03C7B10C RET
	0x03C7B110 LDP S0, S1, [X0 + 0x18]
	0x03C7B114 FCMP S0, S1
	0x03C7B118 FCSEL S0, S0, S1, MI
	0x03C7B11C RET
	0x03C7B120 LDP S1, S0, [X0 + 0x18]
	0x03C7B124 LDR V2, [X0 + 0x14]
	0x03C7B128 FCMP S1, S0
	0x03C7B12C FCSEL S0, S1, S0, GT
	0x03C7B130 FSUB S0, S0, S2
	0x03C7B134 RET
	0x03C7B138 STP D11, D10, [X31 - 0x40]!
	0x03C7B13C STP D9, D8, [X31 + 0x10]
	0x03C7B140 STR X30, [X31 + 0x20]
	0x03C7B144 STP X20, X19, [X31 + 0x30]
	0x03C7B148 MOV X19, X0
	0x03C7B14C LDR X0, [X0 + 0x28]
	0x03C7B150 CBZ X0, 0x3C7B254
	0x03C7B154 MOV X1, X31
	0x03C7B158 BL 0x3C74660
	0x03C7B15C LDR X8, [X19 + 0x20]
	0x03C7B160 CBZ X8, 0x3C7B254
	0x03C7B164 MOV X20, X0
	0x03C7B168 MOV X0, X8
	0x03C7B16C MOV X1, X31
	0x03C7B170 BL 0x3C74750
	0x03C7B174 CBZ X0, 0x3C7B254
	0x03C7B178 LDP S2, S3, [X19 + 0x8]
	0x03C7B17C LDP S0, S1, [X19]
	0x03C7B180 MOV X1, X31
	0x03C7B184 BL 0x3C0CA4C
	0x03C7B188 CBZ X20, 0x3C7B254
	0x03C7B18C MOV X0, X20
	0x03C7B190 MOV X1, X31
	0x03C7B194 BL 0x3C0CA4C
	0x03C7B198 LDR X0, [X19 + 0x28]
	0x03C7B19C CBZ X0, 0x3C7B254
	0x03C7B1A0 MOV X1, X31
	0x03C7B1A4 MOV V8.16B, V0.16B
	0x03C7B1A8 MOV V9.16B, V1.16B
	0x03C7B1AC MOV V10.16B, V2.16B
	0x03C7B1B0 BL 0x3C735D8
	0x03C7B1B4 FCMP S0, 0x0
	0x03C7B1B8 B.EQ 0x3C7B1D0
	0x03C7B1BC LDR X0, [X19 + 0x28]
	0x03C7B1C0 CBZ X0, 0x3C7B254
	0x03C7B1C4 MOV X1, X31
	0x03C7B1C8 BL 0x3C735D8
	0x03C7B1CC MOV V10.16B, V0.16B
	0x03C7B1D0 MOV X0, X19
	0x03C7B1D4 BL 0x3C7B378
	0x03C7B1D8 MOV X0, X19
	0x03C7B1DC MOV V11.16B, V0.16B
	0x03C7B1E0 BL 0x3C7AFA0
	0x03C7B1E4 LDP S1, S4, [X19 + 0x18]
	0x03C7B1E8 LDP S2, S3, [X19 + 0x10]
	0x03C7B1EC FCMP S1, S4
	0x03C7B1F0 FCSEL S6, S1, S4, GT
	0x03C7B1F4 FSUB S6, S6, S3
	0x03C7B1F8 FCSEL S5, S1, S4, MI
	0x03C7B1FC FCMP S6, S2
	0x03C7B200 FCSEL S6, S6, S2, MI
	0x03C7B204 FCMP S5, S2
	0x03C7B208 FCSEL S2, S6, S5, LE
	0x03C7B20C FCMP S1, S4
	0x03C7B210 B.PL 0x3C7B220
	0x03C7B214 FMUL S3, S0, S3
	0x03C7B218 FADD S3, S11, S3
	0x03C7B21C B 0x3C7B22C
	0x03C7B220 FADD S2, S3, S2
	0x03C7B224 FMUL S3, S0, S3
	0x03C7B228 FSUB S3, S11, S3
	0x03C7B22C FSUB S1, S2, S1
	0x03C7B230 FMUL S0, S0, S1
	0x03C7B234 FADD S1, S9, S0
	0x03C7B238 MOV V0.16B, V8.16B
	0x03C7B23C LDP X20, X19, [X31 + 0x30]
	0x03C7B240 LDR X30, [X31 + 0x20]
	0x03C7B244 LDP D9, D8, [X31 + 0x10]
	0x03C7B248 MOV V2.16B, V10.16B
	0x03C7B24C LDP D11, D10, [X31], #0x40
	0x03C7B250 RET
	0x03C7B254 BL 0x1C16F20
	0x03C7B258 STP D11, D10, [X31 - 0x40]!
	0x03C7B25C STP D9, D8, [X31 + 0x10]
	0x03C7B260 STR X30, [X31 + 0x20]
	0x03C7B264 STP X20, X19, [X31 + 0x30]
	0x03C7B268 MOV X19, X0
	0x03C7B26C LDR X0, [X0 + 0x28]
	0x03C7B270 CBZ X0, 0x3C7B374
	0x03C7B274 MOV X1, X31
	0x03C7B278 BL 0x3C74660
	0x03C7B27C LDR X8, [X19 + 0x20]
	0x03C7B280 CBZ X8, 0x3C7B374
	0x03C7B284 MOV X20, X0
	0x03C7B288 MOV X0, X8
	0x03C7B28C MOV X1, X31
	0x03C7B290 BL 0x3C74750
	0x03C7B294 CBZ X0, 0x3C7B374
	0x03C7B298 LDP S2, S3, [X19 + 0x8]
	0x03C7B29C LDP S0, S1, [X19]
	0x03C7B2A0 MOV X1, X31
	0x03C7B2A4 BL 0x3C0CA4C
	0x03C7B2A8 CBZ X20, 0x3C7B374
	0x03C7B2AC MOV X0, X20
	0x03C7B2B0 MOV X1, X31
	0x03C7B2B4 BL 0x3C0CA4C
	0x03C7B2B8 LDR X0, [X19 + 0x28]
	0x03C7B2BC CBZ X0, 0x3C7B374
	0x03C7B2C0 MOV X1, X31
	0x03C7B2C4 MOV V9.16B, V0.16B
	0x03C7B2C8 MOV V8.16B, V1.16B
	0x03C7B2CC MOV V10.16B, V3.16B
	0x03C7B2D0 BL 0x3C73614
	0x03C7B2D4 FCMP S0, 0x0
	0x03C7B2D8 B.EQ 0x3C7B2F0
	0x03C7B2DC LDR X0, [X19 + 0x28]
	0x03C7B2E0 CBZ X0, 0x3C7B374
	0x03C7B2E4 MOV X1, X31
	0x03C7B2E8 BL 0x3C73614
	0x03C7B2EC MOV V10.16B, V0.16B
	0x03C7B2F0 MOV X0, X19
	0x03C7B2F4 BL 0x3C7B378
	0x03C7B2F8 MOV X0, X19
	0x03C7B2FC MOV V11.16B, V0.16B
	0x03C7B300 BL 0x3C7AFA0
	0x03C7B304 LDP S1, S4, [X19 + 0x18]
	0x03C7B308 LDP S3, S2, [X19 + 0x10]
	0x03C7B30C FCMP S1, S4
	0x03C7B310 FCSEL S6, S1, S4, GT
	0x03C7B314 FSUB S6, S6, S2
	0x03C7B318 FCSEL S5, S1, S4, MI
	0x03C7B31C FCMP S6, S3
	0x03C7B320 FCSEL S6, S6, S3, MI
	0x03C7B324 FCMP S5, S3
	0x03C7B328 FCSEL S3, S6, S5, LE
	0x03C7B32C FCMP S1, S4
	0x03C7B330 B.PL 0x3C7B340
	0x03C7B334 FMUL S2, S0, S2
	0x03C7B338 FADD S2, S11, S2
	0x03C7B33C B 0x3C7B34C
	0x03C7B340 FADD S3, S2, S3
	0x03C7B344 FMUL S2, S0, S2
	0x03C7B348 FSUB S2, S11, S2
	0x03C7B34C FSUB S1, S3, S1
	0x03C7B350 FMUL S0, S0, S1
	0x03C7B354 FADD S0, S9, S0
	0x03C7B358 MOV V1.16B, V8.16B
	0x03C7B35C LDP X20, X19, [X31 + 0x30]
	0x03C7B360 LDR X30, [X31 + 0x20]
	0x03C7B364 LDP D9, D8, [X31 + 0x10]
	0x03C7B368 MOV V3.16B, V10.16B
	0x03C7B36C LDP D11, D10, [X31], #0x40
	0x03C7B370 RET
	0x03C7B374 BL 0x1C16F20
	0x03C7B378 STP X30, X19, [X31 - 0x10]!
	0x03C7B37C MOV X19, X0
	0x03C7B380 LDR X0, [X0 + 0x28]
	0x03C7B384 CBZ X0, 0x3C7B408
	0x03C7B388 LDRB W8, [X19 + 0x38]
	0x03C7B38C CBZ W8, 0x3C7B3C0
	0x03C7B390 MOV X1, X31
	0x03C7B394 BL 0x3C735D8
	0x03C7B398 LDR X0, [X19 + 0x28]
	0x03C7B39C CBZ X0, 0x3C7B408
	0x03C7B3A0 MOV X1, X31
	0x03C7B3A4 FCMP S0, 0x0
	0x03C7B3A8 B.NE 0x3C7B3F8
	0x03C7B3AC BL 0x3C74750
	0x03C7B3B0 CBZ X0, 0x3C7B408
	0x03C7B3B4 MOV X1, X31
	0x03C7B3B8 BL 0x3C0C9D4
	0x03C7B3BC B 0x3C7B3EC
	0x03C7B3C0 MOV X1, X31
	0x03C7B3C4 BL 0x3C73614
	0x03C7B3C8 LDR X0, [X19 + 0x28]
	0x03C7B3CC CBZ X0, 0x3C7B408
	0x03C7B3D0 MOV X1, X31
	0x03C7B3D4 FCMP S0, 0x0
	0x03C7B3D8 B.NE 0x3C7B400
	0x03C7B3DC BL 0x3C74750
	0x03C7B3E0 CBZ X0, 0x3C7B408
	0x03C7B3E4 MOV X1, X31
	0x03C7B3E8 BL 0x3C0CA10
	0x03C7B3EC SCVTF S0, W0
	0x03C7B3F0 LDP X30, X19, [X31], #0x10
	0x03C7B3F4 RET
	0x03C7B3F8 LDP X30, X19, [X31], #0x10
	0x03C7B3FC B 0x3C735D8
	0x03C7B400 LDP X30, X19, [X31], #0x10
	0x03C7B404 B 0x3C73614
	0x03C7B408 BL 0x1C16F20
	0x03C7B40C STR X30, [X31 - 0x20]!
	0x03C7B410 STP X20, X19, [X31 + 0x10]
	0x03C7B414 LDR X19, [X0 + 0x10]
	0x03C7B418 CBZ X19, 0x3C7B44C
	0x03C7B41C LDR W1, [X19 + 0x34]
	0x03C7B420 MOV X0, X19
	0x03C7B424 BL 0x3C823B4
	0x03C7B428 LDR W1, [X19 + 0x38]
	0x03C7B42C MOV W20, W0
	0x03C7B430 MOV X0, X19
	0x03C7B434 BL 0x3C823B4
	0x03C7B438 CMP W20, W0
	0x03C7B43C LDP X20, X19, [X31 + 0x10]
	0x03C7B440 CSET W0, NE
	0x03C7B444 LDR X30, [X31], #0x20
	0x03C7B448 RET
	0x03C7B44C BL 0x1C16F20
	0x03C7B450 STR X30, [X31 - 0x20]!
	0x03C7B454 STP X20, X19, [X31 + 0x10]
	0x03C7B458 LDR W1, [X0 + 0x34]
	0x03C7B45C MOV X19, X0
	0x03C7B460 BL 0x3C823B4
	0x03C7B464 LDR W1, [X19 + 0x38]
	0x03C7B468 MOV W20, W0
	0x03C7B46C MOV X0, X19
	0x03C7B470 BL 0x3C823B4
	0x03C7B474 CMP W20, W0
	0x03C7B478 LDP X20, X19, [X31 + 0x10]
	0x03C7B47C CSET W0, NE
	0x03C7B480 LDR X30, [X31], #0x20
	0x03C7B484 RET
	0x03C7B488 STR X30, [X31 - 0x10]!
	0x03C7B48C LDR X8, [X0 + 0x10]
	0x03C7B490 CBZ X8, 0x3C7B4CC
	0x03C7B494 LDRB W10, [X8 + 0x30]
	0x03C7B498 AND W9, W1, 0x1
	0x03C7B49C CMP W10, W9
	0x03C7B4A0 B.EQ 0x3C7B4C4
	0x03C7B4A4 LDR X10, [X8 + 0x50]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], D12
	003 Move [X31+24], D11
	004 Move [X31+32], D10
	005 Move [X31+40], D9
	006 Move [X31+48], D8
	007 Move [X31+56], X30
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X20, 0x76C000
	015 Move X23, 0x4A5000
	016 Move W8, [X20+2464]
	017 Move X23, [X23+1480]
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {40}
	023 Move X0, 0x47A000
	024 Move X0, [X0+2544]
	025 Call 0x1C17CF4
	026 Move X0, 0x4A5000
	027 Move X0, [X0+1480]
	028 Call 0x1C17CF4
	029 Move X0, 0x4A0000
	030 Move X0, [X0+1216]
	031 Call 0x1C17CF4
	032 Move X0, 0x479000
	033 Move X0, [X0+1448]
	034 Call 0x1C17CF4
	035 Move X0, 0x4E5000
	036 Move X0, [X0+1872]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X20+2464], W8
	040 Move X21, 0x479000
	041 Move X21, [X21+1448]
	042 Move X0, X19
	043 Move [X31+8], X31
	044 Call SliderHandler.ThumbRect, X0
	045 Move X0, X31
	046 Move V10, V0
	047 Move V8, V1
	048 Move V11, V2
	049 Move V9, V3
	050 Call Event.get_current
	051 Move X8, [X23]
	052 Move X20, X0
	053 Move W9, [X8+224]
	054 Compare W9, 0
	055 JumpIfNotEqual {58}
	056 Move X0, X8
	057 Call 0x1C17DFC
	058 Move V0, V10
	059 Move V1, V8
	060 Move V2, V11
	061 Move V3, V9
	062 Move X0, X20
	063 Move X1, X31
	064 Call GUIUtility.HitTest, X0, X1
	065 Move W20, W0
	066 Move X0, X31
	067 Call Rect.get_zero
	068 Move X0, [X21]
	069 Move V12, [X19]
	070 Move W8, [X0+224]
	071 Compare W8, 0
	072 JumpIfNotEqual {74}
	073 Call 0x1C17DFC
	074 Move V0, V12
	075 Move V1, V10
	076 Move X0, X31
	077 Call Math.Min, V0, V1
	078 Move V12, V0
	079 Move V0, [X19]
	080 Move V1, [X19+8]
	081 Move X0, X31
	082 Add S0, S0, S1
	083 Add S1, S11, S10
	084 Call Math.Max, V0, V1
	085 Move V1, [X19+4]
	086 Move V11, V0
	087 Move X0, X31
	088 Move V0, V1
	089 Move V1, V8
	090 Call Math.Min, V0, V1
	091 Move V10, V0
	092 Move V0, [X19+4]
	093 Move V1, [X19+12]
	094 Move X0, X31
	095 Add S0, S0, S1
	096 Add S1, S9, S8
	097 Call Math.Max, V0, V1
	098 Move S1, [X19+24]
	099 Move S2, [X19+28]
	100 NotImplemented "Instruction FCMP not yet implemented."
	101 Move X0, X31
	102 Subtract S8, S11, S12
	103 Subtract S9, S0, S10
	104 Call Event.get_current
	105 Move X8, [X23]
	106 Move X21, X0
	107 Move W9, [X8+224]
	108 Compare W9, 0
	109 JumpIfNotEqual {112}
	110 Move X0, X8
	111 Call 0x1C17DFC
	112 Move V0, V12
	113 Move V1, V10
	114 Move V2, V8
	115 Move V3, V9
	116 Move X0, X21
	117 Move X1, X31
	118 Call GUIUtility.HitTest, X0, X1
	119 Or W8, W20, W0
	120 Move TEMP, X8
	121 And TEMP, TEMP, 1
	122 Compare TEMP, 1
	123 JumpIfNotEqual {181}
	124 Move X22, 0x4A0000
	125 Move X22, [X22+1216]
	126 Move X0, [X22]
	127 Move W8, [X0+224]
	128 Compare W8, 0
	129 JumpIfNotEqual {131}
	130 Call 0x1C17DFC
	131 Move X24, 0x76C000
	132 Move W8, [X24+2514]
	133 Compare W8, 0
	134 JumpIfNotEqual {140}
	135 Move X0, 0x4A0000
	136 Move X0, [X0+1216]
	137 Call 0x1C17CF4
	138 Move W8, 1
	139 Move [X24+2514], W8
	140 Move X0, [X22]
	141 Move W8, [X0+224]
	142 Compare W8, 0
	143 JumpIfNotEqual {146}
	144 Call 0x1C17DFC
	145 Move X0, [X22]
	146 Move X8, [X0+184]
	147 Move [X8+36], W31
	148 Move X0, [X23]
	149 Move W21, [X19+60]
	150 Move W8, [X0+224]
	151 Compare W8, 0
	152 JumpIfNotEqual {154}
	153 Call 0x1C17DFC
	154 Move W0, W21
	155 Move X1, X31
	156 Call GUIUtility.set_hotControl, X0
	157 Move X0, X31
	158 Call Event.get_current
	159 Compare X0, 0
	160 JumpIfEqual {299}
	161 Move X1, X31
	162 Call Event.Use, X0
	163 Move TEMP, X20
	164 And TEMP, TEMP, 1
	165 Compare TEMP, 1
	166 JumpIfNotEqual {196}
	167 Move S0, [X19+24]
	168 Move S1, [X19+28]
	169 Move S2, [X19+16]
	170 Move S3, [X19+20]
	171 Move X0, X19
	172 NotImplemented "Instruction FCMP not yet implemented."
	173 NotImplemented "Instruction FCSEL not yet implemented."
	174 NotImplemented "Instruction FCSEL not yet implemented."
	175 Subtract S0, S0, S3
	176 NotImplemented "Instruction FCMP not yet implemented."
	177 NotImplemented "Instruction FCSEL not yet implemented."
	178 NotImplemented "Instruction FCMP not yet implemented."
	179 NotImplemented "Instruction FCSEL not yet implemented."
	180 Call SliderHandler.StartDraggingWithValue, X0, V0
	181 Move V0, [X19+16]
	182 Move X20, [X31+96]
	183 Move X19, [X31+104]
	184 Move X22, [X31+80]
	185 Move X21, [X31+88]
	186 Move X24, [X31+64]
	187 Move X23, [X31+72]
	188 Move X30, [X31+56]
	189 Move D9, [X31+40]
	190 Move D8, [X31+48]
	191 Move D11, [X31+24]
	192 Move D10, [X31+32]
	193 Move V12, [X31+16]
	194 Add X31, X31, 112
	195 Return V0
	196 Move X0, [X22]
	197 Move W8, [X0+224]
	198 Compare W8, 0
	199 JumpIfNotEqual {201}
	200 Call 0x1C17DFC
	201 Move W0, 1
	202 Move X1, X31
	203 Call GUI.set_changed, X0
	204 Move X0, X19
	205 Call SliderHandler.SupportsPageMovements, X0
	206 Move TEMP, X0
	207 And TEMP, TEMP, 1
	208 Compare TEMP, 1
	209 JumpIfNotEqual {283}
	210 Move X0, X19
	211 Call SliderHandler.SliderState, X0
	212 Compare X0, 0
	213 JumpIfEqual {299}
	214 Move [X0+24], W31
	215 Move X8, 0x4E5000
	216 Move X8, [X8+1872]
	217 Move X0, [X8]
	218 Move W8, [X0+224]
	219 Compare W8, 0
	220 JumpIfNotEqual {222}
	221 Call 0x1C17DFC
	222 Move X0, X31
	223 Call SystemClock.get_now
	224 Move X8, 0x47A000
	225 Move X8, [X8+2544]
	226 Move [X31+8], X0
	227 Move X8, [X8]
	228 Move W9, [X8+224]
	229 Compare W9, 0
	230 JumpIfNotEqual {233}
	231 Move X0, X8
	232 Call 0x1C17DFC
	233 Move X8, -51953664
	234 Move V0, [X8+592]
	235 Add X0, X31, 8
	236 Move X1, X31
	237 Call DateTime.AddMilliseconds, X0, V0
	238 Move X8, [X22]
	239 Move X20, X0
	240 Move W9, [X8+224]
	241 Compare W9, 0
	242 JumpIfNotEqual {245}
	243 Move X0, X8
	244 Call 0x1C17DFC
	245 Move X21, 0x76C000
	246 Move W8, [X21+2434]
	247 Compare W8, 0
	248 JumpIfNotEqual {254}
	249 Move X0, 0x4A0000
	250 Move X0, [X0+1216]
	251 Call 0x1C17CF4
	252 Move W8, 1
	253 Move [X21+2434], W8
	254 Move X0, [X22]
	255 Move W8, [X0+224]
	256 Compare W8, 0
	257 JumpIfNotEqual {260}
	258 Call 0x1C17DFC
	259 Move X0, [X22]
	260 Move X8, [X0+184]
	261 Move X0, X19
	262 Move [X8+40], X20
	263 Call SliderHandler.CurrentScrollTroughSide, X0
	264 Move W8, [X24+2514]
	265 Move W20, W0
	266 Compare W8, 0
	267 JumpIfNotEqual {273}
	268 Move X0, 0x4A0000
	269 Move X0, [X0+1216]
	270 Call 0x1C17CF4
	271 Move W8, 1
	272 Move [X24+2514], W8
	273 Move X0, [X22]
	274 Move W8, [X0+224]
	275 Compare W8, 0
	276 JumpIfNotEqual {279}
	277 Call 0x1C17DFC
	278 Move X0, [X22]
	279 Move X8, [X0+184]
	280 Move X0, X19
	281 Move [X8+36], W20
	282 Call SliderHandler.PageMovementValue, X0
	283 Move X0, X19
	284 Call SliderHandler.ValueForCurrentMousePosition, X0
	285 Move X0, X19
	286 Move V8, V0
	287 Call SliderHandler.StartDraggingWithValue, X0, V0
	288 Move S1, [X19+24]
	289 Move S0, [X19+28]
	290 Move V2, [X19+20]
	291 NotImplemented "Instruction FCMP not yet implemented."
	292 NotImplemented "Instruction FCSEL not yet implemented."
	293 NotImplemented "Instruction FCSEL not yet implemented."
	294 Subtract S0, S0, S2
	295 NotImplemented "Instruction FCMP not yet implemented."
	296 NotImplemented "Instruction FCSEL not yet implemented."
	297 NotImplemented "Instruction FCMP not yet implemented."
	298 NotImplemented "Instruction FCSEL not yet implemented."
	299 Call 0x1C17F20

Method: System.Single OnMouseDrag()

Disassembly:
	0x03C7B4A8 STRB W9, [X8 + 0x30]
	0x03C7B4AC CBZ X10, 0x3C7B4C4
	0x03C7B4B0 LDR X2, [X10 + 0x18]
	0x03C7B4B4 LDR X0, [X10 + 0x40]
	0x03C7B4B8 LDR X1, [X10 + 0x28]
	0x03C7B4BC LDR X30, [X31], #0x10
	0x03C7B4C0 BR X2
	0x03C7B4C4 LDR X30, [X31], #0x10
	0x03C7B4C8 RET
	0x03C7B4CC BL 0x1C16F20
	0x03C7B4D0 LDRB W9, [X0 + 0x30]
	0x03C7B4D4 AND W8, W1, 0x1
	0x03C7B4D8 CMP W9, W8
	0x03C7B4DC B.EQ 0x3C7B4FC
	0x03C7B4E0 LDR X9, [X0 + 0x50]
	0x03C7B4E4 STRB W8, [X0 + 0x30]
	0x03C7B4E8 CBZ X9, 0x3C7B4FC
	0x03C7B4EC LDR X2, [X9 + 0x18]
	0x03C7B4F0 LDR X0, [X9 + 0x40]
	0x03C7B4F4 LDR X1, [X9 + 0x28]
	0x03C7B4F8 BR X2
	0x03C7B4FC RET
	0x03C7B500 STR X30, [X31 - 0x10]!
	0x03C7B504 LDR X0, [X0 + 0x10]
	0x03C7B508 CBZ X0, 0x3C7B518
	0x03C7B50C LDR W1, [X0 + 0x34]
	0x03C7B510 LDR X30, [X31], #0x10
	0x03C7B514 B 0x3C823B4
	0x03C7B518 BL 0x1C16F20
	0x03C7B51C LDR W1, [X0 + 0x34]
	0x03C7B520 B 0x3C823B4
	0x03C7B524 STR X30, [X31 - 0x10]!
	0x03C7B528 LDR X8, [X0 + 0x10]
	0x03C7B52C CBZ X8, 0x3C7B564
	0x03C7B530 LDR W9, [X8 + 0x34]
	0x03C7B534 CMP W9, W1
	0x03C7B538 B.EQ 0x3C7B55C
	0x03C7B53C LDR X9, [X8 + 0x40]
	0x03C7B540 STR W1, [X8 + 0x34]
	0x03C7B544 CBZ X9, 0x3C7B55C
	0x03C7B548 LDR X2, [X9 + 0x18]
	0x03C7B54C LDR X0, [X9 + 0x40]
	0x03C7B550 LDR X1, [X9 + 0x28]
	0x03C7B554 LDR X30, [X31], #0x10
	0x03C7B558 BR X2
	0x03C7B55C LDR X30, [X31], #0x10
	0x03C7B560 RET
	0x03C7B564 BL 0x1C16F20
	0x03C7B568 LDR W8, [X0 + 0x34]
	0x03C7B56C CMP W8, W1
	0x03C7B570 B.EQ 0x3C7B590
	0x03C7B574 LDR X8, [X0 + 0x40]
	0x03C7B578 STR W1, [X0 + 0x34]
	0x03C7B57C CBZ X8, 0x3C7B590
	0x03C7B580 LDR X2, [X8 + 0x18]
	0x03C7B584 LDR X0, [X8 + 0x40]
	0x03C7B588 LDR X1, [X8 + 0x28]
	0x03C7B58C BR X2
	0x03C7B590 RET
	0x03C7B594 STR X30, [X31 - 0x10]!
	0x03C7B598 LDR X0, [X0 + 0x10]
	0x03C7B59C CBZ X0, 0x3C7B5AC
	0x03C7B5A0 LDR W1, [X0 + 0x38]
	0x03C7B5A4 LDR X30, [X31], #0x10
	0x03C7B5A8 B 0x3C823B4
	0x03C7B5AC BL 0x1C16F20
	0x03C7B5B0 LDR W1, [X0 + 0x38]
	0x03C7B5B4 B 0x3C823B4
	0x03C7B5B8 STR X30, [X31 - 0x10]!
	0x03C7B5BC LDR X8, [X0 + 0x10]
	0x03C7B5C0 CBZ X8, 0x3C7B5F8

ISIL:
	001 Move [X31-48], D9
	002 Move [X31-40], D8
	003 Move [X31+16], X30
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x76C000
	008 Move X21, 0x4A5000
	009 Move W8, [X20+2465]
	010 Move X21, [X21+1480]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x4A5000
	017 Move X0, [X0+1480]
	018 Call 0x1C17CF4
	019 Move X0, 0x4A0000
	020 Move X0, [X0+1216]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X20+2465], W8
	024 Move X0, [X21]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X0, X31
	030 Call GUIUtility.get_hotControl
	031 Move W8, [X19+60]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X0, X19
	034 Call SliderHandler.SliderState, X0
	035 Compare X0, 0
	036 JumpIfEqual {85}
	037 Move W8, [X0+24]
	038 Move X20, X0
	039 Compare W8, 0
	040 JumpIfEqual {77}
	041 Move X8, 0x4A0000
	042 Move X8, [X8+1216]
	043 Move X0, [X8]
	044 Move W8, [X0+224]
	045 Compare W8, 0
	046 JumpIfNotEqual {48}
	047 Call 0x1C17DFC
	048 Move W0, 1
	049 Move X1, X31
	050 Call GUI.set_changed, X0
	051 Move X0, X31
	052 Call Event.get_current
	053 Compare X0, 0
	054 JumpIfEqual {85}
	055 Move X1, X31
	056 Call Event.Use, X0
	057 Move X0, X19
	058 Call SliderHandler.MousePosition, X0
	059 Move S1, [X20+16]
	060 Move S8, [X20+20]
	061 Move X0, X19
	062 Subtract S9, S0, S1
	063 Call SliderHandler.ValuesPerPixel, X0
	064 Move S2, [X19+24]
	065 Move S1, [X19+28]
	066 Move V3, [X19+20]
	067 NotImplemented "Instruction FDIV not yet implemented."
	068 Add S0, S8, S0
	069 NotImplemented "Instruction FCMP not yet implemented."
	070 NotImplemented "Instruction FCSEL not yet implemented."
	071 NotImplemented "Instruction FCSEL not yet implemented."
	072 Subtract S1, S1, S3
	073 NotImplemented "Instruction FCMP not yet implemented."
	074 NotImplemented "Instruction FCSEL not yet implemented."
	075 NotImplemented "Instruction FCMP not yet implemented."
	076 NotImplemented "Instruction FCSEL not yet implemented."
	077 Move V0, [X19+16]
	078 Move X20, [X31+32]
	079 Move X19, [X31+40]
	080 Move X30, [X31+16]
	081 Move X21, [X31+24]
	082 Move D9, [X31+48]
	083 Move D8, [X31+56]
	084 Return V0
	085 Call 0x1C17F20

Method: System.Single OnMouseUp()

Disassembly:
	0x03C7B5C4 LDR W9, [X8 + 0x38]
	0x03C7B5C8 CMP W9, W1
	0x03C7B5CC B.EQ 0x3C7B5F0
	0x03C7B5D0 LDR X9, [X8 + 0x48]
	0x03C7B5D4 STR W1, [X8 + 0x38]
	0x03C7B5D8 CBZ X9, 0x3C7B5F0
	0x03C7B5DC LDR X2, [X9 + 0x18]
	0x03C7B5E0 LDR X0, [X9 + 0x40]
	0x03C7B5E4 LDR X1, [X9 + 0x28]
	0x03C7B5E8 LDR X30, [X31], #0x10
	0x03C7B5EC BR X2
	0x03C7B5F0 LDR X30, [X31], #0x10
	0x03C7B5F4 RET
	0x03C7B5F8 BL 0x1C16F20
	0x03C7B5FC LDR W8, [X0 + 0x38]
	0x03C7B600 CMP W8, W1
	0x03C7B604 B.EQ 0x3C7B624
	0x03C7B608 LDR X8, [X0 + 0x48]
	0x03C7B60C STR W1, [X0 + 0x38]
	0x03C7B610 CBZ X8, 0x3C7B624
	0x03C7B614 LDR X2, [X8 + 0x18]
	0x03C7B618 LDR X0, [X8 + 0x40]
	0x03C7B61C LDR X1, [X8 + 0x28]
	0x03C7B620 BR X2
	0x03C7B624 RET
	0x03C7B628 LDR X0, [X0 + 0x28]
	0x03C7B62C RET
	0x03C7B630 STP X30, X21, [X31 - 0x20]!
	0x03C7B634 STP X20, X19, [X31 + 0x10]
	0x03C7B638 ADRP X21, 0x76B000
	0x03C7B63C LDRB W8, [X21 + 0x9A6]
	0x03C7B640 MOV X20, X1
	0x03C7B644 MOV X19, X0
	0x03C7B648 TBNZ X8, 0x0, 0x3C7B660
	0x03C7B64C ADRP X0, 0x47A000
	0x03C7B650 LDR X0, [X0 + 0x278]
	0x03C7B654 BL 0x1C16CF4
	0x03C7B658 MOVZ W8, 0x1
	0x03C7B65C STRB W8, [X21 + 0x9A6]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x76C000
	006 Move X20, 0x4A5000
	007 Move W8, [X21+2466]
	008 Move X20, [X20+1480]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x4A5000
	015 Move X0, [X0+1480]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2466], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X31
	025 Call GUIUtility.get_hotControl
	026 Move W8, [X19+60]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move X0, X31
	029 Call Event.get_current
	030 Compare X0, 0
	031 JumpIfEqual {48}
	032 Move X1, X31
	033 Call Event.Use, X0
	034 Move X0, [X20]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Move W0, W31
	040 Move X1, X31
	041 Call GUIUtility.set_hotControl, X0
	042 Move V0, [X19+16]
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move X30, [X31+32]
	046 Move X21, [X31+40]
	047 Return V0
	048 Call 0x1C17F20

Method: System.Single OnRepaint()

Disassembly:
	0x03C7B660 LDR X1, [X19 + 0x28]
	0x03C7B664 MOV X0, X20
	0x03C7B668 MOV X2, X31
	0x03C7B66C BL 0x321BA08
	0x03C7B670 TBNZ X0, 0x0, 0x3C7B690
	0x03C7B674 CBNZ X20, 0x3C7B68C
	0x03C7B678 ADRP X8, 0x47A000
	0x03C7B67C LDR X8, [X8 + 0x278]
	0x03C7B680 LDR X8, [X8]
	0x03C7B684 LDR X8, [X8 + 0xB8]
	0x03C7B688 LDR X20, [X8]
	0x03C7B68C STR X20, [X19 + 0x28]
	0x03C7B690 LDP X20, X19, [X31 + 0x10]
	0x03C7B694 LDP X30, X21, [X31], #0x20
	0x03C7B698 RET
	0x03C7B69C STR X30, [X31 - 0x30]!
	0x03C7B6A0 STP X22, X21, [X31 + 0x10]
	0x03C7B6A4 STP X20, X19, [X31 + 0x20]
	0x03C7B6A8 MOV X21, X1
	0x03C7B6AC MOVN W8, 0x0
	0x03C7B6B0 MOV X1, X31
	0x03C7B6B4 MOV X19, X3
	0x03C7B6B8 MOV X20, X2
	0x03C7B6BC MOV X22, X0
	0x03C7B6C0 STR W8, [X0 + 0x20]
	0x03C7B6C4 STRB W31, [X0 + 0x26]
	0x03C7B6C8 BL 0x33BDD8C
	0x03C7B6CC STP X21, X20, [X22 + 0x10]
	0x03C7B6D0 STR X19, [X22 + 0x28]
	0x03C7B6D4 LDP X20, X19, [X31 + 0x20]
	0x03C7B6D8 LDP X22, X21, [X31 + 0x10]
	0x03C7B6DC LDR X30, [X31], #0x30
	0x03C7B6E0 RET
	0x03C7B6E4 STP X30, X21, [X31 - 0x20]!
	0x03C7B6E8 STP X20, X19, [X31 + 0x10]
	0x03C7B6EC ADRP X20, 0x76B000
	0x03C7B6F0 ADRP X21, 0x4A4000
	0x03C7B6F4 LDRB W8, [X20 + 0x9A7]
	0x03C7B6F8 LDR X21, [X21 + 0x5C8]
	0x03C7B6FC MOV X19, X0
	0x03C7B700 TBNZ X8, 0x0, 0x3C7B724
	0x03C7B704 ADRP X0, 0x4A4000
	0x03C7B708 LDR X0, [X0 + 0x5C8]
	0x03C7B70C BL 0x1C16CF4
	0x03C7B710 ADRP X0, 0x47A000
	0x03C7B714 LDR X0, [X0 + 0x278]
	0x03C7B718 BL 0x1C16CF4
	0x03C7B71C MOVZ W8, 0x1
	0x03C7B720 STRB W8, [X20 + 0x9A7]
	0x03C7B724 LDR X0, [X21]
	0x03C7B728 LDR W8, [X0 + 0xE0]
	0x03C7B72C CBNZ W8, 0x3C7B734
	0x03C7B730 BL 0x1C16DFC
	0x03C7B734 MOV X0, X31
	0x03C7B738 BL 0x3C6AC34
	0x03C7B73C CBZ X0, 0x3C7B798
	0x03C7B740 LDR W20, [X0 + 0x10]
	0x03C7B744 CMP W20, 0x1
	0x03C7B748 B.LT 0x3C7B77C
	0x03C7B74C LDRB W8, [X19 + 0x24]
	0x03C7B750 MOVZ W21, 0x1
	0x03C7B754 CBNZ W8, 0x3C7B780
	0x03C7B758 STRB W21, [X19 + 0x25]
	0x03C7B75C ADRP X8, 0x47A000
	0x03C7B760 LDR X8, [X8 + 0x278]
	0x03C7B764 MOV X0, X19
	0x03C7B768 LDR X8, [X8]
	0x03C7B76C LDR X8, [X8 + 0xB8]
	0x03C7B770 LDR X1, [X8]
	0x03C7B774 BL 0x3C7B79C
	0x03C7B778 B 0x3C7B780
	0x03C7B77C MOV W21, W31
	0x03C7B780 CMP W20, 0x0
	0x03C7B784 STRB W21, [X19 + 0x24]
	0x03C7B788 LDP X20, X19, [X31 + 0x10]
	0x03C7B78C CSET W0, GT
	0x03C7B790 LDP X30, X21, [X31], #0x20
	0x03C7B794 RET
	0x03C7B798 BL 0x1C16F20
	0x03C7B79C STP X30, X21, [X31 - 0x20]!
	0x03C7B7A0 STP X20, X19, [X31 + 0x10]
	0x03C7B7A4 MOV X19, X1
	0x03C7B7A8 MOV X20, X0
	0x03C7B7AC BL 0x3C7B9D0
	0x03C7B7B0 MOV X0, X20
	0x03C7B7B4 BL 0x3C7D980
	0x03C7B7B8 LDR X21, [X20 + 0x28]
	0x03C7B7BC MOV X0, X20
	0x03C7B7C0 BL 0x3C7B500
	0x03C7B7C4 CBZ X21, 0x3C7B820
	0x03C7B7C8 MOV W1, W0
	0x03C7B7CC MOV X0, X21
	0x03C7B7D0 MOV X2, X19
	0x03C7B7D4 MOV X3, X31
	0x03C7B7D8 BL 0x3227EBC
	0x03C7B7DC MOV X1, X0
	0x03C7B7E0 MOV X0, X20
	0x03C7B7E4 BL 0x3C7B630
	0x03C7B7E8 MOV X0, X20
	0x03C7B7EC BL 0x3C7B500
	0x03C7B7F0 CBZ X19, 0x3C7B820
	0x03C7B7F4 LDR X8, [X20 + 0x10]
	0x03C7B7F8 CBZ X8, 0x3C7B820
	0x03C7B7FC LDR W9, [X19 + 0x10]
	0x03C7B800 LDP X20, X19, [X31 + 0x10]
	0x03C7B804 MOVN W10, 0x0
	0x03C7B808 STRB W31, [X8 + 0x18]
	0x03C7B80C ADD W9, W9, W0
	0x03C7B810 STP W9, W9, [X8 + 0x34]
	0x03C7B814 STR W10, [X8 + 0x14]
	0x03C7B818 LDP X30, X21, [X31], #0x20
	0x03C7B81C RET
	0x03C7B820 BL 0x1C16F20
	0x03C7B824 LDRB W0, [X0 + 0x25]
	0x03C7B828 RET
	0x03C7B82C STP D11, D10, [X31 - 0x40]!
	0x03C7B830 STP D9, D8, [X31 + 0x10]
	0x03C7B834 STR X30, [X31 + 0x20]
	0x03C7B838 STP X20, X19, [X31 + 0x30]
	0x03C7B83C ADRP X19, 0x76B000
	0x03C7B840 LDRB W8, [X19 + 0x9A8]
	0x03C7B844 MOV V9.16B, V1.16B
	0x03C7B848 MOV V8.16B, V0.16B
	0x03C7B84C MOV X20, X0
	0x03C7B850 TBNZ X8, 0x0, 0x3C7B868
	0x03C7B854 ADRP X0, 0x4A4000
	0x03C7B858 LDR X0, [X0 + 0x5C8]
	0x03C7B85C BL 0x1C16CF4
	0x03C7B860 MOVZ W8, 0x1
	0x03C7B864 STRB W8, [X19 + 0x9A8]
	0x03C7B868 LDR X19, [X20 + 0x18]
	0x03C7B86C MOV X0, X20
	0x03C7B870 BL 0x3C7B500
	0x03C7B874 CBZ X19, 0x3C7B8CC
	0x03C7B878 ADRP X20, 0x4A4000
	0x03C7B87C LDR X20, [X20 + 0x5C8]
	0x03C7B880 MOV W1, W0
	0x03C7B884 MOVZ W2, 0x1
	0x03C7B888 MOV X0, X19
	0x03C7B88C MOV X3, X31
	0x03C7B890 BL 0x3CC9B70
	0x03C7B894 LDR X0, [X20]
	0x03C7B898 MOV V10.16B, V0.16B
	0x03C7B89C MOV V11.16B, V1.16B
	0x03C7B8A0 LDR W8, [X0 + 0xE0]
	0x03C7B8A4 CBNZ W8, 0x3C7B8AC
	0x03C7B8A8 BL 0x1C16DFC
	0x03C7B8AC FADD S1, S9, S11
	0x03C7B8B0 FADD S0, S8, S10
	0x03C7B8B4 LDP X20, X19, [X31 + 0x30]
	0x03C7B8B8 LDR X30, [X31 + 0x20]
	0x03C7B8BC LDP D9, D8, [X31 + 0x10]
	0x03C7B8C0 MOV X0, X31
	0x03C7B8C4 LDP D11, D10, [X31], #0x40
	0x03C7B8C8 B 0x3C757C8
	0x03C7B8CC BL 0x1C16F20
	0x03C7B8D0 STR X30, [X31 - 0x30]!
	0x03C7B8D4 STP X22, X21, [X31 + 0x10]
	0x03C7B8D8 STP X20, X19, [X31 + 0x20]
	0x03C7B8DC ADRP X22, 0x76B000
	0x03C7B8E0 ADRP X21, 0x4A4000
	0x03C7B8E4 LDRB W8, [X22 + 0x9A9]
	0x03C7B8E8 LDR X21, [X21 + 0x5C8]
	0x03C7B8EC MOV W19, W1
	0x03C7B8F0 MOV X20, X0
	0x03C7B8F4 TBNZ X8, 0x0, 0x3C7B924
	0x03C7B8F8 ADRP X0, 0x4A4000
	0x03C7B8FC LDR X0, [X0 + 0x5C8]
	0x03C7B900 BL 0x1C16CF4
	0x03C7B904 ADRP X0, 0x4DE000
	0x03C7B908 LDR X0, [X0 + 0x38]
	0x03C7B90C BL 0x1C16CF4
	0x03C7B910 ADRP X0, 0x4DE000
	0x03C7B914 LDR X0, [X0 + 0x40]
	0x03C7B918 BL 0x1C16CF4
	0x03C7B91C MOVZ W8, 0x1
	0x03C7B920 STRB W8, [X22 + 0x9A9]
	0x03C7B924 MOV X0, X20
	0x03C7B928 BL 0x3C7B9D0
	0x03C7B92C LDR X0, [X21]
	0x03C7B930 LDR W8, [X0 + 0xE0]
	0x03C7B934 CBNZ W8, 0x3C7B93C
	0x03C7B938 BL 0x1C16DFC
	0x03C7B93C MOV X0, X31
	0x03C7B940 BL 0x3C6AC34
	0x03C7B944 LDRB W8, [X20 + 0x24]
	0x03C7B948 LDR X21, [X20 + 0x28]
	0x03C7B94C CBZ W8, 0x3C7B994
	0x03C7B950 MOV X22, X0
	0x03C7B954 MOV X0, X20
	0x03C7B958 BL 0x3C7B500
	0x03C7B95C MOV W20, W0
	0x03C7B960 TBZ X19, 0x0, 0x3C7B9A8
	0x03C7B964 ADRP X8, 0x4DE000
	0x03C7B968 ADRP X9, 0x4DE000
	0x03C7B96C LDR X8, [X8 + 0x38]
	0x03C7B970 LDR X9, [X9 + 0x40]
	0x03C7B974 MOV X1, X22
	0x03C7B978 MOV X3, X31
	0x03C7B97C LDR X0, [X8]
	0x03C7B980 LDR X2, [X9]
	0x03C7B984 BL 0x32274B8
	0x03C7B988 CBZ X21, 0x3C7B9CC
	0x03C7B98C MOV X22, X0
	0x03C7B990 B 0x3C7B9AC
	0x03C7B994 MOV X0, X21
	0x03C7B998 LDP X20, X19, [X31 + 0x20]
	0x03C7B99C LDP X22, X21, [X31 + 0x10]
	0x03C7B9A0 LDR X30, [X31], #0x30
	0x03C7B9A4 RET
	0x03C7B9A8 CBZ X21, 0x3C7B9CC
	0x03C7B9AC MOV X0, X21
	0x03C7B9B0 MOV W1, W20
	0x03C7B9B4 MOV X2, X22
	0x03C7B9B8 LDP X20, X19, [X31 + 0x20]
	0x03C7B9BC LDP X22, X21, [X31 + 0x10]
	0x03C7B9C0 MOV X3, X31
	0x03C7B9C4 LDR X30, [X31], #0x30
	0x03C7B9C8 B 0x3227EBC
	0x03C7B9CC BL 0x1C16F20
	0x03C7B9D0 STR X30, [X31 - 0x20]!
	0x03C7B9D4 STP X20, X19, [X31 + 0x10]
	0x03C7B9D8 LDR W20, [X0 + 0x20]
	0x03C7B9DC ADDS W31, W20, 0x1
	0x03C7B9E0 B.EQ 0x3C7BA04
	0x03C7B9E4 MOV W1, W20
	0x03C7B9E8 MOV X19, X0
	0x03C7B9EC BL 0x3C7B5B8
	0x03C7B9F0 MOV X0, X19
	0x03C7B9F4 MOV W1, W20
	0x03C7B9F8 BL 0x3C7B524
	0x03C7B9FC MOVN W8, 0x0
	0x03C7BA00 STR W8, [X19 + 0x20]
	0x03C7BA04 LDP X20, X19, [X31 + 0x10]
	0x03C7BA08 LDR X30, [X31], #0x20
	0x03C7BA0C RET
	0x03C7BA10 STR X30, [X31 - 0x20]!
	0x03C7BA14 STP X20, X19, [X31 + 0x10]
	0x03C7BA18 ADRP X20, 0x76B000
	0x03C7BA1C LDRB W8, [X20 + 0x9AA]
	0x03C7BA20 MOV X19, X0
	0x03C7BA24 TBNZ X8, 0x0, 0x3C7BA3C
	0x03C7BA28 ADRP X0, 0x4A4000
	0x03C7BA2C LDR X0, [X0 + 0x5C8]
	0x03C7BA30 BL 0x1C16CF4
	0x03C7BA34 MOVZ W8, 0x1
	0x03C7BA38 STRB W8, [X20 + 0x9AA]
	0x03C7BA3C LDR W8, [X19 + 0x20]
	0x03C7BA40 ADDS W31, W8, 0x1
	0x03C7BA44 B.EQ 0x3C7BA54
	0x03C7BA48 LDP X20, X19, [X31 + 0x10]
	0x03C7BA4C LDR X30, [X31], #0x20
	0x03C7BA50 RET
	0x03C7BA54 LDR X0, [X19 + 0x10]
	0x03C7BA58 CBZ X0, 0x3C7BAB8
	0x03C7BA5C LDR W1, [X0 + 0x34]
	0x03C7BA60 BL 0x3C823B4
	0x03C7BA64 STR W0, [X19 + 0x20]
	0x03C7BA68 ADRP X8, 0x4A4000
	0x03C7BA6C LDR X8, [X8 + 0x5C8]
	0x03C7BA70 MOV W20, W0
	0x03C7BA74 LDR X0, [X8]
	0x03C7BA78 LDR W8, [X0 + 0xE0]
	0x03C7BA7C CBNZ W8, 0x3C7BA84
	0x03C7BA80 BL 0x1C16DFC
	0x03C7BA84 MOV X0, X31
	0x03C7BA88 BL 0x3C6AC34
	0x03C7BA8C CBZ X0, 0x3C7BAB8
	0x03C7BA90 LDR W8, [X0 + 0x10]
	0x03C7BA94 MOV X0, X19
	0x03C7BA98 ADD W20, W8, W20
	0x03C7BA9C MOV W1, W20
	0x03C7BAA0 BL 0x3C7B5B8
	0x03C7BAA4 MOV X0, X19
	0x03C7BAA8 MOV W1, W20
	0x03C7BAAC LDP X20, X19, [X31 + 0x10]
	0x03C7BAB0 LDR X30, [X31], #0x20
	0x03C7BAB4 B 0x3C7B524
	0x03C7BAB8 BL 0x1C16F20
	0x03C7BABC STP X30, X23, [X31 - 0x30]!
	0x03C7BAC0 STP X22, X21, [X31 + 0x10]
	0x03C7BAC4 STP X20, X19, [X31 + 0x20]
	0x03C7BAC8 ADRP X21, 0x76B000
	0x03C7BACC LDRB W8, [X21 + 0x9AB]
	0x03C7BAD0 MOV X19, X1
	0x03C7BAD4 MOV X20, X0
	0x03C7BAD8 TBNZ X8, 0x0, 0x3C7BB08
	0x03C7BADC ADRP X0, 0x4E5000
	0x03C7BAE0 LDR X0, [X0 + 0x5A0]
	0x03C7BAE4 BL 0x1C16CF4
	0x03C7BAE8 ADRP X0, 0x4E5000
	0x03C7BAEC LDR X0, [X0 + 0x5A8]
	0x03C7BAF0 BL 0x1C16CF4
	0x03C7BAF4 ADRP X0, 0x4E5000
	0x03C7BAF8 LDR X0, [X0 + 0x5B0]
	0x03C7BAFC BL 0x1C16CF4
	0x03C7BB00 MOVZ W8, 0x1
	0x03C7BB04 STRB W8, [X21 + 0x9AB]
	0x03C7BB08 MOV X0, X20
	0x03C7BB0C BL 0x3C7B9D0
	0x03C7BB10 BL 0x3C7BBD0
	0x03C7BB14 CBZ X19, 0x3C7BBCC
	0x03C7BB18 ADRP X23, 0x4E5000
	0x03C7BB1C LDR X23, [X23 + 0x5B0]
	0x03C7BB20 MOV X0, X19
	0x03C7BB24 MOV X1, X31
	0x03C7BB28 BL 0x3C62EF0
	0x03C7BB2C MOV W21, W0
	0x03C7BB30 MOV X0, X19
	0x03C7BB34 MOV X1, X31
	0x03C7BB38 BL 0x3C62EF0
	0x03C7BB3C AND W1, W0, 0xFFFFFFDF
	0x03C7BB40 MOV X0, X19
	0x03C7BB44 MOV X2, X31
	0x03C7BB48 BL 0x3C62F2C
	0x03C7BB4C LDR X8, [X23]
	0x03C7BB50 LDR X8, [X8 + 0xB8]
	0x03C7BB54 LDR X0, [X8]
	0x03C7BB58 CBZ X0, 0x3C7BBCC
	0x03C7BB5C ADRP X8, 0x4E5000
	0x03C7BB60 LDR X8, [X8 + 0x5A0]
	0x03C7BB64 MOV X1, X19
	0x03C7BB68 LDR X2, [X8]
	0x03C7BB6C BL 0x2AA2210
	0x03C7BB70 MOV W22, W0
	0x03C7BB74 TBZ X0, 0x0, 0x3C7BBA8
	0x03C7BB78 LDR X8, [X23]
	0x03C7BB7C LDR X8, [X8 + 0xB8]
	0x03C7BB80 LDR X0, [X8]
	0x03C7BB84 CBZ X0, 0x3C7BBCC
	0x03C7BB88 ADRP X8, 0x4E5000
	0x03C7BB8C LDR X8, [X8 + 0x5A8]
	0x03C7BB90 MOV X1, X19
	0x03C7BB94 LDR X2, [X8]
	0x03C7BB98 BL 0x2AA1F9C
	0x03C7BB9C MOV W1, W0
	0x03C7BBA0 MOV X0, X20
	0x03C7BBA4 BL 0x3C7C208
	0x03C7BBA8 MOV X0, X19
	0x03C7BBAC MOV W1, W21
	0x03C7BBB0 MOV X2, X31
	0x03C7BBB4 BL 0x3C62F2C
	0x03C7BBB8 AND W0, W22, 0x1
	0x03C7BBBC LDP X20, X19, [X31 + 0x20]
	0x03C7BBC0 LDP X22, X21, [X31 + 0x10]

ISIL:
	001 Move [X31-96], D11
	002 Move [X31-88], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X20, 0x76C000
	013 Move X22, 0x4A5000
	014 Move W8, [X20+2467]
	015 Move X22, [X22+1480]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {38}
	021 Move X0, 0x47A000
	022 Move X0, [X0+2544]
	023 Call 0x1C17CF4
	024 Move X0, 0x4A4000
	025 Move X0, [X0+3024]
	026 Call 0x1C17CF4
	027 Move X0, 0x4A5000
	028 Move X0, [X0+1480]
	029 Call 0x1C17CF4
	030 Move X0, 0x4A0000
	031 Move X0, [X0+1216]
	032 Call 0x1C17CF4
	033 Move X0, 0x4E5000
	034 Move X0, [X0+1872]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X20+2467], W8
	038 Move [X31+40], X31
	039 Move X23, 0x4A4000
	040 Move S8, [X19]
	041 Move S9, [X19+4]
	042 Move S10, [X19+8]
	043 Move S11, [X19+12]
	044 Move X23, [X23+3024]
	045 Move X0, X31
	046 Call Event.get_current
	047 Move X8, [X22]
	048 Move X20, X0
	049 Move W9, [X8+224]
	050 Compare W9, 0
	051 JumpIfNotEqual {54}
	052 Move X0, X8
	053 Call 0x1C17DFC
	054 Move V0, V8
	055 Move V1, V9
	056 Move V2, V10
	057 Move V3, V11
	058 Move X0, X20
	059 Move X1, X31
	060 Call GUIUtility.HitTest, X0, X1
	061 Move X8, [X23]
	062 Move X21, [X19+32]
	063 Move S11, [X19]
	064 Move S9, [X19+4]
	065 Move S10, [X19+8]
	066 Move S8, [X19+12]
	067 Move W9, [X8+224]
	068 Move W20, W0
	069 Compare W9, 0
	070 JumpIfNotEqual {73}
	071 Move X0, X8
	072 Call 0x1C17DFC
	073 Compare X21, 0
	074 JumpIfEqual {401}
	075 Move X8, [X23]
	076 Move W2, [X19+60]
	077 And W4, W20, 1
	078 Move X0, X21
	079 Move X8, [X8+184]
	080 Move V0, V11
	081 Move V1, V9
	082 Move V2, V10
	083 Move X1, [X8+24]
	084 Move V3, V8
	085 Move W3, W31
	086 Move X5, X31
	087 Call GUIStyle.Draw, X0, X1, X2, X3, X4, X5
	088 Move S0, [X19+24]
	089 Move S2, [X19+28]
	090 Move V1, [X19+16]
	091 NotImplemented "Instruction FCMP not yet implemented."
	092 NotImplemented "Instruction FCSEL not yet implemented."
	093 NotImplemented "Instruction FCMP not yet implemented."
	094 NotImplemented "Instruction FCMP not yet implemented."
	095 NotImplemented "Instruction FCSEL not yet implemented."
	096 NotImplemented "Instruction FCMP not yet implemented."
	097 Move X21, [X19+48]
	098 Compare X21, 0
	099 JumpIfEqual {124}
	100 Move X0, X19
	101 Call SliderHandler.ThumbExtRect, X0
	102 Move X0, [X23]
	103 Move V8, V0
	104 Move V9, V1
	105 Move V10, V2
	106 Move W8, [X0+224]
	107 Move V11, V3
	108 Compare W8, 0
	109 JumpIfNotEqual {111}
	110 Call 0x1C17DFC
	111 Move X8, [X23]
	112 Move W2, [X19+60]
	113 And W4, W20, 1
	114 Move X0, X21
	115 Move X8, [X8+184]
	116 Move V0, V8
	117 Move V1, V9
	118 Move V2, V10
	119 Move X1, [X8+24]
	120 Move V3, V11
	121 Move W3, W31
	122 Move X5, X31
	123 Call GUIStyle.Draw, X0, X1, X2, X3, X4, X5
	124 Move X21, [X19+40]
	125 Move X0, X19
	126 Call SliderHandler.ThumbRect, X0
	127 Move X0, [X23]
	128 Move V8, V0
	129 Move V9, V1
	130 Move V10, V2
	131 Move W8, [X0+224]
	132 Move V11, V3
	133 Compare W8, 0
	134 JumpIfNotEqual {136}
	135 Call 0x1C17DFC
	136 Compare X21, 0
	137 JumpIfEqual {401}
	138 Move X8, [X23]
	139 Move W2, [X19+60]
	140 And W4, W20, 1
	141 Move X0, X21
	142 Move X8, [X8+184]
	143 Move V0, V8
	144 Move V1, V9
	145 Move V2, V10
	146 Move X1, [X8+24]
	147 Move V3, V11
	148 Move W3, W31
	149 Move X5, X31
	150 Call GUIStyle.Draw, X0, X1, X2, X3, X4, X5
	151 Move X0, [X22]
	152 Move W8, [X0+224]
	153 Compare W8, 0
	154 JumpIfNotEqual {156}
	155 Call 0x1C17DFC
	156 Move X0, X31
	157 Call GUIUtility.get_hotControl
	158 Move W8, [X19+60]
	159 NotImplemented "Instruction CMP not yet implemented."
	160 Xor W8, W20, 1
	161 Move TEMP, X8
	162 And TEMP, TEMP, 1
	163 Compare TEMP, 1
	164 JumpIfEqual {376}
	165 Move S0, [X19+24]
	166 Move S1, [X19+28]
	167 NotImplemented "Instruction FCMP not yet implemented."
	168 Move X0, X19
	169 Call SliderHandler.ThumbRect, X0
	170 Move W8, [X19+56]
	171 Compare W8, 0
	172 JumpIfEqual {177}
	173 Move V8, [X19+4]
	174 Move V11, [X19+12]
	175 Move V9, V0
	176 Move V10, V2
	177 Move V9, [X19]
	178 Move V10, [X19+8]
	179 Move V8, V1
	180 Move V11, V3
	181 Move X0, X31
	182 Call Event.get_current
	183 Move X8, [X22]
	184 Move X20, X0
	185 Move W9, [X8+224]
	186 Compare W9, 0
	187 JumpIfNotEqual {190}
	188 Move X0, X8
	189 Call 0x1C17DFC
	190 Move V0, V9
	191 Move V1, V8
	192 Move V2, V10
	193 Move V3, V11
	194 Move X0, X20
	195 Move X1, X31
	196 Call GUIUtility.HitTest, X0, X1
	197 Move X23, 0x4A0000
	198 Move X23, [X23+1216]
	199 Move W20, W0
	200 Move X8, [X23]
	201 Move W9, [X8+224]
	202 Compare W9, 0
	203 JumpIfEqual {235}
	204 Move TEMP, X20
	205 And TEMP, TEMP, 1
	206 Compare TEMP, 1
	207 JumpIfNotEqual {241}
	208 Move X20, 0x76C000
	209 Move W8, [X20+2515]
	210 Compare W8, 0
	211 JumpIfNotEqual {217}
	212 Move X0, 0x4A0000
	213 Move X0, [X0+1216]
	214 Call 0x1C17CF4
	215 Move W8, 1
	216 Move [X20+2515], W8
	217 Move X0, [X23]
	218 Move W8, [X0+224]
	219 Compare W8, 0
	220 JumpIfNotEqual {223}
	221 Call 0x1C17DFC
	222 Move X0, [X23]
	223 Move X8, [X0+184]
	224 Move W8, [X8+36]
	225 Compare W8, 0
	226 JumpIfEqual {376}
	227 Move X0, [X22]
	228 Move W8, [X0+224]
	229 Compare W8, 0
	230 JumpIfNotEqual {232}
	231 Call 0x1C17DFC
	232 Move W0, W31
	233 Move X1, X31
	234 Call GUIUtility.set_hotControl, X0
	235 Move X0, X8
	236 Call 0x1C17DFC
	237 Move TEMP, X20
	238 And TEMP, TEMP, 1
	239 Compare TEMP, 1
	240 JumpIfEqual {208}
	241 Move X0, X31
	242 Call GUI.InternalRepaintEditorWindow
	243 Move X22, 0x4E5000
	244 Move X22, [X22+1872]
	245 Move X0, [X22]
	246 Move W8, [X0+224]
	247 Compare W8, 0
	248 JumpIfNotEqual {250}
	249 Call 0x1C17DFC
	250 Move X0, X31
	251 Call SystemClock.get_now
	252 Move X21, 0x76C000
	253 Move W8, [X21+2516]
	254 Move X20, X0
	255 Compare W8, 0
	256 JumpIfNotEqual {262}
	257 Move X0, 0x4A0000
	258 Move X0, [X0+1216]
	259 Call 0x1C17CF4
	260 Move W8, 1
	261 Move [X21+2516], W8
	262 Move X0, [X23]
	263 Move W8, [X0+224]
	264 Compare W8, 0
	265 JumpIfNotEqual {268}
	266 Call 0x1C17DFC
	267 Move X0, [X23]
	268 Move X24, 0x47A000
	269 Move X24, [X24+2544]
	270 Move X9, [X0+184]
	271 Move X8, [X24]
	272 Move X21, [X9+40]
	273 Move W10, [X8+224]
	274 Compare W10, 0
	275 JumpIfNotEqual {278}
	276 Move X0, X8
	277 Call 0x1C17DFC
	278 Move X0, X20
	279 Move X1, X21
	280 Move X2, X31
	281 Call DateTime.op_LessThan, X0, X1
	282 Move TEMP, X0
	283 And TEMP, TEMP, 1
	284 Compare TEMP, 1
	285 JumpIfEqual {376}
	286 Move X0, X19
	287 Call SliderHandler.CurrentScrollTroughSide, X0
	288 Move X8, [X23]
	289 Move W20, W0
	290 Move W9, [X8+224]
	291 Compare W9, 0
	292 JumpIfNotEqual {295}
	293 Move X0, X8
	294 Call 0x1C17DFC
	295 Move X21, 0x76C000
	296 Move W8, [X21+2515]
	297 Compare W8, 0
	298 JumpIfNotEqual {304}
	299 Move X0, 0x4A0000
	300 Move X0, [X0+1216]
	301 Call 0x1C17CF4
	302 Move W8, 1
	303 Move [X21+2515], W8
	304 Move X0, [X23]
	305 Move W8, [X0+224]
	306 Compare W8, 0
	307 JumpIfNotEqual {310}
	308 Call 0x1C17DFC
	309 Move X0, [X23]
	310 Move X8, [X0+184]
	311 Move W8, [X8+36]
	312 NotImplemented "Instruction CMP not yet implemented."
	313 Move X0, [X22]
	314 Move W8, [X0+224]
	315 Compare W8, 0
	316 JumpIfNotEqual {318}
	317 Call 0x1C17DFC
	318 Move X0, X31
	319 Call SystemClock.get_now
	320 Move X8, [X24]
	321 Move [X31+40], X0
	322 Move W9, [X8+224]
	323 Compare W9, 0
	324 JumpIfNotEqual {327}
	325 Move X0, X8
	326 Call 0x1C17DFC
	327 Add X0, X31, 40
	328 Move D0, 16.00000000325963
	329 Move X1, X31
	330 Call DateTime.AddMilliseconds, X0, V0
	331 Move X8, [X23]
	332 Move X20, X0
	333 Move W9, [X8+224]
	334 Compare W9, 0
	335 JumpIfNotEqual {338}
	336 Move X0, X8
	337 Call 0x1C17DFC
	338 Move X21, 0x76C000
	339 Move W8, [X21+2434]
	340 Compare W8, 0
	341 JumpIfNotEqual {347}
	342 Move X0, 0x4A0000
	343 Move X0, [X0+1216]
	344 Call 0x1C17CF4
	345 Move W8, 1
	346 Move [X21+2434], W8
	347 Move X0, [X23]
	348 Move W8, [X0+224]
	349 Compare W8, 0
	350 JumpIfNotEqual {353}
	351 Call 0x1C17DFC
	352 Move X0, [X23]
	353 Move X8, [X0+184]
	354 Move X0, X19
	355 Move [X8+40], X20
	356 Call SliderHandler.SupportsPageMovements, X0
	357 Move TEMP, X0
	358 And TEMP, TEMP, 1
	359 Compare TEMP, 1
	360 JumpIfNotEqual {389}
	361 Move X0, X19
	362 Call SliderHandler.SliderState, X0
	363 Compare X0, 0
	364 JumpIfEqual {401}
	365 Move [X0+24], W31
	366 Move X0, [X23]
	367 Move W8, [X0+224]
	368 Compare W8, 0
	369 JumpIfNotEqual {371}
	370 Call 0x1C17DFC
	371 Move W0, 1
	372 Move X1, X31
	373 Call GUI.set_changed, X0
	374 Move X0, X19
	375 Call SliderHandler.PageMovementValue, X0
	376 Move V0, [X19+16]
	377 Move X20, [X31+80]
	378 Move X19, [X31+88]
	379 Move X22, [X31+64]
	380 Move X21, [X31+72]
	381 Move X24, [X31+48]
	382 Move X23, [X31+56]
	383 Move X30, [X31+32]
	384 Move D9, [X31+16]
	385 Move D8, [X31+24]
	386 Move D11, [X31+96]
	387 Move D10, [X31+104]
	388 Return V0
	389 Move S0, [X19+24]
	390 Move S1, [X19+28]
	391 Move S2, [X19+16]
	392 Move S3, [X19+20]
	393 NotImplemented "Instruction FCMP not yet implemented."
	394 NotImplemented "Instruction FCSEL not yet implemented."
	395 NotImplemented "Instruction FCSEL not yet implemented."
	396 Subtract S0, S0, S3
	397 NotImplemented "Instruction FCMP not yet implemented."
	398 NotImplemented "Instruction FCSEL not yet implemented."
	399 NotImplemented "Instruction FCMP not yet implemented."
	400 NotImplemented "Instruction FCSEL not yet implemented."
	401 Call 0x1C17F20

Method: UnityEngine.EventType CurrentEventType()

Disassembly:
	0x03C7B074 BL 0x3C73614
	0x03C7B078 MOV X0, X19
	0x03C7B07C MOV V9.16B, V0.16B
	0x03C7B080 BL 0x3C7B0C0
	0x03C7B084 FMOV S4, 0.5
	0x03C7B088 LDP X30, X19, [X31 + 0x10]
	0x03C7B08C FMUL S2, S2, S4
	0x03C7B090 FMUL S3, S3, S4
	0x03C7B094 FADD S0, S0, S2
	0x03C7B098 FMUL S2, S8, S4

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, X31
	005 Call Event.get_current
	006 Compare X0, 0
	007 JumpIfEqual {14}
	008 Move W1, [X19+60]
	009 Move X2, X31
	010 Move X30, [X31+16]
	011 Move X19, [X31+24]
	012 Call Event.GetTypeForControl, X0, X1
	013 Return X0
	014 Call 0x1C17F20

Method: System.Int32 CurrentScrollTroughSide()

Disassembly:
	0x03C7BDC8 ADRP X0, 0x4E5000
	0x03C7BDCC LDR X0, [X0 + 0x6A0]
	0x03C7BDD0 BL 0x1C16CF4
	0x03C7BDD4 ADRP X0, 0x4E5000
	0x03C7BDD8 LDR X0, [X0 + 0x6A8]
	0x03C7BDDC BL 0x1C16CF4
	0x03C7BDE0 ADRP X0, 0x4E5000
	0x03C7BDE4 LDR X0, [X0 + 0x6B0]
	0x03C7BDE8 BL 0x1C16CF4
	0x03C7BDEC MOVZ W8, 0x1
	0x03C7BDF0 STRB W8, [X19 + 0x9AE]
	0x03C7BDF4 LDR X8, [X20]
	0x03C7BDF8 LDR X8, [X8 + 0xB8]
	0x03C7BDFC LDR X8, [X8]
	0x03C7BE00 CBZ X8, 0x3C7BE24
	0x03C7BE04 LDP X20, X19, [X31 + 0xD0]
	0x03C7BE08 LDP X22, X21, [X31 + 0xC0]
	0x03C7BE0C LDP X24, X23, [X31 + 0xB0]
	0x03C7BE10 LDP X26, X25, [X31 + 0xA0]
	0x03C7BE14 LDP X28, X27, [X31 + 0x90]
	0x03C7BE18 LDP X29, X30, [X31 + 0x80]
	0x03C7BE1C ADD X31, X31, 0xE0
	0x03C7BE20 RET
	0x03C7BE24 ADRP X8, 0x4E5000
	0x03C7BE28 LDR X8, [X8 + 0x5C0]

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move W20, [X0+56]
	007 Move X19, X0
	008 Move X0, X31
	009 Call Event.get_current
	010 Compare X0, 0
	011 JumpIfEqual {32}
	012 Move X1, X31
	013 Call Event.get_mousePosition, X0
	014 Move W21, [X19+56]
	015 NotImplemented "Instruction CMP not yet implemented."
	016 Move X0, X19
	017 NotImplemented "Instruction FCSEL not yet implemented."
	018 Call SliderHandler.ThumbRect, X0
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move X20, [X31+32]
	021 Move X19, [X31+40]
	022 Move X30, [X31+16]
	023 Move X21, [X31+24]
	024 NotImplemented "Instruction FCSEL not yet implemented."
	025 NotImplemented "Instruction FCMP not yet implemented."
	026 Move TEMP, 0
	027 Not TEMP
	028 Move W8, TEMP
	029 NotImplemented "Instruction CSINC not yet implemented."
	030 Move V8, [X31+48]
	031 Return X0
	032 Call 0x1C17F20

Method: System.Boolean IsEmptySlider()

Disassembly:
	0x03C7BBD0 SUB X31, X31, 0xE0
	0x03C7BBD4 STP X29, X30, [X31 + 0x80]
	0x03C7BBD8 STP X28, X27, [X31 + 0x90]
	0x03C7BBDC STP X26, X25, [X31 + 0xA0]

ISIL:
	001 Move S0, [X0+24]
	002 Move S1, [X0+28]
	003 NotImplemented "Instruction FCMP not yet implemented."
	004 NotImplemented "Instruction CSET not yet implemented."
	005 Return X0

Method: System.Boolean SupportsPageMovements()

Disassembly:
	0x03C7BC54 ADRP X0, 0x4E5000
	0x03C7BC58 LDR X0, [X0 + 0x5D8]
	0x03C7BC5C BL 0x1C16CF4
	0x03C7BC60 ADRP X0, 0x4E5000
	0x03C7BC64 LDR X0, [X0 + 0x5E0]
	0x03C7BC68 BL 0x1C16CF4
	0x03C7BC6C ADRP X0, 0x4E5000
	0x03C7BC70 LDR X0, [X0 + 0x5E8]
	0x03C7BC74 BL 0x1C16CF4
	0x03C7BC78 ADRP X0, 0x4CA000
	0x03C7BC7C LDR X0, [X0 + 0xFA8]
	0x03C7BC80 BL 0x1C16CF4
	0x03C7BC84 ADRP X0, 0x4E5000
	0x03C7BC88 LDR X0, [X0 + 0x5F0]
	0x03C7BC8C BL 0x1C16CF4
	0x03C7BC90 ADRP X0, 0x4E5000
	0x03C7BC94 LDR X0, [X0 + 0x5F8]
	0x03C7BC98 BL 0x1C16CF4
	0x03C7BC9C ADRP X0, 0x4E5000
	0x03C7BCA0 LDR X0, [X0 + 0x600]
	0x03C7BCA4 BL 0x1C16CF4
	0x03C7BCA8 ADRP X0, 0x4E5000
	0x03C7BCAC LDR X0, [X0 + 0x608]
	0x03C7BCB0 BL 0x1C16CF4
	0x03C7BCB4 ADRP X0, 0x4E5000
	0x03C7BCB8 LDR X0, [X0 + 0x610]
	0x03C7BCBC BL 0x1C16CF4
	0x03C7BCC0 ADRP X0, 0x4E5000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x76C000
	005 Move W8, [X20+2468]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x4A0000
	012 Move X0, [X0+1216]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2468], W8
	016 Move V0, [X19+20]
	017 NotImplemented "Instruction FCMP not yet implemented."
	018 Move X8, 0x4A0000
	019 Move X8, [X8+1216]
	020 Move X0, [X8]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X0, X31
	028 Move X30, [X31+32]
	029 Call GUI.get_usePageScrollbars
	030 Return X0
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move W0, W31
	034 Move X30, [X31+32]
	035 Return X0

Method: System.Single PageMovementValue()

Disassembly:
	0x03C7BE2C LDR X0, [X8]
	0x03C7BE30 BL 0x1C16F10
	0x03C7BE34 ADRP X8, 0x4E5000
	0x03C7BE38 LDR X8, [X8 + 0x5B8]
	0x03C7BE3C MOV X19, X0
	0x03C7BE40 LDR X1, [X8]
	0x03C7BE44 BL 0x2AA1784
	0x03C7BE48 LDR X8, [X20]
	0x03C7BE4C MOV W1, W31
	0x03C7BE50 LDR X8, [X8 + 0xB8]
	0x03C7BE54 STR X19, [X8]
	0x03C7BE58 ADRP X8, 0x4B1000
	0x03C7BE5C LDR X8, [X8 + 0xB38]
	0x03C7BE60 LDR X0, [X8]
	0x03C7BE64 BL 0x3C7D8F0
	0x03C7BE68 ADRP X8, 0x4BC000
	0x03C7BE6C LDR X8, [X8 + 0x760]
	0x03C7BE70 MOVZ W1, 0x1
	0x03C7BE74 LDR X0, [X8]
	0x03C7BE78 BL 0x3C7D8F0
	0x03C7BE7C ADRP X8, 0x4CA000
	0x03C7BE80 LDR X8, [X8 + 0xFA8]
	0x03C7BE84 MOVZ W1, 0x2
	0x03C7BE88 LDR X0, [X8]
	0x03C7BE8C BL 0x3C7D8F0
	0x03C7BE90 ADRP X8, 0x4CA000
	0x03C7BE94 LDR X8, [X8 + 0xFB0]
	0x03C7BE98 MOVZ W1, 0x3
	0x03C7BE9C LDR X0, [X8]
	0x03C7BEA0 BL 0x3C7D8F0
	0x03C7BEA4 ADRP X8, 0x4CC000
	0x03C7BEA8 LDR X8, [X8 + 0xF8]
	0x03C7BEAC MOVZ W1, 0x12
	0x03C7BEB0 LDR X0, [X8]

ISIL:
	001 Move [X31-48], D11
	002 Move [X31-40], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+40], X19
	007 Move V9, [X0+16]
	008 Move S10, [X0+24]
	009 Move S11, [X0+28]
	010 Move X19, X0
	011 Call SliderHandler.MousePosition, X0
	012 Move X0, X19
	013 Move V8, V0
	014 Call SliderHandler.PageUpMovementBound, X0
	015 Move S1, [X19+20]
	016 Move S2, [X19+24]
	017 Move X8, -51970048
	018 NotImplemented "Instruction FCMP not yet implemented."
	019 Move V3, [X8+196]
	020 NotImplemented "Instruction FNEG not yet implemented."
	021 NotImplemented "Instruction FCSEL not yet implemented."
	022 NotImplemented "Instruction FCMP not yet implemented."
	023 Move V0, [X19+28]
	024 Multiply S5, S4, S3
	025 NotImplemented "Instruction FNMUL not yet implemented."
	026 NotImplemented "Instruction FCSEL not yet implemented."
	027 NotImplemented "Instruction FCMP not yet implemented."
	028 NotImplemented "Instruction FCSEL not yet implemented."
	029 NotImplemented "Instruction FCSEL not yet implemented."
	030 Add S3, S9, S3
	031 Subtract S0, S0, S1
	032 Move X30, [X31+32]
	033 Move X19, [X31+40]
	034 Move D9, [X31+16]
	035 Move D8, [X31+24]
	036 NotImplemented "Instruction FCMP not yet implemented."
	037 NotImplemented "Instruction FCSEL not yet implemented."
	038 NotImplemented "Instruction FCMP not yet implemented."
	039 NotImplemented "Instruction FCSEL not yet implemented."
	040 Move D11, [X31+48]
	041 Move D10, [X31+56]
	042 Return V0

Method: System.Single PageUpMovementBound()

Disassembly:
	0x03C7C0D0 MOV X21, X2
	0x03C7C0D4 MOV X22, X3
	0x03C7C0D8 MOV W25, W4
	0x03C7C0DC MOV W23, W5
	0x03C7C0E0 MOV W27, W7
	0x03C7C0E4 MOV X24, X30
	0x03C7C0E8 BL 0x3C7D8F0
	0x03C7C0EC LDR X0, [X24]
	0x03C7C0F0 MOV W1, W27
	0x03C7C0F4 BL 0x3C7D8F0
	0x03C7C0F8 ADRP X8, 0x4E4000
	0x03C7C0FC LDR X8, [X8 + 0x678]
	0x03C7C100 MOV W1, W20
	0x03C7C104 LDR X0, [X8]
	0x03C7C108 BL 0x3C7D8F0
	0x03C7C10C ADRP X8, 0x4E4000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W20, [X0+56]
	005 Move X19, X0
	006 Call SliderHandler.ThumbRect, X0
	007 Compare W20, 0
	008 JumpIfEqual {12}
	009 Move V1, [X19]
	010 Add S0, S2, S0
	011 Subtract S0, S0, S1
	012 Move V0, [X19+4]
	013 Add S1, S3, S1
	014 Subtract S0, S1, S0
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 Return V0

Method: UnityEngine.Event CurrentEvent()

Disassembly:
	0x03C7BBC8 RET
	0x03C7BBCC BL 0x1C16F20

ISIL:
	001 Move X0, X31
	002 Call Event.get_current
	003 Return X0

Method: System.Single ValueForCurrentMousePosition()

Disassembly:
	0x03C7BEB4 BL 0x3C7D8F0
	0x03C7BEB8 ADRP X8, 0x4CC000
	0x03C7BEBC LDR X8, [X8 + 0x220]
	0x03C7BEC0 MOVZ W1, 0x13
	0x03C7BEC4 LDR X0, [X8]
	0x03C7BEC8 BL 0x3C7D8F0
	0x03C7BECC ADRP X8, 0x4E5000
	0x03C7BED0 LDR X8, [X8 + 0x608]
	0x03C7BED4 MOVZ W1, 0x13
	0x03C7BED8 LDR X0, [X8]
	0x03C7BEDC BL 0x3C7D8F0
	0x03C7BEE0 MOV X0, X31
	0x03C7BEE4 BL 0x3C3B89C
	0x03C7BEE8 ADRP X19, 0x4E5000
	0x03C7BEEC ADRP X2, 0x4E5000
	0x03C7BEF0 LDR X19, [X19 + 0x5F8]
	0x03C7BEF4 LDR X2, [X2 + 0x5C8]
	0x03C7BEF8 CMP W0, 0x1
	0x03C7BEFC B.NE 0x3C7BFF0
	0x03C7BF00 LDR X0, [X2]
	0x03C7BF04 MOVZ W1, 0xA
	0x03C7BF08 MOVZ W25, 0xA
	0x03C7BF0C BL 0x3C7D8F0
	0x03C7BF10 LDR X0, [X19]
	0x03C7BF14 MOVZ W1, 0xB
	0x03C7BF18 MOVZ W21, 0xB
	0x03C7BF1C BL 0x3C7D8F0
	0x03C7BF20 ADRP X8, 0x4E5000
	0x03C7BF24 LDR X8, [X8 + 0x5F0]

ISIL:
	001 Move [X31-48], D10
	002 Move [X31+8], D9
	003 Move [X31+16], D8
	004 Move [X31+24], X30
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move W20, [X0+56]
	008 Move X19, X0
	009 Call SliderHandler.MousePosition, X0
	010 Move X0, X19
	011 Move V8, V0
	012 Call SliderHandler.ThumbRect, X0
	013 Move X0, X19
	014 Move V9, V2
	015 Move V10, V3
	016 Call SliderHandler.ValuesPerPixel, X0
	017 NotImplemented "Instruction CMP not yet implemented."
	018 Move S2, [X19+20]
	019 Move S1, [X19+24]
	020 Move S3, 0.5
	021 NotImplemented "Instruction FCSEL not yet implemented."
	022 Multiply S4, S4, S3
	023 Subtract S4, S8, S4
	024 Move X20, [X31+32]
	025 Move X19, [X31+40]
	026 Move X30, [X31+24]
	027 Move D9, [X31+8]
	028 Move D8, [X31+16]
	029 NotImplemented "Instruction FDIV not yet implemented."
	030 Add S0, S1, S0
	031 Multiply S1, S2, S3
	032 Subtract S0, S0, S1
	033 Move V10, [X31+48]
	034 Return V0

Method: System.Single Clamp(System.Single value)

Disassembly:
	0x03C7BF28 MOVZ W1, 0xC
	0x03C7BF2C LDR X0, [X8]
	0x03C7BF30 BL 0x3C7D8F0
	0x03C7BF34 ADRP X8, 0x4E5000
	0x03C7BF38 LDR X8, [X8 + 0x648]
	0x03C7BF3C MOVZ W1, 0xD
	0x03C7BF40 LDR X0, [X8]
	0x03C7BF44 BL 0x3C7D8F0
	0x03C7BF48 ADRP X9, 0x4E5000
	0x03C7BF4C ADRP X10, 0x4E5000
	0x03C7BF50 ADRP X11, 0x4E5000

ISIL:
	001 Move S2, [X0+24]
	002 Move S1, [X0+28]
	003 Move V3, [X0+20]
	004 NotImplemented "Instruction FCMP not yet implemented."
	005 NotImplemented "Instruction FCSEL not yet implemented."
	006 NotImplemented "Instruction FCSEL not yet implemented."
	007 Subtract S1, S1, S3
	008 NotImplemented "Instruction FCMP not yet implemented."
	009 NotImplemented "Instruction FCSEL not yet implemented."
	010 NotImplemented "Instruction FCMP not yet implemented."
	011 NotImplemented "Instruction FCSEL not yet implemented."
	012 Return V0

Method: UnityEngine.Rect ThumbSelectionRect()

Disassembly:
	0x03C7BBC4 LDP X30, X23, [X31], #0x30

ISIL:
	001 Call SliderHandler.ThumbRect, X0
	002 Return X0

Method: System.Void StartDraggingWithValue(System.Single dragStartValue)

Disassembly:
	0x03C7BC0C ADRP X0, 0x4E5000
	0x03C7BC10 LDR X0, [X0 + 0x5C0]
	0x03C7BC14 BL 0x1C16CF4
	0x03C7BC18 ADRP X0, 0x4E5000
	0x03C7BC1C LDR X0, [X0 + 0x5B0]
	0x03C7BC20 BL 0x1C16CF4
	0x03C7BC24 ADRP X0, 0x4E5000
	0x03C7BC28 LDR X0, [X0 + 0x5C8]
	0x03C7BC2C BL 0x1C16CF4
	0x03C7BC30 ADRP X0, 0x4CC000
	0x03C7BC34 LDR X0, [X0 + 0xF8]
	0x03C7BC38 BL 0x1C16CF4
	0x03C7BC3C ADRP X0, 0x4C9000
	0x03C7BC40 LDR X0, [X0 + 0xE98]
	0x03C7BC44 BL 0x1C16CF4
	0x03C7BC48 ADRP X0, 0x4E5000
	0x03C7BC4C LDR X0, [X0 + 0x5D0]
	0x03C7BC50 BL 0x1C16CF4

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move V8, V0
	006 Move X20, X0
	007 Call SliderHandler.SliderState, X0
	008 Move X19, X0
	009 Move X0, X20
	010 Call SliderHandler.MousePosition, X0
	011 Compare X19, 0
	012 JumpIfEqual {22}
	013 Move W8, 1
	014 Move [X19+16], S0
	015 Move [X19+24], S8
	016 Move [X19+24], W8
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 Move X30, [X31+8]
	020 Move V8, [X31+32]
	021 Return 
	022 Call 0x1C17F20

Method: UnityEngine.SliderState SliderState()

Disassembly:
	0x03C7BCC4 LDR X0, [X0 + 0x618]
	0x03C7BCC8 BL 0x1C16CF4
	0x03C7BCCC ADRP X0, 0x4E5000
	0x03C7BCD0 LDR X0, [X0 + 0x620]
	0x03C7BCD4 BL 0x1C16CF4
	0x03C7BCD8 ADRP X0, 0x4E5000
	0x03C7BCDC LDR X0, [X0 + 0x628]
	0x03C7BCE0 BL 0x1C16CF4
	0x03C7BCE4 ADRP X0, 0x4CA000
	0x03C7BCE8 LDR X0, [X0 + 0xFB0]
	0x03C7BCEC BL 0x1C16CF4
	0x03C7BCF0 ADRP X0, 0x4E5000
	0x03C7BCF4 LDR X0, [X0 + 0x630]
	0x03C7BCF8 BL 0x1C16CF4
	0x03C7BCFC ADRP X0, 0x4E5000
	0x03C7BD00 LDR X0, [X0 + 0x638]
	0x03C7BD04 BL 0x1C16CF4
	0x03C7BD08 ADRP X0, 0x4CC000
	0x03C7BD0C LDR X0, [X0 + 0x220]
	0x03C7BD10 BL 0x1C16CF4
	0x03C7BD14 ADRP X0, 0x4E5000
	0x03C7BD18 LDR X0, [X0 + 0x640]
	0x03C7BD1C BL 0x1C16CF4
	0x03C7BD20 ADRP X0, 0x4E5000
	0x03C7BD24 LDR X0, [X0 + 0x648]
	0x03C7BD28 BL 0x1C16CF4
	0x03C7BD2C ADRP X0, 0x4E5000
	0x03C7BD30 LDR X0, [X0 + 0x650]
	0x03C7BD34 BL 0x1C16CF4
	0x03C7BD38 ADRP X0, 0x4E5000
	0x03C7BD3C LDR X0, [X0 + 0x658]
	0x03C7BD40 BL 0x1C16CF4
	0x03C7BD44 ADRP X0, 0x4B1000
	0x03C7BD48 LDR X0, [X0 + 0xB38]
	0x03C7BD4C BL 0x1C16CF4
	0x03C7BD50 ADRP X0, 0x4E5000
	0x03C7BD54 LDR X0, [X0 + 0x660]
	0x03C7BD58 BL 0x1C16CF4
	0x03C7BD5C ADRP X0, 0x4E5000
	0x03C7BD60 LDR X0, [X0 + 0x668]
	0x03C7BD64 BL 0x1C16CF4
	0x03C7BD68 ADRP X0, 0x4E5000
	0x03C7BD6C LDR X0, [X0 + 0x670]
	0x03C7BD70 BL 0x1C16CF4
	0x03C7BD74 ADRP X0, 0x4E5000
	0x03C7BD78 LDR X0, [X0 + 0x678]
	0x03C7BD7C BL 0x1C16CF4
	0x03C7BD80 ADRP X0, 0x4CC000
	0x03C7BD84 LDR X0, [X0 + 0x298]
	0x03C7BD88 BL 0x1C16CF4
	0x03C7BD8C ADRP X0, 0x4BC000
	0x03C7BD90 LDR X0, [X0 + 0x760]
	0x03C7BD94 BL 0x1C16CF4
	0x03C7BD98 ADRP X0, 0x4E5000
	0x03C7BD9C LDR X0, [X0 + 0x680]
	0x03C7BDA0 BL 0x1C16CF4
	0x03C7BDA4 ADRP X0, 0x4E5000
	0x03C7BDA8 LDR X0, [X0 + 0x688]
	0x03C7BDAC BL 0x1C16CF4
	0x03C7BDB0 ADRP X0, 0x4E5000
	0x03C7BDB4 LDR X0, [X0 + 0x690]
	0x03C7BDB8 BL 0x1C16CF4
	0x03C7BDBC ADRP X0, 0x4E5000
	0x03C7BDC0 LDR X0, [X0 + 0x698]
	0x03C7BDC4 BL 0x1C16CF4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x76C000
	007 Move X20, 0x4E6000
	008 Move X21, 0x479000
	009 Move W8, [X22+2469]
	010 Move X20, [X20+1424]
	011 Move X21, [X21+1728]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {31}
	017 Move X0, 0x4A5000
	018 Move X0, [X0+1480]
	019 Call 0x1C17CF4
	020 Move X0, 0x4E6000
	021 Move X0, [X0+1424]
	022 Call 0x1C17CF4
	023 Move X0, 0x4E6000
	024 Move X0, [X0+1432]
	025 Call 0x1C17CF4
	026 Move X0, 0x479000
	027 Move X0, [X0+1728]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X22+2469], W8
	031 Move X0, [X21]
	032 Move X21, 0x4A5000
	033 Move X20, [X20]
	034 Move W8, [X0+224]
	035 Move X21, [X21+1480]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Move X0, X20
	040 Move X1, X31
	041 Call Type.GetTypeFromHandle, X0
	042 Move X8, [X21]
	043 Move W19, [X19+60]
	044 Move X20, X0
	045 Move W9, [X8+224]
	046 Compare W9, 0
	047 JumpIfNotEqual {50}
	048 Move X0, X8
	049 Call 0x1C17DFC
	050 Move X0, X20
	051 Move W1, W19
	052 Move X2, X31
	053 Call GUIUtility.GetStateObject, X0, X1
	054 Compare X0, 0
	055 JumpIfEqual {67}
	056 Move X9, 0x4E6000
	057 Move X9, [X9+1432]
	058 Move X8, [X0]
	059 Move X1, [X9]
	060 Move W10, [X8+304]
	061 Move W9, [X1+304]
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move X8, [X8+200]
	064 Add X8, X8, X9
	065 NotImplemented "Instruction LDUR not yet implemented."
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move X20, [X31+32]
	068 Move X19, [X31+40]
	069 Move X22, [X31+16]
	070 Move X21, [X31+24]
	071 Move X30, [X31+48]
	072 Return X0
	073 Call 0x1C181E0

Method: UnityEngine.Rect ThumbExtRect()

Disassembly:
	0x03C7C048 MOVZ W29, 0x18
	0x03C7C04C MOVZ W20, 0x17
	0x03C7C050 MOVZ W22, 0x16
	0x03C7C054 MOVZ W23, 0x14
	0x03C7C058 MOVZ W24, 0x15
	0x03C7C05C MOVZ W4, 0x10
	0x03C7C060 MOVZ W5, 0x11
	0x03C7C064 MOVZ W28, 0xE
	0x03C7C068 MOVZ W26, 0xF
	0x03C7C06C MOVZ W21, 0xD
	0x03C7C070 MOVZ W25, 0xC
	0x03C7C074 MOVZ W7, 0xB
	0x03C7C078 MOVZ W1, 0xA
	0x03C7C07C MOVZ W6, 0xF
	0x03C7C080 MOVZ W27, 0xE
	0x03C7C084 MOVZ W17, 0x17
	0x03C7C088 MOVZ W15, 0x18
	0x03C7C08C STP X16, X0, [X31 + 0x10]
	0x03C7C090 LDR X0, [X8]
	0x03C7C094 STP W6, W27, [X31 + 0x8]
	0x03C7C098 STR W24, [X31 + 0x24]
	0x03C7C09C STR X14, [X31 + 0x28]
	0x03C7C0A0 STR W23, [X31 + 0x34]
	0x03C7C0A4 STR X13, [X31 + 0x38]
	0x03C7C0A8 STR W22, [X31 + 0x44]
	0x03C7C0AC STR X12, [X31 + 0x48]
	0x03C7C0B0 STR W20, [X31 + 0x54]
	0x03C7C0B4 STR X11, [X31 + 0x58]
	0x03C7C0B8 STP W29, W17, [X31 + 0x60]
	0x03C7C0BC STR X10, [X31 + 0x68]

ISIL:
	001 Move [X31-32], D9
	002 Move [X31-24], D8
	003 Move [X31+16], X30
	004 Move [X31+24], X19
	005 Move X19, X0
	006 Move X0, [X0+48]
	007 Compare X0, 0
	008 JumpIfEqual {36}
	009 Move X1, X31
	010 Call GUIStyle.get_fixedWidth, X0
	011 Move X0, [X19+48]
	012 Compare X0, 0
	013 JumpIfEqual {36}
	014 Move X1, X31
	015 Move V8, V0
	016 Call GUIStyle.get_fixedHeight, X0
	017 Move X0, X19
	018 Move V9, V0
	019 Call SliderHandler.ThumbRect, X0
	020 Move S4, 0.5
	021 Move X30, [X31+16]
	022 Move X19, [X31+24]
	023 Multiply S2, S2, S4
	024 Multiply S3, S3, S4
	025 Add S0, S0, S2
	026 Multiply S2, S8, S4
	027 Multiply S4, S9, S4
	028 Add S1, S1, S3
	029 Subtract S0, S0, S2
	030 Subtract S1, S1, S4
	031 Move V2, V8
	032 Move V3, V9
	033 Move D9, [X31+32]
	034 Move D8, [X31+40]
	035 Return X0
	036 Call 0x1C17F20

Method: UnityEngine.Rect ThumbRect()

Disassembly:
	0x03C7C0C0 STR W15, [X31 + 0x74]
	0x03C7C0C4 STR X9, [X31 + 0x78]
	0x03C7C0C8 MOV W29, W21
	0x03C7C0CC MOV W20, W25

ISIL:
	001 Move W8, [X0+56]
	002 Compare W8, 0
	003 JumpIfEqual {6}
	004 Call SliderHandler.HorizontalThumbRect, X0
	005 Return X0
	006 Call SliderHandler.VerticalThumbRect, X0
	007 Return X0

Method: UnityEngine.Rect VerticalThumbRect()

Disassembly:
	0x03C7C138 LDR X8, [X8 + 0x6A8]
	0x03C7C13C MOV W1, W28
	0x03C7C140 LDR X0, [X8]
	0x03C7C144 BL 0x3C7D8F0
	0x03C7C148 LDR X0, [X21]
	0x03C7C14C MOV W1, W23
	0x03C7C150 BL 0x3C7D8F0
	0x03C7C154 LDR X0, [X19]
	0x03C7C158 MOV W1, W25
	0x03C7C15C BL 0x3C7D8F0
	0x03C7C160 LDR X0, [X22]
	0x03C7C164 LDR W1, [X31 + 0x8]
	0x03C7C168 BL 0x3C7D8F0
	0x03C7C16C LDR X8, [X31 + 0x18]
	0x03C7C170 LDR W1, [X31 + 0xC]
	0x03C7C174 LDR X0, [X8]
	0x03C7C178 BL 0x3C7D8F0
	0x03C7C17C LDR X8, [X31 + 0x10]
	0x03C7C180 LDR W1, [X31 + 0x24]
	0x03C7C184 LDR X0, [X8]
	0x03C7C188 BL 0x3C7D8F0
	0x03C7C18C LDR X8, [X31 + 0x28]
	0x03C7C190 LDR W1, [X31 + 0x34]
	0x03C7C194 LDR X0, [X8]
	0x03C7C198 BL 0x3C7D8F0
	0x03C7C19C LDR X8, [X31 + 0x38]
	0x03C7C1A0 LDR W1, [X31 + 0x44]
	0x03C7C1A4 LDR X0, [X8]
	0x03C7C1A8 BL 0x3C7D8F0
	0x03C7C1AC LDR X8, [X31 + 0x48]
	0x03C7C1B0 LDR W1, [X31 + 0x54]
	0x03C7C1B4 LDR X0, [X8]
	0x03C7C1B8 BL 0x3C7D8F0
	0x03C7C1BC LDR X8, [X31 + 0x58]
	0x03C7C1C0 LDR W1, [X31 + 0x60]
	0x03C7C1C4 LDR X0, [X8]
	0x03C7C1C8 BL 0x3C7D8F0
	0x03C7C1CC LDR X8, [X31 + 0x68]
	0x03C7C1D0 LDR W1, [X31 + 0x64]
	0x03C7C1D4 LDR X0, [X8]
	0x03C7C1D8 BL 0x3C7D8F0
	0x03C7C1DC LDR X8, [X31 + 0x78]
	0x03C7C1E0 LDR W1, [X31 + 0x74]
	0x03C7C1E4 LDP X20, X19, [X31 + 0xD0]
	0x03C7C1E8 LDP X22, X21, [X31 + 0xC0]
	0x03C7C1EC LDR X0, [X8]
	0x03C7C1F0 LDP X24, X23, [X31 + 0xB0]
	0x03C7C1F4 LDP X26, X25, [X31 + 0xA0]
	0x03C7C1F8 LDP X28, X27, [X31 + 0x90]
	0x03C7C1FC LDP X29, X30, [X31 + 0x80]
	0x03C7C200 ADD X31, X31, 0xE0
	0x03C7C204 B 0x3C7D8F0
	0x03C7C208 SUB X31, X31, 0x40
	0x03C7C20C STP X30, X21, [X31 + 0x20]
	0x03C7C210 STP X20, X19, [X31 + 0x30]
	0x03C7C214 ADRP X21, 0x76A000
	0x03C7C218 LDRB W8, [X21 + 0x9AC]
	0x03C7C21C MOV W20, W1
	0x03C7C220 MOV X19, X0
	0x03C7C224 TBNZ X8, 0x0, 0x3C7C254
	0x03C7C228 ADRP X0, 0x477000
	0x03C7C22C LDR X0, [X0 + 0xA28]
	0x03C7C230 BL 0x1C16CF4
	0x03C7C234 ADRP X0, 0x4E4000
	0x03C7C238 LDR X0, [X0 + 0x6B8]
	0x03C7C23C BL 0x1C16CF4
	0x03C7C240 ADRP X0, 0x4E4000
	0x03C7C244 LDR X0, [X0 + 0x6C0]
	0x03C7C248 BL 0x1C16CF4
	0x03C7C24C MOVZ W8, 0x1
	0x03C7C250 STRB W8, [X21 + 0x9AC]
	0x03C7C254 MOVZ W1, 0x1

ISIL:
	001 Move [X31-64], D11
	002 Move [X31-56], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X19, X0
	009 Move X0, [X0+40]
	010 Compare X0, 0
	011 JumpIfEqual {85}
	012 Move X1, X31
	013 Call GUIStyle.get_margin, X0
	014 Move X8, [X19+32]
	015 Compare X8, 0
	016 JumpIfEqual {85}
	017 Move X20, X0
	018 Move X0, X8
	019 Move X1, X31
	020 Call GUIStyle.get_padding, X0
	021 Compare X0, 0
	022 JumpIfEqual {85}
	023 Move S2, [X19+8]
	024 Move S3, [X19+12]
	025 Move S0, [X19]
	026 Move S1, [X19+4]
	027 Move X1, X31
	028 Call RectOffset.Remove, X0, X1
	029 Compare X20, 0
	030 JumpIfEqual {85}
	031 Move X0, X20
	032 Move X1, X31
	033 Call RectOffset.Remove, X0, X1
	034 Move X0, [X19+40]
	035 Compare X0, 0
	036 JumpIfEqual {85}
	037 Move X1, X31
	038 Move V8, V0
	039 Move V9, V1
	040 Move V10, V2
	041 Call GUIStyle.get_fixedWidth, X0
	042 NotImplemented "Instruction FCMP not yet implemented."
	043 Move X0, [X19+40]
	044 Compare X0, 0
	045 JumpIfEqual {85}
	046 Move X1, X31
	047 Call GUIStyle.get_fixedWidth, X0
	048 Move V10, V0
	049 Move X0, X19
	050 Call SliderHandler.ThumbSize, X0
	051 Move X0, X19
	052 Move V11, V0
	053 Call SliderHandler.ValuesPerPixel, X0
	054 Move S1, [X19+24]
	055 Move S4, [X19+28]
	056 Move S2, [X19+16]
	057 Move S3, [X19+20]
	058 NotImplemented "Instruction FCMP not yet implemented."
	059 NotImplemented "Instruction FCSEL not yet implemented."
	060 Subtract S6, S6, S3
	061 NotImplemented "Instruction FCSEL not yet implemented."
	062 NotImplemented "Instruction FCMP not yet implemented."
	063 NotImplemented "Instruction FCSEL not yet implemented."
	064 NotImplemented "Instruction FCMP not yet implemented."
	065 NotImplemented "Instruction FCSEL not yet implemented."
	066 NotImplemented "Instruction FCMP not yet implemented."
	067 Multiply S3, S0, S3
	068 Add S3, S11, S3
	069 Add S2, S3, S2
	070 Multiply S3, S0, S3
	071 Subtract S3, S11, S3
	072 Subtract S1, S2, S1
	073 Multiply S0, S0, S1
	074 Add S1, S9, S0
	075 Move V0, V8
	076 Move X20, [X31+48]
	077 Move X19, [X31+56]
	078 Move X30, [X31+32]
	079 Move D9, [X31+16]
	080 Move D8, [X31+24]
	081 Move V2, V10
	082 Move D11, [X31+64]
	083 Move D10, [X31+72]
	084 Return X0
	085 Call 0x1C17F20

Method: UnityEngine.Rect HorizontalThumbRect()

Disassembly:
	0x03C7C258 MOV X0, X19
	0x03C7C25C BL 0x3C7B488
	0x03C7C260 CMP W20, 0x18
	0x03C7C264 B.HI 0x3C7C3F4
	0x03C7C268 ADRP X9, 0xFFFFFFFFFCF1B000
	0x03C7C26C MOV W8, W20
	0x03C7C270 ADD X9, X9, 0xE52
	0x03C7C274 ADR X10, 0x10
	0x03C7C278 LDRB W11, [X9, X8, LSL]
	0x03C7C27C ADD X10, X10, X11, 0x2, LSL
	0x03C7C280 BR X10
	0x03C7C284 LDR X0, [X19 + 0x10]
	0x03C7C288 CBZ X0, 0x3C7C50C
	0x03C7C28C LDP X20, X19, [X31 + 0x30]
	0x03C7C290 LDP X30, X21, [X31 + 0x20]
	0x03C7C294 ADD X31, X31, 0x40
	0x03C7C298 B 0x3C7C510
	0x03C7C29C LDR X0, [X19 + 0x10]
	0x03C7C2A0 CBZ X0, 0x3C7C50C
	0x03C7C2A4 LDP X20, X19, [X31 + 0x30]
	0x03C7C2A8 LDP X30, X21, [X31 + 0x20]
	0x03C7C2AC ADD X31, X31, 0x40
	0x03C7C2B0 B 0x3C7C730
	0x03C7C2B4 LDR X0, [X19 + 0x10]
	0x03C7C2B8 CBZ X0, 0x3C7C50C
	0x03C7C2BC LDP X20, X19, [X31 + 0x30]
	0x03C7C2C0 LDP X30, X21, [X31 + 0x20]
	0x03C7C2C4 ADD X31, X31, 0x40
	0x03C7C2C8 B 0x3C7C864
	0x03C7C2CC LDR X0, [X19 + 0x10]
	0x03C7C2D0 CBZ X0, 0x3C7C50C
	0x03C7C2D4 LDP X20, X19, [X31 + 0x30]
	0x03C7C2D8 LDP X30, X21, [X31 + 0x20]
	0x03C7C2DC ADD X31, X31, 0x40
	0x03C7C2E0 B 0x3C7C9A4
	0x03C7C2E4 LDR X0, [X19 + 0x10]
	0x03C7C2E8 CBZ X0, 0x3C7C50C
	0x03C7C2EC LDP X20, X19, [X31 + 0x30]
	0x03C7C2F0 LDP X30, X21, [X31 + 0x20]
	0x03C7C2F4 ADD X31, X31, 0x40
	0x03C7C2F8 B 0x3C7CAD8
	0x03C7C2FC LDR X0, [X19 + 0x10]
	0x03C7C300 CBZ X0, 0x3C7C50C
	0x03C7C304 LDP X20, X19, [X31 + 0x30]
	0x03C7C308 LDP X30, X21, [X31 + 0x20]
	0x03C7C30C ADD X31, X31, 0x40
	0x03C7C310 B 0x3C7CEA4
	0x03C7C314 LDR X0, [X19 + 0x10]
	0x03C7C318 CBZ X0, 0x3C7C50C
	0x03C7C31C LDP X20, X19, [X31 + 0x30]
	0x03C7C320 LDP X30, X21, [X31 + 0x20]
	0x03C7C324 ADD X31, X31, 0x40
	0x03C7C328 B 0x3C7CC24
	0x03C7C32C LDR X0, [X19 + 0x10]
	0x03C7C330 CBZ X0, 0x3C7C50C
	0x03C7C334 LDP X20, X19, [X31 + 0x30]
	0x03C7C338 LDP X30, X21, [X31 + 0x20]
	0x03C7C33C ADD X31, X31, 0x40
	0x03C7C340 B 0x3C7D070
	0x03C7C344 LDR X0, [X19 + 0x10]
	0x03C7C348 CBZ X0, 0x3C7C50C
	0x03C7C34C LDP X20, X19, [X31 + 0x30]
	0x03C7C350 LDP X30, X21, [X31 + 0x20]
	0x03C7C354 ADD X31, X31, 0x40
	0x03C7C358 B 0x3C7D17C
	0x03C7C35C MOV X0, X19
	0x03C7C360 LDP X20, X19, [X31 + 0x30]
	0x03C7C364 LDP X30, X21, [X31 + 0x20]
	0x03C7C368 ADD X31, X31, 0x40
	0x03C7C36C B 0x3C7D680
	0x03C7C370 MOV X0, X19
	0x03C7C374 LDP X20, X19, [X31 + 0x30]

ISIL:
	001 Move [X31-64], D11
	002 Move [X31-56], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X19, X0
	009 Move X0, [X0+40]
	010 Compare X0, 0
	011 JumpIfEqual {85}
	012 Move X1, X31
	013 Call GUIStyle.get_margin, X0
	014 Move X8, [X19+32]
	015 Compare X8, 0
	016 JumpIfEqual {85}
	017 Move X20, X0
	018 Move X0, X8
	019 Move X1, X31
	020 Call GUIStyle.get_padding, X0
	021 Compare X0, 0
	022 JumpIfEqual {85}
	023 Move S2, [X19+8]
	024 Move S3, [X19+12]
	025 Move S0, [X19]
	026 Move S1, [X19+4]
	027 Move X1, X31
	028 Call RectOffset.Remove, X0, X1
	029 Compare X20, 0
	030 JumpIfEqual {85}
	031 Move X0, X20
	032 Move X1, X31
	033 Call RectOffset.Remove, X0, X1
	034 Move X0, [X19+40]
	035 Compare X0, 0
	036 JumpIfEqual {85}
	037 Move X1, X31
	038 Move V9, V0
	039 Move V8, V1
	040 Move V10, V3
	041 Call GUIStyle.get_fixedHeight, X0
	042 NotImplemented "Instruction FCMP not yet implemented."
	043 Move X0, [X19+40]
	044 Compare X0, 0
	045 JumpIfEqual {85}
	046 Move X1, X31
	047 Call GUIStyle.get_fixedHeight, X0
	048 Move V10, V0
	049 Move X0, X19
	050 Call SliderHandler.ThumbSize, X0
	051 Move X0, X19
	052 Move V11, V0
	053 Call SliderHandler.ValuesPerPixel, X0
	054 Move S1, [X19+24]
	055 Move S4, [X19+28]
	056 Move S3, [X19+16]
	057 Move S2, [X19+20]
	058 NotImplemented "Instruction FCMP not yet implemented."
	059 NotImplemented "Instruction FCSEL not yet implemented."
	060 Subtract S6, S6, S2
	061 NotImplemented "Instruction FCSEL not yet implemented."
	062 NotImplemented "Instruction FCMP not yet implemented."
	063 NotImplemented "Instruction FCSEL not yet implemented."
	064 NotImplemented "Instruction FCMP not yet implemented."
	065 NotImplemented "Instruction FCSEL not yet implemented."
	066 NotImplemented "Instruction FCMP not yet implemented."
	067 Multiply S2, S0, S2
	068 Add S2, S11, S2
	069 Add S3, S2, S3
	070 Multiply S2, S0, S2
	071 Subtract S2, S11, S2
	072 Subtract S1, S3, S1
	073 Multiply S0, S0, S1
	074 Add S0, S9, S0
	075 Move V1, V8
	076 Move X20, [X31+48]
	077 Move X19, [X31+56]
	078 Move X30, [X31+32]
	079 Move D9, [X31+16]
	080 Move D8, [X31+24]
	081 Move V3, V10
	082 Move D11, [X31+64]
	083 Move D10, [X31+72]
	084 Return X0
	085 Call 0x1C17F20

Method: System.Single ClampedCurrentValue()

Disassembly:
	0x03C7BBE0 STP X24, X23, [X31 + 0xB0]
	0x03C7BBE4 STP X22, X21, [X31 + 0xC0]
	0x03C7BBE8 STP X20, X19, [X31 + 0xD0]
	0x03C7BBEC ADRP X19, 0x76B000
	0x03C7BBF0 ADRP X20, 0x4E5000
	0x03C7BBF4 LDRB W8, [X19 + 0x9AE]
	0x03C7BBF8 LDR X20, [X20 + 0x5B0]
	0x03C7BBFC TBNZ X8, 0x0, 0x3C7BDF4
	0x03C7BC00 ADRP X0, 0x4E5000
	0x03C7BC04 LDR X0, [X0 + 0x5B8]
	0x03C7BC08 BL 0x1C16CF4

ISIL:
	001 Move S0, [X0+24]
	002 Move S1, [X0+28]
	003 Move S2, [X0+16]
	004 Move S3, [X0+20]
	005 NotImplemented "Instruction FCMP not yet implemented."
	006 NotImplemented "Instruction FCSEL not yet implemented."
	007 NotImplemented "Instruction FCSEL not yet implemented."
	008 Subtract S0, S0, S3
	009 NotImplemented "Instruction FCMP not yet implemented."
	010 NotImplemented "Instruction FCSEL not yet implemented."
	011 NotImplemented "Instruction FCMP not yet implemented."
	012 NotImplemented "Instruction FCSEL not yet implemented."
	013 Return V0

Method: System.Single MousePosition()

Disassembly:
	0x03C7BF54 ADRP X12, 0x4E5000
	0x03C7BF58 ADRP X13, 0x4E5000
	0x03C7BF5C ADRP X14, 0x4E5000
	0x03C7BF60 ADRP X16, 0x4E5000
	0x03C7BF64 ADRP X0, 0x4E5000
	0x03C7BF68 ADRP X3, 0x4E5000
	0x03C7BF6C ADRP X19, 0x4E5000
	0x03C7BF70 ADRP X2, 0x4E5000
	0x03C7BF74 ADRP X30, 0x4E5000
	0x03C7BF78 ADRP X8, 0x4E5000
	0x03C7BF7C LDR X9, [X9 + 0x650]
	0x03C7BF80 LDR X10, [X10 + 0x660]
	0x03C7BF84 LDR X11, [X11 + 0x668]
	0x03C7BF88 LDR X12, [X12 + 0x658]
	0x03C7BF8C LDR X13, [X13 + 0x628]
	0x03C7BF90 LDR X14, [X14 + 0x680]
	0x03C7BF94 LDR X16, [X16 + 0x610]
	0x03C7BF98 LDR X0, [X0 + 0x600]
	0x03C7BF9C LDR X3, [X3 + 0x5D0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W20, [X0+56]
	005 Move X19, X0
	006 Move X0, X31
	007 Call Event.get_current
	008 Compare X0, 0
	009 JumpIfEqual {22}
	010 Move X1, X31
	011 Call Event.get_mousePosition, X0
	012 Compare W20, 0
	013 JumpIfEqual {16}
	014 Move V1, [X19]
	015 Subtract S0, S0, S1
	016 Move V0, [X19+4]
	017 Subtract S0, S1, S0
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Return V0
	022 Call 0x1C17F20

Method: System.Single ValuesPerPixel()

Disassembly:
	0x03C7BFA0 LDR X19, [X19 + 0x630]
	0x03C7BFA4 LDR X2, [X2 + 0x5E0]
	0x03C7BFA8 LDR X30, [X30 + 0x670]
	0x03C7BFAC LDR X8, [X8 + 0x698]
	0x03C7BFB0 MOV W24, W31
	0x03C7BFB4 MOVZ W15, 0x16
	0x03C7BFB8 MOVZ W17, 0x14
	0x03C7BFBC MOVZ W29, 0x15
	0x03C7BFC0 MOVZ W20, 0x5
	0x03C7BFC4 MOVZ W22, 0x4
	0x03C7BFC8 MOVZ W23, 0x1
	0x03C7BFCC MOVZ W27, 0x13
	0x03C7BFD0 MOVZ W6, 0x12
	0x03C7BFD4 MOVZ W4, 0x18
	0x03C7BFD8 MOVZ W5, 0x17
	0x03C7BFDC MOVZ W28, 0x7
	0x03C7BFE0 MOVZ W26, 0x6
	0x03C7BFE4 MOVZ W7, 0xE
	0x03C7BFE8 MOVZ W1, 0xF
	0x03C7BFEC B 0x3C7C08C
	0x03C7BFF0 ADRP X9, 0x4E5000
	0x03C7BFF4 ADRP X10, 0x4E5000
	0x03C7BFF8 ADRP X11, 0x4E5000
	0x03C7BFFC ADRP X12, 0x4E5000
	0x03C7C000 ADRP X13, 0x4E4000
	0x03C7C004 ADRP X14, 0x4E4000
	0x03C7C008 ADRP X16, 0x4E4000
	0x03C7C00C ADRP X0, 0x4E4000
	0x03C7C010 ADRP X3, 0x4E4000
	0x03C7C014 ADRP X30, 0x4CB000
	0x03C7C018 ADRP X8, 0x4C8000
	0x03C7C01C LDR X9, [X9 + 0x6A0]
	0x03C7C020 LDR X10, [X10 + 0x5E8]
	0x03C7C024 LDR X11, [X11 + 0x688]
	0x03C7C028 LDR X12, [X12 + 0x6B0]
	0x03C7C02C LDR X13, [X13 + 0x650]
	0x03C7C030 LDR X14, [X14 + 0x5D8]
	0x03C7C034 LDR X16, [X16 + 0x618]
	0x03C7C038 LDR X0, [X0 + 0x620]
	0x03C7C03C LDR X3, [X3 + 0x690]
	0x03C7C040 LDR X30, [X30 + 0x298]
	0x03C7C044 LDR X8, [X8 + 0xE98]

ISIL:
	001 Move [X31-48], D10
	002 Move [X31+8], D9
	003 Move [X31+16], D8
	004 Move [X31+24], X30
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move W8, [X0+56]
	008 Move S9, [X0+24]
	009 Move S8, [X0+28]
	010 Move X19, X0
	011 Compare W8, 0
	012 JumpIfEqual {23}
	013 Move X0, [X19+32]
	014 Compare X0, 0
	015 JumpIfEqual {51}
	016 Move V10, [X19+8]
	017 Move X1, X31
	018 Call GUIStyle.get_padding, X0
	019 Compare X0, 0
	020 JumpIfEqual {51}
	021 Move X1, X31
	022 Call RectOffset.get_horizontal, X0
	023 Move X0, [X19+32]
	024 Compare X0, 0
	025 JumpIfEqual {51}
	026 Move V10, [X19+12]
	027 Move X1, X31
	028 Call GUIStyle.get_padding, X0
	029 Compare X0, 0
	030 JumpIfEqual {51}
	031 Move X1, X31
	032 Call RectOffset.get_vertical, X0
	033 Move W20, W0
	034 Move X0, X19
	035 Call SliderHandler.ThumbSize, X0
	036 NotImplemented "Instruction SCVTF not yet implemented."
	037 Subtract S2, S8, S9
	038 NotImplemented "Instruction FCMP not yet implemented."
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X30, [X31+24]
	042 Move D9, [X31+8]
	043 Move D8, [X31+16]
	044 Move S3, 1
	045 Subtract S1, S10, S1
	046 Subtract S0, S1, S0
	047 NotImplemented "Instruction FCSEL not yet implemented."
	048 NotImplemented "Instruction FDIV not yet implemented."
	049 Move V10, [X31+48]
	050 Return V0
	051 Call 0x1C17F20

Method: System.Single ThumbSize()

Disassembly:
	0x03C7C378 LDP X30, X21, [X31 + 0x20]
	0x03C7C37C ADD X31, X31, 0x40
	0x03C7C380 B 0x3C7D834
	0x03C7C384 MOV X0, X19
	0x03C7C388 LDP X20, X19, [X31 + 0x30]
	0x03C7C38C LDP X30, X21, [X31 + 0x20]
	0x03C7C390 ADD X31, X31, 0x40
	0x03C7C394 B 0x3C7D5AC
	0x03C7C398 MOV X0, X19
	0x03C7C39C LDP X20, X19, [X31 + 0x30]
	0x03C7C3A0 LDP X30, X21, [X31 + 0x20]
	0x03C7C3A4 ADD X31, X31, 0x40
	0x03C7C3A8 B 0x3C7D5D0
	0x03C7C3AC LDR X0, [X19 + 0x10]
	0x03C7C3B0 CBZ X0, 0x3C7C50C
	0x03C7C3B4 LDP X20, X19, [X31 + 0x30]
	0x03C7C3B8 LDP X30, X21, [X31 + 0x20]
	0x03C7C3BC ADD X31, X31, 0x40
	0x03C7C3C0 B 0x3C7C61C
	0x03C7C3C4 LDR X0, [X19 + 0x10]
	0x03C7C3C8 CBZ X0, 0x3C7C50C
	0x03C7C3CC LDP X20, X19, [X31 + 0x30]
	0x03C7C3D0 LDP X30, X21, [X31 + 0x20]
	0x03C7C3D4 ADD X31, X31, 0x40
	0x03C7C3D8 B 0x3C7CF9C
	0x03C7C3DC LDR X0, [X19 + 0x10]
	0x03C7C3E0 CBZ X0, 0x3C7C50C
	0x03C7C3E4 LDP X20, X19, [X31 + 0x30]
	0x03C7C3E8 LDP X30, X21, [X31 + 0x20]
	0x03C7C3EC ADD X31, X31, 0x40
	0x03C7C3F0 B 0x3C7CFF8
	0x03C7C3F4 ADRP X8, 0x4E4000
	0x03C7C3F8 LDR X8, [X8 + 0x6B8]
	0x03C7C3FC MOVN X9, 0x0
	0x03C7C400 ADD X0, X31, 0x8
	0x03C7C404 MOV X1, X31
	0x03C7C408 LDR X8, [X8]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+40]
	005 Compare X0, 0
	006 JumpIfEqual {46}
	007 Move W8, [X19+56]
	008 Compare W8, 0
	009 JumpIfEqual {22}
	010 Move X1, X31
	011 Call GUIStyle.get_fixedWidth, X0
	012 Move X0, [X19+40]
	013 Compare X0, 0
	014 JumpIfEqual {46}
	015 Move X1, X31
	016 NotImplemented "Instruction FCMP not yet implemented."
	017 Call GUIStyle.get_padding, X0
	018 Compare X0, 0
	019 JumpIfEqual {46}
	020 Move X1, X31
	021 Call RectOffset.get_horizontal, X0
	022 Move X1, X31
	023 Call GUIStyle.get_fixedHeight, X0
	024 Move X0, [X19+40]
	025 Compare X0, 0
	026 JumpIfEqual {46}
	027 Move X1, X31
	028 NotImplemented "Instruction FCMP not yet implemented."
	029 Call GUIStyle.get_padding, X0
	030 Compare X0, 0
	031 JumpIfEqual {46}
	032 Move X1, X31
	033 Call RectOffset.get_vertical, X0
	034 NotImplemented "Instruction SCVTF not yet implemented."
	035 Move X30, [X31+16]
	036 Move X19, [X31+24]
	037 Return V0
	038 Move X30, [X31+16]
	039 Move X19, [X31+24]
	040 Call GUIStyle.get_fixedWidth, X0
	041 Return V0
	042 Move X30, [X31+16]
	043 Move X19, [X31+24]
	044 Call GUIStyle.get_fixedHeight, X0
	045 Return V0
	046 Call 0x1C17F20

Method: System.Single MaxValue()

Disassembly:
	0x03C7C120 ADRP X8, 0x4E4000
	0x03C7C124 LDR X8, [X8 + 0x640]
	0x03C7C128 MOV W1, W26
	0x03C7C12C LDR X0, [X8]
	0x03C7C130 BL 0x3C7D8F0
	0x03C7C134 ADRP X8, 0x4E4000

ISIL:
	001 Move S1, [X0+24]
	002 Move S0, [X0+28]
	003 Move V2, [X0+20]
	004 NotImplemented "Instruction FCMP not yet implemented."
	005 NotImplemented "Instruction FCSEL not yet implemented."
	006 Subtract S0, S0, S2
	007 Return V0

Method: System.Single MinValue()

Disassembly:
	0x03C7C110 LDR X8, [X8 + 0x638]
	0x03C7C114 MOV W1, W29
	0x03C7C118 LDR X0, [X8]
	0x03C7C11C BL 0x3C7D8F0

ISIL:
	001 Move S0, [X0+24]
	002 Move S1, [X0+28]
	003 NotImplemented "Instruction FCMP not yet implemented."
	004 NotImplemented "Instruction FCSEL not yet implemented."
	005 Return V0

