Type: UnityEngine.TextEditingUtilities

Method: System.Boolean get_hasSelection()

Disassembly:
	0x03C7C40C STR W20, [X31 + 0x18]
	0x03C7C410 STP X8, X9, [X31 + 0x8]
	0x03C7C414 BL 0x33B162C
	0x03C7C418 ADRP X8, 0x4E4000
	0x03C7C41C LDR X8, [X8 + 0x6C0]
	0x03C7C420 MOV X1, X0
	0x03C7C424 MOV X2, X31
	0x03C7C428 LDR X8, [X8]
	0x03C7C42C MOV X0, X8
	0x03C7C430 BL 0x321B938
	0x03C7C434 ADRP X8, 0x477000
	0x03C7C438 LDR X8, [X8 + 0xA28]
	0x03C7C43C MOV X19, X0
	0x03C7C440 LDR X8, [X8]
	0x03C7C444 LDR W9, [X8 + 0xE0]
	0x03C7C448 CBNZ W9, 0x3C7C454
	0x03C7C44C MOV X0, X8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, [X0+16]
	005 Compare X19, 0
	006 JumpIfEqual {20}
	007 Move W1, [X19+52]
	008 Move X0, X19
	009 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	010 Move W1, [X19+56]
	011 Move W20, W0
	012 Move X0, X19
	013 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 NotImplemented "Instruction CSET not yet implemented."
	018 Move X30, [X31+32]
	019 Return X0
	020 Call 0x1C17F20

Method: System.Void set_revealCursor(System.Boolean value)

Disassembly:
	0x03C7C488 LDR X0, [X19 + 0x10]
	0x03C7C48C CBZ X0, 0x3C7C50C
	0x03C7C490 LDP X20, X19, [X31 + 0x30]
	0x03C7C494 LDP X30, X21, [X31 + 0x20]
	0x03C7C498 ADD X31, X31, 0x40
	0x03C7C49C B 0x3C7D380
	0x03C7C4A0 LDR X0, [X19 + 0x10]
	0x03C7C4A4 CBZ X0, 0x3C7C50C
	0x03C7C4A8 LDP X20, X19, [X31 + 0x30]
	0x03C7C4AC LDP X30, X21, [X31 + 0x20]
	0x03C7C4B0 ADD X31, X31, 0x40
	0x03C7C4B4 B 0x3C7CD14
	0x03C7C4B8 LDR X0, [X19 + 0x10]
	0x03C7C4BC CBZ X0, 0x3C7C50C
	0x03C7C4C0 LDP X20, X19, [X31 + 0x30]
	0x03C7C4C4 LDP X30, X21, [X31 + 0x20]
	0x03C7C4C8 ADD X31, X31, 0x40
	0x03C7C4CC B 0x3C7CDDC

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+16]
	003 Compare X8, 0
	004 JumpIfEqual {19}
	005 Move W10, [X8+48]
	006 And W9, W1, 1
	007 NotImplemented "Instruction CMP not yet implemented."
	008 Move X10, [X8+80]
	009 Move [X8+48], W9
	010 Compare X10, 0
	011 JumpIfEqual {17}
	012 Move X2, [X10+24]
	013 Move X0, [X10+64]
	014 Move X1, [X10+40]
	015 Move X30, [X31+16]
	016 CallNoReturn X2
	017 Move X30, [X31+16]
	018 Return 
	019 Call 0x1C17F20

Method: System.Int32 get_cursorIndex()

Disassembly:
	0x03C7C500 LDP X30, X21, [X31 + 0x20]
	0x03C7C504 ADD X31, X31, 0x40
	0x03C7C508 B 0x3C7D73C
	0x03C7C50C BL 0x1C16F20
	0x03C7C510 STR X30, [X31 - 0x20]!
	0x03C7C514 STP X20, X19, [X31 + 0x10]
	0x03C7C518 LDR W1, [X0 + 0x38]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+16]
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move W1, [X0+52]
	006 Move X30, [X31+16]
	007 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	008 Return X0
	009 Call 0x1C17F20

Method: System.Void set_cursorIndex(System.Int32 value)

Disassembly:
	0x03C7C524 LDR W1, [X19 + 0x34]
	0x03C7C528 MOV W20, W0
	0x03C7C52C MOV X0, X19
	0x03C7C530 BL 0x3C823B4
	0x03C7C534 CMP W20, W0
	0x03C7C538 B.NE 0x3C7C584
	0x03C7C53C LDR W1, [X19 + 0x34]
	0x03C7C540 MOV X0, X19
	0x03C7C544 BL 0x3C823B4
	0x03C7C548 MOV W1, W0
	0x03C7C54C MOV X0, X19
	0x03C7C550 BL 0x3C7DEA8
	0x03C7C554 LDR W8, [X19 + 0x34]
	0x03C7C558 MOV W1, W0
	0x03C7C55C CMP W8, W0
	0x03C7C560 B.EQ 0x3C7C5AC
	0x03C7C564 LDR X8, [X19 + 0x40]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+16]
	003 Compare X8, 0
	004 JumpIfEqual {18}
	005 Move W9, [X8+52]
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Move X9, [X8+64]
	008 Move [X8+52], W1
	009 Compare X9, 0
	010 JumpIfEqual {16}
	011 Move X2, [X9+24]
	012 Move X0, [X9+64]
	013 Move X1, [X9+40]
	014 Move X30, [X31+16]
	015 CallNoReturn X2
	016 Move X30, [X31+16]
	017 Return 
	018 Call 0x1C17F20

Method: System.Int32 get_selectIndex()

Disassembly:
	0x03C7C594 MOV W20, W0
	0x03C7C598 MOV X0, X19
	0x03C7C59C BL 0x3C823B4
	0x03C7C5A0 CMP W20, W0
	0x03C7C5A4 B.LE 0x3C7C5D0
	0x03C7C5A8 LDR W1, [X19 + 0x34]
	0x03C7C5AC MOV X0, X19

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+16]
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move W1, [X0+56]
	006 Move X30, [X31+16]
	007 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	008 Return X0
	009 Call 0x1C17F20

Method: System.Void set_selectIndex(System.Int32 value)

Disassembly:
	0x03C7C5B8 CMP W8, W0
	0x03C7C5BC B.EQ 0x3C7C604
	0x03C7C5C0 LDR X8, [X19 + 0x48]
	0x03C7C5C4 STR W0, [X19 + 0x38]
	0x03C7C5C8 CBNZ X8, 0x3C7C5F4
	0x03C7C5CC B 0x3C7C604
	0x03C7C5D0 LDR W1, [X19 + 0x38]
	0x03C7C5D4 MOV X0, X19
	0x03C7C5D8 BL 0x3C823B4
	0x03C7C5DC LDR W8, [X19 + 0x34]
	0x03C7C5E0 CMP W8, W0
	0x03C7C5E4 B.EQ 0x3C7C604
	0x03C7C5E8 LDR X8, [X19 + 0x40]
	0x03C7C5EC STR W0, [X19 + 0x34]
	0x03C7C5F0 CBZ X8, 0x3C7C604
	0x03C7C5F4 LDR X9, [X8 + 0x18]
	0x03C7C5F8 LDR X0, [X8 + 0x40]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+16]
	003 Compare X8, 0
	004 JumpIfEqual {18}
	005 Move W9, [X8+56]
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Move X9, [X8+72]
	008 Move [X8+56], W1
	009 Compare X9, 0
	010 JumpIfEqual {16}
	011 Move X2, [X9+24]
	012 Move X0, [X9+64]
	013 Move X1, [X9+40]
	014 Move X30, [X31+16]
	015 CallNoReturn X2
	016 Move X30, [X31+16]
	017 Return 
	018 Call 0x1C17F20

Method: System.String get_text()

Disassembly:
	0x03C7C628 MOVN W8, 0x0
	0x03C7C62C MOV X19, X0

ISIL:
	001 Move X0, [X0+40]
	002 Return X0

Method: System.Void set_text(System.String value)

Disassembly:
	0x03C7C630 STRB W31, [X0 + 0x18]
	0x03C7C634 STR W8, [X0 + 0x14]
	0x03C7C638 BL 0x3C823B4
	0x03C7C63C LDR W1, [X19 + 0x34]
	0x03C7C640 MOV W20, W0
	0x03C7C644 MOV X0, X19
	0x03C7C648 BL 0x3C823B4
	0x03C7C64C CMP W20, W0
	0x03C7C650 B.NE 0x3C7C69C
	0x03C7C654 LDR W1, [X19 + 0x34]
	0x03C7C658 MOV X0, X19
	0x03C7C65C BL 0x3C823B4
	0x03C7C660 MOV W1, W0
	0x03C7C664 MOV X0, X19
	0x03C7C668 BL 0x3C7DDC8
	0x03C7C66C LDR W8, [X19 + 0x34]
	0x03C7C670 MOV W1, W0
	0x03C7C674 CMP W8, W0
	0x03C7C678 B.EQ 0x3C7C6EC
	0x03C7C67C LDR X8, [X19 + 0x40]
	0x03C7C680 STR W1, [X19 + 0x34]
	0x03C7C684 CBZ X8, 0x3C7C6EC
	0x03C7C688 LDR X9, [X8 + 0x18]
	0x03C7C68C LDR X0, [X8 + 0x40]
	0x03C7C690 LDR X1, [X8 + 0x28]
	0x03C7C694 BLR X9
	0x03C7C698 B 0x3C7C6E8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x76B000
	006 Move W8, [X21+2470]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x47A000
	014 Move X0, [X0+632]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2470], W8
	018 Move X1, [X19+40]
	019 Move X0, X20
	020 Move X2, X31
	021 Call String.op_Equality, X0, X1
	022 Move TEMP, X0
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {34}
	026 Compare X20, 0
	027 JumpIfNotEqual {33}
	028 Move X8, 0x47A000
	029 Move X8, [X8+632]
	030 Move X8, [X8]
	031 Move X8, [X8+184]
	032 Move X20, [X8]
	033 Move [X19+40], X20
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X30, [X31+32]
	037 Move X21, [X31+40]
	038 Return 

Method: System.Void .ctor(UnityEngine.TextSelectingUtilities selectingUtilities, UnityEngine.TextCore.Text.TextHandle textHandle, System.String text)

Disassembly:
	0x03C7C69C LDR W1, [X19 + 0x38]
	0x03C7C6A0 MOV X0, X19
	0x03C7C6A4 BL 0x3C823B4
	0x03C7C6A8 LDR W1, [X19 + 0x34]
	0x03C7C6AC MOV W20, W0
	0x03C7C6B0 MOV X0, X19
	0x03C7C6B4 BL 0x3C823B4
	0x03C7C6B8 CMP W20, W0
	0x03C7C6BC B.LE 0x3C7C6E8
	0x03C7C6C0 LDR W1, [X19 + 0x38]
	0x03C7C6C4 MOV X0, X19
	0x03C7C6C8 BL 0x3C823B4
	0x03C7C6CC LDR W8, [X19 + 0x34]
	0x03C7C6D0 CMP W8, W0
	0x03C7C6D4 B.EQ 0x3C7C724
	0x03C7C6D8 LDR X8, [X19 + 0x40]
	0x03C7C6DC STR W0, [X19 + 0x34]
	0x03C7C6E0 CBNZ X8, 0x3C7C70C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, X1
	007 Move TEMP, 0
	008 Not TEMP
	009 Move W8, TEMP
	010 Move X1, X31
	011 Move X19, X3
	012 Move X20, X2
	013 Move X22, X0
	014 Move [X0+32], W8
	015 Move [X0+38], W31
	016 Call Object..ctor, X0
	017 Move [X22+16], X21
	018 Move [X22+24], X20
	019 Move [X22+40], X19
	020 Move X20, [X31+32]
	021 Move X19, [X31+40]
	022 Move X22, [X31+16]
	023 Move X21, [X31+24]
	024 Move X30, [X31+48]
	025 Return 

Method: System.Boolean UpdateImeState()

Disassembly:
	0x03C7C6E4 B 0x3C7C724
	0x03C7C6E8 LDR W1, [X19 + 0x34]
	0x03C7C6EC MOV X0, X19
	0x03C7C6F0 BL 0x3C823B4
	0x03C7C6F4 LDR W8, [X19 + 0x38]
	0x03C7C6F8 CMP W8, W0
	0x03C7C6FC B.EQ 0x3C7C724
	0x03C7C700 LDR X8, [X19 + 0x48]
	0x03C7C704 STR W0, [X19 + 0x38]
	0x03C7C708 CBZ X8, 0x3C7C724
	0x03C7C70C LDR X2, [X8 + 0x18]
	0x03C7C710 LDR X0, [X8 + 0x40]
	0x03C7C714 LDR X1, [X8 + 0x28]
	0x03C7C718 LDP X20, X19, [X31 + 0x10]
	0x03C7C71C LDR X30, [X31], #0x20
	0x03C7C720 BR X2
	0x03C7C724 LDP X20, X19, [X31 + 0x10]
	0x03C7C728 LDR X30, [X31], #0x20
	0x03C7C72C RET
	0x03C7C730 STR X30, [X31 - 0x20]!
	0x03C7C734 STP X20, X19, [X31 + 0x10]
	0x03C7C738 LDR W1, [X0 + 0x38]
	0x03C7C73C MOV X19, X0
	0x03C7C740 BL 0x3C823B4
	0x03C7C744 LDR W1, [X19 + 0x34]
	0x03C7C748 MOV W20, W0
	0x03C7C74C MOV X0, X19
	0x03C7C750 BL 0x3C823B4
	0x03C7C754 CMP W20, W0
	0x03C7C758 B.GE 0x3C7C784
	0x03C7C75C LDR W1, [X19 + 0x34]
	0x03C7C760 MOV X0, X19
	0x03C7C764 BL 0x3C823B4
	0x03C7C768 LDR W8, [X19 + 0x38]
	0x03C7C76C CMP W8, W0
	0x03C7C770 B.EQ 0x3C7C7B8
	0x03C7C774 LDR X8, [X19 + 0x48]
	0x03C7C778 STR W0, [X19 + 0x38]
	0x03C7C77C CBNZ X8, 0x3C7C7A8
	0x03C7C780 B 0x3C7C7B8
	0x03C7C784 LDR W1, [X19 + 0x38]
	0x03C7C788 MOV X0, X19
	0x03C7C78C BL 0x3C823B4
	0x03C7C790 LDR W8, [X19 + 0x34]
	0x03C7C794 CMP W8, W0
	0x03C7C798 B.EQ 0x3C7C7B8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x76B000
	006 Move X21, 0x4A4000
	007 Move W8, [X20+2471]
	008 Move X21, [X21+1480]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x4A4000
	015 Move X0, [X0+1480]
	016 Call 0x1C17CF4
	017 Move X0, 0x47A000
	018 Move X0, [X0+632]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+2471], W8
	022 Move X0, [X21]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X0, X31
	028 Call GUIUtility.get_compositionString
	029 Compare X0, 0
	030 JumpIfEqual {54}
	031 Move W20, [X0+16]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move W8, [X19+36]
	034 Move W21, 1
	035 Compare W8, 0
	036 JumpIfNotEqual {46}
	037 Move [X19+37], W21
	038 Move X8, 0x47A000
	039 Move X8, [X8+632]
	040 Move X0, X19
	041 Move X8, [X8]
	042 Move X8, [X8+184]
	043 Move X1, [X8]
	044 Call TextEditingUtilities.ReplaceSelection, X0, X1
	045 Move W21, W31
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move [X19+36], W21
	048 Move X20, [X31+16]
	049 Move X19, [X31+24]
	050 NotImplemented "Instruction CSET not yet implemented."
	051 Move X30, [X31+32]
	052 Move X21, [X31+40]
	053 Return X0
	054 Call 0x1C17F20

Method: System.Boolean ShouldUpdateImeWindowPosition()

Disassembly:
	0x03C7C824 LDR X0, [X8 + 0x40]
	0x03C7C828 LDR X1, [X8 + 0x28]

ISIL:
	001 Move W0, [X0+37]
	002 Return X0

Method: System.Void SetImeWindowPosition(UnityEngine.Vector2 worldPosition)

Disassembly:
	0x03C7C82C BLR X9
	0x03C7C830 LDR W20, [X19 + 0x34]
	0x03C7C834 MOV X0, X19
	0x03C7C838 MOV W1, W20
	0x03C7C83C BL 0x3C823B4
	0x03C7C840 CMP W0, 0x0
	0x03C7C844 B.GT 0x3C7C854
	0x03C7C848 MOVN W8, 0x0
	0x03C7C84C STRB W31, [X19 + 0x18]
	0x03C7C850 STR W8, [X19 + 0x14]
	0x03C7C854 LDP X20, X19, [X31 + 0x10]
	0x03C7C858 LDR X30, [X31], #0x20
	0x03C7C85C RET
	0x03C7C860 BL 0x1C16F20
	0x03C7C864 STR X30, [X31 - 0x20]!
	0x03C7C868 STP X20, X19, [X31 + 0x10]
	0x03C7C86C LDR W1, [X0 + 0x38]
	0x03C7C870 MOV X19, X0
	0x03C7C874 BL 0x3C823B4
	0x03C7C878 LDR W1, [X19 + 0x34]
	0x03C7C87C MOV W20, W0
	0x03C7C880 MOV X0, X19
	0x03C7C884 BL 0x3C823B4
	0x03C7C888 CMP W20, W0
	0x03C7C88C B.LE 0x3C7C8B8
	0x03C7C890 LDR W1, [X19 + 0x34]
	0x03C7C894 MOV X0, X19
	0x03C7C898 BL 0x3C823B4
	0x03C7C89C LDR W8, [X19 + 0x38]
	0x03C7C8A0 CMP W8, W0
	0x03C7C8A4 B.EQ 0x3C7C8EC
	0x03C7C8A8 LDR X8, [X19 + 0x48]
	0x03C7C8AC STR W0, [X19 + 0x38]
	0x03C7C8B0 CBNZ X8, 0x3C7C8DC
	0x03C7C8B4 B 0x3C7C8EC
	0x03C7C8B8 LDR W1, [X19 + 0x38]
	0x03C7C8BC MOV X0, X19
	0x03C7C8C0 BL 0x3C823B4
	0x03C7C8C4 LDR W8, [X19 + 0x34]
	0x03C7C8C8 CMP W8, W0
	0x03C7C8CC B.EQ 0x3C7C8EC

ISIL:
	001 Move [X31-64], D11
	002 Move [X31-56], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X19, 0x76B000
	009 Move W8, [X19+2472]
	010 Move V9, V1
	011 Move V8, V0
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x4A4000
	018 Move X0, [X0+1480]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X19+2472], W8
	022 Move X19, [X20+24]
	023 Move X0, X20
	024 Call TextEditingUtilities.get_cursorIndex, X0
	025 Compare X19, 0
	026 JumpIfEqual {53}
	027 Move X20, 0x4A4000
	028 Move X20, [X20+1480]
	029 Move W1, W0
	030 Move W2, 1
	031 Move X0, X19
	032 Move X3, X31
	033 Call TextHandle.GetCursorPositionFromStringIndexUsingCharacterHeight, X0, X1, X2
	034 Move X0, [X20]
	035 Move V10, V0
	036 Move V11, V1
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {41}
	040 Call 0x1C17DFC
	041 Add S1, S9, S11
	042 Add S0, S8, S10
	043 Move X20, [X31+48]
	044 Move X19, [X31+56]
	045 Move X30, [X31+32]
	046 Move D9, [X31+16]
	047 Move D8, [X31+24]
	048 Move X0, X31
	049 Move D11, [X31+64]
	050 Move D10, [X31+72]
	051 Call GUIUtility.set_compositionCursorPos, X0
	052 Return 
	053 Call 0x1C17F20

Method: System.String GeneratePreviewString(System.Boolean richText)

Disassembly:
	0x03C7C8D0 LDR X8, [X19 + 0x40]
	0x03C7C8D4 STR W0, [X19 + 0x34]
	0x03C7C8D8 CBZ X8, 0x3C7C8EC
	0x03C7C8DC LDR X9, [X8 + 0x18]
	0x03C7C8E0 LDR X0, [X8 + 0x40]
	0x03C7C8E4 LDR X1, [X8 + 0x28]
	0x03C7C8E8 BLR X9
	0x03C7C8EC LDR W1, [X19 + 0x34]
	0x03C7C8F0 LDR X20, [X19 + 0x28]
	0x03C7C8F4 MOV X0, X19
	0x03C7C8F8 BL 0x3C823B4
	0x03C7C8FC CBZ X20, 0x3C7C9A0
	0x03C7C900 MOV W1, W0
	0x03C7C904 MOV X0, X20
	0x03C7C908 MOV X2, X31
	0x03C7C90C BL 0x3CCA2F4
	0x03C7C910 LDR W8, [X19 + 0x38]
	0x03C7C914 MOV W20, W0
	0x03C7C918 CMP W8, W0
	0x03C7C91C B.EQ 0x3C7C93C
	0x03C7C920 LDR X8, [X19 + 0x48]
	0x03C7C924 STR W20, [X19 + 0x38]
	0x03C7C928 CBZ X8, 0x3C7C93C
	0x03C7C92C LDR X9, [X8 + 0x18]
	0x03C7C930 LDR X0, [X8 + 0x40]
	0x03C7C934 LDR X1, [X8 + 0x28]
	0x03C7C938 BLR X9
	0x03C7C93C LDR W8, [X19 + 0x34]
	0x03C7C940 CMP W8, W20
	0x03C7C944 B.EQ 0x3C7C968
	0x03C7C948 LDR X8, [X19 + 0x40]
	0x03C7C94C STR W20, [X19 + 0x34]
	0x03C7C950 CBZ X8, 0x3C7C968
	0x03C7C954 LDR X9, [X8 + 0x18]
	0x03C7C958 LDR X0, [X8 + 0x40]
	0x03C7C95C LDR X1, [X8 + 0x28]
	0x03C7C960 BLR X9
	0x03C7C964 LDR W20, [X19 + 0x34]
	0x03C7C968 MOV X0, X19
	0x03C7C96C MOV W1, W20
	0x03C7C970 BL 0x3C823B4
	0x03C7C974 MOV W20, W0
	0x03C7C978 MOV X0, X19
	0x03C7C97C BL 0x3C822F8
	0x03C7C980 CMP W20, W0
	0x03C7C984 B.NE 0x3C7C994
	0x03C7C988 MOVN W8, 0x0
	0x03C7C98C STRB W31, [X19 + 0x18]
	0x03C7C990 STR W8, [X19 + 0x14]
	0x03C7C994 LDP X20, X19, [X31 + 0x10]
	0x03C7C998 LDR X30, [X31], #0x20
	0x03C7C99C RET
	0x03C7C9A0 BL 0x1C16F20
	0x03C7C9A4 STR X30, [X31 - 0x30]!
	0x03C7C9A8 STP X22, X21, [X31 + 0x10]
	0x03C7C9AC STP X20, X19, [X31 + 0x20]
	0x03C7C9B0 LDR W1, [X0 + 0x38]
	0x03C7C9B4 MOV X19, X0
	0x03C7C9B8 BL 0x3C823B4
	0x03C7C9BC LDR W1, [X19 + 0x34]
	0x03C7C9C0 MOV W20, W0
	0x03C7C9C4 MOV X0, X19
	0x03C7C9C8 BL 0x3C823B4
	0x03C7C9CC CMP W20, W0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x76B000
	007 Move X21, 0x4A4000
	008 Move W8, [X22+2473]
	009 Move X21, [X21+1480]
	010 Move W19, W1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {27}
	016 Move X0, 0x4A4000
	017 Move X0, [X0+1480]
	018 Call 0x1C17CF4
	019 Move X0, 0x4DE000
	020 Move X0, [X0+56]
	021 Call 0x1C17CF4
	022 Move X0, 0x4DE000
	023 Move X0, [X0+64]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X22+2473], W8
	027 Move X0, X20
	028 Call TextEditingUtilities.RestoreCursorState, X0
	029 Move X0, [X21]
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move X0, X31
	035 Call GUIUtility.get_compositionString
	036 Move W8, [X20+36]
	037 Move X21, [X20+40]
	038 Compare W8, 0
	039 JumpIfEqual {60}
	040 Move X22, X0
	041 Move X0, X20
	042 Call TextEditingUtilities.get_cursorIndex, X0
	043 Move W20, W0
	044 Move TEMP, X19
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfNotEqual {67}
	048 Move X8, 0x4DE000
	049 Move X9, 0x4DE000
	050 Move X8, [X8+56]
	051 Move X9, [X9+64]
	052 Move X1, X22
	053 Move X3, X31
	054 Move X0, [X8]
	055 Move X2, [X9]
	056 Call String.Concat, X0, X1, X2
	057 Compare X21, 0
	058 JumpIfEqual {80}
	059 Move X22, X0
	060 Move X0, X21
	061 Move X20, [X31+32]
	062 Move X19, [X31+40]
	063 Move X22, [X31+16]
	064 Move X21, [X31+24]
	065 Move X30, [X31+48]
	066 Return X0
	067 Compare X21, 0
	068 JumpIfEqual {80}
	069 Move X0, X21
	070 Move W1, W20
	071 Move X2, X22
	072 Move X20, [X31+32]
	073 Move X19, [X31+40]
	074 Move X22, [X31+16]
	075 Move X21, [X31+24]
	076 Move X3, X31
	077 Move X30, [X31+48]
	078 Call String.Insert, X0, X1, X2
	079 Return X0
	080 Call 0x1C17F20

Method: System.Void EnableCursorPreviewState()

Disassembly:
	0x03C7CA10 B.CS 0x3C7CAD0
	0x03C7CA14 SMADDL X8, X8, X21, X0
	0x03C7CA18 LDRH W8, [X8 + 0x20]
	0x03C7CA1C MOV W22, W20
	0x03C7CA20 CMP W8, 0xA
	0x03C7CA24 B.NE 0x3C7C9F0
	0x03C7CA28 LDR W8, [X19 + 0x34]
	0x03C7CA2C CMP W8, W20
	0x03C7CA30 B.EQ 0x3C7CA50
	0x03C7CA34 LDR X8, [X19 + 0x40]
	0x03C7CA38 STR W20, [X19 + 0x34]
	0x03C7CA3C CBZ X8, 0x3C7CA50
	0x03C7CA40 LDR X9, [X8 + 0x18]
	0x03C7CA44 LDR X0, [X8 + 0x40]
	0x03C7CA48 LDR X1, [X8 + 0x28]
	0x03C7CA4C BLR X9
	0x03C7CA50 LDR W8, [X19 + 0x38]
	0x03C7CA54 CMP W8, W20
	0x03C7CA58 B.EQ 0x3C7CAC0
	0x03C7CA5C LDR X8, [X19 + 0x48]
	0x03C7CA60 STR W20, [X19 + 0x38]
	0x03C7CA64 CBNZ X8, 0x3C7CAA4
	0x03C7CA68 B 0x3C7CAC0
	0x03C7CA6C LDR W8, [X19 + 0x34]
	0x03C7CA70 CBZ W8, 0x3C7CA90
	0x03C7CA74 LDR X8, [X19 + 0x40]
	0x03C7CA78 STR W31, [X19 + 0x34]
	0x03C7CA7C CBZ X8, 0x3C7CA90
	0x03C7CA80 LDR X9, [X8 + 0x18]
	0x03C7CA84 LDR X0, [X8 + 0x40]
	0x03C7CA88 LDR X1, [X8 + 0x28]
	0x03C7CA8C BLR X9
	0x03C7CA90 LDR W8, [X19 + 0x38]
	0x03C7CA94 CBZ W8, 0x3C7CAC0
	0x03C7CA98 LDR X8, [X19 + 0x48]
	0x03C7CA9C STR W31, [X19 + 0x38]
	0x03C7CAA0 CBZ X8, 0x3C7CAC0
	0x03C7CAA4 LDR X2, [X8 + 0x18]
	0x03C7CAA8 LDR X0, [X8 + 0x40]
	0x03C7CAAC LDR X1, [X8 + 0x28]
	0x03C7CAB0 LDP X20, X19, [X31 + 0x20]
	0x03C7CAB4 LDP X22, X21, [X31 + 0x10]
	0x03C7CAB8 LDR X30, [X31], #0x30

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x76B000
	005 Move W8, [X20+2474]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x4A4000
	012 Move X0, [X0+1480]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2474], W8
	016 Move W8, [X19+32]
	017 Add W31, W8, 1
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Return 
	022 Move X0, [X19+16]
	023 Compare X0, 0
	024 JumpIfEqual {52}
	025 Move W1, [X0+52]
	026 Call TextSelectingUtilities.EnsureValidCodePointIndex, X0, X1
	027 Move [X19+32], W0
	028 Move X8, 0x4A4000
	029 Move X8, [X8+1480]
	030 Move W20, W0
	031 Move X0, [X8]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1C17DFC
	036 Move X0, X31
	037 Call GUIUtility.get_compositionString
	038 Compare X0, 0
	039 JumpIfEqual {52}
	040 Move W8, [X0+16]
	041 Move X0, X19
	042 Add W20, W8, W20
	043 Move W1, W20
	044 Call TextEditingUtilities.set_selectIndex, X0, X1
	045 Move X0, X19
	046 Move W1, W20
	047 Move X20, [X31+16]
	048 Move X19, [X31+24]
	049 Move X30, [X31+32]
	050 Call TextEditingUtilities.set_cursorIndex, X0, X1
	051 Return 
	052 Call 0x1C17F20

Method: System.Void RestoreCursorState()

Disassembly:
	0x03C7C9D0 MOVZ W8, 0x34
	0x03C7C9D4 MOVZ W9, 0x38
	0x03C7C9D8 CSEL X8, X9, X8, LT
	0x03C7C9DC LDR W1, [X19, X8, LSL]
	0x03C7C9E0 MOV X0, X19
	0x03C7C9E4 BL 0x3C823B4
	0x03C7C9E8 ADD W22, W0, 0x1
	0x03C7C9EC MOVZ W21, 0x188
	0x03C7C9F0 SUBS W20, W22, 0x1
	0x03C7C9F4 B.EQ 0x3C7CA6C
	0x03C7C9F8 MOV X0, X19
	0x03C7C9FC BL 0x3C8238C
	0x03C7CA00 CBZ X0, 0x3C7CAD4
	0x03C7CA04 LDR W9, [X0 + 0x18]
	0x03C7CA08 SUB W8, W22, 0x2
	0x03C7CA0C CMP W8, W9

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W20, [X0+32]
	005 Add W31, W20, 1
	006 Move W1, W20
	007 Move X19, X0
	008 Call TextEditingUtilities.set_selectIndex, X0, X1
	009 Move X0, X19
	010 Move W1, W20
	011 Call TextEditingUtilities.set_cursorIndex, X0, X1
	012 Move TEMP, 0
	013 Not TEMP
	014 Move W8, TEMP
	015 Move [X19+32], W8
	016 Move X20, [X31+16]
	017 Move X19, [X31+24]
	018 Move X30, [X31+32]
	019 Return 

Method: System.Boolean HandleKeyEvent(UnityEngine.Event e)

Disassembly:
	0x03C7CABC BR X2
	0x03C7CAC0 LDP X20, X19, [X31 + 0x20]
	0x03C7CAC4 LDP X22, X21, [X31 + 0x10]
	0x03C7CAC8 LDR X30, [X31], #0x30
	0x03C7CACC RET
	0x03C7CAD0 BL 0x1C16F28
	0x03C7CAD4 BL 0x1C16F20
	0x03C7CAD8 STR X30, [X31 - 0x30]!
	0x03C7CADC STP X22, X21, [X31 + 0x10]
	0x03C7CAE0 STP X20, X19, [X31 + 0x20]
	0x03C7CAE4 LDR W1, [X0 + 0x38]
	0x03C7CAE8 MOV X19, X0
	0x03C7CAEC BL 0x3C823B4
	0x03C7CAF0 LDR W1, [X19 + 0x34]
	0x03C7CAF4 MOV W20, W0
	0x03C7CAF8 MOV X0, X19
	0x03C7CAFC BL 0x3C823B4
	0x03C7CB00 CMP W20, W0
	0x03C7CB04 MOVZ W8, 0x34
	0x03C7CB08 MOVZ W9, 0x38
	0x03C7CB0C CSEL X8, X9, X8, GT
	0x03C7CB10 LDR W1, [X19, X8, LSL]
	0x03C7CB14 MOV X0, X19
	0x03C7CB18 BL 0x3C823B4
	0x03C7CB1C MOV W20, W0
	0x03C7CB20 MOV X0, X19
	0x03C7CB24 BL 0x3C822F8
	0x03C7CB28 MOV W21, W0
	0x03C7CB2C CMP W20, W0
	0x03C7CB30 B.GE 0x3C7CB6C
	0x03C7CB34 MOVZ W22, 0x188
	0x03C7CB38 MOV X0, X19
	0x03C7CB3C BL 0x3C8238C
	0x03C7CB40 CBZ X0, 0x3C7CC1C
	0x03C7CB44 LDR W8, [X0 + 0x18]
	0x03C7CB48 CMP W20, W8
	0x03C7CB4C B.CS 0x3C7CC20
	0x03C7CB50 SMADDL X8, X20, X22, X0
	0x03C7CB54 LDRH W8, [X8 + 0x20]
	0x03C7CB58 CMP W8, 0xA
	0x03C7CB5C B.EQ 0x3C7CBB0
	0x03C7CB60 ADD W20, W20, 0x1
	0x03C7CB64 CMP W21, W20
	0x03C7CB68 B.NE 0x3C7CB38
	0x03C7CB6C LDR W8, [X19 + 0x34]
	0x03C7CB70 CMP W8, W21
	0x03C7CB74 B.EQ 0x3C7CB94
	0x03C7CB78 LDR X8, [X19 + 0x40]
	0x03C7CB7C STR W21, [X19 + 0x34]
	0x03C7CB80 CBZ X8, 0x3C7CB94
	0x03C7CB84 LDR X9, [X8 + 0x18]
	0x03C7CB88 LDR X0, [X8 + 0x40]
	0x03C7CB8C LDR X1, [X8 + 0x28]
	0x03C7CB90 BLR X9
	0x03C7CB94 LDR W8, [X19 + 0x38]
	0x03C7CB98 CMP W8, W21
	0x03C7CB9C B.EQ 0x3C7CC0C
	0x03C7CBA0 LDR X8, [X19 + 0x48]
	0x03C7CBA4 STR W21, [X19 + 0x38]
	0x03C7CBA8 CBNZ X8, 0x3C7CBF0
	0x03C7CBAC B 0x3C7CC0C
	0x03C7CBB0 LDR W8, [X19 + 0x34]
	0x03C7CBB4 CMP W8, W20
	0x03C7CBB8 B.EQ 0x3C7CBD8
	0x03C7CBBC LDR X8, [X19 + 0x40]
	0x03C7CBC0 STR W20, [X19 + 0x34]
	0x03C7CBC4 CBZ X8, 0x3C7CBD8
	0x03C7CBC8 LDR X9, [X8 + 0x18]
	0x03C7CBCC LDR X0, [X8 + 0x40]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x76B000
	008 Move W8, [X21+2475]
	009 Move X19, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0x4E5000
	016 Move X0, [X0+1440]
	017 Call 0x1C17CF4
	018 Move X0, 0x4E5000
	019 Move X0, [X0+1448]
	020 Call 0x1C17CF4
	021 Move X0, 0x4E5000
	022 Move X0, [X0+1456]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+2475], W8
	026 Move X0, X20
	027 Call TextEditingUtilities.RestoreCursorState, X0
	028 Call TextEditingUtilities.InitKeyActions, X0
	029 Compare X19, 0
	030 JumpIfEqual {84}
	031 Move X23, 0x4E5000
	032 Move X23, [X23+1456]
	033 Move X0, X19
	034 Move X1, X31
	035 Call Event.get_modifiers, X0
	036 Move W21, W0
	037 Move X0, X19
	038 Move X1, X31
	039 Call Event.get_modifiers, X0
	040 And W1, W0, 0xFFFFFFDF
	041 Move X0, X19
	042 Move X2, X31
	043 Call Event.set_modifiers, X0, X1
	044 Move X8, [X23]
	045 Move X8, [X8+184]
	046 Move X0, [X8]
	047 Compare X0, 0
	048 JumpIfEqual {84}
	049 Move X8, 0x4E5000
	050 Move X8, [X8+1440]
	051 Move X1, X19
	052 Move X2, [X8]
	053 Call Dictionary`2<Object, Int32Enum>.ContainsKey, X0, X1
	054 Move W22, W0
	055 Move TEMP, X0
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfNotEqual {72}
	059 Move X8, [X23]
	060 Move X8, [X8+184]
	061 Move X0, [X8]
	062 Compare X0, 0
	063 JumpIfEqual {84}
	064 Move X8, 0x4E5000
	065 Move X8, [X8+1448]
	066 Move X1, X19
	067 Move X2, [X8]
	068 Call Dictionary`2<Object, Int32Enum>.get_Item, X0, X1
	069 Move W1, W0
	070 Move X0, X20
	071 Call TextEditingUtilities.PerformOperation, X0, X1
	072 Move X0, X19
	073 Move W1, W21
	074 Move X2, X31
	075 Call Event.set_modifiers, X0, X1
	076 And W0, W22, 1
	077 Move X20, [X31+32]
	078 Move X19, [X31+40]
	079 Move X22, [X31+16]
	080 Move X21, [X31+24]
	081 Move X30, [X31+48]
	082 Move X23, [X31+56]
	083 Return X0
	084 Call 0x1C17F20

Method: System.Void PerformOperation(UnityEngine.TextEditOp operation)

Disassembly:
	0x03C7D208 BL 0x3C823B4
	0x03C7D20C CBZ X20, 0x3C7D2C8
	0x03C7D210 SUB W2, W0, 0x2
	0x03C7D214 MOVZ W1, 0xA
	0x03C7D218 MOV X0, X20
	0x03C7D21C MOV X3, X31
	0x03C7D220 BL 0x3CCAF90
	0x03C7D224 LDR W8, [X19 + 0x34]
	0x03C7D228 ADD W20, W0, 0x1
	0x03C7D22C CMP W8, W20
	0x03C7D230 B.EQ 0x3C7D250
	0x03C7D234 LDR X8, [X19 + 0x40]
	0x03C7D238 STR W20, [X19 + 0x34]
	0x03C7D23C CBZ X8, 0x3C7D250
	0x03C7D240 LDR X9, [X8 + 0x18]
	0x03C7D244 LDR X0, [X8 + 0x40]
	0x03C7D248 LDR X1, [X8 + 0x28]
	0x03C7D24C BLR X9
	0x03C7D250 LDR W8, [X19 + 0x38]
	0x03C7D254 CMP W8, W20
	0x03C7D258 B.EQ 0x3C7D2BC
	0x03C7D25C LDR X8, [X19 + 0x48]
	0x03C7D260 STR W20, [X19 + 0x38]
	0x03C7D264 CBNZ X8, 0x3C7D2A4
	0x03C7D268 B 0x3C7D2BC
	0x03C7D26C LDR W8, [X19 + 0x34]
	0x03C7D270 CBZ W8, 0x3C7D290
	0x03C7D274 LDR X8, [X19 + 0x40]
	0x03C7D278 STR W31, [X19 + 0x34]
	0x03C7D27C CBZ X8, 0x3C7D290
	0x03C7D280 LDR X9, [X8 + 0x18]
	0x03C7D284 LDR X0, [X8 + 0x40]
	0x03C7D288 LDR X1, [X8 + 0x28]
	0x03C7D28C BLR X9
	0x03C7D290 LDR W8, [X19 + 0x38]
	0x03C7D294 CBZ W8, 0x3C7D2BC
	0x03C7D298 LDR X8, [X19 + 0x48]
	0x03C7D29C STR W31, [X19 + 0x38]
	0x03C7D2A0 CBZ X8, 0x3C7D2BC
	0x03C7D2A4 LDR X2, [X8 + 0x18]
	0x03C7D2A8 LDR X0, [X8 + 0x40]
	0x03C7D2AC LDR X1, [X8 + 0x28]
	0x03C7D2B0 LDP X20, X19, [X31 + 0x10]
	0x03C7D2B4 LDR X30, [X31], #0x20
	0x03C7D2B8 BR X2
	0x03C7D2BC LDP X20, X19, [X31 + 0x10]
	0x03C7D2C0 LDR X30, [X31], #0x20
	0x03C7D2C4 RET
	0x03C7D2C8 BL 0x1C16F20
	0x03C7D2CC STR X30, [X31 - 0x20]!
	0x03C7D2D0 STP X20, X19, [X31 + 0x10]
	0x03C7D2D4 LDR W1, [X0 + 0x34]
	0x03C7D2D8 MOV X19, X0
	0x03C7D2DC BL 0x3C823B4
	0x03C7D2E0 LDR W1, [X19 + 0x38]
	0x03C7D2E4 MOV W20, W0
	0x03C7D2E8 MOV X0, X19
	0x03C7D2EC BL 0x3C823B4
	0x03C7D2F0 CMP W20, W0
	0x03C7D2F4 MOVZ W8, 0x38
	0x03C7D2F8 MOVZ W9, 0x34
	0x03C7D2FC CSEL X8, X9, X8, LT
	0x03C7D300 LDR W1, [X19, X8, LSL]
	0x03C7D304 MOV X0, X19
	0x03C7D308 BL 0x3C823B4
	0x03C7D30C MOV W1, W0
	0x03C7D310 MOV X0, X19
	0x03C7D314 BL 0x3C83904
	0x03C7D318 LDR W8, [X19 + 0x38]
	0x03C7D31C MOV W20, W0
	0x03C7D320 CMP W8, W0
	0x03C7D324 B.EQ 0x3C7D344
	0x03C7D328 LDR X8, [X19 + 0x48]
	0x03C7D32C STR W20, [X19 + 0x38]
	0x03C7D330 CBZ X8, 0x3C7D344
	0x03C7D334 LDR X9, [X8 + 0x18]
	0x03C7D338 LDR X0, [X8 + 0x40]
	0x03C7D33C LDR X1, [X8 + 0x28]
	0x03C7D340 BLR X9
	0x03C7D344 LDR W8, [X19 + 0x34]
	0x03C7D348 CMP W8, W20
	0x03C7D34C B.EQ 0x3C7D374
	0x03C7D350 LDR X8, [X19 + 0x40]
	0x03C7D354 STR W20, [X19 + 0x34]
	0x03C7D358 CBZ X8, 0x3C7D374
	0x03C7D35C LDR X2, [X8 + 0x18]
	0x03C7D360 LDR X0, [X8 + 0x40]
	0x03C7D364 LDR X1, [X8 + 0x28]
	0x03C7D368 LDP X20, X19, [X31 + 0x10]
	0x03C7D36C LDR X30, [X31], #0x20
	0x03C7D370 BR X2
	0x03C7D374 LDP X20, X19, [X31 + 0x10]
	0x03C7D378 LDR X30, [X31], #0x20
	0x03C7D37C RET
	0x03C7D380 STR X30, [X31 - 0x20]!
	0x03C7D384 STP X20, X19, [X31 + 0x10]
	0x03C7D388 LDR W1, [X0 + 0x34]
	0x03C7D38C MOV X19, X0
	0x03C7D390 BL 0x3C823B4
	0x03C7D394 LDR W1, [X19 + 0x38]
	0x03C7D398 MOV W20, W0
	0x03C7D39C MOV X0, X19
	0x03C7D3A0 BL 0x3C823B4
	0x03C7D3A4 CMP W20, W0
	0x03C7D3A8 MOVZ W8, 0x38
	0x03C7D3AC MOVZ W9, 0x34
	0x03C7D3B0 CSEL X8, X9, X8, GT
	0x03C7D3B4 LDR W1, [X19, X8, LSL]
	0x03C7D3B8 MOV X0, X19
	0x03C7D3BC BL 0x3C823B4
	0x03C7D3C0 MOV W1, W0
	0x03C7D3C4 MOV X0, X19
	0x03C7D3C8 BL 0x3C839B0
	0x03C7D3CC LDR W8, [X19 + 0x38]
	0x03C7D3D0 MOV W20, W0
	0x03C7D3D4 CMP W8, W0
	0x03C7D3D8 B.EQ 0x3C7D3F8
	0x03C7D3DC LDR X8, [X19 + 0x48]
	0x03C7D3E0 STR W20, [X19 + 0x38]
	0x03C7D3E4 CBZ X8, 0x3C7D3F8
	0x03C7D3E8 LDR X9, [X8 + 0x18]
	0x03C7D3EC LDR X0, [X8 + 0x40]
	0x03C7D3F0 LDR X1, [X8 + 0x28]
	0x03C7D3F4 BLR X9
	0x03C7D3F8 LDR W8, [X19 + 0x34]
	0x03C7D3FC CMP W8, W20
	0x03C7D400 B.EQ 0x3C7D428
	0x03C7D404 LDR X8, [X19 + 0x40]
	0x03C7D408 STR W20, [X19 + 0x34]
	0x03C7D40C CBZ X8, 0x3C7D428
	0x03C7D410 LDR X2, [X8 + 0x18]
	0x03C7D414 LDR X0, [X8 + 0x40]
	0x03C7D418 LDR X1, [X8 + 0x28]
	0x03C7D41C LDP X20, X19, [X31 + 0x10]
	0x03C7D420 LDR X30, [X31], #0x20
	0x03C7D424 BR X2
	0x03C7D428 LDP X20, X19, [X31 + 0x10]
	0x03C7D42C LDR X30, [X31], #0x20
	0x03C7D430 RET
	0x03C7D434 STR X30, [X31 - 0x30]!
	0x03C7D438 STP X22, X21, [X31 + 0x10]
	0x03C7D43C STP X20, X19, [X31 + 0x20]
	0x03C7D440 MOV X19, X0
	0x03C7D444 BL 0x3C7B9D0
	0x03C7D448 MOV X0, X19
	0x03C7D44C BL 0x3C7B40C
	0x03C7D450 TBZ X0, 0x0, 0x3C7D460
	0x03C7D454 MOV X0, X19
	0x03C7D458 BL 0x3C7D980
	0x03C7D45C B 0x3C7D4D0
	0x03C7D460 MOV X0, X19
	0x03C7D464 BL 0x3C7B500
	0x03C7D468 LDR X20, [X19 + 0x28]
	0x03C7D46C CBZ X20, 0x3C7D4EC
	0x03C7D470 LDR W8, [X20 + 0x10]
	0x03C7D474 CMP W0, W8
	0x03C7D478 B.GE 0x3C7D4D8
	0x03C7D47C MOV X0, X19
	0x03C7D480 BL 0x3C7B500
	0x03C7D484 LDR X22, [X19 + 0x10]
	0x03C7D488 MOV W21, W0
	0x03C7D48C MOV X0, X19
	0x03C7D490 BL 0x3C7B500
	0x03C7D494 CBZ X22, 0x3C7D4EC
	0x03C7D498 MOV W1, W0
	0x03C7D49C MOV X0, X22
	0x03C7D4A0 BL 0x3C7DDC8
	0x03C7D4A4 MOV W22, W0
	0x03C7D4A8 MOV X0, X19
	0x03C7D4AC BL 0x3C7B500
	0x03C7D4B0 SUB W2, W22, W0
	0x03C7D4B4 MOV X0, X20
	0x03C7D4B8 MOV W1, W21
	0x03C7D4BC MOV X3, X31
	0x03C7D4C0 BL 0x3228B90
	0x03C7D4C4 MOV X1, X0
	0x03C7D4C8 MOV X0, X19
	0x03C7D4CC BL 0x3C7B630
	0x03C7D4D0 MOVZ W0, 0x1
	0x03C7D4D4 B 0x3C7D4DC
	0x03C7D4D8 MOV W0, W31
	0x03C7D4DC LDP X20, X19, [X31 + 0x20]
	0x03C7D4E0 LDP X22, X21, [X31 + 0x10]
	0x03C7D4E4 LDR X30, [X31], #0x30
	0x03C7D4E8 RET
	0x03C7D4EC BL 0x1C16F20
	0x03C7D4F0 STP X30, X21, [X31 - 0x20]!
	0x03C7D4F4 STP X20, X19, [X31 + 0x10]
	0x03C7D4F8 MOV X19, X0
	0x03C7D4FC BL 0x3C7B9D0
	0x03C7D500 MOV X0, X19
	0x03C7D504 BL 0x3C7B40C
	0x03C7D508 TBZ X0, 0x0, 0x3C7D518
	0x03C7D50C MOV X0, X19

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+40], X21
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move X21, 0x76A000
	007 Move W8, [X21+2476]
	008 Move W20, W1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0x477000
	015 Move X0, [X0+2600]
	016 Call 0x1C17CF4
	017 Move X0, 0x4E4000
	018 Move X0, [X0+1720]
	019 Call 0x1C17CF4
	020 Move X0, 0x4E4000
	021 Move X0, [X0+1728]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+2476], W8
	025 Move W1, 1
	026 Move X0, X19
	027 Call TextEditingUtilities.set_revealCursor, X0, X1
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move X9, -51269632
	030 Move W8, W20
	031 Add X9, X9, 3666
	032 NotImplemented "Instruction ADR not yet implemented."
	033 Move W11, [X9]
	034 Add X10, X10, X11
	035 CallNoReturn X10
	036 Move X0, [X19+16]
	037 Compare X0, 0
	038 JumpIfEqual {287}
	039 Move X20, [X31+48]
	040 Move X19, [X31+56]
	041 Move X30, [X31+32]
	042 Move X21, [X31+40]
	043 Add X31, X31, 64
	044 Move X0, [X19+16]
	045 Compare X0, 0
	046 JumpIfEqual {287}
	047 Move X20, [X31+48]
	048 Move X19, [X31+56]
	049 Move X30, [X31+32]
	050 Move X21, [X31+40]
	051 Add X31, X31, 64
	052 Call TextSelectingUtilities.MoveUp, X0
	053 Return 
	054 Move X0, [X19+16]
	055 Compare X0, 0
	056 JumpIfEqual {287}
	057 Move X20, [X31+48]
	058 Move X19, [X31+56]
	059 Move X30, [X31+32]
	060 Move X21, [X31+40]
	061 Add X31, X31, 64
	062 Call TextSelectingUtilities.MoveDown, X0
	063 Return 
	064 Move X0, [X19+16]
	065 Compare X0, 0
	066 JumpIfEqual {287}
	067 Move X20, [X31+48]
	068 Move X19, [X31+56]
	069 Move X30, [X31+32]
	070 Move X21, [X31+40]
	071 Add X31, X31, 64
	072 Call TextSelectingUtilities.MoveLineStart, X0
	073 Return 
	074 Move X0, [X19+16]
	075 Compare X0, 0
	076 JumpIfEqual {287}
	077 Move X20, [X31+48]
	078 Move X19, [X31+56]
	079 Move X30, [X31+32]
	080 Move X21, [X31+40]
	081 Add X31, X31, 64
	082 Call TextSelectingUtilities.MoveLineEnd, X0
	083 Return 
	084 Move X0, [X19+16]
	085 Compare X0, 0
	086 JumpIfEqual {287}
	087 Move X20, [X31+48]
	088 Move X19, [X31+56]
	089 Move X30, [X31+32]
	090 Move X21, [X31+40]
	091 Add X31, X31, 64
	092 Call TextSelectingUtilities.MoveWordLeft, X0
	093 Return 
	094 Move X0, [X19+16]
	095 Compare X0, 0
	096 JumpIfEqual {287}
	097 Move X20, [X31+48]
	098 Move X19, [X31+56]
	099 Move X30, [X31+32]
	100 Move X21, [X31+40]
	101 Add X31, X31, 64
	102 Call TextSelectingUtilities.MoveWordRight, X0
	103 Return 
	104 Move X0, [X19+16]
	105 Compare X0, 0
	106 JumpIfEqual {287}
	107 Move X20, [X31+48]
	108 Move X19, [X31+56]
	109 Move X30, [X31+32]
	110 Move X21, [X31+40]
	111 Add X31, X31, 64
	112 Call TextSelectingUtilities.MoveParagraphForward, X0
	113 Return 
	114 Move X0, [X19+16]
	115 Compare X0, 0
	116 JumpIfEqual {287}
	117 Move X20, [X31+48]
	118 Move X19, [X31+56]
	119 Move X30, [X31+32]
	120 Move X21, [X31+40]
	121 Add X31, X31, 64
	122 Call TextSelectingUtilities.MoveParagraphBackward, X0
	123 Return 
	124 Move X0, X19
	125 Move X20, [X31+48]
	126 Move X19, [X31+56]
	127 Move X30, [X31+32]
	128 Move X21, [X31+40]
	129 Add X31, X31, 64
	130 Call TextEditingUtilities.DeleteWordBack, X0
	131 Return 
	132 Move X0, X19
	133 Move X20, [X31+48]
	134 Move X19, [X31+56]
	135 Move X30, [X31+32]
	136 Move X21, [X31+40]
	137 Add X31, X31, 64
	138 Call TextEditingUtilities.DeleteWordForward, X0
	139 Return 
	140 Move X0, X19
	141 Move X20, [X31+48]
	142 Move X19, [X31+56]
	143 Move X30, [X31+32]
	144 Move X21, [X31+40]
	145 Add X31, X31, 64
	146 Call TextEditingUtilities.Cut, X0
	147 Return 
	148 Move X0, X19
	149 Move X20, [X31+48]
	150 Move X19, [X31+56]
	151 Move X30, [X31+32]
	152 Move X21, [X31+40]
	153 Add X31, X31, 64
	154 Call TextEditingUtilities.Paste, X0
	155 Return 
	156 Move X0, [X19+16]
	157 Compare X0, 0
	158 JumpIfEqual {287}
	159 Move X20, [X31+48]
	160 Move X19, [X31+56]
	161 Move X30, [X31+32]
	162 Move X21, [X31+40]
	163 Add X31, X31, 64
	164 Call TextSelectingUtilities.MoveRight, X0
	165 Return 
	166 Move X0, [X19+16]
	167 Compare X0, 0
	168 JumpIfEqual {287}
	169 Move X20, [X31+48]
	170 Move X19, [X31+56]
	171 Move X30, [X31+32]
	172 Move X21, [X31+40]
	173 Add X31, X31, 64
	174 Call TextSelectingUtilities.MoveTextStart, X0
	175 Return 
	176 Move X0, [X19+16]
	177 Compare X0, 0
	178 JumpIfEqual {287}
	179 Move X20, [X31+48]
	180 Move X19, [X31+56]
	181 Move X30, [X31+32]
	182 Move X21, [X31+40]
	183 Add X31, X31, 64
	184 Call TextSelectingUtilities.MoveTextEnd, X0
	185 Return 
	186 Move X8, 0x4E4000
	187 Move X8, [X8+1720]
	188 Move TEMP, 0
	189 Not TEMP
	190 Move X9, TEMP
	191 Add X0, X31, 8
	192 Move X1, X31
	193 Move X8, [X8]
	194 Move [X31+24], W20
	195 Move [X31+8], X8
	196 Move [X31+16], X9
	197 Call Enum.ToString, X0
	198 Move X8, 0x4E4000
	199 Move X8, [X8+1728]
	200 Move X1, X0
	201 Move X2, X31
	202 Move X8, [X8]
	203 Move X0, X8
	204 Call String.Concat, X0, X1
	205 Move X8, 0x477000
	206 Move X8, [X8+2600]
	207 Move X19, X0
	208 Move X8, [X8]
	209 Move W9, [X8+224]
	210 Compare W9, 0
	211 JumpIfNotEqual {214}
	212 Move X0, X8
	213 Call 0x1C17DFC
	214 Move X0, X19
	215 Move X1, X31
	216 Call Debug.Log, X0
	217 Move X20, [X31+48]
	218 Move X19, [X31+56]
	219 Move X30, [X31+32]
	220 Move X21, [X31+40]
	221 Add X31, X31, 64
	222 Return 
	223 Move X0, [X19+16]
	224 Compare X0, 0
	225 JumpIfEqual {287}
	226 Move X20, [X31+48]
	227 Move X19, [X31+56]
	228 Move X30, [X31+32]
	229 Move X21, [X31+40]
	230 Add X31, X31, 64
	231 Call TextSelectingUtilities.MoveGraphicalLineStart, X0
	232 Return 
	233 Move X0, [X19+16]
	234 Compare X0, 0
	235 JumpIfEqual {287}
	236 Move X20, [X31+48]
	237 Move X19, [X31+56]
	238 Move X30, [X31+32]
	239 Move X21, [X31+40]
	240 Add X31, X31, 64
	241 Call TextSelectingUtilities.MoveGraphicalLineEnd, X0
	242 Return 
	243 Move X0, [X19+16]
	244 Compare X0, 0
	245 JumpIfEqual {287}
	246 Move X20, [X31+48]
	247 Move X19, [X31+56]
	248 Move X30, [X31+32]
	249 Move X21, [X31+40]
	250 Add X31, X31, 64
	251 Call TextSelectingUtilities.MoveToStartOfNextWord, X0
	252 Return 
	253 Move X0, [X19+16]
	254 Compare X0, 0
	255 JumpIfEqual {287}
	256 Move X20, [X31+48]
	257 Move X19, [X31+56]
	258 Move X30, [X31+32]
	259 Move X21, [X31+40]
	260 Add X31, X31, 64
	261 Call TextSelectingUtilities.MoveToEndOfPreviousWord, X0
	262 Return 
	263 Move X0, X19
	264 Move X20, [X31+48]
	265 Move X19, [X31+56]
	266 Move X30, [X31+32]
	267 Move X21, [X31+40]
	268 Add X31, X31, 64
	269 Call TextEditingUtilities.Delete, X0
	270 Return 
	271 Move X0, X19
	272 Move X20, [X31+48]
	273 Move X19, [X31+56]
	274 Move X30, [X31+32]
	275 Move X21, [X31+40]
	276 Add X31, X31, 64
	277 Call TextEditingUtilities.Backspace, X0
	278 Return 
	279 Move X0, X19
	280 Move X20, [X31+48]
	281 Move X19, [X31+56]
	282 Move X30, [X31+32]
	283 Move X21, [X31+40]
	284 Add X31, X31, 64
	285 Call TextEditingUtilities.DeleteLineBack, X0
	286 Return 
	287 Call 0x1C17F20

Method: System.Void MapKey(System.String key, UnityEngine.TextEditOp action)

Disassembly:
	0x03C7E8F0 RET
	0x03C7E8F4 STP X30, X19, [X31 - 0x10]!
	0x03C7E8F8 MOV W1, W31
	0x03C7E8FC MOV X19, X0
	0x03C7E900 BL 0x3C7E6FC
	0x03C7E904 LDR X0, [X19 + 0x38]
	0x03C7E908 CBZ X0, 0x3C7E938
	0x03C7E90C MOV X1, X31
	0x03C7E910 BL 0x3C69940
	0x03C7E914 CBZ X0, 0x3C7E938
	0x03C7E918 LDR W1, [X0 + 0x10]
	0x03C7E91C MOV X0, X19
	0x03C7E920 BL 0x3C7E75C
	0x03C7E924 MOVN W8, 0x0
	0x03C7E928 STRB W31, [X19 + 0x29]
	0x03C7E92C STR W8, [X19 + 0x78]
	0x03C7E930 LDP X30, X19, [X31], #0x10
	0x03C7E934 RET
	0x03C7E938 BL 0x1C16F20
	0x03C7E93C STR X30, [X31 - 0x20]!
	0x03C7E940 STP X20, X19, [X31 + 0x10]
	0x03C7E944 STRB W31, [X0 + 0x2B]
	0x03C7E948 ADRP X20, 0x75B000
	0x03C7E94C LDRB W8, [X20 + 0x78F]
	0x03C7E950 MOV X19, X0
	0x03C7E954 CBNZ W8, 0x3C7E96C
	0x03C7E958 ADRP X0, 0x47D000
	0x03C7E95C LDR X0, [X0 + 0xF08]
	0x03C7E960 BL 0x1C16CF4
	0x03C7E964 MOVZ W8, 0x1
	0x03C7E968 STRB W8, [X20 + 0x78F]
	0x03C7E96C ADRP X8, 0x47D000
	0x03C7E970 LDR X8, [X8 + 0xF08]
	0x03C7E974 LDR X8, [X8]
	0x03C7E978 LDR X8, [X8 + 0xB8]
	0x03C7E97C LDR V0, [X8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x769000
	007 Move X22, 0x4E3000
	008 Move W8, [X21+2477]
	009 Move X22, [X22+1456]
	010 Move W19, W1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x4E3000
	017 Move X0, [X0+1736]
	018 Call 0x1C17CF4
	019 Move X0, 0x4E3000
	020 Move X0, [X0+1456]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+2477], W8
	024 Move X8, [X22]
	025 Move X0, X20
	026 Move X1, X31
	027 Move X8, [X8+184]
	028 Move X21, [X8]
	029 Call Event.KeyboardEvent, X0
	030 Compare X21, 0
	031 JumpIfEqual {45}
	032 Move X8, 0x4E3000
	033 Move X8, [X8+1736]
	034 Move X1, X0
	035 Move X0, X21
	036 Move W2, W19
	037 Move X3, [X8]
	038 Move X20, [X31+32]
	039 Move X19, [X31+40]
	040 Move X22, [X31+16]
	041 Move X21, [X31+24]
	042 Move X30, [X31+48]
	043 Call Dictionary`2<Object, Int32Enum>.set_Item, X0, X1, X2
	044 Return 
	045 Call 0x1C17F20

Method: System.Void InitKeyActions()

Disassembly:
	0x03C7CBD0 LDR X1, [X8 + 0x28]
	0x03C7CBD4 BLR X9
	0x03C7CBD8 LDR W8, [X19 + 0x38]
	0x03C7CBDC CMP W8, W20
	0x03C7CBE0 B.EQ 0x3C7CC0C
	0x03C7CBE4 LDR X8, [X19 + 0x48]
	0x03C7CBE8 STR W20, [X19 + 0x38]
	0x03C7CBEC CBZ X8, 0x3C7CC0C
	0x03C7CBF0 LDR X2, [X8 + 0x18]
	0x03C7CBF4 LDR X0, [X8 + 0x40]
	0x03C7CBF8 LDR X1, [X8 + 0x28]
	0x03C7CBFC LDP X20, X19, [X31 + 0x20]
	0x03C7CC00 LDP X22, X21, [X31 + 0x10]
	0x03C7CC04 LDR X30, [X31], #0x30
	0x03C7CC08 BR X2
	0x03C7CC0C LDP X20, X19, [X31 + 0x20]
	0x03C7CC10 LDP X22, X21, [X31 + 0x10]
	0x03C7CC14 LDR X30, [X31], #0x30
	0x03C7CC18 RET
	0x03C7CC1C BL 0x1C16F20
	0x03C7CC20 BL 0x1C16F28
	0x03C7CC24 STR X30, [X31 - 0x20]!
	0x03C7CC28 STP X20, X19, [X31 + 0x10]
	0x03C7CC2C LDR W1, [X0 + 0x34]
	0x03C7CC30 MOV X19, X0
	0x03C7CC34 BL 0x3C823B4
	0x03C7CC38 LDR W1, [X19 + 0x38]
	0x03C7CC3C MOV W20, W0
	0x03C7CC40 MOV X0, X19
	0x03C7CC44 BL 0x3C823B4
	0x03C7CC48 CMP W20, W0
	0x03C7CC4C MOVZ W8, 0x38
	0x03C7CC50 MOVZ W9, 0x34
	0x03C7CC54 CSEL X8, X9, X8, GT
	0x03C7CC58 LDR W1, [X19, X8, LSL]
	0x03C7CC5C MOV X0, X19
	0x03C7CC60 BL 0x3C823B4
	0x03C7CC64 LDR W8, [X19 + 0x34]
	0x03C7CC68 MOV W1, W0
	0x03C7CC6C CMP W8, W0
	0x03C7CC70 B.EQ 0x3C7CC94
	0x03C7CC74 LDR X8, [X19 + 0x40]
	0x03C7CC78 STR W1, [X19 + 0x34]
	0x03C7CC7C CBZ X8, 0x3C7CC94
	0x03C7CC80 LDR X9, [X8 + 0x18]
	0x03C7CC84 LDR X0, [X8 + 0x40]
	0x03C7CC88 LDR X1, [X8 + 0x28]
	0x03C7CC8C BLR X9
	0x03C7CC90 LDR W1, [X19 + 0x34]
	0x03C7CC94 MOV X0, X19
	0x03C7CC98 BL 0x3C823B4
	0x03C7CC9C MOV W1, W0
	0x03C7CCA0 MOV X0, X19
	0x03C7CCA4 BL 0x3C83DE8
	0x03C7CCA8 LDR W8, [X19 + 0x38]
	0x03C7CCAC MOV W20, W0
	0x03C7CCB0 CMP W8, W0
	0x03C7CCB4 B.EQ 0x3C7CCD4
	0x03C7CCB8 LDR X8, [X19 + 0x48]
	0x03C7CCBC STR W20, [X19 + 0x38]
	0x03C7CCC0 CBZ X8, 0x3C7CCD4
	0x03C7CCC4 LDR X9, [X8 + 0x18]
	0x03C7CCC8 LDR X0, [X8 + 0x40]
	0x03C7CCCC LDR X1, [X8 + 0x28]
	0x03C7CCD0 BLR X9
	0x03C7CCD4 LDR W8, [X19 + 0x34]
	0x03C7CCD8 CMP W8, W20
	0x03C7CCDC B.EQ 0x3C7CCFC
	0x03C7CCE0 LDR X8, [X19 + 0x40]
	0x03C7CCE4 STR W20, [X19 + 0x34]
	0x03C7CCE8 CBZ X8, 0x3C7CCFC
	0x03C7CCEC LDR X9, [X8 + 0x18]
	0x03C7CCF0 LDR X0, [X8 + 0x40]
	0x03C7CCF4 LDR X1, [X8 + 0x28]
	0x03C7CCF8 BLR X9
	0x03C7CCFC MOVN W8, 0x0
	0x03C7CD00 STRB W31, [X19 + 0x18]
	0x03C7CD04 STR W8, [X19 + 0x14]
	0x03C7CD08 LDP X20, X19, [X31 + 0x10]
	0x03C7CD0C LDR X30, [X31], #0x20
	0x03C7CD10 RET
	0x03C7CD14 STR X30, [X31 - 0x20]!
	0x03C7CD18 STP X20, X19, [X31 + 0x10]
	0x03C7CD1C LDR W1, [X0 + 0x34]
	0x03C7CD20 MOVN W8, 0x0
	0x03C7CD24 MOV X19, X0
	0x03C7CD28 STRB W31, [X0 + 0x18]
	0x03C7CD2C STR W8, [X0 + 0x14]
	0x03C7CD30 BL 0x3C823B4
	0x03C7CD34 LDR W1, [X19 + 0x38]
	0x03C7CD38 MOV W20, W0
	0x03C7CD3C MOV X0, X19
	0x03C7CD40 BL 0x3C823B4
	0x03C7CD44 CMP W20, W0
	0x03C7CD48 B.NE 0x3C7CDC0
	0x03C7CD4C LDR W1, [X19 + 0x34]
	0x03C7CD50 MOV X0, X19
	0x03C7CD54 BL 0x3C823B4
	0x03C7CD58 MOV W1, W0
	0x03C7CD5C MOV X0, X19
	0x03C7CD60 BL 0x3C7DC04
	0x03C7CD64 LDR W8, [X19 + 0x38]
	0x03C7CD68 MOV W20, W0
	0x03C7CD6C CMP W8, W0
	0x03C7CD70 B.EQ 0x3C7CD90
	0x03C7CD74 LDR X8, [X19 + 0x48]
	0x03C7CD78 STR W20, [X19 + 0x38]
	0x03C7CD7C CBZ X8, 0x3C7CD90
	0x03C7CD80 LDR X9, [X8 + 0x18]
	0x03C7CD84 LDR X0, [X8 + 0x40]
	0x03C7CD88 LDR X1, [X8 + 0x28]
	0x03C7CD8C BLR X9
	0x03C7CD90 LDR W8, [X19 + 0x34]
	0x03C7CD94 CMP W8, W20
	0x03C7CD98 B.EQ 0x3C7CDD0
	0x03C7CD9C LDR X8, [X19 + 0x40]
	0x03C7CDA0 STR W20, [X19 + 0x34]
	0x03C7CDA4 CBZ X8, 0x3C7CDD0
	0x03C7CDA8 LDR X2, [X8 + 0x18]
	0x03C7CDAC LDR X0, [X8 + 0x40]
	0x03C7CDB0 LDR X1, [X8 + 0x28]
	0x03C7CDB4 LDP X20, X19, [X31 + 0x10]
	0x03C7CDB8 LDR X30, [X31], #0x20
	0x03C7CDBC BR X2
	0x03C7CDC0 MOV X0, X19
	0x03C7CDC4 LDP X20, X19, [X31 + 0x10]
	0x03C7CDC8 LDR X30, [X31], #0x20
	0x03C7CDCC B 0x3C7C61C
	0x03C7CDD0 LDP X20, X19, [X31 + 0x10]
	0x03C7CDD4 LDR X30, [X31], #0x20
	0x03C7CDD8 RET
	0x03C7CDDC STR X30, [X31 - 0x20]!
	0x03C7CDE0 STP X20, X19, [X31 + 0x10]
	0x03C7CDE4 LDR W1, [X0 + 0x34]
	0x03C7CDE8 MOVN W8, 0x0
	0x03C7CDEC MOV X19, X0
	0x03C7CDF0 STRB W31, [X0 + 0x18]
	0x03C7CDF4 STR W8, [X0 + 0x14]
	0x03C7CDF8 BL 0x3C823B4
	0x03C7CDFC LDR W1, [X19 + 0x38]
	0x03C7CE00 MOV W20, W0
	0x03C7CE04 MOV X0, X19
	0x03C7CE08 BL 0x3C823B4
	0x03C7CE0C CMP W20, W0
	0x03C7CE10 B.NE 0x3C7CE88
	0x03C7CE14 LDR W1, [X19 + 0x34]
	0x03C7CE18 MOV X0, X19
	0x03C7CE1C BL 0x3C823B4
	0x03C7CE20 MOV W1, W0
	0x03C7CE24 MOV X0, X19
	0x03C7CE28 BL 0x3C7DB28
	0x03C7CE2C LDR W8, [X19 + 0x38]
	0x03C7CE30 MOV W20, W0
	0x03C7CE34 CMP W8, W0
	0x03C7CE38 B.EQ 0x3C7CE58
	0x03C7CE3C LDR X8, [X19 + 0x48]
	0x03C7CE40 STR W20, [X19 + 0x38]
	0x03C7CE44 CBZ X8, 0x3C7CE58
	0x03C7CE48 LDR X9, [X8 + 0x18]
	0x03C7CE4C LDR X0, [X8 + 0x40]
	0x03C7CE50 LDR X1, [X8 + 0x28]
	0x03C7CE54 BLR X9
	0x03C7CE58 LDR W8, [X19 + 0x34]
	0x03C7CE5C CMP W8, W20
	0x03C7CE60 B.EQ 0x3C7CE98
	0x03C7CE64 LDR X8, [X19 + 0x40]
	0x03C7CE68 STR W20, [X19 + 0x34]
	0x03C7CE6C CBZ X8, 0x3C7CE98
	0x03C7CE70 LDR X2, [X8 + 0x18]
	0x03C7CE74 LDR X0, [X8 + 0x40]
	0x03C7CE78 LDR X1, [X8 + 0x28]
	0x03C7CE7C LDP X20, X19, [X31 + 0x10]
	0x03C7CE80 LDR X30, [X31], #0x20
	0x03C7CE84 BR X2
	0x03C7CE88 MOV X0, X19
	0x03C7CE8C LDP X20, X19, [X31 + 0x10]
	0x03C7CE90 LDR X30, [X31], #0x20
	0x03C7CE94 B 0x3C7C510
	0x03C7CE98 LDP X20, X19, [X31 + 0x10]
	0x03C7CE9C LDR X30, [X31], #0x20
	0x03C7CEA0 RET
	0x03C7CEA4 STR X30, [X31 - 0x20]!
	0x03C7CEA8 STP X20, X19, [X31 + 0x10]
	0x03C7CEAC LDR W1, [X0 + 0x34]
	0x03C7CEB0 MOV X19, X0
	0x03C7CEB4 BL 0x3C823B4
	0x03C7CEB8 LDR W1, [X19 + 0x38]
	0x03C7CEBC MOV W20, W0
	0x03C7CEC0 MOV X0, X19
	0x03C7CEC4 BL 0x3C823B4
	0x03C7CEC8 CMP W20, W0
	0x03C7CECC MOVZ W8, 0x38
	0x03C7CED0 MOVZ W9, 0x34
	0x03C7CED4 CSEL X8, X9, X8, LT
	0x03C7CED8 LDR W1, [X19, X8, LSL]
	0x03C7CEDC MOV X0, X19
	0x03C7CEE0 BL 0x3C823B4
	0x03C7CEE4 LDR W8, [X19 + 0x34]
	0x03C7CEE8 MOV W1, W0
	0x03C7CEEC CMP W8, W0
	0x03C7CEF0 B.EQ 0x3C7CF14
	0x03C7CEF4 LDR X8, [X19 + 0x40]
	0x03C7CEF8 STR W1, [X19 + 0x34]
	0x03C7CEFC CBZ X8, 0x3C7CF14
	0x03C7CF00 LDR X9, [X8 + 0x18]
	0x03C7CF04 LDR X0, [X8 + 0x40]
	0x03C7CF08 LDR X1, [X8 + 0x28]
	0x03C7CF0C BLR X9
	0x03C7CF10 LDR W1, [X19 + 0x34]
	0x03C7CF14 MOV X0, X19
	0x03C7CF18 BL 0x3C823B4
	0x03C7CF1C MOV W1, W0
	0x03C7CF20 MOV X0, X19
	0x03C7CF24 BL 0x3C83E6C
	0x03C7CF28 LDR W8, [X19 + 0x34]
	0x03C7CF2C MOV W1, W0
	0x03C7CF30 CMP W8, W0
	0x03C7CF34 B.EQ 0x3C7CF58
	0x03C7CF38 LDR X8, [X19 + 0x40]
	0x03C7CF3C STR W1, [X19 + 0x34]
	0x03C7CF40 CBZ X8, 0x3C7CF58
	0x03C7CF44 LDR X9, [X8 + 0x18]
	0x03C7CF48 LDR X0, [X8 + 0x40]
	0x03C7CF4C LDR X1, [X8 + 0x28]
	0x03C7CF50 BLR X9
	0x03C7CF54 LDR W1, [X19 + 0x34]
	0x03C7CF58 MOV X0, X19
	0x03C7CF5C BL 0x3C823B4
	0x03C7CF60 LDR W8, [X19 + 0x38]
	0x03C7CF64 CMP W8, W0
	0x03C7CF68 B.EQ 0x3C7CF90
	0x03C7CF6C LDR X8, [X19 + 0x48]
	0x03C7CF70 STR W0, [X19 + 0x38]
	0x03C7CF74 CBZ X8, 0x3C7CF90
	0x03C7CF78 LDR X2, [X8 + 0x18]
	0x03C7CF7C LDR X0, [X8 + 0x40]
	0x03C7CF80 LDR X1, [X8 + 0x28]
	0x03C7CF84 LDP X20, X19, [X31 + 0x10]
	0x03C7CF88 LDR X30, [X31], #0x20
	0x03C7CF8C BR X2
	0x03C7CF90 LDP X20, X19, [X31 + 0x10]
	0x03C7CF94 LDR X30, [X31], #0x20
	0x03C7CF98 RET
	0x03C7CF9C STP X30, X19, [X31 - 0x10]!
	0x03C7CFA0 LDR W8, [X0 + 0x34]
	0x03C7CFA4 MOV X19, X0
	0x03C7CFA8 CBZ W8, 0x3C7CFC8
	0x03C7CFAC LDR X8, [X19 + 0x40]
	0x03C7CFB0 STR W31, [X19 + 0x34]
	0x03C7CFB4 CBZ X8, 0x3C7CFC8
	0x03C7CFB8 LDR X9, [X8 + 0x18]
	0x03C7CFBC LDR X0, [X8 + 0x40]
	0x03C7CFC0 LDR X1, [X8 + 0x28]
	0x03C7CFC4 BLR X9
	0x03C7CFC8 LDR W8, [X19 + 0x38]
	0x03C7CFCC CBZ W8, 0x3C7CFF0
	0x03C7CFD0 LDR X8, [X19 + 0x48]
	0x03C7CFD4 STR W31, [X19 + 0x38]
	0x03C7CFD8 CBZ X8, 0x3C7CFF0
	0x03C7CFDC LDR X2, [X8 + 0x18]
	0x03C7CFE0 LDR X0, [X8 + 0x40]
	0x03C7CFE4 LDR X1, [X8 + 0x28]
	0x03C7CFE8 LDP X30, X19, [X31], #0x10
	0x03C7CFEC BR X2
	0x03C7CFF0 LDP X30, X19, [X31], #0x10
	0x03C7CFF4 RET
	0x03C7CFF8 STR X30, [X31 - 0x20]!
	0x03C7CFFC STP X20, X19, [X31 + 0x10]
	0x03C7D000 MOV X19, X0
	0x03C7D004 BL 0x3C822F8
	0x03C7D008 LDR W8, [X19 + 0x34]
	0x03C7D00C MOV W20, W0
	0x03C7D010 CMP W8, W0
	0x03C7D014 B.EQ 0x3C7D034
	0x03C7D018 LDR X8, [X19 + 0x40]
	0x03C7D01C STR W20, [X19 + 0x34]
	0x03C7D020 CBZ X8, 0x3C7D034
	0x03C7D024 LDR X9, [X8 + 0x18]
	0x03C7D028 LDR X0, [X8 + 0x40]
	0x03C7D02C LDR X1, [X8 + 0x28]
	0x03C7D030 BLR X9
	0x03C7D034 LDR W8, [X19 + 0x38]
	0x03C7D038 CMP W8, W20
	0x03C7D03C B.EQ 0x3C7D064
	0x03C7D040 LDR X8, [X19 + 0x48]
	0x03C7D044 STR W20, [X19 + 0x38]
	0x03C7D048 CBZ X8, 0x3C7D064
	0x03C7D04C LDR X2, [X8 + 0x18]
	0x03C7D050 LDR X0, [X8 + 0x40]
	0x03C7D054 LDR X1, [X8 + 0x28]
	0x03C7D058 LDP X20, X19, [X31 + 0x10]
	0x03C7D05C LDR X30, [X31], #0x20
	0x03C7D060 BR X2
	0x03C7D064 LDP X20, X19, [X31 + 0x10]
	0x03C7D068 LDR X30, [X31], #0x20
	0x03C7D06C RET
	0x03C7D070 STR X30, [X31 - 0x20]!
	0x03C7D074 STP X20, X19, [X31 + 0x10]
	0x03C7D078 LDR W1, [X0 + 0x34]
	0x03C7D07C MOV X19, X0
	0x03C7D080 BL 0x3C823B4
	0x03C7D084 LDR W1, [X19 + 0x38]
	0x03C7D088 MOV W20, W0
	0x03C7D08C MOV X0, X19
	0x03C7D090 BL 0x3C823B4
	0x03C7D094 CMP W20, W0
	0x03C7D098 MOVZ W8, 0x38
	0x03C7D09C MOVZ W9, 0x34
	0x03C7D0A0 CSEL X8, X9, X8, GT
	0x03C7D0A4 LDR W1, [X19, X8, LSL]
	0x03C7D0A8 MOV X0, X19
	0x03C7D0AC BL 0x3C823B4
	0x03C7D0B0 LDR W8, [X19 + 0x34]
	0x03C7D0B4 MOV W1, W0
	0x03C7D0B8 CMP W8, W0
	0x03C7D0BC B.EQ 0x3C7D0E0
	0x03C7D0C0 LDR X8, [X19 + 0x40]
	0x03C7D0C4 STR W1, [X19 + 0x34]
	0x03C7D0C8 CBZ X8, 0x3C7D0E0
	0x03C7D0CC LDR X9, [X8 + 0x18]
	0x03C7D0D0 LDR X0, [X8 + 0x40]
	0x03C7D0D4 LDR X1, [X8 + 0x28]
	0x03C7D0D8 BLR X9
	0x03C7D0DC LDR W1, [X19 + 0x34]
	0x03C7D0E0 MOV X0, X19
	0x03C7D0E4 BL 0x3C823B4
	0x03C7D0E8 MOV W20, W0
	0x03C7D0EC MOV X0, X19
	0x03C7D0F0 BL 0x3C822F8
	0x03C7D0F4 CMP W20, W0
	0x03C7D0F8 B.GE 0x3C7D170
	0x03C7D0FC LDR W1, [X19 + 0x34]
	0x03C7D100 MOV X0, X19
	0x03C7D104 BL 0x3C823B4
	0x03C7D108 ADD W1, W0, 0x1
	0x03C7D10C MOV X0, X19
	0x03C7D110 BL 0x3C83A64
	0x03C7D114 LDR W8, [X19 + 0x34]
	0x03C7D118 MOV W20, W0
	0x03C7D11C CMP W8, W0
	0x03C7D120 B.EQ 0x3C7D140
	0x03C7D124 LDR X8, [X19 + 0x40]
	0x03C7D128 STR W20, [X19 + 0x34]
	0x03C7D12C CBZ X8, 0x3C7D140
	0x03C7D130 LDR X9, [X8 + 0x18]
	0x03C7D134 LDR X0, [X8 + 0x40]
	0x03C7D138 LDR X1, [X8 + 0x28]
	0x03C7D13C BLR X9
	0x03C7D140 LDR W8, [X19 + 0x38]
	0x03C7D144 CMP W8, W20
	0x03C7D148 B.EQ 0x3C7D170
	0x03C7D14C LDR X8, [X19 + 0x48]
	0x03C7D150 STR W20, [X19 + 0x38]
	0x03C7D154 CBZ X8, 0x3C7D170
	0x03C7D158 LDR X2, [X8 + 0x18]
	0x03C7D15C LDR X0, [X8 + 0x40]
	0x03C7D160 LDR X1, [X8 + 0x28]
	0x03C7D164 LDP X20, X19, [X31 + 0x10]
	0x03C7D168 LDR X30, [X31], #0x20
	0x03C7D16C BR X2
	0x03C7D170 LDP X20, X19, [X31 + 0x10]
	0x03C7D174 LDR X30, [X31], #0x20
	0x03C7D178 RET
	0x03C7D17C STR X30, [X31 - 0x20]!
	0x03C7D180 STP X20, X19, [X31 + 0x10]
	0x03C7D184 LDR W1, [X0 + 0x34]
	0x03C7D188 MOV X19, X0
	0x03C7D18C BL 0x3C823B4
	0x03C7D190 LDR W1, [X19 + 0x38]
	0x03C7D194 MOV W20, W0
	0x03C7D198 MOV X0, X19
	0x03C7D19C BL 0x3C823B4
	0x03C7D1A0 CMP W20, W0
	0x03C7D1A4 MOVZ W8, 0x38
	0x03C7D1A8 MOVZ W9, 0x34
	0x03C7D1AC CSEL X8, X9, X8, LT
	0x03C7D1B0 LDR W1, [X19, X8, LSL]
	0x03C7D1B4 MOV X0, X19
	0x03C7D1B8 BL 0x3C823B4
	0x03C7D1BC LDR W8, [X19 + 0x34]
	0x03C7D1C0 MOV W1, W0
	0x03C7D1C4 CMP W8, W0
	0x03C7D1C8 B.EQ 0x3C7D1EC
	0x03C7D1CC LDR X8, [X19 + 0x40]
	0x03C7D1D0 STR W1, [X19 + 0x34]
	0x03C7D1D4 CBZ X8, 0x3C7D1EC
	0x03C7D1D8 LDR X9, [X8 + 0x18]
	0x03C7D1DC LDR X0, [X8 + 0x40]
	0x03C7D1E0 LDR X1, [X8 + 0x28]
	0x03C7D1E4 BLR X9
	0x03C7D1E8 LDR W1, [X19 + 0x34]
	0x03C7D1EC MOV X0, X19
	0x03C7D1F0 BL 0x3C823B4
	0x03C7D1F4 CMP W0, 0x2
	0x03C7D1F8 B.LT 0x3C7D26C
	0x03C7D1FC LDR W1, [X19 + 0x34]
	0x03C7D200 LDR X20, [X19 + 0x28]
	0x03C7D204 MOV X0, X19

ISIL:
	001 Subtract X31, X31, 224
	002 Move [X31+128], X29
	003 Move [X31+136], X30
	004 Move [X31+144], X28
	005 Move [X31+152], X27
	006 Move [X31+160], X26
	007 Move [X31+168], X25
	008 Move [X31+176], X24
	009 Move [X31+184], X23
	010 Move [X31+192], X22
	011 Move [X31+200], X21
	012 Move [X31+208], X20
	013 Move [X31+216], X19
	014 Move X19, 0x76B000
	015 Move X20, 0x4E5000
	016 Move W8, [X19+2478]
	017 Move X20, [X20+1456]
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {147}
	022 Move X0, 0x4E5000
	023 Move X0, [X0+1464]
	024 Call 0x1C17CF4
	025 Move X0, 0x4E5000
	026 Move X0, [X0+1472]
	027 Call 0x1C17CF4
	028 Move X0, 0x4E5000
	029 Move X0, [X0+1456]
	030 Call 0x1C17CF4
	031 Move X0, 0x4E5000
	032 Move X0, [X0+1480]
	033 Call 0x1C17CF4
	034 Move X0, 0x4CC000
	035 Move X0, [X0+248]
	036 Call 0x1C17CF4
	037 Move X0, 0x4C9000
	038 Move X0, [X0+3736]
	039 Call 0x1C17CF4
	040 Move X0, 0x4E5000
	041 Move X0, [X0+1488]
	042 Call 0x1C17CF4
	043 Move X0, 0x4E5000
	044 Move X0, [X0+1496]
	045 Call 0x1C17CF4
	046 Move X0, 0x4E5000
	047 Move X0, [X0+1504]
	048 Call 0x1C17CF4
	049 Move X0, 0x4E5000
	050 Move X0, [X0+1512]
	051 Call 0x1C17CF4
	052 Move X0, 0x4CA000
	053 Move X0, [X0+4008]
	054 Call 0x1C17CF4
	055 Move X0, 0x4E5000
	056 Move X0, [X0+1520]
	057 Call 0x1C17CF4
	058 Move X0, 0x4E5000
	059 Move X0, [X0+1528]
	060 Call 0x1C17CF4
	061 Move X0, 0x4E5000
	062 Move X0, [X0+1536]
	063 Call 0x1C17CF4
	064 Move X0, 0x4E5000
	065 Move X0, [X0+1544]
	066 Call 0x1C17CF4
	067 Move X0, 0x4E5000
	068 Move X0, [X0+1552]
	069 Call 0x1C17CF4
	070 Move X0, 0x4E5000
	071 Move X0, [X0+1560]
	072 Call 0x1C17CF4
	073 Move X0, 0x4E5000
	074 Move X0, [X0+1568]
	075 Call 0x1C17CF4
	076 Move X0, 0x4E5000
	077 Move X0, [X0+1576]
	078 Call 0x1C17CF4
	079 Move X0, 0x4CA000
	080 Move X0, [X0+4016]
	081 Call 0x1C17CF4
	082 Move X0, 0x4E5000
	083 Move X0, [X0+1584]
	084 Call 0x1C17CF4
	085 Move X0, 0x4E5000
	086 Move X0, [X0+1592]
	087 Call 0x1C17CF4
	088 Move X0, 0x4CC000
	089 Move X0, [X0+544]
	090 Call 0x1C17CF4
	091 Move X0, 0x4E5000
	092 Move X0, [X0+1600]
	093 Call 0x1C17CF4
	094 Move X0, 0x4E5000
	095 Move X0, [X0+1608]
	096 Call 0x1C17CF4
	097 Move X0, 0x4E5000
	098 Move X0, [X0+1616]
	099 Call 0x1C17CF4
	100 Move X0, 0x4E5000
	101 Move X0, [X0+1624]
	102 Call 0x1C17CF4
	103 Move X0, 0x4B1000
	104 Move X0, [X0+2872]
	105 Call 0x1C17CF4
	106 Move X0, 0x4E5000
	107 Move X0, [X0+1632]
	108 Call 0x1C17CF4
	109 Move X0, 0x4E5000
	110 Move X0, [X0+1640]
	111 Call 0x1C17CF4
	112 Move X0, 0x4E5000
	113 Move X0, [X0+1648]
	114 Call 0x1C17CF4
	115 Move X0, 0x4E5000
	116 Move X0, [X0+1656]
	117 Call 0x1C17CF4
	118 Move X0, 0x4CC000
	119 Move X0, [X0+664]
	120 Call 0x1C17CF4
	121 Move X0, 0x4BC000
	122 Move X0, [X0+1888]
	123 Call 0x1C17CF4
	124 Move X0, 0x4E5000
	125 Move X0, [X0+1664]
	126 Call 0x1C17CF4
	127 Move X0, 0x4E5000
	128 Move X0, [X0+1672]
	129 Call 0x1C17CF4
	130 Move X0, 0x4E5000
	131 Move X0, [X0+1680]
	132 Call 0x1C17CF4
	133 Move X0, 0x4E5000
	134 Move X0, [X0+1688]
	135 Call 0x1C17CF4
	136 Move X0, 0x4E5000
	137 Move X0, [X0+1696]
	138 Call 0x1C17CF4
	139 Move X0, 0x4E5000
	140 Move X0, [X0+1704]
	141 Call 0x1C17CF4
	142 Move X0, 0x4E5000
	143 Move X0, [X0+1712]
	144 Call 0x1C17CF4
	145 Move W8, 1
	146 Move [X19+2478], W8
	147 Move X8, [X20]
	148 Move X8, [X8+184]
	149 Move X8, [X8]
	150 Compare X8, 0
	151 JumpIfEqual {166}
	152 Move X20, [X31+208]
	153 Move X19, [X31+216]
	154 Move X22, [X31+192]
	155 Move X21, [X31+200]
	156 Move X24, [X31+176]
	157 Move X23, [X31+184]
	158 Move X26, [X31+160]
	159 Move X25, [X31+168]
	160 Move X28, [X31+144]
	161 Move X27, [X31+152]
	162 Move X29, [X31+128]
	163 Move X30, [X31+136]
	164 Add X31, X31, 224
	165 Return 
	166 Move X8, 0x4E5000
	167 Move X8, [X8+1472]
	168 Move X0, [X8]
	169 Call 0x1C17F10
	170 Move X8, 0x4E5000
	171 Move X8, [X8+1464]
	172 Move X19, X0
	173 Move X1, [X8]
	174 Call Dictionary`2<Object, Int32Enum>..ctor, X0
	175 Move X8, [X20]
	176 Move W1, W31
	177 Move X8, [X8+184]
	178 Move [X8], X19
	179 Move X8, 0x4B1000
	180 Move X8, [X8+2872]
	181 Move X0, [X8]
	182 Call TextEditingUtilities.MapKey, X0, X1
	183 Move X8, 0x4BC000
	184 Move X8, [X8+1888]
	185 Move W1, 1
	186 Move X0, [X8]
	187 Call TextEditingUtilities.MapKey, X0, X1
	188 Move X8, 0x4CA000
	189 Move X8, [X8+4008]
	190 Move W1, 2
	191 Move X0, [X8]
	192 Call TextEditingUtilities.MapKey, X0, X1
	193 Move X8, 0x4CA000
	194 Move X8, [X8+4016]
	195 Move W1, 3
	196 Move X0, [X8]
	197 Call TextEditingUtilities.MapKey, X0, X1
	198 Move X8, 0x4CC000
	199 Move X8, [X8+248]
	200 Move W1, 18
	201 Move X0, [X8]
	202 Call TextEditingUtilities.MapKey, X0, X1
	203 Move X8, 0x4CC000
	204 Move X8, [X8+544]
	205 Move W1, 19
	206 Move X0, [X8]
	207 Call TextEditingUtilities.MapKey, X0, X1
	208 Move X8, 0x4E5000
	209 Move X8, [X8+1544]
	210 Move W1, 19
	211 Move X0, [X8]
	212 Call TextEditingUtilities.MapKey, X0, X1
	213 Move X0, X31
	214 Call SystemInfo.get_operatingSystemFamily
	215 Move X19, 0x4E5000
	216 Move X2, 0x4E5000
	217 Move X19, [X19+1528]
	218 Move X2, [X2+1480]
	219 NotImplemented "Instruction CMP not yet implemented."
	220 Move X0, [X2]
	221 Move W1, 10
	222 Move W25, 10
	223 Call TextEditingUtilities.MapKey, X0, X1
	224 Move X0, [X19]
	225 Move W1, 11
	226 Move W21, 11
	227 Call TextEditingUtilities.MapKey, X0, X1
	228 Move X8, 0x4E5000
	229 Move X8, [X8+1520]
	230 Move W1, 12
	231 Move X0, [X8]
	232 Call TextEditingUtilities.MapKey, X0, X1
	233 Move X8, 0x4E5000
	234 Move X8, [X8+1608]
	235 Move W1, 13
	236 Move X0, [X8]
	237 Call TextEditingUtilities.MapKey, X0, X1
	238 Move X9, 0x4E5000
	239 Move X10, 0x4E5000
	240 Move X11, 0x4E5000
	241 Move X12, 0x4E5000
	242 Move X13, 0x4E5000
	243 Move X14, 0x4E5000
	244 Move X16, 0x4E5000
	245 Move X0, 0x4E5000
	246 Move X3, 0x4E5000
	247 Move X19, 0x4E5000
	248 Move X2, 0x4E5000
	249 Move X30, 0x4E5000
	250 Move X8, 0x4E5000
	251 Move X9, [X9+1616]
	252 Move X10, [X10+1632]
	253 Move X11, [X11+1640]
	254 Move X12, [X12+1624]
	255 Move X13, [X13+1576]
	256 Move X14, [X14+1664]
	257 Move X16, [X16+1552]
	258 Move X0, [X0+1536]
	259 Move X3, [X3+1488]
	260 Move X19, [X19+1584]
	261 Move X2, [X2+1504]
	262 Move X30, [X30+1648]
	263 Move X8, [X8+1688]
	264 Move W24, W31
	265 Move W15, 22
	266 Move W17, 20
	267 Move W29, 21
	268 Move W20, 5
	269 Move W22, 4
	270 Move W23, 1
	271 Move W27, 19
	272 Move W6, 18
	273 Move W4, 24
	274 Move W5, 23
	275 Move W28, 7
	276 Move W26, 6
	277 Move W7, 14
	278 Move W1, 15
	279 Move X9, 0x4E5000
	280 Move X10, 0x4E5000
	281 Move X11, 0x4E5000
	282 Move X12, 0x4E5000
	283 Move X13, 0x4E4000
	284 Move X14, 0x4E4000
	285 Move X16, 0x4E4000
	286 Move X0, 0x4E4000
	287 Move X3, 0x4E4000
	288 Move X30, 0x4CB000
	289 Move X8, 0x4C8000
	290 Move X9, [X9+1696]
	291 Move X10, [X10+1512]
	292 Move X11, [X11+1672]
	293 Move X12, [X12+1712]
	294 Move X13, [X13+1616]
	295 Move X14, [X14+1496]
	296 Move X16, [X16+1560]
	297 Move X0, [X0+1568]
	298 Move X3, [X3+1680]
	299 Move X30, [X30+664]
	300 Move X8, [X8+3736]
	301 Move W29, 24
	302 Move W20, 23
	303 Move W22, 22
	304 Move W23, 20
	305 Move W24, 21
	306 Move W4, 16
	307 Move W5, 17
	308 Move W28, 14
	309 Move W26, 15
	310 Move W21, 13
	311 Move W25, 12
	312 Move W7, 11
	313 Move W1, 10
	314 Move W6, 15
	315 Move W27, 14
	316 Move W17, 23
	317 Move W15, 24
	318 Move [X31+16], X16
	319 Move [X31+24], X0
	320 Move X0, [X8]
	321 Move [X31+8], W6
	322 Move [X31+12], W27
	323 Move [X31+36], W24
	324 Move [X31+40], X14
	325 Move [X31+52], W23
	326 Move [X31+56], X13
	327 Move [X31+68], W22
	328 Move [X31+72], X12
	329 Move [X31+84], W20
	330 Move [X31+88], X11
	331 Move [X31+96], W29
	332 Move [X31+100], W17
	333 Move [X31+104], X10
	334 Move [X31+116], W15
	335 Move [X31+120], X9
	336 Move W29, W21
	337 Move W20, W25
	338 Move X21, X2
	339 Move X22, X3
	340 Move W25, W4
	341 Move W23, W5
	342 Move W27, W7
	343 Move X24, X30
	344 Call TextEditingUtilities.MapKey, X0, X1
	345 Move X0, [X24]
	346 Move W1, W27
	347 Call TextEditingUtilities.MapKey, X0, X1
	348 Move X8, 0x4E4000
	349 Move X8, [X8+1656]
	350 Move W1, W20
	351 Move X0, [X8]
	352 Call TextEditingUtilities.MapKey, X0, X1
	353 Move X8, 0x4E4000
	354 Move X8, [X8+1592]
	355 Move W1, W29
	356 Move X0, [X8]
	357 Call TextEditingUtilities.MapKey, X0, X1
	358 Move X8, 0x4E4000
	359 Move X8, [X8+1600]
	360 Move W1, W26
	361 Move X0, [X8]
	362 Call TextEditingUtilities.MapKey, X0, X1
	363 Move X8, 0x4E4000
	364 Move X8, [X8+1704]
	365 Move W1, W28
	366 Move X0, [X8]
	367 Call TextEditingUtilities.MapKey, X0, X1
	368 Move X0, [X21]
	369 Move W1, W23
	370 Call TextEditingUtilities.MapKey, X0, X1
	371 Move X0, [X19]
	372 Move W1, W25
	373 Call TextEditingUtilities.MapKey, X0, X1
	374 Move X0, [X22]
	375 Move W1, [X31+8]
	376 Call TextEditingUtilities.MapKey, X0, X1
	377 Move X8, [X31+24]
	378 Move W1, [X31+12]
	379 Move X0, [X8]
	380 Call TextEditingUtilities.MapKey, X0, X1
	381 Move X8, [X31+16]
	382 Move W1, [X31+36]
	383 Move X0, [X8]
	384 Call TextEditingUtilities.MapKey, X0, X1
	385 Move X8, [X31+40]
	386 Move W1, [X31+52]
	387 Move X0, [X8]
	388 Call TextEditingUtilities.MapKey, X0, X1
	389 Move X8, [X31+56]
	390 Move W1, [X31+68]
	391 Move X0, [X8]
	392 Call TextEditingUtilities.MapKey, X0, X1
	393 Move X8, [X31+72]
	394 Move W1, [X31+84]
	395 Move X0, [X8]
	396 Call TextEditingUtilities.MapKey, X0, X1
	397 Move X8, [X31+88]
	398 Move W1, [X31+96]
	399 Move X0, [X8]
	400 Call TextEditingUtilities.MapKey, X0, X1
	401 Move X8, [X31+104]
	402 Move W1, [X31+100]
	403 Move X0, [X8]
	404 Call TextEditingUtilities.MapKey, X0, X1
	405 Move X8, [X31+120]
	406 Move W1, [X31+116]
	407 Move X20, [X31+208]
	408 Move X19, [X31+216]
	409 Move X22, [X31+192]
	410 Move X21, [X31+200]
	411 Move X0, [X8]
	412 Move X24, [X31+176]
	413 Move X23, [X31+184]
	414 Move X26, [X31+160]
	415 Move X25, [X31+168]
	416 Move X28, [X31+144]
	417 Move X27, [X31+152]
	418 Move X29, [X31+128]
	419 Move X30, [X31+136]
	420 Add X31, X31, 224
	421 Call TextEditingUtilities.MapKey, X0, X1
	422 Return 

Method: System.Boolean DeleteLineBack()

Disassembly:
	0x03C7E73C STRB W9, [X19 + 0x58]
	0x03C7E740 MOV X0, X19
	0x03C7E744 LDP X2, X1, [X8 + 0x198]
	0x03C7E748 LDP X20, X19, [X31 + 0x10]
	0x03C7E74C LDP X30, X21, [X31], #0x20
	0x03C7E750 BR X2
	0x03C7E754 LDR W0, [X0 + 0x54]
	0x03C7E758 RET
	0x03C7E75C STP X30, X21, [X31 - 0x20]!
	0x03C7E760 STP X20, X19, [X31 + 0x10]
	0x03C7E764 MOV X20, X0
	0x03C7E768 LDR W21, [X20 + 0x54]!
	0x03C7E76C MOV X19, X0
	0x03C7E770 STR W1, [X20]
	0x03C7E774 MOV X1, X20
	0x03C7E778 BL 0x3C7E338
	0x03C7E77C LDR W8, [X20]
	0x03C7E780 CMP W8, W21
	0x03C7E784 B.NE 0x3C7E794
	0x03C7E788 LDP X20, X19, [X31 + 0x10]
	0x03C7E78C LDP X30, X21, [X31], #0x20
	0x03C7E790 RET
	0x03C7E794 LDR X8, [X19]
	0x03C7E798 MOV X0, X19
	0x03C7E79C LDP X20, X19, [X31 + 0x10]
	0x03C7E7A0 LDP X2, X1, [X8 + 0x1A8]
	0x03C7E7A4 LDP X30, X21, [X31], #0x20
	0x03C7E7A8 BR X2
	0x03C7E7AC MOVN W8, 0x0
	0x03C7E7B0 STRB W31, [X0 + 0x29]
	0x03C7E7B4 STR W8, [X0 + 0x78]
	0x03C7E7B8 RET
	0x03C7E7BC STP X30, X21, [X31 - 0x20]!
	0x03C7E7C0 STP X20, X19, [X31 + 0x10]
	0x03C7E7C4 ADRP X21, 0x768000
	0x03C7E7C8 ADRP X20, 0x49C000
	0x03C7E7CC LDRB W8, [X21 + 0x9B5]
	0x03C7E7D0 LDR X20, [X20 + 0x890]
	0x03C7E7D4 MOV X19, X0
	0x03C7E7D8 TBNZ X8, 0x0, 0x3C7E7FC
	0x03C7E7DC ADRP X0, 0x4A0000
	0x03C7E7E0 LDR X0, [X0 + 0xBD0]
	0x03C7E7E4 BL 0x1C16CF4
	0x03C7E7E8 ADRP X0, 0x49C000
	0x03C7E7EC LDR X0, [X0 + 0x890]
	0x03C7E7F0 BL 0x1C16CF4
	0x03C7E7F4 MOVZ W8, 0x1
	0x03C7E7F8 STRB W8, [X21 + 0x9B5]
	0x03C7E7FC STR X31, [X19 + 0x10]
	0x03C7E800 STR W31, [X19 + 0x18]
	0x03C7E804 LDR X0, [X20]
	0x03C7E808 LDR W8, [X0 + 0xE0]
	0x03C7E80C CBNZ W8, 0x3C7E814
	0x03C7E810 BL 0x1C16DFC
	0x03C7E814 ADRP X20, 0x4A0000
	0x03C7E818 LDR X20, [X20 + 0xBD0]
	0x03C7E81C MOV X0, X31
	0x03C7E820 BL 0x3C6BB04
	0x03C7E824 STR X0, [X19 + 0x20]
	0x03C7E828 STRH W31, [X19 + 0x28]
	0x03C7E82C STRB W31, [X19 + 0x2A]
	0x03C7E830 ADRP X21, 0x75B000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, X0
	006 Call TextEditingUtilities.RestoreCursorState, X0
	007 Move X0, X19
	008 Call TextEditingUtilities.get_hasSelection, X0
	009 Move TEMP, X0
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfNotEqual {16}
	013 Move X0, X19
	014 Call TextEditingUtilities.DeleteSelection, X0
	015 Move W0, 1
	016 Move X0, X19
	017 Call TextEditingUtilities.get_cursorIndex, X0
	018 Move W21, W0
	019 Move W20, W21
	020 Compare W21, 0
	021 JumpIfEqual {31}
	022 Move X0, [X19+40]
	023 Compare X0, 0
	024 JumpIfEqual {69}
	025 Subtract W21, W20, 1
	026 Move W1, W21
	027 Move X2, X31
	028 Call String.get_Chars, X0, X1
	029 And W8, W0, 0xFFFF
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X0, X19
	032 Call TextEditingUtilities.get_cursorIndex, X0
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move W0, W31
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X30, [X31+32]
	038 Move X21, [X31+40]
	039 Return X0
	040 Move X21, [X19+40]
	041 Move X0, X19
	042 Call TextEditingUtilities.get_cursorIndex, X0
	043 Compare X21, 0
	044 JumpIfEqual {69}
	045 Subtract W2, W0, W20
	046 Move X0, X21
	047 Move W1, W20
	048 Move X3, X31
	049 Call String.Remove, X0, X1, X2
	050 Move X1, X0
	051 Move X0, X19
	052 Call TextEditingUtilities.set_text, X0, X1
	053 Move X21, [X19+16]
	054 Move X0, X19
	055 Move W1, W20
	056 Call TextEditingUtilities.set_cursorIndex, X0, X1
	057 Compare X21, 0
	058 JumpIfEqual {69}
	059 Move W8, [X21+56]
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move X8, [X21+72]
	062 Move [X21+56], W20
	063 Compare X8, 0
	064 JumpIfEqual {15}
	065 Move X9, [X8+24]
	066 Move X0, [X8+64]
	067 Move X1, [X8+40]
	068 NotImplemented "Instruction BLR not yet implemented."
	069 Call 0x1C17F20

Method: System.Boolean DeleteWordBack()

Disassembly:
	0x03C7E680 BL 0x3C74840
	0x03C7E684 FSUB S1, S11, S8
	0x03C7E688 FADD S1, S1, S0
	0x03C7E68C FCMP S11, S1
	0x03C7E690 B.PL 0x3C7E6A0
	0x03C7E694 MOV V1.16B, V11.16B
	0x03C7E698 B 0x3C7E6A0
	0x03C7E69C LDR V1, [X19 + 0x30]
	0x03C7E6A0 FSUB S0, S10, S1
	0x03C7E6A4 FMOV S2, W31
	0x03C7E6A8 FCMP S0, S8
	0x03C7E6AC FCCMP S1, S2, 0x4, MI
	0x03C7E6B0 FSUB S0, S10, S8
	0x03C7E6B4 FCSEL S0, S1, S0, LE
	0x03C7E6B8 FMAX S0, S0, S9
	0x03C7E6BC STR S0, [X19 + 0x30]
	0x03C7E6C0 STRB W31, [X19 + 0x58]
	0x03C7E6C4 LDP X20, X19, [X31 + 0x60]
	0x03C7E6C8 LDP X22, X21, [X31 + 0x50]
	0x03C7E6CC LDP X24, X23, [X31 + 0x40]
	0x03C7E6D0 LDR X30, [X31 + 0x30]
	0x03C7E6D4 LDP D9, D8, [X31 + 0x20]
	0x03C7E6D8 LDP D11, D10, [X31 + 0x10]
	0x03C7E6DC LDP D13, D12, [X31], #0x70
	0x03C7E6E0 RET
	0x03C7E6E4 BL 0x1C16F20
	0x03C7E6E8 LDP S0, S1, [X0 + 0x40]
	0x03C7E6EC LDP S2, S3, [X0 + 0x48]
	0x03C7E6F0 RET
	0x03C7E6F4 LDR W0, [X0 + 0x50]
	0x03C7E6F8 RET
	0x03C7E6FC STP X30, X21, [X31 - 0x20]!
	0x03C7E700 STP X20, X19, [X31 + 0x10]
	0x03C7E704 MOV X20, X0
	0x03C7E708 LDR W21, [X20 + 0x50]!
	0x03C7E70C MOV X19, X0
	0x03C7E710 STR W1, [X20]
	0x03C7E714 MOV X1, X20
	0x03C7E718 BL 0x3C7E338
	0x03C7E71C LDR W8, [X20]
	0x03C7E720 CMP W8, W21
	0x03C7E724 B.NE 0x3C7E734
	0x03C7E728 LDP X20, X19, [X31 + 0x10]
	0x03C7E72C LDP X30, X21, [X31], #0x20
	0x03C7E730 RET
	0x03C7E734 LDR X8, [X19]
	0x03C7E738 MOVZ W9, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, X0
	006 Call TextEditingUtilities.RestoreCursorState, X0
	007 Move X0, X19
	008 Call TextEditingUtilities.get_hasSelection, X0
	009 Move TEMP, X0
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfNotEqual {15}
	013 Move X0, X19
	014 Call TextEditingUtilities.DeleteSelection, X0
	015 Move X20, [X19+16]
	016 Move X0, X19
	017 Call TextEditingUtilities.get_cursorIndex, X0
	018 Compare X20, 0
	019 JumpIfEqual {53}
	020 Move W1, W0
	021 Move X0, X20
	022 Call TextSelectingUtilities.FindEndOfPreviousWord, X0, X1
	023 Move W20, W0
	024 Move X0, X19
	025 Call TextEditingUtilities.get_cursorIndex, X0
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move W0, W31
	028 Move X21, [X19+40]
	029 Move X0, X19
	030 Call TextEditingUtilities.get_cursorIndex, X0
	031 Compare X21, 0
	032 JumpIfEqual {53}
	033 Subtract W2, W0, W20
	034 Move X0, X21
	035 Move W1, W20
	036 Move X3, X31
	037 Call String.Remove, X0, X1, X2
	038 Move X1, X0
	039 Move X0, X19
	040 Call TextEditingUtilities.set_text, X0, X1
	041 Move X0, X19
	042 Move W1, W20
	043 Call TextEditingUtilities.set_cursorIndex, X0, X1
	044 Move X0, X19
	045 Move W1, W20
	046 Call TextEditingUtilities.set_selectIndex, X0, X1
	047 Move W0, 1
	048 Move X20, [X31+16]
	049 Move X19, [X31+24]
	050 Move X30, [X31+32]
	051 Move X21, [X31+40]
	052 Return X0
	053 Call 0x1C17F20

Method: System.Boolean DeleteWordForward()

Disassembly:
	0x03C7E834 LDRB W8, [X21 + 0x78F]
	0x03C7E838 CBNZ W8, 0x3C7E850
	0x03C7E83C ADRP X0, 0x47D000
	0x03C7E840 LDR X0, [X0 + 0xF08]
	0x03C7E844 BL 0x1C16CF4
	0x03C7E848 MOVZ W8, 0x1
	0x03C7E84C STRB W8, [X21 + 0x78F]
	0x03C7E850 ADRP X8, 0x47D000
	0x03C7E854 LDR X8, [X8 + 0xF08]
	0x03C7E858 LDR X8, [X8]
	0x03C7E85C LDR X8, [X8 + 0xB8]
	0x03C7E860 LDR V0, [X8]
	0x03C7E864 STUR D0, [X19 + 0x2C]
	0x03C7E868 LDR X0, [X20]
	0x03C7E86C BL 0x1C16F10
	0x03C7E870 MOV X1, X31
	0x03C7E874 MOV X20, X0
	0x03C7E878 BL 0x3C6CE00
	0x03C7E87C MOVN W8, 0x0
	0x03C7E880 STR X20, [X19 + 0x38]
	0x03C7E884 STRB W31, [X19 + 0x6C]
	0x03C7E888 STR W31, [X19 + 0x70]
	0x03C7E88C STRH W31, [X19 + 0x74]
	0x03C7E890 STR X31, [X19 + 0x50]
	0x03C7E894 STRB W31, [X19 + 0x58]
	0x03C7E898 STR W8, [X19 + 0x78]
	0x03C7E89C MOV X0, X19
	0x03C7E8A0 LDP X20, X19, [X31 + 0x10]
	0x03C7E8A4 MOV X1, X31
	0x03C7E8A8 LDP X30, X21, [X31], #0x20
	0x03C7E8AC B 0x33BDD8C
	0x03C7E8B0 STP X30, X19, [X31 - 0x10]!
	0x03C7E8B4 LDRB W8, [X0 + 0x28]
	0x03C7E8B8 MOV X19, X0
	0x03C7E8BC CBZ W8, 0x3C7E8DC
	0x03C7E8C0 MOV X0, X19
	0x03C7E8C4 MOV W1, W31
	0x03C7E8C8 BL 0x3C7E75C
	0x03C7E8CC MOV X0, X19
	0x03C7E8D0 MOV W1, W31
	0x03C7E8D4 BL 0x3C7E6FC
	0x03C7E8D8 B 0x3C7E8E4
	0x03C7E8DC MOV X0, X19
	0x03C7E8E0 BL 0x3C7E8F4
	0x03C7E8E4 MOVZ W8, 0x1
	0x03C7E8E8 STRB W8, [X19 + 0x2B]
	0x03C7E8EC LDP X30, X19, [X31], #0x10

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X0
	007 Call TextEditingUtilities.RestoreCursorState, X0
	008 Move X0, X19
	009 Call TextEditingUtilities.get_hasSelection, X0
	010 Move TEMP, X0
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfNotEqual {16}
	014 Move X0, X19
	015 Call TextEditingUtilities.DeleteSelection, X0
	016 Move X20, [X19+16]
	017 Move X0, X19
	018 Call TextEditingUtilities.get_cursorIndex, X0
	019 Compare X20, 0
	020 JumpIfEqual {53}
	021 Move W1, W0
	022 Move X0, X20
	023 Call TextSelectingUtilities.FindStartOfNextWord, X0, X1
	024 Move W20, W0
	025 Move X0, X19
	026 Call TextEditingUtilities.get_cursorIndex, X0
	027 Move X21, [X19+40]
	028 Compare X21, 0
	029 JumpIfEqual {53}
	030 Move W8, [X21+16]
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move X0, X19
	033 Call TextEditingUtilities.get_cursorIndex, X0
	034 Move W22, W0
	035 Move X0, X19
	036 Call TextEditingUtilities.get_cursorIndex, X0
	037 Subtract W2, W20, W0
	038 Move X0, X21
	039 Move W1, W22
	040 Move X3, X31
	041 Call String.Remove, X0, X1, X2
	042 Move X1, X0
	043 Move X0, X19
	044 Call TextEditingUtilities.set_text, X0, X1
	045 Move W0, 1
	046 Move W0, W31
	047 Move X20, [X31+32]
	048 Move X19, [X31+40]
	049 Move X22, [X31+16]
	050 Move X21, [X31+24]
	051 Move X30, [X31+48]
	052 Return X0
	053 Call 0x1C17F20

Method: System.Boolean Delete()

Disassembly:
	0x03C7E434 STUR D0, [X19 + 0x2C]
	0x03C7E438 LDP X20, X19, [X31 + 0x30]
	0x03C7E43C LDP D11, D10, [X31], #0x40
	0x03C7E440 B 0x3C7E444
	0x03C7E444 STP D13, D12, [X31 - 0x70]!
	0x03C7E448 STP D11, D10, [X31 + 0x10]
	0x03C7E44C STP D9, D8, [X31 + 0x20]
	0x03C7E450 STR X30, [X31 + 0x30]
	0x03C7E454 STP X24, X23, [X31 + 0x40]
	0x03C7E458 STP X22, X21, [X31 + 0x50]
	0x03C7E45C STP X20, X19, [X31 + 0x60]
	0x03C7E460 MOV X19, X0
	0x03C7E464 LDR X0, [X0 + 0x20]
	0x03C7E468 CBZ X0, 0x3C7E6E4
	0x03C7E46C LDR X1, [X19 + 0x38]
	0x03C7E470 LDP S2, S3, [X19 + 0x48]
	0x03C7E474 LDR W2, [X19 + 0x50]
	0x03C7E478 FMOV S0, W31
	0x03C7E47C FMOV S1, W31
	0x03C7E480 MOV X3, X31
	0x03C7E484 BL 0x3C75028
	0x03C7E488 LDR X0, [X19 + 0x20]
	0x03C7E48C STP S0, S1, [X19 + 0x5C]
	0x03C7E490 CBZ X0, 0x3C7E6E4
	0x03C7E494 MOV X1, X31
	0x03C7E498 BL 0x3C74750
	0x03C7E49C CBZ X0, 0x3C7E6E4
	0x03C7E4A0 LDP S2, S3, [X19 + 0x48]
	0x03C7E4A4 LDP S0, S1, [X19 + 0x40]
	0x03C7E4A8 MOV X1, X31
	0x03C7E4AC BL 0x3C0CA4C
	0x03C7E4B0 LDR X0, [X19 + 0x20]
	0x03C7E4B4 CBZ X0, 0x3C7E6E4
	0x03C7E4B8 LDP S13, S12, [X19 + 0x5C]
	0x03C7E4BC MOV X1, X31
	0x03C7E4C0 MOV V9.16B, V2.16B
	0x03C7E4C4 MOV V8.16B, V3.16B
	0x03C7E4C8 BL 0x3C74750
	0x03C7E4CC CBZ X0, 0x3C7E6E4
	0x03C7E4D0 MOV X1, X31
	0x03C7E4D4 BL 0x3C0C8A8
	0x03C7E4D8 LDR X8, [X19 + 0x20]
	0x03C7E4DC CBZ X8, 0x3C7E6E4
	0x03C7E4E0 MOV W21, W0
	0x03C7E4E4 MOV X0, X8
	0x03C7E4E8 MOV X1, X31
	0x03C7E4EC BL 0x3C74750

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X0
	007 Call TextEditingUtilities.RestoreCursorState, X0
	008 Move X0, X19
	009 Call TextEditingUtilities.get_hasSelection, X0
	010 Move TEMP, X0
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfNotEqual {16}
	014 Move X0, X19
	015 Call TextEditingUtilities.DeleteSelection, X0
	016 Move X0, X19
	017 Call TextEditingUtilities.get_cursorIndex, X0
	018 Move X20, [X19+40]
	019 Compare X20, 0
	020 JumpIfEqual {53}
	021 Move W8, [X20+16]
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move X0, X19
	024 Call TextEditingUtilities.get_cursorIndex, X0
	025 Move X22, [X19+16]
	026 Move W21, W0
	027 Move X0, X19
	028 Call TextEditingUtilities.get_cursorIndex, X0
	029 Compare X22, 0
	030 JumpIfEqual {53}
	031 Move W1, W0
	032 Move X0, X22
	033 Call TextSelectingUtilities.NextCodePointIndex, X0, X1
	034 Move W22, W0
	035 Move X0, X19
	036 Call TextEditingUtilities.get_cursorIndex, X0
	037 Subtract W2, W22, W0
	038 Move X0, X20
	039 Move W1, W21
	040 Move X3, X31
	041 Call String.Remove, X0, X1, X2
	042 Move X1, X0
	043 Move X0, X19
	044 Call TextEditingUtilities.set_text, X0, X1
	045 Move W0, 1
	046 Move W0, W31
	047 Move X20, [X31+32]
	048 Move X19, [X31+40]
	049 Move X22, [X31+16]
	050 Move X21, [X31+24]
	051 Move X30, [X31+48]
	052 Return X0
	053 Call 0x1C17F20

Method: System.Boolean Backspace()

Disassembly:
	0x03C7E4F0 CBZ X0, 0x3C7E6E4
	0x03C7E4F4 MOV X1, X31
	0x03C7E4F8 BL 0x3C0C920
	0x03C7E4FC LDR X8, [X19 + 0x20]
	0x03C7E500 CBZ X8, 0x3C7E6E4
	0x03C7E504 LDR X1, [X19 + 0x38]
	0x03C7E508 MOV W20, W0
	0x03C7E50C MOV X0, X8
	0x03C7E510 MOV X2, X31
	0x03C7E514 BL 0x3C75030
	0x03C7E518 LDR X0, [X19 + 0x20]
	0x03C7E51C CBZ X0, 0x3C7E6E4
	0x03C7E520 MOV V10.16B, V0.16B
	0x03C7E524 LDR V0, [X19 + 0x48]
	0x03C7E528 LDR X1, [X19 + 0x38]
	0x03C7E52C MOV X2, X31
	0x03C7E530 BL 0x3C75034
	0x03C7E534 LDR X0, [X19 + 0x20]
	0x03C7E538 CBZ X0, 0x3C7E6E4
	0x03C7E53C MOV X1, X31
	0x03C7E540 MOV V11.16B, V0.16B
	0x03C7E544 BL 0x3C74750
	0x03C7E548 CBZ X0, 0x3C7E6E4
	0x03C7E54C MOV X1, X31
	0x03C7E550 BL 0x3C0C8A8
	0x03C7E554 LDR X8, [X19 + 0x20]
	0x03C7E558 CBZ X8, 0x3C7E6E4
	0x03C7E55C MOV W22, W0
	0x03C7E560 MOV X0, X8
	0x03C7E564 MOV X1, X31
	0x03C7E568 BL 0x3C74750
	0x03C7E56C CBZ X0, 0x3C7E6E4
	0x03C7E570 MOV X1, X31
	0x03C7E574 BL 0x3C0C8E4
	0x03C7E578 LDR X8, [X19 + 0x20]
	0x03C7E57C CBZ X8, 0x3C7E6E4
	0x03C7E580 MOV W23, W0
	0x03C7E584 MOV X0, X8
	0x03C7E588 MOV X1, X31
	0x03C7E58C BL 0x3C74750
	0x03C7E590 CBZ X0, 0x3C7E6E4
	0x03C7E594 MOV X1, X31
	0x03C7E598 BL 0x3C0C920
	0x03C7E59C LDR X8, [X19 + 0x20]
	0x03C7E5A0 CBZ X8, 0x3C7E6E4
	0x03C7E5A4 MOV W24, W0
	0x03C7E5A8 MOV X0, X8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, X0
	006 Call TextEditingUtilities.RestoreCursorState, X0
	007 Move X0, X19
	008 Call TextEditingUtilities.get_hasSelection, X0
	009 Move TEMP, X0
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfNotEqual {15}
	013 Move X0, X19
	014 Call TextEditingUtilities.DeleteSelection, X0
	015 Move X0, X19
	016 Call TextEditingUtilities.get_cursorIndex, X0
	017 NotImplemented "Instruction CMP not yet implemented."
	018 Move X20, [X19+16]
	019 Move X0, X19
	020 Call TextEditingUtilities.get_cursorIndex, X0
	021 Compare X20, 0
	022 JumpIfEqual {57}
	023 Move W1, W0
	024 Move X0, X20
	025 Call TextSelectingUtilities.PreviousCodePointIndex, X0, X1
	026 Move X21, [X19+40]
	027 Move W20, W0
	028 Move X0, X19
	029 Call TextEditingUtilities.get_cursorIndex, X0
	030 Compare X21, 0
	031 JumpIfEqual {57}
	032 Subtract W2, W0, W20
	033 Move X0, X21
	034 Move W1, W20
	035 Move X3, X31
	036 Call String.Remove, X0, X1, X2
	037 Move X1, X0
	038 Move X0, X19
	039 Call TextEditingUtilities.set_text, X0, X1
	040 Move X8, [X19+16]
	041 Compare X8, 0
	042 JumpIfEqual {57}
	043 Move TEMP, 0
	044 Not TEMP
	045 Move W9, TEMP
	046 Move [X8+52], W20
	047 Move [X8+56], W20
	048 Move [X8+24], W31
	049 Move [X8+20], W9
	050 Move W0, 1
	051 Move X20, [X31+16]
	052 Move X19, [X31+24]
	053 Move X30, [X31+32]
	054 Move X21, [X31+40]
	055 Return X0
	056 Move W0, W31
	057 Call 0x1C17F20

Method: System.Boolean DeleteSelection()

Disassembly:
	0x03C7E980 STUR D0, [X19 + 0x2C]
	0x03C7E984 LDP X20, X19, [X31 + 0x10]
	0x03C7E988 LDR X30, [X31], #0x20
	0x03C7E98C RET
	0x03C7E990 STR X30, [X31 - 0x20]!
	0x03C7E994 STP X20, X19, [X31 + 0x10]
	0x03C7E998 LDRB W8, [X0 + 0x29]
	0x03C7E99C CBNZ W8, 0x3C7EA04
	0x03C7E9A0 LDR X8, [X0]
	0x03C7E9A4 LDR X20, [X0 + 0x20]
	0x03C7E9A8 MOV X19, X0
	0x03C7E9AC LDP X9, X1, [X8 + 0x178]
	0x03C7E9B0 BLR X9
	0x03C7E9B4 CBZ X20, 0x3C7EA10
	0x03C7E9B8 LDR W2, [X19 + 0x50]
	0x03C7E9BC LDR X1, [X19 + 0x38]
	0x03C7E9C0 MOV X0, X20
	0x03C7E9C4 MOV X3, X31
	0x03C7E9C8 BL 0x3C75028
	0x03C7E9CC LDR X8, [X19]
	0x03C7E9D0 STP S0, S1, [X19 + 0x5C]
	0x03C7E9D4 LDR X20, [X19 + 0x20]
	0x03C7E9D8 MOV X0, X19
	0x03C7E9DC LDP X9, X1, [X8 + 0x178]
	0x03C7E9E0 BLR X9
	0x03C7E9E4 CBZ X20, 0x3C7EA10
	0x03C7E9E8 LDR W2, [X19 + 0x54]
	0x03C7E9EC LDR X1, [X19 + 0x38]
	0x03C7E9F0 MOV X0, X20
	0x03C7E9F4 MOV X3, X31
	0x03C7E9F8 BL 0x3C75028
	0x03C7E9FC STP S0, S1, [X19 + 0x64]
	0x03C7EA00 STRB W31, [X19 + 0x29]
	0x03C7EA04 LDP X20, X19, [X31 + 0x10]
	0x03C7EA08 LDR X30, [X31], #0x20
	0x03C7EA0C RET
	0x03C7EA10 BL 0x1C16F20
	0x03C7EA14 MOV W2, W31
	0x03C7EA18 B 0x3C7EA1C
	0x03C7EA1C STR X30, [X31 - 0x40]!
	0x03C7EA20 STP X24, X23, [X31 + 0x10]
	0x03C7EA24 STP X22, X21, [X31 + 0x20]
	0x03C7EA28 STP X20, X19, [X31 + 0x30]
	0x03C7EA2C ADRP X22, 0x768000
	0x03C7EA30 LDRB W8, [X22 + 0x9B6]
	0x03C7EA34 MOV W20, W2
	0x03C7EA38 MOV X19, X1
	0x03C7EA3C MOV X21, X0
	0x03C7EA40 TBNZ X8, 0x0, 0x3C7EA70
	0x03C7EA44 ADRP X0, 0x4E2000
	0x03C7EA48 LDR X0, [X0 + 0x6D0]
	0x03C7EA4C BL 0x1C16CF4
	0x03C7EA50 ADRP X0, 0x4E2000
	0x03C7EA54 LDR X0, [X0 + 0x6D8]
	0x03C7EA58 BL 0x1C16CF4
	0x03C7EA5C ADRP X0, 0x4E2000
	0x03C7EA60 LDR X0, [X0 + 0x2A0]
	0x03C7EA64 BL 0x1C16CF4
	0x03C7EA68 MOVZ W8, 0x1
	0x03C7EA6C STRB W8, [X22 + 0x9B6]
	0x03C7EA70 BL 0x3C7EB38
	0x03C7EA74 CBZ X19, 0x3C7EB34
	0x03C7EA78 ADRP X24, 0x4E2000
	0x03C7EA7C LDR X24, [X24 + 0x2A0]
	0x03C7EA80 MOV X0, X19
	0x03C7EA84 MOV X1, X31
	0x03C7EA88 BL 0x3C62EF0
	0x03C7EA8C MOV W22, W0
	0x03C7EA90 MOV X0, X19
	0x03C7EA94 MOV X1, X31
	0x03C7EA98 BL 0x3C62EF0
	0x03C7EA9C AND W1, W0, 0xFFFFFFDF
	0x03C7EAA0 MOV X0, X19
	0x03C7EAA4 MOV X2, X31
	0x03C7EAA8 BL 0x3C62F2C
	0x03C7EAAC LDR X8, [X24]
	0x03C7EAB0 LDR X8, [X8 + 0xB8]
	0x03C7EAB4 LDR X0, [X8]
	0x03C7EAB8 CBZ X0, 0x3C7EB34
	0x03C7EABC ADRP X8, 0x4E2000
	0x03C7EAC0 LDR X8, [X8 + 0x6D0]
	0x03C7EAC4 MOV X1, X19
	0x03C7EAC8 LDR X2, [X8]
	0x03C7EACC BL 0x2AA2210
	0x03C7EAD0 MOV W23, W0
	0x03C7EAD4 TBZ X0, 0x0, 0x3C7EB0C
	0x03C7EAD8 LDR X8, [X24]
	0x03C7EADC LDR X8, [X8 + 0xB8]
	0x03C7EAE0 LDR X0, [X8]
	0x03C7EAE4 CBZ X0, 0x3C7EB34
	0x03C7EAE8 ADRP X8, 0x4E2000
	0x03C7EAEC LDR X8, [X8 + 0x6D8]
	0x03C7EAF0 MOV X1, X19
	0x03C7EAF4 LDR X2, [X8]
	0x03C7EAF8 BL 0x2AA1F9C
	0x03C7EAFC MOV W1, W0
	0x03C7EB00 AND W2, W20, 0x1
	0x03C7EB04 MOV X0, X21
	0x03C7EB08 BL 0x3C7F558
	0x03C7EB0C MOV X0, X19
	0x03C7EB10 MOV W1, W22
	0x03C7EB14 MOV X2, X31
	0x03C7EB18 BL 0x3C62F2C
	0x03C7EB1C AND W0, W23, 0x1
	0x03C7EB20 LDP X20, X19, [X31 + 0x30]
	0x03C7EB24 LDP X22, X21, [X31 + 0x20]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X20, X0
	010 Call TextEditingUtilities.get_cursorIndex, X0
	011 Move W19, W0
	012 Move X0, X20
	013 Call TextEditingUtilities.get_selectIndex, X0
	014 Move W21, W0
	015 NotImplemented "Instruction CMP not yet implemented."
	016 Move X0, X20
	017 Call TextEditingUtilities.get_cursorIndex, X0
	018 Move W23, W0
	019 Move X0, X20
	020 Call TextEditingUtilities.get_selectIndex, X0
	021 Move X22, [X20+40]
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move X0, X20
	024 Call TextEditingUtilities.get_cursorIndex, X0
	025 Compare X22, 0
	026 JumpIfEqual {122}
	027 Move W2, W0
	028 Move X0, X22
	029 Move W1, W31
	030 Move X3, X31
	031 Call String.Substring, X0, X1, X2
	032 Move X23, [X20+40]
	033 Move X22, X0
	034 Move X0, X20
	035 Call TextEditingUtilities.get_selectIndex, X0
	036 Move X8, [X20+40]
	037 Compare X8, 0
	038 JumpIfEqual {122}
	039 Move W25, [X8+16]
	040 Move W24, W0
	041 Move X0, X20
	042 Call TextEditingUtilities.get_selectIndex, X0
	043 Compare X23, 0
	044 JumpIfEqual {122}
	045 Subtract W2, W25, W0
	046 Move X0, X23
	047 Move W1, W24
	048 Move X3, X31
	049 Call String.Substring, X0, X1, X2
	050 Move X1, X0
	051 Move X0, X22
	052 Move X2, X31
	053 Call String.Concat, X0, X1
	054 Move X1, X0
	055 Move X0, X20
	056 Call TextEditingUtilities.set_text, X0, X1
	057 Move X22, [X20+16]
	058 Move X0, X20
	059 Call TextEditingUtilities.get_cursorIndex, X0
	060 Compare X22, 0
	061 JumpIfEqual {122}
	062 Move [X22+56], W0
	063 Move X0, X20
	064 Call TextEditingUtilities.get_selectIndex, X0
	065 Compare X22, 0
	066 JumpIfEqual {122}
	067 Move W2, W0
	068 Move X0, X22
	069 Move W1, W31
	070 Move X3, X31
	071 Call String.Substring, X0, X1, X2
	072 Move X23, [X20+40]
	073 Move X22, X0
	074 Move X0, X20
	075 Call TextEditingUtilities.get_cursorIndex, X0
	076 Move X8, [X20+40]
	077 Compare X8, 0
	078 JumpIfEqual {122}
	079 Move W25, [X8+16]
	080 Move W24, W0
	081 Move X0, X20
	082 Call TextEditingUtilities.get_cursorIndex, X0
	083 Compare X23, 0
	084 JumpIfEqual {122}
	085 Subtract W2, W25, W0
	086 Move X0, X23
	087 Move W1, W24
	088 Move X3, X31
	089 Call String.Substring, X0, X1, X2
	090 Move X1, X0
	091 Move X0, X22
	092 Move X2, X31
	093 Call String.Concat, X0, X1
	094 Move X1, X0
	095 Move X0, X20
	096 Call TextEditingUtilities.set_text, X0, X1
	097 Move X22, [X20+16]
	098 Move X0, X20
	099 Call TextEditingUtilities.get_selectIndex, X0
	100 Compare X22, 0
	101 JumpIfEqual {122}
	102 Move [X22+52], W0
	103 Move X8, [X20+16]
	104 Compare X8, 0
	105 JumpIfEqual {122}
	106 Move TEMP, 0
	107 Not TEMP
	108 Move W9, TEMP
	109 Move [X8+24], W31
	110 Move [X8+20], W9
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Move X20, [X31+48]
	113 Move X19, [X31+56]
	114 Move X22, [X31+32]
	115 Move X21, [X31+40]
	116 Move X24, [X31+16]
	117 Move X23, [X31+24]
	118 NotImplemented "Instruction CSET not yet implemented."
	119 Move X30, [X31+64]
	120 Move X25, [X31+72]
	121 Return X0
	122 Call 0x1C17F20

Method: System.Void ReplaceSelection(System.String replace)

Disassembly:
	0x03C7C79C LDR X8, [X19 + 0x40]
	0x03C7C7A0 STR W0, [X19 + 0x34]
	0x03C7C7A4 CBZ X8, 0x3C7C7B8
	0x03C7C7A8 LDR X9, [X8 + 0x18]
	0x03C7C7AC LDR X0, [X8 + 0x40]
	0x03C7C7B0 LDR X1, [X8 + 0x28]
	0x03C7C7B4 BLR X9
	0x03C7C7B8 LDR W1, [X19 + 0x34]
	0x03C7C7BC LDR X20, [X19 + 0x28]
	0x03C7C7C0 MOV X0, X19
	0x03C7C7C4 BL 0x3C823B4
	0x03C7C7C8 CBZ X20, 0x3C7C860
	0x03C7C7CC MOV W1, W0
	0x03C7C7D0 MOV X0, X20
	0x03C7C7D4 MOV X2, X31
	0x03C7C7D8 BL 0x3CCA4D0
	0x03C7C7DC LDR W8, [X19 + 0x38]
	0x03C7C7E0 MOV W20, W0
	0x03C7C7E4 CMP W8, W0
	0x03C7C7E8 B.EQ 0x3C7C808
	0x03C7C7EC LDR X8, [X19 + 0x48]
	0x03C7C7F0 STR W20, [X19 + 0x38]
	0x03C7C7F4 CBZ X8, 0x3C7C808
	0x03C7C7F8 LDR X9, [X8 + 0x18]
	0x03C7C7FC LDR X0, [X8 + 0x40]
	0x03C7C800 LDR X1, [X8 + 0x28]
	0x03C7C804 BLR X9
	0x03C7C808 LDR W8, [X19 + 0x34]
	0x03C7C80C CMP W8, W20
	0x03C7C810 B.EQ 0x3C7C834
	0x03C7C814 LDR X8, [X19 + 0x40]
	0x03C7C818 STR W20, [X19 + 0x34]
	0x03C7C81C CBZ X8, 0x3C7C834
	0x03C7C820 LDR X9, [X8 + 0x18]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, X1
	006 Move X20, X0
	007 Call TextEditingUtilities.RestoreCursorState, X0
	008 Move X0, X20
	009 Call TextEditingUtilities.DeleteSelection, X0
	010 Move X21, [X20+40]
	011 Move X0, X20
	012 Call TextEditingUtilities.get_cursorIndex, X0
	013 Compare X21, 0
	014 JumpIfEqual {44}
	015 Move W1, W0
	016 Move X0, X21
	017 Move X2, X19
	018 Move X3, X31
	019 Call String.Insert, X0, X1, X2
	020 Move X1, X0
	021 Move X0, X20
	022 Call TextEditingUtilities.set_text, X0, X1
	023 Move X0, X20
	024 Call TextEditingUtilities.get_cursorIndex, X0
	025 Compare X19, 0
	026 JumpIfEqual {44}
	027 Move X8, [X20+16]
	028 Compare X8, 0
	029 JumpIfEqual {44}
	030 Move W9, [X19+16]
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move TEMP, 0
	034 Not TEMP
	035 Move W10, TEMP
	036 Move [X8+24], W31
	037 Add W9, W9, W0
	038 Move [X8+52], W9
	039 Move [X8+56], W9
	040 Move [X8+20], W10
	041 Move X30, [X31+32]
	042 Move X21, [X31+40]
	043 Return 
	044 Call 0x1C17F20

Method: System.Void Insert(System.Char c)

Disassembly:
	0x03C7EFA0 MOV X0, X31
	0x03C7EFA4 BL 0x3C3B89C
	0x03C7EFA8 ADRP X21, 0x4E2000
	0x03C7EFAC ADRP X22, 0x4E2000
	0x03C7EFB0 ADRP X8, 0x4E2000
	0x03C7EFB4 ADRP X20, 0x4E2000
	0x03C7EFB8 ADRP X23, 0x4E2000
	0x03C7EFBC ADRP X19, 0x4E2000
	0x03C7EFC0 ADRP X24, 0x4E2000
	0x03C7EFC4 LDR X21, [X21 + 0x788]
	0x03C7EFC8 LDR X22, [X22 + 0x5F8]
	0x03C7EFCC LDR X8, [X8 + 0x5C8]
	0x03C7EFD0 LDR X20, [X20 + 0x6A8]
	0x03C7EFD4 LDR X23, [X23 + 0x640]
	0x03C7EFD8 LDR X19, [X19 + 0x638]
	0x03C7EFDC LDR X24, [X24 + 0x678]
	0x03C7EFE0 CMP W0, 0x1
	0x03C7EFE4 B.NE 0x3C7F21C
	0x03C7EFE8 LDR X0, [X8]
	0x03C7EFEC MOVZ W1, 0xA
	0x03C7EFF0 BL 0x3C82048
	0x03C7EFF4 LDR X0, [X22]
	0x03C7EFF8 MOVZ W1, 0xB
	0x03C7EFFC BL 0x3C82048
	0x03C7F000 ADRP X8, 0x4E1000
	0x03C7F004 LDR X8, [X8 + 0x5F0]
	0x03C7F008 MOVZ W1, 0xC
	0x03C7F00C LDR X0, [X8]
	0x03C7F010 BL 0x3C82048

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x769000
	007 NotImplemented "Instruction STRH not yet implemented."
	008 Move X21, 0x478000
	009 Move W8, [X20+2479]
	010 Move X21, [X21+368]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x478000
	017 Move X0, [X0+368]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+2479], W8
	021 Move X0, [X21]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X31, 12
	027 Move X1, X31
	028 Call Char.ToString, X0
	029 Move X1, X0
	030 Move X0, X19
	031 Call TextEditingUtilities.ReplaceSelection, X0, X1
	032 Move X20, [X31+32]
	033 Move X19, [X31+40]
	034 Move X30, [X31+16]
	035 Move X21, [X31+24]
	036 Add X31, X31, 48
	037 Return 

Method: System.Boolean CanPaste()

Disassembly:
	0x03C7F014 ADRP X8, 0x4E1000
	0x03C7F018 LDR X8, [X8 + 0x648]
	0x03C7F01C MOVZ W1, 0xD
	0x03C7F020 LDR X0, [X8]
	0x03C7F024 BL 0x3C82048
	0x03C7F028 ADRP X8, 0x4E1000
	0x03C7F02C LDR X8, [X8 + 0x698]
	0x03C7F030 MOVZ W1, 0xF
	0x03C7F034 LDR X0, [X8]
	0x03C7F038 BL 0x3C82048
	0x03C7F03C ADRP X8, 0x4E1000
	0x03C7F040 LDR X8, [X8 + 0x670]
	0x03C7F044 MOVZ W1, 0xE
	0x03C7F048 LDR X0, [X8]
	0x03C7F04C BL 0x3C82048
	0x03C7F050 LDR X0, [X24]
	0x03C7F054 MOVZ W1, 0xA
	0x03C7F058 BL 0x3C82048
	0x03C7F05C LDR X0, [X19]
	0x03C7F060 MOVZ W1, 0xB
	0x03C7F064 BL 0x3C82048
	0x03C7F068 LDR X0, [X23]
	0x03C7F06C MOVZ W1, 0x6
	0x03C7F070 BL 0x3C82048
	0x03C7F074 LDR X0, [X20]
	0x03C7F078 MOVZ W1, 0x7

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x768000
	005 Move X20, 0x4A1000
	006 Move W8, [X19+2480]
	007 Move X20, [X20+1480]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x4A1000
	013 Move X0, [X0+1480]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+2480], W8
	017 Move X0, [X20]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {22}
	021 Call 0x1C17DFC
	022 Move X0, X31
	023 Call GUIUtility.get_systemCopyBuffer
	024 Compare X0, 0
	025 JumpIfEqual {33}
	026 Move W8, [X0+16]
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 NotImplemented "Instruction CSET not yet implemented."
	031 Move X30, [X31+32]
	032 Return X0
	033 Call 0x1C17F20

Method: System.Boolean Cut()

Disassembly:
	0x03C7E5AC MOV X1, X31
	0x03C7E5B0 BL 0x3C74750
	0x03C7E5B4 CBZ X0, 0x3C7E6E4
	0x03C7E5B8 ADD W8, W23, W22
	0x03C7E5BC SCVTF S0, W8
	0x03C7E5C0 MOV X1, X31
	0x03C7E5C4 FSUB S10, S10, S0
	0x03C7E5C8 BL 0x3C0C95C
	0x03C7E5CC ADD W8, W0, W24

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+16]
	005 Compare X0, 0
	006 JumpIfEqual {13}
	007 Call TextSelectingUtilities.Copy, X0
	008 Move X0, X19
	009 Move X30, [X31+16]
	010 Move X19, [X31+24]
	011 Call TextEditingUtilities.DeleteSelection, X0
	012 Return X0
	013 Call 0x1C17F20

Method: System.Boolean Paste()

Disassembly:
	0x03C7E5D0 SCVTF S0, W8
	0x03C7E5D4 FCMP S10, S9
	0x03C7E5D8 FSUB S10, S11, S0
	0x03C7E5DC B.PL 0x3C7E5E8
	0x03C7E5E0 STR W31, [X19 + 0x2C]
	0x03C7E5E4 B 0x3C7E630
	0x03C7E5E8 LDRB W8, [X19 + 0x58]
	0x03C7E5EC CBZ W8, 0x3C7E630
	0x03C7E5F0 LDR V1, [X19 + 0x2C]
	0x03C7E5F4 SCVTF S0, W21
	0x03C7E5F8 FMOV S2, 1
	0x03C7E5FC FSUB S0, S13, S0
	0x03C7E600 FADD S3, S0, S2
	0x03C7E604 FSUB S4, S0, S9
	0x03C7E608 FADD S5, S9, S1
	0x03C7E60C FADD S2, S4, S2
	0x03C7E610 FCMP S3, S5
	0x03C7E614 FCSEL S1, S2, S1, GT
	0x03C7E618 B.GT 0x3C7E624
	0x03C7E61C FCMP S0, S1
	0x03C7E620 B.PL 0x3C7E630
	0x03C7E624 FCMP S0, S1
	0x03C7E628 FCSEL S0, S0, S1, MI
	0x03C7E62C STR S0, [X19 + 0x2C]
	0x03C7E630 FMOV S9, W31
	0x03C7E634 FCMP S10, S8
	0x03C7E638 FMOV S0, W31
	0x03C7E63C B.MI 0x3C7E6B8
	0x03C7E640 LDRB W8, [X19 + 0x58]
	0x03C7E644 CBZ W8, 0x3C7E69C
	0x03C7E648 LDR X0, [X19 + 0x20]
	0x03C7E64C CBZ X0, 0x3C7E6E4
	0x03C7E650 SCVTF S0, W20
	0x03C7E654 MOV X1, X31
	0x03C7E658 FSUB S11, S12, S0
	0x03C7E65C BL 0x3C74840
	0x03C7E660 LDR V1, [X19 + 0x30]
	0x03C7E664 FADD S0, S11, S0
	0x03C7E668 FADD S2, S8, S1
	0x03C7E66C FCMP S0, S2
	0x03C7E670 B.LE 0x3C7E68C
	0x03C7E674 LDR X0, [X19 + 0x20]
	0x03C7E678 CBZ X0, 0x3C7E6E4
	0x03C7E67C MOV X1, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x769000
	006 Move X20, 0x4A2000
	007 Move W8, [X21+2481]
	008 Move X20, [X20+1480]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x4A2000
	015 Move X0, [X0+1480]
	016 Call 0x1C17CF4
	017 Move X0, 0x476000
	018 Move X0, [X0+2440]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+2481], W8
	022 Move X21, 0x476000
	023 Move X21, [X21+2440]
	024 Move X0, X19
	025 Call TextEditingUtilities.RestoreCursorState, X0
	026 Move X0, [X20]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X0, X31
	032 Call GUIUtility.get_systemCopyBuffer
	033 Move X1, [X21]
	034 Move X2, X31
	035 Move X21, X0
	036 Call String.op_Inequality, X0, X1
	037 Move W20, W0
	038 Move TEMP, X0
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfNotEqual {51}
	042 Move W8, [X19+38]
	043 Compare W8, 0
	044 JumpIfNotEqual {48}
	045 Move X0, X21
	046 Call TextEditingUtilities.ReplaceNewlinesWithSpaces, X0
	047 Move X21, X0
	048 Move X0, X19
	049 Move X1, X21
	050 Call TextEditingUtilities.ReplaceSelection, X0, X1
	051 And W0, W20, 1
	052 Move X20, [X31+16]
	053 Move X19, [X31+24]
	054 Move X30, [X31+32]
	055 Move X21, [X31+40]
	056 Return X0

Method: System.String ReplaceNewlinesWithSpaces(System.String value)

Disassembly:
	0x03C7F114 MOV W19, W31
	0x03C7F118 MOVZ W5, 0x28
	0x03C7F11C MOVZ W7, 0x26
	0x03C7F120 STR X8, [X31 + 0x100]
	0x03C7F124 ADRP X8, 0x4E1000
	0x03C7F128 LDR X8, [X8 + 0x6F8]
	0x03C7F12C MOVZ W27, 0x27
	0x03C7F130 MOVZ W25, 0x5
	0x03C7F134 MOVZ W29, 0x4
	0x03C7F138 STR X8, [X31 + 0xF0]
	0x03C7F13C ADRP X8, 0x4E1000
	0x03C7F140 LDR X8, [X8 + 0x748]
	0x03C7F144 MOVZ W22, 0x1
	0x03C7F148 MOVZ W28, 0x25
	0x03C7F14C MOVZ W17, 0x24
	0x03C7F150 STR X8, [X31 + 0xE8]
	0x03C7F154 ADRP X8, 0x4E1000
	0x03C7F158 LDR X8, [X8 + 0x750]
	0x03C7F15C MOVZ W2, 0x2B
	0x03C7F160 MOVZ W4, 0x2A
	0x03C7F164 MOVZ W26, 0x29
	0x03C7F168 STR X8, [X31 + 0xE0]
	0x03C7F16C ADRP X8, 0x4E1000
	0x03C7F170 LDR X8, [X8 + 0x780]
	0x03C7F174 MOVZ W30, 0x2C
	0x03C7F178 MOVZ W1, 0x17
	0x03C7F17C STR X8, [X31 + 0xD8]
	0x03C7F180 ADRP X8, 0x4E1000
	0x03C7F184 LDR X8, [X8 + 0x708]
	0x03C7F188 STR X8, [X31 + 0xF8]
	0x03C7F18C MOVZ W8, 0x1F
	0x03C7F190 STR W8, [X31 + 0xB4]
	0x03C7F194 ADRP X8, 0x4E1000
	0x03C7F198 LDR X8, [X8 + 0x728]
	0x03C7F19C STR X8, [X31 + 0xD0]
	0x03C7F1A0 MOVZ W8, 0x1E
	0x03C7F1A4 STR W8, [X31 + 0xAC]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x768000
	005 Move W8, [X20+2482]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0x475000
	012 Move X0, [X0+3544]
	013 Call 0x1C17CF4
	014 Move X0, 0x4B3000
	015 Move X0, [X0+1056]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2482], W8
	019 Compare X19, 0
	020 JumpIfEqual {46}
	021 Move X8, 0x4B3000
	022 Move X9, 0x475000
	023 Move X8, [X8+1056]
	024 Move X9, [X9+3544]
	025 Move X0, X19
	026 Move X3, X31
	027 Move X1, [X8]
	028 Move X2, [X9]
	029 Call String.Replace, X0, X1, X2
	030 Compare X0, 0
	031 JumpIfEqual {46}
	032 Move W1, 10
	033 Move W2, 32
	034 Move X3, X31
	035 Call String.Replace, X0, X1, X2
	036 Compare X0, 0
	037 JumpIfEqual {46}
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move W1, 13
	041 Move W2, 32
	042 Move X3, X31
	043 Move X30, [X31+32]
	044 Call String.Replace, X0, X1, X2
	045 Return X0
	046 Call 0x1C17F20

Method: System.Void OnBlur()

Disassembly:
	0x03C7F1A8 MOVZ W8, 0x23
	0x03C7F1AC LDR X20, [X20 + 0x778]
	0x03C7F1B0 STR W8, [X31 + 0xB0]
	0x03C7F1B4 MOVZ W8, 0x22
	0x03C7F1B8 LDR X23, [X23 + 0x758]
	0x03C7F1BC STR W8, [X31 + 0x98]
	0x03C7F1C0 ADRP X8, 0x4E1000
	0x03C7F1C4 LDR X8, [X8 + 0x738]
	0x03C7F1C8 STR X8, [X31 + 0xC8]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W1, W31
	004 Move X19, X0
	005 Call TextEditingUtilities.set_revealCursor, X0, X1
	006 Move X0, [X19+16]
	007 Compare X0, 0
	008 JumpIfEqual {11}
	009 Move X30, [X31+16]
	010 Move X19, [X31+24]
	011 Call 0x1C17F20

Method: System.Boolean TouchScreenKeyboardShouldBeUsed()

Disassembly:
	0x03C7F218 B 0x3C7F368
	0x03C7F21C ADRP X9, 0x4E1000
	0x03C7F220 LDR X9, [X9 + 0x6A0]
	0x03C7F224 ADRP X10, 0x4E1000
	0x03C7F228 ADRP X11, 0x4E1000
	0x03C7F22C ADRP X12, 0x4E1000
	0x03C7F230 STR X9, [X31 + 0xB8]
	0x03C7F234 ADRP X13, 0x4E1000
	0x03C7F238 LDR X10, [X10 + 0x6F0]
	0x03C7F23C LDR X11, [X11 + 0x5E8]
	0x03C7F240 LDR X12, [X12 + 0x688]
	0x03C7F244 LDR X13, [X13 + 0x740]
	0x03C7F248 STR X22, [X31 + 0xF8]
	0x03C7F24C ADRP X14, 0x4E1000
	0x03C7F250 LDR X14, [X14 + 0x6B0]
	0x03C7F254 STR X19, [X31 + 0xC8]
	0x03C7F258 ADRP X15, 0x4E1000
	0x03C7F25C ADRP X16, 0x4E1000
	0x03C7F260 ADRP X0, 0x4E1000
	0x03C7F264 ADRP X3, 0x4E1000
	0x03C7F268 ADRP X6, 0x4E1000
	0x03C7F26C LDR X15, [X15 + 0x628]
	0x03C7F270 LDR X16, [X16 + 0x650]
	0x03C7F274 LDR X0, [X0 + 0x5D8]
	0x03C7F278 LDR X3, [X3 + 0x618]
	0x03C7F27C LDR X6, [X6 + 0x710]
	0x03C7F280 STR X8, [X31 + 0xD0]
	0x03C7F284 ADRP X8, 0x4E1000
	0x03C7F288 LDR X8, [X8 + 0x758]
	0x03C7F28C MOVZ W9, 0x10
	0x03C7F290 MOVZ W25, 0x2B
	0x03C7F294 MOVZ W29, 0x2A
	0x03C7F298 STR X8, [X31 + 0x108]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x768000
	005 Move X20, 0x475000
	006 Move W8, [X19+2483]
	007 Move X20, [X20+2416]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x475000
	013 Move X0, [X0+2416]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+2483], W8
	017 Move X0, [X20]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {22}
	021 Call 0x1C17DFC
	022 Move X0, X31
	023 Call Application.get_platform
	024 NotImplemented "Instruction CMP not yet implemented."
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X0, X31
	027 Call TouchScreenKeyboard.get_isInPlaceEditingAllowed
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 NotImplemented "Instruction ORN not yet implemented."
	031 And W0, W8, 1
	032 Move X30, [X31+32]
	033 Return X0
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X0, X31
	037 Move X30, [X31+32]
	038 Call TouchScreenKeyboard.get_isSupported
	039 Return X0

