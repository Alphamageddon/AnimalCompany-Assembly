Type: UnityEngine.GUI

Method: UnityEngine.Color get_color()

Disassembly:
	0x03C67568 LDR W19, [X9 + 0x4]
	0x03C6756C CBNZ X8, 0x3C67584
	0x03C67570 ADRP X0, 0xFFFFFFFFFCEA8000
	0x03C67574 ADD X0, X0, 0x9AF
	0x03C67578 BL 0x1C16CB8
	0x03C6757C MOV X8, X0
	0x03C67580 STR X0, [X20 + 0x928]
	0x03C67584 MOV W0, W19
	0x03C67588 BLR X8
	0x03C6758C CBZ X0, 0x3C675A8
	0x03C67590 ADRP X8, 0x4F9000
	0x03C67594 LDR X8, [X8 + 0x288]
	0x03C67598 LDR X9, [X0]
	0x03C6759C LDR X8, [X8]
	0x03C675A0 CMP X9, X8
	0x03C675A4 CSEL X0, X0, X31, EQ
	0x03C675A8 LDP X20, X19, [X31 + 0x10]
	0x03C675AC LDR X30, [X31], #0x20
	0x03C675B0 RET
	0x03C675B4 STR X30, [X31 - 0x30]!
	0x03C675B8 STP X22, X21, [X31 + 0x10]
	0x03C675BC STP X20, X19, [X31 + 0x20]
	0x03C675C0 ADRP X22, 0x77F000
	0x03C675C4 ADRP X20, 0x4F9000
	0x03C675C8 ADRP X21, 0x4B3000
	0x03C675CC LDRB W8, [X22 + 0x6D8]
	0x03C675D0 LDR X20, [X20 + 0x288]
	0x03C675D4 LDR X21, [X21 + 0x890]
	0x03C675D8 MOV X19, X0
	0x03C675DC TBNZ X8, 0x0, 0x3C67600
	0x03C675E0 ADRP X0, 0x4F9000
	0x03C675E4 LDR X0, [X0 + 0x288]
	0x03C675E8 BL 0x1C16CF4
	0x03C675EC ADRP X0, 0x4B3000

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+32], X20
	004 Move [X31+40], X19
	005 Move X20, 0x780000
	006 Move X19, 0x4B4000
	007 Move W8, [X20+1345]
	008 Move X19, [X19+1216]
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x4B4000
	014 Move X0, [X0+1216]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X20+1345], W8
	018 Move X0, [X19]
	019 Move [X31], X31
	020 Move [X31+8], X31
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X19, 0x780000
	026 Move X8, [X19+1504]
	027 Compare X8, 0
	028 JumpIfNotEqual {34}
	029 Move X0, -51687424
	030 Add X0, X0, 710
	031 Call 0x1C17CB8
	032 Move X8, X0
	033 Move [X19+1504], X0
	034 Add X0, X31, 0
	035 NotImplemented "Instruction BLR not yet implemented."
	036 Move S0, [X31]
	037 Move S1, [X31+4]
	038 Move S2, [X31+8]
	039 Move S3, [X31+12]
	040 Move X20, [X31+32]
	041 Move X19, [X31+40]
	042 Move X30, [X31+16]
	043 Add X31, X31, 48
	044 Return X0

Method: System.Void set_color(UnityEngine.Color value)

Disassembly:
	0x03C6762C ADRP X0, 0xFFFFFFFFFCEB2000
	0x03C67630 ADD X0, X0, 0x112
	0x03C67634 BL 0x1C16CB8
	0x03C67638 MOV X8, X0
	0x03C6763C STR X0, [X21 + 0x7D8]
	0x03C67640 MOV X0, X19
	0x03C67644 BLR X8
	0x03C67648 LDR X8, [X20]
	0x03C6764C LDR X8, [X8 + 0xB8]
	0x03C67650 LDR X8, [X8 + 0x8]
	0x03C67654 CBZ X8, 0x3C67674
	0x03C67658 LDR X2, [X8 + 0x18]
	0x03C6765C LDR X0, [X8 + 0x40]
	0x03C67660 LDR X1, [X8 + 0x28]
	0x03C67664 LDP X20, X19, [X31 + 0x20]
	0x03C67668 LDP X22, X21, [X31 + 0x10]
	0x03C6766C LDR X30, [X31], #0x30
	0x03C67670 BR X2
	0x03C67674 LDP X20, X19, [X31 + 0x20]
	0x03C67678 LDP X22, X21, [X31 + 0x10]
	0x03C6767C LDR X30, [X31], #0x30
	0x03C67680 RET
	0x03C67684 SUB X31, X31, 0xA0
	0x03C67688 STR X30, [X31 + 0x80]
	0x03C6768C STP X20, X19, [X31 + 0x90]
	0x03C67690 ADRP X20, 0x77F000
	0x03C67694 MOV X19, X8
	0x03C67698 LDR X8, [X20 + 0x658]
	0x03C6769C MOVI V0.2D, 0x0
	0x03C676A0 STP V0, V0, [X31 + 0x60]
	0x03C676A4 STP V0, V0, [X31 + 0x40]
	0x03C676A8 CBNZ X8, 0x3C676C0
	0x03C676AC ADRP X0, 0xFFFFFFFFFCE92000

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+32], X20
	004 Move [X31+40], X19
	005 Move X19, 0x780000
	006 Move [X31], S0
	007 Move [X31+8], S1
	008 Move [X31+8], S2
	009 Move [X31+16], S3
	010 Move X20, 0x4B4000
	011 Move W8, [X19+1346]
	012 Move X20, [X20+1216]
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x4B4000
	018 Move X0, [X0+1216]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X19+1346], W8
	022 Move X0, [X20]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X19, 0x780000
	028 Move X8, [X19+1512]
	029 Compare X8, 0
	030 JumpIfNotEqual {36}
	031 Move X0, -51802112
	032 Add X0, X0, 2061
	033 Call 0x1C17CB8
	034 Move X8, X0
	035 Move [X19+1512], X0
	036 Add X0, X31, 0
	037 NotImplemented "Instruction BLR not yet implemented."
	038 Move X20, [X31+32]
	039 Move X19, [X31+40]
	040 Move X30, [X31+16]
	041 Add X31, X31, 48
	042 Return 

Method: UnityEngine.Color get_backgroundColor()

Disassembly:
	0x03C676EC RET
	0x03C676F0 SUB X31, X31, 0x60
	0x03C676F4 STR X30, [X31 + 0x40]
	0x03C676F8 STP X20, X19, [X31 + 0x50]
	0x03C676FC ADRP X20, 0x77F000
	0x03C67700 MOV X19, X8
	0x03C67704 LDR X8, [X20 + 0x658]
	0x03C67708 MOVI V0.2D, 0x0
	0x03C6770C STP V0, V0, [X31 + 0x20]
	0x03C67710 STP V0, V0, [X31]
	0x03C67714 CBNZ X8, 0x3C6772C
	0x03C67718 ADRP X0, 0xFFFFFFFFFCE92000
	0x03C6771C ADD X0, X0, 0xA51
	0x03C67720 BL 0x1C16CB8
	0x03C67724 MOV X8, X0
	0x03C67728 STR X0, [X20 + 0x658]
	0x03C6772C ADD X0, X31, 0x0
	0x03C67730 BLR X8
	0x03C67734 LDP V1, V0, [X31 + 0x20]
	0x03C67738 LDP V3, V2, [X31]
	0x03C6773C LDR X30, [X31 + 0x40]
	0x03C67740 STP V1, V0, [X19 + 0x20]
	0x03C67744 STP V3, V2, [X19]
	0x03C67748 LDP X20, X19, [X31 + 0x50]
	0x03C6774C ADD X31, X31, 0x60
	0x03C67750 RET
	0x03C67754 SUB X31, X31, 0x50
	0x03C67758 STP X30, X19, [X31 + 0x40]
	0x03C6775C ADRP X19, 0x77F000
	0x03C67760 LDP V0, V1, [X0 + 0x20]
	0x03C67764 LDP V2, V3, [X0]
	0x03C67768 LDR X8, [X19 + 0x660]
	0x03C6776C STP V0, V1, [X31 + 0x20]
	0x03C67770 STP V2, V3, [X31]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+32], X20
	004 Move [X31+40], X19
	005 Move X20, 0x780000
	006 Move X19, 0x4B4000
	007 Move W8, [X20+1347]
	008 Move X19, [X19+1216]
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x4B4000
	014 Move X0, [X0+1216]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X20+1347], W8
	018 Move X0, [X19]
	019 Move [X31], X31
	020 Move [X31+8], X31
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X19, 0x780000
	026 Move X8, [X19+1520]
	027 Compare X8, 0
	028 JumpIfNotEqual {34}
	029 Move X0, -51634176
	030 Add X0, X0, 3782
	031 Call 0x1C17CB8
	032 Move X8, X0
	033 Move [X19+1520], X0
	034 Add X0, X31, 0
	035 NotImplemented "Instruction BLR not yet implemented."
	036 Move S0, [X31]
	037 Move S1, [X31+4]
	038 Move S2, [X31+8]
	039 Move S3, [X31+12]
	040 Move X20, [X31+32]
	041 Move X19, [X31+40]
	042 Move X30, [X31+16]
	043 Add X31, X31, 48
	044 Return X0

Method: System.Void set_backgroundColor(UnityEngine.Color value)

Disassembly:
	0x03C677B0 MOV X19, X0
	0x03C677B4 CBNZ X1, 0x3C677CC
	0x03C677B8 ADRP X0, 0xFFFFFFFFFCE9C000
	0x03C677BC ADD X0, X0, 0x79A
	0x03C677C0 BL 0x1C16CB8
	0x03C677C4 MOV X1, X0
	0x03C677C8 STR X0, [X20 + 0x660]
	0x03C677CC MOV X0, X19
	0x03C677D0 LDP X20, X19, [X31 + 0x10]
	0x03C677D4 LDR X30, [X31], #0x20
	0x03C677D8 BR X1
	0x03C677DC STP D11, D10, [X31 - 0x40]!
	0x03C677E0 STP D9, D8, [X31 + 0x10]
	0x03C677E4 STP X30, X21, [X31 + 0x20]
	0x03C677E8 STP X20, X19, [X31 + 0x30]
	0x03C677EC ADRP X21, 0x77F000
	0x03C677F0 ADRP X20, 0x4B7000
	0x03C677F4 LDRB W8, [X21 + 0x5BA]
	0x03C677F8 LDR X20, [X20 + 0xBD0]
	0x03C677FC MOV X19, X0
	0x03C67800 MOV V8.16B, V3.16B
	0x03C67804 MOV V9.16B, V2.16B
	0x03C67808 MOV V10.16B, V1.16B
	0x03C6780C MOV V11.16B, V0.16B
	0x03C67810 TBNZ X8, 0x0, 0x3C67834
	0x03C67814 ADRP X0, 0x4B7000
	0x03C67818 LDR X0, [X0 + 0xBD0]
	0x03C6781C BL 0x1C16CF4
	0x03C67820 ADRP X0, 0x4B3000
	0x03C67824 LDR X0, [X0 + 0x4C0]
	0x03C67828 BL 0x1C16CF4
	0x03C6782C MOVZ W8, 0x1
	0x03C67830 STRB W8, [X21 + 0x5BA]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+32], X20
	004 Move [X31+40], X19
	005 Move X19, 0x780000
	006 Move [X31], S0
	007 Move [X31+8], S1
	008 Move [X31+8], S2
	009 Move [X31+16], S3
	010 Move X20, 0x4B4000
	011 Move W8, [X19+1348]
	012 Move X20, [X20+1216]
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x4B4000
	018 Move X0, [X0+1216]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X19+1348], W8
	022 Move X0, [X20]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X19, 0x780000
	028 Move X8, [X19+1528]
	029 Compare X8, 0
	030 JumpIfNotEqual {36}
	031 Move X0, -51638272
	032 Add X0, X0, 694
	033 Call 0x1C17CB8
	034 Move X8, X0
	035 Move [X19+1528], X0
	036 Add X0, X31, 0
	037 NotImplemented "Instruction BLR not yet implemented."
	038 Move X20, [X31+32]
	039 Move X19, [X31+40]
	040 Move X30, [X31+16]
	041 Add X31, X31, 48
	042 Return 

Method: UnityEngine.Color get_contentColor()

Disassembly:
	0x03C67870 LDR X8, [X8 + 0xB8]
	0x03C67874 LDR X8, [X8 + 0x30]
	0x03C67878 CBZ X8, 0x3C678A8
	0x03C6787C LDR X1, [X8 + 0x38]
	0x03C67880 MOV V2.16B, V9.16B
	0x03C67884 MOV V3.16B, V8.16B
	0x03C67888 MOV X0, X19
	0x03C6788C LDP X20, X19, [X31 + 0x30]
	0x03C67890 LDP X30, X21, [X31 + 0x20]
	0x03C67894 LDP D9, D8, [X31 + 0x10]
	0x03C67898 MOV V0.16B, V11.16B
	0x03C6789C MOV V1.16B, V10.16B
	0x03C678A0 LDP D11, D10, [X31], #0x40
	0x03C678A4 B 0x3C67940
	0x03C678A8 BL 0x1C16F20
	0x03C678AC STP X30, X21, [X31 - 0x20]!
	0x03C678B0 STP X20, X19, [X31 + 0x10]
	0x03C678B4 ADRP X21, 0x77F000
	0x03C678B8 ADRP X20, 0x4B7000
	0x03C678BC LDRB W8, [X21 + 0x674]
	0x03C678C0 LDR X20, [X20 + 0xBD0]
	0x03C678C4 MOV X19, X0
	0x03C678C8 TBNZ X8, 0x0, 0x3C678EC
	0x03C678CC ADRP X0, 0x4B7000
	0x03C678D0 LDR X0, [X0 + 0xBD0]
	0x03C678D4 BL 0x1C16CF4
	0x03C678D8 ADRP X0, 0x48E000
	0x03C678DC LDR X0, [X0 + 0x278]
	0x03C678E0 BL 0x1C16CF4
	0x03C678E4 MOVZ W8, 0x1
	0x03C678E8 STRB W8, [X21 + 0x674]
	0x03C678EC LDR X0, [X20]
	0x03C678F0 LDR W8, [X0 + 0xE0]
	0x03C678F4 CBNZ W8, 0x3C67900

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+32], X20
	004 Move [X31+40], X19
	005 Move X20, 0x780000
	006 Move X19, 0x4B4000
	007 Move W8, [X20+1349]
	008 Move X19, [X19+1216]
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x4B4000
	014 Move X0, [X0+1216]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X20+1349], W8
	018 Move X0, [X19]
	019 Move [X31], X31
	020 Move [X31+8], X31
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X19, 0x780000
	026 Move X8, [X19+1536]
	027 Compare X8, 0
	028 JumpIfNotEqual {34}
	029 Move X0, -51662848
	030 Add X0, X0, 307
	031 Call 0x1C17CB8
	032 Move X8, X0
	033 Move [X19+1536], X0
	034 Add X0, X31, 0
	035 NotImplemented "Instruction BLR not yet implemented."
	036 Move S0, [X31]
	037 Move S1, [X31+4]
	038 Move S2, [X31+8]
	039 Move S3, [X31+12]
	040 Move X20, [X31+32]
	041 Move X19, [X31+40]
	042 Move X30, [X31+16]
	043 Add X31, X31, 48
	044 Return X0

Method: System.Void set_contentColor(UnityEngine.Color value)

Disassembly:
	0x03C67934 BL 0x1C16F20
	0x03C67938 LDR X0, [X0 + 0x38]
	0x03C6793C RET
	0x03C67940 STP D11, D10, [X31 - 0x50]!
	0x03C67944 STP D9, D8, [X31 + 0x10]
	0x03C67948 STR X30, [X31 + 0x20]
	0x03C6794C STP X22, X21, [X31 + 0x30]
	0x03C67950 STP X20, X19, [X31 + 0x40]
	0x03C67954 ADRP X22, 0x77F000
	0x03C67958 ADRP X21, 0x4B8000
	0x03C6795C LDRB W8, [X22 + 0x5BB]
	0x03C67960 LDR X21, [X21 + 0x5C8]
	0x03C67964 MOV X19, X1
	0x03C67968 MOV X20, X0
	0x03C6796C MOV V8.16B, V3.16B
	0x03C67970 MOV V9.16B, V2.16B
	0x03C67974 MOV V10.16B, V1.16B
	0x03C67978 MOV V11.16B, V0.16B
	0x03C6797C TBNZ X8, 0x0, 0x3C679A0
	0x03C67980 ADRP X0, 0x4B8000
	0x03C67984 LDR X0, [X0 + 0x5C8]
	0x03C67988 BL 0x1C16CF4
	0x03C6798C ADRP X0, 0x4B3000
	0x03C67990 LDR X0, [X0 + 0x4C0]
	0x03C67994 BL 0x1C16CF4
	0x03C67998 MOVZ W8, 0x1
	0x03C6799C STRB W8, [X22 + 0x5BB]
	0x03C679A0 LDR X0, [X21]
	0x03C679A4 ADRP X21, 0x4B3000
	0x03C679A8 LDR W8, [X0 + 0xE0]
	0x03C679AC LDR X21, [X21 + 0x4C0]
	0x03C679B0 CBNZ W8, 0x3C679B8
	0x03C679B4 BL 0x1C16DFC

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+32], X20
	004 Move [X31+40], X19
	005 Move X19, 0x780000
	006 Move [X31], S0
	007 Move [X31+8], S1
	008 Move [X31+8], S2
	009 Move [X31+16], S3
	010 Move X20, 0x4B4000
	011 Move W8, [X19+1350]
	012 Move X20, [X20+1216]
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x4B4000
	018 Move X0, [X0+1216]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X19+1350], W8
	022 Move X0, [X20]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X19, 0x780000
	028 Move X8, [X19+1544]
	029 Compare X8, 0
	030 JumpIfNotEqual {36}
	031 Move X0, -51867648
	032 Add X0, X0, 1429
	033 Call 0x1C17CB8
	034 Move X8, X0
	035 Move [X19+1544], X0
	036 Add X0, X31, 0
	037 NotImplemented "Instruction BLR not yet implemented."
	038 Move X20, [X31+32]
	039 Move X19, [X31+40]
	040 Move X30, [X31+16]
	041 Add X31, X31, 48
	042 Return 

Method: System.Boolean get_changed()

Disassembly:
	0x03C679F4 LDP D11, D10, [X31], #0x50
	0x03C679F8 B 0x3C679FC
	0x03C679FC STP D11, D10, [X31 - 0x50]!
	0x03C67A00 STP D9, D8, [X31 + 0x10]
	0x03C67A04 STP X30, X23, [X31 + 0x20]
	0x03C67A08 STP X22, X21, [X31 + 0x30]
	0x03C67A0C STP X20, X19, [X31 + 0x40]
	0x03C67A10 ADRP X20, 0x77F000
	0x03C67A14 LDRB W8, [X20 + 0x5D2]
	0x03C67A18 MOV X21, X1

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, 0x780000
	004 Move X0, [X19+1352]
	005 Compare X0, 0
	006 JumpIfNotEqual {11}
	007 Move X0, -51867648
	008 Add X0, X0, 1361
	009 Call 0x1C17CB8
	010 Move [X19+1352], X0
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 CallNoReturn X0

Method: System.Void set_changed(System.Boolean value)

Disassembly:
	0x03C67A1C MOV X19, X0
	0x03C67A20 MOV V8.16B, V3.16B
	0x03C67A24 MOV V9.16B, V2.16B
	0x03C67A28 MOV V10.16B, V1.16B
	0x03C67A2C MOV V11.16B, V0.16B
	0x03C67A30 TBNZ X8, 0x0, 0x3C67A54
	0x03C67A34 ADRP X0, 0x4B3000
	0x03C67A38 LDR X0, [X0 + 0x890]
	0x03C67A3C BL 0x1C16CF4
	0x03C67A40 ADRP X0, 0x4B3000
	0x03C67A44 LDR X0, [X0 + 0x4C0]
	0x03C67A48 BL 0x1C16CF4
	0x03C67A4C MOVZ W8, 0x1
	0x03C67A50 STRB W8, [X20 + 0x5D2]
	0x03C67A54 ADRP X20, 0x77F000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x780000
	005 Move X1, [X20+1360]
	006 Move W19, W0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51843072
	010 Add X0, X0, 1821
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+1360], X0
	014 And W0, W19, 1
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Boolean get_enabled()

Disassembly:
	0x03C67A58 ADRP X22, 0x4F2000
	0x03C67A5C LDRB W8, [X20 + 0x510]
	0x03C67A60 LDR X22, [X22 + 0x20]
	0x03C67A64 TBNZ X8, 0x0, 0x3C67A7C
	0x03C67A68 ADRP X0, 0x4F2000
	0x03C67A6C LDR X0, [X0 + 0x20]
	0x03C67A70 BL 0x1C16CF4
	0x03C67A74 MOVZ W8, 0x1
	0x03C67A78 STRB W8, [X20 + 0x510]
	0x03C67A7C LDR X8, [X22]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, 0x780000
	004 Move X0, [X19+1368]
	005 Compare X0, 0
	006 JumpIfNotEqual {11}
	007 Move X0, -51617792
	008 Add X0, X0, 3085
	009 Call 0x1C17CB8
	010 Move [X19+1368], X0
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 CallNoReturn X0

Method: System.Void set_enabled(System.Boolean value)

Disassembly:
	0x03C67A80 LDR X8, [X8 + 0xB8]
	0x03C67A84 LDR X20, [X8]
	0x03C67A88 CBZ X20, 0x3C67CC4
	0x03C67A8C ADRP X22, 0x77F000
	0x03C67A90 LDR X8, [X22 + 0x4A8]
	0x03C67A94 CBNZ X8, 0x3C67AAC
	0x03C67A98 ADRP X0, 0xFFFFFFFFFCE8A000
	0x03C67A9C ADD X0, X0, 0x566
	0x03C67AA0 BL 0x1C16CB8
	0x03C67AA4 MOV X8, X0
	0x03C67AA8 STR X0, [X22 + 0x4A8]
	0x03C67AAC MOV X0, X20
	0x03C67AB0 BLR X8
	0x03C67AB4 CMP W0, 0x7
	0x03C67AB8 B.NE 0x3C67B84

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x780000
	005 Move X1, [X20+1376]
	006 Move W19, W0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51728384
	010 Add X0, X0, 1366
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+1376], X0
	014 And W0, W19, 1
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Boolean get_usePageScrollbars()

Disassembly:
	0x03C67ABC MOV X0, X20
	0x03C67AC0 BL 0x3C62C40
	0x03C67AC4 FCMP S1, S10
	0x03C67AC8 MOV W22, W31
	0x03C67ACC B.LT 0x3C67AF0
	0x03C67AD0 FCMP S0, S11
	0x03C67AD4 B.LT 0x3C67AF0
	0x03C67AD8 FADD S2, S11, S9
	0x03C67ADC FCMP S0, S2
	0x03C67AE0 B.PL 0x3C67AF0

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, 0x780000
	004 Move X0, [X19+1384]
	005 Compare X0, 0
	006 JumpIfNotEqual {11}
	007 Move X0, -51671040
	008 Add X0, X0, 974
	009 Call 0x1C17CB8
	010 Move [X19+1384], X0
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 CallNoReturn X0

Method: UnityEngine.Material get_blendMaterial()

Disassembly:
	0x03C67AE4 FADD S0, S10, S8
	0x03C67AE8 FCMP S1, S0
	0x03C67AEC CSET W22, MI
	0x03C67AF0 CBZ X21, 0x3C67CC4
	0x03C67AF4 MOV X0, X21
	0x03C67AF8 MOV V0.16B, V11.16B
	0x03C67AFC MOV V1.16B, V10.16B
	0x03C67B00 MOV V2.16B, V9.16B
	0x03C67B04 MOV V3.16B, V8.16B
	0x03C67B08 MOV X1, X19

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, 0x780000
	004 Move X0, [X19+1392]
	005 Compare X0, 0
	006 JumpIfNotEqual {11}
	007 Move X0, -51867648
	008 Add X0, X0, 1392
	009 Call 0x1C17CB8
	010 Move [X19+1392], X0
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 CallNoReturn X0

Method: UnityEngine.Material get_blitMaterial()

Disassembly:
	0x03C67B0C MOV W2, W22
	0x03C67B10 MOV W3, W31
	0x03C67B14 MOV W4, W31
	0x03C67B18 MOV W5, W31
	0x03C67B1C BL 0x3C739A8
	0x03C67B20 CBZ X19, 0x3C67CC4
	0x03C67B24 LDR X0, [X19 + 0x20]
	0x03C67B28 MOV X1, X31
	0x03C67B2C BL 0x32277A8
	0x03C67B30 EOR W8, W0, 0x1

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, 0x780000
	004 Move X0, [X19+1400]
	005 Compare X0, 0
	006 JumpIfNotEqual {11}
	007 Move X0, -51625984
	008 Add X0, X0, 3794
	009 Call 0x1C17CB8
	010 Move [X19+1400], X0
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 CallNoReturn X0

Method: UnityEngine.Material get_roundedRectMaterial()

Disassembly:
	0x03C67B34 AND W8, W22, W8, 0x0
	0x03C67B38 CMP W8, 0x1
	0x03C67B3C B.NE 0x3C67B84
	0x03C67B40 BL 0x3C6B3E4
	0x03C67B44 MOV X0, X20
	0x03C67B48 MOV V10.16B, V0.16B
	0x03C67B4C MOV V8.16B, V1.16B
	0x03C67B50 MOV V11.16B, V2.16B
	0x03C67B54 MOV V9.16B, V3.16B
	0x03C67B58 BL 0x3C62C40

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, 0x780000
	004 Move X0, [X19+1408]
	005 Compare X0, 0
	006 JumpIfNotEqual {11}
	007 Move X0, -51761152
	008 Add X0, X0, 2347
	009 Call 0x1C17CB8
	010 Move [X19+1408], X0
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 CallNoReturn X0

Method: UnityEngine.Material get_roundedRectWithColorPerBorderMaterial()

Disassembly:
	0x03C67B5C FCMP S1, S8
	0x03C67B60 B.LT 0x3C67B84
	0x03C67B64 FCMP S0, S10
	0x03C67B68 B.LT 0x3C67B84
	0x03C67B6C FADD S2, S10, S11
	0x03C67B70 FCMP S0, S2
	0x03C67B74 B.PL 0x3C67B84
	0x03C67B78 FADD S0, S8, S9
	0x03C67B7C FCMP S1, S0
	0x03C67B80 B.MI 0x3C67B9C

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, 0x780000
	004 Move X0, [X19+1416]
	005 Compare X0, 0
	006 JumpIfNotEqual {11}
	007 Move X0, -51617792
	008 Add X0, X0, 3116
	009 Call 0x1C17CB8
	010 Move [X19+1416], X0
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 CallNoReturn X0

Method: System.Void GrabMouseControl(System.Int32 id)

Disassembly:
	0x03C67B84 LDP X20, X19, [X31 + 0x40]
	0x03C67B88 LDP X22, X21, [X31 + 0x30]
	0x03C67B8C LDP X30, X23, [X31 + 0x20]
	0x03C67B90 LDP D9, D8, [X31 + 0x10]
	0x03C67B94 LDP D11, D10, [X31], #0x50
	0x03C67B98 RET
	0x03C67B9C ADRP X22, 0x4B3000
	0x03C67BA0 LDR X22, [X22 + 0x890]
	0x03C67BA4 LDR X21, [X19 + 0x20]
	0x03C67BA8 LDR X0, [X22]
	0x03C67BAC LDR W8, [X0 + 0xE0]
	0x03C67BB0 CBNZ W8, 0x3C67BB8
	0x03C67BB4 BL 0x1C16DFC
	0x03C67BB8 ADRP X23, 0x77F000
	0x03C67BBC LDR X8, [X23 + 0x7C8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x780000
	005 Move X1, [X20+1424]
	006 Move W19, W0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51810304
	010 Add X0, X0, 2097
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+1424], X0
	014 Move W0, W19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Boolean HasMouseControl(System.Int32 id)

Disassembly:
	0x03C67BC0 CBNZ X8, 0x3C67BD8
	0x03C67BC4 ADRP X0, 0xFFFFFFFFFCEB4000
	0x03C67BC8 ADD X0, X0, 0x2FE
	0x03C67BCC BL 0x1C16CB8
	0x03C67BD0 MOV X8, X0
	0x03C67BD4 STR X0, [X23 + 0x7C8]
	0x03C67BD8 MOV X0, X21
	0x03C67BDC BLR X8
	0x03C67BE0 TBZ X0, 0x0, 0x3C67BF4
	0x03C67BE4 ADRP X8, 0x4B3000
	0x03C67BE8 LDR X8, [X8 + 0x4C0]
	0x03C67BEC LDR X0, [X8]
	0x03C67BF0 B 0x3C67C60
	0x03C67BF4 MOV X0, X20
	0x03C67BF8 BL 0x3C62C40

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x780000
	005 Move X1, [X20+1432]
	006 Move W19, W0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51728384
	010 Add X0, X0, 1411
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+1432], X0
	014 Move W0, W19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void ReleaseMouseControl()

Disassembly:
	0x03C67BFC ADRP X20, 0x772000
	0x03C67C00 LDRB W8, [X20 + 0x78F]
	0x03C67C04 MOV V8.16B, V0.16B
	0x03C67C08 MOV V9.16B, V1.16B
	0x03C67C0C CBNZ W8, 0x3C67C24
	0x03C67C10 ADRP X0, 0x494000
	0x03C67C14 LDR X0, [X0 + 0xF08]
	0x03C67C18 BL 0x1C16CF4
	0x03C67C1C MOVZ W8, 0x1
	0x03C67C20 STRB W8, [X20 + 0x78F]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, 0x780000
	004 Move X0, [X19+1440]
	005 Compare X0, 0
	006 JumpIfNotEqual {11}
	007 Move X0, -51859456
	008 Add X0, X0, 1480
	009 Call 0x1C17CB8
	010 Move [X19+1440], X0
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 CallNoReturn X0

Method: System.Void InternalRepaintEditorWindow()

Disassembly:
	0x03C67C24 ADRP X8, 0x494000
	0x03C67C28 LDR X8, [X8 + 0xF08]
	0x03C67C2C ADRP X20, 0x4B3000
	0x03C67C30 LDR X8, [X8]
	0x03C67C34 LDR X20, [X20 + 0x4C0]
	0x03C67C38 LDR X8, [X8 + 0xB8]
	0x03C67C3C LDR X0, [X20]
	0x03C67C40 LDR V10, [X8]
	0x03C67C44 LDR W9, [X0 + 0xE0]
	0x03C67C48 CBNZ W9, 0x3C67C54

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, 0x780000
	004 Move X0, [X19+1448]
	005 Compare X0, 0
	006 JumpIfNotEqual {11}
	007 Move X0, -51617792
	008 Add X0, X0, 3177
	009 Call 0x1C17CB8
	010 Move [X19+1448], X0
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 CallNoReturn X0

Method: UnityEngine.Rect Internal_DoWindow(System.Int32 id, System.Int32 instanceID, UnityEngine.Rect clientRect, UnityEngine.GUI/WindowFunction func, UnityEngine.GUIContent title, UnityEngine.GUIStyle style, System.Object skin, System.Boolean forceRectOnLayout)

Disassembly:
	0x03C67C4C BL 0x1C16DFC
	0x03C67C50 LDR X0, [X20]
	0x03C67C54 LDR X8, [X0 + 0xB8]
	0x03C67C58 STP S8, S9, [X8 + 0x38]
	0x03C67C5C STR D10, [X8 + 0x40]
	0x03C67C60 LDR W8, [X0 + 0xE0]
	0x03C67C64 LDR X19, [X19 + 0x20]
	0x03C67C68 CBNZ W8, 0x3C67C7C
	0x03C67C6C BL 0x1C16DFC
	0x03C67C70 ADRP X8, 0x4B3000
	0x03C67C74 LDR X8, [X8 + 0x4C0]
	0x03C67C78 LDR X0, [X8]
	0x03C67C7C LDR X8, [X0 + 0xB8]
	0x03C67C80 LDR X0, [X22]
	0x03C67C84 LDP S11, S10, [X8 + 0x38]
	0x03C67C88 LDR W9, [X0 + 0xE0]
	0x03C67C8C LDP S9, S8, [X8 + 0x40]
	0x03C67C90 CBNZ W9, 0x3C67C98
	0x03C67C94 BL 0x1C16DFC
	0x03C67C98 MOV X0, X19
	0x03C67C9C MOV V2.16B, V9.16B
	0x03C67CA0 MOV V3.16B, V8.16B
	0x03C67CA4 LDP X20, X19, [X31 + 0x40]
	0x03C67CA8 LDP X22, X21, [X31 + 0x30]
	0x03C67CAC LDP X30, X23, [X31 + 0x20]
	0x03C67CB0 LDP D9, D8, [X31 + 0x10]
	0x03C67CB4 MOV V0.16B, V11.16B
	0x03C67CB8 MOV V1.16B, V10.16B
	0x03C67CBC LDP D11, D10, [X31], #0x50
	0x03C67CC0 B 0x3C6B468
	0x03C67CC4 BL 0x1C16F20
	0x03C67CC8 STP D11, D10, [X31 - 0x40]!
	0x03C67CCC STP D9, D8, [X31 + 0x10]
	0x03C67CD0 STP X30, X21, [X31 + 0x20]
	0x03C67CD4 STP X20, X19, [X31 + 0x30]
	0x03C67CD8 ADRP X21, 0x77F000
	0x03C67CDC ADRP X20, 0x4B3000
	0x03C67CE0 LDRB W8, [X21 + 0x5BC]
	0x03C67CE4 LDR X20, [X20 + 0x4C0]
	0x03C67CE8 MOV X19, X0
	0x03C67CEC MOV V8.16B, V3.16B
	0x03C67CF0 MOV V9.16B, V2.16B
	0x03C67CF4 MOV V10.16B, V1.16B
	0x03C67CF8 MOV V11.16B, V0.16B
	0x03C67CFC TBNZ X8, 0x0, 0x3C67D14
	0x03C67D00 ADRP X0, 0x4B3000
	0x03C67D04 LDR X0, [X0 + 0x4C0]
	0x03C67D08 BL 0x1C16CF4
	0x03C67D0C MOVZ W8, 0x1
	0x03C67D10 STRB W8, [X21 + 0x5BC]
	0x03C67D14 LDR X0, [X20]
	0x03C67D18 LDR W8, [X0 + 0xE0]
	0x03C67D1C CBNZ W8, 0x3C67D24
	0x03C67D20 BL 0x1C16DFC
	0x03C67D24 MOV V2.16B, V9.16B
	0x03C67D28 MOV V3.16B, V8.16B
	0x03C67D2C MOV X0, X19
	0x03C67D30 LDP X20, X19, [X31 + 0x30]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+48], X30
	003 Move [X31+56], X27
	004 Move [X31+64], X26
	005 Move [X31+72], X25
	006 Move [X31+80], X24
	007 Move [X31+88], X23
	008 Move [X31+96], X22
	009 Move [X31+104], X21
	010 Move [X31+112], X20
	011 Move [X31+120], X19
	012 Move X27, 0x780000
	013 Move [X31+32], S0
	014 Move [X31+40], S1
	015 Move [X31+40], S2
	016 Move [X31+48], S3
	017 Move X26, 0x4B4000
	018 Move W8, [X27+1456]
	019 Move X26, [X26+1216]
	020 Move W23, W6
	021 Move X19, X5
	022 Move X20, X4
	023 Move X21, X3
	024 Move X22, X2
	025 Move W24, W1
	026 Move W25, W0
	027 Move TEMP, X8
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {36}
	031 Move X0, 0x4B4000
	032 Move X0, [X0+1216]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X27+1456], W8
	036 Move X0, [X26]
	037 Move [X31+16], X31
	038 Move [X31+24], X31
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 Move X26, 0x780000
	044 Move X8, [X26+1552]
	045 Compare X8, 0
	046 JumpIfNotEqual {52}
	047 Move X0, -51662848
	048 Add X0, X0, 370
	049 Call 0x1C17CB8
	050 Move X8, X0
	051 Move [X26+1552], X0
	052 Add X9, X31, 16
	053 And W7, W23, 1
	054 Add X2, X31, 32
	055 Move W0, W25
	056 Move W1, W24
	057 Move X3, X22
	058 Move X4, X21
	059 Move X5, X20
	060 Move X6, X19
	061 Move [X31], X9
	062 NotImplemented "Instruction BLR not yet implemented."
	063 Move S0, [X31+16]
	064 Move S1, [X31+20]
	065 Move S2, [X31+24]
	066 Move S3, [X31+28]
	067 Move X20, [X31+112]
	068 Move X19, [X31+120]
	069 Move X22, [X31+96]
	070 Move X21, [X31+104]
	071 Move X24, [X31+80]
	072 Move X23, [X31+88]
	073 Move X26, [X31+64]
	074 Move X25, [X31+72]
	075 Move X30, [X31+48]
	076 Move X27, [X31+56]
	077 Add X31, X31, 128
	078 Return X0

Method: System.Void DragWindow(UnityEngine.Rect position)

Disassembly:
	0x03C67DD0 LDP D9, D8, [X31 + 0x10]
	0x03C67DD4 MOVZ W2, 0x1
	0x03C67DD8 MOV V0.16B, V11.16B
	0x03C67DDC MOV V1.16B, V10.16B
	0x03C67DE0 LDP D11, D10, [X31], #0x50
	0x03C67DE4 B 0x3C67DE8
	0x03C67DE8 STP D11, D10, [X31 - 0x50]!
	0x03C67DEC STP D9, D8, [X31 + 0x10]
	0x03C67DF0 STP X30, X23, [X31 + 0x20]
	0x03C67DF4 STP X22, X21, [X31 + 0x30]
	0x03C67DF8 STP X20, X19, [X31 + 0x40]
	0x03C67DFC ADRP X23, 0x77F000
	0x03C67E00 ADRP X22, 0x4B3000
	0x03C67E04 LDRB W8, [X23 + 0x5BE]
	0x03C67E08 LDR X22, [X22 + 0x4C0]
	0x03C67E0C MOV W21, W2
	0x03C67E10 MOV W19, W1
	0x03C67E14 MOV X20, X0
	0x03C67E18 MOV V8.16B, V3.16B
	0x03C67E1C MOV V9.16B, V2.16B
	0x03C67E20 MOV V10.16B, V1.16B
	0x03C67E24 MOV V11.16B, V0.16B
	0x03C67E28 TBNZ X8, 0x0, 0x3C67E40
	0x03C67E2C ADRP X0, 0x4B3000
	0x03C67E30 LDR X0, [X0 + 0x4C0]
	0x03C67E34 BL 0x1C16CF4
	0x03C67E38 MOVZ W8, 0x1
	0x03C67E3C STRB W8, [X23 + 0x5BE]
	0x03C67E40 LDR X0, [X22]
	0x03C67E44 LDR W8, [X0 + 0xE0]
	0x03C67E48 CBNZ W8, 0x3C67E50
	0x03C67E4C BL 0x1C16DFC
	0x03C67E50 AND W2, W21, 0x1

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+32], X20
	004 Move [X31+40], X19
	005 Move X19, 0x780000
	006 Move [X31], S0
	007 Move [X31+8], S1
	008 Move [X31+8], S2
	009 Move [X31+16], S3
	010 Move X20, 0x4B4000
	011 Move W8, [X19+1457]
	012 Move X20, [X20+1216]
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x4B4000
	018 Move X0, [X0+1216]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X19+1457], W8
	022 Move X0, [X20]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X19, 0x780000
	028 Move X8, [X19+1560]
	029 Compare X8, 0
	030 JumpIfNotEqual {36}
	031 Move X0, -51720192
	032 Add X0, X0, 735
	033 Call 0x1C17CB8
	034 Move X8, X0
	035 Move [X19+1560], X0
	036 Add X0, X31, 0
	037 NotImplemented "Instruction BLR not yet implemented."
	038 Move X20, [X31+32]
	039 Move X19, [X31+40]
	040 Move X30, [X31+16]
	041 Add X31, X31, 48
	042 Return 

Method: System.Void .cctor()

Disassembly:
	0x03C67E90 STP D11, D10, [X31 + 0x30]
	0x03C67E94 STP D9, D8, [X31 + 0x40]
	0x03C67E98 STP X30, X23, [X31 + 0x50]
	0x03C67E9C STP X22, X21, [X31 + 0x60]
	0x03C67EA0 STP X20, X19, [X31 + 0x70]
	0x03C67EA4 ADRP X23, 0x77F000
	0x03C67EA8 ADRP X22, 0x4B3000
	0x03C67EAC LDRB W8, [X23 + 0x5BF]
	0x03C67EB0 LDR X22, [X22 + 0x4C0]
	0x03C67EB4 MOV V8.16B, V4.16B
	0x03C67EB8 MOV W21, W2
	0x03C67EBC MOV W19, W1
	0x03C67EC0 MOV X20, X0
	0x03C67EC4 MOV V9.16B, V3.16B
	0x03C67EC8 MOV V10.16B, V2.16B
	0x03C67ECC MOV V11.16B, V1.16B
	0x03C67ED0 MOV V12.16B, V0.16B
	0x03C67ED4 TBNZ X8, 0x0, 0x3C67EEC
	0x03C67ED8 ADRP X0, 0x4B3000
	0x03C67EDC LDR X0, [X0 + 0x4C0]
	0x03C67EE0 BL 0x1C16CF4
	0x03C67EE4 MOVZ W8, 0x1
	0x03C67EE8 STRB W8, [X23 + 0x5BF]
	0x03C67EEC LDR X0, [X22]
	0x03C67EF0 LDR W8, [X0 + 0xE0]
	0x03C67EF4 CBNZ W8, 0x3C67EFC
	0x03C67EF8 BL 0x1C16DFC
	0x03C67EFC BL 0x3C66568
	0x03C67F00 STP S2, S3, [X31 + 0x8]
	0x03C67F04 AND W2, W21, 0x1
	0x03C67F08 STP S0, S1, [X31]
	0x03C67F0C MOV V0.16B, V12.16B
	0x03C67F10 MOV V1.16B, V11.16B
	0x03C67F14 MOV V2.16B, V10.16B
	0x03C67F18 MOV V3.16B, V9.16B
	0x03C67F1C MOV X0, X20
	0x03C67F20 MOV W1, W19
	0x03C67F24 MOV V4.16B, V8.16B
	0x03C67F28 STR W31, [X31 + 0x18]
	0x03C67F2C STR W31, [X31 + 0x10]
	0x03C67F30 BL 0x3C67F54
	0x03C67F34 LDP X20, X19, [X31 + 0x70]
	0x03C67F38 LDP X22, X21, [X31 + 0x60]
	0x03C67F3C LDP X30, X23, [X31 + 0x50]
	0x03C67F40 LDP D9, D8, [X31 + 0x40]
	0x03C67F44 LDP D11, D10, [X31 + 0x30]
	0x03C67F48 LDR V12, [X31 + 0x20]
	0x03C67F4C ADD X31, X31, 0x80
	0x03C67F50 RET
	0x03C67F54 SUB X31, X31, 0xC0
	0x03C67F58 STP D15, D14, [X31 + 0x50]
	0x03C67F5C STP D13, D12, [X31 + 0x60]
	0x03C67F60 STP D11, D10, [X31 + 0x70]
	0x03C67F64 STP D9, D8, [X31 + 0x80]
	0x03C67F68 STP X30, X23, [X31 + 0x90]
	0x03C67F6C STP X22, X21, [X31 + 0xA0]
	0x03C67F70 STP X20, X19, [X31 + 0xB0]
	0x03C67F74 ADRP X22, 0x77F000
	0x03C67F78 LDRB W8, [X22 + 0x5C0]
	0x03C67F7C MOV W21, W2
	0x03C67F80 MOV W19, W1
	0x03C67F84 MOV X20, X0
	0x03C67F88 STP S3, S4, [X31 + 0x48]
	0x03C67F8C STP S1, S2, [X31 + 0x40]
	0x03C67F90 STR S0, [X31 + 0x3C]
	0x03C67F94 TBNZ X8, 0x0, 0x3C67FAC
	0x03C67F98 ADRP X0, 0x4B3000
	0x03C67F9C LDR X0, [X0 + 0x4C0]
	0x03C67FA0 BL 0x1C16CF4
	0x03C67FA4 MOVZ W8, 0x1
	0x03C67FA8 STRB W8, [X22 + 0x5C0]
	0x03C67FAC ADRP X23, 0x77A000
	0x03C67FB0 ADRP X22, 0x4B3000
	0x03C67FB4 LDRB W8, [X23 + 0xE39]
	0x03C67FB8 LDR X22, [X22 + 0x4C0]
	0x03C67FBC CBNZ W8, 0x3C67FD4
	0x03C67FC0 ADRP X0, 0x493000
	0x03C67FC4 LDR X0, [X0 + 0x9A0]
	0x03C67FC8 BL 0x1C16CF4
	0x03C67FCC MOVZ W8, 0x1
	0x03C67FD0 STRB W8, [X23 + 0xE39]
	0x03C67FD4 ADRP X8, 0x493000
	0x03C67FD8 LDR X8, [X8 + 0x9A0]
	0x03C67FDC LDR X0, [X22]
	0x03C67FE0 LDP S5, S4, [X31 + 0xC8]
	0x03C67FE4 LDP S15, S8, [X31 + 0xC0]
	0x03C67FE8 LDR X8, [X8]
	0x03C67FEC LDR V9, [X31 + 0xD8]
	0x03C67FF0 LDR V10, [X31 + 0xD0]
	0x03C67FF4 LDR W9, [X0 + 0xE0]
	0x03C67FF8 LDR X8, [X8 + 0xB8]
	0x03C67FFC LDP S11, S12, [X8 + 0x10]
	0x03C68000 LDP S13, S14, [X8 + 0x18]
	0x03C68004 CBNZ W9, 0x3C68014
	0x03C68008 STP S5, S4, [X31 + 0x34]
	0x03C6800C BL 0x1C16DFC
	0x03C68010 LDP S5, S4, [X31 + 0x34]
	0x03C68014 FMUL S0, S14, S10
	0x03C68018 FMUL S1, S13, S10
	0x03C6801C FMUL S2, S12, S10
	0x03C68020 FMUL S3, S11, S10
	0x03C68024 STP S0, S9, [X31 + 0x1C]
	0x03C68028 STP S2, S1, [X31 + 0x14]
	0x03C6802C STP S4, S3, [X31 + 0xC]
	0x03C68030 LDP S0, S1, [X31 + 0x3C]
	0x03C68034 LDP S2, S3, [X31 + 0x44]
	0x03C68038 LDR V4, [X31 + 0x4C]
	0x03C6803C AND W2, W21, 0x1
	0x03C68040 MOV X0, X20
	0x03C68044 MOV W1, W19
	0x03C68048 STP S15, S8, [X31]
	0x03C6804C STR S5, [X31 + 0x8]
	0x03C68050 BL 0x3C68078
	0x03C68054 LDP X20, X19, [X31 + 0xB0]
	0x03C68058 LDP X22, X21, [X31 + 0xA0]
	0x03C6805C LDP X30, X23, [X31 + 0x90]
	0x03C68060 LDP D9, D8, [X31 + 0x80]
	0x03C68064 LDP D11, D10, [X31 + 0x70]
	0x03C68068 LDP D13, D12, [X31 + 0x60]
	0x03C6806C LDP D15, D14, [X31 + 0x50]
	0x03C68070 ADD X31, X31, 0xC0
	0x03C68074 RET
	0x03C68078 SUB X31, X31, 0xD0
	0x03C6807C STP D15, D14, [X31 + 0x60]
	0x03C68080 STP D13, D12, [X31 + 0x70]
	0x03C68084 STP D11, D10, [X31 + 0x80]
	0x03C68088 STP D9, D8, [X31 + 0x90]
	0x03C6808C STP X30, X23, [X31 + 0xA0]
	0x03C68090 STP X22, X21, [X31 + 0xB0]
	0x03C68094 STP X20, X19, [X31 + 0xC0]
	0x03C68098 ADRP X22, 0x77E000
	0x03C6809C LDRB W8, [X22 + 0x5C1]
	0x03C680A0 MOV W21, W2
	0x03C680A4 MOV W19, W1
	0x03C680A8 MOV X20, X0
	0x03C680AC STP S3, S4, [X31 + 0x58]
	0x03C680B0 STP S1, S2, [X31 + 0x50]
	0x03C680B4 STR S0, [X31 + 0x4C]
	0x03C680B8 TBNZ X8, 0x0, 0x3C680D0
	0x03C680BC ADRP X0, 0x4B2000
	0x03C680C0 LDR X0, [X0 + 0x4C0]
	0x03C680C4 BL 0x1C16CF4
	0x03C680C8 MOVZ W8, 0x1
	0x03C680CC STRB W8, [X22 + 0x5C1]
	0x03C680D0 ADRP X23, 0x779000
	0x03C680D4 ADRP X22, 0x4B2000
	0x03C680D8 LDRB W8, [X23 + 0xE39]
	0x03C680DC LDR X22, [X22 + 0x4C0]
	0x03C680E0 CBNZ W8, 0x3C680F8
	0x03C680E4 ADRP X0, 0x492000
	0x03C680E8 LDR X0, [X0 + 0x9A0]
	0x03C680EC BL 0x1C16CF4
	0x03C680F0 MOVZ W8, 0x1
	0x03C680F4 STRB W8, [X23 + 0xE39]
	0x03C680F8 ADRP X8, 0x492000
	0x03C680FC LDR X8, [X8 + 0x9A0]
	0x03C68100 LDR X0, [X22]
	0x03C68104 LDP S5, S4, [X31 + 0xE8]
	0x03C68108 LDP S16, S11, [X31 + 0xE0]
	0x03C6810C LDR X8, [X8]
	0x03C68110 LDP S7, S6, [X31 + 0xD8]
	0x03C68114 LDP S10, S12, [X31 + 0xD0]
	0x03C68118 LDR V15, [X31 + 0xF0]
	0x03C6811C LDR X8, [X8 + 0xB8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x780000
	006 Move X20, 0x4B4000
	007 Move X19, 0x4FA000
	008 Move W8, [X21+1458]
	009 Move X20, [X20+1216]
	010 Move X19, [X19+568]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {50}
	015 Move X0, 0x48E000
	016 Move X0, [X0+2544]
	017 Call 0x1C17CF4
	018 Move X0, 0x4B4000
	019 Move X0, [X0+1216]
	020 Call 0x1C17CF4
	021 Move X0, 0x4FA000
	022 Move X0, [X0+576]
	023 Call 0x1C17CF4
	024 Move X0, 0x4FA000
	025 Move X0, [X0+584]
	026 Call 0x1C17CF4
	027 Move X0, 0x4FA000
	028 Move X0, [X0+592]
	029 Call 0x1C17CF4
	030 Move X0, 0x4DF000
	031 Move X0, [X0+848]
	032 Call 0x1C17CF4
	033 Move X0, 0x4FA000
	034 Move X0, [X0+568]
	035 Call 0x1C17CF4
	036 Move X0, 0x4FA000
	037 Move X0, [X0+600]
	038 Call 0x1C17CF4
	039 Move X0, 0x4FA000
	040 Move X0, [X0+608]
	041 Call 0x1C17CF4
	042 Move X0, 0x4FA000
	043 Move X0, [X0+616]
	044 Call 0x1C17CF4
	045 Move X0, 0x4FA000
	046 Move X0, [X0+624]
	047 Call 0x1C17CF4
	048 Move W8, 1
	049 Move [X21+1458], W8
	050 Move X8, [X20]
	051 Move TEMP, 0
	052 Not TEMP
	053 Move W9, TEMP
	054 Move X8, [X8+184]
	055 Move [X8], W9
	056 Move X0, [X19]
	057 Compare X0, 0
	058 JumpIfEqual {192}
	059 Move X8, [X0]
	060 Move X19, 0x4DF000
	061 Move X9, [X8+344]
	062 Move X1, [X8+352]
	063 Move X19, [X19+848]
	064 NotImplemented "Instruction BLR not yet implemented."
	065 Move X8, [X20]
	066 Move X8, [X8+184]
	067 Move [X8+4], W0
	068 Move X0, [X19]
	069 Compare X0, 0
	070 JumpIfEqual {192}
	071 Move X8, [X0]
	072 Move X19, 0x4FA000
	073 Move X9, [X8+344]
	074 Move X1, [X8+352]
	075 Move X19, [X19+584]
	076 NotImplemented "Instruction BLR not yet implemented."
	077 Move X8, [X20]
	078 Move X8, [X8+184]
	079 Move [X8+8], W0
	080 Move X0, [X19]
	081 Compare X0, 0
	082 JumpIfEqual {192}
	083 Move X8, [X0]
	084 Move X19, 0x4FA000
	085 Move X9, [X8+344]
	086 Move X1, [X8+352]
	087 Move X19, [X19+616]
	088 NotImplemented "Instruction BLR not yet implemented."
	089 Move X8, [X20]
	090 Move X8, [X8+184]
	091 Move [X8+12], W0
	092 Move X0, [X19]
	093 Compare X0, 0
	094 JumpIfEqual {192}
	095 Move X8, [X0]
	096 Move X19, 0x4FA000
	097 Move X9, [X8+344]
	098 Move X1, [X8+352]
	099 Move X19, [X19+624]
	100 NotImplemented "Instruction BLR not yet implemented."
	101 Move X8, [X20]
	102 Move X8, [X8+184]
	103 Move [X8+16], W0
	104 Move X0, [X19]
	105 Compare X0, 0
	106 JumpIfEqual {192}
	107 Move X8, [X0]
	108 Move X19, 0x4FA000
	109 Move X9, [X8+344]
	110 Move X1, [X8+352]
	111 Move X19, [X19+608]
	112 NotImplemented "Instruction BLR not yet implemented."
	113 Move X8, [X20]
	114 Move X8, [X8+184]
	115 Move [X8+20], W0
	116 Move X0, [X19]
	117 Compare X0, 0
	118 JumpIfEqual {192}
	119 Move X8, [X0]
	120 Move X19, 0x4F9000
	121 Move X9, [X8+344]
	122 Move X1, [X8+352]
	123 Move X19, [X19+600]
	124 NotImplemented "Instruction BLR not yet implemented."
	125 Move X8, [X20]
	126 Move X8, [X8+184]
	127 Move [X8+24], W0
	128 Move X0, [X19]
	129 Compare X0, 0
	130 JumpIfEqual {192}
	131 Move X8, [X0]
	132 Move X19, 0x4F9000
	133 Move X9, [X8+344]
	134 Move X1, [X8+352]
	135 Move X19, [X19+592]
	136 NotImplemented "Instruction BLR not yet implemented."
	137 Move X8, [X20]
	138 Move X8, [X8+184]
	139 Move [X8+28], W0
	140 Move X0, [X19]
	141 Compare X0, 0
	142 JumpIfEqual {192}
	143 Move X8, [X0]
	144 Move X19, 0x4F9000
	145 Move X21, 0x48D000
	146 Move X9, [X8+344]
	147 Move X1, [X8+352]
	148 Move X19, [X19+576]
	149 Move X21, [X21+2544]
	150 NotImplemented "Instruction BLR not yet implemented."
	151 Move X8, [X20]
	152 Move X8, [X8+184]
	153 Move [X8+32], W0
	154 Move X0, [X19]
	155 Call 0x1C17F10
	156 Move X1, X31
	157 Move X19, X0
	158 Call GenericStack..ctor, X0
	159 Move X8, [X20]
	160 Move X8, [X8+184]
	161 Move [X8+72], X19
	162 Move X0, [X21]
	163 Move W8, [X0+224]
	164 Compare W8, 0
	165 JumpIfNotEqual {167}
	166 Call 0x1C17DFC
	167 Move X0, X31
	168 Call DateTime.get_Now
	169 Move X21, 0x77F000
	170 Move W8, [X21+2434]
	171 Move X19, X0
	172 Compare W8, 0
	173 JumpIfNotEqual {179}
	174 Move X0, 0x4B3000
	175 Move X0, [X0+1216]
	176 Call 0x1C17CF4
	177 Move W8, 1
	178 Move [X21+2434], W8
	179 Move X0, [X20]
	180 Move W8, [X0+224]
	181 Compare W8, 0
	182 JumpIfNotEqual {185}
	183 Call 0x1C17DFC
	184 Move X0, [X20]
	185 Move X8, [X0+184]
	186 Move [X8+40], X19
	187 Move X20, [X31+16]
	188 Move X19, [X31+24]
	189 Move X30, [X31+32]
	190 Move X21, [X31+40]
	191 Return 
	192 Call 0x1C17F20

Method: System.Int32 get_scrollTroughSide()

Disassembly:
	0x03C68120 LDP S13, S14, [X8 + 0x10]
	0x03C68124 LDP S8, S9, [X8 + 0x18]
	0x03C68128 LDR W8, [X0 + 0xE0]
	0x03C6812C CBNZ W8, 0x3C6814C
	0x03C68130 STP S5, S4, [X31 + 0x44]
	0x03C68134 STP S7, S6, [X31 + 0x3C]
	0x03C68138 STR S16, [X31 + 0x38]
	0x03C6813C BL 0x1C16DFC
	0x03C68140 LDP S16, S7, [X31 + 0x38]
	0x03C68144 LDP S6, S5, [X31 + 0x40]
	0x03C68148 LDR V4, [X31 + 0x48]
	0x03C6814C FMUL S0, S9, S15
	0x03C68150 FMUL S1, S8, S15
	0x03C68154 FMUL S2, S14, S15
	0x03C68158 FMUL S3, S13, S15
	0x03C6815C STP S1, S0, [X31 + 0x28]
	0x03C68160 STP S3, S2, [X31 + 0x20]
	0x03C68164 STP S5, S4, [X31 + 0x18]
	0x03C68168 LDP S0, S1, [X31 + 0x4C]
	0x03C6816C LDP S2, S3, [X31 + 0x54]
	0x03C68170 LDR V4, [X31 + 0x5C]
	0x03C68174 AND W2, W21, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x77F000
	005 Move X19, 0x4B3000
	006 Move W8, [X20+1459]
	007 Move X19, [X19+1216]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x4B3000
	013 Move X0, [X0+1216]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+1459], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move W0, [X8+36]
	027 Move X30, [X31+32]
	028 Return X0

Method: System.Void set_scrollTroughSide(System.Int32 value)

Disassembly:
	0x03C68178 MOV X0, X20
	0x03C6817C MOV W1, W19
	0x03C68180 STP S16, S11, [X31 + 0x10]
	0x03C68184 STP S10, S12, [X31]
	0x03C68188 STP S7, S6, [X31 + 0x8]
	0x03C6818C BL 0x3C681B4
	0x03C68190 LDP X20, X19, [X31 + 0xC0]
	0x03C68194 LDP X22, X21, [X31 + 0xB0]
	0x03C68198 LDP X30, X23, [X31 + 0xA0]
	0x03C6819C LDP D9, D8, [X31 + 0x90]
	0x03C681A0 LDP D11, D10, [X31 + 0x80]
	0x03C681A4 LDP D13, D12, [X31 + 0x70]
	0x03C681A8 LDP D15, D14, [X31 + 0x60]
	0x03C681AC ADD X31, X31, 0xD0
	0x03C681B0 RET
	0x03C681B4 SUB X31, X31, 0xA0
	0x03C681B8 STP D15, D14, [X31 + 0x30]
	0x03C681BC STP D13, D12, [X31 + 0x40]
	0x03C681C0 STP D11, D10, [X31 + 0x50]
	0x03C681C4 STP D9, D8, [X31 + 0x60]
	0x03C681C8 STP X30, X23, [X31 + 0x70]
	0x03C681CC STP X22, X21, [X31 + 0x80]
	0x03C681D0 STP X20, X19, [X31 + 0x90]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x77F000
	006 Move X20, 0x4B3000
	007 Move W8, [X21+1460]
	008 Move X20, [X20+1216]
	009 Move W19, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x4B3000
	015 Move X0, [X0+1216]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1460], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {25}
	023 Call 0x1C17DFC
	024 Move X0, [X20]
	025 Move X8, [X0+184]
	026 Move [X8+36], W19
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Return 

Method: System.DateTime get_nextScrollStepTime()

Disassembly:
	0x03C681D4 ADRP X23, 0x77E000
	0x03C681D8 ADRP X22, 0x4B2000
	0x03C681DC LDP S16, S15, [X31 + 0xC8]
	0x03C681E0 LDP S11, S9, [X31 + 0xC0]
	0x03C681E4 LDP S17, S8, [X31 + 0xB8]
	0x03C681E8 LDP S13, S21, [X31 + 0xB0]
	0x03C681EC LDP S20, S14, [X31 + 0xA8]
	0x03C681F0 LDRB W8, [X23 + 0x5C2]
	0x03C681F4 LDP S24, S23, [X31 + 0xA0]
	0x03C681F8 LDR X22, [X22 + 0x4C0]
	0x03C681FC MOV W21, W2
	0x03C68200 MOV W19, W1
	0x03C68204 MOV X20, X0
	0x03C68208 TBNZ X8, 0x0, 0x3C68268
	0x03C6820C ADRP X0, 0x4B2000
	0x03C68210 LDR X0, [X0 + 0x4C0]
	0x03C68214 STP S2, S4, [X31 + 0x20]
	0x03C68218 MOV V10.16B, V3.16B
	0x03C6821C MOV V12.16B, V1.16B
	0x03C68220 STP S0, S20, [X31 + 0x18]
	0x03C68224 STP S17, S16, [X31 + 0x28]
	0x03C68228 STP S13, S11, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x77F000
	005 Move X19, 0x4B3000
	006 Move W8, [X20+1461]
	007 Move X19, [X19+1216]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x4B3000
	013 Move X0, [X0+1216]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+1461], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X0, [X8+40]
	027 Move X30, [X31+32]
	028 Return X0

Method: System.Void set_nextScrollStepTime(System.DateTime value)

Disassembly:
	0x03C6822C MOV V11.16B, V21.16B
	0x03C68230 MOV V13.16B, V23.16B
	0x03C68234 STR S24, [X31 + 0xC]
	0x03C68238 BL 0x1C16CF4
	0x03C6823C MOV V23.16B, V13.16B
	0x03C68240 LDP S24, S13, [X31 + 0xC]
	0x03C68244 MOV V21.16B, V11.16B
	0x03C68248 LDP S11, S0, [X31 + 0x14]
	0x03C6824C LDP S17, S16, [X31 + 0x28]
	0x03C68250 LDP S20, S2, [X31 + 0x1C]
	0x03C68254 LDR V4, [X31 + 0x24]
	0x03C68258 MOV V1.16B, V12.16B
	0x03C6825C MOV V3.16B, V10.16B
	0x03C68260 MOVZ W8, 0x1
	0x03C68264 STRB W8, [X23 + 0x5C2]
	0x03C68268 LDR X0, [X22]
	0x03C6826C LDR W8, [X0 + 0xE0]
	0x03C68270 CBNZ W8, 0x3C682B8
	0x03C68274 STP S2, S4, [X31 + 0x20]
	0x03C68278 MOV V10.16B, V3.16B
	0x03C6827C MOV V12.16B, V1.16B
	0x03C68280 STP S0, S20, [X31 + 0x18]
	0x03C68284 STP S15, S23, [X31 + 0xC]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x77F000
	006 Move X20, 0x4B3000
	007 Move W8, [X21+1462]
	008 Move X20, [X20+1216]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x4B3000
	015 Move X0, [X0+1216]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1462], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {25}
	023 Call 0x1C17DFC
	024 Move X0, [X20]
	025 Move X8, [X0+184]
	026 Move [X8+40], X19
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Return 

Method: System.Void set_skin(UnityEngine.GUISkin value)

Disassembly:
	0x03C68288 STP S17, S16, [X31 + 0x28]
	0x03C6828C STR S21, [X31 + 0x14]
	0x03C68290 MOV V15.16B, V24.16B
	0x03C68294 BL 0x1C16DFC
	0x03C68298 MOV V24.16B, V15.16B
	0x03C6829C LDP S23, S21, [X31 + 0x10]
	0x03C682A0 LDP S17, S16, [X31 + 0x28]
	0x03C682A4 LDP S0, S20, [X31 + 0x18]
	0x03C682A8 LDR V15, [X31 + 0xC]
	0x03C682AC LDP S2, S4, [X31 + 0x20]
	0x03C682B0 MOV V1.16B, V12.16B
	0x03C682B4 MOV V3.16B, V10.16B
	0x03C682B8 STP S11, S9, [X31 + 0xC0]
	0x03C682BC STP S13, S21, [X31 + 0xB0]
	0x03C682C0 STP S16, S15, [X31 + 0xC8]
	0x03C682C4 STP S17, S8, [X31 + 0xB8]
	0x03C682C8 STP S20, S14, [X31 + 0xA8]
	0x03C682CC AND W2, W21, 0x1
	0x03C682D0 MOV X0, X20
	0x03C682D4 MOV W1, W19
	0x03C682D8 LDP X20, X19, [X31 + 0x90]
	0x03C682DC LDP X22, X21, [X31 + 0x80]
	0x03C682E0 LDP X30, X23, [X31 + 0x70]
	0x03C682E4 LDP D9, D8, [X31 + 0x60]
	0x03C682E8 LDP D11, D10, [X31 + 0x50]
	0x03C682EC LDP D13, D12, [X31 + 0x40]
	0x03C682F0 LDP D15, D14, [X31 + 0x30]
	0x03C682F4 STP S24, S23, [X31 + 0xA0]
	0x03C682F8 MOVZ W3, 0x1
	0x03C682FC ADD X31, X31, 0xA0
	0x03C68300 B 0x3C68304

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x77F000
	006 Move X20, 0x4B8000
	007 Move W8, [X21+1463]
	008 Move X20, [X20+1480]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x4B8000
	015 Move X0, [X0+1480]
	016 Call 0x1C17CF4
	017 Move X0, 0x4B3000
	018 Move X0, [X0+1216]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+1463], W8
	022 Move X0, [X20]
	023 Move X20, 0x4B3000
	024 Move W8, [X0+224]
	025 Move X20, [X20+1216]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Call GUIUtility.CheckOnGUI
	030 Move X0, [X20]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move X0, X19
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move X30, [X31+32]
	039 Move X21, [X31+40]
	040 Call GUI.DoSetSkin, X0
	041 Return 

Method: UnityEngine.GUISkin get_skin()

Disassembly:
	0x03C6848C LDR X23, [X23 + 0x5C8]
	0x03C68490 MOV W22, W3
	0x03C68494 MOV V12.16B, V4.16B
	0x03C68498 MOV W21, W2
	0x03C6849C MOV W19, W1
	0x03C684A0 MOV X20, X0
	0x03C684A4 MOV V10.16B, V3.16B
	0x03C684A8 MOV V11.16B, V2.16B
	0x03C684AC MOV V8.16B, V1.16B
	0x03C684B0 MOV V9.16B, V0.16B
	0x03C684B4 TBNZ X8, 0x0, 0x3C68508
	0x03C684B8 ADRP X0, 0x48B000
	0x03C684BC LDR X0, [X0 + 0xA28]
	0x03C684C0 BL 0x1C16CF4
	0x03C684C4 ADRP X0, 0x4B7000
	0x03C684C8 LDR X0, [X0 + 0x5C8]
	0x03C684CC BL 0x1C16CF4
	0x03C684D0 ADRP X0, 0x4B2000
	0x03C684D4 LDR X0, [X0 + 0x4C0]
	0x03C684D8 BL 0x1C16CF4
	0x03C684DC ADRP X0, 0x48F000
	0x03C684E0 LDR X0, [X0 + 0x2C8]
	0x03C684E4 BL 0x1C16CF4
	0x03C684E8 ADRP X0, 0x48B000
	0x03C684EC LDR X0, [X0 + 0x598]
	0x03C684F0 BL 0x1C16CF4
	0x03C684F4 ADRP X0, 0x4F8000
	0x03C684F8 LDR X0, [X0 + 0x290]
	0x03C684FC BL 0x1C16CF4
	0x03C68500 MOVZ W8, 0x1
	0x03C68504 STRB W8, [X24 + 0x5C4]
	0x03C68508 ADD X0, X31, 0x60

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x77F000
	005 Move X19, 0x4B8000
	006 Move W8, [X20+1464]
	007 Move X19, [X19+1480]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x4B8000
	013 Move X0, [X0+1480]
	014 Call 0x1C17CF4
	015 Move X0, 0x4B3000
	016 Move X0, [X0+1216]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+1464], W8
	020 Move X0, [X19]
	021 Move X19, 0x4B3000
	022 Move W8, [X0+224]
	023 Move X19, [X19+1216]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Call GUIUtility.CheckOnGUI
	028 Move X0, [X19]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {34}
	032 Call 0x1C17DFC
	033 Move X0, [X19]
	034 Move X8, [X0+184]
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X0, [X8+48]
	038 Move X30, [X31+32]
	039 Return X0

Method: System.Void DoSetSkin(UnityEngine.GUISkin newSkin)

Disassembly:
	0x03C683C4 STP S3, S4, [X31 + 0x88]
	0x03C683C8 STP S1, S2, [X31 + 0x80]
	0x03C683CC STP S5, S0, [X31 + 0x78]
	0x03C683D0 STP S7, S6, [X31 + 0x70]
	0x03C683D4 STR S16, [X31 + 0x6C]
	0x03C683D8 BL 0x1C16DFC
	0x03C683DC LDP S16, S7, [X31 + 0x6C]
	0x03C683E0 LDP S6, S5, [X31 + 0x74]
	0x03C683E4 LDP S0, S1, [X31 + 0x7C]
	0x03C683E8 LDP S2, S3, [X31 + 0x84]
	0x03C683EC LDR V4, [X31 + 0x8C]
	0x03C683F0 AND W2, W22, 0x1
	0x03C683F4 AND W3, W21, 0x1
	0x03C683F8 MOV X0, X20
	0x03C683FC MOV W1, W19
	0x03C68400 STP S11, S12, [X31 + 0x50]
	0x03C68404 STP S15, S8, [X31 + 0x40]
	0x03C68408 STP S13, S14, [X31 + 0x30]
	0x03C6840C STP S13, S14, [X31 + 0x20]
	0x03C68410 STP S13, S14, [X31 + 0x10]
	0x03C68414 STP S13, S14, [X31]
	0x03C68418 STP S16, S5, [X31 + 0x58]
	0x03C6841C STP S7, S6, [X31 + 0x48]
	0x03C68420 STP S10, S9, [X31 + 0x38]
	0x03C68424 STP S10, S9, [X31 + 0x28]
	0x03C68428 STP S10, S9, [X31 + 0x18]
	0x03C6842C STP S10, S9, [X31 + 0x8]
	0x03C68430 BL 0x3C6845C
	0x03C68434 LDP X20, X19, [X31 + 0x100]
	0x03C68438 LDP X22, X21, [X31 + 0xF0]
	0x03C6843C LDP X24, X23, [X31 + 0xE0]
	0x03C68440 LDP X29, X30, [X31 + 0xD0]
	0x03C68444 LDP D9, D8, [X31 + 0xC0]
	0x03C68448 LDP D11, D10, [X31 + 0xB0]
	0x03C6844C LDP D13, D12, [X31 + 0xA0]
	0x03C68450 LDP D15, D14, [X31 + 0x90]
	0x03C68454 ADD X31, X31, 0x110
	0x03C68458 RET
	0x03C6845C SUB X31, X31, 0x1A0
	0x03C68460 STP D15, D14, [X31 + 0x120]
	0x03C68464 STP D13, D12, [X31 + 0x130]
	0x03C68468 STP D11, D10, [X31 + 0x140]
	0x03C6846C STP D9, D8, [X31 + 0x150]
	0x03C68470 STP X29, X30, [X31 + 0x160]
	0x03C68474 STP X24, X23, [X31 + 0x170]
	0x03C68478 STP X22, X21, [X31 + 0x180]
	0x03C6847C STP X20, X19, [X31 + 0x190]
	0x03C68480 ADRP X24, 0x77E000
	0x03C68484 ADRP X23, 0x4B7000
	0x03C68488 LDRB W8, [X24 + 0x5C4]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x77F000
	006 Move X21, 0x48C000
	007 Move W8, [X20+1465]
	008 Move X21, [X21+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0x4B8000
	015 Move X0, [X0+1480]
	016 Call 0x1C17CF4
	017 Move X0, 0x4B3000
	018 Move X0, [X0+1216]
	019 Call 0x1C17CF4
	020 Move X0, 0x48C000
	021 Move X0, [X0+1432]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+1465], W8
	025 Move X0, [X21]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X20, 0x4B3000
	031 Move X20, [X20+1216]
	032 Move X0, X19
	033 Move X1, X31
	034 Call Object.op_Implicit, X0
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {48}
	039 Move X8, 0x4B8000
	040 Move X8, [X8+1480]
	041 Move X0, [X8]
	042 Move W8, [X0+224]
	043 Compare W8, 0
	044 JumpIfNotEqual {46}
	045 Call 0x1C17DFC
	046 Call GUIUtility.GetDefaultSkin
	047 Move X19, X0
	048 Move X0, [X20]
	049 Move W8, [X0+224]
	050 Compare W8, 0
	051 JumpIfNotEqual {54}
	052 Call 0x1C17DFC
	053 Move X0, [X20]
	054 Move X8, [X0+184]
	055 Move [X8+48], X19
	056 Compare X19, 0
	057 JumpIfEqual {65}
	058 Move X0, X19
	059 Move X20, [X31+16]
	060 Move X19, [X31+24]
	061 Move X30, [X31+32]
	062 Move X21, [X31+40]
	063 Call GUISkin.MakeCurrent, X0
	064 Return 
	065 Call 0x1C17F20

Method: UnityEngine.Matrix4x4 get_matrix()

Disassembly:
	0x03C68684 LDR V1, [X31 + 0x1C0]
	0x03C68688 LDR V0, [X31 + 0x1C4]
	0x03C6868C ADRP X8, 0xFFFFFFFFFCE81000
	0x03C68690 LDR V9, [X8 + 0xF20]
	0x03C68694 ADRP X8, 0x492000
	0x03C68698 STP S0, S1, [X31 + 0x54]
	0x03C6869C LDR V1, [X31 + 0x1C8]
	0x03C686A0 LDR V0, [X31 + 0x1CC]
	0x03C686A4 LDR V16, [X31 + 0x1B0]
	0x03C686A8 LDR V14, [X31 + 0x1A0]
	0x03C686AC LDR V15, [X31 + 0x1A4]
	0x03C686B0 STP S0, S1, [X31 + 0x4C]
	0x03C686B4 LDR X8, [X8 + 0x9A0]
	0x03C686B8 LDR V1, [X31 + 0x1D0]
	0x03C686BC LDR V0, [X31 + 0x1D4]
	0x03C686C0 STP S5, S4, [X31 + 0x2C]
	0x03C686C4 LDR X8, [X8]
	0x03C686C8 STP S16, S6, [X31 + 0x24]
	0x03C686CC STP S1, S0, [X31 + 0x3C]
	0x03C686D0 LDR V1, [X31 + 0x1D8]
	0x03C686D4 LDR X8, [X8 + 0xB8]
	0x03C686D8 LDR V0, [X31 + 0x1DC]
	0x03C686DC LDR V13, [X31 + 0x1A8]
	0x03C686E0 LDR V8, [X31 + 0x1AC]
	0x03C686E4 LDP S3, S2, [X8]
	0x03C686E8 STP S1, S0, [X31 + 0x44]
	0x03C686EC LDP S1, S0, [X8 + 0x8]

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+128], X30
	003 Move [X31+144], X20
	004 Move [X31+152], X19
	005 Move X20, 0x77F000
	006 Move X19, X8
	007 Move X8, [X20+1624]
	008 NotImplemented "Instruction MOVI not yet implemented."
	009 Move [X31+96], V0
	010 Move [X31+104], V0
	011 Move [X31+64], V0
	012 Move [X31+72], V0
	013 Compare X8, 0
	014 JumpIfNotEqual {20}
	015 Move X0, -51830784
	016 Add X0, X0, 2641
	017 Call 0x1C17CB8
	018 Move X8, X0
	019 Move [X20+1624], X0
	020 Add X0, X31, 64
	021 NotImplemented "Instruction BLR not yet implemented."
	022 Move V1, [X31+96]
	023 Move V0, [X31+112]
	024 Move V3, [X31+64]
	025 Move V2, [X31+80]
	026 Move X30, [X31+128]
	027 Move [X19+32], V1
	028 Move [X19+40], V0
	029 Move [X19], V3
	030 Move [X19+8], V2
	031 Move X20, [X31+144]
	032 Move X19, [X31+152]
	033 Move [X31+32], V1
	034 Move [X31+40], V0
	035 Move [X31], V3
	036 Move [X31+8], V2
	037 Add X31, X31, 160
	038 Return X0

Method: System.Void set_matrix(UnityEngine.Matrix4x4 value)

Disassembly:
	0x03C68754 FSUB S1, S15, S17
	0x03C68758 FSUB S2, S13, S18
	0x03C6875C FMUL S0, S0, S0
	0x03C68760 FMUL S1, S1, S1
	0x03C68764 FSUB S3, S8, S19
	0x03C68768 FMUL S2, S2, S2
	0x03C6876C FADD S0, S0, S1
	0x03C68770 FADD S0, S2, S0
	0x03C68774 FMUL S1, S3, S3
	0x03C68778 FADD S0, S1, S0
	0x03C6877C FCMP S0, S9
	0x03C68780 B.PL 0x3C687C0
	0x03C68784 LDP S1, S0, [X31 + 0x54]
	0x03C68788 LDP S3, S2, [X31 + 0x4C]
	0x03C6878C FSUB S0, S14, S0
	0x03C68790 FSUB S1, S15, S1
	0x03C68794 FSUB S2, S13, S2
	0x03C68798 FMUL S0, S0, S0
	0x03C6879C FMUL S1, S1, S1

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+64], X30
	003 Move [X31+72], X19
	004 Move X19, 0x77F000
	005 Move V0, [X0+32]
	006 Move V1, [X0+48]
	007 Move V2, [X0]
	008 Move V3, [X0+16]
	009 Move X8, [X19+1632]
	010 Move [X31+32], V0
	011 Move [X31+40], V1
	012 Move [X31], V2
	013 Move [X31+8], V3
	014 Compare X8, 0
	015 JumpIfNotEqual {21}
	016 Move X0, -51789824
	017 Add X0, X0, 1946
	018 Call 0x1C17CB8
	019 Move X8, X0
	020 Move [X19+1632], X0
	021 Add X0, X31, 0
	022 NotImplemented "Instruction BLR not yet implemented."
	023 Move X30, [X31+64]
	024 Move X19, [X31+72]
	025 Add X31, X31, 80
	026 Return 

Method: System.Void Label(UnityEngine.Rect position, System.String text)

Disassembly:
	0x03C687DC STR S11, [X31 + 0x4]
	0x03C687E0 ADRP X8, 0x4B2000
	0x03C687E4 LDR X8, [X8 + 0x4C0]
	0x03C687E8 FSUB S3, S23, S3
	0x03C687EC FSUB S2, S22, S2
	0x03C687F0 FSUB S1, S21, S1
	0x03C687F4 LDR X0, [X8]
	0x03C687F8 FMUL S3, S3, S3
	0x03C687FC FMUL S2, S2, S2
	0x03C68800 FSUB S0, S20, S0
	0x03C68804 LDR W8, [X0 + 0xE0]
	0x03C68808 FADD S2, S3, S2
	0x03C6880C FMUL S1, S1, S1
	0x03C68810 FADD S1, S1, S2
	0x03C68814 FMUL S0, S0, S0
	0x03C68818 MOV V11.16B, V10.16B
	0x03C6881C FADD S10, S0, S1
	0x03C68820 CBNZ W8, 0x3C68828
	0x03C68824 BL 0x1C16DFC
	0x03C68828 FCMP S10, S9
	0x03C6882C B.MI 0x3C68864
	0x03C68830 ADRP X21, 0x77E000
	0x03C68834 LDR X8, [X21 + 0x580]
	0x03C68838 LDR V9, [X31 + 0x38]
	0x03C6883C MOV V10.16B, V11.16B
	0x03C68840 CBNZ X8, 0x3C68858
	0x03C68844 ADRP X0, 0xFFFFFFFFFCEA1000
	0x03C68848 ADD X0, X0, 0x92B
	0x03C6884C BL 0x1C16CB8
	0x03C68850 MOV X8, X0
	0x03C68854 STR X0, [X21 + 0x580]
	0x03C68858 BLR X8
	0x03C6885C LDR V11, [X31 + 0x4]
	0x03C68860 B 0x3C6896C
	0x03C68864 LDR V9, [X31 + 0x38]
	0x03C68868 MOV V10.16B, V11.16B
	0x03C6886C TBZ X21, 0x0, 0x3C68944
	0x03C68870 ADRP X21, 0x77E000
	0x03C68874 LDR X8, [X21 + 0x570]
	0x03C68878 LDR V11, [X31 + 0x4]
	0x03C6887C CBNZ X8, 0x3C68968
	0x03C68880 ADRP X0, 0xFFFFFFFFFCE87000
	0x03C68884 ADD X0, X0, 0x570
	0x03C68888 BL 0x1C16CB8
	0x03C6888C MOV X8, X0
	0x03C68890 STR X0, [X21 + 0x570]
	0x03C68894 B 0x3C68968
	0x03C68898 ADRP X8, 0x4B2000
	0x03C6889C LDP S0, S1, [X31 + 0x3C]
	0x03C688A0 LDP S2, S3, [X31 + 0x44]
	0x03C688A4 LDR X8, [X8 + 0x4C0]
	0x03C688A8 FSUB S0, S14, S0

ISIL:
	001 Move [X31-64], D11
	002 Move [X31-56], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X21, 0x77F000
	010 Move X20, 0x4B7000
	011 Move W8, [X21+1466]
	012 Move X20, [X20+3024]
	013 Move X19, X0
	014 Move V8, V3
	015 Move V9, V2
	016 Move V10, V1
	017 Move V11, V0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {30}
	022 Move X0, 0x4B7000
	023 Move X0, [X0+3024]
	024 Call 0x1C17CF4
	025 Move X0, 0x4B3000
	026 Move X0, [X0+1216]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X21+1466], W8
	030 Move X0, [X20]
	031 Move X20, 0x4B3000
	032 Move W8, [X0+224]
	033 Move X20, [X20+1216]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Move X0, X19
	038 Call GUIContent.Temp, X0
	039 Move X8, [X20]
	040 Move X19, X0
	041 Move W9, [X8+224]
	042 Compare W9, 0
	043 JumpIfNotEqual {47}
	044 Move X0, X8
	045 Call 0x1C17DFC
	046 Move X8, [X20]
	047 Move X8, [X8+184]
	048 Move X8, [X8+48]
	049 Compare X8, 0
	050 JumpIfEqual {67}
	051 Move X1, [X8+56]
	052 Move V2, V9
	053 Move V3, V8
	054 Move X0, X19
	055 Move X20, [X31+48]
	056 Move X19, [X31+56]
	057 Move X30, [X31+32]
	058 Move X21, [X31+40]
	059 Move D9, [X31+16]
	060 Move D8, [X31+24]
	061 Move V0, V11
	062 Move V1, V10
	063 Move D11, [X31+64]
	064 Move D10, [X31+72]
	065 Call GUI.Label, X0, X1, X2
	066 Return 
	067 Call 0x1C17F20

Method: System.Void Label(UnityEngine.Rect position, UnityEngine.GUIContent content, UnityEngine.GUIStyle style)

Disassembly:
	0x03C68940 B 0x3C68968
	0x03C68944 ADRP X21, 0x77E000
	0x03C68948 LDR X8, [X21 + 0x578]
	0x03C6894C LDR V11, [X31 + 0x4]
	0x03C68950 CBNZ X8, 0x3C68968
	0x03C68954 ADRP X0, 0xFFFFFFFFFCEC2000
	0x03C68958 ADD X0, X0, 0xED2
	0x03C6895C BL 0x1C16CB8
	0x03C68960 MOV X8, X0
	0x03C68964 STR X0, [X21 + 0x578]
	0x03C68968 BLR X8
	0x03C6896C LDR V2, [X31 + 0x58]
	0x03C68970 LDR V1, [X31 + 0x54]
	0x03C68974 STP X31, X31, [X31 + 0x80]
	0x03C68978 STP S14, S15, [X31 + 0x90]
	0x03C6897C STP S13, S8, [X31 + 0x98]
	0x03C68980 STP S2, S1, [X31 + 0xA0]
	0x03C68984 LDR V2, [X31 + 0x50]
	0x03C68988 LDR V1, [X31 + 0x4C]
	0x03C6898C STP S14, S15, [X31 + 0xD0]
	0x03C68990 STP S13, S8, [X31 + 0xD8]
	0x03C68994 STRB W22, [X31 + 0x100]
	0x03C68998 STP S2, S1, [X31 + 0xA8]
	0x03C6899C LDR V2, [X31 + 0x24]
	0x03C689A0 LDR V1, [X31 + 0x20]
	0x03C689A4 STR W31, [X31 + 0x104]
	0x03C689A8 ADRP X8, 0x4B2000
	0x03C689AC MOVI V0.2D, 0x0
	0x03C689B0 STP S2, S1, [X31 + 0xB0]
	0x03C689B4 LDR V2, [X31 + 0x1C]
	0x03C689B8 LDR V1, [X31 + 0x18]
	0x03C689BC ADD X9, X31, 0x2
	0x03C689C0 ADD X10, X31, 0x60
	0x03C689C4 STP S2, S1, [X31 + 0xB8]
	0x03C689C8 LDR V2, [X31 + 0x3C]
	0x03C689CC LDR V1, [X31 + 0x40]
	0x03C689D0 STP S2, S1, [X31 + 0xC0]
	0x03C689D4 LDR V2, [X31 + 0x44]
	0x03C689D8 LDR V1, [X31 + 0x48]
	0x03C689DC STP S2, S1, [X31 + 0xC8]
	0x03C689E0 LDR V2, [X31 + 0x30]
	0x03C689E4 LDR V1, [X31 + 0x2C]
	0x03C689E8 STP S2, S1, [X31 + 0xE0]
	0x03C689EC LDR V2, [X31 + 0x28]
	0x03C689F0 LDR V1, [X31 + 0x5C]
	0x03C689F4 STP S2, S1, [X31 + 0xE8]
	0x03C689F8 LDR V2, [X31 + 0x8]

ISIL:
	001 Move [X31-80], D11
	002 Move [X31-72], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X22, 0x77F000
	011 Move X21, 0x4B8000
	012 Move W8, [X22+1467]
	013 Move X21, [X21+1480]
	014 Move X19, X1
	015 Move X20, X0
	016 Move V8, V3
	017 Move V9, V2
	018 Move V10, V1
	019 Move V11, V0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {32}
	024 Move X0, 0x4B8000
	025 Move X0, [X0+1480]
	026 Call 0x1C17CF4
	027 Move X0, 0x4B3000
	028 Move X0, [X0+1216]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X22+1467], W8
	032 Move X0, [X21]
	033 Move X21, 0x4B3000
	034 Move W8, [X0+224]
	035 Move X21, [X21+1216]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Call GUIUtility.CheckOnGUI
	040 Move X0, [X21]
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Move V2, V9
	046 Move V3, V8
	047 Move X0, X20
	048 Move X1, X19
	049 Move X20, [X31+64]
	050 Move X19, [X31+72]
	051 Move X22, [X31+48]
	052 Move X21, [X31+56]
	053 Move X30, [X31+32]
	054 Move D9, [X31+16]
	055 Move D8, [X31+24]
	056 Move V0, V11
	057 Move V1, V10
	058 Move D11, [X31+80]
	059 Move D10, [X31+88]

Method: System.Void DrawTexture(UnityEngine.Rect position, UnityEngine.Texture image)

Disassembly:
	0x03C68CC8 TBNZ X8, 0x0, 0x3C68CEC
	0x03C68CCC ADRP X0, 0x4B7000
	0x03C68CD0 LDR X0, [X0 + 0x5C8]
	0x03C68CD4 BL 0x1C16CF4
	0x03C68CD8 ADRP X0, 0x4B2000
	0x03C68CDC LDR X0, [X0 + 0x4C0]
	0x03C68CE0 BL 0x1C16CF4
	0x03C68CE4 MOVZ W8, 0x1
	0x03C68CE8 STRB W8, [X22 + 0x5C6]
	0x03C68CEC LDR X0, [X21]
	0x03C68CF0 ADRP X21, 0x4B2000
	0x03C68CF4 LDR W8, [X0 + 0xE0]
	0x03C68CF8 LDR X21, [X21 + 0x4C0]
	0x03C68CFC CBNZ W8, 0x3C68D04
	0x03C68D00 BL 0x1C16DFC
	0x03C68D04 BL 0x3C67304
	0x03C68D08 LDR X0, [X21]
	0x03C68D0C LDR W8, [X0 + 0xE0]
	0x03C68D10 CBNZ W8, 0x3C68D1C
	0x03C68D14 BL 0x1C16DFC
	0x03C68D18 LDR X0, [X21]
	0x03C68D1C LDR X8, [X0 + 0xB8]
	0x03C68D20 MOVZ W1, 0x2
	0x03C68D24 LDR W0, [X8 + 0x4]
	0x03C68D28 BL 0x3C68E54
	0x03C68D2C ADRP X23, 0x77E000
	0x03C68D30 ADRP X24, 0x4F1000
	0x03C68D34 LDRB W8, [X23 + 0x510]
	0x03C68D38 LDR X24, [X24 + 0x20]
	0x03C68D3C MOV W21, W0
	0x03C68D40 TBNZ X8, 0x0, 0x3C68D58
	0x03C68D44 ADRP X0, 0x4F1000
	0x03C68D48 LDR X0, [X0 + 0x20]
	0x03C68D4C BL 0x1C16CF4

ISIL:
	001 Move [X31-64], D11
	002 Move [X31-56], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X21, 0x77F000
	010 Move X20, 0x4B3000
	011 Move W8, [X21+1468]
	012 Move X20, [X20+1216]
	013 Move X19, X0
	014 Move V8, V3
	015 Move V9, V2
	016 Move V10, V1
	017 Move V11, V0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {27}
	022 Move X0, 0x4B3000
	023 Move X0, [X0+1216]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+1468], W8
	027 Move X0, [X20]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Move V2, V9
	033 Move V3, V8
	034 Move X0, X19
	035 Move X20, [X31+48]
	036 Move X19, [X31+56]
	037 Move X30, [X31+32]
	038 Move X21, [X31+40]
	039 Move D9, [X31+16]
	040 Move D8, [X31+24]
	041 Move V0, V11
	042 Move V1, V10
	043 Move W1, W31
	044 Move D11, [X31+64]
	045 Move D10, [X31+72]

Method: System.Void DrawTexture(UnityEngine.Rect position, UnityEngine.Texture image, UnityEngine.ScaleMode scaleMode)

Disassembly:
	0x03C68D50 MOVZ W8, 0x1
	0x03C68D54 STRB W8, [X23 + 0x510]
	0x03C68D58 LDR X8, [X24]
	0x03C68D5C LDR X8, [X8 + 0xB8]
	0x03C68D60 LDR X22, [X8]
	0x03C68D64 CBZ X22, 0x3C68E50
	0x03C68D68 ADRP X25, 0x77E000
	0x03C68D6C LDR X8, [X25 + 0x4A8]
	0x03C68D70 CBNZ X8, 0x3C68D88
	0x03C68D74 ADRP X0, 0xFFFFFFFFFCE89000
	0x03C68D78 ADD X0, X0, 0x566
	0x03C68D7C BL 0x1C16CB8
	0x03C68D80 MOV X8, X0
	0x03C68D84 STR X0, [X25 + 0x4A8]
	0x03C68D88 MOV X0, X22
	0x03C68D8C BLR X8
	0x03C68D90 CMP W0, 0x7
	0x03C68D94 B.NE 0x3C68E34
	0x03C68D98 LDRB W8, [X23 + 0x510]
	0x03C68D9C TBNZ X8, 0x0, 0x3C68DB4
	0x03C68DA0 ADRP X0, 0x4F1000
	0x03C68DA4 LDR X0, [X0 + 0x20]
	0x03C68DA8 BL 0x1C16CF4
	0x03C68DAC MOVZ W8, 0x1
	0x03C68DB0 STRB W8, [X23 + 0x510]
	0x03C68DB4 LDR X8, [X24]
	0x03C68DB8 LDR X8, [X8 + 0xB8]
	0x03C68DBC LDR X0, [X8]
	0x03C68DC0 CBZ X0, 0x3C68E50
	0x03C68DC4 BL 0x3C62C40
	0x03C68DC8 FCMP S1, S10
	0x03C68DCC MOV W4, W31
	0x03C68DD0 B.LT 0x3C68DF4
	0x03C68DD4 FCMP S0, S11
	0x03C68DD8 B.LT 0x3C68DF4
	0x03C68DDC FADD S2, S11, S9
	0x03C68DE0 FCMP S0, S2
	0x03C68DE4 B.PL 0x3C68DF4

ISIL:
	001 Move [X31-80], D11
	002 Move [X31-72], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X22, 0x77F000
	011 Move X21, 0x4B3000
	012 Move W8, [X22+1469]
	013 Move X21, [X21+1216]
	014 Move W19, W1
	015 Move X20, X0
	016 Move V8, V3
	017 Move V9, V2
	018 Move V10, V1
	019 Move V11, V0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {29}
	024 Move X0, 0x4B3000
	025 Move X0, [X0+1216]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X22+1469], W8
	029 Move X0, [X21]
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move V2, V9
	035 Move V3, V8
	036 Move X0, X20
	037 Move W1, W19
	038 Move X20, [X31+64]
	039 Move X19, [X31+72]
	040 Move X22, [X31+48]
	041 Move X21, [X31+56]
	042 Move X30, [X31+32]
	043 Move D9, [X31+16]
	044 Move D8, [X31+24]
	045 Move W2, 1
	046 Move V0, V11
	047 Move V1, V10
	048 Move D11, [X31+80]
	049 Move D10, [X31+88]

Method: System.Void DrawTexture(UnityEngine.Rect position, UnityEngine.Texture image, UnityEngine.ScaleMode scaleMode, System.Boolean alphaBlend)

Disassembly:
	0x03C68DE8 FADD S0, S10, S8
	0x03C68DEC FCMP S1, S0
	0x03C68DF0 CSET W4, MI
	0x03C68DF4 CBZ X20, 0x3C68E50
	0x03C68DF8 MOV X0, X20
	0x03C68DFC MOV V2.16B, V9.16B
	0x03C68E00 MOV V3.16B, V8.16B
	0x03C68E04 MOV X1, X19
	0x03C68E08 MOV W2, W21
	0x03C68E0C LDP X20, X19, [X31 + 0x50]
	0x03C68E10 LDP X22, X21, [X31 + 0x40]
	0x03C68E14 LDP X24, X23, [X31 + 0x30]
	0x03C68E18 LDP X30, X25, [X31 + 0x20]
	0x03C68E1C LDP D9, D8, [X31 + 0x10]
	0x03C68E20 MOV V0.16B, V11.16B
	0x03C68E24 MOV V1.16B, V10.16B
	0x03C68E28 MOV W3, W31
	0x03C68E2C LDP D11, D10, [X31], #0x60
	0x03C68E30 B 0x3C68EF0
	0x03C68E34 LDP X20, X19, [X31 + 0x50]
	0x03C68E38 LDP X22, X21, [X31 + 0x40]
	0x03C68E3C LDP X24, X23, [X31 + 0x30]
	0x03C68E40 LDP X30, X25, [X31 + 0x20]
	0x03C68E44 LDP D9, D8, [X31 + 0x10]
	0x03C68E48 LDP D11, D10, [X31], #0x60
	0x03C68E4C RET
	0x03C68E50 BL 0x1C16F20
	0x03C68E54 STP D11, D10, [X31 - 0x50]!
	0x03C68E58 STP D9, D8, [X31 + 0x10]
	0x03C68E5C STR X30, [X31 + 0x20]
	0x03C68E60 STP X22, X21, [X31 + 0x30]
	0x03C68E64 STP X20, X19, [X31 + 0x40]
	0x03C68E68 ADRP X22, 0x77E000
	0x03C68E6C ADRP X21, 0x4B7000
	0x03C68E70 LDRB W8, [X22 + 0x93A]
	0x03C68E74 LDR X21, [X21 + 0x5C8]
	0x03C68E78 MOV W19, W1
	0x03C68E7C MOV W20, W0
	0x03C68E80 TBNZ X8, 0x0, 0x3C68E98
	0x03C68E84 ADRP X0, 0x4B7000

ISIL:
	001 Move [X31-80], D11
	002 Move [X31-72], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X23, 0x77F000
	012 Move X22, 0x4B3000
	013 Move W8, [X23+1470]
	014 Move X22, [X22+1216]
	015 Move W21, W2
	016 Move W19, W1
	017 Move X20, X0
	018 Move V8, V3
	019 Move V9, V2
	020 Move V10, V1
	021 Move V11, V0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {31}
	026 Move X0, 0x4B3000
	027 Move X0, [X0+1216]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X23+1470], W8
	031 Move X0, [X22]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1C17DFC
	036 And W2, W21, 1
	037 Move V2, V9
	038 Move V3, V8
	039 Move X0, X20
	040 Move W1, W19
	041 Move X20, [X31+64]
	042 Move X19, [X31+72]
	043 Move X22, [X31+48]
	044 Move X21, [X31+56]
	045 Move X30, [X31+32]
	046 Move X23, [X31+40]
	047 Move D9, [X31+16]
	048 Move D8, [X31+24]
	049 Move S4, W31
	050 Move V0, V11
	051 Move V1, V10
	052 Move D11, [X31+80]
	053 Move D10, [X31+88]

Method: System.Void DrawTexture(UnityEngine.Rect position, UnityEngine.Texture image, UnityEngine.ScaleMode scaleMode, System.Boolean alphaBlend, System.Single imageAspect)

Disassembly:
	0x03C68E88 LDR X0, [X0 + 0x5C8]
	0x03C68E8C BL 0x1C16CF4
	0x03C68E90 MOVZ W8, 0x1
	0x03C68E94 STRB W8, [X22 + 0x93A]
	0x03C68E98 MOV X0, X31
	0x03C68E9C BL 0x3C0B398
	0x03C68EA0 LDR X0, [X21]
	0x03C68EA4 MOV V8.16B, V0.16B
	0x03C68EA8 MOV V9.16B, V1.16B
	0x03C68EAC MOV V10.16B, V2.16B
	0x03C68EB0 LDR W8, [X0 + 0xE0]
	0x03C68EB4 MOV V11.16B, V3.16B
	0x03C68EB8 CBNZ W8, 0x3C68EC0
	0x03C68EBC BL 0x1C16DFC
	0x03C68EC0 MOV W0, W20
	0x03C68EC4 MOV W1, W19
	0x03C68EC8 MOV V0.16B, V8.16B
	0x03C68ECC MOV V1.16B, V9.16B
	0x03C68ED0 LDP X20, X19, [X31 + 0x40]
	0x03C68ED4 LDP X22, X21, [X31 + 0x30]
	0x03C68ED8 LDR X30, [X31 + 0x20]
	0x03C68EDC LDP D9, D8, [X31 + 0x10]
	0x03C68EE0 MOV V2.16B, V10.16B
	0x03C68EE4 MOV V3.16B, V11.16B
	0x03C68EE8 LDP D11, D10, [X31], #0x50
	0x03C68EEC B 0x3C690A4
	0x03C68EF0 STP D11, D10, [X31 - 0x60]!
	0x03C68EF4 STP D9, D8, [X31 + 0x10]
	0x03C68EF8 STP X30, X25, [X31 + 0x20]
	0x03C68EFC STP X24, X23, [X31 + 0x30]
	0x03C68F00 STP X22, X21, [X31 + 0x40]
	0x03C68F04 STP X20, X19, [X31 + 0x50]
	0x03C68F08 ADRP X25, 0x77E000
	0x03C68F0C ADRP X24, 0x4B7000
	0x03C68F10 LDRB W8, [X25 + 0x7E6]
	0x03C68F14 LDR X24, [X24 + 0x5C8]
	0x03C68F18 MOV W22, W4
	0x03C68F1C MOV W21, W3
	0x03C68F20 MOV W19, W2
	0x03C68F24 MOV X20, X1
	0x03C68F28 MOV V8.16B, V3.16B
	0x03C68F2C MOV V9.16B, V2.16B
	0x03C68F30 MOV V10.16B, V1.16B
	0x03C68F34 MOV V11.16B, V0.16B
	0x03C68F38 MOV X23, X0
	0x03C68F3C TBNZ X8, 0x0, 0x3C68F54
	0x03C68F40 ADRP X0, 0x4B7000
	0x03C68F44 LDR X0, [X0 + 0x5C8]
	0x03C68F48 BL 0x1C16CF4
	0x03C68F4C MOVZ W8, 0x1
	0x03C68F50 STRB W8, [X25 + 0x7E6]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], D12
	003 Move [X31+48], D11
	004 Move [X31+56], D10
	005 Move [X31+64], D9
	006 Move [X31+72], D8
	007 Move [X31+80], X30
	008 Move [X31+88], X23
	009 Move [X31+96], X22
	010 Move [X31+104], X21
	011 Move [X31+112], X20
	012 Move [X31+120], X19
	013 Move X23, 0x77F000
	014 Move X22, 0x4B3000
	015 Move W8, [X23+1471]
	016 Move X22, [X22+1216]
	017 Move V8, V4
	018 Move W21, W2
	019 Move W19, W1
	020 Move X20, X0
	021 Move V9, V3
	022 Move V10, V2
	023 Move V11, V1
	024 Move V12, V0
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {34}
	029 Move X0, 0x4B3000
	030 Move X0, [X0+1216]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X23+1471], W8
	034 Move X0, [X22]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Call GUI.get_color
	040 Move [X31+8], S2
	041 Move [X31+16], S3
	042 And W2, W21, 1
	043 Move [X31], S0
	044 Move [X31+8], S1
	045 Move V0, V12
	046 Move V1, V11
	047 Move V2, V10
	048 Move V3, V9
	049 Move X0, X20
	050 Move W1, W19
	051 Move V4, V8
	052 Move [X31+24], W31
	053 Move [X31+16], W31
	054 Call GUI.DrawTexture, X0, X1, X2, X3, V0, X4, V1, V2
	055 Move X20, [X31+112]
	056 Move X19, [X31+120]
	057 Move X22, [X31+96]
	058 Move X21, [X31+104]
	059 Move X30, [X31+80]
	060 Move X23, [X31+88]
	061 Move D9, [X31+64]
	062 Move D8, [X31+72]
	063 Move D11, [X31+48]
	064 Move D10, [X31+56]
	065 Move V12, [X31+32]
	066 Add X31, X31, 128
	067 Return 

Method: System.Void DrawTexture(UnityEngine.Rect position, UnityEngine.Texture image, UnityEngine.ScaleMode scaleMode, System.Boolean alphaBlend, System.Single imageAspect, UnityEngine.Color color, System.Single borderWidth, System.Single borderRadius)

Disassembly:
	0x03C68F54 LDR X0, [X24]
	0x03C68F58 LDR W8, [X0 + 0xE0]
	0x03C68F5C CBNZ W8, 0x3C68F64
	0x03C68F60 BL 0x1C16DFC
	0x03C68F64 BL 0x3C6AB88
	0x03C68F68 MOV W24, W0
	0x03C68F6C MOV W0, W19
	0x03C68F70 BL 0x3C74960
	0x03C68F74 CMP W24, W19
	0x03C68F78 AND W6, W0, 0x1
	0x03C68F7C AND W3, W22, 0x1
	0x03C68F80 AND W5, W21, 0x1
	0x03C68F84 MOV V2.16B, V9.16B
	0x03C68F88 MOV V3.16B, V8.16B
	0x03C68F8C MOV X0, X23
	0x03C68F90 MOV X1, X20
	0x03C68F94 MOV W2, W19
	0x03C68F98 LDP X20, X19, [X31 + 0x50]
	0x03C68F9C LDP X22, X21, [X31 + 0x40]
	0x03C68FA0 LDP X24, X23, [X31 + 0x30]
	0x03C68FA4 LDP X30, X25, [X31 + 0x20]
	0x03C68FA8 LDP D9, D8, [X31 + 0x10]
	0x03C68FAC CSET W4, EQ
	0x03C68FB0 MOV V0.16B, V11.16B
	0x03C68FB4 MOV V1.16B, V10.16B
	0x03C68FB8 LDP D11, D10, [X31], #0x60
	0x03C68FBC B 0x3C7493C
	0x03C68FC0 STP D11, D10, [X31 - 0x50]!
	0x03C68FC4 STP D9, D8, [X31 + 0x10]
	0x03C68FC8 STR X30, [X31 + 0x20]
	0x03C68FCC STP X22, X21, [X31 + 0x30]
	0x03C68FD0 STP X20, X19, [X31 + 0x40]
	0x03C68FD4 ADRP X22, 0x77E000
	0x03C68FD8 ADRP X21, 0x4B2000
	0x03C68FDC LDRB W8, [X22 + 0x5C7]
	0x03C68FE0 LDR X21, [X21 + 0x4C0]
	0x03C68FE4 MOV X19, X1
	0x03C68FE8 MOV X20, X0
	0x03C68FEC MOV V8.16B, V3.16B
	0x03C68FF0 MOV V9.16B, V2.16B
	0x03C68FF4 MOV V10.16B, V1.16B
	0x03C68FF8 MOV V11.16B, V0.16B
	0x03C68FFC TBNZ X8, 0x0, 0x3C69020
	0x03C69000 ADRP X0, 0x4B6000
	0x03C69004 LDR X0, [X0 + 0x5C8]
	0x03C69008 BL 0x1C16CF4
	0x03C6900C ADRP X0, 0x4B1000
	0x03C69010 LDR X0, [X0 + 0x4C0]
	0x03C69014 BL 0x1C16CF4
	0x03C69018 MOVZ W8, 0x1
	0x03C6901C STRB W8, [X22 + 0x5C7]
	0x03C69020 LDR X0, [X21]
	0x03C69024 ADRP X22, 0x4B6000
	0x03C69028 LDR W8, [X0 + 0xE0]
	0x03C6902C LDR X22, [X22 + 0x5C8]
	0x03C69030 CBNZ W8, 0x3C6903C
	0x03C69034 BL 0x1C16DFC
	0x03C69038 LDR X0, [X21]
	0x03C6903C LDR X8, [X22]
	0x03C69040 LDR X9, [X0 + 0xB8]
	0x03C69044 LDR W10, [X8 + 0xE0]
	0x03C69048 LDR W21, [X9 + 0x8]
	0x03C6904C CBNZ W10, 0x3C69058
	0x03C69050 MOV X0, X8
	0x03C69054 BL 0x1C16DFC
	0x03C69058 MOVZ W1, 0x2
	0x03C6905C MOV W0, W21
	0x03C69060 MOV V0.16B, V11.16B
	0x03C69064 MOV V1.16B, V10.16B
	0x03C69068 MOV V2.16B, V9.16B
	0x03C6906C MOV V3.16B, V8.16B
	0x03C69070 BL 0x3C690A4
	0x03C69074 MOV V2.16B, V9.16B

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+80], D15
	003 Move [X31+88], D14
	004 Move [X31+96], D13
	005 Move [X31+104], D12
	006 Move [X31+112], D11
	007 Move [X31+120], D10
	008 Move [X31+128], D9
	009 Move [X31+136], D8
	010 Move [X31+144], X30
	011 Move [X31+152], X23
	012 Move [X31+160], X22
	013 Move [X31+168], X21
	014 Move [X31+176], X20
	015 Move [X31+184], X19
	016 Move X22, 0x77F000
	017 Move W8, [X22+1472]
	018 Move W21, W2
	019 Move W19, W1
	020 Move X20, X0
	021 Move [X31+72], S3
	022 Move [X31+80], S4
	023 Move [X31+64], S1
	024 Move [X31+72], S2
	025 Move [X31+60], S0
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {35}
	030 Move X0, 0x4B3000
	031 Move X0, [X0+1216]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X22+1472], W8
	035 Move X23, 0x77A000
	036 Move X22, 0x4B3000
	037 Move W8, [X23+3641]
	038 Move X22, [X22+1216]
	039 Compare W8, 0
	040 JumpIfNotEqual {46}
	041 Move X0, 0x493000
	042 Move X0, [X0+2464]
	043 Call 0x1C17CF4
	044 Move W8, 1
	045 Move [X23+3641], W8
	046 Move X8, 0x493000
	047 Move X8, [X8+2464]
	048 Move X0, [X22]
	049 Move S5, [X31+200]
	050 Move S4, [X31+204]
	051 Move S15, [X31+192]
	052 Move S8, [X31+196]
	053 Move X8, [X8]
	054 Move V9, [X31+216]
	055 Move V10, [X31+208]
	056 Move W9, [X0+224]
	057 Move X8, [X8+184]
	058 Move S11, [X8+16]
	059 Move S12, [X8+20]
	060 Move S13, [X8+24]
	061 Move S14, [X8+28]
	062 Compare W9, 0
	063 JumpIfNotEqual {69}
	064 Move [X31+52], S5
	065 Move [X31+60], S4
	066 Call 0x1C17DFC
	067 Move S5, [X31+52]
	068 Move S4, [X31+56]
	069 Multiply S0, S14, S10
	070 Multiply S1, S13, S10
	071 Multiply S2, S12, S10
	072 Multiply S3, S11, S10
	073 Move [X31+28], S0
	074 Move [X31+36], S9
	075 Move [X31+20], S2
	076 Move [X31+28], S1
	077 Move [X31+12], S4
	078 Move [X31+20], S3
	079 Move S0, [X31+60]
	080 Move S1, [X31+64]
	081 Move S2, [X31+68]
	082 Move S3, [X31+72]
	083 Move V4, [X31+76]
	084 And W2, W21, 1
	085 Move X0, X20
	086 Move W1, W19
	087 Move [X31], S15
	088 Move [X31+8], S8
	089 Move [X31+8], S5
	090 Call GUI.DrawTexture, X0, X1, X2, X3, V0, X4, X5, V1
	091 Move X20, [X31+176]
	092 Move X19, [X31+184]
	093 Move X22, [X31+160]
	094 Move X21, [X31+168]
	095 Move X30, [X31+144]
	096 Move X23, [X31+152]
	097 Move D9, [X31+128]
	098 Move D8, [X31+136]
	099 Move D11, [X31+112]
	100 Move D10, [X31+120]
	101 Move D13, [X31+96]
	102 Move D12, [X31+104]
	103 Move D15, [X31+80]
	104 Move D14, [X31+88]
	105 Add X31, X31, 192
	106 Return 

Method: System.Void DrawTexture(UnityEngine.Rect position, UnityEngine.Texture image, UnityEngine.ScaleMode scaleMode, System.Boolean alphaBlend, System.Single imageAspect, UnityEngine.Color color, UnityEngine.Vector4 borderWidths, System.Single borderRadius)

Disassembly:
	0x03C69078 MOV V3.16B, V8.16B
	0x03C6907C MOV X1, X20
	0x03C69080 MOV X2, X19
	0x03C69084 LDP X20, X19, [X31 + 0x40]
	0x03C69088 LDP X22, X21, [X31 + 0x30]
	0x03C6908C LDR X30, [X31 + 0x20]
	0x03C69090 LDP D9, D8, [X31 + 0x10]
	0x03C69094 MOV V0.16B, V11.16B
	0x03C69098 MOV V1.16B, V10.16B
	0x03C6909C LDP D11, D10, [X31], #0x50
	0x03C690A0 B 0x3C6914C
	0x03C690A4 STP D11, D10, [X31 - 0x50]!
	0x03C690A8 STP D9, D8, [X31 + 0x10]
	0x03C690AC STR X30, [X31 + 0x20]
	0x03C690B0 STP X22, X21, [X31 + 0x30]
	0x03C690B4 STP X20, X19, [X31 + 0x40]
	0x03C690B8 ADRP X22, 0x77D000
	0x03C690BC ADRP X21, 0x4B6000
	0x03C690C0 LDRB W8, [X22 + 0x8A1]
	0x03C690C4 LDR X21, [X21 + 0x5C8]
	0x03C690C8 MOV V8.16B, V3.16B
	0x03C690CC MOV V9.16B, V2.16B
	0x03C690D0 MOV V10.16B, V1.16B
	0x03C690D4 MOV V11.16B, V0.16B
	0x03C690D8 MOV W19, W1
	0x03C690DC MOV W20, W0
	0x03C690E0 TBNZ X8, 0x0, 0x3C690F8
	0x03C690E4 ADRP X0, 0x4B6000
	0x03C690E8 LDR X0, [X0 + 0x5C8]
	0x03C690EC BL 0x1C16CF4
	0x03C690F0 MOVZ W8, 0x1
	0x03C690F4 STRB W8, [X22 + 0x8A1]
	0x03C690F8 LDR X0, [X21]
	0x03C690FC LDR W8, [X0 + 0xE0]
	0x03C69100 CBNZ W8, 0x3C6910C
	0x03C69104 BL 0x1C16DFC
	0x03C69108 LDR X0, [X21]
	0x03C6910C LDR X8, [X0 + 0xB8]
	0x03C69110 MOV W0, W20
	0x03C69114 MOV W1, W19
	0x03C69118 MOV V2.16B, V9.16B
	0x03C6911C LDR W9, [X8]
	0x03C69120 MOV V3.16B, V8.16B
	0x03C69124 LDP X20, X19, [X31 + 0x40]
	0x03C69128 LDP X22, X21, [X31 + 0x30]
	0x03C6912C LDR X30, [X31 + 0x20]
	0x03C69130 LDP D9, D8, [X31 + 0x10]
	0x03C69134 ADD W9, W9, 0x1
	0x03C69138 STR W9, [X8]
	0x03C6913C MOV V0.16B, V11.16B
	0x03C69140 MOV V1.16B, V10.16B
	0x03C69144 LDP D11, D10, [X31], #0x50
	0x03C69148 B 0x3C75404
	0x03C6914C STP D11, D10, [X31 - 0x50]!
	0x03C69150 STP D9, D8, [X31 + 0x10]
	0x03C69154 STP X30, X23, [X31 + 0x20]
	0x03C69158 STP X22, X21, [X31 + 0x30]
	0x03C6915C STP X20, X19, [X31 + 0x40]
	0x03C69160 ADRP X23, 0x77D000
	0x03C69164 ADRP X22, 0x4B6000
	0x03C69168 LDRB W8, [X23 + 0x5C8]
	0x03C6916C LDR X22, [X22 + 0x5C8]
	0x03C69170 MOV X19, X2
	0x03C69174 MOV X20, X1
	0x03C69178 MOV W21, W0
	0x03C6917C MOV V8.16B, V3.16B
	0x03C69180 MOV V9.16B, V2.16B
	0x03C69184 MOV V10.16B, V1.16B
	0x03C69188 MOV V11.16B, V0.16B
	0x03C6918C TBNZ X8, 0x0, 0x3C691B0
	0x03C69190 ADRP X0, 0x4B6000
	0x03C69194 LDR X0, [X0 + 0x5C8]
	0x03C69198 BL 0x1C16CF4
	0x03C6919C ADRP X0, 0x4B1000
	0x03C691A0 LDR X0, [X0 + 0x4C0]
	0x03C691A4 BL 0x1C16CF4
	0x03C691A8 MOVZ W8, 0x1
	0x03C691AC STRB W8, [X23 + 0x5C8]
	0x03C691B0 LDR X0, [X22]

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+96], D15
	003 Move [X31+104], D14
	004 Move [X31+112], D13
	005 Move [X31+120], D12
	006 Move [X31+128], D11
	007 Move [X31+136], D10
	008 Move [X31+144], D9
	009 Move [X31+152], D8
	010 Move [X31+160], X30
	011 Move [X31+168], X23
	012 Move [X31+176], X22
	013 Move [X31+184], X21
	014 Move [X31+192], X20
	015 Move [X31+200], X19
	016 Move X22, 0x77E000
	017 Move W8, [X22+1473]
	018 Move W21, W2
	019 Move W19, W1
	020 Move X20, X0
	021 Move [X31+88], S3
	022 Move [X31+96], S4
	023 Move [X31+80], S1
	024 Move [X31+88], S2
	025 Move [X31+76], S0
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {35}
	030 Move X0, 0x4B2000
	031 Move X0, [X0+1216]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X22+1473], W8
	035 Move X23, 0x779000
	036 Move X22, 0x4B2000
	037 Move W8, [X23+3641]
	038 Move X22, [X22+1216]
	039 Compare W8, 0
	040 JumpIfNotEqual {46}
	041 Move X0, 0x492000
	042 Move X0, [X0+2464]
	043 Call 0x1C17CF4
	044 Move W8, 1
	045 Move [X23+3641], W8
	046 Move X8, 0x492000
	047 Move X8, [X8+2464]
	048 Move X0, [X22]
	049 Move S5, [X31+232]
	050 Move S4, [X31+236]
	051 Move S16, [X31+224]
	052 Move S11, [X31+228]
	053 Move X8, [X8]
	054 Move S7, [X31+216]
	055 Move S6, [X31+220]
	056 Move S10, [X31+208]
	057 Move S12, [X31+212]
	058 Move V15, [X31+240]
	059 Move X8, [X8+184]
	060 Move S13, [X8+16]
	061 Move S14, [X8+20]
	062 Move S8, [X8+24]
	063 Move S9, [X8+28]
	064 Move W8, [X0+224]
	065 Compare W8, 0
	066 JumpIfNotEqual {78}
	067 Move [X31+68], S5
	068 Move [X31+76], S4
	069 Move [X31+60], S7
	070 Move [X31+68], S6
	071 Move [X31+56], S16
	072 Call 0x1C17DFC
	073 Move S16, [X31+56]
	074 Move S7, [X31+60]
	075 Move S6, [X31+64]
	076 Move S5, [X31+68]
	077 Move V4, [X31+72]
	078 Multiply S0, S9, S15
	079 Multiply S1, S8, S15
	080 Multiply S2, S14, S15
	081 Multiply S3, S13, S15
	082 Move [X31+40], S1
	083 Move [X31+48], S0
	084 Move [X31+32], S3
	085 Move [X31+40], S2
	086 Move [X31+24], S5
	087 Move [X31+32], S4
	088 Move S0, [X31+76]
	089 Move S1, [X31+80]
	090 Move S2, [X31+84]
	091 Move S3, [X31+88]
	092 Move V4, [X31+92]
	093 And W2, W21, 1
	094 Move X0, X20
	095 Move W1, W19
	096 Move [X31+16], S16
	097 Move [X31+24], S11
	098 Move [X31], S10
	099 Move [X31+8], S12
	100 Move [X31+8], S7
	101 Move [X31+16], S6
	102 Call GUI.DrawTexture, X0, X1, X2, X3, V0, X4, X5, X6
	103 Move X20, [X31+192]
	104 Move X19, [X31+200]
	105 Move X22, [X31+176]
	106 Move X21, [X31+184]
	107 Move X30, [X31+160]
	108 Move X23, [X31+168]
	109 Move D9, [X31+144]
	110 Move D8, [X31+152]
	111 Move D11, [X31+128]
	112 Move D10, [X31+136]
	113 Move D13, [X31+112]
	114 Move D12, [X31+120]
	115 Move D15, [X31+96]
	116 Move D14, [X31+104]
	117 Add X31, X31, 208
	118 Return 

Method: System.Void DrawTexture(UnityEngine.Rect position, UnityEngine.Texture image, UnityEngine.ScaleMode scaleMode, System.Boolean alphaBlend, System.Single imageAspect, UnityEngine.Color color, UnityEngine.Vector4 borderWidths, UnityEngine.Vector4 borderRadiuses)

Disassembly:
	0x03C691B4 ADRP X22, 0x4B1000
	0x03C691B8 LDR W8, [X0 + 0xE0]
	0x03C691BC LDR X22, [X22 + 0x4C0]
	0x03C691C0 CBNZ W8, 0x3C691C8
	0x03C691C4 BL 0x1C16DFC
	0x03C691C8 BL 0x3C67304
	0x03C691CC LDR X0, [X22]
	0x03C691D0 LDR W8, [X0 + 0xE0]
	0x03C691D4 CBNZ W8, 0x3C691DC
	0x03C691D8 BL 0x1C16DFC
	0x03C691DC MOV V2.16B, V9.16B
	0x03C691E0 MOV V3.16B, V8.16B
	0x03C691E4 MOV W0, W21
	0x03C691E8 MOV X1, X20
	0x03C691EC MOV X2, X19
	0x03C691F0 LDP X20, X19, [X31 + 0x40]
	0x03C691F4 LDP X22, X21, [X31 + 0x30]
	0x03C691F8 LDP X30, X23, [X31 + 0x20]
	0x03C691FC LDP D9, D8, [X31 + 0x10]
	0x03C69200 MOV V0.16B, V11.16B
	0x03C69204 MOV V1.16B, V10.16B
	0x03C69208 LDP D11, D10, [X31], #0x50
	0x03C6920C B 0x3C69210
	0x03C69210 STP D11, D10, [X31 - 0x50]!
	0x03C69214 STP D9, D8, [X31 + 0x10]
	0x03C69218 STP X30, X23, [X31 + 0x20]
	0x03C6921C STP X22, X21, [X31 + 0x30]
	0x03C69220 STP X20, X19, [X31 + 0x40]
	0x03C69224 ADRP X22, 0x77D000
	0x03C69228 LDRB W8, [X22 + 0x5D4]
	0x03C6922C MOV X19, X2
	0x03C69230 MOV X20, X1
	0x03C69234 MOV W21, W0
	0x03C69238 MOV V8.16B, V3.16B
	0x03C6923C MOV V9.16B, V2.16B
	0x03C69240 MOV V10.16B, V1.16B
	0x03C69244 MOV V11.16B, V0.16B
	0x03C69248 TBNZ X8, 0x0, 0x3C69260
	0x03C6924C ADRP X0, 0x4B1000
	0x03C69250 LDR X0, [X0 + 0x4C0]
	0x03C69254 BL 0x1C16CF4
	0x03C69258 MOVZ W8, 0x1
	0x03C6925C STRB W8, [X22 + 0x5D4]
	0x03C69260 ADRP X22, 0x77D000
	0x03C69264 ADRP X23, 0x4F0000
	0x03C69268 LDRB W8, [X22 + 0x510]
	0x03C6926C LDR X23, [X23 + 0x20]
	0x03C69270 TBNZ X8, 0x0, 0x3C69288
	0x03C69274 ADRP X0, 0x4F0000
	0x03C69278 LDR X0, [X0 + 0x20]
	0x03C6927C BL 0x1C16CF4
	0x03C69280 MOVZ W8, 0x1
	0x03C69284 STRB W8, [X22 + 0x510]
	0x03C69288 LDR X8, [X23]
	0x03C6928C LDR X8, [X8 + 0xB8]
	0x03C69290 LDR X0, [X8]
	0x03C69294 CBZ X0, 0x3C6931C
	0x03C69298 ADRP X23, 0x4B1000
	0x03C6929C LDR X23, [X23 + 0x4C0]
	0x03C692A0 BL 0x3C62C40
	0x03C692A4 FCMP S1, S10
	0x03C692A8 MOV W22, W31
	0x03C692AC B.LT 0x3C692D0
	0x03C692B0 FCMP S0, S11
	0x03C692B4 B.LT 0x3C692D0
	0x03C692B8 FADD S2, S11, S9
	0x03C692BC FCMP S0, S2
	0x03C692C0 B.PL 0x3C692D0
	0x03C692C4 FADD S0, S10, S8
	0x03C692C8 FCMP S1, S0
	0x03C692CC CSET W22, MI
	0x03C692D0 LDR X0, [X23]
	0x03C692D4 LDR W8, [X0 + 0xE0]
	0x03C692D8 CBNZ W8, 0x3C692E0
	0x03C692DC BL 0x1C16DFC
	0x03C692E0 MOV V2.16B, V9.16B
	0x03C692E4 MOV V3.16B, V8.16B
	0x03C692E8 MOV W0, W21
	0x03C692EC MOV W2, W22
	0x03C692F0 MOV X3, X20
	0x03C692F4 MOV X4, X19
	0x03C692F8 LDP X20, X19, [X31 + 0x40]
	0x03C692FC LDP X22, X21, [X31 + 0x30]
	0x03C69300 LDP X30, X23, [X31 + 0x20]

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+48], D15
	003 Move [X31+56], D14
	004 Move [X31+64], D13
	005 Move [X31+72], D12
	006 Move [X31+80], D11
	007 Move [X31+88], D10
	008 Move [X31+96], D9
	009 Move [X31+104], D8
	010 Move [X31+112], X30
	011 Move [X31+120], X23
	012 Move [X31+128], X22
	013 Move [X31+136], X21
	014 Move [X31+144], X20
	015 Move [X31+152], X19
	016 Move X23, 0x77E000
	017 Move X22, 0x4B2000
	018 Move S16, [X31+200]
	019 Move S15, [X31+204]
	020 Move S11, [X31+192]
	021 Move S9, [X31+196]
	022 Move S17, [X31+184]
	023 Move S8, [X31+188]
	024 Move S13, [X31+176]
	025 Move S21, [X31+180]
	026 Move S20, [X31+168]
	027 Move S14, [X31+172]
	028 Move W8, [X23+1474]
	029 Move S24, [X31+160]
	030 Move S23, [X31+164]
	031 Move X22, [X22+1216]
	032 Move W21, W2
	033 Move W19, W1
	034 Move X20, X0
	035 Move TEMP, X8
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {70}
	039 Move X0, 0x4B2000
	040 Move X0, [X0+1216]
	041 Move [X31+32], S2
	042 Move [X31+40], S4
	043 Move V10, V3
	044 Move V12, V1
	045 Move [X31+24], S0
	046 Move [X31+32], S20
	047 Move [X31+40], S17
	048 Move [X31+48], S16
	049 Move [X31+16], S13
	050 Move [X31+24], S11
	051 Move V11, V21
	052 Move V13, V23
	053 Move [X31+12], S24
	054 Call 0x1C17CF4
	055 Move V23, V13
	056 Move S24, [X31+12]
	057 Move S13, [X31+16]
	058 Move V21, V11
	059 Move S11, [X31+20]
	060 Move S0, [X31+24]
	061 Move S17, [X31+40]
	062 Move S16, [X31+44]
	063 Move S20, [X31+28]
	064 Move S2, [X31+32]
	065 Move V4, [X31+36]
	066 Move V1, V12
	067 Move V3, V10
	068 Move W8, 1
	069 Move [X23+1474], W8
	070 Move X0, [X22]
	071 Move W8, [X0+224]
	072 Compare W8, 0
	073 JumpIfNotEqual {99}
	074 Move [X31+32], S2
	075 Move [X31+40], S4
	076 Move V10, V3
	077 Move V12, V1
	078 Move [X31+24], S0
	079 Move [X31+32], S20
	080 Move [X31+12], S15
	081 Move [X31+20], S23
	082 Move [X31+40], S17
	083 Move [X31+48], S16
	084 Move [X31+20], S21
	085 Move V15, V24
	086 Call 0x1C17DFC
	087 Move V24, V15
	088 Move S23, [X31+16]
	089 Move S21, [X31+20]
	090 Move S17, [X31+40]
	091 Move S16, [X31+44]
	092 Move S0, [X31+24]
	093 Move S20, [X31+28]
	094 Move V15, [X31+12]
	095 Move S2, [X31+32]
	096 Move S4, [X31+36]
	097 Move V1, V12
	098 Move V3, V10
	099 Move [X31+192], S11
	100 Move [X31+200], S9
	101 Move [X31+176], S13
	102 Move [X31+184], S21
	103 Move [X31+200], S16
	104 Move [X31+208], S15
	105 Move [X31+184], S17
	106 Move [X31+192], S8
	107 Move [X31+168], S20
	108 Move [X31+176], S14
	109 And W2, W21, 1
	110 Move X0, X20
	111 Move W1, W19
	112 Move X20, [X31+144]
	113 Move X19, [X31+152]
	114 Move X22, [X31+128]
	115 Move X21, [X31+136]
	116 Move X30, [X31+112]
	117 Move X23, [X31+120]
	118 Move D9, [X31+96]
	119 Move D8, [X31+104]
	120 Move D11, [X31+80]
	121 Move D10, [X31+88]
	122 Move D13, [X31+64]
	123 Move D12, [X31+72]
	124 Move D15, [X31+48]
	125 Move D14, [X31+56]
	126 Move [X31+160], S24
	127 Move [X31+168], S23
	128 Move W3, 1
	129 Add X31, X31, 160

Method: System.Void DrawTexture(UnityEngine.Rect position, UnityEngine.Texture image, UnityEngine.ScaleMode scaleMode, System.Boolean alphaBlend, System.Single imageAspect, UnityEngine.Color color, UnityEngine.Vector4 borderWidths, UnityEngine.Vector4 borderRadiuses, System.Boolean drawSmoothCorners)

Disassembly:
	0x03C69304 LDP D9, D8, [X31 + 0x10]
	0x03C69308 MOV V0.16B, V11.16B
	0x03C6930C MOV V1.16B, V10.16B
	0x03C69310 MOV W1, W31
	0x03C69314 LDP D11, D10, [X31], #0x50
	0x03C69318 B 0x3C6AE9C
	0x03C6931C BL 0x1C16F20
	0x03C69320 STR X30, [X31 - 0x40]!
	0x03C69324 STP X24, X23, [X31 + 0x10]
	0x03C69328 STP X22, X21, [X31 + 0x20]
	0x03C6932C STP X20, X19, [X31 + 0x30]
	0x03C69330 ADRP X21, 0x77D000
	0x03C69334 LDRB W8, [X21 + 0x5C9]
	0x03C69338 MOV W19, W1
	0x03C6933C MOV X20, X0
	0x03C69340 TBNZ X8, 0x0, 0x3C69358
	0x03C69344 ADRP X0, 0x48A000
	0x03C69348 LDR X0, [X0 + 0x988]
	0x03C6934C BL 0x1C16CF4
	0x03C69350 MOVZ W8, 0x1
	0x03C69354 STRB W8, [X21 + 0x5C9]
	0x03C69358 ADRP X22, 0x77D000
	0x03C6935C ADRP X24, 0x4F0000
	0x03C69360 LDRB W8, [X22 + 0x510]
	0x03C69364 LDR X24, [X24 + 0x20]
	0x03C69368 TBNZ X8, 0x0, 0x3C69380
	0x03C6936C ADRP X0, 0x4F0000
	0x03C69370 LDR X0, [X0 + 0x20]
	0x03C69374 BL 0x1C16CF4
	0x03C69378 MOVZ W8, 0x1
	0x03C6937C STRB W8, [X22 + 0x510]
	0x03C69380 LDR X8, [X24]
	0x03C69384 LDR X8, [X8 + 0xB8]
	0x03C69388 LDR X21, [X8]
	0x03C6938C CBZ X21, 0x3C69460
	0x03C69390 ADRP X23, 0x77D000
	0x03C69394 LDR X8, [X23 + 0x4A8]
	0x03C69398 CBNZ X8, 0x3C693B0
	0x03C6939C ADRP X0, 0xFFFFFFFFFCE88000
	0x03C693A0 ADD X0, X0, 0x566
	0x03C693A4 BL 0x1C16CB8
	0x03C693A8 MOV X8, X0
	0x03C693AC STR X0, [X23 + 0x4A8]
	0x03C693B0 MOV X0, X21
	0x03C693B4 BLR X8
	0x03C693B8 CMP W0, 0x7
	0x03C693BC B.EQ 0x3C6942C
	0x03C693C0 LDRB W8, [X22 + 0x510]
	0x03C693C4 TBNZ X8, 0x0, 0x3C693DC
	0x03C693C8 ADRP X0, 0x4F0000
	0x03C693CC LDR X0, [X0 + 0x20]
	0x03C693D0 BL 0x1C16CF4
	0x03C693D4 MOVZ W8, 0x1
	0x03C693D8 STRB W8, [X22 + 0x510]
	0x03C693DC LDR X8, [X24]
	0x03C693E0 LDR X8, [X8 + 0xB8]
	0x03C693E4 LDR X21, [X8]
	0x03C693E8 CBZ X21, 0x3C69460
	0x03C693EC LDR X8, [X23 + 0x4A8]
	0x03C693F0 CBNZ X8, 0x3C69408
	0x03C693F4 ADRP X0, 0xFFFFFFFFFCE88000
	0x03C693F8 ADD X0, X0, 0x566
	0x03C693FC BL 0x1C16CB8
	0x03C69400 MOV X8, X0
	0x03C69404 STR X0, [X23 + 0x4A8]
	0x03C69408 MOV X0, X21
	0x03C6940C BLR X8
	0x03C69410 CBZ W0, 0x3C6942C
	0x03C69414 MOV X0, X20
	0x03C69418 LDP X20, X19, [X31 + 0x30]
	0x03C6941C LDP X22, X21, [X31 + 0x20]
	0x03C69420 LDP X24, X23, [X31 + 0x10]
	0x03C69424 LDR X30, [X31], #0x40
	0x03C69428 RET
	0x03C6942C CBZ X20, 0x3C69460
	0x03C69430 ADRP X8, 0x48A000
	0x03C69434 LDR X8, [X8 + 0x988]
	0x03C69438 LDR X0, [X8]
	0x03C6943C CBZ X0, 0x3C69460
	0x03C69440 LDR W1, [X20 + 0x10]
	0x03C69444 MOV W2, W19
	0x03C69448 LDP X20, X19, [X31 + 0x30]
	0x03C6944C LDP X22, X21, [X31 + 0x20]
	0x03C69450 LDP X24, X23, [X31 + 0x10]
	0x03C69454 MOV X3, X31
	0x03C69458 LDR X30, [X31], #0x40

ISIL:
	001 Subtract X31, X31, 272
	002 Move [X31+144], D15
	003 Move [X31+152], D14
	004 Move [X31+160], D13
	005 Move [X31+168], D12
	006 Move [X31+176], D11
	007 Move [X31+184], D10
	008 Move [X31+192], D9
	009 Move [X31+200], D8
	010 Move [X31+208], X29
	011 Move [X31+216], X30
	012 Move [X31+224], X24
	013 Move [X31+232], X23
	014 Move [X31+240], X22
	015 Move [X31+248], X21
	016 Move [X31+256], X20
	017 Move [X31+264], X19
	018 Move X24, 0x77E000
	019 Move X23, 0x4B2000
	020 Move W8, [X24+1475]
	021 Move X23, [X23+1216]
	022 Move W21, W3
	023 Move W22, W2
	024 Move W19, W1
	025 Move X20, X0
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {45}
	030 Move X0, 0x4B2000
	031 Move X0, [X0+1216]
	032 Move V8, V4
	033 Move V9, V3
	034 Move V10, V2
	035 Move V11, V1
	036 Move V12, V0
	037 Call 0x1C17CF4
	038 Move V0, V12
	039 Move V1, V11
	040 Move V2, V10
	041 Move V3, V9
	042 Move V4, V8
	043 Move W8, 1
	044 Move [X24+1475], W8
	045 Move X0, [X23]
	046 Move V5, [X31+316]
	047 Move V16, [X31+312]
	048 Move V12, [X31+308]
	049 Move V11, [X31+304]
	050 Move V6, [X31+300]
	051 Move V7, [X31+296]
	052 Move V8, [X31+292]
	053 Move V15, [X31+288]
	054 Move V9, [X31+284]
	055 Move V10, [X31+280]
	056 Move W8, [X0+224]
	057 Move V14, [X31+276]
	058 Move V13, [X31+272]
	059 Compare W8, 0
	060 JumpIfNotEqual {80}
	061 Move [X31+136], S3
	062 Move [X31+144], S4
	063 Move [X31+128], S1
	064 Move [X31+136], S2
	065 Move [X31+120], S5
	066 Move [X31+128], S0
	067 Move [X31+112], S7
	068 Move [X31+120], S6
	069 Move [X31+108], S16
	070 Call 0x1C17DFC
	071 Move S16, [X31+108]
	072 Move S7, [X31+112]
	073 Move S6, [X31+116]
	074 Move S5, [X31+120]
	075 Move S0, [X31+124]
	076 Move S1, [X31+128]
	077 Move S2, [X31+132]
	078 Move S3, [X31+136]
	079 Move V4, [X31+140]
	080 And W2, W22, 1
	081 And W3, W21, 1
	082 Move X0, X20
	083 Move W1, W19
	084 Move [X31+80], S11
	085 Move [X31+88], S12
	086 Move [X31+64], S15
	087 Move [X31+72], S8
	088 Move [X31+48], S13
	089 Move [X31+56], S14
	090 Move [X31+32], S13
	091 Move [X31+40], S14
	092 Move [X31+16], S13
	093 Move [X31+24], S14
	094 Move [X31], S13
	095 Move [X31+8], S14
	096 Move [X31+88], S16
	097 Move [X31+96], S5
	098 Move [X31+72], S7
	099 Move [X31+80], S6
	100 Move [X31+56], S10
	101 Move [X31+64], S9
	102 Move [X31+40], S10
	103 Move [X31+48], S9
	104 Move [X31+24], S10
	105 Move [X31+32], S9
	106 Move [X31+8], S10
	107 Move [X31+16], S9
	108 Call GUI.DrawTexture, X0, X1, X2, X3, V0, X4, X5, X6, X7, X8, X9, X10
	109 Move X20, [X31+256]
	110 Move X19, [X31+264]
	111 Move X22, [X31+240]
	112 Move X21, [X31+248]
	113 Move X24, [X31+224]
	114 Move X23, [X31+232]
	115 Move X29, [X31+208]
	116 Move X30, [X31+216]
	117 Move D9, [X31+192]
	118 Move D8, [X31+200]
	119 Move D11, [X31+176]
	120 Move D10, [X31+184]
	121 Move D13, [X31+160]
	122 Move D12, [X31+168]
	123 Move D15, [X31+144]
	124 Move D14, [X31+152]
	125 Add X31, X31, 272
	126 Return 

Method: System.Void DrawTexture(UnityEngine.Rect position, UnityEngine.Texture image, UnityEngine.ScaleMode scaleMode, System.Boolean alphaBlend, System.Single imageAspect, UnityEngine.Color leftColor, UnityEngine.Color topColor, UnityEngine.Color rightColor, UnityEngine.Color bottomColor, UnityEngine.Vector4 borderWidths, UnityEngine.Vector4 borderRadiuses, System.Boolean drawSmoothCorners)

Disassembly:
	0x03C6945C B 0x3228A68
	0x03C69460 BL 0x1C16F20
	0x03C69464 STP D11, D10, [X31 - 0x60]!
	0x03C69468 STP D9, D8, [X31 + 0x10]
	0x03C6946C STP X30, X25, [X31 + 0x20]
	0x03C69470 STP X24, X23, [X31 + 0x30]
	0x03C69474 STP X22, X21, [X31 + 0x40]
	0x03C69478 STP X20, X19, [X31 + 0x50]
	0x03C6947C ADRP X25, 0x77D000
	0x03C69480 ADRP X24, 0x4B1000
	0x03C69484 LDRB W8, [X25 + 0x5CA]
	0x03C69488 LDR X24, [X24 + 0x4C0]
	0x03C6948C MOV X19, X4
	0x03C69490 MOV W20, W3
	0x03C69494 MOV W23, W2
	0x03C69498 MOV X21, X1
	0x03C6949C MOV W22, W0
	0x03C694A0 MOV V8.16B, V3.16B
	0x03C694A4 MOV V9.16B, V2.16B
	0x03C694A8 MOV V10.16B, V1.16B
	0x03C694AC MOV V11.16B, V0.16B
	0x03C694B0 TBNZ X8, 0x0, 0x3C694C8
	0x03C694B4 ADRP X0, 0x4B1000
	0x03C694B8 LDR X0, [X0 + 0x4C0]
	0x03C694BC BL 0x1C16CF4
	0x03C694C0 MOVZ W8, 0x1
	0x03C694C4 STRB W8, [X25 + 0x5CA]
	0x03C694C8 LDR X0, [X24]
	0x03C694CC LDR W8, [X0 + 0xE0]
	0x03C694D0 CBNZ W8, 0x3C694D8
	0x03C694D4 BL 0x1C16DFC
	0x03C694D8 AND W2, W23, 0x1
	0x03C694DC MOV V2.16B, V9.16B
	0x03C694E0 MOV V3.16B, V8.16B
	0x03C694E4 MOV W0, W22
	0x03C694E8 MOV X1, X21
	0x03C694EC MOV W3, W20
	0x03C694F0 MOV X4, X19
	0x03C694F4 LDP X20, X19, [X31 + 0x50]
	0x03C694F8 LDP X22, X21, [X31 + 0x40]
	0x03C694FC LDP X24, X23, [X31 + 0x30]
	0x03C69500 LDP X30, X25, [X31 + 0x20]
	0x03C69504 LDP D9, D8, [X31 + 0x10]
	0x03C69508 MOV V0.16B, V11.16B
	0x03C6950C MOV V1.16B, V10.16B
	0x03C69510 MOV X5, X31
	0x03C69514 LDP D11, D10, [X31], #0x60
	0x03C69518 B 0x3C6951C
	0x03C6951C STP D11, D10, [X31 - 0x70]!
	0x03C69520 STP D9, D8, [X31 + 0x10]
	0x03C69524 STR X30, [X31 + 0x20]
	0x03C69528 STP X26, X25, [X31 + 0x30]
	0x03C6952C STP X24, X23, [X31 + 0x40]
	0x03C69530 STP X22, X21, [X31 + 0x50]
	0x03C69534 STP X20, X19, [X31 + 0x60]
	0x03C69538 ADRP X26, 0x77D000
	0x03C6953C ADRP X25, 0x4B1000
	0x03C69540 LDRB W8, [X26 + 0x5CB]
	0x03C69544 LDR X25, [X25 + 0x4C0]
	0x03C69548 MOV X19, X5
	0x03C6954C MOV X20, X4
	0x03C69550 MOV W21, W3
	0x03C69554 MOV W24, W2
	0x03C69558 MOV X22, X1
	0x03C6955C MOV W23, W0
	0x03C69560 MOV V8.16B, V3.16B
	0x03C69564 MOV V9.16B, V2.16B
	0x03C69568 MOV V10.16B, V1.16B
	0x03C6956C MOV V11.16B, V0.16B
	0x03C69570 TBNZ X8, 0x0, 0x3C69588
	0x03C69574 ADRP X0, 0x4B1000
	0x03C69578 LDR X0, [X0 + 0x4C0]
	0x03C6957C BL 0x1C16CF4
	0x03C69580 MOVZ W8, 0x1
	0x03C69584 STRB W8, [X26 + 0x5CB]
	0x03C69588 LDR X0, [X25]
	0x03C6958C LDR W8, [X0 + 0xE0]
	0x03C69590 CBNZ W8, 0x3C69598
	0x03C69594 BL 0x1C16DFC
	0x03C69598 AND W2, W24, 0x1
	0x03C6959C MOV V2.16B, V9.16B
	0x03C695A0 MOV V3.16B, V8.16B
	0x03C695A4 MOV W0, W23
	0x03C695A8 MOV X1, X22
	0x03C695AC MOV W3, W21
	0x03C695B0 MOV X4, X20
	0x03C695B4 MOV X5, X19
	0x03C695B8 LDP X20, X19, [X31 + 0x60]
	0x03C695BC LDP X22, X21, [X31 + 0x50]
	0x03C695C0 LDP X24, X23, [X31 + 0x40]
	0x03C695C4 LDP X26, X25, [X31 + 0x30]
	0x03C695C8 LDR X30, [X31 + 0x20]
	0x03C695CC LDP D9, D8, [X31 + 0x10]
	0x03C695D0 MOV V0.16B, V11.16B
	0x03C695D4 MOV V1.16B, V10.16B
	0x03C695D8 MOV W6, W31
	0x03C695DC LDP D11, D10, [X31], #0x70
	0x03C695E0 B 0x3C695E4
	0x03C695E4 SUB X31, X31, 0x80
	0x03C695E8 STP D11, D10, [X31 + 0x10]
	0x03C695EC STP D9, D8, [X31 + 0x20]
	0x03C695F0 STP X30, X27, [X31 + 0x30]
	0x03C695F4 STP X26, X25, [X31 + 0x40]
	0x03C695F8 STP X24, X23, [X31 + 0x50]
	0x03C695FC STP X22, X21, [X31 + 0x60]
	0x03C69600 STP X20, X19, [X31 + 0x70]
	0x03C69604 ADRP X26, 0x77D000
	0x03C69608 ADRP X27, 0x4B6000
	0x03C6960C LDRB W8, [X26 + 0x5CC]
	0x03C69610 LDR X27, [X27 + 0x5C8]
	0x03C69614 MOV W25, W6
	0x03C69618 MOV X23, X5
	0x03C6961C MOV X19, X4
	0x03C69620 MOV W20, W3
	0x03C69624 MOV W24, W2
	0x03C69628 MOV X21, X1
	0x03C6962C MOV W22, W0
	0x03C69630 MOV V8.16B, V3.16B
	0x03C69634 MOV V9.16B, V2.16B
	0x03C69638 MOV V10.16B, V1.16B
	0x03C6963C MOV V11.16B, V0.16B
	0x03C69640 TBNZ X8, 0x0, 0x3C69688
	0x03C69644 ADRP X0, 0x4B6000
	0x03C69648 LDR X0, [X0 + 0x5C8]
	0x03C6964C BL 0x1C16CF4
	0x03C69650 ADRP X0, 0x4B1000
	0x03C69654 LDR X0, [X0 + 0x4C0]
	0x03C69658 BL 0x1C16CF4
	0x03C6965C ADRP X0, 0x4F7000
	0x03C69660 LDR X0, [X0 + 0x298]
	0x03C69664 BL 0x1C16CF4
	0x03C69668 ADRP X0, 0x4F7000
	0x03C6966C LDR X0, [X0 + 0x2A0]
	0x03C69670 BL 0x1C16CF4
	0x03C69674 ADRP X0, 0x48A000
	0x03C69678 LDR X0, [X0 + 0x6C0]
	0x03C6967C BL 0x1C16CF4
	0x03C69680 MOVZ W8, 0x1
	0x03C69684 STRB W8, [X26 + 0x5CC]
	0x03C69688 LDR X0, [X27]
	0x03C6968C LDR W8, [X0 + 0xE0]
	0x03C69690 CBNZ W8, 0x3C69698
	0x03C69694 BL 0x1C16DFC
	0x03C69698 BL 0x3C67304
	0x03C6969C TBNZ X20, 0x1F, 0x3C696D4
	0x03C696A0 CBZ X21, 0x3C69934
	0x03C696A4 LDR X0, [X21 + 0x10]
	0x03C696A8 CBZ X0, 0x3C69934
	0x03C696AC LDR W8, [X0 + 0x10]
	0x03C696B0 CMP W8, W20
	0x03C696B4 B.LE 0x3C696D4
	0x03C696B8 MOV W1, W31
	0x03C696BC MOV W2, W20
	0x03C696C0 MOV X3, X31
	0x03C696C4 BL 0x3228DE4
	0x03C696C8 MOV X1, X0
	0x03C696CC MOV X0, X21
	0x03C696D0 BL 0x3C69948
	0x03C696D4 ADRP X8, 0x48A000
	0x03C696D8 LDR X8, [X8 + 0x6C0]
	0x03C696DC LDR X0, [X8]
	0x03C696E0 ADRP X8, 0x4F7000
	0x03C696E4 LDR X8, [X8 + 0x298]
	0x03C696E8 LDR W9, [X0 + 0xE0]
	0x03C696EC LDR X26, [X8]
	0x03C696F0 CBNZ W9, 0x3C696F8
	0x03C696F4 BL 0x1C16DFC
	0x03C696F8 MOV X0, X26
	0x03C696FC MOV X1, X31
	0x03C69700 BL 0x338C698
	0x03C69704 LDR X8, [X27]
	0x03C69708 MOV X26, X0
	0x03C6970C LDR W9, [X8 + 0xE0]
	0x03C69710 CBNZ W9, 0x3C6971C
	0x03C69714 MOV X0, X8
	0x03C69718 BL 0x1C16DFC
	0x03C6971C MOV X0, X26
	0x03C69720 MOV W1, W22
	0x03C69724 BL 0x3C699A0
	0x03C69728 CBZ X0, 0x3C69934
	0x03C6972C ADRP X9, 0x4F7000
	0x03C69730 LDR X9, [X9 + 0x2A0]
	0x03C69734 LDR X8, [X0]
	0x03C69738 MOV X26, X0
	0x03C6973C LDR X1, [X9]
	0x03C69740 LDRB W10, [X8 + 0x130]
	0x03C69744 LDRB W9, [X1 + 0x130]
	0x03C69748 CMP W10, W9
	0x03C6974C B.CC 0x3C69938
	0x03C69750 LDR X8, [X8 + 0xC8]
	0x03C69754 ADD X8, X8, X9, 0x3, LSL
	0x03C69758 LDUR X8, [X8 - 0x8]
	0x03C6975C CMP X8, X1
	0x03C69760 B.NE 0x3C69938
	0x03C69764 CBZ X21, 0x3C69934
	0x03C69768 LDR X1, [X21 + 0x10]
	0x03C6976C MOV X0, X26
	0x03C69770 MOV X2, X31
	0x03C69774 AND W27, W24, 0x1
	0x03C69778 BL 0x3C7E2B8
	0x03C6977C MOV X0, X26
	0x03C69780 MOV X1, X31
	0x03C69784 BL 0x3C81F84
	0x03C69788 MOV X0, X26
	0x03C6978C MOV V0.16B, V11.16B
	0x03C69790 MOV V1.16B, V10.16B
	0x03C69794 MOV V2.16B, V9.16B
	0x03C69798 MOV V3.16B, V8.16B
	0x03C6979C MOV X1, X31
	0x03C697A0 BL 0x3C7E384
	0x03C697A4 MOV X0, X26
	0x03C697A8 MOV X1, X31
	0x03C697AC STR X19, [X26 + 0x20]
	0x03C697B0 STRB W27, [X26 + 0x28]
	0x03C697B4 STR W22, [X26 + 0x18]
	0x03C697B8 BL 0x3C80454
	0x03C697BC MOV X0, X31
	0x03C697C0 BL 0x3C3CD88
	0x03C697C4 TBZ X0, 0x0, 0x3C69814
	0x03C697C8 ADRP X8, 0x4B1000
	0x03C697CC LDR X8, [X8 + 0x4C0]
	0x03C697D0 LDR X0, [X8]
	0x03C697D4 LDR W8, [X0 + 0xE0]
	0x03C697D8 CBNZ W8, 0x3C697E0
	0x03C697DC BL 0x1C16DFC
	0x03C697E0 AND W2, W24, 0x1
	0x03C697E4 MOV V0.16B, V11.16B
	0x03C697E8 MOV V1.16B, V10.16B
	0x03C697EC MOV V2.16B, V9.16B
	0x03C697F0 MOV V3.16B, V8.16B
	0x03C697F4 MOV W0, W22
	0x03C697F8 MOV X1, X21
	0x03C697FC MOV W3, W20
	0x03C69800 MOV X4, X19
	0x03C69804 MOV X5, X23
	0x03C69808 MOV X6, X26
	0x03C6980C BL 0x3C69A04
	0x03C69810 B 0x3C698D4
	0x03C69814 MOV X0, X31
	0x03C69818 BL 0x3C3CC00
	0x03C6981C TBZ X0, 0x0, 0x3C69848
	0x03C69820 MOV X0, X31
	0x03C69824 BL 0x3C3CCF4
	0x03C69828 ADRP X8, 0x4B1000
	0x03C6982C LDR X8, [X8 + 0x4C0]
	0x03C69830 MOV W27, W0
	0x03C69834 LDR X8, [X8]
	0x03C69838 LDR W9, [X8 + 0xE0]
	0x03C6983C CBZ W9, 0x3C69864
	0x03C69840 TBNZ X27, 0x0, 0x3C69870
	0x03C69844 B 0x3C698A0
	0x03C69848 ADRP X8, 0x4B1000
	0x03C6984C LDR X8, [X8 + 0x4C0]
	0x03C69850 LDR X0, [X8]
	0x03C69854 LDR W8, [X0 + 0xE0]
	0x03C69858 CBNZ W8, 0x3C69870
	0x03C6985C BL 0x1C16DFC
	0x03C69860 B 0x3C69870
	0x03C69864 MOV X0, X8
	0x03C69868 BL 0x1C16DFC
	0x03C6986C TBZ X27, 0x0, 0x3C698A0
	0x03C69870 AND W2, W24, 0x1
	0x03C69874 MOV V0.16B, V11.16B
	0x03C69878 MOV V1.16B, V10.16B
	0x03C6987C MOV V2.16B, V9.16B
	0x03C69880 MOV V3.16B, V8.16B
	0x03C69884 MOV W0, W22
	0x03C69888 MOV X1, X21
	0x03C6988C MOV W3, W20
	0x03C69890 MOV X4, X19
	0x03C69894 MOV X5, X26
	0x03C69898 BL 0x3C6A1F8
	0x03C6989C B 0x3C698D4
	0x03C698A0 AND W2, W24, 0x1
	0x03C698A4 MOV V0.16B, V11.16B
	0x03C698A8 MOV V1.16B, V10.16B
	0x03C698AC MOV V2.16B, V9.16B
	0x03C698B0 MOV V3.16B, V8.16B
	0x03C698B4 MOV W0, W22
	0x03C698B8 MOV X1, X21
	0x03C698BC MOV W3, W20
	0x03C698C0 MOV X4, X19
	0x03C698C4 MOV X5, X23
	0x03C698C8 MOV W6, W25
	0x03C698CC MOV X7, X26
	0x03C698D0 BL 0x3C69D7C
	0x03C698D4 ADRP X19, 0x77D000
	0x03C698D8 ADRP X20, 0x4F0000
	0x03C698DC LDRB W8, [X19 + 0x510]
	0x03C698E0 LDR X20, [X20 + 0x20]
	0x03C698E4 TBNZ X8, 0x0, 0x3C698FC
	0x03C698E8 ADRP X0, 0x4F0000
	0x03C698EC LDR X0, [X0 + 0x20]
	0x03C698F0 BL 0x1C16CF4
	0x03C698F4 MOVZ W8, 0x1
	0x03C698F8 STRB W8, [X19 + 0x510]
	0x03C698FC LDR X8, [X20]
	0x03C69900 MOV X0, X26
	0x03C69904 LDP X20, X19, [X31 + 0x70]
	0x03C69908 LDP X22, X21, [X31 + 0x60]
	0x03C6990C LDR X8, [X8 + 0xB8]
	0x03C69910 LDP X24, X23, [X31 + 0x50]
	0x03C69914 LDP X26, X25, [X31 + 0x40]
	0x03C69918 LDP X30, X27, [X31 + 0x30]
	0x03C6991C LDR X1, [X8]
	0x03C69920 LDP D9, D8, [X31 + 0x20]
	0x03C69924 LDP D11, D10, [X31 + 0x10]
	0x03C69928 MOV X2, X31
	0x03C6992C ADD X31, X31, 0x80
	0x03C69930 B 0x3C81A10
	0x03C69934 BL 0x1C16F20
	0x03C69938 MOV X0, X26
	0x03C6993C BL 0x1C171E0
	0x03C69940 LDR X0, [X0 + 0x10]
	0x03C69944 RET
	0x03C69948 STR X30, [X31 - 0x20]!
	0x03C6994C STP X20, X19, [X31 + 0x10]
	0x03C69950 LDR X8, [X0 + 0x10]
	0x03C69954 MOV X19, X0
	0x03C69958 MOV X20, X1
	0x03C6995C MOV X0, X1
	0x03C69960 MOV X1, X8
	0x03C69964 MOV X2, X31
	0x03C69968 BL 0x321BA08
	0x03C6996C TBNZ X0, 0x0, 0x3C69994
	0x03C69970 LDR X8, [X19 + 0x28]
	0x03C69974 STR X20, [X19 + 0x10]
	0x03C69978 CBZ X8, 0x3C69994
	0x03C6997C LDR X2, [X8 + 0x18]
	0x03C69980 LDR X0, [X8 + 0x40]
	0x03C69984 LDR X1, [X8 + 0x28]
	0x03C69988 LDP X20, X19, [X31 + 0x10]
	0x03C6998C LDR X30, [X31], #0x20
	0x03C69990 BR X2
	0x03C69994 LDP X20, X19, [X31 + 0x10]
	0x03C69998 LDR X30, [X31], #0x20
	0x03C6999C RET
	0x03C699A0 STR X30, [X31 - 0x30]!
	0x03C699A4 STP X22, X21, [X31 + 0x10]
	0x03C699A8 STP X20, X19, [X31 + 0x20]
	0x03C699AC ADRP X21, 0x77D000
	0x03C699B0 ADRP X22, 0x4F7000
	0x03C699B4 LDRB W8, [X21 + 0x93B]
	0x03C699B8 LDR X22, [X22 + 0x2A8]
	0x03C699BC MOV W19, W1
	0x03C699C0 MOV X20, X0
	0x03C699C4 TBNZ X8, 0x0, 0x3C699DC
	0x03C699C8 ADRP X0, 0x4F7000
	0x03C699CC LDR X0, [X0 + 0x2A8]
	0x03C699D0 BL 0x1C16CF4
	0x03C699D4 MOVZ W8, 0x1
	0x03C699D8 STRB W8, [X21 + 0x93B]
	0x03C699DC LDR X0, [X22]
	0x03C699E0 LDR W8, [X0 + 0xE0]
	0x03C699E4 CBNZ W8, 0x3C699EC
	0x03C699E8 BL 0x1C16DFC
	0x03C699EC MOV X0, X20
	0x03C699F0 MOV W1, W19
	0x03C699F4 LDP X20, X19, [X31 + 0x20]
	0x03C699F8 LDP X22, X21, [X31 + 0x10]
	0x03C699FC LDR X30, [X31], #0x30
	0x03C69A00 B 0x3C72E48
	0x03C69A04 STP D11, D10, [X31 - 0x80]!
	0x03C69A08 STP D9, D8, [X31 + 0x10]
	0x03C69A0C STR X30, [X31 + 0x20]
	0x03C69A10 STP X28, X27, [X31 + 0x30]
	0x03C69A14 STP X26, X25, [X31 + 0x40]
	0x03C69A18 STP X24, X23, [X31 + 0x50]
	0x03C69A1C STP X22, X21, [X31 + 0x60]
	0x03C69A20 STP X20, X19, [X31 + 0x70]
	0x03C69A24 ADRP X26, 0x77D000
	0x03C69A28 LDRB W8, [X26 + 0x5CF]
	0x03C69A2C MOV X19, X6
	0x03C69A30 MOV X25, X5
	0x03C69A34 MOV X20, X4
	0x03C69A38 MOV W21, W3
	0x03C69A3C MOV W24, W2
	0x03C69A40 MOV X22, X1
	0x03C69A44 MOV W23, W0
	0x03C69A48 MOV V8.16B, V3.16B
	0x03C69A4C MOV V9.16B, V2.16B
	0x03C69A50 MOV V10.16B, V1.16B
	0x03C69A54 MOV V11.16B, V0.16B
	0x03C69A58 TBNZ X8, 0x0, 0x3C69AAC
	0x03C69A5C ADRP X0, 0x48A000
	0x03C69A60 LDR X0, [X0 + 0x970]
	0x03C69A64 BL 0x1C16CF4
	0x03C69A68 ADRP X0, 0x4B6000
	0x03C69A6C LDR X0, [X0 + 0x5C8]
	0x03C69A70 BL 0x1C16CF4
	0x03C69A74 ADRP X0, 0x4B1000
	0x03C69A78 LDR X0, [X0 + 0x4C0]
	0x03C69A7C BL 0x1C16CF4
	0x03C69A80 ADRP X0, 0x4F7000
	0x03C69A84 LDR X0, [X0 + 0x298]
	0x03C69A88 BL 0x1C16CF4
	0x03C69A8C ADRP X0, 0x4F7000
	0x03C69A90 LDR X0, [X0 + 0x2A0]
	0x03C69A94 BL 0x1C16CF4
	0x03C69A98 ADRP X0, 0x48A000
	0x03C69A9C LDR X0, [X0 + 0x6C0]
	0x03C69AA0 BL 0x1C16CF4
	0x03C69AA4 MOVZ W8, 0x1
	0x03C69AA8 STRB W8, [X26 + 0x5CF]

ISIL:
	001 Subtract X31, X31, 416
	002 Move [X31+288], D15
	003 Move [X31+296], D14
	004 Move [X31+304], D13
	005 Move [X31+312], D12
	006 Move [X31+320], D11
	007 Move [X31+328], D10
	008 Move [X31+336], D9
	009 Move [X31+344], D8
	010 Move [X31+352], X29
	011 Move [X31+360], X30
	012 Move [X31+368], X24
	013 Move [X31+376], X23
	014 Move [X31+384], X22
	015 Move [X31+392], X21
	016 Move [X31+400], X20
	017 Move [X31+408], X19
	018 Move X24, 0x77E000
	019 Move X23, 0x4B7000
	020 Move W8, [X24+1476]
	021 Move X23, [X23+1480]
	022 Move W22, W3
	023 Move V12, V4
	024 Move W21, W2
	025 Move W19, W1
	026 Move X20, X0
	027 Move V10, V3
	028 Move V11, V2
	029 Move V8, V1
	030 Move V9, V0
	031 Move TEMP, X8
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {55}
	035 Move X0, 0x48B000
	036 Move X0, [X0+2600]
	037 Call 0x1C17CF4
	038 Move X0, 0x4B7000
	039 Move X0, [X0+1480]
	040 Call 0x1C17CF4
	041 Move X0, 0x4B2000
	042 Move X0, [X0+1216]
	043 Call 0x1C17CF4
	044 Move X0, 0x48F000
	045 Move X0, [X0+712]
	046 Call 0x1C17CF4
	047 Move X0, 0x48B000
	048 Move X0, [X0+1432]
	049 Call 0x1C17CF4
	050 Move X0, 0x4F8000
	051 Move X0, [X0+656]
	052 Call 0x1C17CF4
	053 Move W8, 1
	054 Move [X24+1476], W8
	055 Add X0, X31, 96
	056 Move W2, 184
	057 Move W1, W31
	058 Call 0x3EB2B10
	059 Move X0, [X23]
	060 Move W8, [X0+224]
	061 Compare W8, 0
	062 JumpIfNotEqual {64}
	063 Call 0x1C17DFC
	064 Call GUIUtility.CheckOnGUI
	065 Move X23, 0x77E000
	066 Move X24, 0x4F1000
	067 Move W8, [X23+1296]
	068 Move X24, [X24+32]
	069 Move TEMP, X8
	070 And TEMP, TEMP, 1
	071 Compare TEMP, 1
	072 JumpIfEqual {78}
	073 Move X0, 0x4F1000
	074 Move X0, [X0+32]
	075 Call 0x1C17CF4
	076 Move W8, 1
	077 Move [X23+1296], W8
	078 Move X8, [X24]
	079 Move X8, [X8+184]
	080 Move X23, [X8]
	081 Compare X23, 0
	082 JumpIfEqual {471}
	083 Move X24, 0x77E000
	084 Move X8, [X24+1192]
	085 Compare X8, 0
	086 JumpIfNotEqual {92}
	087 Move X0, -51867648
	088 Add X0, X0, 1382
	089 Call 0x1C17CB8
	090 Move X8, X0
	091 Move [X24+1192], X0
	092 Move X0, X23
	093 NotImplemented "Instruction BLR not yet implemented."
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Move X8, 0x48B000
	096 Move X8, [X8+1432]
	097 Move X0, [X8]
	098 Move W8, [X0+224]
	099 Compare W8, 0
	100 JumpIfNotEqual {102}
	101 Call 0x1C17DFC
	102 Move X0, X20
	103 Move X1, X31
	104 Move X2, X31
	105 Call Object.op_Equality, X0, X1
	106 Move TEMP, X0
	107 And TEMP, TEMP, 1
	108 Compare TEMP, 1
	109 JumpIfNotEqual {122}
	110 Move X8, 0x48B000
	111 Move X8, [X8+2600]
	112 Move X0, [X8]
	113 Move W8, [X0+224]
	114 Compare W8, 0
	115 JumpIfNotEqual {117}
	116 Call 0x1C17DFC
	117 Move X8, 0x4F8000
	118 Move X8, [X8+656]
	119 Move X1, X31
	120 Move X0, [X8]
	121 Call Debug.LogWarning, X0
	122 NotImplemented "Instruction FCMP not yet implemented."
	123 Compare X20, 0
	124 JumpIfEqual {471}
	125 Move X8, [X20]
	126 Move X0, X20
	127 Move X9, [X8+392]
	128 Move X1, [X8+400]
	129 NotImplemented "Instruction BLR not yet implemented."
	130 Move X8, [X20]
	131 Move W23, W0
	132 Move X0, X20
	133 Move X9, [X8+424]
	134 Move X1, [X8+432]
	135 NotImplemented "Instruction BLR not yet implemented."
	136 NotImplemented "Instruction SCVTF not yet implemented."
	137 NotImplemented "Instruction SCVTF not yet implemented."
	138 NotImplemented "Instruction FDIV not yet implemented."
	139 Move X23, 0x770000
	140 Move V4, [X31+480]
	141 Move V5, [X31+484]
	142 Move W8, [X23+3674]
	143 Move V6, [X31+488]
	144 Move V7, [X31+492]
	145 And W22, W22, 1
	146 Move [X31+52], S8
	147 Move [X31+60], S9
	148 Move [X31+92], S7
	149 Compare W8, 0
	150 JumpIfNotEqual {163}
	151 Move X0, 0x492000
	152 Move X0, [X0+2464]
	153 Move V8, V4
	154 Move V9, V5
	155 Move V13, V6
	156 Call 0x1C17CF4
	157 Move V7, [X31+92]
	158 Move V6, V13
	159 Move V5, V9
	160 Move V4, V8
	161 Move W8, 1
	162 Move [X23+3674], W8
	163 Move V1, [X31+448]
	164 Move V0, [X31+452]
	165 Move X8, -51900416
	166 Move V9, [X8+3872]
	167 Move X8, 0x492000
	168 Move [X31+84], S0
	169 Move [X31+92], S1
	170 Move V1, [X31+456]
	171 Move V0, [X31+460]
	172 Move V16, [X31+432]
	173 Move V14, [X31+416]
	174 Move V15, [X31+420]
	175 Move [X31+76], S0
	176 Move [X31+84], S1
	177 Move X8, [X8+2464]
	178 Move V1, [X31+464]
	179 Move V0, [X31+468]
	180 Move [X31+44], S5
	181 Move [X31+52], S4
	182 Move X8, [X8]
	183 Move [X31+36], S16
	184 Move [X31+44], S6
	185 Move [X31+60], S1
	186 Move [X31+68], S0
	187 Move V1, [X31+472]
	188 Move X8, [X8+184]
	189 Move V0, [X31+476]
	190 Move V13, [X31+424]
	191 Move V8, [X31+428]
	192 Move S3, [X8]
	193 Move S2, [X8+4]
	194 Move [X31+68], S1
	195 Move [X31+76], S0
	196 Move S1, [X8+8]
	197 Move S0, [X8+12]
	198 Move V17, [X31+436]
	199 Subtract S4, S4, S3
	200 Subtract S5, S5, S2
	201 Subtract S6, S6, S1
	202 Multiply S4, S4, S4
	203 Multiply S5, S5, S5
	204 Move V18, [X31+440]
	205 Move V19, [X31+444]
	206 Move V23, [X31+496]
	207 Move V22, [X31+500]
	208 Move V21, [X31+504]
	209 Move V20, [X31+508]
	210 Add S4, S4, S5
	211 Subtract S5, S7, S0
	212 Multiply S6, S6, S6
	213 Add S4, S6, S4
	214 Multiply S5, S5, S5
	215 Add S4, S5, S4
	216 NotImplemented "Instruction FCMP not yet implemented."
	217 Move [X31+28], S18
	218 Move [X31+36], S17
	219 Move [X31+20], S20
	220 Move [X31+28], S19
	221 Move [X31+12], S22
	222 Move [X31+20], S21
	223 Move [X31+8], S23
	224 Subtract S0, S14, S16
	225 Subtract S1, S15, S17
	226 Subtract S2, S13, S18
	227 Multiply S0, S0, S0
	228 Multiply S1, S1, S1
	229 Subtract S3, S8, S19
	230 Multiply S2, S2, S2
	231 Add S0, S0, S1
	232 Add S0, S2, S0
	233 Multiply S1, S3, S3
	234 Add S0, S1, S0
	235 NotImplemented "Instruction FCMP not yet implemented."
	236 Move S1, [X31+84]
	237 Move S0, [X31+88]
	238 Move S3, [X31+76]
	239 Move S2, [X31+80]
	240 Subtract S0, S14, S0
	241 Subtract S1, S15, S1
	242 Subtract S2, S13, S2
	243 Multiply S0, S0, S0
	244 Multiply S1, S1, S1
	245 Subtract S3, S8, S3
	246 Multiply S2, S2, S2
	247 Add S0, S0, S1
	248 Add S0, S2, S0
	249 Multiply S1, S3, S3
	250 Add S0, S1, S0
	251 NotImplemented "Instruction FCMP not yet implemented."
	252 Move X8, 0x4B2000
	253 Move X8, [X8+1216]
	254 Move X0, [X8]
	255 Move W8, [X0+224]
	256 Compare W8, 0
	257 JumpIfNotEqual {344}
	258 Call 0x1C17DFC
	259 Move [X31+4], S11
	260 Move X8, 0x4B2000
	261 Move X8, [X8+1216]
	262 Subtract S3, S23, S3
	263 Subtract S2, S22, S2
	264 Subtract S1, S21, S1
	265 Move X0, [X8]
	266 Multiply S3, S3, S3
	267 Multiply S2, S2, S2
	268 Subtract S0, S20, S0
	269 Move W8, [X0+224]
	270 Add S2, S3, S2
	271 Multiply S1, S1, S1
	272 Add S1, S1, S2
	273 Multiply S0, S0, S0
	274 Move V11, V10
	275 Add S10, S0, S1
	276 Compare W8, 0
	277 JumpIfNotEqual {279}
	278 Call 0x1C17DFC
	279 NotImplemented "Instruction FCMP not yet implemented."
	280 Move X21, 0x77E000
	281 Move X8, [X21+1408]
	282 Move V9, [X31+56]
	283 Move V10, V11
	284 Compare X8, 0
	285 JumpIfNotEqual {291}
	286 Move X0, -51769344
	287 Add X0, X0, 2347
	288 Call 0x1C17CB8
	289 Move X8, X0
	290 Move [X21+1408], X0
	291 NotImplemented "Instruction BLR not yet implemented."
	292 Move V11, [X31+4]
	293 Move V9, [X31+56]
	294 Move V10, V11
	295 Move TEMP, X21
	296 And TEMP, TEMP, 1
	297 Compare TEMP, 1
	298 JumpIfNotEqual {354}
	299 Move X21, 0x77E000
	300 Move X8, [X21+1392]
	301 Move V11, [X31+4]
	302 Compare X8, 0
	303 JumpIfNotEqual {364}
	304 Move X0, -51875840
	305 Add X0, X0, 1392
	306 Call 0x1C17CB8
	307 Move X8, X0
	308 Move [X21+1392], X0
	309 Move X8, 0x4B2000
	310 Move S0, [X31+60]
	311 Move S1, [X31+64]
	312 Move S2, [X31+68]
	313 Move S3, [X31+72]
	314 Move X8, [X8+1216]
	315 Subtract S0, S14, S0
	316 Subtract S1, S15, S1
	317 Move X0, [X8]
	318 Subtract S2, S13, S2
	319 Multiply S0, S0, S0
	320 Multiply S1, S1, S1
	321 Move W8, [X0+224]
	322 Subtract S3, S8, S3
	323 Add S0, S0, S1
	324 Multiply S1, S2, S2
	325 Add S0, S1, S0
	326 Multiply S1, S3, S3
	327 Add S0, S1, S0
	328 Compare W8, 0
	329 JumpIfNotEqual {333}
	330 Move [X31+4], S0
	331 Call 0x1C17DFC
	332 Move V0, [X31+4]
	333 NotImplemented "Instruction FCMP not yet implemented."
	334 Move X21, 0x77E000
	335 Move X8, [X21+1408]
	336 Move V9, [X31+56]
	337 Compare X8, 0
	338 JumpIfNotEqual {364}
	339 Move X0, -51769344
	340 Add X0, X0, 2347
	341 Call 0x1C17CB8
	342 Move X8, X0
	343 Move [X21+1408], X0
	344 Move X21, 0x77E000
	345 Move X8, [X21+1416]
	346 Move V9, [X31+56]
	347 Compare X8, 0
	348 JumpIfNotEqual {364}
	349 Move X0, -51625984
	350 Add X0, X0, 3116
	351 Call 0x1C17CB8
	352 Move X8, X0
	353 Move [X21+1416], X0
	354 Move X21, 0x77E000
	355 Move X8, [X21+1400]
	356 Move V11, [X31+4]
	357 Compare X8, 0
	358 JumpIfNotEqual {364}
	359 Move X0, -51634176
	360 Add X0, X0, 3794
	361 Call 0x1C17CB8
	362 Move X8, X0
	363 Move [X21+1400], X0
	364 NotImplemented "Instruction BLR not yet implemented."
	365 Move V2, [X31+88]
	366 Move V1, [X31+84]
	367 Move [X31+128], X31
	368 Move [X31+136], X31
	369 Move [X31+144], S14
	370 Move [X31+152], S15
	371 Move [X31+152], S13
	372 Move [X31+160], S8
	373 Move [X31+160], S2
	374 Move [X31+168], S1
	375 Move V2, [X31+80]
	376 Move V1, [X31+76]
	377 Move [X31+208], S14
	378 Move [X31+216], S15
	379 Move [X31+216], S13
	380 Move [X31+224], S8
	381 Move [X31+256], W22
	382 Move [X31+168], S2
	383 Move [X31+176], S1
	384 Move V2, [X31+36]
	385 Move V1, [X31+32]
	386 Move [X31+260], W31
	387 Move X8, 0x4B2000
	388 NotImplemented "Instruction MOVI not yet implemented."
	389 Move [X31+176], S2
	390 Move [X31+184], S1
	391 Move V2, [X31+28]
	392 Move V1, [X31+24]
	393 Add X9, X31, 2
	394 Add X10, X31, 96
	395 Move [X31+184], S2
	396 Move [X31+192], S1
	397 Move V2, [X31+60]
	398 Move V1, [X31+64]
	399 Move [X31+192], S2
	400 Move [X31+200], S1
	401 Move V2, [X31+68]
	402 Move V1, [X31+72]
	403 Move [X31+200], S2
	404 Move [X31+208], S1
	405 Move V2, [X31+48]
	406 Move V1, [X31+44]
	407 Move [X31+224], S2
	408 Move [X31+232], S1
	409 Move V2, [X31+40]
	410 Move V1, [X31+92]
	411 Move [X31+232], S2
	412 Move [X31+240], S1
	413 Move V2, [X31+8]
	414 Move V1, [X31+12]
	415 Move [X31+240], S2
	416 Move [X31+248], S1
	417 Move V2, [X31+16]
	418 Move V1, [X31+20]
	419 Move [X31+248], S2
	420 Move [X31+256], S1
	421 Move X8, [X8+1216]
	422 Move [X31+96], V0
	423 Move [X31+104], V0
	424 Move [X9+255], W31
	425 Move [X31+264], X20
	426 Move [X31+272], X0
	427 Move X8, [X8]
	428 Add X20, X10, 16
	429 Move W9, [X8+224]
	430 Compare W9, 0
	431 JumpIfNotEqual {434}
	432 Move X0, X8
	433 Call 0x1C17DFC
	434 Move V1, [X31+52]
	435 Add X1, X31, 96
	436 Move V0, V9
	437 Move V2, V11
	438 Move V3, V10
	439 Move W0, W19
	440 Move V4, V12
	441 Move X2, X20
	442 Call GUI.CalculateScaledTextureRects, X0, X1, V0, X2, X3
	443 Move X8, 0x48F000
	444 Move X8, [X8+712]
	445 Move X0, [X8]
	446 Move W8, [X0+224]
	447 Compare W8, 0
	448 JumpIfNotEqual {450}
	449 Call 0x1C17DFC
	450 Add X0, X31, 96
	451 Move X1, X31
	452 Call Graphics.Internal_DrawTexture, X0
	453 Move X20, [X31+400]
	454 Move X19, [X31+408]
	455 Move X22, [X31+384]
	456 Move X21, [X31+392]
	457 Move X24, [X31+368]
	458 Move X23, [X31+376]
	459 Move X29, [X31+352]
	460 Move X30, [X31+360]
	461 Move D9, [X31+336]
	462 Move D8, [X31+344]
	463 Move D11, [X31+320]
	464 Move D10, [X31+328]
	465 Move D13, [X31+304]
	466 Move D12, [X31+312]
	467 Move D15, [X31+288]
	468 Move D14, [X31+296]
	469 Add X31, X31, 416
	470 Return 
	471 Call 0x1C17F20

Method: System.Boolean CalculateScaledTextureRects(UnityEngine.Rect position, UnityEngine.ScaleMode scaleMode, System.Single imageAspect, ref UnityEngine.Rect outScreenRect, ref UnityEngine.Rect outSourceRect)

Disassembly:
	0x03C69AAC ADRP X26, 0x77D000
	0x03C69AB0 ADRP X27, 0x4F0000
	0x03C69AB4 LDRB W8, [X26 + 0x510]
	0x03C69AB8 LDR X27, [X27 + 0x20]
	0x03C69ABC TBNZ X8, 0x0, 0x3C69AD4
	0x03C69AC0 ADRP X0, 0x4F0000
	0x03C69AC4 LDR X0, [X0 + 0x20]
	0x03C69AC8 BL 0x1C16CF4
	0x03C69ACC MOVZ W8, 0x1
	0x03C69AD0 STRB W8, [X26 + 0x510]
	0x03C69AD4 LDR X8, [X27]
	0x03C69AD8 LDR X8, [X8 + 0xB8]
	0x03C69ADC LDR X26, [X8]
	0x03C69AE0 CBZ X26, 0x3C69D70
	0x03C69AE4 ADRP X27, 0x77D000
	0x03C69AE8 LDR X8, [X27 + 0x4A8]
	0x03C69AEC CBNZ X8, 0x3C69B04
	0x03C69AF0 ADRP X0, 0xFFFFFFFFFCE88000
	0x03C69AF4 ADD X0, X0, 0x566
	0x03C69AF8 BL 0x1C16CB8
	0x03C69AFC MOV X8, X0
	0x03C69B00 STR X0, [X27 + 0x4A8]
	0x03C69B04 ADRP X28, 0x4B1000
	0x03C69B08 LDR X28, [X28 + 0x4C0]
	0x03C69B0C MOV X0, X26
	0x03C69B10 BLR X8
	0x03C69B14 CMP W0, 0x7
	0x03C69B18 B.NE 0x3C69D14
	0x03C69B1C LDR X0, [X28]
	0x03C69B20 LDR W8, [X0 + 0xE0]
	0x03C69B24 CBNZ W8, 0x3C69B30
	0x03C69B28 BL 0x1C16DFC
	0x03C69B2C LDR X0, [X28]
	0x03C69B30 LDR X8, [X0 + 0xB8]
	0x03C69B34 LDR W8, [X8]
	0x03C69B38 ADDS W31, W8, 0x1
	0x03C69B3C B.EQ 0x3C69C2C
	0x03C69B40 LDR W9, [X0 + 0xE0]
	0x03C69B44 CBNZ W9, 0x3C69B58
	0x03C69B48 BL 0x1C16DFC
	0x03C69B4C LDR X8, [X28]
	0x03C69B50 LDR X8, [X8 + 0xB8]
	0x03C69B54 LDR W8, [X8]
	0x03C69B58 CMP W8, W23
	0x03C69B5C B.EQ 0x3C69C2C
	0x03C69B60 ADRP X8, 0x48A000
	0x03C69B64 LDR X8, [X8 + 0x6C0]
	0x03C69B68 LDR X0, [X8]
	0x03C69B6C ADRP X8, 0x4F7000
	0x03C69B70 LDR X8, [X8 + 0x298]
	0x03C69B74 LDR W9, [X0 + 0xE0]
	0x03C69B78 LDR X26, [X8]
	0x03C69B7C CBNZ W9, 0x3C69B84
	0x03C69B80 BL 0x1C16DFC
	0x03C69B84 MOV X0, X26
	0x03C69B88 MOV X1, X31
	0x03C69B8C BL 0x338C698
	0x03C69B90 LDR X8, [X28]
	0x03C69B94 MOV X26, X0
	0x03C69B98 LDR W9, [X8 + 0xE0]
	0x03C69B9C CBNZ W9, 0x3C69BAC
	0x03C69BA0 MOV X0, X8
	0x03C69BA4 BL 0x1C16DFC
	0x03C69BA8 LDR X8, [X28]
	0x03C69BAC ADRP X9, 0x4B6000

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 NotImplemented "Instruction FDIV not yet implemented."
	003 NotImplemented "Instruction CMP not yet implemented."
	004 Compare W0, 0
	005 JumpIfNotEqual {37}
	006 Move [X1], S0
	007 Move [X1+8], S1
	008 Move [X1+8], S2
	009 Move [X1+16], S3
	010 Move S4, 1
	011 Move S5, W31
	012 Move S6, W31
	013 NotImplemented "Instruction FCMP not yet implemented."
	014 NotImplemented "Instruction FDIV not yet implemented."
	015 Move S4, 1
	016 Move [X1], S0
	017 Move [X1+8], S1
	018 Move S0, 0.5
	019 Subtract S1, S4, S7
	020 Move [X1+8], S2
	021 Move [X1+16], S3
	022 Multiply S6, S1, S0
	023 Move S5, W31
	024 NotImplemented "Instruction FCMP not yet implemented."
	025 NotImplemented "Instruction FDIV not yet implemented."
	026 Move S4, 1
	027 Subtract S17, S4, S7
	028 Move S16, 0.5
	029 Multiply S7, S2, S7
	030 Multiply S2, S2, S17
	031 Multiply S2, S2, S16
	032 Move S5, W31
	033 Move S6, W31
	034 Move [X1+8], S7
	035 Move [X1+16], S3
	036 Add S0, S0, S2
	037 Move W0, W31
	038 Return X0
	039 NotImplemented "Instruction FDIV not yet implemented."
	040 Move [X1], S0
	041 Move [X1+8], S1
	042 Move S0, 0.5
	043 Multiply S1, S4, S0
	044 Move [X1+8], S2
	045 Move [X1+16], S3
	046 Move S7, 1
	047 Subtract S5, S0, S1
	048 Move S6, W31
	049 NotImplemented "Instruction FDIV not yet implemented."
	050 Move S4, 1
	051 Subtract S17, S4, S7
	052 Move S16, 0.5
	053 Multiply S7, S3, S7
	054 Multiply S3, S3, S17
	055 Move [X1+8], S2
	056 Move [X1+16], S7
	057 Multiply S2, S3, S16
	058 Move S5, W31
	059 Move S6, W31
	060 Add S1, S1, S2
	061 Move [X1], S0
	062 Move [X1+8], S1
	063 Move S7, 1
	064 Move W0, 1
	065 Move [X2], S5
	066 Move [X2+8], S6
	067 Move [X2+8], S4
	068 Move [X2+16], S7
	069 Return X0

Method: System.Void Box(UnityEngine.Rect position, System.String text)

Disassembly:
	0x03C69BB0 LDR X9, [X9 + 0x5C8]
	0x03C69BB4 LDR X8, [X8 + 0xB8]
	0x03C69BB8 LDR X0, [X9]
	0x03C69BBC LDR W27, [X8]
	0x03C69BC0 LDR W9, [X0 + 0xE0]
	0x03C69BC4 CBNZ W9, 0x3C69BCC
	0x03C69BC8 BL 0x1C16DFC
	0x03C69BCC MOV X0, X26
	0x03C69BD0 MOV W1, W27
	0x03C69BD4 BL 0x3C699A0
	0x03C69BD8 CBZ X0, 0x3C69D70
	0x03C69BDC ADRP X9, 0x4F7000
	0x03C69BE0 LDR X9, [X9 + 0x2A0]
	0x03C69BE4 LDR X8, [X0]
	0x03C69BE8 MOV X26, X0
	0x03C69BEC LDR X1, [X9]
	0x03C69BF0 LDRB W10, [X8 + 0x130]
	0x03C69BF4 LDRB W9, [X1 + 0x130]
	0x03C69BF8 CMP W10, W9
	0x03C69BFC B.CC 0x3C69D74
	0x03C69C00 LDR X8, [X8 + 0xC8]
	0x03C69C04 ADD X8, X8, X9, 0x3, LSL
	0x03C69C08 LDUR X8, [X8 - 0x8]
	0x03C69C0C CMP X8, X1
	0x03C69C10 B.NE 0x3C69D74
	0x03C69C14 LDR X0, [X26 + 0x10]
	0x03C69C18 CBZ X0, 0x3C69D70
	0x03C69C1C MOV W1, W31
	0x03C69C20 MOV X2, X31
	0x03C69C24 BL 0x3C3D014
	0x03C69C28 STR X31, [X26 + 0x10]
	0x03C69C2C CBZ X19, 0x3C69D70
	0x03C69C30 ADRP X8, 0x4B6000
	0x03C69C34 LDR X8, [X8 + 0x5C8]
	0x03C69C38 LDR X26, [X19 + 0x10]
	0x03C69C3C LDR X0, [X8]
	0x03C69C40 LDR W8, [X0 + 0xE0]
	0x03C69C44 CBNZ W8, 0x3C69C4C
	0x03C69C48 BL 0x1C16DFC
	0x03C69C4C BL 0x3C6AA80
	0x03C69C50 CMP W0, W23
	0x03C69C54 CBZ X26, 0x3C69C9C
	0x03C69C58 B.NE 0x3C69CF8
	0x03C69C5C ADRP X8, 0x48A000
	0x03C69C60 LDR X8, [X8 + 0x970]
	0x03C69C64 LDR X0, [X8]
	0x03C69C68 LDR W8, [X0 + 0xE0]
	0x03C69C6C CBNZ W8, 0x3C69C74
	0x03C69C70 BL 0x1C16DFC
	0x03C69C74 MOV X0, X31
	0x03C69C78 BL 0x3C0190C
	0x03C69C7C LDR X8, [X19 + 0x10]

ISIL:
	001 Move [X31-64], D11
	002 Move [X31-56], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X21, 0x77E000
	010 Move X20, 0x4B6000
	011 Move W8, [X21+1477]
	012 Move X20, [X20+3024]
	013 Move X19, X0
	014 Move V8, V3
	015 Move V9, V2
	016 Move V10, V1
	017 Move V11, V0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {30}
	022 Move X0, 0x4B6000
	023 Move X0, [X0+3024]
	024 Call 0x1C17CF4
	025 Move X0, 0x4B2000
	026 Move X0, [X0+1216]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X21+1477], W8
	030 Move X0, [X20]
	031 Move X20, 0x4B2000
	032 Move W8, [X0+224]
	033 Move X20, [X20+1216]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Move X0, X19
	038 Call GUIContent.Temp, X0
	039 Move X8, [X20]
	040 Move X19, X0
	041 Move W9, [X8+224]
	042 Compare W9, 0
	043 JumpIfNotEqual {47}
	044 Move X0, X8
	045 Call 0x1C17DFC
	046 Move X8, [X20]
	047 Move X8, [X8+184]
	048 Move X8, [X8+48]
	049 Compare X8, 0
	050 JumpIfEqual {67}
	051 Move X1, [X8+32]
	052 Move V2, V9
	053 Move V3, V8
	054 Move X0, X19
	055 Move X20, [X31+48]
	056 Move X19, [X31+56]
	057 Move X30, [X31+32]
	058 Move X21, [X31+40]
	059 Move D9, [X31+16]
	060 Move D8, [X31+24]
	061 Move V0, V11
	062 Move V1, V10
	063 Move D11, [X31+64]
	064 Move D10, [X31+72]
	065 Call GUI.Box, X0, X1, X2
	066 Return 
	067 Call 0x1C17F20

Method: System.Void Box(UnityEngine.Rect position, UnityEngine.GUIContent content, UnityEngine.GUIStyle style)

Disassembly:
	0x03C69C88 MOV X0, X8
	0x03C69C8C MOV X1, X31
	0x03C69C90 BL 0x3C3CFD8
	0x03C69C94 TBZ X0, 0x0, 0x3C69CC4
	0x03C69C98 B 0x3C69D14
	0x03C69C9C B.NE 0x3C69D14
	0x03C69CA0 ADRP X8, 0x48A000
	0x03C69CA4 LDR X8, [X8 + 0x970]
	0x03C69CA8 LDR X0, [X8]
	0x03C69CAC LDR W8, [X0 + 0xE0]
	0x03C69CB0 CBNZ W8, 0x3C69CB8
	0x03C69CB4 BL 0x1C16DFC
	0x03C69CB8 MOV X0, X31
	0x03C69CBC BL 0x3C0190C
	0x03C69CC0 TBZ X0, 0x0, 0x3C69D14
	0x03C69CC4 MOV X0, X25
	0x03C69CC8 CBNZ X25, 0x3C69CD4
	0x03C69CCC CBZ X22, 0x3C69D70
	0x03C69CD0 LDR X0, [X22 + 0x10]
	0x03C69CD4 CMP X25, 0x0
	0x03C69CD8 CSET W4, NE
	0x03C69CDC AND W3, W24, 0x1
	0x03C69CE0 MOVZ W2, 0x1
	0x03C69CE4 MOV W1, W31
	0x03C69CE8 MOV X5, X31
	0x03C69CEC BL 0x3C3CE90
	0x03C69CF0 STR X0, [X19 + 0x10]
	0x03C69CF4 B 0x3C69D14
	0x03C69CF8 LDR X8, [X19 + 0x10]
	0x03C69CFC CBZ X8, 0x3C69D70
	0x03C69D00 MOV X0, X8
	0x03C69D04 MOV W1, W31
	0x03C69D08 MOV X2, X31
	0x03C69D0C BL 0x3C3D014
	0x03C69D10 STR X31, [X19 + 0x10]
	0x03C69D14 LDR X0, [X28]
	0x03C69D18 LDR W8, [X0 + 0xE0]
	0x03C69D1C CBNZ W8, 0x3C69D24
	0x03C69D20 BL 0x1C16DFC
	0x03C69D24 AND W2, W24, 0x1
	0x03C69D28 MOV V2.16B, V9.16B
	0x03C69D2C MOV V3.16B, V8.16B
	0x03C69D30 MOV W0, W23
	0x03C69D34 MOV X1, X22
	0x03C69D38 MOV W3, W21
	0x03C69D3C MOV X4, X20
	0x03C69D40 MOV X5, X19
	0x03C69D44 LDP X20, X19, [X31 + 0x70]
	0x03C69D48 LDP X22, X21, [X31 + 0x60]
	0x03C69D4C LDP X24, X23, [X31 + 0x50]
	0x03C69D50 LDP X26, X25, [X31 + 0x40]
	0x03C69D54 LDP X28, X27, [X31 + 0x30]
	0x03C69D58 LDR X30, [X31 + 0x20]
	0x03C69D5C LDP D9, D8, [X31 + 0x10]
	0x03C69D60 MOV V0.16B, V11.16B
	0x03C69D64 MOV V1.16B, V10.16B
	0x03C69D68 LDP D11, D10, [X31], #0x80
	0x03C69D6C B 0x3C6A1F8
	0x03C69D70 BL 0x1C16F20
	0x03C69D74 MOV X0, X26
	0x03C69D78 BL 0x1C171E0
	0x03C69D7C STP D11, D10, [X31 - 0x80]!
	0x03C69D80 STP D9, D8, [X31 + 0x10]
	0x03C69D84 STR X30, [X31 + 0x20]
	0x03C69D88 STP X28, X27, [X31 + 0x30]
	0x03C69D8C STP X26, X25, [X31 + 0x40]
	0x03C69D90 STP X24, X23, [X31 + 0x50]
	0x03C69D94 STP X22, X21, [X31 + 0x60]
	0x03C69D98 STP X20, X19, [X31 + 0x70]
	0x03C69D9C ADRP X24, 0x77D000
	0x03C69DA0 LDRB W8, [X24 + 0x5CD]
	0x03C69DA4 MOV X22, X7
	0x03C69DA8 MOV W26, W6
	0x03C69DAC MOV X21, X5
	0x03C69DB0 MOV X25, X4
	0x03C69DB4 MOV W27, W3
	0x03C69DB8 MOV W23, W2
	0x03C69DBC MOV X19, X1
	0x03C69DC0 MOV W20, W0
	0x03C69DC4 MOV V11.16B, V3.16B
	0x03C69DC8 MOV V8.16B, V2.16B
	0x03C69DCC MOV V10.16B, V1.16B
	0x03C69DD0 MOV V9.16B, V0.16B
	0x03C69DD4 TBNZ X8, 0x0, 0x3C69E1C
	0x03C69DD8 ADRP X0, 0x4B6000
	0x03C69DDC LDR X0, [X0 + 0x5C8]
	0x03C69DE0 BL 0x1C16CF4
	0x03C69DE4 ADRP X0, 0x4B1000
	0x03C69DE8 LDR X0, [X0 + 0x4C0]
	0x03C69DEC BL 0x1C16CF4
	0x03C69DF0 ADRP X0, 0x4F7000
	0x03C69DF4 LDR X0, [X0 + 0x298]
	0x03C69DF8 BL 0x1C16CF4
	0x03C69DFC ADRP X0, 0x4F7000
	0x03C69E00 LDR X0, [X0 + 0x2A0]
	0x03C69E04 BL 0x1C16CF4
	0x03C69E08 ADRP X0, 0x48A000
	0x03C69E0C LDR X0, [X0 + 0x6C0]
	0x03C69E10 BL 0x1C16CF4
	0x03C69E14 MOVZ W8, 0x1
	0x03C69E18 STRB W8, [X24 + 0x5CD]
	0x03C69E1C ADRP X24, 0x77D000
	0x03C69E20 ADRP X28, 0x4F0000
	0x03C69E24 LDRB W8, [X24 + 0x510]
	0x03C69E28 LDR X28, [X28 + 0x20]
	0x03C69E2C TBNZ X8, 0x0, 0x3C69E44
	0x03C69E30 ADRP X0, 0x4F0000
	0x03C69E34 LDR X0, [X0 + 0x20]
	0x03C69E38 BL 0x1C16CF4
	0x03C69E3C MOVZ W8, 0x1
	0x03C69E40 STRB W8, [X24 + 0x510]
	0x03C69E44 LDR X8, [X28]
	0x03C69E48 LDR X8, [X8 + 0xB8]
	0x03C69E4C LDR X24, [X8]
	0x03C69E50 CBZ X24, 0x3C6A1F0

ISIL:
	001 Move [X31-96], D11
	002 Move [X31-88], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X22, 0x77E000
	014 Move X21, 0x4B7000
	015 Move W8, [X22+1478]
	016 Move X21, [X21+1480]
	017 Move X20, X1
	018 Move X19, X0
	019 Move V8, V3
	020 Move V9, V2
	021 Move V10, V1
	022 Move V11, V0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {35}
	027 Move X0, 0x4B7000
	028 Move X0, [X0+1480]
	029 Call 0x1C17CF4
	030 Move X0, 0x4B2000
	031 Move X0, [X0+1216]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X22+1478], W8
	035 Move X0, [X21]
	036 Move X21, 0x4B2000
	037 Move W8, [X0+224]
	038 Move X21, [X21+1216]
	039 Compare W8, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Call GUIUtility.CheckOnGUI
	043 Move X0, [X21]
	044 Move W8, [X0+224]
	045 Compare W8, 0
	046 JumpIfNotEqual {49}
	047 Call 0x1C17DFC
	048 Move X0, [X21]
	049 Move X8, [X0+184]
	050 Move W1, 2
	051 Move W0, [X8+4]
	052 Call GUIUtility.GetControlID, X0, X1
	053 Move X23, 0x77E000
	054 Move X24, 0x4F1000
	055 Move W8, [X23+1296]
	056 Move X24, [X24+32]
	057 Move W21, W0
	058 Move TEMP, X8
	059 And TEMP, TEMP, 1
	060 Compare TEMP, 1
	061 JumpIfEqual {67}
	062 Move X0, 0x4F1000
	063 Move X0, [X0+32]
	064 Call 0x1C17CF4
	065 Move W8, 1
	066 Move [X23+1296], W8
	067 Move X8, [X24]
	068 Move X8, [X8+184]
	069 Move X22, [X8]
	070 Compare X22, 0
	071 JumpIfEqual {145}
	072 Move X25, 0x77E000
	073 Move X8, [X25+1192]
	074 Compare X8, 0
	075 JumpIfNotEqual {81}
	076 Move X0, -51867648
	077 Add X0, X0, 1382
	078 Call 0x1C17CB8
	079 Move X8, X0
	080 Move [X25+1192], X0
	081 Move X0, X22
	082 NotImplemented "Instruction BLR not yet implemented."
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Move W8, [X23+1296]
	085 Move TEMP, X8
	086 And TEMP, TEMP, 1
	087 Compare TEMP, 1
	088 JumpIfEqual {94}
	089 Move X0, 0x4F1000
	090 Move X0, [X0+32]
	091 Call 0x1C17CF4
	092 Move W8, 1
	093 Move [X23+1296], W8
	094 Move X8, [X24]
	095 Move X8, [X8+184]
	096 Move X0, [X8]
	097 Compare X0, 0
	098 JumpIfEqual {145}
	099 Call Event.get_mousePosition, X0
	100 NotImplemented "Instruction FCMP not yet implemented."
	101 Move W4, W31
	102 NotImplemented "Instruction FCMP not yet implemented."
	103 Add S2, S11, S9
	104 NotImplemented "Instruction FCMP not yet implemented."
	105 Add S0, S10, S8
	106 NotImplemented "Instruction FCMP not yet implemented."
	107 NotImplemented "Instruction CSET not yet implemented."
	108 Compare X20, 0
	109 JumpIfEqual {145}
	110 Move X0, X20
	111 Move V2, V9
	112 Move V3, V8
	113 Move X1, X19
	114 Move W2, W21
	115 Move X20, [X31+80]
	116 Move X19, [X31+88]
	117 Move X22, [X31+64]
	118 Move X21, [X31+72]
	119 Move X24, [X31+48]
	120 Move X23, [X31+56]
	121 Move X30, [X31+32]
	122 Move X25, [X31+40]
	123 Move D9, [X31+16]
	124 Move D8, [X31+24]
	125 Move V0, V11
	126 Move V1, V10
	127 Move W3, W31
	128 Move D11, [X31+96]
	129 Move D10, [X31+104]
	130 Call GUIStyle.Draw, X0, X1, X2, X3, X4, X5
	131 Return 
	132 Move X20, [X31+80]
	133 Move X19, [X31+88]
	134 Move X22, [X31+64]
	135 Move X21, [X31+72]
	136 Move X24, [X31+48]
	137 Move X23, [X31+56]
	138 Move X30, [X31+32]
	139 Move X25, [X31+40]
	140 Move D9, [X31+16]
	141 Move D8, [X31+24]
	142 Move D11, [X31+96]
	143 Move D10, [X31+104]
	144 Return 
	145 Call 0x1C17F20

Method: System.Boolean Button(UnityEngine.Rect position, UnityEngine.GUIContent content, UnityEngine.GUIStyle style)

Disassembly:
	0x03C69FC0 LDUR X8, [X8 - 0x8]
	0x03C69FC4 CMP X8, X1
	0x03C69FC8 B.NE 0x3C6A1F4
	0x03C69FCC STR X31, [X0 + 0x10]
	0x03C69FD0 LDR X0, [X28]
	0x03C69FD4 LDR W8, [X0 + 0xE0]
	0x03C69FD8 CBNZ W8, 0x3C69FE4
	0x03C69FDC BL 0x1C16DFC
	0x03C69FE0 LDR X0, [X28]
	0x03C69FE4 LDR X8, [X0 + 0xB8]
	0x03C69FE8 STR W20, [X8]
	0x03C69FEC LDR X0, [X27]
	0x03C69FF0 LDR W8, [X0 + 0xE0]
	0x03C69FF4 CBNZ W8, 0x3C69FFC
	0x03C69FF8 BL 0x1C16DFC
	0x03C69FFC BL 0x3C6AA80
	0x03C6A000 CMP W0, W20
	0x03C6A004 B.EQ 0x3C6A020
	0x03C6A008 LDR X0, [X27]
	0x03C6A00C LDR W8, [X0 + 0xE0]
	0x03C6A010 CBNZ W8, 0x3C6A018
	0x03C6A014 BL 0x1C16DFC
	0x03C6A018 MOV W0, W20
	0x03C6A01C BL 0x3C6AAE8
	0x03C6A020 MOV X0, X21
	0x03C6A024 CBNZ X21, 0x3C6A030
	0x03C6A028 CBZ X19, 0x3C6A1F0
	0x03C6A02C LDR X0, [X19 + 0x10]
	0x03C6A030 CMP X21, 0x0
	0x03C6A034 CSET W4, NE
	0x03C6A038 AND W3, W23, 0x1
	0x03C6A03C MOVZ W2, 0x1
	0x03C6A040 MOV W1, W31
	0x03C6A044 MOV X5, X31
	0x03C6A048 BL 0x3C3CE90
	0x03C6A04C CBZ X22, 0x3C6A1F0
	0x03C6A050 STR X0, [X22 + 0x10]
	0x03C6A054 MOV X0, X24
	0x03C6A058 LDP X20, X19, [X31 + 0x70]
	0x03C6A05C LDP X22, X21, [X31 + 0x60]
	0x03C6A060 LDP X24, X23, [X31 + 0x50]
	0x03C6A064 LDP X26, X25, [X31 + 0x40]
	0x03C6A068 LDP X28, X27, [X31 + 0x30]
	0x03C6A06C LDR X30, [X31 + 0x20]
	0x03C6A070 LDP D9, D8, [X31 + 0x10]
	0x03C6A074 LDP D11, D10, [X31], #0x80
	0x03C6A078 B 0x3C66240
	0x03C6A07C LDP X20, X19, [X31 + 0x70]
	0x03C6A080 LDP X22, X21, [X31 + 0x60]
	0x03C6A084 LDP X24, X23, [X31 + 0x50]
	0x03C6A088 LDP X26, X25, [X31 + 0x40]
	0x03C6A08C LDP X28, X27, [X31 + 0x30]
	0x03C6A090 LDR X30, [X31 + 0x20]
	0x03C6A094 LDP D9, D8, [X31 + 0x10]
	0x03C6A098 LDP D11, D10, [X31], #0x80
	0x03C6A09C RET
	0x03C6A0A0 CBZ X22, 0x3C6A1F0

ISIL:
	001 Move [X31-80], D11
	002 Move [X31-72], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X22, 0x77E000
	011 Move X21, 0x4B2000
	012 Move W8, [X22+1479]
	013 Move X21, [X21+1216]
	014 Move X19, X1
	015 Move X20, X0
	016 Move V8, V3
	017 Move V9, V2
	018 Move V10, V1
	019 Move V11, V0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {32}
	024 Move X0, 0x4B6000
	025 Move X0, [X0+1480]
	026 Call 0x1C17CF4
	027 Move X0, 0x4B1000
	028 Move X0, [X0+1216]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X22+1479], W8
	032 Move X0, [X21]
	033 Move X22, 0x4B6000
	034 Move W8, [X0+224]
	035 Move X22, [X22+1480]
	036 Compare W8, 0
	037 JumpIfNotEqual {40}
	038 Call 0x1C17DFC
	039 Move X0, [X21]
	040 Move X8, [X22]
	041 Move X9, [X0+184]
	042 Move W10, [X8+224]
	043 Move W21, [X9+8]
	044 Compare W10, 0
	045 JumpIfNotEqual {48}
	046 Move X0, X8
	047 Call 0x1C17DFC
	048 Move W1, 2
	049 Move W0, W21
	050 Move V0, V11
	051 Move V1, V10
	052 Move V2, V9
	053 Move V3, V8
	054 Call GUIUtility.GetControlID, X0, X1, X2
	055 Move V2, V9
	056 Move V3, V8
	057 Move X1, X20
	058 Move X2, X19
	059 Move X20, [X31+64]
	060 Move X19, [X31+72]
	061 Move X22, [X31+48]
	062 Move X21, [X31+56]
	063 Move X30, [X31+32]
	064 Move D9, [X31+16]
	065 Move D8, [X31+24]
	066 Move V0, V11
	067 Move V1, V10
	068 Move D11, [X31+80]
	069 Move D10, [X31+88]
	070 Call GUI.Button, X0, X1, X2, X3
	071 Return X0

Method: System.Boolean Button(UnityEngine.Rect position, System.Int32 id, UnityEngine.GUIContent content, UnityEngine.GUIStyle style)

Disassembly:
	0x03C6A14C BLR X8
	0x03C6A150 B 0x3C6A158
	0x03C6A154 CBZ X19, 0x3C6A1F0
	0x03C6A158 LDR X22, [X19 + 0x10]
	0x03C6A15C CBZ X21, 0x3C6A190
	0x03C6A160 ADRP X8, 0x4B0000
	0x03C6A164 LDR X8, [X8 + 0x4C0]
	0x03C6A168 LDR X0, [X8]
	0x03C6A16C LDR W8, [X0 + 0xE0]
	0x03C6A170 CBNZ W8, 0x3C6A178
	0x03C6A174 BL 0x1C16DFC
	0x03C6A178 MOV X0, X22
	0x03C6A17C MOV W1, W26
	0x03C6A180 BL 0x3C69320
	0x03C6A184 MOV X1, X0
	0x03C6A188 MOV X0, X19
	0x03C6A18C BL 0x3C69948
	0x03C6A190 CBZ X25, 0x3C6A1F0
	0x03C6A194 MOV X0, X25
	0x03C6A198 MOV V0.16B, V9.16B
	0x03C6A19C MOV V1.16B, V10.16B
	0x03C6A1A0 MOV V2.16B, V8.16B
	0x03C6A1A4 MOV V3.16B, V11.16B
	0x03C6A1A8 MOV X1, X19
	0x03C6A1AC MOV W2, W20
	0x03C6A1B0 MOV W3, W31
	0x03C6A1B4 MOV W4, W31
	0x03C6A1B8 MOV W5, W31
	0x03C6A1BC MOV W6, W31
	0x03C6A1C0 BL 0x3C7493C
	0x03C6A1C4 MOV X0, X19
	0x03C6A1C8 MOV X1, X22
	0x03C6A1CC LDP X20, X19, [X31 + 0x70]
	0x03C6A1D0 LDP X22, X21, [X31 + 0x60]
	0x03C6A1D4 LDP X24, X23, [X31 + 0x50]
	0x03C6A1D8 LDP X26, X25, [X31 + 0x40]
	0x03C6A1DC LDP X28, X27, [X31 + 0x30]
	0x03C6A1E0 LDR X30, [X31 + 0x20]
	0x03C6A1E4 LDP D9, D8, [X31 + 0x10]
	0x03C6A1E8 LDP D11, D10, [X31], #0x80
	0x03C6A1EC B 0x3C69948
	0x03C6A1F0 BL 0x1C16F20
	0x03C6A1F4 BL 0x1C171E0
	0x03C6A1F8 STP D11, D10, [X31 - 0x80]!
	0x03C6A1FC STP D9, D8, [X31 + 0x10]
	0x03C6A200 STP X29, X30, [X31 + 0x20]
	0x03C6A204 STP X28, X27, [X31 + 0x30]
	0x03C6A208 STP X26, X25, [X31 + 0x40]
	0x03C6A20C STP X24, X23, [X31 + 0x50]

ISIL:
	001 Move [X31-80], D11
	002 Move [X31-72], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X23, 0x77D000
	012 Move X22, 0x4B6000
	013 Move W8, [X23+1480]
	014 Move X22, [X22+1480]
	015 Move X19, X2
	016 Move X20, X1
	017 Move W21, W0
	018 Move V8, V3
	019 Move V9, V2
	020 Move V10, V1
	021 Move V11, V0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {34}
	026 Move X0, 0x4B6000
	027 Move X0, [X0+1480]
	028 Call 0x1C17CF4
	029 Move X0, 0x4B1000
	030 Move X0, [X0+1216]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X23+1480], W8
	034 Move X0, [X22]
	035 Move X22, 0x4B1000
	036 Move W8, [X0+224]
	037 Move X22, [X22+1216]
	038 Compare W8, 0
	039 JumpIfNotEqual {41}
	040 Call 0x1C17DFC
	041 Call GUIUtility.CheckOnGUI
	042 Move X0, [X22]
	043 Move W8, [X0+224]
	044 Compare W8, 0
	045 JumpIfNotEqual {47}
	046 Call 0x1C17DFC
	047 Move V2, V9
	048 Move V3, V8
	049 Move W0, W21
	050 Move X1, X20
	051 Move X2, X19
	052 Move X20, [X31+64]
	053 Move X19, [X31+72]
	054 Move X22, [X31+48]
	055 Move X21, [X31+56]
	056 Move X30, [X31+32]
	057 Move X23, [X31+40]
	058 Move D9, [X31+16]
	059 Move D8, [X31+24]
	060 Move V0, V11
	061 Move V1, V10
	062 Move D11, [X31+80]
	063 Move D10, [X31+88]

Method: System.String PasswordFieldGetStrToShow(System.String password, System.Char maskChar)

Disassembly:
	0x03C6A320 FCMP S1, S2
	0x03C6A324 MOV W29, W31
	0x03C6A328 B.PL 0x3C6A6D8
	0x03C6A32C FCMP S1, S10
	0x03C6A330 B.LT 0x3C6A6D8
	0x03C6A334 FCMP S0, S9
	0x03C6A338 B.LT 0x3C6A6D8
	0x03C6A33C FADD S1, S9, S8
	0x03C6A340 FCMP S0, S1
	0x03C6A344 B.PL 0x3C6A6D8
	0x03C6A348 LDR X0, [X27]
	0x03C6A34C LDR W8, [X0 + 0xE0]
	0x03C6A350 CBNZ W8, 0x3C6A358
	0x03C6A354 BL 0x1C16DFC
	0x03C6A358 MOV W0, W23
	0x03C6A35C BL 0x3C6AA0C
	0x03C6A360 MOV W0, W23
	0x03C6A364 BL 0x3C6AAE8
	0x03C6A368 CBZ X21, 0x3C6AA08
	0x03C6A36C MOVZ W24, 0x1
	0x03C6A370 STRB W24, [X21 + 0x2B]
	0x03C6A374 LDRB W8, [X28 + 0x510]
	0x03C6A378 TBNZ X8, 0x0, 0x3C6A38C
	0x03C6A37C ADRP X0, 0x4EF000
	0x03C6A380 LDR X0, [X0 + 0x20]
	0x03C6A384 BL 0x1C16CF4
	0x03C6A388 STRB W24, [X28 + 0x510]
	0x03C6A38C LDR X8, [X26]
	0x03C6A390 LDR X8, [X8 + 0xB8]
	0x03C6A394 LDR X0, [X8]
	0x03C6A398 CBZ X0, 0x3C6AA08
	0x03C6A39C BL 0x3C62C40
	0x03C6A3A0 MOV X0, X21
	0x03C6A3A4 MOV X1, X31
	0x03C6A3A8 BL 0x3C80B74
	0x03C6A3AC LDRB W8, [X28 + 0x510]
	0x03C6A3B0 TBNZ X8, 0x0, 0x3C6A3C8
	0x03C6A3B4 ADRP X0, 0x4EF000
	0x03C6A3B8 LDR X0, [X0 + 0x20]
	0x03C6A3BC BL 0x1C16CF4
	0x03C6A3C0 MOVZ W8, 0x1
	0x03C6A3C4 STRB W8, [X28 + 0x510]
	0x03C6A3C8 LDR X8, [X26]
	0x03C6A3CC LDR X8, [X8 + 0xB8]
	0x03C6A3D0 LDR X24, [X8]
	0x03C6A3D4 CBZ X24, 0x3C6AA08
	0x03C6A3D8 ADRP X25, 0x77C000
	0x03C6A3DC LDR X8, [X25 + 0x470]
	0x03C6A3E0 CBNZ X8, 0x3C6A3F8
	0x03C6A3E4 ADRP X0, 0xFFFFFFFFFCE9B000
	0x03C6A3E8 ADD X0, X0, 0x5B6
	0x03C6A3EC BL 0x1C16CB8
	0x03C6A3F0 MOV X8, X0
	0x03C6A3F4 STR X0, [X25 + 0x470]
	0x03C6A3F8 MOV X0, X24
	0x03C6A3FC BLR X8
	0x03C6A400 CMP W0, 0x2
	0x03C6A404 B.NE 0x3C6A464
	0x03C6A408 ADRP X8, 0x4B0000
	0x03C6A40C LDR X8, [X8 + 0x4C0]
	0x03C6A410 LDR X0, [X8]
	0x03C6A414 LDR W8, [X0 + 0xE0]
	0x03C6A418 CBNZ W8, 0x3C6A420
	0x03C6A41C BL 0x1C16DFC
	0x03C6A420 BL 0x3C6748C
	0x03C6A424 CBZ X0, 0x3C6AA08
	0x03C6A428 LDR X8, [X0 + 0xE0]
	0x03C6A42C CBZ X8, 0x3C6AA08
	0x03C6A430 LDRB W8, [X8 + 0x10]
	0x03C6A434 CBZ W8, 0x3C6A464
	0x03C6A438 MOV X0, X21
	0x03C6A43C MOV X1, X31
	0x03C6A440 BL 0x3C8190C
	0x03C6A444 MOV X0, X21
	0x03C6A448 MOV W1, W31
	0x03C6A44C MOV X2, X31
	0x03C6A450 BL 0x3C811E8
	0x03C6A454 MOVZ W1, 0x1
	0x03C6A458 MOV X0, X21
	0x03C6A45C MOV X2, X31
	0x03C6A460 BL 0x3C811D4

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x77D000
	009 Move W8, [X21+1481]
	010 Move W19, W1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x48A000
	017 Move X0, [X0+2440]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1481], W8
	021 Move X22, 0x77D000
	022 Move X24, 0x4F0000
	023 Move W8, [X22+1296]
	024 Move X24, [X24+32]
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {34}
	029 Move X0, 0x4F0000
	030 Move X0, [X0+32]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X22+1296], W8
	034 Move X8, [X24]
	035 Move X8, [X8+184]
	036 Move X21, [X8]
	037 Compare X21, 0
	038 JumpIfEqual {106}
	039 Move X23, 0x77D000
	040 Move X8, [X23+1192]
	041 Compare X8, 0
	042 JumpIfNotEqual {48}
	043 Move X0, -51871744
	044 Add X0, X0, 1382
	045 Call 0x1C17CB8
	046 Move X8, X0
	047 Move [X23+1192], X0
	048 Move X0, X21
	049 NotImplemented "Instruction BLR not yet implemented."
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move W8, [X22+1296]
	052 Move TEMP, X8
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfEqual {61}
	056 Move X0, 0x4F0000
	057 Move X0, [X0+32]
	058 Call 0x1C17CF4
	059 Move W8, 1
	060 Move [X22+1296], W8
	061 Move X8, [X24]
	062 Move X8, [X8+184]
	063 Move X21, [X8]
	064 Compare X21, 0
	065 JumpIfEqual {106}
	066 Move X8, [X23+1192]
	067 Compare X8, 0
	068 JumpIfNotEqual {74}
	069 Move X0, -51871744
	070 Add X0, X0, 1382
	071 Call 0x1C17CB8
	072 Move X8, X0
	073 Move [X23+1192], X0
	074 Move X0, X21
	075 NotImplemented "Instruction BLR not yet implemented."
	076 Compare W0, 0
	077 JumpIfEqual {87}
	078 Move X0, X20
	079 Move X20, [X31+48]
	080 Move X19, [X31+56]
	081 Move X22, [X31+32]
	082 Move X21, [X31+40]
	083 Move X24, [X31+16]
	084 Move X23, [X31+24]
	085 Move X30, [X31+64]
	086 Return X0
	087 Compare X20, 0
	088 JumpIfEqual {106}
	089 Move X8, 0x48A000
	090 Move X8, [X8+2440]
	091 Move X0, [X8]
	092 Compare X0, 0
	093 JumpIfEqual {106}
	094 Move W1, [X20+16]
	095 Move W2, W19
	096 Move X20, [X31+48]
	097 Move X19, [X31+56]
	098 Move X22, [X31+32]
	099 Move X21, [X31+40]
	100 Move X24, [X31+16]
	101 Move X23, [X31+24]
	102 Move X3, X31
	103 Move X30, [X31+64]
	104 Call String.PadRight, X0, X1, X2
	105 Return X0
	106 Call 0x1C17F20

Method: System.Void DoTextField(UnityEngine.Rect position, System.Int32 id, UnityEngine.GUIContent content, System.Boolean multiline, System.Int32 maxLength, UnityEngine.GUIStyle style)

Disassembly:
	0x03C6A464 LDRB W8, [X28 + 0x510]
	0x03C6A468 TBNZ X8, 0x0, 0x3C6A480
	0x03C6A46C ADRP X0, 0x4EF000
	0x03C6A470 LDR X0, [X0 + 0x20]
	0x03C6A474 BL 0x1C16CF4
	0x03C6A478 MOVZ W8, 0x1
	0x03C6A47C STRB W8, [X28 + 0x510]
	0x03C6A480 LDR X8, [X26]
	0x03C6A484 LDR X8, [X8 + 0xB8]
	0x03C6A488 LDR X24, [X8]
	0x03C6A48C CBZ X24, 0x3C6AA08
	0x03C6A490 LDR X8, [X25 + 0x470]
	0x03C6A494 CBNZ X8, 0x3C6A4AC
	0x03C6A498 ADRP X0, 0xFFFFFFFFFCE9B000
	0x03C6A49C ADD X0, X0, 0x5B6
	0x03C6A4A0 BL 0x1C16CB8
	0x03C6A4A4 MOV X8, X0
	0x03C6A4A8 STR X0, [X25 + 0x470]
	0x03C6A4AC MOV X0, X24
	0x03C6A4B0 BLR X8
	0x03C6A4B4 CMP W0, 0x3
	0x03C6A4B8 B.NE 0x3C6A6CC
	0x03C6A4BC ADRP X8, 0x4B0000
	0x03C6A4C0 LDR X8, [X8 + 0x4C0]
	0x03C6A4C4 LDR X0, [X8]
	0x03C6A4C8 LDR W8, [X0 + 0xE0]
	0x03C6A4CC CBNZ W8, 0x3C6A4D4
	0x03C6A4D0 BL 0x1C16DFC
	0x03C6A4D4 BL 0x3C6748C
	0x03C6A4D8 CBZ X0, 0x3C6AA08
	0x03C6A4DC LDR X8, [X0 + 0xE0]
	0x03C6A4E0 CBZ X8, 0x3C6AA08
	0x03C6A4E4 LDRB W8, [X8 + 0x11]
	0x03C6A4E8 CBZ W8, 0x3C6A6CC
	0x03C6A4EC MOV X0, X21
	0x03C6A4F0 MOV X1, X31
	0x03C6A4F4 BL 0x3C81978
	0x03C6A4F8 MOVZ W1, 0x1
	0x03C6A4FC MOV X0, X21
	0x03C6A500 MOV X2, X31
	0x03C6A504 BL 0x3C811D4
	0x03C6A508 MOVZ W1, 0x1
	0x03C6A50C MOV X0, X21
	0x03C6A510 MOV X2, X31
	0x03C6A514 BL 0x3C811E8
	0x03C6A518 B 0x3C6A6CC

ISIL:
	001 Move [X31-96], D11
	002 Move [X31-88], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X25, 0x77D000
	014 Move X24, 0x4B1000
	015 Move W8, [X25+1482]
	016 Move X24, [X24+1216]
	017 Move X19, X4
	018 Move W20, W3
	019 Move W23, W2
	020 Move X21, X1
	021 Move W22, W0
	022 Move V8, V3
	023 Move V9, V2
	024 Move V10, V1
	025 Move V11, V0
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {35}
	030 Move X0, 0x4B1000
	031 Move X0, [X0+1216]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X25+1482], W8
	035 Move X0, [X24]
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {40}
	039 Call 0x1C17DFC
	040 And W2, W23, 1
	041 Move V2, V9
	042 Move V3, V8
	043 Move W0, W22
	044 Move X1, X21
	045 Move W3, W20
	046 Move X4, X19
	047 Move X20, [X31+80]
	048 Move X19, [X31+88]
	049 Move X22, [X31+64]
	050 Move X21, [X31+72]
	051 Move X24, [X31+48]
	052 Move X23, [X31+56]
	053 Move X30, [X31+32]
	054 Move X25, [X31+40]
	055 Move D9, [X31+16]
	056 Move D8, [X31+24]
	057 Move V0, V11
	058 Move V1, V10
	059 Move X5, X31
	060 Move D11, [X31+96]
	061 Move D10, [X31+104]

Method: System.Void DoTextField(UnityEngine.Rect position, System.Int32 id, UnityEngine.GUIContent content, System.Boolean multiline, System.Int32 maxLength, UnityEngine.GUIStyle style, System.String secureText)

Disassembly:
	0x03C6A51C LDR X0, [X27]
	0x03C6A520 LDR W8, [X0 + 0xE0]
	0x03C6A524 CBNZ W8, 0x3C6A52C
	0x03C6A528 BL 0x1C16DFC
	0x03C6A52C BL 0x3C6AB88
	0x03C6A530 CMP W0, W23
	0x03C6A534 B.NE 0x3C6A6D4
	0x03C6A538 CBZ X21, 0x3C6AA08
	0x03C6A53C MOV X0, X21
	0x03C6A540 MOV W1, W31
	0x03C6A544 MOV X2, X31
	0x03C6A548 BL 0x3C811D4
	0x03C6A54C LDR X0, [X27]
	0x03C6A550 LDR W8, [X0 + 0xE0]
	0x03C6A554 CBNZ W8, 0x3C6A55C
	0x03C6A558 BL 0x1C16DFC
	0x03C6A55C MOV W0, W31
	0x03C6A560 BL 0x3C6AA0C
	0x03C6A564 B 0x3C6A6CC
	0x03C6A568 LDR X0, [X27]
	0x03C6A56C LDR W8, [X0 + 0xE0]
	0x03C6A570 CBNZ W8, 0x3C6A578
	0x03C6A574 BL 0x1C16DFC
	0x03C6A578 BL 0x3C6AB88
	0x03C6A57C CMP W0, W23
	0x03C6A580 B.NE 0x3C6A6D4
	0x03C6A584 ADRP X24, 0x77C000
	0x03C6A588 LDR X8, [X24 + 0x448]
	0x03C6A58C CBNZ X8, 0x3C6A5A4
	0x03C6A590 ADRP X0, 0xFFFFFFFFFCE97000
	0x03C6A594 ADD X0, X0, 0x530
	0x03C6A598 BL 0x1C16CB8
	0x03C6A59C MOV X8, X0
	0x03C6A5A0 STR X0, [X24 + 0x448]
	0x03C6A5A4 MOV X0, X22
	0x03C6A5A8 BLR X8
	0x03C6A5AC LDRB W8, [X28 + 0x510]
	0x03C6A5B0 MOV W24, W0
	0x03C6A5B4 TBNZ X8, 0x0, 0x3C6A5CC
	0x03C6A5B8 ADRP X0, 0x4EF000
	0x03C6A5BC LDR X0, [X0 + 0x20]
	0x03C6A5C0 BL 0x1C16CF4
	0x03C6A5C4 MOVZ W8, 0x1
	0x03C6A5C8 STRB W8, [X28 + 0x510]
	0x03C6A5CC LDR X8, [X26]
	0x03C6A5D0 LDR X8, [X8 + 0xB8]
	0x03C6A5D4 LDR X0, [X8]
	0x03C6A5D8 CBZ X0, 0x3C6AA08
	0x03C6A5DC BL 0x3C62C40
	0x03C6A5E0 CBZ X21, 0x3C6AA08

ISIL:
	001 Move [X31-112], D11
	002 Move [X31-104], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X26, 0x77D000
	015 Move X25, 0x4B1000
	016 Move W8, [X26+1483]
	017 Move X25, [X25+1216]
	018 Move X19, X5
	019 Move X20, X4
	020 Move W21, W3
	021 Move W24, W2
	022 Move X22, X1
	023 Move W23, W0
	024 Move V8, V3
	025 Move V9, V2
	026 Move V10, V1
	027 Move V11, V0
	028 Move TEMP, X8
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {37}
	032 Move X0, 0x4B1000
	033 Move X0, [X0+1216]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X26+1483], W8
	037 Move X0, [X25]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 And W2, W24, 1
	043 Move V2, V9
	044 Move V3, V8
	045 Move W0, W23
	046 Move X1, X22
	047 Move W3, W21
	048 Move X4, X20
	049 Move X5, X19
	050 Move X20, [X31+96]
	051 Move X19, [X31+104]
	052 Move X22, [X31+80]
	053 Move X21, [X31+88]
	054 Move X24, [X31+64]
	055 Move X23, [X31+72]
	056 Move X26, [X31+48]
	057 Move X25, [X31+56]
	058 Move X30, [X31+32]
	059 Move D9, [X31+16]
	060 Move D8, [X31+24]
	061 Move V0, V11
	062 Move V1, V10
	063 Move W6, W31
	064 Move D11, [X31+112]
	065 Move D10, [X31+120]

Method: System.Void DoTextField(UnityEngine.Rect position, System.Int32 id, UnityEngine.GUIContent content, System.Boolean multiline, System.Int32 maxLength, UnityEngine.GUIStyle style, System.String secureText, System.Char maskChar)

Disassembly:
	0x03C6A5E4 MOV X0, X21
	0x03C6A5E8 MOV X1, X31
	0x03C6A5EC TBNZ X24, 0x0, 0x3C6A6C8
	0x03C6A5F0 BL 0x3C80C44
	0x03C6A5F4 B 0x3C6A6CC
	0x03C6A5F8 LDR X0, [X27]
	0x03C6A5FC LDR W8, [X0 + 0xE0]
	0x03C6A600 CBNZ W8, 0x3C6A608
	0x03C6A604 BL 0x1C16DFC
	0x03C6A608 BL 0x3C6AA80
	0x03C6A60C CMP W0, W23
	0x03C6A610 B.NE 0x3C6A850
	0x03C6A614 CBZ X21, 0x3C6AA08
	0x03C6A618 MOV X0, X21
	0x03C6A61C MOV X1, X22
	0x03C6A620 MOV X2, X31
	0x03C6A624 BL 0x3C7EA14
	0x03C6A628 TBZ X0, 0x0, 0x3C6A7EC
	0x03C6A62C MOV X0, X22
	0x03C6A630 BL 0x3C66240
	0x03C6A634 MOV X0, X21
	0x03C6A638 MOV X1, X31
	0x03C6A63C BL 0x3C7E29C
	0x03C6A640 CBZ X19, 0x3C6AA08
	0x03C6A644 MOV X1, X0
	0x03C6A648 MOV X0, X19
	0x03C6A64C BL 0x3C69948
	0x03C6A650 MOVZ W29, 0x1
	0x03C6A654 B 0x3C6A6D8
	0x03C6A658 LDR X0, [X27]
	0x03C6A65C LDR W8, [X0 + 0xE0]
	0x03C6A660 CBNZ W8, 0x3C6A668
	0x03C6A664 BL 0x1C16DFC
	0x03C6A668 BL 0x3C6AA80
	0x03C6A66C CMP W0, W23
	0x03C6A670 B.NE 0x3C6A690
	0x03C6A674 CBZ X19, 0x3C6AA08
	0x03C6A678 CBZ X21, 0x3C6AA08
	0x03C6A67C LDR X1, [X19 + 0x10]
	0x03C6A680 MOV X0, X21
	0x03C6A684 MOV X2, X31
	0x03C6A688 BL 0x3C81A6C
	0x03C6A68C B 0x3C6A6D4
	0x03C6A690 CBZ X24, 0x3C6AA08
	0x03C6A694 MOV X0, X24
	0x03C6A698 MOV V0.16B, V9.16B
	0x03C6A69C MOV V1.16B, V10.16B
	0x03C6A6A0 MOV V2.16B, V8.16B
	0x03C6A6A4 MOV V3.16B, V11.16B
	0x03C6A6A8 MOV X1, X19
	0x03C6A6AC MOV W2, W23
	0x03C6A6B0 MOV W3, W31
	0x03C6A6B4 MOV W4, W31
	0x03C6A6B8 MOV W5, W31
	0x03C6A6BC MOV W6, W31
	0x03C6A6C0 BL 0x3C7493C
	0x03C6A6C4 B 0x3C6A6D4
	0x03C6A6C8 BL 0x3C80B74
	0x03C6A6CC MOV X0, X22
	0x03C6A6D0 BL 0x3C66240
	0x03C6A6D4 MOV W29, W31
	0x03C6A6D8 LDR X0, [X27]
	0x03C6A6DC LDR W8, [X0 + 0xE0]
	0x03C6A6E0 CBNZ W8, 0x3C6A6E8
	0x03C6A6E4 BL 0x1C16DFC
	0x03C6A6E8 BL 0x3C6AA80
	0x03C6A6EC CMP W0, W23
	0x03C6A6F0 B.NE 0x3C6A72C
	0x03C6A6F4 LDR X0, [X27]
	0x03C6A6F8 LDR W8, [X0 + 0xE0]
	0x03C6A6FC CBNZ W8, 0x3C6A704
	0x03C6A700 BL 0x1C16DFC
	0x03C6A704 ADRP X23, 0x77C000
	0x03C6A708 LDR X8, [X23 + 0x888]
	0x03C6A70C CBNZ X8, 0x3C6A724
	0x03C6A710 ADRP X0, 0xFFFFFFFFFCEBB000
	0x03C6A714 ADD X0, X0, 0x534
	0x03C6A718 BL 0x1C16CB8
	0x03C6A71C MOV X8, X0
	0x03C6A720 STR X0, [X23 + 0x888]
	0x03C6A724 MOVZ W0, 0x1
	0x03C6A728 BLR X8
	0x03C6A72C CBZ W29, 0x3C6A850
	0x03C6A730 ADRP X8, 0x4B0000
	0x03C6A734 LDR X8, [X8 + 0x4C0]
	0x03C6A738 LDR X0, [X8]
	0x03C6A73C LDR W8, [X0 + 0xE0]
	0x03C6A740 CBNZ W8, 0x3C6A748
	0x03C6A744 BL 0x1C16DFC
	0x03C6A748 ADRP X23, 0x77C000
	0x03C6A74C LDR X8, [X23 + 0x550]
	0x03C6A750 CBNZ X8, 0x3C6A768
	0x03C6A754 ADRP X0, 0xFFFFFFFFFCE8B000
	0x03C6A758 ADD X0, X0, 0x71D
	0x03C6A75C BL 0x1C16CB8
	0x03C6A760 MOV X8, X0
	0x03C6A764 STR X0, [X23 + 0x550]
	0x03C6A768 MOVZ W0, 0x1
	0x03C6A76C BLR X8
	0x03C6A770 CBZ X21, 0x3C6AA08
	0x03C6A774 MOV X0, X21
	0x03C6A778 MOV X1, X31
	0x03C6A77C BL 0x3C7E29C
	0x03C6A780 CBZ X19, 0x3C6AA08
	0x03C6A784 MOV X1, X0
	0x03C6A788 MOV X0, X19
	0x03C6A78C BL 0x3C69948
	0x03C6A790 TBNZ X20, 0x1F, 0x3C6A7C4
	0x03C6A794 LDR X0, [X19 + 0x10]
	0x03C6A798 CBZ X0, 0x3C6AA08
	0x03C6A79C LDR W8, [X0 + 0x10]
	0x03C6A7A0 CMP W8, W20
	0x03C6A7A4 B.LE 0x3C6A7C4
	0x03C6A7A8 MOV W1, W31
	0x03C6A7AC MOV W2, W20
	0x03C6A7B0 MOV X3, X31
	0x03C6A7B4 BL 0x3228DE4
	0x03C6A7B8 MOV X1, X0
	0x03C6A7BC MOV X0, X19
	0x03C6A7C0 BL 0x3C69948
	0x03C6A7C4 MOV X0, X22
	0x03C6A7C8 LDP X20, X19, [X31 + 0x70]
	0x03C6A7CC LDP X22, X21, [X31 + 0x60]
	0x03C6A7D0 LDP X24, X23, [X31 + 0x50]
	0x03C6A7D4 LDP X26, X25, [X31 + 0x40]
	0x03C6A7D8 LDP X28, X27, [X31 + 0x30]
	0x03C6A7DC LDP X29, X30, [X31 + 0x20]
	0x03C6A7E0 LDP D9, D8, [X31 + 0x10]
	0x03C6A7E4 LDP D11, D10, [X31], #0x80
	0x03C6A7E8 B 0x3C66240
	0x03C6A7EC ADRP X26, 0x77C000
	0x03C6A7F0 LDR X8, [X26 + 0x488]
	0x03C6A7F4 CBNZ X8, 0x3C6A80C
	0x03C6A7F8 ADRP X0, 0xFFFFFFFFFCEB3000
	0x03C6A7FC ADD X0, X0, 0x5AB
	0x03C6A800 BL 0x1C16CB8
	0x03C6A804 MOV X8, X0
	0x03C6A808 STR X0, [X26 + 0x488]
	0x03C6A80C MOV X0, X22
	0x03C6A810 BLR X8
	0x03C6A814 CMP W0, 0x9
	0x03C6A818 B.EQ 0x3C6A850
	0x03C6A81C ADRP X26, 0x77C000
	0x03C6A820 LDR X8, [X26 + 0x478]
	0x03C6A824 CBNZ X8, 0x3C6A83C
	0x03C6A828 ADRP X0, 0xFFFFFFFFFCE8F000
	0x03C6A82C ADD X0, X0, 0x9C8
	0x03C6A830 BL 0x1C16CB8
	0x03C6A834 MOV X8, X0
	0x03C6A838 STR X0, [X26 + 0x478]
	0x03C6A83C MOV X0, X22
	0x03C6A840 BLR X8
	0x03C6A844 AND W8, W0, 0xFFFF
	0x03C6A848 CMP W8, 0x9
	0x03C6A84C B.NE 0x3C6A874
	0x03C6A850 LDP X20, X19, [X31 + 0x70]
	0x03C6A854 LDP X22, X21, [X31 + 0x60]
	0x03C6A858 LDP X24, X23, [X31 + 0x50]
	0x03C6A85C LDP X26, X25, [X31 + 0x40]
	0x03C6A860 LDP X28, X27, [X31 + 0x30]
	0x03C6A864 LDP X29, X30, [X31 + 0x20]
	0x03C6A868 LDP D9, D8, [X31 + 0x10]
	0x03C6A86C LDP D11, D10, [X31], #0x80
	0x03C6A870 RET
	0x03C6A874 LDR X8, [X26 + 0x478]
	0x03C6A878 CBNZ X8, 0x3C6A890
	0x03C6A87C ADRP X0, 0xFFFFFFFFFCE8F000
	0x03C6A880 ADD X0, X0, 0x9C8
	0x03C6A884 BL 0x1C16CB8
	0x03C6A888 MOV X8, X0
	0x03C6A88C STR X0, [X26 + 0x478]
	0x03C6A890 MOV X0, X22
	0x03C6A894 BLR X8
	0x03C6A898 AND W8, W0, 0xFFFF
	0x03C6A89C MOV W26, W0
	0x03C6A8A0 CMP W8, 0xA
	0x03C6A8A4 B.NE 0x3C6A8D8
	0x03C6A8A8 TBNZ X25, 0x0, 0x3C6A8D8
	0x03C6A8AC ADRP X25, 0x77C000
	0x03C6A8B0 LDR X8, [X25 + 0x448]
	0x03C6A8B4 CBNZ X8, 0x3C6A8CC
	0x03C6A8B8 ADRP X0, 0xFFFFFFFFFCE97000
	0x03C6A8BC ADD X0, X0, 0x530
	0x03C6A8C0 BL 0x1C16CB8
	0x03C6A8C4 MOV X8, X0
	0x03C6A8C8 STR X0, [X25 + 0x448]
	0x03C6A8CC MOV X0, X22
	0x03C6A8D0 BLR X8
	0x03C6A8D4 TBZ X0, 0x2, 0x3C6A850
	0x03C6A8D8 CBZ X24, 0x3C6AA08
	0x03C6A8DC ADRP X25, 0x77C000
	0x03C6A8E0 LDR X8, [X25 + 0x728]
	0x03C6A8E4 CBNZ X8, 0x3C6A8FC
	0x03C6A8E8 ADRP X0, 0xFFFFFFFFFCE9D000
	0x03C6A8EC ADD X0, X0, 0x946
	0x03C6A8F0 BL 0x1C16CB8
	0x03C6A8F4 MOV X8, X0
	0x03C6A8F8 STR X0, [X25 + 0x728]
	0x03C6A8FC MOV X0, X24
	0x03C6A900 BLR X8
	0x03C6A904 ADRP X8, 0x489000
	0x03C6A908 LDR X8, [X8 + 0x598]
	0x03C6A90C MOV X24, X0
	0x03C6A910 LDR X8, [X8]
	0x03C6A914 LDR W9, [X8 + 0xE0]
	0x03C6A918 CBNZ W9, 0x3C6A924
	0x03C6A91C MOV X0, X8
	0x03C6A920 BL 0x1C16DFC
	0x03C6A924 MOV X0, X24
	0x03C6A928 MOV X1, X31
	0x03C6A92C BL 0x3C38948
	0x03C6A930 TBNZ X0, 0x0, 0x3C6A958
	0x03C6A934 ADRP X8, 0x4B0000
	0x03C6A938 LDR X8, [X8 + 0x4C0]
	0x03C6A93C LDR X0, [X8]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+16], D11
	003 Move [X31+24], D10
	004 Move [X31+32], D9
	005 Move [X31+40], D8
	006 Move [X31+48], X30
	007 Move [X31+56], X27
	008 Move [X31+64], X26
	009 Move [X31+72], X25
	010 Move [X31+80], X24
	011 Move [X31+88], X23
	012 Move [X31+96], X22
	013 Move [X31+104], X21
	014 Move [X31+112], X20
	015 Move [X31+120], X19
	016 Move X26, 0x77D000
	017 Move X27, 0x4B6000
	018 Move W8, [X26+1484]
	019 Move X27, [X27+1480]
	020 Move W25, W6
	021 Move X23, X5
	022 Move X19, X4
	023 Move W20, W3
	024 Move W24, W2
	025 Move X21, X1
	026 Move W22, W0
	027 Move V8, V3
	028 Move V9, V2
	029 Move V10, V1
	030 Move V11, V0
	031 Move TEMP, X8
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {52}
	035 Move X0, 0x4B6000
	036 Move X0, [X0+1480]
	037 Call 0x1C17CF4
	038 Move X0, 0x4B1000
	039 Move X0, [X0+1216]
	040 Call 0x1C17CF4
	041 Move X0, 0x4F7000
	042 Move X0, [X0+664]
	043 Call 0x1C17CF4
	044 Move X0, 0x4F7000
	045 Move X0, [X0+672]
	046 Call 0x1C17CF4
	047 Move X0, 0x48A000
	048 Move X0, [X0+1728]
	049 Call 0x1C17CF4
	050 Move W8, 1
	051 Move [X26+1484], W8
	052 Move X0, [X27]
	053 Move W8, [X0+224]
	054 Compare W8, 0
	055 JumpIfNotEqual {57}
	056 Call 0x1C17DFC
	057 Call GUIUtility.CheckOnGUI
	058 Move TEMP, X20
	059 And TEMP, TEMP, -2147483648
	060 Compare TEMP, -2147483648
	061 JumpIfEqual {76}
	062 Compare X21, 0
	063 JumpIfEqual {252}
	064 Move X0, [X21+16]
	065 Compare X0, 0
	066 JumpIfEqual {252}
	067 Move W8, [X0+16]
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move W1, W31
	070 Move W2, W20
	071 Move X3, X31
	072 Call String.Substring, X0, X1, X2
	073 Move X1, X0
	074 Move X0, X21
	075 Call GUIContent.set_text, X0, X1
	076 Move X8, 0x48A000
	077 Move X8, [X8+1728]
	078 Move X0, [X8]
	079 Move X8, 0x4F7000
	080 Move X8, [X8+664]
	081 Move W9, [X0+224]
	082 Move X26, [X8]
	083 Compare W9, 0
	084 JumpIfNotEqual {86}
	085 Call 0x1C17DFC
	086 Move X0, X26
	087 Move X1, X31
	088 Call Type.GetTypeFromHandle, X0
	089 Move X8, [X27]
	090 Move X26, X0
	091 Move W9, [X8+224]
	092 Compare W9, 0
	093 JumpIfNotEqual {96}
	094 Move X0, X8
	095 Call 0x1C17DFC
	096 Move X0, X26
	097 Move W1, W22
	098 Call GUIUtility.GetStateObject, X0, X1
	099 Compare X0, 0
	100 JumpIfEqual {252}
	101 Move X9, 0x4F7000
	102 Move X9, [X9+672]
	103 Move X8, [X0]
	104 Move X26, X0
	105 Move X1, [X9]
	106 Move W10, [X8+304]
	107 Move W9, [X1+304]
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Move X8, [X8+200]
	110 Add X8, X8, X9
	111 NotImplemented "Instruction LDUR not yet implemented."
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Compare X21, 0
	114 JumpIfEqual {252}
	115 Move X1, [X21+16]
	116 Move X0, X26
	117 Move X2, X31
	118 And W27, W24, 1
	119 Call TextEditor.set_text, X0, X1
	120 Move X0, X26
	121 Move X1, X31
	122 Call TextEditor.SaveBackup, X0
	123 Move X0, X26
	124 Move V0, V11
	125 Move V1, V10
	126 Move V2, V9
	127 Move V3, V8
	128 Move X1, X31
	129 Call TextEditor.set_position, X0, X1
	130 Move X0, X26
	131 Move X1, X31
	132 Move [X26+32], X19
	133 Move [X26+40], W27
	134 Move [X26+24], W22
	135 Call TextEditor.DetectFocusChange, X0
	136 Move X0, X31
	137 Call TouchScreenKeyboard.get_isRequiredToForceOpen
	138 Move TEMP, X0
	139 And TEMP, TEMP, 1
	140 Compare TEMP, 1
	141 JumpIfNotEqual {161}
	142 Move X8, 0x4B1000
	143 Move X8, [X8+1216]
	144 Move X0, [X8]
	145 Move W8, [X0+224]
	146 Compare W8, 0
	147 JumpIfNotEqual {149}
	148 Call 0x1C17DFC
	149 And W2, W24, 1
	150 Move V0, V11
	151 Move V1, V10
	152 Move V2, V9
	153 Move V3, V8
	154 Move W0, W22
	155 Move X1, X21
	156 Move W3, W20
	157 Move X4, X19
	158 Move X5, X23
	159 Move X6, X26
	160 Call GUI.HandleTextFieldEventForDesktopWithForcedKeyboard, X0, X1, X2, X3, X4, X5, X6, X7
	161 Move X0, X31
	162 Call TouchScreenKeyboard.get_isSupported
	163 Move TEMP, X0
	164 And TEMP, TEMP, 1
	165 Compare TEMP, 1
	166 JumpIfNotEqual {180}
	167 Move X0, X31
	168 Call TouchScreenKeyboard.get_isInPlaceEditingAllowed
	169 Move X8, 0x4B1000
	170 Move X8, [X8+1216]
	171 Move W27, W0
	172 Move X8, [X8]
	173 Move W9, [X8+224]
	174 Compare W9, 0
	175 JumpIfEqual {187}
	176 Move TEMP, X27
	177 And TEMP, TEMP, 1
	178 Compare TEMP, 1
	179 JumpIfEqual {193}
	180 Move X8, 0x4B1000
	181 Move X8, [X8+1216]
	182 Move X0, [X8]
	183 Move W8, [X0+224]
	184 Compare W8, 0
	185 JumpIfNotEqual {193}
	186 Call 0x1C17DFC
	187 Move X0, X8
	188 Call 0x1C17DFC
	189 Move TEMP, X27
	190 And TEMP, TEMP, 1
	191 Compare TEMP, 1
	192 JumpIfNotEqual {204}
	193 And W2, W24, 1
	194 Move V0, V11
	195 Move V1, V10
	196 Move V2, V9
	197 Move V3, V8
	198 Move W0, W22
	199 Move X1, X21
	200 Move W3, W20
	201 Move X4, X19
	202 Move X5, X26
	203 Call GUI.HandleTextFieldEventForDesktop, X0, X1, X2, X3, X4, X5, X6
	204 And W2, W24, 1
	205 Move V0, V11
	206 Move V1, V10
	207 Move V2, V9
	208 Move V3, V8
	209 Move W0, W22
	210 Move X1, X21
	211 Move W3, W20
	212 Move X4, X19
	213 Move X5, X23
	214 Move W6, W25
	215 Move X7, X26
	216 Call GUI.HandleTextFieldEventForTouchscreen, X0, X1, X2, X3, X4, X5, X6, X7, X8
	217 Move X19, 0x77D000
	218 Move X20, 0x4F0000
	219 Move W8, [X19+1296]
	220 Move X20, [X20+32]
	221 Move TEMP, X8
	222 And TEMP, TEMP, 1
	223 Compare TEMP, 1
	224 JumpIfEqual {230}
	225 Move X0, 0x4F0000
	226 Move X0, [X0+32]
	227 Call 0x1C17CF4
	228 Move W8, 1
	229 Move [X19+1296], W8
	230 Move X8, [X20]
	231 Move X0, X26
	232 Move X20, [X31+112]
	233 Move X19, [X31+120]
	234 Move X22, [X31+96]
	235 Move X21, [X31+104]
	236 Move X8, [X8+184]
	237 Move X24, [X31+80]
	238 Move X23, [X31+88]
	239 Move X26, [X31+64]
	240 Move X25, [X31+72]
	241 Move X30, [X31+48]
	242 Move X27, [X31+56]
	243 Move X1, [X8]
	244 Move D9, [X31+32]
	245 Move D8, [X31+40]
	246 Move D11, [X31+16]
	247 Move D10, [X31+24]
	248 Move X2, X31
	249 Add X31, X31, 128
	250 Call TextEditor.UpdateScrollOffsetIfNeeded, X0, X1
	251 Return 
	252 Call 0x1C17F20
	253 Move X0, X26
	254 Call 0x1C181E0

Method: System.Void HandleTextFieldEventForTouchscreen(UnityEngine.Rect position, System.Int32 id, UnityEngine.GUIContent content, System.Boolean multiline, System.Int32 maxLength, UnityEngine.GUIStyle style, System.String secureText, System.Char maskChar, UnityEngine.TextEditor editor)

Disassembly:
	0x03C6AD7C B 0x3C6AD80
	0x03C6AD80 STP D11, D10, [X31 - 0x60]!
	0x03C6AD84 STP D9, D8, [X31 + 0x10]
	0x03C6AD88 STR X30, [X31 + 0x20]
	0x03C6AD8C STP X24, X23, [X31 + 0x30]
	0x03C6AD90 STP X22, X21, [X31 + 0x40]
	0x03C6AD94 STP X20, X19, [X31 + 0x50]
	0x03C6AD98 ADRP X23, 0x77C000
	0x03C6AD9C LDRB W8, [X23 + 0x5D3]
	0x03C6ADA0 MOV X19, X3
	0x03C6ADA4 MOV X20, X2
	0x03C6ADA8 MOV W22, W1
	0x03C6ADAC MOV W21, W0
	0x03C6ADB0 MOV V8.16B, V3.16B
	0x03C6ADB4 MOV V9.16B, V2.16B
	0x03C6ADB8 MOV V10.16B, V1.16B
	0x03C6ADBC MOV V11.16B, V0.16B
	0x03C6ADC0 TBNZ X8, 0x0, 0x3C6ADD8
	0x03C6ADC4 ADRP X0, 0x4B0000
	0x03C6ADC8 LDR X0, [X0 + 0x4C0]
	0x03C6ADCC BL 0x1C16CF4
	0x03C6ADD0 MOVZ W8, 0x1
	0x03C6ADD4 STRB W8, [X23 + 0x5D3]
	0x03C6ADD8 ADRP X23, 0x77C000
	0x03C6ADDC ADRP X24, 0x4EF000
	0x03C6ADE0 LDRB W8, [X23 + 0x510]
	0x03C6ADE4 LDR X24, [X24 + 0x20]
	0x03C6ADE8 TBNZ X8, 0x0, 0x3C6AE00
	0x03C6ADEC ADRP X0, 0x4EF000
	0x03C6ADF0 LDR X0, [X0 + 0x20]
	0x03C6ADF4 BL 0x1C16CF4
	0x03C6ADF8 MOVZ W8, 0x1
	0x03C6ADFC STRB W8, [X23 + 0x510]
	0x03C6AE00 LDR X8, [X24]
	0x03C6AE04 LDR X8, [X8 + 0xB8]
	0x03C6AE08 LDR X0, [X8]
	0x03C6AE0C CBZ X0, 0x3C6AE98
	0x03C6AE10 ADRP X24, 0x4B0000
	0x03C6AE14 LDR X24, [X24 + 0x4C0]
	0x03C6AE18 BL 0x3C62C40
	0x03C6AE1C FCMP S1, S10
	0x03C6AE20 MOV W23, W31
	0x03C6AE24 B.LT 0x3C6AE48
	0x03C6AE28 FCMP S0, S11
	0x03C6AE2C B.LT 0x3C6AE48
	0x03C6AE30 FADD S2, S11, S9
	0x03C6AE34 FCMP S0, S2
	0x03C6AE38 B.PL 0x3C6AE48
	0x03C6AE3C FADD S0, S10, S8
	0x03C6AE40 FCMP S1, S0
	0x03C6AE44 CSET W23, MI
	0x03C6AE48 LDR X0, [X24]
	0x03C6AE4C LDR W8, [X0 + 0xE0]
	0x03C6AE50 CBNZ W8, 0x3C6AE58
	0x03C6AE54 BL 0x1C16DFC
	0x03C6AE58 AND W1, W22, 0x1
	0x03C6AE5C MOV V2.16B, V9.16B
	0x03C6AE60 MOV V3.16B, V8.16B
	0x03C6AE64 MOV W0, W21
	0x03C6AE68 MOV W2, W23
	0x03C6AE6C MOV X3, X20
	0x03C6AE70 MOV X4, X19
	0x03C6AE74 LDP X20, X19, [X31 + 0x50]
	0x03C6AE78 LDP X22, X21, [X31 + 0x40]
	0x03C6AE7C LDP X24, X23, [X31 + 0x30]
	0x03C6AE80 LDR X30, [X31 + 0x20]
	0x03C6AE84 LDP D9, D8, [X31 + 0x10]
	0x03C6AE88 MOV V0.16B, V11.16B
	0x03C6AE8C MOV V1.16B, V10.16B
	0x03C6AE90 LDP D11, D10, [X31], #0x60
	0x03C6AE94 B 0x3C6AE9C
	0x03C6AE98 BL 0x1C16F20
	0x03C6AE9C STP D11, D10, [X31 - 0x60]!
	0x03C6AEA0 STP D9, D8, [X31 + 0x10]
	0x03C6AEA4 STP X30, X25, [X31 + 0x20]
	0x03C6AEA8 STP X24, X23, [X31 + 0x30]
	0x03C6AEAC STP X22, X21, [X31 + 0x40]
	0x03C6AEB0 STP X20, X19, [X31 + 0x50]
	0x03C6AEB4 ADRP X20, 0x77C000
	0x03C6AEB8 LDRB W8, [X20 + 0x5D1]
	0x03C6AEBC MOV X23, X4
	0x03C6AEC0 MOV X22, X3
	0x03C6AEC4 MOV W24, W2
	0x03C6AEC8 MOV W19, W1
	0x03C6AECC MOV W21, W0
	0x03C6AED0 MOV V8.16B, V3.16B
	0x03C6AED4 MOV V9.16B, V2.16B
	0x03C6AED8 MOV V10.16B, V1.16B
	0x03C6AEDC MOV V11.16B, V0.16B
	0x03C6AEE0 TBNZ X8, 0x0, 0x3C6AF04
	0x03C6AEE4 ADRP X0, 0x4B5000
	0x03C6AEE8 LDR X0, [X0 + 0x5C8]
	0x03C6AEEC BL 0x1C16CF4
	0x03C6AEF0 ADRP X0, 0x4B0000
	0x03C6AEF4 LDR X0, [X0 + 0x4C0]
	0x03C6AEF8 BL 0x1C16CF4
	0x03C6AEFC MOVZ W8, 0x1
	0x03C6AF00 STRB W8, [X20 + 0x5D1]
	0x03C6AF04 ADRP X20, 0x77C000
	0x03C6AF08 ADRP X25, 0x4EF000
	0x03C6AF0C LDRB W8, [X20 + 0x510]
	0x03C6AF10 LDR X25, [X25 + 0x20]
	0x03C6AF14 TBNZ X8, 0x0, 0x3C6AF2C
	0x03C6AF18 ADRP X0, 0x4EF000
	0x03C6AF1C LDR X0, [X0 + 0x20]
	0x03C6AF20 BL 0x1C16CF4
	0x03C6AF24 MOVZ W8, 0x1
	0x03C6AF28 STRB W8, [X20 + 0x510]
	0x03C6AF2C LDR X8, [X25]
	0x03C6AF30 LDR X8, [X8 + 0xB8]
	0x03C6AF34 LDR X20, [X8]
	0x03C6AF38 CBZ X20, 0x3C6B310
	0x03C6AF3C ADRP X25, 0x77C000
	0x03C6AF40 LDR X8, [X25 + 0x4A8]
	0x03C6AF44 CBNZ X8, 0x3C6AF5C
	0x03C6AF48 ADRP X0, 0xFFFFFFFFFCE87000
	0x03C6AF4C ADD X0, X0, 0x566
	0x03C6AF50 BL 0x1C16CB8
	0x03C6AF54 MOV X8, X0
	0x03C6AF58 STR X0, [X25 + 0x4A8]
	0x03C6AF5C MOV X0, X20
	0x03C6AF60 BLR X8
	0x03C6AF64 CMP W0, 0x7
	0x03C6AF68 B.HI 0x3C6B2F0
	0x03C6AF6C ADRP X9, 0xFFFFFFFFFCF2D000
	0x03C6AF70 MOV W8, W0
	0x03C6AF74 ADD X9, X9, 0xE3A
	0x03C6AF78 ADR X10, 0x10
	0x03C6AF7C LDRB W11, [X9, X8, LSL]
	0x03C6AF80 ADD X10, X10, X11, 0x2, LSL
	0x03C6AF84 BR X10
	0x03C6AF88 ADRP X8, 0x4B5000
	0x03C6AF8C LDR X8, [X8 + 0x5C8]
	0x03C6AF90 LDR X0, [X8]
	0x03C6AF94 LDR W8, [X0 + 0xE0]
	0x03C6AF98 CBNZ W8, 0x3C6AFA0
	0x03C6AF9C BL 0x1C16DFC
	0x03C6AFA0 MOV V0.16B, V11.16B
	0x03C6AFA4 MOV V1.16B, V10.16B
	0x03C6AFA8 MOV V2.16B, V9.16B
	0x03C6AFAC MOV V3.16B, V8.16B
	0x03C6AFB0 MOV X0, X20
	0x03C6AFB4 BL 0x3C6B314
	0x03C6AFB8 TBZ X0, 0x0, 0x3C6B2F0
	0x03C6AFBC ADRP X8, 0x4B0000
	0x03C6AFC0 LDR X8, [X8 + 0x4C0]
	0x03C6AFC4 LDR X0, [X8]
	0x03C6AFC8 LDR W8, [X0 + 0xE0]
	0x03C6AFCC CBNZ W8, 0x3C6AFD4
	0x03C6AFD0 BL 0x1C16DFC
	0x03C6AFD4 ADRP X22, 0x77C000
	0x03C6AFD8 LDR X8, [X22 + 0x590]
	0x03C6AFDC CBNZ X8, 0x3C6AFF4
	0x03C6AFE0 ADRP X0, 0xFFFFFFFFFCE93000
	0x03C6AFE4 ADD X0, X0, 0x831
	0x03C6AFE8 BL 0x1C16CB8
	0x03C6AFEC MOV X8, X0
	0x03C6AFF0 STR X0, [X22 + 0x590]
	0x03C6AFF4 MOV W0, W21
	0x03C6AFF8 BLR X8
	0x03C6AFFC B 0x3C6B0FC
	0x03C6B000 ADRP X22, 0x4AF000
	0x03C6B004 LDR X22, [X22 + 0x4C0]
	0x03C6B008 LDR X0, [X22]
	0x03C6B00C LDR W8, [X0 + 0xE0]
	0x03C6B010 CBNZ W8, 0x3C6B018
	0x03C6B014 BL 0x1C16DFC
	0x03C6B018 ADRP X23, 0x77B000
	0x03C6B01C LDR X8, [X23 + 0x598]
	0x03C6B020 CBNZ X8, 0x3C6B038
	0x03C6B024 ADRP X0, 0xFFFFFFFFFCEA6000
	0x03C6B028 ADD X0, X0, 0x583
	0x03C6B02C BL 0x1C16CB8
	0x03C6B030 MOV X8, X0
	0x03C6B034 STR X0, [X23 + 0x598]
	0x03C6B038 MOV W0, W21
	0x03C6B03C BLR X8
	0x03C6B040 TBZ X0, 0x0, 0x3C6B2F0
	0x03C6B044 LDR X0, [X22]
	0x03C6B048 LDR W8, [X0 + 0xE0]
	0x03C6B04C CBNZ W8, 0x3C6B054
	0x03C6B050 BL 0x1C16DFC
	0x03C6B054 ADRP X21, 0x77B000
	0x03C6B058 LDR X0, [X21 + 0x5A0]
	0x03C6B05C CBNZ X0, 0x3C6B070
	0x03C6B060 ADRP X0, 0xFFFFFFFFFCE86000
	0x03C6B064 ADD X0, X0, 0x5C8
	0x03C6B068 BL 0x1C16CB8
	0x03C6B06C STR X0, [X21 + 0x5A0]
	0x03C6B070 BLR X0
	0x03C6B074 MOV X0, X20
	0x03C6B078 BL 0x3C66240
	0x03C6B07C ADRP X8, 0x4B4000
	0x03C6B080 LDR X8, [X8 + 0x5C8]
	0x03C6B084 LDR X0, [X8]
	0x03C6B088 LDR W8, [X0 + 0xE0]
	0x03C6B08C CBNZ W8, 0x3C6B094
	0x03C6B090 BL 0x1C16DFC
	0x03C6B094 MOV V0.16B, V11.16B
	0x03C6B098 MOV V1.16B, V10.16B
	0x03C6B09C MOV V2.16B, V9.16B
	0x03C6B0A0 MOV V3.16B, V8.16B
	0x03C6B0A4 MOV X0, X20
	0x03C6B0A8 BL 0x3C6B314
	0x03C6B0AC TBZ X0, 0x0, 0x3C6B2F0
	0x03C6B0B0 LDR X0, [X22]
	0x03C6B0B4 B 0x3C6B2B8
	0x03C6B0B8 ADRP X8, 0x4AF000
	0x03C6B0BC LDR X8, [X8 + 0x4C0]
	0x03C6B0C0 LDR X0, [X8]
	0x03C6B0C4 LDR W8, [X0 + 0xE0]
	0x03C6B0C8 CBNZ W8, 0x3C6B0D0
	0x03C6B0CC BL 0x1C16DFC
	0x03C6B0D0 ADRP X22, 0x77B000
	0x03C6B0D4 LDR X8, [X22 + 0x598]
	0x03C6B0D8 CBNZ X8, 0x3C6B0F0
	0x03C6B0DC ADRP X0, 0xFFFFFFFFFCEA6000
	0x03C6B0E0 ADD X0, X0, 0x583
	0x03C6B0E4 BL 0x1C16CB8
	0x03C6B0E8 MOV X8, X0
	0x03C6B0EC STR X0, [X22 + 0x598]
	0x03C6B0F0 MOV W0, W21
	0x03C6B0F4 BLR X8
	0x03C6B0F8 TBZ X0, 0x0, 0x3C6B2F0
	0x03C6B0FC MOV X0, X20
	0x03C6B100 BL 0x3C66240
	0x03C6B104 B 0x3C6B2F0
	0x03C6B108 ADRP X22, 0x77B000
	0x03C6B10C LDR X8, [X22 + 0x448]
	0x03C6B110 CBNZ X8, 0x3C6B128
	0x03C6B114 ADRP X0, 0xFFFFFFFFFCE96000
	0x03C6B118 ADD X0, X0, 0x530
	0x03C6B11C BL 0x1C16CB8
	0x03C6B120 MOV X8, X0
	0x03C6B124 STR X0, [X22 + 0x448]
	0x03C6B128 MOV X0, X20
	0x03C6B12C BLR X8
	0x03C6B130 TBNZ X0, 0x2, 0x3C6B1E4
	0x03C6B134 LDR X8, [X22 + 0x448]
	0x03C6B138 CBNZ X8, 0x3C6B150
	0x03C6B13C ADRP X0, 0xFFFFFFFFFCE96000
	0x03C6B140 ADD X0, X0, 0x530
	0x03C6B144 BL 0x1C16CB8
	0x03C6B148 MOV X8, X0
	0x03C6B14C STR X0, [X22 + 0x448]
	0x03C6B150 MOV X0, X20
	0x03C6B154 BLR X8
	0x03C6B158 TBNZ X0, 0x0, 0x3C6B1E4
	0x03C6B15C LDR X8, [X22 + 0x448]
	0x03C6B160 CBNZ X8, 0x3C6B178
	0x03C6B164 ADRP X0, 0xFFFFFFFFFCE96000
	0x03C6B168 ADD X0, X0, 0x530
	0x03C6B16C BL 0x1C16CB8
	0x03C6B170 MOV X8, X0
	0x03C6B174 STR X0, [X22 + 0x448]
	0x03C6B178 MOV X0, X20
	0x03C6B17C BLR X8
	0x03C6B180 TBNZ X0, 0x3, 0x3C6B1E4
	0x03C6B184 LDR X8, [X22 + 0x448]
	0x03C6B188 CBNZ X8, 0x3C6B1A0
	0x03C6B18C ADRP X0, 0xFFFFFFFFFCE96000
	0x03C6B190 ADD X0, X0, 0x530
	0x03C6B194 BL 0x1C16CB8
	0x03C6B198 MOV X8, X0
	0x03C6B19C STR X0, [X22 + 0x448]
	0x03C6B1A0 MOV X0, X20
	0x03C6B1A4 BLR X8
	0x03C6B1A8 ANDS W31, W0, 0x2
	0x03C6B1AC CSET W22, EQ
	0x03C6B1B0 B 0x3C6B1E8
	0x03C6B1B4 CBZ X23, 0x3C6B310
	0x03C6B1B8 AND W3, W19, 0x1
	0x03C6B1BC AND W4, W24, 0x1
	0x03C6B1C0 MOV X0, X23
	0x03C6B1C4 MOV V0.16B, V11.16B
	0x03C6B1C8 MOV V1.16B, V10.16B
	0x03C6B1CC MOV V2.16B, V9.16B
	0x03C6B1D0 MOV V3.16B, V8.16B
	0x03C6B1D4 MOV X1, X22
	0x03C6B1D8 MOV W2, W21
	0x03C6B1DC BL 0x3C68EF0
	0x03C6B1E0 B 0x3C6B2F0
	0x03C6B1E4 MOV W22, W31
	0x03C6B1E8 ADRP X23, 0x77B000
	0x03C6B1EC LDR X8, [X23 + 0x488]
	0x03C6B1F0 CBNZ X8, 0x3C6B208
	0x03C6B1F4 ADRP X0, 0xFFFFFFFFFCEB2000

ISIL:
	001 Move [X31-128], D11
	002 Move [X31-120], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+48], X28
	007 Move [X31+56], X27
	008 Move [X31+64], X26
	009 Move [X31+72], X25
	010 Move [X31+80], X24
	011 Move [X31+88], X23
	012 Move [X31+96], X22
	013 Move [X31+104], X21
	014 Move [X31+112], X20
	015 Move [X31+120], X19
	016 Move X24, 0x77D000
	017 Move W8, [X24+1485]
	018 Move X22, X7
	019 Move W26, W6
	020 Move X21, X5
	021 Move X25, X4
	022 Move W27, W3
	023 Move W23, W2
	024 Move X19, X1
	025 Move W20, W0
	026 Move V11, V3
	027 Move V8, V2
	028 Move V10, V1
	029 Move V9, V0
	030 Move TEMP, X8
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfEqual {51}
	034 Move X0, 0x4B6000
	035 Move X0, [X0+1480]
	036 Call 0x1C17CF4
	037 Move X0, 0x4B1000
	038 Move X0, [X0+1216]
	039 Call 0x1C17CF4
	040 Move X0, 0x4F7000
	041 Move X0, [X0+664]
	042 Call 0x1C17CF4
	043 Move X0, 0x4F7000
	044 Move X0, [X0+672]
	045 Call 0x1C17CF4
	046 Move X0, 0x48A000
	047 Move X0, [X0+1728]
	048 Call 0x1C17CF4
	049 Move W8, 1
	050 Move [X24+1485], W8
	051 Move X24, 0x77D000
	052 Move X28, 0x4F0000
	053 Move W8, [X24+1296]
	054 Move X28, [X28+32]
	055 Move TEMP, X8
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfEqual {64}
	059 Move X0, 0x4F0000
	060 Move X0, [X0+32]
	061 Call 0x1C17CF4
	062 Move W8, 1
	063 Move [X24+1296], W8
	064 Move X8, [X28]
	065 Move X8, [X8+184]
	066 Move X24, [X8]
	067 Compare X24, 0
	068 JumpIfEqual {341}
	069 Move X28, 0x77D000
	070 Move X8, [X28+1192]
	071 Compare X8, 0
	072 JumpIfNotEqual {78}
	073 Move X0, -51871744
	074 Add X0, X0, 1382
	075 Call 0x1C17CB8
	076 Move X8, X0
	077 Move [X28+1192], X0
	078 Move X0, X24
	079 NotImplemented "Instruction BLR not yet implemented."
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Compare W0, 0
	082 JumpIfNotEqual {220}
	083 Move X0, X24
	084 Call Event.get_mousePosition, X0
	085 Add S2, S10, S11
	086 NotImplemented "Instruction FCMP not yet implemented."
	087 NotImplemented "Instruction FCMP not yet implemented."
	088 NotImplemented "Instruction FCMP not yet implemented."
	089 Add S1, S9, S8
	090 NotImplemented "Instruction FCMP not yet implemented."
	091 Move X27, 0x4B6000
	092 Move X27, [X27+1480]
	093 Move X0, [X27]
	094 Move W8, [X0+224]
	095 Compare W8, 0
	096 JumpIfNotEqual {98}
	097 Call 0x1C17DFC
	098 Move W0, W20
	099 Call GUIUtility.set_hotControl, X0
	100 Move X28, 0x4B1000
	101 Move X28, [X28+1216]
	102 Move X0, [X28]
	103 Move W8, [X0+224]
	104 Compare W8, 0
	105 JumpIfNotEqual {108}
	106 Call 0x1C17DFC
	107 Move X0, [X28]
	108 Move X8, [X0+184]
	109 Move W8, [X8]
	110 Add W31, W8, 1
	111 Move W9, [X0+224]
	112 Compare W9, 0
	113 JumpIfNotEqual {118}
	114 Call 0x1C17DFC
	115 Move X0, [X28]
	116 Move X8, [X0+184]
	117 Move W8, [X8]
	118 NotImplemented "Instruction CMP not yet implemented."
	119 Move X8, 0x48A000
	120 Move X8, [X8+1728]
	121 Move X0, [X8]
	122 Move X8, 0x4F7000
	123 Move X8, [X8+664]
	124 Move W9, [X0+224]
	125 Move X25, [X8]
	126 Compare W9, 0
	127 JumpIfNotEqual {129}
	128 Call 0x1C17DFC
	129 Move X0, X25
	130 Move X1, X31
	131 Call Type.GetTypeFromHandle, X0
	132 Move X8, [X28]
	133 Move X25, X0
	134 Move W9, [X8+224]
	135 Compare W9, 0
	136 JumpIfNotEqual {140}
	137 Move X0, X8
	138 Call 0x1C17DFC
	139 Move X8, [X28]
	140 Move X0, [X27]
	141 Move X8, [X8+184]
	142 Move W9, [X0+224]
	143 Move W26, [X8]
	144 Compare W9, 0
	145 JumpIfNotEqual {147}
	146 Call 0x1C17DFC
	147 Move X0, X25
	148 Move W1, W26
	149 Call GUIUtility.GetStateObject, X0, X1
	150 Compare X0, 0
	151 JumpIfEqual {341}
	152 Move X9, 0x4F7000
	153 Move X9, [X9+672]
	154 Move X8, [X0]
	155 Move X1, [X9]
	156 Move W10, [X8+304]
	157 Move W9, [X1+304]
	158 NotImplemented "Instruction CMP not yet implemented."
	159 Move X8, [X8+200]
	160 Add X8, X8, X9
	161 NotImplemented "Instruction LDUR not yet implemented."
	162 NotImplemented "Instruction CMP not yet implemented."
	163 Move [X0+16], X31
	164 Move X0, [X28]
	165 Move W8, [X0+224]
	166 Compare W8, 0
	167 JumpIfNotEqual {170}
	168 Call 0x1C17DFC
	169 Move X0, [X28]
	170 Move X8, [X0+184]
	171 Move [X8], W20
	172 Move X0, [X27]
	173 Move W8, [X0+224]
	174 Compare W8, 0
	175 JumpIfNotEqual {177}
	176 Call 0x1C17DFC
	177 Call GUIUtility.get_keyboardControl
	178 NotImplemented "Instruction CMP not yet implemented."
	179 Move X0, [X27]
	180 Move W8, [X0+224]
	181 Compare W8, 0
	182 JumpIfNotEqual {184}
	183 Call 0x1C17DFC
	184 Move W0, W20
	185 Call GUIUtility.set_keyboardControl, X0
	186 Move X0, X21
	187 Compare X21, 0
	188 JumpIfNotEqual {192}
	189 Compare X19, 0
	190 JumpIfEqual {341}
	191 Move X0, [X19+16]
	192 NotImplemented "Instruction CMP not yet implemented."
	193 NotImplemented "Instruction CSET not yet implemented."
	194 And W3, W23, 1
	195 Move W2, 1
	196 Move W1, W31
	197 Move X5, X31
	198 Call TouchScreenKeyboard.Open, X0, X1, X2, X3, X4
	199 Compare X22, 0
	200 JumpIfEqual {341}
	201 Move [X22+16], X0
	202 Move X0, X24
	203 Move X20, [X31+112]
	204 Move X19, [X31+120]
	205 Move X22, [X31+96]
	206 Move X21, [X31+104]
	207 Move X24, [X31+80]
	208 Move X23, [X31+88]
	209 Move X26, [X31+64]
	210 Move X25, [X31+72]
	211 Move X28, [X31+48]
	212 Move X27, [X31+56]
	213 Move X30, [X31+32]
	214 Move D9, [X31+16]
	215 Move D8, [X31+24]
	216 Move D11, [X31+128]
	217 Move D10, [X31+136]
	218 Call Event.Use, X0
	219 Return 
	220 Move X20, [X31+112]
	221 Move X19, [X31+120]
	222 Move X22, [X31+96]
	223 Move X21, [X31+104]
	224 Move X24, [X31+80]
	225 Move X23, [X31+88]
	226 Move X26, [X31+64]
	227 Move X25, [X31+72]
	228 Move X28, [X31+48]
	229 Move X27, [X31+56]
	230 Move X30, [X31+32]
	231 Move D9, [X31+16]
	232 Move D8, [X31+24]
	233 Move D11, [X31+128]
	234 Move D10, [X31+136]
	235 Return 
	236 Compare X22, 0
	237 JumpIfEqual {341}
	238 Move X0, [X22+16]
	239 Compare X0, 0
	240 JumpIfEqual {290}
	241 Move X1, X31
	242 Call TouchScreenKeyboard.get_text, X0
	243 Compare X19, 0
	244 JumpIfEqual {341}
	245 Move X1, X0
	246 Move X0, X19
	247 Call GUIContent.set_text, X0, X1
	248 Move TEMP, X27
	249 And TEMP, TEMP, -2147483648
	250 Compare TEMP, -2147483648
	251 JumpIfEqual {264}
	252 Move X0, [X19+16]
	253 Compare X0, 0
	254 JumpIfEqual {341}
	255 Move W8, [X0+16]
	256 NotImplemented "Instruction CMP not yet implemented."
	257 Move W1, W31
	258 Move W2, W27
	259 Move X3, X31
	260 Call String.Substring, X0, X1, X2
	261 Move X1, X0
	262 Move X0, X19
	263 Call GUIContent.set_text, X0, X1
	264 Move X0, [X22+16]
	265 Compare X0, 0
	266 JumpIfEqual {341}
	267 Move X1, X31
	268 Call TouchScreenKeyboard.get_status, X0
	269 Compare W0, 0
	270 JumpIfEqual {292}
	271 Move [X22+16], X31
	272 Move X8, 0x4B0000
	273 Move X8, [X8+1216]
	274 Move X0, [X8]
	275 Move W8, [X0+224]
	276 Compare W8, 0
	277 JumpIfNotEqual {279}
	278 Call 0x1C17DFC
	279 Move X22, 0x77C000
	280 Move X8, [X22+1360]
	281 Compare X8, 0
	282 JumpIfNotEqual {288}
	283 Move X0, -51859456
	284 Add X0, X0, 1821
	285 Call 0x1C17CB8
	286 Move X8, X0
	287 Move [X22+1360], X0
	288 Move W0, 1
	289 NotImplemented "Instruction BLR not yet implemented."
	290 Compare X19, 0
	291 JumpIfEqual {341}
	292 Move X22, [X19+16]
	293 Compare X21, 0
	294 JumpIfEqual {308}
	295 Move X8, 0x4B0000
	296 Move X8, [X8+1216]
	297 Move X0, [X8]
	298 Move W8, [X0+224]
	299 Compare W8, 0
	300 JumpIfNotEqual {302}
	301 Call 0x1C17DFC
	302 Move X0, X22
	303 Move W1, W26
	304 Call GUI.PasswordFieldGetStrToShow, X0, X1
	305 Move X1, X0
	306 Move X0, X19
	307 Call GUIContent.set_text, X0, X1
	308 Compare X25, 0
	309 JumpIfEqual {341}
	310 Move X0, X25
	311 Move V0, V9
	312 Move V1, V10
	313 Move V2, V8
	314 Move V3, V11
	315 Move X1, X19
	316 Move W2, W20
	317 Move W3, W31
	318 Move W4, W31
	319 Move W5, W31
	320 Move W6, W31
	321 Call GUIStyle.Draw, X0, X1, X2, X3, X4, X5, X6, X7
	322 Move X0, X19
	323 Move X1, X22
	324 Move X20, [X31+112]
	325 Move X19, [X31+120]
	326 Move X22, [X31+96]
	327 Move X21, [X31+104]
	328 Move X24, [X31+80]
	329 Move X23, [X31+88]
	330 Move X26, [X31+64]
	331 Move X25, [X31+72]
	332 Move X28, [X31+48]
	333 Move X27, [X31+56]
	334 Move X30, [X31+32]
	335 Move D9, [X31+16]
	336 Move D8, [X31+24]
	337 Move D11, [X31+128]
	338 Move D10, [X31+136]
	339 Call GUIContent.set_text, X0, X1
	340 Return 
	341 Call 0x1C17F20
	342 Call 0x1C181E0

Method: System.Void HandleTextFieldEventForDesktop(UnityEngine.Rect position, System.Int32 id, UnityEngine.GUIContent content, System.Boolean multiline, System.Int32 maxLength, UnityEngine.GUIStyle style, UnityEngine.TextEditor editor)

Disassembly:
	0x03C6B1F8 ADD X0, X0, 0x5AB
	0x03C6B1FC BL 0x1C16CB8
	0x03C6B200 MOV X8, X0
	0x03C6B204 STR X0, [X23 + 0x488]
	0x03C6B208 MOV X0, X20
	0x03C6B20C BLR X8
	0x03C6B210 CMP W0, 0x20
	0x03C6B214 B.EQ 0x3C6B244
	0x03C6B218 LDR X8, [X23 + 0x488]
	0x03C6B21C CBNZ X8, 0x3C6B234
	0x03C6B220 ADRP X0, 0xFFFFFFFFFCEB2000
	0x03C6B224 ADD X0, X0, 0x5AB
	0x03C6B228 BL 0x1C16CB8
	0x03C6B22C MOV X8, X0
	0x03C6B230 STR X0, [X23 + 0x488]
	0x03C6B234 MOV X0, X20
	0x03C6B238 BLR X8
	0x03C6B23C CMP W0, 0xD
	0x03C6B240 B.NE 0x3C6B24C
	0x03C6B244 CBNZ W22, 0x3C6B280
	0x03C6B248 B 0x3C6B2F0
	0x03C6B24C LDR X8, [X23 + 0x488]
	0x03C6B250 CBNZ X8, 0x3C6B268
	0x03C6B254 ADRP X0, 0xFFFFFFFFFCEB2000
	0x03C6B258 ADD X0, X0, 0x5AB
	0x03C6B25C BL 0x1C16CB8
	0x03C6B260 MOV X8, X0
	0x03C6B264 STR X0, [X23 + 0x488]
	0x03C6B268 MOV X0, X20
	0x03C6B26C BLR X8
	0x03C6B270 CMP W0, 0x10F
	0x03C6B274 B.NE 0x3C6B2F0
	0x03C6B278 EOR W8, W22, 0x1
	0x03C6B27C TBNZ X8, 0x0, 0x3C6B2F0
	0x03C6B280 ADRP X8, 0x4B4000
	0x03C6B284 LDR X8, [X8 + 0x5C8]
	0x03C6B288 LDR X0, [X8]
	0x03C6B28C LDR W8, [X0 + 0xE0]
	0x03C6B290 CBNZ W8, 0x3C6B298
	0x03C6B294 BL 0x1C16DFC
	0x03C6B298 BL 0x3C6AA80
	0x03C6B29C CMP W0, W21
	0x03C6B2A0 B.NE 0x3C6B2F0
	0x03C6B2A4 MOV X0, X20
	0x03C6B2A8 BL 0x3C66240
	0x03C6B2AC ADRP X8, 0x4AF000
	0x03C6B2B0 LDR X8, [X8 + 0x4C0]
	0x03C6B2B4 LDR X0, [X8]
	0x03C6B2B8 LDR W8, [X0 + 0xE0]
	0x03C6B2BC CBNZ W8, 0x3C6B2C4
	0x03C6B2C0 BL 0x1C16DFC
	0x03C6B2C4 ADRP X20, 0x77B000
	0x03C6B2C8 LDR X8, [X20 + 0x550]
	0x03C6B2CC CBNZ X8, 0x3C6B2E4
	0x03C6B2D0 ADRP X0, 0xFFFFFFFFFCE8A000
	0x03C6B2D4 ADD X0, X0, 0x71D
	0x03C6B2D8 BL 0x1C16CB8
	0x03C6B2DC MOV X8, X0
	0x03C6B2E0 STR X0, [X20 + 0x550]
	0x03C6B2E4 MOVZ W0, 0x1
	0x03C6B2E8 BLR X8
	0x03C6B2EC EOR W19, W19, 0x1
	0x03C6B2F0 AND W0, W19, 0x1
	0x03C6B2F4 LDP X20, X19, [X31 + 0x50]
	0x03C6B2F8 LDP X22, X21, [X31 + 0x40]
	0x03C6B2FC LDP X24, X23, [X31 + 0x30]
	0x03C6B300 LDP X30, X25, [X31 + 0x20]
	0x03C6B304 LDP D9, D8, [X31 + 0x10]
	0x03C6B308 LDP D11, D10, [X31], #0x60
	0x03C6B30C RET
	0x03C6B310 BL 0x1C16F20
	0x03C6B314 STP D13, D12, [X31 - 0x50]!
	0x03C6B318 STP D11, D10, [X31 + 0x10]
	0x03C6B31C STP D9, D8, [X31 + 0x20]
	0x03C6B320 STR X30, [X31 + 0x30]
	0x03C6B324 STP X20, X19, [X31 + 0x40]
	0x03C6B328 ADRP X20, 0x77B000
	0x03C6B32C LDRB W8, [X20 + 0x954]
	0x03C6B330 MOV X19, X0
	0x03C6B334 MOV V8.16B, V3.16B
	0x03C6B338 MOV V9.16B, V2.16B
	0x03C6B33C MOV V10.16B, V1.16B
	0x03C6B340 MOV V11.16B, V0.16B
	0x03C6B344 TBNZ X8, 0x0, 0x3C6B35C
	0x03C6B348 ADRP X0, 0x4B4000
	0x03C6B34C LDR X0, [X0 + 0x5C8]
	0x03C6B350 BL 0x1C16CF4
	0x03C6B354 MOVZ W8, 0x1
	0x03C6B358 STRB W8, [X20 + 0x954]
	0x03C6B35C CBZ X19, 0x3C6B3C4
	0x03C6B360 ADRP X20, 0x4B4000
	0x03C6B364 LDR X20, [X20 + 0x5C8]
	0x03C6B368 MOV X0, X19
	0x03C6B36C BL 0x3C62C40
	0x03C6B370 MOV X0, X19
	0x03C6B374 MOV V12.16B, V0.16B
	0x03C6B378 MOV V13.16B, V1.16B
	0x03C6B37C BL 0x3C63AC0
	0x03C6B380 LDR X0, [X20]
	0x03C6B384 LDR W8, [X0 + 0xE0]
	0x03C6B388 CBNZ W8, 0x3C6B390
	0x03C6B38C BL 0x1C16DFC
	0x03C6B390 MOV V0.16B, V11.16B
	0x03C6B394 MOV V1.16B, V10.16B
	0x03C6B398 MOV V2.16B, V9.16B
	0x03C6B39C MOV V3.16B, V8.16B
	0x03C6B3A0 LDP X20, X19, [X31 + 0x40]
	0x03C6B3A4 LDR X30, [X31 + 0x30]
	0x03C6B3A8 LDP D9, D8, [X31 + 0x20]
	0x03C6B3AC LDP D11, D10, [X31 + 0x10]
	0x03C6B3B0 MOV V4.16B, V12.16B
	0x03C6B3B4 MOV V5.16B, V13.16B
	0x03C6B3B8 MOV W0, W31
	0x03C6B3BC LDP D13, D12, [X31], #0x50
	0x03C6B3C0 B 0x3C76974
	0x03C6B3C4 BL 0x1C16F20
	0x03C6B3C8 AND W2, W2, 0x1
	0x03C6B3CC AND W3, W3, 0x1
	0x03C6B3D0 AND W4, W4, 0x1
	0x03C6B3D4 AND W5, W5, 0x1
	0x03C6B3D8 B 0x3C739A8
	0x03C6B3DC LDR X0, [X0 + 0x20]
	0x03C6B3E0 RET
	0x03C6B3E4 SUB X31, X31, 0x20
	0x03C6B3E8 STP X30, X19, [X31 + 0x10]
	0x03C6B3EC ADRP X19, 0x77B000
	0x03C6B3F0 LDR X8, [X19 + 0x638]
	0x03C6B3F4 STP X31, X31, [X31]
	0x03C6B3F8 CBNZ X8, 0x3C6B410
	0x03C6B3FC ADRP X0, 0xFFFFFFFFFCE8E000
	0x03C6B400 ADD X0, X0, 0xA10
	0x03C6B404 BL 0x1C16CB8
	0x03C6B408 MOV X8, X0
	0x03C6B40C STR X0, [X19 + 0x638]
	0x03C6B410 ADD X0, X31, 0x0
	0x03C6B414 BLR X8
	0x03C6B418 LDP S0, S1, [X31]
	0x03C6B41C LDP S2, S3, [X31 + 0x8]
	0x03C6B420 LDP X30, X19, [X31 + 0x10]
	0x03C6B424 ADD X31, X31, 0x20
	0x03C6B428 RET
	0x03C6B42C STR X30, [X31 - 0x20]!
	0x03C6B430 STP X20, X19, [X31 + 0x10]
	0x03C6B434 ADRP X20, 0x77B000
	0x03C6B438 LDR X1, [X20 + 0x7C8]
	0x03C6B43C MOV X19, X0
	0x03C6B440 CBNZ X1, 0x3C6B458
	0x03C6B444 ADRP X0, 0xFFFFFFFFFCEB0000
	0x03C6B448 ADD X0, X0, 0x2FE
	0x03C6B44C BL 0x1C16CB8
	0x03C6B450 MOV X1, X0
	0x03C6B454 STR X0, [X20 + 0x7C8]
	0x03C6B458 MOV X0, X19
	0x03C6B45C LDP X20, X19, [X31 + 0x10]
	0x03C6B460 LDR X30, [X31], #0x20
	0x03C6B464 BR X1
	0x03C6B468 SUB X31, X31, 0x30
	0x03C6B46C STP X30, X21, [X31 + 0x10]
	0x03C6B470 STP X20, X19, [X31 + 0x20]
	0x03C6B474 ADRP X20, 0x77B000
	0x03C6B478 STP S0, S1, [X31]
	0x03C6B47C STP S2, S3, [X31 + 0x8]
	0x03C6B480 ADRP X21, 0x4AF000
	0x03C6B484 LDRB W8, [X20 + 0x7C0]
	0x03C6B488 LDR X21, [X21 + 0x890]
	0x03C6B48C MOV X19, X0
	0x03C6B490 TBNZ X8, 0x0, 0x3C6B4A8
	0x03C6B494 ADRP X0, 0x4AF000
	0x03C6B498 LDR X0, [X0 + 0x890]
	0x03C6B49C BL 0x1C16CF4
	0x03C6B4A0 MOVZ W8, 0x1
	0x03C6B4A4 STRB W8, [X20 + 0x7C0]
	0x03C6B4A8 LDR X0, [X21]
	0x03C6B4AC LDR W8, [X0 + 0xE0]
	0x03C6B4B0 CBNZ W8, 0x3C6B4B8
	0x03C6B4B4 BL 0x1C16DFC
	0x03C6B4B8 ADRP X20, 0x77B000
	0x03C6B4BC LDR X8, [X20 + 0x858]
	0x03C6B4C0 CBNZ X8, 0x3C6B4D8
	0x03C6B4C4 ADRP X0, 0xFFFFFFFFFCEB4000
	0x03C6B4C8 ADD X0, X0, 0x3F7
	0x03C6B4CC BL 0x1C16CB8
	0x03C6B4D0 MOV X8, X0
	0x03C6B4D4 STR X0, [X20 + 0x858]
	0x03C6B4D8 ADD X1, X31, 0x0
	0x03C6B4DC MOV X0, X19
	0x03C6B4E0 BLR X8
	0x03C6B4E4 LDP X20, X19, [X31 + 0x20]
	0x03C6B4E8 LDP X30, X21, [X31 + 0x10]
	0x03C6B4EC ADD X31, X31, 0x30
	0x03C6B4F0 RET
	0x03C6B4F4 STR D14, [X31 - 0x60]!
	0x03C6B4F8 STP D13, D12, [X31 + 0x8]
	0x03C6B4FC STP D11, D10, [X31 + 0x18]
	0x03C6B500 STP D9, D8, [X31 + 0x28]
	0x03C6B504 STR X30, [X31 + 0x38]
	0x03C6B508 STP X22, X21, [X31 + 0x40]
	0x03C6B50C STP X20, X19, [X31 + 0x50]
	0x03C6B510 ADRP X22, 0x77B000
	0x03C6B514 ADRP X21, 0x4AF000
	0x03C6B518 LDRB W8, [X22 + 0x5D5]
	0x03C6B51C LDR X21, [X21 + 0x4C0]
	0x03C6B520 MOV X19, X1
	0x03C6B524 MOV X20, X0
	0x03C6B528 MOV V8.16B, V6.16B
	0x03C6B52C MOV V9.16B, V5.16B
	0x03C6B530 MOV V10.16B, V4.16B
	0x03C6B534 MOV V11.16B, V3.16B
	0x03C6B538 MOV V12.16B, V2.16B
	0x03C6B53C MOV V13.16B, V1.16B
	0x03C6B540 MOV V14.16B, V0.16B
	0x03C6B544 TBNZ X8, 0x0, 0x3C6B55C
	0x03C6B548 ADRP X0, 0x4AF000
	0x03C6B54C LDR X0, [X0 + 0x4C0]
	0x03C6B550 BL 0x1C16CF4
	0x03C6B554 MOVZ W8, 0x1
	0x03C6B558 STRB W8, [X22 + 0x5D5]
	0x03C6B55C LDR X0, [X21]
	0x03C6B560 LDR W8, [X0 + 0xE0]
	0x03C6B564 CBNZ W8, 0x3C6B56C
	0x03C6B568 BL 0x1C16DFC
	0x03C6B56C MOV V1.16B, V13.16B
	0x03C6B570 MOV V2.16B, V12.16B
	0x03C6B574 MOV V3.16B, V11.16B
	0x03C6B578 MOV V4.16B, V10.16B
	0x03C6B57C MOV V6.16B, V9.16B
	0x03C6B580 MOV V7.16B, V8.16B
	0x03C6B584 MOV X0, X20
	0x03C6B588 MOV X1, X19
	0x03C6B58C LDP X20, X19, [X31 + 0x50]
	0x03C6B590 LDP X22, X21, [X31 + 0x40]
	0x03C6B594 LDR X30, [X31 + 0x38]
	0x03C6B598 LDP D9, D8, [X31 + 0x28]
	0x03C6B59C LDP D11, D10, [X31 + 0x18]
	0x03C6B5A0 LDP D13, D12, [X31 + 0x8]
	0x03C6B5A4 FMOV S5, W31
	0x03C6B5A8 MOVZ W2, 0x1
	0x03C6B5AC MOV V0.16B, V14.16B
	0x03C6B5B0 MOV W3, W31
	0x03C6B5B4 MOV X4, X31
	0x03C6B5B8 LDR V14, [X31], #0x60
	0x03C6B5BC B 0x3C6B5C0
	0x03C6B5C0 SUB X31, X31, 0x110
	0x03C6B5C4 STP D15, D14, [X31 + 0x80]
	0x03C6B5C8 STP D13, D12, [X31 + 0x90]
	0x03C6B5CC STP D11, D10, [X31 + 0xA0]
	0x03C6B5D0 STP D9, D8, [X31 + 0xB0]
	0x03C6B5D4 STR X29, [X31 + 0xC0]
	0x03C6B5D8 STP X30, X25, [X31 + 0xD0]
	0x03C6B5DC STP X24, X23, [X31 + 0xE0]
	0x03C6B5E0 STP X22, X21, [X31 + 0xF0]
	0x03C6B5E4 STP X20, X19, [X31 + 0x100]
	0x03C6B5E8 ADRP X25, 0x77B000
	0x03C6B5EC ADRP X24, 0x4B4000
	0x03C6B5F0 LDRB W8, [X25 + 0x5D6]
	0x03C6B5F4 LDR X24, [X24 + 0x5C8]
	0x03C6B5F8 MOV X19, X4
	0x03C6B5FC MOV W23, W3
	0x03C6B600 MOV W22, W2
	0x03C6B604 MOV X20, X1
	0x03C6B608 MOV X21, X0
	0x03C6B60C MOV V8.16B, V7.16B
	0x03C6B610 MOV V9.16B, V6.16B
	0x03C6B614 MOV V10.16B, V5.16B
	0x03C6B618 MOV V11.16B, V4.16B
	0x03C6B61C MOV V12.16B, V3.16B
	0x03C6B620 MOV V13.16B, V2.16B
	0x03C6B624 MOV V14.16B, V1.16B
	0x03C6B628 MOV V15.16B, V0.16B
	0x03C6B62C TBNZ X8, 0x0, 0x3C6B650
	0x03C6B630 ADRP X0, 0x4B4000
	0x03C6B634 LDR X0, [X0 + 0x5C8]
	0x03C6B638 BL 0x1C16CF4
	0x03C6B63C ADRP X0, 0x4AF000
	0x03C6B640 LDR X0, [X0 + 0x4C0]
	0x03C6B644 BL 0x1C16CF4
	0x03C6B648 MOVZ W8, 0x1
	0x03C6B64C STRB W8, [X25 + 0x5D6]
	0x03C6B650 LDR X0, [X24]
	0x03C6B654 MOVI V0.2D, 0x0
	0x03C6B658 STP V0, V0, [X31 + 0x60]
	0x03C6B65C STP V0, V0, [X31 + 0x40]
	0x03C6B660 LDR W8, [X0 + 0xE0]
	0x03C6B664 CBNZ W8, 0x3C6B66C
	0x03C6B668 BL 0x1C16DFC
	0x03C6B66C BL 0x3C67304
	0x03C6B670 CBNZ W23, 0x3C6B6CC
	0x03C6B674 ADRP X23, 0x4AF000
	0x03C6B678 LDR X23, [X23 + 0x4C0]
	0x03C6B67C LDR X0, [X23]
	0x03C6B680 LDR W8, [X0 + 0xE0]
	0x03C6B684 CBNZ W8, 0x3C6B690
	0x03C6B688 BL 0x1C16DFC
	0x03C6B68C LDR X0, [X23]
	0x03C6B690 LDR X8, [X24]
	0x03C6B694 LDR X9, [X0 + 0xB8]
	0x03C6B698 LDR W10, [X8 + 0xE0]
	0x03C6B69C LDR W23, [X9 + 0x18]
	0x03C6B6A0 CBNZ W10, 0x3C6B6AC
	0x03C6B6A4 MOV X0, X8
	0x03C6B6A8 BL 0x1C16DFC
	0x03C6B6AC MOVZ W1, 0x2
	0x03C6B6B0 MOV W0, W23
	0x03C6B6B4 MOV V0.16B, V15.16B
	0x03C6B6B8 MOV V1.16B, V14.16B
	0x03C6B6BC MOV V2.16B, V13.16B
	0x03C6B6C0 MOV V3.16B, V12.16B
	0x03C6B6C4 BL 0x3C690A4
	0x03C6B6C8 MOV W23, W0
	0x03C6B6CC MOVI V0.2D, 0x0
	0x03C6B6D0 STP V0, V0, [X31 + 0x20]
	0x03C6B6D4 STP V0, V0, [X31]
	0x03C6B6D8 AND W3, W22, 0x1
	0x03C6B6DC ADD X0, X31, 0x0
	0x03C6B6E0 MOV V0.16B, V15.16B
	0x03C6B6E4 MOV V1.16B, V14.16B
	0x03C6B6E8 MOV V2.16B, V13.16B
	0x03C6B6EC MOV V3.16B, V12.16B
	0x03C6B6F0 MOV V4.16B, V11.16B
	0x03C6B6F4 MOV V5.16B, V10.16B
	0x03C6B6F8 MOV V6.16B, V9.16B
	0x03C6B6FC MOV V7.16B, V8.16B
	0x03C6B700 MOV X1, X21
	0x03C6B704 MOV X2, X20
	0x03C6B708 MOV W4, W23
	0x03C6B70C MOV X5, X19
	0x03C6B710 MOV X6, X31
	0x03C6B714 BL 0x3C79FCC
	0x03C6B718 LDP V0, V1, [X31]
	0x03C6B71C LDP V2, V3, [X31 + 0x20]
	0x03C6B720 ADD X0, X31, 0x40
	0x03C6B724 MOV X1, X31
	0x03C6B728 STP V0, V1, [X31 + 0x40]
	0x03C6B72C STP V2, V3, [X31 + 0x60]
	0x03C6B730 BL 0x3C79FF4
	0x03C6B734 LDP X20, X19, [X31 + 0x100]
	0x03C6B738 LDP X22, X21, [X31 + 0xF0]
	0x03C6B73C LDP X24, X23, [X31 + 0xE0]
	0x03C6B740 LDP X30, X25, [X31 + 0xD0]
	0x03C6B744 LDR X29, [X31 + 0xC0]
	0x03C6B748 LDP D9, D8, [X31 + 0xB0]
	0x03C6B74C LDP D11, D10, [X31 + 0xA0]
	0x03C6B750 LDP D13, D12, [X31 + 0x90]
	0x03C6B754 LDP D15, D14, [X31 + 0x80]
	0x03C6B758 ADD X31, X31, 0x110
	0x03C6B75C RET
	0x03C6B760 STP D13, D12, [X31 - 0x60]!
	0x03C6B764 STP D11, D10, [X31 + 0x10]
	0x03C6B768 STP D9, D8, [X31 + 0x20]
	0x03C6B76C STR X30, [X31 + 0x30]
	0x03C6B770 STP X22, X21, [X31 + 0x40]
	0x03C6B774 STP X20, X19, [X31 + 0x50]
	0x03C6B778 ADRP X21, 0x77B000
	0x03C6B77C LDRB W8, [X21 + 0x5D7]
	0x03C6B780 MOV X19, X1
	0x03C6B784 MOV X20, X0
	0x03C6B788 MOV V8.16B, V3.16B
	0x03C6B78C MOV V9.16B, V2.16B
	0x03C6B790 MOV V10.16B, V1.16B
	0x03C6B794 MOV V11.16B, V0.16B
	0x03C6B798 TBNZ X8, 0x0, 0x3C6B7B0
	0x03C6B79C ADRP X0, 0x4AF000
	0x03C6B7A0 LDR X0, [X0 + 0x4C0]
	0x03C6B7A4 BL 0x1C16CF4
	0x03C6B7A8 MOVZ W8, 0x1
	0x03C6B7AC STRB W8, [X21 + 0x5D7]
	0x03C6B7B0 ADRP X22, 0x76E000
	0x03C6B7B4 ADRP X21, 0x4AF000
	0x03C6B7B8 LDRB W8, [X22 + 0x78F]
	0x03C6B7BC LDR X21, [X21 + 0x4C0]
	0x03C6B7C0 CBNZ W8, 0x3C6B7D8
	0x03C6B7C4 ADRP X0, 0x490000
	0x03C6B7C8 LDR X0, [X0 + 0xF08]
	0x03C6B7CC BL 0x1C16CF4
	0x03C6B7D0 MOVZ W8, 0x1
	0x03C6B7D4 STRB W8, [X22 + 0x78F]
	0x03C6B7D8 ADRP X8, 0x490000
	0x03C6B7DC LDR X8, [X8 + 0xF08]
	0x03C6B7E0 LDR X0, [X21]
	0x03C6B7E4 LDR X8, [X8]
	0x03C6B7E8 LDR W9, [X0 + 0xE0]
	0x03C6B7EC LDR X8, [X8 + 0xB8]
	0x03C6B7F0 LDP S13, S12, [X8]
	0x03C6B7F4 CBNZ W9, 0x3C6B7FC
	0x03C6B7F8 BL 0x1C16DFC
	0x03C6B7FC MOV V0.16B, V11.16B
	0x03C6B800 MOV V1.16B, V10.16B
	0x03C6B804 MOV V2.16B, V9.16B
	0x03C6B808 MOV V3.16B, V8.16B
	0x03C6B80C MOV X0, X20
	0x03C6B810 MOV X1, X19
	0x03C6B814 LDP X20, X19, [X31 + 0x50]
	0x03C6B818 LDP X22, X21, [X31 + 0x40]
	0x03C6B81C LDR X30, [X31 + 0x30]
	0x03C6B820 LDP D9, D8, [X31 + 0x20]
	0x03C6B824 LDP D11, D10, [X31 + 0x10]
	0x03C6B828 MOV V4.16B, V13.16B
	0x03C6B82C MOV V5.16B, V12.16B
	0x03C6B830 LDP D13, D12, [X31], #0x60
	0x03C6B834 B 0x3C6B838
	0x03C6B838 STP D13, D12, [X31 - 0x80]!
	0x03C6B83C STP D11, D10, [X31 + 0x10]
	0x03C6B840 STP D9, D8, [X31 + 0x20]
	0x03C6B844 STR X30, [X31 + 0x30]
	0x03C6B848 STP X26, X25, [X31 + 0x40]
	0x03C6B84C STP X24, X23, [X31 + 0x50]
	0x03C6B850 STP X22, X21, [X31 + 0x60]
	0x03C6B854 STP X20, X19, [X31 + 0x70]
	0x03C6B858 ADRP X21, 0x77B000
	0x03C6B85C ADRP X23, 0x4B4000
	0x03C6B860 LDRB W8, [X21 + 0x5D8]
	0x03C6B864 LDR X23, [X23 + 0x5C8]
	0x03C6B868 MOV V8.16B, V5.16B
	0x03C6B86C MOV V9.16B, V4.16B
	0x03C6B870 MOV X20, X1
	0x03C6B874 MOV X19, X0
	0x03C6B878 MOV V10.16B, V3.16B
	0x03C6B87C MOV V11.16B, V2.16B
	0x03C6B880 MOV V12.16B, V1.16B
	0x03C6B884 MOV V13.16B, V0.16B
	0x03C6B888 TBNZ X8, 0x0, 0x3C6B8C4
	0x03C6B88C ADRP X0, 0x4B3000
	0x03C6B890 LDR X0, [X0 + 0xBD0]
	0x03C6B894 BL 0x1C16CF4
	0x03C6B898 ADRP X0, 0x4AF000
	0x03C6B89C LDR X0, [X0 + 0x890]
	0x03C6B8A0 BL 0x1C16CF4
	0x03C6B8A4 ADRP X0, 0x4B4000
	0x03C6B8A8 LDR X0, [X0 + 0x5C8]
	0x03C6B8AC BL 0x1C16CF4
	0x03C6B8B0 ADRP X0, 0x4AF000
	0x03C6B8B4 LDR X0, [X0 + 0x4C0]
	0x03C6B8B8 BL 0x1C16CF4
	0x03C6B8BC MOVZ W8, 0x1
	0x03C6B8C0 STRB W8, [X21 + 0x5D8]
	0x03C6B8C4 LDR X0, [X23]
	0x03C6B8C8 ADRP X21, 0x4AF000
	0x03C6B8CC LDR W8, [X0 + 0xE0]
	0x03C6B8D0 LDR X21, [X21 + 0x4C0]
	0x03C6B8D4 CBNZ W8, 0x3C6B8DC
	0x03C6B8D8 BL 0x1C16DFC
	0x03C6B8DC ADRP X22, 0x4B3000
	0x03C6B8E0 LDR X22, [X22 + 0xBD0]
	0x03C6B8E4 BL 0x3C67304
	0x03C6B8E8 LDR X0, [X21]
	0x03C6B8EC LDR W8, [X0 + 0xE0]
	0x03C6B8F0 CBNZ W8, 0x3C6B8FC
	0x03C6B8F4 BL 0x1C16DFC
	0x03C6B8F8 LDR X0, [X21]
	0x03C6B8FC LDR X8, [X0 + 0xB8]
	0x03C6B900 MOVZ W1, 0x2
	0x03C6B904 LDR W0, [X8 + 0x1C]
	0x03C6B908 BL 0x3C68E54
	0x03C6B90C LDR X8, [X22]
	0x03C6B910 MOV W21, W0
	0x03C6B914 LDR W9, [X8 + 0xE0]
	0x03C6B918 CBNZ W9, 0x3C6B928
	0x03C6B91C MOV X0, X8
	0x03C6B920 BL 0x1C16DFC
	0x03C6B924 LDR X8, [X22]
	0x03C6B928 LDR X8, [X8 + 0xB8]
	0x03C6B92C LDR X8, [X8 + 0x18]
	0x03C6B930 CMP X19, X8
	0x03C6B934 B.NE 0x3C6B95C
	0x03C6B938 ADRP X8, 0x4AF000
	0x03C6B93C LDR X8, [X8 + 0x890]
	0x03C6B940 LDR X0, [X8]
	0x03C6B944 LDR W8, [X0 + 0xE0]
	0x03C6B948 CBNZ W8, 0x3C6B950
	0x03C6B94C BL 0x1C16DFC
	0x03C6B950 BL 0x3C6BB04
	0x03C6B954 CMP X0, X20
	0x03C6B958 B.EQ 0x3C6BA8C
	0x03C6B95C ADRP X24, 0x77B000
	0x03C6B960 ADRP X25, 0x4EE000
	0x03C6B964 LDRB W8, [X24 + 0x510]
	0x03C6B968 LDR X25, [X25 + 0x20]
	0x03C6B96C TBNZ X8, 0x0, 0x3C6B984
	0x03C6B970 ADRP X0, 0x4EE000
	0x03C6B974 LDR X0, [X0 + 0x20]
	0x03C6B978 BL 0x1C16CF4
	0x03C6B97C MOVZ W8, 0x1
	0x03C6B980 STRB W8, [X24 + 0x510]
	0x03C6B984 LDR X8, [X25]
	0x03C6B988 LDR X8, [X8 + 0xB8]
	0x03C6B98C LDR X22, [X8]
	0x03C6B990 CBZ X22, 0x3C6BB00
	0x03C6B994 ADRP X26, 0x77B000
	0x03C6B998 LDR X8, [X26 + 0x4A8]
	0x03C6B99C CBNZ X8, 0x3C6B9B4
	0x03C6B9A0 ADRP X0, 0xFFFFFFFFFCE86000
	0x03C6B9A4 ADD X0, X0, 0x566
	0x03C6B9A8 BL 0x1C16CB8
	0x03C6B9AC MOV X8, X0
	0x03C6B9B0 STR X0, [X26 + 0x4A8]
	0x03C6B9B4 MOV X0, X22
	0x03C6B9B8 BLR X8
	0x03C6B9BC CMP W0, 0x7
	0x03C6B9C0 B.NE 0x3C6B9FC
	0x03C6B9C4 CBZ X20, 0x3C6BB00
	0x03C6B9C8 MOV X0, X20
	0x03C6B9CC MOV V0.16B, V13.16B
	0x03C6B9D0 MOV V1.16B, V12.16B
	0x03C6B9D4 MOV V2.16B, V11.16B
	0x03C6B9D8 MOV V3.16B, V10.16B
	0x03C6B9DC MOV X1, X19
	0x03C6B9E0 MOV W2, W21
	0x03C6B9E4 MOV W3, W31
	0x03C6B9E8 MOV W4, W31
	0x03C6B9EC MOV W5, W31
	0x03C6B9F0 MOV W6, W31
	0x03C6B9F4 BL 0x3C7493C
	0x03C6B9F8 B 0x3C6BA8C
	0x03C6B9FC LDRB W8, [X24 + 0x510]
	0x03C6BA00 TBNZ X8, 0x0, 0x3C6BA18
	0x03C6BA04 ADRP X0, 0x4EE000
	0x03C6BA08 LDR X0, [X0 + 0x20]

ISIL:
	001 Move [X31-128], D11
	002 Move [X31-120], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X29
	006 Move [X31+40], X30
	007 Move [X31+48], X28
	008 Move [X31+56], X27
	009 Move [X31+64], X26
	010 Move [X31+72], X25
	011 Move [X31+80], X24
	012 Move [X31+88], X23
	013 Move [X31+96], X22
	014 Move [X31+104], X21
	015 Move [X31+112], X20
	016 Move [X31+120], X19
	017 Move X22, 0x77C000
	018 Move W8, [X22+1486]
	019 Move X21, X5
	020 Move X24, X4
	021 Move W20, W3
	022 Move W25, W2
	023 Move X19, X1
	024 Move W23, W0
	025 Move V11, V3
	026 Move V8, V2
	027 Move V10, V1
	028 Move V9, V0
	029 Move TEMP, X8
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {47}
	033 Move X0, 0x4B5000
	034 Move X0, [X0+1480]
	035 Call 0x1C17CF4
	036 Move X0, 0x4B0000
	037 Move X0, [X0+1216]
	038 Call 0x1C17CF4
	039 Move X0, 0x489000
	040 Move X0, [X0+1432]
	041 Call 0x1C17CF4
	042 Move X0, 0x489000
	043 Move X0, [X0+2440]
	044 Call 0x1C17CF4
	045 Move W8, 1
	046 Move [X22+1486], W8
	047 Move X28, 0x77C000
	048 Move X26, 0x4EF000
	049 Move W8, [X28+1296]
	050 Move X26, [X26+32]
	051 Move TEMP, X8
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfEqual {60}
	055 Move X0, 0x4EF000
	056 Move X0, [X0+32]
	057 Call 0x1C17CF4
	058 Move W8, 1
	059 Move [X28+1296], W8
	060 Move X8, [X26]
	061 Move X8, [X8+184]
	062 Move X22, [X8]
	063 Compare X22, 0
	064 JumpIfEqual {607}
	065 Move X27, 0x77C000
	066 Move X8, [X27+1192]
	067 Compare X8, 0
	068 JumpIfNotEqual {74}
	069 Move X0, -51875840
	070 Add X0, X0, 1382
	071 Call 0x1C17CB8
	072 Move X8, X0
	073 Move [X27+1192], X0
	074 Move X27, 0x4B5000
	075 Move X27, [X27+1480]
	076 Move X0, X22
	077 NotImplemented "Instruction BLR not yet implemented."
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Move W29, W31
	080 Move X9, -51195904
	081 Move W8, W0
	082 Add X9, X9, 3634
	083 NotImplemented "Instruction ADR not yet implemented."
	084 Move W11, [X9]
	085 Add X10, X10, X11
	086 CallNoReturn X10
	087 Move X0, X22
	088 Call Event.get_mousePosition, X0
	089 Add S2, S10, S11
	090 NotImplemented "Instruction FCMP not yet implemented."
	091 Move W29, W31
	092 NotImplemented "Instruction FCMP not yet implemented."
	093 NotImplemented "Instruction FCMP not yet implemented."
	094 Add S1, S9, S8
	095 NotImplemented "Instruction FCMP not yet implemented."
	096 Move X0, [X27]
	097 Move W8, [X0+224]
	098 Compare W8, 0
	099 JumpIfNotEqual {101}
	100 Call 0x1C17DFC
	101 Move W0, W23
	102 Call GUIUtility.set_hotControl, X0
	103 Move W0, W23
	104 Call GUIUtility.set_keyboardControl, X0
	105 Compare X21, 0
	106 JumpIfEqual {607}
	107 Move W24, 1
	108 Move [X21+43], W24
	109 Move W8, [X28+1296]
	110 Move TEMP, X8
	111 And TEMP, TEMP, 1
	112 Compare TEMP, 1
	113 JumpIfEqual {118}
	114 Move X0, 0x4EF000
	115 Move X0, [X0+32]
	116 Call 0x1C17CF4
	117 Move [X28+1296], W24
	118 Move X8, [X26]
	119 Move X8, [X8+184]
	120 Move X0, [X8]
	121 Compare X0, 0
	122 JumpIfEqual {607}
	123 Call Event.get_mousePosition, X0
	124 Move X0, X21
	125 Move X1, X31
	126 Call TextEditor.MoveCursorToPosition, X0, X1
	127 Move W8, [X28+1296]
	128 Move TEMP, X8
	129 And TEMP, TEMP, 1
	130 Compare TEMP, 1
	131 JumpIfEqual {137}
	132 Move X0, 0x4EF000
	133 Move X0, [X0+32]
	134 Call 0x1C17CF4
	135 Move W8, 1
	136 Move [X28+1296], W8
	137 Move X8, [X26]
	138 Move X8, [X8+184]
	139 Move X24, [X8]
	140 Compare X24, 0
	141 JumpIfEqual {607}
	142 Move X25, 0x77C000
	143 Move X8, [X25+1136]
	144 Compare X8, 0
	145 JumpIfNotEqual {151}
	146 Move X0, -51793920
	147 Add X0, X0, 1462
	148 Call 0x1C17CB8
	149 Move X8, X0
	150 Move [X25+1136], X0
	151 Move X0, X24
	152 NotImplemented "Instruction BLR not yet implemented."
	153 NotImplemented "Instruction CMP not yet implemented."
	154 Move X8, 0x4B0000
	155 Move X8, [X8+1216]
	156 Move X0, [X8]
	157 Move W8, [X0+224]
	158 Compare W8, 0
	159 JumpIfNotEqual {161}
	160 Call 0x1C17DFC
	161 Call GUI.get_skin
	162 Compare X0, 0
	163 JumpIfEqual {607}
	164 Move X8, [X0+224]
	165 Compare X8, 0
	166 JumpIfEqual {607}
	167 Move W8, [X8+16]
	168 Compare W8, 0
	169 JumpIfEqual {181}
	170 Move X0, X21
	171 Move X1, X31
	172 Call TextEditor.SelectCurrentWord, X0
	173 Move X0, X21
	174 Move W1, W31
	175 Move X2, X31
	176 Call TextEditor.DblClickSnap, X0, X1
	177 Move W1, 1
	178 Move X0, X21
	179 Move X2, X31
	180 Call TextEditor.MouseDragSelectsWholeWords, X0, X1
	181 Move W8, [X28+1296]
	182 Move TEMP, X8
	183 And TEMP, TEMP, 1
	184 Compare TEMP, 1
	185 JumpIfEqual {191}
	186 Move X0, 0x4EF000
	187 Move X0, [X0+32]
	188 Call 0x1C17CF4
	189 Move W8, 1
	190 Move [X28+1296], W8
	191 Move X8, [X26]
	192 Move X8, [X8+184]
	193 Move X24, [X8]
	194 Compare X24, 0
	195 JumpIfEqual {607}
	196 Move X8, [X25+1136]
	197 Compare X8, 0
	198 JumpIfNotEqual {204}
	199 Move X0, -51793920
	200 Add X0, X0, 1462
	201 Call 0x1C17CB8
	202 Move X8, X0
	203 Move [X25+1136], X0
	204 Move X0, X24
	205 NotImplemented "Instruction BLR not yet implemented."
	206 NotImplemented "Instruction CMP not yet implemented."
	207 Move X8, 0x4B0000
	208 Move X8, [X8+1216]
	209 Move X0, [X8]
	210 Move W8, [X0+224]
	211 Compare W8, 0
	212 JumpIfNotEqual {214}
	213 Call 0x1C17DFC
	214 Call GUI.get_skin
	215 Compare X0, 0
	216 JumpIfEqual {607}
	217 Move X8, [X0+224]
	218 Compare X8, 0
	219 JumpIfEqual {607}
	220 Move W8, [X8+17]
	221 Compare W8, 0
	222 JumpIfEqual {356}
	223 Move X0, X21
	224 Move X1, X31
	225 Call TextEditor.SelectCurrentParagraph, X0
	226 Move W1, 1
	227 Move X0, X21
	228 Move X2, X31
	229 Call TextEditor.MouseDragSelectsWholeWords, X0, X1
	230 Move W1, 1
	231 Move X0, X21
	232 Move X2, X31
	233 Call TextEditor.DblClickSnap, X0, X1
	234 Move X0, [X27]
	235 Move W8, [X0+224]
	236 Compare W8, 0
	237 JumpIfNotEqual {239}
	238 Call 0x1C17DFC
	239 Call GUIUtility.get_hotControl
	240 NotImplemented "Instruction CMP not yet implemented."
	241 Compare X21, 0
	242 JumpIfEqual {607}
	243 Move X0, X21
	244 Move W1, W31
	245 Move X2, X31
	246 Call TextEditor.MouseDragSelectsWholeWords, X0, X1
	247 Move X0, [X27]
	248 Move W8, [X0+224]
	249 Compare W8, 0
	250 JumpIfNotEqual {252}
	251 Call 0x1C17DFC
	252 Move W0, W31
	253 Call GUIUtility.set_hotControl, X0
	254 Move X0, [X27]
	255 Move W8, [X0+224]
	256 Compare W8, 0
	257 JumpIfNotEqual {259}
	258 Call 0x1C17DFC
	259 Call GUIUtility.get_hotControl
	260 NotImplemented "Instruction CMP not yet implemented."
	261 Move X24, 0x77C000
	262 Move X8, [X24+1096]
	263 Compare X8, 0
	264 JumpIfNotEqual {270}
	265 Move X0, -51810304
	266 Add X0, X0, 1328
	267 Call 0x1C17CB8
	268 Move X8, X0
	269 Move [X24+1096], X0
	270 Move X0, X22
	271 NotImplemented "Instruction BLR not yet implemented."
	272 Move W8, [X28+1296]
	273 Move W24, W0
	274 Move TEMP, X8
	275 And TEMP, TEMP, 1
	276 Compare TEMP, 1
	277 JumpIfEqual {283}
	278 Move X0, 0x4EF000
	279 Move X0, [X0+32]
	280 Call 0x1C17CF4
	281 Move W8, 1
	282 Move [X28+1296], W8
	283 Move X8, [X26]
	284 Move X8, [X8+184]
	285 Move X0, [X8]
	286 Compare X0, 0
	287 JumpIfEqual {607}
	288 Call Event.get_mousePosition, X0
	289 Compare X21, 0
	290 JumpIfEqual {607}
	291 Move X0, X21
	292 Move X1, X31
	293 Move TEMP, X24
	294 And TEMP, TEMP, 1
	295 Compare TEMP, 1
	296 JumpIfEqual {355}
	297 Call TextEditor.SelectToPosition, X0, X1
	298 Move X0, [X27]
	299 Move W8, [X0+224]
	300 Compare W8, 0
	301 JumpIfNotEqual {303}
	302 Call 0x1C17DFC
	303 Call GUIUtility.get_keyboardControl
	304 NotImplemented "Instruction CMP not yet implemented."
	305 Compare X21, 0
	306 JumpIfEqual {607}
	307 Move X0, X21
	308 Move X1, X22
	309 Move X2, X31
	310 Call TextEditor.HandleKeyEvent, X0, X1
	311 Move TEMP, X0
	312 And TEMP, TEMP, 1
	313 Compare TEMP, 1
	314 JumpIfNotEqual {447}
	315 Move X0, X22
	316 Call Event.Use, X0
	317 Move X0, X21
	318 Move X1, X31
	319 Call TextEditor.get_text, X0
	320 Compare X19, 0
	321 JumpIfEqual {607}
	322 Move X1, X0
	323 Move X0, X19
	324 Call GUIContent.set_text, X0, X1
	325 Move W29, 1
	326 Move X0, [X27]
	327 Move W8, [X0+224]
	328 Compare W8, 0
	329 JumpIfNotEqual {331}
	330 Call 0x1C17DFC
	331 Call GUIUtility.get_keyboardControl
	332 NotImplemented "Instruction CMP not yet implemented."
	333 Compare X19, 0
	334 JumpIfEqual {607}
	335 Compare X21, 0
	336 JumpIfEqual {607}
	337 Move X1, [X19+16]
	338 Move X0, X21
	339 Move X2, X31
	340 Call TextEditor.DrawCursor, X0, X1
	341 Compare X24, 0
	342 JumpIfEqual {607}
	343 Move X0, X24
	344 Move V0, V9
	345 Move V1, V10
	346 Move V2, V8
	347 Move V3, V11
	348 Move X1, X19
	349 Move W2, W23
	350 Move W3, W31
	351 Move W4, W31
	352 Move W5, W31
	353 Move W6, W31
	354 Call GUIStyle.Draw, X0, X1, X2, X3, X4, X5, X6, X7
	355 Call TextEditor.MoveCursorToPosition, X0, X1
	356 Move X0, X22
	357 Call Event.Use, X0
	358 Move W29, W31
	359 Move X0, [X27]
	360 Move W8, [X0+224]
	361 Compare W8, 0
	362 JumpIfNotEqual {364}
	363 Call 0x1C17DFC
	364 Call GUIUtility.get_keyboardControl
	365 NotImplemented "Instruction CMP not yet implemented."
	366 Move X0, [X27]
	367 Move W8, [X0+224]
	368 Compare W8, 0
	369 JumpIfNotEqual {371}
	370 Call 0x1C17DFC
	371 Move X23, 0x77C000
	372 Move X8, [X23+2184]
	373 Compare X8, 0
	374 JumpIfNotEqual {380}
	375 Move X0, -51662848
	376 Add X0, X0, 1332
	377 Call 0x1C17CB8
	378 Move X8, X0
	379 Move [X23+2184], X0
	380 Move W0, 1
	381 NotImplemented "Instruction BLR not yet implemented."
	382 Compare W29, 0
	383 JumpIfEqual {472}
	384 Move X8, 0x4B0000
	385 Move X8, [X8+1216]
	386 Move X0, [X8]
	387 Move W8, [X0+224]
	388 Compare W8, 0
	389 JumpIfNotEqual {391}
	390 Call 0x1C17DFC
	391 Move X23, 0x77C000
	392 Move X8, [X23+1360]
	393 Compare X8, 0
	394 JumpIfNotEqual {400}
	395 Move X0, -51859456
	396 Add X0, X0, 1821
	397 Call 0x1C17CB8
	398 Move X8, X0
	399 Move [X23+1360], X0
	400 Move W0, 1
	401 NotImplemented "Instruction BLR not yet implemented."
	402 Compare X21, 0
	403 JumpIfEqual {607}
	404 Move X0, X21
	405 Move X1, X31
	406 Call TextEditor.get_text, X0
	407 Compare X19, 0
	408 JumpIfEqual {607}
	409 Move X1, X0
	410 Move X0, X19
	411 Call GUIContent.set_text, X0, X1
	412 Move TEMP, X20
	413 And TEMP, TEMP, -2147483648
	414 Compare TEMP, -2147483648
	415 JumpIfEqual {428}
	416 Move X0, [X19+16]
	417 Compare X0, 0
	418 JumpIfEqual {607}
	419 Move W8, [X0+16]
	420 NotImplemented "Instruction CMP not yet implemented."
	421 Move W1, W31
	422 Move W2, W20
	423 Move X3, X31
	424 Call String.Substring, X0, X1, X2
	425 Move X1, X0
	426 Move X0, X19
	427 Call GUIContent.set_text, X0, X1
	428 Move X0, X22
	429 Move X20, [X31+112]
	430 Move X19, [X31+120]
	431 Move X22, [X31+96]
	432 Move X21, [X31+104]
	433 Move X24, [X31+80]
	434 Move X23, [X31+88]
	435 Move X26, [X31+64]
	436 Move X25, [X31+72]
	437 Move X28, [X31+48]
	438 Move X27, [X31+56]
	439 Move X29, [X31+32]
	440 Move X30, [X31+40]
	441 Move D9, [X31+16]
	442 Move D8, [X31+24]
	443 Move D11, [X31+128]
	444 Move D10, [X31+136]
	445 Call Event.Use, X0
	446 Return 
	447 Move X26, 0x77C000
	448 Move X8, [X26+1160]
	449 Compare X8, 0
	450 JumpIfNotEqual {456}
	451 Move X0, -51695616
	452 Add X0, X0, 1451
	453 Call 0x1C17CB8
	454 Move X8, X0
	455 Move [X26+1160], X0
	456 Move X0, X22
	457 NotImplemented "Instruction BLR not yet implemented."
	458 NotImplemented "Instruction CMP not yet implemented."
	459 Move X26, 0x77C000
	460 Move X8, [X26+1144]
	461 Compare X8, 0
	462 JumpIfNotEqual {468}
	463 Move X0, -51843072
	464 Add X0, X0, 2504
	465 Call 0x1C17CB8
	466 Move X8, X0
	467 Move [X26+1144], X0
	468 Move X0, X22
	469 NotImplemented "Instruction BLR not yet implemented."
	470 And W8, W0, 0xFFFF
	471 NotImplemented "Instruction CMP not yet implemented."
	472 Move X20, [X31+112]
	473 Move X19, [X31+120]
	474 Move X22, [X31+96]
	475 Move X21, [X31+104]
	476 Move X24, [X31+80]
	477 Move X23, [X31+88]
	478 Move X26, [X31+64]
	479 Move X25, [X31+72]
	480 Move X28, [X31+48]
	481 Move X27, [X31+56]
	482 Move X29, [X31+32]
	483 Move X30, [X31+40]
	484 Move D9, [X31+16]
	485 Move D8, [X31+24]
	486 Move D11, [X31+128]
	487 Move D10, [X31+136]
	488 Return 
	489 Move X8, [X26+1144]
	490 Compare X8, 0
	491 JumpIfNotEqual {497}
	492 Move X0, -51843072
	493 Add X0, X0, 2504
	494 Call 0x1C17CB8
	495 Move X8, X0
	496 Move [X26+1144], X0
	497 Move X0, X22
	498 NotImplemented "Instruction BLR not yet implemented."
	499 And W8, W0, 0xFFFF
	500 Move W26, W0
	501 NotImplemented "Instruction CMP not yet implemented."
	502 Move TEMP, X25
	503 And TEMP, TEMP, 1
	504 Compare TEMP, 1
	505 JumpIfEqual {521}
	506 Move X25, 0x77C000
	507 Move X8, [X25+1096]
	508 Compare X8, 0
	509 JumpIfNotEqual {515}
	510 Move X0, -51810304
	511 Add X0, X0, 1328
	512 Call 0x1C17CB8
	513 Move X8, X0
	514 Move [X25+1096], X0
	515 Move X0, X22
	516 NotImplemented "Instruction BLR not yet implemented."
	517 Move TEMP, X0
	518 And TEMP, TEMP, 4
	519 Compare TEMP, 4
	520 JumpIfNotEqual {472}
	521 Compare X24, 0
	522 JumpIfEqual {607}
	523 Move X25, 0x77C000
	524 Move X8, [X25+1832]
	525 Compare X8, 0
	526 JumpIfNotEqual {532}
	527 Move X0, -51785728
	528 Add X0, X0, 2374
	529 Call 0x1C17CB8
	530 Move X8, X0
	531 Move [X25+1832], X0
	532 Move X0, X24
	533 NotImplemented "Instruction BLR not yet implemented."
	534 Move X8, 0x489000
	535 Move X8, [X8+1432]
	536 Move X24, X0
	537 Move X8, [X8]
	538 Move W9, [X8+224]
	539 Compare W9, 0
	540 JumpIfNotEqual {543}
	541 Move X0, X8
	542 Call 0x1C17DFC
	543 Move X0, X24
	544 Move X1, X31
	545 Call Object.op_Implicit, X0
	546 Move TEMP, X0
	547 And TEMP, TEMP, 1
	548 Compare TEMP, 1
	549 JumpIfEqual {561}
	550 Move X8, 0x4B0000
	551 Move X8, [X8+1216]
	552 Move X0, [X8]
	553 Move W8, [X0+224]
	554 Compare W8, 0
	555 JumpIfNotEqual {557}
	556 Call 0x1C17DFC
	557 Call GUI.get_skin
	558 Compare X0, 0
	559 JumpIfEqual {607}
	560 Move X24, [X0+24]
	561 Compare X24, 0
	562 JumpIfEqual {607}
	563 Move X0, X24
	564 Move W1, W26
	565 Move X2, X31
	566 And W25, W26, 0xFFFF
	567 Call Font.HasCharacter, X0, X1
	568 NotImplemented "Instruction CMP not yet implemented."
	569 Move TEMP, X0
	570 And TEMP, TEMP, 1
	571 Compare TEMP, 1
	572 JumpIfEqual {603}
	573 And W31, W26, 0xFFFF
	574 Move X0, [X27]
	575 Move W8, [X0+224]
	576 Compare W8, 0
	577 JumpIfNotEqual {579}
	578 Call 0x1C17DFC
	579 Move X24, 0x77C000
	580 Move X8, [X24+2288]
	581 Compare X8, 0
	582 JumpIfNotEqual {588}
	583 Move X0, -51720192
	584 Add X0, X0, 333
	585 Call 0x1C17CB8
	586 Move X8, X0
	587 Move [X24+2288], X0
	588 NotImplemented "Instruction BLR not yet implemented."
	589 Compare X0, 0
	590 JumpIfEqual {607}
	591 Move W8, [X0+16]
	592 NotImplemented "Instruction CMP not yet implemented."
	593 NotImplemented "Instruction CSET not yet implemented."
	594 NotImplemented "Instruction CMP not yet implemented."
	595 Move X8, 0x489000
	596 Move X8, [X8+2440]
	597 Move X0, X21
	598 Move X2, X31
	599 Move X1, [X8]
	600 Call TextEditor.ReplaceSelection, X0, X1
	601 Move X0, X22
	602 Call Event.Use, X0
	603 Move X0, X21
	604 Move W1, W26
	605 Move X2, X31
	606 Call TextEditor.Insert, X0, X1
	607 Call 0x1C17F20

Method: System.Void HandleTextFieldEventForDesktopWithForcedKeyboard(UnityEngine.Rect position, System.Int32 id, UnityEngine.GUIContent content, System.Boolean multiline, System.Int32 maxLength, UnityEngine.GUIStyle style, System.String secureText, UnityEngine.TextEditor editor)

Disassembly:
	0x03C6AA04 B 0x3C6A650
	0x03C6AA08 BL 0x1C16F20
	0x03C6AA0C STP X30, X21, [X31 - 0x20]!
	0x03C6AA10 STP X20, X19, [X31 + 0x10]
	0x03C6AA14 ADRP X20, 0x77C000
	0x03C6AA18 ADRP X21, 0x4B5000
	0x03C6AA1C LDRB W8, [X20 + 0x93E]
	0x03C6AA20 LDR X21, [X21 + 0x5C8]
	0x03C6AA24 MOV W19, W0
	0x03C6AA28 TBNZ X8, 0x0, 0x3C6AA40
	0x03C6AA2C ADRP X0, 0x4B5000
	0x03C6AA30 LDR X0, [X0 + 0x5C8]
	0x03C6AA34 BL 0x1C16CF4
	0x03C6AA38 MOVZ W8, 0x1
	0x03C6AA3C STRB W8, [X20 + 0x93E]
	0x03C6AA40 LDR X0, [X21]
	0x03C6AA44 LDR W8, [X0 + 0xE0]
	0x03C6AA48 CBNZ W8, 0x3C6AA50
	0x03C6AA4C BL 0x1C16DFC
	0x03C6AA50 ADRP X20, 0x77C000
	0x03C6AA54 LDR X1, [X20 + 0x918]
	0x03C6AA58 CBNZ X1, 0x3C6AA70
	0x03C6AA5C ADRP X0, 0xFFFFFFFFFCEC1000
	0x03C6AA60 ADD X0, X0, 0x11A
	0x03C6AA64 BL 0x1C16CB8
	0x03C6AA68 MOV X1, X0
	0x03C6AA6C STR X0, [X20 + 0x918]
	0x03C6AA70 MOV W0, W19
	0x03C6AA74 LDP X20, X19, [X31 + 0x10]
	0x03C6AA78 LDP X30, X21, [X31], #0x20
	0x03C6AA7C BR X1
	0x03C6AA80 STR X30, [X31 - 0x20]!
	0x03C6AA84 STP X20, X19, [X31 + 0x10]
	0x03C6AA88 ADRP X19, 0x77C000
	0x03C6AA8C ADRP X20, 0x4B5000
	0x03C6AA90 LDRB W8, [X19 + 0x941]
	0x03C6AA94 LDR X20, [X20 + 0x5C8]
	0x03C6AA98 TBNZ X8, 0x0, 0x3C6AAB0
	0x03C6AA9C ADRP X0, 0x4B5000
	0x03C6AAA0 LDR X0, [X0 + 0x5C8]
	0x03C6AAA4 BL 0x1C16CF4
	0x03C6AAA8 MOVZ W8, 0x1
	0x03C6AAAC STRB W8, [X19 + 0x941]
	0x03C6AAB0 LDR X0, [X20]
	0x03C6AAB4 LDR W8, [X0 + 0xE0]
	0x03C6AAB8 CBNZ W8, 0x3C6AAC0
	0x03C6AABC BL 0x1C16DFC
	0x03C6AAC0 ADRP X19, 0x77C000
	0x03C6AAC4 LDR X0, [X19 + 0x910]
	0x03C6AAC8 CBNZ X0, 0x3C6AADC
	0x03C6AACC ADRP X0, 0xFFFFFFFFFCEB1000
	0x03C6AAD0 ADD X0, X0, 0x369
	0x03C6AAD4 BL 0x1C16CB8
	0x03C6AAD8 STR X0, [X19 + 0x910]
	0x03C6AADC LDP X20, X19, [X31 + 0x10]
	0x03C6AAE0 LDR X30, [X31], #0x20
	0x03C6AAE4 BR X0
	0x03C6AAE8 STP X30, X21, [X31 - 0x20]!
	0x03C6AAEC STP X20, X19, [X31 + 0x10]
	0x03C6AAF0 ADRP X20, 0x77C000
	0x03C6AAF4 ADRP X21, 0x4B5000
	0x03C6AAF8 LDRB W8, [X20 + 0x942]
	0x03C6AAFC LDR X21, [X21 + 0x5C8]
	0x03C6AB00 MOV W19, W0
	0x03C6AB04 TBNZ X8, 0x0, 0x3C6AB1C
	0x03C6AB08 ADRP X0, 0x4B5000
	0x03C6AB0C LDR X0, [X0 + 0x5C8]
	0x03C6AB10 BL 0x1C16CF4
	0x03C6AB14 MOVZ W8, 0x1
	0x03C6AB18 STRB W8, [X20 + 0x942]
	0x03C6AB1C LDR X0, [X21]
	0x03C6AB20 LDR W8, [X0 + 0xE0]
	0x03C6AB24 CBNZ W8, 0x3C6AB2C
	0x03C6AB28 BL 0x1C16DFC
	0x03C6AB2C ADRP X20, 0x77C000
	0x03C6AB30 LDR X1, [X20 + 0x920]
	0x03C6AB34 CBNZ X1, 0x3C6AB4C
	0x03C6AB38 ADRP X0, 0xFFFFFFFFFCE93000
	0x03C6AB3C ADD X0, X0, 0x8C7
	0x03C6AB40 BL 0x1C16CB8
	0x03C6AB44 MOV X1, X0
	0x03C6AB48 STR X0, [X20 + 0x920]
	0x03C6AB4C MOV W0, W19
	0x03C6AB50 LDP X20, X19, [X31 + 0x10]
	0x03C6AB54 LDP X30, X21, [X31], #0x20
	0x03C6AB58 BR X1
	0x03C6AB5C AND W5, W3, 0x1
	0x03C6AB60 MOV W3, W31
	0x03C6AB64 MOV W4, W31
	0x03C6AB68 MOV W6, W31
	0x03C6AB6C B 0x3C7493C
	0x03C6AB70 LDR X0, [X0 + 0xE0]
	0x03C6AB74 RET
	0x03C6AB78 LDRB W0, [X0 + 0x10]
	0x03C6AB7C RET
	0x03C6AB80 LDRB W0, [X0 + 0x11]
	0x03C6AB84 RET
	0x03C6AB88 STR X30, [X31 - 0x20]!
	0x03C6AB8C STP X20, X19, [X31 + 0x10]
	0x03C6AB90 ADRP X19, 0x77C000
	0x03C6AB94 ADRP X20, 0x4B5000
	0x03C6AB98 LDRB W8, [X19 + 0x93D]
	0x03C6AB9C LDR X20, [X20 + 0x5C8]
	0x03C6ABA0 TBNZ X8, 0x0, 0x3C6ABB8
	0x03C6ABA4 ADRP X0, 0x4B5000
	0x03C6ABA8 LDR X0, [X0 + 0x5C8]
	0x03C6ABAC BL 0x1C16CF4
	0x03C6ABB0 MOVZ W8, 0x1
	0x03C6ABB4 STRB W8, [X19 + 0x93D]
	0x03C6ABB8 LDR X0, [X20]
	0x03C6ABBC LDR W8, [X0 + 0xE0]
	0x03C6ABC0 CBNZ W8, 0x3C6ABC8
	0x03C6ABC4 BL 0x1C16DFC
	0x03C6ABC8 ADRP X19, 0x77C000
	0x03C6ABCC LDR X0, [X19 + 0x908]
	0x03C6ABD0 CBNZ X0, 0x3C6ABE4
	0x03C6ABD4 ADRP X0, 0xFFFFFFFFFCEBE000
	0x03C6ABD8 ADD X0, X0, 0xF08
	0x03C6ABDC BL 0x1C16CB8
	0x03C6ABE0 STR X0, [X19 + 0x908]
	0x03C6ABE4 LDP X20, X19, [X31 + 0x10]
	0x03C6ABE8 LDR X30, [X31], #0x20
	0x03C6ABEC BR X0
	0x03C6ABF0 STR X30, [X31 - 0x20]!
	0x03C6ABF4 STP X20, X19, [X31 + 0x10]
	0x03C6ABF8 ADRP X20, 0x77C000
	0x03C6ABFC LDR X1, [X20 + 0x728]
	0x03C6AC00 MOV X19, X0
	0x03C6AC04 CBNZ X1, 0x3C6AC1C
	0x03C6AC08 ADRP X0, 0xFFFFFFFFFCE9D000
	0x03C6AC0C ADD X0, X0, 0x946
	0x03C6AC10 BL 0x1C16CB8
	0x03C6AC14 MOV X1, X0
	0x03C6AC18 STR X0, [X20 + 0x728]
	0x03C6AC1C MOV X0, X19
	0x03C6AC20 LDP X20, X19, [X31 + 0x10]
	0x03C6AC24 LDR X30, [X31], #0x20
	0x03C6AC28 BR X1
	0x03C6AC2C LDR X0, [X0 + 0x18]
	0x03C6AC30 RET
	0x03C6AC34 STP X30, X19, [X31 - 0x10]!
	0x03C6AC38 ADRP X19, 0x77C000
	0x03C6AC3C LDR X0, [X19 + 0x8F0]
	0x03C6AC40 CBNZ X0, 0x3C6AC54
	0x03C6AC44 ADRP X0, 0xFFFFFFFFFCEAD000
	0x03C6AC48 ADD X0, X0, 0x14D
	0x03C6AC4C BL 0x1C16CB8
	0x03C6AC50 STR X0, [X19 + 0x8F0]
	0x03C6AC54 LDP X30, X19, [X31], #0x10
	0x03C6AC58 BR X0
	0x03C6AC5C STR X30, [X31 - 0x20]!
	0x03C6AC60 STP X20, X19, [X31 + 0x10]
	0x03C6AC64 ADRP X20, 0x77C000
	0x03C6AC68 LDR X1, [X20 + 0x888]
	0x03C6AC6C MOV W19, W0
	0x03C6AC70 CBNZ X1, 0x3C6AC88
	0x03C6AC74 ADRP X0, 0xFFFFFFFFFCEBB000
	0x03C6AC78 ADD X0, X0, 0x534
	0x03C6AC7C BL 0x1C16CB8
	0x03C6AC80 MOV X1, X0
	0x03C6AC84 STR X0, [X20 + 0x888]
	0x03C6AC88 AND W0, W19, 0x1
	0x03C6AC8C LDP X20, X19, [X31 + 0x10]
	0x03C6AC90 LDR X30, [X31], #0x20
	0x03C6AC94 BR X1
	0x03C6AC98 STP D11, D10, [X31 - 0x50]!
	0x03C6AC9C STP D9, D8, [X31 + 0x10]
	0x03C6ACA0 STP X30, X23, [X31 + 0x20]
	0x03C6ACA4 STP X22, X21, [X31 + 0x30]
	0x03C6ACA8 STP X20, X19, [X31 + 0x40]
	0x03C6ACAC ADRP X23, 0x77C000
	0x03C6ACB0 ADRP X22, 0x4B5000
	0x03C6ACB4 LDRB W8, [X23 + 0x5D0]
	0x03C6ACB8 LDR X22, [X22 + 0x5C8]
	0x03C6ACBC MOV X19, X2
	0x03C6ACC0 MOV X20, X1
	0x03C6ACC4 MOV W21, W0
	0x03C6ACC8 MOV V8.16B, V3.16B
	0x03C6ACCC MOV V9.16B, V2.16B
	0x03C6ACD0 MOV V10.16B, V1.16B
	0x03C6ACD4 MOV V11.16B, V0.16B
	0x03C6ACD8 TBNZ X8, 0x0, 0x3C6ACFC
	0x03C6ACDC ADRP X0, 0x4B5000
	0x03C6ACE0 LDR X0, [X0 + 0x5C8]
	0x03C6ACE4 BL 0x1C16CF4
	0x03C6ACE8 ADRP X0, 0x4B0000
	0x03C6ACEC LDR X0, [X0 + 0x4C0]
	0x03C6ACF0 BL 0x1C16CF4
	0x03C6ACF4 MOVZ W8, 0x1
	0x03C6ACF8 STRB W8, [X23 + 0x5D0]
	0x03C6ACFC LDR X0, [X22]
	0x03C6AD00 ADRP X22, 0x4B0000
	0x03C6AD04 LDR W8, [X0 + 0xE0]
	0x03C6AD08 LDR X22, [X22 + 0x4C0]
	0x03C6AD0C CBNZ W8, 0x3C6AD14
	0x03C6AD10 BL 0x1C16DFC
	0x03C6AD14 BL 0x3C67304
	0x03C6AD18 LDR X0, [X22]
	0x03C6AD1C LDR W8, [X0 + 0xE0]
	0x03C6AD20 CBNZ W8, 0x3C6AD2C
	0x03C6AD24 BL 0x1C16DFC
	0x03C6AD28 LDR X0, [X22]
	0x03C6AD2C LDR X8, [X0 + 0xB8]
	0x03C6AD30 MOVZ W1, 0x2
	0x03C6AD34 MOV V0.16B, V11.16B
	0x03C6AD38 MOV V1.16B, V10.16B
	0x03C6AD3C LDR W0, [X8 + 0x10]
	0x03C6AD40 MOV V2.16B, V9.16B
	0x03C6AD44 MOV V3.16B, V8.16B
	0x03C6AD48 BL 0x3C690A4
	0x03C6AD4C AND W1, W21, 0x1
	0x03C6AD50 MOV V2.16B, V9.16B
	0x03C6AD54 MOV V3.16B, V8.16B
	0x03C6AD58 MOV X2, X20
	0x03C6AD5C MOV X3, X19
	0x03C6AD60 LDP X20, X19, [X31 + 0x40]
	0x03C6AD64 LDP X22, X21, [X31 + 0x30]
	0x03C6AD68 LDP X30, X23, [X31 + 0x20]
	0x03C6AD6C LDP D9, D8, [X31 + 0x10]
	0x03C6AD70 MOV V0.16B, V11.16B
	0x03C6AD74 MOV V1.16B, V10.16B
	0x03C6AD78 LDP D11, D10, [X31], #0x50

ISIL:
	001 Move [X31-128], D11
	002 Move [X31-120], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+48], X28
	007 Move [X31+56], X27
	008 Move [X31+64], X26
	009 Move [X31+72], X25
	010 Move [X31+80], X24
	011 Move [X31+88], X23
	012 Move [X31+96], X22
	013 Move [X31+104], X21
	014 Move [X31+112], X20
	015 Move [X31+120], X19
	016 Move X26, 0x77D000
	017 Move W8, [X26+1487]
	018 Move X19, X6
	019 Move X25, X5
	020 Move X20, X4
	021 Move W21, W3
	022 Move W24, W2
	023 Move X22, X1
	024 Move W23, W0
	025 Move V8, V3
	026 Move V9, V2
	027 Move V10, V1
	028 Move V11, V0
	029 Move TEMP, X8
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {53}
	033 Move X0, 0x48A000
	034 Move X0, [X0+2416]
	035 Call 0x1C17CF4
	036 Move X0, 0x4B6000
	037 Move X0, [X0+1480]
	038 Call 0x1C17CF4
	039 Move X0, 0x4B1000
	040 Move X0, [X0+1216]
	041 Call 0x1C17CF4
	042 Move X0, 0x4F7000
	043 Move X0, [X0+664]
	044 Call 0x1C17CF4
	045 Move X0, 0x4F7000
	046 Move X0, [X0+672]
	047 Call 0x1C17CF4
	048 Move X0, 0x48A000
	049 Move X0, [X0+1728]
	050 Call 0x1C17CF4
	051 Move W8, 1
	052 Move [X26+1487], W8
	053 Move X26, 0x77D000
	054 Move X27, 0x4F0000
	055 Move W8, [X26+1296]
	056 Move X27, [X27+32]
	057 Move TEMP, X8
	058 And TEMP, TEMP, 1
	059 Compare TEMP, 1
	060 JumpIfEqual {66}
	061 Move X0, 0x4F0000
	062 Move X0, [X0+32]
	063 Call 0x1C17CF4
	064 Move W8, 1
	065 Move [X26+1296], W8
	066 Move X8, [X27]
	067 Move X8, [X8+184]
	068 Move X26, [X8]
	069 Compare X26, 0
	070 JumpIfEqual {260}
	071 Move X27, 0x77D000
	072 Move X8, [X27+1192]
	073 Compare X8, 0
	074 JumpIfNotEqual {80}
	075 Move X0, -51871744
	076 Add X0, X0, 1382
	077 Call 0x1C17CB8
	078 Move X8, X0
	079 Move [X27+1192], X0
	080 Move X28, 0x4B1000
	081 Move X28, [X28+1216]
	082 Move X0, X26
	083 NotImplemented "Instruction BLR not yet implemented."
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Move X0, [X28]
	086 Move W8, [X0+224]
	087 Compare W8, 0
	088 JumpIfNotEqual {91}
	089 Call 0x1C17DFC
	090 Move X0, [X28]
	091 Move X8, [X0+184]
	092 Move W8, [X8]
	093 Add W31, W8, 1
	094 Move W9, [X0+224]
	095 Compare W9, 0
	096 JumpIfNotEqual {101}
	097 Call 0x1C17DFC
	098 Move X8, [X28]
	099 Move X8, [X8+184]
	100 Move W8, [X8]
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Move X8, 0x48A000
	103 Move X8, [X8+1728]
	104 Move X0, [X8]
	105 Move X8, 0x4F7000
	106 Move X8, [X8+664]
	107 Move W9, [X0+224]
	108 Move X26, [X8]
	109 Compare W9, 0
	110 JumpIfNotEqual {112}
	111 Call 0x1C17DFC
	112 Move X0, X26
	113 Move X1, X31
	114 Call Type.GetTypeFromHandle, X0
	115 Move X8, [X28]
	116 Move X26, X0
	117 Move W9, [X8+224]
	118 Compare W9, 0
	119 JumpIfNotEqual {123}
	120 Move X0, X8
	121 Call 0x1C17DFC
	122 Move X8, [X28]
	123 Move X9, 0x4B6000
	124 Move X9, [X9+1480]
	125 Move X8, [X8+184]
	126 Move X0, [X9]
	127 Move W27, [X8]
	128 Move W9, [X0+224]
	129 Compare W9, 0
	130 JumpIfNotEqual {132}
	131 Call 0x1C17DFC
	132 Move X0, X26
	133 Move W1, W27
	134 Call GUIUtility.GetStateObject, X0, X1
	135 Compare X0, 0
	136 JumpIfEqual {260}
	137 Move X9, 0x4F7000
	138 Move X9, [X9+672]
	139 Move X8, [X0]
	140 Move X26, X0
	141 Move X1, [X9]
	142 Move W10, [X8+304]
	143 Move W9, [X1+304]
	144 NotImplemented "Instruction CMP not yet implemented."
	145 Move X8, [X8+200]
	146 Add X8, X8, X9
	147 NotImplemented "Instruction LDUR not yet implemented."
	148 NotImplemented "Instruction CMP not yet implemented."
	149 Move X0, [X26+16]
	150 Compare X0, 0
	151 JumpIfEqual {260}
	152 Move W1, W31
	153 Move X2, X31
	154 Call TouchScreenKeyboard.set_active, X0, X1
	155 Move [X26+16], X31
	156 Compare X19, 0
	157 JumpIfEqual {260}
	158 Move X8, 0x4B6000
	159 Move X8, [X8+1480]
	160 Move X26, [X19+16]
	161 Move X0, [X8]
	162 Move W8, [X0+224]
	163 Compare W8, 0
	164 JumpIfNotEqual {166}
	165 Call 0x1C17DFC
	166 Call GUIUtility.get_keyboardControl
	167 NotImplemented "Instruction CMP not yet implemented."
	168 Compare X26, 0
	169 Invalid "Jump target not found in method."
	170 Move X8, 0x48A000
	171 Move X8, [X8+2416]
	172 Move X0, [X8]
	173 Move W8, [X0+224]
	174 Compare W8, 0
	175 JumpIfNotEqual {177}
	176 Call 0x1C17DFC
	177 Move X0, X31
	178 Call Application.get_isFocused
	179 Move X8, [X19+16]
	180 Compare X8, 0
	181 JumpIfEqual {260}
	182 Move TEMP, X0
	183 And TEMP, TEMP, 1
	184 Compare TEMP, 1
	185 JumpIfNotEqual {223}
	186 Move X0, X8
	187 Move X1, X31
	188 Call TouchScreenKeyboard.get_active, X0
	189 Move TEMP, X0
	190 And TEMP, TEMP, 1
	191 Compare TEMP, 1
	192 JumpIfNotEqual {206}
	193 Move X8, 0x48A000
	194 Move X8, [X8+2416]
	195 Move X0, [X8]
	196 Move W8, [X0+224]
	197 Compare W8, 0
	198 JumpIfNotEqual {200}
	199 Call 0x1C17DFC
	200 Move X0, X31
	201 Call Application.get_isFocused
	202 Move TEMP, X0
	203 And TEMP, TEMP, 1
	204 Compare TEMP, 1
	205 JumpIfNotEqual {228}
	206 Move X0, X25
	207 Compare X25, 0
	208 JumpIfNotEqual {212}
	209 Compare X22, 0
	210 JumpIfEqual {260}
	211 Move X0, [X22+16]
	212 NotImplemented "Instruction CMP not yet implemented."
	213 NotImplemented "Instruction CSET not yet implemented."
	214 And W3, W24, 1
	215 Move W2, 1
	216 Move W1, W31
	217 Move X5, X31
	218 Call TouchScreenKeyboard.Open, X0, X1, X2, X3, X4
	219 Move [X19+16], X0
	220 Move X8, [X19+16]
	221 Compare X8, 0
	222 JumpIfEqual {260}
	223 Move X0, X8
	224 Move W1, W31
	225 Move X2, X31
	226 Call TouchScreenKeyboard.set_active, X0, X1
	227 Move [X19+16], X31
	228 Move X0, [X28]
	229 Move W8, [X0+224]
	230 Compare W8, 0
	231 JumpIfNotEqual {233}
	232 Call 0x1C17DFC
	233 And W2, W24, 1
	234 Move V2, V9
	235 Move V3, V8
	236 Move W0, W23
	237 Move X1, X22
	238 Move W3, W21
	239 Move X4, X20
	240 Move X5, X19
	241 Move X20, [X31+112]
	242 Move X19, [X31+120]
	243 Move X22, [X31+96]
	244 Move X21, [X31+104]
	245 Move X24, [X31+80]
	246 Move X23, [X31+88]
	247 Move X26, [X31+64]
	248 Move X25, [X31+72]
	249 Move X28, [X31+48]
	250 Move X27, [X31+56]
	251 Move X30, [X31+32]
	252 Move D9, [X31+16]
	253 Move D8, [X31+24]
	254 Move V0, V11
	255 Move V1, V10
	256 Move D11, [X31+128]
	257 Move D10, [X31+136]
	258 Call GUI.HandleTextFieldEventForDesktop, X0, X1, X2, X3, X4, X5, X6
	259 Return 
	260 Call 0x1C17F20
	261 Move X0, X26
	262 Call 0x1C181E0

Method: System.Boolean Toggle(UnityEngine.Rect position, System.Boolean value, UnityEngine.GUIContent content, UnityEngine.GUIStyle style)

Disassembly:
	0x03C6BC98 LDR X0, [X0 + 0x4C0]
	0x03C6BC9C BL 0x1C16CF4
	0x03C6BCA0 MOVZ W8, 0x1
	0x03C6BCA4 STRB W8, [X20 + 0x5DA]
	0x03C6BCA8 LDR X0, [X19]
	0x03C6BCAC LDR W8, [X0 + 0xE0]
	0x03C6BCB0 CBNZ W8, 0x3C6BCBC
	0x03C6BCB4 BL 0x1C16DFC
	0x03C6BCB8 LDR X0, [X19]
	0x03C6BCBC LDR X8, [X0 + 0xB8]
	0x03C6BCC0 LDP X20, X19, [X31 + 0x10]
	0x03C6BCC4 LDR X0, [X8 + 0x48]
	0x03C6BCC8 LDR X30, [X31], #0x20
	0x03C6BCCC RET
	0x03C6BCD0 STP D11, D10, [X31 - 0x60]!
	0x03C6BCD4 STP D9, D8, [X31 + 0x10]
	0x03C6BCD8 STR X30, [X31 + 0x20]
	0x03C6BCDC STP X24, X23, [X31 + 0x30]
	0x03C6BCE0 STP X22, X21, [X31 + 0x40]
	0x03C6BCE4 STP X20, X19, [X31 + 0x50]
	0x03C6BCE8 ADRP X24, 0x77B000
	0x03C6BCEC ADRP X23, 0x4B4000
	0x03C6BCF0 LDRB W8, [X24 + 0x5DB]
	0x03C6BCF4 LDR X23, [X23 + 0x5C8]
	0x03C6BCF8 MOV X19, X3
	0x03C6BCFC MOV X20, X2
	0x03C6BD00 MOV X21, X1
	0x03C6BD04 MOV V8.16B, V3.16B
	0x03C6BD08 MOV V9.16B, V2.16B
	0x03C6BD0C MOV V10.16B, V1.16B
	0x03C6BD10 MOV V11.16B, V0.16B
	0x03C6BD14 MOV W22, W0
	0x03C6BD18 TBNZ X8, 0x0, 0x3C6BD3C
	0x03C6BD1C ADRP X0, 0x4B4000
	0x03C6BD20 LDR X0, [X0 + 0x5C8]
	0x03C6BD24 BL 0x1C16CF4
	0x03C6BD28 ADRP X0, 0x4AF000
	0x03C6BD2C LDR X0, [X0 + 0x4C0]
	0x03C6BD30 BL 0x1C16CF4
	0x03C6BD34 MOVZ W8, 0x1
	0x03C6BD38 STRB W8, [X24 + 0x5DB]
	0x03C6BD3C LDR X0, [X23]
	0x03C6BD40 ADRP X23, 0x4AF000
	0x03C6BD44 LDR W8, [X0 + 0xE0]
	0x03C6BD48 LDR X23, [X23 + 0x4C0]
	0x03C6BD4C CBNZ W8, 0x3C6BD54
	0x03C6BD50 BL 0x1C16DFC
	0x03C6BD54 BL 0x3C67304
	0x03C6BD58 LDR X0, [X23]
	0x03C6BD5C LDR W8, [X0 + 0xE0]
	0x03C6BD60 CBNZ W8, 0x3C6BD68
	0x03C6BD64 BL 0x1C16DFC
	0x03C6BD68 BL 0x3C6748C
	0x03C6BD6C MOV X4, X0
	0x03C6BD70 MOV W0, W22
	0x03C6BD74 MOV V2.16B, V9.16B
	0x03C6BD78 MOV V3.16B, V8.16B
	0x03C6BD7C MOV X1, X21

ISIL:
	001 Move [X31-80], D11
	002 Move [X31-72], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X23, 0x77C000
	012 Move X22, 0x4B5000
	013 Move W8, [X23+1488]
	014 Move X22, [X22+1480]
	015 Move X19, X2
	016 Move X20, X1
	017 Move W21, W0
	018 Move V8, V3
	019 Move V9, V2
	020 Move V10, V1
	021 Move V11, V0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {34}
	026 Move X0, 0x4B5000
	027 Move X0, [X0+1480]
	028 Call 0x1C17CF4
	029 Move X0, 0x4B0000
	030 Move X0, [X0+1216]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X23+1488], W8
	034 Move X0, [X22]
	035 Move X22, 0x4B0000
	036 Move W8, [X0+224]
	037 Move X22, [X22+1216]
	038 Compare W8, 0
	039 JumpIfNotEqual {41}
	040 Call 0x1C17DFC
	041 Call GUIUtility.CheckOnGUI
	042 Move X0, [X22]
	043 Move W8, [X0+224]
	044 Compare W8, 0
	045 JumpIfNotEqual {48}
	046 Call 0x1C17DFC
	047 Move X0, [X22]
	048 Move X8, [X0+184]
	049 Move W1, 2
	050 Move V0, V11
	051 Move V1, V10
	052 Move W0, [X8+16]
	053 Move V2, V9
	054 Move V3, V8
	055 Call GUIUtility.GetControlID, X0, X1, X2
	056 And W1, W21, 1
	057 Move V2, V9
	058 Move V3, V8
	059 Move X2, X20
	060 Move X3, X19
	061 Move X20, [X31+64]
	062 Move X19, [X31+72]
	063 Move X22, [X31+48]
	064 Move X21, [X31+56]
	065 Move X30, [X31+32]
	066 Move X23, [X31+40]
	067 Move D9, [X31+16]
	068 Move D8, [X31+24]
	069 Move V0, V11
	070 Move V1, V10
	071 Move D11, [X31+80]
	072 Move D10, [X31+88]

Method: System.Boolean DoControl(UnityEngine.Rect position, System.Int32 id, System.Boolean on, System.Boolean hover, UnityEngine.GUIContent content, UnityEngine.GUIStyle style)

Disassembly:
	0x03C6BE9C MOV V0.16B, V11.16B
	0x03C6BEA0 MOV V1.16B, V10.16B
	0x03C6BEA4 LDP D11, D10, [X31], #0x70
	0x03C6BEA8 B 0x3C66C4C
	0x03C6BEAC STP D9, D8, [X31 - 0x70]!
	0x03C6BEB0 STP X29, X30, [X31 + 0x10]
	0x03C6BEB4 STP X28, X27, [X31 + 0x20]
	0x03C6BEB8 STP X26, X25, [X31 + 0x30]
	0x03C6BEBC STP X24, X23, [X31 + 0x40]
	0x03C6BEC0 STP X22, X21, [X31 + 0x50]
	0x03C6BEC4 STP X20, X19, [X31 + 0x60]
	0x03C6BEC8 ADRP X19, 0x77B000
	0x03C6BECC ADRP X27, 0x4F5000
	0x03C6BED0 LDRB W8, [X19 + 0x5DD]
	0x03C6BED4 LDR X27, [X27 + 0x2B0]
	0x03C6BED8 MOV X23, X5
	0x03C6BEDC MOV V8.16B, V1.16B
	0x03C6BEE0 MOV V9.16B, V0.16B
	0x03C6BEE4 MOV W24, W4
	0x03C6BEE8 MOV X22, X3
	0x03C6BEEC MOV W20, W1
	0x03C6BEF0 MOV X21, X0
	0x03C6BEF4 TBNZ X8, 0x0, 0x3C6BF30
	0x03C6BEF8 ADRP X0, 0x4AF000
	0x03C6BEFC LDR X0, [X0 + 0x888]
	0x03C6BF00 BL 0x1C16CF4
	0x03C6BF04 ADRP X0, 0x4F5000
	0x03C6BF08 LDR X0, [X0 + 0x2B0]
	0x03C6BF0C BL 0x1C16CF4
	0x03C6BF10 ADRP X0, 0x4AF000
	0x03C6BF14 LDR X0, [X0 + 0x890]
	0x03C6BF18 BL 0x1C16CF4
	0x03C6BF1C ADRP X0, 0x4AF000
	0x03C6BF20 LDR X0, [X0 + 0x4C0]
	0x03C6BF24 BL 0x1C16CF4
	0x03C6BF28 MOVZ W8, 0x1
	0x03C6BF2C STRB W8, [X19 + 0x5DD]
	0x03C6BF30 LDR X0, [X27]
	0x03C6BF34 ADRP X19, 0x4AF000
	0x03C6BF38 LDR W8, [X0 + 0xE0]
	0x03C6BF3C LDR X19, [X19 + 0x4C0]
	0x03C6BF40 CBNZ W8, 0x3C6BF48
	0x03C6BF44 BL 0x1C16DFC
	0x03C6BF48 MOVZ W1, 0x1
	0x03C6BF4C MOV W0, W20
	0x03C6BF50 BL 0x3C6C17C
	0x03C6BF54 LDR X0, [X19]
	0x03C6BF58 LDR W8, [X0 + 0xE0]
	0x03C6BF5C CBNZ W8, 0x3C6BF64
	0x03C6BF60 BL 0x1C16DFC
	0x03C6BF64 BL 0x3C6748C
	0x03C6BF68 ADRP X28, 0x77B000
	0x03C6BF6C ADRP X26, 0x4EE000
	0x03C6BF70 LDRB W8, [X28 + 0x510]
	0x03C6BF74 LDR X26, [X26 + 0x20]
	0x03C6BF78 MOV X19, X0
	0x03C6BF7C TBNZ X8, 0x0, 0x3C6BF94
	0x03C6BF80 ADRP X0, 0x4EE000
	0x03C6BF84 LDR X0, [X0 + 0x20]
	0x03C6BF88 BL 0x1C16CF4
	0x03C6BF8C MOVZ W8, 0x1
	0x03C6BF90 STRB W8, [X28 + 0x510]
	0x03C6BF94 LDR X8, [X26]
	0x03C6BF98 LDR X8, [X8 + 0xB8]
	0x03C6BF9C LDR X25, [X8]
	0x03C6BFA0 CBZ X25, 0x3C6C174
	0x03C6BFA4 ADRP X29, 0x77B000
	0x03C6BFA8 LDR X8, [X29 + 0x4A8]
	0x03C6BFAC CBNZ X8, 0x3C6BFC4
	0x03C6BFB0 ADRP X0, 0xFFFFFFFFFCE86000
	0x03C6BFB4 ADD X0, X0, 0x566
	0x03C6BFB8 BL 0x1C16CB8
	0x03C6BFBC MOV X8, X0
	0x03C6BFC0 STR X0, [X29 + 0x4A8]
	0x03C6BFC4 MOV X0, X25
	0x03C6BFC8 BLR X8
	0x03C6BFCC CMP W0, 0x8
	0x03C6BFD0 B.NE 0x3C6C040
	0x03C6BFD4 CBZ W24, 0x3C6C074
	0x03C6BFD8 ADRP X8, 0x4AF000
	0x03C6BFDC LDR X8, [X8 + 0x888]
	0x03C6BFE0 MOVZ W1, 0x2
	0x03C6BFE4 LDR X0, [X8]
	0x03C6BFE8 BL 0x1C16D6C
	0x03C6BFEC MOV V0.16B, V9.16B
	0x03C6BFF0 MOV X24, X0
	0x03C6BFF4 BL 0x3C6C2C0
	0x03C6BFF8 CBZ X24, 0x3C6C174
	0x03C6BFFC LDR W8, [X24 + 0x18]
	0x03C6C000 CBZ W8, 0x3C6C178
	0x03C6C004 MOV V0.16B, V8.16B
	0x03C6C008 STR X0, [X24 + 0x20]
	0x03C6C00C BL 0x3C6C354
	0x03C6C010 LDR W8, [X24 + 0x18]
	0x03C6C014 CMP W8, 0x1
	0x03C6C018 B.LS 0x3C6C178
	0x03C6C01C STR X0, [X24 + 0x28]
	0x03C6C020 LDR X0, [X27]
	0x03C6C024 LDR W8, [X0 + 0xE0]
	0x03C6C028 CBNZ W8, 0x3C6C030
	0x03C6C02C BL 0x1C16DFC
	0x03C6C030 MOV W0, W20
	0x03C6C034 MOV X1, X23
	0x03C6C038 MOV X2, X24
	0x03C6C03C B 0x3C6C090
	0x03C6C040 ADRP X8, 0x4AE000
	0x03C6C044 LDR X8, [X8 + 0x890]
	0x03C6C048 LDR X0, [X8]
	0x03C6C04C LDR W8, [X0 + 0xE0]
	0x03C6C050 CBNZ W8, 0x3C6C058
	0x03C6C054 BL 0x1C16DFC
	0x03C6C058 BL 0x3C6BB04
	0x03C6C05C LDR X8, [X27]
	0x03C6C060 MOV X23, X0
	0x03C6C064 LDR W9, [X8 + 0xE0]
	0x03C6C068 CBNZ W9, 0x3C6C084
	0x03C6C06C MOV X0, X8
	0x03C6C070 B 0x3C6C080
	0x03C6C074 LDR X0, [X27]
	0x03C6C078 LDR W8, [X0 + 0xE0]
	0x03C6C07C CBNZ W8, 0x3C6C084
	0x03C6C080 BL 0x1C16DFC
	0x03C6C084 MOV W0, W20
	0x03C6C088 MOV X1, X23
	0x03C6C08C MOV X2, X31
	0x03C6C090 BL 0x3C6C3EC
	0x03C6C094 ADRP X8, 0x4AE000
	0x03C6C098 LDR X8, [X8 + 0x4C0]
	0x03C6C09C LDR X0, [X8]
	0x03C6C0A0 LDR W8, [X0 + 0xE0]
	0x03C6C0A4 CBNZ W8, 0x3C6C0AC
	0x03C6C0A8 BL 0x1C16DFC
	0x03C6C0AC MOV X0, X22
	0x03C6C0B0 BL 0x3C67288
	0x03C6C0B4 CBZ X21, 0x3C6C0CC
	0x03C6C0B8 LDR X8, [X21 + 0x18]
	0x03C6C0BC LDR X0, [X21 + 0x40]
	0x03C6C0C0 LDR X2, [X21 + 0x28]
	0x03C6C0C4 MOV W1, W20
	0x03C6C0C8 BLR X8
	0x03C6C0CC LDRB W8, [X28 + 0x510]
	0x03C6C0D0 TBNZ X8, 0x0, 0x3C6C0E8
	0x03C6C0D4 ADRP X0, 0x4ED000
	0x03C6C0D8 LDR X0, [X0 + 0x20]
	0x03C6C0DC BL 0x1C16CF4
	0x03C6C0E0 MOVZ W8, 0x1
	0x03C6C0E4 STRB W8, [X28 + 0x510]
	0x03C6C0E8 LDR X8, [X26]
	0x03C6C0EC LDR X8, [X8 + 0xB8]
	0x03C6C0F0 LDR X20, [X8]
	0x03C6C0F4 CBZ X20, 0x3C6C174
	0x03C6C0F8 LDR X8, [X29 + 0x4A8]
	0x03C6C0FC CBNZ X8, 0x3C6C114
	0x03C6C100 ADRP X0, 0xFFFFFFFFFCE85000
	0x03C6C104 ADD X0, X0, 0x566
	0x03C6C108 BL 0x1C16CB8
	0x03C6C10C MOV X8, X0
	0x03C6C110 STR X0, [X29 + 0x4A8]
	0x03C6C114 MOV X0, X20
	0x03C6C118 BLR X8
	0x03C6C11C CMP W0, 0x8
	0x03C6C120 B.NE 0x3C6C138
	0x03C6C124 LDR X0, [X27]
	0x03C6C128 LDR W8, [X0 + 0xE0]
	0x03C6C12C CBNZ W8, 0x3C6C134
	0x03C6C130 BL 0x1C16DFC
	0x03C6C134 BL 0x3C6C664
	0x03C6C138 ADRP X8, 0x4AE000
	0x03C6C13C LDR X8, [X8 + 0x4C0]
	0x03C6C140 LDR X0, [X8]
	0x03C6C144 LDR W8, [X0 + 0xE0]
	0x03C6C148 CBNZ W8, 0x3C6C150
	0x03C6C14C BL 0x1C16DFC
	0x03C6C150 MOV X0, X19
	0x03C6C154 LDP X20, X19, [X31 + 0x60]
	0x03C6C158 LDP X22, X21, [X31 + 0x50]
	0x03C6C15C LDP X24, X23, [X31 + 0x40]
	0x03C6C160 LDP X26, X25, [X31 + 0x30]
	0x03C6C164 LDP X28, X27, [X31 + 0x20]
	0x03C6C168 LDP X29, X30, [X31 + 0x10]
	0x03C6C16C LDP D9, D8, [X31], #0x70
	0x03C6C170 B 0x3C67288
	0x03C6C174 BL 0x1C16F20
	0x03C6C178 BL 0x1C16F28
	0x03C6C17C STR X30, [X31 - 0x30]!
	0x03C6C180 STP X22, X21, [X31 + 0x10]
	0x03C6C184 STP X20, X19, [X31 + 0x20]
	0x03C6C188 ADRP X21, 0x77A000
	0x03C6C18C ADRP X22, 0x4F4000
	0x03C6C190 LDRB W8, [X21 + 0x698]
	0x03C6C194 LDR X22, [X22 + 0x2B0]
	0x03C6C198 MOV W20, W1
	0x03C6C19C MOV W19, W0
	0x03C6C1A0 TBNZ X8, 0x0, 0x3C6C1D0
	0x03C6C1A4 ADRP X0, 0x4F4000
	0x03C6C1A8 LDR X0, [X0 + 0x2B8]
	0x03C6C1AC BL 0x1C16CF4
	0x03C6C1B0 ADRP X0, 0x4F4000
	0x03C6C1B4 LDR X0, [X0 + 0x2B0]
	0x03C6C1B8 BL 0x1C16CF4
	0x03C6C1BC ADRP X0, 0x4F4000
	0x03C6C1C0 LDR X0, [X0 + 0x2C0]
	0x03C6C1C4 BL 0x1C16CF4
	0x03C6C1C8 MOVZ W8, 0x1
	0x03C6C1CC STRB W8, [X21 + 0x698]
	0x03C6C1D0 LDR X0, [X22]
	0x03C6C1D4 LDR W8, [X0 + 0xE0]
	0x03C6C1D8 CBZ W8, 0x3C6C1F4
	0x03C6C1DC LDR X8, [X0 + 0xB8]
	0x03C6C1E0 ANDS W31, W20, 0x1
	0x03C6C1E4 ADD X9, X8, 0x8
	0x03C6C1E8 CSEL X8, X9, X8, NE
	0x03C6C1EC LDR X21, [X8]
	0x03C6C1F0 B 0x3C6C21C
	0x03C6C1F4 BL 0x1C16DFC
	0x03C6C1F8 LDR X0, [X22]
	0x03C6C1FC ANDS W31, W20, 0x1
	0x03C6C200 LDR X8, [X0 + 0xB8]
	0x03C6C204 LDR W9, [X0 + 0xE0]
	0x03C6C208 ADD X10, X8, 0x8
	0x03C6C20C CSEL X8, X10, X8, NE
	0x03C6C210 LDR X21, [X8]
	0x03C6C214 CBNZ W9, 0x3C6C21C
	0x03C6C218 BL 0x1C16DFC
	0x03C6C21C AND W1, W20, 0x1
	0x03C6C220 MOV W0, W19
	0x03C6C224 BL 0x3C6F754
	0x03C6C228 MOV X20, X0
	0x03C6C22C CBNZ X0, 0x3C6C26C
	0x03C6C230 ADRP X8, 0x4F4000
	0x03C6C234 LDR X8, [X8 + 0x2C0]
	0x03C6C238 LDR X0, [X8]
	0x03C6C23C BL 0x1C16F10
	0x03C6C240 MOV W1, W19
	0x03C6C244 MOV X20, X0
	0x03C6C248 BL 0x3C6F7FC
	0x03C6C24C CBZ X21, 0x3C6C2BC
	0x03C6C250 ADRP X8, 0x4F4000
	0x03C6C254 LDR X8, [X8 + 0x2B8]
	0x03C6C258 MOV X0, X21
	0x03C6C25C MOV W1, W19
	0x03C6C260 MOV X2, X20
	0x03C6C264 LDR X3, [X8]
	0x03C6C268 BL 0x2A13678
	0x03C6C26C LDR X0, [X22]
	0x03C6C270 LDR W8, [X0 + 0xE0]
	0x03C6C274 CBNZ W8, 0x3C6C280
	0x03C6C278 BL 0x1C16DFC
	0x03C6C27C LDR X0, [X22]
	0x03C6C280 CBZ X20, 0x3C6C2BC
	0x03C6C284 LDR X8, [X0 + 0xB8]
	0x03C6C288 LDR X8, [X8 + 0x10]
	0x03C6C28C CBZ X8, 0x3C6C2BC
	0x03C6C290 LDR X9, [X20 + 0x18]
	0x03C6C294 MOV X0, X20
	0x03C6C298 LDP X22, X21, [X31 + 0x10]
	0x03C6C29C STR X9, [X8 + 0x18]
	0x03C6C2A0 LDR X9, [X20 + 0x20]
	0x03C6C2A4 STR X9, [X8 + 0x20]
	0x03C6C2A8 LDR X9, [X20 + 0x28]
	0x03C6C2AC LDP X20, X19, [X31 + 0x20]
	0x03C6C2B0 STR X9, [X8 + 0x28]
	0x03C6C2B4 LDR X30, [X31], #0x30
	0x03C6C2B8 RET
	0x03C6C2BC BL 0x1C16F20
	0x03C6C2C0 STR D8, [X31 - 0x30]!
	0x03C6C2C4 STP X30, X21, [X31 + 0x10]
	0x03C6C2C8 STP X20, X19, [X31 + 0x20]
	0x03C6C2CC ADRP X21, 0x77A000
	0x03C6C2D0 ADRP X20, 0x487000
	0x03C6C2D4 ADRP X19, 0x4F4000
	0x03C6C2D8 LDRB W8, [X21 + 0x68F]
	0x03C6C2DC LDR X20, [X20 + 0xA90]
	0x03C6C2E0 LDR X19, [X19 + 0x2C8]
	0x03C6C2E4 MOV V8.16B, V0.16B
	0x03C6C2E8 TBNZ X8, 0x0, 0x3C6C30C
	0x03C6C2EC ADRP X0, 0x4F4000
	0x03C6C2F0 LDR X0, [X0 + 0x2C8]
	0x03C6C2F4 BL 0x1C16CF4
	0x03C6C2F8 ADRP X0, 0x487000
	0x03C6C2FC LDR X0, [X0 + 0xA90]
	0x03C6C300 BL 0x1C16CF4
	0x03C6C304 MOVZ W8, 0x1
	0x03C6C308 STRB W8, [X21 + 0x68F]
	0x03C6C30C LDR X0, [X20]
	0x03C6C310 ADD X1, X31, 0xC

ISIL:
	001 Move [X31-96], D11
	002 Move [X31-88], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X20, 0x77C000
	014 Move W8, [X20+1489]
	015 Move X23, X4
	016 Move X22, X3
	017 Move W24, W2
	018 Move W19, W1
	019 Move W21, W0
	020 Move V8, V3
	021 Move V9, V2
	022 Move V10, V1
	023 Move V11, V0
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {36}
	028 Move X0, 0x4B5000
	029 Move X0, [X0+1480]
	030 Call 0x1C17CF4
	031 Move X0, 0x4B0000
	032 Move X0, [X0+1216]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X20+1489], W8
	036 Move X20, 0x77C000
	037 Move X25, 0x4EF000
	038 Move W8, [X20+1296]
	039 Move X25, [X25+32]
	040 Move TEMP, X8
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfEqual {49}
	044 Move X0, 0x4EF000
	045 Move X0, [X0+32]
	046 Call 0x1C17CF4
	047 Move W8, 1
	048 Move [X20+1296], W8
	049 Move X8, [X25]
	050 Move X8, [X8+184]
	051 Move X20, [X8]
	052 Compare X20, 0
	053 JumpIfEqual {341}
	054 Move X25, 0x77C000
	055 Move X8, [X25+1192]
	056 Compare X8, 0
	057 JumpIfNotEqual {63}
	058 Move X0, -51875840
	059 Add X0, X0, 1382
	060 Call 0x1C17CB8
	061 Move X8, X0
	062 Move [X25+1192], X0
	063 Move X0, X20
	064 NotImplemented "Instruction BLR not yet implemented."
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Move X9, -51195904
	067 Move W8, W0
	068 Add X9, X9, 3642
	069 NotImplemented "Instruction ADR not yet implemented."
	070 Move W11, [X9]
	071 Add X10, X10, X11
	072 CallNoReturn X10
	073 Move X8, 0x4B5000
	074 Move X8, [X8+1480]
	075 Move X0, [X8]
	076 Move W8, [X0+224]
	077 Compare W8, 0
	078 JumpIfNotEqual {80}
	079 Call 0x1C17DFC
	080 Move V0, V11
	081 Move V1, V10
	082 Move V2, V9
	083 Move V3, V8
	084 Move X0, X20
	085 Call GUIUtility.HitTest, X0, X1
	086 Move TEMP, X0
	087 And TEMP, TEMP, 1
	088 Compare TEMP, 1
	089 JumpIfNotEqual {327}
	090 Move X8, 0x4B0000
	091 Move X8, [X8+1216]
	092 Move X0, [X8]
	093 Move W8, [X0+224]
	094 Compare W8, 0
	095 JumpIfNotEqual {97}
	096 Call 0x1C17DFC
	097 Move X22, 0x77C000
	098 Move X8, [X22+1424]
	099 Compare X8, 0
	100 JumpIfNotEqual {106}
	101 Move X0, -51826688
	102 Add X0, X0, 2097
	103 Call 0x1C17CB8
	104 Move X8, X0
	105 Move [X22+1424], X0
	106 Move W0, W21
	107 NotImplemented "Instruction BLR not yet implemented."
	108 Move X22, 0x4AF000
	109 Move X22, [X22+1216]
	110 Move X0, [X22]
	111 Move W8, [X0+224]
	112 Compare W8, 0
	113 JumpIfNotEqual {115}
	114 Call 0x1C17DFC
	115 Move X23, 0x77B000
	116 Move X8, [X23+1432]
	117 Compare X8, 0
	118 JumpIfNotEqual {124}
	119 Move X0, -51748864
	120 Add X0, X0, 1411
	121 Call 0x1C17CB8
	122 Move X8, X0
	123 Move [X23+1432], X0
	124 Move W0, W21
	125 NotImplemented "Instruction BLR not yet implemented."
	126 Move TEMP, X0
	127 And TEMP, TEMP, 1
	128 Compare TEMP, 1
	129 JumpIfNotEqual {327}
	130 Move X0, [X22]
	131 Move W8, [X0+224]
	132 Compare W8, 0
	133 JumpIfNotEqual {135}
	134 Call 0x1C17DFC
	135 Move X21, 0x77B000
	136 Move X0, [X21+1440]
	137 Compare X0, 0
	138 JumpIfNotEqual {143}
	139 Move X0, -51879936
	140 Add X0, X0, 1480
	141 Call 0x1C17CB8
	142 Move [X21+1440], X0
	143 NotImplemented "Instruction BLR not yet implemented."
	144 Move X0, X20
	145 Call Event.Use, X0
	146 Move X8, 0x4B4000
	147 Move X8, [X8+1480]
	148 Move X0, [X8]
	149 Move W8, [X0+224]
	150 Compare W8, 0
	151 JumpIfNotEqual {153}
	152 Call 0x1C17DFC
	153 Move V0, V11
	154 Move V1, V10
	155 Move V2, V9
	156 Move V3, V8
	157 Move X0, X20
	158 Call GUIUtility.HitTest, X0, X1
	159 Move TEMP, X0
	160 And TEMP, TEMP, 1
	161 Compare TEMP, 1
	162 JumpIfNotEqual {327}
	163 Move X0, [X22]
	164 Move X8, 0x4AF000
	165 Move X8, [X8+1216]
	166 Move X0, [X8]
	167 Move W8, [X0+224]
	168 Compare W8, 0
	169 JumpIfNotEqual {171}
	170 Call 0x1C17DFC
	171 Move X22, 0x77B000
	172 Move X8, [X22+1432]
	173 Compare X8, 0
	174 JumpIfNotEqual {180}
	175 Move X0, -51748864
	176 Add X0, X0, 1411
	177 Call 0x1C17CB8
	178 Move X8, X0
	179 Move [X22+1432], X0
	180 Move W0, W21
	181 NotImplemented "Instruction BLR not yet implemented."
	182 Move TEMP, X0
	183 And TEMP, TEMP, 1
	184 Compare TEMP, 1
	185 JumpIfNotEqual {327}
	186 Move X0, X20
	187 Call Event.Use, X0
	188 Move X22, 0x77B000
	189 Move X8, [X22+1096]
	190 Compare X8, 0
	191 JumpIfNotEqual {197}
	192 Move X0, -51814400
	193 Add X0, X0, 1328
	194 Call 0x1C17CB8
	195 Move X8, X0
	196 Move [X22+1096], X0
	197 Move X0, X20
	198 NotImplemented "Instruction BLR not yet implemented."
	199 Move TEMP, X0
	200 And TEMP, TEMP, 4
	201 Compare TEMP, 4
	202 JumpIfEqual {255}
	203 Move X8, [X22+1096]
	204 Compare X8, 0
	205 JumpIfNotEqual {211}
	206 Move X0, -51814400
	207 Add X0, X0, 1328
	208 Call 0x1C17CB8
	209 Move X8, X0
	210 Move [X22+1096], X0
	211 Move X0, X20
	212 NotImplemented "Instruction BLR not yet implemented."
	213 Move TEMP, X0
	214 And TEMP, TEMP, 1
	215 Compare TEMP, 1
	216 JumpIfEqual {255}
	217 Move X8, [X22+1096]
	218 Compare X8, 0
	219 JumpIfNotEqual {225}
	220 Move X0, -51814400
	221 Add X0, X0, 1328
	222 Call 0x1C17CB8
	223 Move X8, X0
	224 Move [X22+1096], X0
	225 Move X0, X20
	226 NotImplemented "Instruction BLR not yet implemented."
	227 Move TEMP, X0
	228 And TEMP, TEMP, 8
	229 Compare TEMP, 8
	230 JumpIfEqual {255}
	231 Move X8, [X22+1096]
	232 Compare X8, 0
	233 JumpIfNotEqual {239}
	234 Move X0, -51814400
	235 Add X0, X0, 1328
	236 Call 0x1C17CB8
	237 Move X8, X0
	238 Move [X22+1096], X0
	239 Move X0, X20
	240 NotImplemented "Instruction BLR not yet implemented."
	241 And W31, W0, 2
	242 NotImplemented "Instruction CSET not yet implemented."
	243 Compare X23, 0
	244 JumpIfEqual {341}
	245 And W3, W19, 1
	246 And W4, W24, 1
	247 Move X0, X23
	248 Move V0, V11
	249 Move V1, V10
	250 Move V2, V9
	251 Move V3, V8
	252 Move X1, X22
	253 Move W2, W21
	254 Call GUIStyle.Draw, X0, X1, X2, X3, X4, X5
	255 Move W22, W31
	256 Move X23, 0x77B000
	257 Move X8, [X23+1160]
	258 Compare X8, 0
	259 JumpIfNotEqual {265}
	260 Move X0, -51699712
	261 Add X0, X0, 1451
	262 Call 0x1C17CB8
	263 Move X8, X0
	264 Move [X23+1160], X0
	265 Move X0, X20
	266 NotImplemented "Instruction BLR not yet implemented."
	267 NotImplemented "Instruction CMP not yet implemented."
	268 Move X8, [X23+1160]
	269 Compare X8, 0
	270 JumpIfNotEqual {276}
	271 Move X0, -51699712
	272 Add X0, X0, 1451
	273 Call 0x1C17CB8
	274 Move X8, X0
	275 Move [X23+1160], X0
	276 Move X0, X20
	277 NotImplemented "Instruction BLR not yet implemented."
	278 NotImplemented "Instruction CMP not yet implemented."
	279 Compare W22, 0
	280 JumpIfNotEqual {297}
	281 Move X8, [X23+1160]
	282 Compare X8, 0
	283 JumpIfNotEqual {289}
	284 Move X0, -51699712
	285 Add X0, X0, 1451
	286 Call 0x1C17CB8
	287 Move X8, X0
	288 Move [X23+1160], X0
	289 Move X0, X20
	290 NotImplemented "Instruction BLR not yet implemented."
	291 NotImplemented "Instruction CMP not yet implemented."
	292 Xor W8, W22, 1
	293 Move TEMP, X8
	294 And TEMP, TEMP, 1
	295 Compare TEMP, 1
	296 JumpIfEqual {327}
	297 Move X8, 0x4B4000
	298 Move X8, [X8+1480]
	299 Move X0, [X8]
	300 Move W8, [X0+224]
	301 Compare W8, 0
	302 JumpIfNotEqual {304}
	303 Call 0x1C17DFC
	304 Call GUIUtility.get_keyboardControl
	305 NotImplemented "Instruction CMP not yet implemented."
	306 Move X0, X20
	307 Call Event.Use, X0
	308 Move X8, 0x4AF000
	309 Move X8, [X8+1216]
	310 Move X0, [X8]
	311 Move W8, [X0+224]
	312 Compare W8, 0
	313 JumpIfNotEqual {315}
	314 Call 0x1C17DFC
	315 Move X20, 0x77B000
	316 Move X8, [X20+1360]
	317 Compare X8, 0
	318 JumpIfNotEqual {324}
	319 Move X0, -51863552
	320 Add X0, X0, 1821
	321 Call 0x1C17CB8
	322 Move X8, X0
	323 Move [X20+1360], X0
	324 Move W0, 1
	325 NotImplemented "Instruction BLR not yet implemented."
	326 Xor W19, W19, 1
	327 And W0, W19, 1
	328 Move X20, [X31+80]
	329 Move X19, [X31+88]
	330 Move X22, [X31+64]
	331 Move X21, [X31+72]
	332 Move X24, [X31+48]
	333 Move X23, [X31+56]
	334 Move X30, [X31+32]
	335 Move X25, [X31+40]
	336 Move D9, [X31+16]
	337 Move D8, [X31+24]
	338 Move D11, [X31+96]
	339 Move D10, [X31+104]
	340 Return X0
	341 Call 0x1C17F20

Method: System.Void DoLabel(UnityEngine.Rect position, UnityEngine.GUIContent content, UnityEngine.GUIStyle style)

Disassembly:
	0x03C689FC LDR V1, [X31 + 0xC]
	0x03C68A00 STP S2, S1, [X31 + 0xF0]
	0x03C68A04 LDR V2, [X31 + 0x10]
	0x03C68A08 LDR V1, [X31 + 0x14]
	0x03C68A0C STP S2, S1, [X31 + 0xF8]
	0x03C68A10 LDR X8, [X8 + 0x4C0]
	0x03C68A14 STP V0, V0, [X31 + 0x60]
	0x03C68A18 STUR W31, [X9 + 0xFF]
	0x03C68A1C STP X20, X0, [X31 + 0x108]
	0x03C68A20 LDR X8, [X8]
	0x03C68A24 ADD X20, X10, 0x10
	0x03C68A28 LDR W9, [X8 + 0xE0]
	0x03C68A2C CBNZ W9, 0x3C68A38
	0x03C68A30 MOV X0, X8
	0x03C68A34 BL 0x1C16DFC
	0x03C68A38 LDR V1, [X31 + 0x34]
	0x03C68A3C ADD X1, X31, 0x60
	0x03C68A40 MOV V0.16B, V9.16B
	0x03C68A44 MOV V2.16B, V11.16B
	0x03C68A48 MOV V3.16B, V10.16B
	0x03C68A4C MOV W0, W19
	0x03C68A50 MOV V4.16B, V12.16B
	0x03C68A54 MOV X2, X20
	0x03C68A58 BL 0x3C68AAC
	0x03C68A5C ADRP X8, 0x48F000
	0x03C68A60 LDR X8, [X8 + 0x2C8]
	0x03C68A64 LDR X0, [X8]
	0x03C68A68 LDR W8, [X0 + 0xE0]
	0x03C68A6C CBNZ W8, 0x3C68A74
	0x03C68A70 BL 0x1C16DFC
	0x03C68A74 ADD X0, X31, 0x60
	0x03C68A78 MOV X1, X31
	0x03C68A7C BL 0x3C0E6E4
	0x03C68A80 LDP X20, X19, [X31 + 0x190]
	0x03C68A84 LDP X22, X21, [X31 + 0x180]
	0x03C68A88 LDP X24, X23, [X31 + 0x170]
	0x03C68A8C LDP X29, X30, [X31 + 0x160]
	0x03C68A90 LDP D9, D8, [X31 + 0x150]
	0x03C68A94 LDP D11, D10, [X31 + 0x140]
	0x03C68A98 LDP D13, D12, [X31 + 0x130]
	0x03C68A9C LDP D15, D14, [X31 + 0x120]
	0x03C68AA0 ADD X31, X31, 0x1A0
	0x03C68AA4 RET
	0x03C68AA8 BL 0x1C16F20
	0x03C68AAC CMP W0, 0x2
	0x03C68AB0 FDIV S5, S2, S3
	0x03C68AB4 B.EQ 0x3C68B08
	0x03C68AB8 CMP W0, 0x1
	0x03C68ABC B.EQ 0x3C68ADC
	0x03C68AC0 CBNZ W0, 0x3C68B40
	0x03C68AC4 STP S0, S1, [X1]
	0x03C68AC8 STP S2, S3, [X1 + 0x8]
	0x03C68ACC FMOV S4, 1
	0x03C68AD0 FMOV S5, W31
	0x03C68AD4 FMOV S6, W31
	0x03C68AD8 B 0x3C68B9C
	0x03C68ADC FCMP S5, S4
	0x03C68AE0 B.LE 0x3C68B48
	0x03C68AE4 FDIV S7, S4, S5
	0x03C68AE8 FMOV S4, 1
	0x03C68AEC STP S0, S1, [X1]
	0x03C68AF0 FMOV S0, 0.5
	0x03C68AF4 FSUB S1, S4, S7
	0x03C68AF8 STP S2, S3, [X1 + 0x8]
	0x03C68AFC FMUL S6, S1, S0
	0x03C68B00 FMOV S5, W31
	0x03C68B04 B 0x3C68BA0
	0x03C68B08 FCMP S5, S4
	0x03C68B0C B.LE 0x3C68B6C
	0x03C68B10 FDIV S7, S4, S5
	0x03C68B14 FMOV S4, 1
	0x03C68B18 FSUB S17, S4, S7
	0x03C68B1C FMOV S16, 0.5
	0x03C68B20 FMUL S7, S2, S7
	0x03C68B24 FMUL S2, S2, S17
	0x03C68B28 FMUL S2, S2, S16
	0x03C68B2C FMOV S5, W31
	0x03C68B30 FMOV S6, W31
	0x03C68B34 STP S7, S3, [X1 + 0x8]
	0x03C68B38 FADD S0, S0, S2
	0x03C68B3C B 0x3C68B98
	0x03C68B40 MOV W0, W31
	0x03C68B44 RET
	0x03C68B48 FDIV S4, S5, S4
	0x03C68B4C STP S0, S1, [X1]
	0x03C68B50 FMOV S0, 0.5
	0x03C68B54 FMUL S1, S4, S0
	0x03C68B58 STP S2, S3, [X1 + 0x8]
	0x03C68B5C FMOV S7, 1
	0x03C68B60 FSUB S5, S0, S1
	0x03C68B64 FMOV S6, W31
	0x03C68B68 B 0x3C68BA0
	0x03C68B6C FDIV S7, S5, S4
	0x03C68B70 FMOV S4, 1
	0x03C68B74 FSUB S17, S4, S7
	0x03C68B78 FMOV S16, 0.5
	0x03C68B7C FMUL S7, S3, S7
	0x03C68B80 FMUL S3, S3, S17
	0x03C68B84 STP S2, S7, [X1 + 0x8]
	0x03C68B88 FMUL S2, S3, S16
	0x03C68B8C FMOV S5, W31
	0x03C68B90 FMOV S6, W31
	0x03C68B94 FADD S1, S1, S2
	0x03C68B98 STP S0, S1, [X1]
	0x03C68B9C FMOV S7, 1
	0x03C68BA0 MOVZ W0, 0x1
	0x03C68BA4 STP S5, S6, [X2]
	0x03C68BA8 STP S4, S7, [X2 + 0x8]
	0x03C68BAC RET
	0x03C68BB0 STP D11, D10, [X31 - 0x40]!
	0x03C68BB4 STP D9, D8, [X31 + 0x10]
	0x03C68BB8 STP X30, X21, [X31 + 0x20]
	0x03C68BBC STP X20, X19, [X31 + 0x30]
	0x03C68BC0 ADRP X21, 0x77E000
	0x03C68BC4 ADRP X20, 0x4B6000
	0x03C68BC8 LDRB W8, [X21 + 0x5C5]
	0x03C68BCC LDR X20, [X20 + 0xBD0]
	0x03C68BD0 MOV X19, X0
	0x03C68BD4 MOV V8.16B, V3.16B
	0x03C68BD8 MOV V9.16B, V2.16B
	0x03C68BDC MOV V10.16B, V1.16B
	0x03C68BE0 MOV V11.16B, V0.16B
	0x03C68BE4 TBNZ X8, 0x0, 0x3C68C08
	0x03C68BE8 ADRP X0, 0x4B6000
	0x03C68BEC LDR X0, [X0 + 0xBD0]
	0x03C68BF0 BL 0x1C16CF4
	0x03C68BF4 ADRP X0, 0x4B2000
	0x03C68BF8 LDR X0, [X0 + 0x4C0]
	0x03C68BFC BL 0x1C16CF4
	0x03C68C00 MOVZ W8, 0x1
	0x03C68C04 STRB W8, [X21 + 0x5C5]
	0x03C68C08 LDR X0, [X20]
	0x03C68C0C ADRP X20, 0x4B2000
	0x03C68C10 LDR W8, [X0 + 0xE0]
	0x03C68C14 LDR X20, [X20 + 0x4C0]
	0x03C68C18 CBNZ W8, 0x3C68C20
	0x03C68C1C BL 0x1C16DFC
	0x03C68C20 MOV X0, X19
	0x03C68C24 BL 0x3C678AC
	0x03C68C28 LDR X8, [X20]
	0x03C68C2C MOV X19, X0
	0x03C68C30 LDR W9, [X8 + 0xE0]
	0x03C68C34 CBNZ W9, 0x3C68C44
	0x03C68C38 MOV X0, X8
	0x03C68C3C BL 0x1C16DFC
	0x03C68C40 LDR X8, [X20]
	0x03C68C44 LDR X8, [X8 + 0xB8]
	0x03C68C48 LDR X8, [X8 + 0x30]
	0x03C68C4C CBZ X8, 0x3C68C7C
	0x03C68C50 LDR X1, [X8 + 0x20]
	0x03C68C54 MOV V2.16B, V9.16B
	0x03C68C58 MOV V3.16B, V8.16B
	0x03C68C5C MOV X0, X19
	0x03C68C60 LDP X20, X19, [X31 + 0x30]
	0x03C68C64 LDP X30, X21, [X31 + 0x20]
	0x03C68C68 LDP D9, D8, [X31 + 0x10]
	0x03C68C6C MOV V0.16B, V11.16B
	0x03C68C70 MOV V1.16B, V10.16B
	0x03C68C74 LDP D11, D10, [X31], #0x40
	0x03C68C78 B 0x3C68C88
	0x03C68C7C BL 0x1C16F20
	0x03C68C80 LDR X0, [X0 + 0x20]
	0x03C68C84 RET
	0x03C68C88 STP D11, D10, [X31 - 0x60]!
	0x03C68C8C STP D9, D8, [X31 + 0x10]
	0x03C68C90 STP X30, X25, [X31 + 0x20]
	0x03C68C94 STP X24, X23, [X31 + 0x30]
	0x03C68C98 STP X22, X21, [X31 + 0x40]
	0x03C68C9C STP X20, X19, [X31 + 0x50]
	0x03C68CA0 ADRP X22, 0x77E000
	0x03C68CA4 ADRP X21, 0x4B7000
	0x03C68CA8 LDRB W8, [X22 + 0x5C6]
	0x03C68CAC LDR X21, [X21 + 0x5C8]
	0x03C68CB0 MOV X20, X1
	0x03C68CB4 MOV X19, X0
	0x03C68CB8 MOV V8.16B, V3.16B
	0x03C68CBC MOV V9.16B, V2.16B
	0x03C68CC0 MOV V10.16B, V1.16B
	0x03C68CC4 MOV V11.16B, V0.16B

ISIL:
	001 Move [X31-80], D11
	002 Move [X31-72], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X20, 0x77F000
	012 Move W8, [X20+1490]
	013 Move X21, X1
	014 Move X19, X0
	015 Move V8, V3
	016 Move V9, V2
	017 Move V10, V1
	018 Move V11, V0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {31}
	023 Move X0, 0x4B3000
	024 Move X0, [X0+2192]
	025 Call 0x1C17CF4
	026 Move X0, 0x4B3000
	027 Move X0, [X0+1216]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X20+1490], W8
	031 Move X20, 0x77F000
	032 Move X22, 0x4F2000
	033 Move W8, [X20+1296]
	034 Move X22, [X22+32]
	035 Move TEMP, X8
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {44}
	039 Move X0, 0x4F2000
	040 Move X0, [X0+32]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X20+1296], W8
	044 Move X8, [X22]
	045 Move X8, [X8+184]
	046 Move X20, [X8]
	047 Compare X20, 0
	048 JumpIfEqual {207}
	049 Move X22, 0x77F000
	050 Move X8, [X22+1192]
	051 Compare X8, 0
	052 JumpIfNotEqual {58}
	053 Move X0, -51863552
	054 Add X0, X0, 1382
	055 Call 0x1C17CB8
	056 Move X8, X0
	057 Move [X22+1192], X0
	058 Move X0, X20
	059 NotImplemented "Instruction BLR not yet implemented."
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move X0, X20
	062 Call Event.get_mousePosition, X0
	063 NotImplemented "Instruction FCMP not yet implemented."
	064 Move W22, W31
	065 NotImplemented "Instruction FCMP not yet implemented."
	066 Add S2, S11, S9
	067 NotImplemented "Instruction FCMP not yet implemented."
	068 Add S0, S10, S8
	069 NotImplemented "Instruction FCMP not yet implemented."
	070 NotImplemented "Instruction CSET not yet implemented."
	071 Compare X21, 0
	072 JumpIfEqual {207}
	073 Move X0, X21
	074 Move V0, V11
	075 Move V1, V10
	076 Move V2, V9
	077 Move V3, V8
	078 Move X1, X19
	079 Move W2, W22
	080 Move W3, W31
	081 Move W4, W31
	082 Move W5, W31
	083 Call GUIStyle.Internal_Draw, X0, X1, X2, X3, X4, X5, X6
	084 Compare X19, 0
	085 JumpIfEqual {207}
	086 Move X0, [X19+32]
	087 Move X1, X31
	088 Call String.IsNullOrEmpty, X0
	089 Xor W8, W0, 1
	090 And W8, W22, W8
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Call GUIClip.get_visibleRect
	093 Move X0, X20
	094 Move V10, V0
	095 Move V8, V1
	096 Move V11, V2
	097 Move V9, V3
	098 Call Event.get_mousePosition, X0
	099 NotImplemented "Instruction FCMP not yet implemented."
	100 NotImplemented "Instruction FCMP not yet implemented."
	101 Add S2, S10, S11
	102 NotImplemented "Instruction FCMP not yet implemented."
	103 Add S0, S8, S9
	104 NotImplemented "Instruction FCMP not yet implemented."
	105 Move X20, [X31+64]
	106 Move X19, [X31+72]
	107 Move X22, [X31+48]
	108 Move X21, [X31+56]
	109 Move X30, [X31+32]
	110 Move X23, [X31+40]
	111 Move D9, [X31+16]
	112 Move D8, [X31+24]
	113 Move D11, [X31+80]
	114 Move D10, [X31+88]
	115 Return 
	116 Move X22, 0x4B3000
	117 Move X22, [X22+2192]
	118 Move X21, [X19+32]
	119 Move X0, [X22]
	120 Move W8, [X0+224]
	121 Compare W8, 0
	122 JumpIfNotEqual {124}
	123 Call 0x1C17DFC
	124 Move X23, 0x77F000
	125 Move X8, [X23+1992]
	126 Compare X8, 0
	127 JumpIfNotEqual {133}
	128 Move X0, -51691520
	129 Add X0, X0, 766
	130 Call 0x1C17CB8
	131 Move X8, X0
	132 Move [X23+1992], X0
	133 Move X0, X21
	134 NotImplemented "Instruction BLR not yet implemented."
	135 Move TEMP, X0
	136 And TEMP, TEMP, 1
	137 Compare TEMP, 1
	138 JumpIfNotEqual {142}
	139 Move X8, 0x4B3000
	140 Move X8, [X8+1216]
	141 Move X0, [X8]
	142 Move X0, X20
	143 Call Event.get_mousePosition, X0
	144 Move X20, 0x772000
	145 Move W8, [X20+1935]
	146 Move V8, V0
	147 Move V9, V1
	148 Compare W8, 0
	149 JumpIfNotEqual {155}
	150 Move X0, 0x494000
	151 Move X0, [X0+3848]
	152 Call 0x1C17CF4
	153 Move W8, 1
	154 Move [X20+1935], W8
	155 Move X8, 0x494000
	156 Move X8, [X8+3848]
	157 Move X20, 0x4B3000
	158 Move X8, [X8]
	159 Move X20, [X20+1216]
	160 Move X8, [X8+184]
	161 Move X0, [X20]
	162 Move V10, [X8]
	163 Move W9, [X0+224]
	164 Compare W9, 0
	165 JumpIfNotEqual {168}
	166 Call 0x1C17DFC
	167 Move X0, [X20]
	168 Move X8, [X0+184]
	169 Move [X8+56], S8
	170 Move [X8+64], S9
	171 Move [X8+64], D10
	172 Move W8, [X0+224]
	173 Move X19, [X19+32]
	174 Compare W8, 0
	175 JumpIfNotEqual {180}
	176 Call 0x1C17DFC
	177 Move X8, 0x4B3000
	178 Move X8, [X8+1216]
	179 Move X0, [X8]
	180 Move X8, [X0+184]
	181 Move X0, [X22]
	182 Move S11, [X8+56]
	183 Move S10, [X8+60]
	184 Move W9, [X0+224]
	185 Move S9, [X8+64]
	186 Move S8, [X8+68]
	187 Compare W9, 0
	188 JumpIfNotEqual {190}
	189 Call 0x1C17DFC
	190 Move X0, X19
	191 Move V2, V9
	192 Move V3, V8
	193 Move X20, [X31+64]
	194 Move X19, [X31+72]
	195 Move X22, [X31+48]
	196 Move X21, [X31+56]
	197 Move X30, [X31+32]
	198 Move X23, [X31+40]
	199 Move D9, [X31+16]
	200 Move D8, [X31+24]
	201 Move V0, V11
	202 Move V1, V10
	203 Move D11, [X31+80]
	204 Move D10, [X31+88]
	205 Call GUIStyle.SetMouseTooltip, X0, X1
	206 Return 
	207 Call 0x1C17F20

Method: System.Boolean DoToggle(UnityEngine.Rect position, System.Int32 id, System.Boolean value, UnityEngine.GUIContent content, UnityEngine.GUIStyle style)

Disassembly:
	0x03C6BD80 MOV X2, X20
	0x03C6BD84 MOV X3, X19
	0x03C6BD88 LDP X20, X19, [X31 + 0x50]
	0x03C6BD8C LDP X22, X21, [X31 + 0x40]
	0x03C6BD90 LDP X24, X23, [X31 + 0x30]
	0x03C6BD94 LDR X30, [X31 + 0x20]
	0x03C6BD98 LDP D9, D8, [X31 + 0x10]
	0x03C6BD9C MOVZ W5, 0x1
	0x03C6BDA0 MOV V0.16B, V11.16B
	0x03C6BDA4 MOV V1.16B, V10.16B
	0x03C6BDA8 LDP D11, D10, [X31], #0x60
	0x03C6BDAC B 0x3C6BDB0
	0x03C6BDB0 STP D11, D10, [X31 - 0x70]!
	0x03C6BDB4 STP D9, D8, [X31 + 0x10]
	0x03C6BDB8 STR X30, [X31 + 0x20]
	0x03C6BDBC STP X26, X25, [X31 + 0x30]
	0x03C6BDC0 STP X24, X23, [X31 + 0x40]
	0x03C6BDC4 STP X22, X21, [X31 + 0x50]
	0x03C6BDC8 STP X20, X19, [X31 + 0x60]
	0x03C6BDCC ADRP X26, 0x77B000
	0x03C6BDD0 ADRP X25, 0x4B4000
	0x03C6BDD4 LDRB W8, [X26 + 0x5DC]
	0x03C6BDD8 LDR X25, [X25 + 0x5C8]
	0x03C6BDDC MOV W23, W5
	0x03C6BDE0 MOV X19, X4
	0x03C6BDE4 MOV X20, X3
	0x03C6BDE8 MOV X21, X2
	0x03C6BDEC MOV X22, X1
	0x03C6BDF0 MOV V8.16B, V3.16B
	0x03C6BDF4 MOV V9.16B, V2.16B
	0x03C6BDF8 MOV V10.16B, V1.16B
	0x03C6BDFC MOV V11.16B, V0.16B
	0x03C6BE00 MOV W24, W0
	0x03C6BE04 TBNZ X8, 0x0, 0x3C6BE28
	0x03C6BE08 ADRP X0, 0x4B4000
	0x03C6BE0C LDR X0, [X0 + 0x5C8]
	0x03C6BE10 BL 0x1C16CF4
	0x03C6BE14 ADRP X0, 0x4AF000
	0x03C6BE18 LDR X0, [X0 + 0x4C0]
	0x03C6BE1C BL 0x1C16CF4
	0x03C6BE20 MOVZ W8, 0x1
	0x03C6BE24 STRB W8, [X26 + 0x5DC]
	0x03C6BE28 LDR X0, [X25]
	0x03C6BE2C ADRP X26, 0x4AF000
	0x03C6BE30 LDR W8, [X0 + 0xE0]
	0x03C6BE34 LDR X26, [X26 + 0x4C0]
	0x03C6BE38 CBNZ W8, 0x3C6BE44
	0x03C6BE3C BL 0x1C16DFC
	0x03C6BE40 LDR X0, [X25]
	0x03C6BE44 LDR X8, [X26]
	0x03C6BE48 LDR X9, [X0 + 0xB8]
	0x03C6BE4C LDR W10, [X8 + 0xE0]
	0x03C6BE50 LDR W25, [X9 + 0x8]
	0x03C6BE54 CBNZ W10, 0x3C6BE60
	0x03C6BE58 MOV X0, X8
	0x03C6BE5C BL 0x1C16DFC
	0x03C6BE60 AND W6, W23, 0x1
	0x03C6BE64 MOV W0, W24
	0x03C6BE68 MOV W1, W25
	0x03C6BE6C MOV V2.16B, V9.16B
	0x03C6BE70 MOV V3.16B, V8.16B
	0x03C6BE74 MOV X2, X22
	0x03C6BE78 MOV X3, X21
	0x03C6BE7C MOV X4, X20
	0x03C6BE80 MOV X5, X19
	0x03C6BE84 LDP X20, X19, [X31 + 0x60]
	0x03C6BE88 LDP X22, X21, [X31 + 0x50]
	0x03C6BE8C LDP X24, X23, [X31 + 0x40]
	0x03C6BE90 LDP X26, X25, [X31 + 0x30]
	0x03C6BE94 LDR X30, [X31 + 0x20]
	0x03C6BE98 LDP D9, D8, [X31 + 0x10]

ISIL:
	001 Move [X31-96], D11
	002 Move [X31-88], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X23, 0x77C000
	013 Move W8, [X23+1491]
	014 Move X19, X3
	015 Move X20, X2
	016 Move W22, W1
	017 Move W21, W0
	018 Move V8, V3
	019 Move V9, V2
	020 Move V10, V1
	021 Move V11, V0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {31}
	026 Move X0, 0x4B0000
	027 Move X0, [X0+1216]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X23+1491], W8
	031 Move X23, 0x77C000
	032 Move X24, 0x4EF000
	033 Move W8, [X23+1296]
	034 Move X24, [X24+32]
	035 Move TEMP, X8
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {44}
	039 Move X0, 0x4EF000
	040 Move X0, [X0+32]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X23+1296], W8
	044 Move X8, [X24]
	045 Move X8, [X8+184]
	046 Move X0, [X8]
	047 Compare X0, 0
	048 JumpIfEqual {85}
	049 Move X24, 0x4B0000
	050 Move X24, [X24+1216]
	051 Call Event.get_mousePosition, X0
	052 NotImplemented "Instruction FCMP not yet implemented."
	053 Move W23, W31
	054 NotImplemented "Instruction FCMP not yet implemented."
	055 Add S2, S11, S9
	056 NotImplemented "Instruction FCMP not yet implemented."
	057 Add S0, S10, S8
	058 NotImplemented "Instruction FCMP not yet implemented."
	059 NotImplemented "Instruction CSET not yet implemented."
	060 Move X0, [X24]
	061 Move W8, [X0+224]
	062 Compare W8, 0
	063 JumpIfNotEqual {65}
	064 Call 0x1C17DFC
	065 And W1, W22, 1
	066 Move V2, V9
	067 Move V3, V8
	068 Move W0, W21
	069 Move W2, W23
	070 Move X3, X20
	071 Move X4, X19
	072 Move X20, [X31+80]
	073 Move X19, [X31+88]
	074 Move X22, [X31+64]
	075 Move X21, [X31+72]
	076 Move X24, [X31+48]
	077 Move X23, [X31+56]
	078 Move X30, [X31+32]
	079 Move D9, [X31+16]
	080 Move D8, [X31+24]
	081 Move V0, V11
	082 Move V1, V10
	083 Move D11, [X31+96]
	084 Move D10, [X31+104]
	085 Call 0x1C17F20

Method: System.Boolean DoButton(UnityEngine.Rect position, System.Int32 id, UnityEngine.GUIContent content, UnityEngine.GUIStyle style)

Disassembly:
	0x03C6A210 STP X22, X21, [X31 + 0x60]
	0x03C6A214 STP X20, X19, [X31 + 0x70]
	0x03C6A218 ADRP X22, 0x77C000
	0x03C6A21C LDRB W8, [X22 + 0x5CE]
	0x03C6A220 MOV X21, X5
	0x03C6A224 MOV X24, X4
	0x03C6A228 MOV W20, W3
	0x03C6A22C MOV W25, W2
	0x03C6A230 MOV X19, X1
	0x03C6A234 MOV W23, W0
	0x03C6A238 MOV V11.16B, V3.16B
	0x03C6A23C MOV V8.16B, V2.16B
	0x03C6A240 MOV V10.16B, V1.16B
	0x03C6A244 MOV V9.16B, V0.16B
	0x03C6A248 TBNZ X8, 0x0, 0x3C6A284
	0x03C6A24C ADRP X0, 0x4B5000
	0x03C6A250 LDR X0, [X0 + 0x5C8]
	0x03C6A254 BL 0x1C16CF4
	0x03C6A258 ADRP X0, 0x4B0000
	0x03C6A25C LDR X0, [X0 + 0x4C0]
	0x03C6A260 BL 0x1C16CF4
	0x03C6A264 ADRP X0, 0x489000
	0x03C6A268 LDR X0, [X0 + 0x598]
	0x03C6A26C BL 0x1C16CF4
	0x03C6A270 ADRP X0, 0x489000
	0x03C6A274 LDR X0, [X0 + 0x988]
	0x03C6A278 BL 0x1C16CF4
	0x03C6A27C MOVZ W8, 0x1
	0x03C6A280 STRB W8, [X22 + 0x5CE]
	0x03C6A284 ADRP X28, 0x77C000
	0x03C6A288 ADRP X26, 0x4EF000
	0x03C6A28C LDRB W8, [X28 + 0x510]
	0x03C6A290 LDR X26, [X26 + 0x20]
	0x03C6A294 TBNZ X8, 0x0, 0x3C6A2AC
	0x03C6A298 ADRP X0, 0x4EF000
	0x03C6A29C LDR X0, [X0 + 0x20]
	0x03C6A2A0 BL 0x1C16CF4
	0x03C6A2A4 MOVZ W8, 0x1
	0x03C6A2A8 STRB W8, [X28 + 0x510]
	0x03C6A2AC LDR X8, [X26]
	0x03C6A2B0 LDR X8, [X8 + 0xB8]
	0x03C6A2B4 LDR X22, [X8]
	0x03C6A2B8 CBZ X22, 0x3C6AA08
	0x03C6A2BC ADRP X27, 0x77C000
	0x03C6A2C0 LDR X8, [X27 + 0x4A8]
	0x03C6A2C4 CBNZ X8, 0x3C6A2DC
	0x03C6A2C8 ADRP X0, 0xFFFFFFFFFCE87000
	0x03C6A2CC ADD X0, X0, 0x566
	0x03C6A2D0 BL 0x1C16CB8
	0x03C6A2D4 MOV X8, X0
	0x03C6A2D8 STR X0, [X27 + 0x4A8]
	0x03C6A2DC ADRP X27, 0x4B5000
	0x03C6A2E0 LDR X27, [X27 + 0x5C8]
	0x03C6A2E4 MOV X0, X22
	0x03C6A2E8 BLR X8
	0x03C6A2EC CMP W0, 0x7
	0x03C6A2F0 MOV W29, W31
	0x03C6A2F4 B.HI 0x3C6A6D8
	0x03C6A2F8 ADRP X9, 0xFFFFFFFFFCF2D000
	0x03C6A2FC MOV W8, W0
	0x03C6A300 ADD X9, X9, 0xE32
	0x03C6A304 ADR X10, 0x10
	0x03C6A308 LDRB W11, [X9, X8, LSL]
	0x03C6A30C ADD X10, X10, X11, 0x2, LSL
	0x03C6A310 BR X10
	0x03C6A314 MOV X0, X22
	0x03C6A318 BL 0x3C62C40
	0x03C6A31C FADD S2, S10, S11

ISIL:
	001 Move [X31-80], D11
	002 Move [X31-72], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X22, 0x77D000
	012 Move W8, [X22+1492]
	013 Move X19, X2
	014 Move X20, X1
	015 Move W21, W0
	016 Move V8, V3
	017 Move V9, V2
	018 Move V10, V1
	019 Move V11, V0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {29}
	024 Move X0, 0x4B1000
	025 Move X0, [X0+1216]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X22+1492], W8
	029 Move X22, 0x77D000
	030 Move X23, 0x4F0000
	031 Move W8, [X22+1296]
	032 Move X23, [X23+32]
	033 Move TEMP, X8
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfEqual {42}
	037 Move X0, 0x4F0000
	038 Move X0, [X0+32]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X22+1296], W8
	042 Move X8, [X23]
	043 Move X8, [X8+184]
	044 Move X0, [X8]
	045 Compare X0, 0
	046 JumpIfEqual {84}
	047 Move X23, 0x4B1000
	048 Move X23, [X23+1216]
	049 Call Event.get_mousePosition, X0
	050 NotImplemented "Instruction FCMP not yet implemented."
	051 Move W22, W31
	052 NotImplemented "Instruction FCMP not yet implemented."
	053 Add S2, S11, S9
	054 NotImplemented "Instruction FCMP not yet implemented."
	055 Add S0, S10, S8
	056 NotImplemented "Instruction FCMP not yet implemented."
	057 NotImplemented "Instruction CSET not yet implemented."
	058 Move X0, [X23]
	059 Move W8, [X0+224]
	060 Compare W8, 0
	061 JumpIfNotEqual {63}
	062 Call 0x1C17DFC
	063 Move V2, V9
	064 Move V3, V8
	065 Move W0, W21
	066 Move W2, W22
	067 Move X3, X20
	068 Move X4, X19
	069 Move X20, [X31+64]
	070 Move X19, [X31+72]
	071 Move X22, [X31+48]
	072 Move X21, [X31+56]
	073 Move X30, [X31+32]
	074 Move X23, [X31+40]
	075 Move D9, [X31+16]
	076 Move D8, [X31+24]
	077 Move V0, V11
	078 Move V1, V10
	079 Move W1, W31
	080 Move D11, [X31+80]
	081 Move D10, [X31+88]
	082 Call GUI.DoControl, X0, X1, X2, X3, X4, X5
	083 Return X0
	084 Call 0x1C17F20

Method: System.Single HorizontalSlider(UnityEngine.Rect position, System.Single value, System.Single leftValue, System.Single rightValue, UnityEngine.GUIStyle slider, UnityEngine.GUIStyle thumb)

Disassembly:
	0x03C6C4F4 LDR X0, [X25]
	0x03C6C4F8 BL 0x1C16F10
	0x03C6C4FC MOV X23, X0
	0x03C6C500 BL 0x3C6FB68
	0x03C6C504 CBZ X19, 0x3C6C660
	0x03C6C508 STR X23, [X19 + 0x18]
	0x03C6C50C CBZ X26, 0x3C6C660
	0x03C6C510 STR X23, [X26 + 0x18]
	0x03C6C514 LDR X8, [X24]
	0x03C6C518 LDR X8, [X8 + 0xB8]
	0x03C6C51C LDR X8, [X8 + 0x10]
	0x03C6C520 CBZ X8, 0x3C6C660
	0x03C6C524 LDR X0, [X8 + 0x18]
	0x03C6C528 CBZ X0, 0x3C6C660
	0x03C6C52C LDR X8, [X0]
	0x03C6C530 STR X22, [X0 + 0x40]
	0x03C6C534 MOV X1, X22
	0x03C6C538 LDP X9, X2, [X8 + 0x1F8]
	0x03C6C53C BLR X9
	0x03C6C540 LDR X0, [X24]
	0x03C6C544 LDR X8, [X0 + 0xB8]
	0x03C6C548 LDR X8, [X8 + 0x10]
	0x03C6C54C CBZ X8, 0x3C6C660
	0x03C6C550 LDR X9, [X8 + 0x18]
	0x03C6C554 CBZ X9, 0x3C6C660
	0x03C6C558 STR W21, [X9 + 0x5C]
	0x03C6C55C CBZ X20, 0x3C6C59C
	0x03C6C560 LDR W9, [X0 + 0xE0]
	0x03C6C564 CBNZ W9, 0x3C6C57C
	0x03C6C568 BL 0x1C16DFC
	0x03C6C56C LDR X8, [X24]
	0x03C6C570 LDR X8, [X8 + 0xB8]
	0x03C6C574 LDR X8, [X8 + 0x10]
	0x03C6C578 CBZ X8, 0x3C6C660
	0x03C6C57C LDR X0, [X8 + 0x18]
	0x03C6C580 CBZ X0, 0x3C6C660
	0x03C6C584 LDR X8, [X0]
	0x03C6C588 MOV X1, X20
	0x03C6C58C LDR X9, [X8 + 0x208]
	0x03C6C590 LDR X2, [X8 + 0x210]
	0x03C6C594 BLR X9
	0x03C6C598 LDR X0, [X24]
	0x03C6C59C LDR W8, [X0 + 0xE0]
	0x03C6C5A0 CBNZ W8, 0x3C6C5AC
	0x03C6C5A4 BL 0x1C16DFC
	0x03C6C5A8 LDR X0, [X24]
	0x03C6C5AC LDR X8, [X0 + 0xB8]
	0x03C6C5B0 LDR X8, [X8 + 0x10]
	0x03C6C5B4 CBZ X8, 0x3C6C660
	0x03C6C5B8 LDR X0, [X8 + 0x20]
	0x03C6C5BC CBZ X0, 0x3C6C660

ISIL:
	001 Move [X31-96], D14
	002 Move [X31+8], D13
	003 Move [X31+16], D12
	004 Move [X31+24], D11
	005 Move [X31+32], D10
	006 Move [X31+40], D9
	007 Move [X31+48], D8
	008 Move [X31+56], X30
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X22, 0x77B000
	014 Move X21, 0x4AF000
	015 Move W8, [X22+1493]
	016 Move X21, [X21+1216]
	017 Move X19, X1
	018 Move X20, X0
	019 Move V8, V6
	020 Move V9, V5
	021 Move V10, V4
	022 Move V11, V3
	023 Move V12, V2
	024 Move V13, V1
	025 Move V14, V0
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {35}
	030 Move X0, 0x4AF000
	031 Move X0, [X0+1216]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X22+1493], W8
	035 Move X0, [X21]
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {40}
	039 Call 0x1C17DFC
	040 Move V1, V13
	041 Move V2, V12
	042 Move V3, V11
	043 Move V4, V10
	044 Move V6, V9
	045 Move V7, V8
	046 Move X0, X20
	047 Move X1, X19
	048 Move X20, [X31+80]
	049 Move X19, [X31+88]
	050 Move X22, [X31+64]
	051 Move X21, [X31+72]
	052 Move X30, [X31+56]
	053 Move D9, [X31+40]
	054 Move D8, [X31+48]
	055 Move D11, [X31+24]
	056 Move D10, [X31+32]
	057 Move D13, [X31+8]
	058 Move D12, [X31+16]
	059 Move S5, W31
	060 Move W2, 1
	061 Move V0, V14
	062 Move W3, W31
	063 Move X4, X31
	064 Move V14, [X31+96]

Method: System.Single Slider(UnityEngine.Rect position, System.Single value, System.Single size, System.Single start, System.Single end, UnityEngine.GUIStyle slider, UnityEngine.GUIStyle thumb, System.Boolean horiz, System.Int32 id, UnityEngine.GUIStyle thumbExtent = null)

Disassembly:
	0x03C6C5C0 LDR X8, [X0]
	0x03C6C5C4 LDR X9, [X8 + 0x208]
	0x03C6C5C8 LDR X1, [X8 + 0x210]
	0x03C6C5CC BLR X9
	0x03C6C5D0 LDR X8, [X24]
	0x03C6C5D4 LDR X8, [X8 + 0xB8]
	0x03C6C5D8 LDR X8, [X8 + 0x10]
	0x03C6C5DC CBZ X8, 0x3C6C660
	0x03C6C5E0 LDR X0, [X8 + 0x20]
	0x03C6C5E4 CBZ X0, 0x3C6C660
	0x03C6C5E8 LDR X9, [X0]
	0x03C6C5EC LDR X1, [X8 + 0x18]
	0x03C6C5F0 LDR X8, [X9 + 0x268]
	0x03C6C5F4 LDR X2, [X9 + 0x270]
	0x03C6C5F8 BLR X8
	0x03C6C5FC LDR X8, [X24]
	0x03C6C600 LDR X0, [X25]
	0x03C6C604 LDR X8, [X8 + 0xB8]
	0x03C6C608 LDR X21, [X8 + 0x10]
	0x03C6C60C BL 0x1C16F10
	0x03C6C610 MOV X20, X0
	0x03C6C614 BL 0x3C6FB68
	0x03C6C618 STR X20, [X19 + 0x28]
	0x03C6C61C CBZ X21, 0x3C6C660
	0x03C6C620 STR X20, [X21 + 0x28]
	0x03C6C624 B 0x3C6C648
	0x03C6C628 CBZ X19, 0x3C6C660
	0x03C6C62C CBZ X26, 0x3C6C660
	0x03C6C630 LDR X8, [X19 + 0x18]
	0x03C6C634 STR X8, [X26 + 0x18]
	0x03C6C638 LDR X8, [X19 + 0x20]
	0x03C6C63C STR X8, [X26 + 0x20]
	0x03C6C640 LDR X8, [X19 + 0x28]
	0x03C6C644 STR X8, [X26 + 0x28]
	0x03C6C648 LDP X20, X19, [X31 + 0x40]
	0x03C6C64C LDP X22, X21, [X31 + 0x30]
	0x03C6C650 LDP X24, X23, [X31 + 0x20]
	0x03C6C654 LDP X26, X25, [X31 + 0x10]
	0x03C6C658 LDR X30, [X31], #0x50
	0x03C6C65C RET
	0x03C6C660 BL 0x1C16F20
	0x03C6C664 STR X30, [X31 - 0x30]!
	0x03C6C668 STP X22, X21, [X31 + 0x10]
	0x03C6C66C STP X20, X19, [X31 + 0x20]
	0x03C6C670 ADRP X19, 0x77A000
	0x03C6C674 ADRP X21, 0x4F4000
	0x03C6C678 LDRB W8, [X19 + 0x69D]
	0x03C6C67C LDR X21, [X21 + 0x2B0]
	0x03C6C680 TBNZ X8, 0x0, 0x3C6C6A4
	0x03C6C684 ADRP X0, 0x4F4000
	0x03C6C688 LDR X0, [X0 + 0x2B0]
	0x03C6C68C BL 0x1C16CF4
	0x03C6C690 ADRP X0, 0x4B3000
	0x03C6C694 LDR X0, [X0 + 0x5C8]
	0x03C6C698 BL 0x1C16CF4
	0x03C6C69C MOVZ W8, 0x1
	0x03C6C6A0 STRB W8, [X19 + 0x69D]
	0x03C6C6A4 LDR X0, [X21]
	0x03C6C6A8 LDR W8, [X0 + 0xE0]
	0x03C6C6AC CBNZ W8, 0x3C6C6B8
	0x03C6C6B0 BL 0x1C16DFC
	0x03C6C6B4 LDR X0, [X21]
	0x03C6C6B8 LDR X8, [X0 + 0xB8]
	0x03C6C6BC LDR X8, [X8 + 0x10]
	0x03C6C6C0 CBZ X8, 0x3C6C87C
	0x03C6C6C4 LDR X9, [X8 + 0x18]
	0x03C6C6C8 CBZ X9, 0x3C6C87C
	0x03C6C6CC LDR W10, [X0 + 0xE0]
	0x03C6C6D0 LDR W19, [X9 + 0x5C]
	0x03C6C6D4 CBNZ W10, 0x3C6C6EC
	0x03C6C6D8 BL 0x1C16DFC
	0x03C6C6DC LDR X8, [X21]
	0x03C6C6E0 LDR X8, [X8 + 0xB8]
	0x03C6C6E4 LDR X8, [X8 + 0x10]
	0x03C6C6E8 CBZ X8, 0x3C6C87C
	0x03C6C6EC LDR X0, [X8 + 0x18]
	0x03C6C6F0 ADDS W31, W19, 0x1
	0x03C6C6F4 B.EQ 0x3C6C700
	0x03C6C6F8 BL 0x3C6FFB4
	0x03C6C6FC B 0x3C6C858
	0x03C6C700 CBZ X0, 0x3C6C87C
	0x03C6C704 LDR X8, [X0]
	0x03C6C708 LDP X9, X1, [X8 + 0x1B8]
	0x03C6C70C BLR X9
	0x03C6C710 LDR X8, [X21]
	0x03C6C714 LDR X8, [X8 + 0xB8]
	0x03C6C718 LDR X8, [X8 + 0x10]
	0x03C6C71C CBZ X8, 0x3C6C87C
	0x03C6C720 LDR X19, [X8 + 0x18]
	0x03C6C724 MOV X0, X31
	0x03C6C728 BL 0x3C0E0B0
	0x03C6C72C ADRP X8, 0x4B3000
	0x03C6C730 LDR X8, [X8 + 0x5C8]
	0x03C6C734 MOV W20, W0
	0x03C6C738 LDR X8, [X8]
	0x03C6C73C LDR W9, [X8 + 0xE0]
	0x03C6C740 CBNZ W9, 0x3C6C74C
	0x03C6C744 MOV X0, X8
	0x03C6C748 BL 0x1C16DFC
	0x03C6C74C ADRP X22, 0x77A000
	0x03C6C750 LDR X0, [X22 + 0x868]
	0x03C6C754 CBNZ X0, 0x3C6C768
	0x03C6C758 ADRP X0, 0xFFFFFFFFFCEBF000
	0x03C6C75C ADD X0, X0, 0x8A

ISIL:
	001 Subtract X31, X31, 272
	002 Move [X31+128], D15
	003 Move [X31+136], D14
	004 Move [X31+144], D13
	005 Move [X31+152], D12
	006 Move [X31+160], D11
	007 Move [X31+168], D10
	008 Move [X31+176], D9
	009 Move [X31+184], D8
	010 Move [X31+192], X29
	011 Move [X31+208], X30
	012 Move [X31+216], X25
	013 Move [X31+224], X24
	014 Move [X31+232], X23
	015 Move [X31+240], X22
	016 Move [X31+248], X21
	017 Move [X31+256], X20
	018 Move [X31+264], X19
	019 Move X25, 0x77B000
	020 Move X24, 0x4B4000
	021 Move W8, [X25+1494]
	022 Move X24, [X24+1480]
	023 Move X19, X4
	024 Move W23, W3
	025 Move W22, W2
	026 Move X20, X1
	027 Move X21, X0
	028 Move V8, V7
	029 Move V9, V6
	030 Move V10, V5
	031 Move V11, V4
	032 Move V12, V3
	033 Move V13, V2
	034 Move V14, V1
	035 Move V15, V0
	036 Move TEMP, X8
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfEqual {48}
	040 Move X0, 0x4B4000
	041 Move X0, [X0+1480]
	042 Call 0x1C17CF4
	043 Move X0, 0x4AF000
	044 Move X0, [X0+1216]
	045 Call 0x1C17CF4
	046 Move W8, 1
	047 Move [X25+1494], W8
	048 Move X0, [X24]
	049 NotImplemented "Instruction MOVI not yet implemented."
	050 Move [X31+96], V0
	051 Move [X31+104], V0
	052 Move [X31+64], V0
	053 Move [X31+72], V0
	054 Move W8, [X0+224]
	055 Compare W8, 0
	056 JumpIfNotEqual {58}
	057 Call 0x1C17DFC
	058 Call GUIUtility.CheckOnGUI
	059 Compare W23, 0
	060 JumpIfNotEqual {85}
	061 Move X23, 0x4AF000
	062 Move X23, [X23+1216]
	063 Move X0, [X23]
	064 Move W8, [X0+224]
	065 Compare W8, 0
	066 JumpIfNotEqual {69}
	067 Call 0x1C17DFC
	068 Move X0, [X23]
	069 Move X8, [X24]
	070 Move X9, [X0+184]
	071 Move W10, [X8+224]
	072 Move W23, [X9+24]
	073 Compare W10, 0
	074 JumpIfNotEqual {77}
	075 Move X0, X8
	076 Call 0x1C17DFC
	077 Move W1, 2
	078 Move W0, W23
	079 Move V0, V15
	080 Move V1, V14
	081 Move V2, V13
	082 Move V3, V12
	083 Call GUIUtility.GetControlID, X0, X1, X2
	084 Move W23, W0
	085 NotImplemented "Instruction MOVI not yet implemented."
	086 Move [X31+32], V0
	087 Move [X31+40], V0
	088 Move [X31], V0
	089 Move [X31+8], V0
	090 And W3, W22, 1
	091 Add X0, X31, 0
	092 Move V0, V15
	093 Move V1, V14
	094 Move V2, V13
	095 Move V3, V12
	096 Move V4, V11
	097 Move V5, V10
	098 Move V6, V9
	099 Move V7, V8
	100 Move X1, X21
	101 Move X2, X20
	102 Move W4, W23
	103 Move X5, X19
	104 Move X6, X31
	105 Call SliderHandler..ctor, X0, X1, V0, V1, V2, V3, X2, X3, X4, X5, X6
	106 Move V0, [X31]
	107 Move V1, [X31+16]
	108 Move V2, [X31+32]
	109 Move V3, [X31+48]
	110 Add X0, X31, 64
	111 Move X1, X31
	112 Move [X31+64], V0
	113 Move [X31+72], V1
	114 Move [X31+96], V2
	115 Move [X31+104], V3
	116 Call SliderHandler.Handle, X0
	117 Move X20, [X31+256]
	118 Move X19, [X31+264]
	119 Move X22, [X31+240]
	120 Move X21, [X31+248]
	121 Move X24, [X31+224]
	122 Move X23, [X31+232]
	123 Move X30, [X31+208]
	124 Move X25, [X31+216]
	125 Move X29, [X31+192]
	126 Move D9, [X31+176]
	127 Move D8, [X31+184]
	128 Move D11, [X31+160]
	129 Move D10, [X31+168]
	130 Move D13, [X31+144]
	131 Move D12, [X31+152]
	132 Move D15, [X31+128]
	133 Move D14, [X31+136]
	134 Add X31, X31, 272
	135 Return V0

Method: System.Void BeginGroup(UnityEngine.Rect position, UnityEngine.GUIContent content, UnityEngine.GUIStyle style)

Disassembly:
	0x03C6C760 BL 0x1C16CB8
	0x03C6C764 STR X0, [X22 + 0x868]
	0x03C6C768 BLR X0
	0x03C6C76C LDR X8, [X21]
	0x03C6C770 LDR X8, [X8 + 0xB8]
	0x03C6C774 LDR X8, [X8 + 0x10]
	0x03C6C778 CBZ X8, 0x3C6C87C
	0x03C6C77C LDR X8, [X8 + 0x18]
	0x03C6C780 CBZ X8, 0x3C6C87C
	0x03C6C784 CBZ X19, 0x3C6C87C
	0x03C6C788 LDR X9, [X19]
	0x03C6C78C LDR V1, [X8 + 0x14]
	0x03C6C790 SCVTF S2, W20
	0x03C6C794 FDIV S0, S2, S0
	0x03C6C798 LDP X8, X1, [X9 + 0x1D8]
	0x03C6C79C FCMP S0, S1
	0x03C6C7A0 FCSEL S1, S0, S1, MI
	0x03C6C7A4 FMOV S0, W31
	0x03C6C7A8 MOV X0, X19
	0x03C6C7AC BLR X8
	0x03C6C7B0 LDR X8, [X21]
	0x03C6C7B4 LDR X8, [X8 + 0xB8]
	0x03C6C7B8 LDR X8, [X8 + 0x10]
	0x03C6C7BC CBZ X8, 0x3C6C87C
	0x03C6C7C0 LDR X0, [X8 + 0x18]
	0x03C6C7C4 CBZ X0, 0x3C6C87C
	0x03C6C7C8 LDR X8, [X0]
	0x03C6C7CC LDP X9, X1, [X8 + 0x1C8]
	0x03C6C7D0 BLR X9
	0x03C6C7D4 LDR X8, [X21]
	0x03C6C7D8 LDR X8, [X8 + 0xB8]
	0x03C6C7DC LDR X8, [X8 + 0x10]
	0x03C6C7E0 CBZ X8, 0x3C6C87C
	0x03C6C7E4 LDR X19, [X8 + 0x18]
	0x03C6C7E8 MOV X0, X31
	0x03C6C7EC BL 0x3C0E0D8
	0x03C6C7F0 LDR X8, [X22 + 0x868]
	0x03C6C7F4 MOV W20, W0
	0x03C6C7F8 CBNZ X8, 0x3C6C810
	0x03C6C7FC ADRP X0, 0xFFFFFFFFFCEBF000
	0x03C6C800 ADD X0, X0, 0x8A
	0x03C6C804 BL 0x1C16CB8
	0x03C6C808 MOV X8, X0
	0x03C6C80C STR X0, [X22 + 0x868]
	0x03C6C810 BLR X8
	0x03C6C814 LDR X8, [X21]
	0x03C6C818 LDR X8, [X8 + 0xB8]
	0x03C6C81C LDR X8, [X8 + 0x10]
	0x03C6C820 CBZ X8, 0x3C6C87C
	0x03C6C824 LDR X8, [X8 + 0x18]
	0x03C6C828 CBZ X8, 0x3C6C87C
	0x03C6C82C CBZ X19, 0x3C6C87C
	0x03C6C830 LDR X9, [X19]
	0x03C6C834 LDR V1, [X8 + 0x1C]

ISIL:
	001 Move [X31-96], D13
	002 Move [X31-88], D12
	003 Move [X31+16], D11
	004 Move [X31+24], D10
	005 Move [X31+32], D9
	006 Move [X31+40], D8
	007 Move [X31+48], X30
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X21, 0x77B000
	013 Move W8, [X21+1495]
	014 Move X19, X1
	015 Move X20, X0
	016 Move V8, V3
	017 Move V9, V2
	018 Move V10, V1
	019 Move V11, V0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {29}
	024 Move X0, 0x4AF000
	025 Move X0, [X0+1216]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+1495], W8
	029 Move X22, 0x76E000
	030 Move X21, 0x4AF000
	031 Move W8, [X22+1935]
	032 Move X21, [X21+1216]
	033 Compare W8, 0
	034 JumpIfNotEqual {40}
	035 Move X0, 0x490000
	036 Move X0, [X0+3848]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X22+1935], W8
	040 Move X8, 0x490000
	041 Move X8, [X8+3848]
	042 Move X0, [X21]
	043 Move X8, [X8]
	044 Move W9, [X0+224]
	045 Move X8, [X8+184]
	046 Move S13, [X8]
	047 Move S12, [X8+4]
	048 Compare W9, 0
	049 JumpIfNotEqual {51}
	050 Call 0x1C17DFC
	051 Move V0, V11
	052 Move V1, V10
	053 Move V2, V9
	054 Move V3, V8
	055 Move X0, X20
	056 Move X1, X19
	057 Move X20, [X31+80]
	058 Move X19, [X31+88]
	059 Move X22, [X31+64]
	060 Move X21, [X31+72]
	061 Move X30, [X31+48]
	062 Move D9, [X31+32]
	063 Move D8, [X31+40]
	064 Move D11, [X31+16]
	065 Move D10, [X31+24]
	066 Move V4, V13
	067 Move V5, V12
	068 Move D13, [X31+96]
	069 Move D12, [X31+104]

Method: System.Void BeginGroup(UnityEngine.Rect position, UnityEngine.GUIContent content, UnityEngine.GUIStyle style, UnityEngine.Vector2 scrollOffset)

Disassembly:
	0x03C6C838 SCVTF S2, W20
	0x03C6C83C FDIV S0, S2, S0
	0x03C6C840 LDP X8, X1, [X9 + 0x1E8]
	0x03C6C844 FCMP S0, S1
	0x03C6C848 FCSEL S1, S0, S1, MI
	0x03C6C84C FMOV S0, W31
	0x03C6C850 MOV X0, X19
	0x03C6C854 BLR X8
	0x03C6C858 LDR X8, [X21]
	0x03C6C85C LDR X8, [X8 + 0xB8]
	0x03C6C860 LDR X8, [X8 + 0x10]
	0x03C6C864 CBZ X8, 0x3C6C87C
	0x03C6C868 LDR X0, [X8 + 0x28]
	0x03C6C86C LDP X20, X19, [X31 + 0x20]
	0x03C6C870 LDP X22, X21, [X31 + 0x10]
	0x03C6C874 LDR X30, [X31], #0x30
	0x03C6C878 B 0x3C6FDF8
	0x03C6C87C BL 0x1C16F20
	0x03C6C880 STR X30, [X31 - 0x20]!
	0x03C6C884 STP X20, X19, [X31 + 0x10]
	0x03C6C888 ADRP X19, 0x77A000
	0x03C6C88C ADRP X20, 0x4AE000
	0x03C6C890 LDRB W8, [X19 + 0x5DE]
	0x03C6C894 LDR X20, [X20 + 0x4C0]
	0x03C6C898 TBNZ X8, 0x0, 0x3C6C8B0
	0x03C6C89C ADRP X0, 0x4AE000
	0x03C6C8A0 LDR X0, [X0 + 0x4C0]
	0x03C6C8A4 BL 0x1C16CF4
	0x03C6C8A8 MOVZ W8, 0x1
	0x03C6C8AC STRB W8, [X19 + 0x5DE]
	0x03C6C8B0 LDR X0, [X20]
	0x03C6C8B4 LDR W8, [X0 + 0xE0]
	0x03C6C8B8 CBNZ W8, 0x3C6C8C0
	0x03C6C8BC BL 0x1C16DFC
	0x03C6C8C0 ADRP X8, 0xFFFFFFFFFCE7E000
	0x03C6C8C4 LDR V2, [X8 + 0x18C]
	0x03C6C8C8 LDP X20, X19, [X31 + 0x10]
	0x03C6C8CC FMOV S0, W31
	0x03C6C8D0 FMOV S1, W31
	0x03C6C8D4 MOV V3.16B, V2.16B
	0x03C6C8D8 LDR X30, [X31], #0x20
	0x03C6C8DC B 0x3C66DD0
	0x03C6C8E0 STP X30, X21, [X31 - 0x20]!
	0x03C6C8E4 STP X20, X19, [X31 + 0x10]
	0x03C6C8E8 LDR X8, [X2 + 0x8]
	0x03C6C8EC STP X1, X2, [X0 + 0x20]
	0x03C6C8F0 MOV X19, X0
	0x03C6C8F4 MOV X20, X1
	0x03C6C8F8 STR X8, [X0 + 0x10]
	0x03C6C8FC LDRB W21, [X2 + 0x52]
	0x03C6C900 STR X0, [X0 + 0x40]
	0x03C6C904 MOV X0, X2
	0x03C6C908 BL 0x1C16D84
	0x03C6C90C TBZ X0, 0x0, 0x3C6C928
	0x03C6C910 CMP W21, 0x1
	0x03C6C914 B.NE 0x3C6C92C
	0x03C6C918 ADRP X8, 0xFFFFFFFFFDFA0000
	0x03C6C91C ADD X8, X8, 0x2C8
	0x03C6C920 STR X8, [X19 + 0x18]
	0x03C6C924 B 0x3C6C93C
	0x03C6C928 CBZ X20, 0x3C6C954
	0x03C6C92C LDR X8, [X19 + 0x10]
	0x03C6C930 LDR X9, [X19 + 0x20]
	0x03C6C934 STR X8, [X19 + 0x18]
	0x03C6C938 STR X9, [X19 + 0x40]
	0x03C6C93C ADRP X8, 0xFFFFFFFFFDFA0000
	0x03C6C940 ADD X8, X8, 0x280
	0x03C6C944 STR X8, [X19 + 0x38]
	0x03C6C948 LDP X20, X19, [X31 + 0x10]
	0x03C6C94C LDP X30, X21, [X31], #0x20
	0x03C6C950 RET
	0x03C6C954 ADRP X1, 0xFFFFFFFFFCEAF000
	0x03C6C958 ADD X1, X1, 0xEE3
	0x03C6C95C MOV X0, X31
	0x03C6C960 BL 0x1C16F3C
	0x03C6C964 MOV X1, X31
	0x03C6C968 BL 0x1C16DEC
	0x03C6C96C LDR X8, [X0 + 0x40]
	0x03C6C970 LDR X3, [X0 + 0x18]
	0x03C6C974 LDR X2, [X0 + 0x28]
	0x03C6C978 MOV X0, X8
	0x03C6C97C BR X3
	0x03C6C980 STR X30, [X31 - 0x20]!
	0x03C6C984 STP X20, X19, [X31 + 0x10]
	0x03C6C988 ADRP X20, 0x77A000
	0x03C6C98C LDR X1, [X20 + 0x638]
	0x03C6C990 MOV X19, X0
	0x03C6C994 CBNZ X1, 0x3C6C9AC
	0x03C6C998 ADRP X0, 0xFFFFFFFFFCE8D000
	0x03C6C99C ADD X0, X0, 0xA10
	0x03C6C9A0 BL 0x1C16CB8
	0x03C6C9A4 MOV X1, X0
	0x03C6C9A8 STR X0, [X20 + 0x638]
	0x03C6C9AC MOV X0, X19
	0x03C6C9B0 LDP X20, X19, [X31 + 0x10]
	0x03C6C9B4 LDR X30, [X31], #0x20
	0x03C6C9B8 BR X1
	0x03C6C9BC SUB X31, X31, 0x40
	0x03C6C9C0 STR X30, [X31 + 0x20]
	0x03C6C9C4 STP X20, X19, [X31 + 0x30]
	0x03C6C9C8 ADRP X20, 0x77A000
	0x03C6C9CC LDR X8, [X20 + 0x640]
	0x03C6C9D0 MOV W19, W0
	0x03C6C9D4 STP S0, S1, [X31 + 0x10]
	0x03C6C9D8 STP S2, S3, [X31 + 0x18]
	0x03C6C9DC STP S4, S5, [X31 + 0x28]
	0x03C6C9E0 STP S6, S7, [X31 + 0x8]
	0x03C6C9E4 CBNZ X8, 0x3C6C9FC
	0x03C6C9E8 ADRP X0, 0xFFFFFFFFFCEA7000
	0x03C6C9EC ADD X0, X0, 0x317
	0x03C6C9F0 BL 0x1C16CB8
	0x03C6C9F4 MOV X8, X0
	0x03C6C9F8 STR X0, [X20 + 0x640]
	0x03C6C9FC AND W3, W19, 0x1
	0x03C6CA00 ADD X0, X31, 0x10
	0x03C6CA04 ADD X1, X31, 0x28
	0x03C6CA08 ADD X2, X31, 0x8
	0x03C6CA0C BLR X8
	0x03C6CA10 LDP X20, X19, [X31 + 0x30]
	0x03C6CA14 LDR X30, [X31 + 0x20]
	0x03C6CA18 ADD X31, X31, 0x40
	0x03C6CA1C RET
	0x03C6CA20 STP X30, X23, [X31 - 0x30]!
	0x03C6CA24 STP X22, X21, [X31 + 0x10]
	0x03C6CA28 STP X20, X19, [X31 + 0x20]
	0x03C6CA2C ADRP X23, 0x77A000
	0x03C6CA30 LDR X4, [X23 + 0x640]
	0x03C6CA34 MOV W21, W3
	0x03C6CA38 MOV X19, X2
	0x03C6CA3C MOV X20, X1
	0x03C6CA40 MOV X22, X0
	0x03C6CA44 CBNZ X4, 0x3C6CA5C
	0x03C6CA48 ADRP X0, 0xFFFFFFFFFCEA7000
	0x03C6CA4C ADD X0, X0, 0x317
	0x03C6CA50 BL 0x1C16CB8
	0x03C6CA54 MOV X4, X0
	0x03C6CA58 STR X0, [X23 + 0x640]
	0x03C6CA5C AND W3, W21, 0x1
	0x03C6CA60 MOV X0, X22
	0x03C6CA64 MOV X1, X20
	0x03C6CA68 MOV X2, X19
	0x03C6CA6C LDP X20, X19, [X31 + 0x20]
	0x03C6CA70 LDP X22, X21, [X31 + 0x10]
	0x03C6CA74 LDP X30, X23, [X31], #0x30
	0x03C6CA78 BR X4
	0x03C6CA7C STP X30, X19, [X31 - 0x10]!
	0x03C6CA80 ADRP X19, 0x77A000
	0x03C6CA84 LDR X0, [X19 + 0x628]
	0x03C6CA88 CBNZ X0, 0x3C6CA9C
	0x03C6CA8C ADRP X0, 0xFFFFFFFFFCEA3000
	0x03C6CA90 ADD X0, X0, 0x94A
	0x03C6CA94 BL 0x1C16CB8
	0x03C6CA98 STR X0, [X19 + 0x628]
	0x03C6CA9C LDP X30, X19, [X31], #0x10
	0x03C6CAA0 BR X0
	0x03C6CAA4 SUB X31, X31, 0x20
	0x03C6CAA8 STP X30, X19, [X31 + 0x10]
	0x03C6CAAC ADRP X19, 0x77A000
	0x03C6CAB0 LDR X8, [X19 + 0x648]
	0x03C6CAB4 STP S0, S1, [X31 + 0x8]
	0x03C6CAB8 STR X31, [X31]
	0x03C6CABC CBNZ X8, 0x3C6CAD4
	0x03C6CAC0 ADRP X0, 0xFFFFFFFFFCEBE000
	0x03C6CAC4 ADD X0, X0, 0xEF6
	0x03C6CAC8 BL 0x1C16CB8
	0x03C6CACC MOV X8, X0
	0x03C6CAD0 STR X0, [X19 + 0x648]
	0x03C6CAD4 ADD X0, X31, 0x8
	0x03C6CAD8 ADD X1, X31, 0x0
	0x03C6CADC BLR X8
	0x03C6CAE0 LDP S0, S1, [X31]
	0x03C6CAE4 LDP X30, X19, [X31 + 0x10]
	0x03C6CAE8 ADD X31, X31, 0x20
	0x03C6CAEC RET
	0x03C6CAF0 STP X30, X21, [X31 - 0x20]!
	0x03C6CAF4 STP X20, X19, [X31 + 0x10]
	0x03C6CAF8 ADRP X21, 0x77A000
	0x03C6CAFC LDR X2, [X21 + 0x648]
	0x03C6CB00 MOV X19, X1

ISIL:
	001 Move [X31-128], D13
	002 Move [X31-120], D12
	003 Move [X31+16], D11
	004 Move [X31+24], D10
	005 Move [X31+32], D9
	006 Move [X31+40], D8
	007 Move [X31+48], X30
	008 Move [X31+64], X26
	009 Move [X31+72], X25
	010 Move [X31+80], X24
	011 Move [X31+88], X23
	012 Move [X31+96], X22
	013 Move [X31+104], X21
	014 Move [X31+112], X20
	015 Move [X31+120], X19
	016 Move X21, 0x77B000
	017 Move X23, 0x4B4000
	018 Move W8, [X21+1496]
	019 Move X23, [X23+1480]
	020 Move V8, V5
	021 Move V9, V4
	022 Move X20, X1
	023 Move X19, X0
	024 Move V10, V3
	025 Move V11, V2
	026 Move V12, V1
	027 Move V13, V0
	028 Move TEMP, X8
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {46}
	032 Move X0, 0x4B3000
	033 Move X0, [X0+3024]
	034 Call 0x1C17CF4
	035 Move X0, 0x4AF000
	036 Move X0, [X0+2192]
	037 Call 0x1C17CF4
	038 Move X0, 0x4B4000
	039 Move X0, [X0+1480]
	040 Call 0x1C17CF4
	041 Move X0, 0x4AF000
	042 Move X0, [X0+1216]
	043 Call 0x1C17CF4
	044 Move W8, 1
	045 Move [X21+1496], W8
	046 Move X0, [X23]
	047 Move X21, 0x4AF000
	048 Move W8, [X0+224]
	049 Move X21, [X21+1216]
	050 Compare W8, 0
	051 JumpIfNotEqual {53}
	052 Call 0x1C17DFC
	053 Move X22, 0x4B3000
	054 Move X22, [X22+3024]
	055 Call GUIUtility.CheckOnGUI
	056 Move X0, [X21]
	057 Move W8, [X0+224]
	058 Compare W8, 0
	059 JumpIfNotEqual {62}
	060 Call 0x1C17DFC
	061 Move X0, [X21]
	062 Move X8, [X0+184]
	063 Move W1, 2
	064 Move W0, [X8+28]
	065 Call GUIUtility.GetControlID, X0, X1
	066 Move X8, [X22]
	067 Move W21, W0
	068 Move W9, [X8+224]
	069 Compare W9, 0
	070 JumpIfNotEqual {74}
	071 Move X0, X8
	072 Call 0x1C17DFC
	073 Move X8, [X22]
	074 Move X8, [X8+184]
	075 Move X8, [X8+24]
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Move X8, 0x4AF000
	078 Move X8, [X8+2192]
	079 Move X0, [X8]
	080 Move W8, [X0+224]
	081 Compare W8, 0
	082 JumpIfNotEqual {84}
	083 Call 0x1C17DFC
	084 Call GUIStyle.get_none
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move X24, 0x77B000
	087 Move X25, 0x4EE000
	088 Move W8, [X24+1296]
	089 Move X25, [X25+32]
	090 Move TEMP, X8
	091 And TEMP, TEMP, 1
	092 Compare TEMP, 1
	093 JumpIfEqual {99}
	094 Move X0, 0x4EE000
	095 Move X0, [X0+32]
	096 Call 0x1C17CF4
	097 Move W8, 1
	098 Move [X24+1296], W8
	099 Move X8, [X25]
	100 Move X8, [X8+184]
	101 Move X22, [X8]
	102 Compare X22, 0
	103 JumpIfEqual {207}
	104 Move X26, 0x77B000
	105 Move X8, [X26+1192]
	106 Compare X8, 0
	107 JumpIfNotEqual {113}
	108 Move X0, -51879936
	109 Add X0, X0, 1382
	110 Call 0x1C17CB8
	111 Move X8, X0
	112 Move [X26+1192], X0
	113 Move X0, X22
	114 NotImplemented "Instruction BLR not yet implemented."
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Compare X20, 0
	117 JumpIfEqual {207}
	118 Move X0, X20
	119 Move V0, V13
	120 Move V1, V12
	121 Move V2, V11
	122 Move V3, V10
	123 Move X1, X19
	124 Move W2, W21
	125 Move W3, W31
	126 Move W4, W31
	127 Move W5, W31
	128 Move W6, W31
	129 Call GUIStyle.Draw, X0, X1, X2, X3, X4, X5, X6, X7
	130 Move W8, [X24+1296]
	131 Move TEMP, X8
	132 And TEMP, TEMP, 1
	133 Compare TEMP, 1
	134 JumpIfEqual {140}
	135 Move X0, 0x4EE000
	136 Move X0, [X0+32]
	137 Call 0x1C17CF4
	138 Move W8, 1
	139 Move [X24+1296], W8
	140 Move X8, [X25]
	141 Move X8, [X8+184]
	142 Move X0, [X8]
	143 Compare X0, 0
	144 JumpIfEqual {207}
	145 Call Event.get_mousePosition, X0
	146 Add S2, S12, S10
	147 NotImplemented "Instruction FCMP not yet implemented."
	148 NotImplemented "Instruction FCMP not yet implemented."
	149 NotImplemented "Instruction FCMP not yet implemented."
	150 Add S1, S13, S11
	151 NotImplemented "Instruction FCMP not yet implemented."
	152 Move X0, [X23]
	153 Move W8, [X0+224]
	154 Compare W8, 0
	155 JumpIfNotEqual {157}
	156 Call 0x1C17DFC
	157 Move X19, 0x77B000
	158 Move X8, [X19+2168]
	159 Compare X8, 0
	160 JumpIfNotEqual {166}
	161 Move X0, -51707904
	162 Add X0, X0, 819
	163 Call 0x1C17CB8
	164 Move X8, X0
	165 Move [X19+2168], X0
	166 Move W0, 1
	167 NotImplemented "Instruction BLR not yet implemented."
	168 Move X19, 0x76E000
	169 Move W8, [X19+1935]
	170 Compare W8, 0
	171 JumpIfNotEqual {177}
	172 Move X0, 0x490000
	173 Move X0, [X0+3848]
	174 Call 0x1C17CF4
	175 Move W8, 1
	176 Move [X19+1935], W8
	177 Move X8, 0x490000
	178 Move X8, [X8+3848]
	179 Move V2, V11
	180 Move V3, V10
	181 Move V4, V9
	182 Move X8, [X8]
	183 Move V5, V8
	184 Move X20, [X31+112]
	185 Move X19, [X31+120]
	186 Move X22, [X31+96]
	187 Move X21, [X31+104]
	188 Move X8, [X8+184]
	189 Move X24, [X31+80]
	190 Move X23, [X31+88]
	191 Move X26, [X31+64]
	192 Move X25, [X31+72]
	193 Move X30, [X31+48]
	194 Move S6, [X8]
	195 Move S7, [X8+4]
	196 Move D9, [X31+32]
	197 Move D8, [X31+40]
	198 Move D11, [X31+16]
	199 Move D10, [X31+24]
	200 Move V0, V13
	201 Move V1, V12
	202 Move W0, W31
	203 Move D13, [X31+128]
	204 Move D12, [X31+136]
	205 Call GUIClip.Internal_Push, X0, X1, X2, X3
	206 Return 
	207 Call 0x1C17F20

Method: System.Void EndGroup()

Disassembly:
	0x03C6CBE4 BL 0x1C16CB8
	0x03C6CBE8 MOV X1, X0
	0x03C6CBEC STR X0, [X20 + 0x658]
	0x03C6CBF0 MOV X0, X19
	0x03C6CBF4 LDP X20, X19, [X31 + 0x10]
	0x03C6CBF8 LDR X30, [X31], #0x20
	0x03C6CBFC BR X1
	0x03C6CC00 STR X30, [X31 - 0x20]!
	0x03C6CC04 STP X20, X19, [X31 + 0x10]
	0x03C6CC08 ADRP X20, 0x77A000
	0x03C6CC0C LDR X1, [X20 + 0x660]
	0x03C6CC10 MOV X19, X0
	0x03C6CC14 CBNZ X1, 0x3C6CC2C
	0x03C6CC18 ADRP X0, 0xFFFFFFFFFCE97000
	0x03C6CC1C ADD X0, X0, 0x79A
	0x03C6CC20 BL 0x1C16CB8
	0x03C6CC24 MOV X1, X0
	0x03C6CC28 STR X0, [X20 + 0x660]
	0x03C6CC2C MOV X0, X19
	0x03C6CC30 LDP X20, X19, [X31 + 0x10]
	0x03C6CC34 LDR X30, [X31], #0x20
	0x03C6CC38 BR X1
	0x03C6CC3C SUB X31, X31, 0x90
	0x03C6CC40 STR X30, [X31 + 0x80]
	0x03C6CC44 LDP V5, V4, [X0 + 0x20]
	0x03C6CC48 LDP V7, V6, [X0]
	0x03C6CC4C ADD X1, X31, 0x0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x77B000
	005 Move X20, 0x4B4000
	006 Move W8, [X19+1497]
	007 Move X20, [X20+1480]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x4B4000
	013 Move X0, [X0+1480]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+1497], W8
	017 Move X0, [X20]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {22}
	021 Call 0x1C17DFC
	022 Call GUIUtility.CheckOnGUI
	023 Move X19, 0x77B000
	024 Move X0, [X19+1568]
	025 Compare X0, 0
	026 JumpIfNotEqual {31}
	027 Move X0, -51822592
	028 Add X0, X0, 2117
	029 Call 0x1C17CB8
	030 Move [X19+1568], X0
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 CallNoReturn X0

Method: UnityEngineInternal.GenericStack get_scrollViewStates()

Disassembly:
	0x03C6CC78 RET
	0x03C6CC7C SUB X31, X31, 0x30
	0x03C6CC80 STP X30, X21, [X31 + 0x10]
	0x03C6CC84 STP X20, X19, [X31 + 0x20]
	0x03C6CC88 ADRP X21, 0x77A000
	0x03C6CC8C LDR X8, [X21 + 0x668]
	0x03C6CC90 MOV X19, X1
	0x03C6CC94 MOV X20, X0
	0x03C6CC98 STP S0, S1, [X31]
	0x03C6CC9C STP S2, S3, [X31 + 0x8]
	0x03C6CCA0 CBNZ X8, 0x3C6CCB8
	0x03C6CCA4 ADRP X0, 0xFFFFFFFFFCEAB000
	0x03C6CCA8 ADD X0, X0, 0x69
	0x03C6CCAC BL 0x1C16CB8
	0x03C6CCB0 MOV X8, X0
	0x03C6CCB4 STR X0, [X21 + 0x668]
	0x03C6CCB8 ADD X2, X31, 0x0
	0x03C6CCBC MOV X0, X20
	0x03C6CCC0 MOV X1, X19
	0x03C6CCC4 BLR X8
	0x03C6CCC8 LDP X20, X19, [X31 + 0x20]
	0x03C6CCCC LDP X30, X21, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x77B000
	005 Move X19, 0x4AF000
	006 Move W8, [X20+1498]
	007 Move X19, [X19+1216]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x4AF000
	013 Move X0, [X0+1216]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+1498], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X0, [X8+72]
	027 Move X30, [X31+32]
	028 Return X0

Method: UnityEngine.Rect Window(System.Int32 id, UnityEngine.Rect clientRect, UnityEngine.GUI/WindowFunction func, UnityEngine.GUIContent title, UnityEngine.GUIStyle style)

Disassembly:
	0x03C6CCD0 ADD X31, X31, 0x30
	0x03C6CCD4 RET
	0x03C6CCD8 STR X30, [X31 - 0x30]!
	0x03C6CCDC STP X22, X21, [X31 + 0x10]
	0x03C6CCE0 STP X20, X19, [X31 + 0x20]
	0x03C6CCE4 ADRP X22, 0x77A000
	0x03C6CCE8 LDR X3, [X22 + 0x668]
	0x03C6CCEC MOV X19, X2
	0x03C6CCF0 MOV X20, X1
	0x03C6CCF4 MOV X21, X0
	0x03C6CCF8 CBNZ X3, 0x3C6CD10
	0x03C6CCFC ADRP X0, 0xFFFFFFFFFCEAB000
	0x03C6CD00 ADD X0, X0, 0x69
	0x03C6CD04 BL 0x1C16CB8
	0x03C6CD08 MOV X3, X0
	0x03C6CD0C STR X0, [X22 + 0x668]
	0x03C6CD10 MOV X0, X21
	0x03C6CD14 MOV X1, X20
	0x03C6CD18 MOV X2, X19
	0x03C6CD1C LDP X20, X19, [X31 + 0x20]
	0x03C6CD20 LDP X22, X21, [X31 + 0x10]
	0x03C6CD24 LDR X30, [X31], #0x30
	0x03C6CD28 BR X3
	0x03C6CD2C STP X30, X19, [X31 - 0x10]!
	0x03C6CD30 ADRP X19, 0x77A000
	0x03C6CD34 LDR X0, [X19 + 0x630]
	0x03C6CD38 CBNZ X0, 0x3C6CD4C
	0x03C6CD3C ADRP X0, 0xFFFFFFFFFCE8F000
	0x03C6CD40 ADD X0, X0, 0x889
	0x03C6CD44 BL 0x1C16CB8
	0x03C6CD48 STR X0, [X19 + 0x630]
	0x03C6CD4C LDP X30, X19, [X31], #0x10
	0x03C6CD50 BR X0
	0x03C6CD54 B 0x3C6CAA4
	0x03C6CD58 B 0x3C6CB34
	0x03C6CD5C SUB X31, X31, 0xD0
	0x03C6CD60 STR X30, [X31 + 0xC0]
	0x03C6CD64 STRB W31, [X0]
	0x03C6CD68 LDP V5, V4, [X1 + 0x20]
	0x03C6CD6C LDP V7, V6, [X1]
	0x03C6CD70 ADD X0, X31, 0x80
	0x03C6CD74 STP V5, V4, [X31 + 0x20]
	0x03C6CD78 STP V7, V6, [X31]
	0x03C6CD7C LDP V5, V4, [X1 + 0x20]
	0x03C6CD80 LDP V6, V7, [X1]
	0x03C6CD84 ADD X1, X31, 0x40
	0x03C6CD88 STP V5, V4, [X31 + 0xA0]
	0x03C6CD8C LDP V4, V5, [X31]
	0x03C6CD90 STP V6, V7, [X31 + 0x80]
	0x03C6CD94 LDP V6, V7, [X31 + 0x20]
	0x03C6CD98 STP V4, V5, [X31 + 0x40]
	0x03C6CD9C STP V6, V7, [X31 + 0x60]
	0x03C6CDA0 BL 0x3C6CC7C
	0x03C6CDA4 LDR X30, [X31 + 0xC0]
	0x03C6CDA8 ADD X31, X31, 0xD0
	0x03C6CDAC RET

ISIL:
	001 Move [X31-96], D11
	002 Move [X31-88], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X24, 0x77B000
	013 Move X23, 0x4B4000
	014 Move W8, [X24+1499]
	015 Move X23, [X23+1480]
	016 Move X19, X3
	017 Move X20, X2
	018 Move X21, X1
	019 Move V8, V3
	020 Move V9, V2
	021 Move V10, V1
	022 Move V11, V0
	023 Move W22, W0
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {36}
	028 Move X0, 0x4B4000
	029 Move X0, [X0+1480]
	030 Call 0x1C17CF4
	031 Move X0, 0x4AF000
	032 Move X0, [X0+1216]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X24+1499], W8
	036 Move X0, [X23]
	037 Move X23, 0x4AF000
	038 Move W8, [X0+224]
	039 Move X23, [X23+1216]
	040 Compare W8, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 Call GUIUtility.CheckOnGUI
	044 Move X0, [X23]
	045 Move W8, [X0+224]
	046 Compare W8, 0
	047 JumpIfNotEqual {49}
	048 Call 0x1C17DFC
	049 Call GUI.get_skin
	050 Move X4, X0
	051 Move W0, W22
	052 Move V2, V9
	053 Move V3, V8
	054 Move X1, X21
	055 Move X2, X20
	056 Move X3, X19
	057 Move X20, [X31+80]
	058 Move X19, [X31+88]
	059 Move X22, [X31+64]
	060 Move X21, [X31+72]
	061 Move X24, [X31+48]
	062 Move X23, [X31+56]
	063 Move X30, [X31+32]
	064 Move D9, [X31+16]
	065 Move D8, [X31+24]
	066 Move W5, 1
	067 Move V0, V11
	068 Move V1, V10
	069 Move D11, [X31+96]
	070 Move D10, [X31+104]

Method: UnityEngine.Rect DoWindow(System.Int32 id, UnityEngine.Rect clientRect, UnityEngine.GUI/WindowFunction func, UnityEngine.GUIContent title, UnityEngine.GUIStyle style, UnityEngine.GUISkin skin, System.Boolean forceRectOnLayout)

Disassembly:
	0x03C6CDB0 STP X30, X19, [X31 - 0x10]!
	0x03C6CDB4 LDRB W8, [X0]
	0x03C6CDB8 CBZ W8, 0x3C6CDC4
	0x03C6CDBC LDP X30, X19, [X31], #0x10
	0x03C6CDC0 RET
	0x03C6CDC4 MOVZ W8, 0x1
	0x03C6CDC8 STRB W8, [X0]
	0x03C6CDCC ADRP X19, 0x77A000
	0x03C6CDD0 LDR X0, [X19 + 0x630]
	0x03C6CDD4 CBNZ X0, 0x3C6CDE8
	0x03C6CDD8 ADRP X0, 0xFFFFFFFFFCE8F000
	0x03C6CDDC ADD X0, X0, 0x889
	0x03C6CDE0 BL 0x1C16CB8
	0x03C6CDE4 STR X0, [X19 + 0x630]
	0x03C6CDE8 LDP X30, X19, [X31], #0x10
	0x03C6CDEC BR X0
	0x03C6CDF0 STR X1, [X0 + 0x18]
	0x03C6CDF4 RET
	0x03C6CDF8 STR X1, [X0 + 0x20]
	0x03C6CDFC RET
	0x03C6CE00 STP X30, X21, [X31 - 0x20]!
	0x03C6CE04 STP X20, X19, [X31 + 0x10]
	0x03C6CE08 ADRP X20, 0x77A000
	0x03C6CE0C ADRP X21, 0x489000
	0x03C6CE10 LDRB W8, [X20 + 0x670]
	0x03C6CE14 LDR X21, [X21 + 0x278]
	0x03C6CE18 MOV X19, X0
	0x03C6CE1C TBNZ X8, 0x0, 0x3C6CE34
	0x03C6CE20 ADRP X0, 0x489000
	0x03C6CE24 LDR X0, [X0 + 0x278]
	0x03C6CE28 BL 0x1C16CF4
	0x03C6CE2C MOVZ W8, 0x1
	0x03C6CE30 STRB W8, [X20 + 0x670]
	0x03C6CE34 LDR X8, [X21]
	0x03C6CE38 MOV X0, X19
	0x03C6CE3C MOV X1, X31
	0x03C6CE40 LDR X8, [X8 + 0xB8]
	0x03C6CE44 LDR X8, [X8]
	0x03C6CE48 STR X8, [X19 + 0x10]
	0x03C6CE4C STR X8, [X19 + 0x20]
	0x03C6CE50 LDP X20, X19, [X31 + 0x10]
	0x03C6CE54 LDP X30, X21, [X31], #0x20
	0x03C6CE58 B 0x33BDD8C
	0x03C6CE5C STR X30, [X31 - 0x30]!
	0x03C6CE60 STP X22, X21, [X31 + 0x10]
	0x03C6CE64 STP X20, X19, [X31 + 0x20]
	0x03C6CE68 ADRP X21, 0x77A000
	0x03C6CE6C ADRP X22, 0x489000
	0x03C6CE70 LDRB W8, [X21 + 0x671]
	0x03C6CE74 LDR X22, [X22 + 0x278]
	0x03C6CE78 MOV X19, X1
	0x03C6CE7C MOV X20, X0
	0x03C6CE80 TBNZ X8, 0x0, 0x3C6CE98
	0x03C6CE84 ADRP X0, 0x489000
	0x03C6CE88 LDR X0, [X0 + 0x278]
	0x03C6CE8C BL 0x1C16CF4
	0x03C6CE90 MOVZ W8, 0x1
	0x03C6CE94 STRB W8, [X21 + 0x671]
	0x03C6CE98 LDR X8, [X22]
	0x03C6CE9C MOV X0, X20
	0x03C6CEA0 MOV X1, X19
	0x03C6CEA4 LDP X20, X19, [X31 + 0x20]
	0x03C6CEA8 LDR X8, [X8 + 0xB8]

ISIL:
	001 Move [X31-112], D11
	002 Move [X31-104], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X26, 0x77B000
	015 Move X25, 0x4B4000
	016 Move W8, [X26+1500]
	017 Move X25, [X25+1480]
	018 Move W23, W5
	019 Move X19, X4
	020 Move X20, X3
	021 Move X21, X2
	022 Move X22, X1
	023 Move V8, V3
	024 Move V9, V2
	025 Move V10, V1
	026 Move V11, V0
	027 Move W24, W0
	028 Move TEMP, X8
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {40}
	032 Move X0, 0x4B4000
	033 Move X0, [X0+1480]
	034 Call 0x1C17CF4
	035 Move X0, 0x4AF000
	036 Move X0, [X0+1216]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X26+1500], W8
	040 Move X0, [X25]
	041 Move X26, 0x4AF000
	042 Move W8, [X0+224]
	043 Move X26, [X26+1216]
	044 Compare W8, 0
	045 JumpIfNotEqual {48}
	046 Call 0x1C17DFC
	047 Move X0, [X25]
	048 Move X8, [X26]
	049 Move X9, [X0+184]
	050 Move W10, [X8+224]
	051 Move W25, [X9+8]
	052 Compare W10, 0
	053 JumpIfNotEqual {56}
	054 Move X0, X8
	055 Call 0x1C17DFC
	056 And W6, W23, 1
	057 Move W0, W24
	058 Move W1, W25
	059 Move V2, V9
	060 Move V3, V8
	061 Move X2, X22
	062 Move X3, X21
	063 Move X4, X20
	064 Move X5, X19
	065 Move X20, [X31+96]
	066 Move X19, [X31+104]
	067 Move X22, [X31+80]
	068 Move X21, [X31+88]
	069 Move X24, [X31+64]
	070 Move X23, [X31+72]
	071 Move X26, [X31+48]
	072 Move X25, [X31+56]
	073 Move X30, [X31+32]
	074 Move D9, [X31+16]
	075 Move D8, [X31+24]
	076 Move V0, V11
	077 Move V1, V10
	078 Move D11, [X31+112]
	079 Move D10, [X31+120]
	080 Call GUI.Internal_DoWindow, X0, X1, X2, X3, X4, X5, X6, X7
	081 Return X0

Method: System.Void CallWindowDelegate(UnityEngine.GUI/WindowFunction func, System.Int32 id, System.Int32 instanceID, UnityEngine.GUISkin _skin, System.Int32 forceRect, System.Single width, System.Single height, UnityEngine.GUIStyle style)

Disassembly:
	0x03C6CEAC LDP X22, X21, [X31 + 0x10]
	0x03C6CEB0 MOV X2, X31
	0x03C6CEB4 LDR X3, [X8]
	0x03C6CEB8 LDR X30, [X31], #0x30
	0x03C6CEBC B 0x3C6CEC0
	0x03C6CEC0 STR X30, [X31 - 0x40]!
	0x03C6CEC4 STP X24, X23, [X31 + 0x10]
	0x03C6CEC8 STP X22, X21, [X31 + 0x20]
	0x03C6CECC STP X20, X19, [X31 + 0x30]
	0x03C6CED0 ADRP X23, 0x77A000
	0x03C6CED4 ADRP X24, 0x489000
	0x03C6CED8 LDRB W8, [X23 + 0x672]
	0x03C6CEDC LDR X24, [X24 + 0x278]
	0x03C6CEE0 MOV X19, X3
	0x03C6CEE4 MOV X20, X2
	0x03C6CEE8 MOV X22, X1
	0x03C6CEEC MOV X21, X0
	0x03C6CEF0 TBNZ X8, 0x0, 0x3C6CF08
	0x03C6CEF4 ADRP X0, 0x489000
	0x03C6CEF8 LDR X0, [X0 + 0x278]
	0x03C6CEFC BL 0x1C16CF4
	0x03C6CF00 MOVZ W8, 0x1
	0x03C6CF04 STRB W8, [X23 + 0x672]
	0x03C6CF08 LDR X8, [X24]
	0x03C6CF0C MOV X0, X21
	0x03C6CF10 MOV X1, X31
	0x03C6CF14 LDR X8, [X8 + 0xB8]
	0x03C6CF18 LDR X8, [X8]
	0x03C6CF1C STR X8, [X21 + 0x10]
	0x03C6CF20 STR X8, [X21 + 0x20]
	0x03C6CF24 BL 0x33BDD8C
	0x03C6CF28 MOV X0, X21
	0x03C6CF2C MOV X1, X22
	0x03C6CF30 BL 0x3C69948
	0x03C6CF34 STP X20, X19, [X21 + 0x18]
	0x03C6CF38 LDP X20, X19, [X31 + 0x30]
	0x03C6CF3C LDP X22, X21, [X31 + 0x20]
	0x03C6CF40 LDP X24, X23, [X31 + 0x10]
	0x03C6CF44 LDR X30, [X31], #0x40
	0x03C6CF48 RET
	0x03C6CF4C STR X30, [X31 - 0x30]!
	0x03C6CF50 STP X22, X21, [X31 + 0x10]
	0x03C6CF54 STP X20, X19, [X31 + 0x20]
	0x03C6CF58 ADRP X21, 0x77A000
	0x03C6CF5C ADRP X22, 0x489000
	0x03C6CF60 LDRB W8, [X21 + 0x673]
	0x03C6CF64 LDR X22, [X22 + 0x278]
	0x03C6CF68 MOV X20, X1
	0x03C6CF6C MOV X19, X0
	0x03C6CF70 TBNZ X8, 0x0, 0x3C6CF88
	0x03C6CF74 ADRP X0, 0x489000
	0x03C6CF78 LDR X0, [X0 + 0x278]
	0x03C6CF7C BL 0x1C16CF4
	0x03C6CF80 MOVZ W8, 0x1
	0x03C6CF84 STRB W8, [X21 + 0x673]
	0x03C6CF88 LDR X8, [X22]
	0x03C6CF8C MOV X0, X19
	0x03C6CF90 MOV X1, X31
	0x03C6CF94 LDR X8, [X8 + 0xB8]
	0x03C6CF98 LDR X8, [X8]
	0x03C6CF9C STR X8, [X19 + 0x10]
	0x03C6CFA0 STR X8, [X19 + 0x20]
	0x03C6CFA4 BL 0x33BDD8C
	0x03C6CFA8 CBZ X20, 0x3C6CFD8
	0x03C6CFAC LDR X1, [X20 + 0x10]
	0x03C6CFB0 MOV X0, X19
	0x03C6CFB4 BL 0x3C69948
	0x03C6CFB8 LDR X8, [X20 + 0x18]
	0x03C6CFBC LDP X22, X21, [X31 + 0x10]
	0x03C6CFC0 STR X8, [X19 + 0x18]
	0x03C6CFC4 LDR X8, [X20 + 0x20]
	0x03C6CFC8 STR X8, [X19 + 0x20]
	0x03C6CFCC LDP X20, X19, [X31 + 0x20]
	0x03C6CFD0 LDR X30, [X31], #0x30
	0x03C6CFD4 RET
	0x03C6CFD8 BL 0x1C16F20
	0x03C6CFDC STR X30, [X31 - 0x20]!
	0x03C6CFE0 STP X20, X19, [X31 + 0x10]
	0x03C6CFE4 ADRP X20, 0x77A000
	0x03C6CFE8 ADRP X19, 0x4B2000
	0x03C6CFEC LDRB W8, [X20 + 0x675]
	0x03C6CFF0 LDR X19, [X19 + 0xBD0]
	0x03C6CFF4 TBNZ X8, 0x0, 0x3C6D018
	0x03C6CFF8 ADRP X0, 0x4B2000
	0x03C6CFFC LDR X0, [X0 + 0xBD0]
	0x03C6D000 BL 0x1C16CF4
	0x03C6D004 ADRP X0, 0x488000
	0x03C6D008 LDR X0, [X0 + 0x278]
	0x03C6D00C BL 0x1C16CF4
	0x03C6D010 MOVZ W8, 0x1
	0x03C6D014 STRB W8, [X20 + 0x675]
	0x03C6D018 LDR X0, [X19]
	0x03C6D01C LDR W8, [X0 + 0xE0]
	0x03C6D020 CBNZ W8, 0x3C6D02C
	0x03C6D024 BL 0x1C16DFC
	0x03C6D028 LDR X0, [X19]
	0x03C6D02C LDR X8, [X0 + 0xB8]
	0x03C6D030 LDR X9, [X8]
	0x03C6D034 CBZ X9, 0x3C6D078
	0x03C6D038 ADRP X10, 0x488000
	0x03C6D03C LDR X10, [X10 + 0x278]
	0x03C6D040 STR X31, [X9 + 0x10]
	0x03C6D044 LDR X10, [X10]
	0x03C6D048 LDR X10, [X10 + 0xB8]
	0x03C6D04C LDR X10, [X10]
	0x03C6D050 STR X10, [X9 + 0x20]
	0x03C6D054 LDR X9, [X8 + 0x8]
	0x03C6D058 CBZ X9, 0x3C6D078
	0x03C6D05C STP X31, X10, [X9 + 0x18]
	0x03C6D060 LDR X8, [X8 + 0x10]
	0x03C6D064 CBZ X8, 0x3C6D078
	0x03C6D068 LDP X20, X19, [X31 + 0x10]
	0x03C6D06C STP X31, X31, [X8 + 0x10]
	0x03C6D070 LDR X30, [X31], #0x20
	0x03C6D074 RET
	0x03C6D078 BL 0x1C16F20
	0x03C6D07C LDR X8, [X0 + 0x10]
	0x03C6D080 CBNZ X8, 0x3C6D08C
	0x03C6D084 LDR X8, [X0 + 0x20]
	0x03C6D088 CBZ X8, 0x3C6D094
	0x03C6D08C MOV X0, X8
	0x03C6D090 RET
	0x03C6D094 MOV X1, X31
	0x03C6D098 B 0x33CB4E8
	0x03C6D09C STP X30, X21, [X31 - 0x20]!
	0x03C6D0A0 STP X20, X19, [X31 + 0x10]
	0x03C6D0A4 ADRP X19, 0x779000
	0x03C6D0A8 ADRP X20, 0x4B1000
	0x03C6D0AC ADRP X21, 0x486000
	0x03C6D0B0 LDRB W8, [X19 + 0x676]
	0x03C6D0B4 LDR X20, [X20 + 0xBD0]
	0x03C6D0B8 LDR X21, [X21 + 0x988]
	0x03C6D0BC TBNZ X8, 0x0, 0x3C6D0E0
	0x03C6D0C0 ADRP X0, 0x4B1000
	0x03C6D0C4 LDR X0, [X0 + 0xBD0]
	0x03C6D0C8 BL 0x1C16CF4
	0x03C6D0CC ADRP X0, 0x486000
	0x03C6D0D0 LDR X0, [X0 + 0x988]
	0x03C6D0D4 BL 0x1C16CF4
	0x03C6D0D8 MOVZ W8, 0x1
	0x03C6D0DC STRB W8, [X19 + 0x676]
	0x03C6D0E0 LDR X0, [X20]
	0x03C6D0E4 BL 0x1C16F10
	0x03C6D0E8 MOV X19, X0
	0x03C6D0EC BL 0x3C6CE00
	0x03C6D0F0 LDR X8, [X20]
	0x03C6D0F4 LDR X8, [X8 + 0xB8]
	0x03C6D0F8 STR X19, [X8]
	0x03C6D0FC LDR X0, [X20]
	0x03C6D100 BL 0x1C16F10
	0x03C6D104 MOV X19, X0
	0x03C6D108 BL 0x3C6CE00
	0x03C6D10C LDR X0, [X20]
	0x03C6D110 LDR X8, [X0 + 0xB8]
	0x03C6D114 STR X19, [X8 + 0x8]
	0x03C6D118 BL 0x1C16F10
	0x03C6D11C MOV X19, X0
	0x03C6D120 BL 0x3C6CE00
	0x03C6D124 LDR X0, [X20]
	0x03C6D128 LDR X8, [X0 + 0xB8]
	0x03C6D12C STR X19, [X8 + 0x10]
	0x03C6D130 BL 0x1C16F10
	0x03C6D134 LDR X1, [X21]
	0x03C6D138 MOV X19, X0
	0x03C6D13C BL 0x3C6CE5C
	0x03C6D140 LDR X8, [X20]
	0x03C6D144 LDR X8, [X8 + 0xB8]
	0x03C6D148 STR X19, [X8 + 0x18]
	0x03C6D14C LDP X20, X19, [X31 + 0x10]
	0x03C6D150 LDP X30, X21, [X31], #0x20
	0x03C6D154 RET
	0x03C6D158 STR X30, [X31 - 0x30]!
	0x03C6D15C STP X22, X21, [X31 + 0x10]
	0x03C6D160 STP X20, X19, [X31 + 0x20]
	0x03C6D164 ADRP X22, 0x779000
	0x03C6D168 ADRP X21, 0x4B1000
	0x03C6D16C LDRB W8, [X22 + 0x677]
	0x03C6D170 LDR X21, [X21 + 0xBD0]
	0x03C6D174 MOV X19, X1
	0x03C6D178 MOV X20, X0

ISIL:
	001 Move [X31-112], D9
	002 Move [X31-104], D8
	003 Move [X31+16], X29
	004 Move [X31+24], X30
	005 Move [X31+32], X28
	006 Move [X31+40], X27
	007 Move [X31+48], X26
	008 Move [X31+56], X25
	009 Move [X31+64], X24
	010 Move [X31+72], X23
	011 Move [X31+80], X22
	012 Move [X31+88], X21
	013 Move [X31+96], X20
	014 Move [X31+104], X19
	015 Move X19, 0x77B000
	016 Move X27, 0x4F5000
	017 Move W8, [X19+1501]
	018 Move X27, [X27+688]
	019 Move X23, X5
	020 Move V8, V1
	021 Move V9, V0
	022 Move W24, W4
	023 Move X22, X3
	024 Move W20, W1
	025 Move X21, X0
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {44}
	030 Move X0, 0x4AF000
	031 Move X0, [X0+2184]
	032 Call 0x1C17CF4
	033 Move X0, 0x4F5000
	034 Move X0, [X0+688]
	035 Call 0x1C17CF4
	036 Move X0, 0x4AF000
	037 Move X0, [X0+2192]
	038 Call 0x1C17CF4
	039 Move X0, 0x4AF000
	040 Move X0, [X0+1216]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X19+1501], W8
	044 Move X0, [X27]
	045 Move X19, 0x4AF000
	046 Move W8, [X0+224]
	047 Move X19, [X19+1216]
	048 Compare W8, 0
	049 JumpIfNotEqual {51}
	050 Call 0x1C17DFC
	051 Move W1, 1
	052 Move W0, W20
	053 Call GUILayoutUtility.SelectIDList, X0, X1
	054 Move X0, [X19]
	055 Move W8, [X0+224]
	056 Compare W8, 0
	057 JumpIfNotEqual {59}
	058 Call 0x1C17DFC
	059 Call GUI.get_skin
	060 Move X28, 0x77B000
	061 Move X26, 0x4EE000
	062 Move W8, [X28+1296]
	063 Move X26, [X26+32]
	064 Move X19, X0
	065 Move TEMP, X8
	066 And TEMP, TEMP, 1
	067 Compare TEMP, 1
	068 JumpIfEqual {74}
	069 Move X0, 0x4EE000
	070 Move X0, [X0+32]
	071 Call 0x1C17CF4
	072 Move W8, 1
	073 Move [X28+1296], W8
	074 Move X8, [X26]
	075 Move X8, [X8+184]
	076 Move X25, [X8]
	077 Compare X25, 0
	078 JumpIfEqual {215}
	079 Move X29, 0x77B000
	080 Move X8, [X29+1192]
	081 Compare X8, 0
	082 JumpIfNotEqual {88}
	083 Move X0, -51879936
	084 Add X0, X0, 1382
	085 Call 0x1C17CB8
	086 Move X8, X0
	087 Move [X29+1192], X0
	088 Move X0, X25
	089 NotImplemented "Instruction BLR not yet implemented."
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Compare W24, 0
	092 JumpIfEqual {134}
	093 Move X8, 0x4AF000
	094 Move X8, [X8+2184]
	095 Move W1, 2
	096 Move X0, [X8]
	097 Call 0x1C17D6C
	098 Move V0, V9
	099 Move X24, X0
	100 Call GUILayout.Width, V0
	101 Compare X24, 0
	102 JumpIfEqual {215}
	103 Move W8, [X24+24]
	104 Compare W8, 0
	105 JumpIfEqual {216}
	106 Move V0, V8
	107 Move [X24+32], X0
	108 Call GUILayout.Height, V0
	109 Move W8, [X24+24]
	110 NotImplemented "Instruction CMP not yet implemented."
	111 Move [X24+40], X0
	112 Move X0, [X27]
	113 Move W8, [X0+224]
	114 Compare W8, 0
	115 JumpIfNotEqual {117}
	116 Call 0x1C17DFC
	117 Move W0, W20
	118 Move X1, X23
	119 Move X2, X24
	120 Move X8, 0x4AE000
	121 Move X8, [X8+2192]
	122 Move X0, [X8]
	123 Move W8, [X0+224]
	124 Compare W8, 0
	125 JumpIfNotEqual {127}
	126 Call 0x1C17DFC
	127 Call GUIStyle.get_none
	128 Move X8, [X27]
	129 Move X23, X0
	130 Move W9, [X8+224]
	131 Compare W9, 0
	132 JumpIfNotEqual {139}
	133 Move X0, X8
	134 Move X0, [X27]
	135 Move W8, [X0+224]
	136 Compare W8, 0
	137 JumpIfNotEqual {139}
	138 Call 0x1C17DFC
	139 Move W0, W20
	140 Move X1, X23
	141 Move X2, X31
	142 Call GUILayoutUtility.BeginWindow, X0, X1, X2
	143 Move X8, 0x4AE000
	144 Move X8, [X8+1216]
	145 Move X0, [X8]
	146 Move W8, [X0+224]
	147 Compare W8, 0
	148 JumpIfNotEqual {150}
	149 Call 0x1C17DFC
	150 Move X0, X22
	151 Call GUI.set_skin, X0
	152 Compare X21, 0
	153 JumpIfEqual {159}
	154 Move X8, [X21+24]
	155 Move X0, [X21+64]
	156 Move X2, [X21+40]
	157 Move W1, W20
	158 NotImplemented "Instruction BLR not yet implemented."
	159 Move W8, [X28+1296]
	160 Move TEMP, X8
	161 And TEMP, TEMP, 1
	162 Compare TEMP, 1
	163 JumpIfEqual {169}
	164 Move X0, 0x4ED000
	165 Move X0, [X0+32]
	166 Call 0x1C17CF4
	167 Move W8, 1
	168 Move [X28+1296], W8
	169 Move X8, [X26]
	170 Move X8, [X8+184]
	171 Move X20, [X8]
	172 Compare X20, 0
	173 JumpIfEqual {215}
	174 Move X8, [X29+1192]
	175 Compare X8, 0
	176 JumpIfNotEqual {182}
	177 Move X0, -51884032
	178 Add X0, X0, 1382
	179 Call 0x1C17CB8
	180 Move X8, X0
	181 Move [X29+1192], X0
	182 Move X0, X20
	183 NotImplemented "Instruction BLR not yet implemented."
	184 NotImplemented "Instruction CMP not yet implemented."
	185 Move X0, [X27]
	186 Move W8, [X0+224]
	187 Compare W8, 0
	188 JumpIfNotEqual {190}
	189 Call 0x1C17DFC
	190 Call GUILayoutUtility.Layout
	191 Move X8, 0x4AE000
	192 Move X8, [X8+1216]
	193 Move X0, [X8]
	194 Move W8, [X0+224]
	195 Compare W8, 0
	196 JumpIfNotEqual {198}
	197 Call 0x1C17DFC
	198 Move X0, X19
	199 Move X20, [X31+96]
	200 Move X19, [X31+104]
	201 Move X22, [X31+80]
	202 Move X21, [X31+88]
	203 Move X24, [X31+64]
	204 Move X23, [X31+72]
	205 Move X26, [X31+48]
	206 Move X25, [X31+56]
	207 Move X28, [X31+32]
	208 Move X27, [X31+40]
	209 Move X29, [X31+16]
	210 Move X30, [X31+24]
	211 Move D9, [X31+112]
	212 Move D8, [X31+120]
	213 Call GUI.set_skin, X0
	214 Return 
	215 Call 0x1C17F20
	216 Call 0x1C17F28

Method: System.Void DragWindow()

Disassembly:
	0x03C6D880 CBNZ W9, 0x3C6D88C
	0x03C6D884 MOV X0, X8
	0x03C6D888 BL 0x1C16DFC
	0x03C6D88C MOV X0, X25
	0x03C6D890 MOV X1, X19
	0x03C6D894 MOV X2, X24
	0x03C6D898 BL 0x3C6D33C
	0x03C6D89C LDR X0, [X26]
	0x03C6D8A0 MOV V8.16B, V0.16B
	0x03C6D8A4 MOV V9.16B, V1.16B
	0x03C6D8A8 MOV V10.16B, V2.16B
	0x03C6D8AC LDR W8, [X0 + 0xE0]
	0x03C6D8B0 MOV V11.16B, V3.16B
	0x03C6D8B4 CBNZ W8, 0x3C6D8BC
	0x03C6D8B8 BL 0x1C16DFC
	0x03C6D8BC ADRP X24, 0x4AD000
	0x03C6D8C0 LDR X24, [X24 + 0x4C0]
	0x03C6D8C4 BL 0x3C6AA80
	0x03C6D8C8 CMP W0, W23
	0x03C6D8CC B.NE 0x3C6D8EC
	0x03C6D8D0 LDR X0, [X27]
	0x03C6D8D4 LDR W8, [X0 + 0xE0]
	0x03C6D8D8 CBNZ W8, 0x3C6D8E0
	0x03C6D8DC BL 0x1C16DFC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x77A000
	005 Move X20, 0x4AE000
	006 Move W8, [X19+1502]
	007 Move X20, [X20+1216]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x4AE000
	013 Move X0, [X0+1216]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+1502], W8
	017 Move X0, [X20]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {22}
	021 Call 0x1C17DFC
	022 Move X8, -51912704
	023 Move V2, [X8+396]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move S0, W31
	027 Move S1, W31
	028 Move V3, V2
	029 Move X30, [X31+32]
	030 Call GUI.DragWindow, X0
	031 Return 

Method: System.Void get_color_Injected(out UnityEngine.Color ret)

Disassembly:
	0x03C675F0 LDR X0, [X0 + 0x890]
	0x03C675F4 BL 0x1C16CF4
	0x03C675F8 MOVZ W8, 0x1
	0x03C675FC STRB W8, [X22 + 0x6D8]
	0x03C67600 LDR X8, [X20]
	0x03C67604 LDR X8, [X8 + 0xB8]
	0x03C67608 STR X19, [X8 + 0x10]
	0x03C6760C LDR X0, [X21]
	0x03C67610 LDR X19, [X19 + 0x18]
	0x03C67614 LDR W8, [X0 + 0xE0]
	0x03C67618 CBNZ W8, 0x3C67620
	0x03C6761C BL 0x1C16DFC
	0x03C67620 ADRP X21, 0x77F000
	0x03C67624 LDR X8, [X21 + 0x7D8]
	0x03C67628 CBNZ X8, 0x3C67640

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x780000
	005 Move X1, [X20+1504]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51687424
	010 Add X0, X0, 710
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+1504], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void set_color_Injected(ref UnityEngine.Color value)

Disassembly:
	0x03C676B0 ADD X0, X0, 0xA51
	0x03C676B4 BL 0x1C16CB8
	0x03C676B8 MOV X8, X0
	0x03C676BC STR X0, [X20 + 0x658]
	0x03C676C0 ADD X0, X31, 0x40
	0x03C676C4 BLR X8
	0x03C676C8 LDP V1, V0, [X31 + 0x60]
	0x03C676CC LDP V3, V2, [X31 + 0x40]
	0x03C676D0 LDR X30, [X31 + 0x80]
	0x03C676D4 STP V1, V0, [X19 + 0x20]
	0x03C676D8 STP V3, V2, [X19]
	0x03C676DC LDP X20, X19, [X31 + 0x90]
	0x03C676E0 STP V1, V0, [X31 + 0x20]
	0x03C676E4 STP V3, V2, [X31]
	0x03C676E8 ADD X31, X31, 0xA0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x780000
	005 Move X1, [X20+1512]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51802112
	010 Add X0, X0, 2061
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+1512], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void get_backgroundColor_Injected(out UnityEngine.Color ret)

Disassembly:
	0x03C67774 CBNZ X8, 0x3C6778C
	0x03C67778 ADRP X0, 0xFFFFFFFFFCE9C000
	0x03C6777C ADD X0, X0, 0x79A
	0x03C67780 BL 0x1C16CB8
	0x03C67784 MOV X8, X0
	0x03C67788 STR X0, [X19 + 0x660]
	0x03C6778C ADD X0, X31, 0x0
	0x03C67790 BLR X8
	0x03C67794 LDP X30, X19, [X31 + 0x40]
	0x03C67798 ADD X31, X31, 0x50
	0x03C6779C RET
	0x03C677A0 STR X30, [X31 - 0x20]!
	0x03C677A4 STP X20, X19, [X31 + 0x10]
	0x03C677A8 ADRP X20, 0x77F000
	0x03C677AC LDR X1, [X20 + 0x660]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x780000
	005 Move X1, [X20+1520]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51634176
	010 Add X0, X0, 3782
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+1520], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void set_backgroundColor_Injected(ref UnityEngine.Color value)

Disassembly:
	0x03C67834 LDR X0, [X20]
	0x03C67838 ADRP X20, 0x4B3000
	0x03C6783C LDR W8, [X0 + 0xE0]
	0x03C67840 LDR X20, [X20 + 0x4C0]
	0x03C67844 CBNZ W8, 0x3C6784C
	0x03C67848 BL 0x1C16DFC
	0x03C6784C MOV X0, X19
	0x03C67850 BL 0x3C678AC
	0x03C67854 LDR X8, [X20]
	0x03C67858 MOV X19, X0
	0x03C6785C LDR W9, [X8 + 0xE0]
	0x03C67860 CBNZ W9, 0x3C67870
	0x03C67864 MOV X0, X8
	0x03C67868 BL 0x1C16DFC
	0x03C6786C LDR X8, [X20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x780000
	005 Move X1, [X20+1528]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51638272
	010 Add X0, X0, 694
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+1528], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void get_contentColor_Injected(out UnityEngine.Color ret)

Disassembly:
	0x03C678F8 BL 0x1C16DFC
	0x03C678FC LDR X0, [X20]
	0x03C67900 LDR X8, [X0 + 0xB8]
	0x03C67904 LDR X0, [X8]
	0x03C67908 CBZ X0, 0x3C67934
	0x03C6790C ADRP X8, 0x48E000
	0x03C67910 LDR X8, [X8 + 0x278]
	0x03C67914 STR X19, [X0 + 0x10]
	0x03C67918 LDP X20, X19, [X31 + 0x10]
	0x03C6791C LDR X8, [X8]
	0x03C67920 LDR X8, [X8 + 0xB8]
	0x03C67924 LDR X8, [X8]
	0x03C67928 STR X8, [X0 + 0x20]
	0x03C6792C LDP X30, X21, [X31], #0x20
	0x03C67930 RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x780000
	005 Move X1, [X20+1536]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51662848
	010 Add X0, X0, 307
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+1536], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void set_contentColor_Injected(ref UnityEngine.Color value)

Disassembly:
	0x03C679B8 BL 0x3C67304
	0x03C679BC LDR X0, [X21]
	0x03C679C0 LDR W8, [X0 + 0xE0]
	0x03C679C4 CBNZ W8, 0x3C679CC
	0x03C679C8 BL 0x1C16DFC
	0x03C679CC MOV V2.16B, V9.16B
	0x03C679D0 MOV V3.16B, V8.16B
	0x03C679D4 MOV X0, X20
	0x03C679D8 MOV X1, X19
	0x03C679DC LDP X20, X19, [X31 + 0x40]
	0x03C679E0 LDP X22, X21, [X31 + 0x30]
	0x03C679E4 LDR X30, [X31 + 0x20]
	0x03C679E8 LDP D9, D8, [X31 + 0x10]
	0x03C679EC MOV V0.16B, V11.16B
	0x03C679F0 MOV V1.16B, V10.16B

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x780000
	005 Move X1, [X20+1544]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51867648
	010 Add X0, X0, 1429
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+1544], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void Internal_DoWindow_Injected(System.Int32 id, System.Int32 instanceID, ref UnityEngine.Rect clientRect, UnityEngine.GUI/WindowFunction func, UnityEngine.GUIContent title, UnityEngine.GUIStyle style, System.Object skin, System.Boolean forceRectOnLayout, out UnityEngine.Rect ret)

Disassembly:
	0x03C67D34 LDP X30, X21, [X31 + 0x20]
	0x03C67D38 LDP D9, D8, [X31 + 0x10]
	0x03C67D3C MOV V0.16B, V11.16B
	0x03C67D40 MOV V1.16B, V10.16B
	0x03C67D44 MOV W1, W31
	0x03C67D48 LDP D11, D10, [X31], #0x40
	0x03C67D4C B 0x3C67D50
	0x03C67D50 STP D11, D10, [X31 - 0x50]!
	0x03C67D54 STP D9, D8, [X31 + 0x10]
	0x03C67D58 STR X30, [X31 + 0x20]
	0x03C67D5C STP X22, X21, [X31 + 0x30]
	0x03C67D60 STP X20, X19, [X31 + 0x40]
	0x03C67D64 ADRP X22, 0x77F000
	0x03C67D68 ADRP X21, 0x4B3000
	0x03C67D6C LDRB W8, [X22 + 0x5BD]
	0x03C67D70 LDR X21, [X21 + 0x4C0]
	0x03C67D74 MOV W19, W1
	0x03C67D78 MOV X20, X0
	0x03C67D7C MOV V8.16B, V3.16B
	0x03C67D80 MOV V9.16B, V2.16B
	0x03C67D84 MOV V10.16B, V1.16B
	0x03C67D88 MOV V11.16B, V0.16B
	0x03C67D8C TBNZ X8, 0x0, 0x3C67DA4
	0x03C67D90 ADRP X0, 0x4B3000
	0x03C67D94 LDR X0, [X0 + 0x4C0]
	0x03C67D98 BL 0x1C16CF4
	0x03C67D9C MOVZ W8, 0x1
	0x03C67DA0 STRB W8, [X22 + 0x5BD]
	0x03C67DA4 LDR X0, [X21]
	0x03C67DA8 LDR W8, [X0 + 0xE0]
	0x03C67DAC CBNZ W8, 0x3C67DB4
	0x03C67DB0 BL 0x1C16DFC
	0x03C67DB4 MOV V2.16B, V9.16B
	0x03C67DB8 MOV V3.16B, V8.16B
	0x03C67DBC MOV X0, X20
	0x03C67DC0 MOV W1, W19
	0x03C67DC4 LDP X20, X19, [X31 + 0x40]
	0x03C67DC8 LDP X22, X21, [X31 + 0x30]
	0x03C67DCC LDR X30, [X31 + 0x20]

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X28, 0x780000
	013 Move X8, [X28+1552]
	014 Move X27, [X31+96]
	015 Move W23, W7
	016 Move X19, X6
	017 Move X20, X5
	018 Move X21, X4
	019 Move X22, X3
	020 Move X24, X2
	021 Move W25, W1
	022 Move W26, W0
	023 Compare X8, 0
	024 JumpIfNotEqual {30}
	025 Move X0, -51662848
	026 Add X0, X0, 370
	027 Call 0x1C17CB8
	028 Move X8, X0
	029 Move [X28+1552], X0
	030 And W7, W23, 1
	031 Move [X31+96], X27
	032 Move W0, W26
	033 Move W1, W25
	034 Move X2, X24
	035 Move X3, X22
	036 Move X4, X21
	037 Move X5, X20
	038 Move X6, X19
	039 Move X20, [X31+80]
	040 Move X19, [X31+88]
	041 Move X22, [X31+64]
	042 Move X21, [X31+72]
	043 Move X24, [X31+48]
	044 Move X23, [X31+56]
	045 Move X26, [X31+32]
	046 Move X25, [X31+40]
	047 Move X28, [X31+16]
	048 Move X27, [X31+24]
	049 Move X30, [X31+96]
	050 CallNoReturn X8

Method: System.Void DragWindow_Injected(ref UnityEngine.Rect position)

Disassembly:
	0x03C67E54 MOV V2.16B, V9.16B
	0x03C67E58 MOV V3.16B, V8.16B
	0x03C67E5C MOV X0, X20
	0x03C67E60 MOV W1, W19
	0x03C67E64 LDP X20, X19, [X31 + 0x40]
	0x03C67E68 LDP X22, X21, [X31 + 0x30]
	0x03C67E6C LDP X30, X23, [X31 + 0x20]
	0x03C67E70 LDP D9, D8, [X31 + 0x10]
	0x03C67E74 FMOV S4, W31
	0x03C67E78 MOV V0.16B, V11.16B
	0x03C67E7C MOV V1.16B, V10.16B
	0x03C67E80 LDP D11, D10, [X31], #0x50
	0x03C67E84 B 0x3C67E88
	0x03C67E88 SUB X31, X31, 0x80
	0x03C67E8C STR D12, [X31 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x780000
	005 Move X1, [X20+1560]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51720192
	010 Add X0, X0, 735
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+1560], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

