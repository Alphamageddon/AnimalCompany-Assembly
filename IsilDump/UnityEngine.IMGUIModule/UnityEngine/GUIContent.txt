Type: UnityEngine.GUIContent

Method: System.String get_text()

Disassembly:
	0x03C6A940 LDR W8, [X0 + 0xE0]
	0x03C6A944 CBNZ W8, 0x3C6A94C

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Void set_text(System.String value)

Disassembly:
	0x03C6A948 BL 0x1C16DFC
	0x03C6A94C BL 0x3C6748C
	0x03C6A950 CBZ X0, 0x3C6AA08
	0x03C6A954 LDR X24, [X0 + 0x18]
	0x03C6A958 CBZ X24, 0x3C6AA08
	0x03C6A95C MOV X0, X24
	0x03C6A960 MOV W1, W26
	0x03C6A964 MOV X2, X31
	0x03C6A968 AND W25, W26, 0xFFFF
	0x03C6A96C BL 0x3CCFF04
	0x03C6A970 CMP W25, 0xA
	0x03C6A974 B.EQ 0x3C6A9F4
	0x03C6A978 TBNZ X0, 0x0, 0x3C6A9F4
	0x03C6A97C ANDS W31, W26, 0xFFFF
	0x03C6A980 B.NE 0x3C6A6D4
	0x03C6A984 LDR X0, [X27]
	0x03C6A988 LDR W8, [X0 + 0xE0]
	0x03C6A98C CBNZ W8, 0x3C6A994
	0x03C6A990 BL 0x1C16DFC
	0x03C6A994 ADRP X24, 0x77C000
	0x03C6A998 LDR X8, [X24 + 0x8F0]
	0x03C6A99C CBNZ X8, 0x3C6A9B4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X0+16]
	005 Move X19, X0
	006 Move X20, X1
	007 Move X0, X1
	008 Move X1, X8
	009 Move X2, X31
	010 Call String.op_Equality, X0, X1
	011 Move TEMP, X0
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X8, [X19+40]
	016 Move [X19+16], X20
	017 Compare X8, 0
	018 JumpIfEqual {26}
	019 Move X2, [X8+24]
	020 Move X0, [X8+64]
	021 Move X1, [X8+40]
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X30, [X31+32]
	025 CallNoReturn X2
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Return 

Method: System.Void set_image(UnityEngine.Texture value)

Disassembly:
	0x03C6DDF0 MOV X19, X1
	0x03C6DDF4 MOV X20, X0

ISIL:
	001 Move [X0+24], X1
	002 Return 

Method: System.String get_tooltip()

Disassembly:
	0x03C6C3DC LDP X20, X19, [X31 + 0x20]
	0x03C6C3E0 LDP X30, X21, [X31 + 0x10]

ISIL:
	001 Move X0, [X0+32]
	002 Return X0

Method: System.Void set_tooltip(System.String value)

Disassembly:
	0x03C6DDF8 TBNZ X8, 0x0, 0x3C6DE4C
	0x03C6DDFC ADRP X0, 0x4B1000

ISIL:
	001 Move [X0+32], X1
	002 Return 

Method: System.Void .ctor()

Disassembly:
	0x03C6DE00 LDR X0, [X0 + 0xBD0]
	0x03C6DE04 BL 0x1C16CF4
	0x03C6DE08 ADRP X0, 0x4F3000
	0x03C6DE0C LDR X0, [X0 + 0x2E0]
	0x03C6DE10 BL 0x1C16CF4
	0x03C6DE14 ADRP X0, 0x4F3000
	0x03C6DE18 LDR X0, [X0 + 0x2B0]
	0x03C6DE1C BL 0x1C16CF4
	0x03C6DE20 ADRP X0, 0x4AD000
	0x03C6DE24 LDR X0, [X0 + 0x890]
	0x03C6DE28 BL 0x1C16CF4
	0x03C6DE2C ADRP X0, 0x4AD000
	0x03C6DE30 LDR X0, [X0 + 0x4C0]
	0x03C6DE34 BL 0x1C16CF4
	0x03C6DE38 ADRP X0, 0x486000
	0x03C6DE3C LDR X0, [X0 + 0x6C0]
	0x03C6DE40 BL 0x1C16CF4
	0x03C6DE44 MOVZ W8, 0x1
	0x03C6DE48 STRB W8, [X24 + 0x685]
	0x03C6DE4C LDR X0, [X23]
	0x03C6DE50 ADRP X23, 0x4F3000
	0x03C6DE54 LDR X22, [X22]
	0x03C6DE58 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x77A000
	006 Move X21, 0x489000
	007 Move W8, [X20+1648]
	008 Move X21, [X21+632]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x489000
	015 Move X0, [X0+632]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1648], W8
	019 Move X8, [X21]
	020 Move X0, X19
	021 Move X1, X31
	022 Move X8, [X8+184]
	023 Move X8, [X8]
	024 Move [X19+16], X8
	025 Move [X19+32], X8
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call Object..ctor, X0
	031 Return 

Method: System.Void .ctor(System.String text)

Disassembly:
	0x03C6DE5C LDR X23, [X23 + 0x2B0]
	0x03C6DE60 CBNZ W8, 0x3C6DE68
	0x03C6DE64 BL 0x1C16DFC
	0x03C6DE68 MOV X0, X22
	0x03C6DE6C MOV X1, X31
	0x03C6DE70 BL 0x338C698
	0x03C6DE74 LDR X8, [X23]
	0x03C6DE78 MOV X22, X0
	0x03C6DE7C LDR W9, [X8 + 0xE0]
	0x03C6DE80 CBNZ W9, 0x3C6DE8C
	0x03C6DE84 MOV X0, X8
	0x03C6DE88 BL 0x1C16DFC
	0x03C6DE8C MOV X0, X19
	0x03C6DE90 MOV X1, X21
	0x03C6DE94 MOV X2, X22
	0x03C6DE98 BL 0x3C6DF6C
	0x03C6DE9C CBZ X0, 0x3C6DF68
	0x03C6DEA0 ADRP X8, 0x4AD000
	0x03C6DEA4 LDR X8, [X8 + 0x890]
	0x03C6DEA8 STRB W31, [X0 + 0x50]
	0x03C6DEAC MOV X21, X0
	0x03C6DEB0 LDR X0, [X8]
	0x03C6DEB4 LDR W8, [X0 + 0xE0]
	0x03C6DEB8 CBNZ W8, 0x3C6DEC0
	0x03C6DEBC BL 0x1C16DFC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x77A000
	007 Move X22, 0x489000
	008 Move W8, [X21+1649]
	009 Move X22, [X22+632]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x489000
	017 Move X0, [X0+632]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1649], W8
	021 Move X8, [X22]
	022 Move X0, X20
	023 Move X1, X19
	024 Move X20, [X31+32]
	025 Move X19, [X31+40]
	026 Move X8, [X8+184]
	027 Move X22, [X31+16]
	028 Move X21, [X31+24]
	029 Move X2, X31
	030 Move X3, [X8]
	031 Move X30, [X31+48]

Method: System.Void .ctor(System.String text, UnityEngine.Texture image, System.String tooltip)

Disassembly:
	0x03C6DEC0 BL 0x3C6BB04
	0x03C6DEC4 CMP X0, X19
	0x03C6DEC8 B.NE 0x3C6DEF8
	0x03C6DECC ADRP X22, 0x4B1000
	0x03C6DED0 LDR X22, [X22 + 0xBD0]
	0x03C6DED4 LDR X0, [X22]
	0x03C6DED8 LDR W8, [X0 + 0xE0]
	0x03C6DEDC CBNZ W8, 0x3C6DEE8
	0x03C6DEE0 BL 0x1C16DFC
	0x03C6DEE4 LDR X0, [X22]
	0x03C6DEE8 LDR X8, [X0 + 0xB8]
	0x03C6DEEC LDR X8, [X8 + 0x18]
	0x03C6DEF0 CMP X20, X8
	0x03C6DEF4 B.EQ 0x3C6DF4C
	0x03C6DEF8 ADRP X8, 0x4AD000
	0x03C6DEFC LDR X8, [X8 + 0x4C0]
	0x03C6DF00 LDP S11, S10, [X21 + 0x20]
	0x03C6DF04 LDP S9, S8, [X21 + 0x28]
	0x03C6DF08 LDR X0, [X8]
	0x03C6DF0C LDR W8, [X0 + 0xE0]
	0x03C6DF10 CBNZ W8, 0x3C6DF18
	0x03C6DF14 BL 0x1C16DFC
	0x03C6DF18 MOV V2.16B, V9.16B
	0x03C6DF1C MOV V3.16B, V8.16B
	0x03C6DF20 MOV X0, X20
	0x03C6DF24 MOV X1, X19
	0x03C6DF28 LDP X20, X19, [X31 + 0x50]
	0x03C6DF2C LDP X22, X21, [X31 + 0x40]
	0x03C6DF30 LDP X24, X23, [X31 + 0x30]
	0x03C6DF34 LDR X30, [X31 + 0x20]
	0x03C6DF38 LDP D9, D8, [X31 + 0x10]
	0x03C6DF3C MOV V0.16B, V11.16B
	0x03C6DF40 MOV V1.16B, V10.16B
	0x03C6DF44 LDP D11, D10, [X31], #0x60
	0x03C6DF48 B 0x3C68C88

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x77A000
	009 Move X24, 0x489000
	010 Move W8, [X23+1650]
	011 Move X24, [X24+632]
	012 Move X19, X3
	013 Move X20, X2
	014 Move X22, X1
	015 Move X21, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0x489000
	021 Move X0, [X0+632]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X23+1650], W8
	025 Move X8, [X24]
	026 Move X0, X21
	027 Move X1, X31
	028 Move X8, [X8+184]
	029 Move X8, [X8]
	030 Move [X21+16], X8
	031 Move [X21+32], X8
	032 Call Object..ctor, X0
	033 Move X0, X21
	034 Move X1, X22
	035 Call GUIContent.set_text, X0, X1
	036 Move [X21+24], X20
	037 Move [X21+32], X19
	038 Move X20, [X31+48]
	039 Move X19, [X31+56]
	040 Move X22, [X31+32]
	041 Move X21, [X31+40]
	042 Move X24, [X31+16]
	043 Move X23, [X31+24]
	044 Move X30, [X31+64]
	045 Return 

Method: System.Void .ctor(UnityEngine.GUIContent src)

Disassembly:
	0x03C6DF4C LDP X20, X19, [X31 + 0x50]
	0x03C6DF50 LDP X22, X21, [X31 + 0x40]
	0x03C6DF54 LDP X24, X23, [X31 + 0x30]
	0x03C6DF58 LDR X30, [X31 + 0x20]
	0x03C6DF5C LDP D9, D8, [X31 + 0x10]
	0x03C6DF60 LDP D11, D10, [X31], #0x60
	0x03C6DF64 RET
	0x03C6DF68 BL 0x1C16F20
	0x03C6DF6C SUB X31, X31, 0x60
	0x03C6DF70 STR X30, [X31 + 0x20]
	0x03C6DF74 STP X24, X23, [X31 + 0x30]
	0x03C6DF78 STP X22, X21, [X31 + 0x40]
	0x03C6DF7C STP X20, X19, [X31 + 0x50]
	0x03C6DF80 ADRP X23, 0x779000
	0x03C6DF84 ADRP X19, 0x4F3000
	0x03C6DF88 LDRB W8, [X23 + 0x6A3]
	0x03C6DF8C LDR X19, [X19 + 0x2B0]
	0x03C6DF90 MOV X22, X2
	0x03C6DF94 MOV X20, X1
	0x03C6DF98 MOV X21, X0
	0x03C6DF9C TBNZ X8, 0x0, 0x3C6DFC0
	0x03C6DFA0 ADRP X0, 0x4F3000
	0x03C6DFA4 LDR X0, [X0 + 0x2D0]
	0x03C6DFA8 BL 0x1C16CF4
	0x03C6DFAC ADRP X0, 0x4F3000
	0x03C6DFB0 LDR X0, [X0 + 0x2B0]
	0x03C6DFB4 BL 0x1C16CF4
	0x03C6DFB8 MOVZ W8, 0x1
	0x03C6DFBC STRB W8, [X23 + 0x6A3]
	0x03C6DFC0 LDR X0, [X19]
	0x03C6DFC4 LDR W8, [X0 + 0xE0]
	0x03C6DFC8 CBNZ W8, 0x3C6DFD0
	0x03C6DFCC BL 0x1C16DFC
	0x03C6DFD0 ADRP X23, 0x779000
	0x03C6DFD4 LDRB W8, [X23 + 0x983]
	0x03C6DFD8 CBNZ W8, 0x3C6DFF0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x77A000
	007 Move X22, 0x489000
	008 Move W8, [X21+1651]
	009 Move X22, [X22+632]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x489000
	017 Move X0, [X0+632]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1651], W8
	021 Move X8, [X22]
	022 Move X0, X19
	023 Move X1, X31
	024 Move X8, [X8+184]
	025 Move X8, [X8]
	026 Move [X19+16], X8
	027 Move [X19+32], X8
	028 Call Object..ctor, X0
	029 Compare X20, 0
	030 JumpIfEqual {44}
	031 Move X1, [X20+16]
	032 Move X0, X19
	033 Call GUIContent.set_text, X0, X1
	034 Move X8, [X20+24]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move [X19+24], X8
	038 Move X8, [X20+32]
	039 Move [X19+32], X8
	040 Move X20, [X31+32]
	041 Move X19, [X31+40]
	042 Move X30, [X31+48]
	043 Return 
	044 Call 0x1C17F20

Method: UnityEngine.GUIContent Temp(System.String t)

Disassembly:
	0x03C688AC FSUB S1, S15, S1
	0x03C688B0 LDR X0, [X8]
	0x03C688B4 FSUB S2, S13, S2
	0x03C688B8 FMUL S0, S0, S0
	0x03C688BC FMUL S1, S1, S1
	0x03C688C0 LDR W8, [X0 + 0xE0]
	0x03C688C4 FSUB S3, S8, S3
	0x03C688C8 FADD S0, S0, S1
	0x03C688CC FMUL S1, S2, S2
	0x03C688D0 FADD S0, S1, S0
	0x03C688D4 FMUL S1, S3, S3
	0x03C688D8 FADD S0, S1, S0
	0x03C688DC CBNZ W8, 0x3C688EC
	0x03C688E0 STR S0, [X31 + 0x4]
	0x03C688E4 BL 0x1C16DFC
	0x03C688E8 LDR V0, [X31 + 0x4]
	0x03C688EC FCMP S0, S9
	0x03C688F0 B.PL 0x3C6891C
	0x03C688F4 ADRP X21, 0x77E000
	0x03C688F8 LDR X8, [X21 + 0x580]
	0x03C688FC LDR V9, [X31 + 0x38]
	0x03C68900 CBNZ X8, 0x3C68968
	0x03C68904 ADRP X0, 0xFFFFFFFFFCEA1000
	0x03C68908 ADD X0, X0, 0x92B
	0x03C6890C BL 0x1C16CB8
	0x03C68910 MOV X8, X0
	0x03C68914 STR X0, [X21 + 0x580]
	0x03C68918 B 0x3C68968
	0x03C6891C ADRP X21, 0x77E000
	0x03C68920 LDR X8, [X21 + 0x588]
	0x03C68924 LDR V9, [X31 + 0x38]
	0x03C68928 CBNZ X8, 0x3C68968
	0x03C6892C ADRP X0, 0xFFFFFFFFFCEC4000
	0x03C68930 ADD X0, X0, 0xC2C
	0x03C68934 BL 0x1C16CB8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x77F000
	006 Move X20, 0x4B7000
	007 Move W8, [X21+1652]
	008 Move X20, [X20+3024]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x4B7000
	015 Move X0, [X0+3024]
	016 Call 0x1C17CF4
	017 Move X0, 0x48E000
	018 Move X0, [X0+632]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+1652], W8
	022 Move X0, [X20]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {28}
	026 Call 0x1C17DFC
	027 Move X0, [X20]
	028 Move X8, [X0+184]
	029 Move X0, [X8]
	030 Compare X0, 0
	031 JumpIfEqual {44}
	032 Move X8, 0x48E000
	033 Move X8, [X8+632]
	034 Move [X0+16], X19
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X8, [X8]
	038 Move X8, [X8+184]
	039 Move X8, [X8]
	040 Move [X0+32], X8
	041 Move X30, [X31+32]
	042 Move X21, [X31+40]
	043 Return X0
	044 Call 0x1C17F20

Method: System.Void ClearStaticCache()

Disassembly:
	0x03C6DFDC ADRP X0, 0x4F3000
	0x03C6DFE0 LDR X0, [X0 + 0x2B0]
	0x03C6DFE4 BL 0x1C16CF4
	0x03C6DFE8 MOVZ W8, 0x1
	0x03C6DFEC STRB W8, [X23 + 0x983]
	0x03C6DFF0 LDR X0, [X19]
	0x03C6DFF4 LDR W8, [X0 + 0xE0]
	0x03C6DFF8 CBNZ W8, 0x3C6E004
	0x03C6DFFC BL 0x1C16DFC
	0x03C6E000 LDR X0, [X19]
	0x03C6E004 LDR X8, [X0 + 0xB8]
	0x03C6E008 ADRP X24, 0x778000
	0x03C6E00C LDRB W9, [X24 + 0x984]
	0x03C6E010 LDR W8, [X8 + 0x28]
	0x03C6E014 ADD W23, W8, 0x1
	0x03C6E018 CBNZ W9, 0x3C6E030
	0x03C6E01C MOV X0, X19
	0x03C6E020 BL 0x1C16CF4
	0x03C6E024 LDR X0, [X19]
	0x03C6E028 MOVZ W8, 0x1
	0x03C6E02C STRB W8, [X24 + 0x984]
	0x03C6E030 LDR W8, [X0 + 0xE0]
	0x03C6E034 CBNZ W8, 0x3C6E040
	0x03C6E038 BL 0x1C16DFC
	0x03C6E03C LDR X0, [X19]
	0x03C6E040 LDR X8, [X0 + 0xB8]
	0x03C6E044 ADRP X24, 0x4EB000
	0x03C6E048 STR W23, [X8 + 0x28]
	0x03C6E04C ADRP X23, 0x778000
	0x03C6E050 LDRB W8, [X23 + 0x510]
	0x03C6E054 LDR X24, [X24 + 0x20]
	0x03C6E058 TBNZ X8, 0x0, 0x3C6E070
	0x03C6E05C ADRP X0, 0x4EB000
	0x03C6E060 LDR X0, [X0 + 0x20]
	0x03C6E064 BL 0x1C16CF4
	0x03C6E068 MOVZ W8, 0x1
	0x03C6E06C STRB W8, [X23 + 0x510]
	0x03C6E070 LDR X8, [X24]
	0x03C6E074 LDR X8, [X8 + 0xB8]
	0x03C6E078 LDR X23, [X8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x77A000
	005 Move X19, 0x4B2000
	006 Move W8, [X20+1653]
	007 Move X19, [X19+3024]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x4B2000
	013 Move X0, [X0+3024]
	014 Call 0x1C17CF4
	015 Move X0, 0x488000
	016 Move X0, [X0+632]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+1653], W8
	020 Move X0, [X19]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {26}
	024 Call 0x1C17DFC
	025 Move X0, [X19]
	026 Move X8, [X0+184]
	027 Move X9, [X8]
	028 Compare X9, 0
	029 JumpIfEqual {51}
	030 Move X10, 0x488000
	031 Move X10, [X10+632]
	032 Move [X9+16], X31
	033 Move X10, [X10]
	034 Move X10, [X10+184]
	035 Move X10, [X10]
	036 Move [X9+32], X10
	037 Move X9, [X8+8]
	038 Compare X9, 0
	039 JumpIfEqual {51}
	040 Move [X9+24], X31
	041 Move [X9+32], X10
	042 Move X8, [X8+16]
	043 Compare X8, 0
	044 JumpIfEqual {51}
	045 Move X20, [X31+16]
	046 Move X19, [X31+24]
	047 Move [X8+16], X31
	048 Move [X8+24], X31
	049 Move X30, [X31+32]
	050 Return 
	051 Call 0x1C17F20

Method: System.String ToString()

Disassembly:
	0x03C6E07C CBZ X23, 0x3C6E210
	0x03C6E080 ADRP X24, 0x778000
	0x03C6E084 LDR X8, [X24 + 0x4A8]
	0x03C6E088 CBNZ X8, 0x3C6E0A0
	0x03C6E08C ADRP X0, 0xFFFFFFFFFCE83000
	0x03C6E090 ADD X0, X0, 0x566
	0x03C6E094 BL 0x1C16CB8
	0x03C6E098 MOV X8, X0

ISIL:
	001 Move X8, [X0+16]
	002 Compare X8, 0
	003 JumpIfNotEqual {7}
	004 Move X8, [X0+32]
	005 Compare X8, 0
	006 JumpIfEqual {9}
	007 Move X0, X8
	008 Return X0
	009 Move X1, X31
	010 Call Object.ToString, X0
	011 Return X0

Method: System.Void .cctor()

Disassembly:
	0x03C6E09C STR X0, [X24 + 0x4A8]
	0x03C6E0A0 MOV X0, X23
	0x03C6E0A4 BLR X8
	0x03C6E0A8 ORR W8, W0, 0x4
	0x03C6E0AC CMP W8, 0xC
	0x03C6E0B0 B.NE 0x3C6E138
	0x03C6E0B4 LDR X0, [X19]
	0x03C6E0B8 LDR W8, [X0 + 0xE0]
	0x03C6E0BC CBNZ W8, 0x3C6E0C4
	0x03C6E0C0 BL 0x1C16DFC
	0x03C6E0C4 MOV X0, X22
	0x03C6E0C8 BL 0x3C704C4
	0x03C6E0CC CBZ X0, 0x3C6E210
	0x03C6E0D0 LDR X8, [X0]
	0x03C6E0D4 STR X21, [X0 + 0x40]
	0x03C6E0D8 MOV X1, X21
	0x03C6E0DC MOV X22, X0
	0x03C6E0E0 LDP X9, X2, [X8 + 0x1F8]
	0x03C6E0E4 BLR X9
	0x03C6E0E8 CBZ X20, 0x3C6E104
	0x03C6E0EC LDR X8, [X22]
	0x03C6E0F0 MOV X0, X22
	0x03C6E0F4 MOV X1, X20
	0x03C6E0F8 LDR X9, [X8 + 0x208]
	0x03C6E0FC LDR X2, [X8 + 0x210]
	0x03C6E100 BLR X9
	0x03C6E104 LDR X0, [X19]
	0x03C6E108 LDR W8, [X0 + 0xE0]
	0x03C6E10C CBNZ W8, 0x3C6E118
	0x03C6E110 BL 0x1C16DFC
	0x03C6E114 LDR X0, [X19]
	0x03C6E118 LDR X8, [X0 + 0xB8]
	0x03C6E11C LDR X8, [X8 + 0x10]
	0x03C6E120 CBZ X8, 0x3C6E210
	0x03C6E124 LDR X0, [X8 + 0x18]
	0x03C6E128 CBZ X0, 0x3C6E210
	0x03C6E12C MOV X1, X22
	0x03C6E130 BL 0x3C70610
	0x03C6E134 B 0x3C6E1A4
	0x03C6E138 LDR X0, [X19]
	0x03C6E13C LDR W8, [X0 + 0xE0]
	0x03C6E140 CBNZ W8, 0x3C6E14C
	0x03C6E144 BL 0x1C16DFC
	0x03C6E148 LDR X0, [X19]
	0x03C6E14C LDR X8, [X0 + 0xB8]
	0x03C6E150 LDR X8, [X8 + 0x10]
	0x03C6E154 CBZ X8, 0x3C6E210

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0x779000
	006 Move X20, 0x4B1000
	007 Move X21, 0x486000
	008 Move W8, [X19+1654]
	009 Move X20, [X20+3024]
	010 Move X21, [X21+2440]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x4B1000
	016 Move X0, [X0+3024]
	017 Call 0x1C17CF4
	018 Move X0, 0x486000
	019 Move X0, [X0+2440]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X19+1654], W8
	023 Move X0, [X20]
	024 Call 0x1C17F10
	025 Move X19, X0
	026 Call GUIContent..ctor, X0
	027 Move X8, [X20]
	028 Move X8, [X8+184]
	029 Move [X8], X19
	030 Move X0, [X20]
	031 Call 0x1C17F10
	032 Move X19, X0
	033 Call GUIContent..ctor, X0
	034 Move X0, [X20]
	035 Move X8, [X0+184]
	036 Move [X8+8], X19
	037 Call 0x1C17F10
	038 Move X19, X0
	039 Call GUIContent..ctor, X0
	040 Move X0, [X20]
	041 Move X8, [X0+184]
	042 Move [X8+16], X19
	043 Call 0x1C17F10
	044 Move X1, [X21]
	045 Move X19, X0
	046 Call GUIContent..ctor, X0, X1
	047 Move X8, [X20]
	048 Move X8, [X8+184]
	049 Move [X8+24], X19
	050 Move X20, [X31+16]
	051 Move X19, [X31+24]
	052 Move X30, [X31+32]
	053 Move X21, [X31+40]
	054 Return 

