Type: UnityEngine.TextEditor

Method: System.String get_text()

Disassembly:
	0x03C7F29C MOVZ W8, 0x22
	0x03C7F2A0 STR W8, [X31 + 0xC4]
	0x03C7F2A4 ADRP X8, 0x4E1000
	0x03C7F2A8 LDR X8, [X8 + 0x738]
	0x03C7F2AC STR X24, [X31 + 0xA0]
	0x03C7F2B0 MOVZ W22, 0x29
	0x03C7F2B4 MOVZ W19, 0x2C

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+56]
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move X1, X31
	006 Move X30, [X31+16]
	007 Call GUIContent.get_text, X0
	008 Return X0
	009 Call 0x1C17F20

Method: System.Void set_text(System.String value)

Disassembly:
	0x03C7F2B8 STR X8, [X31 + 0x100]
	0x03C7F2BC ADRP X8, 0x4E1000
	0x03C7F2C0 LDR X8, [X8 + 0x730]
	0x03C7F2C4 MOVZ W28, 0x28
	0x03C7F2C8 MOVZ W17, 0x26
	0x03C7F2CC MOVZ W2, 0x27
	0x03C7F2D0 STR X8, [X31 + 0xF0]
	0x03C7F2D4 MOVZ W8, 0x20
	0x03C7F2D8 STR W8, [X31 + 0xA8]
	0x03C7F2DC ADRP X8, 0x4E1000
	0x03C7F2E0 LDR X8, [X8 + 0x790]
	0x03C7F2E4 MOVZ W4, 0x1D
	0x03C7F2E8 MOVZ W26, 0x1C
	0x03C7F2EC MOVZ W30, 0x23
	0x03C7F2F0 STR X8, [X31 + 0xE8]
	0x03C7F2F4 ADRP X8, 0x4E1000
	0x03C7F2F8 LDR X8, [X8 + 0x620]
	0x03C7F2FC MOVZ W24, 0x21
	0x03C7F300 MOVZ W1, 0xA
	0x03C7F304 MOVZ W27, 0x29
	0x03C7F308 STR X8, [X31 + 0xE0]
	0x03C7F30C ADRP X8, 0x4E1000
	0x03C7F310 LDR X8, [X8 + 0x690]
	0x03C7F314 MOVZ W7, 0x2A
	0x03C7F318 MOVZ W5, 0x2B
	0x03C7F31C STR X8, [X31 + 0xD8]
	0x03C7F320 MOVZ W8, 0x11
	0x03C7F324 STR W8, [X31 + 0xB4]
	0x03C7F328 MOVZ W8, 0xE
	0x03C7F32C STR W8, [X31 + 0xAC]
	0x03C7F330 MOVZ W8, 0xF
	0x03C7F334 STR W8, [X31 + 0xB0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x768000
	006 Move W8, [X21+2484]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x477000
	014 Move X0, [X0+632]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2484], W8
	018 Move X0, [X19+56]
	019 Compare X20, 0
	020 JumpIfNotEqual {26}
	021 Move X8, 0x477000
	022 Move X8, [X8+632]
	023 Move X8, [X8]
	024 Move X8, [X8+184]
	025 Move X20, [X8]
	026 Compare X0, 0
	027 JumpIfEqual {40}
	028 Move X1, X20
	029 Move X2, X31
	030 Call GUIContent.set_text, X0, X1
	031 Add X1, X19, 80
	032 Move X0, X19
	033 Call TextEditor.EnsureValidCodePointIndex, X0, X1
	034 Add X1, X19, 84
	035 Move X0, X19
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move X30, [X31+32]
	039 Move X21, [X31+40]
	040 Call 0x1C17F20

Method: UnityEngine.Rect get_position()

Disassembly:
	0x03C7F378 STR W19, [X31 + 0x2C]
	0x03C7F37C STR X14, [X31 + 0x30]
	0x03C7F380 STR W22, [X31 + 0x3C]

ISIL:
	001 Move S0, [X0+64]
	002 Move S1, [X0+68]
	003 Move S2, [X0+72]
	004 Move S3, [X0+76]
	005 Return X0

Method: System.Void set_position(UnityEngine.Rect value)

Disassembly:
	0x03C7F384 STR X13, [X31 + 0x40]
	0x03C7F388 STR W29, [X31 + 0x4C]
	0x03C7F38C STR X12, [X31 + 0x50]
	0x03C7F390 STP W25, W27, [X31 + 0x5C]
	0x03C7F394 STR W7, [X31 + 0x64]
	0x03C7F398 STP X11, X10, [X31 + 0x68]
	0x03C7F39C STR W5, [X31 + 0x7C]
	0x03C7F3A0 MOV W25, W17
	0x03C7F3A4 MOV W29, W2
	0x03C7F3A8 MOV X22, X3
	0x03C7F3AC MOV W19, W4
	0x03C7F3B0 MOV X28, X6
	0x03C7F3B4 MOV W27, W30
	0x03C7F3B8 BL 0x3C82048
	0x03C7F3BC LDR X8, [X31 + 0x80]
	0x03C7F3C0 LDR W1, [X31 + 0x90]
	0x03C7F3C4 LDR X0, [X8]
	0x03C7F3C8 BL 0x3C82048
	0x03C7F3CC LDR X8, [X31 + 0xA0]
	0x03C7F3D0 LDR W1, [X31 + 0x94]
	0x03C7F3D4 LDR X0, [X8]
	0x03C7F3D8 BL 0x3C82048
	0x03C7F3DC LDR X8, [X31 + 0xC8]
	0x03C7F3E0 LDR W1, [X31 + 0x98]
	0x03C7F3E4 LDR X0, [X8]
	0x03C7F3E8 BL 0x3C82048
	0x03C7F3EC LDR X0, [X23]
	0x03C7F3F0 LDR W23, [X31 + 0xB0]
	0x03C7F3F4 MOV W1, W23
	0x03C7F3F8 BL 0x3C82048
	0x03C7F3FC LDR X0, [X20]
	0x03C7F400 LDR W1, [X31 + 0xAC]
	0x03C7F404 BL 0x3C82048
	0x03C7F408 LDR X8, [X31 + 0xD0]
	0x03C7F40C LDR W1, [X31 + 0xB4]
	0x03C7F410 LDR X0, [X8]
	0x03C7F414 BL 0x3C82048
	0x03C7F418 LDR X8, [X31 + 0xF8]
	0x03C7F41C LDR W1, [X31 + 0x9C]
	0x03C7F420 LDR X0, [X8]
	0x03C7F424 BL 0x3C82048
	0x03C7F428 LDR X8, [X31 + 0xD8]
	0x03C7F42C MOV W1, W23
	0x03C7F430 LDR X0, [X8]
	0x03C7F434 BL 0x3C82048
	0x03C7F438 LDR X8, [X31 + 0xE0]
	0x03C7F43C LDR W1, [X31 + 0x8C]
	0x03C7F440 LDR X0, [X8]

ISIL:
	001 Move [X31-64], D11
	002 Move [X31-56], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move V9, V2
	009 Move V2, [X0+64]
	010 Move V8, V3
	011 Move X19, X0
	012 Move V10, V0
	013 NotImplemented "Instruction FCMP not yet implemented."
	014 Move V11, V1
	015 Move V0, [X19+76]
	016 NotImplemented "Instruction FCMP not yet implemented."
	017 Move V0, [X19+72]
	018 NotImplemented "Instruction FCMP not yet implemented."
	019 Move V0, [X19+68]
	020 NotImplemented "Instruction FCMP not yet implemented."
	021 Move X20, [X31+48]
	022 Move X19, [X31+56]
	023 Move X30, [X31+32]
	024 Move D9, [X31+16]
	025 Move D8, [X31+24]
	026 Move D11, [X31+64]
	027 Move D10, [X31+72]
	028 Return 
	029 Move X20, 0x75B000
	030 Move W8, [X20+1935]
	031 Compare W8, 0
	032 JumpIfNotEqual {38}
	033 Move X0, 0x47D000
	034 Move X0, [X0+3848]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X20+1935], W8
	038 Move X8, 0x47D000
	039 Move X8, [X8+3848]
	040 Move X0, X19
	041 Move X30, [X31+32]
	042 Move X8, [X8]
	043 Move X8, [X8+184]
	044 Move V0, [X8]
	045 Move [X19+64], S10
	046 Move [X19+72], S11
	047 Move [X19+72], S9
	048 Move [X19+80], S8
	049 Move D9, [X31+16]
	050 Move D8, [X31+24]
	051 Move [X19+44], D0
	052 Move X20, [X31+48]
	053 Move X19, [X31+56]
	054 Move D11, [X31+64]
	055 Move D10, [X31+72]

Method: UnityEngine.Rect get_localPosition()

Disassembly:
	0x03C7F6E8 MOV X0, X19
	0x03C7F6EC BL 0x3C80A70
	0x03C7F6F0 B 0x3C7F808

ISIL:
	001 Move S0, [X0+64]
	002 Move S1, [X0+68]
	003 Move S2, [X0+72]
	004 Move S3, [X0+76]
	005 Return X0

Method: System.Int32 get_cursorIndex()

Disassembly:
	0x03C7F6F4 MOV X0, X19
	0x03C7F6F8 BL 0x3C80AF4

ISIL:
	001 Move W0, [X0+80]
	002 Return X0

Method: System.Void set_cursorIndex(System.Int32 value)

Disassembly:
	0x03C7F6FC B 0x3C7F808
	0x03C7F700 MOV X0, X19
	0x03C7F704 BL 0x3C81488
	0x03C7F708 B 0x3C7F808
	0x03C7F70C MOV X0, X19
	0x03C7F710 BL 0x3C814E8
	0x03C7F714 B 0x3C7F808
	0x03C7F718 MOV X0, X19
	0x03C7F71C BL 0x3C81008
	0x03C7F720 B 0x3C7F808
	0x03C7F724 MOV X0, X19
	0x03C7F728 BL 0x3C81060
	0x03C7F72C B 0x3C7F808
	0x03C7F730 MOV X0, X19
	0x03C7F734 BL 0x3C810B8
	0x03C7F738 B 0x3C7F808
	0x03C7F73C MOV X0, X19
	0x03C7F740 BL 0x3C8111C
	0x03C7F744 B 0x3C7F808
	0x03C7F748 MOV X0, X19
	0x03C7F74C MOV W1, W31
	0x03C7F750 B 0x3C7F804

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, X0
	006 Add X20, X20, 80
	007 Move W21, [X20]
	008 Move X19, X0
	009 Move [X20], W1
	010 Move X1, X20
	011 Call TextEditor.EnsureValidCodePointIndex, X0, X1
	012 Move W8, [X20]
	013 NotImplemented "Instruction CMP not yet implemented."
	014 Move X20, [X31+16]
	015 Move X19, [X31+24]
	016 Move X30, [X31+32]
	017 Move X21, [X31+40]
	018 Return 
	019 Move X8, [X19]
	020 Move W9, 1
	021 Move [X19+88], W9
	022 Move X0, X19
	023 Move X2, [X8+408]
	024 Move X1, [X8+416]
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 CallNoReturn X2

Method: System.Int32 get_selectIndex()

Disassembly:
	0x03C7F754 MOV X0, X19
	0x03C7F758 BL 0x3C8119C

ISIL:
	001 Move W0, [X0+84]
	002 Return X0

Method: System.Void set_selectIndex(System.Int32 value)

Disassembly:
	0x03C7F75C B 0x3C7F808
	0x03C7F760 MOV X0, X19
	0x03C7F764 BL 0x3C816B0
	0x03C7F768 B 0x3C7F808
	0x03C7F76C MOV X0, X19
	0x03C7F770 BL 0x3C81714
	0x03C7F774 B 0x3C7F808
	0x03C7F778 LDR W1, [X19 + 0x50]
	0x03C7F77C MOVN W8, 0x0
	0x03C7F780 MOV X0, X19
	0x03C7F784 STRB W31, [X19 + 0x29]
	0x03C7F788 STR W8, [X19 + 0x78]
	0x03C7F78C BL 0x3C807A0
	0x03C7F790 B 0x3C7F7FC
	0x03C7F794 LDR W1, [X19 + 0x50]
	0x03C7F798 MOVN W8, 0x0
	0x03C7F79C MOV X0, X19
	0x03C7F7A0 STRB W31, [X19 + 0x29]
	0x03C7F7A4 STR W8, [X19 + 0x78]
	0x03C7F7A8 BL 0x3C808B8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, X0
	006 Add X20, X20, 84
	007 Move W21, [X20]
	008 Move X19, X0
	009 Move [X20], W1
	010 Move X1, X20
	011 Call TextEditor.EnsureValidCodePointIndex, X0, X1
	012 Move W8, [X20]
	013 NotImplemented "Instruction CMP not yet implemented."
	014 Move X20, [X31+16]
	015 Move X19, [X31+24]
	016 Move X30, [X31+32]
	017 Move X21, [X31+40]
	018 Return 
	019 Move X8, [X19]
	020 Move X0, X19
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X2, [X8+424]
	024 Move X1, [X8+432]
	025 Move X30, [X31+32]
	026 Move X21, [X31+40]
	027 CallNoReturn X2

Method: System.Void ClearCursorPos()

Disassembly:
	0x03C7F7AC B 0x3C7F7FC
	0x03C7F7B0 MOV X0, X19
	0x03C7F7B4 BL 0x3C81648
	0x03C7F7B8 B 0x3C7F808

ISIL:
	001 Move TEMP, 0
	002 Not TEMP
	003 Move W8, TEMP
	004 Move [X0+41], W31
	005 Move [X0+120], W8
	006 Return 

Method: System.Void .ctor()

Disassembly:
	0x03C7F7BC MOV X0, X19
	0x03C7F7C0 BL 0x3C815E0
	0x03C7F7C4 B 0x3C7F808
	0x03C7F7C8 LDR W1, [X19 + 0x50]
	0x03C7F7CC MOVN W8, 0x0
	0x03C7F7D0 MOV X0, X19
	0x03C7F7D4 STRB W31, [X19 + 0x29]
	0x03C7F7D8 STR W8, [X19 + 0x78]
	0x03C7F7DC BL 0x3C7FC60
	0x03C7F7E0 B 0x3C7F7FC
	0x03C7F7E4 LDR W1, [X19 + 0x50]
	0x03C7F7E8 MOVN W8, 0x0
	0x03C7F7EC MOV X0, X19
	0x03C7F7F0 STRB W31, [X19 + 0x29]
	0x03C7F7F4 STR W8, [X19 + 0x78]
	0x03C7F7F8 BL 0x3C7FDD8
	0x03C7F7FC MOV W1, W0
	0x03C7F800 MOV X0, X19
	0x03C7F804 BL 0x3C7E6FC
	0x03C7F808 LDP X20, X19, [X31 + 0x40]
	0x03C7F80C LDP X22, X21, [X31 + 0x30]
	0x03C7F810 LDR X30, [X31 + 0x20]
	0x03C7F814 MOV W0, W31
	0x03C7F818 ADD X31, X31, 0x50
	0x03C7F81C RET
	0x03C7F820 MOV X0, X19
	0x03C7F824 BL 0x3C8185C
	0x03C7F828 B 0x3C7F808
	0x03C7F82C MOV X0, X19
	0x03C7F830 BL 0x3C817D0
	0x03C7F834 B 0x3C7F808
	0x03C7F838 TBNZ X20, 0x0, 0x3C7F808
	0x03C7F83C MOV X0, X19
	0x03C7F840 LDP X20, X19, [X31 + 0x40]
	0x03C7F844 LDP X22, X21, [X31 + 0x30]
	0x03C7F848 LDR X30, [X31 + 0x20]
	0x03C7F84C ADD X31, X31, 0x50
	0x03C7F850 B 0x3C7FFA4
	0x03C7F854 TBNZ X20, 0x0, 0x3C7F808
	0x03C7F858 MOV X0, X19
	0x03C7F85C LDP X20, X19, [X31 + 0x40]
	0x03C7F860 LDP X22, X21, [X31 + 0x30]
	0x03C7F864 LDR X30, [X31 + 0x20]
	0x03C7F868 ADD X31, X31, 0x50
	0x03C7F86C B 0x3C8014C
	0x03C7F870 TBNZ X20, 0x0, 0x3C7F808
	0x03C7F874 MOV X0, X19
	0x03C7F878 LDP X20, X19, [X31 + 0x40]
	0x03C7F87C LDP X22, X21, [X31 + 0x30]
	0x03C7F880 LDR X30, [X31 + 0x20]
	0x03C7F884 ADD X31, X31, 0x50
	0x03C7F888 B 0x3C7FBB4
	0x03C7F88C TBNZ X20, 0x0, 0x3C7F808
	0x03C7F890 MOV X0, X19
	0x03C7F894 LDP X20, X19, [X31 + 0x40]
	0x03C7F898 LDP X22, X21, [X31 + 0x30]
	0x03C7F89C LDR X30, [X31 + 0x20]
	0x03C7F8A0 ADD X31, X31, 0x50
	0x03C7F8A4 B 0x3C7FD2C
	0x03C7F8A8 TBNZ X20, 0x0, 0x3C7F808
	0x03C7F8AC MOV X0, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x768000
	006 Move X20, 0x49C000
	007 Move W8, [X21+2485]
	008 Move X20, [X20+2192]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x4A0000
	015 Move X0, [X0+3024]
	016 Call 0x1C17CF4
	017 Move X0, 0x49C000
	018 Move X0, [X0+2192]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+2485], W8
	022 Move [X19+16], X31
	023 Move [X19+24], W31
	024 Move X0, [X20]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X20, 0x4A0000
	030 Move X20, [X20+3024]
	031 Move X0, X31
	032 Call GUIStyle.get_none
	033 Move [X19+32], X0
	034 NotImplemented "Instruction STRH not yet implemented."
	035 Move [X19+42], W31
	036 Move X21, 0x75B000
	037 Move W8, [X21+1935]
	038 Compare W8, 0
	039 JumpIfNotEqual {45}
	040 Move X0, 0x47D000
	041 Move X0, [X0+3848]
	042 Call 0x1C17CF4
	043 Move W8, 1
	044 Move [X21+1935], W8
	045 Move X8, 0x47D000
	046 Move X8, [X8+3848]
	047 Move X8, [X8]
	048 Move X8, [X8+184]
	049 Move V0, [X8]
	050 Move [X19+44], D0
	051 Move X0, [X20]
	052 Call 0x1C17F10
	053 Move X1, X31
	054 Move X20, X0
	055 Call GUIContent..ctor, X0
	056 Move TEMP, 0
	057 Not TEMP
	058 Move W8, TEMP
	059 Move [X19+56], X20
	060 Move [X19+108], W31
	061 Move [X19+112], W31
	062 NotImplemented "Instruction STRH not yet implemented."
	063 Move [X19+80], X31
	064 Move [X19+88], W31
	065 Move [X19+120], W8
	066 Move X0, X19
	067 Move X20, [X31+16]
	068 Move X19, [X31+24]
	069 Move X1, X31
	070 Move X30, [X31+32]
	071 Move X21, [X31+40]
	072 Call Object..ctor, X0
	073 Return 

Method: System.Void OnFocus()

Disassembly:
	0x03C7F8B0 LDP X20, X19, [X31 + 0x40]
	0x03C7F8B4 LDP X22, X21, [X31 + 0x30]
	0x03C7F8B8 LDR X30, [X31 + 0x20]
	0x03C7F8BC ADD X31, X31, 0x50
	0x03C7F8C0 B 0x3C7F930
	0x03C7F8C4 TBNZ X20, 0x0, 0x3C7F808
	0x03C7F8C8 MOV X0, X19
	0x03C7F8CC LDP X20, X19, [X31 + 0x40]
	0x03C7F8D0 LDP X22, X21, [X31 + 0x30]
	0x03C7F8D4 LDR X30, [X31 + 0x20]
	0x03C7F8D8 ADD X31, X31, 0x50
	0x03C7F8DC B 0x3C81E00
	0x03C7F8E0 MOV X0, X19
	0x03C7F8E4 BL 0x3C81E2C
	0x03C7F8E8 B 0x3C7F808
	0x03C7F8EC TBNZ X20, 0x0, 0x3C7F808
	0x03C7F8F0 MOV X0, X19

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W8, [X0+40]
	004 Move X19, X0
	005 Compare W8, 0
	006 JumpIfEqual {13}
	007 Move X0, X19
	008 Move W1, W31
	009 Call TextEditor.set_selectIndex, X0, X1
	010 Move X0, X19
	011 Move W1, W31
	012 Call TextEditor.set_cursorIndex, X0, X1
	013 Move X0, X19
	014 Call TextEditor.SelectAll, X0
	015 Move W8, 1
	016 Move [X19+43], W8
	017 Move X30, [X31+16]
	018 Move X19, [X31+24]
	019 Return 

Method: System.Void OnLostFocus()

Disassembly:
	0x03C7F93C MOV X19, X0
	0x03C7F940 CMP W21, W8
	0x03C7F944 B.NE 0x3C7F994
	0x03C7F948 MOV W20, W21
	0x03C7F94C CBZ W21, 0x3C7F980
	0x03C7F950 LDR X0, [X19 + 0x38]
	0x03C7F954 CBZ X0, 0x3C7FA04
	0x03C7F958 MOV X1, X31
	0x03C7F95C BL 0x3C69940
	0x03C7F960 CBZ X0, 0x3C7FA04
	0x03C7F964 SUB W21, W20, 0x1
	0x03C7F968 MOV W1, W21
	0x03C7F96C MOV X2, X31
	0x03C7F970 BL 0x3222A1C
	0x03C7F974 AND W8, W0, 0xFFFF
	0x03C7F978 CMP W8, 0xA
	0x03C7F97C B.NE 0x3C7F948
	0x03C7F980 LDR W8, [X19 + 0x50]
	0x03C7F984 CMP W8, W20
	0x03C7F988 B.NE 0x3C7F9A0
	0x03C7F98C MOV W0, W31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move [X0+43], W31
	005 Move X20, 0x75B000
	006 Move W8, [X20+1935]
	007 Move X19, X0
	008 Compare W8, 0
	009 JumpIfNotEqual {15}
	010 Move X0, 0x47D000
	011 Move X0, [X0+3848]
	012 Call 0x1C17CF4
	013 Move W8, 1
	014 Move [X20+1935], W8
	015 Move X8, 0x47D000
	016 Move X8, [X8+3848]
	017 Move X8, [X8]
	018 Move X8, [X8+184]
	019 Move V0, [X8]
	020 Move [X19+44], D0
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X30, [X31+32]
	024 Return 

Method: System.Void GrabGraphicalCursorPos()

Disassembly:
	0x03C7F990 B 0x3C7F9F8
	0x03C7F994 MOV X0, X19
	0x03C7F998 BL 0x3C7FA18
	0x03C7F99C B 0x3C7F9F4
	0x03C7F9A0 LDR X21, [X19 + 0x38]
	0x03C7F9A4 CBZ X21, 0x3C7FA04
	0x03C7F9A8 MOV X0, X21
	0x03C7F9AC MOV X1, X31
	0x03C7F9B0 BL 0x3C69940
	0x03C7F9B4 CBZ X0, 0x3C7FA04
	0x03C7F9B8 LDR W8, [X19 + 0x50]
	0x03C7F9BC MOV W1, W20
	0x03C7F9C0 MOV X3, X31
	0x03C7F9C4 SUB W2, W8, W20
	0x03C7F9C8 BL 0x3228B90
	0x03C7F9CC MOV X1, X0
	0x03C7F9D0 MOV X0, X21
	0x03C7F9D4 MOV X2, X31
	0x03C7F9D8 BL 0x3C69948
	0x03C7F9DC MOV X0, X19
	0x03C7F9E0 MOV W1, W20
	0x03C7F9E4 BL 0x3C7E6FC
	0x03C7F9E8 MOV X0, X19
	0x03C7F9EC MOV W1, W20
	0x03C7F9F0 BL 0x3C7E75C
	0x03C7F9F4 MOVZ W0, 0x1
	0x03C7F9F8 LDP X20, X19, [X31 + 0x10]
	0x03C7F9FC LDP X30, X21, [X31], #0x20
	0x03C7FA00 RET
	0x03C7FA04 BL 0x1C16F20
	0x03C7FA08 LDP W8, W9, [X0 + 0x50]
	0x03C7FA0C CMP W8, W9
	0x03C7FA10 CSET W0, NE

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W8, [X0+41]
	005 Compare W8, 0
	006 JumpIfNotEqual {38}
	007 Move X8, [X0]
	008 Move X20, [X0+32]
	009 Move X19, X0
	010 Move X9, [X8+376]
	011 Move X1, [X8+384]
	012 NotImplemented "Instruction BLR not yet implemented."
	013 Compare X20, 0
	014 JumpIfEqual {42}
	015 Move W2, [X19+80]
	016 Move X1, [X19+56]
	017 Move X0, X20
	018 Move X3, X31
	019 Call GUIStyle.GetCursorPixelPosition, X0, X1, X2, X3
	020 Move X8, [X19]
	021 Move [X19+92], S0
	022 Move [X19+100], S1
	023 Move X20, [X19+32]
	024 Move X0, X19
	025 Move X9, [X8+376]
	026 Move X1, [X8+384]
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Compare X20, 0
	029 JumpIfEqual {42}
	030 Move W2, [X19+84]
	031 Move X1, [X19+56]
	032 Move X0, X20
	033 Move X3, X31
	034 Call GUIStyle.GetCursorPixelPosition, X0, X1, X2, X3
	035 Move [X19+100], S0
	036 Move [X19+108], S1
	037 Move [X19+41], W31
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move X30, [X31+32]
	041 Return 
	042 Call 0x1C17F20

Method: System.Boolean HandleKeyEvent(UnityEngine.Event e)

Disassembly:
	0x03C7FA14 RET
	0x03C7FA18 STP X30, X25, [X31 - 0x40]!

ISIL:
	001 Move W2, W31

Method: System.Boolean HandleKeyEvent(UnityEngine.Event e, System.Boolean textIsReadOnly)

Disassembly:
	0x03C7FA1C STP X24, X23, [X31 + 0x10]
	0x03C7FA20 STP X22, X21, [X31 + 0x20]
	0x03C7FA24 STP X20, X19, [X31 + 0x30]
	0x03C7FA28 LDP W24, W25, [X0 + 0x50]
	0x03C7FA2C CMP W24, W25
	0x03C7FA30 B.EQ 0x3C7FB94
	0x03C7FA34 LDR X20, [X0 + 0x38]
	0x03C7FA38 MOV X19, X0
	0x03C7FA3C CBZ X20, 0x3C7FBB0
	0x03C7FA40 MOV X0, X20
	0x03C7FA44 MOV X1, X31
	0x03C7FA48 BL 0x3C69940
	0x03C7FA4C CMP W24, W25
	0x03C7FA50 B.GE 0x3C7FAF0
	0x03C7FA54 CBZ X0, 0x3C7FBB0
	0x03C7FA58 LDR W2, [X19 + 0x50]
	0x03C7FA5C MOV W1, W31
	0x03C7FA60 MOV X3, X31
	0x03C7FA64 BL 0x3228DE4
	0x03C7FA68 LDR X8, [X19 + 0x38]
	0x03C7FA6C CBZ X8, 0x3C7FBB0
	0x03C7FA70 MOV X21, X0
	0x03C7FA74 MOV X0, X8
	0x03C7FA78 MOV X1, X31
	0x03C7FA7C BL 0x3C69940
	0x03C7FA80 LDR X8, [X19 + 0x38]
	0x03C7FA84 CBZ X8, 0x3C7FBB0
	0x03C7FA88 LDR W23, [X19 + 0x54]
	0x03C7FA8C MOV X22, X0
	0x03C7FA90 MOV X0, X8
	0x03C7FA94 MOV X1, X31
	0x03C7FA98 BL 0x3C69940
	0x03C7FA9C CBZ X0, 0x3C7FBB0
	0x03C7FAA0 CBZ X22, 0x3C7FBB0
	0x03C7FAA4 LDR W8, [X19 + 0x54]
	0x03C7FAA8 LDR W9, [X0 + 0x10]
	0x03C7FAAC MOV X0, X22
	0x03C7FAB0 MOV W1, W23
	0x03C7FAB4 MOV X3, X31
	0x03C7FAB8 SUB W2, W9, W8
	0x03C7FABC BL 0x3228DE4
	0x03C7FAC0 MOV X1, X0
	0x03C7FAC4 MOV X0, X21
	0x03C7FAC8 MOV X2, X31
	0x03C7FACC BL 0x321B938
	0x03C7FAD0 MOV X1, X0
	0x03C7FAD4 MOV X0, X20
	0x03C7FAD8 MOV X2, X31
	0x03C7FADC BL 0x3C69948
	0x03C7FAE0 LDR W1, [X19 + 0x50]
	0x03C7FAE4 MOV X0, X19
	0x03C7FAE8 BL 0x3C7E75C
	0x03C7FAEC B 0x3C7FB88
	0x03C7FAF0 CBZ X0, 0x3C7FBB0
	0x03C7FAF4 LDR W2, [X19 + 0x54]
	0x03C7FAF8 MOV W1, W31
	0x03C7FAFC MOV X3, X31
	0x03C7FB00 BL 0x3228DE4
	0x03C7FB04 LDR X8, [X19 + 0x38]
	0x03C7FB08 CBZ X8, 0x3C7FBB0
	0x03C7FB0C MOV X21, X0
	0x03C7FB10 MOV X0, X8
	0x03C7FB14 MOV X1, X31
	0x03C7FB18 BL 0x3C69940
	0x03C7FB1C LDR X8, [X19 + 0x38]
	0x03C7FB20 CBZ X8, 0x3C7FBB0
	0x03C7FB24 LDR W23, [X19 + 0x50]
	0x03C7FB28 MOV X22, X0
	0x03C7FB2C MOV X0, X8
	0x03C7FB30 MOV X1, X31
	0x03C7FB34 BL 0x3C69940

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x768000
	009 Move W8, [X22+2486]
	010 Move W20, W2
	011 Move X19, X1
	012 Move X21, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {28}
	017 Move X0, 0x4E2000
	018 Move X0, [X0+1744]
	019 Call 0x1C17CF4
	020 Move X0, 0x4E2000
	021 Move X0, [X0+1752]
	022 Call 0x1C17CF4
	023 Move X0, 0x4E2000
	024 Move X0, [X0+672]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X22+2486], W8
	028 Call TextEditor.InitKeyActions, X0
	029 Compare X19, 0
	030 JumpIfEqual {86}
	031 Move X24, 0x4E2000
	032 Move X24, [X24+672]
	033 Move X0, X19
	034 Move X1, X31
	035 Call Event.get_modifiers, X0
	036 Move W22, W0
	037 Move X0, X19
	038 Move X1, X31
	039 Call Event.get_modifiers, X0
	040 And W1, W0, 0xFFFFFFDF
	041 Move X0, X19
	042 Move X2, X31
	043 Call Event.set_modifiers, X0, X1
	044 Move X8, [X24]
	045 Move X8, [X8+184]
	046 Move X0, [X8]
	047 Compare X0, 0
	048 JumpIfEqual {86}
	049 Move X8, 0x4E2000
	050 Move X8, [X8+1744]
	051 Move X1, X19
	052 Move X2, [X8]
	053 Call Dictionary`2<Object, Int32Enum>.ContainsKey, X0, X1
	054 Move W23, W0
	055 Move TEMP, X0
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfNotEqual {73}
	059 Move X8, [X24]
	060 Move X8, [X8+184]
	061 Move X0, [X8]
	062 Compare X0, 0
	063 JumpIfEqual {86}
	064 Move X8, 0x4E2000
	065 Move X8, [X8+1752]
	066 Move X1, X19
	067 Move X2, [X8]
	068 Call Dictionary`2<Object, Int32Enum>.get_Item, X0, X1
	069 Move W1, W0
	070 And W2, W20, 1
	071 Move X0, X21
	072 Call TextEditor.PerformOperation, X0, X1, X2
	073 Move X0, X19
	074 Move W1, W22
	075 Move X2, X31
	076 Call Event.set_modifiers, X0, X1
	077 And W0, W23, 1
	078 Move X20, [X31+48]
	079 Move X19, [X31+56]
	080 Move X22, [X31+32]
	081 Move X21, [X31+40]
	082 Move X24, [X31+16]
	083 Move X23, [X31+24]
	084 Move X30, [X31+64]
	085 Return X0
	086 Call 0x1C17F20

Method: System.Boolean DeleteLineBack()

Disassembly:
	0x03C80930 MOV V9.16B, V1.16B
	0x03C80934 LDR W8, [X0 + 0xE0]
	0x03C80938 CBNZ W8, 0x3C80940
	0x03C8093C BL 0x1C16DFC
	0x03C80940 MOV X0, X31
	0x03C80944 BL 0x3C6FDD0
	0x03C80948 LDR X8, [X19]
	0x03C8094C LDR X20, [X19 + 0x20]
	0x03C80950 MOV X0, X19
	0x03C80954 MOV V10.16B, V0.16B
	0x03C80958 LDP X9, X1, [X8 + 0x178]
	0x03C8095C BLR X9
	0x03C80960 CBZ X20, 0x3C809A0
	0x03C80964 ADRP X8, 0xFFFFFFFFFCE6A000
	0x03C80968 LDR V4, [X8 + 0x2B0]
	0x03C8096C FMOV S5, 1
	0x03C80970 FDIV S5, S5, S10
	0x03C80974 LDR X1, [X19 + 0x38]
	0x03C80978 FADD S4, S8, S4
	0x03C8097C FADD S5, S9, S5
	0x03C80980 MOV X0, X20
	0x03C80984 LDP X20, X19, [X31 + 0x30]
	0x03C80988 LDP X22, X21, [X31 + 0x20]
	0x03C8098C LDR X30, [X31 + 0x18]
	0x03C80990 LDP D9, D8, [X31 + 0x8]
	0x03C80994 MOV X2, X31
	0x03C80998 LDR V10, [X31], #0x40
	0x03C8099C B 0x3C7502C
	0x03C809A0 BL 0x1C16F20
	0x03C809A4 STP X30, X19, [X31 - 0x10]!
	0x03C809A8 MOV W1, W31
	0x03C809AC MOV X19, X0
	0x03C809B0 BL 0x3C7E6FC
	0x03C809B4 MOV X0, X19
	0x03C809B8 MOV W1, W31
	0x03C809BC LDP X30, X19, [X31], #0x10
	0x03C809C0 B 0x3C7E75C
	0x03C809C4 STR X30, [X31 - 0x20]!
	0x03C809C8 STP X20, X19, [X31 + 0x10]
	0x03C809CC MOV X19, X0
	0x03C809D0 LDR X0, [X0 + 0x38]
	0x03C809D4 CBZ X0, 0x3C80A08
	0x03C809D8 MOV X1, X31
	0x03C809DC BL 0x3C69940
	0x03C809E0 CBZ X0, 0x3C80A08
	0x03C809E4 LDR W20, [X0 + 0x10]
	0x03C809E8 MOV X0, X19
	0x03C809EC MOV W1, W20
	0x03C809F0 BL 0x3C7E6FC
	0x03C809F4 MOV X0, X19
	0x03C809F8 MOV W1, W20
	0x03C809FC LDP X20, X19, [X31 + 0x10]
	0x03C80A00 LDR X30, [X31], #0x20
	0x03C80A04 B 0x3C7E75C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W21, [X0+80]
	006 Move W8, [X0+84]
	007 Move X19, X0
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Move W20, W21
	010 Compare W21, 0
	011 JumpIfEqual {25}
	012 Move X0, [X19+56]
	013 Compare X0, 0
	014 JumpIfEqual {59}
	015 Move X1, X31
	016 Call GUIContent.get_text, X0
	017 Compare X0, 0
	018 JumpIfEqual {59}
	019 Subtract W21, W20, 1
	020 Move W1, W21
	021 Move X2, X31
	022 Call String.get_Chars, X0, X1
	023 And W8, W0, 0xFFFF
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move W8, [X19+80]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move W0, W31
	028 Move X0, X19
	029 Call TextEditor.DeleteSelection, X0
	030 Move X21, [X19+56]
	031 Compare X21, 0
	032 JumpIfEqual {59}
	033 Move X0, X21
	034 Move X1, X31
	035 Call GUIContent.get_text, X0
	036 Compare X0, 0
	037 JumpIfEqual {59}
	038 Move W8, [X19+80]
	039 Move W1, W20
	040 Move X3, X31
	041 Subtract W2, W8, W20
	042 Call String.Remove, X0, X1, X2
	043 Move X1, X0
	044 Move X0, X21
	045 Move X2, X31
	046 Call GUIContent.set_text, X0, X1
	047 Move X0, X19
	048 Move W1, W20
	049 Call TextEditor.set_cursorIndex, X0, X1
	050 Move X0, X19
	051 Move W1, W20
	052 Call TextEditor.set_selectIndex, X0, X1
	053 Move W0, 1
	054 Move X20, [X31+16]
	055 Move X19, [X31+24]
	056 Move X30, [X31+32]
	057 Move X21, [X31+40]
	058 Return X0
	059 Call 0x1C17F20

Method: System.Boolean DeleteWordBack()

Disassembly:
	0x03C80BB4 B 0x3C80BBC
	0x03C80BB8 BL 0x1C16F20
	0x03C80BBC STP D9, D8, [X31 - 0x30]!
	0x03C80BC0 STP X30, X21, [X31 + 0x10]
	0x03C80BC4 STP X20, X19, [X31 + 0x20]
	0x03C80BC8 LDR X8, [X0]
	0x03C80BCC MOV W20, W1
	0x03C80BD0 LDR X21, [X0 + 0x20]
	0x03C80BD4 MOV V8.16B, V1.16B
	0x03C80BD8 LDP X9, X1, [X8 + 0x178]
	0x03C80BDC MOV X19, X0
	0x03C80BE0 MOV V9.16B, V0.16B
	0x03C80BE4 BLR X9
	0x03C80BE8 CBZ X21, 0x3C80C40
	0x03C80BEC LDP S6, S4, [X19 + 0x2C]
	0x03C80BF0 LDR X1, [X19 + 0x38]
	0x03C80BF4 MOV X0, X21
	0x03C80BF8 MOV X2, X31
	0x03C80BFC FADD S5, S8, S4
	0x03C80C00 FADD S4, S9, S6
	0x03C80C04 BL 0x3C7502C
	0x03C80C08 MOV W1, W0
	0x03C80C0C MOV X0, X19
	0x03C80C10 BL 0x3C7E75C
	0x03C80C14 TBNZ X20, 0x0, 0x3C80C24
	0x03C80C18 LDR W1, [X19 + 0x54]
	0x03C80C1C MOV X0, X19
	0x03C80C20 BL 0x3C7E6FC
	0x03C80C24 LDR X8, [X19]
	0x03C80C28 MOV X0, X19
	0x03C80C2C LDP X20, X19, [X31 + 0x20]
	0x03C80C30 LDP X30, X21, [X31 + 0x10]
	0x03C80C34 LDP X2, X1, [X8 + 0x188]
	0x03C80C38 LDP D9, D8, [X31], #0x30
	0x03C80C3C BR X2
	0x03C80C40 BL 0x1C16F20
	0x03C80C44 SUB X31, X31, 0x40
	0x03C80C48 STP D9, D8, [X31 + 0x10]
	0x03C80C4C STP X30, X21, [X31 + 0x20]
	0x03C80C50 STP X20, X19, [X31 + 0x30]
	0x03C80C54 LDR X8, [X0]
	0x03C80C58 LDRB W21, [X0 + 0x6C]
	0x03C80C5C LDR X20, [X0 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W1, [X0+80]
	006 Move W8, [X0+84]
	007 Move X19, X0
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Move X0, X19
	010 Call TextEditor.FindEndOfPreviousWord, X0, X1
	011 Move W8, [X19+80]
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Move W0, W31
	014 Move X0, X19
	015 Call TextEditor.DeleteSelection, X0
	016 Move X21, [X19+56]
	017 Compare X21, 0
	018 JumpIfEqual {46}
	019 Move W20, W0
	020 Move X0, X21
	021 Move X1, X31
	022 Call GUIContent.get_text, X0
	023 Compare X0, 0
	024 JumpIfEqual {46}
	025 Move W8, [X19+80]
	026 Move W1, W20
	027 Move X3, X31
	028 Subtract W2, W8, W20
	029 Call String.Remove, X0, X1, X2
	030 Move X1, X0
	031 Move X0, X21
	032 Move X2, X31
	033 Call GUIContent.set_text, X0, X1
	034 Move X0, X19
	035 Move W1, W20
	036 Call TextEditor.set_cursorIndex, X0, X1
	037 Move X0, X19
	038 Move W1, W20
	039 Call TextEditor.set_selectIndex, X0, X1
	040 Move W0, 1
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move X30, [X31+32]
	044 Move X21, [X31+40]
	045 Return X0
	046 Call 0x1C17F20

Method: System.Boolean DeleteWordForward()

Disassembly:
	0x03C80D2C MOV W1, W21
	0x03C80D30 BL 0x3C80E8C
	0x03C80D34 MOV W1, W0
	0x03C80D38 MOV X0, X19
	0x03C80D3C BL 0x3C7E6FC
	0x03C80D40 LDR W1, [X19 + 0x70]
	0x03C80D44 MOV X0, X19
	0x03C80D48 MOV W2, W31
	0x03C80D4C B 0x3C80DAC
	0x03C80D50 LDR X0, [X19 + 0x38]
	0x03C80D54 CBZ X0, 0x3C80E88
	0x03C80D58 MOV X1, X31
	0x03C80D5C BL 0x3C69940
	0x03C80D60 CBZ X0, 0x3C80E88
	0x03C80D64 LDR W8, [X0 + 0x10]
	0x03C80D68 CMP W21, W8
	0x03C80D6C B.GE 0x3C80DB4
	0x03C80D70 MOV X0, X19
	0x03C80D74 MOV W1, W21
	0x03C80D78 BL 0x3C80A0C
	0x03C80D7C MOV W1, W0
	0x03C80D80 B 0x3C80DCC
	0x03C80D84 MOV X0, X19
	0x03C80D88 MOV W1, W21
	0x03C80D8C MOV W2, W31
	0x03C80D90 BL 0x3C80E8C
	0x03C80D94 MOV W1, W0
	0x03C80D98 MOV X0, X19
	0x03C80D9C BL 0x3C7E6FC
	0x03C80DA0 LDR W1, [X19 + 0x70]
	0x03C80DA4 MOVZ W2, 0x1
	0x03C80DA8 MOV X0, X19
	0x03C80DAC BL 0x3C80E8C
	0x03C80DB0 B 0x3C80E68
	0x03C80DB4 LDR X0, [X19 + 0x38]
	0x03C80DB8 CBZ X0, 0x3C80E88
	0x03C80DBC MOV X1, X31
	0x03C80DC0 BL 0x3C69940
	0x03C80DC4 CBZ X0, 0x3C80E88
	0x03C80DC8 LDR W1, [X0 + 0x10]
	0x03C80DCC MOV X0, X19
	0x03C80DD0 BL 0x3C7E6FC
	0x03C80DD4 LDR X0, [X19 + 0x38]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W1, [X0+80]
	006 Move W8, [X0+84]
	007 Move X19, X0
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Move X0, X19
	010 Call TextEditor.FindStartOfNextWord, X0, X1
	011 Move X8, [X19+56]
	012 Compare X8, 0
	013 JumpIfEqual {48}
	014 Move W21, [X19+80]
	015 Move W20, W0
	016 Move X0, X8
	017 Move X1, X31
	018 Call GUIContent.get_text, X0
	019 Compare X0, 0
	020 JumpIfEqual {48}
	021 Move W8, [X0+16]
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move X21, [X19+56]
	024 Compare X21, 0
	025 JumpIfEqual {48}
	026 Move X0, X21
	027 Move X1, X31
	028 Call GUIContent.get_text, X0
	029 Compare X0, 0
	030 JumpIfEqual {48}
	031 Move W1, [X19+80]
	032 Move X3, X31
	033 Subtract W2, W20, W1
	034 Call String.Remove, X0, X1, X2
	035 Move X1, X0
	036 Move X0, X21
	037 Move X2, X31
	038 Call GUIContent.set_text, X0, X1
	039 Move X0, X19
	040 Call TextEditor.DeleteSelection, X0
	041 Move W0, 1
	042 Move W0, W31
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move X30, [X31+32]
	046 Move X21, [X31+40]
	047 Return X0
	048 Call 0x1C17F20

Method: System.Boolean Delete()

Disassembly:
	0x03C80FA4 LDP X22, X21, [X31 + 0x10]
	0x03C80FA8 LDR X30, [X31], #0x30
	0x03C80FAC B 0x3C80060
	0x03C80FB0 MOV W20, W31
	0x03C80FB4 MOV W0, W20
	0x03C80FB8 LDP X20, X19, [X31 + 0x20]
	0x03C80FBC LDP X22, X21, [X31 + 0x10]
	0x03C80FC0 LDR X30, [X31], #0x30
	0x03C80FC4 RET
	0x03C80FC8 MOV X0, X19
	0x03C80FCC MOV W1, W31
	0x03C80FD0 BL 0x3C81288
	0x03C80FD4 CMP W0, W22
	0x03C80FD8 B.EQ 0x3C80FB4
	0x03C80FDC MOV X0, X19
	0x03C80FE0 MOV W1, W31
	0x03C80FE4 B 0x3C80FA0
	0x03C80FE8 LDR X0, [X19 + 0x38]
	0x03C80FEC CBZ X0, 0x3C81004
	0x03C80FF0 MOV X1, X31
	0x03C80FF4 BL 0x3C69940
	0x03C80FF8 CBZ X0, 0x3C81004
	0x03C80FFC LDR W20, [X0 + 0x10]
	0x03C81000 B 0x3C80FB4
	0x03C81004 BL 0x1C16F20
	0x03C81008 STR X30, [X31 - 0x20]!
	0x03C8100C STP X20, X19, [X31 + 0x10]
	0x03C81010 LDRB W8, [X0 + 0x75]
	0x03C81014 MOV X19, X0
	0x03C81018 CBZ W8, 0x3C8103C
	0x03C8101C LDP W20, W1, [X19 + 0x50]
	0x03C81020 CMP W20, W1
	0x03C81024 B.LE 0x3C8103C
	0x03C81028 MOV X0, X19
	0x03C8102C BL 0x3C7E6FC
	0x03C81030 MOV X0, X19
	0x03C81034 MOV W1, W20
	0x03C81038 BL 0x3C7E75C
	0x03C8103C LDR W1, [X19 + 0x50]
	0x03C81040 MOV X0, X19
	0x03C81044 STRB W31, [X19 + 0x75]
	0x03C81048 BL 0x3C80200
	0x03C8104C MOV W1, W0
	0x03C81050 MOV X0, X19
	0x03C81054 LDP X20, X19, [X31 + 0x10]
	0x03C81058 LDR X30, [X31], #0x20
	0x03C8105C B 0x3C7E6FC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move W20, [X0+80]
	007 Move W8, [X0+84]
	008 Move X19, X0
	009 NotImplemented "Instruction CMP not yet implemented."
	010 Move X0, [X19+56]
	011 Compare X0, 0
	012 JumpIfEqual {52}
	013 Move X1, X31
	014 Call GUIContent.get_text, X0
	015 Compare X0, 0
	016 JumpIfEqual {52}
	017 Move W8, [X0+16]
	018 NotImplemented "Instruction CMP not yet implemented."
	019 Move X20, [X19+56]
	020 Compare X20, 0
	021 JumpIfEqual {52}
	022 Move X0, X20
	023 Move X1, X31
	024 Call GUIContent.get_text, X0
	025 Move W21, [X19+80]
	026 Move X22, X0
	027 Move X0, X19
	028 Move W1, W21
	029 Call TextEditor.NextCodePointIndex, X0, X1
	030 Compare X22, 0
	031 JumpIfEqual {52}
	032 Move W8, [X19+80]
	033 Move W1, W21
	034 Move X3, X31
	035 Subtract W2, W0, W8
	036 Move X0, X22
	037 Call String.Remove, X0, X1, X2
	038 Move X1, X0
	039 Move X0, X20
	040 Move X2, X31
	041 Call GUIContent.set_text, X0, X1
	042 Move X0, X19
	043 Call TextEditor.DeleteSelection, X0
	044 Move W0, 1
	045 Move W0, W31
	046 Move X20, [X31+32]
	047 Move X19, [X31+40]
	048 Move X22, [X31+16]
	049 Move X21, [X31+24]
	050 Move X30, [X31+48]
	051 Return X0
	052 Call 0x1C17F20

Method: System.Boolean Backspace()

Disassembly:
	0x03C8114C FADD S0, S0, S1
	0x03C81150 FADD S0, S8, S0
	0x03C81154 STR S0, [X19 + 0x60]
	0x03C81158 LDP X9, X1, [X8 + 0x178]
	0x03C8115C LDR X20, [X19 + 0x20]
	0x03C81160 MOV X0, X19
	0x03C81164 BLR X9
	0x03C81168 CBZ X20, 0x3C81198
	0x03C8116C LDP S4, S5, [X19 + 0x5C]
	0x03C81170 LDR X1, [X19 + 0x38]
	0x03C81174 MOV X0, X20
	0x03C81178 MOV X2, X31
	0x03C8117C BL 0x3C7502C
	0x03C81180 MOV W1, W0
	0x03C81184 MOV X0, X19
	0x03C81188 LDP X20, X19, [X31 + 0x10]
	0x03C8118C LDR X30, [X31 + 0x8]
	0x03C81190 LDR V8, [X31], #0x20
	0x03C81194 B 0x3C7E6FC
	0x03C81198 BL 0x1C16F20
	0x03C8119C STP X30, X19, [X31 - 0x10]!
	0x03C811A0 MOV X19, X0
	0x03C811A4 LDR X0, [X0 + 0x38]
	0x03C811A8 CBZ X0, 0x3C811C8
	0x03C811AC MOV X1, X31
	0x03C811B0 BL 0x3C69940
	0x03C811B4 CBZ X0, 0x3C811C8
	0x03C811B8 LDR W1, [X0 + 0x10]
	0x03C811BC MOV X0, X19
	0x03C811C0 LDP X30, X19, [X31], #0x10
	0x03C811C4 B 0x3C7E6FC
	0x03C811C8 BL 0x1C16F20
	0x03C811CC MOV W1, W31
	0x03C811D0 B 0x3C7E6FC
	0x03C811D4 LDR W8, [X0 + 0x50]
	0x03C811D8 AND W9, W1, 0x1
	0x03C811DC STRB W9, [X0 + 0x6C]
	0x03C811E0 STR W8, [X0 + 0x70]
	0x03C811E4 RET
	0x03C811E8 STRB W1, [X0 + 0x74]
	0x03C811EC RET
	0x03C811F0 STP X30, X21, [X31 - 0x20]!
	0x03C811F4 STP X20, X19, [X31 + 0x10]
	0x03C811F8 MOV X19, X0
	0x03C811FC LDR X0, [X0 + 0x38]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W1, [X0+80]
	006 Move W8, [X0+84]
	007 Move X19, X0
	008 NotImplemented "Instruction CMP not yet implemented."
	009 NotImplemented "Instruction CMP not yet implemented."
	010 Move X0, X19
	011 Call TextEditor.PreviousCodePointIndex, X0, X1
	012 Move X21, [X19+56]
	013 Compare X21, 0
	014 JumpIfEqual {50}
	015 Move W20, W0
	016 Move X0, X21
	017 Move X1, X31
	018 Call GUIContent.get_text, X0
	019 Compare X0, 0
	020 JumpIfEqual {50}
	021 Move W8, [X19+80]
	022 Move W1, W20
	023 Move X3, X31
	024 Subtract W2, W8, W20
	025 Call String.Remove, X0, X1, X2
	026 Move X1, X0
	027 Move X0, X21
	028 Move X2, X31
	029 Call GUIContent.set_text, X0, X1
	030 Move X0, X19
	031 Move W1, W20
	032 Call TextEditor.set_cursorIndex, X0, X1
	033 Move X0, X19
	034 Move W1, W20
	035 Call TextEditor.set_selectIndex, X0, X1
	036 Move TEMP, 0
	037 Not TEMP
	038 Move W8, TEMP
	039 Move [X19+41], W31
	040 Move [X19+120], W8
	041 Move X0, X19
	042 Call TextEditor.DeleteSelection, X0
	043 Move W0, 1
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X30, [X31+32]
	047 Move X21, [X31+40]
	048 Return X0
	049 Move W0, W31
	050 Call 0x1C17F20

Method: System.Void SelectAll()

Disassembly:
	0x03C7F8F4 LDP X20, X19, [X31 + 0x40]
	0x03C7F8F8 LDP X22, X21, [X31 + 0x30]
	0x03C7F8FC LDR X30, [X31 + 0x20]
	0x03C7F900 ADD X31, X31, 0x50
	0x03C7F904 B 0x3C81EDC
	0x03C7F908 MOV X0, X19
	0x03C7F90C BL 0x3C7E8F4
	0x03C7F910 B 0x3C7F808
	0x03C7F914 LDR W1, [X19 + 0x50]
	0x03C7F918 MOV X0, X19
	0x03C7F91C BL 0x3C7E75C
	0x03C7F920 MOVN W8, 0x0
	0x03C7F924 STRB W31, [X19 + 0x29]
	0x03C7F928 STR W8, [X19 + 0x78]
	0x03C7F92C B 0x3C7F808
	0x03C7F930 STP X30, X21, [X31 - 0x20]!
	0x03C7F934 STP X20, X19, [X31 + 0x10]
	0x03C7F938 LDP W21, W8, [X0 + 0x50]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W1, W31
	004 Move X19, X0
	005 Call TextEditor.set_cursorIndex, X0, X1
	006 Move X0, [X19+56]
	007 Compare X0, 0
	008 JumpIfEqual {24}
	009 Move X1, X31
	010 Call GUIContent.get_text, X0
	011 Compare X0, 0
	012 JumpIfEqual {24}
	013 Move W1, [X0+16]
	014 Move X0, X19
	015 Call TextEditor.set_selectIndex, X0, X1
	016 Move TEMP, 0
	017 Not TEMP
	018 Move W8, TEMP
	019 Move [X19+41], W31
	020 Move [X19+120], W8
	021 Move X30, [X31+16]
	022 Move X19, [X31+24]
	023 Return 
	024 Call 0x1C17F20

Method: System.Void SelectNone()

Disassembly:
	0x03C812C0 CBZ X0, 0x3C8138C
	0x03C812C4 ADRP X22, 0x474000
	0x03C812C8 LDR X22, [X22 + 0x170]
	0x03C812CC MOV X1, X31
	0x03C812D0 BL 0x3C69940
	0x03C812D4 LDR X8, [X22]
	0x03C812D8 MOV X21, X0
	0x03C812DC LDR W9, [X8 + 0xE0]
	0x03C812E0 CBNZ W9, 0x3C812EC

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W1, [X0+80]
	004 Move X19, X0
	005 Call TextEditor.set_selectIndex, X0, X1
	006 Move TEMP, 0
	007 Not TEMP
	008 Move W8, TEMP
	009 Move [X19+41], W31
	010 Move [X19+120], W8
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 Return 

Method: System.Boolean get_hasSelection()

Disassembly:
	0x03C80A08 BL 0x1C16F20
	0x03C80A0C STR X30, [X31 - 0x20]!
	0x03C80A10 STP X20, X19, [X31 + 0x10]
	0x03C80A14 MOV X19, X0

ISIL:
	001 Move W8, [X0+80]
	002 Move W9, [X0+84]
	003 NotImplemented "Instruction CMP not yet implemented."
	004 NotImplemented "Instruction CSET not yet implemented."
	005 Return X0

Method: System.Boolean DeleteSelection()

Disassembly:
	0x03C80A18 LDR X0, [X0 + 0x38]
	0x03C80A1C CBZ X0, 0x3C80A6C
	0x03C80A20 MOV W20, W1
	0x03C80A24 MOV X1, X31
	0x03C80A28 BL 0x3C69940
	0x03C80A2C CBZ X0, 0x3C80A6C
	0x03C80A30 MOVZ W1, 0xA
	0x03C80A34 MOV W2, W20
	0x03C80A38 MOV X3, X31
	0x03C80A3C BL 0x322BDA8
	0x03C80A40 ADDS W31, W0, 0x1
	0x03C80A44 B.NE 0x3C80A60
	0x03C80A48 LDR X0, [X19 + 0x38]
	0x03C80A4C CBZ X0, 0x3C80A6C
	0x03C80A50 MOV X1, X31
	0x03C80A54 BL 0x3C69940
	0x03C80A58 CBZ X0, 0x3C80A6C
	0x03C80A5C LDR W0, [X0 + 0x10]
	0x03C80A60 LDP X20, X19, [X31 + 0x10]
	0x03C80A64 LDR X30, [X31], #0x20
	0x03C80A68 RET
	0x03C80A6C BL 0x1C16F20
	0x03C80A70 STR X30, [X31 - 0x20]!
	0x03C80A74 STP X20, X19, [X31 + 0x10]
	0x03C80A78 LDP W8, W9, [X0 + 0x50]
	0x03C80A7C MOV X19, X0
	0x03C80A80 CMP W8, W9
	0x03C80A84 CSEL W1, W8, W9, GT
	0x03C80A88 BL 0x3C7E6FC
	0x03C80A8C LDR X0, [X19 + 0x38]
	0x03C80A90 CBZ X0, 0x3C80AF0
	0x03C80A94 LDR W20, [X19 + 0x50]
	0x03C80A98 MOV X1, X31
	0x03C80A9C BL 0x3C69940
	0x03C80AA0 CBZ X0, 0x3C80AF0
	0x03C80AA4 LDR W8, [X0 + 0x10]
	0x03C80AA8 CMP W20, W8
	0x03C80AAC B.GE 0x3C80AE4
	0x03C80AB0 LDR W8, [X19 + 0x50]
	0x03C80AB4 MOV X0, X19
	0x03C80AB8 ADD W1, W8, 0x1
	0x03C80ABC BL 0x3C80A0C
	0x03C80AC0 MOV W20, W0
	0x03C80AC4 MOV X0, X19
	0x03C80AC8 MOV W1, W20
	0x03C80ACC BL 0x3C7E6FC
	0x03C80AD0 MOV X0, X19
	0x03C80AD4 MOV W1, W20
	0x03C80AD8 LDP X20, X19, [X31 + 0x10]
	0x03C80ADC LDR X30, [X31], #0x20
	0x03C80AE0 B 0x3C7E75C
	0x03C80AE4 LDP X20, X19, [X31 + 0x10]
	0x03C80AE8 LDR X30, [X31], #0x20
	0x03C80AEC RET
	0x03C80AF0 BL 0x1C16F20
	0x03C80AF4 STR X30, [X31 - 0x20]!
	0x03C80AF8 STP X20, X19, [X31 + 0x10]
	0x03C80AFC LDP W8, W9, [X0 + 0x50]
	0x03C80B00 MOV X19, X0
	0x03C80B04 CMP W8, W9
	0x03C80B08 CSEL W1, W8, W9, LT
	0x03C80B0C BL 0x3C7E6FC
	0x03C80B10 LDR W8, [X19 + 0x50]
	0x03C80B14 CMP W8, 0x2
	0x03C80B18 B.LT 0x3C80B4C
	0x03C80B1C LDR X0, [X19 + 0x38]
	0x03C80B20 CBZ X0, 0x3C80B70
	0x03C80B24 MOV X1, X31
	0x03C80B28 BL 0x3C69940
	0x03C80B2C CBZ X0, 0x3C80B70
	0x03C80B30 LDR W8, [X19 + 0x50]
	0x03C80B34 MOVZ W1, 0xA
	0x03C80B38 MOV X3, X31
	0x03C80B3C SUB W2, W8, 0x2
	0x03C80B40 BL 0x322C678
	0x03C80B44 ADD W20, W0, 0x1
	0x03C80B48 B 0x3C80B50
	0x03C80B4C MOV W20, W31
	0x03C80B50 MOV X0, X19
	0x03C80B54 MOV W1, W20
	0x03C80B58 BL 0x3C7E6FC
	0x03C80B5C MOV X0, X19
	0x03C80B60 MOV W1, W20
	0x03C80B64 LDP X20, X19, [X31 + 0x10]
	0x03C80B68 LDR X30, [X31], #0x20
	0x03C80B6C B 0x3C7E75C
	0x03C80B70 BL 0x1C16F20
	0x03C80B74 STP D9, D8, [X31 - 0x20]!
	0x03C80B78 STP X30, X19, [X31 + 0x10]
	0x03C80B7C MOV X19, X0
	0x03C80B80 MOV X0, X31
	0x03C80B84 MOV V8.16B, V1.16B
	0x03C80B88 MOV V9.16B, V0.16B
	0x03C80B8C BL 0x3C63934
	0x03C80B90 CBZ X0, 0x3C80BB8
	0x03C80B94 MOV X1, X31
	0x03C80B98 BL 0x3C63824
	0x03C80B9C AND W1, W0, 0x1
	0x03C80BA0 MOV X0, X19
	0x03C80BA4 LDP X30, X19, [X31 + 0x10]
	0x03C80BA8 MOV V0.16B, V9.16B
	0x03C80BAC MOV V1.16B, V8.16B
	0x03C80BB0 LDP D9, D8, [X31], #0x20

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move W24, [X0+80]
	010 Move W25, [X0+84]
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Move X20, [X0+56]
	013 Move X19, X0
	014 Compare X20, 0
	015 JumpIfEqual {122}
	016 Move X0, X20
	017 Move X1, X31
	018 Call GUIContent.get_text, X0
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Compare X0, 0
	021 JumpIfEqual {122}
	022 Move W2, [X19+80]
	023 Move W1, W31
	024 Move X3, X31
	025 Call String.Substring, X0, X1, X2
	026 Move X8, [X19+56]
	027 Compare X8, 0
	028 JumpIfEqual {122}
	029 Move X21, X0
	030 Move X0, X8
	031 Move X1, X31
	032 Call GUIContent.get_text, X0
	033 Move X8, [X19+56]
	034 Compare X8, 0
	035 JumpIfEqual {122}
	036 Move W23, [X19+84]
	037 Move X22, X0
	038 Move X0, X8
	039 Move X1, X31
	040 Call GUIContent.get_text, X0
	041 Compare X0, 0
	042 JumpIfEqual {122}
	043 Compare X22, 0
	044 JumpIfEqual {122}
	045 Move W8, [X19+84]
	046 Move W9, [X0+16]
	047 Move X0, X22
	048 Move W1, W23
	049 Move X3, X31
	050 Subtract W2, W9, W8
	051 Call String.Substring, X0, X1, X2
	052 Move X1, X0
	053 Move X0, X21
	054 Move X2, X31
	055 Call String.Concat, X0, X1
	056 Move X1, X0
	057 Move X0, X20
	058 Move X2, X31
	059 Call GUIContent.set_text, X0, X1
	060 Move W1, [X19+80]
	061 Move X0, X19
	062 Call TextEditor.set_selectIndex, X0, X1
	063 Compare X0, 0
	064 JumpIfEqual {122}
	065 Move W2, [X19+84]
	066 Move W1, W31
	067 Move X3, X31
	068 Call String.Substring, X0, X1, X2
	069 Move X8, [X19+56]
	070 Compare X8, 0
	071 JumpIfEqual {122}
	072 Move X21, X0
	073 Move X0, X8
	074 Move X1, X31
	075 Call GUIContent.get_text, X0
	076 Move X8, [X19+56]
	077 Compare X8, 0
	078 JumpIfEqual {122}
	079 Move W23, [X19+80]
	080 Move X22, X0
	081 Move X0, X8
	082 Move X1, X31
	083 Call GUIContent.get_text, X0
	084 Compare X0, 0
	085 JumpIfEqual {122}
	086 Compare X22, 0
	087 JumpIfEqual {122}
	088 Move W8, [X19+80]
	089 Move W9, [X0+16]
	090 Move X0, X22
	091 Move W1, W23
	092 Move X3, X31
	093 Subtract W2, W9, W8
	094 Call String.Substring, X0, X1, X2
	095 Move X1, X0
	096 Move X0, X21
	097 Move X2, X31
	098 Call String.Concat, X0, X1
	099 Move X1, X0
	100 Move X0, X20
	101 Move X2, X31
	102 Call GUIContent.set_text, X0, X1
	103 Move W1, [X19+84]
	104 Move X0, X19
	105 Call TextEditor.set_cursorIndex, X0, X1
	106 Move TEMP, 0
	107 Not TEMP
	108 Move W8, TEMP
	109 Move [X19+41], W31
	110 Move [X19+120], W8
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Move X20, [X31+48]
	113 Move X19, [X31+56]
	114 Move X22, [X31+32]
	115 Move X21, [X31+40]
	116 Move X24, [X31+16]
	117 Move X23, [X31+24]
	118 NotImplemented "Instruction CSET not yet implemented."
	119 Move X30, [X31+64]
	120 Move X25, [X31+72]
	121 Return X0
	122 Call 0x1C17F20

Method: System.Void ReplaceSelection(System.String replace)

Disassembly:
	0x03C812E4 MOV X0, X8
	0x03C812E8 BL 0x1C16DFC
	0x03C812EC MOV X0, X21
	0x03C812F0 MOV W1, W19
	0x03C812F4 MOV X2, X31
	0x03C812F8 BL 0x331BCB0
	0x03C812FC TBZ X0, 0x0, 0x3C81308
	0x03C81300 MOVZ W0, 0x3
	0x03C81304 B 0x3C8137C
	0x03C81308 LDR X0, [X20 + 0x38]
	0x03C8130C CBZ X0, 0x3C8138C
	0x03C81310 MOV X1, X31
	0x03C81314 BL 0x3C69940
	0x03C81318 LDR X8, [X22]
	0x03C8131C MOV X21, X0
	0x03C81320 LDR W9, [X8 + 0xE0]
	0x03C81324 CBNZ W9, 0x3C81330
	0x03C81328 MOV X0, X8
	0x03C8132C BL 0x1C16DFC
	0x03C81330 MOV X0, X21
	0x03C81334 MOV W1, W19
	0x03C81338 MOV X2, X31
	0x03C8133C BL 0x331B6F0
	0x03C81340 TBNZ X0, 0x0, 0x3C81370
	0x03C81344 LDR X0, [X20 + 0x38]
	0x03C81348 CBZ X0, 0x3C8138C
	0x03C8134C MOV X1, X31
	0x03C81350 BL 0x3C69940
	0x03C81354 CBZ X0, 0x3C8138C
	0x03C81358 MOV W1, W19
	0x03C8135C MOV X2, X31
	0x03C81360 BL 0x3222A1C
	0x03C81364 AND W8, W0, 0xFFFF
	0x03C81368 CMP W8, 0x27
	0x03C8136C B.NE 0x3C81378
	0x03C81370 MOV W0, W31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, X1
	006 Move X19, X0
	007 Call TextEditor.DeleteSelection, X0
	008 Move X21, [X19+56]
	009 Compare X21, 0
	010 JumpIfEqual {45}
	011 Move X0, X21
	012 Move X1, X31
	013 Call GUIContent.get_text, X0
	014 Compare X0, 0
	015 JumpIfEqual {45}
	016 Move W1, [X19+80]
	017 Move X2, X20
	018 Move X3, X31
	019 Call String.Insert, X0, X1, X2
	020 Move X1, X0
	021 Move X0, X21
	022 Move X2, X31
	023 Call GUIContent.set_text, X0, X1
	024 Compare X20, 0
	025 JumpIfEqual {45}
	026 Move W8, [X19+80]
	027 Move W9, [X20+16]
	028 Move X0, X19
	029 Add W20, W9, W8
	030 Move W1, W20
	031 Call TextEditor.set_cursorIndex, X0, X1
	032 Move X0, X19
	033 Move W1, W20
	034 Call TextEditor.set_selectIndex, X0, X1
	035 Move TEMP, 0
	036 Not TEMP
	037 Move W8, TEMP
	038 Move [X19+41], W31
	039 Move [X19+120], W8
	040 Move X20, [X31+16]
	041 Move X19, [X31+24]
	042 Move X30, [X31+32]
	043 Move X21, [X31+40]
	044 Return 
	045 Call 0x1C17F20

Method: System.Void Insert(System.Char c)

Disassembly:
	0x03C81374 B 0x3C8137C
	0x03C81378 MOVZ W0, 0x1
	0x03C8137C LDP X20, X19, [X31 + 0x20]
	0x03C81380 LDP X22, X21, [X31 + 0x10]
	0x03C81384 LDR X30, [X31], #0x30
	0x03C81388 RET
	0x03C8138C BL 0x1C16F20
	0x03C81390 STR X30, [X31 - 0x20]!
	0x03C81394 STP X20, X19, [X31 + 0x10]
	0x03C81398 MOV X19, X0
	0x03C8139C BL 0x3C80200
	0x03C813A0 MOV W20, W0
	0x03C813A4 CMP W0, 0x1
	0x03C813A8 B.LT 0x3C813F4
	0x03C813AC MOV X0, X19
	0x03C813B0 MOV W1, W20
	0x03C813B4 BL 0x3C81288
	0x03C813B8 CBZ W0, 0x3C813E0
	0x03C813BC MOV X0, X19
	0x03C813C0 MOV W1, W20
	0x03C813C4 B 0x3C8139C
	0x03C813C8 MOV X0, X19
	0x03C813CC MOV W1, W20
	0x03C813D0 BL 0x3C80200
	0x03C813D4 MOV W20, W0
	0x03C813D8 CMP W0, 0x1
	0x03C813DC B.LT 0x3C813F8
	0x03C813E0 MOV X0, X19
	0x03C813E4 MOV W1, W20

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x766000
	007 NotImplemented "Instruction STRH not yet implemented."
	008 Move X21, 0x475000
	009 Move W8, [X20+2487]
	010 Move X21, [X21+368]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x475000
	017 Move X0, [X0+368]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+2487], W8
	021 Move X0, [X21]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X31, 12
	027 Move X1, X31
	028 Call Char.ToString, X0
	029 Move X1, X0
	030 Move X0, X19
	031 Call TextEditor.ReplaceSelection, X0, X1
	032 Move X20, [X31+32]
	033 Move X19, [X31+40]
	034 Move X30, [X31+16]
	035 Move X21, [X31+24]
	036 Add X31, X31, 48
	037 Return 

Method: System.Void MoveRight()

Disassembly:
	0x03C813E8 BL 0x3C81288
	0x03C813EC CBZ W0, 0x3C813C8
	0x03C813F0 B 0x3C813F8
	0x03C813F4 CBZ W20, 0x3C8141C
	0x03C813F8 MOV X0, X19
	0x03C813FC MOV W1, W20
	0x03C81400 BL 0x3C81288
	0x03C81404 CBZ W0, 0x3C8141C
	0x03C81408 MOV X0, X19
	0x03C8140C MOV W1, W20
	0x03C81410 LDP X20, X19, [X31 + 0x10]
	0x03C81414 LDR X30, [X31], #0x20
	0x03C81418 B 0x3C80060
	0x03C8141C MOV W0, W20
	0x03C81420 LDP X20, X19, [X31 + 0x10]
	0x03C81424 LDR X30, [X31], #0x20
	0x03C81428 RET
	0x03C8142C STR X30, [X31 - 0x20]!
	0x03C81430 STP X20, X19, [X31 + 0x10]
	0x03C81434 LDP W8, W9, [X0 + 0x50]
	0x03C81438 MOV X19, X0
	0x03C8143C CMP W8, W9
	0x03C81440 CSEL W1, W8, W9, GT
	0x03C81444 BL 0x3C7E6FC
	0x03C81448 LDR W1, [X19 + 0x50]
	0x03C8144C MOV X0, X19
	0x03C81450 BL 0x3C811F0

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W8, [X0+80]
	004 Move W1, [X0+84]
	005 Move X19, X0
	006 Move TEMP, 0
	007 Not TEMP
	008 Move W9, TEMP
	009 Move [X0+41], W31
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Move [X0+120], W9
	012 Move X0, X19
	013 Call TextEditor.NextCodePointIndex, X0, X1
	014 Move W1, W0
	015 Move X0, X19
	016 Call TextEditor.set_cursorIndex, X0, X1
	017 Move X8, [X19]
	018 Move X0, X19
	019 Move X9, [X8+392]
	020 Move X1, [X8+400]
	021 NotImplemented "Instruction BLR not yet implemented."
	022 Move W1, [X19+80]
	023 Move X0, X19
	024 Move X0, X19
	025 Move X30, [X31+16]
	026 Move X19, [X31+24]
	027 Call TextEditor.set_cursorIndex, X0, X1
	028 Return 
	029 Move W1, W8
	030 Move X30, [X31+16]
	031 Move X19, [X31+24]
	032 Call TextEditor.set_selectIndex, X0, X1
	033 Return 

Method: System.Void MoveLeft()

Disassembly:
	0x03C81460 BL 0x3C7E75C
	0x03C81464 MOV X0, X19
	0x03C81468 MOV W1, W20
	0x03C8146C BL 0x3C7E6FC
	0x03C81470 MOVN W8, 0x0
	0x03C81474 STRB W31, [X19 + 0x29]
	0x03C81478 STR W8, [X19 + 0x78]
	0x03C8147C LDP X20, X19, [X31 + 0x10]
	0x03C81480 LDR X30, [X31], #0x20
	0x03C81484 RET
	0x03C81488 STR X30, [X31 - 0x20]!
	0x03C8148C STP X20, X19, [X31 + 0x10]
	0x03C81490 LDP W1, W8, [X0 + 0x50]
	0x03C81494 MOV X19, X0
	0x03C81498 MOVN W9, 0x0
	0x03C8149C STRB W31, [X0 + 0x29]
	0x03C814A0 CMP W1, W8
	0x03C814A4 STR W9, [X0 + 0x78]
	0x03C814A8 B.NE 0x3C814D8
	0x03C814AC MOV X0, X19
	0x03C814B0 BL 0x3C7FDD8
	0x03C814B4 MOV W20, W0

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W8, [X0+80]
	004 Move W1, [X0+84]
	005 Move X19, X0
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Call TextEditor.PreviousCodePointIndex, X0, X1
	008 Move W1, W0
	009 Move X0, X19
	010 Call TextEditor.set_cursorIndex, X0, X1
	011 Move W1, [X19+80]
	012 Move X0, X19
	013 Move W1, W8
	014 Call TextEditor.set_selectIndex, X0, X1
	015 Call TextEditor.set_cursorIndex, X0, X1
	016 Move TEMP, 0
	017 Not TEMP
	018 Move W8, TEMP
	019 Move [X19+41], W31
	020 Move [X19+120], W8
	021 Move X30, [X31+16]
	022 Move X19, [X31+24]
	023 Return 

Method: System.Void MoveUp()

Disassembly:
	0x03C814B8 MOV X0, X19
	0x03C814BC MOV W1, W20
	0x03C814C0 BL 0x3C7E75C
	0x03C814C4 MOV X0, X19
	0x03C814C8 MOV W1, W20
	0x03C814CC LDP X20, X19, [X31 + 0x10]
	0x03C814D0 LDR X30, [X31], #0x20
	0x03C814D4 B 0x3C7E6FC
	0x03C814D8 MOV X0, X19
	0x03C814DC LDP X20, X19, [X31 + 0x10]
	0x03C814E0 LDR X30, [X31], #0x20
	0x03C814E4 B 0x3C803E8
	0x03C814E8 STR X30, [X31 - 0x20]!
	0x03C814EC STP X20, X19, [X31 + 0x10]
	0x03C814F0 LDP W1, W8, [X0 + 0x50]
	0x03C814F4 MOV X19, X0
	0x03C814F8 MOVN W9, 0x0
	0x03C814FC STRB W31, [X0 + 0x29]
	0x03C81500 CMP W1, W8
	0x03C81504 STR W9, [X0 + 0x78]
	0x03C81508 B.NE 0x3C81538
	0x03C8150C MOV X0, X19
	0x03C81510 BL 0x3C7FC60
	0x03C81514 MOV W20, W0
	0x03C81518 MOV X0, X19
	0x03C8151C MOV W1, W20
	0x03C81520 BL 0x3C7E75C
	0x03C81524 MOV X0, X19
	0x03C81528 MOV W1, W20
	0x03C8152C LDP X20, X19, [X31 + 0x10]
	0x03C81530 LDR X30, [X31], #0x20
	0x03C81534 B 0x3C7E6FC
	0x03C81538 MOV X0, X19
	0x03C8153C LDP X20, X19, [X31 + 0x10]
	0x03C81540 LDR X30, [X31], #0x20
	0x03C81544 B 0x3C80460
	0x03C81548 STP X30, X19, [X31 - 0x10]!
	0x03C8154C LDR W1, [X0 + 0x50]
	0x03C81550 MOVN W8, 0x0
	0x03C81554 MOV X19, X0
	0x03C81558 STRB W31, [X0 + 0x29]
	0x03C8155C STR W8, [X0 + 0x78]
	0x03C81560 BL 0x3C7FDD8
	0x03C81564 MOV W1, W0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W8, [X0+80]
	005 Move W1, [X0+84]
	006 Move X19, X0
	007 NotImplemented "Instruction CMP not yet implemented."
	008 Move W1, W8
	009 Call TextEditor.set_selectIndex, X0, X1
	010 Call TextEditor.set_cursorIndex, X0, X1
	011 Move X0, X19
	012 Call TextEditor.GrabGraphicalCursorPos, X0
	013 Move V0, [X19+96]
	014 Move X8, [X19]
	015 Move S1, -1
	016 Move X20, [X19+32]
	017 Add S0, S0, S1
	018 Move [X19+96], S0
	019 Move X9, [X8+376]
	020 Move X1, [X8+384]
	021 Move X0, X19
	022 NotImplemented "Instruction BLR not yet implemented."
	023 Compare X20, 0
	024 JumpIfEqual {49}
	025 Move S4, [X19+92]
	026 Move S5, [X19+96]
	027 Move X1, [X19+56]
	028 Move X0, X20
	029 Move X2, X31
	030 Call GUIStyle.GetCursorStringIndex, X0, X1, X2, X3
	031 Move W20, W0
	032 Move X0, X19
	033 Move W1, W20
	034 Call TextEditor.set_selectIndex, X0, X1
	035 Move X0, X19
	036 Move W1, W20
	037 Call TextEditor.set_cursorIndex, X0, X1
	038 Move W8, [X19+80]
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move TEMP, 0
	041 Not TEMP
	042 Move W8, TEMP
	043 Move [X19+41], W31
	044 Move [X19+120], W8
	045 Move X20, [X31+16]
	046 Move X19, [X31+24]
	047 Move X30, [X31+32]
	048 Return 
	049 Call 0x1C17F20

Method: System.Void MoveDown()

Disassembly:
	0x03C81568 MOV X0, X19
	0x03C8156C LDP X30, X19, [X31], #0x10
	0x03C81570 B 0x3C7E6FC
	0x03C81574 STP X30, X19, [X31 - 0x10]!
	0x03C81578 LDR W1, [X0 + 0x50]
	0x03C8157C MOVN W8, 0x0
	0x03C81580 MOV X19, X0
	0x03C81584 STRB W31, [X0 + 0x29]
	0x03C81588 STR W8, [X0 + 0x78]
	0x03C8158C BL 0x3C7FC60
	0x03C81590 MOV W1, W0
	0x03C81594 MOV X0, X19
	0x03C81598 LDP X30, X19, [X31], #0x10
	0x03C8159C B 0x3C7E6FC
	0x03C815A0 STP X30, X19, [X31 - 0x10]!
	0x03C815A4 LDP W8, W9, [X0 + 0x50]
	0x03C815A8 MOV X19, X0
	0x03C815AC CMP W8, W9
	0x03C815B0 CSEL W1, W8, W9, LT
	0x03C815B4 BL 0x3C7E6FC
	0x03C815B8 LDR W1, [X19 + 0x50]
	0x03C815BC MOV X0, X19
	0x03C815C0 BL 0x3C81390
	0x03C815C4 MOV W1, W0
	0x03C815C8 MOV X0, X19
	0x03C815CC BL 0x3C7E6FC
	0x03C815D0 LDR W1, [X19 + 0x50]
	0x03C815D4 MOV X0, X19
	0x03C815D8 LDP X30, X19, [X31], #0x10
	0x03C815DC B 0x3C7E75C
	0x03C815E0 STP X30, X21, [X31 - 0x20]!
	0x03C815E4 STP X20, X19, [X31 + 0x10]
	0x03C815E8 LDP W21, W20, [X0 + 0x50]
	0x03C815EC MOVN W8, 0x0
	0x03C815F0 MOV X19, X0
	0x03C815F4 STRB W31, [X0 + 0x29]
	0x03C815F8 MOV W1, W21
	0x03C815FC STR W8, [X0 + 0x78]
	0x03C81600 BL 0x3C7E75C
	0x03C81604 MOV X0, X19
	0x03C81608 BL 0x3C8142C
	0x03C8160C MOV X0, X19
	0x03C81610 MOV W1, W20
	0x03C81614 BL 0x3C7E75C
	0x03C81618 CMP W21, W20
	0x03C8161C B.GE 0x3C8163C
	0x03C81620 LDP W8, W9, [X19 + 0x50]
	0x03C81624 MOV X0, X19
	0x03C81628 LDP X20, X19, [X31 + 0x10]
	0x03C8162C CMP W8, W9
	0x03C81630 CSEL W1, W8, W9, LT
	0x03C81634 LDP X30, X21, [X31], #0x20
	0x03C81638 B 0x3C7E6FC
	0x03C8163C LDP X20, X19, [X31 + 0x10]
	0x03C81640 LDP X30, X21, [X31], #0x20
	0x03C81644 RET
	0x03C81648 STP X30, X21, [X31 - 0x20]!

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W8, [X0+80]
	006 Move W1, [X0+84]
	007 Move X19, X0
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Move W1, W8
	010 Call TextEditor.set_selectIndex, X0, X1
	011 Call TextEditor.set_cursorIndex, X0, X1
	012 Move X0, X19
	013 Call TextEditor.GrabGraphicalCursorPos, X0
	014 Move X0, [X19+32]
	015 Compare X0, 0
	016 JumpIfEqual {65}
	017 Move V8, [X19+96]
	018 Move X1, X31
	019 Call GUIStyle.get_lineHeight, X0
	020 Move S1, 5
	021 Move X8, [X19]
	022 Add S0, S0, S1
	023 Add S0, S8, S0
	024 Move [X19+96], S0
	025 Move X9, [X8+376]
	026 Move X1, [X8+384]
	027 Move X20, [X19+32]
	028 Move X0, X19
	029 NotImplemented "Instruction BLR not yet implemented."
	030 Compare X20, 0
	031 JumpIfEqual {65}
	032 Move S4, [X19+92]
	033 Move S5, [X19+96]
	034 Move X1, [X19+56]
	035 Move X0, X20
	036 Move X2, X31
	037 Call GUIStyle.GetCursorStringIndex, X0, X1, X2, X3
	038 Move W20, W0
	039 Move X0, X19
	040 Move W1, W20
	041 Call TextEditor.set_selectIndex, X0, X1
	042 Move X0, X19
	043 Move W1, W20
	044 Call TextEditor.set_cursorIndex, X0, X1
	045 Move X0, [X19+56]
	046 Compare X0, 0
	047 JumpIfEqual {65}
	048 Move W20, [X19+80]
	049 Move X1, X31
	050 Call GUIContent.get_text, X0
	051 Compare X0, 0
	052 JumpIfEqual {65}
	053 Move W8, [X0+16]
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move TEMP, 0
	056 Not TEMP
	057 Move W8, TEMP
	058 Move [X19+41], W31
	059 Move [X19+120], W8
	060 Move X20, [X31+16]
	061 Move X19, [X31+24]
	062 Move X30, [X31+8]
	063 Move V8, [X31+32]
	064 Return 
	065 Call 0x1C17F20

Method: System.Void MoveLineStart()

Disassembly:
	0x03C8164C STP X20, X19, [X31 + 0x10]
	0x03C81650 LDP W21, W20, [X0 + 0x50]
	0x03C81654 MOVN W8, 0x0
	0x03C81658 MOV X19, X0
	0x03C8165C STRB W31, [X0 + 0x29]
	0x03C81660 MOV W1, W21
	0x03C81664 STR W8, [X0 + 0x78]
	0x03C81668 BL 0x3C7E75C
	0x03C8166C MOV X0, X19
	0x03C81670 BL 0x3C815A0
	0x03C81674 MOV X0, X19
	0x03C81678 MOV W1, W20
	0x03C8167C BL 0x3C7E75C
	0x03C81680 CMP W21, W20
	0x03C81684 B.LE 0x3C816A4
	0x03C81688 LDP W8, W9, [X19 + 0x50]
	0x03C8168C MOV X0, X19
	0x03C81690 LDP X20, X19, [X31 + 0x10]
	0x03C81694 CMP W8, W9
	0x03C81698 CSEL W1, W8, W9, GT
	0x03C8169C LDP X30, X21, [X31], #0x20
	0x03C816A0 B 0x3C7E6FC
	0x03C816A4 LDP X20, X19, [X31 + 0x10]
	0x03C816A8 LDP X30, X21, [X31], #0x20
	0x03C816AC RET
	0x03C816B0 STR X30, [X31 - 0x20]!
	0x03C816B4 STP X20, X19, [X31 + 0x10]
	0x03C816B8 LDP W20, W1, [X0 + 0x50]
	0x03C816BC MOV X19, X0
	0x03C816C0 MOVN W8, 0x0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W9, [X0+80]
	006 Move W8, [X0+84]
	007 Move X19, X0
	008 NotImplemented "Instruction CMP not yet implemented."
	009 NotImplemented "Instruction CSEL not yet implemented."
	010 Add W21, W8, 1
	011 Subtract W20, W21, 1
	012 Move X0, [X19+56]
	013 Compare X0, 0
	014 JumpIfEqual {36}
	015 Move X1, X31
	016 Call GUIContent.get_text, X0
	017 Compare X0, 0
	018 JumpIfEqual {36}
	019 Subtract W1, W21, 2
	020 Move X2, X31
	021 Call String.get_Chars, X0, X1
	022 And W8, W0, 0xFFFF
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move W21, W20
	025 Move X0, X19
	026 Move W1, W20
	027 Call TextEditor.set_cursorIndex, X0, X1
	028 Move X0, X19
	029 Move W1, W20
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X30, [X31+32]
	033 Move X21, [X31+40]
	034 Call TextEditor.set_selectIndex, X0, X1
	035 Return 
	036 Call 0x1C17F20

Method: System.Void MoveLineEnd()

Disassembly:
	0x03C816C4 STRB W31, [X0 + 0x29]
	0x03C816C8 CMP W20, W1
	0x03C816CC STR W8, [X0 + 0x78]
	0x03C816D0 B.GE 0x3C816F0
	0x03C816D4 MOV W1, W20
	0x03C816D8 BL 0x3C807A0
	0x03C816DC MOV W1, W0
	0x03C816E0 MOV X0, X19
	0x03C816E4 LDP X20, X19, [X31 + 0x10]
	0x03C816E8 LDR X30, [X31], #0x20
	0x03C816EC B 0x3C7E6FC
	0x03C816F0 BL 0x3C807A0
	0x03C816F4 MOV W1, W0
	0x03C816F8 MOV X0, X19
	0x03C816FC BL 0x3C7E6FC
	0x03C81700 MOV X0, X19
	0x03C81704 MOV W1, W20
	0x03C81708 LDP X20, X19, [X31 + 0x10]
	0x03C8170C LDR X30, [X31], #0x20
	0x03C81710 B 0x3C7E75C
	0x03C81714 STR X30, [X31 - 0x20]!
	0x03C81718 STP X20, X19, [X31 + 0x10]
	0x03C8171C LDP W20, W1, [X0 + 0x50]
	0x03C81720 MOV X19, X0
	0x03C81724 MOVN W8, 0x0
	0x03C81728 STRB W31, [X0 + 0x29]
	0x03C8172C CMP W20, W1
	0x03C81730 STR W8, [X0 + 0x78]
	0x03C81734 B.LE 0x3C81754
	0x03C81738 MOV W1, W20
	0x03C8173C BL 0x3C808B8
	0x03C81740 MOV W1, W0
	0x03C81744 MOV X0, X19
	0x03C81748 LDP X20, X19, [X31 + 0x10]
	0x03C8174C LDR X30, [X31], #0x20
	0x03C81750 B 0x3C7E6FC
	0x03C81754 BL 0x3C808B8
	0x03C81758 MOV W1, W0
	0x03C8175C MOV X0, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W9, [X0+80]
	006 Move W8, [X0+84]
	007 Move X19, X0
	008 Move X0, [X0+56]
	009 NotImplemented "Instruction CMP not yet implemented."
	010 NotImplemented "Instruction CSEL not yet implemented."
	011 Compare X0, 0
	012 JumpIfEqual {45}
	013 Move X1, X31
	014 Call GUIContent.get_text, X0
	015 Compare X0, 0
	016 JumpIfEqual {45}
	017 Move W21, [X0+16]
	018 NotImplemented "Instruction CMP not yet implemented."
	019 Move X0, [X19+56]
	020 Compare X0, 0
	021 JumpIfEqual {45}
	022 Move X1, X31
	023 Call GUIContent.get_text, X0
	024 Compare X0, 0
	025 JumpIfEqual {45}
	026 Move W1, W20
	027 Move X2, X31
	028 Call String.get_Chars, X0, X1
	029 And W8, W0, 0xFFFF
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Add W20, W20, 1
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move W21, W20
	034 Move X0, X19
	035 Move W1, W21
	036 Call TextEditor.set_cursorIndex, X0, X1
	037 Move X0, X19
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move W1, W21
	041 Move X30, [X31+32]
	042 Move X21, [X31+40]
	043 Call TextEditor.set_selectIndex, X0, X1
	044 Return 
	045 Call 0x1C17F20

Method: System.Void MoveGraphicalLineStart()

Disassembly:
	0x03C81760 BL 0x3C7E6FC
	0x03C81764 MOV X0, X19
	0x03C81768 MOV W1, W20
	0x03C8176C LDP X20, X19, [X31 + 0x10]
	0x03C81770 LDR X30, [X31], #0x20
	0x03C81774 B 0x3C7E75C
	0x03C81778 STP X30, X19, [X31 - 0x10]!
	0x03C8177C LDR W1, [X0 + 0x50]
	0x03C81780 MOVN W8, 0x0
	0x03C81784 MOV X19, X0
	0x03C81788 STRB W31, [X0 + 0x29]
	0x03C8178C STR W8, [X0 + 0x78]
	0x03C81790 BL 0x3C807A0
	0x03C81794 MOV W1, W0
	0x03C81798 MOV X0, X19
	0x03C8179C LDP X30, X19, [X31], #0x10

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W8, [X0+80]
	005 Move W9, [X0+84]
	006 Move X19, X0
	007 NotImplemented "Instruction CMP not yet implemented."
	008 NotImplemented "Instruction CSEL not yet implemented."
	009 Call TextEditor.GetGraphicalLineStart, X0, X1
	010 Move W20, W0
	011 Move X0, X19
	012 Move W1, W20
	013 Call TextEditor.set_selectIndex, X0, X1
	014 Move X0, X19
	015 Move W1, W20
	016 Move X20, [X31+16]
	017 Move X19, [X31+24]
	018 Move X30, [X31+32]
	019 Call TextEditor.set_cursorIndex, X0, X1
	020 Return 

Method: System.Void MoveGraphicalLineEnd()

Disassembly:
	0x03C81878 STR W8, [X0 + 0x78]
	0x03C8187C B.LT 0x3C818DC
	0x03C81880 LDR X0, [X19 + 0x38]
	0x03C81884 CBZ X0, 0x3C81908
	0x03C81888 LDR W21, [X19 + 0x54]
	0x03C8188C MOV X1, X31
	0x03C81890 BL 0x3C69940
	0x03C81894 CBZ X0, 0x3C81908
	0x03C81898 LDR W8, [X19 + 0x50]
	0x03C8189C MOVZ W1, 0xA
	0x03C818A0 MOV X3, X31
	0x03C818A4 SUB W2, W8, 0x2
	0x03C818A8 BL 0x322C678
	0x03C818AC ADD W1, W0, 0x1
	0x03C818B0 MOV X0, X19
	0x03C818B4 BL 0x3C7E6FC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W8, [X0+80]
	005 Move W9, [X0+84]
	006 Move X19, X0
	007 NotImplemented "Instruction CMP not yet implemented."
	008 NotImplemented "Instruction CSEL not yet implemented."
	009 Call TextEditor.GetGraphicalLineEnd, X0, X1
	010 Move W20, W0
	011 Move X0, X19
	012 Move W1, W20
	013 Call TextEditor.set_selectIndex, X0, X1
	014 Move X0, X19
	015 Move W1, W20
	016 Move X20, [X31+16]
	017 Move X19, [X31+24]
	018 Move X30, [X31+32]
	019 Call TextEditor.set_cursorIndex, X0, X1
	020 Return 

Method: System.Void MoveTextStart()

Disassembly:
	0x03C819A4 LDR W1, [X19 + 0x50]
	0x03C819A8 CMP W1, W8
	0x03C819AC B.GE 0x3C819C4
	0x03C819B0 MOV X0, X19
	0x03C819B4 BL 0x3C80A0C
	0x03C819B8 ADD W1, W0, 0x1
	0x03C819BC MOV X0, X19
	0x03C819C0 BL 0x3C7E6FC

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W1, W31
	004 Move X19, X0
	005 Call TextEditor.set_cursorIndex, X0, X1
	006 Move X0, X19
	007 Move W1, W31
	008 Move X30, [X31+16]
	009 Move X19, [X31+24]
	010 Call TextEditor.set_selectIndex, X0, X1
	011 Return 

Method: System.Void MoveTextEnd()

Disassembly:
	0x03C819C4 LDR W8, [X19 + 0x54]
	0x03C819C8 CBZ W8, 0x3C81A04
	0x03C819CC LDR X0, [X19 + 0x38]
	0x03C819D0 CBZ X0, 0x3C81A0C
	0x03C819D4 MOV X1, X31
	0x03C819D8 BL 0x3C69940
	0x03C819DC CBZ X0, 0x3C81A0C
	0x03C819E0 LDR W8, [X19 + 0x54]
	0x03C819E4 MOVZ W1, 0xA
	0x03C819E8 MOV X3, X31
	0x03C819EC SUB W2, W8, 0x1
	0x03C819F0 BL 0x322C678
	0x03C819F4 ADD W1, W0, 0x1
	0x03C819F8 MOV X0, X19
	0x03C819FC LDP X30, X19, [X31], #0x10
	0x03C81A00 B 0x3C7E75C
	0x03C81A04 LDP X30, X19, [X31], #0x10
	0x03C81A08 RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move X0, [X0+56]
	006 Compare X0, 0
	007 JumpIfEqual {23}
	008 Move X1, X31
	009 Call GUIContent.get_text, X0
	010 Compare X0, 0
	011 JumpIfEqual {23}
	012 Move W20, [X0+16]
	013 Move X0, X19
	014 Move W1, W20
	015 Call TextEditor.set_cursorIndex, X0, X1
	016 Move X0, X19
	017 Move W1, W20
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Call TextEditor.set_selectIndex, X0, X1
	022 Return 
	023 Call 0x1C17F20

Method: System.Int32 IndexOfEndOfLine(System.Int32 startIndex)

Disassembly:
	0x03C81A0C BL 0x1C16F20
	0x03C81A10 STR X30, [X31 - 0x20]!
	0x03C81A14 STP X20, X19, [X31 + 0x10]
	0x03C81A18 CBZ X1, 0x3C81A68
	0x03C81A1C MOV X20, X1
	0x03C81A20 MOV X19, X0
	0x03C81A24 MOV X0, X1
	0x03C81A28 MOV X1, X31
	0x03C81A2C BL 0x3C63270
	0x03C81A30 CMP W0, 0x7
	0x03C81A34 B.EQ 0x3C81A4C
	0x03C81A38 MOV X0, X20
	0x03C81A3C MOV X1, X31
	0x03C81A40 BL 0x3C63270
	0x03C81A44 CMP W0, 0x8
	0x03C81A48 B.NE 0x3C81A58
	0x03C81A4C LDP X20, X19, [X31 + 0x10]
	0x03C81A50 LDR X30, [X31], #0x20
	0x03C81A54 RET
	0x03C81A58 MOV X0, X19
	0x03C81A5C LDP X20, X19, [X31 + 0x10]
	0x03C81A60 LDR X30, [X31], #0x20
	0x03C81A64 B 0x3C7E444
	0x03C81A68 BL 0x1C16F20
	0x03C81A6C STP D13, D12, [X31 - 0x80]!

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move X0, [X0+56]
	006 Compare X0, 0
	007 JumpIfEqual {30}
	008 Move W20, W1
	009 Move X1, X31
	010 Call GUIContent.get_text, X0
	011 Compare X0, 0
	012 JumpIfEqual {30}
	013 Move W1, 10
	014 Move W2, W20
	015 Move X3, X31
	016 Call String.IndexOf, X0, X1, X2
	017 Add W31, W0, 1
	018 Move X0, [X19+56]
	019 Compare X0, 0
	020 JumpIfEqual {30}
	021 Move X1, X31
	022 Call GUIContent.get_text, X0
	023 Compare X0, 0
	024 JumpIfEqual {30}
	025 Move W0, [X0+16]
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Return X0
	030 Call 0x1C17F20

Method: System.Void MoveParagraphForward()

Disassembly:
	0x03C81A70 STP D11, D10, [X31 + 0x10]
	0x03C81A74 STP D9, D8, [X31 + 0x20]
	0x03C81A78 STR X30, [X31 + 0x30]
	0x03C81A7C STP X26, X25, [X31 + 0x40]
	0x03C81A80 STP X24, X23, [X31 + 0x50]
	0x03C81A84 STP X22, X21, [X31 + 0x60]
	0x03C81A88 STP X20, X19, [X31 + 0x70]
	0x03C81A8C ADRP X20, 0x765000
	0x03C81A90 LDRB W8, [X20 + 0x9BB]
	0x03C81A94 MOV X22, X1
	0x03C81A98 MOV X19, X0
	0x03C81A9C TBNZ X8, 0x0, 0x3C81AB4
	0x03C81AA0 ADRP X0, 0x49E000
	0x03C81AA4 LDR X0, [X0 + 0x5C8]
	0x03C81AA8 BL 0x1C16CF4
	0x03C81AAC MOVZ W8, 0x1
	0x03C81AB0 STRB W8, [X20 + 0x9BB]
	0x03C81AB4 LDR X0, [X19 + 0x38]
	0x03C81AB8 CBZ X0, 0x3C81DFC
	0x03C81ABC ADRP X26, 0x49E000
	0x03C81AC0 LDR X26, [X26 + 0x5C8]
	0x03C81AC4 MOV X1, X31
	0x03C81AC8 BL 0x3C69940
	0x03C81ACC LDR X8, [X26]
	0x03C81AD0 LDR W21, [X19 + 0x50]
	0x03C81AD4 MOV X20, X0
	0x03C81AD8 LDR W9, [X8 + 0xE0]
	0x03C81ADC CBNZ W9, 0x3C81AE8
	0x03C81AE0 MOV X0, X8
	0x03C81AE4 BL 0x1C16DFC
	0x03C81AE8 MOV X0, X31
	0x03C81AEC BL 0x3C6AC34
	0x03C81AF0 CBZ X0, 0x3C81DFC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W8, [X0+80]
	005 Move W9, [X0+84]
	006 Move X19, X0
	007 NotImplemented "Instruction CMP not yet implemented."
	008 NotImplemented "Instruction CSEL not yet implemented."
	009 Call TextEditor.set_cursorIndex, X0, X1
	010 Move X0, [X19+56]
	011 Compare X0, 0
	012 JumpIfEqual {39}
	013 Move W20, [X19+80]
	014 Move X1, X31
	015 Call GUIContent.get_text, X0
	016 Compare X0, 0
	017 JumpIfEqual {39}
	018 Move W8, [X0+16]
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move W8, [X19+80]
	021 Move X0, X19
	022 Add W1, W8, 1
	023 Call TextEditor.IndexOfEndOfLine, X0, X1
	024 Move W20, W0
	025 Move X0, X19
	026 Move W1, W20
	027 Call TextEditor.set_cursorIndex, X0, X1
	028 Move X0, X19
	029 Move W1, W20
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X30, [X31+32]
	033 Call TextEditor.set_selectIndex, X0, X1
	034 Return 
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X30, [X31+32]
	038 Return 
	039 Call 0x1C17F20

Method: System.Void MoveParagraphBackward()

Disassembly:
	0x03C81AF4 LDR W8, [X0 + 0x10]
	0x03C81AF8 LDR X23, [X19 + 0x38]
	0x03C81AFC CMP W8, 0x1
	0x03C81B00 B.LT 0x3C81B90
	0x03C81B04 CBZ X22, 0x3C81DFC
	0x03C81B08 LDR W2, [X19 + 0x50]
	0x03C81B0C MOV X0, X22
	0x03C81B10 MOV W1, W31
	0x03C81B14 MOV X3, X31
	0x03C81B18 BL 0x3228DE4
	0x03C81B1C LDR X8, [X26]
	0x03C81B20 MOV X24, X0
	0x03C81B24 LDR W9, [X8 + 0xE0]
	0x03C81B28 CBNZ W9, 0x3C81B34
	0x03C81B2C MOV X0, X8
	0x03C81B30 BL 0x1C16DFC
	0x03C81B34 MOV X0, X31
	0x03C81B38 BL 0x3C6AC34
	0x03C81B3C LDR W1, [X19 + 0x54]
	0x03C81B40 MOV X25, X0
	0x03C81B44 MOV X0, X22
	0x03C81B48 MOV X2, X31
	0x03C81B4C BL 0x322B484
	0x03C81B50 MOV X2, X0
	0x03C81B54 MOV X0, X24
	0x03C81B58 MOV X1, X25
	0x03C81B5C MOV X3, X31
	0x03C81B60 BL 0x32274B8
	0x03C81B64 CBZ X23, 0x3C81DFC
	0x03C81B68 MOV X1, X0
	0x03C81B6C MOV X0, X23
	0x03C81B70 MOV X2, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W8, [X0+80]
	005 Move W9, [X0+84]
	006 Move X19, X0
	007 NotImplemented "Instruction CMP not yet implemented."
	008 NotImplemented "Instruction CSEL not yet implemented."
	009 Call TextEditor.set_cursorIndex, X0, X1
	010 Move W8, [X19+80]
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Move X0, [X19+56]
	013 Compare X0, 0
	014 JumpIfEqual {36}
	015 Move X1, X31
	016 Call GUIContent.get_text, X0
	017 Compare X0, 0
	018 JumpIfEqual {36}
	019 Move W8, [X19+80]
	020 Move W1, 10
	021 Move X3, X31
	022 Subtract W2, W8, 2
	023 Call String.LastIndexOf, X0, X1, X2
	024 Add W20, W0, 1
	025 Move W20, W31
	026 Move X0, X19
	027 Move W1, W20
	028 Call TextEditor.set_cursorIndex, X0, X1
	029 Move X0, X19
	030 Move W1, W20
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Call TextEditor.set_selectIndex, X0, X1
	035 Return 
	036 Call 0x1C17F20

Method: System.Void MoveCursorToPosition(UnityEngine.Vector2 cursorPosition)

Disassembly:
	0x03C81B74 BL 0x3C69948
	0x03C81B78 MOV X0, X31
	0x03C81B7C BL 0x3C6AC34
	0x03C81B80 CBZ X0, 0x3C81DFC
	0x03C81B84 LDR W8, [X0 + 0x10]
	0x03C81B88 ADD W21, W8, W21
	0x03C81B8C B 0x3C81BA4
	0x03C81B90 CBZ X23, 0x3C81DFC
	0x03C81B94 MOV X0, X23
	0x03C81B98 MOV X1, X22
	0x03C81B9C MOV X2, X31
	0x03C81BA0 BL 0x3C69948
	0x03C81BA4 LDR X0, [X19 + 0x20]
	0x03C81BA8 CBZ X0, 0x3C81DFC
	0x03C81BAC LDR X1, [X19 + 0x38]
	0x03C81BB0 LDP S2, S3, [X19 + 0x48]
	0x03C81BB4 FMOV S0, W31
	0x03C81BB8 FMOV S1, W31

ISIL:
	001 Move [X31-32], D9
	002 Move [X31-24], D8
	003 Move [X31+16], X30
	004 Move [X31+24], X19
	005 Move X19, X0
	006 Move X0, X31
	007 Move V8, V1
	008 Move V9, V0
	009 Call Event.get_current
	010 Compare X0, 0
	011 JumpIfEqual {22}
	012 Move X1, X31
	013 Call Event.get_shift, X0
	014 And W1, W0, 1
	015 Move X0, X19
	016 Move X30, [X31+16]
	017 Move X19, [X31+24]
	018 Move V0, V9
	019 Move V1, V8
	020 Move D9, [X31+32]
	021 Move D8, [X31+40]
	022 Call 0x1C17F20

Method: System.Void MoveCursorToPosition_Internal(UnityEngine.Vector2 cursorPosition, System.Boolean shift)

Disassembly:
	0x03C81BBC MOV W2, W21
	0x03C81BC0 MOV X3, X31
	0x03C81BC4 BL 0x3C75028
	0x03C81BC8 LDR X0, [X19 + 0x20]
	0x03C81BCC STP S0, S1, [X19 + 0x5C]
	0x03C81BD0 CBZ X0, 0x3C81DFC
	0x03C81BD4 MOV X1, X31
	0x03C81BD8 BL 0x3C734BC
	0x03C81BDC LDR X21, [X19 + 0x20]
	0x03C81BE0 CBZ X21, 0x3C81DFC
	0x03C81BE4 MOV X0, X21
	0x03C81BE8 MOV X1, X31
	0x03C81BEC MOV V8.16B, V0.16B
	0x03C81BF0 MOV V9.16B, V1.16B
	0x03C81BF4 BL 0x3C734BC
	0x03C81BF8 LDP S2, S3, [X19 + 0x2C]
	0x03C81BFC MOV X0, X21
	0x03C81C00 MOV X1, X31
	0x03C81C04 FSUB S0, S0, S2
	0x03C81C08 FSUB S1, S1, S3
	0x03C81C0C BL 0x3C7354C
	0x03C81C10 LDR X0, [X19 + 0x20]
	0x03C81C14 CBZ X0, 0x3C81DFC
	0x03C81C18 LDP S0, S1, [X19 + 0x2C]
	0x03C81C1C MOV X1, X31
	0x03C81C20 BL 0x3C73748
	0x03C81C24 LDR X0, [X19 + 0x20]
	0x03C81C28 CBZ X0, 0x3C81DFC
	0x03C81C2C LDP S11, S10, [X19 + 0x40]
	0x03C81C30 LDP S13, S12, [X19 + 0x5C]
	0x03C81C34 MOV X1, X31
	0x03C81C38 BL 0x3C74840
	0x03C81C3C LDP S1, S2, [X19 + 0x2C]
	0x03C81C40 FADD S0, S10, S0

ISIL:
	001 Move [X31-48], D9
	002 Move [X31-40], D8
	003 Move [X31+16], X30
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X8, [X0]
	008 Move W20, W1
	009 Move X21, [X0+32]
	010 Move V8, V1
	011 Move X9, [X8+376]
	012 Move X1, [X8+384]
	013 Move X19, X0
	014 Move V9, V0
	015 NotImplemented "Instruction BLR not yet implemented."
	016 Compare X21, 0
	017 JumpIfEqual {47}
	018 Move S6, [X19+44]
	019 Move S4, [X19+48]
	020 Move X1, [X19+56]
	021 Move X0, X21
	022 Move X2, X31
	023 Add S5, S8, S4
	024 Add S4, S9, S6
	025 Call GUIStyle.GetCursorStringIndex, X0, X1, X2, X3
	026 Move W1, W0
	027 Move X0, X19
	028 Call TextEditor.set_selectIndex, X0, X1
	029 Move TEMP, X20
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {36}
	033 Move W1, [X19+84]
	034 Move X0, X19
	035 Call TextEditor.set_cursorIndex, X0, X1
	036 Move X8, [X19]
	037 Move X0, X19
	038 Move X20, [X31+32]
	039 Move X19, [X31+40]
	040 Move X30, [X31+16]
	041 Move X21, [X31+24]
	042 Move X2, [X8+392]
	043 Move X1, [X8+400]
	044 Move D9, [X31+48]
	045 Move D8, [X31+56]
	046 CallNoReturn X2
	047 Call 0x1C17F20

Method: System.Void SelectToPosition(UnityEngine.Vector2 cursorPosition)

Disassembly:
	0x03C81C44 FADD S3, S11, S13
	0x03C81C48 FADD S4, S12, S0
	0x03C81C4C FSUB S0, S3, S1
	0x03C81C50 FSUB S1, S4, S2
	0x03C81C54 MOV X0, X31
	0x03C81C58 BL 0x3C6CD58
	0x03C81C5C LDR X0, [X26]
	0x03C81C60 MOV V10.16B, V0.16B
	0x03C81C64 MOV V11.16B, V1.16B
	0x03C81C68 LDR W8, [X0 + 0xE0]
	0x03C81C6C CBNZ W8, 0x3C81C74
	0x03C81C70 BL 0x1C16DFC
	0x03C81C74 MOV V0.16B, V10.16B
	0x03C81C78 MOV V1.16B, V11.16B
	0x03C81C7C MOV X0, X31
	0x03C81C80 BL 0x3C757C8
	0x03C81C84 MOV X0, X31
	0x03C81C88 BL 0x3C6AC34
	0x03C81C8C CBZ X0, 0x3C81DFC
	0x03C81C90 LDR W8, [X0 + 0x10]
	0x03C81C94 LDR X24, [X19 + 0x20]
	0x03C81C98 LDP S13, S12, [X19 + 0x40]
	0x03C81C9C LDP S11, S10, [X19 + 0x48]
	0x03C81CA0 LDR X21, [X19 + 0x38]
	0x03C81CA4 LDR W22, [X19 + 0x18]
	0x03C81CA8 LDR W23, [X19 + 0x50]
	0x03C81CAC CMP W8, 0x1
	0x03C81CB0 B.LT 0x3C81D0C
	0x03C81CB4 LDR X0, [X26]
	0x03C81CB8 LDR W8, [X0 + 0xE0]
	0x03C81CBC CBNZ W8, 0x3C81CC4
	0x03C81CC0 BL 0x1C16DFC
	0x03C81CC4 MOV X0, X31
	0x03C81CC8 BL 0x3C6AC34
	0x03C81CCC CBZ X0, 0x3C81DFC
	0x03C81CD0 CBZ X24, 0x3C81DFC
	0x03C81CD4 LDR W8, [X0 + 0x10]
	0x03C81CD8 MOVZ W5, 0x1
	0x03C81CDC MOV X0, X24
	0x03C81CE0 MOV V0.16B, V13.16B
	0x03C81CE4 ADD W4, W8, W23
	0x03C81CE8 MOV V1.16B, V12.16B
	0x03C81CEC MOV V2.16B, V11.16B
	0x03C81CF0 MOV V3.16B, V10.16B
	0x03C81CF4 MOV X1, X21
	0x03C81CF8 MOV W2, W22
	0x03C81CFC MOV W3, W23
	0x03C81D00 MOV X6, X31
	0x03C81D04 BL 0x3C74EBC
	0x03C81D08 B 0x3C81D3C
	0x03C81D0C CBZ X24, 0x3C81DFC
	0x03C81D10 LDR W4, [X19 + 0x54]
	0x03C81D14 MOV X0, X24
	0x03C81D18 MOV V0.16B, V13.16B
	0x03C81D1C MOV V1.16B, V12.16B
	0x03C81D20 MOV V2.16B, V11.16B
	0x03C81D24 MOV V3.16B, V10.16B
	0x03C81D28 MOV X1, X21
	0x03C81D2C MOV W2, W22
	0x03C81D30 MOV W3, W23
	0x03C81D34 MOV X5, X31
	0x03C81D38 BL 0x3C75020
	0x03C81D3C LDR W3, [X19 + 0x78]
	0x03C81D40 ADDS W31, W3, 0x1
	0x03C81D44 B.EQ 0x3C81D68
	0x03C81D48 LDR X0, [X19 + 0x20]
	0x03C81D4C CBZ X0, 0x3C81DFC
	0x03C81D50 LDR W2, [X19 + 0x18]
	0x03C81D54 LDR X1, [X19 + 0x38]
	0x03C81D58 LDP S2, S3, [X19 + 0x48]
	0x03C81D5C LDP S0, S1, [X19 + 0x40]
	0x03C81D60 MOV X4, X31
	0x03C81D64 BL 0x3C74A20
	0x03C81D68 LDR X0, [X19 + 0x20]
	0x03C81D6C CBZ X0, 0x3C81DFC
	0x03C81D70 MOV V0.16B, V8.16B
	0x03C81D74 MOV V1.16B, V9.16B
	0x03C81D78 MOV X1, X31
	0x03C81D7C BL 0x3C7354C
	0x03C81D80 ADRP X22, 0x758000
	0x03C81D84 LDRB W8, [X22 + 0x78F]
	0x03C81D88 LDR X21, [X19 + 0x20]
	0x03C81D8C CBNZ W8, 0x3C81DA4
	0x03C81D90 ADRP X0, 0x47A000
	0x03C81D94 LDR X0, [X0 + 0xF08]
	0x03C81D98 BL 0x1C16CF4
	0x03C81D9C MOVZ W8, 0x1
	0x03C81DA0 STRB W8, [X22 + 0x78F]
	0x03C81DA4 CBZ X21, 0x3C81DFC
	0x03C81DA8 ADRP X8, 0x47A000
	0x03C81DAC LDR X8, [X8 + 0xF08]
	0x03C81DB0 MOV X0, X21
	0x03C81DB4 MOV X1, X31
	0x03C81DB8 LDR X8, [X8]
	0x03C81DBC LDR X8, [X8 + 0xB8]
	0x03C81DC0 LDP S0, S1, [X8]
	0x03C81DC4 BL 0x3C73748
	0x03C81DC8 LDR X0, [X19 + 0x38]
	0x03C81DCC CBZ X0, 0x3C81DFC
	0x03C81DD0 MOV X1, X20
	0x03C81DD4 LDP X20, X19, [X31 + 0x70]
	0x03C81DD8 LDP X22, X21, [X31 + 0x60]
	0x03C81DDC LDP X24, X23, [X31 + 0x50]
	0x03C81DE0 LDP X26, X25, [X31 + 0x40]
	0x03C81DE4 LDR X30, [X31 + 0x30]
	0x03C81DE8 LDP D9, D8, [X31 + 0x20]
	0x03C81DEC LDP D11, D10, [X31 + 0x10]
	0x03C81DF0 MOV X2, X31
	0x03C81DF4 LDP D13, D12, [X31], #0x80
	0x03C81DF8 B 0x3C69948
	0x03C81DFC BL 0x1C16F20
	0x03C81E00 STP X30, X19, [X31 - 0x10]!
	0x03C81E04 LDRB W8, [X0 + 0x2A]
	0x03C81E08 CBZ W8, 0x3C81E18
	0x03C81E0C MOV W0, W31
	0x03C81E10 LDP X30, X19, [X31], #0x10
	0x03C81E14 RET
	0x03C81E18 MOV X19, X0
	0x03C81E1C BL 0x3C81E2C
	0x03C81E20 MOV X0, X19
	0x03C81E24 LDP X30, X19, [X31], #0x10
	0x03C81E28 B 0x3C7FA18
	0x03C81E2C STR X30, [X31 - 0x20]!
	0x03C81E30 STP X20, X19, [X31 + 0x10]
	0x03C81E34 ADRP X20, 0x765000
	0x03C81E38 LDRB W8, [X20 + 0x9BD]
	0x03C81E3C MOV X19, X0
	0x03C81E40 TBNZ X8, 0x0, 0x3C81E58
	0x03C81E44 ADRP X0, 0x49E000
	0x03C81E48 LDR X0, [X0 + 0x5C8]
	0x03C81E4C BL 0x1C16CF4
	0x03C81E50 MOVZ W8, 0x1
	0x03C81E54 STRB W8, [X20 + 0x9BD]
	0x03C81E58 LDP W9, W8, [X19 + 0x50]
	0x03C81E5C CMP W8, W9
	0x03C81E60 B.EQ 0x3C81E6C
	0x03C81E64 LDRB W8, [X19 + 0x2A]
	0x03C81E68 CBZ W8, 0x3C81E78
	0x03C81E6C LDP X20, X19, [X31 + 0x10]
	0x03C81E70 LDR X30, [X31], #0x20
	0x03C81E74 RET
	0x03C81E78 LDR X8, [X19]
	0x03C81E7C LDR X20, [X19 + 0x20]
	0x03C81E80 MOV X0, X19
	0x03C81E84 LDP X9, X1, [X8 + 0x178]
	0x03C81E88 BLR X9

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], D9
	003 Move [X31+24], D8
	004 Move [X31+32], X30
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X8, [X0]
	009 Move W21, [X0+108]
	010 Move X20, [X0+32]
	011 Move V8, V1
	012 Move X9, [X8+376]
	013 Move X1, [X8+384]
	014 Move X19, X0
	015 Move V9, V0
	016 NotImplemented "Instruction BLR not yet implemented."
	017 Compare X20, 0
	018 JumpIfEqual {159}
	019 Move S6, [X19+44]
	020 Move S4, [X19+48]
	021 Move X1, [X19+56]
	022 Move X0, X20
	023 Move X2, X31
	024 Add S5, S8, S4
	025 Add S4, S9, S6
	026 Call GUIStyle.GetCursorStringIndex, X0, X1, X2, X3
	027 Move W1, W0
	028 Compare W21, 0
	029 JumpIfEqual {60}
	030 Move [X31+12], W1
	031 Add X1, X31, 12
	032 Move X0, X19
	033 Call TextEditor.EnsureValidCodePointIndex, X0, X1
	034 Add X20, X19, 112
	035 Move X0, X19
	036 Move X1, X20
	037 Call TextEditor.EnsureValidCodePointIndex, X0, X1
	038 Move W21, [X31+12]
	039 Move W8, [X19+112]
	040 Move W9, [X19+116]
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Compare W9, 0
	043 Invalid "Jump target not found in method."
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move X0, [X19+56]
	046 Compare X0, 0
	047 JumpIfEqual {159}
	048 Move X1, X31
	049 Call GUIContent.get_text, X0
	050 Compare X0, 0
	051 JumpIfEqual {159}
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move W8, 2
	054 NotImplemented "Instruction CSEL not yet implemented."
	055 Subtract W2, W8, 2
	056 Move W1, 10
	057 Move X3, X31
	058 Call String.LastIndexOf, X0, X1, X2
	059 Add W1, W0, 1
	060 Move X0, X19
	061 Call TextEditor.set_cursorIndex, X0, X1
	062 Move W2, 1
	063 Move X0, X19
	064 Move W1, W21
	065 Call TextEditor.FindEndOfClassification, X0, X1, X2
	066 Move W1, W0
	067 Move X0, X19
	068 Call TextEditor.set_cursorIndex, X0, X1
	069 Move W1, [X19+112]
	070 Move X0, X19
	071 Move W2, W31
	072 Move X0, [X19+56]
	073 Compare X0, 0
	074 JumpIfEqual {159}
	075 Move X1, X31
	076 Call GUIContent.get_text, X0
	077 Compare X0, 0
	078 JumpIfEqual {159}
	079 Move W8, [X0+16]
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Move X0, X19
	082 Move W1, W21
	083 Call TextEditor.IndexOfEndOfLine, X0, X1
	084 Move W1, W0
	085 Move X0, X19
	086 Move W1, W21
	087 Move W2, W31
	088 Call TextEditor.FindEndOfClassification, X0, X1, X2
	089 Move W1, W0
	090 Move X0, X19
	091 Call TextEditor.set_cursorIndex, X0, X1
	092 Move W1, [X19+112]
	093 Move W2, 1
	094 Move X0, X19
	095 Call TextEditor.FindEndOfClassification, X0, X1, X2
	096 Move X0, [X19+56]
	097 Compare X0, 0
	098 JumpIfEqual {159}
	099 Move X1, X31
	100 Call GUIContent.get_text, X0
	101 Compare X0, 0
	102 JumpIfEqual {159}
	103 Move W1, [X0+16]
	104 Move X0, X19
	105 Call TextEditor.set_cursorIndex, X0, X1
	106 Move X0, [X19+56]
	107 Compare X0, 0
	108 JumpIfEqual {159}
	109 Move X1, X31
	110 Call GUIContent.get_text, X0
	111 Compare X0, 0
	112 JumpIfEqual {159}
	113 Move W8, [X20]
	114 Move W1, 10
	115 Move X3, X31
	116 Subtract W8, W8, 2
	117 NotImplemented "Instruction BIC not yet implemented."
	118 Call String.LastIndexOf, X0, X1, X2
	119 Add W1, W0, 1
	120 Move W1, W31
	121 Move X0, X19
	122 Call TextEditor.set_cursorIndex, X0, X1
	123 Move X0, [X19+56]
	124 Compare X0, 0
	125 JumpIfEqual {159}
	126 Move X1, X31
	127 Call GUIContent.get_text, X0
	128 Move X8, [X19+56]
	129 Compare X8, 0
	130 JumpIfEqual {159}
	131 Move X21, X0
	132 Move X0, X8
	133 Move X1, X31
	134 Call GUIContent.get_text, X0
	135 Compare X0, 0
	136 JumpIfEqual {159}
	137 Compare X21, 0
	138 JumpIfEqual {159}
	139 Move W8, [X0+16]
	140 Move W9, [X20]
	141 Move W1, 10
	142 Move X0, X21
	143 Subtract W8, W8, 1
	144 NotImplemented "Instruction CMP not yet implemented."
	145 NotImplemented "Instruction CSEL not yet implemented."
	146 Move X3, X31
	147 Call String.LastIndexOf, X0, X1, X2
	148 Move W1, W0
	149 Move X0, X19
	150 Call TextEditor.set_selectIndex, X0, X1
	151 Move X20, [X31+48]
	152 Move X19, [X31+56]
	153 Move X30, [X31+32]
	154 Move X21, [X31+40]
	155 Move D9, [X31+16]
	156 Move D8, [X31+24]
	157 Add X31, X31, 64
	158 Return 
	159 Call 0x1C17F20

Method: System.Void SelectLeft()

Disassembly:
	0x03C82008 LDR X1, [X8]
	0x03C8200C LDR X2, [X9]
	0x03C82010 BL 0x32293BC
	0x03C82014 CBZ X0, 0x3C82044
	0x03C82018 MOVZ W1, 0xA
	0x03C8201C MOVZ W2, 0x20
	0x03C82020 MOV X3, X31
	0x03C82024 BL 0x32296D0
	0x03C82028 CBZ X0, 0x3C82044
	0x03C8202C LDP X20, X19, [X31 + 0x10]
	0x03C82030 MOVZ W1, 0xD
	0x03C82034 MOVZ W2, 0x20
	0x03C82038 MOV X3, X31
	0x03C8203C LDR X30, [X31], #0x20
	0x03C82040 B 0x32296D0
	0x03C82044 BL 0x1C16F20
	0x03C82048 STR X30, [X31 - 0x30]!
	0x03C8204C STP X22, X21, [X31 + 0x10]
	0x03C82050 STP X20, X19, [X31 + 0x20]
	0x03C82054 ADRP X21, 0x764000
	0x03C82058 ADRP X22, 0x4DE000
	0x03C8205C LDRB W8, [X21 + 0x9C0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W8, [X0+117]
	005 Move X19, X0
	006 Compare W8, 0
	007 JumpIfEqual {16}
	008 Move W20, [X19+80]
	009 Move W1, [X19+84]
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Move X0, X19
	012 Call TextEditor.set_cursorIndex, X0, X1
	013 Move X0, X19
	014 Move W1, W20
	015 Call TextEditor.set_selectIndex, X0, X1
	016 Move W1, [X19+80]
	017 Move X0, X19
	018 Move [X19+117], W31
	019 Call TextEditor.PreviousCodePointIndex, X0, X1
	020 Move W1, W0
	021 Move X0, X19
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X30, [X31+32]
	025 Call TextEditor.set_cursorIndex, X0, X1
	026 Return 

Method: System.Void SelectRight()

Disassembly:
	0x03C82060 LDR X22, [X22 + 0x2A0]
	0x03C82064 MOV W19, W1
	0x03C82068 MOV X20, X0
	0x03C8206C TBNZ X8, 0x0, 0x3C82090
	0x03C82070 ADRP X0, 0x4DE000
	0x03C82074 LDR X0, [X0 + 0x7A8]
	0x03C82078 BL 0x1C16CF4
	0x03C8207C ADRP X0, 0x4DE000
	0x03C82080 LDR X0, [X0 + 0x2A0]
	0x03C82084 BL 0x1C16CF4
	0x03C82088 MOVZ W8, 0x1
	0x03C8208C STRB W8, [X21 + 0x9C0]
	0x03C82090 LDR X8, [X22]
	0x03C82094 MOV X0, X20
	0x03C82098 MOV X1, X31
	0x03C8209C LDR X8, [X8 + 0xB8]
	0x03C820A0 LDR X21, [X8]
	0x03C820A4 BL 0x3C63B3C
	0x03C820A8 CBZ X21, 0x3C820D4
	0x03C820AC ADRP X8, 0x4DE000
	0x03C820B0 LDR X8, [X8 + 0x7A8]
	0x03C820B4 MOV X1, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W8, [X0+117]
	005 Move X19, X0
	006 Compare W8, 0
	007 JumpIfEqual {16}
	008 Move W20, [X19+80]
	009 Move W1, [X19+84]
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Move X0, X19
	012 Call TextEditor.set_cursorIndex, X0, X1
	013 Move X0, X19
	014 Move W1, W20
	015 Call TextEditor.set_selectIndex, X0, X1
	016 Move W1, [X19+80]
	017 Move X0, X19
	018 Move [X19+117], W31
	019 Call TextEditor.NextCodePointIndex, X0, X1
	020 Move W1, W0
	021 Move X0, X19
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X30, [X31+32]
	025 Call TextEditor.set_cursorIndex, X0, X1
	026 Return 

Method: System.Void SelectUp()

Disassembly:
	0x03C820B8 MOV X0, X21
	0x03C820BC MOV W2, W19
	0x03C820C0 LDR X3, [X8]
	0x03C820C4 LDP X20, X19, [X31 + 0x20]
	0x03C820C8 LDP X22, X21, [X31 + 0x10]
	0x03C820CC LDR X30, [X31], #0x30
	0x03C820D0 B 0x2AA2008
	0x03C820D4 BL 0x1C16F20
	0x03C820D8 STP X30, X21, [X31 - 0x20]!
	0x03C820DC STP X20, X19, [X31 + 0x10]
	0x03C820E0 ADRP X20, 0x764000
	0x03C820E4 LDRB W8, [X20 + 0x9C2]
	0x03C820E8 MOV X19, X0
	0x03C820EC TBNZ X8, 0x0, 0x3C82104
	0x03C820F0 ADRP X0, 0x49D000
	0x03C820F4 LDR X0, [X0 + 0x5C8]
	0x03C820F8 BL 0x1C16CF4
	0x03C820FC MOVZ W8, 0x1
	0x03C82100 STRB W8, [X20 + 0x9C2]
	0x03C82104 ADRP X20, 0x49D000
	0x03C82108 LDRB W8, [X19 + 0x2B]
	0x03C8210C LDR X20, [X20 + 0x5C8]
	0x03C82110 CBZ W8, 0x3C82148
	0x03C82114 LDR X0, [X20]
	0x03C82118 LDR W21, [X19 + 0x18]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Call TextEditor.GrabGraphicalCursorPos, X0
	006 Move V0, [X19+96]
	007 Move X8, [X19]
	008 Move S1, -1
	009 Move X20, [X19+32]
	010 Add S0, S0, S1
	011 Move [X19+96], S0
	012 Move X9, [X8+376]
	013 Move X1, [X8+384]
	014 Move X0, X19
	015 NotImplemented "Instruction BLR not yet implemented."
	016 Compare X20, 0
	017 JumpIfEqual {31}
	018 Move S4, [X19+92]
	019 Move S5, [X19+96]
	020 Move X1, [X19+56]
	021 Move X0, X20
	022 Move X2, X31
	023 Call GUIStyle.GetCursorStringIndex, X0, X1, X2, X3
	024 Move W1, W0
	025 Move X0, X19
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Call TextEditor.set_cursorIndex, X0, X1
	030 Return 
	031 Call 0x1C17F20

Method: System.Void SelectDown()

Disassembly:
	0x03C8211C LDR W8, [X0 + 0xE0]
	0x03C82120 CBNZ W8, 0x3C82128
	0x03C82124 BL 0x1C16DFC
	0x03C82128 MOV X0, X31
	0x03C8212C BL 0x3C6AA80
	0x03C82130 CMP W21, W0
	0x03C82134 B.EQ 0x3C82140
	0x03C82138 MOV X0, X19
	0x03C8213C BL 0x3C7E93C
	0x03C82140 LDRB W8, [X19 + 0x2B]
	0x03C82144 CBNZ W8, 0x3C8217C
	0x03C82148 LDR X0, [X20]
	0x03C8214C LDR W20, [X19 + 0x18]
	0x03C82150 LDR W8, [X0 + 0xE0]
	0x03C82154 CBNZ W8, 0x3C8215C
	0x03C82158 BL 0x1C16DFC
	0x03C8215C MOV X0, X31
	0x03C82160 BL 0x3C6AA80
	0x03C82164 CMP W20, W0
	0x03C82168 B.NE 0x3C8217C
	0x03C8216C MOV X0, X19
	0x03C82170 LDP X20, X19, [X31 + 0x10]
	0x03C82174 LDP X30, X21, [X31], #0x20
	0x03C82178 B 0x3C7E8B0
	0x03C8217C LDP X20, X19, [X31 + 0x10]
	0x03C82180 LDP X30, X21, [X31], #0x20
	0x03C82184 RET
	0x03C82188 RET
	0x03C8218C RET
	0x03C82190 STR X30, [X31 - 0x20]!
	0x03C82194 STP X20, X19, [X31 + 0x10]
	0x03C82198 LDR X0, [X0 + 0x38]

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, X0
	006 Call TextEditor.GrabGraphicalCursorPos, X0
	007 Move X0, [X19+32]
	008 Compare X0, 0
	009 JumpIfEqual {39}
	010 Move V8, [X19+96]
	011 Move X1, X31
	012 Call GUIStyle.get_lineHeight, X0
	013 Move S1, 5
	014 Move X8, [X19]
	015 Add S0, S0, S1
	016 Add S0, S8, S0
	017 Move [X19+96], S0
	018 Move X9, [X8+376]
	019 Move X1, [X8+384]
	020 Move X20, [X19+32]
	021 Move X0, X19
	022 NotImplemented "Instruction BLR not yet implemented."
	023 Compare X20, 0
	024 JumpIfEqual {39}
	025 Move S4, [X19+92]
	026 Move S5, [X19+96]
	027 Move X1, [X19+56]
	028 Move X0, X20
	029 Move X2, X31
	030 Call GUIStyle.GetCursorStringIndex, X0, X1, X2, X3
	031 Move W1, W0
	032 Move X0, X19
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+8]
	036 Move V8, [X31+32]
	037 Call TextEditor.set_cursorIndex, X0, X1
	038 Return 
	039 Call 0x1C17F20

Method: System.Void SelectTextEnd()

Disassembly:
	0x03C8219C CBZ X0, 0x3C821D8
	0x03C821A0 LDR W20, [X1]
	0x03C821A4 MOV X19, X1
	0x03C821A8 MOV X1, X31
	0x03C821AC BL 0x3C69940
	0x03C821B0 CBZ X0, 0x3C821D8
	0x03C821B4 LDR W8, [X0 + 0x10]
	0x03C821B8 CMP W20, W8
	0x03C821BC CSEL W8, W8, W20, GT
	0x03C821C0 CMP W20, 0x0
	0x03C821C4 CSEL W8, W31, W8, LT
	0x03C821C8 STR W8, [X19]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+56]
	005 Compare X0, 0
	006 JumpIfEqual {17}
	007 Move X1, X31
	008 Call GUIContent.get_text, X0
	009 Compare X0, 0
	010 JumpIfEqual {17}
	011 Move W1, [X0+16]
	012 Move X0, X19
	013 Move X30, [X31+16]
	014 Move X19, [X31+24]
	015 Call TextEditor.set_cursorIndex, X0, X1
	016 Return 
	017 Call 0x1C17F20

Method: System.Void SelectTextStart()

Disassembly:
	0x03C821CC LDP X20, X19, [X31 + 0x10]
	0x03C821D0 LDR X30, [X31], #0x20

ISIL:
	001 Move W1, W31
	002 Call TextEditor.set_cursorIndex, X0, X1
	003 Return 

Method: System.Void MouseDragSelectsWholeWords(System.Boolean on)

Disassembly:
	0x03C821D4 RET
	0x03C821D8 BL 0x1C16F20
	0x03C821DC STP X30, X21, [X31 - 0x20]!
	0x03C821E0 STP X20, X19, [X31 + 0x10]
	0x03C821E4 ADRP X21, 0x764000

ISIL:
	001 Move W8, [X0+80]
	002 And W9, W1, 1
	003 Move [X0+108], W9
	004 Move [X0+112], W8
	005 Return 

Method: System.Void DblClickSnap(UnityEngine.TextEditor/DblClickSnapping snapping)

Disassembly:
	0x03C821E8 LDRB W8, [X21 + 0x9C3]
	0x03C821EC MOV W19, W1

ISIL:
	001 Move [X0+116], W1
	002 Return 

Method: System.Int32 GetGraphicalLineStart(System.Int32 p)

Disassembly:
	0x03C817A0 B 0x3C7E6FC
	0x03C817A4 STP X30, X19, [X31 - 0x10]!
	0x03C817A8 LDR W1, [X0 + 0x50]
	0x03C817AC MOVN W8, 0x0
	0x03C817B0 MOV X19, X0
	0x03C817B4 STRB W31, [X0 + 0x29]
	0x03C817B8 STR W8, [X0 + 0x78]
	0x03C817BC BL 0x3C808B8
	0x03C817C0 MOV W1, W0
	0x03C817C4 MOV X0, X19
	0x03C817C8 LDP X30, X19, [X31], #0x10
	0x03C817CC B 0x3C7E6FC
	0x03C817D0 STP X30, X21, [X31 - 0x20]!
	0x03C817D4 STP X20, X19, [X31 + 0x10]
	0x03C817D8 MOV X19, X0
	0x03C817DC LDR X0, [X0 + 0x38]
	0x03C817E0 MOVN W8, 0x0
	0x03C817E4 STRB W31, [X19 + 0x29]
	0x03C817E8 STR W8, [X19 + 0x78]
	0x03C817EC CBZ X0, 0x3C81858
	0x03C817F0 LDP W20, W21, [X19 + 0x50]
	0x03C817F4 MOV X1, X31
	0x03C817F8 BL 0x3C69940
	0x03C817FC CBZ X0, 0x3C81858
	0x03C81800 LDR W8, [X0 + 0x10]
	0x03C81804 CMP W20, W8
	0x03C81808 B.GE 0x3C8184C
	0x03C8180C LDR W8, [X19 + 0x50]
	0x03C81810 MOV X0, X19
	0x03C81814 ADD W1, W8, 0x1
	0x03C81818 BL 0x3C80A0C
	0x03C8181C MOV W1, W0
	0x03C81820 MOV X0, X19
	0x03C81824 BL 0x3C7E6FC
	0x03C81828 CMP W20, W21
	0x03C8182C B.GE 0x3C8184C
	0x03C81830 LDP W8, W1, [X19 + 0x50]
	0x03C81834 CMP W8, W1
	0x03C81838 B.LE 0x3C8184C
	0x03C8183C MOV X0, X19
	0x03C81840 LDP X20, X19, [X31 + 0x10]
	0x03C81844 LDP X30, X21, [X31], #0x20
	0x03C81848 B 0x3C7E6FC
	0x03C8184C LDP X20, X19, [X31 + 0x10]
	0x03C81850 LDP X30, X21, [X31], #0x20
	0x03C81854 RET
	0x03C81858 BL 0x1C16F20
	0x03C8185C STP X30, X21, [X31 - 0x20]!
	0x03C81860 STP X20, X19, [X31 + 0x10]
	0x03C81864 LDR W20, [X0 + 0x50]
	0x03C81868 MOV X19, X0
	0x03C8186C MOVN W8, 0x0
	0x03C81870 STRB W31, [X0 + 0x29]
	0x03C81874 CMP W20, 0x2

ISIL:
	001 Move [X31-64], D9
	002 Move [X31-56], D8
	003 Move [X31+16], X30
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x766000
	009 Move W8, [X21+2488]
	010 Move W20, W1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x49F000
	017 Move X0, [X0+1480]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2488], W8
	021 Move X8, [X19]
	022 Move X21, [X19+32]
	023 Move X0, X19
	024 Move X9, [X8+376]
	025 Move X1, [X8+384]
	026 NotImplemented "Instruction BLR not yet implemented."
	027 Compare X21, 0
	028 JumpIfEqual {69}
	029 Move X1, [X19+56]
	030 Move X22, 0x49F000
	031 Move X22, [X22+1480]
	032 Move X0, X21
	033 Move W2, W20
	034 Move X3, X31
	035 Call GUIStyle.GetCursorPixelPosition, X0, X1, X2, X3
	036 Move X0, [X22]
	037 Move V8, V1
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Move X0, X31
	043 Call GUIUtility.get_pixelsPerPoint
	044 Move X8, [X19]
	045 Move X20, [X19+32]
	046 Move X0, X19
	047 Move V9, V0
	048 Move X9, [X8+376]
	049 Move X1, [X8+384]
	050 NotImplemented "Instruction BLR not yet implemented."
	051 Compare X20, 0
	052 JumpIfEqual {69}
	053 Move X1, [X19+56]
	054 Move X0, X20
	055 Move X20, [X31+48]
	056 Move X19, [X31+56]
	057 Move X22, [X31+32]
	058 Move X21, [X31+40]
	059 Move X30, [X31+16]
	060 Move S4, 1
	061 NotImplemented "Instruction FDIV not yet implemented."
	062 Add S5, S8, S4
	063 Move S4, W31
	064 Move X2, X31
	065 Move D9, [X31+64]
	066 Move D8, [X31+72]
	067 Call GUIStyle.GetCursorStringIndex, X0, X1, X2, X3
	068 Return X0
	069 Call 0x1C17F20

Method: System.Int32 GetGraphicalLineEnd(System.Int32 p)

Disassembly:
	0x03C818B8 CMP W20, W21
	0x03C818BC B.LE 0x3C818FC
	0x03C818C0 LDP W8, W1, [X19 + 0x50]
	0x03C818C4 CMP W8, W1
	0x03C818C8 B.GE 0x3C818FC
	0x03C818CC MOV X0, X19
	0x03C818D0 LDP X20, X19, [X31 + 0x10]
	0x03C818D4 LDP X30, X21, [X31], #0x20
	0x03C818D8 B 0x3C7E6FC
	0x03C818DC MOV X0, X19
	0x03C818E0 MOV W1, W31
	0x03C818E4 BL 0x3C7E6FC
	0x03C818E8 MOV X0, X19
	0x03C818EC LDP X20, X19, [X31 + 0x10]
	0x03C818F0 MOV W1, W31
	0x03C818F4 LDP X30, X21, [X31], #0x20
	0x03C818F8 B 0x3C7E75C
	0x03C818FC LDP X20, X19, [X31 + 0x10]
	0x03C81900 LDP X30, X21, [X31], #0x20
	0x03C81904 RET
	0x03C81908 BL 0x1C16F20
	0x03C8190C STP X30, X21, [X31 - 0x20]!
	0x03C81910 STP X20, X19, [X31 + 0x10]
	0x03C81914 LDP W20, W8, [X0 + 0x50]
	0x03C81918 MOV X19, X0
	0x03C8191C CMP W20, W8
	0x03C81920 CSET W2, LT
	0x03C81924 MOV W1, W20
	0x03C81928 CSET W21, GE
	0x03C8192C BL 0x3C80E8C
	0x03C81930 MOV W1, W0
	0x03C81934 MOV X0, X19
	0x03C81938 BL 0x3C7E6FC
	0x03C8193C MOV X0, X19
	0x03C81940 MOV W1, W20
	0x03C81944 MOV W2, W21
	0x03C81948 BL 0x3C80E8C
	0x03C8194C MOV W1, W0
	0x03C81950 MOV X0, X19
	0x03C81954 BL 0x3C7E75C
	0x03C81958 MOVN W8, 0x0
	0x03C8195C MOVZ W9, 0x1
	0x03C81960 STRB W31, [X19 + 0x29]
	0x03C81964 STR W8, [X19 + 0x78]
	0x03C81968 STRB W9, [X19 + 0x75]
	0x03C8196C LDP X20, X19, [X31 + 0x10]
	0x03C81970 LDP X30, X21, [X31], #0x20
	0x03C81974 RET
	0x03C81978 STP X30, X19, [X31 - 0x10]!
	0x03C8197C MOV X19, X0
	0x03C81980 LDR X0, [X0 + 0x38]
	0x03C81984 MOVN W8, 0x0
	0x03C81988 STRB W31, [X19 + 0x29]
	0x03C8198C STR W8, [X19 + 0x78]
	0x03C81990 CBZ X0, 0x3C81A0C
	0x03C81994 MOV X1, X31
	0x03C81998 BL 0x3C69940
	0x03C8199C CBZ X0, 0x3C81A0C
	0x03C819A0 LDR W8, [X0 + 0x10]

ISIL:
	001 Move [X31-64], D10
	002 Move [X31+8], D9
	003 Move [X31+16], D8
	004 Move [X31+24], X30
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X21, 0x766000
	010 Move W8, [X21+2489]
	011 Move W20, W1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x49F000
	018 Move X0, [X0+1480]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+2489], W8
	022 Move X8, [X19]
	023 Move X21, [X19+32]
	024 Move X0, X19
	025 Move X9, [X8+376]
	026 Move X1, [X8+384]
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Compare X21, 0
	029 JumpIfEqual {74}
	030 Move X1, [X19+56]
	031 Move X22, 0x49F000
	032 Move X22, [X22+1480]
	033 Move X0, X21
	034 Move W2, W20
	035 Move X3, X31
	036 Call GUIStyle.GetCursorPixelPosition, X0, X1, X2, X3
	037 Move X0, [X22]
	038 Move V8, V0
	039 Move V9, V1
	040 Move W8, [X0+224]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Move X0, X31
	045 Call GUIUtility.get_pixelsPerPoint
	046 Move X8, [X19]
	047 Move X20, [X19+32]
	048 Move X0, X19
	049 Move V10, V0
	050 Move X9, [X8+376]
	051 Move X1, [X8+384]
	052 NotImplemented "Instruction BLR not yet implemented."
	053 Compare X20, 0
	054 JumpIfEqual {74}
	055 Move X8, -51994624
	056 Move V4, [X8+688]
	057 Move S5, 1
	058 NotImplemented "Instruction FDIV not yet implemented."
	059 Move X1, [X19+56]
	060 Add S4, S8, S4
	061 Add S5, S9, S5
	062 Move X0, X20
	063 Move X20, [X31+48]
	064 Move X19, [X31+56]
	065 Move X22, [X31+32]
	066 Move X21, [X31+40]
	067 Move X30, [X31+24]
	068 Move D9, [X31+8]
	069 Move D8, [X31+16]
	070 Move X2, X31
	071 Move V10, [X31+64]
	072 Call GUIStyle.GetCursorStringIndex, X0, X1, X2, X3
	073 Return X0
	074 Call 0x1C17F20

Method: System.Int32 FindNextSeperator(System.Int32 startPos)

Disassembly:
	0x03C821F0 MOV X20, X0
	0x03C821F4 TBNZ X8, 0x0, 0x3C8220C
	0x03C821F8 ADRP X0, 0x473000
	0x03C821FC LDR X0, [X0 + 0x170]
	0x03C82200 BL 0x1C16CF4
	0x03C82204 MOVZ W8, 0x1
	0x03C82208 STRB W8, [X21 + 0x9C3]
	0x03C8220C TBNZ X19, 0x1F, 0x3C82230
	0x03C82210 LDR X0, [X20 + 0x38]
	0x03C82214 CBZ X0, 0x3C822C4
	0x03C82218 MOV X1, X31
	0x03C8221C BL 0x3C69940
	0x03C82220 CBZ X0, 0x3C822C4
	0x03C82224 LDR W8, [X0 + 0x10]
	0x03C82228 CMP W8, W19
	0x03C8222C B.GE 0x3C82238
	0x03C82230 MOV W8, W31
	0x03C82234 B 0x3C822B4
	0x03C82238 CBZ W19, 0x3C8225C
	0x03C8223C LDR X0, [X20 + 0x38]
	0x03C82240 CBZ X0, 0x3C822C4
	0x03C82244 MOV X1, X31
	0x03C82248 BL 0x3C69940
	0x03C8224C CBZ X0, 0x3C822C4
	0x03C82250 LDR W8, [X0 + 0x10]
	0x03C82254 CMP W8, W19
	0x03C82258 B.NE 0x3C82264
	0x03C8225C MOVZ W8, 0x1
	0x03C82260 B 0x3C822B4
	0x03C82264 LDR X0, [X20 + 0x38]
	0x03C82268 CBZ X0, 0x3C822C4
	0x03C8226C MOV X1, X31
	0x03C82270 BL 0x3C69940
	0x03C82274 CBZ X0, 0x3C822C4
	0x03C82278 MOV W1, W19
	0x03C8227C MOV X2, X31
	0x03C82280 BL 0x3222A1C
	0x03C82284 ADRP X8, 0x473000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, X0
	006 Move X0, [X0+56]
	007 Compare X0, 0
	008 JumpIfEqual {42}
	009 Move W20, W1
	010 Move X1, X31
	011 Call GUIContent.get_text, X0
	012 Compare X0, 0
	013 JumpIfEqual {42}
	014 Move W21, [X0+16]
	015 NotImplemented "Instruction CMP not yet implemented."
	016 Move X0, X19
	017 Move W1, W20
	018 Call TextEditor.ClassifyChar, X0, X1
	019 Compare W0, 0
	020 JumpIfEqual {31}
	021 Move X0, X19
	022 Move W1, W20
	023 Call TextEditor.NextCodePointIndex, X0, X1
	024 Move W20, W0
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X0, X19
	027 Move W1, W20
	028 Call TextEditor.NextCodePointIndex, X0, X1
	029 Move W20, W0
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X0, X19
	032 Move W1, W20
	033 Call TextEditor.ClassifyChar, X0, X1
	034 Compare W0, 0
	035 JumpIfEqual {26}
	036 Move W0, W20
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X30, [X31+32]
	040 Move X21, [X31+40]
	041 Return X0
	042 Call 0x1C17F20

Method: System.Int32 FindPrevSeperator(System.Int32 startPos)

Disassembly:
	0x03C82390 LDR X0, [X0 + 0x28]
	0x03C82394 CBZ X0, 0x3C823B0
	0x03C82398 MOV X1, X31
	0x03C8239C BL 0x3CC98D0
	0x03C823A0 CBZ X0, 0x3C823B0
	0x03C823A4 LDR X0, [X0 + 0x30]
	0x03C823A8 LDR X30, [X31], #0x10
	0x03C823AC RET
	0x03C823B0 BL 0x1C16F20
	0x03C823B4 STR X30, [X31 - 0x20]!
	0x03C823B8 STP X20, X19, [X31 + 0x10]
	0x03C823BC MOV W20, W1
	0x03C823C0 MOV X19, X0
	0x03C823C4 BL 0x3C822F8
	0x03C823C8 CMP W0, W20
	0x03C823CC CSEL W8, W0, W20, LT
	0x03C823D0 CMP W20, 0x0
	0x03C823D4 CSEL W20, W31, W8, LT
	0x03C823D8 MOV X0, X19
	0x03C823DC MOV W1, W20
	0x03C823E0 BL 0x3C8445C
	0x03C823E4 TBZ X0, 0x0, 0x3C823F8
	0x03C823E8 MOV W0, W20
	0x03C823EC LDP X20, X19, [X31 + 0x10]
	0x03C823F0 LDR X30, [X31], #0x20
	0x03C823F4 RET
	0x03C823F8 MOV X0, X19
	0x03C823FC MOV W1, W20
	0x03C82400 LDP X20, X19, [X31 + 0x10]
	0x03C82404 LDR X30, [X31], #0x20
	0x03C82408 B 0x3C7DDC8
	0x03C8240C STR X30, [X31 - 0x30]!
	0x03C82410 STP X22, X21, [X31 + 0x10]
	0x03C82414 STP X20, X19, [X31 + 0x20]
	0x03C82418 ADRP X20, 0x764000
	0x03C8241C LDRB W8, [X20 + 0x9C6]
	0x03C82420 MOV X19, X0
	0x03C82424 TBNZ X8, 0x0, 0x3C8243C
	0x03C82428 ADRP X0, 0x471000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Call TextEditor.PreviousCodePointIndex, X0, X1
	006 Move W20, W0
	007 NotImplemented "Instruction CMP not yet implemented."
	008 Move X0, X19
	009 Move W1, W20
	010 Call TextEditor.ClassifyChar, X0, X1
	011 Compare W0, 0
	012 JumpIfEqual {20}
	013 Move X0, X19
	014 Move W1, W20
	015 Move X0, X19
	016 Move W1, W20
	017 Call TextEditor.PreviousCodePointIndex, X0, X1
	018 Move W20, W0
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move X0, X19
	021 Move W1, W20
	022 Call TextEditor.ClassifyChar, X0, X1
	023 Compare W0, 0
	024 JumpIfEqual {15}
	025 Compare W20, 0
	026 JumpIfEqual {39}
	027 Move X0, X19
	028 Move W1, W20
	029 Call TextEditor.ClassifyChar, X0, X1
	030 Compare W0, 0
	031 JumpIfEqual {39}
	032 Move X0, X19
	033 Move W1, W20
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X30, [X31+32]
	037 Call TextEditor.NextCodePointIndex, X0, X1
	038 Return X0
	039 Move W0, W20
	040 Move X20, [X31+16]
	041 Move X19, [X31+24]
	042 Move X30, [X31+32]
	043 Return X0

Method: System.Void MoveWordRight()

Disassembly:
	0x03C8242C LDR X0, [X0 + 0x988]
	0x03C82430 BL 0x1C16CF4
	0x03C82434 MOVZ W8, 0x1
	0x03C82438 STRB W8, [X20 + 0x9C6]
	0x03C8243C LDR W1, [X19 + 0x34]
	0x03C82440 MOV X0, X19
	0x03C82444 BL 0x3C823B4
	0x03C82448 LDR W1, [X19 + 0x38]
	0x03C8244C MOV W20, W0
	0x03C82450 MOV X0, X19
	0x03C82454 BL 0x3C823B4
	0x03C82458 CMP W20, W0
	0x03C8245C B.NE 0x3C8247C
	0x03C82460 ADRP X8, 0x471000
	0x03C82464 LDR X8, [X8 + 0x988]
	0x03C82468 LDP X20, X19, [X31 + 0x20]
	0x03C8246C LDP X22, X21, [X31 + 0x10]
	0x03C82470 LDR X0, [X8]
	0x03C82474 LDR X30, [X31], #0x30
	0x03C82478 RET
	0x03C8247C LDR W1, [X19 + 0x34]
	0x03C82480 MOV X0, X19
	0x03C82484 BL 0x3C823B4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W8, [X0+80]
	005 Move W9, [X0+84]
	006 Move X19, X0
	007 NotImplemented "Instruction CMP not yet implemented."
	008 NotImplemented "Instruction CSEL not yet implemented."
	009 Call TextEditor.set_cursorIndex, X0, X1
	010 Move W1, [X19+80]
	011 Move X0, X19
	012 Call TextEditor.FindNextSeperator, X0, X1
	013 Move W20, W0
	014 Move X0, X19
	015 Move W1, W20
	016 Call TextEditor.set_selectIndex, X0, X1
	017 Move X0, X19
	018 Move W1, W20
	019 Call TextEditor.set_cursorIndex, X0, X1
	020 Move TEMP, 0
	021 Not TEMP
	022 Move W8, TEMP
	023 Move [X19+41], W31
	024 Move [X19+120], W8
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Return 

Method: System.Void MoveToStartOfNextWord()

Disassembly:
	0x03C82488 LDR W1, [X19 + 0x38]
	0x03C8248C MOV W21, W0
	0x03C82490 MOV X0, X19
	0x03C82494 BL 0x3C823B4
	0x03C82498 LDR X20, [X19 + 0x28]
	0x03C8249C CMP W21, W0
	0x03C824A0 B.GE 0x3C824C8
	0x03C824A4 LDR W1, [X19 + 0x34]
	0x03C824A8 MOV X0, X19
	0x03C824AC BL 0x3C823B4
	0x03C824B0 LDR W1, [X19 + 0x38]
	0x03C824B4 MOV W21, W0
	0x03C824B8 MOV X0, X19
	0x03C824BC BL 0x3C823B4
	0x03C824C0 LDR W1, [X19 + 0x34]
	0x03C824C4 B 0x3C824E8
	0x03C824C8 LDR W1, [X19 + 0x38]
	0x03C824CC MOV X0, X19
	0x03C824D0 BL 0x3C823B4
	0x03C824D4 LDR W1, [X19 + 0x34]
	0x03C824D8 MOV W21, W0
	0x03C824DC MOV X0, X19
	0x03C824E0 BL 0x3C823B4
	0x03C824E4 LDR W1, [X19 + 0x38]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W1, [X0+80]
	005 Move W8, [X0+84]
	006 Move X19, X0
	007 Move TEMP, 0
	008 Not TEMP
	009 Move W9, TEMP
	010 Move [X0+41], W31
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Move [X0+120], W9
	013 Move X0, X19
	014 Call TextEditor.FindStartOfNextWord, X0, X1
	015 Move W20, W0
	016 Move X0, X19
	017 Move W1, W20
	018 Call TextEditor.set_selectIndex, X0, X1
	019 Move X0, X19
	020 Move W1, W20
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X30, [X31+32]
	024 Call TextEditor.set_cursorIndex, X0, X1
	025 Return 
	026 Move X0, X19
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Call TextEditor.MoveRight, X0
	031 Return 

Method: System.Void MoveToEndOfPreviousWord()

Disassembly:
	0x03C824E8 MOV W22, W0
	0x03C824EC MOV X0, X19
	0x03C824F0 BL 0x3C823B4
	0x03C824F4 CBZ X20, 0x3C82518
	0x03C824F8 SUB W2, W22, W0
	0x03C824FC MOV X0, X20
	0x03C82500 MOV W1, W21
	0x03C82504 LDP X20, X19, [X31 + 0x20]
	0x03C82508 LDP X22, X21, [X31 + 0x10]
	0x03C8250C MOV X3, X31
	0x03C82510 LDR X30, [X31], #0x30
	0x03C82514 B 0x3CCAD70
	0x03C82518 BL 0x1C16F20
	0x03C8251C STR X30, [X31 - 0x20]!
	0x03C82520 STP X20, X19, [X31 + 0x10]
	0x03C82524 MOV X19, X1
	0x03C82528 MOVN W8, 0x0
	0x03C8252C MOVI V0.2D, 0x0
	0x03C82530 MOV X1, X31
	0x03C82534 MOV X20, X0
	0x03C82538 STRB W31, [X0 + 0x10]
	0x03C8253C STRH W31, [X0 + 0x18]
	0x03C82540 STRB W31, [X0 + 0x1A]
	0x03C82544 STR W8, [X0 + 0x14]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W1, [X0+80]
	005 Move W8, [X0+84]
	006 Move X19, X0
	007 Move TEMP, 0
	008 Not TEMP
	009 Move W9, TEMP
	010 Move [X0+41], W31
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Move [X0+120], W9
	013 Move X0, X19
	014 Call TextEditor.FindEndOfPreviousWord, X0, X1
	015 Move W20, W0
	016 Move X0, X19
	017 Move W1, W20
	018 Call TextEditor.set_selectIndex, X0, X1
	019 Move X0, X19
	020 Move W1, W20
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X30, [X31+32]
	024 Call TextEditor.set_cursorIndex, X0, X1
	025 Return 
	026 Move X0, X19
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Call TextEditor.MoveLeft, X0
	031 Return 

Method: System.Void SelectToStartOfNextWord()

Disassembly:
	0x03C82548 STUR D0, [X0 + 0x1C]
	0x03C8254C STUR D0, [X0 + 0x34]
	0x03C82550 BL 0x33BDD8C
	0x03C82554 STR X19, [X20 + 0x28]
	0x03C82558 LDP X20, X19, [X31 + 0x10]
	0x03C8255C LDR X30, [X31], #0x20
	0x03C82560 RET
	0x03C82564 STP X30, X23, [X31 - 0x30]!
	0x03C82568 STP X22, X21, [X31 + 0x10]
	0x03C8256C STP X20, X19, [X31 + 0x20]
	0x03C82570 ADRP X21, 0x764000

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W1, [X0+80]
	004 Move TEMP, 0
	005 Not TEMP
	006 Move W8, TEMP
	007 Move X19, X0
	008 Move [X0+41], W31
	009 Move [X0+120], W8
	010 Call TextEditor.FindStartOfNextWord, X0, X1
	011 Move W1, W0
	012 Move X0, X19
	013 Move X30, [X31+16]
	014 Move X19, [X31+24]
	015 Call TextEditor.set_cursorIndex, X0, X1
	016 Return 

Method: System.Void SelectToEndOfPreviousWord()

Disassembly:
	0x03C82574 LDRB W8, [X21 + 0x9C7]
	0x03C82578 MOV X19, X1
	0x03C8257C MOV X20, X0
	0x03C82580 TBNZ X8, 0x0, 0x3C825B0
	0x03C82584 ADRP X0, 0x4DE000
	0x03C82588 LDR X0, [X0 + 0x7B0]
	0x03C8258C BL 0x1C16CF4
	0x03C82590 ADRP X0, 0x4DE000
	0x03C82594 LDR X0, [X0 + 0x7B8]
	0x03C82598 BL 0x1C16CF4
	0x03C8259C ADRP X0, 0x4DE000

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W1, [X0+80]
	004 Move TEMP, 0
	005 Not TEMP
	006 Move W8, TEMP
	007 Move X19, X0
	008 Move [X0+41], W31
	009 Move [X0+120], W8
	010 Call TextEditor.FindEndOfPreviousWord, X0, X1
	011 Move W1, W0
	012 Move X0, X19
	013 Move X30, [X31+16]
	014 Move X19, [X31+24]
	015 Call TextEditor.set_cursorIndex, X0, X1
	016 Return 

Method: UnityEngine.TextEditor/CharacterType ClassifyChar(System.Int32 index)

Disassembly:
	0x03C82288 LDR X8, [X8 + 0x170]
	0x03C8228C MOV W19, W0
	0x03C82290 LDR X8, [X8]
	0x03C82294 LDR W9, [X8 + 0xE0]
	0x03C82298 CBNZ W9, 0x3C822A4
	0x03C8229C MOV X0, X8
	0x03C822A0 BL 0x1C16DFC
	0x03C822A4 MOV W0, W19
	0x03C822A8 MOV X1, X31
	0x03C822AC BL 0x331C0FC
	0x03C822B0 EOR W8, W0, 0x1
	0x03C822B4 LDP X20, X19, [X31 + 0x10]
	0x03C822B8 AND W0, W8, 0x1
	0x03C822BC LDP X30, X21, [X31], #0x20
	0x03C822C0 RET
	0x03C822C4 BL 0x1C16F20
	0x03C822C8 LDRB W0, [X0 + 0x30]
	0x03C822CC RET
	0x03C822D0 STR X30, [X31 - 0x10]!
	0x03C822D4 LDR X0, [X0 + 0x28]
	0x03C822D8 CBZ X0, 0x3C822F4
	0x03C822DC MOV X1, X31
	0x03C822E0 BL 0x3CC98D0
	0x03C822E4 CBZ X0, 0x3C822F4
	0x03C822E8 LDR W0, [X0 + 0x10]
	0x03C822EC LDR X30, [X31], #0x10
	0x03C822F0 RET
	0x03C822F4 BL 0x1C16F20
	0x03C822F8 STR X30, [X31 - 0x20]!
	0x03C822FC STP X20, X19, [X31 + 0x10]
	0x03C82300 MOV X19, X0
	0x03C82304 BL 0x3C822D0
	0x03C82308 CMP W0, 0x1
	0x03C8230C B.LT 0x3C82374
	0x03C82310 LDR X0, [X19 + 0x28]
	0x03C82314 CBZ X0, 0x3C82384
	0x03C82318 MOV X1, X31
	0x03C8231C BL 0x3CC98D0
	0x03C82320 CBZ X0, 0x3C82384
	0x03C82324 LDR X20, [X0 + 0x30]
	0x03C82328 MOV X0, X19
	0x03C8232C BL 0x3C822D0
	0x03C82330 CBZ X20, 0x3C82384
	0x03C82334 LDR W9, [X20 + 0x18]
	0x03C82338 SUB W8, W0, 0x1
	0x03C8233C CMP W8, W9
	0x03C82340 B.CS 0x3C82388
	0x03C82344 MOVZ W9, 0x188
	0x03C82348 SMADDL X8, X8, X9, X20
	0x03C8234C LDRH W8, [X8 + 0x20]
	0x03C82350 MOVZ W9, 0x200B
	0x03C82354 CMP W8, W9
	0x03C82358 B.NE 0x3C82374
	0x03C8235C MOV X0, X19
	0x03C82360 BL 0x3C822D0
	0x03C82364 LDP X20, X19, [X31 + 0x10]
	0x03C82368 SUB W0, W0, 0x1
	0x03C8236C LDR X30, [X31], #0x20
	0x03C82370 RET
	0x03C82374 MOV X0, X19
	0x03C82378 LDP X20, X19, [X31 + 0x10]
	0x03C8237C LDR X30, [X31], #0x20
	0x03C82380 B 0x3C822D0
	0x03C82384 BL 0x1C16F20
	0x03C82388 BL 0x1C16F28
	0x03C8238C STR X30, [X31 - 0x10]!

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x765000
	007 Move W8, [X21+2490]
	008 Move W19, W1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x474000
	015 Move X0, [X0+368]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2490], W8
	019 Move X0, [X20+56]
	020 Compare X0, 0
	021 JumpIfEqual {82}
	022 Move X22, 0x474000
	023 Move X22, [X22+368]
	024 Move X1, X31
	025 Call GUIContent.get_text, X0
	026 Move X8, [X22]
	027 Move X21, X0
	028 Move W9, [X8+224]
	029 Compare W9, 0
	030 JumpIfNotEqual {33}
	031 Move X0, X8
	032 Call 0x1C17DFC
	033 Move X0, X21
	034 Move W1, W19
	035 Move X2, X31
	036 Call Char.IsWhiteSpace, X0, X1
	037 Move TEMP, X0
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfNotEqual {42}
	041 Move W0, 3
	042 Move X0, [X20+56]
	043 Compare X0, 0
	044 JumpIfEqual {82}
	045 Move X1, X31
	046 Call GUIContent.get_text, X0
	047 Move X8, [X22]
	048 Move X21, X0
	049 Move W9, [X8+224]
	050 Compare W9, 0
	051 JumpIfNotEqual {54}
	052 Move X0, X8
	053 Call 0x1C17DFC
	054 Move X0, X21
	055 Move W1, W19
	056 Move X2, X31
	057 Call Char.IsLetterOrDigit, X0, X1
	058 Move TEMP, X0
	059 And TEMP, TEMP, 1
	060 Compare TEMP, 1
	061 JumpIfEqual {74}
	062 Move X0, [X20+56]
	063 Compare X0, 0
	064 JumpIfEqual {82}
	065 Move X1, X31
	066 Call GUIContent.get_text, X0
	067 Compare X0, 0
	068 JumpIfEqual {82}
	069 Move W1, W19
	070 Move X2, X31
	071 Call String.get_Chars, X0, X1
	072 And W8, W0, 0xFFFF
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move W0, W31
	075 Move W0, 1
	076 Move X20, [X31+32]
	077 Move X19, [X31+40]
	078 Move X22, [X31+16]
	079 Move X21, [X31+24]
	080 Move X30, [X31+48]
	081 Return X0
	082 Call 0x1C17F20

Method: System.Int32 FindStartOfNextWord(System.Int32 p)

Disassembly:
	0x03C80DD8 CBZ X0, 0x3C80E88
	0x03C80DDC MOV X1, X31
	0x03C80DE0 BL 0x3C69940
	0x03C80DE4 CBZ X0, 0x3C80E88
	0x03C80DE8 LDR W8, [X20]
	0x03C80DEC MOVZ W1, 0xA
	0x03C80DF0 MOV X3, X31
	0x03C80DF4 SUB W8, W8, 0x2
	0x03C80DF8 BIC W2, W8, W8, 0x1F
	0x03C80DFC BL 0x322C678
	0x03C80E00 ADD W1, W0, 0x1
	0x03C80E04 B 0x3C80E6C
	0x03C80E08 MOV W1, W31
	0x03C80E0C MOV X0, X19
	0x03C80E10 BL 0x3C7E6FC
	0x03C80E14 LDR X0, [X19 + 0x38]
	0x03C80E18 CBZ X0, 0x3C80E88
	0x03C80E1C MOV X1, X31
	0x03C80E20 BL 0x3C69940
	0x03C80E24 LDR X8, [X19 + 0x38]
	0x03C80E28 CBZ X8, 0x3C80E88
	0x03C80E2C MOV X21, X0
	0x03C80E30 MOV X0, X8
	0x03C80E34 MOV X1, X31
	0x03C80E38 BL 0x3C69940
	0x03C80E3C CBZ X0, 0x3C80E88
	0x03C80E40 CBZ X21, 0x3C80E88
	0x03C80E44 LDR W8, [X0 + 0x10]
	0x03C80E48 LDR W9, [X20]
	0x03C80E4C MOVZ W1, 0xA
	0x03C80E50 MOV X0, X21
	0x03C80E54 SUB W8, W8, 0x1
	0x03C80E58 CMP W8, W9
	0x03C80E5C CSEL W2, W8, W9, LT
	0x03C80E60 MOV X3, X31
	0x03C80E64 BL 0x322C678
	0x03C80E68 MOV W1, W0
	0x03C80E6C MOV X0, X19
	0x03C80E70 BL 0x3C7E75C
	0x03C80E74 LDP X20, X19, [X31 + 0x30]
	0x03C80E78 LDP X30, X21, [X31 + 0x20]
	0x03C80E7C LDP D9, D8, [X31 + 0x10]
	0x03C80E80 ADD X31, X31, 0x40
	0x03C80E84 RET
	0x03C80E88 BL 0x1C16F20
	0x03C80E8C STR X30, [X31 - 0x30]!
	0x03C80E90 STP X22, X21, [X31 + 0x10]
	0x03C80E94 STP X20, X19, [X31 + 0x20]
	0x03C80E98 MOV X19, X0
	0x03C80E9C LDR X0, [X0 + 0x38]
	0x03C80EA0 CBZ X0, 0x3C81004
	0x03C80EA4 MOV W20, W1
	0x03C80EA8 MOV X1, X31
	0x03C80EAC MOV W21, W2
	0x03C80EB0 BL 0x3C69940
	0x03C80EB4 CBZ X0, 0x3C81004
	0x03C80EB8 LDR W8, [X0 + 0x10]
	0x03C80EBC CBZ W8, 0x3C80FB0
	0x03C80EC0 LDR X0, [X19 + 0x38]
	0x03C80EC4 CBZ X0, 0x3C81004
	0x03C80EC8 MOV X1, X31
	0x03C80ECC BL 0x3C69940
	0x03C80ED0 CBZ X0, 0x3C81004
	0x03C80ED4 LDR W8, [X0 + 0x10]
	0x03C80ED8 CMP W8, W20
	0x03C80EDC B.NE 0x3C80EF0
	0x03C80EE0 MOV X0, X19
	0x03C80EE4 MOV W1, W20
	0x03C80EE8 BL 0x3C80200
	0x03C80EEC MOV W20, W0
	0x03C80EF0 MOV X0, X19
	0x03C80EF4 MOV W1, W20
	0x03C80EF8 BL 0x3C81288
	0x03C80EFC MOV W22, W0
	0x03C80F00 MOV X0, X19
	0x03C80F04 CBZ W21, 0x3C80F24
	0x03C80F08 CMP W21, 0x1
	0x03C80F0C B.EQ 0x3C80F6C
	0x03C80F10 MOV W1, W20
	0x03C80F14 BL 0x3C81288
	0x03C80F18 CMP W0, W22
	0x03C80F1C B.EQ 0x3C80F00
	0x03C80F20 B 0x3C80F94
	0x03C80F24 MOV W1, W20
	0x03C80F28 BL 0x3C80060
	0x03C80F2C LDR X8, [X19 + 0x38]
	0x03C80F30 CBZ X8, 0x3C81004
	0x03C80F34 MOV W20, W0
	0x03C80F38 MOV X0, X8
	0x03C80F3C MOV X1, X31
	0x03C80F40 BL 0x3C69940
	0x03C80F44 CBZ X0, 0x3C81004
	0x03C80F48 LDR W8, [X0 + 0x10]
	0x03C80F4C CMP W20, W8
	0x03C80F50 B.EQ 0x3C80FE8
	0x03C80F54 MOV X0, X19
	0x03C80F58 MOV W1, W20
	0x03C80F5C BL 0x3C81288
	0x03C80F60 CMP W0, W22
	0x03C80F64 B.EQ 0x3C80F00
	0x03C80F68 B 0x3C80FB4
	0x03C80F6C MOV W1, W20
	0x03C80F70 BL 0x3C80200
	0x03C80F74 MOV W20, W0
	0x03C80F78 CBZ W0, 0x3C80FC8
	0x03C80F7C MOV X0, X19
	0x03C80F80 MOV W1, W20
	0x03C80F84 BL 0x3C81288
	0x03C80F88 CMP W0, W22
	0x03C80F8C B.EQ 0x3C80F00
	0x03C80F90 B 0x3C80F98
	0x03C80F94 CBZ W21, 0x3C80FB4
	0x03C80F98 MOV X0, X19
	0x03C80F9C MOV W1, W20
	0x03C80FA0 LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X0
	007 Move X0, [X0+56]
	008 Compare X0, 0
	009 JumpIfEqual {119}
	010 Move W20, W1
	011 Move X1, X31
	012 Call GUIContent.get_text, X0
	013 Compare X0, 0
	014 JumpIfEqual {119}
	015 Move W22, [X0+16]
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Move W21, W20
	018 Move X0, X19
	019 Move W1, W20
	020 Call TextEditor.ClassifyChar, X0, X1
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move X0, [X19+56]
	023 Compare X0, 0
	024 JumpIfEqual {119}
	025 Move X1, X31
	026 Call GUIContent.get_text, X0
	027 Compare X0, 0
	028 JumpIfEqual {119}
	029 Move W1, W20
	030 Move X2, X31
	031 Call String.get_Chars, X0, X1
	032 And W8, W0, 0xFFFF
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X0, [X19+56]
	035 Compare X0, 0
	036 JumpIfEqual {119}
	037 Move X1, X31
	038 Call GUIContent.get_text, X0
	039 Compare X0, 0
	040 JumpIfEqual {119}
	041 Move W1, W20
	042 Move X2, X31
	043 Call String.get_Chars, X0, X1
	044 And W8, W0, 0xFFFF
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move X0, X19
	047 Move W1, W20
	048 Move X20, [X31+32]
	049 Move X19, [X31+40]
	050 Move X22, [X31+16]
	051 Move X21, [X31+24]
	052 Move X30, [X31+48]
	053 Call TextEditor.NextCodePointIndex, X0, X1
	054 Return X0
	055 Move W21, W0
	056 Move X0, X19
	057 Move W1, W20
	058 Call TextEditor.NextCodePointIndex, X0, X1
	059 Move W20, W0
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move X0, X19
	062 Move W1, W20
	063 Call TextEditor.ClassifyChar, X0, X1
	064 NotImplemented "Instruction CMP not yet implemented."
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Move W21, W22
	067 Move W0, W21
	068 Move X20, [X31+32]
	069 Move X19, [X31+40]
	070 Move X22, [X31+16]
	071 Move X21, [X31+24]
	072 Move X30, [X31+48]
	073 Return X0
	074 Move X0, [X19+56]
	075 Compare X0, 0
	076 JumpIfEqual {119}
	077 Move X1, X31
	078 Call GUIContent.get_text, X0
	079 Compare X0, 0
	080 JumpIfEqual {119}
	081 Move W1, W20
	082 Move X2, X31
	083 Call String.get_Chars, X0, X1
	084 And W8, W0, 0xFFFF
	085 NotImplemented "Instruction CMP not yet implemented."
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Move W21, W20
	088 Move X0, X19
	089 Move W1, W21
	090 Call TextEditor.ClassifyChar, X0, X1
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Move X0, X19
	093 Move W1, W21
	094 Call TextEditor.NextCodePointIndex, X0, X1
	095 Move W21, W0
	096 NotImplemented "Instruction CMP not yet implemented."
	097 Move X0, [X19+56]
	098 Compare X0, 0
	099 JumpIfEqual {119}
	100 Move X1, X31
	101 Call GUIContent.get_text, X0
	102 Compare X0, 0
	103 JumpIfEqual {119}
	104 Move W1, W20
	105 Move X2, X31
	106 Call String.get_Chars, X0, X1
	107 And W8, W0, 0xFFFF
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Move X0, [X19+56]
	110 Compare X0, 0
	111 JumpIfEqual {119}
	112 Move X1, X31
	113 Call GUIContent.get_text, X0
	114 Compare X0, 0
	115 JumpIfEqual {119}
	116 Move W1, W20
	117 Move X2, X31
	118 Call String.get_Chars, X0, X1
	119 Call 0x1C17F20

Method: System.Int32 FindEndOfPreviousWord(System.Int32 p)

Disassembly:
	0x03C80C60 MOV V8.16B, V1.16B
	0x03C80C64 LDP X9, X1, [X8 + 0x178]
	0x03C80C68 MOV X19, X0
	0x03C80C6C MOV V9.16B, V0.16B
	0x03C80C70 BLR X9
	0x03C80C74 CBZ X20, 0x3C80E88
	0x03C80C78 LDP S6, S4, [X19 + 0x2C]
	0x03C80C7C LDR X1, [X19 + 0x38]
	0x03C80C80 MOV X0, X20
	0x03C80C84 MOV X2, X31
	0x03C80C88 FADD S5, S8, S4
	0x03C80C8C FADD S4, S9, S6
	0x03C80C90 BL 0x3C7502C
	0x03C80C94 MOV W1, W0
	0x03C80C98 CBZ W21, 0x3C80D14
	0x03C80C9C STR W1, [X31 + 0xC]
	0x03C80CA0 ADD X1, X31, 0xC
	0x03C80CA4 MOV X0, X19
	0x03C80CA8 BL 0x3C7E338
	0x03C80CAC ADD X20, X19, 0x70
	0x03C80CB0 MOV X0, X19
	0x03C80CB4 MOV X1, X20
	0x03C80CB8 BL 0x3C7E338
	0x03C80CBC LDR W21, [X31 + 0xC]
	0x03C80CC0 LDR W8, [X19 + 0x70]
	0x03C80CC4 LDRB W9, [X19 + 0x74]
	0x03C80CC8 CMP W21, W8
	0x03C80CCC CBZ W9, 0x3C80D20
	0x03C80CD0 B.GE 0x3C80D50
	0x03C80CD4 CMP W21, 0x1
	0x03C80CD8 B.LT 0x3C80E08
	0x03C80CDC LDR X0, [X19 + 0x38]
	0x03C80CE0 CBZ X0, 0x3C80E88
	0x03C80CE4 MOV X1, X31
	0x03C80CE8 BL 0x3C69940
	0x03C80CEC CBZ X0, 0x3C80E88
	0x03C80CF0 CMP W21, 0x2
	0x03C80CF4 MOVZ W8, 0x2
	0x03C80CF8 CSEL W8, W21, W8, GT
	0x03C80CFC SUB W2, W8, 0x2
	0x03C80D00 MOVZ W1, 0xA
	0x03C80D04 MOV X3, X31
	0x03C80D08 BL 0x322C678
	0x03C80D0C ADD W1, W0, 0x1
	0x03C80D10 B 0x3C80E0C
	0x03C80D14 MOV X0, X19
	0x03C80D18 BL 0x3C7E6FC
	0x03C80D1C B 0x3C80E74
	0x03C80D20 B.GE 0x3C80D84
	0x03C80D24 MOVZ W2, 0x1
	0x03C80D28 MOV X0, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Compare W1, 0
	006 JumpIfEqual {43}
	007 Move X19, X0
	008 Call TextEditor.PreviousCodePointIndex, X0, X1
	009 Move W20, W0
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Move X0, [X19+56]
	012 Compare X0, 0
	013 JumpIfEqual {50}
	014 Move X1, X31
	015 Call GUIContent.get_text, X0
	016 Compare X0, 0
	017 JumpIfEqual {50}
	018 Move W1, W20
	019 Move X2, X31
	020 Call String.get_Chars, X0, X1
	021 And W8, W0, 0xFFFF
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move X0, X19
	024 Move W1, W20
	025 Move X0, X19
	026 Move W1, W20
	027 Call TextEditor.ClassifyChar, X0, X1
	028 NotImplemented "Instruction CMP not yet implemented."
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move W21, W0
	031 Move X0, X19
	032 Move W1, W20
	033 Call TextEditor.PreviousCodePointIndex, X0, X1
	034 Move W1, W0
	035 Move X0, X19
	036 Call TextEditor.ClassifyChar, X0, X1
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X0, X19
	039 Move W1, W20
	040 Call TextEditor.PreviousCodePointIndex, X0, X1
	041 Move W20, W0
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move W20, W31
	044 Move W0, W20
	045 Move X20, [X31+16]
	046 Move X19, [X31+24]
	047 Move X30, [X31+32]
	048 Move X21, [X31+40]
	049 Return X0
	050 Call 0x1C17F20

Method: System.Void MoveWordLeft()

Disassembly:
	0x03C825A0 LDR X0, [X0 + 0x7C0]
	0x03C825A4 BL 0x1C16CF4
	0x03C825A8 MOVZ W8, 0x1
	0x03C825AC STRB W8, [X21 + 0x9C7]
	0x03C825B0 BL 0x3C82670
	0x03C825B4 CBZ X19, 0x3C8266C
	0x03C825B8 ADRP X23, 0x4DE000
	0x03C825BC LDR X23, [X23 + 0x7C0]
	0x03C825C0 MOV X0, X19
	0x03C825C4 MOV X1, X31
	0x03C825C8 BL 0x3C62EF0
	0x03C825CC MOV W21, W0
	0x03C825D0 MOV X0, X19
	0x03C825D4 MOV X1, X31
	0x03C825D8 BL 0x3C62EF0
	0x03C825DC AND W1, W0, 0xFFFFFFDF

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W8, [X0+80]
	004 Move W9, [X0+84]
	005 Move X19, X0
	006 NotImplemented "Instruction CMP not yet implemented."
	007 NotImplemented "Instruction CSEL not yet implemented."
	008 Call TextEditor.set_cursorIndex, X0, X1
	009 Move W1, [X19+80]
	010 Move X0, X19
	011 Call TextEditor.FindPrevSeperator, X0, X1
	012 Move W1, W0
	013 Move X0, X19
	014 Call TextEditor.set_cursorIndex, X0, X1
	015 Move W1, [X19+80]
	016 Move X0, X19
	017 Move X30, [X31+16]
	018 Move X19, [X31+24]
	019 Call TextEditor.set_selectIndex, X0, X1
	020 Return 

Method: System.Void SelectWordRight()

Disassembly:
	0x03C825E0 MOV X0, X19
	0x03C825E4 MOV X2, X31
	0x03C825E8 BL 0x3C62F2C
	0x03C825EC LDR X8, [X23]
	0x03C825F0 LDR X8, [X8 + 0xB8]
	0x03C825F4 LDR X0, [X8]
	0x03C825F8 CBZ X0, 0x3C8266C
	0x03C825FC ADRP X8, 0x4DE000
	0x03C82600 LDR X8, [X8 + 0x7B0]
	0x03C82604 MOV X1, X19
	0x03C82608 LDR X2, [X8]
	0x03C8260C BL 0x2AA2210
	0x03C82610 MOV W22, W0
	0x03C82614 TBZ X0, 0x0, 0x3C82648
	0x03C82618 LDR X8, [X23]
	0x03C8261C LDR X8, [X8 + 0xB8]
	0x03C82620 LDR X0, [X8]
	0x03C82624 CBZ X0, 0x3C8266C
	0x03C82628 ADRP X8, 0x4DE000
	0x03C8262C LDR X8, [X8 + 0x7B8]
	0x03C82630 MOV X1, X19
	0x03C82634 LDR X2, [X8]
	0x03C82638 BL 0x2AA1F9C
	0x03C8263C MOV W1, W0
	0x03C82640 MOV X0, X20
	0x03C82644 BL 0x3C82A74

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W21, [X0+80]
	006 Move W20, [X0+84]
	007 Move TEMP, 0
	008 Not TEMP
	009 Move W8, TEMP
	010 Move X19, X0
	011 Move [X0+41], W31
	012 Move W1, W21
	013 Move [X0+120], W8
	014 Call TextEditor.set_selectIndex, X0, X1
	015 Move X0, X19
	016 Call TextEditor.MoveWordRight, X0
	017 Move X0, X19
	018 Move W1, W20
	019 Call TextEditor.set_selectIndex, X0, X1
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Move W8, [X19+80]
	022 Move W9, [X19+84]
	023 Move X0, X19
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 NotImplemented "Instruction CSEL not yet implemented."
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call TextEditor.set_cursorIndex, X0, X1
	031 Return 
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Return 

Method: System.Void SelectWordLeft()

Disassembly:
	0x03C82648 MOV X0, X19
	0x03C8264C MOV W1, W21
	0x03C82650 MOV X2, X31
	0x03C82654 BL 0x3C62F2C
	0x03C82658 AND W0, W22, 0x1
	0x03C8265C LDP X20, X19, [X31 + 0x20]
	0x03C82660 LDP X22, X21, [X31 + 0x10]
	0x03C82664 LDP X30, X23, [X31], #0x30
	0x03C82668 RET
	0x03C8266C BL 0x1C16F20
	0x03C82670 SUB X31, X31, 0x70
	0x03C82674 STP X29, X30, [X31 + 0x10]
	0x03C82678 STP X28, X27, [X31 + 0x20]
	0x03C8267C STP X26, X25, [X31 + 0x30]
	0x03C82680 STP X24, X23, [X31 + 0x40]
	0x03C82684 STP X22, X21, [X31 + 0x50]
	0x03C82688 STP X20, X19, [X31 + 0x60]
	0x03C8268C ADRP X19, 0x764000
	0x03C82690 ADRP X20, 0x4DE000
	0x03C82694 LDRB W8, [X19 + 0x9CA]
	0x03C82698 LDR X20, [X20 + 0x7C0]
	0x03C8269C TBNZ X8, 0x0, 0x3C827E0
	0x03C826A0 ADRP X0, 0x4DE000
	0x03C826A4 LDR X0, [X0 + 0x7C8]
	0x03C826A8 BL 0x1C16CF4
	0x03C826AC ADRP X0, 0x4DE000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W21, [X0+80]
	006 Move W20, [X0+84]
	007 Move TEMP, 0
	008 Not TEMP
	009 Move W8, TEMP
	010 Move X19, X0
	011 Move [X0+41], W31
	012 Move W1, W21
	013 Move [X0+120], W8
	014 Call TextEditor.set_selectIndex, X0, X1
	015 Move X0, X19
	016 Call TextEditor.MoveWordLeft, X0
	017 Move X0, X19
	018 Move W1, W20
	019 Call TextEditor.set_selectIndex, X0, X1
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Move W8, [X19+80]
	022 Move W9, [X19+84]
	023 Move X0, X19
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 NotImplemented "Instruction CSEL not yet implemented."
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call TextEditor.set_cursorIndex, X0, X1
	031 Return 
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Return 

Method: System.Void ExpandSelectGraphicalLineStart()

Disassembly:
	0x03C826B0 LDR X0, [X0 + 0x7D0]
	0x03C826B4 BL 0x1C16CF4
	0x03C826B8 ADRP X0, 0x4DE000
	0x03C826BC LDR X0, [X0 + 0x7C0]
	0x03C826C0 BL 0x1C16CF4
	0x03C826C4 ADRP X0, 0x4DE000
	0x03C826C8 LDR X0, [X0 + 0x6F0]
	0x03C826CC BL 0x1C16CF4
	0x03C826D0 ADRP X0, 0x4DE000
	0x03C826D4 LDR X0, [X0 + 0x6F8]
	0x03C826D8 BL 0x1C16CF4
	0x03C826DC ADRP X0, 0x4DE000
	0x03C826E0 LDR X0, [X0 + 0x700]
	0x03C826E4 BL 0x1C16CF4
	0x03C826E8 ADRP X0, 0x4DE000
	0x03C826EC LDR X0, [X0 + 0x708]
	0x03C826F0 BL 0x1C16CF4
	0x03C826F4 ADRP X0, 0x4DE000
	0x03C826F8 LDR X0, [X0 + 0x710]
	0x03C826FC BL 0x1C16CF4
	0x03C82700 ADRP X0, 0x4DE000
	0x03C82704 LDR X0, [X0 + 0x718]
	0x03C82708 BL 0x1C16CF4
	0x03C8270C ADRP X0, 0x4DE000
	0x03C82710 LDR X0, [X0 + 0x720]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W20, [X0+80]
	005 Move W1, [X0+84]
	006 Move X19, X0
	007 Move TEMP, 0
	008 Not TEMP
	009 Move W8, TEMP
	010 Move [X0+41], W31
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Move [X0+120], W8
	013 Move W1, W20
	014 Call TextEditor.GetGraphicalLineStart, X0, X1
	015 Move W1, W0
	016 Move X0, X19
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 Move X30, [X31+32]
	020 Call TextEditor.set_cursorIndex, X0, X1
	021 Return 
	022 Call TextEditor.GetGraphicalLineStart, X0, X1
	023 Move W1, W0
	024 Move X0, X19
	025 Call TextEditor.set_cursorIndex, X0, X1
	026 Move X0, X19
	027 Move W1, W20
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X30, [X31+32]
	031 Call TextEditor.set_selectIndex, X0, X1
	032 Return 

Method: System.Void ExpandSelectGraphicalLineEnd()

Disassembly:
	0x03C82714 BL 0x1C16CF4
	0x03C82718 ADRP X0, 0x4DE000
	0x03C8271C LDR X0, [X0 + 0x628]
	0x03C82720 BL 0x1C16CF4
	0x03C82724 ADRP X0, 0x4DE000
	0x03C82728 LDR X0, [X0 + 0x728]
	0x03C8272C BL 0x1C16CF4
	0x03C82730 ADRP X0, 0x4DE000
	0x03C82734 LDR X0, [X0 + 0x730]
	0x03C82738 BL 0x1C16CF4
	0x03C8273C ADRP X0, 0x4DE000
	0x03C82740 LDR X0, [X0 + 0x738]
	0x03C82744 BL 0x1C16CF4
	0x03C82748 ADRP X0, 0x4DE000
	0x03C8274C LDR X0, [X0 + 0x740]
	0x03C82750 BL 0x1C16CF4
	0x03C82754 ADRP X0, 0x4DE000
	0x03C82758 LDR X0, [X0 + 0x748]
	0x03C8275C BL 0x1C16CF4
	0x03C82760 ADRP X0, 0x4DE000
	0x03C82764 LDR X0, [X0 + 0x750]
	0x03C82768 BL 0x1C16CF4
	0x03C8276C ADRP X0, 0x4DE000
	0x03C82770 LDR X0, [X0 + 0x758]
	0x03C82774 BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W20, [X0+80]
	005 Move W1, [X0+84]
	006 Move X19, X0
	007 Move TEMP, 0
	008 Not TEMP
	009 Move W8, TEMP
	010 Move [X0+41], W31
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Move [X0+120], W8
	013 Move W1, W20
	014 Call TextEditor.GetGraphicalLineEnd, X0, X1
	015 Move W1, W0
	016 Move X0, X19
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 Move X30, [X31+32]
	020 Call TextEditor.set_cursorIndex, X0, X1
	021 Return 
	022 Call TextEditor.GetGraphicalLineEnd, X0, X1
	023 Move W1, W0
	024 Move X0, X19
	025 Call TextEditor.set_cursorIndex, X0, X1
	026 Move X0, X19
	027 Move W1, W20
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X30, [X31+32]
	031 Call TextEditor.set_selectIndex, X0, X1
	032 Return 

Method: System.Void SelectGraphicalLineStart()

Disassembly:
	0x03C82778 ADRP X0, 0x4DE000
	0x03C8277C LDR X0, [X0 + 0x760]
	0x03C82780 BL 0x1C16CF4
	0x03C82784 ADRP X0, 0x4DE000
	0x03C82788 LDR X0, [X0 + 0x768]
	0x03C8278C BL 0x1C16CF4
	0x03C82790 ADRP X0, 0x4DE000
	0x03C82794 LDR X0, [X0 + 0x770]
	0x03C82798 BL 0x1C16CF4
	0x03C8279C ADRP X0, 0x4DE000
	0x03C827A0 LDR X0, [X0 + 0x778]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W1, [X0+80]
	004 Move TEMP, 0
	005 Not TEMP
	006 Move W8, TEMP
	007 Move X19, X0
	008 Move [X0+41], W31
	009 Move [X0+120], W8
	010 Call TextEditor.GetGraphicalLineStart, X0, X1
	011 Move W1, W0
	012 Move X0, X19
	013 Move X30, [X31+16]
	014 Move X19, [X31+24]
	015 Call TextEditor.set_cursorIndex, X0, X1
	016 Return 

Method: System.Void SelectGraphicalLineEnd()

Disassembly:
	0x03C827A4 BL 0x1C16CF4
	0x03C827A8 ADRP X0, 0x4DE000
	0x03C827AC LDR X0, [X0 + 0x780]
	0x03C827B0 BL 0x1C16CF4
	0x03C827B4 ADRP X0, 0x4DE000
	0x03C827B8 LDR X0, [X0 + 0x788]
	0x03C827BC BL 0x1C16CF4
	0x03C827C0 ADRP X0, 0x4DE000
	0x03C827C4 LDR X0, [X0 + 0x790]
	0x03C827C8 BL 0x1C16CF4
	0x03C827CC ADRP X0, 0x4DE000

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W1, [X0+80]
	004 Move TEMP, 0
	005 Not TEMP
	006 Move W8, TEMP
	007 Move X19, X0
	008 Move [X0+41], W31
	009 Move [X0+120], W8
	010 Call TextEditor.GetGraphicalLineEnd, X0, X1
	011 Move W1, W0
	012 Move X0, X19
	013 Move X30, [X31+16]
	014 Move X19, [X31+24]
	015 Call TextEditor.set_cursorIndex, X0, X1
	016 Return 

Method: System.Void SelectParagraphForward()

Disassembly:
	0x03C827D0 LDR X0, [X0 + 0x798]
	0x03C827D4 BL 0x1C16CF4
	0x03C827D8 MOVZ W8, 0x1
	0x03C827DC STRB W8, [X19 + 0x9CA]
	0x03C827E0 LDR X8, [X20]
	0x03C827E4 LDR X8, [X8 + 0xB8]
	0x03C827E8 LDR X8, [X8]
	0x03C827EC CBZ X8, 0x3C82810
	0x03C827F0 LDP X20, X19, [X31 + 0x60]
	0x03C827F4 LDP X22, X21, [X31 + 0x50]
	0x03C827F8 LDP X24, X23, [X31 + 0x40]
	0x03C827FC LDP X26, X25, [X31 + 0x30]
	0x03C82800 LDP X28, X27, [X31 + 0x20]
	0x03C82804 LDP X29, X30, [X31 + 0x10]
	0x03C82808 ADD X31, X31, 0x70
	0x03C8280C RET
	0x03C82810 ADRP X8, 0x4DE000
	0x03C82814 LDR X8, [X8 + 0x7D0]
	0x03C82818 LDR X0, [X8]
	0x03C8281C BL 0x1C16F10
	0x03C82820 ADRP X8, 0x4DE000
	0x03C82824 LDR X8, [X8 + 0x7C8]
	0x03C82828 MOV X19, X0
	0x03C8282C LDR X1, [X8]
	0x03C82830 BL 0x2AA1784
	0x03C82834 LDR X8, [X20]
	0x03C82838 MOV W1, W31
	0x03C8283C LDR X8, [X8 + 0xB8]
	0x03C82840 STR X19, [X8]
	0x03C82844 ADRP X8, 0x4DE000
	0x03C82848 LDR X8, [X8 + 0x720]
	0x03C8284C LDR X0, [X8]
	0x03C82850 BL 0x3C83828
	0x03C82854 ADRP X8, 0x4DE000
	0x03C82858 LDR X8, [X8 + 0x760]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, X0
	006 Move X0, [X0+56]
	007 Move TEMP, 0
	008 Not TEMP
	009 Move W8, TEMP
	010 Move [X19+41], W31
	011 Move [X19+120], W8
	012 Compare X0, 0
	013 JumpIfEqual {45}
	014 Move W20, [X19+80]
	015 Move W21, [X19+84]
	016 Move X1, X31
	017 Call GUIContent.get_text, X0
	018 Compare X0, 0
	019 JumpIfEqual {45}
	020 Move W8, [X0+16]
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move W8, [X19+80]
	023 Move X0, X19
	024 Add W1, W8, 1
	025 Call TextEditor.IndexOfEndOfLine, X0, X1
	026 Move W1, W0
	027 Move X0, X19
	028 Call TextEditor.set_cursorIndex, X0, X1
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move W8, [X19+80]
	031 Move W1, [X19+84]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X0, X19
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X30, [X31+32]
	037 Move X21, [X31+40]
	038 Call TextEditor.set_cursorIndex, X0, X1
	039 Return 
	040 Move X20, [X31+16]
	041 Move X19, [X31+24]
	042 Move X30, [X31+32]
	043 Move X21, [X31+40]
	044 Return 
	045 Call 0x1C17F20

Method: System.Void SelectParagraphBackward()

Disassembly:
	0x03C8285C MOVZ W1, 0x1
	0x03C82860 LDR X0, [X8]
	0x03C82864 BL 0x3C83828
	0x03C82868 ADRP X8, 0x4DE000
	0x03C8286C LDR X8, [X8 + 0x770]
	0x03C82870 MOVZ W1, 0x2
	0x03C82874 LDR X0, [X8]
	0x03C82878 BL 0x3C83828
	0x03C8287C ADRP X8, 0x4DE000
	0x03C82880 LDR X8, [X8 + 0x718]
	0x03C82884 MOVZ W1, 0x3
	0x03C82888 LDR X0, [X8]
	0x03C8288C BL 0x3C83828
	0x03C82890 MOV X0, X31
	0x03C82894 BL 0x3C3B89C
	0x03C82898 ADRP X28, 0x4DE000
	0x03C8289C ADRP X26, 0x4DE000
	0x03C828A0 ADRP X27, 0x4DE000
	0x03C828A4 ADRP X19, 0x4DE000
	0x03C828A8 ADRP X21, 0x4DE000
	0x03C828AC ADRP X22, 0x4DE000
	0x03C828B0 LDR X28, [X28 + 0x710]
	0x03C828B4 LDR X26, [X26 + 0x788]
	0x03C828B8 LDR X27, [X27 + 0x758]
	0x03C828BC LDR X19, [X19 + 0x738]
	0x03C828C0 LDR X21, [X21 + 0x730]
	0x03C828C4 LDR X22, [X22 + 0x790]
	0x03C828C8 CMP W0, 0x1
	0x03C828CC B.NE 0x3C829A8
	0x03C828D0 LDR X0, [X26]
	0x03C828D4 MOVZ W1, 0x4
	0x03C828D8 MOVZ W8, 0x4
	0x03C828DC STR W8, [X31 + 0x8]
	0x03C828E0 BL 0x3C83828
	0x03C828E4 LDR X0, [X28]
	0x03C828E8 MOVZ W1, 0x5
	0x03C828EC MOVZ W8, 0x5
	0x03C828F0 STR W8, [X31 + 0xC]
	0x03C828F4 BL 0x3C83828
	0x03C828F8 LDR X0, [X22]
	0x03C828FC MOVZ W1, 0x8
	0x03C82900 MOVZ W8, 0x8
	0x03C82904 STR W8, [X31]
	0x03C82908 BL 0x3C83828

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W20, [X0+80]
	006 Move X19, X0
	007 Move TEMP, 0
	008 Not TEMP
	009 Move W8, TEMP
	010 Move [X0+41], W31
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Move [X0+120], W8
	013 Move X0, [X19+56]
	014 Compare X0, 0
	015 JumpIfEqual {56}
	016 Move W21, [X19+84]
	017 Move X1, X31
	018 Call GUIContent.get_text, X0
	019 Compare X0, 0
	020 JumpIfEqual {56}
	021 Move W8, [X19+80]
	022 Move W1, 10
	023 Move X3, X31
	024 Subtract W2, W8, 2
	025 Call String.LastIndexOf, X0, X1, X2
	026 Add W1, W0, 1
	027 Move X0, X19
	028 Call TextEditor.set_cursorIndex, X0, X1
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move W8, [X19+80]
	031 Move W1, [X19+84]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X0, X19
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X30, [X31+32]
	037 Move X21, [X31+40]
	038 Call TextEditor.set_cursorIndex, X0, X1
	039 Return 
	040 Move X0, X19
	041 Move W1, W31
	042 Call TextEditor.set_cursorIndex, X0, X1
	043 Move X0, X19
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move W1, W31
	047 Move X30, [X31+32]
	048 Move X21, [X31+40]
	049 Call TextEditor.set_selectIndex, X0, X1
	050 Return 
	051 Move X20, [X31+16]
	052 Move X19, [X31+24]
	053 Move X30, [X31+32]
	054 Move X21, [X31+40]
	055 Return 
	056 Call 0x1C17F20

Method: System.Void SelectCurrentWord()

Disassembly:
	0x03C8290C LDR X0, [X21]
	0x03C82910 MOVZ W1, 0x9
	0x03C82914 MOVZ W8, 0x9
	0x03C82918 STR W8, [X31 + 0x4]
	0x03C8291C BL 0x3C83828
	0x03C82920 LDR X0, [X19]
	0x03C82924 MOVZ W1, 0x10
	0x03C82928 MOVZ W25, 0x10
	0x03C8292C BL 0x3C83828
	0x03C82930 LDR X0, [X27]
	0x03C82934 MOVZ W1, 0x11
	0x03C82938 MOVZ W24, 0x11
	0x03C8293C BL 0x3C83828
	0x03C82940 ADRP X8, 0x4DE000
	0x03C82944 LDR X8, [X8 + 0x778]
	0x03C82948 MOVZ W1, 0xC
	0x03C8294C LDR X0, [X8]
	0x03C82950 BL 0x3C83828
	0x03C82954 ADRP X9, 0x4DE000
	0x03C82958 ADRP X29, 0x4DE000
	0x03C8295C ADRP X20, 0x4DE000
	0x03C82960 ADRP X28, 0x4DE000
	0x03C82964 ADRP X26, 0x4DE000
	0x03C82968 ADRP X27, 0x4DE000
	0x03C8296C ADRP X19, 0x4DE000
	0x03C82970 ADRP X21, 0x4DE000
	0x03C82974 ADRP X22, 0x4DE000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W20, [X0+80]
	006 Move W8, [X0+84]
	007 Move X19, X0
	008 NotImplemented "Instruction CMP not yet implemented."
	009 NotImplemented "Instruction CSET not yet implemented."
	010 Move W1, W20
	011 NotImplemented "Instruction CSET not yet implemented."
	012 Call TextEditor.FindEndOfClassification, X0, X1, X2
	013 Move W1, W0
	014 Move X0, X19
	015 Call TextEditor.set_cursorIndex, X0, X1
	016 Move X0, X19
	017 Move W1, W20
	018 Move W2, W21
	019 Call TextEditor.FindEndOfClassification, X0, X1, X2
	020 Move W1, W0
	021 Move X0, X19
	022 Call TextEditor.set_selectIndex, X0, X1
	023 Move TEMP, 0
	024 Not TEMP
	025 Move W8, TEMP
	026 Move W9, 1
	027 Move [X19+41], W31
	028 Move [X19+120], W8
	029 Move [X19+117], W9
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X30, [X31+32]
	033 Move X21, [X31+40]
	034 Return 

Method: System.Int32 FindEndOfClassification(System.Int32 p, UnityEngine.TextEditor/Direction dir)

Disassembly:
	0x03C81E8C CBZ X20, 0x3C81ED8
	0x03C81E90 LDP W3, W2, [X19 + 0x50]
	0x03C81E94 LDR X1, [X19 + 0x38]
	0x03C81E98 MOV X0, X20
	0x03C81E9C MOV X4, X31
	0x03C81EA0 BL 0x3C73FA8
	0x03C81EA4 ADRP X8, 0x49E000
	0x03C81EA8 LDR X8, [X8 + 0x5C8]
	0x03C81EAC MOV X19, X0
	0x03C81EB0 LDR X8, [X8]
	0x03C81EB4 LDR W9, [X8 + 0xE0]
	0x03C81EB8 CBNZ W9, 0x3C81EC4
	0x03C81EBC MOV X0, X8
	0x03C81EC0 BL 0x1C16DFC
	0x03C81EC4 MOV X0, X19
	0x03C81EC8 LDP X20, X19, [X31 + 0x10]
	0x03C81ECC MOV X1, X31
	0x03C81ED0 LDR X30, [X31], #0x20
	0x03C81ED4 B 0x3C753C8
	0x03C81ED8 BL 0x1C16F20
	0x03C81EDC STP X30, X21, [X31 - 0x20]!
	0x03C81EE0 STP X20, X19, [X31 + 0x10]
	0x03C81EE4 ADRP X21, 0x765000
	0x03C81EE8 ADRP X20, 0x49E000
	0x03C81EEC LDRB W8, [X21 + 0x9BF]
	0x03C81EF0 LDR X20, [X20 + 0x5C8]
	0x03C81EF4 MOV X19, X0
	0x03C81EF8 TBNZ X8, 0x0, 0x3C81F1C
	0x03C81EFC ADRP X0, 0x49E000
	0x03C81F00 LDR X0, [X0 + 0x5C8]
	0x03C81F04 BL 0x1C16CF4
	0x03C81F08 ADRP X0, 0x472000
	0x03C81F0C LDR X0, [X0 + 0x988]
	0x03C81F10 BL 0x1C16CF4
	0x03C81F14 MOVZ W8, 0x1
	0x03C81F18 STRB W8, [X21 + 0x9BF]
	0x03C81F1C LDR X0, [X20]
	0x03C81F20 ADRP X20, 0x472000
	0x03C81F24 LDR W8, [X0 + 0xE0]
	0x03C81F28 LDR X20, [X20 + 0x988]
	0x03C81F2C CBNZ W8, 0x3C81F34
	0x03C81F30 BL 0x1C16DFC
	0x03C81F34 MOV X0, X31
	0x03C81F38 BL 0x3C753A0
	0x03C81F3C LDR X1, [X20]
	0x03C81F40 MOV X2, X31
	0x03C81F44 MOV X21, X0
	0x03C81F48 BL 0x3226EF8
	0x03C81F4C MOV W20, W0
	0x03C81F50 TBZ X0, 0x0, 0x3C81F74
	0x03C81F54 LDRB W8, [X19 + 0x28]
	0x03C81F58 CBNZ W8, 0x3C81F68
	0x03C81F5C MOV X0, X21
	0x03C81F60 BL 0x3C81FB4
	0x03C81F64 MOV X21, X0
	0x03C81F68 MOV X0, X19
	0x03C81F6C MOV X1, X21
	0x03C81F70 BL 0x3C802E4
	0x03C81F74 AND W0, W20, 0x1
	0x03C81F78 LDP X20, X19, [X31 + 0x10]
	0x03C81F7C LDP X30, X21, [X31], #0x20
	0x03C81F80 RET
	0x03C81F84 STP X30, X19, [X31 - 0x10]!
	0x03C81F88 MOV X19, X0
	0x03C81F8C LDR X0, [X0 + 0x38]
	0x03C81F90 CBZ X0, 0x3C81FB0
	0x03C81F94 MOV X1, X31
	0x03C81F98 BL 0x3C69940
	0x03C81F9C LDR V0, [X19 + 0x50]
	0x03C81FA0 STR X0, [X19 + 0x80]
	0x03C81FA4 STR D0, [X19 + 0x88]
	0x03C81FA8 LDP X30, X19, [X31], #0x10
	0x03C81FAC RET
	0x03C81FB0 BL 0x1C16F20
	0x03C81FB4 STR X30, [X31 - 0x20]!
	0x03C81FB8 STP X20, X19, [X31 + 0x10]
	0x03C81FBC ADRP X20, 0x765000
	0x03C81FC0 LDRB W8, [X20 + 0x9BE]
	0x03C81FC4 MOV X19, X0
	0x03C81FC8 TBNZ X8, 0x0, 0x3C81FEC
	0x03C81FCC ADRP X0, 0x472000
	0x03C81FD0 LDR X0, [X0 + 0xDD8]
	0x03C81FD4 BL 0x1C16CF4
	0x03C81FD8 ADRP X0, 0x4B0000
	0x03C81FDC LDR X0, [X0 + 0x420]
	0x03C81FE0 BL 0x1C16CF4
	0x03C81FE4 MOVZ W8, 0x1
	0x03C81FE8 STRB W8, [X20 + 0x9BE]
	0x03C81FEC CBZ X19, 0x3C82044
	0x03C81FF0 ADRP X8, 0x4B0000
	0x03C81FF4 ADRP X9, 0x472000
	0x03C81FF8 LDR X8, [X8 + 0x420]
	0x03C81FFC LDR X9, [X9 + 0xDD8]
	0x03C82000 MOV X0, X19
	0x03C82004 MOV X3, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X0
	007 Move X0, [X0+56]
	008 Compare X0, 0
	009 JumpIfEqual {102}
	010 Move W20, W1
	011 Move X1, X31
	012 Move W21, W2
	013 Call GUIContent.get_text, X0
	014 Compare X0, 0
	015 JumpIfEqual {102}
	016 Move W8, [X0+16]
	017 Compare W8, 0
	018 JumpIfEqual {80}
	019 Move X0, [X19+56]
	020 Compare X0, 0
	021 JumpIfEqual {102}
	022 Move X1, X31
	023 Call GUIContent.get_text, X0
	024 Compare X0, 0
	025 JumpIfEqual {102}
	026 Move W8, [X0+16]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move X0, X19
	029 Move W1, W20
	030 Call TextEditor.PreviousCodePointIndex, X0, X1
	031 Move W20, W0
	032 Move X0, X19
	033 Move W1, W20
	034 Call TextEditor.ClassifyChar, X0, X1
	035 Move W22, W0
	036 Move X0, X19
	037 Compare W21, 0
	038 JumpIfEqual {43}
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move W1, W20
	041 Call TextEditor.ClassifyChar, X0, X1
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move W1, W20
	044 Call TextEditor.NextCodePointIndex, X0, X1
	045 Move X8, [X19+56]
	046 Compare X8, 0
	047 JumpIfEqual {102}
	048 Move W20, W0
	049 Move X0, X8
	050 Move X1, X31
	051 Call GUIContent.get_text, X0
	052 Compare X0, 0
	053 JumpIfEqual {102}
	054 Move W8, [X0+16]
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move X0, X19
	057 Move W1, W20
	058 Call TextEditor.ClassifyChar, X0, X1
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move W1, W20
	061 Call TextEditor.PreviousCodePointIndex, X0, X1
	062 Move W20, W0
	063 Compare W0, 0
	064 JumpIfEqual {88}
	065 Move X0, X19
	066 Move W1, W20
	067 Call TextEditor.ClassifyChar, X0, X1
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Compare W21, 0
	070 JumpIfEqual {81}
	071 Move X0, X19
	072 Move W1, W20
	073 Move X20, [X31+32]
	074 Move X19, [X31+40]
	075 Move X22, [X31+16]
	076 Move X21, [X31+24]
	077 Move X30, [X31+48]
	078 Call TextEditor.NextCodePointIndex, X0, X1
	079 Return X0
	080 Move W20, W31
	081 Move W0, W20
	082 Move X20, [X31+32]
	083 Move X19, [X31+40]
	084 Move X22, [X31+16]
	085 Move X21, [X31+24]
	086 Move X30, [X31+48]
	087 Return X0
	088 Move X0, X19
	089 Move W1, W31
	090 Call TextEditor.ClassifyChar, X0, X1
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Move X0, X19
	093 Move W1, W31
	094 Move X0, [X19+56]
	095 Compare X0, 0
	096 JumpIfEqual {102}
	097 Move X1, X31
	098 Call GUIContent.get_text, X0
	099 Compare X0, 0
	100 JumpIfEqual {102}
	101 Move W20, [X0+16]
	102 Call 0x1C17F20

Method: System.Void SelectCurrentParagraph()

Disassembly:
	0x03C82978 LDR X9, [X9 + 0x768]
	0x03C8297C LDR X29, [X29 + 0x798]
	0x03C82980 LDR X20, [X20 + 0x700]
	0x03C82984 LDR X28, [X28 + 0x6F8]
	0x03C82988 LDR X26, [X26 + 0x748]
	0x03C8298C LDR X27, [X27 + 0x750]
	0x03C82990 LDR X19, [X19 + 0x780]
	0x03C82994 LDR X21, [X21 + 0x708]
	0x03C82998 LDR X22, [X22 + 0x728]
	0x03C8299C MOVZ W23, 0x13
	0x03C829A0 MOVZ W1, 0xD
	0x03C829A4 B 0x3C829EC
	0x03C829A8 ADRP X9, 0x4DE000
	0x03C829AC ADRP X29, 0x4DE000
	0x03C829B0 MOVZ W8, 0x13
	0x03C829B4 LDR X9, [X9 + 0x6F0]
	0x03C829B8 LDR X29, [X29 + 0x740]
	0x03C829BC STR W8, [X31 + 0xC]
	0x03C829C0 ADRP X20, 0x4DE000
	0x03C829C4 LDR X20, [X20 + 0x628]
	0x03C829C8 MOVZ W10, 0xB
	0x03C829CC MOVZ W8, 0xA
	0x03C829D0 STP W8, W10, [X31 + 0x4]
	0x03C829D4 MOVZ W8, 0x11
	0x03C829D8 MOVZ W23, 0x12
	0x03C829DC STR W8, [X31]
	0x03C829E0 MOVZ W24, 0x10
	0x03C829E4 MOVZ W25, 0xF
	0x03C829E8 MOVZ W1, 0xE
	0x03C829EC LDR X0, [X22]
	0x03C829F0 MOV X22, X9
	0x03C829F4 BL 0x3C83828
	0x03C829F8 LDR X0, [X21]
	0x03C829FC MOV W1, W25
	0x03C82A00 BL 0x3C83828
	0x03C82A04 LDR X0, [X19]
	0x03C82A08 MOV W1, W24
	0x03C82A0C BL 0x3C83828

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+56]
	005 Move TEMP, 0
	006 Not TEMP
	007 Move W8, TEMP
	008 Move [X19+41], W31
	009 Move [X19+120], W8
	010 Compare X0, 0
	011 JumpIfEqual {48}
	012 Move X1, X31
	013 Call GUIContent.get_text, X0
	014 Compare X0, 0
	015 JumpIfEqual {48}
	016 Move W8, [X0+16]
	017 Move W1, [X19+80]
	018 NotImplemented "Instruction CMP not yet implemented."
	019 Move X0, X19
	020 Call TextEditor.IndexOfEndOfLine, X0, X1
	021 Add W1, W0, 1
	022 Move X0, X19
	023 Call TextEditor.set_cursorIndex, X0, X1
	024 Move W8, [X19+84]
	025 Compare W8, 0
	026 JumpIfEqual {45}
	027 Move X0, [X19+56]
	028 Compare X0, 0
	029 JumpIfEqual {48}
	030 Move X1, X31
	031 Call GUIContent.get_text, X0
	032 Compare X0, 0
	033 JumpIfEqual {48}
	034 Move W8, [X19+84]
	035 Move W1, 10
	036 Move X3, X31
	037 Subtract W2, W8, 1
	038 Call String.LastIndexOf, X0, X1, X2
	039 Add W1, W0, 1
	040 Move X0, X19
	041 Move X30, [X31+16]
	042 Move X19, [X31+24]
	043 Call TextEditor.set_selectIndex, X0, X1
	044 Return 
	045 Move X30, [X31+16]
	046 Move X19, [X31+24]
	047 Return 
	048 Call 0x1C17F20

Method: System.Void UpdateScrollOffsetIfNeeded(UnityEngine.Event evt)

Disassembly:
	0x03C82A10 LDR X0, [X27]
	0x03C82A14 LDR W1, [X31]
	0x03C82A18 BL 0x3C83828
	0x03C82A1C LDR X0, [X26]
	0x03C82A20 LDR W1, [X31 + 0x4]
	0x03C82A24 BL 0x3C83828
	0x03C82A28 LDR X0, [X28]
	0x03C82A2C LDR W1, [X31 + 0x8]
	0x03C82A30 BL 0x3C83828
	0x03C82A34 LDR X0, [X20]
	0x03C82A38 LDR W1, [X31 + 0xC]
	0x03C82A3C BL 0x3C83828
	0x03C82A40 LDR X0, [X29]
	0x03C82A44 MOV W1, W23
	0x03C82A48 BL 0x3C83828
	0x03C82A4C LDR X0, [X22]
	0x03C82A50 LDP X20, X19, [X31 + 0x60]
	0x03C82A54 LDP X22, X21, [X31 + 0x50]
	0x03C82A58 LDP X24, X23, [X31 + 0x40]
	0x03C82A5C LDP X26, X25, [X31 + 0x30]
	0x03C82A60 LDP X28, X27, [X31 + 0x20]
	0x03C82A64 LDP X29, X30, [X31 + 0x10]
	0x03C82A68 MOVZ W1, 0x12

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X1, 0
	005 JumpIfEqual {26}
	006 Move X20, X1
	007 Move X19, X0
	008 Move X0, X1
	009 Move X1, X31
	010 Call Event.get_type, X0
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Move X0, X20
	013 Move X1, X31
	014 Call Event.get_type, X0
	015 NotImplemented "Instruction CMP not yet implemented."
	016 Move X20, [X31+16]
	017 Move X19, [X31+24]
	018 Move X30, [X31+32]
	019 Return 
	020 Move X0, X19
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X30, [X31+32]
	024 Call TextEditor.UpdateScrollOffset, X0
	025 Return 
	026 Call 0x1C17F20

Method: System.Void UpdateScrollOffset()

Disassembly:
	0x03C7F444 BL 0x3C82048
	0x03C7F448 LDR X8, [X31 + 0xE8]
	0x03C7F44C LDR W1, [X31 + 0xA8]
	0x03C7F450 LDR X0, [X8]
	0x03C7F454 BL 0x3C82048
	0x03C7F458 LDR X8, [X31 + 0xF0]
	0x03C7F45C MOV W1, W24
	0x03C7F460 LDR X0, [X8]
	0x03C7F464 BL 0x3C82048
	0x03C7F468 LDR X8, [X31 + 0x100]
	0x03C7F46C LDR W1, [X31 + 0xC4]
	0x03C7F470 LDR X0, [X8]
	0x03C7F474 BL 0x3C82048
	0x03C7F478 LDR X8, [X31 + 0x108]
	0x03C7F47C MOV W1, W27
	0x03C7F480 LDR X0, [X8]
	0x03C7F484 BL 0x3C82048
	0x03C7F488 LDR X0, [X21]
	0x03C7F48C MOV W1, W26
	0x03C7F490 BL 0x3C82048
	0x03C7F494 LDR X0, [X28]
	0x03C7F498 MOV W1, W19
	0x03C7F49C BL 0x3C82048
	0x03C7F4A0 LDR X0, [X22]
	0x03C7F4A4 MOV W1, W29
	0x03C7F4A8 BL 0x3C82048
	0x03C7F4AC LDR X8, [X31 + 0x18]
	0x03C7F4B0 MOV W1, W25
	0x03C7F4B4 LDR X0, [X8]
	0x03C7F4B8 BL 0x3C82048
	0x03C7F4BC LDR X8, [X31 + 0x8]
	0x03C7F4C0 LDR W1, [X31 + 0x14]
	0x03C7F4C4 LDR X0, [X8]
	0x03C7F4C8 BL 0x3C82048
	0x03C7F4CC LDR X8, [X31 + 0x20]
	0x03C7F4D0 LDR W1, [X31 + 0x2C]
	0x03C7F4D4 LDR X0, [X8]
	0x03C7F4D8 BL 0x3C82048
	0x03C7F4DC LDR X8, [X31 + 0x30]
	0x03C7F4E0 LDR W1, [X31 + 0x3C]
	0x03C7F4E4 LDR X0, [X8]
	0x03C7F4E8 BL 0x3C82048
	0x03C7F4EC LDR X8, [X31 + 0x40]
	0x03C7F4F0 LDR W1, [X31 + 0x4C]
	0x03C7F4F4 LDR X0, [X8]
	0x03C7F4F8 BL 0x3C82048
	0x03C7F4FC LDR X8, [X31 + 0x50]
	0x03C7F500 LDR W1, [X31 + 0x5C]
	0x03C7F504 LDR X0, [X8]
	0x03C7F508 BL 0x3C82048
	0x03C7F50C LDR X8, [X31 + 0x68]
	0x03C7F510 LDR W1, [X31 + 0x60]
	0x03C7F514 LDR X0, [X8]
	0x03C7F518 BL 0x3C82048
	0x03C7F51C LDR X8, [X31 + 0x70]
	0x03C7F520 LDR W1, [X31 + 0x64]
	0x03C7F524 LDR X0, [X8]
	0x03C7F528 BL 0x3C82048
	0x03C7F52C LDR X8, [X31 + 0xB8]
	0x03C7F530 LDR W1, [X31 + 0x7C]
	0x03C7F534 LDP X20, X19, [X31 + 0x160]
	0x03C7F538 LDP X22, X21, [X31 + 0x150]
	0x03C7F53C LDR X0, [X8]
	0x03C7F540 LDP X24, X23, [X31 + 0x140]
	0x03C7F544 LDP X26, X25, [X31 + 0x130]
	0x03C7F548 LDP X28, X27, [X31 + 0x120]
	0x03C7F54C LDP X29, X30, [X31 + 0x110]
	0x03C7F550 ADD X31, X31, 0x170
	0x03C7F554 B 0x3C82048
	0x03C7F558 SUB X31, X31, 0x50
	0x03C7F55C STR X30, [X31 + 0x20]
	0x03C7F560 STP X22, X21, [X31 + 0x30]
	0x03C7F564 STP X20, X19, [X31 + 0x40]
	0x03C7F568 ADRP X22, 0x767000
	0x03C7F56C LDRB W8, [X22 + 0x9BC]
	0x03C7F570 MOV W20, W2
	0x03C7F574 MOV W21, W1
	0x03C7F578 MOV X19, X0
	0x03C7F57C TBNZ X8, 0x0, 0x3C7F5AC
	0x03C7F580 ADRP X0, 0x474000
	0x03C7F584 LDR X0, [X0 + 0xA28]
	0x03C7F588 BL 0x1C16CF4
	0x03C7F58C ADRP X0, 0x4E1000
	0x03C7F590 LDR X0, [X0 + 0x7A0]
	0x03C7F594 BL 0x1C16CF4
	0x03C7F598 ADRP X0, 0x4E1000
	0x03C7F59C LDR X0, [X0 + 0x6C0]
	0x03C7F5A0 BL 0x1C16CF4
	0x03C7F5A4 MOVZ W8, 0x1
	0x03C7F5A8 STRB W8, [X22 + 0x9BC]
	0x03C7F5AC MOVZ W8, 0x1
	0x03C7F5B0 CMP W21, 0x2D
	0x03C7F5B4 STRB W8, [X19 + 0x58]
	0x03C7F5B8 B.HI 0x3C7F648
	0x03C7F5BC ADRP X9, 0xFFFFFFFFFCF18000
	0x03C7F5C0 MOV W8, W21
	0x03C7F5C4 ADD X9, X9, 0xE6B
	0x03C7F5C8 ADR X10, 0x10
	0x03C7F5CC LDRB W11, [X9, X8, LSL]
	0x03C7F5D0 ADD X10, X10, X11, 0x2, LSL
	0x03C7F5D4 BR X10
	0x03C7F5D8 MOV X0, X19
	0x03C7F5DC BL 0x3C80460
	0x03C7F5E0 B 0x3C7F808
	0x03C7F5E4 MOV X0, X19
	0x03C7F5E8 BL 0x3C803E8
	0x03C7F5EC B 0x3C7F808
	0x03C7F5F0 MOV X0, X19
	0x03C7F5F4 BL 0x3C804B8
	0x03C7F5F8 B 0x3C7F808
	0x03C7F5FC MOV X0, X19
	0x03C7F600 BL 0x3C80568
	0x03C7F604 B 0x3C7F808
	0x03C7F608 MOV X0, X19
	0x03C7F60C BL 0x3C8064C
	0x03C7F610 B 0x3C7F808
	0x03C7F614 MOV X0, X19
	0x03C7F618 BL 0x3C806C4
	0x03C7F61C B 0x3C7F808
	0x03C7F620 MOV X0, X19
	0x03C7F624 MOV W1, W31
	0x03C7F628 BL 0x3C7E6FC
	0x03C7F62C MOV X0, X19
	0x03C7F630 MOV W1, W31
	0x03C7F634 BL 0x3C7E75C
	0x03C7F638 B 0x3C7F808
	0x03C7F63C MOV X0, X19
	0x03C7F640 BL 0x3C809C4
	0x03C7F644 B 0x3C7F808
	0x03C7F648 ADRP X8, 0x4E1000
	0x03C7F64C LDR X8, [X8 + 0x7A0]
	0x03C7F650 MOVN X9, 0x0
	0x03C7F654 ADD X0, X31, 0x8
	0x03C7F658 MOV X1, X31
	0x03C7F65C LDR X8, [X8]
	0x03C7F660 STR W21, [X31 + 0x18]
	0x03C7F664 STP X8, X9, [X31 + 0x8]
	0x03C7F668 BL 0x33B162C
	0x03C7F66C ADRP X8, 0x4E1000
	0x03C7F670 LDR X8, [X8 + 0x6C0]
	0x03C7F674 MOV X1, X0
	0x03C7F678 MOV X2, X31
	0x03C7F67C LDR X8, [X8]
	0x03C7F680 MOV X0, X8
	0x03C7F684 BL 0x321B938
	0x03C7F688 ADRP X8, 0x474000
	0x03C7F68C LDR X8, [X8 + 0xA28]
	0x03C7F690 MOV X19, X0
	0x03C7F694 LDR X8, [X8]
	0x03C7F698 LDR W9, [X8 + 0xE0]
	0x03C7F69C CBNZ W9, 0x3C7F6A8
	0x03C7F6A0 MOV X0, X8
	0x03C7F6A4 BL 0x1C16DFC
	0x03C7F6A8 MOV X0, X19
	0x03C7F6AC MOV X1, X31
	0x03C7F6B0 BL 0x3C06048
	0x03C7F6B4 B 0x3C7F808
	0x03C7F6B8 MOV X0, X19
	0x03C7F6BC BL 0x3C80760
	0x03C7F6C0 B 0x3C7F808
	0x03C7F6C4 MOV X0, X19
	0x03C7F6C8 BL 0x3C80878
	0x03C7F6CC B 0x3C7F808
	0x03C7F6D0 MOV X0, X19
	0x03C7F6D4 BL 0x3C815A0
	0x03C7F6D8 B 0x3C7F808
	0x03C7F6DC MOV X0, X19
	0x03C7F6E0 BL 0x3C8142C
	0x03C7F6E4 B 0x3C7F808

ISIL:
	001 Move [X31-112], D13
	002 Move [X31-104], D12
	003 Move [X31+16], D11
	004 Move [X31+24], D10
	005 Move [X31+32], D9
	006 Move [X31+40], D8
	007 Move [X31+48], X30
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X19, X0
	015 Move X0, [X0+32]
	016 Compare X0, 0
	017 JumpIfEqual {199}
	018 Move X1, [X19+56]
	019 Move S2, [X19+72]
	020 Move S3, [X19+76]
	021 Move W2, [X19+80]
	022 Move S0, W31
	023 Move S1, W31
	024 Move X3, X31
	025 Call GUIStyle.GetCursorPixelPosition, X0, X1, X2, X3
	026 Move X0, [X19+32]
	027 Move [X19+92], S0
	028 Move [X19+100], S1
	029 Compare X0, 0
	030 JumpIfEqual {199}
	031 Move X1, X31
	032 Call GUIStyle.get_padding, X0
	033 Compare X0, 0
	034 JumpIfEqual {199}
	035 Move S2, [X19+72]
	036 Move S3, [X19+76]
	037 Move S0, [X19+64]
	038 Move S1, [X19+68]
	039 Move X1, X31
	040 Call RectOffset.Remove, X0, X1
	041 Move X0, [X19+32]
	042 Compare X0, 0
	043 JumpIfEqual {199}
	044 Move S13, [X19+92]
	045 Move S12, [X19+96]
	046 Move X1, X31
	047 Move V9, V2
	048 Move V8, V3
	049 Call GUIStyle.get_padding, X0
	050 Compare X0, 0
	051 JumpIfEqual {199}
	052 Move X1, X31
	053 Call RectOffset.get_left, X0
	054 Move X8, [X19+32]
	055 Compare X8, 0
	056 JumpIfEqual {199}
	057 Move W21, W0
	058 Move X0, X8
	059 Move X1, X31
	060 Call GUIStyle.get_padding, X0
	061 Compare X0, 0
	062 JumpIfEqual {199}
	063 Move X1, X31
	064 Call RectOffset.get_top, X0
	065 Move X8, [X19+32]
	066 Compare X8, 0
	067 JumpIfEqual {199}
	068 Move X1, [X19+56]
	069 Move W20, W0
	070 Move X0, X8
	071 Move X2, X31
	072 Call GUIStyle.CalcSize, X0, X1
	073 Move X0, [X19+32]
	074 Compare X0, 0
	075 JumpIfEqual {199}
	076 Move V10, V0
	077 Move V0, [X19+72]
	078 Move X1, [X19+56]
	079 Move X2, X31
	080 Call GUIStyle.CalcHeight, X0, X1, V0
	081 Move X0, [X19+32]
	082 Compare X0, 0
	083 JumpIfEqual {199}
	084 Move X1, X31
	085 Move V11, V0
	086 Call GUIStyle.get_padding, X0
	087 Compare X0, 0
	088 JumpIfEqual {199}
	089 Move X1, X31
	090 Call RectOffset.get_left, X0
	091 Move X8, [X19+32]
	092 Compare X8, 0
	093 JumpIfEqual {199}
	094 Move W22, W0
	095 Move X0, X8
	096 Move X1, X31
	097 Call GUIStyle.get_padding, X0
	098 Compare X0, 0
	099 JumpIfEqual {199}
	100 Move X1, X31
	101 Call RectOffset.get_right, X0
	102 Move X8, [X19+32]
	103 Compare X8, 0
	104 JumpIfEqual {199}
	105 Move W23, W0
	106 Move X0, X8
	107 Move X1, X31
	108 Call GUIStyle.get_padding, X0
	109 Compare X0, 0
	110 JumpIfEqual {199}
	111 Move X1, X31
	112 Call RectOffset.get_top, X0
	113 Move X8, [X19+32]
	114 Compare X8, 0
	115 JumpIfEqual {199}
	116 Move W24, W0
	117 Move X0, X8
	118 Move X1, X31
	119 Call GUIStyle.get_padding, X0
	120 Compare X0, 0
	121 JumpIfEqual {199}
	122 Add W8, W23, W22
	123 NotImplemented "Instruction SCVTF not yet implemented."
	124 Move X1, X31
	125 Subtract S10, S10, S0
	126 Call RectOffset.get_bottom, X0
	127 Add W8, W0, W24
	128 NotImplemented "Instruction SCVTF not yet implemented."
	129 NotImplemented "Instruction FCMP not yet implemented."
	130 Subtract S10, S11, S0
	131 Move [X19+44], W31
	132 Move W8, [X19+88]
	133 Compare W8, 0
	134 JumpIfEqual {149}
	135 Move V1, [X19+44]
	136 NotImplemented "Instruction SCVTF not yet implemented."
	137 Move S2, 1
	138 Subtract S0, S13, S0
	139 Add S3, S0, S2
	140 Subtract S4, S0, S9
	141 Add S5, S9, S1
	142 Add S2, S4, S2
	143 NotImplemented "Instruction FCMP not yet implemented."
	144 NotImplemented "Instruction FCSEL not yet implemented."
	145 NotImplemented "Instruction FCMP not yet implemented."
	146 NotImplemented "Instruction FCMP not yet implemented."
	147 NotImplemented "Instruction FCSEL not yet implemented."
	148 Move [X19+44], S0
	149 Move S9, W31
	150 NotImplemented "Instruction FCMP not yet implemented."
	151 Move S0, W31
	152 Move W8, [X19+88]
	153 Compare W8, 0
	154 JumpIfEqual {175}
	155 Move X0, [X19+32]
	156 Compare X0, 0
	157 JumpIfEqual {199}
	158 NotImplemented "Instruction SCVTF not yet implemented."
	159 Move X1, X31
	160 Subtract S11, S12, S0
	161 Call GUIStyle.get_lineHeight, X0
	162 Move V1, [X19+48]
	163 Add S0, S11, S0
	164 Add S2, S8, S1
	165 NotImplemented "Instruction FCMP not yet implemented."
	166 Move X0, [X19+32]
	167 Compare X0, 0
	168 JumpIfEqual {199}
	169 Move X1, X31
	170 Call GUIStyle.get_lineHeight, X0
	171 Subtract S1, S11, S8
	172 Add S1, S1, S0
	173 NotImplemented "Instruction FCMP not yet implemented."
	174 Move V1, V11
	175 Move V1, [X19+48]
	176 Subtract S0, S10, S1
	177 Move S2, W31
	178 NotImplemented "Instruction FCMP not yet implemented."
	179 NotImplemented "Instruction FCCMP not yet implemented."
	180 Subtract S0, S10, S8
	181 NotImplemented "Instruction FCSEL not yet implemented."
	182 NotImplemented "Instruction FMAX not yet implemented."
	183 Move [X19+48], S0
	184 Move [X19+88], W31
	185 Move X20, [X31+96]
	186 Move X19, [X31+104]
	187 Move X22, [X31+80]
	188 Move X21, [X31+88]
	189 Move X24, [X31+64]
	190 Move X23, [X31+72]
	191 Move X30, [X31+48]
	192 Move D9, [X31+32]
	193 Move D8, [X31+40]
	194 Move D11, [X31+16]
	195 Move D10, [X31+24]
	196 Move D13, [X31+112]
	197 Move D12, [X31+120]
	198 Return 
	199 Call 0x1C17F20

Method: System.Void DrawCursor(System.String newText)

Disassembly:
	0x03C82A6C ADD X31, X31, 0x70
	0x03C82A70 B 0x3C83828
	0x03C82A74 SUB X31, X31, 0x40
	0x03C82A78 STP X30, X21, [X31 + 0x20]
	0x03C82A7C STP X20, X19, [X31 + 0x30]
	0x03C82A80 ADRP X21, 0x764000
	0x03C82A84 LDRB W8, [X21 + 0x9C8]
	0x03C82A88 MOV W20, W1
	0x03C82A8C MOV X19, X0
	0x03C82A90 TBNZ X8, 0x0, 0x3C82AC0
	0x03C82A94 ADRP X0, 0x471000
	0x03C82A98 LDR X0, [X0 + 0xA28]
	0x03C82A9C BL 0x1C16CF4
	0x03C82AA0 ADRP X0, 0x4DE000
	0x03C82AA4 LDR X0, [X0 + 0x7D8]
	0x03C82AA8 BL 0x1C16CF4
	0x03C82AAC ADRP X0, 0x4DE000
	0x03C82AB0 LDR X0, [X0 + 0x6C0]
	0x03C82AB4 BL 0x1C16CF4
	0x03C82AB8 MOVZ W8, 0x1
	0x03C82ABC STRB W8, [X21 + 0x9C8]
	0x03C82AC0 CMP W20, 0x14
	0x03C82AC4 B.HI 0x3C82B48
	0x03C82AC8 ADRP X9, 0xFFFFFFFFFCF15000
	0x03C82ACC MOV W8, W20
	0x03C82AD0 ADD X9, X9, 0xE99
	0x03C82AD4 ADR X10, 0x10
	0x03C82AD8 LDRB W11, [X9, X8, LSL]
	0x03C82ADC ADD X10, X10, X11, 0x2, LSL
	0x03C82AE0 BR X10
	0x03C82AE4 MOV X0, X19
	0x03C82AE8 BL 0x3C82C64
	0x03C82AEC B 0x3C82C50
	0x03C82AF0 MOV X0, X19
	0x03C82AF4 BL 0x3C82D60
	0x03C82AF8 B 0x3C82C50
	0x03C82AFC MOV X0, X19
	0x03C82B00 BL 0x3C82E5C
	0x03C82B04 B 0x3C82C50
	0x03C82B08 MOV X0, X19
	0x03C82B0C BL 0x3C82EC8
	0x03C82B10 B 0x3C82C50
	0x03C82B14 LDR W8, [X19 + 0x34]
	0x03C82B18 CBZ W8, 0x3C82C50
	0x03C82B1C LDR X8, [X19 + 0x40]
	0x03C82B20 STR W31, [X19 + 0x34]
	0x03C82B24 CBZ X8, 0x3C82C50
	0x03C82B28 LDR X9, [X8 + 0x18]
	0x03C82B2C LDR X0, [X8 + 0x40]
	0x03C82B30 LDR X1, [X8 + 0x28]
	0x03C82B34 BLR X9
	0x03C82B38 B 0x3C82C50
	0x03C82B3C MOV X0, X19
	0x03C82B40 BL 0x3C83274
	0x03C82B44 B 0x3C82C50
	0x03C82B48 ADRP X8, 0x4DE000
	0x03C82B4C LDR X8, [X8 + 0x7D8]
	0x03C82B50 MOVN X9, 0x0
	0x03C82B54 ADD X0, X31, 0x8
	0x03C82B58 MOV X1, X31
	0x03C82B5C LDR X8, [X8]
	0x03C82B60 STR W20, [X31 + 0x18]
	0x03C82B64 STP X8, X9, [X31 + 0x8]
	0x03C82B68 BL 0x33B162C
	0x03C82B6C ADRP X8, 0x4DE000
	0x03C82B70 LDR X8, [X8 + 0x6C0]
	0x03C82B74 MOV X1, X0
	0x03C82B78 MOV X2, X31
	0x03C82B7C LDR X8, [X8]
	0x03C82B80 MOV X0, X8
	0x03C82B84 BL 0x321B938
	0x03C82B88 ADRP X8, 0x471000
	0x03C82B8C LDR X8, [X8 + 0xA28]
	0x03C82B90 MOV X19, X0
	0x03C82B94 LDR X8, [X8]
	0x03C82B98 LDR W9, [X8 + 0xE0]
	0x03C82B9C CBNZ W9, 0x3C82BA8
	0x03C82BA0 MOV X0, X8
	0x03C82BA4 BL 0x1C16DFC
	0x03C82BA8 MOV X0, X19
	0x03C82BAC MOV X1, X31
	0x03C82BB0 BL 0x3C06048
	0x03C82BB4 B 0x3C82C50
	0x03C82BB8 MOV X0, X19
	0x03C82BBC BL 0x3C832B4
	0x03C82BC0 B 0x3C82C50
	0x03C82BC4 MOV X0, X19
	0x03C82BC8 BL 0x3C833A4
	0x03C82BCC B 0x3C82C50
	0x03C82BD0 MOV X0, X19
	0x03C82BD4 BL 0x3C83704
	0x03C82BD8 B 0x3C82C50
	0x03C82BDC MOV X0, X19
	0x03C82BE0 BL 0x3C83760
	0x03C82BE4 B 0x3C82C50
	0x03C82BE8 MOV X0, X19
	0x03C82BEC BL 0x3C83064
	0x03C82BF0 B 0x3C82C50
	0x03C82BF4 MOV X0, X19
	0x03C82BF8 BL 0x3C82F34
	0x03C82BFC B 0x3C82C50
	0x03C82C00 MOV X0, X19
	0x03C82C04 BL 0x3C83194
	0x03C82C08 B 0x3C82C50
	0x03C82C0C MOV X0, X19
	0x03C82C10 BL 0x3C831F0
	0x03C82C14 B 0x3C82C50
	0x03C82C18 MOV X0, X19
	0x03C82C1C BL 0x3C835A8
	0x03C82C20 B 0x3C82C50
	0x03C82C24 MOV X0, X19
	0x03C82C28 BL 0x3C83494
	0x03C82C2C B 0x3C82C50
	0x03C82C30 MOV X0, X19
	0x03C82C34 BL 0x3C7E07C
	0x03C82C38 B 0x3C82C50
	0x03C82C3C MOV X0, X19
	0x03C82C40 BL 0x3C837BC
	0x03C82C44 B 0x3C82C50
	0x03C82C48 MOV X0, X19
	0x03C82C4C BL 0x3C7E1CC
	0x03C82C50 LDP X20, X19, [X31 + 0x30]
	0x03C82C54 LDP X30, X21, [X31 + 0x20]
	0x03C82C58 MOV W0, W31
	0x03C82C5C ADD X31, X31, 0x40
	0x03C82C60 RET
	0x03C82C64 STR X30, [X31 - 0x20]!
	0x03C82C68 STP X20, X19, [X31 + 0x10]
	0x03C82C6C LDRB W8, [X0 + 0x19]
	0x03C82C70 MOV X19, X0
	0x03C82C74 CBZ W8, 0x3C82D08
	0x03C82C78 LDR W1, [X19 + 0x34]
	0x03C82C7C MOV X0, X19
	0x03C82C80 BL 0x3C823B4
	0x03C82C84 LDR W1, [X19 + 0x38]
	0x03C82C88 MOV W20, W0
	0x03C82C8C MOV X0, X19
	0x03C82C90 BL 0x3C823B4
	0x03C82C94 CMP W20, W0
	0x03C82C98 B.LE 0x3C82D08
	0x03C82C9C LDR W1, [X19 + 0x34]
	0x03C82CA0 MOV X0, X19
	0x03C82CA4 BL 0x3C823B4
	0x03C82CA8 LDR W1, [X19 + 0x38]
	0x03C82CAC MOV W20, W0
	0x03C82CB0 MOV X0, X19
	0x03C82CB4 BL 0x3C823B4
	0x03C82CB8 LDR W8, [X19 + 0x34]
	0x03C82CBC CMP W8, W0
	0x03C82CC0 B.EQ 0x3C82CE0
	0x03C82CC4 LDR X8, [X19 + 0x40]
	0x03C82CC8 STR W0, [X19 + 0x34]
	0x03C82CCC CBZ X8, 0x3C82CE0
	0x03C82CD0 LDR X9, [X8 + 0x18]
	0x03C82CD4 LDR X0, [X8 + 0x40]
	0x03C82CD8 LDR X1, [X8 + 0x28]
	0x03C82CDC BLR X9
	0x03C82CE0 LDR W8, [X19 + 0x38]
	0x03C82CE4 CMP W8, W20
	0x03C82CE8 B.EQ 0x3C82D08
	0x03C82CEC LDR X8, [X19 + 0x48]
	0x03C82CF0 STR W20, [X19 + 0x38]
	0x03C82CF4 CBZ X8, 0x3C82D08
	0x03C82CF8 LDR X9, [X8 + 0x18]
	0x03C82CFC LDR X0, [X8 + 0x40]
	0x03C82D00 LDR X1, [X8 + 0x28]
	0x03C82D04 BLR X9
	0x03C82D08 LDR W1, [X19 + 0x34]
	0x03C82D0C MOV X0, X19
	0x03C82D10 STRB W31, [X19 + 0x19]
	0x03C82D14 BL 0x3C823B4
	0x03C82D18 MOV W1, W0
	0x03C82D1C MOV X0, X19
	0x03C82D20 BL 0x3C7DEA8
	0x03C82D24 LDR W8, [X19 + 0x34]
	0x03C82D28 CMP W8, W0
	0x03C82D2C B.EQ 0x3C82D54
	0x03C82D30 LDR X8, [X19 + 0x40]
	0x03C82D34 STR W0, [X19 + 0x34]
	0x03C82D38 CBZ X8, 0x3C82D54
	0x03C82D3C LDR X2, [X8 + 0x18]
	0x03C82D40 LDR X0, [X8 + 0x40]
	0x03C82D44 LDR X1, [X8 + 0x28]
	0x03C82D48 LDP X20, X19, [X31 + 0x10]
	0x03C82D4C LDR X30, [X31], #0x20
	0x03C82D50 BR X2
	0x03C82D54 LDP X20, X19, [X31 + 0x10]
	0x03C82D58 LDR X30, [X31], #0x20
	0x03C82D5C RET
	0x03C82D60 STR X30, [X31 - 0x20]!
	0x03C82D64 STP X20, X19, [X31 + 0x10]
	0x03C82D68 LDRB W8, [X0 + 0x19]
	0x03C82D6C MOV X19, X0
	0x03C82D70 CBZ W8, 0x3C82E04
	0x03C82D74 LDR W1, [X19 + 0x34]
	0x03C82D78 MOV X0, X19
	0x03C82D7C BL 0x3C823B4
	0x03C82D80 LDR W1, [X19 + 0x38]
	0x03C82D84 MOV W20, W0
	0x03C82D88 MOV X0, X19
	0x03C82D8C BL 0x3C823B4
	0x03C82D90 CMP W20, W0
	0x03C82D94 B.GE 0x3C82E04
	0x03C82D98 LDR W1, [X19 + 0x34]
	0x03C82D9C MOV X0, X19
	0x03C82DA0 BL 0x3C823B4
	0x03C82DA4 LDR W1, [X19 + 0x38]
	0x03C82DA8 MOV W20, W0
	0x03C82DAC MOV X0, X19
	0x03C82DB0 BL 0x3C823B4
	0x03C82DB4 LDR W8, [X19 + 0x34]
	0x03C82DB8 CMP W8, W0
	0x03C82DBC B.EQ 0x3C82DDC
	0x03C82DC0 LDR X8, [X19 + 0x40]
	0x03C82DC4 STR W0, [X19 + 0x34]
	0x03C82DC8 CBZ X8, 0x3C82DDC
	0x03C82DCC LDR X9, [X8 + 0x18]
	0x03C82DD0 LDR X0, [X8 + 0x40]
	0x03C82DD4 LDR X1, [X8 + 0x28]
	0x03C82DD8 BLR X9
	0x03C82DDC LDR W8, [X19 + 0x38]
	0x03C82DE0 CMP W8, W20
	0x03C82DE4 B.EQ 0x3C82E04
	0x03C82DE8 LDR X8, [X19 + 0x48]
	0x03C82DEC STR W20, [X19 + 0x38]
	0x03C82DF0 CBZ X8, 0x3C82E04
	0x03C82DF4 LDR X9, [X8 + 0x18]
	0x03C82DF8 LDR X0, [X8 + 0x40]
	0x03C82DFC LDR X1, [X8 + 0x28]

ISIL:
	001 Move [X31-128], D13
	002 Move [X31-120], D12
	003 Move [X31+16], D11
	004 Move [X31+24], D10
	005 Move [X31+32], D9
	006 Move [X31+40], D8
	007 Move [X31+48], X30
	008 Move [X31+64], X26
	009 Move [X31+72], X25
	010 Move [X31+80], X24
	011 Move [X31+88], X23
	012 Move [X31+96], X22
	013 Move [X31+104], X21
	014 Move [X31+112], X20
	015 Move [X31+120], X19
	016 Move X20, 0x765000
	017 Move W8, [X20+2491]
	018 Move X22, X1
	019 Move X19, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {29}
	024 Move X0, 0x49E000
	025 Move X0, [X0+1480]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X20+2491], W8
	029 Move X0, [X19+56]
	030 Compare X0, 0
	031 JumpIfEqual {278}
	032 Move X26, 0x49E000
	033 Move X26, [X26+1480]
	034 Move X1, X31
	035 Call GUIContent.get_text, X0
	036 Move X8, [X26]
	037 Move W21, [X19+80]
	038 Move X20, X0
	039 Move W9, [X8+224]
	040 Compare W9, 0
	041 JumpIfNotEqual {44}
	042 Move X0, X8
	043 Call 0x1C17DFC
	044 Move X0, X31
	045 Call GUIUtility.get_compositionString
	046 Compare X0, 0
	047 JumpIfEqual {278}
	048 Move W8, [X0+16]
	049 Move X23, [X19+56]
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Compare X22, 0
	052 JumpIfEqual {278}
	053 Move W2, [X19+80]
	054 Move X0, X22
	055 Move W1, W31
	056 Move X3, X31
	057 Call String.Substring, X0, X1, X2
	058 Move X8, [X26]
	059 Move X24, X0
	060 Move W9, [X8+224]
	061 Compare W9, 0
	062 JumpIfNotEqual {65}
	063 Move X0, X8
	064 Call 0x1C17DFC
	065 Move X0, X31
	066 Call GUIUtility.get_compositionString
	067 Move W1, [X19+84]
	068 Move X25, X0
	069 Move X0, X22
	070 Move X2, X31
	071 Call String.Substring, X0, X1
	072 Move X2, X0
	073 Move X0, X24
	074 Move X1, X25
	075 Move X3, X31
	076 Call String.Concat, X0, X1, X2
	077 Compare X23, 0
	078 JumpIfEqual {278}
	079 Move X1, X0
	080 Move X0, X23
	081 Move X2, X31
	082 Call GUIContent.set_text, X0, X1
	083 Move X0, X31
	084 Call GUIUtility.get_compositionString
	085 Compare X0, 0
	086 JumpIfEqual {278}
	087 Move W8, [X0+16]
	088 Add W21, W8, W21
	089 Compare X23, 0
	090 JumpIfEqual {278}
	091 Move X0, X23
	092 Move X1, X22
	093 Move X2, X31
	094 Call GUIContent.set_text, X0, X1
	095 Move X0, [X19+32]
	096 Compare X0, 0
	097 JumpIfEqual {278}
	098 Move X1, [X19+56]
	099 Move S2, [X19+72]
	100 Move S3, [X19+76]
	101 Move S0, W31
	102 Move S1, W31
	103 Move W2, W21
	104 Move X3, X31
	105 Call GUIStyle.GetCursorPixelPosition, X0, X1, X2, X3
	106 Move X0, [X19+32]
	107 Move [X19+92], S0
	108 Move [X19+100], S1
	109 Compare X0, 0
	110 JumpIfEqual {278}
	111 Move X1, X31
	112 Call GUIStyle.get_contentOffset, X0
	113 Move X21, [X19+32]
	114 Compare X21, 0
	115 JumpIfEqual {278}
	116 Move X0, X21
	117 Move X1, X31
	118 Move V8, V0
	119 Move V9, V1
	120 Call GUIStyle.get_contentOffset, X0
	121 Move S2, [X19+44]
	122 Move S3, [X19+48]
	123 Move X0, X21
	124 Move X1, X31
	125 Subtract S0, S0, S2
	126 Subtract S1, S1, S3
	127 Call GUIStyle.set_contentOffset, X0, X1
	128 Move X0, [X19+32]
	129 Compare X0, 0
	130 JumpIfEqual {278}
	131 Move S0, [X19+44]
	132 Move S1, [X19+48]
	133 Move X1, X31
	134 Call GUIStyle.set_Internal_clipOffset, X0, X1
	135 Move X0, [X19+32]
	136 Compare X0, 0
	137 JumpIfEqual {278}
	138 Move S11, [X19+64]
	139 Move S10, [X19+68]
	140 Move S13, [X19+92]
	141 Move S12, [X19+96]
	142 Move X1, X31
	143 Call GUIStyle.get_lineHeight, X0
	144 Move S1, [X19+44]
	145 Move S2, [X19+48]
	146 Add S0, S10, S0
	147 Add S3, S11, S13
	148 Add S4, S12, S0
	149 Subtract S0, S3, S1
	150 Subtract S1, S4, S2
	151 Move X0, X31
	152 Call GUIClip.UnclipToWindow, X0
	153 Move X0, [X26]
	154 Move V10, V0
	155 Move V11, V1
	156 Move W8, [X0+224]
	157 Compare W8, 0
	158 JumpIfNotEqual {160}
	159 Call 0x1C17DFC
	160 Move V0, V10
	161 Move V1, V11
	162 Move X0, X31
	163 Call GUIUtility.set_compositionCursorPos, X0
	164 Move X0, X31
	165 Call GUIUtility.get_compositionString
	166 Compare X0, 0
	167 JumpIfEqual {278}
	168 Move W8, [X0+16]
	169 Move X24, [X19+32]
	170 Move S13, [X19+64]
	171 Move S12, [X19+68]
	172 Move S11, [X19+72]
	173 Move S10, [X19+76]
	174 Move X21, [X19+56]
	175 Move W22, [X19+24]
	176 Move W23, [X19+80]
	177 NotImplemented "Instruction CMP not yet implemented."
	178 Move X0, [X26]
	179 Move W8, [X0+224]
	180 Compare W8, 0
	181 JumpIfNotEqual {183}
	182 Call 0x1C17DFC
	183 Move X0, X31
	184 Call GUIUtility.get_compositionString
	185 Compare X0, 0
	186 JumpIfEqual {278}
	187 Compare X24, 0
	188 JumpIfEqual {278}
	189 Move W8, [X0+16]
	190 Move W5, 1
	191 Move X0, X24
	192 Move V0, V13
	193 Add W4, W8, W23
	194 Move V1, V12
	195 Move V2, V11
	196 Move V3, V10
	197 Move X1, X21
	198 Move W2, W22
	199 Move W3, W23
	200 Move X6, X31
	201 Call GUIStyle.DrawWithTextSelection, X0, X1, X2, X3, X4, X5, X6
	202 Compare X24, 0
	203 JumpIfEqual {278}
	204 Move W4, [X19+84]
	205 Move X0, X24
	206 Move V0, V13
	207 Move V1, V12
	208 Move V2, V11
	209 Move V3, V10
	210 Move X1, X21
	211 Move W2, W22
	212 Move W3, W23
	213 Move X5, X31
	214 Call GUIStyle.DrawWithTextSelection, X0, X1, X2, X3, X4, X5
	215 Move W3, [X19+120]
	216 Add W31, W3, 1
	217 Move X0, [X19+32]
	218 Compare X0, 0
	219 JumpIfEqual {278}
	220 Move W2, [X19+24]
	221 Move X1, [X19+56]
	222 Move S2, [X19+72]
	223 Move S3, [X19+76]
	224 Move S0, [X19+64]
	225 Move S1, [X19+68]
	226 Move X4, X31
	227 Call GUIStyle.DrawCursor, X0, X1, X2, X3, X4
	228 Move X0, [X19+32]
	229 Compare X0, 0
	230 JumpIfEqual {278}
	231 Move V0, V8
	232 Move V1, V9
	233 Move X1, X31
	234 Call GUIStyle.set_contentOffset, X0, X1
	235 Move X22, 0x758000
	236 Move W8, [X22+1935]
	237 Move X21, [X19+32]
	238 Compare W8, 0
	239 JumpIfNotEqual {245}
	240 Move X0, 0x47A000
	241 Move X0, [X0+3848]
	242 Call 0x1C17CF4
	243 Move W8, 1
	244 Move [X22+1935], W8
	245 Compare X21, 0
	246 JumpIfEqual {278}
	247 Move X8, 0x47A000
	248 Move X8, [X8+3848]
	249 Move X0, X21
	250 Move X1, X31
	251 Move X8, [X8]
	252 Move X8, [X8+184]
	253 Move S0, [X8]
	254 Move S1, [X8+4]
	255 Call GUIStyle.set_Internal_clipOffset, X0, X1
	256 Move X0, [X19+56]
	257 Compare X0, 0
	258 JumpIfEqual {278}
	259 Move X1, X20
	260 Move X20, [X31+112]
	261 Move X19, [X31+120]
	262 Move X22, [X31+96]
	263 Move X21, [X31+104]
	264 Move X24, [X31+80]
	265 Move X23, [X31+88]
	266 Move X26, [X31+64]
	267 Move X25, [X31+72]
	268 Move X30, [X31+48]
	269 Move D9, [X31+32]
	270 Move D8, [X31+40]
	271 Move D11, [X31+16]
	272 Move D10, [X31+24]
	273 Move X2, X31
	274 Move D13, [X31+128]
	275 Move D12, [X31+136]
	276 Call GUIContent.set_text, X0, X1
	277 Return 
	278 Call 0x1C17F20

Method: System.Boolean PerformOperation(UnityEngine.TextEditor/TextEditOp operation, System.Boolean textIsReadOnly)

Disassembly:
	0x03C80558 LDP X20, X19, [X31 + 0x10]
	0x03C8055C LDR X30, [X31], #0x20
	0x03C80560 RET
	0x03C80564 BL 0x1C16F20
	0x03C80568 STR D8, [X31 - 0x20]!
	0x03C8056C STR X30, [X31 + 0x8]
	0x03C80570 STP X20, X19, [X31 + 0x10]
	0x03C80574 LDP W8, W1, [X0 + 0x50]
	0x03C80578 MOV X19, X0
	0x03C8057C CMP W1, W8
	0x03C80580 B.LE 0x3C80590
	0x03C80584 MOV W1, W8
	0x03C80588 BL 0x3C7E75C
	0x03C8058C B 0x3C80594
	0x03C80590 BL 0x3C7E6FC
	0x03C80594 MOV X0, X19
	0x03C80598 BL 0x3C7E990
	0x03C8059C LDR X0, [X19 + 0x20]
	0x03C805A0 CBZ X0, 0x3C80648
	0x03C805A4 LDR V8, [X19 + 0x60]
	0x03C805A8 MOV X1, X31
	0x03C805AC BL 0x3C74840
	0x03C805B0 FMOV S1, 5
	0x03C805B4 LDR X8, [X19]
	0x03C805B8 FADD S0, S0, S1
	0x03C805BC FADD S0, S8, S0
	0x03C805C0 STR S0, [X19 + 0x60]
	0x03C805C4 LDP X9, X1, [X8 + 0x178]
	0x03C805C8 LDR X20, [X19 + 0x20]
	0x03C805CC MOV X0, X19
	0x03C805D0 BLR X9
	0x03C805D4 CBZ X20, 0x3C80648
	0x03C805D8 LDP S4, S5, [X19 + 0x5C]
	0x03C805DC LDR X1, [X19 + 0x38]
	0x03C805E0 MOV X0, X20
	0x03C805E4 MOV X2, X31
	0x03C805E8 BL 0x3C7502C
	0x03C805EC MOV W20, W0
	0x03C805F0 MOV X0, X19
	0x03C805F4 MOV W1, W20
	0x03C805F8 BL 0x3C7E75C
	0x03C805FC MOV X0, X19
	0x03C80600 MOV W1, W20
	0x03C80604 BL 0x3C7E6FC
	0x03C80608 LDR X0, [X19 + 0x38]
	0x03C8060C CBZ X0, 0x3C80648
	0x03C80610 LDR W20, [X19 + 0x50]
	0x03C80614 MOV X1, X31
	0x03C80618 BL 0x3C69940
	0x03C8061C CBZ X0, 0x3C80648
	0x03C80620 LDR W8, [X0 + 0x10]
	0x03C80624 CMP W20, W8
	0x03C80628 B.NE 0x3C80638
	0x03C8062C MOVN W8, 0x0
	0x03C80630 STRB W31, [X19 + 0x29]
	0x03C80634 STR W8, [X19 + 0x78]
	0x03C80638 LDP X20, X19, [X31 + 0x10]
	0x03C8063C LDR X30, [X31 + 0x8]
	0x03C80640 LDR V8, [X31], #0x20
	0x03C80644 RET
	0x03C80648 BL 0x1C16F20
	0x03C8064C STP X30, X21, [X31 - 0x20]!
	0x03C80650 STP X20, X19, [X31 + 0x10]
	0x03C80654 LDP W9, W8, [X0 + 0x50]
	0x03C80658 MOV X19, X0
	0x03C8065C CMP W8, W9
	0x03C80660 CSEL W8, W8, W9, LT
	0x03C80664 ADD W21, W8, 0x1
	0x03C80668 SUBS W20, W21, 0x1
	0x03C8066C B.EQ 0x3C806A0
	0x03C80670 LDR X0, [X19 + 0x38]
	0x03C80674 CBZ X0, 0x3C806C0
	0x03C80678 MOV X1, X31
	0x03C8067C BL 0x3C69940
	0x03C80680 CBZ X0, 0x3C806C0
	0x03C80684 SUB W1, W21, 0x2
	0x03C80688 MOV X2, X31
	0x03C8068C BL 0x3222A1C
	0x03C80690 AND W8, W0, 0xFFFF
	0x03C80694 CMP W8, 0xA
	0x03C80698 MOV W21, W20
	0x03C8069C B.NE 0x3C80668
	0x03C806A0 MOV X0, X19
	0x03C806A4 MOV W1, W20
	0x03C806A8 BL 0x3C7E6FC
	0x03C806AC MOV X0, X19
	0x03C806B0 MOV W1, W20
	0x03C806B4 LDP X20, X19, [X31 + 0x10]
	0x03C806B8 LDP X30, X21, [X31], #0x20
	0x03C806BC B 0x3C7E75C
	0x03C806C0 BL 0x1C16F20
	0x03C806C4 STP X30, X21, [X31 - 0x20]!
	0x03C806C8 STP X20, X19, [X31 + 0x10]
	0x03C806CC LDP W9, W8, [X0 + 0x50]
	0x03C806D0 MOV X19, X0
	0x03C806D4 LDR X0, [X0 + 0x38]
	0x03C806D8 CMP W8, W9
	0x03C806DC CSEL W20, W8, W9, GT
	0x03C806E0 CBZ X0, 0x3C8075C
	0x03C806E4 MOV X1, X31
	0x03C806E8 BL 0x3C69940
	0x03C806EC CBZ X0, 0x3C8075C
	0x03C806F0 LDR W21, [X0 + 0x10]
	0x03C806F4 CMP W20, W21
	0x03C806F8 B.GE 0x3C8073C
	0x03C806FC LDR X0, [X19 + 0x38]
	0x03C80700 CBZ X0, 0x3C8075C
	0x03C80704 MOV X1, X31
	0x03C80708 BL 0x3C69940
	0x03C8070C CBZ X0, 0x3C8075C
	0x03C80710 MOV W1, W20
	0x03C80714 MOV X2, X31
	0x03C80718 BL 0x3222A1C
	0x03C8071C AND W8, W0, 0xFFFF
	0x03C80720 CMP W8, 0xA
	0x03C80724 B.EQ 0x3C80738
	0x03C80728 ADD W20, W20, 0x1
	0x03C8072C CMP W21, W20
	0x03C80730 B.NE 0x3C806FC
	0x03C80734 B 0x3C8073C
	0x03C80738 MOV W21, W20
	0x03C8073C MOV X0, X19
	0x03C80740 MOV W1, W21
	0x03C80744 BL 0x3C7E6FC
	0x03C80748 MOV X0, X19
	0x03C8074C LDP X20, X19, [X31 + 0x10]
	0x03C80750 MOV W1, W21
	0x03C80754 LDP X30, X21, [X31], #0x20
	0x03C80758 B 0x3C7E75C
	0x03C8075C BL 0x1C16F20
	0x03C80760 STR X30, [X31 - 0x20]!
	0x03C80764 STP X20, X19, [X31 + 0x10]
	0x03C80768 LDP W8, W9, [X0 + 0x50]
	0x03C8076C MOV X19, X0
	0x03C80770 CMP W8, W9
	0x03C80774 CSEL W1, W8, W9, LT
	0x03C80778 BL 0x3C807A0
	0x03C8077C MOV W20, W0
	0x03C80780 MOV X0, X19
	0x03C80784 MOV W1, W20
	0x03C80788 BL 0x3C7E75C
	0x03C8078C MOV X0, X19
	0x03C80790 MOV W1, W20
	0x03C80794 LDP X20, X19, [X31 + 0x10]
	0x03C80798 LDR X30, [X31], #0x20
	0x03C8079C B 0x3C7E6FC
	0x03C807A0 STP D9, D8, [X31 - 0x40]!
	0x03C807A4 STR X30, [X31 + 0x10]
	0x03C807A8 STP X22, X21, [X31 + 0x20]
	0x03C807AC STP X20, X19, [X31 + 0x30]
	0x03C807B0 ADRP X21, 0x766000
	0x03C807B4 LDRB W8, [X21 + 0x9B8]
	0x03C807B8 MOV W20, W1
	0x03C807BC MOV X19, X0
	0x03C807C0 TBNZ X8, 0x0, 0x3C807D8
	0x03C807C4 ADRP X0, 0x49F000
	0x03C807C8 LDR X0, [X0 + 0x5C8]
	0x03C807CC BL 0x1C16CF4
	0x03C807D0 MOVZ W8, 0x1
	0x03C807D4 STRB W8, [X21 + 0x9B8]
	0x03C807D8 LDR X8, [X19]
	0x03C807DC LDR X21, [X19 + 0x20]
	0x03C807E0 MOV X0, X19
	0x03C807E4 LDP X9, X1, [X8 + 0x178]
	0x03C807E8 BLR X9
	0x03C807EC CBZ X21, 0x3C80874
	0x03C807F0 LDR X1, [X19 + 0x38]
	0x03C807F4 ADRP X22, 0x49F000
	0x03C807F8 LDR X22, [X22 + 0x5C8]
	0x03C807FC MOV X0, X21
	0x03C80800 MOV W2, W20
	0x03C80804 MOV X3, X31
	0x03C80808 BL 0x3C75028
	0x03C8080C LDR X0, [X22]
	0x03C80810 MOV V8.16B, V1.16B
	0x03C80814 LDR W8, [X0 + 0xE0]
	0x03C80818 CBNZ W8, 0x3C80820
	0x03C8081C BL 0x1C16DFC
	0x03C80820 MOV X0, X31
	0x03C80824 BL 0x3C6FDD0
	0x03C80828 LDR X8, [X19]
	0x03C8082C LDR X20, [X19 + 0x20]
	0x03C80830 MOV X0, X19
	0x03C80834 MOV V9.16B, V0.16B
	0x03C80838 LDP X9, X1, [X8 + 0x178]
	0x03C8083C BLR X9
	0x03C80840 CBZ X20, 0x3C80874
	0x03C80844 LDR X1, [X19 + 0x38]
	0x03C80848 MOV X0, X20
	0x03C8084C LDP X20, X19, [X31 + 0x30]
	0x03C80850 LDP X22, X21, [X31 + 0x20]
	0x03C80854 LDR X30, [X31 + 0x10]
	0x03C80858 FMOV S4, 1
	0x03C8085C FDIV S4, S4, S9
	0x03C80860 FADD S5, S8, S4
	0x03C80864 FMOV S4, W31
	0x03C80868 MOV X2, X31
	0x03C8086C LDP D9, D8, [X31], #0x40
	0x03C80870 B 0x3C7502C
	0x03C80874 BL 0x1C16F20
	0x03C80878 STR X30, [X31 - 0x20]!
	0x03C8087C STP X20, X19, [X31 + 0x10]
	0x03C80880 LDP W8, W9, [X0 + 0x50]
	0x03C80884 MOV X19, X0
	0x03C80888 CMP W8, W9
	0x03C8088C CSEL W1, W8, W9, GT
	0x03C80890 BL 0x3C808B8
	0x03C80894 MOV W20, W0
	0x03C80898 MOV X0, X19
	0x03C8089C MOV W1, W20
	0x03C808A0 BL 0x3C7E75C
	0x03C808A4 MOV X0, X19
	0x03C808A8 MOV W1, W20
	0x03C808AC LDP X20, X19, [X31 + 0x10]
	0x03C808B0 LDR X30, [X31], #0x20
	0x03C808B4 B 0x3C7E6FC
	0x03C808B8 STR D10, [X31 - 0x40]!
	0x03C808BC STP D9, D8, [X31 + 0x8]
	0x03C808C0 STR X30, [X31 + 0x18]
	0x03C808C4 STP X22, X21, [X31 + 0x20]
	0x03C808C8 STP X20, X19, [X31 + 0x30]
	0x03C808CC ADRP X21, 0x766000
	0x03C808D0 LDRB W8, [X21 + 0x9B9]
	0x03C808D4 MOV W20, W1
	0x03C808D8 MOV X19, X0
	0x03C808DC TBNZ X8, 0x0, 0x3C808F4
	0x03C808E0 ADRP X0, 0x49F000
	0x03C808E4 LDR X0, [X0 + 0x5C8]
	0x03C808E8 BL 0x1C16CF4
	0x03C808EC MOVZ W8, 0x1
	0x03C808F0 STRB W8, [X21 + 0x9B9]
	0x03C808F4 LDR X8, [X19]
	0x03C808F8 LDR X21, [X19 + 0x20]
	0x03C808FC MOV X0, X19
	0x03C80900 LDP X9, X1, [X8 + 0x178]
	0x03C80904 BLR X9
	0x03C80908 CBZ X21, 0x3C809A0
	0x03C8090C LDR X1, [X19 + 0x38]
	0x03C80910 ADRP X22, 0x49F000
	0x03C80914 LDR X22, [X22 + 0x5C8]
	0x03C80918 MOV X0, X21
	0x03C8091C MOV W2, W20
	0x03C80920 MOV X3, X31
	0x03C80924 BL 0x3C75028
	0x03C80928 LDR X0, [X22]
	0x03C8092C MOV V8.16B, V0.16B

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+48], X22
	004 Move [X31+56], X21
	005 Move [X31+64], X20
	006 Move [X31+72], X19
	007 Move X22, 0x767000
	008 Move W8, [X22+2492]
	009 Move W20, W2
	010 Move W21, W1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {27}
	016 Move X0, 0x474000
	017 Move X0, [X0+2600]
	018 Call 0x1C17CF4
	019 Move X0, 0x4E1000
	020 Move X0, [X0+1952]
	021 Call 0x1C17CF4
	022 Move X0, 0x4E1000
	023 Move X0, [X0+1728]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X22+2492], W8
	027 Move W8, 1
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move [X19+88], W8
	030 Move X9, -51281920
	031 Move W8, W21
	032 Add X9, X9, 3691
	033 NotImplemented "Instruction ADR not yet implemented."
	034 Move W11, [X9]
	035 Add X10, X10, X11
	036 CallNoReturn X10
	037 Move X0, X19
	038 Call TextEditor.MoveLeft, X0
	039 Move X0, X19
	040 Call TextEditor.MoveRight, X0
	041 Move X0, X19
	042 Call TextEditor.MoveUp, X0
	043 Move X0, X19
	044 Call TextEditor.MoveDown, X0
	045 Move X0, X19
	046 Call TextEditor.MoveLineStart, X0
	047 Move X0, X19
	048 Call TextEditor.MoveLineEnd, X0
	049 Move X0, X19
	050 Move W1, W31
	051 Call TextEditor.set_cursorIndex, X0, X1
	052 Move X0, X19
	053 Move W1, W31
	054 Call TextEditor.set_selectIndex, X0, X1
	055 Move X0, X19
	056 Call TextEditor.MoveTextEnd, X0
	057 Move X8, 0x4E1000
	058 Move X8, [X8+1952]
	059 Move TEMP, 0
	060 Not TEMP
	061 Move X9, TEMP
	062 Add X0, X31, 8
	063 Move X1, X31
	064 Move X8, [X8]
	065 Move [X31+24], W21
	066 Move [X31+8], X8
	067 Move [X31+16], X9
	068 Call Enum.ToString, X0
	069 Move X8, 0x4E1000
	070 Move X8, [X8+1728]
	071 Move X1, X0
	072 Move X2, X31
	073 Move X8, [X8]
	074 Move X0, X8
	075 Call String.Concat, X0, X1
	076 Move X8, 0x474000
	077 Move X8, [X8+2600]
	078 Move X19, X0
	079 Move X8, [X8]
	080 Move W9, [X8+224]
	081 Compare W9, 0
	082 JumpIfNotEqual {85}
	083 Move X0, X8
	084 Call 0x1C17DFC
	085 Move X0, X19
	086 Move X1, X31
	087 Call Debug.Log, X0
	088 Move X0, X19
	089 Call TextEditor.MoveGraphicalLineStart, X0
	090 Move X0, X19
	091 Call TextEditor.MoveGraphicalLineEnd, X0
	092 Move X0, X19
	093 Call TextEditor.MoveWordLeft, X0
	094 Move X0, X19
	095 Call TextEditor.MoveWordRight, X0
	096 Move X0, X19
	097 Call TextEditor.MoveParagraphForward, X0
	098 Move X0, X19
	099 Call TextEditor.MoveParagraphBackward, X0
	100 Move X0, X19
	101 Call TextEditor.MoveToStartOfNextWord, X0
	102 Move X0, X19
	103 Call TextEditor.MoveToEndOfPreviousWord, X0
	104 Move X0, X19
	105 Call TextEditor.SelectLeft, X0
	106 Move X0, X19
	107 Call TextEditor.SelectRight, X0
	108 Move X0, X19
	109 Call TextEditor.SelectUp, X0
	110 Move X0, X19
	111 Call TextEditor.SelectDown, X0
	112 Move X0, X19
	113 Move W1, W31
	114 Move X0, X19
	115 Call TextEditor.SelectTextEnd, X0
	116 Move X0, X19
	117 Call TextEditor.ExpandSelectGraphicalLineStart, X0
	118 Move X0, X19
	119 Call TextEditor.ExpandSelectGraphicalLineEnd, X0
	120 Move W1, [X19+80]
	121 Move TEMP, 0
	122 Not TEMP
	123 Move W8, TEMP
	124 Move X0, X19
	125 Move [X19+41], W31
	126 Move [X19+120], W8
	127 Call TextEditor.GetGraphicalLineStart, X0, X1
	128 Move W1, [X19+80]
	129 Move TEMP, 0
	130 Not TEMP
	131 Move W8, TEMP
	132 Move X0, X19
	133 Move [X19+41], W31
	134 Move [X19+120], W8
	135 Call TextEditor.GetGraphicalLineEnd, X0, X1
	136 Move X0, X19
	137 Call TextEditor.SelectWordLeft, X0
	138 Move X0, X19
	139 Call TextEditor.SelectWordRight, X0
	140 Move W1, [X19+80]
	141 Move TEMP, 0
	142 Not TEMP
	143 Move W8, TEMP
	144 Move X0, X19
	145 Move [X19+41], W31
	146 Move [X19+120], W8
	147 Call TextEditor.FindEndOfPreviousWord, X0, X1
	148 Move W1, [X19+80]
	149 Move TEMP, 0
	150 Not TEMP
	151 Move W8, TEMP
	152 Move X0, X19
	153 Move [X19+41], W31
	154 Move [X19+120], W8
	155 Call TextEditor.FindStartOfNextWord, X0, X1
	156 Move W1, W0
	157 Move X0, X19
	158 Call TextEditor.set_cursorIndex, X0, X1
	159 Move X20, [X31+64]
	160 Move X19, [X31+72]
	161 Move X22, [X31+48]
	162 Move X21, [X31+56]
	163 Move X30, [X31+32]
	164 Move W0, W31
	165 Add X31, X31, 80
	166 Return X0
	167 Move X0, X19
	168 Call TextEditor.SelectParagraphBackward, X0
	169 Move X0, X19
	170 Call TextEditor.SelectParagraphForward, X0
	171 Move TEMP, X20
	172 And TEMP, TEMP, 1
	173 Compare TEMP, 1
	174 JumpIfEqual {159}
	175 Move X0, X19
	176 Move X20, [X31+64]
	177 Move X19, [X31+72]
	178 Move X22, [X31+48]
	179 Move X21, [X31+56]
	180 Move X30, [X31+32]
	181 Add X31, X31, 80
	182 Call TextEditor.Delete, X0
	183 Return X0
	184 Move TEMP, X20
	185 And TEMP, TEMP, 1
	186 Compare TEMP, 1
	187 JumpIfEqual {159}
	188 Move X0, X19
	189 Move X20, [X31+64]
	190 Move X19, [X31+72]
	191 Move X22, [X31+48]
	192 Move X21, [X31+56]
	193 Move X30, [X31+32]
	194 Add X31, X31, 80
	195 Call TextEditor.Backspace, X0
	196 Return X0
	197 Move TEMP, X20
	198 And TEMP, TEMP, 1
	199 Compare TEMP, 1
	200 JumpIfEqual {159}
	201 Move X0, X19
	202 Move X20, [X31+64]
	203 Move X19, [X31+72]
	204 Move X22, [X31+48]
	205 Move X21, [X31+56]
	206 Move X30, [X31+32]
	207 Add X31, X31, 80
	208 Call TextEditor.DeleteWordBack, X0
	209 Return X0
	210 Move TEMP, X20
	211 And TEMP, TEMP, 1
	212 Compare TEMP, 1
	213 JumpIfEqual {159}
	214 Move X0, X19
	215 Move X20, [X31+64]
	216 Move X19, [X31+72]
	217 Move X22, [X31+48]
	218 Move X21, [X31+56]
	219 Move X30, [X31+32]
	220 Add X31, X31, 80
	221 Call TextEditor.DeleteWordForward, X0
	222 Return X0
	223 Move TEMP, X20
	224 And TEMP, TEMP, 1
	225 Compare TEMP, 1
	226 JumpIfEqual {159}
	227 Move X0, X19
	228 Move X20, [X31+64]
	229 Move X19, [X31+72]
	230 Move X22, [X31+48]
	231 Move X21, [X31+56]
	232 Move X30, [X31+32]
	233 Add X31, X31, 80
	234 Move TEMP, X20
	235 And TEMP, TEMP, 1
	236 Compare TEMP, 1
	237 JumpIfEqual {159}
	238 Move X0, X19
	239 Move X20, [X31+64]
	240 Move X19, [X31+72]
	241 Move X22, [X31+48]
	242 Move X21, [X31+56]
	243 Move X30, [X31+32]
	244 Add X31, X31, 80
	245 Call TextEditor.Cut, X0
	246 Return X0
	247 Move X0, X19
	248 Call TextEditor.Copy, X0
	249 Move TEMP, X20
	250 And TEMP, TEMP, 1
	251 Compare TEMP, 1
	252 JumpIfEqual {159}
	253 Move X0, X19
	254 Move X20, [X31+64]
	255 Move X19, [X31+72]
	256 Move X22, [X31+48]
	257 Move X21, [X31+56]
	258 Move X30, [X31+32]
	259 Add X31, X31, 80
	260 Call TextEditor.Paste, X0
	261 Return X0
	262 Move X0, X19
	263 Call TextEditor.SelectAll, X0
	264 Move W1, [X19+80]
	265 Move X0, X19
	266 Call TextEditor.set_selectIndex, X0, X1
	267 Move TEMP, 0
	268 Not TEMP
	269 Move W8, TEMP
	270 Move [X19+41], W31
	271 Move [X19+120], W8

Method: System.Void SaveBackup()

Disassembly:
	0x03C82F84 BL 0x3C823B4
	0x03C82F88 LDR W8, [X19 + 0x38]
	0x03C82F8C CMP W8, W0
	0x03C82F90 B.EQ 0x3C82FB0
	0x03C82F94 LDR X8, [X19 + 0x48]
	0x03C82F98 STR W0, [X19 + 0x38]
	0x03C82F9C CBZ X8, 0x3C82FB0
	0x03C82FA0 LDR X9, [X8 + 0x18]
	0x03C82FA4 LDR X0, [X8 + 0x40]
	0x03C82FA8 LDR X1, [X8 + 0x28]
	0x03C82FAC BLR X9
	0x03C82FB0 MOV X0, X19

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+56]
	005 Compare X0, 0
	006 JumpIfEqual {15}
	007 Move X1, X31
	008 Call GUIContent.get_text, X0
	009 Move V0, [X19+80]
	010 Move [X19+128], X0
	011 Move [X19+136], D0
	012 Move X30, [X31+16]
	013 Move X19, [X31+24]
	014 Return 
	015 Call 0x1C17F20

Method: System.Boolean Cut()

Disassembly:
	0x03C82E00 BLR X9
	0x03C82E04 LDR W1, [X19 + 0x34]
	0x03C82E08 MOV X0, X19
	0x03C82E0C STRB W31, [X19 + 0x19]
	0x03C82E10 BL 0x3C823B4
	0x03C82E14 MOV W1, W0
	0x03C82E18 MOV X0, X19
	0x03C82E1C BL 0x3C7DDC8
	0x03C82E20 LDR W8, [X19 + 0x34]
	0x03C82E24 CMP W8, W0
	0x03C82E28 B.EQ 0x3C82E50

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W8, [X0+42]
	004 Compare W8, 0
	005 JumpIfEqual {10}
	006 Move W0, W31
	007 Move X30, [X31+16]
	008 Move X19, [X31+24]
	009 Return X0
	010 Move X19, X0
	011 Call TextEditor.Copy, X0
	012 Move X0, X19
	013 Move X30, [X31+16]
	014 Move X19, [X31+24]
	015 Call TextEditor.DeleteSelection, X0
	016 Return X0

Method: System.Void Copy()

Disassembly:
	0x03C82E2C LDR X8, [X19 + 0x40]
	0x03C82E30 STR W0, [X19 + 0x34]
	0x03C82E34 CBZ X8, 0x3C82E50
	0x03C82E38 LDR X2, [X8 + 0x18]
	0x03C82E3C LDR X0, [X8 + 0x40]
	0x03C82E40 LDR X1, [X8 + 0x28]
	0x03C82E44 LDP X20, X19, [X31 + 0x10]
	0x03C82E48 LDR X30, [X31], #0x20
	0x03C82E4C BR X2
	0x03C82E50 LDP X20, X19, [X31 + 0x10]
	0x03C82E54 LDR X30, [X31], #0x20
	0x03C82E58 RET
	0x03C82E5C STR X30, [X31 - 0x20]!
	0x03C82E60 STP X20, X19, [X31 + 0x10]
	0x03C82E64 LDR W1, [X0 + 0x34]
	0x03C82E68 LDR X20, [X0 + 0x28]
	0x03C82E6C MOV X19, X0
	0x03C82E70 BL 0x3C823B4
	0x03C82E74 CBZ X20, 0x3C82EC4
	0x03C82E78 MOV W1, W0
	0x03C82E7C MOV X0, X20
	0x03C82E80 MOV X2, X31
	0x03C82E84 BL 0x3CCA4D0
	0x03C82E88 LDR W8, [X19 + 0x34]
	0x03C82E8C CMP W8, W0
	0x03C82E90 B.EQ 0x3C82EB8
	0x03C82E94 LDR X8, [X19 + 0x40]
	0x03C82E98 STR W0, [X19 + 0x34]
	0x03C82E9C CBZ X8, 0x3C82EB8
	0x03C82EA0 LDR X2, [X8 + 0x18]
	0x03C82EA4 LDR X0, [X8 + 0x40]
	0x03C82EA8 LDR X1, [X8 + 0x28]
	0x03C82EAC LDP X20, X19, [X31 + 0x10]
	0x03C82EB0 LDR X30, [X31], #0x20
	0x03C82EB4 BR X2
	0x03C82EB8 LDP X20, X19, [X31 + 0x10]
	0x03C82EBC LDR X30, [X31], #0x20
	0x03C82EC0 RET
	0x03C82EC4 BL 0x1C16F20
	0x03C82EC8 STR X30, [X31 - 0x20]!
	0x03C82ECC STP X20, X19, [X31 + 0x10]
	0x03C82ED0 LDR W1, [X0 + 0x34]
	0x03C82ED4 LDR X20, [X0 + 0x28]
	0x03C82ED8 MOV X19, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x765000
	005 Move W8, [X20+2493]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x49E000
	012 Move X0, [X0+1480]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2493], W8
	016 Move W9, [X19+80]
	017 Move W8, [X19+84]
	018 NotImplemented "Instruction CMP not yet implemented."
	019 Move W8, [X19+42]
	020 Compare W8, 0
	021 JumpIfEqual {26}
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X30, [X31+32]
	025 Return 
	026 Move X8, [X19]
	027 Move X20, [X19+32]
	028 Move X0, X19
	029 Move X9, [X8+376]
	030 Move X1, [X8+384]
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Compare X20, 0
	033 JumpIfEqual {56}
	034 Move W3, [X19+80]
	035 Move W2, [X19+84]
	036 Move X1, [X19+56]
	037 Move X0, X20
	038 Move X4, X31
	039 Call GUIStyle.Internal_GetSelectedRenderedText, X0, X1, X2, X3, X4
	040 Move X8, 0x49E000
	041 Move X8, [X8+1480]
	042 Move X19, X0
	043 Move X8, [X8]
	044 Move W9, [X8+224]
	045 Compare W9, 0
	046 JumpIfNotEqual {49}
	047 Move X0, X8
	048 Call 0x1C17DFC
	049 Move X0, X19
	050 Move X20, [X31+16]
	051 Move X19, [X31+24]
	052 Move X1, X31
	053 Move X30, [X31+32]
	054 Call GUIUtility.set_systemCopyBuffer, X0
	055 Return 
	056 Call 0x1C17F20

Method: System.String ReplaceNewlinesWithSpaces(System.String value)

Disassembly:
	0x03C82FB4 BL 0x3C7CC24
	0x03C82FB8 LDR W8, [X19 + 0x38]
	0x03C82FBC CMP W8, W21
	0x03C82FC0 B.EQ 0x3C82FE0
	0x03C82FC4 LDR X8, [X19 + 0x48]
	0x03C82FC8 STR W21, [X19 + 0x38]
	0x03C82FCC CBZ X8, 0x3C82FE0
	0x03C82FD0 LDR X9, [X8 + 0x18]
	0x03C82FD4 LDR X0, [X8 + 0x40]
	0x03C82FD8 LDR X1, [X8 + 0x28]
	0x03C82FDC BLR X9
	0x03C82FE0 CMP W20, W22
	0x03C82FE4 B.GE 0x3C83054
	0x03C82FE8 LDR W1, [X19 + 0x34]
	0x03C82FEC MOV X0, X19
	0x03C82FF0 BL 0x3C823B4
	0x03C82FF4 LDR W1, [X19 + 0x38]
	0x03C82FF8 MOV W20, W0
	0x03C82FFC MOV X0, X19
	0x03C83000 BL 0x3C823B4
	0x03C83004 CMP W20, W0
	0x03C83008 MOVZ W8, 0x38
	0x03C8300C MOVZ W9, 0x34
	0x03C83010 CSEL X8, X9, X8, LT
	0x03C83014 LDR W1, [X19, X8, LSL]
	0x03C83018 MOV X0, X19
	0x03C8301C BL 0x3C823B4
	0x03C83020 LDR W8, [X19 + 0x34]
	0x03C83024 CMP W8, W0
	0x03C83028 B.EQ 0x3C83054
	0x03C8302C LDR X8, [X19 + 0x40]
	0x03C83030 STR W0, [X19 + 0x34]
	0x03C83034 CBZ X8, 0x3C83054
	0x03C83038 LDR X2, [X8 + 0x18]
	0x03C8303C LDR X0, [X8 + 0x40]
	0x03C83040 LDR X1, [X8 + 0x28]
	0x03C83044 LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x765000
	005 Move W8, [X20+2494]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0x472000
	012 Move X0, [X0+3544]
	013 Call 0x1C17CF4
	014 Move X0, 0x4B0000
	015 Move X0, [X0+1056]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2494], W8
	019 Compare X19, 0
	020 JumpIfEqual {46}
	021 Move X8, 0x4B0000
	022 Move X9, 0x472000
	023 Move X8, [X8+1056]
	024 Move X9, [X9+3544]
	025 Move X0, X19
	026 Move X3, X31
	027 Move X1, [X8]
	028 Move X2, [X9]
	029 Call String.Replace, X0, X1, X2
	030 Compare X0, 0
	031 JumpIfEqual {46}
	032 Move W1, 10
	033 Move W2, 32
	034 Move X3, X31
	035 Call String.Replace, X0, X1, X2
	036 Compare X0, 0
	037 JumpIfEqual {46}
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move W1, 13
	041 Move W2, 32
	042 Move X3, X31
	043 Move X30, [X31+32]
	044 Call String.Replace, X0, X1, X2
	045 Return X0
	046 Call 0x1C17F20

Method: System.Boolean Paste()

Disassembly:
	0x03C82EDC BL 0x3C823B4
	0x03C82EE0 CBZ X20, 0x3C82F30
	0x03C82EE4 MOV W1, W0
	0x03C82EE8 MOV X0, X20
	0x03C82EEC MOV X2, X31
	0x03C82EF0 BL 0x3CCA2F4
	0x03C82EF4 LDR W8, [X19 + 0x34]
	0x03C82EF8 CMP W8, W0
	0x03C82EFC B.EQ 0x3C82F24
	0x03C82F00 LDR X8, [X19 + 0x40]
	0x03C82F04 STR W0, [X19 + 0x34]
	0x03C82F08 CBZ X8, 0x3C82F24
	0x03C82F0C LDR X2, [X8 + 0x18]
	0x03C82F10 LDR X0, [X8 + 0x40]
	0x03C82F14 LDR X1, [X8 + 0x28]
	0x03C82F18 LDP X20, X19, [X31 + 0x10]
	0x03C82F1C LDR X30, [X31], #0x20
	0x03C82F20 BR X2
	0x03C82F24 LDP X20, X19, [X31 + 0x10]
	0x03C82F28 LDR X30, [X31], #0x20
	0x03C82F2C RET
	0x03C82F30 BL 0x1C16F20
	0x03C82F34 STR X30, [X31 - 0x30]!
	0x03C82F38 STP X22, X21, [X31 + 0x10]
	0x03C82F3C STP X20, X19, [X31 + 0x20]
	0x03C82F40 LDR W1, [X0 + 0x38]
	0x03C82F44 MOVN W8, 0x0
	0x03C82F48 MOV X19, X0
	0x03C82F4C STRB W31, [X0 + 0x18]
	0x03C82F50 STR W8, [X0 + 0x14]
	0x03C82F54 BL 0x3C823B4
	0x03C82F58 LDR W1, [X19 + 0x34]
	0x03C82F5C MOV W21, W0
	0x03C82F60 MOV X0, X19
	0x03C82F64 BL 0x3C823B4
	0x03C82F68 LDR W1, [X19 + 0x38]
	0x03C82F6C MOV W20, W0
	0x03C82F70 MOV X0, X19
	0x03C82F74 BL 0x3C823B4
	0x03C82F78 LDR W1, [X19 + 0x34]
	0x03C82F7C MOV W22, W0
	0x03C82F80 MOV X0, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x765000
	006 Move X20, 0x49E000
	007 Move W8, [X21+2495]
	008 Move X20, [X20+1480]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x49E000
	015 Move X0, [X0+1480]
	016 Call 0x1C17CF4
	017 Move X0, 0x472000
	018 Move X0, [X0+2440]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+2495], W8
	022 Move X0, [X20]
	023 Move X20, 0x472000
	024 Move W8, [X0+224]
	025 Move X20, [X20+2440]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X0, X31
	030 Call GUIUtility.get_systemCopyBuffer
	031 Move X1, [X20]
	032 Move X2, X31
	033 Move X21, X0
	034 Call String.op_Inequality, X0, X1
	035 Move W20, W0
	036 Move TEMP, X0
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfNotEqual {49}
	040 Move W8, [X19+40]
	041 Compare W8, 0
	042 JumpIfNotEqual {46}
	043 Move X0, X21
	044 Call TextEditor.ReplaceNewlinesWithSpaces, X0
	045 Move X21, X0
	046 Move X0, X19
	047 Move X1, X21
	048 Call TextEditor.ReplaceSelection, X0, X1
	049 And W0, W20, 1
	050 Move X20, [X31+16]
	051 Move X19, [X31+24]
	052 Move X30, [X31+32]
	053 Move X21, [X31+40]
	054 Return X0

Method: System.Void MapKey(System.String key, UnityEngine.TextEditor/TextEditOp action)

Disassembly:
	0x03C83048 LDP X22, X21, [X31 + 0x10]
	0x03C8304C LDR X30, [X31], #0x30
	0x03C83050 BR X2
	0x03C83054 LDP X20, X19, [X31 + 0x20]
	0x03C83058 LDP X22, X21, [X31 + 0x10]
	0x03C8305C LDR X30, [X31], #0x30
	0x03C83060 RET
	0x03C83064 STR X30, [X31 - 0x30]!
	0x03C83068 STP X22, X21, [X31 + 0x10]
	0x03C8306C STP X20, X19, [X31 + 0x20]
	0x03C83070 LDR W1, [X0 + 0x38]
	0x03C83074 MOVN W8, 0x0
	0x03C83078 MOV X19, X0
	0x03C8307C STRB W31, [X0 + 0x18]
	0x03C83080 STR W8, [X0 + 0x14]
	0x03C83084 BL 0x3C823B4
	0x03C83088 LDR W1, [X19 + 0x34]
	0x03C8308C MOV W21, W0
	0x03C83090 MOV X0, X19
	0x03C83094 BL 0x3C823B4
	0x03C83098 LDR W1, [X19 + 0x38]
	0x03C8309C MOV W20, W0
	0x03C830A0 MOV X0, X19
	0x03C830A4 BL 0x3C823B4
	0x03C830A8 LDR W1, [X19 + 0x34]
	0x03C830AC MOV W22, W0
	0x03C830B0 MOV X0, X19
	0x03C830B4 BL 0x3C823B4
	0x03C830B8 LDR W8, [X19 + 0x38]
	0x03C830BC CMP W8, W0
	0x03C830C0 B.EQ 0x3C830E0
	0x03C830C4 LDR X8, [X19 + 0x48]
	0x03C830C8 STR W0, [X19 + 0x38]
	0x03C830CC CBZ X8, 0x3C830E0
	0x03C830D0 LDR X9, [X8 + 0x18]
	0x03C830D4 LDR X0, [X8 + 0x40]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x764000
	007 Move X22, 0x4DE000
	008 Move W8, [X21+2496]
	009 Move X22, [X22+672]
	010 Move W19, W1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x4DE000
	017 Move X0, [X0+1960]
	018 Call 0x1C17CF4
	019 Move X0, 0x4DE000
	020 Move X0, [X0+672]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+2496], W8
	024 Move X8, [X22]
	025 Move X0, X20
	026 Move X1, X31
	027 Move X8, [X8+184]
	028 Move X21, [X8]
	029 Call Event.KeyboardEvent, X0
	030 Compare X21, 0
	031 JumpIfEqual {45}
	032 Move X8, 0x4DE000
	033 Move X8, [X8+1960]
	034 Move X1, X0
	035 Move X0, X21
	036 Move W2, W19
	037 Move X3, [X8]
	038 Move X20, [X31+32]
	039 Move X19, [X31+40]
	040 Move X22, [X31+16]
	041 Move X21, [X31+24]
	042 Move X30, [X31+48]
	043 Call Dictionary`2<Object, Int32Enum>.set_Item, X0, X1, X2
	044 Return 
	045 Call 0x1C17F20

Method: System.Void InitKeyActions()

Disassembly:
	0x03C7FB38 CBZ X0, 0x3C7FBB0
	0x03C7FB3C CBZ X22, 0x3C7FBB0
	0x03C7FB40 LDR W8, [X19 + 0x50]
	0x03C7FB44 LDR W9, [X0 + 0x10]
	0x03C7FB48 MOV X0, X22
	0x03C7FB4C MOV W1, W23
	0x03C7FB50 MOV X3, X31
	0x03C7FB54 SUB W2, W9, W8
	0x03C7FB58 BL 0x3228DE4
	0x03C7FB5C MOV X1, X0
	0x03C7FB60 MOV X0, X21
	0x03C7FB64 MOV X2, X31
	0x03C7FB68 BL 0x321B938
	0x03C7FB6C MOV X1, X0
	0x03C7FB70 MOV X0, X20
	0x03C7FB74 MOV X2, X31
	0x03C7FB78 BL 0x3C69948
	0x03C7FB7C LDR W1, [X19 + 0x54]
	0x03C7FB80 MOV X0, X19
	0x03C7FB84 BL 0x3C7E6FC
	0x03C7FB88 MOVN W8, 0x0
	0x03C7FB8C STRB W31, [X19 + 0x29]
	0x03C7FB90 STR W8, [X19 + 0x78]
	0x03C7FB94 CMP W24, W25
	0x03C7FB98 LDP X20, X19, [X31 + 0x30]
	0x03C7FB9C LDP X22, X21, [X31 + 0x20]
	0x03C7FBA0 LDP X24, X23, [X31 + 0x10]
	0x03C7FBA4 CSET W0, NE
	0x03C7FBA8 LDP X30, X25, [X31], #0x40
	0x03C7FBAC RET
	0x03C7FBB0 BL 0x1C16F20
	0x03C7FBB4 STP X30, X21, [X31 - 0x20]!
	0x03C7FBB8 STP X20, X19, [X31 + 0x10]
	0x03C7FBBC LDP W1, W8, [X0 + 0x50]
	0x03C7FBC0 MOV X19, X0
	0x03C7FBC4 CMP W1, W8
	0x03C7FBC8 B.NE 0x3C7FBE8
	0x03C7FBCC MOV X0, X19
	0x03C7FBD0 BL 0x3C7FC60
	0x03C7FBD4 LDR W8, [X19 + 0x50]
	0x03C7FBD8 CMP W8, W0
	0x03C7FBDC B.NE 0x3C7FBF4
	0x03C7FBE0 MOV W0, W31
	0x03C7FBE4 B 0x3C7FC50
	0x03C7FBE8 MOV X0, X19
	0x03C7FBEC BL 0x3C7FA18
	0x03C7FBF0 B 0x3C7FC4C
	0x03C7FBF4 LDR X21, [X19 + 0x38]
	0x03C7FBF8 CBZ X21, 0x3C7FC5C
	0x03C7FBFC MOV W20, W0
	0x03C7FC00 MOV X0, X21
	0x03C7FC04 MOV X1, X31
	0x03C7FC08 BL 0x3C69940
	0x03C7FC0C CBZ X0, 0x3C7FC5C
	0x03C7FC10 LDR W8, [X19 + 0x50]
	0x03C7FC14 MOV W1, W20
	0x03C7FC18 MOV X3, X31
	0x03C7FC1C SUB W2, W8, W20
	0x03C7FC20 BL 0x3228B90
	0x03C7FC24 MOV X1, X0
	0x03C7FC28 MOV X0, X21
	0x03C7FC2C MOV X2, X31
	0x03C7FC30 BL 0x3C69948
	0x03C7FC34 MOV X0, X19
	0x03C7FC38 MOV W1, W20
	0x03C7FC3C BL 0x3C7E6FC
	0x03C7FC40 MOV X0, X19
	0x03C7FC44 MOV W1, W20
	0x03C7FC48 BL 0x3C7E75C
	0x03C7FC4C MOVZ W0, 0x1
	0x03C7FC50 LDP X20, X19, [X31 + 0x10]
	0x03C7FC54 LDP X30, X21, [X31], #0x20
	0x03C7FC58 RET
	0x03C7FC5C BL 0x1C16F20
	0x03C7FC60 STP X30, X21, [X31 - 0x20]!
	0x03C7FC64 STP X20, X19, [X31 + 0x10]
	0x03C7FC68 CBZ W1, 0x3C7FD14
	0x03C7FC6C MOV X19, X0
	0x03C7FC70 BL 0x3C80200
	0x03C7FC74 MOV W20, W0
	0x03C7FC78 CMP W0, 0x1
	0x03C7FC7C B.LT 0x3C7FCB8
	0x03C7FC80 LDR X0, [X19 + 0x38]
	0x03C7FC84 CBZ X0, 0x3C7FD28
	0x03C7FC88 MOV X1, X31
	0x03C7FC8C BL 0x3C69940
	0x03C7FC90 CBZ X0, 0x3C7FD28
	0x03C7FC94 MOV W1, W20
	0x03C7FC98 MOV X2, X31
	0x03C7FC9C BL 0x3222A1C
	0x03C7FCA0 AND W8, W0, 0xFFFF
	0x03C7FCA4 CMP W8, 0x20
	0x03C7FCA8 B.NE 0x3C7FCB8
	0x03C7FCAC MOV X0, X19
	0x03C7FCB0 MOV W1, W20
	0x03C7FCB4 B 0x3C7FC70
	0x03C7FCB8 MOV X0, X19
	0x03C7FCBC MOV W1, W20
	0x03C7FCC0 BL 0x3C81288
	0x03C7FCC4 CMP W0, 0x3
	0x03C7FCC8 B.EQ 0x3C7FD18
	0x03C7FCCC CMP W20, 0x1
	0x03C7FCD0 B.LT 0x3C7FD18
	0x03C7FCD4 MOV W21, W0
	0x03C7FCD8 MOV X0, X19
	0x03C7FCDC MOV W1, W20
	0x03C7FCE0 BL 0x3C80200
	0x03C7FCE4 MOV W1, W0
	0x03C7FCE8 MOV X0, X19
	0x03C7FCEC BL 0x3C81288
	0x03C7FCF0 CMP W0, W21
	0x03C7FCF4 B.NE 0x3C7FD18
	0x03C7FCF8 MOV X0, X19
	0x03C7FCFC MOV W1, W20
	0x03C7FD00 BL 0x3C80200
	0x03C7FD04 MOV W20, W0
	0x03C7FD08 CMP W0, 0x1
	0x03C7FD0C B.GE 0x3C7FCD8
	0x03C7FD10 B 0x3C7FD18
	0x03C7FD14 MOV W20, W31
	0x03C7FD18 MOV W0, W20
	0x03C7FD1C LDP X20, X19, [X31 + 0x10]
	0x03C7FD20 LDP X30, X21, [X31], #0x20
	0x03C7FD24 RET
	0x03C7FD28 BL 0x1C16F20
	0x03C7FD2C STP X30, X21, [X31 - 0x20]!
	0x03C7FD30 STP X20, X19, [X31 + 0x10]
	0x03C7FD34 LDP W1, W8, [X0 + 0x50]
	0x03C7FD38 MOV X19, X0
	0x03C7FD3C CMP W1, W8
	0x03C7FD40 B.NE 0x3C7FDB4
	0x03C7FD44 MOV X0, X19
	0x03C7FD48 BL 0x3C7FDD8
	0x03C7FD4C LDR X8, [X19 + 0x38]
	0x03C7FD50 CBZ X8, 0x3C7FDD4
	0x03C7FD54 LDR W21, [X19 + 0x50]
	0x03C7FD58 MOV W20, W0
	0x03C7FD5C MOV X0, X8
	0x03C7FD60 MOV X1, X31
	0x03C7FD64 BL 0x3C69940
	0x03C7FD68 CBZ X0, 0x3C7FDD4
	0x03C7FD6C LDR W8, [X0 + 0x10]
	0x03C7FD70 CMP W21, W8
	0x03C7FD74 B.GE 0x3C7FDC4
	0x03C7FD78 LDR X21, [X19 + 0x38]
	0x03C7FD7C CBZ X21, 0x3C7FDD4
	0x03C7FD80 MOV X0, X21
	0x03C7FD84 MOV X1, X31
	0x03C7FD88 BL 0x3C69940
	0x03C7FD8C CBZ X0, 0x3C7FDD4
	0x03C7FD90 LDR W1, [X19 + 0x50]
	0x03C7FD94 MOV X3, X31
	0x03C7FD98 SUB W2, W20, W1
	0x03C7FD9C BL 0x3228B90
	0x03C7FDA0 MOV X1, X0
	0x03C7FDA4 MOV X0, X21
	0x03C7FDA8 MOV X2, X31
	0x03C7FDAC BL 0x3C69948
	0x03C7FDB0 B 0x3C7FDBC
	0x03C7FDB4 MOV X0, X19
	0x03C7FDB8 BL 0x3C7FA18
	0x03C7FDBC MOVZ W0, 0x1
	0x03C7FDC0 B 0x3C7FDC8
	0x03C7FDC4 MOV W0, W31
	0x03C7FDC8 LDP X20, X19, [X31 + 0x10]
	0x03C7FDCC LDP X30, X21, [X31], #0x20
	0x03C7FDD0 RET
	0x03C7FDD4 BL 0x1C16F20
	0x03C7FDD8 STR X30, [X31 - 0x30]!
	0x03C7FDDC STP X22, X21, [X31 + 0x10]
	0x03C7FDE0 STP X20, X19, [X31 + 0x20]
	0x03C7FDE4 MOV X19, X0
	0x03C7FDE8 LDR X0, [X0 + 0x38]
	0x03C7FDEC CBZ X0, 0x3C7FFA0
	0x03C7FDF0 MOV W20, W1
	0x03C7FDF4 MOV X1, X31
	0x03C7FDF8 BL 0x3C69940
	0x03C7FDFC CBZ X0, 0x3C7FFA0
	0x03C7FE00 LDR W22, [X0 + 0x10]
	0x03C7FE04 CMP W22, W20
	0x03C7FE08 B.NE 0x3C7FE14
	0x03C7FE0C MOV W21, W20
	0x03C7FE10 B 0x3C7FED4
	0x03C7FE14 MOV X0, X19
	0x03C7FE18 MOV W1, W20
	0x03C7FE1C BL 0x3C81288
	0x03C7FE20 CMP W0, 0x3
	0x03C7FE24 B.NE 0x3C7FE98
	0x03C7FE28 LDR X0, [X19 + 0x38]
	0x03C7FE2C CBZ X0, 0x3C7FFA0
	0x03C7FE30 MOV X1, X31
	0x03C7FE34 BL 0x3C69940
	0x03C7FE38 CBZ X0, 0x3C7FFA0
	0x03C7FE3C MOV W1, W20
	0x03C7FE40 MOV X2, X31
	0x03C7FE44 BL 0x3222A1C
	0x03C7FE48 AND W8, W0, 0xFFFF
	0x03C7FE4C CMP W8, 0x9
	0x03C7FE50 B.EQ 0x3C7FE80
	0x03C7FE54 LDR X0, [X19 + 0x38]
	0x03C7FE58 CBZ X0, 0x3C7FFA0
	0x03C7FE5C MOV X1, X31
	0x03C7FE60 BL 0x3C69940
	0x03C7FE64 CBZ X0, 0x3C7FFA0
	0x03C7FE68 MOV W1, W20
	0x03C7FE6C MOV X2, X31
	0x03C7FE70 BL 0x3222A1C
	0x03C7FE74 AND W8, W0, 0xFFFF
	0x03C7FE78 CMP W8, 0xA
	0x03C7FE7C B.NE 0x3C7FEC8
	0x03C7FE80 MOV X0, X19
	0x03C7FE84 MOV W1, W20
	0x03C7FE88 LDP X20, X19, [X31 + 0x20]
	0x03C7FE8C LDP X22, X21, [X31 + 0x10]
	0x03C7FE90 LDR X30, [X31], #0x30
	0x03C7FE94 B 0x3C80060
	0x03C7FE98 MOV W21, W0
	0x03C7FE9C MOV X0, X19
	0x03C7FEA0 MOV W1, W20
	0x03C7FEA4 BL 0x3C80060
	0x03C7FEA8 MOV W20, W0
	0x03C7FEAC CMP W0, W22
	0x03C7FEB0 B.GE 0x3C7FEC8
	0x03C7FEB4 MOV X0, X19
	0x03C7FEB8 MOV W1, W20
	0x03C7FEBC BL 0x3C81288
	0x03C7FEC0 CMP W0, W21
	0x03C7FEC4 B.EQ 0x3C7FE9C
	0x03C7FEC8 CMP W20, W22
	0x03C7FECC MOV W21, W22
	0x03C7FED0 B.NE 0x3C7FEE8
	0x03C7FED4 MOV W0, W21
	0x03C7FED8 LDP X20, X19, [X31 + 0x20]
	0x03C7FEDC LDP X22, X21, [X31 + 0x10]
	0x03C7FEE0 LDR X30, [X31], #0x30
	0x03C7FEE4 RET
	0x03C7FEE8 LDR X0, [X19 + 0x38]
	0x03C7FEEC CBZ X0, 0x3C7FFA0
	0x03C7FEF0 MOV X1, X31
	0x03C7FEF4 BL 0x3C69940
	0x03C7FEF8 CBZ X0, 0x3C7FFA0
	0x03C7FEFC MOV W1, W20
	0x03C7FF00 MOV X2, X31
	0x03C7FF04 BL 0x3222A1C
	0x03C7FF08 AND W8, W0, 0xFFFF
	0x03C7FF0C CMP W8, 0x20
	0x03C7FF10 B.NE 0x3C7FF50
	0x03C7FF14 CMP W20, W22
	0x03C7FF18 B.GE 0x3C7FE0C
	0x03C7FF1C MOV W21, W20
	0x03C7FF20 MOV X0, X19
	0x03C7FF24 MOV W1, W21
	0x03C7FF28 BL 0x3C81288
	0x03C7FF2C CMP W0, 0x3
	0x03C7FF30 B.NE 0x3C7FED4
	0x03C7FF34 MOV X0, X19
	0x03C7FF38 MOV W1, W21
	0x03C7FF3C BL 0x3C80060
	0x03C7FF40 MOV W21, W0
	0x03C7FF44 CMP W0, W22
	0x03C7FF48 B.LT 0x3C7FF20
	0x03C7FF4C B 0x3C7FED4
	0x03C7FF50 LDR X0, [X19 + 0x38]
	0x03C7FF54 CBZ X0, 0x3C7FFA0
	0x03C7FF58 MOV X1, X31
	0x03C7FF5C BL 0x3C69940
	0x03C7FF60 CBZ X0, 0x3C7FFA0
	0x03C7FF64 MOV W1, W20
	0x03C7FF68 MOV X2, X31
	0x03C7FF6C BL 0x3222A1C
	0x03C7FF70 AND W8, W0, 0xFFFF
	0x03C7FF74 CMP W8, 0x9
	0x03C7FF78 B.EQ 0x3C7FE0C
	0x03C7FF7C LDR X0, [X19 + 0x38]
	0x03C7FF80 CBZ X0, 0x3C7FFA0
	0x03C7FF84 MOV X1, X31
	0x03C7FF88 BL 0x3C69940
	0x03C7FF8C CBZ X0, 0x3C7FFA0
	0x03C7FF90 MOV W1, W20
	0x03C7FF94 MOV X2, X31
	0x03C7FF98 BL 0x3222A1C
	0x03C7FF9C B 0x3C7FE0C
	0x03C7FFA0 BL 0x1C16F20
	0x03C7FFA4 STR X30, [X31 - 0x30]!
	0x03C7FFA8 STP X22, X21, [X31 + 0x10]
	0x03C7FFAC STP X20, X19, [X31 + 0x20]
	0x03C7FFB0 LDP W20, W8, [X0 + 0x50]
	0x03C7FFB4 MOV X19, X0
	0x03C7FFB8 CMP W20, W8
	0x03C7FFBC B.NE 0x3C80038
	0x03C7FFC0 LDR X0, [X19 + 0x38]
	0x03C7FFC4 CBZ X0, 0x3C8005C
	0x03C7FFC8 MOV X1, X31
	0x03C7FFCC BL 0x3C69940
	0x03C7FFD0 CBZ X0, 0x3C8005C
	0x03C7FFD4 LDR W8, [X0 + 0x10]
	0x03C7FFD8 CMP W20, W8
	0x03C7FFDC B.GE 0x3C80048
	0x03C7FFE0 LDR X20, [X19 + 0x38]
	0x03C7FFE4 CBZ X20, 0x3C8005C
	0x03C7FFE8 MOV X0, X20
	0x03C7FFEC MOV X1, X31
	0x03C7FFF0 BL 0x3C69940
	0x03C7FFF4 LDR W21, [X19 + 0x50]
	0x03C7FFF8 MOV X22, X0
	0x03C7FFFC MOV X0, X19
	0x03C80000 MOV W1, W21
	0x03C80004 BL 0x3C80060
	0x03C80008 CBZ X22, 0x3C8005C
	0x03C8000C LDR W8, [X19 + 0x50]
	0x03C80010 MOV W1, W21
	0x03C80014 MOV X3, X31
	0x03C80018 SUB W2, W0, W8
	0x03C8001C MOV X0, X22
	0x03C80020 BL 0x3228B90
	0x03C80024 MOV X1, X0
	0x03C80028 MOV X0, X20
	0x03C8002C MOV X2, X31
	0x03C80030 BL 0x3C69948
	0x03C80034 B 0x3C80040
	0x03C80038 MOV X0, X19
	0x03C8003C BL 0x3C7FA18
	0x03C80040 MOVZ W0, 0x1
	0x03C80044 B 0x3C8004C
	0x03C80048 MOV W0, W31
	0x03C8004C LDP X20, X19, [X31 + 0x20]
	0x03C80050 LDP X22, X21, [X31 + 0x10]
	0x03C80054 LDR X30, [X31], #0x30
	0x03C80058 RET
	0x03C8005C BL 0x1C16F20
	0x03C80060 STR X30, [X31 - 0x30]!
	0x03C80064 STP X22, X21, [X31 + 0x10]
	0x03C80068 STP X20, X19, [X31 + 0x20]
	0x03C8006C ADRP X21, 0x766000
	0x03C80070 LDRB W8, [X21 + 0x9C5]
	0x03C80074 MOV W20, W1
	0x03C80078 MOV X19, X0
	0x03C8007C TBNZ X8, 0x0, 0x3C80094
	0x03C80080 ADRP X0, 0x475000
	0x03C80084 LDR X0, [X0 + 0x170]
	0x03C80088 BL 0x1C16CF4
	0x03C8008C MOVZ W8, 0x1
	0x03C80090 STRB W8, [X21 + 0x9C5]
	0x03C80094 LDR X0, [X19 + 0x38]
	0x03C80098 CBZ X0, 0x3C80134
	0x03C8009C MOV X1, X31
	0x03C800A0 BL 0x3C69940
	0x03C800A4 CBZ X0, 0x3C80134
	0x03C800A8 MOV X8, X0
	0x03C800AC LDR X0, [X19 + 0x38]
	0x03C800B0 CBZ X0, 0x3C80134
	0x03C800B4 LDR W8, [X8 + 0x10]
	0x03C800B8 ADRP X22, 0x475000
	0x03C800BC LDR X22, [X22 + 0x170]
	0x03C800C0 CMP W8, W20
	0x03C800C4 CINC W20, W20, GT
	0x03C800C8 MOV X1, X31
	0x03C800CC BL 0x3C69940
	0x03C800D0 CBZ X0, 0x3C80134
	0x03C800D4 LDR W8, [X0 + 0x10]
	0x03C800D8 CMP W20, W8
	0x03C800DC B.GE 0x3C80138
	0x03C800E0 LDR X0, [X19 + 0x38]
	0x03C800E4 CBZ X0, 0x3C80134
	0x03C800E8 MOV X1, X31
	0x03C800EC BL 0x3C69940
	0x03C800F0 CBZ X0, 0x3C80134
	0x03C800F4 MOV W1, W20
	0x03C800F8 MOV X2, X31
	0x03C800FC BL 0x3222A1C
	0x03C80100 LDR X8, [X22]
	0x03C80104 MOV W21, W0
	0x03C80108 LDR W9, [X8 + 0xE0]
	0x03C8010C CBNZ W9, 0x3C80118
	0x03C80110 MOV X0, X8
	0x03C80114 BL 0x1C16DFC
	0x03C80118 MOV W0, W21
	0x03C8011C MOV X1, X31
	0x03C80120 BL 0x331C0FC
	0x03C80124 TBZ X0, 0x0, 0x3C80138
	0x03C80128 LDR X0, [X19 + 0x38]
	0x03C8012C ADD W20, W20, 0x1
	0x03C80130 CBNZ X0, 0x3C800C8
	0x03C80134 BL 0x1C16F20
	0x03C80138 MOV W0, W20
	0x03C8013C LDP X20, X19, [X31 + 0x20]
	0x03C80140 LDP X22, X21, [X31 + 0x10]
	0x03C80144 LDR X30, [X31], #0x30
	0x03C80148 RET
	0x03C8014C STP X30, X21, [X31 - 0x20]!
	0x03C80150 STP X20, X19, [X31 + 0x10]
	0x03C80154 LDP W1, W8, [X0 + 0x50]
	0x03C80158 MOV X19, X0
	0x03C8015C CMP W1, W8
	0x03C80160 B.NE 0x3C801DC
	0x03C80164 CMP W1, 0x1
	0x03C80168 B.LT 0x3C801F4
	0x03C8016C MOV X0, X19
	0x03C80170 BL 0x3C80200
	0x03C80174 LDR X21, [X19 + 0x38]
	0x03C80178 CBZ X21, 0x3C801FC
	0x03C8017C MOV W20, W0
	0x03C80180 MOV X0, X21
	0x03C80184 MOV X1, X31
	0x03C80188 BL 0x3C69940
	0x03C8018C CBZ X0, 0x3C801FC
	0x03C80190 LDR W8, [X19 + 0x50]
	0x03C80194 MOV W1, W20
	0x03C80198 MOV X3, X31
	0x03C8019C SUB W2, W8, W20
	0x03C801A0 BL 0x3228B90
	0x03C801A4 MOV X1, X0
	0x03C801A8 MOV X0, X21
	0x03C801AC MOV X2, X31
	0x03C801B0 BL 0x3C69948
	0x03C801B4 MOV X0, X19
	0x03C801B8 MOV W1, W20
	0x03C801BC BL 0x3C7E6FC
	0x03C801C0 MOV X0, X19
	0x03C801C4 MOV W1, W20
	0x03C801C8 BL 0x3C7E75C
	0x03C801CC MOVN W8, 0x0
	0x03C801D0 STRB W31, [X19 + 0x29]
	0x03C801D4 STR W8, [X19 + 0x78]
	0x03C801D8 B 0x3C801E4
	0x03C801DC MOV X0, X19
	0x03C801E0 BL 0x3C7FA18
	0x03C801E4 MOVZ W0, 0x1
	0x03C801E8 LDP X20, X19, [X31 + 0x10]
	0x03C801EC LDP X30, X21, [X31], #0x20
	0x03C801F0 RET
	0x03C801F4 MOV W0, W31
	0x03C801F8 B 0x3C801E8
	0x03C801FC BL 0x1C16F20
	0x03C80200 STR X30, [X31 - 0x30]!
	0x03C80204 STP X22, X21, [X31 + 0x10]
	0x03C80208 STP X20, X19, [X31 + 0x20]
	0x03C8020C ADRP X21, 0x766000
	0x03C80210 LDRB W8, [X21 + 0x9C4]
	0x03C80214 MOV W20, W1
	0x03C80218 MOV X19, X0
	0x03C8021C TBNZ X8, 0x0, 0x3C80234
	0x03C80220 ADRP X0, 0x475000
	0x03C80224 LDR X0, [X0 + 0x170]
	0x03C80228 BL 0x1C16CF4
	0x03C8022C MOVZ W8, 0x1
	0x03C80230 STRB W8, [X21 + 0x9C4]
	0x03C80234 CMP W20, 0x0
	0x03C80238 CSET W8, GT
	0x03C8023C SUB W20, W20, W8
	0x03C80240 CMP W20, 0x1
	0x03C80244 B.LT 0x3C802A8
	0x03C80248 ADRP X22, 0x475000
	0x03C8024C LDR X22, [X22 + 0x170]
	0x03C80250 LDR X0, [X19 + 0x38]
	0x03C80254 CBZ X0, 0x3C802BC
	0x03C80258 MOV X1, X31
	0x03C8025C BL 0x3C69940
	0x03C80260 CBZ X0, 0x3C802BC
	0x03C80264 MOV W1, W20
	0x03C80268 MOV X2, X31
	0x03C8026C BL 0x3222A1C
	0x03C80270 LDR X8, [X22]
	0x03C80274 MOV W21, W0
	0x03C80278 LDR W9, [X8 + 0xE0]
	0x03C8027C CBNZ W9, 0x3C80288
	0x03C80280 MOV X0, X8
	0x03C80284 BL 0x1C16DFC
	0x03C80288 MOV W0, W21
	0x03C8028C MOV X1, X31
	0x03C80290 BL 0x331C0FC
	0x03C80294 TBZ X0, 0x0, 0x3C802A8
	0x03C80298 CMP W20, 0x2
	0x03C8029C SUB W20, W20, 0x1
	0x03C802A0 B.GE 0x3C80250
	0x03C802A4 MOV W20, W31
	0x03C802A8 MOV W0, W20
	0x03C802AC LDP X20, X19, [X31 + 0x20]
	0x03C802B0 LDP X22, X21, [X31 + 0x10]
	0x03C802B4 LDR X30, [X31], #0x30
	0x03C802B8 RET
	0x03C802BC BL 0x1C16F20
	0x03C802C0 STP X30, X19, [X31 - 0x10]!
	0x03C802C4 LDR W1, [X0 + 0x50]
	0x03C802C8 MOV X19, X0
	0x03C802CC BL 0x3C7E75C
	0x03C802D0 MOVN W8, 0x0
	0x03C802D4 STRB W31, [X19 + 0x29]
	0x03C802D8 STR W8, [X19 + 0x78]
	0x03C802DC LDP X30, X19, [X31], #0x10
	0x03C802E0 RET
	0x03C802E4 STP X30, X21, [X31 - 0x20]!
	0x03C802E8 STP X20, X19, [X31 + 0x10]
	0x03C802EC MOV X20, X1
	0x03C802F0 MOV X19, X0
	0x03C802F4 BL 0x3C7FA18
	0x03C802F8 LDR X21, [X19 + 0x38]
	0x03C802FC CBZ X21, 0x3C80370
	0x03C80300 MOV X0, X21
	0x03C80304 MOV X1, X31
	0x03C80308 BL 0x3C69940
	0x03C8030C CBZ X0, 0x3C80370
	0x03C80310 LDR W1, [X19 + 0x50]
	0x03C80314 MOV X2, X20
	0x03C80318 MOV X3, X31
	0x03C8031C BL 0x3227EBC
	0x03C80320 MOV X1, X0
	0x03C80324 MOV X0, X21
	0x03C80328 MOV X2, X31
	0x03C8032C BL 0x3C69948
	0x03C80330 CBZ X20, 0x3C80370
	0x03C80334 LDR W8, [X19 + 0x50]
	0x03C80338 LDR W9, [X20 + 0x10]
	0x03C8033C MOV X0, X19
	0x03C80340 ADD W20, W9, W8
	0x03C80344 MOV W1, W20
	0x03C80348 BL 0x3C7E6FC
	0x03C8034C MOV X0, X19
	0x03C80350 MOV W1, W20
	0x03C80354 BL 0x3C7E75C
	0x03C80358 MOVN W8, 0x0
	0x03C8035C STRB W31, [X19 + 0x29]
	0x03C80360 STR W8, [X19 + 0x78]
	0x03C80364 LDP X20, X19, [X31 + 0x10]
	0x03C80368 LDP X30, X21, [X31], #0x20
	0x03C8036C RET
	0x03C80370 BL 0x1C16F20
	0x03C80374 SUB X31, X31, 0x30
	0x03C80378 STP X30, X21, [X31 + 0x10]
	0x03C8037C STP X20, X19, [X31 + 0x20]
	0x03C80380 ADRP X20, 0x766000
	0x03C80384 STRH W1, [X31 + 0xC]
	0x03C80388 ADRP X21, 0x475000
	0x03C8038C LDRB W8, [X20 + 0x9B7]
	0x03C80390 LDR X21, [X21 + 0x170]
	0x03C80394 MOV X19, X0
	0x03C80398 TBNZ X8, 0x0, 0x3C803B0
	0x03C8039C ADRP X0, 0x475000
	0x03C803A0 LDR X0, [X0 + 0x170]
	0x03C803A4 BL 0x1C16CF4
	0x03C803A8 MOVZ W8, 0x1
	0x03C803AC STRB W8, [X20 + 0x9B7]
	0x03C803B0 LDR X0, [X21]
	0x03C803B4 LDR W8, [X0 + 0xE0]
	0x03C803B8 CBNZ W8, 0x3C803C0
	0x03C803BC BL 0x1C16DFC
	0x03C803C0 ADD X0, X31, 0xC
	0x03C803C4 MOV X1, X31
	0x03C803C8 BL 0x330A76C
	0x03C803CC MOV X1, X0
	0x03C803D0 MOV X0, X19
	0x03C803D4 BL 0x3C802E4
	0x03C803D8 LDP X20, X19, [X31 + 0x20]
	0x03C803DC LDP X30, X21, [X31 + 0x10]
	0x03C803E0 ADD X31, X31, 0x30
	0x03C803E4 RET
	0x03C803E8 STP X30, X19, [X31 - 0x10]!
	0x03C803EC LDP W8, W1, [X0 + 0x50]
	0x03C803F0 MOV X19, X0
	0x03C803F4 MOVN W9, 0x0
	0x03C803F8 STRB W31, [X0 + 0x29]
	0x03C803FC CMP W1, W8
	0x03C80400 STR W9, [X0 + 0x78]
	0x03C80404 B.NE 0x3C80438
	0x03C80408 MOV X0, X19
	0x03C8040C BL 0x3C80060
	0x03C80410 MOV W1, W0
	0x03C80414 MOV X0, X19
	0x03C80418 BL 0x3C7E6FC
	0x03C8041C LDR X8, [X19]
	0x03C80420 MOV X0, X19
	0x03C80424 LDP X9, X1, [X8 + 0x188]
	0x03C80428 BLR X9
	0x03C8042C LDR W1, [X19 + 0x50]
	0x03C80430 MOV X0, X19
	0x03C80434 B 0x3C8044C
	0x03C80438 MOV X0, X19
	0x03C8043C B.LE 0x3C80448
	0x03C80440 LDP X30, X19, [X31], #0x10
	0x03C80444 B 0x3C7E6FC
	0x03C80448 MOV W1, W8
	0x03C8044C LDP X30, X19, [X31], #0x10
	0x03C80450 B 0x3C7E75C
	0x03C80454 LDR X8, [X0]
	0x03C80458 LDP X2, X1, [X8 + 0x188]
	0x03C8045C BR X2
	0x03C80460 STP X30, X19, [X31 - 0x10]!
	0x03C80464 LDP W8, W1, [X0 + 0x50]
	0x03C80468 MOV X19, X0
	0x03C8046C CMP W1, W8
	0x03C80470 B.NE 0x3C80490
	0x03C80474 BL 0x3C80200
	0x03C80478 MOV W1, W0
	0x03C8047C MOV X0, X19
	0x03C80480 BL 0x3C7E6FC
	0x03C80484 LDR W1, [X19 + 0x50]
	0x03C80488 MOV X0, X19
	0x03C8048C B 0x3C80498
	0x03C80490 B.LE 0x3C804A0
	0x03C80494 MOV W1, W8
	0x03C80498 BL 0x3C7E75C
	0x03C8049C B 0x3C804A4
	0x03C804A0 BL 0x3C7E6FC
	0x03C804A4 MOVN W8, 0x0
	0x03C804A8 STRB W31, [X19 + 0x29]
	0x03C804AC STR W8, [X19 + 0x78]
	0x03C804B0 LDP X30, X19, [X31], #0x10
	0x03C804B4 RET
	0x03C804B8 STR X30, [X31 - 0x20]!
	0x03C804BC STP X20, X19, [X31 + 0x10]
	0x03C804C0 LDP W8, W1, [X0 + 0x50]
	0x03C804C4 MOV X19, X0
	0x03C804C8 CMP W1, W8
	0x03C804CC B.GE 0x3C804DC
	0x03C804D0 MOV W1, W8
	0x03C804D4 BL 0x3C7E75C
	0x03C804D8 B 0x3C804E0
	0x03C804DC BL 0x3C7E6FC
	0x03C804E0 MOV X0, X19
	0x03C804E4 BL 0x3C7E990
	0x03C804E8 LDR V0, [X19 + 0x60]
	0x03C804EC LDR X8, [X19]
	0x03C804F0 FMOV S1, -1
	0x03C804F4 LDR X20, [X19 + 0x20]
	0x03C804F8 FADD S0, S0, S1
	0x03C804FC STR S0, [X19 + 0x60]
	0x03C80500 LDP X9, X1, [X8 + 0x178]
	0x03C80504 MOV X0, X19
	0x03C80508 BLR X9
	0x03C8050C CBZ X20, 0x3C80564
	0x03C80510 LDP S4, S5, [X19 + 0x5C]
	0x03C80514 LDR X1, [X19 + 0x38]
	0x03C80518 MOV X0, X20
	0x03C8051C MOV X2, X31
	0x03C80520 BL 0x3C7502C
	0x03C80524 MOV W20, W0
	0x03C80528 MOV X0, X19
	0x03C8052C MOV W1, W20
	0x03C80530 BL 0x3C7E75C
	0x03C80534 MOV X0, X19
	0x03C80538 MOV W1, W20
	0x03C8053C BL 0x3C7E6FC
	0x03C80540 LDR W8, [X19 + 0x50]
	0x03C80544 CMP W8, 0x0
	0x03C80548 B.GT 0x3C80558
	0x03C8054C MOVN W8, 0x0
	0x03C80550 STRB W31, [X19 + 0x29]
	0x03C80554 STR W8, [X19 + 0x78]

ISIL:
	001 Subtract X31, X31, 368
	002 Move [X31+272], X29
	003 Move [X31+280], X30
	004 Move [X31+288], X28
	005 Move [X31+296], X27
	006 Move [X31+304], X26
	007 Move [X31+312], X25
	008 Move [X31+320], X24
	009 Move [X31+328], X23
	010 Move [X31+336], X22
	011 Move [X31+344], X21
	012 Move [X31+352], X20
	013 Move [X31+360], X19
	014 Move X19, 0x768000
	015 Move X20, 0x4E2000
	016 Move W8, [X19+2497]
	017 Move X20, [X20+672]
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {213}
	022 Move X0, 0x4E2000
	023 Move X0, [X0+1760]
	024 Call 0x1C17CF4
	025 Move X0, 0x4E2000
	026 Move X0, [X0+1768]
	027 Call 0x1C17CF4
	028 Move X0, 0x4E2000
	029 Move X0, [X0+672]
	030 Call 0x1C17CF4
	031 Move X0, 0x4E2000
	032 Move X0, [X0+1480]
	033 Call 0x1C17CF4
	034 Move X0, 0x4C9000
	035 Move X0, [X0+248]
	036 Call 0x1C17CF4
	037 Move X0, 0x4C6000
	038 Move X0, [X0+3736]
	039 Call 0x1C17CF4
	040 Move X0, 0x4E2000
	041 Move X0, [X0+1776]
	042 Call 0x1C17CF4
	043 Move X0, 0x4E2000
	044 Move X0, [X0+1488]
	045 Call 0x1C17CF4
	046 Move X0, 0x4E2000
	047 Move X0, [X0+1496]
	048 Call 0x1C17CF4
	049 Move X0, 0x4E2000
	050 Move X0, [X0+1504]
	051 Call 0x1C17CF4
	052 Move X0, 0x4E2000
	053 Move X0, [X0+1512]
	054 Call 0x1C17CF4
	055 Move X0, 0x4C7000
	056 Move X0, [X0+4008]
	057 Call 0x1C17CF4
	058 Move X0, 0x4E2000
	059 Move X0, [X0+1520]
	060 Call 0x1C17CF4
	061 Move X0, 0x4E2000
	062 Move X0, [X0+1528]
	063 Call 0x1C17CF4
	064 Move X0, 0x4E2000
	065 Move X0, [X0+1784]
	066 Call 0x1C17CF4
	067 Move X0, 0x4E2000
	068 Move X0, [X0+1792]
	069 Call 0x1C17CF4
	070 Move X0, 0x4E2000
	071 Move X0, [X0+1536]
	072 Call 0x1C17CF4
	073 Move X0, 0x4E2000
	074 Move X0, [X0+1544]
	075 Call 0x1C17CF4
	076 Move X0, 0x4E2000
	077 Move X0, [X0+1552]
	078 Call 0x1C17CF4
	079 Move X0, 0x4E2000
	080 Move X0, [X0+1800]
	081 Call 0x1C17CF4
	082 Move X0, 0x4E2000
	083 Move X0, [X0+1560]
	084 Call 0x1C17CF4
	085 Move X0, 0x4E2000
	086 Move X0, [X0+1568]
	087 Call 0x1C17CF4
	088 Move X0, 0x4E2000
	089 Move X0, [X0+1808]
	090 Call 0x1C17CF4
	091 Move X0, 0x4E2000
	092 Move X0, [X0+1816]
	093 Call 0x1C17CF4
	094 Move X0, 0x4E2000
	095 Move X0, [X0+1824]
	096 Call 0x1C17CF4
	097 Move X0, 0x4E2000
	098 Move X0, [X0+1576]
	099 Call 0x1C17CF4
	100 Move X0, 0x4C7000
	101 Move X0, [X0+4016]
	102 Call 0x1C17CF4
	103 Move X0, 0x4E2000
	104 Move X0, [X0+1584]
	105 Call 0x1C17CF4
	106 Move X0, 0x4E2000
	107 Move X0, [X0+1832]
	108 Call 0x1C17CF4
	109 Move X0, 0x4E2000
	110 Move X0, [X0+1592]
	111 Call 0x1C17CF4
	112 Move X0, 0x4C9000
	113 Move X0, [X0+544]
	114 Call 0x1C17CF4
	115 Move X0, 0x4E2000
	116 Move X0, [X0+1600]
	117 Call 0x1C17CF4
	118 Move X0, 0x4E2000
	119 Move X0, [X0+1608]
	120 Call 0x1C17CF4
	121 Move X0, 0x4E2000
	122 Move X0, [X0+1840]
	123 Call 0x1C17CF4
	124 Move X0, 0x4E2000
	125 Move X0, [X0+1848]
	126 Call 0x1C17CF4
	127 Move X0, 0x4E2000
	128 Move X0, [X0+1616]
	129 Call 0x1C17CF4
	130 Move X0, 0x4E2000
	131 Move X0, [X0+1624]
	132 Call 0x1C17CF4
	133 Move X0, 0x4AE000
	134 Move X0, [X0+2872]
	135 Call 0x1C17CF4
	136 Move X0, 0x4E2000
	137 Move X0, [X0+1632]
	138 Call 0x1C17CF4
	139 Move X0, 0x4E2000
	140 Move X0, [X0+1640]
	141 Call 0x1C17CF4
	142 Move X0, 0x4E2000
	143 Move X0, [X0+1648]
	144 Call 0x1C17CF4
	145 Move X0, 0x4E2000
	146 Move X0, [X0+1656]
	147 Call 0x1C17CF4
	148 Move X0, 0x4C9000
	149 Move X0, [X0+664]
	150 Call 0x1C17CF4
	151 Move X0, 0x4E2000
	152 Move X0, [X0+1856]
	153 Call 0x1C17CF4
	154 Move X0, 0x4E2000
	155 Move X0, [X0+1864]
	156 Call 0x1C17CF4
	157 Move X0, 0x4E2000
	158 Move X0, [X0+1872]
	159 Call 0x1C17CF4
	160 Move X0, 0x4E2000
	161 Move X0, [X0+1880]
	162 Call 0x1C17CF4
	163 Move X0, 0x4B9000
	164 Move X0, [X0+1888]
	165 Call 0x1C17CF4
	166 Move X0, 0x4E2000
	167 Move X0, [X0+1888]
	168 Call 0x1C17CF4
	169 Move X0, 0x4E2000
	170 Move X0, [X0+1896]
	171 Call 0x1C17CF4
	172 Move X0, 0x4E2000
	173 Move X0, [X0+1664]
	174 Call 0x1C17CF4
	175 Move X0, 0x4E2000
	176 Move X0, [X0+1672]
	177 Call 0x1C17CF4
	178 Move X0, 0x4E2000
	179 Move X0, [X0+1904]
	180 Call 0x1C17CF4
	181 Move X0, 0x4E2000
	182 Move X0, [X0+1912]
	183 Call 0x1C17CF4
	184 Move X0, 0x4E2000
	185 Move X0, [X0+1680]
	186 Call 0x1C17CF4
	187 Move X0, 0x4E2000
	188 Move X0, [X0+1688]
	189 Call 0x1C17CF4
	190 Move X0, 0x4E2000
	191 Move X0, [X0+1920]
	192 Call 0x1C17CF4
	193 Move X0, 0x4E2000
	194 Move X0, [X0+1696]
	195 Call 0x1C17CF4
	196 Move X0, 0x4E2000
	197 Move X0, [X0+1704]
	198 Call 0x1C17CF4
	199 Move X0, 0x4E2000
	200 Move X0, [X0+1928]
	201 Call 0x1C17CF4
	202 Move X0, 0x4E2000
	203 Move X0, [X0+1936]
	204 Call 0x1C17CF4
	205 Move X0, 0x4E2000
	206 Move X0, [X0+1712]
	207 Call 0x1C17CF4
	208 Move X0, 0x4E2000
	209 Move X0, [X0+1944]
	210 Call 0x1C17CF4
	211 Move W8, 1
	212 Move [X19+2497], W8
	213 Move X8, [X20]
	214 Move X8, [X8+184]
	215 Move X8, [X8]
	216 Compare X8, 0
	217 JumpIfEqual {232}
	218 Move X20, [X31+352]
	219 Move X19, [X31+360]
	220 Move X22, [X31+336]
	221 Move X21, [X31+344]
	222 Move X24, [X31+320]
	223 Move X23, [X31+328]
	224 Move X26, [X31+304]
	225 Move X25, [X31+312]
	226 Move X28, [X31+288]
	227 Move X27, [X31+296]
	228 Move X29, [X31+272]
	229 Move X30, [X31+280]
	230 Add X31, X31, 368
	231 Return 
	232 Move X8, 0x4E2000
	233 Move X8, [X8+1768]
	234 Move X0, [X8]
	235 Call 0x1C17F10
	236 Move X8, 0x4E2000
	237 Move X8, [X8+1760]
	238 Move X19, X0
	239 Move X1, [X8]
	240 Call Dictionary`2<Object, Int32Enum>..ctor, X0
	241 Move X8, [X20]
	242 Move W1, W31
	243 Move X8, [X8+184]
	244 Move [X8], X19
	245 Move X8, 0x4AE000
	246 Move X8, [X8+2872]
	247 Move X0, [X8]
	248 Call TextEditor.MapKey, X0, X1
	249 Move X8, 0x4B9000
	250 Move X8, [X8+1888]
	251 Move W1, 1
	252 Move X0, [X8]
	253 Call TextEditor.MapKey, X0, X1
	254 Move X8, 0x4C7000
	255 Move X8, [X8+4008]
	256 Move W1, 2
	257 Move X0, [X8]
	258 Call TextEditor.MapKey, X0, X1
	259 Move X8, 0x4C7000
	260 Move X8, [X8+4016]
	261 Move W1, 3
	262 Move X0, [X8]
	263 Call TextEditor.MapKey, X0, X1
	264 Move X8, 0x4E2000
	265 Move X8, [X8+1824]
	266 Move W1, 18
	267 Move X0, [X8]
	268 Call TextEditor.MapKey, X0, X1
	269 Move X8, 0x4E2000
	270 Move X8, [X8+1888]
	271 Move W1, 19
	272 Move X0, [X8]
	273 Call TextEditor.MapKey, X0, X1
	274 Move X8, 0x4E2000
	275 Move X8, [X8+1904]
	276 Move W1, 20
	277 Move X0, [X8]
	278 Call TextEditor.MapKey, X0, X1
	279 Move X8, 0x4E2000
	280 Move X8, [X8+1816]
	281 Move W1, 21
	282 Move X0, [X8]
	283 Call TextEditor.MapKey, X0, X1
	284 Move X8, 0x4C9000
	285 Move X8, [X8+248]
	286 Move W1, 36
	287 Move X0, [X8]
	288 Call TextEditor.MapKey, X0, X1
	289 Move X8, 0x4C9000
	290 Move X8, [X8+544]
	291 Move W1, 37
	292 Move X0, [X8]
	293 Call TextEditor.MapKey, X0, X1
	294 Move X8, 0x4E2000
	295 Move X8, [X8+1544]
	296 Move W1, 37
	297 Move X0, [X8]
	298 Call TextEditor.MapKey, X0, X1
	299 Move X0, X31
	300 Call SystemInfo.get_operatingSystemFamily
	301 Move X21, 0x4E2000
	302 Move X22, 0x4E2000
	303 Move X8, 0x4E2000
	304 Move X20, 0x4E2000
	305 Move X23, 0x4E2000
	306 Move X19, 0x4E2000
	307 Move X24, 0x4E2000
	308 Move X21, [X21+1928]
	309 Move X22, [X22+1528]
	310 Move X8, [X8+1480]
	311 Move X20, [X20+1704]
	312 Move X23, [X23+1600]
	313 Move X19, [X19+1592]
	314 Move X24, [X24+1656]
	315 NotImplemented "Instruction CMP not yet implemented."
	316 Move X0, [X8]
	317 Move W1, 10
	318 Call TextEditor.MapKey, X0, X1
	319 Move X0, [X22]
	320 Move W1, 11
	321 Call TextEditor.MapKey, X0, X1
	322 Move X8, 0x4E1000
	323 Move X8, [X8+1520]
	324 Move W1, 12
	325 Move X0, [X8]
	326 Call TextEditor.MapKey, X0, X1
	327 Move X8, 0x4E1000
	328 Move X8, [X8+1608]
	329 Move W1, 13
	330 Move X0, [X8]
	331 Call TextEditor.MapKey, X0, X1
	332 Move X8, 0x4E1000
	333 Move X8, [X8+1688]
	334 Move W1, 15
	335 Move X0, [X8]
	336 Call TextEditor.MapKey, X0, X1
	337 Move X8, 0x4E1000
	338 Move X8, [X8+1648]
	339 Move W1, 14
	340 Move X0, [X8]
	341 Call TextEditor.MapKey, X0, X1
	342 Move X0, [X24]
	343 Move W1, 10
	344 Call TextEditor.MapKey, X0, X1
	345 Move X0, [X19]
	346 Move W1, 11
	347 Call TextEditor.MapKey, X0, X1
	348 Move X0, [X23]
	349 Move W1, 6
	350 Call TextEditor.MapKey, X0, X1
	351 Move X0, [X20]
	352 Move W1, 7
	353 Call TextEditor.MapKey, X0, X1
	354 Move X0, [X21]
	355 Move W1, 22
	356 Move W24, 22
	357 Call TextEditor.MapKey, X0, X1
	358 Move X8, 0x4E1000
	359 Move X8, [X8+1616]
	360 Move X10, 0x4E1000
	361 Move X11, 0x4E1000
	362 Move X12, 0x4E1000
	363 Move [X31+184], X8
	364 Move X13, 0x4E1000
	365 Move X14, 0x4E1000
	366 Move X15, 0x4E1000
	367 Move X16, 0x4E1000
	368 Move X0, 0x4E1000
	369 Move X3, 0x4E1000
	370 Move X6, 0x4E1000
	371 Move X21, 0x4E1000
	372 Move X8, 0x4E1000
	373 Move X10, [X10+1632]
	374 Move X11, [X11+1640]
	375 Move X12, [X12+1624]
	376 Move X13, [X13+1576]
	377 Move X14, [X14+1664]
	378 Move X15, [X15+1552]
	379 Move X16, [X16+1536]
	380 Move X0, [X0+1488]
	381 Move X3, [X3+1584]
	382 Move X6, [X6+1896]
	383 Move X21, [X21+1504]
	384 Move X8, [X8+1944]
	385 Move X20, 0x4E1000
	386 Move X23, 0x4E1000
	387 Move W9, 34
	388 Move [X31+264], X8
	389 Move X8, 0x4E1000
	390 Move X8, [X8+1792]
	391 Move W19, W31
	392 Move W5, 40
	393 Move W7, 38
	394 Move [X31+256], X8
	395 Move X8, 0x4E1000
	396 Move X8, [X8+1784]
	397 Move W27, 39
	398 Move W25, 5
	399 Move W29, 4
	400 Move [X31+240], X8
	401 Move X8, 0x4E1000
	402 Move X8, [X8+1864]
	403 Move W22, 1
	404 Move W28, 37
	405 Move W17, 36
	406 Move [X31+232], X8
	407 Move X8, 0x4E1000
	408 Move X8, [X8+1872]
	409 Move W2, 43
	410 Move W4, 42
	411 Move W26, 41
	412 Move [X31+224], X8
	413 Move X8, 0x4E1000
	414 Move X8, [X8+1920]
	415 Move W30, 44
	416 Move W1, 23
	417 Move [X31+216], X8
	418 Move X8, 0x4E1000
	419 Move X8, [X8+1800]
	420 Move [X31+248], X8
	421 Move W8, 31
	422 Move [X31+180], W8
	423 Move X8, 0x4E1000
	424 Move X8, [X8+1832]
	425 Move [X31+208], X8
	426 Move W8, 30
	427 Move [X31+172], W8
	428 Move W8, 35
	429 Move X20, [X20+1912]
	430 Move [X31+176], W8
	431 Move W8, 34
	432 Move X23, [X23+1880]
	433 Move [X31+152], W8
	434 Move X8, 0x4E1000
	435 Move X8, [X8+1848]
	436 Move [X31+200], X8
	437 Move W8, 27
	438 Move [X31+148], W8
	439 Move X8, 0x4E1000
	440 Move X8, [X8+1840]
	441 Move [X31+160], X8
	442 Move W8, 26
	443 Move [X31+144], W8
	444 Move X8, 0x4E1000
	445 Move X8, [X8+1936]
	446 Move [X31+128], X8
	447 Move X8, 0x4E1000
	448 Move X8, [X8+1808]
	449 Move [X31+156], W9
	450 Move W9, 26
	451 Move [X31+140], W9
	452 Move W9, 27
	453 Move [X31+168], W9
	454 Move W9, 23
	455 Move [X31+196], W9
	456 Move X9, 0x4E1000
	457 Move X9, [X9+1696]
	458 Move X10, 0x4E1000
	459 Move X11, 0x4E1000
	460 Move X12, 0x4E1000
	461 Move [X31+184], X9
	462 Move X13, 0x4E1000
	463 Move X10, [X10+1776]
	464 Move X11, [X11+1512]
	465 Move X12, [X12+1672]
	466 Move X13, [X13+1856]
	467 Move [X31+248], X22
	468 Move X14, 0x4E1000
	469 Move X14, [X14+1712]
	470 Move [X31+200], X19
	471 Move X15, 0x4E1000
	472 Move X16, 0x4E1000
	473 Move X0, 0x4E1000
	474 Move X3, 0x4E1000
	475 Move X6, 0x4E1000
	476 Move X15, [X15+1576]
	477 Move X16, [X16+1616]
	478 Move X0, [X0+1496]
	479 Move X3, [X3+1560]
	480 Move X6, [X6+1808]
	481 Move [X31+208], X8
	482 Move X8, 0x4E1000
	483 Move X8, [X8+1880]
	484 Move W9, 16
	485 Move W25, 43
	486 Move W29, 42
	487 Move [X31+264], X8
	488 Move W8, 34
	489 Move [X31+196], W8
	490 Move X8, 0x4E1000
	491 Move X8, [X8+1848]
	492 Move [X31+160], X24
	493 Move W22, 41
	494 Move W19, 44
	495 Move [X31+256], X8
	496 Move X8, 0x4E1000
	497 Move X8, [X8+1840]
	498 Move W28, 40
	499 Move W17, 38
	500 Move W2, 39
	501 Move [X31+240], X8
	502 Move W8, 32
	503 Move [X31+168], W8
	504 Move X8, 0x4E1000
	505 Move X8, [X8+1936]
	506 Move W4, 29
	507 Move W26, 28
	508 Move W30, 35
	509 Move [X31+232], X8
	510 Move X8, 0x4E1000
	511 Move X8, [X8+1568]
	512 Move W24, 33
	513 Move W1, 10
	514 Move W27, 41
	515 Move [X31+224], X8
	516 Move X8, 0x4E1000
	517 Move X8, [X8+1680]
	518 Move W7, 42
	519 Move W5, 43
	520 Move [X31+216], X8
	521 Move W8, 17
	522 Move [X31+180], W8
	523 Move W8, 14
	524 Move [X31+172], W8
	525 Move W8, 15
	526 Move [X31+176], W8
	527 Move W8, 13
	528 Move [X31+152], W8
	529 Move [X31+156], W9
	530 Move W9, 12
	531 Move W8, 11
	532 Move [X31+144], W8
	533 Move [X31+148], W9
	534 Move X8, 0x4C8000
	535 Move X8, [X8+664]
	536 Move W9, 14
	537 Move [X31+128], X8
	538 Move X8, 0x4C5000
	539 Move X8, [X8+3736]
	540 Move [X31+140], W9
	541 Move [X31+24], X0
	542 Move [X31+32], X15
	543 Move X0, [X8]
	544 Move [X31+8], X16
	545 Move [X31+20], W28
	546 Move [X31+44], W19
	547 Move [X31+48], X14
	548 Move [X31+60], W22
	549 Move [X31+64], X13
	550 Move [X31+76], W29
	551 Move [X31+80], X12
	552 Move [X31+92], W25
	553 Move [X31+96], W27
	554 Move [X31+100], W7
	555 Move [X31+104], X11
	556 Move [X31+112], X10
	557 Move [X31+124], W5
	558 Move W25, W17
	559 Move W29, W2
	560 Move X22, X3
	561 Move W19, W4
	562 Move X28, X6
	563 Move W27, W30
	564 Call TextEditor.MapKey, X0, X1
	565 Move X8, [X31+128]
	566 Move W1, [X31+144]
	567 Move X0, [X8]
	568 Call TextEditor.MapKey, X0, X1
	569 Move X8, [X31+160]
	570 Move W1, [X31+148]
	571 Move X0, [X8]
	572 Call TextEditor.MapKey, X0, X1
	573 Move X8, [X31+200]
	574 Move W1, [X31+152]
	575 Move X0, [X8]
	576 Call TextEditor.MapKey, X0, X1
	577 Move X0, [X23]
	578 Move W23, [X31+176]
	579 Move W1, W23
	580 Call TextEditor.MapKey, X0, X1
	581 Move X0, [X20]
	582 Move W1, [X31+172]
	583 Call TextEditor.MapKey, X0, X1
	584 Move X8, [X31+208]
	585 Move W1, [X31+180]
	586 Move X0, [X8]
	587 Call TextEditor.MapKey, X0, X1
	588 Move X8, [X31+248]
	589 Move W1, [X31+156]
	590 Move X0, [X8]
	591 Call TextEditor.MapKey, X0, X1
	592 Move X8, [X31+216]
	593 Move W1, W23
	594 Move X0, [X8]
	595 Call TextEditor.MapKey, X0, X1
	596 Move X8, [X31+224]
	597 Move W1, [X31+140]
	598 Move X0, [X8]
	599 Call TextEditor.MapKey, X0, X1
	600 Move X8, [X31+232]
	601 Move W1, [X31+168]
	602 Move X0, [X8]
	603 Call TextEditor.MapKey, X0, X1
	604 Move X8, [X31+240]
	605 Move W1, W24
	606 Move X0, [X8]
	607 Call TextEditor.MapKey, X0, X1
	608 Move X8, [X31+256]
	609 Move W1, [X31+196]
	610 Move X0, [X8]
	611 Call TextEditor.MapKey, X0, X1
	612 Move X8, [X31+264]
	613 Move W1, W27
	614 Move X0, [X8]
	615 Call TextEditor.MapKey, X0, X1
	616 Move X0, [X21]
	617 Move W1, W26
	618 Call TextEditor.MapKey, X0, X1
	619 Move X0, [X28]
	620 Move W1, W19
	621 Call TextEditor.MapKey, X0, X1
	622 Move X0, [X22]
	623 Move W1, W29
	624 Call TextEditor.MapKey, X0, X1
	625 Move X8, [X31+24]
	626 Move W1, W25
	627 Move X0, [X8]
	628 Call TextEditor.MapKey, X0, X1
	629 Move X8, [X31+8]
	630 Move W1, [X31+20]
	631 Move X0, [X8]
	632 Call TextEditor.MapKey, X0, X1
	633 Move X8, [X31+32]
	634 Move W1, [X31+44]
	635 Move X0, [X8]
	636 Call TextEditor.MapKey, X0, X1
	637 Move X8, [X31+48]
	638 Move W1, [X31+60]
	639 Move X0, [X8]
	640 Call TextEditor.MapKey, X0, X1
	641 Move X8, [X31+64]
	642 Move W1, [X31+76]
	643 Move X0, [X8]
	644 Call TextEditor.MapKey, X0, X1
	645 Move X8, [X31+80]
	646 Move W1, [X31+92]
	647 Move X0, [X8]
	648 Call TextEditor.MapKey, X0, X1
	649 Move X8, [X31+104]
	650 Move W1, [X31+96]
	651 Move X0, [X8]
	652 Call TextEditor.MapKey, X0, X1
	653 Move X8, [X31+112]
	654 Move W1, [X31+100]
	655 Move X0, [X8]
	656 Call TextEditor.MapKey, X0, X1
	657 Move X8, [X31+184]
	658 Move W1, [X31+124]
	659 Move X20, [X31+352]
	660 Move X19, [X31+360]
	661 Move X22, [X31+336]
	662 Move X21, [X31+344]
	663 Move X0, [X8]
	664 Move X24, [X31+320]
	665 Move X23, [X31+328]
	666 Move X26, [X31+304]
	667 Move X25, [X31+312]
	668 Move X28, [X31+288]
	669 Move X27, [X31+296]
	670 Move X29, [X31+272]
	671 Move X30, [X31+280]
	672 Add X31, X31, 368
	673 Call TextEditor.MapKey, X0, X1
	674 Return 

Method: System.Void DetectFocusChange()

Disassembly:
	0x03C81454 MOV W20, W0
	0x03C81458 MOV X0, X19
	0x03C8145C MOV W1, W20

ISIL:
	001 Move X8, [X0]
	002 Move X2, [X8+392]
	003 Move X1, [X8+400]
	004 CallNoReturn X2

Method: System.Void OnDetectFocusChange()

Disassembly:
	0x03C830D8 LDR X1, [X8 + 0x28]
	0x03C830DC BLR X9
	0x03C830E0 MOV X0, X19
	0x03C830E4 BL 0x3C7CEA4
	0x03C830E8 LDR W8, [X19 + 0x38]
	0x03C830EC CMP W8, W21
	0x03C830F0 B.EQ 0x3C83110
	0x03C830F4 LDR X8, [X19 + 0x48]
	0x03C830F8 STR W21, [X19 + 0x38]
	0x03C830FC CBZ X8, 0x3C83110
	0x03C83100 LDR X9, [X8 + 0x18]
	0x03C83104 LDR X0, [X8 + 0x40]
	0x03C83108 LDR X1, [X8 + 0x28]
	0x03C8310C BLR X9
	0x03C83110 CMP W20, W22
	0x03C83114 B.LE 0x3C83184
	0x03C83118 LDR W1, [X19 + 0x34]
	0x03C8311C MOV X0, X19
	0x03C83120 BL 0x3C823B4
	0x03C83124 LDR W1, [X19 + 0x38]
	0x03C83128 MOV W20, W0
	0x03C8312C MOV X0, X19
	0x03C83130 BL 0x3C823B4
	0x03C83134 CMP W20, W0
	0x03C83138 MOVZ W8, 0x38
	0x03C8313C MOVZ W9, 0x34
	0x03C83140 CSEL X8, X9, X8, GT
	0x03C83144 LDR W1, [X19, X8, LSL]
	0x03C83148 MOV X0, X19
	0x03C8314C BL 0x3C823B4
	0x03C83150 LDR W8, [X19 + 0x34]
	0x03C83154 CMP W8, W0
	0x03C83158 B.EQ 0x3C83184
	0x03C8315C LDR X8, [X19 + 0x40]
	0x03C83160 STR W0, [X19 + 0x34]
	0x03C83164 CBZ X8, 0x3C83184
	0x03C83168 LDR X2, [X8 + 0x18]
	0x03C8316C LDR X0, [X8 + 0x40]
	0x03C83170 LDR X1, [X8 + 0x28]
	0x03C83174 LDP X20, X19, [X31 + 0x20]
	0x03C83178 LDP X22, X21, [X31 + 0x10]
	0x03C8317C LDR X30, [X31], #0x30
	0x03C83180 BR X2
	0x03C83184 LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x764000
	006 Move W8, [X20+2498]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x49D000
	013 Move X0, [X0+1480]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+2498], W8
	017 Move X20, 0x49D000
	018 Move W8, [X19+43]
	019 Move X20, [X20+1480]
	020 Compare W8, 0
	021 JumpIfEqual {36}
	022 Move X0, [X20]
	023 Move W21, [X19+24]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, X31
	029 Call GUIUtility.get_keyboardControl
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X0, X19
	032 Call TextEditor.OnLostFocus, X0
	033 Move W8, [X19+43]
	034 Compare W8, 0
	035 JumpIfNotEqual {52}
	036 Move X0, [X20]
	037 Move W20, [X19+24]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Move X0, X31
	043 Call GUIUtility.get_keyboardControl
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move X0, X19
	046 Move X20, [X31+16]
	047 Move X19, [X31+24]
	048 Move X30, [X31+32]
	049 Move X21, [X31+40]
	050 Call TextEditor.OnFocus, X0
	051 Return 
	052 Move X20, [X31+16]
	053 Move X19, [X31+24]
	054 Move X30, [X31+32]
	055 Move X21, [X31+40]
	056 Return 

Method: System.Void OnCursorIndexChange()

Disassembly:
	0x03C83188 LDP X22, X21, [X31 + 0x10]

ISIL:
	001 Return 

Method: System.Void OnSelectIndexChange()

Disassembly:
	0x03C8318C LDR X30, [X31], #0x30

ISIL:
	001 Return 

Method: System.Void ClampTextIndex(ref System.Int32 index)

Disassembly:
	0x03C83190 RET
	0x03C83194 STP X30, X19, [X31 - 0x10]!
	0x03C83198 LDR W1, [X0 + 0x34]
	0x03C8319C MOVN W8, 0x0
	0x03C831A0 MOV X19, X0
	0x03C831A4 STRB W31, [X0 + 0x18]
	0x03C831A8 STR W8, [X0 + 0x14]
	0x03C831AC BL 0x3C823B4
	0x03C831B0 MOV W1, W0
	0x03C831B4 MOV X0, X19
	0x03C831B8 BL 0x3C7DB28
	0x03C831BC LDR W8, [X19 + 0x34]
	0x03C831C0 CMP W8, W0
	0x03C831C4 B.EQ 0x3C831E8
	0x03C831C8 LDR X8, [X19 + 0x40]
	0x03C831CC STR W0, [X19 + 0x34]
	0x03C831D0 CBZ X8, 0x3C831E8
	0x03C831D4 LDR X2, [X8 + 0x18]
	0x03C831D8 LDR X0, [X8 + 0x40]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X0, [X0+56]
	005 Compare X0, 0
	006 JumpIfEqual {23}
	007 Move W20, [X1]
	008 Move X19, X1
	009 Move X1, X31
	010 Call GUIContent.get_text, X0
	011 Compare X0, 0
	012 JumpIfEqual {23}
	013 Move W8, [X0+16]
	014 NotImplemented "Instruction CMP not yet implemented."
	015 NotImplemented "Instruction CSEL not yet implemented."
	016 NotImplemented "Instruction CMP not yet implemented."
	017 NotImplemented "Instruction CSEL not yet implemented."
	018 Move [X19], W8
	019 Move X20, [X31+16]
	020 Move X19, [X31+24]
	021 Move X30, [X31+32]
	022 Return 
	023 Call 0x1C17F20

Method: System.Void EnsureValidCodePointIndex(ref System.Int32 index)

Disassembly:
	0x03C7F338 MOVZ W8, 0xD
	0x03C7F33C STP W8, W9, [X31 + 0x98]
	0x03C7F340 MOVZ W9, 0xC
	0x03C7F344 MOVZ W8, 0xB
	0x03C7F348 STP W8, W9, [X31 + 0x90]
	0x03C7F34C ADRP X8, 0x4C8000
	0x03C7F350 LDR X8, [X8 + 0x298]
	0x03C7F354 MOVZ W9, 0xE
	0x03C7F358 STR X8, [X31 + 0x80]
	0x03C7F35C ADRP X8, 0x4C5000
	0x03C7F360 LDR X8, [X8 + 0xE98]
	0x03C7F364 STR W9, [X31 + 0x8C]
	0x03C7F368 STP X0, X15, [X31 + 0x18]
	0x03C7F36C LDR X0, [X8]
	0x03C7F370 STR X16, [X31 + 0x8]
	0x03C7F374 STR W28, [X31 + 0x14]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X1
	005 Move X20, X0
	006 Call TextEditor.ClampTextIndex, X0, X1
	007 Move W1, [X19]
	008 Move X0, X20
	009 Call TextEditor.IsValidCodePointIndex, X0, X1
	010 Move TEMP, X0
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {18}
	014 Move W1, [X19]
	015 Move X0, X20
	016 Call TextEditor.NextCodePointIndex, X0, X1
	017 Move [X19], W0
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Return 

Method: System.Boolean IsValidCodePointIndex(System.Int32 index)

Disassembly:
	0x03C831DC LDR X1, [X8 + 0x28]
	0x03C831E0 LDP X30, X19, [X31], #0x10
	0x03C831E4 BR X2
	0x03C831E8 LDP X30, X19, [X31], #0x10
	0x03C831EC RET
	0x03C831F0 STP X30, X19, [X31 - 0x10]!
	0x03C831F4 LDR W1, [X0 + 0x34]
	0x03C831F8 MOVN W8, 0x0
	0x03C831FC MOV X19, X0
	0x03C83200 STRB W31, [X0 + 0x18]
	0x03C83204 STR W8, [X0 + 0x14]
	0x03C83208 BL 0x3C823B4
	0x03C8320C MOV W1, W0
	0x03C83210 MOV X0, X19
	0x03C83214 BL 0x3C7DC04
	0x03C83218 LDR W8, [X19 + 0x34]
	0x03C8321C CMP W8, W0
	0x03C83220 B.EQ 0x3C83244
	0x03C83224 LDR X8, [X19 + 0x40]
	0x03C83228 STR W0, [X19 + 0x34]
	0x03C8322C CBZ X8, 0x3C83244
	0x03C83230 LDR X2, [X8 + 0x18]
	0x03C83234 LDR X0, [X8 + 0x40]
	0x03C83238 LDR X1, [X8 + 0x28]
	0x03C8323C LDP X30, X19, [X31], #0x10
	0x03C83240 BR X2
	0x03C83244 LDP X30, X19, [X31], #0x10
	0x03C83248 RET
	0x03C8324C LDR W8, [X0 + 0x34]
	0x03C83250 CBZ W8, 0x3C83270
	0x03C83254 LDR X8, [X0 + 0x40]
	0x03C83258 STR W31, [X0 + 0x34]
	0x03C8325C CBZ X8, 0x3C83270
	0x03C83260 LDR X2, [X8 + 0x18]
	0x03C83264 LDR X0, [X8 + 0x40]
	0x03C83268 LDR X1, [X8 + 0x28]
	0x03C8326C BR X2
	0x03C83270 RET
	0x03C83274 STP X30, X19, [X31 - 0x10]!
	0x03C83278 MOV X19, X0
	0x03C8327C BL 0x3C822F8
	0x03C83280 LDR W8, [X19 + 0x34]
	0x03C83284 CMP W8, W0
	0x03C83288 B.EQ 0x3C832AC
	0x03C8328C LDR X8, [X19 + 0x40]
	0x03C83290 STR W0, [X19 + 0x34]
	0x03C83294 CBZ X8, 0x3C832AC
	0x03C83298 LDR X2, [X8 + 0x18]
	0x03C8329C LDR X0, [X8 + 0x40]
	0x03C832A0 LDR X1, [X8 + 0x28]
	0x03C832A4 LDP X30, X19, [X31], #0x10
	0x03C832A8 BR X2
	0x03C832AC LDP X30, X19, [X31], #0x10
	0x03C832B0 RET
	0x03C832B4 STP X30, X21, [X31 - 0x20]!
	0x03C832B8 STP X20, X19, [X31 + 0x10]
	0x03C832BC LDR W1, [X0 + 0x34]
	0x03C832C0 MOVN W8, 0x0
	0x03C832C4 MOV X19, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x764000
	006 Move W8, [X21+2499]
	007 Move W19, W1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x473000
	014 Move X0, [X0+368]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2499], W8
	018 Move TEMP, X19
	019 And TEMP, TEMP, -2147483648
	020 Compare TEMP, -2147483648
	021 JumpIfEqual {31}
	022 Move X0, [X20+56]
	023 Compare X0, 0
	024 JumpIfEqual {73}
	025 Move X1, X31
	026 Call GUIContent.get_text, X0
	027 Compare X0, 0
	028 JumpIfEqual {73}
	029 Move W8, [X0+16]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move W8, W31
	032 Compare W19, 0
	033 JumpIfEqual {43}
	034 Move X0, [X20+56]
	035 Compare X0, 0
	036 JumpIfEqual {73}
	037 Move X1, X31
	038 Call GUIContent.get_text, X0
	039 Compare X0, 0
	040 JumpIfEqual {73}
	041 Move W8, [X0+16]
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move W8, 1
	044 Move X0, [X20+56]
	045 Compare X0, 0
	046 JumpIfEqual {73}
	047 Move X1, X31
	048 Call GUIContent.get_text, X0
	049 Compare X0, 0
	050 JumpIfEqual {73}
	051 Move W1, W19
	052 Move X2, X31
	053 Call String.get_Chars, X0, X1
	054 Move X8, 0x473000
	055 Move X8, [X8+368]
	056 Move W19, W0
	057 Move X8, [X8]
	058 Move W9, [X8+224]
	059 Compare W9, 0
	060 JumpIfNotEqual {63}
	061 Move X0, X8
	062 Call 0x1C17DFC
	063 Move W0, W19
	064 Move X1, X31
	065 Call Char.IsLowSurrogate, X0
	066 Xor W8, W0, 1
	067 Move X20, [X31+16]
	068 Move X19, [X31+24]
	069 And W0, W8, 1
	070 Move X30, [X31+32]
	071 Move X21, [X31+40]
	072 Return X0
	073 Call 0x1C17F20

Method: System.Int32 PreviousCodePointIndex(System.Int32 index)

Disassembly:
	0x03C81200 CBZ X0, 0x3C81284
	0x03C81204 MOV W20, W1
	0x03C81208 MOV X1, X31
	0x03C8120C BL 0x3C69940
	0x03C81210 CBZ X0, 0x3C81284
	0x03C81214 LDR W21, [X0 + 0x10]
	0x03C81218 CMP W21, W20
	0x03C8121C B.LE 0x3C81274
	0x03C81220 MOV X0, X19
	0x03C81224 MOV W1, W20
	0x03C81228 BL 0x3C81288
	0x03C8122C CBZ W0, 0x3C81264
	0x03C81230 MOV X0, X19
	0x03C81234 MOV W1, W20
	0x03C81238 BL 0x3C80060
	0x03C8123C MOV W20, W0
	0x03C81240 CMP W0, W21
	0x03C81244 B.LT 0x3C81220
	0x03C81248 B 0x3C81274
	0x03C8124C MOV X0, X19
	0x03C81250 MOV W1, W20
	0x03C81254 BL 0x3C80060
	0x03C81258 MOV W20, W0
	0x03C8125C CMP W0, W21
	0x03C81260 B.GE 0x3C81274
	0x03C81264 MOV X0, X19
	0x03C81268 MOV W1, W20
	0x03C8126C BL 0x3C81288
	0x03C81270 CBZ W0, 0x3C8124C
	0x03C81274 MOV W0, W20
	0x03C81278 LDP X20, X19, [X31 + 0x10]
	0x03C8127C LDP X30, X21, [X31], #0x20
	0x03C81280 RET
	0x03C81284 BL 0x1C16F20
	0x03C81288 STR X30, [X31 - 0x30]!
	0x03C8128C STP X22, X21, [X31 + 0x10]
	0x03C81290 STP X20, X19, [X31 + 0x20]
	0x03C81294 ADRP X21, 0x765000
	0x03C81298 LDRB W8, [X21 + 0x9BA]
	0x03C8129C MOV W19, W1
	0x03C812A0 MOV X20, X0
	0x03C812A4 TBNZ X8, 0x0, 0x3C812BC
	0x03C812A8 ADRP X0, 0x474000
	0x03C812AC LDR X0, [X0 + 0x170]
	0x03C812B0 BL 0x1C16CF4
	0x03C812B4 MOVZ W8, 0x1
	0x03C812B8 STRB W8, [X21 + 0x9BA]
	0x03C812BC LDR X0, [X20 + 0x38]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x766000
	007 Move W8, [X21+2500]
	008 Move W20, W1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x475000
	015 Move X0, [X0+368]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2500], W8
	019 NotImplemented "Instruction CMP not yet implemented."
	020 NotImplemented "Instruction CSET not yet implemented."
	021 Subtract W20, W20, W8
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move X22, 0x475000
	024 Move X22, [X22+368]
	025 Move X0, [X19+56]
	026 Compare X0, 0
	027 JumpIfEqual {59}
	028 Move X1, X31
	029 Call GUIContent.get_text, X0
	030 Compare X0, 0
	031 JumpIfEqual {59}
	032 Move W1, W20
	033 Move X2, X31
	034 Call String.get_Chars, X0, X1
	035 Move X8, [X22]
	036 Move W21, W0
	037 Move W9, [X8+224]
	038 Compare W9, 0
	039 JumpIfNotEqual {42}
	040 Move X0, X8
	041 Call 0x1C17DFC
	042 Move W0, W21
	043 Move X1, X31
	044 Call Char.IsLowSurrogate, X0
	045 Move TEMP, X0
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfNotEqual {52}
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Subtract W20, W20, 1
	051 Move W20, W31
	052 Move W0, W20
	053 Move X20, [X31+32]
	054 Move X19, [X31+40]
	055 Move X22, [X31+16]
	056 Move X21, [X31+24]
	057 Move X30, [X31+48]
	058 Return X0
	059 Call 0x1C17F20

Method: System.Int32 NextCodePointIndex(System.Int32 index)

Disassembly:
	0x03C81060 STR X30, [X31 - 0x20]!
	0x03C81064 STP X20, X19, [X31 + 0x10]
	0x03C81068 LDRB W8, [X0 + 0x75]
	0x03C8106C MOV X19, X0
	0x03C81070 CBZ W8, 0x3C81094
	0x03C81074 LDP W20, W1, [X19 + 0x50]
	0x03C81078 CMP W20, W1
	0x03C8107C B.GE 0x3C81094
	0x03C81080 MOV X0, X19
	0x03C81084 BL 0x3C7E6FC
	0x03C81088 MOV X0, X19
	0x03C8108C MOV W1, W20
	0x03C81090 BL 0x3C7E75C
	0x03C81094 LDR W1, [X19 + 0x50]
	0x03C81098 MOV X0, X19
	0x03C8109C STRB W31, [X19 + 0x75]
	0x03C810A0 BL 0x3C80060
	0x03C810A4 MOV W1, W0
	0x03C810A8 MOV X0, X19
	0x03C810AC LDP X20, X19, [X31 + 0x10]
	0x03C810B0 LDR X30, [X31], #0x20
	0x03C810B4 B 0x3C7E6FC
	0x03C810B8 STR X30, [X31 - 0x20]!
	0x03C810BC STP X20, X19, [X31 + 0x10]
	0x03C810C0 MOV X19, X0
	0x03C810C4 BL 0x3C7E990
	0x03C810C8 LDR V0, [X19 + 0x60]
	0x03C810CC LDR X8, [X19]
	0x03C810D0 FMOV S1, -1
	0x03C810D4 LDR X20, [X19 + 0x20]
	0x03C810D8 FADD S0, S0, S1
	0x03C810DC STR S0, [X19 + 0x60]
	0x03C810E0 LDP X9, X1, [X8 + 0x178]
	0x03C810E4 MOV X0, X19
	0x03C810E8 BLR X9
	0x03C810EC CBZ X20, 0x3C81118
	0x03C810F0 LDP S4, S5, [X19 + 0x5C]
	0x03C810F4 LDR X1, [X19 + 0x38]
	0x03C810F8 MOV X0, X20
	0x03C810FC MOV X2, X31
	0x03C81100 BL 0x3C7502C
	0x03C81104 MOV W1, W0
	0x03C81108 MOV X0, X19
	0x03C8110C LDP X20, X19, [X31 + 0x10]
	0x03C81110 LDR X30, [X31], #0x20
	0x03C81114 B 0x3C7E6FC
	0x03C81118 BL 0x1C16F20
	0x03C8111C STR D8, [X31 - 0x20]!
	0x03C81120 STR X30, [X31 + 0x8]
	0x03C81124 STP X20, X19, [X31 + 0x10]
	0x03C81128 MOV X19, X0
	0x03C8112C BL 0x3C7E990
	0x03C81130 LDR X0, [X19 + 0x20]
	0x03C81134 CBZ X0, 0x3C81198
	0x03C81138 LDR V8, [X19 + 0x60]
	0x03C8113C MOV X1, X31
	0x03C81140 BL 0x3C74840
	0x03C81144 FMOV S1, 5
	0x03C81148 LDR X8, [X19]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x766000
	007 Move W8, [X21+2501]
	008 Move W20, W1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x475000
	015 Move X0, [X0+368]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2501], W8
	019 Move X0, [X19+56]
	020 Compare X0, 0
	021 JumpIfEqual {69}
	022 Move X1, X31
	023 Call GUIContent.get_text, X0
	024 Compare X0, 0
	025 JumpIfEqual {69}
	026 Move X8, X0
	027 Move X0, [X19+56]
	028 Compare X0, 0
	029 JumpIfEqual {69}
	030 Move W8, [X8+16]
	031 Move X22, 0x475000
	032 Move X22, [X22+368]
	033 NotImplemented "Instruction CMP not yet implemented."
	034 NotImplemented "Instruction CINC not yet implemented."
	035 Move X1, X31
	036 Call GUIContent.get_text, X0
	037 Compare X0, 0
	038 JumpIfEqual {69}
	039 Move W8, [X0+16]
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move X0, [X19+56]
	042 Compare X0, 0
	043 JumpIfEqual {69}
	044 Move X1, X31
	045 Call GUIContent.get_text, X0
	046 Compare X0, 0
	047 JumpIfEqual {69}
	048 Move W1, W20
	049 Move X2, X31
	050 Call String.get_Chars, X0, X1
	051 Move X8, [X22]
	052 Move W21, W0
	053 Move W9, [X8+224]
	054 Compare W9, 0
	055 JumpIfNotEqual {58}
	056 Move X0, X8
	057 Call 0x1C17DFC
	058 Move W0, W21
	059 Move X1, X31
	060 Call Char.IsLowSurrogate, X0
	061 Move TEMP, X0
	062 And TEMP, TEMP, 1
	063 Compare TEMP, 1
	064 JumpIfNotEqual {70}
	065 Move X0, [X19+56]
	066 Add W20, W20, 1
	067 Compare X0, 0
	068 JumpIfNotEqual {35}
	069 Call 0x1C17F20
	070 Move W0, W20
	071 Move X20, [X31+32]
	072 Move X19, [X31+40]
	073 Move X22, [X31+16]
	074 Move X21, [X31+24]
	075 Move X30, [X31+48]
	076 Return X0

