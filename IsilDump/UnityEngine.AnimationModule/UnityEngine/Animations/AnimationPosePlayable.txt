Type: UnityEngine.Animations.AnimationPosePlayable

Method: System.Void .ctor(UnityEngine.Playables.PlayableHandle handle)

Disassembly:
	0x03BF8998 MOV X19, X1
	0x03BF899C MOV X20, X0
	0x03BF89A0 BL 0x3BF8434
	0x03BF89A4 MOV X0, X20
	0x03BF89A8 MOV X1, X19
	0x03BF89AC LDP X20, X19, [X31 + 0x10]
	0x03BF89B0 LDR X30, [X31], #0x20
	0x03BF89B4 B 0x3BF89B8
	0x03BF89B8 SUB X31, X31, 0x30
	0x03BF89BC STP X30, X21, [X31 + 0x10]
	0x03BF89C0 STP X20, X19, [X31 + 0x20]
	0x03BF89C4 ADRP X21, 0x7EB000
	0x03BF89C8 LDR X8, [X21 + 0x938]
	0x03BF89CC MOV X19, X1
	0x03BF89D0 MOV X20, X0
	0x03BF89D4 STP X31, X31, [X31]
	0x03BF89D8 CBNZ X8, 0x3BF89F0
	0x03BF89DC ADRP X0, 0xFFFFFFFFFCF0E000
	0x03BF89E0 ADD X0, X0, 0xB21
	0x03BF89E4 BL 0x1C16CB8
	0x03BF89E8 MOV X8, X0
	0x03BF89EC STR X0, [X21 + 0x938]
	0x03BF89F0 ADD X2, X31, 0x0
	0x03BF89F4 MOV X0, X20
	0x03BF89F8 MOV X1, X19
	0x03BF89FC BLR X8
	0x03BF8A00 LDP S0, S1, [X31]
	0x03BF8A04 LDP S2, S3, [X31 + 0x8]
	0x03BF8A08 LDP X20, X19, [X31 + 0x20]
	0x03BF8A0C LDP X30, X21, [X31 + 0x10]
	0x03BF8A10 ADD X31, X31, 0x30
	0x03BF8A14 RET
	0x03BF8A18 STP D11, D10, [X31 - 0x40]!
	0x03BF8A1C STP D9, D8, [X31 + 0x10]
	0x03BF8A20 STR X30, [X31 + 0x20]
	0x03BF8A24 STP X20, X19, [X31 + 0x30]
	0x03BF8A28 MOV V8.16B, V3.16B
	0x03BF8A2C MOV V9.16B, V2.16B
	0x03BF8A30 MOV V10.16B, V1.16B
	0x03BF8A34 MOV V11.16B, V0.16B
	0x03BF8A38 MOV X19, X1
	0x03BF8A3C MOV X20, X0
	0x03BF8A40 BL 0x3BF8434
	0x03BF8A44 MOV X0, X20
	0x03BF8A48 MOV X1, X19
	0x03BF8A4C MOV V2.16B, V9.16B
	0x03BF8A50 MOV V3.16B, V8.16B
	0x03BF8A54 LDP X20, X19, [X31 + 0x30]
	0x03BF8A58 LDR X30, [X31 + 0x20]
	0x03BF8A5C LDP D9, D8, [X31 + 0x10]
	0x03BF8A60 MOV V0.16B, V11.16B
	0x03BF8A64 MOV V1.16B, V10.16B
	0x03BF8A68 LDP D11, D10, [X31], #0x40
	0x03BF8A6C B 0x3BF8A70
	0x03BF8A70 SUB X31, X31, 0x30
	0x03BF8A74 STP X30, X21, [X31 + 0x10]
	0x03BF8A78 STP X20, X19, [X31 + 0x20]
	0x03BF8A7C ADRP X21, 0x7EB000
	0x03BF8A80 LDR X8, [X21 + 0x940]
	0x03BF8A84 MOV X19, X1

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x7EC000
	007 Move [X31], X1
	008 Move [X31+8], X2
	009 Move X20, 0x525000
	010 Move W8, [X21+2272]
	011 Move X20, [X20+560]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x567000
	018 Move X0, [X0+2128]
	019 Call 0x1C17CF4
	020 Move X0, 0x525000
	021 Move X0, [X0+560]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+2272], W8
	025 Move X0, [X20]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Add X0, X31, 0
	031 Move X1, X31
	032 Call PlayableHandle.IsValid, X0
	033 Move TEMP, X0
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfNotEqual {51}
	037 Move X0, [X20]
	038 Move X20, 0x567000
	039 Move W8, [X0+224]
	040 Move X20, [X20+2128]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Move X1, [X20]
	045 Add X0, X31, 0
	046 Call PlayableHandle.IsPlayableOfType, X0
	047 Move TEMP, X0
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfNotEqual {59}
	051 Move V0, [X31]
	052 Move X30, [X31+16]
	053 Move X21, [X31+24]
	054 Move [X19], V0
	055 Move X20, [X31+32]
	056 Move X19, [X31+40]
	057 Add X31, X31, 48
	058 Return 
	059 Move X0, 0x504000
	060 Move X0, [X0+3080]
	061 Call 0x1C17D08
	062 Call 0x1C17F10
	063 Move X19, X0
	064 Move X0, 0x567000
	065 Move X0, [X0+2136]
	066 Call 0x1C17D08
	067 Move X1, X0
	068 Move X0, X19
	069 Move X2, X31
	070 Call InvalidCastException..ctor, X0, X1
	071 Move X0, 0x567000
	072 Move X0, [X0+2144]
	073 Call 0x1C17D08
	074 Move X1, X0
	075 Move X0, X19
	076 Call 0x1C17DEC

Method: UnityEngine.Playables.PlayableHandle GetHandle()

Disassembly:
	0x03BF8A88 MOV X20, X0
	0x03BF8A8C STP S0, S1, [X31]
	0x03BF8A90 STP S2, S3, [X31 + 0x8]

ISIL:
	001 Move X8, [X0]
	002 Move X1, [X0+8]
	003 Move X0, X8
	004 Return X0

Method: System.Boolean Equals(UnityEngine.Animations.AnimationPosePlayable other)

Disassembly:
	0x03BF8A94 CBNZ X8, 0x3BF8AAC
	0x03BF8A98 ADRP X0, 0xFFFFFFFFFCF00000
	0x03BF8A9C ADD X0, X0, 0xC6E
	0x03BF8AA0 BL 0x1C16CB8
	0x03BF8AA4 MOV X8, X0
	0x03BF8AA8 STR X0, [X21 + 0x940]
	0x03BF8AAC ADD X2, X31, 0x0
	0x03BF8AB0 MOV X0, X20
	0x03BF8AB4 MOV X1, X19
	0x03BF8AB8 BLR X8
	0x03BF8ABC LDP X20, X19, [X31 + 0x20]
	0x03BF8AC0 LDP X30, X21, [X31 + 0x10]
	0x03BF8AC4 ADD X31, X31, 0x30
	0x03BF8AC8 RET
	0x03BF8ACC STR X30, [X31 - 0x20]!
	0x03BF8AD0 STP X20, X19, [X31 + 0x10]
	0x03BF8AD4 MOV X19, X1
	0x03BF8AD8 MOV X20, X0
	0x03BF8ADC BL 0x3BF8434
	0x03BF8AE0 MOV X0, X20
	0x03BF8AE4 MOV X1, X19
	0x03BF8AE8 LDP X20, X19, [X31 + 0x10]
	0x03BF8AEC LDR X30, [X31], #0x20
	0x03BF8AF0 B 0x3BF8AF4
	0x03BF8AF4 SUB X31, X31, 0x30
	0x03BF8AF8 STP X30, X21, [X31 + 0x10]
	0x03BF8AFC STP X20, X19, [X31 + 0x20]
	0x03BF8B00 ADRP X21, 0x7EB000
	0x03BF8B04 LDR X8, [X21 + 0x948]
	0x03BF8B08 MOV X19, X1
	0x03BF8B0C MOV X20, X0
	0x03BF8B10 STR W31, [X31 + 0x8]
	0x03BF8B14 STR X31, [X31]
	0x03BF8B18 CBNZ X8, 0x3BF8B30
	0x03BF8B1C ADRP X0, 0xFFFFFFFFFCEFA000
	0x03BF8B20 ADD X0, X0, 0xC4F
	0x03BF8B24 BL 0x1C16CB8
	0x03BF8B28 MOV X8, X0
	0x03BF8B2C STR X0, [X21 + 0x948]
	0x03BF8B30 ADD X2, X31, 0x0
	0x03BF8B34 MOV X0, X20
	0x03BF8B38 MOV X1, X19
	0x03BF8B3C BLR X8
	0x03BF8B40 LDP S0, S1, [X31]
	0x03BF8B44 LDR V2, [X31 + 0x8]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+56], X23
	004 Move [X31+64], X22
	005 Move [X31+72], X21
	006 Move [X31+80], X20
	007 Move [X31+88], X19
	008 Move X23, 0x7EC000
	009 Move X22, 0x567000
	010 Move W8, [X23+2273]
	011 Move X22, [X22+2152]
	012 Move X20, X2
	013 Move X21, X1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0x567000
	020 Move X0, [X0+2152]
	021 Call 0x1C17CF4
	022 Move X0, 0x525000
	023 Move X0, [X0+560]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X23+2273], W8
	027 Move X0, [X22]
	028 Move X23, 0x525000
	029 Move W8, [X0+224]
	030 Move X23, [X23+560]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move X0, [X23]
	035 Add X1, X31, 32
	036 Move [X31+32], X21
	037 Move [X31+40], X20
	038 Call 0x1C17E04
	039 Move X8, [X22]
	040 Move TEMP, 0
	041 Not TEMP
	042 Move X9, TEMP
	043 Move X1, X0
	044 Add X0, X31, 0
	045 Move [X31], X8
	046 Move [X31+8], X9
	047 Move V0, [X19]
	048 Move X2, X31
	049 Move [X31+1], V0
	050 Call ValueType.Equals, X0, X1
	051 Move X20, [X31+80]
	052 Move X19, [X31+88]
	053 Move X22, [X31+64]
	054 Move X21, [X31+72]
	055 Move X30, [X31+48]
	056 Move X23, [X31+56]
	057 And W0, W0, 1
	058 Add X31, X31, 96
	059 Return X0

Method: System.Void .cctor()

Disassembly:
	0x03BF8B48 LDP X20, X19, [X31 + 0x20]
	0x03BF8B4C LDP X30, X21, [X31 + 0x10]
	0x03BF8B50 ADD X31, X31, 0x30
	0x03BF8B54 RET
	0x03BF8B58 STR D10, [X31 - 0x30]!
	0x03BF8B5C STP D9, D8, [X31 + 0x8]
	0x03BF8B60 STR X30, [X31 + 0x18]
	0x03BF8B64 STP X20, X19, [X31 + 0x20]
	0x03BF8B68 MOV V8.16B, V2.16B
	0x03BF8B6C MOV V9.16B, V1.16B
	0x03BF8B70 MOV V10.16B, V0.16B
	0x03BF8B74 MOV X19, X1
	0x03BF8B78 MOV X20, X0
	0x03BF8B7C BL 0x3BF8434
	0x03BF8B80 MOV X0, X20
	0x03BF8B84 MOV X1, X19
	0x03BF8B88 MOV V1.16B, V9.16B
	0x03BF8B8C MOV V2.16B, V8.16B
	0x03BF8B90 LDP X20, X19, [X31 + 0x20]
	0x03BF8B94 LDR X30, [X31 + 0x18]
	0x03BF8B98 LDP D9, D8, [X31 + 0x8]
	0x03BF8B9C MOV V0.16B, V10.16B
	0x03BF8BA0 LDR V10, [X31], #0x30
	0x03BF8BA4 B 0x3BF8BA8
	0x03BF8BA8 SUB X31, X31, 0x30
	0x03BF8BAC STP X30, X21, [X31 + 0x10]
	0x03BF8BB0 STP X20, X19, [X31 + 0x20]
	0x03BF8BB4 ADRP X21, 0x7EB000
	0x03BF8BB8 LDR X8, [X21 + 0x950]
	0x03BF8BBC MOV X19, X1
	0x03BF8BC0 MOV X20, X0
	0x03BF8BC4 STP S0, S1, [X31]
	0x03BF8BC8 STR S2, [X31 + 0x8]
	0x03BF8BCC CBNZ X8, 0x3BF8BE4
	0x03BF8BD0 ADRP X0, 0xFFFFFFFFFCF14000
	0x03BF8BD4 ADD X0, X0, 0x8BB
	0x03BF8BD8 BL 0x1C16CB8
	0x03BF8BDC MOV X8, X0
	0x03BF8BE0 STR X0, [X21 + 0x950]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+32], X20
	004 Move [X31+40], X19
	005 Move X20, 0x7EC000
	006 Move X19, 0x525000
	007 Move W8, [X20+2274]
	008 Move X19, [X19+560]
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x567000
	014 Move X0, [X0+2152]
	015 Call 0x1C17CF4
	016 Move X0, 0x525000
	017 Move X0, [X0+560]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+2274], W8
	021 Move X0, [X19]
	022 Move X19, 0x567000
	023 Move W8, [X0+224]
	024 Move X19, [X19+2152]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, X31
	029 Call PlayableHandle.get_Null
	030 Move X2, X0
	031 Move X3, X1
	032 Add X0, X31, 0
	033 Move X1, X2
	034 Move X2, X3
	035 Move [X31], X31
	036 Move [X31+8], X31
	037 Call AnimationPosePlayable..ctor, X0, X1
	038 Move X8, [X19]
	039 Move V0, [X31]
	040 Move X20, [X31+32]
	041 Move X19, [X31+40]
	042 Move X30, [X31+16]
	043 Move X8, [X8+184]
	044 Move [X8], V0
	045 Add X31, X31, 48
	046 Return 

