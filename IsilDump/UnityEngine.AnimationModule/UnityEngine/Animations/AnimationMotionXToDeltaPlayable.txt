Type: UnityEngine.Animations.AnimationMotionXToDeltaPlayable

Method: System.Void .ctor(UnityEngine.Playables.PlayableHandle handle)

Disassembly:
	0x03BF8228 TBZ X0, 0x0, 0x3BF8254
	0x03BF822C LDR X0, [X19 + 0x20]
	0x03BF8230 MOV X1, X31
	0x03BF8234 MOV X2, X31
	0x03BF8238 BL 0x33C5D2C
	0x03BF823C TBZ X0, 0x0, 0x3BF8254
	0x03BF8240 LDR X0, [X19 + 0x30]
	0x03BF8244 MOV X1, X31
	0x03BF8248 MOV X2, X31
	0x03BF824C LDP X30, X19, [X31], #0x10
	0x03BF8250 B 0x33C5D2C
	0x03BF8254 MOV W0, W31
	0x03BF8258 LDP X30, X19, [X31], #0x10
	0x03BF825C RET
	0x03BF8260 STP X30, X19, [X31 - 0x10]!
	0x03BF8264 BL 0x3BF81DC
	0x03BF8268 TBZ X0, 0x0, 0x3BF8274
	0x03BF826C LDP X30, X19, [X31], #0x10
	0x03BF8270 RET
	0x03BF8274 ADRP X0, 0x4FB000
	0x03BF8278 LDR X0, [X0 + 0x5B0]
	0x03BF827C BL 0x1C16D08
	0x03BF8280 BL 0x1C16F10
	0x03BF8284 MOV X19, X0
	0x03BF8288 ADRP X0, 0x566000
	0x03BF828C LDR X0, [X0 + 0x8A8]
	0x03BF8290 BL 0x1C16D08
	0x03BF8294 MOV X1, X0
	0x03BF8298 MOV X0, X19
	0x03BF829C MOV X2, X31
	0x03BF82A0 BL 0x337DF1C
	0x03BF82A4 ADRP X0, 0x566000
	0x03BF82A8 LDR X0, [X0 + 0x8B0]
	0x03BF82AC BL 0x1C16D08
	0x03BF82B0 MOV X1, X0
	0x03BF82B4 MOV X0, X19
	0x03BF82B8 BL 0x1C16DEC
	0x03BF82BC STR X30, [X31 - 0x20]!
	0x03BF82C0 STP X20, X19, [X31 + 0x10]
	0x03BF82C4 MOV X19, X0
	0x03BF82C8 BL 0x3BF8260
	0x03BF82CC ADRP X20, 0x7EB000
	0x03BF82D0 LDR X1, [X20 + 0x8F8]
	0x03BF82D4 CBNZ X1, 0x3BF82EC
	0x03BF82D8 ADRP X0, 0xFFFFFFFFFCF00000
	0x03BF82DC ADD X0, X0, 0xC07
	0x03BF82E0 BL 0x1C16CB8
	0x03BF82E4 MOV X1, X0
	0x03BF82E8 STR X0, [X20 + 0x8F8]
	0x03BF82EC MOV X0, X19
	0x03BF82F0 LDP X20, X19, [X31 + 0x10]
	0x03BF82F4 LDR X30, [X31], #0x20
	0x03BF82F8 BR X1
	0x03BF82FC STR X30, [X31 - 0x20]!
	0x03BF8300 STP X20, X19, [X31 + 0x10]
	0x03BF8304 ADRP X20, 0x7EB000
	0x03BF8308 LDR X1, [X20 + 0x8F8]
	0x03BF830C MOV X19, X0
	0x03BF8310 CBNZ X1, 0x3BF8328
	0x03BF8314 ADRP X0, 0xFFFFFFFFFCF00000

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x7EC000
	007 Move [X31], X1
	008 Move [X31+8], X2
	009 Move X20, 0x525000
	010 Move W8, [X21+2236]
	011 Move X20, [X20+560]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x567000
	018 Move X0, [X0+2040]
	019 Call 0x1C17CF4
	020 Move X0, 0x525000
	021 Move X0, [X0+560]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+2236], W8
	025 Move X0, [X20]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Add X0, X31, 0
	031 Move X1, X31
	032 Call PlayableHandle.IsValid, X0
	033 Move TEMP, X0
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfNotEqual {51}
	037 Move X0, [X20]
	038 Move X20, 0x567000
	039 Move W8, [X0+224]
	040 Move X20, [X20+2040]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Move X1, [X20]
	045 Add X0, X31, 0
	046 Call PlayableHandle.IsPlayableOfType, X0
	047 Move TEMP, X0
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfNotEqual {59}
	051 Move V0, [X31]
	052 Move X30, [X31+16]
	053 Move X21, [X31+24]
	054 Move [X19], V0
	055 Move X20, [X31+32]
	056 Move X19, [X31+40]
	057 Add X31, X31, 48
	058 Return 
	059 Move X0, 0x504000
	060 Move X0, [X0+3080]
	061 Call 0x1C17D08
	062 Call 0x1C17F10
	063 Move X19, X0
	064 Move X0, 0x567000
	065 Move X0, [X0+2048]
	066 Call 0x1C17D08
	067 Move X1, X0
	068 Move X0, X19
	069 Move X2, X31
	070 Call InvalidCastException..ctor, X0, X1
	071 Move X0, 0x567000
	072 Move X0, [X0+2056]
	073 Call 0x1C17D08
	074 Move X1, X0
	075 Move X0, X19
	076 Call 0x1C17DEC

Method: UnityEngine.Playables.PlayableHandle GetHandle()

Disassembly:
	0x03BF8318 ADD X0, X0, 0xC07
	0x03BF831C BL 0x1C16CB8
	0x03BF8320 MOV X1, X0

ISIL:
	001 Move X8, [X0]
	002 Move X1, [X0+8]
	003 Move X0, X8
	004 Return X0

Method: System.Boolean Equals(UnityEngine.Animations.AnimationMotionXToDeltaPlayable other)

Disassembly:
	0x03BF8324 STR X0, [X20 + 0x8F8]
	0x03BF8328 MOV X0, X19
	0x03BF832C LDP X20, X19, [X31 + 0x10]
	0x03BF8330 LDR X30, [X31], #0x20
	0x03BF8334 BR X1
	0x03BF8338 STR X30, [X31 - 0x20]!
	0x03BF833C STP X20, X19, [X31 + 0x10]
	0x03BF8340 ADRP X20, 0x7EB000
	0x03BF8344 LDR X1, [X20 + 0x8F8]
	0x03BF8348 MOV X19, X0
	0x03BF834C CBNZ X1, 0x3BF8364
	0x03BF8350 ADRP X0, 0xFFFFFFFFFCF00000
	0x03BF8354 ADD X0, X0, 0xC07
	0x03BF8358 BL 0x1C16CB8
	0x03BF835C MOV X1, X0
	0x03BF8360 STR X0, [X20 + 0x8F8]
	0x03BF8364 MOV X0, X19
	0x03BF8368 LDP X20, X19, [X31 + 0x10]
	0x03BF836C LDR X30, [X31], #0x20
	0x03BF8370 BR X1
	0x03BF8374 STP X30, X19, [X31 - 0x10]!
	0x03BF8378 MOV X19, X0
	0x03BF837C MOV X0, X1
	0x03BF8380 BL 0x3BF81DC
	0x03BF8384 TBZ X0, 0x0, 0x3BF83A0
	0x03BF8388 LDR W8, [X19]
	0x03BF838C CBZ W8, 0x3BF83A0
	0x03BF8390 LDR W8, [X19 + 0x4]
	0x03BF8394 ADDS W31, W8, 0x1
	0x03BF8398 CSET W0, NE
	0x03BF839C B 0x3BF83A4
	0x03BF83A0 MOV W0, W31
	0x03BF83A4 LDP X30, X19, [X31], #0x10
	0x03BF83A8 RET
	0x03BF83AC STP X30, X19, [X31 - 0x10]!
	0x03BF83B0 MOV X19, X0
	0x03BF83B4 MOV X0, X1
	0x03BF83B8 BL 0x3BF81DC
	0x03BF83BC TBZ X0, 0x0, 0x3BF83D8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x7EC000
	008 Move X22, 0x567000
	009 Move W8, [X23+2237]
	010 Move X22, [X22+2064]
	011 Move X19, X2
	012 Move X20, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x567000
	019 Move X0, [X0+2064]
	020 Call 0x1C17CF4
	021 Move X0, 0x525000
	022 Move X0, [X0+560]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X23+2237], W8
	026 Move X0, [X22]
	027 Move X22, 0x525000
	028 Move W8, [X0+224]
	029 Move X22, [X22+560]
	030 Compare W8, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1C17DFC
	033 Move X0, [X22]
	034 Move X22, [X21]
	035 Move X21, [X21+8]
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {40}
	039 Call 0x1C17DFC
	040 Move X0, X22
	041 Move X1, X21
	042 Move X2, X20
	043 Move X3, X19
	044 Move X20, [X31+32]
	045 Move X19, [X31+40]
	046 Move X22, [X31+16]
	047 Move X21, [X31+24]
	048 Move X4, X31
	049 Move X30, [X31+48]
	050 Move X23, [X31+56]
	051 Call PlayableHandle.op_Equality, X0, X1
	052 Return X0

Method: System.Void .cctor()

Disassembly:
	0x03BF83C0 LDR W8, [X19]
	0x03BF83C4 CBZ W8, 0x3BF83D8
	0x03BF83C8 LDR W8, [X19 + 0x4]
	0x03BF83CC ADDS W31, W8, 0x1
	0x03BF83D0 CSET W0, NE
	0x03BF83D4 B 0x3BF83DC
	0x03BF83D8 MOV W0, W31
	0x03BF83DC LDP X30, X19, [X31], #0x10
	0x03BF83E0 RET
	0x03BF83E4 LDR W8, [X0]
	0x03BF83E8 CMP W8, 0x0
	0x03BF83EC CSET W0, NE
	0x03BF83F0 RET
	0x03BF83F4 LDR W8, [X0 + 0x4]
	0x03BF83F8 ADDS W31, W8, 0x1
	0x03BF83FC CSET W0, NE
	0x03BF8400 RET
	0x03BF8404 LDR W0, [X0]
	0x03BF8408 RET
	0x03BF840C LDR W8, [X0]
	0x03BF8410 LDR W9, [X1]
	0x03BF8414 CMP W8, W9
	0x03BF8418 CSET W0, EQ
	0x03BF841C RET
	0x03BF8420 LDR W8, [X0 + 0x8]
	0x03BF8424 ADDS W31, W8, 0x1
	0x03BF8428 CSET W0, NE
	0x03BF842C RET
	0x03BF8430 B 0x3BF8434
	0x03BF8434 STP X30, X21, [X31 - 0x20]!
	0x03BF8438 STP X20, X19, [X31 + 0x10]
	0x03BF843C MOV X19, X0
	0x03BF8440 MOV X0, X1
	0x03BF8444 MOV X20, X1
	0x03BF8448 BL 0x3BF8260
	0x03BF844C MOV X0, X19
	0x03BF8450 MOV X1, X20
	0x03BF8454 BL 0x3BF8544
	0x03BF8458 TBNZ X0, 0x0, 0x3BF84CC

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+32], X20
	004 Move [X31+40], X19
	005 Move X20, 0x7EC000
	006 Move X19, 0x525000
	007 Move W8, [X20+2238]
	008 Move X19, [X19+560]
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x567000
	014 Move X0, [X0+2064]
	015 Call 0x1C17CF4
	016 Move X0, 0x525000
	017 Move X0, [X0+560]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+2238], W8
	021 Move X0, [X19]
	022 Move X19, 0x567000
	023 Move W8, [X0+224]
	024 Move X19, [X19+2064]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, X31
	029 Call PlayableHandle.get_Null
	030 Move X2, X0
	031 Move X3, X1
	032 Add X0, X31, 0
	033 Move X1, X2
	034 Move X2, X3
	035 Move [X31], X31
	036 Move [X31+8], X31
	037 Call AnimationMotionXToDeltaPlayable..ctor, X0, X1
	038 Move X8, [X19]
	039 Move V0, [X31]
	040 Move X20, [X31+32]
	041 Move X19, [X31+40]
	042 Move X30, [X31+16]
	043 Move X8, [X8+184]
	044 Move [X8], V0
	045 Add X31, X31, 48
	046 Return 

