Type: UnityEngine.Animations.AnimationLayerMixerPlayable

Method: System.Void .ctor(UnityEngine.Playables.PlayableHandle handle, System.Boolean singleLayerOptimization = True)

Disassembly:
	0x03BF7D1C ADRP X0, 0x525000
	0x03BF7D20 LDR X0, [X0 + 0x230]
	0x03BF7D24 BL 0x1C16CF4
	0x03BF7D28 MOVZ W8, 0x1
	0x03BF7D2C STRB W8, [X23 + 0x8E4]
	0x03BF7D30 LDR X0, [X22]
	0x03BF7D34 ADRP X23, 0x525000
	0x03BF7D38 LDR W8, [X0 + 0xE0]
	0x03BF7D3C LDR X23, [X23 + 0x230]
	0x03BF7D40 CBNZ W8, 0x3BF7D48
	0x03BF7D44 BL 0x1C16DFC
	0x03BF7D48 LDR X0, [X23]
	0x03BF7D4C ADD X1, X31, 0x20
	0x03BF7D50 STP X21, X20, [X31 + 0x20]
	0x03BF7D54 BL 0x1C16E04
	0x03BF7D58 LDR X8, [X22]
	0x03BF7D5C MOVN X9, 0x0
	0x03BF7D60 MOV X1, X0
	0x03BF7D64 ADD X0, X31, 0x0
	0x03BF7D68 STP X8, X9, [X31]
	0x03BF7D6C LDR V0, [X19]
	0x03BF7D70 MOV X2, X31
	0x03BF7D74 STR V0, [X31 + 0x1]
	0x03BF7D78 BL 0x33D55D0
	0x03BF7D7C LDP X20, X19, [X31 + 0x50]
	0x03BF7D80 LDP X22, X21, [X31 + 0x40]
	0x03BF7D84 LDP X30, X23, [X31 + 0x30]
	0x03BF7D88 AND W0, W0, 0x1
	0x03BF7D8C ADD X31, X31, 0x60
	0x03BF7D90 RET
	0x03BF7D94 SUB X31, X31, 0x30
	0x03BF7D98 STR X30, [X31 + 0x10]
	0x03BF7D9C STP X20, X19, [X31 + 0x20]
	0x03BF7DA0 ADRP X20, 0x7EC000
	0x03BF7DA4 ADRP X19, 0x525000
	0x03BF7DA8 LDRB W8, [X20 + 0x8E5]
	0x03BF7DAC LDR X19, [X19 + 0x230]
	0x03BF7DB0 TBNZ X8, 0x0, 0x3BF7DD4
	0x03BF7DB4 ADRP X0, 0x567000
	0x03BF7DB8 LDR X0, [X0 + 0x888]
	0x03BF7DBC BL 0x1C16CF4
	0x03BF7DC0 ADRP X0, 0x525000
	0x03BF7DC4 LDR X0, [X0 + 0x230]
	0x03BF7DC8 BL 0x1C16CF4
	0x03BF7DCC MOVZ W8, 0x1
	0x03BF7DD0 STRB W8, [X20 + 0x8E5]
	0x03BF7DD4 LDR X0, [X19]
	0x03BF7DD8 ADRP X19, 0x567000
	0x03BF7DDC LDR W8, [X0 + 0xE0]
	0x03BF7DE0 LDR X19, [X19 + 0x888]
	0x03BF7DE4 CBNZ W8, 0x3BF7DEC
	0x03BF7DE8 BL 0x1C16DFC
	0x03BF7DEC MOV X0, X31
	0x03BF7DF0 BL 0x3C5DB88
	0x03BF7DF4 MOV X2, X0
	0x03BF7DF8 MOV X3, X1
	0x03BF7DFC ADD X0, X31, 0x0
	0x03BF7E00 MOV X1, X2
	0x03BF7E04 MOV X2, X3
	0x03BF7E08 STP X31, X31, [X31]
	0x03BF7E0C BL 0x3BF7BE4
	0x03BF7E10 LDR X8, [X19]
	0x03BF7E14 LDR V0, [X31]
	0x03BF7E18 LDP X20, X19, [X31 + 0x20]
	0x03BF7E1C LDR X30, [X31 + 0x10]
	0x03BF7E20 LDR X8, [X8 + 0xB8]
	0x03BF7E24 STR V0, [X8]
	0x03BF7E28 ADD X31, X31, 0x30
	0x03BF7E2C RET
	0x03BF7E30 SUB X31, X31, 0x30
	0x03BF7E34 STP X30, X21, [X31 + 0x10]
	0x03BF7E38 STP X20, X19, [X31 + 0x20]
	0x03BF7E3C ADRP X21, 0x7EC000
	0x03BF7E40 STP X1, X2, [X31]
	0x03BF7E44 ADRP X20, 0x525000
	0x03BF7E48 LDRB W8, [X21 + 0x8E6]
	0x03BF7E4C LDR X20, [X20 + 0x230]
	0x03BF7E50 MOV X19, X0
	0x03BF7E54 TBNZ X8, 0x0, 0x3BF7E78
	0x03BF7E58 ADRP X0, 0x567000
	0x03BF7E5C LDR X0, [X0 + 0x890]
	0x03BF7E60 BL 0x1C16CF4
	0x03BF7E64 ADRP X0, 0x525000

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+8], X2
	003 Move [X31+16], X30
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x7ED000
	009 Move [X31], X1
	010 Move X21, 0x526000
	011 Move W8, [X22+2217]
	012 Move X21, [X21+560]
	013 Move W20, W3
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {30}
	019 Move X0, 0x568000
	020 Move X0, [X0+1976]
	021 Call 0x1C17CF4
	022 Move X0, 0x568000
	023 Move X0, [X0+1984]
	024 Call 0x1C17CF4
	025 Move X0, 0x526000
	026 Move X0, [X0+560]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X22+2217], W8
	030 Move X0, [X21]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Add X0, X31, 0
	036 Move X1, X31
	037 Call PlayableHandle.IsValid, X0
	038 Move TEMP, X0
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfNotEqual {75}
	042 Move X0, [X21]
	043 Move X21, 0x568000
	044 Move W8, [X0+224]
	045 Move X21, [X21+1984]
	046 Compare W8, 0
	047 JumpIfNotEqual {49}
	048 Call 0x1C17DFC
	049 Move X1, [X21]
	050 Add X0, X31, 0
	051 Call 0x22319E8, X0
	052 Move TEMP, X0
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfNotEqual {84}
	056 Move X8, 0x568000
	057 Move X8, [X8+1976]
	058 Move X0, [X8]
	059 Move W8, [X0+224]
	060 Compare W8, 0
	061 JumpIfNotEqual {63}
	062 Call 0x1C17DFC
	063 Move X21, 0x7ED000
	064 Move X8, [X21+2224]
	065 Compare X8, 0
	066 JumpIfNotEqual {72}
	067 Move X0, -51281920
	068 Add X0, X0, 2708
	069 Call 0x1C17CB8
	070 Move X8, X0
	071 Move [X21+2224], X0
	072 And W1, W20, 1
	073 Add X0, X31, 0
	074 NotImplemented "Instruction BLR not yet implemented."
	075 Move V0, [X31]
	076 Move X22, [X31+32]
	077 Move X21, [X31+40]
	078 Move X30, [X31+16]
	079 Move [X19], V0
	080 Move X20, [X31+48]
	081 Move X19, [X31+56]
	082 Add X31, X31, 64
	083 Return 
	084 Move X0, 0x505000
	085 Move X0, [X0+3080]
	086 Call 0x1C17D08
	087 Call 0x1C17F10
	088 Move X19, X0
	089 Move X0, 0x568000
	090 Move X0, [X0+1992]
	091 Call 0x1C17D08
	092 Move X1, X0
	093 Move X0, X19
	094 Move X2, X31
	095 Call InvalidCastException..ctor, X0, X1
	096 Move X0, 0x568000
	097 Move X0, [X0+2000]
	098 Call 0x1C17D08
	099 Move X1, X0
	100 Move X0, X19
	101 Call 0x1C17DEC

Method: UnityEngine.Playables.PlayableHandle GetHandle()

Disassembly:
	0x03BF7EAC BL 0x1C16DFC
	0x03BF7EB0 LDR X1, [X20]
	0x03BF7EB4 ADD X0, X31, 0x0

ISIL:
	001 Move X8, [X0]
	002 Move X1, [X0+8]
	003 Move X0, X8
	004 Return X0

Method: System.Boolean Equals(UnityEngine.Animations.AnimationLayerMixerPlayable other)

Disassembly:
	0x03BF7EB8 BL 0x2230E08
	0x03BF7EBC TBZ X0, 0x0, 0x3BF7ED8
	0x03BF7EC0 LDR V0, [X31]
	0x03BF7EC4 LDP X30, X21, [X31 + 0x10]
	0x03BF7EC8 STR V0, [X19]
	0x03BF7ECC LDP X20, X19, [X31 + 0x20]
	0x03BF7ED0 ADD X31, X31, 0x30
	0x03BF7ED4 RET
	0x03BF7ED8 ADRP X0, 0x504000
	0x03BF7EDC LDR X0, [X0 + 0xC08]
	0x03BF7EE0 BL 0x1C16D08
	0x03BF7EE4 BL 0x1C16F10
	0x03BF7EE8 MOV X19, X0
	0x03BF7EEC ADRP X0, 0x567000
	0x03BF7EF0 LDR X0, [X0 + 0x898]
	0x03BF7EF4 BL 0x1C16D08
	0x03BF7EF8 MOV X1, X0
	0x03BF7EFC MOV X0, X19
	0x03BF7F00 MOV X2, X31
	0x03BF7F04 BL 0x337B498
	0x03BF7F08 ADRP X0, 0x567000
	0x03BF7F0C LDR X0, [X0 + 0x8A0]
	0x03BF7F10 BL 0x1C16D08
	0x03BF7F14 MOV X1, X0
	0x03BF7F18 MOV X0, X19
	0x03BF7F1C BL 0x1C16DEC
	0x03BF7F20 LDP X8, X1, [X0]
	0x03BF7F24 MOV X0, X8
	0x03BF7F28 RET
	0x03BF7F2C SUB X31, X31, 0x40
	0x03BF7F30 STR X30, [X31 + 0x10]
	0x03BF7F34 STP X22, X21, [X31 + 0x20]
	0x03BF7F38 STP X20, X19, [X31 + 0x30]
	0x03BF7F3C ADRP X22, 0x7EC000
	0x03BF7F40 ADRP X21, 0x525000
	0x03BF7F44 LDRB W8, [X22 + 0x8E7]
	0x03BF7F48 LDR X21, [X21 + 0xAF8]
	0x03BF7F4C MOV X19, X1
	0x03BF7F50 MOV X20, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x7ED000
	008 Move X22, 0x568000
	009 Move W8, [X23+2218]
	010 Move X22, [X22+1976]
	011 Move X19, X2
	012 Move X20, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x568000
	019 Move X0, [X0+1976]
	020 Call 0x1C17CF4
	021 Move X0, 0x526000
	022 Move X0, [X0+560]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X23+2218], W8
	026 Move X0, [X22]
	027 Move X22, 0x526000
	028 Move W8, [X0+224]
	029 Move X22, [X22+560]
	030 Compare W8, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1C17DFC
	033 Move X0, [X22]
	034 Move X22, [X21]
	035 Move X21, [X21+8]
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {40}
	039 Call 0x1C17DFC
	040 Move X0, X22
	041 Move X1, X21
	042 Move X2, X20
	043 Move X3, X19
	044 Move X20, [X31+32]
	045 Move X19, [X31+40]
	046 Move X22, [X31+16]
	047 Move X21, [X31+24]
	048 Move X4, X31
	049 Move X30, [X31+48]
	050 Move X23, [X31+56]
	051 Call PlayableHandle.op_Equality, X0, X1
	052 Return X0

Method: System.Void SetSingleLayerOptimizationInternal(ref UnityEngine.Playables.PlayableHandle handle, System.Boolean value)

Disassembly:
	0x03BF7E68 LDR X0, [X0 + 0x230]
	0x03BF7E6C BL 0x1C16CF4
	0x03BF7E70 MOVZ W8, 0x1
	0x03BF7E74 STRB W8, [X21 + 0x8E6]
	0x03BF7E78 LDR X0, [X20]
	0x03BF7E7C LDR W8, [X0 + 0xE0]
	0x03BF7E80 CBNZ W8, 0x3BF7E88
	0x03BF7E84 BL 0x1C16DFC
	0x03BF7E88 ADD X0, X31, 0x0
	0x03BF7E8C MOV X1, X31
	0x03BF7E90 BL 0x3C5E888
	0x03BF7E94 TBZ X0, 0x0, 0x3BF7EC0
	0x03BF7E98 LDR X0, [X20]
	0x03BF7E9C ADRP X20, 0x567000
	0x03BF7EA0 LDR W8, [X0 + 0xE0]
	0x03BF7EA4 LDR X20, [X20 + 0x890]
	0x03BF7EA8 CBNZ W8, 0x3BF7EB0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7ED000
	006 Move X2, [X21+2224]
	007 Move W19, W1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51281920
	012 Add X0, X0, 2708
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+2224], X0
	016 And W1, W19, 1
	017 Move X0, X20
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void .cctor()

Disassembly:
	0x03BF7F54 TBNZ X8, 0x0, 0x3BF7F6C
	0x03BF7F58 ADRP X0, 0x525000
	0x03BF7F5C LDR X0, [X0 + 0xAF8]
	0x03BF7F60 BL 0x1C16CF4
	0x03BF7F64 MOVZ W8, 0x1
	0x03BF7F68 STRB W8, [X22 + 0x8E7]
	0x03BF7F6C LDR X0, [X21]
	0x03BF7F70 LDR W8, [X0 + 0xE0]
	0x03BF7F74 CBNZ W8, 0x3BF7F7C
	0x03BF7F78 BL 0x1C16DFC
	0x03BF7F7C ADD X0, X31, 0x0
	0x03BF7F80 MOV X1, X20
	0x03BF7F84 MOV X2, X19
	0x03BF7F88 MOV X3, X31
	0x03BF7F8C STP X31, X31, [X31]
	0x03BF7F90 BL 0x3C5D9E4
	0x03BF7F94 LDP X0, X1, [X31]
	0x03BF7F98 LDP X20, X19, [X31 + 0x30]
	0x03BF7F9C LDP X22, X21, [X31 + 0x20]
	0x03BF7FA0 LDR X30, [X31 + 0x10]
	0x03BF7FA4 ADD X31, X31, 0x40
	0x03BF7FA8 RET
	0x03BF7FAC STP X30, X23, [X31 - 0x30]!
	0x03BF7FB0 STP X22, X21, [X31 + 0x10]
	0x03BF7FB4 STP X20, X19, [X31 + 0x20]
	0x03BF7FB8 ADRP X23, 0x7EC000
	0x03BF7FBC ADRP X22, 0x525000
	0x03BF7FC0 LDRB W8, [X23 + 0x8E8]
	0x03BF7FC4 LDR X22, [X22 + 0xAF8]
	0x03BF7FC8 MOV X19, X2
	0x03BF7FCC MOV X20, X1
	0x03BF7FD0 MOV X21, X0
	0x03BF7FD4 TBNZ X8, 0x0, 0x3BF7FF8
	0x03BF7FD8 ADRP X0, 0x525000
	0x03BF7FDC LDR X0, [X0 + 0xAF8]
	0x03BF7FE0 BL 0x1C16CF4
	0x03BF7FE4 ADRP X0, 0x525000
	0x03BF7FE8 LDR X0, [X0 + 0x230]
	0x03BF7FEC BL 0x1C16CF4
	0x03BF7FF0 MOVZ W8, 0x1

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+32], X20
	004 Move [X31+40], X19
	005 Move X20, 0x7ED000
	006 Move X19, 0x526000
	007 Move W8, [X20+2232]
	008 Move X19, [X19+560]
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x568000
	014 Move X0, [X0+1976]
	015 Call 0x1C17CF4
	016 Move X0, 0x526000
	017 Move X0, [X0+560]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+2232], W8
	021 Move X0, [X19]
	022 Move X19, 0x568000
	023 Move W8, [X0+224]
	024 Move X19, [X19+1976]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, X31
	029 Call PlayableHandle.get_Null
	030 Move X2, X0
	031 Move X4, X1
	032 Add X0, X31, 0
	033 Move W3, 1
	034 Move X1, X2
	035 Move X2, X4
	036 Move [X31], X31
	037 Move [X31+8], X31
	038 Call AnimationLayerMixerPlayable..ctor, X0, X1, X2
	039 Move X8, [X19]
	040 Move V0, [X31]
	041 Move X20, [X31+32]
	042 Move X19, [X31+40]
	043 Move X30, [X31+16]
	044 Move X8, [X8+184]
	045 Move [X8], V0
	046 Add X31, X31, 48
	047 Return 

