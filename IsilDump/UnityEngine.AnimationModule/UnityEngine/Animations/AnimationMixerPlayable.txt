Type: UnityEngine.Animations.AnimationMixerPlayable

Method: System.Void .ctor(UnityEngine.Playables.PlayableHandle handle)

Disassembly:
	0x03BF7FF4 STRB W8, [X23 + 0x8E8]
	0x03BF7FF8 LDR X0, [X22]
	0x03BF7FFC ADRP X22, 0x525000
	0x03BF8000 LDR W8, [X0 + 0xE0]
	0x03BF8004 B 0x3EB19CC
	0x03BF8008 CBNZ W8, 0x3BF8010
	0x03BF800C BL 0x1C16DFC
	0x03BF8010 LDR X0, [X22]
	0x03BF8014 LDP X22, X21, [X21]
	0x03BF8018 LDR W8, [X0 + 0xE0]
	0x03BF801C CBNZ W8, 0x3BF8024
	0x03BF8020 BL 0x1C16DFC
	0x03BF8024 MOV X0, X22
	0x03BF8028 MOV X1, X21
	0x03BF802C MOV X2, X20
	0x03BF8030 MOV X3, X19
	0x03BF8034 LDP X20, X19, [X31 + 0x20]
	0x03BF8038 LDP X22, X21, [X31 + 0x10]
	0x03BF803C MOV X4, X31
	0x03BF8040 LDP X30, X23, [X31], #0x30
	0x03BF8044 B 0x3C5DA90
	0x03BF8048 SUB X31, X31, 0x40
	0x03BF804C STP X1, X30, [X31 + 0x8]
	0x03BF8050 STP X22, X21, [X31 + 0x20]
	0x03BF8054 STP X20, X19, [X31 + 0x30]
	0x03BF8058 ADRP X21, 0x7EB000
	0x03BF805C STR X0, [X31]
	0x03BF8060 ADRP X22, 0x524000
	0x03BF8064 LDRB W8, [X21 + 0x8E9]
	0x03BF8068 LDR X22, [X22 + 0xAF8]
	0x03BF806C MOV X19, X3
	0x03BF8070 MOV X20, X2
	0x03BF8074 TBNZ X8, 0x0, 0x3BF808C
	0x03BF8078 ADRP X0, 0x524000
	0x03BF807C LDR X0, [X0 + 0xAF8]
	0x03BF8080 BL 0x1C16CF4
	0x03BF8084 MOVZ W8, 0x1
	0x03BF8088 STRB W8, [X21 + 0x8E9]
	0x03BF808C LDR X0, [X22]
	0x03BF8090 LDR W8, [X0 + 0xE0]
	0x03BF8094 CBNZ W8, 0x3BF809C
	0x03BF8098 BL 0x1C16DFC
	0x03BF809C ADRP X21, 0x7EB000
	0x03BF80A0 LDR X8, [X21 + 0x8F0]
	0x03BF80A4 CBNZ X8, 0x3BF80BC
	0x03BF80A8 ADRP X0, 0xFFFFFFFFFCF22000
	0x03BF80AC ADD X0, X0, 0x60B
	0x03BF80B0 BL 0x1C16CB8
	0x03BF80B4 MOV X8, X0
	0x03BF80B8 STR X0, [X21 + 0x8F0]
	0x03BF80BC ADD X0, X31, 0x0
	0x03BF80C0 MOV X1, X20
	0x03BF80C4 MOV X2, X19
	0x03BF80C8 BLR X8
	0x03BF80CC LDP X20, X19, [X31 + 0x30]
	0x03BF80D0 LDP X22, X21, [X31 + 0x20]
	0x03BF80D4 LDR X30, [X31 + 0x10]
	0x03BF80D8 AND W0, W0, 0x1
	0x03BF80DC ADD X31, X31, 0x40
	0x03BF80E0 RET

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x7EC000
	007 Move [X31], X1
	008 Move [X31+8], X2
	009 Move X20, 0x525000
	010 Call 0x3EB274C
	011 Return 
	012 Move X20, [X20+560]
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x567000
	019 Move X0, [X0+2008]
	020 Call 0x1C17CF4
	021 Move X0, 0x525000
	022 Move X0, [X0+560]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+2233], W8
	026 Move X0, [X20]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Add X0, X31, 0
	032 Move X1, X31
	033 Call PlayableHandle.IsValid, X0
	034 Move TEMP, X0
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfNotEqual {52}
	038 Move X0, [X20]
	039 Move X20, 0x567000
	040 Move W8, [X0+224]
	041 Move X20, [X20+2008]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Move X1, [X20]
	046 Add X0, X31, 0
	047 Call PlayableHandle.IsPlayableOfType, X0
	048 Move TEMP, X0
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfNotEqual {60}
	052 Move V0, [X31]
	053 Move X30, [X31+16]
	054 Move X21, [X31+24]
	055 Move [X19], V0
	056 Move X20, [X31+32]
	057 Move X19, [X31+40]
	058 Add X31, X31, 48
	059 Return 
	060 Move X0, 0x504000
	061 Move X0, [X0+3080]
	062 Call 0x1C17D08
	063 Call 0x1C17F10
	064 Move X19, X0
	065 Move X0, 0x567000
	066 Move X0, [X0+2016]
	067 Call 0x1C17D08
	068 Move X1, X0
	069 Move X0, X19
	070 Move X2, X31
	071 Call InvalidCastException..ctor, X0, X1
	072 Move X0, 0x567000
	073 Move X0, [X0+2024]
	074 Call 0x1C17D08
	075 Move X1, X0
	076 Move X0, X19
	077 Call 0x1C17DEC

Method: UnityEngine.Playables.PlayableHandle GetHandle()

Disassembly:
	0x03BF80E4 STR X30, [X31 - 0x30]!
	0x03BF80E8 STP X22, X21, [X31 + 0x10]
	0x03BF80EC STP X20, X19, [X31 + 0x20]

ISIL:
	001 Move X8, [X0]
	002 Move X1, [X0+8]
	003 Move X0, X8
	004 Return X0

Method: System.Boolean Equals(UnityEngine.Animations.AnimationMixerPlayable other)

Disassembly:
	0x03BF80F0 ADRP X22, 0x7EB000
	0x03BF80F4 LDR X3, [X22 + 0x8F0]
	0x03BF80F8 MOV X19, X2
	0x03BF80FC MOV X20, X1
	0x03BF8100 MOV X21, X0
	0x03BF8104 CBNZ X3, 0x3BF811C
	0x03BF8108 ADRP X0, 0xFFFFFFFFFCF22000
	0x03BF810C ADD X0, X0, 0x60B
	0x03BF8110 BL 0x1C16CB8
	0x03BF8114 MOV X3, X0
	0x03BF8118 STR X0, [X22 + 0x8F0]
	0x03BF811C MOV X0, X21
	0x03BF8120 MOV X1, X20
	0x03BF8124 MOV X2, X19
	0x03BF8128 LDP X20, X19, [X31 + 0x20]
	0x03BF812C LDP X22, X21, [X31 + 0x10]
	0x03BF8130 LDR X30, [X31], #0x30
	0x03BF8134 BR X3
	0x03BF8138 SUB X31, X31, 0x30
	0x03BF813C STR X30, [X31 + 0x10]
	0x03BF8140 STP X20, X19, [X31 + 0x20]
	0x03BF8144 ADRP X20, 0x7EB000
	0x03BF8148 ADRP X19, 0x524000
	0x03BF814C LDRB W8, [X20 + 0x8EA]
	0x03BF8150 LDR X19, [X19 + 0x230]
	0x03BF8154 TBNZ X8, 0x0, 0x3BF8178
	0x03BF8158 ADRP X0, 0x524000
	0x03BF815C LDR X0, [X0 + 0xAF8]
	0x03BF8160 BL 0x1C16CF4
	0x03BF8164 ADRP X0, 0x524000
	0x03BF8168 LDR X0, [X0 + 0x230]
	0x03BF816C BL 0x1C16CF4
	0x03BF8170 MOVZ W8, 0x1
	0x03BF8174 STRB W8, [X20 + 0x8EA]
	0x03BF8178 LDR X0, [X19]
	0x03BF817C ADRP X19, 0x524000
	0x03BF8180 LDR W8, [X0 + 0xE0]
	0x03BF8184 LDR X19, [X19 + 0xAF8]
	0x03BF8188 CBNZ W8, 0x3BF8190

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x7EC000
	008 Move X22, 0x567000
	009 Move W8, [X23+2234]
	010 Move X22, [X22+2032]
	011 Move X19, X2
	012 Move X20, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x567000
	019 Move X0, [X0+2032]
	020 Call 0x1C17CF4
	021 Move X0, 0x525000
	022 Move X0, [X0+560]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X23+2234], W8
	026 Move X0, [X22]
	027 Move X22, 0x525000
	028 Move W8, [X0+224]
	029 Move X22, [X22+560]
	030 Compare W8, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1C17DFC
	033 Move X0, [X22]
	034 Move X22, [X21]
	035 Move X21, [X21+8]
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {40}
	039 Call 0x1C17DFC
	040 Move X0, X22
	041 Move X1, X21
	042 Move X2, X20
	043 Move X3, X19
	044 Move X20, [X31+32]
	045 Move X19, [X31+40]
	046 Move X22, [X31+16]
	047 Move X21, [X31+24]
	048 Move X4, X31
	049 Move X30, [X31+48]
	050 Move X23, [X31+56]
	051 Call PlayableHandle.op_Equality, X0, X1
	052 Return X0

Method: System.Void .cctor()

Disassembly:
	0x03BF818C BL 0x1C16DFC
	0x03BF8190 MOV X0, X31
	0x03BF8194 BL 0x3C5DB88
	0x03BF8198 MOV X2, X0
	0x03BF819C MOV X3, X1
	0x03BF81A0 ADD X0, X31, 0x0
	0x03BF81A4 MOV X1, X2
	0x03BF81A8 MOV X2, X3
	0x03BF81AC STP X31, X31, [X31]
	0x03BF81B0 BL 0x3BF7E30
	0x03BF81B4 LDR X8, [X19]
	0x03BF81B8 LDR V0, [X31]
	0x03BF81BC LDP X20, X19, [X31 + 0x20]
	0x03BF81C0 LDR X30, [X31 + 0x10]
	0x03BF81C4 LDR X8, [X8 + 0xB8]
	0x03BF81C8 STR V0, [X8]
	0x03BF81CC ADD X31, X31, 0x30
	0x03BF81D0 RET
	0x03BF81D4 LDR W0, [X0]
	0x03BF81D8 RET
	0x03BF81DC STP X30, X19, [X31 - 0x10]!
	0x03BF81E0 LDR W8, [X0]
	0x03BF81E4 CMP W8, 0x2
	0x03BF81E8 B.CC 0x3BF8254
	0x03BF81EC MOV X19, X0
	0x03BF81F0 LDR X0, [X0 + 0x8]
	0x03BF81F4 MOV X1, X31
	0x03BF81F8 MOV X2, X31
	0x03BF81FC BL 0x33C5D2C
	0x03BF8200 TBZ X0, 0x0, 0x3BF8254
	0x03BF8204 LDR X0, [X19 + 0x10]
	0x03BF8208 MOV X1, X31
	0x03BF820C MOV X2, X31
	0x03BF8210 BL 0x33C5D2C
	0x03BF8214 TBZ X0, 0x0, 0x3BF8254
	0x03BF8218 LDR X0, [X19 + 0x18]
	0x03BF821C MOV X1, X31
	0x03BF8220 MOV X2, X31
	0x03BF8224 BL 0x33C5D2C

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+32], X20
	004 Move [X31+40], X19
	005 Move X20, 0x7EC000
	006 Move X19, 0x525000
	007 Move W8, [X20+2235]
	008 Move X19, [X19+560]
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x567000
	014 Move X0, [X0+2032]
	015 Call 0x1C17CF4
	016 Move X0, 0x525000
	017 Move X0, [X0+560]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+2235], W8
	021 Move X0, [X19]
	022 Move X19, 0x567000
	023 Move W8, [X0+224]
	024 Move X19, [X19+2032]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, X31
	029 Call PlayableHandle.get_Null
	030 Move X2, X0
	031 Move X3, X1
	032 Add X0, X31, 0
	033 Move X1, X2
	034 Move X2, X3
	035 Move [X31], X31
	036 Move [X31+8], X31
	037 Call AnimationMixerPlayable..ctor, X0, X1
	038 Move X8, [X19]
	039 Move V0, [X31]
	040 Move X20, [X31+32]
	041 Move X19, [X31+40]
	042 Move X30, [X31+16]
	043 Move X8, [X8+184]
	044 Move [X8], V0
	045 Add X31, X31, 48
	046 Return 

