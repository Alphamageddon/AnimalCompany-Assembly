Type: UnityEngine.Animations.AnimatorControllerPlayable

Method: System.Void .ctor(UnityEngine.Playables.PlayableHandle handle)

Disassembly:
	0x03BFBC54 STP X30, X19, [X31 - 0x10]!
	0x03BFBC58 ADRP X19, 0x7E8000
	0x03BFBC5C LDR X0, [X19 + 0xA88]
	0x03BFBC60 CBNZ X0, 0x3BFBC74
	0x03BFBC64 ADRP X0, 0xFFFFFFFFFCF29000
	0x03BFBC68 ADD X0, X0, 0x85B
	0x03BFBC6C BL 0x1C16CB8
	0x03BFBC70 STR X0, [X19 + 0xA88]
	0x03BFBC74 LDP X30, X19, [X31], #0x10
	0x03BFBC78 BR X0
	0x03BFBC7C STR X30, [X31 - 0x20]!
	0x03BFBC80 STP X20, X19, [X31 + 0x10]
	0x03BFBC84 ADRP X20, 0x7E8000
	0x03BFBC88 LDR X1, [X20 + 0xA90]
	0x03BFBC8C MOV X19, X0
	0x03BFBC90 CBNZ X1, 0x3BFBCA8
	0x03BFBC94 ADRP X0, 0xFFFFFFFFFCF2D000
	0x03BFBC98 ADD X0, X0, 0x2EF
	0x03BFBC9C BL 0x1C16CB8
	0x03BFBCA0 MOV X1, X0
	0x03BFBCA4 STR X0, [X20 + 0xA90]
	0x03BFBCA8 MOV X0, X19
	0x03BFBCAC LDP X20, X19, [X31 + 0x10]
	0x03BFBCB0 LDR X30, [X31], #0x20
	0x03BFBCB4 BR X1
	0x03BFBCB8 STP X30, X25, [X31 - 0x40]!
	0x03BFBCBC STP X24, X23, [X31 + 0x10]
	0x03BFBCC0 STP X22, X21, [X31 + 0x20]
	0x03BFBCC4 STP X20, X19, [X31 + 0x30]
	0x03BFBCC8 ADRP X25, 0x7E8000
	0x03BFBCCC LDR X6, [X25 + 0xA98]
	0x03BFBCD0 MOV W22, W5
	0x03BFBCD4 MOV W19, W4
	0x03BFBCD8 MOV W20, W3
	0x03BFBCDC MOV W21, W2
	0x03BFBCE0 MOV X23, X1
	0x03BFBCE4 MOV X24, X0
	0x03BFBCE8 CBNZ X6, 0x3BFBD00
	0x03BFBCEC ADRP X0, 0xFFFFFFFFFCF29000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x7E9000
	008 Move X22, 0x522000
	009 Move W8, [X23+2584]
	010 Move X22, [X22+560]
	011 Move X19, X2
	012 Move X20, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x564000
	019 Move X0, [X0+2400]
	020 Call 0x1C17CF4
	021 Move X0, 0x522000
	022 Move X0, [X0+560]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X23+2584], W8
	026 Move X0, [X22]
	027 Move X22, 0x564000
	028 Move W8, [X0+224]
	029 Move X22, [X22+2400]
	030 Compare W8, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1C17DFC
	033 Move X0, X31
	034 Call PlayableHandle.get_Null
	035 Move [X21], X0
	036 Move [X21+8], X1
	037 Move X0, [X22]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Move X0, X21
	043 Move X1, X20
	044 Move X2, X19
	045 Move X20, [X31+32]
	046 Move X19, [X31+40]
	047 Move X22, [X31+16]
	048 Move X21, [X31+24]
	049 Move X30, [X31+48]
	050 Move X23, [X31+56]

Method: UnityEngine.Playables.PlayableHandle GetHandle()

Disassembly:
	0x03BFBE34 MOV X21, X1
	0x03BFBE38 MOV X19, X0
	0x03BFBE3C TBNZ X8, 0x0, 0x3BFBE6C

ISIL:
	001 Move X8, [X0]
	002 Move X1, [X0+8]
	003 Move X0, X8
	004 Return X0

Method: System.Void SetHandle(UnityEngine.Playables.PlayableHandle handle)

Disassembly:
	0x03BFBCF0 ADD X0, X0, 0x887
	0x03BFBCF4 BL 0x1C16CB8
	0x03BFBCF8 MOV X6, X0
	0x03BFBCFC STR X0, [X25 + 0xA98]
	0x03BFBD00 AND W5, W22, 0x1
	0x03BFBD04 MOV X0, X24
	0x03BFBD08 MOV X1, X23
	0x03BFBD0C MOV W2, W21
	0x03BFBD10 MOV W3, W20
	0x03BFBD14 MOV W4, W19
	0x03BFBD18 LDP X20, X19, [X31 + 0x30]
	0x03BFBD1C LDP X22, X21, [X31 + 0x20]
	0x03BFBD20 LDP X24, X23, [X31 + 0x10]
	0x03BFBD24 LDP X30, X25, [X31], #0x40
	0x03BFBD28 BR X6
	0x03BFBD2C STR X30, [X31 - 0x20]!
	0x03BFBD30 STP X20, X19, [X31 + 0x10]
	0x03BFBD34 ADRP X20, 0x7E8000
	0x03BFBD38 LDR X1, [X20 + 0xAA0]
	0x03BFBD3C MOV X19, X0
	0x03BFBD40 CBNZ X1, 0x3BFBD58
	0x03BFBD44 ADRP X0, 0xFFFFFFFFFCF0D000
	0x03BFBD48 ADD X0, X0, 0xADB
	0x03BFBD4C BL 0x1C16CB8
	0x03BFBD50 MOV X1, X0
	0x03BFBD54 STR X0, [X20 + 0xAA0]
	0x03BFBD58 MOV X0, X19
	0x03BFBD5C LDP X20, X19, [X31 + 0x10]
	0x03BFBD60 LDR X30, [X31], #0x20
	0x03BFBD64 BR X1
	0x03BFBD68 STR X30, [X31 - 0x20]!
	0x03BFBD6C STP X20, X19, [X31 + 0x10]
	0x03BFBD70 ADRP X20, 0x7E8000
	0x03BFBD74 LDR X1, [X20 + 0xAA8]
	0x03BFBD78 MOV X19, X0
	0x03BFBD7C CBNZ X1, 0x3BFBD94
	0x03BFBD80 ADRP X0, 0xFFFFFFFFFCF0F000
	0x03BFBD84 ADD X0, X0, 0xDC8
	0x03BFBD88 BL 0x1C16CB8
	0x03BFBD8C MOV X1, X0
	0x03BFBD90 STR X0, [X20 + 0xAA8]
	0x03BFBD94 MOV X0, X19
	0x03BFBD98 LDP X20, X19, [X31 + 0x10]
	0x03BFBD9C LDR X30, [X31], #0x20
	0x03BFBDA0 BR X1
	0x03BFBDA4 STR X30, [X31 - 0x20]!
	0x03BFBDA8 STP X20, X19, [X31 + 0x10]
	0x03BFBDAC ADRP X20, 0x7E8000
	0x03BFBDB0 LDR X1, [X20 + 0xAB0]
	0x03BFBDB4 MOV X19, X0
	0x03BFBDB8 CBNZ X1, 0x3BFBDD0
	0x03BFBDBC ADRP X0, 0xFFFFFFFFFCEFB000
	0x03BFBDC0 ADD X0, X0, 0xD8B
	0x03BFBDC4 BL 0x1C16CB8
	0x03BFBDC8 MOV X1, X0
	0x03BFBDCC STR X0, [X20 + 0xAB0]
	0x03BFBDD0 MOV X0, X19
	0x03BFBDD4 LDP X20, X19, [X31 + 0x10]
	0x03BFBDD8 LDR X30, [X31], #0x20
	0x03BFBDDC BR X1
	0x03BFBDE0 STR X30, [X31 - 0x20]!
	0x03BFBDE4 STP X20, X19, [X31 + 0x10]
	0x03BFBDE8 ADRP X20, 0x7E8000
	0x03BFBDEC LDR X1, [X20 + 0xAB8]
	0x03BFBDF0 MOV X19, X0
	0x03BFBDF4 CBNZ X1, 0x3BFBE0C
	0x03BFBDF8 ADRP X0, 0xFFFFFFFFFCF07000
	0x03BFBDFC ADD X0, X0, 0xC15
	0x03BFBE00 BL 0x1C16CB8
	0x03BFBE04 MOV X1, X0
	0x03BFBE08 STR X0, [X20 + 0xAB8]
	0x03BFBE0C MOV X0, X19
	0x03BFBE10 LDP X20, X19, [X31 + 0x10]
	0x03BFBE14 LDR X30, [X31], #0x20
	0x03BFBE18 BR X1
	0x03BFBE1C STP X30, X23, [X31 - 0x30]!
	0x03BFBE20 STP X22, X21, [X31 + 0x10]
	0x03BFBE24 STP X20, X19, [X31 + 0x20]
	0x03BFBE28 ADRP X22, 0x7E8000
	0x03BFBE2C LDRB W8, [X22 + 0xAC0]
	0x03BFBE30 MOV W20, W2

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x7E9000
	007 Move [X31], X1
	008 Move [X31+8], X2
	009 Move X20, 0x522000
	010 Move W8, [X21+2585]
	011 Move X20, [X20+560]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x564000
	018 Move X0, [X0+2408]
	019 Call 0x1C17CF4
	020 Move X0, 0x522000
	021 Move X0, [X0+560]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+2585], W8
	025 Move X0, [X20]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X0, X19
	031 Move X1, X31
	032 Call PlayableHandle.IsValid, X0
	033 Move TEMP, X0
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfEqual {71}
	037 Move X0, [X20]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Add X0, X31, 0
	043 Move X1, X31
	044 Call PlayableHandle.IsValid, X0
	045 Move TEMP, X0
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfNotEqual {63}
	049 Move X0, [X20]
	050 Move W8, [X0+224]
	051 Compare W8, 0
	052 JumpIfNotEqual {54}
	053 Call 0x1C17DFC
	054 Move X8, 0x564000
	055 Move X8, [X8+2408]
	056 Add X0, X31, 0
	057 Move X1, [X8]
	058 Call PlayableHandle.IsPlayableOfType, X0
	059 Move TEMP, X0
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfNotEqual {83}
	063 Move V0, [X31]
	064 Move X30, [X31+16]
	065 Move X21, [X31+24]
	066 Move [X19], V0
	067 Move X20, [X31+32]
	068 Move X19, [X31+40]
	069 Add X31, X31, 48
	070 Return 
	071 Move X0, 0x4F9000
	072 Move X0, [X0+1456]
	073 Call 0x1C17D08
	074 Call 0x1C17F10
	075 Move X19, X0
	076 Move X0, 0x564000
	077 Move X0, [X0+2416]
	078 Call 0x1C17D08
	079 Move X1, X0
	080 Move X0, X19
	081 Move X2, X31
	082 Call InvalidOperationException..ctor, X0, X1
	083 Move X0, 0x501000
	084 Move X0, [X0+3080]
	085 Call 0x1C17D08
	086 Call 0x1C17F10
	087 Move X19, X0
	088 Move X0, 0x564000
	089 Move X0, [X0+2424]
	090 Call 0x1C17D08
	091 Move X1, X0
	092 Move X0, X19
	093 Move X2, X31
	094 Call InvalidCastException..ctor, X0, X1
	095 Move X0, 0x564000
	096 Move X0, [X0+2432]
	097 Call 0x1C17D08
	098 Move X1, X0
	099 Move X0, X19
	100 Call 0x1C17DEC

Method: System.Boolean Equals(UnityEngine.Animations.AnimatorControllerPlayable other)

Disassembly:
	0x03BFBE40 ADRP X0, 0x4F8000
	0x03BFBE44 LDR X0, [X0 + 0xA28]
	0x03BFBE48 BL 0x1C16CF4
	0x03BFBE4C ADRP X0, 0x563000
	0x03BFBE50 LDR X0, [X0 + 0x998]
	0x03BFBE54 BL 0x1C16CF4
	0x03BFBE58 ADRP X0, 0x563000
	0x03BFBE5C LDR X0, [X0 + 0x9A0]
	0x03BFBE60 BL 0x1C16CF4
	0x03BFBE64 MOVZ W8, 0x1
	0x03BFBE68 STRB W8, [X22 + 0xAC0]
	0x03BFBE6C ADRP X22, 0x7E8000
	0x03BFBE70 LDR X8, [X22 + 0xAB0]
	0x03BFBE74 CBNZ X8, 0x3BFBE8C
	0x03BFBE78 ADRP X0, 0xFFFFFFFFFCEFB000
	0x03BFBE7C ADD X0, X0, 0xD8B
	0x03BFBE80 BL 0x1C16CB8
	0x03BFBE84 MOV X8, X0
	0x03BFBE88 STR X0, [X22 + 0xAB0]
	0x03BFBE8C MOV X0, X19
	0x03BFBE90 BLR X8
	0x03BFBE94 CMP W0, 0x0
	0x03BFBE98 B.LE 0x3BFBED0
	0x03BFBE9C CBZ X21, 0x3BFBF60
	0x03BFBEA0 LDR X8, [X22 + 0xAB0]
	0x03BFBEA4 CBNZ X8, 0x3BFBEBC
	0x03BFBEA8 ADRP X0, 0xFFFFFFFFFCEFB000
	0x03BFBEAC ADD X0, X0, 0xD8B
	0x03BFBEB0 BL 0x1C16CB8
	0x03BFBEB4 MOV X8, X0
	0x03BFBEB8 STR X0, [X22 + 0xAB0]
	0x03BFBEBC MOV X0, X19
	0x03BFBEC0 BLR X8
	0x03BFBEC4 LDR W8, [X21 + 0x18]
	0x03BFBEC8 SDIV W22, W8, W0
	0x03BFBECC B 0x3BFBF64
	0x03BFBED0 ADRP X20, 0x7E8000
	0x03BFBED4 LDR X8, [X20 + 0xA90]
	0x03BFBED8 CBNZ X8, 0x3BFBEF0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x7E9000
	008 Move X22, 0x564000
	009 Move W8, [X23+2586]
	010 Move X22, [X22+2400]
	011 Move X19, X2
	012 Move X20, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x564000
	019 Move X0, [X0+2400]
	020 Call 0x1C17CF4
	021 Move X0, 0x522000
	022 Move X0, [X0+560]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X23+2586], W8
	026 Move X0, [X22]
	027 Move X22, 0x522000
	028 Move W8, [X0+224]
	029 Move X22, [X22+560]
	030 Compare W8, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1C17DFC
	033 Move X0, [X22]
	034 Move X22, [X21]
	035 Move X21, [X21+8]
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {40}
	039 Call 0x1C17DFC
	040 Move X0, X22
	041 Move X1, X21
	042 Move X2, X20
	043 Move X3, X19
	044 Move X20, [X31+32]
	045 Move X19, [X31+40]
	046 Move X22, [X31+16]
	047 Move X21, [X31+24]
	048 Move X4, X31
	049 Move X30, [X31+48]
	050 Move X23, [X31+56]
	051 Call PlayableHandle.op_Equality, X0, X1
	052 Return X0

Method: System.Void .cctor()

Disassembly:
	0x03BFBEDC ADRP X0, 0xFFFFFFFFFCF2D000
	0x03BFBEE0 ADD X0, X0, 0x2EF
	0x03BFBEE4 BL 0x1C16CB8
	0x03BFBEE8 MOV X8, X0
	0x03BFBEEC STR X0, [X20 + 0xA90]
	0x03BFBEF0 MOV X0, X19
	0x03BFBEF4 BLR X8
	0x03BFBEF8 ADRP X8, 0x563000
	0x03BFBEFC LDR X8, [X8 + 0x9A0]
	0x03BFBF00 ADRP X9, 0x563000
	0x03BFBF04 LDR X9, [X9 + 0x998]
	0x03BFBF08 MOV X1, X0
	0x03BFBF0C LDR X8, [X8]
	0x03BFBF10 MOV X3, X31
	0x03BFBF14 LDR X2, [X9]
	0x03BFBF18 MOV X0, X8
	0x03BFBF1C BL 0x32274B8
	0x03BFBF20 ADRP X8, 0x4F8000
	0x03BFBF24 LDR X8, [X8 + 0xA28]
	0x03BFBF28 MOV X19, X0
	0x03BFBF2C LDR X8, [X8]
	0x03BFBF30 LDR W9, [X8 + 0xE0]
	0x03BFBF34 CBNZ W9, 0x3BFBF40
	0x03BFBF38 MOV X0, X8
	0x03BFBF3C BL 0x1C16DFC
	0x03BFBF40 MOV X0, X19
	0x03BFBF44 MOV X1, X31
	0x03BFBF48 BL 0x3C06048
	0x03BFBF4C LDP X20, X19, [X31 + 0x20]
	0x03BFBF50 LDP X22, X21, [X31 + 0x10]
	0x03BFBF54 MOV W0, W31
	0x03BFBF58 LDP X30, X23, [X31], #0x30
	0x03BFBF5C RET
	0x03BFBF60 MOV W22, W31
	0x03BFBF64 ADRP X23, 0x7E8000
	0x03BFBF68 LDR X4, [X23 + 0xA78]
	0x03BFBF6C CBNZ X4, 0x3BFBF84
	0x03BFBF70 ADRP X0, 0xFFFFFFFFFCF1F000
	0x03BFBF74 ADD X0, X0, 0x6B3

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+32], X20
	004 Move [X31+40], X19
	005 Move X20, 0x7E9000
	006 Move X19, 0x522000
	007 Move W8, [X20+2587]
	008 Move X19, [X19+560]
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x564000
	014 Move X0, [X0+2400]
	015 Call 0x1C17CF4
	016 Move X0, 0x522000
	017 Move X0, [X0+560]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+2587], W8
	021 Move X0, [X19]
	022 Move X19, 0x564000
	023 Move W8, [X0+224]
	024 Move X19, [X19+2400]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, X31
	029 Call PlayableHandle.get_Null
	030 Move X2, X0
	031 Move X3, X1
	032 Add X0, X31, 0
	033 Move X1, X2
	034 Move X2, X3
	035 Move [X31], X31
	036 Move [X31+8], X31
	037 Call AnimatorControllerPlayable..ctor, X0, X1
	038 Move X8, [X19]
	039 Move V0, [X31]
	040 Move X20, [X31+32]
	041 Move X19, [X31+40]
	042 Move X30, [X31+16]
	043 Move X8, [X8+184]
	044 Move [X8], V0
	045 Add X31, X31, 48
	046 Return 

