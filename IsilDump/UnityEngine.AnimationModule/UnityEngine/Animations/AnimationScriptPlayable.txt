Type: UnityEngine.Animations.AnimationScriptPlayable

Method: UnityEngine.Animations.AnimationScriptPlayable Create(UnityEngine.Playables.PlayableGraph graph, T jobData, System.Int32 inputCount = 0)

Disassembly:
	0x022C7D08 CBNZ W9, 0x22C7D14
	0x022C7D0C MOV X0, X8
	0x022C7D10 BL 0x1C16DFC
	0x022C7D14 MOV X0, X31
	0x022C7D18 BL 0x3C5DB88
	0x022C7D1C ADRP X9, 0x1E55000
	0x022C7D20 LDR X9, [X9 + 0xAF8]
	0x022C7D24 MOV X8, X0
	0x022C7D28 STP X8, X1, [X31]
	0x022C7D2C LDR X0, [X9]
	0x022C7D30 LDR W8, [X0 + 0xE0]
	0x022C7D34 CBNZ W8, 0x22C7D3C
	0x022C7D38 BL 0x1C16DFC
	0x022C7D3C ADD X2, X31, 0x0
	0x022C7D40 MOV X0, X21
	0x022C7D44 MOV X1, X20
	0x022C7D48 MOV X3, X22
	0x022C7D4C MOV X4, X31
	0x022C7D50 BL 0x3BF8048
	0x022C7D54 LDR X8, [X23]
	0x022C7D58 MOV W20, W0
	0x022C7D5C LDR W9, [X8 + 0xE0]
	0x022C7D60 CBZ W9, 0x22C7D80
	0x022C7D64 TBZ X20, 0x0, 0x22C7D8C
	0x022C7D68 ADD X0, X31, 0x0
	0x022C7D6C MOV W1, W19
	0x022C7D70 MOV X2, X31
	0x022C7D74 BL 0x3C5EBA4
	0x022C7D78 LDP X0, X1, [X31]
	0x022C7D7C B 0x22C7D94
	0x022C7D80 MOV X0, X8
	0x022C7D84 BL 0x1C16DFC
	0x022C7D88 TBNZ X20, 0x0, 0x22C7D68
	0x022C7D8C MOV X0, X31
	0x022C7D90 BL 0x3C5DB88
	0x022C7D94 LDP X20, X19, [X31 + 0x30]
	0x022C7D98 LDP X22, X21, [X31 + 0x20]
	0x022C7D9C LDP X30, X23, [X31 + 0x10]
	0x022C7DA0 ADD X31, X31, 0x40
	0x022C7DA4 RET
	0x022C7DA8 SUB X31, X31, 0x40
	0x022C7DAC STP X30, X23, [X31 + 0x10]
	0x022C7DB0 STP X22, X21, [X31 + 0x20]
	0x022C7DB4 STP X20, X19, [X31 + 0x30]
	0x022C7DB8 LDR X8, [X3 + 0x38]
	0x022C7DBC MOV W19, W2
	0x022C7DC0 MOV X20, X1
	0x022C7DC4 MOV X21, X0
	0x022C7DC8 CBNZ X8, 0x22C7DFC
	0x022C7DCC ADRP X0, 0x1E55000
	0x022C7DD0 LDR X0, [X0 + 0xAF8]
	0x022C7DD4 MOV X22, X3
	0x022C7DD8 BL 0x1C16CF4
	0x022C7DDC ADRP X0, 0x1E55000
	0x022C7DE0 LDR X0, [X0 + 0x230]
	0x022C7DE4 BL 0x1C16CF4
	0x022C7DE8 LDR X8, [X22 + 0x38]
	0x022C7DEC CBNZ X8, 0x22C7DFC
	0x022C7DF0 MOV X0, X22
	0x022C7DF4 BL 0x1C5C6E0

ISIL:
	001 Subtract X31, X31, 480
	002 Move [X31+416], X29
	003 Move [X31+432], X30
	004 Move [X31+440], X23
	005 Move [X31+448], X22
	006 Move [X31+456], X21
	007 Move [X31+464], X20
	008 Move [X31+472], X19
	009 Move X8, [X4+56]
	010 Move X19, X4
	011 Move W21, W3
	012 Move X20, X2
	013 Move X22, X1
	014 Move X23, X0
	015 Compare X8, 0
	016 JumpIfNotEqual {25}
	017 Move X0, 0x1E56000
	018 Move X0, [X0+2808]
	019 Call 0x1C17CF4
	020 Move X8, [X19+56]
	021 Compare X8, 0
	022 JumpIfNotEqual {25}
	023 Move X0, X19
	024 Call 0x1C5D6E0
	025 Move X8, 0x1E56000
	026 Move X8, [X8+2808]
	027 Move [X31+200], X31
	028 Move [X31+208], X31
	029 Move X0, [X8]
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move X8, [X19+56]
	035 Move X0, X23
	036 Move X1, X22
	037 Move W2, W21
	038 Move X3, [X8]
	039 Call 0x22C8A6C, X0, X1
	040 Move X2, X0
	041 Move X3, X1
	042 Add X0, X31, 200
	043 Move X1, X2
	044 Move X2, X3
	045 Move X3, X31
	046 Call AnimationScriptPlayable..ctor, X0, X1
	047 Add X0, X31, 0
	048 Move W2, 196
	049 Move X1, X20
	050 Call 0x3EB2AC0
	051 Move X8, [X19+56]
	052 Add X0, X31, 216
	053 Add X1, X31, 0
	054 Move W2, 196
	055 Move X19, [X8+16]
	056 Call 0x3EB2AC0
	057 Add X0, X31, 200
	058 Add X1, X31, 216
	059 Move X2, X19
	060 Call 0x22C9988, X0, X1
	061 Move X0, [X31+200]
	062 Move X1, [X31+208]
	063 Move X20, [X31+464]
	064 Move X19, [X31+472]
	065 Move X22, [X31+448]
	066 Move X21, [X31+456]
	067 Move X30, [X31+432]
	068 Move X23, [X31+440]
	069 Move X29, [X31+416]
	070 Add X31, X31, 480
	071 Return X0

Method: UnityEngine.Playables.PlayableHandle CreateHandle(UnityEngine.Playables.PlayableGraph graph, System.Int32 inputCount)

Disassembly:
	0x022C8A6C LDP X20, X19, [X31 + 0x20]
	0x022C8A70 LDP X30, X21, [X31 + 0x10]
	0x022C8A74 ADD X31, X31, 0x30
	0x022C8A78 RET
	0x022C8A7C SUB X31, X31, 0x30
	0x022C8A80 STP X30, X21, [X31 + 0x10]
	0x022C8A84 STP X20, X19, [X31 + 0x20]
	0x022C8A88 LDR X8, [X2 + 0x38]
	0x022C8A8C MOV X20, X2
	0x022C8A90 MOV X19, X1
	0x022C8A94 MOV X21, X0
	0x022C8A98 CBNZ X8, 0x22C8AC4
	0x022C8A9C ADRP X0, 0x1E54000
	0x022C8AA0 LDR X0, [X0 + 0xAF8]
	0x022C8AA4 BL 0x1C16CF4
	0x022C8AA8 ADRP X0, 0x1E54000
	0x022C8AAC LDR X0, [X0 + 0x230]
	0x022C8AB0 BL 0x1C16CF4
	0x022C8AB4 LDR X8, [X20 + 0x38]
	0x022C8AB8 CBNZ X8, 0x22C8AC4
	0x022C8ABC MOV X0, X20
	0x022C8AC0 BL 0x1C5C6E0
	0x022C8AC4 ADRP X8, 0x1E54000
	0x022C8AC8 LDR X8, [X8 + 0xAF8]
	0x022C8ACC STP X31, X31, [X31]
	0x022C8AD0 LDR X0, [X8]
	0x022C8AD4 LDR W8, [X0 + 0xE0]
	0x022C8AD8 CBNZ W8, 0x22C8AE0
	0x022C8ADC BL 0x1C16DFC
	0x022C8AE0 LDR X8, [X20 + 0x38]
	0x022C8AE4 MOV X0, X21
	0x022C8AE8 LDR X1, [X8]
	0x022C8AEC BL 0x22C5780
	0x022C8AF0 MOV X0, X21
	0x022C8AF4 MOV X1, X31
	0x022C8AF8 BL 0x3BF7F20
	0x022C8AFC ADRP X9, 0x1E54000
	0x022C8B00 LDR X9, [X9 + 0x230]
	0x022C8B04 MOV X8, X0
	0x022C8B08 STP X8, X1, [X31]
	0x022C8B0C LDR X0, [X9]
	0x022C8B10 LDR W8, [X0 + 0xE0]
	0x022C8B14 CBNZ W8, 0x22C8B1C
	0x022C8B18 BL 0x1C16DFC
	0x022C8B1C ADD X0, X31, 0x0
	0x022C8B20 MOV X1, X31
	0x022C8B24 BL 0x3C5EC6C
	0x022C8B28 MOV X1, X31
	0x022C8B2C BL 0x33C6948
	0x022C8B30 LDR X8, [X20 + 0x38]
	0x022C8B34 MOV X20, X0
	0x022C8B38 LDR X21, [X8 + 0x10]
	0x022C8B3C LDR X8, [X21 + 0x38]
	0x022C8B40 CBNZ X8, 0x22C8B50
	0x022C8B44 MOV X0, X21
	0x022C8B48 BL 0x1C5C6E0
	0x022C8B4C LDR X8, [X21 + 0x38]
	0x022C8B50 LDR X2, [X8 + 0x8]
	0x022C8B54 MOV X0, X19
	0x022C8B58 MOV X1, X20
	0x022C8B5C BL 0x22A7450
	0x022C8B60 LDP X20, X19, [X31 + 0x20]
	0x022C8B64 LDP X30, X21, [X31 + 0x10]
	0x022C8B68 ADD X31, X31, 0x30
	0x022C8B6C RET
	0x022C8B70 SUB X31, X31, 0x30
	0x022C8B74 STP X30, X21, [X31 + 0x10]
	0x022C8B78 STP X20, X19, [X31 + 0x20]
	0x022C8B7C LDR X8, [X2 + 0x38]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X8, [X3+56]
	009 Move W19, W2
	010 Move X20, X1
	011 Move X21, X0
	012 Compare X8, 0
	013 JumpIfNotEqual {27}
	014 Move X0, 0x1E55000
	015 Move X0, [X0+2808]
	016 Move X22, X3
	017 Call 0x1C17CF4
	018 Move X0, 0x1E55000
	019 Move X0, [X0+560]
	020 Call 0x1C17CF4
	021 Move X8, [X22+56]
	022 Compare X8, 0
	023 JumpIfNotEqual {27}
	024 Move X0, X22
	025 Call 0x1C5D6E0
	026 Move X8, [X22+56]
	027 Move [X31], X31
	028 Move [X31+8], X31
	029 Move X0, [X8]
	030 Call 0x24B6C5C
	031 Move X23, 0x1E55000
	032 Move X23, [X23+560]
	033 Move X22, X0
	034 Move X8, [X23]
	035 Move W9, [X8+224]
	036 Compare W9, 0
	037 JumpIfNotEqual {40}
	038 Move X0, X8
	039 Call 0x1C17DFC
	040 Move X0, X31
	041 Call PlayableHandle.get_Null
	042 Move X9, 0x1E55000
	043 Move X9, [X9+2808]
	044 Move X8, X0
	045 Move [X31], X8
	046 Move [X31+8], X1
	047 Move X0, [X9]
	048 Move W8, [X0+224]
	049 Compare W8, 0
	050 JumpIfNotEqual {52}
	051 Call 0x1C17DFC
	052 Add X2, X31, 0
	053 Move X0, X21
	054 Move X1, X20
	055 Move X3, X22
	056 Move X4, X31
	057 Call AnimationScriptPlayable.CreateHandleInternal, X0, X1, X2
	058 Move X8, [X23]
	059 Move W20, W0
	060 Move W9, [X8+224]
	061 Compare W9, 0
	062 JumpIfEqual {73}
	063 Move TEMP, X20
	064 And TEMP, TEMP, 1
	065 Compare TEMP, 1
	066 JumpIfNotEqual {79}
	067 Add X0, X31, 0
	068 Move W1, W19
	069 Move X2, X31
	070 Call PlayableHandle.SetInputCount, X0, X1
	071 Move X0, [X31]
	072 Move X1, [X31+8]
	073 Move X0, X8
	074 Call 0x1C17DFC
	075 Move TEMP, X20
	076 And TEMP, TEMP, 1
	077 Compare TEMP, 1
	078 JumpIfEqual {67}
	079 Move X0, X31
	080 Call PlayableHandle.get_Null
	081 Move X20, [X31+48]
	082 Move X19, [X31+56]
	083 Move X22, [X31+32]
	084 Move X21, [X31+40]
	085 Move X30, [X31+16]
	086 Move X23, [X31+24]
	087 Add X31, X31, 64
	088 Return X0

Method: System.Void .ctor(UnityEngine.Playables.PlayableHandle handle)

Disassembly:
	0x03BF8E30 ADRP X0, 0xFFFFFFFFFCF08000
	0x03BF8E34 ADD X0, X0, 0x991
	0x03BF8E38 BL 0x1C16CB8
	0x03BF8E3C MOV X4, X0
	0x03BF8E40 STR X0, [X23 + 0x968]
	0x03BF8E44 MOV X0, X22
	0x03BF8E48 MOV X1, X21
	0x03BF8E4C MOV X2, X20
	0x03BF8E50 MOV X3, X19
	0x03BF8E54 LDP X20, X19, [X31 + 0x20]
	0x03BF8E58 LDP X22, X21, [X31 + 0x10]
	0x03BF8E5C LDP X30, X23, [X31], #0x30
	0x03BF8E60 BR X4
	0x03BF8E64 STP X30, X23, [X31 - 0x30]!
	0x03BF8E68 STP X22, X21, [X31 + 0x10]
	0x03BF8E6C STP X20, X19, [X31 + 0x20]
	0x03BF8E70 ADRP X23, 0x7EB000
	0x03BF8E74 LDR X4, [X23 + 0x968]
	0x03BF8E78 MOV X19, X3
	0x03BF8E7C MOV X20, X2
	0x03BF8E80 MOV X21, X1
	0x03BF8E84 MOV X22, X0
	0x03BF8E88 CBNZ X4, 0x3BF8EA0
	0x03BF8E8C ADRP X0, 0xFFFFFFFFFCF08000
	0x03BF8E90 ADD X0, X0, 0x991
	0x03BF8E94 BL 0x1C16CB8
	0x03BF8E98 MOV X4, X0
	0x03BF8E9C STR X0, [X23 + 0x968]
	0x03BF8EA0 MOV X0, X22
	0x03BF8EA4 MOV X1, X21
	0x03BF8EA8 MOV X2, X20
	0x03BF8EAC MOV X3, X19
	0x03BF8EB0 LDP X20, X19, [X31 + 0x20]
	0x03BF8EB4 LDP X22, X21, [X31 + 0x10]
	0x03BF8EB8 LDP X30, X23, [X31], #0x30
	0x03BF8EBC BR X4
	0x03BF8EC0 STR D14, [X31 - 0x60]!
	0x03BF8EC4 STP D13, D12, [X31 + 0x10]
	0x03BF8EC8 STP D11, D10, [X31 + 0x20]
	0x03BF8ECC STP D9, D8, [X31 + 0x30]
	0x03BF8ED0 STP X30, X21, [X31 + 0x40]
	0x03BF8ED4 STP X20, X19, [X31 + 0x50]
	0x03BF8ED8 MOV W19, W2
	0x03BF8EDC MOV V8.16B, V6.16B
	0x03BF8EE0 MOV V9.16B, V5.16B
	0x03BF8EE4 MOV V10.16B, V4.16B
	0x03BF8EE8 MOV V11.16B, V3.16B
	0x03BF8EEC MOV V12.16B, V2.16B
	0x03BF8EF0 MOV V13.16B, V1.16B
	0x03BF8EF4 MOV V14.16B, V0.16B
	0x03BF8EF8 MOV X20, X1
	0x03BF8EFC MOV X21, X0
	0x03BF8F00 BL 0x3BF8434
	0x03BF8F04 AND W2, W19, 0x1
	0x03BF8F08 MOV X0, X21
	0x03BF8F0C MOV X1, X20
	0x03BF8F10 MOV V1.16B, V13.16B
	0x03BF8F14 MOV V2.16B, V12.16B
	0x03BF8F18 MOV V3.16B, V11.16B
	0x03BF8F1C MOV V4.16B, V10.16B

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x7EC000
	007 Move [X31], X1
	008 Move [X31+8], X2
	009 Move X20, 0x525000
	010 Move W8, [X21+2278]
	011 Move X20, [X20+560]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x567000
	018 Move X0, [X0+2192]
	019 Call 0x1C17CF4
	020 Move X0, 0x525000
	021 Move X0, [X0+560]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+2278], W8
	025 Move X0, [X20]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Add X0, X31, 0
	031 Move X1, X31
	032 Call PlayableHandle.IsValid, X0
	033 Move TEMP, X0
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfNotEqual {51}
	037 Move X0, [X20]
	038 Move X20, 0x567000
	039 Move W8, [X0+224]
	040 Move X20, [X20+2192]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Move X1, [X20]
	045 Add X0, X31, 0
	046 Call PlayableHandle.IsPlayableOfType, X0
	047 Move TEMP, X0
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfNotEqual {59}
	051 Move V0, [X31]
	052 Move X30, [X31+16]
	053 Move X21, [X31+24]
	054 Move [X19], V0
	055 Move X20, [X31+32]
	056 Move X19, [X31+40]
	057 Add X31, X31, 48
	058 Return 
	059 Move X0, 0x504000
	060 Move X0, [X0+3080]
	061 Call 0x1C17D08
	062 Call 0x1C17F10
	063 Move X19, X0
	064 Move X0, 0x567000
	065 Move X0, [X0+2200]
	066 Call 0x1C17D08
	067 Move X1, X0
	068 Move X0, X19
	069 Move X2, X31
	070 Call InvalidCastException..ctor, X0, X1
	071 Move X0, 0x567000
	072 Move X0, [X0+2208]
	073 Call 0x1C17D08
	074 Move X1, X0
	075 Move X0, X19
	076 Call 0x1C17DEC

Method: UnityEngine.Playables.PlayableHandle GetHandle()

Disassembly:
	0x03BF8F20 MOV V5.16B, V9.16B
	0x03BF8F24 MOV V6.16B, V8.16B
	0x03BF8F28 LDP X20, X19, [X31 + 0x50]

ISIL:
	001 Move X8, [X0]
	002 Move X1, [X0+8]
	003 Move X0, X8
	004 Return X0

Method: System.Void CheckJobTypeValidity()

Disassembly:
	0x022C65D8 BL 0x338C698
	0x022C65DC MOV X21, X0
	0x022C65E0 BL 0x19903C0
	0x022C65E4 LDR X8, [X21]
	0x022C65E8 MOV X0, X21
	0x022C65EC LDR X9, [X8 + 0x2E8]
	0x022C65F0 LDR X1, [X8 + 0x2F0]
	0x022C65F4 BLR X9
	0x022C65F8 MOV X21, X0
	0x022C65FC MOV X0, X20
	0x022C6600 BL 0x19903C0
	0x022C6604 LDR X8, [X20]
	0x022C6608 MOV X0, X20
	0x022C660C LDR X9, [X8 + 0x2E8]
	0x022C6610 LDR X1, [X8 + 0x2F0]
	0x022C6614 BLR X9
	0x022C6618 MOV X20, X0
	0x022C661C ADRP X0, 0x1E56000
	0x022C6620 LDR X0, [X0 + 0xB00]
	0x022C6624 BL 0x1C16D08
	0x022C6628 MOV X1, X21
	0x022C662C MOV X2, X20
	0x022C6630 MOV X3, X31
	0x022C6634 BL 0x3227BD4
	0x022C6638 MOV X20, X0
	0x022C663C ADRP X0, 0x1E35000
	0x022C6640 LDR X0, [X0 + 0x578]
	0x022C6644 BL 0x1C16D08
	0x022C6648 BL 0x1C16F10
	0x022C664C MOV X1, X20
	0x022C6650 MOV X2, X31
	0x022C6654 MOV X21, X0
	0x022C6658 BL 0x3314A68
	0x022C665C MOV X0, X21
	0x022C6660 MOV X1, X19
	0x022C6664 BL 0x1C16DEC
	0x022C6668 SUB X31, X31, 0x30
	0x022C666C STP X30, X21, [X31 + 0x10]
	0x022C6670 STP X20, X19, [X31 + 0x20]
	0x022C6674 LDR X8, [X1 + 0x38]
	0x022C6678 MOV X19, X1
	0x022C667C MOV X20, X0
	0x022C6680 CBNZ X8, 0x22C66B8
	0x022C6684 ADRP X0, 0x1E56000
	0x022C6688 LDR X0, [X0 + 0xAF8]
	0x022C668C BL 0x1C16CF4
	0x022C6690 ADRP X0, 0x1E56000
	0x022C6694 LDR X0, [X0 + 0x230]
	0x022C6698 BL 0x1C16CF4
	0x022C669C ADRP X0, 0x1E2D000
	0x022C66A0 LDR X0, [X0 + 0x6C0]
	0x022C66A4 BL 0x1C16CF4
	0x022C66A8 LDR X8, [X19 + 0x38]
	0x022C66AC CBNZ X8, 0x22C66B8
	0x022C66B0 MOV X0, X19
	0x022C66B4 BL 0x1C5C6E0
	0x022C66B8 ADRP X8, 0x1E56000
	0x022C66BC LDR X8, [X8 + 0xAF8]
	0x022C66C0 LDR X0, [X8]
	0x022C66C4 LDR W8, [X0 + 0xE0]
	0x022C66C8 CBNZ W8, 0x22C66D0
	0x022C66CC BL 0x1C16DFC
	0x022C66D0 MOV X0, X20
	0x022C66D4 MOV X1, X31
	0x022C66D8 BL 0x3BF7F20
	0x022C66DC ADRP X9, 0x1E56000
	0x022C66E0 LDR X9, [X9 + 0x230]
	0x022C66E4 MOV X8, X0
	0x022C66E8 STP X8, X1, [X31]
	0x022C66EC LDR X0, [X9]
	0x022C66F0 LDR W8, [X0 + 0xE0]
	0x022C66F4 CBNZ W8, 0x22C66FC
	0x022C66F8 BL 0x1C16DFC
	0x022C66FC ADD X0, X31, 0x0
	0x022C6700 MOV X1, X31
	0x022C6704 BL 0x3C5E9E8
	0x022C6708 ADRP X8, 0x1E2D000
	0x022C670C LDR X8, [X8 + 0x6C0]
	0x022C6710 LDR X9, [X19 + 0x38]
	0x022C6714 MOV X20, X0
	0x022C6718 LDR X8, [X8]
	0x022C671C LDR X21, [X9]
	0x022C6720 LDR W10, [X8 + 0xE0]
	0x022C6724 CBNZ W10, 0x22C6730
	0x022C6728 MOV X0, X8
	0x022C672C BL 0x1C16DFC
	0x022C6730 MOV X0, X21
	0x022C6734 MOV X1, X31
	0x022C6738 BL 0x338C698
	0x022C673C MOV X1, X0
	0x022C6740 MOV X0, X20
	0x022C6744 MOV X2, X31
	0x022C6748 BL 0x3395F0C
	0x022C674C TBNZ X0, 0x0, 0x22C6760
	0x022C6750 LDP X20, X19, [X31 + 0x20]
	0x022C6754 LDP X30, X21, [X31 + 0x10]
	0x022C6758 ADD X31, X31, 0x30
	0x022C675C RET
	0x022C6760 LDR X8, [X19 + 0x38]
	0x022C6764 ADRP X0, 0x1E2D000
	0x022C6768 LDR X21, [X8]
	0x022C676C LDR X0, [X0 + 0x6C0]
	0x022C6770 BL 0x1C16D08
	0x022C6774 BL 0x19903D0
	0x022C6778 MOV X0, X21
	0x022C677C MOV X1, X31

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X1+56]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X8, 0
	010 JumpIfNotEqual {25}
	011 Move X0, 0x1E57000
	012 Move X0, [X0+2808]
	013 Call 0x1C17CF4
	014 Move X0, 0x1E57000
	015 Move X0, [X0+560]
	016 Call 0x1C17CF4
	017 Move X0, 0x1E2E000
	018 Move X0, [X0+1728]
	019 Call 0x1C17CF4
	020 Move X8, [X19+56]
	021 Compare X8, 0
	022 JumpIfNotEqual {25}
	023 Move X0, X19
	024 Call 0x1C5D6E0
	025 Move X8, 0x1E57000
	026 Move X8, [X8+2808]
	027 Move X0, [X8]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Move X0, X20
	033 Move X1, X31
	034 Call AnimationScriptPlayable.GetHandle, X0
	035 Move X9, 0x1E57000
	036 Move X9, [X9+560]
	037 Move X8, X0
	038 Move [X31], X8
	039 Move [X31+8], X1
	040 Move X0, [X9]
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Add X0, X31, 0
	046 Move X1, X31
	047 Call PlayableHandle.GetJobType, X0
	048 Move X8, 0x1E2E000
	049 Move X8, [X8+1728]
	050 Move X9, [X19+56]
	051 Move X20, X0
	052 Move X8, [X8]
	053 Move X21, [X9]
	054 Move W10, [X8+224]
	055 Compare W10, 0
	056 JumpIfNotEqual {59}
	057 Move X0, X8
	058 Call 0x1C17DFC
	059 Move X0, X21
	060 Move X1, X31
	061 Call Type.GetTypeFromHandle, X0
	062 Move X1, X0
	063 Move X0, X20
	064 Move X2, X31
	065 Call Type.op_Inequality, X0, X1
	066 Move TEMP, X0
	067 And TEMP, TEMP, 1
	068 Compare TEMP, 1
	069 JumpIfEqual {76}
	070 Move X20, [X31+32]
	071 Move X19, [X31+40]
	072 Move X30, [X31+16]
	073 Move X21, [X31+24]
	074 Add X31, X31, 48
	075 Return 
	076 Move X8, [X19+56]
	077 Move X0, 0x1E2E000
	078 Move X21, [X8]
	079 Move X0, [X0+1728]
	080 Call 0x1C17D08
	081 Call 0x19913D0
	082 Move X0, X21
	083 Move X1, X31
	084 Call Type.GetTypeFromHandle, X0
	085 Move X21, X0
	086 Call 0x19913C0
	087 Move X8, [X21]
	088 Move X0, X21
	089 Move X9, [X8+744]
	090 Move X1, [X8+752]
	091 NotImplemented "Instruction BLR not yet implemented."
	092 Move X21, X0
	093 Move X0, X20
	094 Call 0x19913C0
	095 Move X8, [X20]
	096 Move X0, X20
	097 Move X9, [X8+744]
	098 Move X1, [X8+752]
	099 NotImplemented "Instruction BLR not yet implemented."
	100 Move X20, X0
	101 Move X0, 0x1E57000
	102 Move X0, [X0+2816]
	103 Call 0x1C17D08
	104 Move X1, X21
	105 Move X2, X20
	106 Move X3, X31
	107 Call String.Format, X0, X1, X2
	108 Move X20, X0
	109 Move X0, 0x1E36000
	110 Move X0, [X0+1400]
	111 Call 0x1C17D08
	112 Call 0x1C17F10
	113 Move X1, X20
	114 Move X2, X31
	115 Move X21, X0
	116 Call ArgumentException..ctor, X0, X1
	117 Move X0, X21
	118 Move X1, X19
	119 Call 0x1C17DEC

Method: System.Void SetJobData(T jobData)

Disassembly:
	0x022C9988 BL 0x1C16D08
	0x022C998C MOV X1, X0
	0x022C9990 MOV X0, X20
	0x022C9994 MOV X2, X31
	0x022C9998 BL 0x330E100
	0x022C999C MOV X0, X20
	0x022C99A0 MOV X1, X19
	0x022C99A4 BL 0x1C16DEC
	0x022C99A8 STR X30, [X31 - 0x20]!
	0x022C99AC STP X20, X19, [X31 + 0x10]
	0x022C99B0 LDR X8, [X1 + 0x38]
	0x022C99B4 MOV X19, X1
	0x022C99B8 MOV X20, X0
	0x022C99BC CBNZ X8, 0x22C99C8
	0x022C99C0 MOV X0, X19
	0x022C99C4 BL 0x1C5C6E0
	0x022C99C8 CBZ X20, 0x22C9A0C
	0x022C99CC LDR X8, [X19 + 0x38]
	0x022C99D0 LDR X0, [X8 + 0x8]
	0x022C99D4 LDRB W8, [X0 + 0x135]
	0x022C99D8 TBNZ X8, 0x0, 0x22C99E0
	0x022C99DC BL 0x1C5C684
	0x022C99E0 BL 0x1C16F10
	0x022C99E4 LDR X8, [X19 + 0x38]
	0x022C99E8 MOV X1, X20
	0x022C99EC MOV X19, X0
	0x022C99F0 LDR X2, [X8 + 0x10]
	0x022C99F4 LDR X8, [X2]
	0x022C99F8 BLR X8
	0x022C99FC MOV X0, X19
	0x022C9A00 LDP X20, X19, [X31 + 0x10]
	0x022C9A04 LDR X30, [X31], #0x20
	0x022C9A08 RET
	0x022C9A0C ADRP X0, 0x1E2F000
	0x022C9A10 LDR X0, [X0 + 0x528]
	0x022C9A14 BL 0x1C16D08
	0x022C9A18 BL 0x1C16F10
	0x022C9A1C MOV X20, X0
	0x022C9A20 ADRP X0, 0x1E52000
	0x022C9A24 LDR X0, [X0 + 0x640]
	0x022C9A28 BL 0x1C16D08
	0x022C9A2C MOV X1, X0
	0x022C9A30 MOV X0, X20
	0x022C9A34 MOV X2, X31
	0x022C9A38 BL 0x330E100
	0x022C9A3C MOV X0, X20
	0x022C9A40 MOV X1, X19
	0x022C9A44 BL 0x1C16DEC
	0x022C9A48 STP X30, X21, [X31 - 0x20]!
	0x022C9A4C STP X20, X19, [X31 + 0x10]
	0x022C9A50 LDR X8, [X2 + 0x38]
	0x022C9A54 MOV X19, X2
	0x022C9A58 MOV X20, X1
	0x022C9A5C MOV X21, X0
	0x022C9A60 CBNZ X8, 0x22C9A6C
	0x022C9A64 MOV X0, X19
	0x022C9A68 BL 0x1C5C6E0
	0x022C9A6C CBZ X21, 0x22C9A98
	0x022C9A70 LDR X8, [X19 + 0x38]
	0x022C9A74 LDR W2, [X21 + 0x18]
	0x022C9A78 MOV X3, X20

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X2+56]
	007 Move X20, X2
	008 Move X19, X1
	009 Move X21, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {23}
	012 Move X0, 0x1E54000
	013 Move X0, [X0+2808]
	014 Call 0x1C17CF4
	015 Move X0, 0x1E54000
	016 Move X0, [X0+560]
	017 Call 0x1C17CF4
	018 Move X8, [X20+56]
	019 Compare X8, 0
	020 JumpIfNotEqual {23}
	021 Move X0, X20
	022 Call 0x1C5D6E0
	023 Move X8, 0x1E54000
	024 Move X8, [X8+2808]
	025 Move [X31], X31
	026 Move [X31+8], X31
	027 Move X0, [X8]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Move X8, [X20+56]
	033 Move X0, X21
	034 Move X1, [X8]
	035 Call 0x22C65D8, X0
	036 Move X0, X21
	037 Move X1, X31
	038 Call AnimationScriptPlayable.GetHandle, X0
	039 Move X9, 0x1E54000
	040 Move X9, [X9+560]
	041 Move X8, X0
	042 Move [X31], X8
	043 Move [X31+8], X1
	044 Move X0, [X9]
	045 Move W8, [X0+224]
	046 Compare W8, 0
	047 JumpIfNotEqual {49}
	048 Call 0x1C17DFC
	049 Add X0, X31, 0
	050 Move X1, X31
	051 Call PlayableHandle.GetJobData, X0
	052 Move X1, X31
	053 Call IntPtr.op_Explicit, X0
	054 Move X8, [X20+56]
	055 Move X20, X0
	056 Move X21, [X8+16]
	057 Move X8, [X21+56]
	058 Compare X8, 0
	059 JumpIfNotEqual {63}
	060 Move X0, X21
	061 Call 0x1C5D6E0
	062 Move X8, [X21+56]
	063 Move X2, [X8+8]
	064 Move X0, X19
	065 Move X1, X20
	066 Call 0x22A8430, X0, X1
	067 Move X20, [X31+32]
	068 Move X19, [X31+40]
	069 Move X30, [X31+16]
	070 Move X21, [X31+24]
	071 Add X31, X31, 48
	072 Return 

Method: UnityEngine.Playables.Playable op_Implicit(UnityEngine.Animations.AnimationScriptPlayable playable)

Disassembly:
	0x03BF8F2C LDP X30, X21, [X31 + 0x40]
	0x03BF8F30 LDP D9, D8, [X31 + 0x30]
	0x03BF8F34 LDP D11, D10, [X31 + 0x20]
	0x03BF8F38 LDP D13, D12, [X31 + 0x10]
	0x03BF8F3C MOV V0.16B, V14.16B
	0x03BF8F40 LDR V14, [X31], #0x60
	0x03BF8F44 B 0x3BF8F48
	0x03BF8F48 SUB X31, X31, 0x50
	0x03BF8F4C STR X30, [X31 + 0x20]
	0x03BF8F50 STP X22, X21, [X31 + 0x30]
	0x03BF8F54 STP X20, X19, [X31 + 0x40]
	0x03BF8F58 ADRP X22, 0x7EB000
	0x03BF8F5C LDR X8, [X22 + 0x970]
	0x03BF8F60 MOV W19, W2
	0x03BF8F64 MOV X20, X1
	0x03BF8F68 MOV X21, X0
	0x03BF8F6C STP S0, S1, [X31 + 0x10]
	0x03BF8F70 STR S2, [X31 + 0x18]
	0x03BF8F74 STP S3, S4, [X31]
	0x03BF8F78 STP S5, S6, [X31 + 0x8]
	0x03BF8F7C CBNZ X8, 0x3BF8F94
	0x03BF8F80 ADRP X0, 0xFFFFFFFFFCF16000
	0x03BF8F84 ADD X0, X0, 0xC05
	0x03BF8F88 BL 0x1C16CB8
	0x03BF8F8C MOV X8, X0
	0x03BF8F90 STR X0, [X22 + 0x970]
	0x03BF8F94 AND W4, W19, 0x1
	0x03BF8F98 ADD X2, X31, 0x10
	0x03BF8F9C ADD X3, X31, 0x0
	0x03BF8FA0 MOV X0, X21
	0x03BF8FA4 MOV X1, X20
	0x03BF8FA8 BLR X8

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+32], X22
	004 Move [X31+40], X21
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move X22, 0x7EC000
	008 Move X21, 0x525000
	009 Move W8, [X22+2279]
	010 Move X21, [X21+2808]
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x525000
	018 Move X0, [X0+2808]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X22+2279], W8
	022 Move X0, [X21]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Add X0, X31, 0
	028 Move X1, X20
	029 Move X2, X19
	030 Move X3, X31
	031 Move [X31], X31
	032 Move [X31+8], X31
	033 Call Playable..ctor, X0, X1
	034 Move X0, [X31]
	035 Move X1, [X31+8]
	036 Move X20, [X31+48]
	037 Move X19, [X31+56]
	038 Move X22, [X31+32]
	039 Move X21, [X31+40]
	040 Move X30, [X31+16]
	041 Add X31, X31, 64
	042 Return X0

Method: System.Boolean Equals(UnityEngine.Animations.AnimationScriptPlayable other)

Disassembly:
	0x03BF8FAC LDP X20, X19, [X31 + 0x40]
	0x03BF8FB0 LDP X22, X21, [X31 + 0x30]
	0x03BF8FB4 LDR X30, [X31 + 0x20]
	0x03BF8FB8 ADD X31, X31, 0x50
	0x03BF8FBC RET
	0x03BF8FC0 STP X30, X21, [X31 - 0x20]!
	0x03BF8FC4 STP X20, X19, [X31 + 0x10]
	0x03BF8FC8 ADRP X21, 0x7EB000
	0x03BF8FCC LDR X2, [X21 + 0x900]
	0x03BF8FD0 MOV X19, X1
	0x03BF8FD4 MOV X20, X0
	0x03BF8FD8 CBNZ X2, 0x3BF8FF0
	0x03BF8FDC ADRP X0, 0xFFFFFFFFFCEFC000
	0x03BF8FE0 ADD X0, X0, 0xE23
	0x03BF8FE4 BL 0x1C16CB8
	0x03BF8FE8 MOV X2, X0
	0x03BF8FEC STR X0, [X21 + 0x900]
	0x03BF8FF0 MOV X0, X20
	0x03BF8FF4 MOV X1, X19
	0x03BF8FF8 LDP X20, X19, [X31 + 0x10]
	0x03BF8FFC LDP X30, X21, [X31], #0x20
	0x03BF9000 BR X2
	0x03BF9004 STR X30, [X31 - 0x30]!
	0x03BF9008 STP X22, X21, [X31 + 0x10]
	0x03BF900C STP X20, X19, [X31 + 0x20]
	0x03BF9010 ADRP X22, 0x7EA000
	0x03BF9014 LDR X3, [X22 + 0x908]
	0x03BF9018 MOV X19, X2
	0x03BF901C MOV X20, X1
	0x03BF9020 MOV X21, X0
	0x03BF9024 CBNZ X3, 0x3BF903C
	0x03BF9028 ADRP X0, 0xFFFFFFFFFCF05000
	0x03BF902C ADD X0, X0, 0x87F
	0x03BF9030 BL 0x1C16CB8
	0x03BF9034 MOV X3, X0
	0x03BF9038 STR X0, [X22 + 0x908]
	0x03BF903C MOV X0, X21
	0x03BF9040 MOV X1, X20
	0x03BF9044 MOV X2, X19

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x7EC000
	008 Move X22, 0x525000
	009 Move W8, [X23+2280]
	010 Move X22, [X22+2808]
	011 Move X19, X2
	012 Move X20, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x525000
	019 Move X0, [X0+2808]
	020 Call 0x1C17CF4
	021 Move X0, 0x525000
	022 Move X0, [X0+560]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X23+2280], W8
	026 Move X0, [X22]
	027 Move X22, 0x525000
	028 Move W8, [X0+224]
	029 Call 0x3EB29CC
	030 Return X0
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move X0, [X22]
	035 Move X22, [X21]
	036 Move X21, [X21+8]
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {41}
	040 Call 0x1C17DFC
	041 Move X0, X22
	042 Move X1, X21
	043 Move X2, X20
	044 Move X3, X19
	045 Move X20, [X31+32]
	046 Move X19, [X31+40]
	047 Move X22, [X31+16]
	048 Move X21, [X31+24]
	049 Move X4, X31
	050 Move X30, [X31+48]
	051 Move X23, [X31+56]
	052 Call PlayableHandle.op_Equality, X0, X1
	053 Return X0

Method: System.Boolean CreateHandleInternal(UnityEngine.Playables.PlayableGraph graph, ref UnityEngine.Playables.PlayableHandle handle, System.IntPtr jobReflectionData)

Disassembly:
	0x03BF9048 LDP X20, X19, [X31 + 0x20]
	0x03BF904C LDP X22, X21, [X31 + 0x10]
	0x03BF9050 LDR X30, [X31], #0x30
	0x03BF9054 BR X3
	0x03BF9058 STR X30, [X31 - 0x30]!
	0x03BF905C STP X22, X21, [X31 + 0x10]
	0x03BF9060 STP X20, X19, [X31 + 0x20]
	0x03BF9064 ADRP X22, 0x7EA000
	0x03BF9068 LDR X3, [X22 + 0x910]
	0x03BF906C MOV X19, X2
	0x03BF9070 MOV X20, X1
	0x03BF9074 MOV X21, X0
	0x03BF9078 CBNZ X3, 0x3BF9090
	0x03BF907C ADRP X0, 0xFFFFFFFFFCF05000
	0x03BF9080 ADD X0, X0, 0x936
	0x03BF9084 BL 0x1C16CB8
	0x03BF9088 MOV X3, X0
	0x03BF908C STR X0, [X22 + 0x910]
	0x03BF9090 MOV X0, X21
	0x03BF9094 MOV X1, X20
	0x03BF9098 MOV X2, X19
	0x03BF909C LDP X20, X19, [X31 + 0x20]
	0x03BF90A0 LDP X22, X21, [X31 + 0x10]
	0x03BF90A4 LDR X30, [X31], #0x30
	0x03BF90A8 BR X3
	0x03BF90AC STR X30, [X31 - 0x30]!
	0x03BF90B0 STP X22, X21, [X31 + 0x10]
	0x03BF90B4 STP X20, X19, [X31 + 0x20]
	0x03BF90B8 ADRP X22, 0x7EA000
	0x03BF90BC LDR X3, [X22 + 0x918]
	0x03BF90C0 MOV X19, X2
	0x03BF90C4 MOV X20, X1
	0x03BF90C8 MOV X21, X0
	0x03BF90CC CBNZ X3, 0x3BF90E4
	0x03BF90D0 ADRP X0, 0xFFFFFFFFFCF1F000
	0x03BF90D4 ADD X0, X0, 0x38C
	0x03BF90D8 BL 0x1C16CB8
	0x03BF90DC MOV X3, X0
	0x03BF90E0 STR X0, [X22 + 0x918]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+8], X1
	003 Move [X31+16], X30
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x7EB000
	009 Move [X31], X0
	010 Move X22, 0x524000
	011 Move W8, [X21+2281]
	012 Move X22, [X22+2808]
	013 Move X19, X3
	014 Move X20, X2
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0x524000
	020 Move X0, [X0+2808]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+2281], W8
	024 Move X0, [X22]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X21, 0x7EB000
	030 Move X8, [X21+2288]
	031 Compare X8, 0
	032 JumpIfNotEqual {38}
	033 Move X0, -51240960
	034 Add X0, X0, 1547
	035 Call 0x1C17CB8
	036 Move X8, X0
	037 Move [X21+2288], X0
	038 Add X0, X31, 0
	039 Move X1, X20
	040 Move X2, X19
	041 NotImplemented "Instruction BLR not yet implemented."
	042 Move X20, [X31+48]
	043 Move X19, [X31+56]
	044 Move X22, [X31+32]
	045 Move X21, [X31+40]
	046 Move X30, [X31+16]
	047 And W0, W0, 1
	048 Add X31, X31, 64
	049 Return X0

Method: System.Void .cctor()

Disassembly:
	0x03BF9138 MOV X0, X21
	0x03BF913C MOV X1, X20
	0x03BF9140 MOV X2, X19
	0x03BF9144 LDP X20, X19, [X31 + 0x20]
	0x03BF9148 LDP X22, X21, [X31 + 0x10]
	0x03BF914C LDR X30, [X31], #0x30
	0x03BF9150 BR X3
	0x03BF9154 STR X30, [X31 - 0x30]!
	0x03BF9158 STP X22, X21, [X31 + 0x10]
	0x03BF915C STP X20, X19, [X31 + 0x20]
	0x03BF9160 ADRP X22, 0x7EA000
	0x03BF9164 LDR X3, [X22 + 0x928]
	0x03BF9168 MOV X19, X2
	0x03BF916C MOV X20, X1
	0x03BF9170 MOV X21, X0
	0x03BF9174 CBNZ X3, 0x3BF918C
	0x03BF9178 ADRP X0, 0xFFFFFFFFFCF1B000
	0x03BF917C ADD X0, X0, 0x43A
	0x03BF9180 BL 0x1C16CB8
	0x03BF9184 MOV X3, X0
	0x03BF9188 STR X0, [X22 + 0x928]
	0x03BF918C MOV X0, X21
	0x03BF9190 MOV X1, X20
	0x03BF9194 MOV X2, X19
	0x03BF9198 LDP X20, X19, [X31 + 0x20]
	0x03BF919C LDP X22, X21, [X31 + 0x10]
	0x03BF91A0 LDR X30, [X31], #0x30
	0x03BF91A4 BR X3
	0x03BF91A8 STR X30, [X31 - 0x30]!
	0x03BF91AC STP X22, X21, [X31 + 0x10]
	0x03BF91B0 STP X20, X19, [X31 + 0x20]
	0x03BF91B4 ADRP X22, 0x7EA000
	0x03BF91B8 LDR X3, [X22 + 0x930]
	0x03BF91BC MOV X19, X2
	0x03BF91C0 MOV X20, X1
	0x03BF91C4 MOV X21, X0
	0x03BF91C8 CBNZ X3, 0x3BF91E0
	0x03BF91CC ADRP X0, 0xFFFFFFFFFCF2B000
	0x03BF91D0 ADD X0, X0, 0x79F

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+32], X20
	004 Move [X31+40], X19
	005 Move X20, 0x7EB000
	006 Move X19, 0x524000
	007 Move W8, [X20+2282]
	008 Move X19, [X19+560]
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x524000
	014 Move X0, [X0+2808]
	015 Call 0x1C17CF4
	016 Move X0, 0x524000
	017 Move X0, [X0+560]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+2282], W8
	021 Move X0, [X19]
	022 Move X19, 0x524000
	023 Move W8, [X0+224]
	024 Move X19, [X19+2808]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, X31
	029 Call PlayableHandle.get_Null
	030 Move X2, X0
	031 Move X3, X1
	032 Add X0, X31, 0
	033 Move X1, X2
	034 Move X2, X3
	035 Move [X31], X31
	036 Move [X31+8], X31
	037 Call AnimationScriptPlayable..ctor, X0, X1
	038 Move X8, [X19]
	039 Move V0, [X31]
	040 Move X20, [X31+32]
	041 Move X19, [X31+40]
	042 Move X30, [X31+16]
	043 Move X8, [X8+184]
	044 Move [X8], V0
	045 Add X31, X31, 48
	046 Return 

Method: System.Boolean CreateHandleInternal_Injected(ref UnityEngine.Playables.PlayableGraph graph, ref UnityEngine.Playables.PlayableHandle handle, System.IntPtr jobReflectionData)

Disassembly:
	0x03BF90E4 MOV X0, X21
	0x03BF90E8 MOV X1, X20
	0x03BF90EC MOV X2, X19
	0x03BF90F0 LDP X20, X19, [X31 + 0x20]
	0x03BF90F4 LDP X22, X21, [X31 + 0x10]
	0x03BF90F8 LDR X30, [X31], #0x30
	0x03BF90FC BR X3
	0x03BF9100 STR X30, [X31 - 0x30]!
	0x03BF9104 STP X22, X21, [X31 + 0x10]
	0x03BF9108 STP X20, X19, [X31 + 0x20]
	0x03BF910C ADRP X22, 0x7EA000
	0x03BF9110 LDR X3, [X22 + 0x920]
	0x03BF9114 MOV X19, X2
	0x03BF9118 MOV X20, X1
	0x03BF911C MOV X21, X0
	0x03BF9120 CBNZ X3, 0x3BF9138
	0x03BF9124 ADRP X0, 0xFFFFFFFFFCF19000
	0x03BF9128 ADD X0, X0, 0x7BB
	0x03BF912C BL 0x1C16CB8
	0x03BF9130 MOV X3, X0
	0x03BF9134 STR X0, [X22 + 0x920]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x7EB000
	007 Move X3, [X22+2288]
	008 Move X19, X2
	009 Move X20, X1
	010 Move X21, X0
	011 Compare X3, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51240960
	014 Add X0, X0, 1547
	015 Call 0x1C17CB8
	016 Move X3, X0
	017 Move [X22+2288], X0
	018 Move X0, X21
	019 Move X1, X20
	020 Move X2, X19
	021 Move X20, [X31+32]
	022 Move X19, [X31+40]
	023 Move X22, [X31+16]
	024 Move X21, [X31+24]
	025 Move X30, [X31+48]
	026 CallNoReturn X3

