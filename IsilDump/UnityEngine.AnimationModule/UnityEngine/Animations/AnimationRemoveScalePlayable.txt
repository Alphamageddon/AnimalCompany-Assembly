Type: UnityEngine.Animations.AnimationRemoveScalePlayable

Method: System.Void .ctor(UnityEngine.Playables.PlayableHandle handle)

Disassembly:
	0x03BF8BE4 ADD X2, X31, 0x0
	0x03BF8BE8 MOV X0, X20
	0x03BF8BEC MOV X1, X19
	0x03BF8BF0 BLR X8
	0x03BF8BF4 LDP X20, X19, [X31 + 0x20]
	0x03BF8BF8 LDP X30, X21, [X31 + 0x10]
	0x03BF8BFC ADD X31, X31, 0x30
	0x03BF8C00 RET
	0x03BF8C04 STR X30, [X31 - 0x40]!
	0x03BF8C08 STP X24, X23, [X31 + 0x10]
	0x03BF8C0C STP X22, X21, [X31 + 0x20]
	0x03BF8C10 STP X20, X19, [X31 + 0x30]
	0x03BF8C14 MOV X19, X4
	0x03BF8C18 MOV X20, X3
	0x03BF8C1C MOV X21, X2
	0x03BF8C20 MOV X22, X1
	0x03BF8C24 MOV X23, X0
	0x03BF8C28 BL 0x3BF8434
	0x03BF8C2C ADRP X24, 0x7EB000
	0x03BF8C30 LDR X5, [X24 + 0x958]
	0x03BF8C34 CBNZ X5, 0x3BF8C4C
	0x03BF8C38 ADRP X0, 0xFFFFFFFFFCF16000
	0x03BF8C3C ADD X0, X0, 0xB21
	0x03BF8C40 BL 0x1C16CB8
	0x03BF8C44 MOV X5, X0
	0x03BF8C48 STR X0, [X24 + 0x958]
	0x03BF8C4C MOV X0, X23
	0x03BF8C50 MOV X1, X22
	0x03BF8C54 MOV X2, X21
	0x03BF8C58 MOV X3, X20
	0x03BF8C5C MOV X4, X19
	0x03BF8C60 LDP X20, X19, [X31 + 0x30]
	0x03BF8C64 LDP X22, X21, [X31 + 0x20]
	0x03BF8C68 LDP X24, X23, [X31 + 0x10]
	0x03BF8C6C LDR X30, [X31], #0x40
	0x03BF8C70 BR X5
	0x03BF8C74 STR X30, [X31 - 0x40]!
	0x03BF8C78 STP X24, X23, [X31 + 0x10]
	0x03BF8C7C STP X22, X21, [X31 + 0x20]
	0x03BF8C80 STP X20, X19, [X31 + 0x30]
	0x03BF8C84 ADRP X24, 0x7EB000
	0x03BF8C88 LDR X5, [X24 + 0x958]
	0x03BF8C8C MOV X19, X4
	0x03BF8C90 MOV X20, X3
	0x03BF8C94 MOV X21, X2
	0x03BF8C98 MOV X22, X1
	0x03BF8C9C MOV X23, X0
	0x03BF8CA0 CBNZ X5, 0x3BF8CB8
	0x03BF8CA4 ADRP X0, 0xFFFFFFFFFCF16000
	0x03BF8CA8 ADD X0, X0, 0xB21
	0x03BF8CAC BL 0x1C16CB8
	0x03BF8CB0 MOV X5, X0
	0x03BF8CB4 STR X0, [X24 + 0x958]
	0x03BF8CB8 MOV X0, X23
	0x03BF8CBC MOV X1, X22
	0x03BF8CC0 MOV X2, X21
	0x03BF8CC4 MOV X3, X20
	0x03BF8CC8 MOV X4, X19
	0x03BF8CCC LDP X20, X19, [X31 + 0x30]
	0x03BF8CD0 LDP X22, X21, [X31 + 0x20]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x7EC000
	007 Move [X31], X1
	008 Move [X31+8], X2
	009 Move X20, 0x525000
	010 Move W8, [X21+2275]
	011 Move X20, [X20+560]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x567000
	018 Move X0, [X0+2160]
	019 Call 0x1C17CF4
	020 Move X0, 0x525000
	021 Move X0, [X0+560]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+2275], W8
	025 Move X0, [X20]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Add X0, X31, 0
	031 Move X1, X31
	032 Call PlayableHandle.IsValid, X0
	033 Move TEMP, X0
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfNotEqual {51}
	037 Move X0, [X20]
	038 Move X20, 0x567000
	039 Move W8, [X0+224]
	040 Move X20, [X20+2160]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Move X1, [X20]
	045 Add X0, X31, 0
	046 Call PlayableHandle.IsPlayableOfType, X0
	047 Move TEMP, X0
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfNotEqual {59}
	051 Move V0, [X31]
	052 Move X30, [X31+16]
	053 Move X21, [X31+24]
	054 Move [X19], V0
	055 Move X20, [X31+32]
	056 Move X19, [X31+40]
	057 Add X31, X31, 48
	058 Return 
	059 Move X0, 0x504000
	060 Move X0, [X0+3080]
	061 Call 0x1C17D08
	062 Call 0x1C17F10
	063 Move X19, X0
	064 Move X0, 0x567000
	065 Move X0, [X0+2168]
	066 Call 0x1C17D08
	067 Move X1, X0
	068 Move X0, X19
	069 Move X2, X31
	070 Call InvalidCastException..ctor, X0, X1
	071 Move X0, 0x567000
	072 Move X0, [X0+2176]
	073 Call 0x1C17D08
	074 Move X1, X0
	075 Move X0, X19
	076 Call 0x1C17DEC

Method: UnityEngine.Playables.PlayableHandle GetHandle()

Disassembly:
	0x03BF8CD4 LDP X24, X23, [X31 + 0x10]
	0x03BF8CD8 LDR X30, [X31], #0x40
	0x03BF8CDC BR X5

ISIL:
	001 Move X8, [X0]
	002 Move X1, [X0+8]
	003 Move X0, X8
	004 Return X0

Method: System.Boolean Equals(UnityEngine.Animations.AnimationRemoveScalePlayable other)

Disassembly:
	0x03BF8CE0 SUB X31, X31, 0x70
	0x03BF8CE4 STP D15, D14, [X31 + 0x10]
	0x03BF8CE8 STP D13, D12, [X31 + 0x20]
	0x03BF8CEC STP D11, D10, [X31 + 0x30]
	0x03BF8CF0 STP D9, D8, [X31 + 0x40]
	0x03BF8CF4 STP X30, X21, [X31 + 0x50]
	0x03BF8CF8 STP X20, X19, [X31 + 0x60]
	0x03BF8CFC LDP S9, S15, [X31 + 0x74]
	0x03BF8D00 LDR V8, [X31 + 0x70]
	0x03BF8D04 MOV W19, W2
	0x03BF8D08 STP S5, S6, [X31 + 0x8]
	0x03BF8D0C MOV V10.16B, V4.16B
	0x03BF8D10 MOV V11.16B, V3.16B
	0x03BF8D14 MOV V12.16B, V2.16B
	0x03BF8D18 MOV V13.16B, V1.16B
	0x03BF8D1C MOV V14.16B, V0.16B
	0x03BF8D20 MOV X20, X1
	0x03BF8D24 MOV X21, X0
	0x03BF8D28 BL 0x3BF8434
	0x03BF8D2C STP S9, S15, [X31 + 0x74]
	0x03BF8D30 AND W2, W19, 0x1
	0x03BF8D34 STR S8, [X31 + 0x70]
	0x03BF8D38 MOV X0, X21
	0x03BF8D3C MOV X1, X20
	0x03BF8D40 MOV V0.16B, V14.16B
	0x03BF8D44 MOV V1.16B, V13.16B
	0x03BF8D48 MOV V2.16B, V12.16B
	0x03BF8D4C MOV V3.16B, V11.16B
	0x03BF8D50 MOV V4.16B, V10.16B
	0x03BF8D54 LDP S5, S6, [X31 + 0x8]
	0x03BF8D58 LDP X20, X19, [X31 + 0x60]
	0x03BF8D5C LDP X30, X21, [X31 + 0x50]
	0x03BF8D60 LDP D9, D8, [X31 + 0x40]
	0x03BF8D64 LDP D11, D10, [X31 + 0x30]
	0x03BF8D68 LDP D13, D12, [X31 + 0x20]
	0x03BF8D6C LDP D15, D14, [X31 + 0x10]
	0x03BF8D70 ADD X31, X31, 0x70
	0x03BF8D74 B 0x3BF8D78
	0x03BF8D78 SUB X31, X31, 0x60
	0x03BF8D7C STR X30, [X31 + 0x30]
	0x03BF8D80 STP X22, X21, [X31 + 0x40]
	0x03BF8D84 STP X20, X19, [X31 + 0x50]
	0x03BF8D88 LDR X8, [X31 + 0x60]
	0x03BF8D8C ADRP X22, 0x7EB000
	0x03BF8D90 LDR V7, [X31 + 0x68]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+56], X23
	004 Move [X31+64], X22
	005 Move [X31+72], X21
	006 Move [X31+80], X20
	007 Move [X31+88], X19
	008 Move X23, 0x7EC000
	009 Move X22, 0x567000
	010 Move W8, [X23+2276]
	011 Move X22, [X22+2184]
	012 Move X20, X2
	013 Move X21, X1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0x567000
	020 Move X0, [X0+2184]
	021 Call 0x1C17CF4
	022 Move X0, 0x525000
	023 Move X0, [X0+560]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X23+2276], W8
	027 Move X0, [X22]
	028 Move X23, 0x525000
	029 Move W8, [X0+224]
	030 Move X23, [X23+560]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move X0, [X23]
	035 Add X1, X31, 32
	036 Move [X31+32], X21
	037 Move [X31+40], X20
	038 Call 0x1C17E04
	039 Move X8, [X22]
	040 Move TEMP, 0
	041 Not TEMP
	042 Move X9, TEMP
	043 Move X1, X0
	044 Add X0, X31, 0
	045 Move [X31], X8
	046 Move [X31+8], X9
	047 Move V0, [X19]
	048 Move X2, X31
	049 Move [X31+1], V0
	050 Call ValueType.Equals, X0, X1
	051 Move X20, [X31+80]
	052 Move X19, [X31+88]
	053 Move X22, [X31+64]
	054 Move X21, [X31+72]
	055 Move X30, [X31+48]
	056 Move X23, [X31+56]
	057 And W0, W0, 1
	058 Add X31, X31, 96
	059 Return X0

Method: System.Void .cctor()

Disassembly:
	0x03BF8D94 MOV W20, W2
	0x03BF8D98 STR X8, [X31]
	0x03BF8D9C LDR X8, [X22 + 0x960]
	0x03BF8DA0 MOV X19, X1
	0x03BF8DA4 MOV X21, X0
	0x03BF8DA8 STP S0, S1, [X31 + 0x20]
	0x03BF8DAC STR S2, [X31 + 0x28]
	0x03BF8DB0 STP S3, S4, [X31 + 0x10]
	0x03BF8DB4 STP S5, S6, [X31 + 0x18]
	0x03BF8DB8 STR S7, [X31 + 0x8]
	0x03BF8DBC CBNZ X8, 0x3BF8DD4
	0x03BF8DC0 ADRP X0, 0xFFFFFFFFFCF24000
	0x03BF8DC4 ADD X0, X0, 0x82A
	0x03BF8DC8 BL 0x1C16CB8
	0x03BF8DCC MOV X8, X0
	0x03BF8DD0 STR X0, [X22 + 0x960]
	0x03BF8DD4 AND W5, W20, 0x1
	0x03BF8DD8 ADD X2, X31, 0x20
	0x03BF8DDC ADD X3, X31, 0x10
	0x03BF8DE0 ADD X4, X31, 0x0
	0x03BF8DE4 MOV X0, X21
	0x03BF8DE8 MOV X1, X19
	0x03BF8DEC BLR X8
	0x03BF8DF0 LDP X20, X19, [X31 + 0x50]
	0x03BF8DF4 LDP X22, X21, [X31 + 0x40]
	0x03BF8DF8 LDR X30, [X31 + 0x30]
	0x03BF8DFC ADD X31, X31, 0x60
	0x03BF8E00 RET
	0x03BF8E04 STP X30, X23, [X31 - 0x30]!
	0x03BF8E08 STP X22, X21, [X31 + 0x10]
	0x03BF8E0C STP X20, X19, [X31 + 0x20]
	0x03BF8E10 MOV X19, X3
	0x03BF8E14 MOV X20, X2
	0x03BF8E18 MOV X21, X1
	0x03BF8E1C MOV X22, X0
	0x03BF8E20 BL 0x3BF8434
	0x03BF8E24 ADRP X23, 0x7EB000
	0x03BF8E28 LDR X4, [X23 + 0x968]
	0x03BF8E2C CBNZ X4, 0x3BF8E44

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+32], X20
	004 Move [X31+40], X19
	005 Move X20, 0x7EC000
	006 Move X19, 0x525000
	007 Move W8, [X20+2277]
	008 Move X19, [X19+560]
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x567000
	014 Move X0, [X0+2184]
	015 Call 0x1C17CF4
	016 Move X0, 0x525000
	017 Move X0, [X0+560]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+2277], W8
	021 Move X0, [X19]
	022 Move X19, 0x567000
	023 Move W8, [X0+224]
	024 Move X19, [X19+2184]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, X31
	029 Call PlayableHandle.get_Null
	030 Move X2, X0
	031 Move X3, X1
	032 Add X0, X31, 0
	033 Move X1, X2
	034 Move X2, X3
	035 Move [X31], X31
	036 Move [X31+8], X31
	037 Call AnimationRemoveScalePlayable..ctor, X0, X1
	038 Move X8, [X19]
	039 Move V0, [X31]
	040 Move X20, [X31+32]
	041 Move X19, [X31+40]
	042 Move X30, [X31+16]
	043 Move X8, [X8+184]
	044 Move [X8], V0
	045 Add X31, X31, 48
	046 Return 

