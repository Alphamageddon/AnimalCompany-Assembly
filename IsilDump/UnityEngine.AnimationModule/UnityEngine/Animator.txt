Type: UnityEngine.Animator

Method: System.Single GetFloat(System.Int32 id)

Disassembly:
	0x03BF6DB0 LDR X1, [X21]
	0x03BF6DB4 ADD X0, X31, 0x0
	0x03BF6DB8 BL 0x22309E8
	0x03BF6DBC TBZ X0, 0x0, 0x3BF6E20
	0x03BF6DC0 ADRP X8, 0x568000
	0x03BF6DC4 LDR X8, [X8 + 0x7B8]
	0x03BF6DC8 LDR X0, [X8]
	0x03BF6DCC LDR W8, [X0 + 0xE0]
	0x03BF6DD0 CBNZ W8, 0x3BF6DD8
	0x03BF6DD4 BL 0x1C16DFC
	0x03BF6DD8 ADRP X21, 0x7ED000
	0x03BF6DDC LDR X8, [X21 + 0x8B0]
	0x03BF6DE0 CBNZ X8, 0x3BF6DF8
	0x03BF6DE4 ADRP X0, 0xFFFFFFFFFCF18000
	0x03BF6DE8 ADD X0, X0, 0xA94
	0x03BF6DEC BL 0x1C16CB8
	0x03BF6DF0 MOV X8, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7EE000
	006 Move X2, [X21+2104]
	007 Move W19, W1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51384320
	012 Add X0, X0, 3459
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+2104], X0
	016 Move X0, X20
	017 Move W1, W19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void SetFloat(System.String name, System.Single value)

Disassembly:
	0x03BF6E38 LDR X0, [X0 + 0x7C8]
	0x03BF6E3C BL 0x1C16D08
	0x03BF6E40 MOV X1, X0
	0x03BF6E44 MOV X0, X19
	0x03BF6E48 MOV X2, X31
	0x03BF6E4C BL 0x337B498
	0x03BF6E50 ADRP X0, 0x568000
	0x03BF6E54 LDR X0, [X0 + 0x7D0]
	0x03BF6E58 BL 0x1C16D08
	0x03BF6E5C MOV X1, X0
	0x03BF6E60 MOV X0, X19
	0x03BF6E64 BL 0x1C16DEC
	0x03BF6E68 STP X30, X21, [X31 - 0x20]!
	0x03BF6E6C STP X20, X19, [X31 + 0x10]
	0x03BF6E70 ADRP X21, 0x7ED000
	0x03BF6E74 LDR X2, [X21 + 0x8B0]
	0x03BF6E78 MOV W19, W1
	0x03BF6E7C MOV X20, X0
	0x03BF6E80 CBNZ X2, 0x3BF6E98
	0x03BF6E84 ADRP X0, 0xFFFFFFFFFCF18000
	0x03BF6E88 ADD X0, X0, 0xA94

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x7EE000
	007 Move X2, [X21+2088]
	008 Move V8, V0
	009 Move X19, X1
	010 Move X20, X0
	011 Compare X2, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51310592
	014 Add X0, X0, 2716
	015 Call 0x1C17CB8
	016 Move X2, X0
	017 Move [X21+2088], X0
	018 Move X0, X20
	019 Move X1, X19
	020 Move X20, [X31+32]
	021 Move X19, [X31+40]
	022 Move X30, [X31+16]
	023 Move X21, [X31+24]
	024 Move V0, V8
	025 Move V8, [X31+48]
	026 CallNoReturn X2

Method: System.Void SetFloat(System.Int32 id, System.Single value)

Disassembly:
	0x03BF6EE0 TBNZ X8, 0x0, 0x3BF6F04
	0x03BF6EE4 ADRP X0, 0x568000
	0x03BF6EE8 LDR X0, [X0 + 0x7B8]
	0x03BF6EEC BL 0x1C16CF4
	0x03BF6EF0 ADRP X0, 0x526000
	0x03BF6EF4 LDR X0, [X0 + 0x230]
	0x03BF6EF8 BL 0x1C16CF4
	0x03BF6EFC MOVZ W8, 0x1
	0x03BF6F00 STRB W8, [X23 + 0x8AA]
	0x03BF6F04 LDR X0, [X22]
	0x03BF6F08 ADRP X22, 0x526000
	0x03BF6F0C LDR W8, [X0 + 0xE0]
	0x03BF6F10 LDR X22, [X22 + 0x230]
	0x03BF6F14 CBNZ W8, 0x3BF6F1C
	0x03BF6F18 BL 0x1C16DFC
	0x03BF6F1C LDR X0, [X22]
	0x03BF6F20 LDP X22, X21, [X21]
	0x03BF6F24 LDR W8, [X0 + 0xE0]
	0x03BF6F28 CBNZ W8, 0x3BF6F30
	0x03BF6F2C BL 0x1C16DFC
	0x03BF6F30 MOV X0, X22

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x7EE000
	007 Move X2, [X21+2096]
	008 Move V8, V0
	009 Move W19, W1
	010 Move X20, X0
	011 Compare X2, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51277824
	014 Add X0, X0, 2647
	015 Call 0x1C17CB8
	016 Move X2, X0
	017 Move [X21+2096], X0
	018 Move X0, X20
	019 Move W1, W19
	020 Move X20, [X31+32]
	021 Move X19, [X31+40]
	022 Move X30, [X31+16]
	023 Move X21, [X31+24]
	024 Move V0, V8
	025 Move V8, [X31+48]
	026 CallNoReturn X2

Method: System.Boolean GetBool(System.Int32 id)

Disassembly:
	0x03BF6F88 BL 0x1C16CF4
	0x03BF6F8C MOVZ W8, 0x1
	0x03BF6F90 STRB W8, [X20 + 0x8B8]
	0x03BF6F94 LDR X0, [X19]
	0x03BF6F98 ADRP X19, 0x568000
	0x03BF6F9C LDR W8, [X0 + 0xE0]
	0x03BF6FA0 LDR X19, [X19 + 0x7B8]
	0x03BF6FA4 CBNZ W8, 0x3BF6FAC
	0x03BF6FA8 BL 0x1C16DFC
	0x03BF6FAC MOV X0, X31
	0x03BF6FB0 BL 0x3C5DB88
	0x03BF6FB4 MOV X2, X0
	0x03BF6FB8 MOV X4, X1
	0x03BF6FBC ADD X0, X31, 0x0
	0x03BF6FC0 MOVZ W3, 0x1
	0x03BF6FC4 MOV X1, X2
	0x03BF6FC8 MOV X2, X4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7EE000
	006 Move X2, [X21+2128]
	007 Move W19, W1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51384320
	012 Add X0, X0, 3506
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+2128], X0
	016 Move X0, X20
	017 Move W1, W19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void SetBool(System.String name, System.Boolean value)

Disassembly:
	0x03BF7010 LDR X20, [X20 + 0x230]
	0x03BF7014 MOV X19, X0
	0x03BF7018 TBNZ X8, 0x0, 0x3BF703C
	0x03BF701C ADRP X0, 0x567000
	0x03BF7020 LDR X0, [X0 + 0x7D8]
	0x03BF7024 BL 0x1C16CF4
	0x03BF7028 ADRP X0, 0x525000
	0x03BF702C LDR X0, [X0 + 0x230]
	0x03BF7030 BL 0x1C16CF4
	0x03BF7034 MOVZ W8, 0x1
	0x03BF7038 STRB W8, [X21 + 0x8B9]
	0x03BF703C LDR X0, [X20]
	0x03BF7040 LDR W8, [X0 + 0xE0]
	0x03BF7044 CBNZ W8, 0x3BF704C
	0x03BF7048 BL 0x1C16DFC
	0x03BF704C ADD X0, X31, 0x0
	0x03BF7050 MOV X1, X31
	0x03BF7054 BL 0x3C5E888
	0x03BF7058 TBZ X0, 0x0, 0x3BF7084
	0x03BF705C LDR X0, [X20]
	0x03BF7060 ADRP X20, 0x567000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x7ED000
	007 Move X3, [X22+2112]
	008 Move W20, W2
	009 Move X19, X1
	010 Move X21, X0
	011 Compare X3, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51208192
	014 Add X0, X0, 1561
	015 Call 0x1C17CB8
	016 Move X3, X0
	017 Move [X22+2112], X0
	018 And W2, W20, 1
	019 Move X0, X21
	020 Move X1, X19
	021 Move X20, [X31+32]
	022 Move X19, [X31+40]
	023 Move X22, [X31+16]
	024 Move X21, [X31+24]
	025 Move X30, [X31+48]
	026 CallNoReturn X3

Method: System.Void SetBool(System.Int32 id, System.Boolean value)

Disassembly:
	0x03BF70B8 BL 0x1C16D08
	0x03BF70BC MOV X1, X0
	0x03BF70C0 MOV X0, X19
	0x03BF70C4 MOV X2, X31
	0x03BF70C8 BL 0x337B498
	0x03BF70CC ADRP X0, 0x567000
	0x03BF70D0 LDR X0, [X0 + 0x7E8]
	0x03BF70D4 BL 0x1C16D08
	0x03BF70D8 MOV X1, X0
	0x03BF70DC MOV X0, X19
	0x03BF70E0 BL 0x1C16DEC
	0x03BF70E4 LDP X8, X1, [X0]
	0x03BF70E8 MOV X0, X8
	0x03BF70EC RET
	0x03BF70F0 STP X30, X23, [X31 - 0x30]!
	0x03BF70F4 STP X22, X21, [X31 + 0x10]
	0x03BF70F8 STP X20, X19, [X31 + 0x20]
	0x03BF70FC ADRP X23, 0x7EC000
	0x03BF7100 ADRP X22, 0x567000
	0x03BF7104 LDRB W8, [X23 + 0x8BA]
	0x03BF7108 LDR X22, [X22 + 0x7F0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x7ED000
	007 Move X3, [X22+2120]
	008 Move W20, W2
	009 Move W19, W1
	010 Move X21, X0
	011 Compare X3, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51322880
	014 Add X0, X0, 3260
	015 Call 0x1C17CB8
	016 Move X3, X0
	017 Move [X22+2120], X0
	018 And W2, W20, 1
	019 Move X0, X21
	020 Move W1, W19
	021 Move X20, [X31+32]
	022 Move X19, [X31+40]
	023 Move X22, [X31+16]
	024 Move X21, [X31+24]
	025 Move X30, [X31+48]
	026 CallNoReturn X3

Method: System.Int32 GetInteger(System.Int32 id)

Disassembly:
	0x03BF7160 CBNZ W8, 0x3BF7168
	0x03BF7164 BL 0x1C16DFC
	0x03BF7168 MOV X0, X22
	0x03BF716C MOV X1, X21
	0x03BF7170 MOV X2, X20
	0x03BF7174 MOV X3, X19
	0x03BF7178 LDP X20, X19, [X31 + 0x20]
	0x03BF717C LDP X22, X21, [X31 + 0x10]
	0x03BF7180 MOV X4, X31
	0x03BF7184 LDP X30, X23, [X31], #0x30
	0x03BF7188 B 0x3C5DA90
	0x03BF718C SUB X31, X31, 0x30
	0x03BF7190 STR X30, [X31 + 0x10]
	0x03BF7194 STP X20, X19, [X31 + 0x20]
	0x03BF7198 ADRP X20, 0x7EC000
	0x03BF719C ADRP X19, 0x525000
	0x03BF71A0 LDRB W8, [X20 + 0x8BB]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7ED000
	006 Move X2, [X21+2152]
	007 Move W19, W1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51167232
	012 Add X0, X0, 735
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+2152], X0
	016 Move X0, X20
	017 Move W1, W19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void SetInteger(System.String name, System.Int32 value)

Disassembly:
	0x03BF71E8 BL 0x3C5DB88
	0x03BF71EC MOV X2, X0
	0x03BF71F0 MOV X3, X1
	0x03BF71F4 ADD X0, X31, 0x0
	0x03BF71F8 MOV X1, X2
	0x03BF71FC MOV X2, X3
	0x03BF7200 STP X31, X31, [X31]
	0x03BF7204 BL 0x3BF6FF4
	0x03BF7208 LDR X8, [X19]
	0x03BF720C LDR V0, [X31]
	0x03BF7210 LDP X20, X19, [X31 + 0x20]
	0x03BF7214 LDR X30, [X31 + 0x10]
	0x03BF7218 LDR X8, [X8 + 0xB8]
	0x03BF721C STR V0, [X8]
	0x03BF7220 ADD X31, X31, 0x30
	0x03BF7224 RET
	0x03BF7228 SUB X31, X31, 0x30
	0x03BF722C STP X30, X21, [X31 + 0x10]
	0x03BF7230 STP X20, X19, [X31 + 0x20]
	0x03BF7234 ADRP X21, 0x7EC000
	0x03BF7238 STP X1, X2, [X31]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x7ED000
	007 Move X3, [X22+2136]
	008 Move W19, W2
	009 Move X20, X1
	010 Move X21, X0
	011 Compare X3, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51388416
	014 Add X0, X0, 3552
	015 Call 0x1C17CB8
	016 Move X3, X0
	017 Move [X22+2136], X0
	018 Move X0, X21
	019 Move X1, X20
	020 Move W2, W19
	021 Move X20, [X31+32]
	022 Move X19, [X31+40]
	023 Move X22, [X31+16]
	024 Move X21, [X31+24]
	025 Move X30, [X31+48]
	026 CallNoReturn X3

Method: System.Void SetInteger(System.Int32 id, System.Int32 value)

Disassembly:
	0x03BF7290 LDR X0, [X20]
	0x03BF7294 ADRP X20, 0x567000
	0x03BF7298 LDR W8, [X0 + 0xE0]
	0x03BF729C LDR X20, [X20 + 0x7F8]
	0x03BF72A0 CBNZ W8, 0x3BF72A8
	0x03BF72A4 BL 0x1C16DFC
	0x03BF72A8 LDR X1, [X20]
	0x03BF72AC ADD X0, X31, 0x0
	0x03BF72B0 BL 0x2230B48
	0x03BF72B4 TBZ X0, 0x0, 0x3BF72D0
	0x03BF72B8 LDR V0, [X31]
	0x03BF72BC LDP X30, X21, [X31 + 0x10]
	0x03BF72C0 STR V0, [X19]
	0x03BF72C4 LDP X20, X19, [X31 + 0x20]
	0x03BF72C8 ADD X31, X31, 0x30
	0x03BF72CC RET
	0x03BF72D0 ADRP X0, 0x504000
	0x03BF72D4 LDR X0, [X0 + 0xC08]
	0x03BF72D8 BL 0x1C16D08
	0x03BF72DC BL 0x1C16F10
	0x03BF72E0 MOV X19, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x7ED000
	007 Move X3, [X22+2144]
	008 Move W19, W2
	009 Move W20, W1
	010 Move X21, X0
	011 Compare X3, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51240960
	014 Add X0, X0, 846
	015 Call 0x1C17CB8
	016 Move X3, X0
	017 Move [X22+2144], X0
	018 Move X0, X21
	019 Move W1, W20
	020 Move W2, W19
	021 Move X20, [X31+32]
	022 Move X19, [X31+40]
	023 Move X22, [X31+16]
	024 Move X21, [X31+24]
	025 Move X30, [X31+48]
	026 CallNoReturn X3

Method: System.Void SetTrigger(System.String name)

Disassembly:
	0x03BF7338 LDRB W8, [X23 + 0x8BD]
	0x03BF733C LDR X22, [X22 + 0x810]
	0x03BF7340 MOV X19, X2
	0x03BF7344 MOV X20, X1
	0x03BF7348 MOV X21, X0
	0x03BF734C TBNZ X8, 0x0, 0x3BF7370
	0x03BF7350 ADRP X0, 0x567000
	0x03BF7354 LDR X0, [X0 + 0x810]
	0x03BF7358 BL 0x1C16CF4
	0x03BF735C ADRP X0, 0x525000
	0x03BF7360 LDR X0, [X0 + 0x230]
	0x03BF7364 BL 0x1C16CF4
	0x03BF7368 MOVZ W8, 0x1
	0x03BF736C STRB W8, [X23 + 0x8BD]
	0x03BF7370 LDR X0, [X22]
	0x03BF7374 ADRP X22, 0x525000
	0x03BF7378 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7ED000
	006 Move X2, [X21+2160]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51191808
	012 Add X0, X0, 1897
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+2160], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void SetTrigger(System.Int32 id)

Disassembly:
	0x03BF73C0 SUB X31, X31, 0x30
	0x03BF73C4 STR X30, [X31 + 0x10]
	0x03BF73C8 STP X20, X19, [X31 + 0x20]
	0x03BF73CC ADRP X20, 0x7EC000
	0x03BF73D0 ADRP X19, 0x525000
	0x03BF73D4 LDRB W8, [X20 + 0x8BE]
	0x03BF73D8 LDR X19, [X19 + 0x230]
	0x03BF73DC TBNZ X8, 0x0, 0x3BF7400
	0x03BF73E0 ADRP X0, 0x567000
	0x03BF73E4 LDR X0, [X0 + 0x810]
	0x03BF73E8 BL 0x1C16CF4
	0x03BF73EC ADRP X0, 0x525000
	0x03BF73F0 LDR X0, [X0 + 0x230]
	0x03BF73F4 BL 0x1C16CF4
	0x03BF73F8 MOVZ W8, 0x1
	0x03BF73FC STRB W8, [X20 + 0x8BE]
	0x03BF7400 LDR X0, [X19]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7ED000
	006 Move X2, [X21+2168]
	007 Move W19, W1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51339264
	012 Add X0, X0, 2400
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+2168], X0
	016 Move X0, X20
	017 Move W1, W19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void ResetTrigger(System.String name)

Disassembly:
	0x03BF7448 LDR X30, [X31 + 0x10]
	0x03BF744C LDR X8, [X8 + 0xB8]
	0x03BF7450 STR V0, [X8]
	0x03BF7454 ADD X31, X31, 0x30
	0x03BF7458 RET
	0x03BF745C SUB X31, X31, 0x30
	0x03BF7460 STP X30, X21, [X31 + 0x10]
	0x03BF7464 STP X20, X19, [X31 + 0x20]
	0x03BF7468 ADRP X21, 0x7EC000
	0x03BF746C STP X1, X2, [X31]
	0x03BF7470 ADRP X20, 0x525000
	0x03BF7474 LDRB W8, [X21 + 0x8BF]
	0x03BF7478 LDR X20, [X20 + 0x230]
	0x03BF747C MOV X19, X0
	0x03BF7480 TBNZ X8, 0x0, 0x3BF74A4
	0x03BF7484 ADRP X0, 0x567000
	0x03BF7488 LDR X0, [X0 + 0x818]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7ED000
	006 Move X2, [X21+2176]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51208192
	012 Add X0, X0, 1627
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+2176], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Boolean IsParameterControlledByCurve(System.Int32 id)

Disassembly:
	0x03BF74D0 LDR X20, [X20 + 0x818]
	0x03BF74D4 CBNZ W8, 0x3BF74DC
	0x03BF74D8 BL 0x1C16DFC
	0x03BF74DC LDR X1, [X20]
	0x03BF74E0 ADD X0, X31, 0x0
	0x03BF74E4 BL 0x2230BF8
	0x03BF74E8 TBZ X0, 0x0, 0x3BF7504
	0x03BF74EC LDR V0, [X31]
	0x03BF74F0 LDP X30, X21, [X31 + 0x10]
	0x03BF74F4 STR V0, [X19]
	0x03BF74F8 LDP X20, X19, [X31 + 0x20]
	0x03BF74FC ADD X31, X31, 0x30
	0x03BF7500 RET
	0x03BF7504 ADRP X0, 0x504000
	0x03BF7508 LDR X0, [X0 + 0xC08]
	0x03BF750C BL 0x1C16D08
	0x03BF7510 BL 0x1C16F10

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7ED000
	006 Move X2, [X21+2184]
	007 Move W19, W1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51314688
	012 Add X0, X0, 2782
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+2184], X0
	016 Move X0, X20
	017 Move W1, W19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Int32 get_layerCount()

Disassembly:
	0x03BF7558 SUB X31, X31, 0x60
	0x03BF755C STP X30, X23, [X31 + 0x30]
	0x03BF7560 STP X22, X21, [X31 + 0x40]
	0x03BF7564 STP X20, X19, [X31 + 0x50]
	0x03BF7568 ADRP X23, 0x7EC000
	0x03BF756C ADRP X22, 0x567000
	0x03BF7570 LDRB W8, [X23 + 0x8C0]
	0x03BF7574 LDR X22, [X22 + 0x830]
	0x03BF7578 MOV X20, X2
	0x03BF757C MOV X21, X1
	0x03BF7580 MOV X19, X0
	0x03BF7584 TBNZ X8, 0x0, 0x3BF75A8
	0x03BF7588 ADRP X0, 0x567000
	0x03BF758C LDR X0, [X0 + 0x830]
	0x03BF7590 BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7ED000
	005 Move X1, [X20+1992]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51396608
	010 Add X0, X0, 3112
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+1992], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Int32 GetLayerIndex(System.String layerName)

Disassembly:
	0x03BF7594 ADRP X0, 0x525000
	0x03BF7598 LDR X0, [X0 + 0x230]
	0x03BF759C BL 0x1C16CF4
	0x03BF75A0 MOVZ W8, 0x1
	0x03BF75A4 STRB W8, [X23 + 0x8C0]
	0x03BF75A8 LDR X0, [X22]
	0x03BF75AC ADRP X23, 0x525000
	0x03BF75B0 LDR W8, [X0 + 0xE0]
	0x03BF75B4 LDR X23, [X23 + 0x230]
	0x03BF75B8 CBNZ W8, 0x3BF75C0
	0x03BF75BC BL 0x1C16DFC
	0x03BF75C0 LDR X0, [X23]
	0x03BF75C4 ADD X1, X31, 0x20
	0x03BF75C8 STP X21, X20, [X31 + 0x20]
	0x03BF75CC BL 0x1C16E04
	0x03BF75D0 LDR X8, [X22]
	0x03BF75D4 MOVN X9, 0x0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7ED000
	006 Move X2, [X21+2000]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51322880
	012 Add X0, X0, 3119
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+2000], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Single GetLayerWeight(System.Int32 layerIndex)

Disassembly:
	0x03BF75D8 MOV X1, X0
	0x03BF75DC ADD X0, X31, 0x0
	0x03BF75E0 STP X8, X9, [X31]
	0x03BF75E4 LDR V0, [X19]
	0x03BF75E8 MOV X2, X31
	0x03BF75EC STR V0, [X31 + 0x1]
	0x03BF75F0 BL 0x33D55D0
	0x03BF75F4 LDP X20, X19, [X31 + 0x50]
	0x03BF75F8 LDP X22, X21, [X31 + 0x40]
	0x03BF75FC LDP X30, X23, [X31 + 0x30]
	0x03BF7600 AND W0, W0, 0x1
	0x03BF7604 ADD X31, X31, 0x60
	0x03BF7608 RET
	0x03BF760C SUB X31, X31, 0x30
	0x03BF7610 STR X30, [X31 + 0x10]
	0x03BF7614 STP X20, X19, [X31 + 0x20]
	0x03BF7618 ADRP X20, 0x7EC000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7ED000
	006 Move X2, [X21+2008]
	007 Move W19, W1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51322880
	012 Add X0, X0, 3170
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+2008], X0
	016 Move X0, X20
	017 Move W1, W19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void SetLayerWeight(System.Int32 layerIndex, System.Single weight)

Disassembly:
	0x03BF761C ADRP X19, 0x525000
	0x03BF7620 LDRB W8, [X20 + 0x8C1]
	0x03BF7624 LDR X19, [X19 + 0x230]
	0x03BF7628 TBNZ X8, 0x0, 0x3BF764C
	0x03BF762C ADRP X0, 0x567000
	0x03BF7630 LDR X0, [X0 + 0x830]
	0x03BF7634 BL 0x1C16CF4
	0x03BF7638 ADRP X0, 0x525000
	0x03BF763C LDR X0, [X0 + 0x230]
	0x03BF7640 BL 0x1C16CF4
	0x03BF7644 MOVZ W8, 0x1
	0x03BF7648 STRB W8, [X20 + 0x8C1]
	0x03BF764C LDR X0, [X19]
	0x03BF7650 ADRP X19, 0x567000
	0x03BF7654 LDR W8, [X0 + 0xE0]
	0x03BF7658 LDR X19, [X19 + 0x830]
	0x03BF765C CBNZ W8, 0x3BF7664
	0x03BF7660 BL 0x1C16DFC
	0x03BF7664 MOV X0, X31
	0x03BF7668 BL 0x3C5DB88
	0x03BF766C MOV X2, X0

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x7ED000
	007 Move X2, [X21+2016]
	008 Move V8, V0
	009 Move W19, W1
	010 Move X20, X0
	011 Compare X2, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51200000
	014 Add X0, X0, 2946
	015 Call 0x1C17CB8
	016 Move X2, X0
	017 Move [X21+2016], X0
	018 Move X0, X20
	019 Move W1, W19
	020 Move X20, [X31+32]
	021 Move X19, [X31+40]
	022 Move X30, [X31+16]
	023 Move X21, [X31+24]
	024 Move V0, V8
	025 Move V8, [X31+48]
	026 CallNoReturn X2

Method: System.Void GetAnimatorStateInfo(System.Int32 layerIndex, UnityEngine.StateInfoIndex stateInfoIndex, out UnityEngine.AnimatorStateInfo info)

Disassembly:
	0x03BF7670 MOV X3, X1
	0x03BF7674 ADD X0, X31, 0x0
	0x03BF7678 MOV X1, X2
	0x03BF767C MOV X2, X3
	0x03BF7680 STP X31, X31, [X31]
	0x03BF7684 BL 0x3BF745C
	0x03BF7688 LDR X8, [X19]
	0x03BF768C LDR V0, [X31]
	0x03BF7690 LDP X20, X19, [X31 + 0x20]
	0x03BF7694 LDR X30, [X31 + 0x10]
	0x03BF7698 LDR X8, [X8 + 0xB8]
	0x03BF769C STR V0, [X8]
	0x03BF76A0 ADD X31, X31, 0x30
	0x03BF76A4 RET
	0x03BF76A8 STR X30, [X31 - 0x30]!
	0x03BF76AC STP X22, X21, [X31 + 0x10]
	0x03BF76B0 STP X20, X19, [X31 + 0x20]
	0x03BF76B4 ADRP X22, 0x7EC000
	0x03BF76B8 LDR X3, [X22 + 0x8C8]
	0x03BF76BC MOV X19, X2
	0x03BF76C0 MOV X20, X1
	0x03BF76C4 MOV X21, X0
	0x03BF76C8 CBNZ X3, 0x3BF76E0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x7ED000
	008 Move X4, [X23+2024]
	009 Move X19, X3
	010 Move W20, W2
	011 Move W21, W1
	012 Move X22, X0
	013 Compare X4, 0
	014 JumpIfNotEqual {20}
	015 Move X0, -51355648
	016 Add X0, X0, 3497
	017 Call 0x1C17CB8
	018 Move X4, X0
	019 Move [X23+2024], X0
	020 Move X0, X22
	021 Move W1, W21
	022 Move W2, W20
	023 Move X3, X19
	024 Move X20, [X31+32]
	025 Move X19, [X31+40]
	026 Move X22, [X31+16]
	027 Move X21, [X31+24]
	028 Move X30, [X31+48]
	029 Move X23, [X31+56]
	030 CallNoReturn X4

Method: UnityEngine.AnimatorStateInfo GetCurrentAnimatorStateInfo(System.Int32 layerIndex)

Disassembly:
	0x03BF76CC ADRP X0, 0xFFFFFFFFFCEF7000
	0x03BF76D0 ADD X0, X0, 0xB51
	0x03BF76D4 BL 0x1C16CB8
	0x03BF76D8 MOV X3, X0
	0x03BF76DC STR X0, [X22 + 0x8C8]
	0x03BF76E0 MOV X0, X21
	0x03BF76E4 MOV X1, X20
	0x03BF76E8 MOV X2, X19
	0x03BF76EC LDP X20, X19, [X31 + 0x20]
	0x03BF76F0 LDP X22, X21, [X31 + 0x10]
	0x03BF76F4 LDR X30, [X31], #0x30
	0x03BF76F8 BR X3
	0x03BF76FC SUB X31, X31, 0x50
	0x03BF7700 STP X30, X21, [X31 + 0x30]
	0x03BF7704 STP X20, X19, [X31 + 0x40]
	0x03BF7708 ADRP X21, 0x7EC000
	0x03BF770C LDR X8, [X21 + 0x8C8]
	0x03BF7710 MOV X19, X3
	0x03BF7714 MOV X20, X2
	0x03BF7718 STP X0, X1, [X31 + 0x20]
	0x03BF771C STP X31, X31, [X31 + 0x10]
	0x03BF7720 STP X31, X31, [X31]
	0x03BF7724 CBNZ X8, 0x3BF773C
	0x03BF7728 ADRP X0, 0xFFFFFFFFFCEF7000
	0x03BF772C ADD X0, X0, 0xB51
	0x03BF7730 BL 0x1C16CB8
	0x03BF7734 MOV X8, X0
	0x03BF7738 STR X0, [X21 + 0x8C8]
	0x03BF773C ADD X0, X31, 0x20
	0x03BF7740 ADD X2, X31, 0x10
	0x03BF7744 MOV X1, X20
	0x03BF7748 BLR X8

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+64], X22
	004 Move [X31+72], X21
	005 Move [X31+80], X20
	006 Move [X31+88], X19
	007 Move X22, 0x7ED000
	008 Move X19, X8
	009 Move X8, [X22+2024]
	010 Move W20, W1
	011 Move X21, X0
	012 NotImplemented "Instruction MOVI not yet implemented."
	013 Move [X31+32], W31
	014 Move [X31], V0
	015 Move [X31+8], V0
	016 Compare X8, 0
	017 JumpIfNotEqual {23}
	018 Move X0, -51355648
	019 Add X0, X0, 3497
	020 Call 0x1C17CB8
	021 Move X8, X0
	022 Move [X22+2024], X0
	023 Add X3, X31, 0
	024 Move X0, X21
	025 Move W1, W20
	026 Move W2, W31
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Move W8, [X31+32]
	029 Move V1, [X31]
	030 Move V0, [X31+16]
	031 Move X22, [X31+64]
	032 Move X21, [X31+72]
	033 Move X30, [X31+48]
	034 Move [X19+32], W8
	035 Move [X19], V1
	036 Move [X19+8], V0
	037 Move X20, [X31+80]
	038 Move X19, [X31+88]
	039 Add X31, X31, 96
	040 Return X0

Method: System.Boolean IsInTransition(System.Int32 layerIndex)

Disassembly:
	0x03BF774C TBZ X0, 0x0, 0x3BF7790
	0x03BF7750 LDP X1, X2, [X31 + 0x10]
	0x03BF7754 ADD X0, X31, 0x0
	0x03BF7758 BL 0x3BF7820
	0x03BF775C ADRP X20, 0x7EC000
	0x03BF7760 LDR X8, [X20 + 0x8D8]
	0x03BF7764 CBNZ X8, 0x3BF777C
	0x03BF7768 ADRP X0, 0xFFFFFFFFFCF0D000
	0x03BF776C ADD X0, X0, 0xCF9
	0x03BF7770 BL 0x1C16CB8
	0x03BF7774 MOV X8, X0
	0x03BF7778 STR X0, [X20 + 0x8D8]
	0x03BF777C ADD X0, X31, 0x0
	0x03BF7780 MOV X1, X19
	0x03BF7784 BLR X8
	0x03BF7788 LDP X0, X1, [X31]
	0x03BF778C B 0x3BF7794

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7ED000
	006 Move X2, [X21+2032]
	007 Move W19, W1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51240960
	012 Add X0, X0, 795
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+2032], X0
	016 Move X0, X20
	017 Move W1, W19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: UnityEngine.AnimatorControllerParameter[] get_parameters()

Disassembly:
	0x03BF7790 BL 0x3BF77A4
	0x03BF7794 LDP X20, X19, [X31 + 0x40]
	0x03BF7798 LDP X30, X21, [X31 + 0x30]
	0x03BF779C ADD X31, X31, 0x50
	0x03BF77A0 RET
	0x03BF77A4 SUB X31, X31, 0x30
	0x03BF77A8 STR X30, [X31 + 0x10]
	0x03BF77AC STP X20, X19, [X31 + 0x20]
	0x03BF77B0 ADRP X19, 0x7EC000
	0x03BF77B4 ADRP X20, 0x525000
	0x03BF77B8 LDRB W8, [X19 + 0x8D1]
	0x03BF77BC LDR X20, [X20 + 0x240]
	0x03BF77C0 TBNZ X8, 0x0, 0x3BF77D8
	0x03BF77C4 ADRP X0, 0x525000
	0x03BF77C8 LDR X0, [X0 + 0x240]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7ED000
	005 Move X1, [X20+2040]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51322880
	010 Add X0, X0, 3221
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+2040], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Int32 get_parameterCount()

Disassembly:
	0x03BF77CC BL 0x1C16CF4
	0x03BF77D0 MOVZ W8, 0x1
	0x03BF77D4 STRB W8, [X19 + 0x8D1]
	0x03BF77D8 LDR X0, [X20]
	0x03BF77DC LDR W8, [X0 + 0xE0]
	0x03BF77E0 CBNZ W8, 0x3BF77E8
	0x03BF77E4 BL 0x1C16DFC
	0x03BF77E8 MOV X0, X31
	0x03BF77EC BL 0x3C5EF5C
	0x03BF77F0 MOV X2, X0
	0x03BF77F4 MOV X3, X1
	0x03BF77F8 ADD X0, X31, 0x0
	0x03BF77FC MOV X1, X2
	0x03BF7800 MOV X2, X3
	0x03BF7804 STP X31, X31, [X31]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7ED000
	005 Move X1, [X20+2048]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51331072
	010 Add X0, X0, 2528
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+2048], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void Play(System.Int32 stateNameHash, System.Int32 layer, System.Single normalizedTime)

Disassembly:
	0x03BF7808 BL 0x3BF7820
	0x03BF780C LDP X0, X1, [X31]
	0x03BF7810 LDP X20, X19, [X31 + 0x20]
	0x03BF7814 LDR X30, [X31 + 0x10]
	0x03BF7818 ADD X31, X31, 0x30
	0x03BF781C RET
	0x03BF7820 SUB X31, X31, 0x30
	0x03BF7824 STP X30, X21, [X31 + 0x10]
	0x03BF7828 STP X20, X19, [X31 + 0x20]
	0x03BF782C ADRP X21, 0x7EC000
	0x03BF7830 STP X1, X2, [X31]
	0x03BF7834 ADRP X20, 0x525000
	0x03BF7838 LDRB W8, [X21 + 0x8D0]
	0x03BF783C LDR X20, [X20 + 0x240]
	0x03BF7840 MOV X19, X0
	0x03BF7844 TBNZ X8, 0x0, 0x3BF7868
	0x03BF7848 ADRP X0, 0x567000
	0x03BF784C LDR X0, [X0 + 0x838]
	0x03BF7850 BL 0x1C16CF4
	0x03BF7854 ADRP X0, 0x525000
	0x03BF7858 LDR X0, [X0 + 0x240]
	0x03BF785C BL 0x1C16CF4
	0x03BF7860 MOVZ W8, 0x1
	0x03BF7864 STRB W8, [X21 + 0x8D0]
	0x03BF7868 LDR X0, [X20]

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x7ED000
	008 Move X3, [X22+2056]
	009 Move V8, V0
	010 Move W19, W2
	011 Move W20, W1
	012 Move X21, X0
	013 Compare X3, 0
	014 JumpIfNotEqual {20}
	015 Move X0, -51314688
	016 Add X0, X0, 2648
	017 Call 0x1C17CB8
	018 Move X3, X0
	019 Move [X22+2056], X0
	020 Move X0, X21
	021 Move W1, W20
	022 Move W2, W19
	023 Move X20, [X31+32]
	024 Move X19, [X31+40]
	025 Move X22, [X31+16]
	026 Move X21, [X31+24]
	027 Move X30, [X31+8]
	028 Move V0, V8
	029 Move V8, [X31+48]
	030 CallNoReturn X3

Method: System.Void set_runtimeAnimatorController(UnityEngine.RuntimeAnimatorController value)

Disassembly:
	0x03BF786C LDR W8, [X0 + 0xE0]
	0x03BF7870 CBNZ W8, 0x3BF7878
	0x03BF7874 BL 0x1C16DFC
	0x03BF7878 ADD X0, X31, 0x0
	0x03BF787C MOV X1, X31
	0x03BF7880 BL 0x3C5F144
	0x03BF7884 TBZ X0, 0x0, 0x3BF78B0
	0x03BF7888 LDR X0, [X20]
	0x03BF788C ADRP X20, 0x567000
	0x03BF7890 LDR W8, [X0 + 0xE0]
	0x03BF7894 LDR X20, [X20 + 0x838]
	0x03BF7898 CBNZ W8, 0x3BF78A0
	0x03BF789C BL 0x1C16DFC
	0x03BF78A0 LDR X1, [X20]
	0x03BF78A4 ADD X0, X31, 0x0
	0x03BF78A8 BL 0x2231468
	0x03BF78AC TBZ X0, 0x0, 0x3BF78C8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7ED000
	006 Move X2, [X21+2064]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51388416
	012 Add X0, X0, 3368
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+2064], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Boolean get_hasBoundPlayables()

Disassembly:
	0x03BF78B0 LDR V0, [X31]
	0x03BF78B4 LDP X30, X21, [X31 + 0x10]
	0x03BF78B8 STR V0, [X19]
	0x03BF78BC LDP X20, X19, [X31 + 0x20]
	0x03BF78C0 ADD X31, X31, 0x30
	0x03BF78C4 RET
	0x03BF78C8 ADRP X0, 0x504000
	0x03BF78CC LDR X0, [X0 + 0xC08]
	0x03BF78D0 BL 0x1C16D08
	0x03BF78D4 BL 0x1C16F10
	0x03BF78D8 MOV X19, X0
	0x03BF78DC ADRP X0, 0x567000
	0x03BF78E0 LDR X0, [X0 + 0x840]
	0x03BF78E4 BL 0x1C16D08
	0x03BF78E8 MOV X1, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7ED000
	005 Move X1, [X20+2072]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51372032
	010 Add X0, X0, 2983
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+2072], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Int32 StringToHash(System.String name)

Disassembly:
	0x03BF6D64 ADRP X0, 0x526000
	0x03BF6D68 LDR X0, [X0 + 0x230]
	0x03BF6D6C BL 0x1C16CF4
	0x03BF6D70 MOVZ W8, 0x1
	0x03BF6D74 STRB W8, [X22 + 0x8A9]
	0x03BF6D78 LDR X0, [X21]
	0x03BF6D7C LDR W8, [X0 + 0xE0]
	0x03BF6D80 CBNZ W8, 0x3BF6D88
	0x03BF6D84 BL 0x1C16DFC
	0x03BF6D88 ADD X0, X31, 0x0
	0x03BF6D8C MOV X1, X31
	0x03BF6D90 BL 0x3C5E888
	0x03BF6D94 TBZ X0, 0x0, 0x3BF6E04
	0x03BF6D98 LDR X0, [X21]
	0x03BF6D9C ADRP X21, 0x568000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7EE000
	005 Move X1, [X20+2080]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51367936
	010 Add X0, X0, 3029
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+2080], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void SetFloatString(System.String name, System.Single value)

Disassembly:
	0x03BF6E8C BL 0x1C16CB8
	0x03BF6E90 MOV X2, X0
	0x03BF6E94 STR X0, [X21 + 0x8B0]
	0x03BF6E98 AND W1, W19, 0x1
	0x03BF6E9C MOV X0, X20
	0x03BF6EA0 LDP X20, X19, [X31 + 0x10]
	0x03BF6EA4 LDP X30, X21, [X31], #0x20
	0x03BF6EA8 BR X2
	0x03BF6EAC LDP X8, X1, [X0]
	0x03BF6EB0 MOV X0, X8
	0x03BF6EB4 RET
	0x03BF6EB8 STP X30, X23, [X31 - 0x30]!
	0x03BF6EBC STP X22, X21, [X31 + 0x10]
	0x03BF6EC0 STP X20, X19, [X31 + 0x20]
	0x03BF6EC4 ADRP X23, 0x7ED000
	0x03BF6EC8 ADRP X22, 0x568000
	0x03BF6ECC LDRB W8, [X23 + 0x8AA]
	0x03BF6ED0 LDR X22, [X22 + 0x7B8]
	0x03BF6ED4 MOV X19, X2
	0x03BF6ED8 MOV X20, X1
	0x03BF6EDC MOV X21, X0

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x7EE000
	007 Move X2, [X21+2088]
	008 Move V8, V0
	009 Move X19, X1
	010 Move X20, X0
	011 Compare X2, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51310592
	014 Add X0, X0, 2716
	015 Call 0x1C17CB8
	016 Move X2, X0
	017 Move [X21+2088], X0
	018 Move X0, X20
	019 Move X1, X19
	020 Move X20, [X31+32]
	021 Move X19, [X31+40]
	022 Move X30, [X31+16]
	023 Move X21, [X31+24]
	024 Move V0, V8
	025 Move V8, [X31+48]
	026 CallNoReturn X2

Method: System.Void SetFloatID(System.Int32 id, System.Single value)

Disassembly:
	0x03BF6F34 MOV X1, X21
	0x03BF6F38 MOV X2, X20
	0x03BF6F3C MOV X3, X19
	0x03BF6F40 LDP X20, X19, [X31 + 0x20]
	0x03BF6F44 LDP X22, X21, [X31 + 0x10]
	0x03BF6F48 MOV X4, X31
	0x03BF6F4C LDP X30, X23, [X31], #0x30
	0x03BF6F50 B 0x3C5DA90
	0x03BF6F54 SUB X31, X31, 0x30
	0x03BF6F58 STR X30, [X31 + 0x10]
	0x03BF6F5C STP X20, X19, [X31 + 0x20]
	0x03BF6F60 ADRP X20, 0x7ED000
	0x03BF6F64 ADRP X19, 0x526000
	0x03BF6F68 LDRB W8, [X20 + 0x8B8]
	0x03BF6F6C LDR X19, [X19 + 0x230]
	0x03BF6F70 TBNZ X8, 0x0, 0x3BF6F94
	0x03BF6F74 ADRP X0, 0x568000
	0x03BF6F78 LDR X0, [X0 + 0x7B8]
	0x03BF6F7C BL 0x1C16CF4
	0x03BF6F80 ADRP X0, 0x526000
	0x03BF6F84 LDR X0, [X0 + 0x230]

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x7EE000
	007 Move X2, [X21+2096]
	008 Move V8, V0
	009 Move W19, W1
	010 Move X20, X0
	011 Compare X2, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51277824
	014 Add X0, X0, 2647
	015 Call 0x1C17CB8
	016 Move X2, X0
	017 Move [X21+2096], X0
	018 Move X0, X20
	019 Move W1, W19
	020 Move X20, [X31+32]
	021 Move X19, [X31+40]
	022 Move X30, [X31+16]
	023 Move X21, [X31+24]
	024 Move V0, V8
	025 Move V8, [X31+48]
	026 CallNoReturn X2

Method: System.Single GetFloatID(System.Int32 id)

Disassembly:
	0x03BF6DF4 STR X0, [X21 + 0x8B0]
	0x03BF6DF8 AND W1, W20, 0x1
	0x03BF6DFC ADD X0, X31, 0x0
	0x03BF6E00 BLR X8
	0x03BF6E04 LDR V0, [X31]
	0x03BF6E08 LDP X22, X21, [X31 + 0x20]
	0x03BF6E0C LDR X30, [X31 + 0x10]
	0x03BF6E10 STR V0, [X19]
	0x03BF6E14 LDP X20, X19, [X31 + 0x30]
	0x03BF6E18 ADD X31, X31, 0x40
	0x03BF6E1C RET
	0x03BF6E20 ADRP X0, 0x505000
	0x03BF6E24 LDR X0, [X0 + 0xC08]
	0x03BF6E28 BL 0x1C16D08
	0x03BF6E2C BL 0x1C16F10
	0x03BF6E30 MOV X19, X0
	0x03BF6E34 ADRP X0, 0x568000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7EE000
	006 Move X2, [X21+2104]
	007 Move W19, W1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51384320
	012 Add X0, X0, 3459
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+2104], X0
	016 Move X0, X20
	017 Move W1, W19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void SetBoolString(System.String name, System.Boolean value)

Disassembly:
	0x03BF7064 LDR W8, [X0 + 0xE0]
	0x03BF7068 LDR X20, [X20 + 0x7D8]
	0x03BF706C CBNZ W8, 0x3BF7074
	0x03BF7070 BL 0x1C16DFC
	0x03BF7074 LDR X1, [X20]
	0x03BF7078 ADD X0, X31, 0x0
	0x03BF707C BL 0x2230A98
	0x03BF7080 TBZ X0, 0x0, 0x3BF709C
	0x03BF7084 LDR V0, [X31]
	0x03BF7088 LDP X30, X21, [X31 + 0x10]
	0x03BF708C STR V0, [X19]
	0x03BF7090 LDP X20, X19, [X31 + 0x20]
	0x03BF7094 ADD X31, X31, 0x30
	0x03BF7098 RET
	0x03BF709C ADRP X0, 0x504000
	0x03BF70A0 LDR X0, [X0 + 0xC08]
	0x03BF70A4 BL 0x1C16D08
	0x03BF70A8 BL 0x1C16F10
	0x03BF70AC MOV X19, X0
	0x03BF70B0 ADRP X0, 0x567000
	0x03BF70B4 LDR X0, [X0 + 0x7E0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x7ED000
	007 Move X3, [X22+2112]
	008 Move W20, W2
	009 Move X19, X1
	010 Move X21, X0
	011 Compare X3, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51208192
	014 Add X0, X0, 1561
	015 Call 0x1C17CB8
	016 Move X3, X0
	017 Move [X22+2112], X0
	018 And W2, W20, 1
	019 Move X0, X21
	020 Move X1, X19
	021 Move X20, [X31+32]
	022 Move X19, [X31+40]
	023 Move X22, [X31+16]
	024 Move X21, [X31+24]
	025 Move X30, [X31+48]
	026 CallNoReturn X3

Method: System.Void SetBoolID(System.Int32 id, System.Boolean value)

Disassembly:
	0x03BF710C MOV X19, X2
	0x03BF7110 MOV X20, X1
	0x03BF7114 MOV X21, X0
	0x03BF7118 TBNZ X8, 0x0, 0x3BF713C
	0x03BF711C ADRP X0, 0x567000
	0x03BF7120 LDR X0, [X0 + 0x7F0]
	0x03BF7124 BL 0x1C16CF4
	0x03BF7128 ADRP X0, 0x525000
	0x03BF712C LDR X0, [X0 + 0x230]
	0x03BF7130 BL 0x1C16CF4
	0x03BF7134 MOVZ W8, 0x1
	0x03BF7138 STRB W8, [X23 + 0x8BA]
	0x03BF713C LDR X0, [X22]
	0x03BF7140 ADRP X22, 0x525000
	0x03BF7144 LDR W8, [X0 + 0xE0]
	0x03BF7148 LDR X22, [X22 + 0x230]
	0x03BF714C CBNZ W8, 0x3BF7154
	0x03BF7150 BL 0x1C16DFC
	0x03BF7154 LDR X0, [X22]
	0x03BF7158 LDP X22, X21, [X21]
	0x03BF715C LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x7ED000
	007 Move X3, [X22+2120]
	008 Move W20, W2
	009 Move W19, W1
	010 Move X21, X0
	011 Compare X3, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51322880
	014 Add X0, X0, 3260
	015 Call 0x1C17CB8
	016 Move X3, X0
	017 Move [X22+2120], X0
	018 And W2, W20, 1
	019 Move X0, X21
	020 Move W1, W19
	021 Move X20, [X31+32]
	022 Move X19, [X31+40]
	023 Move X22, [X31+16]
	024 Move X21, [X31+24]
	025 Move X30, [X31+48]
	026 CallNoReturn X3

Method: System.Boolean GetBoolID(System.Int32 id)

Disassembly:
	0x03BF6FCC STP X31, X31, [X31]
	0x03BF6FD0 BL 0x3BF6D1C
	0x03BF6FD4 LDR X8, [X19]
	0x03BF6FD8 LDR V0, [X31]
	0x03BF6FDC LDP X20, X19, [X31 + 0x20]
	0x03BF6FE0 LDR X30, [X31 + 0x10]
	0x03BF6FE4 LDR X8, [X8 + 0xB8]
	0x03BF6FE8 STR V0, [X8]
	0x03BF6FEC ADD X31, X31, 0x30
	0x03BF6FF0 RET
	0x03BF6FF4 SUB X31, X31, 0x30
	0x03BF6FF8 STP X30, X21, [X31 + 0x10]
	0x03BF6FFC STP X20, X19, [X31 + 0x20]
	0x03BF7000 ADRP X21, 0x7EC000
	0x03BF7004 STP X1, X2, [X31]
	0x03BF7008 ADRP X20, 0x525000
	0x03BF700C B 0x3EB174C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7EE000
	006 Move X2, [X21+2128]
	007 Move W19, W1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51384320
	012 Add X0, X0, 3506
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+2128], X0
	016 Move X0, X20
	017 Move W1, W19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void SetIntegerString(System.String name, System.Int32 value)

Disassembly:
	0x03BF723C ADRP X20, 0x525000
	0x03BF7240 LDRB W8, [X21 + 0x8BC]
	0x03BF7244 LDR X20, [X20 + 0x230]
	0x03BF7248 MOV X19, X0
	0x03BF724C TBNZ X8, 0x0, 0x3BF7270
	0x03BF7250 ADRP X0, 0x567000
	0x03BF7254 LDR X0, [X0 + 0x7F8]
	0x03BF7258 BL 0x1C16CF4
	0x03BF725C ADRP X0, 0x525000
	0x03BF7260 LDR X0, [X0 + 0x230]
	0x03BF7264 BL 0x1C16CF4
	0x03BF7268 MOVZ W8, 0x1
	0x03BF726C STRB W8, [X21 + 0x8BC]
	0x03BF7270 LDR X0, [X20]
	0x03BF7274 LDR W8, [X0 + 0xE0]
	0x03BF7278 CBNZ W8, 0x3BF7280
	0x03BF727C BL 0x1C16DFC
	0x03BF7280 ADD X0, X31, 0x0
	0x03BF7284 MOV X1, X31
	0x03BF7288 BL 0x3C5E888
	0x03BF728C TBZ X0, 0x0, 0x3BF72B8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x7ED000
	007 Move X3, [X22+2136]
	008 Move W19, W2
	009 Move X20, X1
	010 Move X21, X0
	011 Compare X3, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51388416
	014 Add X0, X0, 3552
	015 Call 0x1C17CB8
	016 Move X3, X0
	017 Move [X22+2136], X0
	018 Move X0, X21
	019 Move X1, X20
	020 Move W2, W19
	021 Move X20, [X31+32]
	022 Move X19, [X31+40]
	023 Move X22, [X31+16]
	024 Move X21, [X31+24]
	025 Move X30, [X31+48]
	026 CallNoReturn X3

Method: System.Void SetIntegerID(System.Int32 id, System.Int32 value)

Disassembly:
	0x03BF72E4 ADRP X0, 0x567000
	0x03BF72E8 LDR X0, [X0 + 0x800]
	0x03BF72EC BL 0x1C16D08
	0x03BF72F0 MOV X1, X0
	0x03BF72F4 MOV X0, X19
	0x03BF72F8 MOV X2, X31
	0x03BF72FC BL 0x337B498
	0x03BF7300 ADRP X0, 0x567000
	0x03BF7304 LDR X0, [X0 + 0x808]
	0x03BF7308 BL 0x1C16D08
	0x03BF730C MOV X1, X0
	0x03BF7310 MOV X0, X19
	0x03BF7314 BL 0x1C16DEC
	0x03BF7318 LDP X8, X1, [X0]
	0x03BF731C MOV X0, X8
	0x03BF7320 RET
	0x03BF7324 STP X30, X23, [X31 - 0x30]!
	0x03BF7328 STP X22, X21, [X31 + 0x10]
	0x03BF732C STP X20, X19, [X31 + 0x20]
	0x03BF7330 ADRP X23, 0x7EC000
	0x03BF7334 ADRP X22, 0x567000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x7ED000
	007 Move X3, [X22+2144]
	008 Move W19, W2
	009 Move W20, W1
	010 Move X21, X0
	011 Compare X3, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51240960
	014 Add X0, X0, 846
	015 Call 0x1C17CB8
	016 Move X3, X0
	017 Move [X22+2144], X0
	018 Move X0, X21
	019 Move W1, W20
	020 Move W2, W19
	021 Move X20, [X31+32]
	022 Move X19, [X31+40]
	023 Move X22, [X31+16]
	024 Move X21, [X31+24]
	025 Move X30, [X31+48]
	026 CallNoReturn X3

Method: System.Int32 GetIntegerID(System.Int32 id)

Disassembly:
	0x03BF71A4 LDR X19, [X19 + 0x230]
	0x03BF71A8 TBNZ X8, 0x0, 0x3BF71CC
	0x03BF71AC ADRP X0, 0x567000
	0x03BF71B0 LDR X0, [X0 + 0x7F0]
	0x03BF71B4 BL 0x1C16CF4
	0x03BF71B8 ADRP X0, 0x525000
	0x03BF71BC LDR X0, [X0 + 0x230]
	0x03BF71C0 BL 0x1C16CF4
	0x03BF71C4 MOVZ W8, 0x1
	0x03BF71C8 STRB W8, [X20 + 0x8BB]
	0x03BF71CC LDR X0, [X19]
	0x03BF71D0 ADRP X19, 0x567000
	0x03BF71D4 LDR W8, [X0 + 0xE0]
	0x03BF71D8 LDR X19, [X19 + 0x7F0]
	0x03BF71DC CBNZ W8, 0x3BF71E4
	0x03BF71E0 BL 0x1C16DFC
	0x03BF71E4 MOV X0, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7ED000
	006 Move X2, [X21+2152]
	007 Move W19, W1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51167232
	012 Add X0, X0, 735
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+2152], X0
	016 Move X0, X20
	017 Move W1, W19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void SetTriggerString(System.String name)

Disassembly:
	0x03BF737C LDR X22, [X22 + 0x230]
	0x03BF7380 CBNZ W8, 0x3BF7388
	0x03BF7384 BL 0x1C16DFC
	0x03BF7388 LDR X0, [X22]
	0x03BF738C LDP X22, X21, [X21]
	0x03BF7390 LDR W8, [X0 + 0xE0]
	0x03BF7394 CBNZ W8, 0x3BF739C
	0x03BF7398 BL 0x1C16DFC
	0x03BF739C MOV X0, X22
	0x03BF73A0 MOV X1, X21
	0x03BF73A4 MOV X2, X20
	0x03BF73A8 MOV X3, X19
	0x03BF73AC LDP X20, X19, [X31 + 0x20]
	0x03BF73B0 LDP X22, X21, [X31 + 0x10]
	0x03BF73B4 MOV X4, X31
	0x03BF73B8 LDP X30, X23, [X31], #0x30
	0x03BF73BC B 0x3C5DA90

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7ED000
	006 Move X2, [X21+2160]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51191808
	012 Add X0, X0, 1897
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+2160], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void SetTriggerID(System.Int32 id)

Disassembly:
	0x03BF7404 ADRP X19, 0x567000
	0x03BF7408 LDR W8, [X0 + 0xE0]
	0x03BF740C LDR X19, [X19 + 0x810]
	0x03BF7410 CBNZ W8, 0x3BF7418
	0x03BF7414 BL 0x1C16DFC
	0x03BF7418 MOV X0, X31
	0x03BF741C BL 0x3C5DB88
	0x03BF7420 MOV X2, X0
	0x03BF7424 MOV X3, X1
	0x03BF7428 ADD X0, X31, 0x0
	0x03BF742C MOV X1, X2
	0x03BF7430 MOV X2, X3
	0x03BF7434 STP X31, X31, [X31]
	0x03BF7438 BL 0x3BF7228
	0x03BF743C LDR X8, [X19]
	0x03BF7440 LDR V0, [X31]
	0x03BF7444 LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7ED000
	006 Move X2, [X21+2168]
	007 Move W19, W1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51339264
	012 Add X0, X0, 2400
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+2168], X0
	016 Move X0, X20
	017 Move W1, W19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void ResetTriggerString(System.String name)

Disassembly:
	0x03BF748C BL 0x1C16CF4
	0x03BF7490 ADRP X0, 0x525000
	0x03BF7494 LDR X0, [X0 + 0x230]
	0x03BF7498 BL 0x1C16CF4
	0x03BF749C MOVZ W8, 0x1
	0x03BF74A0 STRB W8, [X21 + 0x8BF]
	0x03BF74A4 LDR X0, [X20]
	0x03BF74A8 LDR W8, [X0 + 0xE0]
	0x03BF74AC CBNZ W8, 0x3BF74B4
	0x03BF74B0 BL 0x1C16DFC
	0x03BF74B4 ADD X0, X31, 0x0
	0x03BF74B8 MOV X1, X31
	0x03BF74BC BL 0x3C5E888
	0x03BF74C0 TBZ X0, 0x0, 0x3BF74EC
	0x03BF74C4 LDR X0, [X20]
	0x03BF74C8 ADRP X20, 0x567000
	0x03BF74CC LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7ED000
	006 Move X2, [X21+2176]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51208192
	012 Add X0, X0, 1627
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+2176], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Boolean IsParameterControlledByCurveID(System.Int32 id)

Disassembly:
	0x03BF7514 MOV X19, X0
	0x03BF7518 ADRP X0, 0x567000
	0x03BF751C LDR X0, [X0 + 0x820]
	0x03BF7520 BL 0x1C16D08
	0x03BF7524 MOV X1, X0
	0x03BF7528 MOV X0, X19
	0x03BF752C MOV X2, X31
	0x03BF7530 BL 0x337B498
	0x03BF7534 ADRP X0, 0x567000
	0x03BF7538 LDR X0, [X0 + 0x828]
	0x03BF753C BL 0x1C16D08
	0x03BF7540 MOV X1, X0
	0x03BF7544 MOV X0, X19
	0x03BF7548 BL 0x1C16DEC
	0x03BF754C LDP X8, X1, [X0]
	0x03BF7550 MOV X0, X8
	0x03BF7554 RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7ED000
	006 Move X2, [X21+2184]
	007 Move W19, W1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51314688
	012 Add X0, X0, 2782
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+2184], X0
	016 Move X0, X20
	017 Move W1, W19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

