Type: UnityEngine.TextGenerator

Method: System.Void .ctor()

Disassembly:
	0x03CCF790 CBNZ X1, 0x3CCF7A8
	0x03CCF794 ADRP X0, 0xFFFFFFFFFCE3C000

ISIL:
	001 Move W1, 50

Method: System.Void .ctor(System.Int32 initialCapacity)

Disassembly:
	0x03CCF798 ADD X0, X0, 0xA49
	0x03CCF79C BL 0x1C16CB8
	0x03CCF7A0 MOV X1, X0
	0x03CCF7A4 STR X0, [X20 + 0x3A8]
	0x03CCF7A8 MOV X0, X19
	0x03CCF7AC LDP X20, X19, [X31 + 0x10]
	0x03CCF7B0 LDR X30, [X31], #0x20
	0x03CCF7B4 BR X1
	0x03CCF7B8 SUB X31, X31, 0x110
	0x03CCF7BC STP D13, D12, [X31 + 0x80]
	0x03CCF7C0 STP D11, D10, [X31 + 0x90]
	0x03CCF7C4 STP D9, D8, [X31 + 0xA0]
	0x03CCF7C8 STP X29, X30, [X31 + 0xB0]
	0x03CCF7CC STP X28, X27, [X31 + 0xC0]
	0x03CCF7D0 STP X26, X25, [X31 + 0xD0]
	0x03CCF7D4 STP X24, X23, [X31 + 0xE0]
	0x03CCF7D8 STP X22, X21, [X31 + 0xF0]
	0x03CCF7DC STP X20, X19, [X31 + 0x100]
	0x03CCF7E0 ADRP X24, 0x718000
	0x03CCF7E4 LDR X20, [X31 + 0x158]
	0x03CCF7E8 LDRB W21, [X31 + 0x150]
	0x03CCF7EC LDRB W27, [X31 + 0x148]
	0x03CCF7F0 LDR V12, [X31 + 0x140]
	0x03CCF7F4 LDR V13, [X31 + 0x138]
	0x03CCF7F8 LDR W22, [X31 + 0x130]
	0x03CCF7FC LDRB W23, [X31 + 0x128]
	0x03CCF800 LDR W28, [X31 + 0x120]
	0x03CCF804 LDR W29, [X31 + 0x118]
	0x03CCF808 LDR W19, [X31 + 0x110]
	0x03CCF80C LDR X8, [X24 + 0x3E8]
	0x03CCF810 MOV V8.16B, V7.16B
	0x03CCF814 MOV V9.16B, V6.16B
	0x03CCF818 MOV W12, W7
	0x03CCF81C MOV W13, W6
	0x03CCF820 MOV W14, W4
	0x03CCF824 MOV V10.16B, V5.16B
	0x03CCF828 MOV V11.16B, V4.16B
	0x03CCF82C MOV W4, W3
	0x03CCF830 STP S0, S1, [X31 + 0x70]
	0x03CCF834 STP S2, S3, [X31 + 0x78]
	0x03CCF838 CBNZ X8, 0x3CCF878
	0x03CCF83C STP X0, X1, [X31 + 0x58]
	0x03CCF840 ADRP X0, 0xFFFFFFFFFCE52000
	0x03CCF844 ADD X0, X0, 0x553
	0x03CCF848 STP W14, W12, [X31 + 0x68]
	0x03CCF84C MOV W26, W4
	0x03CCF850 MOV X25, X2
	0x03CCF854 STP W5, W13, [X31 + 0x50]
	0x03CCF858 BL 0x1C16CB8
	0x03CCF85C LDP W5, W13, [X31 + 0x50]
	0x03CCF860 LDP W14, W12, [X31 + 0x68]
	0x03CCF864 MOV X8, X0
	0x03CCF868 LDP X0, X1, [X31 + 0x58]
	0x03CCF86C MOV X2, X25
	0x03CCF870 MOV W4, W26
	0x03CCF874 STR X8, [X24 + 0x3E8]
	0x03CCF878 AND W9, W21, 0x1
	0x03CCF87C AND W10, W27, 0x1
	0x03CCF880 AND W11, W23, 0x1
	0x03CCF884 AND W6, W5, 0x1
	0x03CCF888 AND W7, W13, 0x1
	0x03CCF88C ADD X3, X31, 0x70
	0x03CCF890 MOV V0.16B, V11.16B
	0x03CCF894 MOV V1.16B, V10.16B
	0x03CCF898 MOV V2.16B, V9.16B
	0x03CCF89C MOV V3.16B, V8.16B
	0x03CCF8A0 MOV V4.16B, V13.16B
	0x03CCF8A4 MOV V5.16B, V12.16B
	0x03CCF8A8 MOV W5, W14
	0x03CCF8AC STR X20, [X31 + 0x40]
	0x03CCF8B0 STR W22, [X31 + 0x28]
	0x03CCF8B4 STR W28, [X31 + 0x18]
	0x03CCF8B8 STR W29, [X31 + 0x10]
	0x03CCF8BC STR W19, [X31 + 0x8]
	0x03CCF8C0 STRB W9, [X31 + 0x38]
	0x03CCF8C4 STRB W10, [X31 + 0x30]
	0x03CCF8C8 STRB W11, [X31 + 0x20]
	0x03CCF8CC STR W12, [X31]
	0x03CCF8D0 BLR X8
	0x03CCF8D4 LDP X20, X19, [X31 + 0x100]
	0x03CCF8D8 LDP X22, X21, [X31 + 0xF0]
	0x03CCF8DC LDP X24, X23, [X31 + 0xE0]
	0x03CCF8E0 LDP X26, X25, [X31 + 0xD0]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X21, 0x719000
	012 Move W8, [X21+917]
	013 Move W20, W1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {39}
	019 Move X0, 0x493000
	020 Move X0, [X0+3992]
	021 Call 0x1C17CF4
	022 Move X0, 0x493000
	023 Move X0, [X0+4000]
	024 Call 0x1C17CF4
	025 Move X0, 0x493000
	026 Move X0, [X0+4008]
	027 Call 0x1C17CF4
	028 Move X0, 0x493000
	029 Move X0, [X0+4016]
	030 Call 0x1C17CF4
	031 Move X0, 0x493000
	032 Move X0, [X0+4024]
	033 Call 0x1C17CF4
	034 Move X0, 0x493000
	035 Move X0, [X0+4032]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X21+917], W8
	039 Move X21, 0x493000
	040 Move X26, 0x493000
	041 Move X25, 0x493000
	042 Move X24, 0x493000
	043 Move X23, 0x493000
	044 Move X22, 0x493000
	045 Move X21, [X21+4016]
	046 Move X26, [X26+4008]
	047 Move X25, [X25+4024]
	048 Move X24, [X24+3992]
	049 Move X23, [X23+4032]
	050 Move X22, [X22+4000]
	051 Move X0, X19
	052 Move X1, X31
	053 Call Object..ctor, X0
	054 Move X27, 0x719000
	055 Move X8, [X27+944]
	056 Compare X8, 0
	057 JumpIfNotEqual {63}
	058 Move X0, -52047872
	059 Add X0, X0, 618
	060 Call 0x1C17CB8
	061 Move X8, X0
	062 Move [X27+944], X0
	063 NotImplemented "Instruction BLR not yet implemented."
	064 Move [X19+16], X0
	065 Move X0, [X21]
	066 Call 0x1C17F10
	067 Move X2, [X26]
	068 Add W20, W20, 1
	069 Move W1, W20
	070 ShiftRight W1, 30
	071 And W1, W1, 0x1FFFFFFF
	072 Move X21, X0
	073 Call List`1<UIVertex>..ctor, X0, X1
	074 Move [X19+136], X21
	075 Move X0, [X25]
	076 Call 0x1C17F10
	077 Move X2, [X24]
	078 Move W1, W20
	079 Move X21, X0
	080 Call List`1<UICharInfo>..ctor, X0, X1
	081 Move [X19+144], X21
	082 Move X0, [X23]
	083 Call 0x1C17F10
	084 Move X2, [X22]
	085 Move W1, 20
	086 Move X20, X0
	087 Call List`1<UILineInfo>..ctor, X0, X1
	088 Move [X19+152], X20
	089 Move X20, [X31+64]
	090 Move X19, [X31+72]
	091 Move X22, [X31+48]
	092 Move X21, [X31+56]
	093 Move X24, [X31+32]
	094 Move X23, [X31+40]
	095 Move X26, [X31+16]
	096 Move X25, [X31+24]
	097 Move X30, [X31+80]
	098 Move X27, [X31+88]
	099 Return 

Method: System.Void Finalize()

Disassembly:
	0x03CCF90C STP D11, D10, [X31 + 0x40]
	0x03CCF910 STP D9, D8, [X31 + 0x50]
	0x03CCF914 STP X29, X30, [X31 + 0x60]
	0x03CCF918 STP X28, X27, [X31 + 0x70]
	0x03CCF91C STP X26, X25, [X31 + 0x80]
	0x03CCF920 STP X24, X23, [X31 + 0x90]
	0x03CCF924 STP X22, X21, [X31 + 0xA0]
	0x03CCF928 STP X20, X19, [X31 + 0xB0]
	0x03CCF92C ADRP X25, 0x718000
	0x03CCF930 LDR X19, [X31 + 0x100]
	0x03CCF934 LDRB W29, [X31 + 0xF8]
	0x03CCF938 LDRB W27, [X31 + 0xF0]
	0x03CCF93C LDR W20, [X31 + 0xE8]
	0x03CCF940 LDRB W28, [X31 + 0xE0]
	0x03CCF944 LDR W21, [X31 + 0xD8]
	0x03CCF948 LDR W22, [X31 + 0xD0]
	0x03CCF94C LDR W23, [X31 + 0xC8]
	0x03CCF950 LDR X8, [X25 + 0x3E8]
	0x03CCF954 LDR W24, [X31 + 0xC0]
	0x03CCF958 MOV V8.16B, V5.16B
	0x03CCF95C MOV V9.16B, V4.16B
	0x03CCF960 MOV V10.16B, V3.16B
	0x03CCF964 MOV V11.16B, V2.16B
	0x03CCF968 MOV V12.16B, V1.16B
	0x03CCF96C MOV V13.16B, V0.16B
	0x03CCF970 CBNZ X8, 0x3CCF9B8
	0x03CCF974 STR X0, [X31]
	0x03CCF978 ADRP X0, 0xFFFFFFFFFCE52000
	0x03CCF97C ADD X0, X0, 0x553
	0x03CCF980 STR W5, [X31 + 0x2C]
	0x03CCF984 MOV W26, W4
	0x03CCF988 STP X2, X3, [X31 + 0x18]
	0x03CCF98C STR X1, [X31 + 0x10]
	0x03CCF990 STP W6, W7, [X31 + 0x8]
	0x03CCF994 BL 0x1C16CB8
	0x03CCF998 LDP W6, W7, [X31 + 0x8]
	0x03CCF99C LDP X1, X2, [X31 + 0x10]
	0x03CCF9A0 LDR X3, [X31 + 0x20]
	0x03CCF9A4 LDR W5, [X31 + 0x2C]
	0x03CCF9A8 MOV X8, X0
	0x03CCF9AC LDR X0, [X31]
	0x03CCF9B0 MOV W4, W26
	0x03CCF9B4 STR X8, [X25 + 0x3E8]
	0x03CCF9B8 STR X19, [X31 + 0x100]
	0x03CCF9BC STR W20, [X31 + 0xE8]
	0x03CCF9C0 STR W21, [X31 + 0xD8]
	0x03CCF9C4 STR W22, [X31 + 0xD0]
	0x03CCF9C8 STR W23, [X31 + 0xC8]
	0x03CCF9CC STR W24, [X31 + 0xC0]
	0x03CCF9D0 AND W9, W29, 0x1
	0x03CCF9D4 AND W10, W27, 0x1
	0x03CCF9D8 AND W11, W28, 0x1
	0x03CCF9DC MOV V0.16B, V13.16B
	0x03CCF9E0 MOV V1.16B, V12.16B
	0x03CCF9E4 MOV V2.16B, V11.16B
	0x03CCF9E8 MOV V3.16B, V10.16B
	0x03CCF9EC MOV V4.16B, V9.16B
	0x03CCF9F0 MOV V5.16B, V8.16B
	0x03CCF9F4 LDP X20, X19, [X31 + 0xB0]
	0x03CCF9F8 LDP X22, X21, [X31 + 0xA0]
	0x03CCF9FC LDP X24, X23, [X31 + 0x90]
	0x03CCFA00 LDP X26, X25, [X31 + 0x80]
	0x03CCFA04 LDP X28, X27, [X31 + 0x70]
	0x03CCFA08 LDP X29, X30, [X31 + 0x60]
	0x03CCFA0C LDP D9, D8, [X31 + 0x50]
	0x03CCFA10 LDP D11, D10, [X31 + 0x40]
	0x03CCFA14 LDP D13, D12, [X31 + 0x30]
	0x03CCFA18 AND W6, W6, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x719000
	006 Move X20, 0x425000
	007 Move W8, [X21+918]
	008 Move X20, [X20+3584]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x425000
	015 Move X0, [X0+3584]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+918], W8
	019 Move X8, [X19]
	020 Move X1, [X20]
	021 NotImplemented "Instruction LDRH not yet implemented."
	022 Compare X9, 0
	023 JumpIfEqual {30}
	024 Move X10, [X8+176]
	025 Add X10, X10, 8
	026 NotImplemented "Instruction LDUR not yet implemented."
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Subtract X9, X9, 1
	029 Add X10, X10, 16
	030 Move X0, X19
	031 Move W2, W31
	032 Call 0x1C5D788
	033 NotImplemented "Instruction LDRSW not yet implemented."
	034 Add X8, X8, X9
	035 Add X0, X8, 312
	036 Move X8, [X0]
	037 Move X1, [X0+8]
	038 Move X0, X19
	039 NotImplemented "Instruction BLR not yet implemented."
	040 Move X0, X19
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move X1, X31
	044 Move X30, [X31+32]
	045 Move X21, [X31+40]
	046 Call Object.Finalize, X0
	047 Return 
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X21, X0
	050 Move X0, X21
	051 Call 0x3EB2AD0
	052 Move X20, [X0]
	053 Call 0x3EB2AE0
	054 Move X0, X19
	055 Move X1, X31
	056 Call Object.Finalize, X0
	057 Compare X20, 0
	058 JumpIfNotEqual {65}
	059 Move X20, [X31+16]
	060 Move X19, [X31+24]
	061 Move X30, [X31+32]
	062 Move X21, [X31+40]
	063 Return 
	064 Move X20, X31
	065 Move X0, X20
	066 Call 0x1C17F18
	067 Move X21, X0
	068 Move X0, X19
	069 Move X1, X31
	070 Call Object.Finalize, X0
	071 Compare X20, 0
	072 JumpIfNotEqual {75}
	073 Move X0, X21
	074 Call 0x1D2D690
	075 Move X0, X20
	076 Call 0x1C17F18
	077 Call 0x1991590

Method: System.Void System.IDisposable.Dispose()

Disassembly:
	0x03CCFA1C AND W7, W7, 0x1
	0x03CCFA20 STRB W9, [X31 + 0xF8]
	0x03CCFA24 STRB W10, [X31 + 0xF0]
	0x03CCFA28 STRB W11, [X31 + 0xE0]
	0x03CCFA2C ADD X31, X31, 0xC0
	0x03CCFA30 BR X8
	0x03CCFA34 SUB X31, X31, 0x50
	0x03CCFA38 STP D11, D10, [X31 + 0x10]
	0x03CCFA3C STP D9, D8, [X31 + 0x20]
	0x03CCFA40 STP X30, X21, [X31 + 0x30]
	0x03CCFA44 STP X20, X19, [X31 + 0x40]
	0x03CCFA48 ADRP X19, 0x718000
	0x03CCFA4C ADRP X20, 0x44F000
	0x03CCFA50 LDRB W8, [X19 + 0x3F0]
	0x03CCFA54 LDR X20, [X20 + 0x7E8]
	0x03CCFA58 TBNZ X8, 0x0, 0x3CCFA70
	0x03CCFA5C ADRP X0, 0x44F000
	0x03CCFA60 LDR X0, [X0 + 0x7E8]
	0x03CCFA64 BL 0x1C16CF4
	0x03CCFA68 MOVZ W8, 0x1
	0x03CCFA6C STRB W8, [X19 + 0x3F0]
	0x03CCFA70 LDR X8, [X20]
	0x03CCFA74 MOVN W9, 0x0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, X0
	006 Move X0, [X0+16]
	007 Move X1, X31
	008 Move X2, X31
	009 Call IntPtr.op_Inequality, X0, X1
	010 Move TEMP, X0
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfNotEqual {27}
	014 Move X21, 0x719000
	015 Move X8, [X21+952]
	016 Move X20, [X19+16]
	017 Compare X8, 0
	018 JumpIfNotEqual {24}
	019 Move X0, -52056064
	020 Add X0, X0, 777
	021 Call 0x1C17CB8
	022 Move X8, X0
	023 Move [X21+952], X0
	024 Move X0, X20
	025 NotImplemented "Instruction BLR not yet implemented."
	026 Move [X19+16], X31
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Return 

Method: System.Int32 get_characterCountVisible()

Disassembly:
	0x03CCFAB4 ADRP X19, 0x424000
	0x03CCFAB8 LDR X19, [X19 + 0x5A0]
	0x03CCFABC ADRP X21, 0x709000
	0x03CCFAC0 LDRB W9, [X21 + 0xDDE]
	0x03CCFAC4 LDR X8, [X19]
	0x03CCFAC8 LDR X8, [X8 + 0xB8]
	0x03CCFACC LDR V9, [X8]
	0x03CCFAD0 LDR V8, [X8 + 0x8]
	0x03CCFAD4 CBNZ W9, 0x3CCFAF0
	0x03CCFAD8 MOV X0, X19
	0x03CCFADC BL 0x1C16CF4
	0x03CCFAE0 LDR X8, [X19]
	0x03CCFAE4 MOVZ W9, 0x1
	0x03CCFAE8 STRB W9, [X21 + 0xDDE]
	0x03CCFAEC LDR X8, [X8 + 0xB8]
	0x03CCFAF0 LDR X9, [X20]
	0x03CCFAF4 LDUR V11, [X8 + 0x54]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x719000
	005 Move X8, [X20+928]
	006 Move X19, X0
	007 Compare X8, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -52047872
	010 Add X0, X0, 570
	011 Call 0x1C17CB8
	012 Move X8, X0
	013 Move [X20+928], X0
	014 Move X0, X19
	015 NotImplemented "Instruction BLR not yet implemented."
	016 Move X20, [X31+16]
	017 Move X19, [X31+24]
	018 Subtract W0, W0, 1
	019 Move X30, [X31+32]
	020 Return X0

Method: UnityEngine.TextGenerationSettings ValidatedSettings(UnityEngine.TextGenerationSettings settings)

Disassembly:
	0x03CCFB34 LDR X9, [X20]
	0x03CCFB38 LDP X30, X21, [X31 + 0x30]
	0x03CCFB3C LDR X8, [X8]
	0x03CCFB40 LDR X9, [X9 + 0xB8]
	0x03CCFB44 LDR X8, [X8 + 0xB8]
	0x03CCFB48 LDP S0, S1, [X8]
	0x03CCFB4C LDP S2, S3, [X8 + 0x8]
	0x03CCFB50 STUR D9, [X9 + 0x14]
	0x03CCFB54 STR S8, [X9 + 0x1C]
	0x03CCFB58 STR D11, [X9 + 0x20]
	0x03CCFB5C STR S10, [X9 + 0x28]
	0x03CCFB60 LDR V4, [X31]
	0x03CCFB64 STR W19, [X9 + 0x3C]
	0x03CCFB68 LDP X20, X19, [X31 + 0x40]
	0x03CCFB6C LDP D9, D8, [X31 + 0x20]
	0x03CCFB70 LDP D11, D10, [X31 + 0x10]
	0x03CCFB74 STP S0, S1, [X9 + 0x40]
	0x03CCFB78 STP S2, S3, [X9 + 0x48]
	0x03CCFB7C STP S0, S1, [X9 + 0x50]
	0x03CCFB80 STP S2, S3, [X9 + 0x58]
	0x03CCFB84 STP S0, S1, [X9 + 0x60]
	0x03CCFB88 STP S2, S3, [X9 + 0x68]
	0x03CCFB8C STP S0, S1, [X9 + 0x70]
	0x03CCFB90 STUR V4, [X9 + 0x2C]
	0x03CCFB94 STP S2, S3, [X9 + 0x78]
	0x03CCFB98 ADD X31, X31, 0x50
	0x03CCFB9C RET
	0x03CCFBA0 STR X30, [X31 - 0x40]!
	0x03CCFBA4 STP X24, X23, [X31 + 0x10]
	0x03CCFBA8 STP X22, X21, [X31 + 0x20]
	0x03CCFBAC STP X20, X19, [X31 + 0x30]
	0x03CCFBB0 ADRP X20, 0x718000
	0x03CCFBB4 ADRP X23, 0x492000
	0x03CCFBB8 LDRB W8, [X20 + 0x3F1]
	0x03CCFBBC LDR X23, [X23 + 0xFE8]
	0x03CCFBC0 MOV X19, X0
	0x03CCFBC4 TBNZ X8, 0x0, 0x3CCFBE8
	0x03CCFBC8 ADRP X0, 0x492000
	0x03CCFBCC LDR X0, [X0 + 0xFF0]
	0x03CCFBD0 BL 0x1C16CF4
	0x03CCFBD4 ADRP X0, 0x492000
	0x03CCFBD8 LDR X0, [X0 + 0xFE8]
	0x03CCFBDC BL 0x1C16CF4
	0x03CCFBE0 MOVZ W8, 0x1
	0x03CCFBE4 STRB W8, [X20 + 0x3F1]
	0x03CCFBE8 LDR X8, [X23]
	0x03CCFBEC ADRP X24, 0x492000
	0x03CCFBF0 LDR X8, [X8 + 0xB8]
	0x03CCFBF4 LDR X20, [X8]
	0x03CCFBF8 LDR X24, [X24 + 0xFF0]
	0x03CCFBFC MOV X0, X20
	0x03CCFC00 MOV X1, X19
	0x03CCFC04 MOV X2, X31
	0x03CCFC08 BL 0x33C0DE4
	0x03CCFC0C CBZ X0, 0x3CCFC2C
	0x03CCFC10 LDR X22, [X24]
	0x03CCFC14 MOV X21, X0
	0x03CCFC18 MOV X1, X22
	0x03CCFC1C BL 0x1C16E00
	0x03CCFC20 MOV X1, X0
	0x03CCFC24 CBNZ X0, 0x3CCFC30
	0x03CCFC28 B 0x3CCFC60
	0x03CCFC2C MOV X1, X31
	0x03CCFC30 LDR X8, [X23]
	0x03CCFC34 MOV X2, X20
	0x03CCFC38 LDR X0, [X8 + 0xB8]
	0x03CCFC3C BL 0x1C24138
	0x03CCFC40 CMP X20, X0
	0x03CCFC44 MOV X20, X0
	0x03CCFC48 B.NE 0x3CCFBFC
	0x03CCFC4C LDP X20, X19, [X31 + 0x30]
	0x03CCFC50 LDP X22, X21, [X31 + 0x20]
	0x03CCFC54 LDP X24, X23, [X31 + 0x10]
	0x03CCFC58 LDR X30, [X31], #0x40
	0x03CCFC5C RET
	0x03CCFC60 MOV X0, X21
	0x03CCFC64 MOV X1, X22
	0x03CCFC68 BL 0x1C171E0
	0x03CCFC6C STR X30, [X31 - 0x40]!
	0x03CCFC70 STP X24, X23, [X31 + 0x10]
	0x03CCFC74 STP X22, X21, [X31 + 0x20]
	0x03CCFC78 STP X20, X19, [X31 + 0x30]
	0x03CCFC7C ADRP X20, 0x718000
	0x03CCFC80 ADRP X23, 0x492000
	0x03CCFC84 LDRB W8, [X20 + 0x3F2]
	0x03CCFC88 LDR X23, [X23 + 0xFE8]
	0x03CCFC8C MOV X19, X0
	0x03CCFC90 TBNZ X8, 0x0, 0x3CCFCB4
	0x03CCFC94 ADRP X0, 0x492000
	0x03CCFC98 LDR X0, [X0 + 0xFF0]
	0x03CCFC9C BL 0x1C16CF4
	0x03CCFCA0 ADRP X0, 0x492000
	0x03CCFCA4 LDR X0, [X0 + 0xFE8]
	0x03CCFCA8 BL 0x1C16CF4
	0x03CCFCAC MOVZ W8, 0x1
	0x03CCFCB0 STRB W8, [X20 + 0x3F2]
	0x03CCFCB4 LDR X8, [X23]
	0x03CCFCB8 ADRP X24, 0x492000
	0x03CCFCBC LDR X8, [X8 + 0xB8]
	0x03CCFCC0 LDR X20, [X8]
	0x03CCFCC4 LDR X24, [X24 + 0xFF0]
	0x03CCFCC8 MOV X0, X20
	0x03CCFCCC MOV X1, X19
	0x03CCFCD0 MOV X2, X31
	0x03CCFCD4 BL 0x33C0FDC
	0x03CCFCD8 CBZ X0, 0x3CCFCF8
	0x03CCFCDC LDR X22, [X24]
	0x03CCFCE0 MOV X21, X0
	0x03CCFCE4 MOV X1, X22
	0x03CCFCE8 BL 0x1C16E00
	0x03CCFCEC MOV X1, X0
	0x03CCFCF0 CBNZ X0, 0x3CCFCFC
	0x03CCFCF4 B 0x3CCFD2C
	0x03CCFCF8 MOV X1, X31
	0x03CCFCFC LDR X8, [X23]
	0x03CCFD00 MOV X2, X20
	0x03CCFD04 LDR X0, [X8 + 0xB8]
	0x03CCFD08 BL 0x1C24138
	0x03CCFD0C CMP X20, X0
	0x03CCFD10 MOV X20, X0
	0x03CCFD14 B.NE 0x3CCFCC8
	0x03CCFD18 LDP X20, X19, [X31 + 0x30]
	0x03CCFD1C LDP X22, X21, [X31 + 0x20]
	0x03CCFD20 LDP X24, X23, [X31 + 0x10]
	0x03CCFD24 LDR X30, [X31], #0x40
	0x03CCFD28 RET
	0x03CCFD2C MOV X0, X21
	0x03CCFD30 MOV X1, X22
	0x03CCFD34 BL 0x1C171E0
	0x03CCFD38 STR X30, [X31 - 0x20]!
	0x03CCFD3C STP X20, X19, [X31 + 0x10]
	0x03CCFD40 ADRP X20, 0x718000
	0x03CCFD44 LDR X1, [X20 + 0x3F8]
	0x03CCFD48 MOV X19, X0
	0x03CCFD4C CBNZ X1, 0x3CCFD64
	0x03CCFD50 ADRP X0, 0xFFFFFFFFFCE2E000
	0x03CCFD54 ADD X0, X0, 0xC0E
	0x03CCFD58 BL 0x1C16CB8
	0x03CCFD5C MOV X1, X0
	0x03CCFD60 STR X0, [X20 + 0x3F8]
	0x03CCFD64 MOV X0, X19
	0x03CCFD68 LDP X20, X19, [X31 + 0x10]
	0x03CCFD6C LDR X30, [X31], #0x20
	0x03CCFD70 BR X1
	0x03CCFD74 STR X30, [X31 - 0x20]!
	0x03CCFD78 STP X20, X19, [X31 + 0x10]
	0x03CCFD7C ADRP X20, 0x718000
	0x03CCFD80 LDR X1, [X20 + 0x408]
	0x03CCFD84 MOV X19, X0
	0x03CCFD88 CBNZ X1, 0x3CCFDA0
	0x03CCFD8C ADRP X0, 0xFFFFFFFFFCE3E000
	0x03CCFD90 ADD X0, X0, 0xBDE
	0x03CCFD94 BL 0x1C16CB8
	0x03CCFD98 MOV X1, X0
	0x03CCFD9C STR X0, [X20 + 0x408]
	0x03CCFDA0 MOV X0, X19
	0x03CCFDA4 LDP X20, X19, [X31 + 0x10]
	0x03CCFDA8 LDR X30, [X31], #0x20
	0x03CCFDAC BR X1
	0x03CCFDB0 STP X30, X21, [X31 - 0x20]!
	0x03CCFDB4 STP X20, X19, [X31 + 0x10]
	0x03CCFDB8 ADRP X20, 0x718000
	0x03CCFDBC ADRP X21, 0x424000
	0x03CCFDC0 LDRB W8, [X20 + 0x410]
	0x03CCFDC4 LDR X21, [X21 + 0x598]
	0x03CCFDC8 MOV X19, X0
	0x03CCFDCC TBNZ X8, 0x0, 0x3CCFDE4
	0x03CCFDD0 ADRP X0, 0x424000
	0x03CCFDD4 LDR X0, [X0 + 0x598]
	0x03CCFDD8 BL 0x1C16CF4
	0x03CCFDDC MOVZ W8, 0x1
	0x03CCFDE0 STRB W8, [X20 + 0x410]

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+96], X30
	003 Move [X31+112], X24
	004 Move [X31+120], X23
	005 Move [X31+128], X22
	006 Move [X31+136], X21
	007 Move [X31+144], X20
	008 Move [X31+152], X19
	009 Move X21, 0x719000
	010 Move X24, 0x425000
	011 Move X19, X8
	012 Move W8, [X21+919]
	013 Move X24, [X24+1432]
	014 Move X20, X1
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {36}
	019 Move X0, 0x425000
	020 Move X0, [X0+2600]
	021 Call 0x1C17CF4
	022 Move X0, 0x425000
	023 Move X0, [X0+2512]
	024 Call 0x1C17CF4
	025 Move X0, 0x425000
	026 Move X0, [X0+1432]
	027 Call 0x1C17CF4
	028 Move X0, 0x493000
	029 Move X0, [X0+4040]
	030 Call 0x1C17CF4
	031 Move X0, 0x493000
	032 Move X0, [X0+4048]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X21+919], W8
	036 Move X0, [X24]
	037 Move X21, [X20]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Move X0, X21
	043 Move X1, X31
	044 Move X2, X31
	045 Call Object.op_Inequality, X0, X1
	046 Move TEMP, X0
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfNotEqual {68}
	050 Move X21, [X20]
	051 Compare X21, 0
	052 JumpIfEqual {211}
	053 Move X22, 0x719000
	054 Move X8, [X22+1024]
	055 Compare X8, 0
	056 JumpIfNotEqual {62}
	057 Move X0, -52170752
	058 Add X0, X0, 3006
	059 Call 0x1C17CB8
	060 Move X8, X0
	061 Move [X22+1024], X0
	062 Move X0, X21
	063 NotImplemented "Instruction BLR not yet implemented."
	064 Move TEMP, X0
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfEqual {194}
	068 Move W8, [X20+24]
	069 Compare W8, 0
	070 JumpIfNotEqual {74}
	071 Move W8, [X20+40]
	072 Compare W8, 0
	073 JumpIfEqual {132}
	074 Move X0, [X24]
	075 Move X21, [X20]
	076 Move W8, [X0+224]
	077 Compare W8, 0
	078 JumpIfNotEqual {80}
	079 Call 0x1C17DFC
	080 Move X0, X21
	081 Move X1, X31
	082 Move X2, X31
	083 Call Object.op_Inequality, X0, X1
	084 Move TEMP, X0
	085 And TEMP, TEMP, 1
	086 Compare TEMP, 1
	087 JumpIfNotEqual {130}
	088 Move X8, 0x425000
	089 Move X21, [X20]
	090 Move X8, [X8+2512]
	091 Move W1, 1
	092 Move X0, [X8]
	093 Call 0x1C17D6C
	094 Move X8, [X20]
	095 Compare X8, 0
	096 JumpIfEqual {211}
	097 Move X22, X0
	098 Move X0, X8
	099 Move X1, X31
	100 Call Object.get_name, X0
	101 Compare X22, 0
	102 JumpIfEqual {211}
	103 Move X23, X0
	104 Compare X0, 0
	105 JumpIfEqual {112}
	106 Move X8, [X22]
	107 Move X0, X23
	108 Move X1, [X8+64]
	109 Call 0x1C17E00
	110 Compare X0, 0
	111 JumpIfEqual {213}
	112 Move W8, [X22+24]
	113 Compare W8, 0
	114 JumpIfEqual {212}
	115 Move [X22+32], X23
	116 Move X8, 0x425000
	117 Move X8, [X8+2600]
	118 Move X0, [X8]
	119 Move W8, [X0+224]
	120 Compare W8, 0
	121 JumpIfNotEqual {123}
	122 Call 0x1C17DFC
	123 Move X8, 0x493000
	124 Move X8, [X8+4040]
	125 Move X0, X21
	126 Move X2, X22
	127 Move X3, X31
	128 Move X1, [X8]
	129 Call Debug.LogWarningFormat, X0, X1, X2
	130 Move [X20+24], W31
	131 Move [X20+40], W31
	132 Move W8, [X20+49]
	133 Move TEMP, X8
	134 And TEMP, TEMP, 1
	135 Compare TEMP, 1
	136 JumpIfNotEqual {194}
	137 Move X0, [X24]
	138 Move X21, [X20]
	139 Move W8, [X0+224]
	140 Compare W8, 0
	141 JumpIfNotEqual {143}
	142 Call 0x1C17DFC
	143 Move X0, X21
	144 Move X1, X31
	145 Move X2, X31
	146 Call Object.op_Inequality, X0, X1
	147 Move TEMP, X0
	148 And TEMP, TEMP, 1
	149 Compare TEMP, 1
	150 JumpIfNotEqual {193}
	151 Move X8, 0x425000
	152 Move X21, [X20]
	153 Move X8, [X8+2512]
	154 Move W1, 1
	155 Move X0, [X8]
	156 Call 0x1C17D6C
	157 Move X8, [X20]
	158 Compare X8, 0
	159 JumpIfEqual {211}
	160 Move X22, X0
	161 Move X0, X8
	162 Move X1, X31
	163 Call Object.get_name, X0
	164 Compare X22, 0
	165 JumpIfEqual {211}
	166 Move X23, X0
	167 Compare X0, 0
	168 JumpIfEqual {175}
	169 Move X8, [X22]
	170 Move X0, X23
	171 Move X1, [X8+64]
	172 Call 0x1C17E00
	173 Compare X0, 0
	174 JumpIfEqual {213}
	175 Move W8, [X22+24]
	176 Compare W8, 0
	177 JumpIfEqual {212}
	178 Move [X22+32], X23
	179 Move X8, 0x425000
	180 Move X8, [X8+2600]
	181 Move X0, [X8]
	182 Move W8, [X0+224]
	183 Compare W8, 0
	184 JumpIfNotEqual {186}
	185 Call 0x1C17DFC
	186 Move X8, 0x493000
	187 Move X8, [X8+4048]
	188 Move X0, X21
	189 Move X2, X22
	190 Move X3, X31
	191 Move X1, [X8]
	192 Call Debug.LogWarningFormat, X0, X1, X2
	193 Move [X20+49], W31
	194 Add X0, X31, 0
	195 Move W2, 96
	196 Move X1, X20
	197 Call 0x3EB2AC0
	198 Add X1, X31, 0
	199 Move W2, 96
	200 Move X0, X19
	201 Call 0x3EB2AC0
	202 Move X20, [X31+144]
	203 Move X19, [X31+152]
	204 Move X22, [X31+128]
	205 Move X21, [X31+136]
	206 Move X24, [X31+112]
	207 Move X23, [X31+120]
	208 Move X30, [X31+96]
	209 Add X31, X31, 160
	210 Return X0
	211 Call 0x1C17F20
	212 Call 0x1C17F28
	213 Call 0x1C17F44
	214 Move X1, X31
	215 Call 0x1C17DEC

Method: System.Void Invalidate()

Disassembly:
	0x03CCFE20 MOV X0, X19
	0x03CCFE24 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X0+128], W31
	002 Return 

Method: System.Void GetCharacters(System.Collections.Generic.List`1<UnityEngine.UICharInfo> characters)

Disassembly:
	0x03CCFE28 MOV X1, X31
	0x03CCFE2C LDP X30, X21, [X31], #0x20
	0x03CCFE30 BR X2
	0x03CCFE34 STP X30, X21, [X31 - 0x20]!
	0x03CCFE38 STP X20, X19, [X31 + 0x10]
	0x03CCFE3C ADRP X21, 0x718000
	0x03CCFE40 LDR X2, [X21 + 0x420]
	0x03CCFE44 MOV X19, X1
	0x03CCFE48 MOV X20, X0
	0x03CCFE4C CBNZ X2, 0x3CCFE64
	0x03CCFE50 ADRP X0, 0xFFFFFFFFFCE32000
	0x03CCFE54 ADD X0, X0, 0x8C1
	0x03CCFE58 BL 0x1C16CB8
	0x03CCFE5C MOV X2, X0
	0x03CCFE60 STR X0, [X21 + 0x420]
	0x03CCFE64 MOV X0, X20
	0x03CCFE68 MOV X1, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x719000
	006 Move X2, [X21+976]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -52154368
	012 Add X0, X0, 1864
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+976], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void GetLines(System.Collections.Generic.List`1<UnityEngine.UILineInfo> lines)

Disassembly:
	0x03CCFEB0 LDR X8, [X8 + 0xB8]
	0x03CCFEB4 LDR X8, [X8]
	0x03CCFEB8 CBZ X8, 0x3CCFED0
	0x03CCFEBC LDR X9, [X8 + 0x18]
	0x03CCFEC0 LDR X0, [X8 + 0x40]
	0x03CCFEC4 LDR X2, [X8 + 0x28]
	0x03CCFEC8 MOV X1, X19
	0x03CCFECC BLR X9
	0x03CCFED0 CBZ X19, 0x3CCFF00
	0x03CCFED4 LDR X8, [X19 + 0x18]
	0x03CCFED8 CBZ X8, 0x3CCFEF4
	0x03CCFEDC LDR X2, [X8 + 0x18]
	0x03CCFEE0 LDR X0, [X8 + 0x40]
	0x03CCFEE4 LDR X1, [X8 + 0x28]
	0x03CCFEE8 LDP X20, X19, [X31 + 0x10]
	0x03CCFEEC LDP X30, X21, [X31], #0x20
	0x03CCFEF0 BR X2

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x719000
	006 Move X2, [X21+984]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -52219904
	012 Add X0, X0, 2182
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+984], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void GetVertices(System.Collections.Generic.List`1<UnityEngine.UIVertex> vertices)

Disassembly:
	0x03CCFF38 MOV X0, X20
	0x03CCFF3C LDP X20, X19, [X31 + 0x10]
	0x03CCFF40 LDP X30, X21, [X31], #0x20
	0x03CCFF44 BR X2
	0x03CCFF48 STP X30, X21, [X31 - 0x20]!
	0x03CCFF4C STP X20, X19, [X31 + 0x10]
	0x03CCFF50 ADRP X21, 0x718000
	0x03CCFF54 LDR X2, [X21 + 0x418]
	0x03CCFF58 MOV W19, W1
	0x03CCFF5C MOV X20, X0
	0x03CCFF60 CBNZ X2, 0x3CCFF78
	0x03CCFF64 ADRP X0, 0xFFFFFFFFFCE3A000
	0x03CCFF68 ADD X0, X0, 0xD5B
	0x03CCFF6C BL 0x1C16CB8
	0x03CCFF70 MOV X2, X0
	0x03CCFF74 STR X0, [X21 + 0x418]
	0x03CCFF78 MOV X0, X20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x719000
	006 Move X2, [X21+968]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -52056064
	012 Add X0, X0, 836
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+968], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Single GetPreferredWidth(System.String str, UnityEngine.TextGenerationSettings settings)

Disassembly:
	0x03CCFFC0 ADRP X8, 0xFFFFFFFFFDF3F000
	0x03CCFFC4 ADD X8, X8, 0x940
	0x03CCFFC8 STR X8, [X19 + 0x18]
	0x03CCFFCC B 0x3CCFFE4
	0x03CCFFD0 CBZ X20, 0x3CCFFFC
	0x03CCFFD4 LDR X8, [X19 + 0x10]
	0x03CCFFD8 LDR X9, [X19 + 0x20]
	0x03CCFFDC STR X8, [X19 + 0x18]
	0x03CCFFE0 STR X9, [X19 + 0x40]
	0x03CCFFE4 ADRP X8, 0xFFFFFFFFFDF3F000
	0x03CCFFE8 ADD X8, X8, 0x900
	0x03CCFFEC STR X8, [X19 + 0x38]
	0x03CCFFF0 LDP X20, X19, [X31 + 0x10]
	0x03CCFFF4 LDP X30, X21, [X31], #0x20
	0x03CCFFF8 RET
	0x03CCFFFC ADRP X1, 0xFFFFFFFFFCE4C000
	0x03CD0000 ADD X1, X1, 0xEE3
	0x03CD0004 MOV X0, X31
	0x03CD0008 BL 0x1C16F3C
	0x03CD000C MOV X1, X31
	0x03CD0010 BL 0x1C16DEC
	0x03CD0014 LDR X8, [X0 + 0x40]
	0x03CD0018 LDR X2, [X0 + 0x18]
	0x03CD001C LDR X1, [X0 + 0x28]
	0x03CD0020 MOV X0, X8

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+96], X30
	003 Move [X31+112], X20
	004 Move [X31+120], X19
	005 Move X8, X2
	006 NotImplemented "Instruction MOVI not yet implemented."
	007 Move W9, 1
	008 Move X19, X1
	009 Move X20, X0
	010 Move [X2+64], D0
	011 Move [X2+60], W9
	012 Add X0, X31, 0
	013 Move W2, 96
	014 Move X1, X8
	015 Call 0x3EB2AC0
	016 Add X2, X31, 0
	017 Move X0, X20
	018 Move X1, X19
	019 Call TextGenerator.PopulateWithError, X0, X1, X2
	020 Move X0, X20
	021 Call TextGenerator.get_rectExtents, X0
	022 Move X20, [X31+112]
	023 Move X19, [X31+120]
	024 Move X30, [X31+96]
	025 Move V0, V2
	026 Add X31, X31, 128
	027 Return V0

Method: System.Single GetPreferredHeight(System.String str, UnityEngine.TextGenerationSettings settings)

Disassembly:
	0x03CD00CC STRB W31, [X19 + 0x18]
	0x03CD00D0 STUR W31, [X19 + 0x19]
	0x03CD00D4 STR D0, [X19 + 0x10]
	0x03CD00D8 STR W31, [X19 + 0x1C]
	0x03CD00DC LDP X20, X19, [X31 + 0x20]
	0x03CD00E0 LDP X22, X21, [X31 + 0x10]
	0x03CD00E4 LDP X30, X23, [X31], #0x30
	0x03CD00E8 RET
	0x03CD00EC MOV X1, X31
	0x03CD00F0 B 0x33BDD8C
	0x03CD00F4 LDR X0, [X0 + 0x10]
	0x03CD00F8 RET
	0x03CD00FC STR X1, [X0 + 0x10]
	0x03CD0100 RET
	0x03CD0104 LDR X0, [X0 + 0x18]
	0x03CD0108 RET
	0x03CD010C STR X1, [X0 + 0x18]
	0x03CD0110 RET
	0x03CD0114 LDR X0, [X0 + 0x20]
	0x03CD0118 RET
	0x03CD011C STR X1, [X0 + 0x20]
	0x03CD0120 RET
	0x03CD0124 LDR X0, [X0 + 0x28]
	0x03CD0128 RET

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+96], X30
	003 Move [X31+112], X20
	004 Move [X31+120], X19
	005 Move X8, X2
	006 Move W9, 1
	007 Move X19, X1
	008 Move X20, X0
	009 Move [X2+64], W9
	010 Move [X2+60], W9
	011 Add X0, X31, 0
	012 Move W2, 96
	013 Move X1, X8
	014 Call 0x3EB2AC0
	015 Add X2, X31, 0
	016 Move X0, X20
	017 Move X1, X19
	018 Call TextGenerator.PopulateWithError, X0, X1, X2
	019 Move X0, X20
	020 Call TextGenerator.get_rectExtents, X0
	021 Move X20, [X31+112]
	022 Move X19, [X31+120]
	023 Move X30, [X31+96]
	024 Move V0, V3
	025 Add X31, X31, 128
	026 Return V0

Method: System.Boolean PopulateWithErrors(System.String str, UnityEngine.TextGenerationSettings settings, UnityEngine.GameObject context)

Disassembly:
	0x03CD012C STR X1, [X0 + 0x28]
	0x03CD0130 RET
	0x03CD0134 LDR X0, [X0 + 0x30]
	0x03CD0138 RET
	0x03CD013C STR X1, [X0 + 0x30]
	0x03CD0140 RET
	0x03CD0144 STP X30, X25, [X31 - 0x40]!
	0x03CD0148 STP X24, X23, [X31 + 0x10]
	0x03CD014C STP X22, X21, [X31 + 0x20]
	0x03CD0150 STP X20, X19, [X31 + 0x30]
	0x03CD0154 ADRP X24, 0x717000
	0x03CD0158 ADRP X25, 0x489000
	0x03CD015C ADRP X23, 0x492000
	0x03CD0160 ADRP X22, 0x492000
	0x03CD0164 ADRP X21, 0x492000
	0x03CD0168 ADRP X20, 0x492000
	0x03CD016C LDRB W8, [X24 + 0x42A]
	0x03CD0170 LDR X25, [X25 + 0x9B8]
	0x03CD0174 LDR X23, [X23 + 0x8]
	0x03CD0178 LDR X22, [X22 + 0x10]
	0x03CD017C LDR X21, [X21 + 0x18]
	0x03CD0180 LDR X20, [X20 + 0x20]
	0x03CD0184 MOV X19, X0
	0x03CD0188 TBNZ X8, 0x0, 0x3CD01D0
	0x03CD018C ADRP X0, 0x489000
	0x03CD0190 LDR X0, [X0 + 0x9B8]
	0x03CD0194 BL 0x1C16CF4
	0x03CD0198 ADRP X0, 0x492000
	0x03CD019C LDR X0, [X0 + 0x10]
	0x03CD01A0 BL 0x1C16CF4
	0x03CD01A4 ADRP X0, 0x492000
	0x03CD01A8 LDR X0, [X0 + 0x20]
	0x03CD01AC BL 0x1C16CF4
	0x03CD01B0 ADRP X0, 0x492000
	0x03CD01B4 LDR X0, [X0 + 0x8]
	0x03CD01B8 BL 0x1C16CF4
	0x03CD01BC ADRP X0, 0x492000
	0x03CD01C0 LDR X0, [X0 + 0x18]
	0x03CD01C4 BL 0x1C16CF4
	0x03CD01C8 MOVZ W8, 0x1
	0x03CD01CC STRB W8, [X24 + 0x42A]
	0x03CD01D0 LDR X9, [X25]
	0x03CD01D4 LDR X8, [X23]
	0x03CD01D8 MOV X0, X19
	0x03CD01DC LDP X24, X23, [X31 + 0x10]
	0x03CD01E0 MOV X1, X31
	0x03CD01E4 STP X9, X8, [X19 + 0x10]
	0x03CD01E8 LDR X9, [X22]
	0x03CD01EC LDR X8, [X21]
	0x03CD01F0 LDP X22, X21, [X31 + 0x20]
	0x03CD01F4 STP X9, X8, [X19 + 0x20]
	0x03CD01F8 LDR X8, [X20]
	0x03CD01FC STR X8, [X19 + 0x30]
	0x03CD0200 LDP X20, X19, [X31 + 0x30]
	0x03CD0204 LDP X30, X25, [X31], #0x40
	0x03CD0208 B 0x33BDD8C
	0x03CD020C STR X30, [X31 - 0x30]!
	0x03CD0210 STP X22, X21, [X31 + 0x10]
	0x03CD0214 STP X20, X19, [X31 + 0x20]
	0x03CD0218 ADRP X20, 0x717000
	0x03CD021C ADRP X22, 0x492000
	0x03CD0220 ADRP X21, 0x488000
	0x03CD0224 LDRB W8, [X20 + 0x42B]
	0x03CD0228 LDR X22, [X22 + 0x28]
	0x03CD022C LDR X21, [X21 + 0xA58]
	0x03CD0230 MOV X19, X0
	0x03CD0234 TBNZ X8, 0x0, 0x3CD0258
	0x03CD0238 ADRP X0, 0x492000
	0x03CD023C LDR X0, [X0 + 0x28]
	0x03CD0240 BL 0x1C16CF4
	0x03CD0244 ADRP X0, 0x488000
	0x03CD0248 LDR X0, [X0 + 0xA58]
	0x03CD024C BL 0x1C16CF4
	0x03CD0250 MOVZ W8, 0x1
	0x03CD0254 STRB W8, [X20 + 0x42B]
	0x03CD0258 LDR X0, [X22]
	0x03CD025C BL 0x1C16F10
	0x03CD0260 MOV X1, X31
	0x03CD0264 MOV X20, X0
	0x03CD0268 BL 0x3C45C84
	0x03CD026C STR X20, [X19 + 0x100]
	0x03CD0270 LDR X0, [X21]
	0x03CD0274 LDR W8, [X0 + 0xE0]
	0x03CD0278 CBNZ W8, 0x3CD0280
	0x03CD027C BL 0x1C16DFC
	0x03CD0280 MOV X0, X19
	0x03CD0284 LDP X20, X19, [X31 + 0x20]
	0x03CD0288 LDP X22, X21, [X31 + 0x10]
	0x03CD028C MOV X1, X31
	0x03CD0290 LDR X30, [X31], #0x30
	0x03CD0294 B 0x3E3B678
	0x03CD0298 MOV X1, X31
	0x03CD029C B 0x3C45C84
	0x03CD02A0 LDR X0, [X0 + 0x100]
	0x03CD02A4 RET
	0x03CD02A8 STR X1, [X0 + 0x100]
	0x03CD02AC RET
	0x03CD02B0 STR X30, [X31 - 0x20]!
	0x03CD02B4 STP X20, X19, [X31 + 0x10]
	0x03CD02B8 ADRP X20, 0x717000
	0x03CD02BC LDRB W8, [X20 + 0x42C]
	0x03CD02C0 MOV X19, X0
	0x03CD02C4 TBNZ X8, 0x0, 0x3CD02DC
	0x03CD02C8 ADRP X0, 0x492000
	0x03CD02CC LDR X0, [X0 + 0x30]
	0x03CD02D0 BL 0x1C16CF4
	0x03CD02D4 MOVZ W8, 0x1
	0x03CD02D8 STRB W8, [X20 + 0x42C]
	0x03CD02DC LDR X8, [X19]
	0x03CD02E0 MOV X0, X19

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+96], X30
	003 Move [X31+104], X23
	004 Move [X31+112], X22
	005 Move [X31+120], X21
	006 Move [X31+128], X20
	007 Move [X31+136], X19
	008 Move X23, 0x718000
	009 Move W8, [X23+920]
	010 Move X19, X3
	011 Move X20, X2
	012 Move X21, X1
	013 Move X22, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {32}
	018 Move X0, 0x424000
	019 Move X0, [X0+2600]
	020 Call 0x1C17CF4
	021 Move X0, 0x424000
	022 Move X0, [X0+2512]
	023 Call 0x1C17CF4
	024 Move X0, 0x492000
	025 Move X0, [X0+4056]
	026 Call 0x1C17CF4
	027 Move X0, 0x492000
	028 Move X0, [X0+4064]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X23+920], W8
	032 Add X0, X31, 0
	033 Move W2, 96
	034 Move X1, X20
	035 Call 0x3EB2AC0
	036 Add X2, X31, 0
	037 Move X0, X22
	038 Move X1, X21
	039 Call TextGenerator.PopulateWithError, X0, X1, X2
	040 Compare W0, 0
	041 JumpIfEqual {122}
	042 Move W21, W0
	043 Move TEMP, X0
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfNotEqual {82}
	047 Move X8, 0x424000
	048 Move X8, [X8+2512]
	049 Move W1, 1
	050 Move X0, [X8]
	051 Call 0x1C17D6C
	052 Compare X0, 0
	053 JumpIfEqual {131}
	054 Move X23, [X20]
	055 Move X22, X0
	056 Compare X23, 0
	057 JumpIfEqual {64}
	058 Move X8, [X22]
	059 Move X0, X23
	060 Move X1, [X8+64]
	061 Call 0x1C17E00
	062 Compare X0, 0
	063 JumpIfEqual {133}
	064 Move W8, [X22+24]
	065 Compare W8, 0
	066 JumpIfEqual {132}
	067 Move [X22+32], X23
	068 Move X8, 0x424000
	069 Move X8, [X8+2600]
	070 Move X0, [X8]
	071 Move W8, [X0+224]
	072 Compare W8, 0
	073 JumpIfNotEqual {75}
	074 Call 0x1C17DFC
	075 Move X8, 0x492000
	076 Move X8, [X8+4056]
	077 Move X0, X19
	078 Move X2, X22
	079 Move X3, X31
	080 Move X1, [X8]
	081 Call Debug.LogErrorFormat, X0, X1, X2
	082 Move TEMP, X21
	083 And TEMP, TEMP, 2
	084 Compare TEMP, 2
	085 JumpIfNotEqual {121}
	086 Move X8, 0x424000
	087 Move X8, [X8+2512]
	088 Move W1, 1
	089 Move X0, [X8]
	090 Call 0x1C17D6C
	091 Compare X0, 0
	092 JumpIfEqual {131}
	093 Move X20, [X20]
	094 Move X21, X0
	095 Compare X20, 0
	096 JumpIfEqual {103}
	097 Move X8, [X21]
	098 Move X0, X20
	099 Move X1, [X8+64]
	100 Call 0x1C17E00
	101 Compare X0, 0
	102 JumpIfEqual {133}
	103 Move W8, [X21+24]
	104 Compare W8, 0
	105 JumpIfEqual {132}
	106 Move [X21+32], X20
	107 Move X8, 0x424000
	108 Move X8, [X8+2600]
	109 Move X0, [X8]
	110 Move W8, [X0+224]
	111 Compare W8, 0
	112 JumpIfNotEqual {114}
	113 Call 0x1C17DFC
	114 Move X8, 0x492000
	115 Move X8, [X8+4064]
	116 Move X0, X19
	117 Move X2, X21
	118 Move X3, X31
	119 Move X1, [X8]
	120 Call Debug.LogErrorFormat, X0, X1, X2
	121 Move W0, W31
	122 Move W0, 1
	123 Move X20, [X31+128]
	124 Move X19, [X31+136]
	125 Move X22, [X31+112]
	126 Move X21, [X31+120]
	127 Move X30, [X31+96]
	128 Move X23, [X31+104]
	129 Add X31, X31, 144
	130 Return X0
	131 Call 0x1C17F20
	132 Call 0x1C17F28
	133 Call 0x1C17F44
	134 Move X1, X31
	135 Call 0x1C17DEC

Method: System.Boolean Populate(System.String str, UnityEngine.TextGenerationSettings settings)

Disassembly:
	0x03CD0024 BR X2
	0x03CD0028 STP X30, X23, [X31 - 0x30]!
	0x03CD002C STP X22, X21, [X31 + 0x10]
	0x03CD0030 STP X20, X19, [X31 + 0x20]
	0x03CD0034 ADRP X23, 0x717000
	0x03CD0038 ADRP X22, 0x423000
	0x03CD003C ADRP X20, 0x491000
	0x03CD0040 ADRP X21, 0x492000
	0x03CD0044 MOV X19, X8
	0x03CD0048 LDRB W8, [X23 + 0x428]
	0x03CD004C LDR X22, [X22 + 0x618]
	0x03CD0050 LDR X20, [X20 + 0xFF8]
	0x03CD0054 LDR X21, [X21]
	0x03CD0058 TBNZ X8, 0x0, 0x3CD0088
	0x03CD005C ADRP X0, 0x423000
	0x03CD0060 LDR X0, [X0 + 0x618]
	0x03CD0064 BL 0x1C16CF4
	0x03CD0068 ADRP X0, 0x492000
	0x03CD006C LDR X0, [X0]
	0x03CD0070 BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+96], X30
	003 Move [X31+112], X20
	004 Move [X31+120], X19
	005 Move X8, X2
	006 Move X19, X1
	007 Move X20, X0
	008 Add X0, X31, 0
	009 Move W2, 96
	010 Move X1, X8
	011 Call 0x3EB2AC0
	012 Add X2, X31, 0
	013 Move X0, X20
	014 Move X1, X19
	015 Call TextGenerator.PopulateWithError, X0, X1, X2
	016 Move X20, [X31+112]
	017 Move X19, [X31+120]
	018 Move X30, [X31+96]
	019 NotImplemented "Instruction CMP not yet implemented."
	020 NotImplemented "Instruction CSET not yet implemented."
	021 Add X31, X31, 128
	022 Return X0

Method: UnityEngine.TextGenerationError PopulateWithError(System.String str, UnityEngine.TextGenerationSettings settings)

Disassembly:
	0x03CD02E4 LDP X9, X1, [X8 + 0x1C8]
	0x03CD02E8 BLR X9
	0x03CD02EC TBZ X0, 0x0, 0x3CD0338
	0x03CD02F0 LDR X8, [X19]
	0x03CD02F4 MOV X0, X19
	0x03CD02F8 LDR X9, [X8 + 0x2B8]
	0x03CD02FC LDR X1, [X8 + 0x2C0]
	0x03CD0300 BLR X9
	0x03CD0304 TBZ X0, 0x0, 0x3CD0338
	0x03CD0308 ADRP X8, 0x492000
	0x03CD030C LDR X8, [X8 + 0x30]
	0x03CD0310 MOV X1, X19
	0x03CD0314 MOV X2, X31
	0x03CD0318 LDR X0, [X8]
	0x03CD031C BL 0x3E252BC
	0x03CD0320 LDR X0, [X19 + 0x100]
	0x03CD0324 CBZ X0, 0x3CD0344
	0x03CD0328 LDP X20, X19, [X31 + 0x10]
	0x03CD032C MOV X1, X31
	0x03CD0330 LDR X30, [X31], #0x20
	0x03CD0334 B 0x3C45DE8
	0x03CD0338 LDP X20, X19, [X31 + 0x10]
	0x03CD033C LDR X30, [X31], #0x20
	0x03CD0340 RET
	0x03CD0344 BL 0x1C16F20
	0x03CD0348 STR X30, [X31 - 0x10]!
	0x03CD034C CBZ X1, 0x3CD0368
	0x03CD0350 LDR W8, [X1 + 0x148]
	0x03CD0354 CBZ W8, 0x3CD0360
	0x03CD0358 LDR X30, [X31], #0x10
	0x03CD035C RET
	0x03CD0360 LDR X30, [X31], #0x10
	0x03CD0364 B 0x3CD02B0
	0x03CD0368 BL 0x1C16F20
	0x03CD036C STP X30, X19, [X31 - 0x10]!
	0x03CD0370 MOV X19, X0

ISIL:
	001 Subtract X31, X31, 224
	002 Move [X31+192], X30
	003 Move [X31+200], X21
	004 Move [X31+208], X20
	005 Move [X31+216], X19
	006 Move W8, [X0+128]
	007 Move X21, X2
	008 Move X19, X0
	009 Move X20, X1
	010 Compare W8, 0
	011 JumpIfEqual {32}
	012 Move X1, [X19+24]
	013 Move X0, X20
	014 Move X2, X31
	015 Call String.op_Equality, X0, X1
	016 Move TEMP, X0
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfNotEqual {32}
	020 Add X1, X19, 32
	021 Add X0, X31, 96
	022 Move W2, 96
	023 Call 0x3EB2AC0
	024 Add X1, X31, 96
	025 Move X0, X21
	026 Call TextGenerationSettings.Equals, X0, X1
	027 Move TEMP, X0
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfNotEqual {32}
	031 Move W0, [X19+132]
	032 Add X0, X31, 0
	033 Move W2, 96
	034 Move X1, X21
	035 Call 0x3EB2AC0
	036 Add X2, X31, 0
	037 Move X0, X19
	038 Move X1, X20
	039 Call TextGenerator.PopulateAlways, X0, X1, X2
	040 Move [X19+132], W0
	041 Move X20, [X31+208]
	042 Move X19, [X31+216]
	043 Move X30, [X31+192]
	044 Move X21, [X31+200]
	045 Add X31, X31, 224
	046 Return X0

Method: UnityEngine.TextGenerationError PopulateAlways(System.String str, UnityEngine.TextGenerationSettings settings)

Disassembly:
	0x03CD0374 BL 0x3CD02B0
	0x03CD0378 LDR X8, [X19]
	0x03CD037C MOV X0, X19
	0x03CD0380 LDP X9, X1, [X8 + 0x1C8]
	0x03CD0384 BLR X9
	0x03CD0388 TBZ X0, 0x0, 0x3CD03DC
	0x03CD038C LDR X8, [X19]
	0x03CD0390 MOV X0, X19
	0x03CD0394 LDR X9, [X8 + 0x2B8]
	0x03CD0398 LDR X1, [X8 + 0x2C0]
	0x03CD039C BLR X9
	0x03CD03A0 TBZ X0, 0x0, 0x3CD03DC
	0x03CD03A4 LDR X8, [X19]
	0x03CD03A8 MOVZ W1, 0x2
	0x03CD03AC MOV X0, X19
	0x03CD03B0 MOV W2, W31
	0x03CD03B4 LDR X9, [X8 + 0x2D8]
	0x03CD03B8 LDR X3, [X8 + 0x2E0]
	0x03CD03BC BLR X9
	0x03CD03C0 MOV X0, X19
	0x03CD03C4 BL 0x3CD03E4
	0x03CD03C8 MOV X1, X0
	0x03CD03CC MOV X0, X19
	0x03CD03D0 MOV X2, X31
	0x03CD03D4 LDP X30, X19, [X31], #0x10
	0x03CD03D8 B 0x3C366FC
	0x03CD03DC LDP X30, X19, [X31], #0x10
	0x03CD03E0 RET
	0x03CD03E4 STP X30, X21, [X31 - 0x20]!
	0x03CD03E8 STP X20, X19, [X31 + 0x10]
	0x03CD03EC ADRP X20, 0x717000
	0x03CD03F0 ADRP X21, 0x492000
	0x03CD03F4 LDRB W8, [X20 + 0x42D]
	0x03CD03F8 LDR X21, [X21 + 0x38]
	0x03CD03FC MOV X19, X0
	0x03CD0400 TBNZ X8, 0x0, 0x3CD0418
	0x03CD0404 ADRP X0, 0x492000
	0x03CD0408 LDR X0, [X0 + 0x38]
	0x03CD040C BL 0x1C16CF4
	0x03CD0410 MOVZ W8, 0x1
	0x03CD0414 STRB W8, [X20 + 0x42D]
	0x03CD0418 LDR X0, [X21]
	0x03CD041C BL 0x1C16F10
	0x03CD0420 MOV X1, X31
	0x03CD0424 MOV X20, X0
	0x03CD0428 BL 0x33BDD8C
	0x03CD042C STR W31, [X20 + 0x10]
	0x03CD0430 STR X19, [X20 + 0x20]
	0x03CD0434 MOV X0, X20
	0x03CD0438 LDP X20, X19, [X31 + 0x10]
	0x03CD043C LDP X30, X21, [X31], #0x20
	0x03CD0440 RET
	0x03CD0444 STR X30, [X31 - 0x20]!
	0x03CD0448 STP X20, X19, [X31 + 0x10]
	0x03CD044C MOV W19, W1
	0x03CD0450 MOV X1, X31
	0x03CD0454 MOV X20, X0
	0x03CD0458 BL 0x33BDD8C
	0x03CD045C STR W19, [X20 + 0x10]
	0x03CD0460 LDP X20, X19, [X31 + 0x10]
	0x03CD0464 LDR X30, [X31], #0x20
	0x03CD0468 RET
	0x03CD046C RET
	0x03CD0470 STP D9, D8, [X31 - 0x30]!
	0x03CD0474 STR X30, [X31 + 0x10]
	0x03CD0478 STP X20, X19, [X31 + 0x20]

ISIL:
	001 Subtract X31, X31, 320
	002 Move [X31+272], X29
	003 Move [X31+288], X30
	004 Move [X31+296], X21
	005 Move [X31+304], X20
	006 Move [X31+312], X19
	007 Move X21, X2
	008 Move W8, 1
	009 Move X20, X1
	010 Move X19, X0
	011 Move [X31+284], W31
	012 Move [X0+24], X1
	013 NotImplemented "Instruction STRH not yet implemented."
	014 Move [X0+162], W31
	015 Move [X0+128], W8
	016 Add X0, X0, 32
	017 Move W2, 96
	018 Move X1, X21
	019 Call 0x3EB2B30
	020 Add X0, X31, 80
	021 Move W2, 96
	022 Move X1, X21
	023 Call 0x3EB2AC0
	024 Add X8, X31, 176
	025 Add X1, X31, 80
	026 Call TextGenerator.ValidatedSettings, X0, X1
	027 Move W8, [X31+208]
	028 Move W10, [X31+224]
	029 Move W11, [X31+225]
	030 Move W13, [X31+236]
	031 Move W16, [X31+264]
	032 Move X2, [X31+176]
	033 Move S0, [X31+184]
	034 Move S1, [X31+188]
	035 Move S2, [X31+192]
	036 Move S3, [X31+196]
	037 Move W3, [X31+200]
	038 Move V5, [X31+204]
	039 Move V4, [X31+212]
	040 Move W4, [X31+216]
	041 Move W9, [X31+220]
	042 Move W7, [X31+228]
	043 Move W12, [X31+232]
	044 Move W14, [X31+240]
	045 Move W15, [X31+244]
	046 Move S6, [X31+248]
	047 Move S7, [X31+252]
	048 Move V16, [X31+256]
	049 Move V17, [X31+260]
	050 And W13, W13, 1
	051 And W16, W16, 1
	052 And W10, W10, 1
	053 Add X17, X31, 284
	054 And W5, W8, 1
	055 And W6, W11, 1
	056 Move X0, X19
	057 Move X1, X20
	058 Move [X31+56], W10
	059 Move [X31+48], W16
	060 Move [X31+40], S16
	061 Move [X31+48], S17
	062 Move [X31+32], W9
	063 Move [X31+24], W13
	064 Move [X31+16], W15
	065 Move [X31+8], W14
	066 Move [X31+64], X17
	067 Move [X31], W12
	068 Call TextGenerator.Populate_Internal, X0, X1, X2, X3, X4, V0, V1, X5, X6, X7, X8, X9, X10, X11, X12, X13, X14, X15, X16, X17, X18
	069 Move W0, [X31+284]
	070 Move X30, [X31+288]
	071 Move X21, [X31+296]
	072 Move X29, [X31+272]
	073 Move [X19+132], W0
	074 Move X20, [X31+304]
	075 Move X19, [X31+312]
	076 Add X31, X31, 320
	077 Return X0

Method: System.Collections.Generic.IList`1<UnityEngine.UIVertex> get_verts()

Disassembly:
	0x03CD0624 BL 0x1C16CF4
	0x03CD0628 ADRP X0, 0x492000
	0x03CD062C LDR X0, [X0 + 0x70]
	0x03CD0630 BL 0x1C16CF4
	0x03CD0634 ADRP X0, 0x492000
	0x03CD0638 LDR X0, [X0 + 0x78]
	0x03CD063C BL 0x1C16CF4
	0x03CD0640 ADRP X0, 0x492000
	0x03CD0644 LDR X0, [X0 + 0x80]
	0x03CD0648 BL 0x1C16CF4
	0x03CD064C MOVZ W8, 0x1
	0x03CD0650 STRB W8, [X20 + 0x42F]
	0x03CD0654 LDR X0, [X21]
	0x03CD0658 MOVZ W1, 0x5
	0x03CD065C BL 0x1C16D6C
	0x03CD0660 CBZ X0, 0x3CD0778
	0x03CD0664 LDR W8, [X0 + 0x18]
	0x03CD0668 CBZ W8, 0x3CD0774
	0x03CD066C ADRP X9, 0x492000
	0x03CD0670 LDR X9, [X9 + 0x80]
	0x03CD0674 CMP W8, 0x1
	0x03CD0678 LDR X9, [X9]
	0x03CD067C STR X9, [X0 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W8, [X0+160]
	006 Move X19, X0
	007 Compare W8, 0
	008 JumpIfNotEqual {24}
	009 Move X21, 0x718000
	010 Move X8, [X21+968]
	011 Move X20, [X19+136]
	012 Compare X8, 0
	013 JumpIfNotEqual {19}
	014 Move X0, -52060160
	015 Add X0, X0, 836
	016 Call 0x1C17CB8
	017 Move X8, X0
	018 Move [X21+968], X0
	019 Move X0, X19
	020 Move X1, X20
	021 NotImplemented "Instruction BLR not yet implemented."
	022 Move W8, 1
	023 Move [X19+160], W8
	024 Move X0, [X19+136]
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Return X0

Method: System.Collections.Generic.IList`1<UnityEngine.UICharInfo> get_characters()

Disassembly:
	0x03CD0680 B.EQ 0x3CD0774
	0x03CD0684 ADRP X9, 0x492000
	0x03CD0688 LDR X9, [X9 + 0x60]
	0x03CD068C CMP W8, 0x2
	0x03CD0690 LDR X9, [X9]
	0x03CD0694 STR X9, [X0 + 0x28]
	0x03CD0698 B.LS 0x3CD0774
	0x03CD069C ADRP X9, 0x492000
	0x03CD06A0 LDR X9, [X9 + 0x78]
	0x03CD06A4 CMP W8, 0x3
	0x03CD06A8 LDR X9, [X9]
	0x03CD06AC STR X9, [X0 + 0x30]
	0x03CD06B0 B.EQ 0x3CD0774
	0x03CD06B4 ADRP X9, 0x492000
	0x03CD06B8 LDR X9, [X9 + 0x68]
	0x03CD06BC CMP W8, 0x4
	0x03CD06C0 LDR X9, [X9]
	0x03CD06C4 STR X9, [X0 + 0x38]
	0x03CD06C8 B.LS 0x3CD0774
	0x03CD06CC ADRP X8, 0x492000
	0x03CD06D0 LDR X8, [X8 + 0x70]
	0x03CD06D4 ADRP X21, 0x492000
	0x03CD06D8 ADRP X22, 0x492000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W8, [X0+161]
	006 Move X19, X0
	007 Compare W8, 0
	008 JumpIfNotEqual {24}
	009 Move X21, 0x718000
	010 Move X8, [X21+976]
	011 Move X20, [X19+144]
	012 Compare X8, 0
	013 JumpIfNotEqual {19}
	014 Move X0, -52158464
	015 Add X0, X0, 1864
	016 Call 0x1C17CB8
	017 Move X8, X0
	018 Move [X21+976], X0
	019 Move X0, X19
	020 Move X1, X20
	021 NotImplemented "Instruction BLR not yet implemented."
	022 Move W8, 1
	023 Move [X19+161], W8
	024 Move X0, [X19+144]
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Return X0

Method: System.Collections.Generic.IList`1<UnityEngine.UILineInfo> get_lines()

Disassembly:
	0x03CD06DC ADRP X23, 0x489000
	0x03CD06E0 LDR X8, [X8]
	0x03CD06E4 LDR X21, [X21 + 0x58]
	0x03CD06E8 ADRP X24, 0x492000
	0x03CD06EC STR X8, [X0 + 0x40]
	0x03CD06F0 STR X0, [X19 + 0x18]
	0x03CD06F4 LDR X0, [X21]
	0x03CD06F8 LDR X22, [X22 + 0x50]
	0x03CD06FC LDR X23, [X23 + 0x430]
	0x03CD0700 LDR X24, [X24 + 0x48]
	0x03CD0704 BL 0x1C16F10
	0x03CD0708 LDR X1, [X22]
	0x03CD070C MOV X20, X0
	0x03CD0710 BL 0x2DE2F98
	0x03CD0714 STR X20, [X19 + 0x20]
	0x03CD0718 LDR X0, [X21]
	0x03CD071C BL 0x1C16F10
	0x03CD0720 LDR X1, [X22]
	0x03CD0724 MOV X20, X0
	0x03CD0728 BL 0x2DE2F98
	0x03CD072C MOV X0, X19
	0x03CD0730 MOV X1, X31
	0x03CD0734 STR X20, [X19 + 0x28]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W8, [X0+162]
	006 Move X19, X0
	007 Compare W8, 0
	008 JumpIfNotEqual {24}
	009 Move X21, 0x718000
	010 Move X8, [X21+984]
	011 Move X20, [X19+152]
	012 Compare X8, 0
	013 JumpIfNotEqual {19}
	014 Move X0, -52224000
	015 Add X0, X0, 2182
	016 Call 0x1C17CB8
	017 Move X8, X0
	018 Move [X21+984], X0
	019 Move X0, X19
	020 Move X1, X20
	021 NotImplemented "Instruction BLR not yet implemented."
	022 Move W8, 1
	023 Move [X19+162], W8
	024 Move X0, [X19+152]
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Return X0

Method: UnityEngine.Rect get_rectExtents()

Disassembly:
	0x03CD0074 ADRP X0, 0x491000
	0x03CD0078 LDR X0, [X0 + 0xFF8]
	0x03CD007C BL 0x1C16CF4
	0x03CD0080 MOVZ W8, 0x1
	0x03CD0084 STRB W8, [X23 + 0x428]
	0x03CD0088 LDR X0, [X22]
	0x03CD008C MOVZ W1, 0x1D06
	0x03CD0090 BL 0x1C16D6C
	0x03CD0094 LDR X1, [X20]
	0x03CD0098 MOV X2, X31
	0x03CD009C MOV X20, X0
	0x03CD00A0 BL 0x32C5BD8
	0x03CD00A4 LDR X0, [X22]
	0x03CD00A8 MOVZ W1, 0x1607
	0x03CD00AC BL 0x1C16D6C
	0x03CD00B0 LDR X1, [X21]
	0x03CD00B4 MOV X2, X31
	0x03CD00B8 MOV X21, X0
	0x03CD00BC BL 0x32C5BD8
	0x03CD00C0 ADRP X8, 0xFFFFFFFFFCE1D000
	0x03CD00C4 LDR V0, [X8 + 0xC90]
	0x03CD00C8 STP X20, X21, [X19]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+8], X31
	003 Move [X31+16], X30
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x718000
	007 Move X8, [X20+992]
	008 Move X19, X0
	009 Move [X31], X31
	010 Compare X8, 0
	011 JumpIfNotEqual {17}
	012 Move X0, -52158464
	013 Add X0, X0, 1928
	014 Call 0x1C17CB8
	015 Move X8, X0
	016 Move [X20+992], X0
	017 Add X1, X31, 0
	018 Move X0, X19
	019 NotImplemented "Instruction BLR not yet implemented."
	020 Move S0, [X31]
	021 Move S1, [X31+4]
	022 Move S2, [X31+8]
	023 Move S3, [X31+12]
	024 Move X20, [X31+32]
	025 Move X19, [X31+40]
	026 Move X30, [X31+16]
	027 Add X31, X31, 48
	028 Return X0

Method: System.Int32 get_characterCount()

Disassembly:
	0x03CCFAF8 LDR V10, [X8 + 0x5C]
	0x03CCFAFC ADRP X21, 0x709000
	0x03CCFB00 LDR X9, [X9 + 0xB8]
	0x03CCFB04 LDRB W8, [X21 + 0xE5A]
	0x03CCFB08 LDUR V0, [X9 + 0x4]
	0x03CCFB0C STR V0, [X31]
	0x03CCFB10 LDR W19, [X9]
	0x03CCFB14 CBNZ W8, 0x3CCFB2C
	0x03CCFB18 ADRP X0, 0x42B000
	0x03CCFB1C LDR X0, [X0 + 0x9A0]
	0x03CCFB20 BL 0x1C16CF4
	0x03CCFB24 MOVZ W8, 0x1
	0x03CCFB28 STRB W8, [X21 + 0xE5A]
	0x03CCFB2C ADRP X8, 0x42B000
	0x03CCFB30 LDR X8, [X8 + 0x9A0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x719000
	005 Move X1, [X20+928]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -52047872
	010 Add X0, X0, 570
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+928], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Int32 get_lineCount()

Disassembly:
	0x03CD077C STR X30, [X31 - 0x20]!
	0x03CD0780 STP X20, X19, [X31 + 0x10]
	0x03CD0784 ADRP X19, 0x717000
	0x03CD0788 ADRP X20, 0x488000
	0x03CD078C LDRB W8, [X19 + 0x430]
	0x03CD0790 LDR X20, [X20 + 0x718]
	0x03CD0794 TBNZ X8, 0x0, 0x3CD07AC
	0x03CD0798 ADRP X0, 0x488000
	0x03CD079C LDR X0, [X0 + 0x718]
	0x03CD07A0 BL 0x1C16CF4
	0x03CD07A4 MOVZ W8, 0x1
	0x03CD07A8 STRB W8, [X19 + 0x430]
	0x03CD07AC LDR X0, [X20]
	0x03CD07B0 LDR W8, [X0 + 0xE0]
	0x03CD07B4 CBNZ W8, 0x3CD07C0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x718000
	005 Move X1, [X20+936]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -52183040
	010 Add X0, X0, 2633
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+936], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.IntPtr Internal_Create()

Disassembly:
	0x03CCF8E4 LDP X28, X27, [X31 + 0xC0]
	0x03CCF8E8 LDP X29, X30, [X31 + 0xB0]
	0x03CCF8EC LDP D9, D8, [X31 + 0xA0]
	0x03CCF8F0 LDP D11, D10, [X31 + 0x90]
	0x03CCF8F4 LDP D13, D12, [X31 + 0x80]
	0x03CCF8F8 AND W0, W0, 0x1
	0x03CCF8FC ADD X31, X31, 0x110
	0x03CCF900 RET
	0x03CCF904 SUB X31, X31, 0xC0
	0x03CCF908 STP D13, D12, [X31 + 0x30]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, 0x719000
	004 Move X0, [X19+944]
	005 Compare X0, 0
	006 JumpIfNotEqual {11}
	007 Move X0, -52047872
	008 Add X0, X0, 618
	009 Call 0x1C17CB8
	010 Move [X19+944], X0
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 CallNoReturn X0

Method: System.Void Internal_Destroy(System.IntPtr ptr)

Disassembly:
	0x03CCFA78 ADRP X19, 0x709000
	0x03CCFA7C LDR X8, [X8 + 0xB8]
	0x03CCFA80 STR W9, [X8]
	0x03CCFA84 LDR X8, [X20]
	0x03CCFA88 ADRP X9, 0xFFFFFFFFFCE1E000
	0x03CCFA8C LDR V0, [X9 + 0x39]
	0x03CCFA90 LDR X8, [X8 + 0xB8]
	0x03CCFA94 STUR V0, [X8 + 0x4]
	0x03CCFA98 LDRB W8, [X19 + 0x783]
	0x03CCFA9C CBNZ W8, 0x3CCFAB4
	0x03CCFAA0 ADRP X0, 0x424000
	0x03CCFAA4 LDR X0, [X0 + 0x5A0]
	0x03CCFAA8 BL 0x1C16CF4
	0x03CCFAAC MOVZ W8, 0x1
	0x03CCFAB0 STRB W8, [X19 + 0x783]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x719000
	005 Move X1, [X20+952]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -52056064
	010 Add X0, X0, 777
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+952], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Boolean Populate_Internal(System.String str, UnityEngine.Font font, UnityEngine.Color color, System.Int32 fontSize, System.Single scaleFactor, System.Single lineSpacing, UnityEngine.FontStyle style, System.Boolean richText, System.Boolean resizeTextForBestFit, System.Int32 resizeTextMinSize, System.Int32 resizeTextMaxSize, System.Int32 verticalOverFlow, System.Int32 horizontalOverflow, System.Boolean updateBounds, UnityEngine.TextAnchor anchor, System.Single extentsX, System.Single extentsY, System.Single pivotX, System.Single pivotY, System.Boolean generateOutOfBounds, System.Boolean alignByGeometry, out System.UInt32 error)

Disassembly:
	0x03CD07B8 BL 0x1C16DFC
	0x03CD07BC LDR X0, [X20]
	0x03CD07C0 LDR X8, [X0 + 0xB8]
	0x03CD07C4 LDR X8, [X8]
	0x03CD07C8 CBNZ X8, 0x3CD07F8
	0x03CD07CC BL 0x1C16F10
	0x03CD07D0 MOV X19, X0
	0x03CD07D4 BL 0x3CD05AC
	0x03CD07D8 LDR X0, [X20]
	0x03CD07DC LDR W8, [X0 + 0xE0]
	0x03CD07E0 CBNZ W8, 0x3CD07EC
	0x03CD07E4 BL 0x1C16DFC
	0x03CD07E8 LDR X0, [X20]
	0x03CD07EC LDR X8, [X0 + 0xB8]
	0x03CD07F0 STR X19, [X8]
	0x03CD07F4 LDR X0, [X20]
	0x03CD07F8 LDR W8, [X0 + 0xE0]
	0x03CD07FC CBNZ W8, 0x3CD0808
	0x03CD0800 BL 0x1C16DFC
	0x03CD0804 LDR X0, [X20]
	0x03CD0808 LDR X8, [X0 + 0xB8]
	0x03CD080C LDP X20, X19, [X31 + 0x10]
	0x03CD0810 LDR X0, [X8]
	0x03CD0814 LDR X30, [X31], #0x20
	0x03CD0818 RET
	0x03CD081C STR X30, [X31 - 0x20]!
	0x03CD0820 STP X20, X19, [X31 + 0x10]
	0x03CD0824 ADRP X20, 0x717000
	0x03CD0828 LDRB W8, [X20 + 0x431]
	0x03CD082C MOV X19, X1
	0x03CD0830 TBNZ X8, 0x0, 0x3CD0848
	0x03CD0834 ADRP X0, 0x423000
	0x03CD0838 LDR X0, [X0 + 0x598]
	0x03CD083C BL 0x1C16CF4
	0x03CD0840 MOVZ W8, 0x1
	0x03CD0844 STRB W8, [X20 + 0x431]
	0x03CD0848 CBZ X19, 0x3CD0888
	0x03CD084C ADRP X20, 0x423000
	0x03CD0850 LDR X20, [X20 + 0x598]
	0x03CD0854 LDR X8, [X19]
	0x03CD0858 LDR X0, [X20]
	0x03CD085C LDRB W10, [X8 + 0x130]
	0x03CD0860 LDRB W9, [X0 + 0x130]
	0x03CD0864 CMP W10, W9
	0x03CD0868 B.CC 0x3CD0880
	0x03CD086C LDR X11, [X8 + 0xC8]
	0x03CD0870 ADD X11, X11, X9, 0x3, LSL
	0x03CD0874 LDUR X11, [X11 - 0x8]
	0x03CD0878 CMP X11, X0
	0x03CD087C B.EQ 0x3CD0898
	0x03CD0880 MOVZ W0, 0x1
	0x03CD0884 B 0x3CD088C
	0x03CD0888 MOV W0, W31
	0x03CD088C LDP X20, X19, [X31 + 0x10]
	0x03CD0890 LDR X30, [X31], #0x20
	0x03CD0894 RET
	0x03CD0898 LDR W11, [X0 + 0xE0]
	0x03CD089C CBNZ W11, 0x3CD08B4
	0x03CD08A0 BL 0x1C16DFC
	0x03CD08A4 LDR X8, [X19]
	0x03CD08A8 LDR X0, [X20]
	0x03CD08AC LDRB W10, [X8 + 0x130]
	0x03CD08B0 LDRB W9, [X0 + 0x130]
	0x03CD08B4 CMP W10, W9
	0x03CD08B8 B.CS 0x3CD08C4
	0x03CD08BC MOV X0, X31
	0x03CD08C0 B 0x3CD08D8
	0x03CD08C4 LDR X8, [X8 + 0xC8]
	0x03CD08C8 ADD X8, X8, W9, 0x3, UXTW
	0x03CD08CC LDUR X8, [X8 - 0x8]
	0x03CD08D0 CMP X8, X0
	0x03CD08D4 CSEL X0, X19, X31, EQ
	0x03CD08D8 LDP X20, X19, [X31 + 0x10]
	0x03CD08DC MOV X1, X31
	0x03CD08E0 MOV X2, X31
	0x03CD08E4 LDR X30, [X31], #0x20
	0x03CD08E8 B 0x3C354F8
	0x03CD08EC STR X30, [X31 - 0x40]!
	0x03CD08F0 STP X24, X23, [X31 + 0x10]
	0x03CD08F4 STP X22, X21, [X31 + 0x20]
	0x03CD08F8 STP X20, X19, [X31 + 0x30]
	0x03CD08FC ADRP X20, 0x717000
	0x03CD0900 LDRB W8, [X20 + 0x432]

ISIL:
	001 Subtract X31, X31, 272
	002 Move [X31+128], D13
	003 Move [X31+136], D12
	004 Move [X31+144], D11
	005 Move [X31+152], D10
	006 Move [X31+160], D9
	007 Move [X31+168], D8
	008 Move [X31+176], X29
	009 Move [X31+184], X30
	010 Move [X31+192], X28
	011 Move [X31+200], X27
	012 Move [X31+208], X26
	013 Move [X31+216], X25
	014 Move [X31+224], X24
	015 Move [X31+232], X23
	016 Move [X31+240], X22
	017 Move [X31+248], X21
	018 Move [X31+256], X20
	019 Move [X31+264], X19
	020 Move X24, 0x718000
	021 Move X20, [X31+344]
	022 Move W21, [X31+336]
	023 Move W27, [X31+328]
	024 Move V12, [X31+320]
	025 Move V13, [X31+312]
	026 Move W22, [X31+304]
	027 Move W23, [X31+296]
	028 Move W28, [X31+288]
	029 Move W29, [X31+280]
	030 Move W19, [X31+272]
	031 Move X8, [X24+1000]
	032 Move V8, V7
	033 Move V9, V6
	034 Move W12, W7
	035 Move W13, W6
	036 Move W14, W4
	037 Move V10, V5
	038 Move V11, V4
	039 Move W4, W3
	040 Move [X31+112], S0
	041 Move [X31+120], S1
	042 Move [X31+120], S2
	043 Move [X31+128], S3
	044 Compare X8, 0
	045 JumpIfNotEqual {67}
	046 Move [X31+88], X0
	047 Move [X31+96], X1
	048 Move X0, -52092928
	049 Add X0, X0, 1363
	050 Move [X31+104], W14
	051 Move [X31+108], W12
	052 Move W26, W4
	053 Move X25, X2
	054 Move [X31+80], W5
	055 Move [X31+84], W13
	056 Call 0x1C17CB8
	057 Move W5, [X31+80]
	058 Move W13, [X31+84]
	059 Move W14, [X31+104]
	060 Move W12, [X31+108]
	061 Move X8, X0
	062 Move X0, [X31+88]
	063 Move X1, [X31+96]
	064 Move X2, X25
	065 Move W4, W26
	066 Move [X24+1000], X8
	067 And W9, W21, 1
	068 And W10, W27, 1
	069 And W11, W23, 1
	070 And W6, W5, 1
	071 And W7, W13, 1
	072 Add X3, X31, 112
	073 Move V0, V11
	074 Move V1, V10
	075 Move V2, V9
	076 Move V3, V8
	077 Move V4, V13
	078 Move V5, V12
	079 Move W5, W14
	080 Move [X31+64], X20
	081 Move [X31+40], W22
	082 Move [X31+24], W28
	083 Move [X31+16], W29
	084 Move [X31+8], W19
	085 Move [X31+56], W9
	086 Move [X31+48], W10
	087 Move [X31+32], W11
	088 Move [X31], W12
	089 NotImplemented "Instruction BLR not yet implemented."
	090 Move X20, [X31+256]
	091 Move X19, [X31+264]
	092 Move X22, [X31+240]
	093 Move X21, [X31+248]
	094 Move X24, [X31+224]
	095 Move X23, [X31+232]
	096 Move X26, [X31+208]
	097 Move X25, [X31+216]
	098 Move X28, [X31+192]
	099 Move X27, [X31+200]
	100 Move X29, [X31+176]
	101 Move X30, [X31+184]
	102 Move D9, [X31+160]
	103 Move D8, [X31+168]
	104 Move D11, [X31+144]
	105 Move D10, [X31+152]
	106 Move D13, [X31+128]
	107 Move D12, [X31+136]
	108 And W0, W0, 1
	109 Add X31, X31, 272
	110 Return X0

Method: System.Boolean Populate_Internal(System.String str, UnityEngine.Font font, UnityEngine.Color color, System.Int32 fontSize, System.Single scaleFactor, System.Single lineSpacing, UnityEngine.FontStyle style, System.Boolean richText, System.Boolean resizeTextForBestFit, System.Int32 resizeTextMinSize, System.Int32 resizeTextMaxSize, UnityEngine.VerticalWrapMode verticalOverFlow, UnityEngine.HorizontalWrapMode horizontalOverflow, System.Boolean updateBounds, UnityEngine.TextAnchor anchor, UnityEngine.Vector2 extents, UnityEngine.Vector2 pivot, System.Boolean generateOutOfBounds, System.Boolean alignByGeometry, out UnityEngine.TextGenerationError error)

Disassembly:
	0x03CD047C ADRP X20, 0x717000
	0x03CD0480 LDRB W8, [X20 + 0x42E]
	0x03CD0484 MOV X19, X0
	0x03CD0488 TBNZ X8, 0x0, 0x3CD04A0
	0x03CD048C ADRP X0, 0x44B000
	0x03CD0490 LDR X0, [X0 + 0x5E8]
	0x03CD0494 BL 0x1C16CF4
	0x03CD0498 MOVZ W8, 0x1
	0x03CD049C STRB W8, [X20 + 0x42E]
	0x03CD04A0 LDR W8, [X19 + 0x10]
	0x03CD04A4 LDR X20, [X19 + 0x20]
	0x03CD04A8 CMP W8, 0x1
	0x03CD04AC B.EQ 0x3CD04EC
	0x03CD04B0 CBNZ W8, 0x3CD054C
	0x03CD04B4 MOVN W8, 0x0
	0x03CD04B8 STR W8, [X19 + 0x10]
	0x03CD04BC CBZ X20, 0x3CD0560
	0x03CD04C0 ADRP X8, 0x44B000
	0x03CD04C4 LDR X8, [X8 + 0x5E8]
	0x03CD04C8 LDR V8, [X20 + 0xA8]
	0x03CD04CC LDR X0, [X8]
	0x03CD04D0 LDR W8, [X0 + 0xE0]
	0x03CD04D4 CBNZ W8, 0x3CD04DC
	0x03CD04D8 BL 0x1C16DFC
	0x03CD04DC STR S8, [X19 + 0x28]
	0x03CD04E0 STR W31, [X19 + 0x2C]
	0x03CD04E4 FMOV S9, W31
	0x03CD04E8 B 0x3CD04F8
	0x03CD04EC LDP S8, S9, [X19 + 0x28]
	0x03CD04F0 MOVN W8, 0x0
	0x03CD04F4 STR W8, [X19 + 0x10]
	0x03CD04F8 FCMP S9, S8
	0x03CD04FC B.PL 0x3CD0520
	0x03CD0500 MOV X0, X31
	0x03CD0504 BL 0x3C3C7B4
	0x03CD0508 FADD S0, S9, S0
	0x03CD050C MOVZ W0, 0x1
	0x03CD0510 STR X31, [X19 + 0x18]
	0x03CD0514 STR S0, [X19 + 0x2C]
	0x03CD0518 STR W0, [X19 + 0x10]
	0x03CD051C B 0x3CD0550
	0x03CD0520 CBZ X20, 0x3CD0560
	0x03CD0524 MOV X0, X20
	0x03CD0528 MOV X1, X31
	0x03CD052C BL 0x3E41404
	0x03CD0530 LDR X8, [X20]
	0x03CD0534 MOV W1, W0
	0x03CD0538 MOV X0, X20
	0x03CD053C MOV W2, W31
	0x03CD0540 LDR X9, [X8 + 0x2D8]
	0x03CD0544 LDR X3, [X8 + 0x2E0]
	0x03CD0548 BLR X9
	0x03CD054C MOV W0, W31
	0x03CD0550 LDP X20, X19, [X31 + 0x20]
	0x03CD0554 LDR X30, [X31 + 0x10]
	0x03CD0558 LDP D9, D8, [X31], #0x30
	0x03CD055C RET
	0x03CD0560 BL 0x1C16F20
	0x03CD0564 LDR X0, [X0 + 0x18]
	0x03CD0568 RET
	0x03CD056C STP X30, X19, [X31 - 0x10]!
	0x03CD0570 ADRP X0, 0x423000
	0x03CD0574 LDR X0, [X0 + 0xB40]
	0x03CD0578 BL 0x1C16D08
	0x03CD057C BL 0x1C16F10
	0x03CD0580 MOV X1, X31
	0x03CD0584 MOV X19, X0
	0x03CD0588 BL 0x3380310
	0x03CD058C ADRP X0, 0x492000
	0x03CD0590 LDR X0, [X0 + 0x40]
	0x03CD0594 BL 0x1C16D08
	0x03CD0598 MOV X1, X0
	0x03CD059C MOV X0, X19
	0x03CD05A0 BL 0x1C16DEC
	0x03CD05A4 LDR X0, [X0 + 0x18]
	0x03CD05A8 RET
	0x03CD05AC STR X30, [X31 - 0x40]!
	0x03CD05B0 STP X24, X23, [X31 + 0x10]
	0x03CD05B4 STP X22, X21, [X31 + 0x20]
	0x03CD05B8 STP X20, X19, [X31 + 0x30]
	0x03CD05BC ADRP X20, 0x717000
	0x03CD05C0 ADRP X21, 0x423000
	0x03CD05C4 LDRB W8, [X20 + 0x42F]
	0x03CD05C8 LDR X21, [X21 + 0xAC8]
	0x03CD05CC MOV X19, X0
	0x03CD05D0 TBNZ X8, 0x0, 0x3CD0654
	0x03CD05D4 ADRP X0, 0x492000
	0x03CD05D8 LDR X0, [X0 + 0x48]
	0x03CD05DC BL 0x1C16CF4
	0x03CD05E0 ADRP X0, 0x492000
	0x03CD05E4 LDR X0, [X0 + 0x50]
	0x03CD05E8 BL 0x1C16CF4
	0x03CD05EC ADRP X0, 0x492000
	0x03CD05F0 LDR X0, [X0 + 0x58]
	0x03CD05F4 BL 0x1C16CF4
	0x03CD05F8 ADRP X0, 0x423000
	0x03CD05FC LDR X0, [X0 + 0xAC8]
	0x03CD0600 BL 0x1C16CF4
	0x03CD0604 ADRP X0, 0x489000
	0x03CD0608 LDR X0, [X0 + 0x430]
	0x03CD060C BL 0x1C16CF4
	0x03CD0610 ADRP X0, 0x492000
	0x03CD0614 LDR X0, [X0 + 0x60]
	0x03CD0618 BL 0x1C16CF4
	0x03CD061C ADRP X0, 0x492000
	0x03CD0620 LDR X0, [X0 + 0x68]

ISIL:
	001 Subtract X31, X31, 256
	002 Move [X31+96], D15
	003 Move [X31+104], D14
	004 Move [X31+112], D13
	005 Move [X31+120], D12
	006 Move [X31+128], D11
	007 Move [X31+136], D10
	008 Move [X31+144], D9
	009 Move [X31+152], D8
	010 Move [X31+160], X30
	011 Move [X31+176], X28
	012 Move [X31+184], X27
	013 Move [X31+192], X26
	014 Move [X31+200], X25
	015 Move [X31+208], X24
	016 Move [X31+216], X23
	017 Move [X31+224], X22
	018 Move [X31+232], X21
	019 Move [X31+240], X20
	020 Move [X31+248], X19
	021 Move X28, 0x718000
	022 Move X27, 0x424000
	023 Move W8, [X28+960]
	024 Move X27, [X27+1432]
	025 Move V8, V7
	026 Move V9, V6
	027 Move W19, W7
	028 Move W22, W6
	029 Move W23, W5
	030 Move W20, W4
	031 Move V10, V5
	032 Move V11, V4
	033 Move W21, W3
	034 Move V12, V3
	035 Move V13, V2
	036 Move V14, V1
	037 Move V15, V0
	038 Move X24, X2
	039 Move X25, X1
	040 Move X26, X0
	041 Move TEMP, X8
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfEqual {50}
	045 Move X0, 0x424000
	046 Move X0, [X0+1432]
	047 Call 0x1C17CF4
	048 Move W8, 1
	049 Move [X28+960], W8
	050 Move X0, [X27]
	051 Move X27, [X31+320]
	052 Move W8, [X0+224]
	053 Compare W8, 0
	054 JumpIfNotEqual {56}
	055 Call 0x1C17DFC
	056 Move X0, X24
	057 Move X1, X31
	058 Move X2, X31
	059 Call Object.op_Equality, X0, X1
	060 Move TEMP, X0
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfNotEqual {66}
	064 Move W0, W31
	065 Move W8, 4
	066 Move W8, [X31+312]
	067 Move W9, [X31+304]
	068 Move W10, [X31+288]
	069 Move W11, [X31+280]
	070 Move V0, [X31+296]
	071 Move V1, [X31+300]
	072 Move W12, [X31+272]
	073 Move W13, [X31+264]
	074 Move W14, [X31+256]
	075 Add X15, X31, 172
	076 And W8, W8, 1
	077 And W9, W9, 1
	078 Move [X31+48], S1
	079 Move [X31+40], S0
	080 Move [X31+32], W10
	081 And W10, W11, 1
	082 And W5, W23, 1
	083 And W6, W22, 1
	084 Move X0, X26
	085 Move X1, X25
	086 Move X2, X24
	087 Move V0, V15
	088 Move V1, V14
	089 Move V2, V13
	090 Move V3, V12
	091 Move W3, W21
	092 Move V4, V11
	093 Move V5, V10
	094 Move W4, W20
	095 Move W7, W19
	096 Move V6, V9
	097 Move V7, V8
	098 Move [X31+172], W31
	099 Move [X31+16], W12
	100 Move [X31+8], W13
	101 Move [X31+72], X15
	102 Move [X31+64], W8
	103 Move [X31+56], W9
	104 Move [X31+24], W10
	105 Move [X31], W14
	106 Call TextGenerator.Populate_Internal, X0, X1, X2, X3, X4, V0, V1, X5, X6, X7, X8, X9, X10, X11, X12, X13, V2, V3, V4, V5, X14, X15, X16
	107 Move W8, [X31+172]
	108 Move [X27], W8
	109 Move X20, [X31+240]
	110 Move X19, [X31+248]
	111 Move X22, [X31+224]
	112 Move X21, [X31+232]
	113 Move X24, [X31+208]
	114 Move X23, [X31+216]
	115 Move X26, [X31+192]
	116 Move X25, [X31+200]
	117 Move X28, [X31+176]
	118 Move X27, [X31+184]
	119 Move X30, [X31+160]
	120 Move D9, [X31+144]
	121 Move D8, [X31+152]
	122 Move D11, [X31+128]
	123 Move D10, [X31+136]
	124 Move D13, [X31+112]
	125 Move D12, [X31+120]
	126 Move D15, [X31+96]
	127 Move D14, [X31+104]
	128 And W0, W0, 1
	129 Add X31, X31, 256
	130 Return X0

Method: System.Void GetVerticesInternal(System.Object vertices)

Disassembly:
	0x03CCFF7C MOV W1, W19
	0x03CCFF80 LDP X20, X19, [X31 + 0x10]
	0x03CCFF84 LDP X30, X21, [X31], #0x20
	0x03CCFF88 BR X2
	0x03CCFF8C STP X30, X21, [X31 - 0x20]!
	0x03CCFF90 STP X20, X19, [X31 + 0x10]
	0x03CCFF94 LDR X8, [X2 + 0x8]
	0x03CCFF98 STP X1, X2, [X0 + 0x20]
	0x03CCFF9C MOV X19, X0
	0x03CCFFA0 MOV X20, X1
	0x03CCFFA4 STR X8, [X0 + 0x10]
	0x03CCFFA8 LDRB W21, [X2 + 0x52]
	0x03CCFFAC STR X0, [X0 + 0x40]
	0x03CCFFB0 MOV X0, X2
	0x03CCFFB4 BL 0x1C16D84
	0x03CCFFB8 TBZ X0, 0x0, 0x3CCFFD0
	0x03CCFFBC CBNZ W21, 0x3CCFFD4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x719000
	006 Move X2, [X21+968]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -52056064
	012 Add X0, X0, 836
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+968], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void GetCharactersInternal(System.Object characters)

Disassembly:
	0x03CCFE6C LDP X20, X19, [X31 + 0x10]
	0x03CCFE70 LDP X30, X21, [X31], #0x20
	0x03CCFE74 BR X2
	0x03CCFE78 STP X30, X21, [X31 - 0x20]!
	0x03CCFE7C STP X20, X19, [X31 + 0x10]
	0x03CCFE80 ADRP X20, 0x718000
	0x03CCFE84 ADRP X21, 0x492000
	0x03CCFE88 LDRB W8, [X20 + 0x411]
	0x03CCFE8C LDR X21, [X21 + 0xFE8]
	0x03CCFE90 MOV X19, X0
	0x03CCFE94 TBNZ X8, 0x0, 0x3CCFEAC
	0x03CCFE98 ADRP X0, 0x492000
	0x03CCFE9C LDR X0, [X0 + 0xFE8]
	0x03CCFEA0 BL 0x1C16CF4
	0x03CCFEA4 MOVZ W8, 0x1
	0x03CCFEA8 STRB W8, [X20 + 0x411]
	0x03CCFEAC LDR X8, [X21]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x719000
	006 Move X2, [X21+976]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -52154368
	012 Add X0, X0, 1864
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+976], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void GetLinesInternal(System.Object lines)

Disassembly:
	0x03CCFEF4 LDP X20, X19, [X31 + 0x10]
	0x03CCFEF8 LDP X30, X21, [X31], #0x20
	0x03CCFEFC RET
	0x03CCFF00 BL 0x1C16F20
	0x03CCFF04 STP X30, X21, [X31 - 0x20]!
	0x03CCFF08 STP X20, X19, [X31 + 0x10]
	0x03CCFF0C ADRP X21, 0x718000
	0x03CCFF10 LDR X2, [X21 + 0x418]
	0x03CCFF14 MOV W19, W1
	0x03CCFF18 MOV X20, X0
	0x03CCFF1C CBNZ X2, 0x3CCFF34
	0x03CCFF20 ADRP X0, 0xFFFFFFFFFCE3A000
	0x03CCFF24 ADD X0, X0, 0xD5B
	0x03CCFF28 BL 0x1C16CB8
	0x03CCFF2C MOV X2, X0
	0x03CCFF30 STR X0, [X21 + 0x418]
	0x03CCFF34 AND W1, W19, 0xFFFF

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x719000
	006 Move X2, [X21+984]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -52219904
	012 Add X0, X0, 2182
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+984], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void get_rectExtents_Injected(out UnityEngine.Rect ret)

Disassembly:
	0x03CD0738 BL 0x33BDD8C
	0x03CD073C LDR X0, [X23]
	0x03CD0740 BL 0x1C16F10
	0x03CD0744 LDR X2, [X24]
	0x03CD0748 MOV X1, X19
	0x03CD074C MOV X3, X31
	0x03CD0750 MOV X20, X0
	0x03CD0754 BL 0x3E251A8
	0x03CD0758 MOV X0, X20
	0x03CD075C LDP X20, X19, [X31 + 0x30]
	0x03CD0760 LDP X22, X21, [X31 + 0x20]
	0x03CD0764 LDP X24, X23, [X31 + 0x10]
	0x03CD0768 MOV X1, X31
	0x03CD076C LDR X30, [X31], #0x40
	0x03CD0770 B 0x3E24344
	0x03CD0774 BL 0x1C16F28
	0x03CD0778 BL 0x1C16F20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x718000
	006 Move X2, [X21+992]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -52158464
	012 Add X0, X0, 1928
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+992], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Boolean Populate_Internal_Injected(System.String str, UnityEngine.Font font, ref UnityEngine.Color color, System.Int32 fontSize, System.Single scaleFactor, System.Single lineSpacing, UnityEngine.FontStyle style, System.Boolean richText, System.Boolean resizeTextForBestFit, System.Int32 resizeTextMinSize, System.Int32 resizeTextMaxSize, System.Int32 verticalOverFlow, System.Int32 horizontalOverflow, System.Boolean updateBounds, UnityEngine.TextAnchor anchor, System.Single extentsX, System.Single extentsY, System.Single pivotX, System.Single pivotY, System.Boolean generateOutOfBounds, System.Boolean alignByGeometry, out System.UInt32 error)

Disassembly:
	0x03CD0904 MOV X19, X0
	0x03CD0908 TBNZ X8, 0x0, 0x3CD0944
	0x03CD090C ADRP X0, 0x489000
	0x03CD0910 LDR X0, [X0 + 0xB20]
	0x03CD0914 BL 0x1C16CF4
	0x03CD0918 ADRP X0, 0x492000
	0x03CD091C LDR X0, [X0 + 0x88]
	0x03CD0920 BL 0x1C16CF4
	0x03CD0924 ADRP X0, 0x492000
	0x03CD0928 LDR X0, [X0 + 0x90]
	0x03CD092C BL 0x1C16CF4
	0x03CD0930 ADRP X0, 0x492000
	0x03CD0934 LDR X0, [X0 + 0x98]
	0x03CD0938 BL 0x1C16CF4
	0x03CD093C MOVZ W8, 0x1
	0x03CD0940 STRB W8, [X20 + 0x432]
	0x03CD0944 LDR X0, [X19 + 0x20]
	0x03CD0948 CBZ X0, 0x3CD0BB8
	0x03CD094C LDR W8, [X0 + 0x20]
	0x03CD0950 SUBS W20, W8, 0x1
	0x03CD0954 B.MI 0x3CD0A80
	0x03CD0958 ADRP X22, 0x492000
	0x03CD095C ADRP X23, 0x492000
	0x03CD0960 ADRP X24, 0x489000
	0x03CD0964 LDR X22, [X22 + 0x98]
	0x03CD0968 LDR X23, [X23 + 0x88]
	0x03CD096C LDR X24, [X24 + 0xB20]
	0x03CD0970 LDR X2, [X22]
	0x03CD0974 MOV W1, W20
	0x03CD0978 BL 0x2DE2D54
	0x03CD097C CBZ X0, 0x3CD09C4
	0x03CD0980 LDR X8, [X0]
	0x03CD0984 LDR X1, [X24]
	0x03CD0988 MOV X21, X0
	0x03CD098C LDRH W9, [X8 + 0x12E]
	0x03CD0990 CBZ X9, 0x3CD09B4
	0x03CD0994 LDR X10, [X8 + 0xB0]
	0x03CD0998 ADD X10, X10, 0x8
	0x03CD099C LDUR X11, [X10 - 0x8]
	0x03CD09A0 CMP X11, X1
	0x03CD09A4 B.EQ 0x3CD09DC
	0x03CD09A8 SUBS X9, X9, 0x1
	0x03CD09AC ADD X10, X10, 0x10
	0x03CD09B0 B.NE 0x3CD099C
	0x03CD09B4 MOVZ W2, 0x4
	0x03CD09B8 MOV X0, X21
	0x03CD09BC BL 0x1C5C788
	0x03CD09C0 B 0x3CD09EC
	0x03CD09C4 LDR X0, [X19 + 0x20]
	0x03CD09C8 CBZ X0, 0x3CD0BB8
	0x03CD09CC LDR X2, [X23]
	0x03CD09D0 MOV W1, W20
	0x03CD09D4 BL 0x2DE2B38
	0x03CD09D8 B 0x3CD0A6C
	0x03CD09DC LDR W9, [X10]
	0x03CD09E0 ADD W9, W9, 0x4
	0x03CD09E4 ADD X8, X8, W9, 0x4, SXTW
	0x03CD09E8 ADD X0, X8, 0x138
	0x03CD09EC LDP X8, X1, [X0]
	0x03CD09F0 MOV X0, X21
	0x03CD09F4 BLR X8
	0x03CD09F8 TBZ X0, 0x0, 0x3CD0A6C
	0x03CD09FC LDR X0, [X19 + 0x20]
	0x03CD0A00 CBZ X0, 0x3CD0BB8
	0x03CD0A04 LDR X2, [X23]
	0x03CD0A08 MOV W1, W20
	0x03CD0A0C BL 0x2DE2B38
	0x03CD0A10 LDR X8, [X21]
	0x03CD0A14 LDR X1, [X24]
	0x03CD0A18 LDRH W9, [X8 + 0x12E]
	0x03CD0A1C CBZ X9, 0x3CD0A40
	0x03CD0A20 LDR X10, [X8 + 0xB0]
	0x03CD0A24 ADD X10, X10, 0x8
	0x03CD0A28 LDUR X11, [X10 - 0x8]
	0x03CD0A2C CMP X11, X1
	0x03CD0A30 B.EQ 0x3CD0A50

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+48], D13
	003 Move [X31+56], D12
	004 Move [X31+64], D11
	005 Move [X31+72], D10
	006 Move [X31+80], D9
	007 Move [X31+88], D8
	008 Move [X31+96], X29
	009 Move [X31+104], X30
	010 Move [X31+112], X28
	011 Move [X31+120], X27
	012 Move [X31+128], X26
	013 Move [X31+136], X25
	014 Move [X31+144], X24
	015 Move [X31+152], X23
	016 Move [X31+160], X22
	017 Move [X31+168], X21
	018 Move [X31+176], X20
	019 Move [X31+184], X19
	020 Move X25, 0x718000
	021 Move X19, [X31+256]
	022 Move W29, [X31+248]
	023 Move W27, [X31+240]
	024 Move W20, [X31+232]
	025 Move W28, [X31+224]
	026 Move W21, [X31+216]
	027 Move W22, [X31+208]
	028 Move W23, [X31+200]
	029 Move X8, [X25+1000]
	030 Move W24, [X31+192]
	031 Move V8, V5
	032 Move V9, V4
	033 Move V10, V3
	034 Move V11, V2
	035 Move V12, V1
	036 Move V13, V0
	037 Compare X8, 0
	038 JumpIfNotEqual {60}
	039 Move [X31], X0
	040 Move X0, -52092928
	041 Add X0, X0, 1363
	042 Move [X31+44], W5
	043 Move W26, W4
	044 Move [X31+24], X2
	045 Move [X31+32], X3
	046 Move [X31+16], X1
	047 Move [X31+8], W6
	048 Move [X31+12], W7
	049 Call 0x1C17CB8
	050 Move W6, [X31+8]
	051 Move W7, [X31+12]
	052 Move X1, [X31+16]
	053 Move X2, [X31+24]
	054 Move X3, [X31+32]
	055 Move W5, [X31+44]
	056 Move X8, X0
	057 Move X0, [X31]
	058 Move W4, W26
	059 Move [X25+1000], X8
	060 Move [X31+256], X19
	061 Move [X31+232], W20
	062 Move [X31+216], W21
	063 Move [X31+208], W22
	064 Move [X31+200], W23
	065 Move [X31+192], W24
	066 And W9, W29, 1
	067 And W10, W27, 1
	068 And W11, W28, 1
	069 Move V0, V13
	070 Move V1, V12
	071 Move V2, V11
	072 Move V3, V10
	073 Move V4, V9
	074 Move V5, V8
	075 Move X20, [X31+176]
	076 Move X19, [X31+184]
	077 Move X22, [X31+160]
	078 Move X21, [X31+168]
	079 Move X24, [X31+144]
	080 Move X23, [X31+152]
	081 Move X26, [X31+128]
	082 Move X25, [X31+136]
	083 Move X28, [X31+112]
	084 Move X27, [X31+120]
	085 Move X29, [X31+96]
	086 Move X30, [X31+104]
	087 Move D9, [X31+80]
	088 Move D8, [X31+88]
	089 Move D11, [X31+64]
	090 Move D10, [X31+72]
	091 Move D13, [X31+48]
	092 Move D12, [X31+56]
	093 And W6, W6, 1
	094 And W7, W7, 1
	095 Move [X31+248], W9
	096 Move [X31+240], W10
	097 Move [X31+224], W11
	098 Add X31, X31, 192
	099 CallNoReturn X8

