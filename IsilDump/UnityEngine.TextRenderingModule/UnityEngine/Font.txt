Type: UnityEngine.Font

Method: System.Void add_textureRebuilt(System.Action`1<UnityEngine.Font> value)

Disassembly:
	0x03CD0BA0 MOV X0, X21
	0x03CD0BA4 BLR X8
	0x03CD0BA8 SUBS W20, W20, 0x1
	0x03CD0BAC B.MI 0x3CD0BBC
	0x03CD0BB0 LDR X0, [X19 + 0x28]
	0x03CD0BB4 CBNZ X0, 0x3CD0AAC
	0x03CD0BB8 BL 0x1C16F20
	0x03CD0BBC LDP X20, X19, [X31 + 0x30]
	0x03CD0BC0 LDP X22, X21, [X31 + 0x20]
	0x03CD0BC4 LDP X24, X23, [X31 + 0x10]
	0x03CD0BC8 LDR X30, [X31], #0x40
	0x03CD0BCC RET
	0x03CD0BD0 STR X30, [X31 - 0x60]!
	0x03CD0BD4 STP X28, X27, [X31 + 0x10]
	0x03CD0BD8 STP X26, X25, [X31 + 0x20]
	0x03CD0BDC STP X24, X23, [X31 + 0x30]
	0x03CD0BE0 STP X22, X21, [X31 + 0x40]
	0x03CD0BE4 STP X20, X19, [X31 + 0x50]
	0x03CD0BE8 ADRP X21, 0x717000
	0x03CD0BEC ADRP X20, 0x488000
	0x03CD0BF0 LDRB W8, [X21 + 0x433]
	0x03CD0BF4 LDR X20, [X20 + 0x718]
	0x03CD0BF8 MOV X19, X0
	0x03CD0BFC TBNZ X8, 0x0, 0x3CD0C50
	0x03CD0C00 ADRP X0, 0x488000
	0x03CD0C04 LDR X0, [X0 + 0x718]
	0x03CD0C08 BL 0x1C16CF4
	0x03CD0C0C ADRP X0, 0x489000
	0x03CD0C10 LDR X0, [X0 + 0xB20]
	0x03CD0C14 BL 0x1C16CF4
	0x03CD0C18 ADRP X0, 0x492000
	0x03CD0C1C LDR X0, [X0 + 0xA0]
	0x03CD0C20 BL 0x1C16CF4
	0x03CD0C24 ADRP X0, 0x492000
	0x03CD0C28 LDR X0, [X0 + 0xA8]
	0x03CD0C2C BL 0x1C16CF4
	0x03CD0C30 ADRP X0, 0x492000
	0x03CD0C34 LDR X0, [X0 + 0x90]
	0x03CD0C38 BL 0x1C16CF4
	0x03CD0C3C ADRP X0, 0x492000
	0x03CD0C40 LDR X0, [X0 + 0x98]
	0x03CD0C44 BL 0x1C16CF4
	0x03CD0C48 MOVZ W8, 0x1
	0x03CD0C4C STRB W8, [X21 + 0x433]
	0x03CD0C50 MOV W0, W31
	0x03CD0C54 MOV X1, X31
	0x03CD0C58 BL 0x3E25244
	0x03CD0C5C MOV X0, X19
	0x03CD0C60 BL 0x3CD08EC
	0x03CD0C64 MOVZ W8, 0x1
	0x03CD0C68 STRB W8, [X19 + 0x10]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x718000
	009 Move X23, 0x492000
	010 Move W8, [X20+1009]
	011 Move X23, [X23+4072]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x492000
	018 Move X0, [X0+4080]
	019 Call 0x1C17CF4
	020 Move X0, 0x492000
	021 Move X0, [X0+4072]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+1009], W8
	025 Move X8, [X23]
	026 Move X24, 0x492000
	027 Move X8, [X8+184]
	028 Move X20, [X8]
	029 Move X24, [X24+4080]
	030 Move X0, X20
	031 Move X1, X19
	032 Move X2, X31
	033 Call Delegate.Combine, X0, X1
	034 Compare X0, 0
	035 JumpIfEqual {43}
	036 Move X22, [X24]
	037 Move X21, X0
	038 Move X1, X22
	039 Call 0x1C17E00
	040 Move X1, X0
	041 Compare X0, 0
	042 JumpIfNotEqual {44}
	043 Move X1, X31
	044 Move X8, [X23]
	045 Move X2, X20
	046 Move X0, [X8+184]
	047 Call 0x1C25138
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X20, X0
	050 Move X20, [X31+48]
	051 Move X19, [X31+56]
	052 Move X22, [X31+32]
	053 Move X21, [X31+40]
	054 Move X24, [X31+16]
	055 Move X23, [X31+24]
	056 Move X30, [X31+64]
	057 Return 
	058 Move X0, X21
	059 Move X1, X22
	060 Call 0x1C181E0

Method: System.Void remove_textureRebuilt(System.Action`1<UnityEngine.Font> value)

Disassembly:
	0x03CD0C6C LDR X0, [X20]
	0x03CD0C70 LDR X22, [X19 + 0x20]
	0x03CD0C74 LDR W8, [X0 + 0xE0]
	0x03CD0C78 CBNZ W8, 0x3CD0C80
	0x03CD0C7C BL 0x1C16DFC
	0x03CD0C80 CBZ X22, 0x3CD1170
	0x03CD0C84 LDR X8, [X20]
	0x03CD0C88 ADRP X9, 0x492000
	0x03CD0C8C ADRP X20, 0x492000
	0x03CD0C90 ADRP X21, 0x489000
	0x03CD0C94 LDR X8, [X8 + 0xB8]
	0x03CD0C98 LDR X9, [X9 + 0xA8]
	0x03CD0C9C ADRP X28, 0x492000
	0x03CD0CA0 MOV X0, X22
	0x03CD0CA4 LDR X1, [X8 + 0x8]
	0x03CD0CA8 LDR X2, [X9]
	0x03CD0CAC LDR X20, [X20 + 0x98]
	0x03CD0CB0 LDR X21, [X21 + 0xB20]
	0x03CD0CB4 LDR X28, [X28 + 0xA0]
	0x03CD0CB8 BL 0x2DE2F04
	0x03CD0CBC ADRP X23, 0x423000
	0x03CD0CC0 ADRP X24, 0x423000
	0x03CD0CC4 LDR X0, [X19 + 0x20]
	0x03CD0CC8 LDR X23, [X23 + 0x7D0]
	0x03CD0CCC LDR X24, [X24 + 0xA28]
	0x03CD0CD0 MOV W22, W31
	0x03CD0CD4 CBZ X0, 0x3CD1170
	0x03CD0CD8 MOV W25, W31
	0x03CD0CDC LDR W8, [X0 + 0x20]
	0x03CD0CE0 CMP W25, W8
	0x03CD0CE4 B.GE 0x3CD0E4C
	0x03CD0CE8 LDR X2, [X20]
	0x03CD0CEC MOV W1, W25
	0x03CD0CF0 BL 0x2DE2D54
	0x03CD0CF4 MOV X26, X0
	0x03CD0CF8 MOV X1, X0
	0x03CD0CFC BL 0x3CD081C
	0x03CD0D00 TBZ X0, 0x0, 0x3CD0D64
	0x03CD0D04 CBZ X26, 0x3CD0D74
	0x03CD0D08 LDR X8, [X26]
	0x03CD0D0C LDR X1, [X21]
	0x03CD0D10 LDRH W9, [X8 + 0x12E]
	0x03CD0D14 CBZ X9, 0x3CD0D38
	0x03CD0D18 LDR X10, [X8 + 0xB0]
	0x03CD0D1C ADD X10, X10, 0x8
	0x03CD0D20 LDUR X11, [X10 - 0x8]
	0x03CD0D24 CMP X11, X1
	0x03CD0D28 B.EQ 0x3CD0D48
	0x03CD0D2C SUBS X9, X9, 0x1
	0x03CD0D30 ADD X10, X10, 0x10
	0x03CD0D34 B.NE 0x3CD0D20

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x718000
	009 Move X23, 0x492000
	010 Move W8, [X20+1010]
	011 Move X23, [X23+4072]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x492000
	018 Move X0, [X0+4080]
	019 Call 0x1C17CF4
	020 Move X0, 0x492000
	021 Move X0, [X0+4072]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+1010], W8
	025 Move X8, [X23]
	026 Move X24, 0x492000
	027 Move X8, [X8+184]
	028 Move X20, [X8]
	029 Move X24, [X24+4080]
	030 Move X0, X20
	031 Move X1, X19
	032 Move X2, X31
	033 Call Delegate.Remove, X0, X1
	034 Compare X0, 0
	035 JumpIfEqual {43}
	036 Move X22, [X24]
	037 Move X21, X0
	038 Move X1, X22
	039 Call 0x1C17E00
	040 Move X1, X0
	041 Compare X0, 0
	042 JumpIfNotEqual {44}
	043 Move X1, X31
	044 Move X8, [X23]
	045 Move X2, X20
	046 Move X0, [X8+184]
	047 Call 0x1C25138
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X20, X0
	050 Move X20, [X31+48]
	051 Move X19, [X31+56]
	052 Move X22, [X31+32]
	053 Move X21, [X31+40]
	054 Move X24, [X31+16]
	055 Move X23, [X31+24]
	056 Move X30, [X31+64]
	057 Return 
	058 Move X0, X21
	059 Move X1, X22
	060 Call 0x1C181E0

Method: UnityEngine.Material get_material()

Disassembly:
	0x03CD0D38 MOV X0, X26
	0x03CD0D3C MOV W2, W31
	0x03CD0D40 BL 0x1C5C788
	0x03CD0D44 B 0x3CD0D54
	0x03CD0D48 LDRSW X9, [X10]
	0x03CD0D4C ADD X8, X8, X9, 0x4, LSL
	0x03CD0D50 ADD X0, X8, 0x138
	0x03CD0D54 LDP X8, X2, [X0]
	0x03CD0D58 MOV X0, X26
	0x03CD0D5C MOV W1, W22
	0x03CD0D60 BLR X8
	0x03CD0D64 LDR X0, [X19 + 0x20]
	0x03CD0D68 ADD W25, W25, 0x1
	0x03CD0D6C CBNZ X0, 0x3CD0CDC
	0x03CD0D70 B 0x3CD1170

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x718000
	005 Move X1, [X20+1016]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -52240384
	010 Add X0, X0, 3086
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+1016], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Boolean get_dynamic()

Disassembly:
	0x03CCFDE4 LDR X0, [X21]
	0x03CCFDE8 LDR W8, [X0 + 0xE0]
	0x03CCFDEC CBNZ W8, 0x3CCFDF4
	0x03CCFDF0 BL 0x1C16DFC
	0x03CCFDF4 MOV X0, X19
	0x03CCFDF8 MOV X1, X31
	0x03CCFDFC BL 0x3C33594
	0x03CCFE00 ADRP X20, 0x718000
	0x03CCFE04 LDR X2, [X20 + 0x420]
	0x03CCFE08 CBNZ X2, 0x3CCFE20
	0x03CCFE0C ADRP X0, 0xFFFFFFFFFCE32000
	0x03CCFE10 ADD X0, X0, 0x8C1
	0x03CCFE14 BL 0x1C16CB8
	0x03CCFE18 MOV X2, X0
	0x03CCFE1C STR X0, [X20 + 0x420]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x719000
	005 Move X1, [X20+1024]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -52170752
	010 Add X0, X0, 3006
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+1024], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Int32 get_fontSize()

Disassembly:
	0x03CD0D74 BL 0x1C16F20
	0x03CD0D78 B 0x3CD11A4
	0x03CD0D7C B 0x3CD0D80
	0x03CD0D80 MOV X27, X0
	0x03CD0D84 CMP W1, 0x1
	0x03CD0D88 B.NE 0x3CD1204
	0x03CD0D8C MOV X0, X27
	0x03CD0D90 BL 0x3EB1AD0
	0x03CD0D94 MOV X27, X0
	0x03CD0D98 MOV X0, X23
	0x03CD0D9C BL 0x1C16D08
	0x03CD0DA0 LDR X8, [X27]
	0x03CD0DA4 LDR X1, [X8]
	0x03CD0DA8 BL 0x1C17270
	0x03CD0DAC TBZ X0, 0x0, 0x3CD11A4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x718000
	005 Move X1, [X20+1032]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -52174848
	010 Add X0, X0, 3038
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+1032], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void .ctor()

Disassembly:
	0x03CD0DB0 LDR X27, [X27]
	0x03CD0DB4 BL 0x3EB1AE0
	0x03CD0DB8 CBZ X26, 0x3CD1170
	0x03CD0DBC MOV X0, X21
	0x03CD0DC0 BL 0x1C16D08
	0x03CD0DC4 LDR X8, [X26]
	0x03CD0DC8 MOV X1, X0
	0x03CD0DCC LDRH W9, [X8 + 0x12E]
	0x03CD0DD0 CBZ X9, 0x3CD0DF4
	0x03CD0DD4 LDR X10, [X8 + 0xB0]
	0x03CD0DD8 ADD X10, X10, 0x8
	0x03CD0DDC LDUR X11, [X10 - 0x8]
	0x03CD0DE0 CMP X11, X1
	0x03CD0DE4 B.EQ 0x3CD0E04
	0x03CD0DE8 SUBS X9, X9, 0x1
	0x03CD0DEC ADD X10, X10, 0x10
	0x03CD0DF0 B.NE 0x3CD0DDC
	0x03CD0DF4 MOVZ W2, 0x1
	0x03CD0DF8 MOV X0, X26
	0x03CD0DFC BL 0x1C5C788
	0x03CD0E00 B 0x3CD0E14
	0x03CD0E04 LDR W9, [X10]
	0x03CD0E08 ADD W9, W9, 0x1
	0x03CD0E0C ADD X8, X8, W9, 0x4, SXTW
	0x03CD0E10 ADD X0, X8, 0x138
	0x03CD0E14 LDP X8, X1, [X0]
	0x03CD0E18 MOV X0, X26
	0x03CD0E1C BLR X8
	0x03CD0E20 MOV X26, X0
	0x03CD0E24 MOV X0, X24
	0x03CD0E28 BL 0x1C16D08
	0x03CD0E2C LDR W8, [X0 + 0xE0]
	0x03CD0E30 CBNZ W8, 0x3CD0E38

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x718000
	006 Move X21, 0x424000
	007 Move W8, [X20+1040]
	008 Move X21, [X21+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x424000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1040], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Move X1, X31
	026 Call Object..ctor, X0
	027 Move X20, 0x718000
	028 Move X2, [X20+1056]
	029 Compare X2, 0
	030 JumpIfNotEqual {36}
	031 Move X0, -52224000
	032 Add X0, X0, 2241
	033 Call 0x1C17CB8
	034 Move X2, X0
	035 Move [X20+1056], X0
	036 Move X0, X19
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X1, X31
	040 Move X30, [X31+32]
	041 Move X21, [X31+40]
	042 CallNoReturn X2

Method: System.Void InvokeTextureRebuilt_Internal(UnityEngine.Font font)

Disassembly:
	0x03CD0E78 LDR X8, [X0]
	0x03CD0E7C LDR X1, [X21]
	0x03CD0E80 MOV X23, X0
	0x03CD0E84 LDRH W9, [X8 + 0x12E]
	0x03CD0E88 CBZ X9, 0x3CD0EAC
	0x03CD0E8C LDR X10, [X8 + 0xB0]
	0x03CD0E90 ADD X10, X10, 0x8
	0x03CD0E94 LDUR X11, [X10 - 0x8]
	0x03CD0E98 CMP X11, X1
	0x03CD0E9C B.EQ 0x3CD0EBC
	0x03CD0EA0 SUBS X9, X9, 0x1
	0x03CD0EA4 ADD X10, X10, 0x10
	0x03CD0EA8 B.NE 0x3CD0E94
	0x03CD0EAC MOVZ W2, 0x2
	0x03CD0EB0 MOV X0, X23
	0x03CD0EB4 BL 0x1C5C788
	0x03CD0EB8 B 0x3CD0ECC
	0x03CD0EBC LDR W9, [X10]
	0x03CD0EC0 ADD W9, W9, 0x2
	0x03CD0EC4 ADD X8, X8, W9, 0x4, SXTW
	0x03CD0EC8 ADD X0, X8, 0x138
	0x03CD0ECC LDP X8, X1, [X0]
	0x03CD0ED0 MOV X0, X23
	0x03CD0ED4 BLR X8
	0x03CD0ED8 LDR X0, [X19 + 0x20]
	0x03CD0EDC ADD W22, W22, 0x1
	0x03CD0EE0 CBNZ X0, 0x3CD0E5C
	0x03CD0EE4 B 0x3CD1170
	0x03CD0EE8 LDR X1, [X28]
	0x03CD0EEC BL 0x2DE29D4
	0x03CD0EF0 MOV W0, W31
	0x03CD0EF4 MOV X1, X31
	0x03CD0EF8 STRB W31, [X19 + 0x10]
	0x03CD0EFC BL 0x3E25280
	0x03CD0F00 MOVZ W0, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x718000
	006 Move X21, 0x492000
	007 Move W8, [X20+1041]
	008 Move X21, [X21+4072]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x492000
	015 Move X0, [X0+4072]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1041], W8
	019 Move X8, [X21]
	020 Move X8, [X8+184]
	021 Move X8, [X8]
	022 Compare X8, 0
	023 JumpIfEqual {29}
	024 Move X9, [X8+24]
	025 Move X0, [X8+64]
	026 Move X2, [X8+40]
	027 Move X1, X19
	028 NotImplemented "Instruction BLR not yet implemented."
	029 Compare X19, 0
	030 JumpIfEqual {47}
	031 Move X8, [X19+24]
	032 Compare X8, 0
	033 JumpIfEqual {42}
	034 Move X2, [X8+24]
	035 Move X0, [X8+64]
	036 Move X1, [X8+40]
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X30, [X31+32]
	040 Move X21, [X31+40]
	041 CallNoReturn X2
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X30, [X31+32]
	045 Move X21, [X31+40]
	046 Return 
	047 Call 0x1C17F20

Method: System.Boolean HasCharacter(System.Char c)

Disassembly:
	0x03CD0F04 MOV X1, X31
	0x03CD0F08 MOVZ W22, 0x1
	0x03CD0F0C BL 0x3E25244
	0x03CD0F10 BL 0x3CD1210
	0x03CD0F14 CBZ X0, 0x3CD1170
	0x03CD0F18 BL 0x3CD1284
	0x03CD0F1C STRB W22, [X19 + 0x11]
	0x03CD0F20 ADRP X23, 0x423000
	0x03CD0F24 ADRP X24, 0x423000
	0x03CD0F28 LDR X0, [X19 + 0x28]
	0x03CD0F2C LDR X23, [X23 + 0x7D0]
	0x03CD0F30 LDR X24, [X24 + 0xA28]
	0x03CD0F34 MOVZ W22, 0x3
	0x03CD0F38 CBZ X0, 0x3CD1170
	0x03CD0F3C MOV W25, W31
	0x03CD0F40 LDR W8, [X0 + 0x20]
	0x03CD0F44 CMP W25, W8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x718000
	006 Move X2, [X21+1048]
	007 Move W19, W1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -52191232
	012 Add X0, X0, 3419
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+1048], X0
	016 And W1, W19, 0xFFFF
	017 Move X0, X20
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Boolean HasCharacter(System.Int32 c)

Disassembly:
	0x03CD0F48 B.GE 0x3CD10D8
	0x03CD0F4C LDR X2, [X20]
	0x03CD0F50 MOV W1, W25
	0x03CD0F54 BL 0x2DE2D54
	0x03CD0F58 MOV X26, X0
	0x03CD0F5C MOV X1, X0
	0x03CD0F60 BL 0x3CD081C
	0x03CD0F64 TBZ X0, 0x0, 0x3CD0FC8
	0x03CD0F68 CBZ X26, 0x3CD0FD8
	0x03CD0F6C LDR X8, [X26]
	0x03CD0F70 LDR X1, [X21]
	0x03CD0F74 LDRH W9, [X8 + 0x12E]
	0x03CD0F78 CBZ X9, 0x3CD0F9C
	0x03CD0F7C LDR X10, [X8 + 0xB0]
	0x03CD0F80 ADD X10, X10, 0x8
	0x03CD0F84 LDUR X11, [X10 - 0x8]
	0x03CD0F88 CMP X11, X1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x718000
	006 Move X2, [X21+1048]
	007 Move W19, W1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -52191232
	012 Add X0, X0, 3419
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+1048], X0
	016 Move X0, X20
	017 Move W1, W19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void Internal_CreateFont(UnityEngine.Font self, System.String name)

Disassembly:
	0x03CD0E34 BL 0x1C16DFC
	0x03CD0E38 MOV X0, X27
	0x03CD0E3C MOV X1, X26
	0x03CD0E40 MOV X2, X31
	0x03CD0E44 BL 0x3C068F0
	0x03CD0E48 B 0x3CD0D64
	0x03CD0E4C ADD W22, W22, 0x1
	0x03CD0E50 CMP W22, 0x3
	0x03CD0E54 B.NE 0x3CD0CD4
	0x03CD0E58 MOV W22, W31
	0x03CD0E5C LDR W8, [X0 + 0x20]
	0x03CD0E60 CMP W22, W8
	0x03CD0E64 B.GE 0x3CD0EE8
	0x03CD0E68 LDR X2, [X20]
	0x03CD0E6C MOV W1, W22
	0x03CD0E70 BL 0x2DE2D54
	0x03CD0E74 CBZ X0, 0x3CD1170

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x718000
	006 Move X2, [X21+1056]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -52224000
	012 Add X0, X0, 2241
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+1056], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

