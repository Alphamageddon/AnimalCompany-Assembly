Type: UnityEngine.InputSystem.InputActionAsset/<GetEnumerator>d__31

Method: System.Void .ctor(System.Int32 <>1__state)

Disassembly:
	0x03739598 LDR X8, [X8 + 0xC0]
	0x0373959C LDR X2, [X8 + 0x70]
	0x037395A0 BL 0x301BF90
	0x037395A4 CMP X22, 0x0
	0x037395A8 CSEL X23, X23, X22, EQ
	0x037395AC STR X21, [X31 + 0x10]
	0x037395B0 STR X23, [X31 + 0x28]
	0x037395B4 CBZ X22, 0x3739804
	0x037395B8 LDR X8, [X31 + 0x28]
	0x037395BC CBZ X8, 0x3739968

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move [X20+16], W19
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X30, [X31+32]
	012 Return 

Method: System.Void System.IDisposable.Dispose()

Disassembly:
	0x0373ABA0 LDR X0, [X0 + 0xFF0]

ISIL:
	001 Return 

Method: System.Boolean MoveNext()

Disassembly:
	0x0373ABA4 BL 0x1C16CF4
	0x0373ABA8 MOVZ W8, 0x1
	0x0373ABAC STRB W8, [X21 + 0xD12]
	0x0373ABB0 LDR X0, [X20]
	0x0373ABB4 LDR X20, [X19 + 0x20]
	0x0373ABB8 LDR W8, [X0 + 0xE0]
	0x0373ABBC CBNZ W8, 0x373ABC4
	0x0373ABC0 BL 0x1C16DFC
	0x0373ABC4 MOV X0, X20
	0x0373ABC8 MOV X1, X31
	0x0373ABCC MOV X2, X31
	0x0373ABD0 BL 0x3C354F8
	0x0373ABD4 TBZ X0, 0x0, 0x373ABFC
	0x0373ABD8 ADRP X8, 0x9C1000
	0x0373ABDC LDR X8, [X8 + 0xFF0]
	0x0373ABE0 LDR X1, [X19 + 0x20]
	0x0373ABE4 LDR X2, [X19 + 0x10]
	0x0373ABE8 LDP X20, X19, [X31 + 0x10]
	0x0373ABEC LDR X0, [X8]
	0x0373ABF0 MOV X3, X31
	0x0373ABF4 LDP X30, X21, [X31], #0x20
	0x0373ABF8 B 0x3227BD4
	0x0373ABFC LDR X0, [X19 + 0x10]
	0x0373AC00 MOV X1, X31
	0x0373AC04 BL 0x32277A8
	0x0373AC08 TBZ X0, 0x0, 0x373AC1C
	0x0373AC0C ADRP X8, 0xA0B000
	0x0373AC10 LDR X8, [X8 + 0x2A0]
	0x0373AC14 LDR X0, [X8]
	0x0373AC18 B 0x373AC20
	0x0373AC1C LDR X0, [X19 + 0x10]
	0x0373AC20 LDP X20, X19, [X31 + 0x10]
	0x0373AC24 LDP X30, X21, [X31], #0x20
	0x0373AC28 RET
	0x0373AC2C SUB X31, X31, 0x70
	0x0373AC30 STR X30, [X31 + 0x40]
	0x0373AC34 STP X22, X21, [X31 + 0x50]
	0x0373AC38 STP X20, X19, [X31 + 0x60]
	0x0373AC3C ADRP X22, 0xCA6000
	0x0373AC40 ADRP X21, 0xA0B000
	0x0373AC44 ADRP X20, 0xA0B000
	0x0373AC48 LDRB W8, [X22 + 0xD13]
	0x0373AC4C LDR X21, [X21 + 0x2A8]
	0x0373AC50 LDR X20, [X20 + 0x2B0]
	0x0373AC54 MOV X19, X0
	0x0373AC58 TBNZ X8, 0x0, 0x373AC7C
	0x0373AC5C ADRP X0, 0xA0B000
	0x0373AC60 LDR X0, [X0 + 0x2B0]
	0x0373AC64 BL 0x1C16CF4
	0x0373AC68 ADRP X0, 0xA0B000
	0x0373AC6C LDR X0, [X0 + 0x2A8]
	0x0373AC70 BL 0x1C16CF4
	0x0373AC74 MOVZ W8, 0x1
	0x0373AC78 STRB W8, [X22 + 0xD13]
	0x0373AC7C MOV X0, X19
	0x0373AC80 BL 0x3739CBC
	0x0373AC84 LDR X9, [X21]
	0x0373AC88 STP X0, X1, [X31 + 0x30]
	0x0373AC8C ADD X8, X31, 0x18
	0x0373AC90 ADD X0, X31, 0x30
	0x0373AC94 MOV X1, X9
	0x0373AC98 BL 0x24FD990
	0x0373AC9C LDUR V0, [X31 + 0x18]
	0x0373ACA0 LDR X8, [X31 + 0x28]
	0x0373ACA4 LDR X0, [X20]
	0x0373ACA8 ADD X1, X31, 0x0
	0x0373ACAC STR V0, [X31]
	0x0373ACB0 STR X8, [X31 + 0x10]
	0x0373ACB4 BL 0x1C16E04
	0x0373ACB8 LDP X20, X19, [X31 + 0x60]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xCA7000
	005 Move W8, [X20+3330]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0xA0C000
	012 Move X0, [X0+592]
	013 Call 0x1C17CF4
	014 Move X0, 0xA0C000
	015 Move X0, [X0+600]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3330], W8
	019 Move W8, [X19+16]
	020 Move X20, [X19+32]
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Compare W8, 0
	023 JumpIfNotEqual {71}
	024 Move TEMP, 0
	025 Not TEMP
	026 Move W8, TEMP
	027 Move [X19+16], W8
	028 Compare X20, 0
	029 JumpIfEqual {83}
	030 Move X8, [X20+24]
	031 Compare X8, 0
	032 JumpIfEqual {71}
	033 Move W8, W31
	034 Move [X19+40], W31
	035 Move W8, [X19+64]
	036 Move W9, [X19+68]
	037 Move TEMP, 0
	038 Not TEMP
	039 Move W10, TEMP
	040 Move [X19+16], W10
	041 Add W1, W9, 1
	042 Move [X19+68], W1
	043 Add X8, X9, W8
	044 Move X0, [X8+32]
	045 Compare X0, 0
	046 JumpIfEqual {83}
	047 Call InputActionMap.get_actions, X0
	048 Move X8, X1
	049 Move [X19+48], X0
	050 Move [X19+56], X8
	051 Move X8, X8
	052 ShiftRight X8, 32
	053 And X8, X8, 0x7FFFFFFF
	054 Move W1, W31
	055 Move [X19+64], W8
	056 Move [X19+68], W31
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Add X0, X19, 48
	059 Move [X0], X31
	060 Move [X0+8], X31
	061 Move W8, [X19+40]
	062 Add W8, W8, 1
	063 Move [X19+40], W8
	064 Compare X20, 0
	065 JumpIfEqual {83}
	066 Move X9, [X20+24]
	067 Compare X9, 0
	068 JumpIfEqual {83}
	069 Move W10, [X9+24]
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move W0, W31
	072 Move X8, 0xA0C000
	073 Move X8, [X8+600]
	074 Move X2, [X8]
	075 Call ReadOnlyArray`1<Object>.get_Item, X0, X1
	076 Move [X19+24], X0
	077 Move W0, 1
	078 Move [X19+16], W0
	079 Move X20, [X31+16]
	080 Move X19, [X31+24]
	081 Move X30, [X31+32]
	082 Return X0
	083 Call 0x1C17F20
	084 Call 0x1C17F28

Method: UnityEngine.InputSystem.InputAction System.Collections.Generic.IEnumerator<UnityEngine.InputSystem.InputAction>.get_Current()

Disassembly:
	0x0373AD1C UBFM W0, W8, 0x2, 0x2
	0x0373AD20 RET

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void System.Collections.IEnumerator.Reset()

Disassembly:
	0x0373AD24 LDR W8, [X0 + 0xC8]
	0x0373AD28 ANDS W31, W1, 0x1
	0x0373AD2C MOVZ W9, 0x4
	0x0373AD30 CSEL W9, W9, W31, NE
	0x0373AD34 AND W8, W8, 0xFFFFFFFB
	0x0373AD38 ORR W8, W8, W9, 0x0
	0x0373AD3C STR W8, [X0 + 0xC8]
	0x0373AD40 RET
	0x0373AD44 LDRB W8, [X0 + 0xC8]
	0x0373AD48 UBFM W0, W8, 0x3, 0x3
	0x0373AD4C RET
	0x0373AD50 LDR W8, [X0 + 0xC8]
	0x0373AD54 ANDS W31, W1, 0x1
	0x0373AD58 MOVZ W9, 0x8

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0x9BA000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0xA0C000
	011 Move X0, [X0+616]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x0373AD5C CSEL W9, W9, W31, NE
	0x0373AD60 AND W8, W8, 0xFFFFFFF7

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

