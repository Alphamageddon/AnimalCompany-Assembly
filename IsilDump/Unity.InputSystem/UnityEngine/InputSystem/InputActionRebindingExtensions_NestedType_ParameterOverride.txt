Type: UnityEngine.InputSystem.InputActionRebindingExtensions/ParameterOverride

Method: System.Type get_objectType()

Disassembly:
	0x037436D0 LDR X21, [X21 + 0xF50]
	0x037436D4 MOV X20, X1
	0x037436D8 MOV X19, X0
	0x037436DC TBNZ X8, 0x0, 0x37436F4
	0x037436E0 ADRP X0, 0xA01000
	0x037436E4 LDR X0, [X0 + 0xF50]
	0x037436E8 BL 0x1C16CF4
	0x037436EC MOVZ W8, 0x1
	0x037436F0 STRB W8, [X22 + 0xD58]
	0x037436F4 LDR X2, [X21]
	0x037436F8 MOVI V0.2D, 0x0
	0x037436FC ADD X0, X31, 0x0
	0x03743700 ADD X1, X31, 0x60
	0x03743704 STP X31, X20, [X31 + 0x80]
	0x03743708 STP V0, V0, [X31 + 0x40]
	0x0374370C STP V0, V0, [X31 + 0x20]
	0x03743710 STP V0, V0, [X31]
	0x03743714 STP V0, V0, [X31 + 0x60]
	0x03743718 STP V0, V0, [X31 + 0x90]
	0x0374371C STR X31, [X31 + 0xB0]
	0x03743720 BL 0x24324E4
	0x03743724 ADD X0, X19, 0x18
	0x03743728 ADD X1, X31, 0x0
	0x0374372C MOVZ W2, 0x60
	0x03743730 BL 0x3EB1AC0
	0x03743734 MOV X0, X19
	0x03743738 LDP X20, X19, [X31 + 0xE0]
	0x0374373C LDP X22, X21, [X31 + 0xD0]
	0x03743740 LDR X30, [X31 + 0xC0]
	0x03743744 ADD X31, X31, 0xF0
	0x03743748 RET
	0x0374374C LDR W8, [X0 + 0x168]
	0x03743750 ORR W8, W8, 0x80
	0x03743754 STR W8, [X0 + 0x168]
	0x03743758 RET
	0x0374375C LDR W8, [X0 + 0x168]
	0x03743760 STR X1, [X0 + 0xB8]
	0x03743764 ORR W8, W8, 0x100
	0x03743768 STR W8, [X0 + 0x168]
	0x0374376C RET
	0x03743770 SUB X31, X31, 0x30
	0x03743774 STR D8, [X31 + 0x10]
	0x03743778 STR X30, [X31 + 0x18]
	0x0374377C STP X20, X19, [X31 + 0x20]
	0x03743780 MOV V8.16B, V0.16B

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xC9E000
	006 Move X20, 0x9D9000
	007 Move W8, [X21+3406]
	008 Move X20, [X20+3136]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0x9D9000
	015 Move X0, [X0+3112]
	016 Call 0x1C17CF4
	017 Move X0, 0x9D9000
	018 Move X0, [X0+3120]
	019 Call 0x1C17CF4
	020 Move X0, 0x9D9000
	021 Move X0, [X0+3136]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+3406], W8
	025 Move X8, [X20]
	026 Move X1, [X19]
	027 Move X2, X31
	028 Move X0, [X8+184]
	029 Call TypeTable.LookupTypeRegistration, X0, X1
	030 Compare X0, 0
	031 JumpIfNotEqual {41}
	032 Move X8, 0x9D9000
	033 Move X8, [X8+3120]
	034 Move X1, [X19]
	035 Move X2, X31
	036 Move X8, [X8]
	037 Move X0, [X8+184]
	038 Call TypeTable.LookupTypeRegistration, X0, X1
	039 Compare X0, 0
	040 JumpIfEqual {46}
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move X30, [X31+32]
	044 Move X21, [X31+40]
	045 Return X0
	046 Move X8, 0x9D9000
	047 Move X8, [X8+3112]
	048 Move X1, [X19]
	049 Move X20, [X31+16]
	050 Move X19, [X31+24]
	051 Move X2, X31
	052 Move X8, [X8]
	053 Move X0, [X8+184]
	054 Move X30, [X31+32]
	055 Move X21, [X31+40]
	056 Call TypeTable.LookupTypeRegistration, X0, X1
	057 Return X0

Method: System.Void .ctor(System.String parameterName, UnityEngine.InputSystem.InputBinding bindingMask, UnityEngine.InputSystem.Utilities.PrimitiveValue value = null)

Disassembly:
	0x0373DE38 LDR W1, [X23 + 0xCC]
	0x0373DE3C ADRP X24, 0x9B6000
	0x0373DE40 LDR X24, [X24 + 0x598]
	0x0373DE44 ADD X8, X31, 0x180
	0x0373DE48 MOV X2, X22
	0x0373DE4C MOV X3, X21
	0x0373DE50 MOV X4, X20
	0x0373DE54 BL 0x3742C70
	0x0373DE58 LDR X0, [X24]
	0x0373DE5C LDR X23, [X23 + 0x20]
	0x0373DE60 LDR W8, [X0 + 0xE0]
	0x0373DE64 CBNZ W8, 0x373DE6C
	0x0373DE68 BL 0x1C16DFC
	0x0373DE6C MOV X0, X23
	0x0373DE70 MOV X1, X31
	0x0373DE74 MOV X2, X31
	0x0373DE78 BL 0x3C354F8
	0x0373DE7C TBZ X0, 0x0, 0x373DEB8
	0x0373DE80 ADD X0, X31, 0x280
	0x0373DE84 ADD X1, X31, 0x180
	0x0373DE88 MOVZ W2, 0x80
	0x0373DE8C BL 0x3EB1AC0
	0x0373DE90 CBZ X23, 0x373DF48
	0x0373DE94 LDR X0, [X23 + 0x98]
	0x0373DE98 LDR W1, [X23 + 0x90]
	0x0373DE9C ADD X8, X31, 0x200
	0x0373DEA0 MOV X2, X22
	0x0373DEA4 MOV X3, X21
	0x0373DEA8 MOV X4, X20
	0x0373DEAC ADD X23, X31, 0x280
	0x0373DEB0 BL 0x3742C70
	0x0373DEB4 B 0x373DEE0
	0x0373DEB8 ADD X0, X31, 0x280
	0x0373DEBC ADD X1, X31, 0x180
	0x0373DEC0 MOVZ W2, 0x80
	0x0373DEC4 ADD X23, X31, 0x280
	0x0373DEC8 BL 0x3EB1AC0
	0x0373DECC MOVI V0.2D, 0x0
	0x0373DED0 STP V0, V0, [X31 + 0x200]
	0x0373DED4 STP V0, V0, [X31 + 0x220]
	0x0373DED8 STP V0, V0, [X31 + 0x240]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Compare X1, 0
	009 JumpIfEqual {51}
	010 Move X23, X1
	011 Move X22, X2
	012 Move X21, X0
	013 Move W1, 58
	014 Move X0, X23
	015 Move X2, X31
	016 Move X19, X4
	017 Move X20, X3
	018 Call String.IndexOf, X0, X1
	019 Move TEMP, X0
	020 And TEMP, TEMP, -2147483648
	021 Compare TEMP, -2147483648
	022 JumpIfEqual {35}
	023 Move W24, W0
	024 Move X0, X23
	025 Move W1, W31
	026 Move W2, W24
	027 Move X3, X31
	028 Call String.Substring, X0, X1, X2
	029 Move [X21], X0
	030 Add W1, W24, 1
	031 Move X0, X23
	032 Move X2, X31
	033 Call String.Substring, X0, X1
	034 Move X23, X0
	035 Move [X21], X31
	036 Add X0, X21, 16
	037 Move W2, 88
	038 Move X1, X22
	039 Move [X21+8], X23
	040 Call 0x3EB2B30
	041 Move [X21+104], X20
	042 Move [X21+112], X19
	043 Move X20, [X31+48]
	044 Move X19, [X31+56]
	045 Move X22, [X31+32]
	046 Move X21, [X31+40]
	047 Move X24, [X31+16]
	048 Move X23, [X31+24]
	049 Move X30, [X31+64]
	050 Return 
	051 Call 0x1C17F20

Method: System.Void .ctor(System.String objectRegistrationName, System.String parameterName, UnityEngine.InputSystem.InputBinding bindingMask, UnityEngine.InputSystem.Utilities.PrimitiveValue value = null)

Disassembly:
	0x03743C3C MOVZ W8, 0x1
	0x03743C40 STRB W8, [X20 + 0xD66]
	0x03743C44 MOV X0, X19
	0x03743C48 BL 0x3744048
	0x03743C4C MOV X0, X19
	0x03743C50 LDR W8, [X0 + 0xF8]!
	0x03743C54 CMP W8, 0x1
	0x03743C58 B.LT 0x3743D4C
	0x03743C5C ADRP X8, 0xA02000
	0x03743C60 LDR X8, [X8 + 0x680]
	0x03743C64 MOV W1, W31
	0x03743C68 LDR X2, [X8]
	0x03743C6C BL 0x2DFA48C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, X0
	006 Move [X0+16], X1
	007 Move [X0+24], X2
	008 Move W2, 88
	009 Move X1, X3
	010 Move X19, X5
	011 Move X20, X4
	012 Call 0x3EB2B30
	013 Move [X21+104], X20
	014 Move [X21+112], X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 Move X21, [X31+40]
	019 Return 

Method: System.Nullable`1<UnityEngine.InputSystem.InputActionRebindingExtensions/ParameterOverride> Find(UnityEngine.InputSystem.InputActionMap actionMap, ref UnityEngine.InputSystem.InputBinding binding, System.String parameterName, System.String objectRegistrationName)

Disassembly:
	0x0373EDD4 MOV X21, X0
	0x0373EDD8 MOV X0, X23
	0x0373EDDC BL 0x19903C0
	0x0373EDE0 ADRP X0, 0x9DC000
	0x0373EDE4 LDR X0, [X0 + 0xFE8]
	0x0373EDE8 BL 0x1C16D08
	0x0373EDEC LDR W8, [X23 + 0x1C]
	0x0373EDF0 MOV X0, X19
	0x0373EDF4 STR W8, [X31 + 0x12C]
	0x0373EDF8 BL 0x1C16D08
	0x0373EDFC ADD X1, X31, 0x12C
	0x0373EE00 BL 0x1C16E04
	0x0373EE04 MOV X19, X0
	0x0373EE08 ADRP X0, 0xA07000
	0x0373EE0C LDR X0, [X0 + 0x428]
	0x0373EE10 BL 0x1C16D08
	0x0373EE14 MOV X1, X21
	0x0373EE18 MOV X2, X20
	0x0373EE1C MOV X3, X19
	0x0373EE20 MOV X4, X31
	0x0373EE24 BL 0x3227C18
	0x0373EE28 MOV X19, X0
	0x0373EE2C ADRP X0, 0x9BD000
	0x0373EE30 LDR X0, [X0 + 0x760]
	0x0373EE34 BL 0x1C16D08
	0x0373EE38 BL 0x1C16F10
	0x0373EE3C MOV X20, X0
	0x0373EE40 ADRP X0, 0xA07000
	0x0373EE44 LDR X0, [X0 + 0x378]
	0x0373EE48 BL 0x1C16D08
	0x0373EE4C MOV X2, X0
	0x0373EE50 MOV X0, X20
	0x0373EE54 MOV X1, X19
	0x0373EE58 MOV X3, X31
	0x0373EE5C BL 0x3311888
	0x0373EE60 ADRP X0, 0xA07000
	0x0373EE64 LDR X0, [X0 + 0x420]
	0x0373EE68 BL 0x1C16D08
	0x0373EE6C MOV X1, X0
	0x0373EE70 MOV X0, X20
	0x0373EE74 BL 0x1C16DEC
	0x0373EE78 MOV X1, X31
	0x0373EE7C B 0x33BDD8C
	0x0373EE80 SUB X31, X31, 0x70
	0x0373EE84 STP X30, X19, [X31 + 0x60]
	0x0373EE88 CBZ X0, 0x373EEB8
	0x0373EE8C STR X1, [X31 + 0x48]
	0x0373EE90 ADD X1, X31, 0x8
	0x0373EE94 STP X31, X31, [X31 + 0x8]
	0x0373EE98 STP X31, X31, [X31 + 0x38]
	0x0373EE9C STP X31, X31, [X31 + 0x50]
	0x0373EEA0 STP X3, X31, [X31 + 0x18]
	0x0373EEA4 STP X31, X2, [X31 + 0x28]
	0x0373EEA8 BL 0x373EF00
	0x0373EEAC LDP X30, X19, [X31 + 0x60]
	0x0373EEB0 ADD X31, X31, 0x70
	0x0373EEB4 RET
	0x0373EEB8 ADRP X0, 0x9BA000
	0x0373EEBC LDR X0, [X0 + 0x528]
	0x0373EEC0 BL 0x1C16D08
	0x0373EEC4 BL 0x1C16F10
	0x0373EEC8 MOV X19, X0
	0x0373EECC ADRP X0, 0x9DD000
	0x0373EED0 LDR X0, [X0 + 0xBF8]
	0x0373EED4 BL 0x1C16D08
	0x0373EED8 MOV X1, X0
	0x0373EEDC MOV X0, X19
	0x0373EEE0 MOV X2, X31
	0x0373EEE4 BL 0x330E100
	0x0373EEE8 ADRP X0, 0xA07000
	0x0373EEEC LDR X0, [X0 + 0x430]
	0x0373EEF0 BL 0x1C16D08
	0x0373EEF4 MOV X1, X0
	0x0373EEF8 MOV X0, X19
	0x0373EEFC BL 0x1C16DEC
	0x0373EF00 SUB X31, X31, 0xC0
	0x0373EF04 STP X30, X23, [X31 + 0x90]
	0x0373EF08 STP X22, X21, [X31 + 0xA0]
	0x0373EF0C STP X20, X19, [X31 + 0xB0]
	0x0373EF10 MRS X22, 0xC000
	0x0373EF14 LDR X8, [X22 + 0x28]
	0x0373EF18 STR X8, [X31 + 0x88]
	0x0373EF1C CBZ X0, 0x373EFB0
	0x0373EF20 ADD X8, X31, 0x58
	0x0373EF24 MOV X20, X1
	0x0373EF28 MOV X19, X0
	0x0373EF2C BL 0x37347B4
	0x0373EF30 LDRB W23, [X31 + 0x58]
	0x0373EF34 CBZ W23, 0x373EF40
	0x0373EF38 MOV X0, X19
	0x0373EF3C BL 0x3735150
	0x0373EF40 LDR X8, [X19 + 0x10]
	0x0373EF44 STR X8, [X20 + 0x30]
	0x0373EF48 LDR X21, [X19 + 0xC8]

ISIL:
	001 Move [X31-64], X29
	002 Move [X31-56], X30
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Subtract X31, X31, 768
	010 Move X24, 0xCA3000
	011 Move W9, [X24+3407]
	012 Move X20, X3
	013 Move X21, X2
	014 Move X22, X1
	015 Move X23, X0
	016 Move X19, X8
	017 Move TEMP, X9
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {26}
	021 Move X0, 0x9B6000
	022 Move X0, [X0+1432]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X24+3407], W8
	026 NotImplemented "Instruction MOVI not yet implemented."
	027 Move [X31+608], V0
	028 Move [X31+616], V0
	029 Move [X31+576], V0
	030 Move [X31+584], V0
	031 Move [X31+544], V0
	032 Move [X31+552], V0
	033 Move [X31+512], V0
	034 Move [X31+520], V0
	035 Compare X23, 0
	036 JumpIfEqual {118}
	037 Move X0, [X23+208]
	038 Move W1, [X23+204]
	039 Move X24, 0x9B6000
	040 Move X24, [X24+1432]
	041 Add X8, X31, 384
	042 Move X2, X22
	043 Move X3, X21
	044 Move X4, X20
	045 Call ParameterOverride.Find, X0, X1, X2, X3, X4
	046 Move X0, [X24]
	047 Move X23, [X23+32]
	048 Move W8, [X0+224]
	049 Compare W8, 0
	050 JumpIfNotEqual {52}
	051 Call 0x1C17DFC
	052 Move X0, X23
	053 Move X1, X31
	054 Move X2, X31
	055 Call Object.op_Inequality, X0, X1
	056 Move TEMP, X0
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfNotEqual {74}
	060 Add X0, X31, 640
	061 Add X1, X31, 384
	062 Move W2, 128
	063 Call 0x3EB2AC0
	064 Compare X23, 0
	065 JumpIfEqual {118}
	066 Move X0, [X23+152]
	067 Move W1, [X23+144]
	068 Add X8, X31, 512
	069 Move X2, X22
	070 Move X3, X21
	071 Move X4, X20
	072 Add X23, X31, 640
	073 Call ParameterOverride.Find, X0, X1, X2, X3, X4
	074 Add X0, X31, 640
	075 Add X1, X31, 384
	076 Move W2, 128
	077 Add X23, X31, 640
	078 Call 0x3EB2AC0
	079 NotImplemented "Instruction MOVI not yet implemented."
	080 Move [X31+512], V0
	081 Move [X31+520], V0
	082 Move [X31+544], V0
	083 Move [X31+552], V0
	084 Move [X31+576], V0
	085 Move [X31+584], V0
	086 Move [X31+608], V0
	087 Move [X31+616], V0
	088 Add X0, X31, 384
	089 Move W2, 128
	090 Move X1, X23
	091 Call 0x3EB2AC0
	092 Add X0, X31, 0
	093 Add X1, X31, 512
	094 Move W2, 128
	095 Call 0x3EB2AC0
	096 Add X0, X31, 128
	097 Add X1, X31, 384
	098 Move W2, 128
	099 Call 0x3EB2AC0
	100 Add X8, X31, 256
	101 Add X0, X31, 128
	102 Add X1, X31, 0
	103 Call ParameterOverride.PickMoreSpecificOne, X0, X1
	104 Add X1, X31, 256
	105 Move W2, 128
	106 Move X0, X19
	107 Call 0x3EB2AC0
	108 Add X31, X31, 768
	109 Move X20, [X31+48]
	110 Move X19, [X31+56]
	111 Move X22, [X31+32]
	112 Move X21, [X31+40]
	113 Move X24, [X31+16]
	114 Move X23, [X31+24]
	115 Move X29, [X31+64]
	116 Move X30, [X31+72]
	117 Return X0
	118 Call 0x1C17F20

Method: System.Nullable`1<UnityEngine.InputSystem.InputActionRebindingExtensions/ParameterOverride> Find(UnityEngine.InputSystem.InputActionRebindingExtensions/ParameterOverride[] overrides, System.Int32 overrideCount, ref UnityEngine.InputSystem.InputBinding binding, System.String parameterName, System.String objectRegistrationName)

Disassembly:
	0x03743C70 CBZ X0, 0x3743E10
	0x03743C74 MOV X1, X31
	0x03743C78 MOV X21, X0
	0x03743C7C BL 0x3771F68
	0x03743C80 LDR X8, [X19 + 0x130]
	0x03743C84 MOV X22, X0
	0x03743C88 CBZ X8, 0x3743CB0
	0x03743C8C LDR X9, [X8 + 0x18]
	0x03743C90 LDR X0, [X8 + 0x40]
	0x03743C94 LDR X2, [X8 + 0x28]
	0x03743C98 MOV X1, X21
	0x03743C9C BLR X9
	0x03743CA0 MOV X1, X31
	0x03743CA4 MOV X20, X0
	0x03743CA8 BL 0x32277A8
	0x03743CAC TBZ X0, 0x0, 0x3743CCC
	0x03743CB0 LDRB W8, [X19 + 0x168]
	0x03743CB4 MOV X20, X22
	0x03743CB8 TBNZ X8, 0x7, 0x3743CCC
	0x03743CBC MOV X0, X19
	0x03743CC0 MOV X1, X21
	0x03743CC4 BL 0x3744D6C
	0x03743CC8 MOV X20, X0
	0x03743CCC LDR X8, [X19 + 0x140]
	0x03743CD0 CBZ X8, 0x3743CF0
	0x03743CD4 LDR X9, [X8 + 0x18]
	0x03743CD8 LDR X0, [X8 + 0x40]
	0x03743CDC LDR X3, [X8 + 0x28]
	0x03743CE0 MOV X1, X19
	0x03743CE4 MOV X2, X20
	0x03743CE8 BLR X9
	0x03743CEC B 0x3743D4C
	0x03743CF0 LDRB W8, [X19 + 0x169]
	0x03743CF4 TBNZ X8, 0x0, 0x3743D2C
	0x03743CF8 LDR W21, [X19 + 0xB0]
	0x03743CFC TBNZ X21, 0x1F, 0x3743D90
	0x03743D00 LDR X0, [X19 + 0x10]
	0x03743D04 CBZ X0, 0x3743E10
	0x03743D08 BL 0x37345CC
	0x03743D0C UBFM X8, X1, 0x20, 0x3F
	0x03743D10 CMP W21, W8
	0x03743D14 B.GE 0x3743E14
	0x03743D18 LDR X0, [X19 + 0x10]
	0x03743D1C LDR W1, [X19 + 0xB0]
	0x03743D20 MOV X2, X20
	0x03743D24 BL 0x373F35C
	0x03743D28 B 0x3743D4C
	0x03743D2C LDR X0, [X19 + 0x10]
	0x03743D30 LDR X4, [X19 + 0xB8]
	0x03743D34 ADD X8, X31, 0x58
	0x03743D38 MOV X1, X20
	0x03743D3C MOV X2, X31
	0x03743D40 MOV X3, X31
	0x03743D44 MOV X5, X31
	0x03743D48 BL 0x3746870
	0x03743D4C LDR W9, [X19 + 0x168]
	0x03743D50 LDR X8, [X19 + 0x118]
	0x03743D54 ORR W9, W9, 0x2
	0x03743D58 STR W9, [X19 + 0x168]
	0x03743D5C CBZ X8, 0x3743D74
	0x03743D60 LDR X9, [X8 + 0x18]
	0x03743D64 LDR X0, [X8 + 0x40]
	0x03743D68 LDR X2, [X8 + 0x28]
	0x03743D6C MOV X1, X19
	0x03743D70 BLR X9
	0x03743D74 MOV X0, X19
	0x03743D78 BL 0x3744E6C
	0x03743D7C LDP X20, X19, [X31 + 0x120]
	0x03743D80 LDP X22, X21, [X31 + 0x110]
	0x03743D84 LDP X29, X30, [X31 + 0x100]
	0x03743D88 ADD X31, X31, 0x130
	0x03743D8C RET
	0x03743D90 MOV X0, X19
	0x03743D94 LDRB W8, [X0 + 0x18]!
	0x03743D98 CBZ W8, 0x3743DF8
	0x03743D9C ADRP X8, 0xA01000
	0x03743DA0 LDR X8, [X8 + 0xF60]
	0x03743DA4 ADD X21, X31, 0x58
	0x03743DA8 LDR X1, [X8]
	0x03743DAC ADD X8, X31, 0x58
	0x03743DB0 BL 0x2432510
	0x03743DB4 LDR V0, [X21 + 0x3]
	0x03743DB8 LDUR V1, [X31 + 0x78]
	0x03743DBC LDUR V2, [X31 + 0x58]
	0x03743DC0 LDUR V3, [X31 + 0x68]
	0x03743DC4 LDUR V4, [X21 + 0x48]
	0x03743DC8 STP V1, V0, [X31 + 0xE0]
	0x03743DCC ADD X1, X31, 0x0
	0x03743DD0 STP V2, V3, [X31 + 0xC0]
	0x03743DD4 STR V4, [X31 + 0xB]
	0x03743DD8 LDR X0, [X19 + 0x10]
	0x03743DDC LDR V4, [X31 + 0xB]
	0x03743DE0 STP V2, V3, [X31]
	0x03743DE4 STP V1, V0, [X31 + 0x20]
	0x03743DE8 STR X20, [X31 + 0x40]
	0x03743DEC STUR V4, [X31 + 0x48]
	0x03743DF0 BL 0x373EF00
	0x03743DF4 B 0x3743D4C
	0x03743DF8 LDR X0, [X19 + 0x10]
	0x03743DFC MOV X1, X20
	0x03743E00 MOV X2, X31
	0x03743E04 MOV X3, X31
	0x03743E08 BL 0x373EE80
	0x03743E0C B 0x3743D4C
	0x03743E10 BL 0x1C16F20
	0x03743E14 LDR W8, [X19 + 0xB0]
	0x03743E18 ADRP X20, 0x9B0000
	0x03743E1C STR W8, [X31 + 0x58]
	0x03743E20 LDR X20, [X20 + 0x758]
	0x03743E24 MOV X0, X20
	0x03743E28 BL 0x1C16D08
	0x03743E2C ADD X1, X31, 0x58
	0x03743E30 BL 0x1C16E04
	0x03743E34 LDR X19, [X19 + 0x10]
	0x03743E38 MOV X21, X0
	0x03743E3C MOV X0, X19
	0x03743E40 BL 0x19903C0
	0x03743E44 MOV X0, X19
	0x03743E48 BL 0x37345CC
	0x03743E4C ADRP X0, 0x9D7000
	0x03743E50 LDR X0, [X0 + 0xFE8]
	0x03743E54 MOV X22, X1
	0x03743E58 BL 0x1C16D08
	0x03743E5C UBFM X8, X22, 0x20, 0x3F
	0x03743E60 MOV X0, X20
	0x03743E64 STR W8, [X31 + 0xC0]
	0x03743E68 BL 0x1C16D08
	0x03743E6C ADD X1, X31, 0xC0
	0x03743E70 BL 0x1C16E04
	0x03743E74 MOV X20, X0
	0x03743E78 ADRP X0, 0xA02000
	0x03743E7C LDR X0, [X0 + 0x708]
	0x03743E80 BL 0x1C16D08
	0x03743E84 MOV X1, X21
	0x03743E88 MOV X2, X19

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Subtract X31, X31, 1104
	014 Move X25, 0xC9E000
	015 Move X19, X8
	016 Move W8, [X25+3408]
	017 Move X20, X4
	018 Move X21, X3
	019 Move X22, X2
	020 Move W24, W1
	021 Move X23, X0
	022 Add X26, X31, 512
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {35}
	027 Move X0, 0xA03000
	028 Move X0, [X0+1640]
	029 Call 0x1C17CF4
	030 Move X0, 0xA03000
	031 Move X0, [X0+920]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X25+3408], W8
	035 NotImplemented "Instruction MOVI not yet implemented."
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move [X26+560], V0
	038 Move [X26+568], V0
	039 Move [X26+528], V0
	040 Move [X26+536], V0
	041 Move [X26+496], V0
	042 Move [X26+504], V0
	043 Move [X26+464], V0
	044 Move [X26+472], V0
	045 Compare X23, 0
	046 JumpIfEqual {166}
	047 Move X28, 0xA03000
	048 Move X28, [X28+1640]
	049 Move X27, X31
	050 Move W29, W24
	051 Add X24, X23, 48
	052 Move W8, [X23+24]
	053 NotImplemented "Instruction CMP not yet implemented."
	054 NotImplemented "Instruction LDUR not yet implemented."
	055 Move W2, 5
	056 Move X0, X21
	057 Move X3, X31
	058 Call String.Equals, X0, X1, X2
	059 Move TEMP, X0
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfNotEqual {144}
	063 Add X0, X31, 888
	064 Move W2, 88
	065 Move X1, X22
	066 Call 0x3EB2AC0
	067 Add X1, X31, 888
	068 Move X0, X24
	069 Move X2, X31
	070 Call InputBinding.Matches, X0, X1
	071 Move TEMP, X0
	072 And TEMP, TEMP, 1
	073 Compare TEMP, 1
	074 JumpIfNotEqual {144}
	075 NotImplemented "Instruction LDUR not yet implemented."
	076 Compare X0, 0
	077 JumpIfEqual {86}
	078 Move W2, 5
	079 Move X1, X20
	080 Move X3, X31
	081 Call String.Equals, X0, X1, X2
	082 Move TEMP, X0
	083 And TEMP, TEMP, 1
	084 Compare TEMP, 1
	085 JumpIfNotEqual {144}
	086 Move W8, [X31+976]
	087 Compare W8, 0
	088 JumpIfEqual {131}
	089 Add X0, X31, 640
	090 Add X1, X31, 976
	091 Move W2, 128
	092 Call 0x3EB2AC0
	093 Subtract X1, X24, 16
	094 Add X0, X31, 392
	095 Move W2, 120
	096 Call 0x3EB2AC0
	097 Move X25, [X28]
	098 NotImplemented "Instruction MOVI not yet implemented."
	099 Add X0, X31, 264
	100 Add X1, X31, 392
	101 Move W2, 120
	102 Move [X26+96], V0
	103 Move [X26+104], V0
	104 Move [X26+64], V0
	105 Move [X26+72], V0
	106 Move [X26+32], V0
	107 Move [X26+40], V0
	108 Move [X26], V0
	109 Move [X26+8], V0
	110 Call 0x3EB2AC0
	111 Add X0, X31, 512
	112 Add X1, X31, 264
	113 Move X2, X25
	114 Call Nullable`1<ParameterOverride>..ctor, X0, X1
	115 Add X0, X31, 136
	116 Add X1, X31, 640
	117 Move W2, 128
	118 Call 0x3EB2AC0
	119 Add X0, X31, 8
	120 Add X1, X31, 512
	121 Move W2, 128
	122 Call 0x3EB2AC0
	123 Add X8, X31, 264
	124 Add X0, X31, 136
	125 Add X1, X31, 8
	126 Call ParameterOverride.PickMoreSpecificOne, X0, X1
	127 Add X0, X31, 976
	128 Add X1, X31, 264
	129 Move W2, 128
	130 Call 0x3EB2AC0
	131 Subtract X1, X24, 16
	132 Add X0, X31, 768
	133 Move W2, 120
	134 Call 0x3EB2AC0
	135 Move X25, [X28]
	136 Add X0, X31, 640
	137 Add X1, X31, 768
	138 Move W2, 120
	139 Call 0x3EB2AC0
	140 Add X0, X31, 976
	141 Add X1, X31, 640
	142 Move X2, X25
	143 Call Nullable`1<ParameterOverride>..ctor, X0, X1
	144 Add X27, X27, 1
	145 NotImplemented "Instruction CMP not yet implemented."
	146 Add X24, X24, 120
	147 Add X1, X31, 976
	148 Move W2, 128
	149 Move X0, X19
	150 Call 0x3EB2AC0
	151 Add X31, X31, 1104
	152 Move X20, [X31+80]
	153 Move X19, [X31+88]
	154 Move X22, [X31+64]
	155 Move X21, [X31+72]
	156 Move X24, [X31+48]
	157 Move X23, [X31+56]
	158 Move X26, [X31+32]
	159 Move X25, [X31+40]
	160 Move X28, [X31+16]
	161 Move X27, [X31+24]
	162 Move X29, [X31+96]
	163 Move X30, [X31+104]
	164 Return X0
	165 Call 0x1C17F28
	166 Call 0x1C17F20

Method: System.Nullable`1<UnityEngine.InputSystem.InputActionRebindingExtensions/ParameterOverride> PickMoreSpecificOne(System.Nullable`1<UnityEngine.InputSystem.InputActionRebindingExtensions/ParameterOverride> first, System.Nullable`1<UnityEngine.InputSystem.InputActionRebindingExtensions/ParameterOverride> second)

Disassembly:
	0x03743E8C MOV X3, X20
	0x03743E90 MOV X4, X31
	0x03743E94 BL 0x3227C18
	0x03743E98 MOV X19, X0
	0x03743E9C ADRP X0, 0x9B0000
	0x03743EA0 LDR X0, [X0 + 0x5B0]
	0x03743EA4 BL 0x1C16D08
	0x03743EA8 BL 0x1C16F10
	0x03743EAC MOV X1, X19
	0x03743EB0 MOV X2, X31
	0x03743EB4 MOV X20, X0
	0x03743EB8 BL 0x337DF1C
	0x03743EBC ADRP X0, 0xA02000
	0x03743EC0 LDR X0, [X0 + 0x710]
	0x03743EC4 BL 0x1C16D08
	0x03743EC8 MOV X1, X0
	0x03743ECC MOV X0, X20
	0x03743ED0 BL 0x1C16DEC
	0x03743ED4 SUB X31, X31, 0x40
	0x03743ED8 STP D9, D8, [X31 + 0x10]
	0x03743EDC STP X30, X21, [X31 + 0x20]
	0x03743EE0 STP X20, X19, [X31 + 0x30]
	0x03743EE4 ADRP X21, 0xC9D000
	0x03743EE8 LDRB W8, [X21 + 0xD5C]
	0x03743EEC MOV V9.16B, V1.16B
	0x03743EF0 MOV V8.16B, V0.16B
	0x03743EF4 MOV X20, X1
	0x03743EF8 MOV X19, X0
	0x03743EFC TBNZ X8, 0x0, 0x3743F38
	0x03743F00 ADRP X0, 0xA02000
	0x03743F04 LDR X0, [X0 + 0x718]
	0x03743F08 BL 0x1C16CF4
	0x03743F0C ADRP X0, 0x9D8000
	0x03743F10 LDR X0, [X0 + 0xE40]
	0x03743F14 BL 0x1C16CF4
	0x03743F18 ADRP X0, 0xA02000
	0x03743F1C LDR X0, [X0 + 0x720]
	0x03743F20 BL 0x1C16CF4
	0x03743F24 ADRP X0, 0xA02000
	0x03743F28 LDR X0, [X0 + 0x678]
	0x03743F2C BL 0x1C16CF4
	0x03743F30 MOVZ W8, 0x1
	0x03743F34 STRB W8, [X21 + 0xD5C]
	0x03743F38 STR X31, [X31 + 0x8]
	0x03743F3C CBZ X20, 0x3743FF8
	0x03743F40 ADRP X8, 0xA02000
	0x03743F44 LDR X8, [X8 + 0x720]
	0x03743F48 ADD X21, X19, 0xF8
	0x03743F4C MOV X0, X21
	0x03743F50 MOV X1, X20
	0x03743F54 LDR X2, [X8]
	0x03743F58 BL 0x2DFB45C
	0x03743F5C ADDS W31, W0, 0x1
	0x03743F60 B.EQ 0x3743F84
	0x03743F64 LDR X8, [X19 + 0xD0]
	0x03743F68 CBZ X8, 0x3744040
	0x03743F6C LDR W9, [X8 + 0x18]
	0x03743F70 CMP W0, W9
	0x03743F74 B.CS 0x3744044
	0x03743F78 ADD X8, X8, W0, 0x2, SXTW
	0x03743F7C STR S8, [X8 + 0x20]
	0x03743F80 B 0x3743FDC
	0x03743F84 ADRP X9, 0x9D8000
	0x03743F88 LDR W8, [X19 + 0xF8]
	0x03743F8C LDR X9, [X9 + 0xE40]
	0x03743F90 MOV X0, X21
	0x03743F94 MOV X1, X20
	0x03743F98 STP W8, W8, [X31 + 0x8]
	0x03743F9C LDR X2, [X9]
	0x03743FA0 BL 0x2DFACEC
	0x03743FA4 ADRP X20, 0xA02000
	0x03743FA8 LDR X20, [X20 + 0x718]
	0x03743FAC ADD X0, X19, 0xD0
	0x03743FB0 ADD X1, X31, 0xC
	0x03743FB4 MOVZ W2, 0xA
	0x03743FB8 LDR X3, [X20]
	0x03743FBC MOV V0.16B, V8.16B
	0x03743FC0 BL 0x2174958
	0x03743FC4 LDR X3, [X20]
	0x03743FC8 ADD X0, X19, 0xD8
	0x03743FCC ADD X1, X31, 0x8
	0x03743FD0 MOVZ W2, 0xA
	0x03743FD4 MOV V0.16B, V9.16B
	0x03743FD8 BL 0x2174958
	0x03743FDC MOV X0, X19
	0x03743FE0 BL 0x3744048
	0x03743FE4 LDP X20, X19, [X31 + 0x30]
	0x03743FE8 LDP X30, X21, [X31 + 0x20]
	0x03743FEC LDP D9, D8, [X31 + 0x10]
	0x03743FF0 ADD X31, X31, 0x40
	0x03743FF4 RET
	0x03743FF8 ADRP X0, 0x9B5000
	0x03743FFC LDR X0, [X0 + 0x528]
	0x03744000 BL 0x1C16D08
	0x03744004 BL 0x1C16F10
	0x03744008 MOV X19, X0
	0x0374400C ADRP X0, 0x9D7000
	0x03744010 LDR X0, [X0 + 0xD60]
	0x03744014 BL 0x1C16D08
	0x03744018 MOV X1, X0
	0x0374401C MOV X0, X19
	0x03744020 MOV X2, X31
	0x03744024 BL 0x330E100
	0x03744028 ADRP X0, 0xA01000
	0x0374402C LDR X0, [X0 + 0x728]
	0x03744030 BL 0x1C16D08
	0x03744034 MOV X1, X0
	0x03744038 MOV X0, X19
	0x0374403C BL 0x1C16DEC
	0x03744040 BL 0x1C16F20
	0x03744044 BL 0x1C16F28
	0x03744048 STP X30, X27, [X31 - 0x50]!
	0x0374404C STP X26, X25, [X31 + 0x10]
	0x03744050 STP X24, X23, [X31 + 0x20]
	0x03744054 STP X22, X21, [X31 + 0x30]
	0x03744058 STP X20, X19, [X31 + 0x40]
	0x0374405C ADRP X20, 0xC9C000
	0x03744060 LDRB W8, [X20 + 0xD63]
	0x03744064 MOV X19, X0
	0x03744068 TBNZ X8, 0x0, 0x3744098
	0x0374406C ADRP X0, 0xA01000
	0x03744070 LDR X0, [X0 + 0x730]
	0x03744074 BL 0x1C16CF4
	0x03744078 ADRP X0, 0xA01000
	0x0374407C LDR X0, [X0 + 0x738]
	0x03744080 BL 0x1C16CF4
	0x03744084 ADRP X0, 0xA01000
	0x03744088 LDR X0, [X0 + 0x678]
	0x0374408C BL 0x1C16CF4
	0x03744090 MOVZ W8, 0x1
	0x03744094 STRB W8, [X20 + 0xD63]
	0x03744098 MOV X20, X19
	0x0374409C LDR W23, [X20 + 0xF8]!
	0x037440A0 CMP W23, 0x2
	0x037440A4 B.LT 0x3744158
	0x037440A8 ADRP X25, 0xA01000
	0x037440AC ADRP X26, 0xA01000
	0x037440B0 LDR X25, [X25 + 0x730]
	0x037440B4 LDR X26, [X26 + 0x738]
	0x037440B8 MOV X24, X31
	0x037440BC MOVZ W27, 0x1
	0x037440C0 MOV X21, X24
	0x037440C4 LDR X0, [X19 + 0xD0]
	0x037440C8 CBZ X0, 0x3744174
	0x037440CC LDR W8, [X0 + 0x18]
	0x037440D0 CMP W21, W8
	0x037440D4 B.CS 0x3744170
	0x037440D8 ADD X22, X21, 0x1
	0x037440DC CMP W22, W8
	0x037440E0 B.CS 0x3744170
	0x037440E4 ADD X8, X21, 0x1
	0x037440E8 ADD X9, X0, X21, 0x2, LSL
	0x037440EC ADD X8, X0, W8, 0x2, UXTW
	0x037440F0 LDR V0, [X9 + 0x20]
	0x037440F4 LDR V1, [X8 + 0x20]
	0x037440F8 FCMP S0, S1
	0x037440FC B.PL 0x3744148
	0x03744100 LDR X3, [X25]
	0x03744104 MOV W1, W22
	0x03744108 MOV W2, W21

ISIL:
	001 Subtract X31, X31, 320
	002 Move [X31+256], X29
	003 Move [X31+272], X30
	004 Move [X31+280], X23
	005 Move [X31+288], X22
	006 Move [X31+296], X21
	007 Move [X31+304], X20
	008 Move [X31+312], X19
	009 Move X23, 0xC9E000
	010 Move X19, X8
	011 Move W8, [X23+3409]
	012 Move X21, X1
	013 Move X20, X0
	014 Add X22, X31, 128
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0xA03000
	020 Move X0, [X0+920]
	021 Call 0x1C17CF4
	022 Move X0, 0xA03000
	023 Move X0, [X0+928]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X23+3409], W8
	027 NotImplemented "Instruction MOVI not yet implemented."
	028 Move [X31+240], X31
	029 Move [X22+80], V0
	030 Move [X22+88], V0
	031 Move [X22+48], V0
	032 Move [X22+56], V0
	033 Move [X22+16], V0
	034 Move [X22+24], V0
	035 Move [X31+8], V0
	036 Move W8, [X20]
	037 Compare W8, 0
	038 JumpIfEqual {173}
	039 Move W8, [X21]
	040 Compare W8, 0
	041 JumpIfEqual {170}
	042 Move X23, 0xA03000
	043 Move X23, [X23+928]
	044 Add X8, X31, 8
	045 Move X0, X20
	046 Move X1, [X23]
	047 Call Nullable`1<ParameterOverride>.get_Value, X0
	048 Move X8, [X31+8]
	049 Compare X8, 0
	050 JumpIfEqual {58}
	051 Move X1, [X23]
	052 Add X8, X31, 8
	053 Move X0, X21
	054 Call Nullable`1<ParameterOverride>.get_Value, X0
	055 Move X8, [X31+8]
	056 Compare X8, 0
	057 JumpIfEqual {170}
	058 Move X1, [X23]
	059 Add X8, X31, 8
	060 Move X0, X21
	061 Call Nullable`1<ParameterOverride>.get_Value, X0
	062 Move X8, [X31+8]
	063 Compare X8, 0
	064 JumpIfEqual {72}
	065 Move X1, [X23]
	066 Add X8, X31, 8
	067 Move X0, X20
	068 Call Nullable`1<ParameterOverride>.get_Value, X0
	069 Move X8, [X31+8]
	070 Compare X8, 0
	071 JumpIfEqual {173}
	072 Move X1, [X23]
	073 Add X8, X31, 8
	074 Move X0, X20
	075 Call Nullable`1<ParameterOverride>.get_Value, X0
	076 Add X0, X31, 128
	077 Add X1, X31, 8
	078 Move W2, 120
	079 Add X22, X31, 128
	080 Call 0x3EB2AC0
	081 Add X22, X22, 16
	082 Move X0, X22
	083 Move X1, X31
	084 Call InputBinding.get_effectivePath, X0
	085 Compare X0, 0
	086 JumpIfEqual {100}
	087 Move X1, [X23]
	088 Add X8, X31, 8
	089 Move X0, X21
	090 Call Nullable`1<ParameterOverride>.get_Value, X0
	091 Add X0, X31, 128
	092 Add X1, X31, 8
	093 Move W2, 120
	094 Call 0x3EB2AC0
	095 Move X0, X22
	096 Move X1, X31
	097 Call InputBinding.get_effectivePath, X0
	098 Compare X0, 0
	099 JumpIfEqual {170}
	100 Move X1, [X23]
	101 Add X8, X31, 8
	102 Move X0, X21
	103 Call Nullable`1<ParameterOverride>.get_Value, X0
	104 Add X0, X31, 128
	105 Add X1, X31, 8
	106 Move W2, 120
	107 Call 0x3EB2AC0
	108 Move X0, X22
	109 Move X1, X31
	110 Call InputBinding.get_effectivePath, X0
	111 Compare X0, 0
	112 JumpIfEqual {126}
	113 Move X1, [X23]
	114 Add X8, X31, 8
	115 Move X0, X20
	116 Call Nullable`1<ParameterOverride>.get_Value, X0
	117 Add X0, X31, 128
	118 Add X1, X31, 8
	119 Move W2, 120
	120 Call 0x3EB2AC0
	121 Move X0, X22
	122 Move X1, X31
	123 Call InputBinding.get_effectivePath, X0
	124 Compare X0, 0
	125 JumpIfEqual {173}
	126 Move X1, [X23]
	127 Add X8, X31, 8
	128 Move X0, X20
	129 Call Nullable`1<ParameterOverride>.get_Value, X0
	130 Add X0, X31, 128
	131 Add X1, X31, 8
	132 Move W2, 120
	133 Call 0x3EB2AC0
	134 Move X8, [X31+192]
	135 Compare X8, 0
	136 JumpIfEqual {148}
	137 Move X1, [X23]
	138 Add X8, X31, 8
	139 Move X0, X21
	140 Call Nullable`1<ParameterOverride>.get_Value, X0
	141 Add X0, X31, 128
	142 Add X1, X31, 8
	143 Move W2, 120
	144 Call 0x3EB2AC0
	145 Move X8, [X31+192]
	146 Compare X8, 0
	147 JumpIfEqual {170}
	148 Move X1, [X23]
	149 Add X8, X31, 8
	150 Move X0, X21
	151 Call Nullable`1<ParameterOverride>.get_Value, X0
	152 Add X0, X31, 128
	153 Add X1, X31, 8
	154 Move W2, 120
	155 Call 0x3EB2AC0
	156 Move X8, [X31+192]
	157 Compare X8, 0
	158 JumpIfEqual {170}
	159 Move X1, [X23]
	160 Add X8, X31, 8
	161 Move X0, X20
	162 Call Nullable`1<ParameterOverride>.get_Value, X0
	163 Add X0, X31, 128
	164 Add X1, X31, 8
	165 Move W2, 120
	166 Call 0x3EB2AC0
	167 Move X8, [X31+192]
	168 Compare X8, 0
	169 JumpIfEqual {173}
	170 Move W2, 128
	171 Move X0, X19
	172 Move X1, X20
	173 Move W2, 128
	174 Move X0, X19
	175 Move X1, X21
	176 Call 0x3EB2AC0
	177 Move X20, [X31+304]
	178 Move X19, [X31+312]
	179 Move X22, [X31+288]
	180 Move X21, [X31+296]
	181 Move X30, [X31+272]
	182 Move X23, [X31+280]
	183 Move X29, [X31+256]
	184 Add X31, X31, 320
	185 Return X0

