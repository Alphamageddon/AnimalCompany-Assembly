Type: UnityEngine.InputSystem.UI.MultiplayerEventSystem

Method: UnityEngine.GameObject get_playerRoot()

Disassembly:
	0x037ECE9C BL 0x1C16CF4
	0x037ECEA0 ADRP X0, 0x95D000

ISIL:
	001 Move X0, [X0+96]
	002 Return X0

Method: System.Void set_playerRoot(UnityEngine.GameObject value)

Disassembly:
	0x037ECEA4 LDR X0, [X0 + 0x5C8]
	0x037ECEA8 BL 0x1C16CF4

ISIL:
	001 Move [X0+96], X1

Method: System.Void OnEnable()

Disassembly:
	0x037ECF70 MOV X1, X31
	0x037ECF74 B 0x33BDD8C
	0x037ECF78 SUB X31, X31, 0x20
	0x037ECF7C STP X30, X19, [X31 + 0x10]
	0x037ECF80 LDR X0, [X2]
	0x037ECF84 CBZ X0, 0x37ECFC4
	0x037ECF88 MOV X19, X1

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X1, X31
	004 Move X19, X0
	005 Call EventSystem.OnEnable, X0
	006 Move X0, X19
	007 Move X30, [X31+16]
	008 Move X19, [X31+24]
	009 Call MultiplayerEventSystem.InitializePlayerRoot, X0
	010 Return 

Method: System.Void OnDisable()

Disassembly:
	0x037ECF8C MOV X1, X31
	0x037ECF90 BL 0x3CDBD10

ISIL:
	001 Move X1, X31
	002 Call EventSystem.OnDisable, X0
	003 Return 

Method: System.Void InitializePlayerRoot()

Disassembly:
	0x037ECEAC ADRP X0, 0x95D000
	0x037ECEB0 LDR X0, [X0 + 0x340]
	0x037ECEB4 BL 0x1C16CF4
	0x037ECEB8 MOVZ W8, 0x1
	0x037ECEBC STRB W8, [X21 + 0x351]
	0x037ECEC0 LDR X0, [X22]
	0x037ECEC4 BL 0x1C16F10
	0x037ECEC8 LDR X1, [X19]
	0x037ECECC MOV X19, X0
	0x037ECED0 BL 0x315505C
	0x037ECED4 LDR X8, [X20]
	0x037ECED8 LDP X22, X21, [X31 + 0x10]
	0x037ECEDC LDR X8, [X8 + 0xB8]
	0x037ECEE0 STR X19, [X8 + 0x18]
	0x037ECEE4 LDP X20, X19, [X31 + 0x20]
	0x037ECEE8 LDR X30, [X31], #0x30
	0x037ECEEC RET
	0x037ECEF0 LDR X0, [X0]
	0x037ECEF4 RET
	0x037ECEF8 LDP S0, S1, [X0 + 0x8]
	0x037ECEFC LDR V2, [X0 + 0x10]
	0x037ECF00 RET
	0x037ECF04 LDP S0, S1, [X0 + 0x14]
	0x037ECF08 RET
	0x037ECF0C LDR V0, [X0 + 0x1C]
	0x037ECF10 RET
	0x037ECF14 STR X30, [X31 - 0x20]!
	0x037ECF18 STP X20, X19, [X31 + 0x10]
	0x037ECF1C ADRP X19, 0xBF5000
	0x037ECF20 ADRP X20, 0x95D000
	0x037ECF24 LDRB W8, [X19 + 0x352]
	0x037ECF28 LDR X20, [X20 + 0x5C0]
	0x037ECF2C TBNZ X8, 0x0, 0x37ECF44
	0x037ECF30 ADRP X0, 0x95D000
	0x037ECF34 LDR X0, [X0 + 0x5C0]
	0x037ECF38 BL 0x1C16CF4
	0x037ECF3C MOVZ W8, 0x1
	0x037ECF40 STRB W8, [X19 + 0x352]
	0x037ECF44 LDR X0, [X20]
	0x037ECF48 BL 0x1C16F10
	0x037ECF4C MOV X1, X31
	0x037ECF50 MOV X19, X0
	0x037ECF54 BL 0x33BDD8C
	0x037ECF58 LDR X8, [X20]
	0x037ECF5C LDR X8, [X8 + 0xB8]
	0x037ECF60 STR X19, [X8]
	0x037ECF64 LDP X20, X19, [X31 + 0x10]
	0x037ECF68 LDR X30, [X31], #0x20
	0x037ECF6C RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xBF6000
	006 Move X21, 0x908000
	007 Move W8, [X20+837]
	008 Move X21, [X21+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x95E000
	015 Move X0, [X0+1368]
	016 Call 0x1C17CF4
	017 Move X0, 0x908000
	018 Move X0, [X0+1432]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+837], W8
	022 Move X0, [X21]
	023 Move X20, [X19+96]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, X20
	029 Move X1, X31
	030 Move X2, X31
	031 Call Object.op_Equality, X0, X1
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfEqual {60}
	036 Move X8, 0x95E000
	037 Move X8, [X8+1368]
	038 Move X0, X19
	039 Move X1, [X8]
	040 Call 0x21A4894, X0
	041 Move X8, [X21]
	042 Move X20, X0
	043 Move W9, [X8+224]
	044 Compare W9, 0
	045 JumpIfNotEqual {48}
	046 Move X0, X8
	047 Call 0x1C17DFC
	048 Move X0, X20
	049 Move X1, X31
	050 Move X2, X31
	051 Call Object.op_Inequality, X0, X1
	052 Move TEMP, X0
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfNotEqual {60}
	056 Compare X20, 0
	057 JumpIfEqual {65}
	058 Move X8, [X19+96]
	059 Move [X20+936], X8
	060 Move X20, [X31+16]
	061 Move X19, [X31+24]
	062 Move X30, [X31+32]
	063 Move X21, [X31+40]
	064 Return 
	065 Call 0x1C17F20

Method: System.Void Update()

Disassembly:
	0x037ECF94 STR W0, [X31 + 0xC]
	0x037ECF98 LDR X0, [X19]
	0x037ECF9C CBZ X0, 0x37ECFC4
	0x037ECFA0 MOV X1, X31
	0x037ECFA4 BL 0x3CDBD10
	0x037ECFA8 MOV W1, W0
	0x037ECFAC ADD X0, X31, 0xC
	0x037ECFB0 MOV X2, X31
	0x037ECFB4 BL 0x337B634
	0x037ECFB8 LDP X30, X19, [X31 + 0x10]
	0x037ECFBC ADD X31, X31, 0x20
	0x037ECFC0 RET
	0x037ECFC4 BL 0x1C16F20
	0x037ECFC8 LDR X0, [X0 + 0x30]
	0x037ECFCC RET
	0x037ECFD0 STR X1, [X0 + 0x30]
	0x037ECFD4 RET
	0x037ECFD8 LDR V0, [X0 + 0x38]
	0x037ECFDC RET
	0x037ECFE0 STR S0, [X0 + 0x38]
	0x037ECFE4 RET
	0x037ECFE8 LDR W0, [X0 + 0x20]
	0x037ECFEC RET
	0x037ECFF0 STP X30, X21, [X31 - 0x20]!
	0x037ECFF4 STP X20, X19, [X31 + 0x10]
	0x037ECFF8 ADRP X21, 0xBF5000
	0x037ECFFC LDRB W8, [X21 + 0x353]
	0x037ED000 MOV W20, W1
	0x037ED004 MOV X19, X0
	0x037ED008 TBNZ X8, 0x0, 0x37ED02C
	0x037ED00C ADRP X0, 0x92E000
	0x037ED010 LDR X0, [X0 + 0x270]
	0x037ED014 BL 0x1C16CF4
	0x037ED018 ADRP X0, 0x906000
	0x037ED01C LDR X0, [X0 + 0x598]
	0x037ED020 BL 0x1C16CF4
	0x037ED024 MOVZ W8, 0x1
	0x037ED028 STRB W8, [X21 + 0x353]
	0x037ED02C LDR W8, [X19 + 0x20]
	0x037ED030 CMP W8, W20
	0x037ED034 B.NE 0x37ED044
	0x037ED038 LDP X20, X19, [X31 + 0x10]
	0x037ED03C LDP X30, X21, [X31], #0x20
	0x037ED040 RET
	0x037ED044 CMP W8, 0x1
	0x037ED048 B.NE 0x37ED07C
	0x037ED04C LDR X21, [X19 + 0xF8]
	0x037ED050 CBZ X21, 0x37ED07C
	0x037ED054 ADRP X8, 0x92E000
	0x037ED058 LDR X8, [X8 + 0x270]
	0x037ED05C LDR X0, [X8]
	0x037ED060 LDR W8, [X0 + 0xE0]
	0x037ED064 CBNZ W8, 0x37ED06C
	0x037ED068 BL 0x1C16DFC
	0x037ED06C MOV X0, X21
	0x037ED070 MOV X1, X31
	0x037ED074 BL 0x376EC44
	0x037ED078 STR X31, [X19 + 0xF8]
	0x037ED07C CMP W20, 0x1
	0x037ED080 STR W20, [X19 + 0x20]
	0x037ED084 B.NE 0x37ED098
	0x037ED088 MOV X0, X19
	0x037ED08C LDP X20, X19, [X31 + 0x10]
	0x037ED090 LDP X30, X21, [X31], #0x20
	0x037ED094 B 0x37ED0E8
	0x037ED098 ADRP X8, 0x906000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, 0xBF6000
	007 Move X22, 0x92F000
	008 Move W8, [X19+838]
	009 Move X22, [X22+3576]
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x92F000
	016 Move X0, [X0+3576]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X19+838], W8
	020 Move X0, [X22]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X0, X31
	026 Call EventSystem.get_current
	027 Move X19, X0
	028 Move X0, X20
	029 Move X1, X31
	030 Call EventSystem.set_current, X0
	031 Move X0, X20
	032 Move X1, X31
	033 Call EventSystem.Update, X0
	034 Move X20, X31
	035 Move X0, [X22]
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {40}
	039 Call 0x1C17DFC
	040 Move X0, X19
	041 Move X1, X31
	042 Call EventSystem.set_current, X0
	043 Compare X20, 0
	044 JumpIfNotEqual {51}
	045 Move X20, [X31+32]
	046 Move X19, [X31+40]
	047 Move X22, [X31+16]
	048 Move X21, [X31+24]
	049 Move X30, [X31+48]
	050 Return 
	051 Move X0, X20
	052 Call 0x1C17F18
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move X21, X0
	055 Move X0, X21
	056 Call 0x3EB2AD0
	057 Move X20, [X0]
	058 Call 0x3EB2AE0
	059 Move X20, X31
	060 Move X21, X0
	061 Move X0, [X22]
	062 Move W8, [X0+224]
	063 Compare W8, 0
	064 JumpIfNotEqual {66}
	065 Call 0x1C17DFC
	066 Move X0, X19
	067 Move X1, X31
	068 Call EventSystem.set_current, X0
	069 Compare X20, 0
	070 JumpIfNotEqual {73}
	071 Move X0, X21
	072 Call 0x1D2D690
	073 Move X0, X20
	074 Call 0x1C17F18
	075 Call 0x1991590

Method: System.Void .ctor()

Disassembly:
	0x037ED09C LDR X8, [X8 + 0x598]
	0x037ED0A0 LDR X20, [X19 + 0x28]
	0x037ED0A4 LDR X0, [X8]
	0x037ED0A8 LDR W8, [X0 + 0xE0]
	0x037ED0AC CBNZ W8, 0x37ED0B4
	0x037ED0B0 BL 0x1C16DFC
	0x037ED0B4 MOV X0, X20
	0x037ED0B8 MOV X1, X31
	0x037ED0BC MOV X2, X31
	0x037ED0C0 BL 0x3C354F8
	0x037ED0C4 TBZ X0, 0x0, 0x37ED038
	0x037ED0C8 LDR X0, [X19 + 0x28]
	0x037ED0CC CBZ X0, 0x37ED0E4
	0x037ED0D0 LDP X20, X19, [X31 + 0x10]
	0x037ED0D4 MOVZ W1, 0x1
	0x037ED0D8 MOV X2, X31
	0x037ED0DC LDP X30, X21, [X31], #0x20
	0x037ED0E0 B 0x3C32410
	0x037ED0E4 BL 0x1C16F20
	0x037ED0E8 SUB X31, X31, 0x50
	0x037ED0EC STR X30, [X31 + 0x10]
	0x037ED0F0 STP X24, X23, [X31 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xBF5000
	006 Move X21, 0x92E000
	007 Move W8, [X20+839]
	008 Move X21, [X21+3576]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x92E000
	015 Move X0, [X0+3576]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+839], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X1, X31
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call EventSystem..ctor, X0
	031 Return 

