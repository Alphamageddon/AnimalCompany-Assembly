Type: UnityEngine.InputSystem.UI.TrackedDeviceRaycaster/<>c

Method: System.Void .cctor()

Disassembly:
	0x037EDF14 STP D13, D12, [X31 + 0x8]
	0x037EDF18 STP D11, D10, [X31 + 0x18]
	0x037EDF1C STP D9, D8, [X31 + 0x28]
	0x037EDF20 STR X30, [X31 + 0x38]
	0x037EDF24 STP X22, X21, [X31 + 0x40]
	0x037EDF28 STP X20, X19, [X31 + 0x50]
	0x037EDF2C ADRP X20, 0xBF4000
	0x037EDF30 LDRB W8, [X20 + 0x358]
	0x037EDF34 MOV X19, X0
	0x037EDF38 TBNZ X8, 0x0, 0x37EDF74
	0x037EDF3C ADRP X0, 0x92E000
	0x037EDF40 LDR X0, [X0 + 0x3C0]
	0x037EDF44 BL 0x1C16CF4
	0x037EDF48 ADRP X0, 0x95C000
	0x037EDF4C LDR X0, [X0 + 0x2F8]
	0x037EDF50 BL 0x1C16CF4
	0x037EDF54 ADRP X0, 0x95A000
	0x037EDF58 LDR X0, [X0 + 0x408]
	0x037EDF5C BL 0x1C16CF4
	0x037EDF60 ADRP X0, 0x906000
	0x037EDF64 LDR X0, [X0 + 0x598]
	0x037EDF68 BL 0x1C16CF4
	0x037EDF6C MOVZ W8, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xBF5000
	005 Move X20, 0x95D000
	006 Move W8, [X19+850]
	007 Move X20, [X20+1472]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x95D000
	013 Move X0, [X0+1472]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+850], W8
	017 Move X0, [X20]
	018 Call 0x1C17F10
	019 Move X1, X31
	020 Move X19, X0
	021 Call Object..ctor, X0
	022 Move X8, [X20]
	023 Move X8, [X8+184]
	024 Move [X8], X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Return 

Method: System.Void .ctor()

Disassembly:
	0x037EDF70 STRB W8, [X20 + 0x358]
	0x037EDF74 LDR X8, [X19 + 0xF0]

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Int32 <SortedRaycastGraphics>b__25_0(UnityEngine.InputSystem.UI.TrackedDeviceRaycaster/RaycastHitData g1, UnityEngine.InputSystem.UI.TrackedDeviceRaycaster/RaycastHitData g2)

Disassembly:
	0x037EDF78 CBZ X8, 0x37EE288
	0x037EDF7C ADD X0, X19, 0x40
	0x037EDF80 MOV X1, X31
	0x037EDF84 BL 0x3745120
	0x037EDF88 CBZ X0, 0x37EE288
	0x037EDF8C ADRP X21, 0x92E000
	0x037EDF90 LDR X21, [X21 + 0x3C0]
	0x037EDF94 LDR X1, [X21]
	0x037EDF98 BL 0x21F5E68
	0x037EDF9C ADRP X20, 0xBEC000
	0x037EDFA0 LDRB W8, [X20 + 0x5AA]
	0x037EDFA4 MOV V8.16B, V0.16B
	0x037EDFA8 MOV V9.16B, V1.16B
	0x037EDFAC CBNZ W8, 0x37EDFC4
	0x037EDFB0 ADRP X0, 0x90D000
	0x037EDFB4 LDR X0, [X0 + 0x4B8]
	0x037EDFB8 BL 0x1C16CF4
	0x037EDFBC MOVZ W8, 0x1
	0x037EDFC0 STRB W8, [X20 + 0x5AA]
	0x037EDFC4 ADRP X22, 0x90D000

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+16], X30
	003 Move [X31+24], X19
	004 Move X0, [X2]
	005 Compare X0, 0
	006 JumpIfEqual {24}
	007 Move X19, X1
	008 Move X1, X31
	009 Call Graphic.get_depth, X0
	010 Move [X31+12], W0
	011 Move X0, [X19]
	012 Compare X0, 0
	013 JumpIfEqual {24}
	014 Move X1, X31
	015 Call Graphic.get_depth, X0
	016 Move W1, W0
	017 Add X0, X31, 12
	018 Move X2, X31
	019 Call Int32.CompareTo, X0, X1
	020 Move X30, [X31+16]
	021 Move X19, [X31+24]
	022 Add X31, X31, 32
	023 Return X0
	024 Call 0x1C17F20

