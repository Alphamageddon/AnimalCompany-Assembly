Type: UnityEngine.InputSystem.UI.ExtendedPointerEventData

Method: System.Void .ctor(UnityEngine.EventSystems.EventSystem eventSystem)

Disassembly:
	0x037E5B14 MOV X20, X0
	0x037E5B18 MOV X19, X8

ISIL:
	001 Move X2, X31
	002 Call PointerEventData..ctor, X0, X1
	003 Return 

Method: UnityEngine.InputSystem.InputControl get_control()

Disassembly:
	0x037E5B1C TBNZ X9, 0x0, 0x37E5B34
	0x037E5B20 ADRP X0, 0x964000

ISIL:
	001 Move X0, [X0+384]
	002 Return X0

Method: System.Void set_control(UnityEngine.InputSystem.InputControl value)

Disassembly:
	0x037E5B24 LDR X0, [X0 + 0x308]
	0x037E5B28 BL 0x1C16CF4

ISIL:
	001 Move [X0+384], X1
	002 Return 

Method: UnityEngine.InputSystem.InputDevice get_device()

Disassembly:
	0x037E5B2C MOVZ W8, 0x1
	0x037E5B30 STRB W8, [X22 + 0x31C]

ISIL:
	001 Move X0, [X0+392]
	002 Return X0

Method: System.Void set_device(UnityEngine.InputSystem.InputDevice value)

Disassembly:
	0x037E5B34 MOV X0, X20
	0x037E5B38 MOV W1, W21

ISIL:
	001 Move [X0+392], X1
	002 Return 

Method: System.Int32 get_touchId()

Disassembly:
	0x037E5B3C BL 0x37E59C8
	0x037E5B40 ADDS W31, W0, 0x1

ISIL:
	001 Move W0, [X0+400]
	002 Return X0

Method: System.Void set_touchId(System.Int32 value)

Disassembly:
	0x037E5B44 B.EQ 0x37E5B80
	0x037E5B48 ADRP X8, 0x964000

ISIL:
	001 Move [X0+400], W1
	002 Return 

Method: UnityEngine.InputSystem.UI.UIPointerType get_pointerType()

Disassembly:
	0x037E5B4C LDR X8, [X8 + 0x308]
	0x037E5B50 MOV W1, W0

ISIL:
	001 Move W0, [X0+404]
	002 Return X0

Method: System.Void set_pointerType(UnityEngine.InputSystem.UI.UIPointerType value)

Disassembly:
	0x037E5B54 ADD X0, X20, 0x158
	0x037E5B58 LDR X2, [X8]

ISIL:
	001 Move [X0+404], W1
	002 Return 

Method: System.Int32 get_uiToolkitPointerId()

Disassembly:
	0x037E5B5C ADD X8, X31, 0x0
	0x037E5B60 BL 0x2DEBA18

ISIL:
	001 Move W0, [X0+408]
	002 Return X0

Method: System.Void set_uiToolkitPointerId(System.Int32 value)

Disassembly:
	0x037E5B64 LDR X8, [X31 + 0x1D0]
	0x037E5B68 CBZ X8, 0x37E5BA4

ISIL:
	001 Move [X0+408], W1
	002 Return 

Method: UnityEngine.Vector3 get_trackedDevicePosition()

Disassembly:
	0x037E5B6C ADD X1, X8, 0x50
	0x037E5B70 MOVZ W2, 0x50
	0x037E5B74 MOV X0, X19
	0x037E5B78 BL 0x3EB1AC0

ISIL:
	001 Move V0, [X0+412]
	002 Move V1, [X0+416]
	003 Move V2, [X0+420]
	004 Return X0

Method: System.Void set_trackedDevicePosition(UnityEngine.Vector3 value)

Disassembly:
	0x037E5B7C B 0x37E5B90
	0x037E5B80 MOVI V0.2D, 0x0
	0x037E5B84 STP V0, V0, [X19 + 0x30]
	0x037E5B88 STP V0, V0, [X19 + 0x10]

ISIL:
	001 Move [X0+412], S0
	002 Move [X0+416], S1
	003 Move [X0+420], S2
	004 Return 

Method: UnityEngine.Quaternion get_trackedDeviceOrientation()

Disassembly:
	0x037E5B8C STR V0, [X19]
	0x037E5B90 ADD X31, X31, 0x220
	0x037E5B94 LDP X20, X19, [X31 + 0x20]
	0x037E5B98 LDP X22, X21, [X31 + 0x10]
	0x037E5B9C LDP X29, X30, [X31], #0x30

ISIL:
	001 Move V0, [X0+424]
	002 Move V1, [X0+428]
	003 Move V2, [X0+432]
	004 Move V3, [X0+436]
	005 Return X0

Method: System.Void set_trackedDeviceOrientation(UnityEngine.Quaternion value)

Disassembly:
	0x037E5BA0 RET
	0x037E5BA4 BL 0x1C16F20
	0x037E5BA8 SUB X31, X31, 0x90
	0x037E5BAC STP X30, X25, [X31 + 0x50]
	0x037E5BB0 STP X24, X23, [X31 + 0x60]

ISIL:
	001 Move [X0+424], S0
	002 Move [X0+428], S1
	003 Move [X0+432], S2
	004 Move [X0+436], S3
	005 Return 

Method: System.String ToString()

Disassembly:
	0x037E5BB4 STP X22, X21, [X31 + 0x70]
	0x037E5BB8 STP X20, X19, [X31 + 0x80]
	0x037E5BBC ADRP X22, 0xBFC000
	0x037E5BC0 LDRB W9, [X22 + 0x31D]
	0x037E5BC4 MOV X21, X1
	0x037E5BC8 MOV X19, X0
	0x037E5BCC MOV X20, X8
	0x037E5BD0 TBNZ X9, 0x0, 0x37E5C18
	0x037E5BD4 ADRP X0, 0x964000
	0x037E5BD8 LDR X0, [X0 + 0x320]
	0x037E5BDC BL 0x1C16CF4
	0x037E5BE0 ADRP X0, 0x964000
	0x037E5BE4 LDR X0, [X0 + 0x328]
	0x037E5BE8 BL 0x1C16CF4
	0x037E5BEC ADRP X0, 0x964000
	0x037E5BF0 LDR X0, [X0 + 0x330]
	0x037E5BF4 BL 0x1C16CF4
	0x037E5BF8 ADRP X0, 0x964000
	0x037E5BFC LDR X0, [X0 + 0x338]
	0x037E5C00 BL 0x1C16CF4
	0x037E5C04 ADRP X0, 0x964000
	0x037E5C08 LDR X0, [X0 + 0x340]
	0x037E5C0C BL 0x1C16CF4
	0x037E5C10 MOVZ W8, 0x1
	0x037E5C14 STRB W8, [X22 + 0x31D]
	0x037E5C18 CBZ X21, 0x37E5DB4
	0x037E5C1C LDR W8, [X21 + 0x194]
	0x037E5C20 CMP W8, 0x3
	0x037E5C24 B.NE 0x37E5D04
	0x037E5C28 ADRP X24, 0x964000
	0x037E5C2C LDR X24, [X24 + 0x340]
	0x037E5C30 LDR X0, [X24]
	0x037E5C34 LDR W8, [X0 + 0xE0]
	0x037E5C38 CBNZ W8, 0x37E5C44
	0x037E5C3C BL 0x1C16DFC
	0x037E5C40 LDR X0, [X24]
	0x037E5C44 LDR X8, [X0 + 0xB8]
	0x037E5C48 LDR W8, [X8]
	0x037E5C4C CMP W8, 0x1
	0x037E5C50 B.LT 0x37E5D04
	0x037E5C54 ADRP X25, 0x964000
	0x037E5C58 LDR X25, [X25 + 0x320]
	0x037E5C5C MOV W22, W31
	0x037E5C60 LDR W8, [X0 + 0xE0]
	0x037E5C64 CBNZ W8, 0x37E5C70
	0x037E5C68 BL 0x1C16DFC
	0x037E5C6C LDR X0, [X24]
	0x037E5C70 LDR X8, [X0 + 0xB8]
	0x037E5C74 LDR W8, [X8]
	0x037E5C78 CMP W22, W8
	0x037E5C7C B.GE 0x37E5D6C
	0x037E5C80 LDR W8, [X0 + 0xE0]
	0x037E5C84 CBNZ W8, 0x37E5C90
	0x037E5C88 BL 0x1C16DFC
	0x037E5C8C LDR X0, [X24]
	0x037E5C90 LDR X0, [X0 + 0xB8]
	0x037E5C94 LDR X2, [X25]
	0x037E5C98 MOV W1, W22
	0x037E5C9C BL 0x2DEA3EC
	0x037E5CA0 LDR X8, [X19 + 0x20]
	0x037E5CA4 CBZ X8, 0x37E5DB0
	0x037E5CA8 LDP W2, W9, [X8 + 0x18]
	0x037E5CAC MOV X23, X0
	0x037E5CB0 ADD W9, W9, 0x1
	0x037E5CB4 CMP W2, 0x1
	0x037E5CB8 STP W31, W9, [X8 + 0x18]
	0x037E5CBC B.LT 0x37E5CD0
	0x037E5CC0 LDR X0, [X8 + 0x10]
	0x037E5CC4 MOV W1, W31
	0x037E5CC8 MOV X3, X31
	0x037E5CCC BL 0x339FA34
	0x037E5CD0 CBZ X23, 0x37E5DB0
	0x037E5CD4 LDR X2, [X19 + 0x20]
	0x037E5CD8 MOV X0, X23
	0x037E5CDC MOV X1, X21
	0x037E5CE0 BL 0x37E5DFC
	0x037E5CE4 LDR X0, [X19 + 0x20]
	0x037E5CE8 CBZ X0, 0x37E5DB0
	0x037E5CEC LDR W8, [X0 + 0x18]
	0x037E5CF0 CMP W8, 0x0
	0x037E5CF4 B.GT 0x37E5D94
	0x037E5CF8 LDR X0, [X24]
	0x037E5CFC ADD W22, W22, 0x1
	0x037E5D00 B 0x37E5C60
	0x037E5D04 LDR X0, [X19 + 0x38]
	0x037E5D08 CBZ X0, 0x37E5DB0
	0x037E5D0C LDR X2, [X19 + 0x20]
	0x037E5D10 MOV X1, X21
	0x037E5D14 MOV X3, X31
	0x037E5D18 BL 0x3E508EC
	0x037E5D1C LDR X0, [X19 + 0x20]
	0x037E5D20 ADD X8, X31, 0x0
	0x037E5D24 MOV X1, X31
	0x037E5D28 BL 0x3E541F8
	0x037E5D2C ADD X1, X31, 0x0
	0x037E5D30 MOVZ W2, 0x50
	0x037E5D34 MOV X0, X20
	0x037E5D38 BL 0x3EB1AC0
	0x037E5D3C LDR X8, [X19 + 0x20]
	0x037E5D40 CBZ X8, 0x37E5DB0
	0x037E5D44 LDP W2, W9, [X8 + 0x18]
	0x037E5D48 ADD W9, W9, 0x1
	0x037E5D4C CMP W2, 0x1
	0x037E5D50 STP W31, W9, [X8 + 0x18]
	0x037E5D54 B.LT 0x37E5D7C
	0x037E5D58 LDR X0, [X8 + 0x10]
	0x037E5D5C MOV W1, W31
	0x037E5D60 MOV X3, X31
	0x037E5D64 BL 0x339FA34
	0x037E5D68 B 0x37E5D7C
	0x037E5D6C MOVI V0.2D, 0x0
	0x037E5D70 STP V0, V0, [X20 + 0x30]
	0x037E5D74 STP V0, V0, [X20 + 0x10]
	0x037E5D78 STR V0, [X20]
	0x037E5D7C LDP X20, X19, [X31 + 0x80]
	0x037E5D80 LDP X22, X21, [X31 + 0x70]
	0x037E5D84 LDP X24, X23, [X31 + 0x60]
	0x037E5D88 LDP X30, X25, [X31 + 0x50]
	0x037E5D8C ADD X31, X31, 0x90
	0x037E5D90 RET
	0x037E5D94 ADRP X8, 0x964000
	0x037E5D98 LDR X8, [X8 + 0x338]
	0x037E5D9C MOV W1, W31
	0x037E5DA0 LDR X2, [X8]
	0x037E5DA4 ADD X8, X31, 0x0
	0x037E5DA8 BL 0x3035A44
	0x037E5DAC B 0x37E5D2C
	0x037E5DB0 BL 0x1C16F20
	0x037E5DB4 ADRP X0, 0x913000
	0x037E5DB8 LDR X0, [X0 + 0x528]
	0x037E5DBC BL 0x1C16D08
	0x037E5DC0 BL 0x1C16F10
	0x037E5DC4 MOV X19, X0
	0x037E5DC8 ADRP X0, 0x964000
	0x037E5DCC LDR X0, [X0 + 0x348]
	0x037E5DD0 BL 0x1C16D08
	0x037E5DD4 MOV X1, X0
	0x037E5DD8 MOV X0, X19
	0x037E5DDC MOV X2, X31
	0x037E5DE0 BL 0x330E100
	0x037E5DE4 ADRP X0, 0x964000
	0x037E5DE8 LDR X0, [X0 + 0x350]
	0x037E5DEC BL 0x1C16D08
	0x037E5DF0 MOV X1, X0
	0x037E5DF4 MOV X0, X19
	0x037E5DF8 BL 0x1C16DEC
	0x037E5DFC STP D15, D14, [X31 - 0xA0]!
	0x037E5E00 STP D13, D12, [X31 + 0x10]
	0x037E5E04 STP D11, D10, [X31 + 0x20]
	0x037E5E08 STP D9, D8, [X31 + 0x30]
	0x037E5E0C STP X29, X30, [X31 + 0x40]
	0x037E5E10 STP X28, X27, [X31 + 0x50]
	0x037E5E14 STP X26, X25, [X31 + 0x60]
	0x037E5E18 STP X24, X23, [X31 + 0x70]
	0x037E5E1C STP X22, X21, [X31 + 0x80]
	0x037E5E20 STP X20, X19, [X31 + 0x90]
	0x037E5E24 SUB X31, X31, 0x160
	0x037E5E28 ADRP X22, 0xBFC000
	0x037E5E2C ADRP X23, 0x90E000
	0x037E5E30 LDRB W8, [X22 + 0x34C]
	0x037E5E34 LDR X23, [X23 + 0x598]
	0x037E5E38 MOV X19, X2
	0x037E5E3C MOV X21, X1
	0x037E5E40 MOV X20, X0
	0x037E5E44 ADD X25, X31, 0xC0
	0x037E5E48 TBNZ X8, 0x0, 0x37E5EB4
	0x037E5E4C ADRP X0, 0x964000
	0x037E5E50 LDR X0, [X0 + 0x358]
	0x037E5E54 BL 0x1C16CF4
	0x037E5E58 ADRP X0, 0x964000
	0x037E5E5C LDR X0, [X0 + 0x360]
	0x037E5E60 BL 0x1C16CF4
	0x037E5E64 ADRP X0, 0x964000
	0x037E5E68 LDR X0, [X0 + 0x368]
	0x037E5E6C BL 0x1C16CF4
	0x037E5E70 ADRP X0, 0x964000
	0x037E5E74 LDR X0, [X0 + 0x330]
	0x037E5E78 BL 0x1C16CF4
	0x037E5E7C ADRP X0, 0x964000
	0x037E5E80 LDR X0, [X0 + 0x370]
	0x037E5E84 BL 0x1C16CF4
	0x037E5E88 ADRP X0, 0x90E000
	0x037E5E8C LDR X0, [X0 + 0x598]
	0x037E5E90 BL 0x1C16CF4
	0x037E5E94 ADRP X0, 0x915000
	0x037E5E98 LDR X0, [X0 + 0xC60]
	0x037E5E9C BL 0x1C16CF4
	0x037E5EA0 ADRP X0, 0x90E000
	0x037E5EA4 LDR X0, [X0 + 0x5F8]
	0x037E5EA8 BL 0x1C16CF4
	0x037E5EAC MOVZ W8, 0x1
	0x037E5EB0 STRB W8, [X22 + 0x34C]
	0x037E5EB4 MOVI V0.2D, 0x0
	0x037E5EB8 MOV X0, X20
	0x037E5EBC STR W31, [X31 + 0xB0]
	0x037E5EC0 STP X31, X31, [X31 + 0x80]
	0x037E5EC4 STR X31, [X31 + 0x70]
	0x037E5EC8 STUR V0, [X25 + 0x1C]
	0x037E5ECC STP V0, V0, [X25]
	0x037E5ED0 STP V0, V0, [X31 + 0x90]
	0x037E5ED4 STR W31, [X31 + 0x78]
	0x037E5ED8 BL 0x37EC2FC
	0x037E5EDC LDR X8, [X23]
	0x037E5EE0 MOV X22, X0
	0x037E5EE4 LDR W9, [X8 + 0xE0]
	0x037E5EE8 CBNZ W9, 0x37E5EF4
	0x037E5EEC MOV X0, X8
	0x037E5EF0 BL 0x1C16DFC
	0x037E5EF4 MOV X0, X22
	0x037E5EF8 MOV X1, X31
	0x037E5EFC MOV X2, X31
	0x037E5F00 BL 0x3C3883C
	0x037E5F04 TBNZ X0, 0x0, 0x37E5F48
	0x037E5F08 LDR X8, [X20]
	0x037E5F0C MOV X0, X20
	0x037E5F10 LDR X9, [X8 + 0x258]
	0x037E5F14 LDR X1, [X8 + 0x260]
	0x037E5F18 BLR X9
	0x037E5F1C LDR X8, [X23]
	0x037E5F20 MOV X22, X0
	0x037E5F24 LDR W9, [X8 + 0xE0]
	0x037E5F28 CBNZ W9, 0x37E5F34
	0x037E5F2C MOV X0, X8
	0x037E5F30 BL 0x1C16DFC
	0x037E5F34 MOV X0, X22
	0x037E5F38 MOV X1, X31
	0x037E5F3C MOV X2, X31
	0x037E5F40 BL 0x3C3883C
	0x037E5F44 TBZ X0, 0x0, 0x37E5F78
	0x037E5F48 ADD X31, X31, 0x160
	0x037E5F4C LDP X20, X19, [X31 + 0x90]
	0x037E5F50 LDP X22, X21, [X31 + 0x80]
	0x037E5F54 LDP X24, X23, [X31 + 0x70]
	0x037E5F58 LDP X26, X25, [X31 + 0x60]
	0x037E5F5C LDP X28, X27, [X31 + 0x50]
	0x037E5F60 LDP X29, X30, [X31 + 0x40]
	0x037E5F64 LDP D9, D8, [X31 + 0x30]
	0x037E5F68 LDP D11, D10, [X31 + 0x20]
	0x037E5F6C LDP D13, D12, [X31 + 0x10]
	0x037E5F70 LDP D15, D14, [X31], #0xA0
	0x037E5F74 RET
	0x037E5F78 CBZ X21, 0x37E647C
	0x037E5F7C ADRP X8, 0xBF3000
	0x037E5F80 LDR V12, [X21 + 0x19C]
	0x037E5F84 LDR V13, [X21 + 0x1A0]
	0x037E5F88 LDR V14, [X21 + 0x1A4]
	0x037E5F8C LDR V8, [X21 + 0x1A8]
	0x037E5F90 LDR V9, [X21 + 0x1AC]
	0x037E5F94 LDR V10, [X21 + 0x1B0]
	0x037E5F98 LDRB W8, [X8 + 0xA1F]
	0x037E5F9C LDR V11, [X21 + 0x1B4]
	0x037E5FA0 CBNZ W8, 0x37E5FBC
	0x037E5FA4 ADRP X0, 0x90E000
	0x037E5FA8 LDR X0, [X0 + 0x5A0]
	0x037E5FAC BL 0x1C16CF4
	0x037E5FB0 MOVZ W8, 0x1
	0x037E5FB4 ADRP X9, 0xBF3000
	0x037E5FB8 STRB W8, [X9 + 0xA1F]
	0x037E5FBC ADRP X21, 0x90E000
	0x037E5FC0 LDR X21, [X21 + 0x5A0]
	0x037E5FC4 MOV V0.16B, V8.16B
	0x037E5FC8 MOV V1.16B, V9.16B
	0x037E5FCC MOV V2.16B, V10.16B
	0x037E5FD0 LDR X8, [X21]
	0x037E5FD4 MOV V3.16B, V11.16B
	0x037E5FD8 MOV X0, X31
	0x037E5FDC LDR X8, [X8 + 0xB8]
	0x037E5FE0 LDP S4, S5, [X8 + 0x48]
	0x037E5FE4 LDR V6, [X8 + 0x50]
	0x037E5FE8 BL 0x3C2A9FC
	0x037E5FEC ADRP X22, 0xBF3000
	0x037E5FF0 LDRB W8, [X22 + 0x785]
	0x037E5FF4 MOV V8.16B, V0.16B
	0x037E5FF8 MOV V9.16B, V1.16B
	0x037E5FFC MOV V10.16B, V2.16B
	0x037E6000 CBNZ W8, 0x37E6018
	0x037E6004 ADRP X0, 0x90D000
	0x037E6008 LDR X0, [X0 + 0x5A8]
	0x037E600C BL 0x1C16CF4
	0x037E6010 MOVZ W8, 0x1
	0x037E6014 STRB W8, [X22 + 0x785]
	0x037E6018 ADRP X8, 0x90D000
	0x037E601C LDR X8, [X8 + 0x5A8]
	0x037E6020 LDR X0, [X8]
	0x037E6024 LDR W8, [X0 + 0xE0]
	0x037E6028 CBNZ W8, 0x37E6030
	0x037E602C BL 0x1C16DFC
	0x037E6030 FMUL S0, S8, S8
	0x037E6034 FMUL S1, S9, S9
	0x037E6038 ADRP X8, 0xFFFFFFFFFD304000
	0x037E603C FADD S0, S0, S1
	0x037E6040 LDR V1, [X8 + 0x17C]
	0x037E6044 FMUL S2, S10, S10
	0x037E6048 FADD S0, S2, S0
	0x037E604C FSQRT S0, S0
	0x037E6050 FCMP S0, S1
	0x037E6054 B.LE 0x37E606C
	0x037E6058 FDIV S2, S8, S0
	0x037E605C FDIV S1, S9, S0
	0x037E6060 STP S1, S2, [X31 + 0x1C]
	0x037E6064 FDIV S0, S10, S0
	0x037E6068 B 0x37E60A4
	0x037E606C ADRP X22, 0xBF2000
	0x037E6070 LDRB W8, [X22 + 0x783]
	0x037E6074 CBNZ W8, 0x37E608C
	0x037E6078 ADRP X0, 0x90D000
	0x037E607C LDR X0, [X0 + 0x5A0]
	0x037E6080 BL 0x1C16CF4
	0x037E6084 MOVZ W8, 0x1
	0x037E6088 STRB W8, [X22 + 0x783]
	0x037E608C LDR X8, [X21]
	0x037E6090 LDR X8, [X8 + 0xB8]
	0x037E6094 LDR V1, [X8]
	0x037E6098 LDR V0, [X8 + 0x4]
	0x037E609C STP S0, S1, [X31 + 0x1C]
	0x037E60A0 LDR V0, [X8 + 0x8]
	0x037E60A4 STR S0, [X31 + 0x18]
	0x037E60A8 LDRB W8, [X20 + 0x32]
	0x037E60AC LDR V0, [X20 + 0x34]
	0x037E60B0 STR S0, [X31 + 0x24]
	0x037E60B4 CBZ W8, 0x37E6128
	0x037E60B8 LDR W0, [X20 + 0x38]
	0x037E60BC MOV X1, X31
	0x037E60C0 BL 0x3C35CB8
	0x037E60C4 ADRP X8, 0x90D000
	0x037E60C8 LDR X8, [X8 + 0x5F8]
	0x037E60CC MOV W22, W0
	0x037E60D0 LDR X8, [X8]
	0x037E60D4 LDR W9, [X8 + 0xE0]
	0x037E60D8 CBNZ W9, 0x37E60E4
	0x037E60DC MOV X0, X8
	0x037E60E0 BL 0x1C16DFC
	0x037E60E4 LDR V0, [X31 + 0x20]
	0x037E60E8 LDR V1, [X31 + 0x1C]
	0x037E60EC ADD X0, X31, 0x58
	0x037E60F0 ADD X1, X31, 0xC0
	0x037E60F4 STP S14, S0, [X31 + 0x60]
	0x037E60F8 LDR V0, [X31 + 0x18]
	0x037E60FC MOV W2, W22
	0x037E6100 MOV X3, X31
	0x037E6104 STP S12, S13, [X31 + 0x58]
	0x037E6108 STP S1, S0, [X31 + 0x68]
	0x037E610C LDR V0, [X31 + 0x24]
	0x037E6110 BL 0x3C8B6EC
	0x037E6114 TBZ X0, 0x0, 0x37E6128
	0x037E6118 ADD X0, X31, 0xC0
	0x037E611C MOV X1, X31
	0x037E6120 BL 0x3C8E684
	0x037E6124 STR S0, [X31 + 0x24]
	0x037E6128 LDRB W8, [X20 + 0x31]
	0x037E612C CBZ W8, 0x37E61E4
	0x037E6130 LDR W0, [X20 + 0x38]
	0x037E6134 MOV X1, X31
	0x037E6138 BL 0x3C35CB8
	0x037E613C ADRP X8, 0x914000
	0x037E6140 LDR X8, [X8 + 0xC60]
	0x037E6144 MOV W22, W0
	0x037E6148 LDR X8, [X8]
	0x037E614C LDR W9, [X8 + 0xE0]
	0x037E6150 CBNZ W9, 0x37E615C
	0x037E6154 MOV X0, X8

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+80], X29
	003 Move [X31+88], X30
	004 Move [X31+96], X28
	005 Move [X31+104], X27
	006 Move [X31+112], X26
	007 Move [X31+120], X25
	008 Move [X31+128], X24
	009 Move [X31+136], X23
	010 Move [X31+144], X22
	011 Move [X31+152], X21
	012 Move [X31+160], X20
	013 Move [X31+168], X19
	014 Move X21, 0xBFD000
	015 Move X20, 0x90F000
	016 Move W8, [X21+790]
	017 Move X20, [X20+2288]
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {79}
	023 Move X0, 0x965000
	024 Move X0, [X0+624]
	025 Call 0x1C17CF4
	026 Move X0, 0x90F000
	027 Move X0, [X0+2288]
	028 Call 0x1C17CF4
	029 Move X0, 0x965000
	030 Move X0, [X0+632]
	031 Call 0x1C17CF4
	032 Move X0, 0x965000
	033 Move X0, [X0+640]
	034 Call 0x1C17CF4
	035 Move X0, 0x965000
	036 Move X0, [X0+648]
	037 Call 0x1C17CF4
	038 Move X0, 0x965000
	039 Move X0, [X0+656]
	040 Call 0x1C17CF4
	041 Move X0, 0x965000
	042 Move X0, [X0+664]
	043 Call 0x1C17CF4
	044 Move X0, 0x965000
	045 Move X0, [X0+672]
	046 Call 0x1C17CF4
	047 Move X0, 0x965000
	048 Move X0, [X0+680]
	049 Call 0x1C17CF4
	050 Move X0, 0x965000
	051 Move X0, [X0+688]
	052 Call 0x1C17CF4
	053 Move X0, 0x965000
	054 Move X0, [X0+696]
	055 Call 0x1C17CF4
	056 Move X0, 0x965000
	057 Move X0, [X0+704]
	058 Call 0x1C17CF4
	059 Move X0, 0x965000
	060 Move X0, [X0+712]
	061 Call 0x1C17CF4
	062 Move X0, 0x962000
	063 Move X0, [X0+160]
	064 Call 0x1C17CF4
	065 Move X0, 0x965000
	066 Move X0, [X0+720]
	067 Call 0x1C17CF4
	068 Move X0, 0x965000
	069 Move X0, [X0+728]
	070 Call 0x1C17CF4
	071 Move X0, 0x965000
	072 Move X0, [X0+736]
	073 Call 0x1C17CF4
	074 Move X0, 0x965000
	075 Move X0, [X0+744]
	076 Call 0x1C17CF4
	077 Move W8, 1
	078 Move [X21+790], W8
	079 Move X0, [X20]
	080 Move [X31+64], X31
	081 Move [X31+72], X31
	082 Move [X31+56], W31
	083 Move [X31+40], X31
	084 Move [X31+48], X31
	085 Move [X31+32], X31
	086 Call 0x1C17F10
	087 Move X1, X31
	088 Move X20, X0
	089 Call StringBuilder..ctor, X0
	090 Move X0, X19
	091 Move X1, X31
	092 Call PointerEventData.ToString, X0
	093 Compare X20, 0
	094 JumpIfEqual {385}
	095 Move X28, 0x965000
	096 Move X22, 0x965000
	097 Move X23, 0x965000
	098 Move X29, 0x965000
	099 Move X21, 0x965000
	100 Move X27, 0x965000
	101 Move X25, 0x965000
	102 Move X24, 0x965000
	103 Move X28, [X28+624]
	104 Move X22, [X22+736]
	105 Move X23, [X23+688]
	106 Move X29, [X29+728]
	107 Move X21, [X21+720]
	108 Move X27, [X27+632]
	109 Move X25, [X25+744]
	110 Move X24, [X24+680]
	111 Move X1, X0
	112 Move X0, X20
	113 Move X2, X31
	114 Add X26, X19, 276
	115 Call StringBuilder.Append, X0, X1
	116 Move X8, [X28]
	117 Move W9, [X19+328]
	118 Move TEMP, 0
	119 Not TEMP
	120 Move X28, TEMP
	121 Add X0, X31, 8
	122 Move X1, X31
	123 Move [X31+8], X8
	124 Move [X31+16], X28
	125 Move [X31+24], W9
	126 Call Enum.ToString, X0
	127 Move X8, [X22]
	128 Move X1, X0
	129 Move X2, X31
	130 Move X0, X8
	131 Call String.Concat, X0, X1
	132 Move X1, X0
	133 Move X0, X20
	134 Move X2, X31
	135 Call StringBuilder.AppendLine, X0, X1
	136 Move V0, [X19+308]
	137 Add X0, X31, 76
	138 Move X1, X31
	139 Move [X31+76], S0
	140 Call Single.ToString, X0
	141 Move X8, [X23]
	142 Move X1, X0
	143 Move X2, X31
	144 Move X0, X8
	145 Call String.Concat, X0, X1
	146 Move X1, X0
	147 Move X0, X20
	148 Move X2, X31
	149 Call StringBuilder.AppendLine, X0, X1
	150 Move W8, [X19+312]
	151 Add X0, X31, 72
	152 Move X1, X31
	153 Move [X31+72], W8
	154 Call Int32.ToString, X0
	155 Move X8, [X29]
	156 Move X1, X0
	157 Move X2, X31
	158 Move X0, X8
	159 Call String.Concat, X0, X1
	160 Move X1, X0
	161 Move X0, X20
	162 Move X2, X31
	163 Call StringBuilder.AppendLine, X0, X1
	164 Move X0, [X19+392]
	165 Move X21, [X21]
	166 Compare X0, 0
	167 JumpIfEqual {173}
	168 Move X8, [X0]
	169 Move X9, [X8+360]
	170 Move X1, [X8+368]
	171 NotImplemented "Instruction BLR not yet implemented."
	172 Move X1, X0
	173 Move X1, X31
	174 Move X0, X21
	175 Move X2, X31
	176 Call String.Concat, X0, X1
	177 Move X1, X0
	178 Move X0, X20
	179 Move X2, X31
	180 Call StringBuilder.AppendLine, X0, X1
	181 Move X8, [X27]
	182 Move W9, [X19+404]
	183 Add X0, X31, 8
	184 Move X1, X31
	185 Move [X31+8], X8
	186 Move [X31+16], X28
	187 Move [X31+24], W9
	188 Call Enum.ToString, X0
	189 Move X8, [X25]
	190 Move X1, X0
	191 Move X2, X31
	192 Move X0, X8
	193 Call String.Concat, X0, X1
	194 Move X1, X0
	195 Move X0, X20
	196 Move X2, X31
	197 Call StringBuilder.AppendLine, X0, X1
	198 Move W8, [X19+400]
	199 Add X0, X31, 72
	200 Move X1, X31
	201 Move [X31+72], W8
	202 Call Int32.ToString, X0
	203 Move X8, [X24]
	204 Move X1, X0
	205 Move X2, X31
	206 Move X0, X8
	207 Call String.Concat, X0, X1
	208 Move X1, X0
	209 Move X0, X20
	210 Move X2, X31
	211 Call StringBuilder.AppendLine, X0, X1
	212 Move V0, [X26]
	213 Add X0, X31, 64
	214 Move X1, X31
	215 Move X2, X31
	216 Move X3, X31
	217 Move [X31+64], D0
	218 Call 0x25F44C4
	219 Move X8, 0x965000
	220 Move X8, [X8+664]
	221 Move X1, X0
	222 Move X2, X31
	223 Move X8, [X8]
	224 Move X0, X8
	225 Call String.Concat, X0, X1
	226 Move X1, X0
	227 Move X0, X20
	228 Move X2, X31
	229 Call StringBuilder.AppendLine, X0, X1
	230 Move V0, [X26+136]
	231 Move V1, [X19+420]
	232 Add X0, X31, 48
	233 Move X1, X31
	234 Move X2, X31
	235 Move X3, X31
	236 Move [X31+48], D0
	237 Move [X31+56], S1
	238 Call 0x2431694
	239 Move X8, 0x965000
	240 Move X8, [X8+712]
	241 Move X1, X0
	242 Move X2, X31
	243 Move X8, [X8]
	244 Move X0, X8
	245 Call String.Concat, X0, X1
	246 Move X1, X0
	247 Move X0, X20
	248 Move X2, X31
	249 Call StringBuilder.AppendLine, X0, X1
	250 NotImplemented "Instruction LDUR not yet implemented."
	251 Add X0, X31, 32
	252 Move X1, X31
	253 Move X2, X31
	254 Move X3, X31
	255 Move [X31+2], V0
	256 Call 0x2455360
	257 Move X8, 0x965000
	258 Move X8, [X8+640]
	259 Move X1, X0
	260 Move X2, X31
	261 Move X8, [X8]
	262 Move X0, X8
	263 Call String.Concat, X0, X1
	264 Move X1, X0
	265 Move X0, X20
	266 Move X2, X31
	267 Call StringBuilder.AppendLine, X0, X1
	268 Move V0, [X19+332]
	269 Add X0, X31, 76
	270 Move X1, X31
	271 Move [X31+76], S0
	272 Call Single.ToString, X0
	273 Move X8, 0x962000
	274 Move X8, [X8+160]
	275 Move X1, X0
	276 Move X2, X31
	277 Move X8, [X8]
	278 Move X0, X8
	279 Call String.Concat, X0, X1
	280 Move X1, X0
	281 Move X0, X20
	282 Move X2, X31
	283 Call StringBuilder.AppendLine, X0, X1
	284 Move V0, [X26+88]
	285 Add X0, X31, 64
	286 Move X1, X31
	287 Move X2, X31
	288 Move X3, X31
	289 Move [X31+64], D0
	290 Call 0x25F44C4
	291 Move X8, 0x965000
	292 Move X8, [X8+656]
	293 Move X1, X0
	294 Move X2, X31
	295 Move X8, [X8]
	296 Move X0, X8
	297 Call String.Concat, X0, X1
	298 Move X1, X0
	299 Move X0, X20
	300 Move X2, X31
	301 Call StringBuilder.AppendLine, X0, X1
	302 Move V0, [X19+344]
	303 Add X0, X31, 76
	304 Move X1, X31
	305 Move [X31+76], S0
	306 Call Single.ToString, X0
	307 Move X8, 0x964000
	308 Move X8, [X8+672]
	309 Move X1, X0
	310 Move X2, X31
	311 Move X8, [X8]
	312 Move X0, X8
	313 Call String.Concat, X0, X1
	314 Move X1, X0
	315 Move X0, X20
	316 Move X2, X31
	317 Call StringBuilder.AppendLine, X0, X1
	318 Move V0, [X19+340]
	319 Add X0, X31, 76
	320 Move X1, X31
	321 Move [X31+76], S0
	322 Call Single.ToString, X0
	323 Move X8, 0x964000
	324 Move X8, [X8+704]
	325 Move X1, X0
	326 Move X2, X31
	327 Move X8, [X8]
	328 Move X0, X8
	329 Call String.Concat, X0, X1
	330 Move X1, X0
	331 Move X0, X20
	332 Move X2, X31
	333 Call StringBuilder.AppendLine, X0, X1
	334 Move V0, [X19+348]
	335 Add X0, X31, 76
	336 Move X1, X31
	337 Move [X31+76], S0
	338 Call Single.ToString, X0
	339 Move X8, 0x964000
	340 Move X8, [X8+648]
	341 Move X1, X0
	342 Move X2, X31
	343 Move X8, [X8]
	344 Move X0, X8
	345 Call String.Concat, X0, X1
	346 Move X1, X0
	347 Move X0, X20
	348 Move X2, X31
	349 Call StringBuilder.AppendLine, X0, X1
	350 Move W8, [X19+252]
	351 Add X0, X31, 72
	352 Move X1, X31
	353 Move [X31+72], W8
	354 Call Int32.ToString, X0
	355 Move X8, 0x964000
	356 Move X8, [X8+696]
	357 Move X1, X0
	358 Move X2, X31
	359 Move X8, [X8]
	360 Move X0, X8
	361 Call String.Concat, X0, X1
	362 Move X1, X0
	363 Move X0, X20
	364 Move X2, X31
	365 Call StringBuilder.AppendLine, X0, X1
	366 Move X8, [X20]
	367 Move X0, X20
	368 Move X9, [X8+360]
	369 Move X1, [X8+368]
	370 NotImplemented "Instruction BLR not yet implemented."
	371 Move X20, [X31+160]
	372 Move X19, [X31+168]
	373 Move X22, [X31+144]
	374 Move X21, [X31+152]
	375 Move X24, [X31+128]
	376 Move X23, [X31+136]
	377 Move X26, [X31+112]
	378 Move X25, [X31+120]
	379 Move X28, [X31+96]
	380 Move X27, [X31+104]
	381 Move X29, [X31+80]
	382 Move X30, [X31+88]
	383 Add X31, X31, 176
	384 Return X0
	385 Call 0x1C17F20

Method: System.Int32 MakePointerIdForTouch(System.Int32 deviceId, System.Int32 touchId)

Disassembly:
	0x037E6158 BL 0x1C16DFC
	0x037E615C LDR V0, [X31 + 0x20]

ISIL:
	001 Add W0, W1, W0
	002 Return X0

Method: System.Int32 TouchIdFromPointerId(System.Int32 pointerId)

Disassembly:
	0x037E6160 LDR V1, [X31 + 0x1C]
	0x037E6164 ADD X8, X31, 0x110

ISIL:
	001 And W0, W0, 255
	002 Return X0

Method: System.Void ReadDeviceState()

Disassembly:
	0x037E6168 ADD X0, X31, 0x40
	0x037E616C STP S14, S0, [X31 + 0x48]
	0x037E6170 LDR V0, [X31 + 0x18]
	0x037E6174 MOV W1, W22
	0x037E6178 MOV X2, X31
	0x037E617C STP S12, S13, [X31 + 0x40]
	0x037E6180 STP S1, S0, [X31 + 0x50]
	0x037E6184 LDR V0, [X31 + 0x24]
	0x037E6188 BL 0x3C89088
	0x037E618C LDP V0, V1, [X25 + 0x50]
	0x037E6190 LDR W8, [X31 + 0x130]
	0x037E6194 ADD X0, X31, 0x90
	0x037E6198 MOV X1, X31
	0x037E619C STP V0, V1, [X31 + 0x90]
	0x037E61A0 STR W8, [X31 + 0xB0]
	0x037E61A4 BL 0x3C896B8
	0x037E61A8 LDR X8, [X23]
	0x037E61AC MOV X22, X0
	0x037E61B0 LDR W9, [X8 + 0xE0]
	0x037E61B4 CBNZ W9, 0x37E61C0
	0x037E61B8 MOV X0, X8
	0x037E61BC BL 0x1C16DFC
	0x037E61C0 MOV X0, X22
	0x037E61C4 MOV X1, X31
	0x037E61C8 MOV X2, X31
	0x037E61CC BL 0x3C354F8
	0x037E61D0 TBZ X0, 0x0, 0x37E61E4
	0x037E61D4 ADD X0, X31, 0x90
	0x037E61D8 MOV X1, X31
	0x037E61DC BL 0x3C896B0
	0x037E61E0 STR S0, [X31 + 0x24]
	0x037E61E4 LDR X8, [X20 + 0x28]
	0x037E61E8 CBZ X8, 0x37E647C
	0x037E61EC LDP W2, W9, [X8 + 0x18]
	0x037E61F0 ADD W9, W9, 0x1
	0x037E61F4 CMP W2, 0x1
	0x037E61F8 STP W31, W9, [X8 + 0x18]
	0x037E61FC B.LT 0x37E6210
	0x037E6200 LDR X0, [X8 + 0x10]
	0x037E6204 MOV W1, W31
	0x037E6208 MOV X3, X31
	0x037E620C BL 0x339FA34
	0x037E6210 MOV X0, X20
	0x037E6214 BL 0x37EC2FC
	0x037E6218 LDR V0, [X31 + 0x20]
	0x037E621C LDR X3, [X20 + 0x28]
	0x037E6220 LDR V1, [X31 + 0x1C]
	0x037E6224 MOV X1, X0
	0x037E6228 STP S14, S0, [X31 + 0x30]
	0x037E622C LDR V0, [X31 + 0x18]
	0x037E6230 ADD X2, X31, 0x28
	0x037E6234 MOV X0, X20
	0x037E6238 STP S12, S13, [X31 + 0x28]
	0x037E623C STP S1, S0, [X31 + 0x38]
	0x037E6240 BL 0x37EC60C
	0x037E6244 LDR X0, [X20 + 0x28]
	0x037E6248 CBZ X0, 0x37E647C
	0x037E624C ADRP X27, 0x963000
	0x037E6250 ADRP X28, 0x963000
	0x037E6254 LDR X27, [X27 + 0x370]
	0x037E6258 LDR X28, [X28 + 0x358]
	0x037E625C ADD X8, X31, 0x110
	0x037E6260 MOV W22, W31
	0x037E6264 ADD X29, X8, 0x1C
	0x037E6268 ADD X26, X8, 0x38
	0x037E626C LDR W8, [X0 + 0x18]
	0x037E6270 CMP W22, W8
	0x037E6274 B.GE 0x37E5F48
	0x037E6278 LDR X2, [X27]
	0x037E627C ADD X8, X31, 0x110
	0x037E6280 MOV W1, W22
	0x037E6284 BL 0x3155564
	0x037E6288 LDR X24, [X31 + 0x110]
	0x037E628C CBZ X24, 0x37E647C
	0x037E6290 LDR V13, [X31 + 0x118]
	0x037E6294 LDR V12, [X31 + 0x11C]
	0x037E6298 LDR V8, [X31 + 0x120]
	0x037E629C LDR V11, [X31 + 0x124]
	0x037E62A0 LDR V10, [X31 + 0x128]
	0x037E62A4 LDR V14, [X31 + 0x12C]
	0x037E62A8 MOV X0, X24
	0x037E62AC MOV X1, X31
	0x037E62B0 BL 0x3C32ECC
	0x037E62B4 LDRB W8, [X20 + 0x30]
	0x037E62B8 MOV X23, X0
	0x037E62BC CBZ W8, 0x37E6358
	0x037E62C0 CBZ X23, 0x37E647C
	0x037E62C4 MOV X0, X23
	0x037E62C8 MOV X1, X31
	0x037E62CC BL 0x3C356F8
	0x037E62D0 CBZ X0, 0x37E647C
	0x037E62D4 MOV X1, X31
	0x037E62D8 BL 0x3C3DEB4
	0x037E62DC ADRP X8, 0xBF2000
	0x037E62E0 LDRB W8, [X8 + 0xA1F]
	0x037E62E4 MOV V15.16B, V1.16B
	0x037E62E8 MOV V9.16B, V3.16B
	0x037E62EC CBNZ W8, 0x37E630C
	0x037E62F0 MOV X0, X21
	0x037E62F4 STP S2, S0, [X31 + 0x10]
	0x037E62F8 BL 0x1C16CF4
	0x037E62FC LDP S2, S0, [X31 + 0x10]
	0x037E6300 ADRP X8, 0xBF2000
	0x037E6304 MOVZ W9, 0x1
	0x037E6308 STRB W9, [X8 + 0xA1F]
	0x037E630C LDR X8, [X21]
	0x037E6310 MOV V1.16B, V15.16B
	0x037E6314 MOV V3.16B, V9.16B
	0x037E6318 MOV X0, X31
	0x037E631C LDR X8, [X8 + 0xB8]
	0x037E6320 LDP S4, S5, [X8 + 0x48]
	0x037E6324 LDR V6, [X8 + 0x50]
	0x037E6328 BL 0x3C2A9FC
	0x037E632C LDR V3, [X31 + 0x20]
	0x037E6330 FMUL S0, S3, S0
	0x037E6334 LDR V3, [X31 + 0x1C]
	0x037E6338 FMUL S1, S3, S1
	0x037E633C FADD S0, S0, S1
	0x037E6340 LDR V1, [X31 + 0x18]
	0x037E6344 FMUL S1, S1, S2
	0x037E6348 FADD S0, S1, S0
	0x037E634C FCMP S0, 0x0
	0x037E6350 CSET W8, GT
	0x037E6354 B 0x37E635C
	0x037E6358 MOVZ W8, 0x1
	0x037E635C LDR V0, [X31 + 0x24]
	0x037E6360 FCMP S14, S0
	0x037E6364 B.PL 0x37E6470
	0x037E6368 CBZ W8, 0x37E6470
	0x037E636C STP X31, X31, [X31 + 0x80]
	0x037E6370 STR X31, [X31 + 0x70]
	0x037E6374 STR W31, [X31 + 0x78]
	0x037E6378 CBZ X19, 0x37E647C
	0x037E637C LDR V9, [X19 + 0x18]
	0x037E6380 MOV X0, X24
	0x037E6384 MOV X1, X31
	0x037E6388 BL 0x3CDBD10
	0x037E638C LDR V0, [X31 + 0x8]
	0x037E6390 LDR X8, [X31 + 0x70]
	0x037E6394 LDR W9, [X31 + 0x78]
	0x037E6398 STR V0, [X25 + 0x4]
	0x037E639C STR X8, [X31 + 0xF0]
	0x037E63A0 STR W9, [X31 + 0xF8]
	0x037E63A4 LDR W10, [X19 + 0x1C]
	0x037E63A8 LDR X8, [X19 + 0x10]
	0x037E63AC LDR X9, [X28]
	0x037E63B0 ADD W10, W10, 0x1
	0x037E63B4 STR W10, [X19 + 0x1C]
	0x037E63B8 CBZ X8, 0x37E647C
	0x037E63BC LDRSW X10, [X19 + 0x18]
	0x037E63C0 LDR W11, [X8 + 0x18]
	0x037E63C4 SCVTF S0, S9
	0x037E63C8 CMP W10, W11
	0x037E63CC B.CS 0x37E6418
	0x037E63D0 MOVZ W11, 0x50
	0x037E63D4 ADD W9, W10, 0x1
	0x037E63D8 MADD X8, X10, X11, X8
	0x037E63DC STR W9, [X19 + 0x18]
	0x037E63E0 STP X23, X20, [X8 + 0x20]
	0x037E63E4 STP S14, S0, [X8 + 0x30]
	0x037E63E8 STR W0, [X8 + 0x38]
	0x037E63EC LDR V0, [X25 + 0x4]
	0x037E63F0 STP S13, S12, [X8 + 0x4C]
	0x037E63F4 STR S8, [X8 + 0x54]
	0x037E63F8 STUR V0, [X8 + 0x3C]
	0x037E63FC LDR W9, [X31 + 0xF8]
	0x037E6400 LDR X10, [X31 + 0xF0]
	0x037E6404 STP S11, S10, [X8 + 0x64]
	0x037E6408 STR W31, [X8 + 0x6C]
	0x037E640C STR W9, [X8 + 0x60]
	0x037E6410 STR X10, [X8 + 0x58]
	0x037E6414 B 0x37E6470
	0x037E6418 LDR X8, [X9 + 0x20]
	0x037E641C LDR V1, [X25 + 0x4]

ISIL:
	001 Move [X31-64], D10
	002 Move [X31+16], D9
	003 Move [X31+24], D8
	004 Move [X31+32], X30
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0xBFC000
	009 Move W8, [X20+791]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {38}
	015 Move X0, 0x964000
	016 Move X0, [X0+752]
	017 Call 0x1C17CF4
	018 Move X0, 0x964000
	019 Move X0, [X0+760]
	020 Call 0x1C17CF4
	021 Move X0, 0x960000
	022 Move X0, [X0+3992]
	023 Call 0x1C17CF4
	024 Move X0, 0x962000
	025 Move X0, [X0+1040]
	026 Call 0x1C17CF4
	027 Move X0, 0x937000
	028 Move X0, [X0+3664]
	029 Call 0x1C17CF4
	030 Move X0, 0x962000
	031 Move X0, [X0+2400]
	032 Call 0x1C17CF4
	033 Move X0, 0x961000
	034 Move X0, [X0+3416]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X20+791], W8
	038 Move X8, [X19+384]
	039 Compare X8, 0
	040 JumpIfEqual {187}
	041 Move X20, [X8+128]
	042 Compare X20, 0
	043 JumpIfEqual {73}
	044 Move X9, 0x962000
	045 Move X9, [X9+1040]
	046 Move X8, [X20]
	047 Move X10, [X9]
	048 Move W9, [X8+304]
	049 Move W11, [X10+304]
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move X12, [X8+200]
	052 Add X11, X12, X11
	053 NotImplemented "Instruction LDUR not yet implemented."
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move X10, 0x962000
	056 Move X10, [X10+2400]
	057 Move X10, [X10]
	058 Move W11, [X10+304]
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move X12, [X8+200]
	061 Add X11, X12, X11
	062 NotImplemented "Instruction LDUR not yet implemented."
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move X10, 0x961000
	065 Move X10, [X10+3416]
	066 Move X10, [X10]
	067 Move W11, [X10+304]
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move X8, [X8+200]
	070 Add X8, X8, X11
	071 NotImplemented "Instruction LDUR not yet implemented."
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Move X20, 0x937000
	074 Move X20, [X20+3664]
	075 Move X0, [X20]
	076 Move W8, [X0+224]
	077 Compare W8, 0
	078 JumpIfNotEqual {81}
	079 Call 0x1C17DFC
	080 Move X0, [X20]
	081 Move X8, [X0+184]
	082 Move W8, [X8+8]
	083 Move [X19+408], W8
	084 Move X0, X20
	085 Call ExtendedPointerEventData.GetPenPointerId, X0
	086 Move [X19+408], W0
	087 Move X0, [X20+392]
	088 Compare X0, 0
	089 JumpIfEqual {187}
	090 Move X1, X31
	091 Call InputControl.get_magnitude, X0
	092 Move [X19+332], S0
	093 Move X0, [X20+472]
	094 Compare X0, 0
	095 JumpIfEqual {187}
	096 Move X21, 0x964000
	097 Move X21, [X21+760]
	098 Move X1, [X21]
	099 Call InputControl`1<Vector2>.get_value, X0
	100 Move V0, [X0]
	101 Move X8, -47169536
	102 Move V8, [X8+3916]
	103 Move S10, 1
	104 Add S0, S0, S10
	105 Move S9, 0.5
	106 Multiply S0, S0, S8
	107 Multiply S0, S0, S9
	108 Move [X19+344], S0
	109 Move X0, [X20+472]
	110 Compare X0, 0
	111 JumpIfEqual {187}
	112 Move X1, [X21]
	113 Call InputControl`1<Vector2>.get_value, X0
	114 Move V0, [X0+4]
	115 Add S0, S0, S10
	116 Multiply S0, S0, S8
	117 Multiply S0, S0, S9
	118 Move [X19+340], S0
	119 Move X0, [X20+480]
	120 Compare X0, 0
	121 JumpIfEqual {187}
	122 Move X8, 0x960000
	123 Move X8, [X8+3992]
	124 Move X1, [X8]
	125 Call InputControl`1<Single>.get_value, X0
	126 Move V0, [X0]
	127 Multiply S0, S0, S8
	128 Add S0, S0, S0
	129 Move [X19+348], S0
	130 Move X0, X20
	131 Call ExtendedPointerEventData.GetTouchPointerId, X0
	132 Move [X19+408], W0
	133 Move X0, [X20+408]
	134 Compare X0, 0
	135 JumpIfEqual {187}
	136 Move X1, X31
	137 Call InputControl.get_magnitude, X0
	138 Move [X19+332], S0
	139 Move X0, [X20+416]
	140 Compare X0, 0
	141 JumpIfEqual {187}
	142 Move X8, 0x964000
	143 Move X8, [X8+760]
	144 Move X1, [X8]
	145 Call InputControl`1<Vector2>.get_value, X0
	146 Move V0, [X0]
	147 Add X8, X19, 364
	148 Move [X8], D0
	149 Move X0, [X20+376]
	150 Compare X0, 0
	151 JumpIfNotEqual {174}
	152 Move X0, [X20+416]
	153 Call ExtendedPointerEventData.GetTouchPointerId, X0
	154 Move [X19+408], W0
	155 Move X0, [X20+392]
	156 Compare X0, 0
	157 JumpIfEqual {187}
	158 Move X1, X31
	159 Call InputControl.get_magnitude, X0
	160 Move [X19+332], S0
	161 Move X0, [X20+384]
	162 Compare X0, 0
	163 JumpIfEqual {187}
	164 Move X8, 0x964000
	165 Move X8, [X8+760]
	166 Move X1, [X8]
	167 Call InputControl`1<Vector2>.get_value, X0
	168 Move V0, [X0]
	169 Add X8, X19, 364
	170 Move [X8], D0
	171 Move X0, [X20+408]
	172 Compare X0, 0
	173 JumpIfEqual {187}
	174 Move X8, 0x964000
	175 Move X8, [X8+752]
	176 Move X1, [X8]
	177 Call InputControl`1<Int32>.ReadValue, X0
	178 Move [X19+252], W0
	179 Move X20, [X31+48]
	180 Move X19, [X31+56]
	181 Move X30, [X31+32]
	182 Move X21, [X31+40]
	183 Move D9, [X31+16]
	184 Move D8, [X31+24]
	185 Move V10, [X31+64]
	186 Return 
	187 Call 0x1C17F20

Method: System.Int32 GetPenPointerId(UnityEngine.InputSystem.Pen pen)

Disassembly:
	0x037E6420 LDR X9, [X31 + 0xF0]
	0x037E6424 ADD X1, X31, 0x110
	0x037E6428 LDR X8, [X8 + 0xC0]
	0x037E642C LDR X2, [X8 + 0x70]
	0x037E6430 LDR W8, [X31 + 0xF8]
	0x037E6434 STR W0, [X31 + 0x128]
	0x037E6438 MOV X0, X19
	0x037E643C STP X23, X20, [X31 + 0x110]
	0x037E6440 STR S14, [X31 + 0x120]
	0x037E6444 STR S0, [X31 + 0x124]
	0x037E6448 STR V1, [X29]
	0x037E644C STR S13, [X31 + 0x13C]
	0x037E6450 STR S12, [X31 + 0x140]
	0x037E6454 STR S8, [X31 + 0x144]
	0x037E6458 STR W8, [X26 + 0x8]
	0x037E645C STR X9, [X26]
	0x037E6460 STR S11, [X31 + 0x154]
	0x037E6464 STR S10, [X31 + 0x158]
	0x037E6468 STR W31, [X31 + 0x15C]
	0x037E646C BL 0x3035DFC
	0x037E6470 LDR X0, [X20 + 0x28]
	0x037E6474 ADD W22, W22, 0x1
	0x037E6478 CBNZ X0, 0x37E626C
	0x037E647C BL 0x1C16F20
	0x037E6480 SUB X31, X31, 0x120
	0x037E6484 STR D14, [X31 + 0xA0]
	0x037E6488 STP D13, D12, [X31 + 0xB0]
	0x037E648C STP D11, D10, [X31 + 0xC0]
	0x037E6490 STP D9, D8, [X31 + 0xD0]
	0x037E6494 STP X29, X30, [X31 + 0xE0]
	0x037E6498 STP X24, X23, [X31 + 0xF0]
	0x037E649C STP X22, X21, [X31 + 0x100]
	0x037E64A0 STP X20, X19, [X31 + 0x110]
	0x037E64A4 ADRP X21, 0xBFB000
	0x037E64A8 LDRB W8, [X21 + 0x31E]
	0x037E64AC MOV X20, X1
	0x037E64B0 MOV X19, X0
	0x037E64B4 TBNZ X8, 0x0, 0x37E64D8
	0x037E64B8 ADRP X0, 0x963000
	0x037E64BC LDR X0, [X0 + 0x378]
	0x037E64C0 BL 0x1C16CF4
	0x037E64C4 ADRP X0, 0x90D000
	0x037E64C8 LDR X0, [X0 + 0x598]
	0x037E64CC BL 0x1C16CF4
	0x037E64D0 MOVZ W8, 0x1
	0x037E64D4 STRB W8, [X21 + 0x31E]
	0x037E64D8 MOVI V0.2D, 0x0
	0x037E64DC STP V0, V0, [X31 + 0x80]
	0x037E64E0 STP V0, V0, [X31 + 0x60]
	0x037E64E4 STR V0, [X31 + 0x5]
	0x037E64E8 LDR X21, [X20 + 0x1D0]
	0x037E64EC CBZ X21, 0x37E684C
	0x037E64F0 LDR W24, [X21 + 0x194]
	0x037E64F4 ADD X23, X21, 0x104
	0x037E64F8 CMP W24, 0x3
	0x037E64FC B.EQ 0x37E6568
	0x037E6500 CMP W24, 0x1
	0x037E6504 B.NE 0x37E654C
	0x037E6508 MOV X0, X31
	0x037E650C BL 0x3C246D4
	0x037E6510 CMP W0, 0x1
	0x037E6514 B.NE 0x37E654C
	0x037E6518 LDR W8, [X19 + 0xD0]
	0x037E651C CBZ W8, 0x37E667C
	0x037E6520 MOV X0, X31
	0x037E6524 BL 0x3C0E0B0
	0x037E6528 MOV W22, W0
	0x037E652C MOV X0, X31
	0x037E6530 BL 0x3C0E0D8
	0x037E6534 FMOV S0, W22
	0x037E6538 UNIMPLEMENTED
	0x037E653C UNIMPLEMENTED
	0x037E6540 MOVI V1.2S, 0x3F, 0x18
	0x00000000 INVALID
	0x037E6548 B 0x37E6680
	0x037E654C LDR V0, [X20 + 0x1D8]
	0x037E6550 LDR V1, [X23]
	0x037E6554 FSUB V0.2S, V0.2S, V1.2S
	0x037E6558 STR D0, [X23 + 0x8]
	0x037E655C LDR V0, [X20 + 0x1D8]
	0x037E6560 STR D0, [X23]
	0x037E6564 B 0x37E6688
	0x037E6568 ADRP X8, 0x90D000
	0x037E656C LDR V9, [X20 + 0x1E8]
	0x037E6570 LDR V8, [X20 + 0x1EC]
	0x037E6574 LDR V10, [X20 + 0x1F0]
	0x037E6578 LDR V11, [X20 + 0x1F4]
	0x037E657C LDR X8, [X8 + 0x598]
	0x037E6580 LDR V14, [X20 + 0x1F8]
	0x037E6584 LDR V13, [X20 + 0x1FC]
	0x037E6588 LDR V12, [X20 + 0x200]
	0x037E658C LDR X0, [X8]
	0x037E6590 LDR X22, [X19 + 0x68]
	0x037E6594 LDR W8, [X0 + 0xE0]
	0x037E6598 CBNZ W8, 0x37E65A0
	0x037E659C BL 0x1C16DFC
	0x037E65A0 MOV X0, X22
	0x037E65A4 MOV X1, X31
	0x037E65A8 MOV X2, X31
	0x037E65AC BL 0x3C354F8
	0x037E65B0 TBZ X0, 0x0, 0x37E665C
	0x037E65B4 LDR X0, [X19 + 0x68]
	0x037E65B8 CBZ X0, 0x37E684C
	0x037E65BC MOV V0.16B, V9.16B
	0x037E65C0 MOV V1.16B, V8.16B
	0x037E65C4 MOV V2.16B, V10.16B
	0x037E65C8 MOV X1, X31
	0x037E65CC BL 0x3C3DE4C
	0x037E65D0 LDR X0, [X19 + 0x68]
	0x037E65D4 CBZ X0, 0x37E684C
	0x037E65D8 MOV X1, X31
	0x037E65DC MOV V9.16B, V0.16B
	0x037E65E0 MOV V8.16B, V1.16B
	0x037E65E4 MOV V10.16B, V2.16B
	0x037E65E8 BL 0x3C3DEB4
	0x037E65EC FMUL S4, S11, S3
	0x037E65F0 FMUL S5, S12, S0
	0x037E65F4 FMUL S16, S14, S3
	0x037E65F8 FMUL S17, S12, S1
	0x037E65FC FMUL S19, S13, S0
	0x037E6600 FMUL S20, S14, S0
	0x037E6604 FMUL S0, S11, S0
	0x037E6608 FMUL S22, S13, S3
	0x037E660C FMUL S3, S12, S3
	0x037E6610 FMUL S23, S12, S2
	0x037E6614 FMUL S6, S13, S1
	0x037E6618 FMUL S18, S11, S2
	0x037E661C FMUL S21, S11, S1
	0x037E6620 FMUL S1, S14, S1
	0x037E6624 FADD S4, S4, S5
	0x037E6628 FADD S5, S16, S17
	0x037E662C FADD S16, S22, S23
	0x037E6630 FSUB S0, S3, S0
	0x037E6634 FMUL S7, S14, S2
	0x037E6638 FMUL S2, S13, S2
	0x037E663C FADD S3, S6, S4
	0x037E6640 FADD S4, S18, S5
	0x037E6644 FADD S5, S20, S16
	0x037E6648 FSUB S0, S0, S1
	0x037E664C FSUB S11, S3, S7
	0x037E6650 FSUB S14, S4, S19
	0x037E6654 FSUB S13, S5, S21
	0x037E6658 FSUB S12, S0, S2
	0x037E665C STR S11, [X21 + 0x1A8]
	0x037E6660 STR S14, [X21 + 0x1AC]
	0x037E6664 STR S13, [X21 + 0x1B0]
	0x037E6668 STR S12, [X21 + 0x1B4]
	0x037E666C STR S9, [X21 + 0x19C]

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+80], X30
	003 Move [X31+88], X25
	004 Move [X31+96], X24
	005 Move [X31+104], X23
	006 Move [X31+112], X22
	007 Move [X31+120], X21
	008 Move [X31+128], X20
	009 Move [X31+136], X19
	010 Move X21, 0xBFC000
	011 Move X20, 0x936000
	012 Move W8, [X21+792]
	013 Move X20, [X20+624]
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {42}
	019 Move X0, 0x936000
	020 Move X0, [X0+3856]
	021 Call 0x1C17CF4
	022 Move X0, 0x936000
	023 Move X0, [X0+3864]
	024 Call 0x1C17CF4
	025 Move X0, 0x936000
	026 Move X0, [X0+3872]
	027 Call 0x1C17CF4
	028 Move X0, 0x936000
	029 Move X0, [X0+624]
	030 Call 0x1C17CF4
	031 Move X0, 0x962000
	032 Move X0, [X0+1040]
	033 Call 0x1C17CF4
	034 Move X0, 0x937000
	035 Move X0, [X0+3664]
	036 Call 0x1C17CF4
	037 Move X0, 0x936000
	038 Move X0, [X0+3888]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X21+792], W8
	042 Move X0, [X20]
	043 Move [X31+48], X31
	044 Move [X31+56], X31
	045 Move [X31+64], X31
	046 Move X22, 0x936000
	047 Move W8, [X0+224]
	048 Move X22, [X22+3888]
	049 Compare W8, 0
	050 JumpIfNotEqual {52}
	051 Call 0x1C17DFC
	052 Move X23, 0x936000
	053 Move X24, 0x936000
	054 Move X25, 0x962000
	055 Move X21, 0x937000
	056 Move X20, 0x936000
	057 Move X23, [X23+3864]
	058 Move X24, [X24+3872]
	059 Move X25, [X25+1040]
	060 Move X21, [X21+3664]
	061 Move X20, [X20+3856]
	062 Move X0, X31
	063 Call InputSystem.get_devices
	064 Move X9, [X22]
	065 Move [X31+32], X0
	066 Move [X31+40], X1
	067 Add X8, X31, 8
	068 Add X0, X31, 32
	069 Move X1, X9
	070 Call ReadOnlyArray`1<Object>.GetEnumerator, X0
	071 NotImplemented "Instruction LDUR not yet implemented."
	072 Move X8, [X31+24]
	073 Move W22, W31
	074 Move [X31+3], V0
	075 Move [X31+64], X8
	076 Move X1, [X23]
	077 Add X0, X31, 48
	078 Call Enumerator<Object>.MoveNext, X0
	079 Move TEMP, X0
	080 And TEMP, TEMP, 1
	081 Compare TEMP, 1
	082 JumpIfNotEqual {99}
	083 Move X1, [X24]
	084 Add X0, X31, 48
	085 Call Enumerator<Object>.get_Current, X0
	086 Compare X0, 0
	087 JumpIfEqual {76}
	088 Move X9, [X0]
	089 Move X8, [X25]
	090 Move W11, [X9+304]
	091 Move W10, [X8+304]
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Move X9, [X9+200]
	094 Add X9, X9, X10
	095 NotImplemented "Instruction LDUR not yet implemented."
	096 NotImplemented "Instruction CMP not yet implemented."
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Add W22, W22, 1
	099 Move X1, [X20]
	100 Add X0, X31, 48
	101 Call Enumerator<Object>.Dispose, X0
	102 Move X0, [X21]
	103 Move W8, [X0+224]
	104 Compare W8, 0
	105 JumpIfNotEqual {108}
	106 Call 0x1C17DFC
	107 Move X0, [X21]
	108 Move X8, [X0+184]
	109 Move W19, [X8+20]
	110 Move W0, W19
	111 Move X20, [X31+128]
	112 Move X19, [X31+136]
	113 Move X22, [X31+112]
	114 Move X21, [X31+120]
	115 Move X24, [X31+96]
	116 Move X23, [X31+104]
	117 Move X30, [X31+80]
	118 Move X25, [X31+88]
	119 Add X31, X31, 144
	120 Return X0
	121 Move X0, [X21]
	122 Move W8, [X0+224]
	123 Compare W8, 0
	124 JumpIfNotEqual {127}
	125 Call 0x1C17DFC
	126 Move X0, [X21]
	127 Move X8, [X0+184]
	128 Move X1, [X20]
	129 Add X0, X31, 48
	130 Move W8, [X8+20]
	131 Move W9, [X8+24]
	132 Subtract W9, W9, 1
	133 NotImplemented "Instruction CMP not yet implemented."
	134 NotImplemented "Instruction CSEL not yet implemented."
	135 Add W19, W9, W8
	136 Call Enumerator<Object>.Dispose, X0
	137 Move X22, X20
	138 Move X19, X0
	139 NotImplemented "Instruction CMP not yet implemented."
	140 Move X0, X19
	141 Call 0x3EB2AD0
	142 Move X20, [X0]
	143 Call 0x3EB2AE0
	144 Move X1, [X22]
	145 Add X0, X31, 48
	146 Call Enumerator<Object>.Dispose, X0
	147 Compare X20, 0
	148 JumpIfEqual {102}
	149 Move X0, X20
	150 Call 0x1C17F18
	151 Move X20, X31
	152 Move X19, X0
	153 Move X1, [X22]
	154 Add X0, X31, 48
	155 Call Enumerator<Object>.Dispose, X0
	156 Compare X20, 0
	157 JumpIfNotEqual {160}
	158 Move X0, X19
	159 Call 0x1D2D690
	160 Move X0, X20
	161 Call 0x1C17F18
	162 Call 0x1991590

Method: System.Int32 GetTouchPointerId(UnityEngine.InputSystem.Controls.TouchControl touchControl)

Disassembly:
	0x037E6670 STR S8, [X21 + 0x1A0]
	0x037E6674 STR S10, [X21 + 0x1A4]
	0x037E6678 B 0x37E6688
	0x037E667C FMOV V0.2S, 0x0
	0x037E6680 STR D0, [X23]
	0x037E6684 STR X31, [X23 + 0x8]
	0x037E6688 MOV X22, X21
	0x037E668C LDR X8, [X22], #0x50
	0x037E6690 MOV X0, X21
	0x037E6694 LDP X9, X1, [X8 + 0x178]
	0x037E6698 BLR X9
	0x037E669C ADD X8, X31, 0x0
	0x037E66A0 MOV X0, X19
	0x037E66A4 MOV X1, X21
	0x037E66A8 BL 0x37E5BA8
	0x037E66AC ADD X1, X31, 0x0
	0x037E66B0 MOVZ W2, 0x50
	0x037E66B4 MOV X0, X22
	0x037E66B8 BL 0x3EB1AC0
	0x037E66BC CMP W24, 0x3
	0x037E66C0 B.NE 0x37E66FC
	0x037E66C4 ADD X0, X31, 0x50
	0x037E66C8 MOVZ W2, 0x50
	0x037E66CC MOV X1, X22
	0x037E66D0 BL 0x3EB1AC0
	0x037E66D4 ADD X0, X31, 0x50
	0x037E66D8 MOV X1, X31
	0x037E66DC BL 0x3E5AC40
	0x037E66E0 TBZ X0, 0x0, 0x37E66FC
	0x037E66E4 LDUR V0, [X21 + 0x94]
	0x037E66E8 LDR V1, [X23]
	0x037E66EC ADD X8, X21, 0x104
	0x037E66F0 FSUB V1.2S, V0.2S, V1.2S
	0x037E66F4 STR D1, [X23 + 0x8]
	0x037E66F8 STR D0, [X8]
	0x037E66FC ADD X22, X20, 0x8
	0x037E6700 MOV X0, X22
	0x037E6704 MOV X1, X21
	0x037E6708 STR W31, [X21 + 0x148]
	0x037E670C BL 0x37E6850
	0x037E6710 MOV X0, X19
	0x037E6714 MOV X1, X20
	0x037E6718 MOV X2, X21
	0x037E671C BL 0x37E68FC
	0x037E6720 LDRB W8, [X20]
	0x037E6724 CBZ W8, 0x37E67E0
	0x037E6728 ADRP X23, 0x963000
	0x037E672C LDR X23, [X23 + 0x378]
	0x037E6730 MOV X0, X19
	0x037E6734 MOV X1, X22
	0x037E6738 MOV X2, X21
	0x037E673C BL 0x37E6964
	0x037E6740 MOV X0, X19
	0x037E6744 MOV X1, X22
	0x037E6748 MOV X2, X21
	0x037E674C BL 0x37E7194
	0x037E6750 LDR X0, [X23]
	0x037E6754 LDR W8, [X0 + 0xE0]
	0x037E6758 CBNZ W8, 0x37E6760
	0x037E675C BL 0x1C16DFC
	0x037E6760 MOV X0, X20
	0x037E6764 MOV X1, X21

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xBFC000
	005 Move W8, [X20+793]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {22}
	011 Move X0, 0x937000
	012 Move X0, [X0+3664]
	013 Call 0x1C17CF4
	014 Move X0, 0x964000
	015 Move X0, [X0+768]
	016 Call 0x1C17CF4
	017 Move X0, 0x961000
	018 Move X0, [X0+3416]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+793], W8
	022 Compare X19, 0
	023 JumpIfEqual {69}
	024 Move X0, [X19+120]
	025 Compare X0, 0
	026 JumpIfEqual {69}
	027 Move X9, 0x961000
	028 Move X9, [X9+3416]
	029 Move X8, [X0]
	030 Move X1, [X9]
	031 Move W10, [X8+304]
	032 Move W9, [X1+304]
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X8, [X8+200]
	035 Add X8, X8, X9
	036 NotImplemented "Instruction LDUR not yet implemented."
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X9, 0x964000
	039 Move X9, [X9+768]
	040 Move X8, [X0+424]
	041 Move X1, [X0+432]
	042 Move X20, 0x937000
	043 Move X2, X19
	044 Move X3, [X9]
	045 Move X20, [X20+3664]
	046 Move X0, X8
	047 Call 0x223D9C8, X0, X1
	048 Move X8, [X20]
	049 Move W19, W0
	050 Move W9, [X8+224]
	051 Compare W9, 0
	052 JumpIfNotEqual {56}
	053 Move X0, X8
	054 Call 0x1C17DFC
	055 Move X8, [X20]
	056 Move X8, [X8+184]
	057 Move W8, [X8+12]
	058 Move W9, [X8+16]
	059 Subtract W9, W9, 1
	060 NotImplemented "Instruction CMP not yet implemented."
	061 NotImplemented "Instruction CSEL not yet implemented."
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move X20, [X31+16]
	064 Move X19, [X31+24]
	065 NotImplemented "Instruction CSEL not yet implemented."
	066 Add W0, W9, W8
	067 Move X30, [X31+32]
	068 Return X0
	069 Call 0x1C17F20
	070 Call 0x1C181E0

