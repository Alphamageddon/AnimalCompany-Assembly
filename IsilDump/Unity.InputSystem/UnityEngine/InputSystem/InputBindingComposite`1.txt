Type: UnityEngine.InputSystem.InputBindingComposite`1

Method: System.Type get_valueType()

Disassembly:
	0x02DFA534 MOV X1, X21
	0x02DFA538 MOV X2, X20
	0x02DFA53C MOV X3, X31
	0x02DFA540 BL 0x3227BD4
	0x02DFA544 MOV X20, X0
	0x02DFA548 ADRP X0, 0x1301000
	0x02DFA54C LDR X0, [X0 + 0x760]
	0x02DFA550 BL 0x1C16D08
	0x02DFA554 BL 0x1C16F10
	0x02DFA558 MOV X21, X0
	0x02DFA55C ADRP X0, 0x1304000
	0x02DFA560 LDR X0, [X0 + 0x130]
	0x02DFA564 BL 0x1C16D08
	0x02DFA568 MOV X1, X0
	0x02DFA56C MOV X0, X21
	0x02DFA570 MOV X2, X20
	0x02DFA574 MOV X3, X31
	0x02DFA578 BL 0x3311888
	0x02DFA57C MOV X0, X21
	0x02DFA580 MOV X1, X19
	0x02DFA584 BL 0x1C16DEC
	0x02DFA588 STR X30, [X31 - 0x30]!
	0x02DFA58C STP X22, X21, [X31 + 0x10]
	0x02DFA590 STP X20, X19, [X31 + 0x20]
	0x02DFA594 MOV W20, W1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x15E2000
	006 Move X20, 0x12FA000
	007 Move W8, [X21+2513]
	008 Move X20, [X20+1728]
	009 Move X19, X1
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x12FA000
	015 Move X0, [X0+1728]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2513], W8
	019 Move X8, [X19+32]
	020 Move X0, [X20]
	021 Move X8, [X8+192]
	022 Move W9, [X0+224]
	023 Move X19, [X8]
	024 Compare W9, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X0, X19
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X1, X31
	031 Move X30, [X31+32]
	032 Move X21, [X31+40]
	033 Call Type.GetTypeFromHandle, X0
	034 Return X0

Method: System.Int32 get_valueSizeInBytes()

Disassembly:
	0x02DFA598 MOV X19, X0
	0x02DFA59C TBNZ X1, 0x1F, 0x2DFA5E0

ISIL:
	001 Move W0, 4
	002 Return X0

Method: TValue ReadValue(ref UnityEngine.InputSystem.InputBindingCompositeContext context)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Void ReadValue(ref UnityEngine.InputSystem.InputBindingCompositeContext context, System.Void* buffer, System.Int32 bufferSize)

Disassembly:
	0x02DFA5A0 LDR W8, [X19]
	0x02DFA5A4 CMP W8, W20
	0x02DFA5A8 B.LE 0x2DFA5E0
	0x02DFA5AC LDR X0, [X3 + 0x20]
	0x02DFA5B0 MOV X21, X2
	0x02DFA5B4 LDRB W8, [X0 + 0x135]
	0x02DFA5B8 TBNZ X8, 0x0, 0x2DFA5C0
	0x02DFA5BC BL 0x1C5C684
	0x02DFA5C0 MOV X0, X21
	0x02DFA5C4 BL 0x2DFBBE4
	0x02DFA5C8 LDR X8, [X19 + 0x8]
	0x02DFA5CC LDP X22, X21, [X31 + 0x10]
	0x02DFA5D0 STR X0, [X8, W20, UXTW]
	0x02DFA5D4 LDP X20, X19, [X31 + 0x20]
	0x02DFA5D8 LDR X30, [X31], #0x30
	0x02DFA5DC RET
	0x02DFA5E0 STR W20, [X31 + 0xC]
	0x02DFA5E4 ADRP X20, 0x12F9000
	0x02DFA5E8 LDR X20, [X20 + 0x758]
	0x02DFA5EC MOV X22, X19
	0x02DFA5F0 MOV X19, X3
	0x02DFA5F4 MOV X0, X20
	0x02DFA5F8 BL 0x1C16D08
	0x02DFA5FC ADD X1, X31, 0xC
	0x02DFA600 BL 0x1C16E04
	0x02DFA604 LDR W8, [X22]
	0x02DFA608 MOV X21, X0
	0x02DFA60C MOV X0, X20
	0x02DFA610 STR W8, [X31 + 0x8]
	0x02DFA614 BL 0x1C16D08
	0x02DFA618 ADD X1, X31, 0x8
	0x02DFA61C BL 0x1C16E04
	0x02DFA620 MOV X20, X0
	0x02DFA624 ADRP X0, 0x1324000
	0x02DFA628 LDR X0, [X0 + 0xF80]
	0x02DFA62C BL 0x1C16D08
	0x02DFA630 MOV X1, X21
	0x02DFA634 MOV X2, X20
	0x02DFA638 MOV X3, X31
	0x02DFA63C BL 0x3227BD4
	0x02DFA640 MOV X20, X0
	0x02DFA644 ADRP X0, 0x1301000
	0x02DFA648 LDR X0, [X0 + 0x760]
	0x02DFA64C BL 0x1C16D08
	0x02DFA650 BL 0x1C16F10
	0x02DFA654 MOV X21, X0
	0x02DFA658 ADRP X0, 0x1304000
	0x02DFA65C LDR X0, [X0 + 0x130]
	0x02DFA660 BL 0x1C16D08
	0x02DFA664 MOV X1, X0
	0x02DFA668 MOV X0, X21
	0x02DFA66C MOV X2, X20
	0x02DFA670 MOV X3, X31
	0x02DFA674 BL 0x3311888
	0x02DFA678 MOV X0, X21
	0x02DFA67C MOV X1, X19
	0x02DFA680 BL 0x1C16DEC
	0x02DFA684 STR X30, [X31 - 0x20]!
	0x02DFA688 STP X20, X19, [X31 + 0x10]
	0x02DFA68C STR W1, [X0 + 0x18]
	0x02DFA690 STP X31, X31, [X0 + 0x8]
	0x02DFA694 STR W31, [X0]
	0x02DFA698 CBZ W2, 0x2DFA6D0
	0x02DFA69C MOV X20, X0
	0x02DFA6A0 LDR X0, [X3 + 0x20]
	0x02DFA6A4 MOV W19, W2
	0x02DFA6A8 LDRB W8, [X0 + 0x135]
	0x02DFA6AC TBNZ X8, 0x0, 0x2DFA6B4
	0x02DFA6B0 BL 0x1C5C684
	0x02DFA6B4 LDR X8, [X0 + 0xC0]
	0x02DFA6B8 MOV X0, X20
	0x02DFA6BC MOV W1, W19
	0x02DFA6C0 LDP X20, X19, [X31 + 0x10]
	0x02DFA6C4 LDR X2, [X8 + 0x28]
	0x02DFA6C8 LDR X30, [X31], #0x20
	0x02DFA6CC B 0x2DFA384
	0x02DFA6D0 LDP X20, X19, [X31 + 0x10]
	0x02DFA6D4 LDR X30, [X31], #0x20
	0x02DFA6D8 RET
	0x02DFA6DC STR X30, [X31 - 0x40]!

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+32], X22
	004 Move [X31+40], X21
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move [X31+28], W31
	008 Compare X2, 0
	009 JumpIfEqual {29}
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Move X8, [X0]
	012 Move X19, X2
	013 Move X9, [X8+472]
	014 Move X2, [X8+480]
	015 NotImplemented "Instruction BLR not yet implemented."
	016 Move [X31+28], W0
	017 Add X1, X31, 28
	018 Move W2, 4
	019 Move X0, X19
	020 Move X3, X31
	021 Call UnsafeUtility.MemCpy, X0, X1, X2
	022 Move X20, [X31+48]
	023 Move X19, [X31+56]
	024 Move X22, [X31+32]
	025 Move X21, [X31+40]
	026 Move X30, [X31+16]
	027 Add X31, X31, 64
	028 Return 
	029 Move X0, 0x12FF000
	030 Move X0, [X0+1320]
	031 Move X19, X4
	032 Call 0x1C17D08
	033 Call 0x1C17F10
	034 Move X20, X0
	035 Move X0, 0x1325000
	036 Move X0, [X0+3912]
	037 Call 0x1C17D08
	038 Move X1, X0
	039 Move X0, X20
	040 Move X2, X31
	041 Call ArgumentNullException..ctor, X0, X1
	042 Move X0, X20
	043 Move X1, X19
	044 Call 0x1C17DEC
	045 Move W8, 4
	046 Move [X31+24], W8
	047 Move X19, 0x12FA000
	048 Move X19, [X19+1880]
	049 Move X20, X4
	050 Move W22, W3
	051 Move X0, X19
	052 Call 0x1C17D08
	053 Add X1, X31, 24
	054 Call 0x1C17E04
	055 Move X21, X0
	056 Move X0, X19
	057 Move [X31+12], W22
	058 Call 0x1C17D08
	059 Add X1, X31, 12
	060 Call 0x1C17E04
	061 Move X19, X0
	062 Move X0, 0x1325000
	063 Move X0, [X0+3920]
	064 Call 0x1C17D08
	065 Move X1, X21
	066 Move X2, X19
	067 Move X3, X31
	068 Call String.Format, X0, X1, X2
	069 Move X19, X0
	070 Move X0, 0x1302000
	071 Move X0, [X0+1400]
	072 Call 0x1C17D08
	073 Call 0x1C17F10
	074 Move X21, X0
	075 Move X0, 0x1325000
	076 Move X0, [X0+3928]
	077 Call 0x1C17D08
	078 Move X2, X0
	079 Move X0, X21
	080 Move X1, X19
	081 Move X3, X31
	082 Call ArgumentException..ctor, X0, X1, X2
	083 Move X0, X21
	084 Move X1, X20
	085 Call 0x1C17DEC

Method: System.Object ReadValueAsObject(ref UnityEngine.InputSystem.InputBindingCompositeContext context)

Disassembly:
	0x02DFA6E0 STP X24, X23, [X31 + 0x10]
	0x02DFA6E4 STP X22, X21, [X31 + 0x20]
	0x02DFA6E8 STP X20, X19, [X31 + 0x30]
	0x02DFA6EC ADRP X23, 0x15E1000
	0x02DFA6F0 LDRB W8, [X23 + 0x9D9]
	0x02DFA6F4 MOV X20, X3
	0x02DFA6F8 MOV W22, W2
	0x02DFA6FC MOV X19, X1
	0x02DFA700 MOV X21, X0
	0x02DFA704 TBNZ X8, 0x0, 0x2DFA728
	0x02DFA708 ADRP X0, 0x12F9000
	0x02DFA70C LDR X0, [X0 + 0xE00]
	0x02DFA710 BL 0x1C16CF4
	0x02DFA714 ADRP X0, 0x12F9000
	0x02DFA718 LDR X0, [X0 + 0xE18]
	0x02DFA71C BL 0x1C16CF4
	0x02DFA720 MOVZ W8, 0x1
	0x02DFA724 STRB W8, [X23 + 0x9D9]
	0x02DFA728 LDR X0, [X20 + 0x20]
	0x02DFA72C LDRB W8, [X0 + 0x135]
	0x02DFA730 TBNZ X8, 0x0, 0x2DFA738

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+16], X30
	003 Move [X31+24], X19
	004 Move [X31+12], W31
	005 Compare X0, 0
	006 JumpIfEqual {25}
	007 Move X8, [X0]
	008 Move X19, X2
	009 Add X2, X31, 12
	010 Move W3, 4
	011 Move X9, [X8+408]
	012 Move X4, [X8+416]
	013 NotImplemented "Instruction BLR not yet implemented."
	014 Move W8, [X31+12]
	015 Add X1, X31, 8
	016 Move [X31+8], W8
	017 Move X8, [X19+32]
	018 Move X8, [X8+192]
	019 Move X0, [X8+32]
	020 Call 0x1C17E04
	021 Move X30, [X31+16]
	022 Move X19, [X31+24]
	023 Add X31, X31, 32
	024 Return X0
	025 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x02DFA734 BL 0x1C5C684
	0x02DFA738 STR W22, [X21 + 0x18]

ISIL:
	001 Move X1, X31
	002 Call InputBindingComposite..ctor, X0
	003 Return 

