Type: UnityEngine.InputSystem.Composites.Vector3Composite

Method: UnityEngine.Vector3 ReadValue(ref UnityEngine.InputSystem.InputBindingCompositeContext context)

Disassembly:
	0x0376BF60 STR V0, [X31]
	0x0376BF64 BL 0x1C16E04
	0x0376BF68 MOV X1, X31
	0x0376BF6C BL 0x33D5650
	0x0376BF70 LDP X20, X19, [X31 + 0x20]
	0x0376BF74 LDR X30, [X31 + 0x10]
	0x0376BF78 ADD X31, X31, 0x30
	0x0376BF7C RET
	0x0376BF80 LDRB W8, [X19 + 0x8]
	0x0376BF84 LDR X0, [X19]
	0x0376BF88 TBNZ X8, 0x0, 0x376BF98
	0x0376BF8C ADRP X8, 0x9DB000
	0x0376BF90 LDR X8, [X8 + 0x7A8]
	0x0376BF94 B 0x376BFA0
	0x0376BF98 ADRP X8, 0x9DB000
	0x0376BF9C LDR X8, [X8 + 0x7B0]
	0x0376BFA0 LDR X1, [X8]
	0x0376BFA4 LDP X20, X19, [X31 + 0x20]
	0x0376BFA8 LDR X30, [X31 + 0x10]
	0x0376BFAC MOV X2, X31
	0x0376BFB0 ADD X31, X31, 0x30
	0x0376BFB4 B 0x321B938
	0x0376BFB8 STP X30, X21, [X31 - 0x20]!
	0x0376BFBC STP X20, X19, [X31 + 0x10]
	0x0376BFC0 MOV X20, X0
	0x0376BFC4 LDR X0, [X0]
	0x0376BFC8 MOV X19, X2
	0x0376BFCC MOV X2, X31
	0x0376BFD0 MOV X21, X1
	0x0376BFD4 BL 0x3226C14
	0x0376BFD8 TBZ X0, 0x0, 0x376C014
	0x0376BFDC LDR W8, [X20 + 0x8]
	0x0376BFE0 CMP W8, W19
	0x0376BFE4 B.NE 0x376C014
	0x0376BFE8 LDR X0, [X20]
	0x0376BFEC MOV X1, X21
	0x0376BFF0 MOV X2, X31
	0x0376BFF4 BL 0x3226C14
	0x0376BFF8 TBZ X0, 0x0, 0x376C014
	0x0376BFFC LDRB W8, [X20 + 0x8]
	0x0376C000 AND W9, W19, 0x1
	0x0376C004 ANDS W31, W8, 0x1
	0x0376C008 CSET W8, EQ
	0x0376C00C EOR W0, W9, W8, 0x0
	0x0376C010 B 0x376C018
	0x0376C014 MOV W0, W31
	0x0376C018 LDP X20, X19, [X31 + 0x10]
	0x0376C01C LDP X30, X21, [X31], #0x20
	0x0376C020 RET
	0x0376C024 STP X30, X21, [X31 - 0x20]!
	0x0376C028 STP X20, X19, [X31 + 0x10]
	0x0376C02C ADRP X21, 0xC74000
	0x0376C030 LDRB W8, [X21 + 0xEB6]
	0x0376C034 MOV X20, X1
	0x0376C038 MOV X19, X0
	0x0376C03C TBNZ X8, 0x0, 0x376C054
	0x0376C040 ADRP X0, 0x9DA000
	0x0376C044 LDR X0, [X0 + 0x7A0]
	0x0376C048 BL 0x1C16CF4
	0x0376C04C MOVZ W8, 0x1
	0x0376C050 STRB W8, [X21 + 0xEB6]
	0x0376C054 CBZ X20, 0x376C070
	0x0376C058 ADRP X8, 0x9DA000
	0x0376C05C LDR X8, [X8 + 0x7A0]
	0x0376C060 LDR X9, [X20]
	0x0376C064 LDR X8, [X8]
	0x0376C068 CMP X9, X8
	0x0376C06C B.EQ 0x376C080
	0x0376C070 LDP X20, X19, [X31 + 0x10]
	0x0376C074 MOV W0, W31
	0x0376C078 LDP X30, X21, [X31], #0x20
	0x0376C07C RET
	0x0376C080 MOV X0, X20
	0x0376C084 BL 0x1C16E08
	0x0376C088 LDP X1, X2, [X0]
	0x0376C08C MOV X0, X19
	0x0376C090 LDP X20, X19, [X31 + 0x10]
	0x0376C094 LDP X30, X21, [X31], #0x20
	0x0376C098 B 0x376BFB8
	0x0376C09C SUB X31, X31, 0x40
	0x0376C0A0 STP X30, X23, [X31 + 0x10]
	0x0376C0A4 STP X22, X21, [X31 + 0x20]
	0x0376C0A8 STP X20, X19, [X31 + 0x30]
	0x0376C0AC ADRP X20, 0xC74000
	0x0376C0B0 LDRB W8, [X20 + 0xEB7]
	0x0376C0B4 MOV X19, X0
	0x0376C0B8 TBNZ X8, 0x0, 0x376C0D0
	0x0376C0BC ADRP X0, 0x987000
	0x0376C0C0 LDR X0, [X0 + 0xB58]
	0x0376C0C4 BL 0x1C16CF4
	0x0376C0C8 MOVZ W8, 0x1
	0x0376C0CC STRB W8, [X20 + 0xEB7]
	0x0376C0D0 LDR X0, [X19]
	0x0376C0D4 CBZ X0, 0x376C0F0
	0x0376C0D8 LDR X8, [X0]
	0x0376C0DC LDP X9, X1, [X8 + 0x158]
	0x0376C0E0 BLR X9
	0x0376C0E4 MOVZ W8, 0x18D
	0x0376C0E8 MUL W22, W0, W8
	0x0376C0EC B 0x376C0F4
	0x0376C0F0 MOV W22, W31
	0x0376C0F4 ADRP X23, 0x987000
	0x0376C0F8 LDR X23, [X23 + 0xB58]
	0x0376C0FC ADD X21, X19, 0x8
	0x0376C100 MOV X0, X21
	0x0376C104 MOV X1, X31
	0x0376C108 BL 0x337B6D8
	0x0376C10C LDR X8, [X19]
	0x0376C110 MOV W19, W0
	0x0376C114 CBZ X8, 0x376C130
	0x0376C118 LDR X9, [X8]
	0x0376C11C MOV X0, X8
	0x0376C120 LDP X10, X1, [X9 + 0x158]
	0x0376C124 BLR X10
	0x0376C128 MOV W20, W0
	0x0376C12C B 0x376C134
	0x0376C130 MOV W20, W31
	0x0376C134 LDRB W8, [X21]
	0x0376C138 LDR X0, [X23]
	0x0376C13C AND W8, W8, 0x1
	0x0376C140 STRB W8, [X31 + 0xC]
	0x0376C144 LDR W8, [X0 + 0xE0]
	0x0376C148 CBNZ W8, 0x376C150
	0x0376C14C BL 0x1C16DFC
	0x0376C150 EOR W8, W19, W22, 0x0
	0x0376C154 MOVZ W19, 0x18D
	0x0376C158 ADD X0, X31, 0xC
	0x0376C15C MOV X1, X31
	0x0376C160 MUL W21, W8, W19
	0x0376C164 BL 0x33176B4
	0x0376C168 EOR W8, W20, W21, 0x0
	0x0376C16C MUL W8, W8, W19
	0x0376C170 LDP X20, X19, [X31 + 0x30]
	0x0376C174 LDP X22, X21, [X31 + 0x20]
	0x0376C178 LDP X30, X23, [X31 + 0x10]
	0x0376C17C EOR W0, W0, W8, 0x0
	0x0376C180 ADD X31, X31, 0x40
	0x0376C184 RET
	0x0376C188 SUB X31, X31, 0x20
	0x0376C18C STP X1, X30, [X31 + 0x8]
	0x0376C190 STR X0, [X31]
	0x0376C194 ADD X0, X31, 0x0
	0x0376C198 MOV X1, X2
	0x0376C19C MOV X2, X3
	0x0376C1A0 BL 0x376BFB8
	0x0376C1A4 LDR X30, [X31 + 0x10]
	0x0376C1A8 ORN W8, W31, W0, 0x0
	0x0376C1AC AND W0, W8, 0x1
	0x0376C1B0 ADD X31, X31, 0x20

ISIL:
	001 Move [X31-96], D15
	002 Move [X31-88], D14
	003 Move [X31+16], D13
	004 Move [X31+24], D12
	005 Move [X31+32], D11
	006 Move [X31+40], D10
	007 Move [X31+48], D9
	008 Move [X31+56], D8
	009 Move [X31+64], X30
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X21, 0xC76000
	014 Move W8, [X21+3749]
	015 Move X20, X1
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {26}
	021 Move X0, 0x9DC000
	022 Move X0, [X0+1784]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+3749], W8
	026 Move W8, [X19+40]
	027 Move W1, [X19+16]
	028 Compare W8, 0
	029 JumpIfEqual {101}
	030 Move X0, X20
	031 Move X2, X31
	032 Call InputBindingCompositeContext.ReadValueAsButton, X0, X1
	033 Move W1, [X19+20]
	034 And W31, W0, 1
	035 Move S8, W31
	036 Move S9, 1
	037 Move X0, X20
	038 Move X2, X31
	039 NotImplemented "Instruction FCSEL not yet implemented."
	040 Call InputBindingCompositeContext.ReadValueAsButton, X0, X1
	041 Move W1, [X19+24]
	042 And W31, W0, 1
	043 Move S11, -1
	044 Move X0, X20
	045 Move X2, X31
	046 NotImplemented "Instruction FCSEL not yet implemented."
	047 Call InputBindingCompositeContext.ReadValueAsButton, X0, X1
	048 Move W1, [X19+28]
	049 And W31, W0, 1
	050 Move X0, X20
	051 Move X2, X31
	052 NotImplemented "Instruction FCSEL not yet implemented."
	053 Call InputBindingCompositeContext.ReadValueAsButton, X0, X1
	054 Move W1, [X19+32]
	055 And W31, W0, 1
	056 Move X0, X20
	057 Move X2, X31
	058 NotImplemented "Instruction FCSEL not yet implemented."
	059 Call InputBindingCompositeContext.ReadValueAsButton, X0, X1
	060 Move W1, [X19+36]
	061 And W31, W0, 1
	062 Move X0, X20
	063 Move X2, X31
	064 NotImplemented "Instruction FCSEL not yet implemented."
	065 Call InputBindingCompositeContext.ReadValueAsButton, X0, X1
	066 Move W8, [X19+40]
	067 And W31, W0, 1
	068 NotImplemented "Instruction FCSEL not yet implemented."
	069 Add S8, S13, S14
	070 Add S9, S10, S12
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Add S10, S15, S0
	073 Move X19, 0xC6D000
	074 Move W8, [X19+1925]
	075 Compare W8, 0
	076 JumpIfNotEqual {82}
	077 Move X0, 0x988000
	078 Move X0, [X0+1448]
	079 Call 0x1C17CF4
	080 Move W8, 1
	081 Move [X19+1925], W8
	082 Move X8, 0x988000
	083 Move X8, [X8+1448]
	084 Move X0, [X8]
	085 Move W8, [X0+224]
	086 Compare W8, 0
	087 JumpIfNotEqual {89}
	088 Call 0x1C17DFC
	089 Multiply S0, S8, S8
	090 Multiply S1, S9, S9
	091 Move X8, -46665728
	092 Add S0, S1, S0
	093 Move V1, [X8+380]
	094 Multiply S2, S10, S10
	095 Add S0, S0, S2
	096 NotImplemented "Instruction FSQRT not yet implemented."
	097 NotImplemented "Instruction FCMP not yet implemented."
	098 NotImplemented "Instruction FDIV not yet implemented."
	099 NotImplemented "Instruction FDIV not yet implemented."
	100 NotImplemented "Instruction FDIV not yet implemented."
	101 Move X21, 0x9DB000
	102 Move X21, [X21+1784]
	103 Move X0, X20
	104 Move X2, [X21]
	105 Call InputBindingCompositeContext.ReadValue, X0, X1
	106 Move W1, [X19+20]
	107 Move X2, [X21]
	108 Move X0, X20
	109 Move V9, V0
	110 Call InputBindingCompositeContext.ReadValue, X0, X1
	111 Move W1, [X19+24]
	112 Move X2, [X21]
	113 Move X0, X20
	114 Move V10, V0
	115 Call InputBindingCompositeContext.ReadValue, X0, X1
	116 Move W1, [X19+28]
	117 Move X2, [X21]
	118 Move X0, X20
	119 Move V8, V0
	120 Call InputBindingCompositeContext.ReadValue, X0, X1
	121 Move W1, [X19+32]
	122 Move X2, [X21]
	123 Move X0, X20
	124 Move V11, V0
	125 Call InputBindingCompositeContext.ReadValue, X0, X1
	126 Move W1, [X19+36]
	127 Move X2, [X21]
	128 Move X0, X20
	129 Move V12, V0
	130 Call InputBindingCompositeContext.ReadValue, X0, X1
	131 Subtract S8, S11, S8
	132 Subtract S9, S9, S10
	133 Subtract S10, S12, S0
	134 Move X19, 0xC6D000
	135 Move W8, [X19+1923]
	136 Compare W8, 0
	137 JumpIfNotEqual {143}
	138 Move X0, 0x988000
	139 Move X0, [X0+1440]
	140 Call 0x1C17CF4
	141 Move W8, 1
	142 Move [X19+1923], W8
	143 Move X8, 0x988000
	144 Move X8, [X8+1440]
	145 Move X8, [X8]
	146 Move X8, [X8+184]
	147 Move S8, [X8]
	148 Move S9, [X8+4]
	149 Move V10, [X8+8]
	150 Move V0, V8
	151 Move V1, V9
	152 Move V2, V10
	153 Move X20, [X31+80]
	154 Move X19, [X31+88]
	155 Move X30, [X31+64]
	156 Move X21, [X31+72]
	157 Move D9, [X31+48]
	158 Move D8, [X31+56]
	159 Move D11, [X31+32]
	160 Move D10, [X31+40]
	161 Move D13, [X31+16]
	162 Move D12, [X31+24]
	163 Move D15, [X31+96]
	164 Move D14, [X31+104]
	165 Return X0

Method: System.Void .ctor()

Disassembly:
	0x0376C1B4 RET
	0x0376C1B8 STR X30, [X31 - 0x30]!
	0x0376C1BC STP X22, X21, [X31 + 0x10]
	0x0376C1C0 STP X20, X19, [X31 + 0x20]
	0x0376C1C4 ADRP X21, 0xC74000
	0x0376C1C8 LDRB W9, [X21 + 0xEB9]
	0x0376C1CC MOV X20, X0
	0x0376C1D0 MOV X19, X8
	0x0376C1D4 TBNZ X9, 0x0, 0x376C1EC
	0x0376C1D8 ADRP X0, 0x9DA000
	0x0376C1DC LDR X0, [X0 + 0x728]
	0x0376C1E0 BL 0x1C16CF4
	0x0376C1E4 MOVZ W8, 0x1
	0x0376C1E8 STRB W8, [X21 + 0xEB9]
	0x0376C1EC LDR X8, [X20 + 0x10]
	0x0376C1F0 CBZ X8, 0x376C280
	0x0376C1F4 LDR X22, [X8 + 0x18]
	0x0376C1F8 CBZ X22, 0x376C280

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xC75000
	006 Move X21, 0x9DB000
	007 Move W8, [X20+3750]
	008 Move X21, [X21+1824]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x9DB000
	015 Move X0, [X0+1824]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3750], W8
	019 Move X1, [X21]
	020 Move X0, X19
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X30, [X31+32]
	024 Move X21, [X31+40]
	025 Call InputBindingComposite`1<Vector3>..ctor, X0
	026 Return 

