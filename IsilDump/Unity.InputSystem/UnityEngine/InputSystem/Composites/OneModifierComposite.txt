Type: UnityEngine.InputSystem.Composites.OneModifierComposite

Method: System.Type get_valueType()

Disassembly:
	0x0376B3E0 LDR X9, [X9 + 0x988]
	0x0376B3E4 MOV X0, X20

ISIL:
	001 Move X0, [X0+32]
	002 Return X0

Method: System.Int32 get_valueSizeInBytes()

Disassembly:
	0x0376B3E8 MOV X3, X31
	0x0376B3EC LDR X1, [X8]

ISIL:
	001 Move W0, [X0+28]
	002 Return X0

Method: System.Single EvaluateMagnitude(ref UnityEngine.InputSystem.InputBindingCompositeContext context)

Disassembly:
	0x0376B3F0 LDR X2, [X9]
	0x0376B3F4 BL 0x32293BC
	0x0376B3F8 MOV X21, X0
	0x0376B3FC B 0x376B404
	0x0376B400 MOV X21, X20
	0x0376B404 STR X21, [X19 + 0x8]
	0x0376B408 LDP X20, X19, [X31 + 0x20]
	0x0376B40C LDP X22, X21, [X31 + 0x10]
	0x0376B410 LDR X30, [X31], #0x30
	0x0376B414 RET
	0x0376B418 BL 0x1C16F20
	0x0376B41C STP X30, X23, [X31 - 0x30]!
	0x0376B420 STP X22, X21, [X31 + 0x10]
	0x0376B424 STP X20, X19, [X31 + 0x20]
	0x0376B428 CBZ X1, 0x376B4A0
	0x0376B42C LDR X8, [X0 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X1
	005 Move X20, X0
	006 Call OneModifierComposite.ModifierIsPressed, X0, X1
	007 Move TEMP, X0
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfNotEqual {19}
	011 Move W1, [X20+20]
	012 Move X0, X19
	013 Move X20, [X31+16]
	014 Move X19, [X31+24]
	015 Move X2, X31
	016 Move X30, [X31+32]
	017 Call InputBindingCompositeContext.EvaluateMagnitude, X0, X1
	018 Return V0
	019 Move X20, [X31+16]
	020 Move X19, [X31+24]
	021 Move S0, W31
	022 Move X30, [X31+32]
	023 Return V0

Method: System.Void ReadValue(ref UnityEngine.InputSystem.InputBindingCompositeContext context, System.Void* buffer, System.Int32 bufferSize)

Disassembly:
	0x0376B4B8 LDR X0, [X0 + 0xD20]
	0x0376B4BC BL 0x1C16D08
	0x0376B4C0 MOV X1, X0
	0x0376B4C4 MOV X0, X19
	0x0376B4C8 MOV X2, X31
	0x0376B4CC BL 0x330E100
	0x0376B4D0 ADRP X0, 0x9DB000
	0x0376B4D4 LDR X0, [X0 + 0x748]
	0x0376B4D8 BL 0x1C16D08
	0x0376B4DC MOV X1, X0
	0x0376B4E0 MOV X0, X19
	0x0376B4E4 BL 0x1C16DEC
	0x0376B4E8 STP X30, X23, [X31 - 0x30]!
	0x0376B4EC STP X22, X21, [X31 + 0x10]
	0x0376B4F0 STP X20, X19, [X31 + 0x20]
	0x0376B4F4 ADRP X22, 0xC75000
	0x0376B4F8 ADRP X23, 0x9DB000
	0x0376B4FC LDRB W8, [X22 + 0xF41]
	0x0376B500 LDR X23, [X23 + 0x750]
	0x0376B504 MOV W19, W2
	0x0376B508 MOV X20, X1
	0x0376B50C MOV X21, X0
	0x0376B510 TBNZ X8, 0x0, 0x376B528
	0x0376B514 ADRP X0, 0x9DB000
	0x0376B518 LDR X0, [X0 + 0x750]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move W20, W3
	007 Move X19, X2
	008 Move X21, X1
	009 Move X22, X0
	010 Call OneModifierComposite.ModifierIsPressed, X0, X1
	011 Move TEMP, X0
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfNotEqual {27}
	015 Move W1, [X22+20]
	016 Move X0, X21
	017 Move X2, X19
	018 Move W3, W20
	019 Move X20, [X31+32]
	020 Move X19, [X31+40]
	021 Move X22, [X31+16]
	022 Move X21, [X31+24]
	023 Move X4, X31
	024 Move X30, [X31+48]
	025 Call InputBindingCompositeContext.ReadValue, X0, X1, X2, X3
	026 Return 
	027 NotImplemented "Instruction LDRSW not yet implemented."
	028 Move X0, X19
	029 Move X20, [X31+32]
	030 Move X19, [X31+40]
	031 Move X22, [X31+16]
	032 Move X21, [X31+24]
	033 Move X2, X31
	034 Move X30, [X31+48]
	035 Call UnsafeUtility.MemClear, X0, X1
	036 Return 

Method: System.Boolean ModifierIsPressed(ref UnityEngine.InputSystem.InputBindingCompositeContext context)

Disassembly:
	0x0376B430 MOV X20, X0
	0x0376B434 CBZ X8, 0x376B47C
	0x0376B438 MOV X19, X1
	0x0376B43C MOV X21, X31
	0x0376B440 MOVZ W22, 0x20
	0x0376B444 LDR W23, [X8 + 0x18]
	0x0376B448 CMP X21, W23, SXTW
	0x0376B44C B.GE 0x376B480
	0x0376B450 CMP X21, X23
	0x0376B454 B.CS 0x376B49C
	0x0376B458 LDR X1, [X8, X22, LSL]
	0x0376B45C MOV X0, X19
	0x0376B460 MOV W2, W31
	0x0376B464 BL 0x376B4E8
	0x0376B468 CBNZ X0, 0x376B480
	0x0376B46C LDR X8, [X20 + 0x10]
	0x0376B470 ADD X21, X21, 0x1
	0x0376B474 ADD X22, X22, 0x10
	0x0376B478 CBNZ X8, 0x376B444
	0x0376B47C BL 0x1C16F20
	0x0376B480 SXTW X8, W23
	0x0376B484 CMP X21, X8
	0x0376B488 LDP X20, X19, [X31 + 0x20]
	0x0376B48C LDP X22, X21, [X31 + 0x10]
	0x0376B490 CSET W0, LT
	0x0376B494 LDP X30, X23, [X31], #0x30
	0x0376B498 RET
	0x0376B49C BL 0x1C16F28
	0x0376B4A0 ADRP X0, 0x98D000
	0x0376B4A4 LDR X0, [X0 + 0x528]
	0x0376B4A8 BL 0x1C16D08
	0x0376B4AC BL 0x1C16F10
	0x0376B4B0 MOV X19, X0
	0x0376B4B4 ADRP X0, 0x9B0000

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W8, [X0+16]
	006 Move X20, X0
	007 Move X19, X1
	008 Move X0, X1
	009 Move W1, W8
	010 Move X2, X31
	011 Call InputBindingCompositeContext.ReadValueAsButton, X0, X1
	012 Move TEMP, X0
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfNotEqual {23}
	016 Move W8, [X20+40]
	017 Compare W8, 0
	018 JumpIfEqual {22}
	019 Move W8, [X20+24]
	020 Compare W8, 0
	021 JumpIfEqual {24}
	022 Move W0, 1
	023 Move W0, W31
	024 Move W1, [X20+20]
	025 Move X0, X19
	026 Move X2, X31
	027 Call InputBindingCompositeContext.GetPressTime, X0, X1
	028 Move W1, [X20+16]
	029 Move X0, X19
	030 Move X2, X31
	031 Move V8, V0
	032 Call InputBindingCompositeContext.GetPressTime, X0, X1
	033 NotImplemented "Instruction FCMP not yet implemented."
	034 NotImplemented "Instruction CSET not yet implemented."
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X30, [X31+8]
	038 Move V8, [X31+32]
	039 Return X0

Method: System.Void FinishSetup(ref UnityEngine.InputSystem.InputBindingCompositeContext context)

Disassembly:
	0x0376B51C BL 0x1C16CF4
	0x0376B520 MOVZ W8, 0x1
	0x0376B524 STRB W8, [X22 + 0xF41]
	0x0376B528 LDR X3, [X23]
	0x0376B52C MOV X0, X21
	0x0376B530 MOV X1, X20
	0x0376B534 MOV W2, W19
	0x0376B538 LDP X20, X19, [X31 + 0x20]
	0x0376B53C LDP X22, X21, [X31 + 0x10]
	0x0376B540 LDP X30, X23, [X31], #0x30
	0x0376B544 B 0x21FFB84
	0x0376B548 SUB X31, X31, 0x60
	0x0376B54C STR X30, [X31 + 0x10]
	0x0376B550 STP X26, X25, [X31 + 0x20]
	0x0376B554 STP X24, X23, [X31 + 0x30]
	0x0376B558 STP X22, X21, [X31 + 0x40]
	0x0376B55C STP X20, X19, [X31 + 0x50]
	0x0376B560 MOV X19, X1
	0x0376B564 MOV X20, X0
	0x0376B568 LDR X0, [X0]
	0x0376B56C LDR X1, [X1]
	0x0376B570 MOVZ W2, 0x3
	0x0376B574 MOV X3, X31
	0x0376B578 BL 0x3226C60
	0x0376B57C TBZ X0, 0x0, 0x376B64C
	0x0376B580 LDR X0, [X20 + 0x8]
	0x0376B584 LDR X1, [X19 + 0x8]
	0x0376B588 MOVZ W2, 0x3
	0x0376B58C MOV X3, X31
	0x0376B590 BL 0x3226C60
	0x0376B594 TBZ X0, 0x0, 0x376B64C
	0x0376B598 LDR X8, [X20 + 0x10]
	0x0376B59C CBZ X8, 0x376B66C
	0x0376B5A0 LDR X9, [X8 + 0x18]
	0x0376B5A4 CBZ X9, 0x376B66C
	0x0376B5A8 LDR X10, [X19 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xC76000
	006 Move W8, [X21+3744]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x9B1000
	014 Move X0, [X0+624]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+3744], W8
	018 Move W1, [X19+20]
	019 Add X2, X19, 32
	020 Add X3, X19, 28
	021 Add X4, X19, 40
	022 Move X0, X20
	023 Call OneModifierComposite.DetermineValueTypeAndSize, X0, X1, X2, X3, X4
	024 Move W8, [X19+24]
	025 Compare W8, 0
	026 JumpIfNotEqual {41}
	027 Move X8, 0x9B1000
	028 Move X8, [X8+624]
	029 Move X0, [X8]
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move X0, X31
	035 Call InputSystem.get_settings
	036 Compare X0, 0
	037 JumpIfEqual {46}
	038 Move W8, [X0+93]
	039 Xor W8, W8, 1
	040 Move [X19+24], W8
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move X30, [X31+32]
	044 Move X21, [X31+40]
	045 Return 
	046 Call 0x1C17F20

Method: System.Object ReadValueAsObject(ref UnityEngine.InputSystem.InputBindingCompositeContext context)

Disassembly:
	0x0376BA78 B.EQ 0x376BB08
	0x0376BA7C LDR W22, [X20 + 0x28]!
	0x0376BA80 CBZ W22, 0x376BB08
	0x0376BA84 ADRP X8, 0x9DB000
	0x0376BA88 LDR X8, [X8 + 0x770]
	0x0376BA8C MOV X0, X21
	0x0376BA90 MOV W1, W22
	0x0376BA94 LDR X2, [X8]
	0x0376BA98 BL 0x2DFA384
	0x0376BA9C CMP W22, 0x1
	0x0376BAA0 B.LT 0x376BB08
	0x0376BAA4 ADRP X25, 0x9DA000
	0x0376BAA8 ADRP X26, 0x9B0000
	0x0376BAAC ADRP X27, 0x9DB000
	0x0376BAB0 LDR X25, [X25 + 0x680]
	0x0376BAB4 LDR X26, [X26 + 0xE00]
	0x0376BAB8 LDR X27, [X27 + 0x760]
	0x0376BABC MOV W23, W31
	0x0376BAC0 LDR X2, [X25]
	0x0376BAC4 MOV X0, X20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W8, [X0+16]
	005 Move X20, X0
	006 Move X19, X1
	007 Move X0, X1
	008 Move W1, W8
	009 Move X2, X31
	010 Call InputBindingCompositeContext.ReadValueAsButton, X0, X1
	011 Move TEMP, X0
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfNotEqual {23}
	015 Move W1, [X20+20]
	016 Move X0, X19
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 Move X2, X31
	020 Move X30, [X31+32]
	021 Call InputBindingCompositeContext.ReadValueAsObject, X0, X1
	022 Return X0
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X0, X31
	026 Move X30, [X31+32]
	027 Return X0

Method: System.Void DetermineValueTypeAndSize(ref UnityEngine.InputSystem.InputBindingCompositeContext context, System.Int32 part, out System.Type valueType, out System.Int32 valueSizeInBytes, out System.Boolean isButton)

Disassembly:
	0x0376B5AC CBZ X10, 0x376B64C
	0x0376B5B0 LDR W10, [X10 + 0x18]
	0x0376B5B4 CMP W9, W10
	0x0376B5B8 B.NE 0x376B64C
	0x0376B5BC CMP W9, 0x1
	0x0376B5C0 B.LT 0x376B684
	0x0376B5C4 MOV X23, X31
	0x0376B5C8 AND X24, X9, 0x0
	0x0376B5CC LDR W9, [X8 + 0x18]
	0x0376B5D0 CMP X23, X9
	0x0376B5D4 B.CS 0x376B68C
	0x0376B5D8 ADD X8, X8, X23, 0x4, LSL
	0x0376B5DC LDP X21, X22, [X8 + 0x20]
	0x0376B5E0 MOV X25, X31
	0x0376B5E4 MOVZ W26, 0x20
	0x0376B5E8 LDR X8, [X19 + 0x10]
	0x0376B5EC CBZ X8, 0x376B648
	0x0376B5F0 LDR W9, [X8 + 0x18]
	0x0376B5F4 CMP X25, X9
	0x0376B5F8 B.CS 0x376B68C
	0x0376B5FC ADD X8, X8, X26
	0x0376B600 LDP X9, X8, [X8]
	0x0376B604 ADD X0, X31, 0x0
	0x0376B608 MOV X1, X21
	0x0376B60C MOV X2, X22
	0x0376B610 STP X9, X8, [X31]
	0x0376B614 BL 0x376BFB8
	0x0376B618 TBNZ X0, 0x0, 0x376B634
	0x0376B61C ADD X25, X25, 0x1
	0x0376B620 MOV W0, W31
	0x0376B624 CMP X24, X25
	0x0376B628 ADD X26, X26, 0x10
	0x0376B62C B.NE 0x376B5E8
	0x0376B630 B 0x376B650
	0x0376B634 ADD X23, X23, 0x1
	0x0376B638 CMP X23, X24
	0x0376B63C B.EQ 0x376B684
	0x0376B640 LDR X8, [X20 + 0x10]
	0x0376B644 CBNZ X8, 0x376B5CC
	0x0376B648 BL 0x1C16F20
	0x0376B64C MOV W0, W31
	0x0376B650 LDP X20, X19, [X31 + 0x50]
	0x0376B654 LDP X22, X21, [X31 + 0x40]
	0x0376B658 LDP X24, X23, [X31 + 0x30]
	0x0376B65C LDP X26, X25, [X31 + 0x20]
	0x0376B660 LDR X30, [X31 + 0x10]
	0x0376B664 ADD X31, X31, 0x60
	0x0376B668 RET
	0x0376B66C LDR X8, [X19 + 0x10]
	0x0376B670 CBZ X8, 0x376B684
	0x0376B674 LDR W8, [X8 + 0x18]
	0x0376B678 CMP W8, 0x0
	0x0376B67C CSET W0, EQ
	0x0376B680 B 0x376B650
	0x0376B684 MOVZ W0, 0x1
	0x0376B688 B 0x376B650
	0x0376B68C BL 0x1C16F28
	0x0376B690 SUB X31, X31, 0x20
	0x0376B694 STP X1, X30, [X31 + 0x8]
	0x0376B698 STR X0, [X31]
	0x0376B69C ADD X0, X31, 0x0
	0x0376B6A0 MOV X1, X2
	0x0376B6A4 MOV X2, X3
	0x0376B6A8 BL 0x376BFB8
	0x0376B6AC LDR X30, [X31 + 0x10]
	0x0376B6B0 AND W0, W0, 0x1
	0x0376B6B4 ADD X31, X31, 0x20
	0x0376B6B8 RET
	0x0376B6BC SUB X31, X31, 0x40
	0x0376B6C0 STP X30, X21, [X31 + 0x20]
	0x0376B6C4 STP X20, X19, [X31 + 0x30]
	0x0376B6C8 ADRP X21, 0xC75000
	0x0376B6CC LDRB W8, [X21 + 0xEAB]
	0x0376B6D0 MOV X20, X1
	0x0376B6D4 MOV X19, X0
	0x0376B6D8 TBNZ X8, 0x0, 0x376B6F0
	0x0376B6DC ADRP X0, 0x9DB000
	0x0376B6E0 LDR X0, [X0 + 0x758]
	0x0376B6E4 BL 0x1C16CF4
	0x0376B6E8 MOVZ W8, 0x1
	0x0376B6EC STRB W8, [X21 + 0xEAB]
	0x0376B6F0 CBZ X20, 0x376B70C
	0x0376B6F4 ADRP X8, 0x9DB000
	0x0376B6F8 LDR X8, [X8 + 0x758]
	0x0376B6FC LDR X9, [X20]
	0x0376B700 LDR X8, [X8]
	0x0376B704 CMP X9, X8
	0x0376B708 B.EQ 0x376B714
	0x0376B70C MOV W0, W31
	0x0376B710 B 0x376B738
	0x0376B714 MOV X0, X20
	0x0376B718 BL 0x1C16E08
	0x0376B71C LDR V0, [X0]
	0x0376B720 LDR X8, [X0 + 0x10]
	0x0376B724 ADD X1, X31, 0x0
	0x0376B728 MOV X0, X19
	0x0376B72C STR V0, [X31]
	0x0376B730 STR X8, [X31 + 0x10]
	0x0376B734 BL 0x376B548
	0x0376B738 LDP X20, X19, [X31 + 0x30]
	0x0376B73C LDP X30, X21, [X31 + 0x20]
	0x0376B740 AND W0, W0, 0x1
	0x0376B744 ADD X31, X31, 0x40
	0x0376B748 RET
	0x0376B74C STP X30, X21, [X31 - 0x20]!
	0x0376B750 STP X20, X19, [X31 + 0x10]
	0x0376B754 MOV X19, X0
	0x0376B758 LDR X0, [X0]
	0x0376B75C CBZ X0, 0x376B778
	0x0376B760 LDR X8, [X0]
	0x0376B764 LDP X9, X1, [X8 + 0x158]
	0x0376B768 BLR X9
	0x0376B76C MOVZ W8, 0x18D
	0x0376B770 MUL W21, W0, W8
	0x0376B774 B 0x376B77C
	0x0376B778 MOV W21, W31
	0x0376B77C LDR X0, [X19 + 0x8]
	0x0376B780 CBZ X0, 0x376B798
	0x0376B784 LDR X8, [X0]
	0x0376B788 LDP X9, X1, [X8 + 0x158]
	0x0376B78C BLR X9
	0x0376B790 MOV W20, W0
	0x0376B794 B 0x376B79C
	0x0376B798 MOV W20, W31
	0x0376B79C LDR X0, [X19 + 0x10]
	0x0376B7A0 CBZ X0, 0x376B7B0
	0x0376B7A4 LDR X8, [X0]
	0x0376B7A8 LDP X9, X1, [X8 + 0x158]
	0x0376B7AC BLR X9
	0x0376B7B0 EOR W8, W20, W21, 0x0
	0x0376B7B4 LDP X20, X19, [X31 + 0x10]
	0x0376B7B8 MOVZ W9, 0x18D
	0x0376B7BC MUL W8, W8, W9
	0x0376B7C0 EOR W0, W0, W8, 0x0
	0x0376B7C4 LDP X30, X21, [X31], #0x20
	0x0376B7C8 RET
	0x0376B7CC SUB X31, X31, 0x50
	0x0376B7D0 STP X30, X23, [X31 + 0x20]
	0x0376B7D4 STP X22, X21, [X31 + 0x30]
	0x0376B7D8 STP X20, X19, [X31 + 0x40]
	0x0376B7DC ADRP X19, 0xC75000
	0x0376B7E0 LDRB W8, [X19 + 0xEAC]
	0x0376B7E4 MOV X20, X0
	0x0376B7E8 TBNZ X8, 0x0, 0x376B80C
	0x0376B7EC ADRP X0, 0x9DB000
	0x0376B7F0 LDR X0, [X0 + 0x758]
	0x0376B7F4 BL 0x1C16CF4
	0x0376B7F8 ADRP X0, 0x988000
	0x0376B7FC LDR X0, [X0 + 0x8F0]
	0x0376B800 BL 0x1C16CF4
	0x0376B804 MOVZ W8, 0x1
	0x0376B808 STRB W8, [X19 + 0xEAC]
	0x0376B80C LDR X0, [X20]
	0x0376B810 MOV X1, X31
	0x0376B814 BL 0x32277A8
	0x0376B818 TBZ X0, 0x0, 0x376B84C
	0x0376B81C ADRP X9, 0x9DB000
	0x0376B820 LDR V0, [X20]
	0x0376B824 LDR X8, [X20 + 0x10]
	0x0376B828 LDR X9, [X9 + 0x758]
	0x0376B82C ADD X1, X31, 0x0
	0x0376B830 STR V0, [X31]
	0x0376B834 STR X8, [X31 + 0x10]
	0x0376B838 LDR X0, [X9]
	0x0376B83C BL 0x1C16E04
	0x0376B840 MOV X1, X31
	0x0376B844 BL 0x33D5650
	0x0376B848 B 0x376B934
	0x0376B84C LDR X8, [X20 + 0x10]
	0x0376B850 CBZ X8, 0x376B930
	0x0376B854 ADRP X8, 0x988000
	0x0376B858 LDR X8, [X8 + 0x8F0]
	0x0376B85C LDR X0, [X8]
	0x0376B860 BL 0x1C16F10
	0x0376B864 MOV X1, X31
	0x0376B868 MOV X19, X0
	0x0376B86C BL 0x3231AC4
	0x0376B870 CBZ X19, 0x376B94C
	0x0376B874 LDR X1, [X20]
	0x0376B878 MOV X0, X19
	0x0376B87C MOV X2, X31
	0x0376B880 BL 0x32333E0
	0x0376B884 MOVZ W1, 0x28
	0x0376B888 MOV X0, X19
	0x0376B88C MOV X2, X31
	0x0376B890 BL 0x3233D30
	0x0376B894 LDR X21, [X20 + 0x10]
	0x0376B898 CBZ X21, 0x376B94C
	0x0376B89C LDR X8, [X21 + 0x18]
	0x0376B8A0 CMP W8, 0x1
	0x0376B8A4 B.LT 0x376B900
	0x0376B8A8 MOV X22, X31
	0x0376B8AC AND X9, X8, 0x0
	0x0376B8B0 ADD X23, X21, 0x20
	0x0376B8B4 MOVZ W8, 0x1
	0x0376B8B8 CMP X22, W9, UXTW
	0x0376B8BC B.CS 0x376B948
	0x0376B8C0 LDR X20, [X23]
	0x0376B8C4 TBNZ X8, 0x0, 0x376B8D8
	0x0376B8C8 MOVZ W1, 0x2C
	0x0376B8CC MOV X0, X19
	0x0376B8D0 MOV X2, X31
	0x0376B8D4 BL 0x3233D30
	0x0376B8D8 MOV X0, X19
	0x0376B8DC MOV X1, X20
	0x0376B8E0 MOV X2, X31
	0x0376B8E4 BL 0x32333E0
	0x0376B8E8 LDR W9, [X21 + 0x18]
	0x0376B8EC ADD X22, X22, 0x1
	0x0376B8F0 MOV W8, W31
	0x0376B8F4 ADD X23, X23, 0x10
	0x0376B8F8 CMP X22, W9, SXTW
	0x0376B8FC B.LT 0x376B8B8
	0x0376B900 MOVZ W1, 0x29
	0x0376B904 MOV X0, X19
	0x0376B908 MOV X2, X31
	0x0376B90C BL 0x3233D30
	0x0376B910 LDR X8, [X19]
	0x0376B914 MOV X0, X19
	0x0376B918 LDP X20, X19, [X31 + 0x40]
	0x0376B91C LDP X22, X21, [X31 + 0x30]
	0x0376B920 LDP X2, X1, [X8 + 0x168]
	0x0376B924 LDP X30, X23, [X31 + 0x20]
	0x0376B928 ADD X31, X31, 0x50
	0x0376B92C BR X2
	0x0376B930 LDR X0, [X20]
	0x0376B934 LDP X20, X19, [X31 + 0x40]
	0x0376B938 LDP X22, X21, [X31 + 0x30]
	0x0376B93C LDP X30, X23, [X31 + 0x20]
	0x0376B940 ADD X31, X31, 0x50
	0x0376B944 RET
	0x0376B948 BL 0x1C16F28
	0x0376B94C BL 0x1C16F20
	0x0376B950 SUB X31, X31, 0x30
	0x0376B954 STR X30, [X31 + 0x20]
	0x0376B958 LDR X8, [X1 + 0x10]
	0x0376B95C LDR V0, [X1]
	0x0376B960 ADD X1, X31, 0x0
	0x0376B964 STR X8, [X31 + 0x10]
	0x0376B968 STR V0, [X31]
	0x0376B96C BL 0x376B548
	0x0376B970 LDR X30, [X31 + 0x20]
	0x0376B974 AND W0, W0, 0x1
	0x0376B978 ADD X31, X31, 0x30
	0x0376B97C RET
	0x0376B980 SUB X31, X31, 0x30
	0x0376B984 STR X30, [X31 + 0x20]
	0x0376B988 LDR X8, [X1 + 0x10]
	0x0376B98C LDR V0, [X1]
	0x0376B990 ADD X1, X31, 0x0
	0x0376B994 STR X8, [X31 + 0x10]
	0x0376B998 STR V0, [X31]
	0x0376B99C BL 0x376B548
	0x0376B9A0 LDR X30, [X31 + 0x20]
	0x0376B9A4 ORN W8, W31, W0, 0x0
	0x0376B9A8 AND W0, W8, 0x1
	0x0376B9AC ADD X31, X31, 0x30
	0x0376B9B0 RET
	0x0376B9B4 LDR V0, [X0 + 0x4]
	0x0376B9B8 RET
	0x0376B9BC LDR W8, [X0]
	0x0376B9C0 CMP W8, 0x1
	0x0376B9C4 CSET W0, NE
	0x0376B9C8 RET
	0x0376B9CC LDR W8, [X0]
	0x0376B9D0 CMP W8, 0x1
	0x0376B9D4 CSET W0, EQ
	0x0376B9D8 RET
	0x0376B9DC LDR W8, [X0]
	0x0376B9E0 CMP W8, 0x2
	0x0376B9E4 CSET W0, EQ
	0x0376B9E8 RET
	0x0376B9EC STP X30, X27, [X31 - 0x50]!
	0x0376B9F0 STP X26, X25, [X31 + 0x10]
	0x0376B9F4 STP X24, X23, [X31 + 0x20]
	0x0376B9F8 STP X22, X21, [X31 + 0x30]
	0x0376B9FC STP X20, X19, [X31 + 0x40]
	0x0376BA00 ADRP X21, 0xC75000
	0x0376BA04 LDRB W9, [X21 + 0xEAE]
	0x0376BA08 MOV X20, X0
	0x0376BA0C MOV X19, X8
	0x0376BA10 TBNZ X9, 0x0, 0x376BA64
	0x0376BA14 ADRP X0, 0x9DB000
	0x0376BA18 LDR X0, [X0 + 0x760]
	0x0376BA1C BL 0x1C16CF4
	0x0376BA20 ADRP X0, 0x9B0000
	0x0376BA24 LDR X0, [X0 + 0xE00]
	0x0376BA28 BL 0x1C16CF4
	0x0376BA2C ADRP X0, 0x9DB000
	0x0376BA30 LDR X0, [X0 + 0x768]
	0x0376BA34 BL 0x1C16CF4
	0x0376BA38 ADRP X0, 0x9DA000
	0x0376BA3C LDR X0, [X0 + 0x678]
	0x0376BA40 BL 0x1C16CF4
	0x0376BA44 ADRP X0, 0x9DA000
	0x0376BA48 LDR X0, [X0 + 0x680]
	0x0376BA4C BL 0x1C16CF4
	0x0376BA50 ADRP X0, 0x9DB000
	0x0376BA54 LDR X0, [X0 + 0x770]
	0x0376BA58 BL 0x1C16CF4
	0x0376BA5C MOVZ W8, 0x1
	0x0376BA60 STRB W8, [X21 + 0xEAE]
	0x0376BA64 MOV X21, X20
	0x0376BA68 LDR W8, [X21 + 0x8]!
	0x0376BA6C CBNZ W8, 0x376BB08
	0x0376BA70 LDR W8, [X20]
	0x0376BA74 CMP W8, 0x1

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X19, 0xC76000
	015 Move W8, [X19+3745]
	016 Move X22, X4
	017 Move X23, X3
	018 Move X21, X2
	019 Move W24, W1
	020 Move X20, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {48}
	025 Move X0, 0x989000
	026 Move X0, [X0+3584]
	027 Call 0x1C17CF4
	028 Move X0, 0x9DC000
	029 Move X0, [X0+1800]
	030 Call 0x1C17CF4
	031 Move X0, 0x9DC000
	032 Move X0, [X0+1808]
	033 Call 0x1C17CF4
	034 Move X0, 0x989000
	035 Move X0, [X0+3608]
	036 Call 0x1C17CF4
	037 Move X0, 0x989000
	038 Move X0, [X0+1448]
	039 Call 0x1C17CF4
	040 Move X0, 0x9B1000
	041 Move X0, [X0+2040]
	042 Call 0x1C17CF4
	043 Move X0, 0x989000
	044 Move X0, [X0+1728]
	045 Call 0x1C17CF4
	046 Move W8, 1
	047 Move [X19+3745], W8
	048 Move W8, 1
	049 Move X0, X20
	050 Move X1, X31
	051 Move [X23], W31
	052 Move [X22], W8
	053 Call InputBindingCompositeContext.get_controls, X0
	054 Compare X0, 0
	055 JumpIfEqual {272}
	056 Move X10, 0x9DC000
	057 Move X8, [X0]
	058 Move X10, [X10+1800]
	059 Move X20, X0
	060 Move [X31+8], X21
	061 NotImplemented "Instruction LDRH not yet implemented."
	062 Move X1, [X10]
	063 Compare X9, 0
	064 JumpIfEqual {71}
	065 Move X10, [X8+176]
	066 Add X10, X10, 8
	067 NotImplemented "Instruction LDUR not yet implemented."
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Subtract X9, X9, 1
	070 Add X10, X10, 16
	071 Move X0, X20
	072 Move W2, W31
	073 Call 0x1C5D788
	074 NotImplemented "Instruction LDRSW not yet implemented."
	075 Add X8, X8, X9
	076 Add X0, X8, 312
	077 Move X29, 0x989000
	078 Move X28, 0x9DC000
	079 Move X19, 0x989000
	080 Move X29, [X29+3608]
	081 Move X28, [X28+1808]
	082 Move X19, [X19+1728]
	083 Move X8, [X0]
	084 Move X1, [X0+8]
	085 Move X0, X20
	086 NotImplemented "Instruction BLR not yet implemented."
	087 Move X20, X0
	088 Move X21, X31
	089 Compare X20, 0
	090 JumpIfEqual {271}
	091 Move X8, [X20]
	092 Move X1, [X29]
	093 NotImplemented "Instruction LDRH not yet implemented."
	094 Compare X9, 0
	095 JumpIfEqual {102}
	096 Move X10, [X8+176]
	097 Add X10, X10, 8
	098 NotImplemented "Instruction LDUR not yet implemented."
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Subtract X9, X9, 1
	101 Add X10, X10, 16
	102 Move X0, X20
	103 Move W2, W31
	104 Call 0x1C5D788
	105 NotImplemented "Instruction LDRSW not yet implemented."
	106 Add X8, X8, X9
	107 Add X0, X8, 312
	108 Move X8, [X0]
	109 Move X1, [X0+8]
	110 Move X0, X20
	111 NotImplemented "Instruction BLR not yet implemented."
	112 Move TEMP, X0
	113 And TEMP, TEMP, 1
	114 Compare TEMP, 1
	115 JumpIfNotEqual {223}
	116 Move X8, [X20]
	117 Move X1, [X28]
	118 NotImplemented "Instruction LDRH not yet implemented."
	119 Compare X9, 0
	120 JumpIfEqual {127}
	121 Move X10, [X8+176]
	122 Add X10, X10, 8
	123 NotImplemented "Instruction LDUR not yet implemented."
	124 NotImplemented "Instruction CMP not yet implemented."
	125 Subtract X9, X9, 1
	126 Add X10, X10, 16
	127 Move X0, X20
	128 Move W2, W31
	129 Call 0x1C5D788
	130 NotImplemented "Instruction LDRSW not yet implemented."
	131 Add X8, X8, X9
	132 Add X0, X8, 312
	133 Move X8, [X0]
	134 Move X1, [X0+8]
	135 Move X0, X20
	136 NotImplemented "Instruction BLR not yet implemented."
	137 NotImplemented "Instruction CMP not yet implemented."
	138 Move X25, X1
	139 Compare X1, 0
	140 JumpIfEqual {275}
	141 Move X8, [X25]
	142 Move X9, [X8+376]
	143 Move X1, [X8+384]
	144 Move X0, X25
	145 NotImplemented "Instruction BLR not yet implemented."
	146 Move X26, X0
	147 Move X0, [X19]
	148 Move W8, [X0+224]
	149 Compare W8, 0
	150 JumpIfNotEqual {152}
	151 Call 0x1C17DFC
	152 Move X0, X21
	153 Move X1, X31
	154 Move X2, X31
	155 Call Type.op_Equality, X0, X1
	156 Move TEMP, X0
	157 And TEMP, TEMP, 1
	158 Compare TEMP, 1
	159 JumpIfEqual {172}
	160 Compare X26, 0
	161 JumpIfEqual {276}
	162 Move X8, [X26]
	163 Move X9, [X8+680]
	164 Move X2, [X8+688]
	165 Move X0, X26
	166 Move X1, X21
	167 NotImplemented "Instruction BLR not yet implemented."
	168 Move TEMP, X0
	169 And TEMP, TEMP, 1
	170 Compare TEMP, 1
	171 JumpIfNotEqual {199}
	172 Move X21, X26
	173 Move X8, [X25]
	174 Move X9, [X8+392]
	175 Move X1, [X8+400]
	176 Move X0, X25
	177 NotImplemented "Instruction BLR not yet implemented."
	178 Move X8, 0x989000
	179 Move X8, [X8+1448]
	180 Move W26, W0
	181 Move W27, [X23]
	182 Move X0, [X8]
	183 Move W8, [X0+224]
	184 Compare W8, 0
	185 JumpIfNotEqual {187}
	186 Call 0x1C17DFC
	187 Move W0, W26
	188 Move W1, W27
	189 Move X2, X31
	190 Call Math.Max, X0, X1
	191 Move [X23], W0
	192 Move W26, [X22]
	193 Move X0, X25
	194 Move X1, X31
	195 Call InputControl.get_isButton, X0
	196 And W8, W0, W26
	197 And W8, W8, 1
	198 Move [X22], W8
	199 Compare X21, 0
	200 JumpIfEqual {277}
	201 Move X8, [X21]
	202 Move X9, [X8+680]
	203 Move X2, [X8+688]
	204 Move X0, X21
	205 Move X1, X26
	206 NotImplemented "Instruction BLR not yet implemented."
	207 Move TEMP, X0
	208 And TEMP, TEMP, 1
	209 Compare TEMP, 1
	210 JumpIfEqual {173}
	211 Move X0, [X19]
	212 Move X9, 0x9B1000
	213 Move W8, [X0+224]
	214 Move X9, [X9+2040]
	215 Move X26, [X9]
	216 Compare W8, 0
	217 JumpIfNotEqual {219}
	218 Call 0x1C17DFC
	219 Move X0, X26
	220 Move X1, X31
	221 Call Type.GetTypeFromHandle, X0
	222 Move X21, X0
	223 Move X23, X31
	224 Move W19, 7
	225 Compare X20, 0
	226 JumpIfEqual {250}
	227 Move X8, [X20]
	228 Move X10, 0x989000
	229 NotImplemented "Instruction LDRH not yet implemented."
	230 Move X10, [X10+3584]
	231 Move X1, [X10]
	232 Compare X9, 0
	233 JumpIfEqual {240}
	234 Move X10, [X8+176]
	235 Add X10, X10, 8
	236 NotImplemented "Instruction LDUR not yet implemented."
	237 NotImplemented "Instruction CMP not yet implemented."
	238 Subtract X9, X9, 1
	239 Add X10, X10, 16
	240 Move X0, X20
	241 Move W2, W31
	242 Call 0x1C5D788
	243 NotImplemented "Instruction LDRSW not yet implemented."
	244 Add X8, X8, X9
	245 Add X0, X8, 312
	246 Move X8, [X0]
	247 Move X1, [X0+8]
	248 Move X0, X20
	249 NotImplemented "Instruction BLR not yet implemented."
	250 Compare X23, 0
	251 JumpIfNotEqual {273}
	252 NotImplemented "Instruction CMP not yet implemented."
	253 Compare W19, 0
	254 JumpIfNotEqual {257}
	255 Move X8, [X31+8]
	256 Move [X8], X21
	257 Move X20, [X31+96]
	258 Move X19, [X31+104]
	259 Move X22, [X31+80]
	260 Move X21, [X31+88]
	261 Move X24, [X31+64]
	262 Move X23, [X31+72]
	263 Move X26, [X31+48]
	264 Move X25, [X31+56]
	265 Move X28, [X31+32]
	266 Move X27, [X31+40]
	267 Move X29, [X31+16]
	268 Move X30, [X31+24]
	269 Add X31, X31, 112
	270 Return 
	271 Call 0x1C17F20
	272 Call 0x1C17F20
	273 Move X0, X23
	274 Call 0x1C17F18
	275 Call 0x1C17F20
	276 Call 0x1C17F20
	277 Call 0x1C17F20
	278 Move X22, X0
	279 Move X21, X31
	280 Move X22, X0
	281 NotImplemented "Instruction CMP not yet implemented."
	282 Move X0, X22
	283 Call 0x3EB2AD0
	284 Move X23, [X0]
	285 Call 0x3EB2AE0
	286 Move W19, W31
	287 Compare X20, 0
	288 JumpIfNotEqual {227}
	289 Move X23, X31
	290 Move X22, X0
	291 Compare X20, 0
	292 JumpIfEqual {316}
	293 Move X8, [X20]
	294 Move X10, 0x989000
	295 NotImplemented "Instruction LDRH not yet implemented."
	296 Move X10, [X10+3584]
	297 Move X1, [X10]
	298 Compare X9, 0
	299 JumpIfEqual {306}
	300 Move X10, [X8+176]
	301 Add X10, X10, 8
	302 NotImplemented "Instruction LDUR not yet implemented."
	303 NotImplemented "Instruction CMP not yet implemented."
	304 Subtract X9, X9, 1
	305 Add X10, X10, 16
	306 Move X0, X20
	307 Move W2, W31
	308 Call 0x1C5D788
	309 NotImplemented "Instruction LDRSW not yet implemented."
	310 Add X8, X8, X9
	311 Add X0, X8, 312
	312 Move X8, [X0]
	313 Move X1, [X0+8]
	314 Move X0, X20
	315 NotImplemented "Instruction BLR not yet implemented."
	316 Compare X23, 0
	317 JumpIfNotEqual {320}
	318 Move X0, X22
	319 Call 0x1D2D690
	320 Move X0, X23
	321 Call 0x1C17F18
	322 Call 0x1991590

Method: System.Void .ctor()

Disassembly:
	0x0376BAC8 MOV W1, W23
	0x0376BACC BL 0x2DFA48C

ISIL:
	001 Move X1, X31
	002 Call InputBindingComposite..ctor, X0
	003 Return 

