Type: UnityEngine.InputSystem.Composites.ButtonWithOneModifier

Method: System.Single ReadValue(ref UnityEngine.InputSystem.InputBindingCompositeContext context)

Disassembly:
	0x0376B03C LDR W8, [X19 + 0x28]
	0x0376B040 ANDS W31, W0, 0x1
	0x0376B044 FCSEL S0, S11, S8, NE
	0x0376B048 FADD S8, S13, S14
	0x0376B04C FADD S9, S10, S12
	0x0376B050 CMP W8, 0x1
	0x0376B054 FADD S10, S15, S0
	0x0376B058 B.NE 0x376B18C
	0x0376B05C ADRP X19, 0xC6D000
	0x0376B060 LDRB W8, [X19 + 0x785]
	0x0376B064 CBNZ W8, 0x376B07C
	0x0376B068 ADRP X0, 0x988000
	0x0376B06C LDR X0, [X0 + 0x5A8]
	0x0376B070 BL 0x1C16CF4
	0x0376B074 MOVZ W8, 0x1
	0x0376B078 STRB W8, [X19 + 0x785]
	0x0376B07C ADRP X8, 0x988000
	0x0376B080 LDR X8, [X8 + 0x5A8]
	0x0376B084 LDR X0, [X8]
	0x0376B088 LDR W8, [X0 + 0xE0]
	0x0376B08C CBNZ W8, 0x376B094
	0x0376B090 BL 0x1C16DFC
	0x0376B094 FMUL S0, S8, S8
	0x0376B098 FMUL S1, S9, S9
	0x0376B09C ADRP X8, 0xFFFFFFFFFD37F000
	0x0376B0A0 FADD S0, S1, S0
	0x0376B0A4 LDR V1, [X8 + 0x17C]
	0x0376B0A8 FMUL S2, S10, S10

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xC76000
	006 Move W8, [X21+3738]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x9DC000
	014 Move X0, [X0+1784]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+3738], W8
	018 Move X0, X20
	019 Move X1, X19
	020 Call ButtonWithOneModifier.ModifierIsPressed, X0, X1
	021 Move TEMP, X0
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfNotEqual {36}
	025 Move X8, 0x9DC000
	026 Move X8, [X8+1784]
	027 Move W1, [X20+20]
	028 Move X0, X19
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X2, [X8]
	032 Move X30, [X31+32]
	033 Move X21, [X31+40]
	034 Call InputBindingCompositeContext.ReadValue, X0, X1
	035 Return V0
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move S0, W31
	039 Move X30, [X31+32]
	040 Move X21, [X31+40]
	041 Return V0

Method: System.Boolean ModifierIsPressed(ref UnityEngine.InputSystem.InputBindingCompositeContext context)

Disassembly:
	0x0376B0AC FADD S0, S0, S2
	0x0376B0B0 FSQRT S0, S0
	0x0376B0B4 FCMP S0, S1
	0x0376B0B8 B.LE 0x376B154
	0x0376B0BC FDIV S8, S8, S0
	0x0376B0C0 FDIV S9, S9, S0
	0x0376B0C4 FDIV S10, S10, S0
	0x0376B0C8 B 0x376B18C
	0x0376B0CC ADRP X21, 0x9DB000
	0x0376B0D0 LDR X21, [X21 + 0x6F8]
	0x0376B0D4 MOV X0, X20
	0x0376B0D8 LDR X2, [X21]
	0x0376B0DC BL 0x21FB0F0
	0x0376B0E0 LDR W1, [X19 + 0x14]
	0x0376B0E4 LDR X2, [X21]
	0x0376B0E8 MOV X0, X20
	0x0376B0EC MOV V9.16B, V0.16B
	0x0376B0F0 BL 0x21FB0F0
	0x0376B0F4 LDR W1, [X19 + 0x18]
	0x0376B0F8 LDR X2, [X21]
	0x0376B0FC MOV X0, X20
	0x0376B100 MOV V10.16B, V0.16B
	0x0376B104 BL 0x21FB0F0
	0x0376B108 LDR W1, [X19 + 0x1C]
	0x0376B10C LDR X2, [X21]
	0x0376B110 MOV X0, X20
	0x0376B114 MOV V8.16B, V0.16B
	0x0376B118 BL 0x21FB0F0
	0x0376B11C LDR W1, [X19 + 0x20]
	0x0376B120 LDR X2, [X21]
	0x0376B124 MOV X0, X20
	0x0376B128 MOV V11.16B, V0.16B

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W8, [X0+16]
	006 Move X20, X0
	007 Move X19, X1
	008 Move X0, X1
	009 Move W1, W8
	010 Move X2, X31
	011 Call InputBindingCompositeContext.ReadValueAsButton, X0, X1
	012 Move TEMP, X0
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfNotEqual {20}
	016 Move W8, [X20+24]
	017 Compare W8, 0
	018 JumpIfEqual {21}
	019 Move W0, 1
	020 Move W0, W31
	021 Move W1, [X20+20]
	022 Move X0, X19
	023 Move X2, X31
	024 Call InputBindingCompositeContext.GetPressTime, X0, X1
	025 Move W1, [X20+16]
	026 Move X0, X19
	027 Move X2, X31
	028 Move V8, V0
	029 Call InputBindingCompositeContext.GetPressTime, X0, X1
	030 NotImplemented "Instruction FCMP not yet implemented."
	031 NotImplemented "Instruction CSET not yet implemented."
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+8]
	035 Move V8, [X31+32]
	036 Return X0

Method: System.Single EvaluateMagnitude(ref UnityEngine.InputSystem.InputBindingCompositeContext context)

Disassembly:
	0x0376B12C BL 0x21FB0F0
	0x0376B130 LDR W1, [X19 + 0x24]
	0x0376B134 LDR X2, [X21]

ISIL:
	001 Move X8, [X0]
	002 Move X3, [X8+472]
	003 Move X2, [X8+480]
	004 CallNoReturn X3

Method: System.Void FinishSetup(ref UnityEngine.InputSystem.InputBindingCompositeContext context)

Disassembly:
	0x0376B138 MOV X0, X20
	0x0376B13C MOV V12.16B, V0.16B
	0x0376B140 BL 0x21FB0F0
	0x0376B144 FSUB S8, S11, S8
	0x0376B148 FSUB S9, S9, S10
	0x0376B14C FSUB S10, S12, S0
	0x0376B150 B 0x376B18C
	0x0376B154 ADRP X19, 0xC6D000
	0x0376B158 LDRB W8, [X19 + 0x783]
	0x0376B15C CBNZ W8, 0x376B174
	0x0376B160 ADRP X0, 0x988000
	0x0376B164 LDR X0, [X0 + 0x5A0]
	0x0376B168 BL 0x1C16CF4
	0x0376B16C MOVZ W8, 0x1
	0x0376B170 STRB W8, [X19 + 0x783]
	0x0376B174 ADRP X8, 0x988000
	0x0376B178 LDR X8, [X8 + 0x5A0]
	0x0376B17C LDR X8, [X8]
	0x0376B180 LDR X8, [X8 + 0xB8]
	0x0376B184 LDP S8, S9, [X8]
	0x0376B188 LDR V10, [X8 + 0x8]
	0x0376B18C MOV V0.16B, V8.16B
	0x0376B190 MOV V1.16B, V9.16B
	0x0376B194 MOV V2.16B, V10.16B
	0x0376B198 LDP X20, X19, [X31 + 0x50]
	0x0376B19C LDP X30, X21, [X31 + 0x40]
	0x0376B1A0 LDP D9, D8, [X31 + 0x30]
	0x0376B1A4 LDP D11, D10, [X31 + 0x20]
	0x0376B1A8 LDP D13, D12, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xC76000
	005 Move W8, [X20+3739]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x9B1000
	012 Move X0, [X0+624]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3739], W8
	016 Move W8, [X19+24]
	017 Compare W8, 0
	018 JumpIfNotEqual {33}
	019 Move X8, 0x9B1000
	020 Move X8, [X8+624]
	021 Move X0, [X8]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X0, X31
	027 Call InputSystem.get_settings
	028 Compare X0, 0
	029 JumpIfEqual {37}
	030 Move W8, [X0+93]
	031 Xor W8, W8, 1
	032 Move [X19+24], W8
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Return 
	037 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x0376B1AC LDP D15, D14, [X31], #0x60
	0x0376B1B0 RET
	0x0376B1B4 STP X30, X21, [X31 - 0x20]!
	0x0376B1B8 STP X20, X19, [X31 + 0x10]
	0x0376B1BC ADRP X20, 0xC75000
	0x0376B1C0 ADRP X21, 0x9DB000
	0x0376B1C4 LDRB W8, [X20 + 0xEA6]
	0x0376B1C8 LDR X21, [X21 + 0x720]
	0x0376B1CC MOV X19, X0
	0x0376B1D0 TBNZ X8, 0x0, 0x376B1E8
	0x0376B1D4 ADRP X0, 0x9DB000
	0x0376B1D8 LDR X0, [X0 + 0x720]
	0x0376B1DC BL 0x1C16CF4
	0x0376B1E0 MOVZ W8, 0x1
	0x0376B1E4 STRB W8, [X20 + 0xEA6]
	0x0376B1E8 LDR X1, [X21]
	0x0376B1EC MOV X0, X19
	0x0376B1F0 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xC76000
	006 Move X21, 0x9DC000
	007 Move W8, [X20+3740]
	008 Move X21, [X21+1792]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x9DC000
	015 Move X0, [X0+1792]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3740], W8
	019 Move X1, [X21]
	020 Move X0, X19
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X30, [X31+32]
	024 Move X21, [X31+40]
	025 Call InputBindingComposite`1<Single>..ctor, X0
	026 Return 

