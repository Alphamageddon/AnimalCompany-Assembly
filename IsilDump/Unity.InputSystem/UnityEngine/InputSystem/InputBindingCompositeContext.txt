Type: UnityEngine.InputSystem.InputBindingCompositeContext

Method: System.Collections.Generic.IEnumerable`1<UnityEngine.InputSystem.InputBindingCompositeContext/PartBinding> get_controls()

Disassembly:
	0x03754784 ADD X0, X31, 0x4C0
	0x03754788 MOV W1, W28
	0x0375478C BL 0x37519A4
	0x03754790 ADD X0, X31, 0x4C0
	0x03754794 MOV W1, W27
	0x03754798 BL 0x3751A30
	0x0375479C ADD X0, X31, 0x4C0
	0x037547A0 MOV W1, W21
	0x037547A4 BL 0x3751AD4
	0x037547A8 LDRB W8, [X31 + 0x4C4]
	0x037547AC LDRB W9, [X25]
	0x037547B0 STRB W24, [X31 + 0x4C5]
	0x037547B4 AND W8, W8, 0xFFFFFFF3
	0x037547B8 AND W9, W9, 0x8
	0x037547BC ORR W8, W8, W23, 0x0
	0x037547C0 ORR W8, W9, W8, 0x0
	0x037547C4 STRB W8, [X31 + 0x4C4]
	0x037547C8 ADD X0, X31, 0x4C0
	0x037547CC MOV W1, W22
	0x037547D0 BL 0x3751B60
	0x037547D4 LDR W8, [X31 + 0x98]
	0x037547D8 LDR X9, [X31 + 0xF8]
	0x037547DC CMP W23, 0x0
	0x037547E0 CSEL W1, W8, W9, NE
	0x037547E4 LDR X24, [X31 + 0xB0]
	0x037547E8 ADD X0, X31, 0x4C0
	0x037547EC BL 0x3751C90
	0x037547F0 LDR X8, [X31 + 0xD0]
	0x037547F4 LDR W1, [X8 + 0x28]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xC8D000
	006 Move X21, 0x9F2000
	007 Move W8, [X20+3525]
	008 Move X21, [X21+3520]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x9F2000
	015 Move X0, [X0+3520]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3525], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move X1, X31
	022 Move X20, X0
	023 Call Object..ctor, X0
	024 Move TEMP, 1
	025 Not TEMP
	026 Move W8, TEMP
	027 Move X0, X31
	028 Move [X20+16], W8
	029 Call Environment.get_CurrentManagedThreadId
	030 Move [X20+40], W0
	031 Move V0, [X19]
	032 Move X0, X20
	033 Move [X20+4], V0
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X30, [X31+32]
	037 Move X21, [X31+40]
	038 Return X0

Method: System.Single EvaluateMagnitude(System.Int32 partNumber)

Disassembly:
	0x0375482C AND W9, W9, 0xFFFFFFDF
	0x03754830 ORR W8, W9, W8, 0x0
	0x03754834 STRB W8, [X31 + 0x4C4]
	0x03754838 LDP X8, X9, [X31 + 0xC0]
	0x0375483C LDR V1, [X31 + 0x4C]
	0x03754840 SXTW X8, W8
	0x03754844 ADD X8, X9, X8, 0x5, LSL
	0x03754848 STP V1, V0, [X8]
	0x0375484C LDR X8, [X31 + 0x78]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0]
	003 Compare X8, 0
	004 JumpIfEqual {11}
	005 Move W2, W1
	006 Move W1, [X0+8]
	007 Move X0, X8
	008 Move X30, [X31+16]
	009 Call InputActionState.EvaluateCompositePartMagnitude, X0, X1, X2
	010 Return V0
	011 Call 0x1C17F20

Method: TValue ReadValue(System.Int32 partNumber)

Disassembly:
	0x021FC08C MOV X20, X31
	0x021FC090 LDR X0, [X26]
	0x021FC094 CBZ X0, 0x21FC0F0
	0x021FC098 LDR X2, [X23]
	0x021FC09C ADD X8, X31, 0x30
	0x021FC0A0 MOV W1, W28
	0x021FC0A4 BL 0x3003E10
	0x021FC0A8 LDP X0, X1, [X31 + 0x38]
	0x021FC0AC LDP X3, X4, [X31 + 0x18]
	0x021FC0B0 MOV X2, X20
	0x021FC0B4 MOV X5, X29
	0x021FC0B8 MOV X6, X24
	0x021FC0BC MOV X7, X31
	0x021FC0C0 BL 0x3755750
	0x021FC0C4 LDR X8, [X19 + 0x38]
	0x021FC0C8 LDR X0, [X31 + 0x10]
	0x021FC0CC MOVZ W3, 0xA
	0x021FC0D0 MOV X1, X22
	0x021FC0D4 LDR X4, [X8 + 0x18]
	0x021FC0D8 MOV X2, X20
	0x021FC0DC BL 0x2174728
	0x021FC0E0 LDR X27, [X31 + 0x28]
	0x021FC0E4 LDR X0, [X26]
	0x021FC0E8 ADD W28, W28, 0x1
	0x021FC0EC CBNZ X0, 0x21FBD5C

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X2+56]
	007 Move X20, X2
	008 Move W19, W1
	009 Move X21, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {14}
	012 Move X0, X20
	013 Call 0x1C5D6E0
	014 Move [X31+12], W31
	015 Move X0, [X21]
	016 Compare X0, 0
	017 JumpIfEqual {26}
	018 Move X8, [X20+56]
	019 Move W1, [X21+8]
	020 Add X4, X31, 12
	021 Move W2, W19
	022 Move X6, [X8+16]
	023 Move X3, X31
	024 Move X5, X31
	025 Call 0x21F89D0, X0, X1, X2, X3, X4, X5
	026 Move X20, [X31+32]
	027 Move X19, [X31+40]
	028 Move X30, [X31+16]
	029 Move X21, [X31+24]
	030 Add X31, X31, 48
	031 Return X0

Method: TValue ReadValue(System.Int32 partNumber, out UnityEngine.InputSystem.InputControl sourceControl)

Disassembly:
	0x021FC290 STUR X23, [X29 - 0x70]
	0x021FC294 CBZ X0, 0x21FC708
	0x021FC298 LDR W8, [X24]
	0x021FC29C ADRP X27, 0x1EF7000
	0x021FC2A0 MOV W23, W31
	0x021FC2A4 STUR W8, [X29 - 0x8C]
	0x021FC2A8 LDR X27, [X27 + 0x6C0]
	0x021FC2AC STP X25, X24, [X29 - 0x80]
	0x021FC2B0 LDR W8, [X0 + 0x18]
	0x021FC2B4 CMP W23, W8
	0x021FC2B8 B.GE 0x21FC714
	0x021FC2BC ADRP X8, 0x1F1F000
	0x021FC2C0 LDR X8, [X8 + 0xCB8]
	0x021FC2C4 MOV W1, W23
	0x021FC2C8 LDR X2, [X8]
	0x021FC2CC SUB X8, X29, 0x30
	0x021FC2D0 BL 0x3003E10
	0x021FC2D4 LDUR X28, [X29 - 0x30]
	0x021FC2D8 SUB X0, X29, 0x38
	0x021FC2DC MOV X2, X31
	0x021FC2E0 MOV X1, X28
	0x021FC2E4 BL 0x3769CEC
	0x021FC2E8 LDR X8, [X27]
	0x021FC2EC MOV X26, X0
	0x021FC2F0 LDR W9, [X8 + 0xE0]
	0x021FC2F4 CBNZ W9, 0x21FC300
	0x021FC2F8 MOV X0, X8
	0x021FC2FC BL 0x1C16DFC
	0x021FC300 MOV X0, X26
	0x021FC304 MOV X1, X31
	0x021FC308 MOV X2, X31
	0x021FC30C BL 0x3395194
	0x021FC310 TBZ X0, 0x0, 0x21FC430
	0x021FC314 ADRP X8, 0x1EF7000
	0x021FC318 LDR X8, [X8 + 0xAC8]
	0x021FC31C MOVZ W1, 0x7
	0x021FC320 LDR X0, [X8]
	0x021FC324 BL 0x1C16D6C
	0x021FC328 CBZ X0, 0x21FC708
	0x021FC32C LDR W8, [X0 + 0x18]
	0x021FC330 MOV X26, X0
	0x021FC334 CBZ W8, 0x21FC74C
	0x021FC338 ADRP X8, 0x1F1F000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X3+56]
	007 Move X22, X3
	008 Move X19, X2
	009 Move W21, W1
	010 Move X20, X0
	011 Compare X8, 0
	012 JumpIfNotEqual {15}
	013 Move X0, X22
	014 Call 0x1C5D6E0
	015 Move [X31+12], W31
	016 Move X0, [X20]
	017 Compare X0, 0
	018 JumpIfEqual {39}
	019 Move X8, [X22+56]
	020 Move W1, [X20+8]
	021 Add X4, X31, 12
	022 Move W2, W21
	023 Move X6, [X8+16]
	024 Move X3, X31
	025 Move X5, X31
	026 Call 0x21F89D0, X0, X1, X2, X3, X4, X5
	027 NotImplemented "Instruction LDRSW not yet implemented."
	028 Add W31, W8, 1
	029 Move X9, [X20]
	030 Compare X9, 0
	031 JumpIfEqual {47}
	032 Move X9, [X9+24]
	033 Compare X9, 0
	034 JumpIfEqual {47}
	035 Move W10, [X9+24]
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Add X8, X9, X8
	038 Move X8, [X8+32]
	039 Move X8, X31
	040 Move [X19], X8
	041 Move X20, [X31+32]
	042 Move X19, [X31+40]
	043 Move X22, [X31+16]
	044 Move X21, [X31+24]
	045 Move X30, [X31+48]
	046 Return X0
	047 Call 0x1C17F20
	048 Call 0x1C17F28

Method: TValue ReadValue(System.Int32 partNumber, TComparer comparer = null)

Disassembly:
	0x021FC5DC MOV X1, X31
	0x021FC5E0 BL 0x3C0649C
	0x021FC5E4 ADRP X27, 0x1EF7000
	0x021FC5E8 B 0x21FC6F8
	0x021FC5EC MOV X26, X19
	0x021FC5F0 MOV X0, X27
	0x021FC5F4 MOV X2, X25
	0x021FC5F8 BL 0x1C16E10
	0x021FC5FC LDUR X24, [X29 - 0x70]
	0x021FC600 MOV X1, X0
	0x021FC604 MOV X0, X20
	0x021FC608 MOV X2, X24
	0x021FC60C BL 0x3EB1AC0
	0x021FC610 LDR X0, [X21]
	0x021FC614 CBZ X0, 0x21FC708
	0x021FC618 ADRP X8, 0x1F1F000
	0x021FC61C LDR X8, [X8 + 0xCB8]
	0x021FC620 MOV W1, W23
	0x021FC624 MOV X19, X21
	0x021FC628 LDR X2, [X8]
	0x021FC62C SUB X8, X29, 0x30
	0x021FC630 BL 0x3003E10
	0x021FC634 LDP X21, X27, [X29 - 0x28]
	0x021FC638 MOV X0, X25
	0x021FC63C MOV X1, X20
	0x021FC640 MOV X2, X24
	0x021FC644 BL 0x3EB1AC0
	0x021FC648 LDR X8, [X26 + 0x38]
	0x021FC64C MOV X1, X25
	0x021FC650 LDR X0, [X8 + 0x8]
	0x021FC654 BL 0x1C16E04

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X3+56]
	007 Move X21, X3
	008 Move X20, X2
	009 Move W19, W1
	010 Move X22, X0
	011 Compare X8, 0
	012 JumpIfNotEqual {15}
	013 Move X0, X21
	014 Call 0x1C5D6E0
	015 Move [X31+12], W31
	016 Move X0, [X22]
	017 Compare X0, 0
	018 JumpIfEqual {27}
	019 Move X8, [X21+56]
	020 Move W1, [X22+8]
	021 And X5, X20, 255
	022 Add X4, X31, 12
	023 Move X6, [X8+16]
	024 Move W2, W19
	025 Move X3, X31
	026 Call InputActionState.ReadCompositePartValue, X0, X1, X2, X3, X4, X5
	027 Move S0, W31
	028 Move S1, W31
	029 Move S2, W31
	030 Move S3, W31
	031 Move X20, [X31+32]
	032 Move X19, [X31+40]
	033 Move X22, [X31+16]
	034 Move X21, [X31+24]
	035 Move X30, [X31+48]
	036 Return X0

Method: TValue ReadValue(System.Int32 partNumber, out UnityEngine.InputSystem.InputControl sourceControl, TComparer comparer = null)

Disassembly:
	0x021FC858 LDR X0, [X0 + 0xD00]
	0x021FC85C BL 0x1C16D08
	0x021FC860 MOV X2, X0
	0x021FC864 MOVZ W1, 0x2
	0x021FC868 MOV X0, X21
	0x021FC86C BL 0x1993444
	0x021FC870 LDR X8, [X19 + 0x38]
	0x021FC874 ADRP X0, 0x1EF7000
	0x021FC878 LDR X22, [X8 + 0x8]
	0x021FC87C LDR X0, [X0 + 0x6C0]
	0x021FC880 BL 0x1C16D08
	0x021FC884 BL 0x19903D0
	0x021FC888 MOV X0, X22
	0x021FC88C MOV X1, X31
	0x021FC890 BL 0x338C698
	0x021FC894 MOV X22, X0
	0x021FC898 BL 0x19903C0
	0x021FC89C LDR X8, [X22]
	0x021FC8A0 MOV X0, X22
	0x021FC8A4 LDP X9, X1, [X8 + 0x1A8]
	0x021FC8A8 BLR X9
	0x021FC8AC MOV X22, X0
	0x021FC8B0 MOV X0, X21
	0x021FC8B4 BL 0x19903C0
	0x021FC8B8 MOVZ W1, 0x3
	0x021FC8BC MOV X0, X21
	0x021FC8C0 MOV X2, X22
	0x021FC8C4 BL 0x1993444
	0x021FC8C8 MOV X0, X21
	0x021FC8CC BL 0x19903C0
	0x021FC8D0 ADRP X0, 0x1F1F000
	0x021FC8D4 LDR X0, [X0 + 0xD08]
	0x021FC8D8 BL 0x1C16D08
	0x021FC8DC MOV X2, X0
	0x021FC8E0 MOVZ W1, 0x4
	0x021FC8E4 MOV X0, X21
	0x021FC8E8 BL 0x1993444
	0x021FC8EC MOV X0, X20
	0x021FC8F0 BL 0x19903C0
	0x021FC8F4 MOV X0, X20
	0x021FC8F8 MOV X1, X31
	0x021FC8FC BL 0x33BE520
	0x021FC900 MOV X20, X0
	0x021FC904 BL 0x19903C0
	0x021FC908 LDR X8, [X20]
	0x021FC90C MOV X0, X20
	0x021FC910 LDP X9, X1, [X8 + 0x1A8]
	0x021FC914 BLR X9
	0x021FC918 MOV X20, X0
	0x021FC91C MOV X0, X21
	0x021FC920 BL 0x19903C0
	0x021FC924 MOVZ W1, 0x5

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X8, [X4+56]
	009 Move X23, X4
	010 Move X22, X3
	011 Move X19, X2
	012 Move W21, W1
	013 Move X20, X0
	014 Compare X8, 0
	015 JumpIfNotEqual {18}
	016 Move X0, X23
	017 Call 0x1C5D6E0
	018 Move [X31+12], W31
	019 Move X0, [X20]
	020 Compare X0, 0
	021 JumpIfEqual {42}
	022 Move X8, [X23+56]
	023 Move W1, [X20+8]
	024 And X5, X22, 255
	025 Add X4, X31, 12
	026 Move X6, [X8+16]
	027 Move W2, W21
	028 Move X3, X31
	029 Call InputActionState.ReadCompositePartValue, X0, X1, X2, X3, X4, X5
	030 NotImplemented "Instruction LDRSW not yet implemented."
	031 Add W31, W8, 1
	032 Move X9, [X20]
	033 Compare X9, 0
	034 JumpIfEqual {57}
	035 Move X9, [X9+24]
	036 Compare X9, 0
	037 JumpIfEqual {57}
	038 Move W10, [X9+24]
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Add X8, X9, X8
	041 Move X8, [X8+32]
	042 Move X8, X31
	043 Move S0, W31
	044 Move S1, W31
	045 Move S2, W31
	046 Move S3, W31
	047 Move X8, X31
	048 Move [X19], X8
	049 Move X20, [X31+48]
	050 Move X19, [X31+56]
	051 Move X22, [X31+32]
	052 Move X21, [X31+40]
	053 Move X30, [X31+16]
	054 Move X23, [X31+24]
	055 Add X31, X31, 64
	056 Return X0
	057 Call 0x1C17F20
	058 Call 0x1C17F28

Method: System.Boolean ReadValueAsButton(System.Int32 partNumber)

Disassembly:
	0x03754850 ADD X19, X19, 0x1
	0x03754854 CMP X19, X8
	0x03754858 B.NE 0x3754060
	0x0375485C B 0x3754C44
	0x03754860 BL 0x1C16F20
	0x03754864 B 0x37550BC
	0x03754868 ADD X0, X31, 0x180
	0x0375486C MOVZ W2, 0x58
	0x03754870 MOV X1, X28
	0x03754874 MOV X22, X28
	0x03754878 BL 0x3EB1B30
	0x0375487C ADRP X0, 0x9CA000
	0x03754880 LDR X0, [X0 + 0x4E0]
	0x03754884 BL 0x1C16D08
	0x03754888 ADD X1, X31, 0x180
	0x0375488C BL 0x1C16E04
	0x03754890 MOV X20, X0
	0x03754894 ADRP X0, 0x9F1000
	0x03754898 LDR X0, [X0 + 0xE20]
	0x0375489C BL 0x1C16D08
	0x037548A0 MOV X1, X20
	0x037548A4 MOV X2, X31
	0x037548A8 BL 0x321EFD0
	0x037548AC MOV X20, X0
	0x037548B0 ADRP X0, 0x99F000
	0x037548B4 LDR X0, [X0 + 0x5B0]
	0x037548B8 BL 0x1C16D08
	0x037548BC BL 0x1C16F10
	0x037548C0 MOV X21, X0
	0x037548C4 MOV X1, X20
	0x037548C8 MOV X2, X31
	0x037548CC BL 0x337DF1C
	0x037548D0 ADRP X0, 0x9F1000

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xC8D000
	007 Move W8, [X21+3526]
	008 Move W19, W1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x9F2000
	015 Move X0, [X0+3528]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3526], W8
	019 Move [X31+8], W31
	020 Move X0, [X20]
	021 Compare X0, 0
	022 JumpIfEqual {36}
	023 Move X8, 0x9F2000
	024 Move X8, [X8+3528]
	025 Move [X31+12], W31
	026 Move W1, [X20+8]
	027 Add X3, X31, 12
	028 Move X6, [X8]
	029 Add X4, X31, 8
	030 Move W2, W19
	031 Move X5, X31
	032 Call InputActionState.ReadCompositePartValue, X0, X1, X2, X3, X4, X5
	033 Move W8, [X31+12]
	034 NotImplemented "Instruction CMP not yet implemented."
	035 NotImplemented "Instruction CSET not yet implemented."
	036 Move X20, [X31+32]
	037 Move X19, [X31+40]
	038 Move X30, [X31+16]
	039 Move X21, [X31+24]
	040 Add X31, X31, 48
	041 Return X0

Method: System.Void ReadValue(System.Int32 partNumber, System.Void* buffer, System.Int32 bufferSize)

Disassembly:
	0x037548D4 LDR X0, [X0 + 0xE28]
	0x037548D8 BL 0x1C16D08
	0x037548DC MOV X1, X0
	0x037548E0 MOV X0, X21
	0x037548E4 BL 0x1C16DEC
	0x037548E8 B 0x37550E8
	0x037548EC BL 0x1C16F20
	0x037548F0 B 0x37550BC
	0x037548F4 BL 0x1C16F28

ISIL:
	001 Move X8, X0
	002 Move X0, [X0]
	003 Compare X0, 0
	004 JumpIfEqual {11}
	005 Move W4, W3
	006 Move X3, X2
	007 Move W2, W1
	008 Move W1, [X8+8]
	009 Call InputActionState.ReadCompositePartValue, X0, X1, X2, X3, X4
	010 Return 
	011 Return 

Method: System.Object ReadValueAsObject(System.Int32 partNumber)

Disassembly:
	0x037548F8 B 0x37550BC
	0x037548FC LDR X1, [X31 + 0xA8]
	0x03754900 ADD X0, X31, 0x180
	0x03754904 MOVZ W2, 0x58
	0x03754908 BL 0x3EB1B30
	0x0375490C ADRP X0, 0x9CA000
	0x03754910 LDR X0, [X0 + 0x4E0]
	0x03754914 BL 0x1C16D08
	0x03754918 ADD X1, X31, 0x180

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0]
	003 Compare X8, 0
	004 JumpIfEqual {11}
	005 Move W2, W1
	006 Move W1, [X0+8]
	007 Move X0, X8
	008 Move X30, [X31+16]
	009 Call InputActionState.ReadCompositePartValueAsObject, X0, X1, X2
	010 Return X0
	011 Call 0x1C17F20

Method: System.Double GetPressTime(System.Int32 partNumber)

Disassembly:
	0x0375491C BL 0x1C16E04
	0x03754920 LDR X8, [X31 + 0x40]
	0x03754924 LDR X8, [X8]
	0x03754928 CBNZ X8, 0x3754944
	0x0375492C BL 0x1C16F20
	0x03754930 B 0x37550BC
	0x03754934 BL 0x1C16F20
	0x03754938 B 0x37550BC
	0x0375493C BL 0x1C16F28

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0]
	003 Compare X8, 0
	004 JumpIfEqual {11}
	005 Move W2, W1
	006 Move W1, [X0+8]
	007 Move X0, X8
	008 Move X30, [X31+16]
	009 Call InputActionState.GetCompositePartPressTime, X0, X1, X2
	010 Return V0
	011 Call 0x1C17F20

