Type: UnityEngine.InputSystem.InputControlList`1

Method: System.Int32 get_Count()

Disassembly:
	0x02DFB330 MOV X19, X2
	0x02DFB334 MOV W21, W1

ISIL:
	001 Move W0, [X0]
	002 Return X0

Method: System.Int32 get_Capacity()

Disassembly:
	0x02DFB338 MOV X20, X0
	0x02DFB33C TBNZ X8, 0x0, 0x2DFB354
	0x02DFB340 ADRP X0, 0x1323000
	0x02DFB344 LDR X0, [X0 + 0xFA8]
	0x02DFB348 BL 0x1C16CF4
	0x02DFB34C MOVZ W8, 0x1
	0x02DFB350 STRB W8, [X22 + 0x9DE]
	0x02DFB354 TBNZ X21, 0x1F, 0x2DFB38C
	0x02DFB358 LDR W8, [X20]
	0x02DFB35C CMP W8, W21
	0x02DFB360 B.LE 0x2DFB38C
	0x02DFB364 ADRP X8, 0x1323000
	0x02DFB368 LDR X8, [X8 + 0xFA8]
	0x02DFB36C LDP X0, X1, [X20 + 0x8]
	0x02DFB370 MOV X2, X20
	0x02DFB374 MOV W3, W21
	0x02DFB378 LDR X4, [X8]
	0x02DFB37C LDP X20, X19, [X31 + 0x20]
	0x02DFB380 LDP X22, X21, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x15E1000
	005 Move W8, [X20+2519]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x1324000
	012 Move X0, [X0+3936]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2519], W8
	016 Move X8, [X19+8]
	017 Compare X8, 0
	018 JumpIfEqual {20}
	019 Move W0, [X19+16]
	020 Move W0, W31
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X30, [X31+32]
	024 Return X0

Method: System.Void set_Capacity(System.Int32 value)

Disassembly:
	0x02DFB384 LDR X30, [X31], #0x30
	0x02DFB388 B 0x21780F0
	0x02DFB38C STR W21, [X31 + 0xC]
	0x02DFB390 ADRP X21, 0x12F8000
	0x02DFB394 LDR X21, [X21 + 0x758]
	0x02DFB398 MOV X0, X21
	0x02DFB39C BL 0x1C16D08
	0x02DFB3A0 ADD X1, X31, 0xC
	0x02DFB3A4 BL 0x1C16E04
	0x02DFB3A8 LDR W8, [X20]
	0x02DFB3AC MOV X22, X0
	0x02DFB3B0 MOV X0, X21
	0x02DFB3B4 STR W8, [X31 + 0x8]
	0x02DFB3B8 BL 0x1C16D08
	0x02DFB3BC ADD X1, X31, 0x8
	0x02DFB3C0 BL 0x1C16E04
	0x02DFB3C4 MOV X20, X0
	0x02DFB3C8 ADRP X0, 0x1323000
	0x02DFB3CC LDR X0, [X0 + 0xFB0]
	0x02DFB3D0 BL 0x1C16D08
	0x02DFB3D4 MOV X1, X22
	0x02DFB3D8 MOV X2, X20
	0x02DFB3DC MOV X3, X31
	0x02DFB3E0 BL 0x3227BD4
	0x02DFB3E4 MOV X20, X0
	0x02DFB3E8 ADRP X0, 0x1300000
	0x02DFB3EC LDR X0, [X0 + 0x760]
	0x02DFB3F0 BL 0x1C16D08
	0x02DFB3F4 BL 0x1C16F10
	0x02DFB3F8 MOV X21, X0
	0x02DFB3FC ADRP X0, 0x1303000
	0x02DFB400 LDR X0, [X0 + 0x130]
	0x02DFB404 BL 0x1C16D08
	0x02DFB408 MOV X1, X0
	0x02DFB40C MOV X0, X21
	0x02DFB410 MOV X2, X20
	0x02DFB414 MOV X3, X31
	0x02DFB418 BL 0x3311888
	0x02DFB41C MOV X0, X21
	0x02DFB420 MOV X1, X19
	0x02DFB424 BL 0x1C16DEC
	0x02DFB428 STR X30, [X31 - 0x20]!
	0x02DFB42C STP X20, X19, [X31 + 0x10]
	0x02DFB430 ADRP X0, 0x1301000
	0x02DFB434 LDR X0, [X0 + 0x758]
	0x02DFB438 MOV X19, X3
	0x02DFB43C BL 0x1C16D08
	0x02DFB440 BL 0x1C16F10
	0x02DFB444 MOV X1, X31
	0x02DFB448 MOV X20, X0
	0x02DFB44C BL 0x3380288
	0x02DFB450 MOV X0, X20
	0x02DFB454 MOV X1, X19
	0x02DFB458 BL 0x1C16DEC
	0x02DFB45C STR X30, [X31 - 0x20]!
	0x02DFB460 STP X20, X19, [X31 + 0x10]
	0x02DFB464 LDR X8, [X2 + 0x20]
	0x02DFB468 MOV X19, X1
	0x02DFB46C MOV X20, X0
	0x02DFB470 LDRB W9, [X8 + 0x135]
	0x02DFB474 TBNZ X9, 0x0, 0x2DFB484
	0x02DFB478 MOV X0, X8
	0x02DFB47C BL 0x1C5C684
	0x02DFB480 MOV X8, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x15E1000
	007 Move W8, [X22+2520]
	008 Move X19, X2
	009 Move W21, W1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x1324000
	016 Move X0, [X0+3944]
	017 Call 0x1C17CF4
	018 Move X0, 0x1324000
	019 Move X0, [X0+3952]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+2520], W8
	023 Move TEMP, X21
	024 And TEMP, TEMP, -2147483648
	025 Compare TEMP, -2147483648
	026 JumpIfEqual {60}
	027 Compare W21, 0
	028 JumpIfEqual {45}
	029 Move X9, 0x1324000
	030 Move W8, [X20+24]
	031 Move X9, [X9+3944]
	032 Add X0, X20, 8
	033 Move W1, W21
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X3, [X9]
	037 Move X22, [X31+16]
	038 Move X21, [X31+24]
	039 Move W10, 4
	040 NotImplemented "Instruction CMP not yet implemented."
	041 NotImplemented "Instruction CSEL not yet implemented."
	042 Move X30, [X31+48]
	043 Call 0x217CF00, X0, X1, X2
	044 Return 
	045 Move W8, [X20]
	046 Compare W8, 0
	047 JumpIfEqual {53}
	048 Move X8, 0x1324000
	049 Move X8, [X8+3952]
	050 Add X0, X20, 8
	051 Move X1, [X8]
	052 Call NativeArray`1<UInt64>.Dispose, X0
	053 Move [X20], W31
	054 Move X20, [X31+32]
	055 Move X19, [X31+40]
	056 Move X22, [X31+16]
	057 Move X21, [X31+24]
	058 Move X30, [X31+48]
	059 Return 
	060 Move X0, 0x1301000
	061 Move X0, [X0+1400]
	062 Call 0x1C17D08
	063 Call 0x1C17F10
	064 Move X20, X0
	065 Move X0, 0x1324000
	066 Move X0, [X0+3960]
	067 Call 0x1C17D08
	068 Move X21, X0
	069 Move X0, 0x1303000
	070 Move X0, [X0+3784]
	071 Call 0x1C17D08
	072 Move X2, X0
	073 Move X0, X20
	074 Move X1, X21
	075 Move X3, X31
	076 Call ArgumentException..ctor, X0, X1, X2
	077 Move X0, X20
	078 Move X1, X19
	079 Call 0x1C17DEC

Method: System.Boolean get_IsReadOnly()

Disassembly:
	0x02DFB484 LDR X8, [X8 + 0xC0]
	0x02DFB488 MOV X0, X20

ISIL:
	001 Move W0, W31
	002 Return X0

Method: TControl get_Item(System.Int32 index)

Disassembly:
	0x02DFB48C MOV X1, X19
	0x02DFB490 LDP X20, X19, [X31 + 0x10]
	0x02DFB494 LDR X4, [X8 + 0x90]
	0x02DFB498 MOVN W3, 0x0
	0x02DFB49C MOV W2, W31
	0x02DFB4A0 LDR X30, [X31], #0x20
	0x02DFB4A4 B 0x2DFB4A8
	0x02DFB4A8 STR X30, [X31 - 0x40]!
	0x02DFB4AC STP X24, X23, [X31 + 0x10]
	0x02DFB4B0 STP X22, X21, [X31 + 0x20]
	0x02DFB4B4 STP X20, X19, [X31 + 0x30]
	0x02DFB4B8 ADRP X24, 0x15E0000
	0x02DFB4BC LDRB W8, [X24 + 0x9DF]
	0x02DFB4C0 MOV X20, X4
	0x02DFB4C4 MOV W23, W3
	0x02DFB4C8 MOV W19, W2
	0x02DFB4CC MOV X22, X1
	0x02DFB4D0 MOV X21, X0
	0x02DFB4D4 TBNZ X8, 0x0, 0x2DFB4EC
	0x02DFB4D8 ADRP X0, 0x1323000
	0x02DFB4DC LDR X0, [X0 + 0xC60]
	0x02DFB4E0 BL 0x1C16CF4
	0x02DFB4E4 MOVZ W8, 0x1
	0x02DFB4E8 STRB W8, [X24 + 0x9DF]
	0x02DFB4EC TBNZ X19, 0x1F, 0x2DFB588
	0x02DFB4F0 LDR W8, [X21]
	0x02DFB4F4 CBZ W8, 0x2DFB56C
	0x02DFB4F8 SUB W9, W8, W19
	0x02DFB4FC BIC W9, W9, W9, 0x1F
	0x02DFB500 CMP W23, 0x0
	0x02DFB504 CSEL W23, W23, W9, GE
	0x02DFB508 ADD W9, W23, W19
	0x02DFB50C CMP W9, W8
	0x02DFB510 B.GT 0x2DFB5D0
	0x02DFB514 LDR X0, [X20 + 0x20]
	0x02DFB518 ADRP X20, 0x1323000
	0x02DFB51C LDRB W8, [X0 + 0x135]
	0x02DFB520 LDR X20, [X20 + 0xC60]
	0x02DFB524 TBNZ X8, 0x0, 0x2DFB52C
	0x02DFB528 BL 0x1C5C684
	0x02DFB52C MOV X0, X22
	0x02DFB530 BL 0x2DFBBE4
	0x02DFB534 LDP X8, X1, [X21 + 0x8]
	0x02DFB538 LDR X2, [X20]
	0x02DFB53C MOV X20, X0
	0x02DFB540 MOV X0, X8
	0x02DFB544 BL 0x22226D8
	0x02DFB548 CMP W23, 0x1
	0x02DFB54C B.LT 0x2DFB56C
	0x02DFB550 MOV W8, W23
	0x02DFB554 LDR X9, [X0, W19, SXTW]
	0x02DFB558 CMP X9, X20
	0x02DFB55C B.EQ 0x2DFB570
	0x02DFB560 SUBS X8, X8, 0x1
	0x02DFB564 ADD W19, W19, 0x1
	0x02DFB568 B.NE 0x2DFB554
	0x02DFB56C MOVN W19, 0x0
	0x02DFB570 MOV W0, W19
	0x02DFB574 LDP X20, X19, [X31 + 0x30]
	0x02DFB578 LDP X22, X21, [X31 + 0x20]
	0x02DFB57C LDP X24, X23, [X31 + 0x10]
	0x02DFB580 LDR X30, [X31], #0x40
	0x02DFB584 RET

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move TEMP, X1
	007 And TEMP, TEMP, -2147483648
	008 Compare TEMP, -2147483648
	009 JumpIfEqual {33}
	010 Move W8, [X0]
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Move X8, [X2+32]
	013 Move X9, [X0+8]
	014 Move W10, [X8+309]
	015 Move X19, [X9]
	016 Move TEMP, X10
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {23}
	020 Move X0, X8
	021 Call 0x1C5D684
	022 Move X8, X0
	023 Move X8, [X8+192]
	024 Move X0, X19
	025 Move X20, [X31+32]
	026 Move X19, [X31+40]
	027 Move X22, [X31+16]
	028 Move X21, [X31+24]
	029 Move X1, [X8+8]
	030 Move X30, [X31+48]
	031 Call 0x2DFCC70, X0
	032 Return X0
	033 Move [X31+12], W1
	034 Move X20, 0x12F9000
	035 Move X20, [X20+1880]
	036 Move X22, X0
	037 Move X19, X2
	038 Move X0, X20
	039 Call 0x1C17D08
	040 Add X1, X31, 12
	041 Call 0x1C17E04
	042 Move W8, [X22]
	043 Move X21, X0
	044 Move X0, X20
	045 Move [X31+8], W8
	046 Call 0x1C17D08
	047 Add X1, X31, 8
	048 Call 0x1C17E04
	049 Move X20, X0
	050 Move X0, 0x1324000
	051 Move X0, [X0+3968]
	052 Call 0x1C17D08
	053 Move X1, X21
	054 Move X2, X20
	055 Move X3, X31
	056 Call String.Format, X0, X1, X2
	057 Move X20, X0
	058 Move X0, 0x1301000
	059 Move X0, [X0+1888]
	060 Call 0x1C17D08
	061 Call 0x1C17F10
	062 Move X21, X0
	063 Move X0, 0x1304000
	064 Move X0, [X0+304]
	065 Call 0x1C17D08
	066 Move X1, X0
	067 Move X0, X21
	068 Move X2, X20
	069 Move X3, X31
	070 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	071 Move X0, X21
	072 Move X1, X19
	073 Call 0x1C17DEC

Method: System.Void set_Item(System.Int32 index, TControl value)

Disassembly:
	0x02DFB588 ADRP X0, 0x1300000
	0x02DFB58C LDR X0, [X0 + 0x760]
	0x02DFB590 BL 0x1C16D08
	0x02DFB594 BL 0x1C16F10
	0x02DFB598 MOV X19, X0
	0x02DFB59C ADRP X0, 0x1320000
	0x02DFB5A0 LDR X0, [X0 + 0x658]
	0x02DFB5A4 BL 0x1C16D08
	0x02DFB5A8 MOV X21, X0
	0x02DFB5AC ADRP X0, 0x1323000
	0x02DFB5B0 LDR X0, [X0 + 0xFB8]
	0x02DFB5B4 BL 0x1C16D08
	0x02DFB5B8 MOV X2, X0
	0x02DFB5BC MOV X0, X19
	0x02DFB5C0 MOV X1, X21
	0x02DFB5C4 MOV X3, X31
	0x02DFB5C8 BL 0x3311888
	0x02DFB5CC B 0x2DFB600
	0x02DFB5D0 ADRP X0, 0x1300000
	0x02DFB5D4 LDR X0, [X0 + 0x760]
	0x02DFB5D8 BL 0x1C16D08
	0x02DFB5DC BL 0x1C16F10
	0x02DFB5E0 MOV X19, X0
	0x02DFB5E4 ADRP X0, 0x1320000
	0x02DFB5E8 LDR X0, [X0 + 0x648]
	0x02DFB5EC BL 0x1C16D08
	0x02DFB5F0 MOV X1, X0
	0x02DFB5F4 MOV X0, X19
	0x02DFB5F8 MOV X2, X31
	0x02DFB5FC BL 0x3316014
	0x02DFB600 MOV X0, X19
	0x02DFB604 MOV X1, X20
	0x02DFB608 BL 0x1C16DEC
	0x02DFB60C STR X30, [X31 - 0x20]!
	0x02DFB610 STP X20, X19, [X31 + 0x10]
	0x02DFB614 ADRP X0, 0x1301000
	0x02DFB618 LDR X0, [X0 + 0x758]
	0x02DFB61C MOV X19, X3
	0x02DFB620 BL 0x1C16D08
	0x02DFB624 BL 0x1C16F10
	0x02DFB628 MOV X1, X31
	0x02DFB62C MOV X20, X0
	0x02DFB630 BL 0x3380288
	0x02DFB634 MOV X0, X20
	0x02DFB638 MOV X1, X19
	0x02DFB63C BL 0x1C16DEC
	0x02DFB640 STR W31, [X0]
	0x02DFB644 RET
	0x02DFB648 STR X30, [X31 - 0x20]!
	0x02DFB64C STP X20, X19, [X31 + 0x10]
	0x02DFB650 LDR X8, [X2 + 0x20]
	0x02DFB654 MOV X19, X1
	0x02DFB658 MOV X20, X0
	0x02DFB65C LDRB W9, [X8 + 0x135]
	0x02DFB660 TBNZ X9, 0x0, 0x2DFB670
	0x02DFB664 MOV X0, X8
	0x02DFB668 BL 0x1C5C684
	0x02DFB66C MOV X8, X0
	0x02DFB670 LDR X8, [X8 + 0xC0]
	0x02DFB674 MOV X0, X20
	0x02DFB678 MOV X1, X19
	0x02DFB67C LDR X2, [X8 + 0x98]
	0x02DFB680 BL 0x2DFB45C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move W20, W1
	007 Move X19, X0
	008 Move TEMP, X1
	009 And TEMP, TEMP, -2147483648
	010 Compare TEMP, -2147483648
	011 JumpIfEqual {32}
	012 Move W8, [X19]
	013 NotImplemented "Instruction CMP not yet implemented."
	014 Move X0, [X3+32]
	015 Move X21, X2
	016 Move W8, [X0+309]
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {22}
	021 Call 0x1C5D684
	022 Move X0, X21
	023 Call 0x2DFCBE4, X0
	024 Move X8, [X19+8]
	025 Move X22, [X31+16]
	026 Move X21, [X31+24]
	027 Move [X8], X0
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X30, [X31+48]
	031 Return 
	032 Move [X31+12], W20
	033 Move X20, 0x12F9000
	034 Move X20, [X20+1880]
	035 Move X22, X19
	036 Move X19, X3
	037 Move X0, X20
	038 Call 0x1C17D08
	039 Add X1, X31, 12
	040 Call 0x1C17E04
	041 Move W8, [X22]
	042 Move X21, X0
	043 Move X0, X20
	044 Move [X31+8], W8
	045 Call 0x1C17D08
	046 Add X1, X31, 8
	047 Call 0x1C17E04
	048 Move X20, X0
	049 Move X0, 0x1324000
	050 Move X0, [X0+3968]
	051 Call 0x1C17D08
	052 Move X1, X21
	053 Move X2, X20
	054 Move X3, X31
	055 Call String.Format, X0, X1, X2
	056 Move X20, X0
	057 Move X0, 0x1301000
	058 Move X0, [X0+1888]
	059 Call 0x1C17D08
	060 Call 0x1C17F10
	061 Move X21, X0
	062 Move X0, 0x1304000
	063 Move X0, [X0+304]
	064 Call 0x1C17D08
	065 Move X1, X0
	066 Move X0, X21
	067 Move X2, X20
	068 Move X3, X31
	069 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	070 Move X0, X21
	071 Move X1, X19
	072 Call 0x1C17DEC

Method: System.Void .ctor(Unity.Collections.Allocator allocator, System.Int32 initialCapacity = 0)

Disassembly:
	0x02DFB684 LDP X20, X19, [X31 + 0x10]
	0x02DFB688 ADDS W31, W0, 0x1
	0x02DFB68C CSET W0, NE
	0x02DFB690 LDR X30, [X31], #0x20
	0x02DFB694 RET
	0x02DFB698 STR X30, [X31 - 0x30]!
	0x02DFB69C STP X22, X21, [X31 + 0x10]
	0x02DFB6A0 STP X20, X19, [X31 + 0x20]
	0x02DFB6A4 LDR X8, [X4 + 0x20]
	0x02DFB6A8 MOV W19, W3
	0x02DFB6AC MOV W20, W2
	0x02DFB6B0 MOV X21, X1
	0x02DFB6B4 LDRB W9, [X8 + 0x135]
	0x02DFB6B8 MOV X22, X0
	0x02DFB6BC TBNZ X9, 0x0, 0x2DFB6CC
	0x02DFB6C0 MOV X0, X8
	0x02DFB6C4 BL 0x1C5C684
	0x02DFB6C8 MOV X8, X0
	0x02DFB6CC LDR X8, [X8 + 0xC0]
	0x02DFB6D0 MOV X0, X22
	0x02DFB6D4 MOV X1, X21
	0x02DFB6D8 MOV W2, W20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move [X0+24], W1
	005 Move [X0+8], X31
	006 Move [X0+16], X31
	007 Move [X0], W31
	008 Compare W2, 0
	009 JumpIfEqual {28}
	010 Move X20, X0
	011 Move X0, [X3+32]
	012 Move W19, W2
	013 Move W8, [X0+309]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {19}
	018 Call 0x1C5D684
	019 Move X8, [X0+192]
	020 Move X0, X20
	021 Move W1, W19
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X2, [X8+40]
	025 Move X30, [X31+32]
	026 Call 0x2DFB384, X0, X1
	027 Return 
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X30, [X31+32]
	031 Return 

Method: System.Void .ctor(System.Collections.Generic.IEnumerable`1<TControl> values, Unity.Collections.Allocator allocator = 4)

Disassembly:
	0x02DFB6DC LDR X4, [X8 + 0x90]
	0x02DFB6E0 MOV W3, W19
	0x02DFB6E4 BL 0x2DFB4A8
	0x02DFB6E8 LDP X20, X19, [X31 + 0x20]
	0x02DFB6EC LDP X22, X21, [X31 + 0x10]
	0x02DFB6F0 ADDS W31, W0, 0x1
	0x02DFB6F4 CSET W0, NE
	0x02DFB6F8 LDR X30, [X31], #0x30
	0x02DFB6FC RET
	0x02DFB700 STP X30, X23, [X31 - 0x30]!
	0x02DFB704 STP X22, X21, [X31 + 0x10]
	0x02DFB708 STP X20, X19, [X31 + 0x20]
	0x02DFB70C ADRP X23, 0x15E0000
	0x02DFB710 LDRB W8, [X23 + 0x9E0]
	0x02DFB714 MOV X19, X3
	0x02DFB718 MOV W20, W2
	0x02DFB71C MOV W21, W1
	0x02DFB720 MOV X22, X0
	0x02DFB724 TBNZ X8, 0x0, 0x2DFB73C
	0x02DFB728 ADRP X0, 0x1323000
	0x02DFB72C LDR X0, [X0 + 0xFC0]
	0x02DFB730 BL 0x1C16CF4
	0x02DFB734 MOVZ W8, 0x1
	0x02DFB738 STRB W8, [X23 + 0x9E0]
	0x02DFB73C TBNZ X21, 0x1F, 0x2DFB798
	0x02DFB740 LDR W8, [X22]
	0x02DFB744 CMP W8, W21
	0x02DFB748 B.LE 0x2DFB798
	0x02DFB74C TBNZ X20, 0x1F, 0x2DFB7B8
	0x02DFB750 CMP W8, W20
	0x02DFB754 B.LE 0x2DFB7B8
	0x02DFB758 CMP W21, W20
	0x02DFB75C B.NE 0x2DFB770
	0x02DFB760 LDP X20, X19, [X31 + 0x20]
	0x02DFB764 LDP X22, X21, [X31 + 0x10]
	0x02DFB768 LDP X30, X23, [X31], #0x30
	0x02DFB76C RET
	0x02DFB770 ADRP X8, 0x1323000
	0x02DFB774 LDP X0, X1, [X22 + 0x8]
	0x02DFB778 LDR X8, [X8 + 0xFC0]
	0x02DFB77C MOV W2, W21
	0x02DFB780 MOV W3, W20
	0x02DFB784 LDP X20, X19, [X31 + 0x20]
	0x02DFB788 LDR X4, [X8]
	0x02DFB78C LDP X22, X21, [X31 + 0x10]
	0x02DFB790 LDP X30, X23, [X31], #0x30
	0x02DFB794 B 0x217C71C
	0x02DFB798 ADRP X0, 0x1300000
	0x02DFB79C LDR X0, [X0 + 0x760]
	0x02DFB7A0 BL 0x1C16D08
	0x02DFB7A4 BL 0x1C16F10
	0x02DFB7A8 MOV X20, X0
	0x02DFB7AC ADRP X0, 0x1323000
	0x02DFB7B0 LDR X0, [X0 + 0xFC8]
	0x02DFB7B4 B 0x2DFB7D4
	0x02DFB7B8 ADRP X0, 0x1300000
	0x02DFB7BC LDR X0, [X0 + 0x760]
	0x02DFB7C0 BL 0x1C16D08
	0x02DFB7C4 BL 0x1C16F10
	0x02DFB7C8 MOV X20, X0
	0x02DFB7CC ADRP X0, 0x1323000
	0x02DFB7D0 LDR X0, [X0 + 0xFD0]
	0x02DFB7D4 BL 0x1C16D08
	0x02DFB7D8 MOV X1, X0
	0x02DFB7DC MOV X0, X20
	0x02DFB7E0 MOV X2, X31
	0x02DFB7E4 BL 0x3316014
	0x02DFB7E8 MOV X0, X20
	0x02DFB7EC MOV X1, X19
	0x02DFB7F0 BL 0x1C16DEC
	0x02DFB7F4 STR X30, [X31 - 0x40]!
	0x02DFB7F8 STP X24, X23, [X31 + 0x10]
	0x02DFB7FC STP X22, X21, [X31 + 0x20]
	0x02DFB800 STP X20, X19, [X31 + 0x30]
	0x02DFB804 MOV X19, X0
	0x02DFB808 LDR X0, [X2 + 0x20]
	0x02DFB80C LDR W22, [X19]
	0x02DFB810 MOV X20, X2
	0x02DFB814 MOV W21, W1
	0x02DFB818 LDRB W8, [X0 + 0x135]
	0x02DFB81C TBNZ X8, 0x0, 0x2DFB824
	0x02DFB820 BL 0x1C5C684
	0x02DFB824 LDR X8, [X0 + 0xC0]
	0x02DFB828 LDR X0, [X8 + 0xB8]
	0x02DFB82C LDRB W8, [X0 + 0x135]
	0x02DFB830 TBNZ X8, 0x0, 0x2DFB838
	0x02DFB834 BL 0x1C5C684
	0x02DFB838 MOV W1, W22
	0x02DFB83C BL 0x1C16D6C
	0x02DFB840 LDR W8, [X19]
	0x02DFB844 MOV X22, X0
	0x02DFB848 CMP W8, 0x1
	0x02DFB84C B.LT 0x2DFB8A0
	0x02DFB850 MOV X23, X31
	0x02DFB854 ADD X24, X22, 0x20
	0x02DFB858 LDR X0, [X20 + 0x20]
	0x02DFB85C LDRB W8, [X0 + 0x135]
	0x02DFB860 TBNZ X8, 0x0, 0x2DFB868
	0x02DFB864 BL 0x1C5C684
	0x02DFB868 LDR X8, [X0 + 0xC0]
	0x02DFB86C MOV X0, X19
	0x02DFB870 MOV W1, W23
	0x02DFB874 LDR X2, [X8 + 0xA8]
	0x02DFB878 BL 0x2DFA48C
	0x02DFB87C CBZ X22, 0x2DFB8D4
	0x02DFB880 LDR W8, [X22 + 0x18]
	0x02DFB884 CMP X23, X8
	0x02DFB888 B.CS 0x2DFB8D8
	0x02DFB88C STR X0, [X24, X23, LSL #3]
	0x02DFB890 LDRSW X8, [X19]
	0x02DFB894 ADD X23, X23, 0x1
	0x02DFB898 CMP X23, X8
	0x02DFB89C B.LT 0x2DFB858
	0x02DFB8A0 TBZ X21, 0x0, 0x2DFB8BC
	0x02DFB8A4 LDR X0, [X20 + 0x20]
	0x02DFB8A8 LDRB W8, [X0 + 0x135]
	0x02DFB8AC TBNZ X8, 0x0, 0x2DFB8B4
	0x02DFB8B0 BL 0x1C5C684
	0x02DFB8B4 MOV X0, X19
	0x02DFB8B8 BL 0x2DFB98C
	0x02DFB8BC MOV X0, X22
	0x02DFB8C0 LDP X20, X19, [X31 + 0x30]
	0x02DFB8C4 LDP X22, X21, [X31 + 0x20]
	0x02DFB8C8 LDP X24, X23, [X31 + 0x10]
	0x02DFB8CC LDR X30, [X31], #0x40
	0x02DFB8D0 RET
	0x02DFB8D4 BL 0x1C16F20
	0x02DFB8D8 BL 0x1C16F28
	0x02DFB8DC STR X30, [X31 - 0x40]!
	0x02DFB8E0 STP X24, X23, [X31 + 0x10]
	0x02DFB8E4 STP X22, X21, [X31 + 0x20]
	0x02DFB8E8 STP X20, X19, [X31 + 0x30]
	0x02DFB8EC LDR W8, [X0]
	0x02DFB8F0 CMP W8, 0x1
	0x02DFB8F4 B.LT 0x2DFB978
	0x02DFB8F8 MOV X19, X3
	0x02DFB8FC MOV X20, X2
	0x02DFB900 MOV X21, X0
	0x02DFB904 MOV X22, X1
	0x02DFB908 MOV W23, W31
	0x02DFB90C LDR X0, [X19 + 0x20]
	0x02DFB910 LDRB W8, [X0 + 0x135]
	0x02DFB914 TBNZ X8, 0x0, 0x2DFB91C
	0x02DFB918 BL 0x1C5C684
	0x02DFB91C LDR X8, [X0 + 0xC0]
	0x02DFB920 MOV X0, X21
	0x02DFB924 MOV W1, W23
	0x02DFB928 LDR X2, [X8 + 0xA8]
	0x02DFB92C BL 0x2DFA48C
	0x02DFB930 LDR X8, [X19 + 0x20]
	0x02DFB934 MOV X24, X0
	0x02DFB938 LDRB W9, [X8 + 0x135]
	0x02DFB93C TBNZ X9, 0x0, 0x2DFB94C
	0x02DFB940 MOV X0, X8
	0x02DFB944 BL 0x1C5C684
	0x02DFB948 MOV X8, X0
	0x02DFB94C LDR X8, [X8 + 0xC0]
	0x02DFB950 MOVZ W3, 0xA
	0x02DFB954 MOV X0, X22
	0x02DFB958 MOV X1, X20
	0x02DFB95C LDR X4, [X8 + 0xD0]
	0x02DFB960 MOV X2, X24
	0x02DFB964 BL 0x2174728
	0x02DFB968 LDR W8, [X21]
	0x02DFB96C ADD W23, W23, 0x1
	0x02DFB970 CMP W23, W8
	0x02DFB974 B.LT 0x2DFB90C
	0x02DFB978 LDP X20, X19, [X31 + 0x30]
	0x02DFB97C LDP X22, X21, [X31 + 0x20]
	0x02DFB980 LDP X24, X23, [X31 + 0x10]
	0x02DFB984 LDR X30, [X31], #0x40
	0x02DFB988 RET
	0x02DFB98C STR X30, [X31 - 0x20]!
	0x02DFB990 STP X20, X19, [X31 + 0x10]
	0x02DFB994 ADRP X20, 0x15E0000
	0x02DFB998 LDRB W8, [X20 + 0x9E1]
	0x02DFB99C MOV X19, X0
	0x02DFB9A0 TBNZ X8, 0x0, 0x2DFB9C4
	0x02DFB9A4 ADRP X0, 0x1323000
	0x02DFB9A8 LDR X0, [X0 + 0xF70]
	0x02DFB9AC BL 0x1C16CF4
	0x02DFB9B0 ADRP X0, 0x1323000
	0x02DFB9B4 LDR X0, [X0 + 0xF60]
	0x02DFB9B8 BL 0x1C16CF4
	0x02DFB9BC MOVZ W8, 0x1
	0x02DFB9C0 STRB W8, [X20 + 0x9E1]
	0x02DFB9C4 LDR X8, [X19 + 0x8]!
	0x02DFB9C8 CBZ X8, 0x2DFB9E8
	0x02DFB9CC ADRP X8, 0x1323000
	0x02DFB9D0 LDR X8, [X8 + 0xF70]
	0x02DFB9D4 MOV X0, X19
	0x02DFB9D8 LDP X20, X19, [X31 + 0x10]
	0x02DFB9DC LDR X1, [X8]
	0x02DFB9E0 LDR X30, [X31], #0x20
	0x02DFB9E4 B 0x23ED774
	0x02DFB9E8 LDP X20, X19, [X31 + 0x10]
	0x02DFB9EC LDR X30, [X31], #0x20
	0x02DFB9F0 RET
	0x02DFB9F4 SUB X31, X31, 0x60
	0x02DFB9F8 STP X30, X19, [X31 + 0x50]
	0x02DFB9FC LDP V1, V0, [X0]
	0x02DFBA00 STP X31, X31, [X31 + 0x20]
	0x02DFBA04 MOV X19, X1
	0x02DFBA08 STP V1, V0, [X31]
	0x02DFBA0C LDR X0, [X1 + 0x20]
	0x02DFBA10 LDRB W8, [X0 + 0x135]
	0x02DFBA14 TBNZ X8, 0x0, 0x2DFBA1C
	0x02DFBA18 BL 0x1C5C684
	0x02DFBA1C LDR X8, [X0 + 0xC0]
	0x02DFBA20 LDP V0, V1, [X31]
	0x02DFBA24 ADD X0, X31, 0x20
	0x02DFBA28 ADD X1, X31, 0x30
	0x02DFBA2C LDR X2, [X8 + 0xE0]
	0x02DFBA30 STP V0, V1, [X31 + 0x30]
	0x02DFBA34 BL 0x2BC3F08
	0x02DFBA38 LDR V0, [X31 + 0x2]
	0x02DFBA3C STR V0, [X31 + 0x3]
	0x02DFBA40 LDR X0, [X19 + 0x20]
	0x02DFBA44 LDRB W8, [X0 + 0x135]
	0x02DFBA48 TBNZ X8, 0x0, 0x2DFBA50
	0x02DFBA4C BL 0x1C5C684
	0x02DFBA50 LDR X8, [X0 + 0xC0]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x15E1000
	009 Move W8, [X23+2521]
	010 Move X20, X3
	011 Move W22, W2
	012 Move X19, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x12F9000
	019 Move X0, [X0+3584]
	020 Call 0x1C17CF4
	021 Move X0, 0x12F9000
	022 Move X0, [X0+3608]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X23+2521], W8
	026 Move X0, [X20+32]
	027 Move W8, [X0+309]
	028 Move TEMP, X8
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {33}
	032 Call 0x1C5D684
	033 Move [X21+24], W22
	034 Move [X21+8], X31
	035 Move [X21+16], X31
	036 Move [X21], W31
	037 Compare X19, 0
	038 JumpIfEqual {192}
	039 Move X0, [X20+32]
	040 Move W8, [X0+309]
	041 Move TEMP, X8
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfEqual {46}
	045 Call 0x1C5D684
	046 Move X8, [X0+192]
	047 Move X1, [X8+56]
	048 Move W8, [X1+309]
	049 Move TEMP, X8
	050 And TEMP, TEMP, 1
	051 Compare TEMP, 1
	052 JumpIfEqual {56}
	053 Move X0, X1
	054 Call 0x1C5D684
	055 Move X1, X0
	056 Move X8, [X19]
	057 NotImplemented "Instruction LDRH not yet implemented."
	058 Compare X9, 0
	059 JumpIfEqual {66}
	060 Move X10, [X8+176]
	061 Add X10, X10, 8
	062 NotImplemented "Instruction LDUR not yet implemented."
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Subtract X9, X9, 1
	065 Add X10, X10, 16
	066 Move X0, X19
	067 Move W2, W31
	068 Call 0x1C5D788
	069 NotImplemented "Instruction LDRSW not yet implemented."
	070 Add X8, X8, X9
	071 Add X0, X8, 312
	072 Move X8, [X0]
	073 Move X1, [X0+8]
	074 Move X23, 0x12F9000
	075 Move X23, [X23+3584]
	076 Move X0, X19
	077 NotImplemented "Instruction BLR not yet implemented."
	078 Move X19, X0
	079 Compare X0, 0
	080 JumpIfEqual {207}
	081 Move X24, 0x12F9000
	082 Move X24, [X24+3608]
	083 Move X8, [X19]
	084 Move X1, [X24]
	085 NotImplemented "Instruction LDRH not yet implemented."
	086 Compare X9, 0
	087 JumpIfEqual {94}
	088 Move X10, [X8+176]
	089 Add X10, X10, 8
	090 NotImplemented "Instruction LDUR not yet implemented."
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Subtract X9, X9, 1
	093 Add X10, X10, 16
	094 Move X0, X19
	095 Move W2, W31
	096 Call 0x1C5D788
	097 NotImplemented "Instruction LDRSW not yet implemented."
	098 Add X8, X8, X9
	099 Add X0, X8, 312
	100 Move X8, [X0]
	101 Move X1, [X0+8]
	102 Move X0, X19
	103 NotImplemented "Instruction BLR not yet implemented."
	104 Move TEMP, X0
	105 And TEMP, TEMP, 1
	106 Compare TEMP, 1
	107 JumpIfNotEqual {158}
	108 Move X0, [X20+32]
	109 Move W8, [X0+309]
	110 Move TEMP, X8
	111 And TEMP, TEMP, 1
	112 Compare TEMP, 1
	113 JumpIfEqual {115}
	114 Call 0x1C5D684
	115 Move X8, [X0+192]
	116 Move X1, [X8+72]
	117 Move W8, [X1+309]
	118 Move TEMP, X8
	119 And TEMP, TEMP, 1
	120 Compare TEMP, 1
	121 JumpIfEqual {125}
	122 Move X0, X1
	123 Call 0x1C5D684
	124 Move X1, X0
	125 Move X8, [X19]
	126 NotImplemented "Instruction LDRH not yet implemented."
	127 Compare X9, 0
	128 JumpIfEqual {135}
	129 Move X10, [X8+176]
	130 Add X10, X10, 8
	131 NotImplemented "Instruction LDUR not yet implemented."
	132 NotImplemented "Instruction CMP not yet implemented."
	133 Subtract X9, X9, 1
	134 Add X10, X10, 16
	135 Move X0, X19
	136 Move W2, W31
	137 Call 0x1C5D788
	138 NotImplemented "Instruction LDRSW not yet implemented."
	139 Add X8, X8, X9
	140 Add X0, X8, 312
	141 Move X8, [X0]
	142 Move X1, [X0+8]
	143 Move X0, X19
	144 NotImplemented "Instruction BLR not yet implemented."
	145 Move X22, X0
	146 Move X0, [X20+32]
	147 Move W8, [X0+309]
	148 Move TEMP, X8
	149 And TEMP, TEMP, 1
	150 Compare TEMP, 1
	151 JumpIfEqual {153}
	152 Call 0x1C5D684
	153 Move X8, [X0+192]
	154 Move X2, [X8+88]
	155 Move X0, X21
	156 Move X1, X22
	157 Call 0x2DFBCEC, X0, X1
	158 Move X20, X31
	159 Compare X19, 0
	160 JumpIfEqual {182}
	161 Move X8, [X19]
	162 Move X1, [X23]
	163 NotImplemented "Instruction LDRH not yet implemented."
	164 Compare X9, 0
	165 JumpIfEqual {172}
	166 Move X10, [X8+176]
	167 Add X10, X10, 8
	168 NotImplemented "Instruction LDUR not yet implemented."
	169 NotImplemented "Instruction CMP not yet implemented."
	170 Subtract X9, X9, 1
	171 Add X10, X10, 16
	172 Move X0, X19
	173 Move W2, W31
	174 Call 0x1C5D788
	175 NotImplemented "Instruction LDRSW not yet implemented."
	176 Add X8, X8, X9
	177 Add X0, X8, 312
	178 Move X8, [X0]
	179 Move X1, [X0+8]
	180 Move X0, X19
	181 NotImplemented "Instruction BLR not yet implemented."
	182 Compare X20, 0
	183 JumpIfNotEqual {208}
	184 Move X20, [X31+48]
	185 Move X19, [X31+56]
	186 Move X22, [X31+32]
	187 Move X21, [X31+40]
	188 Move X24, [X31+16]
	189 Move X23, [X31+24]
	190 Move X30, [X31+64]
	191 Return 
	192 Move X0, 0x12FE000
	193 Move X0, [X0+1320]
	194 Call 0x1C17D08
	195 Call 0x1C17F10
	196 Move X19, X0
	197 Move X0, 0x1303000
	198 Move X0, [X0+3800]
	199 Call 0x1C17D08
	200 Move X1, X0
	201 Move X0, X19
	202 Move X2, X31
	203 Call ArgumentNullException..ctor, X0, X1
	204 Move X0, X19
	205 Move X1, X20
	206 Call 0x1C17DEC
	207 Call 0x1C17F20
	208 Move X0, X20
	209 Call 0x1C17F18
	210 Move X21, X0
	211 NotImplemented "Instruction CMP not yet implemented."
	212 Move X0, X21
	213 Call 0x3EB2AD0
	214 Move X20, [X0]
	215 Call 0x3EB2AE0
	216 Move X20, X31
	217 Move X21, X0
	218 Compare X19, 0
	219 JumpIfEqual {241}
	220 Move X8, [X19]
	221 Move X1, [X23]
	222 NotImplemented "Instruction LDRH not yet implemented."
	223 Compare X9, 0
	224 JumpIfEqual {231}
	225 Move X10, [X8+176]
	226 Add X10, X10, 8
	227 NotImplemented "Instruction LDUR not yet implemented."
	228 NotImplemented "Instruction CMP not yet implemented."
	229 Subtract X9, X9, 1
	230 Add X10, X10, 16
	231 Move X0, X19
	232 Move W2, W31
	233 Call 0x1C5D788
	234 NotImplemented "Instruction LDRSW not yet implemented."
	235 Add X8, X8, X9
	236 Add X0, X8, 312
	237 Move X8, [X0]
	238 Move X1, [X0+8]
	239 Move X0, X19
	240 NotImplemented "Instruction BLR not yet implemented."
	241 Compare X20, 0
	242 JumpIfNotEqual {245}
	243 Move X0, X21
	244 Call 0x1D2D690
	245 Move X0, X20
	246 Call 0x1C17F18
	247 Call 0x1991590

Method: System.Void .ctor(TControl[] values)

Disassembly:
	0x02DFBA54 ADD X1, X31, 0x30
	0x02DFBA58 LDR X0, [X8 + 0xD8]
	0x02DFBA5C BL 0x1C16E04
	0x02DFBA60 LDP X30, X19, [X31 + 0x50]
	0x02DFBA64 ADD X31, X31, 0x60
	0x02DFBA68 RET
	0x02DFBA6C STP X30, X19, [X31 - 0x10]!
	0x02DFBA70 LDR X8, [X1 + 0x20]
	0x02DFBA74 MOV X19, X0
	0x02DFBA78 LDRB W9, [X8 + 0x135]
	0x02DFBA7C TBNZ X9, 0x0, 0x2DFBA8C
	0x02DFBA80 MOV X0, X8
	0x02DFBA84 BL 0x1C5C684
	0x02DFBA88 MOV X8, X0
	0x02DFBA8C LDR X8, [X8 + 0xC0]
	0x02DFBA90 MOV X0, X19
	0x02DFBA94 LDR X1, [X8 + 0xE8]
	0x02DFBA98 LDP X30, X19, [X31], #0x10
	0x02DFBA9C B 0x2DFB9F4
	0x02DFBAA0 STR X30, [X31 - 0x30]!
	0x02DFBAA4 STP X22, X21, [X31 + 0x10]
	0x02DFBAA8 STP X20, X19, [X31 + 0x20]
	0x02DFBAAC ADRP X21, 0x15E0000
	0x02DFBAB0 LDRB W8, [X21 + 0x9E2]
	0x02DFBAB4 MOV X19, X1
	0x02DFBAB8 MOV X20, X0
	0x02DFBABC TBNZ X8, 0x0, 0x2DFBAE0
	0x02DFBAC0 ADRP X0, 0x12F8000
	0x02DFBAC4 LDR X0, [X0 + 0x8F0]
	0x02DFBAC8 BL 0x1C16CF4
	0x02DFBACC ADRP X0, 0x1321000
	0x02DFBAD0 LDR X0, [X0 + 0xA28]
	0x02DFBAD4 BL 0x1C16CF4
	0x02DFBAD8 MOVZ W8, 0x1
	0x02DFBADC STRB W8, [X21 + 0x9E2]
	0x02DFBAE0 LDR X0, [X19 + 0x20]
	0x02DFBAE4 LDRB W8, [X0 + 0x135]
	0x02DFBAE8 TBNZ X8, 0x0, 0x2DFBAF0
	0x02DFBAEC BL 0x1C5C684
	0x02DFBAF0 LDR W8, [X20]
	0x02DFBAF4 CBZ W8, 0x2DFBBC4
	0x02DFBAF8 ADRP X8, 0x12F8000
	0x02DFBAFC LDR X8, [X8 + 0x8F0]
	0x02DFBB00 LDR X0, [X8]
	0x02DFBB04 BL 0x1C16F10
	0x02DFBB08 MOV X1, X31
	0x02DFBB0C MOV X21, X0
	0x02DFBB10 BL 0x3231AC4
	0x02DFBB14 CBZ X21, 0x2DFBBE0
	0x02DFBB18 MOVZ W1, 0x28
	0x02DFBB1C MOV X0, X21
	0x02DFBB20 MOV X2, X31
	0x02DFBB24 BL 0x3233D30
	0x02DFBB28 MOV W22, W31
	0x02DFBB2C LDR X0, [X19 + 0x20]
	0x02DFBB30 LDRB W8, [X0 + 0x135]
	0x02DFBB34 TBNZ X8, 0x0, 0x2DFBB3C
	0x02DFBB38 BL 0x1C5C684
	0x02DFBB3C LDR W8, [X20]
	0x02DFBB40 CMP W22, W8
	0x02DFBB44 B.GE 0x2DFBB98
	0x02DFBB48 CBZ W22, 0x2DFBB5C
	0x02DFBB4C MOVZ W1, 0x2C
	0x02DFBB50 MOV X0, X21
	0x02DFBB54 MOV X2, X31

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X19, X2
	010 NotImplemented "Instruction MOVI not yet implemented."
	011 Move [X0], V0
	012 Move [X0+8], V0
	013 Compare X1, 0
	014 JumpIfEqual {64}
	015 Move X21, X0
	016 Move X0, [X19+32]
	017 Move X24, [X1+24]
	018 Move W9, 10
	019 Move X20, X1
	020 Move W8, [X0+309]
	021 NotImplemented "Instruction CMP not yet implemented."
	022 NotImplemented "Instruction CSEL not yet implemented."
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {28}
	027 Call 0x1C5D684
	028 Move X8, [X0+192]
	029 Move X0, X21
	030 Move W1, W22
	031 Move X2, [X8+40]
	032 Call 0x2DFB384, X0, X1
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X23, X31
	035 And X24, X24, 0
	036 Add X25, X20, 32
	037 Move W8, [X20+24]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move X0, [X19+32]
	040 Move X22, [X25]
	041 Move W8, [X0+309]
	042 Move TEMP, X8
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfEqual {47}
	046 Call 0x1C5D684
	047 Move X8, [X0+192]
	048 Move X0, X21
	049 Move X1, X22
	050 Move X2, [X8+88]
	051 Call 0x2DFBCEC, X0, X1
	052 Add X23, X23, 1
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move X20, [X31+48]
	055 Move X19, [X31+56]
	056 Move X22, [X31+32]
	057 Move X21, [X31+40]
	058 Move X24, [X31+16]
	059 Move X23, [X31+24]
	060 Move X30, [X31+64]
	061 Move X25, [X31+72]
	062 Return 
	063 Call 0x1C17F28
	064 Move X0, 0x12FE000
	065 Move X0, [X0+1320]
	066 Call 0x1C17D08
	067 Call 0x1C17F10
	068 Move X20, X0
	069 Move X0, 0x1303000
	070 Move X0, [X0+3800]
	071 Call 0x1C17D08
	072 Move X1, X0
	073 Move X0, X20
	074 Move X2, X31
	075 Call ArgumentNullException..ctor, X0, X1
	076 Move X0, X20
	077 Move X1, X19
	078 Call 0x1C17DEC

Method: System.Void Resize(System.Int32 size)

Disassembly:
	0x02DFBB58 BL 0x3233D30
	0x02DFBB5C LDR X0, [X19 + 0x20]
	0x02DFBB60 LDRB W8, [X0 + 0x135]
	0x02DFBB64 TBNZ X8, 0x0, 0x2DFBB6C
	0x02DFBB68 BL 0x1C5C684
	0x02DFBB6C LDR X8, [X0 + 0xC0]
	0x02DFBB70 MOV X0, X20
	0x02DFBB74 MOV W1, W22
	0x02DFBB78 LDR X2, [X8 + 0xA8]
	0x02DFBB7C BL 0x2DFA48C
	0x02DFBB80 MOV X1, X0
	0x02DFBB84 MOV X0, X21
	0x02DFBB88 MOV X2, X31
	0x02DFBB8C BL 0x3233F90
	0x02DFBB90 ADD W22, W22, 0x1
	0x02DFBB94 B 0x2DFBB2C
	0x02DFBB98 MOVZ W1, 0x29
	0x02DFBB9C MOV X0, X21
	0x02DFBBA0 MOV X2, X31
	0x02DFBBA4 BL 0x3233D30
	0x02DFBBA8 LDR X8, [X21]
	0x02DFBBAC MOV X0, X21
	0x02DFBBB0 LDP X20, X19, [X31 + 0x20]
	0x02DFBBB4 LDP X22, X21, [X31 + 0x10]
	0x02DFBBB8 LDP X2, X1, [X8 + 0x168]
	0x02DFBBBC LDR X30, [X31], #0x30
	0x02DFBBC0 BR X2
	0x02DFBBC4 ADRP X8, 0x1321000
	0x02DFBBC8 LDR X8, [X8 + 0xA28]
	0x02DFBBCC LDP X20, X19, [X31 + 0x20]
	0x02DFBBD0 LDP X22, X21, [X31 + 0x10]
	0x02DFBBD4 LDR X0, [X8]
	0x02DFBBD8 LDR X30, [X31], #0x30
	0x02DFBBDC RET
	0x02DFBBE0 BL 0x1C16F20
	0x02DFBBE4 STR X30, [X31 - 0x20]!
	0x02DFBBE8 STP X20, X19, [X31 + 0x10]
	0x02DFBBEC ADRP X20, 0x15E0000
	0x02DFBBF0 LDRB W8, [X20 + 0x9E3]
	0x02DFBBF4 MOV X19, X0
	0x02DFBBF8 TBNZ X8, 0x0, 0x2DFBC10
	0x02DFBBFC ADRP X0, 0x1323000
	0x02DFBC00 LDR X0, [X0 + 0xFD8]
	0x02DFBC04 BL 0x1C16CF4
	0x02DFBC08 MOVZ W8, 0x1
	0x02DFBC0C STRB W8, [X20 + 0x9E3]
	0x02DFBC10 CBZ X19, 0x2DFBC50
	0x02DFBC14 LDR X8, [X19 + 0x78]
	0x02DFBC18 CBZ X8, 0x2DFBC6C
	0x02DFBC1C LDR W20, [X8 + 0xE0]
	0x02DFBC20 CMP X8, X19
	0x02DFBC24 B.EQ 0x2DFBC58
	0x02DFBC28 LDR X0, [X8 + 0x150]
	0x02DFBC2C ADRP X8, 0x1323000
	0x02DFBC30 LDR X8, [X8 + 0xFD8]
	0x02DFBC34 MOVN W2, 0x0
	0x02DFBC38 MOV X1, X19
	0x02DFBC3C LDR X3, [X8]
	0x02DFBC40 BL 0x2179B8C
	0x02DFBC44 ADD W8, W0, 0x1
	0x02DFBC48 SXTW X8, W8
	0x02DFBC4C B 0x2DFBC5C
	0x02DFBC50 MOVN X0, 0x0
	0x02DFBC54 B 0x2DFBC60
	0x02DFBC58 MOV X8, X31
	0x02DFBC5C ORR X0, X8, X20, 0x20
	0x02DFBC60 LDP X20, X19, [X31 + 0x10]
	0x02DFBC64 LDR X30, [X31], #0x20
	0x02DFBC68 RET
	0x02DFBC6C BL 0x1C16F20
	0x02DFBC70 STP X30, X21, [X31 - 0x20]!
	0x02DFBC74 STP X20, X19, [X31 + 0x10]
	0x02DFBC78 ADRP X20, 0x15E0000
	0x02DFBC7C LDRB W8, [X20 + 0x9E4]
	0x02DFBC80 MOV X19, X1
	0x02DFBC84 MOV X21, X0
	0x02DFBC88 TBNZ X8, 0x0, 0x2DFBCA0
	0x02DFBC8C ADRP X0, 0x1320000
	0x02DFBC90 LDR X0, [X0 + 0x270]
	0x02DFBC94 BL 0x1C16CF4
	0x02DFBC98 MOVZ W8, 0x1
	0x02DFBC9C STRB W8, [X20 + 0x9E4]
	0x02DFBCA0 ADDS X31, X21, 0x1
	0x02DFBCA4 B.EQ 0x2DFBD44
	0x02DFBCA8 ADRP X8, 0x1320000
	0x02DFBCAC LDR X8, [X8 + 0x270]
	0x02DFBCB0 LDR X0, [X8]
	0x02DFBCB4 LDR W8, [X0 + 0xE0]
	0x02DFBCB8 CBNZ W8, 0x2DFBCC0
	0x02DFBCBC BL 0x1C16DFC
	0x02DFBCC0 UBFM X0, X21, 0x20, 0x3F
	0x02DFBCC4 MOV X1, X31
	0x02DFBCC8 BL 0x376EAD0
	0x02DFBCCC CBZ X0, 0x2DFBD88
	0x02DFBCD0 MOV X20, X0
	0x02DFBCD4 CBZ W21, 0x2DFBD4C
	0x02DFBCD8 LDR X8, [X20 + 0x150]
	0x02DFBCDC CBZ X8, 0x2DFBD94
	0x02DFBCE0 LDR W10, [X8 + 0x18]
	0x02DFBCE4 SUB W9, W21, 0x1
	0x02DFBCE8 CMP W9, W10

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x15E1000
	007 Move W8, [X22+2522]
	008 Move X21, X2
	009 Move W19, W1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x1324000
	016 Move X0, [X0+3976]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+2522], W8
	020 Move TEMP, X19
	021 And TEMP, TEMP, -2147483648
	022 Compare TEMP, -2147483648
	023 JumpIfEqual {112}
	024 Move X0, [X21+32]
	025 Move W8, [X0+309]
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {31}
	030 Call 0x1C5D684
	031 Move X22, 0x15E1000
	032 Move W8, [X22+2519]
	033 Move TEMP, X8
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfEqual {42}
	037 Move X0, 0x1324000
	038 Move X0, [X0+3936]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X22+2519], W8
	042 Move X8, [X20+8]
	043 Compare X8, 0
	044 JumpIfEqual {46}
	045 Move W8, [X20+16]
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move X0, [X21+32]
	048 Move W8, [X0+309]
	049 Move TEMP, X8
	050 And TEMP, TEMP, 1
	051 Compare TEMP, 1
	052 JumpIfEqual {54}
	053 Call 0x1C5D684
	054 Move X8, [X0+192]
	055 Move X0, X20
	056 Move W1, W19
	057 Move X2, [X8+40]
	058 Call 0x2DFB384, X0, X1
	059 Move X0, [X21+32]
	060 Move W8, [X0+309]
	061 Move TEMP, X8
	062 And TEMP, TEMP, 1
	063 Compare TEMP, 1
	064 JumpIfEqual {66}
	065 Call 0x1C5D684
	066 Move W8, [X20]
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Move X8, 0x1324000
	069 Move X0, [X20+8]
	070 Move X1, [X20+16]
	071 Move X8, [X8+3976]
	072 Move X2, [X8]
	073 Call NativeArrayUnsafeUtility.GetUnsafePtr, X0
	074 Move X8, [X21+32]
	075 Move X22, X0
	076 Add X9, X8, 309
	077 NotImplemented "Instruction LDRH not yet implemented."
	078 Move TEMP, X9
	079 And TEMP, TEMP, 1
	080 Compare TEMP, 1
	081 JumpIfEqual {87}
	082 Move X0, X8
	083 Call 0x1C5D684
	084 Move X8, [X21+32]
	085 Add X9, X8, 309
	086 NotImplemented "Instruction LDRH not yet implemented."
	087 Move W21, [X20]
	088 Move W10, W21
	089 Move TEMP, X9
	090 And TEMP, TEMP, 1
	091 Compare TEMP, 1
	092 JumpIfEqual {96}
	093 Move X0, X8
	094 Call 0x1C5D684
	095 Move W10, [X20]
	096 Move W8, W21
	097 ShiftRight W8, 29
	098 And W8, W8, 0xFFFFFFF
	099 Subtract W9, W19, W10
	100 Add X0, X22, W8
	101 Move X2, W9
	102 Move W1, 255
	103 Move X3, X31
	104 Call UnsafeUtility.MemSet, X0, X1, X2
	105 Move [X20], W19
	106 Move X20, [X31+32]
	107 Move X19, [X31+40]
	108 Move X22, [X31+16]
	109 Move X21, [X31+24]
	110 Move X30, [X31+48]
	111 Return 
	112 Move X0, 0x1301000
	113 Move X0, [X0+1888]
	114 Call 0x1C17D08
	115 Call 0x1C17F10
	116 Move X19, X0
	117 Move X0, 0x1324000
	118 Move X0, [X0+3984]
	119 Call 0x1C17D08
	120 Move X20, X0
	121 Move X0, 0x1324000
	122 Move X0, [X0+3992]
	123 Call 0x1C17D08
	124 Move X2, X0
	125 Move X0, X19
	126 Move X1, X20
	127 Move X3, X31
	128 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	129 Move X0, X19
	130 Move X1, X21
	131 Call 0x1C17DEC

Method: System.Void Add(TControl item)

Disassembly:
	0x02DFBCEC B.CS 0x2DFBD98
	0x02DFBCF0 LDR X0, [X19 + 0x20]
	0x02DFBCF4 ADD X8, X8, W9, 0x3, SXTW
	0x02DFBCF8 LDR X19, [X8 + 0x20]
	0x02DFBCFC LDRB W9, [X0 + 0x135]
	0x02DFBD00 TBNZ X9, 0x0, 0x2DFBD08
	0x02DFBD04 BL 0x1C5C684
	0x02DFBD08 LDR X8, [X0 + 0xC0]
	0x02DFBD0C LDR X20, [X8 + 0x18]
	0x02DFBD10 LDRB W8, [X20 + 0x135]
	0x02DFBD14 TBNZ X8, 0x0, 0x2DFBD24
	0x02DFBD18 MOV X0, X20
	0x02DFBD1C BL 0x1C5C684
	0x02DFBD20 MOV X20, X0
	0x02DFBD24 CBZ X19, 0x2DFBD44
	0x02DFBD28 MOV X0, X19
	0x02DFBD2C MOV X1, X20
	0x02DFBD30 BL 0x1C16E00
	0x02DFBD34 CBNZ X0, 0x2DFBD88
	0x02DFBD38 MOV X0, X19
	0x02DFBD3C MOV X1, X20
	0x02DFBD40 BL 0x1C171E0
	0x02DFBD44 MOV X0, X31
	0x02DFBD48 B 0x2DFBD88
	0x02DFBD4C LDR X0, [X19 + 0x20]
	0x02DFBD50 LDRB W8, [X0 + 0x135]
	0x02DFBD54 TBNZ X8, 0x0, 0x2DFBD5C
	0x02DFBD58 BL 0x1C5C684
	0x02DFBD5C LDR X8, [X0 + 0xC0]
	0x02DFBD60 LDR X19, [X8 + 0x18]
	0x02DFBD64 LDRB W8, [X19 + 0x135]
	0x02DFBD68 TBNZ X8, 0x0, 0x2DFBD78
	0x02DFBD6C MOV X0, X19
	0x02DFBD70 BL 0x1C5C684
	0x02DFBD74 MOV X19, X0
	0x02DFBD78 MOV X0, X20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x15E1000
	007 Move W8, [X22+2523]
	008 Move X21, X2
	009 Move X20, X1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x1324000
	016 Move X0, [X0+4000]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+2523], W8
	020 Move X0, [X21+32]
	021 Move X21, 0x1324000
	022 Move W8, [X0+309]
	023 Move X21, [X21+4000]
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {29}
	028 Call 0x1C5D684
	029 Move X0, X20
	030 Call 0x2DFCBE4, X0
	031 Move W9, [X19+24]
	032 Add X8, X19, 8
	033 Move X5, [X21]
	034 Move X1, X19
	035 Move X20, [X31+32]
	036 Move X19, [X31+40]
	037 Move X22, [X31+16]
	038 Move X21, [X31+24]
	039 Move W10, 4
	040 NotImplemented "Instruction CMP not yet implemented."
	041 NotImplemented "Instruction CSEL not yet implemented."
	042 Move W3, 10
	043 Move X2, X0
	044 Move X0, X8
	045 Move X30, [X31+48]
	046 Call 0x2176918, X0, X1, X2, X3, X4
	047 Return 

Method: System.Void AddSlice(TList list, System.Int32 count = -1, System.Int32 destinationIndex = -1, System.Int32 sourceIndex = 0)

Disassembly:
	0x02130A90 LDR X2, [X8 + 0x10]
	0x02130A94 BL 0x2F646E4
	0x02130A98 LDR W8, [X20 + 0x18]
	0x02130A9C CMP W8, 0x1
	0x02130AA0 B.LT 0x2130B40
	0x02130AA4 CBZ X21, 0x2130B80
	0x02130AA8 MOV X22, X31
	0x02130AAC MOVZ W23, 0x20
	0x02130AB0 LDR X8, [X20 + 0x10]
	0x02130AB4 CBZ X8, 0x2130B80
	0x02130AB8 LDR W9, [X8 + 0x18]
	0x02130ABC CMP X22, X9
	0x02130AC0 B.CS 0x2130B84
	0x02130AC4 CBZ X19, 0x2130B80
	0x02130AC8 ADD X8, X8, X22, 0x3, LSL
	0x02130ACC LDR X9, [X19 + 0x18]
	0x02130AD0 LDR X0, [X19 + 0x40]
	0x02130AD4 LDR X1, [X8 + 0x20]
	0x02130AD8 LDR X2, [X19 + 0x28]
	0x02130ADC LDR X24, [X21 + 0x10]
	0x02130AE0 ADD X8, X31, 0x18
	0x02130AE4 BLR X9
	0x02130AE8 LDUR V0, [X31 + 0x18]
	0x02130AEC LDR X8, [X31 + 0x28]
	0x02130AF0 STR V0, [X31 + 0x3]
	0x02130AF4 STR X8, [X31 + 0x40]
	0x02130AF8 CBZ X24, 0x2130B80
	0x02130AFC LDR V0, [X31 + 0x3]
	0x02130B00 LDR X8, [X31 + 0x40]
	0x02130B04 STR V0, [X31]
	0x02130B08 STR X8, [X31 + 0x10]
	0x02130B0C LDR W8, [X24 + 0x18]
	0x02130B10 CMP X22, X8
	0x02130B14 B.CS 0x2130B84
	0x02130B18 LDR X8, [X31 + 0x10]
	0x02130B1C LDR V0, [X31]
	0x02130B20 ADD X9, X24, X23
	0x02130B24 ADD X22, X22, 0x1
	0x02130B28 STR X8, [X9 + 0x10]
	0x02130B2C STR V0, [X9]
	0x02130B30 LDRSW X8, [X20 + 0x18]
	0x02130B34 ADD X23, X23, 0x18
	0x02130B38 CMP X22, X8
	0x02130B3C B.LT 0x2130AB0
	0x02130B40 CBZ X21, 0x2130B80
	0x02130B44 STR W8, [X21 + 0x18]
	0x02130B48 MOV X0, X21
	0x02130B4C LDP X20, X19, [X31 + 0x80]
	0x02130B50 LDP X22, X21, [X31 + 0x70]
	0x02130B54 LDP X24, X23, [X31 + 0x60]
	0x02130B58 LDR X30, [X31 + 0x50]
	0x02130B5C ADD X31, X31, 0x90
	0x02130B60 RET
	0x02130B64 MOV X0, X21
	0x02130B68 BL 0x1C5C6E0
	0x02130B6C CBNZ X19, 0x2130A68
	0x02130B70 MOVZ W0, 0x9
	0x02130B74 MOV X1, X31
	0x02130B78 BL 0x338F3E0
	0x02130B7C B 0x2130A68
	0x02130B80 BL 0x1C16F20
	0x02130B84 BL 0x1C16F28
	0x02130B88 STP X30, X23, [X31 - 0x30]!
	0x02130B8C STP X22, X21, [X31 + 0x10]
	0x02130B90 STP X20, X19, [X31 + 0x20]
	0x02130B94 LDR X8, [X2 + 0x38]
	0x02130B98 MOV X21, X2
	0x02130B9C MOV X19, X1
	0x02130BA0 MOV X20, X0
	0x02130BA4 CBZ X8, 0x2130C68
	0x02130BA8 CBZ X19, 0x2130C74
	0x02130BAC LDR X8, [X21 + 0x38]
	0x02130BB0 LDR W22, [X20 + 0x18]
	0x02130BB4 LDR X0, [X8 + 0x8]
	0x02130BB8 LDRB W8, [X0 + 0x135]
	0x02130BBC TBNZ X8, 0x0, 0x2130BC4
	0x02130BC0 BL 0x1C5C684
	0x02130BC4 BL 0x1C16F10
	0x02130BC8 LDR X8, [X21 + 0x38]
	0x02130BCC MOV W1, W22
	0x02130BD0 MOV X21, X0
	0x02130BD4 LDR X2, [X8 + 0x10]
	0x02130BD8 BL 0x2F67780
	0x02130BDC LDR W8, [X20 + 0x18]
	0x02130BE0 CMP W8, 0x1
	0x02130BE4 B.LT 0x2130C4C
	0x02130BE8 CBZ X21, 0x2130C84
	0x02130BEC MOV X22, X31
	0x02130BF0 LDR X8, [X20 + 0x10]
	0x02130BF4 CBZ X8, 0x2130C84
	0x02130BF8 LDR W9, [X8 + 0x18]
	0x02130BFC CMP X22, X9
	0x02130C00 B.CS 0x2130C88
	0x02130C04 CBZ X19, 0x2130C84
	0x02130C08 ADD X8, X8, X22, 0x3, LSL
	0x02130C0C LDR X9, [X19 + 0x18]
	0x02130C10 LDR X0, [X19 + 0x40]
	0x02130C14 LDR X1, [X8 + 0x20]
	0x02130C18 LDR X2, [X19 + 0x28]
	0x02130C1C LDR X23, [X21 + 0x10]
	0x02130C20 BLR X9
	0x02130C24 CBZ X23, 0x2130C84
	0x02130C28 LDR W8, [X23 + 0x18]
	0x02130C2C CMP X22, X8
	0x02130C30 B.CS 0x2130C88
	0x02130C34 ADD X8, X23, X22
	0x02130C38 STRB W0, [X8 + 0x20]
	0x02130C3C LDRSW X8, [X20 + 0x18]
	0x02130C40 ADD X22, X22, 0x1
	0x02130C44 CMP X22, X8
	0x02130C48 B.LT 0x2130BF0
	0x02130C4C CBZ X21, 0x2130C84
	0x02130C50 STR W8, [X21 + 0x18]
	0x02130C54 MOV X0, X21
	0x02130C58 LDP X20, X19, [X31 + 0x20]
	0x02130C5C LDP X22, X21, [X31 + 0x10]
	0x02130C60 LDP X30, X23, [X31], #0x30
	0x02130C64 RET
	0x02130C68 MOV X0, X21
	0x02130C6C BL 0x1C5C6E0
	0x02130C70 CBNZ X19, 0x2130BAC
	0x02130C74 MOVZ W0, 0x9
	0x02130C78 MOV X1, X31
	0x02130C7C BL 0x338F3E0
	0x02130C80 B 0x2130BAC
	0x02130C84 BL 0x1C16F20
	0x02130C88 BL 0x1C16F28
	0x02130C8C STR X30, [X31 - 0x40]!
	0x02130C90 STP X24, X23, [X31 + 0x10]
	0x02130C94 STP X22, X21, [X31 + 0x20]
	0x02130C98 STP X20, X19, [X31 + 0x30]
	0x02130C9C LDR X8, [X2 + 0x38]
	0x02130CA0 MOV X21, X2
	0x02130CA4 MOV X19, X1
	0x02130CA8 MOV X20, X0
	0x02130CAC CBZ X8, 0x2130D80
	0x02130CB0 CBZ X19, 0x2130D8C
	0x02130CB4 LDR X8, [X21 + 0x38]
	0x02130CB8 LDR W22, [X20 + 0x18]
	0x02130CBC LDR X0, [X8 + 0x8]
	0x02130CC0 LDRB W8, [X0 + 0x135]
	0x02130CC4 TBNZ X8, 0x0, 0x2130CCC
	0x02130CC8 BL 0x1C5C684
	0x02130CCC BL 0x1C16F10
	0x02130CD0 LDR X8, [X21 + 0x38]
	0x02130CD4 MOV W1, W22
	0x02130CD8 MOV X21, X0
	0x02130CDC LDR X2, [X8 + 0x10]
	0x02130CE0 BL 0x2F6CC64
	0x02130CE4 LDR W8, [X20 + 0x18]
	0x02130CE8 CMP W8, 0x1
	0x02130CEC B.LT 0x2130D60
	0x02130CF0 CBZ X21, 0x2130D9C
	0x02130CF4 MOV X22, X31
	0x02130CF8 MOV X23, X31
	0x02130CFC LDR X8, [X20 + 0x10]
	0x02130D00 CBZ X8, 0x2130D9C
	0x02130D04 LDR W9, [X8 + 0x18]
	0x02130D08 CMP X23, X9
	0x02130D0C B.CS 0x2130DA0
	0x02130D10 CBZ X19, 0x2130D9C
	0x02130D14 ADD X8, X8, X23, 0x3, LSL
	0x02130D18 LDR X9, [X19 + 0x18]
	0x02130D1C LDR X0, [X19 + 0x40]
	0x02130D20 LDR X1, [X8 + 0x20]
	0x02130D24 LDR X2, [X19 + 0x28]
	0x02130D28 LDR X24, [X21 + 0x10]
	0x02130D2C BLR X9
	0x02130D30 CBZ X24, 0x2130D9C
	0x02130D34 LDR W8, [X24 + 0x18]
	0x02130D38 CMP X23, X8
	0x02130D3C B.CS 0x2130DA0
	0x02130D40 ADD X8, X24, X22
	0x02130D44 STP S0, S1, [X8 + 0x20]
	0x02130D48 STP S2, S3, [X8 + 0x28]
	0x02130D4C LDRSW X8, [X20 + 0x18]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+32], X30
	003 Move [X31+40], X25
	004 Move [X31+48], X24
	005 Move [X31+56], X23
	006 Move [X31+64], X22
	007 Move [X31+72], X21
	008 Move [X31+80], X20
	009 Move [X31+88], X19
	010 Move [X31+16], X1
	011 Move [X31+24], X2
	012 Move X8, [X6+56]
	013 Move X19, X6
	014 Move W20, W5
	015 Move W22, W4
	016 Move W23, W3
	017 Move X21, X0
	018 Move X24, X2
	019 ShiftRight X24, 32
	020 And X24, X24, 0x7FFFFFFF
	021 Compare X8, 0
	022 JumpIfNotEqual {34}
	023 Move X0, 0x1FC4000
	024 Move X0, [X0+1448]
	025 Call 0x1C17CF4
	026 Move X0, 0x1FEC000
	027 Move X0, [X0+1696]
	028 Call 0x1C17CF4
	029 Move X8, [X19+56]
	030 Compare X8, 0
	031 JumpIfNotEqual {34}
	032 Move X0, X19
	033 Call 0x1C5D6E0
	034 NotImplemented "Instruction CMP not yet implemented."
	035 NotImplemented "Instruction CSEL not yet implemented."
	036 Move TEMP, X22
	037 And TEMP, TEMP, -2147483648
	038 Compare TEMP, -2147483648
	039 JumpIfEqual {42}
	040 Compare W25, 0
	041 JumpIfNotEqual {52}
	042 Move X0, [X19+32]
	043 Move W8, [X0+309]
	044 Move TEMP, X8
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfEqual {49}
	048 Call 0x1C5D684
	049 Move W22, [X21]
	050 Compare W25, 0
	051 JumpIfEqual {153}
	052 Add W8, W25, W20
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move X0, [X19+32]
	055 Move W8, [X0+309]
	056 Move TEMP, X8
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfEqual {61}
	060 Call 0x1C5D684
	061 Move X8, [X0+192]
	062 Move X0, X21
	063 Move X1, [X8+104]
	064 Call 0x2DFB338, X0
	065 Move W8, [X21]
	066 Add W23, W8, W25
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Move X8, 0x1FC4000
	069 Move X8, [X8+1448]
	070 Move X0, [X8]
	071 Move W8, [X0+224]
	072 Compare W8, 0
	073 JumpIfNotEqual {75}
	074 Call 0x1C17DFC
	075 Move W1, 10
	076 Move W0, W23
	077 Move X2, X31
	078 Call Math.Max, X0, X1
	079 Move X8, [X19+32]
	080 Move W23, W0
	081 Move W9, [X8+309]
	082 Move TEMP, X9
	083 And TEMP, TEMP, 1
	084 Compare TEMP, 1
	085 JumpIfEqual {89}
	086 Move X0, X8
	087 Call 0x1C5D684
	088 Move X8, X0
	089 Move X8, [X8+192]
	090 Move X0, X21
	091 Move W1, W23
	092 Move X2, [X8+40]
	093 Call 0x2DFB384, X0, X1
	094 Move X0, [X19+32]
	095 Move W8, [X0+309]
	096 Move TEMP, X8
	097 And TEMP, TEMP, 1
	098 Compare TEMP, 1
	099 JumpIfEqual {101}
	100 Call 0x1C5D684
	101 Move W8, [X21]
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Move X0, [X19+32]
	104 Move X24, [X21+8]
	105 Move X23, [X21+16]
	106 Move W9, [X0+309]
	107 Move TEMP, X9
	108 And TEMP, TEMP, 1
	109 Compare TEMP, 1
	110 JumpIfEqual {113}
	111 Call 0x1C5D684
	112 Move W8, [X21]
	113 Move X9, 0x1FEC000
	114 Move X9, [X9+1696]
	115 Add W5, W22, W25
	116 Subtract W6, W8, W22
	117 Move X0, X24
	118 Move X7, [X9]
	119 Move X1, X23
	120 Move W2, W22
	121 Move X3, X24
	122 Move X4, X23
	123 Call NativeArray`1<UInt64>.Copy, X0, X1, X2, X3, X4
	124 NotImplemented "Instruction CMP not yet implemented."
	125 Move W24, W25
	126 Move X8, [X19+56]
	127 Add X0, X31, 16
	128 Move W1, W20
	129 Move X2, [X8+16]
	130 Call ReadOnlyArray`1<Object>.get_Item, X0, X1
	131 Move X8, [X19+32]
	132 Move X23, X0
	133 Move W9, [X8+309]
	134 Move TEMP, X9
	135 And TEMP, TEMP, 1
	136 Compare TEMP, 1
	137 JumpIfEqual {141}
	138 Move X0, X8
	139 Call 0x1C5D684
	140 Move X8, X0
	141 Move X8, [X8+192]
	142 Move X0, X23
	143 Move X1, [X8+32]
	144 Call 0x2DFCBE4, X0
	145 Move X8, [X21+8]
	146 Subtract X24, X24, 1
	147 Add W20, W20, 1
	148 Move [X8], X0
	149 Add W22, W22, 1
	150 Move W8, [X21]
	151 Add W8, W8, W25
	152 Move [X21], W8
	153 Move X20, [X31+80]
	154 Move X19, [X31+88]
	155 Move X22, [X31+64]
	156 Move X21, [X31+72]
	157 Move X24, [X31+48]
	158 Move X23, [X31+56]
	159 Move X30, [X31+32]
	160 Move X25, [X31+40]
	161 Add X31, X31, 96
	162 Return 
	163 Move [X31+12], W25
	164 Move X21, 0x1FC4000
	165 Move X21, [X21+1880]
	166 Move X0, X21
	167 Call 0x1C17D08
	168 Add X1, X31, 12
	169 Call 0x1C17E04
	170 Move X22, X0
	171 Move X0, X21
	172 Move [X31+8], W20
	173 Call 0x1C17D08
	174 Add X1, X31, 8
	175 Call 0x1C17E04
	176 Move W8, [X31+28]
	177 Move X20, X0
	178 Move X0, X21
	179 Move [X31+4], W8
	180 Call 0x1C17D08
	181 Add X1, X31, 4
	182 Call 0x1C17E04
	183 Move X21, X0
	184 Move X0, 0x1FEC000
	185 Move X0, [X0+1704]
	186 Call 0x1C17D08
	187 Move X1, X22
	188 Move X2, X20
	189 Move X3, X21
	190 Move X4, X31
	191 Call String.Format, X0, X1, X2, X3
	192 Move X20, X0
	193 Move X0, 0x1FCC000
	194 Move X0, [X0+1888]
	195 Call 0x1C17D08
	196 Call 0x1C17F10
	197 Move X21, X0
	198 Move X0, 0x1FEC000
	199 Move X0, [X0+1608]
	200 Call 0x1C17D08
	201 Move X1, X0
	202 Move X0, X21
	203 Move X2, X20
	204 Move X3, X31
	205 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	206 Move X0, X21
	207 Move X1, X19
	208 Call 0x1C17DEC

Method: System.Void AddRange(System.Collections.Generic.IEnumerable`1<TControl> list, System.Int32 count = -1, System.Int32 destinationIndex = -1)

Disassembly:
	0x02DFBD7C MOV X1, X19
	0x02DFBD80 BL 0x1C16E00
	0x02DFBD84 CBZ X0, 0x2DFBD9C
	0x02DFBD88 LDP X20, X19, [X31 + 0x10]
	0x02DFBD8C LDP X30, X21, [X31], #0x20
	0x02DFBD90 RET
	0x02DFBD94 BL 0x1C16F20
	0x02DFBD98 BL 0x1C16F28
	0x02DFBD9C MOV X0, X20
	0x02DFBDA0 MOV X1, X19
	0x02DFBDA4 BL 0x1C171E0
	0x02DFBDA8 STP X30, X21, [X31 - 0x20]!
	0x02DFBDAC STP X20, X19, [X31 + 0x10]
	0x02DFBDB0 ADRP X21, 0x15E0000
	0x02DFBDB4 ADRP X20, 0x12F8000
	0x02DFBDB8 LDRB W8, [X21 + 0x9E5]
	0x02DFBDBC LDR X20, [X20 + 0x6C0]
	0x02DFBDC0 MOV X19, X1
	0x02DFBDC4 TBNZ X8, 0x0, 0x2DFBDDC
	0x02DFBDC8 ADRP X0, 0x12F8000
	0x02DFBDCC LDR X0, [X0 + 0x6C0]
	0x02DFBDD0 BL 0x1C16CF4
	0x02DFBDD4 MOVZ W8, 0x1
	0x02DFBDD8 STRB W8, [X21 + 0x9E5]
	0x02DFBDDC LDR X8, [X19 + 0x20]
	0x02DFBDE0 LDR X0, [X20]
	0x02DFBDE4 LDR X8, [X8 + 0xC0]
	0x02DFBDE8 LDR W9, [X0 + 0xE0]
	0x02DFBDEC LDR X19, [X8]
	0x02DFBDF0 CBNZ W9, 0x2DFBDF8
	0x02DFBDF4 BL 0x1C16DFC
	0x02DFBDF8 MOV X0, X19
	0x02DFBDFC LDP X20, X19, [X31 + 0x10]
	0x02DFBE00 MOV X1, X31
	0x02DFBE04 LDP X30, X21, [X31], #0x20
	0x02DFBE08 B 0x338C698
	0x02DFBE0C MOVZ W0, 0x20
	0x02DFBE10 RET
	0x02DFBE14 SUB X31, X31, 0x90
	0x02DFBE18 STR X30, [X31 + 0x60]
	0x02DFBE1C STP X22, X21, [X31 + 0x70]
	0x02DFBE20 STP X20, X19, [X31 + 0x80]
	0x02DFBE24 ADRP X21, 0x15E0000
	0x02DFBE28 ADRP X22, 0x1323000
	0x02DFBE2C LDRB W8, [X21 + 0x9E6]
	0x02DFBE30 LDR X22, [X22 + 0xFE0]
	0x02DFBE34 MOV X20, X1
	0x02DFBE38 MOV X19, X0
	0x02DFBE3C TBNZ X8, 0x0, 0x2DFBE54
	0x02DFBE40 ADRP X0, 0x1323000
	0x02DFBE44 LDR X0, [X0 + 0xFE0]
	0x02DFBE48 BL 0x1C16CF4
	0x02DFBE4C MOVZ W8, 0x1
	0x02DFBE50 STRB W8, [X21 + 0x9E6]
	0x02DFBE54 LDR X8, [X22]
	0x02DFBE58 LDR X8, [X8 + 0xB8]
	0x02DFBE5C LDRB W8, [X8 + 0x1]
	0x02DFBE60 CBZ W8, 0x2DFBE74
	0x02DFBE64 LDRB W8, [X19 + 0xA4]
	0x02DFBE68 CBNZ W8, 0x2DFBE74
	0x02DFBE6C LDRB W8, [X19 + 0x138]
	0x02DFBE70 CBZ W8, 0x2DFBEC8
	0x02DFBE74 MOV X0, X19
	0x02DFBE78 BL 0x2DFBEE0
	0x02DFBE7C LDP V1, V0, [X0]
	0x02DFBE80 ADD X1, X31, 0x40
	0x02DFBE84 MOV X0, X19
	0x02DFBE88 STP V1, V0, [X31]
	0x02DFBE8C LDR X8, [X20 + 0x20]
	0x02DFBE90 LDP V0, V1, [X31]
	0x02DFBE94 LDR X8, [X8 + 0xC0]
	0x02DFBE98 LDR X8, [X8 + 0x30]
	0x02DFBE9C STP V0, V1, [X31 + 0x40]
	0x02DFBEA0 LDR X8, [X8 + 0x20]
	0x02DFBEA4 LDR X8, [X8 + 0xC0]
	0x02DFBEA8 LDR X2, [X8 + 0x78]
	0x02DFBEAC BL 0x2E02F5C
	0x02DFBEB0 LDP V1, V0, [X31 + 0x40]
	0x02DFBEB4 ADD X8, X19, 0xF8
	0x02DFBEB8 STP V1, V0, [X31 + 0x20]
	0x02DFBEBC STR V0, [X8 + 0x1]
	0x02DFBEC0 STUR V1, [X19 + 0xF8]
	0x02DFBEC4 STRB W31, [X19 + 0xA4]
	0x02DFBEC8 ADD X0, X19, 0xF8
	0x02DFBECC LDP X20, X19, [X31 + 0x80]
	0x02DFBED0 LDP X22, X21, [X31 + 0x70]
	0x02DFBED4 LDR X30, [X31 + 0x60]
	0x02DFBED8 ADD X31, X31, 0x90
	0x02DFBEDC RET
	0x02DFBEE0 SUB X31, X31, 0x60
	0x02DFBEE4 STP X30, X21, [X31 + 0x40]
	0x02DFBEE8 STP X20, X19, [X31 + 0x50]
	0x02DFBEEC ADRP X20, 0x15E0000
	0x02DFBEF0 ADRP X21, 0x1323000
	0x02DFBEF4 LDRB W8, [X20 + 0x9E7]
	0x02DFBEF8 LDR X21, [X21 + 0xFE0]
	0x02DFBEFC MOV X19, X0
	0x02DFBF00 TBNZ X8, 0x0, 0x2DFBF18
	0x02DFBF04 ADRP X0, 0x1323000
	0x02DFBF08 LDR X0, [X0 + 0xFE0]
	0x02DFBF0C BL 0x1C16CF4
	0x02DFBF10 MOVZ W8, 0x1
	0x02DFBF14 STRB W8, [X20 + 0x9E7]
	0x02DFBF18 LDR X8, [X21]
	0x02DFBF1C LDR X8, [X8 + 0xB8]
	0x02DFBF20 LDRB W8, [X8 + 0x1]
	0x02DFBF24 CBZ W8, 0x2DFBF34
	0x02DFBF28 LDRB W8, [X19 + 0xA5]
	0x02DFBF2C CBNZ W8, 0x2DFBF38
	0x02DFBF30 B 0x2DFBF74
	0x02DFBF34 CBZ X19, 0x2DFBF88
	0x02DFBF38 MOV X0, X19
	0x02DFBF3C MOV X1, X31
	0x02DFBF40 BL 0x3772640
	0x02DFBF44 LDR X8, [X19]
	0x02DFBF48 MOV X1, X0
	0x02DFBF4C MOV X0, X19
	0x02DFBF50 LDR X9, [X8 + 0x248]
	0x02DFBF54 LDR X2, [X8 + 0x250]
	0x02DFBF58 ADD X8, X31, 0x0
	0x02DFBF5C BLR X9
	0x02DFBF60 LDP V1, V0, [X31]
	0x02DFBF64 ADD X8, X19, 0x118
	0x02DFBF68 STP V1, V0, [X31 + 0x20]
	0x02DFBF6C STP V1, V0, [X8]
	0x02DFBF70 STRB W31, [X19 + 0xA5]
	0x02DFBF74 ADD X0, X19, 0x118
	0x02DFBF78 LDP X20, X19, [X31 + 0x50]
	0x02DFBF7C LDP X30, X21, [X31 + 0x40]
	0x02DFBF80 ADD X31, X31, 0x60
	0x02DFBF84 RET
	0x02DFBF88 BL 0x1C16F20
	0x02DFBF8C STP X30, X19, [X31 - 0x10]!
	0x02DFBF90 LDR X9, [X1 + 0x20]
	0x02DFBF94 MOV X19, X8
	0x02DFBF98 LDR X9, [X9 + 0xC0]
	0x02DFBF9C LDR X1, [X9 + 0x40]
	0x02DFBFA0 BL 0x2DFBE14
	0x02DFBFA4 LDP V0, V1, [X0]
	0x02DFBFA8 STP V0, V1, [X19]
	0x02DFBFAC LDP X30, X19, [X31], #0x10
	0x02DFBFB0 RET
	0x02DFBFB4 SUB X31, X31, 0x40
	0x02DFBFB8 STP X30, X21, [X31 + 0x20]
	0x02DFBFBC STP X20, X19, [X31 + 0x30]
	0x02DFBFC0 CBZ X0, 0x2DFC00C
	0x02DFBFC4 MOV X21, X1
	0x02DFBFC8 MOV X1, X31
	0x02DFBFCC MOV X20, X0
	0x02DFBFD0 MOV X19, X8
	0x02DFBFD4 BL 0x3772B40
	0x02DFBFD8 LDR X8, [X21 + 0x20]
	0x02DFBFDC MOV X1, X0
	0x02DFBFE0 MOV X0, X20
	0x02DFBFE4 LDR X8, [X8 + 0xC0]
	0x02DFBFE8 LDR X2, [X8 + 0x48]
	0x02DFBFEC ADD X8, X31, 0x0
	0x02DFBFF0 BL 0x2DFC09C
	0x02DFBFF4 LDP V1, V0, [X31]
	0x02DFBFF8 LDP X30, X21, [X31 + 0x20]
	0x02DFBFFC STP V1, V0, [X19]
	0x02DFC000 LDP X20, X19, [X31 + 0x30]
	0x02DFC004 ADD X31, X31, 0x40
	0x02DFC008 RET
	0x02DFC00C BL 0x1C16F20
	0x02DFC010 SUB X31, X31, 0x50
	0x02DFC014 STR X30, [X31 + 0x20]
	0x02DFC018 STP X22, X21, [X31 + 0x30]
	0x02DFC01C STP X20, X19, [X31 + 0x40]
	0x02DFC020 CBZ X0, 0x2DFC098
	0x02DFC024 ADRP X22, 0x15DF000
	0x02DFC028 MOV X19, X8
	0x02DFC02C LDRB W8, [X22 + 0xA03]
	0x02DFC030 MOV X21, X1
	0x02DFC034 MOV X20, X0
	0x02DFC038 CBNZ W8, 0x2DFC050
	0x02DFC03C ADRP X0, 0x1322000
	0x02DFC040 LDR X0, [X0 + 0xFE8]
	0x02DFC044 BL 0x1C16CF4
	0x02DFC048 MOVZ W8, 0x1
	0x02DFC04C STRB W8, [X22 + 0xA03]
	0x02DFC050 ADRP X8, 0x1322000
	0x02DFC054 LDR X8, [X8 + 0xFE8]
	0x02DFC058 LDR X9, [X21 + 0x20]
	0x02DFC05C MOV X0, X20
	0x02DFC060 LDR X8, [X8]
	0x02DFC064 LDR X9, [X9 + 0xC0]
	0x02DFC068 LDR X8, [X8 + 0xB8]
	0x02DFC06C LDR X2, [X9 + 0x48]
	0x02DFC070 LDR X1, [X8]
	0x02DFC074 ADD X8, X31, 0x0
	0x02DFC078 BL 0x2DFC09C
	0x02DFC07C LDP V1, V0, [X31]
	0x02DFC080 LDP X22, X21, [X31 + 0x30]
	0x02DFC084 LDR X30, [X31 + 0x20]
	0x02DFC088 STP V1, V0, [X19]
	0x02DFC08C LDP X20, X19, [X31 + 0x40]
	0x02DFC090 ADD X31, X31, 0x50
	0x02DFC094 RET
	0x02DFC098 BL 0x1C16F20
	0x02DFC09C SUB X31, X31, 0x60
	0x02DFC0A0 STP X30, X21, [X31 + 0x40]
	0x02DFC0A4 STP X20, X19, [X31 + 0x50]
	0x02DFC0A8 MOV X19, X2
	0x02DFC0AC CBZ X1, 0x2DFC114
	0x02DFC0B0 MOV X20, X8
	0x02DFC0B4 LDR X8, [X0]
	0x02DFC0B8 MOV X21, X0
	0x02DFC0BC LDR X9, [X8 + 0x248]
	0x02DFC0C0 LDR X2, [X8 + 0x250]
	0x02DFC0C4 ADD X8, X31, 0x20
	0x02DFC0C8 BLR X9
	0x02DFC0CC LDP V1, V0, [X31 + 0x20]
	0x02DFC0D0 ADD X1, X31, 0x20
	0x02DFC0D4 MOV X0, X21
	0x02DFC0D8 STP V1, V0, [X31]
	0x02DFC0DC LDR X8, [X19 + 0x20]
	0x02DFC0E0 LDR X8, [X8 + 0xC0]
	0x02DFC0E4 LDR X8, [X8 + 0x30]
	0x02DFC0E8 STP V1, V0, [X31 + 0x20]
	0x02DFC0EC LDR X8, [X8 + 0x20]
	0x02DFC0F0 LDR X8, [X8 + 0xC0]
	0x02DFC0F4 LDR X2, [X8 + 0x78]
	0x02DFC0F8 BL 0x2E02F5C
	0x02DFC0FC LDP V1, V0, [X31 + 0x20]
	0x02DFC100 LDP X30, X21, [X31 + 0x40]
	0x02DFC104 STP V1, V0, [X20]
	0x02DFC108 LDP X20, X19, [X31 + 0x50]
	0x02DFC10C ADD X31, X31, 0x60
	0x02DFC110 RET
	0x02DFC114 ADRP X0, 0x12FC000
	0x02DFC118 LDR X0, [X0 + 0x528]
	0x02DFC11C BL 0x1C16D08
	0x02DFC120 BL 0x1C16F10
	0x02DFC124 MOV X20, X0
	0x02DFC128 ADRP X0, 0x131F000
	0x02DFC12C LDR X0, [X0 + 0xD88]
	0x02DFC130 BL 0x1C16D08
	0x02DFC134 MOV X1, X0
	0x02DFC138 MOV X0, X20
	0x02DFC13C MOV X2, X31
	0x02DFC140 BL 0x330E100
	0x02DFC144 MOV X0, X20
	0x02DFC148 MOV X1, X19
	0x02DFC14C BL 0x1C16DEC
	0x02DFC150 SUB X31, X31, 0x50
	0x02DFC154 STR X30, [X31 + 0x20]
	0x02DFC158 STP X22, X21, [X31 + 0x30]
	0x02DFC15C STP X20, X19, [X31 + 0x40]
	0x02DFC160 CBZ X0, 0x2DFC1DC
	0x02DFC164 MOV X21, X1
	0x02DFC168 MOV X1, X31
	0x02DFC16C MOV X22, X2
	0x02DFC170 MOV X20, X0
	0x02DFC174 MOV X19, X8
	0x02DFC178 BL 0x3772640
	0x02DFC17C CMP X0, X21
	0x02DFC180 B.EQ 0x2DFC1AC
	0x02DFC184 LDR X8, [X22 + 0x20]
	0x02DFC188 MOV X0, X20
	0x02DFC18C MOV X1, X21
	0x02DFC190 LDR X8, [X8 + 0xC0]
	0x02DFC194 LDR X2, [X8 + 0x48]
	0x02DFC198 ADD X8, X31, 0x0
	0x02DFC19C BL 0x2DFC09C
	0x02DFC1A0 LDP V1, V0, [X31]
	0x02DFC1A4 STP V1, V0, [X19]
	0x02DFC1A8 B 0x2DFC1C8
	0x02DFC1AC LDR X8, [X22 + 0x20]
	0x02DFC1B0 MOV X0, X20
	0x02DFC1B4 LDR X8, [X8 + 0xC0]
	0x02DFC1B8 LDR X1, [X8 + 0x40]
	0x02DFC1BC BL 0x2DFBE14
	0x02DFC1C0 LDP V0, V1, [X0]
	0x02DFC1C4 STP V0, V1, [X19]
	0x02DFC1C8 LDP X20, X19, [X31 + 0x40]
	0x02DFC1CC LDP X22, X21, [X31 + 0x30]
	0x02DFC1D0 LDR X30, [X31 + 0x20]
	0x02DFC1D4 ADD X31, X31, 0x50
	0x02DFC1D8 RET
	0x02DFC1DC BL 0x1C16F20
	0x02DFC1E0 SUB X31, X31, 0x40
	0x02DFC1E4 STP X30, X21, [X31 + 0x20]
	0x02DFC1E8 STP X20, X19, [X31 + 0x30]
	0x02DFC1EC CBZ X0, 0x2DFC254
	0x02DFC1F0 MOV X21, X1
	0x02DFC1F4 MOV X1, X31
	0x02DFC1F8 MOV X20, X0
	0x02DFC1FC MOV X19, X8
	0x02DFC200 BL 0x3772640
	0x02DFC204 CMP X0, X21
	0x02DFC208 B.EQ 0x2DFC234
	0x02DFC20C LDR X8, [X20]
	0x02DFC210 MOV X0, X20
	0x02DFC214 MOV X1, X21
	0x02DFC218 LDR X9, [X8 + 0x248]
	0x02DFC21C LDR X2, [X8 + 0x250]
	0x02DFC220 ADD X8, X31, 0x0
	0x02DFC224 BLR X9
	0x02DFC228 LDP V1, V0, [X31]
	0x02DFC22C STP V1, V0, [X19]
	0x02DFC230 B 0x2DFC244
	0x02DFC234 MOV X0, X20
	0x02DFC238 BL 0x2DFBEE0
	0x02DFC23C LDP V0, V1, [X0]
	0x02DFC240 STP V0, V1, [X19]
	0x02DFC244 LDP X20, X19, [X31 + 0x30]
	0x02DFC248 LDP X30, X21, [X31 + 0x20]
	0x02DFC24C ADD X31, X31, 0x40
	0x02DFC250 RET
	0x02DFC254 BL 0x1C16F20
	0x02DFC258 STP X30, X19, [X31 - 0x10]!
	0x02DFC25C MOV X19, X8

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X24, 0x15E1000
	010 Move W8, [X24+2524]
	011 Move X19, X4
	012 Move W21, W3
	013 Move W22, W2
	014 Move X23, X1
	015 Move X20, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {34}
	020 Move X0, 0x12F9000
	021 Move X0, [X0+3584]
	022 Call 0x1C17CF4
	023 Move X0, 0x12F9000
	024 Move X0, [X0+3608]
	025 Call 0x1C17CF4
	026 Move X0, 0x12F9000
	027 Move X0, [X0+1448]
	028 Call 0x1C17CF4
	029 Move X0, 0x1321000
	030 Move X0, [X0+1696]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X24+2524], W8
	034 Compare X23, 0
	035 JumpIfEqual {311}
	036 Move TEMP, X22
	037 And TEMP, TEMP, -2147483648
	038 Compare TEMP, -2147483648
	039 JumpIfEqual {46}
	040 Move TEMP, X21
	041 And TEMP, TEMP, -2147483648
	042 Compare TEMP, -2147483648
	043 JumpIfEqual {62}
	044 Compare W22, 0
	045 JumpIfNotEqual {72}
	046 Move X0, [X19+32]
	047 Move W8, [X0+309]
	048 Move TEMP, X8
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfEqual {53}
	052 Call 0x1C5D684
	053 Move X8, [X0+192]
	054 Move X0, X23
	055 Move X1, [X8+136]
	056 Call Enumerable.Count, X0
	057 Move W22, W0
	058 Move TEMP, X21
	059 And TEMP, TEMP, -2147483648
	060 Compare TEMP, -2147483648
	061 JumpIfNotEqual {44}
	062 Move X0, [X19+32]
	063 Move W8, [X0+309]
	064 Move TEMP, X8
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfEqual {69}
	068 Call 0x1C5D684
	069 Move W21, [X20]
	070 Compare W22, 0
	071 JumpIfEqual {302}
	072 Move X0, [X19+32]
	073 Move W8, [X0+309]
	074 Move TEMP, X8
	075 And TEMP, TEMP, 1
	076 Compare TEMP, 1
	077 JumpIfEqual {79}
	078 Call 0x1C5D684
	079 Move X24, 0x15E1000
	080 Move W8, [X24+2519]
	081 Move TEMP, X8
	082 And TEMP, TEMP, 1
	083 Compare TEMP, 1
	084 JumpIfEqual {90}
	085 Move X0, 0x1324000
	086 Move X0, [X0+3936]
	087 Call 0x1C17CF4
	088 Move W8, 1
	089 Move [X24+2519], W8
	090 Move X8, [X20+8]
	091 Compare X8, 0
	092 JumpIfEqual {94}
	093 Move W8, [X20+16]
	094 Move W9, [X20]
	095 Add W24, W9, W22
	096 NotImplemented "Instruction CMP not yet implemented."
	097 Move X8, 0x12F9000
	098 Move X8, [X8+1448]
	099 Move X0, [X8]
	100 Move W8, [X0+224]
	101 Compare W8, 0
	102 JumpIfNotEqual {104}
	103 Call 0x1C17DFC
	104 Move W1, 10
	105 Move W0, W24
	106 Move X2, X31
	107 Call Math.Max, X0, X1
	108 Move X8, [X19+32]
	109 Move W24, W0
	110 Move W9, [X8+309]
	111 Move TEMP, X9
	112 And TEMP, TEMP, 1
	113 Compare TEMP, 1
	114 JumpIfEqual {118}
	115 Move X0, X8
	116 Call 0x1C5D684
	117 Move X8, X0
	118 Move X8, [X8+192]
	119 Move X0, X20
	120 Move W1, W24
	121 Move X2, [X8+40]
	122 Call 0x2DFB384, X0, X1
	123 Move X0, [X19+32]
	124 Move W8, [X0+309]
	125 Move TEMP, X8
	126 And TEMP, TEMP, 1
	127 Compare TEMP, 1
	128 JumpIfEqual {130}
	129 Call 0x1C5D684
	130 Move W8, [X20]
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Move X0, [X19+32]
	133 Move X25, [X20+8]
	134 Move X24, [X20+16]
	135 Move W9, [X0+309]
	136 Move TEMP, X9
	137 And TEMP, TEMP, 1
	138 Compare TEMP, 1
	139 JumpIfEqual {142}
	140 Call 0x1C5D684
	141 Move W8, [X20]
	142 Move X9, 0x1321000
	143 Move X9, [X9+1696]
	144 Add W5, W21, W22
	145 Subtract W6, W8, W21
	146 Move X0, X25
	147 Move X7, [X9]
	148 Move X1, X24
	149 Move W2, W21
	150 Move X3, X25
	151 Move X4, X24
	152 Call NativeArray`1<UInt64>.Copy, X0, X1, X2, X3, X4
	153 Move X0, [X19+32]
	154 Move W8, [X0+309]
	155 Move TEMP, X8
	156 And TEMP, TEMP, 1
	157 Compare TEMP, 1
	158 JumpIfEqual {160}
	159 Call 0x1C5D684
	160 Move X8, [X0+192]
	161 Move X1, [X8+56]
	162 Move W8, [X1+309]
	163 Move TEMP, X8
	164 And TEMP, TEMP, 1
	165 Compare TEMP, 1
	166 JumpIfEqual {170}
	167 Move X0, X1
	168 Call 0x1C5D684
	169 Move X1, X0
	170 Move X8, [X23]
	171 NotImplemented "Instruction LDRH not yet implemented."
	172 Compare X9, 0
	173 JumpIfEqual {180}
	174 Move X10, [X8+176]
	175 Add X10, X10, 8
	176 NotImplemented "Instruction LDUR not yet implemented."
	177 NotImplemented "Instruction CMP not yet implemented."
	178 Subtract X9, X9, 1
	179 Add X10, X10, 16
	180 Move X0, X23
	181 Move W2, W31
	182 Call 0x1C5D788
	183 NotImplemented "Instruction LDRSW not yet implemented."
	184 Add X8, X8, X9
	185 Add X0, X8, 312
	186 Move X8, [X0]
	187 Move X1, [X0+8]
	188 Move X0, X23
	189 NotImplemented "Instruction BLR not yet implemented."
	190 Move X23, X0
	191 Compare X0, 0
	192 JumpIfEqual {326}
	193 Move X25, 0x12F9000
	194 Move X25, [X25+3608]
	195 Move X8, [X23]
	196 Move X1, [X25]
	197 NotImplemented "Instruction LDRH not yet implemented."
	198 Compare X9, 0
	199 JumpIfEqual {206}
	200 Move X10, [X8+176]
	201 Add X10, X10, 8
	202 NotImplemented "Instruction LDUR not yet implemented."
	203 NotImplemented "Instruction CMP not yet implemented."
	204 Subtract X9, X9, 1
	205 Add X10, X10, 16
	206 Move X0, X23
	207 Move W2, W31
	208 Call 0x1C5D788
	209 NotImplemented "Instruction LDRSW not yet implemented."
	210 Add X8, X8, X9
	211 Add X0, X8, 312
	212 Move X8, [X0]
	213 Move X1, [X0+8]
	214 Move X0, X23
	215 NotImplemented "Instruction BLR not yet implemented."
	216 Move TEMP, X0
	217 And TEMP, TEMP, 1
	218 Compare TEMP, 1
	219 JumpIfNotEqual {274}
	220 Move X0, [X19+32]
	221 Move W8, [X0+309]
	222 Move TEMP, X8
	223 And TEMP, TEMP, 1
	224 Compare TEMP, 1
	225 JumpIfEqual {227}
	226 Call 0x1C5D684
	227 Move X8, [X0+192]
	228 Move X1, [X8+72]
	229 Move W8, [X1+309]
	230 Move TEMP, X8
	231 And TEMP, TEMP, 1
	232 Compare TEMP, 1
	233 JumpIfEqual {237}
	234 Move X0, X1
	235 Call 0x1C5D684
	236 Move X1, X0
	237 Move X8, [X23]
	238 NotImplemented "Instruction LDRH not yet implemented."
	239 Compare X9, 0
	240 JumpIfEqual {247}
	241 Move X10, [X8+176]
	242 Add X10, X10, 8
	243 NotImplemented "Instruction LDUR not yet implemented."
	244 NotImplemented "Instruction CMP not yet implemented."
	245 Subtract X9, X9, 1
	246 Add X10, X10, 16
	247 Move X0, X23
	248 Move W2, W31
	249 Call 0x1C5D788
	250 NotImplemented "Instruction LDRSW not yet implemented."
	251 Add X8, X8, X9
	252 Add X0, X8, 312
	253 Move X8, [X0]
	254 Move X1, [X0+8]
	255 Move X0, X23
	256 NotImplemented "Instruction BLR not yet implemented."
	257 Move X24, X0
	258 Move X0, [X19+32]
	259 Move W8, [X0+309]
	260 Move TEMP, X8
	261 And TEMP, TEMP, 1
	262 Compare TEMP, 1
	263 JumpIfEqual {265}
	264 Call 0x1C5D684
	265 Move X0, X24
	266 Call 0x2DFCBE4, X0
	267 Move X8, [X20+8]
	268 Subtract W22, W22, 1
	269 Move [X8], X0
	270 Move W8, [X20]
	271 Add W21, W21, 1
	272 Add W8, W8, 1
	273 Move [X20], W8
	274 Move X19, X31
	275 Compare X23, 0
	276 JumpIfEqual {300}
	277 Move X10, 0x12F8000
	278 Move X8, [X23]
	279 Move X10, [X10+3584]
	280 NotImplemented "Instruction LDRH not yet implemented."
	281 Move X1, [X10]
	282 Compare X9, 0
	283 JumpIfEqual {290}
	284 Move X10, [X8+176]
	285 Add X10, X10, 8
	286 NotImplemented "Instruction LDUR not yet implemented."
	287 NotImplemented "Instruction CMP not yet implemented."
	288 Subtract X9, X9, 1
	289 Add X10, X10, 16
	290 Move X0, X23
	291 Move W2, W31
	292 Call 0x1C5D788
	293 NotImplemented "Instruction LDRSW not yet implemented."
	294 Add X8, X8, X9
	295 Add X0, X8, 312
	296 Move X8, [X0]
	297 Move X1, [X0+8]
	298 Move X0, X23
	299 NotImplemented "Instruction BLR not yet implemented."
	300 Compare X19, 0
	301 JumpIfNotEqual {327}
	302 Move X20, [X31+48]
	303 Move X19, [X31+56]
	304 Move X22, [X31+32]
	305 Move X21, [X31+40]
	306 Move X24, [X31+16]
	307 Move X23, [X31+24]
	308 Move X30, [X31+64]
	309 Move X25, [X31+72]
	310 Return 
	311 Move X0, 0x12FD000
	312 Move X0, [X0+1320]
	313 Call 0x1C17D08
	314 Call 0x1C17F10
	315 Move X20, X0
	316 Move X0, 0x1321000
	317 Move X0, [X0+448]
	318 Call 0x1C17D08
	319 Move X1, X0
	320 Move X0, X20
	321 Move X2, X31
	322 Call ArgumentNullException..ctor, X0, X1
	323 Move X0, X20
	324 Move X1, X19
	325 Call 0x1C17DEC
	326 Call 0x1C17F20
	327 Move X0, X19
	328 Call 0x1C17F18
	329 Move X20, X0
	330 NotImplemented "Instruction CMP not yet implemented."
	331 Move X0, X20
	332 Call 0x3EB2AD0
	333 Move X19, [X0]
	334 Call 0x3EB2AE0
	335 Move X19, X31
	336 Move X20, X0
	337 Compare X23, 0
	338 JumpIfEqual {362}
	339 Move X10, 0x12F8000
	340 Move X8, [X23]
	341 Move X10, [X10+3584]
	342 NotImplemented "Instruction LDRH not yet implemented."
	343 Move X1, [X10]
	344 Compare X9, 0
	345 JumpIfEqual {352}
	346 Move X10, [X8+176]
	347 Add X10, X10, 8
	348 NotImplemented "Instruction LDUR not yet implemented."
	349 NotImplemented "Instruction CMP not yet implemented."
	350 Subtract X9, X9, 1
	351 Add X10, X10, 16
	352 Move X0, X23
	353 Move W2, W31
	354 Call 0x1C5D788
	355 NotImplemented "Instruction LDRSW not yet implemented."
	356 Add X8, X8, X9
	357 Add X0, X8, 312
	358 Move X8, [X0]
	359 Move X1, [X0+8]
	360 Move X0, X23
	361 NotImplemented "Instruction BLR not yet implemented."
	362 Compare X19, 0
	363 JumpIfNotEqual {366}
	364 Move X0, X20
	365 Call 0x1D2D690
	366 Move X0, X19
	367 Call 0x1C17F18
	368 Call 0x1991590

Method: System.Boolean Remove(TControl item)

Disassembly:
	0x02DFC260 BL 0x2DFBEE0
	0x02DFC264 LDP V0, V1, [X0]
	0x02DFC268 STP V0, V1, [X19]
	0x02DFC26C LDP X30, X19, [X31], #0x10
	0x02DFC270 RET
	0x02DFC274 SUB X31, X31, 0x50
	0x02DFC278 STP X30, X19, [X31 + 0x40]
	0x02DFC27C LDR X8, [X2 + 0x20]
	0x02DFC280 MOV X19, X2
	0x02DFC284 LDR X8, [X8 + 0xC0]
	0x02DFC288 LDR X2, [X8 + 0x48]
	0x02DFC28C ADD X8, X31, 0x20
	0x02DFC290 BL 0x2DFC09C
	0x02DFC294 LDP V0, V1, [X31 + 0x20]
	0x02DFC298 ADD X1, X31, 0x0
	0x02DFC29C STP V0, V1, [X31]
	0x02DFC2A0 LDR X8, [X19 + 0x20]
	0x02DFC2A4 LDR X8, [X8 + 0xC0]
	0x02DFC2A8 LDR X0, [X8 + 0x28]
	0x02DFC2AC BL 0x1C16E04
	0x02DFC2B0 LDP X30, X19, [X31 + 0x40]
	0x02DFC2B4 ADD X31, X31, 0x50
	0x02DFC2B8 RET
	0x02DFC2BC SUB X31, X31, 0x50
	0x02DFC2C0 STP X30, X21, [X31 + 0x30]
	0x02DFC2C4 STP X20, X19, [X31 + 0x40]
	0x02DFC2C8 MOVI V0.2D, 0x0
	0x02DFC2CC STP V0, V0, [X31 + 0x10]
	0x02DFC2D0 CBZ X1, 0x2DFC31C
	0x02DFC2D4 MOV X19, X2
	0x02DFC2D8 CBZ X2, 0x2DFC340
	0x02DFC2DC CMP W3, 0x1F
	0x02DFC2E0 B.LE 0x2DFC37C
	0x02DFC2E4 LDR X8, [X4 + 0x20]
	0x02DFC2E8 LDR X8, [X8 + 0xC0]
	0x02DFC2EC LDR X2, [X8 + 0x48]
	0x02DFC2F0 ADD X8, X31, 0x10
	0x02DFC2F4 BL 0x2DFC09C
	0x02DFC2F8 ADD X1, X31, 0x10
	0x02DFC2FC MOVZ W2, 0x20
	0x02DFC300 MOV X0, X19
	0x02DFC304 MOV X3, X31
	0x02DFC308 BL 0x3BFF954
	0x02DFC30C LDP X20, X19, [X31 + 0x40]
	0x02DFC310 LDP X30, X21, [X31 + 0x30]
	0x02DFC314 ADD X31, X31, 0x50
	0x02DFC318 RET

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x15E0000
	007 Move W8, [X22+2525]
	008 Move X21, X2
	009 Move X20, X1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x1323000
	016 Move X0, [X0+4008]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+2525], W8
	020 Move W8, [X19]
	021 Compare W8, 0
	022 JumpIfEqual {41}
	023 Move X0, [X21+32]
	024 Move W8, [X0+309]
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {30}
	029 Call 0x1C5D684
	030 Move X0, X20
	031 Call 0x2DFCBE4, X0
	032 NotImplemented "Instruction LDRSW not yet implemented."
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X8, X0
	035 Move X0, [X19+8]
	036 Move X3, X31
	037 Move X10, [X0]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Add X3, X3, 1
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move W0, W31
	042 Move X20, [X31+32]
	043 Move X19, [X31+40]
	044 Move X22, [X31+16]
	045 Move X21, [X31+24]
	046 Move X30, [X31+48]
	047 Return X0
	048 Move X8, 0x1323000
	049 Move X1, [X19+16]
	050 Move X8, [X8+4008]
	051 Move X2, X19
	052 Move X4, [X8]
	053 Call 0x21790F0, X0, X1, X2
	054 Move W0, 1

Method: System.Void RemoveAt(System.Int32 index)

Disassembly:
	0x02DFC31C ADRP X0, 0x12FC000
	0x02DFC320 LDR X0, [X0 + 0x528]
	0x02DFC324 MOV X19, X4
	0x02DFC328 BL 0x1C16D08
	0x02DFC32C BL 0x1C16F10
	0x02DFC330 MOV X20, X0
	0x02DFC334 ADRP X0, 0x131F000
	0x02DFC338 LDR X0, [X0 + 0xD88]
	0x02DFC33C B 0x2DFC360
	0x02DFC340 ADRP X0, 0x12FC000
	0x02DFC344 LDR X0, [X0 + 0x528]
	0x02DFC348 MOV X19, X4
	0x02DFC34C BL 0x1C16D08
	0x02DFC350 BL 0x1C16F10
	0x02DFC354 MOV X20, X0
	0x02DFC358 ADRP X0, 0x1322000
	0x02DFC35C LDR X0, [X0 + 0xFF0]
	0x02DFC360 BL 0x1C16D08
	0x02DFC364 MOV X1, X0
	0x02DFC368 MOV X0, X20
	0x02DFC36C MOV X2, X31
	0x02DFC370 BL 0x330E100
	0x02DFC374 MOV X0, X20
	0x02DFC378 B 0x2DFC414
	0x02DFC37C STR W3, [X31 + 0xC]
	0x02DFC380 ADRP X20, 0x12F7000
	0x02DFC384 LDR X20, [X20 + 0x758]
	0x02DFC388 MOV X19, X4
	0x02DFC38C MOV X0, X20
	0x02DFC390 BL 0x1C16D08
	0x02DFC394 ADD X1, X31, 0xC
	0x02DFC398 BL 0x1C16E04
	0x02DFC39C MOV X21, X0
	0x02DFC3A0 MOVZ W8, 0x20
	0x02DFC3A4 MOV X0, X20
	0x02DFC3A8 STR W8, [X31 + 0x8]
	0x02DFC3AC BL 0x1C16D08
	0x02DFC3B0 ADD X1, X31, 0x8
	0x02DFC3B4 BL 0x1C16E04
	0x02DFC3B8 MOV X20, X0
	0x02DFC3BC ADRP X0, 0x1322000
	0x02DFC3C0 LDR X0, [X0 + 0xFF8]
	0x02DFC3C4 BL 0x1C16D08
	0x02DFC3C8 MOV X1, X21
	0x02DFC3CC MOV X2, X20
	0x02DFC3D0 MOV X3, X31
	0x02DFC3D4 BL 0x3227BD4
	0x02DFC3D8 MOV X20, X0
	0x02DFC3DC ADRP X0, 0x12FF000
	0x02DFC3E0 LDR X0, [X0 + 0x578]
	0x02DFC3E4 BL 0x1C16D08
	0x02DFC3E8 BL 0x1C16F10
	0x02DFC3EC MOV X21, X0
	0x02DFC3F0 ADRP X0, 0x1322000
	0x02DFC3F4 LDR X0, [X0 + 0xF58]
	0x02DFC3F8 BL 0x1C16D08
	0x02DFC3FC MOV X2, X0
	0x02DFC400 MOV X0, X21
	0x02DFC404 MOV X1, X20
	0x02DFC408 MOV X3, X31
	0x02DFC40C BL 0x330E16C
	0x02DFC410 MOV X0, X21
	0x02DFC414 MOV X1, X19
	0x02DFC418 BL 0x1C16DEC
	0x02DFC41C SUB X31, X31, 0x90
	0x02DFC420 STP X30, X21, [X31 + 0x70]
	0x02DFC424 STP X20, X19, [X31 + 0x80]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x15E0000
	007 Move W8, [X22+2526]
	008 Move X19, X2
	009 Move W21, W1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x1323000
	016 Move X0, [X0+4008]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+2526], W8
	020 Move TEMP, X21
	021 And TEMP, TEMP, -2147483648
	022 Compare TEMP, -2147483648
	023 JumpIfEqual {40}
	024 Move W8, [X20]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X8, 0x1323000
	027 Move X8, [X8+4008]
	028 Move X0, [X20+8]
	029 Move X1, [X20+16]
	030 Move X2, X20
	031 Move W3, W21
	032 Move X4, [X8]
	033 Move X20, [X31+32]
	034 Move X19, [X31+40]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move X30, [X31+48]
	038 Call 0x21790F0, X0, X1, X2
	039 Return 
	040 Move [X31+12], W21
	041 Move X21, 0x12F8000
	042 Move X21, [X21+1880]
	043 Move X0, X21
	044 Call 0x1C17D08
	045 Add X1, X31, 12
	046 Call 0x1C17E04
	047 Move W8, [X20]
	048 Move X22, X0
	049 Move X0, X21
	050 Move [X31+8], W8
	051 Call 0x1C17D08
	052 Add X1, X31, 8
	053 Call 0x1C17E04
	054 Move X20, X0
	055 Move X0, 0x1323000
	056 Move X0, [X0+4016]
	057 Call 0x1C17D08
	058 Move X1, X22
	059 Move X2, X20
	060 Move X3, X31
	061 Call String.Format, X0, X1, X2
	062 Move X20, X0
	063 Move X0, 0x1300000
	064 Move X0, [X0+1888]
	065 Call 0x1C17D08
	066 Call 0x1C17F10
	067 Move X21, X0
	068 Move X0, 0x1303000
	069 Move X0, [X0+304]
	070 Call 0x1C17D08
	071 Move X1, X0
	072 Move X0, X21
	073 Move X2, X20
	074 Move X3, X31
	075 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	076 Move X0, X21
	077 Move X1, X19
	078 Call 0x1C17DEC

Method: System.Void CopyTo(TControl[] array, System.Int32 arrayIndex)

Disassembly:
	0x02DFC428 MOVI V0.2D, 0x0
	0x02DFC42C STP V0, V0, [X31 + 0x30]
	0x02DFC430 CBZ X1, 0x2DFC498
	0x02DFC434 MOV X19, X3
	0x02DFC438 CBZ X3, 0x2DFC4BC
	0x02DFC43C CMP W2, 0x1F
	0x02DFC440 B.LE 0x2DFC4F8
	0x02DFC444 MOV X20, X0
	0x02DFC448 MOVI V0.2D, 0x0
	0x02DFC44C ADD X0, X31, 0x30
	0x02DFC450 MOVZ W2, 0x20
	0x02DFC454 MOV X3, X31
	0x02DFC458 STP V0, V0, [X31 + 0x30]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X0, 0x1301000
	005 Move X0, [X0+1880]
	006 Move X19, X3
	007 Call 0x1C17D08
	008 Call 0x1C17F10
	009 Move X1, X31
	010 Move X20, X0
	011 Call NotImplementedException..ctor, X0
	012 Move X0, X20
	013 Move X1, X19
	014 Call 0x1C17DEC

Method: System.Int32 IndexOf(TControl item)

Disassembly:
	0x02DFC45C BL 0x3BFF954
	0x02DFC460 LDP V1, V0, [X31 + 0x30]
	0x02DFC464 ADD X1, X31, 0x50
	0x02DFC468 MOV X0, X20
	0x02DFC46C MOV X2, X19
	0x02DFC470 STP V1, V0, [X31]
	0x02DFC474 LDR X8, [X20]
	0x02DFC478 LDR X9, [X8 + 0x258]
	0x02DFC47C STP V1, V0, [X31 + 0x50]
	0x02DFC480 LDR X3, [X8 + 0x260]
	0x02DFC484 BLR X9
	0x02DFC488 LDP X20, X19, [X31 + 0x80]
	0x02DFC48C LDP X30, X21, [X31 + 0x70]
	0x02DFC490 ADD X31, X31, 0x90
	0x02DFC494 RET
	0x02DFC498 ADRP X0, 0x12FC000
	0x02DFC49C LDR X0, [X0 + 0x528]
	0x02DFC4A0 MOV X19, X4
	0x02DFC4A4 BL 0x1C16D08

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X2+32]
	005 Move X19, X1
	006 Move X20, X0
	007 Move W9, [X8+309]
	008 Move TEMP, X9
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {15}
	012 Move X0, X8
	013 Call 0x1C5D684
	014 Move X8, X0
	015 Move X8, [X8+192]
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X4, [X8+144]
	021 Move TEMP, 0
	022 Not TEMP
	023 Move W3, TEMP
	024 Move W2, W31
	025 Move X30, [X31+32]

Method: System.Int32 IndexOf(TControl item, System.Int32 startIndex, System.Int32 count = -1)

Disassembly:
	0x02DFC4A8 BL 0x1C16F10
	0x02DFC4AC MOV X20, X0
	0x02DFC4B0 ADRP X0, 0x1322000
	0x02DFC4B4 LDR X0, [X0 + 0xFF0]
	0x02DFC4B8 B 0x2DFC4DC
	0x02DFC4BC ADRP X0, 0x12FC000
	0x02DFC4C0 LDR X0, [X0 + 0x528]
	0x02DFC4C4 MOV X19, X4
	0x02DFC4C8 BL 0x1C16D08
	0x02DFC4CC BL 0x1C16F10
	0x02DFC4D0 MOV X20, X0
	0x02DFC4D4 ADRP X0, 0x131F000
	0x02DFC4D8 LDR X0, [X0 + 0xD88]
	0x02DFC4DC BL 0x1C16D08
	0x02DFC4E0 MOV X1, X0
	0x02DFC4E4 MOV X0, X20
	0x02DFC4E8 MOV X2, X31
	0x02DFC4EC BL 0x330E100
	0x02DFC4F0 MOV X0, X20
	0x02DFC4F4 B 0x2DFC590
	0x02DFC4F8 STR W2, [X31 + 0x50]
	0x02DFC4FC ADRP X20, 0x12F7000
	0x02DFC500 LDR X20, [X20 + 0x758]
	0x02DFC504 MOV X19, X4
	0x02DFC508 MOV X0, X20
	0x02DFC50C BL 0x1C16D08
	0x02DFC510 ADD X1, X31, 0x50
	0x02DFC514 BL 0x1C16E04
	0x02DFC518 MOV X21, X0
	0x02DFC51C MOVZ W8, 0x20
	0x02DFC520 MOV X0, X20
	0x02DFC524 STR W8, [X31 + 0x2C]
	0x02DFC528 BL 0x1C16D08
	0x02DFC52C ADD X1, X31, 0x2C
	0x02DFC530 BL 0x1C16E04
	0x02DFC534 MOV X20, X0
	0x02DFC538 ADRP X0, 0x1322000
	0x02DFC53C LDR X0, [X0 + 0xFF8]
	0x02DFC540 BL 0x1C16D08
	0x02DFC544 MOV X1, X21
	0x02DFC548 MOV X2, X20
	0x02DFC54C MOV X3, X31
	0x02DFC550 BL 0x3227BD4
	0x02DFC554 MOV X20, X0
	0x02DFC558 ADRP X0, 0x12FF000
	0x02DFC55C LDR X0, [X0 + 0x578]
	0x02DFC560 BL 0x1C16D08
	0x02DFC564 BL 0x1C16F10
	0x02DFC568 MOV X21, X0
	0x02DFC56C ADRP X0, 0x1322000
	0x02DFC570 LDR X0, [X0 + 0xF58]
	0x02DFC574 BL 0x1C16D08
	0x02DFC578 MOV X2, X0
	0x02DFC57C MOV X0, X21
	0x02DFC580 MOV X1, X20
	0x02DFC584 MOV X3, X31
	0x02DFC588 BL 0x330E16C
	0x02DFC58C MOV X0, X21
	0x02DFC590 MOV X1, X19
	0x02DFC594 BL 0x1C16DEC
	0x02DFC598 SUB X31, X31, 0x70
	0x02DFC59C STP X30, X23, [X31 + 0x40]
	0x02DFC5A0 STP X22, X21, [X31 + 0x50]
	0x02DFC5A4 STP X20, X19, [X31 + 0x60]
	0x02DFC5A8 ADRP X23, 0x15DF000
	0x02DFC5AC LDRB W8, [X23 + 0x9E8]
	0x02DFC5B0 MOV X19, X3
	0x02DFC5B4 MOV X20, X2
	0x02DFC5B8 MOV X22, X1
	0x02DFC5BC MOV X21, X0
	0x02DFC5C0 TBNZ X8, 0x0, 0x2DFC5E4
	0x02DFC5C4 ADRP X0, 0x1300000
	0x02DFC5C8 LDR X0, [X0 + 0x9E8]
	0x02DFC5CC BL 0x1C16CF4
	0x02DFC5D0 ADRP X0, 0x12F7000
	0x02DFC5D4 LDR X0, [X0 + 0x6C0]
	0x02DFC5D8 BL 0x1C16CF4
	0x02DFC5DC MOVZ W8, 0x1
	0x02DFC5E0 STRB W8, [X23 + 0x9E8]
	0x02DFC5E4 CBZ X20, 0x2DFC6FC
	0x02DFC5E8 CBZ X22, 0x2DFC71C
	0x02DFC5EC LDR X8, [X19 + 0x20]
	0x02DFC5F0 LDR X8, [X8 + 0xC0]
	0x02DFC5F4 LDR X1, [X8 + 0x28]
	0x02DFC5F8 LDRB W8, [X1 + 0x135]
	0x02DFC5FC TBNZ X8, 0x0, 0x2DFC60C
	0x02DFC600 MOV X0, X1
	0x02DFC604 BL 0x1C5C684
	0x02DFC608 MOV X1, X0

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x15E0000
	009 Move W8, [X24+2527]
	010 Move X20, X4
	011 Move W23, W3
	012 Move W19, W2
	013 Move X22, X1
	014 Move X21, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0x1323000
	020 Move X0, [X0+3168]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X24+2527], W8
	024 Move TEMP, X19
	025 And TEMP, TEMP, -2147483648
	026 Compare TEMP, -2147483648
	027 JumpIfEqual {72}
	028 Move W8, [X21]
	029 Compare W8, 0
	030 JumpIfEqual {60}
	031 Subtract W9, W8, W19
	032 NotImplemented "Instruction BIC not yet implemented."
	033 NotImplemented "Instruction CMP not yet implemented."
	034 NotImplemented "Instruction CSEL not yet implemented."
	035 Add W9, W23, W19
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X0, [X20+32]
	038 Move X20, 0x1323000
	039 Move W8, [X0+309]
	040 Move X20, [X20+3168]
	041 Move TEMP, X8
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfEqual {46}
	045 Call 0x1C5D684
	046 Move X0, X22
	047 Call 0x2DFCBE4, X0
	048 Move X8, [X21+8]
	049 Move X1, [X21+16]
	050 Move X2, [X20]
	051 Move X20, X0
	052 Move X0, X8
	053 Call NativeArrayUnsafeUtility.GetUnsafeReadOnlyPtr, X0
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move W8, W23
	056 Move X9, [X0]
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Subtract X8, X8, 1
	059 Add W19, W19, 1
	060 Move TEMP, 0
	061 Not TEMP
	062 Move W19, TEMP
	063 Move W0, W19
	064 Move X20, [X31+48]
	065 Move X19, [X31+56]
	066 Move X22, [X31+32]
	067 Move X21, [X31+40]
	068 Move X24, [X31+16]
	069 Move X23, [X31+24]
	070 Move X30, [X31+64]
	071 Return X0
	072 Move X0, 0x1300000
	073 Move X0, [X0+1888]
	074 Call 0x1C17D08
	075 Call 0x1C17F10
	076 Move X19, X0
	077 Move X0, 0x1320000
	078 Move X0, [X0+1624]
	079 Call 0x1C17D08
	080 Move X21, X0
	081 Move X0, 0x1323000
	082 Move X0, [X0+4024]
	083 Call 0x1C17D08
	084 Move X2, X0
	085 Move X0, X19
	086 Move X1, X21
	087 Move X3, X31
	088 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	089 Move X0, 0x1300000
	090 Move X0, [X0+1888]
	091 Call 0x1C17D08
	092 Call 0x1C17F10
	093 Move X19, X0
	094 Move X0, 0x1320000
	095 Move X0, [X0+1608]
	096 Call 0x1C17D08
	097 Move X1, X0
	098 Move X0, X19
	099 Move X2, X31
	100 Call ArgumentOutOfRangeException..ctor, X0, X1
	101 Move X0, X19
	102 Move X1, X20
	103 Call 0x1C17DEC

Method: System.Void Insert(System.Int32 index, TControl item)

Disassembly:
	0x02DFC60C MOV X0, X22
	0x02DFC610 BL 0x1C16E00
	0x02DFC614 CBNZ X0, 0x2DFC67C
	0x02DFC618 ADRP X9, 0x12F7000
	0x02DFC61C LDR X8, [X19 + 0x20]
	0x02DFC620 LDR X9, [X9 + 0x6C0]
	0x02DFC624 LDR X8, [X8 + 0xC0]
	0x02DFC628 LDR X0, [X9]
	0x02DFC62C LDR X23, [X8]
	0x02DFC630 LDR W9, [X0 + 0xE0]
	0x02DFC634 CBNZ W9, 0x2DFC63C
	0x02DFC638 BL 0x1C16DFC
	0x02DFC63C MOV X0, X23

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X0, 0x1301000
	005 Move X0, [X0+1880]
	006 Move X19, X3
	007 Call 0x1C17D08
	008 Call 0x1C17F10
	009 Move X1, X31
	010 Move X20, X0
	011 Call NotImplementedException..ctor, X0
	012 Move X0, X20
	013 Move X1, X19
	014 Call 0x1C17DEC

Method: System.Void Clear()

Disassembly:
	0x02DFC640 MOV X1, X31
	0x02DFC644 BL 0x338C698

ISIL:
	001 Move [X0], W31
	002 Return 

Method: System.Boolean Contains(TControl item)

Disassembly:
	0x02DFC648 ADRP X8, 0x1300000
	0x02DFC64C LDR X8, [X8 + 0x9E8]
	0x02DFC650 MOV X23, X0
	0x02DFC654 LDR X8, [X8]
	0x02DFC658 LDR W9, [X8 + 0xE0]
	0x02DFC65C CBNZ W9, 0x2DFC668
	0x02DFC660 MOV X0, X8
	0x02DFC664 BL 0x1C16DFC
	0x02DFC668 MOV X0, X22
	0x02DFC66C MOV X1, X23
	0x02DFC670 MOV X2, X31
	0x02DFC674 BL 0x331D250
	0x02DFC678 MOV X22, X0
	0x02DFC67C LDR X8, [X19 + 0x20]
	0x02DFC680 LDR X8, [X8 + 0xC0]
	0x02DFC684 LDR X1, [X8 + 0x28]
	0x02DFC688 LDRB W8, [X1 + 0x135]
	0x02DFC68C TBNZ X8, 0x0, 0x2DFC69C
	0x02DFC690 MOV X0, X1
	0x02DFC694 BL 0x1C5C684

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X2+32]
	005 Move X19, X1
	006 Move X20, X0
	007 Move W9, [X8+309]
	008 Move TEMP, X9
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {15}
	012 Move X0, X8
	013 Call 0x1C5D684
	014 Move X8, X0
	015 Move X8, [X8+192]
	016 Move X0, X20
	017 Move X1, X19
	018 Move X2, [X8+152]
	019 Call 0x2DFC45C, X0, X1
	020 Move X20, [X31+16]
	021 Move X19, [X31+24]
	022 Add W31, W0, 1
	023 NotImplemented "Instruction CSET not yet implemented."
	024 Move X30, [X31+32]
	025 Return X0

Method: System.Boolean Contains(TControl item, System.Int32 startIndex, System.Int32 count = -1)

Disassembly:
	0x02DFC698 MOV X1, X0
	0x02DFC69C CBZ X22, 0x2DFC758
	0x02DFC6A0 LDR X8, [X22]
	0x02DFC6A4 LDR X9, [X1 + 0x40]
	0x02DFC6A8 MOV X0, X22
	0x02DFC6AC LDR X8, [X8 + 0x40]
	0x02DFC6B0 CMP X8, X9
	0x02DFC6B4 B.NE 0x2DFC75C
	0x02DFC6B8 BL 0x1C16E08
	0x02DFC6BC LDP V1, V0, [X0]
	0x02DFC6C0 ADD X1, X31, 0x20
	0x02DFC6C4 MOV X0, X21
	0x02DFC6C8 MOV X2, X20
	0x02DFC6CC STP V1, V0, [X31]
	0x02DFC6D0 LDR X8, [X21]
	0x02DFC6D4 LDP V0, V1, [X31]
	0x02DFC6D8 LDR X9, [X8 + 0x258]
	0x02DFC6DC STP V0, V1, [X31 + 0x20]
	0x02DFC6E0 LDR X3, [X8 + 0x260]
	0x02DFC6E4 BLR X9
	0x02DFC6E8 LDP X20, X19, [X31 + 0x60]
	0x02DFC6EC LDP X22, X21, [X31 + 0x50]
	0x02DFC6F0 LDP X30, X23, [X31 + 0x40]
	0x02DFC6F4 ADD X31, X31, 0x70
	0x02DFC6F8 RET
	0x02DFC6FC ADRP X0, 0x12FC000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X4+32]
	007 Move W19, W3
	008 Move W20, W2
	009 Move X21, X1
	010 Move W9, [X8+309]
	011 Move X22, X0
	012 Move TEMP, X9
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {19}
	016 Move X0, X8
	017 Call 0x1C5D684
	018 Move X8, X0
	019 Move X8, [X8+192]
	020 Move X0, X22
	021 Move X1, X21
	022 Move W2, W20
	023 Move X4, [X8+144]
	024 Move W3, W19
	025 Call 0x2DFC4A8, X0, X1, X2, X3
	026 Move X20, [X31+32]
	027 Move X19, [X31+40]
	028 Move X22, [X31+16]
	029 Move X21, [X31+24]
	030 Add W31, W0, 1
	031 NotImplemented "Instruction CSET not yet implemented."
	032 Move X30, [X31+48]
	033 Return X0

Method: System.Void SwapElements(System.Int32 index1, System.Int32 index2)

Disassembly:
	0x02DFC700 LDR X0, [X0 + 0x528]
	0x02DFC704 BL 0x1C16D08
	0x02DFC708 BL 0x1C16F10
	0x02DFC70C MOV X20, X0
	0x02DFC710 ADRP X0, 0x131F000
	0x02DFC714 LDR X0, [X0 + 0xD88]
	0x02DFC718 B 0x2DFC738
	0x02DFC71C ADRP X0, 0x12FC000
	0x02DFC720 LDR X0, [X0 + 0x528]
	0x02DFC724 BL 0x1C16D08
	0x02DFC728 BL 0x1C16F10
	0x02DFC72C MOV X20, X0
	0x02DFC730 ADRP X0, 0x1301000
	0x02DFC734 LDR X0, [X0 + 0xEC8]
	0x02DFC738 BL 0x1C16D08
	0x02DFC73C MOV X1, X0
	0x02DFC740 MOV X0, X20
	0x02DFC744 MOV X2, X31
	0x02DFC748 BL 0x330E100
	0x02DFC74C MOV X0, X20
	0x02DFC750 MOV X1, X19
	0x02DFC754 BL 0x1C16DEC
	0x02DFC758 BL 0x1C16F20
	0x02DFC75C BL 0x1C171E0
	0x02DFC760 STP X30, X21, [X31 - 0x20]!
	0x02DFC764 STP X20, X19, [X31 + 0x10]
	0x02DFC768 MOV X20, X0
	0x02DFC76C ADRP X0, 0x1323000
	0x02DFC770 LDR X0, [X0]
	0x02DFC774 MOV X19, X3
	0x02DFC778 BL 0x1C16D08
	0x02DFC77C MOV X1, X20
	0x02DFC780 MOV X2, X31
	0x02DFC784 BL 0x321EFD0
	0x02DFC788 MOV X20, X0
	0x02DFC78C ADRP X0, 0x12F7000
	0x02DFC790 LDR X0, [X0 + 0xB40]
	0x02DFC794 BL 0x1C16D08
	0x02DFC798 BL 0x1C16F10
	0x02DFC79C MOV X1, X20
	0x02DFC7A0 MOV X2, X31
	0x02DFC7A4 MOV X21, X0
	0x02DFC7A8 BL 0x3379A44
	0x02DFC7AC MOV X0, X21
	0x02DFC7B0 MOV X1, X19
	0x02DFC7B4 BL 0x1C16DEC
	0x02DFC7B8 SUB X31, X31, 0x80
	0x02DFC7BC STP X30, X23, [X31 + 0x50]
	0x02DFC7C0 STP X22, X21, [X31 + 0x60]
	0x02DFC7C4 STP X20, X19, [X31 + 0x70]
	0x02DFC7C8 MOV X19, X3
	0x02DFC7CC MOVI V0.2D, 0x0
	0x02DFC7D0 STP V0, V0, [X31 + 0x30]
	0x02DFC7D4 CBZ X1, 0x2DFC828
	0x02DFC7D8 CMP W2, 0x1F
	0x02DFC7DC B.LE 0x2DFC860
	0x02DFC7E0 MOVI V0.2D, 0x0
	0x02DFC7E4 ADD X0, X31, 0x30
	0x02DFC7E8 MOVZ W2, 0x20
	0x02DFC7EC MOV X3, X31
	0x02DFC7F0 STP V0, V0, [X31 + 0x30]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x15E0000
	008 Move W8, [X23+2528]
	009 Move X19, X3
	010 Move W20, W2
	011 Move W21, W1
	012 Move X22, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x1323000
	018 Move X0, [X0+4032]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X23+2528], W8
	022 Move TEMP, X21
	023 And TEMP, TEMP, -2147483648
	024 Compare TEMP, -2147483648
	025 JumpIfEqual {56}
	026 Move W8, [X22]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move TEMP, X20
	029 And TEMP, TEMP, -2147483648
	030 Compare TEMP, -2147483648
	031 JumpIfEqual {63}
	032 NotImplemented "Instruction CMP not yet implemented."
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Move X23, [X31+56]
	040 Return 
	041 Move X8, 0x1323000
	042 Move X0, [X22+8]
	043 Move X1, [X22+16]
	044 Move X8, [X8+4032]
	045 Move W2, W21
	046 Move W3, W20
	047 Move X20, [X31+32]
	048 Move X19, [X31+40]
	049 Move X4, [X8]
	050 Move X22, [X31+16]
	051 Move X21, [X31+24]
	052 Move X30, [X31+48]
	053 Move X23, [X31+56]
	054 Call 0x217D71C, X0, X1, X2
	055 Return 
	056 Move X0, 0x1300000
	057 Move X0, [X0+1888]
	058 Call 0x1C17D08
	059 Call 0x1C17F10
	060 Move X20, X0
	061 Move X0, 0x1323000
	062 Move X0, [X0+4040]
	063 Move X0, 0x1300000
	064 Move X0, [X0+1888]
	065 Call 0x1C17D08
	066 Call 0x1C17F10
	067 Move X20, X0
	068 Move X0, 0x1323000
	069 Move X0, [X0+4048]
	070 Call 0x1C17D08
	071 Move X1, X0
	072 Move X0, X20
	073 Move X2, X31
	074 Call ArgumentOutOfRangeException..ctor, X0, X1
	075 Move X0, X20
	076 Move X1, X19
	077 Call 0x1C17DEC

Method: System.Void Sort(System.Int32 startIndex, System.Int32 count, TCompare comparer)

Disassembly:
	0x0213122C LDR X2, [X8 + 0x10]
	0x02131230 BL 0x2FB1780
	0x02131234 LDR W8, [X20 + 0x18]
	0x02131238 CMP W8, 0x1
	0x0213123C B.LT 0x21312A4
	0x02131240 CBZ X21, 0x21312E0
	0x02131244 MOVZ W22, 0x4
	0x02131248 LDR X8, [X20 + 0x10]
	0x0213124C CBZ X8, 0x21312E0
	0x02131250 LDR W9, [X8 + 0x18]
	0x02131254 SUB X23, X22, 0x4
	0x02131258 CMP X23, X9
	0x0213125C B.CS 0x21312E4
	0x02131260 CBZ X19, 0x21312E0
	0x02131264 LDR X1, [X8, X22, LSL #3]
	0x02131268 LDR X8, [X19 + 0x18]
	0x0213126C LDR X0, [X19 + 0x40]
	0x02131270 LDR X2, [X19 + 0x28]
	0x02131274 LDR X24, [X21 + 0x10]
	0x02131278 BLR X8
	0x0213127C CBZ X24, 0x21312E0
	0x02131280 LDR W8, [X24 + 0x18]
	0x02131284 CMP X23, X8
	0x02131288 B.CS 0x21312E4
	0x0213128C STR D0, [X24, X22, LSL #3]
	0x02131290 LDRSW X8, [X20 + 0x18]
	0x02131294 SUB X9, X22, 0x3
	0x02131298 ADD X22, X22, 0x1
	0x0213129C CMP X9, X8
	0x021312A0 B.LT 0x2131248
	0x021312A4 CBZ X21, 0x21312E0
	0x021312A8 STR W8, [X21 + 0x18]
	0x021312AC MOV X0, X21
	0x021312B0 LDP X20, X19, [X31 + 0x30]
	0x021312B4 LDP X22, X21, [X31 + 0x20]
	0x021312B8 LDP X24, X23, [X31 + 0x10]
	0x021312BC LDR X30, [X31], #0x40
	0x021312C0 RET
	0x021312C4 MOV X0, X21
	0x021312C8 BL 0x1C5C6E0
	0x021312CC CBNZ X19, 0x2131204
	0x021312D0 MOVZ W0, 0x9
	0x021312D4 MOV X1, X31
	0x021312D8 BL 0x338F3E0
	0x021312DC B 0x2131204
	0x021312E0 BL 0x1C16F20
	0x021312E4 BL 0x1C16F28
	0x021312E8 STR X30, [X31 - 0x40]!
	0x021312EC STP X24, X23, [X31 + 0x10]
	0x021312F0 STP X22, X21, [X31 + 0x20]
	0x021312F4 STP X20, X19, [X31 + 0x30]
	0x021312F8 LDR X8, [X2 + 0x38]
	0x021312FC MOV X21, X2
	0x02131300 MOV X19, X1
	0x02131304 MOV X20, X0
	0x02131308 CBZ X8, 0x21313D8
	0x0213130C CBZ X19, 0x21313E4
	0x02131310 LDR X8, [X21 + 0x38]
	0x02131314 LDR W22, [X20 + 0x18]
	0x02131318 LDR X0, [X8 + 0x8]
	0x0213131C LDRB W8, [X0 + 0x135]
	0x02131320 TBNZ X8, 0x0, 0x2131328
	0x02131324 BL 0x1C5C684
	0x02131328 BL 0x1C16F10
	0x0213132C LDR X8, [X21 + 0x38]
	0x02131330 MOV W1, W22
	0x02131334 MOV X21, X0
	0x02131338 LDR X2, [X8 + 0x10]
	0x0213133C BL 0x2FC7A20
	0x02131340 LDR W8, [X20 + 0x18]
	0x02131344 CMP W8, 0x1
	0x02131348 B.LT 0x21313B8
	0x0213134C CBZ X21, 0x21313F4
	0x02131350 MOV X22, X31
	0x02131354 MOV X23, X31
	0x02131358 LDR X8, [X20 + 0x10]
	0x0213135C CBZ X8, 0x21313F4
	0x02131360 LDR W9, [X8 + 0x18]
	0x02131364 CMP X23, X9
	0x02131368 B.CS 0x21313F8
	0x0213136C CBZ X19, 0x21313F4
	0x02131370 ADD X8, X8, X23, 0x3, LSL
	0x02131374 LDR X9, [X19 + 0x18]
	0x02131378 LDR X0, [X19 + 0x40]
	0x0213137C LDR X1, [X8 + 0x20]
	0x02131380 LDR X2, [X19 + 0x28]
	0x02131384 LDR X24, [X21 + 0x10]
	0x02131388 BLR X9
	0x0213138C CBZ X24, 0x21313F4
	0x02131390 LDR W8, [X24 + 0x18]
	0x02131394 CMP X23, X8
	0x02131398 B.CS 0x21313F8
	0x0213139C ADD X8, X24, X22
	0x021313A0 STP X0, X1, [X8 + 0x20]
	0x021313A4 LDRSW X8, [X20 + 0x18]
	0x021313A8 ADD X23, X23, 0x1
	0x021313AC ADD X22, X22, 0x10
	0x021313B0 CMP X23, X8
	0x021313B4 B.LT 0x2131358
	0x021313B8 CBZ X21, 0x21313F4
	0x021313BC STR W8, [X21 + 0x18]
	0x021313C0 MOV X0, X21
	0x021313C4 LDP X20, X19, [X31 + 0x30]
	0x021313C8 LDP X22, X21, [X31 + 0x20]
	0x021313CC LDP X24, X23, [X31 + 0x10]
	0x021313D0 LDR X30, [X31], #0x40
	0x021313D4 RET
	0x021313D8 MOV X0, X21
	0x021313DC BL 0x1C5C6E0
	0x021313E0 CBNZ X19, 0x2131310
	0x021313E4 MOVZ W0, 0x9
	0x021313E8 MOV X1, X31
	0x021313EC BL 0x338F3E0
	0x021313F0 B 0x2131310
	0x021313F4 BL 0x1C16F20
	0x021313F8 BL 0x1C16F28
	0x021313FC STP X30, X23, [X31 - 0x30]!
	0x02131400 STP X22, X21, [X31 + 0x10]
	0x02131404 STP X20, X19, [X31 + 0x20]
	0x02131408 LDR X8, [X2 + 0x38]
	0x0213140C MOV X21, X2
	0x02131410 MOV X19, X1
	0x02131414 MOV X20, X0
	0x02131418 CBZ X8, 0x21314DC
	0x0213141C CBZ X19, 0x21314E8
	0x02131420 LDR X8, [X21 + 0x38]
	0x02131424 LDR W22, [X20 + 0x18]
	0x02131428 LDR X0, [X8 + 0x8]
	0x0213142C LDRB W8, [X0 + 0x135]
	0x02131430 TBNZ X8, 0x0, 0x2131438
	0x02131434 BL 0x1C5C684
	0x02131438 BL 0x1C16F10
	0x0213143C LDR X8, [X21 + 0x38]
	0x02131440 MOV W1, W22
	0x02131444 MOV X21, X0
	0x02131448 LDR X2, [X8 + 0x10]
	0x0213144C BL 0x2FD9510
	0x02131450 LDR W8, [X20 + 0x18]
	0x02131454 CMP W8, 0x1
	0x02131458 B.LT 0x21314C0
	0x0213145C CBZ X21, 0x21314F8
	0x02131460 MOV X22, X31
	0x02131464 LDR X8, [X20 + 0x10]
	0x02131468 CBZ X8, 0x21314F8
	0x0213146C LDR W9, [X8 + 0x18]
	0x02131470 CMP X22, X9
	0x02131474 B.CS 0x21314FC
	0x02131478 CBZ X19, 0x21314F8
	0x0213147C ADD X8, X8, X22, 0x3, LSL
	0x02131480 LDR X9, [X19 + 0x18]
	0x02131484 LDR X0, [X19 + 0x40]
	0x02131488 LDR X1, [X8 + 0x20]
	0x0213148C LDR X2, [X19 + 0x28]
	0x02131490 LDR X23, [X21 + 0x10]
	0x02131494 BLR X9

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Add X29, X31, 0
	014 Subtract X31, X31, 64
	015 NotImplemented "Instruction MRS not yet implemented."
	016 Move X8, [X20+40]
	017 Move X19, X4
	018 Move W24, W2
	019 Move W23, W1
	020 Move [X29-8], X8
	021 Move [X29-40], X3
	022 Move X8, [X4+56]
	023 Move X21, X0
	024 Compare X8, 0
	025 JumpIfNotEqual {29}
	026 Move X0, X19
	027 Call 0x1C5D6E0
	028 Move X8, [X19+56]
	029 Move X0, [X8]
	030 Move W8, [X0+309]
	031 Move TEMP, X8
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {36}
	035 Call 0x1C5D684
	036 Move W8, [X0+252]
	037 Add X9, X31, 0
	038 Add W8, W8, 16
	039 Add X8, X8, 15
	040 And X8, X8, 0x1FFFFFFFF
	041 Subtract X22, X9, X8
	042 Add X31, X22, 0
	043 Move TEMP, X23
	044 And TEMP, TEMP, -2147483648
	045 Compare TEMP, -2147483648
	046 JumpIfEqual {168}
	047 Move X0, [X19+32]
	048 Move W8, [X0+309]
	049 Move TEMP, X8
	050 And TEMP, TEMP, 1
	051 Compare TEMP, 1
	052 JumpIfEqual {54}
	053 Call 0x1C5D684
	054 Move W8, [X21]
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move X0, [X19+32]
	057 Move [X29-56], X20
	058 Move W9, [X0+309]
	059 Move TEMP, X9
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfEqual {65}
	063 Call 0x1C5D684
	064 Move W8, [X21]
	065 Add W9, W24, W23
	066 NotImplemented "Instruction CMP not yet implemented."
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Move W28, 1
	069 Move W27, 2
	070 Subtract X20, X29, 40
	071 Move [X29-44], W24
	072 Move W23, W27
	073 Move X0, [X19+32]
	074 Subtract W24, W23, 2
	075 Move W8, [X0+309]
	076 Move TEMP, X8
	077 And TEMP, TEMP, 1
	078 Compare TEMP, 1
	079 JumpIfEqual {81}
	080 Call 0x1C5D684
	081 Move X8, [X0+192]
	082 Move X0, X21
	083 Move W1, W24
	084 Subtract W23, W23, 1
	085 Move X2, [X8+168]
	086 Call 0x2DFB48C, X0, X1
	087 Move X8, [X19+32]
	088 Move X25, X0
	089 Move W9, [X8+309]
	090 Move TEMP, X9
	091 And TEMP, TEMP, 1
	092 Compare TEMP, 1
	093 JumpIfEqual {97}
	094 Move X0, X8
	095 Call 0x1C5D684
	096 Move X8, X0
	097 Move X8, [X8+192]
	098 Move X0, X21
	099 Move W1, W23
	100 Move X2, [X8+168]
	101 Call 0x2DFB48C, X0, X1
	102 Move X9, [X19+56]
	103 Move X26, X0
	104 Move X8, [X9]
	105 Move W10, [X8+309]
	106 Move TEMP, X10
	107 And TEMP, TEMP, 1
	108 Compare TEMP, 1
	109 JumpIfEqual {114}
	110 Move X0, X8
	111 Call 0x1C5D684
	112 Move X9, [X19+56]
	113 Move X8, X0
	114 Move X10, [X9]
	115 Move X1, [X9+8]
	116 NotImplemented "Instruction LDUR not yet implemented."
	117 Subtract X4, X29, 32
	118 Subtract X5, X29, 12
	119 Move W10, [X10+40]
	120 Move X0, X8
	121 Move X2, X22
	122 Move [X29-32], X25
	123 Move [X29-24], X26
	124 NotImplemented "Instruction CMP not yet implemented."
	125 NotImplemented "Instruction CSEL not yet implemented."
	126 Call 0x1C18728
	127 NotImplemented "Instruction LDUR not yet implemented."
	128 Move TEMP, X8
	129 And TEMP, TEMP, -2147483648
	130 Compare TEMP, -2147483648
	131 JumpIfNotEqual {146}
	132 Move X0, [X19+32]
	133 Move W8, [X0+309]
	134 Move TEMP, X8
	135 And TEMP, TEMP, 1
	136 Compare TEMP, 1
	137 JumpIfEqual {139}
	138 Call 0x1C5D684
	139 Move X8, [X0+192]
	140 Move X0, X21
	141 Move W1, W23
	142 Move W2, W24
	143 Move X3, [X8+160]
	144 Call 0x2DFC700, X0, X1, X2
	145 NotImplemented "Instruction CMP not yet implemented."
	146 NotImplemented "Instruction LDUR not yet implemented."
	147 Add W28, W28, 1
	148 Add W27, W27, 1
	149 NotImplemented "Instruction CMP not yet implemented."
	150 NotImplemented "Instruction LDUR not yet implemented."
	151 Move X8, [X8+40]
	152 NotImplemented "Instruction LDUR not yet implemented."
	153 NotImplemented "Instruction CMP not yet implemented."
	154 Add X31, X29, 0
	155 Move X20, [X31+80]
	156 Move X19, [X31+88]
	157 Move X22, [X31+64]
	158 Move X21, [X31+72]
	159 Move X24, [X31+48]
	160 Move X23, [X31+56]
	161 Move X26, [X31+32]
	162 Move X25, [X31+40]
	163 Move X28, [X31+16]
	164 Move X27, [X31+24]
	165 Move X29, [X31+96]
	166 Move X30, [X31+104]
	167 Return 
	168 Move X0, 0x1FCB000
	169 Move X0, [X0+1888]
	170 Call 0x1C17D08
	171 Call 0x1C17F10
	172 Move X20, X0
	173 Move X0, 0x1FEB000
	174 Move X0, [X0+1624]
	175 Move X0, 0x1FCB000
	176 Move X0, [X0+1888]
	177 Call 0x1C17D08
	178 Call 0x1C17F10
	179 Move X20, X0
	180 Move X0, 0x1FEB000
	181 Move X0, [X0+1608]
	182 Call 0x1C17D08
	183 Move X1, X0
	184 Move X0, X20
	185 Move X2, X31
	186 Call ArgumentOutOfRangeException..ctor, X0, X1
	187 Move X0, X20
	188 Move X1, X19
	189 Call 0x1C17DEC
	190 Call 0x3EB2B20

Method: TControl[] ToArray(System.Boolean dispose = False)

Disassembly:
	0x02DFC7F4 BL 0x3BFF954
	0x02DFC7F8 LDP V0, V1, [X31 + 0x30]
	0x02DFC7FC ADD X1, X31, 0x0
	0x02DFC800 STP V0, V1, [X31]
	0x02DFC804 LDR X8, [X19 + 0x20]
	0x02DFC808 LDR X8, [X8 + 0xC0]
	0x02DFC80C LDR X0, [X8 + 0x28]
	0x02DFC810 BL 0x1C16E04
	0x02DFC814 LDP X20, X19, [X31 + 0x70]
	0x02DFC818 LDP X22, X21, [X31 + 0x60]
	0x02DFC81C LDP X30, X23, [X31 + 0x50]
	0x02DFC820 ADD X31, X31, 0x80
	0x02DFC824 RET
	0x02DFC828 ADRP X0, 0x12FC000
	0x02DFC82C LDR X0, [X0 + 0x528]
	0x02DFC830 BL 0x1C16D08
	0x02DFC834 BL 0x1C16F10
	0x02DFC838 MOV X20, X0
	0x02DFC83C ADRP X0, 0x1322000
	0x02DFC840 LDR X0, [X0 + 0xF48]
	0x02DFC844 BL 0x1C16D08
	0x02DFC848 MOV X1, X0
	0x02DFC84C MOV X0, X20
	0x02DFC850 MOV X2, X31
	0x02DFC854 BL 0x330E100
	0x02DFC858 MOV X0, X20
	0x02DFC85C B 0x2DFC940
	0x02DFC860 MOVZ W8, 0x20
	0x02DFC864 STR W8, [X31]
	0x02DFC868 ADRP X20, 0x12F7000
	0x02DFC86C LDR X20, [X20 + 0x758]
	0x02DFC870 MOV W23, W2
	0x02DFC874 MOV X0, X20
	0x02DFC878 BL 0x1C16D08
	0x02DFC87C ADD X1, X31, 0x0
	0x02DFC880 BL 0x1C16E04
	0x02DFC884 LDR X8, [X19 + 0x20]
	0x02DFC888 MOV X22, X0
	0x02DFC88C ADRP X0, 0x12F7000
	0x02DFC890 LDR X8, [X8 + 0xC0]
	0x02DFC894 LDR X21, [X8]
	0x02DFC898 LDR X0, [X0 + 0x6C0]
	0x02DFC89C BL 0x1C16D08
	0x02DFC8A0 BL 0x19903D0
	0x02DFC8A4 MOV X0, X21
	0x02DFC8A8 MOV X1, X31
	0x02DFC8AC BL 0x338C698
	0x02DFC8B0 MOV X21, X0
	0x02DFC8B4 BL 0x19903C0
	0x02DFC8B8 LDR X8, [X21]
	0x02DFC8BC MOV X0, X21
	0x02DFC8C0 LDP X9, X1, [X8 + 0x1A8]
	0x02DFC8C4 BLR X9
	0x02DFC8C8 MOV X21, X0
	0x02DFC8CC MOV X0, X20
	0x02DFC8D0 STR W23, [X31 + 0x2C]
	0x02DFC8D4 BL 0x1C16D08
	0x02DFC8D8 ADD X1, X31, 0x2C

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X19, X0
	009 Move X0, [X2+32]
	010 Move W22, [X19]
	011 Move X20, X2
	012 Move W21, W1
	013 Move W8, [X0+309]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {19}
	018 Call 0x1C5D684
	019 Move X8, [X0+192]
	020 Move X0, [X8+184]
	021 Move W8, [X0+309]
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {27}
	026 Call 0x1C5D684
	027 Move W1, W22
	028 Call 0x1C17D6C
	029 Move W8, [X19]
	030 Move X22, X0
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move X23, X31
	033 Add X24, X22, 32
	034 Move X0, [X20+32]
	035 Move W8, [X0+309]
	036 Move TEMP, X8
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfEqual {41}
	040 Call 0x1C5D684
	041 Move X8, [X0+192]
	042 Move X0, X19
	043 Move W1, W23
	044 Move X2, [X8+168]
	045 Call 0x2DFB48C, X0, X1
	046 Compare X22, 0
	047 JumpIfEqual {76}
	048 Move W8, [X22+24]
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move [X24], X0
	051 NotImplemented "Instruction LDRSW not yet implemented."
	052 Add X23, X23, 1
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move TEMP, X21
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfNotEqual {67}
	058 Move X0, [X20+32]
	059 Move W8, [X0+309]
	060 Move TEMP, X8
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfEqual {65}
	064 Call 0x1C5D684
	065 Move X0, X19
	066 Call 0x2DFC98C, X0
	067 Move X0, X22
	068 Move X20, [X31+48]
	069 Move X19, [X31+56]
	070 Move X22, [X31+32]
	071 Move X21, [X31+40]
	072 Move X24, [X31+16]
	073 Move X23, [X31+24]
	074 Move X30, [X31+64]
	075 Return X0
	076 Call 0x1C17F20
	077 Call 0x1C17F28

Method: System.Void AppendTo(ref TControl[] array, ref System.Int32 count)

Disassembly:
	0x02DFC8DC BL 0x1C16E04
	0x02DFC8E0 MOV X20, X0
	0x02DFC8E4 ADRP X0, 0x1323000
	0x02DFC8E8 LDR X0, [X0 + 0x8]
	0x02DFC8EC BL 0x1C16D08
	0x02DFC8F0 MOV X1, X22
	0x02DFC8F4 MOV X2, X21
	0x02DFC8F8 MOV X3, X20
	0x02DFC8FC MOV X4, X31
	0x02DFC900 BL 0x3227C18
	0x02DFC904 MOV X20, X0
	0x02DFC908 ADRP X0, 0x12FF000
	0x02DFC90C LDR X0, [X0 + 0x578]
	0x02DFC910 BL 0x1C16D08
	0x02DFC914 BL 0x1C16F10
	0x02DFC918 MOV X21, X0
	0x02DFC91C ADRP X0, 0x1322000
	0x02DFC920 LDR X0, [X0 + 0xF58]
	0x02DFC924 BL 0x1C16D08
	0x02DFC928 MOV X2, X0
	0x02DFC92C MOV X0, X21
	0x02DFC930 MOV X1, X20
	0x02DFC934 MOV X3, X31
	0x02DFC938 BL 0x330E16C
	0x02DFC93C MOV X0, X21
	0x02DFC940 MOV X1, X19
	0x02DFC944 BL 0x1C16DEC
	0x02DFC948 STR X30, [X31 - 0x20]!
	0x02DFC94C STP X20, X19, [X31 + 0x10]
	0x02DFC950 LDR X8, [X2 + 0x20]
	0x02DFC954 MOV X19, X1
	0x02DFC958 MOV X20, X0
	0x02DFC95C LDRB W9, [X8 + 0x135]
	0x02DFC960 TBNZ X9, 0x0, 0x2DFC96C
	0x02DFC964 MOV X0, X8
	0x02DFC968 BL 0x1C5C684
	0x02DFC96C MOVZ W2, 0x20
	0x02DFC970 MOV X0, X20
	0x02DFC974 MOV X1, X19
	0x02DFC978 MOV X3, X31
	0x02DFC97C BL 0x3C001FC
	0x02DFC980 LDP X20, X19, [X31 + 0x10]
	0x02DFC984 CMP W0, 0x0
	0x02DFC988 CSET W0, NE

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move W8, [X0]
	009 NotImplemented "Instruction CMP not yet implemented."
	010 Move X19, X3
	011 Move X20, X2
	012 Move X21, X0
	013 Move X22, X1
	014 Move W23, W31
	015 Move X0, [X19+32]
	016 Move W8, [X0+309]
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {22}
	021 Call 0x1C5D684
	022 Move X8, [X0+192]
	023 Move X0, X21
	024 Move W1, W23
	025 Move X2, [X8+168]
	026 Call 0x2DFB48C, X0, X1
	027 Move X8, [X19+32]
	028 Move X24, X0
	029 Move W9, [X8+309]
	030 Move TEMP, X9
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfEqual {37}
	034 Move X0, X8
	035 Call 0x1C5D684
	036 Move X8, X0
	037 Move X8, [X8+192]
	038 Move W3, 10
	039 Move X0, X22
	040 Move X1, X20
	041 Move X4, [X8+208]
	042 Move X2, X24
	043 Call ArrayHelpers.AppendWithCapacity, X0, X1, X2, X3
	044 Move W8, [X21]
	045 Add W23, W23, 1
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move X20, [X31+48]
	048 Move X19, [X31+56]
	049 Move X22, [X31+32]
	050 Move X21, [X31+40]
	051 Move X24, [X31+16]
	052 Move X23, [X31+24]
	053 Move X30, [X31+64]
	054 Return 

Method: System.Void Dispose()

Disassembly:
	0x02DFC98C LDR X30, [X31], #0x20
	0x02DFC990 RET
	0x02DFC994 SUB X31, X31, 0x60
	0x02DFC998 STP X30, X21, [X31 + 0x40]
	0x02DFC99C STP X20, X19, [X31 + 0x50]
	0x02DFC9A0 MOVI V0.2D, 0x0
	0x02DFC9A4 STP V0, V0, [X31 + 0x20]
	0x02DFC9A8 STP V0, V0, [X31]
	0x02DFC9AC LDR X8, [X3 + 0x20]
	0x02DFC9B0 MOV X20, X2
	0x02DFC9B4 MOV X19, X3
	0x02DFC9B8 MOV X21, X0
	0x02DFC9BC LDR X8, [X8 + 0xC0]
	0x02DFC9C0 LDR X2, [X8 + 0x48]
	0x02DFC9C4 ADD X8, X31, 0x20
	0x02DFC9C8 BL 0x2DFC09C
	0x02DFC9CC LDR X8, [X19 + 0x20]
	0x02DFC9D0 MOV X0, X21
	0x02DFC9D4 MOV X1, X20
	0x02DFC9D8 LDR X8, [X8 + 0xC0]
	0x02DFC9DC LDR X2, [X8 + 0x48]
	0x02DFC9E0 ADD X8, X31, 0x0
	0x02DFC9E4 BL 0x2DFC09C
	0x02DFC9E8 LDR X8, [X19 + 0x20]
	0x02DFC9EC ADD X0, X31, 0x20
	0x02DFC9F0 ADD X1, X31, 0x0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x15E0000
	005 Move W8, [X20+2529]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0x1323000
	012 Move X0, [X0+3952]
	013 Call 0x1C17CF4
	014 Move X0, 0x1323000
	015 Move X0, [X0+3936]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2529], W8
	019 Add X19, X19, 8
	020 Move X8, [X19]
	021 Compare X8, 0
	022 JumpIfEqual {32}
	023 Move X8, 0x1323000
	024 Move X8, [X8+3952]
	025 Move X0, X19
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X1, [X8]
	029 Move X30, [X31+32]
	030 Call NativeArray`1<UInt64>.Dispose, X0
	031 Return 
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Return 

Method: System.Collections.Generic.IEnumerator`1<TControl> GetEnumerator()

Disassembly:
	0x02DFC9F4 LDR X8, [X8 + 0xC0]
	0x02DFC9F8 LDR X2, [X8 + 0x68]
	0x02DFC9FC BL 0x2DFC948
	0x02DFCA00 LDP X20, X19, [X31 + 0x50]
	0x02DFCA04 LDP X30, X21, [X31 + 0x40]
	0x02DFCA08 AND W0, W0, 0x1
	0x02DFCA0C ADD X31, X31, 0x60
	0x02DFCA10 RET
	0x02DFCA14 STR X30, [X31 - 0x20]!
	0x02DFCA18 STP X20, X19, [X31 + 0x10]
	0x02DFCA1C LDR X9, [X2 + 0x20]
	0x02DFCA20 MOV X19, X1
	0x02DFCA24 MOV X20, X8
	0x02DFCA28 LDR X9, [X9 + 0xC0]
	0x02DFCA2C LDR X2, [X9 + 0x78]
	0x02DFCA30 BL 0x2E02F5C
	0x02DFCA34 LDP V1, V0, [X19]
	0x02DFCA38 STP V1, V0, [X20]
	0x02DFCA3C LDP X20, X19, [X31 + 0x10]
	0x02DFCA40 LDR X30, [X31], #0x20
	0x02DFCA44 RET
	0x02DFCA48 SUB X31, X31, 0x80
	0x02DFCA4C STP X30, X21, [X31 + 0x60]
	0x02DFCA50 STP X20, X19, [X31 + 0x70]
	0x02DFCA54 LDR W8, [X0 + 0xE0]
	0x02DFCA58 CMP W8, 0x1
	0x02DFCA5C B.LT 0x2DFCB34
	0x02DFCA60 MOV X19, X0
	0x02DFCA64 LDP V0, V1, [X1]
	0x02DFCA68 LDR X0, [X0 + 0xE8]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+80], X30
	003 Move [X31+88], X19
	004 Move V1, [X0]
	005 Move V0, [X0+16]
	006 Move [X31+32], X31
	007 Move [X31+40], X31
	008 Move X19, X1
	009 Move [X31], V1
	010 Move [X31+8], V0
	011 Move X0, [X1+32]
	012 Move W8, [X0+309]
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {18}
	017 Call 0x1C5D684
	018 Move X8, [X0+192]
	019 Move V0, [X31]
	020 Move V1, [X31+16]
	021 Add X0, X31, 32
	022 Add X1, X31, 48
	023 Move X2, [X8+224]
	024 Move [X31+48], V0
	025 Move [X31+56], V1
	026 Call 0x2BC4F08, X0, X1
	027 Move V0, [X31+2]
	028 Move [X31+3], V0
	029 Move X0, [X19+32]
	030 Move W8, [X0+309]
	031 Move TEMP, X8
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {36}
	035 Call 0x1C5D684
	036 Move X8, [X0+192]
	037 Add X1, X31, 48
	038 Move X0, [X8+216]
	039 Call 0x1C17E04
	040 Move X30, [X31+80]
	041 Move X19, [X31+88]
	042 Add X31, X31, 96
	043 Return X0

Method: System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()

Disassembly:
	0x02DFCA6C MOV X20, X1
	0x02DFCA70 STP V0, V1, [X31 + 0x20]
	0x02DFCA74 CBZ X0, 0x2DFCB30
	0x02DFCA78 LDR X8, [X0]
	0x02DFCA7C LDP V0, V1, [X31 + 0x20]
	0x02DFCA80 ADD X1, X31, 0x40
	0x02DFCA84 MOV X2, X19
	0x02DFCA88 LDR X9, [X8 + 0x1A8]
	0x02DFCA8C STP V0, V1, [X31 + 0x40]
	0x02DFCA90 LDR X3, [X8 + 0x1B0]
	0x02DFCA94 ADD X8, X31, 0x0
	0x02DFCA98 BLR X9
	0x02DFCA9C LDP V1, V0, [X31]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X1+32]
	004 Move X19, X0
	005 Move W9, [X8+309]
	006 Move TEMP, X9
	007 And TEMP, TEMP, 1
	008 Compare TEMP, 1
	009 JumpIfEqual {13}
	010 Move X0, X8
	011 Call 0x1C5D684
	012 Move X8, X0
	013 Move X8, [X8+192]
	014 Move X0, X19
	015 Move X1, [X8+232]
	016 Move X30, [X31+16]
	017 Move X19, [X31+24]
	018 Call 0x2DFC9F4, X0
	019 Return X0

Method: System.String ToString()

Disassembly:
	0x02DFCAA0 STP V1, V0, [X31 + 0x40]
	0x02DFCAA4 STP V1, V0, [X20]
	0x02DFCAA8 LDR X8, [X19 + 0xF0]
	0x02DFCAAC CBZ X8, 0x2DFCB34
	0x02DFCAB0 LDR W9, [X19 + 0xE0]
	0x02DFCAB4 SUB W9, W9, 0x1
	0x02DFCAB8 CMP W9, 0x1
	0x02DFCABC B.LT 0x2DFCB34
	0x02DFCAC0 MOV W21, W31
	0x02DFCAC4 LDR W9, [X8 + 0x18]
	0x02DFCAC8 CMP W21, W9
	0x02DFCACC B.CS 0x2DFCB44
	0x02DFCAD0 ADD X8, X8, W21, 0x3, SXTW
	0x02DFCAD4 LDP V0, V1, [X20]
	0x02DFCAD8 LDR X0, [X8 + 0x20]
	0x02DFCADC STP V0, V1, [X31 + 0x20]
	0x02DFCAE0 CBZ X0, 0x2DFCB30
	0x02DFCAE4 LDR X8, [X0]
	0x02DFCAE8 LDP V0, V1, [X31 + 0x20]
	0x02DFCAEC ADD X1, X31, 0x40
	0x02DFCAF0 MOV X2, X19
	0x02DFCAF4 LDR X9, [X8 + 0x1A8]
	0x02DFCAF8 STP V0, V1, [X31 + 0x40]
	0x02DFCAFC LDR X3, [X8 + 0x1B0]
	0x02DFCB00 ADD X8, X31, 0x0
	0x02DFCB04 BLR X9
	0x02DFCB08 LDP V1, V0, [X31]
	0x02DFCB0C ADD W21, W21, 0x1
	0x02DFCB10 STP V1, V0, [X31 + 0x40]
	0x02DFCB14 STP V1, V0, [X20]
	0x02DFCB18 LDR W8, [X19 + 0xE0]
	0x02DFCB1C SUB W8, W8, 0x1
	0x02DFCB20 CMP W21, W8
	0x02DFCB24 B.GE 0x2DFCB34
	0x02DFCB28 LDR X8, [X19 + 0xF0]
	0x02DFCB2C CBNZ X8, 0x2DFCAC4
	0x02DFCB30 BL 0x1C16F20
	0x02DFCB34 LDP X20, X19, [X31 + 0x70]
	0x02DFCB38 LDP X30, X21, [X31 + 0x60]
	0x02DFCB3C ADD X31, X31, 0x80
	0x02DFCB40 RET
	0x02DFCB44 BL 0x1C16F28
	0x02DFCB48 STR X30, [X31 - 0x30]!
	0x02DFCB4C STP X22, X21, [X31 + 0x10]
	0x02DFCB50 STP X20, X19, [X31 + 0x20]
	0x02DFCB54 LDR X8, [X2 + 0x20]
	0x02DFCB58 MOV X19, X2
	0x02DFCB5C MOV X22, X1
	0x02DFCB60 MOV X20, X0
	0x02DFCB64 LDR X8, [X8 + 0xC0]
	0x02DFCB68 LDR X8, [X8 + 0x88]
	0x02DFCB6C LDRB W9, [X8 + 0x135]
	0x02DFCB70 TBNZ X9, 0x0, 0x2DFCB80
	0x02DFCB74 MOV X0, X8
	0x02DFCB78 BL 0x1C5C684
	0x02DFCB7C MOV X8, X0
	0x02DFCB80 CBZ X22, 0x2DFCBD0
	0x02DFCB84 LDR X9, [X22]
	0x02DFCB88 LDRB W10, [X8 + 0x130]
	0x02DFCB8C LDRB W11, [X9 + 0x130]
	0x02DFCB90 CMP W11, W10
	0x02DFCB94 B.CC 0x2DFCBD0
	0x02DFCB98 LDR X9, [X9 + 0xC8]
	0x02DFCB9C ADD X9, X9, X10, 0x3, LSL
	0x02DFCBA0 LDUR X9, [X9 - 0x8]
	0x02DFCBA4 CMP X9, X8
	0x02DFCBA8 B.NE 0x2DFCBD0
	0x02DFCBAC LDR X8, [X19 + 0x20]
	0x02DFCBB0 ADD X0, X20, 0xE0
	0x02DFCBB4 MOV X1, X22
	0x02DFCBB8 LDP X20, X19, [X31 + 0x20]
	0x02DFCBBC LDR X8, [X8 + 0xC0]
	0x02DFCBC0 LDP X22, X21, [X31 + 0x10]
	0x02DFCBC4 LDR X2, [X8 + 0xA0]
	0x02DFCBC8 LDR X30, [X31], #0x30
	0x02DFCBCC B 0x2DEA7E8
	0x02DFCBD0 ADRP X0, 0x12F7000
	0x02DFCBD4 LDR X0, [X0 + 0xAC8]
	0x02DFCBD8 BL 0x1C16D08
	0x02DFCBDC MOVZ W1, 0x5
	0x02DFCBE0 BL 0x1C16D6C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x15E0000
	007 Move W8, [X21+2530]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x12F8000
	015 Move X0, [X0+2288]
	016 Call 0x1C17CF4
	017 Move X0, 0x1321000
	018 Move X0, [X0+2600]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+2530], W8
	022 Move X0, [X19+32]
	023 Move W8, [X0+309]
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {29}
	028 Call 0x1C5D684
	029 Move W8, [X20]
	030 Compare W8, 0
	031 JumpIfEqual {92}
	032 Move X8, 0x12F8000
	033 Move X8, [X8+2288]
	034 Move X0, [X8]
	035 Call 0x1C17F10
	036 Move X1, X31
	037 Move X21, X0
	038 Call StringBuilder..ctor, X0
	039 Compare X21, 0
	040 JumpIfEqual {101}
	041 Move W1, 40
	042 Move X0, X21
	043 Move X2, X31
	044 Call StringBuilder.Append, X0, X1
	045 Move W22, W31
	046 Move X0, [X19+32]
	047 Move W8, [X0+309]
	048 Move TEMP, X8
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfEqual {53}
	052 Call 0x1C5D684
	053 Move W8, [X20]
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Compare W22, 0
	056 JumpIfEqual {61}
	057 Move W1, 44
	058 Move X0, X21
	059 Move X2, X31
	060 Call StringBuilder.Append, X0, X1
	061 Move X0, [X19+32]
	062 Move W8, [X0+309]
	063 Move TEMP, X8
	064 And TEMP, TEMP, 1
	065 Compare TEMP, 1
	066 JumpIfEqual {68}
	067 Call 0x1C5D684
	068 Move X8, [X0+192]
	069 Move X0, X20
	070 Move W1, W22
	071 Move X2, [X8+168]
	072 Call 0x2DFB48C, X0, X1
	073 Move X1, X0
	074 Move X0, X21
	075 Move X2, X31
	076 Call StringBuilder.Append, X0, X1
	077 Add W22, W22, 1
	078 Move W1, 41
	079 Move X0, X21
	080 Move X2, X31
	081 Call StringBuilder.Append, X0, X1
	082 Move X8, [X21]
	083 Move X0, X21
	084 Move X20, [X31+32]
	085 Move X19, [X31+40]
	086 Move X22, [X31+16]
	087 Move X21, [X31+24]
	088 Move X2, [X8+360]
	089 Move X1, [X8+368]
	090 Move X30, [X31+48]
	091 CallNoReturn X2
	092 Move X8, 0x1321000
	093 Move X8, [X8+2600]
	094 Move X20, [X31+32]
	095 Move X19, [X31+40]
	096 Move X22, [X31+16]
	097 Move X21, [X31+24]
	098 Move X0, [X8]
	099 Move X30, [X31+48]
	100 Return X0
	101 Call 0x1C17F20

Method: System.UInt64 ToIndex(TControl control)

Disassembly:
	0x02DFCBE4 MOV X21, X0
	0x02DFCBE8 BL 0x19903C0
	0x02DFCBEC ADRP X0, 0x1323000
	0x02DFCBF0 LDR X0, [X0 + 0x10]
	0x02DFCBF4 BL 0x1C16D08
	0x02DFCBF8 MOV X2, X0
	0x02DFCBFC MOV X0, X21
	0x02DFCC00 MOV X1, X31
	0x02DFCC04 BL 0x1993444
	0x02DFCC08 MOV X0, X22
	0x02DFCC0C BL 0x19903C0
	0x02DFCC10 MOV X0, X22
	0x02DFCC14 MOV X1, X31
	0x02DFCC18 BL 0x33BE520
	0x02DFCC1C MOV X22, X0
	0x02DFCC20 BL 0x19903C0
	0x02DFCC24 LDR X8, [X22]
	0x02DFCC28 MOV X0, X22
	0x02DFCC2C LDP X9, X1, [X8 + 0x1A8]
	0x02DFCC30 BLR X9
	0x02DFCC34 MOV X22, X0
	0x02DFCC38 MOV X0, X21
	0x02DFCC3C BL 0x19903C0
	0x02DFCC40 MOVZ W1, 0x1
	0x02DFCC44 MOV X0, X21
	0x02DFCC48 MOV X2, X22
	0x02DFCC4C BL 0x1993444
	0x02DFCC50 MOV X0, X21
	0x02DFCC54 BL 0x19903C0
	0x02DFCC58 ADRP X0, 0x1323000
	0x02DFCC5C LDR X0, [X0 + 0x18]
	0x02DFCC60 BL 0x1C16D08
	0x02DFCC64 MOV X2, X0
	0x02DFCC68 MOVZ W1, 0x2
	0x02DFCC6C MOV X0, X21

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x15E0000
	005 Move W8, [X20+2531]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x1323000
	012 Move X0, [X0+4056]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2531], W8
	016 Compare X19, 0
	017 JumpIfEqual {34}
	018 Move X8, [X19+120]
	019 Compare X8, 0
	020 JumpIfEqual {43}
	021 Move W20, [X8+224]
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move X0, [X8+336]
	024 Move X8, 0x1323000
	025 Move X8, [X8+4056]
	026 Move TEMP, 0
	027 Not TEMP
	028 Move W2, TEMP
	029 Move X1, X19
	030 Move X3, [X8]
	031 Call 0x217AB8C, X0, X1, X2
	032 Add W8, W0, 1
	033 Move X8, W8
	034 Move TEMP, 0
	035 Not TEMP
	036 Move X0, TEMP
	037 Move X8, X31
	038 Or X0, X8, X20
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move X30, [X31+32]
	042 Return X0
	043 Call 0x1C17F20

Method: TControl FromIndex(System.UInt64 index)

Disassembly:
	0x02DFCC70 BL 0x1993444
	0x02DFCC74 MOV X0, X20
	0x02DFCC78 BL 0x19903C0
	0x02DFCC7C MOV X0, X20
	0x02DFCC80 MOV X1, X31
	0x02DFCC84 BL 0x33BE520
	0x02DFCC88 MOV X20, X0
	0x02DFCC8C BL 0x19903C0
	0x02DFCC90 LDR X8, [X20]
	0x02DFCC94 MOV X0, X20
	0x02DFCC98 LDP X9, X1, [X8 + 0x1A8]
	0x02DFCC9C BLR X9
	0x02DFCCA0 MOV X20, X0
	0x02DFCCA4 MOV X0, X21
	0x02DFCCA8 BL 0x19903C0
	0x02DFCCAC MOVZ W1, 0x3
	0x02DFCCB0 MOV X0, X21
	0x02DFCCB4 MOV X2, X20
	0x02DFCCB8 BL 0x1993444
	0x02DFCCBC MOV X0, X21
	0x02DFCCC0 BL 0x19903C0
	0x02DFCCC4 ADRP X0, 0x12FF000
	0x02DFCCC8 LDR X0, [X0 + 0x9B0]
	0x02DFCCCC BL 0x1C16D08
	0x02DFCCD0 MOV X2, X0
	0x02DFCCD4 MOVZ W1, 0x4
	0x02DFCCD8 MOV X0, X21
	0x02DFCCDC BL 0x1993444
	0x02DFCCE0 MOV X0, X21
	0x02DFCCE4 MOV X1, X31
	0x02DFCCE8 BL 0x32278CC
	0x02DFCCEC MOV X20, X0
	0x02DFCCF0 ADRP X0, 0x12FF000
	0x02DFCCF4 LDR X0, [X0 + 0x578]
	0x02DFCCF8 BL 0x1C16D08
	0x02DFCCFC BL 0x1C16F10
	0x02DFCD00 MOV X21, X0
	0x02DFCD04 ADRP X0, 0x1323000
	0x02DFCD08 LDR X0, [X0 + 0x20]
	0x02DFCD0C BL 0x1C16D08
	0x02DFCD10 MOV X2, X0
	0x02DFCD14 MOV X0, X21
	0x02DFCD18 MOV X1, X20
	0x02DFCD1C MOV X3, X31
	0x02DFCD20 BL 0x330E16C
	0x02DFCD24 MOV X0, X21
	0x02DFCD28 MOV X1, X19
	0x02DFCD2C BL 0x1C16DEC
	0x02DFCD30 STR X30, [X31 - 0x40]!
	0x02DFCD34 STP X24, X23, [X31 + 0x10]
	0x02DFCD38 STP X22, X21, [X31 + 0x20]
	0x02DFCD3C STP X20, X19, [X31 + 0x30]
	0x02DFCD40 ADRP X19, 0x15DF000
	0x02DFCD44 LDRB W8, [X19 + 0x9E9]
	0x02DFCD48 MOV X21, X1
	0x02DFCD4C MOV X20, X0
	0x02DFCD50 TBNZ X8, 0x0, 0x2DFCD74
	0x02DFCD54 ADRP X0, 0x12F7000
	0x02DFCD58 LDR X0, [X0 + 0xE00]
	0x02DFCD5C BL 0x1C16CF4
	0x02DFCD60 ADRP X0, 0x12F7000
	0x02DFCD64 LDR X0, [X0 + 0xE18]
	0x02DFCD68 BL 0x1C16CF4
	0x02DFCD6C MOVZ W8, 0x1
	0x02DFCD70 STRB W8, [X19 + 0x9E9]
	0x02DFCD74 LDR X8, [X21 + 0x20]
	0x02DFCD78 ADRP X22, 0x12F7000
	0x02DFCD7C ADD X0, X20, 0xE0
	0x02DFCD80 LDR X8, [X8 + 0xC0]
	0x02DFCD84 LDR X1, [X8 + 0xB0]
	0x02DFCD88 LDR X22, [X22 + 0xE00]
	0x02DFCD8C BL 0x2DEB4F8
	0x02DFCD90 MOV X19, X0
	0x02DFCD94 CBZ X0, 0x2DFCF1C
	0x02DFCD98 ADRP X23, 0x12F7000
	0x02DFCD9C LDR X23, [X23 + 0xE18]
	0x02DFCDA0 MOVZ W24, 0x1
	0x02DFCDA4 LDR X8, [X19]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x15E0000
	006 Move W8, [X20+2532]
	007 Move X19, X1
	008 Move X21, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x1320000
	014 Move X0, [X0+624]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X20+2532], W8
	018 Add X31, X21, 1
	019 Move X8, 0x1320000
	020 Move X8, [X8+624]
	021 Move X0, [X8]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X0, X21
	027 ShiftRight X0, 32
	028 And X0, X0, 0x7FFFFFFF
	029 Move X1, X31
	030 Call InputSystem.GetDeviceById, X0
	031 Compare X0, 0
	032 JumpIfEqual {94}
	033 Move X20, X0
	034 Compare W21, 0
	035 JumpIfEqual {72}
	036 Move X8, [X20+336]
	037 Compare X8, 0
	038 JumpIfEqual {99}
	039 Move W10, [X8+24]
	040 Subtract W9, W21, 1
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move X0, [X19+32]
	043 Add X8, X8, W9
	044 Move X19, [X8+32]
	045 Move W9, [X0+309]
	046 Move TEMP, X9
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfEqual {51}
	050 Call 0x1C5D684
	051 Move X8, [X0+192]
	052 Move X20, [X8+24]
	053 Move W8, [X20+309]
	054 Move TEMP, X8
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfEqual {61}
	058 Move X0, X20
	059 Call 0x1C5D684
	060 Move X20, X0
	061 Compare X19, 0
	062 JumpIfEqual {71}
	063 Move X0, X19
	064 Move X1, X20
	065 Call 0x1C17E00
	066 Compare X0, 0
	067 JumpIfNotEqual {94}
	068 Move X0, X19
	069 Move X1, X20
	070 Call 0x1C181E0
	071 Move X0, X31
	072 Move X0, [X19+32]
	073 Move W8, [X0+309]
	074 Move TEMP, X8
	075 And TEMP, TEMP, 1
	076 Compare TEMP, 1
	077 JumpIfEqual {79}
	078 Call 0x1C5D684
	079 Move X8, [X0+192]
	080 Move X19, [X8+24]
	081 Move W8, [X19+309]
	082 Move TEMP, X8
	083 And TEMP, TEMP, 1
	084 Compare TEMP, 1
	085 JumpIfEqual {89}
	086 Move X0, X19
	087 Call 0x1C5D684
	088 Move X19, X0
	089 Move X0, X20
	090 Move X1, X19
	091 Call 0x1C17E00
	092 Compare X0, 0
	093 JumpIfEqual {101}
	094 Move X20, [X31+16]
	095 Move X19, [X31+24]
	096 Move X30, [X31+32]
	097 Move X21, [X31+40]
	098 Return X0
	099 Call 0x1C17F20
	100 Call 0x1C17F28
	101 Move X0, X20
	102 Move X1, X19
	103 Call 0x1C181E0

