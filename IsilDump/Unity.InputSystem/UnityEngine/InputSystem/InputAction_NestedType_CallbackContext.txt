Type: UnityEngine.InputSystem.InputAction/CallbackContext

Method: System.Int32 get_actionIndex()

Disassembly:
	0x03736CE0 MOV W2, W31
	0x03736CE4 MOV X20, X1

ISIL:
	001 Move W0, [X0+8]
	002 Return X0

Method: System.Int32 get_bindingIndex()

Disassembly:
	0x03736CE8 MOV X19, X0
	0x03736CEC BL 0x3736D58
	0x03736CF0 CBZ X0, 0x3736D00
	0x03736CF4 LDP X20, X19, [X31 + 0x10]
	0x03736CF8 LDR X30, [X31], #0x20
	0x03736CFC RET
	0x03736D00 ADRP X0, 0xA0F000
	0x03736D04 LDR X0, [X0 + 0x78]
	0x03736D08 BL 0x1C16D08
	0x03736D0C MOV X1, X20
	0x03736D10 MOV X2, X19
	0x03736D14 MOV X3, X31
	0x03736D18 BL 0x3227BD4

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0]
	005 Compare X0, 0
	006 JumpIfEqual {16}
	007 Move X1, X31
	008 Call InputActionState.get_actionStates, X0
	009 NotImplemented "Instruction LDRSW not yet implemented."
	010 Move W9, 48
	011 NotImplemented "Instruction MADD not yet implemented."
	012 NotImplemented "Instruction LDRH not yet implemented."
	013 Move X30, [X31+16]
	014 Move X19, [X31+24]
	015 Return X0
	016 Call 0x1C17F20

Method: System.Int32 get_controlIndex()

Disassembly:
	0x03736D1C MOV X19, X0
	0x03736D20 ADRP X0, 0x9C0000
	0x03736D24 LDR X0, [X0 + 0x78]
	0x03736D28 BL 0x1C16D08
	0x03736D2C BL 0x1C16F10
	0x03736D30 MOV X1, X19
	0x03736D34 MOV X2, X31
	0x03736D38 MOV X20, X0
	0x03736D3C BL 0x335DC08
	0x03736D40 ADRP X0, 0xA0F000
	0x03736D44 LDR X0, [X0 + 0x80]
	0x03736D48 BL 0x1C16D08
	0x03736D4C MOV X1, X0

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0]
	005 Compare X0, 0
	006 JumpIfEqual {17}
	007 Move X1, X31
	008 Call InputActionState.get_actionStates, X0
	009 NotImplemented "Instruction LDRSW not yet implemented."
	010 Move W9, 48
	011 Move X1, X31
	012 NotImplemented "Instruction MADD not yet implemented."
	013 Move X30, [X31+16]
	014 Move X19, [X31+24]
	015 Call TriggerState.get_controlIndex, X0
	016 Return X0
	017 Call 0x1C17F20

Method: System.Int32 get_interactionIndex()

Disassembly:
	0x03736D50 MOV X0, X20
	0x03736D54 BL 0x1C16DEC
	0x03736D58 SUB X31, X31, 0xA0
	0x03736D5C STP X30, X25, [X31 + 0x60]
	0x03736D60 STP X24, X23, [X31 + 0x70]
	0x03736D64 STP X22, X21, [X31 + 0x80]
	0x03736D68 STP X20, X19, [X31 + 0x90]
	0x03736D6C MRS X23, 0xC000
	0x03736D70 LDR X8, [X23 + 0x28]
	0x03736D74 STR X8, [X31 + 0x58]
	0x03736D78 STP X31, X31, [X31 + 0x18]
	0x03736D7C STP X31, X31, [X31 + 0x8]
	0x03736D80 CBZ X1, 0x3736FC0

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0]
	005 Compare X0, 0
	006 JumpIfEqual {17}
	007 Move X1, X31
	008 Call InputActionState.get_actionStates, X0
	009 NotImplemented "Instruction LDRSW not yet implemented."
	010 Move W9, 48
	011 Move X1, X31
	012 NotImplemented "Instruction MADD not yet implemented."
	013 Move X30, [X31+16]
	014 Move X19, [X31+24]
	015 Call TriggerState.get_interactionIndex, X0
	016 Return X0
	017 Call 0x1C17F20

Method: UnityEngine.InputSystem.InputActionPhase get_phase()

Disassembly:
	0x03736D84 LDR X8, [X0 + 0x18]
	0x03736D88 MOV W21, W2
	0x03736D8C MOV X19, X1
	0x03736D90 MOV X20, X0
	0x03736D94 CBZ X8, 0x3736F38
	0x03736D98 MOVZ W1, 0x2F
	0x03736D9C MOV X0, X19
	0x03736DA0 MOV X2, X31
	0x03736DA4 BL 0x322BD98
	0x03736DA8 ADDS W31, W0, 0x1
	0x03736DAC B.EQ 0x3736E5C
	0x03736DB0 MOV W22, W0

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0]
	005 Compare X0, 0
	006 JumpIfEqual {13}
	007 Move X1, X31
	008 Call InputActionState.get_actionStates, X0
	009 NotImplemented "Instruction LDRSW not yet implemented."
	010 Move W9, 48
	011 Multiply X8, X8, X9
	012 Move W0, [X8]
	013 Move X30, [X31+16]
	014 Move X19, [X31+24]
	015 Return X0

Method: System.Boolean get_started()

Disassembly:
	0x03736DB4 ADD X0, X31, 0x18
	0x03736DB8 MOV X1, X19
	0x03736DBC MOV W2, W31
	0x03736DC0 MOV W3, W22
	0x03736DC4 MOV X4, X31
	0x03736DC8 BL 0x3768614
	0x03736DCC ADD W2, W22, 0x1
	0x03736DD0 ADD X0, X31, 0x8
	0x03736DD4 MOV X1, X19
	0x03736DD8 MOV X3, X31
	0x03736DDC BL 0x3768790
	0x03736DE0 ADD X0, X31, 0x18
	0x03736DE4 MOV X1, X31
	0x03736DE8 BL 0x3768760

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0]
	005 Compare X0, 0
	006 JumpIfEqual {15}
	007 Move X1, X31
	008 Call InputActionState.get_actionStates, X0
	009 NotImplemented "Instruction LDRSW not yet implemented."
	010 Move W9, 48
	011 Multiply X8, X8, X9
	012 Move W8, [X8]
	013 NotImplemented "Instruction CMP not yet implemented."
	014 NotImplemented "Instruction CSET not yet implemented."
	015 Move X30, [X31+16]
	016 Move X19, [X31+24]
	017 Return X0

Method: System.Boolean get_performed()

Disassembly:
	0x03736DEC TBNZ X0, 0x0, 0x3737008
	0x03736DF0 ADD X0, X31, 0x8
	0x03736DF4 MOV X1, X31
	0x03736DF8 BL 0x3768760
	0x03736DFC TBNZ X0, 0x0, 0x3737008
	0x03736E00 LDR X8, [X20 + 0x18]
	0x03736E04 CBZ X8, 0x3736ED8
	0x03736E08 MOV X22, X31
	0x03736E0C LDR W9, [X8 + 0x18]
	0x03736E10 CMP W22, W9
	0x03736E14 B.GE 0x3736F38
	0x03736E18 CMP W22, W9
	0x03736E1C B.CS 0x3736FBC
	0x03736E20 ADD X8, X8, X22, 0x3, LSL

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0]
	005 Compare X0, 0
	006 JumpIfEqual {15}
	007 Move X1, X31
	008 Call InputActionState.get_actionStates, X0
	009 NotImplemented "Instruction LDRSW not yet implemented."
	010 Move W9, 48
	011 Multiply X8, X8, X9
	012 Move W8, [X8]
	013 NotImplemented "Instruction CMP not yet implemented."
	014 NotImplemented "Instruction CSET not yet implemented."
	015 Move X30, [X31+16]
	016 Move X19, [X31+24]
	017 Return X0

Method: System.Boolean get_canceled()

Disassembly:
	0x03736E24 LDR X24, [X8 + 0x20]
	0x03736E28 CBZ X24, 0x3736ED8
	0x03736E2C LDR X0, [X24 + 0x10]
	0x03736E30 MOV X1, X31
	0x03736E34 BL 0x3768CAC
	0x03736E38 LDP X2, X3, [X31 + 0x18]
	0x03736E3C MOVZ W4, 0x3
	0x03736E40 MOV X5, X31
	0x03736E44 BL 0x3768A00
	0x03736E48 CBZ W0, 0x3736EDC
	0x03736E4C LDR X8, [X20 + 0x18]
	0x03736E50 ADD X22, X22, 0x1
	0x03736E54 CBNZ X8, 0x3736E0C
	0x03736E58 B 0x3736ED8

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0]
	005 Compare X0, 0
	006 JumpIfEqual {15}
	007 Move X1, X31
	008 Call InputActionState.get_actionStates, X0
	009 NotImplemented "Instruction LDRSW not yet implemented."
	010 Move W9, 48
	011 Multiply X8, X8, X9
	012 Move W8, [X8]
	013 NotImplemented "Instruction CMP not yet implemented."
	014 NotImplemented "Instruction CSET not yet implemented."
	015 Move X30, [X31+16]
	016 Move X19, [X31+24]
	017 Return X0

Method: UnityEngine.InputSystem.InputAction get_action()

Disassembly:
	0x03736E5C LDR X8, [X20 + 0x18]
	0x03736E60 CBZ X8, 0x3736ED8
	0x03736E64 MOV X25, X31
	0x03736E68 MOV X24, X31
	0x03736E6C LDR W9, [X8 + 0x18]
	0x03736E70 CMP W25, W9
	0x03736E74 B.GE 0x3736F6C
	0x03736E78 CMP W25, W9
	0x03736E7C B.CS 0x3736FBC
	0x03736E80 ADD X8, X8, X25, 0x3, LSL
	0x03736E84 LDR X0, [X8 + 0x20]
	0x03736E88 CBZ X0, 0x3736ED8

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, [X0]
	004 Compare X19, 0
	005 JumpIfEqual {14}
	006 Call CallbackContext.get_bindingIndex, X0
	007 Move W1, W0
	008 Move X0, X19
	009 Move X2, X31
	010 Move X30, [X31+16]
	011 Move X19, [X31+24]
	012 Call InputActionState.GetActionOrNull, X0, X1
	013 Return X0
	014 Move X0, X31
	015 Move X30, [X31+16]
	016 Move X19, [X31+24]
	017 Return X0

Method: UnityEngine.InputSystem.InputControl get_control()

Disassembly:
	0x03736E8C MOV X1, X19
	0x03736E90 MOV W2, W31
	0x03736E94 BL 0x37376AC
	0x03736E98 CBZ X0, 0x3736ECC
	0x03736E9C ADD X8, X31, 0x28
	0x03736EA0 MOV X22, X0
	0x03736EA4 BL 0x37347B4
	0x03736EA8 LDRB W8, [X31 + 0x28]
	0x03736EAC CBNZ W8, 0x3736F40
	0x03736EB0 LDR X0, [X22 + 0x28]
	0x03736EB4 MOV X1, X19
	0x03736EB8 MOV X2, X31
	0x03736EBC BL 0x321BA08
	0x03736EC0 TBNZ X0, 0x0, 0x3736F40
	0x03736EC4 CMP X24, 0x0
	0x03736EC8 CSEL X24, X22, X24, EQ
	0x03736ECC LDR X8, [X20 + 0x18]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0]
	004 Compare X8, 0
	005 JumpIfEqual {14}
	006 Move X19, [X8+24]
	007 Call CallbackContext.get_controlIndex, X0
	008 Compare X19, 0
	009 JumpIfEqual {18}
	010 Move W8, [X19+24]
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Add X8, X19, W0
	013 Move X0, [X8+32]
	014 Move X0, X31
	015 Move X30, [X31+16]
	016 Move X19, [X31+24]
	017 Return X0
	018 Call 0x1C17F20
	019 Call 0x1C17F28

Method: UnityEngine.InputSystem.IInputInteraction get_interaction()

Disassembly:
	0x03736ED0 ADD X25, X25, 0x1
	0x03736ED4 CBNZ X8, 0x3736E6C
	0x03736ED8 BL 0x1C16F20
	0x03736EDC LDR X24, [X24 + 0x28]
	0x03736EE0 CBZ X24, 0x3736ED8
	0x03736EE4 LDR W8, [X24 + 0x18]
	0x03736EE8 CMP W8, 0x1
	0x03736EEC B.LT 0x3736F38
	0x03736EF0 MOV W25, W31
	0x03736EF4 CMP W25, W8
	0x03736EF8 B.CS 0x3736FBC
	0x03736EFC ADD X8, X24, W25, 0x3, SXTW
	0x03736F00 LDR X22, [X8 + 0x20]
	0x03736F04 CBZ X22, 0x3736ED8
	0x03736F08 LDR X0, [X22 + 0x10]
	0x03736F0C MOV X1, X31
	0x03736F10 BL 0x3768CAC
	0x03736F14 LDP X2, X3, [X31 + 0x8]
	0x03736F18 MOVZ W4, 0x3
	0x03736F1C MOV X5, X31
	0x03736F20 BL 0x3768A00
	0x03736F24 CBZ W0, 0x3736F40

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0]
	004 Compare X8, 0
	005 JumpIfEqual {19}
	006 Move X19, X0
	007 Call CallbackContext.get_interactionIndex, X0
	008 Add W31, W0, 1
	009 Move X8, [X19]
	010 Compare X8, 0
	011 JumpIfEqual {23}
	012 Move X8, [X8+32]
	013 Compare X8, 0
	014 JumpIfEqual {23}
	015 Move W9, [X8+24]
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Add X8, X8, W0
	018 Move X0, [X8+32]
	019 Move X0, X31
	020 Move X30, [X31+16]
	021 Move X19, [X31+24]
	022 Return X0
	023 Call 0x1C17F20
	024 Call 0x1C17F28

Method: System.Double get_time()

Disassembly:
	0x03736F28 LDR W8, [X24 + 0x18]
	0x03736F2C ADD W25, W25, 0x1
	0x03736F30 CMP W25, W8
	0x03736F34 B.LT 0x3736EF4
	0x03736F38 TBNZ X21, 0x0, 0x3736F78
	0x03736F3C MOV X22, X31
	0x03736F40 LDR X8, [X23 + 0x28]
	0x03736F44 LDR X9, [X31 + 0x58]
	0x03736F48 CMP X8, X9
	0x03736F4C B.NE 0x3737070
	0x03736F50 MOV X0, X22
	0x03736F54 LDP X20, X19, [X31 + 0x90]
	0x03736F58 LDP X22, X21, [X31 + 0x80]
	0x03736F5C LDP X24, X23, [X31 + 0x70]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0]
	005 Compare X0, 0
	006 JumpIfEqual {13}
	007 Move X1, X31
	008 Call InputActionState.get_actionStates, X0
	009 NotImplemented "Instruction LDRSW not yet implemented."
	010 Move W9, 48
	011 NotImplemented "Instruction MADD not yet implemented."
	012 Move V0, [X8+8]
	013 Move D0, X31
	014 Move X30, [X31+16]
	015 Move X19, [X31+24]
	016 Return V0

Method: System.Double get_startTime()

Disassembly:
	0x03736F60 LDP X30, X25, [X31 + 0x60]
	0x03736F64 ADD X31, X31, 0xA0
	0x03736F68 RET
	0x03736F6C MOV X22, X24
	0x03736F70 CBNZ X24, 0x3736F40
	0x03736F74 TBZ X21, 0x0, 0x3736F40
	0x03736F78 ADRP X0, 0xA0F000
	0x03736F7C LDR X0, [X0 + 0x88]
	0x03736F80 BL 0x1C16D08
	0x03736F84 MOV X1, X19
	0x03736F88 MOV X2, X20
	0x03736F8C MOV X3, X31
	0x03736F90 BL 0x3227BD4
	0x03736F94 MOV X19, X0

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0]
	005 Compare X0, 0
	006 JumpIfEqual {13}
	007 Move X1, X31
	008 Call InputActionState.get_actionStates, X0
	009 NotImplemented "Instruction LDRSW not yet implemented."
	010 Move W9, 48
	011 NotImplemented "Instruction MADD not yet implemented."
	012 Move V0, [X8+16]
	013 Move D0, X31
	014 Move X30, [X31+16]
	015 Move X19, [X31+24]
	016 Return V0

Method: System.Double get_duration()

Disassembly:
	0x03736F98 ADRP X0, 0x9C5000
	0x03736F9C LDR X0, [X0 + 0x578]
	0x03736FA0 BL 0x1C16D08
	0x03736FA4 BL 0x1C16F10
	0x03736FA8 MOV X1, X19
	0x03736FAC MOV X2, X31
	0x03736FB0 MOV X20, X0
	0x03736FB4 BL 0x3314A68
	0x03736FB8 B 0x3737058
	0x03736FBC BL 0x1C16F28
	0x03736FC0 ADRP X0, 0x9C2000
	0x03736FC4 LDR X0, [X0 + 0x528]
	0x03736FC8 BL 0x1C16D08
	0x03736FCC BL 0x1C16F10
	0x03736FD0 MOV X19, X0
	0x03736FD4 ADRP X0, 0xA0F000
	0x03736FD8 LDR X0, [X0 + 0x90]
	0x03736FDC BL 0x1C16D08
	0x03736FE0 MOV X1, X0
	0x03736FE4 MOV X0, X19
	0x03736FE8 MOV X2, X31
	0x03736FEC BL 0x330E100
	0x03736FF0 ADRP X0, 0xA0F000
	0x03736FF4 LDR X0, [X0 + 0x98]
	0x03736FF8 BL 0x1C16D08
	0x03736FFC MOV X1, X0

ISIL:
	001 Move [X31-32], D9
	002 Move [X31-24], D8
	003 Move [X31+16], X30
	004 Move [X31+24], X19
	005 Move X19, X0
	006 Move X0, [X0]
	007 Move D8, X31
	008 Compare X0, 0
	009 JumpIfEqual {25}
	010 Move X1, X31
	011 Call InputActionState.get_actionStates, X0
	012 NotImplemented "Instruction LDRSW not yet implemented."
	013 Move W9, 48
	014 NotImplemented "Instruction MADD not yet implemented."
	015 Move X0, [X19]
	016 Move V9, [X8+8]
	017 Compare X0, 0
	018 JumpIfEqual {26}
	019 Move X1, X31
	020 Call InputActionState.get_actionStates, X0
	021 NotImplemented "Instruction LDRSW not yet implemented."
	022 Move W9, 48
	023 NotImplemented "Instruction MADD not yet implemented."
	024 Move V8, [X8+16]
	025 Move D9, X31
	026 Move X30, [X31+16]
	027 Move X19, [X31+24]
	028 Subtract D0, D9, D8
	029 Move D9, [X31+32]
	030 Move D8, [X31+40]
	031 Return V0

Method: System.Type get_valueType()

Disassembly:
	0x03737000 MOV X0, X19
	0x03737004 BL 0x1C16DEC
	0x03737008 ADRP X0, 0xA0E000
	0x0373700C LDR X0, [X0 + 0xA0]
	0x03737010 BL 0x1C16D08
	0x03737014 MOV X1, X19
	0x03737018 MOV X2, X31
	0x0373701C BL 0x321B938
	0x03737020 MOV X19, X0
	0x03737024 ADRP X0, 0x9C4000
	0x03737028 LDR X0, [X0 + 0x578]
	0x0373702C BL 0x1C16D08
	0x03737030 BL 0x1C16F10
	0x03737034 MOV X20, X0
	0x03737038 ADRP X0, 0xA0E000
	0x0373703C LDR X0, [X0 + 0x90]
	0x03737040 BL 0x1C16D08
	0x03737044 MOV X2, X0
	0x03737048 MOV X0, X20
	0x0373704C MOV X1, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, [X0]
	006 Compare X19, 0
	007 JumpIfEqual {23}
	008 Move X20, X0
	009 Call CallbackContext.get_bindingIndex, X0
	010 Move W21, W0
	011 Move X0, X20
	012 Call CallbackContext.get_controlIndex, X0
	013 Move W2, W0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move W1, W21
	018 Move X3, X31
	019 Move X30, [X31+32]
	020 Move X21, [X31+40]
	021 Call InputActionState.GetValueType, X0, X1, X2
	022 Return X0
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X0, X31
	026 Move X30, [X31+32]
	027 Move X21, [X31+40]
	028 Return X0

Method: System.Int32 get_valueSizeInBytes()

Disassembly:
	0x03737050 MOV X3, X31
	0x03737054 BL 0x330E16C
	0x03737058 ADRP X0, 0xA0E000
	0x0373705C LDR X0, [X0 + 0x98]
	0x03737060 BL 0x1C16D08
	0x03737064 MOV X1, X0
	0x03737068 MOV X0, X20
	0x0373706C BL 0x1C16DEC
	0x03737070 BL 0x3EB1B20
	0x03737074 SUB X31, X31, 0x40
	0x03737078 STP X30, X21, [X31 + 0x20]
	0x0373707C STP X20, X19, [X31 + 0x30]
	0x03737080 ADRP X20, 0xCA9000
	0x03737084 ADRP X21, 0xA0E000
	0x03737088 LDRB W8, [X20 + 0xCF3]
	0x0373708C LDR X21, [X21 + 0xA8]
	0x03737090 MOV X19, X0
	0x03737094 TBNZ X8, 0x0, 0x37370AC
	0x03737098 ADRP X0, 0xA0E000
	0x0373709C LDR X0, [X0 + 0xA8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, [X0]
	006 Compare X19, 0
	007 JumpIfEqual {23}
	008 Move X20, X0
	009 Call CallbackContext.get_bindingIndex, X0
	010 Move W21, W0
	011 Move X0, X20
	012 Call CallbackContext.get_controlIndex, X0
	013 Move W2, W0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move W1, W21
	018 Move X3, X31
	019 Move X30, [X31+32]
	020 Move X21, [X31+40]
	021 Call InputActionState.GetValueSizeInBytes, X0, X1, X2
	022 Return X0
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move W0, W31
	026 Move X30, [X31+32]
	027 Move X21, [X31+40]
	028 Return X0

Method: System.Void ReadValue(System.Void* buffer, System.Int32 bufferSize)

Disassembly:
	0x037370A0 BL 0x1C16CF4
	0x037370A4 MOVZ W8, 0x1
	0x037370A8 STRB W8, [X20 + 0xCF3]
	0x037370AC MOV X0, X19
	0x037370B0 MOV X1, X31
	0x037370B4 BL 0x3C389D4
	0x037370B8 LDR X8, [X19 + 0x18]
	0x037370BC MOV X20, X0
	0x037370C0 MOV X0, X8
	0x037370C4 BL 0x3737110
	0x037370C8 LDR X8, [X19 + 0x20]
	0x037370CC MOV X19, X0
	0x037370D0 MOV X1, X31
	0x037370D4 MOV X0, X8
	0x037370D8 BL 0x376C3DC
	0x037370DC LDR X8, [X21]
	0x037370E0 STR X0, [X31 + 0x18]
	0x037370E4 ADD X1, X31, 0x8
	0x037370E8 STP X20, X19, [X31 + 0x8]
	0x037370EC MOV X0, X8
	0x037370F0 BL 0x1C16E04
	0x037370F4 MOVZ W1, 0x1
	0x037370F8 MOV X2, X31
	0x037370FC BL 0x3C86C28
	0x03737100 LDP X20, X19, [X31 + 0x30]
	0x03737104 LDP X30, X21, [X31 + 0x20]
	0x03737108 ADD X31, X31, 0x40
	0x0373710C RET
	0x03737110 SUB X31, X31, 0x90
	0x03737114 STP X30, X23, [X31 + 0x60]
	0x03737118 STP X22, X21, [X31 + 0x70]
	0x0373711C STP X20, X19, [X31 + 0x80]
	0x03737120 ADRP X20, 0xCA9000
	0x03737124 ADRP X21, 0xA0E000
	0x03737128 LDRB W8, [X20 + 0xD2E]
	0x0373712C LDR X21, [X21 + 0xB0]
	0x03737130 MOV X19, X0
	0x03737134 TBNZ X8, 0x0, 0x3737188
	0x03737138 ADRP X0, 0xA0E000
	0x0373713C LDR X0, [X0 + 0xB0]
	0x03737140 BL 0x1C16CF4
	0x03737144 ADRP X0, 0x9BC000
	0x03737148 LDR X0, [X0 + 0xE00]
	0x0373714C BL 0x1C16CF4
	0x03737150 ADRP X0, 0xA0E000
	0x03737154 LDR X0, [X0 + 0xB8]
	0x03737158 BL 0x1C16CF4
	0x0373715C ADRP X0, 0xA0E000
	0x03737160 LDR X0, [X0 + 0xC0]
	0x03737164 BL 0x1C16CF4
	0x03737168 ADRP X0, 0x9BC000
	0x0373716C LDR X0, [X0 + 0xE18]
	0x03737170 BL 0x1C16CF4
	0x03737174 ADRP X0, 0xA0E000
	0x03737178 LDR X0, [X0 + 0xC8]
	0x0373717C BL 0x1C16CF4
	0x03737180 MOVZ W8, 0x1
	0x03737184 STRB W8, [X20 + 0xD2E]
	0x03737188 LDR X1, [X21]
	0x0373718C MOV X0, X19
	0x03737190 BL 0x21BD4C4
	0x03737194 CBZ W0, 0x37371FC
	0x03737198 ADRP X8, 0xA0E000
	0x0373719C LDR X8, [X8 + 0xC8]
	0x037371A0 MOV W1, W0
	0x037371A4 LDR X0, [X8]
	0x037371A8 BL 0x1C16D6C
	0x037371AC CBZ X19, 0x37373BC
	0x037371B0 ADRP X10, 0xA0E000
	0x037371B4 LDR X8, [X19]
	0x037371B8 LDR X10, [X10 + 0xB8]
	0x037371BC MOV X20, X0
	0x037371C0 LDRH W9, [X8 + 0x12E]
	0x037371C4 LDR X1, [X10]
	0x037371C8 CBZ X9, 0x37371EC
	0x037371CC LDR X10, [X8 + 0xB0]
	0x037371D0 ADD X10, X10, 0x8
	0x037371D4 LDUR X11, [X10 - 0x8]
	0x037371D8 CMP X11, X1
	0x037371DC B.EQ 0x3737204
	0x037371E0 SUBS X9, X9, 0x1
	0x037371E4 ADD X10, X10, 0x10
	0x037371E8 B.NE 0x37371D4
	0x037371EC MOV X0, X19
	0x037371F0 MOV W2, W31
	0x037371F4 BL 0x1C5C788
	0x037371F8 B 0x3737210
	0x037371FC MOV X20, X31
	0x03737200 B 0x373739C
	0x03737204 LDRSW X9, [X10]
	0x03737208 ADD X8, X8, X9, 0x4, LSL
	0x0373720C ADD X0, X8, 0x138
	0x03737210 LDP X8, X1, [X0]
	0x03737214 MOV X0, X19
	0x03737218 BLR X8
	0x0373721C MOV X19, X0
	0x03737220 CBZ X0, 0x37373C0
	0x03737224 ADRP X21, 0x9BC000
	0x03737228 ADRP X22, 0xA0E000
	0x0373722C LDR X21, [X21 + 0xE18]
	0x03737230 LDR X22, [X22 + 0xC0]
	0x03737234 MOV W23, W31
	0x03737238 LDR X8, [X19]
	0x0373723C LDR X1, [X21]
	0x03737240 LDRH W9, [X8 + 0x12E]
	0x03737244 CBZ X9, 0x3737268
	0x03737248 LDR X10, [X8 + 0xB0]
	0x0373724C ADD X10, X10, 0x8
	0x03737250 LDUR X11, [X10 - 0x8]
	0x03737254 CMP X11, X1
	0x03737258 B.EQ 0x3737278
	0x0373725C SUBS X9, X9, 0x1

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Compare X1, 0
	009 JumpIfEqual {69}
	010 Move X21, X0
	011 Move X0, [X0]
	012 Move W19, W2
	013 Move X20, X1
	014 Compare X0, 0
	015 JumpIfEqual {52}
	016 Move X1, X31
	017 Call InputActionState.get_actionStates, X0
	018 NotImplemented "Instruction LDRSW not yet implemented."
	019 Move W9, 48
	020 Move X1, X31
	021 Multiply X8, X8, X9
	022 Move W0, [X8]
	023 Call InputExtensions.IsInProgress, X0
	024 Move TEMP, X0
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfNotEqual {52}
	028 Move X22, [X21]
	029 Move X0, X21
	030 Call CallbackContext.get_bindingIndex, X0
	031 Move W23, W0
	032 Move X0, X21
	033 Call CallbackContext.get_controlIndex, X0
	034 Compare X22, 0
	035 JumpIfEqual {128}
	036 Move W2, W0
	037 Move X0, X22
	038 Move W1, W23
	039 Move X3, X20
	040 Move W4, W19
	041 Move X20, [X31+48]
	042 Move X19, [X31+56]
	043 Move X22, [X31+32]
	044 Move X21, [X31+40]
	045 Move X30, [X31+16]
	046 Move X23, [X31+24]
	047 Move W5, W31
	048 Move X6, X31
	049 Add X31, X31, 64
	050 Call InputActionState.ReadValue, X0, X1, X2, X3, X4, X5
	051 Return 
	052 Move X0, X21
	053 Call CallbackContext.get_valueSizeInBytes, X0
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move X0, X21
	056 Call CallbackContext.get_valueSizeInBytes, X0
	057 Move X1, W0
	058 Move X0, X20
	059 Move X20, [X31+48]
	060 Move X19, [X31+56]
	061 Move X22, [X31+32]
	062 Move X21, [X31+40]
	063 Move X30, [X31+16]
	064 Move X23, [X31+24]
	065 Move X2, X31
	066 Add X31, X31, 64
	067 Call UnsafeUtility.MemClear, X0, X1
	068 Return 
	069 Move X0, 0x9C2000
	070 Move X0, [X0+1320]
	071 Call 0x1C17D08
	072 Call 0x1C17F10
	073 Move X19, X0
	074 Move X0, 0x9E8000
	075 Move X0, [X0+3912]
	076 Call 0x1C17D08
	077 Move X1, X0
	078 Move X0, X19
	079 Move X2, X31
	080 Call ArgumentNullException..ctor, X0, X1
	081 Move X0, 0xA0E000
	082 Move X0, [X0+4080]
	083 Call 0x1C17D08
	084 Move X1, X0
	085 Move X0, X19
	086 Call 0x1C17DEC
	087 Move [X31+12], W0
	088 Move X20, 0x9BD000
	089 Move X20, [X20+1880]
	090 Move X0, X20
	091 Call 0x1C17D08
	092 Add X1, X31, 12
	093 Call 0x1C17E04
	094 Move X21, X0
	095 Move X0, X20
	096 Move [X31+8], W19
	097 Call 0x1C17D08
	098 Add X1, X31, 8
	099 Call 0x1C17E04
	100 Move X19, X0
	101 Move X0, 0xA0E000
	102 Move X0, [X0+4088]
	103 Call 0x1C17D08
	104 Move X1, X21
	105 Move X2, X19
	106 Move X3, X31
	107 Call String.Format, X0, X1, X2
	108 Move X19, X0
	109 Move X0, 0x9C5000
	110 Move X0, [X0+1400]
	111 Call 0x1C17D08
	112 Call 0x1C17F10
	113 Move X20, X0
	114 Move X0, 0x9E8000
	115 Move X0, [X0+3928]
	116 Call 0x1C17D08
	117 Move X2, X0
	118 Move X0, X20
	119 Move X1, X19
	120 Move X3, X31
	121 Call ArgumentException..ctor, X0, X1, X2
	122 Move X0, 0xA0E000
	123 Move X0, [X0+4080]
	124 Call 0x1C17D08
	125 Move X1, X0
	126 Move X0, X20
	127 Call 0x1C17DEC
	128 Call 0x1C17F20

Method: TValue ReadValue()

Disassembly:
	0x022B5A6C LDR X0, [X0 + 0x5B0]
	0x022B5A70 BL 0x1C16D08
	0x022B5A74 BL 0x1C16F10
	0x022B5A78 MOV X1, X20
	0x022B5A7C MOV X2, X31
	0x022B5A80 MOV X21, X0
	0x022B5A84 BL 0x337DF1C
	0x022B5A88 MOV X0, X21
	0x022B5A8C MOV X1, X19
	0x022B5A90 BL 0x1C16DEC
	0x022B5A94 BL 0x3EB1B20
	0x022B5A98 SUB X31, X31, 0x50
	0x022B5A9C STR X30, [X31 + 0x10]
	0x022B5AA0 STP X24, X23, [X31 + 0x20]
	0x022B5AA4 STP X22, X21, [X31 + 0x30]
	0x022B5AA8 STP X20, X19, [X31 + 0x40]
	0x022B5AAC LDR X8, [X2 + 0x38]
	0x022B5AB0 MOV X21, X2
	0x022B5AB4 MOV X20, X1
	0x022B5AB8 MOV X19, X0
	0x022B5ABC CBNZ X8, 0x22B5ACC
	0x022B5AC0 MOV X0, X21
	0x022B5AC4 BL 0x1C5C6E0
	0x022B5AC8 LDR X8, [X21 + 0x38]
	0x022B5ACC LDR X1, [X8]
	0x022B5AD0 LDR X22, [X8 + 0x18]
	0x022B5AD4 LDR X24, [X19]
	0x022B5AD8 LDRB W8, [X1 + 0x135]
	0x022B5ADC LDR X23, [X22]
	0x022B5AE0 TBNZ X8, 0x0, 0x22B5AF0
	0x022B5AE4 MOV X0, X1
	0x022B5AE8 BL 0x1C5C684
	0x022B5AEC MOV X1, X0
	0x022B5AF0 CBZ X24, 0x22B5B1C
	0x022B5AF4 LDR X8, [X24]
	0x022B5AF8 LDRB W9, [X1 + 0x130]
	0x022B5AFC LDRB W10, [X8 + 0x130]
	0x022B5B00 CMP W10, W9
	0x022B5B04 B.CC 0x22B5B6C
	0x022B5B08 LDR X8, [X8 + 0xC8]
	0x022B5B0C ADD X8, X8, X9, 0x3, LSL
	0x022B5B10 LDUR X8, [X8 - 0x8]
	0x022B5B14 CMP X8, X1
	0x022B5B18 B.NE 0x22B5B6C
	0x022B5B1C LDR X8, [X21 + 0x38]
	0x022B5B20 MOV X0, X24
	0x022B5B24 LDR X8, [X8]
	0x022B5B28 LDR X1, [X8 + 0x80]
	0x022B5B2C BL 0x1C16D18
	0x022B5B30 STR X20, [X31 + 0x8]
	0x022B5B34 LDR X8, [X22 + 0x10]
	0x022B5B38 MOV X2, X0
	0x022B5B3C ADD X3, X31, 0x8
	0x022B5B40 ADD X4, X31, 0x1C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X8, [X1+56]
	008 Move X19, X1
	009 Move X20, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {14}
	012 Move X0, X19
	013 Call 0x1C5D6E0
	014 Move X8, [X20]
	015 Compare X8, 0
	016 JumpIfEqual {51}
	017 Move X0, X20
	018 Move X1, X31
	019 Call CallbackContext.get_phase, X0
	020 Move X1, X31
	021 Call InputExtensions.IsInProgress, X0
	022 Move X21, [X20]
	023 Move W23, W0
	024 Move X0, X20
	025 Move X1, X31
	026 Call CallbackContext.get_bindingIndex, X0
	027 Move W22, W0
	028 Move TEMP, X23
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfNotEqual {59}
	032 Move X0, X20
	033 Move X1, X31
	034 Call CallbackContext.get_controlIndex, X0
	035 Compare X21, 0
	036 JumpIfEqual {75}
	037 Move X8, [X19+56]
	038 Move W2, W0
	039 Move X0, X21
	040 Move W1, W22
	041 Move X4, [X8+24]
	042 Move X20, [X31+32]
	043 Move X19, [X31+40]
	044 Move X22, [X31+16]
	045 Move X21, [X31+24]
	046 Move W3, W31
	047 Move X30, [X31+48]
	048 Move X23, [X31+56]
	049 Call 0x21F988C, X0, X1, X2, X3
	050 Return X0
	051 Move X20, [X31+32]
	052 Move X19, [X31+40]
	053 Move X22, [X31+16]
	054 Move X21, [X31+24]
	055 Move W0, W31
	056 Move X30, [X31+48]
	057 Move X23, [X31+56]
	058 Return X0
	059 Compare X21, 0
	060 JumpIfEqual {75}
	061 Move X8, [X19+56]
	062 Move X0, X21
	063 Move W1, W22
	064 Move X20, [X31+32]
	065 Move X19, [X31+40]
	066 Move X4, [X8+8]
	067 Move X22, [X31+16]
	068 Move X21, [X31+24]
	069 Move W2, W31
	070 Move X3, X31
	071 Move X30, [X31+48]
	072 Move X23, [X31+56]
	073 Call 0x21F8198, X0, X1, X2, X3
	074 Return X0
	075 Call 0x1C17F20

Method: System.Boolean ReadValueAsButton()

Disassembly:
	0x03737260 ADD X10, X10, 0x10
	0x03737264 B.NE 0x3737250
	0x03737268 MOV X0, X19
	0x0373726C MOV W2, W31
	0x03737270 BL 0x1C5C788
	0x03737274 B 0x3737284
	0x03737278 LDRSW X9, [X10]
	0x0373727C ADD X8, X8, X9, 0x4, LSL
	0x03737280 ADD X0, X8, 0x138
	0x03737284 LDP X8, X1, [X0]
	0x03737288 MOV X0, X19
	0x0373728C BLR X8
	0x03737290 TBZ X0, 0x0, 0x3737330
	0x03737294 LDR X8, [X19]
	0x03737298 LDR X1, [X22]
	0x0373729C LDRH W9, [X8 + 0x12E]
	0x037372A0 CBZ X9, 0x37372C4
	0x037372A4 LDR X10, [X8 + 0xB0]
	0x037372A8 ADD X10, X10, 0x8
	0x037372AC LDUR X11, [X10 - 0x8]
	0x037372B0 CMP X11, X1
	0x037372B4 B.EQ 0x37372D4
	0x037372B8 SUBS X9, X9, 0x1
	0x037372BC ADD X10, X10, 0x10
	0x037372C0 B.NE 0x37372AC
	0x037372C4 MOV X0, X19
	0x037372C8 MOV W2, W31
	0x037372CC BL 0x1C5C788
	0x037372D0 B 0x37372E0
	0x037372D4 LDRSW X9, [X10]
	0x037372D8 ADD X8, X8, X9, 0x4, LSL
	0x037372DC ADD X0, X8, 0x138
	0x037372E0 LDP X8, X1, [X0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, X0
	006 Move X0, [X0]
	007 Compare X0, 0
	008 JumpIfEqual {39}
	009 Move X1, X31
	010 Call InputActionState.get_actionStates, X0
	011 NotImplemented "Instruction LDRSW not yet implemented."
	012 Move W9, 48
	013 Move X1, X31
	014 Multiply X8, X8, X9
	015 Move W0, [X8]
	016 Call InputExtensions.IsInProgress, X0
	017 Move TEMP, X0
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfNotEqual {39}
	021 Move X20, [X19]
	022 Move X0, X19
	023 Call CallbackContext.get_bindingIndex, X0
	024 Move W21, W0
	025 Move X0, X19
	026 Call CallbackContext.get_controlIndex, X0
	027 Compare X20, 0
	028 JumpIfEqual {45}
	029 Move W2, W0
	030 Move X0, X20
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move W1, W21
	034 Move X3, X31
	035 Move X30, [X31+32]
	036 Move X21, [X31+40]
	037 Call InputActionState.ReadValueAsButton, X0, X1, X2
	038 Return X0
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move W0, W31
	042 Move X30, [X31+32]
	043 Move X21, [X31+40]
	044 Return X0
	045 Call 0x1C17F20

Method: System.Object ReadValueAsObject()

Disassembly:
	0x037372E4 MOV X0, X19
	0x037372E8 BLR X8
	0x037372EC ADD X8, X31, 0x20
	0x037372F0 BL 0x373CB24
	0x037372F4 LDP V0, V1, [X31 + 0x20]
	0x037372F8 STP V0, V1, [X31 + 0x40]
	0x037372FC CBZ X20, 0x37373B4
	0x03737300 LDP V0, V1, [X31 + 0x40]
	0x03737304 STP V0, V1, [X31]
	0x03737308 LDR W8, [X20 + 0x18]
	0x0373730C CMP W23, W8
	0x03737310 B.CS 0x37373B8
	0x03737314 LDP V0, V1, [X31]
	0x03737318 SXTW X8, W23
	0x0373731C ADD W9, W23, 0x1
	0x03737320 ADD X8, X20, X8, 0x5, LSL
	0x03737324 MOV W23, W9
	0x03737328 STP V0, V1, [X8 + 0x20]
	0x0373732C B 0x3737238
	0x03737330 MOV X21, X31
	0x03737334 CBZ X19, 0x3737398
	0x03737338 ADRP X10, 0x9BC000
	0x0373733C LDR X8, [X19]
	0x03737340 LDR X10, [X10 + 0xE00]
	0x03737344 LDRH W9, [X8 + 0x12E]
	0x03737348 LDR X1, [X10]
	0x0373734C CBZ X9, 0x3737370
	0x03737350 LDR X10, [X8 + 0xB0]
	0x03737354 ADD X10, X10, 0x8
	0x03737358 LDUR X11, [X10 - 0x8]
	0x0373735C CMP X11, X1
	0x03737360 B.EQ 0x3737380
	0x03737364 SUBS X9, X9, 0x1
	0x03737368 ADD X10, X10, 0x10

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, X0
	006 Move X0, [X0]
	007 Compare X0, 0
	008 JumpIfEqual {40}
	009 Move X1, X31
	010 Call InputActionState.get_actionStates, X0
	011 NotImplemented "Instruction LDRSW not yet implemented."
	012 Move W9, 48
	013 Move X1, X31
	014 Multiply X8, X8, X9
	015 Move W0, [X8]
	016 Call InputExtensions.IsInProgress, X0
	017 Move TEMP, X0
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfNotEqual {40}
	021 Move X20, [X19]
	022 Move X0, X19
	023 Call CallbackContext.get_bindingIndex, X0
	024 Move W21, W0
	025 Move X0, X19
	026 Call CallbackContext.get_controlIndex, X0
	027 Compare X20, 0
	028 JumpIfEqual {46}
	029 Move W2, W0
	030 Move X0, X20
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move W1, W21
	034 Move W3, W31
	035 Move X4, X31
	036 Move X30, [X31+32]
	037 Move X21, [X31+40]
	038 Call InputActionState.ReadValueAsObject, X0, X1, X2, X3
	039 Return X0
	040 Move X20, [X31+16]
	041 Move X19, [X31+24]
	042 Move X0, X31
	043 Move X30, [X31+32]
	044 Move X21, [X31+40]
	045 Return X0
	046 Call 0x1C17F20

Method: System.String ToString()

Disassembly:
	0x0373736C B.NE 0x3737358
	0x03737370 MOV X0, X19
	0x03737374 MOV W2, W31
	0x03737378 BL 0x1C5C788
	0x0373737C B 0x373738C
	0x03737380 LDRSW X9, [X10]
	0x03737384 ADD X8, X8, X9, 0x4, LSL
	0x03737388 ADD X0, X8, 0x138
	0x0373738C LDP X8, X1, [X0]
	0x03737390 MOV X0, X19
	0x03737394 BLR X8
	0x03737398 CBNZ X21, 0x37373C4
	0x0373739C MOV X0, X20
	0x037373A0 LDP X20, X19, [X31 + 0x80]
	0x037373A4 LDP X22, X21, [X31 + 0x70]
	0x037373A8 LDP X30, X23, [X31 + 0x60]
	0x037373AC ADD X31, X31, 0x90
	0x037373B0 RET
	0x037373B4 BL 0x1C16F20
	0x037373B8 BL 0x1C16F28
	0x037373BC BL 0x1C16F20
	0x037373C0 BL 0x1C16F20
	0x037373C4 MOV X0, X21
	0x037373C8 BL 0x1C16F18
	0x037373CC B 0x37373DC
	0x037373D0 B 0x37373DC
	0x037373D4 B 0x37373DC
	0x037373D8 B 0x37373DC
	0x037373DC MOV X22, X0
	0x037373E0 CMP W1, 0x1
	0x037373E4 B.NE 0x37373FC
	0x037373E8 MOV X0, X22
	0x037373EC BL 0x3EB1AD0
	0x037373F0 LDR X21, [X0]
	0x037373F4 BL 0x3EB1AE0
	0x037373F8 B 0x3737334
	0x037373FC MOV X21, X31
	0x03737400 B 0x3737408
	0x03737404 MOV X22, X0
	0x03737408 CBZ X19, 0x373746C
	0x0373740C ADRP X10, 0x9BC000
	0x03737410 LDR X8, [X19]
	0x03737414 LDR X10, [X10 + 0xE00]
	0x03737418 LDRH W9, [X8 + 0x12E]
	0x0373741C LDR X1, [X10]
	0x03737420 CBZ X9, 0x3737444
	0x03737424 LDR X10, [X8 + 0xB0]
	0x03737428 ADD X10, X10, 0x8
	0x0373742C LDUR X11, [X10 - 0x8]
	0x03737430 CMP X11, X1
	0x03737434 B.EQ 0x3737454
	0x03737438 SUBS X9, X9, 0x1
	0x0373743C ADD X10, X10, 0x10
	0x03737440 B.NE 0x373742C
	0x03737444 MOV X0, X19
	0x03737448 MOV W2, W31
	0x0373744C BL 0x1C5C788
	0x03737450 B 0x3737460
	0x03737454 LDRSW X9, [X10]
	0x03737458 ADD X8, X8, X9, 0x4, LSL
	0x0373745C ADD X0, X8, 0x138
	0x03737460 LDP X8, X1, [X0]
	0x03737464 MOV X0, X19
	0x03737468 BLR X8
	0x0373746C CBNZ X21, 0x3737478
	0x03737470 MOV X0, X22
	0x03737474 BL 0x1D2C690
	0x03737478 MOV X0, X21
	0x0373747C BL 0x1C16F18
	0x03737480 BL 0x1990590
	0x03737484 SUB X31, X31, 0x60
	0x03737488 STP X30, X21, [X31 + 0x40]
	0x0373748C STP X20, X19, [X31 + 0x50]
	0x03737490 ADRP X21, 0xCA9000
	0x03737494 LDRB W8, [X21 + 0xCF4]
	0x03737498 MOV X20, X1
	0x0373749C MOV X19, X0
	0x037374A0 TBNZ X8, 0x0, 0x37374B8
	0x037374A4 ADRP X0, 0xA0E000
	0x037374A8 LDR X0, [X0 + 0xD0]
	0x037374AC BL 0x1C16CF4
	0x037374B0 MOVZ W8, 0x1
	0x037374B4 STRB W8, [X21 + 0xCF4]
	0x037374B8 MOV X0, X20
	0x037374BC MOV X1, X31
	0x037374C0 BL 0x32277A8
	0x037374C4 TBNZ X0, 0x0, 0x373750C
	0x037374C8 ADRP X8, 0xA0E000
	0x037374CC LDR X8, [X8 + 0xD0]
	0x037374D0 MOV X0, X20
	0x037374D4 LDR X1, [X8]
	0x037374D8 ADD X8, X31, 0x8
	0x037374DC BL 0x22116B8
	0x037374E0 LDUR V0, [X31 + 0x8]
	0x037374E4 LDR X8, [X31 + 0x18]
	0x037374E8 ADD X0, X31, 0x20
	0x037374EC MOV X1, X19
	0x037374F0 STR V0, [X31 + 0x2]
	0x037374F4 STR X8, [X31 + 0x30]
	0x037374F8 BL 0x3737554
	0x037374FC LDP X20, X19, [X31 + 0x50]
	0x03737500 LDP X30, X21, [X31 + 0x40]
	0x03737504 ADD X31, X31, 0x60
	0x03737508 RET
	0x0373750C ADRP X0, 0x9C1000
	0x03737510 LDR X0, [X0 + 0x528]
	0x03737514 BL 0x1C16D08
	0x03737518 BL 0x1C16F10
	0x0373751C MOV X19, X0
	0x03737520 ADRP X0, 0xA0E000
	0x03737524 LDR X0, [X0 + 0xD8]
	0x03737528 BL 0x1C16D08
	0x0373752C MOV X1, X0
	0x03737530 MOV X0, X19
	0x03737534 MOV X2, X31
	0x03737538 BL 0x330E100
	0x0373753C ADRP X0, 0xA0E000
	0x03737540 LDR X0, [X0 + 0xE0]
	0x03737544 BL 0x1C16D08
	0x03737548 MOV X1, X0
	0x0373754C MOV X0, X19
	0x03737550 BL 0x1C16DEC
	0x03737554 SUB X31, X31, 0x30
	0x03737558 STR X30, [X31 + 0x10]
	0x0373755C STP X20, X19, [X31 + 0x20]
	0x03737560 CBZ X1, 0x37375F0
	0x03737564 MOV X19, X1
	0x03737568 LDR X1, [X0]
	0x0373756C MOV X20, X0
	0x03737570 MOV X0, X19
	0x03737574 MOV X2, X31
	0x03737578 BL 0x3C38A84
	0x0373757C LDR X8, [X20 + 0x8]
	0x03737580 ADD X0, X31, 0x0
	0x03737584 STP X31, X8, [X31]
	0x03737588 BL 0x3738BEC
	0x0373758C STR X0, [X19 + 0x18]
	0x03737590 LDR X0, [X20 + 0x10]
	0x03737594 MOV X1, X31
	0x03737598 BL 0x376C4E4
	0x0373759C LDR X10, [X19 + 0x18]
	0x037375A0 STR X0, [X19 + 0x20]
	0x037375A4 CBZ X10, 0x37375DC
	0x037375A8 LDR W8, [X10 + 0x18]
	0x037375AC CMP W8, 0x1
	0x037375B0 B.LT 0x37375DC
	0x037375B4 MOV X9, X31
	0x037375B8 ADD X10, X10, 0x20

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xCAA000
	007 Move X21, 0x9BD000
	008 Move W8, [X20+3309]
	009 Move X21, [X21+2512]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {29}
	015 Move X0, 0x9C0000
	016 Move X0, [X0+2424]
	017 Call 0x1C17CF4
	018 Move X0, 0xA0F000
	019 Move X0, [X0]
	020 Call 0x1C17CF4
	021 Move X0, 0x9BD000
	022 Move X0, [X0+2512]
	023 Call 0x1C17CF4
	024 Move X0, 0xA0F000
	025 Move X0, [X0+8]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X20+3309], W8
	029 Move X0, [X21]
	030 Move W1, 6
	031 Call 0x1C17D6C
	032 Move X20, X0
	033 Move X0, X19
	034 Call CallbackContext.get_action, X0
	035 Compare X20, 0
	036 JumpIfEqual {164}
	037 Move X21, X0
	038 Compare X0, 0
	039 JumpIfEqual {46}
	040 Move X8, [X20]
	041 Move X0, X21
	042 Move X1, [X8+64]
	043 Call 0x1C17E00
	044 Compare X0, 0
	045 JumpIfEqual {161}
	046 Move W8, [X20+24]
	047 Compare W8, 0
	048 JumpIfEqual {160}
	049 Move [X20+32], X21
	050 Move X21, 0xA0F000
	051 Move X0, [X19]
	052 Move X21, [X21]
	053 Compare X0, 0
	054 JumpIfEqual {61}
	055 Move X1, X31
	056 Call InputActionState.get_actionStates, X0
	057 NotImplemented "Instruction LDRSW not yet implemented."
	058 Move W9, 48
	059 Multiply X8, X8, X9
	060 Move W8, [X8]
	061 Move W8, W31
	062 Move X0, [X21]
	063 Add X1, X31, 12
	064 Move [X31+12], W8
	065 Call 0x1C17E04
	066 Move X21, X0
	067 Compare X0, 0
	068 JumpIfEqual {75}
	069 Move X8, [X20]
	070 Move X0, X21
	071 Move X1, [X8+64]
	072 Call 0x1C17E00
	073 Compare X0, 0
	074 JumpIfEqual {161}
	075 Move W8, [X20+24]
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Move [X20+40], X21
	078 Move X21, 0x9C0000
	079 Move X0, [X19]
	080 Move X21, [X21+2424]
	081 Compare X0, 0
	082 JumpIfEqual {89}
	083 Move X1, X31
	084 Call InputActionState.get_actionStates, X0
	085 NotImplemented "Instruction LDRSW not yet implemented."
	086 Move W9, 48
	087 NotImplemented "Instruction MADD not yet implemented."
	088 Move V0, [X8+8]
	089 Move D0, X31
	090 Move X0, [X21]
	091 Add X1, X31, 0
	092 Move [X31], D0
	093 Call 0x1C17E04
	094 Move X21, X0
	095 Compare X0, 0
	096 JumpIfEqual {103}
	097 Move X8, [X20]
	098 Move X0, X21
	099 Move X1, [X8+64]
	100 Call 0x1C17E00
	101 Compare X0, 0
	102 JumpIfEqual {161}
	103 Move W8, [X20+24]
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Move X0, X19
	106 Move [X20+48], X21
	107 Call CallbackContext.get_control, X0
	108 Move X21, X0
	109 Compare X0, 0
	110 JumpIfEqual {117}
	111 Move X8, [X20]
	112 Move X0, X21
	113 Move X1, [X8+64]
	114 Call 0x1C17E00
	115 Compare X0, 0
	116 JumpIfEqual {161}
	117 Move W8, [X20+24]
	118 NotImplemented "Instruction CMP not yet implemented."
	119 Move X0, X19
	120 Move [X20+56], X21
	121 Call CallbackContext.ReadValueAsObject, X0
	122 Move X21, X0
	123 Compare X0, 0
	124 JumpIfEqual {131}
	125 Move X8, [X20]
	126 Move X0, X21
	127 Move X1, [X8+64]
	128 Call 0x1C17E00
	129 Compare X0, 0
	130 JumpIfEqual {161}
	131 Move W8, [X20+24]
	132 NotImplemented "Instruction CMP not yet implemented."
	133 Move X0, X19
	134 Move [X20+64], X21
	135 Call CallbackContext.get_interaction, X0
	136 Move X19, X0
	137 Compare X0, 0
	138 JumpIfEqual {145}
	139 Move X8, [X20]
	140 Move X0, X19
	141 Move X1, [X8+64]
	142 Call 0x1C17E00
	143 Compare X0, 0
	144 JumpIfEqual {161}
	145 Move W8, [X20+24]
	146 NotImplemented "Instruction CMP not yet implemented."
	147 Move X8, 0xA0F000
	148 Move X8, [X8+8]
	149 Move [X20+72], X19
	150 Move X1, X20
	151 Move X2, X31
	152 Move X0, [X8]
	153 Call String.Format, X0, X1
	154 Move X20, [X31+32]
	155 Move X19, [X31+40]
	156 Move X30, [X31+16]
	157 Move X21, [X31+24]
	158 Add X31, X31, 48
	159 Return X0
	160 Call 0x1C17F28
	161 Call 0x1C17F44
	162 Move X1, X31
	163 Call 0x1C17DEC
	164 Call 0x1C17F20

