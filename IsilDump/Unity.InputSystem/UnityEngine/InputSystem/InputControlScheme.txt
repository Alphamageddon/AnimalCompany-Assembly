Type: UnityEngine.InputSystem.InputControlScheme

Method: System.String get_name()

Disassembly:
	0x0376C1FC ADRP X8, 0x9DA000
	0x0376C200 LDR X8, [X8 + 0x728]

ISIL:
	001 Move X0, [X0]
	002 Return X0

Method: System.String get_bindingGroup()

Disassembly:
	0x0376C204 MOV W1, W22
	0x0376C208 LDR X0, [X8]

ISIL:
	001 Move X0, [X0+8]
	002 Return X0

Method: System.Void set_bindingGroup(System.String value)

Disassembly:
	0x0376C20C BL 0x1C16D6C
	0x0376C210 CMP W22, 0x1

ISIL:
	001 Move [X0+8], X1
	002 Return 

Method: UnityEngine.InputSystem.Utilities.ReadOnlyArray`1<UnityEngine.InputSystem.InputControlScheme/DeviceRequirement> get_deviceRequirements()

Disassembly:
	0x0376C214 MOV X21, X0
	0x0376C218 B.LT 0x376C284
	0x0376C21C MOV X8, X31
	0x0376C220 AND X9, X22, 0x0
	0x0376C224 MOVZ W10, 0x29
	0x0376C228 LDR X11, [X20 + 0x10]
	0x0376C22C CBZ X11, 0x376C2CC
	0x0376C230 LDR W12, [X11 + 0x18]
	0x0376C234 CMP X8, X12
	0x0376C238 B.CS 0x376C2D0
	0x0376C23C CBZ X21, 0x376C2CC
	0x0376C240 LDR W12, [X21 + 0x18]
	0x0376C244 CMP X8, X12
	0x0376C248 B.CS 0x376C2D0
	0x0376C24C ADD X11, X11, X10
	0x0376C250 LDURB W13, [X11 - 0x1]
	0x0376C254 LDRB W14, [X11]
	0x0376C258 LDUR X11, [X11 - 0x9]
	0x0376C25C ADD X8, X8, 0x1
	0x0376C260 ADD X12, X21, X10
	0x0376C264 CMP X9, X8
	0x0376C268 ORR X13, X13, X14, 0x1
	0x0376C26C ADD X10, X10, 0x10
	0x0376C270 STUR X11, [X12 - 0x9]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xC75000
	007 Move X20, 0x9DB000
	008 Move W8, [X21+3752]
	009 Move X20, [X20+1840]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x9DB000
	016 Move X0, [X0+1840]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+3752], W8
	020 Move X1, [X19+16]
	021 Move X2, [X20]
	022 Add X0, X31, 0
	023 Move [X31], X31
	024 Move [X31+8], X31
	025 Call ReadOnlyArray`1<DeviceRequirement>..ctor, X0, X1
	026 Move X0, [X31]
	027 Move X1, [X31+8]
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X30, [X31+16]
	031 Move X21, [X31+24]
	032 Add X31, X31, 48
	033 Return X0

Method: System.Void .ctor(System.String name, System.Collections.Generic.IEnumerable`1<UnityEngine.InputSystem.InputControlScheme/DeviceRequirement> devices = null, System.String bindingGroup = null)

Disassembly:
	0x0376C274 STUR X13, [X12 - 0x1]
	0x0376C278 B.NE 0x376C228
	0x0376C27C B 0x376C284
	0x0376C280 MOV X21, X31
	0x0376C284 LDR X0, [X20]
	0x0376C288 MOV X1, X31
	0x0376C28C BL 0x32277A8
	0x0376C290 MOV X22, X31
	0x0376C294 TBNZ X0, 0x0, 0x376C29C
	0x0376C298 LDR X22, [X20]
	0x0376C29C LDR X0, [X20 + 0x8]
	0x0376C2A0 MOV X1, X31
	0x0376C2A4 BL 0x32277A8
	0x0376C2A8 MOV X8, X31
	0x0376C2AC TBNZ X0, 0x0, 0x376C2B4
	0x0376C2B0 LDR X8, [X20 + 0x8]
	0x0376C2B4 STP X22, X8, [X19]
	0x0376C2B8 STR X21, [X19 + 0x10]
	0x0376C2BC LDP X20, X19, [X31 + 0x20]
	0x0376C2C0 LDP X22, X21, [X31 + 0x10]
	0x0376C2C4 LDR X30, [X31], #0x30
	0x0376C2C8 RET
	0x0376C2CC BL 0x1C16F20
	0x0376C2D0 BL 0x1C16F28
	0x0376C2D4 LDRB W8, [X0 + 0x8]
	0x0376C2D8 LDRB W9, [X0 + 0x9]
	0x0376C2DC LDR X0, [X0]
	0x0376C2E0 ORR X1, X8, X9, 0x1
	0x0376C2E4 RET
	0x0376C2E8 STP X30, X21, [X31 - 0x20]!
	0x0376C2EC STP X20, X19, [X31 + 0x10]
	0x0376C2F0 ADRP X21, 0xC74000
	0x0376C2F4 LDRB W9, [X21 + 0xEBA]
	0x0376C2F8 MOV X19, X0
	0x0376C2FC MOV X20, X8
	0x0376C300 TBNZ X9, 0x0, 0x376C318
	0x0376C304 ADRP X0, 0x9DA000
	0x0376C308 LDR X0, [X0 + 0x7B8]
	0x0376C30C BL 0x1C16CF4
	0x0376C310 MOVZ W8, 0x1
	0x0376C314 STRB W8, [X21 + 0xEBA]
	0x0376C318 LDR X8, [X19 + 0x10]
	0x0376C31C CBZ X8, 0x376C3A4
	0x0376C320 LDR X21, [X8 + 0x18]
	0x0376C324 CBZ X21, 0x376C3A4
	0x0376C328 ADRP X8, 0x9DA000
	0x0376C32C LDR X8, [X8 + 0x7B8]
	0x0376C330 MOV W1, W21
	0x0376C334 LDR X0, [X8]
	0x0376C338 BL 0x1C16D6C
	0x0376C33C CMP W21, 0x1
	0x0376C340 B.LT 0x376C3A8
	0x0376C344 MOV X8, X31
	0x0376C348 AND X9, X21, 0x0
	0x0376C34C MOVZ W10, 0x20
	0x0376C350 LDR X11, [X19 + 0x10]
	0x0376C354 CBZ X11, 0x376C3C0
	0x0376C358 LDR W12, [X11 + 0x18]
	0x0376C35C CMP X8, X12
	0x0376C360 B.CS 0x376C3C4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0xC75000
	008 Move W8, [X23+3753]
	009 Move X21, X3
	010 Move X20, X2
	011 Move X22, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x9DB000
	018 Move X0, [X0+1848]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X23+3753], W8
	022 Move X0, X22
	023 Move X1, X31
	024 Move [X19], X31
	025 Move [X19+8], X31
	026 Move [X19+16], X31
	027 Call String.IsNullOrEmpty, X0
	028 Move TEMP, X0
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {58}
	032 Move X0, X19
	033 Move X1, X22
	034 Move X2, X21
	035 Call InputControlScheme.SetNameAndBindingGroup, X0, X1, X2
	036 Move [X19+16], X31
	037 Compare X20, 0
	038 JumpIfEqual {51}
	039 Move X8, 0x9DB000
	040 Move X8, [X8+1848]
	041 Move X0, X20
	042 Move X1, [X8]
	043 Call Enumerable.ToArray, X0
	044 Move [X19+16], X0
	045 Compare X0, 0
	046 JumpIfEqual {76}
	047 Move X8, [X0+24]
	048 Compare X8, 0
	049 JumpIfNotEqual {51}
	050 Move [X19+16], X31
	051 Move X20, [X31+32]
	052 Move X19, [X31+40]
	053 Move X22, [X31+16]
	054 Move X21, [X31+24]
	055 Move X30, [X31+48]
	056 Move X23, [X31+56]
	057 Return 
	058 Move X0, 0x98D000
	059 Move X0, [X0+1320]
	060 Call 0x1C17D08
	061 Call 0x1C17F10
	062 Move X19, X0
	063 Move X0, 0x990000
	064 Move X0, [X0+1416]
	065 Call 0x1C17D08
	066 Move X1, X0
	067 Move X0, X19
	068 Move X2, X31
	069 Call ArgumentNullException..ctor, X0, X1
	070 Move X0, 0x9DB000
	071 Move X0, [X0+1856]
	072 Call 0x1C17D08
	073 Move X1, X0
	074 Move X0, X19
	075 Call 0x1C17DEC
	076 Call 0x1C17F20

Method: System.Void SetNameAndBindingGroup(System.String name, System.String bindingGroup = null)

Disassembly:
	0x0376C364 CBZ X0, 0x376C3C0
	0x0376C368 LDR W12, [X0 + 0x18]
	0x0376C36C CMP X8, X12
	0x0376C370 B.CS 0x376C3C4
	0x0376C374 ADD X11, X11, X10
	0x0376C378 LDP X12, X11, [X11]
	0x0376C37C ADD X8, X8, 0x1
	0x0376C380 ADD X13, X0, X10
	0x0376C384 CMP X9, X8
	0x0376C388 UBFM W14, W11, 0x19, 0x18
	0x0376C38C AND X14, X14, 0x1FF
	0x0376C390 BFM X14, X11, 0x0, 0x0
	0x0376C394 ADD X10, X10, 0x10
	0x0376C398 STP X12, X14, [X13]
	0x0376C39C B.NE 0x376C350
	0x0376C3A0 B 0x376C3A8
	0x0376C3A4 MOV X0, X31
	0x0376C3A8 LDR V0, [X19]
	0x0376C3AC STR X0, [X20 + 0x10]
	0x0376C3B0 STR V0, [X20]
	0x0376C3B4 LDP X20, X19, [X31 + 0x10]
	0x0376C3B8 LDP X30, X21, [X31], #0x20
	0x0376C3BC RET
	0x0376C3C0 BL 0x1C16F20
	0x0376C3C4 BL 0x1C16F28
	0x0376C3C8 UBFM W8, W1, 0x19, 0x18
	0x0376C3CC AND X8, X8, 0x1FF
	0x0376C3D0 BFM X8, X1, 0x0, 0x0
	0x0376C3D4 MOV X1, X8
	0x0376C3D8 RET
	0x0376C3DC SUB X31, X31, 0x90
	0x0376C3E0 STR X30, [X31 + 0x50]
	0x0376C3E4 STP X24, X23, [X31 + 0x60]
	0x0376C3E8 STP X22, X21, [X31 + 0x70]
	0x0376C3EC STP X20, X19, [X31 + 0x80]
	0x0376C3F0 ADRP X20, 0xC74000
	0x0376C3F4 LDRB W8, [X20 + 0xEBB]
	0x0376C3F8 MOV X19, X0
	0x0376C3FC TBNZ X8, 0x0, 0x376C414
	0x0376C400 ADRP X0, 0x9D9000
	0x0376C404 LDR X0, [X0 + 0x800]
	0x0376C408 BL 0x1C16CF4
	0x0376C40C MOVZ W8, 0x1
	0x0376C410 STRB W8, [X20 + 0xEBB]
	0x0376C414 CBZ X19, 0x376C4BC
	0x0376C418 LDR X21, [X19 + 0x18]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xC75000
	007 Move W8, [X22+3754]
	008 Move X21, X2
	009 Move X20, X1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x991000
	016 Move X0, [X0+2120]
	017 Call 0x1C17CF4
	018 Move X0, 0x988000
	019 Move X0, [X0+2440]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+3754], W8
	023 Move X0, X21
	024 Move X1, X31
	025 Move [X19], X20
	026 Call String.IsNullOrEmpty, X0
	027 Move TEMP, X0
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfNotEqual {52}
	031 Compare X20, 0
	032 JumpIfEqual {59}
	033 Move W1, 59
	034 Move X0, X20
	035 Move X2, X31
	036 Call String.Contains, X0, X1
	037 Move TEMP, X0
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfNotEqual {51}
	041 Move X8, 0x991000
	042 Move X9, 0x988000
	043 Move X8, [X8+2120]
	044 Move X9, [X9+2440]
	045 Move X0, X20
	046 Move X3, X31
	047 Move X1, [X8]
	048 Move X2, [X9]
	049 Call String.Replace, X0, X1, X2
	050 Move X21, X0
	051 Move X21, X20
	052 Move [X19+8], X21
	053 Move X20, [X31+32]
	054 Move X19, [X31+40]
	055 Move X22, [X31+16]
	056 Move X21, [X31+24]
	057 Move X30, [X31+48]
	058 Return 
	059 Call 0x1C17F20

Method: System.Nullable`1<UnityEngine.InputSystem.InputControlScheme> FindControlSchemeForDevices(TDevices devices, TSchemes schemes, UnityEngine.InputSystem.InputDevice mustIncludeDevice = null, System.Boolean allowUnsuccesfulMatch = False)

Disassembly:
	0x02200F30 B 0x2200F44
	0x02200F34 B 0x2200F44
	0x02200F38 B 0x2200F44
	0x02200F3C B 0x2200F44
	0x02200F40 B 0x2200F44
	0x02200F44 MOV X23, X0
	0x02200F48 CMP W1, 0x1
	0x02200F4C B.NE 0x2200F6C
	0x02200F50 MOV X0, X23
	0x02200F54 BL 0x3EB1AD0
	0x02200F58 LDR X22, [X0]
	0x02200F5C BL 0x3EB1AE0
	0x02200F60 MOV W19, W31
	0x02200F64 CBNZ X21, 0x2200E40
	0x02200F68 B 0x2200EA0
	0x02200F6C MOV X22, X31
	0x02200F70 B 0x2200F78
	0x02200F74 MOV X23, X0
	0x02200F78 CBZ X21, 0x2200FDC
	0x02200F7C ADRP X10, 0x1EF3000
	0x02200F80 LDR X8, [X21]
	0x02200F84 LDR X10, [X10 + 0xE00]
	0x02200F88 LDRH W9, [X8 + 0x12E]
	0x02200F8C LDR X1, [X10]
	0x02200F90 CBZ X9, 0x2200FB4
	0x02200F94 LDR X10, [X8 + 0xB0]
	0x02200F98 ADD X10, X10, 0x8
	0x02200F9C LDUR X11, [X10 - 0x8]
	0x02200FA0 CMP X11, X1
	0x02200FA4 B.EQ 0x2200FC4
	0x02200FA8 SUBS X9, X9, 0x1
	0x02200FAC ADD X10, X10, 0x10
	0x02200FB0 B.NE 0x2200F9C
	0x02200FB4 MOV X0, X21
	0x02200FB8 MOV W2, W31
	0x02200FBC BL 0x1C5C788
	0x02200FC0 B 0x2200FD0
	0x02200FC4 LDRSW X9, [X10]
	0x02200FC8 ADD X8, X8, X9, 0x4, LSL
	0x02200FCC ADD X0, X8, 0x138
	0x02200FD0 LDP X8, X1, [X0]
	0x02200FD4 MOV X0, X21
	0x02200FD8 BLR X8
	0x02200FDC CBNZ X22, 0x2200FE8
	0x02200FE0 MOV X0, X23
	0x02200FE4 BL 0x1D2C690
	0x02200FE8 MOV X0, X22
	0x02200FEC BL 0x1C16F18
	0x02200FF0 BL 0x1990590
	0x02200FF4 STP X29, X30, [X31 - 0x60]!
	0x02200FF8 STP X28, X27, [X31 + 0x10]
	0x02200FFC STP X26, X25, [X31 + 0x20]
	0x02201000 STP X24, X23, [X31 + 0x30]
	0x02201004 STP X22, X21, [X31 + 0x40]
	0x02201008 STP X20, X19, [X31 + 0x50]
	0x0220100C SUB X31, X31, 0x260
	0x02201010 STP X1, X2, [X31 + 0x1E0]
	0x02201014 LDR X8, [X7 + 0x38]
	0x02201018 MOV X21, X7
	0x0220101C MOV W22, W6
	0x02201020 MOV X23, X5
	0x02201024 MOV X19, X3
	0x02201028 MOV X24, X0
	0x0220102C STR X4, [X31 + 0x10]
	0x02201030 CBNZ X8, 0x22010BC
	0x02201034 ADRP X0, 0x1EF2000

ISIL:
	001 Subtract X31, X31, 240
	002 Move [X31+176], X30
	003 Move [X31+184], X25
	004 Move [X31+192], X24
	005 Move [X31+200], X23
	006 Move [X31+208], X22
	007 Move [X31+216], X21
	008 Move [X31+224], X20
	009 Move [X31+232], X19
	010 Move X9, [X5+56]
	011 Move W23, W4
	012 Move X20, X3
	013 Move X21, X2
	014 Move X22, X1
	015 Move X24, X0
	016 Move X19, X8
	017 Compare X9, 0
	018 JumpIfNotEqual {29}
	019 Move X0, 0x1F1C000
	020 Move X0, [X0+3560]
	021 Move X25, X5
	022 Call 0x1C17CF4
	023 Move X9, [X25+56]
	024 Compare X9, 0
	025 JumpIfNotEqual {29}
	026 Move X0, X25
	027 Call 0x1C5D6E0
	028 Move X9, [X25+56]
	029 NotImplemented "Instruction MOVI not yet implemented."
	030 Move [X31+120], X31
	031 Move [X31+128], X31
	032 Move [X31+136], X31
	033 Move [X31+80], V2
	034 Move [X31+88], V2
	035 Move [X31+48], V2
	036 Move [X31+56], V2
	037 Move V1, [X24]
	038 Move V0, [X24+16]
	039 And W6, W23, 1
	040 Add X0, X31, 144
	041 Add X3, X31, 120
	042 Move [X31+16], V0
	043 Move [X31+24], V2
	044 Move [X31], V1
	045 Move V0, [X31]
	046 Move V1, [X31+16]
	047 Move X7, [X9+16]
	048 Add X4, X31, 32
	049 Move X1, X22
	050 Move X2, X21
	051 Move X5, X20
	052 Move [X31+144], V0
	053 Move [X31+152], V1
	054 Call 0x2201524, X0, X1, X2, X3, X4, X5
	055 Move TEMP, X0
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfNotEqual {75}
	059 Add X0, X31, 32
	060 Move X1, X31
	061 Call MatchResult.Dispose, X0
	062 Move X8, 0x1F1C000
	063 Move X8, [X8+3560]
	064 NotImplemented "Instruction LDUR not yet implemented."
	065 Move X9, [X31+136]
	066 NotImplemented "Instruction MOVI not yet implemented."
	067 Move X2, [X8]
	068 Add X1, X31, 144
	069 Move X0, X19
	070 Move [X19], V1
	071 Move [X19+8], V1
	072 Move [X31+9], V0
	073 Move [X31+160], X9
	074 Call Nullable`1<InputControlScheme>..ctor, X0, X1
	075 NotImplemented "Instruction MOVI not yet implemented."
	076 Move [X19], V0
	077 Move [X19+8], V0
	078 Move X20, [X31+224]
	079 Move X19, [X31+232]
	080 Move X22, [X31+208]
	081 Move X21, [X31+216]
	082 Move X24, [X31+192]
	083 Move X23, [X31+200]
	084 Move X30, [X31+176]
	085 Move X25, [X31+184]
	086 Add X31, X31, 240
	087 Return X0

Method: System.Boolean FindControlSchemeForDevices(TDevices devices, TSchemes schemes, out UnityEngine.InputSystem.InputControlScheme controlScheme, out UnityEngine.InputSystem.InputControlScheme/MatchResult matchResult, UnityEngine.InputSystem.InputDevice mustIncludeDevice = null, System.Boolean allowUnsuccessfulMatch = False)

Disassembly:
	0x02201524 LDRH W9, [X8 + 0x12E]
	0x02201528 LDR X1, [X10]
	0x0220152C CBZ X9, 0x2201550
	0x02201530 LDR X10, [X8 + 0xB0]
	0x02201534 ADD X10, X10, 0x8
	0x02201538 LDUR X11, [X10 - 0x8]
	0x0220153C CMP X11, X1
	0x02201540 B.EQ 0x2201560
	0x02201544 SUBS X9, X9, 0x1
	0x02201548 ADD X10, X10, 0x10
	0x0220154C B.NE 0x2201538
	0x02201550 MOV X0, X21
	0x02201554 MOV W2, W31
	0x02201558 BL 0x1C5C788
	0x0220155C B 0x220156C
	0x02201560 LDRSW X9, [X10]
	0x02201564 ADD X8, X8, X9, 0x4, LSL
	0x02201568 ADD X0, X8, 0x138
	0x0220156C LDP X8, X1, [X0]
	0x02201570 MOV X0, X21
	0x02201574 BLR X8
	0x02201578 CBNZ X22, 0x2201584
	0x0220157C MOV X0, X23
	0x02201580 BL 0x1D2C690
	0x02201584 MOV X0, X22
	0x02201588 BL 0x1C16F18
	0x0220158C BL 0x1990590
	0x02201590 STP X29, X30, [X31 - 0x60]!
	0x02201594 STP X28, X27, [X31 + 0x10]
	0x02201598 STP X26, X25, [X31 + 0x20]
	0x0220159C STP X24, X23, [X31 + 0x30]
	0x022015A0 STP X22, X21, [X31 + 0x40]
	0x022015A4 STP X20, X19, [X31 + 0x50]
	0x022015A8 ADD X29, X31, 0x0
	0x022015AC SUB X31, X31, 0x280
	0x022015B0 ADD X19, X31, 0x0
	0x022015B4 STR W5, [X19 + 0x2C]
	0x022015B8 MRS X20, 0xC000
	0x022015BC LDR X8, [X20 + 0x28]
	0x022015C0 MOV X22, X6
	0x022015C4 MOV X25, X4
	0x022015C8 MOV X21, X3
	0x022015CC STUR X8, [X29 - 0x10]
	0x022015D0 STP X1, X0, [X29 - 0x90]
	0x022015D4 LDR X24, [X6 + 0x38]
	0x022015D8 MOV X26, X0
	0x022015DC STR X2, [X19 + 0x8]
	0x022015E0 CBNZ X24, 0x2201670
	0x022015E4 ADRP X0, 0x1EF2000
	0x022015E8 LDR X0, [X0 + 0xE00]
	0x022015EC BL 0x1C16CF4
	0x022015F0 ADRP X0, 0x1F1A000
	0x022015F4 LDR X0, [X0 + 0xDF8]
	0x022015F8 BL 0x1C16CF4
	0x022015FC ADRP X0, 0x1EF2000
	0x02201600 LDR X0, [X0 + 0xE18]
	0x02201604 BL 0x1C16CF4
	0x02201608 ADRP X0, 0x1F1A000
	0x0220160C LDR X0, [X0 + 0xE00]
	0x02201610 BL 0x1C16CF4
	0x02201614 ADRP X0, 0x1F1A000
	0x02201618 LDR X0, [X0 + 0xE08]
	0x0220161C BL 0x1C16CF4
	0x02201620 ADRP X0, 0x1F1A000
	0x02201624 LDR X0, [X0 + 0xE10]
	0x02201628 BL 0x1C16CF4
	0x0220162C ADRP X0, 0x1F1A000
	0x02201630 LDR X0, [X0 + 0xDE8]
	0x02201634 BL 0x1C16CF4
	0x02201638 ADRP X0, 0x1F1A000
	0x0220163C LDR X0, [X0 + 0xE18]
	0x02201640 BL 0x1C16CF4
	0x02201644 ADRP X0, 0x1F1A000
	0x02201648 LDR X0, [X0 + 0xE20]
	0x0220164C BL 0x1C16CF4
	0x02201650 ADRP X0, 0x1F1A000
	0x02201654 LDR X0, [X0 + 0xE28]
	0x02201658 BL 0x1C16CF4
	0x0220165C LDR X24, [X22 + 0x38]
	0x02201660 CBNZ X24, 0x2201670
	0x02201664 MOV X0, X22
	0x02201668 BL 0x1C5C6E0
	0x0220166C LDR X24, [X22 + 0x38]
	0x02201670 LDP X8, X0, [X24]
	0x02201674 STP X21, X20, [X19 + 0x10]
	0x02201678 LDR W27, [X8 + 0xFC]
	0x0220167C LDRB W8, [X0 + 0x135]
	0x02201680 LDR W23, [X0 + 0xFC]
	0x02201684 TBNZ X8, 0x0, 0x2201698
	0x02201688 BL 0x1C5C684
	0x0220168C LDR W8, [X0 + 0xFC]
	0x02201690 LDR X24, [X22 + 0x38]
	0x02201694 B 0x220169C
	0x02201698 MOV W8, W23
	0x0220169C ADD W8, W8, 0x10
	0x022016A0 ADD X8, X8, 0xF
	0x022016A4 ADD X9, X31, 0x0
	0x022016A8 AND X8, X8, 0x1FFFFFFFF
	0x022016AC SUB X20, X9, X8
	0x022016B0 ADD X31, X20, 0x0
	0x022016B4 ADD X9, X27, 0xF
	0x022016B8 ADD X8, X31, 0x0
	0x022016BC AND X9, X9, 0x1FFFFFFFF
	0x022016C0 SUB X28, X8, X9
	0x022016C4 ADD X31, X28, 0x0
	0x022016C8 ADD X9, X23, 0xF
	0x022016CC ADD X8, X31, 0x0
	0x022016D0 AND X9, X9, 0x1FFFFFFFF
	0x022016D4 SUB X21, X8, X9
	0x022016D8 ADD X31, X21, 0x0
	0x022016DC MOVI V0.2D, 0x0
	0x022016E0 STUR X31, [X29 - 0xA0]
	0x022016E4 STP X31, X31, [X19 + 0x150]
	0x022016E8 STR X31, [X19 + 0x160]
	0x022016EC STP V0, V0, [X29 - 0xC0]
	0x022016F0 STP V0, V0, [X29 - 0xE0]
	0x022016F4 STUR V0, [X29 - 0xF0]
	0x022016F8 STP V0, V0, [X19 + 0x130]
	0x022016FC STP V0, V0, [X19 + 0x110]
	0x02201700 STP V0, V0, [X19 + 0xF0]
	0x02201704 STP V0, V0, [X19 + 0xD0]
	0x02201708 STP V0, V0, [X19 + 0xB0]
	0x0220170C STP V0, V0, [X19 + 0x90]
	0x02201710 LDR X8, [X24]
	0x02201714 MOV X0, X28
	0x02201718 MOV X2, X27
	0x0220171C LDR W8, [X8 + 0x28]
	0x02201720 CMP W8, 0x0
	0x02201724 SUB X8, X29, 0x88
	0x02201728 CSEL X1, X26, X8, LT
	0x0220172C BL 0x3EB1AC0
	0x02201730 LDR X0, [X24]
	0x02201734 MOV X1, X28
	0x02201738 BL 0x1C16ED4
	0x0220173C TBZ X0, 0x0, 0x2201B9C
	0x02201740 LDR X24, [X22 + 0x38]
	0x02201744 LDUR X9, [X29 - 0x90]
	0x02201748 MOV X0, X21
	0x0220174C MOV X2, X23
	0x02201750 LDR X8, [X24 + 0x8]
	0x02201754 LDR W8, [X8 + 0x28]
	0x02201758 CMP W8, 0x0
	0x0220175C SUB X8, X29, 0x90
	0x02201760 CSEL X1, X9, X8, LT
	0x02201764 BL 0x3EB1AC0
	0x02201768 LDR X0, [X24 + 0x8]
	0x0220176C MOV X1, X21
	0x02201770 BL 0x1C16ED4
	0x02201774 TBZ X0, 0x0, 0x2201BBC
	0x02201778 MOVI V0.2D, 0x0
	0x0220177C STUR X31, [X29 - 0xA0]
	0x02201780 STP V0, V0, [X29 - 0xC0]
	0x02201784 STP V0, V0, [X29 - 0xE0]
	0x02201788 STUR V0, [X29 - 0xF0]
	0x0220178C STP V0, V0, [X19 + 0x170]
	0x02201790 LDR X9, [X22 + 0x38]
	0x02201794 LDR X8, [X9 + 0x8]
	0x02201798 LDRB W10, [X8 + 0x135]
	0x0220179C TBNZ X10, 0x0, 0x22017B4
	0x022017A0 MOV X0, X8
	0x022017A4 BL 0x1C5C684
	0x022017A8 LDR X9, [X22 + 0x38]
	0x022017AC LDR X8, [X9 + 0x8]
	0x022017B0 B 0x22017B8
	0x022017B4 MOV X0, X8
	0x022017B8 LDR W8, [X8 + 0x28]
	0x022017BC LDUR X10, [X29 - 0x90]
	0x022017C0 LDR X1, [X9 + 0x10]
	0x022017C4 ADD X5, X19, 0x30
	0x022017C8 CMP W8, 0x0
	0x022017CC SUB X8, X29, 0x90
	0x022017D0 CSEL X3, X10, X8, LT
	0x022017D4 MOV X2, X20
	0x022017D8 MOV X4, X31
	0x022017DC BL 0x1C17728
	0x022017E0 LDR X23, [X19 + 0x30]
	0x022017E4 CBZ X23, 0x2201BF8
	0x022017E8 ADRP X20, 0x1EF2000
	0x022017EC LDR X20, [X20 + 0xE18]
	0x022017F0 SUB X8, X29, 0xF0
	0x022017F4 SUB X24, X29, 0x88
	0x022017F8 ORR X8, X8, 0xF
	0x022017FC STR X8, [X19 + 0x20]
	0x02201800 LDR X8, [X23]
	0x02201804 LDR X1, [X20]
	0x02201808 LDRH W9, [X8 + 0x12E]
	0x0220180C CBZ X9, 0x2201830
	0x02201810 LDR X10, [X8 + 0xB0]
	0x02201814 ADD X10, X10, 0x8
	0x02201818 LDUR X11, [X10 - 0x8]
	0x0220181C CMP X11, X1
	0x02201820 B.EQ 0x2201840
	0x02201824 SUBS X9, X9, 0x1
	0x02201828 ADD X10, X10, 0x10
	0x0220182C B.NE 0x2201818
	0x02201830 MOV X0, X23
	0x02201834 MOV W2, W31
	0x02201838 BL 0x1C5C788
	0x0220183C B 0x220184C
	0x02201840 LDRSW X9, [X10]
	0x02201844 ADD X8, X8, X9, 0x4, LSL
	0x02201848 ADD X0, X8, 0x138
	0x0220184C LDP X8, X1, [X0]
	0x02201850 MOV X0, X23
	0x02201854 BLR X8
	0x02201858 TBZ X0, 0x0, 0x2201AB0
	0x0220185C LDR X8, [X23]
	0x02201860 ADRP X10, 0x1F1A000
	0x02201864 LDRH W9, [X8 + 0x12E]
	0x02201868 LDR X10, [X10 + 0xDF8]
	0x0220186C LDR X1, [X10]
	0x02201870 CBZ X9, 0x2201894
	0x02201874 LDR X10, [X8 + 0xB0]
	0x02201878 ADD X10, X10, 0x8
	0x0220187C LDUR X11, [X10 - 0x8]
	0x02201880 CMP X11, X1
	0x02201884 B.EQ 0x22018A4
	0x02201888 SUBS X9, X9, 0x1
	0x0220188C ADD X10, X10, 0x10
	0x02201890 B.NE 0x220187C
	0x02201894 MOV X0, X23
	0x02201898 MOV W2, W31
	0x0220189C BL 0x1C5C788
	0x022018A0 B 0x22018B0
	0x022018A4 LDRSW X9, [X10]
	0x022018A8 ADD X8, X8, X9, 0x4, LSL
	0x022018AC ADD X0, X8, 0x138
	0x022018B0 LDP X9, X1, [X0]
	0x022018B4 ADD X8, X19, 0x30
	0x022018B8 MOV X0, X23
	0x022018BC BLR X9
	0x022018C0 LDR V0, [X19 + 0x3]
	0x022018C4 LDR X8, [X19 + 0x40]
	0x022018C8 MOV X0, X28
	0x022018CC MOV X2, X27
	0x022018D0 STR V0, [X19 + 0x15]
	0x022018D4 STR X8, [X19 + 0x160]
	0x022018D8 LDR X21, [X22 + 0x38]
	0x022018DC LDR X8, [X21]
	0x022018E0 LDR W8, [X8 + 0x28]
	0x022018E4 CMP W8, 0x0
	0x022018E8 CSEL X1, X26, X24, LT
	0x022018EC BL 0x3EB1AC0
	0x022018F0 LDR X8, [X21]
	0x022018F4 LDR W9, [X8 + 0x28]
	0x022018F8 MOV X8, X28
	0x022018FC TBNZ X9, 0x1F, 0x2201904
	0x02201900 LDR X8, [X28]
	0x02201904 LDR X1, [X21 + 0x18]
	0x02201908 LDR X0, [X1]
	0x0220190C STP X8, X25, [X29 - 0x60]
	0x02201910 LDR X8, [X1 + 0x10]
	0x02201914 ADD X2, X19, 0x150
	0x02201918 SUB X3, X29, 0x60
	0x0220191C ADD X4, X19, 0x30
	0x02201920 BLR X8
	0x02201924 ADD X0, X19, 0x100
	0x02201928 ADD X1, X19, 0x30
	0x0220192C MOVZ W2, 0x50
	0x02201930 BL 0x3EB1AC0
	0x02201934 ADD X0, X19, 0x100
	0x02201938 MOV X1, X31
	0x0220193C BL 0x376B9BC
	0x02201940 TBNZ X0, 0x0, 0x2201958
	0x02201944 LDR V0, [X19 + 0x104]
	0x02201948 FCMP S0, 0x0
	0x0220194C B.LS 0x2201A80
	0x02201950 LDR W8, [X19 + 0x2C]
	0x02201954 TBZ X8, 0x0, 0x2201A80
	0x02201958 CBZ X25, 0x2201990
	0x0220195C ADD X8, X19, 0x30
	0x02201960 ADD X0, X19, 0x100
	0x02201964 MOV X1, X31
	0x02201968 BL 0x376B9EC
	0x0220196C ADRP X8, 0x1F1A000
	0x02201970 LDP V0, V1, [X19 + 0x30]
	0x02201974 LDR X8, [X8 + 0xE00]
	0x02201978 STP V0, V1, [X19 + 0xE0]
	0x0220197C LDR X2, [X8]
	0x02201980 ADD X0, X19, 0xE0
	0x02201984 MOV X1, X25
	0x02201988 BL 0x2DFB648
	0x0220198C TBZ X0, 0x0, 0x2201A90
	0x02201990 LDURB W8, [X29 - 0xF0]
	0x02201994 CBZ W8, 0x22019F4
	0x02201998 ADRP X8, 0x1F1A000
	0x0220199C LDR X8, [X8 + 0xE28]
	0x022019A0 LDR X1, [X8]
	0x022019A4 ADD X8, X19, 0x30
	0x022019A8 SUB X0, X29, 0xF0
	0x022019AC BL 0x243E768
	0x022019B0 ADD X0, X19, 0x90
	0x022019B4 ADD X1, X19, 0x30
	0x022019B8 MOVZ W2, 0x50
	0x022019BC BL 0x3EB1AC0
	0x022019C0 LDR V0, [X19 + 0x94]
	0x022019C4 LDR V1, [X19 + 0x104]
	0x022019C8 FCMP S0, S1
	0x022019CC B.GE 0x2201AA0
	0x022019D0 LDURB W8, [X29 - 0xF0]
	0x022019D4 CBZ W8, 0x22019F4
	0x022019D8 LDR X1, [X19 + 0x20]
	0x022019DC ADD X0, X19, 0x90
	0x022019E0 MOVZ W2, 0x50
	0x022019E4 BL 0x3EB1AC0
	0x022019E8 ADD X0, X19, 0x90
	0x022019EC MOV X1, X31
	0x022019F0 BL 0x376BC1C
	0x022019F4 MOVI V0.2D, 0x0
	0x022019F8 STR X31, [X19 + 0x80]
	0x022019FC STR V0, [X19 + 0x7]
	0x02201A00 ADRP X8, 0x1F1A000
	0x02201A04 LDR X8, [X8 + 0xE18]
	0x02201A08 SUB X0, X29, 0x60
	0x02201A0C ADD X1, X19, 0x100
	0x02201A10 MOVZ W2, 0x50
	0x02201A14 LDR X21, [X8]
	0x02201A18 STP V0, V0, [X19 + 0x50]
	0x02201A1C STP V0, V0, [X19 + 0x30]
	0x02201A20 BL 0x3EB1AC0
	0x02201A24 ADD X0, X19, 0x30
	0x02201A28 SUB X1, X29, 0x60
	0x02201A2C MOV X2, X21
	0x02201A30 BL 0x243E73C
	0x02201A34 SUB X0, X29, 0xF0
	0x02201A38 ADD X1, X19, 0x30
	0x02201A3C MOVZ W2, 0x58
	0x02201A40 BL 0x3EB1AC0
	0x02201A44 ADRP X8, 0x1F1A000
	0x02201A48 LDR X8, [X8 + 0xDE8]
	0x02201A4C LDR V0, [X19 + 0x15]
	0x02201A50 MOVI V1.2D, 0x0
	0x02201A54 STP V1, V1, [X29 - 0x60]
	0x02201A58 LDR X2, [X8]
	0x02201A5C LDR X8, [X19 + 0x160]
	0x02201A60 STUR V0, [X29 - 0x80]
	0x02201A64 STUR X8, [X29 - 0x70]
	0x02201A68 SUB X0, X29, 0x60
	0x02201A6C SUB X1, X29, 0x80
	0x02201A70 BL 0x2432978
	0x02201A74 LDP V0, V1, [X29 - 0x60]
	0x02201A78 STP V0, V1, [X19 + 0x170]
	0x02201A7C B 0x2201800
	0x02201A80 ADD X0, X19, 0x100
	0x02201A84 MOV X1, X31
	0x02201A88 BL 0x376BC1C
	0x02201A8C B 0x2201800

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Subtract X31, X31, 640
	014 Move [X31+512], X1
	015 Move [X31+520], X2
	016 Move X8, [X7+56]
	017 Move X22, X7
	018 Move W23, W6
	019 Move X24, X5
	020 Move X25, X0
	021 Move [X31+8], X4
	022 Move [X31+16], X3
	023 Compare X8, 0
	024 JumpIfNotEqual {61}
	025 Move X0, 0x1EF3000
	026 Move X0, [X0+3584]
	027 Call 0x1C17CF4
	028 Move X0, 0x1F1B000
	029 Move X0, [X0+3576]
	030 Call 0x1C17CF4
	031 Move X0, 0x1EF3000
	032 Move X0, [X0+3608]
	033 Call 0x1C17CF4
	034 Move X0, 0x1F1B000
	035 Move X0, [X0+3584]
	036 Call 0x1C17CF4
	037 Move X0, 0x1F1B000
	038 Move X0, [X0+3592]
	039 Call 0x1C17CF4
	040 Move X0, 0x1F1B000
	041 Move X0, [X0+3600]
	042 Call 0x1C17CF4
	043 Move X0, 0x1F1B000
	044 Move X0, [X0+3560]
	045 Call 0x1C17CF4
	046 Move X0, 0x1F1B000
	047 Move X0, [X0+3608]
	048 Call 0x1C17CF4
	049 Move X0, 0x1F1B000
	050 Move X0, [X0+3616]
	051 Call 0x1C17CF4
	052 Move X0, 0x1F1B000
	053 Move X0, [X0+3624]
	054 Call 0x1C17CF4
	055 Move X8, [X22+56]
	056 Compare X8, 0
	057 JumpIfNotEqual {61}
	058 Move X0, X22
	059 Call 0x1C5D6E0
	060 Move X8, [X22+56]
	061 NotImplemented "Instruction MOVI not yet implemented."
	062 Move [X31+352], X31
	063 Move [X31+360], X31
	064 Move [X31+368], X31
	065 Move [X31+496], X31
	066 Move [X31+320], V0
	067 Move [X31+328], V0
	068 Move [X31+288], V0
	069 Move [X31+296], V0
	070 Move [X31+256], V0
	071 Move [X31+264], V0
	072 Move [X31+224], V0
	073 Move [X31+232], V0
	074 Move [X31+192], V0
	075 Move [X31+200], V0
	076 Move [X31+160], V0
	077 Move [X31+168], V0
	078 Move [X31+464], V0
	079 Move [X31+472], V0
	080 Move [X31+432], V0
	081 Move [X31+440], V0
	082 Move [X31+400], V0
	083 Move [X31+408], V0
	084 Move [X31+24], V0
	085 Move X1, [X8+16]
	086 Add X0, X31, 512
	087 Call ReadOnlyArray`1<InputControlScheme>.System.Collections.Generic.IEnumerable<TValue>.GetEnumerator, X0
	088 Move X21, X0
	089 Compare X0, 0
	090 JumpIfEqual {334}
	091 Add X8, X31, 416
	092 Move X28, 0x1EF3000
	093 Move X29, 0x1F1B000
	094 Move X20, 0x1F1B000
	095 Move X19, 0x1F1B000
	096 Or X8, X8, 15
	097 Move X28, [X28+3608]
	098 Move X29, [X29+3576]
	099 Move X20, [X20+3608]
	100 Move X19, [X19+3560]
	101 Move [X31+24], X8
	102 Move X26, 0x1F1B000
	103 Move X26, [X26+3584]
	104 Move X8, [X21]
	105 Move X1, [X28]
	106 NotImplemented "Instruction LDRH not yet implemented."
	107 Compare X9, 0
	108 JumpIfEqual {115}
	109 Move X10, [X8+176]
	110 Add X10, X10, 8
	111 NotImplemented "Instruction LDUR not yet implemented."
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Subtract X9, X9, 1
	114 Add X10, X10, 16
	115 Move X0, X21
	116 Move W2, W31
	117 Call 0x1C5D788
	118 NotImplemented "Instruction LDRSW not yet implemented."
	119 Add X8, X8, X9
	120 Add X0, X8, 312
	121 Move X8, [X0]
	122 Move X1, [X0+8]
	123 Move X0, X21
	124 NotImplemented "Instruction BLR not yet implemented."
	125 Move TEMP, X0
	126 And TEMP, TEMP, 1
	127 Compare TEMP, 1
	128 JumpIfNotEqual {273}
	129 Move X8, [X21]
	130 Move X1, [X29]
	131 NotImplemented "Instruction LDRH not yet implemented."
	132 Compare X9, 0
	133 JumpIfEqual {140}
	134 Move X10, [X8+176]
	135 Add X10, X10, 8
	136 NotImplemented "Instruction LDUR not yet implemented."
	137 NotImplemented "Instruction CMP not yet implemented."
	138 Subtract X9, X9, 1
	139 Add X10, X10, 16
	140 Move X0, X21
	141 Move W2, W31
	142 Call 0x1C5D788
	143 NotImplemented "Instruction LDRSW not yet implemented."
	144 Add X8, X8, X9
	145 Add X0, X8, 312
	146 Move X9, [X0]
	147 Move X1, [X0+8]
	148 Add X8, X31, 32
	149 Move X0, X21
	150 NotImplemented "Instruction BLR not yet implemented."
	151 Move V0, [X31+2]
	152 Move X8, [X31+48]
	153 Move [X31+22], V0
	154 Move [X31+368], X8
	155 Move V1, [X25]
	156 Move V0, [X25+16]
	157 Move [X31+128], V1
	158 Move [X31+136], V0
	159 Move X8, [X22+56]
	160 Move X3, [X8+24]
	161 Move [X31+560], V1
	162 Move [X31+568], V0
	163 Add X8, X31, 32
	164 Add X0, X31, 352
	165 Add X1, X31, 560
	166 Move X2, X24
	167 Call 0x2202CE4, X0, X1, X2
	168 Add X0, X31, 272
	169 Add X1, X31, 32
	170 Move W2, 80
	171 Call 0x3EB2AC0
	172 Add X0, X31, 272
	173 Move X1, X31
	174 Call MatchResult.get_isSuccessfulMatch, X0
	175 Move TEMP, X0
	176 And TEMP, TEMP, 1
	177 Compare TEMP, 1
	178 JumpIfEqual {185}
	179 Move V0, [X31+276]
	180 NotImplemented "Instruction FCMP not yet implemented."
	181 Move TEMP, X23
	182 And TEMP, TEMP, 1
	183 Compare TEMP, 1
	184 JumpIfNotEqual {264}
	185 Compare X24, 0
	186 JumpIfEqual {203}
	187 Add X8, X31, 32
	188 Add X0, X31, 272
	189 Move X1, X31
	190 Call MatchResult.get_devices, X0
	191 Move V0, [X31+32]
	192 Move V1, [X31+48]
	193 Move X2, [X26]
	194 Move [X31+240], V0
	195 Move [X31+248], V1
	196 Add X0, X31, 240
	197 Move X1, X24
	198 Call 0x2DFC648, X0, X1
	199 Move TEMP, X0
	200 And TEMP, TEMP, 1
	201 Compare TEMP, 1
	202 JumpIfNotEqual {267}
	203 Move W8, [X31+416]
	204 Compare W8, 0
	205 JumpIfEqual {229}
	206 Move X8, 0x1F1B000
	207 Move X8, [X8+3624]
	208 Move X1, [X8]
	209 Add X8, X31, 32
	210 Add X0, X31, 416
	211 Call Nullable`1<MatchResult>.get_Value, X0
	212 Add X0, X31, 160
	213 Add X1, X31, 32
	214 Move W2, 80
	215 Call 0x3EB2AC0
	216 Move V0, [X31+164]
	217 Move V1, [X31+276]
	218 NotImplemented "Instruction FCMP not yet implemented."
	219 Move W8, [X31+416]
	220 Compare W8, 0
	221 JumpIfEqual {229}
	222 Move X1, [X31+24]
	223 Add X0, X31, 160
	224 Move W2, 80
	225 Call 0x3EB2AC0
	226 Add X0, X31, 160
	227 Move X1, X31
	228 Call MatchResult.Dispose, X0
	229 Move X27, [X20]
	230 NotImplemented "Instruction MOVI not yet implemented."
	231 Add X0, X31, 560
	232 Add X1, X31, 272
	233 Move W2, 80
	234 Move [X31+112], X31
	235 Move [X31+80], V0
	236 Move [X31+88], V0
	237 Move [X31+48], V0
	238 Move [X31+56], V0
	239 Move [X31+2], V0
	240 Call 0x3EB2AC0
	241 Add X0, X31, 32
	242 Add X1, X31, 560
	243 Move X2, X27
	244 Call Nullable`1<MatchResult>..ctor, X0, X1
	245 Add X0, X31, 416
	246 Add X1, X31, 32
	247 Move W2, 88
	248 Call 0x3EB2AC0
	249 Move V0, [X31+22]
	250 Move X8, [X31+368]
	251 Move X2, [X19]
	252 NotImplemented "Instruction MOVI not yet implemented."
	253 Move [X31+560], V1
	254 Move [X31+568], V1
	255 Move [X31+33], V0
	256 Move [X31+544], X8
	257 Add X0, X31, 560
	258 Add X1, X31, 528
	259 Call Nullable`1<InputControlScheme>..ctor, X0, X1
	260 Move V0, [X31+560]
	261 Move V1, [X31+576]
	262 Move [X31+384], V0
	263 Move [X31+392], V1
	264 Add X0, X31, 272
	265 Move X1, X31
	266 Call MatchResult.Dispose, X0
	267 Add X0, X31, 272
	268 Move X1, X31
	269 Call MatchResult.Dispose, X0
	270 Add X0, X31, 272
	271 Move X1, X31
	272 Call MatchResult.Dispose, X0
	273 Move X22, X31
	274 Move W19, 11
	275 Compare X21, 0
	276 JumpIfEqual {300}
	277 Move X10, 0x1EF3000
	278 Move X8, [X21]
	279 Move X10, [X10+3584]
	280 NotImplemented "Instruction LDRH not yet implemented."
	281 Move X1, [X10]
	282 Compare X9, 0
	283 JumpIfEqual {290}
	284 Move X10, [X8+176]
	285 Add X10, X10, 8
	286 NotImplemented "Instruction LDUR not yet implemented."
	287 NotImplemented "Instruction CMP not yet implemented."
	288 Subtract X9, X9, 1
	289 Add X10, X10, 16
	290 Move X0, X21
	291 Move W2, W31
	292 Call 0x1C5D788
	293 NotImplemented "Instruction LDRSW not yet implemented."
	294 Add X8, X8, X9
	295 Add X0, X8, 312
	296 Move X8, [X0]
	297 Move X1, [X0+8]
	298 Move X0, X21
	299 NotImplemented "Instruction BLR not yet implemented."
	300 Compare X22, 0
	301 JumpIfNotEqual {335}
	302 NotImplemented "Instruction CMP not yet implemented."
	303 Compare W19, 0
	304 JumpIfNotEqual {319}
	305 Move X0, [X31+8]
	306 Add X8, X31, 416
	307 Or X1, X8, 15
	308 Move W2, 80
	309 Call 0x3EB2AC0
	310 Add X9, X31, 137
	311 Move X8, [X31+408]
	312 NotImplemented "Instruction LDUR not yet implemented."
	313 Move X9, [X31+16]
	314 Move [X9+16], X8
	315 Move [X9], V0
	316 Move W8, [X31+416]
	317 NotImplemented "Instruction CMP not yet implemented."
	318 NotImplemented "Instruction CSET not yet implemented."
	319 And W0, W8, 1
	320 Add X31, X31, 640
	321 Move X20, [X31+80]
	322 Move X19, [X31+88]
	323 Move X22, [X31+64]
	324 Move X21, [X31+72]
	325 Move X24, [X31+48]
	326 Move X23, [X31+56]
	327 Move X26, [X31+32]
	328 Move X25, [X31+40]
	329 Move X28, [X31+16]
	330 Move X27, [X31+24]
	331 Move X29, [X31+96]
	332 Move X30, [X31+104]
	333 Return X0
	334 Call 0x1C17F20
	335 Move X0, X22
	336 Call 0x1C17F18
	337 Move X23, X0
	338 NotImplemented "Instruction CMP not yet implemented."
	339 Move X0, X23
	340 Call 0x3EB2AD0
	341 Move X22, [X0]
	342 Call 0x3EB2AE0
	343 Move W19, W31
	344 Compare X21, 0
	345 JumpIfNotEqual {277}
	346 Move X22, X31
	347 Move X23, X0
	348 Compare X21, 0
	349 JumpIfEqual {373}
	350 Move X10, 0x1EF3000
	351 Move X8, [X21]
	352 Move X10, [X10+3584]
	353 NotImplemented "Instruction LDRH not yet implemented."
	354 Move X1, [X10]
	355 Compare X9, 0
	356 JumpIfEqual {363}
	357 Move X10, [X8+176]
	358 Add X10, X10, 8
	359 NotImplemented "Instruction LDUR not yet implemented."
	360 NotImplemented "Instruction CMP not yet implemented."
	361 Subtract X9, X9, 1
	362 Add X10, X10, 16
	363 Move X0, X21
	364 Move W2, W31
	365 Call 0x1C5D788
	366 NotImplemented "Instruction LDRSW not yet implemented."
	367 Add X8, X8, X9
	368 Add X0, X8, 312
	369 Move X8, [X0]
	370 Move X1, [X0+8]
	371 Move X0, X21
	372 NotImplemented "Instruction BLR not yet implemented."
	373 Compare X22, 0
	374 JumpIfNotEqual {377}
	375 Move X0, X23
	376 Call 0x1D2D690
	377 Move X0, X22
	378 Call 0x1C17F18
	379 Call 0x1991590

Method: System.Nullable`1<UnityEngine.InputSystem.InputControlScheme> FindControlSchemeForDevice(UnityEngine.InputSystem.InputDevice device, TSchemes schemes)

Disassembly:
	0x02200D60 CBZ W8, 0x2200D80
	0x02200D64 LDR X1, [X31 + 0x18]
	0x02200D68 ADD X0, X31, 0x80
	0x02200D6C MOVZ W2, 0x50
	0x02200D70 BL 0x3EB1AC0
	0x02200D74 ADD X0, X31, 0x80
	0x02200D78 MOV X1, X31
	0x02200D7C BL 0x376BC1C
	0x02200D80 MOVI V0.2D, 0x0
	0x02200D84 STR X31, [X31 + 0x70]
	0x02200D88 STR V0, [X31 + 0x6]
	0x02200D8C ADRP X8, 0x1F1B000
	0x02200D90 LDR X8, [X8 + 0xE18]
	0x02200D94 ADD X0, X31, 0x210
	0x02200D98 ADD X1, X31, 0xF0
	0x02200D9C MOVZ W2, 0x50
	0x02200DA0 LDR X28, [X8]
	0x02200DA4 STP V0, V0, [X31 + 0x40]
	0x02200DA8 STP V0, V0, [X31 + 0x20]
	0x02200DAC BL 0x3EB1AC0
	0x02200DB0 ADD X0, X31, 0x20
	0x02200DB4 ADD X1, X31, 0x210
	0x02200DB8 MOV X2, X28
	0x02200DBC BL 0x243E73C
	0x02200DC0 ADD X0, X31, 0x180
	0x02200DC4 ADD X1, X31, 0x20
	0x02200DC8 MOVZ W2, 0x58
	0x02200DCC BL 0x3EB1AC0
	0x02200DD0 LDR V0, [X31 + 0x14]
	0x02200DD4 LDR X8, [X31 + 0x150]
	0x02200DD8 LDR X2, [X27]
	0x02200DDC MOVI V1.2D, 0x0
	0x02200DE0 STP V1, V1, [X31 + 0x210]
	0x02200DE4 STR V0, [X31 + 0x1F]
	0x02200DE8 STR X8, [X31 + 0x200]
	0x02200DEC ADD X0, X31, 0x210
	0x02200DF0 ADD X1, X31, 0x1F0
	0x02200DF4 BL 0x2432978
	0x02200DF8 LDP V0, V1, [X31 + 0x210]
	0x02200DFC STP V0, V1, [X31 + 0x160]
	0x02200E00 B 0x2200BD4
	0x02200E04 ADD X0, X31, 0xF0
	0x02200E08 MOV X1, X31
	0x02200E0C BL 0x376BC1C
	0x02200E10 B 0x2200BD4
	0x02200E14 ADD X0, X31, 0xF0
	0x02200E18 MOV X1, X31
	0x02200E1C BL 0x376BC1C
	0x02200E20 B 0x2200BD4
	0x02200E24 ADD X0, X31, 0xF0
	0x02200E28 MOV X1, X31
	0x02200E2C BL 0x376BC1C
	0x02200E30 B 0x2200BD4
	0x02200E34 MOV X22, X31
	0x02200E38 MOVZ W19, 0xB
	0x02200E3C CBZ X21, 0x2200EA0
	0x02200E40 ADRP X10, 0x1EF3000
	0x02200E44 LDR X8, [X21]
	0x02200E48 LDR X10, [X10 + 0xE00]
	0x02200E4C LDRH W9, [X8 + 0x12E]
	0x02200E50 LDR X1, [X10]
	0x02200E54 CBZ X9, 0x2200E78
	0x02200E58 LDR X10, [X8 + 0xB0]
	0x02200E5C ADD X10, X10, 0x8
	0x02200E60 LDUR X11, [X10 - 0x8]
	0x02200E64 CMP X11, X1
	0x02200E68 B.EQ 0x2200E88
	0x02200E6C SUBS X9, X9, 0x1
	0x02200E70 ADD X10, X10, 0x10
	0x02200E74 B.NE 0x2200E60
	0x02200E78 MOV X0, X21
	0x02200E7C MOV W2, W31
	0x02200E80 BL 0x1C5C788
	0x02200E84 B 0x2200E94
	0x02200E88 LDRSW X9, [X10]
	0x02200E8C ADD X8, X8, X9, 0x4, LSL
	0x02200E90 ADD X0, X8, 0x138
	0x02200E94 LDP X8, X1, [X0]
	0x02200E98 MOV X0, X21
	0x02200E9C BLR X8
	0x02200EA0 CBNZ X22, 0x2200F10
	0x02200EA4 CMP W19, 0xB
	0x02200EA8 B.EQ 0x2200EB0
	0x02200EAC CBNZ W19, 0x2200EE8
	0x02200EB0 LDR X0, [X31 + 0x8]
	0x02200EB4 ADD X8, X31, 0x180
	0x02200EB8 ORR X1, X8, 0xF
	0x02200EBC MOVZ W2, 0x50
	0x02200EC0 BL 0x3EB1AC0
	0x02200EC4 ADD X9, X31, 0x69
	0x02200EC8 LDR X8, [X31 + 0x178]
	0x02200ECC LDUR V0, [X9 + 0xFF]
	0x02200ED0 LDR X9, [X31 + 0x10]
	0x02200ED4 STR X8, [X9 + 0x10]
	0x02200ED8 STR V0, [X9]
	0x02200EDC LDRB W8, [X31 + 0x180]
	0x02200EE0 CMP W8, 0x0
	0x02200EE4 CSET W8, NE
	0x02200EE8 AND W0, W8, 0x1
	0x02200EEC ADD X31, X31, 0x260
	0x02200EF0 LDP X20, X19, [X31 + 0x50]
	0x02200EF4 LDP X22, X21, [X31 + 0x40]
	0x02200EF8 LDP X24, X23, [X31 + 0x30]
	0x02200EFC LDP X26, X25, [X31 + 0x20]
	0x02200F00 LDP X28, X27, [X31 + 0x10]
	0x02200F04 LDP X29, X30, [X31], #0x60
	0x02200F08 RET
	0x02200F0C BL 0x1C16F20
	0x02200F10 MOV X0, X22
	0x02200F14 BL 0x1C16F18
	0x02200F18 B 0x2200F44
	0x02200F1C B 0x2200F44
	0x02200F20 B 0x2200F44
	0x02200F24 B 0x2200F44
	0x02200F28 B 0x2200F44
	0x02200F2C B 0x2200F44

ISIL:
	001 Move [X31-80], X29
	002 Move [X31-72], X30
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Add X29, X31, 0
	012 Subtract X31, X31, 160
	013 NotImplemented "Instruction MRS not yet implemented."
	014 Move X9, [X25+40]
	015 Move X19, X2
	016 Move X21, X1
	017 Move X23, X0
	018 Move [X29-8], X9
	019 Move [X29-56], X1
	020 Move X26, [X2+56]
	021 Move X20, X8
	022 Compare X26, 0
	023 JumpIfNotEqual {33}
	024 Move X0, 0x1F1C000
	025 Move X0, [X0+3544]
	026 Call 0x1C17CF4
	027 Move X26, [X19+56]
	028 Compare X26, 0
	029 JumpIfNotEqual {33}
	030 Move X0, X19
	031 Call 0x1C5D6E0
	032 Move X26, [X19+56]
	033 Move X8, [X26]
	034 Add X9, X31, 0
	035 Move W24, [X8+252]
	036 Add X10, X24, 15
	037 And X10, X10, 0x1FFFFFFFF
	038 Subtract X22, X9, X10
	039 Add X31, X22, 0
	040 Move W8, [X8+40]
	041 Move X0, X22
	042 Move X2, X24
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Subtract X8, X29, 56
	045 NotImplemented "Instruction CSEL not yet implemented."
	046 Call 0x3EB2AC0
	047 Move X0, [X26]
	048 Move X1, X22
	049 Call 0x1C17ED4
	050 Move TEMP, X0
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfNotEqual {118}
	054 Compare X23, 0
	055 JumpIfEqual {125}
	056 Move X8, 0x1F1C000
	057 Move X8, [X8+3544]
	058 NotImplemented "Instruction MOVI not yet implemented."
	059 Subtract X0, X29, 96
	060 Move X1, X23
	061 Move X2, [X8]
	062 Move [X29-96], V0
	063 Move [X29-88], V0
	064 Call 0x249B560, X0, X1
	065 Move X19, [X19+56]
	066 Move X0, X22
	067 Move X2, X24
	068 Move X8, [X19]
	069 Move W8, [X8+40]
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Subtract X8, X29, 56
	072 NotImplemented "Instruction CSEL not yet implemented."
	073 Call 0x3EB2AC0
	074 Move X1, [X19+8]
	075 Move V1, [X29-96]
	076 Move V0, [X29-80]
	077 Move X0, [X1]
	078 Move [X29-160], V1
	079 Move [X29-152], V0
	080 Move X8, [X19]
	081 Move W8, [X8+40]
	082 Move TEMP, X8
	083 And TEMP, TEMP, -2147483648
	084 Compare TEMP, -2147483648
	085 JumpIfEqual {87}
	086 Move X22, [X22]
	087 Subtract X8, X29, 160
	088 Subtract X9, X29, 12
	089 NotImplemented "Instruction STURB not yet implemented."
	090 Move [X29-48], X8
	091 Move [X29-40], X22
	092 Move [X29-32], X31
	093 Move [X29-24], X9
	094 Move X8, [X1+16]
	095 Subtract X3, X29, 48
	096 Subtract X4, X29, 128
	097 Move X2, X31
	098 NotImplemented "Instruction BLR not yet implemented."
	099 Move V1, [X29-128]
	100 Move V0, [X29-112]
	101 Move [X20], V1
	102 Move [X20+8], V0
	103 Move X8, [X25+40]
	104 NotImplemented "Instruction LDUR not yet implemented."
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Add X31, X29, 0
	107 Move X20, [X31+64]
	108 Move X19, [X31+72]
	109 Move X22, [X31+48]
	110 Move X21, [X31+56]
	111 Move X24, [X31+32]
	112 Move X23, [X31+40]
	113 Move X26, [X31+16]
	114 Move X25, [X31+24]
	115 Move X29, [X31+80]
	116 Move X30, [X31+88]
	117 Return X0
	118 Move X0, 0x1EF9000
	119 Move X0, [X0+1320]
	120 Call 0x1C17D08
	121 Call 0x1C17F10
	122 Move X20, X0
	123 Move X0, 0x1F1C000
	124 Move X0, [X0+3552]
	125 Move X0, 0x1EF9000
	126 Move X0, [X0+1320]
	127 Call 0x1C17D08
	128 Call 0x1C17F10
	129 Move X20, X0
	130 Move X0, 0x1F1C000
	131 Move X0, [X0+3360]
	132 Call 0x1C17D08
	133 Move X1, X0
	134 Move X0, X20
	135 Move X2, X31
	136 Call ArgumentNullException..ctor, X0, X1
	137 Move X0, X20
	138 Move X1, X19
	139 Call 0x1C17DEC
	140 Call 0x3EB2B20

Method: System.Boolean SupportsDevice(UnityEngine.InputSystem.InputDevice device)

Disassembly:
	0x0376C41C CBZ X21, 0x376C4BC
	0x0376C420 ADRP X8, 0x9D9000
	0x0376C424 LDR X8, [X8 + 0x800]
	0x0376C428 MOV W1, W21
	0x0376C42C LDR X0, [X8]
	0x0376C430 BL 0x1C16D6C
	0x0376C434 CMP W21, 0x1
	0x0376C438 MOV X20, X0
	0x0376C43C B.LT 0x376C4C0
	0x0376C440 MOV X22, X31
	0x0376C444 AND X21, X21, 0x0
	0x0376C448 ADD X23, X19, 0x20
	0x0376C44C ADD X24, X20, 0x20
	0x0376C450 LDR W8, [X19 + 0x18]
	0x0376C454 CMP X22, X8
	0x0376C458 B.CS 0x376C4DC
	0x0376C45C LDR X8, [X23 + 0x10]
	0x0376C460 LDR V0, [X23]
	0x0376C464 ADD X0, X31, 0x20
	0x0376C468 STR X8, [X31 + 0x30]
	0x0376C46C ADD X8, X31, 0x38
	0x0376C470 STR V0, [X31 + 0x2]
	0x0376C474 BL 0x376C2E8
	0x0376C478 CBZ X20, 0x376C4E0
	0x0376C47C LDUR V0, [X31 + 0x38]
	0x0376C480 LDR X8, [X31 + 0x48]
	0x0376C484 STR V0, [X31]
	0x0376C488 STR X8, [X31 + 0x10]
	0x0376C48C LDR W8, [X20 + 0x18]
	0x0376C490 CMP X22, X8
	0x0376C494 B.CS 0x376C4DC
	0x0376C498 LDR V0, [X31]
	0x0376C49C LDR X8, [X31 + 0x10]
	0x0376C4A0 ADD X22, X22, 0x1
	0x0376C4A4 ADD X23, X23, 0x18
	0x0376C4A8 CMP X21, X22
	0x0376C4AC STR X8, [X24 + 0x10]
	0x0376C4B0 STR V0, [X24], #0x18
	0x0376C4B4 B.NE 0x376C450
	0x0376C4B8 B 0x376C4C0
	0x0376C4BC MOV X20, X31
	0x0376C4C0 MOV X0, X20
	0x0376C4C4 LDP X20, X19, [X31 + 0x80]
	0x0376C4C8 LDP X22, X21, [X31 + 0x70]
	0x0376C4CC LDP X24, X23, [X31 + 0x60]
	0x0376C4D0 LDR X30, [X31 + 0x50]
	0x0376C4D4 ADD X31, X31, 0x90
	0x0376C4D8 RET
	0x0376C4DC BL 0x1C16F28
	0x0376C4E0 BL 0x1C16F20
	0x0376C4E4 SUB X31, X31, 0x70

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Compare X1, 0
	008 JumpIfEqual {42}
	009 Move X8, [X0+16]
	010 Move X20, X0
	011 Compare X8, 0
	012 JumpIfEqual {30}
	013 Move X19, X1
	014 Move X21, X31
	015 Move W22, 32
	016 Move W23, [X8+24]
	017 NotImplemented "Instruction CMP not yet implemented."
	018 NotImplemented "Instruction CMP not yet implemented."
	019 Move X1, [X8]
	020 Move X0, X19
	021 Move W2, W31
	022 Call InputControlPath.TryFindControl, X0, X1, X2
	023 Compare X0, 0
	024 JumpIfNotEqual {31}
	025 Move X8, [X20+16]
	026 Add X21, X21, 1
	027 Add X22, X22, 16
	028 Compare X8, 0
	029 JumpIfNotEqual {16}
	030 Call 0x1C17F20
	031 Move X8, W23
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X20, [X31+32]
	034 Move X19, [X31+40]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 NotImplemented "Instruction CSET not yet implemented."
	038 Move X30, [X31+48]
	039 Move X23, [X31+56]
	040 Return X0
	041 Call 0x1C17F28
	042 Move X0, 0x98D000
	043 Move X0, [X0+1320]
	044 Call 0x1C17D08
	045 Call 0x1C17F10
	046 Move X19, X0
	047 Move X0, 0x9B0000
	048 Move X0, [X0+3360]
	049 Call 0x1C17D08
	050 Move X1, X0
	051 Move X0, X19
	052 Move X2, X31
	053 Call ArgumentNullException..ctor, X0, X1
	054 Move X0, 0x9DB000
	055 Move X0, [X0+1864]
	056 Call 0x1C17D08
	057 Move X1, X0
	058 Move X0, X19
	059 Call 0x1C17DEC

Method: UnityEngine.InputSystem.InputControlScheme/MatchResult PickDevicesFrom(TDevices devices, UnityEngine.InputSystem.InputDevice favorDevice = null)

Disassembly:
	0x02202CE4 LDR X0, [X0 + 0xE58]
	0x02202CE8 BL 0x1C16D08
	0x02202CEC MOV X1, X0
	0x02202CF0 ADD X0, X31, 0xD0
	0x02202CF4 BL 0x199CD54
	0x02202CF8 MOV X0, X19
	0x02202CFC BL 0x1C16F18
	0x02202D00 MOVZ W0, 0x8
	0x02202D04 BL 0x3EB1AF0
	0x02202D08 LDR X8, [X19]
	0x02202D0C STR X8, [X0]
	0x02202D10 ADRP X1, 0x1CB2000
	0x02202D14 ADD X1, X1, 0xE58
	0x02202D18 MOV X2, X31
	0x02202D1C BL 0x3EB1B00
	0x02202D20 MOV X19, X0
	0x02202D24 BL 0x3EB1AE0
	0x02202D28 MOV X0, X19
	0x02202D2C BL 0x1D2C690
	0x02202D30 BL 0x1990590
	0x02202D34 SUB X31, X31, 0x130
	0x02202D38 STP D9, D8, [X31 + 0xC0]
	0x02202D3C STP X29, X30, [X31 + 0xD0]
	0x02202D40 STP X28, X27, [X31 + 0xE0]
	0x02202D44 STP X26, X25, [X31 + 0xF0]
	0x02202D48 STP X24, X23, [X31 + 0x100]
	0x02202D4C STP X22, X21, [X31 + 0x110]
	0x02202D50 STP X20, X19, [X31 + 0x120]
	0x02202D54 ADRP X19, 0x21D7000
	0x02202D58 LDRB W9, [X19 + 0x839]
	0x02202D5C MOV X21, X2
	0x02202D60 MOV X22, X1
	0x02202D64 MOV X20, X0
	0x02202D68 MOV X24, X8
	0x02202D6C TBNZ X9, 0x0, 0x2202DCC
	0x02202D70 ADRP X0, 0x1F19000
	0x02202D74 LDR X0, [X0 + 0xE30]
	0x02202D78 BL 0x1C16CF4
	0x02202D7C ADRP X0, 0x1F19000
	0x02202D80 LDR X0, [X0 + 0xE38]
	0x02202D84 BL 0x1C16CF4
	0x02202D88 ADRP X0, 0x1F19000
	0x02202D8C LDR X0, [X0 + 0xDC0]
	0x02202D90 BL 0x1C16CF4
	0x02202D94 ADRP X0, 0x1F19000
	0x02202D98 LDR X0, [X0 + 0xE40]
	0x02202D9C BL 0x1C16CF4
	0x02202DA0 ADRP X0, 0x1F19000
	0x02202DA4 LDR X0, [X0 + 0xE48]
	0x02202DA8 BL 0x1C16CF4
	0x02202DAC ADRP X0, 0x1F19000
	0x02202DB0 LDR X0, [X0 + 0xE50]
	0x02202DB4 BL 0x1C16CF4
	0x02202DB8 ADRP X0, 0x1EF1000
	0x02202DBC LDR X0, [X0 + 0x5A8]
	0x02202DC0 BL 0x1C16CF4
	0x02202DC4 MOVZ W8, 0x1
	0x02202DC8 STRB W8, [X19 + 0x839]
	0x02202DCC MOVI V0.2D, 0x0
	0x02202DD0 STP X31, X31, [X31 + 0x40]
	0x02202DD4 STP V0, V0, [X31 + 0xA0]
	0x02202DD8 STR W31, [X31 + 0x3C]
	0x02202DDC LDR X8, [X20 + 0x10]
	0x02202DE0 CBZ X8, 0x22032DC
	0x02202DE4 LDR X23, [X8 + 0x18]
	0x02202DE8 CBZ X23, 0x22032DC
	0x02202DEC ADRP X8, 0x1F19000
	0x02202DF0 LDR X8, [X8 + 0xE50]
	0x02202DF4 ADD X0, X31, 0xA0
	0x02202DF8 MOVZ W1, 0x4
	0x02202DFC MOV W2, W23
	0x02202E00 LDR X3, [X8]
	0x02202E04 BL 0x2DFA684
	0x02202E08 CMP W23, 0x0
	0x02202E0C B.LE 0x22032FC
	0x02202E10 SUB W9, W23, 0x1
	0x02202E14 SXTW X8, W23
	0x02202E18 STP X9, X8, [X31 + 0x18]
	0x02202E1C MOVZ W8, 0x1
	0x02202E20 STR X24, [X31 + 0x8]
	0x02202E24 STR W31, [X31 + 0x14]
	0x02202E28 STP W8, W31, [X31 + 0x34]
	0x02202E2C ADRP X19, 0x1F19000
	0x02202E30 ADRP X28, 0x1F19000
	0x02202E34 LDR X19, [X19 + 0xE30]
	0x02202E38 LDR X28, [X28 + 0xE38]
	0x02202E3C MOV X29, X31
	0x02202E40 AND X27, X23, 0x0
	0x02202E44 FMOV S8, W31
	0x02202E48 FMOV S9, 1
	0x02202E4C MOVZ W8, 0x1
	0x02202E50 STR W8, [X31 + 0x30]
	0x02202E54 STR X27, [X31 + 0x28]
	0x02202E58 LDR X8, [X20 + 0x10]
	0x02202E5C CBZ X8, 0x22033A0
	0x02202E60 LDR W9, [X8 + 0x18]
	0x02202E64 CMP X29, X9
	0x02202E68 B.CS 0x220339C
	0x02202E6C ADD X8, X8, X29, 0x4, LSL
	0x02202E70 ADD X0, X8, 0x20
	0x02202E74 MOV X1, X31
	0x02202E78 BL 0x376BEA8
	0x02202E7C LDR X8, [X20 + 0x10]
	0x02202E80 CBZ X8, 0x22033A4
	0x02202E84 LDR W9, [X8 + 0x18]
	0x02202E88 CMP X29, X9
	0x02202E8C B.CS 0x2203398
	0x02202E90 ADD X8, X8, X29, 0x4, LSL
	0x02202E94 MOV W23, W0
	0x02202E98 ADD X0, X8, 0x20
	0x02202E9C MOV X1, X31
	0x02202EA0 BL 0x376BD40
	0x02202EA4 LDR W8, [X31 + 0x38]
	0x02202EA8 AND W8, W8, W23, 0x0
	0x02202EAC TBZ X8, 0x0, 0x2202ED4
	0x02202EB0 ADRP X8, 0x1F19000
	0x02202EB4 LDR X8, [X8 + 0xE40]
	0x02202EB8 LDR X2, [X8]
	0x02202EBC ADD X0, X31, 0xA0
	0x02202EC0 MOV X1, X31
	0x02202EC4 BL 0x2DFACEC
	0x02202EC8 MOVZ W8, 0x1
	0x02202ECC STR W8, [X31 + 0x38]
	0x02202ED0 B 0x22032A0
	0x02202ED4 LDR X8, [X20 + 0x10]
	0x02202ED8 CBZ X8, 0x22033AC
	0x02202EDC LDR W9, [X8 + 0x18]
	0x02202EE0 CMP X29, X9
	0x02202EE4 B.CS 0x22033A8
	0x02202EE8 ADD X8, X8, X29, 0x4, LSL
	0x02202EEC LDR X26, [X8 + 0x20]
	0x02202EF0 MOV W24, W0
	0x02202EF4 MOV X0, X26
	0x02202EF8 MOV X1, X31
	0x02202EFC BL 0x32277A8
	0x02202F00 TBZ X0, 0x0, 0x2202F24
	0x02202F04 ADRP X8, 0x1F19000
	0x02202F08 LDR X8, [X8 + 0xE40]
	0x02202F0C LDR X2, [X8]
	0x02202F10 ADD X0, X31, 0xA0
	0x02202F14 MOV X1, X31
	0x02202F18 BL 0x2DFACEC
	0x02202F1C FADD S8, S8, S9
	0x02202F20 B 0x22032A0
	0x02202F24 CBZ X22, 0x22033B0
	0x02202F28 MOV W27, W31
	0x02202F2C LDR X8, [X22]
	0x02202F30 LDR X1, [X19]
	0x02202F34 LDRH W9, [X8 + 0x12E]
	0x02202F38 CBZ X9, 0x2202F5C
	0x02202F3C LDR X10, [X8 + 0xB0]
	0x02202F40 ADD X10, X10, 0x8
	0x02202F44 LDUR X11, [X10 - 0x8]
	0x02202F48 CMP X11, X1
	0x02202F4C B.EQ 0x2202F6C
	0x02202F50 SUBS X9, X9, 0x1
	0x02202F54 ADD X10, X10, 0x10
	0x02202F58 B.NE 0x2202F44
	0x02202F5C MOV X0, X22
	0x02202F60 MOV W2, W31
	0x02202F64 BL 0x1C5C788
	0x02202F68 B 0x2202F78
	0x02202F6C LDRSW X9, [X10]
	0x02202F70 ADD X8, X8, X9, 0x4, LSL
	0x02202F74 ADD X0, X8, 0x138
	0x02202F78 LDP X8, X1, [X0]
	0x02202F7C MOV X0, X22
	0x02202F80 BLR X8
	0x02202F84 CMP W27, W0
	0x02202F88 B.GE 0x22030A4
	0x02202F8C LDR X8, [X22]
	0x02202F90 LDR X1, [X28]
	0x02202F94 LDRH W9, [X8 + 0x12E]
	0x02202F98 CBZ X9, 0x2202FBC
	0x02202F9C LDR X10, [X8 + 0xB0]
	0x02202FA0 ADD X10, X10, 0x8
	0x02202FA4 LDUR X11, [X10 - 0x8]
	0x02202FA8 CMP X11, X1
	0x02202FAC B.EQ 0x2202FCC
	0x02202FB0 SUBS X9, X9, 0x1
	0x02202FB4 ADD X10, X10, 0x10
	0x02202FB8 B.NE 0x2202FA4
	0x02202FBC MOV X0, X22
	0x02202FC0 MOV W2, W31
	0x02202FC4 BL 0x1C5C788
	0x02202FC8 B 0x2202FD8
	0x02202FCC LDRSW X9, [X10]
	0x02202FD0 ADD X8, X8, X9, 0x4, LSL
	0x02202FD4 ADD X0, X8, 0x138
	0x02202FD8 LDP X8, X2, [X0]
	0x02202FDC MOV X0, X22
	0x02202FE0 MOV W1, W27
	0x02202FE4 BLR X8
	0x02202FE8 MOV X8, X0
	0x02202FEC CBZ X21, 0x2203044
	0x02202FF0 MOV X0, X21
	0x02202FF4 CBZ W27, 0x2203068
	0x02202FF8 CMP X8, X21
	0x02202FFC MOV X0, X8
	0x02203000 B.NE 0x2203068
	0x02203004 LDR X8, [X22]
	0x02203008 LDR X1, [X28]
	0x0220300C LDRH W9, [X8 + 0x12E]
	0x02203010 CBZ X9, 0x2203034
	0x02203014 LDR X10, [X8 + 0xB0]
	0x02203018 ADD X10, X10, 0x8
	0x0220301C LDUR X11, [X10 - 0x8]
	0x02203020 CMP X11, X1
	0x02203024 B.EQ 0x220304C
	0x02203028 SUBS X9, X9, 0x1
	0x0220302C ADD X10, X10, 0x10
	0x02203030 B.NE 0x220301C
	0x02203034 MOV X0, X22
	0x02203038 MOV W2, W31
	0x0220303C BL 0x1C5C788
	0x02203040 B 0x2203058
	0x02203044 MOV X0, X8
	0x02203048 B 0x2203068
	0x0220304C LDRSW X9, [X10]
	0x02203050 ADD X8, X8, X9, 0x4, LSL
	0x02203054 ADD X0, X8, 0x138
	0x02203058 LDP X8, X2, [X0]
	0x0220305C MOV X0, X22
	0x02203060 MOV W1, W31
	0x02203064 BLR X8
	0x02203068 MOV X1, X26
	0x0220306C MOV W2, W31
	0x02203070 MOV X3, X31
	0x02203074 BL 0x376B4E8
	0x02203078 MOV X25, X0
	0x0220307C CBZ X0, 0x220309C
	0x02203080 ADRP X8, 0x1F18000
	0x02203084 LDR X8, [X8 + 0xE48]
	0x02203088 LDR X2, [X8]
	0x0220308C ADD X0, X31, 0xA0
	0x02203090 MOV X1, X25
	0x02203094 BL 0x2DFB648
	0x02203098 TBZ X0, 0x0, 0x22030B0
	0x0220309C ADD W27, W27, 0x1
	0x022030A0 B 0x2202F2C
	0x022030A4 LDR X27, [X31 + 0x28]
	0x022030A8 MOV X25, X31
	0x022030AC B 0x2203178
	0x022030B0 MOV X0, X26
	0x022030B4 MOV X1, X31
	0x022030B8 BL 0x3777DD8
	0x022030BC MOV X1, X0
	0x022030C0 ADD X0, X31, 0x40
	0x022030C4 MOV X2, X31
	0x022030C8 BL 0x3757420
	0x022030CC ADD X0, X31, 0x40
	0x022030D0 MOV X1, X31
	0x022030D4 BL 0x375F7A0
	0x022030D8 LDR X27, [X31 + 0x28]
	0x022030DC TBNZ X0, 0x0, 0x2203174
	0x022030E0 LDR X8, [X25 + 0x78]
	0x022030E4 CBZ X8, 0x22033C4
	0x022030E8 ADRP X9, 0x1F18000
	0x022030EC LDR X9, [X9 + 0xDC0]
	0x022030F0 LDP X27, X26, [X8 + 0x58]
	0x022030F4 LDR X0, [X9]
	0x022030F8 LDR W9, [X0 + 0xE0]
	0x022030FC CBNZ W9, 0x2203110
	0x02203100 BL 0x1C16DFC
	0x02203104 ADRP X8, 0x1F18000
	0x02203108 LDR X8, [X8 + 0xDC0]
	0x0220310C LDR X0, [X8]
	0x02203110 LDR X8, [X0 + 0xB8]
	0x02203114 LDP X1, X2, [X31 + 0x40]
	0x02203118 ADD X0, X8, 0x10
	0x0220311C ADD X5, X31, 0x3C
	0x02203120 MOV X3, X27
	0x02203124 MOV X4, X26
	0x02203128 MOV X6, X31
	0x0220312C BL 0x38189A0
	0x02203130 LDR X27, [X31 + 0x28]
	0x02203134 TBZ X0, 0x0, 0x2203174
	0x02203138 ADRP X8, 0x1EF0000
	0x0220313C LDR X8, [X8 + 0x5A8]
	0x02203140 LDR W26, [X31 + 0x3C]
	0x02203144 LDR X0, [X8]
	0x02203148 LDR W8, [X0 + 0xE0]
	0x0220314C CBNZ W8, 0x2203154
	0x02203150 BL 0x1C16DFC
	0x02203154 CMP W26, 0x0
	0x02203158 CSNEG W8, W26, W26, PL
	0x0220315C ADD W8, W8, 0x1
	0x02203160 SCVTF S0, W8
	0x02203164 FDIV S0, S9, S0
	0x02203168 FADD S0, S0, S9
	0x0220316C FADD S8, S8, S0
	0x02203170 B 0x2203178
	0x02203174 FADD S8, S8, S9
	0x02203178 LDR X9, [X31 + 0x20]
	0x0220317C ADD X8, X29, 0x1
	0x02203180 CMP X8, X9
	0x02203184 B.GE 0x22031E0
	0x02203188 LDR X9, [X20 + 0x10]
	0x0220318C CBZ X9, 0x22033B8
	0x02203190 LDR W10, [X9 + 0x18]
	0x02203194 CMP X8, X10
	0x02203198 B.CS 0x22033B4
	0x0220319C ADD X8, X9, X8, 0x4, LSL
	0x022031A0 ADD X0, X8, 0x20
	0x022031A4 MOV X1, X31
	0x022031A8 BL 0x376BEA8
	0x022031AC TBZ X0, 0x0, 0x22031E0
	0x022031B0 CMP X25, 0x0
	0x022031B4 EOR W8, W24, 0x1
	0x022031B8 CSET W10, EQ
	0x022031BC AND W8, W10, W8, 0x0
	0x022031C0 LDR W10, [X31 + 0x14]
	0x022031C4 CSET W9, NE
	0x022031C8 ORR W10, W10, W8, 0x0
	0x022031CC LDR W8, [X31 + 0x38]
	0x022031D0 STR W10, [X31 + 0x14]
	0x022031D4 ORR W8, W8, W9, 0x0
	0x022031D8 STR W8, [X31 + 0x38]
	0x022031DC B 0x2203288
	0x022031E0 LDR X8, [X31 + 0x18]
	0x022031E4 CMP X29, X8
	0x022031E8 CSET W8, NE
	0x022031EC ORN W8, W8, W23, 0x0
	0x022031F0 TBNZ X8, 0x0, 0x22031FC
	0x022031F4 CBNZ X25, 0x2203288
	0x022031F8 B 0x2203268
	0x022031FC LDR W10, [X31 + 0x30]
	0x02203200 CMP X25, 0x0
	0x02203204 EOR W8, W24, 0x1
	0x02203208 CSET W9, NE
	0x0220320C ORR W8, W8, W9, 0x0
	0x02203210 AND W10, W10, W8, 0x0
	0x02203214 LDR W8, [X31 + 0x34]
	0x02203218 ORR W9, W24, W9, 0x0
	0x0220321C AND W8, W8, W9, 0x0
	0x02203220 STP W10, W8, [X31 + 0x30]
	0x02203224 CBZ X29, 0x2203288
	0x02203228 LDR X8, [X20 + 0x10]
	0x0220322C CBZ X8, 0x22033C0
	0x02203230 LDR W10, [X8 + 0x18]
	0x02203234 SUB X9, X29, 0x1
	0x02203238 CMP W9, W10
	0x0220323C B.CS 0x22033BC
	0x02203240 ADD X8, X8, X9, 0x4, LSL
	0x02203244 ADD X0, X8, 0x20
	0x02203248 MOV X1, X31
	0x0220324C BL 0x376BEA8
	0x02203250 TBZ X0, 0x0, 0x2203288
	0x02203254 LDR W8, [X31 + 0x38]
	0x02203258 TBZ X8, 0x0, 0x2203264
	0x0220325C STR W31, [X31 + 0x38]
	0x02203260 B 0x2203288
	0x02203264 STR W31, [X31 + 0x38]
	0x02203268 LDR W8, [X31 + 0x14]
	0x0220326C LDR W9, [X31 + 0x30]
	0x02203270 AND W9, W8, W9, 0x0
	0x02203274 STR W9, [X31 + 0x30]
	0x02203278 LDR W9, [X31 + 0x34]
	0x0220327C EOR W8, W8, 0x1
	0x02203280 AND W9, W9, W8, 0x0
	0x02203284 STR W9, [X31 + 0x34]
	0x02203288 ADRP X8, 0x1F18000
	0x0220328C LDR X8, [X8 + 0xE40]
	0x02203290 LDR X2, [X8]
	0x02203294 ADD X0, X31, 0xA0
	0x02203298 MOV X1, X25
	0x0220329C BL 0x2DFACEC
	0x022032A0 ADD X29, X29, 0x1
	0x022032A4 CMP X29, X27
	0x022032A8 B.NE 0x2202E58
	0x022032AC LDP W9, W13, [X31 + 0x30]
	0x022032B0 LDR X24, [X31 + 0x8]
	0x022032B4 ADD X8, X31, 0x98
	0x022032B8 MOVI V0.2D, 0x0
	0x022032BC ANDS W31, W13, 0x1
	0x022032C0 CSEL X8, X8, X31, NE
	0x022032C4 STR W31, [X31 + 0x98]
	0x022032C8 STP V0, V0, [X31 + 0x50]
	0x022032CC TBNZ X9, 0x0, 0x2203314
	0x022032D0 MOV W10, W31
	0x022032D4 MOVZ W9, 0x2
	0x022032D8 B 0x220331C
	0x022032DC MOVZ X8, 0x3F000000
	0x022032E0 STUR V0, [X24 + 0x8]
	0x022032E4 STUR V0, [X24 + 0x18]
	0x022032E8 STUR V0, [X24 + 0x28]
	0x022032EC STUR V0, [X24 + 0x38]
	0x022032F0 STR X8, [X24]
	0x022032F4 STR X31, [X24 + 0x48]
	0x022032F8 B 0x2203374
	0x022032FC MOVI V0.2D, 0x0
	0x02203300 MOVZ W13, 0x1
	0x02203304 FMOV S8, W31
	0x02203308 ADD X8, X31, 0x98
	0x0220330C STR W31, [X31 + 0x98]
	0x02203310 STP V0, V0, [X31 + 0x50]
	0x02203314 MOV W9, W31
	0x02203318 MOVZ W10, 0x1
	0x0220331C ANDS W31, W13, 0x1
	0x02203320 ADD X11, X31, 0x98
	0x02203324 CSEL X12, X11, X31, NE
	0x02203328 CMP W10, 0x0
	0x0220332C CSEL X8, X8, X12, NE
	0x02203330 ANDS W31, W13, 0x1
	0x02203334 CSINC W9, W9, W31, NE
	0x02203338 CSEL X8, X8, X11, NE
	0x0220333C STR W9, [X8]
	0x02203340 LDP V0, V1, [X31 + 0xA0]
	0x02203344 LDR W8, [X31 + 0x98]
	0x02203348 LDP V2, V3, [X31 + 0x50]
	0x0220334C STP V0, V1, [X31 + 0x70]
	0x02203350 LDR X9, [X20 + 0x10]
	0x02203354 LDP V0, V1, [X31 + 0x70]
	0x02203358 STR S8, [X24 + 0x4]
	0x0220335C STR W8, [X24]
	0x02203360 STUR V3, [X24 + 0x18]
	0x02203364 STUR V2, [X24 + 0x8]
	0x02203368 STUR V1, [X24 + 0x38]
	0x0220336C STUR V0, [X24 + 0x28]
	0x02203370 STR X9, [X24 + 0x48]
	0x02203374 LDP X20, X19, [X31 + 0x120]
	0x02203378 LDP X22, X21, [X31 + 0x110]
	0x0220337C LDP X24, X23, [X31 + 0x100]
	0x02203380 LDP X26, X25, [X31 + 0xF0]
	0x02203384 LDP X28, X27, [X31 + 0xE0]
	0x02203388 LDP X29, X30, [X31 + 0xD0]
	0x0220338C LDP D9, D8, [X31 + 0xC0]
	0x02203390 ADD X31, X31, 0x130
	0x02203394 RET
	0x02203398 BL 0x1C16F28
	0x0220339C BL 0x1C16F28
	0x022033A0 BL 0x1C16F20
	0x022033A4 BL 0x1C16F20
	0x022033A8 BL 0x1C16F28
	0x022033AC BL 0x1C16F20
	0x022033B0 BL 0x1C16F20
	0x022033B4 BL 0x1C16F28
	0x022033B8 BL 0x1C16F20
	0x022033BC BL 0x1C16F28
	0x022033C0 BL 0x1C16F20
	0x022033C4 BL 0x1C16F20
	0x022033C8 B 0x220343C
	0x022033CC B 0x220343C
	0x022033D0 B 0x220343C
	0x022033D4 B 0x220343C
	0x022033D8 B 0x220343C
	0x022033DC B 0x220343C
	0x022033E0 B 0x220343C
	0x022033E4 B 0x220343C
	0x022033E8 B 0x220343C
	0x022033EC B 0x220343C
	0x022033F0 B 0x220343C
	0x022033F4 B 0x220343C
	0x022033F8 B 0x220343C
	0x022033FC B 0x220343C
	0x02203400 B 0x220343C
	0x02203404 B 0x220343C
	0x02203408 B 0x220343C
	0x0220340C B 0x220343C
	0x02203410 B 0x220343C
	0x02203414 B 0x220343C
	0x02203418 B 0x220343C
	0x0220341C B 0x220343C
	0x02203420 B 0x220343C
	0x02203424 B 0x220343C
	0x02203428 B 0x220343C
	0x0220342C B 0x220343C
	0x02203430 B 0x220343C
	0x02203434 B 0x220343C
	0x02203438 B 0x220343C
	0x0220343C MOV X19, X0
	0x02203440 CMP W1, 0x1
	0x02203444 B.NE 0x22034C0
	0x02203448 MOV X0, X19
	0x0220344C BL 0x3EB1AD0
	0x02203450 MOV X19, X0
	0x02203454 ADRP X0, 0x1EF0000
	0x02203458 LDR X0, [X0 + 0x7D0]
	0x0220345C BL 0x1C16D08
	0x02203460 LDR X8, [X19]
	0x02203464 LDR X1, [X8]
	0x02203468 BL 0x1C17270
	0x0220346C TBZ X0, 0x0, 0x2203498
	0x02203470 LDR X19, [X19]
	0x02203474 BL 0x3EB1AE0
	0x02203478 ADRP X0, 0x1F18000
	0x0220347C LDR X0, [X0 + 0xE58]
	0x02203480 BL 0x1C16D08
	0x02203484 MOV X1, X0
	0x02203488 ADD X0, X31, 0xA0
	0x0220348C BL 0x199CD54
	0x02203490 MOV X0, X19
	0x02203494 BL 0x1C16F18
	0x02203498 MOVZ W0, 0x8
	0x0220349C BL 0x3EB1AF0
	0x022034A0 LDR X8, [X19]
	0x022034A4 STR X8, [X0]
	0x022034A8 ADRP X1, 0x1CB1000
	0x022034AC ADD X1, X1, 0xE58
	0x022034B0 MOV X2, X31
	0x022034B4 BL 0x3EB1B00
	0x022034B8 MOV X19, X0
	0x022034BC BL 0x3EB1AE0
	0x022034C0 MOV X0, X19
	0x022034C4 BL 0x1D2C690
	0x022034C8 BL 0x1990590
	0x022034CC STP D9, D8, [X31 - 0x70]!
	0x022034D0 STP X29, X30, [X31 + 0x10]
	0x022034D4 STP X28, X27, [X31 + 0x20]
	0x022034D8 STP X26, X25, [X31 + 0x30]
	0x022034DC STP X24, X23, [X31 + 0x40]
	0x022034E0 STP X22, X21, [X31 + 0x50]
	0x022034E4 STP X20, X19, [X31 + 0x60]
	0x022034E8 ADD X29, X31, 0x10
	0x022034EC SUB X31, X31, 0x130
	0x022034F0 MRS X20, 0xC000
	0x022034F4 LDR X9, [X20 + 0x28]
	0x022034F8 SUB X24, X29, 0x48
	0x022034FC MOV X21, X3
	0x02203500 MOV X22, X2
	0x02203504 STUR X9, [X29 - 0x28]
	0x02203508 STR X1, [X24]
	0x0220350C LDR X9, [X3 + 0x38]
	0x02203510 MOV X25, X0
	0x02203514 MOV X23, X8
	0x02203518 CBNZ X9, 0x220356C
	0x0220351C ADRP X0, 0x1F18000

ISIL:
	001 Subtract X31, X31, 368
	002 Move [X31+256], D9
	003 Move [X31+264], D8
	004 Move [X31+272], X29
	005 Move [X31+280], X30
	006 Move [X31+288], X28
	007 Move [X31+296], X27
	008 Move [X31+304], X26
	009 Move [X31+312], X25
	010 Move [X31+320], X24
	011 Move [X31+328], X23
	012 Move [X31+336], X22
	013 Move [X31+344], X21
	014 Move [X31+352], X20
	015 Move [X31+360], X19
	016 Move X19, X8
	017 Move X8, [X3+56]
	018 Move X21, X3
	019 Move X22, X2
	020 Move X23, X1
	021 Move X27, X0
	022 Add X20, X31, 224
	023 Compare X8, 0
	024 JumpIfNotEqual {51}
	025 Move X0, 0x1F1A000
	026 Move X0, [X0+3632]
	027 Call 0x1C17CF4
	028 Move X0, 0x1F1A000
	029 Move X0, [X0+3640]
	030 Call 0x1C17CF4
	031 Move X0, 0x1F1A000
	032 Move X0, [X0+3520]
	033 Call 0x1C17CF4
	034 Move X0, 0x1F1A000
	035 Move X0, [X0+3648]
	036 Call 0x1C17CF4
	037 Move X0, 0x1F1A000
	038 Move X0, [X0+3656]
	039 Call 0x1C17CF4
	040 Move X0, 0x1F1A000
	041 Move X0, [X0+3664]
	042 Call 0x1C17CF4
	043 Move X0, 0x1EF2000
	044 Move X0, [X0+1448]
	045 Call 0x1C17CF4
	046 Move X8, [X21+56]
	047 Compare X8, 0
	048 JumpIfNotEqual {51}
	049 Move X0, X21
	050 Call 0x1C5D6E0
	051 NotImplemented "Instruction MOVI not yet implemented."
	052 Move [X31+216], W31
	053 Move [X31+128], X31
	054 Move [X31+136], X31
	055 Move [X20], V0
	056 Move [X20+8], V0
	057 Move [X31+144], V0
	058 Move [X31+152], V0
	059 Move [X31+176], V0
	060 Move [X31+184], V0
	061 Move [X31+124], W31
	062 Move X8, [X27+16]
	063 Compare X8, 0
	064 JumpIfEqual {471}
	065 Move X24, [X8+24]
	066 Compare X24, 0
	067 JumpIfEqual {471}
	068 Move X8, 0x1F1A000
	069 Move X8, [X8+3664]
	070 Add X0, X31, 224
	071 Move W1, 4
	072 Move W2, W24
	073 Move X3, [X8]
	074 Call 0x2DFB684, X0, X1, X2
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Subtract W10, W24, 1
	077 Move X9, W24
	078 Add X8, X31, 72
	079 Move [X31+24], X10
	080 Move [X31+32], X9
	081 And X9, X24, 0
	082 Move [X31+8], X19
	083 Move X29, X31
	084 Move [X31+56], X9
	085 Move S8, W31
	086 Move W9, 1
	087 Move S9, 1
	088 Move TEMP, 0
	089 Not TEMP
	090 Move X19, TEMP
	091 Add X20, X8, 16
	092 Move W8, 1
	093 Move [X31+68], W31
	094 Move [X31+20], W31
	095 Move [X31+48], W8
	096 Move [X31+52], W9
	097 Move [X31+40], X27
	098 Move X8, [X27+16]
	099 Compare X8, 0
	100 JumpIfEqual {529}
	101 Move W9, [X8+24]
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Add X8, X8, X29
	104 Add X0, X8, 32
	105 Move X1, X31
	106 Call DeviceRequirement.get_isOR, X0
	107 Move X8, [X27+16]
	108 Compare X8, 0
	109 JumpIfEqual {530}
	110 Move W9, [X8+24]
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Add X8, X8, X29
	113 Move W24, W0
	114 Add X0, X8, 32
	115 Move X1, X31
	116 Call DeviceRequirement.get_isOptional, X0
	117 Move W8, [X31+68]
	118 And W8, W8, W24
	119 Move TEMP, X8
	120 And TEMP, TEMP, 1
	121 Compare TEMP, 1
	122 JumpIfNotEqual {131}
	123 Move X8, 0x1F1A000
	124 Move X8, [X8+3648]
	125 Move X2, [X8]
	126 Add X0, X31, 224
	127 Move X1, X31
	128 Call 0x2DFBCEC, X0, X1
	129 Move W8, 1
	130 Move [X31+68], W8
	131 Move X8, [X27+16]
	132 Compare X8, 0
	133 JumpIfEqual {534}
	134 Move W9, [X8+24]
	135 NotImplemented "Instruction CMP not yet implemented."
	136 Add X8, X8, X29
	137 Move X26, [X8+32]
	138 Move W25, W0
	139 Move X0, X26
	140 Move X1, X31
	141 Call String.IsNullOrEmpty, X0
	142 Move TEMP, X0
	143 And TEMP, TEMP, 1
	144 Compare TEMP, 1
	145 JumpIfNotEqual {153}
	146 Move X8, 0x1F1A000
	147 Move X8, [X8+3648]
	148 Move X2, [X8]
	149 Add X0, X31, 224
	150 Move X1, X31
	151 Call 0x2DFBCEC, X0, X1
	152 Add S8, S8, S9
	153 Move W27, W31
	154 Move X8, [X21+56]
	155 Move X0, [X8]
	156 Move W8, [X0+309]
	157 Move TEMP, X8
	158 And TEMP, TEMP, 1
	159 Compare TEMP, 1
	160 JumpIfEqual {162}
	161 Call 0x1C5D684
	162 Move [X31+72], X0
	163 Move [X31+80], X19
	164 Move V1, [X23]
	165 Move V0, [X23+16]
	166 Move X9, 0x1F1A000
	167 Move [X20], V1
	168 Move [X20+8], V0
	169 NotImplemented "Instruction LDRH not yet implemented."
	170 Move X9, [X9+3632]
	171 Move X1, [X9]
	172 Compare X8, 0
	173 JumpIfEqual {180}
	174 Move X9, [X0+176]
	175 Add X9, X9, 8
	176 NotImplemented "Instruction LDUR not yet implemented."
	177 NotImplemented "Instruction CMP not yet implemented."
	178 Subtract X8, X8, 1
	179 Add X9, X9, 16
	180 Add X0, X31, 72
	181 Move W2, W31
	182 Call 0x1C5D788
	183 NotImplemented "Instruction LDRSW not yet implemented."
	184 Add X8, X0, X8
	185 Add X0, X8, 312
	186 Move X8, [X0]
	187 Move X1, [X0+8]
	188 Add X0, X31, 72
	189 NotImplemented "Instruction BLR not yet implemented."
	190 Move V1, [X20]
	191 Move V0, [X20+16]
	192 NotImplemented "Instruction CMP not yet implemented."
	193 Move [X23], V1
	194 Move [X23+8], V0
	195 Move X8, [X21+56]
	196 Move X0, [X8]
	197 Move W8, [X0+309]
	198 Move TEMP, X8
	199 And TEMP, TEMP, 1
	200 Compare TEMP, 1
	201 JumpIfEqual {203}
	202 Call 0x1C5D684
	203 Move [X31+72], X0
	204 Move [X31+80], X19
	205 Move V1, [X23]
	206 Move V0, [X23+16]
	207 Move X9, 0x1F1A000
	208 Move [X20], V1
	209 Move [X20+8], V0
	210 NotImplemented "Instruction LDRH not yet implemented."
	211 Move X9, [X9+3640]
	212 Move X1, [X9]
	213 Compare X8, 0
	214 JumpIfEqual {221}
	215 Move X9, [X0+176]
	216 Add X9, X9, 8
	217 NotImplemented "Instruction LDUR not yet implemented."
	218 NotImplemented "Instruction CMP not yet implemented."
	219 Subtract X8, X8, 1
	220 Add X9, X9, 16
	221 Add X0, X31, 72
	222 Move W2, W31
	223 Call 0x1C5D788
	224 NotImplemented "Instruction LDRSW not yet implemented."
	225 Add X8, X0, X8
	226 Add X0, X8, 312
	227 Move X8, [X0]
	228 Move X2, [X0+8]
	229 Add X0, X31, 72
	230 Move W1, W27
	231 NotImplemented "Instruction BLR not yet implemented."
	232 Move V1, [X20]
	233 Move V0, [X20+16]
	234 Move X8, X0
	235 Move [X23], V1
	236 Move [X23+8], V0
	237 Compare X22, 0
	238 JumpIfEqual {273}
	239 Move X0, X22
	240 Compare W27, 0
	241 JumpIfEqual {286}
	242 NotImplemented "Instruction CMP not yet implemented."
	243 Move X0, X8
	244 Move X8, [X21+56]
	245 Move X0, [X8]
	246 Move W8, [X0+309]
	247 Move TEMP, X8
	248 And TEMP, TEMP, 1
	249 Compare TEMP, 1
	250 JumpIfEqual {252}
	251 Call 0x1C5D684
	252 Move [X31+72], X0
	253 Move [X31+80], X19
	254 Move V1, [X23]
	255 Move V0, [X23+16]
	256 Move X9, 0x1F19000
	257 Move [X20], V1
	258 Move [X20+8], V0
	259 NotImplemented "Instruction LDRH not yet implemented."
	260 Move X9, [X9+3640]
	261 Move X1, [X9]
	262 Compare X8, 0
	263 JumpIfEqual {270}
	264 Move X9, [X0+176]
	265 Add X9, X9, 8
	266 NotImplemented "Instruction LDUR not yet implemented."
	267 NotImplemented "Instruction CMP not yet implemented."
	268 Subtract X8, X8, 1
	269 Add X9, X9, 16
	270 Add X0, X31, 72
	271 Move W2, W31
	272 Call 0x1C5D788
	273 Move X0, X8
	274 NotImplemented "Instruction LDRSW not yet implemented."
	275 Add X8, X0, X8
	276 Add X0, X8, 312
	277 Move X8, [X0]
	278 Move X2, [X0+8]
	279 Add X0, X31, 72
	280 Move W1, W31
	281 NotImplemented "Instruction BLR not yet implemented."
	282 Move V1, [X20]
	283 Move V0, [X20+16]
	284 Move [X23], V1
	285 Move [X23+8], V0
	286 Move X1, X26
	287 Move W2, W31
	288 Move X3, X31
	289 Call InputControlPath.TryFindControl, X0, X1, X2
	290 Move X28, X0
	291 Compare X0, 0
	292 JumpIfEqual {303}
	293 Move X8, 0x1F19000
	294 Move X8, [X8+3656]
	295 Move X2, [X8]
	296 Add X0, X31, 224
	297 Move X1, X28
	298 Call 0x2DFC648, X0, X1
	299 Move TEMP, X0
	300 And TEMP, TEMP, 1
	301 Compare TEMP, 1
	302 JumpIfNotEqual {306}
	303 Add W27, W27, 1
	304 Move X27, [X31+40]
	305 Move X28, X31
	306 Move X0, X26
	307 Move X1, X31
	308 Call InputControlPath.TryGetDeviceLayout, X0
	309 Move X1, X0
	310 Add X0, X31, 128
	311 Move X2, X31
	312 Call InternedString..ctor, X0, X1
	313 Add X0, X31, 128
	314 Move X1, X31
	315 Call InternedString.IsEmpty, X0
	316 Move X27, [X31+40]
	317 Move TEMP, X0
	318 And TEMP, TEMP, 1
	319 Compare TEMP, 1
	320 JumpIfEqual {365}
	321 Move X8, [X28+120]
	322 Compare X8, 0
	323 JumpIfEqual {539}
	324 Move X9, 0x1F19000
	325 Move X9, [X9+3520]
	326 Move X27, [X8+88]
	327 Move X26, [X8+96]
	328 Move X0, [X9]
	329 Move W9, [X0+224]
	330 Compare W9, 0
	331 JumpIfNotEqual {336}
	332 Call 0x1C17DFC
	333 Move X8, 0x1F19000
	334 Move X8, [X8+3520]
	335 Move X0, [X8]
	336 Move X8, [X0+184]
	337 Move X1, [X31+128]
	338 Move X2, [X31+136]
	339 Add X0, X8, 16
	340 Add X5, X31, 124
	341 Move X3, X27
	342 Move X4, X26
	343 Move X6, X31
	344 Call Collection.ComputeDistanceInInheritanceHierarchy, X0, X1, X2, X3
	345 Move X27, [X31+40]
	346 Move TEMP, X0
	347 And TEMP, TEMP, 1
	348 Compare TEMP, 1
	349 JumpIfNotEqual {365}
	350 Move X8, 0x1EF1000
	351 Move X8, [X8+1448]
	352 Move W26, [X31+124]
	353 Move X0, [X8]
	354 Move W8, [X0+224]
	355 Compare W8, 0
	356 JumpIfNotEqual {358}
	357 Call 0x1C17DFC
	358 NotImplemented "Instruction CMP not yet implemented."
	359 NotImplemented "Instruction CSNEG not yet implemented."
	360 Add W8, W8, 1
	361 NotImplemented "Instruction SCVTF not yet implemented."
	362 NotImplemented "Instruction FDIV not yet implemented."
	363 Add S0, S0, S9
	364 Add S8, S8, S0
	365 Add S8, S8, S9
	366 Move X9, [X31+32]
	367 Add X8, X29, 1
	368 NotImplemented "Instruction CMP not yet implemented."
	369 Move X9, [X27+16]
	370 Compare X9, 0
	371 JumpIfEqual {536}
	372 Move W10, [X9+24]
	373 NotImplemented "Instruction CMP not yet implemented."
	374 Add X8, X9, X8
	375 Add X0, X8, 32
	376 Move X1, X31
	377 Call DeviceRequirement.get_isOR, X0
	378 Move TEMP, X0
	379 And TEMP, TEMP, 1
	380 Compare TEMP, 1
	381 JumpIfNotEqual {393}
	382 NotImplemented "Instruction CMP not yet implemented."
	383 Xor W8, W25, 1
	384 NotImplemented "Instruction CSET not yet implemented."
	385 And W8, W10, W8
	386 Move W10, [X31+20]
	387 NotImplemented "Instruction CSET not yet implemented."
	388 Or W10, W10, W8
	389 Move W8, [X31+68]
	390 Move [X31+20], W10
	391 Or W8, W8, W9
	392 Move [X31+68], W8
	393 Move X8, [X31+24]
	394 NotImplemented "Instruction CMP not yet implemented."
	395 NotImplemented "Instruction CSET not yet implemented."
	396 NotImplemented "Instruction ORN not yet implemented."
	397 Move TEMP, X8
	398 And TEMP, TEMP, 1
	399 Compare TEMP, 1
	400 JumpIfEqual {403}
	401 Compare X28, 0
	402 JumpIfNotEqual {445}
	403 Move W10, [X31+48]
	404 NotImplemented "Instruction CMP not yet implemented."
	405 Xor W8, W25, 1
	406 NotImplemented "Instruction CSET not yet implemented."
	407 Or W8, W8, W9
	408 And W10, W10, W8
	409 Move W8, [X31+52]
	410 Or W9, W25, W9
	411 And W8, W8, W9
	412 Move [X31+48], W10
	413 Move [X31+52], W8
	414 Compare X29, 0
	415 JumpIfEqual {445}
	416 Move X8, [X27+16]
	417 Compare X8, 0
	418 JumpIfEqual {538}
	419 Move W10, [X8+24]
	420 Subtract X9, X29, 1
	421 NotImplemented "Instruction CMP not yet implemented."
	422 Add X8, X8, X9
	423 Add X0, X8, 32
	424 Move X1, X31
	425 Call DeviceRequirement.get_isOR, X0
	426 Move TEMP, X0
	427 And TEMP, TEMP, 1
	428 Compare TEMP, 1
	429 JumpIfNotEqual {445}
	430 Move W8, [X31+68]
	431 Move TEMP, X8
	432 And TEMP, TEMP, 1
	433 Compare TEMP, 1
	434 JumpIfNotEqual {436}
	435 Move [X31+68], W31
	436 Move [X31+68], W31
	437 Move W8, [X31+20]
	438 Move W9, [X31+48]
	439 And W9, W8, W9
	440 Move [X31+48], W9
	441 Move W9, [X31+52]
	442 Xor W8, W8, 1
	443 And W9, W9, W8
	444 Move [X31+52], W9
	445 Move X8, 0x1F19000
	446 Move X8, [X8+3648]
	447 Move X2, [X8]
	448 Add X0, X31, 224
	449 Move X1, X28
	450 Call 0x2DFBCEC, X0, X1
	451 Move X8, [X31+56]
	452 Add X29, X29, 1
	453 NotImplemented "Instruction CMP not yet implemented."
	454 Move W9, [X31+48]
	455 Move W13, [X31+52]
	456 Move X19, [X31+8]
	457 Add X8, X31, 216
	458 NotImplemented "Instruction MOVI not yet implemented."
	459 And W31, W13, 1
	460 NotImplemented "Instruction CSEL not yet implemented."
	461 Add X20, X31, 224
	462 Move [X31+216], W31
	463 Move [X31+144], V0
	464 Move [X31+152], V0
	465 Move TEMP, X9
	466 And TEMP, TEMP, 1
	467 Compare TEMP, 1
	468 JumpIfEqual {485}
	469 Move W10, W31
	470 Move W9, 2
	471 Move X8, 0x3F000000
	472 Move [X19+8], V0
	473 Move [X19+24], V0
	474 Move [X19+40], V0
	475 Move [X19+56], V0
	476 Move [X19], X8
	477 Move [X19+72], X31
	478 NotImplemented "Instruction MOVI not yet implemented."
	479 Move W13, 1
	480 Move S8, W31
	481 Add X8, X31, 216
	482 Move [X31+216], W31
	483 Move [X31+144], V0
	484 Move [X31+152], V0
	485 Move W9, W31
	486 Move W10, 1
	487 And W31, W13, 1
	488 Add X11, X31, 216
	489 NotImplemented "Instruction CSEL not yet implemented."
	490 NotImplemented "Instruction CMP not yet implemented."
	491 NotImplemented "Instruction CSEL not yet implemented."
	492 And W31, W13, 1
	493 NotImplemented "Instruction CSINC not yet implemented."
	494 NotImplemented "Instruction CSEL not yet implemented."
	495 Move [X8], W9
	496 Move V0, [X20]
	497 Move V1, [X20+16]
	498 Move W8, [X31+216]
	499 Move V2, [X31+144]
	500 Move V3, [X31+160]
	501 Move [X31+176], V0
	502 Move [X31+184], V1
	503 Move X9, [X27+16]
	504 Move V0, [X31+176]
	505 Move V1, [X31+192]
	506 Move [X19+4], S8
	507 Move [X19], W8
	508 Move [X19+24], V3
	509 Move [X19+8], V2
	510 Move [X19+56], V1
	511 Move [X19+40], V0
	512 Move [X19+72], X9
	513 Move X20, [X31+352]
	514 Move X19, [X31+360]
	515 Move X22, [X31+336]
	516 Move X21, [X31+344]
	517 Move X24, [X31+320]
	518 Move X23, [X31+328]
	519 Move X26, [X31+304]
	520 Move X25, [X31+312]
	521 Move X28, [X31+288]
	522 Move X27, [X31+296]
	523 Move X29, [X31+272]
	524 Move X30, [X31+280]
	525 Move D9, [X31+256]
	526 Move D8, [X31+264]
	527 Add X31, X31, 368
	528 Return X0
	529 Call 0x1C17F20
	530 Call 0x1C17F20
	531 Call 0x1C17F28
	532 Call 0x1C17F28
	533 Call 0x1C17F28
	534 Call 0x1C17F20
	535 Call 0x1C17F28
	536 Call 0x1C17F20
	537 Call 0x1C17F28
	538 Call 0x1C17F20
	539 Call 0x1C17F20
	540 Move X19, X0
	541 NotImplemented "Instruction CMP not yet implemented."
	542 Move X0, X19
	543 Call 0x3EB2AD0
	544 Move X19, X0
	545 Move X0, 0x1EF1000
	546 Move X0, [X0+2000]
	547 Call 0x1C17D08
	548 Move X8, [X19]
	549 Move X1, [X8]
	550 Call 0x1C18270
	551 Move TEMP, X0
	552 And TEMP, TEMP, 1
	553 Compare TEMP, 1
	554 JumpIfNotEqual {565}
	555 Move X19, [X19]
	556 Call 0x3EB2AE0
	557 Move X0, 0x1F19000
	558 Move X0, [X0+3672]
	559 Call 0x1C17D08
	560 Move X1, X0
	561 Add X0, X31, 224
	562 Call 0x199DD54
	563 Move X0, X19
	564 Call 0x1C17F18
	565 Move W0, 8
	566 Call 0x3EB2AF0
	567 Move X8, [X19]
	568 Move [X0], X8
	569 Move X1, 0x1CB2000
	570 Add X1, X1, 3672
	571 Move X2, X31
	572 Call 0x3EB2B00
	573 Move X19, X0
	574 Call 0x3EB2AE0
	575 Move X0, X19
	576 Call 0x1D2D690
	577 Call 0x1991590

Method: System.Boolean Equals(UnityEngine.InputSystem.InputControlScheme other)

Disassembly:
	0x0376C548 MOV X22, X31
	0x0376C54C AND X23, X21, 0x0
	0x0376C550 ADD X21, X19, 0x20
	0x0376C554 ADD X24, X20, 0x20
	0x0376C558 LDR W8, [X19 + 0x18]
	0x0376C55C CMP X22, X8
	0x0376C560 B.CS 0x376C5D4
	0x0376C564 ADD X8, X31, 0x18
	0x0376C568 MOV X0, X21
	0x0376C56C BL 0x376C1B8
	0x0376C570 CBZ X20, 0x376C5D8
	0x0376C574 LDUR V0, [X31 + 0x18]
	0x0376C578 LDR X8, [X31 + 0x28]
	0x0376C57C STR V0, [X31]
	0x0376C580 STR X8, [X31 + 0x10]
	0x0376C584 LDR W8, [X20 + 0x18]
	0x0376C588 CMP X22, X8
	0x0376C58C B.CS 0x376C5D4
	0x0376C590 LDR V0, [X31]
	0x0376C594 LDR X8, [X31 + 0x10]
	0x0376C598 ADD X22, X22, 0x1
	0x0376C59C ADD X21, X21, 0x18
	0x0376C5A0 CMP X23, X22
	0x0376C5A4 STR X8, [X24 + 0x10]
	0x0376C5A8 STR V0, [X24], #0x18
	0x0376C5AC B.NE 0x376C558
	0x0376C5B0 B 0x376C5B8
	0x0376C5B4 MOV X20, X31
	0x0376C5B8 MOV X0, X20
	0x0376C5BC LDP X20, X19, [X31 + 0x60]
	0x0376C5C0 LDP X22, X21, [X31 + 0x50]
	0x0376C5C4 LDP X24, X23, [X31 + 0x40]
	0x0376C5C8 LDR X30, [X31 + 0x30]
	0x0376C5CC ADD X31, X31, 0x70
	0x0376C5D0 RET
	0x0376C5D4 BL 0x1C16F28
	0x0376C5D8 BL 0x1C16F20
	0x0376C5DC STR X30, [X31 - 0x10]!
	0x0376C5E0 MOV X8, X0
	0x0376C5E4 LDR X0, [X0]
	0x0376C5E8 CBZ X0, 0x376C5FC
	0x0376C5EC ADD X1, X8, 0xC
	0x0376C5F0 MOV X2, X31
	0x0376C5F4 LDR X30, [X31], #0x10
	0x0376C5F8 B 0x374FC44
	0x0376C5FC BL 0x1C16F20
	0x0376C600 STR X30, [X31 - 0x10]!
	0x0376C604 MOV X8, X0
	0x0376C608 LDR X0, [X0]
	0x0376C60C CBZ X0, 0x376C620
	0x0376C610 ADD X1, X8, 0xC
	0x0376C614 MOV X2, X31
	0x0376C618 LDR X30, [X31], #0x10
	0x0376C61C B 0x374FD6C
	0x0376C620 BL 0x1C16F20
	0x0376C624 LDRB W0, [X0 + 0xC]
	0x0376C628 RET
	0x0376C62C LDUR V0, [X0 + 0x14]
	0x0376C630 RET
	0x0376C634 LDUR V0, [X0 + 0x1C]
	0x0376C638 RET
	0x0376C63C LDRB W8, [X0 + 0x8]
	0x0376C640 UBFM W0, W8, 0x1, 0x1
	0x0376C644 RET
	0x0376C648 LDR W8, [X0 + 0x8]
	0x0376C64C ANDS W31, W1, 0x1
	0x0376C650 MOVZ W9, 0x2
	0x0376C654 CSEL W9, W9, W31, NE
	0x0376C658 AND W8, W8, 0xFFFFFFFD
	0x0376C65C ORR W8, W8, W9, 0x0
	0x0376C660 STR W8, [X0 + 0x8]
	0x0376C664 RET
	0x0376C668 LDRB W8, [X0 + 0xC]
	0x0376C66C CMP W8, 0x1
	0x0376C670 CSET W0, EQ
	0x0376C674 RET
	0x0376C678 LDRB W8, [X0 + 0xC]
	0x0376C67C CMP W8, 0x2
	0x0376C680 CSET W0, EQ
	0x0376C684 RET
	0x0376C688 LDR V0, [X0 + 0x28]
	0x0376C68C RET

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+32], X26
	004 Move [X31+40], X25
	005 Move [X31+48], X24
	006 Move [X31+56], X23
	007 Move [X31+64], X22
	008 Move [X31+72], X21
	009 Move [X31+80], X20
	010 Move [X31+88], X19
	011 Move X19, X1
	012 Move X20, X0
	013 Move X0, [X0]
	014 Move X1, [X1]
	015 Move W2, 3
	016 Move X3, X31
	017 Call String.Equals, X0, X1, X2
	018 Move TEMP, X0
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfNotEqual {80}
	022 Move X0, [X20+8]
	023 Move X1, [X19+8]
	024 Move W2, 3
	025 Move X3, X31
	026 Call String.Equals, X0, X1, X2
	027 Move TEMP, X0
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfNotEqual {80}
	031 Move X8, [X20+16]
	032 Compare X8, 0
	033 JumpIfEqual {92}
	034 Move X9, [X8+24]
	035 Compare X9, 0
	036 JumpIfEqual {92}
	037 Move X10, [X19+16]
	038 Compare X10, 0
	039 JumpIfEqual {80}
	040 Move W10, [X10+24]
	041 NotImplemented "Instruction CMP not yet implemented."
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X23, X31
	044 And X24, X9, 0
	045 Move W9, [X8+24]
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Add X8, X8, X23
	048 Move X21, [X8+32]
	049 Move X22, [X8+40]
	050 Move X25, X31
	051 Move W26, 32
	052 Move X8, [X19+16]
	053 Compare X8, 0
	054 JumpIfEqual {79}
	055 Move W9, [X8+24]
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Add X8, X8, X26
	058 Move X9, [X8]
	059 Move X8, [X8+8]
	060 Add X0, X31, 0
	061 Move X1, X21
	062 Move X2, X22
	063 Move [X31], X9
	064 Move [X31+8], X8
	065 Call DeviceRequirement.Equals, X0, X1
	066 Move TEMP, X0
	067 And TEMP, TEMP, 1
	068 Compare TEMP, 1
	069 JumpIfEqual {74}
	070 Add X25, X25, 1
	071 Move W0, W31
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Add X26, X26, 16
	074 Add X23, X23, 1
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Move X8, [X20+16]
	077 Compare X8, 0
	078 JumpIfNotEqual {45}
	079 Call 0x1C17F20
	080 Move W0, W31
	081 Move X20, [X31+80]
	082 Move X19, [X31+88]
	083 Move X22, [X31+64]
	084 Move X21, [X31+72]
	085 Move X24, [X31+48]
	086 Move X23, [X31+56]
	087 Move X26, [X31+32]
	088 Move X25, [X31+40]
	089 Move X30, [X31+16]
	090 Add X31, X31, 96
	091 Return X0
	092 Move X8, [X19+16]
	093 Compare X8, 0
	094 JumpIfEqual {98}
	095 Move W8, [X8+24]
	096 NotImplemented "Instruction CMP not yet implemented."
	097 NotImplemented "Instruction CSET not yet implemented."
	098 Move W0, 1
	099 Call 0x1C17F28

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x0376C6BC MOVZ W3, 0x1
	0x0376C6C0 MOVZ W4, 0x1
	0x0376C6C4 MOV X5, X31
	0x0376C6C8 LDR X30, [X31], #0x10
	0x0376C6CC B 0x374F390
	0x0376C6D0 BL 0x1C16F20
	0x0376C6D4 STR X30, [X31 - 0x10]!
	0x0376C6D8 MOV X2, X0
	0x0376C6DC LDRB W8, [X2 + 0xC]!
	0x0376C6E0 CMP W8, 0x1
	0x0376C6E4 B.NE 0x376C6F0
	0x0376C6E8 LDUR V0, [X0 + 0x14]
	0x0376C6EC STUR D0, [X0 + 0x1C]
	0x0376C6F0 LDR X0, [X0]
	0x0376C6F4 CBZ X0, 0x376C710
	0x0376C6F8 MOVZ W1, 0x3
	0x0376C6FC MOVZ W3, 0x1
	0x0376C700 MOVZ W4, 0x1
	0x0376C704 MOV X5, X31
	0x0376C708 LDR X30, [X31], #0x10
	0x0376C70C B 0x374F390
	0x0376C710 BL 0x1C16F20
	0x0376C714 STR X30, [X31 - 0x10]!
	0x0376C718 MOV X2, X0
	0x0376C71C LDRB W8, [X2 + 0xC]!
	0x0376C720 CMP W8, 0x1
	0x0376C724 B.NE 0x376C730
	0x0376C728 LDUR V0, [X0 + 0x14]
	0x0376C72C STUR D0, [X0 + 0x1C]
	0x0376C730 LDR X0, [X0]
	0x0376C734 CBZ X0, 0x376C750
	0x0376C738 MOVZ W1, 0x3
	0x0376C73C MOVZ W3, 0x2
	0x0376C740 MOVZ W4, 0x1
	0x0376C744 MOV X5, X31
	0x0376C748 LDR X30, [X31], #0x10

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+40], X21
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move X21, 0xC75000
	007 Move W8, [X21+3755]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x9DB000
	015 Move X0, [X0+1880]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3755], W8
	019 Compare X20, 0
	020 JumpIfEqual {26}
	021 Move X8, 0x9DB000
	022 Move X8, [X8+1880]
	023 Move X9, [X20]
	024 Move X8, [X8]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move W0, W31
	027 Move X0, X20
	028 Call 0x1C17E08
	029 Move V0, [X0]
	030 Move X8, [X0+16]
	031 Add X1, X31, 0
	032 Move X0, X19
	033 Move [X31], V0
	034 Move [X31+16], X8
	035 Call InputControlScheme.Equals, X0, X1
	036 Move X20, [X31+48]
	037 Move X19, [X31+56]
	038 Move X30, [X31+32]
	039 Move X21, [X31+40]
	040 And W0, W0, 1
	041 Add X31, X31, 64
	042 Return X0

Method: System.Int32 GetHashCode()

Disassembly:
	0x0376C74C B 0x374F390
	0x0376C750 BL 0x1C16F20
	0x0376C754 STR X30, [X31 - 0x10]!
	0x0376C758 MOV X2, X0
	0x0376C75C LDRB W8, [X2 + 0xC]!
	0x0376C760 CMP W8, 0x1
	0x0376C764 B.NE 0x376C770
	0x0376C768 LDUR V0, [X0 + 0x14]
	0x0376C76C STUR D0, [X0 + 0x1C]
	0x0376C770 LDR X0, [X0]
	0x0376C774 CBZ X0, 0x376C790
	0x0376C778 MOVZ W1, 0x3
	0x0376C77C MOVZ W3, 0x3
	0x0376C780 MOVZ W4, 0x1
	0x0376C784 MOV X5, X31
	0x0376C788 LDR X30, [X31], #0x10
	0x0376C78C B 0x374F390
	0x0376C790 BL 0x1C16F20
	0x0376C794 STR X30, [X31 - 0x10]!
	0x0376C798 MOV X2, X0
	0x0376C79C LDRB W8, [X2 + 0xC]!
	0x0376C7A0 CMP W8, 0x4
	0x0376C7A4 B.NE 0x376C7B0
	0x0376C7A8 LDR X30, [X31], #0x10
	0x0376C7AC RET
	0x0376C7B0 LDR X0, [X0]
	0x0376C7B4 CBZ X0, 0x376C7D0
	0x0376C7B8 MOVZ W1, 0x4
	0x0376C7BC MOVZ W3, 0x1
	0x0376C7C0 MOVZ W4, 0x1
	0x0376C7C4 MOV X5, X31
	0x0376C7C8 LDR X30, [X31], #0x10

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, X0
	006 Move X0, [X0]
	007 Compare X0, 0
	008 JumpIfEqual {15}
	009 Move X8, [X0]
	010 Move X9, [X8+344]
	011 Move X1, [X8+352]
	012 NotImplemented "Instruction BLR not yet implemented."
	013 Move W8, 397
	014 Multiply W21, W0, W8
	015 Move W21, W31
	016 Move X0, [X19+8]
	017 Compare X0, 0
	018 JumpIfEqual {24}
	019 Move X8, [X0]
	020 Move X9, [X8+344]
	021 Move X1, [X8+352]
	022 NotImplemented "Instruction BLR not yet implemented."
	023 Move W20, W0
	024 Move W20, W31
	025 Move X0, [X19+16]
	026 Compare X0, 0
	027 JumpIfEqual {32}
	028 Move X8, [X0]
	029 Move X9, [X8+344]
	030 Move X1, [X8+352]
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Xor W8, W20, W21
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move W9, 397
	036 Multiply W8, W8, W9
	037 Xor W0, W0, W8
	038 Move X30, [X31+32]
	039 Move X21, [X31+40]
	040 Return X0

Method: System.String ToString()

Disassembly:
	0x0376C7CC B 0x374F390
	0x0376C7D0 BL 0x1C16F20
	0x0376C7D4 STR X30, [X31 - 0x10]!
	0x0376C7D8 MOV X2, X0
	0x0376C7DC LDRB W8, [X2 + 0xC]!
	0x0376C7E0 CMP W8, 0x1
	0x0376C7E4 B.NE 0x376C7F0
	0x0376C7E8 LDR X30, [X31], #0x10
	0x0376C7EC RET
	0x0376C7F0 LDR X0, [X0]
	0x0376C7F4 CBZ X0, 0x376C810
	0x0376C7F8 MOVZ W1, 0x1
	0x0376C7FC MOVZ W3, 0x1
	0x0376C800 MOVZ W4, 0x1
	0x0376C804 MOV X5, X31
	0x0376C808 LDR X30, [X31], #0x10
	0x0376C80C B 0x374F390
	0x0376C810 BL 0x1C16F20
	0x0376C814 STR X30, [X31 - 0x10]!
	0x0376C818 MOV X8, X0
	0x0376C81C LDR X0, [X0]
	0x0376C820 CBZ X0, 0x376C834
	0x0376C824 ADD X1, X8, 0xC
	0x0376C828 MOV X2, X31
	0x0376C82C LDR X30, [X31], #0x10
	0x0376C830 B 0x374CD20
	0x0376C834 BL 0x1C16F20
	0x0376C838 STR X30, [X31 - 0x20]!
	0x0376C83C STP X20, X19, [X31 + 0x10]
	0x0376C840 FCMP S0, 0x0
	0x0376C844 B.LS 0x376C868
	0x0376C848 LDR X8, [X0]
	0x0376C84C CBZ X8, 0x376C8C4
	0x0376C850 LDP X20, X19, [X31 + 0x10]
	0x0376C854 ADD X1, X0, 0xC
	0x0376C858 MOV X0, X8
	0x0376C85C MOV X2, X31
	0x0376C860 LDR X30, [X31], #0x20
	0x0376C864 B 0x374F29C
	0x0376C868 ADRP X0, 0x98F000
	0x0376C86C LDR X0, [X0 + 0x578]
	0x0376C870 BL 0x1C16D08
	0x0376C874 BL 0x1C16F10
	0x0376C878 MOV X19, X0
	0x0376C87C ADRP X0, 0x9DA000
	0x0376C880 LDR X0, [X0 + 0x7C8]
	0x0376C884 BL 0x1C16D08
	0x0376C888 MOV X20, X0
	0x0376C88C ADRP X0, 0x9BE000
	0x0376C890 LDR X0, [X0 + 0xAE0]
	0x0376C894 BL 0x1C16D08
	0x0376C898 MOV X2, X0
	0x0376C89C MOV X0, X19
	0x0376C8A0 MOV X1, X20
	0x0376C8A4 MOV X3, X31
	0x0376C8A8 BL 0x330E16C
	0x0376C8AC ADRP X0, 0x9DA000
	0x0376C8B0 LDR X0, [X0 + 0x7D0]
	0x0376C8B4 BL 0x1C16D08
	0x0376C8B8 MOV X1, X0
	0x0376C8BC MOV X0, X19
	0x0376C8C0 BL 0x1C16DEC
	0x0376C8C4 BL 0x1C16F20
	0x0376C8C8 LDRB W0, [X0 + 0xE]
	0x0376C8CC RET
	0x0376C8D0 ADD X0, X0, 0xC
	0x0376C8D4 MOV X1, X31
	0x0376C8D8 B 0x374BD9C
	0x0376C8DC LDRH W0, [X0 + 0x24]
	0x0376C8E0 RET
	0x0376C8E4 ADD X0, X0, 0xC
	0x0376C8E8 MOV X1, X31
	0x0376C8EC B 0x374CB58
	0x0376C8F0 SUB X31, X31, 0x30
	0x0376C8F4 STP X30, X21, [X31 + 0x10]
	0x0376C8F8 STP X20, X19, [X31 + 0x20]
	0x0376C8FC ADRP X19, 0xC74000
	0x0376C900 ADRP X21, 0x9AF000
	0x0376C904 LDRB W8, [X19 + 0xEBD]
	0x0376C908 LDR X21, [X21 + 0x270]
	0x0376C90C MOV X20, X0
	0x0376C910 TBNZ X8, 0x0, 0x376C928
	0x0376C914 ADRP X0, 0x9AF000
	0x0376C918 LDR X0, [X0 + 0x270]
	0x0376C91C BL 0x1C16CF4
	0x0376C920 MOVZ W8, 0x1
	0x0376C924 STRB W8, [X19 + 0xEBD]
	0x0376C928 LDR X0, [X21]
	0x0376C92C LDR W8, [X0 + 0xE0]
	0x0376C930 CBNZ W8, 0x376C93C
	0x0376C934 BL 0x1C16DFC
	0x0376C938 LDR X0, [X21]
	0x0376C93C LDR X8, [X0 + 0xB8]
	0x0376C940 LDR X19, [X8]
	0x0376C944 STRB W31, [X31 + 0xC]
	0x0376C948 ADD X1, X31, 0xC
	0x0376C94C MOV X0, X19

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+40], X23
	004 Move [X31+48], X22
	005 Move [X31+56], X21
	006 Move [X31+64], X20
	007 Move [X31+72], X19
	008 Move X19, 0xC75000
	009 Move W8, [X19+3756]
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x9DB000
	016 Move X0, [X0+1880]
	017 Call 0x1C17CF4
	018 Move X0, 0x988000
	019 Move X0, [X0+2288]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X19+3756], W8
	023 Move X0, [X20]
	024 Move X1, X31
	025 Call String.IsNullOrEmpty, X0
	026 Move TEMP, X0
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfNotEqual {41}
	030 Move X9, 0x9DB000
	031 Move V0, [X20]
	032 Move X8, [X20+16]
	033 Move X9, [X9+1880]
	034 Add X1, X31, 0
	035 Move [X31], V0
	036 Move [X31+16], X8
	037 Move X0, [X9]
	038 Call 0x1C17E04
	039 Move X1, X31
	040 Call ValueType.ToString, X0
	041 Move X8, [X20+16]
	042 Compare X8, 0
	043 JumpIfEqual {105}
	044 Move X8, 0x988000
	045 Move X8, [X8+2288]
	046 Move X0, [X8]
	047 Call 0x1C17F10
	048 Move X1, X31
	049 Move X19, X0
	050 Call StringBuilder..ctor, X0
	051 Compare X19, 0
	052 JumpIfEqual {115}
	053 Move X1, [X20]
	054 Move X0, X19
	055 Move X2, X31
	056 Call StringBuilder.Append, X0, X1
	057 Move W1, 40
	058 Move X0, X19
	059 Move X2, X31
	060 Call StringBuilder.Append, X0, X1
	061 Move X21, [X20+16]
	062 Compare X21, 0
	063 JumpIfEqual {115}
	064 Move X8, [X21+24]
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Move X22, X31
	067 And X9, X8, 0
	068 Add X23, X21, 32
	069 Move W8, 1
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move X20, [X23]
	072 Move TEMP, X8
	073 And TEMP, TEMP, 1
	074 Compare TEMP, 1
	075 JumpIfEqual {80}
	076 Move W1, 44
	077 Move X0, X19
	078 Move X2, X31
	079 Call StringBuilder.Append, X0, X1
	080 Move X0, X19
	081 Move X1, X20
	082 Move X2, X31
	083 Call StringBuilder.Append, X0, X1
	084 Move W9, [X21+24]
	085 Add X22, X22, 1
	086 Move W8, W31
	087 Add X23, X23, 16
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Move W1, 41
	090 Move X0, X19
	091 Move X2, X31
	092 Call StringBuilder.Append, X0, X1
	093 Move X8, [X19]
	094 Move X0, X19
	095 Move X20, [X31+64]
	096 Move X19, [X31+72]
	097 Move X22, [X31+48]
	098 Move X21, [X31+56]
	099 Move X2, [X8+360]
	100 Move X1, [X8+368]
	101 Move X30, [X31+32]
	102 Move X23, [X31+40]
	103 Add X31, X31, 80
	104 CallNoReturn X2
	105 Move X0, [X20]
	106 Move X20, [X31+64]
	107 Move X19, [X31+72]
	108 Move X22, [X31+48]
	109 Move X21, [X31+56]
	110 Move X30, [X31+32]
	111 Move X23, [X31+40]
	112 Add X31, X31, 80
	113 Return X0
	114 Call 0x1C17F28
	115 Call 0x1C17F20

Method: System.Boolean op_Equality(UnityEngine.InputSystem.InputControlScheme left, UnityEngine.InputSystem.InputControlScheme right)

Disassembly:
	0x0376C950 MOV X2, X31
	0x0376C954 BL 0x33DE64C
	0x0376C958 LDR X0, [X21]
	0x0376C95C LDR W8, [X0 + 0xE0]
	0x0376C960 CBNZ W8, 0x376C96C
	0x0376C964 BL 0x1C16DFC
	0x0376C968 LDR X0, [X21]
	0x0376C96C LDR X8, [X0 + 0xB8]
	0x0376C970 LDR X0, [X8]
	0x0376C974 CBZ X0, 0x376C9B8
	0x0376C978 MOV X1, X20
	0x0376C97C MOV X2, X31

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+32], X30
	003 Move X8, [X1+16]
	004 Move V0, [X1]
	005 Add X1, X31, 0
	006 Move [X31+16], X8
	007 Move [X31], V0
	008 Call InputControlScheme.Equals, X0, X1
	009 Move X30, [X31+32]
	010 And W0, W0, 1
	011 Add X31, X31, 48
	012 Return X0

Method: System.Boolean op_Inequality(UnityEngine.InputSystem.InputControlScheme left, UnityEngine.InputSystem.InputControlScheme right)

Disassembly:
	0x0376C980 BL 0x37B9F90
	0x0376C984 MOV X20, X31
	0x0376C988 LDRB W8, [X31 + 0xC]
	0x0376C98C CBZ W8, 0x376C99C
	0x0376C990 MOV X0, X19
	0x0376C994 MOV X1, X31
	0x0376C998 BL 0x33E14E4
	0x0376C99C CBNZ X20, 0x376C9B0
	0x0376C9A0 LDP X20, X19, [X31 + 0x20]
	0x0376C9A4 LDP X30, X21, [X31 + 0x10]
	0x0376C9A8 ADD X31, X31, 0x30
	0x0376C9AC RET
	0x0376C9B0 MOV X0, X20

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+32], X30
	003 Move X8, [X1+16]
	004 Move V0, [X1]
	005 Add X1, X31, 0
	006 Move [X31+16], X8
	007 Move [X31], V0
	008 Call InputControlScheme.Equals, X0, X1
	009 Move X30, [X31+32]
	010 NotImplemented "Instruction ORN not yet implemented."
	011 And W0, W8, 1
	012 Add X31, X31, 48
	013 Return X0

