Type: UnityEngine.InputSystem.InputRemoting/ChangeUsageMsg

Method: UnityEngine.InputSystem.InputRemoting/Message Create(UnityEngine.InputSystem.InputDevice device)

Disassembly:
	0x037BCB98 BL 0x1C16F10
	0x037BCB9C MOV X1, X19
	0x037BCBA0 MOV X2, X31
	0x037BCBA4 MOV X20, X0
	0x037BCBA8 BL 0x3314A68
	0x037BCBAC ADRP X0, 0x98B000
	0x037BCBB0 LDR X0, [X0 + 0xD90]
	0x037BCBB4 BL 0x1C16D08
	0x037BCBB8 MOV X1, X0
	0x037BCBBC MOV X0, X20
	0x037BCBC0 BL 0x1C16DEC
	0x037BCBC4 SUB X31, X31, 0x80
	0x037BCBC8 STR X30, [X31 + 0x40]
	0x037BCBCC STP X24, X23, [X31 + 0x50]
	0x037BCBD0 STP X22, X21, [X31 + 0x60]
	0x037BCBD4 STP X20, X19, [X31 + 0x70]
	0x037BCBD8 ADRP X24, 0xC25000
	0x037BCBDC LDRB W8, [X24 + 0x1E3]
	0x037BCBE0 MOV X22, X4
	0x037BCBE4 MOV X23, X3
	0x037BCBE8 MOV X20, X2
	0x037BCBEC MOV X21, X1
	0x037BCBF0 MOV X19, X0
	0x037BCBF4 TBNZ X8, 0x0, 0x37BCC0C
	0x037BCBF8 ADRP X0, 0x98B000
	0x037BCBFC LDR X0, [X0 + 0xDB8]
	0x037BCC00 BL 0x1C16CF4
	0x037BCC04 MOVZ W8, 0x1
	0x037BCC08 STRB W8, [X24 + 0x1E3]
	0x037BCC0C MOV X0, X21
	0x037BCC10 MOV X1, X31
	0x037BCC14 BL 0x32277A8
	0x037BCC18 TBNZ X0, 0x0, 0x37BCCB8
	0x037BCC1C ADRP X24, 0x98B000
	0x037BCC20 LDR X24, [X24 + 0xDB8]
	0x037BCC24 MOV X0, X23
	0x037BCC28 MOV X1, X22
	0x037BCC2C MOV X2, X31
	0x037BCC30 BL 0x37577E0
	0x037BCC34 LDR X4, [X24]
	0x037BCC38 MOV X1, X0
	0x037BCC3C MOVI V0.2D, 0x0
	0x037BCC40 ADD X2, X31, 0x0
	0x037BCC44 MOV X0, X21
	0x037BCC48 MOV W3, W31
	0x037BCC4C STR X31, [X31 + 0x30]
	0x037BCC50 STP V0, V0, [X31 + 0x10]
	0x037BCC54 STR V0, [X31]
	0x037BCC58 BL 0x2203D94
	0x037BCC5C MOV X21, X0
	0x037BCC60 MOV X0, X20
	0x037BCC64 MOV X1, X31
	0x037BCC68 BL 0x32277A8
	0x037BCC6C TBNZ X0, 0x0, 0x37BCC90
	0x037BCC70 ADD X0, X31, 0x0
	0x037BCC74 MOV X1, X20
	0x037BCC78 MOV X2, X31
	0x037BCC7C STP X31, X31, [X31]
	0x037BCC80 BL 0x3757420
	0x037BCC84 CBZ X21, 0x37BCD00
	0x037BCC88 LDR V0, [X31]
	0x037BCC8C STR V0, [X21 + 0x2]
	0x037BCC90 MOV X0, X19
	0x037BCC94 MOV X1, X21
	0x037BCC98 BL 0x37C45C8
	0x037BCC9C MOV X0, X21
	0x037BCCA0 LDP X20, X19, [X31 + 0x70]
	0x037BCCA4 LDP X22, X21, [X31 + 0x60]
	0x037BCCA8 LDP X24, X23, [X31 + 0x50]
	0x037BCCAC LDR X30, [X31 + 0x40]
	0x037BCCB0 ADD X31, X31, 0x80
	0x037BCCB4 RET
	0x037BCCB8 ADRP X0, 0x93C000
	0x037BCCBC LDR X0, [X0 + 0x528]
	0x037BCCC0 BL 0x1C16D08
	0x037BCCC4 BL 0x1C16F10
	0x037BCCC8 MOV X19, X0
	0x037BCCCC ADRP X0, 0x98A000
	0x037BCCD0 LDR X0, [X0 + 0x8C0]
	0x037BCCD4 BL 0x1C16D08
	0x037BCCD8 MOV X1, X0
	0x037BCCDC MOV X0, X19
	0x037BCCE0 MOV X2, X31
	0x037BCCE4 BL 0x330E100
	0x037BCCE8 ADRP X0, 0x98B000
	0x037BCCEC LDR X0, [X0 + 0xDC0]
	0x037BCCF0 BL 0x1C16D08
	0x037BCCF4 MOV X1, X0
	0x037BCCF8 MOV X0, X19
	0x037BCCFC BL 0x1C16DEC
	0x037BCD00 BL 0x1C16F20
	0x037BCD04 SUB X31, X31, 0x30
	0x037BCD08 STP X30, X21, [X31 + 0x10]
	0x037BCD0C STP X20, X19, [X31 + 0x20]
	0x037BCD10 ADRP X21, 0xC25000
	0x037BCD14 LDRB W8, [X21 + 0x1DF]
	0x037BCD18 MOV X19, X1
	0x037BCD1C MOV X20, X0
	0x037BCD20 STP X2, X3, [X31]
	0x037BCD24 TBNZ X8, 0x0, 0x37BCD3C
	0x037BCD28 ADRP X0, 0x95F000
	0x037BCD2C LDR X0, [X0 + 0xF28]
	0x037BCD30 BL 0x1C16CF4
	0x037BCD34 MOVZ W8, 0x1

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+32], X26
	004 Move [X31+40], X25
	005 Move [X31+48], X24
	006 Move [X31+56], X23
	007 Move [X31+64], X22
	008 Move [X31+72], X21
	009 Move [X31+80], X20
	010 Move [X31+88], X19
	011 Move X19, 0xC26000
	012 Move W8, [X19+380]
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {41}
	018 Move X0, 0x98B000
	019 Move X0, [X0+1632]
	020 Call 0x1C17CF4
	021 Move X0, 0x938000
	022 Move X0, [X0+3768]
	023 Call 0x1C17CF4
	024 Move X0, 0x98B000
	025 Move X0, [X0+1640]
	026 Call 0x1C17CF4
	027 Move X0, 0x98C000
	028 Move X0, [X0+3288]
	029 Call 0x1C17CF4
	030 Move X0, 0x98C000
	031 Move X0, [X0+3264]
	032 Call 0x1C17CF4
	033 Move X0, 0x98C000
	034 Move X0, [X0+3296]
	035 Call 0x1C17CF4
	036 Move X0, 0x98C000
	037 Move X0, [X0+3304]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X19+380], W8
	041 Compare X20, 0
	042 JumpIfEqual {120}
	043 Move X21, 0x98C000
	044 Move X23, 0x98C000
	045 Move W19, [X20+224]
	046 Move X21, [X21+3264]
	047 Move X23, [X23+3304]
	048 Move X0, X20
	049 Move X1, X31
	050 Call InputControl.get_usages, X0
	051 Move X8, [X21]
	052 Move [X31], X0
	053 Move [X31+8], X1
	054 Add X1, X31, 0
	055 Move X0, X8
	056 Call 0x1C17E04
	057 Move X8, [X23]
	058 Move X20, X0
	059 Move W9, [X8+224]
	060 Compare W9, 0
	061 JumpIfNotEqual {65}
	062 Move X0, X8
	063 Call 0x1C17DFC
	064 Move X8, [X23]
	065 Move X9, [X8+184]
	066 Move X26, 0x98B000
	067 Move X25, 0x938000
	068 Move X24, 0x98C000
	069 Move X21, [X9+8]
	070 Move X26, [X26+1632]
	071 Move X25, [X25+3768]
	072 Move X24, [X24+3288]
	073 Compare X21, 0
	074 JumpIfNotEqual {97}
	075 Move W9, [X8+224]
	076 Compare W9, 0
	077 JumpIfNotEqual {81}
	078 Move X0, X8
	079 Call 0x1C17DFC
	080 Move X8, [X23]
	081 Move X9, 0x98B000
	082 Move X8, [X8+184]
	083 Move X9, [X9+1640]
	084 Move X22, [X8]
	085 Move X0, [X9]
	086 Call 0x1C17F10
	087 Move X8, 0x98C000
	088 Move X8, [X8+3296]
	089 Move X1, X22
	090 Move X3, X31
	091 Move X21, X0
	092 Move X2, [X8]
	093 Call Func`2<InternedString, Object>..ctor, X0, X1, X2
	094 Move X8, [X23]
	095 Move X8, [X8+184]
	096 Move [X8+8], X21
	097 Move X2, [X26]
	098 Move X0, X20
	099 Move X1, X21
	100 Call Enumerable.Select, X0, X1
	101 Move X1, [X25]
	102 Call Enumerable.ToArray, X0
	103 Move X2, [X24]
	104 Move X1, X0
	105 Move X0, X19
	106 Call InputRemoting.SerializeData, X0
	107 Move X20, [X31+80]
	108 Move X19, [X31+88]
	109 Move X22, [X31+64]
	110 Move X21, [X31+72]
	111 Move X24, [X31+48]
	112 Move X23, [X31+56]
	113 Move X26, [X31+32]
	114 Move X25, [X31+40]
	115 Move X30, [X31+16]
	116 Move X1, X0
	117 Move X0, 7
	118 Add X31, X31, 96
	119 Return X0
	120 Call 0x1C17F20

Method: System.Void Process(UnityEngine.InputSystem.InputRemoting receiver, UnityEngine.InputSystem.InputRemoting/Message msg)

Disassembly:
	0x037BBA70 MOV X20, X0
	0x037BBA74 CBZ X0, 0x37BBA8C
	0x037BBA78 LDR W8, [X20 + 0x18]
	0x037BBA7C CBZ W8, 0x37BBA88
	0x037BBA80 ADD X0, X20, 0x20
	0x037BBA84 B 0x37BBA8C
	0x037BBA88 MOV X0, X31
	0x037BBA8C MOV W2, W21
	0x037BBA90 MOV X1, X19
	0x037BBA94 MOV X3, X31
	0x037BBA98 BL 0x3BFF954
	0x037BBA9C MOV X1, X20
	0x037BBAA0 LDP X20, X19, [X31 + 0x20]
	0x037BBAA4 LDP X22, X21, [X31 + 0x10]
	0x037BBAA8 MOVZ X0, 0x4
	0x037BBAAC LDR X30, [X31], #0x30
	0x037BBAB0 RET
	0x037BBAB4 STP X30, X21, [X31 - 0x20]!
	0x037BBAB8 STP X20, X19, [X31 + 0x10]
	0x037BBABC LDR X8, [X0 + 0x20]
	0x037BBAC0 CBZ X8, 0x37BBAE4
	0x037BBAC4 MOV X20, X1
	0x037BBAC8 CBZ X1, 0x37BBB6C
	0x037BBACC MOV X19, X0
	0x037BBAD0 MOV X0, X20
	0x037BBAD4 MOV X1, X31
	0x037BBAD8 MOV W21, W2
	0x037BBADC BL 0x377AA10
	0x037BBAE0 TBZ X0, 0x0, 0x37BBAF0
	0x037BBAE4 LDP X20, X19, [X31 + 0x10]
	0x037BBAE8 LDP X30, X21, [X31], #0x20
	0x037BBAEC RET
	0x037BBAF0 CMP W21, 0x9
	0x037BBAF4 B.HI 0x37BBAE4
	0x037BBAF8 ADRP X9, 0xFFFFFFFFFD3DC000
	0x037BBAFC MOV W8, W21
	0x037BBB00 ADD X9, X9, 0x947
	0x037BBB04 ADR X10, 0xFFFFFFFFFFFFFFE0
	0x037BBB08 LDRB W11, [X9, X8, LSL]
	0x037BBB0C ADD X10, X10, X11, 0x2, LSL
	0x037BBB10 BR X10
	0x037BBB14 MOV X0, X20
	0x037BBB18 BL 0x37BB68C
	0x037BBB1C B 0x37BBB50
	0x037BBB20 MOV X0, X20
	0x037BBB24 BL 0x37BBB98
	0x037BBB28 B 0x37BBB50
	0x037BBB2C MOV X0, X20
	0x037BBB30 BL 0x37BBB70
	0x037BBB34 B 0x37BBB50
	0x037BBB38 MOV X0, X20
	0x037BBB3C MOV W1, W31
	0x037BBB40 B 0x37BBB4C
	0x037BBB44 MOVZ W1, 0x1
	0x037BBB48 MOV X0, X20
	0x037BBB4C BL 0x37BBD38
	0x037BBB50 MOV X3, X0
	0x037BBB54 MOV X0, X19
	0x037BBB58 LDP X20, X19, [X31 + 0x10]
	0x037BBB5C MOV X2, X1
	0x037BBB60 MOV X1, X3
	0x037BBB64 LDP X30, X21, [X31], #0x20
	0x037BBB68 B 0x37BB49C
	0x037BBB6C BL 0x1C16F20
	0x037BBB70 STR X30, [X31 - 0x10]!
	0x037BBB74 CBZ X0, 0x37BBB94
	0x037BBB78 LDR W0, [X0 + 0xE0]
	0x037BBB7C MOV X1, X31
	0x037BBB80 BL 0x3316C94
	0x037BBB84 MOV X1, X0
	0x037BBB88 MOVZ X0, 0x5
	0x037BBB8C LDR X30, [X31], #0x10
	0x037BBB90 RET
	0x037BBB94 BL 0x1C16F20
	0x037BBB98 SUB X31, X31, 0x60
	0x037BBB9C STR X30, [X31 + 0x10]
	0x037BBBA0 STP X26, X25, [X31 + 0x20]
	0x037BBBA4 STP X24, X23, [X31 + 0x30]
	0x037BBBA8 STP X22, X21, [X31 + 0x40]
	0x037BBBAC STP X20, X19, [X31 + 0x50]
	0x037BBBB0 ADRP X19, 0xC26000
	0x037BBBB4 LDRB W8, [X19 + 0x17C]
	0x037BBBB8 MOV X20, X0
	0x037BBBBC TBNZ X8, 0x0, 0x37BBC1C
	0x037BBBC0 ADRP X0, 0x98B000
	0x037BBBC4 LDR X0, [X0 + 0x660]
	0x037BBBC8 BL 0x1C16CF4
	0x037BBBCC ADRP X0, 0x938000
	0x037BBBD0 LDR X0, [X0 + 0xEB8]
	0x037BBBD4 BL 0x1C16CF4
	0x037BBBD8 ADRP X0, 0x98B000
	0x037BBBDC LDR X0, [X0 + 0x668]
	0x037BBBE0 BL 0x1C16CF4
	0x037BBBE4 ADRP X0, 0x98C000
	0x037BBBE8 LDR X0, [X0 + 0xCD8]
	0x037BBBEC BL 0x1C16CF4
	0x037BBBF0 ADRP X0, 0x98C000
	0x037BBBF4 LDR X0, [X0 + 0xCC0]
	0x037BBBF8 BL 0x1C16CF4
	0x037BBBFC ADRP X0, 0x98C000
	0x037BBC00 LDR X0, [X0 + 0xCE0]
	0x037BBC04 BL 0x1C16CF4
	0x037BBC08 ADRP X0, 0x98C000
	0x037BBC0C LDR X0, [X0 + 0xCE8]
	0x037BBC10 BL 0x1C16CF4
	0x037BBC14 MOVZ W8, 0x1
	0x037BBC18 STRB W8, [X19 + 0x17C]
	0x037BBC1C CBZ X20, 0x37BBD34
	0x037BBC20 ADRP X21, 0x98C000
	0x037BBC24 ADRP X23, 0x98C000
	0x037BBC28 LDR W19, [X20 + 0xE0]
	0x037BBC2C LDR X21, [X21 + 0xCC0]
	0x037BBC30 LDR X23, [X23 + 0xCE8]
	0x037BBC34 MOV X0, X20
	0x037BBC38 MOV X1, X31
	0x037BBC3C BL 0x3772134
	0x037BBC40 LDR X8, [X21]
	0x037BBC44 STP X0, X1, [X31]
	0x037BBC48 ADD X1, X31, 0x0
	0x037BBC4C MOV X0, X8
	0x037BBC50 BL 0x1C16E04
	0x037BBC54 LDR X8, [X23]
	0x037BBC58 MOV X20, X0
	0x037BBC5C LDR W9, [X8 + 0xE0]
	0x037BBC60 CBNZ W9, 0x37BBC70
	0x037BBC64 MOV X0, X8
	0x037BBC68 BL 0x1C16DFC
	0x037BBC6C LDR X8, [X23]
	0x037BBC70 LDR X9, [X8 + 0xB8]
	0x037BBC74 ADRP X26, 0x98B000
	0x037BBC78 ADRP X25, 0x938000
	0x037BBC7C ADRP X24, 0x98C000
	0x037BBC80 LDR X21, [X9 + 0x8]
	0x037BBC84 LDR X26, [X26 + 0x660]
	0x037BBC88 LDR X25, [X25 + 0xEB8]
	0x037BBC8C LDR X24, [X24 + 0xCD8]
	0x037BBC90 CBNZ X21, 0x37BBCE8
	0x037BBC94 LDR W9, [X8 + 0xE0]
	0x037BBC98 CBNZ W9, 0x37BBCA8
	0x037BBC9C MOV X0, X8
	0x037BBCA0 BL 0x1C16DFC
	0x037BBCA4 LDR X8, [X23]
	0x037BBCA8 ADRP X9, 0x98B000
	0x037BBCAC LDR X8, [X8 + 0xB8]
	0x037BBCB0 LDR X9, [X9 + 0x668]
	0x037BBCB4 LDR X22, [X8]
	0x037BBCB8 LDR X0, [X9]
	0x037BBCBC BL 0x1C16F10
	0x037BBCC0 ADRP X8, 0x98C000
	0x037BBCC4 LDR X8, [X8 + 0xCE0]
	0x037BBCC8 MOV X1, X22
	0x037BBCCC MOV X3, X31
	0x037BBCD0 MOV X21, X0
	0x037BBCD4 LDR X2, [X8]
	0x037BBCD8 BL 0x2D2DC94
	0x037BBCDC LDR X8, [X23]
	0x037BBCE0 LDR X8, [X8 + 0xB8]
	0x037BBCE4 STR X21, [X8 + 0x8]
	0x037BBCE8 LDR X2, [X26]
	0x037BBCEC MOV X0, X20
	0x037BBCF0 MOV X1, X21
	0x037BBCF4 BL 0x21CDD78
	0x037BBCF8 LDR X1, [X25]
	0x037BBCFC BL 0x21D577C
	0x037BBD00 LDR X2, [X24]
	0x037BBD04 MOV X1, X0
	0x037BBD08 MOV X0, X19
	0x037BBD0C BL 0x2208BFC
	0x037BBD10 LDP X20, X19, [X31 + 0x50]
	0x037BBD14 LDP X22, X21, [X31 + 0x40]
	0x037BBD18 LDP X24, X23, [X31 + 0x30]
	0x037BBD1C LDP X26, X25, [X31 + 0x20]
	0x037BBD20 LDR X30, [X31 + 0x10]
	0x037BBD24 MOV X1, X0
	0x037BBD28 MOVZ X0, 0x7
	0x037BBD2C ADD X31, X31, 0x60
	0x037BBD30 RET
	0x037BBD34 BL 0x1C16F20
	0x037BBD38 SUB X31, X31, 0x50
	0x037BBD3C STP X30, X19, [X31 + 0x40]
	0x037BBD40 MRS X19, 0xC000
	0x037BBD44 LDR X8, [X19 + 0x28]
	0x037BBD48 STR X8, [X31 + 0x38]
	0x037BBD4C STP X31, X31, [X31 + 0x20]
	0x037BBD50 STR W31, [X31 + 0x30]
	0x037BBD54 CBZ X0, 0x37BBDA8
	0x037BBD58 LDR W0, [X0 + 0xE0]
	0x037BBD5C AND W1, W1, 0x1
	0x037BBD60 ADD X8, X31, 0x8
	0x037BBD64 FMOV D0, -1
	0x037BBD68 MOV X2, X31
	0x037BBD6C BL 0x3800DD8
	0x037BBD70 LDUR V0, [X31 + 0x8]
	0x037BBD74 LDR W8, [X31 + 0x18]

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+96], X30
	003 Move [X31+112], X28
	004 Move [X31+120], X27
	005 Move [X31+128], X26
	006 Move [X31+136], X25
	007 Move [X31+144], X24
	008 Move [X31+152], X23
	009 Move [X31+160], X22
	010 Move [X31+168], X21
	011 Move [X31+176], X20
	012 Move [X31+184], X19
	013 Move X22, 0xC27000
	014 Move W8, [X22+381]
	015 Move X20, X2
	016 Move X21, X1
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {45}
	022 Move X0, 0x93A000
	023 Move X0, [X0+3152]
	024 Call 0x1C17CF4
	025 Move X0, 0x98D000
	026 Move X0, [X0+3088]
	027 Call 0x1C17CF4
	028 Move X0, 0x98D000
	029 Move X0, [X0+3096]
	030 Call 0x1C17CF4
	031 Move X0, 0x98D000
	032 Move X0, [X0+3104]
	033 Call 0x1C17CF4
	034 Move X0, 0x98D000
	035 Move X0, [X0+3112]
	036 Call 0x1C17CF4
	037 Move X0, 0x961000
	038 Move X0, [X0+3880]
	039 Call 0x1C17CF4
	040 Move X0, 0x98D000
	041 Move X0, [X0+3120]
	042 Call 0x1C17CF4
	043 Move W8, 1
	044 Move [X22+381], W8
	045 Move [X31+64], X31
	046 Move [X31+72], X31
	047 Move [X31+80], X31
	048 Move [X31+32], X31
	049 Move [X31+40], X31
	050 Compare X19, 0
	051 JumpIfEqual {194}
	052 Move X22, 0x98D000
	053 Move X22, [X22+3112]
	054 Move X0, X19
	055 Move W1, W21
	056 Call InputRemoting.FindOrCreateSenderRecord, X0, X1
	057 Move X1, [X22]
	058 Move W21, W0
	059 Move X0, X20
	060 Call InputRemoting.DeserializeData, X0
	061 Move X2, X0
	062 Move X20, X1
	063 Move X0, X19
	064 Move W1, W2
	065 Move W2, W21
	066 Call InputRemoting.TryGetDeviceByRemoteId, X0, X1, X2
	067 Compare X0, 0
	068 JumpIfEqual {179}
	069 Move X22, 0x98D000
	070 Move X26, 0x98D000
	071 Move X27, 0x98D000
	072 Move X28, 0x93A000
	073 Move X25, 0x98D000
	074 Move X22, [X22+3120]
	075 Move X26, [X26+3096]
	076 Move X27, [X27+3104]
	077 Move X28, [X28+3152]
	078 Move X25, [X25+3088]
	079 Move X1, X31
	080 Move X21, X0
	081 Call InputControl.get_usages, X0
	082 Move X9, [X22]
	083 Move [X31+48], X0
	084 Move [X31+56], X1
	085 Add X8, X31, 8
	086 Add X0, X31, 48
	087 Move X1, X9
	088 Call ReadOnlyArray`1<InternedString>.GetEnumerator, X0
	089 NotImplemented "Instruction LDUR not yet implemented."
	090 Move X8, [X31+24]
	091 Move [X31+4], V0
	092 Move [X31+80], X8
	093 Move X1, [X26]
	094 Add X0, X31, 64
	095 Call Enumerator<InternedString>.MoveNext, X0
	096 Move TEMP, X0
	097 And TEMP, TEMP, 1
	098 Compare TEMP, 1
	099 JumpIfNotEqual {133}
	100 Move X1, [X27]
	101 Add X0, X31, 64
	102 Call Enumerator<InternedString>.get_Current, X0
	103 Move X22, X0
	104 Move X23, X1
	105 Move X2, X31
	106 Call InternedString.op_Implicit, X0
	107 Move X1, X0
	108 Move X2, [X28]
	109 Move X0, X20
	110 Call Enumerable.Contains, X0, X1
	111 Move TEMP, X0
	112 And TEMP, TEMP, 1
	113 Compare TEMP, 1
	114 JumpIfEqual {93}
	115 Move X24, [X19+24]
	116 Move X0, X22
	117 Move X1, X23
	118 Move X2, X31
	119 Call InternedString.op_Implicit, X0
	120 Move X1, X0
	121 Move [X31+8], X31
	122 Move [X31+16], X31
	123 Add X0, X31, 8
	124 Move X2, X31
	125 Call InternedString..ctor, X0, X1
	126 Compare X24, 0
	127 JumpIfEqual {193}
	128 Move X2, [X31+8]
	129 Move X3, [X31+16]
	130 Move X0, X24
	131 Move X1, X21
	132 Call InputManager.RemoveDeviceUsage, X0, X1, X2
	133 Move X1, [X25]
	134 Add X0, X31, 64
	135 Call Enumerator<InternedString>.Dispose, X0
	136 Compare X20, 0
	137 JumpIfEqual {194}
	138 Move X8, [X20+24]
	139 NotImplemented "Instruction CMP not yet implemented."
	140 Move X26, 0x961000
	141 Move X26, [X26+3880]
	142 Move X24, X31
	143 And X8, X8, 0
	144 Add X25, X20, 32
	145 NotImplemented "Instruction CMP not yet implemented."
	146 Move X22, [X25]
	147 Add X0, X31, 32
	148 Move X2, X31
	149 Move X1, X22
	150 Call InternedString..ctor, X0, X1
	151 Move X0, X21
	152 Move X1, X31
	153 Call InputControl.get_usages, X0
	154 Move X2, [X31+32]
	155 Move X3, [X31+40]
	156 Move X4, [X26]
	157 Call 0x223D25C, X0, X1
	158 Move TEMP, X0
	159 And TEMP, TEMP, 1
	160 Compare TEMP, 1
	161 JumpIfEqual {176}
	162 Move X23, [X19+24]
	163 Add X0, X31, 8
	164 Move X1, X22
	165 Move X2, X31
	166 Move [X31+8], X31
	167 Move [X31+16], X31
	168 Call InternedString..ctor, X0, X1
	169 Compare X23, 0
	170 JumpIfEqual {194}
	171 Move X2, [X31+8]
	172 Move X3, [X31+16]
	173 Move X0, X23
	174 Move X1, X21
	175 Call InputManager.AddDeviceUsage, X0, X1, X2
	176 Move W8, [X20+24]
	177 Add X24, X24, 1
	178 NotImplemented "Instruction CMP not yet implemented."
	179 Move X20, [X31+176]
	180 Move X19, [X31+184]
	181 Move X22, [X31+160]
	182 Move X21, [X31+168]
	183 Move X24, [X31+144]
	184 Move X23, [X31+152]
	185 Move X26, [X31+128]
	186 Move X25, [X31+136]
	187 Move X28, [X31+112]
	188 Move X27, [X31+120]
	189 Move X30, [X31+96]
	190 Add X31, X31, 192
	191 Return 
	192 Call 0x1C17F28
	193 Call 0x1C17F20
	194 Call 0x1C17F20
	195 Move X22, X0
	196 NotImplemented "Instruction CMP not yet implemented."
	197 Move X0, X22
	198 Call 0x3EB2AD0
	199 Move X23, [X0]
	200 Call 0x3EB2AE0
	201 Move X1, [X25]
	202 Add X0, X31, 64
	203 Call Enumerator<InternedString>.Dispose, X0
	204 Compare X23, 0
	205 JumpIfEqual {136}
	206 Move X0, X23
	207 Call 0x1C17F18
	208 Move X23, X31
	209 Move X22, X0
	210 Move X1, [X25]
	211 Add X0, X31, 64
	212 Call Enumerator<InternedString>.Dispose, X0
	213 Compare X23, 0
	214 JumpIfNotEqual {217}
	215 Move X0, X22
	216 Call 0x1D2D690
	217 Move X0, X23
	218 Call 0x1C17F18
	219 Call 0x1991590

