Type: UnityEngine.InputSystem.DefaultInputActions

Method: UnityEngine.InputSystem.InputActionAsset get_asset()

Disassembly:
	0x037CEF64 LDUR X11, [X10 - 0x8]
	0x037CEF68 CMP X11, X1

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Void .ctor()

Disassembly:
	0x037CEF6C B.EQ 0x37CEF8C
	0x037CEF70 SUBS X9, X9, 0x1
	0x037CEF74 ADD X10, X10, 0x10
	0x037CEF78 B.NE 0x37CEF64
	0x037CEF7C MOVZ W2, 0x2
	0x037CEF80 MOV X0, X23
	0x037CEF84 BL 0x1C5C788
	0x037CEF88 B 0x37CEF9C
	0x037CEF8C LDR W9, [X10]
	0x037CEF90 ADD W9, W9, 0x2
	0x037CEF94 ADD X8, X8, W9, 0x4, SXTW
	0x037CEF98 ADD X0, X8, 0x138
	0x037CEF9C LDR X2, [X0 + 0x8]
	0x037CEFA0 MOV X0, X22
	0x037CEFA4 MOV X1, X23
	0x037CEFA8 MOV X3, X31
	0x037CEFAC BL 0x2A719B8
	0x037CEFB0 CBZ X21, 0x37CF4F4
	0x037CEFB4 MOV X0, X21
	0x037CEFB8 MOV X1, X22
	0x037CEFBC MOV X2, X31
	0x037CEFC0 BL 0x37349AC
	0x037CEFC4 LDR X8, [X20]
	0x037CEFC8 CBZ X8, 0x37CF4F4
	0x037CEFCC STR X19, [X8 + 0x20]
	0x037CEFD0 CBZ X19, 0x37CF024
	0x037CEFD4 LDR X0, [X25]
	0x037CEFD8 LDR X21, [X8 + 0x28]
	0x037CEFDC BL 0x1C16F10
	0x037CEFE0 LDR X8, [X19]
	0x037CEFE4 LDR X1, [X24]
	0x037CEFE8 MOV X22, X0
	0x037CEFEC LDRH W9, [X8 + 0x12E]
	0x037CEFF0 CBZ X9, 0x37CF014
	0x037CEFF4 LDR X10, [X8 + 0xB0]
	0x037CEFF8 ADD X10, X10, 0x8
	0x037CEFFC LDUR X11, [X10 - 0x8]
	0x037CF000 CMP X11, X1
	0x037CF004 B.EQ 0x37CF038
	0x037CF008 SUBS X9, X9, 0x1
	0x037CF00C ADD X10, X10, 0x10
	0x037CF010 B.NE 0x37CEFFC
	0x037CF014 MOV X0, X19
	0x037CF018 MOV W2, W31
	0x037CF01C BL 0x1C5C788
	0x037CF020 B 0x37CF044
	0x037CF024 LDP X20, X19, [X31 + 0x30]
	0x037CF028 LDP X22, X21, [X31 + 0x20]
	0x037CF02C LDP X24, X23, [X31 + 0x10]
	0x037CF030 LDP X30, X25, [X31], #0x40
	0x037CF034 RET
	0x037CF038 LDRSW X9, [X10]
	0x037CF03C ADD X8, X8, X9, 0x4, LSL
	0x037CF040 ADD X0, X8, 0x138
	0x037CF044 LDR X2, [X0 + 0x8]
	0x037CF048 MOV X0, X22
	0x037CF04C MOV X1, X19
	0x037CF050 MOV X3, X31
	0x037CF054 BL 0x2A719B8
	0x037CF058 CBZ X21, 0x37CF4F4
	0x037CF05C MOV X0, X21
	0x037CF060 MOV X1, X22
	0x037CF064 MOV X2, X31
	0x037CF068 BL 0x37348A4
	0x037CF06C LDR X8, [X20]
	0x037CF070 CBZ X8, 0x37CF4F4
	0x037CF074 LDR X0, [X25]
	0x037CF078 LDR X21, [X8 + 0x28]
	0x037CF07C BL 0x1C16F10
	0x037CF080 LDR X8, [X19]
	0x037CF084 LDR X1, [X24]
	0x037CF088 MOV X22, X0
	0x037CF08C LDRH W9, [X8 + 0x12E]
	0x037CF090 CBZ X9, 0x37CF0B4
	0x037CF094 LDR X10, [X8 + 0xB0]
	0x037CF098 ADD X10, X10, 0x8
	0x037CF09C LDUR X11, [X10 - 0x8]
	0x037CF0A0 CMP X11, X1
	0x037CF0A4 B.EQ 0x37CF0C4
	0x037CF0A8 SUBS X9, X9, 0x1
	0x037CF0AC ADD X10, X10, 0x10
	0x037CF0B0 B.NE 0x37CF09C
	0x037CF0B4 MOV X0, X19
	0x037CF0B8 MOV W2, W31
	0x037CF0BC BL 0x1C5C788
	0x037CF0C0 B 0x37CF0D0
	0x037CF0C4 LDRSW X9, [X10]
	0x037CF0C8 ADD X8, X8, X9, 0x4, LSL
	0x037CF0CC ADD X0, X8, 0x138
	0x037CF0D0 LDR X2, [X0 + 0x8]
	0x037CF0D4 MOV X0, X22
	0x037CF0D8 MOV X1, X19
	0x037CF0DC MOV X3, X31
	0x037CF0E0 BL 0x2A719B8
	0x037CF0E4 CBZ X21, 0x37CF4F4
	0x037CF0E8 MOV X0, X21
	0x037CF0EC MOV X1, X22
	0x037CF0F0 MOV X2, X31
	0x037CF0F4 BL 0x3734A04
	0x037CF0F8 LDR X8, [X20]
	0x037CF0FC CBZ X8, 0x37CF4F4
	0x037CF100 LDR X0, [X25]
	0x037CF104 LDR X21, [X8 + 0x28]
	0x037CF108 BL 0x1C16F10
	0x037CF10C LDR X8, [X19]
	0x037CF110 LDR X1, [X24]
	0x037CF114 MOV X22, X0
	0x037CF118 LDRH W9, [X8 + 0x12E]
	0x037CF11C CBZ X9, 0x37CF140
	0x037CF120 LDR X10, [X8 + 0xB0]
	0x037CF124 ADD X10, X10, 0x8
	0x037CF128 LDUR X11, [X10 - 0x8]
	0x037CF12C CMP X11, X1
	0x037CF130 B.EQ 0x37CF150
	0x037CF134 SUBS X9, X9, 0x1
	0x037CF138 ADD X10, X10, 0x10
	0x037CF13C B.NE 0x37CF128
	0x037CF140 MOV X0, X19
	0x037CF144 MOV W2, W31
	0x037CF148 BL 0x1C5C788
	0x037CF14C B 0x37CF15C
	0x037CF150 LDRSW X9, [X10]
	0x037CF154 ADD X8, X8, X9, 0x4, LSL
	0x037CF158 ADD X0, X8, 0x138
	0x037CF15C LDR X2, [X0 + 0x8]
	0x037CF160 MOV X0, X22
	0x037CF164 MOV X1, X19
	0x037CF168 MOV X3, X31
	0x037CF16C BL 0x2A719B8
	0x037CF170 CBZ X21, 0x37CF4F4
	0x037CF174 MOV X0, X21
	0x037CF178 MOV X1, X22
	0x037CF17C MOV X2, X31
	0x037CF180 BL 0x3734954
	0x037CF184 LDR X8, [X20]
	0x037CF188 CBZ X8, 0x37CF4F4
	0x037CF18C LDR X0, [X25]
	0x037CF190 LDR X21, [X8 + 0x30]
	0x037CF194 BL 0x1C16F10
	0x037CF198 LDR X8, [X19]
	0x037CF19C LDR X1, [X24]
	0x037CF1A0 MOV X22, X0
	0x037CF1A4 LDRH W9, [X8 + 0x12E]
	0x037CF1A8 CBZ X9, 0x37CF1CC
	0x037CF1AC LDR X10, [X8 + 0xB0]
	0x037CF1B0 ADD X10, X10, 0x8
	0x037CF1B4 LDUR X11, [X10 - 0x8]
	0x037CF1B8 CMP X11, X1
	0x037CF1BC B.EQ 0x37CF1DC
	0x037CF1C0 SUBS X9, X9, 0x1
	0x037CF1C4 ADD X10, X10, 0x10
	0x037CF1C8 B.NE 0x37CF1B4
	0x037CF1CC MOVZ W2, 0x1
	0x037CF1D0 MOV X0, X19
	0x037CF1D4 BL 0x1C5C788
	0x037CF1D8 B 0x37CF1EC
	0x037CF1DC LDR W9, [X10]
	0x037CF1E0 ADD W9, W9, 0x1
	0x037CF1E4 ADD X8, X8, W9, 0x4, SXTW
	0x037CF1E8 ADD X0, X8, 0x138
	0x037CF1EC LDR X2, [X0 + 0x8]
	0x037CF1F0 MOV X0, X22
	0x037CF1F4 MOV X1, X19
	0x037CF1F8 MOV X3, X31
	0x037CF1FC BL 0x2A719B8
	0x037CF200 CBZ X21, 0x37CF4F4
	0x037CF204 MOV X0, X21
	0x037CF208 MOV X1, X22
	0x037CF20C MOV X2, X31
	0x037CF210 BL 0x37348A4
	0x037CF214 LDR X8, [X20]
	0x037CF218 CBZ X8, 0x37CF4F4
	0x037CF21C LDR X0, [X25]
	0x037CF220 LDR X21, [X8 + 0x30]
	0x037CF224 BL 0x1C16F10
	0x037CF228 LDR X8, [X19]
	0x037CF22C LDR X1, [X24]
	0x037CF230 MOV X22, X0
	0x037CF234 LDRH W9, [X8 + 0x12E]
	0x037CF238 CBZ X9, 0x37CF25C
	0x037CF23C LDR X10, [X8 + 0xB0]
	0x037CF240 ADD X10, X10, 0x8
	0x037CF244 LDUR X11, [X10 - 0x8]
	0x037CF248 CMP X11, X1
	0x037CF24C B.EQ 0x37CF26C
	0x037CF250 SUBS X9, X9, 0x1
	0x037CF254 ADD X10, X10, 0x10
	0x037CF258 B.NE 0x37CF244
	0x037CF25C MOVZ W2, 0x1
	0x037CF260 MOV X0, X19
	0x037CF264 BL 0x1C5C788
	0x037CF268 B 0x37CF27C
	0x037CF26C LDR W9, [X10]
	0x037CF270 ADD W9, W9, 0x1
	0x037CF274 ADD X8, X8, W9, 0x4, SXTW
	0x037CF278 ADD X0, X8, 0x138
	0x037CF27C LDR X2, [X0 + 0x8]
	0x037CF280 MOV X0, X22
	0x037CF284 MOV X1, X19
	0x037CF288 MOV X3, X31
	0x037CF28C BL 0x2A719B8
	0x037CF290 CBZ X21, 0x37CF4F4
	0x037CF294 MOV X0, X21
	0x037CF298 MOV X1, X22
	0x037CF29C MOV X2, X31
	0x037CF2A0 BL 0x3734A04
	0x037CF2A4 LDR X8, [X20]
	0x037CF2A8 CBZ X8, 0x37CF4F4
	0x037CF2AC LDR X0, [X25]
	0x037CF2B0 LDR X21, [X8 + 0x30]
	0x037CF2B4 BL 0x1C16F10
	0x037CF2B8 LDR X8, [X19]
	0x037CF2BC LDR X1, [X24]
	0x037CF2C0 MOV X22, X0
	0x037CF2C4 LDRH W9, [X8 + 0x12E]
	0x037CF2C8 CBZ X9, 0x37CF2EC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xC14000
	006 Move X20, 0x97B000
	007 Move W8, [X21+574]
	008 Move X20, [X20+2144]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {64}
	014 Move X0, 0x97B000
	015 Move X0, [X0+2144]
	016 Call 0x1C17CF4
	017 Move X0, 0x97B000
	018 Move X0, [X0+2152]
	019 Call 0x1C17CF4
	020 Move X0, 0x979000
	021 Move X0, [X0+2744]
	022 Call 0x1C17CF4
	023 Move X0, 0x97B000
	024 Move X0, [X0+2160]
	025 Call 0x1C17CF4
	026 Move X0, 0x97B000
	027 Move X0, [X0+2168]
	028 Call 0x1C17CF4
	029 Move X0, 0x97B000
	030 Move X0, [X0+2176]
	031 Call 0x1C17CF4
	032 Move X0, 0x96A000
	033 Move X0, [X0+2824]
	034 Call 0x1C17CF4
	035 Move X0, 0x97B000
	036 Move X0, [X0+2184]
	037 Call 0x1C17CF4
	038 Move X0, 0x97B000
	039 Move X0, [X0+2192]
	040 Call 0x1C17CF4
	041 Move X0, 0x97B000
	042 Move X0, [X0+2200]
	043 Call 0x1C17CF4
	044 Move X0, 0x978000
	045 Move X0, [X0+2816]
	046 Call 0x1C17CF4
	047 Move X0, 0x97A000
	048 Move X0, [X0+2208]
	049 Call 0x1C17CF4
	050 Move X0, 0x97A000
	051 Move X0, [X0+2216]
	052 Call 0x1C17CF4
	053 Move X0, 0x97A000
	054 Move X0, [X0+2224]
	055 Call 0x1C17CF4
	056 Move X0, 0x97A000
	057 Move X0, [X0+2232]
	058 Call 0x1C17CF4
	059 Move X0, 0x97A000
	060 Move X0, [X0+2240]
	061 Call 0x1C17CF4
	062 Move W8, 1
	063 Move [X21+574], W8
	064 Move TEMP, 0
	065 Not TEMP
	066 Move X8, TEMP
	067 Move X0, X19
	068 Move X1, X31
	069 Move [X19+160], X8
	070 Move [X19+168], X8
	071 Move [X19+176], W8
	072 Call Object..ctor, X0
	073 Move X0, [X20]
	074 Move X1, X31
	075 Call InputActionAsset.FromJson, X0
	076 Move [X19+16], X0
	077 Compare X0, 0
	078 JumpIfEqual {241}
	079 Move X8, 0x97A000
	080 Move X8, [X8+2224]
	081 Move W2, 1
	082 Move X3, X31
	083 Move X1, [X8]
	084 Call InputActionAsset.FindActionMap, X0, X1, X2
	085 Move [X19+24], X0
	086 Compare X0, 0
	087 JumpIfEqual {241}
	088 Move X8, 0x97A000
	089 Move X8, [X8+2160]
	090 Move W2, 1
	091 Move X3, X31
	092 Move X1, [X8]
	093 Call InputActionMap.FindAction, X0, X1, X2
	094 Move X8, [X19+24]
	095 Move [X19+40], X0
	096 Compare X8, 0
	097 JumpIfEqual {241}
	098 Move X9, 0x97A000
	099 Move X9, [X9+2240]
	100 Move W2, 1
	101 Move X0, X8
	102 Move X3, X31
	103 Move X1, [X9]
	104 Call InputActionMap.FindAction, X0, X1, X2
	105 Move X8, [X19+24]
	106 Move [X19+48], X0
	107 Compare X8, 0
	108 JumpIfEqual {241}
	109 Move X9, 0x97A000
	110 Move X9, [X9+2232]
	111 Move W2, 1
	112 Move X0, X8
	113 Move X3, X31
	114 Move X1, [X9]
	115 Call InputActionMap.FindAction, X0, X1, X2
	116 Move X8, [X19+16]
	117 Move [X19+56], X0
	118 Compare X8, 0
	119 JumpIfEqual {241}
	120 Move X9, 0x97A000
	121 Move X9, [X9+2208]
	122 Move W2, 1
	123 Move X0, X8
	124 Move X3, X31
	125 Move X1, [X9]
	126 Call InputActionAsset.FindActionMap, X0, X1, X2
	127 Move [X19+64], X0
	128 Compare X0, 0
	129 JumpIfEqual {241}
	130 Move X8, 0x97A000
	131 Move X8, [X8+2152]
	132 Move W2, 1
	133 Move X3, X31
	134 Move X1, [X8]
	135 Call InputActionMap.FindAction, X0, X1, X2
	136 Move X8, [X19+64]
	137 Move [X19+80], X0
	138 Compare X8, 0
	139 JumpIfEqual {241}
	140 Move X9, 0x978000
	141 Move X9, [X9+2744]
	142 Move W2, 1
	143 Move X0, X8
	144 Move X3, X31
	145 Move X1, [X9]
	146 Call InputActionMap.FindAction, X0, X1, X2
	147 Move X8, [X19+64]
	148 Move [X19+88], X0
	149 Compare X8, 0
	150 JumpIfEqual {241}
	151 Move X9, 0x969000
	152 Move X9, [X9+2824]
	153 Move W2, 1
	154 Move X0, X8
	155 Move X3, X31
	156 Move X1, [X9]
	157 Call InputActionMap.FindAction, X0, X1, X2
	158 Move X8, [X19+64]
	159 Move [X19+96], X0
	160 Compare X8, 0
	161 JumpIfEqual {241}
	162 Move X9, 0x978000
	163 Move X9, [X9+2816]
	164 Move W2, 1
	165 Move X0, X8
	166 Move X3, X31
	167 Move X1, [X9]
	168 Call InputActionMap.FindAction, X0, X1, X2
	169 Move X8, [X19+64]
	170 Move [X19+104], X0
	171 Compare X8, 0
	172 JumpIfEqual {241}
	173 Move X9, 0x97A000
	174 Move X9, [X9+2168]
	175 Move W2, 1
	176 Move X0, X8
	177 Move X3, X31
	178 Move X1, [X9]
	179 Call InputActionMap.FindAction, X0, X1, X2
	180 Move X8, [X19+64]
	181 Move [X19+112], X0
	182 Compare X8, 0
	183 JumpIfEqual {241}
	184 Move X9, 0x97A000
	185 Move X9, [X9+2200]
	186 Move W2, 1
	187 Move X0, X8
	188 Move X3, X31
	189 Move X1, [X9]
	190 Call InputActionMap.FindAction, X0, X1, X2
	191 Move X8, [X19+64]
	192 Move [X19+120], X0
	193 Compare X8, 0
	194 JumpIfEqual {241}
	195 Move X9, 0x97A000
	196 Move X9, [X9+2192]
	197 Move W2, 1
	198 Move X0, X8
	199 Move X3, X31
	200 Move X1, [X9]
	201 Call InputActionMap.FindAction, X0, X1, X2
	202 Move X8, [X19+64]
	203 Move [X19+128], X0
	204 Compare X8, 0
	205 JumpIfEqual {241}
	206 Move X9, 0x97A000
	207 Move X9, [X9+2176]
	208 Move W2, 1
	209 Move X0, X8
	210 Move X3, X31
	211 Move X1, [X9]
	212 Call InputActionMap.FindAction, X0, X1, X2
	213 Move X8, [X19+64]
	214 Move [X19+136], X0
	215 Compare X8, 0
	216 JumpIfEqual {241}
	217 Move X9, 0x97A000
	218 Move X9, [X9+2184]
	219 Move W2, 1
	220 Move X0, X8
	221 Move X3, X31
	222 Move X1, [X9]
	223 Call InputActionMap.FindAction, X0, X1, X2
	224 Move X8, [X19+64]
	225 Move [X19+144], X0
	226 Compare X8, 0
	227 JumpIfEqual {241}
	228 Move X9, 0x97A000
	229 Move X9, [X9+2216]
	230 Move W2, 1
	231 Move X0, X8
	232 Move X3, X31
	233 Move X1, [X9]
	234 Call InputActionMap.FindAction, X0, X1, X2
	235 Move [X19+152], X0
	236 Move X20, [X31+16]
	237 Move X19, [X31+24]
	238 Move X30, [X31+32]
	239 Move X21, [X31+40]
	240 Return 
	241 Call 0x1C17F20

Method: System.Void Dispose()

Disassembly:
	0x037CF2CC LDR X10, [X8 + 0xB0]
	0x037CF2D0 ADD X10, X10, 0x8
	0x037CF2D4 LDUR X11, [X10 - 0x8]
	0x037CF2D8 CMP X11, X1
	0x037CF2DC B.EQ 0x37CF2FC
	0x037CF2E0 SUBS X9, X9, 0x1
	0x037CF2E4 ADD X10, X10, 0x10
	0x037CF2E8 B.NE 0x37CF2D4
	0x037CF2EC MOVZ W2, 0x1
	0x037CF2F0 MOV X0, X19
	0x037CF2F4 BL 0x1C5C788
	0x037CF2F8 B 0x37CF30C
	0x037CF2FC LDR W9, [X10]
	0x037CF300 ADD W9, W9, 0x1
	0x037CF304 ADD X8, X8, W9, 0x4, SXTW
	0x037CF308 ADD X0, X8, 0x138
	0x037CF30C LDR X2, [X0 + 0x8]
	0x037CF310 MOV X0, X22
	0x037CF314 MOV X1, X19
	0x037CF318 MOV X3, X31
	0x037CF31C BL 0x2A719B8
	0x037CF320 CBZ X21, 0x37CF4F4
	0x037CF324 MOV X0, X21

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xC13000
	006 Move X20, 0x925000
	007 Move W8, [X21+575]
	008 Move X20, [X20+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x925000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+575], W8
	019 Move X0, [X20]
	020 Move X19, [X19+16]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X0, X19
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X1, X31
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Call Object.Destroy, X0
	032 Return 

Method: System.Nullable`1<UnityEngine.InputSystem.InputBinding> get_bindingMask()

Disassembly:
	0x037CF328 MOV X1, X22
	0x037CF32C MOV X2, X31
	0x037CF330 BL 0x3734954
	0x037CF334 LDR X8, [X20]
	0x037CF338 CBZ X8, 0x37CF4F4
	0x037CF33C LDR X0, [X25]
	0x037CF340 LDR X21, [X8 + 0x38]
	0x037CF344 BL 0x1C16F10
	0x037CF348 LDR X8, [X19]
	0x037CF34C LDR X1, [X24]

ISIL:
	001 Move [X31-16], X30
	002 Move X9, [X0+16]
	003 Compare X9, 0
	004 JumpIfEqual {11}
	005 Add X1, X9, 48
	006 Move W2, 96
	007 Move X0, X8
	008 Call 0x3EB2AC0
	009 Move X30, [X31+16]
	010 Return X0
	011 Call 0x1C17F20

Method: System.Void set_bindingMask(System.Nullable`1<UnityEngine.InputSystem.InputBinding> value)

Disassembly:
	0x037CF350 MOV X22, X0
	0x037CF354 LDRH W9, [X8 + 0x12E]
	0x037CF358 CBZ X9, 0x37CF37C
	0x037CF35C LDR X10, [X8 + 0xB0]
	0x037CF360 ADD X10, X10, 0x8
	0x037CF364 LDUR X11, [X10 - 0x8]
	0x037CF368 CMP X11, X1
	0x037CF36C B.EQ 0x37CF38C
	0x037CF370 SUBS X9, X9, 0x1
	0x037CF374 ADD X10, X10, 0x10
	0x037CF378 B.NE 0x37CF364
	0x037CF37C MOVZ W2, 0x2
	0x037CF380 MOV X0, X19
	0x037CF384 BL 0x1C5C788
	0x037CF388 B 0x37CF39C
	0x037CF38C LDR W9, [X10]
	0x037CF390 ADD W9, W9, 0x2
	0x037CF394 ADD X8, X8, W9, 0x4, SXTW
	0x037CF398 ADD X0, X8, 0x138

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+192], X30
	003 Move [X31+200], X19
	004 Move X19, [X0+16]
	005 Add X0, X31, 96
	006 Move W2, 96
	007 Call 0x3EB2AC0
	008 Compare X19, 0
	009 JumpIfEqual {22}
	010 Add X0, X31, 0
	011 Add X1, X31, 96
	012 Move W2, 96
	013 Call 0x3EB2AC0
	014 Add X1, X31, 0
	015 Move X0, X19
	016 Move X2, X31
	017 Call InputActionAsset.set_bindingMask, X0, X1
	018 Move X30, [X31+192]
	019 Move X19, [X31+200]
	020 Add X31, X31, 208
	021 Return 
	022 Call 0x1C17F20

Method: System.Nullable`1<UnityEngine.InputSystem.Utilities.ReadOnlyArray`1<UnityEngine.InputSystem.InputDevice>> get_devices()

Disassembly:
	0x037CF39C LDR X2, [X0 + 0x8]
	0x037CF3A0 MOV X0, X22
	0x037CF3A4 MOV X1, X19
	0x037CF3A8 MOV X3, X31
	0x037CF3AC BL 0x2A719B8
	0x037CF3B0 CBZ X21, 0x37CF4F4
	0x037CF3B4 MOV X0, X21
	0x037CF3B8 MOV X1, X22
	0x037CF3BC MOV X2, X31
	0x037CF3C0 BL 0x37348A4
	0x037CF3C4 LDR X8, [X20]
	0x037CF3C8 CBZ X8, 0x37CF4F4
	0x037CF3CC LDR X0, [X25]
	0x037CF3D0 LDR X21, [X8 + 0x38]
	0x037CF3D4 BL 0x1C16F10
	0x037CF3D8 LDR X8, [X19]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+32], X30
	003 Move [X31+40], X19
	004 Move X0, [X0+16]
	005 Compare X0, 0
	006 JumpIfEqual {19}
	007 Move X19, X8
	008 Add X8, X31, 8
	009 Move X1, X31
	010 Call InputActionAsset.get_devices, X0
	011 Move X8, [X31+24]
	012 NotImplemented "Instruction LDUR not yet implemented."
	013 Move [X19+16], X8
	014 Move [X19], V0
	015 Move X30, [X31+32]
	016 Move X19, [X31+40]
	017 Add X31, X31, 48
	018 Return X0
	019 Call 0x1C17F20

Method: System.Void set_devices(System.Nullable`1<UnityEngine.InputSystem.Utilities.ReadOnlyArray`1<UnityEngine.InputSystem.InputDevice>> value)

Disassembly:
	0x037CF3DC LDR X1, [X24]
	0x037CF3E0 MOV X22, X0
	0x037CF3E4 LDRH W9, [X8 + 0x12E]
	0x037CF3E8 CBZ X9, 0x37CF40C
	0x037CF3EC LDR X10, [X8 + 0xB0]
	0x037CF3F0 ADD X10, X10, 0x8
	0x037CF3F4 LDUR X11, [X10 - 0x8]
	0x037CF3F8 CMP X11, X1
	0x037CF3FC B.EQ 0x37CF41C
	0x037CF400 SUBS X9, X9, 0x1
	0x037CF404 ADD X10, X10, 0x10
	0x037CF408 B.NE 0x37CF3F4
	0x037CF40C MOVZ W2, 0x2
	0x037CF410 MOV X0, X19
	0x037CF414 BL 0x1C5C788
	0x037CF418 B 0x37CF42C
	0x037CF41C LDR W9, [X10]
	0x037CF420 ADD W9, W9, 0x2
	0x037CF424 ADD X8, X8, W9, 0x4, SXTW

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+64], X30
	003 Move X0, [X0+16]
	004 Move X8, [X1+16]
	005 Move V0, [X1]
	006 Move [X31+48], X8
	007 Move [X31+2], V0
	008 Compare X0, 0
	009 JumpIfEqual {20}
	010 Move V0, [X31+2]
	011 Move X8, [X31+48]
	012 Add X1, X31, 0
	013 Move X2, X31
	014 Move [X31], V0
	015 Move [X31+16], X8
	016 Call InputActionAsset.set_devices, X0, X1
	017 Move X30, [X31+64]
	018 Add X31, X31, 80
	019 Return 
	020 Call 0x1C17F20

Method: UnityEngine.InputSystem.Utilities.ReadOnlyArray`1<UnityEngine.InputSystem.InputControlScheme> get_controlSchemes()

Disassembly:
	0x037CF428 ADD X0, X8, 0x138
	0x037CF42C LDR X2, [X0 + 0x8]
	0x037CF430 MOV X0, X22
	0x037CF434 MOV X1, X19
	0x037CF438 MOV X3, X31
	0x037CF43C BL 0x2A719B8
	0x037CF440 CBZ X21, 0x37CF4F4

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+16]
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move X1, X31
	006 Move X30, [X31+16]
	007 Call InputActionAsset.get_controlSchemes, X0
	008 Return X0
	009 Call 0x1C17F20

Method: System.Boolean Contains(UnityEngine.InputSystem.InputAction action)

Disassembly:
	0x037CF444 MOV X0, X21
	0x037CF448 MOV X1, X22
	0x037CF44C MOV X2, X31
	0x037CF450 BL 0x3734A04
	0x037CF454 LDR X8, [X20]
	0x037CF458 CBZ X8, 0x37CF4F4
	0x037CF45C LDR X0, [X25]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+16]
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move X2, X31
	006 Move X30, [X31+16]
	007 Call InputActionAsset.Contains, X0, X1
	008 Return X0
	009 Call 0x1C17F20

Method: System.Collections.Generic.IEnumerator`1<UnityEngine.InputSystem.InputAction> GetEnumerator()

Disassembly:
	0x037CF460 LDR X20, [X8 + 0x38]
	0x037CF464 BL 0x1C16F10
	0x037CF468 LDR X8, [X19]
	0x037CF46C LDR X1, [X24]
	0x037CF470 MOV X21, X0
	0x037CF474 LDRH W9, [X8 + 0x12E]
	0x037CF478 CBZ X9, 0x37CF49C

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+16]
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move X1, X31
	006 Move X30, [X31+16]
	007 Call InputActionAsset.GetEnumerator, X0
	008 Return X0
	009 Call 0x1C17F20

Method: System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()

Disassembly:
	0x037CF47C LDR X10, [X8 + 0xB0]
	0x037CF480 ADD X10, X10, 0x8
	0x037CF484 LDUR X11, [X10 - 0x8]
	0x037CF488 CMP X11, X1
	0x037CF48C B.EQ 0x37CF4AC
	0x037CF490 SUBS X9, X9, 0x1
	0x037CF494 ADD X10, X10, 0x10

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+16]
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move X1, X31
	006 Move X30, [X31+16]
	007 Call InputActionAsset.GetEnumerator, X0
	008 Return X0
	009 Call 0x1C17F20

Method: System.Void Enable()

Disassembly:
	0x037CF498 B.NE 0x37CF484
	0x037CF49C MOVZ W2, 0x2
	0x037CF4A0 MOV X0, X19
	0x037CF4A4 BL 0x1C5C788
	0x037CF4A8 B 0x37CF4BC
	0x037CF4AC LDR W9, [X10]
	0x037CF4B0 ADD W9, W9, 0x2

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+16]
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move X1, X31
	006 Move X30, [X31+16]
	007 Call InputActionAsset.Enable, X0
	008 Return 
	009 Call 0x1C17F20

Method: System.Void Disable()

Disassembly:
	0x037CF4B4 ADD X8, X8, W9, 0x4, SXTW
	0x037CF4B8 ADD X0, X8, 0x138
	0x037CF4BC LDR X2, [X0 + 0x8]
	0x037CF4C0 MOV X0, X21
	0x037CF4C4 MOV X1, X19
	0x037CF4C8 MOV X3, X31
	0x037CF4CC BL 0x2A719B8

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+16]
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move X1, X31
	006 Move X30, [X31+16]
	007 Call InputActionAsset.Disable, X0
	008 Return 
	009 Call 0x1C17F20

Method: System.Collections.Generic.IEnumerable`1<UnityEngine.InputSystem.InputBinding> get_bindings()

Disassembly:
	0x037CF4D0 CBZ X20, 0x37CF4F4
	0x037CF4D4 MOV X0, X20
	0x037CF4D8 MOV X1, X21
	0x037CF4DC LDP X20, X19, [X31 + 0x30]
	0x037CF4E0 LDP X22, X21, [X31 + 0x20]
	0x037CF4E4 LDP X24, X23, [X31 + 0x10]
	0x037CF4E8 MOV X2, X31

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+16]
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move X1, X31
	006 Move X30, [X31+16]
	007 Call InputActionAsset.get_bindings, X0
	008 Return X0
	009 Call 0x1C17F20

Method: UnityEngine.InputSystem.InputAction FindAction(System.String actionNameOrId, System.Boolean throwIfNotFound = False)

Disassembly:
	0x037CF4EC LDP X30, X25, [X31], #0x40
	0x037CF4F0 B 0x3734954
	0x037CF4F4 BL 0x1C16F20
	0x037CF4F8 STR X1, [X0]
	0x037CF4FC RET
	0x037CF500 STR X30, [X31 - 0x10]!
	0x037CF504 LDR X8, [X0]
	0x037CF508 CBZ X8, 0x37CF518

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+16]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 And W2, W2, 1
	006 Move X3, X31
	007 Move X30, [X31+16]
	008 Call InputActionAsset.FindAction, X0, X1, X2
	009 Return X0
	010 Call 0x1C17F20

Method: System.Int32 FindBinding(UnityEngine.InputSystem.InputBinding bindingMask, out UnityEngine.InputSystem.InputAction action)

Disassembly:
	0x037CF50C LDR X0, [X8 + 0x50]
	0x037CF510 LDR X30, [X31], #0x10
	0x037CF514 RET
	0x037CF518 BL 0x1C16F20
	0x037CF51C STR X30, [X31 - 0x10]!
	0x037CF520 LDR X8, [X0]
	0x037CF524 CBZ X8, 0x37CF534
	0x037CF528 LDR X0, [X8 + 0x58]
	0x037CF52C LDR X30, [X31], #0x10
	0x037CF530 RET
	0x037CF534 BL 0x1C16F20
	0x037CF538 STR X30, [X31 - 0x10]!
	0x037CF53C LDR X8, [X0]
	0x037CF540 CBZ X8, 0x37CF550
	0x037CF544 LDR X0, [X8 + 0x60]
	0x037CF548 LDR X30, [X31], #0x10
	0x037CF54C RET
	0x037CF550 BL 0x1C16F20
	0x037CF554 STR X30, [X31 - 0x10]!
	0x037CF558 LDR X8, [X0]
	0x037CF55C CBZ X8, 0x37CF56C
	0x037CF560 LDR X0, [X8 + 0x68]
	0x037CF564 LDR X30, [X31], #0x10

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+176], X30
	003 Move [X31+192], X20
	004 Move [X31+200], X19
	005 Move X20, [X0+16]
	006 Move X19, X2
	007 Add X0, X31, 88
	008 Move W2, 88
	009 Call 0x3EB2AC0
	010 Compare X20, 0
	011 JumpIfEqual {26}
	012 Add X0, X31, 0
	013 Add X1, X31, 88
	014 Move W2, 88
	015 Call 0x3EB2AC0
	016 Add X1, X31, 0
	017 Move X0, X20
	018 Move X2, X19
	019 Move X3, X31
	020 Call InputActionAsset.FindBinding, X0, X1, X2
	021 Move X20, [X31+192]
	022 Move X19, [X31+200]
	023 Move X30, [X31+176]
	024 Add X31, X31, 208
	025 Return X0
	026 Call 0x1C17F20

Method: UnityEngine.InputSystem.DefaultInputActions/PlayerActions get_Player()

Disassembly:
	0x037CF568 RET

ISIL:
	001 Return X0

Method: UnityEngine.InputSystem.DefaultInputActions/UIActions get_UI()

Disassembly:
	0x037CF56C BL 0x1C16F20

ISIL:
	001 Return X0

Method: UnityEngine.InputSystem.InputControlScheme get_KeyboardMouseScheme()

Disassembly:
	0x037CF570 STR X30, [X31 - 0x10]!
	0x037CF574 LDR X8, [X0]
	0x037CF578 CBZ X8, 0x37CF588
	0x037CF57C LDR X0, [X8 + 0x70]
	0x037CF580 LDR X30, [X31], #0x10
	0x037CF584 RET
	0x037CF588 BL 0x1C16F20
	0x037CF58C STR X30, [X31 - 0x10]!
	0x037CF590 LDR X8, [X0]
	0x037CF594 CBZ X8, 0x37CF5A4
	0x037CF598 LDR X0, [X8 + 0x78]
	0x037CF59C LDR X30, [X31], #0x10
	0x037CF5A0 RET
	0x037CF5A4 BL 0x1C16F20
	0x037CF5A8 STR X30, [X31 - 0x10]!
	0x037CF5AC LDR X8, [X0]
	0x037CF5B0 CBZ X8, 0x37CF5C0
	0x037CF5B4 LDR X0, [X8 + 0x80]
	0x037CF5B8 LDR X30, [X31], #0x10
	0x037CF5BC RET
	0x037CF5C0 BL 0x1C16F20
	0x037CF5C4 STR X30, [X31 - 0x10]!
	0x037CF5C8 LDR X8, [X0]
	0x037CF5CC CBZ X8, 0x37CF5DC
	0x037CF5D0 LDR X0, [X8 + 0x88]
	0x037CF5D4 LDR X30, [X31], #0x10
	0x037CF5D8 RET
	0x037CF5DC BL 0x1C16F20
	0x037CF5E0 STR X30, [X31 - 0x10]!
	0x037CF5E4 LDR X8, [X0]
	0x037CF5E8 CBZ X8, 0x37CF5F8
	0x037CF5EC LDR X0, [X8 + 0x90]
	0x037CF5F0 LDR X30, [X31], #0x10
	0x037CF5F4 RET
	0x037CF5F8 BL 0x1C16F20
	0x037CF5FC STR X30, [X31 - 0x10]!
	0x037CF600 LDR X8, [X0]
	0x037CF604 CBZ X8, 0x37CF614
	0x037CF608 LDR X0, [X8 + 0x98]
	0x037CF60C LDR X30, [X31], #0x10
	0x037CF610 RET
	0x037CF614 BL 0x1C16F20
	0x037CF618 STR X30, [X31 - 0x10]!
	0x037CF61C LDR X8, [X0]
	0x037CF620 CBZ X8, 0x37CF630
	0x037CF624 LDR X0, [X8 + 0x40]
	0x037CF628 LDR X30, [X31], #0x10
	0x037CF62C RET

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X21, 0xC13000
	007 Move W9, [X21+576]
	008 Move X20, X0
	009 Move X19, X8
	010 Move TEMP, X9
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x977000
	015 Move X0, [X0+1592]
	016 Call 0x1C17CF4
	017 Move X0, 0x97A000
	018 Move X0, [X0+2248]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+576], W8
	022 Move W8, [X20+160]
	023 Add W31, W8, 1
	024 Move X0, [X20+16]
	025 Compare X0, 0
	026 JumpIfEqual {57}
	027 Move X8, 0x97A000
	028 Move X8, [X8+2248]
	029 Move X2, X31
	030 Move X1, [X8]
	031 Call InputActionAsset.FindControlSchemeIndex, X0, X1
	032 Move [X20+160], W0
	033 Move X0, [X20+16]
	034 Compare X0, 0
	035 JumpIfEqual {57}
	036 Move X21, 0x977000
	037 Move X21, [X21+1592]
	038 Move X1, X31
	039 Call InputActionAsset.get_controlSchemes, X0
	040 Move [X31+32], X0
	041 Move [X31+40], X1
	042 Move W1, [X20+160]
	043 Move X2, [X21]
	044 Add X8, X31, 8
	045 Add X0, X31, 32
	046 Call ReadOnlyArray`1<InputControlScheme>.get_Item, X0, X1
	047 Move X8, [X31+24]
	048 NotImplemented "Instruction LDUR not yet implemented."
	049 Move X30, [X31+48]
	050 Move X21, [X31+56]
	051 Move [X19+16], X8
	052 Move [X19], V0
	053 Move X20, [X31+64]
	054 Move X19, [X31+72]
	055 Add X31, X31, 80
	056 Return X0
	057 Call 0x1C17F20

Method: UnityEngine.InputSystem.InputControlScheme get_GamepadScheme()

Disassembly:
	0x037CF630 BL 0x1C16F20
	0x037CF634 STR X30, [X31 - 0x10]!
	0x037CF638 LDR X8, [X0]
	0x037CF63C CBZ X8, 0x37CF654
	0x037CF640 LDR X0, [X8 + 0x40]
	0x037CF644 CBZ X0, 0x37CF654
	0x037CF648 MOV X1, X31
	0x037CF64C LDR X30, [X31], #0x10
	0x037CF650 B 0x37382CC
	0x037CF654 BL 0x1C16F20
	0x037CF658 STR X30, [X31 - 0x10]!
	0x037CF65C LDR X8, [X0]
	0x037CF660 CBZ X8, 0x37CF678
	0x037CF664 LDR X0, [X8 + 0x40]
	0x037CF668 CBZ X0, 0x37CF678
	0x037CF66C MOV X1, X31
	0x037CF670 LDR X30, [X31], #0x10
	0x037CF674 B 0x3738478
	0x037CF678 BL 0x1C16F20
	0x037CF67C STR X30, [X31 - 0x10]!
	0x037CF680 LDR X8, [X0]
	0x037CF684 CBZ X8, 0x37CF69C
	0x037CF688 LDR X0, [X8 + 0x40]
	0x037CF68C CBZ X0, 0x37CF69C
	0x037CF690 MOV X1, X31
	0x037CF694 LDR X30, [X31], #0x10
	0x037CF698 B 0x37367B0
	0x037CF69C BL 0x1C16F20
	0x037CF6A0 STR X30, [X31 - 0x10]!
	0x037CF6A4 CBZ X0, 0x37CF6B4
	0x037CF6A8 LDR X0, [X0 + 0x40]
	0x037CF6AC LDR X30, [X31], #0x10
	0x037CF6B0 RET
	0x037CF6B4 BL 0x1C16F20
	0x037CF6B8 STP X30, X25, [X31 - 0x40]!
	0x037CF6BC STP X24, X23, [X31 + 0x10]
	0x037CF6C0 STP X22, X21, [X31 + 0x20]
	0x037CF6C4 STP X20, X19, [X31 + 0x30]
	0x037CF6C8 ADRP X21, 0xC12000
	0x037CF6CC LDRB W8, [X21 + 0x246]
	0x037CF6D0 MOV X19, X1
	0x037CF6D4 MOV X20, X0
	0x037CF6D8 TBNZ X8, 0x0, 0x37CF6FC
	0x037CF6DC ADRP X0, 0x928000
	0x037CF6E0 LDR X0, [X0 + 0x3D8]
	0x037CF6E4 BL 0x1C16CF4
	0x037CF6E8 ADRP X0, 0x979000
	0x037CF6EC LDR X0, [X0 + 0x8E0]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X21, 0xC13000
	007 Move W9, [X21+577]
	008 Move X20, X0
	009 Move X19, X8
	010 Move TEMP, X9
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x977000
	015 Move X0, [X0+1592]
	016 Call 0x1C17CF4
	017 Move X0, 0x97A000
	018 Move X0, [X0+1496]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+577], W8
	022 Move W8, [X20+164]
	023 Add W31, W8, 1
	024 Move X0, [X20+16]
	025 Compare X0, 0
	026 JumpIfEqual {57}
	027 Move X8, 0x97A000
	028 Move X8, [X8+1496]
	029 Move X2, X31
	030 Move X1, [X8]
	031 Call InputActionAsset.FindControlSchemeIndex, X0, X1
	032 Move [X20+164], W0
	033 Move X0, [X20+16]
	034 Compare X0, 0
	035 JumpIfEqual {57}
	036 Move X21, 0x977000
	037 Move X21, [X21+1592]
	038 Move X1, X31
	039 Call InputActionAsset.get_controlSchemes, X0
	040 Move [X31+32], X0
	041 Move [X31+40], X1
	042 Move W1, [X20+164]
	043 Move X2, [X21]
	044 Add X8, X31, 8
	045 Add X0, X31, 32
	046 Call ReadOnlyArray`1<InputControlScheme>.get_Item, X0, X1
	047 Move X8, [X31+24]
	048 NotImplemented "Instruction LDUR not yet implemented."
	049 Move X30, [X31+48]
	050 Move X21, [X31+56]
	051 Move [X19+16], X8
	052 Move [X19], V0
	053 Move X20, [X31+64]
	054 Move X19, [X31+72]
	055 Add X31, X31, 80
	056 Return X0
	057 Call 0x1C17F20

Method: UnityEngine.InputSystem.InputControlScheme get_TouchScheme()

Disassembly:
	0x037CF6F0 BL 0x1C16CF4
	0x037CF6F4 MOVZ W8, 0x1
	0x037CF6F8 STRB W8, [X21 + 0x246]
	0x037CF6FC LDR X8, [X20]
	0x037CF700 CBZ X8, 0x37D19C8
	0x037CF704 ADRP X25, 0x928000
	0x037CF708 ADRP X24, 0x979000
	0x037CF70C LDR X22, [X8 + 0x48]
	0x037CF710 LDR X25, [X25 + 0x3D8]
	0x037CF714 LDR X24, [X24 + 0x8E0]
	0x037CF718 CBZ X22, 0x37D08D0
	0x037CF71C LDR X0, [X25]
	0x037CF720 LDR X21, [X8 + 0x50]
	0x037CF724 BL 0x1C16F10
	0x037CF728 LDR X8, [X22]
	0x037CF72C LDR X1, [X24]
	0x037CF730 MOV X23, X0
	0x037CF734 LDRH W9, [X8 + 0x12E]
	0x037CF738 CBZ X9, 0x37CF75C
	0x037CF73C LDR X10, [X8 + 0xB0]
	0x037CF740 ADD X10, X10, 0x8
	0x037CF744 LDUR X11, [X10 - 0x8]
	0x037CF748 CMP X11, X1
	0x037CF74C B.EQ 0x37CF76C
	0x037CF750 SUBS X9, X9, 0x1
	0x037CF754 ADD X10, X10, 0x10
	0x037CF758 B.NE 0x37CF744
	0x037CF75C MOV X0, X22
	0x037CF760 MOV W2, W31
	0x037CF764 BL 0x1C5C788
	0x037CF768 B 0x37CF778
	0x037CF76C LDRSW X9, [X10]
	0x037CF770 ADD X8, X8, X9, 0x4, LSL
	0x037CF774 ADD X0, X8, 0x138
	0x037CF778 LDR X2, [X0 + 0x8]
	0x037CF77C MOV X0, X23
	0x037CF780 MOV X1, X22
	0x037CF784 MOV X3, X31
	0x037CF788 BL 0x2A719B8
	0x037CF78C CBZ X21, 0x37D19C8
	0x037CF790 MOV X0, X21
	0x037CF794 MOV X1, X23
	0x037CF798 MOV X2, X31
	0x037CF79C BL 0x37348FC
	0x037CF7A0 LDR X8, [X20]
	0x037CF7A4 CBZ X8, 0x37D19C8
	0x037CF7A8 LDR X0, [X25]
	0x037CF7AC LDP X23, X21, [X8 + 0x48]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X21, 0xC13000
	007 Move W9, [X21+578]
	008 Move X20, X0
	009 Move X19, X8
	010 Move TEMP, X9
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x977000
	015 Move X0, [X0+1592]
	016 Call 0x1C17CF4
	017 Move X0, 0x979000
	018 Move X0, [X0+2376]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+578], W8
	022 Move W8, [X20+168]
	023 Add W31, W8, 1
	024 Move X0, [X20+16]
	025 Compare X0, 0
	026 JumpIfEqual {57}
	027 Move X8, 0x979000
	028 Move X8, [X8+2376]
	029 Move X2, X31
	030 Move X1, [X8]
	031 Call InputActionAsset.FindControlSchemeIndex, X0, X1
	032 Move [X20+168], W0
	033 Move X0, [X20+16]
	034 Compare X0, 0
	035 JumpIfEqual {57}
	036 Move X21, 0x977000
	037 Move X21, [X21+1592]
	038 Move X1, X31
	039 Call InputActionAsset.get_controlSchemes, X0
	040 Move [X31+32], X0
	041 Move [X31+40], X1
	042 Move W1, [X20+168]
	043 Move X2, [X21]
	044 Add X8, X31, 8
	045 Add X0, X31, 32
	046 Call ReadOnlyArray`1<InputControlScheme>.get_Item, X0, X1
	047 Move X8, [X31+24]
	048 NotImplemented "Instruction LDUR not yet implemented."
	049 Move X30, [X31+48]
	050 Move X21, [X31+56]
	051 Move [X19+16], X8
	052 Move [X19], V0
	053 Move X20, [X31+64]
	054 Move X19, [X31+72]
	055 Add X31, X31, 80
	056 Return X0
	057 Call 0x1C17F20

Method: UnityEngine.InputSystem.InputControlScheme get_JoystickScheme()

Disassembly:
	0x037CF7B0 BL 0x1C16F10
	0x037CF7B4 CBZ X23, 0x37D19C8
	0x037CF7B8 LDR X8, [X23]
	0x037CF7BC LDR X1, [X24]
	0x037CF7C0 MOV X22, X0
	0x037CF7C4 LDRH W9, [X8 + 0x12E]
	0x037CF7C8 CBZ X9, 0x37CF7EC
	0x037CF7CC LDR X10, [X8 + 0xB0]
	0x037CF7D0 ADD X10, X10, 0x8
	0x037CF7D4 LDUR X11, [X10 - 0x8]
	0x037CF7D8 CMP X11, X1
	0x037CF7DC B.EQ 0x37CF7FC
	0x037CF7E0 SUBS X9, X9, 0x1
	0x037CF7E4 ADD X10, X10, 0x10
	0x037CF7E8 B.NE 0x37CF7D4
	0x037CF7EC MOV X0, X23
	0x037CF7F0 MOV W2, W31
	0x037CF7F4 BL 0x1C5C788
	0x037CF7F8 B 0x37CF808
	0x037CF7FC LDRSW X9, [X10]
	0x037CF800 ADD X8, X8, X9, 0x4, LSL
	0x037CF804 ADD X0, X8, 0x138
	0x037CF808 LDR X2, [X0 + 0x8]
	0x037CF80C MOV X0, X22
	0x037CF810 MOV X1, X23
	0x037CF814 MOV X3, X31
	0x037CF818 BL 0x2A719B8
	0x037CF81C CBZ X21, 0x37D19C8
	0x037CF820 MOV X0, X21
	0x037CF824 MOV X1, X22
	0x037CF828 MOV X2, X31
	0x037CF82C BL 0x3734A5C
	0x037CF830 LDR X8, [X20]
	0x037CF834 CBZ X8, 0x37D19C8
	0x037CF838 LDR X0, [X25]
	0x037CF83C LDP X23, X21, [X8 + 0x48]
	0x037CF840 BL 0x1C16F10
	0x037CF844 CBZ X23, 0x37D19C8
	0x037CF848 LDR X8, [X23]
	0x037CF84C LDR X1, [X24]
	0x037CF850 MOV X22, X0
	0x037CF854 LDRH W9, [X8 + 0x12E]
	0x037CF858 CBZ X9, 0x37CF87C
	0x037CF85C LDR X10, [X8 + 0xB0]
	0x037CF860 ADD X10, X10, 0x8
	0x037CF864 LDUR X11, [X10 - 0x8]
	0x037CF868 CMP X11, X1
	0x037CF86C B.EQ 0x37CF88C

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X21, 0xC13000
	007 Move W9, [X21+579]
	008 Move X20, X0
	009 Move X19, X8
	010 Move TEMP, X9
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x977000
	015 Move X0, [X0+1592]
	016 Call 0x1C17CF4
	017 Move X0, 0x97A000
	018 Move X0, [X0+1680]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+579], W8
	022 Move W8, [X20+172]
	023 Add W31, W8, 1
	024 Move X0, [X20+16]
	025 Compare X0, 0
	026 JumpIfEqual {57}
	027 Move X8, 0x97A000
	028 Move X8, [X8+1680]
	029 Move X2, X31
	030 Move X1, [X8]
	031 Call InputActionAsset.FindControlSchemeIndex, X0, X1
	032 Move [X20+172], W0
	033 Move X0, [X20+16]
	034 Compare X0, 0
	035 JumpIfEqual {57}
	036 Move X21, 0x977000
	037 Move X21, [X21+1592]
	038 Move X1, X31
	039 Call InputActionAsset.get_controlSchemes, X0
	040 Move [X31+32], X0
	041 Move [X31+40], X1
	042 Move W1, [X20+172]
	043 Move X2, [X21]
	044 Add X8, X31, 8
	045 Add X0, X31, 32
	046 Call ReadOnlyArray`1<InputControlScheme>.get_Item, X0, X1
	047 Move X8, [X31+24]
	048 NotImplemented "Instruction LDUR not yet implemented."
	049 Move X30, [X31+48]
	050 Move X21, [X31+56]
	051 Move [X19+16], X8
	052 Move [X19], V0
	053 Move X20, [X31+64]
	054 Move X19, [X31+72]
	055 Add X31, X31, 80
	056 Return X0
	057 Call 0x1C17F20

Method: UnityEngine.InputSystem.InputControlScheme get_XRScheme()

Disassembly:
	0x037CF870 SUBS X9, X9, 0x1
	0x037CF874 ADD X10, X10, 0x10
	0x037CF878 B.NE 0x37CF864
	0x037CF87C MOV X0, X23
	0x037CF880 MOV W2, W31
	0x037CF884 BL 0x1C5C788
	0x037CF888 B 0x37CF898
	0x037CF88C LDRSW X9, [X10]
	0x037CF890 ADD X8, X8, X9, 0x4, LSL
	0x037CF894 ADD X0, X8, 0x138
	0x037CF898 LDR X2, [X0 + 0x8]
	0x037CF89C MOV X0, X22
	0x037CF8A0 MOV X1, X23
	0x037CF8A4 MOV X3, X31
	0x037CF8A8 BL 0x2A719B8
	0x037CF8AC CBZ X21, 0x37D19C8
	0x037CF8B0 MOV X0, X21
	0x037CF8B4 MOV X1, X22
	0x037CF8B8 MOV X2, X31
	0x037CF8BC BL 0x37349AC
	0x037CF8C0 LDR X8, [X20]
	0x037CF8C4 CBZ X8, 0x37D19C8
	0x037CF8C8 LDR X0, [X25]
	0x037CF8CC LDR X21, [X8 + 0x58]
	0x037CF8D0 LDR X23, [X8 + 0x48]
	0x037CF8D4 BL 0x1C16F10
	0x037CF8D8 CBZ X23, 0x37D19C8
	0x037CF8DC LDR X8, [X23]
	0x037CF8E0 LDR X1, [X24]
	0x037CF8E4 MOV X22, X0
	0x037CF8E8 LDRH W9, [X8 + 0x12E]
	0x037CF8EC CBZ X9, 0x37CF910
	0x037CF8F0 LDR X10, [X8 + 0xB0]
	0x037CF8F4 ADD X10, X10, 0x8
	0x037CF8F8 LDUR X11, [X10 - 0x8]
	0x037CF8FC CMP X11, X1
	0x037CF900 B.EQ 0x37CF920
	0x037CF904 SUBS X9, X9, 0x1
	0x037CF908 ADD X10, X10, 0x10
	0x037CF90C B.NE 0x37CF8F8
	0x037CF910 MOVZ W2, 0x1
	0x037CF914 MOV X0, X23
	0x037CF918 BL 0x1C5C788
	0x037CF91C B 0x37CF930
	0x037CF920 LDR W9, [X10]
	0x037CF924 ADD W9, W9, 0x1
	0x037CF928 ADD X8, X8, W9, 0x4, SXTW
	0x037CF92C ADD X0, X8, 0x138

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X21, 0xC13000
	007 Move W9, [X21+580]
	008 Move X20, X0
	009 Move X19, X8
	010 Move TEMP, X9
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x977000
	015 Move X0, [X0+1592]
	016 Call 0x1C17CF4
	017 Move X0, 0x97A000
	018 Move X0, [X0+2256]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+580], W8
	022 Move W8, [X20+176]
	023 Add W31, W8, 1
	024 Move X0, [X20+16]
	025 Compare X0, 0
	026 JumpIfEqual {57}
	027 Move X8, 0x97A000
	028 Move X8, [X8+2256]
	029 Move X2, X31
	030 Move X1, [X8]
	031 Call InputActionAsset.FindControlSchemeIndex, X0, X1
	032 Move [X20+176], W0
	033 Move X0, [X20+16]
	034 Compare X0, 0
	035 JumpIfEqual {57}
	036 Move X21, 0x977000
	037 Move X21, [X21+1592]
	038 Move X1, X31
	039 Call InputActionAsset.get_controlSchemes, X0
	040 Move [X31+32], X0
	041 Move [X31+40], X1
	042 Move W1, [X20+176]
	043 Move X2, [X21]
	044 Add X8, X31, 8
	045 Add X0, X31, 32
	046 Call ReadOnlyArray`1<InputControlScheme>.get_Item, X0, X1
	047 Move X8, [X31+24]
	048 NotImplemented "Instruction LDUR not yet implemented."
	049 Move X30, [X31+48]
	050 Move X21, [X31+56]
	051 Move [X19+16], X8
	052 Move [X19], V0
	053 Move X20, [X31+64]
	054 Move X19, [X31+72]
	055 Add X31, X31, 80
	056 Return X0
	057 Call 0x1C17F20

