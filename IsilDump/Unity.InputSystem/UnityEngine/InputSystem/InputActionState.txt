Type: UnityEngine.InputSystem.InputActionState

Method: System.Int32 get_totalCompositeCount()

Disassembly:
	0x0374B7A8 STP X28, X27, [X31 + 0x80]
	0x0374B7AC STP X26, X25, [X31 + 0x90]

ISIL:
	001 Move W0, [X0+92]
	002 Return X0

Method: System.Int32 get_totalMapCount()

Disassembly:
	0x0374B7B0 STP X24, X23, [X31 + 0xA0]
	0x0374B7B4 STP X22, X21, [X31 + 0xB0]

ISIL:
	001 Move W0, [X0+72]
	002 Return X0

Method: System.Int32 get_totalActionCount()

Disassembly:
	0x0374B7B8 STP X20, X19, [X31 + 0xC0]
	0x0374B7BC ADRP X19, 0xC95000

ISIL:
	001 Move W0, [X0+76]
	002 Return X0

Method: System.Int32 get_totalBindingCount()

Disassembly:
	0x0374B7C0 LDRB W8, [X19 + 0xD98]
	0x0374B7C4 MOV X21, X3

ISIL:
	001 Move W0, [X0+84]
	002 Return X0

Method: System.Int32 get_totalInteractionCount()

Disassembly:
	0x0374B7C8 MOV X20, X0
	0x0374B7CC STR X2, [X31 + 0x18]

ISIL:
	001 Move W0, [X0+80]
	002 Return X0

Method: System.Int32 get_totalControlCount()

Disassembly:
	0x0374B7D0 STR W1, [X31 + 0x14]
	0x0374B7D4 TBNZ X8, 0x0, 0x374B834

ISIL:
	001 Move W0, [X0+88]
	002 Return X0

Method: UnityEngine.InputSystem.InputActionState/ActionMapIndices* get_mapIndices()

Disassembly:
	0x0374B7D8 ADRP X0, 0x9FA000
	0x0374B7DC LDR X0, [X0 + 0xB68]

ISIL:
	001 Move X0, [X0+184]
	002 Return X0

Method: UnityEngine.InputSystem.InputActionState/TriggerState* get_actionStates()

Disassembly:
	0x0374B7E0 BL 0x1C16CF4
	0x0374B7E4 ADRP X0, 0x9FA000

ISIL:
	001 Move X0, [X0+96]
	002 Return X0

Method: UnityEngine.InputSystem.InputActionState/BindingState* get_bindingStates()

Disassembly:
	0x0374B7E8 LDR X0, [X0 + 0xB70]
	0x0374B7EC BL 0x1C16CF4

ISIL:
	001 Move X0, [X0+104]
	002 Return X0

Method: UnityEngine.InputSystem.InputActionState/InteractionState* get_interactionStates()

Disassembly:
	0x0374B7F0 ADRP X0, 0x9FA000
	0x0374B7F4 LDR X0, [X0 + 0xB78]

ISIL:
	001 Move X0, [X0+112]
	002 Return X0

Method: System.Int32* get_controlIndexToBindingIndex()

Disassembly:
	0x0374B7F8 BL 0x1C16CF4
	0x0374B7FC ADRP X0, 0x9FA000

ISIL:
	001 Move X0, [X0+160]
	002 Return X0

Method: System.UInt16* get_controlGroupingAndComplexity()

Disassembly:
	0x0374B800 LDR X0, [X0 + 0xB80]
	0x0374B804 BL 0x1C16CF4

ISIL:
	001 Move X0, [X0+168]
	002 Return X0

Method: System.Single* get_controlMagnitudes()

Disassembly:
	0x0374B808 ADRP X0, 0x9D0000
	0x0374B80C LDR X0, [X0 + 0xE50]

ISIL:
	001 Move X0, [X0+120]
	002 Return X0

Method: System.UInt32* get_enabledControls()

Disassembly:
	0x0374B810 BL 0x1C16CF4
	0x0374B814 ADRP X0, 0x9FA000

ISIL:
	001 Move X0, [X0+136]
	002 Return X0

Method: System.Boolean get_isProcessingControlStateChange()

Disassembly:
	0x0374B818 LDR X0, [X0 + 0xB88]
	0x0374B81C BL 0x1C16CF4

ISIL:
	001 Move W0, [X0+194]
	002 Return X0

Method: System.Void Initialize(UnityEngine.InputSystem.InputBindingResolver resolver)

Disassembly:
	0x0374B820 ADRP X0, 0x9FA000
	0x0374B824 LDR X0, [X0 + 0x2A8]
	0x0374B828 BL 0x1C16CF4
	0x0374B82C MOVZ W8, 0x1
	0x0374B830 STRB W8, [X19 + 0xD98]
	0x0374B834 STP X31, X31, [X31 + 0x50]
	0x0374B838 STR X31, [X31 + 0x60]
	0x0374B83C STP X31, X31, [X31 + 0x40]
	0x0374B840 LDR W8, [X20 + 0x48]
	0x0374B844 CMP W8, 0x1
	0x0374B848 B.LT 0x374BC30
	0x0374B84C ADRP X28, 0x9FA000
	0x0374B850 ADRP X19, 0x9FA000
	0x0374B854 LDR X28, [X28 + 0xB70]
	0x0374B858 LDR X19, [X19 + 0xB78]
	0x0374B85C LDR W8, [X31 + 0x14]
	0x0374B860 MOV W27, W31
	0x0374B864 MOV W29, W31
	0x0374B868 STR X21, [X31 + 0x8]
	0x0374B86C EOR W8, W8, 0x1
	0x0374B870 AND W22, W8, 0x1
	0x0374B874 STR W22, [X31 + 0x10]
	0x0374B878 LDR X8, [X20 + 0x10]
	0x0374B87C CBZ X8, 0x374BC5C
	0x0374B880 LDR W9, [X8 + 0x18]
	0x0374B884 CMP W29, W9
	0x0374B888 B.CS 0x374BC60
	0x0374B88C ADD X8, X8, W29, 0x3, SXTW
	0x0374B890 LDR X24, [X8 + 0x20]

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+144], X30
	003 Move [X31+152], X21
	004 Move [X31+160], X20
	005 Move [X31+168], X19
	006 Move V0, [X1+1]
	007 Move W21, [X1]
	008 Move X19, X1
	009 Move X20, X0
	010 Add X1, X1, 32
	011 Add X0, X31, 16
	012 Move W2, 128
	013 Move [X31], V0
	014 Call 0x3EB2AC0
	015 Move V0, [X19+10]
	016 Move X8, [X19+176]
	017 Move V1, [X31]
	018 Add X0, X20, 64
	019 Add X1, X31, 16
	020 Move W2, 128
	021 Move [X20+56], W21
	022 Move [X20+16], V1
	023 Move [X20+24], V0
	024 Move [X20+48], X8
	025 Call 0x3EB2AC0
	026 Move X0, X20
	027 Call InputActionState.ComputeControlGroupingIfNecessary, X0
	028 Move X0, X20
	029 Move X20, [X31+160]
	030 Move X19, [X31+168]
	031 Move X30, [X31+144]
	032 Move X21, [X31+152]
	033 Add X31, X31, 176
	034 Call InputActionState.AddToGlobalList, X0
	035 Return 

Method: System.Void ComputeControlGroupingIfNecessary()

Disassembly:
	0x0374B9B0 LDR W1, [X20 + 0x58]
	0x0374B9B4 LDR X8, [X8 + 0xB80]
	0x0374B9B8 LDR X2, [X8]
	0x0374B9BC BL 0x2DFAB58
	0x0374B9C0 LDR X8, [X20 + 0x60]
	0x0374B9C4 LDRSW X9, [X25 + 0xC0]
	0x0374B9C8 MOVZ W10, 0x30
	0x0374B9CC MADD X21, X9, X10, X8
	0x0374B9D0 LDRH W9, [X21 + 0x4]
	0x0374B9D4 LDR X8, [X20 + 0x18]
	0x0374B9D8 MOVZ W10, 0xFFFF
	0x0374B9DC CMP W9, W10
	0x0374B9E0 CSINV W1, W9, W31, NE
	0x0374B9E4 CBZ X8, 0x374BB78
	0x0374B9E8 LDR W9, [X8 + 0x18]
	0x0374B9EC CMP W1, W9
	0x0374B9F0 B.CS 0x374BB70
	0x0374B9F4 ADD X8, X8, W1, 0x3, UXTW
	0x0374B9F8 LDR X2, [X8 + 0x20]
	0x0374B9FC ADRP X8, 0x9FA000
	0x0374BA00 LDR X8, [X8 + 0xB88]
	0x0374BA04 LDR X3, [X8]
	0x0374BA08 LDR X0, [X31 + 0x18]
	0x0374BA0C BL 0x2DFA588
	0x0374BA10 LDR X8, [X20 + 0x68]
	0x0374BA14 LDRH W9, [X21 + 0x18]
	0x0374BA18 LDR X21, [X31 + 0x8]
	0x0374BA1C MOVZ W27, 0x1
	0x0374BA20 ADD X8, X8, X9, 0x5, LSL
	0x0374BA24 LDRB W22, [X8 + 0x1]
	0x0374BA28 CBZ X22, 0x374B904
	0x0374BA2C LDRH W8, [X8 + 0xC]
	0x0374BA30 MOVZ W9, 0xFFFF
	0x0374BA34 CMP W8, W9
	0x0374BA38 CSINV X26, X8, X31, NE
	0x0374BA3C ADD X8, X26, X26, 0x1, LSL
	0x0374BA40 UBFM X21, X8, 0x3C, 0x3B
	0x0374BA44 LDR X8, [X20 + 0x70]
	0x0374BA48 ADD X8, X21, X8
	0x0374BA4C LDRB W0, [X8 + 0x2]
	0x0374BA50 MOV X1, X31
	0x0374BA54 BL 0x37C1380
	0x0374BA58 TBZ X0, 0x0, 0x374BAE4
	0x0374BA5C LDR X8, [X20 + 0x70]
	0x0374BA60 MOVZ W10, 0xFFFF
	0x0374BA64 LDRH W9, [X21, X8, LSL]
	0x0374BA68 LDR X8, [X20 + 0x18]
	0x0374BA6C CMP W9, W10
	0x0374BA70 CSINV W27, W9, W31, NE
	0x0374BA74 CBZ X8, 0x374BB58
	0x0374BA78 LDR W9, [X8 + 0x18]
	0x0374BA7C CMP W27, W9
	0x0374BA80 B.CS 0x374BB50
	0x0374BA84 SXTW X23, W27
	0x0374BA88 ADD X8, X8, X23, 0x3, LSL
	0x0374BA8C LDR X1, [X8 + 0x20]
	0x0374BA90 MOV X0, X25
	0x0374BA94 MOV X2, X31
	0x0374BA98 BL 0x373582C
	0x0374BA9C TBZ X0, 0x0, 0x374BAD8
	0x0374BAA0 LDR X8, [X20 + 0x18]
	0x0374BAA4 CBZ X8, 0x374BB60
	0x0374BAA8 LDR W9, [X8 + 0x18]
	0x0374BAAC CMP W27, W9
	0x0374BAB0 B.CS 0x374BB68
	0x0374BAB4 ADD X8, X8, X23, 0x3, LSL
	0x0374BAB8 LDR X2, [X8 + 0x20]
	0x0374BABC ADRP X8, 0x9FA000
	0x0374BAC0 LDR X8, [X8 + 0xB88]
	0x0374BAC4 LDR X3, [X8]
	0x0374BAC8 LDR X0, [X31 + 0x18]
	0x0374BACC MOV W1, W27
	0x0374BAD0 BL 0x2DFA588
	0x0374BAD4 B 0x374BAE4
	0x0374BAD8 MOV X0, X20
	0x0374BADC MOV W1, W26
	0x0374BAE0 BL 0x374BDD8
	0x0374BAE4 ADD X21, X21, 0x30
	0x0374BAE8 SUBS X22, X22, 0x1
	0x0374BAEC ADD W26, W26, 0x1
	0x0374BAF0 B.NE 0x374BA44
	0x0374BAF4 LDR X21, [X31 + 0x8]
	0x0374BAF8 MOVZ W27, 0x1
	0x0374BAFC B 0x374B904
	0x0374BB00 ADRP X8, 0x9FA000
	0x0374BB04 LDR X8, [X8 + 0xB68]
	0x0374BB08 ADD X0, X31, 0x50
	0x0374BB0C LDR X1, [X8]
	0x0374BB10 BL 0x2BC4968
	0x0374BB14 MOV X0, X20
	0x0374BB18 MOV X1, X24
	0x0374BB1C BL 0x374C04C
	0x0374BB20 LDR W22, [X31 + 0x10]
	0x0374BB24 MOV X0, X24
	0x0374BB28 MOV W1, W22
	0x0374BB2C MOV X2, X31
	0x0374BB30 BL 0x373B368
	0x0374BB34 LDR W8, [X20 + 0x48]
	0x0374BB38 ADD W29, W29, 0x1
	0x0374BB3C CMP W29, W8
	0x0374BB40 B.LT 0x374B878
	0x0374BB44 B 0x374BC30
	0x0374BB48 BL 0x1C16F20
	0x0374BB4C B 0x374BC6C
	0x0374BB50 BL 0x1C16F28
	0x0374BB54 B 0x374BC6C
	0x0374BB58 BL 0x1C16F20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xC96000
	005 Move W8, [X20+3475]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x9D1000
	012 Move X0, [X0+624]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3475], W8
	016 Move W8, [X19+176]
	017 Compare W8, 0
	018 JumpIfNotEqual {116}
	019 Move X8, 0x9D1000
	020 Move X8, [X8+624]
	021 Move X0, [X8]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X0, X31
	027 Call InputSystem.get_settings
	028 Compare X0, 0
	029 JumpIfEqual {121}
	030 Move W14, [X19+88]
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move X8, [X19+24]
	033 Compare X8, 0
	034 JumpIfEqual {121}
	035 Move W11, [X8+24]
	036 Move W10, [X0+93]
	037 Move X9, X31
	038 Move X12, W14
	039 Add X13, X8, 32
	040 Move X14, X14
	041 ShiftRight X14, 63
	042 And X14, X14, 0x3FFFFFFF
	043 Move W15, 1
	044 Move X16, X11
	045 ShiftRight X16, 63
	046 And X16, X16, 0x3FFFFFFF
	047 Move W17, 0xFFFF
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move W0, 1
	050 Compare W10, 0
	051 JumpIfEqual {86}
	052 Move X1, [X19+160]
	053 Move X4, [X19+104]
	054 NotImplemented "Instruction LDRSW not yet implemented."
	055 Add X1, X4, X1
	056 Move W2, [X1+4]
	057 Move TEMP, X2
	058 And TEMP, TEMP, 8
	059 Compare TEMP, 8
	060 JumpIfNotEqual {86}
	061 NotImplemented "Instruction LDRH not yet implemented."
	062 NotImplemented "Instruction LDRSW not yet implemented."
	063 NotImplemented "Instruction CMP not yet implemented."
	064 NotImplemented "Instruction CSINV not yet implemented."
	065 Add W0, W2, 1
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move X0, W0
	068 Subtract X3, X0, 1
	069 Add X0, X4, X3
	070 Add X4, X0, 32
	071 Move W0, 1
	072 Move W5, [X4+4]
	073 Move TEMP, X5
	074 And TEMP, TEMP, 8
	075 Compare TEMP, 8
	076 JumpIfNotEqual {86}
	077 NotImplemented "Instruction LDRH not yet implemented."
	078 NotImplemented "Instruction CMP not yet implemented."
	079 NotImplemented "Instruction CSINV not yet implemented."
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Add X0, X0, 1
	082 Add X5, X3, X0
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Add X4, X4, 32
	085 Move W0, 1
	086 Move X1, [X19+168]
	087 NotImplemented "Instruction SBFM not yet implemented."
	088 Add X2, X8, X9
	089 Or X3, X3, 3
	090 Move X2, [X2+32]
	091 NotImplemented "Instruction STRH not yet implemented."
	092 Move W0, W9
	093 ShiftRight W0, 31
	094 And W0, W0, 0x3FFFFFFF
	095 NotImplemented "Instruction LDRH not yet implemented."
	096 Compare W3, 0
	097 JumpIfNotEqual {112}
	098 Compare W10, 0
	099 JumpIfEqual {109}
	100 Move X3, X31
	101 Move X4, X13
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Move X5, [X4]
	104 NotImplemented "Instruction CMP not yet implemented."
	105 NotImplemented "Instruction STRH not yet implemented."
	106 Add X3, X3, 2
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Add X4, X4, 8
	109 Move X0, W0
	110 NotImplemented "Instruction STRH not yet implemented."
	111 Add W15, W15, 1
	112 Add X9, X9, 1
	113 NotImplemented "Instruction CMP not yet implemented."
	114 Move W8, 1
	115 Move [X19+176], W8
	116 Move X20, [X31+16]
	117 Move X19, [X31+24]
	118 Move X30, [X31+32]
	119 Return 
	120 Call 0x1C17F28
	121 Call 0x1C17F20

Method: System.Void ClaimDataFrom(UnityEngine.InputSystem.InputBindingResolver resolver)

Disassembly:
	0x0374B894 CBZ X24, 0x374BC5C
	0x0374B898 MOV X0, X24
	0x0374B89C MOV X1, X31
	0x0374B8A0 BL 0x37367B0
	0x0374B8A4 TBZ X0, 0x0, 0x374BB24
	0x0374B8A8 MOVZ W8, 0x1
	0x0374B8AC STRB W8, [X21]
	0x0374B8B0 LDR W8, [X31 + 0x14]
	0x0374B8B4 TBZ X8, 0x0, 0x374B8C8
	0x0374B8B8 MOV X0, X20
	0x0374B8BC MOV X1, X24
	0x0374B8C0 BL 0x374BC9C
	0x0374B8C4 B 0x374BB24
	0x0374B8C8 MOV X0, X24
	0x0374B8CC MOV X1, X31
	0x0374B8D0 BL 0x3739CBC
	0x0374B8D4 ADRP X8, 0x9FA000
	0x0374B8D8 LDR X8, [X8 + 0x2A8]
	0x0374B8DC STP X0, X1, [X31 + 0x40]
	0x0374B8E0 ADD X0, X31, 0x40
	0x0374B8E4 LDR X9, [X8]
	0x0374B8E8 ADD X8, X31, 0x20
	0x0374B8EC MOV X1, X9
	0x0374B8F0 BL 0x24FD990
	0x0374B8F4 LDR V0, [X31 + 0x2]
	0x0374B8F8 LDR X8, [X31 + 0x30]
	0x0374B8FC STR V0, [X31 + 0x5]
	0x0374B900 STR X8, [X31 + 0x60]
	0x0374B904 LDR X1, [X28]
	0x0374B908 ADD X0, X31, 0x50
	0x0374B90C BL 0x2BC496C
	0x0374B910 TBZ X0, 0x0, 0x374BB00
	0x0374B914 LDR X1, [X19]
	0x0374B918 ADD X0, X31, 0x50
	0x0374B91C BL 0x2BC4998
	0x0374B920 MOV X25, X0
	0x0374B924 CBZ X0, 0x374BB48

ISIL:
	001 Subtract X31, X31, 352
	002 Move [X31+304], X29
	003 Move [X31+320], X30
	004 Move [X31+328], X21
	005 Move [X31+336], X20
	006 Move [X31+344], X19
	007 Move W8, [X1]
	008 Move X20, X0
	009 Move W2, 296
	010 Move X19, X1
	011 Move [X0+56], W8
	012 Move X8, [X1+16]
	013 Add X21, X31, 8
	014 Move [X0+16], X8
	015 Move X8, [X1+160]
	016 Move [X0+32], X8
	017 Move X8, [X1+168]
	018 Move [X0+40], X8
	019 Move X8, [X1+176]
	020 Move [X0+48], X8
	021 Move X8, [X1+24]
	022 Move [X0+24], X8
	023 Add X0, X31, 8
	024 Call 0x3EB2AC0
	025 Add X1, X21, 32
	026 Add X0, X20, 64
	027 Move W2, 128
	028 Call 0x3EB2AC0
	029 NotImplemented "Instruction MOVI not yet implemented."
	030 Move [X19+32], V0
	031 Move [X19+40], V0
	032 Move [X19+64], V0
	033 Move [X19+72], V0
	034 Move [X19+96], V0
	035 Move [X19+104], V0
	036 Move [X19+128], V0
	037 Move [X19+136], V0
	038 Move X0, X20
	039 Move X20, [X31+336]
	040 Move X19, [X31+344]
	041 Move X30, [X31+320]
	042 Move X21, [X31+328]
	043 Move X29, [X31+304]
	044 Add X31, X31, 352
	045 Call InputActionState.ComputeControlGroupingIfNecessary, X0
	046 Return 

Method: System.Void Finalize()

Disassembly:
	0x0374BB7C B 0x374BC6C
	0x0374BB80 B 0x374BB84
	0x0374BB84 LDR X21, [X31 + 0x8]
	0x0374BB88 MOV X8, X1
	0x0374BB8C MOV X25, X0
	0x0374BB90 MOV W27, W31
	0x0374BB94 B 0x374BBF8
	0x0374BB98 B 0x374BBC0
	0x0374BB9C B 0x374BBC0
	0x0374BBA0 B 0x374BBC0
	0x0374BBA4 B 0x374BBC0
	0x0374BBA8 B 0x374BBC0
	0x0374BBAC B 0x374BBC0
	0x0374BBB0 B 0x374BBC0
	0x0374BBB4 B 0x374BBC0
	0x0374BBB8 B 0x374BBC0
	0x0374BBBC B 0x374BBC0
	0x0374BBC0 LDR X21, [X31 + 0x8]
	0x0374BBC4 MOV X8, X1
	0x0374BBC8 MOV X25, X0
	0x0374BBCC MOVZ W27, 0x1
	0x0374BBD0 B 0x374BBF8
	0x0374BBD4 B 0x374BBF0
	0x0374BBD8 B 0x374BBF0
	0x0374BBDC B 0x374BBF0
	0x0374BBE0 B 0x374BBF0
	0x0374BBE4 B 0x374BBF0
	0x0374BBE8 B 0x374BBF0
	0x0374BBEC B 0x374BBF0
	0x0374BBF0 MOV X8, X1
	0x0374BBF4 MOV X25, X0
	0x0374BBF8 CMP W8, 0x1
	0x0374BBFC B.NE 0x374BC64
	0x0374BC00 MOV X0, X25
	0x0374BC04 BL 0x3EB1AD0
	0x0374BC08 LDR X26, [X0]
	0x0374BC0C BL 0x3EB1AE0
	0x0374BC10 ADRP X8, 0x9FA000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, X0
	006 Move W1, 1
	007 Call InputActionState.Destroy, X0, X1
	008 Move X0, X19
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X1, X31
	012 Move X30, [X31+32]
	013 Move X21, [X31+40]
	014 Call Object.Finalize, X0
	015 Return 
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Move X21, X0
	018 Move X0, X21
	019 Call 0x3EB2AD0
	020 Move X20, [X0]
	021 Call 0x3EB2AE0
	022 Move X0, X19
	023 Move X1, X31
	024 Call Object.Finalize, X0
	025 Compare X20, 0
	026 JumpIfNotEqual {33}
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Return 
	032 Move X20, X31
	033 Move X0, X20
	034 Call 0x1C17F18
	035 Move X21, X0
	036 Move X0, X19
	037 Move X1, X31
	038 Call Object.Finalize, X0
	039 Compare X20, 0
	040 JumpIfNotEqual {43}
	041 Move X0, X21
	042 Call 0x1D2D690
	043 Move X0, X20
	044 Call 0x1C17F18
	045 Call 0x1991590

Method: System.Void Dispose()

Disassembly:
	0x0374BDA4 CMP W8, W9
	0x0374BDA8 CSINV W0, W8, W31, NE

ISIL:
	001 Move W1, W31
	002 Call InputActionState.Destroy, X0, X1
	003 Return 

Method: System.Void Destroy(System.Boolean isFinalizing = False)

Disassembly:
	0x0374BC14 LDR X8, [X8 + 0xB68]
	0x0374BC18 ADD X0, X31, 0x50
	0x0374BC1C LDR X1, [X8]
	0x0374BC20 BL 0x2BC4968
	0x0374BC24 CBZ X26, 0x374BB14
	0x0374BC28 MOV X0, X26
	0x0374BC2C BL 0x1C16F18
	0x0374BC30 MOVZ W1, 0x7
	0x0374BC34 MOV X0, X20
	0x0374BC38 BL 0x374C08C
	0x0374BC3C LDP X20, X19, [X31 + 0xC0]
	0x0374BC40 LDP X22, X21, [X31 + 0xB0]
	0x0374BC44 LDP X24, X23, [X31 + 0xA0]
	0x0374BC48 LDP X26, X25, [X31 + 0x90]
	0x0374BC4C LDP X28, X27, [X31 + 0x80]
	0x0374BC50 LDP X29, X30, [X31 + 0x70]
	0x0374BC54 ADD X31, X31, 0xD0
	0x0374BC58 RET
	0x0374BC5C BL 0x1C16F20
	0x0374BC60 BL 0x1C16F28
	0x0374BC64 MOV X26, X31
	0x0374BC68 B 0x374BC70
	0x0374BC6C MOV X25, X0
	0x0374BC70 ADRP X8, 0x9FA000
	0x0374BC74 LDR X8, [X8 + 0xB68]
	0x0374BC78 LDR X1, [X8]
	0x0374BC7C ADD X0, X31, 0x50
	0x0374BC80 BL 0x2BC4968
	0x0374BC84 CBNZ X26, 0x374BC90
	0x0374BC88 MOV X0, X25
	0x0374BC8C BL 0x1D2C690
	0x0374BC90 MOV X0, X26
	0x0374BC94 BL 0x1C16F18
	0x0374BC98 BL 0x1990590
	0x0374BC9C STP X30, X25, [X31 - 0x40]!
	0x0374BCA0 STP X24, X23, [X31 + 0x10]
	0x0374BCA4 STP X22, X21, [X31 + 0x20]
	0x0374BCA8 STP X20, X19, [X31 + 0x30]
	0x0374BCAC MOV X19, X1
	0x0374BCB0 MOV X20, X0
	0x0374BCB4 BL 0x374C04C
	0x0374BCB8 CBZ X19, 0x374BD94
	0x0374BCBC LDRSW X8, [X19 + 0x58]
	0x0374BCC0 LDR X9, [X20 + 0xB8]
	0x0374BCC4 MOVZ W10, 0x30
	0x0374BCC8 MADD X8, X8, X10, X9
	0x0374BCCC CBZ X8, 0x374BD94
	0x0374BCD0 LDR W21, [X8 + 0x4]
	0x0374BCD4 LDR W22, [X19 + 0x48]
	0x0374BCD8 CMP W21, 0x1
	0x0374BCDC B.LT 0x374BD48
	0x0374BCE0 LDR W24, [X8]
	0x0374BCE4 MOV X23, X31
	0x0374BCE8 MOVZ W25, 0x30
	0x0374BCEC LDR X8, [X20 + 0x60]
	0x0374BCF0 ADD X1, X24, X23
	0x0374BCF4 SMADDL X9, X1, X25, X31
	0x0374BCF8 LDRB W8, [X9, X8, LSL]
	0x0374BCFC CBZ W8, 0x374BD3C
	0x0374BD00 MOV X0, X20
	0x0374BD04 MOV W2, W31
	0x0374BD08 MOV W3, W31
	0x0374BD0C BL 0x374BF30
	0x0374BD10 CMP W22, W21
	0x0374BD14 B.EQ 0x374BD3C
	0x0374BD18 LDR X8, [X19 + 0x28]
	0x0374BD1C CBZ X8, 0x374BD94
	0x0374BD20 LDR W9, [X8 + 0x18]
	0x0374BD24 CMP X23, X9
	0x0374BD28 B.CS 0x374BD98
	0x0374BD2C ADD X8, X8, X23, 0x3, LSL
	0x0374BD30 LDR X1, [X8 + 0x20]
	0x0374BD34 MOVZ W0, 0x1
	0x0374BD38 BL 0x374CF48
	0x0374BD3C ADD X23, X23, 0x1
	0x0374BD40 CMP X21, X23
	0x0374BD44 B.NE 0x374BCEC
	0x0374BD48 LDR X1, [X19 + 0x50]
	0x0374BD4C STR W31, [X19 + 0x48]
	0x0374BD50 CBZ X1, 0x374BD5C
	0x0374BD54 MOVZ W0, 0x1
	0x0374BD58 B 0x374BD6C
	0x0374BD5C CMP W22, W21
	0x0374BD60 B.NE 0x374BD80
	0x0374BD64 MOVZ W0, 0x3
	0x0374BD68 MOV X1, X19
	0x0374BD6C LDP X20, X19, [X31 + 0x30]
	0x0374BD70 LDP X22, X21, [X31 + 0x20]
	0x0374BD74 LDP X24, X23, [X31 + 0x10]
	0x0374BD78 LDP X30, X25, [X31], #0x40
	0x0374BD7C B 0x374CF48
	0x0374BD80 LDP X20, X19, [X31 + 0x30]
	0x0374BD84 LDP X22, X21, [X31 + 0x20]
	0x0374BD88 LDP X24, X23, [X31 + 0x10]
	0x0374BD8C LDP X30, X25, [X31], #0x40
	0x0374BD90 RET
	0x0374BD94 BL 0x1C16F20
	0x0374BD98 BL 0x1C16F28
	0x0374BD9C LDRH W8, [X0 + 0x4]
	0x0374BDA0 MOVZ W9, 0xFFFF

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X21, 0xC96000
	010 Move W8, [X21+3476]
	011 Move W20, W1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x9A9000
	018 Move X0, [X0+1432]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+3476], W8
	022 Move TEMP, X20
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {102}
	026 Move W8, [X19+72]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move X24, 0x9A9000
	029 Move X24, [X24+1432]
	030 Move W20, W31
	031 Move W23, 48
	032 Move TEMP, 0
	033 Not TEMP
	034 Move W25, TEMP
	035 Move X8, [X19+16]
	036 Compare X8, 0
	037 JumpIfEqual {128}
	038 Move W9, [X8+24]
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move X22, W20
	041 Add X8, X8, X22
	042 Move X21, [X8+32]
	043 Compare X21, 0
	044 JumpIfEqual {128}
	045 Move X0, X21
	046 Move X1, X31
	047 Call InputActionMap.get_enabled, X0
	048 Move TEMP, X0
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfNotEqual {62}
	052 Move X8, [X19+184]
	053 NotImplemented "Instruction NOP not yet implemented."
	054 NotImplemented "Instruction MADD not yet implemented."
	055 Compare X8, 0
	056 JumpIfEqual {128}
	057 Move W2, [X8+8]
	058 Move W3, [X8+12]
	059 Move X0, X19
	060 Move W1, W20
	061 Call InputActionState.DisableControls, X0, X1, X2, X3
	062 Move X0, [X24]
	063 Move X22, [X21+32]
	064 Move W8, [X0+224]
	065 Compare W8, 0
	066 JumpIfNotEqual {68}
	067 Call 0x1C17DFC
	068 Move X0, X22
	069 Move X1, X31
	070 Move X2, X31
	071 Call Object.op_Inequality, X0, X1
	072 Move TEMP, X0
	073 And TEMP, TEMP, 1
	074 Compare TEMP, 1
	075 JumpIfNotEqual {80}
	076 Move X8, [X21+32]
	077 Compare X8, 0
	078 JumpIfEqual {128}
	079 Move [X8+40], X31
	080 Move X10, [X21+40]
	081 Move [X21+96], X31
	082 Move [X21+88], W25
	083 Move [X21+72], W31
	084 Compare X10, 0
	085 JumpIfEqual {97}
	086 Move W8, [X10+24]
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Move X9, X31
	089 Add X10, X10, 32
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Move X11, [X10]
	092 Compare X11, 0
	093 JumpIfEqual {128}
	094 Add X9, X9, 1
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Move [X11+192], W25
	097 Move W8, [X19+72]
	098 Add W20, W20, 1
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Move X0, X19
	101 Call InputActionState.RemoveMapFromGlobalList, X0
	102 Move X20, X19
	103 Add X20, X20, 64
	104 Move X0, [X20]
	105 Compare X0, 0
	106 JumpIfEqual {119}
	107 Move W1, 4
	108 Move X2, X31
	109 Call UnsafeUtility.Free, X0, X1
	110 NotImplemented "Instruction MOVI not yet implemented."
	111 Move [X19+184], X31
	112 Move [X20+64], X31
	113 Move [X20+32], V0
	114 Move [X20+40], V0
	115 Move [X20], V0
	116 Move [X20+8], V0
	117 Move [X19+144], V0
	118 Move [X19+152], V0
	119 Move X20, [X31+48]
	120 Move X19, [X31+56]
	121 Move X22, [X31+32]
	122 Move X21, [X31+40]
	123 Move X24, [X31+16]
	124 Move X23, [X31+24]
	125 Move X30, [X31+64]
	126 Move X25, [X31+72]
	127 Return 
	128 Call 0x1C17F20
	129 Call 0x1C17F28

Method: UnityEngine.InputSystem.InputActionState Clone()

Disassembly:
	0x0374C0A0 LDRB W8, [X21 + 0xDB0]
	0x0374C0A4 MOV W19, W1
	0x0374C0A8 MOV X20, X0
	0x0374C0AC TBNZ X8, 0x0, 0x374C0C4
	0x0374C0B0 ADRP X0, 0x9A7000
	0x0374C0B4 LDR X0, [X0 + 0x598]
	0x0374C0B8 BL 0x1C16CF4
	0x0374C0BC MOVZ W8, 0x1
	0x0374C0C0 STRB W8, [X21 + 0xDB0]
	0x0374C0C4 LDR W8, [X20 + 0x48]
	0x0374C0C8 CMP W8, 0x1
	0x0374C0CC B.LT 0x374C148
	0x0374C0D0 ADRP X23, 0x9A7000
	0x0374C0D4 LDR X23, [X23 + 0x598]
	0x0374C0D8 MOV X22, X31
	0x0374C0DC LDR X8, [X20 + 0x10]
	0x0374C0E0 CBZ X8, 0x374C178
	0x0374C0E4 LDR W9, [X8 + 0x18]
	0x0374C0E8 CMP W22, W9
	0x0374C0EC B.CS 0x374C17C
	0x0374C0F0 ADD X8, X8, X22, 0x3, LSL
	0x0374C0F4 LDR X24, [X8 + 0x20]
	0x0374C0F8 CBZ X24, 0x374C178
	0x0374C0FC LDR X1, [X24 + 0x50]
	0x0374C100 CBNZ X1, 0x374C130
	0x0374C104 LDR X0, [X23]
	0x0374C108 LDR X21, [X24 + 0x20]
	0x0374C10C LDR W8, [X0 + 0xE0]
	0x0374C110 CBNZ W8, 0x374C118
	0x0374C114 BL 0x1C16DFC
	0x0374C118 MOV X0, X21
	0x0374C11C MOV X1, X31
	0x0374C120 MOV X2, X31
	0x0374C124 BL 0x3C3883C
	0x0374C128 TBZ X0, 0x0, 0x374C15C
	0x0374C12C MOV X1, X24
	0x0374C130 MOV W0, W19
	0x0374C134 BL 0x374CF48
	0x0374C138 LDR W8, [X20 + 0x48]
	0x0374C13C ADD X22, X22, 0x1
	0x0374C140 CMP W22, W8
	0x0374C144 B.LT 0x374C0DC
	0x0374C148 LDP X20, X19, [X31 + 0x30]
	0x0374C14C LDP X22, X21, [X31 + 0x20]
	0x0374C150 LDP X24, X23, [X31 + 0x10]
	0x0374C154 LDR X30, [X31], #0x40
	0x0374C158 RET
	0x0374C15C LDR X1, [X24 + 0x20]
	0x0374C160 MOV W0, W19
	0x0374C164 LDP X20, X19, [X31 + 0x30]
	0x0374C168 LDP X22, X21, [X31 + 0x20]
	0x0374C16C LDP X24, X23, [X31 + 0x10]
	0x0374C170 LDR X30, [X31], #0x40
	0x0374C174 B 0x374CF48
	0x0374C178 BL 0x1C16F20
	0x0374C17C BL 0x1C16F28
	0x0374C180 SUB X31, X31, 0xD0
	0x0374C184 STP X30, X23, [X31 + 0xA0]
	0x0374C188 STP X22, X21, [X31 + 0xB0]
	0x0374C18C STP X20, X19, [X31 + 0xC0]
	0x0374C190 MOV W20, W4
	0x0374C194 MOV X21, X3
	0x0374C198 MOV X22, X2
	0x0374C19C MOV W23, W1
	0x0374C1A0 MOV X19, X0
	0x0374C1A4 BL 0x374B6D4
	0x0374C1A8 TBZ X23, 0x0, 0x374C1EC
	0x0374C1AC ADD X0, X31, 0x20
	0x0374C1B0 MOVZ W2, 0x80
	0x0374C1B4 MOV X1, X22
	0x0374C1B8 BL 0x3EB1AC0
	0x0374C1BC LDP V0, V1, [X21]
	0x0374C1C0 AND W3, W20, 0x1
	0x0374C1C4 ADD X1, X31, 0x20
	0x0374C1C8 ADD X2, X31, 0x0
	0x0374C1CC MOV X0, X19
	0x0374C1D0 STP V0, V1, [X31]
	0x0374C1D4 BL 0x374C208
	0x0374C1D8 LDP X20, X19, [X31 + 0xC0]
	0x0374C1DC LDP X22, X21, [X31 + 0xB0]
	0x0374C1E0 LDP X30, X23, [X31 + 0xA0]
	0x0374C1E4 ADD X31, X31, 0xD0

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+128], X30
	003 Move [X31+136], X23
	004 Move [X31+144], X22
	005 Move [X31+152], X21
	006 Move [X31+160], X20
	007 Move [X31+168], X19
	008 Move X20, 0xC95000
	009 Move X22, 0x9FA000
	010 Move X21, 0x9FA000
	011 Move W8, [X20+3477]
	012 Move X22, [X22+728]
	013 Move X21, [X21+2864]
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {39}
	019 Move X0, 0x9FA000
	020 Move X0, [X0+2872]
	021 Call 0x1C17CF4
	022 Move X0, 0x9FA000
	023 Move X0, [X0+2864]
	024 Call 0x1C17CF4
	025 Move X0, 0x9FA000
	026 Move X0, [X0+2880]
	027 Call 0x1C17CF4
	028 Move X0, 0x9FA000
	029 Move X0, [X0+2888]
	030 Call 0x1C17CF4
	031 Move X0, 0x9FA000
	032 Move X0, [X0+2896]
	033 Call 0x1C17CF4
	034 Move X0, 0x9FA000
	035 Move X0, [X0+728]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X20+3477], W8
	039 Move X0, [X22]
	040 Call 0x1C17F10
	041 Move X1, X31
	042 Move X20, X0
	043 Call Object..ctor, X0
	044 Move X0, [X19+16]
	045 Move X1, [X21]
	046 Call ArrayHelpers.Copy, X0
	047 Compare X20, 0
	048 JumpIfEqual {92}
	049 Move X8, 0x9FA000
	050 Move X8, [X8+2888]
	051 Move [X20+16], X0
	052 Move X0, [X19+24]
	053 Move X21, 0x9FA000
	054 Move X1, [X8]
	055 Move X22, 0x9FA000
	056 Move X23, 0x9FA000
	057 Move X21, [X21+2872]
	058 Move X22, [X22+2896]
	059 Move X23, [X23+2880]
	060 Call ArrayHelpers.Copy, X0
	061 Move [X20+24], X0
	062 Move X0, [X19+32]
	063 Move X1, [X21]
	064 Call ArrayHelpers.Copy, X0
	065 Move [X20+32], X0
	066 Move X0, [X19+40]
	067 Move X1, [X22]
	068 Call ArrayHelpers.Copy, X0
	069 Move [X20+40], X0
	070 Move X0, [X19+48]
	071 Move X1, [X23]
	072 Call ArrayHelpers.Copy, X0
	073 Move [X20+48], X0
	074 Move W8, [X19+56]
	075 Add X0, X19, 64
	076 Move [X20+56], W8
	077 Add X8, X31, 0
	078 Call UnmanagedMemory.Clone, X0
	079 Add X0, X20, 64
	080 Add X1, X31, 0
	081 Move W2, 128
	082 Call 0x3EB2AC0
	083 Move X0, X20
	084 Move X20, [X31+160]
	085 Move X19, [X31+168]
	086 Move X22, [X31+144]
	087 Move X21, [X31+152]
	088 Move X30, [X31+128]
	089 Move X23, [X31+136]
	090 Add X31, X31, 176
	091 Return X0
	092 Call 0x1C17F20

Method: System.Object System.ICloneable.Clone()

Disassembly:
	0x0374C288 BL 0x1C16CF4

ISIL:
	001 Call InputActionState.Clone, X0
	002 Return X0

Method: System.Boolean IsUsingDevice(UnityEngine.InputSystem.InputDevice device)

Disassembly:
	0x0374C28C ADRP X0, 0x9F9000
	0x0374C290 LDR X0, [X0 + 0x2D8]
	0x0374C294 BL 0x1C16CF4
	0x0374C298 ADRP X0, 0x9F9000
	0x0374C29C LDR X0, [X0 + 0x678]
	0x0374C2A0 BL 0x1C16CF4
	0x0374C2A4 ADRP X0, 0x9F9000
	0x0374C2A8 LDR X0, [X0 + 0x680]
	0x0374C2AC BL 0x1C16CF4
	0x0374C2B0 ADRP X0, 0x9F9000
	0x0374C2B4 LDR X0, [X0 + 0x2A8]
	0x0374C2B8 BL 0x1C16CF4
	0x0374C2BC MOVZ W8, 0x1
	0x0374C2C0 STRB W8, [X21 + 0xD99]
	0x0374C2C4 MOVI V0.2D, 0x0
	0x0374C2C8 STP X31, X31, [X31 + 0x50]
	0x0374C2CC STP X31, X31, [X31 + 0x30]
	0x0374C2D0 STP V0, V0, [X24 + 0x10]
	0x0374C2D4 STP V0, V0, [X31 + 0x80]
	0x0374C2D8 STP V0, V0, [X31 + 0x60]
	0x0374C2DC STR X31, [X31 + 0x40]
	0x0374C2E0 LDR W8, [X19 + 0x4C]
	0x0374C2E4 CMP W8, 0x1
	0x0374C2E8 B.LT 0x374C384
	0x0374C2EC MOV X8, X31
	0x0374C2F0 MOV X9, X31
	0x0374C2F4 MOVZ W10, 0x1
	0x0374C2F8 LDR X11, [X22 + 0x20]
	0x0374C2FC ADD X12, X8, X11
	0x0374C300 LDR X11, [X19 + 0x60]
	0x0374C304 LDR W13, [X12 + 0x24]
	0x0374C308 ADD X11, X8, X11
	0x0374C30C STR W13, [X11 + 0x24]
	0x0374C310 LDR W13, [X12 + 0x20]
	0x0374C314 STR W13, [X11 + 0x20]
	0x0374C318 LDR W13, [X12 + 0x28]
	0x0374C31C STR W13, [X11 + 0x28]
	0x0374C320 LDR W13, [X12 + 0x2C]
	0x0374C324 STR W13, [X11 + 0x2C]
	0x0374C328 LDR V0, [X12 + 0x10]
	0x0374C32C STR D0, [X11 + 0x10]
	0x0374C330 LDRB W12, [X12]
	0x0374C334 CBZ W12, 0x374C370
	0x0374C338 STRB W10, [X11]
	0x0374C33C TBZ X20, 0x0, 0x374C370
	0x0374C340 LDR X12, [X19 + 0x10]
	0x0374C344 CBZ X12, 0x374C858
	0x0374C348 LDRB W11, [X11 + 0x2]
	0x0374C34C LDR W13, [X12 + 0x18]
	0x0374C350 CMP W11, W13
	0x0374C354 B.CS 0x374C85C
	0x0374C358 ADD X11, X12, W11, 0x3, UXTW
	0x0374C35C LDR X11, [X11 + 0x20]
	0x0374C360 CBZ X11, 0x374C858
	0x0374C364 LDR W12, [X11 + 0x48]
	0x0374C368 ADD W12, W12, 0x1
	0x0374C36C STR W12, [X11 + 0x48]
	0x0374C370 LDRSW X11, [X19 + 0x4C]
	0x0374C374 ADD X9, X9, 0x1
	0x0374C378 ADD X8, X8, 0x30
	0x0374C37C CMP X9, X11
	0x0374C380 B.LT 0x374C2F8
	0x0374C384 LDR W8, [X19 + 0x54]
	0x0374C388 STR X23, [X31 + 0x8]
	0x0374C38C CMP W8, 0x1
	0x0374C390 B.LT 0x374C674
	0x0374C394 MOV X23, X31
	0x0374C398 MOVZ W29, 0xFFFF
	0x0374C39C LDR X8, [X19 + 0x68]
	0x0374C3A0 ADD X28, X8, X23, 0x5, LSL
	0x0374C3A4 LDRB W8, [X28 + 0x4]
	0x0374C3A8 TBNZ X8, 0x3, 0x374C664
	0x0374C3AC TBZ X8, 0x2, 0x374C3D4
	0x0374C3B0 LDRH W8, [X28 + 0x8]
	0x0374C3B4 LDR X10, [X22 + 0x40]
	0x0374C3B8 LDR X9, [X19 + 0x80]
	0x0374C3BC UBFM X11, X8, 0x3E, 0x3D
	0x0374C3C0 CMP W8, W29
	0x0374C3C4 MOVN X8, 0x3
	0x0374C3C8 CSEL X8, X8, X11, EQ
	0x0374C3CC LDR V0, [X8, X10, LSL]
	0x0374C3D0 STR S0, [X8, X9, LSL]
	0x0374C3D4 LDRH W8, [X28 + 0x6]
	0x0374C3D8 CMP X8, X29
	0x0374C3DC B.EQ 0x374C664
	0x0374C3E0 LDR X9, [X19 + 0x60]
	0x0374C3E4 ADD X25, X8, X8, 0x1, LSL
	0x0374C3E8 ADD X24, X9, X25, 0x4, LSL
	0x0374C3EC LDRB W8, [X24]
	0x0374C3F0 CBZ W8, 0x374C664
	0x0374C3F4 LDRB W8, [X28 + 0x4]
	0x0374C3F8 LDRB W1, [X28 + 0x3]
	0x0374C3FC LDRH W2, [X28 + 0xE]
	0x0374C400 LDRB W3, [X28]
	0x0374C404 AND W9, W8, 0xFFFFFFEF
	0x0374C408 UBFM W8, W8, 0x1, 0x1F
	0x0374C40C AND W8, W8, 0x10
	0x0374C410 ORR W8, W8, W9, 0x0
	0x0374C414 MOV X0, X19
	0x0374C418 STRB W8, [X28 + 0x4]
	0x0374C41C BL 0x374C8EC
	0x0374C420 TBNZ X20, 0x0, 0x374C664
	0x0374C424 LDR X8, [X19 + 0x68]
	0x0374C428 UBFM X9, X23, 0x3B, 0x3A
	0x0374C42C ADD X21, X9, X8
	0x0374C430 LDR W8, [X21 + 0x18]
	0x0374C434 UBFM X9, X25, 0x3C, 0x3B
	0x0374C438 STR W8, [X28 + 0x18]
	0x0374C43C LDR X8, [X22 + 0x20]
	0x0374C440 ADD X26, X9, X8

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+64], X30
	003 Move [X31+72], X25
	004 Move [X31+80], X24
	005 Move [X31+88], X23
	006 Move [X31+96], X22
	007 Move [X31+104], X21
	008 Move [X31+112], X20
	009 Move [X31+120], X19
	010 Move X21, 0xC95000
	011 Move W8, [X21+3478]
	012 Move X19, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {32}
	018 Move X0, 0x9FA000
	019 Move X0, [X0+2904]
	020 Call 0x1C17CF4
	021 Move X0, 0x9F9000
	022 Move X0, [X0+4024]
	023 Call 0x1C17CF4
	024 Move X0, 0x9F9000
	025 Move X0, [X0+4032]
	026 Call 0x1C17CF4
	027 Move X0, 0x9FA000
	028 Move X0, [X0+2912]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X21+3478], W8
	032 Move [X31+32], X31
	033 Move [X31+40], X31
	034 Move [X31+48], X31
	035 Move W8, [X20+72]
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X22, 0x9F9000
	038 Move X23, 0x9FA000
	039 Move X24, 0x9FA000
	040 Move X22, [X22+4032]
	041 Move X23, [X23+2912]
	042 Move X24, [X24+2904]
	043 Move W25, W31
	044 Move W21, W31
	045 Move X8, [X20+16]
	046 Compare X8, 0
	047 JumpIfEqual {121}
	048 Move W9, [X8+24]
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Add X8, X8, W21
	051 Move X0, [X8+32]
	052 Compare X0, 0
	053 JumpIfEqual {121}
	054 Add X8, X31, 8
	055 Move X1, X31
	056 Call InputActionMap.get_devices, X0
	057 NotImplemented "Instruction LDUR not yet implemented."
	058 Move X8, [X31+24]
	059 Move [X31+2], V0
	060 Move W9, [X31+32]
	061 Move [X31+48], X8
	062 Compare W9, 0
	063 JumpIfEqual {83}
	064 Move X1, [X22]
	065 Add X0, X31, 32
	066 Call Nullable`1<ReadOnlyArray`1<Object>>.get_Value, X0
	067 Move X8, [X23]
	068 Move [X31+8], X0
	069 Move [X31+16], X1
	070 Add X1, X31, 8
	071 Move X0, X8
	072 Call 0x1C17E04
	073 Move X2, [X24]
	074 Move X1, X19
	075 Call Enumerable.Contains, X0, X1
	076 Move TEMP, X0
	077 And TEMP, TEMP, 1
	078 Compare TEMP, 1
	079 JumpIfEqual {87}
	080 Move W8, [X20+72]
	081 Add W21, W21, 1
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Move W8, [X20+72]
	084 Add W21, W21, 1
	085 Move W25, 1
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Move W0, 1
	088 Move TEMP, X25
	089 And TEMP, TEMP, 1
	090 Compare TEMP, 1
	091 JumpIfNotEqual {110}
	092 Move W8, [X20+88]
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Move X11, [X20+24]
	095 Compare X11, 0
	096 JumpIfEqual {121}
	097 Move W10, [X11+24]
	098 Move X9, X31
	099 Add X11, X11, 32
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Move X12, [X11]
	102 Compare X12, 0
	103 JumpIfEqual {121}
	104 Move X12, [X12+120]
	105 Add X9, X9, 1
	106 NotImplemented "Instruction CMP not yet implemented."
	107 NotImplemented "Instruction CSET not yet implemented."
	108 NotImplemented "Instruction CMP not yet implemented."
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Move W0, W31
	111 Move X20, [X31+112]
	112 Move X19, [X31+120]
	113 Move X22, [X31+96]
	114 Move X21, [X31+104]
	115 Move X24, [X31+80]
	116 Move X23, [X31+88]
	117 Move X30, [X31+64]
	118 Move X25, [X31+72]
	119 Add X31, X31, 128
	120 Return X0
	121 Call 0x1C17F20
	122 Call 0x1C17F28

Method: System.Boolean CanUseDevice(UnityEngine.InputSystem.InputDevice device)

Disassembly:
	0x0374C444 LDRH W8, [X26 + 0x18]
	0x0374C448 CMP X23, X8
	0x0374C44C B.NE 0x374C664
	0x0374C450 LDRB W0, [X26]
	0x0374C454 MOV X1, X31
	0x0374C458 BL 0x37C1380
	0x0374C45C TBZ X0, 0x0, 0x374C664
	0x0374C460 LDR X8, [X31 + 0x10]
	0x0374C464 LDR W8, [X8]
	0x0374C468 CMP W8, 0x1
	0x0374C46C B.LT 0x374C664
	0x0374C470 ADRP X9, 0x9F9000
	0x0374C474 LDRH W8, [X26 + 0x4]
	0x0374C478 LDR X9, [X9 + 0x680]
	0x0374C47C LDR X0, [X31 + 0x10]
	0x0374C480 CMP W8, W29
	0x0374C484 LDR X2, [X9]
	0x0374C488 CSINV W1, W8, W31, NE
	0x0374C48C BL 0x2DFA48C
	0x0374C490 CBZ X0, 0x374C664
	0x0374C494 ADRP X9, 0x9F9000
	0x0374C498 LDRH W8, [X26 + 0x4]
	0x0374C49C LDR X9, [X9 + 0x680]
	0x0374C4A0 LDR X0, [X31 + 0x10]
	0x0374C4A4 CMP W8, W29
	0x0374C4A8 LDR X2, [X9]
	0x0374C4AC CSINV W1, W8, W31, NE
	0x0374C4B0 BL 0x2DFA48C
	0x0374C4B4 MOV X2, X0
	0x0374C4B8 MOV X0, X19
	0x0374C4BC MOV W1, W23
	0x0374C4C0 BL 0x374CA74
	0x0374C4C4 ADDS W31, W0, 0x1
	0x0374C4C8 B.EQ 0x374C518
	0x0374C4CC LDRB W8, [X26]
	0x0374C4D0 MOV W25, W0
	0x0374C4D4 MOV X0, X24
	0x0374C4D8 MOV W1, W25
	0x0374C4DC STRB W8, [X24]
	0x0374C4E0 BL 0x374CAD4
	0x0374C4E4 LDRB W8, [X24 + 0x1]
	0x0374C4E8 LDR V0, [X26 + 0x1C]
	0x0374C4EC MOV X0, X24
	0x0374C4F0 ORR W8, W8, 0x1
	0x0374C4F4 STRB W8, [X24 + 0x1]
	0x0374C4F8 STR S0, [X24 + 0x1C]
	0x0374C4FC LDRH W8, [X26 + 0x1A]
	0x0374C500 CMP W8, W29
	0x0374C504 CSINV W1, W8, W31, NE
	0x0374C508 BL 0x374CB6C
	0x0374C50C LDR X8, [X19 + 0x78]
	0x0374C510 LDR V0, [X26 + 0x1C]
	0x0374C514 STR S0, [X8, W25, SXTW]
	0x0374C518 LDRB W8, [X28 + 0x1]
	0x0374C51C CBZ W8, 0x374C664
	0x0374C520 MOV W26, W31
	0x0374C524 LDRH W8, [X21 + 0xC]
	0x0374C528 LDR X9, [X22 + 0x30]
	0x0374C52C MOVZ W10, 0x30
	0x0374C530 MOV X1, X31
	0x0374C534 CMP W8, W29
	0x0374C538 CSINV W8, W8, W31, NE
	0x0374C53C ADD W8, W8, W26
	0x0374C540 SMADDL X27, X8, X10, X9
	0x0374C544 LDRB W0, [X27 + 0x2]
	0x0374C548 BL 0x37C1380
	0x0374C54C TBZ X0, 0x0, 0x374C654
	0x0374C550 ADRP X9, 0x9F9000
	0x0374C554 LDRH W8, [X27]
	0x0374C558 LDR X9, [X9 + 0x680]
	0x0374C55C LDR X0, [X31 + 0x10]
	0x0374C560 CMP W8, W29
	0x0374C564 LDR X2, [X9]
	0x0374C568 CSINV W1, W8, W31, NE
	0x0374C56C BL 0x2DFA48C
	0x0374C570 CBZ X0, 0x374C654
	0x0374C574 MOV X2, X0
	0x0374C578 MOV X0, X19
	0x0374C57C MOV W1, W23
	0x0374C580 BL 0x374CA74
	0x0374C584 LDRH W8, [X28 + 0xC]
	0x0374C588 LDR X9, [X19 + 0x70]
	0x0374C58C LDRB W10, [X27 + 0x2]
	0x0374C590 MOVZ W11, 0x30
	0x0374C594 CMP W8, W29
	0x0374C598 CSINV W8, W8, W31, NE
	0x0374C59C ADD W8, W8, W26
	0x0374C5A0 SMADDL X24, X8, X11, X9
	0x0374C5A4 STRB W10, [X24 + 0x2]
	0x0374C5A8 LDR V0, [X27 + 0x18]
	0x0374C5AC MOV W25, W0
	0x0374C5B0 MOV X0, X24
	0x0374C5B4 MOV W1, W25
	0x0374C5B8 STR D0, [X24 + 0x18]
	0x0374C5BC LDR V0, [X27 + 0x8]
	0x0374C5C0 STR D0, [X24 + 0x8]
	0x0374C5C4 BL 0x374CBE4
	0x0374C5C8 LDRB W8, [X27 + 0x3]
	0x0374C5CC TBZ X8, 0x0, 0x374C654
	0x0374C5D0 MOVI V0.2D, 0x0
	0x0374C5D4 STP V0, V0, [X31 + 0x70]
	0x0374C5D8 STR V0, [X31 + 0x6]
	0x0374C5DC LDRB W1, [X28 + 0x3]
	0x0374C5E0 ADD X0, X31, 0x60
	0x0374C5E4 BL 0x374CC60
	0x0374C5E8 ADD X0, X31, 0x60
	0x0374C5EC MOV W1, W25
	0x0374C5F0 BL 0x374CAD4
	0x0374C5F4 ADD X0, X31, 0x60
	0x0374C5F8 MOV W1, W23
	0x0374C5FC BL 0x374CCC0
	0x0374C600 LDR V0, [X27 + 0x10]
	0x0374C604 ADD X0, X31, 0x60
	0x0374C608 STR D0, [X31 + 0x68]
	0x0374C60C LDRH W8, [X28 + 0xC]
	0x0374C610 CMP W8, W29
	0x0374C614 CSINV W8, W8, W31, NE
	0x0374C618 ADD W1, W8, W26
	0x0374C61C BL 0x374CB6C
	0x0374C620 LDP V0, V1, [X31 + 0x60]
	0x0374C624 LDR V2, [X31 + 0x8]
	0x0374C628 ADD X8, X31, 0x90
	0x0374C62C ADD X1, X31, 0x90
	0x0374C630 STR V0, [X31 + 0x9]
	0x0374C634 STP V1, V2, [X8 + 0x10]
	0x0374C638 LDR V0, [X27 + 0x4]
	0x0374C63C MOV X0, X19
	0x0374C640 BL 0x374CD20

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+64], X30
	003 Move [X31+72], X25
	004 Move [X31+80], X24
	005 Move [X31+88], X23
	006 Move [X31+96], X22
	007 Move [X31+104], X21
	008 Move [X31+112], X20
	009 Move [X31+120], X19
	010 Move X21, 0xC95000
	011 Move W8, [X21+3479]
	012 Move X19, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {32}
	018 Move X0, 0x9FA000
	019 Move X0, [X0+2904]
	020 Call 0x1C17CF4
	021 Move X0, 0x9F9000
	022 Move X0, [X0+4024]
	023 Call 0x1C17CF4
	024 Move X0, 0x9F9000
	025 Move X0, [X0+4032]
	026 Call 0x1C17CF4
	027 Move X0, 0x9FA000
	028 Move X0, [X0+2912]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X21+3479], W8
	032 Move [X31+32], X31
	033 Move [X31+40], X31
	034 Move [X31+48], X31
	035 Move W8, [X20+72]
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X23, 0x9F9000
	038 Move X24, 0x9FA000
	039 Move X25, 0x9FA000
	040 Move X23, [X23+4032]
	041 Move X24, [X24+2912]
	042 Move X25, [X25+2904]
	043 Move W21, W31
	044 Move W22, W31
	045 Move X8, [X20+16]
	046 Compare X8, 0
	047 JumpIfEqual {143}
	048 Move W9, [X8+24]
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Add X8, X8, W22
	051 Move X0, [X8+32]
	052 Compare X0, 0
	053 JumpIfEqual {143}
	054 Add X8, X31, 8
	055 Move X1, X31
	056 Call InputActionMap.get_devices, X0
	057 NotImplemented "Instruction LDUR not yet implemented."
	058 Move X8, [X31+24]
	059 Move [X31+2], V0
	060 Move W9, [X31+32]
	061 Move [X31+48], X8
	062 Compare W9, 0
	063 JumpIfEqual {80}
	064 Move X1, [X23]
	065 Add X0, X31, 32
	066 Call Nullable`1<ReadOnlyArray`1<Object>>.get_Value, X0
	067 Move X8, [X24]
	068 Move [X31+8], X0
	069 Move [X31+16], X1
	070 Add X1, X31, 8
	071 Move X0, X8
	072 Call 0x1C17E04
	073 Move X2, [X25]
	074 Move X1, X19
	075 Call Enumerable.Contains, X0, X1
	076 Move TEMP, X0
	077 And TEMP, TEMP, 1
	078 Compare TEMP, 1
	079 JumpIfNotEqual {81}
	080 Move W21, 1
	081 Move W8, [X20+72]
	082 Add W22, W22, 1
	083 NotImplemented "Instruction CMP not yet implemented."
	084 NotImplemented "Instruction CMP not yet implemented."
	085 NotImplemented "Instruction CSET not yet implemented."
	086 NotImplemented "Instruction ORN not yet implemented."
	087 Move TEMP, X9
	088 And TEMP, TEMP, 1
	089 Compare TEMP, 1
	090 JumpIfEqual {131}
	091 Move W21, W31
	092 Move X9, [X20+16]
	093 Compare X9, 0
	094 JumpIfEqual {143}
	095 Move W10, [X9+24]
	096 NotImplemented "Instruction CMP not yet implemented."
	097 Add X9, X9, W21
	098 Move X9, [X9+32]
	099 Compare X9, 0
	100 JumpIfEqual {143}
	101 Move X22, [X9+48]
	102 Compare X22, 0
	103 JumpIfEqual {128}
	104 Move X9, [X22+24]
	105 NotImplemented "Instruction CMP not yet implemented."
	106 And X8, X9, 0
	107 Compare X8, 0
	108 JumpIfEqual {144}
	109 Move X23, X31
	110 Subtract X24, X8, 1
	111 Add X25, X22, 48
	112 Move X1, [X25+48]
	113 Compare X1, 0
	114 JumpIfNotEqual {116}
	115 Move X1, [X25]
	116 Move X0, X19
	117 Move W2, W31
	118 Move X3, X31
	119 Call InputControlPath.TryFindControl, X0, X1, X2
	120 Compare X0, 0
	121 JumpIfNotEqual {132}
	122 NotImplemented "Instruction CMP not yet implemented."
	123 Move W8, [X22+24]
	124 Add X23, X23, 1
	125 Add X25, X25, 88
	126 NotImplemented "Instruction CMP not yet implemented."
	127 Move W8, [X20+72]
	128 Add W21, W21, 1
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Move W0, W31
	131 Move W0, W31
	132 Move W0, 1
	133 Move X20, [X31+112]
	134 Move X19, [X31+120]
	135 Move X22, [X31+96]
	136 Move X21, [X31+104]
	137 Move X24, [X31+80]
	138 Move X23, [X31+88]
	139 Move X30, [X31+64]
	140 Move X25, [X31+72]
	141 Add X31, X31, 128
	142 Return X0
	143 Call 0x1C17F20
	144 Call 0x1C17F28

Method: System.Boolean HasEnabledActions()

Disassembly:
	0x0374C65C CMP W26, W8
	0x0374C660 B.CC 0x374C524
	0x0374C664 LDRSW X8, [X19 + 0x54]
	0x0374C668 ADD X23, X23, 0x1
	0x0374C66C CMP X23, X8
	0x0374C670 B.LT 0x374C39C
	0x0374C674 MOV X0, X19
	0x0374C678 BL 0x374CE78
	0x0374C67C MOVZ W1, 0x8
	0x0374C680 MOV X0, X19
	0x0374C684 BL 0x374C08C
	0x0374C688 TBZ X20, 0x0, 0x374C824
	0x0374C68C ADRP X8, 0x9F9000
	0x0374C690 LDR X8, [X8 + 0x2D8]
	0x0374C694 ADRP X9, 0x9F9000
	0x0374C698 LDR X8, [X8]
	0x0374C69C LDR X8, [X8 + 0xB8]
	0x0374C6A0 LDR X9, [X9 + 0xBA0]
	0x0374C6A4 ADD X0, X8, 0x18
	0x0374C6A8 LDR X1, [X9]
	0x0374C6AC BL 0x28F140C
	0x0374C6B0 CMP W0, 0x1
	0x0374C6B4 B.LT 0x374C824
	0x0374C6B8 LDR W8, [X19 + 0x48]
	0x0374C6BC CMP W8, 0x1
	0x0374C6C0 B.LT 0x374C824
	0x0374C6C4 ADRP X24, 0x9F9000
	0x0374C6C8 ADRP X25, 0x9F9000
	0x0374C6CC ADRP X26, 0x9F9000
	0x0374C6D0 ADRP X27, 0x9F9000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W8, [X0+72]
	005 NotImplemented "Instruction CMP not yet implemented."
	006 Move X19, X0
	007 Move X20, X31
	008 Move X8, [X19+16]
	009 Compare X8, 0
	010 JumpIfEqual {32}
	011 Move W9, [X8+24]
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Add X8, X8, X20
	014 Move X0, [X8+32]
	015 Compare X0, 0
	016 JumpIfEqual {32}
	017 Move X1, X31
	018 Call InputActionMap.get_enabled, X0
	019 Move TEMP, X0
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {27}
	023 Move W8, [X19+72]
	024 Add X20, X20, 1
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move W0, W31
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 And W0, W0, 1
	030 Move X30, [X31+32]
	031 Return X0
	032 Call 0x1C17F20
	033 Call 0x1C17F28

Method: System.Void FinishBindingCompositeSetups()

Disassembly:
	0x0374C6D4 ADRP X22, 0x9F9000
	0x0374C6D8 LDR X24, [X24 + 0xB98]
	0x0374C6DC LDR X25, [X25 + 0x2A8]
	0x0374C6E0 LDR X26, [X26 + 0xB70]
	0x0374C6E4 LDR X27, [X27 + 0xB78]
	0x0374C6E8 LDR X22, [X22 + 0xB68]
	0x0374C6EC MOV W23, W31
	0x0374C6F0 LDR X8, [X19 + 0x10]
	0x0374C6F4 CBZ X8, 0x374C858
	0x0374C6F8 LDR W9, [X8 + 0x18]
	0x0374C6FC CMP W23, W9
	0x0374C700 B.CS 0x374C85C
	0x0374C704 ADD X8, X8, W23, 0x3, SXTW
	0x0374C708 LDR X20, [X8 + 0x20]
	0x0374C70C CBZ X20, 0x374C858
	0x0374C710 LDR X8, [X20 + 0x50]
	0x0374C714 CBNZ X8, 0x374C740
	0x0374C718 LDR X0, [X20 + 0x28]
	0x0374C71C LDR X1, [X24]
	0x0374C720 LDR W21, [X20 + 0x48]
	0x0374C724 BL 0x217B258
	0x0374C728 CMP W21, W0
	0x0374C72C B.NE 0x374C740
	0x0374C730 MOVZ W0, 0x2
	0x0374C734 MOV X1, X20
	0x0374C738 BL 0x374CF48
	0x0374C73C B 0x374C7C4
	0x0374C740 MOV X0, X20
	0x0374C744 MOV X1, X31
	0x0374C748 BL 0x3739CBC
	0x0374C74C LDR X9, [X25]
	0x0374C750 STP X0, X1, [X31 + 0x50]
	0x0374C754 ADD X8, X31, 0x18
	0x0374C758 ADD X0, X31, 0x50
	0x0374C75C MOV X1, X9
	0x0374C760 BL 0x24FD990
	0x0374C764 LDUR V0, [X31 + 0x18]
	0x0374C768 LDR X8, [X31 + 0x28]
	0x0374C76C STR V0, [X31 + 0x3]
	0x0374C770 STR X8, [X31 + 0x40]
	0x0374C774 LDR X1, [X26]
	0x0374C778 ADD X0, X31, 0x30
	0x0374C77C BL 0x2BC496C
	0x0374C780 TBZ X0, 0x0, 0x374C7B8
	0x0374C784 LDR X1, [X27]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+8], X31
	003 Move [X31+16], X30
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move [X31], X31
	009 Move W8, [X0+84]
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Move X19, X0
	012 Move X20, X31
	013 Move X21, X31
	014 Move W22, 0xFFFF
	015 Move X9, [X19+104]
	016 Add X9, X20, X9
	017 Move W10, [X9+4]
	018 Move TEMP, X10
	019 And TEMP, TEMP, 4
	020 Compare TEMP, 4
	021 JumpIfNotEqual {42}
	022 NotImplemented "Instruction LDRH not yet implemented."
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move X8, [X19+48]
	025 Compare X8, 0
	026 JumpIfEqual {52}
	027 Move W10, [X8+24]
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Add X8, X8, W9
	030 Move X0, [X8+32]
	031 Move [X31], X19
	032 Move [X31+8], W21
	033 Move [X31+12], W31
	034 Compare X0, 0
	035 JumpIfEqual {52}
	036 Move X8, [X0]
	037 Add X1, X31, 0
	038 Move X9, [X8+456]
	039 Move X2, [X8+464]
	040 NotImplemented "Instruction BLR not yet implemented."
	041 Move W8, [X19+84]
	042 Add X21, X21, 1
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Add X20, X20, 32
	045 Move X20, [X31+48]
	046 Move X19, [X31+56]
	047 Move X22, [X31+32]
	048 Move X21, [X31+40]
	049 Move X30, [X31+16]
	050 Add X31, X31, 64
	051 Return 
	052 Call 0x1C17F20
	053 Call 0x1C17F28

Method: System.Void PrepareForBindingReResolution(System.Boolean needFullResolve, ref UnityEngine.InputSystem.InputControlList`1<UnityEngine.InputSystem.InputControl> activeControls, ref System.Boolean hasEnabledActions)

Disassembly:
	0x0374C7A0 BL 0x373485C
	0x0374C7A4 TBZ X0, 0x0, 0x374C774
	0x0374C7A8 MOV W0, W31
	0x0374C7AC MOV X1, X20
	0x0374C7B0 BL 0x374CF48
	0x0374C7B4 B 0x374C774
	0x0374C7B8 LDR X1, [X22]
	0x0374C7BC ADD X0, X31, 0x30
	0x0374C7C0 BL 0x2BC4968
	0x0374C7C4 LDR W8, [X19 + 0x48]
	0x0374C7C8 ADD W23, W23, 0x1
	0x0374C7CC CMP W23, W8
	0x0374C7D0 B.LT 0x374C6F0
	0x0374C7D4 B 0x374C824
	0x0374C7D8 BL 0x1C16F20
	0x0374C7DC B 0x374C86C
	0x0374C7E0 B 0x374C7F0
	0x0374C7E4 B 0x374C7F0
	0x0374C7E8 B 0x374C7F0
	0x0374C7EC B 0x374C7F0
	0x0374C7F0 MOV X20, X0
	0x0374C7F4 CMP W1, 0x1
	0x0374C7F8 B.NE 0x374C860
	0x0374C7FC MOV X0, X20
	0x0374C800 BL 0x3EB1AD0
	0x0374C804 LDR X21, [X0]
	0x0374C808 BL 0x3EB1AE0
	0x0374C80C LDR X1, [X22]
	0x0374C810 ADD X0, X31, 0x30
	0x0374C814 BL 0x2BC4968
	0x0374C818 CBZ X21, 0x374C7C4
	0x0374C81C MOV X0, X21
	0x0374C820 BL 0x1C16F18
	0x0374C824 LDR X8, [X31 + 0x8]
	0x0374C828 LDR X8, [X8 + 0x28]
	0x0374C82C LDR X9, [X31 + 0xC8]
	0x0374C830 CMP X8, X9
	0x0374C834 B.NE 0x374C868
	0x0374C838 LDP X20, X19, [X31 + 0x120]
	0x0374C83C LDP X22, X21, [X31 + 0x110]
	0x0374C840 LDP X24, X23, [X31 + 0x100]
	0x0374C844 LDP X26, X25, [X31 + 0xF0]
	0x0374C848 LDP X28, X27, [X31 + 0xE0]
	0x0374C84C LDP X29, X30, [X31 + 0xD0]
	0x0374C850 ADD X31, X31, 0x130
	0x0374C854 RET
	0x0374C858 BL 0x1C16F20
	0x0374C85C BL 0x1C16F28
	0x0374C860 MOV X21, X31
	0x0374C864 B 0x374C870
	0x0374C868 BL 0x3EB1B20
	0x0374C86C MOV X20, X0
	0x0374C870 LDR X1, [X22]
	0x0374C874 ADD X0, X31, 0x30
	0x0374C878 BL 0x2BC4968
	0x0374C87C CBNZ X21, 0x374C888
	0x0374C880 MOV X0, X20
	0x0374C884 BL 0x1D2C690
	0x0374C888 MOV X0, X21
	0x0374C88C BL 0x1C16F18
	0x0374C890 BL 0x1990590
	0x0374C894 STRB W1, [X0]
	0x0374C898 RET
	0x0374C89C LDRH W8, [X0 + 0x6]
	0x0374C8A0 MOVZ W9, 0xFFFF
	0x0374C8A4 CMP W8, W9
	0x0374C8A8 CSINV W0, W8, W31, NE
	0x0374C8AC RET
	0x0374C8B0 LDRB W8, [X0]
	0x0374C8B4 CMP W8, 0x0
	0x0374C8B8 CSET W0, EQ
	0x0374C8BC RET
	0x0374C8C0 LDRB W8, [X0 + 0x4]
	0x0374C8C4 UBFM W0, W8, 0x5, 0x5
	0x0374C8C8 RET
	0x0374C8CC LDRB W8, [X0 + 0x4]
	0x0374C8D0 ANDS W31, W1, 0x1
	0x0374C8D4 MOVZ W9, 0x10
	0x0374C8D8 CSEL W9, W9, W31, NE
	0x0374C8DC AND W8, W8, 0xFFFFFFEF
	0x0374C8E0 ORR W8, W8, W9, 0x0
	0x0374C8E4 STRB W8, [X0 + 0x4]
	0x0374C8E8 RET
	0x0374C8EC STP X29, X30, [X31 - 0x60]!
	0x0374C8F0 STP X28, X27, [X31 + 0x10]
	0x0374C8F4 STP X26, X25, [X31 + 0x20]
	0x0374C8F8 STP X24, X23, [X31 + 0x30]
	0x0374C8FC STP X22, X21, [X31 + 0x40]
	0x0374C900 STP X20, X19, [X31 + 0x50]
	0x0374C904 ADRP X24, 0xC94000
	0x0374C908 ADRP X23, 0x9CF000
	0x0374C90C LDRB W8, [X24 + 0xD9B]
	0x0374C910 LDR X23, [X23 + 0x270]
	0x0374C914 MOV W21, W3
	0x0374C918 MOV W19, W2
	0x0374C91C MOV W22, W1
	0x0374C920 MOV X20, X0
	0x0374C924 TBNZ X8, 0x0, 0x374C93C
	0x0374C928 ADRP X0, 0x9CF000
	0x0374C92C LDR X0, [X0 + 0x270]
	0x0374C930 BL 0x1C16CF4
	0x0374C934 MOVZ W8, 0x1
	0x0374C938 STRB W8, [X24 + 0xD9B]
	0x0374C93C LDR X0, [X23]
	0x0374C940 LDR W8, [X0 + 0xE0]
	0x0374C944 CBNZ W8, 0x374C950
	0x0374C948 BL 0x1C16DFC
	0x0374C94C LDR X0, [X23]
	0x0374C950 CMP W21, 0x1
	0x0374C954 B.LT 0x374CA50
	0x0374C958 LDR X8, [X0 + 0xB8]
	0x0374C95C MOV W23, W21
	0x0374C960 LDR X9, [X20 + 0x88]
	0x0374C964 UBFM X22, X22, 0x18, 0x17
	0x0374C968 LDR X21, [X8]
	0x0374C96C UBFM W24, W19, 0x1F, 0x1E
	0x0374C970 MOVZ W25, 0x1
	0x0374C974 MOVZ W26, 0xFFFF
	0x0374C978 MOVN X27, 0x1F
	0x0374C97C ADD W8, W19, 0x1F
	0x0374C980 CMP W19, 0x0
	0x0374C984 CSEL W8, W8, W19, LT
	0x0374C988 SBFM W10, W8, 0x5, 0x1F
	0x0374C98C LDR W10, [X9, W10, SXTW]
	0x0374C990 LSLV W28, W25, W19
	0x0374C994 ANDS W31, W10, W28, 0x0
	0x0374C998 B.NE 0x374CA40
	0x0374C99C LDP X9, X10, [X20 + 0xA0]
	0x0374C9A0 LDR X12, [X20 + 0x68]
	0x0374C9A4 ADD W11, W24, 0x1
	0x0374C9A8 LDRSW X9, [X9, W19, SXTW]
	0x0374C9AC LDRH W10, [X10, W11, SXTW]
	0x0374C9B0 ADD X14, X12, X9, 0x5, LSL
	0x0374C9B4 MOV X11, X14
	0x0374C9B8 LDRB W13, [X11 + 0x4]!
	0x0374C9BC TBZ X13, 0x5, 0x374C9E4
	0x0374C9C0 TBZ X13, 0x3, 0x374C9DC
	0x0374C9C4 LDRH W11, [X14 + 0x8]
	0x0374C9C8 UBFM X13, X11, 0x3B, 0x3A
	0x0374C9CC CMP W11, W26
	0x0374C9D0 CSEL X11, X27, X13, EQ
	0x0374C9D4 ADD X11, X11, X12
	0x0374C9D8 LDRB W13, [X11 + 0x4]!
	0x0374C9DC ORR W12, W13, 0x10
	0x0374C9E0 STRB W12, [X11]
	0x0374C9E4 LDR X11, [X20 + 0x18]
	0x0374C9E8 CBZ X11, 0x374CA6C
	0x0374C9EC LDR W12, [X11 + 0x18]
	0x0374C9F0 CMP W19, W12
	0x0374C9F4 B.CS 0x374CA70
	0x0374C9F8 CBZ X21, 0x374CA6C
	0x0374C9FC LDR X12, [X20 + 0xA8]
	0x0374CA00 SBFM X29, X8, 0x5, 0x1F
	0x0374CA04 SXTW X8, W19
	0x0374CA08 ADD X11, X11, X8, 0x3, LSL
	0x0374CA0C LDRH W4, [X12, W24, SXTW]
	0x0374CA10 LDR X1, [X11 + 0x20]
	0x0374CA14 ORR X8, X22, X8, 0x0
	0x0374CA18 ORR X8, X8, X9, 0x18
	0x0374CA1C ORR X3, X8, X10, 0x30
	0x0374CA20 MOV X0, X21
	0x0374CA24 MOV X2, X20
	0x0374CA28 MOV X5, X31
	0x0374CA2C BL 0x37CC1B4
	0x0374CA30 LDR X9, [X20 + 0x88]
	0x0374CA34 LDR W8, [X9, X29, LSL #2]
	0x0374CA38 ORR W8, W8, W28, 0x0
	0x0374CA3C STR W8, [X9, X29, LSL #2]
	0x0374CA40 ADD W24, W24, 0x2
	0x0374CA44 SUBS X23, X23, 0x1
	0x0374CA48 ADD W19, W19, 0x1
	0x0374CA4C B.NE 0x374C97C
	0x0374CA50 LDP X20, X19, [X31 + 0x50]
	0x0374CA54 LDP X22, X21, [X31 + 0x40]
	0x0374CA58 LDP X24, X23, [X31 + 0x30]
	0x0374CA5C LDP X26, X25, [X31 + 0x20]
	0x0374CA60 LDP X28, X27, [X31 + 0x10]
	0x0374CA64 LDP X29, X30, [X31], #0x60
	0x0374CA68 RET
	0x0374CA6C BL 0x1C16F20
	0x0374CA70 BL 0x1C16F28
	0x0374CA74 STR X30, [X31 - 0x10]!
	0x0374CA78 LDR X8, [X0 + 0x68]
	0x0374CA7C SXTW X9, W1
	0x0374CA80 ADD X9, X8, X9, 0x5, LSL
	0x0374CA84 LDRB W8, [X9]
	0x0374CA88 CBZ X8, 0x374CAC0
	0x0374CA8C LDR X10, [X0 + 0x18]
	0x0374CA90 CBZ X10, 0x374CAD0
	0x0374CA94 LDRH W0, [X9 + 0xE]
	0x0374CA98 LDR W9, [X10 + 0x18]
	0x0374CA9C ADD X10, X10, 0x20
	0x0374CAA0 CMP X0, X9
	0x0374CAA4 B.CS 0x374CACC
	0x0374CAA8 LDR X11, [X10, X0, LSL #3]
	0x0374CAAC CMP X11, X2
	0x0374CAB0 B.EQ 0x374CAC4
	0x0374CAB4 SUBS X8, X8, 0x1
	0x0374CAB8 ADD X0, X0, 0x1
	0x0374CABC B.NE 0x374CAA0
	0x0374CAC0 MOVN W0, 0x0
	0x0374CAC4 LDR X30, [X31], #0x10
	0x0374CAC8 RET
	0x0374CACC BL 0x1C16F28
	0x0374CAD0 BL 0x1C16F20
	0x0374CAD4 STP X30, X19, [X31 - 0x10]!
	0x0374CAD8 ADDS W31, W1, 0x1
	0x0374CADC MOVZ W8, 0xFFFF
	0x0374CAE0 B.EQ 0x374CAF0
	0x0374CAE4 CMP W1, W8
	0x0374CAE8 B.CS 0x374CAFC
	0x0374CAEC MOV W8, W1
	0x0374CAF0 STRH W8, [X0 + 0x4]
	0x0374CAF4 LDP X30, X19, [X31], #0x10
	0x0374CAF8 RET
	0x0374CAFC ADRP X0, 0x9A7000
	0x0374CB00 LDR X0, [X0 + 0xB40]
	0x0374CB04 BL 0x1C16D08
	0x0374CB08 BL 0x1C16F10
	0x0374CB0C MOV X19, X0
	0x0374CB10 ADRP X0, 0x9F9000
	0x0374CB14 LDR X0, [X0 + 0xBA8]
	0x0374CB18 BL 0x1C16D08
	0x0374CB1C MOV X1, X0
	0x0374CB20 MOV X0, X19
	0x0374CB24 MOV X2, X31
	0x0374CB28 BL 0x3379A44
	0x0374CB2C ADRP X0, 0x9F9000
	0x0374CB30 LDR X0, [X0 + 0xBB0]
	0x0374CB34 BL 0x1C16D08
	0x0374CB38 MOV X1, X0
	0x0374CB3C MOV X0, X19
	0x0374CB40 BL 0x1C16DEC
	0x0374CB44 LDRB W8, [X0 + 0x1]
	0x0374CB48 STR S0, [X0 + 0x1C]
	0x0374CB4C ORR W8, W8, 0x1
	0x0374CB50 STRB W8, [X0 + 0x1]
	0x0374CB54 RET
	0x0374CB58 LDRH W8, [X0 + 0x1A]
	0x0374CB5C MOVZ W9, 0xFFFF
	0x0374CB60 CMP W8, W9
	0x0374CB64 CSINV W0, W8, W31, NE
	0x0374CB68 RET
	0x0374CB6C STP X30, X19, [X31 - 0x10]!
	0x0374CB70 ADDS W31, W1, 0x1
	0x0374CB74 MOVZ W8, 0xFFFF
	0x0374CB78 B.EQ 0x374CB88
	0x0374CB7C CMP W1, W8
	0x0374CB80 B.CS 0x374CB94
	0x0374CB84 MOV W8, W1
	0x0374CB88 STRH W8, [X0 + 0x1A]
	0x0374CB8C LDP X30, X19, [X31], #0x10
	0x0374CB90 RET
	0x0374CB94 ADRP X0, 0x9A7000
	0x0374CB98 LDR X0, [X0 + 0xB40]
	0x0374CB9C BL 0x1C16D08
	0x0374CBA0 BL 0x1C16F10
	0x0374CBA4 MOV X19, X0
	0x0374CBA8 ADRP X0, 0x9F9000
	0x0374CBAC LDR X0, [X0 + 0xBB8]
	0x0374CBB0 BL 0x1C16D08
	0x0374CBB4 MOV X1, X0
	0x0374CBB8 MOV X0, X19
	0x0374CBBC MOV X2, X31
	0x0374CBC0 BL 0x3379A44
	0x0374CBC4 ADRP X0, 0x9F9000
	0x0374CBC8 LDR X0, [X0 + 0xBC0]
	0x0374CBCC BL 0x1C16D08
	0x0374CBD0 MOV X1, X0
	0x0374CBD4 MOV X0, X19
	0x0374CBD8 BL 0x1C16DEC
	0x0374CBDC STRB W1, [X0 + 0x2]
	0x0374CBE0 RET
	0x0374CBE4 STP X30, X19, [X31 - 0x10]!
	0x0374CBE8 ADDS W31, W1, 0x1
	0x0374CBEC MOVZ W8, 0xFFFF
	0x0374CBF0 B.EQ 0x374CC00
	0x0374CBF4 CMP W1, W8
	0x0374CBF8 B.CS 0x374CC0C
	0x0374CBFC MOV W8, W1
	0x0374CC00 STRH W8, [X0]
	0x0374CC04 LDP X30, X19, [X31], #0x10
	0x0374CC08 RET
	0x0374CC0C ADRP X0, 0x9A7000
	0x0374CC10 LDR X0, [X0 + 0xB40]
	0x0374CC14 BL 0x1C16D08
	0x0374CC18 BL 0x1C16F10
	0x0374CC1C MOV X19, X0
	0x0374CC20 ADRP X0, 0x9F9000
	0x0374CC24 LDR X0, [X0 + 0xBA8]
	0x0374CC28 BL 0x1C16D08
	0x0374CC2C MOV X1, X0
	0x0374CC30 MOV X0, X19
	0x0374CC34 MOV X2, X31
	0x0374CC38 BL 0x3379A44
	0x0374CC3C ADRP X0, 0x9F9000
	0x0374CC40 LDR X0, [X0 + 0xBC8]
	0x0374CC44 BL 0x1C16D08
	0x0374CC48 MOV X1, X0
	0x0374CC4C MOV X0, X19
	0x0374CC50 BL 0x1C16DEC
	0x0374CC54 LDRB W8, [X0 + 0x3]
	0x0374CC58 AND W0, W8, 0x1
	0x0374CC5C RET
	0x0374CC60 STP X30, X19, [X31 - 0x10]!
	0x0374CC64 CMP W1, 0x100
	0x0374CC68 B.CS 0x374CC78
	0x0374CC6C STRB W1, [X0 + 0x2]
	0x0374CC70 LDP X30, X19, [X31], #0x10
	0x0374CC74 RET
	0x0374CC78 ADRP X0, 0x9A7000
	0x0374CC7C LDR X0, [X0 + 0xB40]
	0x0374CC80 BL 0x1C16D08
	0x0374CC84 BL 0x1C16F10
	0x0374CC88 MOV X19, X0
	0x0374CC8C ADRP X0, 0x9F9000
	0x0374CC90 LDR X0, [X0 + 0xBD0]
	0x0374CC94 BL 0x1C16D08
	0x0374CC98 MOV X1, X0

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+112], X29
	003 Move [X31+120], X30
	004 Move [X31+128], X28
	005 Move [X31+136], X27
	006 Move [X31+144], X26
	007 Move [X31+152], X25
	008 Move [X31+160], X24
	009 Move [X31+168], X23
	010 Move [X31+176], X22
	011 Move [X31+184], X21
	012 Move [X31+192], X20
	013 Move [X31+200], X19
	014 Move X19, 0xC95000
	015 Move W8, [X19+3480]
	016 Move X21, X3
	017 Move X20, X0
	018 Move [X31+24], X2
	019 Move [X31+20], W1
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {47}
	024 Move X0, 0x9FA000
	025 Move X0, [X0+2920]
	026 Call 0x1C17CF4
	027 Move X0, 0x9FA000
	028 Move X0, [X0+2928]
	029 Call 0x1C17CF4
	030 Move X0, 0x9FA000
	031 Move X0, [X0+2936]
	032 Call 0x1C17CF4
	033 Move X0, 0x9FA000
	034 Move X0, [X0+2944]
	035 Call 0x1C17CF4
	036 Move X0, 0x9D0000
	037 Move X0, [X0+3664]
	038 Call 0x1C17CF4
	039 Move X0, 0x9FA000
	040 Move X0, [X0+2952]
	041 Call 0x1C17CF4
	042 Move X0, 0x9FA000
	043 Move X0, [X0+680]
	044 Call 0x1C17CF4
	045 Move W8, 1
	046 Move [X19+3480], W8
	047 Move [X31+80], X31
	048 Move [X31+88], X31
	049 Move [X31+96], X31
	050 Move [X31+64], X31
	051 Move [X31+72], X31
	052 Move W8, [X20+72]
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move X28, 0x9FA000
	055 Move X19, 0x9FA000
	056 Move X28, [X28+2928]
	057 Move X19, [X19+2936]
	058 Move W8, [X31+20]
	059 Move W27, W31
	060 Move W29, W31
	061 Move [X31+8], X21
	062 Xor W8, W8, 1
	063 And W22, W8, 1
	064 Move [X31+16], W22
	065 Move X8, [X20+16]
	066 Compare X8, 0
	067 JumpIfEqual {319}
	068 Move W9, [X8+24]
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Add X8, X8, W29
	071 Move X24, [X8+32]
	072 Compare X24, 0
	073 JumpIfEqual {319}
	074 Move X0, X24
	075 Move X1, X31
	076 Call InputActionMap.get_enabled, X0
	077 Move TEMP, X0
	078 And TEMP, TEMP, 1
	079 Compare TEMP, 1
	080 JumpIfNotEqual {264}
	081 Move W8, 1
	082 Move [X21], W8
	083 Move W8, [X31+20]
	084 Move TEMP, X8
	085 And TEMP, TEMP, 1
	086 Compare TEMP, 1
	087 JumpIfNotEqual {91}
	088 Move X0, X20
	089 Move X1, X24
	090 Call InputActionState.DisableAllActions, X0, X1
	091 Move X0, X24
	092 Move X1, X31
	093 Call InputActionMap.get_actions, X0
	094 Move X8, 0x9FA000
	095 Move X8, [X8+680]
	096 Move [X31+64], X0
	097 Move [X31+72], X1
	098 Add X0, X31, 64
	099 Move X9, [X8]
	100 Add X8, X31, 32
	101 Move X1, X9
	102 Call ReadOnlyArray`1<Object>.GetEnumerator, X0
	103 Move V0, [X31+2]
	104 Move X8, [X31+48]
	105 Move [X31+5], V0
	106 Move [X31+96], X8
	107 Move X1, [X28]
	108 Add X0, X31, 80
	109 Call Enumerator<Object>.MoveNext, X0
	110 Move TEMP, X0
	111 And TEMP, TEMP, 1
	112 Compare TEMP, 1
	113 JumpIfNotEqual {255}
	114 Move X1, [X19]
	115 Add X0, X31, 80
	116 Call Enumerator<Object>.get_Current, X0
	117 Move X25, X0
	118 Compare X0, 0
	119 JumpIfEqual {271}
	120 Move X0, X25
	121 Move X1, X31
	122 Call InputAction.get_phase, X0
	123 Move X1, X31
	124 Call InputExtensions.IsInProgress, X0
	125 Move TEMP, X0
	126 And TEMP, TEMP, 1
	127 Compare TEMP, 1
	128 JumpIfNotEqual {107}
	129 Move X0, X25
	130 Move X1, X31
	131 Call InputAction.get_activeControl, X0
	132 Move X1, X0
	133 Move X0, X25
	134 Move X2, X31
	135 Call InputAction.ActiveControlIsValid, X0, X1
	136 Move TEMP, X0
	137 And TEMP, TEMP, 1
	138 Compare TEMP, 1
	139 JumpIfEqual {145}
	140 Move W1, [X25+192]
	141 Move W2, 1
	142 Move X0, X20
	143 Move W3, W31
	144 Call InputActionState.ResetActionState, X0, X1, X2, X3
	145 Move TEMP, X27
	146 And TEMP, TEMP, 1
	147 Compare TEMP, 1
	148 JumpIfEqual {169}
	149 Move X8, 0x9D0000
	150 Move X8, [X8+3664]
	151 NotImplemented "Instruction MOVI not yet implemented."
	152 Move [X31+32], V0
	153 Move [X31+40], V0
	154 Move X3, [X8]
	155 Add X0, X31, 32
	156 Move W1, 2
	157 Move W2, W31
	158 Call 0x2DFB684, X0, X1, X2
	159 Move V1, [X31+32]
	160 Move V0, [X31+48]
	161 Move X0, [X31+24]
	162 Move X8, 0x9FA000
	163 Move [X0], V1
	164 Move [X0+8], V0
	165 Move W1, [X20+88]
	166 Move X8, [X8+2944]
	167 Move X2, [X8]
	168 Call 0x2DFBB58, X0, X1
	169 Move X8, [X20+96]
	170 NotImplemented "Instruction LDRSW not yet implemented."
	171 Move W10, 48
	172 NotImplemented "Instruction MADD not yet implemented."
	173 NotImplemented "Instruction LDRH not yet implemented."
	174 Move X8, [X20+24]
	175 Move W10, 0xFFFF
	176 NotImplemented "Instruction CMP not yet implemented."
	177 NotImplemented "Instruction CSINV not yet implemented."
	178 Compare X8, 0
	179 JumpIfEqual {277}
	180 Move W9, [X8+24]
	181 NotImplemented "Instruction CMP not yet implemented."
	182 Add X8, X8, W1
	183 Move X2, [X8+32]
	184 Move X8, 0x9FA000
	185 Move X8, [X8+2952]
	186 Move X3, [X8]
	187 Move X0, [X31+24]
	188 Call 0x2DFB588, X0, X1, X2
	189 Move X8, [X20+104]
	190 NotImplemented "Instruction LDRH not yet implemented."
	191 Move X21, [X31+8]
	192 Move W27, 1
	193 Add X8, X8, X9
	194 Move W22, [X8+1]
	195 Compare X22, 0
	196 JumpIfEqual {107}
	197 NotImplemented "Instruction LDRH not yet implemented."
	198 Move W9, 0xFFFF
	199 NotImplemented "Instruction CMP not yet implemented."
	200 NotImplemented "Instruction CSINV not yet implemented."
	201 Add X8, X26, X26
	202 Move X21, X8
	203 ShiftRight X21, 60
	204 And X21, X21, 0x7FFFFFF
	205 Move X8, [X20+112]
	206 Add X8, X21, X8
	207 Move W0, [X8+2]
	208 Move X1, X31
	209 Call InputExtensions.IsInProgress, X0
	210 Move TEMP, X0
	211 And TEMP, TEMP, 1
	212 Compare TEMP, 1
	213 JumpIfNotEqual {250}
	214 Move X8, [X20+112]
	215 Move W10, 0xFFFF
	216 NotImplemented "Instruction LDRH not yet implemented."
	217 Move X8, [X20+24]
	218 NotImplemented "Instruction CMP not yet implemented."
	219 NotImplemented "Instruction CSINV not yet implemented."
	220 Compare X8, 0
	221 JumpIfEqual {273}
	222 Move W9, [X8+24]
	223 NotImplemented "Instruction CMP not yet implemented."
	224 Move X23, W27
	225 Add X8, X8, X23
	226 Move X1, [X8+32]
	227 Move X0, X25
	228 Move X2, X31
	229 Call InputAction.ActiveControlIsValid, X0, X1
	230 Move TEMP, X0
	231 And TEMP, TEMP, 1
	232 Compare TEMP, 1
	233 JumpIfNotEqual {247}
	234 Move X8, [X20+24]
	235 Compare X8, 0
	236 JumpIfEqual {274}
	237 Move W9, [X8+24]
	238 NotImplemented "Instruction CMP not yet implemented."
	239 Add X8, X8, X23
	240 Move X2, [X8+32]
	241 Move X8, 0x9FA000
	242 Move X8, [X8+2952]
	243 Move X3, [X8]
	244 Move X0, [X31+24]
	245 Move W1, W27
	246 Call 0x2DFB588, X0, X1, X2
	247 Move X0, X20
	248 Move W1, W26
	249 Call InputActionState.ResetInteractionState, X0, X1
	250 Add X21, X21, 48
	251 Subtract X22, X22, 1
	252 Add W26, W26, 1
	253 Move X21, [X31+8]
	254 Move W27, 1
	255 Move X8, 0x9FA000
	256 Move X8, [X8+2920]
	257 Add X0, X31, 80
	258 Move X1, [X8]
	259 Call Enumerator<Object>.Dispose, X0
	260 Move X0, X20
	261 Move X1, X24
	262 Call InputActionState.DisableControls, X0, X1
	263 Move W22, [X31+16]
	264 Move X0, X24
	265 Move W1, W22
	266 Move X2, X31
	267 Call InputActionMap.ClearCachedActionData, X0, X1
	268 Move W8, [X20+72]
	269 Add W29, W29, 1
	270 NotImplemented "Instruction CMP not yet implemented."
	271 Call 0x1C17F20
	272 Call 0x1C17F28
	273 Call 0x1C17F20
	274 Call 0x1C17F20
	275 Call 0x1C17F28
	276 Call 0x1C17F28
	277 Call 0x1C17F20
	278 Move X21, [X31+8]
	279 Move X8, X1
	280 Move X25, X0
	281 Move W27, W31
	282 Move X21, [X31+8]
	283 Move X8, X1
	284 Move X25, X0
	285 Move W27, 1
	286 Move X8, X1
	287 Move X25, X0
	288 NotImplemented "Instruction CMP not yet implemented."
	289 Move X0, X25
	290 Call 0x3EB2AD0
	291 Move X26, [X0]
	292 Call 0x3EB2AE0
	293 Move X8, 0x9FA000
	294 Move X8, [X8+2920]
	295 Add X0, X31, 80
	296 Move X1, [X8]
	297 Call Enumerator<Object>.Dispose, X0
	298 Compare X26, 0
	299 JumpIfEqual {260}
	300 Move X0, X26
	301 Call 0x1C17F18
	302 Move W1, 7
	303 Move X0, X20
	304 Call InputActionState.NotifyListenersOfActionChange, X0, X1
	305 Move X20, [X31+192]
	306 Move X19, [X31+200]
	307 Move X22, [X31+176]
	308 Move X21, [X31+184]
	309 Move X24, [X31+160]
	310 Move X23, [X31+168]
	311 Move X26, [X31+144]
	312 Move X25, [X31+152]
	313 Move X28, [X31+128]
	314 Move X27, [X31+136]
	315 Move X29, [X31+112]
	316 Move X30, [X31+120]
	317 Add X31, X31, 208
	318 Return 
	319 Call 0x1C17F20
	320 Call 0x1C17F28
	321 Move X26, X31
	322 Move X25, X0
	323 Move X8, 0x9FA000
	324 Move X8, [X8+2920]
	325 Move X1, [X8]
	326 Add X0, X31, 80
	327 Call Enumerator<Object>.Dispose, X0
	328 Compare X26, 0
	329 JumpIfNotEqual {332}
	330 Move X0, X25
	331 Call 0x1D2D690
	332 Move X0, X26
	333 Call 0x1C17F18
	334 Call 0x1991590

Method: System.Void FinishBindingResolution(System.Boolean hasEnabledActions, UnityEngine.InputSystem.InputActionState/UnmanagedMemory oldMemory, UnityEngine.InputSystem.InputControlList`1<UnityEngine.InputSystem.InputControl> activeControls, System.Boolean isFullResolve)

Disassembly:
	0x0374D180 CMP W8, W25
	0x0374D184 CSINV W8, W8, W31, NE
	0x0374D188 B.EQ 0x374D1E4
	0x0374D18C LDR X9, [X21 + 0x18]
	0x0374D190 CBZ X9, 0x374D278
	0x0374D194 LDR W10, [X9 + 0x18]
	0x0374D198 CMP W8, W10
	0x0374D19C B.CS 0x374D270
	0x0374D1A0 ADD X8, X9, W8, 0x3, UXTW
	0x0374D1A4 LDR X8, [X8 + 0x20]
	0x0374D1A8 CBZ X8, 0x374D274
	0x0374D1AC LDR X8, [X8 + 0x78]
	0x0374D1B0 CMP X8, X20
	0x0374D1B4 B.NE 0x374D1E4
	0x0374D1B8 B 0x374D1D0
	0x0374D1BC MOV X0, X21
	0x0374D1C0 MOV X1, X20
	0x0374D1C4 MOV W2, W22
	0x0374D1C8 BL 0x374D33C
	0x0374D1CC TBZ X0, 0x0, 0x374D1E4
	0x0374D1D0 MOVZ W2, 0x1
	0x0374D1D4 MOV X0, X21
	0x0374D1D8 MOV W1, W22
	0x0374D1DC MOV W3, W31
	0x0374D1E0 BL 0x374BF30
	0x0374D1E4 LDRSW X8, [X21 + 0x4C]
	0x0374D1E8 ADD X22, X22, 0x1
	0x0374D1EC ADD X24, X24, 0x30
	0x0374D1F0 CMP X22, X8
	0x0374D1F4 B.LT 0x374D160
	0x0374D1F8 MOV X20, X31
	0x0374D1FC CBZ X19, 0x374D258
	0x0374D200 LDR X8, [X19]
	0x0374D204 LDR X1, [X23]

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+160], X30
	003 Move [X31+168], X23
	004 Move [X31+176], X22
	005 Move [X31+184], X21
	006 Move [X31+192], X20
	007 Move [X31+200], X19
	008 Move W20, W4
	009 Move X21, X3
	010 Move X22, X2
	011 Move W23, W1
	012 Move X19, X0
	013 Call InputActionState.FinishBindingCompositeSetups, X0
	014 Move TEMP, X23
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfNotEqual {39}
	018 Add X0, X31, 32
	019 Move W2, 128
	020 Move X1, X22
	021 Call 0x3EB2AC0
	022 Move V0, [X21]
	023 Move V1, [X21+16]
	024 And W3, W20, 1
	025 Add X1, X31, 32
	026 Add X2, X31, 0
	027 Move X0, X19
	028 Move [X31], V0
	029 Move [X31+8], V1
	030 Call InputActionState.RestoreActionStatesAfterReResolvingBindings, X0, X1, X2, X3
	031 Move X20, [X31+192]
	032 Move X19, [X31+200]
	033 Move X22, [X31+176]
	034 Move X21, [X31+184]
	035 Move X30, [X31+160]
	036 Move X23, [X31+168]
	037 Add X31, X31, 208
	038 Return 
	039 Move X0, X19
	040 Move X20, [X31+192]
	041 Move X19, [X31+200]
	042 Move X22, [X31+176]
	043 Move X21, [X31+184]
	044 Move X30, [X31+160]
	045 Move X23, [X31+168]
	046 Move W1, 8
	047 Add X31, X31, 208
	048 Call InputActionState.NotifyListenersOfActionChange, X0, X1
	049 Return 

Method: System.Void RestoreActionStatesAfterReResolvingBindings(UnityEngine.InputSystem.InputActionState/UnmanagedMemory oldState, UnityEngine.InputSystem.InputControlList`1<UnityEngine.InputSystem.InputControl> activeControls, System.Boolean isFullResolve)

Disassembly:
	0x0374D208 LDRH W9, [X8 + 0x12E]
	0x0374D20C CBZ X9, 0x374D230
	0x0374D210 LDR X10, [X8 + 0xB0]
	0x0374D214 ADD X10, X10, 0x8
	0x0374D218 LDUR X11, [X10 - 0x8]
	0x0374D21C CMP X11, X1
	0x0374D220 B.EQ 0x374D240
	0x0374D224 SUBS X9, X9, 0x1
	0x0374D228 ADD X10, X10, 0x10
	0x0374D22C B.NE 0x374D218
	0x0374D230 MOV X0, X19
	0x0374D234 MOV W2, W31
	0x0374D238 BL 0x1C5C788
	0x0374D23C B 0x374D24C
	0x0374D240 LDRSW X9, [X10]
	0x0374D244 ADD X8, X8, X9, 0x4, LSL
	0x0374D248 ADD X0, X8, 0x138
	0x0374D24C LDP X8, X1, [X0]
	0x0374D250 MOV X0, X19
	0x0374D254 BLR X8
	0x0374D258 CBNZ X20, 0x374D27C
	0x0374D25C LDP X20, X19, [X31 + 0x30]
	0x0374D260 LDP X22, X21, [X31 + 0x20]
	0x0374D264 LDP X24, X23, [X31 + 0x10]
	0x0374D268 LDP X30, X25, [X31], #0x40
	0x0374D26C RET
	0x0374D270 BL 0x1C16F28
	0x0374D274 BL 0x1C16F20
	0x0374D278 BL 0x1C16F20
	0x0374D27C MOV X0, X20
	0x0374D280 BL 0x1C16F18
	0x0374D284 B 0x374D290
	0x0374D288 B 0x374D290
	0x0374D28C B 0x374D290
	0x0374D290 MOV X21, X0
	0x0374D294 CMP W1, 0x1
	0x0374D298 B.NE 0x374D2B0
	0x0374D29C MOV X0, X21
	0x0374D2A0 BL 0x3EB1AD0
	0x0374D2A4 LDR X20, [X0]
	0x0374D2A8 BL 0x3EB1AE0
	0x0374D2AC B 0x374D1FC
	0x0374D2B0 MOV X20, X31
	0x0374D2B4 B 0x374D2BC
	0x0374D2B8 MOV X21, X0
	0x0374D2BC CBZ X19, 0x374D318
	0x0374D2C0 LDR X8, [X19]
	0x0374D2C4 LDR X1, [X23]
	0x0374D2C8 LDRH W9, [X8 + 0x12E]
	0x0374D2CC CBZ X9, 0x374D2F0
	0x0374D2D0 LDR X10, [X8 + 0xB0]
	0x0374D2D4 ADD X10, X10, 0x8
	0x0374D2D8 LDUR X11, [X10 - 0x8]
	0x0374D2DC CMP X11, X1
	0x0374D2E0 B.EQ 0x374D300
	0x0374D2E4 SUBS X9, X9, 0x1
	0x0374D2E8 ADD X10, X10, 0x10
	0x0374D2EC B.NE 0x374D2D8
	0x0374D2F0 MOV X0, X19
	0x0374D2F4 MOV W2, W31
	0x0374D2F8 BL 0x1C5C788
	0x0374D2FC B 0x374D30C
	0x0374D300 LDRSW X9, [X10]
	0x0374D304 ADD X8, X8, X9, 0x4, LSL
	0x0374D308 ADD X0, X8, 0x138
	0x0374D30C LDP X8, X1, [X0]
	0x0374D310 MOV X0, X19
	0x0374D314 BLR X8
	0x0374D318 CBNZ X20, 0x374D324
	0x0374D31C MOV X0, X21
	0x0374D320 BL 0x1D2C690
	0x0374D324 MOV X0, X20
	0x0374D328 BL 0x1C16F18
	0x0374D32C BL 0x1990590
	0x0374D330 LDRB W8, [X0 + 0x1]
	0x0374D334 UBFM W0, W8, 0x1, 0x1
	0x0374D338 RET
	0x0374D33C STR X30, [X31 - 0x10]!
	0x0374D340 LDR X11, [X0 + 0x90]
	0x0374D344 MOVZ W8, 0x1
	0x0374D348 BFM W8, W2, 0x1F, 0x1E
	0x0374D34C LDRH W8, [X11, W8, SXTW]
	0x0374D350 CBZ X8, 0x374D3D4
	0x0374D354 UBFM W12, W2, 0x1F, 0x1E
	0x0374D358 LDR X10, [X0 + 0x98]
	0x0374D35C LDRH W11, [X11, W12, SXTW]
	0x0374D360 LDR X12, [X0 + 0x68]
	0x0374D364 MOV X9, X31
	0x0374D368 MOV W13, W31
	0x0374D36C ADD X14, X9, X11
	0x0374D370 LDRH W14, [X10, X14, LSL #1]
	0x0374D374 ADD X15, X12, X14, 0x5, LSL
	0x0374D378 LDRB W14, [X15]
	0x0374D37C CBZ X14, 0x374D3C4
	0x0374D380 LDR X17, [X0 + 0x18]
	0x0374D384 CBZ X17, 0x374D3E4
	0x0374D388 LDRH W15, [X15 + 0xE]
	0x0374D38C LDR W16, [X17 + 0x18]
	0x0374D390 ADD X17, X17, 0x20
	0x0374D394 CMP X15, X16
	0x0374D398 B.CS 0x374D3E8
	0x0374D39C LDR X2, [X17, X15, LSL #3]
	0x0374D3A0 CBZ X2, 0x374D3E4
	0x0374D3A4 LDR X2, [X2 + 0x78]
	0x0374D3A8 CMP X2, X1
	0x0374D3AC B.EQ 0x374D3C0
	0x0374D3B0 SUBS X14, X14, 0x1
	0x0374D3B4 ADD X15, X15, 0x1
	0x0374D3B8 B.NE 0x374D394
	0x0374D3BC B 0x374D3C4
	0x0374D3C0 MOVZ W13, 0x1
	0x0374D3C4 ADD X9, X9, 0x1
	0x0374D3C8 CMP X9, X8
	0x0374D3CC B.NE 0x374D36C
	0x0374D3D0 B 0x374D3D8
	0x0374D3D4 MOV W13, W31
	0x0374D3D8 AND W0, W13, 0x1
	0x0374D3DC LDR X30, [X31], #0x10
	0x0374D3E0 RET
	0x0374D3E4 BL 0x1C16F20
	0x0374D3E8 BL 0x1C16F28
	0x0374D3EC LDR X8, [X0 + 0x90]
	0x0374D3F0 MOVZ W9, 0x1
	0x0374D3F4 BFM W9, W1, 0x1F, 0x1E
	0x0374D3F8 UBFM W10, W1, 0x1F, 0x1E
	0x0374D3FC LDRH W9, [X8, W9, SXTW]
	0x0374D400 STRH W9, [X2]
	0x0374D404 LDRH W0, [X8, W10, SXTW]
	0x0374D408 RET
	0x0374D40C STP X30, X21, [X31 - 0x20]!
	0x0374D410 STP X20, X19, [X31 + 0x10]
	0x0374D414 LDP X10, X8, [X0 + 0x60]
	0x0374D418 SXTW X9, W2
	0x0374D41C MOV W19, W3
	0x0374D420 MOV X20, X0
	0x0374D424 ADD X8, X8, X9, 0x5, LSL
	0x0374D428 LDRH W8, [X8 + 0x6]
	0x0374D42C MOVZ W9, 0xFFFF
	0x0374D430 ADD X11, X8, X8, 0x1, LSL
	0x0374D434 CMP W8, W9
	0x0374D438 UBFM X8, X11, 0x3C, 0x3B
	0x0374D43C MOVN X11, 0x2F
	0x0374D440 CSEL X21, X11, X8, EQ
	0x0374D444 ADD X2, X21, X10
	0x0374D448 LDRH W8, [X2 + 0x1A]
	0x0374D44C CMP W8, W9
	0x0374D450 CSINV W8, W8, W31, NE
	0x0374D454 CMP W8, W3
	0x0374D458 B.NE 0x374D49C
	0x0374D45C LDR X8, [X20 + 0x70]
	0x0374D460 MOVZ W9, 0x30
	0x0374D464 SMADDL X8, X19, X9, X8
	0x0374D468 LDRB W8, [X8 + 0x2]
	0x0374D46C AND W8, W8, 0xFE
	0x0374D470 CMP W8, 0x2
	0x0374D474 B.NE 0x374D494
	0x0374D478 MOVZ W1, 0x4
	0x0374D47C MOVZ W3, 0x1
	0x0374D480 MOV X0, X20
	0x0374D484 MOV W4, W31
	0x0374D488 BL 0x374F390
	0x0374D48C LDR X8, [X20 + 0x60]
	0x0374D490 ADD X2, X21, X8
	0x0374D494 MOVZ W8, 0xFFFF
	0x0374D498 STRH W8, [X2 + 0x1A]
	0x0374D49C MOV X0, X20
	0x0374D4A0 MOV W1, W19
	0x0374D4A4 LDP X20, X19, [X31 + 0x10]
	0x0374D4A8 LDP X30, X21, [X31], #0x20
	0x0374D4AC B 0x374BDD8
	0x0374D4B0 STR X30, [X31 - 0x40]!
	0x0374D4B4 STP X24, X23, [X31 + 0x10]
	0x0374D4B8 STP X22, X21, [X31 + 0x20]
	0x0374D4BC STP X20, X19, [X31 + 0x30]
	0x0374D4C0 LDR X8, [X0 + 0x68]
	0x0374D4C4 LDRH W9, [X2 + 0x18]
	0x0374D4C8 ADD X8, X8, X9, 0x5, LSL
	0x0374D4CC LDRH W8, [X8 + 0x6]
	0x0374D4D0 MOVZ W9, 0xFFFF
	0x0374D4D4 CMP W8, W9
	0x0374D4D8 CSINV W23, W8, W31, NE
	0x0374D4DC B.EQ 0x374D620
	0x0374D4E0 LDR X8, [X0 + 0x60]
	0x0374D4E4 MOVZ W9, 0x30
	0x0374D4E8 MOV X22, X0
	0x0374D4EC SMADDL X19, X23, X9, X8
	0x0374D4F0 LDRB W8, [X19]
	0x0374D4F4 CBZ W8, 0x374D620
	0x0374D4F8 LDRB W10, [X19 + 0x1]
	0x0374D4FC MOV W20, W3
	0x0374D500 MOV X21, X2
	0x0374D504 MOV W3, W1
	0x0374D508 ORR W9, W10, 0x10
	0x0374D50C STRB W9, [X19 + 0x1]
	0x0374D510 TBZ X10, 0x1, 0x374D520
	0x0374D514 LDRSH W10, [X21 + 0x1A]
	0x0374D518 ADDS W31, W10, 0x1
	0x0374D51C B.EQ 0x374D5D0
	0x0374D520 SUBS W24, W3, 0x3
	0x0374D524 B.NE 0x374D59C
	0x0374D528 CMP W8, 0x1
	0x0374D52C B.NE 0x374D5A4
	0x0374D530 MOVZ W3, 0x2
	0x0374D534 MOV X0, X22
	0x0374D538 MOV W1, W23
	0x0374D53C MOV X2, X19
	0x0374D540 MOV X4, X21
	0x0374D544 BL 0x374F79C
	0x0374D548 LDRB W9, [X19 + 0x1]
	0x0374D54C TBZ X9, 0x4, 0x374D5EC
	0x0374D550 MOVZ W3, 0x3
	0x0374D554 MOV X0, X22
	0x0374D558 MOV W1, W23
	0x0374D55C MOV X2, X19
	0x0374D560 MOV X4, X21
	0x0374D564 BL 0x374F79C
	0x0374D568 LDRB W9, [X19 + 0x1]
	0x0374D56C TBZ X9, 0x4, 0x374D5EC
	0x0374D570 CMP W20, 0x1
	0x0374D574 B.NE 0x374D5C8
	0x0374D578 MOVZ W3, 0x4
	0x0374D57C MOV X0, X22
	0x0374D580 MOV W1, W23
	0x0374D584 MOV X2, X19
	0x0374D588 MOV X4, X21
	0x0374D58C BL 0x374F79C
	0x0374D590 LDRB W9, [X19 + 0x1]
	0x0374D594 TBNZ X9, 0x4, 0x374D5C8
	0x0374D598 B 0x374D5EC
	0x0374D59C CMP W8, W3
	0x0374D5A0 B.EQ 0x374D5FC
	0x0374D5A4 MOV X0, X22
	0x0374D5A8 MOV W1, W23
	0x0374D5AC MOV X2, X19
	0x0374D5B0 MOV X4, X21
	0x0374D5B4 BL 0x374F79C
	0x0374D5B8 LDRB W9, [X19 + 0x1]
	0x0374D5BC TBZ X9, 0x4, 0x374D5EC
	0x0374D5C0 CMP W24, 0x1
	0x0374D5C4 B.HI 0x374D5FC
	0x0374D5C8 STRB W20, [X19]
	0x0374D5CC B 0x374D5FC
	0x0374D5D0 MOV X0, X22
	0x0374D5D4 MOV W1, W23
	0x0374D5D8 MOV X2, X19
	0x0374D5DC MOV X4, X21
	0x0374D5E0 BL 0x374F79C
	0x0374D5E4 LDRB W9, [X19 + 0x1]
	0x0374D5E8 TBNZ X9, 0x4, 0x374D5FC
	0x0374D5EC MOV W8, W31
	0x0374D5F0 AND W9, W9, 0xFFFFFFEF
	0x0374D5F4 STRB W9, [X19 + 0x1]
	0x0374D5F8 B 0x374D624
	0x0374D5FC AND W8, W9, 0xFFFFFFEF
	0x0374D600 STRB W8, [X19 + 0x1]
	0x0374D604 LDRB W9, [X19]
	0x0374D608 CMP W9, 0x1
	0x0374D60C B.NE 0x374D620
	0x0374D610 MOVZ W9, 0xFFFF
	0x0374D614 AND W8, W8, 0xEEEEEEEE
	0x0374D618 STRH W9, [X19 + 0x4]
	0x0374D61C STRB W8, [X19 + 0x1]
	0x0374D620 MOVZ W8, 0x1
	0x0374D624 LDP X20, X19, [X31 + 0x30]
	0x0374D628 LDP X22, X21, [X31 + 0x20]
	0x0374D62C LDP X24, X23, [X31 + 0x10]
	0x0374D630 MOV W0, W8
	0x0374D634 LDR X30, [X31], #0x40
	0x0374D638 RET
	0x0374D63C B 0x374D64C
	0x0374D640 B 0x374D64C
	0x0374D644 B 0x374D64C
	0x0374D648 B 0x374D64C
	0x0374D64C CMP W1, 0x1
	0x0374D650 B.NE 0x374D678
	0x0374D654 BL 0x3EB1AD0
	0x0374D658 LDR X20, [X0]
	0x0374D65C BL 0x3EB1AE0
	0x0374D660 LDRB W8, [X19 + 0x1]
	0x0374D664 AND W8, W8, 0xFFFFFFEF
	0x0374D668 STRB W8, [X19 + 0x1]
	0x0374D66C CBZ X20, 0x374D604
	0x0374D670 MOV X0, X20
	0x0374D674 BL 0x1C16F18
	0x0374D678 LDRB W8, [X19 + 0x1]
	0x0374D67C AND W8, W8, 0xFFFFFFEF
	0x0374D680 STRB W8, [X19 + 0x1]
	0x0374D684 B 0x374D698
	0x0374D688 LDRB W8, [X19 + 0x1]
	0x0374D68C AND W8, W8, 0xFFFFFFEF
	0x0374D690 STRB W8, [X19 + 0x1]
	0x0374D694 CBNZ X20, 0x374D69C
	0x0374D698 BL 0x1D2C690
	0x0374D69C MOV X0, X20
	0x0374D6A0 BL 0x1C16F18
	0x0374D6A4 BL 0x1990590
	0x0374D6A8 LDRB W8, [X0 + 0x1]
	0x0374D6AC ANDS W31, W1, 0x1
	0x0374D6B0 MOVZ W9, 0x8
	0x0374D6B4 CSEL W9, W9, W31, NE
	0x0374D6B8 AND W8, W8, 0xFFFFFFF7
	0x0374D6BC ORR W8, W8, W9, 0x0
	0x0374D6C0 STRB W8, [X0 + 0x1]
	0x0374D6C4 RET
	0x0374D6C8 LDRB W8, [X0 + 0x1]
	0x0374D6CC ANDS W31, W1, 0x1
	0x0374D6D0 MOVZ W9, 0x10
	0x0374D6D4 CSEL W9, W9, W31, NE
	0x0374D6D8 AND W8, W8, 0xFFFFFFEF
	0x0374D6DC ORR W8, W8, W9, 0x0
	0x0374D6E0 STRB W8, [X0 + 0x1]
	0x0374D6E4 RET
	0x0374D6E8 LDRB W8, [X0 + 0x1]
	0x0374D6EC ANDS W31, W1, 0x1
	0x0374D6F0 MOVZ W9, 0x40
	0x0374D6F4 CSEL W9, W9, W31, NE
	0x0374D6F8 AND W8, W8, 0xFFFFFFBF
	0x0374D6FC ORR W8, W8, W9, 0x0
	0x0374D700 STRB W8, [X0 + 0x1]
	0x0374D704 RET
	0x0374D708 STR X30, [X31 - 0x10]!
	0x0374D70C CBZ X1, 0x374D728
	0x0374D710 LDR X8, [X0 + 0x60]
	0x0374D714 LDRSW X9, [X1 + 0xC0]
	0x0374D718 MOVZ W10, 0x30
	0x0374D71C MADD X0, X9, X10, X8
	0x0374D720 LDR X30, [X31], #0x10
	0x0374D724 RET
	0x0374D728 BL 0x1C16F20
	0x0374D72C STR X30, [X31 - 0x10]!
	0x0374D730 CBZ X1, 0x374D75C
	0x0374D734 LDR X9, [X0 + 0xB8]
	0x0374D738 LDRSW X10, [X1 + 0x58]
	0x0374D73C MOVZ W11, 0x30
	0x0374D740 MADD X9, X10, X11, X9
	0x0374D744 LDP V1, V0, [X9 + 0x10]
	0x0374D748 LDR V2, [X9]
	0x0374D74C STP V1, V0, [X8 + 0x10]
	0x0374D750 STR V2, [X8]
	0x0374D754 LDR X30, [X31], #0x10
	0x0374D758 RET
	0x0374D75C BL 0x1C16F20
	0x0374D760 STR X30, [X31 - 0x20]!
	0x0374D764 STP X20, X19, [X31 + 0x10]
	0x0374D768 MOV X19, X1
	0x0374D76C MOV X20, X0
	0x0374D770 BL 0x374D80C
	0x0374D774 CBZ X19, 0x374D808
	0x0374D778 LDRSW X8, [X19 + 0x58]
	0x0374D77C LDR X9, [X20 + 0xB8]
	0x0374D780 MOVZ W10, 0x30
	0x0374D784 MADD X9, X8, X10, X9
	0x0374D788 CBZ X9, 0x374D808
	0x0374D78C LDR W8, [X9 + 0x4]
	0x0374D790 CMP W8, 0x1
	0x0374D794 B.LT 0x374D7D8
	0x0374D798 LDR W9, [X9]
	0x0374D79C MOVZ W10, 0x30
	0x0374D7A0 MOVZ W11, 0x1
	0x0374D7A4 MOV X12, X8
	0x0374D7A8 LDR X13, [X20 + 0x60]
	0x0374D7AC NOP
	0x0374D7B0 SMADDL X13, X9, X10, X13
	0x0374D7B4 LDRB W14, [X13]
	0x0374D7B8 CBNZ W14, 0x374D7C0
	0x0374D7BC STRB W11, [X13]
	0x0374D7C0 LDRB W14, [X13 + 0x1]
	0x0374D7C4 SUBS X12, X12, 0x1
	0x0374D7C8 ADD W9, W9, 0x1
	0x0374D7CC AND W14, W14, 0xFFFFFFEF
	0x0374D7D0 STRB W14, [X13 + 0x1]
	0x0374D7D4 B.NE 0x374D7A8
	0x0374D7D8 MOV X0, X20
	0x0374D7DC STR W8, [X19 + 0x48]
	0x0374D7E0 BL 0x374CE78
	0x0374D7E4 LDR X1, [X19 + 0x50]
	0x0374D7E8 CBZ X1, 0x374D7F4
	0x0374D7EC MOV W0, W31
	0x0374D7F0 B 0x374D7FC
	0x0374D7F4 MOVZ W0, 0x2
	0x0374D7F8 MOV X1, X19
	0x0374D7FC LDP X20, X19, [X31 + 0x10]
	0x0374D800 LDR X30, [X31], #0x20
	0x0374D804 B 0x374CF48
	0x0374D808 BL 0x1C16F20
	0x0374D80C STR X30, [X31 - 0x10]!
	0x0374D810 CBZ X1, 0x374D848
	0x0374D814 LDRSW X1, [X1 + 0x58]
	0x0374D818 LDR X8, [X0 + 0xB8]
	0x0374D81C MOVZ W9, 0x30
	0x0374D820 MADD X8, X1, X9, X8
	0x0374D824 CBZ X8, 0x374D848
	0x0374D828 LDR W3, [X8 + 0xC]
	0x0374D82C CMP W3, 0x1
	0x0374D830 B.LT 0x374D840
	0x0374D834 LDR W2, [X8 + 0x8]
	0x0374D838 LDR X30, [X31], #0x10
	0x0374D83C B 0x374C8EC
	0x0374D840 LDR X30, [X31], #0x10
	0x0374D844 RET
	0x0374D848 BL 0x1C16F20
	0x0374D84C STR X30, [X31 - 0x20]!
	0x0374D850 STP X20, X19, [X31 + 0x10]
	0x0374D854 MOV X19, X1
	0x0374D858 MOV X20, X0
	0x0374D85C BL 0x374D8B0
	0x0374D860 CBZ X19, 0x374D8AC
	0x0374D864 LDRSW X8, [X19 + 0xC0]
	0x0374D868 LDR X9, [X20 + 0x60]
	0x0374D86C MOVZ W10, 0x30
	0x0374D870 MUL X8, X8, X10
	0x0374D874 MOVZ W10, 0x1
	0x0374D878 STRB W10, [X8, X9, LSL]
	0x0374D87C LDR X8, [X19 + 0xC8]
	0x0374D880 CBZ X8, 0x374D8AC
	0x0374D884 LDR W9, [X8 + 0x48]
	0x0374D888 MOV X0, X20
	0x0374D88C ADD W9, W9, 0x1
	0x0374D890 STR W9, [X8 + 0x48]

ISIL:
	001 Subtract X31, X31, 304
	002 Move [X31+208], X29
	003 Move [X31+216], X30
	004 Move [X31+224], X28
	005 Move [X31+232], X27
	006 Move [X31+240], X26
	007 Move [X31+248], X25
	008 Move [X31+256], X24
	009 Move [X31+264], X23
	010 Move [X31+272], X22
	011 Move [X31+280], X21
	012 Move [X31+288], X20
	013 Move [X31+296], X19
	014 Move [X31+16], X2
	015 NotImplemented "Instruction MRS not yet implemented."
	016 Move X8, [X23+40]
	017 Move X21, 0xC94000
	018 Move W20, W3
	019 Move X22, X1
	020 Move [X31+200], X8
	021 Move W8, [X21+3481]
	022 Move X19, X0
	023 Add X24, X31, 144
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {57}
	028 Move X0, 0x9F9000
	029 Move X0, [X0+2968]
	030 Call 0x1C17CF4
	031 Move X0, 0x9F9000
	032 Move X0, [X0+2976]
	033 Call 0x1C17CF4
	034 Move X0, 0x9F9000
	035 Move X0, [X0+2920]
	036 Call 0x1C17CF4
	037 Move X0, 0x9F9000
	038 Move X0, [X0+2928]
	039 Call 0x1C17CF4
	040 Move X0, 0x9F9000
	041 Move X0, [X0+2936]
	042 Call 0x1C17CF4
	043 Move X0, 0x9F9000
	044 Move X0, [X0+728]
	045 Call 0x1C17CF4
	046 Move X0, 0x9F9000
	047 Move X0, [X0+1656]
	048 Call 0x1C17CF4
	049 Move X0, 0x9F9000
	050 Move X0, [X0+1664]
	051 Call 0x1C17CF4
	052 Move X0, 0x9F9000
	053 Move X0, [X0+680]
	054 Call 0x1C17CF4
	055 Move W8, 1
	056 Move [X21+3481], W8
	057 NotImplemented "Instruction MOVI not yet implemented."
	058 Move [X31+80], X31
	059 Move [X31+88], X31
	060 Move [X31+48], X31
	061 Move [X31+56], X31
	062 Move [X24+16], V0
	063 Move [X24+24], V0
	064 Move [X31+128], V0
	065 Move [X31+136], V0
	066 Move [X31+96], V0
	067 Move [X31+104], V0
	068 Move [X31+64], X31
	069 Move W8, [X19+76]
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move X8, X31
	072 Move X9, X31
	073 Move W10, 1
	074 Move X11, [X22+32]
	075 Add X12, X8, X11
	076 Move X11, [X19+96]
	077 Move W13, [X12+36]
	078 Add X11, X8, X11
	079 Move [X11+36], W13
	080 Move W13, [X12+32]
	081 Move [X11+32], W13
	082 Move W13, [X12+40]
	083 Move [X11+40], W13
	084 Move W13, [X12+44]
	085 Move [X11+44], W13
	086 Move V0, [X12+16]
	087 Move [X11+16], D0
	088 Move W12, [X12]
	089 Compare W12, 0
	090 JumpIfEqual {109}
	091 Move [X11], W10
	092 Move TEMP, X20
	093 And TEMP, TEMP, 1
	094 Compare TEMP, 1
	095 JumpIfNotEqual {109}
	096 Move X12, [X19+16]
	097 Compare X12, 0
	098 JumpIfEqual {456}
	099 Move W11, [X11+2]
	100 Move W13, [X12+24]
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Add X11, X12, W11
	103 Move X11, [X11+32]
	104 Compare X11, 0
	105 JumpIfEqual {456}
	106 Move W12, [X11+72]
	107 Add W12, W12, 1
	108 Move [X11+72], W12
	109 NotImplemented "Instruction LDRSW not yet implemented."
	110 Add X9, X9, 1
	111 Add X8, X8, 48
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Move W8, [X19+84]
	114 Move [X31+8], X23
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Move X23, X31
	117 Move W29, 0xFFFF
	118 Move X8, [X19+104]
	119 Add X28, X8, X23
	120 Move W8, [X28+4]
	121 Move TEMP, X8
	122 And TEMP, TEMP, 8
	123 Compare TEMP, 8
	124 JumpIfEqual {326}
	125 Move TEMP, X8
	126 And TEMP, TEMP, 4
	127 Compare TEMP, 4
	128 JumpIfNotEqual {142}
	129 NotImplemented "Instruction LDRH not yet implemented."
	130 Move X10, [X22+64]
	131 Move X9, [X19+128]
	132 Move X11, X8
	133 ShiftRight X11, 62
	134 And X11, X11, 0x1FFFFFFF
	135 NotImplemented "Instruction CMP not yet implemented."
	136 Move TEMP, 3
	137 Not TEMP
	138 Move X8, TEMP
	139 NotImplemented "Instruction CSEL not yet implemented."
	140 Move V0, [X8]
	141 Move [X8], S0
	142 NotImplemented "Instruction LDRH not yet implemented."
	143 NotImplemented "Instruction CMP not yet implemented."
	144 Move X9, [X19+96]
	145 Add X25, X8, X8
	146 Add X24, X9, X25
	147 Move W8, [X24]
	148 Compare W8, 0
	149 JumpIfEqual {326}
	150 Move W8, [X28+4]
	151 Move W1, [X28+3]
	152 NotImplemented "Instruction LDRH not yet implemented."
	153 Move W3, [X28]
	154 And W9, W8, 0xFFFFFFEF
	155 Move W8, W8
	156 ShiftRight W8, 1
	157 And W8, W8, 0x7FFFFFFF
	158 And W8, W8, 16
	159 Or W8, W8, W9
	160 Move X0, X19
	161 Move [X28+4], W8
	162 Call InputActionState.EnableControls, X0, X1, X2, X3
	163 Move TEMP, X20
	164 And TEMP, TEMP, 1
	165 Compare TEMP, 1
	166 JumpIfEqual {326}
	167 Move X8, [X19+104]
	168 Move X9, X23
	169 ShiftRight X9, 59
	170 And X9, X9, 0x3FFFFFF
	171 Add X21, X9, X8
	172 Move W8, [X21+24]
	173 Move X9, X25
	174 ShiftRight X9, 60
	175 And X9, X9, 0x7FFFFFF
	176 Move [X28+24], W8
	177 Move X8, [X22+32]
	178 Add X26, X9, X8
	179 NotImplemented "Instruction LDRH not yet implemented."
	180 NotImplemented "Instruction CMP not yet implemented."
	181 Move W0, [X26]
	182 Move X1, X31
	183 Call InputExtensions.IsInProgress, X0
	184 Move TEMP, X0
	185 And TEMP, TEMP, 1
	186 Compare TEMP, 1
	187 JumpIfNotEqual {326}
	188 Move X8, [X31+16]
	189 Move W8, [X8]
	190 NotImplemented "Instruction CMP not yet implemented."
	191 Move X9, 0x9F9000
	192 NotImplemented "Instruction LDRH not yet implemented."
	193 Move X9, [X9+1664]
	194 Move X0, [X31+16]
	195 NotImplemented "Instruction CMP not yet implemented."
	196 Move X2, [X9]
	197 NotImplemented "Instruction CSINV not yet implemented."
	198 Call 0x2DFB48C, X0, X1
	199 Compare X0, 0
	200 JumpIfEqual {326}
	201 Move X9, 0x9F9000
	202 NotImplemented "Instruction LDRH not yet implemented."
	203 Move X9, [X9+1664]
	204 Move X0, [X31+16]
	205 NotImplemented "Instruction CMP not yet implemented."
	206 Move X2, [X9]
	207 NotImplemented "Instruction CSINV not yet implemented."
	208 Call 0x2DFB48C, X0, X1
	209 Move X2, X0
	210 Move X0, X19
	211 Move W1, W23
	212 Call InputActionState.FindControlIndexOnBinding, X0, X1, X2
	213 Add W31, W0, 1
	214 Move W8, [X26]
	215 Move W25, W0
	216 Move X0, X24
	217 Move W1, W25
	218 Move [X24], W8
	219 Call TriggerState.set_controlIndex, X0, X1
	220 Move W8, [X24+1]
	221 Move V0, [X26+28]
	222 Move X0, X24
	223 Or W8, W8, 1
	224 Move [X24+1], W8
	225 Move [X24+28], S0
	226 NotImplemented "Instruction LDRH not yet implemented."
	227 NotImplemented "Instruction CMP not yet implemented."
	228 NotImplemented "Instruction CSINV not yet implemented."
	229 Call TriggerState.set_interactionIndex, X0, X1
	230 Move X8, [X19+120]
	231 Move V0, [X26+28]
	232 Move [X8], S0
	233 Move W8, [X28+1]
	234 Compare W8, 0
	235 JumpIfEqual {326}
	236 Move W26, W31
	237 NotImplemented "Instruction LDRH not yet implemented."
	238 Move X9, [X22+48]
	239 Move W10, 48
	240 Move X1, X31
	241 NotImplemented "Instruction CMP not yet implemented."
	242 NotImplemented "Instruction CSINV not yet implemented."
	243 Add W8, W8, W26
	244 NotImplemented "Instruction SMADDL not yet implemented."
	245 Move W0, [X27+2]
	246 Call InputExtensions.IsInProgress, X0
	247 Move TEMP, X0
	248 And TEMP, TEMP, 1
	249 Compare TEMP, 1
	250 JumpIfNotEqual {323}
	251 Move X9, 0x9F9000
	252 NotImplemented "Instruction LDRH not yet implemented."
	253 Move X9, [X9+1664]
	254 Move X0, [X31+16]
	255 NotImplemented "Instruction CMP not yet implemented."
	256 Move X2, [X9]
	257 NotImplemented "Instruction CSINV not yet implemented."
	258 Call 0x2DFB48C, X0, X1
	259 Compare X0, 0
	260 JumpIfEqual {323}
	261 Move X2, X0
	262 Move X0, X19
	263 Move W1, W23
	264 Call InputActionState.FindControlIndexOnBinding, X0, X1, X2
	265 NotImplemented "Instruction LDRH not yet implemented."
	266 Move X9, [X19+112]
	267 Move W10, [X27+2]
	268 Move W11, 48
	269 NotImplemented "Instruction CMP not yet implemented."
	270 NotImplemented "Instruction CSINV not yet implemented."
	271 Add W8, W8, W26
	272 NotImplemented "Instruction SMADDL not yet implemented."
	273 Move [X24+2], W10
	274 Move V0, [X27+24]
	275 Move W25, W0
	276 Move X0, X24
	277 Move W1, W25
	278 Move [X24+24], D0
	279 Move V0, [X27+8]
	280 Move [X24+8], D0
	281 Call InteractionState.set_triggerControlIndex, X0, X1
	282 Move W8, [X27+3]
	283 Move TEMP, X8
	284 And TEMP, TEMP, 1
	285 Compare TEMP, 1
	286 JumpIfNotEqual {323}
	287 NotImplemented "Instruction MOVI not yet implemented."
	288 Move [X31+112], V0
	289 Move [X31+120], V0
	290 Move [X31+6], V0
	291 Move W1, [X28+3]
	292 Add X0, X31, 96
	293 Call TriggerState.set_mapIndex, X0, X1
	294 Add X0, X31, 96
	295 Move W1, W25
	296 Call TriggerState.set_controlIndex, X0, X1
	297 Add X0, X31, 96
	298 Move W1, W23
	299 Call TriggerState.set_bindingIndex, X0, X1
	300 Move V0, [X27+16]
	301 Add X0, X31, 96
	302 Move [X31+104], D0
	303 NotImplemented "Instruction LDRH not yet implemented."
	304 NotImplemented "Instruction CMP not yet implemented."
	305 NotImplemented "Instruction CSINV not yet implemented."
	306 Add W1, W8, W26
	307 Call TriggerState.set_interactionIndex, X0, X1
	308 Move V0, [X31+96]
	309 Move V1, [X31+112]
	310 Move V2, [X31+8]
	311 Add X8, X31, 144
	312 Add X1, X31, 144
	313 Move [X31+9], V0
	314 Move [X8+16], V1
	315 Move [X8+24], V2
	316 Move V0, [X27+4]
	317 Move X0, X19
	318 Call InputActionState.StartTimeout, X0, V0, X1
	319 Move V0, [X27+32]
	320 Move [X24+32], S0
	321 Move V0, [X27+36]
	322 Move [X24+36], S0
	323 Move W8, [X28+1]
	324 Add W26, W26, 1
	325 NotImplemented "Instruction CMP not yet implemented."
	326 NotImplemented "Instruction LDRSW not yet implemented."
	327 Add X23, X23, 1
	328 NotImplemented "Instruction CMP not yet implemented."
	329 Move X0, X19
	330 Call InputActionState.HookOnBeforeUpdate, X0
	331 Move W1, 8
	332 Move X0, X19
	333 Call InputActionState.NotifyListenersOfActionChange, X0, X1
	334 Move TEMP, X20
	335 And TEMP, TEMP, 1
	336 Compare TEMP, 1
	337 JumpIfNotEqual {438}
	338 Move X8, 0x9F9000
	339 Move X8, [X8+728]
	340 Move X9, 0x9F9000
	341 Move X8, [X8]
	342 Move X8, [X8+184]
	343 Move X9, [X9+2976]
	344 Add X0, X8, 24
	345 Move X1, [X9]
	346 Call 0x28F240C, X0
	347 NotImplemented "Instruction CMP not yet implemented."
	348 Move W8, [X19+72]
	349 NotImplemented "Instruction CMP not yet implemented."
	350 Move X24, 0x9F9000
	351 Move X25, 0x9F9000
	352 Move X26, 0x9F9000
	353 Move X27, 0x9F9000
	354 Move X22, 0x9F9000
	355 Move X24, [X24+2968]
	356 Move X25, [X25+680]
	357 Move X26, [X26+2928]
	358 Move X27, [X27+2936]
	359 Move X22, [X22+2920]
	360 Move W23, W31
	361 Move X8, [X19+16]
	362 Compare X8, 0
	363 JumpIfEqual {456}
	364 Move W9, [X8+24]
	365 NotImplemented "Instruction CMP not yet implemented."
	366 Add X8, X8, W23
	367 Move X20, [X8+32]
	368 Compare X20, 0
	369 JumpIfEqual {456}
	370 Move X8, [X20+80]
	371 Compare X8, 0
	372 JumpIfNotEqual {381}
	373 Move X0, [X20+40]
	374 Move X1, [X24]
	375 Move W21, [X20+72]
	376 Call ArrayHelpers.LengthSafe, X0
	377 NotImplemented "Instruction CMP not yet implemented."
	378 Move W0, 2
	379 Move X1, X20
	380 Call InputActionState.NotifyListenersOfActionChange, X0, X1
	381 Move X0, X20
	382 Move X1, X31
	383 Call InputActionMap.get_actions, X0
	384 Move X9, [X25]
	385 Move [X31+80], X0
	386 Move [X31+88], X1
	387 Add X8, X31, 24
	388 Add X0, X31, 80
	389 Move X1, X9
	390 Call ReadOnlyArray`1<Object>.GetEnumerator, X0
	391 NotImplemented "Instruction LDUR not yet implemented."
	392 Move X8, [X31+40]
	393 Move [X31+3], V0
	394 Move [X31+64], X8
	395 Move X1, [X26]
	396 Add X0, X31, 48
	397 Call Enumerator<Object>.MoveNext, X0
	398 Move TEMP, X0
	399 And TEMP, TEMP, 1
	400 Compare TEMP, 1
	401 JumpIfNotEqual {418}
	402 Move X1, [X27]
	403 Add X0, X31, 48
	404 Call Enumerator<Object>.get_Current, X0
	405 Move X20, X0
	406 Compare X0, 0
	407 JumpIfEqual {424}
	408 Move X0, X20
	409 Move X1, X31
	410 Call InputAction.get_enabled, X0
	411 Move TEMP, X0
	412 And TEMP, TEMP, 1
	413 Compare TEMP, 1
	414 JumpIfNotEqual {395}
	415 Move W0, W31
	416 Move X1, X20
	417 Call InputActionState.NotifyListenersOfActionChange, X0, X1
	418 Move X1, [X22]
	419 Add X0, X31, 48
	420 Call Enumerator<Object>.Dispose, X0
	421 Move W8, [X19+72]
	422 Add W23, W23, 1
	423 NotImplemented "Instruction CMP not yet implemented."
	424 Call 0x1C17F20
	425 Move X20, X0
	426 NotImplemented "Instruction CMP not yet implemented."
	427 Move X0, X20
	428 Call 0x3EB2AD0
	429 Move X21, [X0]
	430 Call 0x3EB2AE0
	431 Move X1, [X22]
	432 Add X0, X31, 48
	433 Call Enumerator<Object>.Dispose, X0
	434 Compare X21, 0
	435 JumpIfEqual {421}
	436 Move X0, X21
	437 Call 0x1C17F18
	438 Move X8, [X31+8]
	439 Move X8, [X8+40]
	440 Move X9, [X31+200]
	441 NotImplemented "Instruction CMP not yet implemented."
	442 Move X20, [X31+288]
	443 Move X19, [X31+296]
	444 Move X22, [X31+272]
	445 Move X21, [X31+280]
	446 Move X24, [X31+256]
	447 Move X23, [X31+264]
	448 Move X26, [X31+240]
	449 Move X25, [X31+248]
	450 Move X28, [X31+224]
	451 Move X27, [X31+232]
	452 Move X29, [X31+208]
	453 Move X30, [X31+216]
	454 Add X31, X31, 304
	455 Return 
	456 Call 0x1C17F20
	457 Call 0x1C17F28
	458 Move X21, X31
	459 Call 0x3EB2B20
	460 Move X20, X0
	461 Move X1, [X22]
	462 Add X0, X31, 48
	463 Call Enumerator<Object>.Dispose, X0
	464 Compare X21, 0
	465 JumpIfNotEqual {468}
	466 Move X0, X20
	467 Call 0x1D2D690
	468 Move X0, X21
	469 Call 0x1C17F18
	470 Call 0x1991590

Method: System.Boolean IsActiveControl(System.Int32 bindingIndex, System.Int32 controlIndex)

Disassembly:
	0x0374E048 CBZ X23, 0x374E29C
	0x0374E04C LDR V0, [X31 + 0x5C]
	0x0374E050 MOV X0, X23
	0x0374E054 MOV X1, X31
	0x0374E058 BL 0x3773684
	0x0374E05C TBZ X0, 0x0, 0x374E07C
	0x0374E060 LDR V1, [X28 + 0x10]
	0x0374E064 LDR V0, [X31 + 0x48]
	0x0374E068 FCMP D1, 0x0
	0x0374E06C B.EQ 0x374E078
	0x0374E070 FCMP D1, D0
	0x0374E074 B.LE 0x374E07C
	0x0374E078 STR D0, [X28 + 0x10]
	0x0374E07C LDRB W8, [X28 + 0x4]
	0x0374E080 TBZ X8, 0x3, 0x374E168
	0x0374E084 LDRH W8, [X28 + 0x8]
	0x0374E088 LDR X24, [X20 + 0x68]
	0x0374E08C MOVZ W9, 0xFFFF
	0x0374E090 CMP W8, W9
	0x0374E094 CSINV W23, W8, W31, NE
	0x0374E098 MOV X0, X22
	0x0374E09C MOV X1, X31
	0x0374E0A0 BL 0x38021A8
	0x0374E0A4 SXTW X8, W23
	0x0374E0A8 ADD X22, X24, X8, 0x5, LSL
	0x0374E0AC CBZ X0, 0x374E0CC
	0x0374E0B0 MOV X1, X31
	0x0374E0B4 BL 0x3801248
	0x0374E0B8 CBZ W0, 0x374E0C8
	0x0374E0BC LDR W8, [X22 + 0x18]
	0x0374E0C0 CMP W8, W0
	0x0374E0C4 B.EQ 0x374E1EC
	0x0374E0C8 STR W0, [X22 + 0x18]
	0x0374E0CC LDR X8, [X20 + 0x68]
	0x0374E0D0 SBFM X9, X23, 0x3B, 0x1F
	0x0374E0D4 MOVZ W10, 0xFFFF
	0x0374E0D8 ADD X8, X9, X8
	0x0374E0DC LDRH W9, [X8 + 0x8]
	0x0374E0E0 STR X20, [X31]
	0x0374E0E4 STP W23, W31, [X31 + 0x8]
	0x0374E0E8 LDR X8, [X20 + 0x30]
	0x0374E0EC CMP W9, W10
	0x0374E0F0 CSINV W9, W9, W31, NE
	0x0374E0F4 CBZ X8, 0x374E2A4
	0x0374E0F8 LDR W10, [X8 + 0x18]

ISIL:
	001 Move X10, [X0+104]
	002 Move X8, W1
	003 Move W11, 0xFFFF
	004 Add X8, X10, X8
	005 NotImplemented "Instruction LDRH not yet implemented."
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Move X12, [X0+96]
	008 Move W13, 48
	009 NotImplemented "Instruction MADD not yet implemented."
	010 NotImplemented "Instruction LDRH not yet implemented."
	011 NotImplemented "Instruction CMP not yet implemented."
	012 NotImplemented "Instruction CSINV not yet implemented."
	013 NotImplemented "Instruction CMP not yet implemented."
	014 Move W0, 1
	015 Return X0
	016 Move W8, [X8+1]
	017 Compare X8, 0
	018 JumpIfEqual {45}
	019 NotImplemented "Instruction LDRH not yet implemented."
	020 Move X9, [X0+112]
	021 Move W10, 0xFFFF
	022 Move TEMP, 0
	023 Not TEMP
	024 Move W14, TEMP
	025 NotImplemented "Instruction CMP not yet implemented."
	026 NotImplemented "Instruction CSEL not yet implemented."
	027 Move W11, 1
	028 Move W12, 48
	029 Move X13, X13
	030 ShiftRight X13, 32
	031 And X13, X13, 0x7FFFFFFF
	032 Move X14, 1
	033 NotImplemented "Instruction SBFM not yet implemented."
	034 Multiply X15, X15, X12
	035 NotImplemented "Instruction LDRH not yet implemented."
	036 NotImplemented "Instruction CMP not yet implemented."
	037 NotImplemented "Instruction CSINV not yet implemented."
	038 NotImplemented "Instruction CMP not yet implemented."
	039 NotImplemented "Instruction CSET not yet implemented."
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Add X13, X13, X14
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Add X11, X11, 1
	044 Return X0
	045 Move W0, W31
	046 Return X0

Method: System.Int32 FindControlIndexOnBinding(System.Int32 bindingIndex, UnityEngine.InputSystem.InputControl control)

Disassembly:
	0x0374DA74 CSEL W8, W8, W1, LT
	0x0374DA78 SBFM W8, W8, 0x5, 0x1F
	0x0374DA7C LDR W8, [X9, W8, SXTW]
	0x0374DA80 LSRV W8, W8, W1
	0x0374DA84 AND W0, W8, 0x1
	0x0374DA88 RET
	0x0374DA8C LDR X8, [X0 + 0xA8]
	0x0374DA90 MOVZ W9, 0x1
	0x0374DA94 BFM W9, W2, 0x1F, 0x1E
	0x0374DA98 SXTW X10, W2
	0x0374DA9C LDRH W8, [X8, W9, SXTW]
	0x0374DAA0 SXTW X9, W3
	0x0374DAA4 ORR X10, X10, X1, 0x28
	0x0374DAA8 ORR X9, X10, X9, 0x18
	0x0374DAAC ORR X0, X9, X8, 0x30
	0x0374DAB0 RET
	0x0374DAB4 MOV X8, X1
	0x0374DAB8 LDRB W9, [X8 + 0x4]!
	0x0374DABC TBZ X9, 0x3, 0x374DAE4
	0x0374DAC0 LDRH W8, [X1 + 0x8]
	0x0374DAC4 LDR X9, [X0 + 0x68]
	0x0374DAC8 MOVZ W10, 0xFFFF
	0x0374DACC UBFM X11, X8, 0x3B, 0x3A
	0x0374DAD0 CMP W8, W10

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+104]
	003 Move X9, W1
	004 Add X9, X8, X9
	005 Move W8, [X9]
	006 Compare X8, 0
	007 JumpIfEqual {19}
	008 Move X10, [X0+24]
	009 Compare X10, 0
	010 JumpIfEqual {25}
	011 NotImplemented "Instruction LDRH not yet implemented."
	012 Move W9, [X10+24]
	013 Add X10, X10, 32
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Move X11, [X10]
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Subtract X8, X8, 1
	018 Add X0, X0, 1
	019 Move TEMP, 0
	020 Not TEMP
	021 Move W0, TEMP
	022 Move X30, [X31+16]
	023 Return X0
	024 Call 0x1C17F28
	025 Call 0x1C17F20

Method: System.Void ResetActionStatesDrivenBy(UnityEngine.InputSystem.InputDevice device)

Disassembly:
	0x0374E0FC CMP W9, W10
	0x0374E100 B.CS 0x374E2A8
	0x0374E104 SXTW X23, W9
	0x0374E108 ADD X8, X8, X23, 0x3, LSL
	0x0374E10C LDR X0, [X8 + 0x20]
	0x0374E110 CBZ X0, 0x374E2AC
	0x0374E114 LDR X8, [X0]
	0x0374E118 LDP X9, X2, [X8 + 0x1B8]
	0x0374E11C ADD X1, X31, 0x0
	0x0374E120 BLR X9
	0x0374E124 LDRB W8, [X31 + 0x41]
	0x0374E128 STR S0, [X31 + 0x5C]
	0x0374E12C ORR W8, W8, 0x1
	0x0374E130 STRB W8, [X31 + 0x41]
	0x0374E134 LDR X8, [X20 + 0x80]
	0x0374E138 STR S0, [X8, X23, LSL #2]
	0x0374E13C LDRB W3, [X22 + 0x1]
	0x0374E140 CBZ W3, 0x374E168
	0x0374E144 LDRH W8, [X22 + 0xC]
	0x0374E148 MOVZ W9, 0xFFFF
	0x0374E14C CMP W8, W9
	0x0374E150 CSINV W2, W8, W31, NE
	0x0374E154 ADD X1, X31, 0x40
	0x0374E158 MOV X0, X20
	0x0374E15C BL 0x374E6B0
	0x0374E160 MOVZ W24, 0x1
	0x0374E164 B 0x374E16C
	0x0374E168 MOV W24, W31
	0x0374E16C ADD X1, X31, 0x40
	0x0374E170 MOV X0, X20
	0x0374E174 MOV W2, W21
	0x0374E178 BL 0x374E850
	0x0374E17C LDR X8, [X20 + 0x68]
	0x0374E180 LDRH W9, [X31 + 0x58]
	0x0374E184 MOV W22, W0
	0x0374E188 ADD X23, X8, X9, 0x5, LSL
	0x0374E18C TBNZ X0, 0x0, 0x374E1A4
	0x0374E190 ADD X1, X31, 0x40
	0x0374E194 MOV X0, X20
	0x0374E198 MOV W2, W21
	0x0374E19C MOV X3, X23
	0x0374E1A0 BL 0x374EC60
	0x0374E1A4 LDRB W3, [X23 + 0x1]
	0x0374E1A8 CBZ W3, 0x374E1D4
	0x0374E1AC LDRB W8, [X23 + 0x4]
	0x0374E1B0 TBNZ X8, 0x3, 0x374E1D4
	0x0374E1B4 LDRH W8, [X23 + 0xC]
	0x0374E1B8 MOVZ W9, 0xFFFF
	0x0374E1BC CMP W8, W9
	0x0374E1C0 CSINV W2, W8, W31, NE
	0x0374E1C4 ADD X1, X31, 0x40
	0x0374E1C8 MOV X0, X20
	0x0374E1CC BL 0x374E6B0
	0x0374E1D0 B 0x374E1EC
	0x0374E1D4 ORR W8, W24, W22, 0x0
	0x0374E1D8 TBNZ X8, 0x0, 0x374E1EC
	0x0374E1DC ADD X1, X31, 0x40
	0x0374E1E0 MOV X0, X20
	0x0374E1E4 MOV W2, W21
	0x0374E1E8 BL 0x374EE18
	0x0374E1EC MOV X22, X31
	0x0374E1F0 STRB W31, [X20 + 0xC2]
	0x0374E1F4 STR X31, [X20 + 0xC8]
	0x0374E1F8 CBZ X19, 0x374E254
	0x0374E1FC LDR X8, [X19]
	0x0374E200 LDR X1, [X27]
	0x0374E204 LDRH W9, [X8 + 0x12E]
	0x0374E208 CBZ X9, 0x374E22C
	0x0374E20C LDR X10, [X8 + 0xB0]
	0x0374E210 ADD X10, X10, 0x8
	0x0374E214 LDUR X11, [X10 - 0x8]
	0x0374E218 CMP X11, X1
	0x0374E21C B.EQ 0x374E23C
	0x0374E220 SUBS X9, X9, 0x1
	0x0374E224 ADD X10, X10, 0x10
	0x0374E228 B.NE 0x374E214
	0x0374E22C MOV X0, X19
	0x0374E230 MOV W2, W31
	0x0374E234 BL 0x1C5C788
	0x0374E238 B 0x374E248
	0x0374E23C LDRSW X9, [X10]
	0x0374E240 ADD X8, X8, X9, 0x4, LSL
	0x0374E244 ADD X0, X8, 0x138
	0x0374E248 LDP X8, X1, [X0]
	0x0374E24C MOV X0, X19
	0x0374E250 BLR X8
	0x0374E254 CBNZ X22, 0x374E28C
	0x0374E258 LDR X8, [X26 + 0x28]
	0x0374E25C LDR X9, [X31 + 0x78]
	0x0374E260 CMP X8, X9
	0x0374E264 B.NE 0x374E2B0
	0x0374E268 LDP X20, X19, [X31 + 0xE0]
	0x0374E26C LDP X22, X21, [X31 + 0xD0]
	0x0374E270 LDP X24, X23, [X31 + 0xC0]
	0x0374E274 LDP X26, X25, [X31 + 0xB0]
	0x0374E278 LDP X28, X27, [X31 + 0xA0]
	0x0374E27C LDP X29, X30, [X31 + 0x90]
	0x0374E280 LDR V8, [X31 + 0x80]
	0x0374E284 ADD X31, X31, 0xF0
	0x0374E288 RET
	0x0374E28C MOV X0, X22
	0x0374E290 BL 0x1C16F18
	0x0374E294 BL 0x1C16F20
	0x0374E298 BL 0x1C16F28
	0x0374E29C BL 0x1C16F20
	0x0374E2A0 BL 0x1C16F20
	0x0374E2A4 BL 0x1C16F20
	0x0374E2A8 BL 0x1C16F28
	0x0374E2AC BL 0x1C16F20
	0x0374E2B0 BL 0x3EB1B20
	0x0374E2B4 B 0x374E300
	0x0374E2B8 B 0x374E300
	0x0374E2BC B 0x374E300
	0x0374E2C0 B 0x374E300
	0x0374E2C4 B 0x374E300
	0x0374E2C8 B 0x374E300
	0x0374E2CC B 0x374E300
	0x0374E2D0 B 0x374E300
	0x0374E2D4 B 0x374E300
	0x0374E2D8 B 0x374E300
	0x0374E2DC B 0x374E300
	0x0374E2E0 B 0x374E300
	0x0374E2E4 B 0x374E300
	0x0374E2E8 B 0x374E300
	0x0374E2EC B 0x374E300
	0x0374E2F0 B 0x374E300
	0x0374E2F4 B 0x374E300
	0x0374E2F8 B 0x374E300
	0x0374E2FC B 0x374E300
	0x0374E300 MOV X21, X0
	0x0374E304 CMP W1, 0x1
	0x0374E308 B.NE 0x374E334
	0x0374E30C MOV X0, X21
	0x0374E310 BL 0x3EB1AD0
	0x0374E314 LDR X23, [X0]
	0x0374E318 BL 0x3EB1AE0
	0x0374E31C MOV X22, X31
	0x0374E320 STRB W31, [X20 + 0xC2]
	0x0374E324 STR X31, [X20 + 0xC8]
	0x0374E328 CBZ X23, 0x374E1F8
	0x0374E32C MOV X0, X23

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X19, 0xC93000
	010 Move W8, [X19+3482]
	011 Move X20, X1
	012 Move X21, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x9A6000
	018 Move X0, [X0+3584]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X19+3482], W8
	022 Move X23, 0x9A6000
	023 Move X23, [X23+3584]
	024 Move X0, X31
	025 Call InputActionRebindingExtensions.DeferBindingResolution
	026 Move W8, [X21+76]
	027 Move X19, X0
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move X24, X31
	030 Move X22, X31
	031 Move W25, 0xFFFF
	032 Move X8, [X21+96]
	033 Add X8, X24, X8
	034 Move W9, [X8]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move W9, [X8+1]
	037 Move TEMP, X9
	038 And TEMP, TEMP, 2
	039 Compare TEMP, 2
	040 JumpIfEqual {55}
	041 NotImplemented "Instruction LDRH not yet implemented."
	042 NotImplemented "Instruction CMP not yet implemented."
	043 NotImplemented "Instruction CSINV not yet implemented."
	044 Move X9, [X21+24]
	045 Compare X9, 0
	046 JumpIfEqual {109}
	047 Move W10, [X9+24]
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Add X8, X9, W8
	050 Move X8, [X8+32]
	051 Compare X8, 0
	052 JumpIfEqual {108}
	053 Move X8, [X8+120]
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move X0, X21
	056 Move X1, X20
	057 Move W2, W22
	058 Call InputActionState.IsActionBoundToControlFromDevice, X0, X1, X2
	059 Move TEMP, X0
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfNotEqual {68}
	063 Move W2, 1
	064 Move X0, X21
	065 Move W1, W22
	066 Move W3, W31
	067 Call InputActionState.ResetActionState, X0, X1, X2, X3
	068 NotImplemented "Instruction LDRSW not yet implemented."
	069 Add X22, X22, 1
	070 Add X24, X24, 48
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move X20, X31
	073 Compare X19, 0
	074 JumpIfEqual {96}
	075 Move X8, [X19]
	076 Move X1, [X23]
	077 NotImplemented "Instruction LDRH not yet implemented."
	078 Compare X9, 0
	079 JumpIfEqual {86}
	080 Move X10, [X8+176]
	081 Add X10, X10, 8
	082 NotImplemented "Instruction LDUR not yet implemented."
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Subtract X9, X9, 1
	085 Add X10, X10, 16
	086 Move X0, X19
	087 Move W2, W31
	088 Call 0x1C5D788
	089 NotImplemented "Instruction LDRSW not yet implemented."
	090 Add X8, X8, X9
	091 Add X0, X8, 312
	092 Move X8, [X0]
	093 Move X1, [X0+8]
	094 Move X0, X19
	095 NotImplemented "Instruction BLR not yet implemented."
	096 Compare X20, 0
	097 JumpIfNotEqual {110}
	098 Move X20, [X31+48]
	099 Move X19, [X31+56]
	100 Move X22, [X31+32]
	101 Move X21, [X31+40]
	102 Move X24, [X31+16]
	103 Move X23, [X31+24]
	104 Move X30, [X31+64]
	105 Move X25, [X31+72]
	106 Return 
	107 Call 0x1C17F28
	108 Call 0x1C17F20
	109 Call 0x1C17F20
	110 Move X0, X20
	111 Call 0x1C17F18
	112 Move X21, X0
	113 NotImplemented "Instruction CMP not yet implemented."
	114 Move X0, X21
	115 Call 0x3EB2AD0
	116 Move X20, [X0]
	117 Call 0x3EB2AE0
	118 Move X20, X31
	119 Move X21, X0
	120 Compare X19, 0
	121 JumpIfEqual {143}
	122 Move X8, [X19]
	123 Move X1, [X23]
	124 NotImplemented "Instruction LDRH not yet implemented."
	125 Compare X9, 0
	126 JumpIfEqual {133}
	127 Move X10, [X8+176]
	128 Add X10, X10, 8
	129 NotImplemented "Instruction LDUR not yet implemented."
	130 NotImplemented "Instruction CMP not yet implemented."
	131 Subtract X9, X9, 1
	132 Add X10, X10, 16
	133 Move X0, X19
	134 Move W2, W31
	135 Call 0x1C5D788
	136 NotImplemented "Instruction LDRSW not yet implemented."
	137 Add X8, X8, X9
	138 Add X0, X8, 312
	139 Move X8, [X0]
	140 Move X1, [X0+8]
	141 Move X0, X19
	142 NotImplemented "Instruction BLR not yet implemented."
	143 Compare X20, 0
	144 JumpIfNotEqual {147}
	145 Move X0, X21
	146 Call 0x1D2D690
	147 Move X0, X20
	148 Call 0x1C17F18
	149 Call 0x1991590

Method: System.Boolean IsActionBoundToControlFromDevice(UnityEngine.InputSystem.InputDevice device, System.Int32 actionIndex)

Disassembly:
	0x0374E33C MOVZ W8, 0x1
	0x0374E340 CMP W1, W8
	0x0374E344 B.NE 0x374E35C
	0x0374E348 MOV X0, X21
	0x0374E34C BL 0x3EB1AD0
	0x0374E350 LDR X22, [X0]
	0x0374E354 BL 0x3EB1AE0
	0x0374E358 B 0x374E1F8
	0x0374E35C MOV X22, X31
	0x0374E360 B 0x374E388
	0x0374E364 B 0x374E374
	0x0374E368 STRB W31, [X20 + 0xC2]
	0x0374E36C STR X31, [X20 + 0xC8]
	0x0374E370 CBNZ X23, 0x374E37C
	0x0374E374 MOV X21, X0
	0x0374E378 B 0x374E33C
	0x0374E37C MOV X0, X23
	0x0374E380 BL 0x1C16F18
	0x0374E384 MOV X21, X0
	0x0374E388 CBZ X19, 0x374E3E4
	0x0374E38C LDR X8, [X19]
	0x0374E390 LDR X1, [X27]
	0x0374E394 LDRH W9, [X8 + 0x12E]
	0x0374E398 CBZ X9, 0x374E3BC
	0x0374E39C LDR X10, [X8 + 0xB0]
	0x0374E3A0 ADD X10, X10, 0x8
	0x0374E3A4 LDUR X11, [X10 - 0x8]
	0x0374E3A8 CMP X11, X1
	0x0374E3AC B.EQ 0x374E3CC
	0x0374E3B0 SUBS X9, X9, 0x1
	0x0374E3B4 ADD X10, X10, 0x10
	0x0374E3B8 B.NE 0x374E3A4
	0x0374E3BC MOV X0, X19
	0x0374E3C0 MOV W2, W31
	0x0374E3C4 BL 0x1C5C788
	0x0374E3C8 B 0x374E3D8
	0x0374E3CC LDRSW X9, [X10]
	0x0374E3D0 ADD X8, X8, X9, 0x4, LSL
	0x0374E3D4 ADD X0, X8, 0x138
	0x0374E3D8 LDP X8, X1, [X0]
	0x0374E3DC MOV X0, X19
	0x0374E3E0 BLR X8
	0x0374E3E4 CBNZ X22, 0x374E3F0
	0x0374E3E8 MOV X0, X21

ISIL:
	001 Move [X31-16], X30
	002 Move X11, [X0+144]
	003 Move W8, 1
	004 NotImplemented "Instruction BFM not yet implemented."
	005 NotImplemented "Instruction LDRH not yet implemented."
	006 Compare X8, 0
	007 JumpIfEqual {39}
	008 Move W12, W2
	009 ShiftRight W12, 31
	010 And W12, W12, 0x3FFFFFFF
	011 Move X10, [X0+152]
	012 NotImplemented "Instruction LDRH not yet implemented."
	013 Move X12, [X0+104]
	014 Move X9, X31
	015 Move W13, W31
	016 Add X14, X9, X11
	017 NotImplemented "Instruction LDRH not yet implemented."
	018 Add X15, X12, X14
	019 Move W14, [X15]
	020 Compare X14, 0
	021 JumpIfEqual {37}
	022 Move X17, [X0+24]
	023 Compare X17, 0
	024 JumpIfEqual {43}
	025 NotImplemented "Instruction LDRH not yet implemented."
	026 Move W16, [X17+24]
	027 Add X17, X17, 32
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move X2, [X17]
	030 Compare X2, 0
	031 JumpIfEqual {43}
	032 Move X2, [X2+120]
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Subtract X14, X14, 1
	035 Add X15, X15, 1
	036 Move W13, 1
	037 Add X9, X9, 1
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move W13, W31
	040 And W0, W13, 1
	041 Move X30, [X31+16]
	042 Return X0
	043 Call 0x1C17F20
	044 Call 0x1C17F28

Method: System.Void ResetActionState(System.Int32 actionIndex, UnityEngine.InputSystem.InputActionPhase toPhase = 1, System.Boolean hardReset = False)

Disassembly:
	0x0374CF30 MOVZ W8, 0x1
	0x0374CF34 STRB W8, [X19 + 0xC0]
	0x0374CF38 LDP X20, X19, [X31 + 0x10]
	0x0374CF3C LDR X30, [X31], #0x20
	0x0374CF40 RET
	0x0374CF44 BL 0x1C16F20
	0x0374CF48 STR X30, [X31 - 0x40]!
	0x0374CF4C STP X24, X23, [X31 + 0x10]
	0x0374CF50 STP X22, X21, [X31 + 0x20]
	0x0374CF54 STP X20, X19, [X31 + 0x30]
	0x0374CF58 ADRP X24, 0xC94000
	0x0374CF5C ADRP X21, 0x9F9000
	0x0374CF60 ADRP X22, 0x9F9000
	0x0374CF64 ADRP X23, 0x9F9000
	0x0374CF68 LDRB W8, [X24 + 0xDB1]
	0x0374CF6C LDR X21, [X21 + 0x2D8]
	0x0374CF70 LDR X22, [X22 + 0xBF8]
	0x0374CF74 LDR X23, [X23 + 0xC00]
	0x0374CF78 MOV X19, X1
	0x0374CF7C MOV W20, W0
	0x0374CF80 TBNZ X8, 0x0, 0x374CFC8
	0x0374CF84 ADRP X0, 0x9F9000
	0x0374CF88 LDR X0, [X0 + 0xC00]
	0x0374CF8C BL 0x1C16CF4
	0x0374CF90 ADRP X0, 0x9F9000
	0x0374CF94 LDR X0, [X0 + 0xC08]
	0x0374CF98 BL 0x1C16CF4
	0x0374CF9C ADRP X0, 0x9F9000
	0x0374CFA0 LDR X0, [X0 + 0x2D8]
	0x0374CFA4 BL 0x1C16CF4
	0x0374CFA8 ADRP X0, 0x9F9000
	0x0374CFAC LDR X0, [X0 + 0xC10]
	0x0374CFB0 BL 0x1C16CF4
	0x0374CFB4 ADRP X0, 0x9F9000
	0x0374CFB8 LDR X0, [X0 + 0xBF8]
	0x0374CFBC BL 0x1C16CF4
	0x0374CFC0 MOVZ W8, 0x1
	0x0374CFC4 STRB W8, [X24 + 0xDB1]
	0x0374CFC8 LDR X8, [X21]
	0x0374CFCC LDR X3, [X22]
	0x0374CFD0 LDR X5, [X23]
	0x0374CFD4 MOV X1, X19
	0x0374CFD8 LDR X8, [X8 + 0xB8]
	0x0374CFDC MOV W2, W20
	0x0374CFE0 MOV X4, X31
	0x0374CFE4 ADD X0, X8, 0x18
	0x0374CFE8 BL 0x21AE04C
	0x0374CFEC CMP W20, 0x8
	0x0374CFF0 B.NE 0x374D034
	0x0374CFF4 LDR X8, [X21]
	0x0374CFF8 ADRP X9, 0x9F9000
	0x0374CFFC ADRP X10, 0x9F9000
	0x0374D000 LDR X9, [X9 + 0xC10]
	0x0374D004 B 0x3EB1934
	0x0374D008 LDR X8, [X8 + 0xB8]
	0x0374D00C MOV X1, X19
	0x0374D010 LDR X2, [X9]
	0x0374D014 LDR X4, [X10]
	0x0374D018 LDP X20, X19, [X31 + 0x30]
	0x0374D01C LDP X22, X21, [X31 + 0x20]
	0x0374D020 LDP X24, X23, [X31 + 0x10]
	0x0374D024 ADD X0, X8, 0x68
	0x0374D028 MOV X3, X31
	0x0374D02C LDR X30, [X31], #0x40
	0x0374D030 B 0x21AD310
	0x0374D034 LDP X20, X19, [X31 + 0x30]
	0x0374D038 LDP X22, X21, [X31 + 0x20]
	0x0374D03C LDP X24, X23, [X31 + 0x10]
	0x0374D040 LDR X30, [X31], #0x40
	0x0374D044 RET
	0x0374D048 LDR X10, [X0 + 0x68]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X8, [X0+96]
	011 NotImplemented "Instruction SBFM not yet implemented."
	012 Add X23, X9, W1
	013 Move W19, W3
	014 Add X20, X8, X23
	015 Move W8, [X20]
	016 Move W22, W2
	017 Move X21, X0
	018 Move X25, W1
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move X0, X31
	021 Call InputState.get_currentTime
	022 NotImplemented "Instruction LDRSH not yet implemented."
	023 Move [X20+8], D0
	024 Add W31, W8, 1
	025 NotImplemented "Instruction LDRH not yet implemented."
	026 Move X8, [X21+104]
	027 Add X8, X8, X23
	028 NotImplemented "Instruction LDRH not yet implemented."
	029 Move W26, [X8+1]
	030 Move W8, 0xFFFF
	031 NotImplemented "Instruction CMP not yet implemented."
	032 NotImplemented "Instruction CSINV not yet implemented."
	033 Compare W26, 0
	034 JumpIfEqual {52}
	035 Move X0, X21
	036 Move W2, W23
	037 Move W3, W24
	038 Call InputActionState.ResetInteractionStateAndCancelIfNecessary, X0, X1, X2, X3
	039 Subtract W26, W26, 1
	040 Add W24, W24, 1
	041 Move W8, [X20]
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X8, [X21+96]
	044 Move X9, X23
	045 ShiftRight X9, 60
	046 And X9, X9, 0x7FFFFFF
	047 Move W1, 4
	048 Move W3, 1
	049 Add X2, X9, X8
	050 Move X0, X21
	051 Call InputActionState.ChangePhaseOfAction, X0, X1, X2, X3
	052 Move [X20], W22
	053 Move W22, 0xFFFF
	054 NotImplemented "Instruction STRH not yet implemented."
	055 Move X8, [X21+144]
	056 Move X9, [X21+152]
	057 Move X0, X20
	058 NotImplemented "Instruction LDRH not yet implemented."
	059 NotImplemented "Instruction LDRH not yet implemented."
	060 Call TriggerState.set_bindingIndex, X0, X1
	061 Move W8, [X20+1]
	062 Move W9, 167
	063 NotImplemented "Instruction STRH not yet implemented."
	064 Move [X20+8], X31
	065 Move [X20+16], X31
	066 And W8, W8, W9
	067 Move [X20+1], W8
	068 Move TEMP, X19
	069 And TEMP, TEMP, 1
	070 Compare TEMP, 1
	071 JumpIfNotEqual {74}
	072 Move [X20+32], X31
	073 Move [X20+40], X31
	074 Move X20, [X31+64]
	075 Move X19, [X31+72]
	076 Move X22, [X31+48]
	077 Move X21, [X31+56]
	078 Move X24, [X31+32]
	079 Move X23, [X31+40]
	080 Move X26, [X31+16]
	081 Move X25, [X31+24]
	082 Move X30, [X31+80]
	083 Return 

Method: UnityEngine.InputSystem.InputActionState/TriggerState FetchActionState(UnityEngine.InputSystem.InputAction action)

Disassembly:
	0x0374E708 STR W31, [X31 + 0x30]
	0x0374E70C STP V0, V0, [X31 + 0x10]
	0x0374E710 STR V0, [X31]
	0x0374E714 LDP V1, V0, [X22]
	0x0374E718 LDR V2, [X22 + 0x2]
	0x0374E71C CMP W21, 0x1
	0x0374E720 STR X20, [X31 + 0x38]
	0x0374E724 STUR V1, [X31 + 0x4]
	0x0374E728 STUR V0, [X31 + 0x14]

ISIL:
	001 Move [X31-16], X30
	002 Compare X1, 0
	003 JumpIfEqual {10}
	004 Move X8, [X0+96]
	005 NotImplemented "Instruction LDRSW not yet implemented."
	006 Move W10, 48
	007 NotImplemented "Instruction MADD not yet implemented."
	008 Move X30, [X31+16]
	009 Return X0
	010 Call 0x1C17F20

Method: UnityEngine.InputSystem.InputActionState/ActionMapIndices FetchMapIndices(UnityEngine.InputSystem.InputActionMap map)

Disassembly:
	0x0374E72C STUR V2, [X31 + 0x24]
	0x0374E730 LDP V0, V1, [X31]
	0x0374E734 LDR V2, [X31 + 0x2]
	0x0374E738 LDR W8, [X31 + 0x30]
	0x0374E73C STP V0, V1, [X31 + 0x40]
	0x0374E740 STUR V2, [X31 + 0x60]
	0x0374E744 STP W8, W31, [X31 + 0x70]
	0x0374E748 B.LT 0x374E818
	0x0374E74C ADRP X25, 0x9F7000
	0x0374E750 LDR X25, [X25 + 0xB90]
	0x0374E754 ADD X8, X31, 0x38
	0x0374E758 MOV X24, X31
	0x0374E75C MOV W26, W21

ISIL:
	001 Move [X31-16], X30
	002 Compare X1, 0
	003 JumpIfEqual {16}
	004 Move X9, [X0+184]
	005 NotImplemented "Instruction LDRSW not yet implemented."
	006 Move W11, 48
	007 NotImplemented "Instruction MADD not yet implemented."
	008 Move V1, [X9+16]
	009 Move V0, [X9+32]
	010 Move V2, [X9]
	011 Move [X8+16], V1
	012 Move [X8+24], V0
	013 Move [X8], V2
	014 Move X30, [X31+16]
	015 Return X0
	016 Call 0x1C17F20

Method: System.Void EnableAllActions(UnityEngine.InputSystem.InputActionMap map)

Disassembly:
	0x0374E760 ADD X21, X8, 0xC
	0x0374E764 MOVZ W27, 0x30
	0x0374E768 LDR X8, [X20 + 0x20]
	0x0374E76C CBZ X8, 0x374E844
	0x0374E770 LDR W10, [X8 + 0x18]
	0x0374E774 ADD W9, W24, W19
	0x0374E778 SXTW X1, W9
	0x0374E77C CMP W1, W10
	0x0374E780 B.CS 0x374E848
	0x0374E784 LDR X10, [X20 + 0x70]
	0x0374E788 ADD X8, X8, X1, 0x3, LSL
	0x0374E78C LDR X22, [X8 + 0x20]
	0x0374E790 MOV X0, X21
	0x0374E794 SMADDL X9, X9, X27, X10
	0x0374E798 LDRB W10, [X9 + 0x2]
	0x0374E79C LDR V0, [X9 + 0x8]
	0x0374E7A0 STRB W10, [X31 + 0x44]
	0x0374E7A4 STUR D0, [X31 + 0x54]
	0x0374E7A8 BL 0x374CB6C
	0x0374E7AC CBZ X22, 0x374E844
	0x0374E7B0 LDR X8, [X22]
	0x0374E7B4 LDR X1, [X25]
	0x0374E7B8 LDRH W9, [X8 + 0x12E]
	0x0374E7BC CBZ X9, 0x374E7E0
	0x0374E7C0 LDR X10, [X8 + 0xB0]
	0x0374E7C4 ADD X10, X10, 0x8
	0x0374E7C8 LDUR X11, [X10 - 0x8]
	0x0374E7CC CMP X11, X1
	0x0374E7D0 B.EQ 0x374E7F0
	0x0374E7D4 SUBS X9, X9, 0x1
	0x0374E7D8 ADD X10, X10, 0x10
	0x0374E7DC B.NE 0x374E7C8
	0x0374E7E0 MOV X0, X22
	0x0374E7E4 MOV W2, W31
	0x0374E7E8 BL 0x1C5C788
	0x0374E7EC B 0x374E7FC
	0x0374E7F0 LDRSW X9, [X10]
	0x0374E7F4 ADD X8, X8, X9, 0x4, LSL
	0x0374E7F8 ADD X0, X8, 0x138
	0x0374E7FC LDP X8, X2, [X0]
	0x0374E800 ADD X1, X31, 0x38
	0x0374E804 MOV X0, X22
	0x0374E808 BLR X8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X1
	005 Move X20, X0
	006 Call InputActionState.EnableControls, X0, X1
	007 Compare X19, 0
	008 JumpIfEqual {47}
	009 NotImplemented "Instruction LDRSW not yet implemented."
	010 Move X9, [X20+184]
	011 Move W10, 48
	012 NotImplemented "Instruction MADD not yet implemented."
	013 Compare X9, 0
	014 JumpIfEqual {47}
	015 Move W8, [X9+4]
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Move W9, [X9]
	018 Move W10, 48
	019 Move W11, 1
	020 Move X12, X8
	021 Move X13, [X20+96]
	022 NotImplemented "Instruction NOP not yet implemented."
	023 NotImplemented "Instruction SMADDL not yet implemented."
	024 Move W14, [X13]
	025 Compare W14, 0
	026 JumpIfNotEqual {28}
	027 Move [X13], W11
	028 Move W14, [X13+1]
	029 Subtract X12, X12, 1
	030 Add W9, W9, 1
	031 And W14, W14, 0xFFFFFFEF
	032 Move [X13+1], W14
	033 Move X0, X20
	034 Move [X19+72], W8
	035 Call InputActionState.HookOnBeforeUpdate, X0
	036 Move X1, [X19+80]
	037 Compare X1, 0
	038 JumpIfEqual {40}
	039 Move W0, W31
	040 Move W0, 2
	041 Move X1, X19
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X30, [X31+32]
	045 Call InputActionState.NotifyListenersOfActionChange, X0, X1
	046 Return 
	047 Call 0x1C17F20

Method: System.Void EnableControls(UnityEngine.InputSystem.InputActionMap map)

Disassembly:
	0x0374E80C ADD X24, X24, 0x1
	0x0374E810 CMP X24, X26
	0x0374E814 B.NE 0x374E768
	0x0374E818 LDR X8, [X23 + 0x28]
	0x0374E81C LDR X9, [X31 + 0x78]
	0x0374E820 CMP X8, X9
	0x0374E824 B.NE 0x374E84C
	0x0374E828 LDP X20, X19, [X31 + 0xC0]
	0x0374E82C LDP X22, X21, [X31 + 0xB0]
	0x0374E830 LDP X24, X23, [X31 + 0xA0]
	0x0374E834 LDP X26, X25, [X31 + 0x90]
	0x0374E838 LDP X30, X27, [X31 + 0x80]
	0x0374E83C ADD X31, X31, 0xD0
	0x0374E840 RET
	0x0374E844 BL 0x1C16F20
	0x0374E848 BL 0x1C16F28

ISIL:
	001 Move [X31-16], X30
	002 Compare X1, 0
	003 JumpIfEqual {18}
	004 NotImplemented "Instruction LDRSW not yet implemented."
	005 Move X8, [X0+184]
	006 Move W9, 48
	007 NotImplemented "Instruction MADD not yet implemented."
	008 Compare X8, 0
	009 JumpIfEqual {18}
	010 Move W3, [X8+12]
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Move W2, [X8+8]
	013 Move X30, [X31+16]
	014 Call InputActionState.EnableControls, X0, X1, X2, X3
	015 Return 
	016 Move X30, [X31+16]
	017 Return 
	018 Call 0x1C17F20

Method: System.Void EnableSingleAction(UnityEngine.InputSystem.InputAction action)

Disassembly:
	0x0374E84C BL 0x3EB1B20
	0x0374E850 STP D9, D8, [X31 - 0x60]!
	0x0374E854 STR X30, [X31 + 0x10]
	0x0374E858 STP X26, X25, [X31 + 0x20]
	0x0374E85C STP X24, X23, [X31 + 0x30]
	0x0374E860 STP X22, X21, [X31 + 0x40]
	0x0374E864 STP X20, X19, [X31 + 0x50]
	0x0374E868 LDR X8, [X0 + 0x60]
	0x0374E86C MOVZ W9, 0x30
	0x0374E870 SMADDL X19, X2, X9, X8
	0x0374E874 LDRB W8, [X19 + 0x1]
	0x0374E878 TBNZ X8, 0x2, 0x374E884
	0x0374E87C MOV W0, W31
	0x0374E880 B 0x374EC3C
	0x0374E884 LDR X9, [X0 + 0x68]
	0x0374E888 LDRH W10, [X1 + 0x18]
	0x0374E88C LDRH W13, [X1 + 0x4]
	0x0374E890 MOVZ W11, 0xFFFF
	0x0374E894 MOV X21, X0
	0x0374E898 ADD X12, X9, X10, 0x5, LSL
	0x0374E89C LDRB W14, [X12 + 0x4]
	0x0374E8A0 CMP W13, W11
	0x0374E8A4 MOV X20, X1
	0x0374E8A8 CSINV W10, W13, W31, NE
	0x0374E8AC TBZ X14, 0x3, 0x374E8CC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X1
	005 Move X20, X0
	006 Call InputActionState.EnableControls, X0, X1
	007 Compare X19, 0
	008 JumpIfEqual {30}
	009 NotImplemented "Instruction LDRSW not yet implemented."
	010 Move X9, [X20+96]
	011 Move W10, 48
	012 Multiply X8, X8, X10
	013 Move W10, 1
	014 Move [X8], W10
	015 Move X8, [X19+200]
	016 Compare X8, 0
	017 JumpIfEqual {30}
	018 Move W9, [X8+72]
	019 Move X0, X20
	020 Add W9, W9, 1
	021 Move [X8+72], W9
	022 Call InputActionState.HookOnBeforeUpdate, X0
	023 Move X1, X19
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move W0, W31
	027 Move X30, [X31+32]
	028 Call InputActionState.NotifyListenersOfActionChange, X0, X1
	029 Return 
	030 Call 0x1C17F20

Method: System.Void EnableControls(UnityEngine.InputSystem.InputAction action)

Disassembly:
	0x0374E8B0 LDRH W10, [X12 + 0x8]
	0x0374E8B4 UBFM X12, X10, 0x3B, 0x3A
	0x0374E8B8 CMP W10, W11
	0x0374E8BC MOVN X10, 0x1F
	0x0374E8C0 CSEL X10, X10, X12, EQ
	0x0374E8C4 ADD X10, X10, X9
	0x0374E8C8 LDRH W10, [X10 + 0xE]
	0x0374E8CC LDRH W11, [X19 + 0x18]
	0x0374E8D0 ADD X11, X9, X11, 0x5, LSL
	0x0374E8D4 LDRB W12, [X11 + 0x4]
	0x0374E8D8 TBNZ X12, 0x3, 0x374E904
	0x0374E8DC LDRH W11, [X19 + 0x4]
	0x0374E8E0 MOVZ W12, 0xFFFF
	0x0374E8E4 CMP W11, W12
	0x0374E8E8 B.NE 0x374E924
	0x0374E8EC LDR V0, [X20 + 0x1C]
	0x0374E8F0 ORR W8, W8, 0x1
	0x0374E8F4 MOV W0, W31
	0x0374E8F8 STRB W8, [X19 + 0x1]
	0x0374E8FC STR S0, [X19 + 0x1C]
	0x0374E900 B 0x374EC3C
	0x0374E904 LDRH W11, [X11 + 0x8]
	0x0374E908 MOVZ W12, 0xFFFF
	0x0374E90C UBFM X13, X11, 0x3B, 0x3A
	0x0374E910 CMP W11, W12
	0x0374E914 MOVN X11, 0x1F
	0x0374E918 CSEL X11, X11, X13, EQ
	0x0374E91C ADD X11, X11, X9
	0x0374E920 LDRH W11, [X11 + 0xE]
	0x0374E924 CMP W10, W11
	0x0374E928 B.NE 0x374E934
	0x0374E92C MOV W10, W31
	0x0374E930 B 0x374E964
	0x0374E934 LDR X12, [X21 + 0x18]
	0x0374E938 CBZ X12, 0x374EC5C
	0x0374E93C LDR W13, [X12 + 0x18]
	0x0374E940 CMP W10, W13
	0x0374E944 B.CS 0x374EC58
	0x0374E948 CMP W11, W13
	0x0374E94C B.CS 0x374EC58
	0x0374E950 ADD X12, X12, 0x20
	0x0374E954 LDR X10, [X12, W10, UXTW]
	0x0374E958 LDR X11, [X12, W11, UXTW]
	0x0374E95C CMP X10, X11

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Compare X1, 0
	010 JumpIfEqual {56}
	011 Move X8, [X1+200]
	012 Compare X8, 0
	013 JumpIfEqual {56}
	014 NotImplemented "Instruction LDRSW not yet implemented."
	015 Move X8, [X0+184]
	016 Move W9, 48
	017 Move X19, X0
	018 NotImplemented "Instruction MADD not yet implemented."
	019 Compare X8, 0
	020 JumpIfEqual {56}
	021 Move W21, [X8+20]
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move W22, [X1+192]
	024 Move W23, [X8+16]
	025 Move X24, [X19+104]
	026 Move W25, 0xFFFF
	027 Move X8, W23
	028 Add X8, X24, X8
	029 NotImplemented "Instruction LDRH not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 NotImplemented "Instruction CSINV not yet implemented."
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move W9, [X8+4]
	034 Move TEMP, X9
	035 And TEMP, TEMP, 8
	036 Compare TEMP, 8
	037 JumpIfEqual {45}
	038 Move W3, [X8]
	039 Compare W3, 0
	040 JumpIfEqual {45}
	041 NotImplemented "Instruction LDRH not yet implemented."
	042 Move X0, X19
	043 Move W1, W20
	044 Call InputActionState.EnableControls, X0, X1, X2, X3
	045 Subtract X21, X21, 1
	046 Add W23, W23, 1
	047 Move X20, [X31+48]
	048 Move X19, [X31+56]
	049 Move X22, [X31+32]
	050 Move X21, [X31+40]
	051 Move X24, [X31+16]
	052 Move X23, [X31+24]
	053 Move X30, [X31+64]
	054 Move X25, [X31+72]
	055 Return 
	056 Call 0x1C17F20

Method: System.Void DisableAllActions(UnityEngine.InputSystem.InputActionMap map)

Disassembly:
	0x0374CC9C MOV X0, X19
	0x0374CCA0 MOV X2, X31
	0x0374CCA4 BL 0x3379A44
	0x0374CCA8 ADRP X0, 0x9F9000
	0x0374CCAC LDR X0, [X0 + 0xBD8]
	0x0374CCB0 BL 0x1C16D08
	0x0374CCB4 MOV X1, X0
	0x0374CCB8 MOV X0, X19
	0x0374CCBC BL 0x1C16DEC
	0x0374CCC0 STP X30, X19, [X31 - 0x10]!
	0x0374CCC4 CMP W1, 0x10000
	0x0374CCC8 B.CS 0x374CCD8
	0x0374CCCC STRH W1, [X0 + 0x18]
	0x0374CCD0 LDP X30, X19, [X31], #0x10
	0x0374CCD4 RET
	0x0374CCD8 ADRP X0, 0x9A7000
	0x0374CCDC LDR X0, [X0 + 0xB40]
	0x0374CCE0 BL 0x1C16D08
	0x0374CCE4 BL 0x1C16F10
	0x0374CCE8 MOV X19, X0
	0x0374CCEC ADRP X0, 0x9F9000
	0x0374CCF0 LDR X0, [X0 + 0xBE0]
	0x0374CCF4 BL 0x1C16D08
	0x0374CCF8 MOV X1, X0
	0x0374CCFC MOV X0, X19
	0x0374CD00 MOV X2, X31
	0x0374CD04 BL 0x3379A44
	0x0374CD08 ADRP X0, 0x9F9000
	0x0374CD0C LDR X0, [X0 + 0xBE8]
	0x0374CD10 BL 0x1C16D08
	0x0374CD14 MOV X1, X0
	0x0374CD18 MOV X0, X19
	0x0374CD1C BL 0x1C16DEC
	0x0374CD20 STP D9, D8, [X31 - 0x60]!
	0x0374CD24 STP X30, X27, [X31 + 0x10]
	0x0374CD28 STP X26, X25, [X31 + 0x20]
	0x0374CD2C STP X24, X23, [X31 + 0x30]
	0x0374CD30 STP X22, X21, [X31 + 0x40]
	0x0374CD34 STP X20, X19, [X31 + 0x50]
	0x0374CD38 ADRP X22, 0xC94000
	0x0374CD3C ADRP X21, 0x9CF000
	0x0374CD40 LDRB W8, [X22 + 0xDA5]
	0x0374CD44 LDR X21, [X21 + 0x270]
	0x0374CD48 MOV X20, X1
	0x0374CD4C MOV V8.16B, V0.16B
	0x0374CD50 MOV X19, X0
	0x0374CD54 TBNZ X8, 0x0, 0x374CD6C
	0x0374CD58 ADRP X0, 0x9CF000
	0x0374CD5C LDR X0, [X0 + 0x270]
	0x0374CD60 BL 0x1C16CF4
	0x0374CD64 MOVZ W8, 0x1
	0x0374CD68 STRB W8, [X22 + 0xDA5]
	0x0374CD6C LDR X0, [X21]
	0x0374CD70 LDR W8, [X0 + 0xE0]
	0x0374CD74 CBNZ W8, 0x374CD80
	0x0374CD78 BL 0x1C16DFC
	0x0374CD7C LDR X0, [X21]
	0x0374CD80 LDRH W9, [X20 + 0x4]
	0x0374CD84 LDR X8, [X19 + 0x18]
	0x0374CD88 MOVZ W10, 0xFFFF
	0x0374CD8C CMP W9, W10
	0x0374CD90 CSINV W9, W9, W31, NE
	0x0374CD94 CBZ X8, 0x374CE70
	0x0374CD98 LDR W10, [X8 + 0x18]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X19, X1
	010 Move X20, X0
	011 Call InputActionState.DisableControls, X0, X1
	012 Compare X19, 0
	013 JumpIfEqual {75}
	014 NotImplemented "Instruction LDRSW not yet implemented."
	015 Move X9, [X20+184]
	016 Move W10, 48
	017 NotImplemented "Instruction MADD not yet implemented."
	018 Compare X8, 0
	019 JumpIfEqual {75}
	020 Move W21, [X8+4]
	021 Move W22, [X19+72]
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move W24, [X8]
	024 Move X23, X31
	025 Move W25, 48
	026 Move X8, [X20+96]
	027 Add X1, X24, X23
	028 NotImplemented "Instruction SMADDL not yet implemented."
	029 Move W8, [X9]
	030 Compare W8, 0
	031 JumpIfEqual {46}
	032 Move X0, X20
	033 Move W2, W31
	034 Move W3, W31
	035 Call InputActionState.ResetActionState, X0, X1, X2, X3
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X8, [X19+40]
	038 Compare X8, 0
	039 JumpIfEqual {75}
	040 Move W9, [X8+24]
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Add X8, X8, X23
	043 Move X1, [X8+32]
	044 Move W0, 1
	045 Call InputActionState.NotifyListenersOfActionChange, X0, X1
	046 Add X23, X23, 1
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move X1, [X19+80]
	049 Move [X19+72], W31
	050 Compare X1, 0
	051 JumpIfEqual {53}
	052 Move W0, 1
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move W0, 3
	055 Move X1, X19
	056 Move X20, [X31+48]
	057 Move X19, [X31+56]
	058 Move X22, [X31+32]
	059 Move X21, [X31+40]
	060 Move X24, [X31+16]
	061 Move X23, [X31+24]
	062 Move X30, [X31+64]
	063 Move X25, [X31+72]
	064 Call InputActionState.NotifyListenersOfActionChange, X0, X1
	065 Return 
	066 Move X20, [X31+48]
	067 Move X19, [X31+56]
	068 Move X22, [X31+32]
	069 Move X21, [X31+40]
	070 Move X24, [X31+16]
	071 Move X23, [X31+24]
	072 Move X30, [X31+64]
	073 Move X25, [X31+72]
	074 Return 
	075 Call 0x1C17F20
	076 Call 0x1C17F28

Method: System.Void DisableControls(UnityEngine.InputSystem.InputActionMap map)

Disassembly:
	0x0374D04C SXTW X8, W1
	0x0374D050 MOVZ W11, 0xFFFF
	0x0374D054 ADD X8, X10, X8, 0x5, LSL
	0x0374D058 LDRH W9, [X8 + 0x6]
	0x0374D05C CMP X9, X11
	0x0374D060 B.EQ 0x374D0F4
	0x0374D064 LDR X12, [X0 + 0x60]
	0x0374D068 MOVZ W13, 0x30
	0x0374D06C MADD X9, X9, X13, X12
	0x0374D070 LDRH W9, [X9 + 0x4]
	0x0374D074 CMP W9, W11
	0x0374D078 CSINV W9, W9, W31, NE
	0x0374D07C CMP W9, W2
	0x0374D080 B.NE 0x374D08C
	0x0374D084 MOVZ W0, 0x1
	0x0374D088 RET

ISIL:
	001 Move [X31-16], X30
	002 Compare X1, 0
	003 JumpIfEqual {18}
	004 NotImplemented "Instruction LDRSW not yet implemented."
	005 Move X8, [X0+184]
	006 Move W9, 48
	007 NotImplemented "Instruction MADD not yet implemented."
	008 Compare X8, 0
	009 JumpIfEqual {18}
	010 Move W3, [X8+12]
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Move W2, [X8+8]
	013 Move X30, [X31+16]
	014 Call InputActionState.DisableControls, X0, X1, X2, X3
	015 Return 
	016 Move X30, [X31+16]
	017 Return 
	018 Call 0x1C17F20

Method: System.Void DisableSingleAction(UnityEngine.InputSystem.InputAction action)

Disassembly:
	0x0374E960 CSET W10, NE
	0x0374E964 LDR V8, [X20 + 0x1C]
	0x0374E968 LDR V9, [X19 + 0x1C]
	0x0374E96C FCMP S8, S9
	0x0374E970 B.LE 0x374E9A0
	0x0374E974 FCMP S8, 0x0
	0x0374E978 CSET W9, LE
	0x0374E97C EOR W10, W10, 0x1
	0x0374E980 ORR W9, W10, W9, 0x0
	0x0374E984 TBNZ X9, 0x0, 0x374EC2C
	0x0374E988 FCMP S9, 0x0
	0x0374E98C B.LE 0x374EC2C
	0x0374E990 ORR W8, W8, 0x8
	0x0374E994 STRB W8, [X19 + 0x1]
	0x0374E998 LDR V8, [X20 + 0x1C]
	0x0374E99C B 0x374EC2C
	0x0374E9A0 B.PL 0x374EB64
	0x0374E9A4 CBZ W10, 0x374E9B4
	0x0374E9A8 FCMP S8, 0x0
	0x0374E9AC B.GT 0x374EBE8
	0x0374E9B0 B 0x374EBF0
	0x0374E9B4 TBZ X8, 0x3, 0x374EC2C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X1
	005 Move X20, X0
	006 Call InputActionState.DisableControls, X0, X1
	007 Compare X19, 0
	008 JumpIfEqual {27}
	009 Move W1, [X19+192]
	010 Move X0, X20
	011 Move W2, W31
	012 Move W3, W31
	013 Call InputActionState.ResetActionState, X0, X1, X2, X3
	014 Move X8, [X19+200]
	015 Compare X8, 0
	016 JumpIfEqual {27}
	017 Move W9, [X8+72]
	018 Move X1, X19
	019 Move X20, [X31+16]
	020 Move X19, [X31+24]
	021 Move W0, 1
	022 Subtract W9, W9, 1
	023 Move [X8+72], W9
	024 Move X30, [X31+32]
	025 Call InputActionState.NotifyListenersOfActionChange, X0, X1
	026 Return 
	027 Call 0x1C17F20

Method: System.Void DisableControls(UnityEngine.InputSystem.InputAction action)

Disassembly:
	0x0374E9B8 LDR X15, [X21 + 0x90]
	0x0374E9BC MOVZ W11, 0x1
	0x0374E9C0 BFM W11, W2, 0x1F, 0x1E
	0x0374E9C4 LDRH W11, [X15, W11, SXTW]
	0x0374E9C8 CBZ X11, 0x374EAA8
	0x0374E9CC UBFM W16, W2, 0x1F, 0x1E
	0x0374E9D0 LDR X14, [X21 + 0x98]
	0x0374E9D4 LDRH W15, [X15, W16, SXTW]
	0x0374E9D8 MOV X13, X31
	0x0374E9DC MOV W12, W31
	0x0374E9E0 MOVN W22, 0x0
	0x0374E9E4 MOVZ W16, 0xFFFF
	0x0374E9E8 MOVN X17, 0x3
	0x0374E9EC MOVN W23, 0x0
	0x0374E9F0 ADD X0, X13, X15
	0x0374E9F4 LDRH W0, [X14, X0, LSL #1]
	0x0374E9F8 ADD X1, X9, X0, 0x5, LSL
	0x0374E9FC LDRB W2, [X1 + 0x4]
	0x0374EA00 TBNZ X2, 0x2, 0x374EA54
	0x0374EA04 TBNZ X2, 0x3, 0x374EA90
	0x0374EA08 LDRB W2, [X1]
	0x0374EA0C CBZ W2, 0x374EA90
	0x0374EA10 LDRH W1, [X1 + 0xE]
	0x0374EA14 LDR X3, [X21 + 0x78]
	0x0374EA18 CMP W2, 0x1
	0x0374EA1C CSINC W2, W2, W31, HI
	0x0374EA20 ADD X3, X3, W1, 0x2, UXTW
	0x0374EA24 LDR V0, [X3], #0x4
	0x0374EA28 FCMP S0, 0x0
	0x0374EA2C CSET W4, GT
	0x0374EA30 FCMP S0, S8
	0x0374EA34 ADD W12, W12, W4
	0x0374EA38 CSEL W23, W0, W23, GT
	0x0374EA3C CSEL W22, W1, W22, GT
	0x0374EA40 FCSEL S8, S0, S8, GT
	0x0374EA44 SUBS X2, X2, 0x1
	0x0374EA48 ADD W1, W1, 0x1
	0x0374EA4C B.NE 0x374EA24
	0x0374EA50 B 0x374EA90
	0x0374EA54 LDRH W0, [X1 + 0x8]
	0x0374EA58 LDR X2, [X21 + 0x80]
	0x0374EA5C UBFM X3, X0, 0x3E, 0x3D
	0x0374EA60 CMP W0, W16
	0x0374EA64 CSEL X0, X17, X3, EQ

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Compare X1, 0
	010 JumpIfEqual {56}
	011 Move X8, [X1+200]
	012 Compare X8, 0
	013 JumpIfEqual {56}
	014 NotImplemented "Instruction LDRSW not yet implemented."
	015 Move X8, [X0+184]
	016 Move W9, 48
	017 Move X19, X0
	018 NotImplemented "Instruction MADD not yet implemented."
	019 Compare X8, 0
	020 JumpIfEqual {56}
	021 Move W21, [X8+20]
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move W22, [X1+192]
	024 Move W23, [X8+16]
	025 Move X24, [X19+104]
	026 Move W25, 0xFFFF
	027 Move X8, W23
	028 Add X8, X24, X8
	029 NotImplemented "Instruction LDRH not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 NotImplemented "Instruction CSINV not yet implemented."
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move W9, [X8+4]
	034 Move TEMP, X9
	035 And TEMP, TEMP, 8
	036 Compare TEMP, 8
	037 JumpIfEqual {45}
	038 Move W3, [X8]
	039 Compare W3, 0
	040 JumpIfEqual {45}
	041 NotImplemented "Instruction LDRH not yet implemented."
	042 Move X0, X19
	043 Move W1, W20
	044 Call InputActionState.DisableControls, X0, X1, X2, X3
	045 Subtract X21, X21, 1
	046 Add W23, W23, 1
	047 Move X20, [X31+48]
	048 Move X19, [X31+56]
	049 Move X22, [X31+32]
	050 Move X21, [X31+40]
	051 Move X24, [X31+16]
	052 Move X23, [X31+24]
	053 Move X30, [X31+64]
	054 Move X25, [X31+72]
	055 Return 
	056 Call 0x1C17F20

Method: System.Void EnableControls(System.Int32 mapIndex, System.Int32 controlStartIndex, System.Int32 numControls)

Disassembly:
	0x0374D8EC B.LT 0x374D948
	0x0374D8F0 LDR W22, [X1 + 0xC0]
	0x0374D8F4 LDR W23, [X8 + 0x10]
	0x0374D8F8 LDR X24, [X19 + 0x68]
	0x0374D8FC MOVZ W25, 0xFFFF
	0x0374D900 SXTW X8, W23
	0x0374D904 ADD X8, X24, X8, 0x5, LSL
	0x0374D908 LDRH W9, [X8 + 0x6]
	0x0374D90C CMP W9, W25
	0x0374D910 CSINV W9, W9, W31, NE
	0x0374D914 CMP W9, W22
	0x0374D918 B.NE 0x374D93C
	0x0374D91C LDRB W9, [X8 + 0x4]
	0x0374D920 TBNZ X9, 0x3, 0x374D93C
	0x0374D924 LDRB W3, [X8]
	0x0374D928 CBZ W3, 0x374D93C
	0x0374D92C LDRH W2, [X8 + 0xE]
	0x0374D930 MOV X0, X19
	0x0374D934 MOV W1, W20
	0x0374D938 BL 0x374C8EC
	0x0374D93C SUBS X21, X21, 0x1
	0x0374D940 ADD W23, W23, 0x1
	0x0374D944 B.NE 0x374D900
	0x0374D948 LDP X20, X19, [X31 + 0x30]
	0x0374D94C LDP X22, X21, [X31 + 0x20]
	0x0374D950 LDP X24, X23, [X31 + 0x10]
	0x0374D954 LDP X30, X25, [X31], #0x40
	0x0374D958 RET
	0x0374D95C BL 0x1C16F20
	0x0374D960 STR X30, [X31 - 0x20]!
	0x0374D964 STP X20, X19, [X31 + 0x10]
	0x0374D968 MOV X19, X1
	0x0374D96C MOV X20, X0
	0x0374D970 BL 0x374D9B8
	0x0374D974 CBZ X19, 0x374D9B4
	0x0374D978 LDR W1, [X19 + 0xC0]
	0x0374D97C MOV X0, X20
	0x0374D980 MOV W2, W31
	0x0374D984 MOV W3, W31
	0x0374D988 BL 0x374BF30
	0x0374D98C LDR X8, [X19 + 0xC8]
	0x0374D990 CBZ X8, 0x374D9B4
	0x0374D994 LDR W9, [X8 + 0x48]
	0x0374D998 MOV X1, X19
	0x0374D99C LDP X20, X19, [X31 + 0x10]
	0x0374D9A0 MOVZ W0, 0x1
	0x0374D9A4 SUB W9, W9, 0x1
	0x0374D9A8 STR W9, [X8 + 0x48]
	0x0374D9AC LDR X30, [X31], #0x20
	0x0374D9B0 B 0x374CF48
	0x0374D9B4 BL 0x1C16F20
	0x0374D9B8 STP X30, X25, [X31 - 0x40]!
	0x0374D9BC STP X24, X23, [X31 + 0x10]
	0x0374D9C0 STP X22, X21, [X31 + 0x20]
	0x0374D9C4 STP X20, X19, [X31 + 0x30]
	0x0374D9C8 CBZ X1, 0x374DA64
	0x0374D9CC LDR X8, [X1 + 0xC8]
	0x0374D9D0 CBZ X8, 0x374DA64
	0x0374D9D4 LDRSW X20, [X8 + 0x58]
	0x0374D9D8 LDR X8, [X0 + 0xB8]
	0x0374D9DC MOVZ W9, 0x30
	0x0374D9E0 MOV X19, X0
	0x0374D9E4 MADD X8, X20, X9, X8
	0x0374D9E8 CBZ X8, 0x374DA64
	0x0374D9EC LDR W21, [X8 + 0x14]
	0x0374D9F0 CMP W21, 0x1
	0x0374D9F4 B.LT 0x374DA50
	0x0374D9F8 LDR W22, [X1 + 0xC0]
	0x0374D9FC LDR W23, [X8 + 0x10]
	0x0374DA00 LDR X24, [X19 + 0x68]
	0x0374DA04 MOVZ W25, 0xFFFF
	0x0374DA08 SXTW X8, W23
	0x0374DA0C ADD X8, X24, X8, 0x5, LSL
	0x0374DA10 LDRH W9, [X8 + 0x6]
	0x0374DA14 CMP W9, W25
	0x0374DA18 CSINV W9, W9, W31, NE
	0x0374DA1C CMP W9, W22
	0x0374DA20 B.NE 0x374DA44
	0x0374DA24 LDRB W9, [X8 + 0x4]
	0x0374DA28 TBNZ X9, 0x3, 0x374DA44
	0x0374DA2C LDRB W3, [X8]
	0x0374DA30 CBZ W3, 0x374DA44
	0x0374DA34 LDRH W2, [X8 + 0xE]
	0x0374DA38 MOV X0, X19
	0x0374DA3C MOV W1, W20
	0x0374DA40 BL 0x374ADAC
	0x0374DA44 SUBS X21, X21, 0x1
	0x0374DA48 ADD W23, W23, 0x1
	0x0374DA4C B.NE 0x374DA08
	0x0374DA50 LDP X20, X19, [X31 + 0x30]
	0x0374DA54 LDP X22, X21, [X31 + 0x20]
	0x0374DA58 LDP X24, X23, [X31 + 0x10]
	0x0374DA5C LDP X30, X25, [X31], #0x40
	0x0374DA60 RET
	0x0374DA64 BL 0x1C16F20
	0x0374DA68 LDR X9, [X0 + 0x88]
	0x0374DA6C ADD W8, W1, 0x1F
	0x0374DA70 CMP W1, 0x0

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X24, 0xC94000
	014 Move X23, 0x9CF000
	015 Move W8, [X24+3483]
	016 Move X23, [X23+624]
	017 Move W21, W3
	018 Move W19, W2
	019 Move W22, W1
	020 Move X20, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {30}
	025 Move X0, 0x9CF000
	026 Move X0, [X0+624]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X24+3483], W8
	030 Move X0, [X23]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {36}
	034 Call 0x1C17DFC
	035 Move X0, [X23]
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X8, [X0+184]
	038 Move W23, W21
	039 Move X9, [X20+136]
	040 Move X22, X22
	041 ShiftRight X22, 24
	042 And X22, X22, 0x7FFFFF
	043 Move X21, [X8]
	044 Move W24, W19
	045 ShiftRight W24, 31
	046 And W24, W24, 0x3FFFFFFF
	047 Move W25, 1
	048 Move W26, 0xFFFF
	049 Move TEMP, 31
	050 Not TEMP
	051 Move X27, TEMP
	052 Add W8, W19, 31
	053 NotImplemented "Instruction CMP not yet implemented."
	054 NotImplemented "Instruction CSEL not yet implemented."
	055 NotImplemented "Instruction SBFM not yet implemented."
	056 Move W10, [X9]
	057 NotImplemented "Instruction LSLV not yet implemented."
	058 And W31, W10, W28
	059 Move X9, [X20+160]
	060 Move X10, [X20+168]
	061 Move X12, [X20+104]
	062 Add W11, W24, 1
	063 NotImplemented "Instruction LDRSW not yet implemented."
	064 NotImplemented "Instruction LDRH not yet implemented."
	065 Add X14, X12, X9
	066 Move X11, X14
	067 Add X11, X11, 4
	068 Move W13, [X11]
	069 Move TEMP, X13
	070 And TEMP, TEMP, 32
	071 Compare TEMP, 32
	072 JumpIfNotEqual {88}
	073 Move TEMP, X13
	074 And TEMP, TEMP, 8
	075 Compare TEMP, 8
	076 JumpIfNotEqual {86}
	077 NotImplemented "Instruction LDRH not yet implemented."
	078 Move X13, X11
	079 ShiftRight X13, 59
	080 And X13, X13, 0x3FFFFFF
	081 NotImplemented "Instruction CMP not yet implemented."
	082 NotImplemented "Instruction CSEL not yet implemented."
	083 Add X11, X11, X12
	084 Add X11, X11, 4
	085 Move W13, [X11]
	086 Or W12, W13, 16
	087 Move [X11], W12
	088 Move X11, [X20+24]
	089 Compare X11, 0
	090 JumpIfEqual {128}
	091 Move W12, [X11+24]
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Compare X21, 0
	094 JumpIfEqual {128}
	095 Move X12, [X20+168]
	096 NotImplemented "Instruction SBFM not yet implemented."
	097 Move X8, W19
	098 Add X11, X11, X8
	099 NotImplemented "Instruction LDRH not yet implemented."
	100 Move X1, [X11+32]
	101 Or X8, X22, X8
	102 Or X8, X8, X9
	103 Or X3, X8, X10
	104 Move X0, X21
	105 Move X2, X20
	106 Move X5, X31
	107 Call InputManager.AddStateChangeMonitor, X0, X1, X2, X3, X4
	108 Move X9, [X20+136]
	109 Move W8, [X9]
	110 Or W8, W8, W28
	111 Move [X9], W8
	112 Add W24, W24, 2
	113 Subtract X23, X23, 1
	114 Add W19, W19, 1
	115 Move X20, [X31+80]
	116 Move X19, [X31+88]
	117 Move X22, [X31+64]
	118 Move X21, [X31+72]
	119 Move X24, [X31+48]
	120 Move X23, [X31+56]
	121 Move X26, [X31+32]
	122 Move X25, [X31+40]
	123 Move X28, [X31+16]
	124 Move X27, [X31+24]
	125 Move X29, [X31+96]
	126 Move X30, [X31+104]
	127 Return 
	128 Call 0x1C17F20
	129 Call 0x1C17F28

Method: System.Void DisableControls(System.Int32 mapIndex, System.Int32 controlStartIndex, System.Int32 numControls)

Disassembly:
	0x0374BDAC RET
	0x0374BDB0 LDRH W8, [X0 + 0xC]
	0x0374BDB4 MOVZ W9, 0xFFFF
	0x0374BDB8 CMP W8, W9
	0x0374BDBC CSINV W0, W8, W31, NE
	0x0374BDC0 RET
	0x0374BDC4 LDRH W8, [X0]
	0x0374BDC8 MOVZ W9, 0xFFFF
	0x0374BDCC CMP W8, W9
	0x0374BDD0 CSINV W0, W8, W31, NE
	0x0374BDD4 RET
	0x0374BDD8 SUB X31, X31, 0x70
	0x0374BDDC STP X30, X23, [X31 + 0x40]
	0x0374BDE0 STP X22, X21, [X31 + 0x50]
	0x0374BDE4 STP X20, X19, [X31 + 0x60]
	0x0374BDE8 MRS X22, 0xC000
	0x0374BDEC LDR X8, [X22 + 0x28]
	0x0374BDF0 ADRP X21, 0xC95000
	0x0374BDF4 MOV W19, W1
	0x0374BDF8 MOV X20, X0
	0x0374BDFC STR X8, [X31 + 0x38]
	0x0374BE00 LDRB W8, [X21 + 0xDAA]
	0x0374BE04 TBNZ X8, 0x0, 0x374BE1C
	0x0374BE08 ADRP X0, 0x9FA000
	0x0374BE0C LDR X0, [X0 + 0xB90]
	0x0374BE10 BL 0x1C16CF4
	0x0374BE14 MOVZ W8, 0x1
	0x0374BE18 STRB W8, [X21 + 0xDAA]
	0x0374BE1C LDR X8, [X20 + 0x20]
	0x0374BE20 CBZ X8, 0x374BF24
	0x0374BE24 LDR W9, [X8 + 0x18]
	0x0374BE28 CMP W9, W19
	0x0374BE2C B.LS 0x374BF28
	0x0374BE30 SXTW X23, W19
	0x0374BE34 ADD X8, X8, X23, 0x3, LSL
	0x0374BE38 LDR X21, [X8 + 0x20]
	0x0374BE3C CBZ X21, 0x374BF24
	0x0374BE40 ADRP X10, 0x9FA000
	0x0374BE44 LDR X8, [X21]
	0x0374BE48 LDR X10, [X10 + 0xB90]
	0x0374BE4C LDRH W9, [X8 + 0x12E]
	0x0374BE50 LDR X1, [X10]
	0x0374BE54 CBZ X9, 0x374BE78
	0x0374BE58 LDR X10, [X8 + 0xB0]
	0x0374BE5C ADD X10, X10, 0x8
	0x0374BE60 LDUR X11, [X10 - 0x8]
	0x0374BE64 CMP X11, X1
	0x0374BE68 B.EQ 0x374BE88
	0x0374BE6C SUBS X9, X9, 0x1
	0x0374BE70 ADD X10, X10, 0x10
	0x0374BE74 B.NE 0x374BE60
	0x0374BE78 MOVZ W2, 0x1
	0x0374BE7C MOV X0, X21
	0x0374BE80 BL 0x1C5C788
	0x0374BE84 B 0x374BE98
	0x0374BE88 LDR W9, [X10]
	0x0374BE8C ADD W9, W9, 0x1
	0x0374BE90 ADD X8, X8, W9, 0x4, SXTW
	0x0374BE94 ADD X0, X8, 0x138
	0x0374BE98 LDP X8, X1, [X0]
	0x0374BE9C MOV X0, X21
	0x0374BEA0 BLR X8
	0x0374BEA4 LDR X8, [X20 + 0x70]
	0x0374BEA8 ADD X9, X23, X23, 0x1, LSL
	0x0374BEAC ADD X8, X8, X9, 0x4, LSL
	0x0374BEB0 LDRB W10, [X8 + 0x3]
	0x0374BEB4 TBZ X10, 0x0, 0x374BED0
	0x0374BEB8 MOV X0, X20
	0x0374BEBC MOV W1, W19
	0x0374BEC0 UBFM X21, X9, 0x3C, 0x3B
	0x0374BEC4 BL 0x374F2CC
	0x0374BEC8 LDR X8, [X20 + 0x70]
	0x0374BECC ADD X8, X21, X8
	0x0374BED0 MOVI V0.2D, 0x0
	0x0374BED4 MOVZ W9, 0xFFFF
	0x0374BED8 STUR V0, [X31 + 0x1D]
	0x0374BEDC STP V0, V0, [X31]
	0x0374BEE0 STRH W9, [X8]
	0x0374BEE4 MOVZ W9, 0x1
	0x0374BEE8 STRB W9, [X8 + 0x2]
	0x0374BEEC LDUR V0, [X31 + 0x1D]
	0x0374BEF0 LDP V2, V1, [X31]
	0x0374BEF4 STR V0, [X8 + 0x2]
	0x0374BEF8 STUR V1, [X8 + 0x13]
	0x0374BEFC STUR V2, [X8 + 0x3]
	0x0374BF00 LDR X8, [X22 + 0x28]
	0x0374BF04 LDR X9, [X31 + 0x38]
	0x0374BF08 CMP X8, X9
	0x0374BF0C B.NE 0x374BF2C
	0x0374BF10 LDP X20, X19, [X31 + 0x60]
	0x0374BF14 LDP X22, X21, [X31 + 0x50]
	0x0374BF18 LDP X30, X23, [X31 + 0x40]
	0x0374BF1C ADD X31, X31, 0x70
	0x0374BF20 RET
	0x0374BF24 BL 0x1C16F20
	0x0374BF28 BL 0x1C16F28

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X24, 0xC96000
	014 Move X23, 0x9D1000
	015 Move W8, [X24+3484]
	016 Move X23, [X23+624]
	017 Move W21, W3
	018 Move W19, W2
	019 Move W22, W1
	020 Move X20, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {30}
	025 Move X0, 0x9D1000
	026 Move X0, [X0+624]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X24+3484], W8
	030 Move X0, [X23]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {36}
	034 Call 0x1C17DFC
	035 Move X0, [X23]
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X8, [X0+184]
	038 Move W23, W21
	039 Move X9, [X20+136]
	040 Move W25, 1
	041 Move X21, [X8]
	042 Move X22, X22
	043 ShiftRight X22, 24
	044 And X22, X22, 0x7FFFFF
	045 Move W24, 1
	046 NotImplemented "Instruction BFM not yet implemented."
	047 Move W26, 0xFFFF
	048 Move TEMP, 31
	049 Not TEMP
	050 Move X27, TEMP
	051 Add W8, W19, 31
	052 NotImplemented "Instruction CMP not yet implemented."
	053 NotImplemented "Instruction CSEL not yet implemented."
	054 NotImplemented "Instruction SBFM not yet implemented."
	055 Move W10, [X9]
	056 NotImplemented "Instruction LSLV not yet implemented."
	057 And W31, W10, W28
	058 Move X9, [X20+160]
	059 Move X10, [X20+168]
	060 Move X12, [X20+104]
	061 NotImplemented "Instruction LDRSW not yet implemented."
	062 NotImplemented "Instruction LDRH not yet implemented."
	063 Add X14, X12, X9
	064 Move X11, X14
	065 Add X11, X11, 4
	066 Move W13, [X11]
	067 Move TEMP, X13
	068 And TEMP, TEMP, 32
	069 Compare TEMP, 32
	070 JumpIfNotEqual {86}
	071 Move TEMP, X13
	072 And TEMP, TEMP, 8
	073 Compare TEMP, 8
	074 JumpIfNotEqual {84}
	075 NotImplemented "Instruction LDRH not yet implemented."
	076 Move X13, X11
	077 ShiftRight X13, 59
	078 And X13, X13, 0x3FFFFFF
	079 NotImplemented "Instruction CMP not yet implemented."
	080 NotImplemented "Instruction CSEL not yet implemented."
	081 Add X11, X11, X12
	082 Add X11, X11, 4
	083 Move W13, [X11]
	084 And W12, W13, 0xFFFFFFEF
	085 Move [X11], W12
	086 Move X11, [X20+24]
	087 Compare X11, 0
	088 JumpIfEqual {124}
	089 Move W12, [X11+24]
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Compare X21, 0
	092 JumpIfEqual {124}
	093 NotImplemented "Instruction SBFM not yet implemented."
	094 Move X8, W19
	095 Add X11, X11, X8
	096 Move X1, [X11+32]
	097 Or X8, X22, X8
	098 Or X8, X8, X9
	099 Or X3, X8, X10
	100 Move X0, X21
	101 Move X2, X20
	102 Move X4, X31
	103 Call InputManager.RemoveStateChangeMonitor, X0, X1, X2, X3
	104 Move X9, [X20+136]
	105 Move W8, [X9]
	106 NotImplemented "Instruction BIC not yet implemented."
	107 Move [X9], W8
	108 Add W25, W25, 2
	109 Subtract X23, X23, 1
	110 Add W19, W19, 1
	111 Move X20, [X31+80]
	112 Move X19, [X31+88]
	113 Move X22, [X31+64]
	114 Move X21, [X31+72]
	115 Move X24, [X31+48]
	116 Move X23, [X31+56]
	117 Move X26, [X31+32]
	118 Move X25, [X31+40]
	119 Move X28, [X31+16]
	120 Move X27, [X31+24]
	121 Move X29, [X31+96]
	122 Move X30, [X31+104]
	123 Return 
	124 Call 0x1C17F20
	125 Call 0x1C17F28

Method: System.Void SetInitialStateCheckPending(System.Int32 actionIndex, System.Boolean value = True)

Disassembly:
	0x0374EB38 LDR X8, [X21 + 0x70]
	0x0374EB3C MOV X1, X31
	0x0374EB40 ADD X8, X26, X8
	0x0374EB44 LDRB W0, [X8 + 0x2]
	0x0374EB48 BL 0x37C1380
	0x0374EB4C TBNZ X0, 0x0, 0x374EBF8
	0x0374EB50 ADD W24, W24, 0x1
	0x0374EB54 SUBS X25, X25, 0x1
	0x0374EB58 ADD X26, X26, 0x30
	0x0374EB5C B.NE 0x374EB38
	0x0374EB60 B 0x374EC10
	0x0374EB64 CBZ W10, 0x374E87C
	0x0374EB68 ADRP X21, 0xC8B000
	0x0374EB6C LDRB W8, [X21 + 0x5AA]
	0x0374EB70 LDR V8, [X20 + 0x1C]
	0x0374EB74 CBNZ W8, 0x374EB8C
	0x0374EB78 ADRP X0, 0x9AC000
	0x0374EB7C LDR X0, [X0 + 0x4B8]
	0x0374EB80 BL 0x1C16CF4
	0x0374EB84 MOVZ W8, 0x1
	0x0374EB88 STRB W8, [X21 + 0x5AA]
	0x0374EB8C ADRP X8, 0x9AC000
	0x0374EB90 LDR X8, [X8 + 0x4B8]
	0x0374EB94 ADRP X9, 0xFFFFFFFFFD39C000
	0x0374EB98 LDR V0, [X9 + 0x240]
	0x0374EB9C FABS S1, S8
	0x0374EBA0 LDR X8, [X8]
	0x0374EBA4 FABS S2, S9
	0x0374EBA8 FCMP S1, S2
	0x0374EBAC FCSEL S1, S1, S2, GT
	0x0374EBB0 LDR X8, [X8 + 0xB8]
	0x0374EBB4 FMUL S0, S1, S0
	0x0374EBB8 FMOV S1, 8
	0x0374EBBC LDR V3, [X8]
	0x0374EBC0 FMUL S1, S3, S1
	0x0374EBC4 FCMP S0, S1
	0x0374EBC8 FCSEL S0, S0, S1, GT

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+96]
	003 Move W9, 48
	004 Move X10, [X0+184]
	005 NotImplemented "Instruction NOP not yet implemented."
	006 NotImplemented "Instruction SMADDL not yet implemented."
	007 Move W8, [X8+2]
	008 NotImplemented "Instruction NOP not yet implemented."
	009 NotImplemented "Instruction MADD not yet implemented."
	010 Compare X9, 0
	011 JumpIfEqual {38}
	012 Move W8, [X9+20]
	013 NotImplemented "Instruction CMP not yet implemented."
	014 Move W9, [X9+16]
	015 And W31, W2, 1
	016 Move W10, 16
	017 NotImplemented "Instruction CSEL not yet implemented."
	018 Move W11, 0xFFFF
	019 Move X12, [X0+104]
	020 Move X13, W9
	021 Add X12, X12, X13
	022 NotImplemented "Instruction LDRH not yet implemented."
	023 NotImplemented "Instruction CMP not yet implemented."
	024 NotImplemented "Instruction CSINV not yet implemented."
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move W13, [X12+4]
	027 Move TEMP, X13
	028 And TEMP, TEMP, 8
	029 Compare TEMP, 8
	030 JumpIfEqual {34}
	031 And W13, W13, 0xFFFFFFEF
	032 Or W13, W13, W10
	033 Move [X12+4], W13
	034 Subtract X8, X8, 1
	035 Add W9, W9, 1
	036 Move X30, [X31+16]
	037 Return 
	038 Call 0x1C17F20

Method: System.Void SetInitialStateCheckPending(UnityEngine.InputSystem.InputActionState/BindingState* bindingStatePtr, System.Boolean value)

Disassembly:
	0x0374EAB4 STRB W8, [X19 + 0x1]
	0x0374EAB8 ADDS W31, W22, 0x1
	0x0374EABC B.EQ 0x374EB64
	0x0374EAC0 MOV X0, X20
	0x0374EAC4 MOV W1, W22
	0x0374EAC8 BL 0x374CAD4
	0x0374EACC MOV X0, X20
	0x0374EAD0 MOV W1, W23
	0x0374EAD4 BL 0x374CCC0
	0x0374EAD8 LDRB W8, [X20 + 0x1]
	0x0374EADC STR S8, [X20 + 0x1C]
	0x0374EAE0 ORR W8, W8, 0x1
	0x0374EAE4 STRB W8, [X20 + 0x1]
	0x0374EAE8 LDRH W8, [X19 + 0x18]
	0x0374EAEC CMP W23, W8
	0x0374EAF0 B.EQ 0x374EC10
	0x0374EAF4 LDRH W1, [X19 + 0x1A]
	0x0374EAF8 MOVZ W8, 0xFFFF
	0x0374EAFC CMP W1, W8

ISIL:
	001 Move X8, X1
	002 Add X8, X8, 4
	003 Move W9, [X8]
	004 Move TEMP, X9
	005 And TEMP, TEMP, 8
	006 Compare TEMP, 8
	007 JumpIfNotEqual {22}
	008 NotImplemented "Instruction LDRH not yet implemented."
	009 Move X9, [X0+104]
	010 Move W10, 0xFFFF
	011 Move X11, X8
	012 ShiftRight X11, 59
	013 And X11, X11, 0x3FFFFFF
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Move TEMP, 31
	016 Not TEMP
	017 Move X8, TEMP
	018 NotImplemented "Instruction CSEL not yet implemented."
	019 Add X8, X8, X9
	020 Add X8, X8, 4
	021 Move W9, [X8]
	022 And W31, W2, 1
	023 Move W10, 16
	024 And W9, W9, 0xFFFFFFEF
	025 NotImplemented "Instruction CSEL not yet implemented."
	026 Or W9, W9, W10
	027 Move [X8], W9
	028 Return 

Method: System.Boolean IsControlEnabled(System.Int32 controlIndex)

Disassembly:
	0x0374EA68 LDR V0, [X0, X2, LSL]
	0x0374EA6C FCMP S0, 0x0
	0x0374EA70 CSET W0, GT
	0x0374EA74 FCMP S0, S8
	0x0374EA78 ADD W12, W12, W0
	0x0374EA7C B.LE 0x374EA90
	0x0374EA80 LDRH W22, [X1 + 0xE]
	0x0374EA84 LDR X0, [X21 + 0xA0]
	0x0374EA88 MOV V8.16B, V0.16B

ISIL:
	001 Move X9, [X0+136]
	002 Add W8, W1, 31
	003 NotImplemented "Instruction CMP not yet implemented."
	004 NotImplemented "Instruction CSEL not yet implemented."
	005 NotImplemented "Instruction SBFM not yet implemented."
	006 Move W8, [X9]
	007 NotImplemented "Instruction LSRV not yet implemented."
	008 And W0, W8, 1
	009 Return X0

Method: System.Void SetControlEnabled(System.Int32 controlIndex, System.Boolean state)

Disassembly:
	0x0374EB00 B.EQ 0x374EB0C
	0x0374EB04 MOV X0, X21
	0x0374EB08 BL 0x374BDD8
	0x0374EB0C LDR X8, [X21 + 0x68]
	0x0374EB10 SXTW X9, W23
	0x0374EB14 ADD X8, X8, X9, 0x5, LSL
	0x0374EB18 LDRB W25, [X8 + 0x1]
	0x0374EB1C CBZ X25, 0x374EC10
	0x0374EB20 LDRH W8, [X8 + 0xC]
	0x0374EB24 MOVZ W9, 0xFFFF
	0x0374EB28 CMP W8, W9
	0x0374EB2C CSINV X24, X8, X31, NE
	0x0374EB30 ADD X8, X24, X24, 0x1, LSL
	0x0374EB34 UBFM X26, X8, 0x3C, 0x3B

ISIL:
	001 Move X9, [X0+136]
	002 Add W8, W1, 31
	003 NotImplemented "Instruction CMP not yet implemented."
	004 NotImplemented "Instruction CSEL not yet implemented."
	005 NotImplemented "Instruction SBFM not yet implemented."
	006 Move W10, [X9]
	007 Move W11, 1
	008 NotImplemented "Instruction LSLV not yet implemented."
	009 And W31, W2, 1
	010 NotImplemented "Instruction BIC not yet implemented."
	011 Or W10, W10, W11
	012 NotImplemented "Instruction CSEL not yet implemented."
	013 Move [X9], W10
	014 Return 

Method: System.Void HookOnBeforeUpdate()

Disassembly:
	0x0374DE78 SUB X31, X31, 0xF0
	0x0374DE7C STR D8, [X31 + 0x80]
	0x0374DE80 STP X29, X30, [X31 + 0x90]
	0x0374DE84 STP X28, X27, [X31 + 0xA0]
	0x0374DE88 STP X26, X25, [X31 + 0xB0]
	0x0374DE8C STP X24, X23, [X31 + 0xC0]
	0x0374DE90 STP X22, X21, [X31 + 0xD0]
	0x0374DE94 STP X20, X19, [X31 + 0xE0]
	0x0374DE98 MRS X26, 0xC000
	0x0374DE9C LDR X8, [X26 + 0x28]
	0x0374DEA0 ADRP X19, 0xC93000
	0x0374DEA4 MOV X22, X4
	0x0374DEA8 MOV V8.16B, V0.16B
	0x0374DEAC STR X8, [X31 + 0x78]
	0x0374DEB0 LDRB W8, [X19 + 0xDA0]
	0x0374DEB4 MOV W24, W3
	0x0374DEB8 MOV W23, W2
	0x0374DEBC MOV W25, W1
	0x0374DEC0 MOV X20, X0
	0x0374DEC4 TBNZ X8, 0x0, 0x374DEDC
	0x0374DEC8 ADRP X0, 0x9A6000
	0x0374DECC LDR X0, [X0 + 0xE00]
	0x0374DED0 BL 0x1C16CF4
	0x0374DED4 MOVZ W8, 0x1
	0x0374DED8 STRB W8, [X19 + 0xDA0]
	0x0374DEDC ADRP X27, 0x9A6000
	0x0374DEE0 LDR X27, [X27 + 0xE00]
	0x0374DEE4 MOVI V0.2D, 0x0
	0x0374DEE8 MOV X0, X31
	0x0374DEEC STP V0, V0, [X31 + 0x50]
	0x0374DEF0 STP V0, V0, [X31 + 0x30]
	0x0374DEF4 STP V0, V0, [X31 + 0x10]
	0x0374DEF8 STP X31, X31, [X31]
	0x0374DEFC BL 0x373BF80
	0x0374DF00 LDR X9, [X20 + 0x68]
	0x0374DF04 MOVZ W8, 0x1
	0x0374DF08 SXTW X10, W24
	0x0374DF0C STR X22, [X20 + 0xC8]
	0x0374DF10 STRB W8, [X20 + 0xC2]
	0x0374DF14 ADD X28, X9, X10, 0x5, LSL
	0x0374DF18 LDRH W29, [X28 + 0x6]
	0x0374DF1C MOVZ W8, 0xFFFF
	0x0374DF20 MOV X19, X0
	0x0374DF24 MOVI V0.2D, 0x0
	0x0374DF28 CMP W29, W8
	0x0374DF2C CSINV W21, W29, W31, NE
	0x0374DF30 STP V0, V0, [X31 + 0x20]
	0x0374DF34 STR V0, [X31 + 0x1]
	0x0374DF38 ADD X0, X31, 0x10
	0x0374DF3C MOV W1, W25
	0x0374DF40 BL 0x374CC60
	0x0374DF44 ADD X0, X31, 0x10

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xC94000
	005 Move W8, [X20+3485]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {22}
	011 Move X0, 0x9A8000
	012 Move X0, [X0+3696]
	013 Call 0x1C17CF4
	014 Move X0, 0x9F9000
	015 Move X0, [X0+3056]
	016 Call 0x1C17CF4
	017 Move X0, 0x9CF000
	018 Move X0, [X0+624]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+3485], W8
	022 Move W8, [X19+192]
	023 Compare W8, 0
	024 JumpIfNotEqual {57}
	025 Move X8, [X19+208]
	026 Compare X8, 0
	027 JumpIfNotEqual {40}
	028 Move X8, 0x9A8000
	029 Move X8, [X8+3696]
	030 Move X0, [X8]
	031 Call 0x1C17F10
	032 Move X8, 0x9F9000
	033 Move X8, [X8+3056]
	034 Move X1, X19
	035 Move X3, X31
	036 Move X20, X0
	037 Move X2, [X8]
	038 Call Action..ctor, X0, X1, X2
	039 Move [X19+208], X20
	040 Move X20, 0x9CF000
	041 Move X20, [X20+624]
	042 Move X0, [X20]
	043 Move W8, [X0+224]
	044 Compare W8, 0
	045 JumpIfNotEqual {48}
	046 Call 0x1C17DFC
	047 Move X0, [X20]
	048 Move X8, [X0+184]
	049 Move X0, [X8]
	050 Compare X0, 0
	051 JumpIfEqual {61}
	052 Move X1, [X19+208]
	053 Move X2, X31
	054 Call InputManager.add_onBeforeUpdate, X0, X1
	055 Move W8, 1
	056 Move [X19+192], W8
	057 Move X20, [X31+16]
	058 Move X19, [X31+24]
	059 Move X30, [X31+32]
	060 Return 
	061 Call 0x1C17F20

Method: System.Void UnhookOnBeforeUpdate()

Disassembly:
	0x0374EBCC FABD S1, S9, S9
	0x0374EBD0 FCMP S1, S0
	0x0374EBD4 B.PL 0x374E87C
	0x0374EBD8 LDR V0, [X20 + 0x1C]
	0x0374EBDC FCMP S0, 0x0
	0x0374EBE0 B.LE 0x374EBF0
	0x0374EBE4 LDRB W8, [X19 + 0x1]
	0x0374EBE8 ORR W8, W8, 0x8
	0x0374EBEC STRB W8, [X19 + 0x1]
	0x0374EBF0 MOVZ W0, 0x1
	0x0374EBF4 B 0x374EC3C
	0x0374EBF8 MOV X0, X19
	0x0374EBFC MOV W1, W24
	0x0374EC00 BL 0x374CB6C
	0x0374EC04 MOV X0, X20
	0x0374EC08 MOV W1, W24
	0x0374EC0C BL 0x374CB6C
	0x0374EC10 MOV X0, X19
	0x0374EC14 MOV W1, W22
	0x0374EC18 BL 0x374CAD4
	0x0374EC1C MOV X0, X19
	0x0374EC20 MOV W1, W23
	0x0374EC24 BL 0x374CCC0
	0x0374EC28 LDRB W8, [X19 + 0x1]
	0x0374EC2C MOV W0, W31
	0x0374EC30 ORR W8, W8, 0x1
	0x0374EC34 STRB W8, [X19 + 0x1]
	0x0374EC38 STR S8, [X19 + 0x1C]
	0x0374EC3C LDP X20, X19, [X31 + 0x50]
	0x0374EC40 LDP X22, X21, [X31 + 0x40]
	0x0374EC44 LDP X24, X23, [X31 + 0x30]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xC93000
	005 Move W8, [X20+3486]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x9CE000
	012 Move X0, [X0+624]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3486], W8
	016 Move W8, [X19+192]
	017 Compare W8, 0
	018 JumpIfEqual {35}
	019 Move X20, 0x9CE000
	020 Move X20, [X20+624]
	021 Move X0, [X20]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {27}
	025 Call 0x1C17DFC
	026 Move X0, [X20]
	027 Move X8, [X0+184]
	028 Move X0, [X8]
	029 Compare X0, 0
	030 JumpIfEqual {39}
	031 Move X1, [X19+208]
	032 Move X2, X31
	033 Call InputManager.remove_onBeforeUpdate, X0, X1
	034 Move [X19+192], W31
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X30, [X31+32]
	038 Return 
	039 Call 0x1C17F20

Method: System.Void OnBeforeInitialUpdate()

Disassembly:
	0x0374EC48 LDP X26, X25, [X31 + 0x20]
	0x0374EC4C LDR X30, [X31 + 0x10]
	0x0374EC50 LDP D9, D8, [X31], #0x60
	0x0374EC54 RET
	0x0374EC58 BL 0x1C16F28
	0x0374EC5C BL 0x1C16F20
	0x0374EC60 STR X30, [X31 - 0x40]!
	0x0374EC64 STP X24, X23, [X31 + 0x10]
	0x0374EC68 STP X22, X21, [X31 + 0x20]
	0x0374EC6C STP X20, X19, [X31 + 0x30]
	0x0374EC70 ADRP X23, 0xC92000
	0x0374EC74 LDRB W8, [X23 + 0xDA1]
	0x0374EC78 MOV X21, X3
	0x0374EC7C MOV W19, W2
	0x0374EC80 MOV X20, X1
	0x0374EC84 MOV X22, X0
	0x0374EC88 TBNZ X8, 0x0, 0x374ECAC
	0x0374EC8C ADRP X0, 0x9CD000
	0x0374EC90 LDR X0, [X0 + 0xC90]
	0x0374EC94 BL 0x1C16CF4
	0x0374EC98 ADRP X0, 0x9F6000
	0x0374EC9C LDR X0, [X0 + 0xF90]
	0x0374ECA0 BL 0x1C16CF4
	0x0374ECA4 MOVZ W8, 0x1
	0x0374ECA8 STRB W8, [X23 + 0xDA1]
	0x0374ECAC LDRH W9, [X20 + 0x4]
	0x0374ECB0 LDR X8, [X22 + 0x18]
	0x0374ECB4 MOVZ W10, 0xFFFF
	0x0374ECB8 CMP W9, W10
	0x0374ECBC CSINV W9, W9, W31, NE
	0x0374ECC0 CBZ X8, 0x374EE08
	0x0374ECC4 LDR W10, [X8 + 0x18]
	0x0374ECC8 CMP W9, W10
	0x0374ECCC B.CS 0x374EE0C
	0x0374ECD0 ADD X8, X8, W9, 0x3, UXTW
	0x0374ECD4 LDR X23, [X8 + 0x20]
	0x0374ECD8 CBZ X23, 0x374EE08
	0x0374ECDC ADRP X24, 0x9CD000
	0x0374ECE0 LDR X24, [X24 + 0xC90]
	0x0374ECE4 MOV X0, X23
	0x0374ECE8 MOV X1, X31
	0x0374ECEC BL 0x3773448
	0x0374ECF0 LDR X1, [X24]
	0x0374ECF4 TBZ X0, 0x0, 0x374ED38
	0x0374ECF8 LDR X8, [X23]
	0x0374ECFC LDRB W9, [X1 + 0x130]
	0x0374ED00 LDRB W10, [X8 + 0x130]
	0x0374ED04 CMP W10, W9
	0x0374ED08 B.CC 0x374EE10
	0x0374ED0C LDR X8, [X8 + 0xC8]
	0x0374ED10 ADD X8, X8, X9, 0x3, LSL
	0x0374ED14 LDUR X8, [X8 - 0x8]
	0x0374ED18 CMP X8, X1
	0x0374ED1C B.NE 0x374EE10
	0x0374ED20 MOV X0, X23
	0x0374ED24 MOV X1, X31
	0x0374ED28 BL 0x3758994
	0x0374ED2C LDR X1, [X24]
	0x0374ED30 LDR X8, [X1 + 0xB8]
	0x0374ED34 B 0x374ED40
	0x0374ED38 LDR X8, [X1 + 0xB8]
	0x0374ED3C LDR V0, [X8]
	0x0374ED40 LDRH W9, [X20 + 0x4]
	0x0374ED44 LDR X10, [X22 + 0x78]
	0x0374ED48 MOVZ W11, 0xFFFF
	0x0374ED4C MOVN X12, 0x3
	0x0374ED50 UBFM X13, X9, 0x3E, 0x3D
	0x0374ED54 CMP W9, W11
	0x0374ED58 CSEL X9, X12, X13, EQ
	0x0374ED5C LDR V1, [X8 + 0x4]
	0x0374ED60 LDR V2, [X9, X10, LSL]
	0x0374ED64 FMUL S1, S0, S1
	0x0374ED68 FCMP S2, S1
	0x0374ED6C B.HI 0x374ED74
	0x0374ED70 STR X31, [X21 + 0x10]
	0x0374ED74 LDR X8, [X22 + 0x60]
	0x0374ED78 MOVZ W9, 0x30
	0x0374ED7C LDR V1, [X20 + 0x1C]
	0x0374ED80 NOP
	0x0374ED84 SMADDL X8, X19, X9, X8
	0x0374ED88 LDRB W9, [X8 + 0x1]
	0x0374ED8C FCMP S1, S0
	0x0374ED90 B.LT 0x374EDBC
	0x0374ED94 TBNZ X9, 0x6, 0x374EDBC
	0x0374ED98 ADRP X10, 0x9F6000
	0x0374ED9C LDR X10, [X10 + 0xF90]
	0x0374EDA0 ORR W9, W9, 0x40
	0x0374EDA4 LDR X10, [X10]
	0x0374EDA8 LDR X10, [X10 + 0xB8]
	0x0374EDAC LDR W10, [X10]
	0x0374EDB0 STR W10, [X8 + 0x28]
	0x0374EDB4 STRB W9, [X8 + 0x1]
	0x0374EDB8 B 0x374EDD4
	0x0374EDBC TBZ X9, 0x6, 0x374EDD4
	0x0374EDC0 LDR X10, [X1 + 0xB8]
	0x0374EDC4 LDR V2, [X10 + 0x4]
	0x0374EDC8 FMUL S0, S0, S2
	0x0374EDCC FCMP S1, S0
	0x0374EDD0 B.LS 0x374EDE8
	0x0374EDD4 LDP X20, X19, [X31 + 0x30]
	0x0374EDD8 LDP X22, X21, [X31 + 0x20]
	0x0374EDDC LDP X24, X23, [X31 + 0x10]
	0x0374EDE0 LDR X30, [X31], #0x40
	0x0374EDE4 RET
	0x0374EDE8 ADRP X10, 0x9F6000
	0x0374EDEC LDR X10, [X10 + 0xF90]
	0x0374EDF0 AND W9, W9, 0xFFFFFFBF
	0x0374EDF4 LDR X10, [X10]
	0x0374EDF8 LDR X10, [X10 + 0xB8]
	0x0374EDFC LDR W10, [X10]
	0x0374EE00 STR W10, [X8 + 0x2C]
	0x0374EE04 B 0x374EDB4
	0x0374EE08 BL 0x1C16F20
	0x0374EE0C BL 0x1C16F28
	0x0374EE10 MOV X0, X23
	0x0374EE14 BL 0x1C171E0
	0x0374EE18 STP D9, D8, [X31 - 0x40]!
	0x0374EE1C STR X30, [X31 + 0x10]
	0x0374EE20 STP X22, X21, [X31 + 0x20]
	0x0374EE24 STP X20, X19, [X31 + 0x30]
	0x0374EE28 ADRP X22, 0xC92000
	0x0374EE2C LDRB W8, [X22 + 0xDA2]
	0x0374EE30 MOV W21, W2
	0x0374EE34 MOV X19, X1

ISIL:
	001 Move [X31-96], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X20, 0xC93000
	013 Move W8, [X20+3487]
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0x9CE000
	020 Move X0, [X0+624]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X20+3487], W8
	024 Move X20, 0xC93000
	025 Move W8, [X20+3533]
	026 Compare W8, 0
	027 JumpIfNotEqual {33}
	028 Move X0, 0x9F7000
	029 Move X0, [X0+3984]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X20+3533], W8
	033 Move X8, 0x9F7000
	034 Move X8, [X8+3984]
	035 Move X8, [X8]
	036 Move X8, [X8+184]
	037 Move W8, [X8+4]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move X20, [X31+80]
	040 Move X19, [X31+88]
	041 Move X22, [X31+64]
	042 Move X21, [X31+72]
	043 Move X24, [X31+48]
	044 Move X23, [X31+56]
	045 Move X26, [X31+32]
	046 Move X25, [X31+40]
	047 Move X30, [X31+16]
	048 Move X27, [X31+24]
	049 Move V8, [X31+96]
	050 Return 
	051 Move X0, X19
	052 Call InputActionState.UnhookOnBeforeUpdate, X0
	053 Move X0, X31
	054 Call InputState.get_currentTime
	055 Move X20, 0x9CE000
	056 Move X20, [X20+624]
	057 Move V8, V0
	058 Move X0, [X20]
	059 Move W8, [X0+224]
	060 Compare W8, 0
	061 JumpIfNotEqual {64}
	062 Call 0x1C17DFC
	063 Move X0, [X20]
	064 Move X8, [X0+184]
	065 Move W9, [X19+84]
	066 Move X20, [X8]
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Move X21, X31
	069 Move X8, [X19+104]
	070 Add X24, X8, X21
	071 Move W25, [X24+4]
	072 Move TEMP, X25
	073 And TEMP, TEMP, 16
	074 Compare TEMP, 16
	075 JumpIfNotEqual {137}
	076 Move W26, [X24]
	077 And W8, W25, 0xFFFFFFEF
	078 Move [X24+4], W8
	079 Compare X26, 0
	080 JumpIfEqual {137}
	081 NotImplemented "Instruction LDRH not yet implemented."
	082 Move W27, W31
	083 Move X8, [X19+24]
	084 Compare X8, 0
	085 JumpIfEqual {157}
	086 Move W9, [X8+24]
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Add X8, X8, X22
	089 Move X23, [X8+32]
	090 Move X0, X19
	091 Move W1, W21
	092 Move W2, W22
	093 Call InputActionState.IsActiveControl, X0, X1, X2
	094 Move TEMP, X0
	095 And TEMP, TEMP, 1
	096 Compare TEMP, 1
	097 JumpIfEqual {135}
	098 Move X0, X23
	099 Move X1, X31
	100 Call InputControlExtensions.CheckStateIsAtDefault, X0
	101 Move TEMP, X0
	102 And TEMP, TEMP, 1
	103 Compare TEMP, 1
	104 JumpIfEqual {135}
	105 Compare X23, 0
	106 JumpIfEqual {157}
	107 Move X0, X23
	108 Move X1, X31
	109 Call InputControl.get_magnitude, X0
	110 Move X0, X23
	111 Move X1, X31
	112 Call InputControl.IsValueConsideredPressed, X0, V0
	113 Move TEMP, X0
	114 And TEMP, TEMP, 1
	115 Compare TEMP, 1
	116 JumpIfNotEqual {121}
	117 Move V0, [X24+16]
	118 NotImplemented "Instruction FCMP not yet implemented."
	119 NotImplemented "Instruction FCMP not yet implemented."
	120 Move [X24+16], D8
	121 And W8, W25, 4
	122 And W8, W27, W8
	123 Move TEMP, X8
	124 And TEMP, TEMP, 1
	125 Compare TEMP, 1
	126 JumpIfEqual {134}
	127 Compare X20, 0
	128 JumpIfEqual {157}
	129 Move X0, X20
	130 Move X1, X23
	131 Move X2, X19
	132 Move X3, X31
	133 Call InputManager.SignalStateChangeMonitor, X0, X1, X2
	134 Move W27, 1
	135 Subtract X26, X26, 1
	136 Add X22, X22, 1
	137 NotImplemented "Instruction LDRSW not yet implemented."
	138 Add X21, X21, 1
	139 NotImplemented "Instruction CMP not yet implemented."
	140 Compare X20, 0
	141 JumpIfEqual {157}
	142 Move X0, X20
	143 Move X20, [X31+80]
	144 Move X19, [X31+88]
	145 Move X22, [X31+64]
	146 Move X21, [X31+72]
	147 Move X24, [X31+48]
	148 Move X23, [X31+56]
	149 Move X26, [X31+32]
	150 Move X25, [X31+40]
	151 Move X30, [X31+16]
	152 Move X27, [X31+24]
	153 Move X1, X31
	154 Move V8, [X31+96]
	155 Call InputManager.FireStateChangeNotifications, X0
	156 Return 
	157 Call 0x1C17F20
	158 Call 0x1C17F28

Method: System.Void UnityEngine.InputSystem.LowLevel.IInputStateChangeMonitor.NotifyControlStateChanged(UnityEngine.InputSystem.InputControl control, System.Double time, UnityEngine.InputSystem.LowLevel.InputEventPtr eventPtr, System.Int64 mapControlAndBindingIndex)

Disassembly:
	0x0374EE44 LDR X0, [X0 + 0xC90]
	0x0374EE48 BL 0x1C16CF4
	0x0374EE4C MOVZ W8, 0x1
	0x0374EE50 STRB W8, [X22 + 0xDA2]
	0x0374EE54 LDR X8, [X20 + 0x60]
	0x0374EE58 MOVZ W9, 0x30

ISIL:
	001 Move X8, X3
	002 ShiftRight X8, 24
	003 And X8, X8, 127
	004 Move X4, X2
	005 And W2, W3, 0xFFFFFF
	006 Move X1, X3
	007 ShiftRight X1, 40
	008 And X1, X1, 0x7FFF
	009 Move W3, W8
	010 Call InputActionState.ProcessControlStateChange, X0, X1, X2, X3, V0, X4
	011 Return 

Method: System.Void UnityEngine.InputSystem.LowLevel.IInputStateChangeMonitor.NotifyTimerExpired(UnityEngine.InputSystem.InputControl control, System.Double time, System.Int64 mapControlAndBindingIndex, System.Int32 interactionIndex)

Disassembly:
	0x0374F3FC CMP W1, 0x3
	0x0374F400 MOV X21, X2
	0x0374F404 MOV X19, X0
	0x0374F408 MOV W23, W1
	0x0374F40C CSINC W25, W3, W31, EQ
	0x0374F410 TBZ X9, 0x0, 0x374F420

ISIL:
	001 And W8, W2, 0xFFFFFF
	002 Move W4, W3
	003 Move X3, X2
	004 ShiftRight X3, 24
	005 And X3, X3, 127
	006 Move X1, X2
	007 ShiftRight X1, 40
	008 And X1, X1, 0x7FFF
	009 Move W2, W8

Method: System.Int64 ToCombinedMapAndControlAndBindingIndex(System.Int32 mapIndex, System.Int32 controlIndex, System.Int32 bindingIndex)

Disassembly:
	0x0374EA8C LDR W23, [X0, W22, UXTW]
	0x0374EA90 ADD X13, X13, 0x1
	0x0374EA94 CMP X13, X11
	0x0374EA98 B.NE 0x374E9F0
	0x0374EA9C CMP W12, 0x1
	0x0374EAA0 B.LE 0x374EAB0
	0x0374EAA4 B 0x374EAB8
	0x0374EAA8 MOVN W22, 0x0
	0x0374EAAC MOVN W23, 0x0
	0x0374EAB0 AND W8, W8, 0xFFFFFFF7

ISIL:
	001 Move X8, [X0+168]
	002 Move W9, 1
	003 NotImplemented "Instruction BFM not yet implemented."
	004 Move X10, W2
	005 NotImplemented "Instruction LDRH not yet implemented."
	006 Move X9, W3
	007 Or X10, X10, X1
	008 Or X9, X10, X9
	009 Or X0, X9, X8
	010 Return X0

Method: System.Void SplitUpMapAndControlAndBindingIndex(System.Int64 mapControlAndBindingIndex, out System.Int32 mapIndex, out System.Int32 controlIndex, out System.Int32 bindingIndex)

Disassembly:
	0x0374EE5C SMADDL X8, X21, X9, X8
	0x0374EE60 LDRB W9, [X8]
	0x0374EE64 CMP W9, 0x3
	0x0374EE68 B.EQ 0x374EEB0
	0x0374EE6C CMP W9, 0x2
	0x0374EE70 B.EQ 0x374EEC0
	0x0374EE74 CMP W9, 0x1

ISIL:
	001 And W8, W1, 0xFFFFFF
	002 Move X9, X1
	003 ShiftRight X9, 24
	004 And X9, X9, 127
	005 Move X10, X1
	006 ShiftRight X10, 40
	007 And X10, X10, 0x7FFF
	008 Move [X3], W8
	009 Move [X4], W9
	010 Move [X2], W10
	011 Return 

Method: System.Int32 GetComplexityFromMonitorIndex(System.Int64 mapControlAndBindingIndex)

Disassembly:
	0x0374F610 CSINV W10, W8, W31, NE
	0x0374F614 CMP W9, W10

ISIL:
	001 Move X0, X0
	002 ShiftRight X0, 48
	003 And X0, X0, 0x7FFFFF
	004 Return X0

Method: System.Void ProcessControlStateChange(System.Int32 mapIndex, System.Int32 controlIndex, System.Int32 bindingIndex, System.Double time, UnityEngine.InputSystem.LowLevel.InputEventPtr eventPtr)

Disassembly:
	0x0374EE78 B.NE 0x374F158
	0x0374EE7C LDRB W8, [X19 + 0x1]
	0x0374EE80 TBNZ X8, 0x1, 0x374EEE4
	0x0374EE84 TBNZ X8, 0x5, 0x374F0C4
	0x0374EE88 FMOV S0, W31
	0x0374EE8C MOV X0, X19
	0x0374EE90 BL 0x374F1E4
	0x0374EE94 TBZ X0, 0x0, 0x374F158
	0x0374EE98 MOVZ W1, 0x2
	0x0374EE9C MOVZ W3, 0x1
	0x0374EEA0 MOV X0, X20
	0x0374EEA4 MOV X2, X19
	0x0374EEA8 BL 0x374D4B0
	0x0374EEAC B 0x374EED8
	0x0374EEB0 LDRB W8, [X8 + 0x1]
	0x0374EEB4 TBNZ X8, 0x5, 0x374EEEC
	0x0374EEB8 TBZ X8, 0x1, 0x374F158
	0x0374EEBC B 0x374F16C
	0x0374EEC0 LDRB W8, [X8 + 0x1]
	0x0374EEC4 TBNZ X8, 0x5, 0x374EFD8
	0x0374EEC8 FMOV S0, W31
	0x0374EECC MOV X0, X19
	0x0374EED0 BL 0x374F1E4
	0x0374EED4 TBZ X0, 0x0, 0x374F0B8
	0x0374EED8 MOVZ W1, 0x3
	0x0374EEDC MOVZ W3, 0x2
	0x0374EEE0 B 0x374F174
	0x0374EEE4 MOVZ W1, 0x3
	0x0374EEE8 B 0x374F0BC
	0x0374EEEC LDRH W9, [X19 + 0x4]
	0x0374EEF0 LDR X8, [X20 + 0x18]
	0x0374EEF4 MOVZ W10, 0xFFFF
	0x0374EEF8 CMP W9, W10
	0x0374EEFC CSINV W9, W9, W31, NE
	0x0374EF00 CBZ X8, 0x374F1B8
	0x0374EF04 LDR W10, [X8 + 0x18]
	0x0374EF08 CMP W9, W10
	0x0374EF0C B.CS 0x374F1BC
	0x0374EF10 ADD X8, X8, W9, 0x3, UXTW
	0x0374EF14 ADRP X21, 0x9CD000
	0x0374EF18 LDR V9, [X19 + 0x1C]
	0x0374EF1C LDR X0, [X8 + 0x20]
	0x0374EF20 LDR X21, [X21 + 0xC90]
	0x0374EF24 LDR X8, [X21]
	0x0374EF28 CBZ X0, 0x374EF54
	0x0374EF2C LDR X9, [X0]
	0x0374EF30 LDRB W10, [X8 + 0x130]
	0x0374EF34 LDRB W11, [X9 + 0x130]
	0x0374EF38 CMP W11, W10
	0x0374EF3C B.CC 0x374EF54
	0x0374EF40 LDR X9, [X9 + 0xC8]
	0x0374EF44 ADD X9, X9, X10, 0x3, LSL
	0x0374EF48 LDUR X9, [X9 - 0x8]
	0x0374EF4C CMP X9, X8
	0x0374EF50 B.EQ 0x374F190
	0x0374EF54 LDR X8, [X8 + 0xB8]
	0x0374EF58 LDR V8, [X8]
	0x0374EF5C ADRP X22, 0xC8B000
	0x0374EF60 LDRB W8, [X22 + 0x5AA]
	0x0374EF64 CBNZ W8, 0x374EF7C
	0x0374EF68 ADRP X0, 0x9AC000
	0x0374EF6C LDR X0, [X0 + 0x4B8]
	0x0374EF70 BL 0x1C16CF4
	0x0374EF74 MOVZ W8, 0x1
	0x0374EF78 STRB W8, [X22 + 0x5AA]
	0x0374EF7C ADRP X8, 0x9AC000
	0x0374EF80 LDR X8, [X8 + 0x4B8]
	0x0374EF84 ADRP X9, 0xFFFFFFFFFD39C000
	0x0374EF88 LDR V0, [X9 + 0x240]
	0x0374EF8C FABS S2, S9
	0x0374EF90 LDR X8, [X8]
	0x0374EF94 FMOV S3, 8
	0x0374EF98 FMUL S0, S2, S0
	0x0374EF9C LDR X8, [X8 + 0xB8]
	0x0374EFA0 LDR V1, [X8]
	0x0374EFA4 FMUL S1, S1, S3
	0x0374EFA8 FCMP S0, S1
	0x0374EFAC FCSEL S0, S0, S1, GT
	0x0374EFB0 FCMP S2, S0
	0x0374EFB4 B.MI 0x374F0B8
	0x0374EFB8 LDR X8, [X21]
	0x0374EFBC LDR X8, [X8 + 0xB8]
	0x0374EFC0 LDR V0, [X8 + 0x4]
	0x0374EFC4 FMUL S0, S8, S0
	0x0374EFC8 FCMP S9, S0
	0x0374EFCC B.HI 0x374F158
	0x0374EFD0 MOVZ W1, 0x2
	0x0374EFD4 B 0x374F0BC
	0x0374EFD8 LDRH W9, [X19 + 0x4]
	0x0374EFDC LDR X8, [X20 + 0x18]
	0x0374EFE0 MOVZ W10, 0xFFFF
	0x0374EFE4 CMP W9, W10
	0x0374EFE8 CSINV W9, W9, W31, NE
	0x0374EFEC CBZ X8, 0x374F1B8
	0x0374EFF0 LDR W10, [X8 + 0x18]
	0x0374EFF4 CMP W9, W10
	0x0374EFF8 B.CS 0x374F1BC
	0x0374EFFC ADD X8, X8, W9, 0x3, UXTW
	0x0374F000 LDR X0, [X8 + 0x20]
	0x0374F004 ADRP X8, 0x9CC000
	0x0374F008 LDR V8, [X19 + 0x1C]
	0x0374F00C LDR X8, [X8 + 0xC90]
	0x0374F010 LDR X8, [X8]
	0x0374F014 CBZ X0, 0x374F040
	0x0374F018 LDR X9, [X0]
	0x0374F01C LDRB W10, [X8 + 0x130]
	0x0374F020 LDRB W11, [X9 + 0x130]
	0x0374F024 CMP W11, W10
	0x0374F028 B.CC 0x374F040
	0x0374F02C LDR X9, [X9 + 0xC8]
	0x0374F030 ADD X9, X9, X10, 0x3, LSL
	0x0374F034 LDUR X9, [X9 - 0x8]
	0x0374F038 CMP X9, X8
	0x0374F03C B.EQ 0x374F1A0
	0x0374F040 LDR X8, [X8 + 0xB8]
	0x0374F044 LDR V0, [X8]
	0x0374F048 FCMP S8, S0
	0x0374F04C B.GE 0x374F16C
	0x0374F050 ADRP X21, 0xC8A000
	0x0374F054 LDRB W8, [X21 + 0x5AA]
	0x0374F058 CBNZ W8, 0x374F070
	0x0374F05C ADRP X0, 0x9AB000
	0x0374F060 LDR X0, [X0 + 0x4B8]
	0x0374F064 BL 0x1C16CF4
	0x0374F068 MOVZ W8, 0x1
	0x0374F06C STRB W8, [X21 + 0x5AA]
	0x0374F070 ADRP X8, 0x9AB000
	0x0374F074 LDR X8, [X8 + 0x4B8]
	0x0374F078 ADRP X9, 0xFFFFFFFFFD39B000
	0x0374F07C LDR V0, [X9 + 0x240]
	0x0374F080 FABS S1, S8
	0x0374F084 LDR X8, [X8]
	0x0374F088 FMOV S2, W31
	0x0374F08C FMAXNM S1, S1, S2
	0x0374F090 FMUL S0, S1, S0
	0x0374F094 LDR X8, [X8 + 0xB8]
	0x0374F098 FMOV S1, 8
	0x0374F09C LDR V3, [X8]
	0x0374F0A0 FMUL S1, S3, S1
	0x0374F0A4 FCMP S0, S1
	0x0374F0A8 FCSEL S0, S0, S1, GT
	0x0374F0AC FABD S1, S2, S2
	0x0374F0B0 FCMP S1, S0
	0x0374F0B4 B.PL 0x374F158
	0x0374F0B8 MOVZ W1, 0x4
	0x0374F0BC MOVZ W3, 0x1
	0x0374F0C0 B 0x374F174
	0x0374F0C4 LDR V8, [X19 + 0x1C]
	0x0374F0C8 FCMP S8, 0x0
	0x0374F0CC B.LE 0x374F0E4
	0x0374F0D0 MOVZ W1, 0x2
	0x0374F0D4 MOVZ W3, 0x1
	0x0374F0D8 MOV X0, X20
	0x0374F0DC MOV X2, X19
	0x0374F0E0 BL 0x374D4B0
	0x0374F0E4 LDRH W9, [X19 + 0x4]
	0x0374F0E8 LDR X8, [X20 + 0x18]
	0x0374F0EC MOVZ W10, 0xFFFF
	0x0374F0F0 CMP W9, W10
	0x0374F0F4 CSINV W9, W9, W31, NE
	0x0374F0F8 CBZ X8, 0x374F1B8
	0x0374F0FC LDR W10, [X8 + 0x18]
	0x0374F100 CMP W9, W10
	0x0374F104 B.CS 0x374F1BC
	0x0374F108 ADD X8, X8, W9, 0x3, UXTW
	0x0374F10C LDR X0, [X8 + 0x20]
	0x0374F110 ADRP X8, 0x9CC000
	0x0374F114 LDR X8, [X8 + 0xC90]
	0x0374F118 LDR X8, [X8]
	0x0374F11C CBZ X0, 0x374F148
	0x0374F120 LDR X9, [X0]
	0x0374F124 LDRB W10, [X8 + 0x130]
	0x0374F128 LDRB W11, [X9 + 0x130]
	0x0374F12C CMP W11, W10
	0x0374F130 B.CC 0x374F148
	0x0374F134 LDR X9, [X9 + 0xC8]
	0x0374F138 ADD X9, X9, X10, 0x3, LSL
	0x0374F13C LDUR X9, [X9 - 0x8]
	0x0374F140 CMP X9, X8
	0x0374F144 B.EQ 0x374F1AC
	0x0374F148 LDR X8, [X8 + 0xB8]
	0x0374F14C LDR V0, [X8]
	0x0374F150 FCMP S8, S0
	0x0374F154 B.GE 0x374F16C
	0x0374F158 LDP X20, X19, [X31 + 0x30]
	0x0374F15C LDP X22, X21, [X31 + 0x20]
	0x0374F160 LDR X30, [X31 + 0x10]
	0x0374F164 LDP D9, D8, [X31], #0x40
	0x0374F168 RET
	0x0374F16C MOVZ W1, 0x3
	0x0374F170 MOVZ W3, 0x3
	0x0374F174 MOV X0, X20
	0x0374F178 MOV X2, X19
	0x0374F17C LDP X20, X19, [X31 + 0x30]
	0x0374F180 LDP X22, X21, [X31 + 0x20]
	0x0374F184 LDR X30, [X31 + 0x10]
	0x0374F188 LDP D9, D8, [X31], #0x40
	0x0374F18C B 0x374D4B0
	0x0374F190 MOV X1, X31
	0x0374F194 BL 0x3758994
	0x0374F198 MOV V8.16B, V0.16B
	0x0374F19C B 0x374EF5C
	0x0374F1A0 MOV X1, X31
	0x0374F1A4 BL 0x3758994
	0x0374F1A8 B 0x374F048
	0x0374F1AC MOV X1, X31
	0x0374F1B0 BL 0x3758994
	0x0374F1B4 B 0x374F150
	0x0374F1B8 BL 0x1C16F20
	0x0374F1BC BL 0x1C16F28
	0x0374F1C0 LDRB W8, [X0 + 0x1]
	0x0374F1C4 UBFM W0, W8, 0x6, 0x6
	0x0374F1C8 RET
	0x0374F1CC LDRB W8, [X0 + 0x1]
	0x0374F1D0 UBFM W0, W8, 0x2, 0x2
	0x0374F1D4 RET
	0x0374F1D8 LDRB W8, [X0 + 0x1]
	0x0374F1DC UBFM W0, W8, 0x3, 0x3
	0x0374F1E0 RET
	0x0374F1E4 STP D9, D8, [X31 - 0x20]!
	0x0374F1E8 STP X30, X19, [X31 + 0x10]
	0x0374F1EC LDR V9, [X0 + 0x1C]
	0x0374F1F0 FCMP S9, 0x0
	0x0374F1F4 B.MI 0x374F270
	0x0374F1F8 ADRP X19, 0xC8A000
	0x0374F1FC LDRB W8, [X19 + 0x5AA]
	0x0374F200 MOV V8.16B, V0.16B
	0x0374F204 CBNZ W8, 0x374F21C
	0x0374F208 ADRP X0, 0x9AB000
	0x0374F20C LDR X0, [X0 + 0x4B8]
	0x0374F210 BL 0x1C16CF4
	0x0374F214 MOVZ W8, 0x1
	0x0374F218 STRB W8, [X19 + 0x5AA]
	0x0374F21C ADRP X8, 0x9AB000
	0x0374F220 LDR X8, [X8 + 0x4B8]
	0x0374F224 ADRP X9, 0xFFFFFFFFFD39B000
	0x0374F228 LDR V0, [X9 + 0x240]
	0x0374F22C FABS S1, S8
	0x0374F230 LDR X8, [X8]
	0x0374F234 FMOV S2, W31
	0x0374F238 FMAXNM S1, S1, S2
	0x0374F23C FMUL S0, S1, S0
	0x0374F240 LDR X8, [X8 + 0xB8]
	0x0374F244 FMOV S1, 8
	0x0374F248 LDR V3, [X8]
	0x0374F24C FMUL S1, S3, S1
	0x0374F250 FCMP S0, S1
	0x0374F254 FCSEL S0, S0, S1, GT
	0x0374F258 FABD S1, S2, S2
	0x0374F25C FCMP S1, S0
	0x0374F260 B.PL 0x374F278
	0x0374F264 FCMP S9, 0x0
	0x0374F268 CSET W0, GT
	0x0374F26C B 0x374F280
	0x0374F270 MOVZ W0, 0x1
	0x0374F274 B 0x374F280
	0x0374F278 FCMP S9, S8
	0x0374F27C CSET W0, GE
	0x0374F280 LDP X30, X19, [X31 + 0x10]
	0x0374F284 LDP D9, D8, [X31], #0x20
	0x0374F288 RET
	0x0374F28C LDRB W8, [X0 + 0x3]
	0x0374F290 BFM W8, W1, 0x0, 0x0
	0x0374F294 STRB W8, [X0 + 0x3]
	0x0374F298 RET
	0x0374F29C LDRH W8, [X1 + 0x1A]
	0x0374F2A0 LDR X9, [X0 + 0x70]
	0x0374F2A4 MOVZ W10, 0xFFFF
	0x0374F2A8 MOVN X11, 0x2F
	0x0374F2AC ADD X12, X8, X8, 0x1, LSL
	0x0374F2B0 CMP W8, W10
	0x0374F2B4 UBFM X8, X12, 0x3C, 0x3B
	0x0374F2B8 CSEL X8, X11, X8, EQ
	0x0374F2BC ADD X8, X8, X9
	0x0374F2C0 STR W31, [X8 + 0x20]
	0x0374F2C4 STR S0, [X8 + 0x24]
	0x0374F2C8 RET
	0x0374F2CC STR X30, [X31 - 0x30]!
	0x0374F2D0 STP X22, X21, [X31 + 0x10]
	0x0374F2D4 STP X20, X19, [X31 + 0x20]
	0x0374F2D8 ADRP X22, 0xC91000
	0x0374F2DC ADRP X21, 0x9CC000
	0x0374F2E0 LDRB W8, [X22 + 0xDA6]
	0x0374F2E4 LDR X21, [X21 + 0x270]
	0x0374F2E8 MOV W19, W1
	0x0374F2EC MOV X20, X0
	0x0374F2F0 TBNZ X8, 0x0, 0x374F308
	0x0374F2F4 ADRP X0, 0x9CC000
	0x0374F2F8 LDR X0, [X0 + 0x270]
	0x0374F2FC BL 0x1C16CF4
	0x0374F300 MOVZ W8, 0x1
	0x0374F304 STRB W8, [X22 + 0xDA6]
	0x0374F308 LDR X0, [X21]
	0x0374F30C LDR X22, [X20 + 0x70]
	0x0374F310 LDR W8, [X0 + 0xE0]
	0x0374F314 CBNZ W8, 0x374F320
	0x0374F318 BL 0x1C16DFC
	0x0374F31C LDR X0, [X21]
	0x0374F320 LDR X8, [X0 + 0xB8]
	0x0374F324 LDR X0, [X8]
	0x0374F328 CBZ X0, 0x374F38C
	0x0374F32C MOVZ W8, 0x30
	0x0374F330 SMADDL X21, X19, X8, X22
	0x0374F334 LDR X2, [X21 + 0x28]
	0x0374F338 MOV X1, X20
	0x0374F33C MOV W3, W19
	0x0374F340 MOV X4, X31
	0x0374F344 BL 0x37CC790
	0x0374F348 LDR V0, [X21 + 0x4]
	0x0374F34C LDP S1, S2, [X21 + 0x20]
	0x0374F350 LDRB W8, [X21 + 0x3]
	0x0374F354 FMOV S3, W31
	0x0374F358 STR W31, [X21 + 0x4]
	0x0374F35C FADD S1, S1, S0
	0x0374F360 FSUB S0, S2, S0
	0x0374F364 AND W8, W8, 0xFE
	0x0374F368 FMAXNM S0, S0, S3
	0x0374F36C STR X31, [X21 + 0x10]
	0x0374F370 STRB W8, [X21 + 0x3]
	0x0374F374 STP S1, S0, [X21 + 0x20]
	0x0374F378 STR X31, [X21 + 0x28]
	0x0374F37C LDP X20, X19, [X31 + 0x20]
	0x0374F380 LDP X22, X21, [X31 + 0x10]
	0x0374F384 LDR X30, [X31], #0x30
	0x0374F388 RET
	0x0374F38C BL 0x1C16F20
	0x0374F390 SUB X31, X31, 0xD0
	0x0374F394 STR D8, [X31 + 0x70]
	0x0374F398 STR X30, [X31 + 0x78]
	0x0374F39C STP X28, X27, [X31 + 0x80]
	0x0374F3A0 STP X26, X25, [X31 + 0x90]
	0x0374F3A4 STP X24, X23, [X31 + 0xA0]
	0x0374F3A8 STP X22, X21, [X31 + 0xB0]
	0x0374F3AC STP X20, X19, [X31 + 0xC0]
	0x0374F3B0 MRS X26, 0xC000
	0x0374F3B4 LDR X8, [X26 + 0x28]
	0x0374F3B8 MOVI V0.2D, 0x0
	0x0374F3BC MOVZ W27, 0xFFFF
	0x0374F3C0 MOV W24, W4
	0x0374F3C4 STR X8, [X31 + 0x68]
	0x0374F3C8 STP V0, V0, [X31 + 0x40]
	0x0374F3CC STP V0, V0, [X31 + 0x20]
	0x0374F3D0 STP V0, V0, [X31]
	0x0374F3D4 LDRH W8, [X2 + 0x1A]
	0x0374F3D8 LDR X9, [X0 + 0x70]
	0x0374F3DC LDRH W28, [X2 + 0x18]
	0x0374F3E0 MOV W20, W3
	0x0374F3E4 CMP W8, W27
	0x0374F3E8 CSINV W8, W8, W31, NE
	0x0374F3EC ADD W10, W8, W8, 0x1, LSL
	0x0374F3F0 UBFM W10, W10, 0x1C, 0x1B
	0x0374F3F4 ADD X22, X9, W10, SXTW
	0x0374F3F8 LDRB W9, [X22 + 0x3]

ISIL:
	001 Subtract X31, X31, 240
	002 Move [X31+128], D8
	003 Move [X31+144], X29
	004 Move [X31+152], X30
	005 Move [X31+160], X28
	006 Move [X31+168], X27
	007 Move [X31+176], X26
	008 Move [X31+184], X25
	009 Move [X31+192], X24
	010 Move [X31+200], X23
	011 Move [X31+208], X22
	012 Move [X31+216], X21
	013 Move [X31+224], X20
	014 Move [X31+232], X19
	015 NotImplemented "Instruction MRS not yet implemented."
	016 Move X8, [X26+40]
	017 Move X19, 0xC93000
	018 Move X22, X4
	019 Move V8, V0
	020 Move [X31+120], X8
	021 Move W8, [X19+3488]
	022 Move W24, W3
	023 Move W23, W2
	024 Move W25, W1
	025 Move X20, X0
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {35}
	030 Move X0, 0x9A6000
	031 Move X0, [X0+3584]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X19+3488], W8
	035 Move X27, 0x9A6000
	036 Move X27, [X27+3584]
	037 NotImplemented "Instruction MOVI not yet implemented."
	038 Move X0, X31
	039 Move [X31+80], V0
	040 Move [X31+88], V0
	041 Move [X31+48], V0
	042 Move [X31+56], V0
	043 Move [X31+16], V0
	044 Move [X31+24], V0
	045 Move [X31], X31
	046 Move [X31+8], X31
	047 Call InputActionRebindingExtensions.DeferBindingResolution
	048 Move X9, [X20+104]
	049 Move W8, 1
	050 Move X10, W24
	051 Move [X20+200], X22
	052 Move [X20+194], W8
	053 Add X28, X9, X10
	054 NotImplemented "Instruction LDRH not yet implemented."
	055 Move W8, 0xFFFF
	056 Move X19, X0
	057 NotImplemented "Instruction MOVI not yet implemented."
	058 NotImplemented "Instruction CMP not yet implemented."
	059 NotImplemented "Instruction CSINV not yet implemented."
	060 Move [X31+32], V0
	061 Move [X31+40], V0
	062 Move [X31+1], V0
	063 Add X0, X31, 16
	064 Move W1, W25
	065 Call TriggerState.set_mapIndex, X0, X1
	066 Add X0, X31, 16
	067 Move W1, W23
	068 Call TriggerState.set_controlIndex, X0, X1
	069 Add X0, X31, 16
	070 Move W1, W24
	071 Add X25, X31, 16
	072 Call TriggerState.set_bindingIndex, X0, X1
	073 Move W8, 0xFFFF
	074 NotImplemented "Instruction CMP not yet implemented."
	075 NotImplemented "Instruction STRH not yet implemented."
	076 NotImplemented "Instruction CSEL not yet implemented."
	077 NotImplemented "Instruction CSEL not yet implemented."
	078 Move [X31+24], D8
	079 Move [X31+32], D8
	080 Move X9, [X20+96]
	081 Add W10, W21, W21
	082 Move W10, W10
	083 ShiftRight W10, 28
	084 And W10, W10, 0x7FFFFFF
	085 Add X10, X9, W10
	086 Move W11, [X10+1]
	087 Move W9, [X8+1]
	088 Move W11, W11
	089 ShiftRight W11, 1
	090 And W11, W11, 0x7FFFFFFF
	091 NotImplemented "Instruction BFM not yet implemented."
	092 Move [X8+1], W9
	093 Move W8, [X10+1]
	094 And W8, W8, 32
	095 Move W9, [X10+1]
	096 Move W8, W31
	097 And W9, W9, 0xFFFFFFFD
	098 Move [X10+1], W9
	099 And W9, W9, 0xFFFFFFDF
	100 Or W8, W9, W8
	101 Move [X31+17], W8
	102 Move V1, [X31+32]
	103 Move V0, [X31+48]
	104 Move V2, [X31+1]
	105 Move [X31+80], V1
	106 Move [X31+88], V0
	107 Move [X31+4], V2
	108 Move W8, [X20+192]
	109 Compare W8, 0
	110 JumpIfEqual {114}
	111 Move W8, [X28+4]
	112 And W8, W8, 0xFFFFFFEF
	113 Move [X28+4], W8
	114 Move X8, [X20+24]
	115 Compare X8, 0
	116 JumpIfEqual {312}
	117 Move W9, [X8+24]
	118 NotImplemented "Instruction CMP not yet implemented."
	119 Move X24, W23
	120 Add X8, X8, X24
	121 Move X23, [X8+32]
	122 Move X0, X23
	123 Move X1, X31
	124 Call InputControlExtensions.CheckStateIsAtDefault, X0
	125 Move S0, W31
	126 Move TEMP, X0
	127 And TEMP, TEMP, 1
	128 Compare TEMP, 1
	129 JumpIfEqual {135}
	130 Compare X23, 0
	131 JumpIfEqual {315}
	132 Move X0, X23
	133 Move X1, X31
	134 Call InputControl.get_magnitude, X0
	135 Move W8, [X31+65]
	136 Move [X31+92], S0
	137 Or W8, W8, 1
	138 Move [X31+65], W8
	139 Move X8, [X20+120]
	140 Move [X8], S0
	141 Compare X23, 0
	142 JumpIfEqual {314}
	143 Move V0, [X31+92]
	144 Move X0, X23
	145 Move X1, X31
	146 Call InputControl.IsValueConsideredPressed, X0, V0
	147 Move TEMP, X0
	148 And TEMP, TEMP, 1
	149 Compare TEMP, 1
	150 JumpIfNotEqual {156}
	151 Move V1, [X28+16]
	152 Move V0, [X31+72]
	153 NotImplemented "Instruction FCMP not yet implemented."
	154 NotImplemented "Instruction FCMP not yet implemented."
	155 Move [X28+16], D0
	156 Move W8, [X28+4]
	157 Move TEMP, X8
	158 And TEMP, TEMP, 8
	159 Compare TEMP, 8
	160 JumpIfNotEqual {222}
	161 NotImplemented "Instruction LDRH not yet implemented."
	162 Move X24, [X20+104]
	163 Move W9, 0xFFFF
	164 NotImplemented "Instruction CMP not yet implemented."
	165 NotImplemented "Instruction CSINV not yet implemented."
	166 Move X0, X22
	167 Move X1, X31
	168 Call InputEventPtr.op_Implicit, X0
	169 Move X8, W23
	170 Add X22, X24, X8
	171 Compare X0, 0
	172 JumpIfEqual {180}
	173 Move X1, X31
	174 Call InputEvent.get_eventId, X0
	175 Compare W0, 0
	176 JumpIfEqual {179}
	177 Move W8, [X22+24]
	178 NotImplemented "Instruction CMP not yet implemented."
	179 Move [X22+24], W0
	180 Move X8, [X20+104]
	181 NotImplemented "Instruction SBFM not yet implemented."
	182 Move W10, 0xFFFF
	183 Add X8, X9, X8
	184 NotImplemented "Instruction LDRH not yet implemented."
	185 Move [X31], X20
	186 Move [X31+8], W23
	187 Move [X31+12], W31
	188 Move X8, [X20+48]
	189 NotImplemented "Instruction CMP not yet implemented."
	190 NotImplemented "Instruction CSINV not yet implemented."
	191 Compare X8, 0
	192 JumpIfEqual {316}
	193 Move W10, [X8+24]
	194 NotImplemented "Instruction CMP not yet implemented."
	195 Move X23, W9
	196 Add X8, X8, X23
	197 Move X0, [X8+32]
	198 Compare X0, 0
	199 JumpIfEqual {318}
	200 Move X8, [X0]
	201 Move X9, [X8+440]
	202 Move X2, [X8+448]
	203 Add X1, X31, 0
	204 NotImplemented "Instruction BLR not yet implemented."
	205 Move W8, [X31+65]
	206 Move [X31+92], S0
	207 Or W8, W8, 1
	208 Move [X31+65], W8
	209 Move X8, [X20+128]
	210 Move [X8], S0
	211 Move W3, [X22+1]
	212 Compare W3, 0
	213 JumpIfEqual {222}
	214 NotImplemented "Instruction LDRH not yet implemented."
	215 Move W9, 0xFFFF
	216 NotImplemented "Instruction CMP not yet implemented."
	217 NotImplemented "Instruction CSINV not yet implemented."
	218 Add X1, X31, 64
	219 Move X0, X20
	220 Call InputActionState.ProcessInteractions, X0, X1, X2, X3
	221 Move W24, 1
	222 Move W24, W31
	223 Add X1, X31, 64
	224 Move X0, X20
	225 Move W2, W21
	226 Call InputActionState.IsConflictingInput, X0, X1, X2
	227 Move X8, [X20+104]
	228 NotImplemented "Instruction LDRH not yet implemented."
	229 Move W22, W0
	230 Add X23, X8, X9
	231 Move TEMP, X0
	232 And TEMP, TEMP, 1
	233 Compare TEMP, 1
	234 JumpIfEqual {240}
	235 Add X1, X31, 64
	236 Move X0, X20
	237 Move W2, W21
	238 Move X3, X23
	239 Call InputActionState.ProcessButtonState, X0, X1, X2, X3
	240 Move W3, [X23+1]
	241 Compare W3, 0
	242 JumpIfEqual {255}
	243 Move W8, [X23+4]
	244 Move TEMP, X8
	245 And TEMP, TEMP, 8
	246 Compare TEMP, 8
	247 JumpIfEqual {255}
	248 NotImplemented "Instruction LDRH not yet implemented."
	249 Move W9, 0xFFFF
	250 NotImplemented "Instruction CMP not yet implemented."
	251 NotImplemented "Instruction CSINV not yet implemented."
	252 Add X1, X31, 64
	253 Move X0, X20
	254 Call InputActionState.ProcessInteractions, X0, X1, X2, X3
	255 Or W8, W24, W22
	256 Move TEMP, X8
	257 And TEMP, TEMP, 1
	258 Compare TEMP, 1
	259 JumpIfEqual {264}
	260 Add X1, X31, 64
	261 Move X0, X20
	262 Move W2, W21
	263 Call InputActionState.ProcessDefaultInteraction, X0, X1, X2
	264 Move X22, X31
	265 Move [X20+194], W31
	266 Move [X20+200], X31
	267 Compare X19, 0
	268 JumpIfEqual {290}
	269 Move X8, [X19]
	270 Move X1, [X27]
	271 NotImplemented "Instruction LDRH not yet implemented."
	272 Compare X9, 0
	273 JumpIfEqual {280}
	274 Move X10, [X8+176]
	275 Add X10, X10, 8
	276 NotImplemented "Instruction LDUR not yet implemented."
	277 NotImplemented "Instruction CMP not yet implemented."
	278 Subtract X9, X9, 1
	279 Add X10, X10, 16
	280 Move X0, X19
	281 Move W2, W31
	282 Call 0x1C5D788
	283 NotImplemented "Instruction LDRSW not yet implemented."
	284 Add X8, X8, X9
	285 Add X0, X8, 312
	286 Move X8, [X0]
	287 Move X1, [X0+8]
	288 Move X0, X19
	289 NotImplemented "Instruction BLR not yet implemented."
	290 Compare X22, 0
	291 JumpIfNotEqual {310}
	292 Move X8, [X26+40]
	293 Move X9, [X31+120]
	294 NotImplemented "Instruction CMP not yet implemented."
	295 Move X20, [X31+224]
	296 Move X19, [X31+232]
	297 Move X22, [X31+208]
	298 Move X21, [X31+216]
	299 Move X24, [X31+192]
	300 Move X23, [X31+200]
	301 Move X26, [X31+176]
	302 Move X25, [X31+184]
	303 Move X28, [X31+160]
	304 Move X27, [X31+168]
	305 Move X29, [X31+144]
	306 Move X30, [X31+152]
	307 Move V8, [X31+128]
	308 Add X31, X31, 240
	309 Return 
	310 Move X0, X22
	311 Call 0x1C17F18
	312 Call 0x1C17F20
	313 Call 0x1C17F28
	314 Call 0x1C17F20
	315 Call 0x1C17F20
	316 Call 0x1C17F20
	317 Call 0x1C17F28
	318 Call 0x1C17F20
	319 Call 0x3EB2B20
	320 Move X21, X0
	321 NotImplemented "Instruction CMP not yet implemented."
	322 Move X0, X21
	323 Call 0x3EB2AD0
	324 Move X23, [X0]
	325 Call 0x3EB2AE0
	326 Move X22, X31
	327 Move [X20+194], W31
	328 Move [X20+200], X31
	329 Compare X23, 0
	330 JumpIfEqual {267}
	331 Move X0, X23
	332 Call 0x1C17F18
	333 Move [X20+194], W31
	334 Move [X20+200], X31
	335 Move W8, 1
	336 NotImplemented "Instruction CMP not yet implemented."
	337 Move X0, X21
	338 Call 0x3EB2AD0
	339 Move X22, [X0]
	340 Call 0x3EB2AE0
	341 Move X22, X31
	342 Move [X20+194], W31
	343 Move [X20+200], X31
	344 Compare X23, 0
	345 JumpIfNotEqual {347}
	346 Move X21, X0
	347 Move X0, X23
	348 Call 0x1C17F18
	349 Move X21, X0
	350 Compare X19, 0
	351 JumpIfEqual {373}
	352 Move X8, [X19]
	353 Move X1, [X27]
	354 NotImplemented "Instruction LDRH not yet implemented."
	355 Compare X9, 0
	356 JumpIfEqual {363}
	357 Move X10, [X8+176]
	358 Add X10, X10, 8
	359 NotImplemented "Instruction LDUR not yet implemented."
	360 NotImplemented "Instruction CMP not yet implemented."
	361 Subtract X9, X9, 1
	362 Add X10, X10, 16
	363 Move X0, X19
	364 Move W2, W31
	365 Call 0x1C5D788
	366 NotImplemented "Instruction LDRSW not yet implemented."
	367 Add X8, X8, X9
	368 Add X0, X8, 312
	369 Move X8, [X0]
	370 Move X1, [X0+8]
	371 Move X0, X19
	372 NotImplemented "Instruction BLR not yet implemented."
	373 Compare X22, 0
	374 JumpIfNotEqual {377}
	375 Move X0, X21
	376 Call 0x1D2D690
	377 Move X0, X22
	378 Call 0x1C17F18
	379 Call 0x1991590

Method: System.Void ProcessButtonState(ref UnityEngine.InputSystem.InputActionState/TriggerState trigger, System.Int32 actionIndex, UnityEngine.InputSystem.InputActionState/BindingState* bindingStatePtr)

Disassembly:
	0x0374FC60 CSINV W8, W8, W31, NE
	0x0374FC64 B.EQ 0x374FCC4
	0x0374FC68 LDR X9, [X0 + 0xB8]
	0x0374FC6C LDRB W10, [X1 + 0x2]
	0x0374FC70 MOVZ W11, 0x30
	0x0374FC74 MADD X9, X10, X11, X9
	0x0374FC78 CBZ X9, 0x374FCD0
	0x0374FC7C LDR X11, [X0 + 0x10]
	0x0374FC80 CBZ X11, 0x374FCD0
	0x0374FC84 LDR W12, [X11 + 0x18]
	0x0374FC88 CMP W10, W12
	0x0374FC8C B.CS 0x374FCD4
	0x0374FC90 ADD X10, X11, X10, 0x3, LSL
	0x0374FC94 LDR X10, [X10 + 0x20]
	0x0374FC98 CBZ X10, 0x374FCD0
	0x0374FC9C LDR X10, [X10 + 0x28]
	0x0374FCA0 CBZ X10, 0x374FCD0
	0x0374FCA4 LDR W9, [X9]
	0x0374FCA8 LDR W11, [X10 + 0x18]
	0x0374FCAC SUB W8, W8, W9
	0x0374FCB0 CMP W8, W11
	0x0374FCB4 B.CS 0x374FCD4
	0x0374FCB8 ADD X8, X10, W8, 0x3, SXTW
	0x0374FCBC LDR X0, [X8 + 0x20]
	0x0374FCC0 B 0x374FCC8
	0x0374FCC4 MOV X0, X31
	0x0374FCC8 LDR X30, [X31], #0x10
	0x0374FCCC RET
	0x0374FCD0 BL 0x1C16F20
	0x0374FCD4 BL 0x1C16F28
	0x0374FCD8 STR X30, [X31 - 0x10]!
	0x0374FCDC LDR X8, [X0 + 0x68]
	0x0374FCE0 SXTW X9, W1
	0x0374FCE4 MOVZ W10, 0xFFFF
	0x0374FCE8 ADD X9, X8, X9, 0x5, LSL
	0x0374FCEC LDRH W8, [X9 + 0x6]
	0x0374FCF0 CMP W8, W10
	0x0374FCF4 CSINV W8, W8, W31, NE
	0x0374FCF8 B.EQ 0x374FD58
	0x0374FCFC LDRB W10, [X9 + 0x3]
	0x0374FD00 LDR X9, [X0 + 0xB8]
	0x0374FD04 MOVZ W11, 0x30
	0x0374FD08 MADD X9, X10, X11, X9
	0x0374FD0C CBZ X9, 0x374FD64
	0x0374FD10 LDR X11, [X0 + 0x10]
	0x0374FD14 CBZ X11, 0x374FD64
	0x0374FD18 LDR W12, [X11 + 0x18]
	0x0374FD1C CMP W10, W12
	0x0374FD20 B.CS 0x374FD68
	0x0374FD24 ADD X10, X11, X10, 0x3, LSL
	0x0374FD28 LDR X10, [X10 + 0x20]
	0x0374FD2C CBZ X10, 0x374FD64
	0x0374FD30 LDR X10, [X10 + 0x28]
	0x0374FD34 CBZ X10, 0x374FD64
	0x0374FD38 LDR W9, [X9]
	0x0374FD3C LDR W11, [X10 + 0x18]
	0x0374FD40 SUB W8, W8, W9
	0x0374FD44 CMP W8, W11
	0x0374FD48 B.CS 0x374FD68
	0x0374FD4C ADD X8, X10, W8, 0x3, SXTW
	0x0374FD50 LDR X0, [X8 + 0x20]
	0x0374FD54 B 0x374FD5C
	0x0374FD58 MOV X0, X31
	0x0374FD5C LDR X30, [X31], #0x10
	0x0374FD60 RET
	0x0374FD64 BL 0x1C16F20
	0x0374FD68 BL 0x1C16F28
	0x0374FD6C STR X30, [X31 - 0x10]!
	0x0374FD70 LDRH W9, [X1 + 0x4]
	0x0374FD74 LDR X8, [X0 + 0x18]
	0x0374FD78 MOVZ W10, 0xFFFF
	0x0374FD7C CMP W9, W10
	0x0374FD80 CSINV W9, W9, W31, NE
	0x0374FD84 CBZ X8, 0x374FDA4
	0x0374FD88 LDR W10, [X8 + 0x18]
	0x0374FD8C CMP W9, W10
	0x0374FD90 B.CS 0x374FDA8
	0x0374FD94 ADD X8, X8, W9, 0x3, UXTW
	0x0374FD98 LDR X0, [X8 + 0x20]
	0x0374FD9C LDR X30, [X31], #0x10
	0x0374FDA0 RET
	0x0374FDA4 BL 0x1C16F20
	0x0374FDA8 BL 0x1C16F28
	0x0374FDAC STR X30, [X31 - 0x10]!
	0x0374FDB0 LDRH W8, [X1 + 0x1A]
	0x0374FDB4 MOVZ W9, 0xFFFF
	0x0374FDB8 CMP W8, W9
	0x0374FDBC B.EQ 0x374FDE0
	0x0374FDC0 LDR X9, [X0 + 0x20]
	0x0374FDC4 CBZ X9, 0x374FDEC
	0x0374FDC8 LDR W10, [X9 + 0x18]
	0x0374FDCC CMP W8, W10
	0x0374FDD0 B.CS 0x374FDF0
	0x0374FDD4 ADD X8, X9, W8, 0x3, UXTW
	0x0374FDD8 LDR X0, [X8 + 0x20]
	0x0374FDDC B 0x374FDE4
	0x0374FDE0 MOV X0, X31
	0x0374FDE4 LDR X30, [X31], #0x10
	0x0374FDE8 RET
	0x0374FDEC BL 0x1C16F20
	0x0374FDF0 BL 0x1C16F28
	0x0374FDF4 STR X30, [X31 - 0x10]!
	0x0374FDF8 LDR X8, [X0 + 0x68]
	0x0374FDFC SXTW X9, W1
	0x0374FE00 MOVZ W10, 0x30
	0x0374FE04 ADD X8, X8, X9, 0x5, LSL
	0x0374FE08 LDRB W8, [X8 + 0x3]
	0x0374FE0C LDR X9, [X0 + 0xB8]
	0x0374FE10 NOP
	0x0374FE14 MADD X8, X8, X10, X9

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0xC92000
	009 Move W8, [X23+3489]
	010 Move X21, X3
	011 Move W19, W2
	012 Move X20, X1
	013 Move X22, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x9CD000
	019 Move X0, [X0+3216]
	020 Call 0x1C17CF4
	021 Move X0, 0x9F6000
	022 Move X0, [X0+3984]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X23+3489], W8
	026 NotImplemented "Instruction LDRH not yet implemented."
	027 Move X8, [X22+24]
	028 Move W10, 0xFFFF
	029 NotImplemented "Instruction CMP not yet implemented."
	030 NotImplemented "Instruction CSINV not yet implemented."
	031 Compare X8, 0
	032 JumpIfEqual {122}
	033 Move W10, [X8+24]
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Add X8, X8, W9
	036 Move X23, [X8+32]
	037 Compare X23, 0
	038 JumpIfEqual {122}
	039 Move X24, 0x9CD000
	040 Move X24, [X24+3216]
	041 Move X0, X23
	042 Move X1, X31
	043 Call InputControl.get_isButton, X0
	044 Move X1, [X24]
	045 Move TEMP, X0
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfNotEqual {62}
	049 Move X8, [X23]
	050 Move W9, [X1+304]
	051 Move W10, [X8+304]
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move X8, [X8+200]
	054 Add X8, X8, X9
	055 NotImplemented "Instruction LDUR not yet implemented."
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move X0, X23
	058 Move X1, X31
	059 Call ButtonControl.get_pressPointOrDefault, X0
	060 Move X1, [X24]
	061 Move X8, [X1+184]
	062 Move X8, [X1+184]
	063 Move V0, [X8]
	064 NotImplemented "Instruction LDRH not yet implemented."
	065 Move X10, [X22+120]
	066 Move W11, 0xFFFF
	067 Move TEMP, 3
	068 Not TEMP
	069 Move X12, TEMP
	070 Move X13, X9
	071 ShiftRight X13, 62
	072 And X13, X13, 0x1FFFFFFF
	073 NotImplemented "Instruction CMP not yet implemented."
	074 NotImplemented "Instruction CSEL not yet implemented."
	075 Move V1, [X8+4]
	076 Move V2, [X9]
	077 Multiply S1, S0, S1
	078 NotImplemented "Instruction FCMP not yet implemented."
	079 Move [X21+16], X31
	080 Move X8, [X22+96]
	081 Move W9, 48
	082 Move V1, [X20+28]
	083 NotImplemented "Instruction NOP not yet implemented."
	084 NotImplemented "Instruction SMADDL not yet implemented."
	085 Move W9, [X8+1]
	086 NotImplemented "Instruction FCMP not yet implemented."
	087 Move TEMP, X9
	088 And TEMP, TEMP, 64
	089 Compare TEMP, 64
	090 JumpIfEqual {99}
	091 Move X10, 0x9F6000
	092 Move X10, [X10+3984]
	093 Or W9, W9, 64
	094 Move X10, [X10]
	095 Move X10, [X10+184]
	096 Move W10, [X10]
	097 Move [X8+40], W10
	098 Move [X8+1], W9
	099 Move TEMP, X9
	100 And TEMP, TEMP, 64
	101 Compare TEMP, 64
	102 JumpIfNotEqual {107}
	103 Move X10, [X1+184]
	104 Move V2, [X10+4]
	105 Multiply S0, S0, S2
	106 NotImplemented "Instruction FCMP not yet implemented."
	107 Move X20, [X31+48]
	108 Move X19, [X31+56]
	109 Move X22, [X31+32]
	110 Move X21, [X31+40]
	111 Move X24, [X31+16]
	112 Move X23, [X31+24]
	113 Move X30, [X31+64]
	114 Return 
	115 Move X10, 0x9F6000
	116 Move X10, [X10+3984]
	117 And W9, W9, 0xFFFFFFBF
	118 Move X10, [X10]
	119 Move X10, [X10+184]
	120 Move W10, [X10]
	121 Move [X8+44], W10
	122 Call 0x1C17F20
	123 Call 0x1C17F28
	124 Move X0, X23
	125 Call 0x1C181E0

Method: System.Boolean ShouldIgnoreInputOnCompositeBinding(UnityEngine.InputSystem.InputActionState/BindingState* binding, UnityEngine.InputSystem.LowLevel.InputEvent* eventPtr)

Disassembly:
	0x0374F664 LDP X24, X23, [X31 + 0xA0]
	0x0374F668 LDP X26, X25, [X31 + 0x90]
	0x0374F66C LDP X28, X27, [X31 + 0x80]
	0x0374F670 LDR X30, [X31 + 0x78]
	0x0374F674 LDR V8, [X31 + 0x70]
	0x0374F678 ADD X31, X31, 0xD0
	0x0374F67C RET
	0x0374F680 ADD X8, X10, X25
	0x0374F684 MOVI V0.2D, 0x0
	0x0374F688 MOVZ W9, 0x2
	0x0374F68C LDR V8, [X8 + 0x8]
	0x0374F690 STP V0, V0, [X31 + 0x10]
	0x0374F694 STR V0, [X31]
	0x0374F698 STRB W9, [X31]
	0x0374F69C LDRH W8, [X8]
	0x0374F6A0 MOVZ W9, 0xFFFF
	0x0374F6A4 ADD X0, X31, 0x0
	0x0374F6A8 CMP W8, W9
	0x0374F6AC CSINV W1, W8, W31, NE

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Compare X1, 0
	004 JumpIfEqual {17}
	005 Move X19, X0
	006 Move X0, X1
	007 Move X1, X31
	008 Call InputEvent.get_eventId, X0
	009 Move W8, W0
	010 Compare W0, 0
	011 JumpIfEqual {15}
	012 Move W9, [X19+24]
	013 NotImplemented "Instruction CMP not yet implemented."
	014 Move W0, 1
	015 Move W0, W31
	016 Move [X19+24], W8
	017 Move W0, W31
	018 Move X30, [X31+16]
	019 Move X19, [X31+24]
	020 Return X0

Method: System.Boolean IsConflictingInput(ref UnityEngine.InputSystem.InputActionState/TriggerState trigger, System.Int32 actionIndex)

Disassembly:
	0x0374F850 FMOV S10, W31
	0x0374F854 LDR X8, [X8 + 0xB8]
	0x0374F858 LDR W28, [X8]
	0x0374F85C MOVZ W8, 0x4
	0x0374F860 B 0x374F8E8
	0x0374F864 LDR V10, [X22 + 0x1C]
	0x0374F868 CMP W21, 0x3
	0x0374F86C B.NE 0x374F8D8
	0x0374F870 LDR X8, [X8]
	0x0374F874 LDRH W10, [X22 + 0x4]
	0x0374F878 LDR X9, [X20 + 0xA8]
	0x0374F87C MOVZ W11, 0x2
	0x0374F880 MOVZ W12, 0xFFFF
	0x0374F884 LDR X8, [X8 + 0xB8]
	0x0374F888 MOVN X13, 0x1
	0x0374F88C BFM X11, X10, 0x3E, 0xF
	0x0374F890 CMP W10, W12
	0x0374F894 CSEL X10, X13, X11, EQ
	0x0374F898 LDRH W9, [X10, X9, LSL]
	0x0374F89C LDR W29, [X8]
	0x0374F8A0 LDR W28, [X23 + 0x24]
	0x0374F8A4 CMP W9, 0x2
	0x0374F8A8 B.CC 0x374F8D0
	0x0374F8AC ADD X24, X20, 0xC8
	0x0374F8B0 MOV X0, X24
	0x0374F8B4 MOV X1, X31
	0x0374F8B8 BL 0x37F80A4
	0x0374F8BC TBZ X0, 0x0, 0x374F8D0
	0x0374F8C0 MOVZ W1, 0x1
	0x0374F8C4 MOV X0, X24
	0x0374F8C8 MOV X2, X31
	0x0374F8CC BL 0x37FBCE0
	0x0374F8D0 MOVZ W8, 0x3
	0x0374F8D4 B 0x374F8E8
	0x0374F8D8 LDP W29, W28, [X23 + 0x20]
	0x0374F8DC CMP W21, 0x2
	0x0374F8E0 FCSEL D9, D8, D9, EQ
	0x0374F8E4 MOV W8, W21
	0x0374F8E8 ORR W9, W27, 0x1
	0x0374F8EC STRB W8, [X23]
	0x0374F8F0 STRB W9, [X23 + 0x1]
	0x0374F8F4 LDR W9, [X31 + 0x8]
	0x0374F8F8 LDRH W10, [X31 + 0xC]
	0x0374F8FC STP D8, D9, [X23 + 0x8]
	0x0374F900 STR W26, [X23 + 0x18]
	0x0374F904 STR S10, [X23 + 0x1C]
	0x0374F908 STRH W10, [X23 + 0x6]
	0x0374F90C STUR W9, [X23 + 0x2]
	0x0374F910 STP W29, W28, [X23 + 0x20]
	0x0374F914 LDR X9, [X20 + 0x10]
	0x0374F918 CBZ X9, 0x374FA04
	0x0374F91C LDRB W10, [X25]
	0x0374F920 LDR W11, [X9 + 0x18]
	0x0374F924 CMP W10, W11
	0x0374F928 B.CS 0x374FA08
	0x0374F92C MOV W10, W10
	0x0374F930 ADD X9, X9, X10, 0x3, LSL
	0x0374F934 LDR X2, [X9 + 0x20]
	0x0374F938 CBZ X2, 0x374FA04
	0x0374F93C LDR X9, [X20 + 0xB8]
	0x0374F940 MOVZ W11, 0x30
	0x0374F944 MADD X10, X10, X11, X9
	0x0374F948 CBZ X10, 0x374FA04
	0x0374F94C LDR X9, [X2 + 0x28]
	0x0374F950 CBZ X9, 0x374FA04
	0x0374F954 LDR W10, [X10]
	0x0374F958 LDR W11, [X9 + 0x18]
	0x0374F95C SUB W10, W19, W10
	0x0374F960 CMP W10, W11
	0x0374F964 B.CS 0x374FA08
	0x0374F968 ADD X9, X9, W10, 0x3, SXTW
	0x0374F96C LDR X9, [X9 + 0x20]
	0x0374F970 CMP W21, 0x4
	0x0374F974 STRB W8, [X22]
	0x0374F978 B.EQ 0x374F9A4
	0x0374F97C CMP W21, 0x3
	0x0374F980 B.EQ 0x374F9BC
	0x0374F984 CMP W21, 0x2
	0x0374F988 B.NE 0x374F9E0
	0x0374F98C CBZ X9, 0x374FA04
	0x0374F990 ADRP X8, 0x9F6000
	0x0374F994 LDR X8, [X8 + 0xC18]
	0x0374F998 ADD X4, X9, 0xD0
	0x0374F99C MOVZ W3, 0x2
	0x0374F9A0 B 0x374F9D0
	0x0374F9A4 CBZ X9, 0x374FA04
	0x0374F9A8 ADRP X8, 0x9F6000
	0x0374F9AC LDR X8, [X8 + 0xC28]
	0x0374F9B0 ADD X4, X9, 0x120
	0x0374F9B4 MOVZ W3, 0x4
	0x0374F9B8 B 0x374F9D0
	0x0374F9BC CBZ X9, 0x374FA04
	0x0374F9C0 ADRP X8, 0x9F6000
	0x0374F9C4 LDR X8, [X8 + 0xC20]
	0x0374F9C8 ADD X4, X9, 0x170
	0x0374F9CC MOVZ W3, 0x3
	0x0374F9D0 LDR X5, [X8]
	0x0374F9D4 MOV X0, X20
	0x0374F9D8 MOV W1, W19
	0x0374F9DC BL 0x374FA20
	0x0374F9E0 LDP X20, X19, [X31 + 0x70]
	0x0374F9E4 LDP X22, X21, [X31 + 0x60]
	0x0374F9E8 LDP X24, X23, [X31 + 0x50]
	0x0374F9EC LDP X26, X25, [X31 + 0x40]
	0x0374F9F0 LDP X28, X27, [X31 + 0x30]
	0x0374F9F4 LDP X29, X30, [X31 + 0x20]
	0x0374F9F8 LDP D9, D8, [X31 + 0x10]
	0x0374F9FC LDR V10, [X31], #0x80
	0x0374FA00 RET
	0x0374FA04 BL 0x1C16F20
	0x0374FA08 BL 0x1C16F28
	0x0374FA0C LDRB W8, [X0 + 0x1]
	0x0374FA10 UBFM W0, W8, 0x4, 0x4
	0x0374FA14 RET
	0x0374FA18 STRB W1, [X0 + 0x1]
	0x0374FA1C RET
	0x0374FA20 SUB X31, X31, 0xB0
	0x0374FA24 STP X30, X27, [X31 + 0x60]
	0x0374FA28 STP X26, X25, [X31 + 0x70]
	0x0374FA2C STP X24, X23, [X31 + 0x80]
	0x0374FA30 STP X22, X21, [X31 + 0x90]
	0x0374FA34 STP X20, X19, [X31 + 0xA0]
	0x0374FA38 ADRP X25, 0xC91000
	0x0374FA3C LDRB W8, [X25 + 0xDA8]
	0x0374FA40 MOV X19, X5
	0x0374FA44 MOV X21, X4
	0x0374FA48 MOV W22, W3
	0x0374FA4C MOV X20, X2
	0x0374FA50 MOV W23, W1
	0x0374FA54 MOV X24, X0
	0x0374FA58 TBNZ X8, 0x0, 0x374FAAC
	0x0374FA5C ADRP X0, 0x9F6000
	0x0374FA60 LDR X0, [X0 + 0xC30]
	0x0374FA64 BL 0x1C16CF4
	0x0374FA68 ADRP X0, 0x9F6000
	0x0374FA6C LDR X0, [X0 + 0xBA0]
	0x0374FA70 BL 0x1C16CF4
	0x0374FA74 ADRP X0, 0x9F6000
	0x0374FA78 LDR X0, [X0 + 0xC38]
	0x0374FA7C BL 0x1C16CF4
	0x0374FA80 ADRP X0, 0x9F6000
	0x0374FA84 LDR X0, [X0 + 0xC00]
	0x0374FA88 BL 0x1C16CF4
	0x0374FA8C ADRP X0, 0x9F6000
	0x0374FA90 LDR X0, [X0 + 0x2D8]
	0x0374FA94 BL 0x1C16CF4
	0x0374FA98 ADRP X0, 0x9F6000
	0x0374FA9C LDR X0, [X0 + 0xC40]
	0x0374FAA0 BL 0x1C16CF4
	0x0374FAA4 MOVZ W8, 0x1
	0x0374FAA8 STRB W8, [X25 + 0xDA8]
	0x0374FAAC STP X31, X31, [X31]
	0x0374FAB0 CBZ X20, 0x374FBDC
	0x0374FAB4 ADRP X27, 0x9F6000
	0x0374FAB8 ADRP X25, 0x9F6000
	0x0374FABC ADRP X26, 0x9F6000
	0x0374FAC0 LDR X27, [X27 + 0xC30]
	0x0374FAC4 LDR X25, [X25 + 0x2D8]
	0x0374FAC8 LDR X26, [X26 + 0xBA0]
	0x0374FACC ADD X1, X20, 0xE8
	0x0374FAD0 ADD X0, X31, 0x10
	0x0374FAD4 MOVZ W2, 0x50
	0x0374FAD8 BL 0x3EB1AC0
	0x0374FADC LDR X1, [X27]
	0x0374FAE0 MOV X0, X21
	0x0374FAE4 BL 0x28F140C
	0x0374FAE8 CBNZ W0, 0x374FB14
	0x0374FAEC LDR X1, [X27]
	0x0374FAF0 ADD X0, X31, 0x10
	0x0374FAF4 BL 0x28F140C
	0x0374FAF8 CBNZ W0, 0x374FB14
	0x0374FAFC LDR X8, [X25]
	0x0374FB00 LDR X1, [X26]
	0x0374FB04 LDR X8, [X8 + 0xB8]
	0x0374FB08 ADD X0, X8, 0x18
	0x0374FB0C BL 0x28F140C
	0x0374FB10 CBZ W0, 0x374FBC0
	0x0374FB14 ADD X0, X31, 0x0
	0x0374FB18 MOV X1, X31
	0x0374FB1C STR X24, [X31]
	0x0374FB20 STP W23, W31, [X31 + 0x8]
	0x0374FB24 BL 0x3735E5C
	0x0374FB28 LDR X8, [X25]
	0x0374FB2C LDR X1, [X26]
	0x0374FB30 MOV X23, X0
	0x0374FB34 LDR X8, [X8 + 0xB8]
	0x0374FB38 ADD X0, X8, 0x18
	0x0374FB3C BL 0x28F140C
	0x0374FB40 CMP W0, 0x1
	0x0374FB44 B.LT 0x374FB88
	0x0374FB48 SUB W8, W22, 0x2
	0x0374FB4C CMP W8, 0x2
	0x0374FB50 B.HI 0x374FBC0
	0x0374FB54 ADRP X9, 0x9F6000
	0x0374FB58 LDR X8, [X25]
	0x0374FB5C LDR X9, [X9 + 0xC40]
	0x0374FB60 ADD W2, W22, 0x2
	0x0374FB64 MOV X1, X23
	0x0374FB68 LDR X8, [X8 + 0xB8]
	0x0374FB6C LDR X3, [X9]
	0x0374FB70 ADRP X9, 0x9F6000
	0x0374FB74 LDR X9, [X9 + 0xC00]
	0x0374FB78 ADD X0, X8, 0x18
	0x0374FB7C MOV X4, X31
	0x0374FB80 LDR X5, [X9]
	0x0374FB84 BL 0x21AE04C
	0x0374FB88 ADRP X22, 0x9F6000
	0x0374FB8C LDR X22, [X22 + 0xC38]
	0x0374FB90 LDP X1, X2, [X31]
	0x0374FB94 MOV X0, X21
	0x0374FB98 MOV X3, X19
	0x0374FB9C LDR X5, [X22]
	0x0374FBA0 MOV X4, X23
	0x0374FBA4 BL 0x21AD890
	0x0374FBA8 LDP X1, X2, [X31]
	0x0374FBAC LDR X5, [X22]
	0x0374FBB0 ADD X0, X31, 0x10
	0x0374FBB4 MOV X3, X19
	0x0374FBB8 MOV X4, X20
	0x0374FBBC BL 0x21AD890
	0x0374FBC0 LDP X20, X19, [X31 + 0xA0]
	0x0374FBC4 LDP X22, X21, [X31 + 0x90]
	0x0374FBC8 LDP X24, X23, [X31 + 0x80]
	0x0374FBCC LDP X26, X25, [X31 + 0x70]
	0x0374FBD0 LDP X30, X27, [X31 + 0x60]
	0x0374FBD4 ADD X31, X31, 0xB0
	0x0374FBD8 RET
	0x0374FBDC BL 0x1C16F20
	0x0374FBE0 STR X30, [X31 - 0x30]!
	0x0374FBE4 STP X22, X21, [X31 + 0x10]
	0x0374FBE8 STP X20, X19, [X31 + 0x20]
	0x0374FBEC ADRP X22, 0xC91000
	0x0374FBF0 ADRP X21, 0x9F6000
	0x0374FBF4 LDRB W8, [X22 + 0xDA9]
	0x0374FBF8 LDR X21, [X21 + 0xC48]
	0x0374FBFC MOV X19, X1
	0x0374FC00 MOV X20, X0
	0x0374FC04 TBNZ X8, 0x0, 0x374FC1C
	0x0374FC08 ADRP X0, 0x9F6000
	0x0374FC0C LDR X0, [X0 + 0xC48]
	0x0374FC10 BL 0x1C16CF4
	0x0374FC14 MOVZ W8, 0x1
	0x0374FC18 STRB W8, [X22 + 0xDA9]
	0x0374FC1C MOV X0, X20
	0x0374FC20 MOV X1, X19
	0x0374FC24 BL 0x374FC44
	0x0374FC28 LDR X8, [X21]
	0x0374FC2C LDP X20, X19, [X31 + 0x20]
	0x0374FC30 LDP X22, X21, [X31 + 0x10]
	0x0374FC34 CMP X0, 0x0
	0x0374FC38 CSEL X0, X8, X0, EQ
	0x0374FC3C LDR X30, [X31], #0x30
	0x0374FC40 RET
	0x0374FC44 STR X30, [X31 - 0x10]!
	0x0374FC48 LDR X8, [X0 + 0x68]
	0x0374FC4C LDRH W9, [X1 + 0x18]
	0x0374FC50 ADD X8, X8, X9, 0x5, LSL
	0x0374FC54 LDRH W8, [X8 + 0x6]
	0x0374FC58 MOVZ W9, 0xFFFF
	0x0374FC5C CMP W8, W9

ISIL:
	001 Move [X31-96], D9
	002 Move [X31-88], D8
	003 Move [X31+16], X30
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X8, [X0+96]
	013 Move W9, 48
	014 NotImplemented "Instruction SMADDL not yet implemented."
	015 Move W8, [X19+1]
	016 Move TEMP, X8
	017 And TEMP, TEMP, 4
	018 Compare TEMP, 4
	019 JumpIfEqual {21}
	020 Move W0, W31
	021 Move X9, [X0+104]
	022 NotImplemented "Instruction LDRH not yet implemented."
	023 NotImplemented "Instruction LDRH not yet implemented."
	024 Move W11, 0xFFFF
	025 Move X21, X0
	026 Add X12, X9, X10
	027 Move W14, [X12+4]
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move X20, X1
	030 NotImplemented "Instruction CSINV not yet implemented."
	031 Move TEMP, X14
	032 And TEMP, TEMP, 8
	033 Compare TEMP, 8
	034 JumpIfNotEqual {46}
	035 NotImplemented "Instruction LDRH not yet implemented."
	036 Move X12, X10
	037 ShiftRight X12, 59
	038 And X12, X12, 0x3FFFFFF
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move TEMP, 31
	041 Not TEMP
	042 Move X10, TEMP
	043 NotImplemented "Instruction CSEL not yet implemented."
	044 Add X10, X10, X9
	045 NotImplemented "Instruction LDRH not yet implemented."
	046 NotImplemented "Instruction LDRH not yet implemented."
	047 Add X11, X9, X11
	048 Move W12, [X11+4]
	049 Move TEMP, X12
	050 And TEMP, TEMP, 8
	051 Compare TEMP, 8
	052 JumpIfEqual {61}
	053 NotImplemented "Instruction LDRH not yet implemented."
	054 Move W12, 0xFFFF
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move V0, [X20+28]
	057 Or W8, W8, 1
	058 Move W0, W31
	059 Move [X19+1], W8
	060 Move [X19+28], S0
	061 NotImplemented "Instruction LDRH not yet implemented."
	062 Move W12, 0xFFFF
	063 Move X13, X11
	064 ShiftRight X13, 59
	065 And X13, X13, 0x3FFFFFF
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move TEMP, 31
	068 Not TEMP
	069 Move X11, TEMP
	070 NotImplemented "Instruction CSEL not yet implemented."
	071 Add X11, X11, X9
	072 NotImplemented "Instruction LDRH not yet implemented."
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move W10, W31
	075 Move X12, [X21+24]
	076 Compare X12, 0
	077 JumpIfEqual {298}
	078 Move W13, [X12+24]
	079 NotImplemented "Instruction CMP not yet implemented."
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Add X12, X12, 32
	082 Move X10, [X12]
	083 Move X11, [X12]
	084 NotImplemented "Instruction CMP not yet implemented."
	085 NotImplemented "Instruction CSET not yet implemented."
	086 Move V8, [X20+28]
	087 Move V9, [X19+28]
	088 NotImplemented "Instruction FCMP not yet implemented."
	089 NotImplemented "Instruction FCMP not yet implemented."
	090 NotImplemented "Instruction CSET not yet implemented."
	091 Xor W10, W10, 1
	092 Or W9, W10, W9
	093 Move TEMP, X9
	094 And TEMP, TEMP, 1
	095 Compare TEMP, 1
	096 JumpIfEqual {281}
	097 NotImplemented "Instruction FCMP not yet implemented."
	098 Or W8, W8, 8
	099 Move [X19+1], W8
	100 Move V8, [X20+28]
	101 Compare W10, 0
	102 JumpIfEqual {104}
	103 NotImplemented "Instruction FCMP not yet implemented."
	104 Move TEMP, X8
	105 And TEMP, TEMP, 8
	106 Compare TEMP, 8
	107 JumpIfNotEqual {281}
	108 Move X15, [X21+144]
	109 Move W11, 1
	110 NotImplemented "Instruction BFM not yet implemented."
	111 NotImplemented "Instruction LDRH not yet implemented."
	112 Compare X11, 0
	113 JumpIfEqual {180}
	114 Move W16, W2
	115 ShiftRight W16, 31
	116 And W16, W16, 0x3FFFFFFF
	117 Move X14, [X21+152]
	118 NotImplemented "Instruction LDRH not yet implemented."
	119 Move X13, X31
	120 Move W12, W31
	121 Move TEMP, 0
	122 Not TEMP
	123 Move W22, TEMP
	124 Move W16, 0xFFFF
	125 Move TEMP, 3
	126 Not TEMP
	127 Move X17, TEMP
	128 Move TEMP, 0
	129 Not TEMP
	130 Move W23, TEMP
	131 Add X0, X13, X15
	132 NotImplemented "Instruction LDRH not yet implemented."
	133 Add X1, X9, X0
	134 Move W2, [X1+4]
	135 Move TEMP, X2
	136 And TEMP, TEMP, 4
	137 Compare TEMP, 4
	138 JumpIfEqual {161}
	139 Move TEMP, X2
	140 And TEMP, TEMP, 8
	141 Compare TEMP, 8
	142 JumpIfEqual {177}
	143 Move W2, [X1]
	144 Compare W2, 0
	145 JumpIfEqual {177}
	146 NotImplemented "Instruction LDRH not yet implemented."
	147 Move X3, [X21+120]
	148 NotImplemented "Instruction CMP not yet implemented."
	149 NotImplemented "Instruction CSINC not yet implemented."
	150 Add X3, X3, W1
	151 Move V0, [X3+4]
	152 NotImplemented "Instruction FCMP not yet implemented."
	153 NotImplemented "Instruction CSET not yet implemented."
	154 NotImplemented "Instruction FCMP not yet implemented."
	155 Add W12, W12, W4
	156 NotImplemented "Instruction CSEL not yet implemented."
	157 NotImplemented "Instruction CSEL not yet implemented."
	158 NotImplemented "Instruction FCSEL not yet implemented."
	159 Subtract X2, X2, 1
	160 Add W1, W1, 1
	161 NotImplemented "Instruction LDRH not yet implemented."
	162 Move X2, [X21+128]
	163 Move X3, X0
	164 ShiftRight X3, 62
	165 And X3, X3, 0x1FFFFFFF
	166 NotImplemented "Instruction CMP not yet implemented."
	167 NotImplemented "Instruction CSEL not yet implemented."
	168 Move V0, [X0]
	169 NotImplemented "Instruction FCMP not yet implemented."
	170 NotImplemented "Instruction CSET not yet implemented."
	171 NotImplemented "Instruction FCMP not yet implemented."
	172 Add W12, W12, W0
	173 NotImplemented "Instruction LDRH not yet implemented."
	174 Move X0, [X21+160]
	175 Move V8, V0
	176 Move W23, [X0]
	177 Add X13, X13, 1
	178 NotImplemented "Instruction CMP not yet implemented."
	179 NotImplemented "Instruction CMP not yet implemented."
	180 Move TEMP, 0
	181 Not TEMP
	182 Move W22, TEMP
	183 Move TEMP, 0
	184 Not TEMP
	185 Move W23, TEMP
	186 And W8, W8, 0xFFFFFFF7
	187 Move [X19+1], W8
	188 Add W31, W22, 1
	189 Move X0, X20
	190 Move W1, W22
	191 Call TriggerState.set_controlIndex, X0, X1
	192 Move X0, X20
	193 Move W1, W23
	194 Call TriggerState.set_bindingIndex, X0, X1
	195 Move W8, [X20+1]
	196 Move [X20+28], S8
	197 Or W8, W8, 1
	198 Move [X20+1], W8
	199 NotImplemented "Instruction LDRH not yet implemented."
	200 NotImplemented "Instruction CMP not yet implemented."
	201 NotImplemented "Instruction LDRH not yet implemented."
	202 Move W8, 0xFFFF
	203 NotImplemented "Instruction CMP not yet implemented."
	204 Move X0, X21
	205 Call InputActionState.ResetInteractionState, X0, X1
	206 Move X8, [X21+104]
	207 Move X9, W23
	208 Add X8, X8, X9
	209 Move W25, [X8+1]
	210 Compare X25, 0
	211 JumpIfEqual {274}
	212 NotImplemented "Instruction LDRH not yet implemented."
	213 Move W9, 0xFFFF
	214 NotImplemented "Instruction CMP not yet implemented."
	215 NotImplemented "Instruction CSINV not yet implemented."
	216 Add X8, X24, X24
	217 Move X26, X8
	218 ShiftRight X26, 60
	219 And X26, X26, 0x7FFFFFF
	220 Move X8, [X21+112]
	221 Move X1, X31
	222 Add X8, X26, X8
	223 Move W0, [X8+2]
	224 Call InputExtensions.IsInProgress, X0
	225 Move TEMP, X0
	226 And TEMP, TEMP, 1
	227 Compare TEMP, 1
	228 JumpIfEqual {268}
	229 Add W24, W24, 1
	230 Subtract X25, X25, 1
	231 Add X26, X26, 48
	232 Compare W10, 0
	233 JumpIfEqual {20}
	234 Move X21, 0xC8B000
	235 Move W8, [X21+1450]
	236 Move V8, [X20+28]
	237 Compare W8, 0
	238 JumpIfNotEqual {244}
	239 Move X0, 0x9AC000
	240 Move X0, [X0+1208]
	241 Call 0x1C17CF4
	242 Move W8, 1
	243 Move [X21+1450], W8
	244 Move X8, 0x9AC000
	245 Move X8, [X8+1208]
	246 Move X9, -46546944
	247 Move V0, [X9+576]
	248 NotImplemented "Instruction FABS not yet implemented."
	249 Move X8, [X8]
	250 NotImplemented "Instruction FABS not yet implemented."
	251 NotImplemented "Instruction FCMP not yet implemented."
	252 NotImplemented "Instruction FCSEL not yet implemented."
	253 Move X8, [X8+184]
	254 Multiply S0, S1, S0
	255 Move S1, 8
	256 Move V3, [X8]
	257 Multiply S1, S3, S1
	258 NotImplemented "Instruction FCMP not yet implemented."
	259 NotImplemented "Instruction FCSEL not yet implemented."
	260 NotImplemented "Instruction FABD not yet implemented."
	261 NotImplemented "Instruction FCMP not yet implemented."
	262 Move V0, [X20+28]
	263 NotImplemented "Instruction FCMP not yet implemented."
	264 Move W8, [X19+1]
	265 Or W8, W8, 8
	266 Move [X19+1], W8
	267 Move W0, 1
	268 Move X0, X19
	269 Move W1, W24
	270 Call TriggerState.set_interactionIndex, X0, X1
	271 Move X0, X20
	272 Move W1, W24
	273 Call TriggerState.set_interactionIndex, X0, X1
	274 Move X0, X19
	275 Move W1, W22
	276 Call TriggerState.set_controlIndex, X0, X1
	277 Move X0, X19
	278 Move W1, W23
	279 Call TriggerState.set_bindingIndex, X0, X1
	280 Move W8, [X19+1]
	281 Move W0, W31
	282 Or W8, W8, 1
	283 Move [X19+1], W8
	284 Move [X19+28], S8
	285 Move X20, [X31+80]
	286 Move X19, [X31+88]
	287 Move X22, [X31+64]
	288 Move X21, [X31+72]
	289 Move X24, [X31+48]
	290 Move X23, [X31+56]
	291 Move X26, [X31+32]
	292 Move X25, [X31+40]
	293 Move X30, [X31+16]
	294 Move D9, [X31+96]
	295 Move D8, [X31+104]
	296 Return X0
	297 Call 0x1C17F28
	298 Call 0x1C17F20

Method: System.UInt16 GetActionBindingStartIndexAndCount(System.Int32 actionIndex, out System.UInt16 bindingCount)

Disassembly:
	0x0374E3EC BL 0x1D2C690
	0x0374E3F0 MOV X0, X22
	0x0374E3F4 BL 0x1C16F18
	0x0374E3F8 BL 0x1990590
	0x0374E3FC AND W8, W2, 0xFFFFFF
	0x0374E400 MOV W4, W3
	0x0374E404 UBFM X3, X2, 0x18, 0x27
	0x0374E408 UBFM X1, X2, 0x28, 0x2F

ISIL:
	001 Move X8, [X0+144]
	002 Move W9, 1
	003 NotImplemented "Instruction BFM not yet implemented."
	004 Move W10, W1
	005 ShiftRight W10, 31
	006 And W10, W10, 0x3FFFFFFF
	007 NotImplemented "Instruction LDRH not yet implemented."
	008 NotImplemented "Instruction STRH not yet implemented."
	009 NotImplemented "Instruction LDRH not yet implemented."
	010 Return X0

Method: System.Void ProcessDefaultInteraction(ref UnityEngine.InputSystem.InputActionState/TriggerState trigger, System.Int32 actionIndex)

Disassembly:
	0x0374FE18 CBZ X8, 0x374FE2C
	0x0374FE1C LDR W8, [X8 + 0x10]
	0x0374FE20 SUB W0, W1, W8
	0x0374FE24 LDR X30, [X31], #0x10
	0x0374FE28 RET
	0x0374FE2C BL 0x1C16F20
	0x0374FE30 STR X30, [X31 - 0x10]!
	0x0374FE34 LDR X8, [X0 + 0xB8]
	0x0374FE38 MOVZ W9, 0x30
	0x0374FE3C SMADDL X8, X1, X9, X8
	0x0374FE40 CBZ X8, 0x374FE54
	0x0374FE44 LDR W8, [X8 + 0x10]
	0x0374FE48 ADD W0, W8, W2
	0x0374FE4C LDR X30, [X31], #0x10
	0x0374FE50 RET
	0x0374FE54 BL 0x1C16F20
	0x0374FE58 LDR X8, [X0 + 0x68]
	0x0374FE5C SXTW X9, W1
	0x0374FE60 ADD X0, X8, X9, 0x5, LSL
	0x0374FE64 RET
	0x0374FE68 STR X30, [X31 - 0x10]!
	0x0374FE6C LDR X8, [X0 + 0x68]
	0x0374FE70 SXTW X9, W1
	0x0374FE74 MOVZ W10, 0x30
	0x0374FE78 ADD X8, X8, X9, 0x5, LSL
	0x0374FE7C LDRB W9, [X8 + 0x3]
	0x0374FE80 LDR X8, [X0 + 0xB8]
	0x0374FE84 NOP
	0x0374FE88 MADD X8, X9, X10, X8
	0x0374FE8C CBZ X8, 0x374FEE0
	0x0374FE90 LDR X10, [X0 + 0x10]
	0x0374FE94 CBZ X10, 0x374FEE0
	0x0374FE98 LDR W11, [X10 + 0x18]
	0x0374FE9C CMP W9, W11
	0x0374FEA0 B.CS 0x374FEE4
	0x0374FEA4 ADD X9, X10, X9, 0x3, LSL
	0x0374FEA8 LDR X9, [X9 + 0x20]
	0x0374FEAC CBZ X9, 0x374FEE0
	0x0374FEB0 LDR X9, [X9 + 0x30]
	0x0374FEB4 CBZ X9, 0x374FEE0
	0x0374FEB8 LDR W8, [X8 + 0x10]
	0x0374FEBC LDR W10, [X9 + 0x18]
	0x0374FEC0 SUB W8, W1, W8
	0x0374FEC4 CMP W8, W10
	0x0374FEC8 B.CS 0x374FEE4
	0x0374FECC MOVZ W10, 0x58
	0x0374FED0 SMADDL X8, X8, X10, X9
	0x0374FED4 ADD X0, X8, 0x20
	0x0374FED8 LDR X30, [X31], #0x10
	0x0374FEDC RET
	0x0374FEE0 BL 0x1C16F20
	0x0374FEE4 BL 0x1C16F28
	0x0374FEE8 STR X30, [X31 - 0x10]!
	0x0374FEEC LDR X8, [X0 + 0x10]
	0x0374FEF0 CBZ X8, 0x374FF20
	0x0374FEF4 LDR X9, [X0 + 0x68]
	0x0374FEF8 SXTW X10, W1
	0x0374FEFC ADD X9, X9, X10, 0x5, LSL
	0x0374FF00 LDRB W9, [X9 + 0x3]
	0x0374FF04 LDR W10, [X8 + 0x18]
	0x0374FF08 CMP W9, W10
	0x0374FF0C B.CS 0x374FF24
	0x0374FF10 ADD X8, X8, W9, 0x3, UXTW
	0x0374FF14 LDR X0, [X8 + 0x20]
	0x0374FF18 LDR X30, [X31], #0x10
	0x0374FF1C RET
	0x0374FF20 BL 0x1C16F20
	0x0374FF24 BL 0x1C16F28
	0x0374FF28 STR X30, [X31 - 0x10]!
	0x0374FF2C LDR X8, [X0 + 0x68]
	0x0374FF30 SXTW X9, W1
	0x0374FF34 ADD X9, X8, X9, 0x5, LSL
	0x0374FF38 LDRB W10, [X9 + 0x4]
	0x0374FF3C TBNZ X10, 0x3, 0x374FF5C
	0x0374FF40 LDR X8, [X0 + 0x18]
	0x0374FF44 CBZ X8, 0x374FFB4
	0x0374FF48 LDR W9, [X8 + 0x18]
	0x0374FF4C CMP W9, W2
	0x0374FF50 B.LS 0x374FFB8
	0x0374FF54 ADD X8, X8, W2, 0x3, SXTW
	0x0374FF58 B 0x374FF9C
	0x0374FF5C LDRH W9, [X9 + 0x8]
	0x0374FF60 MOVZ W10, 0xFFFF
	0x0374FF64 UBFM X11, X9, 0x3B, 0x3A
	0x0374FF68 CMP W9, W10
	0x0374FF6C MOVN X9, 0x1F
	0x0374FF70 CSEL X9, X9, X11, EQ
	0x0374FF74 ADD X8, X9, X8
	0x0374FF78 LDRH W9, [X8 + 0x8]
	0x0374FF7C LDR X8, [X0 + 0x30]
	0x0374FF80 CMP W9, W10
	0x0374FF84 CSINV W9, W9, W31, NE
	0x0374FF88 CBZ X8, 0x374FFB4
	0x0374FF8C LDR W10, [X8 + 0x18]
	0x0374FF90 CMP W9, W10
	0x0374FF94 B.CS 0x374FFB8
	0x0374FF98 ADD X8, X8, W9, 0x3, UXTW
	0x0374FF9C LDR X0, [X8 + 0x20]
	0x0374FFA0 CBZ X0, 0x374FFB4
	0x0374FFA4 LDR X8, [X0]
	0x0374FFA8 LDP X2, X1, [X8 + 0x188]
	0x0374FFAC LDR X30, [X31], #0x10
	0x0374FFB0 BR X2
	0x0374FFB4 BL 0x1C16F20
	0x0374FFB8 BL 0x1C16F28
	0x0374FFBC STR X30, [X31 - 0x10]!
	0x0374FFC0 LDR X8, [X0 + 0x68]
	0x0374FFC4 SXTW X9, W1
	0x0374FFC8 ADD X9, X8, X9, 0x5, LSL
	0x0374FFCC LDRB W10, [X9 + 0x4]
	0x0374FFD0 TBNZ X10, 0x3, 0x374FFF0
	0x0374FFD4 LDR X8, [X0 + 0x18]
	0x0374FFD8 CBZ X8, 0x3750048
	0x0374FFDC LDR W9, [X8 + 0x18]
	0x0374FFE0 CMP W9, W2
	0x0374FFE4 B.LS 0x375004C
	0x0374FFE8 ADD X8, X8, W2, 0x3, SXTW
	0x0374FFEC B 0x3750030
	0x0374FFF0 LDRH W9, [X9 + 0x8]
	0x0374FFF4 MOVZ W10, 0xFFFF
	0x0374FFF8 UBFM X11, X9, 0x3B, 0x3A
	0x0374FFFC CMP W9, W10
	0x03750000 MOVN X9, 0x1F
	0x03750004 CSEL X9, X9, X11, EQ
	0x03750008 ADD X8, X9, X8
	0x0375000C LDRH W9, [X8 + 0x8]
	0x03750010 LDR X8, [X0 + 0x30]
	0x03750014 CMP W9, W10
	0x03750018 CSINV W9, W9, W31, NE
	0x0375001C CBZ X8, 0x3750048
	0x03750020 LDR W10, [X8 + 0x18]
	0x03750024 CMP W9, W10
	0x03750028 B.CS 0x375004C
	0x0375002C ADD X8, X8, W9, 0x3, UXTW
	0x03750030 LDR X0, [X8 + 0x20]
	0x03750034 CBZ X0, 0x3750048
	0x03750038 LDR X8, [X0]
	0x0375003C LDP X2, X1, [X8 + 0x178]
	0x03750040 LDR X30, [X31], #0x10
	0x03750044 BR X2
	0x03750048 BL 0x1C16F20
	0x0375004C BL 0x1C16F28
	0x03750050 SUB X31, X31, 0x50
	0x03750054 STP X30, X25, [X31 + 0x10]
	0x03750058 STP X24, X23, [X31 + 0x20]
	0x0375005C STP X22, X21, [X31 + 0x30]
	0x03750060 STP X20, X19, [X31 + 0x40]
	0x03750064 MOV W19, W4
	0x03750068 MOV X20, X3
	0x0375006C MOV W22, W1
	0x03750070 MOV X21, X0
	0x03750074 STP X31, X31, [X31]
	0x03750078 TBNZ X5, 0x0, 0x3750094
	0x0375007C LDR X8, [X21 + 0x68]
	0x03750080 MOV W9, W22
	0x03750084 SXTW X9, W9
	0x03750088 ADD X9, X8, X9, 0x5, LSL
	0x0375008C LDRB W10, [X9 + 0x4]
	0x03750090 TBNZ X10, 0x3, 0x37500C8
	0x03750094 LDR X8, [X21 + 0x18]
	0x03750098 CBZ X8, 0x37501BC
	0x0375009C LDR W9, [X8 + 0x18]
	0x037500A0 CMP W9, W2
	0x037500A4 B.LS 0x37501C0
	0x037500A8 ADD X8, X8, W2, 0x3, SXTW
	0x037500AC LDR X23, [X8 + 0x20]
	0x037500B0 MOV X1, X20
	0x037500B4 MOV W2, W19
	0x037500B8 MOV X3, X31
	0x037500BC MOV X0, X23
	0x037500C0 BL 0x37739C0
	0x037500C4 B 0x3750134
	0x037500C8 LDRH W9, [X9 + 0x8]
	0x037500CC MOVZ W10, 0xFFFF
	0x037500D0 CMP W9, W10
	0x037500D4 CSINV W22, W9, W31, NE
	0x037500D8 MOV W9, W22
	0x037500DC SXTW X9, W9
	0x037500E0 ADD X8, X8, X9, 0x5, LSL
	0x037500E4 LDRH W9, [X8 + 0x8]
	0x037500E8 LDR X8, [X21 + 0x30]
	0x037500EC CMP W9, W10
	0x037500F0 CSINV W9, W9, W31, NE
	0x037500F4 CBZ X8, 0x37501BC
	0x037500F8 LDR W10, [X8 + 0x18]
	0x037500FC CMP W9, W10
	0x03750100 B.CS 0x37501C0
	0x03750104 ADD X8, X8, W9, 0x3, UXTW
	0x03750108 LDR X0, [X8 + 0x20]
	0x0375010C STR X21, [X31]
	0x03750110 STP W22, W31, [X31 + 0x8]
	0x03750114 CBZ X0, 0x37501BC
	0x03750118 LDR X8, [X0]
	0x0375011C ADD X1, X31, 0x0
	0x03750120 MOV X2, X20
	0x03750124 MOV W3, W19
	0x03750128 LDP X9, X4, [X8 + 0x198]
	0x0375012C BLR X9
	0x03750130 MOV X23, X31
	0x03750134 LDR X8, [X21 + 0x68]
	0x03750138 SXTW X9, W22
	0x0375013C ADD X8, X8, X9, 0x5, LSL
	0x03750140 LDRB W22, [X8 + 0x2]
	0x03750144 CBZ X22, 0x37501A4
	0x03750148 LDRH W8, [X8 + 0xA]
	0x0375014C MOVZ W9, 0xFFFF
	0x03750150 CMP W8, W9
	0x03750154 CSINV W24, W8, W31, NE
	0x03750158 SBFM X8, X24, 0x3D, 0x1F
	0x0375015C ADD X25, X8, 0x20
	0x03750160 LDR X8, [X21 + 0x28]
	0x03750164 CBZ X8, 0x37501BC
	0x03750168 LDR W9, [X8 + 0x18]
	0x0375016C CMP W24, W9
	0x03750170 B.CS 0x37501C0
	0x03750174 LDR X0, [X8, X25, LSL]
	0x03750178 CBZ X0, 0x37501BC
	0x0375017C LDR X8, [X0]
	0x03750180 MOV X1, X20
	0x03750184 MOV W2, W19
	0x03750188 MOV X3, X23
	0x0375018C LDP X9, X4, [X8 + 0x188]
	0x03750190 BLR X9
	0x03750194 ADD X25, X25, 0x8
	0x03750198 SUBS X22, X22, 0x1
	0x0375019C ADD W24, W24, 0x1
	0x037501A0 B.NE 0x3750160
	0x037501A4 LDP X20, X19, [X31 + 0x40]
	0x037501A8 LDP X22, X21, [X31 + 0x30]
	0x037501AC LDP X24, X23, [X31 + 0x20]
	0x037501B0 LDP X30, X25, [X31 + 0x10]
	0x037501B4 ADD X31, X31, 0x50
	0x037501B8 RET
	0x037501BC BL 0x1C16F20

ISIL:
	001 Move [X31-64], D9
	002 Move [X31-56], D8
	003 Move [X31+16], X30
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0xC92000
	009 Move W8, [X22+3490]
	010 Move W21, W2
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x9CD000
	018 Move X0, [X0+3216]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X22+3490], W8
	022 Move X8, [X20+96]
	023 Move W9, 48
	024 NotImplemented "Instruction SMADDL not yet implemented."
	025 Move W9, [X8]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 NotImplemented "Instruction CMP not yet implemented."
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move W8, [X19+1]
	030 Move TEMP, X8
	031 And TEMP, TEMP, 2
	032 Compare TEMP, 2
	033 JumpIfEqual {73}
	034 Move TEMP, X8
	035 And TEMP, TEMP, 32
	036 Compare TEMP, 32
	037 JumpIfEqual {186}
	038 Move S0, W31
	039 Move X0, X19
	040 Call InputActionState.IsActuated, X0, V0
	041 Move TEMP, X0
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfNotEqual {220}
	045 Move W1, 2
	046 Move W3, 1
	047 Move X0, X20
	048 Move X2, X19
	049 Call InputActionState.ChangePhaseOfAction, X0, X1, X2, X3
	050 Move W8, [X8+1]
	051 Move TEMP, X8
	052 And TEMP, TEMP, 32
	053 Compare TEMP, 32
	054 JumpIfEqual {74}
	055 Move TEMP, X8
	056 And TEMP, TEMP, 2
	057 Compare TEMP, 2
	058 JumpIfNotEqual {220}
	059 Move W8, [X8+1]
	060 Move TEMP, X8
	061 And TEMP, TEMP, 32
	062 Compare TEMP, 32
	063 JumpIfEqual {130}
	064 Move S0, W31
	065 Move X0, X19
	066 Call InputActionState.IsActuated, X0, V0
	067 Move TEMP, X0
	068 And TEMP, TEMP, 1
	069 Compare TEMP, 1
	070 JumpIfNotEqual {184}
	071 Move W1, 3
	072 Move W3, 2
	073 Move W1, 3
	074 NotImplemented "Instruction LDRH not yet implemented."
	075 Move X8, [X20+24]
	076 Move W10, 0xFFFF
	077 NotImplemented "Instruction CMP not yet implemented."
	078 NotImplemented "Instruction CSINV not yet implemented."
	079 Compare X8, 0
	080 JumpIfEqual {248}
	081 Move W10, [X8+24]
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Add X8, X8, W9
	084 Move X21, 0x9CD000
	085 Move V9, [X19+28]
	086 Move X0, [X8+32]
	087 Move X21, [X21+3216]
	088 Move X8, [X21]
	089 Compare X0, 0
	090 JumpIfEqual {99}
	091 Move X9, [X0]
	092 Move W10, [X8+304]
	093 Move W11, [X9+304]
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Move X9, [X9+200]
	096 Add X9, X9, X10
	097 NotImplemented "Instruction LDUR not yet implemented."
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Move X8, [X8+184]
	100 Move V8, [X8]
	101 Move X22, 0xC8B000
	102 Move W8, [X22+1450]
	103 Compare W8, 0
	104 JumpIfNotEqual {110}
	105 Move X0, 0x9AC000
	106 Move X0, [X0+1208]
	107 Call 0x1C17CF4
	108 Move W8, 1
	109 Move [X22+1450], W8
	110 Move X8, 0x9AC000
	111 Move X8, [X8+1208]
	112 Move X9, -46546944
	113 Move V0, [X9+576]
	114 NotImplemented "Instruction FABS not yet implemented."
	115 Move X8, [X8]
	116 Move S3, 8
	117 Multiply S0, S2, S0
	118 Move X8, [X8+184]
	119 Move V1, [X8]
	120 Multiply S1, S1, S3
	121 NotImplemented "Instruction FCMP not yet implemented."
	122 NotImplemented "Instruction FCSEL not yet implemented."
	123 NotImplemented "Instruction FCMP not yet implemented."
	124 Move X8, [X21]
	125 Move X8, [X8+184]
	126 Move V0, [X8+4]
	127 Multiply S0, S8, S0
	128 NotImplemented "Instruction FCMP not yet implemented."
	129 Move W1, 2
	130 NotImplemented "Instruction LDRH not yet implemented."
	131 Move X8, [X20+24]
	132 Move W10, 0xFFFF
	133 NotImplemented "Instruction CMP not yet implemented."
	134 NotImplemented "Instruction CSINV not yet implemented."
	135 Compare X8, 0
	136 JumpIfEqual {248}
	137 Move W10, [X8+24]
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Add X8, X8, W9
	140 Move X0, [X8+32]
	141 Move X8, 0x9CC000
	142 Move V8, [X19+28]
	143 Move X8, [X8+3216]
	144 Move X8, [X8]
	145 Compare X0, 0
	146 JumpIfEqual {155}
	147 Move X9, [X0]
	148 Move W10, [X8+304]
	149 Move W11, [X9+304]
	150 NotImplemented "Instruction CMP not yet implemented."
	151 Move X9, [X9+200]
	152 Add X9, X9, X10
	153 NotImplemented "Instruction LDUR not yet implemented."
	154 NotImplemented "Instruction CMP not yet implemented."
	155 Move X8, [X8+184]
	156 Move V0, [X8]
	157 NotImplemented "Instruction FCMP not yet implemented."
	158 Move X21, 0xC8A000
	159 Move W8, [X21+1450]
	160 Compare W8, 0
	161 JumpIfNotEqual {167}
	162 Move X0, 0x9AB000
	163 Move X0, [X0+1208]
	164 Call 0x1C17CF4
	165 Move W8, 1
	166 Move [X21+1450], W8
	167 Move X8, 0x9AB000
	168 Move X8, [X8+1208]
	169 Move X9, -46551040
	170 Move V0, [X9+576]
	171 NotImplemented "Instruction FABS not yet implemented."
	172 Move X8, [X8]
	173 Move S2, W31
	174 NotImplemented "Instruction FMAXNM not yet implemented."
	175 Multiply S0, S1, S0
	176 Move X8, [X8+184]
	177 Move S1, 8
	178 Move V3, [X8]
	179 Multiply S1, S3, S1
	180 NotImplemented "Instruction FCMP not yet implemented."
	181 NotImplemented "Instruction FCSEL not yet implemented."
	182 NotImplemented "Instruction FABD not yet implemented."
	183 NotImplemented "Instruction FCMP not yet implemented."
	184 Move W1, 4
	185 Move W3, 1
	186 Move V8, [X19+28]
	187 NotImplemented "Instruction FCMP not yet implemented."
	188 Move W1, 2
	189 Move W3, 1
	190 Move X0, X20
	191 Move X2, X19
	192 Call InputActionState.ChangePhaseOfAction, X0, X1, X2, X3
	193 NotImplemented "Instruction LDRH not yet implemented."
	194 Move X8, [X20+24]
	195 Move W10, 0xFFFF
	196 NotImplemented "Instruction CMP not yet implemented."
	197 NotImplemented "Instruction CSINV not yet implemented."
	198 Compare X8, 0
	199 JumpIfEqual {248}
	200 Move W10, [X8+24]
	201 NotImplemented "Instruction CMP not yet implemented."
	202 Add X8, X8, W9
	203 Move X0, [X8+32]
	204 Move X8, 0x9CC000
	205 Move X8, [X8+3216]
	206 Move X8, [X8]
	207 Compare X0, 0
	208 JumpIfEqual {217}
	209 Move X9, [X0]
	210 Move W10, [X8+304]
	211 Move W11, [X9+304]
	212 NotImplemented "Instruction CMP not yet implemented."
	213 Move X9, [X9+200]
	214 Add X9, X9, X10
	215 NotImplemented "Instruction LDUR not yet implemented."
	216 NotImplemented "Instruction CMP not yet implemented."
	217 Move X8, [X8+184]
	218 Move V0, [X8]
	219 NotImplemented "Instruction FCMP not yet implemented."
	220 Move X20, [X31+48]
	221 Move X19, [X31+56]
	222 Move X22, [X31+32]
	223 Move X21, [X31+40]
	224 Move X30, [X31+16]
	225 Move D9, [X31+64]
	226 Move D8, [X31+72]
	227 Return 
	228 Move W1, 3
	229 Move W3, 3
	230 Move X0, X20
	231 Move X2, X19
	232 Move X20, [X31+48]
	233 Move X19, [X31+56]
	234 Move X22, [X31+32]
	235 Move X21, [X31+40]
	236 Move X30, [X31+16]
	237 Move D9, [X31+64]
	238 Move D8, [X31+72]
	239 Call InputActionState.ChangePhaseOfAction, X0, X1, X2, X3
	240 Return 
	241 Move X1, X31
	242 Call ButtonControl.get_pressPointOrDefault, X0
	243 Move V8, V0
	244 Move X1, X31
	245 Call ButtonControl.get_pressPointOrDefault, X0
	246 Move X1, X31
	247 Call ButtonControl.get_pressPointOrDefault, X0
	248 Call 0x1C17F20
	249 Call 0x1C17F28

Method: System.Void ProcessInteractions(ref UnityEngine.InputSystem.InputActionState/TriggerState trigger, System.Int32 interactionStartIndex, System.Int32 interactionCount)

Disassembly:
	0x0374F6B0 BL 0x374CAD4
	0x0374F6B4 LDRH W1, [X21 + 0x18]
	0x0374F6B8 ADD X0, X31, 0x0
	0x0374F6BC BL 0x374CCC0
	0x0374F6C0 ADD X0, X31, 0x0
	0x0374F6C4 MOV W1, W24
	0x0374F6C8 BL 0x374CB6C
	0x0374F6CC LDRB W1, [X21 + 0x2]
	0x0374F6D0 ADD X0, X31, 0x0
	0x0374F6D4 BL 0x374CC60
	0x0374F6D8 STP D8, D8, [X31 + 0x8]
	0x0374F6DC LDP V2, V0, [X31 + 0x10]
	0x0374F6E0 LDR V1, [X31]
	0x0374F6E4 ADD X2, X31, 0x30
	0x0374F6E8 MOVZ W1, 0x2
	0x0374F6EC MOVZ W3, 0x1
	0x0374F6F0 MOV X0, X19
	0x0374F6F4 STP V2, V0, [X31 + 0x40]
	0x0374F6F8 STR V1, [X31 + 0x3]
	0x0374F6FC BL 0x374D4B0
	0x0374F700 TBZ X0, 0x0, 0x374F64C
	0x0374F704 LDR X8, [X19 + 0x70]
	0x0374F708 ADD X8, X8, X25
	0x0374F70C LDRB W9, [X8 + 0x2]
	0x0374F710 CMP W9, 0x3
	0x0374F714 B.NE 0x374F5E0
	0x0374F718 MOVI V0.2D, 0x0
	0x0374F71C STP V0, V0, [X31 + 0x10]
	0x0374F720 STR V0, [X31]
	0x0374F724 STRB W9, [X31]
	0x0374F728 LDRH W8, [X8]
	0x0374F72C MOVZ W9, 0xFFFF
	0x0374F730 ADD X0, X31, 0x0
	0x0374F734 CMP W8, W9
	0x0374F738 CSINV W1, W8, W31, NE
	0x0374F73C BL 0x374CAD4
	0x0374F740 LDRH W1, [X21 + 0x18]
	0x0374F744 ADD X0, X31, 0x0
	0x0374F748 BL 0x374CCC0
	0x0374F74C ADD X0, X31, 0x0
	0x0374F750 MOV W1, W24
	0x0374F754 BL 0x374CB6C
	0x0374F758 LDRB W1, [X21 + 0x2]
	0x0374F75C ADD X0, X31, 0x0
	0x0374F760 BL 0x374CC60
	0x0374F764 LDR X8, [X19 + 0x70]
	0x0374F768 ADD X2, X31, 0x30
	0x0374F76C MOVZ W1, 0x3
	0x0374F770 MOVZ W3, 0x1
	0x0374F774 ADD X8, X8, X25
	0x0374F778 LDR V0, [X8 + 0x18]
	0x0374F77C MOV X0, X19
	0x0374F780 STP D0, D8, [X31 + 0x8]
	0x0374F784 LDR V0, [X31]
	0x0374F788 LDP V2, V1, [X31 + 0x10]
	0x0374F78C STR V0, [X31 + 0x3]
	0x0374F790 STP V2, V1, [X31 + 0x40]
	0x0374F794 B 0x374F494
	0x0374F798 BL 0x3EB1B20
	0x0374F79C STR D10, [X31 - 0x80]!
	0x0374F7A0 STP D9, D8, [X31 + 0x10]
	0x0374F7A4 STP X29, X30, [X31 + 0x20]
	0x0374F7A8 STP X28, X27, [X31 + 0x30]
	0x0374F7AC STP X26, X25, [X31 + 0x40]
	0x0374F7B0 STP X24, X23, [X31 + 0x50]
	0x0374F7B4 STP X22, X21, [X31 + 0x60]
	0x0374F7B8 STP X20, X19, [X31 + 0x70]
	0x0374F7BC ADRP X24, 0xC91000
	0x0374F7C0 LDRB W8, [X24 + 0xDA7]
	0x0374F7C4 MOV X22, X4
	0x0374F7C8 MOV W21, W3
	0x0374F7CC MOV X23, X2
	0x0374F7D0 MOV W19, W1
	0x0374F7D4 MOV X20, X0
	0x0374F7D8 TBNZ X8, 0x0, 0x374F814
	0x0374F7DC ADRP X0, 0x9F5000
	0x0374F7E0 LDR X0, [X0 + 0xF90]
	0x0374F7E4 BL 0x1C16CF4
	0x0374F7E8 ADRP X0, 0x9F6000
	0x0374F7EC LDR X0, [X0 + 0xC18]
	0x0374F7F0 BL 0x1C16CF4
	0x0374F7F4 ADRP X0, 0x9F6000
	0x0374F7F8 LDR X0, [X0 + 0xC20]
	0x0374F7FC BL 0x1C16CF4
	0x0374F800 ADRP X0, 0x9F6000
	0x0374F804 LDR X0, [X0 + 0xC28]
	0x0374F808 BL 0x1C16CF4
	0x0374F80C MOVZ W8, 0x1
	0x0374F810 STRB W8, [X24 + 0xDA7]
	0x0374F814 MOV X25, X22
	0x0374F818 LDR W8, [X25 + 0x2]!
	0x0374F81C CMP W21, 0x4
	0x0374F820 LDRH W9, [X25 + 0x4]
	0x0374F824 STR W8, [X31 + 0x8]
	0x0374F828 ADRP X8, 0x9F5000
	0x0374F82C STRH W9, [X31 + 0xC]
	0x0374F830 LDUR V8, [X25 + 0x6]
	0x0374F834 LDUR V9, [X25 + 0xE]
	0x0374F838 LDUR W26, [X25 + 0x16]
	0x0374F83C LDRB W27, [X23 + 0x1]
	0x0374F840 LDR X8, [X8 + 0xF90]
	0x0374F844 B.NE 0x374F864
	0x0374F848 LDR X8, [X8]
	0x0374F84C LDR W29, [X23 + 0x20]

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+128], X30
	003 Move [X31+136], X27
	004 Move [X31+144], X26
	005 Move [X31+152], X25
	006 Move [X31+160], X24
	007 Move [X31+168], X23
	008 Move [X31+176], X22
	009 Move [X31+184], X21
	010 Move [X31+192], X20
	011 Move [X31+200], X19
	012 NotImplemented "Instruction MRS not yet implemented."
	013 Move X8, [X23+40]
	014 Move X24, 0xC92000
	015 Move W21, W3
	016 Move W19, W2
	017 Move [X31+120], X8
	018 Move W8, [X24+3491]
	019 Move X22, X1
	020 Move X20, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {30}
	025 Move X0, 0x9F7000
	026 Move X0, [X0+2960]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X24+3491], W8
	030 NotImplemented "Instruction MOVI not yet implemented."
	031 Move [X31+48], W31
	032 Move [X31+16], V0
	033 Move [X31+24], V0
	034 Move [X31], V0
	035 Move V1, [X22]
	036 Move V0, [X22+16]
	037 Move V2, [X22+2]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move [X31+56], X20
	040 Move [X31+4], V1
	041 Move [X31+20], V0
	042 Move [X31+36], V2
	043 Move V0, [X31]
	044 Move V1, [X31+16]
	045 Move V2, [X31+2]
	046 Move W8, [X31+48]
	047 Move [X31+64], V0
	048 Move [X31+72], V1
	049 Move [X31+96], V2
	050 Move [X31+112], W8
	051 Move [X31+116], W31
	052 Move X25, 0x9F7000
	053 Move X25, [X25+2960]
	054 Add X8, X31, 56
	055 Move X24, X31
	056 Move W26, W21
	057 Add X21, X8, 12
	058 Move W27, 48
	059 Move X8, [X20+32]
	060 Compare X8, 0
	061 JumpIfEqual {117}
	062 Move W10, [X8+24]
	063 Add W9, W24, W19
	064 Move X1, W9
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Move X10, [X20+112]
	067 Add X8, X8, X1
	068 Move X22, [X8+32]
	069 Move X0, X21
	070 NotImplemented "Instruction SMADDL not yet implemented."
	071 Move W10, [X9+2]
	072 Move V0, [X9+8]
	073 Move [X31+68], W10
	074 Move [X31+84], D0
	075 Call TriggerState.set_interactionIndex, X0, X1
	076 Compare X22, 0
	077 JumpIfEqual {117}
	078 Move X8, [X22]
	079 Move X1, [X25]
	080 NotImplemented "Instruction LDRH not yet implemented."
	081 Compare X9, 0
	082 JumpIfEqual {89}
	083 Move X10, [X8+176]
	084 Add X10, X10, 8
	085 NotImplemented "Instruction LDUR not yet implemented."
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Subtract X9, X9, 1
	088 Add X10, X10, 16
	089 Move X0, X22
	090 Move W2, W31
	091 Call 0x1C5D788
	092 NotImplemented "Instruction LDRSW not yet implemented."
	093 Add X8, X8, X9
	094 Add X0, X8, 312
	095 Move X8, [X0]
	096 Move X2, [X0+8]
	097 Add X1, X31, 56
	098 Move X0, X22
	099 NotImplemented "Instruction BLR not yet implemented."
	100 Add X24, X24, 1
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Move X8, [X23+40]
	103 Move X9, [X31+120]
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Move X20, [X31+192]
	106 Move X19, [X31+200]
	107 Move X22, [X31+176]
	108 Move X21, [X31+184]
	109 Move X24, [X31+160]
	110 Move X23, [X31+168]
	111 Move X26, [X31+144]
	112 Move X25, [X31+152]
	113 Move X30, [X31+128]
	114 Move X27, [X31+136]
	115 Add X31, X31, 208
	116 Return 
	117 Call 0x1C17F20
	118 Call 0x1C17F28
	119 Call 0x3EB2B20

Method: System.Void ProcessTimeout(System.Double time, System.Int32 mapIndex, System.Int32 controlIndex, System.Int32 bindingIndex, System.Int32 interactionIndex)

Disassembly:
	0x0374F414 MOV X0, X19
	0x0374F418 MOV W1, W8
	0x0374F41C BL 0x374F2CC
	0x0374F420 STRB W23, [X22 + 0x2]
	0x0374F424 LDRH W8, [X21 + 0x4]
	0x0374F428 MOV X0, X22
	0x0374F42C CMP W8, W27
	0x0374F430 CSINV W1, W8, W31, NE
	0x0374F434 BL 0x374CBE4
	0x0374F438 LDR V0, [X21 + 0x10]
	0x0374F43C CMP W23, 0x3
	0x0374F440 STR D0, [X22 + 0x8]
	0x0374F444 B.NE 0x374F450
	0x0374F448 LDR V0, [X21 + 0x8]
	0x0374F44C STR D0, [X22 + 0x18]
	0x0374F450 LDR X8, [X19 + 0x68]
	0x0374F454 MOVZ W9, 0xFFFF
	0x0374F458 ADD X8, X8, X28, 0x5, LSL
	0x0374F45C LDRH W8, [X8 + 0x6]
	0x0374F460 CMP W8, W9
	0x0374F464 CSINV W27, W8, W31, NE
	0x0374F468 B.EQ 0x374F5E0
	0x0374F46C LDR X8, [X19 + 0x60]
	0x0374F470 MOVZ W9, 0x30
	0x0374F474 SMADDL X8, X27, X9, X8
	0x0374F478 LDRB W9, [X8]
	0x0374F47C CMP W9, 0x1
	0x0374F480 B.NE 0x374F4A0
	0x0374F484 MOV X0, X19
	0x0374F488 MOV W1, W23
	0x0374F48C MOV X2, X21
	0x0374F490 MOV W3, W25
	0x0374F494 BL 0x374D4B0
	0x0374F498 TBNZ X0, 0x0, 0x374F5E0
	0x0374F49C B 0x374F64C
	0x0374F4A0 LDRH W8, [X8 + 0x1A]
	0x0374F4A4 CMP W23, 0x4
	0x0374F4A8 UBFM X28, X28, 0x3B, 0x3A
	0x0374F4AC B.NE 0x374F554
	0x0374F4B0 LDRH W9, [X21 + 0x1A]
	0x0374F4B4 MOVZ W10, 0xFFFF
	0x0374F4B8 CMP W8, W10
	0x0374F4BC CSINV W11, W8, W31, NE
	0x0374F4C0 CMP W9, W10
	0x0374F4C4 CSINV W10, W9, W31, NE
	0x0374F4C8 CMP W11, W10
	0x0374F4CC B.NE 0x374F558
	0x0374F4D0 MOVZ W1, 0x4
	0x0374F4D4 MOVZ W3, 0x1
	0x0374F4D8 MOV X0, X19
	0x0374F4DC MOV X2, X21
	0x0374F4E0 BL 0x374D4B0
	0x0374F4E4 TBZ X0, 0x0, 0x374F64C
	0x0374F4E8 TBZ X24, 0x0, 0x374F64C
	0x0374F4EC LDR X8, [X19 + 0x68]
	0x0374F4F0 ADD X9, X28, X8
	0x0374F4F4 LDRB W8, [X9 + 0x1]
	0x0374F4F8 CBZ X8, 0x374F5E0
	0x0374F4FC LDRH W9, [X9 + 0xC]
	0x0374F500 LDRH W10, [X21 + 0x1A]
	0x0374F504 MOVZ W11, 0xFFFF
	0x0374F508 CMP W9, W11
	0x0374F50C CSINV X24, X9, X31, NE
	0x0374F510 CMP W10, W11
	0x0374F514 CSINV X9, X10, X31, NE
	0x0374F518 ADD X10, X24, X24, 0x1, LSL
	0x0374F51C UBFM X25, X10, 0x3C, 0x3B
	0x0374F520 CMP X9, X24
	0x0374F524 B.EQ 0x374F540
	0x0374F528 LDR X10, [X19 + 0x70]
	0x0374F52C ADD X11, X25, X10
	0x0374F530 LDRB W11, [X11 + 0x2]
	0x0374F534 AND W11, W11, 0xFE
	0x0374F538 CMP W11, 0x2
	0x0374F53C B.EQ 0x374F680
	0x0374F540 ADD X24, X24, 0x1
	0x0374F544 SUBS X8, X8, 0x1
	0x0374F548 ADD X25, X25, 0x30
	0x0374F54C B.NE 0x374F520
	0x0374F550 B 0x374F5E0
	0x0374F554 LDRH W9, [X21 + 0x1A]
	0x0374F558 MOVZ W10, 0xFFFF
	0x0374F55C CMP W8, W10
	0x0374F560 CSINV W8, W8, W31, NE
	0x0374F564 CMP W9, W10
	0x0374F568 CSINV W9, W9, W31, NE
	0x0374F56C CMP W8, W9
	0x0374F570 B.NE 0x374F5E0
	0x0374F574 MOV X0, X19
	0x0374F578 MOV W1, W23
	0x0374F57C MOV X2, X21
	0x0374F580 MOV W3, W25
	0x0374F584 BL 0x374D4B0
	0x0374F588 TBZ X0, 0x0, 0x374F64C
	0x0374F58C CMP W23, 0x3
	0x0374F590 B.NE 0x374F62C
	0x0374F594 LDR X8, [X19 + 0x68]
	0x0374F598 ADD X8, X28, X8
	0x0374F59C LDRH W9, [X8 + 0xC]
	0x0374F5A0 LDRB W25, [X8 + 0x1]
	0x0374F5A4 MOVZ W28, 0xFFFF
	0x0374F5A8 CMP W9, W28
	0x0374F5AC CSINV W24, W9, W31, NE
	0x0374F5B0 CBZ W25, 0x374F5E8
	0x0374F5B4 LDRH W8, [X21 + 0x1A]
	0x0374F5B8 CMP W8, W28
	0x0374F5BC CSINV W8, W8, W31, NE
	0x0374F5C0 CMP W24, W8
	0x0374F5C4 B.EQ 0x374F5D4
	0x0374F5C8 MOV X0, X19
	0x0374F5CC MOV W1, W24
	0x0374F5D0 BL 0x374BDD8
	0x0374F5D4 SUBS W25, W25, 0x1
	0x0374F5D8 ADD W24, W24, 0x1
	0x0374F5DC B.NE 0x374F5B4
	0x0374F5E0 CMP W23, 0x3
	0x0374F5E4 B.NE 0x374F62C
	0x0374F5E8 LDR X8, [X19 + 0x60]
	0x0374F5EC ADD W9, W27, W27, 0x1, LSL
	0x0374F5F0 UBFM W9, W9, 0x1C, 0x1B
	0x0374F5F4 MOVZ W10, 0xFFFF
	0x0374F5F8 ADD X8, X8, W9, SXTW
	0x0374F5FC LDRH W9, [X8 + 0x1A]
	0x0374F600 LDRH W8, [X21 + 0x1A]
	0x0374F604 CMP W9, W10
	0x0374F608 CSINV W9, W9, W31, NE
	0x0374F60C CMP W8, W10

ISIL:
	001 Subtract X31, X31, 272
	002 Move [X31+192], D8
	003 Move [X31+200], X29
	004 Move [X31+208], X30
	005 Move [X31+216], X25
	006 Move [X31+224], X24
	007 Move [X31+232], X23
	008 Move [X31+240], X22
	009 Move [X31+248], X21
	010 Move [X31+256], X20
	011 Move [X31+264], X19
	012 NotImplemented "Instruction MRS not yet implemented."
	013 Move X8, [X24+40]
	014 Move X25, 0xC92000
	015 Move W19, W4
	016 Move W21, W3
	017 Move [X31+184], X8
	018 Move W8, [X25+3492]
	019 Move W22, W2
	020 Move W23, W1
	021 Move V8, V0
	022 Move X20, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {32}
	027 Move X0, 0x9F7000
	028 Move X0, [X0+2960]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X25+3492], W8
	032 NotImplemented "Instruction MOVI not yet implemented."
	033 Move [X31+144], V0
	034 Move [X31+152], V0
	035 Move [X31+112], V0
	036 Move [X31+120], V0
	037 Move X9, [X20+112]
	038 Move W8, 48
	039 Move [X31+104], X31
	040 Move [X31+88], V0
	041 Move [X31+72], V0
	042 Move [X31+56], V0
	043 Move [X31+48], X20
	044 Move [X31], V0
	045 Move [X31+8], V0
	046 Move [X31+2], V0
	047 NotImplemented "Instruction NOP not yet implemented."
	048 NotImplemented "Instruction SMADDL not yet implemented."
	049 Move W8, [X25+2]
	050 Add X0, X31, 0
	051 Move W1, W23
	052 Move [X31+8], D8
	053 Move [X31], W8
	054 Call TriggerState.set_mapIndex, X0, X1
	055 Add X0, X31, 0
	056 Move W1, W22
	057 Call TriggerState.set_controlIndex, X0, X1
	058 Add X0, X31, 0
	059 Move W1, W21
	060 Call TriggerState.set_bindingIndex, X0, X1
	061 Add X0, X31, 0
	062 Move W1, W19
	063 Call TriggerState.set_interactionIndex, X0, X1
	064 Move V0, [X25+8]
	065 Move V1, [X31+2]
	066 Add X0, X31, 48
	067 Move W1, 1
	068 Move [X31+16], D0
	069 Move V0, [X31]
	070 Move V2, [X31+16]
	071 Move X2, X31
	072 Move [X31+92], V1
	073 Move [X31+60], V0
	074 Move [X31+76], V2
	075 Call InputInteractionContext.set_timerHasExpired, X0, X1
	076 Move V0, [X31+48]
	077 Move V1, [X31+64]
	078 Move V2, [X31+80]
	079 Move V3, [X31+96]
	080 Move [X31+112], V0
	081 Move [X31+120], V1
	082 Move [X31+144], V2
	083 Move [X31+152], V3
	084 Move V0, [X25+36]
	085 Move V1, [X25+4]
	086 Move W8, [X25+3]
	087 Move [X25+4], W31
	088 Subtract S0, S0, S1
	089 Move S1, W31
	090 And W8, W8, 254
	091 NotImplemented "Instruction FMAXNM not yet implemented."
	092 Move [X25+3], W8
	093 Move [X25+36], S0
	094 Move X8, [X20+32]
	095 Compare X8, 0
	096 JumpIfEqual {143}
	097 Move W9, [X8+24]
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Move X9, W19
	100 Add X8, X8, X9
	101 Move X19, [X8+32]
	102 Compare X19, 0
	103 JumpIfEqual {143}
	104 Move X10, 0x9F7000
	105 Move X8, [X19]
	106 Move X10, [X10+2960]
	107 NotImplemented "Instruction LDRH not yet implemented."
	108 Move X1, [X10]
	109 Compare X9, 0
	110 JumpIfEqual {117}
	111 Move X10, [X8+176]
	112 Add X10, X10, 8
	113 NotImplemented "Instruction LDUR not yet implemented."
	114 NotImplemented "Instruction CMP not yet implemented."
	115 Subtract X9, X9, 1
	116 Add X10, X10, 16
	117 Move X0, X19
	118 Move W2, W31
	119 Call 0x1C5D788
	120 NotImplemented "Instruction LDRSW not yet implemented."
	121 Add X8, X8, X9
	122 Add X0, X8, 312
	123 Move X8, [X0]
	124 Move X2, [X0+8]
	125 Add X1, X31, 112
	126 Move X0, X19
	127 NotImplemented "Instruction BLR not yet implemented."
	128 Move X8, [X24+40]
	129 Move X9, [X31+184]
	130 NotImplemented "Instruction CMP not yet implemented."
	131 Move X20, [X31+256]
	132 Move X19, [X31+264]
	133 Move X22, [X31+240]
	134 Move X21, [X31+248]
	135 Move X24, [X31+224]
	136 Move X23, [X31+232]
	137 Move X30, [X31+208]
	138 Move X25, [X31+216]
	139 Move X29, [X31+200]
	140 Move V8, [X31+192]
	141 Add X31, X31, 272
	142 Return 
	143 Call 0x1C17F20
	144 Call 0x1C17F28
	145 Call 0x3EB2B20

Method: System.Void SetTotalTimeoutCompletionTime(System.Single seconds, ref UnityEngine.InputSystem.InputActionState/TriggerState trigger)

Disassembly:
	0x0375029C LDR V8, [X31], #0x40
	0x037502A0 RET
	0x037502A4 BL 0x1C16F20
	0x037502A8 BL 0x1C16F28
	0x037502AC LDR W8, [X0 + 0x54]
	0x037502B0 ADD W9, W1, 0x1
	0x037502B4 CMP W9, W8
	0x037502B8 B.GE 0x375030C
	0x037502BC LDR X10, [X0 + 0x68]
	0x037502C0 MOVN X11, 0x80100000
	0x037502C4 SXTW X12, W9
	0x037502C8 FMOV D0, X11

ISIL:
	001 NotImplemented "Instruction LDRH not yet implemented."
	002 Move X9, [X0+112]
	003 Move W10, 0xFFFF
	004 Move TEMP, 47
	005 Not TEMP
	006 Move X11, TEMP
	007 Add X12, X8, X8
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Move X8, X12
	010 ShiftRight X8, 60
	011 And X8, X8, 0x7FFFFFF
	012 NotImplemented "Instruction CSEL not yet implemented."
	013 Add X8, X8, X9
	014 Move [X8+32], W31
	015 Move [X8+36], S0
	016 Return 

Method: System.Void StartTimeout(System.Single seconds, ref UnityEngine.InputSystem.InputActionState/TriggerState trigger)

Disassembly:
	0x0374DD20 MOV X21, X31
	0x0374DD24 LDR X8, [X19 + 0x68]
	0x0374DD28 ADD X24, X8, X21, 0x5, LSL
	0x0374DD2C LDRB W25, [X24 + 0x4]
	0x0374DD30 TBZ X25, 0x4, 0x374DDF8
	0x0374DD34 LDRB W26, [X24]
	0x0374DD38 AND W8, W25, 0xFFFFFFEF
	0x0374DD3C STRB W8, [X24 + 0x4]
	0x0374DD40 CBZ X26, 0x374DDF8
	0x0374DD44 LDRH W22, [X24 + 0xE]
	0x0374DD48 MOV W27, W31
	0x0374DD4C LDR X8, [X19 + 0x18]
	0x0374DD50 CBZ X8, 0x374DE30
	0x0374DD54 LDR W9, [X8 + 0x18]
	0x0374DD58 CMP X22, X9
	0x0374DD5C B.CS 0x374DE34
	0x0374DD60 ADD X8, X8, X22, 0x3, LSL
	0x0374DD64 LDR X23, [X8 + 0x20]
	0x0374DD68 MOV X0, X19
	0x0374DD6C MOV W1, W21
	0x0374DD70 MOV W2, W22
	0x0374DD74 BL 0x374D048
	0x0374DD78 TBNZ X0, 0x0, 0x374DDEC
	0x0374DD7C MOV X0, X23
	0x0374DD80 MOV X1, X31
	0x0374DD84 BL 0x377394C
	0x0374DD88 TBNZ X0, 0x0, 0x374DDEC
	0x0374DD8C CBZ X23, 0x374DE30
	0x0374DD90 MOV X0, X23
	0x0374DD94 MOV X1, X31
	0x0374DD98 BL 0x377240C
	0x0374DD9C MOV X0, X23
	0x0374DDA0 MOV X1, X31
	0x0374DDA4 BL 0x3773684
	0x0374DDA8 TBZ X0, 0x0, 0x374DDC4
	0x0374DDAC LDR V0, [X24 + 0x10]
	0x0374DDB0 FCMP D0, 0x0
	0x0374DDB4 B.EQ 0x374DDC0
	0x0374DDB8 FCMP D0, D8
	0x0374DDBC B.LE 0x374DDC4
	0x0374DDC0 STR D8, [X24 + 0x10]
	0x0374DDC4 AND W8, W25, 0x4
	0x0374DDC8 AND W8, W27, W8, 0x2
	0x0374DDCC TBNZ X8, 0x0, 0x374DDE8
	0x0374DDD0 CBZ X20, 0x374DE30
	0x0374DDD4 MOV X0, X20
	0x0374DDD8 MOV X1, X23
	0x0374DDDC MOV X2, X19
	0x0374DDE0 MOV X3, X31
	0x0374DDE4 BL 0x37CC9E8
	0x0374DDE8 MOVZ W27, 0x1
	0x0374DDEC SUBS X26, X26, 0x1
	0x0374DDF0 ADD X22, X22, 0x1
	0x0374DDF4 B.NE 0x374DD4C
	0x0374DDF8 LDRSW X8, [X19 + 0x54]
	0x0374DDFC ADD X21, X21, 0x1
	0x0374DE00 CMP X21, X8
	0x0374DE04 B.LT 0x374DD24
	0x0374DE08 CBZ X20, 0x374DE30
	0x0374DE0C MOV X0, X20
	0x0374DE10 LDP X20, X19, [X31 + 0x50]
	0x0374DE14 LDP X22, X21, [X31 + 0x40]
	0x0374DE18 LDP X24, X23, [X31 + 0x30]
	0x0374DE1C LDP X26, X25, [X31 + 0x20]
	0x0374DE20 LDP X30, X27, [X31 + 0x10]
	0x0374DE24 MOV X1, X31
	0x0374DE28 LDR V8, [X31], #0x60
	0x0374DE2C B 0x37CCAD8
	0x0374DE30 BL 0x1C16F20
	0x0374DE34 BL 0x1C16F28
	0x0374DE38 LDRB W8, [X0 + 0x4]
	0x0374DE3C UBFM W0, W8, 0x4, 0x4
	0x0374DE40 RET
	0x0374DE44 UBFM X8, X3, 0x18, 0x27
	0x0374DE48 MOV X4, X2
	0x0374DE4C AND W2, W3, 0xFFFFFF
	0x0374DE50 UBFM X1, X3, 0x28, 0x2F
	0x0374DE54 MOV W3, W8
	0x0374DE58 B 0x374DE78
	0x0374DE5C AND W8, W1, 0xFFFFFF
	0x0374DE60 UBFM X9, X1, 0x18, 0x27
	0x0374DE64 UBFM X10, X1, 0x28, 0x2F
	0x0374DE68 STR W8, [X3]
	0x0374DE6C STR W9, [X4]
	0x0374DE70 STR W10, [X2]
	0x0374DE74 RET

ISIL:
	001 Move [X31-96], D9
	002 Move [X31-88], D8
	003 Move [X31+16], X30
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X22, 0xC94000
	014 Move X21, 0x9CF000
	015 Move W8, [X22+3493]
	016 Move X21, [X21+624]
	017 Move X20, X1
	018 Move V8, V0
	019 Move X19, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {29}
	024 Move X0, 0x9CF000
	025 Move X0, [X0+624]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X22+3493], W8
	029 Move X0, [X21]
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {35}
	033 Call 0x1C17DFC
	034 Move X0, [X21]
	035 NotImplemented "Instruction LDRH not yet implemented."
	036 Move X8, [X19+24]
	037 Move W10, 0xFFFF
	038 NotImplemented "Instruction CMP not yet implemented."
	039 NotImplemented "Instruction CSINV not yet implemented."
	040 Compare X8, 0
	041 JumpIfEqual {107}
	042 Move W10, [X8+24]
	043 NotImplemented "Instruction CMP not yet implemented."
	044 NotImplemented "Instruction LDRH not yet implemented."
	045 Move W12, 0xFFFF
	046 Move X25, W9
	047 Move W13, 1
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X12, [X19+112]
	050 Move X10, [X0+184]
	051 NotImplemented "Instruction BFM not yet implemented."
	052 Move X9, [X19+168]
	053 Add X8, X8, X25
	054 NotImplemented "Instruction CSINV not yet implemented."
	055 Move X22, [X8+32]
	056 Add W8, W21, W21
	057 Move W8, W8
	058 ShiftRight W8, 28
	059 And W8, W8, 0x7FFFFFF
	060 Add X24, X12, W8
	061 Move V9, [X20+8]
	062 Move W26, [X20+2]
	063 Move X23, [X10]
	064 NotImplemented "Instruction LDRH not yet implemented."
	065 Move W8, [X24+3]
	066 NotImplemented "Instruction LDRH not yet implemented."
	067 Move TEMP, X8
	068 And TEMP, TEMP, 1
	069 Compare TEMP, 1
	070 JumpIfNotEqual {74}
	071 Move X0, X19
	072 Move W1, W21
	073 Call InputActionState.StopTimeout, X0, X1
	074 Compare X23, 0
	075 JumpIfEqual {107}
	076 Or X8, X25, X26
	077 Or X8, X8, X20
	078 NotImplemented "Instruction FCVT not yet implemented."
	079 Or X20, X8, X27
	080 Add D0, D9, D0
	081 Move X0, X23
	082 Move X1, X22
	083 Move X2, X19
	084 Move X3, X20
	085 Move W4, W21
	086 Move X5, X31
	087 Call InputManager.AddStateChangeMonitorTimeout, X0, X1, X2, V0, X3, X4
	088 Move W8, [X24+3]
	089 Move [X24+16], D9
	090 Move [X24+4], S8
	091 Move [X24+40], X20
	092 Or W8, W8, 1
	093 Move [X24+3], W8
	094 Move X20, [X31+80]
	095 Move X19, [X31+88]
	096 Move X22, [X31+64]
	097 Move X21, [X31+72]
	098 Move X24, [X31+48]
	099 Move X23, [X31+56]
	100 Move X26, [X31+32]
	101 Move X25, [X31+40]
	102 Move X30, [X31+16]
	103 Move X27, [X31+24]
	104 Move D9, [X31+96]
	105 Move D8, [X31+104]
	106 Return 
	107 Call 0x1C17F20
	108 Call 0x1C17F28

Method: System.Void StopTimeout(System.Int32 interactionIndex)

Disassembly:
	0x037502CC ADD X10, X10, X12, 0x5, LSL
	0x037502D0 FMOV D1, X31
	0x037502D4 LDRB W11, [X10 + 0x4]
	0x037502D8 TBZ X11, 0x3, 0x3750314
	0x037502DC LDRB W11, [X10 + 0x5]
	0x037502E0 CMP W11, W2
	0x037502E4 B.NE 0x37502F8
	0x037502E8 LDR V2, [X10 + 0x10]
	0x037502EC FCMP D2, D0
	0x037502F0 FCCMP D2, D1, 0x4, MI
	0x037502F4 FCSEL D0, D2, D0, NE
	0x037502F8 ADD W9, W9, 0x1
	0x037502FC CMP W9, W8
	0x03750300 ADD X10, X10, 0x20
	0x03750304 B.LT 0x37502D4
	0x03750308 B 0x3750314
	0x0375030C MOVN X8, 0x80100000
	0x03750310 FMOV D0, X8
	0x03750314 MOVN X8, 0x80100000
	0x03750318 FMOV D1, X8
	0x0375031C FCMP D0, D1
	0x03750320 FMOV D1, -1
	0x03750324 FCSEL D0, D0, D1, NE
	0x03750328 RET
	0x0375032C STP D9, D8, [X31 - 0x50]!
	0x03750330 STP X30, X25, [X31 + 0x10]
	0x03750334 STP X24, X23, [X31 + 0x20]
	0x03750338 STP X22, X21, [X31 + 0x30]
	0x0375033C STP X20, X19, [X31 + 0x40]
	0x03750340 LDR W8, [X0 + 0x54]
	0x03750344 ADD W22, W1, 0x1
	0x03750348 CMP W22, W8
	0x0375034C B.GE 0x3750408
	0x03750350 MOVN W9, 0x800000
	0x03750354 MOV W19, W4
	0x03750358 MOV X20, X3
	0x0375035C MOV X21, X0
	0x03750360 MOV W23, W2
	0x03750364 FMOV S9, W9
	0x03750368 LDR X9, [X21 + 0x68]
	0x0375036C SXTW X10, W22
	0x03750370 ADD X9, X9, X10, 0x5, LSL
	0x03750374 LDRB W10, [X9 + 0x4]
	0x03750378 TBZ X10, 0x3, 0x3750410
	0x0375037C LDRB W10, [X9 + 0x5]
	0x03750380 CMP W10, W23
	0x03750384 B.NE 0x37503F8
	0x03750388 LDRB W25, [X9]
	0x0375038C CBZ X25, 0x37503F8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xC91000
	007 Move X21, 0x9CC000
	008 Move W8, [X22+3494]
	009 Move X21, [X21+624]
	010 Move W19, W1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x9CC000
	017 Move X0, [X0+624]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+3494], W8
	021 Move X0, [X21]
	022 Move X22, [X20+112]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {28}
	026 Call 0x1C17DFC
	027 Move X0, [X21]
	028 Move X8, [X0+184]
	029 Move X0, [X8]
	030 Compare X0, 0
	031 JumpIfEqual {60}
	032 Move W8, 48
	033 NotImplemented "Instruction SMADDL not yet implemented."
	034 Move X2, [X21+40]
	035 Move X1, X20
	036 Move W3, W19
	037 Move X4, X31
	038 Call InputManager.RemoveStateChangeMonitorTimeout, X0, X1, X2, X3
	039 Move V0, [X21+4]
	040 Move S1, [X21+32]
	041 Move S2, [X21+36]
	042 Move W8, [X21+3]
	043 Move S3, W31
	044 Move [X21+4], W31
	045 Add S1, S1, S0
	046 Subtract S0, S2, S0
	047 And W8, W8, 254
	048 NotImplemented "Instruction FMAXNM not yet implemented."
	049 Move [X21+16], X31
	050 Move [X21+3], W8
	051 Move [X21+32], S1
	052 Move [X21+40], S0
	053 Move [X21+40], X31
	054 Move X20, [X31+32]
	055 Move X19, [X31+40]
	056 Move X22, [X31+16]
	057 Move X21, [X31+24]
	058 Move X30, [X31+48]
	059 Return 
	060 Call 0x1C17F20

Method: System.Void ChangePhaseOfInteraction(UnityEngine.InputSystem.InputActionPhase newPhase, ref UnityEngine.InputSystem.InputActionState/TriggerState trigger, UnityEngine.InputSystem.InputActionPhase phaseAfterPerformed = 1, System.Boolean processNextInteractionOnCancel = True)

Disassembly:
	0x03750390 LDRH W24, [X9 + 0xE]
	0x03750394 LDR X8, [X21 + 0x18]
	0x03750398 CBZ X8, 0x3750438
	0x0375039C LDR W9, [X8 + 0x18]
	0x037503A0 CMP X24, X9
	0x037503A4 B.CS 0x375043C
	0x037503A8 ADD X8, X8, X24, 0x3, LSL
	0x037503AC LDR X0, [X8 + 0x20]
	0x037503B0 CBZ X0, 0x3750438
	0x037503B4 MOV X1, X31
	0x037503B8 BL 0x377240C
	0x037503BC FCMP S0, S9
	0x037503C0 B.MI 0x37503E8
	0x037503C4 MOVZ W5, 0x1
	0x037503C8 MOV X0, X21
	0x037503CC MOV W1, W22
	0x037503D0 MOV W2, W24
	0x037503D4 MOV X3, X20
	0x037503D8 MOV W4, W19
	0x037503DC MOV V8.16B, V0.16B
	0x037503E0 BL 0x3750050
	0x037503E4 MOV V9.16B, V8.16B
	0x037503E8 SUBS X25, X25, 0x1
	0x037503EC ADD X24, X24, 0x1
	0x037503F0 B.NE 0x3750394
	0x037503F4 LDR W8, [X21 + 0x54]
	0x037503F8 ADD W22, W22, 0x1
	0x037503FC CMP W22, W8
	0x03750400 B.LT 0x3750368
	0x03750404 B 0x3750410
	0x03750408 MOVN W8, 0x800000
	0x0375040C FMOV S9, W8
	0x03750410 MOVN W8, 0x800000
	0x03750414 LDP X20, X19, [X31 + 0x40]
	0x03750418 LDP X22, X21, [X31 + 0x30]
	0x0375041C LDP X24, X23, [X31 + 0x20]
	0x03750420 LDP X30, X25, [X31 + 0x10]
	0x03750424 FMOV S0, W8
	0x03750428 FCMP S9, S0
	0x0375042C CSET W0, GT
	0x03750430 LDP D9, D8, [X31], #0x50
	0x03750434 RET
	0x03750438 BL 0x1C16F20
	0x0375043C BL 0x1C16F28
	0x03750440 STP D9, D8, [X31 - 0x50]!
	0x03750444 STR X30, [X31 + 0x10]
	0x03750448 STP X24, X23, [X31 + 0x20]
	0x0375044C STP X22, X21, [X31 + 0x30]
	0x03750450 STP X20, X19, [X31 + 0x40]
	0x03750454 LDR W8, [X0 + 0x54]
	0x03750458 ADD W20, W1, 0x1
	0x0375045C CMP W20, W8
	0x03750460 B.GE 0x3750514
	0x03750464 MOVN W9, 0x800000
	0x03750468 MOV X19, X0
	0x0375046C MOV W21, W2
	0x03750470 MOV X22, X31
	0x03750474 FMOV S9, W9
	0x03750478 LDR X9, [X19 + 0x68]
	0x0375047C SXTW X10, W20
	0x03750480 ADD X9, X9, X10, 0x5, LSL
	0x03750484 LDRB W10, [X9 + 0x4]
	0x03750488 TBZ X10, 0x3, 0x3750518
	0x0375048C LDRB W10, [X9 + 0x5]
	0x03750490 CMP W10, W21
	0x03750494 B.NE 0x3750504
	0x03750498 LDRB W24, [X9]
	0x0375049C CBZ X24, 0x3750504
	0x037504A0 LDRH W23, [X9 + 0xE]
	0x037504A4 LDR X8, [X19 + 0x18]
	0x037504A8 CBZ X8, 0x3750534
	0x037504AC LDR W9, [X8 + 0x18]
	0x037504B0 CMP X23, X9
	0x037504B4 B.CS 0x3750538
	0x037504B8 ADD X8, X8, X23, 0x3, LSL
	0x037504BC LDR X0, [X8 + 0x20]
	0x037504C0 CBZ X0, 0x3750534
	0x037504C4 MOV X1, X31
	0x037504C8 BL 0x377240C
	0x037504CC FCMP S0, S9
	0x037504D0 B.MI 0x37504F4
	0x037504D4 MOVZ W3, 0x1
	0x037504D8 MOV X0, X19
	0x037504DC MOV W1, W20
	0x037504E0 MOV W2, W23
	0x037504E4 MOV V8.16B, V0.16B
	0x037504E8 BL 0x375053C
	0x037504EC MOV X22, X0
	0x037504F0 MOV V9.16B, V8.16B
	0x037504F4 SUBS X24, X24, 0x1
	0x037504F8 ADD X23, X23, 0x1
	0x037504FC B.NE 0x37504A4
	0x03750500 LDR W8, [X19 + 0x54]
	0x03750504 ADD W20, W20, 0x1
	0x03750508 CMP W20, W8
	0x0375050C B.LT 0x3750478
	0x03750510 B 0x3750518
	0x03750514 MOV X22, X31
	0x03750518 MOV X0, X22
	0x0375051C LDP X20, X19, [X31 + 0x40]
	0x03750520 LDP X22, X21, [X31 + 0x30]
	0x03750524 LDP X24, X23, [X31 + 0x20]
	0x03750528 LDR X30, [X31 + 0x10]
	0x0375052C LDP D9, D8, [X31], #0x50
	0x03750530 RET
	0x03750534 BL 0x1C16F20
	0x03750538 BL 0x1C16F28
	0x0375053C SUB X31, X31, 0x40
	0x03750540 STP X30, X23, [X31 + 0x10]
	0x03750544 STP X22, X21, [X31 + 0x20]
	0x03750548 STP X20, X19, [X31 + 0x30]
	0x0375054C MOV W20, W1
	0x03750550 MOV X19, X0
	0x03750554 STP X31, X31, [X31]
	0x03750558 TBNZ X3, 0x0, 0x3750570
	0x0375055C LDR X8, [X19 + 0x68]
	0x03750560 SXTW X9, W20
	0x03750564 ADD X9, X8, X9, 0x5, LSL
	0x03750568 LDRB W10, [X9 + 0x4]
	0x0375056C TBNZ X10, 0x3, 0x37505B4
	0x03750570 ADDS W31, W2, 0x1
	0x03750574 B.EQ 0x37505AC
	0x03750578 LDR X8, [X19 + 0x18]
	0x0375057C CBZ X8, 0x37506A4
	0x03750580 LDR W9, [X8 + 0x18]
	0x03750584 CMP W9, W2
	0x03750588 B.LS 0x37506A8
	0x0375058C ADD X8, X8, W2, 0x3, SXTW
	0x03750590 LDR X21, [X8 + 0x20]
	0x03750594 MOV X1, X31
	0x03750598 MOV X0, X21
	0x0375059C BL 0x37725C8
	0x037505A0 MOV X1, X0
	0x037505A4 CBNZ X1, 0x3750620
	0x037505A8 B 0x375068C
	0x037505AC MOV X1, X31
	0x037505B0 B 0x375068C
	0x037505B4 LDRH W9, [X9 + 0x8]
	0x037505B8 MOVZ W10, 0xFFFF
	0x037505BC CMP W9, W10
	0x037505C0 CSINV W20, W9, W31, NE
	0x037505C4 MOV W9, W20
	0x037505C8 SXTW X9, W9
	0x037505CC ADD X8, X8, X9, 0x5, LSL
	0x037505D0 LDRH W9, [X8 + 0x8]
	0x037505D4 LDR X8, [X19 + 0x30]
	0x037505D8 CMP W9, W10
	0x037505DC CSINV W9, W9, W31, NE
	0x037505E0 CBZ X8, 0x37506A4
	0x037505E4 LDR W10, [X8 + 0x18]
	0x037505E8 CMP W9, W10
	0x037505EC B.CS 0x37506A8
	0x037505F0 ADD X8, X8, W9, 0x3, UXTW
	0x037505F4 LDR X0, [X8 + 0x20]
	0x037505F8 STR X19, [X31]
	0x037505FC STP W20, W31, [X31 + 0x8]
	0x03750600 CBZ X0, 0x37506A4
	0x03750604 LDR X8, [X0]
	0x03750608 ADD X1, X31, 0x0
	0x0375060C LDP X9, X2, [X8 + 0x1A8]
	0x03750610 BLR X9
	0x03750614 MOV X1, X0
	0x03750618 MOV X21, X31
	0x0375061C CBZ X1, 0x375068C
	0x03750620 LDR X8, [X19 + 0x68]
	0x03750624 SXTW X9, W20
	0x03750628 ADD X8, X8, X9, 0x5, LSL
	0x0375062C LDRB W20, [X8 + 0x2]
	0x03750630 CBZ X20, 0x375068C
	0x03750634 LDRH W8, [X8 + 0xA]
	0x03750638 MOVZ W9, 0xFFFF
	0x0375063C CMP W8, W9
	0x03750640 CSINV W22, W8, W31, NE
	0x03750644 SBFM X8, X22, 0x3D, 0x1F
	0x03750648 ADD X23, X8, 0x20
	0x0375064C LDR X8, [X19 + 0x28]
	0x03750650 CBZ X8, 0x37506A4
	0x03750654 LDR W9, [X8 + 0x18]
	0x03750658 CMP W22, W9
	0x0375065C B.CS 0x37506A8
	0x03750660 LDR X0, [X8, X23, LSL]
	0x03750664 CBZ X0, 0x37506A4
	0x03750668 LDR X8, [X0]
	0x0375066C MOV X2, X21
	0x03750670 LDP X9, X3, [X8 + 0x178]
	0x03750674 BLR X9
	0x03750678 MOV X1, X0
	0x0375067C ADD X23, X23, 0x8
	0x03750680 SUBS X20, X20, 0x1
	0x03750684 ADD W22, W22, 0x1
	0x03750688 B.NE 0x375064C
	0x0375068C LDP X20, X19, [X31 + 0x30]
	0x03750690 LDP X22, X21, [X31 + 0x20]
	0x03750694 LDP X30, X23, [X31 + 0x10]
	0x03750698 MOV X0, X1
	0x0375069C ADD X31, X31, 0x40
	0x037506A0 RET
	0x037506A4 BL 0x1C16F20
	0x037506A8 BL 0x1C16F28
	0x037506AC STR D8, [X31 - 0x40]!
	0x037506B0 STP X30, X23, [X31 + 0x10]
	0x037506B4 STP X22, X21, [X31 + 0x20]
	0x037506B8 STP X20, X19, [X31 + 0x30]
	0x037506BC ADRP X22, 0xC90000
	0x037506C0 LDRB W8, [X22 + 0xDAB]
	0x037506C4 MOV W19, W2
	0x037506C8 MOV W20, W1
	0x037506CC MOV X21, X0
	0x037506D0 TBNZ X8, 0x0, 0x37506F4
	0x037506D4 ADRP X0, 0x9CB000
	0x037506D8 LDR X0, [X0 + 0xC90]
	0x037506DC BL 0x1C16CF4
	0x037506E0 ADRP X0, 0x9F5000
	0x037506E4 LDR X0, [X0 + 0xC50]
	0x037506E8 BL 0x1C16CF4
	0x037506EC MOVZ W8, 0x1
	0x037506F0 STRB W8, [X22 + 0xDAB]
	0x037506F4 LDR X8, [X21 + 0x68]
	0x037506F8 SXTW X9, W20
	0x037506FC ADRP X23, 0x9CB000
	0x03750700 ADD X8, X8, X9, 0x5, LSL
	0x03750704 LDRB W9, [X8 + 0x4]
	0x03750708 ADRP X8, 0x9F5000
	0x0375070C LDR X8, [X8 + 0xC50]
	0x03750710 LDR X23, [X23 + 0xC90]
	0x03750714 TBNZ X9, 0x3, 0x3750764
	0x03750718 LDR X9, [X21 + 0x18]
	0x0375071C CBZ X9, 0x37507D4
	0x03750720 LDR W10, [X9 + 0x18]
	0x03750724 CMP W10, W19
	0x03750728 B.LS 0x37507D8
	0x0375072C ADD X9, X9, W19, 0x3, SXTW
	0x03750730 LDR X22, [X9 + 0x20]
	0x03750734 CBZ X22, 0x3750764
	0x03750738 LDR X10, [X22]
	0x0375073C LDR X9, [X23]
	0x03750740 LDRB W12, [X10 + 0x130]
	0x03750744 LDRB W11, [X9 + 0x130]
	0x03750748 CMP W12, W11
	0x0375074C B.CC 0x3750764
	0x03750750 LDR X10, [X10 + 0xC8]
	0x03750754 ADD X10, X10, X11, 0x3, LSL
	0x03750758 LDUR X10, [X10 - 0x8]
	0x0375075C CMP X10, X9
	0x03750760 B.EQ 0x37507A4
	0x03750764 LDR X4, [X8]
	0x03750768 MOV X0, X21
	0x0375076C MOV W1, W20
	0x03750770 MOV W2, W19
	0x03750774 MOV W3, W31
	0x03750778 BL 0x21F9434
	0x0375077C LDR X8, [X23]
	0x03750780 LDR X8, [X8 + 0xB8]
	0x03750784 LDR V1, [X8]
	0x03750788 FCMP S0, S1
	0x0375078C LDP X20, X19, [X31 + 0x30]
	0x03750790 LDP X22, X21, [X31 + 0x20]
	0x03750794 LDP X30, X23, [X31 + 0x10]
	0x03750798 CSET W0, GE

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+112], D8
	003 Move [X31+120], X30
	004 Move [X31+128], X28
	005 Move [X31+136], X27
	006 Move [X31+144], X26
	007 Move [X31+152], X25
	008 Move [X31+160], X24
	009 Move [X31+168], X23
	010 Move [X31+176], X22
	011 Move [X31+184], X21
	012 Move [X31+192], X20
	013 Move [X31+200], X19
	014 NotImplemented "Instruction MRS not yet implemented."
	015 Move X8, [X26+40]
	016 NotImplemented "Instruction MOVI not yet implemented."
	017 Move W27, 0xFFFF
	018 Move W24, W4
	019 Move [X31+104], X8
	020 Move [X31+64], V0
	021 Move [X31+72], V0
	022 Move [X31+32], V0
	023 Move [X31+40], V0
	024 Move [X31], V0
	025 Move [X31+8], V0
	026 NotImplemented "Instruction LDRH not yet implemented."
	027 Move X9, [X0+112]
	028 NotImplemented "Instruction LDRH not yet implemented."
	029 Move W20, W3
	030 NotImplemented "Instruction CMP not yet implemented."
	031 NotImplemented "Instruction CSINV not yet implemented."
	032 Add W10, W8, W8
	033 Move W10, W10
	034 ShiftRight W10, 28
	035 And W10, W10, 0x7FFFFFF
	036 Add X22, X9, W10
	037 Move W9, [X22+3]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move X21, X2
	040 Move X19, X0
	041 Move W23, W1
	042 NotImplemented "Instruction CSINC not yet implemented."
	043 Move TEMP, X9
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfNotEqual {50}
	047 Move X0, X19
	048 Move W1, W8
	049 Call InputActionState.StopTimeout, X0, X1
	050 Move [X22+2], W23
	051 NotImplemented "Instruction LDRH not yet implemented."
	052 Move X0, X22
	053 NotImplemented "Instruction CMP not yet implemented."
	054 NotImplemented "Instruction CSINV not yet implemented."
	055 Call InteractionState.set_triggerControlIndex, X0, X1
	056 Move V0, [X21+16]
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move [X22+8], D0
	059 Move V0, [X21+8]
	060 Move [X22+24], D0
	061 Move X8, [X19+104]
	062 Move W9, 0xFFFF
	063 Add X8, X8, X28
	064 NotImplemented "Instruction LDRH not yet implemented."
	065 NotImplemented "Instruction CMP not yet implemented."
	066 NotImplemented "Instruction CSINV not yet implemented."
	067 Move X8, [X19+96]
	068 Move W9, 48
	069 NotImplemented "Instruction SMADDL not yet implemented."
	070 Move W9, [X8]
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move X0, X19
	073 Move W1, W23
	074 Move X2, X21
	075 Move W3, W25
	076 Call InputActionState.ChangePhaseOfAction, X0, X1, X2, X3
	077 Move TEMP, X0
	078 And TEMP, TEMP, 1
	079 Compare TEMP, 1
	080 JumpIfEqual {166}
	081 NotImplemented "Instruction LDRH not yet implemented."
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Move X28, X28
	084 ShiftRight X28, 59
	085 And X28, X28, 0x3FFFFFF
	086 NotImplemented "Instruction LDRH not yet implemented."
	087 Move W10, 0xFFFF
	088 NotImplemented "Instruction CMP not yet implemented."
	089 NotImplemented "Instruction CSINV not yet implemented."
	090 NotImplemented "Instruction CMP not yet implemented."
	091 NotImplemented "Instruction CSINV not yet implemented."
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Move W1, 4
	094 Move W3, 1
	095 Move X0, X19
	096 Move X2, X21
	097 Call InputActionState.ChangePhaseOfAction, X0, X1, X2, X3
	098 Move TEMP, X0
	099 And TEMP, TEMP, 1
	100 Compare TEMP, 1
	101 JumpIfNotEqual {190}
	102 Move TEMP, X24
	103 And TEMP, TEMP, 1
	104 Compare TEMP, 1
	105 JumpIfNotEqual {190}
	106 Move X8, [X19+104]
	107 Add X9, X28, X8
	108 Move W8, [X9+1]
	109 Compare X8, 0
	110 JumpIfEqual {166}
	111 NotImplemented "Instruction LDRH not yet implemented."
	112 NotImplemented "Instruction LDRH not yet implemented."
	113 Move W11, 0xFFFF
	114 NotImplemented "Instruction CMP not yet implemented."
	115 NotImplemented "Instruction CSINV not yet implemented."
	116 NotImplemented "Instruction CMP not yet implemented."
	117 NotImplemented "Instruction CSINV not yet implemented."
	118 Add X10, X24, X24
	119 Move X25, X10
	120 ShiftRight X25, 60
	121 And X25, X25, 0x7FFFFFF
	122 NotImplemented "Instruction CMP not yet implemented."
	123 Move X10, [X19+112]
	124 Add X11, X25, X10
	125 Move W11, [X11+2]
	126 And W11, W11, 254
	127 NotImplemented "Instruction CMP not yet implemented."
	128 Add X24, X24, 1
	129 Subtract X8, X8, 1
	130 Add X25, X25, 48
	131 NotImplemented "Instruction LDRH not yet implemented."
	132 Move W10, 0xFFFF
	133 NotImplemented "Instruction CMP not yet implemented."
	134 NotImplemented "Instruction CSINV not yet implemented."
	135 NotImplemented "Instruction CMP not yet implemented."
	136 NotImplemented "Instruction CSINV not yet implemented."
	137 NotImplemented "Instruction CMP not yet implemented."
	138 Move X0, X19
	139 Move W1, W23
	140 Move X2, X21
	141 Move W3, W25
	142 Call InputActionState.ChangePhaseOfAction, X0, X1, X2, X3
	143 Move TEMP, X0
	144 And TEMP, TEMP, 1
	145 Compare TEMP, 1
	146 JumpIfNotEqual {190}
	147 NotImplemented "Instruction CMP not yet implemented."
	148 Move X8, [X19+104]
	149 Add X8, X28, X8
	150 NotImplemented "Instruction LDRH not yet implemented."
	151 Move W25, [X8+1]
	152 Move W28, 0xFFFF
	153 NotImplemented "Instruction CMP not yet implemented."
	154 NotImplemented "Instruction CSINV not yet implemented."
	155 Compare W25, 0
	156 JumpIfEqual {167}
	157 NotImplemented "Instruction LDRH not yet implemented."
	158 NotImplemented "Instruction CMP not yet implemented."
	159 NotImplemented "Instruction CSINV not yet implemented."
	160 NotImplemented "Instruction CMP not yet implemented."
	161 Move X0, X19
	162 Move W1, W24
	163 Call InputActionState.ResetInteractionState, X0, X1
	164 Subtract W25, W25, 1
	165 Add W24, W24, 1
	166 NotImplemented "Instruction CMP not yet implemented."
	167 Move X8, [X19+96]
	168 Add W9, W27, W27
	169 Move W9, W9
	170 ShiftRight W9, 28
	171 And W9, W9, 0x7FFFFFF
	172 Move W10, 0xFFFF
	173 Add X8, X8, W9
	174 NotImplemented "Instruction LDRH not yet implemented."
	175 NotImplemented "Instruction LDRH not yet implemented."
	176 NotImplemented "Instruction CMP not yet implemented."
	177 NotImplemented "Instruction CSINV not yet implemented."
	178 NotImplemented "Instruction CMP not yet implemented."
	179 NotImplemented "Instruction CSINV not yet implemented."
	180 NotImplemented "Instruction CMP not yet implemented."
	181 NotImplemented "Instruction CMP not yet implemented."
	182 Move [X22+2], W20
	183 NotImplemented "Instruction CMP not yet implemented."
	184 NotImplemented "Instruction LDRH not yet implemented."
	185 Move W9, 0xFFFF
	186 NotImplemented "Instruction CMP not yet implemented."
	187 NotImplemented "Instruction CSINV not yet implemented."
	188 Move X0, X19
	189 Call InputActionState.ResetInteractionState, X0, X1
	190 Move X8, [X26+40]
	191 Move X9, [X31+104]
	192 NotImplemented "Instruction CMP not yet implemented."
	193 Move X20, [X31+192]
	194 Move X19, [X31+200]
	195 Move X22, [X31+176]
	196 Move X21, [X31+184]
	197 Move X24, [X31+160]
	198 Move X23, [X31+168]
	199 Move X26, [X31+144]
	200 Move X25, [X31+152]
	201 Move X28, [X31+128]
	202 Move X27, [X31+136]
	203 Move X30, [X31+120]
	204 Move V8, [X31+112]
	205 Add X31, X31, 208
	206 Return 
	207 Add X8, X10, X25
	208 NotImplemented "Instruction MOVI not yet implemented."
	209 Move W9, 2
	210 Move V8, [X8+8]
	211 Move [X31+16], V0
	212 Move [X31+24], V0
	213 Move [X31], V0
	214 Move [X31], W9
	215 NotImplemented "Instruction LDRH not yet implemented."
	216 Move W9, 0xFFFF
	217 Add X0, X31, 0
	218 NotImplemented "Instruction CMP not yet implemented."
	219 NotImplemented "Instruction CSINV not yet implemented."
	220 Call TriggerState.set_controlIndex, X0, X1
	221 NotImplemented "Instruction LDRH not yet implemented."
	222 Add X0, X31, 0
	223 Call TriggerState.set_bindingIndex, X0, X1
	224 Add X0, X31, 0
	225 Move W1, W24
	226 Call TriggerState.set_interactionIndex, X0, X1
	227 Move W1, [X21+2]
	228 Add X0, X31, 0
	229 Call TriggerState.set_mapIndex, X0, X1
	230 Move [X31+8], D8
	231 Move [X31+16], D8
	232 Move V2, [X31+16]
	233 Move V0, [X31+32]
	234 Move V1, [X31]
	235 Add X2, X31, 48
	236 Move W1, 2
	237 Move W3, 1
	238 Move X0, X19
	239 Move [X31+64], V2
	240 Move [X31+72], V0
	241 Move [X31+3], V1
	242 Call InputActionState.ChangePhaseOfAction, X0, X1, X2, X3
	243 Move TEMP, X0
	244 And TEMP, TEMP, 1
	245 Compare TEMP, 1
	246 JumpIfNotEqual {190}
	247 Move X8, [X19+112]
	248 Add X8, X8, X25
	249 Move W9, [X8+2]
	250 NotImplemented "Instruction CMP not yet implemented."
	251 NotImplemented "Instruction MOVI not yet implemented."
	252 Move [X31+16], V0
	253 Move [X31+24], V0
	254 Move [X31], V0
	255 Move [X31], W9
	256 NotImplemented "Instruction LDRH not yet implemented."
	257 Move W9, 0xFFFF
	258 Add X0, X31, 0
	259 NotImplemented "Instruction CMP not yet implemented."
	260 NotImplemented "Instruction CSINV not yet implemented."
	261 Call TriggerState.set_controlIndex, X0, X1
	262 NotImplemented "Instruction LDRH not yet implemented."
	263 Add X0, X31, 0
	264 Call TriggerState.set_bindingIndex, X0, X1
	265 Add X0, X31, 0
	266 Move W1, W24
	267 Call TriggerState.set_interactionIndex, X0, X1
	268 Move W1, [X21+2]
	269 Add X0, X31, 0
	270 Call TriggerState.set_mapIndex, X0, X1
	271 Move X8, [X19+112]
	272 Add X2, X31, 48
	273 Move W1, 3
	274 Move W3, 1
	275 Add X8, X8, X25
	276 Move V0, [X8+24]
	277 Move X0, X19
	278 Move [X31+8], D0
	279 Move [X31+16], D8
	280 Move V0, [X31]
	281 Move V2, [X31+16]
	282 Move V1, [X31+32]
	283 Move [X31+3], V0
	284 Move [X31+64], V2
	285 Move [X31+72], V1
	286 Call 0x3EB2B20

Method: System.Boolean ChangePhaseOfAction(UnityEngine.InputSystem.InputActionPhase newPhase, ref UnityEngine.InputSystem.InputActionState/TriggerState trigger, UnityEngine.InputSystem.InputActionPhase phaseAfterPerformedOrCanceled = 1)

Disassembly:
	0x0374E4B0 ADD X0, X31, 0x0
	0x0374E4B4 MOV W1, W23
	0x0374E4B8 STR D8, [X31 + 0x8]
	0x0374E4BC STRB W8, [X31]
	0x0374E4C0 BL 0x374CC60
	0x0374E4C4 ADD X0, X31, 0x0
	0x0374E4C8 MOV W1, W22
	0x0374E4CC BL 0x374CAD4
	0x0374E4D0 ADD X0, X31, 0x0
	0x0374E4D4 MOV W1, W21
	0x0374E4D8 BL 0x374CCC0
	0x0374E4DC ADD X0, X31, 0x0
	0x0374E4E0 MOV W1, W19
	0x0374E4E4 BL 0x374CB6C
	0x0374E4E8 LDR V0, [X25 + 0x8]
	0x0374E4EC LDR V1, [X31 + 0x2]
	0x0374E4F0 ADD X0, X31, 0x30
	0x0374E4F4 MOVZ W1, 0x1
	0x0374E4F8 STR D0, [X31 + 0x10]
	0x0374E4FC LDP V0, V2, [X31]
	0x0374E500 MOV X2, X31
	0x0374E504 STUR V1, [X31 + 0x5C]
	0x0374E508 STUR V0, [X31 + 0x3C]
	0x0374E50C STUR V2, [X31 + 0x4C]
	0x0374E510 BL 0x376C648
	0x0374E514 LDP V0, V1, [X31 + 0x30]
	0x0374E518 LDP V2, V3, [X31 + 0x50]
	0x0374E51C STP V0, V1, [X31 + 0x70]
	0x0374E520 STP V2, V3, [X31 + 0x90]
	0x0374E524 LDR V0, [X25 + 0x24]
	0x0374E528 LDR V1, [X25 + 0x4]
	0x0374E52C LDRB W8, [X25 + 0x3]
	0x0374E530 STR W31, [X25 + 0x4]
	0x0374E534 FSUB S0, S0, S1
	0x0374E538 FMOV S1, W31
	0x0374E53C AND W8, W8, 0xFE
	0x0374E540 FMAXNM S0, S0, S1
	0x0374E544 STRB W8, [X25 + 0x3]
	0x0374E548 STR S0, [X25 + 0x24]
	0x0374E54C LDR X8, [X20 + 0x20]
	0x0374E550 CBZ X8, 0x374E604
	0x0374E554 LDR W9, [X8 + 0x18]
	0x0374E558 CMP W9, W19
	0x0374E55C B.LS 0x374E608
	0x0374E560 SXTW X9, W19
	0x0374E564 ADD X8, X8, X9, 0x3, LSL
	0x0374E568 LDR X19, [X8 + 0x20]
	0x0374E56C CBZ X19, 0x374E604
	0x0374E570 ADRP X10, 0x9F7000
	0x0374E574 LDR X8, [X19]
	0x0374E578 LDR X10, [X10 + 0xB90]
	0x0374E57C LDRH W9, [X8 + 0x12E]
	0x0374E580 LDR X1, [X10]
	0x0374E584 CBZ X9, 0x374E5A8
	0x0374E588 LDR X10, [X8 + 0xB0]
	0x0374E58C ADD X10, X10, 0x8
	0x0374E590 LDUR X11, [X10 - 0x8]
	0x0374E594 CMP X11, X1
	0x0374E598 B.EQ 0x374E5B8
	0x0374E59C SUBS X9, X9, 0x1
	0x0374E5A0 ADD X10, X10, 0x10
	0x0374E5A4 B.NE 0x374E590
	0x0374E5A8 MOV X0, X19
	0x0374E5AC MOV W2, W31
	0x0374E5B0 BL 0x1C5C788
	0x0374E5B4 B 0x374E5C4
	0x0374E5B8 LDRSW X9, [X10]
	0x0374E5BC ADD X8, X8, X9, 0x4, LSL
	0x0374E5C0 ADD X0, X8, 0x138
	0x0374E5C4 LDP X8, X2, [X0]
	0x0374E5C8 ADD X1, X31, 0x70
	0x0374E5CC MOV X0, X19
	0x0374E5D0 BLR X8
	0x0374E5D4 LDR X8, [X24 + 0x28]
	0x0374E5D8 LDR X9, [X31 + 0xB8]
	0x0374E5DC CMP X8, X9
	0x0374E5E0 B.NE 0x374E60C
	0x0374E5E4 LDP X20, X19, [X31 + 0x100]
	0x0374E5E8 LDP X22, X21, [X31 + 0xF0]
	0x0374E5EC LDP X24, X23, [X31 + 0xE0]
	0x0374E5F0 LDP X30, X25, [X31 + 0xD0]
	0x0374E5F4 LDR X29, [X31 + 0xC8]
	0x0374E5F8 LDR V8, [X31 + 0xC0]
	0x0374E5FC ADD X31, X31, 0x110
	0x0374E600 RET
	0x0374E604 BL 0x1C16F20
	0x0374E608 BL 0x1C16F28
	0x0374E60C BL 0x3EB1B20
	0x0374E610 UBFM X0, X0, 0x30, 0x37
	0x0374E614 RET
	0x0374E618 LDRB W8, [X0 + 0x1]
	0x0374E61C ANDS W31, W1, 0x1
	0x0374E620 MOVZ W9, 0x2
	0x0374E624 CSEL W9, W9, W31, NE
	0x0374E628 AND W8, W8, 0xFFFFFFFD
	0x0374E62C ORR W8, W8, W9, 0x0
	0x0374E630 STRB W8, [X0 + 0x1]
	0x0374E634 RET
	0x0374E638 LDRB W8, [X0 + 0x1]
	0x0374E63C UBFM W0, W8, 0x5, 0x5
	0x0374E640 RET
	0x0374E644 LDRB W8, [X0 + 0x1]
	0x0374E648 ANDS W31, W1, 0x1
	0x0374E64C MOVZ W9, 0x20
	0x0374E650 CSEL W9, W9, W31, NE
	0x0374E654 AND W8, W8, 0xFFFFFFDF
	0x0374E658 ORR W8, W8, W9, 0x0
	0x0374E65C STRB W8, [X0 + 0x1]
	0x0374E660 RET
	0x0374E664 STP X30, X19, [X31 - 0x10]!
	0x0374E668 CBZ X1, 0x374E6A4
	0x0374E66C MOV X19, X0
	0x0374E670 MOV X0, X1
	0x0374E674 MOV X1, X31
	0x0374E678 BL 0x3801248
	0x0374E67C MOV W8, W0
	0x0374E680 CBZ W0, 0x374E698
	0x0374E684 LDR W9, [X19 + 0x18]
	0x0374E688 CMP W9, W8
	0x0374E68C B.NE 0x374E698
	0x0374E690 MOVZ W0, 0x1
	0x0374E694 B 0x374E6A8
	0x0374E698 MOV W0, W31
	0x0374E69C STR W8, [X19 + 0x18]
	0x0374E6A0 B 0x374E6A8
	0x0374E6A4 MOV W0, W31

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X8, [X0+104]
	009 NotImplemented "Instruction LDRH not yet implemented."
	010 Add X8, X8, X9
	011 NotImplemented "Instruction LDRH not yet implemented."
	012 Move W9, 0xFFFF
	013 NotImplemented "Instruction CMP not yet implemented."
	014 NotImplemented "Instruction CSINV not yet implemented."
	015 Move X8, [X0+96]
	016 Move W9, 48
	017 Move X22, X0
	018 NotImplemented "Instruction SMADDL not yet implemented."
	019 Move W8, [X19]
	020 Compare W8, 0
	021 JumpIfEqual {104}
	022 Move W10, [X19+1]
	023 Move W20, W3
	024 Move X21, X2
	025 Move W3, W1
	026 Or W9, W10, 16
	027 Move [X19+1], W9
	028 Move TEMP, X10
	029 And TEMP, TEMP, 2
	030 Compare TEMP, 2
	031 JumpIfNotEqual {34}
	032 NotImplemented "Instruction LDRSH not yet implemented."
	033 Add W31, W10, 1
	034 Subtract W24, W3, 3
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move W3, 2
	037 Move X0, X22
	038 Move W1, W23
	039 Move X2, X19
	040 Move X4, X21
	041 Call InputActionState.ChangePhaseOfActionInternal, X0, X1, X2, X3, X4
	042 Move W9, [X19+1]
	043 Move TEMP, X9
	044 And TEMP, TEMP, 16
	045 Compare TEMP, 16
	046 JumpIfNotEqual {93}
	047 Move W3, 3
	048 Move X0, X22
	049 Move W1, W23
	050 Move X2, X19
	051 Move X4, X21
	052 Call InputActionState.ChangePhaseOfActionInternal, X0, X1, X2, X3, X4
	053 Move W9, [X19+1]
	054 Move TEMP, X9
	055 And TEMP, TEMP, 16
	056 Compare TEMP, 16
	057 JumpIfNotEqual {93}
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move W3, 4
	060 Move X0, X22
	061 Move W1, W23
	062 Move X2, X19
	063 Move X4, X21
	064 Call InputActionState.ChangePhaseOfActionInternal, X0, X1, X2, X3, X4
	065 Move W9, [X19+1]
	066 Move TEMP, X9
	067 And TEMP, TEMP, 16
	068 Compare TEMP, 16
	069 JumpIfEqual {82}
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move X0, X22
	072 Move W1, W23
	073 Move X2, X19
	074 Move X4, X21
	075 Call InputActionState.ChangePhaseOfActionInternal, X0, X1, X2, X3, X4
	076 Move W9, [X19+1]
	077 Move TEMP, X9
	078 And TEMP, TEMP, 16
	079 Compare TEMP, 16
	080 JumpIfNotEqual {93}
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Move [X19], W20
	083 Move X0, X22
	084 Move W1, W23
	085 Move X2, X19
	086 Move X4, X21
	087 Call InputActionState.ChangePhaseOfActionInternal, X0, X1, X2, X3, X4
	088 Move W9, [X19+1]
	089 Move TEMP, X9
	090 And TEMP, TEMP, 16
	091 Compare TEMP, 16
	092 JumpIfEqual {96}
	093 Move W8, W31
	094 And W9, W9, 0xFFFFFFEF
	095 Move [X19+1], W9
	096 And W8, W9, 0xFFFFFFEF
	097 Move [X19+1], W8
	098 Move W9, [X19]
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Move W9, 0xFFFF
	101 And W8, W8, 0xEEEEEEEE
	102 NotImplemented "Instruction STRH not yet implemented."
	103 Move [X19+1], W8
	104 Move W8, 1
	105 Move X20, [X31+48]
	106 Move X19, [X31+56]
	107 Move X22, [X31+32]
	108 Move X21, [X31+40]
	109 Move X24, [X31+16]
	110 Move X23, [X31+24]
	111 Move W0, W8
	112 Move X30, [X31+64]
	113 Return X0
	114 NotImplemented "Instruction CMP not yet implemented."
	115 Call 0x3EB2AD0
	116 Move X20, [X0]
	117 Call 0x3EB2AE0
	118 Move W8, [X19+1]
	119 And W8, W8, 0xFFFFFFEF
	120 Move [X19+1], W8
	121 Compare X20, 0
	122 JumpIfEqual {98}
	123 Move X0, X20
	124 Call 0x1C17F18
	125 Move W8, [X19+1]
	126 And W8, W8, 0xFFFFFFEF
	127 Move [X19+1], W8
	128 Move W8, [X19+1]
	129 And W8, W8, 0xFFFFFFEF
	130 Move [X19+1], W8
	131 Compare X20, 0
	132 JumpIfNotEqual {134}
	133 Call 0x1D2D690
	134 Move X0, X20
	135 Call 0x1C17F18
	136 Call 0x1991590

Method: System.Void ChangePhaseOfActionInternal(System.Int32 actionIndex, UnityEngine.InputSystem.InputActionState/TriggerState* actionState, UnityEngine.InputSystem.InputActionPhase newPhase, ref UnityEngine.InputSystem.InputActionState/TriggerState trigger)

Disassembly:
	0x0375079C LDR V8, [X31], #0x40
	0x037507A0 RET
	0x037507A4 LDR X4, [X8]
	0x037507A8 MOV X0, X21
	0x037507AC MOV W1, W20
	0x037507B0 MOV W2, W19
	0x037507B4 MOV W3, W31
	0x037507B8 BL 0x21F9434
	0x037507BC MOV X0, X22
	0x037507C0 MOV X1, X31
	0x037507C4 MOV V8.16B, V0.16B
	0x037507C8 BL 0x3758994
	0x037507CC FCMP S8, S0
	0x037507D0 B 0x375078C
	0x037507D4 BL 0x1C16F20
	0x037507D8 BL 0x1C16F28
	0x037507DC STR X30, [X31 - 0x50]!
	0x037507E0 STP X26, X25, [X31 + 0x10]
	0x037507E4 STP X24, X23, [X31 + 0x20]
	0x037507E8 STP X22, X21, [X31 + 0x30]
	0x037507EC STP X20, X19, [X31 + 0x40]
	0x037507F0 ADRP X19, 0xC90000
	0x037507F4 ADRP X23, 0x9F5000
	0x037507F8 LDRB W8, [X19 + 0xDAC]
	0x037507FC LDR X23, [X23 + 0xC58]
	0x03750800 TBNZ X8, 0x0, 0x375086C
	0x03750804 ADRP X0, 0x9A4000
	0x03750808 LDR X0, [X0 + 0xE70]
	0x0375080C BL 0x1C16CF4
	0x03750810 ADRP X0, 0x9F5000
	0x03750814 LDR X0, [X0 + 0x2D8]
	0x03750818 BL 0x1C16CF4
	0x0375081C ADRP X0, 0x9F5000
	0x03750820 LDR X0, [X0 + 0xC60]
	0x03750824 BL 0x1C16CF4
	0x03750828 ADRP X0, 0x9F5000
	0x0375082C LDR X0, [X0 + 0xC68]
	0x03750830 BL 0x1C16CF4
	0x03750834 ADRP X0, 0x9F5000
	0x03750838 LDR X0, [X0 + 0xC70]
	0x0375083C BL 0x1C16CF4
	0x03750840 ADRP X0, 0x9F5000
	0x03750844 LDR X0, [X0 + 0xC78]
	0x03750848 BL 0x1C16CF4
	0x0375084C ADRP X0, 0x9F5000
	0x03750850 LDR X0, [X0 + 0xC80]
	0x03750854 BL 0x1C16CF4
	0x03750858 ADRP X0, 0x9F5000
	0x0375085C LDR X0, [X0 + 0xC58]
	0x03750860 BL 0x1C16CF4
	0x03750864 MOVZ W8, 0x1
	0x03750868 STRB W8, [X19 + 0xDAC]
	0x0375086C LDR X0, [X23]
	0x03750870 ADRP X24, 0x9F5000
	0x03750874 LDR W8, [X0 + 0xE0]
	0x03750878 LDR X24, [X24 + 0x2D8]
	0x0375087C CBNZ W8, 0x3750888
	0x03750880 BL 0x1C16DFC
	0x03750884 LDR X0, [X23]
	0x03750888 LDR X8, [X0 + 0xB8]
	0x0375088C LDR X9, [X24]
	0x03750890 LDR X20, [X8 + 0x8]
	0x03750894 LDR X19, [X9 + 0xB8]
	0x03750898 CBNZ X20, 0x37508EC
	0x0375089C LDR W8, [X0 + 0xE0]
	0x037508A0 CBNZ W8, 0x37508AC
	0x037508A4 BL 0x1C16DFC
	0x037508A8 LDR X0, [X23]
	0x037508AC ADRP X9, 0x9F5000
	0x037508B0 LDR X8, [X0 + 0xB8]
	0x037508B4 LDR X9, [X9 + 0xC70]
	0x037508B8 LDR X21, [X8]
	0x037508BC LDR X0, [X9]
	0x037508C0 BL 0x1C16F10
	0x037508C4 ADRP X8, 0x9F5000
	0x037508C8 LDR X8, [X8 + 0xC78]
	0x037508CC MOV X1, X21
	0x037508D0 MOV X3, X31
	0x037508D4 MOV X20, X0
	0x037508D8 LDR X2, [X8]
	0x037508DC BL 0x27239F0
	0x037508E0 LDR X0, [X23]
	0x037508E4 LDR X8, [X0 + 0xB8]
	0x037508E8 STR X20, [X8 + 0x8]
	0x037508EC LDR W8, [X0 + 0xE0]
	0x037508F0 CBNZ W8, 0x37508FC
	0x037508F4 BL 0x1C16DFC
	0x037508F8 LDR X0, [X23]
	0x037508FC LDR X8, [X0 + 0xB8]
	0x03750900 ADRP X26, 0x9F5000
	0x03750904 ADRP X25, 0x9F5000
	0x03750908 LDR X21, [X8 + 0x10]
	0x0375090C LDR X26, [X26 + 0xC68]
	0x03750910 LDR X25, [X25 + 0xC60]
	0x03750914 CBNZ X21, 0x3750968
	0x03750918 LDR W8, [X0 + 0xE0]
	0x0375091C CBNZ W8, 0x3750928
	0x03750920 BL 0x1C16DFC
	0x03750924 LDR X0, [X23]
	0x03750928 ADRP X9, 0x9A4000
	0x0375092C LDR X8, [X0 + 0xB8]
	0x03750930 LDR X9, [X9 + 0xE70]
	0x03750934 LDR X22, [X8]
	0x03750938 LDR X0, [X9]
	0x0375093C BL 0x1C16F10
	0x03750940 ADRP X8, 0x9F5000
	0x03750944 LDR X8, [X8 + 0xC80]
	0x03750948 MOV X1, X22
	0x0375094C MOV X3, X31
	0x03750950 MOV X21, X0
	0x03750954 LDR X2, [X8]
	0x03750958 BL 0x3314368
	0x0375095C LDR X8, [X23]
	0x03750960 LDR X8, [X8 + 0xB8]
	0x03750964 STR X21, [X8 + 0x10]
	0x03750968 LDR X0, [X26]
	0x0375096C BL 0x1C16F10
	0x03750970 LDR X4, [X25]
	0x03750974 MOV X1, X19
	0x03750978 MOV X2, X20
	0x0375097C MOV X3, X21
	0x03750980 MOV X22, X0
	0x03750984 BL 0x25D6640
	0x03750988 LDR X8, [X24]
	0x0375098C MOVZ W2, 0xB8
	0x03750990 MOV W1, W31
	0x03750994 LDR X0, [X8 + 0xB8]
	0x03750998 BL 0x3EB1B10
	0x0375099C MOV X0, X22
	0x037509A0 LDP X20, X19, [X31 + 0x40]
	0x037509A4 LDP X22, X21, [X31 + 0x30]
	0x037509A8 LDP X24, X23, [X31 + 0x20]
	0x037509AC LDP X26, X25, [X31 + 0x10]
	0x037509B0 LDR X30, [X31], #0x50
	0x037509B4 RET
	0x037509B8 SUB X31, X31, 0x50
	0x037509BC STR X30, [X31 + 0x10]
	0x037509C0 STP X24, X23, [X31 + 0x20]
	0x037509C4 STP X22, X21, [X31 + 0x30]
	0x037509C8 STP X20, X19, [X31 + 0x40]
	0x037509CC ADRP X19, 0xC90000
	0x037509D0 ADRP X21, 0x9F5000
	0x037509D4 LDRB W8, [X19 + 0xDAF]
	0x037509D8 LDR X21, [X21 + 0x2D8]
	0x037509DC TBNZ X8, 0x0, 0x3750A0C
	0x037509E0 ADRP X0, 0x9F5000
	0x037509E4 LDR X0, [X0 + 0xB28]
	0x037509E8 BL 0x1C16CF4
	0x037509EC ADRP X0, 0x9F5000
	0x037509F0 LDR X0, [X0 + 0xC88]
	0x037509F4 BL 0x1C16CF4
	0x037509F8 ADRP X0, 0x9F5000
	0x037509FC LDR X0, [X0 + 0x2D8]
	0x03750A00 BL 0x1C16CF4
	0x03750A04 MOVZ W8, 0x1
	0x03750A08 STRB W8, [X19 + 0xDAF]

ISIL:
	001 Move [X31-128], D10
	002 Move [X31+16], D9
	003 Move [X31+24], D8
	004 Move [X31+32], X29
	005 Move [X31+40], X30
	006 Move [X31+48], X28
	007 Move [X31+56], X27
	008 Move [X31+64], X26
	009 Move [X31+72], X25
	010 Move [X31+80], X24
	011 Move [X31+88], X23
	012 Move [X31+96], X22
	013 Move [X31+104], X21
	014 Move [X31+112], X20
	015 Move [X31+120], X19
	016 Move X24, 0xC91000
	017 Move W8, [X24+3495]
	018 Move X22, X4
	019 Move W21, W3
	020 Move X23, X2
	021 Move W19, W1
	022 Move X20, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {41}
	027 Move X0, 0x9F5000
	028 Move X0, [X0+3984]
	029 Call 0x1C17CF4
	030 Move X0, 0x9F6000
	031 Move X0, [X0+3096]
	032 Call 0x1C17CF4
	033 Move X0, 0x9F6000
	034 Move X0, [X0+3104]
	035 Call 0x1C17CF4
	036 Move X0, 0x9F6000
	037 Move X0, [X0+3112]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X24+3495], W8
	041 Move X25, X22
	042 Add X25, X25, 2
	043 Move W8, [X25]
	044 NotImplemented "Instruction CMP not yet implemented."
	045 NotImplemented "Instruction LDRH not yet implemented."
	046 Move [X31+8], W8
	047 Move X8, 0x9F5000
	048 NotImplemented "Instruction STRH not yet implemented."
	049 NotImplemented "Instruction LDUR not yet implemented."
	050 NotImplemented "Instruction LDUR not yet implemented."
	051 NotImplemented "Instruction LDUR not yet implemented."
	052 Move W27, [X23+1]
	053 Move X8, [X8+3984]
	054 Move X8, [X8]
	055 Move W29, [X23+32]
	056 Move S10, W31
	057 Move X8, [X8+184]
	058 Move W28, [X8]
	059 Move W8, 4
	060 Move V10, [X22+28]
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move X8, [X8]
	063 NotImplemented "Instruction LDRH not yet implemented."
	064 Move X9, [X20+168]
	065 Move W11, 2
	066 Move W12, 0xFFFF
	067 Move X8, [X8+184]
	068 Move TEMP, 1
	069 Not TEMP
	070 Move X13, TEMP
	071 NotImplemented "Instruction BFM not yet implemented."
	072 NotImplemented "Instruction CMP not yet implemented."
	073 NotImplemented "Instruction CSEL not yet implemented."
	074 NotImplemented "Instruction LDRH not yet implemented."
	075 Move W29, [X8]
	076 Move W28, [X23+36]
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Add X24, X20, 200
	079 Move X0, X24
	080 Move X1, X31
	081 Call InputEventPtr.get_valid, X0
	082 Move TEMP, X0
	083 And TEMP, TEMP, 1
	084 Compare TEMP, 1
	085 JumpIfNotEqual {90}
	086 Move W1, 1
	087 Move X0, X24
	088 Move X2, X31
	089 Call InputEventPtr.set_handled, X0, X1
	090 Move W8, 3
	091 Move W29, [X23+32]
	092 Move W28, [X23+36]
	093 NotImplemented "Instruction CMP not yet implemented."
	094 NotImplemented "Instruction FCSEL not yet implemented."
	095 Move W8, W21
	096 Or W9, W27, 1
	097 Move [X23], W8
	098 Move [X23+1], W9
	099 Move W9, [X31+8]
	100 NotImplemented "Instruction LDRH not yet implemented."
	101 Move [X23+8], D8
	102 Move [X23+16], D9
	103 Move [X23+24], W26
	104 Move [X23+28], S10
	105 NotImplemented "Instruction STRH not yet implemented."
	106 Move [X23+2], W9
	107 Move [X23+32], W29
	108 Move [X23+36], W28
	109 Move X9, [X20+16]
	110 Compare X9, 0
	111 JumpIfEqual {176}
	112 Move W10, [X25]
	113 Move W11, [X9+24]
	114 NotImplemented "Instruction CMP not yet implemented."
	115 Move W10, W10
	116 Add X9, X9, X10
	117 Move X2, [X9+32]
	118 Compare X2, 0
	119 JumpIfEqual {176}
	120 Move X9, [X20+184]
	121 Move W11, 48
	122 NotImplemented "Instruction MADD not yet implemented."
	123 Compare X10, 0
	124 JumpIfEqual {176}
	125 Move X9, [X2+40]
	126 Compare X9, 0
	127 JumpIfEqual {176}
	128 Move W10, [X10]
	129 Move W11, [X9+24]
	130 Subtract W10, W19, W10
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Add X9, X9, W10
	133 Move X9, [X9+32]
	134 NotImplemented "Instruction CMP not yet implemented."
	135 Move [X22], W8
	136 NotImplemented "Instruction CMP not yet implemented."
	137 NotImplemented "Instruction CMP not yet implemented."
	138 Compare X9, 0
	139 JumpIfEqual {176}
	140 Move X8, 0x9F6000
	141 Move X8, [X8+3096]
	142 Add X4, X9, 208
	143 Move W3, 2
	144 Compare X9, 0
	145 JumpIfEqual {176}
	146 Move X8, 0x9F6000
	147 Move X8, [X8+3112]
	148 Add X4, X9, 288
	149 Move W3, 4
	150 Compare X9, 0
	151 JumpIfEqual {176}
	152 Move X8, 0x9F6000
	153 Move X8, [X8+3104]
	154 Add X4, X9, 368
	155 Move W3, 3
	156 Move X5, [X8]
	157 Move X0, X20
	158 Move W1, W19
	159 Call InputActionState.CallActionListeners, X0, X1, X2, X3, X4, X5
	160 Move X20, [X31+112]
	161 Move X19, [X31+120]
	162 Move X22, [X31+96]
	163 Move X21, [X31+104]
	164 Move X24, [X31+80]
	165 Move X23, [X31+88]
	166 Move X26, [X31+64]
	167 Move X25, [X31+72]
	168 Move X28, [X31+48]
	169 Move X27, [X31+56]
	170 Move X29, [X31+32]
	171 Move X30, [X31+40]
	172 Move D9, [X31+16]
	173 Move D8, [X31+24]
	174 Move V10, [X31+128]
	175 Return 
	176 Call 0x1C17F20
	177 Call 0x1C17F28

Method: System.Void CallActionListeners(System.Int32 actionIndex, UnityEngine.InputSystem.InputActionMap actionMap, UnityEngine.InputSystem.InputActionPhase phase, ref UnityEngine.InputSystem.Utilities.CallbackArray`1<System.Action`1<UnityEngine.InputSystem.InputAction/CallbackContext>> listeners, System.String callbackName)

Disassembly:
	0x03750A20 CMP W22, 0x1
	0x03750A24 B.LT 0x3750B00
	0x03750A28 ADRP X23, 0x9F5000
	0x03750A2C ADRP X24, 0x9F5000
	0x03750A30 LDR X23, [X23 + 0xB28]
	0x03750A34 LDR X24, [X24 + 0xC88]
	0x03750A38 MOV W19, W31
	0x03750A3C MOV W20, W31
	0x03750A40 LDR X2, [X23]
	0x03750A44 MOV W1, W20
	0x03750A48 BL 0x2DE6188
	0x03750A4C STR X0, [X31 + 0x18]
	0x03750A50 ADD X0, X31, 0x18
	0x03750A54 MOV X1, X31
	0x03750A58 BL 0x32C05E4
	0x03750A5C TBZ X0, 0x0, 0x3750A98
	0x03750A60 ADD X0, X31, 0x18
	0x03750A64 MOV X1, X31
	0x03750A68 BL 0x32C05F4
	0x03750A6C CBZ X0, 0x3750A98
	0x03750A70 CMP W20, W19
	0x03750A74 B.EQ 0x3750A90
	0x03750A78 LDR X8, [X21]
	0x03750A7C LDR X2, [X31 + 0x18]
	0x03750A80 LDR X3, [X24]
	0x03750A84 MOV W1, W19
	0x03750A88 LDR X0, [X8 + 0xB8]
	0x03750A8C BL 0x2DE6224
	0x03750A90 ADD W19, W19, 0x1
	0x03750A94 B 0x3750AE8
	0x03750A98 ADD X0, X31, 0x18
	0x03750A9C MOV X1, X31
	0x03750AA0 BL 0x32C05E4
	0x03750AA4 TBZ X0, 0x0, 0x3750ACC
	0x03750AA8 LDR X8, [X21]
	0x03750AAC LDR X2, [X23]
	0x03750AB0 MOV W1, W20
	0x03750AB4 LDR X0, [X8 + 0xB8]
	0x03750AB8 BL 0x2DE6188
	0x03750ABC STR X0, [X31 + 0x8]
	0x03750AC0 ADD X0, X31, 0x8
	0x03750AC4 MOV X1, X31
	0x03750AC8 BL 0x32C0794
	0x03750ACC LDR X8, [X21]
	0x03750AD0 LDR X3, [X24]
	0x03750AD4 MOV W1, W20
	0x03750AD8 MOV X2, X31
	0x03750ADC LDR X0, [X8 + 0xB8]
	0x03750AE0 STR X31, [X31 + 0x8]
	0x03750AE4 BL 0x2DE6224
	0x03750AE8 LDR X8, [X21]
	0x03750AEC ADD W20, W20, 0x1
	0x03750AF0 CMP W22, W20
	0x03750AF4 LDR X0, [X8 + 0xB8]
	0x03750AF8 B.NE 0x3750A40
	0x03750AFC B 0x3750B04
	0x03750B00 MOV W19, W31
	0x03750B04 STR W19, [X0]
	0x03750B08 LDP X20, X19, [X31 + 0x40]
	0x03750B0C LDP X22, X21, [X31 + 0x30]
	0x03750B10 LDP X24, X23, [X31 + 0x20]
	0x03750B14 LDR X30, [X31 + 0x10]
	0x03750B18 ADD X31, X31, 0x50
	0x03750B1C RET
	0x03750B20 SUB X31, X31, 0x40
	0x03750B24 STP X30, X23, [X31 + 0x10]
	0x03750B28 STP X22, X21, [X31 + 0x20]
	0x03750B2C STP X20, X19, [X31 + 0x30]
	0x03750B30 ADRP X19, 0xC90000
	0x03750B34 ADRP X20, 0x9F5000
	0x03750B38 LDRB W8, [X19 + 0xDB2]
	0x03750B3C LDR X20, [X20 + 0x2D8]
	0x03750B40 TBNZ X8, 0x0, 0x3750B7C
	0x03750B44 ADRP X0, 0x9F5000
	0x03750B48 LDR X0, [X0 + 0xC90]
	0x03750B4C BL 0x1C16CF4
	0x03750B50 ADRP X0, 0x9F5000
	0x03750B54 LDR X0, [X0 + 0xC98]
	0x03750B58 BL 0x1C16CF4
	0x03750B5C ADRP X0, 0x9F5000
	0x03750B60 LDR X0, [X0 + 0xB28]
	0x03750B64 BL 0x1C16CF4
	0x03750B68 ADRP X0, 0x9F5000
	0x03750B6C LDR X0, [X0 + 0x2D8]
	0x03750B70 BL 0x1C16CF4
	0x03750B74 MOVZ W8, 0x1
	0x03750B78 STRB W8, [X19 + 0xDB2]
	0x03750B7C ADRP X22, 0x9F5000
	0x03750B80 ADRP X21, 0x9F5000
	0x03750B84 LDR X22, [X22 + 0xC90]
	0x03750B88 LDR X21, [X21 + 0xC98]
	0x03750B8C STR X31, [X31 + 0x8]
	0x03750B90 BL 0x3750C44
	0x03750B94 LDR X8, [X20]
	0x03750B98 LDR X0, [X8 + 0xB8]
	0x03750B9C LDR W8, [X0]
	0x03750BA0 CMP W8, 0x1
	0x03750BA4 B.LT 0x3750C10
	0x03750BA8 ADRP X23, 0x9F5000
	0x03750BAC LDR X23, [X23 + 0xB28]
	0x03750BB0 MOV W19, W31
	0x03750BB4 LDR X2, [X23]
	0x03750BB8 MOV W1, W19
	0x03750BBC BL 0x2DE6188
	0x03750BC0 STR X0, [X31 + 0x8]
	0x03750BC4 ADD X0, X31, 0x8
	0x03750BC8 MOV X1, X31
	0x03750BCC BL 0x32C05E4
	0x03750BD0 TBZ X0, 0x0, 0x3750BF8
	0x03750BD4 LDR X8, [X20]
	0x03750BD8 LDR X2, [X23]
	0x03750BDC MOV W1, W19

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+96], X30
	003 Move [X31+104], X27
	004 Move [X31+112], X26
	005 Move [X31+120], X25
	006 Move [X31+128], X24
	007 Move [X31+136], X23
	008 Move [X31+144], X22
	009 Move [X31+152], X21
	010 Move [X31+160], X20
	011 Move [X31+168], X19
	012 Move X25, 0xC91000
	013 Move W8, [X25+3496]
	014 Move X19, X5
	015 Move X21, X4
	016 Move W22, W3
	017 Move X20, X2
	018 Move W23, W1
	019 Move X24, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {44}
	024 Move X0, 0x9F6000
	025 Move X0, [X0+3120]
	026 Call 0x1C17CF4
	027 Move X0, 0x9F6000
	028 Move X0, [X0+2976]
	029 Call 0x1C17CF4
	030 Move X0, 0x9F6000
	031 Move X0, [X0+3128]
	032 Call 0x1C17CF4
	033 Move X0, 0x9F6000
	034 Move X0, [X0+3072]
	035 Call 0x1C17CF4
	036 Move X0, 0x9F6000
	037 Move X0, [X0+728]
	038 Call 0x1C17CF4
	039 Move X0, 0x9F6000
	040 Move X0, [X0+3136]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X25+3496], W8
	044 Move [X31], X31
	045 Move [X31+8], X31
	046 Compare X20, 0
	047 JumpIfEqual {131}
	048 Move X27, 0x9F6000
	049 Move X25, 0x9F6000
	050 Move X26, 0x9F6000
	051 Move X27, [X27+3120]
	052 Move X25, [X25+728]
	053 Move X26, [X26+2976]
	054 Add X1, X20, 232
	055 Add X0, X31, 16
	056 Move W2, 80
	057 Call 0x3EB2AC0
	058 Move X1, [X27]
	059 Move X0, X21
	060 Call 0x28F240C, X0
	061 Compare W0, 0
	062 JumpIfNotEqual {75}
	063 Move X1, [X27]
	064 Add X0, X31, 16
	065 Call 0x28F240C, X0
	066 Compare W0, 0
	067 JumpIfNotEqual {75}
	068 Move X8, [X25]
	069 Move X1, [X26]
	070 Move X8, [X8+184]
	071 Add X0, X8, 24
	072 Call 0x28F240C, X0
	073 Compare W0, 0
	074 JumpIfEqual {119}
	075 Add X0, X31, 0
	076 Move X1, X31
	077 Move [X31], X24
	078 Move [X31+8], W23
	079 Move [X31+12], W31
	080 Call CallbackContext.get_action, X0
	081 Move X8, [X25]
	082 Move X1, [X26]
	083 Move X23, X0
	084 Move X8, [X8+184]
	085 Add X0, X8, 24
	086 Call 0x28F240C, X0
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Subtract W8, W22, 2
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Move X9, 0x9F6000
	091 Move X8, [X25]
	092 Move X9, [X9+3136]
	093 Add W2, W22, 2
	094 Move X1, X23
	095 Move X8, [X8+184]
	096 Move X3, [X9]
	097 Move X9, 0x9F6000
	098 Move X9, [X9+3072]
	099 Add X0, X8, 24
	100 Move X4, X31
	101 Move X5, [X9]
	102 Call DelegateHelpers.InvokeCallbacksSafe, X0, X1, X2, X3, X4
	103 Move X22, 0x9F6000
	104 Move X22, [X22+3128]
	105 Move X1, [X31]
	106 Move X2, [X31+8]
	107 Move X0, X21
	108 Move X3, X19
	109 Move X5, [X22]
	110 Move X4, X23
	111 Call DelegateHelpers.InvokeCallbacksSafe, X0, X1, X2, X3
	112 Move X1, [X31]
	113 Move X2, [X31+8]
	114 Move X5, [X22]
	115 Add X0, X31, 16
	116 Move X3, X19
	117 Move X4, X20
	118 Call DelegateHelpers.InvokeCallbacksSafe, X0, X1, X2, X3
	119 Move X20, [X31+160]
	120 Move X19, [X31+168]
	121 Move X22, [X31+144]
	122 Move X21, [X31+152]
	123 Move X24, [X31+128]
	124 Move X23, [X31+136]
	125 Move X26, [X31+112]
	126 Move X25, [X31+120]
	127 Move X30, [X31+96]
	128 Move X27, [X31+104]
	129 Add X31, X31, 176
	130 Return 
	131 Call 0x1C17F20

Method: System.Object GetActionOrNoneString(ref UnityEngine.InputSystem.InputActionState/TriggerState trigger)

Disassembly:
	0x03750BE0 LDR X0, [X8 + 0xB8]
	0x03750BE4 BL 0x2DE6188
	0x03750BE8 STR X0, [X31 + 0x8]
	0x03750BEC ADD X0, X31, 0x8
	0x03750BF0 MOV X1, X31
	0x03750BF4 BL 0x32C0794
	0x03750BF8 LDR X8, [X20]
	0x03750BFC ADD W19, W19, 0x1
	0x03750C00 LDR X0, [X8 + 0xB8]
	0x03750C04 LDR W8, [X0]
	0x03750C08 CMP W19, W8
	0x03750C0C B.LT 0x3750BB4
	0x03750C10 STR W31, [X0], #0x18
	0x03750C14 LDR X1, [X22]
	0x03750C18 BL 0x28F1458
	0x03750C1C LDR X8, [X20]
	0x03750C20 LDR X1, [X21]
	0x03750C24 LDR X8, [X8 + 0xB8]
	0x03750C28 ADD X0, X8, 0x68
	0x03750C2C BL 0x28F1458
	0x03750C30 LDP X20, X19, [X31 + 0x30]
	0x03750C34 LDP X22, X21, [X31 + 0x20]
	0x03750C38 LDP X30, X23, [X31 + 0x10]
	0x03750C3C ADD X31, X31, 0x40
	0x03750C40 RET

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xC91000
	007 Move X21, 0x9F6000
	008 Move W8, [X22+3497]
	009 Move X21, [X21+3144]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x9F6000
	017 Move X0, [X0+3144]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+3497], W8
	021 Move X0, X20
	022 Move X1, X19
	023 Call InputActionState.GetActionOrNull, X0, X1
	024 Move X8, [X21]
	025 Move X20, [X31+32]
	026 Move X19, [X31+40]
	027 Move X22, [X31+16]
	028 Move X21, [X31+24]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 NotImplemented "Instruction CSEL not yet implemented."
	031 Move X30, [X31+48]
	032 Return X0

Method: UnityEngine.InputSystem.InputAction GetActionOrNull(System.Int32 bindingIndex)

Disassembly:
	0x03750CD8 MOV X1, X31
	0x03750CDC BL 0x32C05E4
	0x03750CE0 TBZ X0, 0x0, 0x3750D3C
	0x03750CE4 ADD X0, X31, 0x18
	0x03750CE8 MOV X1, X31
	0x03750CEC BL 0x32C05F4
	0x03750CF0 CBZ X0, 0x3750D3C
	0x03750CF4 ADD X0, X31, 0x18
	0x03750CF8 MOV X1, X31
	0x03750CFC BL 0x32C05F4
	0x03750D00 CBZ X0, 0x3750DB0
	0x03750D04 LDR X8, [X0]
	0x03750D08 LDR X1, [X20]
	0x03750D0C LDRB W10, [X8 + 0x130]
	0x03750D10 LDRB W9, [X1 + 0x130]
	0x03750D14 CMP W10, W9
	0x03750D18 B.CC 0x3750DAC
	0x03750D1C LDR X8, [X8 + 0xC8]
	0x03750D20 ADD X8, X8, X9, 0x3, LSL
	0x03750D24 LDUR X8, [X8 - 0x8]
	0x03750D28 CMP X8, X1
	0x03750D2C B.NE 0x3750DAC
	0x03750D30 MOV W1, W31
	0x03750D34 BL 0x374AC14
	0x03750D38 B 0x3750D84
	0x03750D3C ADD X0, X31, 0x18
	0x03750D40 MOV X1, X31
	0x03750D44 BL 0x32C05E4
	0x03750D48 TBZ X0, 0x0, 0x3750D70
	0x03750D4C LDR X8, [X20]
	0x03750D50 LDR X2, [X21]
	0x03750D54 MOV W1, W19
	0x03750D58 LDR X0, [X8 + 0xB8]
	0x03750D5C BL 0x2DE6188
	0x03750D60 STR X0, [X31 + 0x8]
	0x03750D64 ADD X0, X31, 0x8
	0x03750D68 MOV X1, X31

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+104]
	003 Move X9, W1
	004 Move W10, 0xFFFF
	005 Add X9, X8, X9
	006 NotImplemented "Instruction LDRH not yet implemented."
	007 NotImplemented "Instruction CMP not yet implemented."
	008 NotImplemented "Instruction CSINV not yet implemented."
	009 Move W10, [X9+3]
	010 Move X9, [X0+184]
	011 Move W11, 48
	012 NotImplemented "Instruction MADD not yet implemented."
	013 Compare X9, 0
	014 JumpIfEqual {36}
	015 Move X11, [X0+16]
	016 Compare X11, 0
	017 JumpIfEqual {36}
	018 Move W12, [X11+24]
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Add X10, X11, X10
	021 Move X10, [X10+32]
	022 Compare X10, 0
	023 JumpIfEqual {36}
	024 Move X10, [X10+40]
	025 Compare X10, 0
	026 JumpIfEqual {36}
	027 Move W9, [X9]
	028 Move W11, [X10+24]
	029 Subtract W8, W8, W9
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Add X8, X10, W8
	032 Move X0, [X8+32]
	033 Move X0, X31
	034 Move X30, [X31+16]
	035 Return X0
	036 Call 0x1C17F20
	037 Call 0x1C17F28

Method: UnityEngine.InputSystem.InputAction GetActionOrNull(ref UnityEngine.InputSystem.InputActionState/TriggerState trigger)

Disassembly:
	0x03750C44 SUB X31, X31, 0x40
	0x03750C48 STR X30, [X31 + 0x10]
	0x03750C4C STP X22, X21, [X31 + 0x20]
	0x03750C50 STP X20, X19, [X31 + 0x30]
	0x03750C54 ADRP X19, 0xC90000
	0x03750C58 ADRP X20, 0x9F5000
	0x03750C5C LDRB W8, [X19 + 0xDB7]
	0x03750C60 LDR X20, [X20 + 0x2D8]
	0x03750C64 TBNZ X8, 0x0, 0x3750C94
	0x03750C68 ADRP X0, 0x9F5000
	0x03750C6C LDR X0, [X0 + 0xCA0]
	0x03750C70 BL 0x1C16CF4
	0x03750C74 ADRP X0, 0x9F5000
	0x03750C78 LDR X0, [X0 + 0xB28]
	0x03750C7C BL 0x1C16CF4
	0x03750C80 ADRP X0, 0x9F5000
	0x03750C84 LDR X0, [X0 + 0x2D8]
	0x03750C88 BL 0x1C16CF4
	0x03750C8C MOVZ W8, 0x1
	0x03750C90 STRB W8, [X19 + 0xDB7]
	0x03750C94 LDR X8, [X20]
	0x03750C98 STR X31, [X31 + 0x18]
	0x03750C9C STR X31, [X31 + 0x8]
	0x03750CA0 LDR X0, [X8 + 0xB8]
	0x03750CA4 LDR W8, [X0]
	0x03750CA8 CMP W8, 0x1
	0x03750CAC B.LT 0x3750D98
	0x03750CB0 ADRP X21, 0x9F5000
	0x03750CB4 ADRP X22, 0x9F5000
	0x03750CB8 LDR X21, [X21 + 0xB28]
	0x03750CBC LDR X22, [X22 + 0xCA0]
	0x03750CC0 LDR X2, [X21]
	0x03750CC4 SUB W19, W8, 0x1
	0x03750CC8 MOV W1, W19
	0x03750CCC BL 0x2DE6188
	0x03750CD0 STR X0, [X31 + 0x18]
	0x03750CD4 ADD X0, X31, 0x18

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+104]
	003 NotImplemented "Instruction LDRH not yet implemented."
	004 Add X8, X8, X9
	005 NotImplemented "Instruction LDRH not yet implemented."
	006 Move W9, 0xFFFF
	007 NotImplemented "Instruction CMP not yet implemented."
	008 NotImplemented "Instruction CSINV not yet implemented."
	009 Move X9, [X0+184]
	010 Move W10, [X1+2]
	011 Move W11, 48
	012 NotImplemented "Instruction MADD not yet implemented."
	013 Compare X9, 0
	014 JumpIfEqual {36}
	015 Move X11, [X0+16]
	016 Compare X11, 0
	017 JumpIfEqual {36}
	018 Move W12, [X11+24]
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Add X10, X11, X10
	021 Move X10, [X10+32]
	022 Compare X10, 0
	023 JumpIfEqual {36}
	024 Move X10, [X10+40]
	025 Compare X10, 0
	026 JumpIfEqual {36}
	027 Move W9, [X9]
	028 Move W11, [X10+24]
	029 Subtract W8, W8, W9
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Add X8, X10, W8
	032 Move X0, [X8+32]
	033 Move X0, X31
	034 Move X30, [X31+16]
	035 Return X0
	036 Call 0x1C17F20
	037 Call 0x1C17F28

Method: UnityEngine.InputSystem.InputControl GetControl(ref UnityEngine.InputSystem.InputActionState/TriggerState trigger)

Disassembly:
	0x03750D6C BL 0x32C0794
	0x03750D70 LDR X8, [X20]
	0x03750D74 LDR X2, [X22]
	0x03750D78 MOV W1, W19
	0x03750D7C LDR X0, [X8 + 0xB8]
	0x03750D80 BL 0x2DE6C0C
	0x03750D84 LDR X8, [X20]
	0x03750D88 LDR X0, [X8 + 0xB8]
	0x03750D8C LDR W8, [X0]
	0x03750D90 CMP W8, 0x0
	0x03750D94 B.GT 0x3750CC0
	0x03750D98 LDP X20, X19, [X31 + 0x30]
	0x03750D9C LDP X22, X21, [X31 + 0x20]
	0x03750DA0 LDR X30, [X31 + 0x10]
	0x03750DA4 ADD X31, X31, 0x40
	0x03750DA8 RET

ISIL:
	001 Move [X31-16], X30
	002 NotImplemented "Instruction LDRH not yet implemented."
	003 Move X8, [X0+24]
	004 Move W10, 0xFFFF
	005 NotImplemented "Instruction CMP not yet implemented."
	006 NotImplemented "Instruction CSINV not yet implemented."
	007 Compare X8, 0
	008 JumpIfEqual {15}
	009 Move W10, [X8+24]
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Add X8, X8, W9
	012 Move X0, [X8+32]
	013 Move X30, [X31+16]
	014 Return X0
	015 Call 0x1C17F20
	016 Call 0x1C17F28

Method: UnityEngine.InputSystem.IInputInteraction GetInteractionOrNull(ref UnityEngine.InputSystem.InputActionState/TriggerState trigger)

Disassembly:
	0x03750DAC BL 0x1C171E0
	0x03750DB0 BL 0x1C16F20
	0x03750DB4 SUB X31, X31, 0x80
	0x03750DB8 STP X29, X30, [X31 + 0x20]
	0x03750DBC STP X28, X27, [X31 + 0x30]
	0x03750DC0 STP X26, X25, [X31 + 0x40]
	0x03750DC4 STP X24, X23, [X31 + 0x50]
	0x03750DC8 STP X22, X21, [X31 + 0x60]
	0x03750DCC STP X20, X19, [X31 + 0x70]
	0x03750DD0 ADRP X20, 0xC90000
	0x03750DD4 LDRB W8, [X20 + 0xDB3]
	0x03750DD8 MOV X19, X0
	0x03750DDC TBNZ X8, 0x0, 0x3750E18
	0x03750DE0 ADRP X0, 0x9F5000
	0x03750DE4 LDR X0, [X0 + 0xB28]
	0x03750DE8 BL 0x1C16CF4
	0x03750DEC ADRP X0, 0x9F5000
	0x03750DF0 LDR X0, [X0 + 0x2D8]

ISIL:
	001 Move [X31-16], X30
	002 NotImplemented "Instruction LDRH not yet implemented."
	003 Move W9, 0xFFFF
	004 NotImplemented "Instruction CMP not yet implemented."
	005 Move X9, [X0+32]
	006 Compare X9, 0
	007 JumpIfEqual {15}
	008 Move W10, [X9+24]
	009 NotImplemented "Instruction CMP not yet implemented."
	010 Add X8, X9, W8
	011 Move X0, [X8+32]
	012 Move X0, X31
	013 Move X30, [X31+16]
	014 Return X0
	015 Call 0x1C17F20
	016 Call 0x1C17F28

Method: System.Int32 GetBindingIndexInMap(System.Int32 bindingIndex)

Disassembly:
	0x03750DF4 BL 0x1C16CF4
	0x03750DF8 ADRP X0, 0x9F5000
	0x03750DFC LDR X0, [X0 + 0xCA8]
	0x03750E00 BL 0x1C16CF4
	0x03750E04 ADRP X0, 0x9F5000
	0x03750E08 LDR X0, [X0 + 0x1B8]
	0x03750E0C BL 0x1C16CF4
	0x03750E10 MOVZ W8, 0x1
	0x03750E14 STRB W8, [X20 + 0xDB3]
	0x03750E18 ADRP X8, 0x9F5000
	0x03750E1C LDR X8, [X8 + 0x2D8]
	0x03750E20 STR X31, [X31 + 0x18]
	0x03750E24 LDR X8, [X8]
	0x03750E28 LDR X9, [X8 + 0xB8]
	0x03750E2C LDR W9, [X9]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+104]
	003 Move X9, W1
	004 Move W10, 48
	005 Add X8, X8, X9
	006 Move W8, [X8+3]
	007 Move X9, [X0+184]
	008 NotImplemented "Instruction NOP not yet implemented."
	009 NotImplemented "Instruction MADD not yet implemented."
	010 Compare X8, 0
	011 JumpIfEqual {16}
	012 Move W8, [X8+16]
	013 Subtract W0, W1, W8
	014 Move X30, [X31+16]
	015 Return X0
	016 Call 0x1C17F20

Method: System.Int32 GetBindingIndexInState(System.Int32 mapIndex, System.Int32 bindingIndexInMap)

Disassembly:
	0x03750E30 CMP W9, 0x1
	0x03750E34 STR W9, [X31 + 0xC]
	0x03750E38 B.LT 0x375102C
	0x03750E3C MOV W20, W31
	0x03750E40 MOV W21, W31
	0x03750E44 MOVZ W27, 0x30
	0x03750E48 LDR X0, [X8 + 0xB8]
	0x03750E4C ADRP X8, 0x9F5000
	0x03750E50 LDR X8, [X8 + 0xB28]
	0x03750E54 MOV W1, W21

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+184]
	003 Move W9, 48
	004 NotImplemented "Instruction SMADDL not yet implemented."
	005 Compare X8, 0
	006 JumpIfEqual {11}
	007 Move W8, [X8+16]
	008 Add W0, W8, W2
	009 Move X30, [X31+16]
	010 Return X0
	011 Call 0x1C17F20

Method: UnityEngine.InputSystem.InputActionState/BindingState GetBindingState(System.Int32 bindingIndex)

Disassembly:
	0x03750E58 LDR X2, [X8]
	0x03750E5C BL 0x2DE6188
	0x03750E60 STR X0, [X31 + 0x18]
	0x03750E64 ADD X0, X31, 0x18

ISIL:
	001 Move X8, [X0+104]
	002 Move X9, W1
	003 Add X0, X8, X9
	004 Return X0

Method: UnityEngine.InputSystem.InputBinding GetBinding(System.Int32 bindingIndex)

Disassembly:
	0x03750E68 MOV X1, X31
	0x03750E6C BL 0x32C05E4
	0x03750E70 STR W21, [X31 + 0x10]
	0x03750E74 TBZ X0, 0x0, 0x375100C
	0x03750E78 ADD X0, X31, 0x18
	0x03750E7C MOV X1, X31
	0x03750E80 BL 0x32C05F4
	0x03750E84 CBZ X0, 0x375100C
	0x03750E88 ADRP X9, 0x9F5000
	0x03750E8C LDR X8, [X0]
	0x03750E90 LDR X9, [X9 + 0x2D8]
	0x03750E94 MOV X22, X0
	0x03750E98 LDRB W10, [X8 + 0x130]
	0x03750E9C LDR X1, [X9]
	0x03750EA0 LDRB W9, [X1 + 0x130]
	0x03750EA4 CMP W10, W9
	0x03750EA8 B.CC 0x375105C
	0x03750EAC LDR X8, [X8 + 0xC8]
	0x03750EB0 ADD X8, X8, X9, 0x3, LSL
	0x03750EB4 LDUR X8, [X8 - 0x8]
	0x03750EB8 CMP X8, X1
	0x03750EBC B.NE 0x375105C
	0x03750EC0 LDR W8, [X22 + 0x48]
	0x03750EC4 CMP W8, 0x1
	0x03750EC8 STR W8, [X31 + 0x14]
	0x03750ECC B.LT 0x375100C
	0x03750ED0 LDR X28, [X22 + 0x10]
	0x03750ED4 CBZ X28, 0x3751054
	0x03750ED8 MOV W26, W31
	0x03750EDC LDR W8, [X28 + 0x18]
	0x03750EE0 CMP W26, W8
	0x03750EE4 B.CS 0x3751058

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+104]
	003 Move X9, W1
	004 Move W10, 48
	005 Add X8, X8, X9
	006 Move W9, [X8+3]
	007 Move X8, [X0+184]
	008 NotImplemented "Instruction NOP not yet implemented."
	009 NotImplemented "Instruction MADD not yet implemented."
	010 Compare X8, 0
	011 JumpIfEqual {33}
	012 Move X10, [X0+16]
	013 Compare X10, 0
	014 JumpIfEqual {33}
	015 Move W11, [X10+24]
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Add X9, X10, X9
	018 Move X9, [X9+32]
	019 Compare X9, 0
	020 JumpIfEqual {33}
	021 Move X9, [X9+48]
	022 Compare X9, 0
	023 JumpIfEqual {33}
	024 Move W8, [X8+16]
	025 Move W10, [X9+24]
	026 Subtract W8, W1, W8
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move W10, 88
	029 NotImplemented "Instruction SMADDL not yet implemented."
	030 Add X0, X8, 32
	031 Move X30, [X31+16]
	032 Return X0
	033 Call 0x1C17F20
	034 Call 0x1C17F28

Method: UnityEngine.InputSystem.InputActionMap GetActionMap(System.Int32 bindingIndex)

Disassembly:
	0x03750EE8 ADD X8, X28, W26, 0x3, SXTW
	0x03750EEC LDR X24, [X8 + 0x20]
	0x03750EF0 CBZ X24, 0x3751054
	0x03750EF4 MOV X0, X24
	0x03750EF8 MOV X1, X31
	0x03750EFC BL 0x37367B0
	0x03750F00 TBZ X0, 0x0, 0x3750FFC
	0x03750F04 LDR X23, [X24 + 0x28]
	0x03750F08 CBZ X23, 0x3751054
	0x03750F0C LDR X25, [X23 + 0x18]
	0x03750F10 LDR W8, [X24 + 0x48]
	0x03750F14 CMP W8, W25
	0x03750F18 B.NE 0x3750F40
	0x03750F1C CBZ X19, 0x3751054
	0x03750F20 ADRP X8, 0x9F5000
	0x03750F24 LDR X8, [X8 + 0xCA8]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+16]
	003 Compare X8, 0
	004 JumpIfEqual {15}
	005 Move X9, [X0+104]
	006 Move X10, W1
	007 Add X9, X9, X10
	008 Move W9, [X9+3]
	009 Move W10, [X8+24]
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Add X8, X8, W9
	012 Move X0, [X8+32]
	013 Move X30, [X31+16]
	014 Return X0
	015 Call 0x1C17F20
	016 Call 0x1C17F28

Method: System.Void ResetInteractionStateAndCancelIfNecessary(System.Int32 mapIndex, System.Int32 bindingIndex, System.Int32 interactionIndex)

Disassembly:
	0x0374E40C MOV W2, W8
	0x0374E410 B 0x374E414
	0x0374E414 SUB X31, X31, 0x110
	0x0374E418 STR D8, [X31 + 0xC0]
	0x0374E41C STR X29, [X31 + 0xC8]
	0x0374E420 STP X30, X25, [X31 + 0xD0]
	0x0374E424 STP X24, X23, [X31 + 0xE0]
	0x0374E428 STP X22, X21, [X31 + 0xF0]
	0x0374E42C STP X20, X19, [X31 + 0x100]
	0x0374E430 MRS X24, 0xC000
	0x0374E434 LDR X8, [X24 + 0x28]
	0x0374E438 ADRP X25, 0xC92000
	0x0374E43C MOV W19, W4
	0x0374E440 MOV W21, W3
	0x0374E444 STR X8, [X31 + 0xB8]
	0x0374E448 LDRB W8, [X25 + 0xDA4]
	0x0374E44C MOV W22, W2
	0x0374E450 MOV W23, W1
	0x0374E454 MOV V8.16B, V0.16B
	0x0374E458 MOV X20, X0
	0x0374E45C TBNZ X8, 0x0, 0x374E474
	0x0374E460 ADRP X0, 0x9F7000
	0x0374E464 LDR X0, [X0 + 0xB90]
	0x0374E468 BL 0x1C16CF4
	0x0374E46C MOVZ W8, 0x1
	0x0374E470 STRB W8, [X25 + 0xDA4]
	0x0374E474 MOVI V0.2D, 0x0
	0x0374E478 STP V0, V0, [X31 + 0x90]
	0x0374E47C STP V0, V0, [X31 + 0x70]
	0x0374E480 LDR X9, [X20 + 0x70]
	0x0374E484 MOVZ W8, 0x30
	0x0374E488 STR X31, [X31 + 0x68]
	0x0374E48C STUR V0, [X31 + 0x58]
	0x0374E490 STUR V0, [X31 + 0x48]
	0x0374E494 STUR V0, [X31 + 0x38]
	0x0374E498 STR X20, [X31 + 0x30]
	0x0374E49C STP V0, V0, [X31]
	0x0374E4A0 STR V0, [X31 + 0x2]
	0x0374E4A4 NOP
	0x0374E4A8 SMADDL X25, X19, X8, X9
	0x0374E4AC LDRB W8, [X25 + 0x2]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X10, [X0+96]
	006 Move X8, [X0+104]
	007 Move X9, W2
	008 Move W19, W3
	009 Move X20, X0
	010 Add X8, X8, X9
	011 NotImplemented "Instruction LDRH not yet implemented."
	012 Move W9, 0xFFFF
	013 Add X11, X8, X8
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Move X8, X11
	016 ShiftRight X8, 60
	017 And X8, X8, 0x7FFFFFF
	018 Move TEMP, 47
	019 Not TEMP
	020 Move X11, TEMP
	021 NotImplemented "Instruction CSEL not yet implemented."
	022 Add X2, X21, X10
	023 NotImplemented "Instruction LDRH not yet implemented."
	024 NotImplemented "Instruction CMP not yet implemented."
	025 NotImplemented "Instruction CSINV not yet implemented."
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X8, [X20+112]
	028 Move W9, 48
	029 NotImplemented "Instruction SMADDL not yet implemented."
	030 Move W8, [X8+2]
	031 And W8, W8, 254
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move W1, 4
	034 Move W3, 1
	035 Move X0, X20
	036 Move W4, W31
	037 Call InputActionState.ChangePhaseOfInteraction, X0, X1, X2, X3, X4
	038 Move X8, [X20+96]
	039 Add X2, X21, X8
	040 Move W8, 0xFFFF
	041 NotImplemented "Instruction STRH not yet implemented."
	042 Move X0, X20
	043 Move W1, W19
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X30, [X31+32]
	047 Move X21, [X31+40]
	048 Call InputActionState.ResetInteractionState, X0, X1
	049 Return 

Method: System.Void ResetInteractionState(System.Int32 interactionIndex)

Disassembly:
	0x0374CDD8 UBFM W8, W8, 0x1C, 0x1B
	0x0374CDDC ADD X24, X12, W8, SXTW
	0x0374CDE0 LDR V9, [X20 + 0x8]
	0x0374CDE4 LDRB W26, [X20 + 0x2]
	0x0374CDE8 LDR X23, [X10]
	0x0374CDEC LDRH W27, [X9, W13, SXTW]
	0x0374CDF0 LDRB W8, [X24 + 0x3]
	0x0374CDF4 LDRH W20, [X20 + 0x18]
	0x0374CDF8 TBZ X8, 0x0, 0x374CE08
	0x0374CDFC MOV X0, X19
	0x0374CE00 MOV W1, W21
	0x0374CE04 BL 0x374F2CC
	0x0374CE08 CBZ X23, 0x374CE70
	0x0374CE0C ORR X8, X25, X26, 0x28
	0x0374CE10 ORR X8, X8, X20, 0x18
	0x0374CE14 FCVT S0, S8
	0x0374CE18 ORR X20, X8, X27, 0x30
	0x0374CE1C FADD D0, D9, D0
	0x0374CE20 MOV X0, X23
	0x0374CE24 MOV X1, X22
	0x0374CE28 MOV X2, X19
	0x0374CE2C MOV X3, X20
	0x0374CE30 MOV W4, W21
	0x0374CE34 MOV X5, X31
	0x0374CE38 BL 0x37CC6FC
	0x0374CE3C LDRB W8, [X24 + 0x3]
	0x0374CE40 STR D9, [X24 + 0x10]
	0x0374CE44 STR S8, [X24 + 0x4]
	0x0374CE48 STR X20, [X24 + 0x28]
	0x0374CE4C ORR W8, W8, 0x1
	0x0374CE50 STRB W8, [X24 + 0x3]
	0x0374CE54 LDP X20, X19, [X31 + 0x50]
	0x0374CE58 LDP X22, X21, [X31 + 0x40]
	0x0374CE5C LDP X24, X23, [X31 + 0x30]
	0x0374CE60 LDP X26, X25, [X31 + 0x20]
	0x0374CE64 LDP X30, X27, [X31 + 0x10]
	0x0374CE68 LDP D9, D8, [X31], #0x60
	0x0374CE6C RET
	0x0374CE70 BL 0x1C16F20
	0x0374CE74 BL 0x1C16F28
	0x0374CE78 STR X30, [X31 - 0x20]!
	0x0374CE7C STP X20, X19, [X31 + 0x10]
	0x0374CE80 ADRP X20, 0xC94000
	0x0374CE84 LDRB W8, [X20 + 0xD9D]
	0x0374CE88 MOV X19, X0
	0x0374CE8C TBNZ X8, 0x0, 0x374CEBC
	0x0374CE90 ADRP X0, 0x9A8000
	0x0374CE94 LDR X0, [X0 + 0xE70]
	0x0374CE98 BL 0x1C16CF4
	0x0374CE9C ADRP X0, 0x9F9000
	0x0374CEA0 LDR X0, [X0 + 0xBF0]
	0x0374CEA4 BL 0x1C16CF4
	0x0374CEA8 ADRP X0, 0x9CF000
	0x0374CEAC LDR X0, [X0 + 0x270]
	0x0374CEB0 BL 0x1C16CF4
	0x0374CEB4 MOVZ W8, 0x1
	0x0374CEB8 STRB W8, [X20 + 0xD9D]
	0x0374CEBC LDRB W8, [X19 + 0xC0]
	0x0374CEC0 CBNZ W8, 0x374CF38
	0x0374CEC4 LDR X8, [X19 + 0xD0]
	0x0374CEC8 CBNZ X8, 0x374CEFC
	0x0374CECC ADRP X8, 0x9A8000
	0x0374CED0 LDR X8, [X8 + 0xE70]
	0x0374CED4 LDR X0, [X8]
	0x0374CED8 BL 0x1C16F10
	0x0374CEDC ADRP X8, 0x9F9000
	0x0374CEE0 LDR X8, [X8 + 0xBF0]
	0x0374CEE4 MOV X1, X19
	0x0374CEE8 MOV X3, X31
	0x0374CEEC MOV X20, X0
	0x0374CEF0 LDR X2, [X8]
	0x0374CEF4 BL 0x3314368
	0x0374CEF8 STR X20, [X19 + 0xD0]
	0x0374CEFC ADRP X20, 0x9CF000
	0x0374CF00 LDR X20, [X20 + 0x270]
	0x0374CF04 LDR X0, [X20]
	0x0374CF08 LDR W8, [X0 + 0xE0]
	0x0374CF0C CBNZ W8, 0x374CF18
	0x0374CF10 BL 0x1C16DFC
	0x0374CF14 LDR X0, [X20]
	0x0374CF18 LDR X8, [X0 + 0xB8]
	0x0374CF1C LDR X0, [X8]
	0x0374CF20 CBZ X0, 0x374CF44
	0x0374CF24 LDR X1, [X19 + 0xD0]
	0x0374CF28 MOV X2, X31
	0x0374CF2C BL 0x37C23C8

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+64], X30
	003 Move [X31+72], X23
	004 Move [X31+80], X22
	005 Move [X31+88], X21
	006 Move [X31+96], X20
	007 Move [X31+104], X19
	008 NotImplemented "Instruction MRS not yet implemented."
	009 Move X8, [X22+40]
	010 Move X21, 0xC95000
	011 Move W19, W1
	012 Move X20, X0
	013 Move [X31+56], X8
	014 Move W8, [X21+3498]
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0x9FA000
	020 Move X0, [X0+2960]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+3498], W8
	024 Move X8, [X20+32]
	025 Compare X8, 0
	026 JumpIfEqual {99}
	027 Move W9, [X8+24]
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move X23, W19
	030 Add X8, X8, X23
	031 Move X21, [X8+32]
	032 Compare X21, 0
	033 JumpIfEqual {99}
	034 Move X10, 0x9FA000
	035 Move X8, [X21]
	036 Move X10, [X10+2960]
	037 NotImplemented "Instruction LDRH not yet implemented."
	038 Move X1, [X10]
	039 Compare X9, 0
	040 JumpIfEqual {47}
	041 Move X10, [X8+176]
	042 Add X10, X10, 8
	043 NotImplemented "Instruction LDUR not yet implemented."
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Subtract X9, X9, 1
	046 Add X10, X10, 16
	047 Move W2, 1
	048 Move X0, X21
	049 Call 0x1C5D788
	050 Move W9, [X10]
	051 Add W9, W9, 1
	052 Add X8, X8, W9
	053 Add X0, X8, 312
	054 Move X8, [X0]
	055 Move X1, [X0+8]
	056 Move X0, X21
	057 NotImplemented "Instruction BLR not yet implemented."
	058 Move X8, [X20+112]
	059 Add X9, X23, X23
	060 Add X8, X8, X9
	061 Move W10, [X8+3]
	062 Move TEMP, X10
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfNotEqual {74}
	066 Move X0, X20
	067 Move W1, W19
	068 Move X21, X9
	069 ShiftRight X21, 60
	070 And X21, X21, 0x7FFFFFF
	071 Call InputActionState.StopTimeout, X0, X1
	072 Move X8, [X20+112]
	073 Add X8, X21, X8
	074 NotImplemented "Instruction MOVI not yet implemented."
	075 Move W9, 0xFFFF
	076 Move [X31+29], V0
	077 Move [X31], V0
	078 Move [X31+8], V0
	079 NotImplemented "Instruction STRH not yet implemented."
	080 Move W9, 1
	081 Move [X8+2], W9
	082 NotImplemented "Instruction LDUR not yet implemented."
	083 Move V2, [X31]
	084 Move V1, [X31+16]
	085 Move [X8+2], V0
	086 Move [X8+19], V1
	087 Move [X8+3], V2
	088 Move X8, [X22+40]
	089 Move X9, [X31+56]
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Move X20, [X31+96]
	092 Move X19, [X31+104]
	093 Move X22, [X31+80]
	094 Move X21, [X31+88]
	095 Move X30, [X31+64]
	096 Move X23, [X31+72]
	097 Add X31, X31, 112
	098 Return 
	099 Call 0x1C17F20
	100 Call 0x1C17F28
	101 Call 0x3EB2B20

Method: System.Int32 GetValueSizeInBytes(System.Int32 bindingIndex, System.Int32 controlIndex)

Disassembly:
	0x03750F28 MOV X0, X19
	0x03750F2C MOV X1, X23
	0x03750F30 LDR X2, [X8]
	0x03750F34 BL 0x301C194
	0x03750F38 ADD W20, W20, W25
	0x03750F3C B 0x3750FFC
	0x03750F40 LDR X8, [X22 + 0xB8]
	0x03750F44 LDRSW X9, [X24 + 0x58]
	0x03750F48 NOP
	0x03750F4C MADD X8, X9, X27, X8
	0x03750F50 CBZ X8, 0x3751054
	0x03750F54 CMP W25, 0x1
	0x03750F58 B.LT 0x3750FFC
	0x03750F5C LDR W21, [X8]
	0x03750F60 MOV X24, X31
	0x03750F64 AND X29, X25, 0x0
	0x03750F68 ADD X25, X23, 0x20
	0x03750F6C LDR X8, [X22 + 0x60]
	0x03750F70 ADD W9, W21, W24
	0x03750F74 SMADDL X9, X9, X27, X31
	0x03750F78 LDRB W8, [X9, X8, LSL]
	0x03750F7C CBZ W8, 0x3750FF0
	0x03750F80 LDR W8, [X23 + 0x18]
	0x03750F84 CMP X24, X8
	0x03750F88 B.CS 0x3751058
	0x03750F8C CBZ X19, 0x3751054
	0x03750F90 ADRP X9, 0x9F5000
	0x03750F94 LDR X1, [X25, X24, LSL #3]
	0x03750F98 LDR W10, [X19 + 0x1C]
	0x03750F9C LDR X8, [X19 + 0x10]
	0x03750FA0 LDR X9, [X9 + 0x1B8]
	0x03750FA4 ADD W10, W10, 0x1
	0x03750FA8 LDR X9, [X9]
	0x03750FAC STR W10, [X19 + 0x1C]
	0x03750FB0 CBZ X8, 0x3751054
	0x03750FB4 LDRSW X10, [X19 + 0x18]
	0x03750FB8 LDR W11, [X8 + 0x18]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+104]
	003 Move X9, W1
	004 Add X9, X8, X9
	005 Move W10, [X9+4]
	006 Move TEMP, X10
	007 And TEMP, TEMP, 8
	008 Compare TEMP, 8
	009 JumpIfEqual {16}
	010 Move X8, [X0+24]
	011 Compare X8, 0
	012 JumpIfEqual {44}
	013 Move W9, [X8+24]
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Add X8, X8, W2
	016 NotImplemented "Instruction LDRH not yet implemented."
	017 Move W10, 0xFFFF
	018 Move X11, X9
	019 ShiftRight X11, 59
	020 And X11, X11, 0x3FFFFFF
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move TEMP, 31
	023 Not TEMP
	024 Move X9, TEMP
	025 NotImplemented "Instruction CSEL not yet implemented."
	026 Add X8, X9, X8
	027 NotImplemented "Instruction LDRH not yet implemented."
	028 Move X8, [X0+48]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 NotImplemented "Instruction CSINV not yet implemented."
	031 Compare X8, 0
	032 JumpIfEqual {44}
	033 Move W10, [X8+24]
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Add X8, X8, W9
	036 Move X0, [X8+32]
	037 Compare X0, 0
	038 JumpIfEqual {44}
	039 Move X8, [X0]
	040 Move X2, [X8+392]
	041 Move X1, [X8+400]
	042 Move X30, [X31+16]
	043 CallNoReturn X2
	044 Call 0x1C17F20
	045 Call 0x1C17F28

Method: System.Type GetValueType(System.Int32 bindingIndex, System.Int32 controlIndex)

Disassembly:
	0x03750FBC CMP W10, W11
	0x03750FC0 B.CS 0x3750FD8
	0x03750FC4 ADD W9, W10, 0x1
	0x03750FC8 ADD X8, X8, X10, 0x3, LSL
	0x03750FCC STR W9, [X19 + 0x18]
	0x03750FD0 STR X1, [X8 + 0x20]
	0x03750FD4 B 0x3750FEC
	0x03750FD8 LDR X8, [X9 + 0x20]
	0x03750FDC MOV X0, X19
	0x03750FE0 LDR X8, [X8 + 0xC0]
	0x03750FE4 LDR X2, [X8 + 0x70]
	0x03750FE8 BL 0x301BF90
	0x03750FEC ADD W20, W20, 0x1
	0x03750FF0 ADD X24, X24, 0x1
	0x03750FF4 CMP X29, X24
	0x03750FF8 B.NE 0x3750F6C
	0x03750FFC LDR W8, [X31 + 0x14]
	0x03751000 ADD W26, W26, 0x1
	0x03751004 CMP W26, W8
	0x03751008 B.NE 0x3750EDC
	0x0375100C LDP W8, W21, [X31 + 0xC]
	0x03751010 ADD W21, W21, 0x1
	0x03751014 CMP W21, W8
	0x03751018 B.EQ 0x3751030
	0x0375101C ADRP X8, 0x9F4000
	0x03751020 LDR X8, [X8 + 0x2D8]
	0x03751024 LDR X8, [X8]
	0x03751028 B 0x3750E48
	0x0375102C MOV W20, W31
	0x03751030 MOV W0, W20
	0x03751034 LDP X20, X19, [X31 + 0x70]
	0x03751038 LDP X22, X21, [X31 + 0x60]
	0x0375103C LDP X24, X23, [X31 + 0x50]
	0x03751040 LDP X26, X25, [X31 + 0x40]
	0x03751044 LDP X28, X27, [X31 + 0x30]
	0x03751048 LDP X29, X30, [X31 + 0x20]
	0x0375104C ADD X31, X31, 0x80

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+104]
	003 Move X9, W1
	004 Add X9, X8, X9
	005 Move W10, [X9+4]
	006 Move TEMP, X10
	007 And TEMP, TEMP, 8
	008 Compare TEMP, 8
	009 JumpIfEqual {16}
	010 Move X8, [X0+24]
	011 Compare X8, 0
	012 JumpIfEqual {44}
	013 Move W9, [X8+24]
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Add X8, X8, W2
	016 NotImplemented "Instruction LDRH not yet implemented."
	017 Move W10, 0xFFFF
	018 Move X11, X9
	019 ShiftRight X11, 59
	020 And X11, X11, 0x3FFFFFF
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move TEMP, 31
	023 Not TEMP
	024 Move X9, TEMP
	025 NotImplemented "Instruction CSEL not yet implemented."
	026 Add X8, X9, X8
	027 NotImplemented "Instruction LDRH not yet implemented."
	028 Move X8, [X0+48]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 NotImplemented "Instruction CSINV not yet implemented."
	031 Compare X8, 0
	032 JumpIfEqual {44}
	033 Move W10, [X8+24]
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Add X8, X8, W9
	036 Move X0, [X8+32]
	037 Compare X0, 0
	038 JumpIfEqual {44}
	039 Move X8, [X0]
	040 Move X2, [X8+376]
	041 Move X1, [X8+384]
	042 Move X30, [X31+16]
	043 CallNoReturn X2
	044 Call 0x1C17F20
	045 Call 0x1C17F28

Method: System.Boolean IsActuated(ref UnityEngine.InputSystem.InputActionState/TriggerState trigger, System.Single threshold = 0)

Disassembly:
	0x037501E4 STP X20, X19, [X31 + 0x30]
	0x037501E8 LDR W8, [X0 + 0x54]
	0x037501EC ADD W21, W1, 0x1
	0x037501F0 CMP W21, W8
	0x037501F4 B.GE 0x3750284
	0x037501F8 MOVN W9, 0x800000
	0x037501FC MOV X19, X0
	0x03750200 MOV W20, W2
	0x03750204 FMOV S8, W9
	0x03750208 LDR X9, [X19 + 0x68]
	0x0375020C SXTW X10, W21
	0x03750210 ADD X9, X9, X10, 0x5, LSL
	0x03750214 LDRB W10, [X9 + 0x4]
	0x03750218 TBZ X10, 0x3, 0x375028C
	0x0375021C LDRB W10, [X9 + 0x5]
	0x03750220 CMP W10, W20
	0x03750224 B.NE 0x3750274
	0x03750228 LDRB W22, [X9]
	0x0375022C CBZ X22, 0x3750274
	0x03750230 LDRH W23, [X9 + 0xE]
	0x03750234 LDR X8, [X19 + 0x18]
	0x03750238 CBZ X8, 0x37502A4
	0x0375023C LDR W9, [X8 + 0x18]
	0x03750240 CMP X23, X9
	0x03750244 B.CS 0x37502A8
	0x03750248 ADD X8, X8, X23, 0x3, LSL
	0x0375024C LDR X0, [X8 + 0x20]
	0x03750250 CBZ X0, 0x37502A4
	0x03750254 MOV X1, X31
	0x03750258 BL 0x377240C
	0x0375025C FCMP S0, S8
	0x03750260 FCSEL S8, S0, S8, GT
	0x03750264 SUBS X22, X22, 0x1
	0x03750268 ADD X23, X23, 0x1
	0x0375026C B.NE 0x3750234
	0x03750270 LDR W8, [X19 + 0x54]
	0x03750274 ADD W21, W21, 0x1
	0x03750278 CMP W21, W8
	0x0375027C B.LT 0x3750208
	0x03750280 B 0x375028C
	0x03750284 MOVN W8, 0x800000
	0x03750288 FMOV S8, W8

ISIL:
	001 Move [X31-32], D9
	002 Move [X31-24], D8
	003 Move [X31+16], X30
	004 Move [X31+24], X19
	005 Move V9, [X0+28]
	006 NotImplemented "Instruction FCMP not yet implemented."
	007 Move X19, 0xC8A000
	008 Move W8, [X19+1450]
	009 Move V8, V0
	010 Compare W8, 0
	011 JumpIfNotEqual {17}
	012 Move X0, 0x9AB000
	013 Move X0, [X0+1208]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+1450], W8
	017 Move X8, 0x9AB000
	018 Move X8, [X8+1208]
	019 Move X9, -46551040
	020 Move V0, [X9+576]
	021 NotImplemented "Instruction FABS not yet implemented."
	022 Move X8, [X8]
	023 Move S2, W31
	024 NotImplemented "Instruction FMAXNM not yet implemented."
	025 Multiply S0, S1, S0
	026 Move X8, [X8+184]
	027 Move S1, 8
	028 Move V3, [X8]
	029 Multiply S1, S3, S1
	030 NotImplemented "Instruction FCMP not yet implemented."
	031 NotImplemented "Instruction FCSEL not yet implemented."
	032 NotImplemented "Instruction FABD not yet implemented."
	033 NotImplemented "Instruction FCMP not yet implemented."
	034 NotImplemented "Instruction FCMP not yet implemented."
	035 NotImplemented "Instruction CSET not yet implemented."
	036 Move W0, 1
	037 NotImplemented "Instruction FCMP not yet implemented."
	038 NotImplemented "Instruction CSET not yet implemented."
	039 Move X30, [X31+16]
	040 Move X19, [X31+24]
	041 Move D9, [X31+32]
	042 Move D8, [X31+40]
	043 Return X0

Method: System.Void ReadValue(System.Int32 bindingIndex, System.Int32 controlIndex, System.Void* buffer, System.Int32 bufferSize, System.Boolean ignoreComposites = False)

Disassembly:
	0x03751050 RET
	0x03751054 BL 0x1C16F20
	0x03751058 BL 0x1C16F28
	0x0375105C MOV X0, X22
	0x03751060 BL 0x1C171E0
	0x03751064 SUB X31, X31, 0x70
	0x03751068 STP X29, X30, [X31 + 0x10]
	0x0375106C STP X28, X27, [X31 + 0x20]
	0x03751070 STP X26, X25, [X31 + 0x30]
	0x03751074 STP X24, X23, [X31 + 0x40]
	0x03751078 STP X22, X21, [X31 + 0x50]
	0x0375107C STP X20, X19, [X31 + 0x60]
	0x03751080 ADRP X21, 0xC8F000
	0x03751084 ADRP X24, 0x9F4000
	0x03751088 LDRB W8, [X21 + 0xDB4]
	0x0375108C LDR X24, [X24 + 0x2D8]
	0x03751090 MOV W19, W1
	0x03751094 MOV X20, X0
	0x03751098 TBNZ X8, 0x0, 0x37510C8
	0x0375109C ADRP X0, 0x9F4000
	0x037510A0 LDR X0, [X0 + 0xCA0]
	0x037510A4 BL 0x1C16CF4
	0x037510A8 ADRP X0, 0x9F4000
	0x037510AC LDR X0, [X0 + 0xB28]
	0x037510B0 BL 0x1C16CF4
	0x037510B4 ADRP X0, 0x9F4000
	0x037510B8 LDR X0, [X0 + 0x2D8]
	0x037510BC BL 0x1C16CF4
	0x037510C0 MOVZ W8, 0x1
	0x037510C4 STRB W8, [X21 + 0xDB4]
	0x037510C8 LDR X8, [X24]
	0x037510CC STP X31, X31, [X31]
	0x037510D0 LDR X0, [X8 + 0xB8]
	0x037510D4 LDR W8, [X0]
	0x037510D8 CMP W8, 0x1
	0x037510DC B.LT 0x375134C
	0x037510E0 ADRP X26, 0x9F4000
	0x037510E4 ADRP X27, 0x9F4000
	0x037510E8 LDR X26, [X26 + 0xB28]
	0x037510EC LDR X27, [X27 + 0xCA0]
	0x037510F0 MOV W21, W31
	0x037510F4 MOV X25, X31
	0x037510F8 MOV W28, W19
	0x037510FC LDR X2, [X26]
	0x03751100 MOV W1, W21
	0x03751104 BL 0x2DE6188
	0x03751108 STR X0, [X31 + 0x8]
	0x0375110C ADD X0, X31, 0x8
	0x03751110 MOV X1, X31
	0x03751114 BL 0x32C05E4
	0x03751118 TBZ X0, 0x0, 0x37511BC
	0x0375111C ADD X0, X31, 0x8
	0x03751120 MOV X1, X31
	0x03751124 BL 0x32C05F4
	0x03751128 CBZ X0, 0x37511BC
	0x0375112C ADD X0, X31, 0x8
	0x03751130 MOV X1, X31
	0x03751134 BL 0x32C05F4
	0x03751138 MOV X22, X0
	0x0375113C CBZ X0, 0x375116C
	0x03751140 LDR X8, [X22]
	0x03751144 LDR X1, [X24]
	0x03751148 LDRB W10, [X8 + 0x130]
	0x0375114C LDRB W9, [X1 + 0x130]
	0x03751150 CMP W10, W9
	0x03751154 B.CC 0x3751374
	0x03751158 LDR X8, [X8 + 0xC8]
	0x0375115C ADD X8, X8, X9, 0x3, LSL
	0x03751160 LDUR X8, [X8 - 0x8]
	0x03751164 CMP X8, X1
	0x03751168 B.NE 0x3751374
	0x0375116C CMP W19, 0x9
	0x03751170 MOVZ W23, 0x1
	0x03751174 B.HI 0x37512EC
	0x03751178 ADRP X10, 0xFFFFFFFFFD446000
	0x0375117C ADD X10, X10, 0x871
	0x03751180 ADR X8, 0x10
	0x03751184 LDRB W9, [X10, X28, LSL]
	0x03751188 ADD X8, X8, X9, 0x2, LSL
	0x0375118C BR X8
	0x03751190 CBZ X22, 0x375136C
	0x03751194 MOV X0, X22
	0x03751198 MOV X1, X20
	0x0375119C BL 0x374B28C
	0x037511A0 TBNZ X0, 0x0, 0x37511B4
	0x037511A4 MOV X0, X22
	0x037511A8 MOV X1, X20
	0x037511AC BL 0x374B444
	0x037511B0 TBZ X0, 0x0, 0x3751208
	0x037511B4 MOVZ W23, 0x1
	0x037511B8 B 0x37512F8
	0x037511BC ADD X0, X31, 0x8
	0x037511C0 MOV X1, X31

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move W19, W4
	011 Move X20, X3
	012 Move W22, W1
	013 Move X21, X0
	014 Move [X31], X31
	015 Move [X31+8], X31
	016 Move TEMP, X5
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {29}
	020 Move X8, [X21+104]
	021 Move W9, W22
	022 Move X9, W9
	023 Add X9, X8, X9
	024 Move W10, [X9+4]
	025 Move TEMP, X10
	026 And TEMP, TEMP, 8
	027 Compare TEMP, 8
	028 JumpIfEqual {41}
	029 Move X8, [X21+24]
	030 Compare X8, 0
	031 JumpIfEqual {111}
	032 Move W9, [X8+24]
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Add X8, X8, W2
	035 Move X23, [X8+32]
	036 Move X1, X20
	037 Move W2, W19
	038 Move X3, X31
	039 Move X0, X23
	040 Call InputControlExtensions.ReadValueIntoBuffer, X0, X1, X2
	041 NotImplemented "Instruction LDRH not yet implemented."
	042 Move W10, 0xFFFF
	043 NotImplemented "Instruction CMP not yet implemented."
	044 NotImplemented "Instruction CSINV not yet implemented."
	045 Move W9, W22
	046 Move X9, W9
	047 Add X8, X8, X9
	048 NotImplemented "Instruction LDRH not yet implemented."
	049 Move X8, [X21+48]
	050 NotImplemented "Instruction CMP not yet implemented."
	051 NotImplemented "Instruction CSINV not yet implemented."
	052 Compare X8, 0
	053 JumpIfEqual {111}
	054 Move W10, [X8+24]
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Add X8, X8, W9
	057 Move X0, [X8+32]
	058 Move [X31], X21
	059 Move [X31+8], W22
	060 Move [X31+12], W31
	061 Compare X0, 0
	062 JumpIfEqual {111}
	063 Move X8, [X0]
	064 Add X1, X31, 0
	065 Move X2, X20
	066 Move W3, W19
	067 Move X9, [X8+408]
	068 Move X4, [X8+416]
	069 NotImplemented "Instruction BLR not yet implemented."
	070 Move X23, X31
	071 Move X8, [X21+104]
	072 Move X9, W22
	073 Add X8, X8, X9
	074 Move W22, [X8+2]
	075 Compare X22, 0
	076 JumpIfEqual {101}
	077 NotImplemented "Instruction LDRH not yet implemented."
	078 Move W9, 0xFFFF
	079 NotImplemented "Instruction CMP not yet implemented."
	080 NotImplemented "Instruction CSINV not yet implemented."
	081 NotImplemented "Instruction SBFM not yet implemented."
	082 Add X25, X8, 32
	083 Move X8, [X21+40]
	084 Compare X8, 0
	085 JumpIfEqual {111}
	086 Move W9, [X8+24]
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Move X0, [X8]
	089 Compare X0, 0
	090 JumpIfEqual {111}
	091 Move X8, [X0]
	092 Move X1, X20
	093 Move W2, W19
	094 Move X3, X23
	095 Move X9, [X8+392]
	096 Move X4, [X8+400]
	097 NotImplemented "Instruction BLR not yet implemented."
	098 Add X25, X25, 8
	099 Subtract X22, X22, 1
	100 Add W24, W24, 1
	101 Move X20, [X31+64]
	102 Move X19, [X31+72]
	103 Move X22, [X31+48]
	104 Move X21, [X31+56]
	105 Move X24, [X31+32]
	106 Move X23, [X31+40]
	107 Move X30, [X31+16]
	108 Move X25, [X31+24]
	109 Add X31, X31, 80
	110 Return 
	111 Call 0x1C17F20
	112 Call 0x1C17F28

Method: TValue ReadValue(System.Int32 bindingIndex, System.Int32 controlIndex, System.Boolean ignoreComposites = False)

Disassembly:
	0x021F988C BL 0x1C16D08
	0x021F9890 MOVZ W1, 0x5
	0x021F9894 BL 0x1C16D6C
	0x021F9898 LDR X8, [X19 + 0x38]
	0x021F989C MOV X25, X0
	0x021F98A0 ADRP X0, 0x1EFA000
	0x021F98A4 LDR X26, [X8 + 0x10]
	0x021F98A8 LDR X0, [X0 + 0x6C0]
	0x021F98AC BL 0x1C16D08
	0x021F98B0 BL 0x19903D0
	0x021F98B4 MOV X0, X26
	0x021F98B8 MOV X1, X31
	0x021F98BC BL 0x338C698
	0x021F98C0 MOV X26, X0
	0x021F98C4 BL 0x19903C0
	0x021F98C8 LDR X8, [X26]
	0x021F98CC MOV X0, X26
	0x021F98D0 LDP X9, X1, [X8 + 0x1A8]
	0x021F98D4 BLR X9
	0x021F98D8 MOV X26, X0
	0x021F98DC MOV X0, X25
	0x021F98E0 BL 0x19903C0
	0x021F98E4 MOV X0, X25
	0x021F98E8 MOV X1, X26
	0x021F98EC BL 0x19980B4
	0x021F98F0 MOV X0, X25
	0x021F98F4 MOV X1, X31
	0x021F98F8 MOV X2, X26
	0x021F98FC BL 0x1993444
	0x021F9900 MOV X0, X25
	0x021F9904 BL 0x19903C0
	0x021F9908 MOV X0, X25
	0x021F990C MOV X1, X24
	0x021F9910 BL 0x19980B4
	0x021F9914 MOVZ W1, 0x1
	0x021F9918 MOV X0, X25
	0x021F991C MOV X2, X24
	0x021F9920 BL 0x1993444
	0x021F9924 MOV X0, X20
	0x021F9928 MOV W1, W21
	0x021F992C MOV X2, X31
	0x021F9930 BL 0x374FCD8
	0x021F9934 MOV X20, X0
	0x021F9938 MOV X0, X25
	0x021F993C BL 0x19903C0
	0x021F9940 MOV X0, X25
	0x021F9944 MOV X1, X20
	0x021F9948 BL 0x19980B4
	0x021F994C MOVZ W1, 0x2
	0x021F9950 MOV X0, X25
	0x021F9954 MOV X2, X20
	0x021F9958 BL 0x1993444
	0x021F995C STR W22, [X31 + 0x18]
	0x021F9960 ADRP X0, 0x1EFA000
	0x021F9964 LDR X0, [X0 + 0x758]
	0x021F9968 BL 0x1C16D08
	0x021F996C ADD X1, X31, 0x18
	0x021F9970 BL 0x1C16E04
	0x021F9974 MOV X1, X31
	0x021F9978 BL 0x33BE520
	0x021F997C MOV X20, X0
	0x021F9980 BL 0x19903C0
	0x021F9984 LDR X8, [X20]
	0x021F9988 MOV X0, X20
	0x021F998C LDP X9, X1, [X8 + 0x1A8]
	0x021F9990 BLR X9
	0x021F9994 MOV X20, X0
	0x021F9998 MOV X0, X25
	0x021F999C BL 0x19903C0
	0x021F99A0 MOV X0, X25
	0x021F99A4 MOV X1, X20
	0x021F99A8 BL 0x19980B4
	0x021F99AC MOVZ W1, 0x3
	0x021F99B0 MOV X0, X25
	0x021F99B4 MOV X2, X20
	0x021F99B8 BL 0x1993444
	0x021F99BC MOV X0, X23
	0x021F99C0 MOV X1, X31
	0x021F99C4 BL 0x3768F30
	0x021F99C8 MOV X20, X0
	0x021F99CC MOV X0, X25
	0x021F99D0 BL 0x19903C0
	0x021F99D4 MOV X0, X25
	0x021F99D8 MOV X1, X20
	0x021F99DC BL 0x19980B4
	0x021F99E0 MOVZ W1, 0x4
	0x021F99E4 MOV X0, X25
	0x021F99E8 MOV X2, X20
	0x021F99EC BL 0x1993444
	0x021F99F0 ADRP X0, 0x1F22000
	0x021F99F4 LDR X0, [X0 + 0xCA8]
	0x021F99F8 BL 0x1C16D08
	0x021F99FC MOV X1, X25
	0x021F9A00 B 0x21F9844
	0x021F9A04 SUB X31, X31, 0x70
	0x021F9A08 STR X30, [X31 + 0x20]
	0x021F9A0C STP X26, X25, [X31 + 0x30]
	0x021F9A10 STP X24, X23, [X31 + 0x40]
	0x021F9A14 STP X22, X21, [X31 + 0x50]
	0x021F9A18 STP X20, X19, [X31 + 0x60]
	0x021F9A1C LDR X8, [X4 + 0x38]
	0x021F9A20 MOV X19, X4
	0x021F9A24 MOV W23, W3
	0x021F9A28 MOV W22, W2
	0x021F9A2C MOV W21, W1
	0x021F9A30 MOV X20, X0
	0x021F9A34 CBNZ X8, 0x21F9A54
	0x021F9A38 ADRP X0, 0x1EFA000
	0x021F9A3C LDR X0, [X0 + 0x6C0]
	0x021F9A40 BL 0x1C16CF4
	0x021F9A44 LDR X8, [X19 + 0x38]
	0x021F9A48 CBNZ X8, 0x21F9A54
	0x021F9A4C MOV X0, X19
	0x021F9A50 BL 0x1C5C6E0
	0x021F9A54 STP X31, X31, [X31 + 0x10]
	0x021F9A58 STR X31, [X31 + 0x28]
	0x021F9A5C TBNZ X23, 0x0, 0x21F9BAC
	0x021F9A60 MOV X0, X20
	0x021F9A64 MOV X1, X31
	0x021F9A68 BL 0x374A7E8
	0x021F9A6C SXTW X8, W21
	0x021F9A70 ADD X0, X0, X8, 0x5, LSL
	0x021F9A74 MOV X1, X31
	0x021F9A78 BL 0x374AB5C
	0x021F9A7C TBZ X0, 0x0, 0x21F9BAC
	0x021F9A80 MOV X0, X20
	0x021F9A84 MOV X1, X31
	0x021F9A88 SBFM X22, X21, 0x3B, 0x1F
	0x021F9A8C BL 0x374A7E8
	0x021F9A90 ADD X0, X22, X0
	0x021F9A94 MOV X1, X31
	0x021F9A98 BL 0x374AB68
	0x021F9A9C MOV W25, W0
	0x021F9AA0 MOV X0, X20
	0x021F9AA4 MOV X1, X31
	0x021F9AA8 BL 0x374A7E8
	0x021F9AAC SXTW X8, W25
	0x021F9AB0 ADD X0, X0, X8, 0x5, LSL
	0x021F9AB4 MOV X1, X31
	0x021F9AB8 BL 0x374AB68
	0x021F9ABC LDR X8, [X20 + 0x30]
	0x021F9AC0 CBZ X8, 0x21F9E5C
	0x021F9AC4 LDR W9, [X8 + 0x18]
	0x021F9AC8 MOV W22, W0
	0x021F9ACC CMP W0, W9
	0x021F9AD0 B.CS 0x21F9E60
	0x021F9AD4 ADD X8, X8, W22, 0x3, SXTW
	0x021F9AD8 LDR X24, [X8 + 0x20]
	0x021F9ADC STR X20, [X31 + 0x10]
	0x021F9AE0 STP W25, W31, [X31 + 0x18]
	0x021F9AE4 LDR X8, [X19 + 0x38]
	0x021F9AE8 LDR X0, [X8 + 0x8]
	0x021F9AEC LDRB W8, [X0 + 0x135]
	0x021F9AF0 TBNZ X8, 0x0, 0x21F9AF8
	0x021F9AF4 BL 0x1C5C684
	0x021F9AF8 CBZ X24, 0x21F9E5C
	0x021F9AFC LDR X8, [X24]
	0x021F9B00 LDRB W9, [X0 + 0x130]
	0x021F9B04 LDRB W10, [X8 + 0x130]
	0x021F9B08 CMP W10, W9
	0x021F9B0C B.CC 0x21F9B24
	0x021F9B10 LDR X10, [X8 + 0xC8]
	0x021F9B14 ADD X9, X10, X9, 0x3, LSL
	0x021F9B18 LDUR X9, [X9 - 0x8]
	0x021F9B1C CMP X9, X0
	0x021F9B20 B.EQ 0x21F9C7C
	0x021F9B24 LDP X9, X1, [X8 + 0x178]
	0x021F9B28 MOV X0, X24
	0x021F9B2C BLR X9
	0x021F9B30 ADRP X8, 0x1EFA000
	0x021F9B34 LDR X8, [X8 + 0x6C0]
	0x021F9B38 LDR X9, [X19 + 0x38]
	0x021F9B3C MOV X23, X0
	0x021F9B40 LDR X8, [X8]
	0x021F9B44 LDR X26, [X9 + 0x10]
	0x021F9B48 LDR W10, [X8 + 0xE0]
	0x021F9B4C CBNZ W10, 0x21F9B58
	0x021F9B50 MOV X0, X8
	0x021F9B54 BL 0x1C16DFC
	0x021F9B58 MOV X0, X26
	0x021F9B5C MOV X1, X31
	0x021F9B60 BL 0x338C698
	0x021F9B64 CBZ X23, 0x21F9E5C
	0x021F9B68 LDR X8, [X23]
	0x021F9B6C MOV X1, X0
	0x021F9B70 MOV X0, X23
	0x021F9B74 LDR X9, [X8 + 0x2A8]
	0x021F9B78 LDR X2, [X8 + 0x2B0]
	0x021F9B7C BLR X9
	0x021F9B80 TBZ X0, 0x0, 0x21F9E64
	0x021F9B84 LDR X8, [X24]
	0x021F9B88 ADD X1, X31, 0x10
	0x021F9B8C ADD X2, X31, 0x28
	0x021F9B90 MOVZ W3, 0x8
	0x021F9B94 LDP X9, X4, [X8 + 0x198]
	0x021F9B98 MOV X0, X24
	0x021F9B9C BLR X9
	0x021F9BA0 LDP S0, S1, [X31 + 0x28]
	0x021F9BA4 MOV X22, X31
	0x021F9BA8 B 0x21F9C48
	0x021F9BAC ADDS W31, W22, 0x1
	0x021F9BB0 B.EQ 0x21F9C38
	0x021F9BB4 LDR X8, [X20 + 0x18]
	0x021F9BB8 CBZ X8, 0x21F9E5C
	0x021F9BBC LDR W9, [X8 + 0x18]
	0x021F9BC0 CMP W9, W22
	0x021F9BC4 B.LS 0x21F9E60
	0x021F9BC8 LDR X9, [X19 + 0x38]
	0x021F9BCC ADD X8, X8, W22, 0x3, SXTW
	0x021F9BD0 LDR X22, [X8 + 0x20]
	0x021F9BD4 LDR X0, [X9 + 0x38]
	0x021F9BD8 LDRB W9, [X0 + 0x135]
	0x021F9BDC TBNZ X9, 0x0, 0x21F9BE4
	0x021F9BE0 BL 0x1C5C684
	0x021F9BE4 CBZ X22, 0x21F9C98
	0x021F9BE8 LDR X8, [X22]
	0x021F9BEC LDRB W9, [X0 + 0x130]
	0x021F9BF0 LDRB W10, [X8 + 0x130]
	0x021F9BF4 CMP W10, W9
	0x021F9BF8 B.CC 0x21F9C98
	0x021F9BFC LDR X8, [X8 + 0xC8]
	0x021F9C00 ADD X8, X8, X9, 0x3, LSL
	0x021F9C04 LDUR X8, [X8 - 0x8]
	0x021F9C08 CMP X8, X0
	0x021F9C0C B.NE 0x21F9C98
	0x021F9C10 LDR X8, [X19 + 0x38]
	0x021F9C14 MOV X0, X22
	0x021F9C18 LDR X1, [X8 + 0x40]
	0x021F9C1C BL 0x2E094B0
	0x021F9C20 LDR X8, [X0]
	0x021F9C24 UBFM X9, X8, 0x20, 0x3F
	0x021F9C28 FMOV S0, W8
	0x021F9C2C FMOV S1, W9
	0x021F9C30 STR X8, [X31 + 0x28]
	0x021F9C34 B 0x21F9C44
	0x021F9C38 MOV X22, X31
	0x021F9C3C FMOV S1, W31
	0x021F9C40 FMOV S0, W31
	0x021F9C44 MOV W25, W21
	0x021F9C48 LDR X8, [X19 + 0x38]
	0x021F9C4C MOV X0, X20
	0x021F9C50 MOV W1, W25
	0x021F9C54 MOV X2, X22
	0x021F9C58 LDR X3, [X8 + 0x50]
	0x021F9C5C BL 0x21F754C
	0x021F9C60 LDP X20, X19, [X31 + 0x60]
	0x021F9C64 LDP X22, X21, [X31 + 0x50]
	0x021F9C68 LDP X24, X23, [X31 + 0x40]
	0x021F9C6C LDP X26, X25, [X31 + 0x30]
	0x021F9C70 LDR X30, [X31 + 0x20]
	0x021F9C74 ADD X31, X31, 0x70
	0x021F9C78 RET
	0x021F9C7C LDP X9, X2, [X8 + 0x1D8]
	0x021F9C80 ADD X1, X31, 0x10
	0x021F9C84 MOV X0, X24
	0x021F9C88 BLR X9
	0x021F9C8C MOV X22, X31
	0x021F9C90 STP S0, S1, [X31 + 0x28]
	0x021F9C94 B 0x21F9C48
	0x021F9C98 ADRP X0, 0x1EFA000
	0x021F9C9C LDR X0, [X0 + 0x9D0]
	0x021F9CA0 BL 0x1C16D08
	0x021F9CA4 MOVZ W1, 0x5
	0x021F9CA8 BL 0x1C16D6C
	0x021F9CAC LDR X8, [X19 + 0x38]
	0x021F9CB0 MOV X23, X0
	0x021F9CB4 ADRP X0, 0x1EFA000
	0x021F9CB8 LDR X24, [X8 + 0x10]
	0x021F9CBC LDR X0, [X0 + 0x6C0]
	0x021F9CC0 BL 0x1C16D08
	0x021F9CC4 BL 0x19903D0
	0x021F9CC8 MOV X0, X24
	0x021F9CCC MOV X1, X31
	0x021F9CD0 BL 0x338C698
	0x021F9CD4 MOV X1, X31
	0x021F9CD8 BL 0x3768F30
	0x021F9CDC MOV X24, X0
	0x021F9CE0 MOV X0, X23
	0x021F9CE4 BL 0x19903C0
	0x021F9CE8 MOV X0, X23
	0x021F9CEC MOV X1, X24
	0x021F9CF0 BL 0x19980B4
	0x021F9CF4 MOV X0, X23
	0x021F9CF8 MOV X1, X31
	0x021F9CFC MOV X2, X24
	0x021F9D00 BL 0x1993444
	0x021F9D04 MOV X0, X22
	0x021F9D08 BL 0x19903C0
	0x021F9D0C MOV X0, X22
	0x021F9D10 MOV X1, X31
	0x021F9D14 BL 0x3771F68
	0x021F9D18 MOV X24, X0
	0x021F9D1C MOV X0, X23
	0x021F9D20 BL 0x19903C0
	0x021F9D24 MOV X0, X23
	0x021F9D28 MOV X1, X24
	0x021F9D2C BL 0x19980B4
	0x021F9D30 MOVZ W1, 0x1
	0x021F9D34 MOV X0, X23
	0x021F9D38 MOV X2, X24
	0x021F9D3C BL 0x1993444
	0x021F9D40 MOV X0, X20
	0x021F9D44 MOV W1, W21
	0x021F9D48 MOV X2, X31
	0x021F9D4C BL 0x374FCD8
	0x021F9D50 MOV X20, X0
	0x021F9D54 MOV X0, X23
	0x021F9D58 BL 0x19903C0
	0x021F9D5C MOV X0, X23
	0x021F9D60 MOV X1, X20
	0x021F9D64 BL 0x19980B4
	0x021F9D68 MOVZ W1, 0x2
	0x021F9D6C MOV X0, X23
	0x021F9D70 MOV X2, X20
	0x021F9D74 BL 0x1993444
	0x021F9D78 MOV X0, X22
	0x021F9D7C BL 0x19903C0
	0x021F9D80 MOV X0, X22
	0x021F9D84 MOV X1, X31
	0x021F9D88 BL 0x33BE520
	0x021F9D8C MOV X20, X0
	0x021F9D90 BL 0x19903C0
	0x021F9D94 LDR X8, [X20]
	0x021F9D98 MOV X0, X20
	0x021F9D9C LDP X9, X1, [X8 + 0x1A8]
	0x021F9DA0 BLR X9
	0x021F9DA4 MOV X20, X0
	0x021F9DA8 MOV X0, X23
	0x021F9DAC BL 0x19903C0
	0x021F9DB0 MOV X0, X23
	0x021F9DB4 MOV X1, X20
	0x021F9DB8 BL 0x19980B4
	0x021F9DBC MOVZ W1, 0x3
	0x021F9DC0 MOV X0, X23
	0x021F9DC4 MOV X2, X20
	0x021F9DC8 BL 0x1993444
	0x021F9DCC MOV X0, X22
	0x021F9DD0 BL 0x19903C0
	0x021F9DD4 LDR X8, [X22]
	0x021F9DD8 MOV X0, X22
	0x021F9DDC LDP X9, X1, [X8 + 0x178]
	0x021F9DE0 BLR X9
	0x021F9DE4 MOV X1, X31
	0x021F9DE8 BL 0x3768F30
	0x021F9DEC MOV X20, X0
	0x021F9DF0 MOV X0, X23
	0x021F9DF4 BL 0x19903C0
	0x021F9DF8 MOV X0, X23
	0x021F9DFC MOV X1, X20
	0x021F9E00 BL 0x19980B4
	0x021F9E04 MOVZ W1, 0x4
	0x021F9E08 MOV X0, X23
	0x021F9E0C MOV X2, X20
	0x021F9E10 BL 0x1993444
	0x021F9E14 ADRP X0, 0x1F22000
	0x021F9E18 LDR X0, [X0 + 0xCA0]
	0x021F9E1C BL 0x1C16D08
	0x021F9E20 MOV X1, X23
	0x021F9E24 MOV X2, X31
	0x021F9E28 BL 0x3227C5C
	0x021F9E2C MOV X20, X0
	0x021F9E30 ADRP X0, 0x1EFA000
	0x021F9E34 LDR X0, [X0 + 0x5B0]
	0x021F9E38 BL 0x1C16D08
	0x021F9E3C BL 0x1C16F10
	0x021F9E40 MOV X1, X20
	0x021F9E44 MOV X2, X31
	0x021F9E48 MOV X21, X0
	0x021F9E4C BL 0x337DF1C
	0x021F9E50 MOV X0, X21
	0x021F9E54 MOV X1, X19
	0x021F9E58 BL 0x1C16DEC
	0x021F9E5C BL 0x1C16F20

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+32], X26
	004 Move [X31+40], X25
	005 Move [X31+48], X24
	006 Move [X31+56], X23
	007 Move [X31+64], X22
	008 Move [X31+72], X21
	009 Move [X31+80], X20
	010 Move [X31+88], X19
	011 Move X8, [X4+56]
	012 Move X19, X4
	013 Move W23, W3
	014 Move W22, W2
	015 Move W21, W1
	016 Move X20, X0
	017 Compare X8, 0
	018 JumpIfNotEqual {27}
	019 Move X0, 0x1EFB000
	020 Move X0, [X0+1728]
	021 Call 0x1C17CF4
	022 Move X8, [X19+56]
	023 Compare X8, 0
	024 JumpIfNotEqual {27}
	025 Move X0, X19
	026 Call 0x1C5D6E0
	027 Move [X31], X31
	028 Move [X31+8], X31
	029 Move [X31+28], W31
	030 Move TEMP, X23
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfEqual {129}
	034 Move X0, X20
	035 Move X1, X31
	036 Call InputActionState.get_bindingStates, X0
	037 Move X8, W21
	038 Add X0, X0, X8
	039 Move X1, X31
	040 Call BindingState.get_isPartOfComposite, X0
	041 Move TEMP, X0
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfNotEqual {129}
	045 Move X0, X20
	046 Move X1, X31
	047 NotImplemented "Instruction SBFM not yet implemented."
	048 Call InputActionState.get_bindingStates, X0
	049 Add X0, X22, X0
	050 Move X1, X31
	051 Call BindingState.get_compositeOrCompositeBindingIndex, X0
	052 Move W25, W0
	053 Move X0, X20
	054 Move X1, X31
	055 Call InputActionState.get_bindingStates, X0
	056 Move X8, W25
	057 Add X0, X0, X8
	058 Move X1, X31
	059 Call BindingState.get_compositeOrCompositeBindingIndex, X0
	060 Move X8, [X20+48]
	061 Compare X8, 0
	062 JumpIfEqual {304}
	063 Move W9, [X8+24]
	064 Move W22, W0
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Add X8, X8, W22
	067 Move X24, [X8+32]
	068 Move [X31], X20
	069 Move [X31+8], W25
	070 Move [X31+12], W31
	071 Move X8, [X19+56]
	072 Move X0, [X8+8]
	073 Move W8, [X0+309]
	074 Move TEMP, X8
	075 And TEMP, TEMP, 1
	076 Compare TEMP, 1
	077 JumpIfEqual {79}
	078 Call 0x1C5D684
	079 Compare X24, 0
	080 JumpIfEqual {304}
	081 Move X8, [X24]
	082 Move W9, [X0+304]
	083 Move W10, [X8+304]
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Move X10, [X8+200]
	086 Add X9, X10, X9
	087 NotImplemented "Instruction LDUR not yet implemented."
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Move X9, [X8+376]
	090 Move X1, [X8+384]
	091 Move X0, X24
	092 NotImplemented "Instruction BLR not yet implemented."
	093 Move X8, 0x1EFB000
	094 Move X8, [X8+1728]
	095 Move X9, [X19+56]
	096 Move X23, X0
	097 Move X8, [X8]
	098 Move X26, [X9+16]
	099 Move W10, [X8+224]
	100 Compare W10, 0
	101 JumpIfNotEqual {104}
	102 Move X0, X8
	103 Call 0x1C17DFC
	104 Move X0, X26
	105 Move X1, X31
	106 Call Type.GetTypeFromHandle, X0
	107 Compare X23, 0
	108 JumpIfEqual {304}
	109 Move X8, [X23]
	110 Move X1, X0
	111 Move X0, X23
	112 Move X9, [X8+680]
	113 Move X2, [X8+688]
	114 NotImplemented "Instruction BLR not yet implemented."
	115 Move TEMP, X0
	116 And TEMP, TEMP, 1
	117 Compare TEMP, 1
	118 JumpIfNotEqual {306}
	119 Move X8, [X24]
	120 Add X1, X31, 0
	121 Add X2, X31, 28
	122 Move W3, 4
	123 Move X9, [X8+408]
	124 Move X4, [X8+416]
	125 Move X0, X24
	126 NotImplemented "Instruction BLR not yet implemented."
	127 Move W2, [X31+28]
	128 Move X22, X31
	129 Add W31, W22, 1
	130 Move X8, [X20+24]
	131 Compare X8, 0
	132 JumpIfEqual {304}
	133 Move W9, [X8+24]
	134 NotImplemented "Instruction CMP not yet implemented."
	135 Move X9, [X19+56]
	136 Add X8, X8, W22
	137 Move X22, [X8+32]
	138 Move X0, [X9+56]
	139 Move W9, [X0+309]
	140 Move TEMP, X9
	141 And TEMP, TEMP, 1
	142 Compare TEMP, 1
	143 JumpIfEqual {145}
	144 Call 0x1C5D684
	145 Compare X22, 0
	146 JumpIfEqual {189}
	147 Move X8, [X22]
	148 Move W9, [X0+304]
	149 Move W10, [X8+304]
	150 NotImplemented "Instruction CMP not yet implemented."
	151 Move X8, [X8+200]
	152 Add X8, X8, X9
	153 NotImplemented "Instruction LDUR not yet implemented."
	154 NotImplemented "Instruction CMP not yet implemented."
	155 Move X8, [X19+56]
	156 Move X0, X22
	157 Move X1, [X8+64]
	158 Call InputControl`1<Int32>.get_value, X0
	159 Move W2, [X0]
	160 Move [X31+28], W2
	161 Move W2, W31
	162 Move X22, X31
	163 Move W25, W21
	164 Move X8, [X19+56]
	165 Move X0, X20
	166 Move W1, W25
	167 Move X3, X22
	168 Move X4, [X8+80]
	169 Call 0x21F8198, X0, X1, X2, X3
	170 Move X20, [X31+80]
	171 Move X19, [X31+88]
	172 Move X22, [X31+64]
	173 Move X21, [X31+72]
	174 Move X24, [X31+48]
	175 Move X23, [X31+56]
	176 Move X26, [X31+32]
	177 Move X25, [X31+40]
	178 Move X30, [X31+16]
	179 Add X31, X31, 96
	180 Return X0
	181 Move X9, [X8+472]
	182 Move X2, [X8+480]
	183 Add X1, X31, 0
	184 Move X0, X24
	185 NotImplemented "Instruction BLR not yet implemented."
	186 Move W2, W0
	187 Move X22, X31
	188 Move [X31+28], W0
	189 Move X0, 0x1EFB000
	190 Move X0, [X0+2512]
	191 Call 0x1C17D08
	192 Move W1, 5
	193 Call 0x1C17D6C
	194 Move X8, [X19+56]
	195 Move X23, X0
	196 Move X0, 0x1EFB000
	197 Move X24, [X8+16]
	198 Move X0, [X0+1728]
	199 Call 0x1C17D08
	200 Call 0x19913D0
	201 Move X0, X24
	202 Move X1, X31
	203 Call Type.GetTypeFromHandle, X0
	204 Move X1, X31
	205 Call TypeHelpers.GetNiceTypeName, X0
	206 Move X24, X0
	207 Move X0, X23
	208 Call 0x19913C0
	209 Move X0, X23
	210 Move X1, X24
	211 Call 0x19990B4
	212 Move X0, X23
	213 Move X1, X31
	214 Move X2, X24
	215 Call 0x1994444
	216 Move X0, X22
	217 Call 0x19913C0
	218 Move X0, X22
	219 Move X1, X31
	220 Call InputControl.get_path, X0
	221 Move X24, X0
	222 Move X0, X23
	223 Call 0x19913C0
	224 Move X0, X23
	225 Move X1, X24
	226 Call 0x19990B4
	227 Move W1, 1
	228 Move X0, X23
	229 Move X2, X24
	230 Call 0x1994444
	231 Move X0, X20
	232 Move W1, W21
	233 Move X2, X31
	234 Call InputActionState.GetActionOrNull, X0, X1
	235 Move X20, X0
	236 Move X0, X23
	237 Call 0x19913C0
	238 Move X0, X23
	239 Move X1, X20
	240 Call 0x19990B4
	241 Move W1, 2
	242 Move X0, X23
	243 Move X2, X20
	244 Call 0x1994444
	245 Move X0, X22
	246 Call 0x19913C0
	247 Move X0, X22
	248 Move X1, X31
	249 Call "il2cpp_vm_object_is_inst", X0
	250 Move X20, X0
	251 Call 0x19913C0
	252 Move X8, [X20]
	253 Move X0, X20
	254 Move X9, [X8+424]
	255 Move X1, [X8+432]
	256 NotImplemented "Instruction BLR not yet implemented."
	257 Move X20, X0
	258 Move X0, X23
	259 Call 0x19913C0
	260 Move X0, X23
	261 Move X1, X20
	262 Call 0x19990B4
	263 Move W1, 3
	264 Move X0, X23
	265 Move X2, X20
	266 Call 0x1994444
	267 Move X0, X22
	268 Call 0x19913C0
	269 Move X8, [X22]
	270 Move X0, X22
	271 Move X9, [X8+376]
	272 Move X1, [X8+384]
	273 NotImplemented "Instruction BLR not yet implemented."
	274 Move X1, X31
	275 Call TypeHelpers.GetNiceTypeName, X0
	276 Move X20, X0
	277 Move X0, X23
	278 Call 0x19913C0
	279 Move X0, X23
	280 Move X1, X20
	281 Call 0x19990B4
	282 Move W1, 4
	283 Move X0, X23
	284 Move X2, X20
	285 Call 0x1994444
	286 Move X0, 0x1F23000
	287 Move X0, [X0+3232]
	288 Call 0x1C17D08
	289 Move X1, X23
	290 Move X2, X31
	291 Call String.Format, X0, X1
	292 Move X20, X0
	293 Move X0, 0x1EFB000
	294 Move X0, [X0+1456]
	295 Call 0x1C17D08
	296 Call 0x1C17F10
	297 Move X1, X20
	298 Move X2, X31
	299 Move X21, X0
	300 Call InvalidOperationException..ctor, X0, X1
	301 Move X0, X21
	302 Move X1, X19
	303 Call 0x1C17DEC
	304 Call 0x1C17F20
	305 Call 0x1C17F28
	306 Move X0, 0x1EFB000
	307 Move X0, [X0+2512]
	308 Call 0x1C17D08
	309 Move W1, 5
	310 Call 0x1C17D6C
	311 Move X8, [X19+56]
	312 Move X25, X0
	313 Move X0, 0x1EFB000
	314 Move X26, [X8+16]
	315 Move X0, [X0+1728]
	316 Call 0x1C17D08
	317 Call 0x19913D0
	318 Move X0, X26
	319 Move X1, X31
	320 Call Type.GetTypeFromHandle, X0
	321 Move X26, X0
	322 Call 0x19913C0
	323 Move X8, [X26]
	324 Move X0, X26
	325 Move X9, [X8+424]
	326 Move X1, [X8+432]
	327 NotImplemented "Instruction BLR not yet implemented."
	328 Move X26, X0
	329 Move X0, X25
	330 Call 0x19913C0
	331 Move X0, X25
	332 Move X1, X26
	333 Call 0x19990B4
	334 Move X0, X25
	335 Move X1, X31
	336 Move X2, X26
	337 Call 0x1994444
	338 Move X0, X25
	339 Call 0x19913C0
	340 Move X0, X25
	341 Move X1, X24
	342 Call 0x19990B4
	343 Move W1, 1
	344 Move X0, X25
	345 Move X2, X24
	346 Call 0x1994444
	347 Move X0, X20
	348 Move W1, W21
	349 Move X2, X31
	350 Call InputActionState.GetActionOrNull, X0, X1
	351 Move X20, X0
	352 Move X0, X25
	353 Call 0x19913C0
	354 Move X0, X25
	355 Move X1, X20
	356 Call 0x19990B4
	357 Move W1, 2
	358 Move X0, X25
	359 Move X2, X20
	360 Call 0x1994444
	361 Move [X31+24], W22
	362 Move X0, 0x1EFB000
	363 Move X0, [X0+1880]
	364 Call 0x1C17D08
	365 Add X1, X31, 24
	366 Call 0x1C17E04
	367 Move X1, X31
	368 Call "il2cpp_vm_object_is_inst", X0
	369 Move X20, X0
	370 Call 0x19913C0
	371 Move X8, [X20]
	372 Move X0, X20
	373 Move X9, [X8+424]
	374 Move X1, [X8+432]
	375 NotImplemented "Instruction BLR not yet implemented."
	376 Move X20, X0
	377 Move X0, X25
	378 Call 0x19913C0
	379 Move X0, X25
	380 Move X1, X20
	381 Call 0x19990B4
	382 Move W1, 3
	383 Move X0, X25
	384 Move X2, X20
	385 Call 0x1994444
	386 Move X0, X23
	387 Move X1, X31
	388 Call TypeHelpers.GetNiceTypeName, X0
	389 Move X20, X0
	390 Move X0, X25
	391 Call 0x19913C0
	392 Move X0, X25
	393 Move X1, X20
	394 Call 0x19990B4
	395 Move W1, 4
	396 Move X0, X25
	397 Move X2, X20
	398 Call 0x1994444
	399 Move X0, 0x1F23000
	400 Move X0, [X0+3240]
	401 Call 0x1C17D08
	402 Move X1, X25

Method: TValue ApplyProcessors(System.Int32 bindingIndex, TValue value, UnityEngine.InputSystem.InputControl`1<TValue> controlOfType = null)

Disassembly:
	0x021F8198 STP D9, D8, [X31 + 0x30]
	0x021F819C STP X29, X30, [X31 + 0x40]
	0x021F81A0 STP X28, X27, [X31 + 0x50]
	0x021F81A4 STP X26, X25, [X31 + 0x60]
	0x021F81A8 STP X24, X23, [X31 + 0x70]
	0x021F81AC STP X22, X21, [X31 + 0x80]
	0x021F81B0 STP X20, X19, [X31 + 0x90]
	0x021F81B4 STRB W5, [X31 + 0x8]
	0x021F81B8 LDR X8, [X6 + 0x38]
	0x021F81BC MOV X19, X6
	0x021F81C0 MOV X20, X4
	0x021F81C4 MOV X21, X3
	0x021F81C8 MOV W24, W1
	0x021F81CC MOV X23, X0
	0x021F81D0 STR W2, [X31 + 0x4]
	0x021F81D4 CBNZ X8, 0x21F8200
	0x021F81D8 ADRP X0, 0x1F23000
	0x021F81DC LDR X0, [X0 + 0xC90]
	0x021F81E0 BL 0x1C16CF4
	0x021F81E4 ADRP X0, 0x1F23000
	0x021F81E8 LDR X0, [X0 + 0xC98]
	0x021F81EC BL 0x1C16CF4
	0x021F81F0 LDR X8, [X19 + 0x38]
	0x021F81F4 CBNZ X8, 0x21F8200
	0x021F81F8 MOV X0, X19
	0x021F81FC BL 0x1C5C6E0
	0x021F8200 MOVN W8, 0x0
	0x021F8204 MOV X0, X23
	0x021F8208 MOV X1, X31
	0x021F820C STR W8, [X20]
	0x021F8210 ADD W26, W24, 0x1
	0x021F8214 BL 0x374A7C0
	0x021F8218 FMOV S9, W31
	0x021F821C CMP W26, W0
	0x021F8220 FMOV S10, W31
	0x021F8224 FMOV S8, W31
	0x021F8228 B.GE 0x21F8404
	0x021F822C ADRP X27, 0x1F23000
	0x021F8230 LDR X27, [X27 + 0xC90]
	0x021F8234 SXTW X24, W26
	0x021F8238 FMOV S8, W31
	0x021F823C MOVZ W22, 0x1
	0x021F8240 FMOV S10, W31
	0x021F8244 FMOV S9, W31
	0x021F8248 MOV X0, X23
	0x021F824C MOV X1, X31
	0x021F8250 BL 0x374A7E8
	0x021F8254 ADD X0, X0, X24, 0x5, LSL
	0x021F8258 MOV X1, X31
	0x021F825C BL 0x374AB5C
	0x021F8260 TBZ X0, 0x0, 0x21F8404
	0x021F8264 MOV X0, X23
	0x021F8268 MOV X1, X31
	0x021F826C UBFM X25, X24, 0x3B, 0x3A
	0x021F8270 BL 0x374A7E8
	0x021F8274 ADD X8, X25, X0
	0x021F8278 LDRB W8, [X8 + 0x5]
	0x021F827C LDR W9, [X31 + 0x4]
	0x021F8280 CMP W8, W9
	0x021F8284 B.NE 0x21F83E0
	0x021F8288 MOV X0, X23
	0x021F828C MOV X1, X31
	0x021F8290 BL 0x374A7E8
	0x021F8294 LDRB W29, [X25, X0, LSL]
	0x021F8298 MOV X0, X23
	0x021F829C MOV X1, X31
	0x021F82A0 BL 0x374A7E8
	0x021F82A4 CBZ X29, 0x21F83E0
	0x021F82A8 ADD X8, X25, X0
	0x021F82AC LDRH W25, [X8 + 0xE]
	0x021F82B0 LDR X8, [X19 + 0x38]
	0x021F82B4 MOVZ W3, 0x1
	0x021F82B8 MOV X0, X23

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X8, [X4+56]
	012 Move X19, X4
	013 Move X20, X3
	014 Move W21, W2
	015 Move W23, W1
	016 Move X22, X0
	017 Compare X8, 0
	018 JumpIfNotEqual {21}
	019 Move X0, X19
	020 Call 0x1C5D6E0
	021 Move X0, X22
	022 Move X1, X31
	023 Call InputActionState.get_bindingStates, X0
	024 Move X8, W23
	025 Add X8, X0, X8
	026 Move W24, [X8+2]
	027 Compare X24, 0
	028 JumpIfEqual {76}
	029 Move X0, X22
	030 Move X1, X31
	031 NotImplemented "Instruction SBFM not yet implemented."
	032 Call InputActionState.get_bindingStates, X0
	033 Add X0, X23, X0
	034 Move X1, X31
	035 Call BindingState.get_processorStartIndex, X0
	036 Move W25, W0
	037 Move X26, X25
	038 ShiftRight X26, 32
	039 And X26, X26, 0x7FFFFFFF
	040 Move X27, 1
	041 Move X8, [X22+40]
	042 Compare X8, 0
	043 JumpIfEqual {88}
	044 Move W9, [X8+24]
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move X9, [X19+56]
	047 Add X8, X8, X26
	048 Move X23, [X8+32]
	049 Move X0, [X9]
	050 Move W9, [X0+309]
	051 Move TEMP, X9
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfEqual {56}
	055 Call 0x1C5D684
	056 Compare X23, 0
	057 JumpIfEqual {73}
	058 Move X8, [X23]
	059 Move W9, [X0+304]
	060 Move W10, [X8+304]
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move X10, [X8+200]
	063 Add X9, X10, X9
	064 NotImplemented "Instruction LDUR not yet implemented."
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Move X9, [X8+424]
	067 Move X3, [X8+432]
	068 Move X0, X23
	069 Move W1, W21
	070 Move X2, X20
	071 NotImplemented "Instruction BLR not yet implemented."
	072 Move W21, W0
	073 Add X26, X26, X27
	074 Subtract X24, X24, 1
	075 Add X25, X25, 1
	076 Move W0, W21
	077 Move X20, [X31+64]
	078 Move X19, [X31+72]
	079 Move X22, [X31+48]
	080 Move X21, [X31+56]
	081 Move X24, [X31+32]
	082 Move X23, [X31+40]
	083 Move X26, [X31+16]
	084 Move X25, [X31+24]
	085 Move X30, [X31+80]
	086 Move X27, [X31+88]
	087 Return X0
	088 Call 0x1C17F20
	089 Call 0x1C17F28

Method: System.Single EvaluateCompositePartMagnitude(System.Int32 bindingIndex, System.Int32 partNumber)

Disassembly:
	0x037511D8 LDR X0, [X8 + 0xB8]
	0x037511DC BL 0x2DE6188
	0x037511E0 STR X0, [X31]
	0x037511E4 ADD X0, X31, 0x0
	0x037511E8 MOV X1, X31
	0x037511EC BL 0x32C0794
	0x037511F0 LDR X8, [X24]
	0x037511F4 LDR X2, [X27]
	0x037511F8 MOV W1, W21
	0x037511FC LDR X0, [X8 + 0xB8]
	0x03751200 BL 0x2DE6C0C
	0x03751204 SUB W21, W21, 0x1
	0x03751208 LDR X8, [X24]
	0x0375120C ADD W21, W21, 0x1
	0x03751210 LDR X0, [X8 + 0xB8]
	0x03751214 LDR W8, [X0]
	0x03751218 CMP W21, W8
	0x0375121C B.LT 0x37510FC
	0x03751220 B 0x375134C
	0x03751224 CBZ X22, 0x375136C
	0x03751228 MOV X0, X22
	0x0375122C MOV X1, X20
	0x03751230 BL 0x374B28C
	0x03751234 TBZ X0, 0x0, 0x3751208
	0x03751238 MOV X0, X22
	0x0375123C MOV X1, X20
	0x03751240 BL 0x374D0FC
	0x03751244 B 0x3751208
	0x03751248 CBZ X22, 0x375136C
	0x0375124C MOV X0, X22
	0x03751250 MOV X1, X20
	0x03751254 BL 0x374B444
	0x03751258 TBZ X0, 0x0, 0x3751208
	0x0375125C B 0x37512F4
	0x03751260 CBZ X22, 0x375136C
	0x03751264 MOV X0, X22
	0x03751268 MOV X1, X20
	0x0375126C BL 0x374B28C
	0x03751270 TBZ X0, 0x0, 0x3751208
	0x03751274 LDR W8, [X22 + 0x48]
	0x03751278 CMP W8, 0x1
	0x0375127C B.LT 0x37512F4
	0x03751280 MOV X23, X31
	0x03751284 LDR X8, [X22 + 0x10]
	0x03751288 CBZ X8, 0x375136C
	0x0375128C LDR W9, [X8 + 0x18]
	0x03751290 CMP W23, W9
	0x03751294 B.CS 0x3751370
	0x03751298 ADD X8, X8, X23, 0x3, LSL
	0x0375129C LDR X29, [X8 + 0x20]
	0x037512A0 CBZ X29, 0x375136C
	0x037512A4 ADD X0, X29, 0xD8
	0x037512A8 MOV X1, X20

ISIL:
	001 Move [X31-64], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move W8, [X0+84]
	009 Add W21, W1, 1
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Move TEMP, 0x800000
	012 Not TEMP
	013 Move W9, TEMP
	014 Move X19, X0
	015 Move W20, W2
	016 Move S8, W9
	017 Move X9, [X19+104]
	018 Move X10, W21
	019 Add X9, X9, X10
	020 Move W10, [X9+4]
	021 Move TEMP, X10
	022 And TEMP, TEMP, 8
	023 Compare TEMP, 8
	024 JumpIfNotEqual {53}
	025 Move W10, [X9+5]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move W22, [X9]
	028 Compare X22, 0
	029 JumpIfEqual {47}
	030 NotImplemented "Instruction LDRH not yet implemented."
	031 Move X8, [X19+24]
	032 Compare X8, 0
	033 JumpIfEqual {62}
	034 Move W9, [X8+24]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Add X8, X8, X23
	037 Move X0, [X8+32]
	038 Compare X0, 0
	039 JumpIfEqual {62}
	040 Move X1, X31
	041 Call InputControl.get_magnitude, X0
	042 NotImplemented "Instruction FCMP not yet implemented."
	043 NotImplemented "Instruction FCSEL not yet implemented."
	044 Subtract X22, X22, 1
	045 Add X23, X23, 1
	046 Move W8, [X19+84]
	047 Add W21, W21, 1
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move TEMP, 0x800000
	050 Not TEMP
	051 Move W8, TEMP
	052 Move S8, W8
	053 Move X20, [X31+48]
	054 Move X19, [X31+56]
	055 Move X22, [X31+32]
	056 Move X21, [X31+40]
	057 Move X30, [X31+16]
	058 Move X23, [X31+24]
	059 Move V0, V8
	060 Move V8, [X31+64]
	061 Return V0
	062 Call 0x1C17F20
	063 Call 0x1C17F28

Method: System.Double GetCompositePartPressTime(System.Int32 bindingIndex, System.Int32 partNumber)

Disassembly:
	0x037512AC MOV X2, X31
	0x037512B0 BL 0x373C434
	0x037512B4 LDR X8, [X29 + 0x20]
	0x037512B8 CMP X8, 0x0
	0x037512BC CSEL X25, X25, X8, EQ
	0x037512C0 CBZ X8, 0x37512D8
	0x037512C4 CBZ X25, 0x375136C
	0x037512C8 ADD X0, X25, 0xA0
	0x037512CC MOV X1, X20
	0x037512D0 MOV X2, X31
	0x037512D4 BL 0x373C434
	0x037512D8 LDR W8, [X22 + 0x48]
	0x037512DC ADD X23, X23, 0x1
	0x037512E0 CMP W23, W8
	0x037512E4 B.LT 0x3751284
	0x037512E8 MOV W23, W31
	0x037512EC CBNZ X22, 0x37512F8
	0x037512F0 B 0x375136C
	0x037512F4 MOV W23, W31
	0x037512F8 LDR W8, [X22 + 0x48]
	0x037512FC CMP W8, 0x1
	0x03751300 B.LT 0x3751208
	0x03751304 MOV W29, W31
	0x03751308 LDR X8, [X22 + 0x10]
	0x0375130C CBZ X8, 0x375136C
	0x03751310 LDR W9, [X8 + 0x18]
	0x03751314 CMP W29, W9
	0x03751318 B.CS 0x3751370
	0x0375131C ADD X8, X8, W29, 0x3, SXTW
	0x03751320 LDR X0, [X8 + 0x20]
	0x03751324 CBZ X0, 0x375136C
	0x03751328 MOV W1, W23

ISIL:
	001 Move W8, [X0+84]
	002 Add W9, W1, 1
	003 NotImplemented "Instruction CMP not yet implemented."
	004 Move X10, [X0+104]
	005 Move TEMP, 0x80100000
	006 Not TEMP
	007 Move X11, TEMP
	008 Move X12, W9
	009 Move D0, X11
	010 Add X10, X10, X12
	011 Move D1, X31
	012 Move W11, [X10+4]
	013 Move TEMP, X11
	014 And TEMP, TEMP, 8
	015 Compare TEMP, 8
	016 JumpIfNotEqual {30}
	017 Move W11, [X10+5]
	018 NotImplemented "Instruction CMP not yet implemented."
	019 Move V2, [X10+16]
	020 NotImplemented "Instruction FCMP not yet implemented."
	021 NotImplemented "Instruction FCCMP not yet implemented."
	022 NotImplemented "Instruction FCSEL not yet implemented."
	023 Add W9, W9, 1
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Add X10, X10, 32
	026 Move TEMP, 0x80100000
	027 Not TEMP
	028 Move X8, TEMP
	029 Move D0, X8
	030 Move TEMP, 0x80100000
	031 Not TEMP
	032 Move X8, TEMP
	033 Move D1, X8
	034 NotImplemented "Instruction FCMP not yet implemented."
	035 Move D1, -1
	036 NotImplemented "Instruction FCSEL not yet implemented."
	037 Return V0

Method: TValue ReadCompositePartValue(System.Int32 bindingIndex, System.Int32 partNumber, System.Boolean* buttonValuePtr, out System.Int32 controlIndex, TComparer comparer = null)

Disassembly:
	0x021F89D0 LDR W10, [X8 + 0xE0]
	0x021F89D4 CBNZ W10, 0x21F89E0
	0x021F89D8 MOV X0, X8
	0x021F89DC BL 0x1C16DFC
	0x021F89E0 MOV X0, X26
	0x021F89E4 MOV X1, X31
	0x021F89E8 BL 0x338C698
	0x021F89EC CBZ X23, 0x21F8CD8
	0x021F89F0 LDR X8, [X23]
	0x021F89F4 MOV X1, X0
	0x021F89F8 MOV X0, X23
	0x021F89FC LDR X9, [X8 + 0x2A8]
	0x021F8A00 LDR X2, [X8 + 0x2B0]
	0x021F8A04 BLR X9
	0x021F8A08 TBZ X0, 0x0, 0x21F8CE0
	0x021F8A0C LDR X8, [X24]
	0x021F8A10 ADD X1, X31, 0x0
	0x021F8A14 ADD X2, X31, 0x1C
	0x021F8A18 MOVZ W3, 0x4
	0x021F8A1C LDP X9, X4, [X8 + 0x198]
	0x021F8A20 MOV X0, X24
	0x021F8A24 BLR X9
	0x021F8A28 LDR W2, [X31 + 0x1C]
	0x021F8A2C MOV X22, X31
	0x021F8A30 B 0x21F8AC0
	0x021F8A34 ADDS W31, W22, 0x1
	0x021F8A38 B.EQ 0x21F8AB4
	0x021F8A3C LDR X8, [X20 + 0x18]
	0x021F8A40 CBZ X8, 0x21F8CD8
	0x021F8A44 LDR W9, [X8 + 0x18]
	0x021F8A48 CMP W9, W22
	0x021F8A4C B.LS 0x21F8CDC
	0x021F8A50 LDR X9, [X19 + 0x38]
	0x021F8A54 ADD X8, X8, W22, 0x3, SXTW
	0x021F8A58 LDR X22, [X8 + 0x20]
	0x021F8A5C LDR X0, [X9 + 0x38]
	0x021F8A60 LDRB W9, [X0 + 0x135]
	0x021F8A64 TBNZ X9, 0x0, 0x21F8A6C
	0x021F8A68 BL 0x1C5C684
	0x021F8A6C CBZ X22, 0x21F8B14
	0x021F8A70 LDR X8, [X22]
	0x021F8A74 LDRB W9, [X0 + 0x130]
	0x021F8A78 LDRB W10, [X8 + 0x130]
	0x021F8A7C CMP W10, W9
	0x021F8A80 B.CC 0x21F8B14
	0x021F8A84 LDR X8, [X8 + 0xC8]
	0x021F8A88 ADD X8, X8, X9, 0x3, LSL
	0x021F8A8C LDUR X8, [X8 - 0x8]
	0x021F8A90 CMP X8, X0
	0x021F8A94 B.NE 0x21F8B14
	0x021F8A98 LDR X8, [X19 + 0x38]
	0x021F8A9C MOV X0, X22
	0x021F8AA0 LDR X1, [X8 + 0x40]
	0x021F8AA4 BL 0x2E00878
	0x021F8AA8 LDR W2, [X0]
	0x021F8AAC STR W2, [X31 + 0x1C]
	0x021F8AB0 B 0x21F8ABC
	0x021F8AB4 MOV W2, W31
	0x021F8AB8 MOV X22, X31
	0x021F8ABC MOV W25, W21
	0x021F8AC0 LDR X8, [X19 + 0x38]
	0x021F8AC4 MOV X0, X20
	0x021F8AC8 MOV W1, W25
	0x021F8ACC MOV X3, X22
	0x021F8AD0 LDR X4, [X8 + 0x50]
	0x021F8AD4 BL 0x21F7198
	0x021F8AD8 LDP X20, X19, [X31 + 0x50]
	0x021F8ADC LDP X22, X21, [X31 + 0x40]
	0x021F8AE0 LDP X24, X23, [X31 + 0x30]
	0x021F8AE4 LDP X26, X25, [X31 + 0x20]
	0x021F8AE8 LDR X30, [X31 + 0x10]
	0x021F8AEC ADD X31, X31, 0x60
	0x021F8AF0 RET
	0x021F8AF4 LDP X9, X2, [X8 + 0x1D8]
	0x021F8AF8 ADD X1, X31, 0x0
	0x021F8AFC MOV X0, X24
	0x021F8B00 BLR X9
	0x021F8B04 MOV W2, W0
	0x021F8B08 MOV X22, X31
	0x021F8B0C STR W0, [X31 + 0x1C]
	0x021F8B10 B 0x21F8AC0
	0x021F8B14 ADRP X0, 0x1EFB000
	0x021F8B18 LDR X0, [X0 + 0x9D0]
	0x021F8B1C BL 0x1C16D08
	0x021F8B20 MOVZ W1, 0x5
	0x021F8B24 BL 0x1C16D6C
	0x021F8B28 LDR X8, [X19 + 0x38]
	0x021F8B2C MOV X23, X0
	0x021F8B30 ADRP X0, 0x1EFB000
	0x021F8B34 LDR X24, [X8 + 0x10]
	0x021F8B38 LDR X0, [X0 + 0x6C0]
	0x021F8B3C BL 0x1C16D08
	0x021F8B40 BL 0x19903D0
	0x021F8B44 MOV X0, X24
	0x021F8B48 MOV X1, X31
	0x021F8B4C BL 0x338C698
	0x021F8B50 MOV X1, X31
	0x021F8B54 BL 0x3768F30
	0x021F8B58 MOV X24, X0
	0x021F8B5C MOV X0, X23
	0x021F8B60 BL 0x19903C0
	0x021F8B64 MOV X0, X23
	0x021F8B68 MOV X1, X24
	0x021F8B6C BL 0x19980B4
	0x021F8B70 MOV X0, X23
	0x021F8B74 MOV X1, X31
	0x021F8B78 MOV X2, X24
	0x021F8B7C BL 0x1993444
	0x021F8B80 MOV X0, X22
	0x021F8B84 BL 0x19903C0
	0x021F8B88 MOV X0, X22
	0x021F8B8C MOV X1, X31
	0x021F8B90 BL 0x3771F68
	0x021F8B94 MOV X24, X0
	0x021F8B98 MOV X0, X23
	0x021F8B9C BL 0x19903C0
	0x021F8BA0 MOV X0, X23
	0x021F8BA4 MOV X1, X24
	0x021F8BA8 BL 0x19980B4
	0x021F8BAC MOVZ W1, 0x1
	0x021F8BB0 MOV X0, X23
	0x021F8BB4 MOV X2, X24
	0x021F8BB8 BL 0x1993444
	0x021F8BBC MOV X0, X20
	0x021F8BC0 MOV W1, W21
	0x021F8BC4 MOV X2, X31
	0x021F8BC8 BL 0x374FCD8
	0x021F8BCC MOV X20, X0
	0x021F8BD0 MOV X0, X23
	0x021F8BD4 BL 0x19903C0
	0x021F8BD8 MOV X0, X23
	0x021F8BDC MOV X1, X20
	0x021F8BE0 BL 0x19980B4
	0x021F8BE4 MOVZ W1, 0x2
	0x021F8BE8 MOV X0, X23
	0x021F8BEC MOV X2, X20
	0x021F8BF0 BL 0x1993444
	0x021F8BF4 MOV X0, X22
	0x021F8BF8 BL 0x19903C0
	0x021F8BFC MOV X0, X22
	0x021F8C00 MOV X1, X31
	0x021F8C04 BL 0x33BE520
	0x021F8C08 MOV X20, X0
	0x021F8C0C BL 0x19903C0
	0x021F8C10 LDR X8, [X20]
	0x021F8C14 MOV X0, X20
	0x021F8C18 LDP X9, X1, [X8 + 0x1A8]
	0x021F8C1C BLR X9
	0x021F8C20 MOV X20, X0
	0x021F8C24 MOV X0, X23
	0x021F8C28 BL 0x19903C0
	0x021F8C2C MOV X0, X23
	0x021F8C30 MOV X1, X20
	0x021F8C34 BL 0x19980B4
	0x021F8C38 MOVZ W1, 0x3
	0x021F8C3C MOV X0, X23

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move [X31+8], W5
	015 Move X8, [X6+56]
	016 Move X19, X6
	017 Move X20, X4
	018 Move X21, X3
	019 Move W24, W1
	020 Move X23, X0
	021 Move [X31+4], W2
	022 Compare X8, 0
	023 JumpIfNotEqual {35}
	024 Move X0, 0x1F24000
	025 Move X0, [X0+3216]
	026 Call 0x1C17CF4
	027 Move X0, 0x1F24000
	028 Move X0, [X0+3224]
	029 Call 0x1C17CF4
	030 Move X8, [X19+56]
	031 Compare X8, 0
	032 JumpIfNotEqual {35}
	033 Move X0, X19
	034 Call 0x1C5D6E0
	035 Move TEMP, 0
	036 Not TEMP
	037 Move W8, TEMP
	038 Move X0, X23
	039 Move X1, X31
	040 Move [X20], W8
	041 Add W28, W24, 1
	042 Call InputActionState.get_totalBindingCount, X0
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move W24, W31
	045 Move X25, W28
	046 Move W29, 1
	047 Move X0, X23
	048 Move X1, X31
	049 Call InputActionState.get_bindingStates, X0
	050 Add X0, X0, X25
	051 Move X1, X31
	052 Call BindingState.get_isPartOfComposite, X0
	053 Move TEMP, X0
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfNotEqual {154}
	057 Move X0, X23
	058 Move X1, X31
	059 Move X26, X25
	060 ShiftRight X26, 59
	061 And X26, X26, 0x3FFFFFF
	062 Call InputActionState.get_bindingStates, X0
	063 Add X8, X26, X0
	064 Move W8, [X8+5]
	065 Move W9, [X31+4]
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move X0, X23
	068 Move X1, X31
	069 Call InputActionState.get_bindingStates, X0
	070 Move W22, [X26]
	071 Move X0, X23
	072 Move X1, X31
	073 Call InputActionState.get_bindingStates, X0
	074 Compare X22, 0
	075 JumpIfEqual {145}
	076 Add X8, X26, X0
	077 NotImplemented "Instruction LDRH not yet implemented."
	078 Move X8, [X19+56]
	079 Move W3, 1
	080 Move X0, X23
	081 Move W1, W25
	082 Move X4, [X8+8]
	083 Move W2, W26
	084 Call 0x21F988C, X0, X1, X2, X3
	085 Move W27, W0
	086 Move TEMP, X29
	087 And TEMP, TEMP, 1
	088 Compare TEMP, 1
	089 JumpIfEqual {97}
	090 Move X8, [X19+56]
	091 Add X0, X31, 8
	092 Move W1, W27
	093 Move W2, W24
	094 Move X3, [X8+32]
	095 Call 0x29B3514, X0, X1, X2
	096 NotImplemented "Instruction CMP not yet implemented."
	097 Move W24, W27
	098 Move [X20], W26
	099 Compare X21, 0
	100 JumpIfEqual {141}
	101 Move W8, [X20]
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Move X8, [X23+24]
	104 Compare X8, 0
	105 JumpIfEqual {169}
	106 Move W9, [X8+24]
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Add X8, X8, X26
	109 Move X0, [X8+32]
	110 Compare X0, 0
	111 JumpIfEqual {141}
	112 Move X8, 0x1F24000
	113 Move X9, [X0]
	114 Move X8, [X8+3216]
	115 Move W10, [X9+304]
	116 Move X8, [X8]
	117 Move W11, [X8+304]
	118 NotImplemented "Instruction CMP not yet implemented."
	119 Move X12, [X9+200]
	120 Add X11, X12, X11
	121 NotImplemented "Instruction LDUR not yet implemented."
	122 NotImplemented "Instruction CMP not yet implemented."
	123 Move X11, 0x1F24000
	124 Move X11, [X11+3224]
	125 Move X11, [X11]
	126 Move W12, [X11+304]
	127 NotImplemented "Instruction CMP not yet implemented."
	128 Move X9, [X9+200]
	129 Add X9, X9, X12
	130 NotImplemented "Instruction LDUR not yet implemented."
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Move X8, [X8+184]
	133 Move S1, W27
	134 Move V0, [X8]
	135 NotImplemented "Instruction FCMP not yet implemented."
	136 NotImplemented "Instruction CSET not yet implemented."
	137 Move X1, X31
	138 Call ButtonControl.get_isPressed, X0
	139 And W8, W0, 1
	140 Move [X21], W8
	141 Move W29, W31
	142 Move W27, W31
	143 Subtract X22, X22, 1
	144 Add X26, X26, 1
	145 Move W27, W29
	146 Move X0, X23
	147 Move X1, X31
	148 Add W28, W28, 1
	149 Call InputActionState.get_totalBindingCount, X0
	150 NotImplemented "Instruction CMP not yet implemented."
	151 Add X25, X25, 1
	152 Move W29, W27
	153 Move W24, W31
	154 Move W0, W24
	155 Move X20, [X31+96]
	156 Move X19, [X31+104]
	157 Move X22, [X31+80]
	158 Move X21, [X31+88]
	159 Move X24, [X31+64]
	160 Move X23, [X31+72]
	161 Move X26, [X31+48]
	162 Move X25, [X31+56]
	163 Move X28, [X31+32]
	164 Move X27, [X31+40]
	165 Move X29, [X31+16]
	166 Move X30, [X31+24]
	167 Add X31, X31, 112
	168 Return X0
	169 Call 0x1C17F20
	170 Call 0x1C17F28

Method: System.Boolean ReadCompositePartValue(System.Int32 bindingIndex, System.Int32 partNumber, System.Void* buffer, System.Int32 bufferSize)

Disassembly:
	0x0375132C MOV X2, X31
	0x03751330 BL 0x3734520
	0x03751334 TBNZ X0, 0x0, 0x3751208
	0x03751338 LDR W8, [X22 + 0x48]
	0x0375133C ADD W29, W29, 0x1
	0x03751340 CMP W29, W8
	0x03751344 B.LT 0x3751308
	0x03751348 B 0x3751208
	0x0375134C LDP X20, X19, [X31 + 0x60]
	0x03751350 LDP X22, X21, [X31 + 0x50]
	0x03751354 LDP X24, X23, [X31 + 0x40]
	0x03751358 LDP X26, X25, [X31 + 0x30]
	0x0375135C LDP X28, X27, [X31 + 0x20]
	0x03751360 LDP X29, X30, [X31 + 0x10]
	0x03751364 ADD X31, X31, 0x70
	0x03751368 RET
	0x0375136C BL 0x1C16F20
	0x03751370 BL 0x1C16F28
	0x03751374 MOV X0, X22
	0x03751378 BL 0x1C171E0
	0x0375137C SUB X31, X31, 0x50
	0x03751380 STP X30, X25, [X31 + 0x10]
	0x03751384 STP X24, X23, [X31 + 0x20]
	0x03751388 STP X22, X21, [X31 + 0x30]
	0x0375138C STP X20, X19, [X31 + 0x40]
	0x03751390 ADRP X19, 0xC8F000
	0x03751394 ADRP X21, 0x9F3000
	0x03751398 ADRP X22, 0x9F4000
	0x0375139C LDRB W8, [X19 + 0xDB5]
	0x037513A0 LDR X21, [X21 + 0xF68]
	0x037513A4 LDR X22, [X22 + 0x2D8]
	0x037513A8 TBNZ X8, 0x0, 0x37513E4
	0x037513AC ADRP X0, 0x9F4000
	0x037513B0 LDR X0, [X0 + 0xCA0]
	0x037513B4 BL 0x1C16CF4
	0x037513B8 ADRP X0, 0x9F4000
	0x037513BC LDR X0, [X0 + 0xB28]
	0x037513C0 BL 0x1C16CF4
	0x037513C4 ADRP X0, 0x9F3000
	0x037513C8 LDR X0, [X0 + 0xF68]
	0x037513CC BL 0x1C16CF4
	0x037513D0 ADRP X0, 0x9F4000
	0x037513D4 LDR X0, [X0 + 0x2D8]
	0x037513D8 BL 0x1C16CF4
	0x037513DC MOVZ W8, 0x1
	0x037513E0 STRB W8, [X19 + 0xDB5]
	0x037513E4 LDR X8, [X21]
	0x037513E8 STP X31, X31, [X31]
	0x037513EC LDR X8, [X8 + 0xB8]
	0x037513F0 LDR W9, [X8]
	0x037513F4 ADD W9, W9, 0x1
	0x037513F8 STR W9, [X8]
	0x037513FC LDR X8, [X22]
	0x03751400 LDR X0, [X8 + 0xB8]
	0x03751404 LDR W8, [X0]
	0x03751408 CMP W8, 0x1
	0x0375140C B.LT 0x3751544
	0x03751410 ADRP X23, 0x9F4000
	0x03751414 ADRP X24, 0x9F4000
	0x03751418 LDR X23, [X23 + 0xB28]
	0x0375141C LDR X24, [X24 + 0xCA0]
	0x03751420 MOV W19, W31
	0x03751424 LDR X2, [X23]
	0x03751428 MOV W1, W19
	0x0375142C BL 0x2DE6188
	0x03751430 STR X0, [X31 + 0x8]
	0x03751434 ADD X0, X31, 0x8
	0x03751438 MOV X1, X31
	0x0375143C BL 0x32C05E4

ISIL:
	001 Move [X31-80], D9
	002 Move [X31-72], D8
	003 Move [X31+16], X30
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move W8, [X0+84]
	012 Add W22, W1, 1
	013 NotImplemented "Instruction CMP not yet implemented."
	014 Move TEMP, 0x800000
	015 Not TEMP
	016 Move W9, TEMP
	017 Move W19, W4
	018 Move X20, X3
	019 Move X21, X0
	020 Move W23, W2
	021 Move S9, W9
	022 Move X9, [X21+104]
	023 Move X10, W22
	024 Add X9, X9, X10
	025 Move W10, [X9+4]
	026 Move TEMP, X10
	027 And TEMP, TEMP, 8
	028 Compare TEMP, 8
	029 JumpIfNotEqual {66}
	030 Move W10, [X9+5]
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move W25, [X9]
	033 Compare X25, 0
	034 JumpIfEqual {60}
	035 NotImplemented "Instruction LDRH not yet implemented."
	036 Move X8, [X21+24]
	037 Compare X8, 0
	038 JumpIfEqual {83}
	039 Move W9, [X8+24]
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Add X8, X8, X24
	042 Move X0, [X8+32]
	043 Compare X0, 0
	044 JumpIfEqual {83}
	045 Move X1, X31
	046 Call InputControl.get_magnitude, X0
	047 NotImplemented "Instruction FCMP not yet implemented."
	048 Move W5, 1
	049 Move X0, X21
	050 Move W1, W22
	051 Move W2, W24
	052 Move X3, X20
	053 Move W4, W19
	054 Move V8, V0
	055 Call InputActionState.ReadValue, X0, X1, X2, X3, X4, X5
	056 Move V9, V8
	057 Subtract X25, X25, 1
	058 Add X24, X24, 1
	059 Move W8, [X21+84]
	060 Add W22, W22, 1
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move TEMP, 0x800000
	063 Not TEMP
	064 Move W8, TEMP
	065 Move S9, W8
	066 Move TEMP, 0x800000
	067 Not TEMP
	068 Move W8, TEMP
	069 Move X20, [X31+64]
	070 Move X19, [X31+72]
	071 Move X22, [X31+48]
	072 Move X21, [X31+56]
	073 Move X24, [X31+32]
	074 Move X23, [X31+40]
	075 Move X30, [X31+16]
	076 Move X25, [X31+24]
	077 Move S0, W8
	078 NotImplemented "Instruction FCMP not yet implemented."
	079 NotImplemented "Instruction CSET not yet implemented."
	080 Move D9, [X31+80]
	081 Move D8, [X31+88]
	082 Return X0
	083 Call 0x1C17F20
	084 Call 0x1C17F28

Method: System.Object ReadCompositePartValueAsObject(System.Int32 bindingIndex, System.Int32 partNumber)

Disassembly:
	0x03751440 TBZ X0, 0x0, 0x37514E0
	0x03751444 ADD X0, X31, 0x8
	0x03751448 MOV X1, X31
	0x0375144C BL 0x32C05F4
	0x03751450 CBZ X0, 0x37514E0
	0x03751454 ADD X0, X31, 0x8
	0x03751458 MOV X1, X31
	0x0375145C BL 0x32C05F4
	0x03751460 MOV X20, X0
	0x03751464 CBZ X0, 0x375158C
	0x03751468 LDR X8, [X20]
	0x0375146C LDR X1, [X22]
	0x03751470 LDRB W10, [X8 + 0x130]
	0x03751474 LDRB W9, [X1 + 0x130]
	0x03751478 CMP W10, W9
	0x0375147C B.CC 0x3751584
	0x03751480 LDR X8, [X8 + 0xC8]
	0x03751484 ADD X8, X8, X9, 0x3, LSL
	0x03751488 LDUR X8, [X8 - 0x8]
	0x0375148C CMP X8, X1
	0x03751490 B.NE 0x3751584
	0x03751494 LDR W8, [X20 + 0x48]
	0x03751498 CMP W8, 0x1
	0x0375149C B.LT 0x375152C
	0x037514A0 MOV W25, W31
	0x037514A4 LDR X8, [X20 + 0x10]
	0x037514A8 CBZ X8, 0x3751580
	0x037514AC LDR W9, [X8 + 0x18]
	0x037514B0 CMP W25, W9
	0x037514B4 B.CS 0x3751578
	0x037514B8 ADD X8, X8, W25, 0x3, SXTW
	0x037514BC LDR X0, [X8 + 0x20]
	0x037514C0 CBZ X0, 0x375157C
	0x037514C4 MOV X1, X31
	0x037514C8 BL 0x37346C0
	0x037514CC LDR W8, [X20 + 0x48]
	0x037514D0 ADD W25, W25, 0x1
	0x037514D4 CMP W25, W8
	0x037514D8 B.LT 0x37514A4
	0x037514DC B 0x375152C
	0x037514E0 ADD X0, X31, 0x8
	0x037514E4 MOV X1, X31
	0x037514E8 BL 0x32C05E4
	0x037514EC TBZ X0, 0x0, 0x3751514
	0x037514F0 LDR X8, [X22]
	0x037514F4 LDR X2, [X23]
	0x037514F8 LDR X0, [X8 + 0xB8]
	0x037514FC MOV W1, W19
	0x03751500 BL 0x2DE6188
	0x03751504 STR X0, [X31]
	0x03751508 ADD X0, X31, 0x0
	0x0375150C MOV X1, X31
	0x03751510 BL 0x32C0794
	0x03751514 LDR X8, [X22]
	0x03751518 LDR X2, [X24]
	0x0375151C LDR X0, [X8 + 0xB8]
	0x03751520 MOV W1, W19
	0x03751524 BL 0x2DE6C0C
	0x03751528 SUB W19, W19, 0x1
	0x0375152C LDR X8, [X22]
	0x03751530 ADD W19, W19, 0x1
	0x03751534 LDR X0, [X8 + 0xB8]
	0x03751538 LDR W8, [X0]

ISIL:
	001 Move [X31-80], D9
	002 Move [X31-72], D8
	003 Move [X31+16], X30
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move W8, [X0+84]
	011 Add W20, W1, 1
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Move TEMP, 0x800000
	014 Not TEMP
	015 Move W9, TEMP
	016 Move X19, X0
	017 Move W21, W2
	018 Move X22, X31
	019 Move S9, W9
	020 Move X9, [X19+104]
	021 Move X10, W20
	022 Add X9, X9, X10
	023 Move W10, [X9+4]
	024 Move TEMP, X10
	025 And TEMP, TEMP, 8
	026 Compare TEMP, 8
	027 JumpIfNotEqual {60}
	028 Move W10, [X9+5]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move W24, [X9]
	031 Compare X24, 0
	032 JumpIfEqual {57}
	033 NotImplemented "Instruction LDRH not yet implemented."
	034 Move X8, [X19+24]
	035 Compare X8, 0
	036 JumpIfEqual {71}
	037 Move W9, [X8+24]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Add X8, X8, X23
	040 Move X0, [X8+32]
	041 Compare X0, 0
	042 JumpIfEqual {71}
	043 Move X1, X31
	044 Call InputControl.get_magnitude, X0
	045 NotImplemented "Instruction FCMP not yet implemented."
	046 Move W3, 1
	047 Move X0, X19
	048 Move W1, W20
	049 Move W2, W23
	050 Move V8, V0
	051 Call InputActionState.ReadValueAsObject, X0, X1, X2, X3
	052 Move X22, X0
	053 Move V9, V8
	054 Subtract X24, X24, 1
	055 Add X23, X23, 1
	056 Move W8, [X19+84]
	057 Add W20, W20, 1
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move X22, X31
	060 Move X0, X22
	061 Move X20, [X31+64]
	062 Move X19, [X31+72]
	063 Move X22, [X31+48]
	064 Move X21, [X31+56]
	065 Move X24, [X31+32]
	066 Move X23, [X31+40]
	067 Move X30, [X31+16]
	068 Move D9, [X31+80]
	069 Move D8, [X31+88]
	070 Return X0
	071 Call 0x1C17F20
	072 Call 0x1C17F28

Method: System.Object ReadValueAsObject(System.Int32 bindingIndex, System.Int32 controlIndex, System.Boolean ignoreComposites = False)

Disassembly:
	0x0375153C CMP W19, W8
	0x03751540 B.LT 0x3751424
	0x03751544 MOV X19, X31
	0x03751548 LDR X8, [X21]
	0x0375154C LDR X8, [X8 + 0xB8]
	0x03751550 LDR W9, [X8]
	0x03751554 SUB W9, W9, 0x1
	0x03751558 STR W9, [X8]
	0x0375155C CBNZ X19, 0x3751590
	0x03751560 LDP X20, X19, [X31 + 0x40]
	0x03751564 LDP X22, X21, [X31 + 0x30]
	0x03751568 LDP X24, X23, [X31 + 0x20]
	0x0375156C LDP X30, X25, [X31 + 0x10]
	0x03751570 ADD X31, X31, 0x50
	0x03751574 RET
	0x03751578 BL 0x1C16F28
	0x0375157C BL 0x1C16F20
	0x03751580 BL 0x1C16F20
	0x03751584 MOV X0, X20
	0x03751588 BL 0x1C171E0
	0x0375158C BL 0x1C16F20
	0x03751590 MOV X0, X19
	0x03751594 BL 0x1C16F18
	0x03751598 B 0x37515C8
	0x0375159C B 0x37515C8
	0x037515A0 B 0x37515C8
	0x037515A4 B 0x37515C8
	0x037515A8 B 0x37515C8
	0x037515AC B 0x37515C8
	0x037515B0 B 0x37515C8
	0x037515B4 B 0x37515C8
	0x037515B8 B 0x37515C8
	0x037515BC B 0x37515C8
	0x037515C0 B 0x37515C8
	0x037515C4 B 0x37515C8
	0x037515C8 CMP W1, 0x1
	0x037515CC B.NE 0x37515E0
	0x037515D0 BL 0x3EB1AD0
	0x037515D4 LDR X19, [X0]
	0x037515D8 BL 0x3EB1AE0
	0x037515DC B 0x3751548
	0x037515E0 MOV X19, X31
	0x037515E4 B 0x37515E8
	0x037515E8 LDR X8, [X21]
	0x037515EC LDR X8, [X8 + 0xB8]
	0x037515F0 LDR W9, [X8]
	0x037515F4 SUB W9, W9, 0x1
	0x037515F8 STR W9, [X8]
	0x037515FC CBNZ X19, 0x3751604
	0x03751600 BL 0x1D2C690
	0x03751604 MOV X0, X19
	0x03751608 BL 0x1C16F18
	0x0375160C BL 0x1990590
	0x03751610 STR X30, [X31 - 0x40]!
	0x03751614 STP X24, X23, [X31 + 0x10]
	0x03751618 STP X22, X21, [X31 + 0x20]
	0x0375161C STP X20, X19, [X31 + 0x30]
	0x03751620 ADRP X19, 0xC8F000
	0x03751624 ADRP X20, 0x9F4000
	0x03751628 LDRB W8, [X19 + 0xDB6]
	0x0375162C LDR X20, [X20 + 0x2D8]
	0x03751630 TBNZ X8, 0x0, 0x3751654
	0x03751634 ADRP X0, 0x9F4000
	0x03751638 LDR X0, [X0 + 0xB28]
	0x0375163C BL 0x1C16CF4
	0x03751640 ADRP X0, 0x9F4000
	0x03751644 LDR X0, [X0 + 0x2D8]
	0x03751648 BL 0x1C16CF4
	0x0375164C MOVZ W8, 0x1
	0x03751650 STRB W8, [X19 + 0xDB6]
	0x03751654 LDR X8, [X20]
	0x03751658 STR X31, [X31 + 0x8]
	0x0375165C LDR X0, [X8 + 0xB8]
	0x03751660 LDR W8, [X0]
	0x03751664 CMP W8, 0x1
	0x03751668 B.LT 0x3751740
	0x0375166C ADRP X21, 0x9F4000
	0x03751670 LDR X21, [X21 + 0xB28]
	0x03751674 MOV W19, W31
	0x03751678 LDR X2, [X21]
	0x0375167C MOV W1, W19
	0x03751680 BL 0x2DE6188
	0x03751684 STR X0, [X31 + 0x8]
	0x03751688 ADD X0, X31, 0x8
	0x0375168C MOV X1, X31
	0x03751690 BL 0x32C05E4
	0x03751694 TBZ X0, 0x0, 0x3751728
	0x03751698 ADD X0, X31, 0x8
	0x0375169C MOV X1, X31
	0x037516A0 BL 0x32C05F4
	0x037516A4 CBZ X0, 0x3751728
	0x037516A8 ADD X0, X31, 0x8

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move W20, W1
	009 Move X19, X0
	010 Move [X31], X31
	011 Move [X31+8], X31
	012 Move TEMP, X3
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X8, [X19+104]
	017 Move X9, W20
	018 Add X9, X8, X9
	019 Move W10, [X9+4]
	020 Move TEMP, X10
	021 And TEMP, TEMP, 8
	022 Compare TEMP, 8
	023 JumpIfEqual {39}
	024 Add W31, W2, 1
	025 Move X8, [X19+24]
	026 Compare X8, 0
	027 JumpIfEqual {108}
	028 Move W9, [X8+24]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Add X8, X8, W2
	031 Move X21, [X8+32]
	032 Move X1, X31
	033 Move X0, X21
	034 Call InputControlExtensions.ReadValueAsObject, X0
	035 Move X1, X0
	036 Compare X1, 0
	037 JumpIfNotEqual {70}
	038 Move X1, X31
	039 NotImplemented "Instruction LDRH not yet implemented."
	040 Move W10, 0xFFFF
	041 NotImplemented "Instruction CMP not yet implemented."
	042 NotImplemented "Instruction CSINV not yet implemented."
	043 Move W9, W20
	044 Move X9, W9
	045 Add X8, X8, X9
	046 NotImplemented "Instruction LDRH not yet implemented."
	047 Move X8, [X19+48]
	048 NotImplemented "Instruction CMP not yet implemented."
	049 NotImplemented "Instruction CSINV not yet implemented."
	050 Compare X8, 0
	051 JumpIfEqual {108}
	052 Move W10, [X8+24]
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Add X8, X8, W9
	055 Move X0, [X8+32]
	056 Move [X31], X19
	057 Move [X31+8], W20
	058 Move [X31+12], W31
	059 Compare X0, 0
	060 JumpIfEqual {108}
	061 Move X8, [X0]
	062 Add X1, X31, 0
	063 Move X9, [X8+424]
	064 Move X2, [X8+432]
	065 NotImplemented "Instruction BLR not yet implemented."
	066 Move X1, X0
	067 Move X21, X31
	068 Compare X1, 0
	069 JumpIfEqual {99}
	070 Move X8, [X19+104]
	071 Move X9, W20
	072 Add X8, X8, X9
	073 Move W20, [X8+2]
	074 Compare X20, 0
	075 JumpIfEqual {99}
	076 NotImplemented "Instruction LDRH not yet implemented."
	077 Move W9, 0xFFFF
	078 NotImplemented "Instruction CMP not yet implemented."
	079 NotImplemented "Instruction CSINV not yet implemented."
	080 NotImplemented "Instruction SBFM not yet implemented."
	081 Add X23, X8, 32
	082 Move X8, [X19+40]
	083 Compare X8, 0
	084 JumpIfEqual {108}
	085 Move W9, [X8+24]
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Move X0, [X8]
	088 Compare X0, 0
	089 JumpIfEqual {108}
	090 Move X8, [X0]
	091 Move X2, X21
	092 Move X9, [X8+376]
	093 Move X3, [X8+384]
	094 NotImplemented "Instruction BLR not yet implemented."
	095 Move X1, X0
	096 Add X23, X23, 8
	097 Subtract X20, X20, 1
	098 Add W22, W22, 1
	099 Move X20, [X31+48]
	100 Move X19, [X31+56]
	101 Move X22, [X31+32]
	102 Move X21, [X31+40]
	103 Move X30, [X31+16]
	104 Move X23, [X31+24]
	105 Move X0, X1
	106 Add X31, X31, 64
	107 Return X0
	108 Call 0x1C17F20
	109 Call 0x1C17F28

Method: System.Boolean ReadValueAsButton(System.Int32 bindingIndex, System.Int32 controlIndex)

Disassembly:
	0x037516AC MOV X1, X31
	0x037516B0 BL 0x32C05F4
	0x037516B4 CBZ X0, 0x3751754
	0x037516B8 LDR X8, [X0]
	0x037516BC LDR X1, [X20]
	0x037516C0 LDRB W10, [X8 + 0x130]
	0x037516C4 LDRB W9, [X1 + 0x130]
	0x037516C8 CMP W10, W9
	0x037516CC B.CC 0x375175C
	0x037516D0 LDR X8, [X8 + 0xC8]
	0x037516D4 ADD X8, X8, X9, 0x3, LSL
	0x037516D8 LDUR X8, [X8 - 0x8]
	0x037516DC CMP X8, X1
	0x037516E0 B.NE 0x375175C
	0x037516E4 LDR W22, [X0 + 0x48]
	0x037516E8 CMP W22, 0x1
	0x037516EC B.LT 0x3751728
	0x037516F0 LDR X23, [X0 + 0x10]
	0x037516F4 CBZ X23, 0x3751754
	0x037516F8 MOV W24, W31
	0x037516FC LDR W8, [X23 + 0x18]
	0x03751700 CMP W24, W8
	0x03751704 B.CS 0x3751758
	0x03751708 ADD X8, X23, W24, 0x3, SXTW
	0x0375170C LDR X0, [X8 + 0x20]
	0x03751710 CBZ X0, 0x3751754
	0x03751714 MOV X1, X31
	0x03751718 BL 0x3738478
	0x0375171C ADD W24, W24, 0x1
	0x03751720 CMP W22, W24
	0x03751724 B.NE 0x37516FC
	0x03751728 LDR X8, [X20]
	0x0375172C ADD W19, W19, 0x1
	0x03751730 LDR X0, [X8 + 0xB8]
	0x03751734 LDR W8, [X0]
	0x03751738 CMP W19, W8
	0x0375173C B.LT 0x3751678
	0x03751740 LDP X20, X19, [X31 + 0x30]
	0x03751744 LDP X22, X21, [X31 + 0x20]
	0x03751748 LDP X24, X23, [X31 + 0x10]
	0x0375174C LDR X30, [X31], #0x40
	0x03751750 RET
	0x03751754 BL 0x1C16F20
	0x03751758 BL 0x1C16F28
	0x0375175C BL 0x1C171E0
	0x03751760 LDR V0, [X0 + 0x8]
	0x03751764 RET
	0x03751768 STR D0, [X0 + 0x8]
	0x0375176C RET
	0x03751770 LDR V0, [X0 + 0x18]
	0x03751774 RET
	0x03751778 STR D0, [X0 + 0x18]
	0x0375177C RET
	0x03751780 LDR V0, [X0 + 0x10]
	0x03751784 RET
	0x03751788 STR D0, [X0 + 0x10]
	0x0375178C RET
	0x03751790 LDR V0, [X0 + 0x4]
	0x03751794 RET
	0x03751798 STR S0, [X0 + 0x4]
	0x0375179C RET
	0x037517A0 LDR V0, [X0 + 0x20]
	0x037517A4 RET
	0x037517A8 STR S0, [X0 + 0x20]
	0x037517AC RET
	0x037517B0 LDR V0, [X0 + 0x24]
	0x037517B4 RET
	0x037517B8 STR S0, [X0 + 0x24]
	0x037517BC RET
	0x037517C0 LDR X0, [X0 + 0x28]
	0x037517C4 RET
	0x037517C8 STR X1, [X0 + 0x28]
	0x037517CC RET
	0x037517D0 LDRB W0, [X0 + 0x2]
	0x037517D4 RET
	0x037517D8 LDRH W0, [X0 + 0xE]

ISIL:
	001 Move [X31-64], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0xC90000
	009 Move W8, [X22+3499]
	010 Move W19, W2
	011 Move W20, W1
	012 Move X21, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x9CB000
	018 Move X0, [X0+3216]
	019 Call 0x1C17CF4
	020 Move X0, 0x9F5000
	021 Move X0, [X0+3152]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+3499], W8
	025 Move X8, [X21+104]
	026 Move X9, W20
	027 Move X23, 0x9CB000
	028 Add X8, X8, X9
	029 Move W9, [X8+4]
	030 Move X8, 0x9F5000
	031 Move X8, [X8+3152]
	032 Move X23, [X23+3216]
	033 Move TEMP, X9
	034 And TEMP, TEMP, 8
	035 Compare TEMP, 8
	036 JumpIfEqual {55}
	037 Move X9, [X21+24]
	038 Compare X9, 0
	039 JumpIfEqual {85}
	040 Move W10, [X9+24]
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Add X9, X9, W19
	043 Move X22, [X9+32]
	044 Compare X22, 0
	045 JumpIfEqual {55}
	046 Move X10, [X22]
	047 Move X9, [X23]
	048 Move W12, [X10+304]
	049 Move W11, [X9+304]
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move X10, [X10+200]
	052 Add X10, X10, X11
	053 NotImplemented "Instruction LDUR not yet implemented."
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move X4, [X8]
	056 Move X0, X21
	057 Move W1, W20
	058 Move W2, W19
	059 Move W3, W31
	060 Call InputActionState.ReadValue, X0, X1, X2, X3
	061 Move X8, [X23]
	062 Move X8, [X8+184]
	063 Move V1, [X8]
	064 NotImplemented "Instruction FCMP not yet implemented."
	065 Move X20, [X31+48]
	066 Move X19, [X31+56]
	067 Move X22, [X31+32]
	068 Move X21, [X31+40]
	069 Move X30, [X31+16]
	070 Move X23, [X31+24]
	071 NotImplemented "Instruction CSET not yet implemented."
	072 Move V8, [X31+64]
	073 Return X0
	074 Move X4, [X8]
	075 Move X0, X21
	076 Move W1, W20
	077 Move W2, W19
	078 Move W3, W31
	079 Call InputActionState.ReadValue, X0, X1, X2, X3
	080 Move X0, X22
	081 Move X1, X31
	082 Move V8, V0
	083 Call ButtonControl.get_pressPointOrDefault, X0
	084 NotImplemented "Instruction FCMP not yet implemented."
	085 Call 0x1C17F20
	086 Call 0x1C17F28

Method: UnityEngine.InputSystem.Utilities.ISavedState SaveAndResetState()

Disassembly:
	0x037517DC RET
	0x037517E0 STR X30, [X31 - 0x20]!
	0x037517E4 STP X20, X19, [X31 + 0x10]
	0x037517E8 MOVZ W8, 0xFFFF
	0x037517EC CMP W1, W8
	0x037517F0 B.GE 0x3751804
	0x037517F4 LDP X20, X19, [X31 + 0x10]
	0x037517F8 STRH W1, [X0 + 0xE]
	0x037517FC LDR X30, [X31], #0x20
	0x03751800 RET
	0x03751804 ADD X0, X31, 0xC
	0x03751808 MOV X1, X31
	0x0375180C STRH W8, [X31 + 0xC]
	0x03751810 BL 0x3398CE4
	0x03751814 MOV X19, X0
	0x03751818 ADRP X0, 0x9F4000
	0x0375181C LDR X0, [X0 + 0xCB0]
	0x03751820 BL 0x1C16D08
	0x03751824 MOV X1, X19
	0x03751828 MOV X2, X31
	0x0375182C BL 0x321B938
	0x03751830 MOV X19, X0
	0x03751834 ADRP X0, 0x9A2000
	0x03751838 LDR X0, [X0 + 0xB40]
	0x0375183C BL 0x1C16D08
	0x03751840 BL 0x1C16F10
	0x03751844 MOV X1, X19
	0x03751848 MOV X2, X31
	0x0375184C MOV X20, X0
	0x03751850 BL 0x3379A44
	0x03751854 ADRP X0, 0x9F4000
	0x03751858 LDR X0, [X0 + 0xCB8]
	0x0375185C BL 0x1C16D08
	0x03751860 MOV X1, X0
	0x03751864 MOV X0, X20
	0x03751868 BL 0x1C16DEC
	0x0375186C LDRB W0, [X0]
	0x03751870 RET
	0x03751874 STR X30, [X31 - 0x20]!
	0x03751878 STP X20, X19, [X31 + 0x10]
	0x0375187C CMP W1, 0xFF
	0x03751880 B.GE 0x3751894
	0x03751884 LDP X20, X19, [X31 + 0x10]
	0x03751888 STRB W1, [X0]
	0x0375188C LDR X30, [X31], #0x20
	0x03751890 RET
	0x03751894 MOVZ W8, 0xFF
	0x03751898 ADD X0, X31, 0xC
	0x0375189C MOV X1, X31
	0x037518A0 STRB W8, [X31 + 0xC]
	0x037518A4 BL 0x3319BB4
	0x037518A8 MOV X19, X0
	0x037518AC ADRP X0, 0x9F4000
	0x037518B0 LDR X0, [X0 + 0xCC0]
	0x037518B4 BL 0x1C16D08
	0x037518B8 MOV X1, X19
	0x037518BC MOV X2, X31
	0x037518C0 BL 0x321B938
	0x037518C4 MOV X19, X0
	0x037518C8 ADRP X0, 0x9A2000
	0x037518CC LDR X0, [X0 + 0xB40]
	0x037518D0 BL 0x1C16D08
	0x037518D4 BL 0x1C16F10
	0x037518D8 MOV X1, X19
	0x037518DC MOV X2, X31
	0x037518E0 MOV X20, X0
	0x037518E4 BL 0x3379A44
	0x037518E8 ADRP X0, 0x9F4000
	0x037518EC LDR X0, [X0 + 0xCC8]
	0x037518F0 BL 0x1C16D08
	0x037518F4 MOV X1, X0
	0x037518F8 MOV X0, X20
	0x037518FC BL 0x1C16DEC
	0x03751900 STR X30, [X31 - 0x20]!
	0x03751904 STP X20, X19, [X31 + 0x10]
	0x03751908 ADDS W31, W1, 0x1
	0x0375190C MOVZ W8, 0xFFFF
	0x03751910 B.EQ 0x3751920
	0x03751914 CMP W1, W8
	0x03751918 B.GE 0x3751930
	0x0375191C MOV W8, W1
	0x03751920 LDP X20, X19, [X31 + 0x10]
	0x03751924 STRH W8, [X0 + 0xC]
	0x03751928 LDR X30, [X31], #0x20
	0x0375192C RET
	0x03751930 MOVZ W8, 0xFFFF
	0x03751934 ADD X0, X31, 0xC
	0x03751938 MOV X1, X31
	0x0375193C STRH W8, [X31 + 0xC]
	0x03751940 BL 0x3398CE4
	0x03751944 MOV X19, X0
	0x03751948 ADRP X0, 0x9F4000
	0x0375194C LDR X0, [X0 + 0xCD0]
	0x03751950 BL 0x1C16D08
	0x03751954 MOV X1, X19
	0x03751958 MOV X2, X31
	0x0375195C BL 0x321B938
	0x03751960 MOV X19, X0
	0x03751964 ADRP X0, 0x9A2000
	0x03751968 LDR X0, [X0 + 0xB40]
	0x0375196C BL 0x1C16D08
	0x03751970 BL 0x1C16F10
	0x03751974 MOV X1, X19
	0x03751978 MOV X2, X31
	0x0375197C MOV X20, X0
	0x03751980 BL 0x3379A44
	0x03751984 ADRP X0, 0x9F4000
	0x03751988 LDR X0, [X0 + 0xCD8]
	0x0375198C BL 0x1C16D08
	0x03751990 MOV X1, X0
	0x03751994 MOV X0, X20
	0x03751998 BL 0x1C16DEC
	0x0375199C LDRB W0, [X0 + 0x1]
	0x037519A0 RET
	0x037519A4 STR X30, [X31 - 0x20]!
	0x037519A8 STP X20, X19, [X31 + 0x10]
	0x037519AC CMP W1, 0xFF
	0x037519B0 B.GE 0x37519C4
	0x037519B4 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X19, 0xC90000
	011 Move X23, 0x9F5000
	012 Move W8, [X19+3500]
	013 Move X23, [X23+3160]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {44}
	018 Move X0, 0x9A4000
	019 Move X0, [X0+3696]
	020 Call 0x1C17CF4
	021 Move X0, 0x9F5000
	022 Move X0, [X0+728]
	023 Call 0x1C17CF4
	024 Move X0, 0x9F5000
	025 Move X0, [X0+3168]
	026 Call 0x1C17CF4
	027 Move X0, 0x9F5000
	028 Move X0, [X0+3176]
	029 Call 0x1C17CF4
	030 Move X0, 0x9F5000
	031 Move X0, [X0+3184]
	032 Call 0x1C17CF4
	033 Move X0, 0x9F5000
	034 Move X0, [X0+3192]
	035 Call 0x1C17CF4
	036 Move X0, 0x9F5000
	037 Move X0, [X0+3200]
	038 Call 0x1C17CF4
	039 Move X0, 0x9F5000
	040 Move X0, [X0+3160]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X19+3500], W8
	044 Move X0, [X23]
	045 Move X24, 0x9F5000
	046 Move W8, [X0+224]
	047 Move X24, [X24+728]
	048 Compare W8, 0
	049 JumpIfNotEqual {52}
	050 Call 0x1C17DFC
	051 Move X0, [X23]
	052 Move X8, [X0+184]
	053 Move X9, [X24]
	054 Move X20, [X8+8]
	055 Move X19, [X9+184]
	056 Compare X20, 0
	057 JumpIfNotEqual {79}
	058 Move W8, [X0+224]
	059 Compare W8, 0
	060 JumpIfNotEqual {63}
	061 Call 0x1C17DFC
	062 Move X0, [X23]
	063 Move X9, 0x9F5000
	064 Move X8, [X0+184]
	065 Move X9, [X9+3184]
	066 Move X21, [X8]
	067 Move X0, [X9]
	068 Call 0x1C17F10
	069 Move X8, 0x9F5000
	070 Move X8, [X8+3192]
	071 Move X1, X21
	072 Move X3, X31
	073 Move X20, X0
	074 Move X2, [X8]
	075 Call TypedRestore<GlobalState>..ctor, X0, X1, X2
	076 Move X0, [X23]
	077 Move X8, [X0+184]
	078 Move [X8+8], X20
	079 Move W8, [X0+224]
	080 Compare W8, 0
	081 JumpIfNotEqual {84}
	082 Call 0x1C17DFC
	083 Move X0, [X23]
	084 Move X8, [X0+184]
	085 Move X26, 0x9F5000
	086 Move X25, 0x9F5000
	087 Move X21, [X8+16]
	088 Move X26, [X26+3176]
	089 Move X25, [X25+3168]
	090 Compare X21, 0
	091 JumpIfNotEqual {113}
	092 Move W8, [X0+224]
	093 Compare W8, 0
	094 JumpIfNotEqual {97}
	095 Call 0x1C17DFC
	096 Move X0, [X23]
	097 Move X9, 0x9A4000
	098 Move X8, [X0+184]
	099 Move X9, [X9+3696]
	100 Move X22, [X8]
	101 Move X0, [X9]
	102 Call 0x1C17F10
	103 Move X8, 0x9F5000
	104 Move X8, [X8+3200]
	105 Move X1, X22
	106 Move X3, X31
	107 Move X21, X0
	108 Move X2, [X8]
	109 Call Action..ctor, X0, X1, X2
	110 Move X8, [X23]
	111 Move X8, [X8+184]
	112 Move [X8+16], X21
	113 Move X0, [X26]
	114 Call 0x1C17F10
	115 Move X4, [X25]
	116 Move X1, X19
	117 Move X2, X20
	118 Move X3, X21
	119 Move X22, X0
	120 Call SavedStructState`1<GlobalState>..ctor, X0, X1, X2, X3
	121 Move X8, [X24]
	122 Move W2, 184
	123 Move W1, W31
	124 Move X0, [X8+184]
	125 Call 0x3EB2B10
	126 Move X0, X22
	127 Move X20, [X31+64]
	128 Move X19, [X31+72]
	129 Move X22, [X31+48]
	130 Move X21, [X31+56]
	131 Move X24, [X31+32]
	132 Move X23, [X31+40]
	133 Move X26, [X31+16]
	134 Move X25, [X31+24]
	135 Move X30, [X31+80]
	136 Return X0

Method: System.Void AddToGlobalList()

Disassembly:
	0x0374B928 MOV X0, X25
	0x0374B92C MOV X1, X31
	0x0374B930 BL 0x3734774
	0x0374B934 MOV X1, X31
	0x0374B938 BL 0x37C1380
	0x0374B93C TBZ X0, 0x0, 0x374B904
	0x0374B940 MOV X0, X25
	0x0374B944 MOV X1, X31
	0x0374B948 BL 0x3734B58
	0x0374B94C MOV X1, X0
	0x0374B950 MOV X0, X25
	0x0374B954 MOV X2, X31
	0x0374B958 BL 0x373582C
	0x0374B95C TBNZ X0, 0x0, 0x374B978
	0x0374B960 LDR W1, [X25 + 0xC0]
	0x0374B964 MOVZ W2, 0x1
	0x0374B968 MOV X0, X20
	0x0374B96C MOV W3, W31
	0x0374B970 BL 0x374BF30
	0x0374B974 B 0x374B904
	0x0374B978 TBNZ X27, 0x0, 0x374B9C0
	0x0374B97C ADRP X8, 0x9D0000
	0x0374B980 LDR X8, [X8 + 0xE50]
	0x0374B984 MOVI V0.2D, 0x0
	0x0374B988 STP V0, V0, [X31 + 0x20]
	0x0374B98C LDR X3, [X8]
	0x0374B990 ADD X0, X31, 0x20
	0x0374B994 MOVZ W1, 0x2
	0x0374B998 MOV W2, W31
	0x0374B99C BL 0x2DFA684
	0x0374B9A0 LDP V1, V0, [X31 + 0x20]
	0x0374B9A4 LDR X0, [X31 + 0x18]
	0x0374B9A8 ADRP X8, 0x9FA000
	0x0374B9AC STP V1, V0, [X0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xC96000
	007 Move X21, 0x9FB000
	008 Move X20, 0x9FB000
	009 Move W8, [X22+3501]
	010 Move X21, [X21+728]
	011 Move X20, [X20+2840]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x9FB000
	018 Move X0, [X0+2840]
	019 Call 0x1C17CF4
	020 Move X0, 0x9FB000
	021 Move X0, [X0+728]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+3501], W8
	025 Call InputActionState.CompactGlobalList
	026 Move X0, X19
	027 Move W1, W31
	028 Move X2, X31
	029 Call GCHandle.Alloc, X0, X1
	030 Move X8, [X21]
	031 Move X3, [X20]
	032 Move X20, [X31+32]
	033 Move X19, [X31+40]
	034 Move X22, [X31+16]
	035 Move X21, [X31+24]
	036 Move X8, [X8+184]
	037 Move W2, 10
	038 Move X1, X0
	039 Move X0, X8
	040 Move X30, [X31+48]
	041 Call InlinedArray`1<GCHandle>.AppendWithCapacity, X0, X1, X2
	042 Return 

Method: System.Void RemoveMapFromGlobalList()

Disassembly:
	0x0374BF2C BL 0x3EB1B20
	0x0374BF30 STR X30, [X31 - 0x50]!
	0x0374BF34 STP X26, X25, [X31 + 0x10]
	0x0374BF38 STP X24, X23, [X31 + 0x20]
	0x0374BF3C STP X22, X21, [X31 + 0x30]
	0x0374BF40 STP X20, X19, [X31 + 0x40]
	0x0374BF44 LDR X8, [X0 + 0x60]
	0x0374BF48 SBFM X9, X1, 0x3F, 0x1F
	0x0374BF4C ADD X23, X9, W1, SXTW
	0x0374BF50 MOV W19, W3
	0x0374BF54 ADD X20, X8, X23, 0x4, LSL
	0x0374BF58 LDRB W8, [X20]
	0x0374BF5C MOV W22, W2
	0x0374BF60 MOV X21, X0
	0x0374BF64 SXTW X25, W1
	0x0374BF68 CMP W8, 0x2
	0x0374BF6C B.CC 0x374BFF4
	0x0374BF70 MOV X0, X31
	0x0374BF74 BL 0x37FC688
	0x0374BF78 LDRSH W8, [X20 + 0x1A]
	0x0374BF7C STR D0, [X20 + 0x8]
	0x0374BF80 ADDS W31, W8, 0x1
	0x0374BF84 B.EQ 0x374BFCC
	0x0374BF88 LDRH W23, [X20 + 0x18]
	0x0374BF8C LDR X8, [X21 + 0x68]
	0x0374BF90 ADD X8, X8, X23, 0x5, LSL
	0x0374BF94 LDRH W9, [X8 + 0xC]
	0x0374BF98 LDRB W26, [X8 + 0x1]
	0x0374BF9C MOVZ W8, 0xFFFF
	0x0374BFA0 CMP W9, W8
	0x0374BFA4 CSINV W24, W9, W31, NE
	0x0374BFA8 CBZ W26, 0x374BFF4
	0x0374BFAC MOV X0, X21
	0x0374BFB0 MOV W2, W23
	0x0374BFB4 MOV W3, W24
	0x0374BFB8 BL 0x374D40C
	0x0374BFBC SUBS W26, W26, 0x1
	0x0374BFC0 ADD W24, W24, 0x1
	0x0374BFC4 B.NE 0x374BFAC
	0x0374BFC8 B 0x374BFF4
	0x0374BFCC LDRB W8, [X20]
	0x0374BFD0 CMP W8, 0x4
	0x0374BFD4 B.EQ 0x374BFF4
	0x0374BFD8 LDR X8, [X21 + 0x60]
	0x0374BFDC UBFM X9, X23, 0x3C, 0x3B
	0x0374BFE0 MOVZ W1, 0x4
	0x0374BFE4 MOVZ W3, 0x1
	0x0374BFE8 ADD X2, X9, X8
	0x0374BFEC MOV X0, X21
	0x0374BFF0 BL 0x374D4B0
	0x0374BFF4 STRB W22, [X20]
	0x0374BFF8 MOVZ W22, 0xFFFF
	0x0374BFFC STRH W22, [X20 + 0x4]
	0x0374C000 LDP X8, X9, [X21 + 0x90]
	0x0374C004 MOV X0, X20
	0x0374C008 LDRH W8, [X8, X25, LSL #1]
	0x0374C00C LDRH W1, [X9, X8, LSL #1]
	0x0374C010 BL 0x374CCC0
	0x0374C014 LDRB W8, [X20 + 0x1]
	0x0374C018 MOVZ W9, 0xA7
	0x0374C01C STRH W22, [X20 + 0x1A]
	0x0374C020 STP X31, X31, [X20 + 0x8]
	0x0374C024 AND W8, W8, W9, 0x0
	0x0374C028 STRB W8, [X20 + 0x1]
	0x0374C02C TBZ X19, 0x0, 0x374C034
	0x0374C030 STP X31, X31, [X20 + 0x20]
	0x0374C034 LDP X20, X19, [X31 + 0x40]
	0x0374C038 LDP X22, X21, [X31 + 0x30]
	0x0374C03C LDP X24, X23, [X31 + 0x20]
	0x0374C040 LDP X26, X25, [X31 + 0x10]
	0x0374C044 LDR X30, [X31], #0x50
	0x0374C048 RET
	0x0374C04C STR X30, [X31 - 0x10]!
	0x0374C050 CBZ X1, 0x374C088
	0x0374C054 LDRSW X1, [X1 + 0x58]
	0x0374C058 LDR X8, [X0 + 0xB8]
	0x0374C05C MOVZ W9, 0x30
	0x0374C060 MADD X8, X1, X9, X8

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0xC96000
	009 Move X21, 0x9FB000
	010 Move W8, [X20+3502]
	011 Move X21, [X21+728]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {28}
	017 Move X0, 0x9FB000
	018 Move X0, [X0+2848]
	019 Call 0x1C17CF4
	020 Move X0, 0x9FB000
	021 Move X0, [X0+2856]
	022 Call 0x1C17CF4
	023 Move X0, 0x9FB000
	024 Move X0, [X0+728]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X20+3502], W8
	028 Move X8, [X21]
	029 Move [X31+8], X31
	030 Move X9, [X8+184]
	031 Move W23, [X9]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X22, 0x9FB000
	034 Move X22, [X22+2856]
	035 Move X0, [X8+184]
	036 Move W1, W31
	037 Move X2, [X22]
	038 Call InlinedArray`1<GCHandle>.get_Item, X0, X1
	039 Move [X31+8], X0
	040 Add X0, X31, 8
	041 Move X1, X31
	042 Call GCHandle.get_Target, X0
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move W20, 1
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move X8, [X21]
	047 Move X2, [X22]
	048 Move W1, W20
	049 Move X0, [X8+184]
	050 Call InlinedArray`1<GCHandle>.get_Item, X0, X1
	051 Move [X31+8], X0
	052 Add X0, X31, 8
	053 Move X1, X31
	054 Call GCHandle.get_Target, X0
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Add W20, W20, 1
	057 Subtract W19, W20, 1
	058 Move W19, W31
	059 Move X8, [X21]
	060 Move X2, [X22]
	061 Move W1, W19
	062 Move X0, [X8+184]
	063 Call InlinedArray`1<GCHandle>.get_Item, X0, X1
	064 Move [X31+8], X0
	065 Add X0, X31, 8
	066 Move X1, X31
	067 Call GCHandle.Free, X0
	068 Move X9, 0x9FA000
	069 Move X8, [X21]
	070 Move X9, [X9+2848]
	071 Move W1, W19
	072 Move X0, [X8+184]
	073 Move X2, [X9]
	074 Call InlinedArray`1<GCHandle>.RemoveAtByMovingTailWithCapacity, X0, X1
	075 Move X20, [X31+48]
	076 Move X19, [X31+56]
	077 Move X22, [X31+32]
	078 Move X21, [X31+40]
	079 Move X30, [X31+16]
	080 Move X23, [X31+24]
	081 Add X31, X31, 64
	082 Return 

Method: System.Void CompactGlobalList()

Disassembly:
	0x037519B8 STRB W1, [X0 + 0x1]
	0x037519BC LDR X30, [X31], #0x20
	0x037519C0 RET
	0x037519C4 MOVZ W8, 0xFF
	0x037519C8 ADD X0, X31, 0xC
	0x037519CC MOV X1, X31
	0x037519D0 STRB W8, [X31 + 0xC]
	0x037519D4 BL 0x3319BB4
	0x037519D8 MOV X19, X0
	0x037519DC ADRP X0, 0x9F4000
	0x037519E0 LDR X0, [X0 + 0xCE0]
	0x037519E4 BL 0x1C16D08
	0x037519E8 MOV X1, X19
	0x037519EC MOV X2, X31
	0x037519F0 BL 0x321B938
	0x037519F4 MOV X19, X0
	0x037519F8 ADRP X0, 0x9A2000
	0x037519FC LDR X0, [X0 + 0xB40]
	0x03751A00 BL 0x1C16D08
	0x03751A04 BL 0x1C16F10
	0x03751A08 MOV X1, X19
	0x03751A0C MOV X2, X31
	0x03751A10 MOV X20, X0
	0x03751A14 BL 0x3379A44
	0x03751A18 ADRP X0, 0x9F4000
	0x03751A1C LDR X0, [X0 + 0xCE8]
	0x03751A20 BL 0x1C16D08
	0x03751A24 MOV X1, X0
	0x03751A28 MOV X0, X20
	0x03751A2C BL 0x1C16DEC
	0x03751A30 STR X30, [X31 - 0x20]!
	0x03751A34 STP X20, X19, [X31 + 0x10]
	0x03751A38 ADDS W31, W1, 0x1
	0x03751A3C MOVZ W8, 0xFFFF
	0x03751A40 B.EQ 0x3751A50
	0x03751A44 CMP W1, W8
	0x03751A48 B.GE 0x3751A60
	0x03751A4C MOV W8, W1
	0x03751A50 LDP X20, X19, [X31 + 0x10]
	0x03751A54 STRH W8, [X0 + 0xA]
	0x03751A58 LDR X30, [X31], #0x20
	0x03751A5C RET
	0x03751A60 MOVZ W8, 0xFFFF
	0x03751A64 ADD X0, X31, 0xC
	0x03751A68 MOV X1, X31
	0x03751A6C STRH W8, [X31 + 0xC]
	0x03751A70 BL 0x3398CE4
	0x03751A74 MOV X19, X0
	0x03751A78 ADRP X0, 0x9F4000
	0x03751A7C LDR X0, [X0 + 0xCF0]
	0x03751A80 BL 0x1C16D08
	0x03751A84 MOV X1, X19
	0x03751A88 MOV X2, X31
	0x03751A8C BL 0x321B938
	0x03751A90 MOV X19, X0
	0x03751A94 ADRP X0, 0x9A2000
	0x03751A98 LDR X0, [X0 + 0xB40]
	0x03751A9C BL 0x1C16D08
	0x03751AA0 BL 0x1C16F10
	0x03751AA4 MOV X1, X19
	0x03751AA8 MOV X2, X31
	0x03751AAC MOV X20, X0
	0x03751AB0 BL 0x3379A44
	0x03751AB4 ADRP X0, 0x9F4000
	0x03751AB8 LDR X0, [X0 + 0xCF8]
	0x03751ABC BL 0x1C16D08
	0x03751AC0 MOV X1, X0
	0x03751AC4 MOV X0, X20
	0x03751AC8 BL 0x1C16DEC
	0x03751ACC LDRB W0, [X0 + 0x2]
	0x03751AD0 RET
	0x03751AD4 STR X30, [X31 - 0x20]!
	0x03751AD8 STP X20, X19, [X31 + 0x10]
	0x03751ADC CMP W1, 0xFF
	0x03751AE0 B.GE 0x3751AF4
	0x03751AE4 LDP X20, X19, [X31 + 0x10]
	0x03751AE8 STRB W1, [X0 + 0x2]
	0x03751AEC LDR X30, [X31], #0x20
	0x03751AF0 RET
	0x03751AF4 MOVZ W8, 0xFF
	0x03751AF8 ADD X0, X31, 0xC
	0x03751AFC MOV X1, X31
	0x03751B00 STRB W8, [X31 + 0xC]
	0x03751B04 BL 0x3319BB4
	0x03751B08 MOV X19, X0
	0x03751B0C ADRP X0, 0x9F4000
	0x03751B10 LDR X0, [X0 + 0xD00]
	0x03751B14 BL 0x1C16D08
	0x03751B18 MOV X1, X19
	0x03751B1C MOV X2, X31

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+32], X24
	004 Move [X31+40], X23
	005 Move [X31+48], X22
	006 Move [X31+56], X21
	007 Move [X31+64], X20
	008 Move [X31+72], X19
	009 Move X19, 0xC90000
	010 Move X21, 0x9F5000
	011 Move W8, [X19+3503]
	012 Move X21, [X21+728]
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {28}
	017 Move X0, 0x9F5000
	018 Move X0, [X0+2856]
	019 Call 0x1C17CF4
	020 Move X0, 0x9F5000
	021 Move X0, [X0+3208]
	022 Call 0x1C17CF4
	023 Move X0, 0x9F5000
	024 Move X0, [X0+728]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X19+3503], W8
	028 Move X8, [X21]
	029 Move [X31+24], X31
	030 Move [X31+8], X31
	031 Move X0, [X8+184]
	032 Move W22, [X0]
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X23, 0x9F5000
	035 Move X24, 0x9F5000
	036 Move X23, [X23+2856]
	037 Move X24, [X24+3208]
	038 Move W19, W31
	039 Move W20, W31
	040 Move X2, [X23]
	041 Move W1, W20
	042 Call InlinedArray`1<GCHandle>.get_Item, X0, X1
	043 Move [X31+24], X0
	044 Add X0, X31, 24
	045 Move X1, X31
	046 Call GCHandle.get_IsAllocated, X0
	047 Move TEMP, X0
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfNotEqual {64}
	051 Add X0, X31, 24
	052 Move X1, X31
	053 Call GCHandle.get_Target, X0
	054 Compare X0, 0
	055 JumpIfEqual {64}
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move X8, [X21]
	058 Move X2, [X31+24]
	059 Move X3, [X24]
	060 Move W1, W19
	061 Move X0, [X8+184]
	062 Call InlinedArray`1<GCHandle>.set_Item, X0, X1, X2
	063 Add W19, W19, 1
	064 Add X0, X31, 24
	065 Move X1, X31
	066 Call GCHandle.get_IsAllocated, X0
	067 Move TEMP, X0
	068 And TEMP, TEMP, 1
	069 Compare TEMP, 1
	070 JumpIfNotEqual {80}
	071 Move X8, [X21]
	072 Move X2, [X23]
	073 Move W1, W20
	074 Move X0, [X8+184]
	075 Call InlinedArray`1<GCHandle>.get_Item, X0, X1
	076 Move [X31+8], X0
	077 Add X0, X31, 8
	078 Move X1, X31
	079 Call GCHandle.Free, X0
	080 Move X8, [X21]
	081 Move X3, [X24]
	082 Move W1, W20
	083 Move X2, X31
	084 Move X0, [X8+184]
	085 Move [X31+8], X31
	086 Call InlinedArray`1<GCHandle>.set_Item, X0, X1, X2
	087 Move X8, [X21]
	088 Add W20, W20, 1
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Move X0, [X8+184]
	091 Move W19, W31
	092 Move [X0], W19
	093 Move X20, [X31+64]
	094 Move X19, [X31+72]
	095 Move X22, [X31+48]
	096 Move X21, [X31+56]
	097 Move X24, [X31+32]
	098 Move X23, [X31+40]
	099 Move X30, [X31+16]
	100 Add X31, X31, 80
	101 Return 

Method: System.Void NotifyListenersOfActionChange(UnityEngine.InputSystem.InputActionChange change)

Disassembly:
	0x0374D08C LDRB W8, [X8 + 0x1]
	0x0374D090 CBZ X8, 0x374D0F4
	0x0374D094 LDRH W13, [X10 + 0xC]
	0x0374D098 LDR X9, [X0 + 0x70]
	0x0374D09C MOVZ W10, 0xFFFF
	0x0374D0A0 MOVN W14, 0x0
	0x0374D0A4 CMP W13, W10
	0x0374D0A8 CSEL X13, X14, X13, EQ
	0x0374D0AC MOVZ W11, 0x1
	0x0374D0B0 MOVZ W12, 0x30
	0x0374D0B4 UBFM X13, X13, 0x20, 0x1F
	0x0374D0B8 MOVZ X14, 0x1
	0x0374D0BC SBFM X15, X13, 0x20, 0x3F
	0x0374D0C0 MUL X15, X15, X12
	0x0374D0C4 LDRH W15, [X15, X9, LSL]
	0x0374D0C8 CMP W15, W10
	0x0374D0CC CSINV W15, W15, W31, NE
	0x0374D0D0 CMP W15, W2
	0x0374D0D4 CSET W0, EQ
	0x0374D0D8 CMP X11, X8
	0x0374D0DC B.CS 0x374D0F0
	0x0374D0E0 ADD X13, X13, X14
	0x0374D0E4 CMP W15, W2
	0x0374D0E8 ADD X11, X11, 0x1
	0x0374D0EC B.NE 0x374D0BC
	0x0374D0F0 RET
	0x0374D0F4 MOV W0, W31
	0x0374D0F8 RET
	0x0374D0FC STP X30, X25, [X31 - 0x40]!
	0x0374D100 STP X24, X23, [X31 + 0x10]
	0x0374D104 STP X22, X21, [X31 + 0x20]
	0x0374D108 STP X20, X19, [X31 + 0x30]
	0x0374D10C ADRP X19, 0xC93000
	0x0374D110 LDRB W8, [X19 + 0xD9A]
	0x0374D114 MOV X20, X1
	0x0374D118 MOV X21, X0
	0x0374D11C TBNZ X8, 0x0, 0x374D134
	0x0374D120 ADRP X0, 0x9A6000
	0x0374D124 LDR X0, [X0 + 0xE00]
	0x0374D128 BL 0x1C16CF4
	0x0374D12C MOVZ W8, 0x1
	0x0374D130 STRB W8, [X19 + 0xD9A]
	0x0374D134 ADRP X23, 0x9A6000
	0x0374D138 LDR X23, [X23 + 0xE00]
	0x0374D13C MOV X0, X31
	0x0374D140 BL 0x373BF80
	0x0374D144 LDR W8, [X21 + 0x4C]
	0x0374D148 MOV X19, X0
	0x0374D14C CMP W8, 0x1
	0x0374D150 B.LT 0x374D1F8
	0x0374D154 MOV X24, X31
	0x0374D158 MOV X22, X31
	0x0374D15C MOVZ W25, 0xFFFF
	0x0374D160 LDR X8, [X21 + 0x60]
	0x0374D164 ADD X8, X24, X8
	0x0374D168 LDRB W9, [X8]
	0x0374D16C CMP W9, 0x2
	0x0374D170 B.CC 0x374D1E4
	0x0374D174 LDRB W9, [X8 + 0x1]
	0x0374D178 TBNZ X9, 0x1, 0x374D1BC
	0x0374D17C LDRH W8, [X8 + 0x4]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0xC94000
	009 Move W8, [X21+3504]
	010 Move W19, W1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x9A7000
	017 Move X0, [X0+1432]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3504], W8
	021 Move W8, [X20+72]
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move X23, 0x9A7000
	024 Move X23, [X23+1432]
	025 Move X22, X31
	026 Move X8, [X20+16]
	027 Compare X8, 0
	028 JumpIfEqual {77}
	029 Move W9, [X8+24]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Add X8, X8, X22
	032 Move X24, [X8+32]
	033 Compare X24, 0
	034 JumpIfEqual {77}
	035 Move X1, [X24+80]
	036 Compare X1, 0
	037 JumpIfNotEqual {53}
	038 Move X0, [X23]
	039 Move X21, [X24+32]
	040 Move W8, [X0+224]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Move X0, X21
	045 Move X1, X31
	046 Move X2, X31
	047 Call Object.op_Equality, X0, X1
	048 Move TEMP, X0
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfNotEqual {66}
	052 Move X1, X24
	053 Move W0, W19
	054 Call InputActionState.NotifyListenersOfActionChange, X0, X1
	055 Move W8, [X20+72]
	056 Add X22, X22, 1
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move X20, [X31+48]
	059 Move X19, [X31+56]
	060 Move X22, [X31+32]
	061 Move X21, [X31+40]
	062 Move X24, [X31+16]
	063 Move X23, [X31+24]
	064 Move X30, [X31+64]
	065 Return 
	066 Move X1, [X24+32]
	067 Move W0, W19
	068 Move X20, [X31+48]
	069 Move X19, [X31+56]
	070 Move X22, [X31+32]
	071 Move X21, [X31+40]
	072 Move X24, [X31+16]
	073 Move X23, [X31+24]
	074 Move X30, [X31+64]
	075 Call InputActionState.NotifyListenersOfActionChange, X0, X1
	076 Return 
	077 Call 0x1C17F20
	078 Call 0x1C17F28

Method: System.Void NotifyListenersOfActionChange(UnityEngine.InputSystem.InputActionChange change, System.Object actionOrMapOrAsset)

Disassembly:
	0x0374DF48 MOV W1, W23
	0x0374DF4C BL 0x374CAD4
	0x0374DF50 ADD X0, X31, 0x10
	0x0374DF54 MOV W1, W24
	0x0374DF58 ADD X25, X31, 0x10
	0x0374DF5C BL 0x374CCC0
	0x0374DF60 MOVZ W8, 0xFFFF
	0x0374DF64 CMP W29, W8
	0x0374DF68 STRH W8, [X31 + 0x2A]
	0x0374DF6C CSEL X8, X31, X25, EQ
	0x0374DF70 CSEL X10, X25, X31, EQ
	0x0374DF74 STP D8, D8, [X31 + 0x18]
	0x0374DF78 B.EQ 0x374DFAC
	0x0374DF7C LDR X9, [X20 + 0x60]
	0x0374DF80 ADD W10, W21, W21, 0x1, LSL
	0x0374DF84 UBFM W10, W10, 0x1C, 0x1B
	0x0374DF88 ADD X10, X9, W10, SXTW
	0x0374DF8C LDRB W11, [X10 + 0x1]
	0x0374DF90 LDRB W9, [X8 + 0x1]
	0x0374DF94 UBFM W11, W11, 0x1, 0x1F
	0x0374DF98 BFM W9, W11, 0x1F, 0x0
	0x0374DF9C STRB W9, [X8 + 0x1]
	0x0374DFA0 LDRB W8, [X10 + 0x1]
	0x0374DFA4 AND W8, W8, 0x20
	0x0374DFA8 B 0x374DFBC
	0x0374DFAC LDRB W9, [X10 + 0x1]
	0x0374DFB0 MOV W8, W31
	0x0374DFB4 AND W9, W9, 0xFFFFFFFD
	0x0374DFB8 STRB W9, [X10 + 0x1]
	0x0374DFBC AND W9, W9, 0xFFFFFFDF
	0x0374DFC0 ORR W8, W9, W8, 0x0
	0x0374DFC4 STRB W8, [X31 + 0x11]
	0x0374DFC8 LDP V1, V0, [X31 + 0x20]
	0x0374DFCC LDR V2, [X31 + 0x1]
	0x0374DFD0 STP V1, V0, [X31 + 0x50]
	0x0374DFD4 STR V2, [X31 + 0x4]
	0x0374DFD8 LDRB W8, [X20 + 0xC0]
	0x0374DFDC CBZ W8, 0x374DFEC
	0x0374DFE0 LDRB W8, [X28 + 0x4]
	0x0374DFE4 AND W8, W8, 0xFFFFFFEF
	0x0374DFE8 STRB W8, [X28 + 0x4]
	0x0374DFEC LDR X8, [X20 + 0x18]
	0x0374DFF0 CBZ X8, 0x374E294
	0x0374DFF4 LDR W9, [X8 + 0x18]
	0x0374DFF8 CMP W9, W23
	0x0374DFFC B.LS 0x374E298
	0x0374E000 SXTW X24, W23
	0x0374E004 ADD X8, X8, X24, 0x3, LSL
	0x0374E008 LDR X23, [X8 + 0x20]
	0x0374E00C MOV X0, X23
	0x0374E010 MOV X1, X31
	0x0374E014 BL 0x377394C
	0x0374E018 FMOV S0, W31
	0x0374E01C TBNZ X0, 0x0, 0x374E030
	0x0374E020 CBZ X23, 0x374E2A0
	0x0374E024 MOV X0, X23
	0x0374E028 MOV X1, X31
	0x0374E02C BL 0x377240C
	0x0374E030 LDRB W8, [X31 + 0x41]
	0x0374E034 STR S0, [X31 + 0x5C]
	0x0374E038 ORR W8, W8, 0x1
	0x0374E03C STRB W8, [X31 + 0x41]
	0x0374E040 LDR X8, [X20 + 0x78]
	0x0374E044 STR S0, [X8, X24, LSL #2]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0xC94000
	009 Move X21, 0x9F9000
	010 Move X22, 0x9F9000
	011 Move X23, 0x9F9000
	012 Move W8, [X24+3505]
	013 Move X21, [X21+728]
	014 Move X22, [X22+3064]
	015 Move X23, [X23+3072]
	016 Move X19, X1
	017 Move W20, W0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {39}
	022 Move X0, 0x9F9000
	023 Move X0, [X0+3072]
	024 Call 0x1C17CF4
	025 Move X0, 0x9F9000
	026 Move X0, [X0+3080]
	027 Call 0x1C17CF4
	028 Move X0, 0x9F9000
	029 Move X0, [X0+728]
	030 Call 0x1C17CF4
	031 Move X0, 0x9F9000
	032 Move X0, [X0+3088]
	033 Call 0x1C17CF4
	034 Move X0, 0x9F9000
	035 Move X0, [X0+3064]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X24+3505], W8
	039 Move X8, [X21]
	040 Move X3, [X22]
	041 Move X5, [X23]
	042 Move X1, X19
	043 Move X8, [X8+184]
	044 Move W2, W20
	045 Move X4, X31
	046 Add X0, X8, 24
	047 Call DelegateHelpers.InvokeCallbacksSafe, X0, X1, X2, X3, X4
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X8, [X21]
	050 Move X9, 0x9F9000
	051 Move X10, 0x9F9000
	052 Move X9, [X9+3088]
	053 Call 0x3EB2934
	054 Return 
	055 Move X8, [X8+184]
	056 Move X1, X19
	057 Move X2, [X9]
	058 Move X4, [X10]
	059 Move X20, [X31+48]
	060 Move X19, [X31+56]
	061 Move X22, [X31+32]
	062 Move X21, [X31+40]
	063 Move X24, [X31+16]
	064 Move X23, [X31+24]
	065 Add X0, X8, 104
	066 Move X3, X31
	067 Move X30, [X31+64]
	068 Call DelegateHelpers.InvokeCallbacksSafe, X0, X1, X2, X3
	069 Return 
	070 Move X20, [X31+48]
	071 Move X19, [X31+56]
	072 Move X22, [X31+32]
	073 Move X21, [X31+40]
	074 Move X24, [X31+16]
	075 Move X23, [X31+24]
	076 Move X30, [X31+64]
	077 Return 

Method: System.Void ResetGlobals()

Disassembly:
	0x03751B20 BL 0x321B938
	0x03751B24 MOV X19, X0
	0x03751B28 ADRP X0, 0x9A2000
	0x03751B2C LDR X0, [X0 + 0xB40]
	0x03751B30 BL 0x1C16D08
	0x03751B34 BL 0x1C16F10
	0x03751B38 MOV X1, X19
	0x03751B3C MOV X2, X31
	0x03751B40 MOV X20, X0
	0x03751B44 BL 0x3379A44
	0x03751B48 ADRP X0, 0x9F4000
	0x03751B4C LDR X0, [X0 + 0xD08]
	0x03751B50 BL 0x1C16D08
	0x03751B54 MOV X1, X0
	0x03751B58 MOV X0, X20
	0x03751B5C BL 0x1C16DEC
	0x03751B60 STR X30, [X31 - 0x20]!
	0x03751B64 STP X20, X19, [X31 + 0x10]
	0x03751B68 ADDS W31, W1, 0x1
	0x03751B6C MOVZ W8, 0xFFFF
	0x03751B70 B.EQ 0x3751B80
	0x03751B74 CMP W1, W8
	0x03751B78 B.GE 0x3751B90
	0x03751B7C MOV W8, W1
	0x03751B80 LDP X20, X19, [X31 + 0x10]
	0x03751B84 STRH W8, [X0 + 0x6]
	0x03751B88 LDR X30, [X31], #0x20
	0x03751B8C RET
	0x03751B90 MOVZ W8, 0xFFFF
	0x03751B94 ADD X0, X31, 0xC
	0x03751B98 MOV X1, X31
	0x03751B9C STRH W8, [X31 + 0xC]
	0x03751BA0 BL 0x3398CE4
	0x03751BA4 MOV X19, X0
	0x03751BA8 ADRP X0, 0x9F4000
	0x03751BAC LDR X0, [X0 + 0xD10]
	0x03751BB0 BL 0x1C16D08
	0x03751BB4 MOV X1, X19
	0x03751BB8 MOV X2, X31
	0x03751BBC BL 0x321B938
	0x03751BC0 MOV X19, X0
	0x03751BC4 ADRP X0, 0x9A2000
	0x03751BC8 LDR X0, [X0 + 0xB40]
	0x03751BCC BL 0x1C16D08
	0x03751BD0 BL 0x1C16F10
	0x03751BD4 MOV X1, X19
	0x03751BD8 MOV X2, X31
	0x03751BDC MOV X20, X0
	0x03751BE0 BL 0x3379A44
	0x03751BE4 ADRP X0, 0x9F4000
	0x03751BE8 LDR X0, [X0 + 0xD18]
	0x03751BEC BL 0x1C16D08
	0x03751BF0 MOV X1, X0
	0x03751BF4 MOV X0, X20
	0x03751BF8 BL 0x1C16DEC
	0x03751BFC LDRB W0, [X0 + 0x3]
	0x03751C00 RET
	0x03751C04 STR X30, [X31 - 0x20]!
	0x03751C08 STP X20, X19, [X31 + 0x10]
	0x03751C0C CMP W1, 0xFF
	0x03751C10 B.GE 0x3751C24
	0x03751C14 LDP X20, X19, [X31 + 0x10]
	0x03751C18 STRB W1, [X0 + 0x3]
	0x03751C1C LDR X30, [X31], #0x20
	0x03751C20 RET
	0x03751C24 MOVZ W8, 0xFF
	0x03751C28 ADD X0, X31, 0xC
	0x03751C2C MOV X1, X31
	0x03751C30 STRB W8, [X31 + 0xC]
	0x03751C34 BL 0x3319BB4
	0x03751C38 MOV X19, X0
	0x03751C3C ADRP X0, 0x9F4000
	0x03751C40 LDR X0, [X0 + 0xD20]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X19, 0xC90000
	009 Move X20, 0x9F5000
	010 Move W8, [X19+3506]
	011 Move X20, [X20+728]
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0x9F5000
	017 Move X0, [X0+3216]
	018 Call 0x1C17CF4
	019 Move X0, 0x9F5000
	020 Move X0, [X0+3224]
	021 Call 0x1C17CF4
	022 Move X0, 0x9F5000
	023 Move X0, [X0+2856]
	024 Call 0x1C17CF4
	025 Move X0, 0x9F5000
	026 Move X0, [X0+728]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X19+3506], W8
	030 Move X22, 0x9F5000
	031 Move X21, 0x9F5000
	032 Move X22, [X22+3216]
	033 Move X21, [X21+3224]
	034 Move [X31+8], X31
	035 Call InputActionState.DestroyAllActionMapStates
	036 Move X8, [X20]
	037 Move X0, [X8+184]
	038 Move W8, [X0]
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move X23, 0x9F5000
	041 Move X23, [X23+2856]
	042 Move W19, W31
	043 Move X2, [X23]
	044 Move W1, W19
	045 Call InlinedArray`1<GCHandle>.get_Item, X0, X1
	046 Move [X31+8], X0
	047 Add X0, X31, 8
	048 Move X1, X31
	049 Call GCHandle.get_IsAllocated, X0
	050 Move TEMP, X0
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfNotEqual {63}
	054 Move X8, [X20]
	055 Move X2, [X23]
	056 Move W1, W19
	057 Move X0, [X8+184]
	058 Call InlinedArray`1<GCHandle>.get_Item, X0, X1
	059 Move [X31+8], X0
	060 Add X0, X31, 8
	061 Move X1, X31
	062 Call GCHandle.Free, X0
	063 Move X8, [X20]
	064 Add W19, W19, 1
	065 Move X0, [X8+184]
	066 Move W8, [X0]
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Move [X0+24], W31
	069 Move X1, [X22]
	070 Call 0x28F2458, X0
	071 Move X8, [X20]
	072 Move X1, [X21]
	073 Move X8, [X8+184]
	074 Add X0, X8, 104
	075 Call 0x28F2458, X0
	076 Move X20, [X31+48]
	077 Move X19, [X31+56]
	078 Move X22, [X31+32]
	079 Move X21, [X31+40]
	080 Move X30, [X31+16]
	081 Move X23, [X31+24]
	082 Add X31, X31, 64
	083 Return 

Method: System.Int32 FindAllEnabledActions(System.Collections.Generic.List`1<UnityEngine.InputSystem.InputAction> result)

Disassembly:
	0x03751DB4 LDRB W8, [X0 + 0x4]
	0x03751DB8 ANDS W31, W1, 0x1
	0x03751DBC MOVZ W9, 0x4
	0x03751DC0 CSEL W9, W9, W31, NE
	0x03751DC4 AND W8, W8, 0xFFFFFFFB
	0x03751DC8 ORR W8, W8, W9, 0x0
	0x03751DCC STRB W8, [X0 + 0x4]
	0x03751DD0 RET
	0x03751DD4 LDRB W8, [X0 + 0x4]
	0x03751DD8 ANDS W31, W1, 0x1
	0x03751DDC MOVZ W9, 0x8
	0x03751DE0 CSEL W9, W9, W31, NE
	0x03751DE4 AND W8, W8, 0xFFFFFFF7
	0x03751DE8 ORR W8, W8, W9, 0x0
	0x03751DEC STRB W8, [X0 + 0x4]
	0x03751DF0 RET
	0x03751DF4 LDRB W8, [X0 + 0x4]
	0x03751DF8 ANDS W31, W1, 0x1
	0x03751DFC MOVZ W9, 0x20
	0x03751E00 CSEL W9, W9, W31, NE
	0x03751E04 AND W8, W8, 0xFFFFFFDF
	0x03751E08 ORR W8, W8, W9, 0x0
	0x03751E0C STRB W8, [X0 + 0x4]
	0x03751E10 RET
	0x03751E14 LDRB W0, [X0 + 0x5]
	0x03751E18 RET
	0x03751E1C STRB W1, [X0 + 0x5]
	0x03751E20 RET
	0x03751E24 LDRB W0, [X0]
	0x03751E28 RET
	0x03751E2C LDRB W8, [X0]
	0x03751E30 CMP W8, 0x1
	0x03751E34 CSET W0, EQ
	0x03751E38 RET
	0x03751E3C LDRB W8, [X0]
	0x03751E40 CMP W8, 0x2
	0x03751E44 CSET W0, EQ
	0x03751E48 RET
	0x03751E4C LDRB W8, [X0]
	0x03751E50 CMP W8, 0x3
	0x03751E54 CSET W0, EQ
	0x03751E58 RET
	0x03751E5C LDRB W8, [X0]
	0x03751E60 CMP W8, 0x4
	0x03751E64 CSET W0, EQ
	0x03751E68 RET
	0x03751E6C LDR V0, [X0 + 0x8]
	0x03751E70 RET
	0x03751E74 STR D0, [X0 + 0x8]
	0x03751E78 RET
	0x03751E7C LDR V0, [X0 + 0x10]
	0x03751E80 RET
	0x03751E84 STR D0, [X0 + 0x10]
	0x03751E88 RET
	0x03751E8C LDR V0, [X0 + 0x1C]
	0x03751E90 RET
	0x03751E94 LDRB W8, [X0 + 0x1]
	0x03751E98 AND W0, W8, 0x1
	0x03751E9C RET
	0x03751EA0 LDRB W0, [X0 + 0x2]
	0x03751EA4 RET
	0x03751EA8 LDRH W0, [X0 + 0x18]
	0x03751EAC RET
	0x03751EB0 LDR W0, [X0 + 0x20]
	0x03751EB4 RET
	0x03751EB8 STR W1, [X0 + 0x20]
	0x03751EBC RET
	0x03751EC0 LDR W0, [X0 + 0x24]
	0x03751EC4 RET
	0x03751EC8 STR W1, [X0 + 0x24]
	0x03751ECC RET
	0x03751ED0 LDR W0, [X0 + 0x28]
	0x03751ED4 RET
	0x03751ED8 STR W1, [X0 + 0x28]
	0x03751EDC RET
	0x03751EE0 LDR W0, [X0 + 0x2C]
	0x03751EE4 RET
	0x03751EE8 STR W1, [X0 + 0x2C]
	0x03751EEC RET
	0x03751EF0 LDRB W8, [X0 + 0x1]
	0x03751EF4 ANDS W31, W1, 0x1
	0x03751EF8 MOVZ W9, 0x4
	0x03751EFC CSEL W9, W9, W31, NE
	0x03751F00 AND W8, W8, 0xFFFFFFFB
	0x03751F04 ORR W8, W8, W9, 0x0
	0x03751F08 STRB W8, [X0 + 0x1]
	0x03751F0C RET
	0x03751F10 LDRB W0, [X0 + 0x1]
	0x03751F14 RET
	0x03751F18 LDR X8, [X0]
	0x03751F1C CMP X8, 0x0
	0x03751F20 CSET W0, NE
	0x03751F24 RET
	0x03751F28 LDP W8, W9, [X0 + 0x8]
	0x03751F2C LDP W11, W10, [X0 + 0x10]
	0x03751F30 LDP W12, W13, [X0 + 0x18]
	0x03751F34 MOVZ W14, 0x22
	0x03751F38 ADD W8, W9, W8
	0x03751F3C MUL W10, W10, W14
	0x03751F40 ADD W14, W12, 0x1F
	0x03751F44 ADD W9, W12, W9
	0x03751F48 MOVZ W15, 0x30
	0x03751F4C ADD W9, W9, W13
	0x03751F50 ADD W13, W12, 0x3E
	0x03751F54 CMP W14, 0x0
	0x03751F58 ADD W8, W8, W11
	0x03751F5C CSEL W11, W13, W14, LT
	0x03751F60 MADD W8, W8, W15, W10
	0x03751F64 ADD W9, W9, W11, 0x5, ASR
	0x03751F68 ADD W8, W8, W12, 0x3, LSL
	0x03751F6C ADD W0, W8, W9, 0x2, LSL
	0x03751F70 RET
	0x03751F74 STP X30, X27, [X31 - 0x50]!
	0x03751F78 STP X26, X25, [X31 + 0x10]
	0x03751F7C STP X24, X23, [X31 + 0x20]
	0x03751F80 STP X22, X21, [X31 + 0x30]
	0x03751F84 STP X20, X19, [X31 + 0x40]
	0x03751F88 ADD W9, W4, 0x1F
	0x03751F8C ADD W10, W4, 0x3E
	0x03751F90 CMP W9, 0x0
	0x03751F94 ADD W11, W4, W2
	0x03751F98 CSEL W9, W10, W9, LT
	0x03751F9C MOVZ W10, 0x22
	0x03751FA0 ADD W8, W2, W1
	0x03751FA4 ADD W11, W11, W6
	0x03751FA8 MUL W10, W3, W10
	0x03751FAC ADD W9, W11, W9, 0x5, ASR
	0x03751FB0 MOVZ W11, 0x30
	0x03751FB4 ADD W8, W8, W5
	0x03751FB8 ADD W10, W10, W4, 0x3, LSL
	0x03751FBC MADD W8, W8, W11, W10
	0x03751FC0 ADD W8, W8, W9, 0x2, LSL
	0x03751FC4 SXTW X26, W8
	0x03751FC8 MOV W20, W3
	0x03751FCC MOV W21, W2
	0x03751FD0 MOV W25, W1
	0x03751FD4 MOV X19, X0
	0x03751FD8 STP W1, W2, [X0 + 0x8]
	0x03751FDC STP W5, W3, [X0 + 0x10]
	0x03751FE0 STP W4, W6, [X0 + 0x18]
	0x03751FE4 MOVZ W1, 0x8
	0x03751FE8 MOVZ W2, 0x4
	0x03751FEC MOV X0, X26
	0x03751FF0 MOV X3, X31
	0x03751FF4 MOV W22, W6
	0x03751FF8 MOV W23, W5
	0x03751FFC MOV W24, W4
	0x03752000 BL 0x3C00000
	0x03752004 MOV X1, X26
	0x03752008 MOV X2, X31
	0x0375200C MOV X27, X0
	0x03752010 BL 0x3C001B4
	0x03752014 ADD W8, W21, W21, 0x1, LSL
	0x03752018 ADD W9, W23, W23, 0x1, LSL
	0x0375201C UBFM W8, W8, 0x1C, 0x1B
	0x03752020 UBFM W9, W9, 0x1C, 0x1B
	0x03752024 ADD X8, X27, W8, SXTW
	0x03752028 UBFM W10, W20, 0x1B, 0x1A
	0x0375202C ADD W11, W25, W25, 0x1, LSL
	0x03752030 ADD X9, X8, W9, SXTW
	0x03752034 UBFM W11, W11, 0x1C, 0x1B
	0x03752038 STP X27, X9, [X19 + 0x20]
	0x0375203C ADD X9, X9, W10, SXTW
	0x03752040 UBFM W12, W24, 0x1E, 0x1D
	0x03752044 STR X9, [X19 + 0x78]
	0x03752048 ADD X9, X9, W11, SXTW
	0x0375204C UBFM W13, W22, 0x1E, 0x1D
	0x03752050 STP X8, X9, [X19 + 0x30]
	0x03752054 ADD X8, X9, W12, SXTW
	0x03752058 ADD X9, X8, W13, SXTW
	0x0375205C ADD X10, X9, W12, SXTW
	0x03752060 UBFM W14, W21, 0x1E, 0x1D

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X29
	003 Move [X31+40], X30
	004 Move [X31+48], X28
	005 Move [X31+56], X27
	006 Move [X31+64], X26
	007 Move [X31+72], X25
	008 Move [X31+80], X24
	009 Move [X31+88], X23
	010 Move [X31+96], X22
	011 Move [X31+104], X21
	012 Move [X31+112], X20
	013 Move [X31+120], X19
	014 Move X20, 0xC90000
	015 Move W8, [X20+3507]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {35}
	021 Move X0, 0x9F5000
	022 Move X0, [X0+2856]
	023 Call 0x1C17CF4
	024 Move X0, 0x9F5000
	025 Move X0, [X0+728]
	026 Call 0x1C17CF4
	027 Move X0, 0x9F5000
	028 Move X0, [X0+3240]
	029 Call 0x1C17CF4
	030 Move X0, 0x9F5000
	031 Move X0, [X0+440]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X20+3507], W8
	035 Move X8, 0x9F5000
	036 Move X8, [X8+728]
	037 Move [X31+24], X31
	038 Move X8, [X8]
	039 Move X9, [X8+184]
	040 Move W9, [X9]
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move [X31+12], W9
	043 Move W20, W31
	044 Move W21, W31
	045 Move W27, 48
	046 Move X0, [X8+184]
	047 Move X8, 0x9F5000
	048 Move X8, [X8+2856]
	049 Move W1, W21
	050 Move X2, [X8]
	051 Call InlinedArray`1<GCHandle>.get_Item, X0, X1
	052 Move [X31+24], X0
	053 Add X0, X31, 24
	054 Move X1, X31
	055 Call GCHandle.get_IsAllocated, X0
	056 Move [X31+16], W21
	057 Move TEMP, X0
	058 And TEMP, TEMP, 1
	059 Compare TEMP, 1
	060 JumpIfNotEqual {162}
	061 Add X0, X31, 24
	062 Move X1, X31
	063 Call GCHandle.get_Target, X0
	064 Compare X0, 0
	065 JumpIfEqual {162}
	066 Move X9, 0x9F5000
	067 Move X8, [X0]
	068 Move X9, [X9+728]
	069 Move X22, X0
	070 Move W10, [X8+304]
	071 Move X1, [X9]
	072 Move W9, [X1+304]
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move X8, [X8+200]
	075 Add X8, X8, X9
	076 NotImplemented "Instruction LDUR not yet implemented."
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Move W8, [X22+72]
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Move [X31+20], W8
	081 Move X28, [X22+16]
	082 Compare X28, 0
	083 JumpIfEqual {185}
	084 Move W26, W31
	085 Move W8, [X28+24]
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Add X8, X28, W26
	088 Move X24, [X8+32]
	089 Compare X24, 0
	090 JumpIfEqual {185}
	091 Move X0, X24
	092 Move X1, X31
	093 Call InputActionMap.get_enabled, X0
	094 Move TEMP, X0
	095 And TEMP, TEMP, 1
	096 Compare TEMP, 1
	097 JumpIfNotEqual {159}
	098 Move X23, [X24+40]
	099 Compare X23, 0
	100 JumpIfEqual {185}
	101 Move X25, [X23+24]
	102 Move W8, [X24+72]
	103 NotImplemented "Instruction CMP not yet implemented."
	104 Compare X19, 0
	105 JumpIfEqual {185}
	106 Move X8, 0x9F5000
	107 Move X8, [X8+3240]
	108 Move X0, X19
	109 Move X1, X23
	110 Move X2, [X8]
	111 Call List`1<Object>.AddRange, X0, X1
	112 Add W20, W20, W25
	113 Move X8, [X22+184]
	114 NotImplemented "Instruction LDRSW not yet implemented."
	115 NotImplemented "Instruction NOP not yet implemented."
	116 NotImplemented "Instruction MADD not yet implemented."
	117 Compare X8, 0
	118 JumpIfEqual {185}
	119 NotImplemented "Instruction CMP not yet implemented."
	120 Move W21, [X8]
	121 Move X24, X31
	122 And X29, X25, 0
	123 Add X25, X23, 32
	124 Move X8, [X22+96]
	125 Add W9, W21, W24
	126 NotImplemented "Instruction SMADDL not yet implemented."
	127 Move W8, [X9]
	128 Compare W8, 0
	129 JumpIfEqual {157}
	130 Move W8, [X23+24]
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Compare X19, 0
	133 JumpIfEqual {185}
	134 Move X9, 0x9F5000
	135 Move X1, [X25]
	136 Move W10, [X19+28]
	137 Move X8, [X19+16]
	138 Move X9, [X9+440]
	139 Add W10, W10, 1
	140 Move X9, [X9]
	141 Move [X19+28], W10
	142 Compare X8, 0
	143 JumpIfEqual {185}
	144 NotImplemented "Instruction LDRSW not yet implemented."
	145 Move W11, [X8+24]
	146 NotImplemented "Instruction CMP not yet implemented."
	147 Add W9, W10, 1
	148 Add X8, X8, X10
	149 Move [X19+24], W9
	150 Move [X8+32], X1
	151 Move X8, [X9+32]
	152 Move X0, X19
	153 Move X8, [X8+192]
	154 Move X2, [X8+112]
	155 Call List`1<Object>.AddWithResize, X0, X1
	156 Add W20, W20, 1
	157 Add X24, X24, 1
	158 NotImplemented "Instruction CMP not yet implemented."
	159 Move W8, [X31+20]
	160 Add W26, W26, 1
	161 NotImplemented "Instruction CMP not yet implemented."
	162 Move W8, [X31+12]
	163 Move W21, [X31+16]
	164 Add W21, W21, 1
	165 NotImplemented "Instruction CMP not yet implemented."
	166 Move X8, 0x9F4000
	167 Move X8, [X8+728]
	168 Move X8, [X8]
	169 Move W20, W31
	170 Move W0, W20
	171 Move X20, [X31+112]
	172 Move X19, [X31+120]
	173 Move X22, [X31+96]
	174 Move X21, [X31+104]
	175 Move X24, [X31+80]
	176 Move X23, [X31+88]
	177 Move X26, [X31+64]
	178 Move X25, [X31+72]
	179 Move X28, [X31+48]
	180 Move X27, [X31+56]
	181 Move X29, [X31+32]
	182 Move X30, [X31+40]
	183 Add X31, X31, 128
	184 Return X0
	185 Call 0x1C17F20
	186 Call 0x1C17F28
	187 Move X0, X22
	188 Call 0x1C181E0

Method: System.Void OnDeviceChange(UnityEngine.InputSystem.InputDevice device, UnityEngine.InputSystem.InputDeviceChange change)

Disassembly:
	0x03752064 STP X9, X10, [X19 + 0x60]
	0x03752068 ADD X9, X10, W12, SXTW
	0x0375206C UBFM W15, W20, 0x1F, 0x1E
	0x03752070 ADD X10, X9, W14, SXTW
	0x03752074 STP X9, X10, [X19 + 0x50]
	0x03752078 ADD X9, X10, W15, SXTW
	0x0375207C STR X27, [X19]
	0x03752080 STP X8, X9, [X19 + 0x40]
	0x03752084 LDP X20, X19, [X31 + 0x40]
	0x03752088 LDP X22, X21, [X31 + 0x30]
	0x0375208C LDP X24, X23, [X31 + 0x20]
	0x03752090 LDP X26, X25, [X31 + 0x10]
	0x03752094 LDP X30, X27, [X31], #0x50
	0x03752098 RET
	0x0375209C STR X30, [X31 - 0x20]!
	0x037520A0 STP X20, X19, [X31 + 0x10]
	0x037520A4 LDR W8, [X1 + 0x8]
	0x037520A8 MOV X19, X1
	0x037520AC MOV X20, X0
	0x037520B0 LDR X0, [X0 + 0x78]
	0x037520B4 LDR X1, [X1 + 0x78]
	0x037520B8 ADD W8, W8, W8, 0x1, LSL
	0x037520BC UBFM W8, W8, 0x1C, 0x1B
	0x037520C0 SXTW X2, W8
	0x037520C4 MOV X3, X31
	0x037520C8 BL 0x3BFF954
	0x037520CC LDR W8, [X19 + 0xC]
	0x037520D0 LDR X0, [X20 + 0x20]
	0x037520D4 LDR X1, [X19 + 0x20]
	0x037520D8 MOV X3, X31
	0x037520DC ADD W8, W8, W8, 0x1, LSL
	0x037520E0 UBFM W8, W8, 0x1C, 0x1B
	0x037520E4 SXTW X2, W8
	0x037520E8 BL 0x3BFF954
	0x037520EC LDR W8, [X19 + 0x14]
	0x037520F0 LDR X0, [X20 + 0x28]
	0x037520F4 LDR X1, [X19 + 0x28]
	0x037520F8 MOV X3, X31
	0x037520FC UBFM W8, W8, 0x1B, 0x1A
	0x03752100 SXTW X2, W8
	0x03752104 BL 0x3BFF954
	0x03752108 LDR W8, [X19 + 0x10]
	0x0375210C LDR X0, [X20 + 0x30]
	0x03752110 LDR X1, [X19 + 0x30]
	0x03752114 MOV X3, X31
	0x03752118 ADD W8, W8, W8, 0x1, LSL
	0x0375211C UBFM W8, W8, 0x1C, 0x1B
	0x03752120 SXTW X2, W8
	0x03752124 BL 0x3BFF954
	0x03752128 LDR W8, [X19 + 0x18]
	0x0375212C LDR X0, [X20 + 0x38]
	0x03752130 LDR X1, [X19 + 0x38]
	0x03752134 MOV X3, X31
	0x03752138 UBFM W8, W8, 0x1E, 0x1D
	0x0375213C SXTW X2, W8
	0x03752140 BL 0x3BFF954
	0x03752144 LDR W8, [X19 + 0x1C]
	0x03752148 LDR X0, [X20 + 0x40]
	0x0375214C LDR X1, [X19 + 0x40]
	0x03752150 MOV X3, X31
	0x03752154 UBFM W8, W8, 0x1E, 0x1D
	0x03752158 SXTW X2, W8
	0x0375215C BL 0x3BFF954
	0x03752160 LDR W8, [X19 + 0x18]
	0x03752164 LDR X0, [X20 + 0x60]
	0x03752168 LDR X1, [X19 + 0x60]
	0x0375216C MOV X3, X31
	0x03752170 UBFM W8, W8, 0x1E, 0x1D
	0x03752174 SXTW X2, W8
	0x03752178 BL 0x3BFF954
	0x0375217C LDR W8, [X19 + 0x18]
	0x03752180 LDR X0, [X20 + 0x68]
	0x03752184 LDR X1, [X19 + 0x68]
	0x03752188 MOV X3, X31
	0x0375218C UBFM W8, W8, 0x1E, 0x1D
	0x03752190 SXTW X2, W8
	0x03752194 BL 0x3BFF954
	0x03752198 LDR W8, [X19 + 0xC]
	0x0375219C LDR X0, [X20 + 0x50]
	0x037521A0 LDR X1, [X19 + 0x50]
	0x037521A4 MOV X3, X31
	0x037521A8 UBFM W8, W8, 0x1E, 0x1D
	0x037521AC SXTW X2, W8
	0x037521B0 BL 0x3BFF954
	0x037521B4 LDR W8, [X19 + 0x14]
	0x037521B8 LDR X0, [X20 + 0x58]
	0x037521BC LDR X1, [X19 + 0x58]
	0x037521C0 MOV X3, X31
	0x037521C4 UBFM W8, W8, 0x1F, 0x1E
	0x037521C8 SXTW X2, W8
	0x037521CC BL 0x3BFF954
	0x037521D0 LDR W8, [X19 + 0x18]
	0x037521D4 LDR X0, [X20 + 0x48]
	0x037521D8 LDR X1, [X19 + 0x48]
	0x037521DC LDP X20, X19, [X31 + 0x10]
	0x037521E0 ADD W9, W8, 0x1F
	0x037521E4 ADD W8, W8, 0x3E
	0x037521E8 CMP W9, 0x0
	0x037521EC CSEL W8, W8, W9, LT
	0x037521F0 SBFM W8, W8, 0x5, 0x1F
	0x037521F4 UBFM W8, W8, 0x1E, 0x1D
	0x037521F8 SXTW X2, W8
	0x037521FC MOV X3, X31
	0x03752200 LDR X30, [X31], #0x20
	0x03752204 B 0x3BFF954
	0x03752208 STR X30, [X31 - 0x20]!
	0x0375220C STP X20, X19, [X31 + 0x10]
	0x03752210 ADRP X19, 0xC8E000
	0x03752214 ADRP X20, 0x9F3000
	0x03752218 LDRB W8, [X19 + 0xDB8]
	0x0375221C LDR X20, [X20 + 0xC58]
	0x03752220 TBNZ X8, 0x0, 0x3752238
	0x03752224 ADRP X0, 0x9F3000
	0x03752228 LDR X0, [X0 + 0xC58]
	0x0375222C BL 0x1C16CF4
	0x03752230 MOVZ W8, 0x1
	0x03752234 STRB W8, [X19 + 0xDB8]
	0x03752238 LDR X0, [X20]
	0x0375223C BL 0x1C16F10
	0x03752240 MOV X1, X31
	0x03752244 MOV X19, X0
	0x03752248 BL 0x33BDD8C
	0x0375224C LDR X8, [X20]
	0x03752250 LDR X8, [X8 + 0xB8]
	0x03752254 STR X19, [X8]
	0x03752258 LDP X20, X19, [X31 + 0x10]
	0x0375225C LDR X30, [X31], #0x20
	0x03752260 RET
	0x03752264 MOV X1, X31
	0x03752268 B 0x33BDD8C
	0x0375226C SUB X31, X31, 0xE0
	0x03752270 STP X30, X21, [X31 + 0xC0]
	0x03752274 STP X20, X19, [X31 + 0xD0]
	0x03752278 ADRP X21, 0xC8E000
	0x0375227C ADRP X20, 0x9F3000
	0x03752280 LDRB W8, [X21 + 0xDB9]
	0x03752284 LDR X20, [X20 + 0x2D8]
	0x03752288 MOV X19, X1
	0x0375228C TBNZ X8, 0x0, 0x37522A4
	0x03752290 ADRP X0, 0x9F3000
	0x03752294 LDR X0, [X0 + 0x2D8]
	0x03752298 BL 0x1C16CF4
	0x0375229C MOVZ W8, 0x1
	0x037522A0 STRB W8, [X21 + 0xDB9]
	0x037522A4 ADD X0, X31, 0x8
	0x037522A8 MOVZ W2, 0xB8
	0x037522AC MOV X1, X19
	0x037522B0 BL 0x3EB1AC0
	0x037522B4 LDR X8, [X20]
	0x037522B8 ADD X1, X31, 0x8
	0x037522BC MOVZ W2, 0xB8
	0x037522C0 LDR X0, [X8 + 0xB8]
	0x037522C4 BL 0x3EB1AC0
	0x037522C8 LDP X20, X19, [X31 + 0xD0]
	0x037522CC LDP X30, X21, [X31 + 0xC0]
	0x037522D0 ADD X31, X31, 0xE0
	0x037522D4 RET
	0x037522D8 B 0x3750B20
	0x037522DC LDR X0, [X0]
	0x037522E0 RET
	0x037522E4 STR X1, [X0]
	0x037522E8 RET
	0x037522EC SUB X31, X31, 0x20
	0x037522F0 STP X30, X19, [X31 + 0x10]
	0x037522F4 MOV X19, X0
	0x037522F8 LDR X0, [X0 + 0x8]
	0x037522FC MOV X1, X31
	0x03752300 BL 0x32277A8
	0x03752304 TBZ X0, 0x0, 0x3752310
	0x03752308 STP X31, X31, [X31]
	0x0375230C B 0x3752324
	0x03752310 LDR X1, [X19 + 0x8]
	0x03752314 ADD X0, X31, 0x0
	0x03752318 MOV X2, X31
	0x0375231C STP X31, X31, [X31]
	0x03752320 BL 0x3376AD0
	0x03752324 LDP X0, X1, [X31]
	0x03752328 LDP X30, X19, [X31 + 0x10]
	0x0375232C ADD X31, X31, 0x20
	0x03752330 RET
	0x03752334 LDR X0, [X0 + 0x10]
	0x03752338 RET
	0x0375233C STR X1, [X0 + 0x10]
	0x03752340 RET
	0x03752344 LDR X0, [X0 + 0x40]
	0x03752348 RET
	0x0375234C STR X1, [X0 + 0x40]
	0x03752350 RET
	0x03752354 LDR X0, [X0 + 0x18]
	0x03752358 RET
	0x0375235C STR X1, [X0 + 0x18]
	0x03752360 RET
	0x03752364 LDR X0, [X0 + 0x48]
	0x03752368 RET
	0x0375236C STR X1, [X0 + 0x48]
	0x03752370 RET
	0x03752374 LDR X0, [X0 + 0x20]
	0x03752378 RET

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X21, 0xC8F000
	015 Move X24, 0x9F4000
	016 Move W8, [X21+3508]
	017 Move X24, [X24+728]
	018 Move W19, W1
	019 Move X20, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {35}
	024 Move X0, 0x9F4000
	025 Move X0, [X0+3232]
	026 Call 0x1C17CF4
	027 Move X0, 0x9F4000
	028 Move X0, [X0+2856]
	029 Call 0x1C17CF4
	030 Move X0, 0x9F4000
	031 Move X0, [X0+728]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X21+3508], W8
	035 Move X8, [X24]
	036 Move [X31], X31
	037 Move [X31+8], X31
	038 Move X0, [X8+184]
	039 Move W8, [X0]
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move X26, 0x9F4000
	042 Move X27, 0x9F4000
	043 Move X26, [X26+2856]
	044 Move X27, [X27+3232]
	045 Move W21, W31
	046 Move X25, X31
	047 Move W28, W19
	048 Move X2, [X26]
	049 Move W1, W21
	050 Call InlinedArray`1<GCHandle>.get_Item, X0, X1
	051 Move [X31+8], X0
	052 Add X0, X31, 8
	053 Move X1, X31
	054 Call GCHandle.get_IsAllocated, X0
	055 Move TEMP, X0
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfNotEqual {104}
	059 Add X0, X31, 8
	060 Move X1, X31
	061 Call GCHandle.get_Target, X0
	062 Compare X0, 0
	063 JumpIfEqual {104}
	064 Add X0, X31, 8
	065 Move X1, X31
	066 Call GCHandle.get_Target, X0
	067 Move X22, X0
	068 Compare X0, 0
	069 JumpIfEqual {79}
	070 Move X8, [X22]
	071 Move X1, [X24]
	072 Move W10, [X8+304]
	073 Move W9, [X1+304]
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move X8, [X8+200]
	076 Add X8, X8, X9
	077 NotImplemented "Instruction LDUR not yet implemented."
	078 NotImplemented "Instruction CMP not yet implemented."
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Move W23, 1
	081 Move X10, -45850624
	082 Add X10, X10, 2161
	083 NotImplemented "Instruction ADR not yet implemented."
	084 Move W9, [X10]
	085 Add X8, X8, X9
	086 CallNoReturn X8
	087 Compare X22, 0
	088 JumpIfEqual {231}
	089 Move X0, X22
	090 Move X1, X20
	091 Call InputActionState.IsUsingDevice, X0, X1
	092 Move TEMP, X0
	093 And TEMP, TEMP, 1
	094 Compare TEMP, 1
	095 JumpIfEqual {103}
	096 Move X0, X22
	097 Move X1, X20
	098 Call InputActionState.CanUseDevice, X0, X1
	099 Move TEMP, X0
	100 And TEMP, TEMP, 1
	101 Compare TEMP, 1
	102 JumpIfNotEqual {126}
	103 Move W23, 1
	104 Add X0, X31, 8
	105 Move X1, X31
	106 Call GCHandle.get_IsAllocated, X0
	107 Move TEMP, X0
	108 And TEMP, TEMP, 1
	109 Compare TEMP, 1
	110 JumpIfNotEqual {120}
	111 Move X8, [X24]
	112 Move X2, [X26]
	113 Move W1, W21
	114 Move X0, [X8+184]
	115 Call InlinedArray`1<GCHandle>.get_Item, X0, X1
	116 Move [X31], X0
	117 Add X0, X31, 0
	118 Move X1, X31
	119 Call GCHandle.Free, X0
	120 Move X8, [X24]
	121 Move X2, [X27]
	122 Move W1, W21
	123 Move X0, [X8+184]
	124 Call InlinedArray`1<GCHandle>.RemoveAtWithCapacity, X0, X1
	125 Subtract W21, W21, 1
	126 Move X8, [X24]
	127 Add W21, W21, 1
	128 Move X0, [X8+184]
	129 Move W8, [X0]
	130 NotImplemented "Instruction CMP not yet implemented."
	131 Compare X22, 0
	132 JumpIfEqual {231}
	133 Move X0, X22
	134 Move X1, X20
	135 Call InputActionState.IsUsingDevice, X0, X1
	136 Move TEMP, X0
	137 And TEMP, TEMP, 1
	138 Compare TEMP, 1
	139 JumpIfNotEqual {126}
	140 Move X0, X22
	141 Move X1, X20
	142 Call InputActionState.ResetActionStatesDrivenBy, X0, X1
	143 Compare X22, 0
	144 JumpIfEqual {231}
	145 Move X0, X22
	146 Move X1, X20
	147 Call InputActionState.CanUseDevice, X0, X1
	148 Move TEMP, X0
	149 And TEMP, TEMP, 1
	150 Compare TEMP, 1
	151 JumpIfNotEqual {126}
	152 Compare X22, 0
	153 JumpIfEqual {231}
	154 Move X0, X22
	155 Move X1, X20
	156 Call InputActionState.IsUsingDevice, X0, X1
	157 Move TEMP, X0
	158 And TEMP, TEMP, 1
	159 Compare TEMP, 1
	160 JumpIfNotEqual {126}
	161 Move W8, [X22+72]
	162 NotImplemented "Instruction CMP not yet implemented."
	163 Move X23, X31
	164 Move X8, [X22+16]
	165 Compare X8, 0
	166 JumpIfEqual {231}
	167 Move W9, [X8+24]
	168 NotImplemented "Instruction CMP not yet implemented."
	169 Add X8, X8, X23
	170 Move X29, [X8+32]
	171 Compare X29, 0
	172 JumpIfEqual {231}
	173 Add X0, X29, 216
	174 Move X1, X20
	175 Move X2, X31
	176 Call DeviceArray.Remove, X0, X1
	177 Move X8, [X29+32]
	178 NotImplemented "Instruction CMP not yet implemented."
	179 NotImplemented "Instruction CSEL not yet implemented."
	180 Compare X8, 0
	181 JumpIfEqual {188}
	182 Compare X25, 0
	183 JumpIfEqual {231}
	184 Add X0, X25, 160
	185 Move X1, X20
	186 Move X2, X31
	187 Call DeviceArray.Remove, X0, X1
	188 Move W8, [X22+72]
	189 Add X23, X23, 1
	190 NotImplemented "Instruction CMP not yet implemented."
	191 Move W23, W31
	192 Compare X22, 0
	193 JumpIfNotEqual {195}
	194 Move W23, W31
	195 Move W8, [X22+72]
	196 NotImplemented "Instruction CMP not yet implemented."
	197 Move W29, W31
	198 Move X8, [X22+16]
	199 Compare X8, 0
	200 JumpIfEqual {231}
	201 Move W9, [X8+24]
	202 NotImplemented "Instruction CMP not yet implemented."
	203 Add X8, X8, W29
	204 Move X0, [X8+32]
	205 Compare X0, 0
	206 JumpIfEqual {231}
	207 Move W1, W23
	208 Move X2, X31
	209 Call InputActionMap.LazyResolveBindings, X0, X1
	210 Move TEMP, X0
	211 And TEMP, TEMP, 1
	212 Compare TEMP, 1
	213 JumpIfEqual {126}
	214 Move W8, [X22+72]
	215 Add W29, W29, 1
	216 NotImplemented "Instruction CMP not yet implemented."
	217 Move X20, [X31+96]
	218 Move X19, [X31+104]
	219 Move X22, [X31+80]
	220 Move X21, [X31+88]
	221 Move X24, [X31+64]
	222 Move X23, [X31+72]
	223 Move X26, [X31+48]
	224 Move X25, [X31+56]
	225 Move X28, [X31+32]
	226 Move X27, [X31+40]
	227 Move X29, [X31+16]
	228 Move X30, [X31+24]
	229 Add X31, X31, 112
	230 Return 
	231 Call 0x1C17F20
	232 Call 0x1C17F28
	233 Move X0, X22
	234 Call 0x1C181E0

Method: System.Void DeferredResolutionOfBindings()

Disassembly:
	0x0375237C STR X1, [X0 + 0x20]
	0x03752380 RET
	0x03752384 LDR X0, [X0 + 0x50]
	0x03752388 RET
	0x0375238C STR X1, [X0 + 0x50]
	0x03752390 RET
	0x03752394 LDR X0, [X0 + 0x28]
	0x03752398 RET
	0x0375239C STR X1, [X0 + 0x28]
	0x037523A0 RET
	0x037523A4 LDR X0, [X0 + 0x30]
	0x037523A8 RET
	0x037523AC STR X1, [X0 + 0x30]
	0x037523B0 RET
	0x037523B4 LDR X8, [X0 + 0x40]
	0x037523B8 CBNZ X8, 0x37523C4
	0x037523BC LDR X8, [X0 + 0x50]
	0x037523C0 CBZ X8, 0x37523CC
	0x037523C4 MOVZ W0, 0x1
	0x037523C8 RET
	0x037523CC LDR X8, [X0 + 0x48]
	0x037523D0 CMP X8, 0x0
	0x037523D4 CSET W0, NE
	0x037523D8 RET
	0x037523DC STP X3, X2, [X0 + 0x28]
	0x037523E0 STP X5, X4, [X0 + 0x18]
	0x037523E4 STP X31, X1, [X0 + 0x8]
	0x037523E8 STR X6, [X0]
	0x037523EC STR W31, [X0 + 0x38]
	0x037523F0 STP X31, X31, [X0 + 0x48]
	0x037523F4 STR X31, [X0 + 0x40]
	0x037523F8 RET
	0x037523FC SUB X31, X31, 0x30
	0x03752400 STR X30, [X31 + 0x20]
	0x03752404 LDRB W9, [X0 + 0x38]
	0x03752408 TBNZ X9, 0x2, 0x3752414
	0x0375240C MOV X0, X31
	0x03752410 B 0x3752434
	0x03752414 MOV X8, X0
	0x03752418 LDR X0, [X0 + 0x40]
	0x0375241C CBNZ X0, 0x3752424
	0x03752420 LDR X0, [X8 + 0x10]
	0x03752424 ADD X8, X31, 0x8
	0x03752428 MOV X1, X31
	0x0375242C BL 0x37638C0
	0x03752430 LDR X0, [X31 + 0x8]
	0x03752434 LDR X30, [X31 + 0x20]
	0x03752438 ADD X31, X31, 0x30
	0x0375243C RET
	0x03752440 STP X31, X31, [X0 + 0x40]
	0x03752444 STR X31, [X0 + 0x50]
	0x03752448 RET
	0x0375244C MOVI V0.2D, 0x0
	0x03752450 STP X31, X0, [X8 + 0x20]
	0x03752454 STP V0, V0, [X8]
	0x03752458 STP V0, V0, [X8 + 0x30]
	0x0375245C STR X31, [X8 + 0x50]
	0x03752460 RET
	0x03752464 SUB X31, X31, 0xA0
	0x03752468 STP X30, X25, [X31 + 0x60]
	0x0375246C STP X24, X23, [X31 + 0x70]
	0x03752470 STP X22, X21, [X31 + 0x80]
	0x03752474 STP X20, X19, [X31 + 0x90]
	0x03752478 ADRP X21, 0xC8E000
	0x0375247C ADRP X24, 0x9F3000
	0x03752480 MOV X19, X8
	0x03752484 LDRB W8, [X21 + 0xDBA]
	0x03752488 LDR X24, [X24 + 0xD40]
	0x0375248C MOV X20, X0
	0x03752490 TBNZ X8, 0x0, 0x37524D8
	0x03752494 ADRP X0, 0x9A2000
	0x03752498 LDR X0, [X0 + 0xCA0]
	0x0375249C BL 0x1C16CF4
	0x037524A0 ADRP X0, 0x9A2000
	0x037524A4 LDR X0, [X0 + 0xBF8]
	0x037524A8 BL 0x1C16CF4
	0x037524AC ADRP X0, 0x9F3000
	0x037524B0 LDR X0, [X0 + 0xD48]
	0x037524B4 BL 0x1C16CF4
	0x037524B8 ADRP X0, 0x9F3000
	0x037524BC LDR X0, [X0 + 0xD40]
	0x037524C0 BL 0x1C16CF4
	0x037524C4 ADRP X0, 0x9AA000
	0x037524C8 LDR X0, [X0 + 0x848]
	0x037524CC BL 0x1C16CF4
	0x037524D0 MOVZ W8, 0x1
	0x037524D4 STRB W8, [X21 + 0xDBA]
	0x037524D8 LDR X0, [X24]
	0x037524DC MOVI V0.2D, 0x0
	0x037524E0 STR X31, [X31 + 0x50]
	0x037524E4 STP V0, V0, [X31 + 0x30]
	0x037524E8 STP V0, V0, [X31 + 0x10]
	0x037524EC STR V0, [X31]
	0x037524F0 ADRP X21, 0x9AA000
	0x037524F4 LDR W8, [X0 + 0xE0]
	0x037524F8 LDR X21, [X21 + 0x848]
	0x037524FC CBNZ W8, 0x3752508
	0x03752500 BL 0x1C16DFC
	0x03752504 LDR X0, [X24]
	0x03752508 LDR X8, [X0 + 0xB8]
	0x0375250C ADRP X25, 0x9A2000
	0x03752510 LDR X21, [X21]
	0x03752514 LDR X22, [X8 + 0x8]
	0x03752518 LDR X25, [X25 + 0xCA0]
	0x0375251C CBNZ X22, 0x3752570
	0x03752520 LDR W8, [X0 + 0xE0]
	0x03752524 CBNZ W8, 0x3752530
	0x03752528 BL 0x1C16DFC
	0x0375252C LDR X0, [X24]
	0x03752530 ADRP X9, 0x9A2000
	0x03752534 LDR X8, [X0 + 0xB8]
	0x03752538 LDR X9, [X9 + 0xBF8]
	0x0375253C LDR X23, [X8]
	0x03752540 LDR X0, [X9]
	0x03752544 BL 0x1C16F10
	0x03752548 ADRP X8, 0x9F3000
	0x0375254C LDR X8, [X8 + 0xD48]
	0x03752550 MOV X1, X23
	0x03752554 MOV X3, X31
	0x03752558 MOV X22, X0
	0x0375255C LDR X2, [X8]
	0x03752560 BL 0x2D2F428
	0x03752564 LDR X8, [X24]
	0x03752568 LDR X8, [X8 + 0xB8]
	0x0375256C STR X22, [X8 + 0x8]
	0x03752570 LDR X2, [X25]
	0x03752574 MOV X0, X20
	0x03752578 MOV X1, X22
	0x0375257C BL 0x21DA490
	0x03752580 MOV X1, X0
	0x03752584 MOV X0, X21
	0x03752588 MOV X2, X31
	0x0375258C BL 0x32280D8
	0x03752590 STR X0, [X31 + 0x28]
	0x03752594 ADD X1, X31, 0x0
	0x03752598 MOVZ W2, 0x58
	0x0375259C MOV X0, X19
	0x037525A0 BL 0x3EB1AC0
	0x037525A4 LDP X20, X19, [X31 + 0x90]
	0x037525A8 LDP X22, X21, [X31 + 0x80]
	0x037525AC LDP X24, X23, [X31 + 0x70]
	0x037525B0 LDP X30, X25, [X31 + 0x60]
	0x037525B4 ADD X31, X31, 0xA0
	0x037525B8 RET
	0x037525BC MOV X8, X0
	0x037525C0 LDR X0, [X0 + 0x48]
	0x037525C4 CBZ X0, 0x37525CC
	0x037525C8 RET
	0x037525CC LDR X0, [X8 + 0x18]
	0x037525D0 RET
	0x037525D4 MOV X8, X0
	0x037525D8 LDR X0, [X0 + 0x50]
	0x037525DC CBZ X0, 0x37525E4
	0x037525E0 RET
	0x037525E4 LDR X0, [X8 + 0x20]
	0x037525E8 RET
	0x037525EC STP X30, X19, [X31 - 0x10]!
	0x037525F0 MOV X19, X0
	0x037525F4 LDR X0, [X0 + 0x40]
	0x037525F8 CBNZ X0, 0x3752600
	0x037525FC LDR X0, [X19 + 0x10]
	0x03752600 MOV X1, X31
	0x03752604 BL 0x32277A8
	0x03752608 TBZ X0, 0x0, 0x375262C
	0x0375260C LDR X0, [X19 + 0x30]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X19, 0xC8F000
	011 Move X21, 0x9F3000
	012 Move X22, 0x9F4000
	013 Move W8, [X19+3509]
	014 Move X21, [X21+3944]
	015 Move X22, [X22+728]
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {34}
	020 Move X0, 0x9F4000
	021 Move X0, [X0+3232]
	022 Call 0x1C17CF4
	023 Move X0, 0x9F4000
	024 Move X0, [X0+2856]
	025 Call 0x1C17CF4
	026 Move X0, 0x9F3000
	027 Move X0, [X0+3944]
	028 Call 0x1C17CF4
	029 Move X0, 0x9F4000
	030 Move X0, [X0+728]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X19+3509], W8
	034 Move X8, [X21]
	035 Move [X31], X31
	036 Move [X31+8], X31
	037 Move X8, [X8+184]
	038 Move W9, [X8]
	039 Add W9, W9, 1
	040 Move [X8], W9
	041 Move X8, [X22]
	042 Move X0, [X8+184]
	043 Move W8, [X0]
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move X23, 0x9F4000
	046 Move X24, 0x9F4000
	047 Move X23, [X23+2856]
	048 Move X24, [X24+3232]
	049 Move W19, W31
	050 Move X2, [X23]
	051 Move W1, W19
	052 Call InlinedArray`1<GCHandle>.get_Item, X0, X1
	053 Move [X31+8], X0
	054 Add X0, X31, 8
	055 Move X1, X31
	056 Call GCHandle.get_IsAllocated, X0
	057 Move TEMP, X0
	058 And TEMP, TEMP, 1
	059 Compare TEMP, 1
	060 JumpIfNotEqual {98}
	061 Add X0, X31, 8
	062 Move X1, X31
	063 Call GCHandle.get_Target, X0
	064 Compare X0, 0
	065 JumpIfEqual {98}
	066 Add X0, X31, 8
	067 Move X1, X31
	068 Call GCHandle.get_Target, X0
	069 Move X20, X0
	070 Compare X0, 0
	071 JumpIfEqual {148}
	072 Move X8, [X20]
	073 Move X1, [X22]
	074 Move W10, [X8+304]
	075 Move W9, [X1+304]
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Move X8, [X8+200]
	078 Add X8, X8, X9
	079 NotImplemented "Instruction LDUR not yet implemented."
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Move W8, [X20+72]
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Move W25, W31
	084 Move X8, [X20+16]
	085 Compare X8, 0
	086 JumpIfEqual {145}
	087 Move W9, [X8+24]
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Add X8, X8, W25
	090 Move X0, [X8+32]
	091 Compare X0, 0
	092 JumpIfEqual {144}
	093 Move X1, X31
	094 Call InputActionMap.ResolveBindingsIfNecessary, X0
	095 Move W8, [X20+72]
	096 Add W25, W25, 1
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Add X0, X31, 8
	099 Move X1, X31
	100 Call GCHandle.get_IsAllocated, X0
	101 Move TEMP, X0
	102 And TEMP, TEMP, 1
	103 Compare TEMP, 1
	104 JumpIfNotEqual {114}
	105 Move X8, [X22]
	106 Move X2, [X23]
	107 Move X0, [X8+184]
	108 Move W1, W19
	109 Call InlinedArray`1<GCHandle>.get_Item, X0, X1
	110 Move [X31], X0
	111 Add X0, X31, 0
	112 Move X1, X31
	113 Call GCHandle.Free, X0
	114 Move X8, [X22]
	115 Move X2, [X24]
	116 Move X0, [X8+184]
	117 Move W1, W19
	118 Call InlinedArray`1<GCHandle>.RemoveAtWithCapacity, X0, X1
	119 Subtract W19, W19, 1
	120 Move X8, [X22]
	121 Add W19, W19, 1
	122 Move X0, [X8+184]
	123 Move W8, [X0]
	124 NotImplemented "Instruction CMP not yet implemented."
	125 Move X19, X31
	126 Move X8, [X21]
	127 Move X8, [X8+184]
	128 Move W9, [X8]
	129 Subtract W9, W9, 1
	130 Move [X8], W9
	131 Compare X19, 0
	132 JumpIfNotEqual {149}
	133 Move X20, [X31+64]
	134 Move X19, [X31+72]
	135 Move X22, [X31+48]
	136 Move X21, [X31+56]
	137 Move X24, [X31+32]
	138 Move X23, [X31+40]
	139 Move X30, [X31+16]
	140 Move X25, [X31+24]
	141 Add X31, X31, 80
	142 Return 
	143 Call 0x1C17F28
	144 Call 0x1C17F20
	145 Call 0x1C17F20
	146 Move X0, X20
	147 Call 0x1C181E0
	148 Call 0x1C17F20
	149 Move X0, X19
	150 Call 0x1C17F18
	151 NotImplemented "Instruction CMP not yet implemented."
	152 Call 0x3EB2AD0
	153 Move X19, [X0]
	154 Call 0x3EB2AE0
	155 Move X19, X31
	156 Move X8, [X21]
	157 Move X8, [X8+184]
	158 Move W9, [X8]
	159 Subtract W9, W9, 1
	160 Move [X8], W9
	161 Compare X19, 0
	162 JumpIfNotEqual {164}
	163 Call 0x1D2D690
	164 Move X0, X19
	165 Call 0x1C17F18
	166 Call 0x1991590

Method: System.Void DisableAllActions()

Disassembly:
	0x03752610 MOV X1, X31
	0x03752614 BL 0x32277A8
	0x03752618 TBZ X0, 0x0, 0x375262C
	0x0375261C LDR X0, [X19 + 0x28]
	0x03752620 MOV X1, X31
	0x03752624 LDP X30, X19, [X31], #0x10
	0x03752628 B 0x32277A8
	0x0375262C MOV W0, W31
	0x03752630 LDP X30, X19, [X31], #0x10
	0x03752634 RET
	0x03752638 STR X30, [X31 - 0x20]!
	0x0375263C STP X20, X19, [X31 + 0x10]
	0x03752640 MOV X19, X0
	0x03752644 LDR X0, [X0 + 0x40]
	0x03752648 MOV X20, X1
	0x0375264C CBNZ X0, 0x3752654
	0x03752650 LDR X0, [X19 + 0x10]
	0x03752654 LDR X1, [X20 + 0x40]
	0x03752658 CBNZ X1, 0x3752660
	0x0375265C LDR X1, [X20 + 0x10]
	0x03752660 MOVZ W2, 0x3
	0x03752664 MOV X3, X31
	0x03752668 BL 0x3226C60
	0x0375266C TBZ X0, 0x0, 0x37526F4
	0x03752670 LDR X0, [X19 + 0x48]
	0x03752674 CBNZ X0, 0x375267C
	0x03752678 LDR X0, [X19 + 0x18]
	0x0375267C LDR X1, [X20 + 0x48]
	0x03752680 CBNZ X1, 0x3752688
	0x03752684 LDR X1, [X20 + 0x18]
	0x03752688 MOVZ W2, 0x3
	0x0375268C MOV X3, X31
	0x03752690 BL 0x3226C60
	0x03752694 TBZ X0, 0x0, 0x37526F4
	0x03752698 LDR X0, [X19 + 0x50]
	0x0375269C CBNZ X0, 0x37526A4
	0x037526A0 LDR X0, [X19 + 0x20]
	0x037526A4 LDR X1, [X20 + 0x50]
	0x037526A8 CBNZ X1, 0x37526B0
	0x037526AC LDR X1, [X20 + 0x20]
	0x037526B0 MOVZ W2, 0x3
	0x037526B4 MOV X3, X31
	0x037526B8 BL 0x3226C60
	0x037526BC TBZ X0, 0x0, 0x37526F4
	0x037526C0 LDR X0, [X19 + 0x28]
	0x037526C4 LDR X1, [X20 + 0x28]
	0x037526C8 MOVZ W2, 0x3
	0x037526CC MOV X3, X31
	0x037526D0 BL 0x3226C60
	0x037526D4 TBZ X0, 0x0, 0x37526F4
	0x037526D8 LDR X0, [X19 + 0x30]
	0x037526DC LDR X1, [X20 + 0x30]
	0x037526E0 LDP X20, X19, [X31 + 0x10]
	0x037526E4 MOVZ W2, 0x3
	0x037526E8 MOV X3, X31
	0x037526EC LDR X30, [X31], #0x20
	0x037526F0 B 0x3226C60
	0x037526F4 LDP X20, X19, [X31 + 0x10]
	0x037526F8 MOV W0, W31
	0x037526FC LDR X30, [X31], #0x20
	0x03752700 RET
	0x03752704 SUB X31, X31, 0x80
	0x03752708 STP X30, X21, [X31 + 0x60]
	0x0375270C STP X20, X19, [X31 + 0x70]
	0x03752710 ADRP X21, 0xC8E000
	0x03752714 LDRB W8, [X21 + 0xDBB]
	0x03752718 MOV X20, X1
	0x0375271C MOV X19, X0
	0x03752720 TBNZ X8, 0x0, 0x3752738
	0x03752724 ADRP X0, 0x9CC000
	0x03752728 LDR X0, [X0 + 0x4E0]
	0x0375272C BL 0x1C16CF4
	0x03752730 MOVZ W8, 0x1
	0x03752734 STRB W8, [X21 + 0xDBB]
	0x03752738 CBZ X20, 0x3752754
	0x0375273C ADRP X8, 0x9CC000
	0x03752740 LDR X8, [X8 + 0x4E0]
	0x03752744 LDR X9, [X20]
	0x03752748 LDR X8, [X8]
	0x0375274C CMP X9, X8
	0x03752750 B.EQ 0x375275C
	0x03752754 MOV W0, W31
	0x03752758 B 0x3752780
	0x0375275C MOV X0, X20

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X19, 0xC8F000
	009 Move X20, 0x9F4000
	010 Move W8, [X19+3510]
	011 Move X20, [X20+728]
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x9F4000
	017 Move X0, [X0+2856]
	018 Call 0x1C17CF4
	019 Move X0, 0x9F4000
	020 Move X0, [X0+728]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X19+3510], W8
	024 Move X8, [X20]
	025 Move [X31+8], X31
	026 Move X0, [X8+184]
	027 Move W8, [X0]
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move X21, 0x9F4000
	030 Move X21, [X21+2856]
	031 Move W19, W31
	032 Move X2, [X21]
	033 Move W1, W19
	034 Call InlinedArray`1<GCHandle>.get_Item, X0, X1
	035 Move [X31+8], X0
	036 Add X0, X31, 8
	037 Move X1, X31
	038 Call GCHandle.get_IsAllocated, X0
	039 Move TEMP, X0
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfNotEqual {78}
	043 Add X0, X31, 8
	044 Move X1, X31
	045 Call GCHandle.get_Target, X0
	046 Compare X0, 0
	047 JumpIfEqual {78}
	048 Add X0, X31, 8
	049 Move X1, X31
	050 Call GCHandle.get_Target, X0
	051 Compare X0, 0
	052 JumpIfEqual {91}
	053 Move X8, [X0]
	054 Move X1, [X20]
	055 Move W10, [X8+304]
	056 Move W9, [X1+304]
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move X8, [X8+200]
	059 Add X8, X8, X9
	060 NotImplemented "Instruction LDUR not yet implemented."
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move W22, [X0+72]
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move X23, [X0+16]
	065 Compare X23, 0
	066 JumpIfEqual {91}
	067 Move W24, W31
	068 Move W8, [X23+24]
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Add X8, X23, W24
	071 Move X0, [X8+32]
	072 Compare X0, 0
	073 JumpIfEqual {91}
	074 Move X1, X31
	075 Call InputActionMap.Disable, X0
	076 Add W24, W24, 1
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Move X8, [X20]
	079 Add W19, W19, 1
	080 Move X0, [X8+184]
	081 Move W8, [X0]
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Move X20, [X31+48]
	084 Move X19, [X31+56]
	085 Move X22, [X31+32]
	086 Move X21, [X31+40]
	087 Move X24, [X31+16]
	088 Move X23, [X31+24]
	089 Move X30, [X31+64]
	090 Return 
	091 Call 0x1C17F20
	092 Call 0x1C17F28
	093 Call 0x1C181E0

Method: System.Void DestroyAllActionMapStates()

Disassembly:
	0x03751C44 BL 0x1C16D08
	0x03751C48 MOV X1, X19
	0x03751C4C MOV X2, X31
	0x03751C50 BL 0x321B938
	0x03751C54 MOV X19, X0
	0x03751C58 ADRP X0, 0x9A2000
	0x03751C5C LDR X0, [X0 + 0xB40]
	0x03751C60 BL 0x1C16D08
	0x03751C64 BL 0x1C16F10
	0x03751C68 MOV X1, X19
	0x03751C6C MOV X2, X31
	0x03751C70 MOV X20, X0
	0x03751C74 BL 0x3379A44
	0x03751C78 ADRP X0, 0x9F4000
	0x03751C7C LDR X0, [X0 + 0xD28]
	0x03751C80 BL 0x1C16D08
	0x03751C84 MOV X1, X0
	0x03751C88 MOV X0, X20
	0x03751C8C BL 0x1C16DEC
	0x03751C90 STR X30, [X31 - 0x20]!
	0x03751C94 STP X20, X19, [X31 + 0x10]
	0x03751C98 ADDS W31, W1, 0x1
	0x03751C9C MOVZ W8, 0xFFFF
	0x03751CA0 B.EQ 0x3751CB0
	0x03751CA4 CMP W1, W8
	0x03751CA8 B.GE 0x3751CC0
	0x03751CAC MOV W8, W1
	0x03751CB0 LDP X20, X19, [X31 + 0x10]
	0x03751CB4 STRH W8, [X0 + 0x8]
	0x03751CB8 LDR X30, [X31], #0x20
	0x03751CBC RET
	0x03751CC0 MOVZ W8, 0xFFFF
	0x03751CC4 ADD X0, X31, 0xC
	0x03751CC8 MOV X1, X31
	0x03751CCC STRH W8, [X31 + 0xC]
	0x03751CD0 BL 0x3398CE4
	0x03751CD4 MOV X19, X0
	0x03751CD8 ADRP X0, 0x9F4000
	0x03751CDC LDR X0, [X0 + 0xD30]
	0x03751CE0 BL 0x1C16D08
	0x03751CE4 MOV X1, X19
	0x03751CE8 MOV X2, X31
	0x03751CEC BL 0x321B938
	0x03751CF0 MOV X19, X0
	0x03751CF4 ADRP X0, 0x9A2000
	0x03751CF8 LDR X0, [X0 + 0xB40]
	0x03751CFC BL 0x1C16D08
	0x03751D00 BL 0x1C16F10
	0x03751D04 MOV X1, X19
	0x03751D08 MOV X2, X31
	0x03751D0C MOV X20, X0
	0x03751D10 BL 0x3379A44
	0x03751D14 ADRP X0, 0x9F4000
	0x03751D18 LDR X0, [X0 + 0xD38]
	0x03751D1C BL 0x1C16D08
	0x03751D20 MOV X1, X0
	0x03751D24 MOV X0, X20
	0x03751D28 BL 0x1C16DEC
	0x03751D2C LDR W0, [X0 + 0x18]
	0x03751D30 RET
	0x03751D34 STR W1, [X0 + 0x18]
	0x03751D38 RET
	0x03751D3C LDR V0, [X0 + 0x10]
	0x03751D40 RET
	0x03751D44 STR D0, [X0 + 0x10]
	0x03751D48 RET
	0x03751D4C LDRB W0, [X0 + 0x4]
	0x03751D50 RET
	0x03751D54 STRB W1, [X0 + 0x4]
	0x03751D58 RET
	0x03751D5C LDRB W8, [X0 + 0x4]
	0x03751D60 AND W0, W8, 0x1
	0x03751D64 RET
	0x03751D68 LDRB W8, [X0 + 0x4]
	0x03751D6C BFM W8, W1, 0x0, 0x0
	0x03751D70 STRB W8, [X0 + 0x4]
	0x03751D74 RET
	0x03751D78 LDRB W8, [X0 + 0x4]
	0x03751D7C UBFM W0, W8, 0x1, 0x1
	0x03751D80 RET
	0x03751D84 LDRB W8, [X0 + 0x4]
	0x03751D88 ANDS W31, W1, 0x1
	0x03751D8C MOVZ W9, 0x2
	0x03751D90 CSEL W9, W9, W31, NE
	0x03751D94 AND W8, W8, 0xFFFFFFFD
	0x03751D98 ORR W8, W8, W9, 0x0
	0x03751D9C STRB W8, [X0 + 0x4]
	0x03751DA0 RET
	0x03751DA4 LDRB W8, [X0 + 0x4]
	0x03751DA8 ANDS W31, W8, 0x3
	0x03751DAC CSET W0, NE
	0x03751DB0 RET

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+32], X22
	004 Move [X31+40], X21
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move X19, 0xC90000
	008 Move X20, 0x9F5000
	009 Move W8, [X19+3511]
	010 Move X20, [X20+728]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0x9F5000
	016 Move X0, [X0+3232]
	017 Call 0x1C17CF4
	018 Move X0, 0x9F5000
	019 Move X0, [X0+2856]
	020 Call 0x1C17CF4
	021 Move X0, 0x9F5000
	022 Move X0, [X0+728]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X19+3511], W8
	026 Move X8, [X20]
	027 Move [X31+24], X31
	028 Move [X31+8], X31
	029 Move X0, [X8+184]
	030 Move W8, [X0]
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move X21, 0x9F5000
	033 Move X22, 0x9F5000
	034 Move X21, [X21+2856]
	035 Move X22, [X22+3232]
	036 Move X2, [X21]
	037 Subtract W19, W8, 1
	038 Move W1, W19
	039 Call InlinedArray`1<GCHandle>.get_Item, X0, X1
	040 Move [X31+24], X0
	041 Add X0, X31, 24
	042 Move X1, X31
	043 Call GCHandle.get_IsAllocated, X0
	044 Move TEMP, X0
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfNotEqual {69}
	048 Add X0, X31, 24
	049 Move X1, X31
	050 Call GCHandle.get_Target, X0
	051 Compare X0, 0
	052 JumpIfEqual {69}
	053 Add X0, X31, 24
	054 Move X1, X31
	055 Call GCHandle.get_Target, X0
	056 Compare X0, 0
	057 JumpIfEqual {102}
	058 Move X8, [X0]
	059 Move X1, [X20]
	060 Move W10, [X8+304]
	061 Move W9, [X1+304]
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move X8, [X8+200]
	064 Add X8, X8, X9
	065 NotImplemented "Instruction LDUR not yet implemented."
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move W1, W31
	068 Call InputActionState.Destroy, X0, X1
	069 Add X0, X31, 24
	070 Move X1, X31
	071 Call GCHandle.get_IsAllocated, X0
	072 Move TEMP, X0
	073 And TEMP, TEMP, 1
	074 Compare TEMP, 1
	075 JumpIfNotEqual {85}
	076 Move X8, [X20]
	077 Move X2, [X21]
	078 Move W1, W19
	079 Move X0, [X8+184]
	080 Call InlinedArray`1<GCHandle>.get_Item, X0, X1
	081 Move [X31+8], X0
	082 Add X0, X31, 8
	083 Move X1, X31
	084 Call GCHandle.Free, X0
	085 Move X8, [X20]
	086 Move X2, [X22]
	087 Move W1, W19
	088 Move X0, [X8+184]
	089 Call InlinedArray`1<GCHandle>.RemoveAtWithCapacity, X0, X1
	090 Move X8, [X20]
	091 Move X0, [X8+184]
	092 Move W8, [X0]
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Move X20, [X31+48]
	095 Move X19, [X31+56]
	096 Move X22, [X31+32]
	097 Move X21, [X31+40]
	098 Move X30, [X31+16]
	099 Add X31, X31, 64
	100 Return 
	101 Call 0x1C181E0
	102 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x0374C1E8 RET
	0x0374C1EC MOV X0, X19

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

