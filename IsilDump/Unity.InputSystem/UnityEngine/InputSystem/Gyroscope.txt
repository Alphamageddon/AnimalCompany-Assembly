Type: UnityEngine.InputSystem.Gyroscope

Method: UnityEngine.InputSystem.Controls.Vector3Control get_angularVelocity()

Disassembly:
	0x037BF454 LDRB W8, [X19 + 0x1A4]
	0x037BF458 LDR X20, [X20 + 0xF70]

ISIL:
	001 Move X0, [X0+368]
	002 Return X0

Method: System.Void set_angularVelocity(UnityEngine.InputSystem.Controls.Vector3Control value)

Disassembly:
	0x037BF45C TBNZ X8, 0x0, 0x37BF474
	0x037BF460 ADRP X0, 0x988000

ISIL:
	001 Move [X0+368], X1
	002 Return 

Method: UnityEngine.InputSystem.Gyroscope get_current()

Disassembly:
	0x037BF464 LDR X0, [X0 + 0xF70]
	0x037BF468 BL 0x1C16CF4
	0x037BF46C MOVZ W8, 0x1
	0x037BF470 STRB W8, [X19 + 0x1A4]
	0x037BF474 LDR X8, [X20]
	0x037BF478 LDP X20, X19, [X31 + 0x10]
	0x037BF47C LDR X8, [X8 + 0xB8]
	0x037BF480 LDR X0, [X8]
	0x037BF484 LDR X30, [X31], #0x20
	0x037BF488 RET
	0x037BF48C STP X30, X21, [X31 - 0x20]!
	0x037BF490 STP X20, X19, [X31 + 0x10]
	0x037BF494 ADRP X20, 0xC22000
	0x037BF498 ADRP X21, 0x988000
	0x037BF49C LDRB W8, [X20 + 0x1A5]
	0x037BF4A0 LDR X21, [X21 + 0xF70]
	0x037BF4A4 MOV X19, X0
	0x037BF4A8 TBNZ X8, 0x0, 0x37BF4C0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xC23000
	005 Move X20, 0x989000
	006 Move W8, [X19+396]
	007 Move X20, [X20+3840]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x989000
	013 Move X0, [X0+3840]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+396], W8
	017 Move X8, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X8, [X8+184]
	021 Move X0, [X8]
	022 Move X30, [X31+32]
	023 Return X0

Method: System.Void set_current(UnityEngine.InputSystem.Gyroscope value)

Disassembly:
	0x037BF4AC ADRP X0, 0x988000
	0x037BF4B0 LDR X0, [X0 + 0xF70]
	0x037BF4B4 BL 0x1C16CF4
	0x037BF4B8 MOVZ W8, 0x1
	0x037BF4BC STRB W8, [X20 + 0x1A5]
	0x037BF4C0 LDR X8, [X21]
	0x037BF4C4 LDR X8, [X8 + 0xB8]
	0x037BF4C8 STR X19, [X8]
	0x037BF4CC LDP X20, X19, [X31 + 0x10]
	0x037BF4D0 LDP X30, X21, [X31], #0x20
	0x037BF4D4 RET
	0x037BF4D8 STR X30, [X31 - 0x20]!
	0x037BF4DC STP X20, X19, [X31 + 0x10]
	0x037BF4E0 MOV X1, X31
	0x037BF4E4 MOV X19, X0
	0x037BF4E8 BL 0x377A674
	0x037BF4EC ADRP X20, 0xC22000
	0x037BF4F0 LDRB W8, [X20 + 0x231]
	0x037BF4F4 CBNZ W8, 0x37BF50C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xC23000
	006 Move X21, 0x989000
	007 Move W8, [X20+397]
	008 Move X21, [X21+3840]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x989000
	015 Move X0, [X0+3840]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+397], W8
	019 Move X8, [X21]
	020 Move X8, [X8+184]
	021 Move [X8], X19
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X30, [X31+32]
	025 Move X21, [X31+40]
	026 Return 

Method: System.Void MakeCurrent()

Disassembly:
	0x037BF4F8 ADRP X0, 0x988000
	0x037BF4FC LDR X0, [X0 + 0xF70]
	0x037BF500 BL 0x1C16CF4
	0x037BF504 MOVZ W8, 0x1
	0x037BF508 STRB W8, [X20 + 0x231]
	0x037BF50C ADRP X8, 0x988000
	0x037BF510 LDR X8, [X8 + 0xF70]
	0x037BF514 LDR X8, [X8]
	0x037BF518 LDR X8, [X8 + 0xB8]
	0x037BF51C STR X19, [X8]
	0x037BF520 LDP X20, X19, [X31 + 0x10]
	0x037BF524 LDR X30, [X31], #0x20
	0x037BF528 RET
	0x037BF52C STR X30, [X31 - 0x20]!
	0x037BF530 STP X20, X19, [X31 + 0x10]
	0x037BF534 MOV X1, X31
	0x037BF538 MOV X19, X0
	0x037BF53C BL 0x377B0CC
	0x037BF540 ADRP X20, 0xC22000
	0x037BF544 LDRB W8, [X20 + 0x232]
	0x037BF548 CBNZ W8, 0x37BF560

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X1, X31
	005 Move X19, X0
	006 Call InputDevice.MakeCurrent, X0
	007 Move X20, 0xC23000
	008 Move W8, [X20+545]
	009 Compare W8, 0
	010 JumpIfNotEqual {16}
	011 Move X0, 0x989000
	012 Move X0, [X0+3840]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+545], W8
	016 Move X8, 0x989000
	017 Move X8, [X8+3840]
	018 Move X8, [X8]
	019 Move X8, [X8+184]
	020 Move [X8], X19
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X30, [X31+32]
	024 Return 

Method: System.Void OnRemoved()

Disassembly:
	0x037BF54C ADRP X0, 0x988000
	0x037BF550 LDR X0, [X0 + 0xF70]
	0x037BF554 BL 0x1C16CF4
	0x037BF558 MOVZ W8, 0x1
	0x037BF55C STRB W8, [X20 + 0x232]
	0x037BF560 ADRP X20, 0x988000
	0x037BF564 LDR X20, [X20 + 0xF70]
	0x037BF568 LDR X8, [X20]
	0x037BF56C LDR X8, [X8 + 0xB8]
	0x037BF570 LDR X9, [X8]
	0x037BF574 CMP X9, X19
	0x037BF578 B.NE 0x37BF5A4
	0x037BF57C ADRP X19, 0xC22000
	0x037BF580 LDRB W9, [X19 + 0x231]
	0x037BF584 CBNZ W9, 0x37BF5A0
	0x037BF588 MOV X0, X20
	0x037BF58C BL 0x1C16CF4
	0x037BF590 LDR X8, [X20]
	0x037BF594 MOVZ W9, 0x1
	0x037BF598 STRB W9, [X19 + 0x231]
	0x037BF59C LDR X8, [X8 + 0xB8]
	0x037BF5A0 STR X31, [X8]
	0x037BF5A4 LDP X20, X19, [X31 + 0x10]
	0x037BF5A8 LDR X30, [X31], #0x20
	0x037BF5AC RET
	0x037BF5B0 STR X30, [X31 - 0x30]!
	0x037BF5B4 STP X22, X21, [X31 + 0x10]
	0x037BF5B8 STP X20, X19, [X31 + 0x20]
	0x037BF5BC ADRP X20, 0xC22000
	0x037BF5C0 ADRP X21, 0x988000
	0x037BF5C4 ADRP X22, 0x985000
	0x037BF5C8 LDRB W8, [X20 + 0x1A6]
	0x037BF5CC LDR X21, [X21 + 0xF78]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X1, X31
	005 Move X19, X0
	006 Call InputDevice.OnRemoved, X0
	007 Move X20, 0xC23000
	008 Move W8, [X20+546]
	009 Compare W8, 0
	010 JumpIfNotEqual {16}
	011 Move X0, 0x989000
	012 Move X0, [X0+3840]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+546], W8
	016 Move X20, 0x989000
	017 Move X20, [X20+3840]
	018 Move X8, [X20]
	019 Move X8, [X8+184]
	020 Move X9, [X8]
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move X19, 0xC23000
	023 Move W9, [X19+545]
	024 Compare W9, 0
	025 JumpIfNotEqual {32}
	026 Move X0, X20
	027 Call 0x1C17CF4
	028 Move X8, [X20]
	029 Move W9, 1
	030 Move [X19+545], W9
	031 Move X8, [X8+184]
	032 Move [X8], X31
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Return 

Method: System.Void FinishSetup()

Disassembly:
	0x037BF5D0 LDR X22, [X22 + 0xE30]
	0x037BF5D4 MOV X19, X0
	0x037BF5D8 TBNZ X8, 0x0, 0x37BF5FC
	0x037BF5DC ADRP X0, 0x985000
	0x037BF5E0 LDR X0, [X0 + 0xE30]
	0x037BF5E4 BL 0x1C16CF4
	0x037BF5E8 ADRP X0, 0x988000
	0x037BF5EC LDR X0, [X0 + 0xF78]
	0x037BF5F0 BL 0x1C16CF4
	0x037BF5F4 MOVZ W8, 0x1
	0x037BF5F8 STRB W8, [X20 + 0x1A6]
	0x037BF5FC LDR X1, [X21]
	0x037BF600 LDR X2, [X22]
	0x037BF604 MOV X0, X19
	0x037BF608 BL 0x21FC754
	0x037BF60C STR X0, [X19 + 0x170]
	0x037BF610 MOV X0, X19
	0x037BF614 LDP X20, X19, [X31 + 0x20]
	0x037BF618 LDP X22, X21, [X31 + 0x10]
	0x037BF61C MOV X1, X31
	0x037BF620 LDR X30, [X31], #0x30
	0x037BF624 B 0x37729C8
	0x037BF628 MOV X1, X31
	0x037BF62C B 0x377A868
	0x037BF630 LDR X0, [X0 + 0x170]
	0x037BF634 RET
	0x037BF638 STR X1, [X0 + 0x170]
	0x037BF63C RET
	0x037BF640 STR X30, [X31 - 0x20]!
	0x037BF644 STP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xC23000
	007 Move X21, 0x989000
	008 Move X22, 0x986000
	009 Move W8, [X20+398]
	010 Move X21, [X21+3848]
	011 Move X22, [X22+3536]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x986000
	018 Move X0, [X0+3536]
	019 Call 0x1C17CF4
	020 Move X0, 0x989000
	021 Move X0, [X0+3848]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+398], W8
	025 Move X1, [X21]
	026 Move X2, [X22]
	027 Move X0, X19
	028 Call 0x21FD754, X0, X1
	029 Move [X19+368], X0
	030 Move X0, X19
	031 Move X20, [X31+32]
	032 Move X19, [X31+40]
	033 Move X22, [X31+16]
	034 Move X21, [X31+24]
	035 Move X1, X31
	036 Move X30, [X31+48]
	037 Call InputControl.FinishSetup, X0
	038 Return 

Method: System.Void .ctor()

Disassembly:
	0x037BF648 ADRP X19, 0xC22000
	0x037BF64C ADRP X20, 0x988000

ISIL:
	001 Move X1, X31
	002 Call InputDevice..ctor, X0
	003 Return 

