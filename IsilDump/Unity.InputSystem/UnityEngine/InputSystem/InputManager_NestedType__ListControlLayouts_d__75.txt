Type: UnityEngine.InputSystem.InputManager/<ListControlLayouts>d__75

Method: System.Void .ctor(System.Int32 <>1__state)

Disassembly:
	0x037C62F0 CBNZ X19, 0x37C62F8
	0x037C62F4 BL 0x1D2C690
	0x037C62F8 MOV X0, X19
	0x037C62FC BL 0x1C16F18
	0x037C6300 BL 0x1990590
	0x037C6304 SUB X31, X31, 0x70
	0x037C6308 STR X30, [X31 + 0x30]
	0x037C630C STP X24, X23, [X31 + 0x40]
	0x037C6310 STP X22, X21, [X31 + 0x50]
	0x037C6314 STP X20, X19, [X31 + 0x60]
	0x037C6318 ADRP X20, 0xC1B000
	0x037C631C LDRB W8, [X20 + 0x208]
	0x037C6320 MOV X19, X1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move X0, X31
	009 Move [X20+16], W19
	010 Call Environment.get_CurrentManagedThreadId
	011 Move [X20+32], W0
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move X30, [X31+32]
	015 Return 

Method: System.Void System.IDisposable.Dispose()

Disassembly:
	0x037CDE14 TBZ X20, 0x0, 0x37CDE30
	0x037CDE18 ADRP X8, 0x927000
	0x037CDE1C LDR X8, [X8 + 0xC20]
	0x037CDE20 MOV X0, X22
	0x037CDE24 LDR X2, [X8]
	0x037CDE28 BL 0x2DBEF30
	0x037CDE2C B 0x37CDE44
	0x037CDE30 ADRP X8, 0x97B000
	0x037CDE34 LDR X8, [X8 + 0x830]
	0x037CDE38 MOV X0, X22
	0x037CDE3C LDR X2, [X8]
	0x037CDE40 BL 0x2DBE67C
	0x037CDE44 MOV X0, X19
	0x037CDE48 LDP X20, X19, [X31 + 0x20]
	0x037CDE4C LDP X22, X21, [X31 + 0x10]
	0x037CDE50 LDR X30, [X31], #0x30
	0x037CDE54 B 0x37CD80C

ISIL:
	001 Move W8, [X0+16]
	002 Add W8, W8, 8
	003 NotImplemented "Instruction CMP not yet implemented."
	004 Move X9, -46354432
	005 Add X9, X9, 2391
	006 NotImplemented "Instruction ADR not yet implemented."
	007 Move W11, [X9]
	008 Add X10, X10, X11
	009 CallNoReturn X10
	010 Call <ListControlLayouts>d__75.<>m__Finally6, X0
	011 Return 
	012 Call <ListControlLayouts>d__75.<>m__Finally5, X0
	013 Return 
	014 Call <ListControlLayouts>d__75.<>m__Finally4, X0
	015 Return 
	016 Call <ListControlLayouts>d__75.<>m__Finally3, X0
	017 Return 
	018 Call <ListControlLayouts>d__75.<>m__Finally2, X0
	019 Return 
	020 Call <ListControlLayouts>d__75.<>m__Finally1, X0
	021 Return 
	022 Return 

Method: System.Boolean MoveNext()

Disassembly:
	0x037CDE58 ADRP X0, 0x92B000
	0x037CDE5C LDR X0, [X0 + 0x528]
	0x037CDE60 BL 0x1C16D08
	0x037CDE64 BL 0x1C16F10
	0x037CDE68 MOV X19, X0
	0x037CDE6C ADRP X0, 0x97B000
	0x037CDE70 LDR X0, [X0 + 0x850]
	0x037CDE74 BL 0x1C16D08
	0x037CDE78 MOV X1, X0
	0x037CDE7C MOV X0, X19
	0x037CDE80 MOV X2, X31
	0x037CDE84 BL 0x330E100
	0x037CDE88 ADRP X0, 0x97B000
	0x037CDE8C LDR X0, [X0 + 0x858]
	0x037CDE90 BL 0x1C16D08
	0x037CDE94 MOV X1, X0
	0x037CDE98 MOV X0, X19
	0x037CDE9C BL 0x1C16DEC
	0x037CDEA0 BL 0x1C16F20
	0x037CDEA4 STP X30, X21, [X31 - 0x20]!
	0x037CDEA8 STP X20, X19, [X31 + 0x10]
	0x037CDEAC ADRP X21, 0xC14000
	0x037CDEB0 LDRB W8, [X21 + 0x23C]
	0x037CDEB4 MOV X19, X1
	0x037CDEB8 MOV X20, X0
	0x037CDEBC TBNZ X8, 0x0, 0x37CDED4
	0x037CDEC0 ADRP X0, 0x96B000
	0x037CDEC4 LDR X0, [X0 + 0xCE8]
	0x037CDEC8 BL 0x1C16CF4
	0x037CDECC MOVZ W8, 0x1
	0x037CDED0 STRB W8, [X21 + 0x23C]
	0x037CDED4 LDR X20, [X20 + 0x60]
	0x037CDED8 CBZ X20, 0x37CDF0C
	0x037CDEDC CBZ X19, 0x37CDF1C
	0x037CDEE0 ADRP X21, 0x96B000
	0x037CDEE4 LDR X21, [X21 + 0xCE8]
	0x037CDEE8 MOV X0, X19
	0x037CDEEC MOV X1, X31
	0x037CDEF0 BL 0x322B860
	0x037CDEF4 LDR X2, [X21]
	0x037CDEF8 MOV X1, X0
	0x037CDEFC MOV X0, X20
	0x037CDF00 LDP X20, X19, [X31 + 0x10]
	0x037CDF04 LDP X30, X21, [X31], #0x20
	0x037CDF08 B 0x2DBE4B0
	0x037CDF0C LDP X20, X19, [X31 + 0x10]
	0x037CDF10 MOV W0, W31
	0x037CDF14 LDP X30, X21, [X31], #0x20
	0x037CDF18 RET
	0x037CDF1C BL 0x1C16F20
	0x037CDF20 ADRP X8, 0xFFFFFFFFFD320000
	0x037CDF24 LDR V0, [X8 + 0xDE0]
	0x037CDF28 ADRP X8, 0xFFFFFFFFFD320000
	0x037CDF2C MOV X1, X31
	0x037CDF30 STR D0, [X0 + 0x20]
	0x037CDF34 LDR V0, [X8 + 0x4]
	0x037CDF38 MOVZ W8, 0x3E8
	0x037CDF3C STR W8, [X0 + 0x28]
	0x037CDF40 ADRP X8, 0xFFFFFFFFFD31E000
	0x037CDF44 STUR V0, [X0 + 0x38]
	0x037CDF48 LDR V0, [X8 + 0xE]
	0x037CDF4C MOVZ W8, 0x1
	0x037CDF50 STRB W8, [X0 + 0x2C]
	0x037CDF54 MOVZ W8, 0x3F400000
	0x037CDF58 STUR V0, [X0 + 0x48]
	0x037CDF5C STR W8, [X0 + 0x58]
	0x037CDF60 B 0x3C36D2C
	0x037CDF64 LDR X0, [X0 + 0x10]
	0x037CDF68 RET
	0x037CDF6C STP X30, X21, [X31 - 0x20]!
	0x037CDF70 STP X20, X19, [X31 + 0x10]
	0x037CDF74 ADRP X21, 0xC14000
	0x037CDF78 ADRP X20, 0x97B000
	0x037CDF7C LDRB W8, [X21 + 0x23E]
	0x037CDF80 LDR X20, [X20 + 0x860]
	0x037CDF84 MOV X19, X0
	0x037CDF88 TBNZ X8, 0x0, 0x37CE054
	0x037CDF8C ADRP X0, 0x97B000
	0x037CDF90 LDR X0, [X0 + 0x860]
	0x037CDF94 BL 0x1C16CF4
	0x037CDF98 ADRP X0, 0x97B000
	0x037CDF9C LDR X0, [X0 + 0x868]
	0x037CDFA0 BL 0x1C16CF4
	0x037CDFA4 ADRP X0, 0x979000
	0x037CDFA8 LDR X0, [X0 + 0xAB8]
	0x037CDFAC BL 0x1C16CF4
	0x037CDFB0 ADRP X0, 0x97B000
	0x037CDFB4 LDR X0, [X0 + 0x870]
	0x037CDFB8 BL 0x1C16CF4
	0x037CDFBC ADRP X0, 0x97B000
	0x037CDFC0 LDR X0, [X0 + 0x878]
	0x037CDFC4 BL 0x1C16CF4
	0x037CDFC8 ADRP X0, 0x97B000
	0x037CDFCC LDR X0, [X0 + 0x880]
	0x037CDFD0 BL 0x1C16CF4
	0x037CDFD4 ADRP X0, 0x96A000
	0x037CDFD8 LDR X0, [X0 + 0xB08]
	0x037CDFDC BL 0x1C16CF4
	0x037CDFE0 ADRP X0, 0x97B000
	0x037CDFE4 LDR X0, [X0 + 0x888]
	0x037CDFE8 BL 0x1C16CF4
	0x037CDFEC ADRP X0, 0x97B000
	0x037CDFF0 LDR X0, [X0 + 0x890]
	0x037CDFF4 BL 0x1C16CF4
	0x037CDFF8 ADRP X0, 0x97B000
	0x037CDFFC LDR X0, [X0 + 0x898]
	0x037CE000 BL 0x1C16CF4
	0x037CE004 ADRP X0, 0x978000
	0x037CE008 LDR X0, [X0 + 0xB00]
	0x037CE00C BL 0x1C16CF4
	0x037CE010 ADRP X0, 0x97A000
	0x037CE014 LDR X0, [X0 + 0x8A0]
	0x037CE018 BL 0x1C16CF4
	0x037CE01C ADRP X0, 0x97A000
	0x037CE020 LDR X0, [X0 + 0x8A8]
	0x037CE024 BL 0x1C16CF4
	0x037CE028 ADRP X0, 0x97A000
	0x037CE02C LDR X0, [X0 + 0x8B0]
	0x037CE030 BL 0x1C16CF4
	0x037CE034 ADRP X0, 0x97A000
	0x037CE038 LDR X0, [X0 + 0x8B8]
	0x037CE03C BL 0x1C16CF4
	0x037CE040 ADRP X0, 0x97A000
	0x037CE044 LDR X0, [X0 + 0x8C0]
	0x037CE048 BL 0x1C16CF4
	0x037CE04C MOVZ W8, 0x1
	0x037CE050 STRB W8, [X21 + 0x23E]
	0x037CE054 MOVN X8, 0x0
	0x037CE058 MOV X0, X19
	0x037CE05C MOV X1, X31
	0x037CE060 STP X8, X8, [X19 + 0xA0]
	0x037CE064 STR W8, [X19 + 0xB0]
	0x037CE068 BL 0x33BDD8C
	0x037CE06C LDR X0, [X20]
	0x037CE070 MOV X1, X31
	0x037CE074 BL 0x37375F4
	0x037CE078 STR X0, [X19 + 0x10]
	0x037CE07C CBZ X0, 0x37CE2C8
	0x037CE080 ADRP X8, 0x97A000
	0x037CE084 LDR X8, [X8 + 0x8B0]
	0x037CE088 MOVZ W2, 0x1
	0x037CE08C MOV X3, X31
	0x037CE090 LDR X1, [X8]
	0x037CE094 BL 0x373798C
	0x037CE098 STR X0, [X19 + 0x18]
	0x037CE09C CBZ X0, 0x37CE2C8
	0x037CE0A0 ADRP X8, 0x97A000
	0x037CE0A4 LDR X8, [X8 + 0x870]
	0x037CE0A8 MOVZ W2, 0x1
	0x037CE0AC MOV X3, X31
	0x037CE0B0 LDR X1, [X8]
	0x037CE0B4 BL 0x37376AC
	0x037CE0B8 LDR X8, [X19 + 0x18]
	0x037CE0BC STR X0, [X19 + 0x28]
	0x037CE0C0 CBZ X8, 0x37CE2C8
	0x037CE0C4 ADRP X9, 0x97A000
	0x037CE0C8 LDR X9, [X9 + 0x8C0]
	0x037CE0CC MOVZ W2, 0x1
	0x037CE0D0 MOV X0, X8
	0x037CE0D4 MOV X3, X31
	0x037CE0D8 LDR X1, [X9]
	0x037CE0DC BL 0x37376AC
	0x037CE0E0 LDR X8, [X19 + 0x18]
	0x037CE0E4 STR X0, [X19 + 0x30]
	0x037CE0E8 CBZ X8, 0x37CE2C8
	0x037CE0EC ADRP X9, 0x97A000
	0x037CE0F0 LDR X9, [X9 + 0x8B8]
	0x037CE0F4 MOVZ W2, 0x1
	0x037CE0F8 MOV X0, X8
	0x037CE0FC MOV X3, X31
	0x037CE100 LDR X1, [X9]
	0x037CE104 BL 0x37376AC
	0x037CE108 LDR X8, [X19 + 0x10]
	0x037CE10C STR X0, [X19 + 0x38]
	0x037CE110 CBZ X8, 0x37CE2C8
	0x037CE114 ADRP X9, 0x97A000
	0x037CE118 LDR X9, [X9 + 0x8A0]
	0x037CE11C MOVZ W2, 0x1
	0x037CE120 MOV X0, X8
	0x037CE124 MOV X3, X31
	0x037CE128 LDR X1, [X9]
	0x037CE12C BL 0x373798C
	0x037CE130 STR X0, [X19 + 0x40]
	0x037CE134 CBZ X0, 0x37CE2C8
	0x037CE138 ADRP X8, 0x97A000
	0x037CE13C LDR X8, [X8 + 0x868]
	0x037CE140 MOVZ W2, 0x1
	0x037CE144 MOV X3, X31
	0x037CE148 LDR X1, [X8]
	0x037CE14C BL 0x37376AC
	0x037CE150 LDR X8, [X19 + 0x40]
	0x037CE154 STR X0, [X19 + 0x50]
	0x037CE158 CBZ X8, 0x37CE2C8
	0x037CE15C ADRP X9, 0x978000
	0x037CE160 LDR X9, [X9 + 0xAB8]
	0x037CE164 MOVZ W2, 0x1
	0x037CE168 MOV X0, X8
	0x037CE16C MOV X3, X31
	0x037CE170 LDR X1, [X9]
	0x037CE174 BL 0x37376AC
	0x037CE178 LDR X8, [X19 + 0x40]
	0x037CE17C STR X0, [X19 + 0x58]
	0x037CE180 CBZ X8, 0x37CE2C8
	0x037CE184 ADRP X9, 0x969000
	0x037CE188 LDR X9, [X9 + 0xB08]
	0x037CE18C MOVZ W2, 0x1
	0x037CE190 MOV X0, X8
	0x037CE194 MOV X3, X31
	0x037CE198 LDR X1, [X9]
	0x037CE19C BL 0x37376AC
	0x037CE1A0 LDR X8, [X19 + 0x40]
	0x037CE1A4 STR X0, [X19 + 0x60]
	0x037CE1A8 CBZ X8, 0x37CE2C8
	0x037CE1AC ADRP X9, 0x978000
	0x037CE1B0 LDR X9, [X9 + 0xB00]
	0x037CE1B4 MOVZ W2, 0x1
	0x037CE1B8 MOV X0, X8
	0x037CE1BC MOV X3, X31
	0x037CE1C0 LDR X1, [X9]
	0x037CE1C4 BL 0x37376AC
	0x037CE1C8 LDR X8, [X19 + 0x40]
	0x037CE1CC STR X0, [X19 + 0x68]
	0x037CE1D0 CBZ X8, 0x37CE2C8
	0x037CE1D4 ADRP X9, 0x97A000
	0x037CE1D8 LDR X9, [X9 + 0x878]
	0x037CE1DC MOVZ W2, 0x1
	0x037CE1E0 MOV X0, X8
	0x037CE1E4 MOV X3, X31
	0x037CE1E8 LDR X1, [X9]
	0x037CE1EC BL 0x37376AC
	0x037CE1F0 LDR X8, [X19 + 0x40]
	0x037CE1F4 STR X0, [X19 + 0x70]
	0x037CE1F8 CBZ X8, 0x37CE2C8
	0x037CE1FC ADRP X9, 0x97A000
	0x037CE200 LDR X9, [X9 + 0x898]
	0x037CE204 MOVZ W2, 0x1
	0x037CE208 MOV X0, X8
	0x037CE20C MOV X3, X31
	0x037CE210 LDR X1, [X9]
	0x037CE214 BL 0x37376AC
	0x037CE218 LDR X8, [X19 + 0x40]
	0x037CE21C STR X0, [X19 + 0x78]
	0x037CE220 CBZ X8, 0x37CE2C8
	0x037CE224 ADRP X9, 0x97A000
	0x037CE228 LDR X9, [X9 + 0x890]
	0x037CE22C MOVZ W2, 0x1
	0x037CE230 MOV X0, X8
	0x037CE234 MOV X3, X31
	0x037CE238 LDR X1, [X9]
	0x037CE23C BL 0x37376AC
	0x037CE240 LDR X8, [X19 + 0x40]
	0x037CE244 STR X0, [X19 + 0x80]
	0x037CE248 CBZ X8, 0x37CE2C8
	0x037CE24C ADRP X9, 0x97A000
	0x037CE250 LDR X9, [X9 + 0x880]
	0x037CE254 MOVZ W2, 0x1
	0x037CE258 MOV X0, X8
	0x037CE25C MOV X3, X31
	0x037CE260 LDR X1, [X9]
	0x037CE264 BL 0x37376AC
	0x037CE268 LDR X8, [X19 + 0x40]
	0x037CE26C STR X0, [X19 + 0x88]
	0x037CE270 CBZ X8, 0x37CE2C8
	0x037CE274 ADRP X9, 0x97A000
	0x037CE278 LDR X9, [X9 + 0x888]
	0x037CE27C MOVZ W2, 0x1
	0x037CE280 MOV X0, X8
	0x037CE284 MOV X3, X31
	0x037CE288 LDR X1, [X9]
	0x037CE28C BL 0x37376AC
	0x037CE290 LDR X8, [X19 + 0x40]
	0x037CE294 STR X0, [X19 + 0x90]
	0x037CE298 CBZ X8, 0x37CE2C8
	0x037CE29C ADRP X9, 0x97A000
	0x037CE2A0 LDR X9, [X9 + 0x8A8]
	0x037CE2A4 MOVZ W2, 0x1
	0x037CE2A8 MOV X0, X8
	0x037CE2AC MOV X3, X31
	0x037CE2B0 LDR X1, [X9]
	0x037CE2B4 BL 0x37376AC
	0x037CE2B8 STR X0, [X19 + 0x98]
	0x037CE2BC LDP X20, X19, [X31 + 0x10]
	0x037CE2C0 LDP X30, X21, [X31], #0x20
	0x037CE2C4 RET
	0x037CE2C8 BL 0x1C16F20
	0x037CE2CC STP X30, X21, [X31 - 0x20]!
	0x037CE2D0 STP X20, X19, [X31 + 0x10]
	0x037CE2D4 ADRP X21, 0xC13000
	0x037CE2D8 ADRP X20, 0x925000
	0x037CE2DC LDRB W8, [X21 + 0x23F]
	0x037CE2E0 LDR X20, [X20 + 0x598]
	0x037CE2E4 MOV X19, X0
	0x037CE2E8 TBNZ X8, 0x0, 0x37CE300
	0x037CE2EC ADRP X0, 0x925000
	0x037CE2F0 LDR X0, [X0 + 0x598]
	0x037CE2F4 BL 0x1C16CF4
	0x037CE2F8 MOVZ W8, 0x1
	0x037CE2FC STRB W8, [X21 + 0x23F]
	0x037CE300 LDR X0, [X20]
	0x037CE304 LDR X19, [X19 + 0x10]
	0x037CE308 LDR W8, [X0 + 0xE0]
	0x037CE30C CBNZ W8, 0x37CE314
	0x037CE310 BL 0x1C16DFC
	0x037CE314 MOV X0, X19
	0x037CE318 LDP X20, X19, [X31 + 0x10]
	0x037CE31C MOV X1, X31
	0x037CE320 LDP X30, X21, [X31], #0x20
	0x037CE324 B 0x3C394A8
	0x037CE328 STR X30, [X31 - 0x10]!
	0x037CE32C LDR X9, [X0 + 0x10]
	0x037CE330 CBZ X9, 0x37CE34C
	0x037CE334 ADD X1, X9, 0x30
	0x037CE338 MOVZ W2, 0x60
	0x037CE33C MOV X0, X8
	0x037CE340 BL 0x3EB1AC0
	0x037CE344 LDR X30, [X31], #0x10
	0x037CE348 RET
	0x037CE34C BL 0x1C16F20
	0x037CE350 SUB X31, X31, 0xD0
	0x037CE354 STP X30, X19, [X31 + 0xC0]
	0x037CE358 LDR X19, [X0 + 0x10]
	0x037CE35C ADD X0, X31, 0x60
	0x037CE360 MOVZ W2, 0x60
	0x037CE364 BL 0x3EB1AC0
	0x037CE368 CBZ X19, 0x37CE398
	0x037CE36C ADD X0, X31, 0x0
	0x037CE370 ADD X1, X31, 0x60
	0x037CE374 MOVZ W2, 0x60
	0x037CE378 BL 0x3EB1AC0
	0x037CE37C ADD X1, X31, 0x0
	0x037CE380 MOV X0, X19
	0x037CE384 MOV X2, X31
	0x037CE388 BL 0x37368D4
	0x037CE38C LDP X30, X19, [X31 + 0xC0]
	0x037CE390 ADD X31, X31, 0xD0
	0x037CE394 RET
	0x037CE398 BL 0x1C16F20
	0x037CE39C SUB X31, X31, 0x30
	0x037CE3A0 STP X30, X19, [X31 + 0x20]
	0x037CE3A4 LDR X0, [X0 + 0x10]
	0x037CE3A8 CBZ X0, 0x37CE3D8
	0x037CE3AC MOV X19, X8
	0x037CE3B0 ADD X8, X31, 0x8
	0x037CE3B4 MOV X1, X31
	0x037CE3B8 BL 0x3736A3C
	0x037CE3BC LDR X8, [X31 + 0x18]
	0x037CE3C0 LDUR V0, [X31 + 0x8]
	0x037CE3C4 STR X8, [X19 + 0x10]
	0x037CE3C8 STR V0, [X19]
	0x037CE3CC LDP X30, X19, [X31 + 0x20]
	0x037CE3D0 ADD X31, X31, 0x30
	0x037CE3D4 RET
	0x037CE3D8 BL 0x1C16F20
	0x037CE3DC SUB X31, X31, 0x50
	0x037CE3E0 STR X30, [X31 + 0x40]
	0x037CE3E4 LDR X0, [X0 + 0x10]
	0x037CE3E8 LDR X8, [X1 + 0x10]
	0x037CE3EC LDR V0, [X1]
	0x037CE3F0 STR X8, [X31 + 0x30]
	0x037CE3F4 STR V0, [X31 + 0x2]
	0x037CE3F8 CBZ X0, 0x37CE424
	0x037CE3FC LDR V0, [X31 + 0x2]
	0x037CE400 LDR X8, [X31 + 0x30]
	0x037CE404 ADD X1, X31, 0x0
	0x037CE408 MOV X2, X31
	0x037CE40C STR V0, [X31]
	0x037CE410 STR X8, [X31 + 0x10]
	0x037CE414 BL 0x3736B18
	0x037CE418 LDR X30, [X31 + 0x40]
	0x037CE41C ADD X31, X31, 0x50
	0x037CE420 RET
	0x037CE424 BL 0x1C16F20
	0x037CE428 STR X30, [X31 - 0x10]!
	0x037CE42C LDR X0, [X0 + 0x10]
	0x037CE430 CBZ X0, 0x37CE440
	0x037CE434 MOV X1, X31
	0x037CE438 LDR X30, [X31], #0x10
	0x037CE43C B 0x37367C0
	0x037CE440 BL 0x1C16F20
	0x037CE444 STR X30, [X31 - 0x10]!
	0x037CE448 LDR X0, [X0 + 0x10]
	0x037CE44C CBZ X0, 0x37CE45C
	0x037CE450 MOV X2, X31
	0x037CE454 LDR X30, [X31], #0x10
	0x037CE458 B 0x37384AC
	0x037CE45C BL 0x1C16F20
	0x037CE460 STR X30, [X31 - 0x10]!
	0x037CE464 LDR X0, [X0 + 0x10]
	0x037CE468 CBZ X0, 0x37CE478
	0x037CE46C MOV X1, X31
	0x037CE470 LDR X30, [X31], #0x10
	0x037CE474 B 0x3738538
	0x037CE478 BL 0x1C16F20
	0x037CE47C STR X30, [X31 - 0x10]!
	0x037CE480 LDR X0, [X0 + 0x10]
	0x037CE484 CBZ X0, 0x37CE494
	0x037CE488 MOV X1, X31
	0x037CE48C LDR X30, [X31], #0x10
	0x037CE490 B 0x3738538
	0x037CE494 BL 0x1C16F20
	0x037CE498 STR X30, [X31 - 0x10]!
	0x037CE49C LDR X0, [X0 + 0x10]
	0x037CE4A0 CBZ X0, 0x37CE4B0
	0x037CE4A4 MOV X1, X31
	0x037CE4A8 LDR X30, [X31], #0x10
	0x037CE4AC B 0x373816C
	0x037CE4B0 BL 0x1C16F20
	0x037CE4B4 STR X30, [X31 - 0x10]!
	0x037CE4B8 LDR X0, [X0 + 0x10]
	0x037CE4BC CBZ X0, 0x37CE4CC
	0x037CE4C0 MOV X1, X31
	0x037CE4C4 LDR X30, [X31], #0x10
	0x037CE4C8 B 0x3738318
	0x037CE4CC BL 0x1C16F20
	0x037CE4D0 STR X30, [X31 - 0x10]!
	0x037CE4D4 LDR X0, [X0 + 0x10]
	0x037CE4D8 CBZ X0, 0x37CE4E8
	0x037CE4DC MOV X1, X31
	0x037CE4E0 LDR X30, [X31], #0x10
	0x037CE4E4 B 0x3736820
	0x037CE4E8 BL 0x1C16F20
	0x037CE4EC STR X30, [X31 - 0x10]!
	0x037CE4F0 LDR X0, [X0 + 0x10]
	0x037CE4F4 CBZ X0, 0x37CE508
	0x037CE4F8 AND W2, W2, 0x1
	0x037CE4FC MOV X3, X31
	0x037CE500 LDR X30, [X31], #0x10
	0x037CE504 B 0x3736D58
	0x037CE508 BL 0x1C16F20
	0x037CE50C SUB X31, X31, 0xD0
	0x037CE510 STR X30, [X31 + 0xB0]
	0x037CE514 STP X20, X19, [X31 + 0xC0]
	0x037CE518 LDR X20, [X0 + 0x10]

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+144], X30
	003 Move [X31+152], X23
	004 Move [X31+160], X22
	005 Move [X31+168], X21
	006 Move [X31+176], X20
	007 Move [X31+184], X19
	008 Move X20, 0xC15000
	009 Move W8, [X20+535]
	010 Move X19, X0
	011 Move [X31+136], X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {54}
	016 Move X0, 0x97A000
	017 Move X0, [X0+1680]
	018 Call 0x1C17CF4
	019 Move X0, 0x97B000
	020 Move X0, [X0+3160]
	021 Call 0x1C17CF4
	022 Move X0, 0x97C000
	023 Move X0, [X0+2024]
	024 Call 0x1C17CF4
	025 Move X0, 0x97B000
	026 Move X0, [X0+3176]
	027 Call 0x1C17CF4
	028 Move X0, 0x97A000
	029 Move X0, [X0+1696]
	030 Call 0x1C17CF4
	031 Move X0, 0x97C000
	032 Move X0, [X0+2032]
	033 Call 0x1C17CF4
	034 Move X0, 0x97B000
	035 Move X0, [X0+3184]
	036 Call 0x1C17CF4
	037 Move X0, 0x97A000
	038 Move X0, [X0+1704]
	039 Call 0x1C17CF4
	040 Move X0, 0x97C000
	041 Move X0, [X0+2040]
	042 Call 0x1C17CF4
	043 Move X0, 0x97B000
	044 Move X0, [X0+3192]
	045 Call 0x1C17CF4
	046 Move X0, 0x97C000
	047 Move X0, [X0+2048]
	048 Call 0x1C17CF4
	049 Move X0, 0x97A000
	050 Move X0, [X0+1712]
	051 Call 0x1C17CF4
	052 Move W8, 1
	053 Move [X20+535], W8
	054 Add X8, X31, 136
	055 Move [X31+120], X31
	056 Move [X31+128], X8
	057 Move W8, [X19+16]
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move X22, [X19+56]
	060 Move X9, -46354432
	061 Add X9, X9, 2406
	062 NotImplemented "Instruction ADR not yet implemented."
	063 Move W11, [X9]
	064 Add X10, X10, X11
	065 CallNoReturn X10
	066 Move X0, [X19+40]
	067 Move TEMP, 0
	068 Not TEMP
	069 Move W8, TEMP
	070 Move [X19+16], W8
	071 Move X1, X31
	072 Call String.IsNullOrEmpty, X0
	073 Move TEMP, X0
	074 And TEMP, TEMP, 1
	075 Compare TEMP, 1
	076 JumpIfNotEqual {240}
	077 Compare X22, 0
	078 JumpIfEqual {470}
	079 Move X0, [X22+24]
	080 Compare X0, 0
	081 JumpIfEqual {471}
	082 Move X8, 0x97A000
	083 Move X8, [X8+1680]
	084 Move X1, [X8]
	085 Add X8, X31, 0
	086 Call Dictionary`2<InternedString, Object>.GetEnumerator, X0
	087 Move V0, [X31]
	088 Move V1, [X31+16]
	089 Move V2, [X31+2]
	090 Move X19, [X31+136]
	091 Move TEMP, 5
	092 Not TEMP
	093 Move W8, TEMP
	094 Move [X31+48], V0
	095 Move [X31+56], V1
	096 Move [X31+5], V2
	097 Move [X19+96], V1
	098 Move [X19+104], V2
	099 Move [X19+5], V0
	100 Move TEMP, 5
	101 Not TEMP
	102 Move W8, TEMP
	103 Move [X19+16], W8
	104 Move X8, 0x97A000
	105 Move X8, [X8+1696]
	106 Add X0, X19, 80
	107 Move X1, [X8]
	108 Call Enumerator<InternedString, Object>.MoveNext, X0
	109 Move W8, W0
	110 Move X0, [X31+136]
	111 Move TEMP, X8
	112 And TEMP, TEMP, 1
	113 Compare TEMP, 1
	114 JumpIfNotEqual {137}
	115 Move X8, [X0+96]
	116 Move X1, [X0+104]
	117 Move X0, X8
	118 Move X2, X31
	119 Call InternedString.op_Implicit, X0
	120 Move X8, [X31+136]
	121 Move W9, 4
	122 Move TEMP, 3
	123 Not TEMP
	124 Move W8, TEMP
	125 Move TEMP, 4
	126 Not TEMP
	127 Move W8, TEMP
	128 Move TEMP, 2
	129 Not TEMP
	130 Move W8, TEMP
	131 Move TEMP, 6
	132 Not TEMP
	133 Move W8, TEMP
	134 Move TEMP, 7
	135 Not TEMP
	136 Move W8, TEMP
	137 Call <ListControlLayouts>d__75.<>m__Finally4, X0
	138 Move X8, [X31+136]
	139 NotImplemented "Instruction MOVI not yet implemented."
	140 Move [X8+96], V0
	141 Move [X8+104], V0
	142 Move [X8+5], V0
	143 Compare X22, 0
	144 JumpIfEqual {468}
	145 Move X0, [X22+32]
	146 Compare X0, 0
	147 JumpIfEqual {469}
	148 Move X8, 0x97B000
	149 Move X8, [X8+2024]
	150 Move X1, [X8]
	151 Add X8, X31, 0
	152 Call Dictionary`2<InternedString, Object>.GetEnumerator, X0
	153 Move V0, [X31]
	154 Move V1, [X31+16]
	155 Move V2, [X31+2]
	156 Move X19, [X31+136]
	157 Move TEMP, 6
	158 Not TEMP
	159 Move W8, TEMP
	160 Move [X31+48], V0
	161 Move [X31+56], V1
	162 Move [X31+5], V2
	163 Move [X19+144], V1
	164 Move [X19+152], V2
	165 Move [X19+8], V0
	166 Move [X19+16], W8
	167 Move X8, 0x97B000
	168 Move X8, [X8+2032]
	169 Add X0, X19, 128
	170 Move X1, [X8]
	171 Call Enumerator<InternedString, Object>.MoveNext, X0
	172 Move W8, W0
	173 Move X0, [X31+136]
	174 Move TEMP, X8
	175 And TEMP, TEMP, 1
	176 Compare TEMP, 1
	177 JumpIfNotEqual {185}
	178 Move X8, [X0+144]
	179 Move X1, [X0+152]
	180 Move X0, X8
	181 Move X2, X31
	182 Call InternedString.op_Implicit, X0
	183 Move X8, [X31+136]
	184 Move W9, 5
	185 Call <ListControlLayouts>d__75.<>m__Finally5, X0
	186 Move X8, [X31+136]
	187 NotImplemented "Instruction MOVI not yet implemented."
	188 Move [X8+144], V0
	189 Move [X8+152], V0
	190 Move [X8+8], V0
	191 Compare X22, 0
	192 JumpIfEqual {464}
	193 Move X0, [X22+40]
	194 Compare X0, 0
	195 JumpIfEqual {465}
	196 Move X8, 0x97A000
	197 Move X8, [X8+3160]
	198 Move X1, [X8]
	199 Add X8, X31, 0
	200 Call Dictionary`2<InternedString, Object>.GetEnumerator, X0
	201 Move V0, [X31]
	202 Move V1, [X31+16]
	203 Move V2, [X31+2]
	204 Move X19, [X31+136]
	205 Move TEMP, 7
	206 Not TEMP
	207 Move W8, TEMP
	208 Move [X31+48], V0
	209 Move [X31+56], V1
	210 Move [X31+5], V2
	211 Move [X19+192], V1
	212 Move [X19+200], V2
	213 Move [X19+11], V0
	214 Move [X19+16], W8
	215 Move X8, 0x97A000
	216 Move X8, [X8+3176]
	217 Add X0, X19, 176
	218 Move X1, [X8]
	219 Call Enumerator<InternedString, Object>.MoveNext, X0
	220 Move W8, W0
	221 Move X0, [X31+136]
	222 Move TEMP, X8
	223 And TEMP, TEMP, 1
	224 Compare TEMP, 1
	225 JumpIfNotEqual {233}
	226 Move X8, [X0+192]
	227 Move X1, [X0+200]
	228 Move X0, X8
	229 Move X2, X31
	230 Call InternedString.op_Implicit, X0
	231 Move X8, [X31+136]
	232 Move W9, 6
	233 Call <ListControlLayouts>d__75.<>m__Finally6, X0
	234 Move X8, [X31+136]
	235 NotImplemented "Instruction MOVI not yet implemented."
	236 Move W0, W31
	237 Move [X8+192], V0
	238 Move [X8+200], V0
	239 Move [X8+11], V0
	240 Move X8, [X31+136]
	241 Move X1, [X8+40]
	242 Move [X31+104], X31
	243 Move [X31+112], X31
	244 Add X0, X31, 104
	245 Move X2, X31
	246 Call InternedString..ctor, X0, X1
	247 Move X8, [X31+136]
	248 NotImplemented "Instruction LDUR not yet implemented."
	249 Move [X8+4], V0
	250 Compare X22, 0
	251 JumpIfEqual {472}
	252 Move X0, [X22+24]
	253 Compare X0, 0
	254 JumpIfEqual {473}
	255 Move X8, 0x979000
	256 Move X8, [X8+1680]
	257 Move X1, [X8]
	258 Add X8, X31, 0
	259 Call Dictionary`2<InternedString, Object>.GetEnumerator, X0
	260 Move V0, [X31]
	261 Move V1, [X31+16]
	262 Move V2, [X31+2]
	263 Move X19, [X31+136]
	264 Move TEMP, 2
	265 Not TEMP
	266 Move W8, TEMP
	267 Move [X31+48], V0
	268 Move [X31+56], V1
	269 Move [X31+5], V2
	270 Move [X19+96], V1
	271 Move [X19+104], V2
	272 Move [X19+5], V0
	273 Move [X19+16], W8
	274 Move X23, 0x979000
	275 Move X23, [X23+1696]
	276 Add X20, X22, 24
	277 Move X1, [X23]
	278 Add X0, X19, 80
	279 Call Enumerator<InternedString, Object>.MoveNext, X0
	280 Move W8, W0
	281 Move X0, [X31+136]
	282 Move TEMP, X8
	283 And TEMP, TEMP, 1
	284 Compare TEMP, 1
	285 JumpIfNotEqual {302}
	286 Compare X22, 0
	287 JumpIfEqual {461}
	288 Move X21, [X0+96]
	289 Move X19, [X0+104]
	290 Move X1, [X0+64]
	291 Move X2, [X0+72]
	292 Move X0, X20
	293 Move X3, X21
	294 Move X4, X19
	295 Move X5, X31
	296 Call Collection.IsBasedOn, X0, X1, X2
	297 Move TEMP, X0
	298 And TEMP, TEMP, 1
	299 Compare TEMP, 1
	300 JumpIfEqual {450}
	301 Move X19, [X31+136]
	302 Call <ListControlLayouts>d__75.<>m__Finally1, X0
	303 Move X8, [X31+136]
	304 NotImplemented "Instruction MOVI not yet implemented."
	305 Move [X8+96], V0
	306 Move [X8+104], V0
	307 Move [X8+5], V0
	308 Compare X22, 0
	309 JumpIfEqual {466}
	310 Move X0, [X22+32]
	311 Compare X0, 0
	312 JumpIfEqual {467}
	313 Move X8, 0x97B000
	314 Move X8, [X8+2024]
	315 Move X1, [X8]
	316 Add X8, X31, 0
	317 Call Dictionary`2<InternedString, Object>.GetEnumerator, X0
	318 Move V0, [X31]
	319 Move V1, [X31+16]
	320 Move V2, [X31+2]
	321 Move X19, [X31+136]
	322 Move TEMP, 3
	323 Not TEMP
	324 Move W8, TEMP
	325 Move [X31+48], V0
	326 Move [X31+56], V1
	327 Move [X31+5], V2
	328 Move [X19+144], V1
	329 Move [X19+152], V2
	330 Move [X19+8], V0
	331 Move [X19+16], W8
	332 Move X23, 0x97B000
	333 Move X23, [X23+2032]
	334 Add X20, X22, 24
	335 Move X1, [X23]
	336 Add X0, X19, 128
	337 Call Enumerator<InternedString, Object>.MoveNext, X0
	338 Move W8, W0
	339 Move X0, [X31+136]
	340 Move TEMP, X8
	341 And TEMP, TEMP, 1
	342 Compare TEMP, 1
	343 JumpIfNotEqual {360}
	344 Compare X22, 0
	345 JumpIfEqual {460}
	346 Move X21, [X0+144]
	347 Move X19, [X0+152]
	348 Move X1, [X0+64]
	349 Move X2, [X0+72]
	350 Move X0, X20
	351 Move X3, X21
	352 Move X4, X19
	353 Move X5, X31
	354 Call Collection.IsBasedOn, X0, X1, X2
	355 Move TEMP, X0
	356 And TEMP, TEMP, 1
	357 Compare TEMP, 1
	358 JumpIfEqual {433}
	359 Move X19, [X31+136]
	360 Call <ListControlLayouts>d__75.<>m__Finally2, X0
	361 Move X8, [X31+136]
	362 NotImplemented "Instruction MOVI not yet implemented."
	363 Move [X8+144], V0
	364 Move [X8+152], V0
	365 Move [X8+8], V0
	366 Compare X22, 0
	367 JumpIfEqual {462}
	368 Move X0, [X22+40]
	369 Compare X0, 0
	370 JumpIfEqual {463}
	371 Move X8, 0x97A000
	372 Move X8, [X8+3160]
	373 Move X1, [X8]
	374 Add X8, X31, 0
	375 Call Dictionary`2<InternedString, Object>.GetEnumerator, X0
	376 Move V0, [X31]
	377 Move V1, [X31+16]
	378 Move V2, [X31+2]
	379 Move X19, [X31+136]
	380 Move TEMP, 4
	381 Not TEMP
	382 Move W8, TEMP
	383 Move [X31+48], V0
	384 Move [X31+56], V1
	385 Move [X31+5], V2
	386 Move [X19+192], V1
	387 Move [X19+200], V2
	388 Move [X19+11], V0
	389 Move [X19+16], W8
	390 Move X23, 0x97A000
	391 Move X23, [X23+3176]
	392 Add X20, X22, 24
	393 Move X1, [X23]
	394 Add X0, X19, 176
	395 Call Enumerator<InternedString, Object>.MoveNext, X0
	396 Move W8, W0
	397 Move X0, [X31+136]
	398 Move TEMP, X8
	399 And TEMP, TEMP, 1
	400 Compare TEMP, 1
	401 JumpIfNotEqual {418}
	402 Compare X22, 0
	403 JumpIfEqual {459}
	404 Move X21, [X0+192]
	405 Move X19, [X0+200]
	406 Move X1, [X0+64]
	407 Move X2, [X0+72]
	408 Move X0, X20
	409 Move X3, X21
	410 Move X4, X19
	411 Move X5, X31
	412 Call Collection.IsBasedOn, X0, X1, X2
	413 Move TEMP, X0
	414 And TEMP, TEMP, 1
	415 Compare TEMP, 1
	416 JumpIfEqual {427}
	417 Move X19, [X31+136]
	418 Call <ListControlLayouts>d__75.<>m__Finally3, X0
	419 Move X8, [X31+136]
	420 Move W0, W31
	421 NotImplemented "Instruction MOVI not yet implemented."
	422 Move [X8+192], V0
	423 Move [X8+200], V0
	424 Move [X8+11], V0
	425 Move [X8+64], X31
	426 Move [X8+72], X31
	427 Move X0, X21
	428 Move X1, X19
	429 Move X2, X31
	430 Call InternedString.op_Implicit, X0
	431 Move X8, [X31+136]
	432 Move W9, 3
	433 Move X0, X21
	434 Move X1, X19
	435 Move X2, X31
	436 Call InternedString.op_Implicit, X0
	437 Move X8, [X31+136]
	438 Move W9, 2
	439 Move [X8+24], X0
	440 Move [X8+16], W9
	441 Move W0, 1
	442 Move X20, [X31+176]
	443 Move X19, [X31+184]
	444 Move X22, [X31+160]
	445 Move X21, [X31+168]
	446 Move X30, [X31+144]
	447 Move X23, [X31+152]
	448 Add X31, X31, 192
	449 Return X0
	450 Move X0, X21
	451 Move X1, X19
	452 Move X2, X31
	453 Call InternedString.op_Implicit, X0
	454 Move X9, [X31+136]
	455 Move X8, X0
	456 Move W0, 1
	457 Move [X9+24], X8
	458 Move [X9+16], W0
	459 Call 0x1C17F20
	460 Call 0x1C17F20
	461 Call 0x1C17F20
	462 Call 0x1C17F20
	463 Call 0x1C17F20
	464 Call 0x1C17F20
	465 Call 0x1C17F20
	466 Call 0x1C17F20
	467 Call 0x1C17F20
	468 Call 0x1C17F20
	469 Call 0x1C17F20
	470 Call 0x1C17F20
	471 Call 0x1C17F20
	472 Call 0x1C17F20
	473 Call 0x1C17F20
	474 NotImplemented "Instruction CMP not yet implemented."
	475 Call 0x3EB2AD0
	476 Move X19, [X0]
	477 Move [X31+120], X19
	478 Call 0x3EB2AE0
	479 Compare X19, 0
	480 JumpIfNotEqual {482}
	481 Move W0, W31
	482 Add X8, X31, 120
	483 Add X0, X8, 8
	484 Call 0x1BD2A2C
	485 Move X0, X19
	486 Call 0x1C17F18
	487 Compare X19, 0
	488 JumpIfNotEqual {490}
	489 Call 0x1D2D690
	490 Move X0, [X31+136]
	491 Call <ListControlLayouts>d__75.System.IDisposable.Dispose, X0
	492 Move X0, X19
	493 Call 0x1C17F18
	494 Call 0x1991590

Method: System.Void <>m__Finally1()

Disassembly:
	0x037CE51C MOV X19, X2
	0x037CE520 ADD X0, X31, 0x58
	0x037CE524 MOVZ W2, 0x58
	0x037CE528 BL 0x3EB1AC0
	0x037CE52C CBZ X20, 0x37CE564
	0x037CE530 ADD X0, X31, 0x0
	0x037CE534 ADD X1, X31, 0x58
	0x037CE538 MOVZ W2, 0x58
	0x037CE53C BL 0x3EB1AC0
	0x037CE540 ADD X1, X31, 0x0
	0x037CE544 MOV X0, X20
	0x037CE548 MOV X2, X19
	0x037CE54C MOV X3, X31
	0x037CE550 BL 0x37377C0
	0x037CE554 LDP X20, X19, [X31 + 0xC0]
	0x037CE558 LDR X30, [X31 + 0xB0]
	0x037CE55C ADD X31, X31, 0xD0
	0x037CE560 RET
	0x037CE564 BL 0x1C16F20
	0x037CE568 RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xC14000
	006 Move X20, 0x979000
	007 Move W8, [X21+536]
	008 Move X20, [X20+1688]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x979000
	015 Move X0, [X0+1688]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+536], W8
	019 Move TEMP, 0
	020 Not TEMP
	021 Move W8, TEMP
	022 Move [X19+16], W8
	023 Move X1, [X20]
	024 Add X0, X19, 80
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Call Enumerator<InternedString, Object>.Dispose, X0
	030 Return 

Method: System.Void <>m__Finally2()

Disassembly:
	0x037CE56C RET
	0x037CE570 SUB X31, X31, 0x50
	0x037CE574 STP X30, X21, [X31 + 0x30]
	0x037CE578 STP X20, X19, [X31 + 0x40]
	0x037CE57C ADRP X21, 0xC13000
	0x037CE580 LDRB W9, [X21 + 0x240]
	0x037CE584 MOV X20, X0
	0x037CE588 MOV X19, X8
	0x037CE58C TBNZ X9, 0x0, 0x37CE5B0
	0x037CE590 ADRP X0, 0x977000
	0x037CE594 LDR X0, [X0 + 0x638]
	0x037CE598 BL 0x1C16CF4
	0x037CE59C ADRP X0, 0x97A000
	0x037CE5A0 LDR X0, [X0 + 0x8C8]
	0x037CE5A4 BL 0x1C16CF4
	0x037CE5A8 MOVZ W8, 0x1
	0x037CE5AC STRB W8, [X21 + 0x240]
	0x037CE5B0 LDR W8, [X20 + 0xA0]
	0x037CE5B4 ADDS W31, W8, 0x1
	0x037CE5B8 B.NE 0x37CE5DC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xC14000
	006 Move X20, 0x97B000
	007 Move W8, [X21+537]
	008 Move X20, [X20+2056]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x97B000
	015 Move X0, [X0+2056]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+537], W8
	019 Move TEMP, 0
	020 Not TEMP
	021 Move W8, TEMP
	022 Move [X19+16], W8
	023 Move X1, [X20]
	024 Add X0, X19, 128
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Call Enumerator<InternedString, Object>.Dispose, X0
	030 Return 

Method: System.Void <>m__Finally3()

Disassembly:
	0x037CE5BC LDR X0, [X20 + 0x10]
	0x037CE5C0 CBZ X0, 0x37CE62C
	0x037CE5C4 ADRP X8, 0x97A000
	0x037CE5C8 LDR X8, [X8 + 0x8C8]
	0x037CE5CC MOV X2, X31
	0x037CE5D0 LDR X1, [X8]
	0x037CE5D4 BL 0x3737CE4
	0x037CE5D8 STR W0, [X20 + 0xA0]
	0x037CE5DC LDR X0, [X20 + 0x10]
	0x037CE5E0 CBZ X0, 0x37CE62C
	0x037CE5E4 ADRP X21, 0x977000
	0x037CE5E8 LDR X21, [X21 + 0x638]
	0x037CE5EC MOV X1, X31
	0x037CE5F0 BL 0x37367C0
	0x037CE5F4 STP X0, X1, [X31 + 0x20]
	0x037CE5F8 LDR W1, [X20 + 0xA0]
	0x037CE5FC LDR X2, [X21]
	0x037CE600 ADD X8, X31, 0x8
	0x037CE604 ADD X0, X31, 0x20
	0x037CE608 BL 0x24FC748

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xC14000
	006 Move X20, 0x97A000
	007 Move W8, [X21+538]
	008 Move X20, [X20+3168]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x97A000
	015 Move X0, [X0+3168]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+538], W8
	019 Move TEMP, 0
	020 Not TEMP
	021 Move W8, TEMP
	022 Move [X19+16], W8
	023 Move X1, [X20]
	024 Add X0, X19, 176
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Call Enumerator<InternedString, Object>.Dispose, X0
	030 Return 

Method: System.Void <>m__Finally4()

Disassembly:
	0x037CE60C LDR X8, [X31 + 0x18]
	0x037CE610 LDUR V0, [X31 + 0x8]
	0x037CE614 LDP X30, X21, [X31 + 0x30]
	0x037CE618 STR X8, [X19 + 0x10]
	0x037CE61C STR V0, [X19]
	0x037CE620 LDP X20, X19, [X31 + 0x40]
	0x037CE624 ADD X31, X31, 0x50
	0x037CE628 RET
	0x037CE62C BL 0x1C16F20
	0x037CE630 SUB X31, X31, 0x50
	0x037CE634 STP X30, X21, [X31 + 0x30]
	0x037CE638 STP X20, X19, [X31 + 0x40]
	0x037CE63C ADRP X21, 0xC13000
	0x037CE640 LDRB W9, [X21 + 0x241]
	0x037CE644 MOV X20, X0
	0x037CE648 MOV X19, X8
	0x037CE64C TBNZ X9, 0x0, 0x37CE670
	0x037CE650 ADRP X0, 0x977000
	0x037CE654 LDR X0, [X0 + 0x638]
	0x037CE658 BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xC14000
	006 Move X20, 0x979000
	007 Move W8, [X21+539]
	008 Move X20, [X20+1688]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x979000
	015 Move X0, [X0+1688]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+539], W8
	019 Move TEMP, 0
	020 Not TEMP
	021 Move W8, TEMP
	022 Move [X19+16], W8
	023 Move X1, [X20]
	024 Add X0, X19, 80
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Call Enumerator<InternedString, Object>.Dispose, X0
	030 Return 

Method: System.Void <>m__Finally5()

Disassembly:
	0x037CE65C ADRP X0, 0x97A000
	0x037CE660 LDR X0, [X0 + 0x5D8]
	0x037CE664 BL 0x1C16CF4
	0x037CE668 MOVZ W8, 0x1
	0x037CE66C STRB W8, [X21 + 0x241]
	0x037CE670 LDR W8, [X20 + 0xA4]
	0x037CE674 ADDS W31, W8, 0x1
	0x037CE678 B.NE 0x37CE69C
	0x037CE67C LDR X0, [X20 + 0x10]
	0x037CE680 CBZ X0, 0x37CE6EC
	0x037CE684 ADRP X8, 0x97A000
	0x037CE688 LDR X8, [X8 + 0x5D8]
	0x037CE68C MOV X2, X31
	0x037CE690 LDR X1, [X8]
	0x037CE694 BL 0x3737CE4
	0x037CE698 STR W0, [X20 + 0xA4]
	0x037CE69C LDR X0, [X20 + 0x10]
	0x037CE6A0 CBZ X0, 0x37CE6EC
	0x037CE6A4 ADRP X21, 0x977000
	0x037CE6A8 LDR X21, [X21 + 0x638]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xC14000
	006 Move X20, 0x97B000
	007 Move W8, [X21+540]
	008 Move X20, [X20+2056]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x97B000
	015 Move X0, [X0+2056]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+540], W8
	019 Move TEMP, 0
	020 Not TEMP
	021 Move W8, TEMP
	022 Move [X19+16], W8
	023 Move X1, [X20]
	024 Add X0, X19, 128
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Call Enumerator<InternedString, Object>.Dispose, X0
	030 Return 

Method: System.Void <>m__Finally6()

Disassembly:
	0x037CE6AC MOV X1, X31
	0x037CE6B0 BL 0x37367C0
	0x037CE6B4 STP X0, X1, [X31 + 0x20]
	0x037CE6B8 LDR W1, [X20 + 0xA4]
	0x037CE6BC LDR X2, [X21]
	0x037CE6C0 ADD X8, X31, 0x8
	0x037CE6C4 ADD X0, X31, 0x20
	0x037CE6C8 BL 0x24FC748
	0x037CE6CC LDR X8, [X31 + 0x18]
	0x037CE6D0 LDUR V0, [X31 + 0x8]
	0x037CE6D4 LDP X30, X21, [X31 + 0x30]
	0x037CE6D8 STR X8, [X19 + 0x10]
	0x037CE6DC STR V0, [X19]
	0x037CE6E0 LDP X20, X19, [X31 + 0x40]
	0x037CE6E4 ADD X31, X31, 0x50
	0x037CE6E8 RET
	0x037CE6EC BL 0x1C16F20
	0x037CE6F0 SUB X31, X31, 0x50
	0x037CE6F4 STP X30, X21, [X31 + 0x30]
	0x037CE6F8 STP X20, X19, [X31 + 0x40]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xC14000
	006 Move X20, 0x97A000
	007 Move W8, [X21+541]
	008 Move X20, [X20+3168]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x97A000
	015 Move X0, [X0+3168]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+541], W8
	019 Move TEMP, 0
	020 Not TEMP
	021 Move W8, TEMP
	022 Move [X19+16], W8
	023 Move X1, [X20]
	024 Add X0, X19, 176
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Call Enumerator<InternedString, Object>.Dispose, X0
	030 Return 

Method: System.String System.Collections.Generic.IEnumerator<System.String>.get_Current()

Disassembly:
	0x037CE6FC ADRP X21, 0xC13000
	0x037CE700 LDRB W9, [X21 + 0x242]

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void System.Collections.IEnumerator.Reset()

Disassembly:
	0x037CE704 MOV X20, X0
	0x037CE708 MOV X19, X8
	0x037CE70C TBNZ X9, 0x0, 0x37CE730
	0x037CE710 ADRP X0, 0x977000
	0x037CE714 LDR X0, [X0 + 0x638]
	0x037CE718 BL 0x1C16CF4
	0x037CE71C ADRP X0, 0x979000
	0x037CE720 LDR X0, [X0 + 0x948]
	0x037CE724 BL 0x1C16CF4
	0x037CE728 MOVZ W8, 0x1
	0x037CE72C STRB W8, [X21 + 0x242]
	0x037CE730 LDR W8, [X20 + 0xA8]
	0x037CE734 ADDS W31, W8, 0x1
	0x037CE738 B.NE 0x37CE75C

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0x926000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0x97B000
	011 Move X0, [X0+2064]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x037CE73C LDR X0, [X20 + 0x10]
	0x037CE740 CBZ X0, 0x37CE7AC

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Collections.Generic.IEnumerator`1<System.String> System.Collections.Generic.IEnumerable<System.String>.GetEnumerator()

Disassembly:
	0x037CE744 ADRP X8, 0x979000
	0x037CE748 LDR X8, [X8 + 0x948]
	0x037CE74C MOV X2, X31
	0x037CE750 LDR X1, [X8]
	0x037CE754 BL 0x3737CE4
	0x037CE758 STR W0, [X20 + 0xA8]
	0x037CE75C LDR X0, [X20 + 0x10]
	0x037CE760 CBZ X0, 0x37CE7AC
	0x037CE764 ADRP X21, 0x977000
	0x037CE768 LDR X21, [X21 + 0x638]
	0x037CE76C MOV X1, X31
	0x037CE770 BL 0x37367C0
	0x037CE774 STP X0, X1, [X31 + 0x20]
	0x037CE778 LDR W1, [X20 + 0xA8]
	0x037CE77C LDR X2, [X21]
	0x037CE780 ADD X8, X31, 0x8
	0x037CE784 ADD X0, X31, 0x20
	0x037CE788 BL 0x24FC748
	0x037CE78C LDR X8, [X31 + 0x18]
	0x037CE790 LDUR V0, [X31 + 0x8]
	0x037CE794 LDP X30, X21, [X31 + 0x30]
	0x037CE798 STR X8, [X19 + 0x10]
	0x037CE79C STR V0, [X19]
	0x037CE7A0 LDP X20, X19, [X31 + 0x40]
	0x037CE7A4 ADD X31, X31, 0x50
	0x037CE7A8 RET
	0x037CE7AC BL 0x1C16F20
	0x037CE7B0 SUB X31, X31, 0x50
	0x037CE7B4 STP X30, X21, [X31 + 0x30]
	0x037CE7B8 STP X20, X19, [X31 + 0x40]
	0x037CE7BC ADRP X21, 0xC13000
	0x037CE7C0 LDRB W9, [X21 + 0x243]
	0x037CE7C4 MOV X20, X0
	0x037CE7C8 MOV X19, X8
	0x037CE7CC TBNZ X9, 0x0, 0x37CE7F0
	0x037CE7D0 ADRP X0, 0x977000
	0x037CE7D4 LDR X0, [X0 + 0x638]
	0x037CE7D8 BL 0x1C16CF4
	0x037CE7DC ADRP X0, 0x97A000
	0x037CE7E0 LDR X0, [X0 + 0x690]
	0x037CE7E4 BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xC14000
	005 Move W8, [X20+542]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x97B000
	012 Move X0, [X0+600]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+542], W8
	016 Move W8, [X19+16]
	017 Add W31, W8, 2
	018 Move W20, [X19+32]
	019 Move X0, X31
	020 Call Environment.get_CurrentManagedThreadId
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move [X19+16], W31
	023 Move X20, X19
	024 Move X8, 0x97B000
	025 Move X8, [X8+600]
	026 Move X0, [X8]
	027 Call 0x1C17F10
	028 Move X1, X31
	029 Move X20, X0
	030 Call Object..ctor, X0
	031 Move X0, X31
	032 Move [X20+16], W31
	033 Call Environment.get_CurrentManagedThreadId
	034 Move [X20+32], W0
	035 Move X8, [X19+56]
	036 Move [X20+56], X8
	037 Move X8, [X19+48]
	038 Move X0, X20
	039 Move [X20+40], X8
	040 Move X20, [X31+16]
	041 Move X19, [X31+24]
	042 Move X30, [X31+32]
	043 Return X0

Method: System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()

Disassembly:
	0x037CE7E8 MOVZ W8, 0x1

ISIL:
	001 Call <ListControlLayouts>d__75.System.Collections.Generic.IEnumerable<System.String>.GetEnumerator, X0
	002 Return X0

