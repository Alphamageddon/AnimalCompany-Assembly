Type: UnityEngine.InputSystem.InputActionAsset

Method: System.Boolean get_enabled()

Disassembly:
	0x037375BC CMP W9, W8
	0x037375C0 B.CS 0x37375EC
	0x037375C4 LDR X11, [X10, X9, LSL #3]
	0x037375C8 CBZ X11, 0x37375F0
	0x037375CC ADD X9, X9, 0x1
	0x037375D0 CMP W9, W8
	0x037375D4 STR X19, [X11 + 0x20]
	0x037375D8 B.LT 0x37375BC
	0x037375DC LDP X20, X19, [X31 + 0x20]
	0x037375E0 LDR X30, [X31 + 0x10]
	0x037375E4 ADD X31, X31, 0x30
	0x037375E8 RET
	0x037375EC BL 0x1C16F28
	0x037375F0 BL 0x1C16F20
	0x037375F4 STR X30, [X31 - 0x20]!
	0x037375F8 STP X20, X19, [X31 + 0x10]
	0x037375FC ADRP X20, 0xCA9000
	0x03737600 LDRB W8, [X20 + 0xCF5]
	0x03737604 MOV X19, X0
	0x03737608 TBNZ X8, 0x0, 0x3737620
	0x0373760C ADRP X0, 0xA0E000
	0x03737610 LDR X0, [X0 + 0xE8]
	0x03737614 BL 0x1C16CF4
	0x03737618 MOVZ W8, 0x1
	0x0373761C STRB W8, [X20 + 0xCF5]
	0x03737620 MOV X0, X19
	0x03737624 MOV X1, X31
	0x03737628 BL 0x32277A8
	0x0373762C TBNZ X0, 0x0, 0x3737660
	0x03737630 ADRP X8, 0xA0E000
	0x03737634 LDR X8, [X8 + 0xE8]
	0x03737638 LDR X0, [X8]
	0x0373763C BL 0x22537A0
	0x03737640 CBZ X0, 0x37376A8
	0x03737644 MOV X1, X19
	0x03737648 MOV X20, X0
	0x0373764C BL 0x3737484
	0x03737650 MOV X0, X20
	0x03737654 LDP X20, X19, [X31 + 0x10]
	0x03737658 LDR X30, [X31], #0x20
	0x0373765C RET
	0x03737660 ADRP X0, 0x9C1000
	0x03737664 LDR X0, [X0 + 0x528]
	0x03737668 BL 0x1C16D08
	0x0373766C BL 0x1C16F10
	0x03737670 MOV X19, X0
	0x03737674 ADRP X0, 0xA0E000
	0x03737678 LDR X0, [X0 + 0xD8]
	0x0373767C BL 0x1C16D08
	0x03737680 MOV X1, X0
	0x03737684 MOV X0, X19
	0x03737688 MOV X2, X31
	0x0373768C BL 0x330E100
	0x03737690 ADRP X0, 0xA0E000
	0x03737694 LDR X0, [X0 + 0xF0]
	0x03737698 BL 0x1C16D08
	0x0373769C MOV X1, X0
	0x037376A0 MOV X0, X19
	0x037376A4 BL 0x1C16DEC
	0x037376A8 BL 0x1C16F20
	0x037376AC STP X30, X21, [X31 - 0x20]!
	0x037376B0 STP X20, X19, [X31 + 0x10]
	0x037376B4 CBZ X1, 0x3737704
	0x037376B8 MOV W21, W2
	0x037376BC MOV X20, X1
	0x037376C0 MOV X19, X0
	0x037376C4 BL 0x373A53C
	0x037376C8 ADDS W31, W0, 0x1
	0x037376CC B.EQ 0x37376F0
	0x037376D0 LDR X8, [X19 + 0x28]
	0x037376D4 CBZ X8, 0x373774C
	0x037376D8 LDR W9, [X8 + 0x18]
	0x037376DC CMP W0, W9
	0x037376E0 B.CS 0x3737750
	0x037376E4 ADD X8, X8, W0, 0x3, SXTW
	0x037376E8 LDR X0, [X8 + 0x20]
	0x037376EC B 0x37376F8
	0x037376F0 TBNZ X21, 0x0, 0x3737754
	0x037376F4 MOV X0, X31
	0x037376F8 LDP X20, X19, [X31 + 0x10]
	0x037376FC LDP X30, X21, [X31], #0x20
	0x03737700 RET
	0x03737704 ADRP X0, 0x9C1000
	0x03737708 LDR X0, [X0 + 0x528]
	0x0373770C BL 0x1C16D08
	0x03737710 BL 0x1C16F10
	0x03737714 MOV X19, X0
	0x03737718 ADRP X0, 0xA0E000
	0x0373771C LDR X0, [X0 + 0x90]
	0x03737720 BL 0x1C16D08
	0x03737724 MOV X1, X0
	0x03737728 MOV X0, X19
	0x0373772C MOV X2, X31
	0x03737730 BL 0x330E100
	0x03737734 ADRP X0, 0xA0E000
	0x03737738 LDR X0, [X0 + 0xF8]
	0x0373773C BL 0x1C16D08
	0x03737740 MOV X1, X0
	0x03737744 MOV X0, X19
	0x03737748 BL 0x1C16DEC
	0x0373774C BL 0x1C16F20

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+56], X23
	004 Move [X31+64], X22
	005 Move [X31+72], X21
	006 Move [X31+80], X20
	007 Move [X31+88], X19
	008 Move X20, 0xCAA000
	009 Move X23, 0xA0F000
	010 Move W8, [X20+3310]
	011 Move X23, [X23+16]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {31}
	017 Move X0, 0xA0F000
	018 Move X0, [X0+24]
	019 Call 0x1C17CF4
	020 Move X0, 0xA0F000
	021 Move X0, [X0+32]
	022 Call 0x1C17CF4
	023 Move X0, 0xA0F000
	024 Move X0, [X0+40]
	025 Call 0x1C17CF4
	026 Move X0, 0xA0F000
	027 Move X0, [X0+16]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X20+3310], W8
	031 Move X21, 0xA0F000
	032 Move X22, 0xA0F000
	033 Move X20, 0xA0F000
	034 Move X21, [X21+32]
	035 Move X22, [X22+40]
	036 Move X20, [X20+24]
	037 Move X0, X19
	038 Move [X31+24], X31
	039 Move [X31+32], X31
	040 Move [X31+40], X31
	041 Call InputActionAsset.get_actionMaps, X0
	042 Move X9, [X23]
	043 Move [X31+8], X0
	044 Move [X31+16], X1
	045 Add X8, X31, 24
	046 Add X0, X31, 8
	047 Move X1, X9
	048 Call ReadOnlyArray`1<Object>.GetEnumerator, X0
	049 Move X1, [X21]
	050 Add X0, X31, 24
	051 Call Enumerator<Object>.MoveNext, X0
	052 Move W19, W0
	053 Move TEMP, X0
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfNotEqual {65}
	057 Move X1, [X22]
	058 Add X0, X31, 24
	059 Call Enumerator<Object>.get_Current, X0
	060 Compare X0, 0
	061 JumpIfEqual {80}
	062 Move W8, [X0+72]
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move W21, 4
	065 Move W21, 5
	066 Move X1, [X20]
	067 Add X0, X31, 24
	068 Call Enumerator<Object>.Dispose, X0
	069 NotImplemented "Instruction CMP not yet implemented."
	070 NotImplemented "Instruction CSET not yet implemented."
	071 And W0, W19, W8
	072 Move X20, [X31+80]
	073 Move X19, [X31+88]
	074 Move X22, [X31+64]
	075 Move X21, [X31+72]
	076 Move X30, [X31+48]
	077 Move X23, [X31+56]
	078 Add X31, X31, 96
	079 Return X0
	080 Call 0x1C17F20
	081 Move X19, X0
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Move X0, X19
	084 Call 0x3EB2AD0
	085 Move X20, [X0]
	086 Call 0x3EB2AE0
	087 Move X8, 0xA0F000
	088 Move X8, [X8+24]
	089 Add X0, X31, 24
	090 Move X1, [X8]
	091 Call Enumerator<Object>.Dispose, X0
	092 Compare X20, 0
	093 JumpIfNotEqual {97}
	094 Move W19, W31
	095 Move W21, W31
	096 Move X20, X31
	097 Move X0, X20
	098 Call 0x1C17F18
	099 Move X19, X0
	100 Move X8, 0xA0F000
	101 Move X8, [X8+24]
	102 Move X1, [X8]
	103 Add X0, X31, 24
	104 Call Enumerator<Object>.Dispose, X0
	105 Compare X20, 0
	106 JumpIfNotEqual {109}
	107 Move X0, X19
	108 Call 0x1D2D690
	109 Move X0, X20
	110 Call 0x1C17F18
	111 Call 0x1991590

Method: UnityEngine.InputSystem.Utilities.ReadOnlyArray`1<UnityEngine.InputSystem.InputActionMap> get_actionMaps()

Disassembly:
	0x03737750 BL 0x1C16F28
	0x03737754 ADRP X0, 0xA0E000
	0x03737758 LDR X0, [X0 + 0x88]
	0x0373775C BL 0x1C16D08
	0x03737760 MOV X1, X20
	0x03737764 MOV X2, X19
	0x03737768 MOV X3, X31
	0x0373776C BL 0x3227BD4
	0x03737770 MOV X19, X0
	0x03737774 ADRP X0, 0x9C4000
	0x03737778 LDR X0, [X0 + 0x578]
	0x0373777C BL 0x1C16D08
	0x03737780 BL 0x1C16F10
	0x03737784 MOV X20, X0
	0x03737788 ADRP X0, 0xA0E000
	0x0373778C LDR X0, [X0 + 0x90]
	0x03737790 BL 0x1C16D08
	0x03737794 MOV X2, X0
	0x03737798 MOV X0, X20
	0x0373779C MOV X1, X19
	0x037377A0 MOV X3, X31
	0x037377A4 BL 0x330E16C
	0x037377A8 ADRP X0, 0xA0E000
	0x037377AC LDR X0, [X0 + 0xF8]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xCAA000
	007 Move X20, 0xA0F000
	008 Move W8, [X21+3311]
	009 Move X20, [X20+48]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xA0F000
	016 Move X0, [X0+48]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+3311], W8
	020 Move X1, [X19+24]
	021 Move X2, [X20]
	022 Add X0, X31, 0
	023 Move [X31], X31
	024 Move [X31+8], X31
	025 Call ReadOnlyArray`1<Object>..ctor, X0, X1
	026 Move X0, [X31]
	027 Move X1, [X31+8]
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X30, [X31+16]
	031 Move X21, [X31+24]
	032 Add X31, X31, 48
	033 Return X0

Method: UnityEngine.InputSystem.Utilities.ReadOnlyArray`1<UnityEngine.InputSystem.InputControlScheme> get_controlSchemes()

Disassembly:
	0x037377C0 SUB X31, X31, 0xF0
	0x037377C4 STR X30, [X31 + 0xB0]
	0x037377C8 STP X24, X23, [X31 + 0xC0]
	0x037377CC STP X22, X21, [X31 + 0xD0]
	0x037377D0 STP X20, X19, [X31 + 0xE0]
	0x037377D4 ADRP X23, 0xCA9000
	0x037377D8 ADRP X22, 0xA0E000
	0x037377DC LDRB W8, [X23 + 0xCF6]
	0x037377E0 LDR X22, [X22 + 0x100]
	0x037377E4 MOV X19, X2
	0x037377E8 MOV X20, X1
	0x037377EC MOV X21, X0
	0x037377F0 TBNZ X8, 0x0, 0x3737808
	0x037377F4 ADRP X0, 0xA0E000
	0x037377F8 LDR X0, [X0 + 0x100]
	0x037377FC BL 0x1C16CF4
	0x03737800 MOVZ W8, 0x1
	0x03737804 STRB W8, [X23 + 0xCF6]
	0x03737808 LDR X0, [X21 + 0x18]
	0x0373780C LDR X1, [X22]
	0x03737810 BL 0x217B258
	0x03737814 CMP W0, 0x1
	0x03737818 B.LT 0x3737884
	0x0373781C MOV W22, W0

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xCAA000
	007 Move X20, 0xA0F000
	008 Move W8, [X21+3312]
	009 Move X20, [X20+56]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xA0F000
	016 Move X0, [X0+56]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+3312], W8
	020 Move X1, [X19+32]
	021 Move X2, [X20]
	022 Add X0, X31, 0
	023 Move [X31], X31
	024 Move [X31+8], X31
	025 Call ReadOnlyArray`1<InputControlScheme>..ctor, X0, X1
	026 Move X0, [X31]
	027 Move X1, [X31+8]
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X30, [X31+16]
	031 Move X21, [X31+24]
	032 Add X31, X31, 48
	033 Return X0

Method: System.Collections.Generic.IEnumerable`1<UnityEngine.InputSystem.InputBinding> get_bindings()

Disassembly:
	0x03737820 MOV W24, W31
	0x03737824 LDR X8, [X21 + 0x18]
	0x03737828 CBZ X8, 0x37378A4
	0x0373782C LDR W9, [X8 + 0x18]
	0x03737830 CMP W24, W9
	0x03737834 B.CS 0x37378A8
	0x03737838 ADD X8, X8, W24, 0x3, SXTW
	0x0373783C LDR X23, [X8 + 0x20]
	0x03737840 ADD X0, X31, 0x58
	0x03737844 MOVZ W2, 0x58
	0x03737848 MOV X1, X20
	0x0373784C BL 0x3EB1AC0
	0x03737850 CBZ X23, 0x37378A4
	0x03737854 ADD X0, X31, 0x0
	0x03737858 ADD X1, X31, 0x58
	0x0373785C MOVZ W2, 0x58
	0x03737860 BL 0x3EB1AC0
	0x03737864 ADD X1, X31, 0x0
	0x03737868 MOV X0, X23
	0x0373786C MOV X2, X19
	0x03737870 BL 0x37378AC
	0x03737874 TBZ X0, 0x1F, 0x373788C
	0x03737878 ADD W24, W24, 0x1
	0x0373787C CMP W22, W24
	0x03737880 B.NE 0x3737824
	0x03737884 MOVN W0, 0x0
	0x03737888 STR X31, [X19]
	0x0373788C LDP X20, X19, [X31 + 0xE0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xCAA000
	006 Move X21, 0xA0F000
	007 Move W8, [X20+3313]
	008 Move X21, [X21+64]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xA0F000
	015 Move X0, [X0+64]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3313], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move X1, X31
	022 Move X20, X0
	023 Call Object..ctor, X0
	024 Move TEMP, 1
	025 Not TEMP
	026 Move W8, TEMP
	027 Move X0, X31
	028 Move [X20+16], W8
	029 Call Environment.get_CurrentManagedThreadId
	030 Move [X20+112], W0
	031 Move [X20+120], X19
	032 Move X0, X20
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Move X21, [X31+40]
	037 Return X0

Method: System.Nullable`1<UnityEngine.InputSystem.InputBinding> get_bindingMask()

Disassembly:
	0x037378C4 MOV X19, X2
	0x037378C8 MOV X21, X1
	0x037378CC MOV X20, X0
	0x037378D0 TBNZ X8, 0x0, 0x37378E8

ISIL:
	001 Add X1, X0, 48
	002 Move W2, 96
	003 Move X0, X8
	004 Call 0x3EB2AC0
	005 Return X0

Method: System.Void set_bindingMask(System.Nullable`1<UnityEngine.InputSystem.InputBinding> value)

Disassembly:
	0x037378D4 ADRP X0, 0xA0E000
	0x037378D8 LDR X0, [X0 + 0x108]
	0x037378DC BL 0x1C16CF4
	0x037378E0 MOVZ W8, 0x1
	0x037378E4 STRB W8, [X22 + 0xD1B]
	0x037378E8 ADD X0, X31, 0x58
	0x037378EC MOVZ W2, 0x58
	0x037378F0 MOV X1, X21
	0x037378F4 STP X31, X31, [X31 + 0xB0]
	0x037378F8 BL 0x3EB1AC0
	0x037378FC ADD X1, X31, 0x58
	0x03737900 MOV X0, X20
	0x03737904 BL 0x373C05C
	0x03737908 ADDS W31, W0, 0x1
	0x0373790C B.EQ 0x3737924
	0x03737910 MOV W21, W0
	0x03737914 LDR X0, [X20 + 0x50]
	0x03737918 CBZ X0, 0x373792C
	0x0373791C STR X0, [X19]
	0x03737920 B 0x373796C
	0x03737924 STR X31, [X19]
	0x03737928 B 0x3737974
	0x0373792C MOV X0, X20
	0x03737930 BL 0x373A0A8
	0x03737934 ADRP X8, 0xA0E000
	0x03737938 LDR X8, [X8 + 0x108]
	0x0373793C STP X0, X1, [X31 + 0xB0]
	0x03737940 ADD X0, X31, 0xB0
	0x03737944 MOV W1, W21
	0x03737948 LDR X2, [X8]
	0x0373794C ADD X8, X31, 0x0
	0x03737950 BL 0x24FC334
	0x03737954 LDR X1, [X31 + 0x30]
	0x03737958 MOV X0, X20
	0x0373795C MOV W2, W31
	0x03737960 BL 0x37376AC
	0x03737964 STR X0, [X19]
	0x03737968 CBZ X0, 0x3737988
	0x0373796C MOV W1, W21
	0x03737970 BL 0x3735C24
	0x03737974 LDP X20, X19, [X31 + 0xE0]
	0x03737978 LDP X22, X21, [X31 + 0xD0]
	0x0373797C LDR X30, [X31 + 0xC0]
	0x03737980 ADD X31, X31, 0xF0
	0x03737984 RET
	0x03737988 BL 0x1C16F20
	0x0373798C SUB X31, X31, 0x40
	0x03737990 STP X30, X23, [X31 + 0x10]
	0x03737994 STP X22, X21, [X31 + 0x20]
	0x03737998 STP X20, X19, [X31 + 0x30]
	0x0373799C STP X31, X31, [X31]
	0x037379A0 CBZ X1, 0x3737AAC
	0x037379A4 LDR X8, [X0 + 0x18]
	0x037379A8 MOV X19, X0
	0x037379AC CBZ X8, 0x3737A8C
	0x037379B0 MOV X20, X1
	0x037379B4 MOV W21, W2
	0x037379B8 MOVZ W1, 0x2D
	0x037379BC MOV X0, X20
	0x037379C0 MOV X2, X31
	0x037379C4 BL 0x322BD74
	0x037379C8 TBZ X0, 0x0, 0x3737A34
	0x037379CC ADD X1, X31, 0x0
	0x037379D0 MOV X0, X20
	0x037379D4 MOV X2, X31
	0x037379D8 BL 0x3377064
	0x037379DC TBZ X0, 0x0, 0x3737A34
	0x037379E0 LDR X8, [X19 + 0x18]
	0x037379E4 CBZ X8, 0x3737A84
	0x037379E8 MOV X23, X31
	0x037379EC LDR W9, [X8 + 0x18]
	0x037379F0 CMP W23, W9
	0x037379F4 B.GE 0x3737A34
	0x037379F8 CMP W23, W9

ISIL:
	001 Subtract X31, X31, 464
	002 Move [X31+384], X29
	003 Move [X31+400], X30
	004 Move [X31+408], X25
	005 Move [X31+416], X24
	006 Move [X31+424], X23
	007 Move [X31+432], X22
	008 Move [X31+440], X21
	009 Move [X31+448], X20
	010 Move [X31+456], X19
	011 NotImplemented "Instruction MRS not yet implemented."
	012 Move X8, [X22+40]
	013 Move X21, 0xCAA000
	014 Move X19, X1
	015 Move X20, X0
	016 Move [X31+376], X8
	017 Move W8, [X21+3314]
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {30}
	022 Move X0, 0xA0E000
	023 Move X0, [X0+3912]
	024 Call 0x1C17CF4
	025 Move X0, 0xA0E000
	026 Move X0, [X0+3928]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X21+3314], W8
	030 Move X21, X20
	031 Add X21, X21, 48
	032 Move W23, [X21]
	033 Add X0, X31, 280
	034 Move W2, 95
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Add X1, X21, 1
	037 NotImplemented "Instruction CSET not yet implemented."
	038 Call 0x3EB2AC0
	039 Move X1, X19
	040 Move W25, [X1+1]
	041 Add X0, X31, 184
	042 Move W2, 95
	043 Call 0x3EB2AC0
	044 NotImplemented "Instruction CMP not yet implemented."
	045 NotImplemented "Instruction CSET not yet implemented."
	046 Xor W8, W24, W8
	047 Move TEMP, X8
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfEqual {71}
	051 Compare W23, 0
	052 JumpIfEqual {78}
	053 Add X8, X31, 280
	054 Add X1, X8, 7
	055 Add X0, X31, 96
	056 Move W2, 88
	057 Call 0x3EB2AC0
	058 Add X8, X31, 184
	059 Add X1, X8, 7
	060 Add X0, X31, 8
	061 Move W2, 88
	062 Call 0x3EB2AC0
	063 Add X0, X31, 96
	064 Add X1, X31, 8
	065 Move X2, X31
	066 Call InputBinding.op_Equality, X0, X1
	067 Move TEMP, X0
	068 And TEMP, TEMP, 1
	069 Compare TEMP, 1
	070 JumpIfEqual {78}
	071 Move W2, 96
	072 Move X0, X21
	073 Move X1, X19
	074 Call 0x3EB2B30
	075 Move W1, 1
	076 Move X0, X20
	077 Call InputActionAsset.ReResolveIfNecessary, X0, X1
	078 Move X8, [X22+40]
	079 Move X9, [X31+376]
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Move X20, [X31+448]
	082 Move X19, [X31+456]
	083 Move X22, [X31+432]
	084 Move X21, [X31+440]
	085 Move X24, [X31+416]
	086 Move X23, [X31+424]
	087 Move X30, [X31+400]
	088 Move X25, [X31+408]
	089 Move X29, [X31+384]
	090 Add X31, X31, 464
	091 Return 
	092 Call 0x3EB2B20

Method: System.Nullable`1<UnityEngine.InputSystem.Utilities.ReadOnlyArray`1<UnityEngine.InputSystem.InputDevice>> get_devices()

Disassembly:
	0x03737A3C MOV X23, X31
	0x03737A40 LDR W9, [X8 + 0x18]
	0x03737A44 CMP W23, W9
	0x03737A48 B.GE 0x3737A88
	0x03737A4C CMP W23, W9
	0x03737A50 B.CS 0x3737AA8
	0x03737A54 ADD X8, X8, X23, 0x3, LSL
	0x03737A58 LDR X22, [X8 + 0x20]
	0x03737A5C CBZ X22, 0x3737A84
	0x03737A60 LDR X1, [X22 + 0x10]
	0x03737A64 MOVZ W2, 0x3
	0x03737A68 MOV X0, X20
	0x03737A6C MOV X3, X31

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+32], X30
	003 Move [X31+40], X19
	004 Move X19, X8
	005 Add X0, X0, 160
	006 Add X8, X31, 8
	007 Call DeviceArray.Get, X0
	008 Move X8, [X31+24]
	009 NotImplemented "Instruction LDUR not yet implemented."
	010 Move [X19+16], X8
	011 Move [X19], V0
	012 Move X30, [X31+32]
	013 Move X19, [X31+40]
	014 Add X31, X31, 48
	015 Return X0

Method: System.Void set_devices(System.Nullable`1<UnityEngine.InputSystem.Utilities.ReadOnlyArray`1<UnityEngine.InputSystem.InputDevice>> value)

Disassembly:
	0x03737B18 LDR X0, [X0 + 0x578]
	0x03737B1C BL 0x1C16D08
	0x03737B20 BL 0x1C16F10
	0x03737B24 MOV X1, X19
	0x03737B28 MOV X2, X31
	0x03737B2C MOV X20, X0
	0x03737B30 BL 0x3314A68
	0x03737B34 ADRP X0, 0xA0E000
	0x03737B38 LDR X0, [X0 + 0x118]
	0x03737B3C BL 0x1C16D08
	0x03737B40 MOV X1, X0
	0x03737B44 MOV X0, X20
	0x03737B48 BL 0x1C16DEC
	0x03737B4C SUB X31, X31, 0x20
	0x03737B50 STP X30, X19, [X31 + 0x10]
	0x03737B54 MOV X19, X0
	0x03737B58 LDR X0, [X0 + 0x18]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+32], X30
	003 Move [X31+40], X19
	004 Move X8, [X1+16]
	005 Move V0, [X1]
	006 Move X19, X0
	007 Add X0, X0, 160
	008 Add X1, X31, 0
	009 Move [X31+16], X8
	010 Move [X31], V0
	011 Call DeviceArray.Set, X0, X1
	012 Move TEMP, X0
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfNotEqual {19}
	016 Move X0, X19
	017 Move W1, W31
	018 Call InputActionAsset.ReResolveIfNecessary, X0, X1
	019 Move X30, [X31+32]
	020 Move X19, [X31+40]
	021 Add X31, X31, 48
	022 Return 

Method: UnityEngine.InputSystem.InputAction get_Item(System.String actionNameOrId)

Disassembly:
	0x03737CD8 RET
	0x03737CDC BL 0x1C16F20
	0x03737CE0 BL 0x1C16F28
	0x03737CE4 STR X30, [X31 - 0x30]!
	0x03737CE8 STP X22, X21, [X31 + 0x10]
	0x03737CEC STP X20, X19, [X31 + 0x20]
	0x03737CF0 MOV X19, X1
	0x03737CF4 MOV X20, X0
	0x03737CF8 MOV X0, X1
	0x03737CFC MOV X1, X31
	0x03737D00 BL 0x32277A8
	0x03737D04 TBNZ X0, 0x0, 0x3737D74
	0x03737D08 LDR X8, [X20 + 0x20]
	0x03737D0C CBZ X8, 0x3737D58
	0x03737D10 MOV X21, X31
	0x03737D14 MOVZ W22, 0x20
	0x03737D18 LDR W9, [X8 + 0x18]
	0x03737D1C CMP X21, W9, SXTW
	0x03737D20 B.GE 0x3737D58
	0x03737D24 CMP X21, X9
	0x03737D28 B.CS 0x3737D70
	0x03737D2C LDR X1, [X8, X22, LSL]
	0x03737D30 MOVZ W2, 0x3
	0x03737D34 MOV X0, X19
	0x03737D38 MOV X3, X31
	0x03737D3C BL 0x322590C
	0x03737D40 CBZ W0, 0x3737D5C
	0x03737D44 LDR X8, [X20 + 0x20]
	0x03737D48 ADD X21, X21, 0x1
	0x03737D4C ADD X22, X22, 0x18
	0x03737D50 CBNZ X8, 0x3737D18
	0x03737D54 BL 0x1C16F20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W2, W31
	005 Move X20, X1
	006 Move X19, X0
	007 Call InputActionAsset.FindAction, X0, X1, X2
	008 Compare X0, 0
	009 JumpIfEqual {14}
	010 Move X20, [X31+16]
	011 Move X19, [X31+24]
	012 Move X30, [X31+32]
	013 Return X0
	014 Move X0, 0xA0F000
	015 Move X0, [X0+120]
	016 Call 0x1C17D08
	017 Move X1, X20
	018 Move X2, X19
	019 Move X3, X31
	020 Call String.Format, X0, X1, X2
	021 Move X19, X0
	022 Move X0, 0x9C0000
	023 Move X0, [X0+120]
	024 Call 0x1C17D08
	025 Call 0x1C17F10
	026 Move X1, X19
	027 Move X2, X31
	028 Move X20, X0
	029 Call KeyNotFoundException..ctor, X0, X1
	030 Move X0, 0xA0F000
	031 Move X0, [X0+128]
	032 Call 0x1C17D08
	033 Move X1, X0
	034 Move X0, X20
	035 Call 0x1C17DEC

Method: System.String ToJson()

Disassembly:
	0x03738074 STP V0, V0, [X31 + 0x10]
	0x03738078 STR V0, [X31]
	0x0373807C CBZ X1, 0x3738124
	0x03738080 LDR X22, [X0 + 0x30]
	0x03738084 CBZ X22, 0x3738100
	0x03738088 LDR X8, [X22 + 0x18]
	0x0373808C CMP W8, 0x1
	0x03738090 B.LT 0x3738100
	0x03738094 MOV X19, X1
	0x03738098 MOV X23, X31
	0x0373809C AND X8, X8, 0x0
	0x037380A0 ADD X20, X22, 0x20
	0x037380A4 CMP X23, W8, UXTW
	0x037380A8 B.CS 0x3738120
	0x037380AC ADD X0, X31, 0x0
	0x037380B0 MOVZ W2, 0x58
	0x037380B4 MOV X1, X20
	0x037380B8 BL 0x3EB1B30
	0x037380BC ADD X0, X31, 0x0
	0x037380C0 MOV X1, X31
	0x037380C4 BL 0x374B644
	0x037380C8 MOV X1, X31
	0x037380CC MOV X21, X0
	0x037380D0 BL 0x32277A8
	0x037380D4 TBNZ X0, 0x0, 0x37380EC
	0x037380D8 MOV X0, X21
	0x037380DC MOV X1, X19
	0x037380E0 MOV X2, X31
	0x037380E4 BL 0x3777114
	0x037380E8 TBNZ X0, 0x0, 0x3738118
	0x037380EC LDR W8, [X22 + 0x18]
	0x037380F0 ADD X23, X23, 0x1
	0x037380F4 ADD X20, X20, 0x58
	0x037380F8 CMP X23, W8, SXTW
	0x037380FC B.LT 0x37380A4
	0x03738100 MOV W0, W31
	0x03738104 LDP X20, X19, [X31 + 0x80]
	0x03738108 LDP X22, X21, [X31 + 0x70]
	0x0373810C LDP X30, X23, [X31 + 0x60]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+40], X21
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move X20, 0xCA9000
	007 Move X21, 0xA0E000
	008 Move W8, [X20+3315]
	009 Move X21, [X21+168]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xA0E000
	016 Move X0, [X0+168]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+3315], W8
	020 Move X0, X19
	021 Move X1, X31
	022 Call Object.get_name, X0
	023 Move X8, [X19+24]
	024 Move X20, X0
	025 Move X0, X8
	026 Call WriteFileJson.FromMaps, X0
	027 Move X8, [X19+32]
	028 Move X19, X0
	029 Move X1, X31
	030 Move X0, X8
	031 Call SchemeJson.ToJson, X0
	032 Move X8, [X21]
	033 Move [X31+24], X0
	034 Add X1, X31, 8
	035 Move [X31+8], X20
	036 Move [X31+16], X19
	037 Move X0, X8
	038 Call 0x1C17E04
	039 Move W1, 1
	040 Move X2, X31
	041 Call JsonUtility.ToJson, X0, X1
	042 Move X20, [X31+48]
	043 Move X19, [X31+56]
	044 Move X30, [X31+32]
	045 Move X21, [X31+40]
	046 Add X31, X31, 64
	047 Return X0

Method: System.Void LoadFromJson(System.String json)

Disassembly:
	0x03738484 B.LT 0x37384A0
	0x03738488 MOV X1, X0
	0x0373848C LDR X0, [X0 + 0x60]
	0x03738490 CBZ X0, 0x37384A8
	0x03738494 MOV X2, X31
	0x03738498 LDR X30, [X31], #0x10
	0x0373849C B 0x374BC9C
	0x037384A0 LDR X30, [X31], #0x10
	0x037384A4 RET
	0x037384A8 BL 0x1C16F20
	0x037384AC STP X30, X21, [X31 - 0x20]!
	0x037384B0 STP X20, X19, [X31 + 0x10]
	0x037384B4 ADRP X21, 0xCA8000
	0x037384B8 LDRB W8, [X21 + 0xCFB]
	0x037384BC MOV X20, X1
	0x037384C0 MOV X19, X0
	0x037384C4 TBNZ X8, 0x0, 0x37384DC
	0x037384C8 ADRP X0, 0x9BB000
	0x037384CC LDR X0, [X0 + 0x598]
	0x037384D0 BL 0x1C16CF4
	0x037384D4 MOVZ W8, 0x1
	0x037384D8 STRB W8, [X21 + 0xCFB]
	0x037384DC CBZ X20, 0x3738528
	0x037384E0 LDR X8, [X20 + 0xC8]
	0x037384E4 CBZ X8, 0x3738528
	0x037384E8 LDR X9, [X8 + 0x50]
	0x037384EC CMP X9, X20
	0x037384F0 B.EQ 0x3738528
	0x037384F4 ADRP X9, 0x9BB000
	0x037384F8 LDR X9, [X9 + 0x598]
	0x037384FC LDR X20, [X8 + 0x20]
	0x03738500 LDR X0, [X9]
	0x03738504 LDR W9, [X0 + 0xE0]
	0x03738508 CBNZ W9, 0x3738510
	0x0373850C BL 0x1C16DFC
	0x03738510 MOV X0, X20
	0x03738514 MOV X1, X19
	0x03738518 LDP X20, X19, [X31 + 0x10]
	0x0373851C MOV X2, X31
	0x03738520 LDP X30, X21, [X31], #0x20
	0x03738524 B 0x3C3883C
	0x03738528 LDP X20, X19, [X31 + 0x10]
	0x0373852C MOV W0, W31
	0x03738530 LDP X30, X21, [X31], #0x20
	0x03738534 RET
	0x03738538 STP X30, X21, [X31 - 0x20]!
	0x0373853C STP X20, X19, [X31 + 0x10]
	0x03738540 ADRP X20, 0xCA8000
	0x03738544 ADRP X21, 0xA0D000
	0x03738548 LDRB W8, [X20 + 0xCFC]
	0x0373854C LDR X21, [X21 + 0x150]
	0x03738550 MOV X19, X0

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+64], X30
	003 Move [X31+72], X21
	004 Move [X31+80], X20
	005 Move [X31+88], X19
	006 Move X21, 0xCA9000
	007 Move W8, [X21+3316]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xA0E000
	015 Move X0, [X0+208]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3316], W8
	019 Move X0, X20
	020 Move X1, X31
	021 Call String.IsNullOrEmpty, X0
	022 Move TEMP, X0
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {45}
	026 Move X8, 0xA0E000
	027 Move X8, [X8+208]
	028 Move X0, X20
	029 Move X1, [X8]
	030 Add X8, X31, 8
	031 Call JsonUtility.FromJson, X0
	032 NotImplemented "Instruction LDUR not yet implemented."
	033 Move X8, [X31+24]
	034 Add X0, X31, 32
	035 Move X1, X19
	036 Move [X31+2], V0
	037 Move [X31+48], X8
	038 Call ReadFileJson.ToAsset, X0, X1
	039 Move X20, [X31+80]
	040 Move X19, [X31+88]
	041 Move X30, [X31+64]
	042 Move X21, [X31+72]
	043 Add X31, X31, 96
	044 Return 
	045 Move X0, 0x9C1000
	046 Move X0, [X0+1320]
	047 Call 0x1C17D08
	048 Call 0x1C17F10
	049 Move X19, X0
	050 Move X0, 0xA0E000
	051 Move X0, [X0+216]
	052 Call 0x1C17D08
	053 Move X1, X0
	054 Move X0, X19
	055 Move X2, X31
	056 Call ArgumentNullException..ctor, X0, X1
	057 Move X0, 0xA0E000
	058 Move X0, [X0+224]
	059 Call 0x1C17D08
	060 Move X1, X0
	061 Move X0, X19
	062 Call 0x1C17DEC

Method: UnityEngine.InputSystem.InputActionAsset FromJson(System.String json)

Disassembly:
	0x037385F4 MOVZ W8, 0x1
	0x037385F8 STRB W8, [X21 + 0xCFD]
	0x037385FC LDR X0, [X19 + 0x18]
	0x03738600 LDR X1, [X20]
	0x03738604 BL 0x217B258
	0x03738608 CMP W0, 0x1
	0x0373860C B.LT 0x3738634
	0x03738610 LDR X8, [X19 + 0x18]
	0x03738614 CBZ X8, 0x3738640
	0x03738618 LDR W9, [X8 + 0x18]
	0x0373861C CBZ W9, 0x3738644
	0x03738620 LDR X0, [X8 + 0x20]
	0x03738624 CBZ X0, 0x3738640
	0x03738628 LDP X20, X19, [X31 + 0x10]
	0x0373862C LDP X30, X21, [X31], #0x20
	0x03738630 B 0x3738648
	0x03738634 LDP X20, X19, [X31 + 0x10]
	0x03738638 LDP X30, X21, [X31], #0x20
	0x0373863C RET
	0x03738640 BL 0x1C16F20
	0x03738644 BL 0x1C16F28
	0x03738648 SUB X31, X31, 0x70
	0x0373864C STP X30, X21, [X31 + 0x50]
	0x03738650 STP X20, X19, [X31 + 0x60]
	0x03738654 ADRP X21, 0xCA8000
	0x03738658 ADRP X20, 0x9BB000
	0x0373865C LDRB W8, [X21 + 0xD17]
	0x03738660 LDR X20, [X20 + 0x598]
	0x03738664 MOV X19, X0
	0x03738668 TBNZ X8, 0x0, 0x37386B0
	0x0373866C ADRP X0, 0xA0D000
	0x03738670 LDR X0, [X0 + 0x18]
	0x03738674 BL 0x1C16CF4
	0x03738678 ADRP X0, 0xA0D000
	0x0373867C LDR X0, [X0 + 0x20]
	0x03738680 BL 0x1C16CF4
	0x03738684 ADRP X0, 0xA0D000
	0x03738688 LDR X0, [X0 + 0x28]
	0x0373868C BL 0x1C16CF4
	0x03738690 ADRP X0, 0x9BB000
	0x03738694 LDR X0, [X0 + 0x598]
	0x03738698 BL 0x1C16CF4
	0x0373869C ADRP X0, 0xA0D000
	0x037386A0 LDR X0, [X0 + 0x10]
	0x037386A4 BL 0x1C16CF4
	0x037386A8 MOVZ W8, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xCA9000
	005 Move W8, [X20+3317]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xA0E000
	012 Move X0, [X0+232]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3317], W8
	016 Move X0, X19
	017 Move X1, X31
	018 Call String.IsNullOrEmpty, X0
	019 Move TEMP, X0
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {37}
	023 Move X8, 0xA0E000
	024 Move X8, [X8+232]
	025 Move X0, [X8]
	026 Call 0x22547A0
	027 Compare X0, 0
	028 JumpIfEqual {55}
	029 Move X1, X19
	030 Move X20, X0
	031 Call InputActionAsset.LoadFromJson, X0, X1
	032 Move X0, X20
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Return X0
	037 Move X0, 0x9C1000
	038 Move X0, [X0+1320]
	039 Call 0x1C17D08
	040 Call 0x1C17F10
	041 Move X19, X0
	042 Move X0, 0xA0E000
	043 Move X0, [X0+216]
	044 Call 0x1C17D08
	045 Move X1, X0
	046 Move X0, X19
	047 Move X2, X31
	048 Call ArgumentNullException..ctor, X0, X1
	049 Move X0, 0xA0E000
	050 Move X0, [X0+240]
	051 Call 0x1C17D08
	052 Move X1, X0
	053 Move X0, X19
	054 Call 0x1C17DEC
	055 Call 0x1C17F20

Method: UnityEngine.InputSystem.InputAction FindAction(System.String actionNameOrId, System.Boolean throwIfNotFound = False)

Disassembly:
	0x03737D58 MOVN W21, 0x0
	0x03737D5C MOV W0, W21
	0x03737D60 LDP X20, X19, [X31 + 0x20]
	0x03737D64 LDP X22, X21, [X31 + 0x10]
	0x03737D68 LDR X30, [X31], #0x30
	0x03737D6C RET
	0x03737D70 BL 0x1C16F28
	0x03737D74 ADRP X0, 0x9C1000
	0x03737D78 LDR X0, [X0 + 0x528]
	0x03737D7C BL 0x1C16D08
	0x03737D80 BL 0x1C16F10
	0x03737D84 MOV X19, X0
	0x03737D88 ADRP X0, 0x9C4000
	0x03737D8C LDR X0, [X0 + 0x588]
	0x03737D90 BL 0x1C16D08
	0x03737D94 MOV X1, X0
	0x03737D98 MOV X0, X19
	0x03737D9C MOV X2, X31
	0x03737DA0 BL 0x330E100
	0x03737DA4 ADRP X0, 0xA0E000
	0x03737DA8 LDR X0, [X0 + 0x128]
	0x03737DAC BL 0x1C16D08
	0x03737DB0 MOV X1, X0
	0x03737DB4 MOV X0, X19
	0x03737DB8 BL 0x1C16DEC
	0x03737DBC SUB X31, X31, 0x70
	0x03737DC0 STR X30, [X31 + 0x40]
	0x03737DC4 STP X22, X21, [X31 + 0x50]
	0x03737DC8 STP X20, X19, [X31 + 0x60]
	0x03737DCC ADRP X22, 0xCA9000
	0x03737DD0 LDRB W9, [X22 + 0xCF7]
	0x03737DD4 MOV X21, X1
	0x03737DD8 MOV X20, X0
	0x03737DDC MOV X19, X8
	0x03737DE0 TBNZ X9, 0x0, 0x3737DF8
	0x03737DE4 ADRP X0, 0x9E4000
	0x03737DE8 LDR X0, [X0 + 0xDE8]
	0x03737DEC BL 0x1C16CF4
	0x03737DF0 MOVZ W8, 0x1
	0x03737DF4 STRB W8, [X22 + 0xCF7]
	0x03737DF8 MOV X0, X21
	0x03737DFC MOV X1, X31
	0x03737E00 BL 0x32277A8
	0x03737E04 TBNZ X0, 0x0, 0x3737E98
	0x03737E08 MOV X0, X20
	0x03737E0C MOV X1, X21
	0x03737E10 BL 0x3737CE4
	0x03737E14 ADDS W31, W0, 0x1
	0x03737E18 B.EQ 0x3737E7C
	0x03737E1C LDR X8, [X20 + 0x20]
	0x03737E20 CBZ X8, 0x3737EE0
	0x03737E24 LDR W9, [X8 + 0x18]
	0x03737E28 CMP W0, W9
	0x03737E2C B.CS 0x3737EE4
	0x03737E30 MOVZ W10, 0x18
	0x03737E34 ADRP X9, 0x9E4000
	0x03737E38 SMADDL X8, X0, X10, X8
	0x03737E3C LDR X9, [X9 + 0xDE8]
	0x03737E40 LDR V0, [X8 + 0x2]
	0x03737E44 LDR X10, [X8 + 0x30]
	0x03737E48 MOVI V1.2D, 0x0
	0x03737E4C LDR X2, [X9]
	0x03737E50 STR V0, [X31]
	0x03737E54 LDR V0, [X31]
	0x03737E58 MOV X8, X10
	0x03737E5C ADD X1, X31, 0x20
	0x03737E60 MOV X0, X19
	0x03737E64 STR X10, [X31 + 0x10]
	0x03737E68 STP V1, V1, [X19]
	0x03737E6C STR V0, [X31 + 0x2]
	0x03737E70 STR X8, [X31 + 0x30]
	0x03737E74 BL 0x2432978
	0x03737E78 B 0x3737E84
	0x03737E7C MOVI V0.2D, 0x0
	0x03737E80 STP V0, V0, [X19]
	0x03737E84 LDP X20, X19, [X31 + 0x60]
	0x03737E88 LDP X22, X21, [X31 + 0x50]
	0x03737E8C LDR X30, [X31 + 0x40]
	0x03737E90 ADD X31, X31, 0x70
	0x03737E94 RET
	0x03737E98 ADRP X0, 0x9C1000
	0x03737E9C LDR X0, [X0 + 0x528]
	0x03737EA0 BL 0x1C16D08
	0x03737EA4 BL 0x1C16F10
	0x03737EA8 MOV X19, X0
	0x03737EAC ADRP X0, 0x9C4000
	0x03737EB0 LDR X0, [X0 + 0x588]
	0x03737EB4 BL 0x1C16D08
	0x03737EB8 MOV X1, X0
	0x03737EBC MOV X0, X19
	0x03737EC0 MOV X2, X31
	0x03737EC4 BL 0x330E100
	0x03737EC8 ADRP X0, 0xA0E000
	0x03737ECC LDR X0, [X0 + 0x130]
	0x03737ED0 BL 0x1C16D08
	0x03737ED4 MOV X1, X0
	0x03737ED8 MOV X0, X19
	0x03737EDC BL 0x1C16DEC
	0x03737EE0 BL 0x1C16F20
	0x03737EE4 BL 0x1C16F28
	0x03737EE8 STP X30, X23, [X31 - 0x30]!
	0x03737EEC STP X22, X21, [X31 + 0x10]
	0x03737EF0 STP X20, X19, [X31 + 0x20]
	0x03737EF4 ADRP X21, 0xCA9000
	0x03737EF8 LDRB W8, [X21 + 0xCF8]
	0x03737EFC MOV X19, X1
	0x03737F00 MOV X20, X0
	0x03737F04 TBNZ X8, 0x0, 0x3737F28
	0x03737F08 ADRP X0, 0xA0E000
	0x03737F0C LDR X0, [X0 + 0x100]
	0x03737F10 BL 0x1C16CF4
	0x03737F14 ADRP X0, 0xA0E000
	0x03737F18 LDR X0, [X0 + 0x138]
	0x03737F1C BL 0x1C16CF4
	0x03737F20 MOVZ W8, 0x1
	0x03737F24 STRB W8, [X21 + 0xCF8]
	0x03737F28 CBZ X19, 0x3738010
	0x03737F2C ADRP X8, 0xA0E000
	0x03737F30 LDR X8, [X8 + 0x138]
	0x03737F34 LDR X0, [X20 + 0x20]
	0x03737F38 LDR X1, [X8]
	0x03737F3C BL 0x217B24C
	0x03737F40 CMP W0, 0x1
	0x03737F44 B.LT 0x3737F94
	0x03737F48 MOV W8, W0
	0x03737F4C MOV X21, X31
	0x03737F50 SUB X22, X8, 0x1
	0x03737F54 MOVZ W23, 0x20
	0x03737F58 LDR X8, [X20 + 0x20]
	0x03737F5C CBZ X8, 0x3738008
	0x03737F60 LDR W9, [X8 + 0x18]
	0x03737F64 CMP X21, X9
	0x03737F68 B.CS 0x373800C
	0x03737F6C ADD X0, X8, X23
	0x03737F70 MOV X1, X19
	0x03737F74 MOV X2, X31
	0x03737F78 BL 0x376B41C
	0x03737F7C TBNZ X0, 0x0, 0x3737FF4
	0x03737F80 CMP X22, X21
	0x03737F84 ADD X21, X21, 0x1
	0x03737F88 ADD X23, X23, 0x18
	0x03737F8C B.NE 0x3737F58
	0x03737F90 B 0x3737FF4
	0x03737F94 ADRP X8, 0xA0E000
	0x03737F98 LDR X0, [X20 + 0x18]
	0x03737F9C LDR X8, [X8 + 0x100]
	0x03737FA0 LDR X1, [X8]
	0x03737FA4 BL 0x217B258
	0x03737FA8 SUBS W21, W0, 0x1
	0x03737FAC B.LT 0x3737FF0
	0x03737FB0 MOV W22, W31
	0x03737FB4 LDR X8, [X20 + 0x18]
	0x03737FB8 CBZ X8, 0x3738008
	0x03737FBC LDR W9, [X8 + 0x18]
	0x03737FC0 CMP W22, W9
	0x03737FC4 B.CS 0x373800C
	0x03737FC8 ADD X8, X8, W22, 0x3, SXTW
	0x03737FCC LDR X0, [X8 + 0x20]
	0x03737FD0 CBZ X0, 0x3738008
	0x03737FD4 MOV X1, X19
	0x03737FD8 BL 0x3738058
	0x03737FDC TBNZ X0, 0x0, 0x3737FF4
	0x03737FE0 CMP W21, W22
	0x03737FE4 ADD W22, W22, 0x1
	0x03737FE8 B.NE 0x3737FB4
	0x03737FEC B 0x3737FF4
	0x03737FF0 MOV W0, W31
	0x03737FF4 LDP X20, X19, [X31 + 0x20]
	0x03737FF8 LDP X22, X21, [X31 + 0x10]
	0x03737FFC AND W0, W0, 0x1
	0x03738000 LDP X30, X23, [X31], #0x30
	0x03738004 RET
	0x03738008 BL 0x1C16F20
	0x0373800C BL 0x1C16F28
	0x03738010 ADRP X0, 0x9C0000
	0x03738014 LDR X0, [X0 + 0x528]
	0x03738018 BL 0x1C16D08
	0x0373801C BL 0x1C16F10
	0x03738020 MOV X19, X0
	0x03738024 ADRP X0, 0x9E3000
	0x03738028 LDR X0, [X0 + 0xD20]
	0x0373802C BL 0x1C16D08
	0x03738030 MOV X1, X0
	0x03738034 MOV X0, X19
	0x03738038 MOV X2, X31
	0x0373803C BL 0x330E100
	0x03738040 ADRP X0, 0xA0D000
	0x03738044 LDR X0, [X0 + 0x140]
	0x03738048 BL 0x1C16D08
	0x0373804C MOV X1, X0
	0x03738050 MOV X0, X19
	0x03738054 BL 0x1C16DEC
	0x03738058 SUB X31, X31, 0x90
	0x0373805C STP X30, X23, [X31 + 0x60]
	0x03738060 STP X22, X21, [X31 + 0x70]
	0x03738064 STP X20, X19, [X31 + 0x80]
	0x03738068 MOVI V0.2D, 0x0
	0x0373806C STR X31, [X31 + 0x50]
	0x03738070 STP V0, V0, [X31 + 0x30]

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+96], X30
	003 Move [X31+104], X25
	004 Move [X31+112], X24
	005 Move [X31+120], X23
	006 Move [X31+128], X22
	007 Move [X31+136], X21
	008 Move [X31+144], X20
	009 Move [X31+152], X19
	010 NotImplemented "Instruction MRS not yet implemented."
	011 Move X8, [X23+40]
	012 Move [X31+88], X8
	013 Move [X31+24], X31
	014 Move [X31+32], X31
	015 Move [X31+8], X31
	016 Move [X31+16], X31
	017 Compare X1, 0
	018 JumpIfEqual {186}
	019 Move X8, [X0+24]
	020 Move W21, W2
	021 Move X19, X1
	022 Move X20, X0
	023 Compare X8, 0
	024 JumpIfEqual {143}
	025 Move W1, 47
	026 Move X0, X19
	027 Move X2, X31
	028 Call String.IndexOf, X0, X1
	029 Add W31, W0, 1
	030 Move W22, W0
	031 Add X0, X31, 24
	032 Move X1, X19
	033 Move W2, W31
	034 Move W3, W22
	035 Move X4, X31
	036 Call Substring..ctor, X0, X1, X2, X3
	037 Add W2, W22, 1
	038 Add X0, X31, 8
	039 Move X1, X19
	040 Move X3, X31
	041 Call Substring..ctor, X0, X1, X2
	042 Add X0, X31, 24
	043 Move X1, X31
	044 Call Substring.get_isEmpty, X0
	045 Move TEMP, X0
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfEqual {204}
	049 Add X0, X31, 8
	050 Move X1, X31
	051 Call Substring.get_isEmpty, X0
	052 Move TEMP, X0
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfEqual {204}
	056 Move X8, [X20+24]
	057 Compare X8, 0
	058 JumpIfEqual {118}
	059 Move X22, X31
	060 Move W9, [X8+24]
	061 NotImplemented "Instruction CMP not yet implemented."
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Add X8, X8, X22
	064 Move X24, [X8+32]
	065 Compare X24, 0
	066 JumpIfEqual {118}
	067 Move X0, [X24+16]
	068 Move X1, X31
	069 Call Substring.op_Implicit, X0
	070 Move X2, [X31+24]
	071 Move X3, [X31+32]
	072 Move W4, 3
	073 Move X5, X31
	074 Call Substring.Compare, X0, X1, X2
	075 Compare W0, 0
	076 JumpIfEqual {119}
	077 Move X8, [X20+24]
	078 Add X22, X22, 1
	079 Compare X8, 0
	080 JumpIfNotEqual {60}
	081 Move X8, [X20+24]
	082 Compare X8, 0
	083 JumpIfEqual {118}
	084 Move X25, X31
	085 Move X24, X31
	086 Move W9, [X8+24]
	087 NotImplemented "Instruction CMP not yet implemented."
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Add X8, X8, X25
	090 Move X0, [X8+32]
	091 Compare X0, 0
	092 JumpIfEqual {118}
	093 Move X1, X19
	094 Move W2, W31
	095 Call InputActionMap.FindAction, X0, X1, X2
	096 Compare X0, 0
	097 JumpIfEqual {114}
	098 Add X8, X31, 40
	099 Move X22, X0
	100 Call InputAction.get_currentState, X0
	101 Move W8, [X31+40]
	102 Compare W8, 0
	103 JumpIfNotEqual {148}
	104 Move X0, [X22+40]
	105 Move X1, X19
	106 Move X2, X31
	107 Call String.op_Equality, X0, X1
	108 Move TEMP, X0
	109 And TEMP, TEMP, 1
	110 Compare TEMP, 1
	111 JumpIfEqual {148}
	112 NotImplemented "Instruction CMP not yet implemented."
	113 NotImplemented "Instruction CSEL not yet implemented."
	114 Move X8, [X20+24]
	115 Add X25, X25, 1
	116 Compare X8, 0
	117 JumpIfNotEqual {86}
	118 Call 0x1C17F20
	119 Move X24, [X24+40]
	120 Compare X24, 0
	121 JumpIfEqual {118}
	122 Move W8, [X24+24]
	123 NotImplemented "Instruction CMP not yet implemented."
	124 Move W25, W31
	125 NotImplemented "Instruction CMP not yet implemented."
	126 Add X8, X24, W25
	127 Move X22, [X8+32]
	128 Compare X22, 0
	129 JumpIfEqual {118}
	130 Move X0, [X22+16]
	131 Move X1, X31
	132 Call Substring.op_Implicit, X0
	133 Move X2, [X31+8]
	134 Move X3, [X31+16]
	135 Move W4, 3
	136 Move X5, X31
	137 Call Substring.Compare, X0, X1, X2
	138 Compare W0, 0
	139 JumpIfEqual {148}
	140 Move W8, [X24+24]
	141 Add W25, W25, 1
	142 NotImplemented "Instruction CMP not yet implemented."
	143 Move TEMP, X21
	144 And TEMP, TEMP, 1
	145 Compare TEMP, 1
	146 JumpIfEqual {169}
	147 Move X22, X31
	148 Move X8, [X23+40]
	149 Move X9, [X31+88]
	150 NotImplemented "Instruction CMP not yet implemented."
	151 Move X0, X22
	152 Move X20, [X31+144]
	153 Move X19, [X31+152]
	154 Move X22, [X31+128]
	155 Move X21, [X31+136]
	156 Move X24, [X31+112]
	157 Move X23, [X31+120]
	158 Move X30, [X31+96]
	159 Move X25, [X31+104]
	160 Add X31, X31, 160
	161 Return X0
	162 Move X22, X24
	163 Compare X24, 0
	164 JumpIfNotEqual {148}
	165 Move TEMP, X21
	166 And TEMP, TEMP, 1
	167 Compare TEMP, 1
	168 JumpIfNotEqual {148}
	169 Move X0, 0xA0F000
	170 Move X0, [X0+136]
	171 Call 0x1C17D08
	172 Move X1, X19
	173 Move X2, X20
	174 Move X3, X31
	175 Call String.Format, X0, X1, X2
	176 Move X19, X0
	177 Move X0, 0x9C5000
	178 Move X0, [X0+1400]
	179 Call 0x1C17D08
	180 Call 0x1C17F10
	181 Move X1, X19
	182 Move X2, X31
	183 Move X20, X0
	184 Call ArgumentException..ctor, X0, X1
	185 Call 0x1C17F28
	186 Move X0, 0x9C2000
	187 Move X0, [X0+1320]
	188 Call 0x1C17D08
	189 Call 0x1C17F10
	190 Move X19, X0
	191 Move X0, 0xA0F000
	192 Move X0, [X0+144]
	193 Call 0x1C17D08
	194 Move X1, X0
	195 Move X0, X19
	196 Move X2, X31
	197 Call ArgumentNullException..ctor, X0, X1
	198 Move X0, 0xA0F000
	199 Move X0, [X0+152]
	200 Call 0x1C17D08
	201 Move X1, X0
	202 Move X0, X19
	203 Call 0x1C17DEC
	204 Move X0, 0xA0E000
	205 Move X0, [X0+160]
	206 Call 0x1C17D08
	207 Move X1, X19
	208 Move X2, X31
	209 Call String.Concat, X0, X1
	210 Move X19, X0
	211 Move X0, 0x9C4000
	212 Move X0, [X0+1400]
	213 Call 0x1C17D08
	214 Call 0x1C17F10
	215 Move X20, X0
	216 Move X0, 0xA0E000
	217 Move X0, [X0+144]
	218 Call 0x1C17D08
	219 Move X2, X0
	220 Move X0, X20
	221 Move X1, X19
	222 Move X3, X31
	223 Call ArgumentException..ctor, X0, X1, X2
	224 Move X0, 0xA0E000
	225 Move X0, [X0+152]
	226 Call 0x1C17D08
	227 Move X1, X0
	228 Move X0, X20
	229 Call 0x1C17DEC
	230 Call 0x3EB2B20

Method: System.Int32 FindBinding(UnityEngine.InputSystem.InputBinding mask, out UnityEngine.InputSystem.InputAction action)

Disassembly:
	0x037387C0 LDR X1, [X8]
	0x037387C4 BL 0x2BC4968
	0x037387C8 B 0x3738824
	0x037387CC BL 0x1C16F20
	0x037387D0 BL 0x1C16F20
	0x037387D4 B 0x37387E4
	0x037387D8 B 0x37387E4
	0x037387DC B 0x37387E4
	0x037387E0 B 0x37387E4
	0x037387E4 MOV X20, X0
	0x037387E8 CMP W1, 0x1
	0x037387EC B.NE 0x3738888
	0x037387F0 MOV X0, X20
	0x037387F4 BL 0x3EB1AD0
	0x037387F8 LDR X21, [X0]
	0x037387FC BL 0x3EB1AE0
	0x03738800 ADRP X8, 0xA0D000
	0x03738804 LDR X8, [X8 + 0x18]
	0x03738808 ADD X0, X31, 0x30
	0x0373880C LDR X1, [X8]
	0x03738810 BL 0x2BC4968
	0x03738814 CBNZ X21, 0x3738890
	0x03738818 LDR W8, [X19 + 0x48]
	0x0373881C CMP W8, 0x0
	0x03738820 B.GT 0x3738834
	0x03738824 LDP X20, X19, [X31 + 0x60]
	0x03738828 LDP X30, X21, [X31 + 0x50]
	0x0373882C ADD X31, X31, 0x70
	0x03738830 RET
	0x03738834 ADRP X0, 0xA0D000
	0x03738838 LDR X0, [X0 + 0x168]
	0x0373883C BL 0x1C16D08
	0x03738840 MOV X1, X19
	0x03738844 MOV X2, X31
	0x03738848 BL 0x321EFD0
	0x0373884C MOV X19, X0
	0x03738850 ADRP X0, 0x9BB000
	0x03738854 LDR X0, [X0 + 0x5B0]
	0x03738858 BL 0x1C16D08
	0x0373885C BL 0x1C16F10
	0x03738860 MOV X1, X19
	0x03738864 MOV X2, X31
	0x03738868 MOV X20, X0
	0x0373886C BL 0x337DF1C
	0x03738870 ADRP X0, 0xA0D000
	0x03738874 LDR X0, [X0 + 0x160]
	0x03738878 BL 0x1C16D08
	0x0373887C MOV X1, X0
	0x03738880 MOV X0, X20
	0x03738884 BL 0x1C16DEC
	0x03738888 MOV X21, X31
	0x0373888C B 0x373889C
	0x03738890 MOV X0, X21
	0x03738894 BL 0x1C16F18
	0x03738898 MOV X20, X0
	0x0373889C ADRP X8, 0xA0D000
	0x037388A0 LDR X8, [X8 + 0x18]
	0x037388A4 LDR X1, [X8]
	0x037388A8 ADD X0, X31, 0x30

ISIL:
	001 Subtract X31, X31, 240
	002 Move [X31+176], X30
	003 Move [X31+192], X24
	004 Move [X31+200], X23
	005 Move [X31+208], X22
	006 Move [X31+216], X21
	007 Move [X31+224], X20
	008 Move [X31+232], X19
	009 Move X23, 0xCA9000
	010 Move X22, 0xA0E000
	011 Move W8, [X23+3318]
	012 Move X22, [X22+256]
	013 Move X19, X2
	014 Move X20, X1
	015 Move X21, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0xA0E000
	021 Move X0, [X0+256]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X23+3318], W8
	025 Move X0, [X21+24]
	026 Move X1, [X22]
	027 Call ArrayHelpers.LengthSafe, X0
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move W22, W0
	030 Move W24, W31
	031 Move X8, [X21+24]
	032 Compare X8, 0
	033 JumpIfEqual {71}
	034 Move W9, [X8+24]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Add X8, X8, W24
	037 Move X23, [X8+32]
	038 Add X0, X31, 88
	039 Move W2, 88
	040 Move X1, X20
	041 Call 0x3EB2AC0
	042 Compare X23, 0
	043 JumpIfEqual {71}
	044 Add X0, X31, 0
	045 Add X1, X31, 88
	046 Move W2, 88
	047 Call 0x3EB2AC0
	048 Add X1, X31, 0
	049 Move X0, X23
	050 Move X2, X19
	051 Call InputActionMap.FindBinding, X0, X1, X2
	052 Move TEMP, X0
	053 And TEMP, TEMP, -2147483648
	054 Compare TEMP, -2147483648
	055 JumpIfNotEqual {62}
	056 Add W24, W24, 1
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move TEMP, 0
	059 Not TEMP
	060 Move W0, TEMP
	061 Move [X19], X31
	062 Move X20, [X31+224]
	063 Move X19, [X31+232]
	064 Move X22, [X31+208]
	065 Move X21, [X31+216]
	066 Move X24, [X31+192]
	067 Move X23, [X31+200]
	068 Move X30, [X31+176]
	069 Add X31, X31, 240
	070 Return X0
	071 Call 0x1C17F20
	072 Call 0x1C17F28

Method: UnityEngine.InputSystem.InputActionMap FindActionMap(System.String nameOrId, System.Boolean throwIfNotFound = False)

Disassembly:
	0x0373898C LDR X0, [X0 + 0x28]
	0x03738990 BL 0x1C16CF4
	0x03738994 ADRP X0, 0x9BB000
	0x03738998 LDR X0, [X0 + 0x598]
	0x0373899C BL 0x1C16CF4
	0x037389A0 ADRP X0, 0xA0D000
	0x037389A4 LDR X0, [X0 + 0x10]
	0x037389A8 BL 0x1C16CF4
	0x037389AC MOVZ W8, 0x1
	0x037389B0 STRB W8, [X21 + 0xD18]
	0x037389B4 LDR X0, [X20]
	0x037389B8 STP X31, X31, [X31 + 0x18]
	0x037389BC STR X31, [X31 + 0x28]
	0x037389C0 STP X31, X31, [X31 + 0x8]
	0x037389C4 LDR W8, [X0 + 0xE0]
	0x037389C8 LDR X20, [X19 + 0x20]
	0x037389CC CBNZ W8, 0x37389D4
	0x037389D0 BL 0x1C16DFC
	0x037389D4 MOV X0, X20
	0x037389D8 MOV X1, X31
	0x037389DC MOV X2, X31
	0x037389E0 BL 0x3C354F8
	0x037389E4 TBZ X0, 0x0, 0x3738AA8
	0x037389E8 LDR X0, [X19 + 0x20]
	0x037389EC CBZ X0, 0x3738A68
	0x037389F0 BL 0x3736750
	0x037389F4 ADRP X8, 0xA0D000
	0x037389F8 LDR X8, [X8 + 0x10]
	0x037389FC STP X0, X1, [X31 + 0x8]
	0x03738A00 ADD X0, X31, 0x8
	0x03738A04 LDR X9, [X8]
	0x03738A08 ADD X8, X31, 0x18
	0x03738A0C MOV X1, X9
	0x03738A10 BL 0x24FD990
	0x03738A14 ADRP X20, 0xA0D000
	0x03738A18 ADRP X21, 0xA0D000
	0x03738A1C LDR X20, [X20 + 0x20]
	0x03738A20 LDR X21, [X21 + 0x28]
	0x03738A24 LDR X1, [X20]
	0x03738A28 ADD X0, X31, 0x18
	0x03738A2C BL 0x2BC496C
	0x03738A30 TBZ X0, 0x0, 0x3738A4C
	0x03738A34 LDR X1, [X21]
	0x03738A38 ADD X0, X31, 0x18
	0x03738A3C BL 0x2BC4998
	0x03738A40 CBZ X0, 0x3738A64
	0x03738A44 STR X31, [X0 + 0x60]
	0x03738A48 B 0x3738A24
	0x03738A4C ADRP X8, 0xA0D000
	0x03738A50 LDR X8, [X8 + 0x18]
	0x03738A54 ADD X0, X31, 0x18
	0x03738A58 LDR X1, [X8]
	0x03738A5C BL 0x2BC4968
	0x03738A60 B 0x3738AAC
	0x03738A64 BL 0x1C16F20
	0x03738A68 BL 0x1C16F20
	0x03738A6C B 0x3738A74
	0x03738A70 B 0x3738A74
	0x03738A74 MOV X20, X0
	0x03738A78 CMP W1, 0x1
	0x03738A7C B.NE 0x3738ADC
	0x03738A80 MOV X0, X20
	0x03738A84 BL 0x3EB1AD0
	0x03738A88 LDR X21, [X0]
	0x03738A8C BL 0x3EB1AE0
	0x03738A90 ADRP X8, 0xA0D000
	0x03738A94 LDR X8, [X8 + 0x18]
	0x03738A98 ADD X0, X31, 0x18
	0x03738A9C LDR X1, [X8]
	0x03738AA0 BL 0x2BC4968
	0x03738AA4 CBNZ X21, 0x3738AE4
	0x03738AA8 STR X31, [X19 + 0x60]
	0x03738AAC LDR W8, [X19 + 0xC8]
	0x03738AB0 MOVZ W1, 0x1
	0x03738AB4 MOV X0, X19
	0x03738AB8 STP X31, X31, [X19 + 0x38]
	0x03738ABC AND W8, W8, 0xFFFFFFF3
	0x03738AC0 STR X31, [X19 + 0x138]
	0x03738AC4 STR W8, [X19 + 0xC8]
	0x03738AC8 BL 0x3734520
	0x03738ACC LDP X20, X19, [X31 + 0x40]
	0x03738AD0 LDP X30, X21, [X31 + 0x30]
	0x03738AD4 ADD X31, X31, 0x50
	0x03738AD8 RET
	0x03738ADC MOV X21, X31
	0x03738AE0 B 0x3738AF0
	0x03738AE4 MOV X0, X21
	0x03738AE8 BL 0x1C16F18
	0x03738AEC MOV X20, X0
	0x03738AF0 ADRP X8, 0xA0D000
	0x03738AF4 LDR X8, [X8 + 0x18]
	0x03738AF8 LDR X1, [X8]
	0x03738AFC ADD X0, X31, 0x18
	0x03738B00 BL 0x2BC4968
	0x03738B04 CBNZ X21, 0x3738B10
	0x03738B08 MOV X0, X20
	0x03738B0C BL 0x1D2C690
	0x03738B10 MOV X0, X21
	0x03738B14 BL 0x1C16F18
	0x03738B18 BL 0x1990590
	0x03738B1C STP X30, X21, [X31 - 0x20]!
	0x03738B20 STP X20, X19, [X31 + 0x10]
	0x03738B24 ADRP X21, 0xCA8000
	0x03738B28 ADRP X20, 0xA0D000
	0x03738B2C LDRB W8, [X21 + 0xCFF]
	0x03738B30 LDR X20, [X20 + 0x100]
	0x03738B34 MOV X19, X0
	0x03738B38 TBNZ X8, 0x0, 0x3738B50
	0x03738B3C ADRP X0, 0xA0D000
	0x03738B40 LDR X0, [X0 + 0x100]
	0x03738B44 BL 0x1C16CF4
	0x03738B48 MOVZ W8, 0x1

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move [X31], X31
	009 Move [X31+8], X31
	010 Compare X1, 0
	011 JumpIfEqual {97}
	012 Move X8, [X0+24]
	013 Move X19, X0
	014 Compare X8, 0
	015 JumpIfEqual {86}
	016 Move X20, X1
	017 Move W21, W2
	018 Move W1, 45
	019 Move X0, X20
	020 Move X2, X31
	021 Call String.Contains, X0, X1
	022 Move TEMP, X0
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfNotEqual {59}
	026 Add X1, X31, 0
	027 Move X0, X20
	028 Move X2, X31
	029 Call Guid.TryParse, X0, X1
	030 Move TEMP, X0
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfNotEqual {59}
	034 Move X8, [X19+24]
	035 Compare X8, 0
	036 JumpIfEqual {81}
	037 Move X23, X31
	038 Move W9, [X8+24]
	039 NotImplemented "Instruction CMP not yet implemented."
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Add X8, X8, X23
	042 Move X22, [X8+32]
	043 Compare X22, 0
	044 JumpIfEqual {81}
	045 Move X0, X22
	046 Call InputActionMap.get_idDontGenerate, X0
	047 Move X2, [X31]
	048 Move X3, [X31+8]
	049 Move X4, X31
	050 Call Guid.op_Equality, X0, X1
	051 Move TEMP, X0
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfEqual {87}
	055 Move X8, [X19+24]
	056 Add X23, X23, 1
	057 Compare X8, 0
	058 JumpIfNotEqual {38}
	059 Move X8, [X19+24]
	060 Compare X8, 0
	061 JumpIfEqual {81}
	062 Move X23, X31
	063 Move W9, [X8+24]
	064 NotImplemented "Instruction CMP not yet implemented."
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Add X8, X8, X23
	067 Move X22, [X8+32]
	068 Compare X22, 0
	069 JumpIfEqual {81}
	070 Move X1, [X22+16]
	071 Move W2, 3
	072 Move X0, X20
	073 Move X3, X31
	074 Call String.Compare, X0, X1, X2
	075 Compare W0, 0
	076 JumpIfEqual {87}
	077 Move X8, [X19+24]
	078 Add X23, X23, 1
	079 Compare X8, 0
	080 JumpIfNotEqual {63}
	081 Call 0x1C17F20
	082 Move TEMP, X21
	083 And TEMP, TEMP, 1
	084 Compare TEMP, 1
	085 JumpIfEqual {115}
	086 Move X22, X31
	087 Move X0, X22
	088 Move X20, [X31+48]
	089 Move X19, [X31+56]
	090 Move X22, [X31+32]
	091 Move X21, [X31+40]
	092 Move X30, [X31+16]
	093 Move X23, [X31+24]
	094 Add X31, X31, 64
	095 Return X0
	096 Call 0x1C17F28
	097 Move X0, 0x9C1000
	098 Move X0, [X0+1320]
	099 Call 0x1C17D08
	100 Call 0x1C17F10
	101 Move X19, X0
	102 Move X0, 0xA0E000
	103 Move X0, [X0+272]
	104 Call 0x1C17D08
	105 Move X1, X0
	106 Move X0, X19
	107 Move X2, X31
	108 Call ArgumentNullException..ctor, X0, X1
	109 Move X0, 0xA0E000
	110 Move X0, [X0+280]
	111 Call 0x1C17D08
	112 Move X1, X0
	113 Move X0, X19
	114 Call 0x1C17DEC
	115 Move X0, 0xA0E000
	116 Move X0, [X0+288]
	117 Call 0x1C17D08
	118 Move X1, X20
	119 Move X2, X19
	120 Move X3, X31
	121 Call String.Format, X0, X1, X2
	122 Move X19, X0
	123 Move X0, 0x9C4000
	124 Move X0, [X0+1400]
	125 Call 0x1C17D08
	126 Call 0x1C17F10
	127 Move X1, X19
	128 Move X2, X31
	129 Move X20, X0
	130 Call ArgumentException..ctor, X0, X1
	131 Move X0, 0xA0E000
	132 Move X0, [X0+280]
	133 Call 0x1C17D08
	134 Move X1, X0
	135 Move X0, X20
	136 Call 0x1C17DEC

Method: UnityEngine.InputSystem.InputActionMap FindActionMap(System.Guid id)

Disassembly:
	0x03738B94 TBNZ X0, 0x0, 0x3738BA8
	0x03738B98 LDR W8, [X19 + 0x18]
	0x03738B9C ADD W20, W20, 0x1
	0x03738BA0 CMP W20, W8
	0x03738BA4 B.LT 0x3738B7C
	0x03738BA8 LDP X20, X19, [X31 + 0x10]
	0x03738BAC LDP X30, X21, [X31], #0x20
	0x03738BB0 RET
	0x03738BB4 BL 0x1C16F28
	0x03738BB8 BL 0x1C16F20
	0x03738BBC STP X30, X19, [X31 - 0x10]!
	0x03738BC0 MOV X19, X0
	0x03738BC4 BL 0x3738318
	0x03738BC8 LDR X0, [X19 + 0x28]
	0x03738BCC CBZ X0, 0x3738BDC
	0x03738BD0 MOV X1, X31
	0x03738BD4 BL 0x374ADA4
	0x03738BD8 STR X31, [X19 + 0x28]
	0x03738BDC LDP X30, X19, [X31], #0x10
	0x03738BE0 RET
	0x03738BE4 MOV X1, X31
	0x03738BE8 B 0x3C36D2C
	0x03738BEC STP X29, X30, [X31 - 0x60]!
	0x03738BF0 STP X28, X27, [X31 + 0x10]
	0x03738BF4 STP X26, X25, [X31 + 0x20]
	0x03738BF8 STP X24, X23, [X31 + 0x30]
	0x03738BFC STP X22, X21, [X31 + 0x40]
	0x03738C00 STP X20, X19, [X31 + 0x50]
	0x03738C04 SUB X31, X31, 0x420
	0x03738C08 STR X0, [X31 + 0x20]
	0x03738C0C ADRP X25, 0xCA8000
	0x03738C10 ADRP X24, 0xA0D000
	0x03738C14 ADRP X20, 0xA0D000
	0x03738C18 ADRP X23, 0xA0D000
	0x03738C1C ADRP X22, 0xA0D000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X8, [X0+24]
	008 Compare X8, 0
	009 JumpIfEqual {36}
	010 Move X19, X2
	011 Move X20, X0
	012 Move X21, X1
	013 Move X23, X31
	014 Move W9, [X8+24]
	015 NotImplemented "Instruction CMP not yet implemented."
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Add X8, X8, X23
	018 Move X22, [X8+32]
	019 Compare X22, 0
	020 JumpIfEqual {35}
	021 Move X0, X22
	022 Call InputActionMap.get_idDontGenerate, X0
	023 Move X2, X21
	024 Move X3, X19
	025 Move X4, X31
	026 Call Guid.op_Equality, X0, X1
	027 Move TEMP, X0
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {37}
	031 Move X8, [X20+24]
	032 Add X23, X23, 1
	033 Compare X8, 0
	034 JumpIfNotEqual {14}
	035 Call 0x1C17F20
	036 Move X22, X31
	037 Move X0, X22
	038 Move X20, [X31+32]
	039 Move X19, [X31+40]
	040 Move X22, [X31+16]
	041 Move X21, [X31+24]
	042 Move X30, [X31+48]
	043 Move X23, [X31+56]
	044 Return X0
	045 Call 0x1C17F28

Method: UnityEngine.InputSystem.InputAction FindAction(System.Guid guid)

Disassembly:
	0x03738C20 ADRP X21, 0xA0D000
	0x03738C24 ADRP X19, 0xA0D000
	0x03738C28 LDR X24, [X24 + 0x170]
	0x03738C2C LDRB W8, [X25 + 0xD30]
	0x03738C30 LDR X20, [X20 + 0x178]
	0x03738C34 LDR X23, [X23 + 0x180]
	0x03738C38 LDR X22, [X22 + 0x188]
	0x03738C3C LDR X21, [X21 + 0x190]
	0x03738C40 LDR X19, [X19 + 0x198]
	0x03738C44 TBNZ X8, 0x0, 0x3738D64
	0x03738C48 ADRP X0, 0xA0C000
	0x03738C4C LDR X0, [X0 + 0xF68]
	0x03738C50 BL 0x1C16CF4
	0x03738C54 ADRP X0, 0xA0D000
	0x03738C58 LDR X0, [X0 + 0x1A0]
	0x03738C5C BL 0x1C16CF4
	0x03738C60 ADRP X0, 0xA0D000
	0x03738C64 LDR X0, [X0 + 0x1A8]
	0x03738C68 BL 0x1C16CF4
	0x03738C6C ADRP X0, 0xA0D000
	0x03738C70 LDR X0, [X0 + 0x1B0]
	0x03738C74 BL 0x1C16CF4
	0x03738C78 ADRP X0, 0xA0D000
	0x03738C7C LDR X0, [X0 + 0x1B8]
	0x03738C80 BL 0x1C16CF4
	0x03738C84 ADRP X0, 0xA0D000
	0x03738C88 LDR X0, [X0 + 0x1C0]
	0x03738C8C BL 0x1C16CF4
	0x03738C90 ADRP X0, 0xA0D000
	0x03738C94 LDR X0, [X0 + 0x1C8]
	0x03738C98 BL 0x1C16CF4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X0+24]
	007 Compare X8, 0
	008 JumpIfEqual {30}
	009 Move X19, X2
	010 Move X20, X0
	011 Move X21, X1
	012 Move X22, X31
	013 Move W9, [X8+24]
	014 NotImplemented "Instruction CMP not yet implemented."
	015 NotImplemented "Instruction CMP not yet implemented."
	016 Add X8, X8, X22
	017 Move X0, [X8+32]
	018 Compare X0, 0
	019 JumpIfEqual {29}
	020 Move X1, X21
	021 Move X2, X19
	022 Call InputActionMap.FindAction, X0, X1
	023 Compare X0, 0
	024 JumpIfNotEqual {31}
	025 Move X8, [X20+24]
	026 Add X22, X22, 1
	027 Compare X8, 0
	028 JumpIfNotEqual {13}
	029 Call 0x1C17F20
	030 Move X0, X31
	031 Move X20, [X31+32]
	032 Move X19, [X31+40]
	033 Move X22, [X31+16]
	034 Move X21, [X31+24]
	035 Move X30, [X31+48]
	036 Return X0
	037 Call 0x1C17F28

Method: System.Int32 FindControlSchemeIndex(System.String name)

Disassembly:
	0x03738CE4 ADRP X0, 0xA0D000
	0x03738CE8 LDR X0, [X0 + 0x1E8]
	0x03738CEC BL 0x1C16CF4
	0x03738CF0 ADRP X0, 0xA0D000
	0x03738CF4 LDR X0, [X0 + 0x1F0]
	0x03738CF8 BL 0x1C16CF4
	0x03738CFC ADRP X0, 0xA0D000
	0x03738D00 LDR X0, [X0 + 0x1F8]
	0x03738D04 BL 0x1C16CF4
	0x03738D08 ADRP X0, 0xA0D000
	0x03738D0C LDR X0, [X0 + 0x200]
	0x03738D10 BL 0x1C16CF4
	0x03738D14 ADRP X0, 0xA0D000
	0x03738D18 LDR X0, [X0 + 0x208]
	0x03738D1C BL 0x1C16CF4
	0x03738D20 ADRP X0, 0xA0D000
	0x03738D24 LDR X0, [X0 + 0x170]
	0x03738D28 BL 0x1C16CF4
	0x03738D2C ADRP X0, 0xA0D000
	0x03738D30 LDR X0, [X0 + 0x190]
	0x03738D34 BL 0x1C16CF4
	0x03738D38 ADRP X0, 0xA0D000
	0x03738D3C LDR X0, [X0 + 0x210]
	0x03738D40 BL 0x1C16CF4
	0x03738D44 ADRP X0, 0xA0D000
	0x03738D48 LDR X0, [X0 + 0x180]
	0x03738D4C BL 0x1C16CF4
	0x03738D50 ADRP X0, 0xA0D000
	0x03738D54 LDR X0, [X0 + 0x218]
	0x03738D58 BL 0x1C16CF4
	0x03738D5C MOVZ W8, 0x1
	0x03738D60 STRB W8, [X25 + 0xD30]
	0x03738D64 LDR X0, [X24]
	0x03738D68 MOVI V0.2D, 0x0
	0x03738D6C STR X31, [X31 + 0x330]
	0x03738D70 STR X31, [X31 + 0x250]
	0x03738D74 STR X31, [X31 + 0x130]
	0x03738D78 STP V0, V0, [X31 + 0x310]
	0x03738D7C STP V0, V0, [X31 + 0x2F0]
	0x03738D80 STP V0, V0, [X31 + 0x2D0]
	0x03738D84 STP V0, V0, [X31 + 0x2B0]
	0x03738D88 STP V0, V0, [X31 + 0x280]
	0x03738D8C STR V0, [X31 + 0x2A]
	0x03738D90 STP V0, V0, [X31 + 0x260]
	0x03738D94 STP V0, V0, [X31 + 0x230]
	0x03738D98 STP V0, V0, [X31 + 0x210]
	0x03738D9C STP V0, V0, [X31 + 0x1F0]
	0x03738DA0 STP V0, V0, [X31 + 0x1D0]
	0x03738DA4 STP V0, V0, [X31 + 0x1A0]
	0x03738DA8 STR V0, [X31 + 0x1C]
	0x03738DAC STP V0, V0, [X31 + 0x180]
	0x03738DB0 STP V0, V0, [X31 + 0x160]
	0x03738DB4 STP V0, V0, [X31 + 0x140]
	0x03738DB8 STP V0, V0, [X31 + 0x110]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X1
	007 Move X20, X0
	008 Move X0, X1
	009 Move X1, X31
	010 Call String.IsNullOrEmpty, X0
	011 Move TEMP, X0
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {47}
	015 Move X8, [X20+32]
	016 Compare X8, 0
	017 JumpIfEqual {36}
	018 Move X21, X31
	019 Move W22, 32
	020 Move W9, [X8+24]
	021 NotImplemented "Instruction CMP not yet implemented."
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move X1, [X8]
	024 Move W2, 3
	025 Move X0, X19
	026 Move X3, X31
	027 Call String.Compare, X0, X1, X2
	028 Compare W0, 0
	029 JumpIfEqual {39}
	030 Move X8, [X20+32]
	031 Add X21, X21, 1
	032 Add X22, X22, 24
	033 Compare X8, 0
	034 JumpIfNotEqual {20}
	035 Call 0x1C17F20
	036 Move TEMP, 0
	037 Not TEMP
	038 Move W21, TEMP
	039 Move W0, W21
	040 Move X20, [X31+32]
	041 Move X19, [X31+40]
	042 Move X22, [X31+16]
	043 Move X21, [X31+24]
	044 Move X30, [X31+48]
	045 Return X0
	046 Call 0x1C17F28
	047 Move X0, 0x9C1000
	048 Move X0, [X0+1320]
	049 Call 0x1C17D08
	050 Call 0x1C17F10
	051 Move X19, X0
	052 Move X0, 0x9C4000
	053 Move X0, [X0+1416]
	054 Call 0x1C17D08
	055 Move X1, X0
	056 Move X0, X19
	057 Move X2, X31
	058 Call ArgumentNullException..ctor, X0, X1
	059 Move X0, 0xA0E000
	060 Move X0, [X0+296]
	061 Call 0x1C17D08
	062 Move X1, X0
	063 Move X0, X19
	064 Call 0x1C17DEC

Method: System.Nullable`1<UnityEngine.InputSystem.InputControlScheme> FindControlScheme(System.String name)

Disassembly:
	0x03738DBC STP V0, V0, [X31 + 0xF0]
	0x03738DC0 STR V0, [X31 + 0xE]
	0x03738DC4 BL 0x1C16F10
	0x03738DC8 LDR X1, [X20]
	0x03738DCC MOV X26, X0
	0x03738DD0 BL 0x301B7C4
	0x03738DD4 LDR X0, [X23]
	0x03738DD8 BL 0x1C16F10
	0x03738DDC LDR X1, [X22]
	0x03738DE0 STR X0, [X31 + 0x58]
	0x03738DE4 BL 0x301B7C4
	0x03738DE8 LDR X0, [X21]
	0x03738DEC BL 0x1C16F10
	0x03738DF0 LDR X1, [X19]
	0x03738DF4 MOV X21, X0
	0x03738DF8 BL 0x301B7C4
	0x03738DFC LDR X8, [X31 + 0x20]
	0x03738E00 STR X26, [X31 + 0x50]
	0x03738E04 STR X21, [X31 + 0x40]
	0x03738E08 LDR X8, [X8]
	0x03738E0C CBZ X8, 0x3739308
	0x03738E10 LDR X9, [X8 + 0x18]
	0x03738E14 CMP W9, 0x1
	0x03738E18 B.LT 0x3739308
	0x03738E1C AND X9, X9, 0x0
	0x03738E20 STR X9, [X31 + 0x48]
	0x03738E24 ADRP X28, 0xA0D000
	0x03738E28 LDR X28, [X28 + 0x1A0]
	0x03738E2C ADD X9, X31, 0x3C0
	0x03738E30 MOV X19, X31
	0x03738E34 ADD X29, X9, 0x38
	0x03738E38 MOVZ W27, 0x58
	0x03738E3C LDR W9, [X8 + 0x18]
	0x03738E40 CMP X19, X9
	0x03738E44 B.CS 0x3739A84
	0x03738E48 MOVZ W9, 0x48
	0x03738E4C MADD X8, X19, X9, X8
	0x03738E50 ADD X1, X8, 0x20
	0x03738E54 ADD X0, X31, 0x2F0
	0x03738E58 MOVZ W2, 0x48
	0x03738E5C BL 0x3EB1AC0
	0x03738E60 LDR X23, [X31 + 0x2F0]
	0x03738E64 MOV X1, X31
	0x03738E68 MOV X0, X23
	0x03738E6C BL 0x32277A8
	0x03738E70 TBNZ X0, 0x0, 0x3739B04
	0x03738E74 CBZ X23, 0x3739968
	0x03738E78 MOVZ W1, 0x2F
	0x03738E7C MOV X0, X23
	0x03738E80 MOV X2, X31
	0x03738E84 BL 0x322BD98
	0x03738E88 ADDS W31, W0, 0x1
	0x03738E8C B.EQ 0x3738ED8
	0x03738E90 MOV W24, W0
	0x03738E94 MOV X0, X23
	0x03738E98 MOV W1, W31
	0x03738E9C MOV W2, W24
	0x03738EA0 MOV X3, X31
	0x03738EA4 BL 0x3228DE4
	0x03738EA8 MOV X25, X0
	0x03738EAC ADD W1, W24, 0x1
	0x03738EB0 MOV X0, X23
	0x03738EB4 MOV X2, X31
	0x03738EB8 BL 0x322B484
	0x03738EBC MOV X1, X31
	0x03738EC0 MOV X24, X0
	0x03738EC4 BL 0x32277A8
	0x03738EC8 TBNZ X0, 0x0, 0x3739B6C
	0x03738ECC MOV X23, X24
	0x03738ED0 CBNZ X26, 0x3738EE0
	0x03738ED4 B 0x3739968
	0x03738ED8 MOV X25, X31
	0x03738EDC CBZ X26, 0x3739968
	0x03738EE0 LDR W8, [X26 + 0x18]
	0x03738EE4 CMP W8, 0x1

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+64], X30
	003 Move [X31+80], X22
	004 Move [X31+88], X21
	005 Move [X31+96], X20
	006 Move [X31+104], X19
	007 Move X22, 0xCA9000
	008 Move W9, [X22+3319]
	009 Move X21, X1
	010 Move X20, X0
	011 Move X19, X8
	012 Move TEMP, X9
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x9E4000
	017 Move X0, [X0+3560]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+3319], W8
	021 Move X0, X21
	022 Move X1, X31
	023 Call String.IsNullOrEmpty, X0
	024 Move TEMP, X0
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {66}
	028 Move X0, X20
	029 Move X1, X21
	030 Call InputActionAsset.FindControlSchemeIndex, X0, X1
	031 Add W31, W0, 1
	032 Move X8, [X20+32]
	033 Compare X8, 0
	034 JumpIfEqual {84}
	035 Move W9, [X8+24]
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move W10, 24
	038 Move X9, 0x9E4000
	039 NotImplemented "Instruction SMADDL not yet implemented."
	040 Move X9, [X9+3560]
	041 Move V0, [X8+2]
	042 Move X10, [X8+48]
	043 NotImplemented "Instruction MOVI not yet implemented."
	044 Move X2, [X9]
	045 Move [X31], V0
	046 Move V0, [X31]
	047 Move X8, X10
	048 Add X1, X31, 32
	049 Move X0, X19
	050 Move [X31+16], X10
	051 Move [X19], V1
	052 Move [X19+8], V1
	053 Move [X31+2], V0
	054 Move [X31+48], X8
	055 Call Nullable`1<InputControlScheme>..ctor, X0, X1
	056 NotImplemented "Instruction MOVI not yet implemented."
	057 Move [X19], V0
	058 Move [X19+8], V0
	059 Move X20, [X31+96]
	060 Move X19, [X31+104]
	061 Move X22, [X31+80]
	062 Move X21, [X31+88]
	063 Move X30, [X31+64]
	064 Add X31, X31, 112
	065 Return X0
	066 Move X0, 0x9C1000
	067 Move X0, [X0+1320]
	068 Call 0x1C17D08
	069 Call 0x1C17F10
	070 Move X19, X0
	071 Move X0, 0x9C4000
	072 Move X0, [X0+1416]
	073 Call 0x1C17D08
	074 Move X1, X0
	075 Move X0, X19
	076 Move X2, X31
	077 Call ArgumentNullException..ctor, X0, X1
	078 Move X0, 0xA0E000
	079 Move X0, [X0+304]
	080 Call 0x1C17D08
	081 Move X1, X0
	082 Move X0, X19
	083 Call 0x1C17DEC
	084 Call 0x1C17F20
	085 Call 0x1C17F28

Method: System.Boolean IsUsableWithDevice(UnityEngine.InputSystem.InputDevice device)

Disassembly:
	0x03738EE8 B.LT 0x3738F70
	0x03738EEC MOV W24, W31
	0x03738EF0 ADRP X8, 0xA0D000
	0x03738EF4 LDR X8, [X8 + 0x200]
	0x03738EF8 MOV X0, X26
	0x03738EFC MOV W1, W24
	0x03738F00 LDR X2, [X8]
	0x03738F04 BL 0x301BCCC
	0x03738F08 CBZ X0, 0x3739968
	0x03738F0C LDR X0, [X0 + 0x10]
	0x03738F10 MOVZ W2, 0x3
	0x03738F14 MOV X1, X25
	0x03738F18 MOV X3, X31
	0x03738F1C BL 0x322590C
	0x03738F20 CBZ W0, 0x3738F38
	0x03738F24 LDR W8, [X26 + 0x18]
	0x03738F28 ADD W24, W24, 0x1
	0x03738F2C CMP W24, W8
	0x03738F30 B.LT 0x3738EF0
	0x03738F34 B 0x3738F70
	0x03738F38 ADRP X8, 0xA0D000
	0x03738F3C LDR X8, [X8 + 0x200]
	0x03738F40 MOV X0, X26
	0x03738F44 MOV W1, W24
	0x03738F48 LDR X2, [X8]
	0x03738F4C BL 0x301BCCC
	0x03738F50 CBZ X0, 0x3738F70
	0x03738F54 ADD X0, X31, 0x2F0
	0x03738F58 MOV X1, X23
	0x03738F5C BL 0x373C814
	0x03738F60 MOV X23, X0
	0x03738F64 LDR X0, [X31 + 0x58]
	0x03738F68 CBNZ X0, 0x373911C
	0x03738F6C B 0x3739968
	0x03738F70 ADRP X8, 0xA0C000
	0x03738F74 LDR X8, [X8 + 0xF68]
	0x03738F78 LDR X0, [X8]
	0x03738F7C BL 0x1C16F10
	0x03738F80 MOVN W8, 0x0
	0x03738F84 MOV X1, X31
	0x03738F88 MOV X20, X26
	0x03738F8C MOV X26, X0
	0x03738F90 STR W8, [X0 + 0x58]
	0x03738F94 BL 0x33BDD8C
	0x03738F98 STR X25, [X26 + 0x10]
	0x03738F9C ADRP X9, 0xA0D000
	0x03738FA0 LDP W24, W10, [X20 + 0x18]
	0x03738FA4 LDR X8, [X20 + 0x10]
	0x03738FA8 LDR X9, [X9 + 0x1A8]
	0x03738FAC ADD W10, W10, 0x1
	0x03738FB0 LDR X9, [X9]
	0x03738FB4 STR W10, [X20 + 0x1C]
	0x03738FB8 CBZ X8, 0x3739968
	0x03738FBC LDR W10, [X8 + 0x18]
	0x03738FC0 CMP W24, W10
	0x03738FC4 B.CS 0x3738FE4
	0x03738FC8 LDR X11, [X31 + 0x50]
	0x03738FCC SXTW X9, W24
	0x03738FD0 ADD W10, W24, 0x1
	0x03738FD4 ADD X8, X8, X9, 0x3, LSL
	0x03738FD8 STR W10, [X11 + 0x18]
	0x03738FDC STR X26, [X8 + 0x20]
	0x03738FE0 B 0x3738FFC
	0x03738FE4 LDR X8, [X9 + 0x20]
	0x03738FE8 LDR X0, [X31 + 0x50]
	0x03738FEC MOV X1, X26
	0x03738FF0 LDR X8, [X8 + 0xC0]
	0x03738FF4 LDR X2, [X8 + 0x70]
	0x03738FF8 BL 0x301BF90
	0x03738FFC ADRP X8, 0xA0D000
	0x03739000 LDR X8, [X8 + 0x218]
	0x03739004 LDR X0, [X8]
	0x03739008 BL 0x1C16F10
	0x0373900C ADRP X8, 0xA0C000
	0x03739010 LDR X8, [X8 + 0x1E0]
	0x03739014 MOV X25, X0
	0x03739018 LDR X1, [X8]
	0x0373901C BL 0x301B7C4
	0x03739020 LDR X0, [X31 + 0x58]
	0x03739024 CBZ X0, 0x3739968
	0x03739028 ADRP X9, 0xA0C000
	0x0373902C LDR W10, [X0 + 0x1C]
	0x03739030 LDR X8, [X0 + 0x10]
	0x03739034 LDR X9, [X9 + 0x1C0]
	0x03739038 LDR X26, [X31 + 0x50]
	0x0373903C ADD W10, W10, 0x1
	0x03739040 LDR X9, [X9]
	0x03739044 STR W10, [X0 + 0x1C]
	0x03739048 CBZ X8, 0x3739968
	0x0373904C LDRSW X10, [X0 + 0x18]
	0x03739050 LDR W11, [X8 + 0x18]
	0x03739054 CMP W10, W11

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0xCA9000
	008 Move W8, [X21+3320]
	009 Move X19, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0xA0E000
	016 Move X0, [X0+256]
	017 Call 0x1C17CF4
	018 Move X0, 0xA0E000
	019 Move X0, [X0+312]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+3320], W8
	023 Compare X19, 0
	024 JumpIfEqual {86}
	025 Move X8, 0xA0E000
	026 Move X8, [X8+312]
	027 Move X0, [X20+32]
	028 Move X1, [X8]
	029 Call ArrayHelpers.LengthSafe, X0
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move W8, W0
	032 Move X21, X31
	033 Subtract X22, X8, 1
	034 Move W23, 32
	035 Move X8, [X20+32]
	036 Compare X8, 0
	037 JumpIfEqual {84}
	038 Move W9, [X8+24]
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Add X0, X8, X23
	041 Move X1, X19
	042 Move X2, X31
	043 Call InputControlScheme.SupportsDevice, X0, X1
	044 Move TEMP, X0
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfEqual {76}
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Add X21, X21, 1
	050 Add X23, X23, 24
	051 Move X8, 0xA0E000
	052 Move X0, [X20+24]
	053 Move X8, [X8+256]
	054 Move X1, [X8]
	055 Call ArrayHelpers.LengthSafe, X0
	056 Subtract W21, W0, 1
	057 Move W22, W31
	058 Move X8, [X20+24]
	059 Compare X8, 0
	060 JumpIfEqual {84}
	061 Move W9, [X8+24]
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Add X8, X8, W22
	064 Move X0, [X8+32]
	065 Compare X0, 0
	066 JumpIfEqual {84}
	067 Move X1, X19
	068 Call InputActionMap.IsUsableWithDevice, X0, X1
	069 Move TEMP, X0
	070 And TEMP, TEMP, 1
	071 Compare TEMP, 1
	072 JumpIfEqual {76}
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Add W22, W22, 1
	075 Move W0, W31
	076 Move X20, [X31+32]
	077 Move X19, [X31+40]
	078 Move X22, [X31+16]
	079 Move X21, [X31+24]
	080 And W0, W0, 1
	081 Move X30, [X31+48]
	082 Move X23, [X31+56]
	083 Return X0
	084 Call 0x1C17F20
	085 Call 0x1C17F28
	086 Move X0, 0x9C0000
	087 Move X0, [X0+1320]
	088 Call 0x1C17D08
	089 Call 0x1C17F10
	090 Move X19, X0
	091 Move X0, 0x9E3000
	092 Move X0, [X0+3360]
	093 Call 0x1C17D08
	094 Move X1, X0
	095 Move X0, X19
	096 Move X2, X31
	097 Call ArgumentNullException..ctor, X0, X1
	098 Move X0, 0xA0D000
	099 Move X0, [X0+320]
	100 Call 0x1C17D08
	101 Move X1, X0
	102 Move X0, X19
	103 Call 0x1C17DEC

Method: System.Void Enable()

Disassembly:
	0x0373916C STR W9, [X0 + 0x18]
	0x03739170 STR X23, [X8 + 0x20]
	0x03739174 B 0x373918C
	0x03739178 LDR X8, [X9 + 0x20]
	0x0373917C MOV X1, X23
	0x03739180 LDR X8, [X8 + 0xC0]
	0x03739184 LDR X2, [X8 + 0x70]
	0x03739188 BL 0x301BF90
	0x0373918C LDR X21, [X31 + 0x330]
	0x03739190 CBZ X21, 0x37392E8
	0x03739194 LDR X0, [X31 + 0x40]
	0x03739198 CBZ X0, 0x3739968
	0x0373919C ADRP X8, 0xA0C000
	0x037391A0 LDR X8, [X8 + 0x208]
	0x037391A4 MOV W1, W24
	0x037391A8 LDR X2, [X8]
	0x037391AC BL 0x301BCCC
	0x037391B0 LDR X8, [X21 + 0x18]
	0x037391B4 CMP W8, 0x1
	0x037391B8 B.LT 0x37392E8
	0x037391BC MOV X24, X0
	0x037391C0 MOV X20, X31
	0x037391C4 AND X8, X8, 0x0
	0x037391C8 ADD X22, X21, 0x20
	0x037391CC CMP X20, W8, UXTW
	0x037391D0 B.CS 0x3739A84
	0x037391D4 LDP V1, V0, [X22 + 0x20]
	0x037391D8 LDP V3, V2, [X22]
	0x037391DC ADD X8, X31, 0x3C0
	0x037391E0 ADD X0, X31, 0x2B0
	0x037391E4 STP V1, V0, [X31 + 0x2D0]
	0x037391E8 STP V3, V2, [X31 + 0x2B0]
	0x037391EC BL 0x373C680
	0x037391F0 LDP V0, V1, [X31 + 0x3C0]
	0x037391F4 LDR V2, [X31 + 0x3E]
	0x037391F8 LDP V4, V3, [X29]
	0x037391FC STP V0, V1, [X31 + 0x280]
	0x03739200 STR V2, [X31 + 0x2A]
	0x03739204 STP V4, V3, [X31 + 0x260]
	0x03739208 CBZ X23, 0x3739968
	0x0373920C LDR X8, [X23 + 0x10]
	0x03739210 LDP V0, V1, [X31 + 0x280]
	0x03739214 LDR V2, [X31 + 0x2A]
	0x03739218 LDP V3, V4, [X31 + 0x260]
	0x0373921C STP V0, V1, [X31 + 0x60]
	0x03739220 STR V2, [X31 + 0x8]
	0x03739224 STP V3, V4, [X31 + 0xC0]
	0x03739228 CBZ X24, 0x3739968
	0x0373922C LDP V0, V1, [X31 + 0x60]
	0x03739230 LDR V2, [X31 + 0x8]
	0x03739234 LDP V3, V4, [X31 + 0xC0]
	0x03739238 LDR X11, [X28]
	0x0373923C STP V0, V1, [X31 + 0x360]
	0x03739240 STR V2, [X31 + 0x38]
	0x03739244 STP V3, V4, [X31 + 0x340]
	0x03739248 LDR W10, [X24 + 0x1C]
	0x0373924C LDR X9, [X24 + 0x10]
	0x03739250 ADD W10, W10, 0x1
	0x03739254 STR W10, [X24 + 0x1C]
	0x03739258 CBZ X9, 0x3739968
	0x0373925C LDRSW X10, [X24 + 0x18]
	0x03739260 LDR W12, [X9 + 0x18]
	0x03739264 CMP W10, W12
	0x03739268 B.CS 0x37392A0
	0x0373926C ADD W11, W10, 0x1
	0x03739270 STR W11, [X24 + 0x18]
	0x03739274 LDP V2, V0, [X31 + 0x370]
	0x03739278 LDR V1, [X31 + 0x36]
	0x0373927C NOP
	0x03739280 MADD X9, X10, X27, X9
	0x03739284 STR X8, [X9 + 0x50]
	0x03739288 STP V2, V0, [X9 + 0x30]
	0x0373928C STR V1, [X9 + 0x2]
	0x03739290 LDP V1, V0, [X31 + 0x340]
	0x03739294 STUR V0, [X9 + 0x68]
	0x03739298 STUR V1, [X9 + 0x58]
	0x0373929C B 0x37392D4
	0x037392A0 LDR X9, [X11 + 0x20]
	0x037392A4 LDP V0, V1, [X31 + 0x360]
	0x037392A8 LDR V2, [X31 + 0x38]
	0x037392AC LDP V3, V4, [X31 + 0x340]
	0x037392B0 LDR X9, [X9 + 0xC0]
	0x037392B4 ADD X1, X31, 0x3C0
	0x037392B8 MOV X0, X24
	0x037392BC LDR X2, [X9 + 0x70]
	0x037392C0 STP V0, V1, [X31 + 0x3C0]
	0x037392C4 STR V2, [X31 + 0x3E]
	0x037392C8 STR X8, [X31 + 0x3F0]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+56], X23
	004 Move [X31+64], X22
	005 Move [X31+72], X21
	006 Move [X31+80], X20
	007 Move [X31+88], X19
	008 Move X20, 0xCA8000
	009 Move X23, 0xA0D000
	010 Move W8, [X20+3321]
	011 Move X23, [X23+16]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {31}
	017 Move X0, 0xA0D000
	018 Move X0, [X0+24]
	019 Call 0x1C17CF4
	020 Move X0, 0xA0D000
	021 Move X0, [X0+32]
	022 Call 0x1C17CF4
	023 Move X0, 0xA0D000
	024 Move X0, [X0+40]
	025 Call 0x1C17CF4
	026 Move X0, 0xA0D000
	027 Move X0, [X0+16]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X20+3321], W8
	031 Move X21, 0xA0D000
	032 Move X22, 0xA0D000
	033 Move X20, 0xA0D000
	034 Move X21, [X21+32]
	035 Move X22, [X22+40]
	036 Move X20, [X20+24]
	037 Move X0, X19
	038 Move [X31+24], X31
	039 Move [X31+32], X31
	040 Move [X31+40], X31
	041 Call InputActionAsset.get_actionMaps, X0
	042 Move X9, [X23]
	043 Move [X31+8], X0
	044 Move [X31+16], X1
	045 Add X8, X31, 24
	046 Add X0, X31, 8
	047 Move X1, X9
	048 Call ReadOnlyArray`1<Object>.GetEnumerator, X0
	049 Move X1, [X21]
	050 Add X0, X31, 24
	051 Call Enumerator<Object>.MoveNext, X0
	052 Move TEMP, X0
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfNotEqual {62}
	056 Move X1, [X22]
	057 Add X0, X31, 24
	058 Call Enumerator<Object>.get_Current, X0
	059 Compare X0, 0
	060 JumpIfEqual {73}
	061 Call InputActionMap.Enable, X0
	062 Move X1, [X20]
	063 Add X0, X31, 24
	064 Call Enumerator<Object>.Dispose, X0
	065 Move X20, [X31+80]
	066 Move X19, [X31+88]
	067 Move X22, [X31+64]
	068 Move X21, [X31+72]
	069 Move X30, [X31+48]
	070 Move X23, [X31+56]
	071 Add X31, X31, 96
	072 Return 
	073 Move X21, X20
	074 Call 0x1C17F20
	075 Move X21, X20
	076 Move X19, X0
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Move X0, X19
	079 Call 0x3EB2AD0
	080 Move X20, [X0]
	081 Call 0x3EB2AE0
	082 Move X1, [X21]
	083 Add X0, X31, 24
	084 Call Enumerator<Object>.Dispose, X0
	085 Compare X20, 0
	086 JumpIfEqual {65}
	087 Move X0, X20
	088 Call 0x1C17F18
	089 Move X20, X31
	090 Move X19, X0
	091 Move X1, [X21]
	092 Add X0, X31, 24
	093 Call Enumerator<Object>.Dispose, X0
	094 Compare X20, 0
	095 JumpIfNotEqual {98}
	096 Move X0, X19
	097 Call 0x1D2D690
	098 Move X0, X20
	099 Call 0x1C17F18
	100 Call 0x1991590

Method: System.Void Disable()

Disassembly:
	0x03739318 CMP W9, 0x1
	0x0373931C B.LT 0x373996C
	0x03739320 AND X9, X9, 0x0
	0x03739324 STR X31, [X31 + 0x18]
	0x03739328 STR X9, [X31 + 0x8]
	0x0373932C ADRP X28, 0xA0C000
	0x03739330 LDR X28, [X28 + 0x1A0]
	0x03739334 ADD X9, X31, 0x3C0
	0x03739338 MOV X23, X31
	0x0373933C MOV X21, X31
	0x03739340 MOVZ W29, 0x58
	0x03739344 ADD X27, X9, 0x38
	0x03739348 LDR W9, [X8 + 0x18]
	0x0373934C CMP X21, X9
	0x03739350 B.CS 0x3739A84
	0x03739354 ADD X8, X8, X21, 0x5, LSL
	0x03739358 LDP X0, X25, [X8 + 0x20]
	0x0373935C LDP X22, X8, [X8 + 0x30]
	0x03739360 MOV X1, X31
	0x03739364 STR X0, [X31 + 0x30]
	0x03739368 STR X8, [X31 + 0x48]
	0x0373936C BL 0x32277A8
	0x03739370 LDR X20, [X31 + 0x40]
	0x03739374 TBNZ X0, 0x0, 0x3739B30
	0x03739378 CBZ X26, 0x3739968
	0x0373937C LDR W8, [X26 + 0x18]
	0x03739380 CMP W8, 0x1
	0x03739384 B.LT 0x37393F0
	0x03739388 MOV W24, W31
	0x0373938C ADRP X8, 0xA0C000
	0x03739390 LDR X8, [X8 + 0x200]
	0x03739394 MOV X0, X26
	0x03739398 MOV W1, W24
	0x0373939C LDR X2, [X8]
	0x037393A0 BL 0x301BCCC
	0x037393A4 CBZ X0, 0x3739968
	0x037393A8 LDR X0, [X0 + 0x10]
	0x037393AC LDR X1, [X31 + 0x30]
	0x037393B0 MOVZ W2, 0x3
	0x037393B4 MOV X3, X31
	0x037393B8 BL 0x322590C
	0x037393BC CBZ W0, 0x37393D4
	0x037393C0 LDR W8, [X26 + 0x18]
	0x037393C4 ADD W24, W24, 0x1
	0x037393C8 CMP W24, W8
	0x037393CC B.LT 0x373938C
	0x037393D0 B 0x37393F0
	0x037393D4 ADRP X8, 0xA0C000
	0x037393D8 LDR X8, [X8 + 0x200]
	0x037393DC MOV X0, X26
	0x037393E0 MOV W1, W24
	0x037393E4 LDR X2, [X8]
	0x037393E8 BL 0x301BCCC
	0x037393EC CBNZ X0, 0x37395A4
	0x037393F0 ADRP X8, 0xA0B000
	0x037393F4 LDR X8, [X8 + 0xF68]
	0x037393F8 LDR X0, [X8]
	0x037393FC BL 0x1C16F10
	0x03739400 MOVN W8, 0x0
	0x03739404 MOV X1, X31
	0x03739408 MOV X19, X26
	0x0373940C MOV X26, X0
	0x03739410 STR W8, [X0 + 0x58]
	0x03739414 BL 0x33BDD8C
	0x03739418 LDR X8, [X31 + 0x30]
	0x0373941C MOV X0, X25
	0x03739420 MOV X1, X31
	0x03739424 STR X8, [X26 + 0x10]
	0x03739428 BL 0x32277A8
	0x0373942C ANDS W31, W0, 0x1
	0x03739430 CSEL X8, X31, X25, NE
	0x03739434 STR X8, [X26 + 0x18]
	0x03739438 ADRP X9, 0xA0C000
	0x0373943C LDP W24, W10, [X19 + 0x18]
	0x03739440 LDR X8, [X19 + 0x10]
	0x03739444 LDR X9, [X9 + 0x1A8]
	0x03739448 ADD W10, W10, 0x1
	0x0373944C LDR X9, [X9]
	0x03739450 STR W10, [X19 + 0x1C]
	0x03739454 CBZ X8, 0x3739968
	0x03739458 LDR W10, [X8 + 0x18]
	0x0373945C CMP W24, W10
	0x03739460 B.CS 0x3739480
	0x03739464 LDR X11, [X31 + 0x50]
	0x03739468 SXTW X9, W24
	0x0373946C ADD W10, W24, 0x1
	0x03739470 ADD X8, X8, X9, 0x3, LSL
	0x03739474 STR W10, [X11 + 0x18]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+56], X23
	004 Move [X31+64], X22
	005 Move [X31+72], X21
	006 Move [X31+80], X20
	007 Move [X31+88], X19
	008 Move X20, 0xCA8000
	009 Move X23, 0xA0D000
	010 Move W8, [X20+3322]
	011 Move X23, [X23+16]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {31}
	017 Move X0, 0xA0D000
	018 Move X0, [X0+24]
	019 Call 0x1C17CF4
	020 Move X0, 0xA0D000
	021 Move X0, [X0+32]
	022 Call 0x1C17CF4
	023 Move X0, 0xA0D000
	024 Move X0, [X0+40]
	025 Call 0x1C17CF4
	026 Move X0, 0xA0D000
	027 Move X0, [X0+16]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X20+3322], W8
	031 Move X21, 0xA0D000
	032 Move X22, 0xA0D000
	033 Move X20, 0xA0D000
	034 Move X21, [X21+32]
	035 Move X22, [X22+40]
	036 Move X20, [X20+24]
	037 Move X0, X19
	038 Move [X31+24], X31
	039 Move [X31+32], X31
	040 Move [X31+40], X31
	041 Call InputActionAsset.get_actionMaps, X0
	042 Move X9, [X23]
	043 Move [X31+8], X0
	044 Move [X31+16], X1
	045 Add X8, X31, 24
	046 Add X0, X31, 8
	047 Move X1, X9
	048 Call ReadOnlyArray`1<Object>.GetEnumerator, X0
	049 Move X1, [X21]
	050 Add X0, X31, 24
	051 Call Enumerator<Object>.MoveNext, X0
	052 Move TEMP, X0
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfNotEqual {62}
	056 Move X1, [X22]
	057 Add X0, X31, 24
	058 Call Enumerator<Object>.get_Current, X0
	059 Compare X0, 0
	060 JumpIfEqual {73}
	061 Call InputActionMap.Disable, X0
	062 Move X1, [X20]
	063 Add X0, X31, 24
	064 Call Enumerator<Object>.Dispose, X0
	065 Move X20, [X31+80]
	066 Move X19, [X31+88]
	067 Move X22, [X31+64]
	068 Move X21, [X31+72]
	069 Move X30, [X31+48]
	070 Move X23, [X31+56]
	071 Add X31, X31, 96
	072 Return 
	073 Move X21, X20
	074 Call 0x1C17F20
	075 Move X21, X20
	076 Move X19, X0
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Move X0, X19
	079 Call 0x3EB2AD0
	080 Move X20, [X0]
	081 Call 0x3EB2AE0
	082 Move X1, [X21]
	083 Add X0, X31, 24
	084 Call Enumerator<Object>.Dispose, X0
	085 Compare X20, 0
	086 JumpIfEqual {65}
	087 Move X0, X20
	088 Call 0x1C17F18
	089 Move X20, X31
	090 Move X19, X0
	091 Move X1, [X21]
	092 Add X0, X31, 24
	093 Call Enumerator<Object>.Dispose, X0
	094 Compare X20, 0
	095 JumpIfNotEqual {98}
	096 Move X0, X19
	097 Call 0x1D2D690
	098 Move X0, X20
	099 Call 0x1C17F18
	100 Call 0x1991590

Method: System.Boolean Contains(UnityEngine.InputSystem.InputAction action)

Disassembly:
	0x037394AC LDR X8, [X8 + 0x1E0]
	0x037394B0 MOV X25, X0
	0x037394B4 LDR X1, [X8]
	0x037394B8 BL 0x301B7C4
	0x037394BC LDR X0, [X31 + 0x58]
	0x037394C0 CBZ X0, 0x3739968
	0x037394C4 ADRP X9, 0xA0C000
	0x037394C8 LDR W10, [X0 + 0x1C]
	0x037394CC LDR X8, [X0 + 0x10]
	0x037394D0 LDR X9, [X9 + 0x1C0]
	0x037394D4 LDR X26, [X31 + 0x50]
	0x037394D8 ADD W10, W10, 0x1
	0x037394DC LDR X9, [X9]
	0x037394E0 STR W10, [X0 + 0x1C]
	0x037394E4 CBZ X8, 0x3739968
	0x037394E8 LDRSW X10, [X0 + 0x18]
	0x037394EC LDR W11, [X8 + 0x18]
	0x037394F0 CMP W10, W11
	0x037394F4 B.CS 0x373950C
	0x037394F8 ADD W9, W10, 0x1
	0x037394FC ADD X8, X8, X10, 0x3, LSL
	0x03739500 STR W9, [X0 + 0x18]
	0x03739504 STR X25, [X8 + 0x20]
	0x03739508 B 0x3739520
	0x0373950C LDR X8, [X9 + 0x20]
	0x03739510 MOV X1, X25
	0x03739514 LDR X8, [X8 + 0xC0]
	0x03739518 LDR X2, [X8 + 0x70]
	0x0373951C BL 0x301BF90
	0x03739520 ADRP X8, 0xA0C000
	0x03739524 LDR X8, [X8 + 0x210]
	0x03739528 LDR X0, [X8]
	0x0373952C BL 0x1C16F10
	0x03739530 ADRP X8, 0xA0C000
	0x03739534 LDR X8, [X8 + 0x1E8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xCA8000
	006 Move W8, [X21+3323]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x9BB000
	014 Move X0, [X0+1432]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+3323], W8
	018 Compare X20, 0
	019 JumpIfEqual {42}
	020 Move X8, [X20+200]
	021 Compare X8, 0
	022 JumpIfEqual {42}
	023 Move X9, [X8+80]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X9, 0x9BB000
	026 Move X9, [X9+1432]
	027 Move X20, [X8+32]
	028 Move X0, [X9]
	029 Move W9, [X0+224]
	030 Compare W9, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1C17DFC
	033 Move X0, X20
	034 Move X1, X19
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X2, X31
	038 Move X30, [X31+32]
	039 Move X21, [X31+40]
	040 Call Object.op_Equality, X0, X1
	041 Return X0
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move W0, W31
	045 Move X30, [X31+32]
	046 Move X21, [X31+40]
	047 Return X0

Method: System.Collections.Generic.IEnumerator`1<UnityEngine.InputSystem.InputAction> GetEnumerator()

Disassembly:
	0x03739538 MOV X25, X0
	0x0373953C LDR X1, [X8]
	0x03739540 BL 0x2FCD7F8
	0x03739544 CBZ X20, 0x3739968
	0x03739548 ADRP X9, 0xA0C000
	0x0373954C LDR W10, [X20 + 0x1C]
	0x03739550 LDR X8, [X20 + 0x10]
	0x03739554 LDR X9, [X9 + 0x1B0]
	0x03739558 ADD W10, W10, 0x1
	0x0373955C LDR X9, [X9]
	0x03739560 STR W10, [X20 + 0x1C]
	0x03739564 CBZ X8, 0x3739968
	0x03739568 LDRSW X10, [X20 + 0x18]
	0x0373956C LDR W11, [X8 + 0x18]
	0x03739570 CMP W10, W11
	0x03739574 B.CS 0x373958C
	0x03739578 ADD W9, W10, 0x1
	0x0373957C ADD X8, X8, X10, 0x3, LSL
	0x03739580 STR W9, [X20 + 0x18]
	0x03739584 STR X25, [X8 + 0x20]
	0x03739588 B 0x37395A4
	0x0373958C LDR X8, [X9 + 0x20]
	0x03739590 MOV X0, X20
	0x03739594 MOV X1, X25

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xCA8000
	006 Move X21, 0xA0D000
	007 Move W8, [X20+3324]
	008 Move X21, [X21+336]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xA0D000
	015 Move X0, [X0+336]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3324], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move X1, X31
	022 Move X20, X0
	023 Call Object..ctor, X0
	024 Move [X20+16], W31
	025 Move [X20+32], X19
	026 Move X0, X20
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Return X0

Method: System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()

Disassembly:
	0x037395C0 LDR X8, [X8 + 0x18]

ISIL:
	001 Call InputActionAsset.GetEnumerator, X0
	002 Return X0

Method: System.Void MarkAsDirty()

Disassembly:
	0x037395C4 CMP W8, 0x1

ISIL:
	001 Return 

Method: System.Void OnWantToChangeSetup()

Disassembly:
	0x037395C8 B.LT 0x3739804
	0x037395CC MOV X23, X31
	0x037395D0 AND X8, X8, 0x0
	0x037395D4 STR X8, [X31 + 0x38]
	0x037395D8 LDR W8, [X22 + 0x18]
	0x037395DC CMP X23, X8
	0x037395E0 B.CS 0x3739A84
	0x037395E4 MOVZ W8, 0x48
	0x037395E8 MADD X8, X23, X8, X22
	0x037395EC ADD X1, X8, 0x20
	0x037395F0 ADD X0, X31, 0x210
	0x037395F4 MOVZ W2, 0x48
	0x037395F8 BL 0x3EB1AC0
	0x037395FC LDR X0, [X31 + 0x210]
	0x03739600 MOV X1, X31
	0x03739604 BL 0x32277A8
	0x03739608 TBNZ X0, 0x0, 0x3739A88
	0x0373960C ADD X0, X31, 0x210
	0x03739610 MOV X1, X31
	0x03739614 BL 0x373C814
	0x03739618 MOV X25, X0
	0x0373961C LDR X0, [X31 + 0x58]
	0x03739620 CBZ X0, 0x3739968
	0x03739624 ADRP X8, 0xA0C000
	0x03739628 LDR X8, [X8 + 0x1F8]
	0x0373962C MOV W1, W24
	0x03739630 LDR X2, [X8]
	0x03739634 BL 0x301BCCC
	0x03739638 CBZ X0, 0x3739968
	0x0373963C ADRP X9, 0xA0C000
	0x03739640 LDR W10, [X0 + 0x1C]
	0x03739644 LDR X8, [X0 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xCA8000
	006 Move X20, 0xA0D000
	007 Move W8, [X21+3325]
	008 Move X20, [X20+256]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xA0D000
	015 Move X0, [X0+256]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3325], W8
	019 Move X0, [X19+24]
	020 Move X1, [X20]
	021 Call ArrayHelpers.LengthSafe, X0
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move X8, [X19+24]
	024 Compare X8, 0
	025 JumpIfEqual {41}
	026 Move W9, [X8+24]
	027 Compare W9, 0
	028 JumpIfEqual {42}
	029 Move X0, [X8+32]
	030 Compare X0, 0
	031 JumpIfEqual {41}
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move X30, [X31+32]
	039 Move X21, [X31+40]
	040 Return 
	041 Call 0x1C17F20
	042 Call 0x1C17F28

Method: System.Void OnSetupChanged()

Disassembly:
	0x037398C8 CMP W9, W10
	0x037398CC B.CS 0x37398F0
	0x037398D0 MADD X8, X9, X29, X8
	0x037398D4 ADD W10, W9, 0x1
	0x037398D8 ADD X0, X8, 0x20
	0x037398DC ADD X1, X31, 0x360
	0x037398E0 MOVZ W2, 0x58
	0x037398E4 STR W10, [X23 + 0x18]
	0x037398E8 BL 0x3EB1AC0
	0x037398EC B 0x373991C
	0x037398F0 LDR X8, [X22 + 0x20]
	0x037398F4 ADD X0, X31, 0x3C0
	0x037398F8 ADD X1, X31, 0x360
	0x037398FC MOVZ W2, 0x58
	0x03739900 LDR X8, [X8 + 0xC0]
	0x03739904 LDR X24, [X8 + 0x70]
	0x03739908 BL 0x3EB1AC0
	0x0373990C ADD X1, X31, 0x3C0
	0x03739910 MOV X0, X23
	0x03739914 MOV X2, X24
	0x03739918 BL 0x2FCE0B8
	0x0373991C ADD X20, X20, 0x1
	0x03739920 CMP X19, X20
	0x03739924 ADD X21, X21, 0x40
	0x03739928 B.NE 0x3739858
	0x0373992C B 0x373994C
	0x03739930 LDR X0, [X31 + 0x40]
	0x03739934 CBZ X0, 0x3739968
	0x03739938 ADRP X8, 0xA0C000
	0x0373993C LDR X8, [X8 + 0x208]
	0x03739940 MOV W1, W24
	0x03739944 LDR X2, [X8]
	0x03739948 BL 0x301BCCC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xCA8000
	006 Move X20, 0xA0D000
	007 Move W8, [X21+3326]
	008 Move X20, [X20+256]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xA0D000
	015 Move X0, [X0+256]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3326], W8
	019 Move X0, [X19+24]
	020 Move X1, [X20]
	021 Call ArrayHelpers.LengthSafe, X0
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move X8, [X19+24]
	024 Compare X8, 0
	025 JumpIfEqual {42}
	026 Move W9, [X8+24]
	027 Compare W9, 0
	028 JumpIfEqual {43}
	029 Move X0, [X8+32]
	030 Compare X0, 0
	031 JumpIfEqual {42}
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Move [X19+40], X31
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X30, [X31+32]
	040 Move X21, [X31+40]
	041 Return 
	042 Call 0x1C17F20
	043 Call 0x1C17F28

Method: System.Void ReResolveIfNecessary(System.Boolean fullResolve)

Disassembly:
	0x037379FC B.CS 0x3737AA8
	0x03737A00 ADD X8, X8, X23, 0x3, LSL
	0x03737A04 LDR X22, [X8 + 0x20]
	0x03737A08 CBZ X22, 0x3737A84
	0x03737A0C MOV X0, X22
	0x03737A10 BL 0x3737B4C
	0x03737A14 LDP X2, X3, [X31]
	0x03737A18 MOV X4, X31
	0x03737A1C BL 0x3378C2C
	0x03737A20 TBNZ X0, 0x0, 0x3737A90
	0x03737A24 LDR X8, [X19 + 0x18]
	0x03737A28 ADD X23, X23, 0x1
	0x03737A2C CBNZ X8, 0x37379EC
	0x03737A30 B 0x3737A84
	0x03737A34 LDR X8, [X19 + 0x18]
	0x03737A38 CBZ X8, 0x3737A84

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+40]
	003 Compare X8, 0
	004 JumpIfEqual {18}
	005 Move X8, [X0+24]
	006 Compare X8, 0
	007 JumpIfEqual {20}
	008 Move W9, [X8+24]
	009 Compare W9, 0
	010 JumpIfEqual {21}
	011 Move X0, [X8+32]
	012 Compare X0, 0
	013 JumpIfEqual {20}
	014 And W1, W1, 1
	015 Move X30, [X31+16]
	016 Call InputActionMap.LazyResolveBindings, X0, X1
	017 Return 
	018 Move X30, [X31+16]
	019 Return 
	020 Call 0x1C17F20
	021 Call 0x1C17F28

Method: System.Void ResolveBindingsIfNecessary()

Disassembly:
	0x03739B1C BL 0x1C16E04
	0x03739B20 MOV X19, X0
	0x03739B24 ADRP X0, 0xA0C000
	0x03739B28 LDR X0, [X0 + 0x230]
	0x03739B2C B 0x3739B58
	0x03739B30 ADD W8, W21, 0x1
	0x03739B34 STR W8, [X31 + 0x3C0]
	0x03739B38 ADRP X0, 0x9BA000
	0x03739B3C LDR X0, [X0 + 0x758]
	0x03739B40 BL 0x1C16D08
	0x03739B44 ADD X1, X31, 0x3C0
	0x03739B48 BL 0x1C16E04
	0x03739B4C MOV X19, X0
	0x03739B50 ADRP X0, 0xA0C000
	0x03739B54 LDR X0, [X0 + 0x238]
	0x03739B58 BL 0x1C16D08
	0x03739B5C MOV X1, X19
	0x03739B60 MOV X2, X31
	0x03739B64 BL 0x321EFD0
	0x03739B68 B 0x3739AC8
	0x03739B6C ADRP X0, 0xA0C000
	0x03739B70 LDR X0, [X0 + 0x240]
	0x03739B74 BL 0x1C16D08
	0x03739B78 MOV X19, X0
	0x03739B7C ADRP X0, 0xA0C000
	0x03739B80 LDR X0, [X0 + 0x248]
	0x03739B84 BL 0x1C16D08
	0x03739B88 MOV X2, X0
	0x03739B8C MOV X0, X19
	0x03739B90 MOV X1, X23
	0x03739B94 MOV X3, X31
	0x03739B98 BL 0x32274B8
	0x03739B9C B 0x3739AC8
	0x03739BA0 RET
	0x03739BA4 STR X30, [X31 - 0x20]!
	0x03739BA8 STP X20, X19, [X31 + 0x10]
	0x03739BAC ADRP X20, 0xCA7000
	0x03739BB0 LDRB W8, [X20 + 0xD02]
	0x03739BB4 MOV X19, X0
	0x03739BB8 TBNZ X8, 0x0, 0x3739BDC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xCA8000
	006 Move X20, 0xA0D000
	007 Move W8, [X21+3327]
	008 Move X20, [X20+256]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xA0D000
	015 Move X0, [X0+256]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3327], W8
	019 Move X0, [X19+24]
	020 Move X1, [X20]
	021 Call ArrayHelpers.LengthSafe, X0
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move X19, [X19+24]
	024 Compare X19, 0
	025 JumpIfEqual {48}
	026 Move W8, [X19+24]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move W20, W31
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Add X8, X19, W20
	031 Move X0, [X8+32]
	032 Compare X0, 0
	033 JumpIfEqual {48}
	034 Call InputActionMap.ResolveBindingsIfNecessary, X0
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {42}
	039 Move W8, [X19+24]
	040 Add W20, W20, 1
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X30, [X31+32]
	045 Move X21, [X31+40]
	046 Return 
	047 Call 0x1C17F28
	048 Call 0x1C17F20

Method: System.Void OnDestroy()

Disassembly:
	0x03739BBC ADRP X0, 0xA0C000
	0x03739BC0 LDR X0, [X0 + 0x250]
	0x03739BC4 BL 0x1C16CF4
	0x03739BC8 ADRP X0, 0xA0C000
	0x03739BCC LDR X0, [X0 + 0x258]
	0x03739BD0 BL 0x1C16CF4
	0x03739BD4 MOVZ W8, 0x1
	0x03739BD8 STRB W8, [X20 + 0xD02]
	0x03739BDC LDR W8, [X19 + 0x10]
	0x03739BE0 LDR X20, [X19 + 0x20]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call InputActionAsset.Disable, X0
	005 Move X0, [X19+40]
	006 Compare X0, 0
	007 JumpIfEqual {11}
	008 Move X1, X31
	009 Call InputActionState.Dispose, X0
	010 Move [X19+40], X31
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 Return 

Method: System.Void .ctor()

Disassembly:
	0x03739BE4 CMP W8, 0x1
	0x03739BE8 B.EQ 0x3739C10

ISIL:
	001 Move X1, X31
	002 Call ScriptableObject..ctor, X0
	003 Return 

