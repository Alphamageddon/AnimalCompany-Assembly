Type: UnityEngine.InputSystem.InputActionReference

Method: UnityEngine.InputSystem.InputActionAsset get_asset()

Disassembly:
	0x0374659C CBNZ X0, 0x3746710
	0x037465A0 ADRP X8, 0x9B1000

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: UnityEngine.InputSystem.InputAction get_action()

Disassembly:
	0x037461B4 BL 0x1C16F10
	0x037461B8 MOV X19, X0
	0x037461BC ADRP X0, 0x9FF000
	0x037461C0 LDR X0, [X0 + 0x840]
	0x037461C4 BL 0x1C16D08
	0x037461C8 MOV X1, X0
	0x037461CC MOV X0, X19
	0x037461D0 MOV X2, X31
	0x037461D4 BL 0x337DF1C
	0x037461D8 ADRP X0, 0x9FF000
	0x037461DC LDR X0, [X0 + 0x848]
	0x037461E0 BL 0x1C16D08
	0x037461E4 MOV X1, X0
	0x037461E8 MOV X0, X19
	0x037461EC BL 0x1C16DEC
	0x037461F0 ADRP X0, 0x9FF000
	0x037461F4 LDR X21, [X19 + 0x20]
	0x037461F8 LDR X0, [X0 + 0x850]
	0x037461FC BL 0x1C16D08
	0x03746200 MOV X1, X19
	0x03746204 MOV X2, X20
	0x03746208 MOV X3, X21
	0x0374620C MOV X4, X31
	0x03746210 BL 0x3227C18
	0x03746214 B 0x3746250
	0x03746218 BL 0x1C16F20
	0x0374621C ADRP X0, 0x9FF000
	0x03746220 LDR X19, [X19 + 0x10]
	0x03746224 LDR X0, [X0 + 0x820]
	0x03746228 BL 0x1C16D08
	0x0374622C MOV X20, X0
	0x03746230 ADRP X0, 0x9FF000
	0x03746234 LDR X0, [X0 + 0x828]
	0x03746238 BL 0x1C16D08
	0x0374623C MOV X2, X0
	0x03746240 MOV X0, X20
	0x03746244 MOV X1, X19
	0x03746248 MOV X3, X31
	0x0374624C BL 0x32274B8
	0x03746250 MOV X19, X0
	0x03746254 ADRP X0, 0x9AD000
	0x03746258 LDR X0, [X0 + 0x5B0]
	0x0374625C BL 0x1C16D08

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+32], X20
	004 Move [X31+40], X19
	005 Move X20, 0xC9B000
	006 Move W8, [X20+3442]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x9AE000
	013 Move X0, [X0+1432]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+3442], W8
	017 Move X0, [X19+40]
	018 Compare X0, 0
	019 JumpIfNotEqual {52}
	020 Move X8, 0x9AE000
	021 Move X8, [X8+1432]
	022 Move X20, [X19+24]
	023 Move X0, [X8]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, X20
	029 Move X1, X31
	030 Move X2, X31
	031 Call Object.op_Equality, X0, X1
	032 Move W8, W0
	033 Move X0, X31
	034 Move TEMP, X8
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfEqual {52}
	038 Move X20, [X19+24]
	039 Move X1, [X19+32]
	040 Add X0, X31, 0
	041 Move X2, X31
	042 Move [X31], X31
	043 Move [X31+8], X31
	044 Call Guid..ctor, X0, X1
	045 Compare X20, 0
	046 JumpIfEqual {57}
	047 Move X1, [X31]
	048 Move X2, [X31+8]
	049 Move X0, X20
	050 Call InputActionAsset.FindAction, X0, X1
	051 Move [X19+40], X0
	052 Move X20, [X31+32]
	053 Move X19, [X31+40]
	054 Move X30, [X31+16]
	055 Add X31, X31, 48
	056 Return X0
	057 Call 0x1C17F20

Method: System.Void Set(UnityEngine.InputSystem.InputAction action)

Disassembly:
	0x037465A4 LDR X8, [X8 + 0x3E0]
	0x037465A8 LDR X0, [X8]
	0x037465AC BL 0x1C16F10
	0x037465B0 MOV X1, X24
	0x037465B4 MOV W2, W27
	0x037465B8 MOV X3, X31
	0x037465BC MOV X4, X31
	0x037465C0 MOV X5, X31
	0x037465C4 MOV X6, X31
	0x037465C8 MOV X7, X31
	0x037465CC MOV X25, X0
	0x037465D0 BL 0x3734C54
	0x037465D4 CBZ X25, 0x3746800
	0x037465D8 ADRP X24, 0x9FF000
	0x037465DC LDR X24, [X24 + 0x870]
	0x037465E0 MOV X0, X25
	0x037465E4 MOV X1, X31
	0x037465E8 STR X26, [X25 + 0x20]
	0x037465EC BL 0x37356F8
	0x037465F0 LDR X2, [X24]
	0x037465F4 ADD X0, X19, 0x28
	0x037465F8 MOV X1, X25
	0x037465FC BL 0x2172CE4
	0x03746600 MOV X0, X23
	0x03746604 MOV X1, X31
	0x03746608 STR X19, [X25 + 0xC8]
	0x0374660C BL 0x32277A8
	0x03746610 TBZ X0, 0x0, 0x3746638
	0x03746614 MOV X0, X20
	0x03746618 MOV X1, X31
	0x0374661C BL 0x32277A8
	0x03746620 TBZ X0, 0x0, 0x3746804
	0x03746624 MOV X0, X19
	0x03746628 MOV X1, X31
	0x0374662C STP X21, X22, [X25 + 0x30]
	0x03746630 BL 0x373894C
	0x03746634 B 0x3746660
	0x03746638 MOVI V0.2D, 0x0
	0x0374663C ADD X8, X31, 0x58
	0x03746640 ADD X1, X31, 0x0
	0x03746644 MOV X0, X25
	0x03746648 STP X31, X31, [X31]
	0x0374664C STR X31, [X31 + 0x50]
	0x03746650 STP X23, X22, [X31 + 0x10]
	0x03746654 STP V0, V0, [X31 + 0x30]
	0x03746658 STP X21, X20, [X31 + 0x20]
	0x0374665C BL 0x3746D3C
	0x03746660 MOV X0, X25
	0x03746664 LDP X20, X19, [X31 + 0xB0]
	0x03746668 LDP X22, X21, [X31 + 0xA0]
	0x0374666C LDP X24, X23, [X31 + 0x90]
	0x03746670 LDP X26, X25, [X31 + 0x80]
	0x03746674 LDP X30, X27, [X31 + 0x70]
	0x03746678 ADD X31, X31, 0xC0
	0x0374667C RET
	0x03746680 ADRP X0, 0x9B2000
	0x03746684 LDR X0, [X0 + 0x528]
	0x03746688 BL 0x1C16D08
	0x0374668C BL 0x1C16F10
	0x03746690 MOV X19, X0
	0x03746694 ADRP X0, 0x9FF000
	0x03746698 LDR X0, [X0 + 0x838]
	0x0374669C BL 0x1C16D08
	0x037466A0 MOV X1, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xC9B000
	007 Move W8, [X21+3443]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x9AE000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3443], W8
	019 Compare X19, 0
	020 JumpIfEqual {50}
	021 Move X22, [X19+200]
	022 Compare X22, 0
	023 JumpIfEqual {58}
	024 Move X8, [X22+80]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X8, 0x9AE000
	027 Move X8, [X8+1432]
	028 Move X21, [X22+32]
	029 Move X0, [X8]
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move X0, X21
	035 Move X1, X31
	036 Move X2, X31
	037 Call Object.op_Equality, X0, X1
	038 Move TEMP, X0
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfEqual {58}
	042 Move X1, [X22+32]
	043 Move X0, X20
	044 Move X2, X19
	045 Move X20, [X31+32]
	046 Move X19, [X31+40]
	047 Move X22, [X31+16]
	048 Move X21, [X31+24]
	049 Move X30, [X31+48]
	050 Move [X20+24], X31
	051 Move [X20+32], X31
	052 Move X20, [X31+32]
	053 Move X19, [X31+40]
	054 Move X22, [X31+16]
	055 Move X21, [X31+24]
	056 Move X30, [X31+48]
	057 Return 
	058 Move X0, 0xA00000
	059 Move X0, [X0+1952]
	060 Call 0x1C17D08
	061 Move X1, X19
	062 Move X2, X31
	063 Call String.Format, X0, X1
	064 Move X19, X0
	065 Move X0, 0x9AE000
	066 Move X0, [X0+1456]
	067 Call 0x1C17D08
	068 Call 0x1C17F10
	069 Move X1, X19
	070 Move X2, X31
	071 Move X20, X0
	072 Call InvalidOperationException..ctor, X0, X1
	073 Move X0, 0xA00000
	074 Move X0, [X0+1960]
	075 Call 0x1C17D08
	076 Move X1, X0
	077 Move X0, X20
	078 Call 0x1C17DEC

Method: System.Void Set(UnityEngine.InputSystem.InputActionAsset asset, System.String mapName, System.String actionName)

Disassembly:
	0x03746814 MOV X2, X20
	0x03746818 MOV X3, X31
	0x0374681C BL 0x3227BD4
	0x03746820 MOV X19, X0
	0x03746824 ADRP X0, 0x9B5000
	0x03746828 LDR X0, [X0 + 0x578]
	0x0374682C BL 0x1C16D08
	0x03746830 BL 0x1C16F10
	0x03746834 MOV X20, X0
	0x03746838 ADRP X0, 0x9FF000
	0x0374683C LDR X0, [X0 + 0x8A0]
	0x03746840 BL 0x1C16D08
	0x03746844 MOV X2, X0
	0x03746848 MOV X0, X20
	0x0374684C MOV X1, X19
	0x03746850 MOV X3, X31
	0x03746854 BL 0x330E16C
	0x03746858 ADRP X0, 0x9FF000
	0x0374685C LDR X0, [X0 + 0x880]
	0x03746860 BL 0x1C16D08
	0x03746864 MOV X1, X0
	0x03746868 MOV X0, X20
	0x0374686C BL 0x1C16DEC
	0x03746870 SUB X31, X31, 0x80
	0x03746874 STP X30, X19, [X31 + 0x70]
	0x03746878 MOV X19, X8
	0x0374687C MOVI V0.2D, 0x0
	0x03746880 STP X1, X2, [X31 + 0x10]
	0x03746884 ADD X8, X31, 0x58
	0x03746888 ADD X1, X31, 0x0
	0x0374688C STP X31, X31, [X31]
	0x03746890 STR X31, [X31 + 0x50]
	0x03746894 STP V0, V0, [X31 + 0x30]
	0x03746898 STP X3, X4, [X31 + 0x20]
	0x0374689C BL 0x3746D3C
	0x037468A0 LDR X8, [X31 + 0x68]
	0x037468A4 LDUR V0, [X31 + 0x58]
	0x037468A8 STR X8, [X19 + 0x10]
	0x037468AC STR V0, [X19]
	0x037468B0 LDP X30, X19, [X31 + 0x70]
	0x037468B4 ADD X31, X31, 0x80
	0x037468B8 RET
	0x037468BC SUB X31, X31, 0x130
	0x037468C0 STP X29, X30, [X31 + 0xD0]
	0x037468C4 STP X28, X27, [X31 + 0xE0]
	0x037468C8 STP X26, X25, [X31 + 0xF0]
	0x037468CC STP X24, X23, [X31 + 0x100]
	0x037468D0 STP X22, X21, [X31 + 0x110]
	0x037468D4 STP X20, X19, [X31 + 0x120]
	0x037468D8 ADRP X19, 0xC9A000
	0x037468DC LDRB W8, [X19 + 0xD80]
	0x037468E0 MOV X21, X0
	0x037468E4 TBNZ X8, 0x0, 0x3746950
	0x037468E8 ADRP X0, 0x9FF000
	0x037468EC LDR X0, [X0 + 0x8A8]
	0x037468F0 BL 0x1C16CF4
	0x037468F4 ADRP X0, 0x9FF000
	0x037468F8 LDR X0, [X0 + 0x8B0]
	0x037468FC BL 0x1C16CF4
	0x03746900 ADRP X0, 0x9FF000
	0x03746904 LDR X0, [X0 + 0x8B8]
	0x03746908 BL 0x1C16CF4
	0x0374690C ADRP X0, 0x9FE000
	0x03746910 LDR X0, [X0 + 0xF98]
	0x03746914 BL 0x1C16CF4
	0x03746918 ADRP X0, 0x9FF000
	0x0374691C LDR X0, [X0 + 0x8C0]
	0x03746920 BL 0x1C16CF4
	0x03746924 ADRP X0, 0x9FE000
	0x03746928 LDR X0, [X0 + 0xFA8]
	0x0374692C BL 0x1C16CF4
	0x03746930 ADRP X0, 0x9FF000
	0x03746934 LDR X0, [X0 + 0x8C8]
	0x03746938 BL 0x1C16CF4
	0x0374693C ADRP X0, 0x9FF000
	0x03746940 LDR X0, [X0 + 0x8D0]
	0x03746944 BL 0x1C16CF4
	0x03746948 MOVZ W8, 0x1
	0x0374694C STRB W8, [X19 + 0xD80]
	0x03746950 CBZ X21, 0x3746B78
	0x03746954 MOV X0, X21
	0x03746958 MOV X1, X31
	0x0374695C BL 0x37342D8
	0x03746960 CBZ X0, 0x3746BC0
	0x03746964 ADRP X19, 0x9FE000
	0x03746968 ADRP X20, 0x9FF000
	0x0374696C ADRP X23, 0x9FF000
	0x03746970 LDR X19, [X19 + 0xFA8]
	0x03746974 LDR X20, [X20 + 0x8B0]
	0x03746978 LDR X23, [X23 + 0x8A8]
	0x0374697C MOV X1, X31
	0x03746980 MOV X24, X0
	0x03746984 BL 0x3738648
	0x03746988 MOV X0, X21
	0x0374698C MOV X1, X31
	0x03746990 BL 0x37345CC
	0x03746994 LDR X8, [X19]
	0x03746998 STP X0, X1, [X31 + 0xC0]
	0x0374699C ADD X0, X31, 0xC0
	0x037469A0 MOV X1, X8
	0x037469A4 BL 0x24FBFFC
	0x037469A8 MOV X22, X24
	0x037469AC LDR X8, [X22 + 0x28]!
	0x037469B0 LDR X3, [X20]
	0x037469B4 MOV X20, X0
	0x037469B8 MOVN W2, 0x0
	0x037469BC MOV X0, X8
	0x037469C0 MOV X1, X21
	0x037469C4 BL 0x2179B8C
	0x037469C8 LDR X2, [X23]
	0x037469CC MOV W1, W0
	0x037469D0 MOV X0, X22
	0x037469D4 BL 0x21771A4
	0x037469D8 STR X31, [X21 + 0xC8]
	0x037469DC STR X20, [X21 + 0x40]
	0x037469E0 LDR X8, [X22 + 0x8]
	0x037469E4 CBZ X8, 0x3746B70
	0x037469E8 CBZ X20, 0x3746B70
	0x037469EC LDR W8, [X8 + 0x18]
	0x037469F0 LDR W9, [X20 + 0x18]
	0x037469F4 SUBS W1, W8, W9
	0x037469F8 B.EQ 0x3746B40
	0x037469FC ADRP X8, 0x9FE000
	0x03746A00 LDR X8, [X8 + 0xF98]
	0x03746A04 LDR X0, [X8]
	0x03746A08 BL 0x1C16D6C
	0x03746A0C LDR X26, [X24 + 0x30]
	0x03746A10 STR X24, [X31 + 0x8]
	0x03746A14 CBZ X26, 0x3746B70
	0x03746A18 LDR W8, [X26 + 0x18]
	0x03746A1C MOV X21, X0
	0x03746A20 CMP W8, 0x1

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0xC9B000
	009 Move X24, 0x9AE000
	010 Move W8, [X23+3444]
	011 Move X24, [X24+1432]
	012 Move X21, X3
	013 Move X20, X2
	014 Move X19, X1
	015 Move X22, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0x9AE000
	021 Move X0, [X0+1432]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X23+3444], W8
	025 Move X0, [X24]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X0, X19
	031 Move X1, X31
	032 Move X2, X31
	033 Call Object.op_Equality, X0, X1
	034 Move TEMP, X0
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfEqual {77}
	038 Move X0, X20
	039 Move X1, X31
	040 Call String.IsNullOrEmpty, X0
	041 Move TEMP, X0
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfEqual {84}
	045 Move X0, X21
	046 Move X1, X31
	047 Call String.IsNullOrEmpty, X0
	048 Move TEMP, X0
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfEqual {91}
	052 Compare X19, 0
	053 JumpIfEqual {109}
	054 Move X0, X19
	055 Move X1, X20
	056 Move W2, W31
	057 Call InputActionAsset.FindActionMap, X0, X1, X2
	058 Compare X0, 0
	059 JumpIfEqual {110}
	060 Move X1, X21
	061 Move W2, W31
	062 Call InputActionMap.FindAction, X0, X1, X2
	063 Compare X0, 0
	064 JumpIfEqual {125}
	065 Move X2, X0
	066 Move X0, X22
	067 Move X1, X19
	068 Move X20, [X31+48]
	069 Move X19, [X31+56]
	070 Move X22, [X31+32]
	071 Move X21, [X31+40]
	072 Move X24, [X31+16]
	073 Move X23, [X31+24]
	074 Move X30, [X31+64]
	075 Call InputActionReference.SetInternal, X0, X1, X2
	076 Return 
	077 Move X0, 0x9B3000
	078 Move X0, [X0+1320]
	079 Call 0x1C17D08
	080 Call 0x1C17F10
	081 Move X19, X0
	082 Move X0, 0x9D6000
	083 Move X0, [X0+3080]
	084 Move X0, 0x9B3000
	085 Move X0, [X0+1320]
	086 Call 0x1C17D08
	087 Call 0x1C17F10
	088 Move X19, X0
	089 Move X0, 0xA00000
	090 Move X0, [X0+2000]
	091 Move X0, 0x9B3000
	092 Move X0, [X0+1320]
	093 Call 0x1C17D08
	094 Call 0x1C17F10
	095 Move X19, X0
	096 Move X0, 0xA00000
	097 Move X0, [X0+2008]
	098 Call 0x1C17D08
	099 Move X1, X0
	100 Move X0, X19
	101 Move X2, X31
	102 Call ArgumentNullException..ctor, X0, X1
	103 Move X0, 0xA00000
	104 Move X0, [X0+2016]
	105 Call 0x1C17D08
	106 Move X1, X0
	107 Move X0, X19
	108 Call 0x1C17DEC
	109 Call 0x1C17F20
	110 Move X0, 0xA00000
	111 Move X0, [X0+2024]
	112 Call 0x1C17D08
	113 Move X1, X20
	114 Move X2, X19
	115 Move X3, X31
	116 Call String.Format, X0, X1, X2
	117 Move X19, X0
	118 Move X0, 0x9B6000
	119 Move X0, [X0+1400]
	120 Call 0x1C17D08
	121 Call 0x1C17F10
	122 Move X20, X0
	123 Move X0, 0xA00000
	124 Move X0, [X0+2000]
	125 Move X0, 0xA00000
	126 Move X0, [X0+2032]
	127 Call 0x1C17D08
	128 Move X1, X21
	129 Move X2, X20
	130 Move X3, X19
	131 Move X4, X31
	132 Call String.Format, X0, X1, X2, X3
	133 Move X19, X0
	134 Move X0, 0x9B6000
	135 Move X0, [X0+1400]
	136 Call 0x1C17D08
	137 Call 0x1C17F10
	138 Move X20, X0
	139 Move X0, 0xA00000
	140 Move X0, [X0+2008]
	141 Call 0x1C17D08
	142 Move X2, X0
	143 Move X0, X20
	144 Move X1, X19
	145 Move X3, X31
	146 Call ArgumentException..ctor, X0, X1, X2
	147 Move X0, 0xA00000
	148 Move X0, [X0+2016]
	149 Call 0x1C17D08
	150 Move X1, X0
	151 Move X0, X20
	152 Call 0x1C17DEC

Method: System.Void SetInternal(UnityEngine.InputSystem.InputActionAsset asset, UnityEngine.InputSystem.InputAction action)

Disassembly:
	0x037466A4 MOV X0, X19
	0x037466A8 MOV X2, X31
	0x037466AC BL 0x330E100
	0x037466B0 B 0x37466F8
	0x037466B4 ADRP X0, 0x9B5000
	0x037466B8 LDR X0, [X0 + 0x578]
	0x037466BC BL 0x1C16D08
	0x037466C0 BL 0x1C16F10
	0x037466C4 MOV X19, X0
	0x037466C8 ADRP X0, 0x9FF000
	0x037466CC LDR X0, [X0 + 0x878]
	0x037466D0 BL 0x1C16D08
	0x037466D4 MOV X20, X0
	0x037466D8 ADRP X0, 0x9B5000
	0x037466DC LDR X0, [X0 + 0x588]
	0x037466E0 BL 0x1C16D08
	0x037466E4 MOV X2, X0
	0x037466E8 MOV X0, X19
	0x037466EC MOV X1, X20
	0x037466F0 MOV X3, X31
	0x037466F4 BL 0x330E16C
	0x037466F8 ADRP X0, 0x9FF000
	0x037466FC LDR X0, [X0 + 0x880]
	0x03746700 BL 0x1C16D08
	0x03746704 MOV X1, X0
	0x03746708 MOV X0, X19
	0x0374670C BL 0x1C16DEC
	0x03746710 ADRP X0, 0x9AD000
	0x03746714 LDR X0, [X0 + 0xAC8]
	0x03746718 BL 0x1C16D08
	0x0374671C MOVZ W1, 0x5
	0x03746720 BL 0x1C16D6C
	0x03746724 MOV X20, X0
	0x03746728 BL 0x19903C0
	0x0374672C ADRP X0, 0x9FF000
	0x03746730 LDR X0, [X0 + 0x888]
	0x03746734 BL 0x1C16D08
	0x03746738 MOV X2, X0
	0x0374673C MOV X0, X20
	0x03746740 MOV X1, X31
	0x03746744 BL 0x1993444
	0x03746748 MOV X0, X20
	0x0374674C BL 0x19903C0
	0x03746750 MOVZ W1, 0x1
	0x03746754 MOV X0, X20
	0x03746758 MOV X2, X24
	0x0374675C BL 0x1993444
	0x03746760 MOV X0, X20
	0x03746764 BL 0x19903C0
	0x03746768 ADRP X0, 0x9FF000
	0x0374676C LDR X0, [X0 + 0x890]
	0x03746770 BL 0x1C16D08
	0x03746774 MOV X2, X0
	0x03746778 MOVZ W1, 0x2
	0x0374677C MOV X0, X20
	0x03746780 BL 0x1993444
	0x03746784 MOV X0, X19
	0x03746788 BL 0x19903C0
	0x0374678C LDR X19, [X19 + 0x10]
	0x03746790 MOV X0, X20
	0x03746794 BL 0x19903C0
	0x03746798 MOVZ W1, 0x3
	0x0374679C MOV X0, X20
	0x037467A0 MOV X2, X19
	0x037467A4 BL 0x1993444
	0x037467A8 MOV X0, X20
	0x037467AC BL 0x19903C0
	0x037467B0 ADRP X0, 0x9B5000
	0x037467B4 LDR X0, [X0 + 0x9B0]
	0x037467B8 BL 0x1C16D08
	0x037467BC MOV X2, X0
	0x037467C0 MOVZ W1, 0x4
	0x037467C4 MOV X0, X20
	0x037467C8 BL 0x1993444
	0x037467CC MOV X0, X20
	0x037467D0 MOV X1, X31
	0x037467D4 BL 0x32278CC
	0x037467D8 MOV X19, X0
	0x037467DC ADRP X0, 0x9AD000
	0x037467E0 LDR X0, [X0 + 0x5B0]
	0x037467E4 BL 0x1C16D08
	0x037467E8 BL 0x1C16F10
	0x037467EC MOV X1, X19
	0x037467F0 MOV X2, X31
	0x037467F4 MOV X20, X0
	0x037467F8 BL 0x337DF1C
	0x037467FC B 0x3746858
	0x03746800 BL 0x1C16F20
	0x03746804 ADRP X0, 0x9FF000
	0x03746808 LDR X0, [X0 + 0x898]
	0x0374680C BL 0x1C16D08
	0x03746810 MOV X1, X25

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+32], X30
	003 Move [X31+48], X24
	004 Move [X31+56], X23
	005 Move [X31+64], X22
	006 Move [X31+72], X21
	007 Move [X31+80], X20
	008 Move [X31+88], X19
	009 Move X22, 0xC9B000
	010 Move W8, [X22+3445]
	011 Move X19, X2
	012 Move X21, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0xA00000
	019 Move X0, [X0+1968]
	020 Call 0x1C17CF4
	021 Move X0, 0xA00000
	022 Move X0, [X0+1976]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X22+3445], W8
	026 Move [X31+16], X31
	027 Move [X31+24], X31
	028 Compare X19, 0
	029 JumpIfEqual {84}
	030 Move X8, [X19+200]
	031 Compare X8, 0
	032 JumpIfEqual {81}
	033 Move X9, [X8+80]
	034 NotImplemented "Instruction CMP not yet implemented."
	035 NotImplemented "Instruction CSEL not yet implemented."
	036 Compare X21, 0
	037 JumpIfEqual {84}
	038 Move X23, 0xA00000
	039 Move X24, 0xA00000
	040 Move X23, [X23+1976]
	041 Move X24, [X24+1968]
	042 Move X0, X21
	043 Call InputActionAsset.get_actionMaps, X0
	044 Move X8, [X23]
	045 Move [X31], X0
	046 Move [X31+8], X1
	047 Add X1, X31, 0
	048 Move X0, X8
	049 Call 0x1C17E04
	050 Move X2, [X24]
	051 Move X1, X22
	052 Call Enumerable.Contains, X0, X1
	053 Move TEMP, X0
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfNotEqual {85}
	057 Move X0, X19
	058 Move [X20+24], X21
	059 Call InputAction.get_id, X0
	060 Move [X31+16], X0
	061 Move [X31+24], X1
	062 Add X0, X31, 16
	063 Move X1, X31
	064 Call Guid.ToString, X0
	065 Move [X20+32], X0
	066 Move X0, X19
	067 Call InputActionReference.GetDisplayName, X0
	068 Move X1, X0
	069 Move X0, X20
	070 Move X2, X31
	071 Call Object.set_name, X0, X1
	072 Move X20, [X31+80]
	073 Move X19, [X31+88]
	074 Move X22, [X31+64]
	075 Move X21, [X31+72]
	076 Move X24, [X31+48]
	077 Move X23, [X31+56]
	078 Move X30, [X31+32]
	079 Add X31, X31, 96
	080 Return 
	081 Move X22, X31
	082 Compare X21, 0
	083 JumpIfNotEqual {38}
	084 Call 0x1C17F20
	085 Move X0, 0xA00000
	086 Move X0, [X0+1984]
	087 Call 0x1C17D08
	088 Move X1, X19
	089 Move X2, X21
	090 Move X3, X31
	091 Call String.Format, X0, X1, X2
	092 Move X19, X0
	093 Move X0, 0x9B6000
	094 Move X0, [X0+1400]
	095 Call 0x1C17D08
	096 Call 0x1C17F10
	097 Move X20, X0
	098 Move X0, 0x9D6000
	099 Move X0, [X0+3064]
	100 Call 0x1C17D08
	101 Move X2, X0
	102 Move X0, X20
	103 Move X1, X19
	104 Move X3, X31
	105 Call ArgumentException..ctor, X0, X1, X2
	106 Move X0, 0xA00000
	107 Move X0, [X0+1992]
	108 Call 0x1C17D08
	109 Move X1, X0
	110 Move X0, X20
	111 Call 0x1C17DEC

Method: System.String ToString()

Disassembly:
	0x03746B00 MOVZ W8, 0x58
	0x03746B04 SMADDL X8, X29, X8, X21
	0x03746B08 ADD X0, X8, 0x20
	0x03746B0C ADD X1, X31, 0x10
	0x03746B10 MOVZ W2, 0x58
	0x03746B14 ADD W23, W29, 0x1
	0x03746B18 BL 0x3EB1AC0
	0x03746B1C MOV W29, W23
	0x03746B20 LDRSW X8, [X26 + 0x18]
	0x03746B24 ADD X27, X27, 0x1
	0x03746B28 ADD X22, X22, 0x58
	0x03746B2C CMP X27, X8
	0x03746B30 B.LT 0x3746A44
	0x03746B34 LDR X24, [X31 + 0x8]
	0x03746B38 STR X21, [X24 + 0x30]
	0x03746B3C B 0x3746B44
	0x03746B40 STR X31, [X24 + 0x30]
	0x03746B44 MOV X0, X24
	0x03746B48 MOV X1, X31
	0x03746B4C BL 0x373894C
	0x03746B50 LDP X20, X19, [X31 + 0x120]
	0x03746B54 LDP X22, X21, [X31 + 0x110]
	0x03746B58 LDP X24, X23, [X31 + 0x100]
	0x03746B5C LDP X26, X25, [X31 + 0xF0]
	0x03746B60 LDP X28, X27, [X31 + 0xE0]
	0x03746B64 LDP X29, X30, [X31 + 0xD0]
	0x03746B68 ADD X31, X31, 0x130
	0x03746B6C RET
	0x03746B70 BL 0x1C16F20
	0x03746B74 BL 0x1C16F28
	0x03746B78 ADRP X0, 0x9B2000
	0x03746B7C LDR X0, [X0 + 0x528]
	0x03746B80 BL 0x1C16D08
	0x03746B84 BL 0x1C16F10
	0x03746B88 MOV X19, X0
	0x03746B8C ADRP X0, 0x9D5000
	0x03746B90 LDR X0, [X0 + 0xBF8]
	0x03746B94 BL 0x1C16D08
	0x03746B98 MOV X1, X0
	0x03746B9C MOV X0, X19
	0x03746BA0 MOV X2, X31
	0x03746BA4 BL 0x330E100
	0x03746BA8 ADRP X0, 0x9FF000
	0x03746BAC LDR X0, [X0 + 0x8D8]
	0x03746BB0 BL 0x1C16D08
	0x03746BB4 MOV X1, X0
	0x03746BB8 MOV X0, X19
	0x03746BBC BL 0x1C16DEC
	0x03746BC0 ADRP X0, 0x9FF000
	0x03746BC4 LDR X0, [X0 + 0x8E0]
	0x03746BC8 BL 0x1C16D08
	0x03746BCC MOV X1, X21
	0x03746BD0 MOV X2, X31
	0x03746BD4 BL 0x321EFD0
	0x03746BD8 MOV X19, X0
	0x03746BDC ADRP X0, 0x9B5000
	0x03746BE0 LDR X0, [X0 + 0x578]
	0x03746BE4 BL 0x1C16D08
	0x03746BE8 BL 0x1C16F10
	0x03746BEC MOV X20, X0
	0x03746BF0 ADRP X0, 0x9D5000
	0x03746BF4 LDR X0, [X0 + 0xBF8]
	0x03746BF8 BL 0x1C16D08
	0x03746BFC MOV X2, X0
	0x03746C00 MOV X0, X20
	0x03746C04 MOV X1, X19
	0x03746C08 MOV X3, X31
	0x03746C0C BL 0x330E16C
	0x03746C10 ADRP X0, 0x9FF000
	0x03746C14 LDR X0, [X0 + 0x8D8]
	0x03746C18 BL 0x1C16D08
	0x03746C1C MOV X1, X0
	0x03746C20 MOV X0, X20
	0x03746C24 BL 0x1C16DEC
	0x03746C28 MOV X1, X31
	0x03746C2C B 0x33BDD8C
	0x03746C30 STR X30, [X31 - 0x30]!
	0x03746C34 STP X22, X21, [X31 + 0x10]
	0x03746C38 STP X20, X19, [X31 + 0x20]
	0x03746C3C ADRP X21, 0xC9A000
	0x03746C40 ADRP X22, 0x9AD000
	0x03746C44 LDRB W8, [X21 + 0xD81]
	0x03746C48 LDR X22, [X22 + 0x598]
	0x03746C4C MOV X19, X1
	0x03746C50 MOV X20, X0
	0x03746C54 TBNZ X8, 0x0, 0x3746C6C
	0x03746C58 ADRP X0, 0x9AD000
	0x03746C5C LDR X0, [X0 + 0x598]
	0x03746C60 BL 0x1C16CF4
	0x03746C64 MOVZ W8, 0x1
	0x03746C68 STRB W8, [X21 + 0xD81]
	0x03746C6C LDR X0, [X22]
	0x03746C70 LDR W8, [X0 + 0xE0]
	0x03746C74 CBNZ W8, 0x3746C7C
	0x03746C78 BL 0x1C16DFC
	0x03746C7C MOV X0, X20
	0x03746C80 MOV X1, X31
	0x03746C84 MOV X2, X31
	0x03746C88 BL 0x3C3883C
	0x03746C8C TBNZ X0, 0x0, 0x3746CD0
	0x03746C90 CBZ X19, 0x3746CF0
	0x03746C94 CBZ X20, 0x3746D38
	0x03746C98 MOV X0, X20
	0x03746C9C MOV X1, X19
	0x03746CA0 MOV W2, W31
	0x03746CA4 MOV X3, X31
	0x03746CA8 BL 0x3736D58
	0x03746CAC CBZ X0, 0x3746CC0
	0x03746CB0 LDP X20, X19, [X31 + 0x20]
	0x03746CB4 LDP X22, X21, [X31 + 0x10]
	0x03746CB8 LDR X30, [X31], #0x30
	0x03746CBC B 0x37468BC
	0x03746CC0 LDP X20, X19, [X31 + 0x20]
	0x03746CC4 LDP X22, X21, [X31 + 0x10]
	0x03746CC8 LDR X30, [X31], #0x30
	0x03746CCC RET
	0x03746CD0 ADRP X0, 0x9B2000
	0x03746CD4 LDR X0, [X0 + 0x528]
	0x03746CD8 BL 0x1C16D08
	0x03746CDC BL 0x1C16F10
	0x03746CE0 MOV X19, X0
	0x03746CE4 ADRP X0, 0x9D5000
	0x03746CE8 LDR X0, [X0 + 0xC08]
	0x03746CEC B 0x3746D0C
	0x03746CF0 ADRP X0, 0x9B2000
	0x03746CF4 LDR X0, [X0 + 0x528]
	0x03746CF8 BL 0x1C16D08
	0x03746CFC BL 0x1C16F10
	0x03746D00 MOV X19, X0
	0x03746D04 ADRP X0, 0x9FF000
	0x03746D08 LDR X0, [X0 + 0x110]
	0x03746D0C BL 0x1C16D08
	0x03746D10 MOV X1, X0
	0x03746D14 MOV X0, X19
	0x03746D18 MOV X2, X31
	0x03746D1C BL 0x330E100
	0x03746D20 ADRP X0, 0x9FF000
	0x03746D24 LDR X0, [X0 + 0x8E8]
	0x03746D28 BL 0x1C16D08
	0x03746D2C MOV X1, X0
	0x03746D30 MOV X0, X19
	0x03746D34 BL 0x1C16DEC
	0x03746D38 BL 0x1C16F20
	0x03746D3C SUB X31, X31, 0x80
	0x03746D40 STP X30, X21, [X31 + 0x60]
	0x03746D44 STP X20, X19, [X31 + 0x70]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xC9B000
	006 Move W8, [X20+3446]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {23}
	012 Move X0, 0x9AE000
	013 Move X0, [X0+2760]
	014 Call 0x1C17CF4
	015 Move X0, 0x9AF000
	016 Move X0, [X0+3784]
	017 Call 0x1C17CF4
	018 Move X0, 0x9B7000
	019 Move X0, [X0+2440]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+3446], W8
	023 Move X0, X19
	024 Call InputActionReference.get_action, X0
	025 Move X8, 0x9AE000
	026 Move X8, [X8+2760]
	027 Move X20, X0
	028 Move X0, [X8]
	029 Move W1, 5
	030 Call 0x1C17D6C
	031 Move X21, X0
	032 Move X0, [X19+24]
	033 Compare X0, 0
	034 JumpIfEqual {75}
	035 Move X1, X31
	036 Call Object.get_name, X0
	037 Compare X21, 0
	038 JumpIfEqual {76}
	039 Move W8, [X21+24]
	040 Compare W8, 0
	041 JumpIfEqual {77}
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move [X21+32], X0
	044 Move X9, 0x9B7000
	045 Move X9, [X9+2440]
	046 Move X9, [X9]
	047 Move [X21+40], X9
	048 Compare X20, 0
	049 JumpIfEqual {79}
	050 Move X9, [X20+200]
	051 Compare X9, 0
	052 JumpIfEqual {74}
	053 Move X10, [X9+80]
	054 NotImplemented "Instruction CMP not yet implemented."
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move X9, [X9+16]
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move [X21+48], X9
	059 Move X9, 0x9AF000
	060 Move X9, [X9+3784]
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move X9, [X9]
	063 Move [X21+56], X9
	064 Move X8, [X20+16]
	065 Move [X21+64], X8
	066 Move X0, X21
	067 Move X1, X31
	068 Call String.Concat, X0
	069 Move X20, [X31+16]
	070 Move X19, [X31+24]
	071 Move X30, [X31+32]
	072 Move X21, [X31+40]
	073 Return X0
	074 Call 0x1C17F20
	075 Call 0x1C17F20
	076 Call 0x1C17F20
	077 Call 0x1C17F28
	078 Call 0x1C17F28
	079 Call 0x1C17F20
	080 Call 0x1C17F28
	081 Call 0x1C17F28
	082 Call 0x1C17F28
	083 Move X20, X0
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Move X0, X20
	086 Call 0x3EB2AD0
	087 Move X20, X0
	088 Move X0, 0x9B4000
	089 Move X0, [X0+3264]
	090 Call 0x1C17D08
	091 Move X8, [X20]
	092 Move X1, [X8]
	093 Call 0x1C18270
	094 Move TEMP, X0
	095 And TEMP, TEMP, 1
	096 Compare TEMP, 1
	097 JumpIfNotEqual {143}
	098 Call 0x3EB2AE0
	099 Move X0, 0x9AE000
	100 Move X20, [X19+24]
	101 Move X0, [X0+1432]
	102 Call 0x1C17D08
	103 Move W8, [X0+224]
	104 Compare W8, 0
	105 JumpIfNotEqual {107}
	106 Call 0x1C17DFC
	107 Move X0, X20
	108 Move X1, X31
	109 Move X2, X31
	110 Call Object.op_Inequality, X0, X1
	111 Move TEMP, X0
	112 And TEMP, TEMP, 1
	113 Compare TEMP, 1
	114 JumpIfNotEqual {135}
	115 Move X0, [X19+24]
	116 Compare X0, 0
	117 JumpIfEqual {151}
	118 Move X1, X31
	119 Call Object.get_name, X0
	120 Move X20, X0
	121 Move X0, 0x9B7000
	122 Move X19, [X19+32]
	123 Move X0, [X0+2440]
	124 Call 0x1C17D08
	125 Move X1, X0
	126 Move X0, X20
	127 Move X2, X19
	128 Move X20, [X31+16]
	129 Move X19, [X31+24]
	130 Move X3, X31
	131 Move X30, [X31+32]
	132 Move X21, [X31+40]
	133 Call String.Concat, X0, X1, X2
	134 Return X0
	135 Move X0, X19
	136 Move X20, [X31+16]
	137 Move X19, [X31+24]
	138 Move X1, X31
	139 Move X30, [X31+32]
	140 Move X21, [X31+40]
	141 Call Object.ToString, X0
	142 Return X0
	143 Move W0, 8
	144 Call 0x3EB2AF0
	145 Move X8, [X20]
	146 Move [X0], X8
	147 Move X1, 0x76F000
	148 Add X1, X1, 3672
	149 Move X2, X31
	150 Call 0x3EB2B00
	151 Call 0x1C17F20
	152 Move X20, X0
	153 Call 0x3EB2AE0
	154 Move X0, X20
	155 Call 0x1D2D690
	156 Call 0x1991590

Method: System.String GetDisplayName(UnityEngine.InputSystem.InputAction action)

Disassembly:
	0x03746A24 B.LT 0x3746B34
	0x03746A28 ADRP X28, 0x9FF000
	0x03746A2C ADRP X19, 0x9FF000
	0x03746A30 LDR X28, [X28 + 0x8C8]
	0x03746A34 LDR X19, [X19 + 0x8B8]
	0x03746A38 MOV W29, W31
	0x03746A3C MOV X27, X31
	0x03746A40 ADD X22, X26, 0x20
	0x03746A44 ADRP X8, 0x9FF000
	0x03746A48 LDR X8, [X8 + 0x8D0]
	0x03746A4C LDR X0, [X8]
	0x03746A50 BL 0x1C16F10
	0x03746A54 MOV X1, X31
	0x03746A58 MOV X23, X0
	0x03746A5C BL 0x33BDD8C
	0x03746A60 LDR W8, [X26 + 0x18]
	0x03746A64 CMP X27, X8
	0x03746A68 B.CS 0x3746B74
	0x03746A6C ADD X0, X31, 0x68
	0x03746A70 MOVZ W2, 0x58
	0x03746A74 MOV X1, X22
	0x03746A78 BL 0x3EB1AC0
	0x03746A7C CBZ X23, 0x3746B70
	0x03746A80 ADD X24, X23, 0x10
	0x03746A84 ADD X1, X31, 0x68
	0x03746A88 MOVZ W2, 0x58
	0x03746A8C MOV X0, X24
	0x03746A90 BL 0x3EB1AC0
	0x03746A94 ADRP X8, 0x9FF000
	0x03746A98 LDR X8, [X8 + 0x8C0]
	0x03746A9C LDR X0, [X8]
	0x03746AA0 BL 0x1C16F10
	0x03746AA4 LDR X2, [X28]
	0x03746AA8 MOV X1, X23
	0x03746AAC MOV X3, X31
	0x03746AB0 MOV X25, X0
	0x03746AB4 BL 0x24ABD28
	0x03746AB8 LDR X2, [X19]
	0x03746ABC MOV X0, X20
	0x03746AC0 MOV X1, X25
	0x03746AC4 BL 0x21794D0
	0x03746AC8 ADDS W31, W0, 0x1
	0x03746ACC B.NE 0x3746B20
	0x03746AD0 ADD X0, X31, 0x68
	0x03746AD4 MOVZ W2, 0x58
	0x03746AD8 MOV X1, X24
	0x03746ADC BL 0x3EB1AC0
	0x03746AE0 CBZ X21, 0x3746B70
	0x03746AE4 ADD X0, X31, 0x10
	0x03746AE8 ADD X1, X31, 0x68
	0x03746AEC MOVZ W2, 0x58
	0x03746AF0 BL 0x3EB1AC0
	0x03746AF4 LDR W8, [X21 + 0x18]
	0x03746AF8 CMP W29, W8
	0x03746AFC B.CS 0x3746B74

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xC9B000
	005 Move W8, [X20+3447]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x9AF000
	012 Move X0, [X0+3784]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3447], W8
	016 Compare X19, 0
	017 JumpIfEqual {34}
	018 Move X8, [X19+200]
	019 Compare X8, 0
	020 JumpIfEqual {24}
	021 Move X9, [X8+80]
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move X0, [X8+16]
	024 Move X0, X31
	025 Move X1, X31
	026 Call String.IsNullOrEmpty, X0
	027 Move TEMP, X0
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfNotEqual {43}
	031 Compare X19, 0
	032 JumpIfEqual {62}
	033 Move X0, [X19+16]
	034 Move X0, X31
	035 Move X1, X31
	036 Call String.IsNullOrEmpty, X0
	037 Move W8, W0
	038 Move X0, X31
	039 Move TEMP, X8
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfEqual {63}
	043 Compare X19, 0
	044 JumpIfEqual {67}
	045 Move X8, [X19+200]
	046 Compare X8, 0
	047 JumpIfEqual {51}
	048 Move X9, [X8+80]
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move X0, [X8+16]
	051 Move X0, X31
	052 Move X8, 0x9AF000
	053 Move X2, [X19+16]
	054 Move X8, [X8+3784]
	055 Move X20, [X31+16]
	056 Move X19, [X31+24]
	057 Move X3, X31
	058 Move X1, [X8]
	059 Move X30, [X31+32]
	060 Call String.Concat, X0, X1, X2
	061 Return X0
	062 Move X0, X31
	063 Move X20, [X31+16]
	064 Move X19, [X31+24]
	065 Move X30, [X31+32]
	066 Return X0
	067 Call 0x1C17F20

Method: System.String ToDisplayName()

Disassembly:
	0x03746D48 CBZ X0, 0x3746DA4
	0x03746D4C MOV X19, X8
	0x03746D50 LDR X8, [X0 + 0x10]
	0x03746D54 MOV X20, X1
	0x03746D58 STR X8, [X1 + 0x30]
	0x03746D5C MOV X1, X31
	0x03746D60 BL 0x37344FC
	0x03746D64 MOV X21, X0
	0x03746D68 ADD X0, X31, 0x8
	0x03746D6C MOVZ W2, 0x58
	0x03746D70 MOV X1, X20
	0x03746D74 BL 0x3EB1AC0
	0x03746D78 ADD X1, X31, 0x8
	0x03746D7C MOVN W2, 0x0
	0x03746D80 MOV X0, X21

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X1, X31
	004 Move X19, X0
	005 Call Object.get_name, X0
	006 Move X1, X31
	007 Call String.IsNullOrEmpty, X0
	008 Move TEMP, X0
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfNotEqual {18}
	012 Move X0, X19
	013 Call InputActionReference.get_action, X0
	014 Move X30, [X31+16]
	015 Move X19, [X31+24]
	016 Call InputActionReference.GetDisplayName, X0
	017 Return X0
	018 Move X0, X19
	019 Move X1, X31
	020 Move X30, [X31+16]
	021 Move X19, [X31+24]
	022 Call Object.get_name, X0
	023 Return X0

Method: UnityEngine.InputSystem.InputAction op_Implicit(UnityEngine.InputSystem.InputActionReference reference)

Disassembly:
	0x03746D84 BL 0x3746EA4
	0x03746D88 STP X31, X31, [X19 + 0x8]
	0x03746D8C STR X21, [X19]

ISIL:
	001 Compare X0, 0
	002 JumpIfEqual {5}
	003 Call InputActionReference.get_action, X0
	004 Return X0
	005 Return X0

Method: UnityEngine.InputSystem.InputActionReference Create(UnityEngine.InputSystem.InputAction action)

Disassembly:
	0x03746D90 STR W0, [X19 + 0x10]
	0x03746D94 LDP X20, X19, [X31 + 0x70]
	0x03746D98 LDP X30, X21, [X31 + 0x60]
	0x03746D9C ADD X31, X31, 0x80
	0x03746DA0 RET
	0x03746DA4 ADRP X0, 0x9B2000
	0x03746DA8 LDR X0, [X0 + 0x528]
	0x03746DAC BL 0x1C16D08
	0x03746DB0 BL 0x1C16F10
	0x03746DB4 MOV X19, X0
	0x03746DB8 ADRP X0, 0x9D5000
	0x03746DBC LDR X0, [X0 + 0xBF8]
	0x03746DC0 BL 0x1C16D08
	0x03746DC4 MOV X1, X0
	0x03746DC8 MOV X0, X19
	0x03746DCC MOV X2, X31
	0x03746DD0 BL 0x330E100
	0x03746DD4 ADRP X0, 0x9FF000
	0x03746DD8 LDR X0, [X0 + 0x8F0]
	0x03746DDC BL 0x1C16D08
	0x03746DE0 MOV X1, X0
	0x03746DE4 MOV X0, X19
	0x03746DE8 BL 0x1C16DEC
	0x03746DEC SUB X31, X31, 0x90
	0x03746DF0 STR X30, [X31 + 0x70]
	0x03746DF4 STP X20, X19, [X31 + 0x80]
	0x03746DF8 CBZ X1, 0x3746E5C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xC9B000
	005 Move W8, [X20+3448]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xA00000
	012 Move X0, [X0+2040]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3448], W8
	016 Compare X19, 0
	017 JumpIfEqual {27}
	018 Move X8, 0xA00000
	019 Move X8, [X8+2040]
	020 Move X0, [X8]
	021 Call 0x22547A0
	022 Compare X0, 0
	023 JumpIfEqual {33}
	024 Move X1, X19
	025 Move X20, X0
	026 Call InputActionReference.Set, X0, X1
	027 Move X20, X31
	028 Move X0, X20
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X30, [X31+32]
	032 Return X0
	033 Call 0x1C17F20

Method: UnityEngine.InputSystem.InputAction ToInputAction()

Disassembly:
	0x03746DFC MOV X20, X0

ISIL:
	001 Call InputActionReference.get_action, X0
	002 Return X0

Method: System.Void .ctor()

Disassembly:
	0x03746E00 MOV X0, X1
	0x03746E04 MOV X1, X31

ISIL:
	001 Move X1, X31
	002 Call ScriptableObject..ctor, X0
	003 Return 

