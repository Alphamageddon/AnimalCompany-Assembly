Type: UnityEngine.InputSystem.InputActionSetupExtensions/CompositeSyntax

Method: System.Int32 get_bindingIndex()

Disassembly:
	0x0374B2C8 BL 0x1C16CF4
	0x0374B2CC ADRP X0, 0x9F9000
	0x0374B2D0 LDR X0, [X0 + 0xFC0]
	0x0374B2D4 BL 0x1C16CF4
	0x0374B2D8 ADRP X0, 0x9FA000
	0x0374B2DC LDR X0, [X0 + 0xB60]
	0x0374B2E0 BL 0x1C16CF4
	0x0374B2E4 MOVZ W8, 0x1
	0x0374B2E8 STRB W8, [X21 + 0xD96]
	0x0374B2EC STP X31, X31, [X31 + 0x20]
	0x0374B2F0 STR X31, [X31 + 0x30]

ISIL:
	001 Move X9, [X0+8]
	002 Compare X9, 0
	003 JumpIfEqual {12}
	004 Move X8, X0
	005 Move X0, [X0]
	006 Move W1, [X8+16]
	007 Compare X0, 0
	008 JumpIfEqual {15}
	009 Move X2, X31
	010 Call InputAction.BindingIndexOnMapToBindingIndexOnAction, X0, X1
	011 Return X0
	012 Move TEMP, 0
	013 Not TEMP
	014 Move W1, TEMP
	015 Move W0, W1
	016 Return X0

Method: System.Void .ctor(UnityEngine.InputSystem.InputActionMap map, UnityEngine.InputSystem.InputAction action, System.Int32 compositeIndex)

Disassembly:
	0x0374855C STR X31, [X31 + 0x40]
	0x03748560 STUR V0, [X31 + 0x70]
	0x03748564 LDUR V0, [X31 + 0x6C]

ISIL:
	001 Move [X0], X2
	002 Move [X0+8], X1
	003 Move [X0+16], W3
	004 Return 

Method: UnityEngine.InputSystem.InputActionSetupExtensions/CompositeSyntax With(System.String name, System.String binding, System.String groups = null, System.String processors = null)

Disassembly:
	0x0374B2F4 LDR W8, [X20 + 0x48]
	0x0374B2F8 CMP W8, 0x1
	0x0374B2FC B.LT 0x374B420
	0x0374B300 ADRP X22, 0x9F9000
	0x0374B304 ADRP X23, 0x9FA000
	0x0374B308 ADRP X24, 0x9FA000
	0x0374B30C LDR X22, [X22 + 0xFC0]
	0x0374B310 LDR X23, [X23 + 0xB60]
	0x0374B314 LDR X24, [X24 + 0xB58]
	0x0374B318 MOV W25, W31
	0x0374B31C MOV W21, W31
	0x0374B320 LDR X8, [X20 + 0x10]
	0x0374B324 CBZ X8, 0x374B43C
	0x0374B328 LDR W9, [X8 + 0x18]
	0x0374B32C CMP W21, W9
	0x0374B330 B.CS 0x374B440
	0x0374B334 ADD X8, X8, W21, 0x3, SXTW
	0x0374B338 LDR X0, [X8 + 0x20]
	0x0374B33C CBZ X0, 0x374B43C
	0x0374B340 ADD X8, X31, 0x8
	0x0374B344 MOV X1, X31
	0x0374B348 BL 0x3735920
	0x0374B34C LDUR V0, [X31 + 0x8]
	0x0374B350 LDR X8, [X31 + 0x18]
	0x0374B354 STR V0, [X31 + 0x2]
	0x0374B358 LDRB W9, [X31 + 0x20]
	0x0374B35C STR X8, [X31 + 0x30]
	0x0374B360 CBZ W9, 0x374B3A8
	0x0374B364 LDR X1, [X22]
	0x0374B368 ADD X0, X31, 0x20
	0x0374B36C BL 0x242CC48
	0x0374B370 LDR X8, [X23]
	0x0374B374 STP X0, X1, [X31 + 0x8]
	0x0374B378 ADD X1, X31, 0x8
	0x0374B37C MOV X0, X8
	0x0374B380 BL 0x1C16E04
	0x0374B384 LDR X2, [X24]
	0x0374B388 MOV X1, X19
	0x0374B38C BL 0x21BA5B0
	0x0374B390 TBNZ X0, 0x0, 0x374B3C0
	0x0374B394 LDR W8, [X20 + 0x48]
	0x0374B398 ADD W21, W21, 0x1
	0x0374B39C CMP W21, W8
	0x0374B3A0 B.LT 0x374B320
	0x0374B3A4 B 0x374B3C8
	0x0374B3A8 LDR W8, [X20 + 0x48]
	0x0374B3AC ADD W21, W21, 0x1
	0x0374B3B0 MOVZ W25, 0x1
	0x0374B3B4 CMP W21, W8
	0x0374B3B8 B.LT 0x374B320
	0x0374B3BC B 0x374B3CC
	0x0374B3C0 MOVZ W0, 0x1
	0x0374B3C4 B 0x374B424
	0x0374B3C8 TBZ X25, 0x0, 0x374B420
	0x0374B3CC LDR W8, [X20 + 0x58]
	0x0374B3D0 CMP W8, 0x1
	0x0374B3D4 B.LT 0x374B420
	0x0374B3D8 LDR X11, [X20 + 0x18]
	0x0374B3DC CBZ X11, 0x374B43C
	0x0374B3E0 LDR W10, [X11 + 0x18]
	0x0374B3E4 MOV X9, X31
	0x0374B3E8 ADD X11, X11, 0x20
	0x0374B3EC CMP W9, W10
	0x0374B3F0 B.CS 0x374B440
	0x0374B3F4 LDR X12, [X11, X9, LSL #3]
	0x0374B3F8 CBZ X12, 0x374B43C
	0x0374B3FC LDR X12, [X12 + 0x78]
	0x0374B400 ADD X9, X9, 0x1
	0x0374B404 CMP X12, X19
	0x0374B408 CSET W0, EQ
	0x0374B40C CMP W9, W8
	0x0374B410 B.GE 0x374B424
	0x0374B414 CMP X12, X19
	0x0374B418 B.NE 0x374B3EC
	0x0374B41C B 0x374B424
	0x0374B420 MOV W0, W31
	0x0374B424 LDP X20, X19, [X31 + 0x70]
	0x0374B428 LDP X22, X21, [X31 + 0x60]
	0x0374B42C LDP X24, X23, [X31 + 0x50]
	0x0374B430 LDP X30, X25, [X31 + 0x40]
	0x0374B434 ADD X31, X31, 0x80
	0x0374B438 RET
	0x0374B43C BL 0x1C16F20
	0x0374B440 BL 0x1C16F28
	0x0374B444 SUB X31, X31, 0x80
	0x0374B448 STP X30, X25, [X31 + 0x40]
	0x0374B44C STP X24, X23, [X31 + 0x50]
	0x0374B450 STP X22, X21, [X31 + 0x60]
	0x0374B454 STP X20, X19, [X31 + 0x70]
	0x0374B458 ADRP X21, 0xC95000
	0x0374B45C LDRB W8, [X21 + 0xD97]
	0x0374B460 MOV X19, X1
	0x0374B464 MOV X20, X0
	0x0374B468 TBNZ X8, 0x0, 0x374B4A4
	0x0374B46C ADRP X0, 0x9FA000
	0x0374B470 LDR X0, [X0 + 0xB58]
	0x0374B474 BL 0x1C16CF4
	0x0374B478 ADRP X0, 0x9F9000
	0x0374B47C LDR X0, [X0 + 0xFB8]
	0x0374B480 BL 0x1C16CF4
	0x0374B484 ADRP X0, 0x9F9000
	0x0374B488 LDR X0, [X0 + 0xFC0]
	0x0374B48C BL 0x1C16CF4
	0x0374B490 ADRP X0, 0x9FA000
	0x0374B494 LDR X0, [X0 + 0xB60]
	0x0374B498 BL 0x1C16CF4
	0x0374B49C MOVZ W8, 0x1
	0x0374B4A0 STRB W8, [X21 + 0xD97]
	0x0374B4A4 STP X31, X31, [X31 + 0x20]
	0x0374B4A8 STR X31, [X31 + 0x30]
	0x0374B4AC LDR W8, [X20 + 0x48]
	0x0374B4B0 CMP W8, 0x1
	0x0374B4B4 B.LT 0x374B618
	0x0374B4B8 ADRP X23, 0x9F9000
	0x0374B4BC ADRP X24, 0x9FA000
	0x0374B4C0 ADRP X25, 0x9FA000
	0x0374B4C4 LDR X23, [X23 + 0xFC0]
	0x0374B4C8 LDR X24, [X24 + 0xB60]
	0x0374B4CC LDR X25, [X25 + 0xB58]
	0x0374B4D0 MOV W21, W31
	0x0374B4D4 MOV W22, W31
	0x0374B4D8 LDR X8, [X20 + 0x10]
	0x0374B4DC CBZ X8, 0x374B63C
	0x0374B4E0 LDR W9, [X8 + 0x18]
	0x0374B4E4 CMP W22, W9
	0x0374B4E8 B.CS 0x374B640
	0x0374B4EC ADD X8, X8, W22, 0x3, SXTW
	0x0374B4F0 LDR X0, [X8 + 0x20]
	0x0374B4F4 CBZ X0, 0x374B63C
	0x0374B4F8 ADD X8, X31, 0x8
	0x0374B4FC MOV X1, X31
	0x0374B500 BL 0x3735920
	0x0374B504 LDUR V0, [X31 + 0x8]
	0x0374B508 LDR X8, [X31 + 0x18]
	0x0374B50C STR V0, [X31 + 0x2]
	0x0374B510 LDRB W9, [X31 + 0x20]
	0x0374B514 STR X8, [X31 + 0x30]
	0x0374B518 CBZ W9, 0x374B550
	0x0374B51C LDR X1, [X23]
	0x0374B520 ADD X0, X31, 0x20
	0x0374B524 BL 0x242CC48
	0x0374B528 LDR X8, [X24]
	0x0374B52C STP X0, X1, [X31 + 0x8]
	0x0374B530 ADD X1, X31, 0x8
	0x0374B534 MOV X0, X8
	0x0374B538 BL 0x1C16E04

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+112], X30
	003 Move [X31+128], X26
	004 Move [X31+136], X25
	005 Move [X31+144], X24
	006 Move [X31+152], X23
	007 Move [X31+160], X22
	008 Move [X31+168], X21
	009 Move [X31+176], X20
	010 Move [X31+184], X19
	011 Move X19, 0xC96000
	012 Move W9, [X19+3471]
	013 Move X22, X4
	014 Move X24, X3
	015 Move X25, X2
	016 Move X23, X1
	017 Move X20, X0
	018 Move X21, X8
	019 Move TEMP, X9
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {28}
	023 Move X0, 0x9A9000
	024 Move X0, [X0+3584]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X19+3471], W8
	028 Move X26, 0x9A9000
	029 Move X26, [X26+3584]
	030 Move X0, X31
	031 Call InputActionRebindingExtensions.DeferBindingResolution
	032 Move X9, [X20]
	033 Move X19, X0
	034 Compare X9, 0
	035 JumpIfEqual {51}
	036 NotImplemented "Instruction MOVI not yet implemented."
	037 Move [X31], X31
	038 Move [X31+8], X31
	039 Move [X31+80], X31
	040 Move [X31+16], X25
	041 Move [X31+24], X31
	042 Move [X31+48], V0
	043 Move [X31+56], V0
	044 Move [X31+32], X22
	045 Move [X31+40], X24
	046 Add X8, X31, 88
	047 Add X1, X31, 0
	048 Move X0, X9
	049 Call InputActionSetupExtensions.AddBinding, X0, X1
	050 Move W8, [X31+104]
	051 Move X0, [X20+8]
	052 Add X8, X31, 0
	053 Move X1, X25
	054 Move X2, X31
	055 Move X3, X24
	056 Move X4, X31
	057 Move X5, X22
	058 Call InputActionSetupExtensions.AddBinding, X0, X1, X2, X3, X4, X5
	059 Move W8, [X31+16]
	060 Move X9, [X20+8]
	061 Compare X9, 0
	062 JumpIfEqual {117}
	063 Move X9, [X9+48]
	064 Compare X9, 0
	065 JumpIfEqual {118}
	066 Move W10, [X9+24]
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Move W10, 88
	069 NotImplemented "Instruction SMADDL not yet implemented."
	070 Move W9, [X8+88]
	071 Move X22, X31
	072 Move [X8+32], X23
	073 Or W9, W9, 8
	074 Move [X8+88], W9
	075 Compare X19, 0
	076 JumpIfEqual {98}
	077 Move X8, [X19]
	078 Move X1, [X26]
	079 NotImplemented "Instruction LDRH not yet implemented."
	080 Compare X9, 0
	081 JumpIfEqual {88}
	082 Move X10, [X8+176]
	083 Add X10, X10, 8
	084 NotImplemented "Instruction LDUR not yet implemented."
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Subtract X9, X9, 1
	087 Add X10, X10, 16
	088 Move X0, X19
	089 Move W2, W31
	090 Call 0x1C5D788
	091 NotImplemented "Instruction LDRSW not yet implemented."
	092 Add X8, X8, X9
	093 Add X0, X8, 312
	094 Move X8, [X0]
	095 Move X1, [X0+8]
	096 Move X0, X19
	097 NotImplemented "Instruction BLR not yet implemented."
	098 Compare X22, 0
	099 JumpIfNotEqual {115}
	100 Move X8, [X20+16]
	101 Move V0, [X20]
	102 Move X20, [X31+176]
	103 Move X19, [X31+184]
	104 Move X24, [X31+144]
	105 Move X23, [X31+152]
	106 Move [X21+16], X8
	107 Move [X21], V0
	108 Move X22, [X31+160]
	109 Move X21, [X31+168]
	110 Move X26, [X31+128]
	111 Move X25, [X31+136]
	112 Move X30, [X31+112]
	113 Add X31, X31, 192
	114 Return X0
	115 Move X0, X22
	116 Call 0x1C17F18
	117 Call 0x1C17F20
	118 Call 0x1C17F20
	119 Call 0x1C17F28
	120 Move X23, X0
	121 NotImplemented "Instruction CMP not yet implemented."
	122 Move X0, X23
	123 Call 0x3EB2AD0
	124 Move X22, [X0]
	125 Call 0x3EB2AE0
	126 Move X22, X31
	127 Move X23, X0
	128 Compare X19, 0
	129 JumpIfEqual {151}
	130 Move X8, [X19]
	131 Move X1, [X26]
	132 NotImplemented "Instruction LDRH not yet implemented."
	133 Compare X9, 0
	134 JumpIfEqual {141}
	135 Move X10, [X8+176]
	136 Add X10, X10, 8
	137 NotImplemented "Instruction LDUR not yet implemented."
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Subtract X9, X9, 1
	140 Add X10, X10, 16
	141 Move X0, X19
	142 Move W2, W31
	143 Call 0x1C5D788
	144 NotImplemented "Instruction LDRSW not yet implemented."
	145 Add X8, X8, X9
	146 Add X0, X8, 312
	147 Move X8, [X0]
	148 Move X1, [X0+8]
	149 Move X0, X19
	150 NotImplemented "Instruction BLR not yet implemented."
	151 Compare X22, 0
	152 JumpIfNotEqual {155}
	153 Move X0, X23
	154 Call 0x1D2D690
	155 Move X0, X22
	156 Call 0x1C17F18
	157 Call 0x1991590

