Type: UnityEngine.InputSystem.InputControlPath/PathParser

Method: System.Boolean get_isAtEnd()

Disassembly:
	0x03779638 MOVN W8, 0x1
	0x0377963C MOV X0, X31
	0x03779640 STR W8, [X20 + 0x10]
	0x03779644 BL 0x33C151C
	0x03779648 STR W0, [X20 + 0x68]

ISIL:
	001 Move W8, [X0+16]
	002 Move W9, [X0+8]
	003 NotImplemented "Instruction CMP not yet implemented."
	004 NotImplemented "Instruction CSET not yet implemented."
	005 Return X0

Method: System.Void .ctor(System.String path)

Disassembly:
	0x037781F4 CBNZ W9, 0x3778200
	0x037781F8 MOV X0, X8
	0x037781FC BL 0x1C16DFC
	0x03778200 MOV X0, X31
	0x03778204 BL 0x3815C30
	0x03778208 MOV X21, X0
	0x0377820C STP X31, X31, [X31]
	0x03778210 ADD X0, X31, 0x0
	0x03778214 MOV X1, X20
	0x03778218 MOV X2, X31
	0x0377821C BL 0x3757420
	0x03778220 LDP X0, X1, [X31]
	0x03778224 MOV X2, X31
	0x03778228 BL 0x37577E0
	0x0377822C MOV X1, X0

ISIL:
	001 Move [X31-16], X30
	002 Move [X0], X1
	003 Compare X1, 0
	004 JumpIfEqual {17}
	005 Move W8, [X1+16]
	006 NotImplemented "Instruction MOVI not yet implemented."
	007 Move [X0+12], W31
	008 Move [X0+16], W31
	009 Move [X0+24], V0
	010 Move [X0+40], V0
	011 Move [X0+56], V0
	012 Move [X0+72], V0
	013 Move [X0+8], W8
	014 Move [X0+88], V0
	015 Move X30, [X31+16]
	016 Return 
	017 Call 0x1C17F20

Method: System.Boolean MoveToNextComponent()

Disassembly:
	0x03778230 MOV X0, X21
	0x03778234 MOV W2, W31
	0x03778238 MOV X3, X31
	0x0377823C BL 0x3818BCC
	0x03778240 MOV X1, X0
	0x03778244 CBZ X1, 0x3778258
	0x03778248 MOV X0, X19
	0x0377824C BL 0x37782FC
	0x03778250 MOV X19, X0
	0x03778254 B 0x377825C
	0x03778258 MOV X19, X31
	0x0377825C ADD X0, X31, 0x18
	0x03778260 MOV X1, X31
	0x03778264 BL 0x38196B4
	0x03778268 MOV X0, X19
	0x0377826C LDP X20, X19, [X31 + 0x30]
	0x03778270 LDP X22, X21, [X31 + 0x20]
	0x03778274 LDR X30, [X31 + 0x10]
	0x03778278 ADD X31, X31, 0x40
	0x0377827C RET
	0x03778280 B 0x3778294
	0x03778284 B 0x3778294
	0x03778288 B 0x3778294
	0x0377828C B 0x3778294
	0x03778290 B 0x3778294
	0x03778294 MOV X19, X0
	0x03778298 CMP W1, 0x1
	0x0377829C B.NE 0x37782CC
	0x037782A0 MOV X0, X19
	0x037782A4 BL 0x3EB1AD0
	0x037782A8 LDR X20, [X0]
	0x037782AC BL 0x3EB1AE0
	0x037782B0 ADD X0, X31, 0x18
	0x037782B4 MOV X1, X31
	0x037782B8 BL 0x38196B4
	0x037782BC MOV X19, X31
	0x037782C0 CBZ X20, 0x3778268
	0x037782C4 MOV X0, X20
	0x037782C8 BL 0x1C16F18
	0x037782CC MOV X20, X31
	0x037782D0 B 0x37782D8
	0x037782D4 MOV X19, X0
	0x037782D8 ADD X0, X31, 0x18
	0x037782DC MOV X1, X31
	0x037782E0 BL 0x38196B4
	0x037782E4 CBNZ X20, 0x37782F0
	0x037782E8 MOV X0, X19
	0x037782EC BL 0x1D2C690
	0x037782F0 MOV X0, X20
	0x037782F4 BL 0x1C16F18
	0x037782F8 BL 0x1990590
	0x037782FC SUB X31, X31, 0xC0
	0x03778300 STP X30, X25, [X31 + 0x80]
	0x03778304 STP X24, X23, [X31 + 0x90]
	0x03778308 STP X22, X21, [X31 + 0xA0]
	0x0377830C STP X20, X19, [X31 + 0xB0]
	0x03778310 ADRP X21, 0xC68000
	0x03778314 LDRB W8, [X21 + 0xF3E]
	0x03778318 MOV X19, X1
	0x0377831C MOV X20, X0
	0x03778320 TBNZ X8, 0x0, 0x3778338
	0x03778324 ADRP X0, 0x9CE000
	0x03778328 LDR X0, [X0 + 0xE30]
	0x0377832C BL 0x1C16CF4
	0x03778330 MOVZ W8, 0x1
	0x03778334 STRB W8, [X21 + 0xF3E]
	0x03778338 MOVI V0.2D, 0x0
	0x0377833C STP X31, X31, [X31 + 0x70]
	0x03778340 STR X31, [X31 + 0x60]
	0x03778344 STP V0, V0, [X31 + 0x40]
	0x03778348 STP V0, V0, [X31 + 0x20]
	0x0377834C STP V0, V0, [X31]
	0x03778350 CBZ X19, 0x377848C
	0x03778354 MOV X0, X19
	0x03778358 MOV X1, X31
	0x0377835C BL 0x3810DB0
	0x03778360 UBFM X23, X1, 0x20, 0x3F
	0x03778364 CMP W23, 0x1
	0x03778368 B.LT 0x377846C
	0x0377836C MOV X24, X31
	0x03778370 MOV X21, X31
	0x03778374 MOVZ W25, 0x38
	0x03778378 LDR X8, [X19 + 0x90]
	0x0377837C CBZ X8, 0x377848C
	0x03778380 LDR W9, [X8 + 0x18]
	0x03778384 CMP X24, X9
	0x03778388 B.CS 0x3778490
	0x0377838C ADD X8, X8, X25
	0x03778390 SUB X0, X8, 0x18
	0x03778394 MOV X1, X20
	0x03778398 BL 0x3778494
	0x0377839C TBZ X0, 0x0, 0x3778450
	0x037783A0 LDR X8, [X19 + 0x90]
	0x037783A4 CBZ X8, 0x377848C
	0x037783A8 LDR W9, [X8 + 0x18]
	0x037783AC CMP X24, X9
	0x037783B0 B.CS 0x3778490
	0x037783B4 ADD X8, X8, X25
	0x037783B8 LDP X0, X1, [X8 - 0x8]
	0x037783BC STP X0, X1, [X31 + 0x70]
	0x037783C0 LDR W8, [X20 + 0x10]
	0x037783C4 LDR W9, [X20 + 0x8]
	0x037783C8 CMP W8, W9
	0x037783CC B.NE 0x37783F8
	0x037783D0 CBZ X21, 0x37783E4
	0x037783D4 MOV X2, X21
	0x037783D8 MOV X3, X31
	0x037783DC BL 0x375F9A0
	0x037783E0 TBNZ X0, 0x0, 0x377846C
	0x037783E4 ADD X0, X31, 0x70
	0x037783E8 MOV X1, X31
	0x037783EC BL 0x37565F4
	0x037783F0 MOV X22, X0
	0x037783F4 B 0x3778454
	0x037783F8 ADD X0, X31, 0x0
	0x037783FC MOVZ W2, 0x68
	0x03778400 MOV X1, X20
	0x03778404 BL 0x3EB1AC0
	0x03778408 ADD X0, X31, 0x0
	0x0377840C BL 0x3777230
	0x03778410 TBZ X0, 0x0, 0x3778450
	0x03778414 LDP X0, X1, [X31 + 0x70]
	0x03778418 MOV X2, X31
	0x0377841C BL 0x37577E0
	0x03778420 MOV X1, X0
	0x03778424 ADD X0, X31, 0x0
	0x03778428 BL 0x3778190
	0x0377842C CBZ X0, 0x3778450
	0x03778430 MOV X22, X0
	0x03778434 CBZ X21, 0x3778454
	0x03778438 MOV X0, X22
	0x0377843C MOV X1, X21
	0x03778440 MOV X2, X31
	0x03778444 BL 0x3226EF8
	0x03778448 TBZ X0, 0x0, 0x3778454
	0x0377844C B 0x377846C
	0x03778450 MOV X22, X21
	0x03778454 ADD X24, X24, 0x1
	0x03778458 CMP X23, X24
	0x0377845C ADD X25, X25, 0xD0
	0x03778460 MOV X21, X22
	0x03778464 B.NE 0x3778378
	0x03778468 B 0x3778470
	0x0377846C MOV X22, X31
	0x03778470 MOV X0, X22
	0x03778474 LDP X20, X19, [X31 + 0xB0]
	0x03778478 LDP X22, X21, [X31 + 0xA0]
	0x0377847C LDP X24, X23, [X31 + 0x90]
	0x03778480 LDP X30, X25, [X31 + 0x80]
	0x03778484 ADD X31, X31, 0xC0
	0x03778488 RET
	0x0377848C BL 0x1C16F20
	0x03778490 BL 0x1C16F28
	0x03778494 SUB X31, X31, 0x70
	0x03778498 STR X30, [X31 + 0x10]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+40], X23
	004 Move [X31+48], X22
	005 Move [X31+56], X21
	006 Move [X31+64], X20
	007 Move [X31+72], X19
	008 Move X20, 0xC69000
	009 Move W8, [X20+3920]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x9CF000
	016 Move X0, [X0+3488]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+3920], W8
	020 Move W1, [X19+16]
	021 Move W8, [X19+8]
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move X0, [X19]
	024 Move [X19+12], W1
	025 Compare X0, 0
	026 JumpIfEqual {160}
	027 Move X2, X31
	028 Call String.get_Chars, X0, X1
	029 And W8, W0, 0xFFFF
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move W8, [X19+8]
	032 Move W9, [X19+12]
	033 Add W1, W9, 1
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move [X19+12], W1
	036 Move [X19+16], W1
	037 Move W0, W31
	038 Move W1, [X19+16]
	039 Move W8, [X19+8]
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move X0, [X19]
	042 Compare X0, 0
	043 JumpIfEqual {160}
	044 Move X2, X31
	045 Call String.get_Chars, X0, X1
	046 And W8, W0, 0xFFFF
	047 Move X20, X31
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X21, X31
	050 Move W1, 62
	051 Move X0, X19
	052 Call PathParser.ParseComponentPart, X0, X1
	053 Move X21, X0
	054 Move X20, X1
	055 Move X20, X31
	056 Move X21, X31
	057 NotImplemented "Instruction MOVI not yet implemented."
	058 Move [X31], V0
	059 Move [X31+8], V0
	060 Move W1, [X19+16]
	061 Move W8, [X19+8]
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move X22, 0x9CF000
	064 Move X22, [X22+3488]
	065 Move X0, [X19]
	066 Compare X0, 0
	067 JumpIfEqual {160}
	068 Move X2, X31
	069 Call String.get_Chars, X0, X1
	070 And W8, W0, 0xFFFF
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move W1, 125
	073 Move X0, X19
	074 Call PathParser.ParseComponentPart, X0, X1
	075 Move X4, [X22]
	076 Move X2, X0
	077 Move X5, X1
	078 Add X0, X31, 0
	079 Move W3, 10
	080 Move X1, X2
	081 Move X2, X5
	082 Call InlinedArray`1<Substring>.AppendWithCapacity, X0, X1, X2
	083 Move W1, [X19+16]
	084 Move W8, [X19+8]
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move W1, [X19+16]
	087 Move W8, [X19+8]
	088 Subtract W8, W8, 1
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Move X0, [X19]
	091 Compare X0, 0
	092 JumpIfEqual {160}
	093 Move X2, X31
	094 Call String.get_Chars, X0, X1
	095 And W8, W0, 0xFFFF
	096 Move X22, X31
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Move X23, X31
	099 Move X0, [X19]
	100 Compare X0, 0
	101 JumpIfEqual {160}
	102 Move W8, [X19+16]
	103 Move X2, X31
	104 Add W1, W8, 1
	105 Call String.get_Chars, X0, X1
	106 And W8, W0, 0xFFFF
	107 Move X22, X31
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Move X23, X31
	110 Move W8, [X19+16]
	111 Move W1, 41
	112 Move X0, X19
	113 Add W8, W8, 1
	114 Move [X19+16], W8
	115 Call PathParser.ParseComponentPart, X0, X1
	116 Move X22, X0
	117 Move X23, X1
	118 Move X22, X31
	119 Move X23, X31
	120 Move W1, [X19+16]
	121 Move W8, [X19+8]
	122 NotImplemented "Instruction CMP not yet implemented."
	123 Move X0, [X19]
	124 Compare X0, 0
	125 JumpIfEqual {160}
	126 Move X2, X31
	127 Call String.get_Chars, X0, X1
	128 Move W8, W0
	129 And W8, W8, 0xFFFF
	130 Move X0, X31
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Move X1, X31
	133 Move W1, 47
	134 Move X0, X19
	135 Call PathParser.ParseComponentPart, X0, X1
	136 Move X0, X31
	137 Move X1, X31
	138 Move W8, [X19+12]
	139 Move W9, [X19+16]
	140 Move [X19+24], X21
	141 Move [X19+32], X20
	142 Move V0, [X31]
	143 Move V1, [X31+16]
	144 Move [X19+72], X0
	145 Move [X19+80], X1
	146 NotImplemented "Instruction CMP not yet implemented."
	147 NotImplemented "Instruction CSET not yet implemented."
	148 Move [X19+88], X22
	149 Move [X19+96], X23
	150 Move [X19+56], V1
	151 Move [X19+40], V0
	152 Move X20, [X31+64]
	153 Move X19, [X31+72]
	154 Move X22, [X31+48]
	155 Move X21, [X31+56]
	156 Move X30, [X31+32]
	157 Move X23, [X31+40]
	158 Add X31, X31, 80
	159 Return X0
	160 Call 0x1C17F20

Method: UnityEngine.InputSystem.Utilities.Substring ParseComponentPart(System.Char terminator)

Disassembly:
	0x0377AA94 STP X20, X19, [X31 + 0x10]
	0x0377AA98 ADRP X21, 0xC66000
	0x0377AA9C ADRP X20, 0x9CA000
	0x0377AAA0 LDRB W8, [X21 + 0xF5D]
	0x0377AAA4 LDR X20, [X20 + 0xF90]
	0x0377AAA8 MOV X19, X0
	0x0377AAAC TBNZ X8, 0x0, 0x377AAC4
	0x0377AAB0 ADRP X0, 0x9CA000
	0x0377AAB4 LDR X0, [X0 + 0xF90]
	0x0377AAB8 BL 0x1C16CF4
	0x0377AABC MOVZ W8, 0x1
	0x0377AAC0 STRB W8, [X21 + 0xF5D]
	0x0377AAC4 LDR X8, [X20]
	0x0377AAC8 LDR W9, [X19 + 0x130]
	0x0377AACC LDP X20, X19, [X31 + 0x10]
	0x0377AAD0 LDR X8, [X8 + 0xB8]
	0x0377AAD4 LDR W8, [X8]
	0x0377AAD8 CMP W9, W8
	0x0377AADC CSET W0, EQ
	0x0377AAE0 LDP X30, X21, [X31], #0x20
	0x0377AAE4 RET
	0x0377AAE8 SUB X31, X31, 0x30
	0x0377AAEC STP X30, X21, [X31 + 0x10]
	0x0377AAF0 STP X20, X19, [X31 + 0x20]
	0x0377AAF4 ADRP X21, 0xC66000
	0x0377AAF8 ADRP X20, 0x9CC000
	0x0377AAFC LDRB W8, [X21 + 0xF5E]
	0x0377AB00 LDR X20, [X20 + 0xF98]
	0x0377AB04 MOV X19, X0
	0x0377AB08 TBNZ X8, 0x0, 0x377AB20
	0x0377AB0C ADRP X0, 0x9CC000
	0x0377AB10 LDR X0, [X0 + 0xF98]
	0x0377AB14 BL 0x1C16CF4
	0x0377AB18 MOVZ W8, 0x1
	0x0377AB1C STRB W8, [X21 + 0xF5E]
	0x0377AB20 LDR X1, [X19 + 0x150]
	0x0377AB24 LDR X2, [X20]
	0x0377AB28 ADD X0, X31, 0x0
	0x0377AB2C STP X31, X31, [X31]
	0x0377AB30 BL 0x24FD80C
	0x0377AB34 LDP X0, X1, [X31]
	0x0377AB38 LDP X20, X19, [X31 + 0x20]
	0x0377AB3C LDP X30, X21, [X31 + 0x10]
	0x0377AB40 ADD X31, X31, 0x30
	0x0377AB44 RET
	0x0377AB48 STP X30, X21, [X31 - 0x20]!
	0x0377AB4C STP X20, X19, [X31 + 0x10]
	0x0377AB50 ADRP X21, 0xC66000
	0x0377AB54 ADRP X19, 0x9AB000
	0x0377AB58 ADRP X20, 0x979000
	0x0377AB5C LDRB W8, [X21 + 0xF5F]
	0x0377AB60 LDR X19, [X19 + 0x118]
	0x0377AB64 LDR X20, [X20 + 0x6C0]
	0x0377AB68 TBNZ X8, 0x0, 0x377AB8C
	0x0377AB6C ADRP X0, 0x9AB000
	0x0377AB70 LDR X0, [X0 + 0x118]
	0x0377AB74 BL 0x1C16CF4
	0x0377AB78 ADRP X0, 0x979000
	0x0377AB7C LDR X0, [X0 + 0x6C0]
	0x0377AB80 BL 0x1C16CF4
	0x0377AB84 MOVZ W8, 0x1
	0x0377AB88 STRB W8, [X21 + 0xF5F]
	0x0377AB8C LDR X0, [X20]
	0x0377AB90 LDR X19, [X19]
	0x0377AB94 LDR W8, [X0 + 0xE0]
	0x0377AB98 CBNZ W8, 0x377ABA0

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+32], X22
	004 Move [X31+40], X21
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move W19, [X0+16]
	008 And W8, W1, 0xFFFF
	009 Move W21, W1
	010 Move X20, X0
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Add W19, W19, 1
	013 Move [X20+16], W19
	014 Move W8, [X20+8]
	015 Move W1, W19
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Move W22, 92
	018 Move W1, W19
	019 Move X0, [X20]
	020 Compare X0, 0
	021 JumpIfEqual {67}
	022 Move X2, X31
	023 Call String.get_Chars, X0, X1
	024 And W8, W0, 0xFFFF
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X0, [X20]
	027 Compare X0, 0
	028 JumpIfEqual {67}
	029 Move W1, [X20+16]
	030 Move X2, X31
	031 Call String.get_Chars, X0, X1
	032 Move W9, [X20+16]
	033 Move W8, [X20+8]
	034 And W10, W0, 0xFFFF
	035 Add W11, W9, 1
	036 NotImplemented "Instruction CMP not yet implemented."
	037 NotImplemented "Instruction CCMP not yet implemented."
	038 NotImplemented "Instruction CINC not yet implemented."
	039 Add W1, W9, 1
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move [X20+16], W1
	042 Move W1, [X20+16]
	043 Move W8, [X20+8]
	044 And W9, W21, 0xFFFF
	045 NotImplemented "Instruction CMP not yet implemented."
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Add W8, W1, 1
	048 Move [X20+16], W8
	049 Move X8, [X20]
	050 Subtract W3, W1, W19
	051 Add X0, X31, 0
	052 Move W2, W19
	053 Move X1, X8
	054 Move X4, X31
	055 Move [X31], X31
	056 Move [X31+8], X31
	057 Call Substring..ctor, X0, X1, X2, X3
	058 Move X0, [X31]
	059 Move X1, [X31+8]
	060 Move X20, [X31+48]
	061 Move X19, [X31+56]
	062 Move X22, [X31+32]
	063 Move X21, [X31+40]
	064 Move X30, [X31+16]
	065 Add X31, X31, 64
	066 Return X0
	067 Call 0x1C17F20

