Type: UnityEngine.InputSystem.EnhancedTouch.Touch/FingerAndTouchState

Method: System.Void AddFingers(UnityEngine.InputSystem.Touchscreen screen)

Disassembly:
	0x037FB2D4 BL 0x2177EC0
	0x037FB2D8 LDR X2, [X25]
	0x037FB2DC ADD X0, X20, 0x38
	0x037FB2E0 MOV W1, W21
	0x037FB2E4 BL 0x2177244
	0x037FB2E8 LDR X2, [X24]
	0x037FB2EC ADD X0, X20, 0x40
	0x037FB2F0 MOV W1, W21
	0x037FB2F4 BL 0x2177104
	0x037FB2F8 MOV X0, X19
	0x037FB2FC MOV X1, X31
	0x037FB300 BL 0x376EE00
	0x037FB304 TBZ X0, 0x0, 0x37FB340
	0x037FB308 ADRP X8, 0x920000
	0x037FB30C LDR X8, [X8 + 0x270]
	0x037FB310 LDR X0, [X8]
	0x037FB314 LDR W8, [X0 + 0xE0]
	0x037FB318 CBNZ W8, 0x37FB320
	0x037FB31C BL 0x1C16DFC
	0x037FB320 MOV X0, X19
	0x037FB324 LDP X20, X19, [X31 + 0x40]
	0x037FB328 LDP X22, X21, [X31 + 0x30]
	0x037FB32C LDP X24, X23, [X31 + 0x20]
	0x037FB330 LDP X26, X25, [X31 + 0x10]
	0x037FB334 MOV X1, X31
	0x037FB338 LDR X30, [X31], #0x50
	0x037FB33C B 0x376EC44
	0x037FB340 LDP X20, X19, [X31 + 0x40]
	0x037FB344 LDP X22, X21, [X31 + 0x30]
	0x037FB348 LDP X24, X23, [X31 + 0x20]
	0x037FB34C LDP X26, X25, [X31 + 0x10]
	0x037FB350 LDR X30, [X31], #0x50
	0x037FB354 RET
	0x037FB358 BL 0x1C16F28
	0x037FB35C ADRP X0, 0x8FD000
	0x037FB360 LDR X0, [X0 + 0x528]
	0x037FB364 BL 0x1C16D08
	0x037FB368 BL 0x1C16F10
	0x037FB36C MOV X19, X0
	0x037FB370 ADRP X0, 0x92B000
	0x037FB374 LDR X0, [X0 + 0xDA0]
	0x037FB378 BL 0x1C16D08
	0x037FB37C MOV X1, X0
	0x037FB380 MOV X0, X19
	0x037FB384 MOV X2, X31
	0x037FB388 BL 0x330E100
	0x037FB38C ADRP X0, 0x94E000
	0x037FB390 LDR X0, [X0 + 0xD68]
	0x037FB394 BL 0x1C16D08
	0x037FB398 MOV X1, X0
	0x037FB39C MOV X0, X19
	0x037FB3A0 BL 0x1C16DEC
	0x037FB3A4 SUB X31, X31, 0x110
	0x037FB3A8 STP D13, D12, [X31 + 0x80]
	0x037FB3AC STP D11, D10, [X31 + 0x90]
	0x037FB3B0 STP D9, D8, [X31 + 0xA0]
	0x037FB3B4 STP X29, X30, [X31 + 0xB0]
	0x037FB3B8 STP X28, X27, [X31 + 0xC0]
	0x037FB3BC STP X26, X25, [X31 + 0xD0]
	0x037FB3C0 STP X24, X23, [X31 + 0xE0]
	0x037FB3C4 STP X22, X21, [X31 + 0xF0]
	0x037FB3C8 STP X20, X19, [X31 + 0x100]
	0x037FB3CC MRS X25, 0xC000
	0x037FB3D0 LDR X8, [X25 + 0x28]
	0x037FB3D4 ADRP X24, 0xBE6000
	0x037FB3D8 MOV X22, X4
	0x037FB3DC MOV W21, W3
	0x037FB3E0 STR X8, [X31 + 0x78]
	0x037FB3E4 LDRB W8, [X24 + 0x3ED]

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X21, 0xBE7000
	013 Move W8, [X21+986]
	014 Move X19, X1
	015 Move X20, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {34}
	020 Move X0, 0x94F000
	021 Move X0, [X0+3120]
	022 Call 0x1C17CF4
	023 Move X0, 0x94F000
	024 Move X0, [X0+3240]
	025 Call 0x1C17CF4
	026 Move X0, 0x94F000
	027 Move X0, [X0+3248]
	028 Call 0x1C17CF4
	029 Move X0, 0x94D000
	030 Move X0, [X0+4024]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X21+986], W8
	034 Compare X19, 0
	035 JumpIfEqual {82}
	036 Move X8, 0x94F000
	037 Move X8, [X8+3240]
	038 Move X22, X20
	039 Move W21, [X19+436]
	040 Add X22, X22, 40
	041 Move W1, [X22]
	042 Move X4, [X8]
	043 Move W3, 10
	044 Move W2, W21
	045 Subtract X23, X22, 32
	046 Move X0, X23
	047 Call 0x2177AD0, X0, X1, X2, X3
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X27, 0x94F000
	050 Move X28, 0x94F000
	051 Move X27, [X27+3248]
	052 Move X28, [X28+3120]
	053 Move W24, W31
	054 Move X0, [X27]
	055 Move W25, [X20]
	056 Call 0x1C17F10
	057 Move X1, X19
	058 Move W2, W24
	059 Move W3, W25
	060 Move X26, X0
	061 Call Finger..ctor, X0, X1, X2, X3
	062 Move X4, [X28]
	063 Move W3, 10
	064 Move X0, X23
	065 Move X1, X22
	066 Move X2, X26
	067 Call ArrayHelpers.AppendWithCapacity, X0, X1, X2, X3
	068 Add W24, W24, 1
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move X20, [X31+80]
	071 Move X19, [X31+88]
	072 Move X22, [X31+64]
	073 Move X21, [X31+72]
	074 Move X24, [X31+48]
	075 Move X23, [X31+56]
	076 Move X26, [X31+32]
	077 Move X25, [X31+40]
	078 Move X28, [X31+16]
	079 Move X27, [X31+24]
	080 Move X30, [X31+96]
	081 Return 
	082 Call 0x1C17F20

Method: System.Void RemoveFingers(UnityEngine.InputSystem.Touchscreen screen)

Disassembly:
	0x037FB3E8 MOV W23, W2
	0x037FB3EC MOV W19, W1
	0x037FB3F0 MOV X20, X0
	0x037FB3F4 TBNZ X8, 0x0, 0x37FB430
	0x037FB3F8 ADRP X0, 0x920000
	0x037FB3FC LDR X0, [X0 + 0xD18]
	0x037FB400 BL 0x1C16CF4
	0x037FB404 ADRP X0, 0x94E000
	0x037FB408 LDR X0, [X0 + 0xD70]
	0x037FB40C BL 0x1C16CF4
	0x037FB410 ADRP X0, 0x94C000
	0x037FB414 LDR X0, [X0 + 0xFC0]
	0x037FB418 BL 0x1C16CF4
	0x037FB41C ADRP X0, 0x94B000
	0x037FB420 LDR X0, [X0 + 0xD58]
	0x037FB424 BL 0x1C16CF4
	0x037FB428 MOVZ W8, 0x1
	0x037FB42C STRB W8, [X24 + 0x3ED]
	0x037FB430 STP X31, X31, [X31 + 0x10]
	0x037FB434 LDR X8, [X20 + 0x38]
	0x037FB438 CBZ X8, 0x37FB790
	0x037FB43C LDR W9, [X8 + 0x18]
	0x037FB440 CMP W9, W23
	0x037FB444 B.LS 0x37FB794
	0x037FB448 LDR X9, [X20 + 0x40]
	0x037FB44C CBZ X9, 0x37FB790
	0x037FB450 LDR W10, [X9 + 0x18]
	0x037FB454 CMP W10, W23
	0x037FB458 B.LS 0x37FB794
	0x037FB45C SXTW X10, W23
	0x037FB460 ADD X8, X8, X10, 0x3, LSL
	0x037FB464 ADD X9, X9, X10, 0x2, LSL
	0x037FB468 LDP S10, S9, [X8 + 0x20]
	0x037FB46C LDR W8, [X9 + 0x20]
	0x037FB470 STR W31, [X31 + 0x38]
	0x037FB474 STR X31, [X31 + 0x30]
	0x037FB478 STRB W31, [X31 + 0x2C]
	0x037FB47C STR W8, [X31 + 0xC]
	0x037FB480 CBZ X22, 0x37FB4C4
	0x037FB484 ADRP X24, 0xBE6000
	0x037FB488 ADRP X23, 0x920000
	0x037FB48C LDRB W8, [X24 + 0x40B]
	0x037FB490 LDR X23, [X23 + 0xEC8]
	0x037FB494 TBNZ X8, 0x0, 0x37FB4AC
	0x037FB498 ADRP X0, 0x920000
	0x037FB49C LDR X0, [X0 + 0xEC8]
	0x037FB4A0 BL 0x1C16CF4
	0x037FB4A4 MOVZ W8, 0x1
	0x037FB4A8 STRB W8, [X24 + 0x40B]
	0x037FB4AC LDR X8, [X23]
	0x037FB4B0 LDR V0, [X22 + 0x8]
	0x037FB4B4 LDR X8, [X8 + 0xB8]
	0x037FB4B8 LDR V1, [X8 + 0x8]
	0x037FB4BC FSUB D8, D0, D1
	0x037FB4C0 B 0x37FB4CC
	0x037FB4C4 BL 0x37FC688
	0x037FB4C8 MOV V8.16B, V0.16B
	0x037FB4CC LDR X0, [X20 + 0x20]
	0x037FB4D0 CBZ X0, 0x37FB790
	0x037FB4D4 MOV X1, X31
	0x037FB4D8 BL 0x3772640
	0x037FB4DC LDR X8, [X20 + 0x20]
	0x037FB4E0 CBZ X8, 0x37FB790
	0x037FB4E4 ADRP X9, 0x94C000
	0x037FB4E8 LDR X9, [X9 + 0xFC0]
	0x037FB4EC ADD X8, X8, 0x1A8
	0x037FB4F0 LDR V0, [X8]
	0x037FB4F4 MOV X23, X0
	0x037FB4F8 LDR X2, [X9]
	0x037FB4FC ADD X0, X31, 0x10
	0x037FB500 MOV W1, W19
	0x037FB504 STR V0, [X31 + 0x1]
	0x037FB508 BL 0x24FDB3C
	0x037FB50C CBZ X0, 0x37FB790
	0x037FB510 ADRP X8, 0x920000
	0x037FB514 LDR X8, [X8 + 0xD18]
	0x037FB518 LDR W24, [X0 + 0x14]
	0x037FB51C LDR X8, [X8]
	0x037FB520 LDR W9, [X8 + 0xE0]
	0x037FB524 CBNZ W9, 0x37FB530
	0x037FB528 MOV X0, X8

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0xBE7000
	011 Move W8, [X20+987]
	012 Move X23, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x94F000
	019 Move X0, [X0+3256]
	020 Call 0x1C17CF4
	021 Move X0, 0x94D000
	022 Move X0, [X0+4024]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X20+987], W8
	026 Compare X23, 0
	027 JumpIfEqual {73}
	028 Move X20, X19
	029 Move X10, [X23+432]
	030 Add X20, X20, 8
	031 Move X8, [X20]
	032 Compare X8, 0
	033 JumpIfEqual {73}
	034 Move W9, [X8+24]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move X25, X10
	037 ShiftRight X25, 32
	038 And X25, X25, 0x7FFFFFFF
	039 Move X21, X31
	040 Move X24, X31
	041 Move W22, W25
	042 Move X10, 1
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Add X11, X8, X21
	045 Move X11, [X11+32]
	046 Compare X11, 0
	047 JumpIfEqual {73}
	048 Move X11, [X11+16]
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Add X21, X21, 1
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Add X24, X24, X10
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move X23, 1
	055 Move X26, X21
	056 Move W9, [X8+24]
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Add X8, X8, X24
	059 Move X8, [X8+32]
	060 Compare X8, 0
	061 JumpIfEqual {73}
	062 Move X0, [X8+32]
	063 Compare X0, 0
	064 JumpIfEqual {73}
	065 Move X1, X31
	066 Call InputStateHistory.Dispose, X0
	067 Subtract X25, X25, 1
	068 Move X8, [X20]
	069 Add X24, X24, X23
	070 Add X26, X26, 1
	071 Compare X8, 0
	072 JumpIfNotEqual {56}
	073 Call 0x1C17F20
	074 Move X8, 0x94F000
	075 Move X8, [X8+3256]
	076 Add X1, X19, 40
	077 Move X0, X20
	078 Move W2, W21
	079 Move X4, [X8]
	080 Move W3, W22
	081 Call 0x2179984, X0, X1, X2, X3
	082 Move [X19+48], W31
	083 Move X20, [X31+64]
	084 Move X19, [X31+72]
	085 Move X22, [X31+48]
	086 Move X21, [X31+56]
	087 Move X24, [X31+32]
	088 Move X23, [X31+40]
	089 Move X26, [X31+16]
	090 Move X25, [X31+24]
	091 Move X30, [X31+80]
	092 Return 
	093 Call 0x1C17F28

Method: System.Void Destroy()

Disassembly:
	0x037F83D8 LDR X0, [X0 + 0xE18]
	0x037F83DC BL 0x1C16CF4
	0x037F83E0 ADRP X0, 0x951000
	0x037F83E4 LDR X0, [X0 + 0xBA8]
	0x037F83E8 BL 0x1C16CF4
	0x037F83EC ADRP X0, 0x951000
	0x037F83F0 LDR X0, [X0 + 0xBB0]
	0x037F83F4 BL 0x1C16CF4
	0x037F83F8 MOVZ W8, 0x1
	0x037F83FC STRB W8, [X19 + 0x3AD]
	0x037F8400 STP X31, X31, [X31 + 0x10]
	0x037F8404 LDR X0, [X21 + 0x20]
	0x037F8408 CBZ X0, 0x37F85F4
	0x037F840C ADRP X8, 0x951000
	0x037F8410 LDR X8, [X8 + 0xBA8]
	0x037F8414 ADRP X23, 0x8FB000
	0x037F8418 LDR X1, [X8]
	0x037F841C LDR X23, [X23 + 0xE00]
	0x037F8420 BL 0x2E1210C
	0x037F8424 MOV X19, X0
	0x037F8428 CBZ X0, 0x37F85F8
	0x037F842C ADRP X24, 0x8FB000
	0x037F8430 ADRP X25, 0x951000
	0x037F8434 ADRP X26, 0x951000
	0x037F8438 LDR X24, [X24 + 0xE18]
	0x037F843C LDR X25, [X25 + 0xBA0]
	0x037F8440 LDR X26, [X26 + 0xBB0]
	0x037F8444 LDR X8, [X19]
	0x037F8448 LDR X1, [X24]
	0x037F844C LDRH W9, [X8 + 0x12E]
	0x037F8450 CBZ X9, 0x37F8474
	0x037F8454 LDR X10, [X8 + 0xB0]
	0x037F8458 ADD X10, X10, 0x8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W8, [X0+40]
	005 Move X19, X0
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Move X20, X31
	008 Move X8, [X19+8]
	009 Compare X8, 0
	010 JumpIfEqual {35}
	011 Move W9, [X8+24]
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Add X8, X8, X20
	014 Move X8, [X8+32]
	015 Compare X8, 0
	016 JumpIfEqual {35}
	017 Move X0, [X8+32]
	018 Compare X0, 0
	019 JumpIfEqual {35}
	020 Move X1, X31
	021 Call InputStateHistory.Dispose, X0
	022 Move W8, [X19+40]
	023 Add X20, X20, 1
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X0, [X19+56]
	026 Compare X0, 0
	027 JumpIfEqual {30}
	028 Move X1, X31
	029 Call InputStateHistory.Dispose, X0
	030 Move [X19+56], X31
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Return 
	035 Call 0x1C17F20
	036 Call 0x1C17F28

Method: System.Void UpdateActiveFingers()

Disassembly:
	0x037FA814 MOVZ W2, 0x134
	0x037FA818 MOV W1, W31
	0x037FA81C LDR X8, [X8 + 0xB8]
	0x037FA820 ADD X0, X8, 0x1C
	0x037FA824 STP X31, X31, [X8]
	0x037FA828 STR X31, [X8 + 0x10]
	0x037FA82C STR W9, [X8 + 0x18]
	0x037FA830 BL 0x3EB1B10
	0x037FA834 LDP X20, X19, [X31 + 0x10]
	0x037FA838 LDR X30, [X31], #0x20
	0x037FA83C RET
	0x037FA840 STRB W1, [X0 + 0x20]
	0x037FA844 RET
	0x037FA848 STR X30, [X31 - 0x20]!
	0x037FA84C STP X20, X19, [X31 + 0x10]
	0x037FA850 ADRP X19, 0xBE7000
	0x037FA854 ADRP X20, 0x94F000
	0x037FA858 LDRB W8, [X19 + 0x3DE]
	0x037FA85C LDR X20, [X20 + 0xCE8]
	0x037FA860 TBNZ X8, 0x0, 0x37FA878
	0x037FA864 ADRP X0, 0x94F000
	0x037FA868 LDR X0, [X0 + 0xCE8]
	0x037FA86C BL 0x1C16CF4
	0x037FA870 MOVZ W8, 0x1
	0x037FA874 STRB W8, [X19 + 0x3DE]
	0x037FA878 LDR X0, [X20]
	0x037FA87C BL 0x1C16F10
	0x037FA880 MOV X1, X31
	0x037FA884 MOV X19, X0
	0x037FA888 BL 0x33BDD8C
	0x037FA88C LDR X8, [X20]
	0x037FA890 LDR X8, [X8 + 0xB8]
	0x037FA894 STR X19, [X8]
	0x037FA898 LDP X20, X19, [X31 + 0x10]
	0x037FA89C LDR X30, [X31], #0x20
	0x037FA8A0 RET
	0x037FA8A4 MOV X1, X31
	0x037FA8A8 B 0x33BDD8C
	0x037FA8AC SUB X31, X31, 0x180
	0x037FA8B0 STR X29, [X31 + 0x150]
	0x037FA8B4 STP X30, X21, [X31 + 0x160]
	0x037FA8B8 STP X20, X19, [X31 + 0x170]
	0x037FA8BC ADRP X21, 0xBE7000
	0x037FA8C0 ADRP X20, 0x921000
	0x037FA8C4 LDRB W8, [X21 + 0x3DF]
	0x037FA8C8 LDR X20, [X20 + 0x628]
	0x037FA8CC MOV X19, X1
	0x037FA8D0 TBNZ X8, 0x0, 0x37FA8E8
	0x037FA8D4 ADRP X0, 0x921000
	0x037FA8D8 LDR X0, [X0 + 0x628]
	0x037FA8DC BL 0x1C16CF4
	0x037FA8E0 MOVZ W8, 0x1
	0x037FA8E4 STRB W8, [X21 + 0x3DF]
	0x037FA8E8 ADD X0, X31, 0x0
	0x037FA8EC MOVZ W2, 0x150
	0x037FA8F0 MOV X1, X19
	0x037FA8F4 BL 0x3EB1AC0
	0x037FA8F8 LDR X0, [X20]
	0x037FA8FC LDR W8, [X0 + 0xE0]
	0x037FA900 CBNZ W8, 0x37FA90C
	0x037FA904 BL 0x1C16DFC
	0x037FA908 LDR X0, [X20]
	0x037FA90C LDR X0, [X0 + 0xB8]
	0x037FA910 ADD X1, X31, 0x0
	0x037FA914 MOVZ W2, 0x150
	0x037FA918 BL 0x3EB1AC0
	0x037FA91C LDP X20, X19, [X31 + 0x170]
	0x037FA920 LDP X30, X21, [X31 + 0x160]
	0x037FA924 LDR X29, [X31 + 0x150]
	0x037FA928 ADD X31, X31, 0x180

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+64], X30
	003 Move [X31+72], X25
	004 Move [X31+80], X24
	005 Move [X31+88], X23
	006 Move [X31+96], X22
	007 Move [X31+104], X21
	008 Move [X31+112], X20
	009 Move [X31+120], X19
	010 Move X20, 0xBE8000
	011 Move W8, [X20+988]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x950000
	018 Move X0, [X0+3120]
	019 Call 0x1C17CF4
	020 Move X0, 0x922000
	021 Move X0, [X0+1576]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+988], W8
	025 Move X20, X19
	026 Move [X31+32], X31
	027 Move [X31+40], X31
	028 Move [X31+48], X31
	029 Move [X20+32], W31
	030 Move W8, [X20+8]
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move X24, 0x922000
	033 Move X25, 0x950000
	034 Move X24, [X24+1576]
	035 Move X25, [X25+3120]
	036 Move X23, X31
	037 Add X21, X19, 16
	038 Move X8, [X19+8]
	039 Compare X8, 0
	040 JumpIfEqual {84}
	041 Move W9, [X8+24]
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Add X8, X8, X23
	044 Move X22, [X8+32]
	045 Compare X22, 0
	046 JumpIfEqual {84}
	047 Add X8, X31, 8
	048 Move X0, X22
	049 Call Finger.get_currentTouch, X0
	050 Move X8, [X31+24]
	051 NotImplemented "Instruction LDUR not yet implemented."
	052 Move X0, [X24]
	053 Move [X31+48], X8
	054 Move [X31+2], V0
	055 Move W8, [X0+224]
	056 Compare W8, 0
	057 JumpIfNotEqual {59}
	058 Call 0x1C17DFC
	059 Add X0, X31, 32
	060 Call Touch.get_valid, X0
	061 Move TEMP, X0
	062 And TEMP, TEMP, 1
	063 Compare TEMP, 1
	064 JumpIfNotEqual {71}
	065 Move X4, [X25]
	066 Move W3, 10
	067 Move X0, X21
	068 Move X1, X20
	069 Move X2, X22
	070 Call ArrayHelpers.AppendWithCapacity, X0, X1, X2, X3
	071 Move W8, [X19+40]
	072 Add X23, X23, 1
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move X20, [X31+112]
	075 Move X19, [X31+120]
	076 Move X22, [X31+96]
	077 Move X21, [X31+104]
	078 Move X24, [X31+80]
	079 Move X23, [X31+88]
	080 Move X30, [X31+64]
	081 Move X25, [X31+72]
	082 Add X31, X31, 128
	083 Return 
	084 Call 0x1C17F20
	085 Call 0x1C17F28

Method: System.Void UpdateActiveTouches()

Disassembly:
	0x037FA15C LDR X0, [X0 + 0xC98]
	0x037FA160 BL 0x1C16CF4
	0x037FA164 MOVZ W8, 0x1
	0x037FA168 STRB W8, [X21 + 0x3D2]
	0x037FA16C LDR X0, [X20]
	0x037FA170 LDR X1, [X19]
	0x037FA174 MOV X2, X31
	0x037FA178 BL 0x33CB4B0
	0x037FA17C TBZ X0, 0x0, 0x37FA1A0
	0x037FA180 ADRP X8, 0x94F000
	0x037FA184 LDR X8, [X8 + 0xC98]
	0x037FA188 LDP X1, X2, [X19 + 0x8]
	0x037FA18C ADD X0, X20, 0x8
	0x037FA190 LDP X20, X19, [X31 + 0x10]
	0x037FA194 LDR X3, [X8]
	0x037FA198 LDP X30, X21, [X31], #0x20
	0x037FA19C B 0x25C1F38
	0x037FA1A0 LDP X20, X19, [X31 + 0x10]
	0x037FA1A4 MOV W0, W31
	0x037FA1A8 LDP X30, X21, [X31], #0x20
	0x037FA1AC RET
	0x037FA1B0 SUB X31, X31, 0x60
	0x037FA1B4 STP X30, X21, [X31 + 0x40]
	0x037FA1B8 STP X20, X19, [X31 + 0x50]
	0x037FA1BC ADRP X21, 0xBE7000
	0x037FA1C0 LDRB W8, [X21 + 0x3D3]
	0x037FA1C4 MOV X20, X1
	0x037FA1C8 MOV X19, X0
	0x037FA1CC TBNZ X8, 0x0, 0x37FA1E4
	0x037FA1D0 ADRP X0, 0x921000
	0x037FA1D4 LDR X0, [X0 + 0x628]
	0x037FA1D8 BL 0x1C16CF4
	0x037FA1DC MOVZ W8, 0x1
	0x037FA1E0 STRB W8, [X21 + 0x3D3]
	0x037FA1E4 CBZ X20, 0x37FA200
	0x037FA1E8 ADRP X21, 0x921000
	0x037FA1EC LDR X21, [X21 + 0x628]
	0x037FA1F0 LDR X9, [X20]
	0x037FA1F4 LDR X8, [X21]
	0x037FA1F8 CMP X9, X8
	0x037FA1FC B.EQ 0x37FA208
	0x037FA200 MOV W0, W31
	0x037FA204 B 0x37FA24C
	0x037FA208 MOV X0, X20
	0x037FA20C BL 0x1C16E08
	0x037FA210 LDR X8, [X0 + 0x10]
	0x037FA214 LDR V0, [X0]
	0x037FA218 LDR X0, [X21]
	0x037FA21C STR X8, [X31 + 0x30]
	0x037FA220 STR V0, [X31 + 0x2]
	0x037FA224 LDR W8, [X0 + 0xE0]
	0x037FA228 CBNZ W8, 0x37FA230
	0x037FA22C BL 0x1C16DFC
	0x037FA230 LDR V0, [X31 + 0x2]
	0x037FA234 LDR X8, [X31 + 0x30]
	0x037FA238 ADD X1, X31, 0x0
	0x037FA23C MOV X0, X19
	0x037FA240 STR V0, [X31]
	0x037FA244 STR X8, [X31 + 0x10]
	0x037FA248 BL 0x37FA13C
	0x037FA24C LDP X20, X19, [X31 + 0x50]
	0x037FA250 LDP X30, X21, [X31 + 0x40]
	0x037FA254 AND W0, W0, 0x1
	0x037FA258 ADD X31, X31, 0x60
	0x037FA25C RET
	0x037FA260 STP X30, X21, [X31 - 0x20]!
	0x037FA264 STP X20, X19, [X31 + 0x10]
	0x037FA268 ADRP X20, 0xBE7000
	0x037FA26C LDRB W8, [X20 + 0x3D4]
	0x037FA270 MOV X19, X0
	0x037FA274 TBNZ X8, 0x0, 0x37FA28C
	0x037FA278 ADRP X0, 0x94F000
	0x037FA27C LDR X0, [X0 + 0xCA0]
	0x037FA280 BL 0x1C16CF4
	0x037FA284 MOVZ W8, 0x1
	0x037FA288 STRB W8, [X20 + 0x3D4]
	0x037FA28C ADRP X20, 0x94F000
	0x037FA290 LDR X0, [X19]
	0x037FA294 LDR X20, [X20 + 0xCA0]
	0x037FA298 CBZ X0, 0x37FA2B4
	0x037FA29C LDR X8, [X0]
	0x037FA2A0 LDP X9, X1, [X8 + 0x158]
	0x037FA2A4 BLR X9
	0x037FA2A8 MOVZ W8, 0x18D
	0x037FA2AC MUL W21, W0, W8
	0x037FA2B0 B 0x37FA2B8
	0x037FA2B4 MOV W21, W31
	0x037FA2B8 LDR X1, [X20]
	0x037FA2BC ADD X0, X19, 0x8
	0x037FA2C0 BL 0x25C205C
	0x037FA2C4 LDP X20, X19, [X31 + 0x10]
	0x037FA2C8 EOR W0, W0, W21, 0x0
	0x037FA2CC LDP X30, X21, [X31], #0x20
	0x037FA2D0 RET
	0x037FA2D4 STR X30, [X31 - 0x60]!
	0x037FA2D8 STP X28, X27, [X31 + 0x10]
	0x037FA2DC STP X26, X25, [X31 + 0x20]
	0x037FA2E0 STP X24, X23, [X31 + 0x30]
	0x037FA2E4 STP X22, X21, [X31 + 0x40]
	0x037FA2E8 STP X20, X19, [X31 + 0x50]
	0x037FA2EC ADRP X21, 0xBE7000
	0x037FA2F0 LDRB W8, [X21 + 0x3DA]
	0x037FA2F4 MOV X19, X1
	0x037FA2F8 MOV X20, X0
	0x037FA2FC TBNZ X8, 0x0, 0x37FA338
	0x037FA300 ADRP X0, 0x94F000
	0x037FA304 LDR X0, [X0 + 0xC30]
	0x037FA308 BL 0x1C16CF4
	0x037FA30C ADRP X0, 0x94F000
	0x037FA310 LDR X0, [X0 + 0xCA8]
	0x037FA314 BL 0x1C16CF4
	0x037FA318 ADRP X0, 0x94F000
	0x037FA31C LDR X0, [X0 + 0xCB0]
	0x037FA320 BL 0x1C16CF4
	0x037FA324 ADRP X0, 0x94D000
	0x037FA328 LDR X0, [X0 + 0xFB8]
	0x037FA32C BL 0x1C16CF4
	0x037FA330 MOVZ W8, 0x1
	0x037FA334 STRB W8, [X21 + 0x3DA]
	0x037FA338 CBZ X19, 0x37FA3E4
	0x037FA33C ADRP X8, 0x94F000
	0x037FA340 LDR X8, [X8 + 0xCA8]
	0x037FA344 MOV X22, X20
	0x037FA348 LDR W21, [X19 + 0x1B4]
	0x037FA34C LDR W1, [X22 + 0x28]!
	0x037FA350 LDR X4, [X8]
	0x037FA354 MOVZ W3, 0xA
	0x037FA358 MOV W2, W21
	0x037FA35C SUB X23, X22, 0x20
	0x037FA360 MOV X0, X23
	0x037FA364 BL 0x2176AD0
	0x037FA368 CMP W21, 0x1
	0x037FA36C B.LT 0x37FA3C8
	0x037FA370 ADRP X27, 0x94F000
	0x037FA374 ADRP X28, 0x94F000
	0x037FA378 LDR X27, [X27 + 0xCB0]
	0x037FA37C LDR X28, [X28 + 0xC30]
	0x037FA380 MOV W24, W31
	0x037FA384 LDR X0, [X27]
	0x037FA388 LDR W25, [X20]
	0x037FA38C BL 0x1C16F10
	0x037FA390 MOV X1, X19
	0x037FA394 MOV W2, W24
	0x037FA398 MOV W3, W25
	0x037FA39C MOV X26, X0
	0x037FA3A0 BL 0x37F7C9C
	0x037FA3A4 LDR X4, [X28]
	0x037FA3A8 MOVZ W3, 0xA
	0x037FA3AC MOV X0, X23
	0x037FA3B0 MOV X1, X22
	0x037FA3B4 MOV X2, X26
	0x037FA3B8 BL 0x2174728
	0x037FA3BC ADD W24, W24, 0x1
	0x037FA3C0 CMP W21, W24
	0x037FA3C4 B.NE 0x37FA384
	0x037FA3C8 LDP X20, X19, [X31 + 0x50]
	0x037FA3CC LDP X22, X21, [X31 + 0x40]
	0x037FA3D0 LDP X24, X23, [X31 + 0x30]
	0x037FA3D4 LDP X26, X25, [X31 + 0x20]
	0x037FA3D8 LDP X28, X27, [X31 + 0x10]
	0x037FA3DC LDR X30, [X31], #0x60
	0x037FA3E0 RET
	0x037FA3E4 BL 0x1C16F20
	0x037FA3E8 STR X30, [X31 - 0x50]!
	0x037FA3EC STP X26, X25, [X31 + 0x10]
	0x037FA3F0 STP X24, X23, [X31 + 0x20]
	0x037FA3F4 STP X22, X21, [X31 + 0x30]
	0x037FA3F8 STP X20, X19, [X31 + 0x40]
	0x037FA3FC ADRP X20, 0xBE7000
	0x037FA400 LDRB W8, [X20 + 0x3DB]
	0x037FA404 MOV X23, X1
	0x037FA408 MOV X19, X0
	0x037FA40C TBNZ X8, 0x0, 0x37FA430
	0x037FA410 ADRP X0, 0x94F000
	0x037FA414 LDR X0, [X0 + 0xCB8]
	0x037FA418 BL 0x1C16CF4
	0x037FA41C ADRP X0, 0x94D000
	0x037FA420 LDR X0, [X0 + 0xFB8]
	0x037FA424 BL 0x1C16CF4
	0x037FA428 MOVZ W8, 0x1
	0x037FA42C STRB W8, [X20 + 0x3DB]
	0x037FA430 CBZ X23, 0x37FA4E8
	0x037FA434 MOV X20, X19
	0x037FA438 LDR X10, [X23 + 0x1B0]
	0x037FA43C LDR X8, [X20 + 0x8]!
	0x037FA440 CBZ X8, 0x37FA4E8
	0x037FA444 LDR W9, [X8 + 0x18]
	0x037FA448 CMP W9, 0x1
	0x037FA44C B.LT 0x37FA50C
	0x037FA450 UBFM X25, X10, 0x20, 0x3F
	0x037FA454 MOV X21, X31
	0x037FA458 MOV X24, X31
	0x037FA45C MOV W22, W25
	0x037FA460 MOVZ X10, 0x1
	0x037FA464 CMP W21, W9
	0x037FA468 B.CS 0x37FA528
	0x037FA46C ADD X11, X8, X21, 0x3, LSL
	0x037FA470 LDR X11, [X11 + 0x20]
	0x037FA474 CBZ X11, 0x37FA4E8
	0x037FA478 LDR X11, [X11 + 0x10]
	0x037FA47C CMP X11, X23
	0x037FA480 B.EQ 0x37FA498
	0x037FA484 ADD X21, X21, 0x1
	0x037FA488 CMP W21, W9
	0x037FA48C ADD X24, X24, X10
	0x037FA490 B.LT 0x37FA464
	0x037FA494 B 0x37FA50C
	0x037FA498 CMP W22, 0x1
	0x037FA49C B.LT 0x37FA4EC
	0x037FA4A0 MOVZ X23, 0x1
	0x037FA4A4 MOV X26, X21
	0x037FA4A8 LDR W9, [X8 + 0x18]
	0x037FA4AC CMP X26, X9
	0x037FA4B0 B.CS 0x37FA528
	0x037FA4B4 ADD X8, X8, X24, 0x1D, ASR
	0x037FA4B8 LDR X8, [X8 + 0x20]
	0x037FA4BC CBZ X8, 0x37FA4E8
	0x037FA4C0 LDR X0, [X8 + 0x20]
	0x037FA4C4 CBZ X0, 0x37FA4E8
	0x037FA4C8 MOV X1, X31
	0x037FA4CC BL 0x380DB74
	0x037FA4D0 SUBS X25, X25, 0x1
	0x037FA4D4 B.EQ 0x37FA4EC
	0x037FA4D8 LDR X8, [X20]
	0x037FA4DC ADD X24, X24, X23
	0x037FA4E0 ADD X26, X26, 0x1
	0x037FA4E4 CBNZ X8, 0x37FA4A8
	0x037FA4E8 BL 0x1C16F20
	0x037FA4EC ADRP X8, 0x94F000
	0x037FA4F0 LDR X8, [X8 + 0xCB8]
	0x037FA4F4 ADD X1, X19, 0x28
	0x037FA4F8 MOV X0, X20
	0x037FA4FC MOV W2, W21
	0x037FA500 LDR X4, [X8]
	0x037FA504 MOV W3, W22
	0x037FA508 BL 0x2178984
	0x037FA50C STRB W31, [X19 + 0x30]
	0x037FA510 LDP X20, X19, [X31 + 0x40]
	0x037FA514 LDP X22, X21, [X31 + 0x30]
	0x037FA518 LDP X24, X23, [X31 + 0x20]
	0x037FA51C LDP X26, X25, [X31 + 0x10]
	0x037FA520 LDR X30, [X31], #0x50
	0x037FA524 RET
	0x037FA528 BL 0x1C16F28
	0x037FA52C STR X30, [X31 - 0x20]!
	0x037FA530 STP X20, X19, [X31 + 0x10]
	0x037FA534 ADRP X20, 0xBE7000
	0x037FA538 ADRP X19, 0x921000
	0x037FA53C LDRB W8, [X20 + 0x3D7]
	0x037FA540 LDR X19, [X19 + 0x628]
	0x037FA544 TBNZ X8, 0x0, 0x37FA55C
	0x037FA548 ADRP X0, 0x921000
	0x037FA54C LDR X0, [X0 + 0x628]
	0x037FA550 BL 0x1C16CF4
	0x037FA554 MOVZ W8, 0x1
	0x037FA558 STRB W8, [X20 + 0x3D7]
	0x037FA55C LDR X0, [X19]
	0x037FA560 LDR W8, [X0 + 0xE0]
	0x037FA564 CBNZ W8, 0x37FA570
	0x037FA568 BL 0x1C16DFC
	0x037FA56C LDR X0, [X19]
	0x037FA570 LDR X8, [X0 + 0xB8]
	0x037FA574 LDRB W9, [X8 + 0x141]
	0x037FA578 CBZ W9, 0x37FA594
	0x037FA57C LDR W9, [X0 + 0xE0]
	0x037FA580 CBNZ W9, 0x37FA590
	0x037FA584 BL 0x1C16DFC
	0x037FA588 LDR X8, [X19]
	0x037FA58C LDR X8, [X8 + 0xB8]
	0x037FA590 STRB W31, [X8 + 0x140]
	0x037FA594 LDP X20, X19, [X31 + 0x10]
	0x037FA598 LDR X30, [X31], #0x20
	0x037FA59C RET
	0x037FA5A0 STR X30, [X31 - 0x10]!
	0x037FA5A4 MOVZ W9, 0x40
	0x037FA5A8 ADD X0, X8, 0x1C
	0x037FA5AC MOVZ W2, 0x134
	0x037FA5B0 MOV W1, W31
	0x037FA5B4 STP X31, X31, [X8]
	0x037FA5B8 STR X31, [X8 + 0x10]
	0x037FA5BC STR W9, [X8 + 0x18]
	0x037FA5C0 BL 0x3EB1B10
	0x037FA5C4 LDR X30, [X31], #0x10
	0x037FA5C8 RET
	0x037FA5CC STR X30, [X31 - 0x50]!
	0x037FA5D0 STP X26, X25, [X31 + 0x10]
	0x037FA5D4 STP X24, X23, [X31 + 0x20]
	0x037FA5D8 STP X22, X21, [X31 + 0x30]
	0x037FA5DC STP X20, X19, [X31 + 0x40]
	0x037FA5E0 ADRP X19, 0xBE7000
	0x037FA5E4 ADRP X23, 0x921000
	0x037FA5E8 LDRB W8, [X19 + 0x3D8]
	0x037FA5EC LDR X23, [X23 + 0x628]
	0x037FA5F0 TBNZ X8, 0x0, 0x37FA65C
	0x037FA5F4 ADRP X0, 0x8FA000
	0x037FA5F8 LDR X0, [X0 + 0xE70]
	0x037FA5FC BL 0x1C16CF4
	0x037FA600 ADRP X0, 0x94F000
	0x037FA604 LDR X0, [X0 + 0xCC0]
	0x037FA608 BL 0x1C16CF4
	0x037FA60C ADRP X0, 0x94F000
	0x037FA610 LDR X0, [X0 + 0xCC8]
	0x037FA614 BL 0x1C16CF4
	0x037FA618 ADRP X0, 0x921000
	0x037FA61C LDR X0, [X0 + 0x628]
	0x037FA620 BL 0x1C16CF4
	0x037FA624 ADRP X0, 0x94F000
	0x037FA628 LDR X0, [X0 + 0xCD0]
	0x037FA62C BL 0x1C16CF4
	0x037FA630 ADRP X0, 0x94F000
	0x037FA634 LDR X0, [X0 + 0xCD8]
	0x037FA638 BL 0x1C16CF4
	0x037FA63C ADRP X0, 0x94F000
	0x037FA640 LDR X0, [X0 + 0xCE0]
	0x037FA644 BL 0x1C16CF4
	0x037FA648 ADRP X0, 0x94F000
	0x037FA64C LDR X0, [X0 + 0xCE8]
	0x037FA650 BL 0x1C16CF4
	0x037FA654 MOVZ W8, 0x1
	0x037FA658 STRB W8, [X19 + 0x3D8]
	0x037FA65C LDR X0, [X23]
	0x037FA660 ADRP X24, 0x94F000
	0x037FA664 LDR W8, [X0 + 0xE0]
	0x037FA668 LDR X24, [X24 + 0xCE8]
	0x037FA66C CBNZ W8, 0x37FA674
	0x037FA670 BL 0x1C16DFC
	0x037FA674 LDR X0, [X24]
	0x037FA678 LDR W8, [X0 + 0xE0]
	0x037FA67C CBNZ W8, 0x37FA688
	0x037FA680 BL 0x1C16DFC
	0x037FA684 LDR X0, [X24]
	0x037FA688 LDR X8, [X0 + 0xB8]
	0x037FA68C LDR X9, [X23]
	0x037FA690 LDR X20, [X8 + 0x8]
	0x037FA694 LDR X19, [X9 + 0xB8]
	0x037FA698 CBNZ X20, 0x37FA6EC
	0x037FA69C LDR W8, [X0 + 0xE0]
	0x037FA6A0 CBNZ W8, 0x37FA6AC
	0x037FA6A4 BL 0x1C16DFC
	0x037FA6A8 LDR X0, [X24]
	0x037FA6AC ADRP X9, 0x94F000
	0x037FA6B0 LDR X8, [X0 + 0xB8]
	0x037FA6B4 LDR X9, [X9 + 0xCD0]
	0x037FA6B8 LDR X21, [X8]
	0x037FA6BC LDR X0, [X9]
	0x037FA6C0 BL 0x1C16F10
	0x037FA6C4 ADRP X8, 0x94F000
	0x037FA6C8 LDR X8, [X8 + 0xCD8]
	0x037FA6CC MOV X1, X21
	0x037FA6D0 MOV X3, X31
	0x037FA6D4 MOV X20, X0
	0x037FA6D8 LDR X2, [X8]
	0x037FA6DC BL 0x2723CA0
	0x037FA6E0 LDR X0, [X24]

ISIL:
	001 Subtract X31, X31, 304
	002 Move [X31+208], X29
	003 Move [X31+216], X30
	004 Move [X31+224], X28
	005 Move [X31+232], X27
	006 Move [X31+240], X26
	007 Move [X31+248], X25
	008 Move [X31+256], X24
	009 Move [X31+264], X23
	010 Move [X31+272], X22
	011 Move [X31+280], X21
	012 Move [X31+288], X20
	013 Move [X31+296], X19
	014 Move X20, 0xBE8000
	015 Move W8, [X20+989]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {56}
	021 Move X0, 0x950000
	022 Move X0, [X0+3072]
	023 Call 0x1C17CF4
	024 Move X0, 0x950000
	025 Move X0, [X0+3080]
	026 Call 0x1C17CF4
	027 Move X0, 0x950000
	028 Move X0, [X0+3088]
	029 Call 0x1C17CF4
	030 Move X0, 0x950000
	031 Move X0, [X0+3096]
	032 Call 0x1C17CF4
	033 Move X0, 0x950000
	034 Move X0, [X0+2928]
	035 Call 0x1C17CF4
	036 Move X0, 0x94B000
	037 Move X0, [X0+3984]
	038 Call 0x1C17CF4
	039 Move X0, 0x922000
	040 Move X0, [X0+3400]
	041 Call 0x1C17CF4
	042 Move X0, 0x950000
	043 Move X0, [X0+3104]
	044 Call 0x1C17CF4
	045 Move X0, 0x922000
	046 Move X0, [X0+1576]
	047 Call 0x1C17CF4
	048 Move X0, 0x950000
	049 Move X0, [X0+2936]
	050 Call 0x1C17CF4
	051 Move X0, 0x94D000
	052 Move X0, [X0+200]
	053 Call 0x1C17CF4
	054 Move W8, 1
	055 Move [X20+989], W8
	056 Move [X31+172], W31
	057 Move [X31+144], X31
	058 Move [X31+152], X31
	059 Move [X31+120], X31
	060 Move [X31+128], X31
	061 Move [X31+136], X31
	062 Move [X31+104], X31
	063 Move [X31+112], X31
	064 Move W8, [X19+48]
	065 Compare W8, 0
	066 JumpIfNotEqual {371}
	067 Move X0, [X19+56]
	068 Compare X0, 0
	069 JumpIfEqual {81}
	070 Move X1, X31
	071 Call InputStateHistory.Clear, X0
	072 Move X8, [X19+56]
	073 Compare X8, 0
	074 JumpIfEqual {385}
	075 Move [X8+40], W31
	076 Move X0, [X8+32]
	077 Move X8, 0x950000
	078 Move X8, [X8+3080]
	079 Move X1, [X8]
	080 Call 0x2176AD8, X0
	081 Move X8, 0x950000
	082 Move X8, [X8+2928]
	083 Move X0, [X8]
	084 Call 0x1C17F10
	085 Move X8, 0x950000
	086 Move X8, [X8+3096]
	087 Move X1, X31
	088 Move X20, X0
	089 Move X2, [X8]
	090 Call 0x2E12898, X0, X1
	091 Compare X20, 0
	092 JumpIfEqual {385}
	093 Move W1, 12
	094 Move X0, X20
	095 Move X2, X31
	096 Call InputStateHistory.set_extraMemoryPerRecord, X0, X1
	097 Move [X19+56], X20
	098 Move X9, X19
	099 Move [X9+36], W31
	100 Move W8, [X9+4]
	101 Move [X31+64], X9
	102 Move [X9+13], W31
	103 NotImplemented "Instruction CMP not yet implemented."
	104 Move X8, 0x94B000
	105 Move X8, [X8+3984]
	106 Move W10, W31
	107 Add X9, X19, 24
	108 Move [X31+40], X9
	109 Move X8, [X8]
	110 Move X8, [X8+184]
	111 Move W21, [X8]
	112 Subtract W8, W21, 1
	113 Move [X31+16], W8
	114 Move X8, [X19+8]
	115 Compare X8, 0
	116 JumpIfEqual {385}
	117 Move W9, [X8+24]
	118 NotImplemented "Instruction CMP not yet implemented."
	119 Add X26, X8, W10
	120 Add X26, X26, 32
	121 Move X8, [X26]
	122 Compare X8, 0
	123 JumpIfEqual {385}
	124 Move X8, [X8+32]
	125 Move [X31+20], W10
	126 Compare X8, 0
	127 JumpIfEqual {385}
	128 Move [X31+32], X8
	129 Move W8, [X8+68]
	130 Move [X31+72], W8
	131 Compare W8, 0
	132 JumpIfEqual {365}
	133 Move X8, [X31+64]
	134 Move W22, [X31+72]
	135 Move X20, [X31+32]
	136 Move X2, X31
	137 Move W8, [X8]
	138 Subtract W1, W22, 1
	139 Move X0, X20
	140 Move [X31+60], W8
	141 Call InputStateHistory.UserIndexToRecordIndex, X0, X1
	142 Move W1, W0
	143 Move X0, X20
	144 Move X2, X31
	145 Move [X31+76], W1
	146 Call InputStateHistory.GetRecordUnchecked, X0, X1
	147 Move X25, X0
	148 Move X0, X20
	149 Move X1, X31
	150 Call InputStateHistory.get_bytesPerRecord, X0
	151 NotImplemented "Instruction CMP not yet implemented."
	152 Move X8, [X31+32]
	153 Move W20, W31
	154 Move W24, W31
	155 Move X9, W0
	156 Move W8, [X8+76]
	157 Move [X31+96], X31
	158 Move [X31+24], X9
	159 Subtract W8, W0, W8
	160 Move X8, W8
	161 Move [X31+48], X8
	162 Compare W24, 0
	163 JumpIfEqual {176}
	164 Move W8, [X31+76]
	165 Subtract W8, W8, 1
	166 Move [X31+76], W8
	167 Move X8, [X31+24]
	168 Subtract X25, X25, X8
	169 Move X0, [X31+32]
	170 Move X2, X31
	171 Move W8, [X0+72]
	172 Subtract W1, W8, 1
	173 Move [X31+76], W1
	174 Call InputStateHistory.GetRecordUnchecked, X0, X1
	175 Move X25, X0
	176 Move X0, X25
	177 Move X1, X31
	178 Call RecordHeader.get_statePtrWithoutControlIndex, X0
	179 Compare X0, 0
	180 JumpIfEqual {385}
	181 Move W8, [X0]
	182 Move W22, [X0+36]
	183 Move X27, X0
	184 NotImplemented "Instruction CMP not yet implemented."
	185 Move W0, [X27+32]
	186 Move X1, X31
	187 Call InputExtensions.IsEndedOrCanceled, X0
	188 Move TEMP, X0
	189 And TEMP, TEMP, 1
	190 Compare TEMP, 1
	191 JumpIfNotEqual {205}
	192 Move W0, [X27+32]
	193 Move X1, X31
	194 Call InputExtensions.IsEndedOrCanceled, X0
	195 Move TEMP, X0
	196 And TEMP, TEMP, 1
	197 Compare TEMP, 1
	198 JumpIfNotEqual {219}
	199 NotImplemented "Instruction INVALID not yet implemented."
	200 Move TEMP, X8
	201 And TEMP, TEMP, -2147483648
	202 Compare TEMP, -2147483648
	203 JumpIfEqual {215}
	204 NotImplemented "Instruction CMP not yet implemented."
	205 NotImplemented "Instruction CMP not yet implemented."
	206 Move W8, [X27+32]
	207 NotImplemented "Instruction CMP not yet implemented."
	208 Move X10, [X31+96]
	209 Move W9, 1
	210 Move [X10+32], W9
	211 NotImplemented "Instruction LDUR not yet implemented."
	212 Move [X10+12], X31
	213 Move [X10+4], X8
	214 Move [X19+49], W9
	215 NotImplemented "Instruction CMP not yet implemented."
	216 Move W8, [X27+36]
	217 Move W9, [X31+16]
	218 NotImplemented "Instruction CMP not yet implemented."
	219 Move X0, [X19+56]
	220 Compare X0, 0
	221 JumpIfEqual {385}
	222 Add X1, X31, 172
	223 Move X2, X31
	224 Call InputStateHistory.AllocateRecord, X0, X1
	225 Move X1, X31
	226 Move X28, X0
	227 Call RecordHeader.get_statePtrWithControlIndex, X0
	228 Move X8, [X19+56]
	229 Compare X8, 0
	230 JumpIfEqual {385}
	231 Move X20, X0
	232 Move X0, X8
	233 Move X1, X31
	234 Call InputStateHistory.get_bytesPerRecord, X0
	235 Compare X25, 0
	236 JumpIfEqual {385}
	237 Compare X28, 0
	238 JumpIfEqual {385}
	239 Move V0, [X25]
	240 Move [X28], D0
	241 Move X9, [X19+56]
	242 Compare X9, 0
	243 JumpIfEqual {385}
	244 Move X8, [X26]
	245 Compare X8, 0
	246 JumpIfEqual {385}
	247 Move X8, [X8+32]
	248 Move [X31+96], X20
	249 Compare X8, 0
	250 JumpIfEqual {385}
	251 Move X10, [X31+48]
	252 Move [X31+80], X25
	253 Move X1, X31
	254 Add X20, X9, 32
	255 Add X25, X25, X10
	256 Add X10, X28, W0
	257 Move X0, X8
	258 Subtract X29, X10, 12
	259 Add X23, X9, 40
	260 Call InputStateHistory.get_controls, X0
	261 Move X8, 0x922000
	262 Move X8, [X8+3400]
	263 Move [X31+104], X0
	264 Move [X31+112], X1
	265 Add X0, X31, 104
	266 Move W1, W31
	267 Move X2, [X8]
	268 Call ReadOnlyArray`1<Object>.get_Item, X0, X1
	269 Move X8, 0x950000
	270 Move X8, [X8+3072]
	271 Move X2, X0
	272 Move W3, 10
	273 Move X0, X20
	274 Move X4, [X8]
	275 Move X1, X23
	276 Call ArrayHelpers.AppendWithCapacity, X0, X1, X2, X3
	277 Move X20, [X31+96]
	278 Move [X28+12], W0
	279 Move W2, 56
	280 Move X1, X27
	281 Move X0, X20
	282 Move X3, X31
	283 Call UnsafeUtility.MemCpy, X0, X1, X2
	284 Move W2, 12
	285 Move X0, X29
	286 Move X1, X25
	287 Move X3, X31
	288 Call UnsafeUtility.MemCpy, X0, X1, X2
	289 NotImplemented "Instruction CMP not yet implemented."
	290 Move W8, [X27+32]
	291 Subtract W9, W8, 1
	292 And W9, W9, 255
	293 NotImplemented "Instruction CMP not yet implemented."
	294 NotImplemented "Instruction CMP not yet implemented."
	295 NotImplemented "Instruction INVALID not yet implemented."
	296 Move TEMP, X8
	297 And TEMP, TEMP, -2147483648
	298 Compare TEMP, -2147483648
	299 JumpIfNotEqual {312}
	300 Move W8, [X27+36]
	301 Move W9, [X31+16]
	302 NotImplemented "Instruction CMP not yet implemented."
	303 NotImplemented "Instruction CMP not yet implemented."
	304 NotImplemented "Instruction INVALID not yet implemented."
	305 Move TEMP, X8
	306 And TEMP, TEMP, -2147483648
	307 Compare TEMP, -2147483648
	308 JumpIfEqual {315}
	309 Compare X20, 0
	310 JumpIfEqual {385}
	311 Move X8, X31
	312 Move W9, 5
	313 Move X8, X31
	314 Move [X20+32], W9
	315 Compare X29, 0
	316 JumpIfEqual {385}
	317 Compare X20, 0
	318 JumpIfEqual {385}
	319 Move X8, [X29]
	320 Move [X20+12], X8
	321 Move X8, 0x950000
	322 Move X25, [X31+80]
	323 Move X1, [X19+56]
	324 Move W2, [X31+172]
	325 Move X8, [X8+3104]
	326 Add X0, X31, 144
	327 Move X3, X28
	328 Move X4, [X8]
	329 Call 0x25C297C, X0, X1, X2, X3
	330 Move X8, 0x922000
	331 Move X8, [X8+1576]
	332 Move X20, [X26]
	333 Move V0, [X31+9]
	334 Move X0, [X8]
	335 Move W8, [X0+224]
	336 Compare W8, 0
	337 JumpIfNotEqual {341}
	338 Move [X31+5], V0
	339 Call 0x1C17DFC
	340 Move V0, [X31+5]
	341 Move [X31+120], X20
	342 Move [X31+128], V0
	343 Move X9, 0x950000
	344 NotImplemented "Instruction LDUR not yet implemented."
	345 Move X8, [X31+136]
	346 Move X9, [X9+3088]
	347 Move X0, [X31+40]
	348 Move X1, [X31+64]
	349 Move W2, [X31+60]
	350 Move X5, [X9]
	351 Add X3, X31, 176
	352 Move W4, 10
	353 Move [X31+11], V0
	354 Move [X31+192], X8
	355 Call 0x217B598, X0, X1, X2, X3, X4
	356 Move W20, [X27]
	357 Add X0, X31, 120
	358 Call Touch.get_phase, X0
	359 NotImplemented "Instruction CMP not yet implemented."
	360 Move W8, 1
	361 Move [X19+49], W8
	362 Move W8, [X31+72]
	363 Add W24, W24, 1
	364 NotImplemented "Instruction CMP not yet implemented."
	365 Move W10, [X31+20]
	366 Move W8, [X19+40]
	367 Add W10, W10, 1
	368 NotImplemented "Instruction CMP not yet implemented."
	369 Move W8, 1
	370 Move [X19+48], W8
	371 Move X20, [X31+288]
	372 Move X19, [X31+296]
	373 Move X22, [X31+272]
	374 Move X21, [X31+280]
	375 Move X24, [X31+256]
	376 Move X23, [X31+264]
	377 Move X26, [X31+240]
	378 Move X25, [X31+248]
	379 Move X28, [X31+224]
	380 Move X27, [X31+232]
	381 Move X29, [X31+208]
	382 Move X30, [X31+216]
	383 Add X31, X31, 304
	384 Return 
	385 Call 0x1C17F20
	386 Call 0x1C17F28

