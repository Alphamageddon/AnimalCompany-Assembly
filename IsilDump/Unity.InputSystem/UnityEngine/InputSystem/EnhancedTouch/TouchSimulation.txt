Type: UnityEngine.InputSystem.EnhancedTouch.TouchSimulation

Method: UnityEngine.InputSystem.Touchscreen get_simulatedTouchscreen()

Disassembly:
	0x037FBCAC BL 0x1C16F18
	0x037FBCB0 MOV X20, X31

ISIL:
	001 Move X0, [X0+32]
	002 Return X0

Method: System.Void set_simulatedTouchscreen(UnityEngine.InputSystem.Touchscreen value)

Disassembly:
	0x037FBCB4 B 0x37FBCBC
	0x037FBCB8 MOV X19, X0

ISIL:
	001 Move [X0+32], X1
	002 Return 

Method: UnityEngine.InputSystem.EnhancedTouch.TouchSimulation get_instance()

Disassembly:
	0x037FBCBC ADD X0, X31, 0xA0
	0x037FBCC0 MOV X1, X31
	0x037FBCC4 BL 0x3776130
	0x037FBCC8 CBNZ X20, 0x37FBCD4
	0x037FBCCC MOV X0, X19
	0x037FBCD0 BL 0x1D2C690
	0x037FBCD4 MOV X0, X20
	0x037FBCD8 BL 0x1C16F18
	0x037FBCDC BL 0x1990590
	0x037FBCE0 STP X30, X19, [X31 - 0x10]!
	0x037FBCE4 LDR X8, [X0]
	0x037FBCE8 CBZ X8, 0x37FBD0C
	0x037FBCEC LDR W9, [X8 + 0x10]
	0x037FBCF0 ANDS W31, W1, 0x1
	0x037FBCF4 MOVZ W10, 0x80000000
	0x037FBCF8 CSEL W10, W10, W31, NE
	0x037FBCFC BFM W10, W9, 0x0, 0x1E
	0x037FBD00 STR W10, [X8 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xBE7000
	005 Move X20, 0x94F000
	006 Move W8, [X19+995]
	007 Move X20, [X20+3352]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x94F000
	013 Move X0, [X0+3352]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+995], W8
	017 Move X8, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X8, [X8+184]
	021 Move X0, [X8]
	022 Move X30, [X31+32]
	023 Return X0

Method: System.Void Enable()

Disassembly:
	0x037FBD04 LDP X30, X19, [X31], #0x10
	0x037FBD08 RET
	0x037FBD0C ADRP X0, 0x8F8000
	0x037FBD10 LDR X0, [X0 + 0x5B0]
	0x037FBD14 BL 0x1C16D08
	0x037FBD18 BL 0x1C16F10
	0x037FBD1C MOV X19, X0
	0x037FBD20 ADRP X0, 0x94E000
	0x037FBD24 LDR X0, [X0 + 0xDA0]
	0x037FBD28 BL 0x1C16D08
	0x037FBD2C MOV X1, X0
	0x037FBD30 MOV X0, X19
	0x037FBD34 MOV X2, X31
	0x037FBD38 BL 0x337DF1C
	0x037FBD3C ADRP X0, 0x94E000
	0x037FBD40 LDR X0, [X0 + 0xDA8]
	0x037FBD44 BL 0x1C16D08
	0x037FBD48 MOV X1, X0
	0x037FBD4C MOV X0, X19
	0x037FBD50 BL 0x1C16DEC
	0x037FBD54 STR X30, [X31 - 0x30]!
	0x037FBD58 STP X22, X21, [X31 + 0x10]
	0x037FBD5C STP X20, X19, [X31 + 0x20]
	0x037FBD60 ADRP X22, 0xBE6000
	0x037FBD64 LDRB W8, [X22 + 0x3EA]
	0x037FBD68 MOV W21, W2
	0x037FBD6C MOV X20, X1
	0x037FBD70 MOV X19, X0
	0x037FBD74 TBNZ X8, 0x0, 0x37FBD98
	0x037FBD78 ADRP X0, 0x94C000
	0x037FBD7C LDR X0, [X0 + 0x3C0]
	0x037FBD80 BL 0x1C16CF4
	0x037FBD84 ADRP X0, 0x94B000
	0x037FBD88 LDR X0, [X0 + 0xD58]
	0x037FBD8C BL 0x1C16CF4
	0x037FBD90 MOVZ W8, 0x1
	0x037FBD94 STRB W8, [X22 + 0x3EA]
	0x037FBD98 CMP W21, 0x1
	0x037FBD9C B.NE 0x37FBDBC
	0x037FBDA0 LDR X8, [X19 + 0x20]
	0x037FBDA4 CMP X20, X8
	0x037FBDA8 B.NE 0x37FBDBC
	0x037FBDAC LDP X20, X19, [X31 + 0x20]
	0x037FBDB0 LDP X22, X21, [X31 + 0x10]
	0x037FBDB4 LDR X30, [X31], #0x30
	0x037FBDB8 B 0x37FAE98
	0x037FBDBC CBZ W21, 0x37FBE18
	0x037FBDC0 CMP W21, 0x1
	0x037FBDC4 B.NE 0x37FBE90
	0x037FBDC8 CBZ X20, 0x37FBE90
	0x037FBDCC ADRP X8, 0x94C000
	0x037FBDD0 LDR X8, [X8 + 0x3C0]
	0x037FBDD4 LDR X9, [X20]
	0x037FBDD8 LDR X8, [X8]
	0x037FBDDC LDRB W11, [X9 + 0x130]
	0x037FBDE0 LDRB W10, [X8 + 0x130]
	0x037FBDE4 CMP W11, W10
	0x037FBDE8 B.CC 0x37FBE90
	0x037FBDEC LDR X9, [X9 + 0xC8]
	0x037FBDF0 ADD X9, X9, X10, 0x3, LSL
	0x037FBDF4 LDUR X9, [X9 - 0x8]
	0x037FBDF8 CMP X9, X8
	0x037FBDFC B.NE 0x37FBE90
	0x037FBE00 MOV X0, X19
	0x037FBE04 MOV X1, X20
	0x037FBE08 LDP X20, X19, [X31 + 0x20]
	0x037FBE0C LDP X22, X21, [X31 + 0x10]
	0x037FBE10 LDR X30, [X31], #0x30
	0x037FBE14 B 0x37FB1B0
	0x037FBE18 CBZ X20, 0x37FBE90
	0x037FBE1C ADRP X8, 0x94C000
	0x037FBE20 LDR X8, [X8 + 0x3C0]
	0x037FBE24 LDR X9, [X20]
	0x037FBE28 LDR X10, [X8]
	0x037FBE2C LDRB W8, [X9 + 0x130]
	0x037FBE30 LDRB W11, [X10 + 0x130]
	0x037FBE34 CMP W8, W11
	0x037FBE38 B.CC 0x37FBE90
	0x037FBE3C LDR X9, [X9 + 0xC8]
	0x037FBE40 ADD X11, X9, X11, 0x3, LSL
	0x037FBE44 LDUR X11, [X11 - 0x8]
	0x037FBE48 CMP X11, X10
	0x037FBE4C CSEL X1, X20, X31, EQ
	0x037FBE50 CBZ X1, 0x37FBE90
	0x037FBE54 ADRP X10, 0x94B000
	0x037FBE58 LDR X10, [X10 + 0xD58]
	0x037FBE5C LDR X10, [X10]
	0x037FBE60 LDRB W11, [X10 + 0x130]
	0x037FBE64 CMP W8, W11
	0x037FBE68 B.CC 0x37FBE7C
	0x037FBE6C ADD X8, X9, X11, 0x3, LSL
	0x037FBE70 LDUR X8, [X8 - 0x8]
	0x037FBE74 CMP X8, X10
	0x037FBE78 B.EQ 0x37FBE90
	0x037FBE7C MOV X0, X19
	0x037FBE80 LDP X20, X19, [X31 + 0x20]
	0x037FBE84 LDP X22, X21, [X31 + 0x10]
	0x037FBE88 LDR X30, [X31], #0x30
	0x037FBE8C B 0x37FB040
	0x037FBE90 LDP X20, X19, [X31 + 0x20]
	0x037FBE94 LDP X22, X21, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0xBE7000
	006 Move W8, [X19+996]
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {25}
	011 Move X0, 0x94F000
	012 Move X0, [X0+3360]
	013 Call 0x1C17CF4
	014 Move X0, 0x8F9000
	015 Move X0, [X0+2648]
	016 Call 0x1C17CF4
	017 Move X0, 0x8F9000
	018 Move X0, [X0+1432]
	019 Call 0x1C17CF4
	020 Move X0, 0x94F000
	021 Move X0, [X0+3352]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X19+996], W8
	025 Move X21, 0xBE7000
	026 Move X20, 0x94F000
	027 Move X19, 0x8F9000
	028 Move W8, [X21+1148]
	029 Move X20, [X20+3352]
	030 Move X19, [X19+1432]
	031 Compare W8, 0
	032 JumpIfNotEqual {38}
	033 Move X0, 0x94F000
	034 Move X0, [X0+3352]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X21+1148], W8
	038 Move X8, [X20]
	039 Move X0, [X19]
	040 Move X8, [X8+184]
	041 Move W9, [X0+224]
	042 Move X19, [X8]
	043 Compare W9, 0
	044 JumpIfNotEqual {46}
	045 Call 0x1C17DFC
	046 Move X0, X19
	047 Move X1, X31
	048 Move X2, X31
	049 Call Object.op_Equality, X0, X1
	050 Move TEMP, X0
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfNotEqual {99}
	054 Move X8, 0x8F9000
	055 Move X8, [X8+2648]
	056 Move X0, [X8]
	057 Call 0x1C17F10
	058 Move X1, X31
	059 Move X19, X0
	060 Call GameObject..ctor, X0
	061 Compare X19, 0
	062 JumpIfEqual {120}
	063 Move X0, X19
	064 Move W1, W31
	065 Move X2, X31
	066 Call GameObject.SetActive, X0, X1
	067 Move W1, 61
	068 Move X0, X19
	069 Move X2, X31
	070 Call Object.set_hideFlags, X0, X1
	071 Move X8, 0x94F000
	072 Move X8, [X8+3360]
	073 Move X0, X19
	074 Move X1, [X8]
	075 Call 0x21E61FC, X0
	076 Move X8, [X20]
	077 Move X8, [X8+184]
	078 Move [X8], X0
	079 Move W8, [X21+1148]
	080 Compare W8, 0
	081 JumpIfNotEqual {87}
	082 Move X0, 0x94F000
	083 Move X0, [X0+3352]
	084 Call 0x1C17CF4
	085 Move W8, 1
	086 Move [X21+1148], W8
	087 Move X8, [X20]
	088 Move X8, [X8+184]
	089 Move X0, [X8]
	090 Compare X0, 0
	091 JumpIfEqual {120}
	092 Move X1, X31
	093 Call Component.get_gameObject, X0
	094 Compare X0, 0
	095 JumpIfEqual {120}
	096 Move W1, 1
	097 Move X2, X31
	098 Call GameObject.SetActive, X0, X1
	099 Move W8, [X21+1148]
	100 Compare W8, 0
	101 JumpIfNotEqual {107}
	102 Move X0, 0x94F000
	103 Move X0, [X0+3352]
	104 Call 0x1C17CF4
	105 Move W8, 1
	106 Move [X21+1148], W8
	107 Move X8, [X20]
	108 Move X8, [X8+184]
	109 Move X0, [X8]
	110 Compare X0, 0
	111 JumpIfEqual {120}
	112 Move X20, [X31+16]
	113 Move X19, [X31+24]
	114 Move W1, 1
	115 Move X2, X31
	116 Move X30, [X31+32]
	117 Move X21, [X31+40]
	118 Call Behaviour.set_enabled, X0, X1
	119 Return 
	120 Call 0x1C17F20

Method: System.Void Disable()

Disassembly:
	0x037FBE98 LDR X30, [X31], #0x30
	0x037FBE9C RET
	0x037FBEA0 SUB X31, X31, 0x70
	0x037FBEA4 STR X30, [X31 + 0x30]
	0x037FBEA8 STP X24, X23, [X31 + 0x40]
	0x037FBEAC STP X22, X21, [X31 + 0x50]
	0x037FBEB0 STP X20, X19, [X31 + 0x60]
	0x037FBEB4 ADRP X20, 0xBE6000
	0x037FBEB8 LDRB W8, [X20 + 0x3EB]
	0x037FBEBC MOV X19, X0
	0x037FBEC0 TBNZ X8, 0x0, 0x37FBF74
	0x037FBEC4 ADRP X0, 0x94A000
	0x037FBEC8 LDR X0, [X0 + 0x6F8]
	0x037FBECC BL 0x1C16CF4
	0x037FBED0 ADRP X0, 0x94C000
	0x037FBED4 LDR X0, [X0 + 0xB88]
	0x037FBED8 BL 0x1C16CF4
	0x037FBEDC ADRP X0, 0x94E000
	0x037FBEE0 LDR X0, [X0 + 0xDB0]
	0x037FBEE4 BL 0x1C16CF4
	0x037FBEE8 ADRP X0, 0x920000
	0x037FBEEC LDR X0, [X0 + 0xF10]
	0x037FBEF0 BL 0x1C16CF4
	0x037FBEF4 ADRP X0, 0x920000
	0x037FBEF8 LDR X0, [X0 + 0xF18]
	0x037FBEFC BL 0x1C16CF4
	0x037FBF00 ADRP X0, 0x920000
	0x037FBF04 LDR X0, [X0 + 0xF20]
	0x037FBF08 BL 0x1C16CF4
	0x037FBF0C ADRP X0, 0x94E000
	0x037FBF10 LDR X0, [X0 + 0xDB8]
	0x037FBF14 BL 0x1C16CF4
	0x037FBF18 ADRP X0, 0x920000
	0x037FBF1C LDR X0, [X0 + 0x270]
	0x037FBF20 BL 0x1C16CF4
	0x037FBF24 ADRP X0, 0x920000
	0x037FBF28 LDR X0, [X0 + 0xF30]
	0x037FBF2C BL 0x1C16CF4
	0x037FBF30 ADRP X0, 0x94C000
	0x037FBF34 LDR X0, [X0 + 0xFB8]
	0x037FBF38 BL 0x1C16CF4
	0x037FBF3C ADRP X0, 0x94E000
	0x037FBF40 LDR X0, [X0 + 0xDC0]
	0x037FBF44 BL 0x1C16CF4
	0x037FBF48 ADRP X0, 0x94E000
	0x037FBF4C LDR X0, [X0 + 0xDC8]
	0x037FBF50 BL 0x1C16CF4
	0x037FBF54 ADRP X0, 0x94B000
	0x037FBF58 LDR X0, [X0 + 0xD58]
	0x037FBF5C BL 0x1C16CF4
	0x037FBF60 ADRP X0, 0x94E000
	0x037FBF64 LDR X0, [X0 + 0xDD0]
	0x037FBF68 BL 0x1C16CF4
	0x037FBF6C MOVZ W8, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0xBE7000
	006 Move W8, [X19+997]
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x8F9000
	012 Move X0, [X0+1432]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X19+997], W8
	016 Move X20, 0xBE7000
	017 Move X19, 0x8F9000
	018 Move W8, [X20+1148]
	019 Move X19, [X19+1432]
	020 Compare W8, 0
	021 JumpIfNotEqual {27}
	022 Move X0, 0x94F000
	023 Move X0, [X0+3352]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X20+1148], W8
	027 Move X21, 0x94F000
	028 Move X21, [X21+3352]
	029 Move X0, [X19]
	030 Move X8, [X21]
	031 Move W9, [X0+224]
	032 Move X8, [X8+184]
	033 Move X19, [X8]
	034 Compare W9, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Move X0, X19
	038 Move X1, X31
	039 Move X2, X31
	040 Call Object.op_Inequality, X0, X1
	041 Move TEMP, X0
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfNotEqual {66}
	045 Move W8, [X20+1148]
	046 Compare W8, 0
	047 JumpIfNotEqual {53}
	048 Move X0, 0x94F000
	049 Move X0, [X0+3352]
	050 Call 0x1C17CF4
	051 Move W8, 1
	052 Move [X20+1148], W8
	053 Move X8, [X21]
	054 Move X8, [X8+184]
	055 Move X0, [X8]
	056 Compare X0, 0
	057 JumpIfEqual {71}
	058 Move X20, [X31+16]
	059 Move X19, [X31+24]
	060 Move W1, W31
	061 Move X2, X31
	062 Move X30, [X31+32]
	063 Move X21, [X31+40]
	064 Call Behaviour.set_enabled, X0, X1
	065 Return 
	066 Move X20, [X31+16]
	067 Move X19, [X31+24]
	068 Move X30, [X31+32]
	069 Move X21, [X31+40]
	070 Return 
	071 Call 0x1C17F20

Method: System.Void Destroy()

Disassembly:
	0x037FBF70 STRB W8, [X20 + 0x3EB]
	0x037FBF74 STP X31, X31, [X31 + 0x18]
	0x037FBF78 STR X31, [X31 + 0x28]
	0x037FBF7C STP X31, X31, [X31 + 0x8]
	0x037FBF80 ADRP X22, 0x920000
	0x037FBF84 LDR X0, [X19 + 0x20]
	0x037FBF88 LDR X22, [X22 + 0x270]
	0x037FBF8C CBZ X0, 0x37FBFC0
	0x037FBF90 MOV X1, X31
	0x037FBF94 BL 0x376EE00
	0x037FBF98 TBNZ X0, 0x0, 0x37FC048
	0x037FBF9C LDR X0, [X22]
	0x037FBFA0 LDR X20, [X19 + 0x20]
	0x037FBFA4 LDR W8, [X0 + 0xE0]
	0x037FBFA8 CBNZ W8, 0x37FBFB0
	0x037FBFAC BL 0x1C16DFC
	0x037FBFB0 MOV X0, X20
	0x037FBFB4 MOV X1, X31
	0x037FBFB8 BL 0x376E6E0
	0x037FBFBC B 0x37FC048
	0x037FBFC0 LDR X0, [X22]
	0x037FBFC4 LDR W8, [X0 + 0xE0]
	0x037FBFC8 CBNZ W8, 0x37FBFD0
	0x037FBFCC BL 0x1C16DFC
	0x037FBFD0 ADRP X20, 0x94E000
	0x037FBFD4 LDR X20, [X20 + 0xDD0]
	0x037FBFD8 MOV X1, X31
	0x037FBFDC LDR X0, [X20]
	0x037FBFE0 BL 0x376E86C
	0x037FBFE4 CBZ X0, 0x37FC01C
	0x037FBFE8 ADRP X8, 0x94B000
	0x037FBFEC LDR X8, [X8 + 0xD58]
	0x037FBFF0 LDR X9, [X0]
	0x037FBFF4 LDR X8, [X8]
	0x037FBFF8 LDRB W11, [X9 + 0x130]
	0x037FBFFC LDRB W10, [X8 + 0x130]
	0x037FC000 CMP W11, W10
	0x037FC004 B.CC 0x37FC01C
	0x037FC008 LDR X9, [X9 + 0xC8]
	0x037FC00C ADD X9, X9, X10, 0x3, LSL
	0x037FC010 LDUR X9, [X9 - 0x8]
	0x037FC014 CMP X9, X8
	0x037FC018 B.EQ 0x37FC044
	0x037FC01C STR X31, [X19 + 0x20]
	0x037FC020 LDR X0, [X22]
	0x037FC024 LDR W8, [X0 + 0xE0]
	0x037FC028 CBNZ W8, 0x37FC030
	0x037FC02C BL 0x1C16DFC
	0x037FC030 ADRP X8, 0x94D000
	0x037FC034 LDR X0, [X20]
	0x037FC038 LDR X8, [X8 + 0xDB8]
	0x037FC03C LDR X1, [X8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0xBE7000
	006 Move X20, 0x94F000
	007 Move X21, 0x8F9000
	008 Move W8, [X19+998]
	009 Move X20, [X20+3352]
	010 Move X21, [X21+1432]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x8F9000
	016 Move X0, [X0+1432]
	017 Call 0x1C17CF4
	018 Move X0, 0x94F000
	019 Move X0, [X0+3352]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X19+998], W8
	023 Call TouchSimulation.Disable
	024 Move X8, [X20]
	025 Move X0, [X21]
	026 Move X8, [X8+184]
	027 Move W9, [X0+224]
	028 Move X19, [X8]
	029 Compare W9, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Move X0, X19
	033 Move X1, X31
	034 Move X2, X31
	035 Call Object.op_Inequality, X0, X1
	036 Move TEMP, X0
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfNotEqual {60}
	040 Move X8, [X20]
	041 Move X8, [X8+184]
	042 Move X0, [X8]
	043 Compare X0, 0
	044 JumpIfEqual {65}
	045 Move X1, X31
	046 Call Component.get_gameObject, X0
	047 Move X8, [X21]
	048 Move X19, X0
	049 Move W9, [X8+224]
	050 Compare W9, 0
	051 JumpIfNotEqual {54}
	052 Move X0, X8
	053 Call 0x1C17DFC
	054 Move X0, X19
	055 Move X1, X31
	056 Call Object.Destroy, X0
	057 Move X8, [X20]
	058 Move X8, [X8+184]
	059 Move [X8], X31
	060 Move X20, [X31+16]
	061 Move X19, [X31+24]
	062 Move X30, [X31+32]
	063 Move X21, [X31+40]
	064 Return 
	065 Call 0x1C17F20

Method: System.Void AddPointer(UnityEngine.InputSystem.Pointer pointer)

Disassembly:
	0x037FC040 BL 0x220B300
	0x037FC044 STR X0, [X19 + 0x20]
	0x037FC048 LDR X8, [X19 + 0x48]
	0x037FC04C CBNZ X8, 0x37FC070
	0x037FC050 LDR X8, [X19 + 0x20]
	0x037FC054 CBZ X8, 0x37FC1C0
	0x037FC058 LDR W1, [X8 + 0x1B4]
	0x037FC05C ADRP X8, 0x94D000
	0x037FC060 LDR X8, [X8 + 0xDB0]
	0x037FC064 LDR X0, [X8]
	0x037FC068 BL 0x1C16D6C
	0x037FC06C STR X0, [X19 + 0x48]
	0x037FC070 LDR X0, [X22]
	0x037FC074 ADRP X24, 0x91F000
	0x037FC078 LDR W8, [X0 + 0xE0]
	0x037FC07C LDR X24, [X24 + 0xF30]
	0x037FC080 CBNZ W8, 0x37FC088
	0x037FC084 BL 0x1C16DFC
	0x037FC088 ADRP X21, 0x91F000
	0x037FC08C ADRP X23, 0x91F000
	0x037FC090 ADRP X20, 0x91F000
	0x037FC094 LDR X21, [X21 + 0xF18]
	0x037FC098 LDR X23, [X23 + 0xF20]
	0x037FC09C LDR X20, [X20 + 0xF10]
	0x037FC0A0 MOV X0, X31
	0x037FC0A4 BL 0x376DAD4
	0x037FC0A8 LDR X9, [X24]
	0x037FC0AC STP X0, X1, [X31 + 0x8]
	0x037FC0B0 ADD X8, X31, 0x18
	0x037FC0B4 ADD X0, X31, 0x8
	0x037FC0B8 MOV X1, X9
	0x037FC0BC BL 0x24FD990
	0x037FC0C0 LDR X1, [X21]
	0x037FC0C4 ADD X0, X31, 0x18
	0x037FC0C8 BL 0x2BC496C
	0x037FC0CC TBZ X0, 0x0, 0x37FC0F0
	0x037FC0D0 LDR X1, [X23]
	0x037FC0D4 ADD X0, X31, 0x18
	0x037FC0D8 BL 0x2BC4998
	0x037FC0DC MOV X1, X0
	0x037FC0E0 MOV X0, X19
	0x037FC0E4 MOV W2, W31
	0x037FC0E8 BL 0x37FBD54
	0x037FC0EC B 0x37FC0C0
	0x037FC0F0 LDR X1, [X20]
	0x037FC0F4 ADD X0, X31, 0x18
	0x037FC0F8 BL 0x2BC4968
	0x037FC0FC LDR X20, [X19 + 0x58]
	0x037FC100 CBNZ X20, 0x37FC134
	0x037FC104 ADRP X8, 0x94B000
	0x037FC108 LDR X8, [X8 + 0xB88]
	0x037FC10C LDR X0, [X8]
	0x037FC110 BL 0x1C16F10
	0x037FC114 ADRP X8, 0x94D000
	0x037FC118 LDR X8, [X8 + 0xDC0]
	0x037FC11C MOV X1, X19
	0x037FC120 MOV X3, X31
	0x037FC124 MOV X20, X0
	0x037FC128 LDR X2, [X8]
	0x037FC12C BL 0x2A769B4
	0x037FC130 STR X20, [X19 + 0x58]
	0x037FC134 LDR X8, [X19 + 0x60]
	0x037FC138 CBNZ X8, 0x37FC170
	0x037FC13C ADRP X8, 0x949000
	0x037FC140 LDR X8, [X8 + 0x6F8]
	0x037FC144 LDR X0, [X8]
	0x037FC148 BL 0x1C16F10
	0x037FC14C ADRP X8, 0x94D000
	0x037FC150 LDR X8, [X8 + 0xDC8]
	0x037FC154 MOV X1, X19
	0x037FC158 MOV X3, X31
	0x037FC15C MOV X21, X0
	0x037FC160 LDR X2, [X8]
	0x037FC164 BL 0x2A75DEC
	0x037FC168 LDR X20, [X19 + 0x58]
	0x037FC16C STR X21, [X19 + 0x60]
	0x037FC170 LDR X0, [X22]
	0x037FC174 LDR W8, [X0 + 0xE0]
	0x037FC178 CBNZ W8, 0x37FC180
	0x037FC17C BL 0x1C16DFC
	0x037FC180 MOV X0, X20
	0x037FC184 MOV X1, X31
	0x037FC188 BL 0x376DBD4
	0x037FC18C MOV X0, X31
	0x037FC190 BL 0x376F8E0
	0x037FC194 LDR X1, [X19 + 0x60]
	0x037FC198 BL 0x37FC234
	0x037FC19C AND X0, X0, 0xFF
	0x037FC1A0 MOV X1, X31
	0x037FC1A4 BL 0x376F8E8
	0x037FC1A8 LDP X20, X19, [X31 + 0x60]
	0x037FC1AC LDP X22, X21, [X31 + 0x50]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xBE6000
	007 Move W8, [X21+999]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {31}
	014 Move X0, 0x94E000
	015 Move X0, [X0+3368]
	016 Call 0x1C17CF4
	017 Move X0, 0x94C000
	018 Move X0, [X0+3672]
	019 Call 0x1C17CF4
	020 Move X0, 0x94E000
	021 Move X0, [X0+3376]
	022 Call 0x1C17CF4
	023 Move X0, 0x94E000
	024 Move X0, [X0+3384]
	025 Call 0x1C17CF4
	026 Move X0, 0x920000
	027 Move X0, [X0+624]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X21+999], W8
	031 Compare X19, 0
	032 JumpIfEqual {92}
	033 Move X21, X20
	034 Add X21, X21, 48
	035 Move X0, [X21]
	036 Move X8, 0x94E000
	037 Move X8, [X8+3384]
	038 Move X2, X19
	039 Move X22, X21
	040 Add X22, X22, -8
	041 Move W1, [X22]
	042 Move X3, [X8]
	043 Call 0x21770F0, X0, X1, X2
	044 Move TEMP, X0
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfNotEqual {54}
	048 Move X20, [X31+32]
	049 Move X19, [X31+40]
	050 Move X22, [X31+16]
	051 Move X21, [X31+24]
	052 Move X30, [X31+48]
	053 Return 
	054 Move X8, 0x94E000
	055 Move X8, [X8+3368]
	056 Move W3, 10
	057 Move X0, X21
	058 Move X1, X22
	059 Move X4, [X8]
	060 Move X2, X19
	061 Call ArrayHelpers.AppendWithCapacity, X0, X1, X2, X3
	062 Move X8, 0x94E000
	063 Move X8, [X8+3376]
	064 Add X0, X20, 56
	065 Move S0, W31
	066 Move S1, W31
	067 Move X1, [X8]
	068 Call ArrayHelpers.Append, X0, X1
	069 Move X8, 0x94C000
	070 Move X8, [X8+3672]
	071 Add X0, X20, 64
	072 Move W1, W31
	073 Move X2, [X8]
	074 Call ArrayHelpers.Append, X0, X1
	075 Move X8, 0x920000
	076 Move X8, [X8+624]
	077 Move X0, [X8]
	078 Move W8, [X0+224]
	079 Compare W8, 0
	080 JumpIfNotEqual {82}
	081 Call 0x1C17DFC
	082 Move X0, X19
	083 Move X20, [X31+32]
	084 Move X19, [X31+40]
	085 Move X22, [X31+16]
	086 Move X21, [X31+24]
	087 Move W1, 1
	088 Move X2, X31
	089 Move X30, [X31+48]
	090 Call InputSystem.DisableDevice, X0, X1
	091 Return 
	092 Move X0, 0x8FD000
	093 Move X0, [X0+1320]
	094 Call 0x1C17D08
	095 Call 0x1C17F10
	096 Move X19, X0
	097 Move X0, 0x92B000
	098 Move X0, [X0+3488]
	099 Call 0x1C17D08
	100 Move X1, X0
	101 Move X0, X19
	102 Move X2, X31
	103 Call ArgumentNullException..ctor, X0, X1
	104 Move X0, 0x94E000
	105 Move X0, [X0+3392]
	106 Call 0x1C17D08
	107 Move X1, X0
	108 Move X0, X19
	109 Call 0x1C17DEC

Method: System.Void RemovePointer(UnityEngine.InputSystem.Pointer pointer)

Disassembly:
	0x037FC1B0 LDP X24, X23, [X31 + 0x40]
	0x037FC1B4 LDR X30, [X31 + 0x30]
	0x037FC1B8 ADD X31, X31, 0x70
	0x037FC1BC RET
	0x037FC1C0 BL 0x1C16F20
	0x037FC1C4 B 0x37FC1CC
	0x037FC1C8 B 0x37FC1CC
	0x037FC1CC MOV X23, X20
	0x037FC1D0 MOV X20, X0
	0x037FC1D4 CMP W1, 0x1
	0x037FC1D8 B.NE 0x37FC204
	0x037FC1DC MOV X0, X20
	0x037FC1E0 BL 0x3EB1AD0
	0x037FC1E4 LDR X21, [X0]
	0x037FC1E8 BL 0x3EB1AE0
	0x037FC1EC LDR X1, [X23]
	0x037FC1F0 ADD X0, X31, 0x18
	0x037FC1F4 BL 0x2BC4968
	0x037FC1F8 CBZ X21, 0x37FC0FC
	0x037FC1FC MOV X0, X21
	0x037FC200 BL 0x1C16F18
	0x037FC204 MOV X21, X31
	0x037FC208 B 0x37FC210
	0x037FC20C MOV X20, X0
	0x037FC210 LDR X1, [X23]
	0x037FC214 ADD X0, X31, 0x18
	0x037FC218 BL 0x2BC4968
	0x037FC21C CBNZ X21, 0x37FC228
	0x037FC220 MOV X0, X20
	0x037FC224 BL 0x1D2C690
	0x037FC228 MOV X0, X21
	0x037FC22C BL 0x1C16F18
	0x037FC230 BL 0x1990590
	0x037FC234 SUB X31, X31, 0x30
	0x037FC238 STP X30, X21, [X31 + 0x10]
	0x037FC23C STP X20, X19, [X31 + 0x20]
	0x037FC240 ADRP X19, 0xBE5000
	0x037FC244 LDRB W8, [X19 + 0x41A]
	0x037FC248 MOV X20, X1
	0x037FC24C TBNZ X8, 0x0, 0x37FC264
	0x037FC250 ADRP X0, 0x91F000
	0x037FC254 LDR X0, [X0 + 0x270]
	0x037FC258 BL 0x1C16CF4
	0x037FC25C MOVZ W8, 0x1
	0x037FC260 STRB W8, [X19 + 0x41A]
	0x037FC264 CBZ X20, 0x37FC2FC
	0x037FC268 ADRP X21, 0x91F000
	0x037FC26C LDR X21, [X21 + 0x270]
	0x037FC270 LDR X0, [X21]
	0x037FC274 LDR W8, [X0 + 0xE0]
	0x037FC278 CBNZ W8, 0x37FC284
	0x037FC27C BL 0x1C16DFC
	0x037FC280 LDR X0, [X21]
	0x037FC284 LDR X8, [X0 + 0xB8]
	0x037FC288 LDR X19, [X8]
	0x037FC28C STRB W31, [X31 + 0xC]
	0x037FC290 ADD X1, X31, 0xC
	0x037FC294 MOV X0, X19
	0x037FC298 MOV X2, X31
	0x037FC29C BL 0x33DE64C
	0x037FC2A0 LDR X0, [X21]
	0x037FC2A4 LDR W8, [X0 + 0xE0]
	0x037FC2A8 CBNZ W8, 0x37FC2B4
	0x037FC2AC BL 0x1C16DFC
	0x037FC2B0 LDR X0, [X21]
	0x037FC2B4 LDR X8, [X0 + 0xB8]
	0x037FC2B8 LDR X0, [X8]
	0x037FC2BC CBZ X0, 0x37FC34C
	0x037FC2C0 MOV X1, X20
	0x037FC2C4 MOV X2, X31
	0x037FC2C8 BL 0x37B9EE0
	0x037FC2CC MOV X20, X31
	0x037FC2D0 LDRB W8, [X31 + 0xC]
	0x037FC2D4 CBZ W8, 0x37FC2E4
	0x037FC2D8 MOV X0, X19
	0x037FC2DC MOV X1, X31
	0x037FC2E0 BL 0x33E14E4
	0x037FC2E4 CBNZ X20, 0x37FC344
	0x037FC2E8 LDP X20, X19, [X31 + 0x20]
	0x037FC2EC LDP X30, X21, [X31 + 0x10]
	0x037FC2F0 MOV X0, X31
	0x037FC2F4 ADD X31, X31, 0x30
	0x037FC2F8 RET
	0x037FC2FC ADRP X0, 0x8FC000
	0x037FC300 LDR X0, [X0 + 0x528]
	0x037FC304 BL 0x1C16D08
	0x037FC308 BL 0x1C16F10
	0x037FC30C MOV X19, X0
	0x037FC310 ADRP X0, 0x930000
	0x037FC314 LDR X0, [X0 + 0xF28]
	0x037FC318 BL 0x1C16D08
	0x037FC31C MOV X1, X0
	0x037FC320 MOV X0, X19
	0x037FC324 MOV X2, X31
	0x037FC328 BL 0x330E100
	0x037FC32C ADRP X0, 0x94D000
	0x037FC330 LDR X0, [X0 + 0xDD8]
	0x037FC334 BL 0x1C16D08
	0x037FC338 MOV X1, X0
	0x037FC33C MOV X0, X19
	0x037FC340 BL 0x1C16DEC
	0x037FC344 MOV X0, X20
	0x037FC348 BL 0x1C16F18
	0x037FC34C BL 0x1C16F20
	0x037FC350 B 0x37FC354
	0x037FC354 MOV X21, X0
	0x037FC358 CMP W1, 0x1
	0x037FC35C B.NE 0x37FC374
	0x037FC360 MOV X0, X21
	0x037FC364 BL 0x3EB1AD0
	0x037FC368 LDR X20, [X0]
	0x037FC36C BL 0x3EB1AE0
	0x037FC370 B 0x37FC2D0
	0x037FC374 MOV X20, X31
	0x037FC378 B 0x37FC380
	0x037FC37C MOV X21, X0
	0x037FC380 LDRB W8, [X31 + 0xC]
	0x037FC384 CBZ W8, 0x37FC394
	0x037FC388 MOV X0, X19
	0x037FC38C MOV X1, X31
	0x037FC390 BL 0x33E14E4
	0x037FC394 CBNZ X20, 0x37FC3A0
	0x037FC398 MOV X0, X21
	0x037FC39C BL 0x1D2C690
	0x037FC3A0 MOV X0, X20

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X21, 0xBE6000
	011 Move W8, [X21+1000]
	012 Move X19, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {35}
	018 Move X0, 0x94E000
	019 Move X0, [X0+3400]
	020 Call 0x1C17CF4
	021 Move X0, 0x94E000
	022 Move X0, [X0+3408]
	023 Call 0x1C17CF4
	024 Move X0, 0x94E000
	025 Move X0, [X0+3416]
	026 Call 0x1C17CF4
	027 Move X0, 0x94E000
	028 Move X0, [X0+3424]
	029 Call 0x1C17CF4
	030 Move X0, 0x920000
	031 Move X0, [X0+624]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X21+1000], W8
	035 Compare X19, 0
	036 JumpIfEqual {129}
	037 Move X22, X20
	038 Move X8, 0x94E000
	039 Add X22, X22, 40
	040 Move W2, [X22]
	041 Move X8, [X8+3424]
	042 Move X1, X19
	043 Move X0, [X22+8]
	044 Move X3, [X8]
	045 Call 0x217AB8C, X0, X1, X2
	046 Add W31, W0, 1
	047 Move X8, [X20+72]
	048 Compare X8, 0
	049 JumpIfEqual {77}
	050 Move X26, 0x94E000
	051 Move X25, 0x94E000
	052 Move X24, 0x94E000
	053 Move X26, [X26+3400]
	054 Move X25, [X25+3416]
	055 Move X24, [X24+3408]
	056 Move W21, W0
	057 Move X23, X31
	058 Move W9, [X8+24]
	059 NotImplemented "Instruction CMP not yet implemented."
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Add X9, X8, X23
	062 Move X9, [X9+32]
	063 Compare X9, 0
	064 JumpIfEqual {67}
	065 Move X9, [X9+120]
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move W3, 4
	068 Move X0, X20
	069 Move W1, W23
	070 Move W2, W21
	071 Move X4, X31
	072 Call TouchSimulation.UpdateTouch, X0, X1, X2, X3, X4
	073 Move X8, [X20+72]
	074 Add X23, X23, 1
	075 Compare X8, 0
	076 JumpIfNotEqual {58}
	077 Call 0x1C17F20
	078 Move X0, [X20+48]
	079 Move X3, [X26]
	080 Move X1, X22
	081 Move W2, W21
	082 Call ArrayHelpers.EraseAtWithCapacity, X0, X1, X2
	083 Move X2, [X25]
	084 Add X0, X20, 56
	085 Move W1, W21
	086 Call ArrayHelpers.EraseAt, X0, X1
	087 Move X2, [X24]
	088 Add X0, X20, 64
	089 Move W1, W21
	090 Call ArrayHelpers.EraseAt, X0, X1
	091 Move X0, X19
	092 Move X1, X31
	093 Call InputDevice.get_added, X0
	094 Move TEMP, X0
	095 And TEMP, TEMP, 1
	096 Compare TEMP, 1
	097 JumpIfNotEqual {118}
	098 Move X8, 0x920000
	099 Move X8, [X8+624]
	100 Move X0, [X8]
	101 Move W8, [X0+224]
	102 Compare W8, 0
	103 JumpIfNotEqual {105}
	104 Call 0x1C17DFC
	105 Move X0, X19
	106 Move X20, [X31+64]
	107 Move X19, [X31+72]
	108 Move X22, [X31+48]
	109 Move X21, [X31+56]
	110 Move X24, [X31+32]
	111 Move X23, [X31+40]
	112 Move X26, [X31+16]
	113 Move X25, [X31+24]
	114 Move X1, X31
	115 Move X30, [X31+80]
	116 Call InputSystem.EnableDevice, X0
	117 Return 
	118 Move X20, [X31+64]
	119 Move X19, [X31+72]
	120 Move X22, [X31+48]
	121 Move X21, [X31+56]
	122 Move X24, [X31+32]
	123 Move X23, [X31+40]
	124 Move X26, [X31+16]
	125 Move X25, [X31+24]
	126 Move X30, [X31+80]
	127 Return 
	128 Call 0x1C17F28
	129 Move X0, 0x8FD000
	130 Move X0, [X0+1320]
	131 Call 0x1C17D08
	132 Call 0x1C17F10
	133 Move X19, X0
	134 Move X0, 0x92B000
	135 Move X0, [X0+3488]
	136 Call 0x1C17D08
	137 Move X1, X0
	138 Move X0, X19
	139 Move X2, X31
	140 Call ArgumentNullException..ctor, X0, X1
	141 Move X0, 0x94E000
	142 Move X0, [X0+3432]
	143 Call 0x1C17D08
	144 Move X1, X0
	145 Move X0, X19
	146 Call 0x1C17DEC

Method: System.Void OnEvent(UnityEngine.InputSystem.LowLevel.InputEventPtr eventPtr, UnityEngine.InputSystem.InputDevice device)

Disassembly:
	0x037FC79C LDR V1, [X8 + 0x8]
	0x037FC7A0 FSUB D0, D0, D1
	0x037FC7A4 B 0x37FC7AC
	0x037FC7A8 FMOV D0, X31
	0x037FC7AC LDP X20, X19, [X31 + 0x10]
	0x037FC7B0 LDP X30, X21, [X31], #0x20
	0x037FC7B4 RET
	0x037FC7B8 LDRB W8, [X0 + 0x23]
	0x037FC7BC ANDS W31, W1, 0x1
	0x037FC7C0 MOVZ W9, 0x8
	0x037FC7C4 CSEL W9, W9, W31, NE
	0x037FC7C8 AND W8, W8, 0xFFFFFFF7
	0x037FC7CC ORR W8, W8, W9, 0x0
	0x037FC7D0 STRB W8, [X0 + 0x23]
	0x037FC7D4 RET
	0x037FC7D8 LDRB W8, [X0 + 0x23]
	0x037FC7DC UBFM W0, W8, 0x3, 0x3
	0x037FC7E0 RET
	0x037FC7E4 LDRB W8, [X0 + 0x23]
	0x037FC7E8 ANDS W31, W1, 0x1
	0x037FC7EC MOVZ W9, 0x10
	0x037FC7F0 CSEL W9, W9, W31, NE
	0x037FC7F4 AND W8, W8, 0xFFFFFFEF
	0x037FC7F8 ORR W8, W8, W9, 0x0
	0x037FC7FC STRB W8, [X0 + 0x23]
	0x037FC800 RET
	0x037FC804 RET
	0x037FC808 RET
	0x037FC80C RET
	0x037FC810 RET
	0x037FC814 RET
	0x037FC818 MOVN W8, 0x0
	0x037FC81C MOV X1, X31
	0x037FC820 STR W8, [X0 + 0x54]
	0x037FC824 B 0x3C36C30
	0x037FC828 LDR X0, [X0 + 0x1F0]
	0x037FC82C RET
	0x037FC830 STR X1, [X0 + 0x1F0]
	0x037FC834 RET
	0x037FC838 LDR X0, [X0 + 0x1F8]
	0x037FC83C RET
	0x037FC840 STR X1, [X0 + 0x1F8]
	0x037FC844 RET
	0x037FC848 LDR X0, [X0 + 0x200]
	0x037FC84C RET
	0x037FC850 STR X1, [X0 + 0x200]
	0x037FC854 RET
	0x037FC858 LDR X0, [X0 + 0x208]
	0x037FC85C RET
	0x037FC860 STR X1, [X0 + 0x208]
	0x037FC864 RET
	0x037FC868 LDR X0, [X0 + 0x210]
	0x037FC86C RET
	0x037FC870 STR X1, [X0 + 0x210]
	0x037FC874 RET
	0x037FC878 LDR X0, [X0 + 0x218]
	0x037FC87C RET
	0x037FC880 STR X1, [X0 + 0x218]
	0x037FC884 RET
	0x037FC888 LDR X0, [X0 + 0x220]
	0x037FC88C RET
	0x037FC890 STR X1, [X0 + 0x220]
	0x037FC894 RET
	0x037FC898 LDR X0, [X0 + 0x228]
	0x037FC89C RET
	0x037FC8A0 STR X1, [X0 + 0x228]
	0x037FC8A4 RET
	0x037FC8A8 LDR X0, [X0 + 0x230]
	0x037FC8AC RET
	0x037FC8B0 STR X1, [X0 + 0x230]
	0x037FC8B4 RET
	0x037FC8B8 STR X30, [X31 - 0x20]!
	0x037FC8BC STP X20, X19, [X31 + 0x10]
	0x037FC8C0 ADRP X19, 0xBE5000
	0x037FC8C4 ADRP X20, 0x94D000
	0x037FC8C8 LDRB W8, [X19 + 0x3EE]
	0x037FC8CC LDR X20, [X20 + 0xDF8]
	0x037FC8D0 TBNZ X8, 0x0, 0x37FC8E8
	0x037FC8D4 ADRP X0, 0x94D000
	0x037FC8D8 LDR X0, [X0 + 0xDF8]
	0x037FC8DC BL 0x1C16CF4
	0x037FC8E0 MOVZ W8, 0x1
	0x037FC8E4 STRB W8, [X19 + 0x3EE]
	0x037FC8E8 LDR X8, [X20]
	0x037FC8EC LDP X20, X19, [X31 + 0x10]
	0x037FC8F0 LDR X8, [X8 + 0xB8]
	0x037FC8F4 LDR X0, [X8]
	0x037FC8F8 LDR X30, [X31], #0x20
	0x037FC8FC RET
	0x037FC900 STP X30, X21, [X31 - 0x20]!
	0x037FC904 STP X20, X19, [X31 + 0x10]
	0x037FC908 ADRP X20, 0xBE5000
	0x037FC90C ADRP X21, 0x94D000
	0x037FC910 LDRB W8, [X20 + 0x3EF]
	0x037FC914 LDR X21, [X21 + 0xDF8]
	0x037FC918 MOV X19, X0
	0x037FC91C TBNZ X8, 0x0, 0x37FC934
	0x037FC920 ADRP X0, 0x94D000
	0x037FC924 LDR X0, [X0 + 0xDF8]
	0x037FC928 BL 0x1C16CF4
	0x037FC92C MOVZ W8, 0x1
	0x037FC930 STRB W8, [X20 + 0x3EF]
	0x037FC934 LDR X8, [X21]
	0x037FC938 LDR X8, [X8 + 0xB8]
	0x037FC93C STR X19, [X8]
	0x037FC940 LDP X20, X19, [X31 + 0x10]
	0x037FC944 LDP X30, X21, [X31], #0x20
	0x037FC948 RET
	0x037FC94C STR X30, [X31 - 0x20]!
	0x037FC950 STP X20, X19, [X31 + 0x10]
	0x037FC954 MOV X1, X31
	0x037FC958 MOV X19, X0
	0x037FC95C BL 0x377A628
	0x037FC960 ADRP X20, 0xBE5000
	0x037FC964 LDRB W8, [X20 + 0x47D]
	0x037FC968 CBNZ W8, 0x37FC980
	0x037FC96C ADRP X0, 0x94D000
	0x037FC970 LDR X0, [X0 + 0xDF8]
	0x037FC974 BL 0x1C16CF4
	0x037FC978 MOVZ W8, 0x1
	0x037FC97C STRB W8, [X20 + 0x47D]
	0x037FC980 ADRP X8, 0x94D000
	0x037FC984 LDR X8, [X8 + 0xDF8]
	0x037FC988 LDR X8, [X8]
	0x037FC98C LDR X8, [X8 + 0xB8]
	0x037FC990 STR X19, [X8]
	0x037FC994 LDP X20, X19, [X31 + 0x10]
	0x037FC998 LDR X30, [X31], #0x20
	0x037FC99C RET
	0x037FC9A0 STR X30, [X31 - 0x20]!
	0x037FC9A4 STP X20, X19, [X31 + 0x10]
	0x037FC9A8 MOV X1, X31
	0x037FC9AC MOV X19, X0
	0x037FC9B0 BL 0x377A6F0
	0x037FC9B4 ADRP X20, 0xBE5000
	0x037FC9B8 LDRB W8, [X20 + 0x47E]
	0x037FC9BC CBNZ W8, 0x37FC9D4
	0x037FC9C0 ADRP X0, 0x94D000
	0x037FC9C4 LDR X0, [X0 + 0xDF8]
	0x037FC9C8 BL 0x1C16CF4
	0x037FC9CC MOVZ W8, 0x1
	0x037FC9D0 STRB W8, [X20 + 0x47E]
	0x037FC9D4 ADRP X20, 0x94D000
	0x037FC9D8 LDR X20, [X20 + 0xDF8]
	0x037FC9DC LDR X8, [X20]
	0x037FC9E0 LDR X8, [X8 + 0xB8]
	0x037FC9E4 LDR X9, [X8]
	0x037FC9E8 CMP X9, X19
	0x037FC9EC B.NE 0x37FCA18
	0x037FC9F0 ADRP X19, 0xBE5000
	0x037FC9F4 LDRB W9, [X19 + 0x47D]
	0x037FC9F8 CBNZ W9, 0x37FCA14
	0x037FC9FC MOV X0, X20
	0x037FCA00 BL 0x1C16CF4
	0x037FCA04 LDR X8, [X20]
	0x037FCA08 MOVZ W9, 0x1
	0x037FCA0C STRB W9, [X19 + 0x47D]
	0x037FCA10 LDR X8, [X8 + 0xB8]
	0x037FCA14 STR X31, [X8]
	0x037FCA18 LDP X20, X19, [X31 + 0x10]
	0x037FCA1C LDR X30, [X31], #0x20
	0x037FCA20 RET
	0x037FCA24 STP X30, X23, [X31 - 0x30]!
	0x037FCA28 STP X22, X21, [X31 + 0x10]
	0x037FCA2C STP X20, X19, [X31 + 0x20]
	0x037FCA30 ADRP X23, 0xBE5000
	0x037FCA34 ADRP X21, 0x94D000
	0x037FCA38 ADRP X22, 0x948000
	0x037FCA3C LDRB W8, [X23 + 0x3F0]
	0x037FCA40 LDR X21, [X21 + 0xE00]
	0x037FCA44 LDR X22, [X22 + 0xE18]
	0x037FCA48 MOV X19, X0
	0x037FCA4C ADD X20, X0, 0x1B8
	0x037FCA50 TBNZ X8, 0x0, 0x37FCA74
	0x037FCA54 ADRP X0, 0x948000
	0x037FCA58 LDR X0, [X0 + 0xE18]
	0x037FCA5C BL 0x1C16CF4
	0x037FCA60 ADRP X0, 0x94D000
	0x037FCA64 LDR X0, [X0 + 0xE00]
	0x037FCA68 BL 0x1C16CF4
	0x037FCA6C MOVZ W8, 0x1
	0x037FCA70 STRB W8, [X23 + 0x3F0]
	0x037FCA74 MOV X0, X19
	0x037FCA78 MOV X1, X31
	0x037FCA7C BL 0x377A348
	0x037FCA80 LDR X1, [X21]
	0x037FCA84 LDR X2, [X22]
	0x037FCA88 MOV X0, X19
	0x037FCA8C BL 0x21FC754
	0x037FCA90 STR X0, [X19 + 0x1F0]
	0x037FCA94 LDR V0, [X19 + 0x1A]
	0x037FCA98 LDR V1, [X20]
	0x037FCA9C LDR V2, [X20 + 0x2]
	0x037FCAA0 LDP X22, X21, [X31 + 0x10]
	0x037FCAA4 STP V0, V1, [X20 + 0x40]
	0x037FCAA8 LDR V0, [X19 + 0x19]
	0x037FCAAC STP V2, V0, [X20 + 0x60]
	0x037FCAB0 LDP X20, X19, [X31 + 0x20]
	0x037FCAB4 LDP X30, X23, [X31], #0x30
	0x037FCAB8 RET
	0x037FCABC RET
	0x037FCAC0 MOV X1, X31
	0x037FCAC4 B 0x377A848
	0x037FCAC8 STR X30, [X31 - 0x20]!
	0x037FCACC STP X20, X19, [X31 + 0x10]
	0x037FCAD0 ADRP X20, 0xBE5000
	0x037FCAD4 ADRP X19, 0x91F000
	0x037FCAD8 LDRB W8, [X20 + 0x3F1]
	0x037FCADC LDR X19, [X19 + 0x270]
	0x037FCAE0 TBNZ X8, 0x0, 0x37FCB04
	0x037FCAE4 ADRP X0, 0x94D000
	0x037FCAE8 LDR X0, [X0 + 0xE08]
	0x037FCAEC BL 0x1C16CF4
	0x037FCAF0 ADRP X0, 0x91F000
	0x037FCAF4 LDR X0, [X0 + 0x270]
	0x037FCAF8 BL 0x1C16CF4
	0x037FCAFC MOVZ W8, 0x1
	0x037FCB00 STRB W8, [X20 + 0x3F1]
	0x037FCB04 LDR X0, [X19]
	0x037FCB08 ADRP X19, 0x94D000
	0x037FCB0C LDR W8, [X0 + 0xE0]
	0x037FCB10 LDR X19, [X19 + 0xE08]
	0x037FCB14 CBNZ W8, 0x37FCB1C
	0x037FCB18 BL 0x1C16DFC
	0x037FCB1C LDR X3, [X19]
	0x037FCB20 LDP X20, X19, [X31 + 0x10]
	0x037FCB24 MOV X0, X31
	0x037FCB28 MOV X1, X31
	0x037FCB2C MOV X2, X31
	0x037FCB30 LDR X30, [X31], #0x20
	0x037FCB34 B 0x220C738
	0x037FCB38 MOV X1, X31
	0x037FCB3C B 0x377A848
	0x037FCB40 MOV X1, X31
	0x037FCB44 B 0x377A848
	0x037FCB48 MOV X1, X31
	0x037FCB4C B 0x377A848
	0x037FCB50 MOV X1, X31
	0x037FCB54 B 0x377C700
	0x037FCB58 MOV X1, X31
	0x037FCB5C B 0x377A848
	0x037FCB60 MOV X1, X31
	0x037FCB64 B 0x37DFEA4
	0x037FCB68 MOV X1, X31
	0x037FCB6C B 0x37BE44C
	0x037FCB70 MOV X1, X31
	0x037FCB74 B 0x37BEE38
	0x037FCB78 MOV X1, X31
	0x037FCB7C B 0x37BE648
	0x037FCB80 MOV X1, X31
	0x037FCB84 B 0x37BF034
	0x037FCB88 MOV X1, X31
	0x037FCB8C B 0x37BF230
	0x037FCB90 MOV X1, X31
	0x037FCB94 B 0x37BF42C
	0x037FCB98 MOV X1, X31
	0x037FCB9C B 0x37BE844
	0x037FCBA0 MOV X1, X31
	0x037FCBA4 B 0x37BEC3C
	0x037FCBA8 MOV X1, X31
	0x037FCBAC B 0x37BEA40
	0x037FCBB0 MOV X1, X31
	0x037FCBB4 B 0x37BF628
	0x037FCBB8 MOV X1, X31
	0x037FCBBC B 0x37BF824
	0x037FCBC0 MOV X1, X31
	0x037FCBC4 B 0x37BFA20
	0x037FCBC8 SUB X31, X31, 0x150
	0x037FCBCC STP X29, X30, [X31 + 0xF0]
	0x037FCBD0 STP X28, X27, [X31 + 0x100]
	0x037FCBD4 STP X26, X25, [X31 + 0x110]
	0x037FCBD8 STP X24, X23, [X31 + 0x120]
	0x037FCBDC STP X22, X21, [X31 + 0x130]
	0x037FCBE0 STP X20, X19, [X31 + 0x140]
	0x037FCBE4 ADRP X20, 0xBE5000
	0x037FCBE8 ADRP X19, 0x91F000
	0x037FCBEC LDRB W8, [X20 + 0x3F2]
	0x037FCBF0 LDR X19, [X19 + 0xEC0]
	0x037FCBF4 TBNZ X8, 0x0, 0x37FCD68
	0x037FCBF8 ADRP X0, 0x94D000
	0x037FCBFC LDR X0, [X0 + 0xE10]
	0x037FCC00 BL 0x1C16CF4
	0x037FCC04 ADRP X0, 0x94C000
	0x037FCC08 LDR X0, [X0 + 0xF20]
	0x037FCC0C BL 0x1C16CF4
	0x037FCC10 ADRP X0, 0x94D000
	0x037FCC14 LDR X0, [X0 + 0xE18]
	0x037FCC18 BL 0x1C16CF4
	0x037FCC1C ADRP X0, 0x91F000
	0x037FCC20 LDR X0, [X0 + 0xEC0]
	0x037FCC24 BL 0x1C16CF4
	0x037FCC28 ADRP X0, 0x94D000
	0x037FCC2C LDR X0, [X0 + 0xE20]
	0x037FCC30 BL 0x1C16CF4
	0x037FCC34 ADRP X0, 0x94D000
	0x037FCC38 LDR X0, [X0 + 0xE28]
	0x037FCC3C BL 0x1C16CF4
	0x037FCC40 ADRP X0, 0x94D000
	0x037FCC44 LDR X0, [X0 + 0xE30]
	0x037FCC48 BL 0x1C16CF4
	0x037FCC4C ADRP X0, 0x94D000
	0x037FCC50 LDR X0, [X0 + 0xE38]
	0x037FCC54 BL 0x1C16CF4
	0x037FCC58 ADRP X0, 0x94D000
	0x037FCC5C LDR X0, [X0 + 0xE40]
	0x037FCC60 BL 0x1C16CF4
	0x037FCC64 ADRP X0, 0x94D000
	0x037FCC68 LDR X0, [X0 + 0xE48]
	0x037FCC6C BL 0x1C16CF4
	0x037FCC70 ADRP X0, 0x94D000
	0x037FCC74 LDR X0, [X0 + 0xE50]
	0x037FCC78 BL 0x1C16CF4
	0x037FCC7C ADRP X0, 0x94D000
	0x037FCC80 LDR X0, [X0 + 0xE58]
	0x037FCC84 BL 0x1C16CF4
	0x037FCC88 ADRP X0, 0x94D000
	0x037FCC8C LDR X0, [X0 + 0xE60]
	0x037FCC90 BL 0x1C16CF4
	0x037FCC94 ADRP X0, 0x94D000
	0x037FCC98 LDR X0, [X0 + 0xE68]
	0x037FCC9C BL 0x1C16CF4
	0x037FCCA0 ADRP X0, 0x94D000
	0x037FCCA4 LDR X0, [X0 + 0xE70]
	0x037FCCA8 BL 0x1C16CF4
	0x037FCCAC ADRP X0, 0x94D000
	0x037FCCB0 LDR X0, [X0 + 0xE78]
	0x037FCCB4 BL 0x1C16CF4
	0x037FCCB8 ADRP X0, 0x94D000
	0x037FCCBC LDR X0, [X0 + 0xE80]
	0x037FCCC0 BL 0x1C16CF4
	0x037FCCC4 ADRP X0, 0x94D000
	0x037FCCC8 LDR X0, [X0 + 0xE88]
	0x037FCCCC BL 0x1C16CF4
	0x037FCCD0 ADRP X0, 0x94D000
	0x037FCCD4 LDR X0, [X0 + 0xE90]
	0x037FCCD8 BL 0x1C16CF4
	0x037FCCDC ADRP X0, 0x94D000

ISIL:
	001 Subtract X31, X31, 384
	002 Move [X31+288], X29
	003 Move [X31+296], X30
	004 Move [X31+304], X28
	005 Move [X31+312], X27
	006 Move [X31+320], X26
	007 Move [X31+328], X25
	008 Move [X31+336], X24
	009 Move [X31+344], X23
	010 Move [X31+352], X22
	011 Move [X31+360], X21
	012 Move [X31+368], X20
	013 Move [X31+376], X19
	014 Move X24, 0xBE6000
	015 Move [X31+280], X1
	016 Move X21, 0x94E000
	017 Move W8, [X24+1001]
	018 Move X21, [X21+3448]
	019 Move X23, X2
	020 Move X19, X1
	021 Move X20, X0
	022 Add X22, X31, 160
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {50}
	027 Move X0, 0x94E000
	028 Move X0, [X0+3456]
	029 Call 0x1C17CF4
	030 Move X0, 0x94E000
	031 Move X0, [X0+3464]
	032 Call 0x1C17CF4
	033 Move X0, 0x94E000
	034 Move X0, [X0+3448]
	035 Call 0x1C17CF4
	036 Move X0, 0x920000
	037 Move X0, [X0+3216]
	038 Call 0x1C17CF4
	039 Move X0, 0x94A000
	040 Move X0, [X0+3976]
	041 Call 0x1C17CF4
	042 Move X0, 0x94E000
	043 Move X0, [X0+3472]
	044 Call 0x1C17CF4
	045 Move X0, 0x94E000
	046 Move X0, [X0+3480]
	047 Call 0x1C17CF4
	048 Move W8, 1
	049 Move [X24+1001], W8
	050 NotImplemented "Instruction MOVI not yet implemented."
	051 Move [X31+128], X31
	052 Move [X31+136], X31
	053 Move [X31+144], X31
	054 Move [X31+124], W31
	055 Move [X22+80], V0
	056 Move [X22+88], V0
	057 Move [X22+48], V0
	058 Move [X22+56], V0
	059 Move [X22+16], V0
	060 Move [X22+24], V0
	061 Move [X22], V0
	062 Move X0, [X20+48]
	063 Move W2, [X20+40]
	064 Move X3, [X21]
	065 Move X1, X23
	066 Call 0x217AB8C, X0, X1, X2
	067 Compare X19, 0
	068 JumpIfEqual {318}
	069 Move W21, W0
	070 Move TEMP, X0
	071 And TEMP, TEMP, -2147483648
	072 Compare TEMP, -2147483648
	073 JumpIfEqual {318}
	074 Move W22, [X19]
	075 Move W8, 0x4154
	076 NotImplemented "Instruction MOVK not yet implemented."
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Move W8, 0x5441
	079 NotImplemented "Instruction MOVK not yet implemented."
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Move X8, [X20+48]
	082 Compare X8, 0
	083 JumpIfEqual {186}
	084 Move W9, [X8+24]
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move W26, W21
	087 Add X8, X8, X26
	088 Move X27, [X8+32]
	089 Compare X27, 0
	090 JumpIfEqual {186}
	091 Move X25, [X27+368]
	092 Move X1, X19
	093 Move X2, X22
	094 Move X3, X31
	095 Move X0, X25
	096 Call InputControlExtensions.GetStatePtrFromStateEventUnchecked, X0, X1, X2
	097 Move X24, X0
	098 Compare X0, 0
	099 JumpIfEqual {116}
	100 Compare X25, 0
	101 JumpIfEqual {186}
	102 Move X8, 0x94E000
	103 Move X28, [X20+56]
	104 Move X8, [X8+3480]
	105 Move X0, X25
	106 Move X1, X24
	107 Move X2, [X8]
	108 Call InputControl`1<Vector2>.ReadValueFromState, X0, X1
	109 Compare X28, 0
	110 JumpIfEqual {186}
	111 Move W8, [X28+24]
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Add X8, X28, X26
	114 Move [X8+32], S0
	115 Move [X8+40], S1
	116 Move X25, [X27+408]
	117 Move X1, X19
	118 Move X2, X22
	119 Move X3, X31
	120 Move X0, X25
	121 Call InputControlExtensions.GetStatePtrFromStateEventUnchecked, X0, X1, X2
	122 Compare X0, 0
	123 JumpIfEqual {139}
	124 Compare X25, 0
	125 JumpIfEqual {186}
	126 Move X8, 0x94E000
	127 Move X27, [X20+64]
	128 Move X8, [X8+3472]
	129 Move X1, X0
	130 Move X0, X25
	131 Move X2, [X8]
	132 Call InputControl`1<Int32>.ReadValueFromState, X0, X1
	133 Compare X27, 0
	134 JumpIfEqual {186}
	135 Move W8, [X27+24]
	136 NotImplemented "Instruction CMP not yet implemented."
	137 Add X8, X27, X26
	138 Move [X8+32], W0
	139 Move X8, [X20+72]
	140 Compare X8, 0
	141 JumpIfEqual {186}
	142 Move X28, 0x94A000
	143 Move X27, 0x920000
	144 Move X28, [X28+3976]
	145 Move X27, [X27+3216]
	146 Move X25, X31
	147 Move W9, [X8+24]
	148 NotImplemented "Instruction CMP not yet implemented."
	149 NotImplemented "Instruction CMP not yet implemented."
	150 Add X8, X8, X25
	151 Move X26, [X8+32]
	152 Compare X26, 0
	153 JumpIfEqual {182}
	154 Move X8, [X26+120]
	155 NotImplemented "Instruction CMP not yet implemented."
	156 Move X0, X26
	157 Move X1, X19
	158 Move X2, X22
	159 Move X3, X31
	160 Call InputControlExtensions.GetStatePtrFromStateEventUnchecked, X0, X1, X2
	161 Compare X0, 0
	162 JumpIfEqual {174}
	163 Move X2, [X28]
	164 Move X1, X0
	165 Move X0, X26
	166 Call InputControl`1<Single>.ReadValueFromState, X0, X1
	167 Move X8, [X27]
	168 Move X8, [X8+184]
	169 Move S1, [X8]
	170 Move S2, [X8+4]
	171 Multiply S1, S1, S2
	172 NotImplemented "Instruction FCMP not yet implemented."
	173 Move W3, 3
	174 Compare X24, 0
	175 JumpIfEqual {182}
	176 Move W3, 2
	177 Move X0, X20
	178 Move W1, W25
	179 Move W2, W21
	180 Move X4, X19
	181 Call TouchSimulation.UpdateTouch, X0, X1, X2, X3, X4
	182 Move X8, [X20+72]
	183 Add X25, X25, 1
	184 Compare X8, 0
	185 JumpIfNotEqual {147}
	186 Call 0x1C17F20
	187 Add X8, X31, 8
	188 Move S0, W31
	189 Move W1, 1
	190 Move X0, X19
	191 Move X2, X23
	192 Move X3, X31
	193 Call InputControlExtensions.EnumerateControls, X0, X1, X2, V0
	194 Move X8, [X31+24]
	195 NotImplemented "Instruction LDUR not yet implemented."
	196 Add X0, X31, 128
	197 Move X1, X31
	198 Move [X31+144], X8
	199 Add X8, X31, 8
	200 Move [X31+8], V0
	201 Call InputEventControlCollection.GetEnumerator, X0
	202 Add X0, X31, 160
	203 Add X1, X31, 8
	204 Move W2, 112
	205 Call 0x3EB2AC0
	206 Move X25, 0x94E000
	207 Move X26, 0x94E000
	208 Move X25, [X25+3464]
	209 Move X26, [X26+3456]
	210 Add X0, X31, 160
	211 Move X1, X31
	212 Call InputEventControlEnumerator.MoveNext, X0
	213 Move TEMP, X0
	214 And TEMP, TEMP, 1
	215 Compare TEMP, 1
	216 JumpIfNotEqual {312}
	217 Move X23, [X31+232]
	218 Compare X23, 0
	219 JumpIfEqual {333}
	220 Move X0, X23
	221 Move X1, X31
	222 Call InputControl.get_isButton, X0
	223 Move TEMP, X0
	224 And TEMP, TEMP, 1
	225 Compare TEMP, 1
	226 JumpIfNotEqual {210}
	227 Move X0, X23
	228 Move X1, X19
	229 Move X2, X22
	230 Move X3, X31
	231 Call InputControlExtensions.GetStatePtrFromStateEventUnchecked, X0, X1, X2
	232 Move X1, X0
	233 Move [X31+124], W31
	234 Move X8, [X23]
	235 Move X9, [X8+456]
	236 Move X4, [X8+464]
	237 Add X2, X31, 124
	238 Move W3, 4
	239 Move X0, X23
	240 NotImplemented "Instruction BLR not yet implemented."
	241 Move X8, [X27]
	242 Move V0, [X31+124]
	243 Move X8, [X8+184]
	244 Move V1, [X8]
	245 NotImplemented "Instruction FCMP not yet implemented."
	246 Move X0, [X20+72]
	247 Move X3, [X25]
	248 Move TEMP, 0
	249 Not TEMP
	250 Move W2, TEMP
	251 Move X1, X23
	252 Call 0x217AB8C, X0, X1, X2
	253 Move W1, W0
	254 Move TEMP, X1
	255 And TEMP, TEMP, -2147483648
	256 Compare TEMP, -2147483648
	257 JumpIfEqual {263}
	258 Move W3, 2
	259 Move X0, X20
	260 Move W2, W21
	261 Move X4, X19
	262 Call TouchSimulation.UpdateTouch, X0, X1, X2, X3, X4
	263 Move X0, [X20+72]
	264 Move X3, [X26]
	265 Move TEMP, 0
	266 Not TEMP
	267 Move W2, TEMP
	268 Move X1, X31
	269 Call 0x217AB8C, X0, X1, X2
	270 Move W24, W0
	271 Move TEMP, X0
	272 And TEMP, TEMP, -2147483648
	273 Compare TEMP, -2147483648
	274 JumpIfEqual {210}
	275 Move X28, [X20+72]
	276 Compare X28, 0
	277 JumpIfEqual {342}
	278 Move X8, [X23]
	279 Move X1, [X27]
	280 Move W10, [X8+304]
	281 Move W9, [X1+304]
	282 NotImplemented "Instruction CMP not yet implemented."
	283 Move X8, [X8+200]
	284 Add X8, X8, X9
	285 NotImplemented "Instruction LDUR not yet implemented."
	286 NotImplemented "Instruction CMP not yet implemented."
	287 Move X8, [X28]
	288 Move X1, [X8+64]
	289 Move X0, X23
	290 Call 0x1C17E00
	291 Compare X0, 0
	292 JumpIfEqual {339}
	293 Move X8, [X23]
	294 Move X1, [X27]
	295 Move W10, [X8+304]
	296 Move W9, [X1+304]
	297 NotImplemented "Instruction CMP not yet implemented."
	298 Move X8, [X8+200]
	299 Add X8, X8, X9
	300 NotImplemented "Instruction LDUR not yet implemented."
	301 NotImplemented "Instruction CMP not yet implemented."
	302 Move W8, [X28+24]
	303 NotImplemented "Instruction CMP not yet implemented."
	304 Add X8, X28, W24
	305 Move [X8+32], X23
	306 Move W3, 1
	307 Move X0, X20
	308 Move W1, W24
	309 Move W2, W21
	310 Move X4, X19
	311 Call TouchSimulation.UpdateTouch, X0, X1, X2, X3, X4
	312 Add X0, X31, 160
	313 Move X1, X31
	314 Call InputEventControlEnumerator.Dispose, X0
	315 Add X0, X31, 280
	316 Move W1, 1
	317 Call InputEventPtr.set_handled, X0, X1
	318 Move X20, [X31+368]
	319 Move X19, [X31+376]
	320 Move X22, [X31+352]
	321 Move X21, [X31+360]
	322 Move X24, [X31+336]
	323 Move X23, [X31+344]
	324 Move X26, [X31+320]
	325 Move X25, [X31+328]
	326 Move X28, [X31+304]
	327 Move X27, [X31+312]
	328 Move X29, [X31+288]
	329 Move X30, [X31+296]
	330 Add X31, X31, 384
	331 Return 
	332 Call 0x1C17F28
	333 Call 0x1C17F20
	334 Move X0, X23
	335 Call 0x1C181E0
	336 Move X0, X23
	337 Call 0x1C181E0
	338 Call 0x1C17F28
	339 Call 0x1C17F44
	340 Move X1, X31
	341 Call 0x1C17DEC
	342 Call 0x1C17F20
	343 Move X19, X0
	344 NotImplemented "Instruction CMP not yet implemented."
	345 Move X0, X19
	346 Call 0x3EB2AD0
	347 Move X20, [X0]
	348 Call 0x3EB2AE0
	349 Add X0, X31, 160
	350 Move X1, X31
	351 Call InputEventControlEnumerator.Dispose, X0
	352 Compare X20, 0
	353 JumpIfEqual {315}
	354 Move X0, X20
	355 Call 0x1C17F18
	356 Move X20, X31
	357 Move X19, X0
	358 Add X0, X31, 160
	359 Move X1, X31
	360 Call InputEventControlEnumerator.Dispose, X0
	361 Compare X20, 0
	362 JumpIfNotEqual {365}
	363 Move X0, X19
	364 Call 0x1D2D690
	365 Move X0, X20
	366 Call 0x1C17F18
	367 Call 0x1991590

Method: System.Void OnDeviceChange(UnityEngine.InputSystem.InputDevice device, UnityEngine.InputSystem.InputDeviceChange change)

Disassembly:
	0x037FCD54 ADRP X0, 0x94D000
	0x037FCD58 LDR X0, [X0 + 0xED0]
	0x037FCD5C BL 0x1C16CF4
	0x037FCD60 MOVZ W8, 0x1
	0x037FCD64 STRB W8, [X20 + 0x3F2]
	0x037FCD68 LDR X0, [X19]
	0x037FCD6C STR X31, [X31 + 0xE8]
	0x037FCD70 ADRP X25, 0x923000
	0x037FCD74 ADRP X27, 0x94D000
	0x037FCD78 ADRP X19, 0x94C000
	0x037FCD7C ADRP X29, 0x91F000
	0x037FCD80 LDR W8, [X0 + 0xE0]
	0x037FCD84 LDR X25, [X25 + 0xE30]
	0x037FCD88 LDR X27, [X27 + 0xEC0]
	0x037FCD8C LDR X19, [X19 + 0xFB0]
	0x037FCD90 LDR X29, [X29 + 0x270]
	0x037FCD94 CBNZ W8, 0x37FCD9C
	0x037FCD98 BL 0x1C16DFC
	0x037FCD9C ADRP X28, 0x94D000
	0x037FCDA0 ADRP X22, 0x94D000
	0x037FCDA4 ADRP X21, 0x94D000
	0x037FCDA8 ADRP X20, 0x94D000
	0x037FCDAC ADRP X26, 0x94D000
	0x037FCDB0 ADRP X23, 0x94D000
	0x037FCDB4 ADRP X24, 0x94D000
	0x037FCDB8 LDR X28, [X28 + 0xE40]
	0x037FCDBC LDR X22, [X22 + 0xE58]
	0x037FCDC0 LDR X21, [X21 + 0xEA0]
	0x037FCDC4 LDR X20, [X20 + 0xEA8]
	0x037FCDC8 LDR X26, [X26 + 0xED0]
	0x037FCDCC LDR X23, [X23 + 0xEC8]
	0x037FCDD0 LDR X24, [X24 + 0xE18]
	0x037FCDD4 LDR X1, [X25]
	0x037FCDD8 ADD X0, X31, 0xE8
	0x037FCDDC MOVZ W2, 0x1
	0x037FCDE0 MOV X3, X31
	0x037FCDE4 BL 0x3755CF8
	0x037FCDE8 LDR X1, [X27]
	0x037FCDEC STR X0, [X31 + 0xE8]
	0x037FCDF0 ADD X0, X31, 0xE8
	0x037FCDF4 MOVZ W2, 0x1
	0x037FCDF8 MOV X3, X31
	0x037FCDFC BL 0x3755F7C
	0x037FCE00 LDR X2, [X19]
	0x037FCE04 MOV X1, X0
	0x037FCE08 ADD X0, X31, 0xD8
	0x037FCE0C STP X31, X31, [X31 + 0xD8]
	0x037FCE10 BL 0x243321C
	0x037FCE14 LDR X0, [X29]
	0x037FCE18 LDR W8, [X0 + 0xE0]
	0x037FCE1C CBNZ W8, 0x37FCE24
	0x037FCE20 BL 0x1C16DFC
	0x037FCE24 LDP X1, X2, [X31 + 0xD8]
	0x037FCE28 LDR X3, [X28]
	0x037FCE2C MOV X0, X31
	0x037FCE30 BL 0x220C738
	0x037FCE34 LDR X1, [X25]
	0x037FCE38 ADD X0, X31, 0xE8
	0x037FCE3C MOVZ W2, 0x1
	0x037FCE40 MOV X3, X31
	0x037FCE44 STR X31, [X31 + 0xE8]
	0x037FCE48 BL 0x3755CF8
	0x037FCE4C LDR X1, [X27]
	0x037FCE50 STR X0, [X31 + 0xE8]
	0x037FCE54 ADD X0, X31, 0xE8
	0x037FCE58 MOVZ W2, 0x1
	0x037FCE5C MOV X3, X31
	0x037FCE60 BL 0x3755F7C
	0x037FCE64 LDR X2, [X19]
	0x037FCE68 MOV X1, X0
	0x037FCE6C ADD X0, X31, 0xC8
	0x037FCE70 STP X31, X31, [X31 + 0xC8]
	0x037FCE74 BL 0x243321C
	0x037FCE78 LDP X1, X2, [X31 + 0xC8]
	0x037FCE7C LDR X3, [X22]
	0x037FCE80 MOV X0, X31
	0x037FCE84 BL 0x220C738
	0x037FCE88 LDR X3, [X21]
	0x037FCE8C MOV X0, X31
	0x037FCE90 MOV X1, X31
	0x037FCE94 MOV X2, X31
	0x037FCE98 BL 0x220C738
	0x037FCE9C LDR X3, [X20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xBE6000
	007 Move W8, [X22+1002]
	008 Move W21, W2
	009 Move X20, X1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x94C000
	016 Move X0, [X0+960]
	017 Call 0x1C17CF4
	018 Move X0, 0x94B000
	019 Move X0, [X0+3416]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+1002], W8
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move X8, [X19+32]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X20, [X31+32]
	027 Move X19, [X31+40]
	028 Move X22, [X31+16]
	029 Move X21, [X31+24]
	030 Move X30, [X31+48]
	031 Call TouchSimulation.Disable
	032 Return 
	033 Compare W21, 0
	034 JumpIfEqual {58}
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Compare X20, 0
	037 JumpIfEqual {90}
	038 Move X8, 0x94C000
	039 Move X8, [X8+960]
	040 Move X9, [X20]
	041 Move X8, [X8]
	042 Move W11, [X9+304]
	043 Move W10, [X8+304]
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move X9, [X9+200]
	046 Add X9, X9, X10
	047 NotImplemented "Instruction LDUR not yet implemented."
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X0, X19
	050 Move X1, X20
	051 Move X20, [X31+32]
	052 Move X19, [X31+40]
	053 Move X22, [X31+16]
	054 Move X21, [X31+24]
	055 Move X30, [X31+48]
	056 Call TouchSimulation.RemovePointer, X0, X1
	057 Return 
	058 Compare X20, 0
	059 JumpIfEqual {90}
	060 Move X8, 0x94C000
	061 Move X8, [X8+960]
	062 Move X9, [X20]
	063 Move X10, [X8]
	064 Move W8, [X9+304]
	065 Move W11, [X10+304]
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move X9, [X9+200]
	068 Add X11, X9, X11
	069 NotImplemented "Instruction LDUR not yet implemented."
	070 NotImplemented "Instruction CMP not yet implemented."
	071 NotImplemented "Instruction CSEL not yet implemented."
	072 Compare X1, 0
	073 JumpIfEqual {90}
	074 Move X10, 0x94B000
	075 Move X10, [X10+3416]
	076 Move X10, [X10]
	077 Move W11, [X10+304]
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Add X8, X9, X11
	080 NotImplemented "Instruction LDUR not yet implemented."
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Move X0, X19
	083 Move X20, [X31+32]
	084 Move X19, [X31+40]
	085 Move X22, [X31+16]
	086 Move X21, [X31+24]
	087 Move X30, [X31+48]
	088 Call TouchSimulation.AddPointer, X0, X1
	089 Return 
	090 Move X20, [X31+32]
	091 Move X19, [X31+40]
	092 Move X22, [X31+16]
	093 Move X21, [X31+24]
	094 Move X30, [X31+48]
	095 Return 

Method: System.Void OnEnable()

Disassembly:
	0x037FCEA0 MOV X0, X31
	0x037FCEA4 MOV X1, X31
	0x037FCEA8 MOV X2, X31
	0x037FCEAC BL 0x220C738
	0x037FCEB0 ADRP X8, 0x94D000
	0x037FCEB4 LDR X8, [X8 + 0xE30]
	0x037FCEB8 MOV X0, X31
	0x037FCEBC MOV X1, X31
	0x037FCEC0 MOV X2, X31
	0x037FCEC4 LDR X3, [X8]
	0x037FCEC8 BL 0x220C738
	0x037FCECC ADRP X8, 0x94D000
	0x037FCED0 LDR X8, [X8 + 0xE38]
	0x037FCED4 MOV X0, X31
	0x037FCED8 MOV X1, X31
	0x037FCEDC MOV X2, X31
	0x037FCEE0 LDR X3, [X8]
	0x037FCEE4 BL 0x220C738
	0x037FCEE8 ADRP X8, 0x94D000
	0x037FCEEC LDR X8, [X8 + 0xEB0]
	0x037FCEF0 MOV X0, X31
	0x037FCEF4 LDR X1, [X8]
	0x037FCEF8 BL 0x220C920
	0x037FCEFC ADRP X8, 0x94D000
	0x037FCF00 LDR X8, [X8 + 0xEB8]
	0x037FCF04 MOV X0, X31
	0x037FCF08 LDR X1, [X8]
	0x037FCF0C BL 0x220C920
	0x037FCF10 LDR X1, [X25]
	0x037FCF14 ADD X0, X31, 0xE8
	0x037FCF18 MOVZ W2, 0x1
	0x037FCF1C MOV X3, X31
	0x037FCF20 STR X31, [X31 + 0xE8]
	0x037FCF24 BL 0x3755CF8
	0x037FCF28 LDR X1, [X26]
	0x037FCF2C STR X0, [X31 + 0xE8]
	0x037FCF30 ADD X0, X31, 0xE8
	0x037FCF34 MOVZ W2, 0x1
	0x037FCF38 MOV X3, X31
	0x037FCF3C BL 0x3755F7C
	0x037FCF40 LDR X1, [X23]
	0x037FCF44 LDR X3, [X24]
	0x037FCF48 STR X0, [X31 + 0xE8]
	0x037FCF4C ADD X0, X31, 0xE8
	0x037FCF50 MOVZ W2, 0x1
	0x037FCF54 BL 0x2207CC0
	0x037FCF58 LDR X2, [X19]
	0x037FCF5C MOV X1, X0
	0x037FCF60 ADD X0, X31, 0xB8
	0x037FCF64 STP X31, X31, [X31 + 0xB8]
	0x037FCF68 BL 0x243321C
	0x037FCF6C ADRP X8, 0x94D000
	0x037FCF70 LDP X1, X2, [X31 + 0xB8]
	0x037FCF74 LDR X8, [X8 + 0xE20]
	0x037FCF78 MOV X0, X31
	0x037FCF7C LDR X3, [X8]
	0x037FCF80 BL 0x220C738
	0x037FCF84 LDR X1, [X25]
	0x037FCF88 ADD X0, X31, 0xE8
	0x037FCF8C MOVZ W2, 0x1
	0x037FCF90 MOV X3, X31
	0x037FCF94 STR X31, [X31 + 0xE8]
	0x037FCF98 BL 0x3755CF8
	0x037FCF9C LDR X1, [X26]
	0x037FCFA0 STR X0, [X31 + 0xE8]
	0x037FCFA4 ADD X0, X31, 0xE8
	0x037FCFA8 MOVZ W2, 0x1
	0x037FCFAC MOV X3, X31
	0x037FCFB0 BL 0x3755F7C
	0x037FCFB4 LDR X1, [X23]
	0x037FCFB8 LDR X3, [X24]
	0x037FCFBC STR X0, [X31 + 0xE8]
	0x037FCFC0 ADD X0, X31, 0xE8
	0x037FCFC4 MOVZ W2, 0x2
	0x037FCFC8 BL 0x2207CC0
	0x037FCFCC LDR X2, [X19]
	0x037FCFD0 MOV X1, X0
	0x037FCFD4 ADD X0, X31, 0xA8
	0x037FCFD8 STP X31, X31, [X31 + 0xA8]
	0x037FCFDC BL 0x243321C
	0x037FCFE0 ADRP X8, 0x94D000
	0x037FCFE4 LDP X1, X2, [X31 + 0xA8]
	0x037FCFE8 LDR X8, [X8 + 0xE70]
	0x037FCFEC MOV X0, X31
	0x037FCFF0 LDR X3, [X8]
	0x037FCFF4 BL 0x220C738
	0x037FCFF8 LDR X1, [X25]
	0x037FCFFC ADD X0, X31, 0xE8
	0x037FD000 MOVZ W2, 0x1
	0x037FD004 MOV X3, X31
	0x037FD008 STR X31, [X31 + 0xE8]
	0x037FD00C BL 0x3755CF8
	0x037FD010 LDR X1, [X26]
	0x037FD014 STR X0, [X31 + 0xE8]
	0x037FD018 ADD X0, X31, 0xE8
	0x037FD01C MOVZ W2, 0x1
	0x037FD020 MOV X3, X31
	0x037FD024 BL 0x3755F7C
	0x037FD028 LDR X1, [X23]
	0x037FD02C LDR X3, [X24]
	0x037FD030 STR X0, [X31 + 0xE8]
	0x037FD034 ADD X0, X31, 0xE8
	0x037FD038 MOVZ W2, 0x4
	0x037FD03C BL 0x2207CC0
	0x037FD040 LDR X2, [X19]
	0x037FD044 MOV X1, X0
	0x037FD048 ADD X0, X31, 0x98
	0x037FD04C STP X31, X31, [X31 + 0x98]
	0x037FD050 BL 0x243321C
	0x037FD054 ADRP X8, 0x94C000
	0x037FD058 LDP X1, X2, [X31 + 0x98]
	0x037FD05C LDR X8, [X8 + 0xE50]
	0x037FD060 MOV X0, X31
	0x037FD064 LDR X3, [X8]
	0x037FD068 BL 0x220C738
	0x037FD06C LDR X1, [X25]
	0x037FD070 ADD X0, X31, 0xE8
	0x037FD074 MOVZ W2, 0x1
	0x037FD078 MOV X3, X31
	0x037FD07C STR X31, [X31 + 0xE8]
	0x037FD080 BL 0x3755CF8
	0x037FD084 LDR X1, [X26]
	0x037FD088 STR X0, [X31 + 0xE8]
	0x037FD08C ADD X0, X31, 0xE8
	0x037FD090 MOVZ W2, 0x1
	0x037FD094 MOV X3, X31
	0x037FD098 BL 0x3755F7C
	0x037FD09C LDR X1, [X23]
	0x037FD0A0 LDR X3, [X24]
	0x037FD0A4 STR X0, [X31 + 0xE8]
	0x037FD0A8 ADD X0, X31, 0xE8
	0x037FD0AC MOVZ W2, 0x5
	0x037FD0B0 BL 0x2207CC0
	0x037FD0B4 LDR X2, [X19]
	0x037FD0B8 MOV X1, X0
	0x037FD0BC ADD X0, X31, 0x88
	0x037FD0C0 STP X31, X31, [X31 + 0x88]
	0x037FD0C4 BL 0x243321C
	0x037FD0C8 ADRP X8, 0x94C000
	0x037FD0CC LDP X1, X2, [X31 + 0x88]
	0x037FD0D0 LDR X8, [X8 + 0xE60]
	0x037FD0D4 MOV X0, X31
	0x037FD0D8 LDR X3, [X8]
	0x037FD0DC BL 0x220C738
	0x037FD0E0 LDR X1, [X25]
	0x037FD0E4 ADD X0, X31, 0xE8
	0x037FD0E8 MOVZ W2, 0x1
	0x037FD0EC MOV X3, X31
	0x037FD0F0 STR X31, [X31 + 0xE8]
	0x037FD0F4 BL 0x3755CF8
	0x037FD0F8 LDR X1, [X26]
	0x037FD0FC STR X0, [X31 + 0xE8]
	0x037FD100 ADD X0, X31, 0xE8
	0x037FD104 MOVZ W2, 0x1
	0x037FD108 MOV X3, X31
	0x037FD10C BL 0x3755F7C
	0x037FD110 LDR X1, [X23]
	0x037FD114 LDR X3, [X24]
	0x037FD118 STR X0, [X31 + 0xE8]
	0x037FD11C ADD X0, X31, 0xE8
	0x037FD120 MOVZ W2, 0x6
	0x037FD124 BL 0x2207CC0
	0x037FD128 LDR X2, [X19]
	0x037FD12C MOV X1, X0
	0x037FD130 ADD X0, X31, 0x78
	0x037FD134 STP X31, X31, [X31 + 0x78]
	0x037FD138 BL 0x243321C
	0x037FD13C ADRP X8, 0x94C000
	0x037FD140 LDP X1, X2, [X31 + 0x78]
	0x037FD144 LDR X8, [X8 + 0xE78]
	0x037FD148 MOV X0, X31
	0x037FD14C LDR X3, [X8]
	0x037FD150 BL 0x220C738
	0x037FD154 LDR X1, [X25]
	0x037FD158 ADD X0, X31, 0xE8
	0x037FD15C MOVZ W2, 0x1
	0x037FD160 MOV X3, X31
	0x037FD164 STR X31, [X31 + 0xE8]
	0x037FD168 BL 0x3755CF8
	0x037FD16C LDR X1, [X26]
	0x037FD170 STR X0, [X31 + 0xE8]
	0x037FD174 ADD X0, X31, 0xE8
	0x037FD178 MOVZ W2, 0x1
	0x037FD17C MOV X3, X31
	0x037FD180 BL 0x3755F7C
	0x037FD184 LDR X1, [X23]
	0x037FD188 LDR X3, [X24]
	0x037FD18C STR X0, [X31 + 0xE8]
	0x037FD190 ADD X0, X31, 0xE8
	0x037FD194 MOVZ W2, 0x8
	0x037FD198 BL 0x2207CC0
	0x037FD19C LDR X2, [X19]
	0x037FD1A0 MOV X1, X0
	0x037FD1A4 ADD X0, X31, 0x68
	0x037FD1A8 STP X31, X31, [X31 + 0x68]
	0x037FD1AC BL 0x243321C
	0x037FD1B0 ADRP X8, 0x94C000
	0x037FD1B4 LDP X1, X2, [X31 + 0x68]
	0x037FD1B8 LDR X8, [X8 + 0xE80]
	0x037FD1BC MOV X0, X31
	0x037FD1C0 LDR X3, [X8]
	0x037FD1C4 BL 0x220C738
	0x037FD1C8 LDR X1, [X25]
	0x037FD1CC ADD X0, X31, 0xE8
	0x037FD1D0 MOVZ W2, 0x1
	0x037FD1D4 MOV X3, X31
	0x037FD1D8 STR X31, [X31 + 0xE8]
	0x037FD1DC BL 0x3755CF8
	0x037FD1E0 LDR X1, [X26]
	0x037FD1E4 STR X0, [X31 + 0xE8]
	0x037FD1E8 ADD X0, X31, 0xE8
	0x037FD1EC MOVZ W2, 0x1
	0x037FD1F0 MOV X3, X31
	0x037FD1F4 BL 0x3755F7C
	0x037FD1F8 LDR X1, [X23]
	0x037FD1FC LDR X3, [X24]
	0x037FD200 STR X0, [X31 + 0xE8]
	0x037FD204 ADD X0, X31, 0xE8
	0x037FD208 MOVZ W2, 0x9
	0x037FD20C BL 0x2207CC0
	0x037FD210 LDR X2, [X19]
	0x037FD214 MOV X1, X0
	0x037FD218 ADD X0, X31, 0x58
	0x037FD21C STP X31, X31, [X31 + 0x58]
	0x037FD220 BL 0x243321C
	0x037FD224 ADRP X8, 0x94C000
	0x037FD228 LDP X1, X2, [X31 + 0x58]
	0x037FD22C LDR X8, [X8 + 0xE48]
	0x037FD230 MOV X0, X31

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+48], X30
	003 Move [X31+64], X24
	004 Move [X31+72], X23
	005 Move [X31+80], X22
	006 Move [X31+88], X21
	007 Move [X31+96], X20
	008 Move [X31+104], X19
	009 Move X20, 0xBE6000
	010 Move W8, [X20+1003]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {60}
	016 Move X0, 0x94A000
	017 Move X0, [X0+1784]
	018 Call 0x1C17CF4
	019 Move X0, 0x94C000
	020 Move X0, [X0+2952]
	021 Call 0x1C17CF4
	022 Move X0, 0x94E000
	023 Move X0, [X0+3504]
	024 Call 0x1C17CF4
	025 Move X0, 0x920000
	026 Move X0, [X0+3856]
	027 Call 0x1C17CF4
	028 Move X0, 0x920000
	029 Move X0, [X0+3864]
	030 Call 0x1C17CF4
	031 Move X0, 0x920000
	032 Move X0, [X0+3872]
	033 Call 0x1C17CF4
	034 Move X0, 0x94E000
	035 Move X0, [X0+3512]
	036 Call 0x1C17CF4
	037 Move X0, 0x920000
	038 Move X0, [X0+624]
	039 Call 0x1C17CF4
	040 Move X0, 0x920000
	041 Move X0, [X0+3888]
	042 Call 0x1C17CF4
	043 Move X0, 0x94C000
	044 Move X0, [X0+4024]
	045 Call 0x1C17CF4
	046 Move X0, 0x94E000
	047 Move X0, [X0+3520]
	048 Call 0x1C17CF4
	049 Move X0, 0x94E000
	050 Move X0, [X0+3528]
	051 Call 0x1C17CF4
	052 Move X0, 0x94B000
	053 Move X0, [X0+3416]
	054 Call 0x1C17CF4
	055 Move X0, 0x94E000
	056 Move X0, [X0+3536]
	057 Call 0x1C17CF4
	058 Move W8, 1
	059 Move [X20+1003], W8
	060 Move [X31+24], X31
	061 Move [X31+32], X31
	062 Move [X31+40], X31
	063 Move [X31+8], X31
	064 Move [X31+16], X31
	065 Move X22, 0x920000
	066 Move X0, [X19+32]
	067 Move X22, [X22+624]
	068 Compare X0, 0
	069 JumpIfEqual {85}
	070 Move X1, X31
	071 Call InputDevice.get_added, X0
	072 Move TEMP, X0
	073 And TEMP, TEMP, 1
	074 Compare TEMP, 1
	075 JumpIfEqual {120}
	076 Move X0, [X22]
	077 Move X20, [X19+32]
	078 Move W8, [X0+224]
	079 Compare W8, 0
	080 JumpIfNotEqual {82}
	081 Call 0x1C17DFC
	082 Move X0, X20
	083 Move X1, X31
	084 Call InputSystem.AddDevice, X0
	085 Move X0, [X22]
	086 Move W8, [X0+224]
	087 Compare W8, 0
	088 JumpIfNotEqual {90}
	089 Call 0x1C17DFC
	090 Move X20, 0x94E000
	091 Move X20, [X20+3536]
	092 Move X1, X31
	093 Move X0, [X20]
	094 Call InputSystem.GetDevice, X0
	095 Compare X0, 0
	096 JumpIfEqual {108}
	097 Move X8, 0x94B000
	098 Move X8, [X8+3416]
	099 Move X9, [X0]
	100 Move X8, [X8]
	101 Move W11, [X9+304]
	102 Move W10, [X8+304]
	103 NotImplemented "Instruction CMP not yet implemented."
	104 Move X9, [X9+200]
	105 Add X9, X9, X10
	106 NotImplemented "Instruction LDUR not yet implemented."
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Move [X19+32], X31
	109 Move X0, [X22]
	110 Move W8, [X0+224]
	111 Compare W8, 0
	112 JumpIfNotEqual {114}
	113 Call 0x1C17DFC
	114 Move X8, 0x94D000
	115 Move X0, [X20]
	116 Move X8, [X8+3512]
	117 Move X1, [X8]
	118 Call 0x220C300, X0
	119 Move [X19+32], X0
	120 Move X8, [X19+72]
	121 Compare X8, 0
	122 JumpIfNotEqual {132}
	123 Move X8, [X19+32]
	124 Compare X8, 0
	125 JumpIfEqual {226}
	126 Move W1, [X8+436]
	127 Move X8, 0x94D000
	128 Move X8, [X8+3504]
	129 Move X0, [X8]
	130 Call 0x1C17D6C
	131 Move [X19+72], X0
	132 Move X0, [X22]
	133 Move X24, 0x91F000
	134 Move W8, [X0+224]
	135 Move X24, [X24+3888]
	136 Compare W8, 0
	137 JumpIfNotEqual {139}
	138 Call 0x1C17DFC
	139 Move X21, 0x91F000
	140 Move X23, 0x91F000
	141 Move X20, 0x91F000
	142 Move X21, [X21+3864]
	143 Move X23, [X23+3872]
	144 Move X20, [X20+3856]
	145 Move X0, X31
	146 Call InputSystem.get_devices
	147 Move X9, [X24]
	148 Move [X31+8], X0
	149 Move [X31+16], X1
	150 Add X8, X31, 24
	151 Add X0, X31, 8
	152 Move X1, X9
	153 Call ReadOnlyArray`1<Object>.GetEnumerator, X0
	154 Move X1, [X21]
	155 Add X0, X31, 24
	156 Call Enumerator<Object>.MoveNext, X0
	157 Move TEMP, X0
	158 And TEMP, TEMP, 1
	159 Compare TEMP, 1
	160 JumpIfNotEqual {168}
	161 Move X1, [X23]
	162 Add X0, X31, 24
	163 Call Enumerator<Object>.get_Current, X0
	164 Move X1, X0
	165 Move X0, X19
	166 Move W2, W31
	167 Call TouchSimulation.OnDeviceChange, X0, X1, X2
	168 Move X1, [X20]
	169 Add X0, X31, 24
	170 Call Enumerator<Object>.Dispose, X0
	171 Move X20, [X19+88]
	172 Compare X20, 0
	173 JumpIfNotEqual {186}
	174 Move X8, 0x94B000
	175 Move X8, [X8+2952]
	176 Move X0, [X8]
	177 Call 0x1C17F10
	178 Move X8, 0x94D000
	179 Move X8, [X8+3520]
	180 Move X1, X19
	181 Move X3, X31
	182 Move X20, X0
	183 Move X2, [X8]
	184 Call Action`2<Object, Int32Enum>..ctor, X0, X1, X2
	185 Move [X19+88], X20
	186 Move X8, [X19+96]
	187 Compare X8, 0
	188 JumpIfNotEqual {202}
	189 Move X8, 0x949000
	190 Move X8, [X8+1784]
	191 Move X0, [X8]
	192 Call 0x1C17F10
	193 Move X8, 0x94D000
	194 Move X8, [X8+3528]
	195 Move X1, X19
	196 Move X3, X31
	197 Move X21, X0
	198 Move X2, [X8]
	199 Call Action`2<InputEventPtr, Object>..ctor, X0, X1, X2
	200 Move X20, [X19+88]
	201 Move [X19+96], X21
	202 Move X0, [X22]
	203 Move W8, [X0+224]
	204 Compare W8, 0
	205 JumpIfNotEqual {207}
	206 Call 0x1C17DFC
	207 Move X0, X20
	208 Move X1, X31
	209 Call InputSystem.add_onDeviceChange, X0
	210 Move X0, X31
	211 Call InputSystem.get_onEvent
	212 Move X1, [X19+96]
	213 Call InputEventListener.op_Addition, X0, X1
	214 And X0, X0, 255
	215 Move X1, X31
	216 Call InputSystem.set_onEvent, X0
	217 Move X20, [X31+96]
	218 Move X19, [X31+104]
	219 Move X22, [X31+80]
	220 Move X21, [X31+88]
	221 Move X24, [X31+64]
	222 Move X23, [X31+72]
	223 Move X30, [X31+48]
	224 Add X31, X31, 112
	225 Return 
	226 Call 0x1C17F20
	227 Move X23, X20
	228 Move X20, X0
	229 NotImplemented "Instruction CMP not yet implemented."
	230 Move X0, X20
	231 Call 0x3EB2AD0
	232 Move X21, [X0]
	233 Call 0x3EB2AE0
	234 Move X1, [X23]
	235 Add X0, X31, 24
	236 Call Enumerator<Object>.Dispose, X0
	237 Compare X21, 0
	238 JumpIfEqual {171}
	239 Move X0, X21
	240 Call 0x1C17F18
	241 Move X21, X31
	242 Move X20, X0
	243 Move X1, [X23]
	244 Add X0, X31, 24
	245 Call Enumerator<Object>.Dispose, X0
	246 Compare X21, 0
	247 JumpIfNotEqual {250}
	248 Move X0, X20
	249 Call 0x1D2D690
	250 Move X0, X21
	251 Call 0x1C17F18
	252 Call 0x1991590

Method: System.Void OnDisable()

Disassembly:
	0x037FD3AC BL 0x3755CF8
	0x037FD3B0 LDR X1, [X26]
	0x037FD3B4 STR X0, [X31 + 0xE8]
	0x037FD3B8 ADD X0, X31, 0xE8
	0x037FD3BC MOVZ W2, 0x1
	0x037FD3C0 MOV X3, X31
	0x037FD3C4 BL 0x3755F7C
	0x037FD3C8 LDR X1, [X23]
	0x037FD3CC LDR X3, [X24]
	0x037FD3D0 STR X0, [X31 + 0xE8]
	0x037FD3D4 ADD X0, X31, 0xE8
	0x037FD3D8 MOVZ W2, 0xD
	0x037FD3DC BL 0x2207CC0
	0x037FD3E0 LDR X2, [X19]
	0x037FD3E4 MOV X1, X0
	0x037FD3E8 ADD X0, X31, 0x18
	0x037FD3EC STP X31, X31, [X31 + 0x18]
	0x037FD3F0 BL 0x243321C
	0x037FD3F4 ADRP X8, 0x94C000
	0x037FD3F8 LDP X1, X2, [X31 + 0x18]
	0x037FD3FC LDR X8, [X8 + 0xE28]
	0x037FD400 MOV X0, X31
	0x037FD404 LDR X3, [X8]
	0x037FD408 BL 0x220C738
	0x037FD40C LDR X1, [X25]
	0x037FD410 ADD X0, X31, 0xE8
	0x037FD414 MOVZ W2, 0x1
	0x037FD418 MOV X3, X31
	0x037FD41C STR X31, [X31 + 0xE8]
	0x037FD420 BL 0x3755CF8
	0x037FD424 LDR X1, [X26]
	0x037FD428 STR X0, [X31 + 0xE8]
	0x037FD42C ADD X0, X31, 0xE8
	0x037FD430 MOVZ W2, 0x1
	0x037FD434 MOV X3, X31
	0x037FD438 BL 0x3755F7C
	0x037FD43C LDR X1, [X23]
	0x037FD440 LDR X3, [X24]
	0x037FD444 STR X0, [X31 + 0xE8]
	0x037FD448 ADD X0, X31, 0xE8
	0x037FD44C MOVZ W2, 0x13
	0x037FD450 BL 0x2207CC0
	0x037FD454 LDR X2, [X19]
	0x037FD458 MOV X1, X0
	0x037FD45C ADD X0, X31, 0x8
	0x037FD460 STP X31, X31, [X31 + 0x8]
	0x037FD464 BL 0x243321C
	0x037FD468 ADRP X8, 0x94C000
	0x037FD46C LDP X1, X2, [X31 + 0x8]
	0x037FD470 LDR X8, [X8 + 0xE98]
	0x037FD474 MOV X0, X31
	0x037FD478 LDR X3, [X8]
	0x037FD47C BL 0x220C738
	0x037FD480 ADRP X8, 0x94B000
	0x037FD484 LDR X8, [X8 + 0xF20]
	0x037FD488 LDR X0, [X8]
	0x037FD48C BL 0x1C16F10
	0x037FD490 ADRP X8, 0x94C000
	0x037FD494 LDR X8, [X8 + 0xE10]
	0x037FD498 MOV X1, X31
	0x037FD49C MOV X3, X31
	0x037FD4A0 MOV X19, X0
	0x037FD4A4 LDR X2, [X8]
	0x037FD4A8 BL 0x3810A78
	0x037FD4AC MOV X0, X19
	0x037FD4B0 MOV X1, X31
	0x037FD4B4 BL 0x376E1A4
	0x037FD4B8 LDP X20, X19, [X31 + 0x140]
	0x037FD4BC LDP X22, X21, [X31 + 0x130]
	0x037FD4C0 LDP X24, X23, [X31 + 0x120]
	0x037FD4C4 LDP X26, X25, [X31 + 0x110]
	0x037FD4C8 LDP X28, X27, [X31 + 0x100]
	0x037FD4CC LDP X29, X30, [X31 + 0xF0]
	0x037FD4D0 ADD X31, X31, 0x150
	0x037FD4D4 RET
	0x037FD4D8 SUB X31, X31, 0x50
	0x037FD4DC STP X30, X21, [X31 + 0x30]
	0x037FD4E0 STP X20, X19, [X31 + 0x40]
	0x037FD4E4 ADRP X21, 0xBE4000
	0x037FD4E8 LDRB W8, [X21 + 0x3F3]
	0x037FD4EC MOV X20, X1
	0x037FD4F0 MOV X19, X0
	0x037FD4F4 TBNZ X8, 0x0, 0x37FD56C
	0x037FD4F8 ADRP X0, 0x94C000
	0x037FD4FC LDR X0, [X0 + 0xED8]
	0x037FD500 BL 0x1C16CF4
	0x037FD504 ADRP X0, 0x94C000
	0x037FD508 LDR X0, [X0 + 0xEE0]
	0x037FD50C BL 0x1C16CF4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xBE5000
	007 Move W8, [X20+1004]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {24}
	013 Move X0, 0x94D000
	014 Move X0, [X0+3552]
	015 Call 0x1C17CF4
	016 Move X0, 0x94D000
	017 Move X0, [X0+3560]
	018 Call 0x1C17CF4
	019 Move X0, 0x91F000
	020 Move X0, [X0+624]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X20+1004], W8
	024 Move X21, 0x91F000
	025 Move X0, [X19+32]
	026 Move X21, [X21+624]
	027 Compare X0, 0
	028 JumpIfEqual {44}
	029 Move X1, X31
	030 Call InputDevice.get_added, X0
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfNotEqual {44}
	035 Move X0, [X21]
	036 Move X20, [X19+32]
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {41}
	040 Call 0x1C17DFC
	041 Move X0, X20
	042 Move X1, X31
	043 Call InputSystem.RemoveDevice, X0
	044 Move W1, [X19+40]
	045 Move X0, [X19+48]
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move X22, X31
	048 Compare X0, 0
	049 JumpIfEqual {101}
	050 Move W8, [X0+24]
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move X8, [X21]
	053 Add X9, X0, X22
	054 Move X20, [X9+32]
	055 Move W10, [X8+224]
	056 Compare W10, 0
	057 JumpIfNotEqual {60}
	058 Move X0, X8
	059 Call 0x1C17DFC
	060 Move X0, X20
	061 Move X1, X31
	062 Call InputSystem.EnableDevice, X0
	063 NotImplemented "Instruction LDRSW not yet implemented."
	064 Move X0, [X19+48]
	065 Add X22, X22, 1
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move X8, 0x94D000
	068 Move X8, [X8+3560]
	069 Move X20, 0x94D000
	070 Move X2, [X8]
	071 Move X20, [X20+3552]
	072 Call 0x2176B30, X0, X1
	073 Move X0, [X19+72]
	074 Move X1, [X20]
	075 Call 0x2176AD8, X0
	076 NotImplemented "Instruction MOVI not yet implemented."
	077 Move [X19+40], W31
	078 Move [X19+80], D0
	079 Move X0, [X21]
	080 Move X20, [X19+88]
	081 Move W8, [X0+224]
	082 Compare W8, 0
	083 JumpIfNotEqual {85}
	084 Call 0x1C17DFC
	085 Move X0, X20
	086 Move X1, X31
	087 Call InputSystem.remove_onDeviceChange, X0
	088 Move X0, X31
	089 Call InputSystem.get_onEvent
	090 Move X1, [X19+96]
	091 Call InputEventListener.op_Subtraction, X0, X1
	092 Move X20, [X31+32]
	093 Move X19, [X31+40]
	094 Move X22, [X31+16]
	095 Move X21, [X31+24]
	096 And X0, X0, 255
	097 Move X1, X31
	098 Move X30, [X31+48]
	099 Call InputSystem.set_onEvent, X0
	100 Return 
	101 Call 0x1C17F20
	102 Call 0x1C17F28

Method: System.Void UpdateTouch(System.Int32 touchIndex, System.Int32 pointerIndex, UnityEngine.InputSystem.TouchPhase phase, UnityEngine.InputSystem.LowLevel.InputEventPtr eventPtr = null)

Disassembly:
	0x037FC3A4 BL 0x1C16F18
	0x037FC3A8 BL 0x1990590
	0x037FC3AC STR X30, [X31 - 0x30]!
	0x037FC3B0 STP X22, X21, [X31 + 0x10]
	0x037FC3B4 STP X20, X19, [X31 + 0x20]
	0x037FC3B8 ADRP X20, 0xBE5000
	0x037FC3BC LDRB W8, [X20 + 0x3EC]
	0x037FC3C0 MOV X19, X0
	0x037FC3C4 TBNZ X8, 0x0, 0x37FC3F4
	0x037FC3C8 ADRP X0, 0x94D000
	0x037FC3CC LDR X0, [X0 + 0xDE0]
	0x037FC3D0 BL 0x1C16CF4
	0x037FC3D4 ADRP X0, 0x94D000
	0x037FC3D8 LDR X0, [X0 + 0xDE8]
	0x037FC3DC BL 0x1C16CF4
	0x037FC3E0 ADRP X0, 0x91F000
	0x037FC3E4 LDR X0, [X0 + 0x270]
	0x037FC3E8 BL 0x1C16CF4
	0x037FC3EC MOVZ W8, 0x1
	0x037FC3F0 STRB W8, [X20 + 0x3EC]
	0x037FC3F4 ADRP X21, 0x91F000
	0x037FC3F8 LDR X0, [X19 + 0x20]
	0x037FC3FC LDR X21, [X21 + 0x270]
	0x037FC400 CBZ X0, 0x37FC430
	0x037FC404 MOV X1, X31
	0x037FC408 BL 0x376EE00
	0x037FC40C TBZ X0, 0x0, 0x37FC430
	0x037FC410 LDR X0, [X21]
	0x037FC414 LDR X20, [X19 + 0x20]
	0x037FC418 LDR W8, [X0 + 0xE0]
	0x037FC41C CBNZ W8, 0x37FC424
	0x037FC420 BL 0x1C16DFC
	0x037FC424 MOV X0, X20
	0x037FC428 MOV X1, X31
	0x037FC42C BL 0x376E798
	0x037FC430 LDR W1, [X19 + 0x28]
	0x037FC434 LDR X0, [X19 + 0x30]
	0x037FC438 CMP W1, 0x1
	0x037FC43C B.LT 0x37FC490
	0x037FC440 MOV X22, X31
	0x037FC444 CBZ X0, 0x37FC508
	0x037FC448 LDR W8, [X0 + 0x18]
	0x037FC44C CMP X22, X8
	0x037FC450 B.CS 0x37FC50C
	0x037FC454 LDR X8, [X21]
	0x037FC458 ADD X9, X0, X22, 0x3, LSL
	0x037FC45C LDR X20, [X9 + 0x20]
	0x037FC460 LDR W10, [X8 + 0xE0]
	0x037FC464 CBNZ W10, 0x37FC470
	0x037FC468 MOV X0, X8
	0x037FC46C BL 0x1C16DFC
	0x037FC470 MOV X0, X20
	0x037FC474 MOV X1, X31
	0x037FC478 BL 0x376EC44
	0x037FC47C LDRSW X1, [X19 + 0x28]
	0x037FC480 LDR X0, [X19 + 0x30]
	0x037FC484 ADD X22, X22, 0x1
	0x037FC488 CMP X22, X1
	0x037FC48C B.LT 0x37FC444
	0x037FC490 ADRP X8, 0x94D000
	0x037FC494 LDR X8, [X8 + 0xDE8]
	0x037FC498 ADRP X20, 0x94D000
	0x037FC49C LDR X2, [X8]
	0x037FC4A0 LDR X20, [X20 + 0xDE0]
	0x037FC4A4 BL 0x2175B30
	0x037FC4A8 LDR X0, [X19 + 0x48]
	0x037FC4AC LDR X1, [X20]
	0x037FC4B0 BL 0x2175AD8
	0x037FC4B4 MOVI D0, 0xFFFFFFFF00000000
	0x037FC4B8 STR W31, [X19 + 0x28]
	0x037FC4BC STR D0, [X19 + 0x50]
	0x037FC4C0 LDR X0, [X21]
	0x037FC4C4 LDR X20, [X19 + 0x58]
	0x037FC4C8 LDR W8, [X0 + 0xE0]
	0x037FC4CC CBNZ W8, 0x37FC4D4
	0x037FC4D0 BL 0x1C16DFC
	0x037FC4D4 MOV X0, X20
	0x037FC4D8 MOV X1, X31
	0x037FC4DC BL 0x376DD48
	0x037FC4E0 MOV X0, X31
	0x037FC4E4 BL 0x376F8E0
	0x037FC4E8 LDR X1, [X19 + 0x60]
	0x037FC4EC BL 0x37FC510
	0x037FC4F0 LDP X20, X19, [X31 + 0x20]
	0x037FC4F4 LDP X22, X21, [X31 + 0x10]
	0x037FC4F8 AND X0, X0, 0xFF
	0x037FC4FC MOV X1, X31
	0x037FC500 LDR X30, [X31], #0x30
	0x037FC504 B 0x376F8E8
	0x037FC508 BL 0x1C16F20
	0x037FC50C BL 0x1C16F28
	0x037FC510 SUB X31, X31, 0x30
	0x037FC514 STP X30, X21, [X31 + 0x10]
	0x037FC518 STP X20, X19, [X31 + 0x20]
	0x037FC51C ADRP X19, 0xBE5000
	0x037FC520 LDRB W8, [X19 + 0x41B]
	0x037FC524 MOV X20, X1
	0x037FC528 TBNZ X8, 0x0, 0x37FC540
	0x037FC52C ADRP X0, 0x91F000
	0x037FC530 LDR X0, [X0 + 0x270]
	0x037FC534 BL 0x1C16CF4
	0x037FC538 MOVZ W8, 0x1
	0x037FC53C STRB W8, [X19 + 0x41B]
	0x037FC540 CBZ X20, 0x37FC5D8
	0x037FC544 ADRP X21, 0x91F000
	0x037FC548 LDR X21, [X21 + 0x270]
	0x037FC54C LDR X0, [X21]
	0x037FC550 LDR W8, [X0 + 0xE0]
	0x037FC554 CBNZ W8, 0x37FC560
	0x037FC558 BL 0x1C16DFC
	0x037FC55C LDR X0, [X21]
	0x037FC560 LDR X8, [X0 + 0xB8]
	0x037FC564 LDR X19, [X8]
	0x037FC568 STRB W31, [X31 + 0xC]
	0x037FC56C ADD X1, X31, 0xC
	0x037FC570 MOV X0, X19
	0x037FC574 MOV X2, X31
	0x037FC578 BL 0x33DE64C
	0x037FC57C LDR X0, [X21]
	0x037FC580 LDR W8, [X0 + 0xE0]
	0x037FC584 CBNZ W8, 0x37FC590
	0x037FC588 BL 0x1C16DFC
	0x037FC58C LDR X0, [X21]
	0x037FC590 LDR X8, [X0 + 0xB8]
	0x037FC594 LDR X0, [X8]
	0x037FC598 CBZ X0, 0x37FC628
	0x037FC59C MOV X1, X20
	0x037FC5A0 MOV X2, X31
	0x037FC5A4 BL 0x37BA14C
	0x037FC5A8 MOV X20, X31
	0x037FC5AC LDRB W8, [X31 + 0xC]
	0x037FC5B0 CBZ W8, 0x37FC5C0
	0x037FC5B4 MOV X0, X19
	0x037FC5B8 MOV X1, X31
	0x037FC5BC BL 0x33E14E4
	0x037FC5C0 CBNZ X20, 0x37FC620
	0x037FC5C4 LDP X20, X19, [X31 + 0x20]
	0x037FC5C8 LDP X30, X21, [X31 + 0x10]
	0x037FC5CC MOV X0, X31
	0x037FC5D0 ADD X31, X31, 0x30
	0x037FC5D4 RET
	0x037FC5D8 ADRP X0, 0x8FC000
	0x037FC5DC LDR X0, [X0 + 0x528]
	0x037FC5E0 BL 0x1C16D08
	0x037FC5E4 BL 0x1C16F10
	0x037FC5E8 MOV X19, X0
	0x037FC5EC ADRP X0, 0x930000
	0x037FC5F0 LDR X0, [X0 + 0xF28]
	0x037FC5F4 BL 0x1C16D08
	0x037FC5F8 MOV X1, X0
	0x037FC5FC MOV X0, X19
	0x037FC600 MOV X2, X31
	0x037FC604 BL 0x330E100
	0x037FC608 ADRP X0, 0x94D000
	0x037FC60C LDR X0, [X0 + 0xDF0]
	0x037FC610 BL 0x1C16D08
	0x037FC614 MOV X1, X0
	0x037FC618 MOV X0, X19
	0x037FC61C BL 0x1C16DEC
	0x037FC620 MOV X0, X20
	0x037FC624 BL 0x1C16F18
	0x037FC628 BL 0x1C16F20
	0x037FC62C B 0x37FC630
	0x037FC630 MOV X21, X0
	0x037FC634 CMP W1, 0x1
	0x037FC638 B.NE 0x37FC650
	0x037FC63C MOV X0, X21
	0x037FC640 BL 0x3EB1AD0
	0x037FC644 LDR X20, [X0]
	0x037FC648 BL 0x3EB1AE0
	0x037FC64C B 0x37FC5AC
	0x037FC650 MOV X20, X31
	0x037FC654 B 0x37FC65C
	0x037FC658 MOV X21, X0
	0x037FC65C LDRB W8, [X31 + 0xC]
	0x037FC660 CBZ W8, 0x37FC670
	0x037FC664 MOV X0, X19
	0x037FC668 MOV X1, X31
	0x037FC66C BL 0x33E14E4
	0x037FC670 CBNZ X20, 0x37FC67C
	0x037FC674 MOV X0, X21
	0x037FC678 BL 0x1D2C690
	0x037FC67C MOV X0, X20
	0x037FC680 BL 0x1C16F18
	0x037FC684 BL 0x1990590
	0x037FC688 STR X30, [X31 - 0x20]!
	0x037FC68C STP X20, X19, [X31 + 0x10]
	0x037FC690 ADRP X19, 0xBE5000
	0x037FC694 ADRP X20, 0x91F000
	0x037FC698 LDRB W8, [X19 + 0x463]
	0x037FC69C LDR X20, [X20 + 0xEC8]
	0x037FC6A0 TBNZ X8, 0x0, 0x37FC6C4
	0x037FC6A4 ADRP X0, 0x91F000
	0x037FC6A8 LDR X0, [X0 + 0xED0]
	0x037FC6AC BL 0x1C16CF4
	0x037FC6B0 ADRP X0, 0x91F000
	0x037FC6B4 LDR X0, [X0 + 0xEC8]
	0x037FC6B8 BL 0x1C16CF4
	0x037FC6BC MOVZ W8, 0x1
	0x037FC6C0 STRB W8, [X19 + 0x463]
	0x037FC6C4 LDR X8, [X20]
	0x037FC6C8 LDR X8, [X8 + 0xB8]
	0x037FC6CC LDR X19, [X8]
	0x037FC6D0 CBZ X19, 0x37FC754
	0x037FC6D4 ADRP X10, 0x91F000
	0x037FC6D8 LDR X8, [X19]
	0x037FC6DC LDR X10, [X10 + 0xED0]
	0x037FC6E0 LDRH W9, [X8 + 0x12E]
	0x037FC6E4 LDR X1, [X10]
	0x037FC6E8 CBZ X9, 0x37FC70C
	0x037FC6EC LDR X10, [X8 + 0xB0]
	0x037FC6F0 ADD X10, X10, 0x8
	0x037FC6F4 LDUR X11, [X10 - 0x8]
	0x037FC6F8 CMP X11, X1
	0x037FC6FC B.EQ 0x37FC71C
	0x037FC700 SUBS X9, X9, 0x1
	0x037FC704 ADD X10, X10, 0x10
	0x037FC708 B.NE 0x37FC6F4
	0x037FC70C MOVZ W2, 0x13
	0x037FC710 MOV X0, X19
	0x037FC714 BL 0x1C5C788
	0x037FC718 B 0x37FC72C
	0x037FC71C LDR W9, [X10]
	0x037FC720 ADD W9, W9, 0x13
	0x037FC724 ADD X8, X8, W9, 0x4, SXTW
	0x037FC728 ADD X0, X8, 0x138
	0x037FC72C LDP X8, X1, [X0]
	0x037FC730 MOV X0, X19
	0x037FC734 BLR X8
	0x037FC738 LDR X8, [X20]
	0x037FC73C LDP X20, X19, [X31 + 0x10]
	0x037FC740 LDR X8, [X8 + 0xB8]
	0x037FC744 LDR V1, [X8 + 0x8]
	0x037FC748 FSUB D0, D0, D1
	0x037FC74C LDR X30, [X31], #0x20
	0x037FC750 RET
	0x037FC754 BL 0x1C16F20
	0x037FC758 STP X30, X21, [X31 - 0x20]!
	0x037FC75C STP X20, X19, [X31 + 0x10]
	0x037FC760 LDR X19, [X0]
	0x037FC764 CBZ X19, 0x37FC7A8
	0x037FC768 ADRP X21, 0xBE5000
	0x037FC76C ADRP X20, 0x91F000
	0x037FC770 LDRB W8, [X21 + 0x40B]
	0x037FC774 LDR X20, [X20 + 0xEC8]
	0x037FC778 TBNZ X8, 0x0, 0x37FC790
	0x037FC77C ADRP X0, 0x91F000
	0x037FC780 LDR X0, [X0 + 0xEC8]
	0x037FC784 BL 0x1C16CF4
	0x037FC788 MOVZ W8, 0x1
	0x037FC78C STRB W8, [X21 + 0x40B]
	0x037FC790 LDR X8, [X20]
	0x037FC794 LDR V0, [X19 + 0x8]
	0x037FC798 LDR X8, [X8 + 0xB8]

ISIL:
	001 Subtract X31, X31, 272
	002 Move [X31+128], D13
	003 Move [X31+136], D12
	004 Move [X31+144], D11
	005 Move [X31+152], D10
	006 Move [X31+160], D9
	007 Move [X31+168], D8
	008 Move [X31+176], X29
	009 Move [X31+184], X30
	010 Move [X31+192], X28
	011 Move [X31+200], X27
	012 Move [X31+208], X26
	013 Move [X31+216], X25
	014 Move [X31+224], X24
	015 Move [X31+232], X23
	016 Move [X31+240], X22
	017 Move [X31+248], X21
	018 Move [X31+256], X20
	019 Move [X31+264], X19
	020 NotImplemented "Instruction MRS not yet implemented."
	021 Move X8, [X25+40]
	022 Move X24, 0xBE6000
	023 Move X22, X4
	024 Move W21, W3
	025 Move [X31+120], X8
	026 Move W8, [X24+1005]
	027 Move W23, W2
	028 Move W19, W1
	029 Move X20, X0
	030 Move TEMP, X8
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfEqual {48}
	034 Move X0, 0x920000
	035 Move X0, [X0+3352]
	036 Call 0x1C17CF4
	037 Move X0, 0x94E000
	038 Move X0, [X0+3440]
	039 Call 0x1C17CF4
	040 Move X0, 0x94C000
	041 Move X0, [X0+4032]
	042 Call 0x1C17CF4
	043 Move X0, 0x94B000
	044 Move X0, [X0+3416]
	045 Call 0x1C17CF4
	046 Move W8, 1
	047 Move [X24+1005], W8
	048 Move [X31+16], X31
	049 Move [X31+24], X31
	050 Move X8, [X20+56]
	051 Compare X8, 0
	052 JumpIfEqual {301}
	053 Move W9, [X8+24]
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move X9, [X20+64]
	056 Compare X9, 0
	057 JumpIfEqual {301}
	058 Move W10, [X9+24]
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move X10, W23
	061 Add X8, X8, X10
	062 Add X9, X9, X10
	063 Move S10, [X8+32]
	064 Move S9, [X8+36]
	065 Move W8, [X9+32]
	066 Move [X31+56], W31
	067 Move [X31+48], X31
	068 Move [X31+44], W31
	069 Move [X31+12], W8
	070 Compare X22, 0
	071 JumpIfEqual {90}
	072 Move X24, 0xBE6000
	073 Move X23, 0x920000
	074 Move W8, [X24+1035]
	075 Move X23, [X23+3784]
	076 Move TEMP, X8
	077 And TEMP, TEMP, 1
	078 Compare TEMP, 1
	079 JumpIfEqual {85}
	080 Move X0, 0x920000
	081 Move X0, [X0+3784]
	082 Call 0x1C17CF4
	083 Move W8, 1
	084 Move [X24+1035], W8
	085 Move X8, [X23]
	086 Move V0, [X22+8]
	087 Move X8, [X8+184]
	088 Move V1, [X8+8]
	089 Subtract D8, D0, D1
	090 Call InputState.get_currentTime
	091 Move V8, V0
	092 Move X0, [X20+32]
	093 Compare X0, 0
	094 JumpIfEqual {301}
	095 Move X1, X31
	096 Call InputControl.get_currentStatePtr, X0
	097 Move X8, [X20+32]
	098 Compare X8, 0
	099 JumpIfEqual {301}
	100 Move X9, 0x94C000
	101 Move X9, [X9+4032]
	102 Add X8, X8, 424
	103 Move V0, [X8]
	104 Move X23, X0
	105 Move X2, [X9]
	106 Add X0, X31, 16
	107 Move W1, W19
	108 Move [X31+1], V0
	109 Call ReadOnlyArray`1<Object>.get_Item, X0, X1
	110 Compare X0, 0
	111 JumpIfEqual {301}
	112 Move X8, 0x920000
	113 Move X8, [X8+3352]
	114 Move W24, [X0+20]
	115 Move X8, [X8]
	116 Move W9, [X8+224]
	117 Compare W9, 0
	118 JumpIfNotEqual {121}
	119 Move X0, X8
	120 Call 0x1C17DFC
	121 NotImplemented "Instruction CMP not yet implemented."
	122 Add X8, X24, X23
	123 Move W9, [X20+84]
	124 Move W10, W9
	125 ShiftRight W10, 28
	126 And W10, W10, 0x7FFFFFFF
	127 And W23, W10, 8
	128 Move [X31+44], W23
	129 Move W10, [X20+80]
	130 Add W27, W10, 1
	131 Move [X20+80], W27
	132 Compare X8, 0
	133 JumpIfEqual {301}
	134 Move W26, [X8+33]
	135 Move W28, S10
	136 Move W29, S9
	137 Move S11, W31
	138 Move TEMP, X9
	139 And TEMP, TEMP, -2147483648
	140 Compare TEMP, -2147483648
	141 JumpIfNotEqual {143}
	142 Move [X20+84], W19
	143 Move S13, W31
	144 Move V12, V8
	145 Compare X8, 0
	146 JumpIfEqual {301}
	147 Move W9, [X20+84]
	148 Move W27, [X8]
	149 NotImplemented "Instruction CMP not yet implemented."
	150 NotImplemented "Instruction CSET not yet implemented."
	151 Move W23, W9
	152 ShiftRight W23, 29
	153 And W23, W23, 0xFFFFFFF
	154 Move [X31+44], W23
	155 Move S0, [X8+4]
	156 Move S1, [X8+8]
	157 Move W28, [X8+48]
	158 Move W29, [X8+52]
	159 Move V12, [X8+40]
	160 Move W26, [X8+33]
	161 NotImplemented "Instruction CMP not yet implemented."
	162 Subtract S11, S10, S0
	163 Subtract S13, S9, S1
	164 Move X8, 0x94B000
	165 Move X8, [X8+3416]
	166 Subtract D1, D8, D12
	167 Move X8, [X8]
	168 Move X8, [X8+184]
	169 Move V0, [X8+8]
	170 NotImplemented "Instruction FCVT not yet implemented."
	171 NotImplemented "Instruction FCMP not yet implemented."
	172 Move S0, W28
	173 Move S1, W29
	174 Move V2, [X8+16]
	175 Subtract S0, S10, S0
	176 Subtract S1, S9, S1
	177 Move W23, [X31+44]
	178 Multiply S0, S0, S0
	179 Multiply S1, S1, S1
	180 Add S0, S0, S1
	181 NotImplemented "Instruction FCMP not yet implemented."
	182 Move W8, W31
	183 Move W9, W31
	184 Move W9, 16
	185 Move W8, 1
	186 And W10, W23, 0xFFFFFFEF
	187 Or W23, W9, W10
	188 Add W26, W26, W8
	189 Move [X31+44], W23
	190 Move X24, 0x94E000
	191 Move X24, [X24+3440]
	192 Move TEMP, X23
	193 And TEMP, TEMP, 8
	194 Compare TEMP, 8
	195 JumpIfNotEqual {223}
	196 Move X8, [X20+32]
	197 Compare X8, 0
	198 JumpIfEqual {301}
	199 Move X0, [X8+416]
	200 Move X8, [X31+48]
	201 Move X4, [X24]
	202 Move W9, [X31+12]
	203 Add X1, X31, 64
	204 Move [X31+84], X8
	205 Move W8, [X31+56]
	206 Move W2, W31
	207 Move X3, X22
	208 Move [X31+64], W27
	209 Move [X31+68], S10
	210 Move [X31+76], S9
	211 Move [X31+76], S11
	212 Move [X31+84], S13
	213 Move [X31+96], W21
	214 Move [X31+97], W26
	215 Move [X31+98], W9
	216 Move [X31+99], W23
	217 Move [X31+100], W31
	218 Move [X31+104], D12
	219 Move [X31+92], W8
	220 Move [X31+112], W28
	221 Move [X31+116], W29
	222 Call InputState.Change, X0, X1, X2, X3
	223 Move X8, [X20+32]
	224 Compare X8, 0
	225 JumpIfEqual {301}
	226 Add X8, X8, 424
	227 Move V0, [X8]
	228 Move X8, 0x94C000
	229 Move X8, [X8+4032]
	230 Add X0, X31, 16
	231 Move W1, W19
	232 Move [X31+1], V0
	233 Move X2, [X8]
	234 Call ReadOnlyArray`1<Object>.get_Item, X0, X1
	235 Move X4, [X24]
	236 Move X8, [X31+48]
	237 Move W9, [X31+56]
	238 Move W10, [X31+12]
	239 Add X1, X31, 64
	240 Move W2, W31
	241 Move X3, X22
	242 Move [X31+64], W27
	243 Move [X31+68], S10
	244 Move [X31+76], S9
	245 Move [X31+76], S11
	246 Move [X31+84], S13
	247 Move [X31+97], W26
	248 Move [X31+96], W21
	249 Move [X31+98], W10
	250 Move [X31+99], W23
	251 Move [X31+100], W31
	252 Move [X31+104], D12
	253 Move [X31+84], X8
	254 Move [X31+92], W9
	255 Move [X31+112], W28
	256 Move [X31+116], W29
	257 Call InputState.Change, X0, X1, X2, X3
	258 Move W0, W21
	259 Move X1, X31
	260 Call InputExtensions.IsEndedOrCanceled, X0
	261 Move TEMP, X0
	262 And TEMP, TEMP, 1
	263 Compare TEMP, 1
	264 JumpIfNotEqual {278}
	265 Move X8, [X20+72]
	266 Compare X8, 0
	267 JumpIfEqual {301}
	268 Move W9, [X8+24]
	269 NotImplemented "Instruction CMP not yet implemented."
	270 Add X8, X8, W19
	271 Move [X8+32], X31
	272 Move W8, [X20+84]
	273 NotImplemented "Instruction CMP not yet implemented."
	274 Move TEMP, 0
	275 Not TEMP
	276 Move W8, TEMP
	277 Move [X20+84], W8
	278 Move X8, [X25+40]
	279 Move X9, [X31+120]
	280 NotImplemented "Instruction CMP not yet implemented."
	281 Move X20, [X31+256]
	282 Move X19, [X31+264]
	283 Move X22, [X31+240]
	284 Move X21, [X31+248]
	285 Move X24, [X31+224]
	286 Move X23, [X31+232]
	287 Move X26, [X31+208]
	288 Move X25, [X31+216]
	289 Move X28, [X31+192]
	290 Move X27, [X31+200]
	291 Move X29, [X31+176]
	292 Move X30, [X31+184]
	293 Move D9, [X31+160]
	294 Move D8, [X31+168]
	295 Move D11, [X31+144]
	296 Move D10, [X31+152]
	297 Move D13, [X31+128]
	298 Move D12, [X31+136]
	299 Add X31, X31, 272
	300 Return 
	301 Call 0x1C17F20
	302 Call 0x1C17F28
	303 Call 0x3EB2B20

Method: System.Void UnityEngine.InputSystem.LowLevel.IInputStateChangeMonitor.NotifyControlStateChanged(UnityEngine.InputSystem.InputControl control, System.Double time, UnityEngine.InputSystem.LowLevel.InputEventPtr eventPtr, System.Int64 monitorIndex)

Disassembly:
	0x037FD804 ADRP X0, 0x94C000

ISIL:
	001 Return 

Method: System.Void UnityEngine.InputSystem.LowLevel.IInputStateChangeMonitor.NotifyTimerExpired(UnityEngine.InputSystem.InputControl control, System.Double time, System.Int64 monitorIndex, System.Int32 timerIndex)

Disassembly:
	0x037FD808 LDR X0, [X0 + 0xF20]

ISIL:
	001 Return 

Method: System.Void InstallStateChangeMonitors(System.Int32 startIndex = 0)

Disassembly:
	0x037FD80C BL 0x1C16CF4

ISIL:
	001 Return 

Method: System.Void OnSourceControlChangedValue(UnityEngine.InputSystem.InputControl control, System.Double time, UnityEngine.InputSystem.LowLevel.InputEventPtr eventPtr, System.Int64 sourceDeviceAndButtonIndex)

Disassembly:
	0x037FD810 MOVZ W8, 0x1

ISIL:
	001 Return 

Method: System.Void UninstallStateChangeMonitors(System.Int32 startIndex = 0)

Disassembly:
	0x037FD814 STRB W8, [X20 + 0x3F4]

ISIL:
	001 Return 

Method: System.Void .ctor()

Disassembly:
	0x037FD818 LDR X0, [X19]
	0x037FD81C LDR W8, [X0 + 0xE0]
	0x037FD820 CBNZ W8, 0x37FD82C
	0x037FD824 BL 0x1C16DFC

ISIL:
	001 Move TEMP, 0
	002 Not TEMP
	003 Move W8, TEMP
	004 Move X1, X31
	005 Move [X0+84], W8
	006 Call MonoBehaviour..ctor, X0
	007 Return 

