Type: UnityEngine.InputSystem.EnhancedTouch.EnhancedTouchSupport

Method: System.Boolean get_enabled()

Disassembly:
	0x037F7C5C BL 0x1C16F20
	0x037F7C60 STR X30, [X31 - 0x10]!
	0x037F7C64 STP X2, X1, [X0]
	0x037F7C68 CBZ X2, 0x37F7C98
	0x037F7C6C LDR W8, [X2 + 0x54]
	0x037F7C70 STR W8, [X0 + 0x18]
	0x037F7C74 TBZ X4, 0x1F, 0x37F7C7C
	0x037F7C78 LDR W4, [X2 + 0x44]
	0x037F7C7C STR W4, [X0 + 0x10]
	0x037F7C80 TBZ X3, 0x1F, 0x37F7C8C
	0x037F7C84 LDR W8, [X2 + 0x44]
	0x037F7C88 SUB W3, W8, 0x1
	0x037F7C8C STR W3, [X0 + 0x14]
	0x037F7C90 LDR X30, [X31], #0x10
	0x037F7C94 RET
	0x037F7C98 BL 0x1C16F20
	0x037F7C9C SUB X31, X31, 0xF0
	0x037F7CA0 STP X29, X30, [X31 + 0x90]
	0x037F7CA4 STP X28, X27, [X31 + 0xA0]
	0x037F7CA8 STP X26, X25, [X31 + 0xB0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xBEB000
	005 Move X20, 0x953000
	006 Move W8, [X19+926]
	007 Move X20, [X20+2784]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x953000
	013 Move X0, [X0+2784]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+926], W8
	017 Move X8, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X8, [X8+184]
	021 Move W8, [X8]
	022 NotImplemented "Instruction CMP not yet implemented."
	023 NotImplemented "Instruction CSET not yet implemented."
	024 Move X30, [X31+32]
	025 Return X0

Method: System.Void Enable()

Disassembly:
	0x037F7CAC STP X24, X23, [X31 + 0xC0]
	0x037F7CB0 STP X22, X21, [X31 + 0xD0]
	0x037F7CB4 STP X20, X19, [X31 + 0xE0]
	0x037F7CB8 MRS X24, 0xC000
	0x037F7CBC LDR X8, [X24 + 0x28]
	0x037F7CC0 ADRP X23, 0xBEA000
	0x037F7CC4 MOV W21, W3
	0x037F7CC8 MOV W19, W2
	0x037F7CCC STR X8, [X31 + 0x88]
	0x037F7CD0 LDRB W8, [X23 + 0x3AA]
	0x037F7CD4 MOV X22, X1
	0x037F7CD8 MOV X20, X0
	0x037F7CDC TBNZ X8, 0x0, 0x37F7D6C
	0x037F7CE0 ADRP X0, 0x952000
	0x037F7CE4 LDR X0, [X0 + 0xB38]
	0x037F7CE8 BL 0x1C16CF4
	0x037F7CEC ADRP X0, 0x952000
	0x037F7CF0 LDR X0, [X0 + 0xB40]
	0x037F7CF4 BL 0x1C16CF4
	0x037F7CF8 ADRP X0, 0x952000
	0x037F7CFC LDR X0, [X0 + 0xB48]
	0x037F7D00 BL 0x1C16CF4
	0x037F7D04 ADRP X0, 0x952000
	0x037F7D08 LDR X0, [X0 + 0xB50]
	0x037F7D0C BL 0x1C16CF4
	0x037F7D10 ADRP X0, 0x952000
	0x037F7D14 LDR X0, [X0 + 0xB58]
	0x037F7D18 BL 0x1C16CF4
	0x037F7D1C ADRP X0, 0x952000
	0x037F7D20 LDR X0, [X0 + 0xB60]
	0x037F7D24 BL 0x1C16CF4
	0x037F7D28 ADRP X0, 0x952000
	0x037F7D2C LDR X0, [X0 + 0xB68]
	0x037F7D30 BL 0x1C16CF4
	0x037F7D34 ADRP X0, 0x952000
	0x037F7D38 LDR X0, [X0 + 0xB70]
	0x037F7D3C BL 0x1C16CF4
	0x037F7D40 ADRP X0, 0x950000
	0x037F7D44 LDR X0, [X0 + 0xFC0]
	0x037F7D48 BL 0x1C16CF4
	0x037F7D4C ADRP X0, 0x924000
	0x037F7D50 LDR X0, [X0 + 0x628]
	0x037F7D54 BL 0x1C16CF4
	0x037F7D58 ADRP X0, 0x952000
	0x037F7D5C LDR X0, [X0 + 0xB78]
	0x037F7D60 BL 0x1C16CF4
	0x037F7D64 MOVZ W8, 0x1
	0x037F7D68 STRB W8, [X23 + 0x3AA]
	0x037F7D6C MOV X0, X20
	0x037F7D70 MOV X1, X31
	0x037F7D74 BL 0x33BDD8C
	0x037F7D78 STR X22, [X20 + 0x10]
	0x037F7D7C STR W19, [X20 + 0x18]
	0x037F7D80 CBZ X22, 0x37F7F90
	0x037F7D84 ADRP X25, 0x950000
	0x037F7D88 LDR X25, [X25 + 0xFC0]
	0x037F7D8C ADRP X23, 0x952000
	0x037F7D90 ADD X26, X22, 0x1A8
	0x037F7D94 LDR X23, [X23 + 0xB70]
	0x037F7D98 LDR V0, [X26]
	0x037F7D9C LDR X2, [X25]
	0x037F7DA0 ADRP X22, 0x952000
	0x037F7DA4 ADRP X27, 0x924000
	0x037F7DA8 LDR X22, [X22 + 0xB68]
	0x037F7DAC LDR X27, [X27 + 0x628]
	0x037F7DB0 ADD X0, X31, 0x0
	0x037F7DB4 MOV W1, W19
	0x037F7DB8 STR V0, [X31]
	0x037F7DBC BL 0x24FDB3C
	0x037F7DC0 LDR X8, [X23]
	0x037F7DC4 MOV X23, X0
	0x037F7DC8 MOV X0, X8
	0x037F7DCC BL 0x1C16F10
	0x037F7DD0 LDR X2, [X22]
	0x037F7DD4 MOV X1, X23
	0x037F7DD8 MOV X22, X0
	0x037F7DDC BL 0x2E11964
	0x037F7DE0 LDR X0, [X27]
	0x037F7DE4 LDR W8, [X0 + 0xE0]
	0x037F7DE8 CBNZ W8, 0x37F7DF0
	0x037F7DEC BL 0x1C16DFC
	0x037F7DF0 BL 0x37F7F98
	0x037F7DF4 CBZ X22, 0x37F7F90
	0x037F7DF8 ADRP X23, 0x952000
	0x037F7DFC ADRP X27, 0x952000
	0x037F7E00 ADRP X28, 0x952000
	0x037F7E04 ADRP X29, 0x952000
	0x037F7E08 LDR X23, [X23 + 0xB38]
	0x037F7E0C LDR X27, [X27 + 0xB40]
	0x037F7E10 LDR X28, [X28 + 0xB50]
	0x037F7E14 LDR X29, [X29 + 0xB48]
	0x037F7E18 MOV W1, W0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X19, 0xBEB000
	008 Move X20, 0x953000
	009 Move W8, [X19+927]
	010 Move X20, [X20+2784]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {38}
	015 Move X0, 0x951000
	016 Move X0, [X0+2952]
	017 Call 0x1C17CF4
	018 Move X0, 0x8FE000
	019 Move X0, [X0+3696]
	020 Call 0x1C17CF4
	021 Move X0, 0x953000
	022 Move X0, [X0+2792]
	023 Call 0x1C17CF4
	024 Move X0, 0x953000
	025 Move X0, [X0+2800]
	026 Call 0x1C17CF4
	027 Move X0, 0x953000
	028 Move X0, [X0+2784]
	029 Call 0x1C17CF4
	030 Move X0, 0x925000
	031 Move X0, [X0+624]
	032 Call 0x1C17CF4
	033 Move X0, 0x953000
	034 Move X0, [X0+2808]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X19+927], W8
	038 Move X8, [X20]
	039 Move X8, [X8+184]
	040 Move W9, [X8]
	041 Add W9, W9, 1
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move [X8], W9
	044 Move X8, 0x951000
	045 Move X8, [X8+2952]
	046 Move X19, 0x953000
	047 Move X23, 0x925000
	048 Move X19, [X19+2792]
	049 Move X23, [X23+624]
	050 Move X0, [X8]
	051 Move X21, 0x8FE000
	052 Move X22, 0x953000
	053 Move X20, 0x953000
	054 Move X21, [X21+3696]
	055 Move X22, [X22+2808]
	056 Move X20, [X20+2800]
	057 Call 0x1C17F10
	058 Move X2, [X19]
	059 Move X1, X31
	060 Move X3, X31
	061 Move X19, X0
	062 Call Action`2<Object, Int32Enum>..ctor, X0, X1, X2
	063 Move X0, [X23]
	064 Move W8, [X0+224]
	065 Compare W8, 0
	066 JumpIfNotEqual {68}
	067 Call 0x1C17DFC
	068 Move X0, X19
	069 Move X1, X31
	070 Call InputSystem.add_onDeviceChange, X0
	071 Move X0, [X21]
	072 Call 0x1C17F10
	073 Move X2, [X22]
	074 Move X1, X31
	075 Move X3, X31
	076 Move X19, X0
	077 Call Action..ctor, X0, X1, X2
	078 Move X0, X19
	079 Move X1, X31
	080 Call InputSystem.add_onBeforeUpdate, X0
	081 Move X0, [X21]
	082 Call 0x1C17F10
	083 Move X2, [X20]
	084 Move X1, X31
	085 Move X3, X31
	086 Move X19, X0
	087 Call Action..ctor, X0, X1, X2
	088 Move X0, X19
	089 Move X1, X31
	090 Call InputSystem.add_onSettingsChange, X0
	091 Move X20, [X31+32]
	092 Move X19, [X31+40]
	093 Move X22, [X31+16]
	094 Move X21, [X31+24]
	095 Move X30, [X31+48]
	096 Move X23, [X31+56]
	097 Move X20, [X31+32]
	098 Move X19, [X31+40]
	099 Move X22, [X31+16]
	100 Move X21, [X31+24]
	101 Move X30, [X31+48]
	102 Move X23, [X31+56]
	103 Return 

Method: System.Void Disable()

Disassembly:
	0x037F7FF8 ADRP X21, 0xBEA000
	0x037F7FFC LDRB W8, [X21 + 0x3AB]
	0x037F8000 MOV X20, X1
	0x037F8004 MOV X19, X0
	0x037F8008 TBNZ X8, 0x0, 0x37F8020
	0x037F800C ADRP X0, 0x923000
	0x037F8010 LDR X0, [X0 + 0xD18]
	0x037F8014 BL 0x1C16CF4
	0x037F8018 MOVZ W8, 0x1
	0x037F801C STRB W8, [X21 + 0x3AB]
	0x037F8020 CBZ X20, 0x37F8090
	0x037F8024 LDR W8, [X20]
	0x037F8028 MOVZ W9, 0x4154
	0x037F802C MOVK W9, 0x53540000
	0x037F8030 CMP W8, W9
	0x037F8034 B.EQ 0x37F8048
	0x037F8038 MOVZ W9, 0x5441
	0x037F803C MOVK W9, 0x444C0000
	0x037F8040 CMP W8, W9
	0x037F8044 B.NE 0x37F8090
	0x037F8048 CBZ X19, 0x37F80A0
	0x037F804C MOV X0, X19
	0x037F8050 MOV X1, X31
	0x037F8054 BL 0x3772640
	0x037F8058 ADRP X8, 0x923000
	0x037F805C LDR X8, [X8 + 0xD18]
	0x037F8060 LDR W20, [X19 + 0x14]
	0x037F8064 MOV X19, X0
	0x037F8068 LDR X8, [X8]
	0x037F806C LDR W9, [X8 + 0xE0]
	0x037F8070 CBNZ W9, 0x37F807C
	0x037F8074 MOV X0, X8
	0x037F8078 BL 0x1C16DFC
	0x037F807C ADD X8, X20, X19
	0x037F8080 LDRB W8, [X8 + 0x23]
	0x037F8084 ANDS W31, W8, 0x20
	0x037F8088 CSET W0, EQ
	0x037F808C B 0x37F8094
	0x037F8090 MOV W0, W31
	0x037F8094 LDP X20, X19, [X31 + 0x10]
	0x037F8098 LDP X30, X21, [X31], #0x20
	0x037F809C RET
	0x037F80A0 BL 0x1C16F20
	0x037F80A4 LDR X8, [X0]
	0x037F80A8 CMP X8, 0x0
	0x037F80AC CSET W0, NE
	0x037F80B0 RET
	0x037F80B4 LDR X8, [X0]
	0x037F80B8 CBZ X8, 0x37F80C4
	0x037F80BC LDR W0, [X8]
	0x037F80C0 RET
	0x037F80C4 MOV X0, X31
	0x037F80C8 RET
	0x037F80CC LDRB W8, [X0 + 0x23]
	0x037F80D0 UBFM W0, W8, 0x5, 0x5
	0x037F80D4 RET
	0x037F80D8 SUB X31, X31, 0x40
	0x037F80DC STP X30, X23, [X31 + 0x10]
	0x037F80E0 STP X22, X21, [X31 + 0x20]
	0x037F80E4 STP X20, X19, [X31 + 0x30]
	0x037F80E8 ADRP X20, 0xBE9000
	0x037F80EC LDRB W8, [X20 + 0x3AC]
	0x037F80F0 MOV X19, X0
	0x037F80F4 STP X1, X2, [X31]
	0x037F80F8 TBNZ X8, 0x0, 0x37F8158
	0x037F80FC ADRP X0, 0x951000
	0x037F8100 LDR X0, [X0 + 0xB80]
	0x037F8104 BL 0x1C16CF4
	0x037F8108 ADRP X0, 0x94C000
	0x037F810C LDR X0, [X0 + 0xF90]
	0x037F8110 BL 0x1C16CF4
	0x037F8114 ADRP X0, 0x923000
	0x037F8118 LDR X0, [X0 + 0x628]
	0x037F811C BL 0x1C16CF4
	0x037F8120 ADRP X0, 0x951000
	0x037F8124 LDR X0, [X0 + 0xB78]
	0x037F8128 BL 0x1C16CF4
	0x037F812C ADRP X0, 0x951000
	0x037F8130 LDR X0, [X0 + 0xB88]
	0x037F8134 BL 0x1C16CF4
	0x037F8138 ADRP X0, 0x951000
	0x037F813C LDR X0, [X0 + 0xB90]
	0x037F8140 BL 0x1C16CF4
	0x037F8144 ADRP X0, 0x951000
	0x037F8148 LDR X0, [X0 + 0xB98]
	0x037F814C BL 0x1C16CF4
	0x037F8150 MOVZ W8, 0x1
	0x037F8154 STRB W8, [X20 + 0x3AC]
	0x037F8158 ADD X0, X31, 0x0
	0x037F815C MOV X1, X31
	0x037F8160 BL 0x380EBE8
	0x037F8164 LDR X8, [X19 + 0x20]
	0x037F8168 CBZ X8, 0x37F8360
	0x037F816C MOV W21, W0
	0x037F8170 MOV X0, X8
	0x037F8174 MOV W1, W21
	0x037F8178 MOV X2, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xBEA000
	005 Move W8, [X19+928]
	006 Move TEMP, X8
	007 And TEMP, TEMP, 1
	008 Compare TEMP, 1
	009 JumpIfEqual {33}
	010 Move X0, 0x950000
	011 Move X0, [X0+2952]
	012 Call 0x1C17CF4
	013 Move X0, 0x8FD000
	014 Move X0, [X0+3696]
	015 Call 0x1C17CF4
	016 Move X0, 0x952000
	017 Move X0, [X0+2792]
	018 Call 0x1C17CF4
	019 Move X0, 0x952000
	020 Move X0, [X0+2800]
	021 Call 0x1C17CF4
	022 Move X0, 0x952000
	023 Move X0, [X0+2784]
	024 Call 0x1C17CF4
	025 Move X0, 0x924000
	026 Move X0, [X0+624]
	027 Call 0x1C17CF4
	028 Move X0, 0x952000
	029 Move X0, [X0+2808]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X19+928], W8
	033 Move X20, 0xBEA000
	034 Move X19, 0x952000
	035 Move W8, [X20+926]
	036 Move X19, [X19+2784]
	037 Move TEMP, X8
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfEqual {46}
	041 Move X0, 0x952000
	042 Move X0, [X0+2784]
	043 Call 0x1C17CF4
	044 Move W8, 1
	045 Move [X20+926], W8
	046 Move X8, [X19]
	047 Move X8, [X8+184]
	048 Move W9, [X8]
	049 Subtract W9, W9, 1
	050 Move [X8], W9
	051 Move X8, 0x950000
	052 Move X8, [X8+2952]
	053 Move X0, [X8]
	054 Call 0x1C17F10
	055 Move X8, 0x952000
	056 Move X8, [X8+2792]
	057 Move X1, X31
	058 Move X3, X31
	059 Move X19, X0
	060 Move X2, [X8]
	061 Call Action`2<Object, Int32Enum>..ctor, X0, X1, X2
	062 Move X8, 0x924000
	063 Move X8, [X8+624]
	064 Move X0, [X8]
	065 Move W8, [X0+224]
	066 Compare W8, 0
	067 JumpIfNotEqual {69}
	068 Call 0x1C17DFC
	069 Move X0, X19
	070 Move X1, X31
	071 Call InputSystem.remove_onDeviceChange, X0
	072 Move X20, 0x8FD000
	073 Move X20, [X20+3696]
	074 Move X0, [X20]
	075 Call 0x1C17F10
	076 Move X8, 0x952000
	077 Move X8, [X8+2808]
	078 Move X1, X31
	079 Move X3, X31
	080 Move X19, X0
	081 Move X2, [X8]
	082 Call Action..ctor, X0, X1, X2
	083 Move X0, X19
	084 Move X1, X31
	085 Call InputSystem.remove_onBeforeUpdate, X0
	086 Move X0, [X20]
	087 Call 0x1C17F10
	088 Move X8, 0x952000
	089 Move X8, [X8+2800]
	090 Move X1, X31
	091 Move X3, X31
	092 Move X19, X0
	093 Move X2, [X8]
	094 Call Action..ctor, X0, X1, X2
	095 Move X0, X19
	096 Move X1, X31
	097 Call InputSystem.remove_onSettingsChange, X0
	098 Move X20, [X31+16]
	099 Move X19, [X31+24]
	100 Move X30, [X31+32]
	101 Move X20, [X31+16]
	102 Move X19, [X31+24]
	103 Move X30, [X31+32]
	104 Return 

Method: System.Void Reset()

Disassembly:
	0x037F8338 MOV X1, X19
	0x037F833C LDR X4, [X10]
	0x037F8340 ADD X0, X11, X9
	0x037F8344 MOV X3, X31
	0x037F8348 BL 0x21AD310
	0x037F834C LDP X20, X19, [X31 + 0x30]
	0x037F8350 LDP X22, X21, [X31 + 0x20]
	0x037F8354 LDP X30, X23, [X31 + 0x10]
	0x037F8358 ADD X31, X31, 0x40
	0x037F835C RET
	0x037F8360 BL 0x1C16F20
	0x037F8364 LDRB W8, [X0 + 0x23]
	0x037F8368 UBFM W0, W8, 0x7, 0x1F
	0x037F836C RET
	0x037F8370 LDRB W8, [X0 + 0x23]
	0x037F8374 ANDS W31, W1, 0x1
	0x037F8378 MOVN W9, 0x7F
	0x037F837C CSEL W9, W9, W31, NE
	0x037F8380 BFM W9, W8, 0x0, 0x6
	0x037F8384 STRB W9, [X0 + 0x23]
	0x037F8388 RET
	0x037F838C SUB X31, X31, 0x70
	0x037F8390 STR X30, [X31 + 0x20]
	0x037F8394 STP X26, X25, [X31 + 0x30]
	0x037F8398 STP X24, X23, [X31 + 0x40]
	0x037F839C STP X22, X21, [X31 + 0x50]
	0x037F83A0 STP X20, X19, [X31 + 0x60]
	0x037F83A4 ADRP X19, 0xBE9000
	0x037F83A8 LDRB W9, [X19 + 0x3AD]
	0x037F83AC MOV W22, W1
	0x037F83B0 MOV X21, X0
	0x037F83B4 MOV X20, X8
	0x037F83B8 TBNZ X9, 0x0, 0x37F8400
	0x037F83BC ADRP X0, 0x8FB000
	0x037F83C0 LDR X0, [X0 + 0xE00]
	0x037F83C4 BL 0x1C16CF4
	0x037F83C8 ADRP X0, 0x951000
	0x037F83CC LDR X0, [X0 + 0xBA0]
	0x037F83D0 BL 0x1C16CF4
	0x037F83D4 ADRP X0, 0x8FB000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xBEA000
	005 Move X19, 0x924000
	006 Move W8, [X20+929]
	007 Move X19, [X19+1576]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x952000
	013 Move X0, [X0+2784]
	014 Call 0x1C17CF4
	015 Move X0, 0x924000
	016 Move X0, [X0+1576]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+929], W8
	020 Move X0, [X19]
	021 Move X20, 0x952000
	022 Move W8, [X0+224]
	023 Move X20, [X20+2784]
	024 Compare W8, 0
	025 JumpIfNotEqual {28}
	026 Call 0x1C17DFC
	027 Move X0, [X19]
	028 Move X8, [X0+184]
	029 Move [X8], X31
	030 Move [X8+8], X31
	031 Move [X8+16], X31
	032 Move X8, [X19]
	033 Move X8, [X8+184]
	034 Add X0, X8, 272
	035 Call FingerAndTouchState.Destroy, X0
	036 Move X8, [X19]
	037 NotImplemented "Instruction MOVI not yet implemented."
	038 Move X8, [X8+184]
	039 Move [X8+304], V0
	040 Move [X8+312], V0
	041 Move [X8+272], V0
	042 Move [X8+280], V0
	043 Move X8, [X20]
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X8, [X8+184]
	047 Move [X8], W31
	048 Move X30, [X31+32]
	049 Return 

Method: System.Void SetUpState()

Disassembly:
	0x037F7E1C MOV X0, X22
	0x037F7E20 MOV X2, X31
	0x037F7E24 BL 0x380CD20
	0x037F7E28 MOVZ W1, 0xC
	0x037F7E2C MOV X0, X22
	0x037F7E30 MOV X2, X31
	0x037F7E34 BL 0x380CDF0
	0x037F7E38 LDR X0, [X23]
	0x037F7E3C BL 0x1C16F10
	0x037F7E40 LDR X2, [X27]
	0x037F7E44 MOV X1, X20
	0x037F7E48 MOV X3, X31
	0x037F7E4C MOV X23, X0
	0x037F7E50 BL 0x2A71DB0
	0x037F7E54 STR X23, [X22 + 0x10]
	0x037F7E58 LDR X0, [X28]
	0x037F7E5C BL 0x1C16F10
	0x037F7E60 LDR X2, [X29]
	0x037F7E64 MOV X1, X31
	0x037F7E68 MOV X3, X31
	0x037F7E6C MOV X23, X0
	0x037F7E70 BL 0x2D4064C
	0x037F7E74 MOV X0, X22
	0x037F7E78 MOV W1, W21
	0x037F7E7C MOV X2, X31
	0x037F7E80 STR X23, [X22 + 0x18]
	0x037F7E84 BL 0x380CF4C
	0x037F7E88 MOV X0, X22
	0x037F7E8C MOV X1, X31
	0x037F7E90 STR X22, [X20 + 0x20]
	0x037F7E94 BL 0x380DD60
	0x037F7E98 LDR V0, [X26]
	0x037F7E9C LDR X2, [X25]
	0x037F7EA0 ADD X0, X31, 0x0
	0x037F7EA4 MOV W1, W19
	0x037F7EA8 STR V0, [X31]
	0x037F7EAC BL 0x24FDB3C
	0x037F7EB0 CBZ X0, 0x37F7F90
	0x037F7EB4 MOV X1, X31
	0x037F7EB8 BL 0x375A930
	0x037F7EBC TBZ X0, 0x0, 0x37F7F60
	0x037F7EC0 LDR V0, [X26]
	0x037F7EC4 LDR X2, [X25]
	0x037F7EC8 LDR X20, [X20 + 0x20]
	0x037F7ECC ADD X0, X31, 0x0
	0x037F7ED0 MOV W1, W19
	0x037F7ED4 STR V0, [X31]
	0x037F7ED8 BL 0x24FDB3C
	0x037F7EDC LDR V0, [X26]
	0x037F7EE0 LDR X2, [X25]
	0x037F7EE4 MOV X21, X0
	0x037F7EE8 ADD X0, X31, 0x0
	0x037F7EEC MOV W1, W19
	0x037F7EF0 STR V0, [X31]
	0x037F7EF4 BL 0x24FDB3C
	0x037F7EF8 CBZ X0, 0x37F7F90
	0x037F7EFC ADRP X8, 0x952000
	0x037F7F00 LDR X8, [X8 + 0xB58]
	0x037F7F04 LDR X1, [X8]
	0x037F7F08 BL 0x2E06C1C
	0x037F7F0C LDR X8, [X0 + 0x30]
	0x037F7F10 LDP V1, V0, [X0 + 0x10]
	0x037F7F14 LDR V2, [X0]
	0x037F7F18 STR X8, [X31 + 0x40]
	0x037F7F1C STP V1, V0, [X31 + 0x20]
	0x037F7F20 STR V2, [X31 + 0x1]
	0x037F7F24 CBZ X20, 0x37F7F90
	0x037F7F28 ADRP X8, 0x952000
	0x037F7F2C LDR X8, [X8 + 0xB60]
	0x037F7F30 LDP V0, V1, [X31 + 0x10]
	0x037F7F34 LDR V2, [X31 + 0x3]
	0x037F7F38 LDR X9, [X31 + 0x40]
	0x037F7F3C LDR X3, [X8]
	0x037F7F40 STP V0, V1, [X31 + 0x50]
	0x037F7F44 ADD X2, X31, 0x50
	0x037F7F48 FMOV D0, -1
	0x037F7F4C MOV X0, X20
	0x037F7F50 MOV X1, X21
	0x037F7F54 STR V2, [X31 + 0x7]
	0x037F7F58 STR X9, [X31 + 0x80]
	0x037F7F5C BL 0x2E11E94
	0x037F7F60 LDR X8, [X24 + 0x28]
	0x037F7F64 LDR X9, [X31 + 0x88]
	0x037F7F68 CMP X8, X9
	0x037F7F6C B.NE 0x37F7F94
	0x037F7F70 LDP X20, X19, [X31 + 0xE0]
	0x037F7F74 LDP X22, X21, [X31 + 0xD0]
	0x037F7F78 LDP X24, X23, [X31 + 0xC0]
	0x037F7F7C LDP X26, X25, [X31 + 0xB0]
	0x037F7F80 LDP X28, X27, [X31 + 0xA0]
	0x037F7F84 LDP X29, X30, [X31 + 0x90]
	0x037F7F88 ADD X31, X31, 0xF0
	0x037F7F8C RET
	0x037F7F90 BL 0x1C16F20
	0x037F7F94 BL 0x3EB1B20
	0x037F7F98 STR X30, [X31 - 0x20]!
	0x037F7F9C STP X20, X19, [X31 + 0x10]
	0x037F7FA0 ADRP X20, 0xBEA000
	0x037F7FA4 ADRP X19, 0x924000
	0x037F7FA8 LDRB W8, [X20 + 0x3D0]
	0x037F7FAC LDR X19, [X19 + 0x628]
	0x037F7FB0 TBNZ X8, 0x0, 0x37F7FC8
	0x037F7FB4 ADRP X0, 0x924000
	0x037F7FB8 LDR X0, [X0 + 0x628]
	0x037F7FBC BL 0x1C16CF4
	0x037F7FC0 MOVZ W8, 0x1
	0x037F7FC4 STRB W8, [X20 + 0x3D0]
	0x037F7FC8 LDR X0, [X19]
	0x037F7FCC LDR W8, [X0 + 0xE0]
	0x037F7FD0 CBNZ W8, 0x37F7FDC
	0x037F7FD4 BL 0x1C16DFC
	0x037F7FD8 LDR X0, [X19]
	0x037F7FDC LDR X8, [X0 + 0xB8]
	0x037F7FE0 LDP X20, X19, [X31 + 0x10]
	0x037F7FE4 LDR W0, [X8 + 0x18]
	0x037F7FE8 LDR X30, [X31], #0x20
	0x037F7FEC RET
	0x037F7FF0 STP X30, X21, [X31 - 0x20]!
	0x037F7FF4 STP X20, X19, [X31 + 0x10]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+64], X22
	004 Move [X31+72], X21
	005 Move [X31+80], X20
	006 Move [X31+88], X19
	007 Move X20, 0xBEB000
	008 Move X19, 0x925000
	009 Move W8, [X20+930]
	010 Move X19, [X19+1576]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {38}
	015 Move X0, 0x953000
	016 Move X0, [X0+2784]
	017 Call 0x1C17CF4
	018 Move X0, 0x925000
	019 Move X0, [X0+3856]
	020 Call 0x1C17CF4
	021 Move X0, 0x925000
	022 Move X0, [X0+3864]
	023 Call 0x1C17CF4
	024 Move X0, 0x925000
	025 Move X0, [X0+3872]
	026 Call 0x1C17CF4
	027 Move X0, 0x925000
	028 Move X0, [X0+624]
	029 Call 0x1C17CF4
	030 Move X0, 0x925000
	031 Move X0, [X0+3888]
	032 Call 0x1C17CF4
	033 Move X0, 0x925000
	034 Move X0, [X0+1576]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X20+930], W8
	038 Move X0, [X19]
	039 Move [X31+24], X31
	040 Move [X31+32], X31
	041 Move [X31+40], X31
	042 Move X20, 0x925000
	043 Move W8, [X0+224]
	044 Move X20, [X20+624]
	045 Compare W8, 0
	046 JumpIfNotEqual {49}
	047 Call 0x1C17DFC
	048 Move X0, [X19]
	049 Move X8, [X0+184]
	050 Move W9, 19
	051 Move [X8+272], W9
	052 Move X0, [X20]
	053 Move W8, [X0+224]
	054 Compare W8, 0
	055 JumpIfNotEqual {57}
	056 Call 0x1C17DFC
	057 Move X0, X31
	058 Call InputSystem.get_settings
	059 Compare X0, 0
	060 JumpIfEqual {106}
	061 Move X8, 0x953000
	062 Move X8, [X8+2784]
	063 Move X22, 0x925000
	064 Move X20, 0x925000
	065 Move X21, 0x925000
	066 Move X8, [X8]
	067 Move X22, [X22+3888]
	068 Move W9, [X0+32]
	069 Move X19, 0x925000
	070 Move X8, [X8+184]
	071 Move X20, [X20+3864]
	072 Move X21, [X21+3872]
	073 Move X19, [X19+3856]
	074 Move X0, X31
	075 Move [X8+4], W9
	076 Call InputSystem.get_devices
	077 Move X9, [X22]
	078 Move [X31+8], X0
	079 Move [X31+16], X1
	080 Add X8, X31, 24
	081 Add X0, X31, 8
	082 Move X1, X9
	083 Call ReadOnlyArray`1<Object>.GetEnumerator, X0
	084 Move X1, [X20]
	085 Add X0, X31, 24
	086 Call Enumerator<Object>.MoveNext, X0
	087 Move TEMP, X0
	088 And TEMP, TEMP, 1
	089 Compare TEMP, 1
	090 JumpIfNotEqual {96}
	091 Move X1, [X21]
	092 Add X0, X31, 24
	093 Call Enumerator<Object>.get_Current, X0
	094 Move W1, W31
	095 Call EnhancedTouchSupport.OnDeviceChange, X0, X1
	096 Move X1, [X19]
	097 Add X0, X31, 24
	098 Call Enumerator<Object>.Dispose, X0
	099 Move X20, [X31+80]
	100 Move X19, [X31+88]
	101 Move X22, [X31+64]
	102 Move X21, [X31+72]
	103 Move X30, [X31+48]
	104 Add X31, X31, 96
	105 Return 
	106 Call 0x1C17F20
	107 Move X21, X19
	108 Move X20, X0
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Move X0, X20
	111 Call 0x3EB2AD0
	112 Move X19, [X0]
	113 Call 0x3EB2AE0
	114 Move X1, [X21]
	115 Add X0, X31, 24
	116 Call Enumerator<Object>.Dispose, X0
	117 Compare X19, 0
	118 JumpIfEqual {99}
	119 Move X0, X19
	120 Call 0x1C17F18
	121 Move X19, X31
	122 Move X20, X0
	123 Move X1, [X21]
	124 Add X0, X31, 24
	125 Call Enumerator<Object>.Dispose, X0
	126 Compare X19, 0
	127 JumpIfNotEqual {130}
	128 Move X0, X20
	129 Call 0x1D2D690
	130 Move X0, X19
	131 Call 0x1C17F18
	132 Call 0x1991590

Method: System.Void TearDownState()

Disassembly:
	0x037F817C BL 0x380E878
	0x037F8180 MOV X1, X31
	0x037F8184 MOV X22, X0
	0x037F8188 BL 0x380E480
	0x037F818C CBZ X0, 0x37F8360
	0x037F8190 ADRP X8, 0x94C000
	0x037F8194 LDR X8, [X8 + 0xF90]
	0x037F8198 ADRP X23, 0x923000
	0x037F819C MOV X20, X0
	0x037F81A0 LDR X8, [X8]
	0x037F81A4 LDR X8, [X8 + 0xB8]
	0x037F81A8 LDR W8, [X8]
	0x037F81AC LDR X23, [X23 + 0x628]
	0x037F81B0 STR W8, [X0 + 0x24]
	0x037F81B4 LDR X0, [X23]
	0x037F81B8 LDR W8, [X0 + 0xE0]
	0x037F81BC CBNZ W8, 0x37F81C8
	0x037F81C0 BL 0x1C16DFC
	0x037F81C4 LDR X0, [X23]
	0x037F81C8 LDR X8, [X0 + 0xB8]
	0x037F81CC STRB W31, [X8 + 0x140]
	0x037F81D0 LDR X0, [X19 + 0x20]
	0x037F81D4 CBZ X0, 0x37F8360
	0x037F81D8 MOV X1, X31
	0x037F81DC BL 0x380E804
	0x037F81E0 LDR X8, [X23]
	0x037F81E4 LDR X10, [X8 + 0xB8]
	0x037F81E8 ADD X8, X22, W0, SXTW
	0x037F81EC SUBS X8, X8, 0xC
	0x037F81F0 LDR W9, [X10 + 0x13C]
	0x037F81F4 ADD W9, W9, 0x1
	0x037F81F8 STR W9, [X10 + 0x13C]
	0x037F81FC B.EQ 0x37F8360
	0x037F8200 STR W9, [X8 + 0x8]
	0x037F8204 LDUR X9, [X20 + 0xC]
	0x037F8208 STR X9, [X8]
	0x037F820C LDRB W8, [X20 + 0x20]
	0x037F8210 CMP W8, 0x1
	0x037F8214 B.NE 0x37F8248
	0x037F8218 LDRB W8, [X20 + 0x23]
	0x037F821C ORR W8, W8, 0x80
	0x037F8220 STRB W8, [X20 + 0x23]
	0x037F8224 LDR X0, [X23]
	0x037F8228 LDR W8, [X0 + 0xE0]
	0x037F822C CBNZ W8, 0x37F8238
	0x037F8230 BL 0x1C16DFC
	0x037F8234 LDR X0, [X23]
	0x037F8238 ADRP X8, 0x951000
	0x037F823C LDR X8, [X8 + 0xB98]
	0x037F8240 MOVZ W9, 0x20
	0x037F8244 B 0x37F8328
	0x037F8248 LDR X0, [X19 + 0x20]
	0x037F824C CBZ X0, 0x37F8360
	0x037F8250 LDR W9, [X0 + 0x50]
	0x037F8254 CMP W21, W9
	0x037F8258 B.EQ 0x37F82C4
	0x037F825C CBNZ W21, 0x37F8264
	0x037F8260 LDR W21, [X0 + 0x48]
	0x037F8264 SUB W1, W21, 0x1
	0x037F8268 MOV X2, X31
	0x037F826C BL 0x380E878
	0x037F8270 MOV X1, X31
	0x037F8274 BL 0x380E480
	0x037F8278 CBZ X0, 0x37F8360
	0x037F827C LDUR V0, [X20 + 0xC]
	0x037F8280 LDUR V1, [X0 + 0xC]
	0x037F8284 FSUB V0.2S, V0.2S, V1.2S
	0x037F8288 STUR D0, [X20 + 0xC]
	0x00000000 INVALID
	0x037F8290 TBNZ X8, 0x1F, 0x37F829C
	0x037F8294 MOV W9, W31
	0x037F8298 B 0x37F82B0
	0x037F829C LDR W8, [X0 + 0x24]
	0x037F82A0 LDR W9, [X20 + 0x24]
	0x037F82A4 CMP W8, W9
	0x037F82A8 MOVN W8, 0x7F
	0x037F82AC CSEL W9, W8, W31, EQ
	0x037F82B0 LDRB W10, [X20 + 0x23]
	0x037F82B4 LDRB W8, [X20 + 0x20]
	0x037F82B8 AND W10, W10, 0x7F
	0x037F82BC ORR W9, W10, W9, 0x0
	0x037F82C0 STRB W9, [X20 + 0x23]
	0x037F82C4 SUB W9, W8, 0x3
	0x037F82C8 CMP W9, 0x2
	0x037F82CC B.CC 0x37F82E4
	0x037F82D0 CMP W8, 0x2
	0x037F82D4 B.EQ 0x37F8308
	0x037F82D8 CMP W8, 0x1
	0x037F82DC B.EQ 0x37F8224
	0x037F82E0 B 0x37F834C
	0x037F82E4 LDR X0, [X23]
	0x037F82E8 LDR W8, [X0 + 0xE0]
	0x037F82EC CBNZ W8, 0x37F82F8
	0x037F82F0 BL 0x1C16DFC
	0x037F82F4 LDR X0, [X23]
	0x037F82F8 ADRP X8, 0x951000
	0x037F82FC LDR X8, [X8 + 0xB90]
	0x037F8300 MOVZ W9, 0xC0
	0x037F8304 B 0x37F8328
	0x037F8308 LDR X0, [X23]
	0x037F830C LDR W8, [X0 + 0xE0]
	0x037F8310 CBNZ W8, 0x37F831C
	0x037F8314 BL 0x1C16DFC
	0x037F8318 LDR X0, [X23]
	0x037F831C ADRP X8, 0x951000
	0x037F8320 LDR X8, [X8 + 0xB88]
	0x037F8324 MOVZ W9, 0x70
	0x037F8328 ADRP X10, 0x951000
	0x037F832C LDR X10, [X10 + 0xB80]
	0x037F8330 LDR X11, [X0 + 0xB8]
	0x037F8334 LDR X2, [X8]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+56], X23
	004 Move [X31+64], X22
	005 Move [X31+72], X21
	006 Move [X31+80], X20
	007 Move [X31+88], X19
	008 Move X20, 0xBEA000
	009 Move X19, 0x924000
	010 Move W8, [X20+931]
	011 Move X19, [X19+624]
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {36}
	016 Move X0, 0x924000
	017 Move X0, [X0+3856]
	018 Call 0x1C17CF4
	019 Move X0, 0x924000
	020 Move X0, [X0+3864]
	021 Call 0x1C17CF4
	022 Move X0, 0x924000
	023 Move X0, [X0+3872]
	024 Call 0x1C17CF4
	025 Move X0, 0x924000
	026 Move X0, [X0+624]
	027 Call 0x1C17CF4
	028 Move X0, 0x924000
	029 Move X0, [X0+3888]
	030 Call 0x1C17CF4
	031 Move X0, 0x924000
	032 Move X0, [X0+1576]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X20+931], W8
	036 Move X0, [X19]
	037 Move [X31+24], X31
	038 Move [X31+32], X31
	039 Move [X31+40], X31
	040 Move X23, 0x924000
	041 Move W8, [X0+224]
	042 Move X23, [X23+3888]
	043 Compare W8, 0
	044 JumpIfNotEqual {46}
	045 Call 0x1C17DFC
	046 Move X20, 0x924000
	047 Move X22, 0x924000
	048 Move X21, 0x924000
	049 Move X19, 0x924000
	050 Move X20, [X20+3864]
	051 Move X22, [X22+3872]
	052 Move X21, [X21+1576]
	053 Move X19, [X19+3856]
	054 Move X0, X31
	055 Call InputSystem.get_devices
	056 Move X9, [X23]
	057 Move [X31+8], X0
	058 Move [X31+16], X1
	059 Add X8, X31, 24
	060 Add X0, X31, 8
	061 Move X1, X9
	062 Call ReadOnlyArray`1<Object>.GetEnumerator, X0
	063 Move X1, [X20]
	064 Add X0, X31, 24
	065 Call Enumerator<Object>.MoveNext, X0
	066 Move TEMP, X0
	067 And TEMP, TEMP, 1
	068 Compare TEMP, 1
	069 JumpIfNotEqual {75}
	070 Move X1, [X22]
	071 Add X0, X31, 24
	072 Call Enumerator<Object>.get_Current, X0
	073 Move W1, 1
	074 Call EnhancedTouchSupport.OnDeviceChange, X0, X1
	075 Move X1, [X19]
	076 Add X0, X31, 24
	077 Call Enumerator<Object>.Dispose, X0
	078 Move X0, [X21]
	079 Move W8, [X0+224]
	080 Compare W8, 0
	081 JumpIfNotEqual {84}
	082 Call 0x1C17DFC
	083 Move X0, [X21]
	084 Move X8, [X0+184]
	085 Add X0, X8, 272
	086 Call FingerAndTouchState.Destroy, X0
	087 Move X8, [X21]
	088 Move X20, [X31+80]
	089 Move X19, [X31+88]
	090 Move X22, [X31+64]
	091 Move X21, [X31+72]
	092 Move X30, [X31+48]
	093 Move X23, [X31+56]
	094 Move X8, [X8+184]
	095 NotImplemented "Instruction MOVI not yet implemented."
	096 Move [X8+304], V0
	097 Move [X8+312], V0
	098 Move [X8+272], V0
	099 Move [X8+280], V0
	100 Add X31, X31, 96
	101 Return 
	102 Move X22, X19
	103 Move X20, X0
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Move X0, X20
	106 Call 0x3EB2AD0
	107 Move X19, [X0]
	108 Call 0x3EB2AE0
	109 Move X1, [X22]
	110 Add X0, X31, 24
	111 Call Enumerator<Object>.Dispose, X0
	112 Compare X19, 0
	113 JumpIfEqual {78}
	114 Move X0, X19
	115 Call 0x1C17F18
	116 Move X19, X31
	117 Move X20, X0
	118 Move X1, [X22]
	119 Add X0, X31, 24
	120 Call Enumerator<Object>.Dispose, X0
	121 Compare X19, 0
	122 JumpIfNotEqual {125}
	123 Move X0, X20
	124 Call 0x1D2D690
	125 Move X0, X19
	126 Call 0x1C17F18
	127 Call 0x1991590

Method: System.Void OnDeviceChange(UnityEngine.InputSystem.InputDevice device, UnityEngine.InputSystem.InputDeviceChange change)

Disassembly:
	0x037F845C LDUR X11, [X10 - 0x8]
	0x037F8460 CMP X11, X1
	0x037F8464 B.EQ 0x37F8484
	0x037F8468 SUBS X9, X9, 0x1
	0x037F846C ADD X10, X10, 0x10
	0x037F8470 B.NE 0x37F845C
	0x037F8474 MOV X0, X19
	0x037F8478 MOV W2, W31
	0x037F847C BL 0x1C5C788
	0x037F8480 B 0x37F8490
	0x037F8484 LDRSW X9, [X10]
	0x037F8488 ADD X8, X8, X9, 0x4, LSL
	0x037F848C ADD X0, X8, 0x138
	0x037F8490 LDP X8, X1, [X0]
	0x037F8494 MOV X0, X19
	0x037F8498 BLR X8
	0x037F849C TBZ X0, 0x0, 0x37F8534
	0x037F84A0 LDR X8, [X19]
	0x037F84A4 LDR X1, [X25]
	0x037F84A8 LDRH W9, [X8 + 0x12E]
	0x037F84AC CBZ X9, 0x37F84D0
	0x037F84B0 LDR X10, [X8 + 0xB0]
	0x037F84B4 ADD X10, X10, 0x8
	0x037F84B8 LDUR X11, [X10 - 0x8]
	0x037F84BC CMP X11, X1
	0x037F84C0 B.EQ 0x37F84E0
	0x037F84C4 SUBS X9, X9, 0x1
	0x037F84C8 ADD X10, X10, 0x10
	0x037F84CC B.NE 0x37F84B8
	0x037F84D0 MOV X0, X19
	0x037F84D4 MOV W2, W31
	0x037F84D8 BL 0x1C5C788
	0x037F84DC B 0x37F84EC
	0x037F84E0 LDRSW X9, [X10]
	0x037F84E4 ADD X8, X8, X9, 0x4, LSL
	0x037F84E8 ADD X0, X8, 0x138
	0x037F84EC LDP X8, X1, [X0]
	0x037F84F0 MOV X0, X19
	0x037F84F4 BLR X8
	0x037F84F8 LDR X8, [X26]
	0x037F84FC STP X0, X1, [X31 + 0x10]
	0x037F8500 ADD X0, X31, 0x10
	0x037F8504 MOV X1, X8
	0x037F8508 BL 0x25C1C14
	0x037F850C CBZ X0, 0x37F85F0
	0x037F8510 LDR W8, [X0 + 0x8]
	0x037F8514 CMP W8, W22
	0x037F8518 B.NE 0x37F8444
	0x037F851C LDR V0, [X31 + 0x1]
	0x037F8520 MOV X22, X31
	0x037F8524 MOVZ W24, 0x4
	0x037F8528 STR V0, [X31]
	0x037F852C CBNZ X19, 0x37F854C
	0x037F8530 B 0x37F85A4
	0x037F8534 MOVI V0.2D, 0x0
	0x037F8538 MOV X22, X31
	0x037F853C MOV X21, X31
	0x037F8540 STR V0, [X31]
	0x037F8544 MOVZ W24, 0x5
	0x037F8548 CBZ X19, 0x37F85A4
	0x037F854C LDR X8, [X19]
	0x037F8550 LDR X1, [X23]
	0x037F8554 LDRH W9, [X8 + 0x12E]
	0x037F8558 CBZ X9, 0x37F857C
	0x037F855C LDR X10, [X8 + 0xB0]
	0x037F8560 ADD X10, X10, 0x8
	0x037F8564 LDUR X11, [X10 - 0x8]
	0x037F8568 CMP X11, X1
	0x037F856C B.EQ 0x37F858C
	0x037F8570 SUBS X9, X9, 0x1
	0x037F8574 ADD X10, X10, 0x10

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xBEA000
	006 Move W8, [X21+932]
	007 Move W20, W1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x924000
	014 Move X0, [X0+1576]
	015 Call 0x1C17CF4
	016 Move X0, 0x94F000
	017 Move X0, [X0+3416]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+932], W8
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Compare W20, 0
	023 JumpIfNotEqual {82}
	024 Compare X19, 0
	025 JumpIfEqual {82}
	026 Move X8, 0x94F000
	027 Move X8, [X8+3416]
	028 Move X9, [X19]
	029 Move X8, [X8]
	030 Move W11, [X9+304]
	031 Move W10, [X8+304]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X9, [X9+200]
	034 Add X9, X9, X10
	035 NotImplemented "Instruction LDUR not yet implemented."
	036 NotImplemented "Instruction CMP not yet implemented."
	037 NotImplemented "Instruction CSEL not yet implemented."
	038 Compare X19, 0
	039 JumpIfEqual {82}
	040 Move X8, 0x924000
	041 Move X8, [X8+1576]
	042 Move X0, [X8]
	043 Move W8, [X0+224]
	044 Compare W8, 0
	045 JumpIfNotEqual {47}
	046 Call 0x1C17DFC
	047 Move X0, X19
	048 Move X20, [X31+16]
	049 Move X19, [X31+24]
	050 Move X30, [X31+32]
	051 Move X21, [X31+40]
	052 Compare X19, 0
	053 JumpIfEqual {82}
	054 Move X8, 0x94F000
	055 Move X8, [X8+3416]
	056 Move X9, [X19]
	057 Move X8, [X8]
	058 Move W11, [X9+304]
	059 Move W10, [X8+304]
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move X9, [X9+200]
	062 Add X9, X9, X10
	063 NotImplemented "Instruction LDUR not yet implemented."
	064 NotImplemented "Instruction CMP not yet implemented."
	065 NotImplemented "Instruction CSEL not yet implemented."
	066 Compare X19, 0
	067 JumpIfEqual {82}
	068 Move X8, 0x924000
	069 Move X8, [X8+1576]
	070 Move X0, [X8]
	071 Move W8, [X0+224]
	072 Compare W8, 0
	073 JumpIfNotEqual {75}
	074 Call 0x1C17DFC
	075 Move X0, X19
	076 Move X20, [X31+16]
	077 Move X19, [X31+24]
	078 Move X30, [X31+32]
	079 Move X21, [X31+40]
	080 Call Touch.RemoveTouchscreen, X0
	081 Return 
	082 Move X20, [X31+16]
	083 Move X19, [X31+24]
	084 Move X30, [X31+32]
	085 Move X21, [X31+40]
	086 Return 

Method: System.Void OnSettingsChange()

Disassembly:
	0x037F86E8 MOV X19, X8
	0x037F86EC TBNZ X9, 0x0, 0x37F8740
	0x037F86F0 ADRP X0, 0x951000
	0x037F86F4 LDR X0, [X0 + 0xBB8]
	0x037F86F8 BL 0x1C16CF4
	0x037F86FC ADRP X0, 0x951000
	0x037F8700 LDR X0, [X0 + 0xBC0]
	0x037F8704 BL 0x1C16CF4
	0x037F8708 ADRP X0, 0x951000
	0x037F870C LDR X0, [X0 + 0xBC8]
	0x037F8710 BL 0x1C16CF4
	0x037F8714 ADRP X0, 0x951000
	0x037F8718 LDR X0, [X0 + 0xBD0]
	0x037F871C BL 0x1C16CF4
	0x037F8720 ADRP X0, 0x951000
	0x037F8724 LDR X0, [X0 + 0xB28]
	0x037F8728 BL 0x1C16CF4
	0x037F872C ADRP X0, 0x923000
	0x037F8730 LDR X0, [X0 + 0x628]
	0x037F8734 BL 0x1C16CF4
	0x037F8738 MOVZ W8, 0x1
	0x037F873C STRB W8, [X22 + 0x3AE]
	0x037F8740 STP X31, X31, [X31 + 0x20]
	0x037F8744 LDR X8, [X21 + 0x8]
	0x037F8748 LDR X9, [X20 + 0x20]
	0x037F874C ADRP X22, 0x923000
	0x037F8750 LDR X22, [X22 + 0x628]
	0x037F8754 CMP X8, X9
	0x037F8758 B.EQ 0x37F87A0
	0x037F875C LDR X0, [X22]
	0x037F8760 LDR W8, [X0 + 0xE0]
	0x037F8764 CBNZ W8, 0x37F876C
	0x037F8768 BL 0x1C16DFC
	0x037F876C MOV X0, X21
	0x037F8770 BL 0x37F88E0
	0x037F8774 MOV W1, W0
	0x037F8778 ADD X8, X31, 0x8
	0x037F877C MOV X0, X20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xBEA000
	005 Move X20, 0x924000
	006 Move W8, [X19+933]
	007 Move X20, [X20+624]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x952000
	013 Move X0, [X0+2784]
	014 Call 0x1C17CF4
	015 Move X0, 0x924000
	016 Move X0, [X0+624]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X19+933], W8
	020 Move X0, [X20]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X0, X31
	026 Call InputSystem.get_settings
	027 Compare X0, 0
	028 JumpIfEqual {46}
	029 Move X8, 0x952000
	030 Move X8, [X8+2784]
	031 Move W9, [X0+32]
	032 Move X8, [X8]
	033 Move X8, [X8+184]
	034 Move W8, [X8+4]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move X30, [X31+32]
	039 Return 
	040 Call EnhancedTouchSupport.TearDownState
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move X30, [X31+32]
	044 Call EnhancedTouchSupport.SetUpState
	045 Return 
	046 Call 0x1C17F20

Method: System.Void CheckEnabled()

Disassembly:
	0x037F8780 BL 0x37F838C
	0x037F8784 LDR X8, [X31 + 0x18]
	0x037F8788 LDUR V0, [X31 + 0x8]
	0x037F878C MOV X0, X21
	0x037F8790 STR X8, [X21 + 0x10]
	0x037F8794 STR V0, [X21]
	0x037F8798 BL 0x37F799C
	0x037F879C TBZ X0, 0x0, 0x37F88B8
	0x037F87A0 LDR X0, [X22]
	0x037F87A4 ADRP X22, 0x951000
	0x037F87A8 LDR W8, [X0 + 0xE0]
	0x037F87AC LDR X22, [X22 + 0xBC0]
	0x037F87B0 CBNZ W8, 0x37F87B8
	0x037F87B4 BL 0x1C16DFC
	0x037F87B8 MOV X0, X21
	0x037F87BC BL 0x37F893C
	0x037F87C0 LDR X1, [X22]
	0x037F87C4 ADD X24, X21, 0x8
	0x037F87C8 MOV W23, W0
	0x037F87CC MOV X0, X24
	0x037F87D0 BL 0x25C156C
	0x037F87D4 MOV W22, W0
	0x037F87D8 MOV X0, X21
	0x037F87DC BL 0x37F8998
	0x037F87E0 CMP W0, 0x1
	0x037F87E4 B.EQ 0x37F88B8
	0x037F87E8 ADRP X25, 0x951000
	0x037F87EC LDR X25, [X25 + 0xBD0]
	0x037F87F0 MOV X0, X24
	0x037F87F4 LDR X1, [X25]
	0x037F87F8 BL 0x25C189C
	0x037F87FC ADRP X24, 0x951000
	0x037F8800 LDR X24, [X24 + 0xB28]
	0x037F8804 STP X0, X1, [X31 + 0x20]
	0x037F8808 ADD X0, X31, 0x20
	0x037F880C LDR X8, [X24]
	0x037F8810 MOV X1, X8
	0x037F8814 BL 0x25C1504

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xBEA000
	005 Move X20, 0x952000
	006 Move W8, [X19+926]
	007 Move X20, [X20+2784]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x952000
	013 Move X0, [X0+2784]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+926], W8
	017 Move X8, [X20]
	018 Move X8, [X8+184]
	019 Move W8, [X8]
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X30, [X31+32]
	024 Return 
	025 Move X0, 0x8FC000
	026 Move X0, [X0+1456]
	027 Call 0x1C17D08
	028 Call 0x1C17F10
	029 Move X19, X0
	030 Move X0, 0x952000
	031 Move X0, [X0+2840]
	032 Call 0x1C17D08
	033 Move X1, X0
	034 Move X0, X19
	035 Move X2, X31
	036 Call InvalidOperationException..ctor, X0, X1
	037 Move X0, 0x952000
	038 Move X0, [X0+2848]
	039 Call 0x1C17D08
	040 Move X1, X0
	041 Move X0, X19
	042 Call 0x1C17DEC

