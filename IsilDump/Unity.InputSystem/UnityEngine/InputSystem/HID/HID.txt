Type: UnityEngine.InputSystem.HID.HID

Method: UnityEngine.InputSystem.Utilities.FourCC get_QueryHIDReportDescriptorDeviceCommandType()

Disassembly:
	0x037F1A90 MOV X22, X0
	0x037F1A94 CMP W21, 0x1
	0x037F1A98 B.NE 0x37F1AE0
	0x037F1A9C MOV X0, X22
	0x037F1AA0 BL 0x3EB1AD0
	0x037F1AA4 LDR X25, [X0]
	0x037F1AA8 BL 0x3EB1AE0
	0x037F1AAC CBZ X25, 0x37F18A0
	0x037F1AB0 MOV X0, X25
	0x037F1AB4 BL 0x1C16F18
	0x037F1AB8 B 0x37F1AD8
	0x037F1ABC CBZ X25, 0x37F1AD8

ISIL:
	001 Move [X31-16], X30
	002 Add X0, X31, 8
	003 Move W1, 72
	004 Move W2, 73
	005 Move W3, 68
	006 Move W4, 68
	007 Move X5, X31
	008 Move [X31+8], W31
	009 Call FourCC..ctor, X0, X1, X2, X3, X4
	010 Move W0, [X31+8]
	011 Move X30, [X31+16]
	012 Return X0

Method: UnityEngine.InputSystem.Utilities.FourCC get_QueryHIDReportDescriptorSizeDeviceCommandType()

Disassembly:
	0x037F1AC0 MOV X0, X25
	0x037F1AC4 BL 0x1C16F18
	0x037F1AC8 B 0x37F1AD8
	0x037F1ACC B 0x37F1B48
	0x037F1AD0 B 0x37F1B48
	0x037F1AD4 B 0x37F1AD8
	0x037F1AD8 MOV X21, X1
	0x037F1ADC MOV X22, X0
	0x037F1AE0 CMP W21, 0x1
	0x037F1AE4 B.NE 0x37F1B18
	0x037F1AE8 MOV X0, X22
	0x037F1AEC BL 0x3EB1AD0

ISIL:
	001 Move [X31-16], X30
	002 Add X0, X31, 8
	003 Move W1, 72
	004 Move W2, 73
	005 Move W3, 68
	006 Move W4, 83
	007 Move X5, X31
	008 Move [X31+8], W31
	009 Call FourCC..ctor, X0, X1, X2, X3, X4
	010 Move W0, [X31+8]
	011 Move X30, [X31+16]
	012 Return X0

Method: UnityEngine.InputSystem.Utilities.FourCC get_QueryHIDParsedReportDescriptorDeviceCommandType()

Disassembly:
	0x037F1AF0 LDR X20, [X0]
	0x037F1AF4 BL 0x3EB1AE0
	0x037F1AF8 ADRP X8, 0x92A000
	0x037F1AFC LDR X8, [X8 + 0xD68]
	0x037F1B00 ADD X0, X31, 0x40
	0x037F1B04 LDR X1, [X8]
	0x037F1B08 BL 0x23C9DBC
	0x037F1B0C CBZ X20, 0x37F1598
	0x037F1B10 MOV X0, X20
	0x037F1B14 BL 0x1C16F18
	0x037F1B18 MOV X20, X31
	0x037F1B1C B 0x37F1B24

ISIL:
	001 Move [X31-16], X30
	002 Add X0, X31, 8
	003 Move W1, 72
	004 Move W2, 73
	005 Move W3, 68
	006 Move W4, 80
	007 Move X5, X31
	008 Move [X31+8], W31
	009 Call FourCC..ctor, X0, X1, X2, X3, X4
	010 Move W0, [X31+8]
	011 Move X30, [X31+16]
	012 Return X0

Method: UnityEngine.InputSystem.HID.HID/HIDDeviceDescriptor get_hidDescriptor()

Disassembly:
	0x037F1B20 MOV X22, X0
	0x037F1B24 ADRP X8, 0x92A000
	0x037F1B28 LDR X8, [X8 + 0xD68]
	0x037F1B2C LDR X1, [X8]
	0x037F1B30 ADD X0, X31, 0x40
	0x037F1B34 BL 0x23C9DBC
	0x037F1B38 CBZ X20, 0x37F1BA8
	0x037F1B3C MOV X0, X20
	0x037F1B40 BL 0x1C16F18
	0x037F1B44 B 0x37F1B48
	0x037F1B48 MOV X22, X0
	0x037F1B4C CMP W1, 0x1
	0x037F1B50 B.NE 0x37F1B84
	0x037F1B54 MOV X0, X22
	0x037F1B58 BL 0x3EB1AD0
	0x037F1B5C LDR X21, [X0]
	0x037F1B60 BL 0x3EB1AE0
	0x037F1B64 ADRP X8, 0x92A000
	0x037F1B68 LDR X8, [X8 + 0xD68]
	0x037F1B6C ADD X0, X31, 0x80
	0x037F1B70 LDR X1, [X8]
	0x037F1B74 BL 0x23C9DBC
	0x037F1B78 CBZ X21, 0x37F17C8
	0x037F1B7C MOV X0, X21
	0x037F1B80 BL 0x1C16F18
	0x037F1B84 MOV X21, X31
	0x037F1B88 B 0x37F1B90
	0x037F1B8C MOV X22, X0
	0x037F1B90 ADRP X8, 0x92A000
	0x037F1B94 LDR X8, [X8 + 0xD68]
	0x037F1B98 LDR X1, [X8]
	0x037F1B9C ADD X0, X31, 0x80
	0x037F1BA0 BL 0x23C9DBC
	0x037F1BA4 CBNZ X21, 0x37F1BB0
	0x037F1BA8 MOV X0, X22
	0x037F1BAC BL 0x1D2C690
	0x037F1BB0 MOV X0, X21
	0x037F1BB4 BL 0x1C16F18
	0x037F1BB8 BL 0x1990590
	0x037F1BBC STR X30, [X31 - 0x10]!
	0x037F1BC0 LDR W8, [X0]
	0x037F1BC4 AND W8, W8, 0xFFFFFFFE
	0x037F1BC8 CMP W8, 0x30

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+96], X30
	003 Move [X31+104], X21
	004 Move [X31+112], X20
	005 Move [X31+120], X19
	006 Move X21, 0xBF1000
	007 Move W9, [X21+876]
	008 Move X20, X0
	009 Move X19, X8
	010 Move TEMP, X9
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x959000
	015 Move X0, [X0+1928]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+876], W8
	019 Move W8, [X20+368]
	020 Compare W8, 0
	021 JumpIfNotEqual {47}
	022 Move X0, [X20+288]
	023 Move X1, X31
	024 Call String.IsNullOrEmpty, X0
	025 Move TEMP, X0
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {45}
	029 Move X8, 0x959000
	030 Move X0, [X20+288]
	031 Move X8, [X8+1928]
	032 Move X1, [X8]
	033 Add X8, X31, 0
	034 Call JsonUtility.FromJson, X0
	035 Move V1, [X31+16]
	036 Move V0, [X31+32]
	037 Move V2, [X31]
	038 Add X8, X20, 376
	039 Move [X31+64], V1
	040 Move [X31+72], V0
	041 Move [X31+3], V2
	042 Move [X8+16], V1
	043 Move [X8+24], V0
	044 Move [X8], V2
	045 Move W8, 1
	046 Move [X20+368], W8
	047 Add X8, X20, 376
	048 Move V1, [X8+16]
	049 Move V0, [X8+32]
	050 Move V2, [X8]
	051 Move X30, [X31+96]
	052 Move X21, [X31+104]
	053 Move [X19+16], V1
	054 Move [X19+24], V0
	055 Move [X19], V2
	056 Move X20, [X31+112]
	057 Move X19, [X31+120]
	058 Add X31, X31, 128
	059 Return X0

Method: System.String OnFindLayoutForDevice(ref UnityEngine.InputSystem.Layouts.InputDeviceDescription description, System.String matchedLayout, UnityEngine.InputSystem.LowLevel.InputDeviceExecuteCommandDelegate executeDeviceCommand)

Disassembly:
	0x037F1BCC B.NE 0x37F1BE0
	0x037F1BD0 LDR W8, [X0 + 0x4]
	0x037F1BD4 CMP W8, 0x1
	0x037F1BD8 CSET W0, EQ
	0x037F1BDC B 0x37F1BEC
	0x037F1BE0 BL 0x37F4678
	0x037F1BE4 CMP X0, 0x0
	0x037F1BE8 CSET W0, NE
	0x037F1BEC LDR X30, [X31], #0x10
	0x037F1BF0 RET
	0x037F1BF4 MOV X1, X31
	0x037F1BF8 B 0x33BDD8C
	0x037F1BFC SUB X31, X31, 0x1A0
	0x037F1C00 STP X29, X30, [X31 + 0x140]
	0x037F1C04 STP X28, X27, [X31 + 0x150]
	0x037F1C08 STP X26, X25, [X31 + 0x160]
	0x037F1C0C STP X24, X23, [X31 + 0x170]
	0x037F1C10 STP X22, X21, [X31 + 0x180]
	0x037F1C14 STP X20, X19, [X31 + 0x190]
	0x037F1C18 ADRP X19, 0xBF0000
	0x037F1C1C LDRB W9, [X19 + 0x37D]
	0x037F1C20 STR X0, [X31 + 0x38]
	0x037F1C24 STR X8, [X31 + 0x10]
	0x037F1C28 TBNZ X9, 0x0, 0x37F1C88
	0x037F1C2C ADRP X0, 0x958000
	0x037F1C30 LDR X0, [X0 + 0x830]
	0x037F1C34 BL 0x1C16CF4
	0x037F1C38 ADRP X0, 0x958000
	0x037F1C3C LDR X0, [X0 + 0x838]
	0x037F1C40 BL 0x1C16CF4
	0x037F1C44 ADRP X0, 0x958000
	0x037F1C48 LDR X0, [X0 + 0x840]
	0x037F1C4C BL 0x1C16CF4
	0x037F1C50 ADRP X0, 0x958000
	0x037F1C54 LDR X0, [X0 + 0x848]
	0x037F1C58 BL 0x1C16CF4
	0x037F1C5C ADRP X0, 0x958000
	0x037F1C60 LDR X0, [X0 + 0x850]
	0x037F1C64 BL 0x1C16CF4
	0x037F1C68 ADRP X0, 0x935000
	0x037F1C6C LDR X0, [X0 + 0xFD8]
	0x037F1C70 BL 0x1C16CF4
	0x037F1C74 ADRP X0, 0x958000
	0x037F1C78 LDR X0, [X0 + 0x858]
	0x037F1C7C BL 0x1C16CF4
	0x037F1C80 MOVZ W8, 0x1
	0x037F1C84 STRB W8, [X19 + 0x37D]
	0x037F1C88 ADRP X19, 0xBEB000
	0x037F1C8C LDRB W8, [X19 + 0x3AB]
	0x037F1C90 STR W31, [X31 + 0xD8]
	0x037F1C94 STP X31, X31, [X31 + 0xC8]
	0x037F1C98 STP X31, X31, [X31 + 0xB8]
	0x037F1C9C STP X31, X31, [X31 + 0xA8]
	0x037F1CA0 STP X31, X31, [X31 + 0x98]
	0x037F1CA4 STR X31, [X31 + 0x90]
	0x037F1CA8 CBNZ W8, 0x37F1CC0
	0x037F1CAC ADRP X0, 0x929000
	0x037F1CB0 LDR X0, [X0 + 0x290]
	0x037F1CB4 BL 0x1C16CF4
	0x037F1CB8 MOVZ W8, 0x1
	0x037F1CBC STRB W8, [X19 + 0x3AB]
	0x037F1CC0 LDR X0, [X31 + 0x38]
	0x037F1CC4 CBZ X0, 0x37F1CE0
	0x037F1CC8 MOV X1, X31
	0x037F1CCC BL 0x3225708
	0x037F1CD0 LDR X8, [X31 + 0x38]
	0x037F1CD4 MOV X23, X0
	0x037F1CD8 LDR W24, [X8 + 0x10]
	0x037F1CDC B 0x37F1CE8
	0x037F1CE0 MOV X23, X31
	0x037F1CE4 MOV X24, X31
	0x037F1CE8 STR W31, [X31 + 0xD8]
	0x037F1CEC ADD X0, X31, 0xD8
	0x037F1CF0 MOVZ W3, 0x7B
	0x037F1CF4 MOV X1, X23
	0x037F1CF8 MOV X2, X24
	0x037F1CFC MOV X4, X31
	0x037F1D00 BL 0x3765200
	0x037F1D04 ADD X0, X31, 0xD8
	0x037F1D08 ADD X3, X31, 0xA0
	0x037F1D0C MOV X1, X23
	0x037F1D10 MOV X2, X24
	0x037F1D14 MOV X4, X31
	0x037F1D18 BL 0x3765684
	0x037F1D1C ADD X0, X31, 0xD8
	0x037F1D20 MOVZ W3, 0x3A
	0x037F1D24 MOV X1, X23
	0x037F1D28 MOV X2, X24
	0x037F1D2C MOV X4, X31
	0x037F1D30 BL 0x3765200
	0x037F1D34 ADD X0, X31, 0xD8
	0x037F1D38 MOV X1, X23
	0x037F1D3C MOV X2, X24
	0x037F1D40 MOV X3, X31
	0x037F1D44 BL 0x3765300
	0x037F1D48 STR W0, [X31 + 0x34]
	0x037F1D4C ADD X0, X31, 0xD8
	0x037F1D50 MOVZ W3, 0x2C
	0x037F1D54 MOV X1, X23
	0x037F1D58 MOV X2, X24
	0x037F1D5C MOV X4, X31
	0x037F1D60 BL 0x376564C
	0x037F1D64 ADD X0, X31, 0xD8
	0x037F1D68 ADD X3, X31, 0xA0
	0x037F1D6C MOV X1, X23
	0x037F1D70 MOV X2, X24
	0x037F1D74 MOV X4, X31
	0x037F1D78 BL 0x3765684
	0x037F1D7C ADD X0, X31, 0xD8
	0x037F1D80 MOVZ W3, 0x3A
	0x037F1D84 MOV X1, X23
	0x037F1D88 MOV X2, X24
	0x037F1D8C MOV X4, X31
	0x037F1D90 BL 0x3765200
	0x037F1D94 ADD X0, X31, 0xD8
	0x037F1D98 MOV X1, X23
	0x037F1D9C MOV X2, X24
	0x037F1DA0 MOV X3, X31
	0x037F1DA4 BL 0x3765300
	0x037F1DA8 STR W0, [X31 + 0x30]
	0x037F1DAC ADD X0, X31, 0xD8
	0x037F1DB0 MOVZ W3, 0x2C
	0x037F1DB4 MOV X1, X23
	0x037F1DB8 MOV X2, X24
	0x037F1DBC MOV X4, X31
	0x037F1DC0 BL 0x376564C
	0x037F1DC4 ADD X0, X31, 0xD8
	0x037F1DC8 ADD X3, X31, 0xA0
	0x037F1DCC MOV X1, X23
	0x037F1DD0 MOV X2, X24
	0x037F1DD4 MOV X4, X31
	0x037F1DD8 BL 0x3765684
	0x037F1DDC ADD X0, X31, 0xD8
	0x037F1DE0 MOVZ W3, 0x3A
	0x037F1DE4 MOV X1, X23
	0x037F1DE8 MOV X2, X24
	0x037F1DEC MOV X4, X31
	0x037F1DF0 BL 0x3765200
	0x037F1DF4 ADD X0, X31, 0xD8
	0x037F1DF8 MOV X1, X23
	0x037F1DFC MOV X2, X24
	0x037F1E00 MOV X3, X31
	0x037F1E04 BL 0x3765300
	0x037F1E08 STR W0, [X31 + 0x2C]
	0x037F1E0C ADD X0, X31, 0xD8
	0x037F1E10 MOVZ W3, 0x2C
	0x037F1E14 MOV X1, X23
	0x037F1E18 MOV X2, X24
	0x037F1E1C MOV X4, X31
	0x037F1E20 BL 0x376564C
	0x037F1E24 ADD X0, X31, 0xD8
	0x037F1E28 ADD X3, X31, 0xA0
	0x037F1E2C MOV X1, X23
	0x037F1E30 MOV X2, X24
	0x037F1E34 MOV X4, X31
	0x037F1E38 BL 0x3765684
	0x037F1E3C ADD X0, X31, 0xD8
	0x037F1E40 MOVZ W3, 0x3A
	0x037F1E44 MOV X1, X23
	0x037F1E48 MOV X2, X24
	0x037F1E4C MOV X4, X31
	0x037F1E50 BL 0x3765200
	0x037F1E54 ADD X0, X31, 0xD8
	0x037F1E58 MOV X1, X23
	0x037F1E5C MOV X2, X24
	0x037F1E60 MOV X3, X31
	0x037F1E64 BL 0x3765300
	0x037F1E68 STR W0, [X31 + 0x28]
	0x037F1E6C ADD X0, X31, 0xD8
	0x037F1E70 MOVZ W3, 0x2C
	0x037F1E74 MOV X1, X23
	0x037F1E78 MOV X2, X24
	0x037F1E7C MOV X4, X31
	0x037F1E80 BL 0x376564C
	0x037F1E84 ADD X0, X31, 0xD8
	0x037F1E88 ADD X3, X31, 0xA0
	0x037F1E8C MOV X1, X23
	0x037F1E90 MOV X2, X24
	0x037F1E94 MOV X4, X31
	0x037F1E98 BL 0x3765684
	0x037F1E9C ADD X0, X31, 0xD8
	0x037F1EA0 MOVZ W3, 0x3A
	0x037F1EA4 MOV X1, X23
	0x037F1EA8 MOV X2, X24
	0x037F1EAC MOV X4, X31
	0x037F1EB0 BL 0x3765200
	0x037F1EB4 ADD X0, X31, 0xD8
	0x037F1EB8 MOV X1, X23
	0x037F1EBC MOV X2, X24
	0x037F1EC0 MOV X3, X31
	0x037F1EC4 BL 0x3765300
	0x037F1EC8 STR W0, [X31 + 0x24]
	0x037F1ECC ADD X0, X31, 0xD8
	0x037F1ED0 MOVZ W3, 0x2C
	0x037F1ED4 MOV X1, X23
	0x037F1ED8 MOV X2, X24
	0x037F1EDC MOV X4, X31
	0x037F1EE0 BL 0x376564C
	0x037F1EE4 ADD X0, X31, 0xD8
	0x037F1EE8 ADD X3, X31, 0xA0
	0x037F1EEC MOV X1, X23
	0x037F1EF0 MOV X2, X24
	0x037F1EF4 MOV X4, X31
	0x037F1EF8 BL 0x3765684
	0x037F1EFC ADD X0, X31, 0xD8
	0x037F1F00 MOVZ W3, 0x3A
	0x037F1F04 MOV X1, X23
	0x037F1F08 MOV X2, X24
	0x037F1F0C MOV X4, X31
	0x037F1F10 BL 0x3765200
	0x037F1F14 ADD X0, X31, 0xD8
	0x037F1F18 MOV X1, X23
	0x037F1F1C MOV X2, X24
	0x037F1F20 MOV X3, X31
	0x037F1F24 BL 0x3765300
	0x037F1F28 STR W0, [X31 + 0x20]
	0x037F1F2C ADD X0, X31, 0xD8
	0x037F1F30 MOVZ W3, 0x2C
	0x037F1F34 MOV X1, X23
	0x037F1F38 MOV X2, X24
	0x037F1F3C MOV X4, X31
	0x037F1F40 BL 0x376564C
	0x037F1F44 ADD X0, X31, 0xD8
	0x037F1F48 ADD X3, X31, 0xA0
	0x037F1F4C MOV X1, X23
	0x037F1F50 MOV X2, X24
	0x037F1F54 MOV X4, X31
	0x037F1F58 BL 0x3765684
	0x037F1F5C ADD X0, X31, 0xD8
	0x037F1F60 MOVZ W3, 0x3A
	0x037F1F64 MOV X1, X23
	0x037F1F68 MOV X2, X24
	0x037F1F6C MOV X4, X31
	0x037F1F70 BL 0x3765200
	0x037F1F74 ADD X0, X31, 0xD8
	0x037F1F78 MOV X1, X23
	0x037F1F7C MOV X2, X24
	0x037F1F80 MOV X3, X31
	0x037F1F84 BL 0x3765300
	0x037F1F88 STR W0, [X31 + 0x1C]
	0x037F1F8C ADD X0, X31, 0xD8
	0x037F1F90 MOVZ W3, 0x2C
	0x037F1F94 MOV X1, X23
	0x037F1F98 MOV X2, X24
	0x037F1F9C MOV X4, X31
	0x037F1FA0 BL 0x376564C
	0x037F1FA4 ADD X0, X31, 0xD8
	0x037F1FA8 ADD X3, X31, 0xC8
	0x037F1FAC MOV X1, X23
	0x037F1FB0 MOV X2, X24
	0x037F1FB4 MOV X4, X31
	0x037F1FB8 BL 0x3765684
	0x037F1FBC ADRP X8, 0x935000
	0x037F1FC0 LDR X8, [X8 + 0xFD8]
	0x037F1FC4 LDR X1, [X8]
	0x037F1FC8 ADD X0, X31, 0xC8
	0x037F1FCC BL 0x25BED38
	0x037F1FD0 ADRP X8, 0x958000
	0x037F1FD4 LDR X8, [X8 + 0x858]
	0x037F1FD8 LDR X1, [X8]
	0x037F1FDC MOV X2, X31
	0x037F1FE0 BL 0x3226EF8
	0x037F1FE4 TBZ X0, 0x0, 0x37F1FF4
	0x037F1FE8 MOV X8, X31
	0x037F1FEC MOV X19, X31
	0x037F1FF0 B 0x37F278C
	0x037F1FF4 ADD X0, X31, 0xD8
	0x037F1FF8 MOVZ W3, 0x3A
	0x037F1FFC MOV X1, X23
	0x037F2000 MOV X2, X24
	0x037F2004 MOV X4, X31
	0x037F2008 BL 0x3765200
	0x037F200C ADD X0, X31, 0xD8
	0x037F2010 MOVZ W3, 0x5B
	0x037F2014 MOV X1, X23
	0x037F2018 MOV X2, X24
	0x037F201C MOV X4, X31
	0x037F2020 BL 0x3765200
	0x037F2024 ADRP X8, 0x957000
	0x037F2028 LDR X8, [X8 + 0x838]
	0x037F202C LDR X0, [X8]
	0x037F2030 LDR W8, [X0 + 0xE0]
	0x037F2034 CBNZ W8, 0x37F203C
	0x037F2038 BL 0x1C16DFC
	0x037F203C ADRP X8, 0x957000
	0x037F2040 LDR X8, [X8 + 0x830]
	0x037F2044 LDR X1, [X8]
	0x037F2048 ADD X0, X31, 0xB0
	0x037F204C BL 0x28FB028
	0x037F2050 ADD X8, X31, 0xF8
	0x037F2054 ADD X8, X8, 0x38
	0x037F2058 STP X0, X1, [X31 + 0xB8]
	0x037F205C STR X8, [X31 + 0x40]
	0x037F2060 ADD X0, X31, 0xD8
	0x037F2064 MOVZ W3, 0x5D
	0x037F2068 MOV X1, X23
	0x037F206C MOV X2, X24
	0x037F2070 MOV X4, X31
	0x037F2074 BL 0x376564C
	0x037F2078 TBNZ X0, 0x0, 0x37F2740
	0x037F207C ADD X0, X31, 0xD8
	0x037F2080 MOVZ W3, 0x2C
	0x037F2084 MOV X1, X23
	0x037F2088 MOV X2, X24
	0x037F208C MOV X4, X31
	0x037F2090 BL 0x376564C
	0x037F2094 ADD X0, X31, 0xD8
	0x037F2098 MOVZ W3, 0x7B
	0x037F209C MOV X1, X23
	0x037F20A0 MOV X2, X24
	0x037F20A4 MOV X4, X31
	0x037F20A8 BL 0x3765200
	0x037F20AC STP X31, X31, [X31 + 0x90]
	0x037F20B0 ADD X0, X31, 0xD8
	0x037F20B4 MOVZ W3, 0x7D
	0x037F20B8 MOV X1, X23
	0x037F20BC MOV X2, X24
	0x037F20C0 MOV X4, X31
	0x037F20C4 BL 0x376564C
	0x037F20C8 ADD X0, X31, 0xD8
	0x037F20CC MOVZ W3, 0x2C
	0x037F20D0 MOV X1, X23
	0x037F20D4 MOV X2, X24
	0x037F20D8 MOV X4, X31
	0x037F20DC BL 0x376564C
	0x037F20E0 ADD X0, X31, 0xD8
	0x037F20E4 MOV X1, X23
	0x037F20E8 MOV X2, X24
	0x037F20EC MOV X3, X31
	0x037F20F0 BL 0x3765424
	0x037F20F4 ADD X0, X31, 0xD8
	0x037F20F8 MOVZ W3, 0x3A
	0x037F20FC MOV X1, X23
	0x037F2100 MOV X2, X24
	0x037F2104 MOV X4, X31
	0x037F2108 BL 0x3765200
	0x037F210C ADD X0, X31, 0xD8
	0x037F2110 MOV X1, X23
	0x037F2114 MOV X2, X24
	0x037F2118 MOV X3, X31
	0x037F211C BL 0x3765300
	0x037F2120 STR W0, [X31 + 0x5C]
	0x037F2124 ADD X0, X31, 0xD8
	0x037F2128 MOVZ W3, 0x2C
	0x037F212C MOV X1, X23
	0x037F2130 MOV X2, X24
	0x037F2134 MOV X4, X31
	0x037F2138 BL 0x376564C
	0x037F213C ADD X0, X31, 0xD8
	0x037F2140 MOV X1, X23
	0x037F2144 MOV X2, X24
	0x037F2148 MOV X3, X31
	0x037F214C BL 0x3765424
	0x037F2150 ADD X0, X31, 0xD8
	0x037F2154 MOVZ W3, 0x3A
	0x037F2158 MOV X1, X23
	0x037F215C MOV X2, X24
	0x037F2160 MOV X4, X31
	0x037F2164 BL 0x3765200
	0x037F2168 ADD X0, X31, 0xD8
	0x037F216C MOV X1, X23
	0x037F2170 MOV X2, X24
	0x037F2174 MOV X3, X31
	0x037F2178 BL 0x3765300
	0x037F217C STR W0, [X31 + 0x58]
	0x037F2180 ADD X0, X31, 0xD8
	0x037F2184 MOVZ W3, 0x2C
	0x037F2188 MOV X1, X23
	0x037F218C MOV X2, X24
	0x037F2190 MOV X4, X31
	0x037F2194 BL 0x376564C
	0x037F2198 ADD X0, X31, 0xD8
	0x037F219C MOV X1, X23
	0x037F21A0 MOV X2, X24
	0x037F21A4 MOV X3, X31
	0x037F21A8 BL 0x3765424
	0x037F21AC ADD X0, X31, 0xD8
	0x037F21B0 MOVZ W3, 0x3A
	0x037F21B4 MOV X1, X23
	0x037F21B8 MOV X2, X24
	0x037F21BC MOV X4, X31
	0x037F21C0 BL 0x3765200
	0x037F21C4 ADD X0, X31, 0xD8
	0x037F21C8 MOV X1, X23
	0x037F21CC MOV X2, X24
	0x037F21D0 MOV X3, X31
	0x037F21D4 BL 0x3765300
	0x037F21D8 STR W0, [X31 + 0x54]
	0x037F21DC ADD X0, X31, 0xD8
	0x037F21E0 MOVZ W3, 0x2C
	0x037F21E4 MOV X1, X23
	0x037F21E8 MOV X2, X24
	0x037F21EC MOV X4, X31
	0x037F21F0 BL 0x376564C
	0x037F21F4 ADD X0, X31, 0xD8
	0x037F21F8 MOV X1, X23
	0x037F21FC MOV X2, X24
	0x037F2200 MOV X3, X31
	0x037F2204 BL 0x3765424
	0x037F2208 ADD X0, X31, 0xD8
	0x037F220C MOVZ W3, 0x3A
	0x037F2210 MOV X1, X23
	0x037F2214 MOV X2, X24
	0x037F2218 MOV X4, X31
	0x037F221C BL 0x3765200
	0x037F2220 ADD X0, X31, 0xD8
	0x037F2224 MOV X1, X23
	0x037F2228 MOV X2, X24
	0x037F222C MOV X3, X31
	0x037F2230 BL 0x3765300
	0x037F2234 STR W0, [X31 + 0x50]
	0x037F2238 ADD X0, X31, 0xD8
	0x037F223C MOVZ W3, 0x2C
	0x037F2240 MOV X1, X23
	0x037F2244 MOV X2, X24
	0x037F2248 MOV X4, X31
	0x037F224C BL 0x376564C
	0x037F2250 ADD X0, X31, 0xD8
	0x037F2254 MOV X1, X23
	0x037F2258 MOV X2, X24
	0x037F225C MOV X3, X31
	0x037F2260 BL 0x3765424
	0x037F2264 ADD X0, X31, 0xD8
	0x037F2268 MOVZ W3, 0x3A
	0x037F226C MOV X1, X23
	0x037F2270 MOV X2, X24
	0x037F2274 MOV X4, X31
	0x037F2278 BL 0x3765200
	0x037F227C ADD X0, X31, 0xD8
	0x037F2280 MOV X1, X23
	0x037F2284 MOV X2, X24
	0x037F2288 MOV X3, X31
	0x037F228C BL 0x3765300
	0x037F2290 STR W0, [X31 + 0x4C]
	0x037F2294 ADD X0, X31, 0xD8
	0x037F2298 MOVZ W3, 0x2C
	0x037F229C MOV X1, X23
	0x037F22A0 MOV X2, X24
	0x037F22A4 MOV X4, X31
	0x037F22A8 BL 0x376564C
	0x037F22AC ADD X0, X31, 0xD8
	0x037F22B0 MOV X1, X23
	0x037F22B4 MOV X2, X24
	0x037F22B8 MOV X3, X31
	0x037F22BC BL 0x3765424
	0x037F22C0 ADD X0, X31, 0xD8
	0x037F22C4 MOVZ W3, 0x3A
	0x037F22C8 MOV X1, X23
	0x037F22CC MOV X2, X24
	0x037F22D0 MOV X4, X31
	0x037F22D4 BL 0x3765200
	0x037F22D8 ADD X0, X31, 0xD8
	0x037F22DC MOV X1, X23
	0x037F22E0 MOV X2, X24
	0x037F22E4 MOV X3, X31
	0x037F22E8 BL 0x3765300
	0x037F22EC MOV W27, W0
	0x037F22F0 ADD X0, X31, 0xD8
	0x037F22F4 MOVZ W3, 0x2C
	0x037F22F8 MOV X1, X23
	0x037F22FC MOV X2, X24
	0x037F2300 MOV X4, X31
	0x037F2304 BL 0x376564C
	0x037F2308 ADD X0, X31, 0xD8
	0x037F230C MOV X1, X23
	0x037F2310 MOV X2, X24
	0x037F2314 MOV X3, X31
	0x037F2318 BL 0x3765424
	0x037F231C ADD X0, X31, 0xD8
	0x037F2320 MOVZ W3, 0x3A
	0x037F2324 MOV X1, X23
	0x037F2328 MOV X2, X24
	0x037F232C MOV X4, X31
	0x037F2330 BL 0x3765200
	0x037F2334 ADD X0, X31, 0xD8
	0x037F2338 MOV X1, X23
	0x037F233C MOV X2, X24
	0x037F2340 MOV X3, X31
	0x037F2344 BL 0x3765300
	0x037F2348 MOV W28, W0
	0x037F234C ADD X0, X31, 0xD8
	0x037F2350 MOVZ W3, 0x2C
	0x037F2354 MOV X1, X23
	0x037F2358 MOV X2, X24
	0x037F235C MOV X4, X31
	0x037F2360 BL 0x376564C
	0x037F2364 ADD X0, X31, 0xD8
	0x037F2368 MOV X1, X23
	0x037F236C MOV X2, X24
	0x037F2370 MOV X3, X31
	0x037F2374 BL 0x3765424
	0x037F2378 ADD X0, X31, 0xD8
	0x037F237C MOVZ W3, 0x3A
	0x037F2380 MOV X1, X23
	0x037F2384 MOV X2, X24
	0x037F2388 MOV X4, X31
	0x037F238C BL 0x3765200
	0x037F2390 ADD X0, X31, 0xD8
	0x037F2394 MOV X1, X23
	0x037F2398 MOV X2, X24
	0x037F239C MOV X3, X31
	0x037F23A0 BL 0x3765300
	0x037F23A4 MOV W29, W0
	0x037F23A8 ADD X0, X31, 0xD8
	0x037F23AC MOVZ W3, 0x2C
	0x037F23B0 MOV X1, X23
	0x037F23B4 MOV X2, X24
	0x037F23B8 MOV X4, X31
	0x037F23BC BL 0x376564C
	0x037F23C0 ADD X0, X31, 0xD8
	0x037F23C4 MOV X1, X23
	0x037F23C8 MOV X2, X24
	0x037F23CC MOV X3, X31
	0x037F23D0 BL 0x3765424
	0x037F23D4 ADD X0, X31, 0xD8
	0x037F23D8 MOVZ W3, 0x3A
	0x037F23DC MOV X1, X23
	0x037F23E0 MOV X2, X24
	0x037F23E4 MOV X4, X31
	0x037F23E8 BL 0x3765200
	0x037F23EC ADD X0, X31, 0xD8
	0x037F23F0 MOV X1, X23
	0x037F23F4 MOV X2, X24
	0x037F23F8 MOV X3, X31
	0x037F23FC BL 0x3765300
	0x037F2400 MOV W19, W0
	0x037F2404 ADD X0, X31, 0xD8
	0x037F2408 MOVZ W3, 0x2C
	0x037F240C MOV X1, X23
	0x037F2410 MOV X2, X24
	0x037F2414 MOV X4, X31
	0x037F2418 BL 0x376564C
	0x037F241C ADD X0, X31, 0xD8
	0x037F2420 MOV X1, X23
	0x037F2424 MOV X2, X24
	0x037F2428 MOV X3, X31
	0x037F242C BL 0x3765424
	0x037F2430 ADD X0, X31, 0xD8
	0x037F2434 MOVZ W3, 0x3A
	0x037F2438 MOV X1, X23
	0x037F243C MOV X2, X24
	0x037F2440 MOV X4, X31
	0x037F2444 BL 0x3765200
	0x037F2448 ADD X0, X31, 0xD8
	0x037F244C MOV X1, X23
	0x037F2450 MOV X2, X24
	0x037F2454 MOV X3, X31
	0x037F2458 BL 0x3765300
	0x037F245C MOV W20, W0
	0x037F2460 ADD X0, X31, 0xD8
	0x037F2464 MOVZ W3, 0x2C
	0x037F2468 MOV X1, X23
	0x037F246C MOV X2, X24
	0x037F2470 MOV X4, X31
	0x037F2474 BL 0x376564C
	0x037F2478 ADD X0, X31, 0xD8
	0x037F247C MOV X1, X23
	0x037F2480 MOV X2, X24
	0x037F2484 MOV X3, X31
	0x037F2488 BL 0x3765424
	0x037F248C ADD X0, X31, 0xD8
	0x037F2490 MOVZ W3, 0x3A
	0x037F2494 MOV X1, X23
	0x037F2498 MOV X2, X24
	0x037F249C MOV X4, X31

ISIL:
	001 Subtract X31, X31, 384
	002 Move [X31+288], X29
	003 Move [X31+296], X30
	004 Move [X31+304], X28
	005 Move [X31+312], X27
	006 Move [X31+320], X26
	007 Move [X31+328], X25
	008 Move [X31+336], X24
	009 Move [X31+344], X23
	010 Move [X31+352], X22
	011 Move [X31+360], X21
	012 Move [X31+368], X20
	013 Move [X31+376], X19
	014 NotImplemented "Instruction MRS not yet implemented."
	015 Move X8, [X24+40]
	016 Move X23, 0xBF1000
	017 Move X20, 0x959000
	018 Move X21, X2
	019 Move [X31+280], X8
	020 Move W8, [X23+877]
	021 Move X20, [X20+1936]
	022 Move X22, X1
	023 Move X19, X0
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {123}
	028 Move X0, 0x959000
	029 Move X0, [X0+1944]
	030 Call 0x1C17CF4
	031 Move X0, 0x958000
	032 Move X0, [X0+3600]
	033 Call 0x1C17CF4
	034 Move X0, 0x959000
	035 Move X0, [X0+1952]
	036 Call 0x1C17CF4
	037 Move X0, 0x959000
	038 Move X0, [X0+1960]
	039 Call 0x1C17CF4
	040 Move X0, 0x959000
	041 Move X0, [X0+1968]
	042 Call 0x1C17CF4
	043 Move X0, 0x959000
	044 Move X0, [X0+1976]
	045 Call 0x1C17CF4
	046 Move X0, 0x959000
	047 Move X0, [X0+1984]
	048 Call 0x1C17CF4
	049 Move X0, 0x92B000
	050 Move X0, [X0+3776]
	051 Call 0x1C17CF4
	052 Move X0, 0x92B000
	053 Move X0, [X0+624]
	054 Call 0x1C17CF4
	055 Move X0, 0x903000
	056 Move X0, [X0+1880]
	057 Call 0x1C17CF4
	058 Move X0, 0x958000
	059 Move X0, [X0+1088]
	060 Call 0x1C17CF4
	061 Move X0, 0x958000
	062 Move X0, [X0+4016]
	063 Call 0x1C17CF4
	064 Move X0, 0x903000
	065 Move X0, [X0+2512]
	066 Call 0x1C17CF4
	067 Move X0, 0x959000
	068 Move X0, [X0+1992]
	069 Call 0x1C17CF4
	070 Move X0, 0x903000
	071 Move X0, [X0+2760]
	072 Call 0x1C17CF4
	073 Move X0, 0x903000
	074 Move X0, [X0+1728]
	075 Call 0x1C17CF4
	076 Move X0, 0x959000
	077 Move X0, [X0+2000]
	078 Call 0x1C17CF4
	079 Move X0, 0x959000
	080 Move X0, [X0+1936]
	081 Call 0x1C17CF4
	082 Move X0, 0x959000
	083 Move X0, [X0+2008]
	084 Call 0x1C17CF4
	085 Move X0, 0x93A000
	086 Move X0, [X0+440]
	087 Call 0x1C17CF4
	088 Move X0, 0x959000
	089 Move X0, [X0+2016]
	090 Call 0x1C17CF4
	091 Move X0, 0x903000
	092 Move X0, [X0+3544]
	093 Call 0x1C17CF4
	094 Move X0, 0x959000
	095 Move X0, [X0+2024]
	096 Call 0x1C17CF4
	097 Move X0, 0x957000
	098 Move X0, [X0+3536]
	099 Call 0x1C17CF4
	100 Move X0, 0x959000
	101 Move X0, [X0+2032]
	102 Call 0x1C17CF4
	103 Move X0, 0x959000
	104 Move X0, [X0+2040]
	105 Call 0x1C17CF4
	106 Move X0, 0x959000
	107 Move X0, [X0+2048]
	108 Call 0x1C17CF4
	109 Move X0, 0x958000
	110 Move X0, [X0+1680]
	111 Call 0x1C17CF4
	112 Move X0, 0x959000
	113 Move X0, [X0+2056]
	114 Call 0x1C17CF4
	115 Move X0, 0x903000
	116 Move X0, [X0+2440]
	117 Call 0x1C17CF4
	118 Move X0, 0x959000
	119 Move X0, [X0+2064]
	120 Call 0x1C17CF4
	121 Move W8, 1
	122 Move [X23+877], W8
	123 Move X0, [X20]
	124 Move [X31+248], X31
	125 Move [X31+168], X31
	126 Call 0x1C17F10
	127 Move X1, X31
	128 Move X20, X0
	129 Call Object..ctor, X0
	130 Move X0, X22
	131 Move X1, X31
	132 Call String.IsNullOrEmpty, X0
	133 Move X27, X31
	134 Move TEMP, X0
	135 And TEMP, TEMP, 1
	136 Compare TEMP, 1
	137 JumpIfNotEqual {595}
	138 Move X29, 0x959000
	139 Move X29, [X29+2056]
	140 Move X0, [X19]
	141 Move X2, X31
	142 Move X1, [X29]
	143 Call String.op_Inequality, X0, X1
	144 Move X27, X31
	145 Move TEMP, X0
	146 And TEMP, TEMP, 1
	147 Compare TEMP, 1
	148 JumpIfEqual {595}
	149 Add X8, X31, 176
	150 Move X0, X19
	151 Move X1, X21
	152 Call HID.ReadHIDDeviceDescriptor, X0, X1
	153 Move V0, [X31+12]
	154 Move X23, [X31+208]
	155 Move X8, [X31+216]
	156 Move W28, [X31+176]
	157 Move W26, [X31+180]
	158 Move W21, [X31+184]
	159 Move W22, [X31+188]
	160 Move X0, X31
	161 Move [X31+24], X8
	162 Move [X31+16], V0
	163 Call HIDSupport.get_supportedHIDUsages
	164 Move X8, 0x959000
	165 Move X8, [X8+1992]
	166 Move [X31+176], X0
	167 Move [X31+184], X1
	168 Add X1, X31, 176
	169 Move X8, [X8]
	170 Move X0, X8
	171 Call 0x1C17E04
	172 Move X25, X0
	173 Add X0, X31, 96
	174 Move W1, W22
	175 Move W2, W21
	176 Move X3, X31
	177 Move [X31+96], X31
	178 Call HIDPageUsage..ctor, X0, X1, X2
	179 Move X8, 0x959000
	180 Move X1, [X31+96]
	181 Move X8, [X8+1944]
	182 Move X0, X25
	183 Move X2, [X8]
	184 Call Enumerable.Contains, X0, X1
	185 Move X27, X31
	186 Compare X23, 0
	187 JumpIfEqual {595}
	188 Move TEMP, X0
	189 And TEMP, TEMP, 1
	190 Compare TEMP, 1
	191 JumpIfNotEqual {595}
	192 Move X8, [X23+24]
	193 NotImplemented "Instruction CMP not yet implemented."
	194 Move [X31+20], W26
	195 Move X25, X31
	196 And X27, X8, 0
	197 Move W26, 32
	198 NotImplemented "Instruction CMP not yet implemented."
	199 Add X1, X23, X26
	200 Add X0, X31, 176
	201 Move W2, 72
	202 Call 0x3EB2AC0
	203 Move W8, [X31+176]
	204 And W8, W8, 0xFFFFFFFE
	205 NotImplemented "Instruction CMP not yet implemented."
	206 Move W8, [X31+180]
	207 NotImplemented "Instruction CMP not yet implemented."
	208 Add X0, X31, 176
	209 Call HIDElementDescriptor.DetermineLayout, X0
	210 Compare X0, 0
	211 JumpIfNotEqual {217}
	212 Move W27, [X23+24]
	213 Add X25, X25, 1
	214 NotImplemented "Instruction CMP not yet implemented."
	215 Add X26, X26, 72
	216 Move X27, X31
	217 Move X27, 0x903000
	218 Move X27, [X27+1728]
	219 Move X9, 0x959000
	220 Move X0, [X27]
	221 Move X9, [X9+1968]
	222 Move W8, [X0+224]
	223 Move X25, [X9]
	224 Compare W8, 0
	225 JumpIfNotEqual {227}
	226 Call 0x1C17DFC
	227 Move X0, X25
	228 Move X1, X31
	229 Call Type.GetTypeFromHandle, X0
	230 Move X25, [X29]
	231 NotImplemented "Instruction CMP not yet implemented."
	232 Move X26, X0
	233 And W8, W21, 0xFFFFFFFE
	234 NotImplemented "Instruction CMP not yet implemented."
	235 Move X8, 0x958000
	236 Move X0, [X27]
	237 Move X8, [X8+1680]
	238 Move X25, [X8]
	239 Move X8, 0x958000
	240 Move X8, [X8+1088]
	241 Move W9, [X0+224]
	242 Move X26, [X8]
	243 Compare W9, 0
	244 JumpIfNotEqual {246}
	245 Call 0x1C17DFC
	246 Move X0, X26
	247 Move X1, X31
	248 Call Type.GetTypeFromHandle, X0
	249 Move X26, X0
	250 Move X8, 0x903000
	251 Move X9, 0x958000
	252 Move X8, [X8+2440]
	253 Move X9, [X9+1680]
	254 Move X0, X25
	255 Move X2, X31
	256 Move X27, [X8]
	257 Move X1, [X9]
	258 Call String.op_Inequality, X0, X1
	259 Move TEMP, X0
	260 And TEMP, TEMP, 1
	261 Compare TEMP, 1
	262 JumpIfNotEqual {299}
	263 NotImplemented "Instruction CMP not yet implemented."
	264 Move X8, 0x959000
	265 Move X8, [X8+1952]
	266 Add X1, X31, 96
	267 Move [X31+96], W21
	268 Move X0, [X8]
	269 Call 0x1C17E04
	270 Move X8, 0x93A000
	271 Move X8, [X8+440]
	272 Move X1, X0
	273 Move X2, X31
	274 Move X8, [X8]
	275 Move X0, X8
	276 Call String.Format, X0, X1
	277 Move X8, 0x959000
	278 Move X8, [X8+2008]
	279 Add X1, X31, 96
	280 Move [X31+96], W22
	281 Move X0, [X8]
	282 Call 0x1C17E04
	283 Move X8, 0x903000
	284 Move X8, [X8+1880]
	285 Move X27, X0
	286 Add X1, X31, 164
	287 Move [X31+164], W21
	288 Move X0, [X8]
	289 Call 0x1C17E04
	290 Move X8, 0x958000
	291 Move X8, [X8+2016]
	292 Move X2, X0
	293 Move X1, X27
	294 Move X3, X31
	295 Move X8, [X8]
	296 Move X0, X8
	297 Call String.Format, X0, X1, X2
	298 Move X27, X0
	299 Move X9, 0x92A000
	300 Move V0, [X19]
	301 Move V1, [X19+16]
	302 Move X8, [X19+48]
	303 Move V2, [X19+2]
	304 Move X9, [X9+3776]
	305 Move [X31+6], V0
	306 Move [X31+144], X8
	307 Move [X31+112], V1
	308 Move [X31+120], V2
	309 Move X0, [X9]
	310 Move W8, [X0+224]
	311 Compare W8, 0
	312 JumpIfNotEqual {314}
	313 Call 0x1C17DFC
	314 Move V0, [X31+96]
	315 Move V1, [X31+112]
	316 Move V2, [X31+8]
	317 Move X8, [X31+144]
	318 Add X0, X31, 32
	319 Move X1, X31
	320 Move [X31+32], V0
	321 Move [X31+40], V1
	322 Move [X31+4], V2
	323 Move [X31+80], X8
	324 Call InputDeviceMatcher.FromDeviceDescription, X0
	325 Move [X31+248], X0
	326 Move X0, [X19+24]
	327 Move X1, X31
	328 Call String.IsNullOrEmpty, X0
	329 Move TEMP, X0
	330 And TEMP, TEMP, 1
	331 Compare TEMP, 1
	332 JumpIfEqual {340}
	333 Move X0, [X19+16]
	334 Move X1, X31
	335 Call String.IsNullOrEmpty, X0
	336 Move TEMP, X0
	337 And TEMP, TEMP, 1
	338 Compare TEMP, 1
	339 JumpIfNotEqual {461}
	340 Move X0, [X19+24]
	341 Move X1, X31
	342 Call String.IsNullOrEmpty, X0
	343 Move TEMP, X0
	344 And TEMP, TEMP, 1
	345 Compare TEMP, 1
	346 JumpIfNotEqual {454}
	347 Compare W28, 0
	348 JumpIfEqual {216}
	349 Move [X31+16], W28
	350 Move X8, 0x902000
	351 Move X8, [X8+2512]
	352 Move W1, 4
	353 Move X0, [X8]
	354 Call 0x1C17D6C
	355 Compare X0, 0
	356 JumpIfEqual {614}
	357 Move X28, X0
	358 Move X0, [X29]
	359 Compare X0, 0
	360 JumpIfEqual {366}
	361 Move X8, [X28]
	362 Move X1, [X8+64]
	363 Call 0x1C17E00
	364 Compare X0, 0
	365 JumpIfEqual {615}
	366 Move W8, [X28+24]
	367 Compare W8, 0
	368 JumpIfEqual {613}
	369 Move X8, [X29]
	370 Add X1, X31, 96
	371 Move [X28+32], X8
	372 Move X8, 0x902000
	373 Move X8, [X8+1880]
	374 Move X0, [X8]
	375 Move W8, [X31+16]
	376 Move [X31+96], W8
	377 Call 0x1C17E04
	378 Move X29, X0
	379 Compare X0, 0
	380 JumpIfEqual {387}
	381 Move X8, [X28]
	382 Move X0, X29
	383 Move X1, [X8+64]
	384 Call 0x1C17E00
	385 Compare X0, 0
	386 JumpIfEqual {615}
	387 Move W8, [X28+24]
	388 NotImplemented "Instruction CMP not yet implemented."
	389 Move [X28+40], X29
	390 Move X8, 0x902000
	391 Move X8, [X8+1880]
	392 Add X1, X31, 164
	393 Move X0, [X8]
	394 Move W8, [X31+20]
	395 Move [X31+164], W8
	396 Call 0x1C17E04
	397 Move X29, X0
	398 Compare X0, 0
	399 JumpIfEqual {406}
	400 Move X8, [X28]
	401 Move X0, X29
	402 Move X1, [X8+64]
	403 Call 0x1C17E00
	404 Compare X0, 0
	405 JumpIfEqual {615}
	406 Move W8, [X28+24]
	407 NotImplemented "Instruction CMP not yet implemented."
	408 Move [X28+48], X29
	409 Compare X27, 0
	410 JumpIfEqual {418}
	411 Move X8, [X28]
	412 Move X0, X27
	413 Move X1, [X8+64]
	414 Call 0x1C17E00
	415 Compare X0, 0
	416 JumpIfEqual {615}
	417 Move W8, [X28+24]
	418 NotImplemented "Instruction CMP not yet implemented."
	419 Move [X28+56], X27
	420 Move X8, 0x958000
	421 Move X8, [X8+2064]
	422 Move X1, X28
	423 Move X2, X31
	424 Move X0, [X8]
	425 Call String.Format, X0, X1
	426 Move X8, 0x92A000
	427 Move X8, [X8+3776]
	428 Move X27, X0
	429 Move X8, [X8]
	430 Move W9, [X8+224]
	431 Compare W9, 0
	432 JumpIfNotEqual {435}
	433 Move X0, X8
	434 Call 0x1C17DFC
	435 Move X8, 0x958000
	436 Move X28, 0x958000
	437 Move X8, [X8+2024]
	438 Move X28, [X28+1976]
	439 Move W2, [X31+20]
	440 Add X0, X31, 248
	441 Move X1, [X8]
	442 Move X3, [X28]
	443 Call 0x2208C08, X0, X1, X2
	444 Move X8, 0x958000
	445 Move X8, [X8+2048]
	446 Move X3, [X28]
	447 Move W28, [X31+16]
	448 Move [X31+168], X0
	449 Move X1, [X8]
	450 Add X0, X31, 168
	451 Move W2, W28
	452 Call 0x2208C08, X0, X1, X2
	453 Move [X31+248], X0
	454 Move X8, 0x958000
	455 Move X1, [X19+24]
	456 Move X8, [X8+2032]
	457 Move X2, X27
	458 Move X3, X31
	459 Move X0, [X8]
	460 Call String.Concat, X0, X1, X2
	461 Move X8, 0x902000
	462 Move X8, [X8+2760]
	463 Move W1, 5
	464 Move X0, [X8]
	465 Call 0x1C17D6C
	466 Compare X0, 0
	467 JumpIfEqual {614}
	468 Move W8, [X0+24]
	469 Compare W8, 0
	470 JumpIfEqual {613}
	471 Move X9, 0x958000
	472 Move X9, [X9+2032]
	473 NotImplemented "Instruction CMP not yet implemented."
	474 Move X9, [X9]
	475 Move [X0+32], X9
	476 Move X9, [X19+16]
	477 NotImplemented "Instruction CMP not yet implemented."
	478 Move [X0+40], X9
	479 Move X9, 0x902000
	480 Move X9, [X9+3544]
	481 NotImplemented "Instruction CMP not yet implemented."
	482 Move X9, [X9]
	483 Move [X0+48], X9
	484 Move X9, [X19+24]
	485 NotImplemented "Instruction CMP not yet implemented."
	486 Move [X0+56], X9
	487 Move X1, X31
	488 Move [X0+64], X27
	489 Call String.Concat, X0
	490 Move X27, X0
	491 Move X8, 0x92A000
	492 Move X8, [X8+3776]
	493 Move W29, W28
	494 Move X0, [X8]
	495 Move W8, [X0+224]
	496 Compare W8, 0
	497 JumpIfNotEqual {499}
	498 Call 0x1C17DFC
	499 Move X8, 0x956000
	500 Move X9, 0x958000
	501 Move X8, [X8+3536]
	502 Move X9, [X9+1976]
	503 Add X0, X31, 248
	504 Move W2, W21
	505 Move X1, [X8]
	506 Move X3, [X9]
	507 Call 0x2208C08, X0, X1, X2
	508 Move X8, 0x958000
	509 Move X9, 0x958000
	510 Move X8, [X8+2040]
	511 Move X9, [X9+1984]
	512 Move [X31+168], X0
	513 Add X0, X31, 168
	514 Move X1, [X8]
	515 Move X3, [X9]
	516 Move W2, W22
	517 Call InputDeviceMatcher.WithCapability, X0, X1, X2
	518 Move X8, 0x958000
	519 Move X8, [X8+1960]
	520 Move [X31+248], X0
	521 Move X8, [X8]
	522 Move X0, X8
	523 Call 0x1C17F10
	524 Move X1, X31
	525 Move X28, X0
	526 Call Object..ctor, X0
	527 Compare X28, 0
	528 JumpIfEqual {614}
	529 Move X8, [X19+24]
	530 Move W9, [X31+20]
	531 Move [X28+32], W21
	532 Move [X28+36], W22
	533 Move [X28+16], X8
	534 Move [X28+24], W29
	535 Move [X28+28], W9
	536 Move V0, [X31+16]
	537 Move X8, [X31+24]
	538 Move [X28+72], X25
	539 Move [X28+40], V0
	540 Move [X28+56], X23
	541 Move [X28+64], X8
	542 Compare X26, 0
	543 JumpIfNotEqual {558}
	544 Move X8, 0x902000
	545 Move X8, [X8+1728]
	546 Move X9, 0x958000
	547 Move X0, [X8]
	548 Move W8, [X0+224]
	549 Move X9, [X9+1968]
	550 Move X19, [X9]
	551 Compare W8, 0
	552 JumpIfNotEqual {554}
	553 Call 0x1C17DFC
	554 Move X0, X19
	555 Move X1, X31
	556 Call Type.GetTypeFromHandle, X0
	557 Move X26, X0
	558 Move [X28+80], X26
	559 Compare X20, 0
	560 JumpIfEqual {614}
	561 Move [X20+16], X28
	562 Move X8, 0x957000
	563 Move X8, [X8+3600]
	564 Move X0, [X8]
	565 Call 0x1C17F10
	566 Move X8, 0x958000
	567 Move X8, [X8+2000]
	568 Move X1, X20
	569 Move X3, X31
	570 Move X19, X0
	571 Move X2, [X8]
	572 Call Func`1<Object>..ctor, X0, X1, X2
	573 Move X8, 0x957000
	574 Move X1, [X31+248]
	575 Move X8, [X8+4016]
	576 Add X0, X31, 96
	577 Move [X31+96], X31
	578 Move [X31+104], X31
	579 Move X2, [X8]
	580 Call Nullable`1<InputDeviceMatcher>..ctor, X0, X1
	581 Move X8, 0x92A000
	582 Move X8, [X8+624]
	583 Move X0, [X8]
	584 Move W8, [X0+224]
	585 Compare W8, 0
	586 JumpIfNotEqual {588}
	587 Call 0x1C17DFC
	588 Move X3, [X31+96]
	589 Move X4, [X31+104]
	590 Move X0, X19
	591 Move X1, X27
	592 Move X2, X25
	593 Move X5, X31
	594 Call InputSystem.RegisterLayoutBuilder, X0, X1, X2, X3
	595 Move X8, [X24+40]
	596 Move X9, [X31+280]
	597 NotImplemented "Instruction CMP not yet implemented."
	598 Move X0, X27
	599 Move X20, [X31+368]
	600 Move X19, [X31+376]
	601 Move X22, [X31+352]
	602 Move X21, [X31+360]
	603 Move X24, [X31+336]
	604 Move X23, [X31+344]
	605 Move X26, [X31+320]
	606 Move X25, [X31+328]
	607 Move X28, [X31+304]
	608 Move X27, [X31+312]
	609 Move X29, [X31+288]
	610 Move X30, [X31+296]
	611 Add X31, X31, 384
	612 Return X0
	613 Call 0x1C17F28
	614 Call 0x1C17F20
	615 Call 0x1C17F44
	616 Move X1, X31
	617 Call 0x1C17DEC
	618 Call 0x3EB2B20

Method: UnityEngine.InputSystem.HID.HID/HIDDeviceDescriptor ReadHIDDeviceDescriptor(ref UnityEngine.InputSystem.Layouts.InputDeviceDescription deviceDescription, UnityEngine.InputSystem.LowLevel.InputDeviceExecuteCommandDelegate executeCommandDelegate)

Disassembly:
	0x037F24A8 MOV X1, X23
	0x037F24AC MOV X2, X24
	0x037F24B0 MOV X3, X31
	0x037F24B4 BL 0x3765300
	0x037F24B8 MOV W21, W0
	0x037F24BC ADD X0, X31, 0xD8
	0x037F24C0 MOVZ W3, 0x2C
	0x037F24C4 MOV X1, X23
	0x037F24C8 MOV X2, X24
	0x037F24CC MOV X4, X31
	0x037F24D0 BL 0x376564C
	0x037F24D4 ADD X0, X31, 0xD8
	0x037F24D8 MOV X1, X23
	0x037F24DC MOV X2, X24
	0x037F24E0 MOV X3, X31
	0x037F24E4 BL 0x3765424
	0x037F24E8 ADD X0, X31, 0xD8
	0x037F24EC MOVZ W3, 0x3A
	0x037F24F0 MOV X1, X23
	0x037F24F4 MOV X2, X24
	0x037F24F8 MOV X4, X31
	0x037F24FC BL 0x3765200
	0x037F2500 ADD X0, X31, 0xD8
	0x037F2504 MOV X1, X23
	0x037F2508 MOV X2, X24
	0x037F250C MOV X3, X31
	0x037F2510 BL 0x37657B4
	0x037F2514 ADD X0, X31, 0xD8
	0x037F2518 MOVZ W3, 0x2C
	0x037F251C MOV X1, X23
	0x037F2520 MOV X2, X24
	0x037F2524 MOV X4, X31
	0x037F2528 BL 0x376564C
	0x037F252C ADD X0, X31, 0xD8
	0x037F2530 MOV X1, X23
	0x037F2534 MOV X2, X24
	0x037F2538 MOV X3, X31
	0x037F253C BL 0x3765424
	0x037F2540 ADD X0, X31, 0xD8
	0x037F2544 MOVZ W3, 0x3A
	0x037F2548 MOV X1, X23
	0x037F254C MOV X2, X24
	0x037F2550 MOV X4, X31
	0x037F2554 BL 0x3765200
	0x037F2558 ADD X0, X31, 0xD8
	0x037F255C MOV X1, X23
	0x037F2560 MOV X2, X24
	0x037F2564 MOV X3, X31
	0x037F2568 BL 0x3765300
	0x037F256C MOV W22, W0
	0x037F2570 ADD X0, X31, 0xD8
	0x037F2574 MOVZ W3, 0x2C
	0x037F2578 MOV X1, X23
	0x037F257C MOV X2, X24
	0x037F2580 MOV X4, X31
	0x037F2584 BL 0x376564C
	0x037F2588 ADD X0, X31, 0xD8
	0x037F258C MOV X1, X23
	0x037F2590 MOV X2, X24
	0x037F2594 MOV X3, X31
	0x037F2598 BL 0x3765424
	0x037F259C ADD X0, X31, 0xD8
	0x037F25A0 MOVZ W3, 0x3A
	0x037F25A4 MOV X1, X23
	0x037F25A8 MOV X2, X24
	0x037F25AC MOV X4, X31
	0x037F25B0 BL 0x3765200
	0x037F25B4 ADD X0, X31, 0xD8
	0x037F25B8 MOV X1, X23
	0x037F25BC MOV X2, X24
	0x037F25C0 MOV X3, X31
	0x037F25C4 BL 0x3765300
	0x037F25C8 MOV W25, W0
	0x037F25CC ADD X0, X31, 0xD8
	0x037F25D0 MOVZ W3, 0x2C
	0x037F25D4 MOV X1, X23
	0x037F25D8 MOV X2, X24
	0x037F25DC MOV X4, X31
	0x037F25E0 BL 0x376564C
	0x037F25E4 ADD X0, X31, 0xD8
	0x037F25E8 MOV X1, X23
	0x037F25EC MOV X2, X24
	0x037F25F0 MOV X3, X31
	0x037F25F4 BL 0x3765424
	0x037F25F8 ADD X0, X31, 0xD8
	0x037F25FC MOVZ W3, 0x3A
	0x037F2600 MOV X1, X23
	0x037F2604 MOV X2, X24
	0x037F2608 MOV X4, X31
	0x037F260C BL 0x3765200
	0x037F2610 ADD X0, X31, 0xD8
	0x037F2614 MOV X1, X23
	0x037F2618 MOV X2, X24
	0x037F261C MOV X3, X31
	0x037F2620 BL 0x3765300
	0x037F2624 MOV W26, W0
	0x037F2628 ADD X0, X31, 0xD8
	0x037F262C MOVZ W3, 0x7D
	0x037F2630 MOV X1, X23
	0x037F2634 MOV X2, X24
	0x037F2638 MOV X4, X31
	0x037F263C BL 0x3765200
	0x037F2640 LDR X0, [X31 + 0xB0]
	0x037F2644 LDR V0, [X31 + 0x9]
	0x037F2648 STR V0, [X31 + 0x6]
	0x037F264C CBZ X0, 0x37F2794
	0x037F2650 LDR V0, [X31 + 0x6]
	0x037F2654 ADRP X9, 0x957000
	0x037F2658 STR V0, [X31 + 0xE]
	0x037F265C LDR W10, [X0 + 0x1C]
	0x037F2660 LDR X8, [X0 + 0x10]
	0x037F2664 LDR X9, [X9 + 0x840]
	0x037F2668 ADD W10, W10, 0x1
	0x037F266C LDR X9, [X9]
	0x037F2670 STR W10, [X0 + 0x1C]
	0x037F2674 CBZ X8, 0x37F2798
	0x037F2678 LDRSW X10, [X0 + 0x18]
	0x037F267C LDR W11, [X8 + 0x18]
	0x037F2680 CMP W10, W11
	0x037F2684 B.CS 0x37F26D4
	0x037F2688 ADD W9, W10, 0x1
	0x037F268C MOVZ W11, 0x48
	0x037F2690 MADD X8, X10, X11, X8
	0x037F2694 STR W9, [X0 + 0x18]
	0x037F2698 LDR W10, [X31 + 0x5C]
	0x037F269C LDR W9, [X31 + 0x58]
	0x037F26A0 STP W28, W29, [X8 + 0x38]
	0x037F26A4 STP W20, W19, [X8 + 0x40]
	0x037F26A8 STP W21, W22, [X8 + 0x48]
	0x037F26AC STP W10, W9, [X8 + 0x20]
	0x037F26B0 LDR W10, [X31 + 0x54]
	0x037F26B4 LDR W9, [X31 + 0x50]
	0x037F26B8 STP W25, W26, [X8 + 0x50]
	0x037F26BC STP W10, W9, [X8 + 0x28]
	0x037F26C0 LDR W9, [X31 + 0x4C]
	0x037F26C4 STP W9, W27, [X8 + 0x30]
	0x037F26C8 LDR V0, [X31 + 0xE]
	0x037F26CC STUR V0, [X8 + 0x58]
	0x037F26D0 B 0x37F2060
	0x037F26D4 LDR X8, [X9 + 0x20]
	0x037F26D8 LDR W9, [X31 + 0x5C]
	0x037F26DC LDR V0, [X31 + 0xE]
	0x037F26E0 LDR X8, [X8 + 0xC0]
	0x037F26E4 LDR X2, [X8 + 0x70]
	0x037F26E8 LDR W8, [X31 + 0x58]
	0x037F26EC STR W27, [X31 + 0x10C]
	0x037F26F0 STR W28, [X31 + 0x110]
	0x037F26F4 STR W29, [X31 + 0x114]
	0x037F26F8 STP W9, W8, [X31 + 0xF8]
	0x037F26FC LDR W8, [X31 + 0x54]
	0x037F2700 STR W20, [X31 + 0x118]
	0x037F2704 STR W19, [X31 + 0x11C]
	0x037F2708 STR W21, [X31 + 0x120]
	0x037F270C STR W8, [X31 + 0x100]
	0x037F2710 LDR W8, [X31 + 0x50]
	0x037F2714 STR W22, [X31 + 0x124]
	0x037F2718 STR W25, [X31 + 0x128]
	0x037F271C STR W26, [X31 + 0x12C]
	0x037F2720 STR W8, [X31 + 0x104]
	0x037F2724 LDR W8, [X31 + 0x4C]
	0x037F2728 STR W8, [X31 + 0x108]
	0x037F272C LDR X8, [X31 + 0x40]
	0x037F2730 STR V0, [X8]
	0x037F2734 ADD X1, X31, 0xF8
	0x037F2738 BL 0x30FECC8
	0x037F273C B 0x37F2060
	0x037F2740 LDR X0, [X31 + 0xB0]
	0x037F2744 CBZ X0, 0x37F27A4
	0x037F2748 ADRP X8, 0x957000
	0x037F274C LDR X8, [X8 + 0x848]
	0x037F2750 LDR X1, [X8]
	0x037F2754 BL 0x310117C
	0x037F2758 MOV X19, X0
	0x037F275C MOV X22, X31
	0x037F2760 MOVZ W20, 0x3
	0x037F2764 ADRP X8, 0x957000
	0x037F2768 LDR X8, [X8 + 0x850]
	0x037F276C LDR X1, [X8]
	0x037F2770 ADD X0, X31, 0xB8
	0x037F2774 BL 0x24A6D20
	0x037F2778 CBNZ X22, 0x37F279C
	0x037F277C CBZ W20, 0x37F29DC
	0x037F2780 CMP W20, 0x3
	0x037F2784 B.NE 0x37F2A88
	0x037F2788 MOV X8, X31
	0x037F278C MOV W9, W31
	0x037F2790 B 0x37F2A54
	0x037F2794 BL 0x1C16F20
	0x037F2798 BL 0x1C16F20
	0x037F279C MOV X0, X22
	0x037F27A0 BL 0x1C16F18
	0x037F27A4 BL 0x1C16F20
	0x037F27A8 B 0x37F2954
	0x037F27AC B 0x37F2954
	0x037F27B0 B 0x37F2840
	0x037F27B4 B 0x37F2840
	0x037F27B8 B 0x37F2840
	0x037F27BC B 0x37F2840
	0x037F27C0 B 0x37F2840
	0x037F27C4 B 0x37F2840
	0x037F27C8 B 0x37F2840
	0x037F27CC B 0x37F2840
	0x037F27D0 B 0x37F2840
	0x037F27D4 B 0x37F2840
	0x037F27D8 B 0x37F2840
	0x037F27DC B 0x37F2840
	0x037F27E0 B 0x37F2840
	0x037F27E4 B 0x37F2840
	0x037F27E8 B 0x37F2840
	0x037F27EC B 0x37F2840
	0x037F27F0 B 0x37F2840
	0x037F27F4 B 0x37F2840
	0x037F27F8 B 0x37F2840
	0x037F27FC B 0x37F2840
	0x037F2800 B 0x37F2840
	0x037F2804 B 0x37F2840
	0x037F2808 B 0x37F2840
	0x037F280C B 0x37F2840
	0x037F2810 B 0x37F2840
	0x037F2814 B 0x37F2840
	0x037F2818 B 0x37F2840
	0x037F281C B 0x37F2840
	0x037F2820 B 0x37F2840
	0x037F2824 B 0x37F2840
	0x037F2828 B 0x37F2840
	0x037F282C B 0x37F2840
	0x037F2830 B 0x37F2840
	0x037F2834 B 0x37F2840
	0x037F2838 B 0x37F2840
	0x037F283C B 0x37F2840
	0x037F2840 MOV X20, X1
	0x037F2844 MOV X21, X0
	0x037F2848 B 0x37F29A8
	0x037F284C B 0x37F2954
	0x037F2850 B 0x37F2954
	0x037F2854 B 0x37F2954
	0x037F2858 B 0x37F2954
	0x037F285C B 0x37F2954
	0x037F2860 B 0x37F2954
	0x037F2864 B 0x37F2954
	0x037F2868 B 0x37F2954
	0x037F286C B 0x37F2954
	0x037F2870 B 0x37F2954
	0x037F2874 B 0x37F2954
	0x037F2878 B 0x37F2954
	0x037F287C B 0x37F2954
	0x037F2880 B 0x37F2954
	0x037F2884 B 0x37F2954
	0x037F2888 B 0x37F2954
	0x037F288C B 0x37F2954
	0x037F2890 B 0x37F2954
	0x037F2894 B 0x37F2954
	0x037F2898 B 0x37F2954
	0x037F289C B 0x37F2954
	0x037F28A0 B 0x37F2954
	0x037F28A4 B 0x37F2954
	0x037F28A8 B 0x37F2954
	0x037F28AC B 0x37F2954
	0x037F28B0 B 0x37F2954
	0x037F28B4 B 0x37F2954
	0x037F28B8 B 0x37F2954
	0x037F28BC B 0x37F2954
	0x037F28C0 B 0x37F2954
	0x037F28C4 B 0x37F2954
	0x037F28C8 B 0x37F2954
	0x037F28CC B 0x37F2954
	0x037F28D0 B 0x37F2954
	0x037F28D4 B 0x37F2954
	0x037F28D8 B 0x37F2954
	0x037F28DC B 0x37F2954
	0x037F28E0 B 0x37F2954
	0x037F28E4 B 0x37F2954
	0x037F28E8 B 0x37F2954
	0x037F28EC B 0x37F2954
	0x037F28F0 B 0x37F2954
	0x037F28F4 B 0x37F2954
	0x037F28F8 B 0x37F2954
	0x037F28FC B 0x37F2954
	0x037F2900 B 0x37F2954
	0x037F2904 B 0x37F2954
	0x037F2908 B 0x37F2954
	0x037F290C B 0x37F2954
	0x037F2910 B 0x37F2954
	0x037F2914 B 0x37F2954
	0x037F2918 B 0x37F2954
	0x037F291C B 0x37F2954
	0x037F2920 B 0x37F2954
	0x037F2924 B 0x37F2954
	0x037F2928 B 0x37F2954
	0x037F292C B 0x37F2954
	0x037F2930 B 0x37F2954
	0x037F2934 B 0x37F2954
	0x037F2938 B 0x37F2954
	0x037F293C B 0x37F2954
	0x037F2940 B 0x37F2954
	0x037F2944 B 0x37F2954
	0x037F2948 B 0x37F2954
	0x037F294C B 0x37F2954
	0x037F2950 B 0x37F2954
	0x037F2954 MOV X20, X1
	0x037F2958 MOV X21, X0
	0x037F295C CMP W20, 0x1
	0x037F2960 B.NE 0x37F298C
	0x037F2964 MOV X0, X21
	0x037F2968 BL 0x3EB1AD0
	0x037F296C LDR X22, [X0]
	0x037F2970 BL 0x3EB1AE0
	0x037F2974 MOV X19, X31
	0x037F2978 MOV W20, W31
	0x037F297C STR W31, [X31 + 0x1C]
	0x037F2980 STP X31, X31, [X31 + 0x20]
	0x037F2984 STR X31, [X31 + 0x30]
	0x037F2988 B 0x37F2764
	0x037F298C MOV X22, X31
	0x037F2990 ADRP X8, 0x957000
	0x037F2994 LDR X8, [X8 + 0x850]
	0x037F2998 LDR X1, [X8]
	0x037F299C ADD X0, X31, 0xB8
	0x037F29A0 BL 0x24A6D20
	0x037F29A4 CBNZ X22, 0x37F2AC8
	0x037F29A8 CMP W20, 0x1
	0x037F29AC B.NE 0x37F2AE4
	0x037F29B0 MOV X0, X21
	0x037F29B4 BL 0x3EB1AD0
	0x037F29B8 MOV X19, X0
	0x037F29BC ADRP X0, 0x901000
	0x037F29C0 LDR X0, [X0 + 0x7D0]
	0x037F29C4 BL 0x1C16D08
	0x037F29C8 LDR X8, [X19]
	0x037F29CC LDR X1, [X8]
	0x037F29D0 BL 0x1C17270
	0x037F29D4 TBZ X0, 0x0, 0x37F2AA8
	0x037F29D8 BL 0x3EB1AE0
	0x037F29DC ADRP X0, 0x901000
	0x037F29E0 LDR X0, [X0 + 0xA28]
	0x037F29E4 BL 0x1C16D08
	0x037F29E8 LDR W8, [X0 + 0xE0]
	0x037F29EC CBNZ W8, 0x37F29F4
	0x037F29F0 BL 0x1C16DFC
	0x037F29F4 ADRP X0, 0x957000
	0x037F29F8 LDR X0, [X0 + 0x860]
	0x037F29FC BL 0x1C16D08
	0x037F2A00 MOV X1, X31
	0x037F2A04 BL 0x3C06A04
	0x037F2A08 ADRP X0, 0x957000
	0x037F2A0C LDR X0, [X0 + 0x788]
	0x037F2A10 BL 0x1C16D08
	0x037F2A14 MOV X1, X0
	0x037F2A18 LDR X0, [X31 + 0x38]
	0x037F2A1C ADD X8, X31, 0x60
	0x037F2A20 BL 0x22115D8
	0x037F2A24 LDR W9, [X31 + 0x60]
	0x037F2A28 LDR W8, [X31 + 0x64]
	0x037F2A2C STP W8, W9, [X31 + 0x30]
	0x037F2A30 LDR W9, [X31 + 0x68]
	0x037F2A34 LDR W8, [X31 + 0x6C]
	0x037F2A38 STP W8, W9, [X31 + 0x28]
	0x037F2A3C LDR W9, [X31 + 0x70]
	0x037F2A40 LDR W8, [X31 + 0x74]
	0x037F2A44 STP W8, W9, [X31 + 0x20]
	0x037F2A48 LDP W8, W9, [X31 + 0x78]
	0x037F2A4C STR W8, [X31 + 0x1C]
	0x037F2A50 LDP X19, X8, [X31 + 0x80]
	0x037F2A54 LDR X10, [X31 + 0x10]
	0x037F2A58 LDR W12, [X31 + 0x34]
	0x037F2A5C LDR W11, [X31 + 0x30]
	0x037F2A60 STP X19, X8, [X10 + 0x20]
	0x037F2A64 STP W12, W11, [X10]
	0x037F2A68 LDR W12, [X31 + 0x2C]
	0x037F2A6C LDR W11, [X31 + 0x28]
	0x037F2A70 STP W12, W11, [X10 + 0x8]
	0x037F2A74 LDR W12, [X31 + 0x24]
	0x037F2A78 LDR W11, [X31 + 0x20]
	0x037F2A7C STP W12, W11, [X10 + 0x10]
	0x037F2A80 LDR W11, [X31 + 0x1C]
	0x037F2A84 STP W11, W9, [X10 + 0x18]
	0x037F2A88 LDP X20, X19, [X31 + 0x190]
	0x037F2A8C LDP X22, X21, [X31 + 0x180]
	0x037F2A90 LDP X24, X23, [X31 + 0x170]
	0x037F2A94 LDP X26, X25, [X31 + 0x160]
	0x037F2A98 LDP X28, X27, [X31 + 0x150]
	0x037F2A9C LDP X29, X30, [X31 + 0x140]
	0x037F2AA0 ADD X31, X31, 0x1A0
	0x037F2AA4 RET
	0x037F2AA8 MOVZ W0, 0x8
	0x037F2AAC BL 0x3EB1AF0
	0x037F2AB0 LDR X8, [X19]
	0x037F2AB4 STR X8, [X0]
	0x037F2AB8 ADRP X1, 0x6C2000
	0x037F2ABC ADD X1, X1, 0xE58
	0x037F2AC0 MOV X2, X31
	0x037F2AC4 BL 0x3EB1B00
	0x037F2AC8 MOV X0, X22
	0x037F2ACC BL 0x1C16F18
	0x037F2AD0 MOV X20, X1
	0x037F2AD4 MOV X21, X0
	0x037F2AD8 B 0x37F2990
	0x037F2ADC MOV X21, X0
	0x037F2AE0 BL 0x3EB1AE0
	0x037F2AE4 MOV X0, X21
	0x037F2AE8 BL 0x1D2C690
	0x037F2AEC BL 0x1990590
	0x037F2AF0 STP X29, X30, [X31 - 0x60]!
	0x037F2AF4 STP X28, X27, [X31 + 0x10]
	0x037F2AF8 STP X26, X25, [X31 + 0x20]
	0x037F2AFC STP X24, X23, [X31 + 0x30]
	0x037F2B00 STP X22, X21, [X31 + 0x40]
	0x037F2B04 STP X20, X19, [X31 + 0x50]
	0x037F2B08 SUB X31, X31, 0x200
	0x037F2B0C ADRP X26, 0xBEF000
	0x037F2B10 ADRP X25, 0x957000
	0x037F2B14 ADRP X24, 0x957000
	0x037F2B18 ADRP X23, 0x957000
	0x037F2B1C ADRP X22, 0x957000
	0x037F2B20 ADRP X21, 0x957000
	0x037F2B24 ADRP X20, 0x957000
	0x037F2B28 LDR X25, [X25 + 0x868]
	0x037F2B2C LDRB W8, [X26 + 0x382]
	0x037F2B30 LDR X24, [X24 + 0x870]
	0x037F2B34 LDR X23, [X23 + 0x878]
	0x037F2B38 LDR X22, [X22 + 0x880]
	0x037F2B3C LDR X21, [X21 + 0x888]
	0x037F2B40 LDR X20, [X20 + 0x890]
	0x037F2B44 MOV X27, X2
	0x037F2B48 MOV W19, W1
	0x037F2B4C MOV X28, X0
	0x037F2B50 TBNZ X8, 0x0, 0x37F2C70
	0x037F2B54 ADRP X0, 0x957000
	0x037F2B58 LDR X0, [X0 + 0x898]
	0x037F2B5C BL 0x1C16CF4
	0x037F2B60 ADRP X0, 0x957000
	0x037F2B64 LDR X0, [X0 + 0x8A0]
	0x037F2B68 BL 0x1C16CF4
	0x037F2B6C ADRP X0, 0x957000
	0x037F2B70 LDR X0, [X0 + 0x8A8]
	0x037F2B74 BL 0x1C16CF4
	0x037F2B78 ADRP X0, 0x957000
	0x037F2B7C LDR X0, [X0 + 0x840]
	0x037F2B80 BL 0x1C16CF4
	0x037F2B84 ADRP X0, 0x957000
	0x037F2B88 LDR X0, [X0 + 0x8B0]
	0x037F2B8C BL 0x1C16CF4
	0x037F2B90 ADRP X0, 0x957000
	0x037F2B94 LDR X0, [X0 + 0x8B8]
	0x037F2B98 BL 0x1C16CF4
	0x037F2B9C ADRP X0, 0x957000
	0x037F2BA0 LDR X0, [X0 + 0x8C0]
	0x037F2BA4 BL 0x1C16CF4
	0x037F2BA8 ADRP X0, 0x957000
	0x037F2BAC LDR X0, [X0 + 0x848]
	0x037F2BB0 BL 0x1C16CF4
	0x037F2BB4 ADRP X0, 0x957000
	0x037F2BB8 LDR X0, [X0 + 0x870]

ISIL:
	001 Subtract X31, X31, 272
	002 Move [X31+192], X29
	003 Move [X31+208], X30
	004 Move [X31+216], X25
	005 Move [X31+224], X24
	006 Move [X31+232], X23
	007 Move [X31+240], X22
	008 Move [X31+248], X21
	009 Move [X31+256], X20
	010 Move [X31+264], X19
	011 Move X23, 0xBF0000
	012 Move X22, 0x958000
	013 Move X19, X8
	014 Move W8, [X23+878]
	015 Move X22, [X22+2056]
	016 Move X21, X1
	017 Move X20, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {39}
	022 Move X0, 0x902000
	023 Move X0, [X0+1560]
	024 Call 0x1C17CF4
	025 Move X0, 0x958000
	026 Move X0, [X0+2072]
	027 Call 0x1C17CF4
	028 Move X0, 0x956000
	029 Move X0, [X0+4072]
	030 Call 0x1C17CF4
	031 Move X0, 0x92A000
	032 Move X0, [X0+3432]
	033 Call 0x1C17CF4
	034 Move X0, 0x958000
	035 Move X0, [X0+2056]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X23+878], W8
	039 NotImplemented "Instruction MOVI not yet implemented."
	040 Move [X31+200], X31
	041 Move [X31+128], X31
	042 Move [X31+136], X31
	043 Move [X31+64], X31
	044 Move [X31+72], X31
	045 Move [X31+96], V0
	046 Move [X31+104], V0
	047 Move [X31+5], V0
	048 Move X0, [X20]
	049 Move X1, [X22]
	050 Move X2, X31
	051 Call String.op_Inequality, X0, X1
	052 Move TEMP, X0
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfEqual {83}
	056 NotImplemented "Instruction MOVI not yet implemented."
	057 Move [X31+160], V0
	058 Move [X31+168], V0
	059 Move [X31+9], V0
	060 Move X0, [X20+48]
	061 Move X1, X31
	062 Call String.IsNullOrEmpty, X0
	063 Move TEMP, X0
	064 And TEMP, TEMP, 1
	065 Compare TEMP, 1
	066 JumpIfEqual {169}
	067 Move X0, [X20+48]
	068 Add X8, X31, 0
	069 Call HIDDeviceDescriptor.FromJson, X0
	070 Move V1, [X31+16]
	071 Move V0, [X31+32]
	072 Move [X31+160], V1
	073 Move [X31+168], V0
	074 Move V0, [X31]
	075 Move X8, [X31+176]
	076 Move [X31+9], V0
	077 Compare X8, 0
	078 JumpIfEqual {169}
	079 Move X8, [X8+24]
	080 Compare X8, 0
	081 JumpIfEqual {169}
	082 Add X21, X31, 144
	083 Move X8, [X20+48]
	084 Move V1, [X20+16]
	085 Move V0, [X20+32]
	086 Move V2, [X20]
	087 Move X0, 0x92D000
	088 Move [X31+48], X8
	089 Move [X31+16], V1
	090 Move [X31+24], V0
	091 Move [X31], V2
	092 Move X0, [X0+1264]
	093 Call 0x1C17D08
	094 Add X1, X31, 0
	095 Call 0x1C17E04
	096 Move X19, X0
	097 Move X0, 0x958000
	098 Move X0, [X0+2080]
	099 Call 0x1C17D08
	100 Move X1, X19
	101 Move X2, X31
	102 Call String.Format, X0, X1
	103 Move X19, X0
	104 Move X0, 0x90A000
	105 Move X0, [X0+1400]
	106 Call 0x1C17D08
	107 Call 0x1C17F10
	108 Move X1, X19
	109 Move X2, X31
	110 Move X20, X0
	111 Call ArgumentException..ctor, X0, X1
	112 Move X0, 0x958000
	113 Move X0, [X0+2072]
	114 Call 0x1C17D08
	115 Move X1, X0
	116 Move X0, X20
	117 Call 0x1C17DEC
	118 NotImplemented "Instruction CMP not yet implemented."
	119 Move X22, X0
	120 Move X0, X22
	121 Call 0x3EB2AD0
	122 Move X22, X0
	123 Move X0, 0x902000
	124 Move X0, [X0+2000]
	125 Call 0x1C17D08
	126 Move X8, [X22]
	127 Move X1, [X8]
	128 Call 0x1C18270
	129 Move TEMP, X0
	130 And TEMP, TEMP, 1
	131 Compare TEMP, 1
	132 JumpIfNotEqual {315}
	133 Move X22, [X22]
	134 Call 0x3EB2AE0
	135 Move X8, [X20+48]
	136 Move V1, [X20+16]
	137 Move V0, [X20+32]
	138 Move V2, [X20]
	139 Move X0, 0x92D000
	140 Move [X31+48], X8
	141 Move [X31+16], V1
	142 Move [X31+24], V0
	143 Move [X31], V2
	144 Move X0, [X0+1264]
	145 Call 0x1C17D08
	146 Add X1, X31, 0
	147 Call 0x1C17E04
	148 Move X23, X0
	149 Move X0, 0x958000
	150 Move X0, [X0+2088]
	151 Call 0x1C17D08
	152 Move X1, X23
	153 Move X2, X31
	154 Call String.Format, X0, X1
	155 Move X23, X0
	156 Move X0, 0x902000
	157 Move X0, [X0+2600]
	158 Call 0x1C17D08
	159 Move W8, [X0+224]
	160 Compare W8, 0
	161 JumpIfNotEqual {163}
	162 Call 0x1C17DFC
	163 Move X0, X23
	164 Move X1, X31
	165 Call Debug.LogError, X0
	166 Move X0, X22
	167 Move X1, X31
	168 Call Debug.LogException, X0
	169 Add X0, X31, 0
	170 Move W1, 72
	171 Move W2, 73
	172 Move W3, 68
	173 Move W4, 83
	174 Move X5, X31
	175 Move [X31], W31
	176 Call FourCC..ctor, X0, X1, X2, X3, X4
	177 Move W1, [X31]
	178 Add X0, X31, 200
	179 Move W2, 8
	180 Move X3, X31
	181 Call InputDeviceCommand..ctor, X0, X1, X2
	182 Compare X21, 0
	183 JumpIfEqual {313}
	184 Move X8, [X21+24]
	185 Move X0, [X21+64]
	186 Move X2, [X21+40]
	187 Move X23, 0x956000
	188 Move X23, [X23+4072]
	189 Add X1, X31, 200
	190 NotImplemented "Instruction BLR not yet implemented."
	191 NotImplemented "Instruction CMP not yet implemented."
	192 Move X22, X0
	193 Add X0, X31, 0
	194 Move W1, 72
	195 Move W2, 73
	196 Move W3, 68
	197 Move W4, 68
	198 Move X5, X31
	199 Move [X31], W31
	200 Call FourCC..ctor, X0, X1, X2, X3, X4
	201 Move W0, [X31]
	202 Move W1, W22
	203 Move X2, X31
	204 Call InputDeviceCommand.AllocateNative, X0, X1
	205 Move X2, [X23]
	206 Move [X31+128], X0
	207 Move [X31+136], X1
	208 Call 0x2223688, X0
	209 Move X23, X0
	210 Move X0, [X21+64]
	211 Move X8, [X21+24]
	212 Move X2, [X21+40]
	213 Move X1, X23
	214 NotImplemented "Instruction BLR not yet implemented."
	215 NotImplemented "Instruction CMP not yet implemented."
	216 Move X0, X23
	217 Move X1, X31
	218 Call InputDeviceCommand.get_payloadPtr, X0
	219 Add X2, X31, 144
	220 Move W1, W22
	221 Call HIDParser.ParseReportDescriptor, X0, X1, X2
	222 Move TEMP, X0
	223 And TEMP, TEMP, 1
	224 Compare TEMP, 1
	225 JumpIfNotEqual {235}
	226 Move X8, 0x92A000
	227 Move X8, [X8+3432]
	228 Add X0, X31, 128
	229 Move X1, [X8]
	230 Call NativeArray`1<Byte>.Dispose, X0
	231 Add X0, X31, 144
	232 Add X21, X31, 144
	233 Call HIDDeviceDescriptor.ToJson, X0
	234 Move [X20+48], X0
	235 NotImplemented "Instruction MOVI not yet implemented."
	236 Add X0, X31, 128
	237 Move [X31+96], V0
	238 Move [X31+104], V0
	239 Move [X31+5], V0
	240 Add X0, X31, 0
	241 Move W1, 72
	242 Move W2, 73
	243 Move W3, 68
	244 Move W4, 80
	245 Move X5, X31
	246 Move [X31], W31
	247 Call FourCC..ctor, X0, X1, X2, X3, X4
	248 Move W0, [X31]
	249 Move W1, 0x200000
	250 Move X2, X31
	251 Call InputDeviceCommand.AllocateNative, X0, X1
	252 Move X2, [X23]
	253 Move [X31+64], X0
	254 Move [X31+72], X1
	255 Call 0x2223688, X0
	256 Move X22, X0
	257 Move X0, [X21+64]
	258 Move X8, [X21+24]
	259 Move X2, [X21+40]
	260 Move X1, X22
	261 NotImplemented "Instruction BLR not yet implemented."
	262 Move X23, X0
	263 Move TEMP, X0
	264 And TEMP, TEMP, 1
	265 Compare TEMP, 1
	266 JumpIfEqual {377}
	267 Move X8, 0x902000
	268 Move X8, [X8+1560]
	269 Move X0, [X8]
	270 Move W1, W23
	271 Call 0x1C17D6C
	272 Move X24, X0
	273 Compare X0, 0
	274 JumpIfEqual {279}
	275 Move W8, [X24+24]
	276 Add X9, X24, 32
	277 NotImplemented "Instruction CMP not yet implemented."
	278 NotImplemented "Instruction CSEL not yet implemented."
	279 Move X21, X31
	280 Move X0, X22
	281 Move X1, X31
	282 Call InputDeviceCommand.get_payloadPtr, X0
	283 Move X1, X0
	284 Move X0, X21
	285 Move X2, X23
	286 Move X3, X31
	287 Call UnsafeUtility.MemCpy, X0, X1, X2
	288 Move X0, X31
	289 Call Encoding.get_UTF8
	290 Compare X0, 0
	291 JumpIfEqual {314}
	292 Move X8, [X0]
	293 Move X9, [X8+904]
	294 Move X4, [X8+912]
	295 Move X1, X24
	296 Move W2, W31
	297 Move W3, W23
	298 NotImplemented "Instruction BLR not yet implemented."
	299 Move X21, X0
	300 Add X8, X31, 0
	301 Call HIDDeviceDescriptor.FromJson, X0
	302 Move V0, [X31]
	303 Move V1, [X31+16]
	304 Move V2, [X31+2]
	305 Move X8, 0x92A000
	306 Add X0, X31, 64
	307 Move [X31+144], V0
	308 Move [X31+152], V1
	309 Move [X31+11], V2
	310 Move [X20+48], X21
	311 Move X8, [X8+3432]
	312 Add X21, X31, 144
	313 Call 0x1C17F20
	314 Call 0x1C17F20
	315 Move W0, 8
	316 Call 0x3EB2AF0
	317 Move X8, [X22]
	318 Move [X0], X8
	319 Move X1, 0x6C3000
	320 Add X1, X1, 3672
	321 Move X2, X31
	322 Call 0x3EB2B00
	323 Move X22, X0
	324 Call 0x3EB2AE0
	325 Move X21, X1
	326 NotImplemented "Instruction CMP not yet implemented."
	327 Move X22, X0
	328 Move X0, X22
	329 Call 0x3EB2AD0
	330 Move X21, X0
	331 Move X0, 0x902000
	332 Move X0, [X0+2000]
	333 Call 0x1C17D08
	334 Move X8, [X21]
	335 Move X1, [X8]
	336 Call 0x1C18270
	337 Move TEMP, X0
	338 And TEMP, TEMP, 1
	339 Compare TEMP, 1
	340 JumpIfNotEqual {404}
	341 Move X21, [X21]
	342 Call 0x3EB2AE0
	343 Move X8, [X20+48]
	344 Move V1, [X20+16]
	345 Move V0, [X20+32]
	346 Move V2, [X20]
	347 Move [X31+48], X8
	348 Move [X31+16], V1
	349 Move [X31+24], V0
	350 Move [X31], V2
	351 Move X0, 0x92D000
	352 Move X0, [X0+1264]
	353 Call 0x1C17D08
	354 Add X1, X31, 0
	355 Call 0x1C17E04
	356 Move X20, X0
	357 Move X0, 0x958000
	358 Move X0, [X0+2088]
	359 Call 0x1C17D08
	360 Move X1, X20
	361 Move X2, X31
	362 Call String.Format, X0, X1
	363 Move X20, X0
	364 Move X0, 0x902000
	365 Move X0, [X0+2600]
	366 Call 0x1C17D08
	367 Move W8, [X0+224]
	368 Compare W8, 0
	369 JumpIfNotEqual {371}
	370 Call 0x1C17DFC
	371 Move X0, X20
	372 Move X1, X31
	373 Call Debug.LogError, X0
	374 Move X0, X21
	375 Move X1, X31
	376 Call Debug.LogException, X0
	377 NotImplemented "Instruction MOVI not yet implemented."
	378 Move [X31+96], V0
	379 Move [X31+104], V0
	380 Move [X31+5], V0
	381 Add X0, X31, 64
	382 Move X8, 0x92A000
	383 Move X8, [X8+3432]
	384 Add X21, X31, 80
	385 Move X1, [X8]
	386 Call NativeArray`1<Byte>.Dispose, X0
	387 Move V1, [X21+16]
	388 Move V0, [X21+32]
	389 Move V2, [X21]
	390 Move X22, [X31+240]
	391 Move X21, [X31+248]
	392 Move X24, [X31+224]
	393 Move X23, [X31+232]
	394 Move [X19+16], V1
	395 Move [X19+24], V0
	396 Move [X19], V2
	397 Move X20, [X31+256]
	398 Move X19, [X31+264]
	399 Move X30, [X31+208]
	400 Move X25, [X31+216]
	401 Move X29, [X31+192]
	402 Add X31, X31, 272
	403 Return X0
	404 Move W0, 8
	405 Call 0x3EB2AF0
	406 Move X8, [X21]
	407 Move [X0], X8
	408 Move X1, 0x6C3000
	409 Add X1, X1, 3672
	410 Move X2, X31
	411 Call 0x3EB2B00
	412 Move X21, X1
	413 Move X22, X0
	414 Call 0x3EB2AE0
	415 Move X21, X1
	416 Move X22, X0
	417 NotImplemented "Instruction CMP not yet implemented."
	418 Move X0, X22
	419 Call 0x3EB2AD0
	420 Move X25, [X0]
	421 Call 0x3EB2AE0
	422 Compare X25, 0
	423 JumpIfEqual {288}
	424 Move X0, X25
	425 Call 0x1C17F18
	426 Compare X25, 0
	427 JumpIfEqual {430}
	428 Move X0, X25
	429 Call 0x1C17F18
	430 Move X21, X1
	431 Move X22, X0
	432 NotImplemented "Instruction CMP not yet implemented."
	433 Move X0, X22
	434 Call 0x3EB2AD0
	435 Move X20, [X0]
	436 Call 0x3EB2AE0
	437 Move X8, 0x92A000
	438 Move X8, [X8+3432]
	439 Add X0, X31, 64
	440 Move X1, [X8]
	441 Call NativeArray`1<Byte>.Dispose, X0
	442 Compare X20, 0
	443 JumpIfEqual {82}
	444 Move X0, X20
	445 Call 0x1C17F18
	446 Move X20, X31
	447 Move X22, X0
	448 Move X8, 0x92A000
	449 Move X8, [X8+3432]
	450 Move X1, [X8]
	451 Add X0, X31, 64
	452 Call NativeArray`1<Byte>.Dispose, X0
	453 Compare X20, 0
	454 JumpIfEqual {481}
	455 Move X0, X20
	456 Call 0x1C17F18
	457 Move X22, X0
	458 NotImplemented "Instruction CMP not yet implemented."
	459 Move X0, X22
	460 Call 0x3EB2AD0
	461 Move X21, [X0]
	462 Call 0x3EB2AE0
	463 Move X8, 0x92A000
	464 Move X8, [X8+3432]
	465 Add X0, X31, 128
	466 Move X1, [X8]
	467 Call NativeArray`1<Byte>.Dispose, X0
	468 Compare X21, 0
	469 JumpIfEqual {231}
	470 Move X0, X21
	471 Call 0x1C17F18
	472 Move X21, X31
	473 Move X22, X0
	474 Move X8, 0x92A000
	475 Move X8, [X8+3432]
	476 Move X1, [X8]
	477 Add X0, X31, 128
	478 Call NativeArray`1<Byte>.Dispose, X0
	479 Compare X21, 0
	480 JumpIfNotEqual {483}
	481 Move X0, X22
	482 Call 0x1D2D690
	483 Move X0, X21
	484 Call 0x1C17F18
	485 Call 0x1991590

Method: System.String UsagePageToString(UnityEngine.InputSystem.HID.HID/UsagePage usagePage)

Disassembly:
	0x037F4708 LDR X0, [X8]
	0x037F470C B 0x37F4764
	0x037F4710 ADRP X9, 0x951000
	0x037F4714 LDR X9, [X9 + 0x350]
	0x037F4718 CMP W8, 0x9
	0x037F471C LDR X9, [X9]
	0x037F4720 CSEL X0, X9, X31, EQ
	0x037F4724 B 0x37F4764
	0x037F4728 ADRP X10, 0x954000
	0x037F472C LDP W9, W8, [X19 + 0x10]
	0x037F4730 LDR X10, [X10 + 0x6C8]
	0x037F4734 SUB W8, W8, W9
	0x037F4738 LDR X10, [X10]
	0x037F473C CMP W8, 0x7
	0x037F4740 CSEL X0, X10, X31, EQ
	0x037F4744 B 0x37F4764
	0x037F4748 AND W8, W9, 0xFFFFFFFC
	0x037F474C CMP W8, 0x90
	0x037F4750 B.NE 0x37F4760
	0x037F4754 ADRP X8, 0x951000
	0x037F4758 LDR X8, [X8 + 0x350]
	0x037F475C B 0x37F4708
	0x037F4760 MOV X0, X31
	0x037F4764 LDP X20, X19, [X31 + 0x10]
	0x037F4768 LDR X30, [X31], #0x20
	0x037F476C RET
	0x037F4770 SUB X31, X31, 0x40
	0x037F4774 STR X30, [X31 + 0x20]
	0x037F4778 STP X20, X19, [X31 + 0x30]
	0x037F477C ADRP X20, 0xBED000
	0x037F4780 LDRB W8, [X20 + 0x373]
	0x037F4784 MOV X19, X0
	0x037F4788 TBNZ X8, 0x0, 0x37F47F4
	0x037F478C ADRP X0, 0x901000
	0x037F4790 LDR X0, [X0 + 0x170]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+48], X20
	004 Move [X31+56], X19
	005 Move X20, 0xBEE000
	006 Move W8, [X20+879]
	007 Move W19, W0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x956000
	013 Move X0, [X0+2008]
	014 Call 0x1C17CF4
	015 Move X0, 0x956000
	016 Move X0, [X0+2320]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+879], W8
	020 Move W8, 0xFEFF
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move X8, 0x956000
	023 Move X8, [X8+2320]
	024 Move X0, [X8]
	025 Move X8, 0x956000
	026 Move X8, [X8+2008]
	027 Move TEMP, 0
	028 Not TEMP
	029 Move X9, TEMP
	030 Add X0, X31, 8
	031 Move X1, X31
	032 Move X8, [X8]
	033 Move [X31+24], W19
	034 Move [X31+8], X8
	035 Move [X31+16], X9
	036 Call Enum.ToString, X0
	037 Move X20, [X31+48]
	038 Move X19, [X31+56]
	039 Move X30, [X31+32]
	040 Add X31, X31, 64
	041 Return X0

Method: System.String UsageToString(UnityEngine.InputSystem.HID.HID/UsagePage usagePage, System.Int32 usage)

Disassembly:
	0x037F4794 BL 0x1C16CF4
	0x037F4798 ADRP X0, 0x955000
	0x037F479C LDR X0, [X0 + 0x7A0]
	0x037F47A0 BL 0x1C16CF4
	0x037F47A4 ADRP X0, 0x8FF000
	0x037F47A8 LDR X0, [X0 + 0x758]
	0x037F47AC BL 0x1C16CF4
	0x037F47B0 ADRP X0, 0x955000
	0x037F47B4 LDR X0, [X0 + 0x7D8]
	0x037F47B8 BL 0x1C16CF4
	0x037F47BC ADRP X0, 0x955000
	0x037F47C0 LDR X0, [X0 + 0x9D0]
	0x037F47C4 BL 0x1C16CF4
	0x037F47C8 ADRP X0, 0x955000
	0x037F47CC LDR X0, [X0 + 0x9D8]
	0x037F47D0 BL 0x1C16CF4
	0x037F47D4 ADRP X0, 0x955000
	0x037F47D8 LDR X0, [X0 + 0x9E0]
	0x037F47DC BL 0x1C16CF4
	0x037F47E0 ADRP X0, 0x927000
	0x037F47E4 LDR X0, [X0 + 0x138]
	0x037F47E8 BL 0x1C16CF4
	0x037F47EC MOVZ W8, 0x1
	0x037F47F0 STRB W8, [X20 + 0x373]
	0x037F47F4 STRH W31, [X31 + 0x2C]
	0x037F47F8 LDR W8, [X19 + 0x4]
	0x037F47FC CMP W8, 0x1
	0x037F4800 B.EQ 0x37F4824
	0x037F4804 CMP W8, 0x9
	0x037F4808 B.NE 0x37F4840
	0x037F480C LDR W8, [X19]
	0x037F4810 CMP W8, 0x1
	0x037F4814 B.NE 0x37F489C
	0x037F4818 ADRP X8, 0x927000
	0x037F481C LDR X8, [X8 + 0x138]
	0x037F4820 B 0x37F4838
	0x037F4824 LDR W8, [X19]
	0x037F4828 CMP W8, 0x39

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+40], X21
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move X21, 0xBEE000
	007 Move W8, [X21+880]
	008 Move W19, W1
	009 Move W20, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x956000
	015 Move X0, [X0+1952]
	016 Call 0x1C17CF4
	017 Move X0, 0x956000
	018 Move X0, [X0+2328]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+880], W8
	022 NotImplemented "Instruction CMP not yet implemented."
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move X8, 0x956000
	025 Move X8, [X8+1952]
	026 Move X8, 0x956000
	027 Move X8, [X8+2328]
	028 Move X8, [X8]
	029 Move TEMP, 0
	030 Not TEMP
	031 Move X9, TEMP
	032 Add X0, X31, 8
	033 Move X1, X31
	034 Move [X31+8], X8
	035 Move [X31+16], X9
	036 Move [X31+24], W19
	037 Call Enum.ToString, X0
	038 Move X0, X31
	039 Move X20, [X31+48]
	040 Move X19, [X31+56]
	041 Move X30, [X31+32]
	042 Move X21, [X31+40]
	043 Add X31, X31, 64
	044 Return X0

Method: System.Void .ctor()

Disassembly:
	0x037F482C B.NE 0x37F48D4
	0x037F4830 ADRP X8, 0x955000

ISIL:
	001 Move X1, X31
	002 Call InputDevice..ctor, X0
	003 Return 

