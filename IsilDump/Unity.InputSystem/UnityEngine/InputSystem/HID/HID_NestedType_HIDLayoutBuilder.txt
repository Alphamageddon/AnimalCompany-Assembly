Type: UnityEngine.InputSystem.HID.HID/HIDLayoutBuilder

Method: UnityEngine.InputSystem.Layouts.InputControlLayout Build()

Disassembly:
	0x037F4834 LDR X8, [X8 + 0x9D8]
	0x037F4838 LDR X0, [X8]
	0x037F483C B 0x37F496C
	0x037F4840 ADRP X9, 0x955000
	0x037F4844 LDR X9, [X9 + 0x7D8]
	0x037F4848 ADD X1, X31, 0x8
	0x037F484C STR W8, [X31 + 0x8]
	0x037F4850 LDR X0, [X9]
	0x037F4854 BL 0x1C16E04
	0x037F4858 ADRP X9, 0x8FF000
	0x037F485C LDR W8, [X19]
	0x037F4860 LDR X9, [X9 + 0x758]
	0x037F4864 MOV X20, X0
	0x037F4868 ADD X1, X31, 0x28
	0x037F486C STR W8, [X31 + 0x28]
	0x037F4870 LDR X0, [X9]
	0x037F4874 BL 0x1C16E04
	0x037F4878 ADRP X8, 0x955000
	0x037F487C LDR X8, [X8 + 0x9E0]
	0x037F4880 MOV X2, X0
	0x037F4884 MOV X1, X20
	0x037F4888 MOV X3, X31
	0x037F488C LDR X8, [X8]
	0x037F4890 MOV X0, X8
	0x037F4894 BL 0x3227BD4
	0x037F4898 B 0x37F496C
	0x037F489C ADRP X9, 0x8FF000
	0x037F48A0 LDR X9, [X9 + 0x758]
	0x037F48A4 ADD X1, X31, 0x8
	0x037F48A8 STR W8, [X31 + 0x8]
	0x037F48AC LDR X0, [X9]
	0x037F48B0 BL 0x1C16E04
	0x037F48B4 ADRP X8, 0x955000
	0x037F48B8 LDR X8, [X8 + 0x9D0]
	0x037F48BC MOV X1, X0
	0x037F48C0 MOV X2, X31
	0x037F48C4 LDR X8, [X8]
	0x037F48C8 MOV X0, X8
	0x037F48CC BL 0x321EFD0
	0x037F48D0 B 0x37F496C
	0x037F48D4 ADRP X9, 0x955000
	0x037F48D8 LDR X9, [X9 + 0x7A0]
	0x037F48DC MOVN X10, 0x0
	0x037F48E0 ADD X0, X31, 0x8
	0x037F48E4 MOV X1, X31
	0x037F48E8 LDR X9, [X9]
	0x037F48EC STR W8, [X31 + 0x18]
	0x037F48F0 STP X9, X10, [X31 + 0x8]
	0x037F48F4 BL 0x33B162C
	0x037F48F8 CBZ X0, 0x37F497C
	0x037F48FC MOV W1, W31
	0x037F4900 MOV X2, X31
	0x037F4904 MOV X19, X0
	0x037F4908 BL 0x3222A1C
	0x037F490C ADRP X8, 0x901000
	0x037F4910 LDR X8, [X8 + 0x170]
	0x037F4914 MOV W20, W0
	0x037F4918 LDR X8, [X8]
	0x037F491C LDR W9, [X8 + 0xE0]
	0x037F4920 CBNZ W9, 0x37F492C
	0x037F4924 MOV X0, X8
	0x037F4928 BL 0x1C16DFC
	0x037F492C MOV W0, W20
	0x037F4930 MOV X1, X31
	0x037F4934 BL 0x331AEAC
	0x037F4938 STRH W0, [X31 + 0x2C]
	0x037F493C ADD X0, X31, 0x2C
	0x037F4940 MOV X1, X31
	0x037F4944 BL 0x330A76C
	0x037F4948 MOV X20, X0
	0x037F494C MOVZ W1, 0x1
	0x037F4950 MOV X0, X19
	0x037F4954 MOV X2, X31
	0x037F4958 BL 0x322B484
	0x037F495C MOV X1, X0
	0x037F4960 MOV X0, X20
	0x037F4964 MOV X2, X31
	0x037F4968 BL 0x321B938
	0x037F496C LDP X20, X19, [X31 + 0x30]
	0x037F4970 LDR X30, [X31 + 0x20]
	0x037F4974 ADD X31, X31, 0x40
	0x037F4978 RET
	0x037F497C BL 0x1C16F20
	0x037F4980 SUB X31, X31, 0x40
	0x037F4984 STR X30, [X31 + 0x20]
	0x037F4988 STP X20, X19, [X31 + 0x30]
	0x037F498C ADRP X20, 0xBED000
	0x037F4990 LDRB W8, [X20 + 0x374]
	0x037F4994 MOV X19, X0
	0x037F4998 TBNZ X8, 0x0, 0x37F49D4
	0x037F499C ADRP X0, 0x955000
	0x037F49A0 LDR X0, [X0 + 0x7A0]
	0x037F49A4 BL 0x1C16CF4
	0x037F49A8 ADRP X0, 0x8FF000
	0x037F49AC LDR X0, [X0 + 0x758]
	0x037F49B0 BL 0x1C16CF4
	0x037F49B4 ADRP X0, 0x955000
	0x037F49B8 LDR X0, [X0 + 0x9E8]
	0x037F49BC BL 0x1C16CF4
	0x037F49C0 ADRP X0, 0x955000
	0x037F49C4 LDR X0, [X0 + 0x9F0]
	0x037F49C8 BL 0x1C16CF4
	0x037F49CC MOVZ W8, 0x1
	0x037F49D0 STRB W8, [X20 + 0x374]
	0x037F49D4 LDR W8, [X19 + 0x4]
	0x037F49D8 CMP W8, 0x1
	0x037F49DC B.EQ 0x37F4A04
	0x037F49E0 CMP W8, 0x9
	0x037F49E4 B.NE 0x37F4A30
	0x037F49E8 LDR W8, [X19]
	0x037F49EC CMP W8, 0x1
	0x037F49F0 B.NE 0x37F4A38
	0x037F49F4 ADRP X8, 0x955000
	0x037F49F8 LDR X8, [X8 + 0x9F0]
	0x037F49FC LDR X0, [X8]
	0x037F4A00 B 0x37F4A6C
	0x037F4A04 ADRP X8, 0x955000
	0x037F4A08 LDR X8, [X8 + 0x7A0]
	0x037F4A0C LDR W9, [X19]
	0x037F4A10 MOVN X10, 0x0
	0x037F4A14 ADD X0, X31, 0x8
	0x037F4A18 LDR X8, [X8]
	0x037F4A1C MOV X1, X31
	0x037F4A20 STR W9, [X31 + 0x18]
	0x037F4A24 STP X8, X10, [X31 + 0x8]
	0x037F4A28 BL 0x33B162C
	0x037F4A2C B 0x37F4A6C
	0x037F4A30 MOV X0, X31
	0x037F4A34 B 0x37F4A6C
	0x037F4A38 ADRP X9, 0x8FF000
	0x037F4A3C LDR X9, [X9 + 0x758]
	0x037F4A40 ADD X1, X31, 0x8
	0x037F4A44 STR W8, [X31 + 0x8]
	0x037F4A48 LDR X0, [X9]
	0x037F4A4C BL 0x1C16E04
	0x037F4A50 ADRP X8, 0x955000
	0x037F4A54 LDR X8, [X8 + 0x9E8]
	0x037F4A58 MOV X1, X0
	0x037F4A5C MOV X2, X31
	0x037F4A60 LDR X8, [X8]
	0x037F4A64 MOV X0, X8
	0x037F4A68 BL 0x321EFD0
	0x037F4A6C LDP X20, X19, [X31 + 0x30]
	0x037F4A70 LDR X30, [X31 + 0x20]
	0x037F4A74 ADD X31, X31, 0x40
	0x037F4A78 RET
	0x037F4A7C STR X30, [X31 - 0x20]!
	0x037F4A80 STP X20, X19, [X31 + 0x10]
	0x037F4A84 ADRP X20, 0xBED000
	0x037F4A88 LDRB W8, [X20 + 0x376]
	0x037F4A8C MOV X19, X0
	0x037F4A90 TBNZ X8, 0x0, 0x37F4AA8
	0x037F4A94 ADRP X0, 0x927000
	0x037F4A98 LDR X0, [X0 + 0xD18]
	0x037F4A9C BL 0x1C16CF4
	0x037F4AA0 MOVZ W8, 0x1
	0x037F4AA4 STRB W8, [X20 + 0x376]
	0x037F4AA8 LDR W8, [X19 + 0x2C]
	0x037F4AAC CMP W8, 0x20
	0x037F4AB0 B.EQ 0x37F4AF4
	0x037F4AB4 CMP W8, 0x10
	0x037F4AB8 B.EQ 0x37F4B24
	0x037F4ABC CMP W8, 0x8
	0x037F4AC0 B.NE 0x37F4B54
	0x037F4AC4 ADRP X20, 0x927000
	0x037F4AC8 LDR X20, [X20 + 0xD18]
	0x037F4ACC LDR W19, [X19 + 0x10]
	0x037F4AD0 LDR X0, [X20]
	0x037F4AD4 LDR W8, [X0 + 0xE0]
	0x037F4AD8 CBNZ W8, 0x37F4AE4
	0x037F4ADC BL 0x1C16DFC
	0x037F4AE0 LDR X0, [X20]
	0x037F4AE4 LDR X8, [X0 + 0xB8]
	0x037F4AE8 TBNZ X19, 0x1F, 0x37F4B7C
	0x037F4AEC ADD X8, X8, 0x1C
	0x037F4AF0 B 0x37F4B90
	0x037F4AF4 ADRP X20, 0x927000
	0x037F4AF8 LDR X20, [X20 + 0xD18]
	0x037F4AFC LDR W19, [X19 + 0x10]
	0x037F4B00 LDR X0, [X20]
	0x037F4B04 LDR W8, [X0 + 0xE0]
	0x037F4B08 CBNZ W8, 0x37F4B14
	0x037F4B0C BL 0x1C16DFC
	0x037F4B10 LDR X0, [X20]
	0x037F4B14 LDR X8, [X0 + 0xB8]
	0x037F4B18 TBNZ X19, 0x1F, 0x37F4B84
	0x037F4B1C ADD X8, X8, 0x10
	0x037F4B20 B 0x37F4B90
	0x037F4B24 ADRP X20, 0x927000
	0x037F4B28 LDR X20, [X20 + 0xD18]
	0x037F4B2C LDR W19, [X19 + 0x10]
	0x037F4B30 LDR X0, [X20]
	0x037F4B34 LDR W8, [X0 + 0xE0]
	0x037F4B38 CBNZ W8, 0x37F4B44
	0x037F4B3C BL 0x1C16DFC
	0x037F4B40 LDR X0, [X20]
	0x037F4B44 LDR X8, [X0 + 0xB8]
	0x037F4B48 TBNZ X19, 0x1F, 0x37F4B8C
	0x037F4B4C ADD X8, X8, 0x18
	0x037F4B50 B 0x37F4B90
	0x037F4B54 ADRP X19, 0x927000
	0x037F4B58 LDR X19, [X19 + 0xD18]
	0x037F4B5C LDR X0, [X19]
	0x037F4B60 LDR W8, [X0 + 0xE0]
	0x037F4B64 CBNZ W8, 0x37F4B70
	0x037F4B68 BL 0x1C16DFC
	0x037F4B6C LDR X0, [X19]
	0x037F4B70 LDR X8, [X0 + 0xB8]
	0x037F4B74 ADD X8, X8, 0x4
	0x037F4B78 B 0x37F4B90
	0x037F4B7C ADD X8, X8, 0x20
	0x037F4B80 B 0x37F4B90
	0x037F4B84 ADD X8, X8, 0xC
	0x037F4B88 B 0x37F4B90
	0x037F4B8C ADD X8, X8, 0x14
	0x037F4B90 LDR W0, [X8]
	0x037F4B94 LDP X20, X19, [X31 + 0x10]
	0x037F4B98 LDR X30, [X31], #0x20
	0x037F4B9C RET
	0x037F4BA0 STR X30, [X31 - 0x20]!
	0x037F4BA4 STP X20, X19, [X31 + 0x10]
	0x037F4BA8 ADRP X20, 0xBED000
	0x037F4BAC LDRB W8, [X20 + 0x377]
	0x037F4BB0 MOV X19, X0
	0x037F4BB4 TBNZ X8, 0x0, 0x37F4BD8
	0x037F4BB8 ADRP X0, 0x952000
	0x037F4BBC LDR X0, [X0 + 0xA68]
	0x037F4BC0 BL 0x1C16CF4
	0x037F4BC4 ADRP X0, 0x952000
	0x037F4BC8 LDR X0, [X0 + 0xD18]
	0x037F4BCC BL 0x1C16CF4
	0x037F4BD0 MOVZ W8, 0x1
	0x037F4BD4 STRB W8, [X20 + 0x377]
	0x037F4BD8 LDR W8, [X19 + 0x4]
	0x037F4BDC CMP W8, 0x1
	0x037F4BE0 B.EQ 0x37F4C68
	0x037F4BE4 CMP W8, 0x9
	0x037F4BE8 B.NE 0x37F4CC8
	0x037F4BEC LDR W8, [X19]
	0x037F4BF0 CMP W8, 0x2
	0x037F4BF4 B.EQ 0x37F4CD0
	0x037F4BF8 CMP W8, 0x1
	0x037F4BFC B.NE 0x37F4CC8
	0x037F4C00 ADRP X8, 0x952000
	0x037F4C04 LDR X8, [X8 + 0xD18]
	0x037F4C08 MOVZ W1, 0x2
	0x037F4C0C LDR X0, [X8]
	0x037F4C10 BL 0x1C16D6C
	0x037F4C14 ADRP X20, 0x952000
	0x037F4C18 LDR X20, [X20 + 0xA68]
	0x037F4C1C MOV X19, X0
	0x037F4C20 LDR X8, [X20]
	0x037F4C24 LDR W9, [X8 + 0xE0]
	0x037F4C28 CBNZ W9, 0x37F4C38
	0x037F4C2C MOV X0, X8
	0x037F4C30 BL 0x1C16DFC
	0x037F4C34 LDR X8, [X20]
	0x037F4C38 CBZ X19, 0x37F4D4C
	0x037F4C3C LDR W9, [X19 + 0x18]
	0x037F4C40 CBZ W9, 0x37F4D48
	0x037F4C44 LDR X8, [X8 + 0xB8]
	0x037F4C48 CMP W9, 0x1
	0x037F4C4C LDR V0, [X8 + 0x4]
	0x037F4C50 STR V0, [X19 + 0x2]
	0x037F4C54 B.EQ 0x37F4D48
	0x037F4C58 LDR X8, [X20]
	0x037F4C5C LDR X8, [X8 + 0xB8]
	0x037F4C60 LDR V0, [X8 + 0x2]
	0x037F4C64 B 0x37F4D34
	0x037F4C68 LDR W8, [X19]
	0x037F4C6C CMP W8, 0x35
	0x037F4C70 B.NE 0x37F4CC8
	0x037F4C74 ADRP X8, 0x952000
	0x037F4C78 LDR X8, [X8 + 0xD18]
	0x037F4C7C MOVZ W1, 0x1
	0x037F4C80 LDR X0, [X8]
	0x037F4C84 BL 0x1C16D6C
	0x037F4C88 ADRP X20, 0x952000
	0x037F4C8C LDR X20, [X20 + 0xA68]
	0x037F4C90 MOV X19, X0
	0x037F4C94 LDR X8, [X20]
	0x037F4C98 LDR W9, [X8 + 0xE0]
	0x037F4C9C CBNZ W9, 0x37F4CAC
	0x037F4CA0 MOV X0, X8
	0x037F4CA4 BL 0x1C16DFC
	0x037F4CA8 LDR X8, [X20]
	0x037F4CAC CBZ X19, 0x37F4D4C
	0x037F4CB0 LDR W9, [X19 + 0x18]
	0x037F4CB4 CBZ W9, 0x37F4D48
	0x037F4CB8 LDR X8, [X8 + 0xB8]
	0x037F4CBC LDR V0, [X8 + 0x11]
	0x037F4CC0 STR V0, [X19 + 0x2]
	0x037F4CC4 B 0x37F4D38
	0x037F4CC8 MOV X19, X31
	0x037F4CCC B 0x37F4D38
	0x037F4CD0 ADRP X8, 0x952000
	0x037F4CD4 LDR X8, [X8 + 0xD18]
	0x037F4CD8 MOVZ W1, 0x2
	0x037F4CDC LDR X0, [X8]
	0x037F4CE0 BL 0x1C16D6C
	0x037F4CE4 ADRP X20, 0x952000
	0x037F4CE8 LDR X20, [X20 + 0xA68]
	0x037F4CEC MOV X19, X0
	0x037F4CF0 LDR X8, [X20]
	0x037F4CF4 LDR W9, [X8 + 0xE0]
	0x037F4CF8 CBNZ W9, 0x37F4D08
	0x037F4CFC MOV X0, X8
	0x037F4D00 BL 0x1C16DFC
	0x037F4D04 LDR X8, [X20]
	0x037F4D08 CBZ X19, 0x37F4D4C
	0x037F4D0C LDR W9, [X19 + 0x18]
	0x037F4D10 CBZ W9, 0x37F4D48
	0x037F4D14 LDR X8, [X8 + 0xB8]
	0x037F4D18 CMP W9, 0x1
	0x037F4D1C LDR V0, [X8 + 0x5]
	0x037F4D20 STR V0, [X19 + 0x2]
	0x037F4D24 B.EQ 0x37F4D48
	0x037F4D28 LDR X8, [X20]
	0x037F4D2C LDR X8, [X8 + 0xB8]
	0x037F4D30 LDR V0, [X8 + 0x3]
	0x037F4D34 STR V0, [X19 + 0x3]
	0x037F4D38 MOV X0, X19
	0x037F4D3C LDP X20, X19, [X31 + 0x10]
	0x037F4D40 LDR X30, [X31], #0x20
	0x037F4D44 RET
	0x037F4D48 BL 0x1C16F28
	0x037F4D4C BL 0x1C16F20
	0x037F4D50 SUB X31, X31, 0xA0
	0x037F4D54 STR X30, [X31 + 0x40]
	0x037F4D58 STP X28, X27, [X31 + 0x50]
	0x037F4D5C STP X26, X25, [X31 + 0x60]
	0x037F4D60 STP X24, X23, [X31 + 0x70]
	0x037F4D64 STP X22, X21, [X31 + 0x80]
	0x037F4D68 STP X20, X19, [X31 + 0x90]
	0x037F4D6C ADRP X23, 0xBED000
	0x037F4D70 LDRB W8, [X23 + 0x37B]
	0x037F4D74 MOV X22, X3
	0x037F4D78 MOV X21, X2
	0x037F4D7C MOV X20, X1
	0x037F4D80 MOV X19, X0
	0x037F4D84 TBNZ X8, 0x0, 0x37F4E14
	0x037F4D88 ADRP X0, 0x901000
	0x037F4D8C LDR X0, [X0 + 0xC48]
	0x037F4D90 BL 0x1C16CF4
	0x037F4D94 ADRP X0, 0x927000
	0x037F4D98 LDR X0, [X0 + 0xD18]
	0x037F4D9C BL 0x1C16CF4
	0x037F4DA0 ADRP X0, 0x8FF000
	0x037F4DA4 LDR X0, [X0 + 0x758]
	0x037F4DA8 BL 0x1C16CF4
	0x037F4DAC ADRP X0, 0x8FF000
	0x037F4DB0 LDR X0, [X0 + 0x9D0]
	0x037F4DB4 BL 0x1C16CF4
	0x037F4DB8 ADRP X0, 0x955000
	0x037F4DBC LDR X0, [X0 + 0x9F8]
	0x037F4DC0 BL 0x1C16CF4
	0x037F4DC4 ADRP X0, 0x955000
	0x037F4DC8 LDR X0, [X0 + 0xA00]
	0x037F4DCC BL 0x1C16CF4
	0x037F4DD0 ADRP X0, 0x955000
	0x037F4DD4 LDR X0, [X0 + 0xA08]
	0x037F4DD8 BL 0x1C16CF4
	0x037F4DDC ADRP X0, 0x955000
	0x037F4DE0 LDR X0, [X0 + 0xA10]
	0x037F4DE4 BL 0x1C16CF4
	0x037F4DE8 ADRP X0, 0x955000
	0x037F4DEC LDR X0, [X0 + 0xA18]
	0x037F4DF0 BL 0x1C16CF4
	0x037F4DF4 ADRP X0, 0x955000
	0x037F4DF8 LDR X0, [X0 + 0xA20]
	0x037F4DFC BL 0x1C16CF4
	0x037F4E00 ADRP X0, 0x953000
	0x037F4E04 LDR X0, [X0 + 0x4C8]
	0x037F4E08 BL 0x1C16CF4
	0x037F4E0C MOVZ W8, 0x1
	0x037F4E10 STRB W8, [X23 + 0x37B]
	0x037F4E14 STP X31, X31, [X31 + 0x20]
	0x037F4E18 LDR W8, [X19 + 0x4]
	0x037F4E1C CMP W8, 0x1
	0x037F4E20 B.NE 0x37F5374
	0x037F4E24 LDR W8, [X19]
	0x037F4E28 CMP W8, 0x39
	0x037F4E2C B.NE 0x37F5374
	0x037F4E30 MOV X0, X19
	0x037F4E34 BL 0x37F451C
	0x037F4E38 STP X0, X1, [X31 + 0x30]
	0x037F4E3C ADD X0, X31, 0x30
	0x037F4E40 MOV X1, X31
	0x037F4E44 BL 0x3758800
	0x037F4E48 TBNZ X0, 0x0, 0x37F5374
	0x037F4E4C ADRP X8, 0x955000
	0x037F4E50 LDR X23, [X22]
	0x037F4E54 LDR X8, [X8 + 0xA18]
	0x037F4E58 MOV X0, X21
	0x037F4E5C MOV X2, X31
	0x037F4E60 LDR X1, [X8]
	0x037F4E64 BL 0x321B938
	0x037F4E68 CBZ X23, 0x37F5394
	0x037F4E6C MOV X1, X0
	0x037F4E70 MOV X0, X23
	0x037F4E74 MOV X2, X31
	0x037F4E78 BL 0x3816074
	0x037F4E7C ADRP X26, 0x927000
	0x037F4E80 LDR X26, [X26 + 0xD18]
	0x037F4E84 MOV X8, X0
	0x037F4E88 STP X8, X1, [X31 + 0x20]
	0x037F4E8C LDR X0, [X26]
	0x037F4E90 LDR W8, [X0 + 0xE0]
	0x037F4E94 CBNZ W8, 0x37F4EA0
	0x037F4E98 BL 0x1C16DFC
	0x037F4E9C LDR X0, [X26]
	0x037F4EA0 LDR X8, [X0 + 0xB8]
	0x037F4EA4 ADD X0, X31, 0x20
	0x037F4EA8 MOV X2, X31
	0x037F4EAC LDR W1, [X8 + 0x4]
	0x037F4EB0 BL 0x3816608
	0x037F4EB4 ADRP X27, 0x953000
	0x037F4EB8 LDR X27, [X27 + 0x4C8]
	0x037F4EBC STP X0, X1, [X31 + 0x20]
	0x037F4EC0 ADD X0, X31, 0x20
	0x037F4EC4 MOV X2, X31
	0x037F4EC8 LDR X8, [X27]
	0x037F4ECC MOV X1, X8
	0x037F4ED0 BL 0x3816520
	0x037F4ED4 ADRP X9, 0x901000
	0x037F4ED8 LDR X9, [X9 + 0xC48]
	0x037F4EDC MOV X8, X0
	0x037F4EE0 STP X8, X1, [X31 + 0x20]
	0x037F4EE4 LDR X0, [X9]
	0x037F4EE8 LDR W8, [X0 + 0xE0]
	0x037F4EEC CBNZ W8, 0x37F4EF4
	0x037F4EF0 BL 0x1C16DFC
	0x037F4EF4 MOV X0, X31
	0x037F4EF8 BL 0x3338524
	0x037F4EFC ADRP X8, 0x8FF000
	0x037F4F00 LDR X8, [X8 + 0x9D0]
	0x037F4F04 MOV X23, X0
	0x037F4F08 MOVZ W1, 0x4
	0x037F4F0C LDR X8, [X8]
	0x037F4F10 MOV X0, X8
	0x037F4F14 BL 0x1C16D6C
	0x037F4F18 ADRP X28, 0x8FF000
	0x037F4F1C LDR W8, [X19 + 0x14]
	0x037F4F20 LDR X28, [X28 + 0x758]
	0x037F4F24 MOV X24, X0
	0x037F4F28 ADD X1, X31, 0x4C
	0x037F4F2C STR W8, [X31 + 0x4C]
	0x037F4F30 LDR X0, [X28]
	0x037F4F34 BL 0x1C16E04
	0x037F4F38 CBZ X24, 0x37F5394
	0x037F4F3C MOV X25, X0
	0x037F4F40 CBZ X0, 0x37F4F58
	0x037F4F44 LDR X8, [X24]
	0x037F4F48 MOV X0, X25
	0x037F4F4C LDR X1, [X8 + 0x40]
	0x037F4F50 BL 0x1C16E00
	0x037F4F54 CBZ X0, 0x37F539C
	0x037F4F58 LDR W8, [X24 + 0x18]
	0x037F4F5C CBZ W8, 0x37F5398
	0x037F4F60 STR X25, [X24 + 0x20]
	0x037F4F64 LDR W8, [X19 + 0x10]
	0x037F4F68 LDR X0, [X28]
	0x037F4F6C ADD X1, X31, 0x48
	0x037F4F70 ADD W8, W8, 0x1
	0x037F4F74 STR W8, [X31 + 0x48]
	0x037F4F78 BL 0x1C16E04
	0x037F4F7C MOV X25, X0
	0x037F4F80 CBZ X0, 0x37F4F98
	0x037F4F84 LDR X8, [X24]
	0x037F4F88 MOV X0, X25
	0x037F4F8C LDR X1, [X8 + 0x40]
	0x037F4F90 BL 0x1C16E00
	0x037F4F94 CBZ X0, 0x37F539C
	0x037F4F98 LDR W8, [X24 + 0x18]
	0x037F4F9C CMP W8, 0x1
	0x037F4FA0 B.LS 0x37F5398
	0x037F4FA4 ADD X0, X31, 0x30
	0x037F4FA8 MOV X1, X31
	0x037F4FAC STR X25, [X24 + 0x28]
	0x037F4FB0 BL 0x3766604
	0x037F4FB4 MOV X25, X0
	0x037F4FB8 CBZ X0, 0x37F4FD0
	0x037F4FBC LDR X8, [X24]
	0x037F4FC0 MOV X0, X25
	0x037F4FC4 LDR X1, [X8 + 0x40]
	0x037F4FC8 BL 0x1C16E00
	0x037F4FCC CBZ X0, 0x37F539C
	0x037F4FD0 LDR W8, [X24 + 0x18]
	0x037F4FD4 CMP W8, 0x2
	0x037F4FD8 B.LS 0x37F5398
	0x037F4FDC STR X25, [X24 + 0x30]
	0x037F4FE0 LDR W8, [X19 + 0x14]
	0x037F4FE4 LDR X0, [X28]
	0x037F4FE8 ADD X1, X31, 0x1C
	0x037F4FEC STR W8, [X31 + 0x1C]
	0x037F4FF0 BL 0x1C16E04
	0x037F4FF4 MOV X25, X0
	0x037F4FF8 CBZ X0, 0x37F5010
	0x037F4FFC LDR X8, [X24]
	0x037F5000 MOV X0, X25
	0x037F5004 LDR X1, [X8 + 0x40]
	0x037F5008 BL 0x1C16E00
	0x037F500C CBZ X0, 0x37F539C
	0x037F5010 LDR W8, [X24 + 0x18]
	0x037F5014 CMP W8, 0x3
	0x037F5018 B.LS 0x37F5398
	0x037F501C STR X25, [X24 + 0x38]
	0x037F5020 ADRP X8, 0x954000
	0x037F5024 LDR X8, [X8 + 0xA20]
	0x037F5028 MOV X0, X23
	0x037F502C MOV X2, X24
	0x037F5030 MOV X3, X31
	0x037F5034 LDR X1, [X8]
	0x037F5038 BL 0x3227E0C
	0x037F503C MOV X1, X0
	0x037F5040 ADD X0, X31, 0x20
	0x037F5044 MOV X2, X31
	0x037F5048 BL 0x3816C10
	0x037F504C STP X0, X1, [X31 + 0x20]
	0x037F5050 LDR W8, [X20 + 0x30]
	0x037F5054 ADD X0, X31, 0x20
	0x037F5058 MOV X2, X31
	0x037F505C AND W1, W8, 0x7
	0x037F5060 BL 0x38166CC
	0x037F5064 STP X0, X1, [X31 + 0x20]
	0x037F5068 LDR W1, [X19 + 0x2C]
	0x037F506C ADD X0, X31, 0x20
	0x037F5070 MOV X2, X31
	0x037F5074 BL 0x3816834
	0x037F5078 ADRP X8, 0x954000
	0x037F507C LDR X23, [X22]
	0x037F5080 LDR X8, [X8 + 0xA00]
	0x037F5084 MOV X0, X21
	0x037F5088 MOV X2, X31
	0x037F508C LDR X1, [X8]
	0x037F5090 BL 0x321B938
	0x037F5094 CBZ X23, 0x37F5394
	0x037F5098 MOV X1, X0
	0x037F509C MOV X0, X23
	0x037F50A0 MOV X2, X31
	0x037F50A4 BL 0x3816074
	0x037F50A8 LDR X8, [X26]
	0x037F50AC STP X0, X1, [X31 + 0x20]
	0x037F50B0 ADD X0, X31, 0x20
	0x037F50B4 MOV X2, X31
	0x037F50B8 LDR X8, [X8 + 0xB8]
	0x037F50BC LDR W1, [X8 + 0x4]
	0x037F50C0 BL 0x3816608
	0x037F50C4 LDR X8, [X27]
	0x037F50C8 STP X0, X1, [X31 + 0x20]
	0x037F50CC ADD X0, X31, 0x20
	0x037F50D0 MOV X2, X31
	0x037F50D4 MOV X1, X8
	0x037F50D8 BL 0x3816520
	0x037F50DC STP X0, X1, [X31 + 0x20]
	0x037F50E0 MOV X0, X31
	0x037F50E4 BL 0x3338524
	0x037F50E8 LDR W8, [X19 + 0x10]
	0x037F50EC MOV X23, X0
	0x037F50F0 LDR X0, [X28]
	0x037F50F4 ADD X1, X31, 0x18
	0x037F50F8 ADD W8, W8, 0x1
	0x037F50FC STR W8, [X31 + 0x18]
	0x037F5100 BL 0x1C16E04
	0x037F5104 LDR W8, [X19 + 0x10]
	0x037F5108 MOV X24, X0
	0x037F510C LDR X0, [X28]
	0x037F5110 ADD X1, X31, 0x14
	0x037F5114 ADD W8, W8, 0x3
	0x037F5118 STR W8, [X31 + 0x14]
	0x037F511C BL 0x1C16E04
	0x037F5120 ADRP X25, 0x954000
	0x037F5124 LDR X25, [X25 + 0xA08]
	0x037F5128 MOV X3, X0
	0x037F512C MOV X0, X23
	0x037F5130 MOV X2, X24
	0x037F5134 LDR X1, [X25]
	0x037F5138 MOV X4, X31
	0x037F513C BL 0x3227D58
	0x037F5140 MOV X1, X0
	0x037F5144 ADD X0, X31, 0x20
	0x037F5148 MOV X2, X31
	0x037F514C BL 0x3816C10
	0x037F5150 STP X0, X1, [X31 + 0x20]
	0x037F5154 LDR W8, [X20 + 0x30]
	0x037F5158 ADD X0, X31, 0x20
	0x037F515C MOV X2, X31
	0x037F5160 AND W1, W8, 0x7
	0x037F5164 BL 0x38166CC
	0x037F5168 STP X0, X1, [X31 + 0x20]
	0x037F516C LDR W1, [X19 + 0x2C]
	0x037F5170 ADD X0, X31, 0x20
	0x037F5174 MOV X2, X31
	0x037F5178 BL 0x3816834
	0x037F517C ADRP X8, 0x954000
	0x037F5180 LDR X23, [X22]
	0x037F5184 LDR X8, [X8 + 0xA10]
	0x037F5188 MOV X0, X21
	0x037F518C MOV X2, X31
	0x037F5190 LDR X1, [X8]
	0x037F5194 BL 0x321B938
	0x037F5198 CBZ X23, 0x37F5394
	0x037F519C MOV X1, X0
	0x037F51A0 MOV X0, X23
	0x037F51A4 MOV X2, X31
	0x037F51A8 BL 0x3816074
	0x037F51AC LDR X8, [X26]
	0x037F51B0 STP X0, X1, [X31 + 0x20]
	0x037F51B4 ADD X0, X31, 0x20
	0x037F51B8 MOV X2, X31
	0x037F51BC LDR X8, [X8 + 0xB8]
	0x037F51C0 LDR W1, [X8 + 0x4]
	0x037F51C4 BL 0x3816608
	0x037F51C8 LDR X8, [X27]
	0x037F51CC STP X0, X1, [X31 + 0x20]
	0x037F51D0 ADD X0, X31, 0x20
	0x037F51D4 MOV X2, X31
	0x037F51D8 MOV X1, X8
	0x037F51DC BL 0x3816520
	0x037F51E0 STP X0, X1, [X31 + 0x20]
	0x037F51E4 MOV X0, X31
	0x037F51E8 BL 0x3338524
	0x037F51EC LDR W8, [X19 + 0x10]
	0x037F51F0 MOV X23, X0
	0x037F51F4 LDR X0, [X28]
	0x037F51F8 ADD X1, X31, 0x10
	0x037F51FC ADD W8, W8, 0x3
	0x037F5200 STR W8, [X31 + 0x10]
	0x037F5204 BL 0x1C16E04
	0x037F5208 LDR W8, [X19 + 0x10]
	0x037F520C MOV X24, X0
	0x037F5210 LDR X0, [X28]
	0x037F5214 ADD X1, X31, 0xC
	0x037F5218 ADD W8, W8, 0x5
	0x037F521C STR W8, [X31 + 0xC]
	0x037F5220 BL 0x1C16E04
	0x037F5224 LDR X1, [X25]
	0x037F5228 MOV X3, X0
	0x037F522C MOV X0, X23
	0x037F5230 MOV X2, X24
	0x037F5234 MOV X4, X31
	0x037F5238 BL 0x3227D58
	0x037F523C MOV X1, X0
	0x037F5240 ADD X0, X31, 0x20
	0x037F5244 MOV X2, X31
	0x037F5248 BL 0x3816C10
	0x037F524C STP X0, X1, [X31 + 0x20]
	0x037F5250 LDR W8, [X20 + 0x30]
	0x037F5254 ADD X0, X31, 0x20
	0x037F5258 MOV X2, X31
	0x037F525C AND W1, W8, 0x7
	0x037F5260 BL 0x38166CC
	0x037F5264 STP X0, X1, [X31 + 0x20]
	0x037F5268 LDR W1, [X19 + 0x2C]
	0x037F526C ADD X0, X31, 0x20
	0x037F5270 MOV X2, X31
	0x037F5274 BL 0x3816834
	0x037F5278 ADRP X8, 0x954000
	0x037F527C LDR X22, [X22]
	0x037F5280 LDR X8, [X8 + 0x9F8]
	0x037F5284 MOV X0, X21
	0x037F5288 MOV X2, X31
	0x037F528C LDR X1, [X8]
	0x037F5290 BL 0x321B938
	0x037F5294 CBZ X22, 0x37F5394
	0x037F5298 MOV X1, X0
	0x037F529C MOV X0, X22
	0x037F52A0 MOV X2, X31
	0x037F52A4 BL 0x3816074
	0x037F52A8 LDR X8, [X26]
	0x037F52AC STP X0, X1, [X31 + 0x20]
	0x037F52B0 ADD X0, X31, 0x20
	0x037F52B4 MOV X2, X31
	0x037F52B8 LDR X8, [X8 + 0xB8]
	0x037F52BC LDR W1, [X8 + 0x4]
	0x037F52C0 BL 0x3816608
	0x037F52C4 LDR X8, [X27]
	0x037F52C8 STP X0, X1, [X31 + 0x20]
	0x037F52CC ADD X0, X31, 0x20
	0x037F52D0 MOV X2, X31
	0x037F52D4 MOV X1, X8
	0x037F52D8 BL 0x3816520
	0x037F52DC STP X0, X1, [X31 + 0x20]
	0x037F52E0 MOV X0, X31
	0x037F52E4 BL 0x3338524
	0x037F52E8 LDR W8, [X19 + 0x10]
	0x037F52EC MOV X21, X0
	0x037F52F0 LDR X0, [X28]
	0x037F52F4 ADD X1, X31, 0x8
	0x037F52F8 ADD W8, W8, 0x5
	0x037F52FC STR W8, [X31 + 0x8]
	0x037F5300 BL 0x1C16E04
	0x037F5304 LDR W8, [X19 + 0x10]
	0x037F5308 MOV X22, X0
	0x037F530C LDR X0, [X28]
	0x037F5310 ADD X1, X31, 0x4
	0x037F5314 ADD W8, W8, 0x7
	0x037F5318 STR W8, [X31 + 0x4]
	0x037F531C BL 0x1C16E04
	0x037F5320 LDR X1, [X25]
	0x037F5324 MOV X3, X0
	0x037F5328 MOV X0, X21
	0x037F532C MOV X2, X22
	0x037F5330 MOV X4, X31
	0x037F5334 BL 0x3227D58
	0x037F5338 MOV X1, X0
	0x037F533C ADD X0, X31, 0x20
	0x037F5340 MOV X2, X31
	0x037F5344 BL 0x3816C10
	0x037F5348 STP X0, X1, [X31 + 0x20]
	0x037F534C LDR W8, [X20 + 0x30]
	0x037F5350 ADD X0, X31, 0x20
	0x037F5354 MOV X2, X31
	0x037F5358 AND W1, W8, 0x7
	0x037F535C BL 0x38166CC
	0x037F5360 STP X0, X1, [X31 + 0x20]
	0x037F5364 LDR W1, [X19 + 0x2C]
	0x037F5368 ADD X0, X31, 0x20
	0x037F536C MOV X2, X31
	0x037F5370 BL 0x3816834
	0x037F5374 LDP X20, X19, [X31 + 0x90]
	0x037F5378 LDP X22, X21, [X31 + 0x80]
	0x037F537C LDP X24, X23, [X31 + 0x70]
	0x037F5380 LDP X26, X25, [X31 + 0x60]
	0x037F5384 LDP X28, X27, [X31 + 0x50]
	0x037F5388 LDR X30, [X31 + 0x40]
	0x037F538C ADD X31, X31, 0xA0
	0x037F5390 RET
	0x037F5394 BL 0x1C16F20
	0x037F5398 BL 0x1C16F28
	0x037F539C BL 0x1C16F44
	0x037F53A0 MOV X1, X31
	0x037F53A4 BL 0x1C16DEC
	0x037F53A8 STR X30, [X31 - 0x20]!
	0x037F53AC STP X20, X19, [X31 + 0x10]
	0x037F53B0 ADRP X19, 0xBEC000
	0x037F53B4 ADRP X20, 0x954000
	0x037F53B8 LDRB W8, [X19 + 0x372]
	0x037F53BC LDR X20, [X20 + 0x960]
	0x037F53C0 TBNZ X8, 0x0, 0x37F53D8
	0x037F53C4 ADRP X0, 0x954000
	0x037F53C8 LDR X0, [X0 + 0x960]
	0x037F53CC BL 0x1C16CF4
	0x037F53D0 MOVZ W8, 0x1
	0x037F53D4 STRB W8, [X19 + 0x372]
	0x037F53D8 LDR X0, [X20]
	0x037F53DC BL 0x1C16F10

ISIL:
	001 Subtract X31, X31, 384
	002 Move [X31+288], X29
	003 Move [X31+296], X30
	004 Move [X31+304], X28
	005 Move [X31+312], X27
	006 Move [X31+320], X26
	007 Move [X31+328], X25
	008 Move [X31+336], X24
	009 Move [X31+344], X23
	010 Move [X31+352], X22
	011 Move [X31+360], X21
	012 Move [X31+368], X20
	013 Move [X31+376], X19
	014 Move X22, 0xBEE000
	015 Move X21, 0x955000
	016 Move W8, [X22+881]
	017 Move X21, [X21+3664]
	018 Move X20, X0
	019 Add X19, X31, 128
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {110}
	024 Move X0, 0x956000
	025 Move X0, [X0+2336]
	026 Call 0x1C17CF4
	027 Move X0, 0x955000
	028 Move X0, [X0+3664]
	029 Call 0x1C17CF4
	030 Move X0, 0x953000
	031 Move X0, [X0+2664]
	032 Call 0x1C17CF4
	033 Move X0, 0x956000
	034 Move X0, [X0+2344]
	035 Call 0x1C17CF4
	036 Move X0, 0x928000
	037 Move X0, [X0+3352]
	038 Call 0x1C17CF4
	039 Move X0, 0x953000
	040 Move X0, [X0+3352]
	041 Call 0x1C17CF4
	042 Move X0, 0x956000
	043 Move X0, [X0+2352]
	044 Call 0x1C17CF4
	045 Move X0, 0x956000
	046 Move X0, [X0+2360]
	047 Call 0x1C17CF4
	048 Move X0, 0x952000
	049 Move X0, [X0+1032]
	050 Call 0x1C17CF4
	051 Move X0, 0x956000
	052 Move X0, [X0+2368]
	053 Call 0x1C17CF4
	054 Move X0, 0x900000
	055 Move X0, [X0+2760]
	056 Call 0x1C17CF4
	057 Move X0, 0x956000
	058 Move X0, [X0+2376]
	059 Call 0x1C17CF4
	060 Move X0, 0x956000
	061 Move X0, [X0+2384]
	062 Call 0x1C17CF4
	063 Move X0, 0x956000
	064 Move X0, [X0+2392]
	065 Call 0x1C17CF4
	066 Move X0, 0x956000
	067 Move X0, [X0+2400]
	068 Call 0x1C17CF4
	069 Move X0, 0x956000
	070 Move X0, [X0+2408]
	071 Call 0x1C17CF4
	072 Move X0, 0x956000
	073 Move X0, [X0+2416]
	074 Call 0x1C17CF4
	075 Move X0, 0x955000
	076 Move X0, [X0+1504]
	077 Call 0x1C17CF4
	078 Move X0, 0x956000
	079 Move X0, [X0+2424]
	080 Call 0x1C17CF4
	081 Move X0, 0x956000
	082 Move X0, [X0+2432]
	083 Call 0x1C17CF4
	084 Move X0, 0x956000
	085 Move X0, [X0+2440]
	086 Call 0x1C17CF4
	087 Move X0, 0x902000
	088 Move X0, [X0+928]
	089 Call 0x1C17CF4
	090 Move X0, 0x956000
	091 Move X0, [X0+2448]
	092 Call 0x1C17CF4
	093 Move X0, 0x956000
	094 Move X0, [X0+2456]
	095 Call 0x1C17CF4
	096 Move X0, 0x956000
	097 Move X0, [X0+2464]
	098 Call 0x1C17CF4
	099 Move X0, 0x956000
	100 Move X0, [X0+2472]
	101 Call 0x1C17CF4
	102 Move X0, 0x956000
	103 Move X0, [X0+2480]
	104 Call 0x1C17CF4
	105 Move X0, 0x956000
	106 Move X0, [X0+2488]
	107 Call 0x1C17CF4
	108 Move W8, 1
	109 Move [X22+881], W8
	110 Move X0, [X21]
	111 NotImplemented "Instruction MOVI not yet implemented."
	112 Move [X31+272], X31
	113 Move [X31+192], X31
	114 Move [X19+112], V0
	115 Move [X19+120], V0
	116 Move [X19+80], V0
	117 Move [X19+88], V0
	118 Move [X19+32], V0
	119 Move [X19+40], V0
	120 Move [X31+128], V0
	121 Move [X31+136], V0
	122 Move [X31+112], X31
	123 Move [X31+120], X31
	124 Move [X31+96], X31
	125 Move [X31+104], X31
	126 Call 0x1C17F10
	127 Move X1, X31
	128 Move X19, X0
	129 Call Builder..ctor, X0
	130 Compare X19, 0
	131 JumpIfEqual {828}
	132 Move X8, [X20+16]
	133 Move X25, 0x956000
	134 Move X0, X19
	135 Move X2, X31
	136 Move [X19+24], X8
	137 Move X8, [X20+80]
	138 Move [X19+32], X8
	139 Move X1, [X20+72]
	140 Move X25, [X25+2400]
	141 Call Builder.set_extendsLayout, X0, X1
	142 Add X0, X31, 24
	143 Move W1, 72
	144 Move W2, 73
	145 Move W3, 68
	146 Move W4, 32
	147 Move X5, X31
	148 Move [X31+24], W31
	149 Call FourCC..ctor, X0, X1, X2, X3, X4
	150 Move W8, [X31+24]
	151 Move [X19+40], W8
	152 Move X0, [X25]
	153 Move [X31+280], X19
	154 Move X21, [X20+56]
	155 Move W8, [X0+224]
	156 Compare W8, 0
	157 JumpIfNotEqual {160}
	158 Call 0x1C17DFC
	159 Move X0, [X25]
	160 Move X8, [X0+184]
	161 Move X24, 0x956000
	162 Move X22, [X8+8]
	163 Move X24, [X24+2336]
	164 Compare X22, 0
	165 JumpIfNotEqual {187}
	166 Move W8, [X0+224]
	167 Compare W8, 0
	168 JumpIfNotEqual {171}
	169 Call 0x1C17DFC
	170 Move X0, [X25]
	171 Move X9, 0x956000
	172 Move X8, [X0+184]
	173 Move X9, [X9+2352]
	174 Move X23, [X8]
	175 Move X0, [X9]
	176 Call 0x1C17F10
	177 Move X8, 0x956000
	178 Move X8, [X8+2376]
	179 Move X1, X23
	180 Move X3, X31
	181 Move X22, X0
	182 Move X2, [X8]
	183 Call Predicate`1<HIDElementDescriptor>..ctor, X0, X1, X2
	184 Move X8, [X25]
	185 Move X8, [X8+184]
	186 Move [X8+8], X22
	187 Move X2, [X24]
	188 Add X8, X31, 24
	189 Move X0, X21
	190 Move X1, X22
	191 Call Array.Find, X0, X1
	192 Add X0, X31, 208
	193 Add X1, X31, 24
	194 Move W2, 72
	195 Call 0x3EB2AC0
	196 Move X0, [X25]
	197 Move X21, [X20+56]
	198 Move W8, [X0+224]
	199 Compare W8, 0
	200 JumpIfNotEqual {203}
	201 Call 0x1C17DFC
	202 Move X0, [X25]
	203 Move X8, [X0+184]
	204 Move X22, [X8+16]
	205 Compare X22, 0
	206 JumpIfNotEqual {228}
	207 Move W8, [X0+224]
	208 Compare W8, 0
	209 JumpIfNotEqual {212}
	210 Call 0x1C17DFC
	211 Move X0, [X25]
	212 Move X9, 0x956000
	213 Move X8, [X0+184]
	214 Move X9, [X9+2352]
	215 Move X23, [X8]
	216 Move X0, [X9]
	217 Call 0x1C17F10
	218 Move X8, 0x956000
	219 Move X8, [X8+2384]
	220 Move X1, X23
	221 Move X3, X31
	222 Move X22, X0
	223 Move X2, [X8]
	224 Call Predicate`1<HIDElementDescriptor>..ctor, X0, X1, X2
	225 Move X8, [X25]
	226 Move X8, [X8+184]
	227 Move [X8+16], X22
	228 Move X2, [X24]
	229 Add X8, X31, 24
	230 Move X0, X21
	231 Move X1, X22
	232 Call Array.Find, X0, X1
	233 Add X0, X31, 128
	234 Add X1, X31, 24
	235 Move W2, 72
	236 Call 0x3EB2AC0
	237 Move W8, [X31+208]
	238 Move W9, [X31+128]
	239 NotImplemented "Instruction CMP not yet implemented."
	240 NotImplemented "Instruction CSET not yet implemented."
	241 NotImplemented "Instruction CMP not yet implemented."
	242 NotImplemented "Instruction CSET not yet implemented."
	243 Or W8, W8, W9
	244 Move [X31+20], W8
	245 Move TEMP, X8
	246 And TEMP, TEMP, 1
	247 Compare TEMP, 1
	248 JumpIfEqual {623}
	249 Move X29, X25
	250 Move W26, [X31+256]
	251 Move W25, [X31+176]
	252 Subtract W8, W25, W26
	253 Move W8, [X31+252]
	254 Move W22, [X31+172]
	255 Add W8, W8, W26
	256 Subtract W21, W8, W22
	257 Move W8, W25
	258 Move W22, [X31+172]
	259 Add W21, W8, W22
	260 Move W8, W26
	261 Move X10, 0x956000
	262 Move X10, [X10+2416]
	263 Add W9, W8, 7
	264 NotImplemented "Instruction CMP not yet implemented."
	265 NotImplemented "Instruction CSEL not yet implemented."
	266 Move X1, [X10]
	267 NotImplemented "Instruction SBFM not yet implemented."
	268 And W9, W9, 0xFFFFFFF8
	269 Move X0, X19
	270 Move X2, X31
	271 Subtract W23, W8, W9
	272 Call Builder.AddControl, X0, X1
	273 Move X27, 0x955000
	274 Move X27, [X27+1504]
	275 Move [X31+112], X0
	276 Move [X31+120], X1
	277 Add X0, X31, 112
	278 Move X2, X31
	279 Move X8, [X27]
	280 Move X1, X8
	281 Call ControlBuilder.WithDisplayName, X0, X1
	282 Move X8, [X27]
	283 Move [X31+112], X0
	284 Move [X31+120], X1
	285 Add X0, X31, 112
	286 Move X2, X31
	287 Move X1, X8
	288 Call ControlBuilder.WithLayout, X0, X1
	289 Move [X31+112], X0
	290 Move [X31+120], X1
	291 Add X0, X31, 112
	292 Move W1, W23
	293 Move X2, X31
	294 Call ControlBuilder.WithBitOffset, X0, X1
	295 Move [X31+112], X0
	296 Move [X31+120], X1
	297 Add X0, X31, 112
	298 Move W1, W24
	299 Move X2, X31
	300 Call ControlBuilder.WithByteOffset, X0, X1
	301 Move [X31+112], X0
	302 Move [X31+120], X1
	303 Add X0, X31, 112
	304 Move W1, W21
	305 Move X2, X31
	306 Call ControlBuilder.WithSizeInBits, X0, X1
	307 Move X8, 0x953000
	308 Move X8, [X8+3352]
	309 Move [X31+112], X0
	310 Move [X31+120], X1
	311 Move W1, 1
	312 Move X8, [X8]
	313 Move X0, X8
	314 Call 0x1C17D6C
	315 Move X23, 0x953000
	316 Move X23, [X23+2664]
	317 Move X21, X0
	318 Move X8, [X23]
	319 Move W9, [X8+224]
	320 Compare W9, 0
	321 JumpIfNotEqual {325}
	322 Move X0, X8
	323 Call 0x1C17DFC
	324 Move X8, [X23]
	325 Compare X21, 0
	326 JumpIfEqual {828}
	327 Move W9, [X21+24]
	328 Compare W9, 0
	329 JumpIfEqual {810}
	330 Move X8, [X8+184]
	331 Add X0, X31, 112
	332 Move X1, X21
	333 Move X2, X31
	334 Move V0, [X8]
	335 Move [X21+2], V0
	336 Call ControlBuilder.WithUsages, X0, X1
	337 Add X0, X31, 208
	338 Call HIDElementDescriptor.DetermineParameters, X0
	339 Move X21, X0
	340 Add X0, X31, 128
	341 Call HIDElementDescriptor.DetermineParameters, X0
	342 Move X8, 0x956000
	343 Move X8, [X8+2440]
	344 Move X23, X0
	345 Move X0, X19
	346 Move X2, X31
	347 Move X1, [X8]
	348 Call Builder.AddControl, X0, X1
	349 Move X27, 0x928000
	350 Move X27, [X27+3352]
	351 Move X8, X0
	352 Move [X31+112], X8
	353 Move [X31+120], X1
	354 Move W28, [X31+224]
	355 Move X0, [X27]
	356 Move W8, [X0+224]
	357 Compare W8, 0
	358 JumpIfNotEqual {361}
	359 Call 0x1C17DFC
	360 Move X0, [X27]
	361 Move X8, [X0+184]
	362 NotImplemented "Instruction CMP not yet implemented."
	363 Move W9, 4
	364 Move W10, 8
	365 NotImplemented "Instruction CSEL not yet implemented."
	366 Move W1, [X8]
	367 Add X0, X31, 112
	368 Move X2, X31
	369 Call ControlBuilder.WithFormat, X0, X1
	370 Add W8, W26, 7
	371 NotImplemented "Instruction CMP not yet implemented."
	372 NotImplemented "Instruction CSEL not yet implemented."
	373 NotImplemented "Instruction SBFM not yet implemented."
	374 Move [X31+112], X0
	375 Move [X31+120], X1
	376 Subtract W1, W8, W24
	377 Add X0, X31, 112
	378 Move X2, X31
	379 Call ControlBuilder.WithByteOffset, X0, X1
	380 And W8, W28, 0xFFFFFFF8
	381 Move [X31+112], X0
	382 Move [X31+120], X1
	383 Subtract W1, W26, W8
	384 Add X0, X31, 112
	385 Move X2, X31
	386 Call ControlBuilder.WithBitOffset, X0, X1
	387 Move W8, [X31+252]
	388 Move [X31+112], X0
	389 Move [X31+120], X1
	390 Add X0, X31, 112
	391 Move X2, X31
	392 Move W1, W8
	393 Call ControlBuilder.WithSizeInBits, X0, X1
	394 Move [X31+112], X0
	395 Move [X31+120], X1
	396 Add X0, X31, 112
	397 Move X1, X21
	398 Move X2, X31
	399 Call ControlBuilder.WithParameters, X0, X1
	400 Move [X31+112], X0
	401 Move [X31+120], X1
	402 Add X0, X31, 208
	403 Call HIDElementDescriptor.DetermineDefaultState, X0
	404 Move X2, X0
	405 Move X3, X1
	406 Add X0, X31, 112
	407 Move X1, X2
	408 Move X2, X3
	409 Move X3, X31
	410 Call ControlBuilder.WithDefaultState, X0, X1
	411 Move [X31+112], X0
	412 Move [X31+120], X1
	413 Add X0, X31, 208
	414 Call HIDElementDescriptor.DetermineProcessors, X0
	415 Move X1, X0
	416 Add X0, X31, 112
	417 Move X2, X31
	418 Call ControlBuilder.WithProcessors, X0, X1
	419 Move X8, 0x956000
	420 Move X8, [X8+2464]
	421 Move X0, X19
	422 Move X2, X31
	423 Move X1, [X8]
	424 Call Builder.AddControl, X0, X1
	425 Move X8, X0
	426 Move X0, [X27]
	427 Move [X31+112], X8
	428 Move [X31+120], X1
	429 Move W26, [X31+144]
	430 Move W8, [X0+224]
	431 Compare W8, 0
	432 JumpIfNotEqual {435}
	433 Call 0x1C17DFC
	434 Move X0, [X27]
	435 Move X8, [X0+184]
	436 NotImplemented "Instruction CMP not yet implemented."
	437 Move W9, 4
	438 Move W10, 8
	439 NotImplemented "Instruction CSEL not yet implemented."
	440 Move W1, [X8]
	441 Add X0, X31, 112
	442 Move X2, X31
	443 Call ControlBuilder.WithFormat, X0, X1
	444 Add W8, W25, 7
	445 NotImplemented "Instruction CMP not yet implemented."
	446 NotImplemented "Instruction CSEL not yet implemented."
	447 NotImplemented "Instruction SBFM not yet implemented."
	448 Move [X31+112], X0
	449 Move [X31+120], X1
	450 Subtract W1, W8, W24
	451 Add X0, X31, 112
	452 Move X2, X31
	453 Call ControlBuilder.WithByteOffset, X0, X1
	454 And W8, W26, 0xFFFFFFF8
	455 Move [X31+112], X0
	456 Move [X31+120], X1
	457 Subtract W1, W25, W8
	458 Add X0, X31, 112
	459 Move X2, X31
	460 Call ControlBuilder.WithBitOffset, X0, X1
	461 Move [X31+112], X0
	462 Move [X31+120], X1
	463 Add X0, X31, 112
	464 Move W1, W22
	465 Move X2, X31
	466 Call ControlBuilder.WithSizeInBits, X0, X1
	467 Move [X31+112], X0
	468 Move [X31+120], X1
	469 Add X0, X31, 112
	470 Move X1, X23
	471 Move X2, X31
	472 Call ControlBuilder.WithParameters, X0, X1
	473 Move [X31+112], X0
	474 Move [X31+120], X1
	475 Add X0, X31, 128
	476 Call HIDElementDescriptor.DetermineDefaultState, X0
	477 Move X2, X0
	478 Move X3, X1
	479 Add X0, X31, 112
	480 Move X1, X2
	481 Move X2, X3
	482 Move X3, X31
	483 Call ControlBuilder.WithDefaultState, X0, X1
	484 Move [X31+112], X0
	485 Move [X31+120], X1
	486 Add X0, X31, 128
	487 Call HIDElementDescriptor.DetermineProcessors, X0
	488 Move X1, X0
	489 Add X0, X31, 112
	490 Move X2, X31
	491 Call ControlBuilder.WithProcessors, X0, X1
	492 Move X8, 0x956000
	493 Move X8, [X8+2408]
	494 Move X0, X19
	495 Move X2, X31
	496 Move X1, [X8]
	497 Call Builder.AddControl, X0, X1
	498 Move X22, 0x900000
	499 Move X22, [X22+2760]
	500 Move [X31+112], X0
	501 Move [X31+120], X1
	502 Move W1, 2
	503 Move X8, [X22]
	504 Move X0, X8
	505 Call 0x1C17D6C
	506 Compare X0, 0
	507 JumpIfEqual {828}
	508 Move W8, [X0+24]
	509 Move X1, X0
	510 Compare W8, 0
	511 JumpIfEqual {810}
	512 NotImplemented "Instruction CMP not yet implemented."
	513 Move [X1+32], X23
	514 Move X8, 0x956000
	515 Move X8, [X8+2472]
	516 Move X24, 0x902000
	517 Move X25, 0x952000
	518 Move X8, [X8]
	519 Move X24, [X24+928]
	520 Move X25, [X25+1032]
	521 Move [X1+40], X8
	522 Move X0, [X24]
	523 Move X2, [X25]
	524 Call 0x228DFD8, X0, X1
	525 Move X1, X0
	526 Add X0, X31, 112
	527 Move X2, X31
	528 Call ControlBuilder.WithParameters, X0, X1
	529 Move X8, 0x956000
	530 Move X8, [X8+2448]
	531 Move X0, X19
	532 Move X2, X31
	533 Move X1, [X8]
	534 Call Builder.AddControl, X0, X1
	535 Move X8, [X22]
	536 Move [X31+112], X0
	537 Move [X31+120], X1
	538 Move W1, 2
	539 Move X0, X8
	540 Call 0x1C17D6C
	541 Compare X0, 0
	542 JumpIfEqual {828}
	543 Move W8, [X0+24]
	544 Move X1, X0
	545 Compare W8, 0
	546 JumpIfEqual {810}
	547 NotImplemented "Instruction CMP not yet implemented."
	548 Move [X1+32], X23
	549 Move X8, 0x956000
	550 Move X8, [X8+2488]
	551 Move X8, [X8]
	552 Move [X1+40], X8
	553 Move X0, [X24]
	554 Move X2, [X25]
	555 Call 0x228DFD8, X0, X1
	556 Move X1, X0
	557 Add X0, X31, 112
	558 Move X2, X31
	559 Call ControlBuilder.WithParameters, X0, X1
	560 Move X8, 0x955000
	561 Move X8, [X8+2480]
	562 Move X0, X19
	563 Move X2, X31
	564 Move X1, [X8]
	565 Call Builder.AddControl, X0, X1
	566 Move X8, [X22]
	567 Move [X31+112], X0
	568 Move [X31+120], X1
	569 Move W1, 2
	570 Move X0, X8
	571 Call 0x1C17D6C
	572 Compare X0, 0
	573 JumpIfEqual {828}
	574 Move W8, [X0+24]
	575 Move X1, X0
	576 Compare W8, 0
	577 JumpIfEqual {810}
	578 NotImplemented "Instruction CMP not yet implemented."
	579 Move [X1+32], X21
	580 Move X8, 0x955000
	581 Move X8, [X8+2424]
	582 Move X8, [X8]
	583 Move [X1+40], X8
	584 Move X0, [X24]
	585 Move X2, [X25]
	586 Call 0x228DFD8, X0, X1
	587 Move X1, X0
	588 Add X0, X31, 112
	589 Move X2, X31
	590 Call ControlBuilder.WithParameters, X0, X1
	591 Move X8, 0x955000
	592 Move X8, [X8+2456]
	593 Move X0, X19
	594 Move X2, X31
	595 Move X1, [X8]
	596 Call Builder.AddControl, X0, X1
	597 Move X8, [X22]
	598 Move [X31+112], X0
	599 Move [X31+120], X1
	600 Move W1, 2
	601 Move X0, X8
	602 Call 0x1C17D6C
	603 Compare X0, 0
	604 JumpIfEqual {828}
	605 Move W8, [X0+24]
	606 Move X1, X0
	607 Compare W8, 0
	608 JumpIfEqual {810}
	609 NotImplemented "Instruction CMP not yet implemented."
	610 Move [X1+32], X21
	611 Move X8, 0x955000
	612 Move X8, [X8+2432]
	613 Move X8, [X8]
	614 Move [X1+40], X8
	615 Move X0, [X24]
	616 Move X2, [X25]
	617 Call 0x228DFD8, X0, X1
	618 Move X1, X0
	619 Add X0, X31, 112
	620 Move X2, X31
	621 Call ControlBuilder.WithParameters, X0, X1
	622 Move X25, X29
	623 Move X28, [X20+56]
	624 Compare X28, 0
	625 JumpIfEqual {828}
	626 Move X8, [X28+24]
	627 NotImplemented "Instruction CMP not yet implemented."
	628 And X8, X8, 0
	629 Compare X8, 0
	630 JumpIfEqual {810}
	631 Move X29, X31
	632 Subtract X26, X8, 1
	633 Add X27, X28, 80
	634 Move [X31+8], X19
	635 NotImplemented "Instruction LDUR not yet implemented."
	636 NotImplemented "Instruction CMP not yet implemented."
	637 Move W8, [X31+20]
	638 Move TEMP, X8
	639 And TEMP, TEMP, 1
	640 Compare TEMP, 1
	641 JumpIfEqual {647}
	642 NotImplemented "Instruction LDUR not yet implemented."
	643 NotImplemented "Instruction CMP not yet implemented."
	644 NotImplemented "Instruction LDUR not yet implemented."
	645 And W8, W8, 0xFFFFFFFE
	646 NotImplemented "Instruction CMP not yet implemented."
	647 Subtract X20, X27, 48
	648 Move X0, X20
	649 Call HIDElementDescriptor.DetermineLayout, X0
	650 Compare X0, 0
	651 JumpIfEqual {805}
	652 Move X22, X0
	653 Move X0, X20
	654 Call HIDElementDescriptor.DetermineName, X0
	655 Move X21, X0
	656 Move X0, X19
	657 Move X1, X31
	658 Call Builder.get_controls, X0
	659 Move X8, 0x955000
	660 Move X8, [X8+2360]
	661 Move [X31+24], X0
	662 Move [X31+32], X1
	663 Add X1, X31, 24
	664 Move X8, [X8]
	665 Move X0, X8
	666 Call 0x1C17E04
	667 Move X8, [X25]
	668 Move X23, X0
	669 Move W9, [X8+224]
	670 Compare W9, 0
	671 JumpIfNotEqual {675}
	672 Move X0, X8
	673 Call 0x1C17DFC
	674 Move X8, [X25]
	675 Move X9, [X8+184]
	676 Move X24, [X9+24]
	677 Compare X24, 0
	678 JumpIfNotEqual {702}
	679 Move W9, [X8+224]
	680 Compare W9, 0
	681 JumpIfNotEqual {685}
	682 Move X0, X8
	683 Call 0x1C17DFC
	684 Move X8, [X25]
	685 Move X8, [X8+184]
	686 Move X19, [X8]
	687 Move X8, 0x955000
	688 Move X8, [X8+2344]
	689 Move X0, [X8]
	690 Call 0x1C17F10
	691 Move X8, 0x955000
	692 Move X8, [X8+2392]
	693 Move X1, X19
	694 Move X3, X31
	695 Move X24, X0
	696 Move X2, [X8]
	697 Call Func`2<ControlItem, Object>..ctor, X0, X1, X2
	698 Move X8, [X25]
	699 Move X19, [X31+8]
	700 Move X8, [X8+184]
	701 Move [X8+24], X24
	702 Move X8, 0x955000
	703 Move X8, [X8+2368]
	704 Move X0, X21
	705 Move X1, X23
	706 Move X2, X24
	707 Move X3, [X8]
	708 Call StringHelpers.MakeUniqueName, X0, X1, X2
	709 Move X21, X0
	710 Move X0, X19
	711 Move X1, X21
	712 Move X2, X31
	713 Call Builder.AddControl, X0, X1
	714 Move [X31+112], X0
	715 Move [X31+120], X1
	716 Move X0, X20
	717 Call HIDElementDescriptor.DetermineDisplayName, X0
	718 Move X1, X0
	719 Add X0, X31, 112
	720 Move X2, X31
	721 Call ControlBuilder.WithDisplayName, X0, X1
	722 Move [X31+112], X0
	723 Move [X31+120], X1
	724 Add X0, X31, 112
	725 Move X1, X22
	726 Move X2, X31
	727 Call ControlBuilder.WithLayout, X0, X1
	728 Move [X31+112], X0
	729 Move [X31+120], X1
	730 Move W8, [X27]
	731 Add X0, X31, 112
	732 Move X2, X31
	733 Move W1, W8
	734 ShiftRight W1, 3
	735 And W1, W1, 0x7FFFFFFF
	736 Call ControlBuilder.WithByteOffset, X0, X1
	737 Move [X31+112], X0
	738 Move [X31+120], X1
	739 Move W8, [X27]
	740 Add X0, X31, 112
	741 Move X2, X31
	742 And W1, W8, 7
	743 Call ControlBuilder.WithBitOffset, X0, X1
	744 Move [X31+112], X0
	745 Move [X31+120], X1
	746 NotImplemented "Instruction LDUR not yet implemented."
	747 Add X0, X31, 112
	748 Move X2, X31
	749 Call ControlBuilder.WithSizeInBits, X0, X1
	750 Move [X31+112], X0
	751 Move [X31+120], X1
	752 Move X0, X20
	753 Call HIDElementDescriptor.DetermineFormat, X0
	754 And X1, X0, 0
	755 Add X0, X31, 112
	756 Move X2, X31
	757 Call ControlBuilder.WithFormat, X0, X1
	758 Move [X31+112], X0
	759 Move [X31+120], X1
	760 Move X0, X20
	761 Call HIDElementDescriptor.DetermineDefaultState, X0
	762 Move X2, X0
	763 Move X3, X1
	764 Add X0, X31, 112
	765 Move X1, X2
	766 Move X2, X3
	767 Move X3, X31
	768 Call ControlBuilder.WithDefaultState, X0, X1
	769 Move [X31+112], X0
	770 Move [X31+120], X1
	771 Move X0, X20
	772 Call HIDElementDescriptor.DetermineProcessors, X0
	773 Move X1, X0
	774 Add X0, X31, 112
	775 Move X2, X31
	776 Call ControlBuilder.WithProcessors, X0, X1
	777 Move [X31+96], X0
	778 Move [X31+104], X1
	779 Move X0, X20
	780 Call HIDElementDescriptor.DetermineParameters, X0
	781 Move X1, X31
	782 Move X22, X0
	783 Call String.IsNullOrEmpty, X0
	784 Move TEMP, X0
	785 And TEMP, TEMP, 1
	786 Compare TEMP, 1
	787 JumpIfEqual {792}
	788 Add X0, X31, 96
	789 Move X1, X22
	790 Move X2, X31
	791 Call ControlBuilder.WithParameters, X0, X1
	792 Move X0, X20
	793 Call HIDElementDescriptor.DetermineUsages, X0
	794 Compare X0, 0
	795 JumpIfEqual {800}
	796 Move X1, X0
	797 Add X0, X31, 96
	798 Move X2, X31
	799 Call ControlBuilder.WithUsages, X0, X1
	800 Add X3, X31, 280
	801 Move X0, X20
	802 Move X1, X20
	803 Move X2, X21
	804 Call HIDElementDescriptor.AddChildControls, X0, X1, X2, X3
	805 NotImplemented "Instruction CMP not yet implemented."
	806 Move W8, [X28+24]
	807 Add X29, X29, 1
	808 Add X27, X27, 72
	809 NotImplemented "Instruction CMP not yet implemented."
	810 Call 0x1C17F28
	811 Move X0, X19
	812 Move X1, X31
	813 Call Builder.Build, X0
	814 Move X20, [X31+368]
	815 Move X19, [X31+376]
	816 Move X22, [X31+352]
	817 Move X21, [X31+360]
	818 Move X24, [X31+336]
	819 Move X23, [X31+344]
	820 Move X26, [X31+320]
	821 Move X25, [X31+328]
	822 Move X28, [X31+304]
	823 Move X27, [X31+312]
	824 Move X29, [X31+288]
	825 Move X30, [X31+296]
	826 Add X31, X31, 384
	827 Return X0
	828 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x037F2BF4 LDR X0, [X0 + 0x8D8]
	0x037F2BF8 BL 0x1C16CF4

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

