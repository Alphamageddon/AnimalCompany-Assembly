Type: UnityEngine.InputSystem.HID.HID/HIDElementDescriptor

Method: System.Boolean get_hasNullState()

Disassembly:
	0x037F6460 STRB W8, [X21 + 0x396]
	0x037F6464 LDRB W8, [X19]
	0x037F6468 CBZ W8, 0x37F6528

ISIL:
	001 Move W8, [X0+52]
	002 Move W0, W8
	003 ShiftRight W0, 6
	004 And W0, W0, 63
	005 Return X0

Method: System.Boolean get_hasPreferredState()

Disassembly:
	0x037F646C LDR X21, [X19 + 0x48]
	0x037F6470 CBZ X21, 0x37F648C
	0x037F6474 ADRP X8, 0x900000
	0x037F6478 LDR X8, [X8 + 0xF00]

ISIL:
	001 Move W8, [X0+52]
	002 And W31, W8, 32
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.Boolean get_isArray()

Disassembly:
	0x037F647C MOV X0, X19
	0x037F6480 LDR X1, [X8]
	0x037F6484 BL 0x2434214
	0x037F6488 B 0x37F64CC

ISIL:
	001 Move W8, [X0+52]
	002 And W31, W8, 2
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.Boolean get_isNonLinear()

Disassembly:
	0x037F648C ADRP X8, 0x8FE000
	0x037F6490 LDR X8, [X8 + 0xE30]
	0x037F6494 LDR X0, [X8]

ISIL:
	001 Move W8, [X0+52]
	002 Move W0, W8
	003 ShiftRight W0, 4
	004 And W0, W0, 15
	005 Return X0

Method: System.Boolean get_isRelative()

Disassembly:
	0x037F6498 BL 0x1C16F10
	0x037F649C ADRP X8, 0x901000
	0x037F64A0 LDR X8, [X8 + 0xB70]

ISIL:
	001 Move W8, [X0+52]
	002 Move W0, W8
	003 ShiftRight W0, 2
	004 And W0, W0, 3
	005 Return X0

Method: System.Boolean get_isConstant()

Disassembly:
	0x037F64A4 MOV X21, X0
	0x037F64A8 LDR X1, [X8]
	0x037F64AC BL 0x2FDBF14

ISIL:
	001 Move W8, [X0+52]
	002 And W0, W8, 1
	003 Return X0

Method: System.Boolean get_isWrapping()

Disassembly:
	0x037F64B0 STR X21, [X19 + 0x48]
	0x037F64B4 ADRP X8, 0x900000
	0x037F64B8 LDR X8, [X8 + 0xF00]

ISIL:
	001 Move W8, [X0+52]
	002 Move W0, W8
	003 ShiftRight W0, 3
	004 And W0, W0, 7
	005 Return X0

Method: System.Boolean get_isSigned()

Disassembly:
	0x037F5510 ORN W10, W31, W9, 0x0
	0x037F5514 CMP W8, W10
	0x037F5518 FMOV S0, 1

ISIL:
	001 Move W8, [X0+16]
	002 Move W0, W8
	003 ShiftRight W0, 31
	004 And W0, W0, 0x7FFFFFFF
	005 Return X0

Method: System.Single get_minFloatValue()

Disassembly:
	0x037F64BC MOV X0, X19
	0x037F64C0 LDR X1, [X8]
	0x037F64C4 BL 0x2434214
	0x037F64C8 CBZ X21, 0x37F655C
	0x037F64CC ADRP X9, 0x8FE000
	0x037F64D0 LDR X9, [X9 + 0xE10]
	0x037F64D4 LDR W10, [X21 + 0x1C]
	0x037F64D8 LDR X8, [X21 + 0x10]
	0x037F64DC MOV W1, W0
	0x037F64E0 LDR X9, [X9]
	0x037F64E4 ADD W10, W10, 0x1
	0x037F64E8 STR W10, [X21 + 0x1C]
	0x037F64EC CBZ X8, 0x37F655C
	0x037F64F0 LDRSW X10, [X21 + 0x18]
	0x037F64F4 LDR W11, [X8 + 0x18]
	0x037F64F8 CMP W10, W11
	0x037F64FC B.CS 0x37F6514
	0x037F6500 ADD W9, W10, 0x1
	0x037F6504 ADD X8, X8, X10, 0x2, LSL
	0x037F6508 STR W9, [X21 + 0x18]
	0x037F650C STR W1, [X8 + 0x20]
	0x037F6510 B 0x37F6528
	0x037F6514 LDR X8, [X9 + 0x20]
	0x037F6518 MOV X0, X21
	0x037F651C LDR X8, [X8 + 0xC0]
	0x037F6520 LDR X2, [X8 + 0x70]
	0x037F6524 BL 0x2FDC70C
	0x037F6528 ADRP X8, 0x8FE000
	0x037F652C LDR X8, [X8 + 0x470]
	0x037F6530 ADD X0, X31, 0x8
	0x037F6534 MOV W1, W20
	0x037F6538 STR X31, [X31 + 0x8]
	0x037F653C LDR X2, [X8]
	0x037F6540 BL 0x24341FC
	0x037F6544 LDR X8, [X31 + 0x8]
	0x037F6548 LDP X30, X21, [X31 + 0x10]
	0x037F654C STR X8, [X19]
	0x037F6550 LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Move W8, [X0+16]
	002 Move W9, [X0+44]
	003 Move TEMP, X8
	004 And TEMP, TEMP, -2147483648
	005 Compare TEMP, -2147483648
	006 JumpIfEqual {21}
	007 Compare W8, 0
	008 JumpIfEqual {42}
	009 Move TEMP, 0
	010 Not TEMP
	011 Move X10, TEMP
	012 NotImplemented "Instruction LSLV not yet implemented."
	013 NotImplemented "Instruction ORN not yet implemented."
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Move S0, 1
	016 NotImplemented "Instruction UCVTF not yet implemented."
	017 NotImplemented "Instruction UCVTF not yet implemented."
	018 NotImplemented "Instruction FDIV not yet implemented."
	019 NotImplemented "Instruction INVALID not yet implemented."
	020 Return V0
	021 Subtract W9, W9, 1
	022 Move TEMP, 0
	023 Not TEMP
	024 Move X10, TEMP
	025 NotImplemented "Instruction LSLV not yet implemented."
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move S0, -1
	028 NotImplemented "Instruction ORN not yet implemented."
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move S0, 1
	031 NotImplemented "Instruction SCVTF not yet implemented."
	032 NotImplemented "Instruction SCVTF not yet implemented."
	033 NotImplemented "Instruction SCVTF not yet implemented."
	034 Subtract D0, D0, D1
	035 Subtract D1, D2, D1
	036 NotImplemented "Instruction FDIV not yet implemented."
	037 NotImplemented "Instruction INVALID not yet implemented."
	038 Add S0, S0, S0
	039 Move S1, -1
	040 Add S0, S0, S1
	041 Return V0
	042 Move S0, W31
	043 Return V0

Method: System.Single get_maxFloatValue()

Disassembly:
	0x037F6554 ADD X31, X31, 0x30
	0x037F6558 RET
	0x037F655C BL 0x1C16F20
	0x037F6560 STP X30, X21, [X31 - 0x20]!
	0x037F6564 STP X20, X19, [X31 + 0x10]
	0x037F6568 ADRP X21, 0xBEB000
	0x037F656C LDRB W8, [X21 + 0x397]
	0x037F6570 MOV W19, W1
	0x037F6574 MOV X20, X0
	0x037F6578 TBNZ X8, 0x0, 0x37F65B4
	0x037F657C ADRP X0, 0x8FE000
	0x037F6580 LDR X0, [X0 + 0xE28]
	0x037F6584 BL 0x1C16CF4
	0x037F6588 ADRP X0, 0x927000
	0x037F658C LDR X0, [X0 + 0xF38]
	0x037F6590 BL 0x1C16CF4
	0x037F6594 ADRP X0, 0x900000
	0x037F6598 LDR X0, [X0 + 0xEF8]
	0x037F659C BL 0x1C16CF4
	0x037F65A0 ADRP X0, 0x900000
	0x037F65A4 LDR X0, [X0 + 0xF00]
	0x037F65A8 BL 0x1C16CF4
	0x037F65AC MOVZ W8, 0x1
	0x037F65B0 STRB W8, [X21 + 0x397]
	0x037F65B4 MOV X0, X20
	0x037F65B8 LDRB W8, [X0 + 0x8]!
	0x037F65BC CBZ W8, 0x37F6604
	0x037F65C0 MOV X21, X20
	0x037F65C4 LDRB W8, [X21 + 0x10]!
	0x037F65C8 CBZ W8, 0x37F6604
	0x037F65CC ADRP X20, 0x900000
	0x037F65D0 LDR X20, [X20 + 0xF00]
	0x037F65D4 LDR X1, [X20]
	0x037F65D8 BL 0x2434214
	0x037F65DC LDR X1, [X20]
	0x037F65E0 MOV W20, W0
	0x037F65E4 MOV X0, X21
	0x037F65E8 BL 0x2434214
	0x037F65EC SUBS W8, W0, W20
	0x037F65F0 B.MI 0x37F6660

ISIL:
	001 Move W9, [X0+16]
	002 Move W8, [X0+44]
	003 Move TEMP, X9
	004 And TEMP, TEMP, -2147483648
	005 Compare TEMP, -2147483648
	006 JumpIfEqual {22}
	007 Move W9, [X0+20]
	008 Compare W9, 0
	009 JumpIfEqual {44}
	010 Move TEMP, 0
	011 Not TEMP
	012 Move X10, TEMP
	013 NotImplemented "Instruction LSLV not yet implemented."
	014 NotImplemented "Instruction ORN not yet implemented."
	015 NotImplemented "Instruction CMP not yet implemented."
	016 Move S0, 1
	017 NotImplemented "Instruction UCVTF not yet implemented."
	018 NotImplemented "Instruction UCVTF not yet implemented."
	019 NotImplemented "Instruction FDIV not yet implemented."
	020 NotImplemented "Instruction INVALID not yet implemented."
	021 Return V0
	022 Move W9, [X0+20]
	023 Subtract W8, W8, 1
	024 Move TEMP, 0
	025 Not TEMP
	026 Move X10, TEMP
	027 NotImplemented "Instruction LSLV not yet implemented."
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move S0, -1
	030 NotImplemented "Instruction ORN not yet implemented."
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move S0, 1
	033 NotImplemented "Instruction SCVTF not yet implemented."
	034 NotImplemented "Instruction SCVTF not yet implemented."
	035 NotImplemented "Instruction SCVTF not yet implemented."
	036 Subtract D0, D0, D1
	037 Subtract D1, D2, D1
	038 NotImplemented "Instruction FDIV not yet implemented."
	039 NotImplemented "Instruction INVALID not yet implemented."
	040 Add S0, S0, S0
	041 Move S1, -1
	042 Add S0, S0, S1
	043 Return V0
	044 Move S0, W31
	045 Return V0

Method: System.Boolean Is(UnityEngine.InputSystem.HID.HID/UsagePage usagePage, System.Int32 usage)

Disassembly:
	0x037F5654 LDR W8, [X19 + 0x10]
	0x037F5658 CBNZ W8, 0x37F5664
	0x037F565C LDR W8, [X19 + 0x14]
	0x037F5660 CBZ W8, 0x37F5794
	0x037F5664 MOV X0, X19
	0x037F5668 BL 0x37F54BC
	0x037F566C MOV X0, X19
	0x037F5670 MOV V9.16B, V0.16B
	0x037F5674 BL 0x37F5554

ISIL:
	001 Move W8, [X0+4]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Move W8, [X0]
	004 NotImplemented "Instruction CMP not yet implemented."
	005 NotImplemented "Instruction CSET not yet implemented."
	006 Return X0
	007 Move W0, W31
	008 Return X0

Method: System.String DetermineName()

Disassembly:
	0x037F5770 MOV X4, X0
	0x037F5774 MOV X0, X19
	0x037F5778 MOV X2, X20
	0x037F577C MOV X3, X21
	0x037F5780 MOV X5, X31
	0x037F5784 BL 0x3227DB0
	0x037F5788 B 0x37F57A0
	0x037F578C MOV X0, X31
	0x037F5790 B 0x37F57A0
	0x037F5794 ADRP X8, 0x954000
	0x037F5798 LDR X8, [X8 + 0xA28]
	0x037F579C LDR X0, [X8]
	0x037F57A0 LDP X20, X19, [X31 + 0x50]
	0x037F57A4 LDP X22, X21, [X31 + 0x40]
	0x037F57A8 LDP X30, X23, [X31 + 0x30]
	0x037F57AC LDP D9, D8, [X31 + 0x20]
	0x037F57B0 LDR V10, [X31 + 0x10]
	0x037F57B4 ADD X31, X31, 0x60
	0x037F57B8 RET
	0x037F57BC MOVI V0.2D, 0x0
	0x037F57C0 STUR V0, [X0 + 0x28]
	0x037F57C4 STUR V0, [X0 + 0x18]
	0x037F57C8 STUR V0, [X0 + 0x8]
	0x037F57CC STP W1, W2, [X0]
	0x037F57D0 RET
	0x037F57D4 MOVI V0.2D, 0x0
	0x037F57D8 MOVZ W8, 0x1
	0x037F57DC STUR V0, [X0 + 0x28]
	0x037F57E0 STUR V0, [X0 + 0x18]
	0x037F57E4 STUR V0, [X0 + 0x8]
	0x037F57E8 STP W8, W1, [X0]
	0x037F57EC RET
	0x037F57F0 MOVZ W9, 0x8
	0x037F57F4 STP W2, W1, [X0 + 0x8]
	0x037F57F8 STR W9, [X0 + 0x10]
	0x037F57FC LDR X10, [X0 + 0x30]
	0x037F5800 LDP V1, V0, [X0 + 0x10]
	0x037F5804 LDR V2, [X0]
	0x037F5808 STR X10, [X8 + 0x30]
	0x037F580C STP V1, V0, [X8 + 0x10]
	0x037F5810 STR V2, [X8]
	0x037F5814 RET
	0x037F5818 SUB X31, X31, 0x180
	0x037F581C STP X29, X30, [X31 + 0x130]
	0x037F5820 STP X26, X25, [X31 + 0x140]
	0x037F5824 STP X24, X23, [X31 + 0x150]
	0x037F5828 STP X22, X21, [X31 + 0x160]
	0x037F582C STP X20, X19, [X31 + 0x170]
	0x037F5830 ADRP X24, 0xBEC000
	0x037F5834 MOV X19, X8
	0x037F5838 LDRB W8, [X24 + 0x37E]
	0x037F583C MOV W21, W3
	0x037F5840 MOV W23, W2
	0x037F5844 MOV W22, W1
	0x037F5848 MOV X20, X0
	0x037F584C ADD X26, X31, 0x90
	0x037F5850 TBNZ X8, 0x0, 0x37F58B0
	0x037F5854 ADRP X0, 0x954000
	0x037F5858 LDR X0, [X0 + 0xA38]
	0x037F585C BL 0x1C16CF4
	0x037F5860 ADRP X0, 0x954000
	0x037F5864 LDR X0, [X0 + 0xA40]
	0x037F5868 BL 0x1C16CF4
	0x037F586C ADRP X0, 0x954000
	0x037F5870 LDR X0, [X0 + 0xA48]
	0x037F5874 BL 0x1C16CF4
	0x037F5878 ADRP X0, 0x954000
	0x037F587C LDR X0, [X0 + 0x840]
	0x037F5880 BL 0x1C16CF4
	0x037F5884 ADRP X0, 0x954000
	0x037F5888 LDR X0, [X0 + 0xA50]
	0x037F588C BL 0x1C16CF4
	0x037F5890 ADRP X0, 0x954000
	0x037F5894 LDR X0, [X0 + 0x880]
	0x037F5898 BL 0x1C16CF4
	0x037F589C ADRP X0, 0x954000
	0x037F58A0 LDR X0, [X0 + 0x878]
	0x037F58A4 BL 0x1C16CF4
	0x037F58A8 MOVZ W8, 0x1
	0x037F58AC STRB W8, [X24 + 0x37E]
	0x037F58B0 MOVI V0.2D, 0x0
	0x037F58B4 STR X31, [X31 + 0xE0]
	0x037F58B8 STP V0, V0, [X26 + 0x30]
	0x037F58BC STP V0, V0, [X26 + 0x10]
	0x037F58C0 STR V0, [X26]
	0x037F58C4 LDR X0, [X20 + 0x18]
	0x037F58C8 CBZ X0, 0x37F59EC
	0x037F58CC ADRP X8, 0x954000
	0x037F58D0 LDR X8, [X8 + 0xA50]
	0x037F58D4 ADRP X25, 0x954000
	0x037F58D8 ADRP X24, 0x954000
	0x037F58DC LDR X1, [X8]
	0x037F58E0 LDR X25, [X25 + 0xA40]
	0x037F58E4 LDR X24, [X24 + 0xA38]
	0x037F58E8 ADD X8, X31, 0x38
	0x037F58EC BL 0x30FFC18
	0x037F58F0 ADD X0, X31, 0x90
	0x037F58F4 ADD X1, X31, 0x38
	0x037F58F8 MOVZ W2, 0x58
	0x037F58FC BL 0x3EB1AC0
	0x037F5900 LDR X1, [X25]
	0x037F5904 ADD X0, X31, 0x90
	0x037F5908 BL 0x2BDD344
	0x037F590C TBZ X0, 0x0, 0x37F59D8
	0x037F5910 LDR W8, [X31 + 0xC8]
	0x037F5914 LDR W9, [X20 + 0x8]
	0x037F5918 CMP W8, W9
	0x037F591C B.NE 0x37F5900
	0x037F5920 LDR W8, [X31 + 0xA0]
	0x037F5924 CMP W8, W23
	0x037F5928 B.NE 0x37F5900
	0x037F592C LDR W8, [X31 + 0xA4]
	0x037F5930 CMP W8, W22
	0x037F5934 B.NE 0x37F5900
	0x037F5938 LDR W8, [X31 + 0xC0]
	0x037F593C LDR W9, [X20 + 0xC]
	0x037F5940 CMP W8, W9
	0x037F5944 B.NE 0x37F5900
	0x037F5948 STR W22, [X31 + 0x38]
	0x037F594C ADRP X0, 0x954000
	0x037F5950 LDR X0, [X0 + 0x7D8]
	0x037F5954 BL 0x1C16D08
	0x037F5958 ADD X1, X31, 0x38
	0x037F595C BL 0x1C16E04
	0x037F5960 MOV X24, X0
	0x037F5964 STR W23, [X31 + 0x110]
	0x037F5968 ADRP X0, 0x8FE000
	0x037F596C LDR X0, [X0 + 0x758]
	0x037F5970 BL 0x1C16D08
	0x037F5974 ADD X1, X31, 0x110
	0x037F5978 BL 0x1C16E04
	0x037F597C MOV X25, X0

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+48], X20
	004 Move [X31+56], X19
	005 Move X20, 0xBED000
	006 Move W8, [X20+883]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {38}
	012 Move X0, 0x901000
	013 Move X0, [X0+368]
	014 Call 0x1C17CF4
	015 Move X0, 0x955000
	016 Move X0, [X0+1952]
	017 Call 0x1C17CF4
	018 Move X0, 0x8FF000
	019 Move X0, [X0+1880]
	020 Call 0x1C17CF4
	021 Move X0, 0x955000
	022 Move X0, [X0+2008]
	023 Call 0x1C17CF4
	024 Move X0, 0x955000
	025 Move X0, [X0+2512]
	026 Call 0x1C17CF4
	027 Move X0, 0x955000
	028 Move X0, [X0+2520]
	029 Call 0x1C17CF4
	030 Move X0, 0x955000
	031 Move X0, [X0+2528]
	032 Call 0x1C17CF4
	033 Move X0, 0x927000
	034 Move X0, [X0+312]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X20+883], W8
	038 NotImplemented "Instruction STRH not yet implemented."
	039 Move W8, [X19+4]
	040 NotImplemented "Instruction CMP not yet implemented."
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move W8, [X19]
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move X8, 0x927000
	045 Move X8, [X8+312]
	046 Move W8, [X19]
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move X8, 0x955000
	049 Move X8, [X8+2520]
	050 Move X0, [X8]
	051 Move X9, 0x955000
	052 Move X9, [X9+2008]
	053 Add X1, X31, 8
	054 Move [X31+8], W8
	055 Move X0, [X9]
	056 Call 0x1C17E04
	057 Move X9, 0x8FF000
	058 Move W8, [X19]
	059 Move X9, [X9+1880]
	060 Move X20, X0
	061 Add X1, X31, 40
	062 Move [X31+40], W8
	063 Move X0, [X9]
	064 Call 0x1C17E04
	065 Move X8, 0x955000
	066 Move X8, [X8+2528]
	067 Move X2, X0
	068 Move X1, X20
	069 Move X3, X31
	070 Move X8, [X8]
	071 Move X0, X8
	072 Call String.Format, X0, X1, X2
	073 Move X9, 0x8FF000
	074 Move X9, [X9+1880]
	075 Add X1, X31, 8
	076 Move [X31+8], W8
	077 Move X0, [X9]
	078 Call 0x1C17E04
	079 Move X8, 0x955000
	080 Move X8, [X8+2512]
	081 Move X1, X0
	082 Move X2, X31
	083 Move X8, [X8]
	084 Move X0, X8
	085 Call String.Format, X0, X1
	086 Move X9, 0x955000
	087 Move X9, [X9+1952]
	088 Move TEMP, 0
	089 Not TEMP
	090 Move X10, TEMP
	091 Add X0, X31, 8
	092 Move X1, X31
	093 Move X9, [X9]
	094 Move [X31+24], W8
	095 Move [X31+8], X9
	096 Move [X31+16], X10
	097 Call Enum.ToString, X0
	098 Compare X0, 0
	099 JumpIfEqual {134}
	100 Move W1, W31
	101 Move X2, X31
	102 Move X19, X0
	103 Call String.get_Chars, X0, X1
	104 Move X8, 0x901000
	105 Move X8, [X8+368]
	106 Move W20, W0
	107 Move X8, [X8]
	108 Move W9, [X8+224]
	109 Compare W9, 0
	110 JumpIfNotEqual {113}
	111 Move X0, X8
	112 Call 0x1C17DFC
	113 Move W0, W20
	114 Move X1, X31
	115 Call Char.ToLowerInvariant, X0
	116 NotImplemented "Instruction STRH not yet implemented."
	117 Add X0, X31, 44
	118 Move X1, X31
	119 Call Char.ToString, X0
	120 Move X20, X0
	121 Move W1, 1
	122 Move X0, X19
	123 Move X2, X31
	124 Call String.Substring, X0, X1
	125 Move X1, X0
	126 Move X0, X20
	127 Move X2, X31
	128 Call String.Concat, X0, X1
	129 Move X20, [X31+48]
	130 Move X19, [X31+56]
	131 Move X30, [X31+32]
	132 Add X31, X31, 64
	133 Return X0
	134 Call 0x1C17F20

Method: System.String DetermineDisplayName()

Disassembly:
	0x037F5980 ADRP X0, 0x954000
	0x037F5984 LDR X0, [X0 + 0xA58]
	0x037F5988 BL 0x1C16D08
	0x037F598C MOV X1, X24
	0x037F5990 MOV X2, X25
	0x037F5994 MOV X3, X31
	0x037F5998 BL 0x3227BD4
	0x037F599C MOV X24, X0
	0x037F59A0 ADRP X0, 0x8FE000
	0x037F59A4 LDR X0, [X0 + 0x5B0]
	0x037F59A8 BL 0x1C16D08
	0x037F59AC BL 0x1C16F10
	0x037F59B0 MOV X25, X0
	0x037F59B4 MOV X1, X24
	0x037F59B8 MOV X2, X31
	0x037F59BC BL 0x337DF1C
	0x037F59C0 ADRP X0, 0x954000
	0x037F59C4 LDR X0, [X0 + 0xA60]
	0x037F59C8 BL 0x1C16D08
	0x037F59CC MOV X1, X0
	0x037F59D0 MOV X0, X25
	0x037F59D4 BL 0x1C16DEC
	0x037F59D8 LDR X1, [X24]
	0x037F59DC ADD X0, X31, 0x90
	0x037F59E0 BL 0x2BDD340
	0x037F59E4 LDR X24, [X20 + 0x18]
	0x037F59E8 B 0x37F5A14
	0x037F59EC ADRP X8, 0x954000
	0x037F59F0 LDR X8, [X8 + 0x878]
	0x037F59F4 LDR X0, [X8]
	0x037F59F8 BL 0x1C16F10
	0x037F59FC ADRP X8, 0x954000
	0x037F5A00 LDR X8, [X8 + 0x880]
	0x037F5A04 MOV X24, X0
	0x037F5A08 LDR X1, [X8]
	0x037F5A0C BL 0x30FE408
	0x037F5A10 STR X24, [X20 + 0x18]
	0x037F5A14 LDP W10, W8, [X20 + 0xC]
	0x037F5A18 LDR W9, [X20 + 0x8]
	0x037F5A1C STP X31, X31, [X31 + 0x28]
	0x037F5A20 STR X31, [X31 + 0x20]
	0x037F5A24 STP X31, X31, [X31 + 0x8]
	0x037F5A28 STR W31, [X31 + 0x18]
	0x037F5A2C CBZ X24, 0x37F5B4C
	0x037F5A30 ADRP X12, 0x954000
	0x037F5A34 LDR X12, [X12 + 0x840]
	0x037F5A38 LDR V0, [X31 + 0x2]
	0x037F5A3C LDR X11, [X31 + 0x30]
	0x037F5A40 LDUR V1, [X31 + 0x8]
	0x037F5A44 LDR W13, [X31 + 0x18]
	0x037F5A48 STR V0, [X26 + 0x8]
	0x037F5A4C STR X11, [X31 + 0x120]
	0x037F5A50 STR V1, [X26 + 0x6]
	0x037F5A54 STR W13, [X31 + 0x100]
	0x037F5A58 LDR W13, [X24 + 0x1C]
	0x037F5A5C LDR X11, [X24 + 0x10]
	0x037F5A60 LDR X12, [X12]
	0x037F5A64 ADD W13, W13, 0x1
	0x037F5A68 STR W13, [X24 + 0x1C]
	0x037F5A6C CBZ X11, 0x37F5B4C
	0x037F5A70 LDRSW X13, [X24 + 0x18]
	0x037F5A74 LDR W14, [X11 + 0x18]
	0x037F5A78 CMP W13, W14

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+48], X20
	004 Move [X31+56], X19
	005 Move X20, 0xBED000
	006 Move W8, [X20+884]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {26}
	012 Move X0, 0x955000
	013 Move X0, [X0+1952]
	014 Call 0x1C17CF4
	015 Move X0, 0x8FF000
	016 Move X0, [X0+1880]
	017 Call 0x1C17CF4
	018 Move X0, 0x955000
	019 Move X0, [X0+2536]
	020 Call 0x1C17CF4
	021 Move X0, 0x955000
	022 Move X0, [X0+2544]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X20+884], W8
	026 Move W8, [X19+4]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move W8, [X19]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X8, 0x955000
	032 Move X8, [X8+2544]
	033 Move X0, [X8]
	034 Move X8, 0x955000
	035 Move X8, [X8+1952]
	036 Move W9, [X19]
	037 Move TEMP, 0
	038 Not TEMP
	039 Move X10, TEMP
	040 Add X0, X31, 8
	041 Move X8, [X8]
	042 Move X1, X31
	043 Move [X31+24], W9
	044 Move [X31+8], X8
	045 Move [X31+16], X10
	046 Call Enum.ToString, X0
	047 Move X0, X31
	048 Move X9, 0x8FF000
	049 Move X9, [X9+1880]
	050 Add X1, X31, 8
	051 Move [X31+8], W8
	052 Move X0, [X9]
	053 Call 0x1C17E04
	054 Move X8, 0x955000
	055 Move X8, [X8+2536]
	056 Move X1, X0
	057 Move X2, X31
	058 Move X8, [X8]
	059 Move X0, X8
	060 Call String.Format, X0, X1
	061 Move X20, [X31+48]
	062 Move X19, [X31+56]
	063 Move X30, [X31+32]
	064 Add X31, X31, 64
	065 Return X0

Method: System.Boolean IsUsableElement()

Disassembly:
	0x037F2BBC BL 0x1C16CF4
	0x037F2BC0 ADRP X0, 0x957000
	0x037F2BC4 LDR X0, [X0 + 0x880]
	0x037F2BC8 BL 0x1C16CF4
	0x037F2BCC ADRP X0, 0x957000
	0x037F2BD0 LDR X0, [X0 + 0x890]
	0x037F2BD4 BL 0x1C16CF4
	0x037F2BD8 ADRP X0, 0x957000
	0x037F2BDC LDR X0, [X0 + 0x8C8]
	0x037F2BE0 BL 0x1C16CF4
	0x037F2BE4 ADRP X0, 0x957000
	0x037F2BE8 LDR X0, [X0 + 0x8D0]
	0x037F2BEC BL 0x1C16CF4
	0x037F2BF0 ADRP X0, 0x957000

ISIL:
	001 Move [X31-16], X30
	002 Move W8, [X0]
	003 And W8, W8, 0xFFFFFFFE
	004 NotImplemented "Instruction CMP not yet implemented."
	005 Move W8, [X0+4]
	006 NotImplemented "Instruction CMP not yet implemented."
	007 NotImplemented "Instruction CSET not yet implemented."
	008 Call HIDElementDescriptor.DetermineLayout, X0
	009 NotImplemented "Instruction CMP not yet implemented."
	010 NotImplemented "Instruction CSET not yet implemented."
	011 Move X30, [X31+16]
	012 Return X0

Method: System.String DetermineLayout()

Disassembly:
	0x037F5678 ADRP X19, 0xBE4000
	0x037F567C LDRB W8, [X19 + 0x5AA]
	0x037F5680 MOV V8.16B, V0.16B
	0x037F5684 CBNZ W8, 0x37F569C
	0x037F5688 ADRP X0, 0x905000
	0x037F568C LDR X0, [X0 + 0x4B8]
	0x037F5690 BL 0x1C16CF4
	0x037F5694 MOVZ W8, 0x1
	0x037F5698 STRB W8, [X19 + 0x5AA]
	0x037F569C ADRP X8, 0x905000
	0x037F56A0 LDR X8, [X8 + 0x4B8]
	0x037F56A4 ADRP X9, 0xFFFFFFFFFD2F5000
	0x037F56A8 LDR V0, [X9 + 0x240]
	0x037F56AC FABS S2, S9
	0x037F56B0 LDR X8, [X8]
	0x037F56B4 FMOV S4, 8
	0x037F56B8 FMUL S3, S2, S0
	0x037F56BC LDR X8, [X8 + 0xB8]
	0x037F56C0 LDR V1, [X8]
	0x037F56C4 FMUL S1, S1, S4
	0x037F56C8 FCMP S3, S1
	0x037F56CC FCSEL S3, S3, S1, GT
	0x037F56D0 FCMP S2, S3
	0x037F56D4 B.PL 0x37F56F0
	0x037F56D8 FABS S2, S8
	0x037F56DC FMUL S0, S2, S0
	0x037F56E0 FCMP S0, S1
	0x037F56E4 FCSEL S0, S0, S1, GT
	0x037F56E8 FCMP S2, S0
	0x037F56EC B.MI 0x37F578C
	0x037F56F0 ADRP X8, 0x900000
	0x037F56F4 LDR X8, [X8 + 0xC48]
	0x037F56F8 ADRP X23, 0x8FE000
	0x037F56FC ADRP X22, 0x954000
	0x037F5700 FSUB S0, S8, S9
	0x037F5704 LDR X0, [X8]
	0x037F5708 LDR X23, [X23 + 0xA90]
	0x037F570C LDR X22, [X22 + 0xA30]
	0x037F5710 FMOV S1, 0.5
	0x037F5714 LDR W8, [X0 + 0xE0]
	0x037F5718 FMUL S0, S0, S1
	0x037F571C FADD S10, S9, S0
	0x037F5720 CBNZ W8, 0x37F5728
	0x037F5724 BL 0x1C16DFC
	0x037F5728 MOV X0, X31
	0x037F572C BL 0x3338524
	0x037F5730 MOV X19, X0
	0x037F5734 LDR X0, [X23]
	0x037F5738 ADD X1, X31, 0x1C
	0x037F573C STR S9, [X31 + 0x1C]
	0x037F5740 BL 0x1C16E04
	0x037F5744 MOV X20, X0
	0x037F5748 LDR X0, [X23]
	0x037F574C ADD X1, X31, 0x18
	0x037F5750 STR S8, [X31 + 0x18]
	0x037F5754 BL 0x1C16E04
	0x037F5758 MOV X21, X0
	0x037F575C LDR X0, [X23]
	0x037F5760 ADD X1, X31, 0xC
	0x037F5764 STR S10, [X31 + 0xC]
	0x037F5768 BL 0x1C16E04
	0x037F576C LDR X1, [X22]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xBED000
	005 Move W8, [X20+885]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {22}
	011 Move X0, 0x951000
	012 Move X0, [X0+848]
	013 Call 0x1C17CF4
	014 Move X0, 0x954000
	015 Move X0, [X0+1736]
	016 Call 0x1C17CF4
	017 Move X0, 0x927000
	018 Move X0, [X0+1304]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+885], W8
	022 Move W8, [X19+32]
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move W8, [X19+4]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move W9, [X19]
	027 Subtract W8, W9, 48
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move X9, -46518272
	030 Add X9, X9, 2465
	031 NotImplemented "Instruction ADR not yet implemented."
	032 Move W11, [X9]
	033 Add X10, X10, X11
	034 Move X0, X31
	035 CallNoReturn X10
	036 Move X8, 0x927000
	037 Move X8, [X8+1304]
	038 Move X0, [X8]
	039 Move X9, 0x951000
	040 Move X9, [X9+848]
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move X9, [X9]
	043 NotImplemented "Instruction CSEL not yet implemented."
	044 Move X10, 0x954000
	045 Move W9, [X19+16]
	046 Move W8, [X19+20]
	047 Move X10, [X10+1736]
	048 Subtract W8, W8, W9
	049 Move X10, [X10]
	050 NotImplemented "Instruction CMP not yet implemented."
	051 NotImplemented "Instruction CSEL not yet implemented."
	052 And W8, W9, 0xFFFFFFFC
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move X8, 0x951000
	055 Move X8, [X8+848]
	056 Move X0, X31
	057 Move X20, [X31+16]
	058 Move X19, [X31+24]
	059 Move X30, [X31+32]
	060 Return X0

Method: UnityEngine.InputSystem.Utilities.FourCC DetermineFormat()

Disassembly:
	0x037F5A7C B.CS 0x37F5AC4
	0x037F5A80 ADD W12, W13, 0x1
	0x037F5A84 STR W12, [X24 + 0x18]
	0x037F5A88 MOVZ W12, 0x48
	0x037F5A8C MADD X11, X13, X12, X11
	0x037F5A90 STP W23, W22, [X11 + 0x20]
	0x037F5A94 LDR V0, [X26 + 0x8]
	0x037F5A98 LDR X12, [X31 + 0x120]
	0x037F5A9C STP W10, W31, [X11 + 0x40]
	0x037F5AA0 STP W9, W21, [X11 + 0x48]
	0x037F5AA4 STR W8, [X11 + 0x50]
	0x037F5AA8 STR X12, [X11 + 0x38]
	0x037F5AAC STUR V0, [X11 + 0x28]
	0x037F5AB0 LDR W8, [X31 + 0x100]
	0x037F5AB4 LDR V0, [X26 + 0x6]
	0x037F5AB8 STR W8, [X11 + 0x64]
	0x037F5ABC STUR V0, [X11 + 0x54]
	0x037F5AC0 B 0x37F5B0C
	0x037F5AC4 LDR X11, [X12 + 0x20]
	0x037F5AC8 LDR V0, [X26 + 0x8]
	0x037F5ACC LDR X12, [X31 + 0x120]
	0x037F5AD0 ADD X1, X31, 0x38
	0x037F5AD4 LDR X11, [X11 + 0xC0]
	0x037F5AD8 MOV X0, X24
	0x037F5ADC LDR X2, [X11 + 0x70]
	0x037F5AE0 STUR V0, [X31 + 0x40]
	0x037F5AE4 LDR V0, [X26 + 0x6]
	0x037F5AE8 LDR W11, [X31 + 0x100]
	0x037F5AEC STP W23, W22, [X31 + 0x38]
	0x037F5AF0 STR X12, [X31 + 0x50]
	0x037F5AF4 STP W10, W31, [X31 + 0x58]
	0x037F5AF8 STP W9, W21, [X31 + 0x60]
	0x037F5AFC STR W8, [X31 + 0x68]
	0x037F5B00 STUR V0, [X31 + 0x6C]
	0x037F5B04 STR W11, [X31 + 0x7C]
	0x037F5B08 BL 0x30FECC8
	0x037F5B0C LDR W8, [X20 + 0x10]
	0x037F5B10 LDR X9, [X20 + 0x30]
	0x037F5B14 LDR V2, [X20]
	0x037F5B18 LDP X24, X23, [X31 + 0x150]
	0x037F5B1C ADD W8, W8, W21
	0x037F5B20 STR W8, [X20 + 0x10]
	0x037F5B24 LDP V1, V0, [X20 + 0x10]
	0x037F5B28 STR X9, [X19 + 0x30]
	0x037F5B2C STR V2, [X19]
	0x037F5B30 LDP X22, X21, [X31 + 0x160]
	0x037F5B34 STP V1, V0, [X19 + 0x10]
	0x037F5B38 LDP X20, X19, [X31 + 0x170]
	0x037F5B3C LDP X26, X25, [X31 + 0x140]
	0x037F5B40 LDP X29, X30, [X31 + 0x130]
	0x037F5B44 ADD X31, X31, 0x180
	0x037F5B48 RET
	0x037F5B4C BL 0x1C16F20
	0x037F5B50 B 0x37F5B60
	0x037F5B54 B 0x37F5B60
	0x037F5B58 B 0x37F5B60
	0x037F5B5C B 0x37F5B60
	0x037F5B60 MOV X24, X0
	0x037F5B64 CMP W1, 0x1
	0x037F5B68 B.NE 0x37F5B9C
	0x037F5B6C MOV X0, X24
	0x037F5B70 BL 0x3EB1AD0
	0x037F5B74 LDR X25, [X0]
	0x037F5B78 BL 0x3EB1AE0
	0x037F5B7C ADRP X8, 0x954000
	0x037F5B80 LDR X8, [X8 + 0xA38]
	0x037F5B84 ADD X0, X31, 0x90
	0x037F5B88 LDR X1, [X8]
	0x037F5B8C BL 0x2BDD340
	0x037F5B90 CBZ X25, 0x37F59E4
	0x037F5B94 MOV X0, X25
	0x037F5B98 BL 0x1C16F18
	0x037F5B9C MOV X25, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xBED000
	005 Move W8, [X20+886]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x927000
	012 Move X0, [X0+3352]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+886], W8
	016 Move W8, [X19+44]
	017 NotImplemented "Instruction CMP not yet implemented."
	018 NotImplemented "Instruction CMP not yet implemented."
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move X20, 0x927000
	021 Move X20, [X20+3352]
	022 Move W19, [X19+16]
	023 Move X0, [X20]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {29}
	027 Call 0x1C17DFC
	028 Move X0, [X20]
	029 Move X8, [X0+184]
	030 Move TEMP, X19
	031 And TEMP, TEMP, -2147483648
	032 Compare TEMP, -2147483648
	033 JumpIfEqual {75}
	034 Add X8, X8, 28
	035 Move X20, 0x927000
	036 Move X20, [X20+3352]
	037 Move W19, [X19+16]
	038 Move X0, [X20]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {44}
	042 Call 0x1C17DFC
	043 Move X0, [X20]
	044 Move X8, [X0+184]
	045 Move TEMP, X19
	046 And TEMP, TEMP, -2147483648
	047 Compare TEMP, -2147483648
	048 JumpIfEqual {76}
	049 Add X8, X8, 16
	050 Move X20, 0x927000
	051 Move X20, [X20+3352]
	052 Move W19, [X19+16]
	053 Move X0, [X20]
	054 Move W8, [X0+224]
	055 Compare W8, 0
	056 JumpIfNotEqual {59}
	057 Call 0x1C17DFC
	058 Move X0, [X20]
	059 Move X8, [X0+184]
	060 Move TEMP, X19
	061 And TEMP, TEMP, -2147483648
	062 Compare TEMP, -2147483648
	063 JumpIfEqual {77}
	064 Add X8, X8, 24
	065 Move X19, 0x927000
	066 Move X19, [X19+3352]
	067 Move X0, [X19]
	068 Move W8, [X0+224]
	069 Compare W8, 0
	070 JumpIfNotEqual {73}
	071 Call 0x1C17DFC
	072 Move X0, [X19]
	073 Move X8, [X0+184]
	074 Add X8, X8, 4
	075 Add X8, X8, 32
	076 Add X8, X8, 12
	077 Add X8, X8, 20
	078 Move W0, [X8]
	079 Move X20, [X31+16]
	080 Move X19, [X31+24]
	081 Move X30, [X31+32]
	082 Return X0

Method: UnityEngine.InputSystem.Utilities.InternedString[] DetermineUsages()

Disassembly:
	0x037F5BA0 B 0x37F5BA8
	0x037F5BA4 MOV X24, X0
	0x037F5BA8 ADRP X8, 0x954000
	0x037F5BAC LDR X8, [X8 + 0xA38]
	0x037F5BB0 LDR X1, [X8]
	0x037F5BB4 ADD X0, X31, 0x90
	0x037F5BB8 BL 0x2BDD340
	0x037F5BBC CBNZ X25, 0x37F5BC8
	0x037F5BC0 MOV X0, X24
	0x037F5BC4 BL 0x1D2C690
	0x037F5BC8 MOV X0, X25
	0x037F5BCC BL 0x1C16F18
	0x037F5BD0 BL 0x1990590
	0x037F5BD4 SUB X31, X31, 0x50
	0x037F5BD8 STP X30, X19, [X31 + 0x40]
	0x037F5BDC MOV W3, W2
	0x037F5BE0 MOV W2, W1
	0x037F5BE4 MOV X19, X8
	0x037F5BE8 ADD X8, X31, 0x8
	0x037F5BEC MOVZ W1, 0x1
	0x037F5BF0 BL 0x37F5818
	0x037F5BF4 LDR X8, [X31 + 0x38]
	0x037F5BF8 LDUR V0, [X31 + 0x28]
	0x037F5BFC LDUR V1, [X31 + 0x18]
	0x037F5C00 LDUR V2, [X31 + 0x8]
	0x037F5C04 STR X8, [X19 + 0x30]
	0x037F5C08 STP V1, V0, [X19 + 0x10]
	0x037F5C0C STR V2, [X19]
	0x037F5C10 LDP X30, X19, [X31 + 0x40]
	0x037F5C14 ADD X31, X31, 0x50
	0x037F5C18 RET
	0x037F5C1C SUB X31, X31, 0x130
	0x037F5C20 STR X29, [X31 + 0xF0]
	0x037F5C24 STP X30, X23, [X31 + 0x100]
	0x037F5C28 STP X22, X21, [X31 + 0x110]
	0x037F5C2C STP X20, X19, [X31 + 0x120]
	0x037F5C30 ADRP X23, 0xBEC000
	0x037F5C34 LDRB W9, [X23 + 0x37F]
	0x037F5C38 MOV W21, W2
	0x037F5C3C MOV W22, W1
	0x037F5C40 MOV X19, X0
	0x037F5C44 MOV X20, X8
	0x037F5C48 TBNZ X9, 0x0, 0x37F5C78
	0x037F5C4C ADRP X0, 0x954000
	0x037F5C50 LDR X0, [X0 + 0x8D0]
	0x037F5C54 BL 0x1C16CF4
	0x037F5C58 ADRP X0, 0x954000
	0x037F5C5C LDR X0, [X0 + 0xA68]
	0x037F5C60 BL 0x1C16CF4
	0x037F5C64 ADRP X0, 0x954000
	0x037F5C68 LDR X0, [X0 + 0xA70]
	0x037F5C6C BL 0x1C16CF4
	0x037F5C70 MOVZ W8, 0x1
	0x037F5C74 STRB W8, [X23 + 0x37F]
	0x037F5C78 LDR X0, [X19 + 0x18]
	0x037F5C7C CBZ X0, 0x37F5D4C
	0x037F5C80 LDR W8, [X0 + 0x18]
	0x037F5C84 SUBS W23, W8, 0x1
	0x037F5C88 B.MI 0x37F5D50
	0x037F5C8C ADRP X8, 0x954000
	0x037F5C90 LDR X8, [X8 + 0xA68]
	0x037F5C94 MOV W1, W23
	0x037F5C98 LDR X2, [X8]
	0x037F5C9C ADD X8, X31, 0xA0
	0x037F5CA0 BL 0x30FE910
	0x037F5CA4 LDR X8, [X31 + 0xB0]
	0x037F5CA8 LDR V0, [X31 + 0xA]
	0x037F5CAC LDP V1, V2, [X31 + 0xC0]
	0x037F5CB0 LDR X9, [X31 + 0xE0]
	0x037F5CB4 STR X8, [X31 + 0x90]
	0x037F5CB8 STR V0, [X31 + 0x8]
	0x037F5CBC STP V1, V2, [X31 + 0x50]
	0x037F5CC0 STR X9, [X31 + 0x70]
	0x037F5CC4 LDR X0, [X19 + 0x18]
	0x037F5CC8 STR V0, [X31 + 0x3]
	0x037F5CCC LDP V0, V1, [X31 + 0x50]
	0x037F5CD0 STR X8, [X31 + 0x40]
	0x037F5CD4 STR X9, [X31 + 0x20]
	0x037F5CD8 STP V0, V1, [X31]
	0x037F5CDC CBZ X0, 0x37F5D4C
	0x037F5CE0 ADRP X8, 0x954000
	0x037F5CE4 LDR X8, [X8 + 0xA70]
	0x037F5CE8 LDR V0, [X31 + 0x3]
	0x037F5CEC LDR X9, [X31 + 0x40]
	0x037F5CF0 LDP V1, V2, [X31]
	0x037F5CF4 LDR X10, [X31 + 0x20]
	0x037F5CF8 LDR X3, [X8]
	0x037F5CFC ADD X2, X31, 0xA0
	0x037F5D00 MOV W1, W23
	0x037F5D04 STP W22, W21, [X31 + 0xB8]
	0x037F5D08 STR V0, [X31 + 0xA]
	0x037F5D0C STR X9, [X31 + 0xB0]
	0x037F5D10 STP V1, V2, [X31 + 0xC0]
	0x037F5D14 STR X10, [X31 + 0xE0]
	0x037F5D18 BL 0x30FE974
	0x037F5D1C LDR X8, [X19 + 0x30]
	0x037F5D20 LDP V1, V0, [X19 + 0x10]
	0x037F5D24 LDR V2, [X19]
	0x037F5D28 LDP X22, X21, [X31 + 0x110]
	0x037F5D2C STR X8, [X20 + 0x30]
	0x037F5D30 STP V1, V0, [X20 + 0x10]
	0x037F5D34 STR V2, [X20]
	0x037F5D38 LDP X20, X19, [X31 + 0x120]
	0x037F5D3C LDP X30, X23, [X31 + 0x100]
	0x037F5D40 LDR X29, [X31 + 0xF0]
	0x037F5D44 ADD X31, X31, 0x130
	0x037F5D48 RET
	0x037F5D4C BL 0x1C16F20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xBED000
	005 Move W8, [X20+887]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0x952000
	012 Move X0, [X0+2664]
	013 Call 0x1C17CF4
	014 Move X0, 0x952000
	015 Move X0, [X0+3352]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+887], W8
	019 Move W8, [X19+4]
	020 NotImplemented "Instruction CMP not yet implemented."
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move W8, [X19]
	023 NotImplemented "Instruction CMP not yet implemented."
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X8, 0x952000
	026 Move X8, [X8+3352]
	027 Move W1, 2
	028 Move X0, [X8]
	029 Call 0x1C17D6C
	030 Move X20, 0x952000
	031 Move X20, [X20+2664]
	032 Move X19, X0
	033 Move X8, [X20]
	034 Move W9, [X8+224]
	035 Compare W9, 0
	036 JumpIfNotEqual {40}
	037 Move X0, X8
	038 Call 0x1C17DFC
	039 Move X8, [X20]
	040 Compare X19, 0
	041 JumpIfEqual {112}
	042 Move W9, [X19+24]
	043 Compare W9, 0
	044 JumpIfEqual {111}
	045 Move X8, [X8+184]
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move V0, [X8+4]
	048 Move [X19+2], V0
	049 Move X8, [X20]
	050 Move X8, [X8+184]
	051 Move V0, [X8+2]
	052 Move W8, [X19]
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move X8, 0x952000
	055 Move X8, [X8+3352]
	056 Move W1, 1
	057 Move X0, [X8]
	058 Call 0x1C17D6C
	059 Move X20, 0x952000
	060 Move X20, [X20+2664]
	061 Move X19, X0
	062 Move X8, [X20]
	063 Move W9, [X8+224]
	064 Compare W9, 0
	065 JumpIfNotEqual {69}
	066 Move X0, X8
	067 Call 0x1C17DFC
	068 Move X8, [X20]
	069 Compare X19, 0
	070 JumpIfEqual {112}
	071 Move W9, [X19+24]
	072 Compare W9, 0
	073 JumpIfEqual {111}
	074 Move X8, [X8+184]
	075 Move V0, [X8+17]
	076 Move [X19+2], V0
	077 Move X19, X31
	078 Move X8, 0x952000
	079 Move X8, [X8+3352]
	080 Move W1, 2
	081 Move X0, [X8]
	082 Call 0x1C17D6C
	083 Move X20, 0x952000
	084 Move X20, [X20+2664]
	085 Move X19, X0
	086 Move X8, [X20]
	087 Move W9, [X8+224]
	088 Compare W9, 0
	089 JumpIfNotEqual {93}
	090 Move X0, X8
	091 Call 0x1C17DFC
	092 Move X8, [X20]
	093 Compare X19, 0
	094 JumpIfEqual {112}
	095 Move W9, [X19+24]
	096 Compare W9, 0
	097 JumpIfEqual {111}
	098 Move X8, [X8+184]
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Move V0, [X8+5]
	101 Move [X19+2], V0
	102 Move X8, [X20]
	103 Move X8, [X8+184]
	104 Move V0, [X8+3]
	105 Move [X19+3], V0
	106 Move X0, X19
	107 Move X20, [X31+16]
	108 Move X19, [X31+24]
	109 Move X30, [X31+32]
	110 Return X0
	111 Call 0x1C17F28
	112 Call 0x1C17F20

Method: System.String DetermineParameters()

Disassembly:
	0x037F53E0 MOV X1, X31
	0x037F53E4 MOV X19, X0
	0x037F53E8 BL 0x33BDD8C
	0x037F53EC LDR X8, [X20]
	0x037F53F0 LDR X8, [X8 + 0xB8]
	0x037F53F4 STR X19, [X8]
	0x037F53F8 LDP X20, X19, [X31 + 0x10]
	0x037F53FC LDR X30, [X31], #0x20
	0x037F5400 RET
	0x037F5404 MOV X1, X31
	0x037F5408 B 0x33BDD8C
	0x037F540C LDR W8, [X1 + 0x4]
	0x037F5410 CMP W8, 0x1
	0x037F5414 B.NE 0x37F5428
	0x037F5418 LDR W8, [X1]
	0x037F541C CMP W8, 0x30
	0x037F5420 CSET W0, EQ
	0x037F5424 RET
	0x037F5428 MOV W0, W31
	0x037F542C RET
	0x037F5430 LDR W8, [X1 + 0x4]
	0x037F5434 CMP W8, 0x1
	0x037F5438 B.NE 0x37F544C
	0x037F543C LDR W8, [X1]
	0x037F5440 CMP W8, 0x31
	0x037F5444 CSET W0, EQ
	0x037F5448 RET
	0x037F544C MOV W0, W31
	0x037F5450 RET
	0x037F5454 LDP X0, X1, [X1]
	0x037F5458 MOV X2, X31
	0x037F545C B 0x37577E0
	0x037F5460 LDRB W8, [X0 + 0x34]
	0x037F5464 UBFM W0, W8, 0x6, 0x6
	0x037F5468 RET
	0x037F546C LDRB W8, [X0 + 0x34]
	0x037F5470 ANDS W31, W8, 0x20
	0x037F5474 CSET W0, EQ
	0x037F5478 RET
	0x037F547C LDRB W8, [X0 + 0x34]
	0x037F5480 ANDS W31, W8, 0x2
	0x037F5484 CSET W0, EQ
	0x037F5488 RET
	0x037F548C LDRB W8, [X0 + 0x34]
	0x037F5490 UBFM W0, W8, 0x4, 0x4
	0x037F5494 RET
	0x037F5498 LDRB W8, [X0 + 0x34]
	0x037F549C UBFM W0, W8, 0x2, 0x2
	0x037F54A0 RET
	0x037F54A4 LDR W8, [X0 + 0x34]
	0x037F54A8 AND W0, W8, 0x1
	0x037F54AC RET
	0x037F54B0 LDRB W8, [X0 + 0x34]
	0x037F54B4 UBFM W0, W8, 0x3, 0x3
	0x037F54B8 RET
	0x037F54BC LDR W8, [X0 + 0x10]
	0x037F54C0 LDR W9, [X0 + 0x2C]
	0x037F54C4 TBNZ X8, 0x1F, 0x37F54F8
	0x037F54C8 CBZ W8, 0x37F554C
	0x037F54CC MOVN X10, 0x0
	0x037F54D0 LSLV X9, X10, X9
	0x037F54D4 ORN W9, W31, W9, 0x0
	0x037F54D8 CMP W8, W9
	0x037F54DC FMOV S0, 1
	0x037F54E0 B.CS 0x37F54F4
	0x037F54E4 UCVTF D0, W8
	0x037F54E8 UCVTF D1, W9
	0x037F54EC FDIV D0, D0, D1
	0x00000000 INVALID
	0x037F54F4 RET
	0x037F54F8 SUB W9, W9, 0x1
	0x037F54FC MOVN X10, 0x0
	0x037F5500 LSLV X9, X10, X9
	0x037F5504 CMP W8, W9
	0x037F5508 FMOV S0, -1
	0x037F550C B.LE 0x37F54F4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xBED000
	005 Move W8, [X20+888]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {25}
	011 Move X0, 0x951000
	012 Move X0, [X0+1032]
	013 Call 0x1C17CF4
	014 Move X0, 0x8FF000
	015 Move X0, [X0+2760]
	016 Call 0x1C17CF4
	017 Move X0, 0x955000
	018 Move X0, [X0+2496]
	019 Call 0x1C17CF4
	020 Move X0, 0x901000
	021 Move X0, [X0+928]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+888], W8
	025 Move W8, [X19+4]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move W8, [X19]
	028 Subtract W8, W8, 48
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move W9, 1
	031 NotImplemented "Instruction LSLV not yet implemented."
	032 Move W9, 493
	033 NotImplemented "Instruction MOVK not yet implemented."
	034 And W31, W8, W9
	035 Move X0, X19
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move X30, [X31+32]
	039 Call HIDElementDescriptor.DetermineAxisNormalizationParameters, X0
	040 Return X0
	041 Move W9, 18
	042 NotImplemented "Instruction MOVK not yet implemented."
	043 And W31, W8, W9
	044 Move X8, 0x8FF000
	045 Move X8, [X8+2760]
	046 Move W1, 2
	047 Move X0, [X8]
	048 Call 0x1C17D6C
	049 Compare X0, 0
	050 JumpIfEqual {82}
	051 Move W8, [X0+24]
	052 Move X20, X0
	053 Compare W8, 0
	054 JumpIfEqual {81}
	055 Move X8, 0x955000
	056 Move X8, [X8+2496]
	057 Move X0, X19
	058 Move X8, [X8]
	059 Move [X20+32], X8
	060 Call HIDElementDescriptor.DetermineAxisNormalizationParameters, X0
	061 Move W8, [X20+24]
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move [X20+40], X0
	064 Move X8, 0x901000
	065 Move X9, 0x951000
	066 Move X8, [X8+928]
	067 Move X9, [X9+1032]
	068 Move X1, X20
	069 Move X20, [X31+16]
	070 Move X19, [X31+24]
	071 Move X0, [X8]
	072 Move X2, [X9]
	073 Move X30, [X31+32]
	074 Call 0x228DFD8, X0, X1
	075 Return X0
	076 Move X20, [X31+16]
	077 Move X19, [X31+24]
	078 Move X0, X31
	079 Move X30, [X31+32]
	080 Return X0
	081 Call 0x1C17F28
	082 Call 0x1C17F20

Method: System.String DetermineAxisNormalizationParameters()

Disassembly:
	0x037F65F4 ADD W9, W20, W19
	0x037F65F8 CMP W8, W19
	0x037F65FC CSEL W0, W9, W0, GT
	0x037F6600 B 0x37F6664
	0x037F6604 LDR X0, [X20 + 0x48]
	0x037F6608 CBZ X0, 0x37F663C
	0x037F660C LDR W8, [X0 + 0x18]
	0x037F6610 CMP W8, 0x1
	0x037F6614 B.LT 0x37F663C
	0x037F6618 CMP W8, W19
	0x037F661C B.LE 0x37F6644
	0x037F6620 ADRP X8, 0x927000
	0x037F6624 LDR X8, [X8 + 0xF38]
	0x037F6628 MOV W1, W19
	0x037F662C LDP X20, X19, [X31 + 0x10]
	0x037F6630 LDR X2, [X8]
	0x037F6634 LDP X30, X21, [X31], #0x20
	0x037F6638 B 0x2FDC41C
	0x037F663C LDRB W8, [X20]
	0x037F6640 CBZ W8, 0x37F6660
	0x037F6644 ADRP X8, 0x900000
	0x037F6648 LDR X8, [X8 + 0xF00]
	0x037F664C MOV X0, X20
	0x037F6650 LDP X20, X19, [X31 + 0x10]
	0x037F6654 LDR X1, [X8]
	0x037F6658 LDP X30, X21, [X31], #0x20
	0x037F665C B 0x2434214
	0x037F6660 MOV W0, W31
	0x037F6664 LDP X20, X19, [X31 + 0x10]
	0x037F6668 LDP X30, X21, [X31], #0x20
	0x037F666C RET
	0x037F6670 STR X30, [X31 - 0x30]!
	0x037F6674 STP X22, X21, [X31 + 0x10]
	0x037F6678 STP X20, X19, [X31 + 0x20]
	0x037F667C ADRP X22, 0xBEB000
	0x037F6680 LDRB W8, [X22 + 0x398]
	0x037F6684 MOV X20, X2
	0x037F6688 MOV W19, W1
	0x037F668C MOV X21, X0
	0x037F6690 TBNZ X8, 0x0, 0x37F66B4
	0x037F6694 ADRP X0, 0x900000
	0x037F6698 LDR X0, [X0 + 0xEF8]
	0x037F669C BL 0x1C16CF4
	0x037F66A0 ADRP X0, 0x900000
	0x037F66A4 LDR X0, [X0 + 0xF00]
	0x037F66A8 BL 0x1C16CF4
	0x037F66AC MOVZ W8, 0x1
	0x037F66B0 STRB W8, [X22 + 0x398]
	0x037F66B4 LDRB W8, [X21]
	0x037F66B8 CBZ W8, 0x37F66DC
	0x037F66BC ADRP X8, 0x900000
	0x037F66C0 LDR X8, [X8 + 0xF00]
	0x037F66C4 MOV X0, X21
	0x037F66C8 LDP X20, X19, [X31 + 0x20]
	0x037F66CC LDP X22, X21, [X31 + 0x10]
	0x037F66D0 LDR X1, [X8]
	0x037F66D4 LDR X30, [X31], #0x30
	0x037F66D8 B 0x2434214
	0x037F66DC MOV X0, X20
	0x037F66E0 MOV W1, W19
	0x037F66E4 BL 0x37F6560
	0x037F66E8 LDP X20, X19, [X31 + 0x20]
	0x037F66EC LDP X22, X21, [X31 + 0x10]
	0x037F66F0 SBFM W0, W0, 0x10, 0x1F
	0x037F66F4 LDR X30, [X31], #0x30
	0x037F66F8 RET
	0x037F66FC STR X30, [X31 - 0x30]!
	0x037F6700 STP X22, X21, [X31 + 0x10]
	0x037F6704 STP X20, X19, [X31 + 0x20]
	0x037F6708 ADRP X20, 0xBEB000
	0x037F670C LDRB W8, [X20 + 0x399]
	0x037F6710 MOV X19, X0
	0x037F6714 TBNZ X8, 0x0, 0x37F6744
	0x037F6718 ADRP X0, 0x90A000
	0x037F671C LDR X0, [X0 + 0x6A0]
	0x037F6720 BL 0x1C16CF4
	0x037F6724 ADRP X0, 0x900000
	0x037F6728 LDR X0, [X0 + 0xEF8]
	0x037F672C BL 0x1C16CF4
	0x037F6730 ADRP X0, 0x900000
	0x037F6734 LDR X0, [X0 + 0xF00]
	0x037F6738 BL 0x1C16CF4
	0x037F673C MOVZ W8, 0x1
	0x037F6740 STRB W8, [X20 + 0x399]
	0x037F6744 MOV X20, X19
	0x037F6748 LDRB W8, [X20 + 0x18]!
	0x037F674C CBZ W8, 0x37F679C
	0x037F6750 MOV X21, X19
	0x037F6754 LDRB W8, [X21 + 0x20]!
	0x037F6758 CBZ W8, 0x37F679C
	0x037F675C ADRP X22, 0x900000
	0x037F6760 LDR X22, [X22 + 0xF00]
	0x037F6764 MOV X0, X20
	0x037F6768 LDR X1, [X22]
	0x037F676C BL 0x2434214
	0x037F6770 CBNZ W0, 0x37F6784
	0x037F6774 LDR X1, [X22]
	0x037F6778 MOV X0, X21
	0x037F677C BL 0x2434214
	0x037F6780 CBZ W0, 0x37F679C
	0x037F6784 LDR X1, [X22]
	0x037F6788 MOV X0, X20
	0x037F678C LDP X20, X19, [X31 + 0x20]
	0x037F6790 LDP X22, X21, [X31 + 0x10]
	0x037F6794 LDR X30, [X31], #0x30
	0x037F6798 B 0x2434214
	0x037F679C ADRP X8, 0x90A000
	0x037F67A0 LDR X8, [X8 + 0x6A0]
	0x037F67A4 ADD X0, X19, 0x8
	0x037F67A8 LDP X20, X19, [X31 + 0x20]
	0x037F67AC LDP X22, X21, [X31 + 0x10]
	0x037F67B0 LDR X2, [X8]
	0x037F67B4 MOV W1, W31
	0x037F67B8 LDR X30, [X31], #0x30

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], D10
	003 Move [X31+32], D9
	004 Move [X31+40], D8
	005 Move [X31+48], X30
	006 Move [X31+56], X23
	007 Move [X31+64], X22
	008 Move [X31+72], X21
	009 Move [X31+80], X20
	010 Move [X31+88], X19
	011 Move X20, 0xBEC000
	012 Move W8, [X20+889]
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {32}
	018 Move X0, 0x900000
	019 Move X0, [X0+3144]
	020 Call 0x1C17CF4
	021 Move X0, 0x8FE000
	022 Move X0, [X0+2704]
	023 Call 0x1C17CF4
	024 Move X0, 0x954000
	025 Move X0, [X0+2600]
	026 Call 0x1C17CF4
	027 Move X0, 0x954000
	028 Move X0, [X0+2608]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X20+889], W8
	032 Move W8, [X19+16]
	033 Compare W8, 0
	034 JumpIfNotEqual {38}
	035 Move W8, [X19+20]
	036 Compare W8, 0
	037 JumpIfEqual {112}
	038 Move X0, X19
	039 Call HIDElementDescriptor.get_minFloatValue, X0
	040 Move X0, X19
	041 Move V9, V0
	042 Call HIDElementDescriptor.get_maxFloatValue, X0
	043 Move X19, 0xBE4000
	044 Move W8, [X19+1450]
	045 Move V8, V0
	046 Compare W8, 0
	047 JumpIfNotEqual {53}
	048 Move X0, 0x905000
	049 Move X0, [X0+1208]
	050 Call 0x1C17CF4
	051 Move W8, 1
	052 Move [X19+1450], W8
	053 Move X8, 0x905000
	054 Move X8, [X8+1208]
	055 Move X9, -47230976
	056 Move V0, [X9+576]
	057 NotImplemented "Instruction FABS not yet implemented."
	058 Move X8, [X8]
	059 Move S4, 8
	060 Multiply S3, S2, S0
	061 Move X8, [X8+184]
	062 Move V1, [X8]
	063 Multiply S1, S1, S4
	064 NotImplemented "Instruction FCMP not yet implemented."
	065 NotImplemented "Instruction FCSEL not yet implemented."
	066 NotImplemented "Instruction FCMP not yet implemented."
	067 NotImplemented "Instruction FABS not yet implemented."
	068 Multiply S0, S2, S0
	069 NotImplemented "Instruction FCMP not yet implemented."
	070 NotImplemented "Instruction FCSEL not yet implemented."
	071 NotImplemented "Instruction FCMP not yet implemented."
	072 Move X8, 0x900000
	073 Move X8, [X8+3144]
	074 Move X23, 0x8FE000
	075 Move X22, 0x954000
	076 Subtract S0, S8, S9
	077 Move X0, [X8]
	078 Move X23, [X23+2704]
	079 Move X22, [X22+2608]
	080 Move S1, 0.5
	081 Move W8, [X0+224]
	082 Multiply S0, S0, S1
	083 Add S10, S9, S0
	084 Compare W8, 0
	085 JumpIfNotEqual {87}
	086 Call 0x1C17DFC
	087 Move X0, X31
	088 Call CultureInfo.get_InvariantCulture
	089 Move X19, X0
	090 Move X0, [X23]
	091 Add X1, X31, 28
	092 Move [X31+28], S9
	093 Call 0x1C17E04
	094 Move X20, X0
	095 Move X0, [X23]
	096 Add X1, X31, 24
	097 Move [X31+24], S8
	098 Call 0x1C17E04
	099 Move X21, X0
	100 Move X0, [X23]
	101 Add X1, X31, 12
	102 Move [X31+12], S10
	103 Call 0x1C17E04
	104 Move X1, [X22]
	105 Move X4, X0
	106 Move X0, X19
	107 Move X2, X20
	108 Move X3, X21
	109 Move X5, X31
	110 Call String.Format, X0, X1, X2, X3, X4
	111 Move X0, X31
	112 Move X8, 0x954000
	113 Move X8, [X8+2600]
	114 Move X0, [X8]
	115 Move X20, [X31+80]
	116 Move X19, [X31+88]
	117 Move X22, [X31+64]
	118 Move X21, [X31+72]
	119 Move X30, [X31+48]
	120 Move X23, [X31+56]
	121 Move D9, [X31+32]
	122 Move D8, [X31+40]
	123 Move V10, [X31+16]
	124 Add X31, X31, 96
	125 Return X0

Method: System.String DetermineProcessors()

Disassembly:
	0x037F55E4 FADD S0, S0, S1
	0x037F55E8 RET
	0x037F55EC FMOV S0, W31
	0x037F55F0 RET
	0x037F55F4 SUB X31, X31, 0x60
	0x037F55F8 STR D10, [X31 + 0x10]
	0x037F55FC STP D9, D8, [X31 + 0x20]
	0x037F5600 STP X30, X23, [X31 + 0x30]
	0x037F5604 STP X22, X21, [X31 + 0x40]
	0x037F5608 STP X20, X19, [X31 + 0x50]
	0x037F560C ADRP X20, 0xBEC000
	0x037F5610 LDRB W8, [X20 + 0x379]
	0x037F5614 MOV X19, X0
	0x037F5618 TBNZ X8, 0x0, 0x37F5654
	0x037F561C ADRP X0, 0x900000
	0x037F5620 LDR X0, [X0 + 0xC48]
	0x037F5624 BL 0x1C16CF4
	0x037F5628 ADRP X0, 0x8FE000
	0x037F562C LDR X0, [X0 + 0xA90]
	0x037F5630 BL 0x1C16CF4
	0x037F5634 ADRP X0, 0x954000
	0x037F5638 LDR X0, [X0 + 0xA28]
	0x037F563C BL 0x1C16CF4
	0x037F5640 ADRP X0, 0x954000
	0x037F5644 LDR X0, [X0 + 0xA30]
	0x037F5648 BL 0x1C16CF4
	0x037F564C MOVZ W8, 0x1
	0x037F5650 STRB W8, [X20 + 0x379]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xBED000
	005 Move W8, [X20+890]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x955000
	012 Move X0, [X0+2504]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+890], W8
	016 Move W8, [X19+4]
	017 NotImplemented "Instruction CMP not yet implemented."
	018 Move X9, 0x955000
	019 Move W8, [X19]
	020 Move X9, [X9+2504]
	021 Subtract W10, W8, 48
	022 Move X9, [X9]
	023 Subtract W8, W8, 64
	024 NotImplemented "Instruction CMP not yet implemented."
	025 NotImplemented "Instruction CCMP not yet implemented."
	026 NotImplemented "Instruction CSEL not yet implemented."
	027 Move X0, X31
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X30, [X31+32]
	031 Return X0

Method: UnityEngine.InputSystem.Utilities.PrimitiveValue DetermineDefaultState()

Disassembly:
	0x037F551C B.GE 0x37F54F4
	0x037F5520 SCVTF D0, W8
	0x037F5524 SCVTF D1, W9
	0x037F5528 SCVTF D2, W10
	0x037F552C FSUB D0, D0, D1
	0x037F5530 FSUB D1, D2, D1
	0x037F5534 FDIV D0, D0, D1
	0x00000000 INVALID
	0x037F553C FADD S0, S0, S0
	0x037F5540 FMOV S1, -1
	0x037F5544 FADD S0, S0, S1
	0x037F5548 RET
	0x037F554C FMOV S0, W31
	0x037F5550 RET
	0x037F5554 LDR W9, [X0 + 0x10]
	0x037F5558 LDR W8, [X0 + 0x2C]
	0x037F555C TBNZ X9, 0x1F, 0x37F5594
	0x037F5560 LDR W9, [X0 + 0x14]
	0x037F5564 CBZ W9, 0x37F55EC
	0x037F5568 MOVN X10, 0x0
	0x037F556C LSLV X8, X10, X8
	0x037F5570 ORN W8, W31, W8, 0x0
	0x037F5574 CMP W9, W8
	0x037F5578 FMOV S0, 1
	0x037F557C B.CS 0x37F5590
	0x037F5580 UCVTF D0, W9
	0x037F5584 UCVTF D1, W8
	0x037F5588 FDIV D0, D0, D1
	0x00000000 INVALID
	0x037F5590 RET
	0x037F5594 LDR W9, [X0 + 0x14]
	0x037F5598 SUB W8, W8, 0x1
	0x037F559C MOVN X10, 0x0
	0x037F55A0 LSLV X8, X10, X8
	0x037F55A4 CMP W9, W8
	0x037F55A8 FMOV S0, -1
	0x037F55AC B.LE 0x37F5590
	0x037F55B0 ORN W10, W31, W8, 0x0
	0x037F55B4 CMP W9, W10
	0x037F55B8 FMOV S0, 1
	0x037F55BC B.GE 0x37F5590
	0x037F55C0 SCVTF D0, W9
	0x037F55C4 SCVTF D1, W8
	0x037F55C8 SCVTF D2, W10
	0x037F55CC FSUB D0, D0, D1
	0x037F55D0 FSUB D1, D2, D1
	0x037F55D4 FDIV D0, D0, D1
	0x00000000 INVALID
	0x037F55DC FADD S0, S0, S0
	0x037F55E0 FMOV S1, -1

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+16], X30
	003 Move W8, [X0+4]
	004 NotImplemented "Instruction CMP not yet implemented."
	005 Move W8, [X0]
	006 Subtract W8, W8, 48
	007 NotImplemented "Instruction CMP not yet implemented."
	008 Move W9, 1
	009 Move W10, 511
	010 NotImplemented "Instruction LSLV not yet implemented."
	011 NotImplemented "Instruction MOVK not yet implemented."
	012 And W31, W9, W10
	013 Move W8, [X0+16]
	014 Move TEMP, X8
	015 And TEMP, TEMP, -2147483648
	016 Compare TEMP, -2147483648
	017 JumpIfEqual {34}
	018 Move W9, [X0+20]
	019 Subtract W9, W9, W8
	020 NotImplemented "Instruction CMP not yet implemented."
	021 NotImplemented "Instruction CINC not yet implemented."
	022 Add W1, W8, W9
	023 Move [X31], X31
	024 Move [X31+8], X31
	025 Add X0, X31, 0
	026 Move X2, X31
	027 Call PrimitiveValue..ctor, X0, X1
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move W8, [X0+52]
	030 Move TEMP, X8
	031 And TEMP, TEMP, 64
	032 Compare TEMP, 64
	033 JumpIfEqual {41}
	034 Move [X31], X31
	035 Move [X31+8], X31
	036 Move X0, [X31]
	037 Move X1, [X31+8]
	038 Move X30, [X31+16]
	039 Add X31, X31, 32
	040 Return X0
	041 Move W8, [X0+16]
	042 Subtract W1, W8, 1
	043 Move W9, [X0+44]
	044 NotImplemented "Instruction LDRSW not yet implemented."
	045 Move TEMP, 0
	046 Not TEMP
	047 Move X10, TEMP
	048 NotImplemented "Instruction LSLV not yet implemented."
	049 NotImplemented "Instruction ORN not yet implemented."
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move [X31], X31
	052 Move [X31+8], X31
	053 Add W1, W8, 1

Method: System.Void AddChildControls(ref UnityEngine.InputSystem.HID.HID/HIDElementDescriptor element, System.String controlName, ref UnityEngine.InputSystem.Layouts.InputControlLayout/Builder builder)

Disassembly:
	0x037F5D50 ADRP X0, 0x8FE000
	0x037F5D54 LDR X0, [X0 + 0x5B0]
	0x037F5D58 BL 0x1C16D08
	0x037F5D5C BL 0x1C16F10
	0x037F5D60 MOV X19, X0
	0x037F5D64 ADRP X0, 0x954000
	0x037F5D68 LDR X0, [X0 + 0xA78]
	0x037F5D6C BL 0x1C16D08
	0x037F5D70 MOV X1, X0
	0x037F5D74 MOV X0, X19
	0x037F5D78 MOV X2, X31
	0x037F5D7C BL 0x337DF1C
	0x037F5D80 ADRP X0, 0x954000
	0x037F5D84 LDR X0, [X0 + 0xA80]
	0x037F5D88 BL 0x1C16D08
	0x037F5D8C MOV X1, X0
	0x037F5D90 MOV X0, X19
	0x037F5D94 BL 0x1C16DEC
	0x037F5D98 SUB X31, X31, 0x110
	0x037F5D9C STP X29, X30, [X31 + 0xD0]
	0x037F5DA0 STP X24, X23, [X31 + 0xE0]
	0x037F5DA4 STP X22, X21, [X31 + 0xF0]
	0x037F5DA8 STP X20, X19, [X31 + 0x100]
	0x037F5DAC ADRP X23, 0xBEC000
	0x037F5DB0 LDRB W9, [X23 + 0x380]
	0x037F5DB4 MOV W21, W2
	0x037F5DB8 MOV W22, W1
	0x037F5DBC MOV X19, X0
	0x037F5DC0 MOV X20, X8
	0x037F5DC4 TBNZ X9, 0x0, 0x37F5DF4
	0x037F5DC8 ADRP X0, 0x954000
	0x037F5DCC LDR X0, [X0 + 0x8D0]
	0x037F5DD0 BL 0x1C16CF4
	0x037F5DD4 ADRP X0, 0x954000
	0x037F5DD8 LDR X0, [X0 + 0xA68]
	0x037F5DDC BL 0x1C16CF4
	0x037F5DE0 ADRP X0, 0x954000
	0x037F5DE4 LDR X0, [X0 + 0xA70]
	0x037F5DE8 BL 0x1C16CF4
	0x037F5DEC MOVZ W8, 0x1
	0x037F5DF0 STRB W8, [X23 + 0x380]
	0x037F5DF4 LDR X0, [X19 + 0x18]
	0x037F5DF8 CBZ X0, 0x37F5EB0
	0x037F5DFC LDR W8, [X0 + 0x18]
	0x037F5E00 SUBS W23, W8, 0x1
	0x037F5E04 B.MI 0x37F5EB4
	0x037F5E08 ADRP X8, 0x954000
	0x037F5E0C LDR X8, [X8 + 0xA68]
	0x037F5E10 MOV W1, W23
	0x037F5E14 ADD X24, X31, 0x80
	0x037F5E18 LDR X2, [X8]
	0x037F5E1C ADD X8, X31, 0x80
	0x037F5E20 BL 0x30FE910
	0x037F5E24 LDR V0, [X31 + 0x8]
	0x037F5E28 LDUR V1, [X24 + 0x38]
	0x037F5E2C LDUR V2, [X24 + 0x28]
	0x037F5E30 LDUR V3, [X24 + 0x18]
	0x037F5E34 STP V1, V0, [X31 + 0x60]
	0x037F5E38 STP V3, V2, [X31 + 0x40]
	0x037F5E3C LDR X0, [X19 + 0x18]
	0x037F5E40 STP V1, V0, [X31 + 0x20]
	0x037F5E44 STP V3, V2, [X31]
	0x037F5E48 CBZ X0, 0x37F5EB0
	0x037F5E4C ADRP X8, 0x954000
	0x037F5E50 LDR X8, [X8 + 0xA70]
	0x037F5E54 LDP V3, V0, [X31 + 0x20]
	0x037F5E58 LDP V1, V2, [X31]
	0x037F5E5C ADD X2, X31, 0x80
	0x037F5E60 LDR X3, [X8]
	0x037F5E64 MOV W1, W23
	0x037F5E68 STP W22, W21, [X31 + 0x90]
	0x037F5E6C STR V0, [X31 + 0x8]
	0x037F5E70 STUR V1, [X24 + 0x18]
	0x037F5E74 STUR V2, [X24 + 0x28]
	0x037F5E78 STUR V3, [X24 + 0x38]
	0x037F5E7C BL 0x30FE974
	0x037F5E80 LDR X8, [X19 + 0x30]
	0x037F5E84 LDP V1, V0, [X19 + 0x10]
	0x037F5E88 LDR V2, [X19]
	0x037F5E8C LDP X22, X21, [X31 + 0xF0]
	0x037F5E90 STR X8, [X20 + 0x30]
	0x037F5E94 STP V1, V0, [X20 + 0x10]
	0x037F5E98 STR V2, [X20]
	0x037F5E9C LDP X20, X19, [X31 + 0x100]
	0x037F5EA0 LDP X24, X23, [X31 + 0xE0]
	0x037F5EA4 LDP X29, X30, [X31 + 0xD0]
	0x037F5EA8 ADD X31, X31, 0x110
	0x037F5EAC RET
	0x037F5EB0 BL 0x1C16F20
	0x037F5EB4 ADRP X0, 0x8FE000
	0x037F5EB8 LDR X0, [X0 + 0x5B0]
	0x037F5EBC BL 0x1C16D08
	0x037F5EC0 BL 0x1C16F10
	0x037F5EC4 MOV X19, X0
	0x037F5EC8 ADRP X0, 0x954000
	0x037F5ECC LDR X0, [X0 + 0xA78]
	0x037F5ED0 BL 0x1C16D08
	0x037F5ED4 MOV X1, X0
	0x037F5ED8 MOV X0, X19
	0x037F5EDC MOV X2, X31
	0x037F5EE0 BL 0x337DF1C
	0x037F5EE4 ADRP X0, 0x954000
	0x037F5EE8 LDR X0, [X0 + 0xA88]
	0x037F5EEC BL 0x1C16D08
	0x037F5EF0 MOV X1, X0
	0x037F5EF4 MOV X0, X19
	0x037F5EF8 BL 0x1C16DEC
	0x037F5EFC SUB X31, X31, 0x50
	0x037F5F00 STP X30, X21, [X31 + 0x30]
	0x037F5F04 STP X20, X19, [X31 + 0x40]
	0x037F5F08 ADRP X21, 0xBEC000
	0x037F5F0C LDRB W9, [X21 + 0x381]
	0x037F5F10 MOV X20, X0
	0x037F5F14 MOV X19, X8
	0x037F5F18 TBNZ X9, 0x0, 0x37F5F3C
	0x037F5F1C ADRP X0, 0x954000
	0x037F5F20 LDR X0, [X0 + 0x8C0]
	0x037F5F24 BL 0x1C16CF4
	0x037F5F28 ADRP X0, 0x954000
	0x037F5F2C LDR X0, [X0 + 0x848]
	0x037F5F30 BL 0x1C16CF4
	0x037F5F34 MOVZ W8, 0x1
	0x037F5F38 STRB W8, [X21 + 0x381]
	0x037F5F3C MOVI V0.2D, 0x0
	0x037F5F40 STP V0, V0, [X31]
	0x037F5F44 LDR V0, [X20]
	0x037F5F48 UNIMPLEMENTED
	0x037F5F4C STR D0, [X31 + 0x8]
	0x037F5F50 LDR X0, [X20 + 0x18]
	0x037F5F54 CBZ X0, 0x37F5F68
	0x037F5F58 ADRP X8, 0x954000
	0x037F5F5C LDR X8, [X8 + 0x848]
	0x037F5F60 LDR X1, [X8]
	0x037F5F64 BL 0x310117C
	0x037F5F68 STR X0, [X31 + 0x20]
	0x037F5F6C LDR X0, [X20 + 0x20]
	0x037F5F70 CBZ X0, 0x37F5F84
	0x037F5F74 ADRP X8, 0x954000
	0x037F5F78 LDR X8, [X8 + 0x8C0]
	0x037F5F7C LDR X1, [X8]
	0x037F5F80 BL 0x30FDF04
	0x037F5F84 STR X0, [X31 + 0x28]
	0x037F5F88 LDP V1, V0, [X31 + 0x10]
	0x037F5F8C LDR V2, [X31]
	0x037F5F90 LDP X30, X21, [X31 + 0x30]
	0x037F5F94 STP V1, V0, [X19 + 0x10]
	0x037F5F98 STR V2, [X19]
	0x037F5F9C LDP X20, X19, [X31 + 0x40]
	0x037F5FA0 ADD X31, X31, 0x50
	0x037F5FA4 RET
	0x037F5FA8 STR X30, [X31 - 0x10]!
	0x037F5FAC LDR X0, [X0 + 0x10]
	0x037F5FB0 CBZ X0, 0x37F5FBC
	0x037F5FB4 LDR X30, [X31], #0x10
	0x037F5FB8 B 0x37F3834
	0x037F5FBC BL 0x1C16F20
	0x037F5FC0 STP X30, X19, [X31 - 0x10]!
	0x037F5FC4 CBZ X0, 0x37F5FE4
	0x037F5FC8 MOV X2, X1
	0x037F5FCC LDR W1, [X0 + 0x18]
	0x037F5FD0 ADD X8, X0, 0x20
	0x037F5FD4 CMP W1, 0x0
	0x037F5FD8 CSEL X0, X31, X8, EQ
	0x037F5FDC LDP X30, X19, [X31], #0x10
	0x037F5FE0 B 0x37F2AF0
	0x037F5FE4 ADRP X0, 0x903000
	0x037F5FE8 LDR X0, [X0 + 0x528]
	0x037F5FEC BL 0x1C16D08
	0x037F5FF0 BL 0x1C16F10
	0x037F5FF4 MOV X19, X0
	0x037F5FF8 ADRP X0, 0x929000
	0x037F5FFC LDR X0, [X0 + 0xF48]
	0x037F6000 BL 0x1C16D08
	0x037F6004 MOV X1, X0
	0x037F6008 MOV X0, X19
	0x037F600C MOV X2, X31
	0x037F6010 BL 0x330E100
	0x037F6014 ADRP X0, 0x953000
	0x037F6018 LDR X0, [X0 + 0xA90]
	0x037F601C BL 0x1C16D08
	0x037F6020 MOV X1, X0
	0x037F6024 MOV X0, X19
	0x037F6028 BL 0x1C16DEC
	0x037F602C CMP W0, 0x3
	0x037F6030 B.EQ 0x37F6054
	0x037F6034 CMP W0, 0x2
	0x037F6038 B.EQ 0x37F6078
	0x037F603C CMP W0, 0x1
	0x037F6040 B.NE 0x37F608C
	0x037F6044 CMP X1, X2
	0x037F6048 B.CS 0x37F608C
	0x037F604C LDRB W0, [X1]
	0x037F6050 RET
	0x037F6054 ADD X8, X1, 0x4
	0x037F6058 CMP X8, X2
	0x037F605C B.CS 0x37F608C
	0x037F6060 LDRB W8, [X1 + 0x2]
	0x037F6064 LDRB W9, [X1 + 0x3]
	0x037F6068 LDRH W0, [X1]
	0x037F606C ORR W8, W9, W8, 0x0
	0x037F6070 BFM W0, W8, 0x8, 0x7
	0x037F6074 RET
	0x037F6078 ADD X8, X1, 0x2
	0x037F607C CMP X8, X2
	0x037F6080 B.CS 0x37F608C
	0x037F6084 LDRH W0, [X1]
	0x037F6088 RET
	0x037F608C MOV W0, W31
	0x037F6090 RET
	0x037F6094 STP D15, D14, [X31 - 0x60]!
	0x037F6098 STP D13, D12, [X31 + 0x10]
	0x037F609C STP D11, D10, [X31 + 0x20]
	0x037F60A0 STP D9, D8, [X31 + 0x30]
	0x037F60A4 STR X30, [X31 + 0x40]
	0x037F60A8 STP X20, X19, [X31 + 0x50]
	0x037F60AC MOV V10.16B, V0.16B
	0x037F60B0 LDP S7, S0, [X31 + 0x64]
	0x037F60B4 LDR V6, [X31 + 0x60]
	0x037F60B8 ADRP X20, 0xBE2000
	0x037F60BC LDRB W8, [X20 + 0x785]
	0x037F60C0 FSUB S3, S3, S10
	0x037F60C4 FSUB S4, S4, S1
	0x037F60C8 FSUB S5, S5, S2
	0x037F60CC FSUB S6, S6, S10
	0x037F60D0 FSUB S7, S7, S1
	0x037F60D4 FSUB S0, S0, S2
	0x037F60D8 MOV X19, X0
	0x037F60DC FMUL S11, S4, S0
	0x037F60E0 FMUL S12, S5, S7
	0x037F60E4 FMUL S14, S5, S6
	0x037F60E8 FMUL S15, S3, S0
	0x037F60EC FMUL S8, S3, S7
	0x037F60F0 FMUL S9, S4, S6
	0x037F60F4 CBNZ W8, 0x37F611C
	0x037F60F8 ADRP X0, 0x8FD000
	0x037F60FC LDR X0, [X0 + 0x5A8]
	0x037F6100 MOV V13.16B, V2.16B
	0x037F6104 STR S1, [X31 + 0x4C]
	0x037F6108 BL 0x1C16CF4
	0x037F610C LDR V1, [X31 + 0x4C]
	0x037F6110 MOV V2.16B, V13.16B
	0x037F6114 MOVZ W8, 0x1
	0x037F6118 STRB W8, [X20 + 0x785]
	0x037F611C ADRP X8, 0x8FD000
	0x037F6120 LDR X8, [X8 + 0x5A8]
	0x037F6124 FSUB S13, S11, S12
	0x037F6128 FSUB S12, S14, S15
	0x037F612C FSUB S11, S8, S9
	0x037F6130 LDR X0, [X8]
	0x037F6134 LDR W8, [X0 + 0xE0]
	0x037F6138 CBNZ W8, 0x37F6150
	0x037F613C MOV V8.16B, V2.16B
	0x037F6140 MOV V9.16B, V1.16B
	0x037F6144 BL 0x1C16DFC
	0x037F6148 MOV V1.16B, V9.16B
	0x037F614C MOV V2.16B, V8.16B
	0x037F6150 ADRP X8, 0xFFFFFFFFFD2F4000
	0x037F6154 FMUL S0, S13, S13
	0x037F6158 FMUL S3, S12, S12
	0x037F615C LDR V4, [X8 + 0x17C]
	0x037F6160 FADD S0, S0, S3
	0x037F6164 FMUL S3, S11, S11
	0x037F6168 FADD S0, S3, S0
	0x037F616C FSQRT S0, S0
	0x037F6170 FCMP S0, S4
	0x037F6174 B.LE 0x37F6188
	0x037F6178 FDIV S4, S13, S0
	0x037F617C FDIV S3, S12, S0
	0x037F6180 FDIV S0, S11, S0
	0x037F6184 B 0x37F61D0
	0x037F6188 ADRP X20, 0xBE2000
	0x037F618C LDRB W8, [X20 + 0x783]
	0x037F6190 CBNZ W8, 0x37F61B8
	0x037F6194 ADRP X0, 0x8FD000
	0x037F6198 LDR X0, [X0 + 0x5A0]
	0x037F619C MOV V8.16B, V2.16B
	0x037F61A0 MOV V9.16B, V1.16B
	0x037F61A4 BL 0x1C16CF4
	0x037F61A8 MOV V1.16B, V9.16B
	0x037F61AC MOV V2.16B, V8.16B
	0x037F61B0 MOVZ W8, 0x1
	0x037F61B4 STRB W8, [X20 + 0x783]
	0x037F61B8 ADRP X8, 0x8FD000
	0x037F61BC LDR X8, [X8 + 0x5A0]
	0x037F61C0 LDR X8, [X8]
	0x037F61C4 LDR X8, [X8 + 0xB8]
	0x037F61C8 LDP S4, S3, [X8]
	0x037F61CC LDR V0, [X8 + 0x8]
	0x037F61D0 STP S4, S3, [X19]
	0x037F61D4 FMUL S5, S10, S4
	0x037F61D8 FMUL S4, S1, S3
	0x037F61DC FMUL S3, S2, S0
	0x037F61E0 FADD S1, S5, S4
	0x037F61E4 FADD S1, S3, S1
	0x037F61E8 FNEG S1, S1
	0x037F61EC STP S0, S1, [X19 + 0x8]
	0x037F61F0 LDP X20, X19, [X31 + 0x50]
	0x037F61F4 LDR X30, [X31 + 0x40]
	0x037F61F8 LDP D9, D8, [X31 + 0x30]
	0x037F61FC LDP D11, D10, [X31 + 0x20]
	0x037F6200 LDP D13, D12, [X31 + 0x10]
	0x037F6204 LDP D15, D14, [X31], #0x60
	0x037F6208 RET
	0x037F620C SUB X31, X31, 0x40
	0x037F6210 STP X30, X23, [X31 + 0x10]
	0x037F6214 STP X22, X21, [X31 + 0x20]
	0x037F6218 STP X20, X19, [X31 + 0x30]
	0x037F621C ADRP X22, 0xBEB000
	0x037F6220 LDRB W8, [X22 + 0x394]
	0x037F6224 MOV X19, X2
	0x037F6228 MOV W20, W1
	0x037F622C MOV X21, X0
	0x037F6230 STR X0, [X31 + 0x8]
	0x037F6234 TBNZ X8, 0x0, 0x37F627C
	0x037F6238 ADRP X0, 0x953000
	0x037F623C LDR X0, [X0 + 0xA98]
	0x037F6240 BL 0x1C16CF4
	0x037F6244 ADRP X0, 0x953000
	0x037F6248 LDR X0, [X0 + 0xAA0]
	0x037F624C BL 0x1C16CF4
	0x037F6250 ADRP X0, 0x953000
	0x037F6254 LDR X0, [X0 + 0x8D8]
	0x037F6258 BL 0x1C16CF4
	0x037F625C ADRP X0, 0x900000
	0x037F6260 LDR X0, [X0 + 0xEF8]
	0x037F6264 BL 0x1C16CF4
	0x037F6268 ADRP X0, 0x900000
	0x037F626C LDR X0, [X0 + 0xF00]
	0x037F6270 BL 0x1C16CF4
	0x037F6274 MOVZ W8, 0x1
	0x037F6278 STRB W8, [X22 + 0x394]
	0x037F627C ANDS W31, W21, 0xFF
	0x037F6280 B.EQ 0x37F62A4
	0x037F6284 ADRP X8, 0x900000
	0x037F6288 LDR X8, [X8 + 0xF00]
	0x037F628C ADD X0, X31, 0x8
	0x037F6290 LDR X1, [X8]
	0x037F6294 BL 0x2434214
	0x037F6298 MOV W21, W0
	0x037F629C CBNZ X19, 0x37F62AC
	0x037F62A0 B 0x37F6390
	0x037F62A4 MOVZ W21, 0x1
	0x037F62A8 CBZ X19, 0x37F6390
	0x037F62AC LDR W8, [X19 + 0x18]
	0x037F62B0 CMP W8, 0x1
	0x037F62B4 B.LT 0x37F6308
	0x037F62B8 ADRP X23, 0x953000
	0x037F62BC LDR X23, [X23 + 0x8D8]
	0x037F62C0 MOV W22, W31
	0x037F62C4 LDR X2, [X23]
	0x037F62C8 MOV X0, X19
	0x037F62CC MOV W1, W22
	0x037F62D0 BL 0x3101B94
	0x037F62D4 CMP W21, W0
	0x037F62D8 B.NE 0x37F62F8
	0x037F62DC LDR X2, [X23]
	0x037F62E0 MOV X0, X19
	0x037F62E4 MOV W1, W22
	0x037F62E8 BL 0x3101B94
	0x037F62EC UBFM X8, X0, 0x20, 0x3F
	0x037F62F0 CMP W8, W20
	0x037F62F4 B.EQ 0x37F6378
	0x037F62F8 LDR W8, [X19 + 0x18]
	0x037F62FC ADD W22, W22, 0x1
	0x037F6300 CMP W22, W8
	0x037F6304 B.LT 0x37F62C4
	0x037F6308 ADRP X10, 0x953000
	0x037F630C LDR X10, [X10 + 0xA98]
	0x037F6310 LDR W11, [X19 + 0x1C]
	0x037F6314 LDR X9, [X19 + 0x10]
	0x037F6318 LDR X10, [X10]
	0x037F631C ADD W11, W11, 0x1
	0x037F6320 STR W11, [X19 + 0x1C]
	0x037F6324 CBZ X9, 0x37F6390
	0x037F6328 LDR W11, [X9 + 0x18]
	0x037F632C MOV W1, W21
	0x037F6330 BFM X1, X20, 0x20, 0x1F
	0x037F6334 CMP W8, W11
	0x037F6338 B.CS 0x37F6358
	0x037F633C MOVZ W11, 0xC
	0x037F6340 ADD W10, W8, 0x1
	0x037F6344 SMADDL X8, X8, X11, X9
	0x037F6348 STR W10, [X19 + 0x18]
	0x037F634C STR X1, [X8 + 0x20]
	0x037F6350 STR W31, [X8 + 0x28]
	0x037F6354 B 0x37F6370
	0x037F6358 LDR X8, [X10 + 0x20]
	0x037F635C MOV X0, X19
	0x037F6360 MOV X2, X31
	0x037F6364 LDR X8, [X8 + 0xC0]
	0x037F6368 LDR X3, [X8 + 0x70]
	0x037F636C BL 0x3101EBC
	0x037F6370 LDR W8, [X19 + 0x18]
	0x037F6374 SUB W22, W8, 0x1
	0x037F6378 MOV W0, W22
	0x037F637C LDP X20, X19, [X31 + 0x30]
	0x037F6380 LDP X22, X21, [X31 + 0x20]
	0x037F6384 LDP X30, X23, [X31 + 0x10]
	0x037F6388 ADD X31, X31, 0x40
	0x037F638C RET
	0x037F6390 BL 0x1C16F20
	0x037F6394 STR X30, [X31 - 0x20]!
	0x037F6398 STP X20, X19, [X31 + 0x10]
	0x037F639C ADRP X20, 0xBEB000
	0x037F63A0 LDRB W8, [X20 + 0x395]
	0x037F63A4 MOV X19, X0

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+64], X30
	003 Move [X31+80], X28
	004 Move [X31+88], X27
	005 Move [X31+96], X26
	006 Move [X31+104], X25
	007 Move [X31+112], X24
	008 Move [X31+120], X23
	009 Move [X31+128], X22
	010 Move [X31+136], X21
	011 Move [X31+144], X20
	012 Move [X31+152], X19
	013 Move X23, 0xBED000
	014 Move W8, [X23+891]
	015 Move X22, X3
	016 Move X21, X2
	017 Move X20, X1
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {58}
	023 Move X0, 0x901000
	024 Move X0, [X0+3144]
	025 Call 0x1C17CF4
	026 Move X0, 0x927000
	027 Move X0, [X0+3352]
	028 Call 0x1C17CF4
	029 Move X0, 0x8FF000
	030 Move X0, [X0+1880]
	031 Call 0x1C17CF4
	032 Move X0, 0x8FF000
	033 Move X0, [X0+2512]
	034 Call 0x1C17CF4
	035 Move X0, 0x955000
	036 Move X0, [X0+2552]
	037 Call 0x1C17CF4
	038 Move X0, 0x955000
	039 Move X0, [X0+2560]
	040 Call 0x1C17CF4
	041 Move X0, 0x955000
	042 Move X0, [X0+2568]
	043 Call 0x1C17CF4
	044 Move X0, 0x955000
	045 Move X0, [X0+2576]
	046 Call 0x1C17CF4
	047 Move X0, 0x955000
	048 Move X0, [X0+2584]
	049 Call 0x1C17CF4
	050 Move X0, 0x955000
	051 Move X0, [X0+2592]
	052 Call 0x1C17CF4
	053 Move X0, 0x953000
	054 Move X0, [X0+1224]
	055 Call 0x1C17CF4
	056 Move W8, 1
	057 Move [X23+891], W8
	058 Move [X31+32], X31
	059 Move [X31+40], X31
	060 Move W8, [X19+4]
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move W8, [X19]
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move X0, X19
	065 Call HIDElementDescriptor.DetermineDefaultState, X0
	066 Move [X31+48], X0
	067 Move [X31+56], X1
	068 Add X0, X31, 48
	069 Move X1, X31
	070 Call PrimitiveValue.get_isEmpty, X0
	071 Move TEMP, X0
	072 And TEMP, TEMP, 1
	073 Compare TEMP, 1
	074 JumpIfEqual {438}
	075 Move X8, 0x955000
	076 Move X23, [X22]
	077 Move X8, [X8+2584]
	078 Move X0, X21
	079 Move X2, X31
	080 Move X1, [X8]
	081 Call String.Concat, X0, X1
	082 Compare X23, 0
	083 JumpIfEqual {451}
	084 Move X1, X0
	085 Move X0, X23
	086 Move X2, X31
	087 Call Builder.AddControl, X0, X1
	088 Move X26, 0x927000
	089 Move X26, [X26+3352]
	090 Move X8, X0
	091 Move [X31+32], X8
	092 Move [X31+40], X1
	093 Move X0, [X26]
	094 Move W8, [X0+224]
	095 Compare W8, 0
	096 JumpIfNotEqual {99}
	097 Call 0x1C17DFC
	098 Move X0, [X26]
	099 Move X8, [X0+184]
	100 Add X0, X31, 32
	101 Move X2, X31
	102 Move W1, [X8+4]
	103 Call ControlBuilder.WithFormat, X0, X1
	104 Move X27, 0x953000
	105 Move X27, [X27+1224]
	106 Move [X31+32], X0
	107 Move [X31+40], X1
	108 Add X0, X31, 32
	109 Move X2, X31
	110 Move X8, [X27]
	111 Move X1, X8
	112 Call ControlBuilder.WithLayout, X0, X1
	113 Move X9, 0x901000
	114 Move X9, [X9+3144]
	115 Move X8, X0
	116 Move [X31+32], X8
	117 Move [X31+40], X1
	118 Move X0, [X9]
	119 Move W8, [X0+224]
	120 Compare W8, 0
	121 JumpIfNotEqual {123}
	122 Call 0x1C17DFC
	123 Move X0, X31
	124 Call CultureInfo.get_InvariantCulture
	125 Move X8, 0x8FF000
	126 Move X8, [X8+2512]
	127 Move X23, X0
	128 Move W1, 4
	129 Move X8, [X8]
	130 Move X0, X8
	131 Call 0x1C17D6C
	132 Move X28, 0x8FF000
	133 Move W8, [X19+20]
	134 Move X28, [X28+1880]
	135 Move X24, X0
	136 Add X1, X31, 76
	137 Move [X31+76], W8
	138 Move X0, [X28]
	139 Call 0x1C17E04
	140 Compare X24, 0
	141 JumpIfEqual {451}
	142 Move X25, X0
	143 Compare X0, 0
	144 JumpIfEqual {151}
	145 Move X8, [X24]
	146 Move X0, X25
	147 Move X1, [X8+64]
	148 Call 0x1C17E00
	149 Compare X0, 0
	150 JumpIfEqual {453}
	151 Move W8, [X24+24]
	152 Compare W8, 0
	153 JumpIfEqual {452}
	154 Move [X24+32], X25
	155 Move W8, [X19+16]
	156 Move X0, [X28]
	157 Add X1, X31, 72
	158 Add W8, W8, 1
	159 Move [X31+72], W8
	160 Call 0x1C17E04
	161 Move X25, X0
	162 Compare X0, 0
	163 JumpIfEqual {170}
	164 Move X8, [X24]
	165 Move X0, X25
	166 Move X1, [X8+64]
	167 Call 0x1C17E00
	168 Compare X0, 0
	169 JumpIfEqual {453}
	170 Move W8, [X24+24]
	171 NotImplemented "Instruction CMP not yet implemented."
	172 Add X0, X31, 48
	173 Move X1, X31
	174 Move [X24+40], X25
	175 Call PrimitiveValue.ToString, X0
	176 Move X25, X0
	177 Compare X0, 0
	178 JumpIfEqual {185}
	179 Move X8, [X24]
	180 Move X0, X25
	181 Move X1, [X8+64]
	182 Call 0x1C17E00
	183 Compare X0, 0
	184 JumpIfEqual {453}
	185 Move W8, [X24+24]
	186 NotImplemented "Instruction CMP not yet implemented."
	187 Move [X24+48], X25
	188 Move W8, [X19+20]
	189 Move X0, [X28]
	190 Add X1, X31, 28
	191 Move [X31+28], W8
	192 Call 0x1C17E04
	193 Move X25, X0
	194 Compare X0, 0
	195 JumpIfEqual {202}
	196 Move X8, [X24]
	197 Move X0, X25
	198 Move X1, [X8+64]
	199 Call 0x1C17E00
	200 Compare X0, 0
	201 JumpIfEqual {453}
	202 Move W8, [X24+24]
	203 NotImplemented "Instruction CMP not yet implemented."
	204 Move [X24+56], X25
	205 Move X8, 0x954000
	206 Move X8, [X8+2592]
	207 Move X0, X23
	208 Move X2, X24
	209 Move X3, X31
	210 Move X1, [X8]
	211 Call String.Format, X0, X1, X2
	212 Move X1, X0
	213 Add X0, X31, 32
	214 Move X2, X31
	215 Call ControlBuilder.WithParameters, X0, X1
	216 Move [X31+32], X0
	217 Move [X31+40], X1
	218 Move W8, [X20+48]
	219 Add X0, X31, 32
	220 Move X2, X31
	221 And W1, W8, 7
	222 Call ControlBuilder.WithBitOffset, X0, X1
	223 Move [X31+32], X0
	224 Move [X31+40], X1
	225 Move W1, [X19+44]
	226 Add X0, X31, 32
	227 Move X2, X31
	228 Call ControlBuilder.WithSizeInBits, X0, X1
	229 Move X8, 0x954000
	230 Move X23, [X22]
	231 Move X8, [X8+2560]
	232 Move X0, X21
	233 Move X2, X31
	234 Move X1, [X8]
	235 Call String.Concat, X0, X1
	236 Compare X23, 0
	237 JumpIfEqual {451}
	238 Move X1, X0
	239 Move X0, X23
	240 Move X2, X31
	241 Call Builder.AddControl, X0, X1
	242 Move X8, [X26]
	243 Move [X31+32], X0
	244 Move [X31+40], X1
	245 Add X0, X31, 32
	246 Move X2, X31
	247 Move X8, [X8+184]
	248 Move W1, [X8+4]
	249 Call ControlBuilder.WithFormat, X0, X1
	250 Move X8, [X27]
	251 Move [X31+32], X0
	252 Move [X31+40], X1
	253 Add X0, X31, 32
	254 Move X2, X31
	255 Move X1, X8
	256 Call ControlBuilder.WithLayout, X0, X1
	257 Move [X31+32], X0
	258 Move [X31+40], X1
	259 Move X0, X31
	260 Call CultureInfo.get_InvariantCulture
	261 Move W8, [X19+16]
	262 Move X23, X0
	263 Move X0, [X28]
	264 Add X1, X31, 24
	265 Add W8, W8, 1
	266 Move [X31+24], W8
	267 Call 0x1C17E04
	268 Move W8, [X19+16]
	269 Move X24, X0
	270 Move X0, [X28]
	271 Add X1, X31, 20
	272 Add W8, W8, 3
	273 Move [X31+20], W8
	274 Call 0x1C17E04
	275 Move X25, 0x954000
	276 Move X25, [X25+2568]
	277 Move X3, X0
	278 Move X0, X23
	279 Move X2, X24
	280 Move X1, [X25]
	281 Move X4, X31
	282 Call String.Format, X0, X1, X2, X3
	283 Move X1, X0
	284 Add X0, X31, 32
	285 Move X2, X31
	286 Call ControlBuilder.WithParameters, X0, X1
	287 Move [X31+32], X0
	288 Move [X31+40], X1
	289 Move W8, [X20+48]
	290 Add X0, X31, 32
	291 Move X2, X31
	292 And W1, W8, 7
	293 Call ControlBuilder.WithBitOffset, X0, X1
	294 Move [X31+32], X0
	295 Move [X31+40], X1
	296 Move W1, [X19+44]
	297 Add X0, X31, 32
	298 Move X2, X31
	299 Call ControlBuilder.WithSizeInBits, X0, X1
	300 Move X8, 0x954000
	301 Move X23, [X22]
	302 Move X8, [X8+2576]
	303 Move X0, X21
	304 Move X2, X31
	305 Move X1, [X8]
	306 Call String.Concat, X0, X1
	307 Compare X23, 0
	308 JumpIfEqual {451}
	309 Move X1, X0
	310 Move X0, X23
	311 Move X2, X31
	312 Call Builder.AddControl, X0, X1
	313 Move X8, [X26]
	314 Move [X31+32], X0
	315 Move [X31+40], X1
	316 Add X0, X31, 32
	317 Move X2, X31
	318 Move X8, [X8+184]
	319 Move W1, [X8+4]
	320 Call ControlBuilder.WithFormat, X0, X1
	321 Move X8, [X27]
	322 Move [X31+32], X0
	323 Move [X31+40], X1
	324 Add X0, X31, 32
	325 Move X2, X31
	326 Move X1, X8
	327 Call ControlBuilder.WithLayout, X0, X1
	328 Move [X31+32], X0
	329 Move [X31+40], X1
	330 Move X0, X31
	331 Call CultureInfo.get_InvariantCulture
	332 Move W8, [X19+16]
	333 Move X23, X0
	334 Move X0, [X28]
	335 Add X1, X31, 16
	336 Add W8, W8, 3
	337 Move [X31+16], W8
	338 Call 0x1C17E04
	339 Move W8, [X19+16]
	340 Move X24, X0
	341 Move X0, [X28]
	342 Add X1, X31, 12
	343 Add W8, W8, 5
	344 Move [X31+12], W8
	345 Call 0x1C17E04
	346 Move X1, [X25]
	347 Move X3, X0
	348 Move X0, X23
	349 Move X2, X24
	350 Move X4, X31
	351 Call String.Format, X0, X1, X2, X3
	352 Move X1, X0
	353 Add X0, X31, 32
	354 Move X2, X31
	355 Call ControlBuilder.WithParameters, X0, X1
	356 Move [X31+32], X0
	357 Move [X31+40], X1
	358 Move W8, [X20+48]
	359 Add X0, X31, 32
	360 Move X2, X31
	361 And W1, W8, 7
	362 Call ControlBuilder.WithBitOffset, X0, X1
	363 Move [X31+32], X0
	364 Move [X31+40], X1
	365 Move W1, [X19+44]
	366 Add X0, X31, 32
	367 Move X2, X31
	368 Call ControlBuilder.WithSizeInBits, X0, X1
	369 Move X8, 0x954000
	370 Move X22, [X22]
	371 Move X8, [X8+2552]
	372 Move X0, X21
	373 Move X2, X31
	374 Move X1, [X8]
	375 Call String.Concat, X0, X1
	376 Compare X22, 0
	377 JumpIfEqual {451}
	378 Move X1, X0
	379 Move X0, X22
	380 Move X2, X31
	381 Call Builder.AddControl, X0, X1
	382 Move X8, [X26]
	383 Move [X31+32], X0
	384 Move [X31+40], X1
	385 Add X0, X31, 32
	386 Move X2, X31
	387 Move X8, [X8+184]
	388 Move W1, [X8+4]
	389 Call ControlBuilder.WithFormat, X0, X1
	390 Move X8, [X27]
	391 Move [X31+32], X0
	392 Move [X31+40], X1
	393 Add X0, X31, 32
	394 Move X2, X31
	395 Move X1, X8
	396 Call ControlBuilder.WithLayout, X0, X1
	397 Move [X31+32], X0
	398 Move [X31+40], X1
	399 Move X0, X31
	400 Call CultureInfo.get_InvariantCulture
	401 Move W8, [X19+16]
	402 Move X21, X0
	403 Move X0, [X28]
	404 Add X1, X31, 8
	405 Add W8, W8, 5
	406 Move [X31+8], W8
	407 Call 0x1C17E04
	408 Move W8, [X19+16]
	409 Move X22, X0
	410 Move X0, [X28]
	411 Add X1, X31, 4
	412 Add W8, W8, 7
	413 Move [X31+4], W8
	414 Call 0x1C17E04
	415 Move X1, [X25]
	416 Move X3, X0
	417 Move X0, X21
	418 Move X2, X22
	419 Move X4, X31
	420 Call String.Format, X0, X1, X2, X3
	421 Move X1, X0
	422 Add X0, X31, 32
	423 Move X2, X31
	424 Call ControlBuilder.WithParameters, X0, X1
	425 Move [X31+32], X0
	426 Move [X31+40], X1
	427 Move W8, [X20+48]
	428 Add X0, X31, 32
	429 Move X2, X31
	430 And W1, W8, 7
	431 Call ControlBuilder.WithBitOffset, X0, X1
	432 Move [X31+32], X0
	433 Move [X31+40], X1
	434 Move W1, [X19+44]
	435 Add X0, X31, 32
	436 Move X2, X31
	437 Call ControlBuilder.WithSizeInBits, X0, X1
	438 Move X20, [X31+144]
	439 Move X19, [X31+152]
	440 Move X22, [X31+128]
	441 Move X21, [X31+136]
	442 Move X24, [X31+112]
	443 Move X23, [X31+120]
	444 Move X26, [X31+96]
	445 Move X25, [X31+104]
	446 Move X28, [X31+80]
	447 Move X27, [X31+88]
	448 Move X30, [X31+64]
	449 Add X31, X31, 160
	450 Return 
	451 Call 0x1C17F20
	452 Call 0x1C17F28
	453 Call 0x1C17F44
	454 Move X1, X31
	455 Call 0x1C17DEC

