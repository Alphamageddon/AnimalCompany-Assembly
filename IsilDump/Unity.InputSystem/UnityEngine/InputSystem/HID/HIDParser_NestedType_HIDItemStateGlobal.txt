Type: UnityEngine.InputSystem.HID.HIDParser/HIDItemStateGlobal

Method: UnityEngine.InputSystem.HID.HID/UsagePage GetUsagePage(System.Int32 index, ref UnityEngine.InputSystem.HID.HIDParser/HIDItemStateLocal localItemState)

Disassembly:
	0x037F7670 CBNZ W8, 0x37F767C
	0x037F7674 BL 0x1C16DFC
	0x037F7678 LDR X0, [X20]
	0x037F767C LDR X8, [X0 + 0xB8]
	0x037F7680 LDR X2, [X22]
	0x037F7684 ADD X0, X31, 0x20
	0x037F7688 MOV X1, X19
	0x037F768C LDR X9, [X8 + 0x10]
	0x037F7690 LDR V0, [X8]
	0x037F7694 STR X9, [X31 + 0x10]
	0x037F7698 STR V0, [X31]
	0x037F769C STR V0, [X31 + 0x2]
	0x037F76A0 STR X9, [X31 + 0x30]
	0x037F76A4 BL 0x21FB010
	0x037F76A8 LDR X8, [X20]
	0x037F76AC LDR X2, [X21]
	0x037F76B0 MOV W1, W0
	0x037F76B4 LDR X8, [X8 + 0xB8]
	0x037F76B8 MOV X0, X8
	0x037F76BC BL 0x2DEAE6C
	0x037F76C0 LDR X8, [X20]
	0x037F76C4 MOV X1, X19
	0x037F76C8 LDR X8, [X8 + 0xB8]
	0x037F76CC ADD X0, X8, 0x110
	0x037F76D0 BL 0x37FA3E8
	0x037F76D4 LDP X20, X19, [X31 + 0x60]
	0x037F76D8 LDP X22, X21, [X31 + 0x50]
	0x037F76DC LDR X30, [X31 + 0x40]
	0x037F76E0 ADD X31, X31, 0x70
	0x037F76E4 RET
	0x037F76E8 STR X30, [X31 - 0x20]!
	0x037F76EC STP X20, X19, [X31 + 0x10]
	0x037F76F0 ADRP X19, 0xBEA000
	0x037F76F4 ADRP X20, 0x924000
	0x037F76F8 LDRB W8, [X19 + 0x3A5]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xBEB000
	007 Move W8, [X22+920]
	008 Move X20, X2
	009 Move W19, W1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x900000
	016 Move X0, [X0+3832]
	017 Call 0x1C17CF4
	018 Move X0, 0x900000
	019 Move X0, [X0+3840]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+920], W8
	023 Move W8, [X21]
	024 Compare W8, 0
	025 JumpIfEqual {37}
	026 Move X8, 0x900000
	027 Move X8, [X8+3840]
	028 Move X0, X21
	029 Move X20, [X31+32]
	030 Move X19, [X31+40]
	031 Move X22, [X31+16]
	032 Move X21, [X31+24]
	033 Move X1, [X8]
	034 Move X30, [X31+48]
	035 Call Nullable`1<Int32>.get_Value, X0
	036 Return X0
	037 Move X0, X20
	038 Move W1, W19
	039 Call HIDItemStateLocal.GetUsage, X0, X1
	040 Move X20, [X31+32]
	041 Move X19, [X31+40]
	042 Move X22, [X31+16]
	043 Move X21, [X31+24]
	044 NotImplemented "Instruction SBFM not yet implemented."
	045 Move X30, [X31+48]
	046 Return X0

Method: System.Int32 GetPhysicalMin()

Disassembly:
	0x037F76FC LDR X20, [X20 + 0x270]
	0x037F7700 TBNZ X8, 0x0, 0x37F7724
	0x037F7704 ADRP X0, 0x952000
	0x037F7708 LDR X0, [X0 + 0xAE0]
	0x037F770C BL 0x1C16CF4
	0x037F7710 ADRP X0, 0x924000
	0x037F7714 LDR X0, [X0 + 0x270]
	0x037F7718 BL 0x1C16CF4
	0x037F771C MOVZ W8, 0x1
	0x037F7720 STRB W8, [X19 + 0x3A5]
	0x037F7724 LDR X0, [X20]
	0x037F7728 LDR W8, [X0 + 0xE0]
	0x037F772C CBNZ W8, 0x37F7734
	0x037F7730 BL 0x1C16DFC
	0x037F7734 MOV X0, X31
	0x037F7738 BL 0x37701B0
	0x037F773C CBZ X0, 0x37F777C
	0x037F7740 ADRP X8, 0x952000
	0x037F7744 LDR X8, [X8 + 0xAE0]
	0x037F7748 LDR W9, [X0 + 0x20]
	0x037F774C LDR X8, [X8]
	0x037F7750 LDR X8, [X8 + 0xB8]
	0x037F7754 LDR W8, [X8 + 0x4]
	0x037F7758 CMP W8, W9
	0x037F775C B.NE 0x37F776C
	0x037F7760 LDP X20, X19, [X31 + 0x10]
	0x037F7764 LDR X30, [X31], #0x20
	0x037F7768 RET
	0x037F776C BL 0x37F717C
	0x037F7770 LDP X20, X19, [X31 + 0x10]
	0x037F7774 LDR X30, [X31], #0x20
	0x037F7778 B 0x37F6E1C
	0x037F777C BL 0x1C16F20
	0x037F7780 STR X30, [X31 - 0x20]!
	0x037F7784 STP X20, X19, [X31 + 0x10]
	0x037F7788 ADRP X19, 0xBEA000
	0x037F778C ADRP X20, 0x952000
	0x037F7790 LDRB W8, [X19 + 0x39E]
	0x037F7794 LDR X20, [X20 + 0xAE0]
	0x037F7798 TBNZ X8, 0x0, 0x37F77B0
	0x037F779C ADRP X0, 0x952000
	0x037F77A0 LDR X0, [X0 + 0xAE0]
	0x037F77A4 BL 0x1C16CF4
	0x037F77A8 MOVZ W8, 0x1
	0x037F77AC STRB W8, [X19 + 0x39E]
	0x037F77B0 LDR X8, [X20]
	0x037F77B4 LDR X8, [X8 + 0xB8]
	0x037F77B8 LDR W8, [X8]
	0x037F77BC CMP W8, 0x0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xBEB000
	007 Move W8, [X20+921]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {24}
	013 Move X0, 0x90A000
	014 Move X0, [X0+1696]
	015 Call 0x1C17CF4
	016 Move X0, 0x900000
	017 Move X0, [X0+3832]
	018 Call 0x1C17CF4
	019 Move X0, 0x900000
	020 Move X0, [X0+3840]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X20+921], W8
	024 Move X20, X19
	025 Add X20, X20, 24
	026 Move W8, [X20]
	027 Compare W8, 0
	028 JumpIfEqual {55}
	029 Move X21, X19
	030 Add X21, X21, 32
	031 Move W8, [X21]
	032 Compare W8, 0
	033 JumpIfEqual {55}
	034 Move X22, 0x900000
	035 Move X22, [X22+3840]
	036 Move X0, X20
	037 Move X1, [X22]
	038 Call Nullable`1<Int32>.get_Value, X0
	039 Compare W0, 0
	040 JumpIfNotEqual {46}
	041 Move X1, [X22]
	042 Move X0, X21
	043 Call Nullable`1<Int32>.get_Value, X0
	044 Compare W0, 0
	045 JumpIfEqual {55}
	046 Move X1, [X22]
	047 Move X0, X20
	048 Move X20, [X31+32]
	049 Move X19, [X31+40]
	050 Move X22, [X31+16]
	051 Move X21, [X31+24]
	052 Move X30, [X31+48]
	053 Call Nullable`1<Int32>.get_Value, X0
	054 Return X0
	055 Move X8, 0x90A000
	056 Move X8, [X8+1696]
	057 Add X0, X19, 8
	058 Move X20, [X31+32]
	059 Move X19, [X31+40]
	060 Move X22, [X31+16]
	061 Move X21, [X31+24]
	062 Move X2, [X8]
	063 Move W1, W31
	064 Move X30, [X31+48]
	065 Call Nullable`1<Int32>.GetValueOrDefault, X0, X1
	066 Return X0

Method: System.Int32 GetPhysicalMax()

Disassembly:
	0x037F77C0 B.LE 0x37F77D0
	0x037F77C4 LDP X20, X19, [X31 + 0x10]
	0x037F77C8 LDR X30, [X31], #0x20
	0x037F77CC RET
	0x037F77D0 ADRP X0, 0x8FC000
	0x037F77D4 LDR X0, [X0 + 0x5B0]
	0x037F77D8 BL 0x1C16D08
	0x037F77DC BL 0x1C16F10
	0x037F77E0 MOV X19, X0
	0x037F77E4 ADRP X0, 0x952000
	0x037F77E8 LDR X0, [X0 + 0xB18]
	0x037F77EC BL 0x1C16D08
	0x037F77F0 MOV X1, X0
	0x037F77F4 MOV X0, X19
	0x037F77F8 MOV X2, X31
	0x037F77FC BL 0x337DF1C
	0x037F7800 ADRP X0, 0x952000
	0x037F7804 LDR X0, [X0 + 0xB20]
	0x037F7808 BL 0x1C16D08
	0x037F780C MOV X1, X0
	0x037F7810 MOV X0, X19
	0x037F7814 BL 0x1C16DEC
	0x037F7818 LDR X0, [X0 + 0x10]
	0x037F781C RET
	0x037F7820 LDR W0, [X0 + 0x18]
	0x037F7824 RET
	0x037F7828 SUB X31, X31, 0x40
	0x037F782C STP X30, X21, [X31 + 0x20]
	0x037F7830 STP X20, X19, [X31 + 0x30]
	0x037F7834 ADRP X21, 0xBEA000
	0x037F7838 ADRP X20, 0x924000
	0x037F783C LDRB W8, [X21 + 0x3A6]
	0x037F7840 LDR X20, [X20 + 0x628]
	0x037F7844 MOV X19, X0
	0x037F7848 TBNZ X8, 0x0, 0x37F7860
	0x037F784C ADRP X0, 0x924000
	0x037F7850 LDR X0, [X0 + 0x628]
	0x037F7854 BL 0x1C16CF4
	0x037F7858 MOVZ W8, 0x1
	0x037F785C STRB W8, [X21 + 0x3A6]
	0x037F7860 ADD X8, X31, 0x8
	0x037F7864 MOV X0, X19
	0x037F7868 STP X31, X31, [X31 + 0x8]
	0x037F786C STR X31, [X31 + 0x18]
	0x037F7870 BL 0x37F78A0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xBEB000
	006 Move W8, [X20+922]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {23}
	012 Move X0, 0x90A000
	013 Move X0, [X0+1696]
	014 Call 0x1C17CF4
	015 Move X0, 0x900000
	016 Move X0, [X0+3832]
	017 Call 0x1C17CF4
	018 Move X0, 0x900000
	019 Move X0, [X0+3840]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+922], W8
	023 Move X0, X19
	024 Add X0, X0, 24
	025 Move W8, [X0]
	026 Compare W8, 0
	027 JumpIfEqual {52}
	028 Move X20, X19
	029 Add X20, X20, 32
	030 Move W8, [X20]
	031 Compare W8, 0
	032 JumpIfEqual {52}
	033 Move X21, 0x900000
	034 Move X21, [X21+3840]
	035 Move X1, [X21]
	036 Call Nullable`1<Int32>.get_Value, X0
	037 Compare W0, 0
	038 JumpIfNotEqual {44}
	039 Move X1, [X21]
	040 Move X0, X20
	041 Call Nullable`1<Int32>.get_Value, X0
	042 Compare W0, 0
	043 JumpIfEqual {52}
	044 Move X1, [X21]
	045 Move X0, X20
	046 Move X20, [X31+16]
	047 Move X19, [X31+24]
	048 Move X30, [X31+32]
	049 Move X21, [X31+40]
	050 Call Nullable`1<Int32>.get_Value, X0
	051 Return X0
	052 Move X8, 0x90A000
	053 Move X8, [X8+1696]
	054 Add X0, X19, 16
	055 Move X20, [X31+16]
	056 Move X19, [X31+24]
	057 Move W1, W31
	058 Move X2, [X8]
	059 Move X30, [X31+32]
	060 Move X21, [X31+40]
	061 Call Nullable`1<Int32>.GetValueOrDefault, X0, X1
	062 Return X0

