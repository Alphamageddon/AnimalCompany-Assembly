Type: UnityEngine.InputSystem.HID.HIDParser/HIDItemStateLocal

Method: System.Void Reset(ref UnityEngine.InputSystem.HID.HIDParser/HIDItemStateLocal state)

Disassembly:
	0x037F7394 STP X31, X31, [X8]
	0x037F7398 STR X31, [X8 + 0x10]
	0x037F739C LDR X8, [X19]
	0x037F73A0 LDR X8, [X8 + 0xB8]
	0x037F73A4 ADD X0, X8, 0x110
	0x037F73A8 BL 0x37F73D8
	0x037F73AC LDR X8, [X19]
	0x037F73B0 MOVI V0.2D, 0x0
	0x037F73B4 LDR X8, [X8 + 0xB8]
	0x037F73B8 STP V0, V0, [X8 + 0x130]
	0x037F73BC STP V0, V0, [X8 + 0x110]
	0x037F73C0 LDR X8, [X20]
	0x037F73C4 LDP X20, X19, [X31 + 0x10]
	0x037F73C8 LDR X8, [X8 + 0xB8]
	0x037F73CC STR W31, [X8]
	0x037F73D0 LDR X30, [X31], #0x20
	0x037F73D4 RET
	0x037F73D8 STR X30, [X31 - 0x20]!
	0x037F73DC STP X20, X19, [X31 + 0x10]
	0x037F73E0 LDR W8, [X0 + 0x28]
	0x037F73E4 MOV X19, X0
	0x037F73E8 CMP W8, 0x1
	0x037F73EC B.LT 0x37F7434
	0x037F73F0 MOV X20, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xBEB000
	005 Move W8, [X20+917]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x904000
	012 Move X0, [X0+2136]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+917], W8
	016 Move X8, [X19+72]
	017 NotImplemented "Instruction MOVI not yet implemented."
	018 Move [X19], V0
	019 Move [X19+8], V0
	020 Move [X19+32], V0
	021 Move [X19+40], V0
	022 Move [X19+4], V0
	023 Compare X8, 0
	024 JumpIfEqual {30}
	025 Move W9, [X8+28]
	026 Add W9, W9, 1
	027 Move [X8+24], W31
	028 Move [X8+28], W9
	029 Move [X19+72], X8
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X30, [X31+32]
	033 Return 

Method: System.Void SetUsage(System.Int32 value)

Disassembly:
	0x037F73F4 LDR X8, [X19 + 0x8]
	0x037F73F8 CBZ X8, 0x37F7454
	0x037F73FC LDR W9, [X8 + 0x18]
	0x037F7400 CMP W20, W9
	0x037F7404 B.CS 0x37F7458
	0x037F7408 ADD X8, X8, X20, 0x3, LSL
	0x037F740C LDR X8, [X8 + 0x20]
	0x037F7410 CBZ X8, 0x37F7454
	0x037F7414 LDR X0, [X8 + 0x20]
	0x037F7418 CBZ X0, 0x37F7454
	0x037F741C MOV X1, X31
	0x037F7420 BL 0x380DB74
	0x037F7424 LDR W8, [X19 + 0x28]
	0x037F7428 ADD X20, X20, 0x1
	0x037F742C CMP W20, W8
	0x037F7430 B.LT 0x37F73F4
	0x037F7434 LDR X0, [X19 + 0x38]
	0x037F7438 CBZ X0, 0x37F7444
	0x037F743C MOV X1, X31
	0x037F7440 BL 0x380DB74
	0x037F7444 STR X31, [X19 + 0x38]
	0x037F7448 LDP X20, X19, [X31 + 0x10]
	0x037F744C LDR X30, [X31], #0x20
	0x037F7450 RET
	0x037F7454 BL 0x1C16F20
	0x037F7458 BL 0x1C16F28
	0x037F745C STP X30, X21, [X31 - 0x20]!
	0x037F7460 STP X20, X19, [X31 + 0x10]
	0x037F7464 ADRP X21, 0xBEA000
	0x037F7468 LDRB W8, [X21 + 0x3A4]
	0x037F746C MOV W20, W1
	0x037F7470 MOV X19, X0
	0x037F7474 TBNZ X8, 0x0, 0x37F7498
	0x037F7478 ADRP X0, 0x924000
	0x037F747C LDR X0, [X0 + 0x628]
	0x037F7480 BL 0x1C16CF4
	0x037F7484 ADRP X0, 0x94F000
	0x037F7488 LDR X0, [X0 + 0xD58]
	0x037F748C BL 0x1C16CF4
	0x037F7490 MOVZ W8, 0x1
	0x037F7494 STRB W8, [X21 + 0x3A4]
	0x037F7498 CMP W20, 0x1
	0x037F749C B.EQ 0x37F7508
	0x037F74A0 CBNZ W20, 0x37F756C
	0x037F74A4 CBZ X19, 0x37F756C
	0x037F74A8 ADRP X8, 0x94F000
	0x037F74AC LDR X8, [X8 + 0xD58]
	0x037F74B0 LDR X9, [X19]
	0x037F74B4 LDR X8, [X8]
	0x037F74B8 LDRB W11, [X9 + 0x130]
	0x037F74BC LDRB W10, [X8 + 0x130]
	0x037F74C0 CMP W11, W10
	0x037F74C4 B.CC 0x37F756C
	0x037F74C8 LDR X9, [X9 + 0xC8]
	0x037F74CC ADD X9, X9, X10, 0x3, LSL
	0x037F74D0 LDUR X9, [X9 - 0x8]
	0x037F74D4 CMP X9, X8
	0x037F74D8 CSEL X19, X19, X31, EQ
	0x037F74DC CBZ X19, 0x37F756C
	0x037F74E0 ADRP X8, 0x924000
	0x037F74E4 LDR X8, [X8 + 0x628]
	0x037F74E8 LDR X0, [X8]
	0x037F74EC LDR W8, [X0 + 0xE0]
	0x037F74F0 CBNZ W8, 0x37F74F8
	0x037F74F4 BL 0x1C16DFC
	0x037F74F8 MOV X0, X19
	0x037F74FC LDP X20, X19, [X31 + 0x10]
	0x037F7500 LDP X30, X21, [X31], #0x20
	0x037F7504 B 0x37F7578
	0x037F7508 CBZ X19, 0x37F756C
	0x037F750C ADRP X8, 0x94F000
	0x037F7510 LDR X8, [X8 + 0xD58]
	0x037F7514 LDR X9, [X19]
	0x037F7518 LDR X8, [X8]
	0x037F751C LDRB W11, [X9 + 0x130]
	0x037F7520 LDRB W10, [X8 + 0x130]
	0x037F7524 CMP W11, W10
	0x037F7528 B.CC 0x37F756C
	0x037F752C LDR X9, [X9 + 0xC8]
	0x037F7530 ADD X9, X9, X10, 0x3, LSL
	0x037F7534 LDUR X9, [X9 - 0x8]
	0x037F7538 CMP X9, X8
	0x037F753C CSEL X19, X19, X31, EQ
	0x037F7540 CBZ X19, 0x37F756C
	0x037F7544 ADRP X8, 0x924000
	0x037F7548 LDR X8, [X8 + 0x628]
	0x037F754C LDR X0, [X8]
	0x037F7550 LDR W8, [X0 + 0xE0]
	0x037F7554 CBNZ W8, 0x37F755C
	0x037F7558 BL 0x1C16DFC
	0x037F755C MOV X0, X19

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xBEB000
	007 Move W8, [X21+918]
	008 Move W20, W1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {34}
	014 Move X0, 0x8FE000
	015 Move X0, [X0+3600]
	016 Call 0x1C17CF4
	017 Move X0, 0x901000
	018 Move X0, [X0+2928]
	019 Call 0x1C17CF4
	020 Move X0, 0x8FE000
	021 Move X0, [X0+3632]
	022 Call 0x1C17CF4
	023 Move X0, 0x8FE000
	024 Move X0, [X0+1136]
	025 Call 0x1C17CF4
	026 Move X0, 0x900000
	027 Move X0, [X0+3832]
	028 Call 0x1C17CF4
	029 Move X0, 0x900000
	030 Move X0, [X0+3840]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X21+918], W8
	034 Move W8, [X19]
	035 Compare W8, 0
	036 JumpIfEqual {84}
	037 Move X21, [X19+72]
	038 Compare X21, 0
	039 JumpIfEqual {45}
	040 Move X8, 0x900000
	041 Move X8, [X8+3840]
	042 Move X0, X19
	043 Move X1, [X8]
	044 Call Nullable`1<Int32>.get_Value, X0
	045 Move X8, 0x8FE000
	046 Move X8, [X8+3632]
	047 Move X0, [X8]
	048 Call 0x1C17F10
	049 Move X8, 0x901000
	050 Move X8, [X8+2928]
	051 Move X21, X0
	052 Move X1, [X8]
	053 Call List`1<Int32>..ctor, X0
	054 Move [X19+72], X21
	055 Move X8, 0x900000
	056 Move X8, [X8+3840]
	057 Move X0, X19
	058 Move X1, [X8]
	059 Call Nullable`1<Int32>.get_Value, X0
	060 Compare X21, 0
	061 JumpIfEqual {99}
	062 Move X9, 0x8FE000
	063 Move X9, [X9+3600]
	064 Move W10, [X21+28]
	065 Move X8, [X21+16]
	066 Move W1, W0
	067 Move X9, [X9]
	068 Add W10, W10, 1
	069 Move [X21+28], W10
	070 Compare X8, 0
	071 JumpIfEqual {99}
	072 NotImplemented "Instruction LDRSW not yet implemented."
	073 Move W11, [X8+24]
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Add W9, W10, 1
	076 Add X8, X8, X10
	077 Move [X21+24], W9
	078 Move [X8+32], W1
	079 Move X8, [X9+32]
	080 Move X0, X21
	081 Move X8, [X8+192]
	082 Move X2, [X8+112]
	083 Call List`1<Int32>.AddWithResize, X0, X1
	084 Move X8, 0x8FE000
	085 Move X8, [X8+1136]
	086 Add X0, X31, 8
	087 Move W1, W20
	088 Move [X31+8], X31
	089 Move X2, [X8]
	090 Call Nullable`1<Int32>..ctor, X0, X1
	091 Move X8, [X31+8]
	092 Move X30, [X31+16]
	093 Move X21, [X31+24]
	094 Move [X19], X8
	095 Move X20, [X31+32]
	096 Move X19, [X31+40]
	097 Add X31, X31, 48
	098 Return 
	099 Call 0x1C17F20

Method: System.Int32 GetUsage(System.Int32 index)

Disassembly:
	0x037F7560 LDP X20, X19, [X31 + 0x10]
	0x037F7564 LDP X30, X21, [X31], #0x20
	0x037F7568 B 0x37F7604
	0x037F756C LDP X20, X19, [X31 + 0x10]
	0x037F7570 LDP X30, X21, [X31], #0x20
	0x037F7574 RET
	0x037F7578 STP X30, X21, [X31 - 0x20]!
	0x037F757C STP X20, X19, [X31 + 0x10]
	0x037F7580 ADRP X21, 0xBEA000
	0x037F7584 ADRP X20, 0x924000
	0x037F7588 LDRB W8, [X21 + 0x3D5]
	0x037F758C LDR X20, [X20 + 0x628]
	0x037F7590 MOV X19, X0
	0x037F7594 TBNZ X8, 0x0, 0x37F75B8
	0x037F7598 ADRP X0, 0x952000
	0x037F759C LDR X0, [X0 + 0xB00]
	0x037F75A0 BL 0x1C16CF4
	0x037F75A4 ADRP X0, 0x924000
	0x037F75A8 LDR X0, [X0 + 0x628]
	0x037F75AC BL 0x1C16CF4
	0x037F75B0 MOVZ W8, 0x1
	0x037F75B4 STRB W8, [X21 + 0x3D5]
	0x037F75B8 LDR X0, [X20]
	0x037F75BC ADRP X21, 0x952000
	0x037F75C0 LDR W8, [X0 + 0xE0]
	0x037F75C4 LDR X21, [X21 + 0xB00]
	0x037F75C8 CBNZ W8, 0x37F75D4
	0x037F75CC BL 0x1C16DFC
	0x037F75D0 LDR X0, [X20]
	0x037F75D4 LDR X0, [X0 + 0xB8]
	0x037F75D8 LDR X3, [X21]
	0x037F75DC MOVZ W2, 0x5
	0x037F75E0 MOV X1, X19
	0x037F75E4 BL 0x2DEA8C8
	0x037F75E8 LDR X8, [X20]
	0x037F75EC MOV X1, X19
	0x037F75F0 LDP X20, X19, [X31 + 0x10]
	0x037F75F4 LDR X8, [X8 + 0xB8]
	0x037F75F8 ADD X0, X8, 0x110
	0x037F75FC LDP X30, X21, [X31], #0x20
	0x037F7600 B 0x37FA2D4
	0x037F7604 SUB X31, X31, 0x70
	0x037F7608 STR X30, [X31 + 0x40]
	0x037F760C STP X22, X21, [X31 + 0x50]
	0x037F7610 STP X20, X19, [X31 + 0x60]
	0x037F7614 ADRP X21, 0xBEA000
	0x037F7618 ADRP X20, 0x924000
	0x037F761C LDRB W8, [X21 + 0x3D6]
	0x037F7620 LDR X20, [X20 + 0x628]
	0x037F7624 MOV X19, X0
	0x037F7628 TBNZ X8, 0x0, 0x37F7658
	0x037F762C ADRP X0, 0x952000
	0x037F7630 LDR X0, [X0 + 0xB08]
	0x037F7634 BL 0x1C16CF4
	0x037F7638 ADRP X0, 0x952000
	0x037F763C LDR X0, [X0 + 0xB10]
	0x037F7640 BL 0x1C16CF4
	0x037F7644 ADRP X0, 0x924000
	0x037F7648 LDR X0, [X0 + 0x628]
	0x037F764C BL 0x1C16CF4
	0x037F7650 MOVZ W8, 0x1
	0x037F7654 STRB W8, [X21 + 0x3D6]
	0x037F7658 LDR X0, [X20]
	0x037F765C ADRP X22, 0x952000
	0x037F7660 ADRP X21, 0x952000
	0x037F7664 LDR W8, [X0 + 0xE0]
	0x037F7668 LDR X22, [X22 + 0xB10]
	0x037F766C LDR X21, [X21 + 0xB08]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xBEB000
	006 Move W8, [X21+919]
	007 Move W19, W1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {27}
	013 Move X0, 0x8FE000
	014 Move X0, [X0+3624]
	015 Call 0x1C17CF4
	016 Move X0, 0x927000
	017 Move X0, [X0+3896]
	018 Call 0x1C17CF4
	019 Move X0, 0x900000
	020 Move X0, [X0+3832]
	021 Call 0x1C17CF4
	022 Move X0, 0x900000
	023 Move X0, [X0+3840]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+919], W8
	027 Move X0, X20
	028 Add X0, X0, 8
	029 Move W8, [X0]
	030 Compare W8, 0
	031 JumpIfEqual {49}
	032 Move X21, X20
	033 Add X21, X21, 16
	034 Move W8, [X21]
	035 Compare W8, 0
	036 JumpIfEqual {49}
	037 Move X20, 0x900000
	038 Move X20, [X20+3840]
	039 Move X1, [X20]
	040 Call Nullable`1<Int32>.get_Value, X0
	041 Move X1, [X20]
	042 Move W20, W0
	043 Move X0, X21
	044 Call Nullable`1<Int32>.get_Value, X0
	045 Subtract W8, W0, W20
	046 Add W9, W20, W19
	047 NotImplemented "Instruction CMP not yet implemented."
	048 NotImplemented "Instruction CSEL not yet implemented."
	049 Move X0, [X20+72]
	050 Compare X0, 0
	051 JumpIfEqual {65}
	052 Move W8, [X0+24]
	053 NotImplemented "Instruction CMP not yet implemented."
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move X8, 0x927000
	056 Move X8, [X8+3896]
	057 Move W1, W19
	058 Move X20, [X31+16]
	059 Move X19, [X31+24]
	060 Move X2, [X8]
	061 Move X30, [X31+32]
	062 Move X21, [X31+40]
	063 Call List`1<Int32>.get_Item, X0, X1
	064 Return X0
	065 Move W8, [X20]
	066 Compare W8, 0
	067 JumpIfEqual {78}
	068 Move X8, 0x900000
	069 Move X8, [X8+3840]
	070 Move X0, X20
	071 Move X20, [X31+16]
	072 Move X19, [X31+24]
	073 Move X1, [X8]
	074 Move X30, [X31+32]
	075 Move X21, [X31+40]
	076 Call Nullable`1<Int32>.get_Value, X0
	077 Return X0
	078 Move W0, W31
	079 Move X20, [X31+16]
	080 Move X19, [X31+24]
	081 Move X30, [X31+32]
	082 Move X21, [X31+40]
	083 Return X0

