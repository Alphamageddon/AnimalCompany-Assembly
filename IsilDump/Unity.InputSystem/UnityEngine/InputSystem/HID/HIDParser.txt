Type: UnityEngine.InputSystem.HID.HIDParser

Method: System.Boolean ParseReportDescriptor(System.Byte[] buffer, ref UnityEngine.InputSystem.HID.HID/HIDDeviceDescriptor deviceDescriptor)

Disassembly:
	0x037F6FC0 MOV X0, X19
	0x037F6FC4 BL 0x1C16F18
	0x037F6FC8 MOV X19, X31
	0x037F6FCC B 0x37F6FD4
	0x037F6FD0 MOV X20, X0
	0x037F6FD4 LDR X1, [X21]
	0x037F6FD8 ADD X0, X31, 0x18
	0x037F6FDC BL 0x2BC4968
	0x037F6FE0 CBNZ X19, 0x37F6FEC
	0x037F6FE4 MOV X0, X20
	0x037F6FE8 BL 0x1D2C690
	0x037F6FEC MOV X0, X19
	0x037F6FF0 BL 0x1C16F18
	0x037F6FF4 BL 0x1990590
	0x037F6FF8 STR X30, [X31 - 0x20]!
	0x037F6FFC STP X20, X19, [X31 + 0x10]
	0x037F7000 ADRP X19, 0xBEA000
	0x037F7004 LDRB W8, [X19 + 0x3A0]
	0x037F7008 TBNZ X8, 0x0, 0x37F7068
	0x037F700C ADRP X0, 0x950000
	0x037F7010 LDR X0, [X0 + 0xB88]
	0x037F7014 BL 0x1C16CF4
	0x037F7018 ADRP X0, 0x8FD000
	0x037F701C LDR X0, [X0 + 0xE70]
	0x037F7020 BL 0x1C16CF4
	0x037F7024 ADRP X0, 0x952000
	0x037F7028 LDR X0, [X0 + 0xAE8]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Compare X0, 0
	004 JumpIfEqual {14}
	005 Move X2, X1
	006 Move W1, [X0+24]
	007 Add X8, X0, 32
	008 NotImplemented "Instruction CMP not yet implemented."
	009 NotImplemented "Instruction CSEL not yet implemented."
	010 Move X30, [X31+16]
	011 Move X19, [X31+24]
	012 Call HIDParser.ParseReportDescriptor, X0, X1, X2
	013 Return X0
	014 Move X0, 0x903000
	015 Move X0, [X0+1320]
	016 Call 0x1C17D08
	017 Call 0x1C17F10
	018 Move X19, X0
	019 Move X0, 0x929000
	020 Move X0, [X0+3912]
	021 Call 0x1C17D08
	022 Move X1, X0
	023 Move X0, X19
	024 Move X2, X31
	025 Call ArgumentNullException..ctor, X0, X1
	026 Move X0, 0x953000
	027 Move X0, [X0+2704]
	028 Call 0x1C17D08
	029 Move X1, X0
	030 Move X0, X19
	031 Call 0x1C17DEC

Method: System.Boolean ParseReportDescriptor(System.Byte* bufferPtr, System.Int32 bufferLength, ref UnityEngine.InputSystem.HID.HID/HIDDeviceDescriptor deviceDescriptor)

Disassembly:
	0x037F3AF0 BL 0x3EB1AC0
	0x037F3AF4 LDR X0, [X25]
	0x037F3AF8 LDR X21, [X20 + 0x38]
	0x037F3AFC LDR W8, [X0 + 0xE0]
	0x037F3B00 CBNZ W8, 0x37F3B0C
	0x037F3B04 BL 0x1C16DFC
	0x037F3B08 LDR X0, [X25]
	0x037F3B0C LDR X8, [X0 + 0xB8]
	0x037F3B10 LDR X22, [X8 + 0x10]
	0x037F3B14 CBNZ X22, 0x37F3B68
	0x037F3B18 LDR W8, [X0 + 0xE0]
	0x037F3B1C CBNZ W8, 0x37F3B28
	0x037F3B20 BL 0x1C16DFC
	0x037F3B24 LDR X0, [X25]
	0x037F3B28 ADRP X9, 0x956000
	0x037F3B2C LDR X8, [X0 + 0xB8]
	0x037F3B30 LDR X9, [X9 + 0x930]
	0x037F3B34 LDR X23, [X8]
	0x037F3B38 LDR X0, [X9]
	0x037F3B3C BL 0x1C16F10
	0x037F3B40 ADRP X8, 0x956000
	0x037F3B44 LDR X8, [X8 + 0x950]
	0x037F3B48 MOV X1, X23
	0x037F3B4C MOV X3, X31
	0x037F3B50 MOV X22, X0
	0x037F3B54 LDR X2, [X8]
	0x037F3B58 BL 0x24B01CC
	0x037F3B5C LDR X8, [X25]
	0x037F3B60 LDR X8, [X8 + 0xB8]
	0x037F3B64 STR X22, [X8 + 0x10]
	0x037F3B68 LDR X2, [X24]
	0x037F3B6C ADD X8, X31, 0x18
	0x037F3B70 MOV X0, X21
	0x037F3B74 MOV X1, X22
	0x037F3B78 BL 0x22E61FC
	0x037F3B7C ADD X0, X31, 0x80
	0x037F3B80 ADD X1, X31, 0x18
	0x037F3B84 MOVZ W2, 0x48
	0x037F3B88 BL 0x3EB1AC0
	0x037F3B8C LDR W8, [X31 + 0xD0]
	0x037F3B90 LDR W9, [X31 + 0x80]
	0x037F3B94 CMP W8, 0x30
	0x037F3B98 CSET W8, NE
	0x037F3B9C CMP W9, 0x31
	0x037F3BA0 CSET W9, NE
	0x037F3BA4 ORR W8, W8, W9, 0x0
	0x037F3BA8 STR W8, [X31 + 0x14]
	0x037F3BAC TBNZ X8, 0x0, 0x37F410C
	0x037F3BB0 MOV X29, X25
	0x037F3BB4 LDR W26, [X31 + 0x100]
	0x037F3BB8 LDR W25, [X31 + 0xB0]
	0x037F3BBC SUBS W8, W25, W26
	0x037F3BC0 B.GE 0x37F3BDC
	0x037F3BC4 LDR W8, [X31 + 0xFC]
	0x037F3BC8 LDR W22, [X31 + 0xAC]
	0x037F3BCC ADD W8, W8, W26
	0x037F3BD0 SUB W21, W8, W22
	0x037F3BD4 MOV W8, W25
	0x037F3BD8 B 0x37F3BE8
	0x037F3BDC LDR W22, [X31 + 0xAC]
	0x037F3BE0 ADD W21, W8, W22
	0x037F3BE4 MOV W8, W26
	0x037F3BE8 ADRP X10, 0x956000
	0x037F3BEC LDR X10, [X10 + 0x970]
	0x037F3BF0 ADD W9, W8, 0x7
	0x037F3BF4 CMP W8, 0x0
	0x037F3BF8 CSEL W9, W9, W8, LT
	0x037F3BFC LDR X1, [X10]
	0x037F3C00 SBFM W24, W9, 0x3, 0x1F
	0x037F3C04 AND W9, W9, 0xFFFFFFF8
	0x037F3C08 MOV X0, X19
	0x037F3C0C MOV X2, X31
	0x037F3C10 SUB W23, W8, W9
	0x037F3C14 BL 0x3816074
	0x037F3C18 ADRP X27, 0x955000
	0x037F3C1C LDR X27, [X27 + 0x5E0]
	0x037F3C20 STP X0, X1, [X31 + 0x70]
	0x037F3C24 ADD X0, X31, 0x70
	0x037F3C28 MOV X2, X31
	0x037F3C2C LDR X8, [X27]
	0x037F3C30 MOV X1, X8
	0x037F3C34 BL 0x38164D8
	0x037F3C38 LDR X8, [X27]
	0x037F3C3C STP X0, X1, [X31 + 0x70]
	0x037F3C40 ADD X0, X31, 0x70
	0x037F3C44 MOV X2, X31
	0x037F3C48 MOV X1, X8
	0x037F3C4C BL 0x3816520
	0x037F3C50 STP X0, X1, [X31 + 0x70]
	0x037F3C54 ADD X0, X31, 0x70
	0x037F3C58 MOV W1, W23
	0x037F3C5C MOV X2, X31
	0x037F3C60 BL 0x38166CC
	0x037F3C64 STP X0, X1, [X31 + 0x70]
	0x037F3C68 ADD X0, X31, 0x70
	0x037F3C6C MOV W1, W24
	0x037F3C70 MOV X2, X31
	0x037F3C74 BL 0x3816684
	0x037F3C78 STP X0, X1, [X31 + 0x70]
	0x037F3C7C ADD X0, X31, 0x70
	0x037F3C80 MOV W1, W21
	0x037F3C84 MOV X2, X31
	0x037F3C88 BL 0x3816834
	0x037F3C8C ADRP X8, 0x953000
	0x037F3C90 LDR X8, [X8 + 0xD18]
	0x037F3C94 STP X0, X1, [X31 + 0x70]
	0x037F3C98 MOVZ W1, 0x1
	0x037F3C9C LDR X8, [X8]
	0x037F3CA0 MOV X0, X8
	0x037F3CA4 BL 0x1C16D6C
	0x037F3CA8 ADRP X23, 0x953000
	0x037F3CAC LDR X23, [X23 + 0xA68]
	0x037F3CB0 MOV X21, X0
	0x037F3CB4 LDR X8, [X23]
	0x037F3CB8 LDR W9, [X8 + 0xE0]
	0x037F3CBC CBNZ W9, 0x37F3CCC
	0x037F3CC0 MOV X0, X8
	0x037F3CC4 BL 0x1C16DFC
	0x037F3CC8 LDR X8, [X23]
	0x037F3CCC CBZ X21, 0x37F43DC
	0x037F3CD0 LDR W9, [X21 + 0x18]
	0x037F3CD4 CBZ W9, 0x37F43AC
	0x037F3CD8 LDR X8, [X8 + 0xB8]
	0x037F3CDC ADD X0, X31, 0x70
	0x037F3CE0 MOV X1, X21
	0x037F3CE4 MOV X2, X31
	0x037F3CE8 LDR V0, [X8]
	0x037F3CEC STR V0, [X21 + 0x2]
	0x037F3CF0 BL 0x3816918
	0x037F3CF4 ADD X0, X31, 0xD0
	0x037F3CF8 BL 0x37F43E0
	0x037F3CFC MOV X21, X0
	0x037F3D00 ADD X0, X31, 0x80
	0x037F3D04 BL 0x37F43E0
	0x037F3D08 ADRP X8, 0x956000
	0x037F3D0C LDR X8, [X8 + 0x988]
	0x037F3D10 MOV X23, X0
	0x037F3D14 MOV X0, X19
	0x037F3D18 MOV X2, X31
	0x037F3D1C LDR X1, [X8]
	0x037F3D20 BL 0x3816074
	0x037F3D24 ADRP X27, 0x928000
	0x037F3D28 LDR X27, [X27 + 0xD18]
	0x037F3D2C MOV X8, X0
	0x037F3D30 STP X8, X1, [X31 + 0x70]
	0x037F3D34 LDR W28, [X31 + 0xE0]
	0x037F3D38 LDR X0, [X27]
	0x037F3D3C LDR W8, [X0 + 0xE0]
	0x037F3D40 CBNZ W8, 0x37F3D4C
	0x037F3D44 BL 0x1C16DFC
	0x037F3D48 LDR X0, [X27]
	0x037F3D4C LDR X8, [X0 + 0xB8]
	0x037F3D50 CMP W28, 0x0
	0x037F3D54 MOVZ W9, 0x4
	0x037F3D58 MOVZ W10, 0x8
	0x037F3D5C CSEL X9, X10, X9, LT
	0x037F3D60 LDR W1, [X8, X9, LSL]
	0x037F3D64 ADD X0, X31, 0x70
	0x037F3D68 MOV X2, X31
	0x037F3D6C BL 0x3816608
	0x037F3D70 ADD W8, W26, 0x7
	0x037F3D74 CMP W26, 0x0
	0x037F3D78 CSEL W28, W8, W26, LT
	0x037F3D7C SBFM W8, W28, 0x3, 0x1F
	0x037F3D80 STP X0, X1, [X31 + 0x70]
	0x037F3D84 SUB W1, W8, W24
	0x037F3D88 ADD X0, X31, 0x70
	0x037F3D8C MOV X2, X31
	0x037F3D90 BL 0x3816684
	0x037F3D94 AND W8, W28, 0xFFFFFFF8
	0x037F3D98 STP X0, X1, [X31 + 0x70]
	0x037F3D9C SUB W1, W26, W8
	0x037F3DA0 ADD X0, X31, 0x70
	0x037F3DA4 MOV X2, X31
	0x037F3DA8 BL 0x38166CC
	0x037F3DAC LDR W8, [X31 + 0xFC]
	0x037F3DB0 STP X0, X1, [X31 + 0x70]
	0x037F3DB4 ADD X0, X31, 0x70
	0x037F3DB8 MOV X2, X31
	0x037F3DBC MOV W1, W8
	0x037F3DC0 BL 0x3816834
	0x037F3DC4 STP X0, X1, [X31 + 0x70]
	0x037F3DC8 ADD X0, X31, 0x70
	0x037F3DCC MOV X1, X21
	0x037F3DD0 MOV X2, X31
	0x037F3DD4 BL 0x3816C10
	0x037F3DD8 STP X0, X1, [X31 + 0x70]
	0x037F3DDC ADD X0, X31, 0xD0
	0x037F3DE0 BL 0x37F451C
	0x037F3DE4 MOV X2, X0
	0x037F3DE8 MOV X3, X1
	0x037F3DEC ADD X0, X31, 0x70
	0x037F3DF0 MOV X1, X2
	0x037F3DF4 MOV X2, X3
	0x037F3DF8 MOV X3, X31
	0x037F3DFC BL 0x3816D9C
	0x037F3E00 STP X0, X1, [X31 + 0x70]
	0x037F3E04 ADD X0, X31, 0xD0
	0x037F3E08 BL 0x37F45E4
	0x037F3E0C MOV X1, X0
	0x037F3E10 ADD X0, X31, 0x70
	0x037F3E14 MOV X2, X31
	0x037F3E18 BL 0x3816CC8
	0x037F3E1C ADRP X8, 0x956000
	0x037F3E20 LDR X8, [X8 + 0x9A0]
	0x037F3E24 MOV X0, X19
	0x037F3E28 MOV X2, X31
	0x037F3E2C LDR X1, [X8]
	0x037F3E30 BL 0x3816074
	0x037F3E34 MOV X8, X0
	0x037F3E38 LDR X0, [X27]
	0x037F3E3C STP X8, X1, [X31 + 0x70]
	0x037F3E40 LDR W26, [X31 + 0x90]
	0x037F3E44 LDR W8, [X0 + 0xE0]
	0x037F3E48 CBNZ W8, 0x37F3E54
	0x037F3E4C BL 0x1C16DFC
	0x037F3E50 LDR X0, [X27]
	0x037F3E54 LDR X8, [X0 + 0xB8]
	0x037F3E58 CMP W26, 0x0
	0x037F3E5C MOVZ W9, 0x4
	0x037F3E60 MOVZ W10, 0x8
	0x037F3E64 CSEL X9, X10, X9, LT
	0x037F3E68 LDR W1, [X8, X9, LSL]
	0x037F3E6C ADD X0, X31, 0x70
	0x037F3E70 MOV X2, X31
	0x037F3E74 BL 0x3816608
	0x037F3E78 ADD W8, W25, 0x7
	0x037F3E7C CMP W25, 0x0
	0x037F3E80 CSEL W26, W8, W25, LT
	0x037F3E84 SBFM W8, W26, 0x3, 0x1F
	0x037F3E88 STP X0, X1, [X31 + 0x70]
	0x037F3E8C SUB W1, W8, W24
	0x037F3E90 ADD X0, X31, 0x70
	0x037F3E94 MOV X2, X31
	0x037F3E98 BL 0x3816684
	0x037F3E9C AND W8, W26, 0xFFFFFFF8
	0x037F3EA0 STP X0, X1, [X31 + 0x70]
	0x037F3EA4 SUB W1, W25, W8
	0x037F3EA8 ADD X0, X31, 0x70
	0x037F3EAC MOV X2, X31
	0x037F3EB0 BL 0x38166CC
	0x037F3EB4 STP X0, X1, [X31 + 0x70]
	0x037F3EB8 ADD X0, X31, 0x70
	0x037F3EBC MOV W1, W22
	0x037F3EC0 MOV X2, X31
	0x037F3EC4 BL 0x3816834
	0x037F3EC8 STP X0, X1, [X31 + 0x70]
	0x037F3ECC ADD X0, X31, 0x70
	0x037F3ED0 MOV X1, X23
	0x037F3ED4 MOV X2, X31
	0x037F3ED8 BL 0x3816C10
	0x037F3EDC STP X0, X1, [X31 + 0x70]
	0x037F3EE0 ADD X0, X31, 0x80
	0x037F3EE4 BL 0x37F451C
	0x037F3EE8 MOV X2, X0
	0x037F3EEC MOV X3, X1
	0x037F3EF0 ADD X0, X31, 0x70
	0x037F3EF4 MOV X1, X2
	0x037F3EF8 MOV X2, X3
	0x037F3EFC MOV X3, X31
	0x037F3F00 BL 0x3816D9C
	0x037F3F04 STP X0, X1, [X31 + 0x70]
	0x037F3F08 ADD X0, X31, 0x80
	0x037F3F0C BL 0x37F45E4
	0x037F3F10 MOV X1, X0
	0x037F3F14 ADD X0, X31, 0x70
	0x037F3F18 MOV X2, X31
	0x037F3F1C BL 0x3816CC8
	0x037F3F20 ADRP X8, 0x956000
	0x037F3F24 LDR X8, [X8 + 0x968]
	0x037F3F28 MOV X0, X19
	0x037F3F2C MOV X2, X31
	0x037F3F30 LDR X1, [X8]
	0x037F3F34 BL 0x3816074
	0x037F3F38 ADRP X22, 0x900000
	0x037F3F3C LDR X22, [X22 + 0xAC8]
	0x037F3F40 STP X0, X1, [X31 + 0x70]
	0x037F3F44 MOVZ W1, 0x2
	0x037F3F48 LDR X8, [X22]
	0x037F3F4C MOV X0, X8
	0x037F3F50 BL 0x1C16D6C
	0x037F3F54 CBZ X0, 0x37F43DC
	0x037F3F58 LDR W8, [X0 + 0x18]
	0x037F3F5C MOV X1, X0
	0x037F3F60 CBZ W8, 0x37F43AC
	0x037F3F64 CMP W8, 0x1
	0x037F3F68 STR X23, [X1 + 0x20]
	0x037F3F6C B.EQ 0x37F43AC
	0x037F3F70 ADRP X8, 0x956000
	0x037F3F74 LDR X8, [X8 + 0x9A8]
	0x037F3F78 ADRP X24, 0x902000
	0x037F3F7C ADRP X25, 0x952000
	0x037F3F80 LDR X8, [X8]
	0x037F3F84 LDR X24, [X24 + 0x3A0]
	0x037F3F88 LDR X25, [X25 + 0x408]
	0x037F3F8C STR X8, [X1 + 0x28]
	0x037F3F90 LDR X0, [X24]
	0x037F3F94 LDR X2, [X25]
	0x037F3F98 BL 0x228CFD8
	0x037F3F9C MOV X1, X0
	0x037F3FA0 ADD X0, X31, 0x70
	0x037F3FA4 MOV X2, X31
	0x037F3FA8 BL 0x3816C10
	0x037F3FAC ADRP X8, 0x956000
	0x037F3FB0 LDR X8, [X8 + 0x990]
	0x037F3FB4 MOV X0, X19
	0x037F3FB8 MOV X2, X31
	0x037F3FBC LDR X1, [X8]
	0x037F3FC0 BL 0x3816074
	0x037F3FC4 LDR X8, [X22]
	0x037F3FC8 STP X0, X1, [X31 + 0x70]
	0x037F3FCC MOVZ W1, 0x2
	0x037F3FD0 MOV X0, X8
	0x037F3FD4 BL 0x1C16D6C
	0x037F3FD8 CBZ X0, 0x37F43DC
	0x037F3FDC LDR W8, [X0 + 0x18]
	0x037F3FE0 MOV X1, X0
	0x037F3FE4 CBZ W8, 0x37F43AC
	0x037F3FE8 CMP W8, 0x1
	0x037F3FEC STR X23, [X1 + 0x20]
	0x037F3FF0 B.EQ 0x37F43AC
	0x037F3FF4 ADRP X8, 0x956000
	0x037F3FF8 LDR X8, [X8 + 0x9B8]
	0x037F3FFC LDR X8, [X8]
	0x037F4000 STR X8, [X1 + 0x28]
	0x037F4004 LDR X0, [X24]
	0x037F4008 LDR X2, [X25]
	0x037F400C BL 0x228CFD8
	0x037F4010 MOV X1, X0
	0x037F4014 ADD X0, X31, 0x70
	0x037F4018 MOV X2, X31
	0x037F401C BL 0x3816C10
	0x037F4020 ADRP X8, 0x955000
	0x037F4024 LDR X8, [X8 + 0x9B0]
	0x037F4028 MOV X0, X19
	0x037F402C MOV X2, X31
	0x037F4030 LDR X1, [X8]
	0x037F4034 BL 0x3816074
	0x037F4038 LDR X8, [X22]
	0x037F403C STP X0, X1, [X31 + 0x70]
	0x037F4040 MOVZ W1, 0x2
	0x037F4044 MOV X0, X8
	0x037F4048 BL 0x1C16D6C
	0x037F404C CBZ X0, 0x37F43DC
	0x037F4050 LDR W8, [X0 + 0x18]
	0x037F4054 MOV X1, X0
	0x037F4058 CBZ W8, 0x37F43AC
	0x037F405C CMP W8, 0x1
	0x037F4060 STR X21, [X1 + 0x20]
	0x037F4064 B.EQ 0x37F43AC
	0x037F4068 ADRP X8, 0x955000
	0x037F406C LDR X8, [X8 + 0x978]
	0x037F4070 LDR X8, [X8]
	0x037F4074 STR X8, [X1 + 0x28]
	0x037F4078 LDR X0, [X24]
	0x037F407C LDR X2, [X25]
	0x037F4080 BL 0x228CFD8
	0x037F4084 MOV X1, X0
	0x037F4088 ADD X0, X31, 0x70
	0x037F408C MOV X2, X31
	0x037F4090 BL 0x3816C10
	0x037F4094 ADRP X8, 0x955000
	0x037F4098 LDR X8, [X8 + 0x998]
	0x037F409C MOV X0, X19
	0x037F40A0 MOV X2, X31
	0x037F40A4 LDR X1, [X8]
	0x037F40A8 BL 0x3816074
	0x037F40AC LDR X8, [X22]
	0x037F40B0 STP X0, X1, [X31 + 0x70]
	0x037F40B4 MOVZ W1, 0x2
	0x037F40B8 MOV X0, X8
	0x037F40BC BL 0x1C16D6C
	0x037F40C0 CBZ X0, 0x37F43DC
	0x037F40C4 LDR W8, [X0 + 0x18]
	0x037F40C8 MOV X1, X0
	0x037F40CC CBZ W8, 0x37F43AC
	0x037F40D0 CMP W8, 0x1
	0x037F40D4 STR X21, [X1 + 0x20]
	0x037F40D8 B.EQ 0x37F43AC
	0x037F40DC ADRP X8, 0x955000
	0x037F40E0 LDR X8, [X8 + 0x980]
	0x037F40E4 LDR X8, [X8]
	0x037F40E8 STR X8, [X1 + 0x28]
	0x037F40EC LDR X0, [X24]
	0x037F40F0 LDR X2, [X25]
	0x037F40F4 BL 0x228CFD8
	0x037F40F8 MOV X1, X0
	0x037F40FC ADD X0, X31, 0x70
	0x037F4100 MOV X2, X31
	0x037F4104 BL 0x3816C10
	0x037F4108 MOV X25, X29
	0x037F410C LDR X28, [X20 + 0x38]
	0x037F4110 CBZ X28, 0x37F43DC
	0x037F4114 LDR X8, [X28 + 0x18]
	0x037F4118 CMP W8, 0x1
	0x037F411C B.LT 0x37F43B0
	0x037F4120 AND X8, X8, 0x0
	0x037F4124 CBZ X8, 0x37F43AC
	0x037F4128 MOV X29, X31
	0x037F412C SUB X26, X8, 0x1
	0x037F4130 ADD X27, X28, 0x50
	0x037F4134 STR X19, [X31 + 0x8]
	0x037F4138 LDUR W8, [X27 - 0x10]
	0x037F413C CMP W8, 0x1
	0x037F4140 B.NE 0x37F4390
	0x037F4144 LDR W8, [X31 + 0x14]
	0x037F4148 TBNZ X8, 0x0, 0x37F4168
	0x037F414C LDUR W8, [X27 - 0x2C]
	0x037F4150 CMP W8, 0x1
	0x037F4154 B.NE 0x37F4168
	0x037F4158 LDUR W8, [X27 - 0x30]
	0x037F415C AND W8, W8, 0xFFFFFFFE
	0x037F4160 CMP W8, 0x30
	0x037F4164 B.EQ 0x37F4390
	0x037F4168 SUB X20, X27, 0x30
	0x037F416C MOV X0, X20
	0x037F4170 BL 0x37F4678
	0x037F4174 CBZ X0, 0x37F4390
	0x037F4178 MOV X22, X0
	0x037F417C MOV X0, X20
	0x037F4180 BL 0x37F4770
	0x037F4184 MOV X21, X0
	0x037F4188 MOV X0, X19
	0x037F418C MOV X1, X31
	0x037F4190 BL 0x381600C
	0x037F4194 ADRP X8, 0x955000
	0x037F4198 LDR X8, [X8 + 0x938]
	0x037F419C STP X0, X1, [X31 + 0x18]
	0x037F41A0 ADD X1, X31, 0x18
	0x037F41A4 LDR X8, [X8]
	0x037F41A8 MOV X0, X8
	0x037F41AC BL 0x1C16E04
	0x037F41B0 LDR X8, [X25]
	0x037F41B4 MOV X23, X0
	0x037F41B8 LDR W9, [X8 + 0xE0]
	0x037F41BC CBNZ W9, 0x37F41CC
	0x037F41C0 MOV X0, X8
	0x037F41C4 BL 0x1C16DFC
	0x037F41C8 LDR X8, [X25]
	0x037F41CC LDR X9, [X8 + 0xB8]
	0x037F41D0 LDR X24, [X9 + 0x18]
	0x037F41D4 CBNZ X24, 0x37F4230
	0x037F41D8 LDR W9, [X8 + 0xE0]
	0x037F41DC CBNZ W9, 0x37F41EC
	0x037F41E0 MOV X0, X8
	0x037F41E4 BL 0x1C16DFC
	0x037F41E8 LDR X8, [X25]
	0x037F41EC LDR X8, [X8 + 0xB8]
	0x037F41F0 LDR X19, [X8]
	0x037F41F4 ADRP X8, 0x955000
	0x037F41F8 LDR X8, [X8 + 0x928]
	0x037F41FC LDR X0, [X8]
	0x037F4200 BL 0x1C16F10
	0x037F4204 ADRP X8, 0x955000
	0x037F4208 LDR X8, [X8 + 0x958]
	0x037F420C MOV X1, X19
	0x037F4210 MOV X3, X31
	0x037F4214 MOV X24, X0
	0x037F4218 LDR X2, [X8]
	0x037F421C BL 0x2D350EC
	0x037F4220 LDR X8, [X25]
	0x037F4224 LDR X19, [X31 + 0x8]
	0x037F4228 LDR X8, [X8 + 0xB8]
	0x037F422C STR X24, [X8 + 0x18]
	0x037F4230 ADRP X8, 0x955000
	0x037F4234 LDR X8, [X8 + 0x940]
	0x037F4238 MOV X0, X21
	0x037F423C MOV X1, X23
	0x037F4240 MOV X2, X24
	0x037F4244 LDR X3, [X8]
	0x037F4248 BL 0x228E16C
	0x037F424C MOV X21, X0
	0x037F4250 MOV X0, X19
	0x037F4254 MOV X1, X21
	0x037F4258 MOV X2, X31
	0x037F425C BL 0x3816074
	0x037F4260 STP X0, X1, [X31 + 0x70]
	0x037F4264 MOV X0, X20
	0x037F4268 BL 0x37F4980
	0x037F426C MOV X1, X0
	0x037F4270 ADD X0, X31, 0x70
	0x037F4274 MOV X2, X31
	0x037F4278 BL 0x38164D8
	0x037F427C STP X0, X1, [X31 + 0x70]
	0x037F4280 ADD X0, X31, 0x70
	0x037F4284 MOV X1, X22
	0x037F4288 MOV X2, X31
	0x037F428C BL 0x3816520
	0x037F4290 STP X0, X1, [X31 + 0x70]
	0x037F4294 LDR W8, [X27]
	0x037F4298 ADD X0, X31, 0x70
	0x037F429C MOV X2, X31
	0x037F42A0 UBFM W1, W8, 0x3, 0x1F
	0x037F42A4 BL 0x3816684
	0x037F42A8 STP X0, X1, [X31 + 0x70]
	0x037F42AC LDR W8, [X27]
	0x037F42B0 ADD X0, X31, 0x70
	0x037F42B4 MOV X2, X31
	0x037F42B8 AND W1, W8, 0x7
	0x037F42BC BL 0x38166CC
	0x037F42C0 STP X0, X1, [X31 + 0x70]
	0x037F42C4 LDUR W1, [X27 - 0x4]
	0x037F42C8 ADD X0, X31, 0x70
	0x037F42CC MOV X2, X31
	0x037F42D0 BL 0x3816834
	0x037F42D4 STP X0, X1, [X31 + 0x70]
	0x037F42D8 MOV X0, X20
	0x037F42DC BL 0x37F4A7C
	0x037F42E0 AND X1, X0, 0x0
	0x037F42E4 ADD X0, X31, 0x70
	0x037F42E8 MOV X2, X31
	0x037F42EC BL 0x3816608
	0x037F42F0 STP X0, X1, [X31 + 0x70]
	0x037F42F4 MOV X0, X20
	0x037F42F8 BL 0x37F451C
	0x037F42FC MOV X2, X0
	0x037F4300 MOV X3, X1
	0x037F4304 ADD X0, X31, 0x70
	0x037F4308 MOV X1, X2
	0x037F430C MOV X2, X3
	0x037F4310 MOV X3, X31
	0x037F4314 BL 0x3816D9C
	0x037F4318 STP X0, X1, [X31 + 0x70]
	0x037F431C MOV X0, X20
	0x037F4320 BL 0x37F45E4
	0x037F4324 MOV X1, X0
	0x037F4328 ADD X0, X31, 0x70
	0x037F432C MOV X2, X31
	0x037F4330 BL 0x3816CC8
	0x037F4334 STP X0, X1, [X31 + 0x60]
	0x037F4338 MOV X0, X20
	0x037F433C BL 0x37F43E0
	0x037F4340 MOV X1, X31
	0x037F4344 MOV X22, X0
	0x037F4348 BL 0x32277A8
	0x037F434C TBNZ X0, 0x0, 0x37F4360
	0x037F4350 ADD X0, X31, 0x60
	0x037F4354 MOV X1, X22
	0x037F4358 MOV X2, X31
	0x037F435C BL 0x3816C10
	0x037F4360 MOV X0, X20
	0x037F4364 BL 0x37F4BA0
	0x037F4368 CBZ X0, 0x37F437C
	0x037F436C MOV X1, X0
	0x037F4370 ADD X0, X31, 0x60
	0x037F4374 MOV X2, X31
	0x037F4378 BL 0x3816918
	0x037F437C ADD X3, X31, 0x118
	0x037F4380 MOV X0, X20
	0x037F4384 MOV X1, X20
	0x037F4388 MOV X2, X21
	0x037F438C BL 0x37F4D50
	0x037F4390 CMP X26, X29
	0x037F4394 B.EQ 0x37F43B0
	0x037F4398 LDR W8, [X28 + 0x18]
	0x037F439C ADD X29, X29, 0x1
	0x037F43A0 ADD X27, X27, 0x48
	0x037F43A4 CMP X29, X8
	0x037F43A8 B.CC 0x37F4138
	0x037F43AC BL 0x1C16F28
	0x037F43B0 MOV X0, X19
	0x037F43B4 MOV X1, X31
	0x037F43B8 BL 0x38162A4
	0x037F43BC LDP X20, X19, [X31 + 0x170]
	0x037F43C0 LDP X22, X21, [X31 + 0x160]
	0x037F43C4 LDP X24, X23, [X31 + 0x150]
	0x037F43C8 LDP X26, X25, [X31 + 0x140]
	0x037F43CC LDP X28, X27, [X31 + 0x130]
	0x037F43D0 LDP X29, X30, [X31 + 0x120]
	0x037F43D4 ADD X31, X31, 0x180
	0x037F43D8 RET
	0x037F43DC BL 0x1C16F20
	0x037F43E0 STR X30, [X31 - 0x20]!
	0x037F43E4 STP X20, X19, [X31 + 0x10]
	0x037F43E8 ADRP X20, 0xBED000
	0x037F43EC LDRB W8, [X20 + 0x378]
	0x037F43F0 MOV X19, X0
	0x037F43F4 TBNZ X8, 0x0, 0x37F4430
	0x037F43F8 ADRP X0, 0x951000
	0x037F43FC LDR X0, [X0 + 0x408]
	0x037F4400 BL 0x1C16CF4
	0x037F4404 ADRP X0, 0x8FF000
	0x037F4408 LDR X0, [X0 + 0xAC8]
	0x037F440C BL 0x1C16CF4
	0x037F4410 ADRP X0, 0x955000
	0x037F4414 LDR X0, [X0 + 0x9C0]
	0x037F4418 BL 0x1C16CF4
	0x037F441C ADRP X0, 0x901000
	0x037F4420 LDR X0, [X0 + 0x3A0]
	0x037F4424 BL 0x1C16CF4
	0x037F4428 MOVZ W8, 0x1
	0x037F442C STRB W8, [X20 + 0x378]
	0x037F4430 LDR W8, [X19 + 0x4]
	0x037F4434 CMP W8, 0x1
	0x037F4438 B.NE 0x37F44F8
	0x037F443C LDR W8, [X19]
	0x037F4440 SUB W8, W8, 0x30
	0x037F4444 CMP W8, 0x15
	0x037F4448 B.HI 0x37F44F8
	0x037F444C MOVZ W9, 0x1
	0x037F4450 LSLV W8, W9, W8
	0x037F4454 MOVZ W9, 0x1ED
	0x037F4458 MOVK W9, 0x2D0000
	0x037F445C ANDS W31, W8, W9, 0x0
	0x037F4460 B.EQ 0x37F4474
	0x037F4464 MOV X0, X19
	0x037F4468 LDP X20, X19, [X31 + 0x10]
	0x037F446C LDR X30, [X31], #0x20
	0x037F4470 B 0x37F55F4
	0x037F4474 MOVZ W9, 0x12
	0x037F4478 MOVK W9, 0x120000
	0x037F447C ANDS W31, W8, W9, 0x0
	0x037F4480 B.EQ 0x37F44F8
	0x037F4484 ADRP X8, 0x8FF000
	0x037F4488 LDR X8, [X8 + 0xAC8]
	0x037F448C MOVZ W1, 0x2
	0x037F4490 LDR X0, [X8]
	0x037F4494 BL 0x1C16D6C
	0x037F4498 CBZ X0, 0x37F450C
	0x037F449C LDR W8, [X0 + 0x18]
	0x037F44A0 MOV X20, X0
	0x037F44A4 CBZ W8, 0x37F4508
	0x037F44A8 ADRP X8, 0x955000
	0x037F44AC LDR X8, [X8 + 0x9C0]
	0x037F44B0 MOV X0, X19
	0x037F44B4 LDR X8, [X8]
	0x037F44B8 STR X8, [X20 + 0x20]
	0x037F44BC BL 0x37F55F4
	0x037F44C0 LDR W8, [X20 + 0x18]
	0x037F44C4 CMP W8, 0x1
	0x037F44C8 B.LS 0x37F4508
	0x037F44CC STR X0, [X20 + 0x28]
	0x037F44D0 ADRP X8, 0x901000
	0x037F44D4 ADRP X9, 0x951000
	0x037F44D8 LDR X8, [X8 + 0x3A0]
	0x037F44DC LDR X9, [X9 + 0x408]
	0x037F44E0 MOV X1, X20
	0x037F44E4 LDP X20, X19, [X31 + 0x10]
	0x037F44E8 LDR X0, [X8]
	0x037F44EC LDR X2, [X9]
	0x037F44F0 LDR X30, [X31], #0x20
	0x037F44F4 B 0x228CFD8
	0x037F44F8 LDP X20, X19, [X31 + 0x10]
	0x037F44FC MOV X0, X31
	0x037F4500 LDR X30, [X31], #0x20
	0x037F4504 RET
	0x037F4508 BL 0x1C16F28
	0x037F450C BL 0x1C16F20
	0x037F4510 LDR W8, [X0 + 0x10]
	0x037F4514 UBFM W0, W8, 0x1F, 0x1F
	0x037F4518 RET
	0x037F451C SUB X31, X31, 0x20
	0x037F4520 STR X30, [X31 + 0x10]
	0x037F4524 LDR W8, [X0 + 0x4]
	0x037F4528 CMP W8, 0x1
	0x037F452C B.NE 0x37F459C
	0x037F4530 LDR W8, [X0]
	0x037F4534 SUB W8, W8, 0x30
	0x037F4538 CMP W8, 0x15
	0x037F453C B.HI 0x37F459C
	0x037F4540 MOVZ W9, 0x1
	0x037F4544 MOVZ W10, 0x1FF
	0x037F4548 LSLV W9, W9, W8
	0x037F454C MOVK W10, 0x3F0000
	0x037F4550 ANDS W31, W9, W10, 0x0
	0x037F4554 B.EQ 0x37F458C
	0x037F4558 LDR W8, [X0 + 0x10]
	0x037F455C TBNZ X8, 0x1F, 0x37F459C
	0x037F4560 LDR W9, [X0 + 0x14]
	0x037F4564 SUB W9, W9, W8
	0x037F4568 CMP W9, 0x0
	0x037F456C CINC W9, W9, LT
	0x037F4570 ADDS W1, W8, W9, 0x1, ASR
	0x037F4574 B.EQ 0x37F459C
	0x037F4578 STP X31, X31, [X31]
	0x037F457C ADD X0, X31, 0x0
	0x037F4580 MOV X2, X31
	0x037F4584 BL 0x37658B4
	0x037F4588 B 0x37F45A0
	0x037F458C CMP W8, 0x9
	0x037F4590 B.NE 0x37F459C
	0x037F4594 LDRB W8, [X0 + 0x34]
	0x037F4598 TBNZ X8, 0x6, 0x37F45B0
	0x037F459C STP X31, X31, [X31]
	0x037F45A0 LDP X0, X1, [X31]
	0x037F45A4 LDR X30, [X31 + 0x10]
	0x037F45A8 ADD X31, X31, 0x20
	0x037F45AC RET
	0x037F45B0 LDR W8, [X0 + 0x10]
	0x037F45B4 SUBS W1, W8, 0x1
	0x037F45B8 B.GE 0x37F4578
	0x037F45BC LDR W9, [X0 + 0x2C]
	0x037F45C0 LDRSW X8, [X0 + 0x14]
	0x037F45C4 MOVN X10, 0x0
	0x037F45C8 LSLV X9, X10, X9
	0x037F45CC ORN X9, X31, X9, 0x0
	0x037F45D0 CMP X9, X8
	0x037F45D4 B.LS 0x37F459C
	0x037F45D8 STP X31, X31, [X31]
	0x037F45DC ADD W1, W8, 0x1
	0x037F45E0 B 0x37F457C
	0x037F45E4 STR X30, [X31 - 0x20]!
	0x037F45E8 STP X20, X19, [X31 + 0x10]
	0x037F45EC ADRP X20, 0xBED000
	0x037F45F0 LDRB W8, [X20 + 0x37A]
	0x037F45F4 MOV X19, X0
	0x037F45F8 TBNZ X8, 0x0, 0x37F4610
	0x037F45FC ADRP X0, 0x955000
	0x037F4600 LDR X0, [X0 + 0x9C8]
	0x037F4604 BL 0x1C16CF4
	0x037F4608 MOVZ W8, 0x1
	0x037F460C STRB W8, [X20 + 0x37A]
	0x037F4610 LDR W8, [X19 + 0x4]
	0x037F4614 CMP W8, 0x1
	0x037F4618 B.NE 0x37F4644
	0x037F461C ADRP X9, 0x955000
	0x037F4620 LDR W8, [X19]
	0x037F4624 LDR X9, [X9 + 0x9C8]
	0x037F4628 SUB W10, W8, 0x30
	0x037F462C LDR X9, [X9]
	0x037F4630 SUB W8, W8, 0x40
	0x037F4634 CMP W8, 0x6
	0x037F4638 CCMP W10, 0x9, 0x0, CS
	0x037F463C CSEL X0, X9, X31, CC
	0x037F4640 B 0x37F4648
	0x037F4644 MOV X0, X31
	0x037F4648 LDP X20, X19, [X31 + 0x10]
	0x037F464C LDR X30, [X31], #0x20
	0x037F4650 RET
	0x037F4654 LDR W8, [X0 + 0x4]
	0x037F4658 CMP W8, W1
	0x037F465C B.NE 0x37F4670
	0x037F4660 LDR W8, [X0]
	0x037F4664 CMP W8, W2
	0x037F4668 CSET W0, EQ
	0x037F466C RET
	0x037F4670 MOV W0, W31
	0x037F4674 RET
	0x037F4678 STR X30, [X31 - 0x20]!
	0x037F467C STP X20, X19, [X31 + 0x10]
	0x037F4680 ADRP X20, 0xBED000
	0x037F4684 LDRB W8, [X20 + 0x375]
	0x037F4688 MOV X19, X0
	0x037F468C TBNZ X8, 0x0, 0x37F46BC
	0x037F4690 ADRP X0, 0x951000
	0x037F4694 LDR X0, [X0 + 0x350]

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Subtract X31, X31, 512
	014 Move X26, 0xBEF000
	015 Move X25, 0x957000
	016 Move X24, 0x957000
	017 Move X23, 0x957000
	018 Move X22, 0x957000
	019 Move X21, 0x957000
	020 Move X20, 0x957000
	021 Move X25, [X25+2152]
	022 Move W8, [X26+898]
	023 Move X24, [X24+2160]
	024 Move X23, [X23+2168]
	025 Move X22, [X22+2176]
	026 Move X21, [X21+2184]
	027 Move X20, [X20+2192]
	028 Move X27, X2
	029 Move W19, W1
	030 Move X28, X0
	031 Move TEMP, X8
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {106}
	035 Move X0, 0x957000
	036 Move X0, [X0+2200]
	037 Call 0x1C17CF4
	038 Move X0, 0x957000
	039 Move X0, [X0+2208]
	040 Call 0x1C17CF4
	041 Move X0, 0x957000
	042 Move X0, [X0+2216]
	043 Call 0x1C17CF4
	044 Move X0, 0x957000
	045 Move X0, [X0+2112]
	046 Call 0x1C17CF4
	047 Move X0, 0x957000
	048 Move X0, [X0+2224]
	049 Call 0x1C17CF4
	050 Move X0, 0x957000
	051 Move X0, [X0+2232]
	052 Call 0x1C17CF4
	053 Move X0, 0x957000
	054 Move X0, [X0+2240]
	055 Call 0x1C17CF4
	056 Move X0, 0x957000
	057 Move X0, [X0+2120]
	058 Call 0x1C17CF4
	059 Move X0, 0x957000
	060 Move X0, [X0+2160]
	061 Call 0x1C17CF4
	062 Move X0, 0x957000
	063 Move X0, [X0+2176]
	064 Call 0x1C17CF4
	065 Move X0, 0x957000
	066 Move X0, [X0+2192]
	067 Call 0x1C17CF4
	068 Move X0, 0x957000
	069 Move X0, [X0+2248]
	070 Call 0x1C17CF4
	071 Move X0, 0x957000
	072 Move X0, [X0+2256]
	073 Call 0x1C17CF4
	074 Move X0, 0x957000
	075 Move X0, [X0+2264]
	076 Call 0x1C17CF4
	077 Move X0, 0x957000
	078 Move X0, [X0+2272]
	079 Call 0x1C17CF4
	080 Move X0, 0x957000
	081 Move X0, [X0+2280]
	082 Call 0x1C17CF4
	083 Move X0, 0x957000
	084 Move X0, [X0+2288]
	085 Call 0x1C17CF4
	086 Move X0, 0x957000
	087 Move X0, [X0+2152]
	088 Call 0x1C17CF4
	089 Move X0, 0x957000
	090 Move X0, [X0+2184]
	091 Call 0x1C17CF4
	092 Move X0, 0x957000
	093 Move X0, [X0+2168]
	094 Call 0x1C17CF4
	095 Move X0, 0x90E000
	096 Move X0, [X0+1696]
	097 Call 0x1C17CF4
	098 Move X0, 0x902000
	099 Move X0, [X0+1136]
	100 Call 0x1C17CF4
	101 Move X0, 0x904000
	102 Move X0, [X0+3832]
	103 Call 0x1C17CF4
	104 Move W8, 1
	105 Move [X26+898], W8
	106 Move X0, [X25]
	107 NotImplemented "Instruction MOVI not yet implemented."
	108 Move [X31+248], W31
	109 Move [X31+240], X31
	110 Move [X31+224], X31
	111 Move [X31+192], V0
	112 Move [X31+200], V0
	113 Move [X31+336], V0
	114 Move [X31+344], V0
	115 Move [X31+368], V0
	116 Move [X31+376], V0
	117 Move [X31+25], V0
	118 Move [X31+256], V0
	119 Move [X31+264], V0
	120 Move [X31+288], V0
	121 Move [X31+296], V0
	122 Move [X31+20], V0
	123 Call 0x1C17F10
	124 Move X1, [X24]
	125 Move X24, X0
	126 Call List`1<HIDReportData>..ctor, X0
	127 Move X0, [X23]
	128 Call 0x1C17F10
	129 Move X1, [X22]
	130 Move [X31+168], X0
	131 Call List`1<HIDElementDescriptor>..ctor, X0
	132 Move X0, [X21]
	133 Call 0x1C17F10
	134 Move X1, [X20]
	135 Move X23, X0
	136 Call List`1<HIDCollectionDescriptor>..ctor, X0
	137 Add X22, X28, W19
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Add X8, X31, 256
	140 Move X26, 0x902000
	141 Add X10, X8, 64
	142 Move X26, [X26+1136]
	143 Add X11, X8, 72
	144 Move [X31+32], X10
	145 Move [X31+40], X27
	146 Add X10, X8, 56
	147 Move [X31+136], X10
	148 Move [X31+144], X11
	149 Or X11, X8, 15
	150 Add X10, X8, 16
	151 Add X9, X31, 440
	152 Move [X31+120], X10
	153 Move [X31+128], X11
	154 Add X10, X8, 40
	155 Add X8, X8, 48
	156 Move W25, W31
	157 Move TEMP, 0
	158 Not TEMP
	159 Move W29, TEMP
	160 Move [X31+104], X8
	161 Move [X31+112], X10
	162 Add X8, X9, 56
	163 Move [X31+96], X8
	164 Move [X31+16], X24
	165 Move [X31+24], X23
	166 Move [X31+8], X22
	167 Move W8, [X28]
	168 NotImplemented "Instruction CMP not yet implemented."
	169 NotImplemented "Instruction CSEL not yet implemented."
	170 And W8, W25, 252
	171 And W20, W25, 3
	172 NotImplemented "Instruction CMP not yet implemented."
	173 Add X19, X28, 1
	174 NotImplemented "Instruction CMP not yet implemented."
	175 NotImplemented "Instruction CMP not yet implemented."
	176 NotImplemented "Instruction CMP not yet implemented."
	177 NotImplemented "Instruction CMP not yet implemented."
	178 Move W0, W20
	179 Move X1, X19
	180 Move X2, X22
	181 Call HIDParser.ReadData, X0, X1, X2
	182 Move W1, W0
	183 Add X0, X31, 336
	184 Move X2, X31
	185 Call HIDItemStateLocal.SetUsage, X0, X1
	186 NotImplemented "Instruction CMP not yet implemented."
	187 NotImplemented "Instruction CMP not yet implemented."
	188 NotImplemented "Instruction CMP not yet implemented."
	189 NotImplemented "Instruction CMP not yet implemented."
	190 Move W0, W20
	191 Move X1, X19
	192 Move X2, X22
	193 Call HIDParser.ReadData, X0, X1, X2
	194 Move X2, [X26]
	195 Move W1, W0
	196 Add X0, X31, 440
	197 Move [X31+440], X31
	198 Call Nullable`1<Int32>..ctor, X0, X1
	199 Move X8, [X31+440]
	200 Move [X31+312], X8
	201 NotImplemented "Instruction CMP not yet implemented."
	202 NotImplemented "Instruction CMP not yet implemented."
	203 NotImplemented "Instruction CMP not yet implemented."
	204 Move W0, W20
	205 Move X1, X19
	206 Move X2, X22
	207 Call HIDParser.ReadData, X0, X1, X2
	208 Move X2, [X26]
	209 Move W1, W0
	210 Add X0, X31, 440
	211 Move [X31+440], X31
	212 Call Nullable`1<Int32>..ctor, X0, X1
	213 Move X8, [X31+440]
	214 Move [X31+352], X8
	215 NotImplemented "Instruction CMP not yet implemented."
	216 NotImplemented "Instruction CMP not yet implemented."
	217 NotImplemented "Instruction CMP not yet implemented."
	218 Move W0, W20
	219 Move X1, X19
	220 Move X2, X22
	221 Call HIDParser.ReadData, X0, X1, X2
	222 Move X2, [X26]
	223 Move W1, W0
	224 Add X0, X31, 440
	225 Move [X31+440], X31
	226 Call Nullable`1<Int32>..ctor, X0, X1
	227 Move X8, [X31+440]
	228 Move [X31+320], X8
	229 NotImplemented "Instruction CMP not yet implemented."
	230 NotImplemented "Instruction CMP not yet implemented."
	231 Move W0, W20
	232 Move X1, X19
	233 Move X2, X22
	234 Call HIDParser.ReadData, X0, X1, X2
	235 Move X2, [X26]
	236 Move W1, W0
	237 Add X0, X31, 440
	238 Move [X31+440], X31
	239 Call Nullable`1<Int32>..ctor, X0, X1
	240 Move X8, [X31+440]
	241 Move [X31+344], X8
	242 NotImplemented "Instruction CMP not yet implemented."
	243 NotImplemented "Instruction CMP not yet implemented."
	244 Move W0, W20
	245 Move X1, X19
	246 Move X2, X22
	247 Call HIDParser.ReadData, X0, X1, X2
	248 Move X2, [X26]
	249 Move W1, W0
	250 Add X0, X31, 440
	251 Move [X31+440], X31
	252 Call Nullable`1<Int32>..ctor, X0, X1
	253 Move X8, [X31+440]
	254 Move [X31+328], X8
	255 NotImplemented "Instruction CMP not yet implemented."
	256 NotImplemented "Instruction CMP not yet implemented."
	257 NotImplemented "Instruction CMP not yet implemented."
	258 Move W0, W20
	259 Move X1, X19
	260 Move X2, X22
	261 Call HIDParser.ReadData, X0, X1, X2
	262 Move X2, [X26]
	263 Move W1, W0
	264 Add X0, X31, 440
	265 Move [X31+440], X31
	266 Call Nullable`1<Int32>..ctor, X0, X1
	267 Move X8, [X31+440]
	268 Move [X31+296], X8
	269 NotImplemented "Instruction CMP not yet implemented."
	270 NotImplemented "Instruction CMP not yet implemented."
	271 NotImplemented "Instruction CMP not yet implemented."
	272 Add W31, W29, 1
	273 Compare X23, 0
	274 JumpIfEqual {704}
	275 Move X8, 0x957000
	276 Move X8, [X8+2272]
	277 Move X0, X23
	278 Move W1, W29
	279 Move X21, X19
	280 Move X2, [X8]
	281 Add X8, X31, 440
	282 Call List`1<HIDCollectionDescriptor>.get_Item, X0, X1
	283 Move W9, [X31+448]
	284 Move X8, [X31+440]
	285 Move [X31+248], W9
	286 Move X9, [X31+168]
	287 Move [X31+240], X8
	288 Compare X9, 0
	289 JumpIfEqual {704}
	290 Move X12, 0x957000
	291 Move W19, [X31+452]
	292 Move W8, [X31+460]
	293 Move W9, [X9+24]
	294 Move X10, [X31+240]
	295 Move W11, [X31+248]
	296 Move X12, [X12+2280]
	297 Subtract W9, W9, W8
	298 Add X2, X31, 440
	299 Move X0, X23
	300 Move X3, [X12]
	301 Move W1, W29
	302 Move [X31+440], X10
	303 Move [X31+448], W11
	304 Move [X31+452], W19
	305 Move [X31+456], W9
	306 Move [X31+460], W8
	307 Call List`1<HIDCollectionDescriptor>.set_Item, X0, X1, X2
	308 Add X0, X31, 336
	309 Move X1, X31
	310 Call HIDItemStateLocal.Reset, X0
	311 Move W29, W19
	312 Move X19, X21
	313 Move W0, W20
	314 Move X1, X19
	315 Move X2, X22
	316 Call HIDParser.ReadData, X0, X1, X2
	317 Move X2, [X26]
	318 Move W1, W0
	319 Add X0, X31, 440
	320 Move [X31+440], X31
	321 Call Nullable`1<Int32>..ctor, X0, X1
	322 Move X8, [X31+440]
	323 Move [X31+256], X8
	324 Move W0, W20
	325 Move X1, X19
	326 Move X2, X22
	327 Call HIDParser.ReadData, X0, X1, X2
	328 Move X2, [X26]
	329 Move W1, W0
	330 Add X0, X31, 440
	331 Move [X31+440], X31
	332 Call Nullable`1<Int32>..ctor, X0, X1
	333 Move X8, [X31+440]
	334 Move [X31+304], X8
	335 Move W0, W20
	336 Move X1, X19
	337 Move X2, X22
	338 Call HIDParser.ReadData, X0, X1, X2
	339 Move X2, [X26]
	340 Move W1, W0
	341 Add X0, X31, 440
	342 Move [X31+440], X31
	343 Call Nullable`1<Int32>..ctor, X0, X1
	344 Move X8, [X31+440]
	345 Move [X31+272], X8
	346 Move W1, 2
	347 Move W0, W20
	348 Move X1, X19
	349 Move X2, X22
	350 Call HIDParser.ReadData, X0, X1, X2
	351 Move X2, [X26]
	352 Move W1, W0
	353 Add X0, X31, 440
	354 Move [X31+440], X31
	355 Call Nullable`1<Int32>..ctor, X0, X1
	356 Move X8, [X31+440]
	357 Move [X31+264], X8
	358 Move W1, 1
	359 Move W0, W20
	360 Move X1, X19
	361 Move X2, X22
	362 Call HIDParser.ReadData, X0, X1, X2
	363 Move X2, [X26]
	364 Move W1, W0
	365 Add X0, X31, 440
	366 Move [X31+440], X31
	367 Call Nullable`1<Int32>..ctor, X0, X1
	368 Move X8, [X31+440]
	369 Move [X31+288], X8
	370 Move W1, 3
	371 Move X0, [X31+328]
	372 Move X2, X24
	373 Move X3, X31
	374 Move [X31+164], W1
	375 Call HIDReportData.FindOrAddReport, X0, X1, X2
	376 Compare X24, 0
	377 JumpIfEqual {704}
	378 Move [X31+80], W29
	379 Move [X31+84], W25
	380 Move [X31+88], X28
	381 Move X8, 0x956000
	382 Move X8, [X8+2264]
	383 Move W9, W0
	384 Move X0, X24
	385 Move W1, W9
	386 Move X2, [X8]
	387 Move [X31+60], W9
	388 Call List`1<HIDReportData>.get_Item, X0, X1
	389 Move [X31+48], X0
	390 Move X9, 0x90D000
	391 Move W8, [X31+328]
	392 Move X9, [X9+1696]
	393 Move X0, [X31+32]
	394 NotImplemented "Instruction CMP not yet implemented."
	395 Move X2, [X9]
	396 Move W8, 8
	397 NotImplemented "Instruction CSEL not yet implemented."
	398 NotImplemented "Instruction CMP not yet implemented."
	399 NotImplemented "Instruction CSEL not yet implemented."
	400 Move W1, 1
	401 Call Nullable`1<Int32>.GetValueOrDefault, X0, X1
	402 Move W21, W0
	403 Move W0, W20
	404 Move X1, X19
	405 Move X2, X22
	406 Move [X31+76], W20
	407 Move [X31+64], X19
	408 Call HIDParser.ReadData, X0, X1, X2
	409 NotImplemented "Instruction CMP not yet implemented."
	410 Move [X31+156], W21
	411 Move [X31+160], W0
	412 Move W28, W31
	413 Add X0, X31, 336
	414 Move W1, W28
	415 Move X2, X31
	416 Call HIDItemStateLocal.GetUsage, X0, X1
	417 Move W22, W0
	418 Add X0, X31, 256
	419 Add X2, X31, 336
	420 Move W1, W28
	421 Move X3, X31
	422 Call HIDItemStateGlobal.GetUsagePage, X0, X1, X2
	423 Move X25, 0x90D000
	424 Move X25, [X25+1696]
	425 Move W26, W0
	426 Move X0, [X31+136]
	427 Move W1, 8
	428 Move X2, [X25]
	429 Call Nullable`1<Int32>.GetValueOrDefault, X0, X1
	430 Move X2, [X25]
	431 Move W29, W0
	432 Move X0, [X31+144]
	433 Move W1, 1
	434 Call Nullable`1<Int32>.GetValueOrDefault, X0, X1
	435 Move X2, [X25]
	436 Move W19, W0
	437 Move X0, [X31+128]
	438 Move W1, W31
	439 Call Nullable`1<Int32>.GetValueOrDefault, X0, X1
	440 Move X2, [X25]
	441 Move W21, W0
	442 Move X0, [X31+120]
	443 Move W1, W31
	444 Call Nullable`1<Int32>.GetValueOrDefault, X0, X1
	445 Move W20, W0
	446 Add X0, X31, 256
	447 Move X1, X31
	448 Call HIDItemStateGlobal.GetPhysicalMin, X0
	449 Move W24, W0
	450 Add X0, X31, 256
	451 Move X1, X31
	452 Call HIDItemStateGlobal.GetPhysicalMax, X0
	453 Move X2, [X25]
	454 Move W27, W0
	455 Move X0, [X31+112]
	456 Move W1, W31
	457 Call Nullable`1<Int32>.GetValueOrDefault, X0, X1
	458 Move X2, [X25]
	459 Move W25, W0
	460 Move X0, [X31+104]
	461 Move W1, W31
	462 Call Nullable`1<Int32>.GetValueOrDefault, X0, X1
	463 Move X12, [X31+168]
	464 Move [X31+176], X31
	465 Move [X31+184], X31
	466 Compare X12, 0
	467 JumpIfEqual {704}
	468 Move V0, [X31+11]
	469 Move X10, 0x956000
	470 Move [X31+26], V0
	471 Move W8, [X12+28]
	472 Move X9, [X12+16]
	473 Move X10, [X10+2112]
	474 Add W8, W8, 1
	475 Move X10, [X10]
	476 Move [X12+28], W8
	477 Compare X9, 0
	478 JumpIfEqual {704}
	479 NotImplemented "Instruction LDRSW not yet implemented."
	480 Move W8, [X9+24]
	481 NotImplemented "Instruction CMP not yet implemented."
	482 And W8, W22, 0xFFFF
	483 Move W13, 72
	484 Add W10, W11, 1
	485 NotImplemented "Instruction MADD not yet implemented."
	486 Move [X12+24], W10
	487 Move [X9+32], W8
	488 Move [X9+36], W26
	489 Move W8, [X31+164]
	490 Move [X9+40], W0
	491 Move [X9+44], W25
	492 Move [X9+48], W21
	493 Move [X9+52], W20
	494 Move [X9+56], W24
	495 Move [X9+60], W27
	496 Move [X9+64], W8
	497 Move [X9+68], W31
	498 Move W8, [X31+160]
	499 Move [X9+72], W19
	500 Move [X9+76], W29
	501 Move [X9+80], W23
	502 Move [X9+84], W8
	503 Move V0, [X31+26]
	504 Move [X9+88], V0
	505 Move X9, [X10+32]
	506 Move V0, [X31+26]
	507 Add X1, X31, 440
	508 Move X9, [X9+192]
	509 Move X2, [X9+112]
	510 Move [X31+440], W8
	511 Move W8, [X31+164]
	512 Move [X31+448], W0
	513 Move X0, X12
	514 Move [X31+444], W26
	515 Move [X31+472], W8
	516 Move W8, [X31+160]
	517 Move [X31+452], W25
	518 Move [X31+456], W21
	519 Move [X31+460], W20
	520 Move [X31+492], W8
	521 Move X8, [X31+96]
	522 Move [X31+464], W24
	523 Move [X31+468], W27
	524 Move [X31+476], W31
	525 Move [X31+480], W19
	526 Move [X31+484], W29
	527 Move [X31+488], W23
	528 Move [X8], V0
	529 Call List`1<HIDElementDescriptor>.AddWithResize, X0, X1
	530 Move W8, [X31+156]
	531 Add W28, W28, 1
	532 Add W23, W29, W23
	533 NotImplemented "Instruction CMP not yet implemented."
	534 Move X8, 0x956000
	535 Move X8, [X8+2288]
	536 Move X24, [X31+16]
	537 Move W1, [X31+60]
	538 Move X2, [X31+48]
	539 Move X4, [X8]
	540 Move W3, W23
	541 Move X0, X24
	542 Call List`1<HIDReportData>.set_Item, X0, X1, X2
	543 Add X0, X31, 336
	544 Move X1, X31
	545 Call HIDItemStateLocal.Reset, X0
	546 Move X26, 0x901000
	547 Move X27, [X31+40]
	548 Move X28, [X31+88]
	549 Move X23, [X31+24]
	550 Move X22, [X31+8]
	551 Move W29, [X31+80]
	552 Move W25, [X31+84]
	553 Move X26, [X26+1136]
	554 Move W20, [X31+76]
	555 Move X19, [X31+64]
	556 Move W0, W20
	557 Move X1, X19
	558 Move X2, X22
	559 Call HIDParser.ReadData, X0, X1, X2
	560 Move X2, [X26]
	561 Move W1, W0
	562 Add X0, X31, 440
	563 Move [X31+440], X31
	564 Call Nullable`1<Int32>..ctor, X0, X1
	565 Move X8, [X31+440]
	566 Move [X31+280], X8
	567 Compare X23, 0
	568 JumpIfEqual {704}
	569 Move W21, [X23+24]
	570 Move W0, W20
	571 Move X1, X19
	572 Move X2, X22
	573 Move W27, W20
	574 Move X26, X19
	575 Call HIDParser.ReadData, X0, X1, X2
	576 Move W19, W0
	577 Add X0, X31, 256
	578 Add X2, X31, 336
	579 Move W1, W31
	580 Move X3, X31
	581 Call HIDItemStateGlobal.GetUsagePage, X0, X1, X2
	582 Move W20, W0
	583 Add X0, X31, 336
	584 Move W1, W31
	585 Move X2, X31
	586 Call HIDItemStateLocal.GetUsage, X0, X1
	587 Move X8, [X31+168]
	588 Compare X8, 0
	589 JumpIfEqual {704}
	590 Move X10, 0x956000
	591 Move W8, [X8+24]
	592 Move W11, [X23+28]
	593 Move X9, [X23+16]
	594 Move X10, [X10+2224]
	595 Add W11, W11, 1
	596 Move X10, [X10]
	597 Move [X23+28], W11
	598 Compare X9, 0
	599 JumpIfEqual {704}
	600 NotImplemented "Instruction LDRSW not yet implemented."
	601 Move W12, [X9+24]
	602 NotImplemented "Instruction CMP not yet implemented."
	603 Move W12, 24
	604 Add W10, W11, 1
	605 NotImplemented "Instruction MADD not yet implemented."
	606 Move [X23+24], W10
	607 Move [X9+32], W19
	608 Move [X9+36], W0
	609 Move [X9+40], W20
	610 Move [X9+44], W29
	611 Move [X9+48], W31
	612 Move [X9+52], W8
	613 Move X9, [X10+32]
	614 Add X1, X31, 440
	615 Move X9, [X9+192]
	616 Move X2, [X9+112]
	617 Move [X31+444], W0
	618 Move X0, X23
	619 Move [X31+440], W19
	620 Move [X31+448], W20
	621 Move [X31+452], W29
	622 Move [X31+456], W31
	623 Move [X31+460], W8
	624 Call List`1<HIDCollectionDescriptor>.AddWithResize, X0, X1
	625 Add X0, X31, 336
	626 Move X1, X31
	627 Call HIDItemStateLocal.Reset, X0
	628 Move X19, X26
	629 Move X26, 0x901000
	630 Move W20, W27
	631 Move X27, [X31+40]
	632 Move X26, [X26+1136]
	633 Move W29, W21
	634 Add X8, X28, 5
	635 Add X9, X19, W20
	636 NotImplemented "Instruction CMP not yet implemented."
	637 NotImplemented "Instruction CSEL not yet implemented."
	638 NotImplemented "Instruction CMP not yet implemented."
	639 Move X0, [X31+168]
	640 Compare X0, 0
	641 JumpIfEqual {704}
	642 Move X8, 0x956000
	643 Move X8, [X8+2120]
	644 Move X1, [X8]
	645 Call List`1<HIDElementDescriptor>.ToArray, X0
	646 Move [X27+32], X0
	647 Compare X23, 0
	648 JumpIfEqual {704}
	649 Move X8, 0x956000
	650 Move X8, [X8+2240]
	651 Move X22, 0x956000
	652 Move X19, 0x956000
	653 Move X21, 0x956000
	654 Move X1, [X8]
	655 Move X22, [X22+2232]
	656 Move X19, [X19+2208]
	657 Move X21, [X21+2200]
	658 Move X0, X23
	659 Add X20, X31, 440
	660 Call List`1<HIDCollectionDescriptor>.ToArray, X0
	661 Move [X27+40], X0
	662 Move X1, [X22]
	663 Add X8, X31, 440
	664 Move X0, X23
	665 Call List`1<HIDCollectionDescriptor>.GetEnumerator, X0
	666 Move V0, [X20]
	667 Move V1, [X20+16]
	668 Move X8, [X31+472]
	669 Move [X31+192], V0
	670 Move [X31+200], V1
	671 Move [X31+224], X8
	672 Move X1, [X19]
	673 Add X0, X31, 192
	674 Call Enumerator<HIDCollectionDescriptor>.MoveNext, X0
	675 Move TEMP, X0
	676 And TEMP, TEMP, 1
	677 Compare TEMP, 1
	678 JumpIfNotEqual {685}
	679 Move W8, [X31+208]
	680 NotImplemented "Instruction CMP not yet implemented."
	681 Move W8, [X31+220]
	682 Add W31, W8, 1
	683 NotImplemented "Instruction LDUR not yet implemented."
	684 Move [X27+8], D0
	685 Move X1, [X21]
	686 Add X0, X31, 192
	687 Call Enumerator<HIDCollectionDescriptor>.Dispose, X0
	688 Move W0, 1
	689 Add X31, X31, 512
	690 Move X20, [X31+80]
	691 Move X19, [X31+88]
	692 Move X22, [X31+64]
	693 Move X21, [X31+72]
	694 Move X24, [X31+48]
	695 Move X23, [X31+56]
	696 Move X26, [X31+32]
	697 Move X25, [X31+40]
	698 Move X28, [X31+16]
	699 Move X27, [X31+24]
	700 Move X29, [X31+96]
	701 Move X30, [X31+104]
	702 Return X0
	703 Move W0, W31
	704 Call 0x1C17F20
	705 Move X0, 0x909000
	706 Move X0, [X0+1880]
	707 Call 0x1C17D08
	708 Call 0x1C17F10
	709 Move X19, X0
	710 Move X0, 0x956000
	711 Move X0, [X0+2296]
	712 Call 0x1C17D08
	713 Move X1, X0
	714 Move X0, X19
	715 Move X2, X31
	716 Call NotImplementedException..ctor, X0, X1
	717 Move X0, 0x956000
	718 Move X0, [X0+2304]
	719 Call 0x1C17D08
	720 Move X1, X0
	721 Move X0, X19
	722 Call 0x1C17DEC
	723 NotImplemented "Instruction CMP not yet implemented."
	724 Move X20, X0
	725 Move X0, X20
	726 Call 0x3EB2AD0
	727 Move X19, [X0]
	728 Call 0x3EB2AE0
	729 Move X1, [X21]
	730 Add X0, X31, 192
	731 Call Enumerator<HIDCollectionDescriptor>.Dispose, X0
	732 Compare X19, 0
	733 JumpIfEqual {688}
	734 Move X0, X19
	735 Call 0x1C17F18
	736 Move X19, X31
	737 Move X20, X0
	738 Move X1, [X21]
	739 Add X0, X31, 192
	740 Call Enumerator<HIDCollectionDescriptor>.Dispose, X0
	741 Compare X19, 0
	742 JumpIfNotEqual {745}
	743 Move X0, X20
	744 Call 0x1D2D690
	745 Move X0, X19
	746 Call 0x1C17F18
	747 Call 0x1991590

Method: System.Int32 ReadData(System.Int32 itemSize, System.Byte* currentPtr, System.Byte* endPtr)

Disassembly:
	0x037F702C BL 0x1C16CF4
	0x037F7030 ADRP X0, 0x952000
	0x037F7034 LDR X0, [X0 + 0xAF0]
	0x037F7038 BL 0x1C16CF4
	0x037F703C ADRP X0, 0x952000
	0x037F7040 LDR X0, [X0 + 0xAE0]
	0x037F7044 BL 0x1C16CF4
	0x037F7048 ADRP X0, 0x924000
	0x037F704C LDR X0, [X0 + 0x270]
	0x037F7050 BL 0x1C16CF4
	0x037F7054 ADRP X0, 0x952000
	0x037F7058 LDR X0, [X0 + 0xAF8]
	0x037F705C BL 0x1C16CF4
	0x037F7060 MOVZ W8, 0x1
	0x037F7064 STRB W8, [X19 + 0x3A0]
	0x037F7068 ADRP X20, 0xBEA000
	0x037F706C ADRP X19, 0x952000
	0x037F7070 LDRB W8, [X20 + 0x39E]
	0x037F7074 LDR X19, [X19 + 0xAE0]
	0x037F7078 TBNZ X8, 0x0, 0x37F7090
	0x037F707C ADRP X0, 0x952000
	0x037F7080 LDR X0, [X0 + 0xAE0]
	0x037F7084 BL 0x1C16CF4
	0x037F7088 MOVZ W8, 0x1
	0x037F708C STRB W8, [X20 + 0x39E]
	0x037F7090 LDR X8, [X19]
	0x037F7094 LDR X8, [X8 + 0xB8]
	0x037F7098 LDR W9, [X8]
	0x037F709C SUBS W9, W9, 0x1
	0x037F70A0 B.LT 0x37F7170
	0x037F70A4 STR W9, [X8]
	0x037F70A8 B.NE 0x37F7170
	0x037F70AC ADRP X8, 0x950000
	0x037F70B0 LDR X8, [X8 + 0xB88]
	0x037F70B4 LDR X0, [X8]
	0x037F70B8 BL 0x1C16F10
	0x037F70BC ADRP X8, 0x952000
	0x037F70C0 LDR X8, [X8 + 0xAE8]
	0x037F70C4 MOV X1, X31
	0x037F70C8 MOV X3, X31
	0x037F70CC MOV X19, X0
	0x037F70D0 LDR X2, [X8]
	0x037F70D4 BL 0x2A769B4
	0x037F70D8 ADRP X8, 0x924000
	0x037F70DC LDR X8, [X8 + 0x270]
	0x037F70E0 LDR X0, [X8]
	0x037F70E4 LDR W8, [X0 + 0xE0]
	0x037F70E8 CBNZ W8, 0x37F70F0
	0x037F70EC BL 0x1C16DFC
	0x037F70F0 MOV X0, X19
	0x037F70F4 MOV X1, X31
	0x037F70F8 BL 0x376DD48
	0x037F70FC ADRP X20, 0x8FD000
	0x037F7100 LDR X20, [X20 + 0xE70]
	0x037F7104 LDR X0, [X20]
	0x037F7108 BL 0x1C16F10
	0x037F710C ADRP X8, 0x952000
	0x037F7110 LDR X8, [X8 + 0xAF8]
	0x037F7114 MOV X1, X31
	0x037F7118 MOV X3, X31
	0x037F711C MOV X19, X0
	0x037F7120 LDR X2, [X8]
	0x037F7124 BL 0x3314368
	0x037F7128 MOV X0, X19
	0x037F712C MOV X1, X31
	0x037F7130 BL 0x377033C
	0x037F7134 LDR X0, [X20]
	0x037F7138 BL 0x1C16F10
	0x037F713C ADRP X8, 0x952000
	0x037F7140 LDR X8, [X8 + 0xAF0]
	0x037F7144 MOV X1, X31
	0x037F7148 MOV X3, X31
	0x037F714C MOV X19, X0
	0x037F7150 LDR X2, [X8]
	0x037F7154 BL 0x3314368
	0x037F7158 MOV X0, X19
	0x037F715C MOV X1, X31
	0x037F7160 BL 0x3770860
	0x037F7164 LDP X20, X19, [X31 + 0x10]
	0x037F7168 LDR X30, [X31], #0x20
	0x037F716C B 0x37F717C
	0x037F7170 LDP X20, X19, [X31 + 0x10]
	0x037F7174 LDR X30, [X31], #0x20
	0x037F7178 RET
	0x037F717C SUB X31, X31, 0x60
	0x037F7180 STP X30, X23, [X31 + 0x30]
	0x037F7184 STP X22, X21, [X31 + 0x40]
	0x037F7188 STP X20, X19, [X31 + 0x50]
	0x037F718C ADRP X20, 0xBEA000
	0x037F7190 ADRP X19, 0x924000
	0x037F7194 LDRB W8, [X20 + 0x3A3]
	0x037F7198 LDR X19, [X19 + 0x270]
	0x037F719C TBNZ X8, 0x0, 0x37F71F0
	0x037F71A0 ADRP X0, 0x924000
	0x037F71A4 LDR X0, [X0 + 0xF10]
	0x037F71A8 BL 0x1C16CF4
	0x037F71AC ADRP X0, 0x924000
	0x037F71B0 LDR X0, [X0 + 0xF18]
	0x037F71B4 BL 0x1C16CF4
	0x037F71B8 ADRP X0, 0x924000
	0x037F71BC LDR X0, [X0 + 0xF20]
	0x037F71C0 BL 0x1C16CF4
	0x037F71C4 ADRP X0, 0x924000
	0x037F71C8 LDR X0, [X0 + 0x270]
	0x037F71CC BL 0x1C16CF4
	0x037F71D0 ADRP X0, 0x924000
	0x037F71D4 LDR X0, [X0 + 0xF30]
	0x037F71D8 BL 0x1C16CF4
	0x037F71DC ADRP X0, 0x924000
	0x037F71E0 LDR X0, [X0 + 0x628]
	0x037F71E4 BL 0x1C16CF4
	0x037F71E8 MOVZ W8, 0x1
	0x037F71EC STRB W8, [X20 + 0x3A3]
	0x037F71F0 LDR X0, [X19]
	0x037F71F4 STP X31, X31, [X31 + 0x18]
	0x037F71F8 STR X31, [X31 + 0x28]
	0x037F71FC ADRP X23, 0x924000
	0x037F7200 LDR W8, [X0 + 0xE0]
	0x037F7204 LDR X23, [X23 + 0xF30]
	0x037F7208 CBNZ W8, 0x37F7210

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CMP not yet implemented."
	004 NotImplemented "Instruction CMP not yet implemented."
	005 Move W0, [X1]
	006 Return X0
	007 Add X8, X1, 4
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Move W8, [X1+2]
	010 Move W9, [X1+3]
	011 NotImplemented "Instruction LDRH not yet implemented."
	012 Or W8, W9, W8
	013 NotImplemented "Instruction BFM not yet implemented."
	014 Return X0
	015 Add X8, X1, 2
	016 NotImplemented "Instruction CMP not yet implemented."
	017 NotImplemented "Instruction LDRH not yet implemented."
	018 Return X0
	019 Move W0, W31
	020 Return X0
	021 Move [X31-96], D15
	022 Move [X31-88], D14
	023 Move [X31+16], D13
	024 Move [X31+24], D12
	025 Move [X31+32], D11
	026 Move [X31+40], D10
	027 Move [X31+48], D9
	028 Move [X31+56], D8
	029 Move [X31+64], X30
	030 Move [X31+80], X20
	031 Move [X31+88], X19
	032 Move V10, V0
	033 Move S7, [X31+100]
	034 Move S0, [X31+104]
	035 Move V6, [X31+96]
	036 Move X20, 0xBE2000
	037 Move W8, [X20+1925]
	038 Subtract S3, S3, S10
	039 Subtract S4, S4, S1
	040 Subtract S5, S5, S2
	041 Subtract S6, S6, S10
	042 Subtract S7, S7, S1
	043 Subtract S0, S0, S2
	044 Move X19, X0
	045 Multiply S11, S4, S0
	046 Multiply S12, S5, S7
	047 Multiply S14, S5, S6
	048 Multiply S15, S3, S0
	049 Multiply S8, S3, S7
	050 Multiply S9, S4, S6
	051 Compare W8, 0
	052 JumpIfNotEqual {62}
	053 Move X0, 0x8FD000
	054 Move X0, [X0+1448]
	055 Move V13, V2
	056 Move [X31+76], S1
	057 Call 0x1C17CF4
	058 Move V1, [X31+76]
	059 Move V2, V13
	060 Move W8, 1
	061 Move [X20+1925], W8
	062 Move X8, 0x8FD000
	063 Move X8, [X8+1448]
	064 Subtract S13, S11, S12
	065 Subtract S12, S14, S15
	066 Subtract S11, S8, S9
	067 Move X0, [X8]
	068 Move W8, [X0+224]
	069 Compare W8, 0
	070 JumpIfNotEqual {76}
	071 Move V8, V2
	072 Move V9, V1
	073 Call 0x1C17DFC
	074 Move V1, V9
	075 Move V2, V8
	076 Move X8, -47235072
	077 Multiply S0, S13, S13
	078 Multiply S3, S12, S12
	079 Move V4, [X8+380]
	080 Add S0, S0, S3
	081 Multiply S3, S11, S11
	082 Add S0, S3, S0
	083 NotImplemented "Instruction FSQRT not yet implemented."
	084 NotImplemented "Instruction FCMP not yet implemented."
	085 NotImplemented "Instruction FDIV not yet implemented."
	086 NotImplemented "Instruction FDIV not yet implemented."
	087 NotImplemented "Instruction FDIV not yet implemented."
	088 Move X20, 0xBE2000
	089 Move W8, [X20+1923]
	090 Compare W8, 0
	091 JumpIfNotEqual {101}
	092 Move X0, 0x8FD000
	093 Move X0, [X0+1440]
	094 Move V8, V2
	095 Move V9, V1
	096 Call 0x1C17CF4
	097 Move V1, V9
	098 Move V2, V8
	099 Move W8, 1
	100 Move [X20+1923], W8
	101 Move X8, 0x8FD000
	102 Move X8, [X8+1440]
	103 Move X8, [X8]
	104 Move X8, [X8+184]
	105 Move S4, [X8]
	106 Move S3, [X8+4]
	107 Move V0, [X8+8]
	108 Move [X19], S4
	109 Move [X19+8], S3
	110 Multiply S5, S10, S4
	111 Multiply S4, S1, S3
	112 Multiply S3, S2, S0
	113 Add S1, S5, S4
	114 Add S1, S3, S1
	115 NotImplemented "Instruction FNEG not yet implemented."
	116 Move [X19+8], S0
	117 Move [X19+16], S1
	118 Move X20, [X31+80]
	119 Move X19, [X31+88]
	120 Move X30, [X31+64]
	121 Move D9, [X31+48]
	122 Move D8, [X31+56]
	123 Move D11, [X31+32]
	124 Move D10, [X31+40]
	125 Move D13, [X31+16]
	126 Move D12, [X31+24]
	127 Move D15, [X31+96]
	128 Move D14, [X31+104]
	129 Return X0

