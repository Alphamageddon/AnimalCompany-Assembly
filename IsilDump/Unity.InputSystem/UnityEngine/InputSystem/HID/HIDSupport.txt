Type: UnityEngine.InputSystem.HID.HIDSupport

Method: UnityEngine.InputSystem.Utilities.ReadOnlyArray`1<UnityEngine.InputSystem.HID.HIDSupport/HIDPageUsage> get_supportedHIDUsages()

Disassembly:
	0x037F7874 LDR X0, [X20]
	0x037F7878 LDR W8, [X0 + 0xE0]
	0x037F787C CBNZ W8, 0x37F7884
	0x037F7880 BL 0x1C16DFC
	0x037F7884 ADD X0, X31, 0x8
	0x037F7888 BL 0x37F799C
	0x037F788C LDP X20, X19, [X31 + 0x30]
	0x037F7890 LDP X30, X21, [X31 + 0x20]
	0x037F7894 AND W0, W0, 0x1
	0x037F7898 ADD X31, X31, 0x40
	0x037F789C RET
	0x037F78A0 SUB X31, X31, 0x50
	0x037F78A4 STR X30, [X31 + 0x20]
	0x037F78A8 STP X22, X21, [X31 + 0x30]
	0x037F78AC STP X20, X19, [X31 + 0x40]
	0x037F78B0 ADRP X22, 0xBEA000
	0x037F78B4 ADRP X21, 0x924000
	0x037F78B8 MOV X19, X8
	0x037F78BC LDRB W8, [X22 + 0x3A9]
	0x037F78C0 LDR X21, [X21 + 0x628]
	0x037F78C4 MOV X20, X0
	0x037F78C8 TBNZ X8, 0x0, 0x37F78EC
	0x037F78CC ADRP X0, 0x94D000
	0x037F78D0 LDR X0, [X0 + 0xF90]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xBEB000
	006 Move X21, 0x953000
	007 Move X19, 0x953000
	008 Move W8, [X20+923]
	009 Move X21, [X21+2728]
	010 Move X19, [X19+2736]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x953000
	016 Move X0, [X0+2728]
	017 Call 0x1C17CF4
	018 Move X0, 0x953000
	019 Move X0, [X0+2736]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+923], W8
	023 Move X8, [X21]
	024 Move X1, [X19]
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X8, [X8+184]
	028 Move X0, [X8]
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Call ReadOnlyArray`1<HIDPageUsage>.op_Implicit, X0
	032 Return X0

Method: System.Void set_supportedHIDUsages(UnityEngine.InputSystem.Utilities.ReadOnlyArray`1<UnityEngine.InputSystem.HID.HIDSupport/HIDPageUsage> value)

Disassembly:
	0x037F78D4 BL 0x1C16CF4
	0x037F78D8 ADRP X0, 0x924000
	0x037F78DC LDR X0, [X0 + 0x628]
	0x037F78E0 BL 0x1C16CF4
	0x037F78E4 MOVZ W8, 0x1
	0x037F78E8 STRB W8, [X22 + 0x3A9]
	0x037F78EC ADD X8, X31, 0x8
	0x037F78F0 MOV X0, X20
	0x037F78F4 STP X31, X31, [X31 + 0x8]
	0x037F78F8 STR X31, [X31 + 0x18]
	0x037F78FC BL 0x37F7A7C
	0x037F7900 LDR X0, [X21]
	0x037F7904 LDR W8, [X0 + 0xE0]
	0x037F7908 CBNZ W8, 0x37F7910
	0x037F790C BL 0x1C16DFC
	0x037F7910 ADD X0, X31, 0x8
	0x037F7914 BL 0x37F799C
	0x037F7918 TBZ X0, 0x0, 0x37F7980
	0x037F791C LDR X0, [X21]
	0x037F7920 LDR W8, [X0 + 0xE0]
	0x037F7924 CBNZ W8, 0x37F792C
	0x037F7928 BL 0x1C16DFC
	0x037F792C ADD X0, X31, 0x8
	0x037F7930 BL 0x37F7B5C
	0x037F7934 TBNZ X0, 0x0, 0x37F796C
	0x037F7938 LDR X0, [X21]
	0x037F793C LDR W8, [X0 + 0xE0]
	0x037F7940 CBNZ W8, 0x37F7948
	0x037F7944 BL 0x1C16DFC
	0x037F7948 ADD X0, X31, 0x8
	0x037F794C BL 0x37F7BD0
	0x037F7950 ADRP X8, 0x94D000
	0x037F7954 LDR X8, [X8 + 0xF90]
	0x037F7958 LDR X8, [X8]
	0x037F795C LDR X8, [X8 + 0xB8]
	0x037F7960 LDR W8, [X8]
	0x037F7964 CMP W0, W8
	0x037F7968 B.NE 0x37F7980
	0x037F796C LDR X8, [X31 + 0x18]
	0x037F7970 LDUR V0, [X31 + 0x8]
	0x037F7974 STR X8, [X19 + 0x10]
	0x037F7978 STR V0, [X19]
	0x037F797C B 0x37F7988
	0x037F7980 STP X31, X31, [X19]
	0x037F7984 STR X31, [X19 + 0x10]
	0x037F7988 LDP X20, X19, [X31 + 0x40]
	0x037F798C LDP X22, X21, [X31 + 0x30]
	0x037F7990 LDR X30, [X31 + 0x20]
	0x037F7994 ADD X31, X31, 0x50
	0x037F7998 RET
	0x037F799C STP X30, X21, [X31 - 0x20]!
	0x037F79A0 STP X20, X19, [X31 + 0x10]
	0x037F79A4 ADRP X21, 0xBEA000
	0x037F79A8 ADRP X20, 0x952000
	0x037F79AC LDRB W8, [X21 + 0x3AF]
	0x037F79B0 LDR X20, [X20 + 0xB28]
	0x037F79B4 MOV X19, X0
	0x037F79B8 TBNZ X8, 0x0, 0x37F79D0
	0x037F79BC ADRP X0, 0x952000
	0x037F79C0 LDR X0, [X0 + 0xB28]
	0x037F79C4 BL 0x1C16CF4
	0x037F79C8 MOVZ W8, 0x1
	0x037F79CC STRB W8, [X21 + 0x3AF]
	0x037F79D0 LDR X1, [X20]
	0x037F79D4 ADD X0, X19, 0x8
	0x037F79D8 LDP X20, X19, [X31 + 0x10]
	0x037F79DC LDP X30, X21, [X31], #0x20
	0x037F79E0 B 0x25C1504
	0x037F79E4 SUB X31, X31, 0x40
	0x037F79E8 STP X30, X21, [X31 + 0x20]
	0x037F79EC STP X20, X19, [X31 + 0x30]
	0x037F79F0 ADRP X21, 0xBEA000
	0x037F79F4 ADRP X20, 0x924000
	0x037F79F8 LDRB W8, [X21 + 0x3A7]
	0x037F79FC LDR X20, [X20 + 0x628]
	0x037F7A00 MOV X19, X0
	0x037F7A04 TBNZ X8, 0x0, 0x37F7A1C
	0x037F7A08 ADRP X0, 0x924000
	0x037F7A0C LDR X0, [X0 + 0x628]
	0x037F7A10 BL 0x1C16CF4
	0x037F7A14 MOVZ W8, 0x1
	0x037F7A18 STRB W8, [X21 + 0x3A7]
	0x037F7A1C ADD X8, X31, 0x8
	0x037F7A20 MOV X0, X19
	0x037F7A24 STP X31, X31, [X31 + 0x8]
	0x037F7A28 STR X31, [X31 + 0x18]
	0x037F7A2C BL 0x37F7A7C
	0x037F7A30 LDR X0, [X20]
	0x037F7A34 LDR W8, [X0 + 0xE0]
	0x037F7A38 CBNZ W8, 0x37F7A40
	0x037F7A3C BL 0x1C16DFC
	0x037F7A40 ADD X0, X31, 0x8
	0x037F7A44 BL 0x37F799C
	0x037F7A48 FMOV S0, W31
	0x037F7A4C FMOV S1, W31
	0x037F7A50 TBZ X0, 0x0, 0x37F7A6C
	0x037F7A54 LDR X0, [X20]
	0x037F7A58 LDR W8, [X0 + 0xE0]
	0x037F7A5C CBNZ W8, 0x37F7A64
	0x037F7A60 BL 0x1C16DFC
	0x037F7A64 ADD X0, X31, 0x8
	0x037F7A68 BL 0x37F7AF4
	0x037F7A6C LDP X20, X19, [X31 + 0x30]
	0x037F7A70 LDP X30, X21, [X31 + 0x20]
	0x037F7A74 ADD X31, X31, 0x40
	0x037F7A78 RET
	0x037F7A7C STP X30, X21, [X31 - 0x20]!
	0x037F7A80 STP X20, X19, [X31 + 0x10]
	0x037F7A84 ADRP X21, 0xBEA000
	0x037F7A88 LDRB W9, [X21 + 0x3A8]
	0x037F7A8C MOV X20, X0
	0x037F7A90 MOV X19, X8
	0x037F7A94 TBNZ X9, 0x0, 0x37F7AAC
	0x037F7A98 ADRP X0, 0x952000
	0x037F7A9C LDR X0, [X0 + 0xB30]
	0x037F7AA0 BL 0x1C16CF4
	0x037F7AA4 MOVZ W8, 0x1
	0x037F7AA8 STRB W8, [X21 + 0x3A8]
	0x037F7AAC LDR X0, [X20 + 0x20]
	0x037F7AB0 CBZ X0, 0x37F7AF0
	0x037F7AB4 LDR W8, [X0 + 0x44]
	0x037F7AB8 CBZ W8, 0x37F7ADC
	0x037F7ABC ADRP X9, 0x952000
	0x037F7AC0 LDR X9, [X9 + 0xB30]
	0x037F7AC4 SUB W1, W8, 0x1
	0x037F7AC8 LDR X2, [X9]
	0x037F7ACC BL 0x2E1216C
	0x037F7AD0 STP X20, X0, [X19]
	0x037F7AD4 STR X1, [X19 + 0x10]
	0x037F7AD8 B 0x37F7AE4
	0x037F7ADC STP X31, X31, [X19]
	0x037F7AE0 STR X31, [X19 + 0x10]
	0x037F7AE4 LDP X20, X19, [X31 + 0x10]
	0x037F7AE8 LDP X30, X21, [X31], #0x20
	0x037F7AEC RET
	0x037F7AF0 BL 0x1C16F20
	0x037F7AF4 STP X30, X21, [X31 - 0x20]!
	0x037F7AF8 STP X20, X19, [X31 + 0x10]
	0x037F7AFC ADRP X20, 0xBEA000

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+80], X30
	003 Move [X31+88], X27
	004 Move [X31+96], X26
	005 Move [X31+104], X25
	006 Move [X31+112], X24
	007 Move [X31+120], X23
	008 Move [X31+128], X22
	009 Move [X31+136], X21
	010 Move [X31+144], X20
	011 Move [X31+152], X19
	012 Move X20, 0xBEB000
	013 Move [X31+64], X0
	014 Move [X31+72], X1
	015 Move X19, 0x953000
	016 Move X23, 0x953000
	017 Move X24, 0x925000
	018 Move W8, [X20+924]
	019 Move X19, [X19+2744]
	020 Move X23, [X23+2728]
	021 Move X24, [X24+624]
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {49}
	026 Move X0, 0x953000
	027 Move X0, [X0+1944]
	028 Call 0x1C17CF4
	029 Move X0, 0x953000
	030 Move X0, [X0+2728]
	031 Call 0x1C17CF4
	032 Move X0, 0x953000
	033 Move X0, [X0+2752]
	034 Call 0x1C17CF4
	035 Move X0, 0x925000
	036 Move X0, [X0+624]
	037 Call 0x1C17CF4
	038 Move X0, 0x953000
	039 Move X0, [X0+2744]
	040 Call 0x1C17CF4
	041 Move X0, 0x94F000
	042 Move X0, [X0+112]
	043 Call 0x1C17CF4
	044 Move X0, 0x94F000
	045 Move X0, [X0+3608]
	046 Call 0x1C17CF4
	047 Move W8, 1
	048 Move [X20+924], W8
	049 Move X1, [X19]
	050 Add X0, X31, 64
	051 Move [X31+48], X31
	052 Move [X31+56], X31
	053 Call ReadOnlyArray`1<HIDPageUsage>.ToArray, X0
	054 Move X8, [X23]
	055 Move X8, [X8+184]
	056 Move [X8], X0
	057 Move X0, [X24]
	058 Move W8, [X0+224]
	059 Compare W8, 0
	060 JumpIfNotEqual {63}
	061 Call 0x1C17DFC
	062 Move X0, [X24]
	063 Move X8, [X0+184]
	064 Move X0, [X8]
	065 Compare X0, 0
	066 JumpIfEqual {163}
	067 Move X25, 0x94F000
	068 Move X26, 0x953000
	069 Move X27, 0x953000
	070 Move X25, [X25+3608]
	071 Move X26, [X26+2752]
	072 Move X27, [X27+1944]
	073 Move X1, X31
	074 Call InputManager.AddAvailableDevicesThatAreNowRecognized, X0
	075 Move W19, W31
	076 Move X0, [X24]
	077 Move W8, [X0+224]
	078 Compare W8, 0
	079 JumpIfNotEqual {81}
	080 Call 0x1C17DFC
	081 Move X0, X31
	082 Call InputSystem.get_devices
	083 Move X8, X1
	084 ShiftRight X8, 32
	085 And X8, X8, 0x7FFFFFFF
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Move [X31+48], X0
	088 Move [X31+56], X1
	089 Move X0, [X24]
	090 Move W8, [X0+224]
	091 Compare W8, 0
	092 JumpIfNotEqual {94}
	093 Call 0x1C17DFC
	094 Move X0, X31
	095 Call InputSystem.get_devices
	096 Move X2, [X25]
	097 Move [X31+48], X0
	098 Move [X31+56], X1
	099 Add X0, X31, 48
	100 Move W1, W19
	101 Call ReadOnlyArray`1<Object>.get_Item, X0, X1
	102 Compare X0, 0
	103 JumpIfEqual {150}
	104 Move X9, [X0]
	105 Move X8, [X26]
	106 Move X20, X0
	107 Move W11, [X9+304]
	108 Move W10, [X8+304]
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Move X9, [X9+200]
	111 Add X9, X9, X10
	112 NotImplemented "Instruction LDUR not yet implemented."
	113 NotImplemented "Instruction CMP not yet implemented."
	114 Move X8, [X23]
	115 Move X0, X20
	116 Move X1, X31
	117 Move X8, [X8+184]
	118 Move X21, [X8]
	119 Add X8, X31, 0
	120 Call HID.get_hidDescriptor, X0
	121 Move W22, [X31+12]
	122 Add X8, X31, 0
	123 Move X0, X20
	124 Move X1, X31
	125 Call HID.get_hidDescriptor, X0
	126 Move W8, [X31+8]
	127 Move X2, [X27]
	128 Move X0, X21
	129 NotImplemented "Instruction BFM not yet implemented."
	130 Move X1, X22
	131 Call Enumerable.Contains, X0, X1
	132 Move TEMP, X0
	133 And TEMP, TEMP, 1
	134 Compare TEMP, 1
	135 JumpIfEqual {150}
	136 Move X0, X20
	137 Move X1, X31
	138 Call InputControl.get_layout, X0
	139 Move X8, [X24]
	140 Move X20, X0
	141 Move W9, [X8+224]
	142 Compare W9, 0
	143 JumpIfNotEqual {146}
	144 Move X0, X8
	145 Call 0x1C17DFC
	146 Move X0, X20
	147 Move X1, X31
	148 Call InputSystem.RemoveLayout, X0
	149 Subtract W19, W19, 1
	150 Add W19, W19, 1
	151 Move X20, [X31+144]
	152 Move X19, [X31+152]
	153 Move X22, [X31+128]
	154 Move X21, [X31+136]
	155 Move X24, [X31+112]
	156 Move X23, [X31+120]
	157 Move X26, [X31+96]
	158 Move X25, [X31+104]
	159 Move X30, [X31+80]
	160 Move X27, [X31+88]
	161 Add X31, X31, 160
	162 Return 
	163 Call 0x1C17F20

Method: System.Void Initialize()

Disassembly:
	0x037F7B08 LDR X21, [X21 + 0x628]
	0x037F7B0C MOV X19, X0
	0x037F7B10 TBNZ X8, 0x0, 0x37F7B28
	0x037F7B14 ADRP X0, 0x924000
	0x037F7B18 LDR X0, [X0 + 0x628]
	0x037F7B1C BL 0x1C16CF4
	0x037F7B20 MOVZ W8, 0x1
	0x037F7B24 STRB W8, [X20 + 0x3BA]
	0x037F7B28 LDR X0, [X21]
	0x037F7B2C LDR W8, [X0 + 0xE0]
	0x037F7B30 CBNZ W8, 0x37F7B38
	0x037F7B34 BL 0x1C16DFC
	0x037F7B38 MOV X0, X19
	0x037F7B3C BL 0x37F89FC
	0x037F7B40 LDP S0, S1, [X0 + 0x4]
	0x037F7B44 LDP X20, X19, [X31 + 0x10]
	0x037F7B48 LDP X30, X21, [X31], #0x20
	0x037F7B4C RET
	0x037F7B50 STP X1, X2, [X0]
	0x037F7B54 STR X3, [X0 + 0x10]
	0x037F7B58 RET
	0x037F7B5C STP X30, X21, [X31 - 0x20]!
	0x037F7B60 STP X20, X19, [X31 + 0x10]
	0x037F7B64 ADRP X20, 0xBEA000
	0x037F7B68 ADRP X21, 0x924000
	0x037F7B6C LDRB W8, [X20 + 0x3C0]
	0x037F7B70 LDR X21, [X21 + 0x628]
	0x037F7B74 MOV X19, X0
	0x037F7B78 TBNZ X8, 0x0, 0x37F7B90
	0x037F7B7C ADRP X0, 0x924000
	0x037F7B80 LDR X0, [X0 + 0x628]
	0x037F7B84 BL 0x1C16CF4
	0x037F7B88 MOVZ W8, 0x1
	0x037F7B8C STRB W8, [X20 + 0x3C0]
	0x037F7B90 LDR X0, [X21]
	0x037F7B94 LDR W8, [X0 + 0xE0]
	0x037F7B98 CBNZ W8, 0x37F7BA0
	0x037F7B9C BL 0x1C16DFC
	0x037F7BA0 MOV X0, X19
	0x037F7BA4 BL 0x37F8998
	0x037F7BA8 SUB W8, W0, 0x1
	0x037F7BAC CMP W8, 0x2
	0x037F7BB0 B.CC 0x37F7BC0
	0x037F7BB4 CMP W0, 0x5
	0x037F7BB8 CSET W0, EQ
	0x037F7BBC B 0x37F7BC4
	0x037F7BC0 MOVZ W0, 0x1
	0x037F7BC4 LDP X20, X19, [X31 + 0x10]
	0x037F7BC8 LDP X30, X21, [X31], #0x20
	0x037F7BCC RET
	0x037F7BD0 STP X30, X21, [X31 - 0x20]!
	0x037F7BD4 STP X20, X19, [X31 + 0x10]
	0x037F7BD8 ADRP X20, 0xBEA000
	0x037F7BDC ADRP X21, 0x924000
	0x037F7BE0 LDRB W8, [X20 + 0x3C1]
	0x037F7BE4 LDR X21, [X21 + 0x628]
	0x037F7BE8 MOV X19, X0
	0x037F7BEC TBNZ X8, 0x0, 0x37F7C04
	0x037F7BF0 ADRP X0, 0x924000
	0x037F7BF4 LDR X0, [X0 + 0x628]
	0x037F7BF8 BL 0x1C16CF4
	0x037F7BFC MOVZ W8, 0x1
	0x037F7C00 STRB W8, [X20 + 0x3C1]
	0x037F7C04 LDR X0, [X21]
	0x037F7C08 LDR W8, [X0 + 0xE0]
	0x037F7C0C CBNZ W8, 0x37F7C14
	0x037F7C10 BL 0x1C16DFC
	0x037F7C14 MOV X0, X19
	0x037F7C18 BL 0x37F89FC
	0x037F7C1C LDR W0, [X0 + 0x24]
	0x037F7C20 LDP X20, X19, [X31 + 0x10]
	0x037F7C24 LDP X30, X21, [X31], #0x20
	0x037F7C28 RET
	0x037F7C2C STR X30, [X31 - 0x10]!
	0x037F7C30 LDR X9, [X0 + 0x20]
	0x037F7C34 STP X31, X31, [X8 + 0x10]
	0x037F7C38 STP X9, X0, [X8]
	0x037F7C3C CBZ X9, 0x37F7C5C
	0x037F7C40 LDR W11, [X9 + 0x54]
	0x037F7C44 LDR W9, [X9 + 0x44]
	0x037F7C48 SUB W10, W9, 0x1
	0x037F7C4C STR W9, [X8 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0xBEB000
	006 Move X20, 0x953000
	007 Move W8, [X19+925]
	008 Move X20, [X20+2760]
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {33}
	013 Move X0, 0x953000
	014 Move X0, [X0+2760]
	015 Call 0x1C17CF4
	016 Move X0, 0x953000
	017 Move X0, [X0+2728]
	018 Call 0x1C17CF4
	019 Move X0, 0x953000
	020 Move X0, [X0+2768]
	021 Call 0x1C17CF4
	022 Move X0, 0x952000
	023 Move X0, [X0+3872]
	024 Call 0x1C17CF4
	025 Move X0, 0x953000
	026 Move X0, [X0+2776]
	027 Call 0x1C17CF4
	028 Move X0, 0x925000
	029 Move X0, [X0+624]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X19+925], W8
	033 Move X0, [X20]
	034 Move W1, 3
	035 Call 0x1C17D6C
	036 Compare X0, 0
	037 JumpIfEqual {91}
	038 Move W8, [X0+24]
	039 Compare W8, 0
	040 JumpIfEqual {90}
	041 Move X9, 1
	042 NotImplemented "Instruction MOVK not yet implemented."
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move [X0+32], X9
	045 Move X9, 1
	046 NotImplemented "Instruction MOVK not yet implemented."
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move [X0+40], X9
	049 Move X8, 0x953000
	050 Move X8, [X8+2728]
	051 Move X9, 1
	052 NotImplemented "Instruction MOVK not yet implemented."
	053 Move [X0+48], X9
	054 Move X8, [X8]
	055 Move X9, 0x925000
	056 Move X21, 0x953000
	057 Move X20, 0x952000
	058 Move X8, [X8+184]
	059 Move X9, [X9+624]
	060 Move X19, 0x953000
	061 Move [X8], X0
	062 Move X0, [X9]
	063 Move W8, [X0+224]
	064 Move X21, [X21+2776]
	065 Move X20, [X20+3872]
	066 Move X19, [X19+2768]
	067 Compare W8, 0
	068 JumpIfNotEqual {70}
	069 Call 0x1C17DFC
	070 Move X3, [X21]
	071 Move X0, X31
	072 Move X1, X31
	073 Move X2, X31
	074 Call 0x220D738, X0, X1
	075 Move X0, [X20]
	076 Call 0x1C17F10
	077 Move X2, [X19]
	078 Move X1, X31
	079 Move X3, X31
	080 Move X19, X0
	081 Call InputDeviceFindControlLayoutDelegate..ctor, X0, X1, X2
	082 Move X0, X19
	083 Move X20, [X31+16]
	084 Move X19, [X31+24]
	085 Move X1, X31
	086 Move X30, [X31+32]
	087 Move X21, [X31+40]
	088 Call InputSystem.add_onFindLayoutForDevice, X0
	089 Return 
	090 Call 0x1C17F28
	091 Call 0x1C17F20

