Type: UnityEngine.InputSystem.InputActionAsset/<get_bindings>d__8

Method: System.Void .ctor(System.Int32 <>1__state)

Disassembly:
	0x03737890 LDP X22, X21, [X31 + 0xD0]
	0x03737894 LDP X24, X23, [X31 + 0xC0]
	0x03737898 LDR X30, [X31 + 0xB0]
	0x0373789C ADD X31, X31, 0xF0
	0x037378A0 RET
	0x037378A4 BL 0x1C16F20
	0x037378A8 BL 0x1C16F28
	0x037378AC SUB X31, X31, 0xF0
	0x037378B0 STR X30, [X31 + 0xC0]
	0x037378B4 STP X22, X21, [X31 + 0xD0]
	0x037378B8 STP X20, X19, [X31 + 0xE0]
	0x037378BC ADRP X22, 0xCA9000
	0x037378C0 LDRB W8, [X22 + 0xD1B]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move X0, X31
	009 Move [X20+16], W19
	010 Call Environment.get_CurrentManagedThreadId
	011 Move [X20+112], W0
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move X30, [X31+32]
	015 Return 

Method: System.Void System.IDisposable.Dispose()

Disassembly:
	0x0373AD64 ORR W8, W8, W9, 0x0

ISIL:
	001 Return 

Method: System.Boolean MoveNext()

Disassembly:
	0x0373AD68 STR W8, [X0 + 0xC8]
	0x0373AD6C RET
	0x0373AD70 SUB X31, X31, 0x110
	0x0373AD74 STP X29, X30, [X31 + 0xB0]
	0x0373AD78 STP X28, X27, [X31 + 0xC0]
	0x0373AD7C STP X26, X25, [X31 + 0xD0]
	0x0373AD80 STP X24, X23, [X31 + 0xE0]
	0x0373AD84 STP X22, X21, [X31 + 0xF0]
	0x0373AD88 STP X20, X19, [X31 + 0x100]
	0x0373AD8C ADRP X20, 0xCA6000
	0x0373AD90 LDRB W8, [X20 + 0xD16]
	0x0373AD94 MOV X19, X0
	0x0373AD98 TBNZ X8, 0x0, 0x373ADE0
	0x0373AD9C ADRP X0, 0xA0B000
	0x0373ADA0 LDR X0, [X0 + 0x2B8]
	0x0373ADA4 BL 0x1C16CF4
	0x0373ADA8 ADRP X0, 0xA0B000
	0x0373ADAC LDR X0, [X0 + 0x2C0]
	0x0373ADB0 BL 0x1C16CF4
	0x0373ADB4 ADRP X0, 0xA0B000
	0x0373ADB8 LDR X0, [X0 + 0x2C8]
	0x0373ADBC BL 0x1C16CF4
	0x0373ADC0 ADRP X0, 0xA0A000
	0x0373ADC4 LDR X0, [X0 + 0xF98]
	0x0373ADC8 BL 0x1C16CF4
	0x0373ADCC ADRP X0, 0xA0B000
	0x0373ADD0 LDR X0, [X0 + 0x2D0]
	0x0373ADD4 BL 0x1C16CF4
	0x0373ADD8 MOVZ W8, 0x1
	0x0373ADDC STRB W8, [X20 + 0xD16]
	0x0373ADE0 LDR X8, [X19 + 0x30]
	0x0373ADE4 CBZ X8, 0x373AE04
	0x0373ADE8 LDR X20, [X19 + 0x50]
	0x0373ADEC CBZ X20, 0x373AE0C
	0x0373ADF0 LDR X0, [X19 + 0x60]
	0x0373ADF4 STR X8, [X19 + 0x38]
	0x0373ADF8 CBZ X0, 0x373AE30
	0x0373ADFC LDR X9, [X0 + 0x18]
	0x0373AE00 B 0x373AE34
	0x0373AE04 STP X31, X31, [X19 + 0x38]
	0x0373AE08 B 0x373B32C
	0x0373AE0C LDR X0, [X19 + 0x60]
	0x0373AE10 CBZ X0, 0x373AF60
	0x0373AE14 ADD X8, X31, 0x80
	0x0373AE18 MOV X1, X19
	0x0373AE1C MOV X2, X31
	0x0373AE20 BL 0x374D72C
	0x0373AE24 LDP W20, W8, [X31 + 0x8C]
	0x0373AE28 STR W8, [X31 + 0x14]
	0x0373AE2C B 0x373AF68
	0x0373AE30 MOV X9, X31
	0x0373AE34 STR X9, [X19 + 0x40]
	0x0373AE38 STR W31, [X20 + 0xB0]
	0x0373AE3C LDR X8, [X8 + 0x18]
	0x0373AE40 STP W8, W31, [X20 + 0xB4]
	0x0373AE44 CBZ X0, 0x373AE64
	0x0373AE48 MOV X1, X31
	0x0373AE4C BL 0x374A7D0
	0x0373AE50 LDR X8, [X19 + 0x50]
	0x0373AE54 STR W0, [X20 + 0xBC]
	0x0373AE58 MOV X20, X8
	0x0373AE5C CBNZ X8, 0x373AE68
	0x0373AE60 B 0x373B318
	0x0373AE64 STR W31, [X20 + 0xBC]
	0x0373AE68 ADRP X8, 0xA0B000
	0x0373AE6C LDR X0, [X19 + 0x40]
	0x0373AE70 LDR W2, [X20 + 0xBC]
	0x0373AE74 LDR X8, [X8 + 0x2C8]
	0x0373AE78 MOV W1, W31
	0x0373AE7C LDR X3, [X8]
	0x0373AE80 BL 0x2179014
	0x0373AE84 TBZ X0, 0x0, 0x373B32C
	0x0373AE88 LDR X8, [X19 + 0x50]
	0x0373AE8C CBZ X8, 0x373B318
	0x0373AE90 LDR W1, [X8 + 0xBC]
	0x0373AE94 ADRP X8, 0xA0B000
	0x0373AE98 LDR X8, [X8 + 0x2D0]
	0x0373AE9C LDR X0, [X8]
	0x0373AEA0 BL 0x1C16D6C
	0x0373AEA4 LDR X8, [X19 + 0x50]
	0x0373AEA8 CBZ X8, 0x373B318
	0x0373AEAC ADRP X24, 0xA0B000
	0x0373AEB0 LDR X24, [X24 + 0x2C0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xCA7000
	005 Move W8, [X20+3331]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0xA0C000
	012 Move X0, [X0+256]
	013 Call 0x1C17CF4
	014 Move X0, 0xA0B000
	015 Move X0, [X0+4048]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3331], W8
	019 Move W8, [X19+16]
	020 Move X20, [X19+120]
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Compare W8, 0
	023 JumpIfNotEqual {75}
	024 Move TEMP, 0
	025 Not TEMP
	026 Move W8, TEMP
	027 Move [X19+16], W8
	028 Compare X20, 0
	029 JumpIfEqual {93}
	030 Move X8, 0xA0C000
	031 Move X0, [X20+24]
	032 Move X8, [X8+256]
	033 Move X1, [X8]
	034 Call ArrayHelpers.LengthSafe, X0
	035 Move [X19+128], W0
	036 Compare W0, 0
	037 JumpIfEqual {89}
	038 Move W8, W31
	039 Move [X19+132], W31
	040 Move W0, [X19+144]
	041 Move W8, [X19+148]
	042 Move TEMP, 0
	043 Not TEMP
	044 Move W9, TEMP
	045 Move [X19+16], W9
	046 Add W8, W8, 1
	047 Move [X19+148], W8
	048 Compare X20, 0
	049 JumpIfEqual {93}
	050 Move X9, [X20+24]
	051 Compare X9, 0
	052 JumpIfEqual {93}
	053 Move W10, [X9+24]
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Add X8, X9, W8
	056 Move X8, [X8+32]
	057 Compare X8, 0
	058 JumpIfEqual {93}
	059 Move X0, [X8+48]
	060 Move X8, 0xA0B000
	061 Move X8, [X8+4048]
	062 Move [X19+136], X0
	063 Move X1, [X8]
	064 Call 0x217C240, X0
	065 Move W8, W31
	066 Move [X19+144], W0
	067 Move [X19+148], W31
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move W0, [X19+128]
	070 Move W8, [X19+132]
	071 Move [X19+136], X31
	072 Add W8, W8, 1
	073 Move [X19+132], W8
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move W0, W31
	076 Move X9, [X19+136]
	077 Compare X9, 0
	078 JumpIfEqual {93}
	079 Move W10, [X9+24]
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Move W10, 88
	082 NotImplemented "Instruction SMADDL not yet implemented."
	083 Add X1, X8, 32
	084 Add X0, X19, 24
	085 Move W2, 88
	086 Call 0x3EB2B30
	087 Move W0, 1
	088 Move [X19+16], W0
	089 Move X20, [X31+16]
	090 Move X19, [X31+24]
	091 Move X30, [X31+32]
	092 Return X0
	093 Call 0x1C17F20
	094 Call 0x1C17F28

Method: UnityEngine.InputSystem.InputBinding System.Collections.Generic.IEnumerator<UnityEngine.InputSystem.InputBinding>.get_Current()

Disassembly:
	0x0373AEB4 MOV X20, X0
	0x0373AEB8 MOV W22, W31
	0x0373AEBC MOVZ W23, 0x4
	0x0373AEC0 LDRSW X9, [X8 + 0xBC]

ISIL:
	001 Add X1, X0, 24
	002 Move W2, 88
	003 Move X0, X8
	004 Call 0x3EB2AC0
	005 Return X0

Method: System.Void System.Collections.IEnumerator.Reset()

Disassembly:
	0x0373AEC4 SUB X21, X23, 0x4
	0x0373AEC8 CMP X21, X9
	0x0373AECC B.GE 0x373AF54
	0x0373AED0 LDR X8, [X19 + 0x40]
	0x0373AED4 CBZ X8, 0x373B318
	0x0373AED8 LDR W9, [X8 + 0x18]
	0x0373AEDC CMP X21, X9
	0x0373AEE0 B.CS 0x373B358
	0x0373AEE4 LDR X1, [X8, X23, LSL #3]
	0x0373AEE8 LDR X2, [X24]
	0x0373AEEC MOV X0, X20
	0x0373AEF0 BL 0x2176094
	0x0373AEF4 TBNZ X0, 0x0, 0x373AF44
	0x0373AEF8 LDR X8, [X19 + 0x40]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0x9BA000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0xA0C000
	011 Move X0, [X0+624]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x0373AEFC CBZ X8, 0x373B318
	0x0373AF00 LDR W9, [X8 + 0x18]
	0x0373AF04 CMP X21, X9
	0x0373AF08 B.CS 0x373B358
	0x0373AF0C CBZ X20, 0x373B318
	0x0373AF10 LDR X21, [X8, X23, LSL #3]
	0x0373AF14 CBZ X21, 0x373AF2C
	0x0373AF18 LDR X8, [X20]
	0x0373AF1C MOV X0, X21
	0x0373AF20 LDR X1, [X8 + 0x40]
	0x0373AF24 BL 0x1C16E00
	0x0373AF28 CBZ X0, 0x373B35C
	0x0373AF2C LDR W8, [X20 + 0x18]
	0x0373AF30 CMP W22, W8
	0x0373AF34 B.CS 0x373B358
	0x0373AF38 ADD X8, X20, W22, 0x3, SXTW
	0x0373AF3C ADD W22, W22, 0x1
	0x0373AF40 STR X21, [X8 + 0x20]
	0x0373AF44 LDR X8, [X19 + 0x50]
	0x0373AF48 ADD X23, X23, 0x1
	0x0373AF4C CBNZ X8, 0x373AEC0
	0x0373AF50 B 0x373B318
	0x0373AF54 STR X20, [X19 + 0x40]
	0x0373AF58 STR W22, [X8 + 0xBC]
	0x0373AF5C B 0x373B32C

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+96], X30
	003 Move [X31+104], X21
	004 Move [X31+112], X20
	005 Move [X31+120], X19
	006 Move X21, 0xCA7000
	007 Move X20, 0x9E5000
	008 Move W8, [X21+3332]
	009 Move X20, [X20+1248]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x9E5000
	016 Move X0, [X0+1248]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+3332], W8
	020 Add X1, X19, 24
	021 Add X0, X31, 8
	022 Move W2, 88
	023 Call 0x3EB2AC0
	024 Move X0, [X20]
	025 Add X1, X31, 8
	026 Call 0x1C17E04
	027 Move X20, [X31+112]
	028 Move X19, [X31+120]
	029 Move X30, [X31+96]
	030 Move X21, [X31+104]
	031 Add X31, X31, 128
	032 Return X0

Method: System.Collections.Generic.IEnumerator`1<UnityEngine.InputSystem.InputBinding> System.Collections.Generic.IEnumerable<UnityEngine.InputSystem.InputBinding>.GetEnumerator()

Disassembly:
	0x0373AF60 STR W31, [X31 + 0x14]
	0x0373AF64 MOV W20, W31
	0x0373AF68 LDR X8, [X19 + 0x28]
	0x0373AF6C CBZ X8, 0x373B318
	0x0373AF70 LDR W9, [X8 + 0x18]
	0x0373AF74 CMP W9, 0x1
	0x0373AF78 B.LT 0x373AFA8
	0x0373AF7C MOV W10, W31
	0x0373AF80 MOVI V0.2D, 0xFFFFFFFF
	0x0373AF84 CMP W10, W9
	0x0373AF88 B.CS 0x373B358
	0x0373AF8C ADD X11, X8, W10, 0x3, SXTW
	0x0373AF90 LDR X11, [X11 + 0x20]
	0x0373AF94 CBZ X11, 0x373B318
	0x0373AF98 ADD W10, W10, 0x1
	0x0373AF9C CMP W10, W9
	0x0373AFA0 STR V0, [X11 + 0xB]
	0x0373AFA4 B.LT 0x373AF84
	0x0373AFA8 LDR X8, [X19 + 0x30]
	0x0373AFAC CBZ X8, 0x373B318
	0x0373AFB0 LDR X9, [X8 + 0x18]
	0x0373AFB4 CMP W9, 0x1
	0x0373AFB8 B.LT 0x373B010
	0x0373AFBC MOV X21, X31
	0x0373AFC0 AND X22, X9, 0x0
	0x0373AFC4 MOVZ W23, 0x50
	0x0373AFC8 LDR W9, [X8 + 0x18]
	0x0373AFCC CMP X21, X9
	0x0373AFD0 B.CS 0x373B358
	0x0373AFD4 LDR X1, [X8, X23, LSL]
	0x0373AFD8 MOV X0, X19
	0x0373AFDC MOV W2, W31
	0x0373AFE0 BL 0x37376AC
	0x0373AFE4 CBZ X0, 0x373AFF4
	0x0373AFE8 LDR W8, [X0 + 0xB4]
	0x0373AFEC ADD W8, W8, 0x1
	0x0373AFF0 STR W8, [X0 + 0xB4]
	0x0373AFF4 ADD X21, X21, 0x1
	0x0373AFF8 CMP X22, X21

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xCA7000
	005 Move W8, [X20+3333]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xA0C000
	012 Move X0, [X0+64]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3333], W8
	016 Move W8, [X19+16]
	017 Add W31, W8, 2
	018 Move W20, [X19+112]
	019 Move X0, X31
	020 Call Environment.get_CurrentManagedThreadId
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move [X19+16], W31
	023 Move X8, 0xA0C000
	024 Move X8, [X8+64]
	025 Move X0, [X8]
	026 Call 0x1C17F10
	027 Move X1, X31
	028 Move X20, X0
	029 Call Object..ctor, X0
	030 Move X0, X31
	031 Move [X20+16], W31
	032 Call Environment.get_CurrentManagedThreadId
	033 Move [X20+112], W0
	034 Move X8, [X19+120]
	035 Move X19, X20
	036 Move [X20+120], X8
	037 Move X0, X19
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move X30, [X31+32]
	041 Return X0

Method: System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()

Disassembly:
	0x0373AFFC B.EQ 0x373B010

ISIL:
	001 Call <get_bindings>d__8.System.Collections.Generic.IEnumerable<UnityEngine.InputSystem.InputBinding>.GetEnumerator, X0
	002 Return X0

