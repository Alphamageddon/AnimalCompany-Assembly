Type: UnityEngine.InputSystem.InputControlExtensions/<GetAllButtonPresses>d__43

Method: System.Void .ctor(System.Int32 <>1__state)

Disassembly:
	0x0377668C RET
	0x03776690 BL 0x1C16F20
	0x03776694 STP X30, X19, [X31 - 0x10]!
	0x03776698 MOV X19, X0
	0x0377669C LDR X0, [X0]
	0x037766A0 CBZ X0, 0x37766B8
	0x037766A4 AND W1, W1, 0x1
	0x037766A8 BL 0x377222C
	0x037766AC LDR X0, [X19]
	0x037766B0 LDP X30, X19, [X31], #0x10
	0x037766B4 RET
	0x037766B8 BL 0x1C16F20
	0x037766BC STP X30, X23, [X31 - 0x30]!

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move X0, X31
	009 Move [X20+16], W19
	010 Call Environment.get_CurrentManagedThreadId
	011 Move [X20+32], W0
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move X30, [X31+32]
	015 Return 

Method: System.Void System.IDisposable.Dispose()

Disassembly:
	0x03777908 TBZ X0, 0x0, 0x3777970
	0x0377790C B.EQ 0x37779E8
	0x03777910 LDR X1, [X8]
	0x03777914 ADD X8, X31, 0x38
	0x03777918 ADD X0, X31, 0x118
	0x0377791C BL 0x243E22C
	0x03777920 ADRP X10, 0x9A7000
	0x03777924 LDP X8, X9, [X31 + 0x38]
	0x03777928 LDR X10, [X10 + 0x510]

ISIL:
	001 Move W8, [X0+16]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Add W31, W8, 3
	004 Move TEMP, 0
	005 Not TEMP
	006 Move W8, TEMP
	007 Move [X0+16], W8
	008 Move [X0+136], X31
	009 Return 

Method: System.Boolean MoveNext()

Disassembly:
	0x0377792C ADD X1, X31, 0x38
	0x03777930 STP X8, X9, [X31 + 0x38]
	0x03777934 LDR X0, [X10]
	0x03777938 BL 0x1C16E04
	0x0377793C ADRP X9, 0x97C000
	0x03777940 LDR W8, [X31 + 0x114]
	0x03777944 LDR X9, [X9 + 0x758]
	0x03777948 MOV X24, X0
	0x0377794C ADD X1, X31, 0x34
	0x03777950 STR W8, [X31 + 0x34]
	0x03777954 LDR X0, [X9]
	0x03777958 BL 0x1C16E04
	0x0377795C ADRP X8, 0x9A4000
	0x03777960 LDR X8, [X8 + 0xA98]
	0x03777964 MOV X2, X0
	0x03777968 MOV X1, X24
	0x0377796C B 0x3777A44
	0x03777970 B.EQ 0x3777A08
	0x03777974 LDR X1, [X8]
	0x03777978 ADD X8, X31, 0x38
	0x0377797C ADD X0, X31, 0x118
	0x03777980 BL 0x243E22C
	0x03777984 ADRP X10, 0x9A7000
	0x03777988 LDP X8, X9, [X31 + 0x38]
	0x0377798C LDR X10, [X10 + 0x510]
	0x03777990 ADD X1, X31, 0x38
	0x03777994 STP X8, X9, [X31 + 0x38]
	0x03777998 LDR X0, [X10]
	0x0377799C BL 0x1C16E04
	0x037779A0 ADRP X9, 0x97C000
	0x037779A4 LDR W8, [X31 + 0x114]
	0x037779A8 LDR X9, [X9 + 0x758]
	0x037779AC MOV X25, X0
	0x037779B0 ADD X1, X31, 0x34
	0x037779B4 STR W8, [X31 + 0x34]
	0x037779B8 LDR X0, [X9]
	0x037779BC BL 0x1C16E04
	0x037779C0 ADRP X8, 0x9CF000
	0x037779C4 LDR X8, [X8 + 0xDD8]
	0x037779C8 MOV X3, X0
	0x037779CC MOV X1, X22
	0x037779D0 MOV X2, X25
	0x037779D4 LDR X8, [X8]
	0x037779D8 MOV X4, X31
	0x037779DC MOV X0, X8
	0x037779E0 BL 0x3227C18
	0x037779E4 B 0x3777A54
	0x037779E8 LDR X1, [X8]
	0x037779EC ADD X8, X31, 0x38
	0x037779F0 ADD X0, X31, 0x118
	0x037779F4 BL 0x243E22C
	0x037779F8 LDP X0, X1, [X31 + 0x38]
	0x037779FC MOV X2, X31
	0x03777A00 BL 0x37577E0
	0x03777A04 B 0x3777A54
	0x03777A08 LDR X1, [X8]
	0x03777A0C ADD X8, X31, 0x38
	0x03777A10 ADD X0, X31, 0x118
	0x03777A14 BL 0x243E22C
	0x03777A18 ADRP X10, 0x9A7000
	0x03777A1C LDP X8, X9, [X31 + 0x38]
	0x03777A20 LDR X10, [X10 + 0x510]
	0x03777A24 ADD X1, X31, 0x38
	0x03777A28 STP X8, X9, [X31 + 0x38]
	0x03777A2C LDR X0, [X10]
	0x03777A30 BL 0x1C16E04
	0x03777A34 ADRP X8, 0x9CF000
	0x03777A38 LDR X8, [X8 + 0xDD0]
	0x03777A3C MOV X2, X0
	0x03777A40 MOV X1, X22
	0x03777A44 LDR X8, [X8]
	0x03777A48 MOV X0, X8
	0x03777A4C MOV X3, X31
	0x03777A50 BL 0x3227BD4
	0x03777A54 LDR W8, [X31 + 0x14]
	0x03777A58 STR X0, [X23]
	0x03777A5C TBNZ X8, 0x2, 0x3777A68
	0x03777A60 MOV X23, X31
	0x03777A64 B 0x3777A84
	0x03777A68 ADRP X8, 0x9CF000
	0x03777A6C LDR X8, [X8 + 0xDB8]
	0x03777A70 ADD X0, X31, 0x118
	0x03777A74 LDR X1, [X8]
	0x03777A78 ADD X8, X31, 0x38
	0x03777A7C BL 0x243E22C
	0x03777A80 LDR X23, [X31 + 0x78]
	0x03777A84 MOV X0, X23
	0x03777A88 MOV X1, X31
	0x03777A8C BL 0x32277A8
	0x03777A90 TBZ X0, 0x0, 0x3777AB0
	0x03777A94 ADRP X8, 0x9CF000
	0x03777A98 LDR X8, [X8 + 0xDB8]
	0x03777A9C ADD X0, X31, 0x118
	0x03777AA0 LDR X1, [X8]
	0x03777AA4 ADD X8, X31, 0x38
	0x03777AA8 BL 0x243E22C
	0x03777AAC LDR X23, [X31 + 0x70]
	0x03777AB0 MOV X0, X23
	0x03777AB4 MOV X1, X31
	0x03777AB8 BL 0x32277A8
	0x03777ABC MOV X22, X31
	0x03777AC0 TBNZ X0, 0x0, 0x3777B14
	0x03777AC4 LDR W8, [X31 + 0x114]
	0x03777AC8 ADDS W31, W8, 0x1
	0x03777ACC B.EQ 0x3777B10
	0x03777AD0 ADRP X9, 0x97C000
	0x03777AD4 LDR X9, [X9 + 0x758]
	0x03777AD8 ADD X1, X31, 0x38
	0x03777ADC STR W8, [X31 + 0x38]
	0x03777AE0 LDR X0, [X9]
	0x03777AE4 BL 0x1C16E04
	0x03777AE8 ADRP X8, 0x9CF000
	0x03777AEC LDR X8, [X8 + 0xDE0]
	0x03777AF0 MOV X2, X0
	0x03777AF4 MOV X1, X23
	0x03777AF8 MOV X3, X31
	0x03777AFC LDR X8, [X8]
	0x03777B00 MOV X0, X8
	0x03777B04 BL 0x3227BD4
	0x03777B08 MOV X22, X0
	0x03777B0C B 0x3777B14
	0x03777B10 MOV X22, X23
	0x03777B14 LDR X0, [X20]
	0x03777B18 MOV X1, X31
	0x03777B1C BL 0x32277A8
	0x03777B20 TBZ X0, 0x0, 0x3777B4C
	0x03777B24 ADRP X8, 0x9CF000
	0x03777B28 LDR X8, [X8 + 0xDB8]
	0x03777B2C ADD X0, X31, 0x118
	0x03777B30 LDR X1, [X8]
	0x03777B34 ADD X8, X31, 0x38
	0x03777B38 BL 0x243E22C
	0x03777B3C LDP X0, X1, [X31 + 0x48]
	0x03777B40 MOV X2, X31
	0x03777B44 BL 0x37577E0
	0x03777B48 STR X0, [X20]
	0x03777B4C CBNZ X22, 0x3777B5C
	0x03777B50 LDP X0, X1, [X19 + 0x30]
	0x03777B54 BL 0x3779848
	0x03777B58 MOV X22, X0
	0x03777B5C MOV X0, X21
	0x03777B60 MOV X1, X31
	0x03777B64 BL 0x32277A8

ISIL:
	001 Subtract X31, X31, 288
	002 Move [X31+256], X29
	003 Move [X31+264], X30
	004 Move [X31+272], X20
	005 Move [X31+280], X19
	006 Move X20, 0xC6A000
	007 Move W8, [X20+3894]
	008 Move X19, X0
	009 Move [X31+248], X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x9A5000
	015 Move X0, [X0+624]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3894], W8
	019 Add X8, X31, 248
	020 Move [X31+232], X31
	021 Move [X31+240], X8
	022 Move W8, [X19+16]
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Compare W8, 0
	025 JumpIfNotEqual {134}
	026 Move TEMP, 0
	027 Not TEMP
	028 Move W8, TEMP
	029 Add X0, X19, 40
	030 Move [X19+16], W8
	031 Move X1, X31
	032 Call InputEventPtr.get_type, X0
	033 Move W8, 0x4154
	034 NotImplemented "Instruction MOVK not yet implemented."
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move X8, [X31+248]
	037 Add X0, X8, 40
	038 Move X1, X31
	039 Call InputEventPtr.get_type, X0
	040 Move W8, 0x5441
	041 NotImplemented "Instruction MOVK not yet implemented."
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X8, [X31+248]
	044 Move V0, [X8+56]
	045 NotImplemented "Instruction FCMP not yet implemented."
	046 Move X8, 0x9A5000
	047 Move X8, [X8+624]
	048 Move X0, [X8]
	049 Move W8, [X0+224]
	050 Compare W8, 0
	051 JumpIfNotEqual {53}
	052 Call 0x1C17DFC
	053 Call InputSystem.get_settings
	054 Compare X0, 0
	055 JumpIfEqual {126}
	056 Move V0, [X0+64]
	057 Move X8, [X31+248]
	058 Move [X8+56], S0
	059 Move X0, [X8+40]
	060 Add X8, X31, 120
	061 Move W1, 1
	062 Move X2, X31
	063 Call InputControlExtensions.EnumerateControls, X0, X1, X2, V0
	064 Move X2, [X31+120]
	065 Move X1, [X31+128]
	066 Move W3, [X31+136]
	067 Move V0, [X31+140]
	068 NotImplemented "Instruction MOVI not yet implemented."
	069 Move [X31+80], V1
	070 Move [X31+88], V1
	071 Move [X31+48], V1
	072 Move [X31+56], V1
	073 Move [X31+16], V1
	074 Move [X31+24], V1
	075 Move [X31], V1
	076 Add X0, X31, 0
	077 Call InputEventControlEnumerator..ctor, X0, X1, X2, X3, V0
	078 Add X0, X31, 120
	079 Add X1, X31, 0
	080 Move W2, 112
	081 Call 0x3EB2AC0
	082 Move X19, [X31+248]
	083 Add X1, X31, 120
	084 Move W2, 112
	085 Add X0, X19, 72
	086 Call 0x3EB2AC0
	087 Move TEMP, 2
	088 Not TEMP
	089 Move W8, TEMP
	090 Move [X19+16], W8
	091 Add X0, X19, 72
	092 Call InputEventControlEnumerator.MoveNext, X0
	093 Move X19, [X31+248]
	094 Move TEMP, X0
	095 And TEMP, TEMP, 1
	096 Compare TEMP, 1
	097 JumpIfNotEqual {112}
	098 Move W9, [X19+64]
	099 Move X8, [X19+144]
	100 Compare W9, 0
	101 JumpIfEqual {109}
	102 Compare X8, 0
	103 JumpIfEqual {125}
	104 Move W9, [X8+160]
	105 Move TEMP, X9
	106 And TEMP, TEMP, 8
	107 Compare TEMP, 8
	108 JumpIfNotEqual {91}
	109 Move W0, 1
	110 Move [X19+24], X8
	111 Move [X19+16], W0
	112 Move W0, W31
	113 Move TEMP, 0
	114 Not TEMP
	115 Move W8, TEMP
	116 NotImplemented "Instruction MOVI not yet implemented."
	117 Move [X19+16], W8
	118 Move [X19+72], V0
	119 Move [X19+88], V0
	120 Move [X19+104], V0
	121 Move [X19+120], V0
	122 Move [X19+136], V0
	123 Move [X19+152], V0
	124 Move [X19+168], V0
	125 Call 0x1C17F20
	126 Call 0x1C17F20
	127 NotImplemented "Instruction CMP not yet implemented."
	128 Call 0x3EB2AD0
	129 Move X19, [X0]
	130 Move [X31+232], X19
	131 Call 0x3EB2AE0
	132 Compare X19, 0
	133 JumpIfNotEqual {141}
	134 Move W0, W31
	135 Move X20, [X31+272]
	136 Move X19, [X31+280]
	137 Move X29, [X31+256]
	138 Move X30, [X31+264]
	139 Add X31, X31, 288
	140 Return X0
	141 Add X8, X31, 232
	142 Add X0, X8, 8
	143 Call 0x1BD231C
	144 Move X0, X19
	145 Call 0x1C17F18
	146 Compare X19, 0
	147 JumpIfNotEqual {149}
	148 Call 0x1D2D690
	149 Move X8, [X31+248]
	150 Move W9, [X8+16]
	151 NotImplemented "Instruction CMP not yet implemented."
	152 Add W31, W9, 3
	153 Move TEMP, 0
	154 Not TEMP
	155 Move W9, TEMP
	156 Move [X8+16], W9
	157 Move [X8+136], X31
	158 Move X0, X19
	159 Call 0x1C17F18
	160 Call 0x1991590

Method: System.Void <>m__Finally1()

Disassembly:
	0x03777B68 TBZ X0, 0x0, 0x3777B80
	0x03777B6C MOV X0, X21
	0x03777B70 MOV X1, X22
	0x03777B74 MOV X2, X31

ISIL:
	001 Move TEMP, 0
	002 Not TEMP
	003 Move W8, TEMP
	004 Move [X0+16], W8
	005 Move [X0+136], X31
	006 Return 

Method: UnityEngine.InputSystem.InputControl System.Collections.Generic.IEnumerator<UnityEngine.InputSystem.InputControl>.get_Current()

Disassembly:
	0x03777B78 BL 0x321B938
	0x03777B7C B 0x3777B9C

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void System.Collections.IEnumerator.Reset()

Disassembly:
	0x03777B80 ADRP X8, 0x97C000
	0x03777B84 LDR X8, [X8 + 0xDD8]
	0x03777B88 MOV X0, X21
	0x03777B8C MOV X2, X22
	0x03777B90 MOV X3, X31
	0x03777B94 LDR X1, [X8]
	0x03777B98 BL 0x32274B8
	0x03777B9C MOV X21, X0
	0x03777BA0 ADD X0, X19, 0x40
	0x03777BA4 MOV X1, X31
	0x03777BA8 BL 0x3768760
	0x03777BAC TBNZ X0, 0x0, 0x3777C1C
	0x03777BB0 LDP X0, X1, [X19 + 0x40]
	0x03777BB4 BL 0x3779848

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0x97D000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0x9D0000
	011 Move X0, [X0+3464]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x03777BB8 ADRP X8, 0x987000
	0x03777BBC LDR X8, [X8 + 0xCD8]

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Collections.Generic.IEnumerator`1<UnityEngine.InputSystem.InputControl> System.Collections.Generic.IEnumerable<UnityEngine.InputSystem.InputControl>.GetEnumerator()

Disassembly:
	0x03777BC0 MOV X1, X0
	0x03777BC4 MOV X3, X31
	0x03777BC8 LDR X2, [X8]
	0x03777BCC MOV X0, X2
	0x03777BD0 BL 0x32274B8
	0x03777BD4 MOV X19, X0
	0x03777BD8 MOV X0, X21
	0x03777BDC MOV X1, X31
	0x03777BE0 BL 0x32277A8
	0x03777BE4 TBZ X0, 0x0, 0x3777BFC
	0x03777BE8 MOV X0, X21
	0x03777BEC MOV X1, X19
	0x03777BF0 MOV X2, X31
	0x03777BF4 BL 0x321B938
	0x03777BF8 B 0x3777C18
	0x03777BFC ADRP X8, 0x97C000
	0x03777C00 LDR X8, [X8 + 0xDD8]
	0x03777C04 MOV X0, X21
	0x03777C08 MOV X2, X19
	0x03777C0C MOV X3, X31
	0x03777C10 LDR X1, [X8]
	0x03777C14 BL 0x32274B8
	0x03777C18 MOV X21, X0
	0x03777C1C MOV X0, X21
	0x03777C20 ADD X31, X31, 0x210
	0x03777C24 LDP X20, X19, [X31 + 0x50]
	0x03777C28 LDP X22, X21, [X31 + 0x40]
	0x03777C2C LDP X24, X23, [X31 + 0x30]
	0x03777C30 LDP X26, X25, [X31 + 0x20]
	0x03777C34 LDP X28, X27, [X31 + 0x10]
	0x03777C38 LDP X29, X30, [X31], #0x60
	0x03777C3C RET
	0x03777C40 SUB X31, X31, 0xA0
	0x03777C44 STR X30, [X31 + 0x70]
	0x03777C48 STP X22, X21, [X31 + 0x80]
	0x03777C4C STP X20, X19, [X31 + 0x90]
	0x03777C50 ADRP X20, 0xC69000
	0x03777C54 LDRB W8, [X20 + 0xF3A]
	0x03777C58 MOV X19, X0
	0x03777C5C TBNZ X8, 0x0, 0x3777C98
	0x03777C60 ADRP X0, 0x9CF000
	0x03777C64 LDR X0, [X0 + 0xDE8]
	0x03777C68 BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xC6A000
	005 Move W8, [X20+3895]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x9D0000
	012 Move X0, [X0+3328]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3895], W8
	016 Move W8, [X19+16]
	017 Add W31, W8, 2
	018 Move W20, [X19+32]
	019 Move X0, X31
	020 Call Environment.get_CurrentManagedThreadId
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move [X19+16], W31
	023 Move X20, X19
	024 Move X8, 0x9D0000
	025 Move X8, [X8+3328]
	026 Move X0, [X8]
	027 Call 0x1C17F10
	028 Move X1, X31
	029 Move X20, X0
	030 Call Object..ctor, X0
	031 Move X0, X31
	032 Move [X20+16], W31
	033 Call Environment.get_CurrentManagedThreadId
	034 Move [X20+32], W0
	035 Move X8, [X19+48]
	036 Move X0, X20
	037 Move [X20+40], X8
	038 Move V0, [X19+60]
	039 Move [X20+56], S0
	040 Move W8, [X19+65]
	041 Move [X20+64], W8
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X30, [X31+32]
	045 Return X0

Method: System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()

Disassembly:
	0x03777C6C ADRP X0, 0x9CF000

ISIL:
	001 Call <GetAllButtonPresses>d__43.System.Collections.Generic.IEnumerable<UnityEngine.InputSystem.InputControl>.GetEnumerator, X0
	002 Return X0

