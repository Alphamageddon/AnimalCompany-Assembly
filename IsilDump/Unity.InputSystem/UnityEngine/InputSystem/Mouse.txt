Type: UnityEngine.InputSystem.Mouse

Method: UnityEngine.InputSystem.Controls.DeltaControl get_scroll()

Disassembly:
	0x0377F62C ADD X0, X31, 0x18
	0x0377F630 BL 0x2BC496C

ISIL:
	001 Move X0, [X0+416]
	002 Return X0

Method: System.Void set_scroll(UnityEngine.InputSystem.Controls.DeltaControl value)

Disassembly:
	0x0377F634 TBZ X0, 0x0, 0x377F654
	0x0377F638 LDR X1, [X21]

ISIL:
	001 Move [X0+416], X1
	002 Return 

Method: UnityEngine.InputSystem.Controls.ButtonControl get_leftButton()

Disassembly:
	0x0377F63C ADD X0, X31, 0x18
	0x0377F640 BL 0x2BC4998

ISIL:
	001 Move X0, [X0+424]
	002 Return X0

Method: System.Void set_leftButton(UnityEngine.InputSystem.Controls.ButtonControl value)

Disassembly:
	0x0377F644 CBZ X0, 0x377F6D4
	0x0377F648 MOV X1, X31

ISIL:
	001 Move [X0+424], X1
	002 Return 

Method: UnityEngine.InputSystem.Controls.ButtonControl get_middleButton()

Disassembly:
	0x0377F64C BL 0x377F584
	0x0377F650 B 0x377F628

ISIL:
	001 Move X0, [X0+432]
	002 Return X0

Method: System.Void set_middleButton(UnityEngine.InputSystem.Controls.ButtonControl value)

Disassembly:
	0x0377F654 ADRP X8, 0x9A0000
	0x0377F658 LDR X8, [X8 + 0x48]

ISIL:
	001 Move [X0+432], X1
	002 Return 

Method: UnityEngine.InputSystem.Controls.ButtonControl get_rightButton()

Disassembly:
	0x0377F65C ADD X0, X31, 0x18
	0x0377F660 LDR X1, [X8]

ISIL:
	001 Move X0, [X0+440]
	002 Return X0

Method: System.Void set_rightButton(UnityEngine.InputSystem.Controls.ButtonControl value)

Disassembly:
	0x0377F664 BL 0x2BC4968
	0x0377F668 ADRP X20, 0xC61000

ISIL:
	001 Move [X0+440], X1
	002 Return 

Method: UnityEngine.InputSystem.Controls.ButtonControl get_backButton()

Disassembly:
	0x0377F66C LDRB W8, [X20 + 0xF94]
	0x0377F670 CBNZ W8, 0x377F688

ISIL:
	001 Move X0, [X0+448]
	002 Return X0

Method: System.Void set_backButton(UnityEngine.InputSystem.Controls.ButtonControl value)

Disassembly:
	0x0377F674 ADRP X0, 0x99F000
	0x0377F678 LDR X0, [X0 + 0xFE0]

ISIL:
	001 Move [X0+448], X1
	002 Return 

Method: UnityEngine.InputSystem.Controls.ButtonControl get_forwardButton()

Disassembly:
	0x0377F67C BL 0x1C16CF4
	0x0377F680 MOVZ W8, 0x1

ISIL:
	001 Move X0, [X0+456]
	002 Return X0

Method: System.Void set_forwardButton(UnityEngine.InputSystem.Controls.ButtonControl value)

Disassembly:
	0x0377F684 STRB W8, [X20 + 0xF94]
	0x0377F688 ADRP X8, 0x99F000

ISIL:
	001 Move [X0+456], X1
	002 Return 

Method: UnityEngine.InputSystem.Controls.IntegerControl get_clickCount()

Disassembly:
	0x0377F68C LDR X8, [X8 + 0xFE0]
	0x0377F690 LDR X8, [X8]

ISIL:
	001 Move X0, [X0+464]
	002 Return X0

Method: System.Void set_clickCount(UnityEngine.InputSystem.Controls.IntegerControl value)

Disassembly:
	0x0377F694 LDR X8, [X8 + 0xB8]
	0x0377F698 LDRB W8, [X8]

ISIL:
	001 Move [X0+464], X1
	002 Return 

Method: UnityEngine.InputSystem.Mouse get_current()

Disassembly:
	0x0377F69C CBZ W8, 0x377F6B8
	0x0377F6A0 LDR X8, [X19]
	0x0377F6A4 MOV X0, X19
	0x0377F6A8 LDR X9, [X8 + 0x228]
	0x0377F6AC LDR X1, [X8 + 0x230]
	0x0377F6B0 BLR X9
	0x0377F6B4 B 0x377F6C0
	0x0377F6B8 CBZ X19, 0x377F6D8
	0x0377F6BC MOV W0, W31
	0x0377F6C0 STR W0, [X19 + 0xD8]
	0x0377F6C4 LDP X20, X19, [X31 + 0x40]
	0x0377F6C8 LDP X30, X21, [X31 + 0x30]
	0x0377F6CC ADD X31, X31, 0x50
	0x0377F6D0 RET
	0x0377F6D4 BL 0x1C16F20
	0x0377F6D8 BL 0x1C16F20
	0x0377F6DC B 0x377F6E4
	0x0377F6E0 B 0x377F6E4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xC62000
	005 Move X20, 0x99D000
	006 Move W8, [X19+3974]
	007 Move X20, [X20+1320]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x99D000
	013 Move X0, [X0+1320]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+3974], W8
	017 Move X8, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X8, [X8+184]
	021 Move X0, [X8]
	022 Move X30, [X31+32]
	023 Return X0

Method: System.Void set_current(UnityEngine.InputSystem.Mouse value)

Disassembly:
	0x0377F6E4 MOV X20, X0
	0x0377F6E8 CMP W1, 0x1
	0x0377F6EC B.NE 0x377F720
	0x0377F6F0 MOV X0, X20
	0x0377F6F4 BL 0x3EB1AD0
	0x0377F6F8 LDR X21, [X0]
	0x0377F6FC BL 0x3EB1AE0
	0x0377F700 ADRP X8, 0x9A0000
	0x0377F704 LDR X8, [X8 + 0x48]
	0x0377F708 ADD X0, X31, 0x18
	0x0377F70C LDR X1, [X8]
	0x0377F710 BL 0x2BC4968
	0x0377F714 CBZ X21, 0x377F668
	0x0377F718 MOV X0, X21
	0x0377F71C BL 0x1C16F18
	0x0377F720 MOV X21, X31
	0x0377F724 B 0x377F72C
	0x0377F728 MOV X20, X0
	0x0377F72C ADRP X8, 0x9A0000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xC62000
	006 Move X21, 0x99D000
	007 Move W8, [X20+3975]
	008 Move X21, [X21+1320]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x99D000
	015 Move X0, [X0+1320]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3975], W8
	019 Move X8, [X21]
	020 Move X8, [X8+184]
	021 Move [X8], X19
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X30, [X31+32]
	025 Move X21, [X31+40]
	026 Return 

Method: System.Void MakeCurrent()

Disassembly:
	0x0377F730 LDR X8, [X8 + 0x48]
	0x0377F734 LDR X1, [X8]
	0x0377F738 ADD X0, X31, 0x18
	0x0377F73C BL 0x2BC4968
	0x0377F740 CBNZ X21, 0x377F74C
	0x0377F744 MOV X0, X20
	0x0377F748 BL 0x1D2C690
	0x0377F74C MOV X0, X21
	0x0377F750 BL 0x1C16F18
	0x0377F754 BL 0x1990590
	0x0377F758 STP X30, X23, [X31 - 0x30]!
	0x0377F75C STP X22, X21, [X31 + 0x10]
	0x0377F760 STP X20, X19, [X31 + 0x20]
	0x0377F764 LDR X8, [X0]
	0x0377F768 CBZ X8, 0x377F7E8
	0x0377F76C LDR X8, [X8 + 0x140]
	0x0377F770 CBZ X8, 0x377F7E8
	0x0377F774 LDR W9, [X8 + 0x18]
	0x0377F778 MOV W21, W1
	0x0377F77C CMP W9, W1
	0x0377F780 B.LS 0x377F7EC
	0x0377F784 SXTW X22, W21
	0x0377F788 ADD X8, X8, X22, 0x4, LSL
	0x0377F78C STP X2, X3, [X8 + 0x20]
	0x0377F790 LDR X8, [X0]
	0x0377F794 MOV X20, X0
	0x0377F798 CBZ X8, 0x377F7E8
	0x0377F79C LDR X23, [X8 + 0x148]
	0x0377F7A0 CBZ X23, 0x377F7E8
	0x0377F7A4 MOV X19, X4
	0x0377F7A8 CBZ X4, 0x377F7C0
	0x0377F7AC LDR X8, [X23]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xC62000
	005 Move W8, [X20+4000]
	006 Move X19, X0
	007 Compare W8, 0
	008 JumpIfNotEqual {14}
	009 Move X0, 0x9C9000
	010 Move X0, [X0+960]
	011 Call 0x1C17CF4
	012 Move W8, 1
	013 Move [X20+4000], W8
	014 Move X8, 0x9C9000
	015 Move X8, [X8+960]
	016 Move X20, 0xC62000
	017 Move X8, [X8]
	018 Move X8, [X8+184]
	019 Move [X8], X19
	020 Move W8, [X20+3997]
	021 Compare W8, 0
	022 JumpIfNotEqual {28}
	023 Move X0, 0x99D000
	024 Move X0, [X0+1320]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X20+3997], W8
	028 Move X8, 0x99D000
	029 Move X8, [X8+1320]
	030 Move X8, [X8]
	031 Move X8, [X8+184]
	032 Move [X8], X19
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Return 

Method: System.Void OnAdded()

Disassembly:
	0x0377F7FC STP X30, X23, [X31 - 0x30]!
	0x0377F800 STP X22, X21, [X31 + 0x10]
	0x0377F804 STP X20, X19, [X31 + 0x20]
	0x0377F808 ADRP X22, 0xC61000
	0x0377F80C LDRB W8, [X22 + 0xF96]
	0x0377F810 MOV X19, X2
	0x0377F814 MOV X21, X1
	0x0377F818 MOV X20, X0
	0x0377F81C CBNZ W8, 0x377F840
	0x0377F820 ADRP X0, 0x9C7000
	0x0377F824 LDR X0, [X0 + 0xD78]
	0x0377F828 BL 0x1C16CF4
	0x0377F82C ADRP X0, 0x9C7000
	0x0377F830 LDR X0, [X0 + 0xD80]
	0x0377F834 BL 0x1C16CF4
	0x0377F838 MOVZ W8, 0x1
	0x0377F83C STRB W8, [X22 + 0xF96]
	0x0377F840 CBZ X21, 0x377F900
	0x0377F844 LDRSW X8, [X21 + 0x18]
	0x0377F848 ADRP X10, 0x9C7000
	0x0377F84C MOVN X9, 0xDB6C
	0x0377F850 LDR X23, [X20]
	0x0377F854 LDR X10, [X10 + 0xD78]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xC62000
	005 Move W8, [X20+3976]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x99D000
	012 Move X0, [X0+1320]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3976], W8
	016 Move W8, [X19+220]
	017 Move TEMP, X8
	018 And TEMP, TEMP, 16
	019 Compare TEMP, 16
	020 JumpIfNotEqual {29}
	021 Move X8, 0x99D000
	022 Move X8, [X8+1320]
	023 Move X8, [X8]
	024 Move X8, [X8+184]
	025 Move X9, [X8+8]
	026 Compare X9, 0
	027 JumpIfNotEqual {29}
	028 Move [X8+8], X19
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X30, [X31+32]
	032 Return 

Method: System.Void OnRemoved()

Disassembly:
	0x0377F858 MOVK X9, 0x92490000
	0x0377F85C MUL X9, X8, X9
	0x0377F860 UBFM X9, X9, 0x20, 0x3F
	0x0377F864 LDR X0, [X10]
	0x0377F868 ADD W8, W9, W8
	0x0377F86C SBFM W9, W8, 0x2, 0x1F
	0x0377F870 ADD W22, W9, W8, 0x1F, LSR
	0x0377F874 MOV W1, W22
	0x0377F878 BL 0x1C16D6C
	0x0377F87C CBZ X23, 0x377F900
	0x0377F880 STR X0, [X23 + 0x160]
	0x0377F884 LDR W8, [X21 + 0x18]
	0x0377F888 LDR X14, [X20]
	0x0377F88C ADD X9, X21, 0x20
	0x0377F890 CMP W8, 0x0
	0x0377F894 CSEL X8, X31, X9, EQ
	0x0377F898 CBZ X14, 0x377F900
	0x0377F89C MOV X11, X31
	0x0377F8A0 MOV X9, X31
	0x0377F8A4 BIC W10, W22, W22, 0x1F
	0x0377F8A8 MOVZ W12, 0x20
	0x0377F8AC MOVZ X13, 0x7
	0x0377F8B0 CMP X10, X9
	0x0377F8B4 B.EQ 0x377F904
	0x0377F8B8 LDR X14, [X14 + 0x160]
	0x0377F8BC CBZ X14, 0x377F900
	0x0377F8C0 LDR W15, [X14 + 0x18]
	0x0377F8C4 CMP X9, X15
	0x0377F8C8 B.CS 0x377F91C
	0x0377F8CC ADD X15, X8, X11, 0x20, ASR
	0x0377F8D0 LDRH W16, [X15 + 0x4]
	0x0377F8D4 LDRB W17, [X15 + 0x6]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Call Pointer.OnRemoved, X0
	006 Move X20, 0xC5B000
	007 Move W8, [X20+2071]
	008 Compare W8, 0
	009 JumpIfNotEqual {15}
	010 Move X0, 0x99D000
	011 Move X0, [X0+1320]
	012 Call 0x1C17CF4
	013 Move W8, 1
	014 Move [X20+2071], W8
	015 Move X20, 0x99D000
	016 Move X20, [X20+1320]
	017 Move X8, [X20]
	018 Move X8, [X8+184]
	019 Move X9, [X8]
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Move X19, 0xC62000
	022 Move W9, [X19+3997]
	023 Compare W9, 0
	024 JumpIfNotEqual {31}
	025 Move X0, X20
	026 Call 0x1C17CF4
	027 Move X8, [X20]
	028 Move W9, 1
	029 Move [X19+3997], W9
	030 Move X8, [X8+184]
	031 Move [X8], X31
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Return 

Method: System.Void WarpCursorPosition(UnityEngine.Vector2 position)

Disassembly:
	0x0377F954 ADRP X0, 0x974000
	0x0377F958 LDR X0, [X0 + 0x618]
	0x0377F95C BL 0x1C16CF4
	0x0377F960 ADRP X0, 0x99C000
	0x0377F964 LDR X0, [X0 + 0xD18]
	0x0377F968 BL 0x1C16CF4
	0x0377F96C ADRP X0, 0x9C8000
	0x0377F970 LDR X0, [X0 + 0xD8]
	0x0377F974 BL 0x1C16CF4
	0x0377F978 ADRP X0, 0x9C8000
	0x0377F97C LDR X0, [X0 + 0x478]
	0x0377F980 BL 0x1C16CF4
	0x0377F984 ADRP X0, 0x9C8000
	0x0377F988 LDR X0, [X0 + 0x480]
	0x0377F98C BL 0x1C16CF4
	0x0377F990 ADRP X0, 0x9C8000
	0x0377F994 LDR X0, [X0 + 0x488]
	0x0377F998 BL 0x1C16CF4
	0x0377F99C ADRP X0, 0x9A4000
	0x0377F9A0 LDR X0, [X0 + 0x8D0]
	0x0377F9A4 BL 0x1C16CF4
	0x0377F9A8 ADRP X0, 0x99D000
	0x0377F9AC LDR X0, [X0 + 0xD08]
	0x0377F9B0 BL 0x1C16CF4
	0x0377F9B4 ADRP X0, 0x9C8000
	0x0377F9B8 LDR X0, [X0 + 0x490]
	0x0377F9BC BL 0x1C16CF4
	0x0377F9C0 ADRP X0, 0x9C7000
	0x0377F9C4 LDR X0, [X0 + 0xAB8]
	0x0377F9C8 BL 0x1C16CF4
	0x0377F9CC ADRP X0, 0x9C7000
	0x0377F9D0 LDR X0, [X0 + 0xAD0]
	0x0377F9D4 BL 0x1C16CF4
	0x0377F9D8 ADRP X0, 0x9C8000
	0x0377F9DC LDR X0, [X0 + 0x498]
	0x0377F9E0 BL 0x1C16CF4
	0x0377F9E4 ADRP X0, 0x9C8000
	0x0377F9E8 LDR X0, [X0 + 0x4A0]
	0x0377F9EC BL 0x1C16CF4
	0x0377F9F0 ADRP X0, 0x9C6000
	0x0377F9F4 LDR X0, [X0 + 0x350]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+32], D9
	003 Move [X31+40], D8
	004 Move [X31+48], X30
	005 Move [X31+64], X22
	006 Move [X31+72], X21
	007 Move [X31+80], X20
	008 Move [X31+88], X19
	009 NotImplemented "Instruction MRS not yet implemented."
	010 Move X8, [X20+40]
	011 Move X22, 0xC62000
	012 Move X21, 0x9C9000
	013 Move V8, V1
	014 Move [X31+24], X8
	015 Move W8, [X22+3977]
	016 Move X21, [X21+968]
	017 Move V9, V0
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {28}
	023 Move X0, 0x9C9000
	024 Move X0, [X0+968]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X22+3977], W8
	028 Move V0, V9
	029 Move V1, V8
	030 Move X0, X31
	031 Call WarpMousePositionCommand.Create, X0
	032 Move X2, [X21]
	033 Move [X31+8], X0
	034 Move [X31+16], X1
	035 Add X1, X31, 8
	036 Move X0, X19
	037 Call InputDevice.ExecuteCommand, X0, X1
	038 Move X8, [X20+40]
	039 Move X9, [X31+24]
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move X20, [X31+80]
	042 Move X19, [X31+88]
	043 Move X22, [X31+64]
	044 Move X21, [X31+72]
	045 Move X30, [X31+48]
	046 Move D9, [X31+32]
	047 Move D8, [X31+40]
	048 Add X31, X31, 96
	049 Return 
	050 Call 0x3EB2B20

Method: System.Void FinishSetup()

Disassembly:
	0x0377F9F8 BL 0x1C16CF4
	0x0377F9FC ADRP X0, 0x9B8000
	0x0377FA00 LDR X0, [X0 + 0xB08]
	0x0377FA04 BL 0x1C16CF4
	0x0377FA08 ADRP X0, 0x9C8000
	0x0377FA0C LDR X0, [X0 + 0x4A8]
	0x0377FA10 BL 0x1C16CF4
	0x0377FA14 ADRP X0, 0x9C8000
	0x0377FA18 LDR X0, [X0 + 0x4B0]
	0x0377FA1C BL 0x1C16CF4
	0x0377FA20 ADRP X0, 0x9C8000
	0x0377FA24 LDR X0, [X0 + 0x4B8]
	0x0377FA28 BL 0x1C16CF4
	0x0377FA2C ADRP X0, 0x9C8000
	0x0377FA30 LDR X0, [X0 + 0x4C0]
	0x0377FA34 BL 0x1C16CF4
	0x0377FA38 ADRP X0, 0x9A0000
	0x0377FA3C LDR X0, [X0 + 0xF0]
	0x0377FA40 BL 0x1C16CF4
	0x0377FA44 ADRP X0, 0x9C7000
	0x0377FA48 LDR X0, [X0 + 0xA98]
	0x0377FA4C BL 0x1C16CF4
	0x0377FA50 ADRP X0, 0x9C8000
	0x0377FA54 LDR X0, [X0 + 0x470]
	0x0377FA58 BL 0x1C16CF4
	0x0377FA5C ADRP X0, 0x9C8000
	0x0377FA60 LDR X0, [X0 + 0x4C8]
	0x0377FA64 BL 0x1C16CF4
	0x0377FA68 ADRP X0, 0x9C8000
	0x0377FA6C LDR X0, [X0 + 0x4D0]
	0x0377FA70 BL 0x1C16CF4
	0x0377FA74 MOVZ W8, 0x1
	0x0377FA78 STRB W8, [X20 + 0xFA2]
	0x0377FA7C MOV X0, X19
	0x0377FA80 MOV X1, X31
	0x0377FA84 STR X31, [X31 + 0x548]
	0x0377FA88 STR X31, [X31 + 0x540]
	0x0377FA8C STR X31, [X31 + 0x538]
	0x0377FA90 STR X31, [X31 + 0x530]
	0x0377FA94 STR X31, [X31 + 0x528]
	0x0377FA98 STR X31, [X31 + 0x520]
	0x0377FA9C STR X31, [X31 + 0x518]
	0x0377FAA0 STR X31, [X31 + 0x510]
	0x0377FAA4 STR X31, [X31 + 0x508]
	0x0377FAA8 BL 0x377E60C
	0x0377FAAC MOVZ W1, 0x73
	0x0377FAB0 MOVZ W2, 0xF
	0x0377FAB4 MOVZ W3, 0x7
	0x0377FAB8 MOV X0, X19
	0x0377FABC MOV X4, X31
	0x0377FAC0 BL 0x3775784
	0x0377FAC4 LDR X1, [X21]
	0x0377FAC8 MOV X20, X0
	0x0377FACC ADD X0, X31, 0x550
	0x0377FAD0 MOV X2, X31
	0x0377FAD4 STR X31, [X31 + 0x558]
	0x0377FAD8 STR X31, [X31 + 0x550]
	0x0377FADC BL 0x3757420
	0x0377FAE0 CBZ X20, 0x3782274
	0x0377FAE4 ADRP X26, 0x99C000
	0x0377FAE8 ADRP X25, 0x9C8000
	0x0377FAEC ADRP X24, 0x9A0000
	0x0377FAF0 ADRP X23, 0x9C8000
	0x0377FAF4 ADRP X22, 0x9C6000
	0x0377FAF8 LDR X26, [X26 + 0xD18]
	0x0377FAFC LDR X25, [X25 + 0x4A0]
	0x0377FB00 LDR X24, [X24 + 0xF0]
	0x0377FB04 LDR X23, [X23 + 0x4C8]
	0x0377FB08 LDR X22, [X22 + 0x350]
	0x0377FB0C LDR V0, [X31 + 0x55]
	0x0377FB10 ADRP X28, 0x9C7000
	0x0377FB14 LDR X28, [X28 + 0xA98]
	0x0377FB18 ADD X0, X31, 0x550
	0x0377FB1C STR V0, [X20 + 0x2]
	0x0377FB20 LDR X1, [X21]
	0x0377FB24 MOV X2, X31
	0x0377FB28 STR X31, [X31 + 0x558]
	0x0377FB2C STR X31, [X31 + 0x550]
	0x0377FB30 BL 0x3757420
	0x0377FB34 LDR X0, [X31 + 0x550]
	0x0377FB38 LDR X1, [X31 + 0x558]
	0x0377FB3C MOV X2, X31
	0x0377FB40 BL 0x37577E0
	0x0377FB44 ADRP X8, 0xFFFFFFFFFD36F000
	0x0377FB48 LDR V0, [X8 + 0x158]
	0x0377FB4C STR X0, [X20 + 0x40]
	0x0377FB50 ADD X0, X31, 0x550
	0x0377FB54 MOV X2, X31
	0x0377FB58 STR D0, [X20 + 0x98]
	0x0377FB5C LDR X1, [X21]
	0x0377FB60 STR X31, [X31 + 0x558]
	0x0377FB64 STR X31, [X31 + 0x550]
	0x0377FB68 BL 0x3757420
	0x0377FB6C LDR V0, [X31 + 0x55]
	0x0377FB70 STUR V0, [X20 + 0x58]
	0x0377FB74 LDR X0, [X26]
	0x0377FB78 LDR W8, [X0 + 0xE0]
	0x0377FB7C CBNZ W8, 0x377FB84
	0x0377FB80 BL 0x1C16DFC
	0x0377FB84 ADRP X8, 0xFFFFFFFFFD36C000
	0x0377FB88 LDR V0, [X8 + 0xC2]
	0x0377FB8C ADD X0, X31, 0x538
	0x0377FB90 MOV X2, X31
	0x0377FB94 STR V0, [X20 + 0x1]
	0x0377FB98 LDR X1, [X25]
	0x0377FB9C STR X20, [X31 + 0x548]
	0x0377FBA0 BL 0x3757420
	0x0377FBA4 LDR X1, [X24]
	0x0377FBA8 ADD X0, X31, 0x528
	0x0377FBAC MOV X2, X31
	0x0377FBB0 BL 0x3757420
	0x0377FBB4 LDR X1, [X23]
	0x0377FBB8 ADD X0, X31, 0x518
	0x0377FBBC MOV X2, X31
	0x0377FBC0 BL 0x3757420

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X29, 0xC62000
	014 Move X21, 0x9C9000
	015 Move X22, 0x9C8000
	016 Move X28, 0x9C9000
	017 Move X23, 0x9C6000
	018 Move X27, 0x9C9000
	019 Move X26, 0x9C9000
	020 Move X25, 0x9C9000
	021 Move X24, 0x9C9000
	022 Move X20, 0x9C8000
	023 Move X21, [X21+976]
	024 Move X22, [X22+104]
	025 Move X28, [X28+984]
	026 Move X23, [X23+3608]
	027 Move X27, [X27+992]
	028 Move X26, [X26+1000]
	029 Move W8, [X29+3978]
	030 Move X25, [X25+1008]
	031 Move X24, [X24+1016]
	032 Move X20, [X20+88]
	033 Move X19, X0
	034 Move TEMP, X8
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfEqual {73}
	038 Move X0, 0x9C6000
	039 Move X0, [X0+3608]
	040 Call 0x1C17CF4
	041 Move X0, 0x9C8000
	042 Move X0, [X0+104]
	043 Call 0x1C17CF4
	044 Move X0, 0x9C8000
	045 Move X0, [X0+88]
	046 Call 0x1C17CF4
	047 Move X0, 0x9C9000
	048 Move X0, [X0+976]
	049 Call 0x1C17CF4
	050 Move X0, 0x9C9000
	051 Move X0, [X0+1008]
	052 Call 0x1C17CF4
	053 Move X0, 0x9C9000
	054 Move X0, [X0+1024]
	055 Call 0x1C17CF4
	056 Move X0, 0x9C9000
	057 Move X0, [X0+1016]
	058 Call 0x1C17CF4
	059 Move X0, 0x9C9000
	060 Move X0, [X0+984]
	061 Call 0x1C17CF4
	062 Move X0, 0x9C9000
	063 Move X0, [X0+1000]
	064 Call 0x1C17CF4
	065 Move X0, 0x9C8000
	066 Move X0, [X0+80]
	067 Call 0x1C17CF4
	068 Move X0, 0x9C9000
	069 Move X0, [X0+992]
	070 Call 0x1C17CF4
	071 Move W8, 1
	072 Move [X29+3978], W8
	073 Move X1, [X21]
	074 Move X2, [X22]
	075 Move X0, X19
	076 Call 0x21FD754, X0, X1
	077 Move [X19+416], X0
	078 Move X1, [X28]
	079 Move X2, [X23]
	080 Move X0, X19
	081 Call 0x21FD754, X0, X1
	082 Move [X19+424], X0
	083 Move X1, [X27]
	084 Move X2, [X23]
	085 Move X0, X19
	086 Call 0x21FD754, X0, X1
	087 Move [X19+432], X0
	088 Move X1, [X26]
	089 Move X2, [X23]
	090 Move X0, X19
	091 Call 0x21FD754, X0, X1
	092 Move [X19+440], X0
	093 Move X1, [X25]
	094 Move X2, [X23]
	095 Move X0, X19
	096 Call 0x21FD754, X0, X1
	097 Move [X19+456], X0
	098 Move X1, [X24]
	099 Move X2, [X23]
	100 Move X0, X19
	101 Call 0x21FD754, X0, X1
	102 Move [X19+448], X0
	103 Move X8, 0x9C8000
	104 Move X8, [X8+80]
	105 Move X2, [X20]
	106 Move X0, X19
	107 Move X1, [X8]
	108 Call 0x21FD754, X0, X1
	109 Move [X19+408], X0
	110 Move X8, 0x9C9000
	111 Move X8, [X8+1024]
	112 Move X2, [X20]
	113 Move X0, X19
	114 Move X1, [X8]
	115 Call 0x21FD754, X0, X1
	116 Move [X19+464], X0
	117 Move X0, X19
	118 Move X20, [X31+80]
	119 Move X19, [X31+88]
	120 Move X22, [X31+64]
	121 Move X21, [X31+72]
	122 Move X24, [X31+48]
	123 Move X23, [X31+56]
	124 Move X26, [X31+32]
	125 Move X25, [X31+40]
	126 Move X28, [X31+16]
	127 Move X27, [X31+24]
	128 Move X29, [X31+96]
	129 Move X30, [X31+104]

Method: System.Void OnNextUpdate()

Disassembly:
	0x0377FD64 BL 0x37840DC
	0x0377FD68 LDR X1, [X31 + 0x528]
	0x0377FD6C LDR X2, [X31 + 0x530]
	0x0377FD70 STR X0, [X31 + 0x1E0]
	0x0377FD74 MOV X0, X19
	0x0377FD78 MOV X3, X19
	0x0377FD7C BL 0x37842C0
	0x0377FD80 LDR X1, [X31 + 0x528]
	0x0377FD84 LDR X2, [X31 + 0x530]
	0x0377FD88 STR X0, [X31 + 0x1D8]
	0x0377FD8C MOV X0, X19
	0x0377FD90 MOV X3, X19
	0x0377FD94 BL 0x37844A4
	0x0377FD98 LDR X1, [X31 + 0x528]
	0x0377FD9C LDR X2, [X31 + 0x530]
	0x0377FDA0 STR X0, [X31 + 0x1F0]
	0x0377FDA4 MOV X0, X19
	0x0377FDA8 MOV X3, X19
	0x0377FDAC BL 0x3784688
	0x0377FDB0 LDR X1, [X31 + 0x528]
	0x0377FDB4 LDR X2, [X31 + 0x530]
	0x0377FDB8 STR X0, [X31 + 0x1E8]
	0x0377FDBC MOV X0, X19
	0x0377FDC0 MOV X3, X19
	0x0377FDC4 BL 0x378486C
	0x0377FDC8 LDR X1, [X31 + 0x528]
	0x0377FDCC LDR X2, [X31 + 0x530]
	0x0377FDD0 STR X0, [X31 + 0x350]
	0x0377FDD4 MOV X0, X19
	0x0377FDD8 MOV X3, X19
	0x0377FDDC BL 0x3784A50
	0x0377FDE0 LDR X1, [X31 + 0x528]
	0x0377FDE4 LDR X2, [X31 + 0x530]
	0x0377FDE8 STR X0, [X31 + 0x348]
	0x0377FDEC MOV X0, X19
	0x0377FDF0 MOV X3, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xC62000
	006 Move W8, [X20+3979]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x9C9000
	013 Move X0, [X0+1032]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+3979], W8
	017 Move X20, 0x9C9000
	018 Move X20, [X20+1032]
	019 Move X0, X19
	020 Call Pointer.OnNextUpdate, X0
	021 Move X21, 0xC5B000
	022 Move W8, [X21+1935]
	023 Move X19, [X19+416]
	024 Compare W8, 0
	025 JumpIfNotEqual {31}
	026 Move X0, 0x97D000
	027 Move X0, [X0+3848]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X21+1935], W8
	031 Move X8, 0x97D000
	032 Move X8, [X8+3848]
	033 Move X3, [X20]
	034 Move X0, X19
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X8, [X8]
	038 Move W1, W31
	039 Move X2, X31
	040 Move X8, [X8+184]
	041 Move S0, [X8]
	042 Move S1, [X8+4]
	043 Move X30, [X31+32]
	044 Move X21, [X31+40]
	045 Call InputState.Change, X0, X1, X2, X3
	046 Return 

Method: System.Void OnStateEvent(UnityEngine.InputSystem.LowLevel.InputEventPtr eventPtr)

Disassembly:
	0x0377FE7C MOV X0, X19
	0x0377FE80 MOV X3, X19
	0x0377FE84 BL 0x378578C
	0x0377FE88 LDR X1, [X31 + 0x528]
	0x0377FE8C LDR X2, [X31 + 0x530]
	0x0377FE90 STR X0, [X31 + 0x310]
	0x0377FE94 MOV X0, X19
	0x0377FE98 MOV X3, X19
	0x0377FE9C BL 0x3785970
	0x0377FEA0 LDR X1, [X31 + 0x528]
	0x0377FEA4 LDR X2, [X31 + 0x530]
	0x0377FEA8 STR X0, [X31 + 0x308]
	0x0377FEAC MOV X0, X19
	0x0377FEB0 MOV X3, X19
	0x0377FEB4 BL 0x3785B54
	0x0377FEB8 LDR X1, [X31 + 0x528]
	0x0377FEBC LDR X2, [X31 + 0x530]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, [X0+416]
	006 Move X19, X0
	007 Move X21, X1
	008 Call InputControl.GetDeviceIndex, X0
	009 Move X1, X31
	010 Call InputStateBuffers.GetFrontBufferForDevice, X0
	011 Move X1, X0
	012 Move X0, X20
	013 Move X2, X21
	014 Call InputControlExtensions.AccumulateValueInEvent, X0, X1, X2
	015 Move X0, X19
	016 Move X20, [X31+16]
	017 Move X19, [X31+24]
	018 Move X1, X21
	019 Move X30, [X31+32]
	020 Move X21, [X31+40]

Method: System.Void UnityEngine.InputSystem.LowLevel.IInputStateCallbackReceiver.OnNextUpdate()

Disassembly:
	0x0377FF0C MOV X0, X19

ISIL:
	001 Call Mouse.OnNextUpdate, X0
	002 Return 

Method: System.Void UnityEngine.InputSystem.LowLevel.IInputStateCallbackReceiver.OnStateEvent(UnityEngine.InputSystem.LowLevel.InputEventPtr eventPtr)

Disassembly:
	0x0377FF10 MOV X3, X19

ISIL:
	001 Call Mouse.OnStateEvent, X0, X1
	002 Return 

Method: System.Void .ctor()

Disassembly:
	0x0377FF14 BL 0x37862E4
	0x0377FF18 LDR X1, [X31 + 0x528]
	0x0377FF1C LDR X2, [X31 + 0x530]
	0x0377FF20 STR X0, [X31 + 0x2E0]
	0x0377FF24 MOV X0, X19
	0x0377FF28 MOV X3, X19
	0x0377FF2C BL 0x37864C8
	0x0377FF30 LDR X1, [X31 + 0x528]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call InputControl..ctor, X0
	005 Move TEMP, 0
	006 Not TEMP
	007 Move W8, TEMP
	008 Move [X19+224], X31
	009 Move [X19+232], W8
	010 Move X30, [X31+16]
	011 Move X19, [X31+24]
	012 Return 

