Type: UnityEngine.InputSystem.HumiditySensor

Method: UnityEngine.InputSystem.Controls.AxisControl get_relativeHumidity()

Disassembly:
	0x037C0434 MOV W1, W31
	0x037C0438 LDR X2, [X26]

ISIL:
	001 Move X0, [X0+368]
	002 Return X0

Method: System.Void set_relativeHumidity(UnityEngine.InputSystem.Controls.AxisControl value)

Disassembly:
	0x037C043C STR V0, [X31]
	0x037C0440 BL 0x24FDB3C

ISIL:
	001 Move [X0+368], X1
	002 Return 

Method: UnityEngine.InputSystem.HumiditySensor get_current()

Disassembly:
	0x037C0444 CBZ X0, 0x37C0968
	0x037C0448 ADRP X8, 0x95B000
	0x037C044C LDR X8, [X8 + 0xD18]
	0x037C0450 LDR W20, [X0 + 0x14]
	0x037C0454 LDR X8, [X8]
	0x037C0458 LDR W9, [X8 + 0xE0]
	0x037C045C CBNZ W9, 0x37C0468
	0x037C0460 MOV X0, X8
	0x037C0464 BL 0x1C16DFC
	0x037C0468 LDR X8, [X19 + 0x1A0]
	0x037C046C CBZ X8, 0x37C0968
	0x037C0470 LDR W8, [X8 + 0x14]
	0x037C0474 LDP X9, X10, [X19 + 0x1A8]
	0x037C0478 MOV X0, X22
	0x037C047C MOV X1, X31
	0x037C0480 ADD X20, X20, X21
	0x037C0484 ADD X21, X8, X21
	0x037C0488 STP X9, X10, [X31]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xC22000
	005 Move X20, 0x988000
	006 Move W8, [X19+420]
	007 Move X20, [X20+3952]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x988000
	013 Move X0, [X0+3952]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+420], W8
	017 Move X8, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X8, [X8+184]
	021 Move X0, [X8]
	022 Move X30, [X31+32]
	023 Return X0

Method: System.Void set_current(UnityEngine.InputSystem.HumiditySensor value)

Disassembly:
	0x037C048C UBFM X28, X10, 0x20, 0x3F
	0x037C0490 BL 0x3802C74
	0x037C0494 CMP W0, 0x38
	0x037C0498 B.NE 0x37C0508
	0x037C049C MOV X0, X22
	0x037C04A0 MOV X1, X31
	0x037C04A4 BL 0x3807298
	0x037C04A8 LDR X8, [X0 + 0x30]
	0x037C04AC LDP V2, V0, [X0 + 0x10]
	0x037C04B0 LDR V1, [X0]
	0x037C04B4 STR X8, [X31 + 0x90]
	0x037C04B8 STP V2, V0, [X31 + 0x70]
	0x037C04BC STR V1, [X31 + 0x6]
	0x037C04C0 B 0x37C0548
	0x037C04C4 LDR X1, [X31 + 0x18]
	0x037C04C8 MOV X0, X19
	0x037C04CC MOV W2, W31
	0x037C04D0 MOV X3, X31
	0x037C04D4 BL 0x3808C14

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xC22000
	006 Move X21, 0x988000
	007 Move W8, [X20+421]
	008 Move X21, [X21+3952]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x988000
	015 Move X0, [X0+3952]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+421], W8
	019 Move X8, [X21]
	020 Move X8, [X8+184]
	021 Move [X8], X19
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X30, [X31+32]
	025 Move X21, [X31+40]
	026 Return 

Method: System.Void MakeCurrent()

Disassembly:
	0x037C04D8 LDR X8, [X25 + 0x28]
	0x037C04DC LDR X9, [X31 + 0x98]
	0x037C04E0 CMP X8, X9
	0x037C04E4 B.NE 0x37C096C
	0x037C04E8 LDP X20, X19, [X31 + 0xF0]
	0x037C04EC LDP X22, X21, [X31 + 0xE0]
	0x037C04F0 LDP X24, X23, [X31 + 0xD0]
	0x037C04F4 LDP X26, X25, [X31 + 0xC0]
	0x037C04F8 LDP X28, X27, [X31 + 0xB0]
	0x037C04FC LDR X30, [X31 + 0xA0]
	0x037C0500 ADD X31, X31, 0x100
	0x037C0504 RET
	0x037C0508 MOVI V0.2D, 0x0
	0x037C050C MOV X0, X22
	0x037C0510 MOV X1, X31
	0x037C0514 STR X31, [X31 + 0x90]
	0x037C0518 STP V0, V0, [X31 + 0x70]
	0x037C051C STR V0, [X31 + 0x6]
	0x037C0520 BL 0x3807298
	0x037C0524 MOV X23, X0
	0x037C0528 MOV X0, X22

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X1, X31
	005 Move X19, X0
	006 Call InputDevice.MakeCurrent, X0
	007 Move X20, 0xC22000
	008 Move W8, [X20+561]
	009 Compare W8, 0
	010 JumpIfNotEqual {16}
	011 Move X0, 0x988000
	012 Move X0, [X0+3952]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+561], W8
	016 Move X8, 0x988000
	017 Move X8, [X8+3952]
	018 Move X8, [X8]
	019 Move X8, [X8+184]
	020 Move [X8], X19
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X30, [X31+32]
	024 Return 

Method: System.Void OnRemoved()

Disassembly:
	0x037C052C MOV X1, X31
	0x037C0530 BL 0x3802C74
	0x037C0534 MOV W2, W0
	0x037C0538 ADD X0, X31, 0x60
	0x037C053C MOV X1, X23
	0x037C0540 MOV X3, X31
	0x037C0544 BL 0x3BFF954
	0x037C0548 ADD X0, X31, 0x60
	0x037C054C MOV W1, W31
	0x037C0550 MOV X2, X31
	0x037C0554 STRB W31, [X31 + 0x81]
	0x037C0558 BL 0x37FFF98
	0x037C055C ADD X0, X31, 0x60
	0x037C0560 MOV W1, W31
	0x037C0564 MOV X2, X31
	0x037C0568 BL 0x37FFFB8
	0x037C056C ADRP X8, 0x984000
	0x037C0570 LDR X8, [X8 + 0xF90]
	0x037C0574 LDRB W9, [X31 + 0x80]
	0x037C0578 LDR X8, [X8]
	0x037C057C CMP W9, 0x1
	0x037C0580 LDR X8, [X8 + 0xB8]
	0x037C0584 LDR W8, [X8]
	0x037C0588 STR W8, [X31 + 0x84]
	0x037C058C B.NE 0x37C05C0
	0x037C0590 CMP W28, 0x1
	0x037C0594 B.LT 0x37C04D8
	0x037C0598 MOV W22, W31
	0x037C059C MOV X0, X20
	0x037C05A0 MOV X1, X31
	0x037C05A4 BL 0x37FFEF8
	0x037C05A8 TBNZ X0, 0x0, 0x37C05F8
	0x037C05AC ADD W22, W22, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X1, X31
	005 Move X19, X0
	006 Call InputDevice.OnRemoved, X0
	007 Move X20, 0xC22000
	008 Move W8, [X20+562]
	009 Compare W8, 0
	010 JumpIfNotEqual {16}
	011 Move X0, 0x988000
	012 Move X0, [X0+3952]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+562], W8
	016 Move X20, 0x988000
	017 Move X20, [X20+3952]
	018 Move X8, [X20]
	019 Move X8, [X8+184]
	020 Move X9, [X8]
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move X19, 0xC22000
	023 Move W9, [X19+561]
	024 Compare W9, 0
	025 JumpIfNotEqual {32}
	026 Move X0, X20
	027 Call 0x1C17CF4
	028 Move X8, [X20]
	029 Move W9, 1
	030 Move [X19+561], W9
	031 Move X8, [X8+184]
	032 Move [X8], X31
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Return 

Method: System.Void FinishSetup()

Disassembly:
	0x037C05B0 CMP W28, W22
	0x037C05B4 ADD X20, X20, 0x38
	0x037C05B8 B.NE 0x37C059C
	0x037C05BC B 0x37C04D8
	0x037C05C0 CMP W28, 0x1
	0x037C05C4 B.LT 0x37C04D8
	0x037C05C8 LDR W8, [X31 + 0x60]
	0x037C05CC MOV X22, X31
	0x037C05D0 MOV X24, X20
	0x037C05D4 CBZ X24, 0x37C0968
	0x037C05D8 LDR W9, [X24]
	0x037C05DC CMP W9, W8
	0x037C05E0 B.EQ 0x37C06E4
	0x037C05E4 ADD X22, X22, 0x1
	0x037C05E8 CMP X28, X22
	0x037C05EC ADD X24, X24, 0x38
	0x037C05F0 B.NE 0x37C05D4
	0x037C05F4 B 0x37C04D8
	0x037C05F8 ADRP X23, 0xC19000
	0x037C05FC LDRB W8, [X23 + 0x78F]
	0x037C0600 CBNZ W8, 0x37C0618
	0x037C0604 ADRP X0, 0x93B000
	0x037C0608 LDR X0, [X0 + 0xF08]
	0x037C060C BL 0x1C16CF4
	0x037C0610 MOVZ W8, 0x1
	0x037C0614 STRB W8, [X23 + 0x78F]
	0x037C0618 ADRP X8, 0x93B000
	0x037C061C LDR X8, [X8 + 0xF08]
	0x037C0620 ADD X0, X31, 0x18
	0x037C0624 MOV X1, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xC22000
	007 Move X21, 0x988000
	008 Move X22, 0x985000
	009 Move W8, [X20+422]
	010 Move X21, [X21+3960]
	011 Move X22, [X22+3632]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x985000
	018 Move X0, [X0+3632]
	019 Call 0x1C17CF4
	020 Move X0, 0x988000
	021 Move X0, [X0+3960]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+422], W8
	025 Move X1, [X21]
	026 Move X2, [X22]
	027 Move X0, X19
	028 Call 0x21FD754, X0, X1
	029 Move [X19+368], X0
	030 Move X0, X19
	031 Move X20, [X31+32]
	032 Move X19, [X31+40]
	033 Move X22, [X31+16]
	034 Move X21, [X31+24]
	035 Move X1, X31
	036 Move X30, [X31+48]
	037 Call InputControl.FinishSetup, X0
	038 Return 

Method: System.Void .ctor()

Disassembly:
	0x037C0628 LDR X8, [X8]
	0x037C062C LDR X8, [X8 + 0xB8]

ISIL:
	001 Move X1, X31
	002 Call InputDevice..ctor, X0
	003 Return 

