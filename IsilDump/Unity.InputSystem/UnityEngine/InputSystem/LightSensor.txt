Type: UnityEngine.InputSystem.LightSensor

Method: UnityEngine.InputSystem.Controls.AxisControl get_lightLevel()

Disassembly:
	0x037BFE40 BL 0x2BC496C
	0x037BFE44 TBZ X0, 0x0, 0x37BFEC8

ISIL:
	001 Move X0, [X0+368]
	002 Return X0

Method: System.Void set_lightLevel(UnityEngine.InputSystem.Controls.AxisControl value)

Disassembly:
	0x037BFE48 LDR X1, [X24]
	0x037BFE4C ADD X0, X31, 0x30

ISIL:
	001 Move [X0+368], X1
	002 Return 

Method: UnityEngine.InputSystem.LightSensor get_current()

Disassembly:
	0x037BFE50 BL 0x2BC4998
	0x037BFE54 LDR X8, [X19 + 0x1A0]
	0x037BFE58 MOV X21, X0
	0x037BFE5C CMP X0, X8
	0x037BFE60 B.EQ 0x37BFE38
	0x037BFE64 CBZ X21, 0x37BFE38
	0x037BFE68 LDR X9, [X21]
	0x037BFE6C LDR X8, [X25]
	0x037BFE70 LDRB W11, [X9 + 0x130]
	0x037BFE74 LDRB W10, [X8 + 0x130]
	0x037BFE78 CMP W11, W10
	0x037BFE7C B.CC 0x37BFE38
	0x037BFE80 LDR X9, [X9 + 0xC8]
	0x037BFE84 ADD X9, X9, X10, 0x3, LSL
	0x037BFE88 LDUR X9, [X9 - 0x8]
	0x037BFE8C CMP X9, X8
	0x037BFE90 B.NE 0x37BFE38
	0x037BFE94 CBZ X20, 0x37BFF1C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xC23000
	005 Move X20, 0x989000
	006 Move W8, [X19+411]
	007 Move X20, [X20+3912]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x989000
	013 Move X0, [X0+3912]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+411], W8
	017 Move X8, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X8, [X8+184]
	021 Move X0, [X8]
	022 Move X30, [X31+32]
	023 Return X0

Method: System.Void set_current(UnityEngine.InputSystem.LightSensor value)

Disassembly:
	0x037BFE98 LDR X8, [X20]
	0x037BFE9C LDR X1, [X8 + 0x40]
	0x037BFEA0 MOV X0, X21
	0x037BFEA4 BL 0x1C16E00
	0x037BFEA8 CBZ X0, 0x37BFF20
	0x037BFEAC LDR W8, [X20 + 0x18]
	0x037BFEB0 CMP W27, W8
	0x037BFEB4 B.CS 0x37BFF18
	0x037BFEB8 ADD X8, X20, W27, 0x3, SXTW
	0x037BFEBC ADD W27, W27, 0x1
	0x037BFEC0 STR X21, [X8 + 0x20]
	0x037BFEC4 B 0x37BFE38
	0x037BFEC8 LDR X1, [X26]
	0x037BFECC ADD X0, X31, 0x30
	0x037BFED0 BL 0x2BC4968
	0x037BFED4 LDR X2, [X23]
	0x037BFED8 ADD X0, X31, 0x0
	0x037BFEDC MOV X1, X20
	0x037BFEE0 STP X31, X31, [X31]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xC23000
	006 Move X21, 0x989000
	007 Move W8, [X20+412]
	008 Move X21, [X21+3912]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x989000
	015 Move X0, [X0+3912]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+412], W8
	019 Move X8, [X21]
	020 Move X8, [X8+184]
	021 Move [X8], X19
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X30, [X31+32]
	025 Move X21, [X31+40]
	026 Return 

Method: System.Void MakeCurrent()

Disassembly:
	0x037BFEE4 BL 0x24FD80C
	0x037BFEE8 LDR V0, [X31]
	0x037BFEEC ADD X8, X19, 0x1A8
	0x037BFEF0 LDP X20, X19, [X31 + 0xA0]
	0x037BFEF4 LDP X22, X21, [X31 + 0x90]
	0x037BFEF8 LDP X24, X23, [X31 + 0x80]
	0x037BFEFC LDP X26, X25, [X31 + 0x70]
	0x037BFF00 LDP X28, X27, [X31 + 0x60]
	0x037BFF04 LDP X29, X30, [X31 + 0x50]
	0x037BFF08 STR V0, [X8]
	0x037BFF0C ADD X31, X31, 0xB0
	0x037BFF10 RET
	0x037BFF14 BL 0x1C16F20
	0x037BFF18 BL 0x1C16F28
	0x037BFF1C BL 0x1C16F20
	0x037BFF20 BL 0x1C16F44
	0x037BFF24 MOV X1, X31
	0x037BFF28 BL 0x1C16DEC
	0x037BFF2C B 0x37BFF3C
	0x037BFF30 B 0x37BFF3C
	0x037BFF34 B 0x37BFF94

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X1, X31
	005 Move X19, X0
	006 Call InputDevice.MakeCurrent, X0
	007 Move X20, 0xC23000
	008 Move W8, [X20+555]
	009 Compare W8, 0
	010 JumpIfNotEqual {16}
	011 Move X0, 0x989000
	012 Move X0, [X0+3912]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+555], W8
	016 Move X8, 0x989000
	017 Move X8, [X8+3912]
	018 Move X8, [X8]
	019 Move X8, [X8+184]
	020 Move [X8], X19
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X30, [X31+32]
	024 Return 

Method: System.Void OnRemoved()

Disassembly:
	0x037BFF38 B 0x37BFF3C
	0x037BFF3C MOV X21, X0
	0x037BFF40 CMP W1, 0x1
	0x037BFF44 B.NE 0x37BFF70
	0x037BFF48 MOV X0, X21
	0x037BFF4C BL 0x3EB1AD0
	0x037BFF50 LDR X22, [X0]
	0x037BFF54 BL 0x3EB1AE0
	0x037BFF58 LDR X1, [X26]
	0x037BFF5C ADD X0, X31, 0x30
	0x037BFF60 BL 0x2BC4968
	0x037BFF64 CBZ X22, 0x37BFED4
	0x037BFF68 MOV X0, X22
	0x037BFF6C BL 0x1C16F18
	0x037BFF70 MOV X22, X31
	0x037BFF74 B 0x37BFF7C
	0x037BFF78 MOV X21, X0
	0x037BFF7C LDR X1, [X26]
	0x037BFF80 ADD X0, X31, 0x30
	0x037BFF84 BL 0x2BC4968
	0x037BFF88 CBZ X22, 0x37BFFE4
	0x037BFF8C MOV X0, X22
	0x037BFF90 BL 0x1C16F18
	0x037BFF94 MOV X21, X0
	0x037BFF98 CMP W1, 0x1
	0x037BFF9C B.NE 0x37BFFC8
	0x037BFFA0 MOV X0, X21
	0x037BFFA4 BL 0x3EB1AD0
	0x037BFFA8 LDR X20, [X0]
	0x037BFFAC BL 0x3EB1AE0
	0x037BFFB0 LDR X1, [X26]
	0x037BFFB4 ADD X0, X31, 0x30
	0x037BFFB8 BL 0x2BC4968

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X1, X31
	005 Move X19, X0
	006 Call InputDevice.OnRemoved, X0
	007 Move X20, 0xC23000
	008 Move W8, [X20+556]
	009 Compare W8, 0
	010 JumpIfNotEqual {16}
	011 Move X0, 0x989000
	012 Move X0, [X0+3912]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+556], W8
	016 Move X20, 0x989000
	017 Move X20, [X20+3912]
	018 Move X8, [X20]
	019 Move X8, [X8+184]
	020 Move X9, [X8]
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move X19, 0xC23000
	023 Move W9, [X19+555]
	024 Compare W9, 0
	025 JumpIfNotEqual {32}
	026 Move X0, X20
	027 Call 0x1C17CF4
	028 Move X8, [X20]
	029 Move W9, 1
	030 Move [X19+555], W9
	031 Move X8, [X8+184]
	032 Move [X8], X31
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Return 

Method: System.Void FinishSetup()

Disassembly:
	0x037BFFBC CBZ X20, 0x37BFDE8
	0x037BFFC0 MOV X0, X20
	0x037BFFC4 BL 0x1C16F18
	0x037BFFC8 MOV X20, X31
	0x037BFFCC B 0x37BFFD4
	0x037BFFD0 MOV X21, X0
	0x037BFFD4 LDR X1, [X26]
	0x037BFFD8 ADD X0, X31, 0x30
	0x037BFFDC BL 0x2BC4968
	0x037BFFE0 CBNZ X20, 0x37BFFEC
	0x037BFFE4 MOV X0, X21
	0x037BFFE8 BL 0x1D2C690
	0x037BFFEC MOV X0, X20
	0x037BFFF0 BL 0x1C16F18
	0x037BFFF4 BL 0x1990590
	0x037BFFF8 SUB X31, X31, 0x80
	0x037BFFFC STR D8, [X31 + 0x10]
	0x037C0000 STP X29, X30, [X31 + 0x20]
	0x037C0004 STP X28, X27, [X31 + 0x30]
	0x037C0008 STP X26, X25, [X31 + 0x40]
	0x037C000C STP X24, X23, [X31 + 0x50]
	0x037C0010 STP X22, X21, [X31 + 0x60]
	0x037C0014 STP X20, X19, [X31 + 0x70]
	0x037C0018 ADRP X20, 0xC21000
	0x037C001C ADRP X21, 0x95B000
	0x037C0020 LDRB W8, [X20 + 0x1B1]
	0x037C0024 LDR X21, [X21 + 0xD18]
	0x037C0028 MOV X19, X0
	0x037C002C TBNZ X8, 0x0, 0x37C0080
	0x037C0030 ADRP X0, 0x95B000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xC23000
	007 Move X21, 0x989000
	008 Move X22, 0x986000
	009 Move W8, [X20+413]
	010 Move X21, [X21+3920]
	011 Move X22, [X22+3632]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x986000
	018 Move X0, [X0+3632]
	019 Call 0x1C17CF4
	020 Move X0, 0x989000
	021 Move X0, [X0+3920]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+413], W8
	025 Move X1, [X21]
	026 Move X2, [X22]
	027 Move X0, X19
	028 Call 0x21FD754, X0, X1
	029 Move [X19+368], X0
	030 Move X0, X19
	031 Move X20, [X31+32]
	032 Move X19, [X31+40]
	033 Move X22, [X31+16]
	034 Move X21, [X31+24]
	035 Move X1, X31
	036 Move X30, [X31+48]
	037 Call InputControl.FinishSetup, X0
	038 Return 

Method: System.Void .ctor()

Disassembly:
	0x037C0034 LDR X0, [X0 + 0xD18]
	0x037C0038 BL 0x1C16CF4

ISIL:
	001 Move X1, X31
	002 Call InputDevice..ctor, X0
	003 Return 

