Type: UnityEngine.InputSystem.AttitudeSensor

Method: UnityEngine.InputSystem.Controls.QuaternionControl get_attitude()

Disassembly:
	0x037BF84C LDRB W8, [X19 + 0x1AA]
	0x037BF850 LDR X20, [X20 + 0xF90]

ISIL:
	001 Move X0, [X0+368]
	002 Return X0

Method: System.Void set_attitude(UnityEngine.InputSystem.Controls.QuaternionControl value)

Disassembly:
	0x037BF854 TBNZ X8, 0x0, 0x37BF86C
	0x037BF858 ADRP X0, 0x988000

ISIL:
	001 Move [X0+368], X1
	002 Return 

Method: UnityEngine.InputSystem.AttitudeSensor get_current()

Disassembly:
	0x037BF85C LDR X0, [X0 + 0xF90]
	0x037BF860 BL 0x1C16CF4
	0x037BF864 MOVZ W8, 0x1
	0x037BF868 STRB W8, [X19 + 0x1AA]
	0x037BF86C LDR X8, [X20]
	0x037BF870 LDP X20, X19, [X31 + 0x10]
	0x037BF874 LDR X8, [X8 + 0xB8]
	0x037BF878 LDR X0, [X8]
	0x037BF87C LDR X30, [X31], #0x20
	0x037BF880 RET
	0x037BF884 STP X30, X21, [X31 - 0x20]!
	0x037BF888 STP X20, X19, [X31 + 0x10]
	0x037BF88C ADRP X20, 0xC22000
	0x037BF890 ADRP X21, 0x988000
	0x037BF894 LDRB W8, [X20 + 0x1AB]
	0x037BF898 LDR X21, [X21 + 0xF90]
	0x037BF89C MOV X19, X0
	0x037BF8A0 TBNZ X8, 0x0, 0x37BF8B8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xC23000
	005 Move X20, 0x989000
	006 Move W8, [X19+402]
	007 Move X20, [X20+3872]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x989000
	013 Move X0, [X0+3872]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+402], W8
	017 Move X8, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X8, [X8+184]
	021 Move X0, [X8]
	022 Move X30, [X31+32]
	023 Return X0

Method: System.Void set_current(UnityEngine.InputSystem.AttitudeSensor value)

Disassembly:
	0x037BF8A4 ADRP X0, 0x988000
	0x037BF8A8 LDR X0, [X0 + 0xF90]
	0x037BF8AC BL 0x1C16CF4
	0x037BF8B0 MOVZ W8, 0x1
	0x037BF8B4 STRB W8, [X20 + 0x1AB]
	0x037BF8B8 LDR X8, [X21]
	0x037BF8BC LDR X8, [X8 + 0xB8]
	0x037BF8C0 STR X19, [X8]
	0x037BF8C4 LDP X20, X19, [X31 + 0x10]
	0x037BF8C8 LDP X30, X21, [X31], #0x20
	0x037BF8CC RET
	0x037BF8D0 STR X30, [X31 - 0x20]!
	0x037BF8D4 STP X20, X19, [X31 + 0x10]
	0x037BF8D8 MOV X1, X31
	0x037BF8DC MOV X19, X0
	0x037BF8E0 BL 0x377A674
	0x037BF8E4 ADRP X20, 0xC22000
	0x037BF8E8 LDRB W8, [X20 + 0x235]
	0x037BF8EC CBNZ W8, 0x37BF904

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xC23000
	006 Move X21, 0x989000
	007 Move W8, [X20+403]
	008 Move X21, [X21+3872]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x989000
	015 Move X0, [X0+3872]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+403], W8
	019 Move X8, [X21]
	020 Move X8, [X8+184]
	021 Move [X8], X19
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X30, [X31+32]
	025 Move X21, [X31+40]
	026 Return 

Method: System.Void MakeCurrent()

Disassembly:
	0x037BF8F0 ADRP X0, 0x988000
	0x037BF8F4 LDR X0, [X0 + 0xF90]
	0x037BF8F8 BL 0x1C16CF4
	0x037BF8FC MOVZ W8, 0x1
	0x037BF900 STRB W8, [X20 + 0x235]
	0x037BF904 ADRP X8, 0x988000
	0x037BF908 LDR X8, [X8 + 0xF90]
	0x037BF90C LDR X8, [X8]
	0x037BF910 LDR X8, [X8 + 0xB8]
	0x037BF914 STR X19, [X8]
	0x037BF918 LDP X20, X19, [X31 + 0x10]
	0x037BF91C LDR X30, [X31], #0x20
	0x037BF920 RET
	0x037BF924 STR X30, [X31 - 0x20]!
	0x037BF928 STP X20, X19, [X31 + 0x10]
	0x037BF92C MOV X1, X31
	0x037BF930 MOV X19, X0
	0x037BF934 BL 0x377B0CC
	0x037BF938 ADRP X20, 0xC22000
	0x037BF93C LDRB W8, [X20 + 0x236]
	0x037BF940 CBNZ W8, 0x37BF958

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X1, X31
	005 Move X19, X0
	006 Call InputDevice.MakeCurrent, X0
	007 Move X20, 0xC23000
	008 Move W8, [X20+549]
	009 Compare W8, 0
	010 JumpIfNotEqual {16}
	011 Move X0, 0x989000
	012 Move X0, [X0+3872]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+549], W8
	016 Move X8, 0x989000
	017 Move X8, [X8+3872]
	018 Move X8, [X8]
	019 Move X8, [X8+184]
	020 Move [X8], X19
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X30, [X31+32]
	024 Return 

Method: System.Void OnRemoved()

Disassembly:
	0x037BF944 ADRP X0, 0x988000
	0x037BF948 LDR X0, [X0 + 0xF90]
	0x037BF94C BL 0x1C16CF4
	0x037BF950 MOVZ W8, 0x1
	0x037BF954 STRB W8, [X20 + 0x236]
	0x037BF958 ADRP X20, 0x988000
	0x037BF95C LDR X20, [X20 + 0xF90]
	0x037BF960 LDR X8, [X20]
	0x037BF964 LDR X8, [X8 + 0xB8]
	0x037BF968 LDR X9, [X8]
	0x037BF96C CMP X9, X19
	0x037BF970 B.NE 0x37BF99C
	0x037BF974 ADRP X19, 0xC22000
	0x037BF978 LDRB W9, [X19 + 0x235]
	0x037BF97C CBNZ W9, 0x37BF998
	0x037BF980 MOV X0, X20
	0x037BF984 BL 0x1C16CF4
	0x037BF988 LDR X8, [X20]
	0x037BF98C MOVZ W9, 0x1
	0x037BF990 STRB W9, [X19 + 0x235]
	0x037BF994 LDR X8, [X8 + 0xB8]
	0x037BF998 STR X31, [X8]
	0x037BF99C LDP X20, X19, [X31 + 0x10]
	0x037BF9A0 LDR X30, [X31], #0x20
	0x037BF9A4 RET
	0x037BF9A8 STR X30, [X31 - 0x30]!
	0x037BF9AC STP X22, X21, [X31 + 0x10]
	0x037BF9B0 STP X20, X19, [X31 + 0x20]
	0x037BF9B4 ADRP X20, 0xC22000
	0x037BF9B8 ADRP X21, 0x988000
	0x037BF9BC ADRP X22, 0x987000
	0x037BF9C0 LDRB W8, [X20 + 0x1AC]
	0x037BF9C4 LDR X21, [X21 + 0xF98]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X1, X31
	005 Move X19, X0
	006 Call InputDevice.OnRemoved, X0
	007 Move X20, 0xC23000
	008 Move W8, [X20+550]
	009 Compare W8, 0
	010 JumpIfNotEqual {16}
	011 Move X0, 0x989000
	012 Move X0, [X0+3872]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+550], W8
	016 Move X20, 0x989000
	017 Move X20, [X20+3872]
	018 Move X8, [X20]
	019 Move X8, [X8+184]
	020 Move X9, [X8]
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move X19, 0xC23000
	023 Move W9, [X19+549]
	024 Compare W9, 0
	025 JumpIfNotEqual {32}
	026 Move X0, X20
	027 Call 0x1C17CF4
	028 Move X8, [X20]
	029 Move W9, 1
	030 Move [X19+549], W9
	031 Move X8, [X8+184]
	032 Move [X8], X31
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Return 

Method: System.Void FinishSetup()

Disassembly:
	0x037BF9C8 LDR X22, [X22 + 0x58]
	0x037BF9CC MOV X19, X0
	0x037BF9D0 TBNZ X8, 0x0, 0x37BF9F4
	0x037BF9D4 ADRP X0, 0x987000
	0x037BF9D8 LDR X0, [X0 + 0x58]
	0x037BF9DC BL 0x1C16CF4
	0x037BF9E0 ADRP X0, 0x988000
	0x037BF9E4 LDR X0, [X0 + 0xF98]
	0x037BF9E8 BL 0x1C16CF4
	0x037BF9EC MOVZ W8, 0x1
	0x037BF9F0 STRB W8, [X20 + 0x1AC]
	0x037BF9F4 LDR X1, [X21]
	0x037BF9F8 LDR X2, [X22]
	0x037BF9FC MOV X0, X19
	0x037BFA00 BL 0x21FC754
	0x037BFA04 STR X0, [X19 + 0x170]
	0x037BFA08 MOV X0, X19
	0x037BFA0C LDP X20, X19, [X31 + 0x20]
	0x037BFA10 LDP X22, X21, [X31 + 0x10]
	0x037BFA14 MOV X1, X31
	0x037BFA18 LDR X30, [X31], #0x30
	0x037BFA1C B 0x37729C8
	0x037BFA20 MOV X1, X31
	0x037BFA24 B 0x377A868
	0x037BFA28 LDR X0, [X0 + 0x1A0]
	0x037BFA2C RET
	0x037BFA30 STR X1, [X0 + 0x1A0]
	0x037BFA34 RET
	0x037BFA38 LDP X8, X1, [X0 + 0x1A8]
	0x037BFA3C MOV X0, X8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xC23000
	007 Move X21, 0x989000
	008 Move X22, 0x986000
	009 Move W8, [X20+404]
	010 Move X21, [X21+3880]
	011 Move X22, [X22+3800]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x986000
	018 Move X0, [X0+3800]
	019 Call 0x1C17CF4
	020 Move X0, 0x989000
	021 Move X0, [X0+3880]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+404], W8
	025 Move X1, [X21]
	026 Move X2, [X22]
	027 Move X0, X19
	028 Call 0x21FD754, X0, X1
	029 Move [X19+368], X0
	030 Move X0, X19
	031 Move X20, [X31+32]
	032 Move X19, [X31+40]
	033 Move X22, [X31+16]
	034 Move X21, [X31+24]
	035 Move X1, X31
	036 Move X30, [X31+48]
	037 Call InputControl.FinishSetup, X0
	038 Return 

Method: System.Void .ctor()

Disassembly:
	0x037BFA40 RET
	0x037BFA44 STP X1, X2, [X0 + 0x1A8]

ISIL:
	001 Move X1, X31
	002 Call InputDevice..ctor, X0
	003 Return 

