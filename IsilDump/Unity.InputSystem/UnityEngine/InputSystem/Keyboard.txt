Type: UnityEngine.InputSystem.Keyboard

Method: System.Void add_onTextInput(System.Action`1<System.Char> value)

Disassembly:
	0x0377D720 STR X8, [X20 + 0x20]
	0x0377D724 B.EQ 0x377E2BC
	0x0377D728 ADRP X8, 0x9CA000
	0x0377D72C LDR X8, [X8 + 0x200]
	0x0377D730 CMP W1, 0x2
	0x0377D734 LDR X8, [X8]
	0x0377D738 STR X8, [X20 + 0x28]
	0x0377D73C B.LS 0x377E2BC
	0x0377D740 ADRP X8, 0x9CA000
	0x0377D744 LDR X8, [X8 + 0x258]
	0x0377D748 CMP W1, 0x3
	0x0377D74C LDR X8, [X8]
	0x0377D750 STR X8, [X20 + 0x30]
	0x0377D754 B.EQ 0x377E2BC
	0x0377D758 ADRP X8, 0x9CA000
	0x0377D75C LDR X8, [X8 + 0x340]
	0x0377D760 CMP W1, 0x4
	0x0377D764 LDR X8, [X8]
	0x0377D768 STR X8, [X20 + 0x38]
	0x0377D76C B.LS 0x377E2BC
	0x0377D770 ADRP X8, 0x9CA000
	0x0377D774 LDR X8, [X8 + 0xE0]
	0x0377D778 CMP W1, 0x5
	0x0377D77C LDR X8, [X8]
	0x0377D780 STR X8, [X20 + 0x40]
	0x0377D784 B.EQ 0x377E2BC
	0x0377D788 ADRP X8, 0x9CA000
	0x0377D78C LDR X8, [X8 + 0x2F8]
	0x0377D790 CMP W1, 0x6
	0x0377D794 LDR X8, [X8]
	0x0377D798 STR X8, [X20 + 0x48]
	0x0377D79C B.LS 0x377E2BC
	0x0377D7A0 ADRP X8, 0x9CA000
	0x0377D7A4 LDR X8, [X8 + 0x1D8]
	0x0377D7A8 CMP W1, 0x7
	0x0377D7AC LDR X8, [X8]
	0x0377D7B0 STR X8, [X20 + 0x50]
	0x0377D7B4 B.EQ 0x377E2BC
	0x0377D7B8 ADRP X8, 0x9B0000
	0x0377D7BC LDR X8, [X8 + 0x598]
	0x0377D7C0 CMP W1, 0x8
	0x0377D7C4 LDR X8, [X8]
	0x0377D7C8 STR X8, [X20 + 0x58]
	0x0377D7CC B.LS 0x377E2BC
	0x0377D7D0 ADRP X8, 0x9CA000
	0x0377D7D4 LDR X8, [X8 + 0x148]
	0x0377D7D8 CMP W1, 0x9
	0x0377D7DC LDR X8, [X8]
	0x0377D7E0 STR X8, [X20 + 0x60]
	0x0377D7E4 B.EQ 0x377E2BC
	0x0377D7E8 ADRP X8, 0x9CA000
	0x0377D7EC LDR X8, [X8 + 0x2B8]
	0x0377D7F0 CMP W1, 0xA
	0x0377D7F4 LDR X8, [X8]
	0x0377D7F8 STR X8, [X20 + 0x68]
	0x0377D7FC B.LS 0x377E2BC
	0x0377D800 ADRP X8, 0x9CA000

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+40], X21
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move X21, 0xC64000
	007 Move W8, [X21+3960]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x9CB000
	015 Move X0, [X0+96]
	016 Call 0x1C17CF4
	017 Move X0, 0x9CB000
	018 Move X0, [X0+104]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+3960], W8
	022 Compare X19, 0
	023 JumpIfEqual {51}
	024 Move X8, 0x9CB000
	025 Move X8, [X8+104]
	026 Add X20, X20, 408
	027 Move X9, [X20+16]
	028 Move V0, [X20]
	029 Move X2, [X8]
	030 Add X0, X31, 0
	031 Move X1, X19
	032 Move [X31+16], X9
	033 Move [X31], V0
	034 Call 0x21FBCBC, X0, X1
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {45}
	039 Move X8, 0x9CB000
	040 Move X8, [X8+96]
	041 Move X0, X20
	042 Move X1, X19
	043 Move X2, [X8]
	044 Call InlinedArray`1<Object>.Append, X0, X1
	045 Move X20, [X31+48]
	046 Move X19, [X31+56]
	047 Move X30, [X31+32]
	048 Move X21, [X31+40]
	049 Add X31, X31, 64
	050 Return 
	051 Move X0, 0x97C000
	052 Move X0, [X0+1320]
	053 Call 0x1C17D08
	054 Call 0x1C17F10
	055 Move X19, X0
	056 Move X0, 0x981000
	057 Move X0, [X0+3784]
	058 Call 0x1C17D08
	059 Move X1, X0
	060 Move X0, X19
	061 Move X2, X31
	062 Call ArgumentNullException..ctor, X0, X1
	063 Move X0, 0x9CB000
	064 Move X0, [X0+112]
	065 Call 0x1C17D08
	066 Move X1, X0
	067 Move X0, X19
	068 Call 0x1C17DEC

Method: System.Void remove_onTextInput(System.Action`1<System.Char> value)

Disassembly:
	0x0377D804 LDR X8, [X8 + 0x248]
	0x0377D808 CMP W1, 0xB
	0x0377D80C LDR X8, [X8]
	0x0377D810 STR X8, [X20 + 0x70]
	0x0377D814 B.EQ 0x377E2BC
	0x0377D818 ADRP X8, 0x9CA000
	0x0377D81C LDR X8, [X8 + 0x250]
	0x0377D820 CMP W1, 0xC
	0x0377D824 LDR X8, [X8]
	0x0377D828 STR X8, [X20 + 0x78]
	0x0377D82C B.LS 0x377E2BC
	0x0377D830 ADRP X8, 0x9CA000
	0x0377D834 LDR X8, [X8 + 0x210]
	0x0377D838 CMP W1, 0xD
	0x0377D83C LDR X8, [X8]
	0x0377D840 STR X8, [X20 + 0x80]
	0x0377D844 B.EQ 0x377E2BC
	0x0377D848 ADRP X8, 0x9CA000
	0x0377D84C LDR X8, [X8 + 0x2B0]
	0x0377D850 CMP W1, 0xE
	0x0377D854 LDR X8, [X8]
	0x0377D858 STR X8, [X20 + 0x88]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xC64000
	007 Move X21, 0x9CB000
	008 Move W8, [X22+3961]
	009 Move X21, [X21+120]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x9CB000
	017 Move X0, [X0+120]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+3961], W8
	021 Move X2, [X21]
	022 Add X0, X20, 408
	023 Move X1, X19
	024 Move X20, [X31+32]
	025 Move X19, [X31+40]
	026 Move X22, [X31+16]
	027 Move X21, [X31+24]
	028 Move X30, [X31+48]
	029 Call InlinedArray`1<Object>.Remove, X0, X1
	030 Return 

Method: System.Void add_onIMECompositionChange(System.Action`1<UnityEngine.InputSystem.LowLevel.IMECompositionString> value)

Disassembly:
	0x0377D85C B.LS 0x377E2BC
	0x0377D860 ADRP X8, 0x9A3000
	0x0377D864 LDR X8, [X8 + 0x3B0]
	0x0377D868 CMP W1, 0xF
	0x0377D86C LDR X8, [X8]
	0x0377D870 STR X8, [X20 + 0x90]
	0x0377D874 B.EQ 0x377E2BC
	0x0377D878 ADRP X8, 0x9A3000
	0x0377D87C LDR X8, [X8 + 0x3C0]
	0x0377D880 CMP W1, 0x10
	0x0377D884 LDR X8, [X8]
	0x0377D888 STR X8, [X20 + 0x98]
	0x0377D88C B.LS 0x377E2BC
	0x0377D890 ADRP X8, 0x9AB000
	0x0377D894 LDR X8, [X8 + 0x538]
	0x0377D898 CMP W1, 0x11
	0x0377D89C LDR X8, [X8]
	0x0377D8A0 STR X8, [X20 + 0xA0]
	0x0377D8A4 B.EQ 0x377E2BC
	0x0377D8A8 ADRP X8, 0x99F000
	0x0377D8AC LDR X8, [X8 + 0x58]
	0x0377D8B0 CMP W1, 0x12
	0x0377D8B4 LDR X8, [X8]
	0x0377D8B8 STR X8, [X20 + 0xA8]
	0x0377D8BC B.LS 0x377E2BC
	0x0377D8C0 ADRP X8, 0x9AD000
	0x0377D8C4 LDR X8, [X8 + 0x1A0]
	0x0377D8C8 CMP W1, 0x13
	0x0377D8CC LDR X8, [X8]
	0x0377D8D0 STR X8, [X20 + 0xB0]
	0x0377D8D4 B.EQ 0x377E2BC
	0x0377D8D8 ADRP X8, 0x9CA000
	0x0377D8DC LDR X8, [X8 + 0x160]
	0x0377D8E0 CMP W1, 0x14
	0x0377D8E4 LDR X8, [X8]
	0x0377D8E8 STR X8, [X20 + 0xB8]
	0x0377D8EC B.LS 0x377E2BC
	0x0377D8F0 ADRP X8, 0x9A3000
	0x0377D8F4 LDR X8, [X8 + 0x3B8]
	0x0377D8F8 CMP W1, 0x15
	0x0377D8FC LDR X8, [X8]
	0x0377D900 STR X8, [X20 + 0xC0]
	0x0377D904 B.EQ 0x377E2BC
	0x0377D908 ADRP X8, 0x9CA000
	0x0377D90C LDR X8, [X8 + 0x110]
	0x0377D910 CMP W1, 0x16
	0x0377D914 LDR X8, [X8]
	0x0377D918 STR X8, [X20 + 0xC8]
	0x0377D91C B.LS 0x377E2BC
	0x0377D920 ADRP X8, 0x9CA000
	0x0377D924 LDR X8, [X8 + 0x128]
	0x0377D928 CMP W1, 0x17
	0x0377D92C LDR X8, [X8]
	0x0377D930 STR X8, [X20 + 0xD0]
	0x0377D934 B.EQ 0x377E2BC
	0x0377D938 ADRP X8, 0x9CA000

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+40], X21
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move X21, 0xC64000
	007 Move W8, [X21+3962]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x9CB000
	015 Move X0, [X0+128]
	016 Call 0x1C17CF4
	017 Move X0, 0x9CB000
	018 Move X0, [X0+136]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+3962], W8
	022 Compare X19, 0
	023 JumpIfEqual {50}
	024 Move X8, 0x9CB000
	025 Move X8, [X8+136]
	026 Move X9, [X20+464]
	027 Move V0, [X20+28]
	028 Add X0, X31, 0
	029 Move X2, [X8]
	030 Move X1, X19
	031 Move [X31+16], X9
	032 Move [X31], V0
	033 Call 0x21FBCBC, X0, X1
	034 Move TEMP, X0
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfEqual {44}
	038 Move X8, 0x9CB000
	039 Move X8, [X8+128]
	040 Add X0, X20, 448
	041 Move X1, X19
	042 Move X2, [X8]
	043 Call InlinedArray`1<Object>.Append, X0, X1
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X30, [X31+32]
	047 Move X21, [X31+40]
	048 Add X31, X31, 64
	049 Return 
	050 Move X0, 0x97C000
	051 Move X0, [X0+1320]
	052 Call 0x1C17D08
	053 Call 0x1C17F10
	054 Move X19, X0
	055 Move X0, 0x981000
	056 Move X0, [X0+3784]
	057 Call 0x1C17D08
	058 Move X1, X0
	059 Move X0, X19
	060 Move X2, X31
	061 Call ArgumentNullException..ctor, X0, X1
	062 Move X0, 0x9CB000
	063 Move X0, [X0+144]
	064 Call 0x1C17D08
	065 Move X1, X0
	066 Move X0, X19
	067 Call 0x1C17DEC

Method: System.Void remove_onIMECompositionChange(System.Action`1<UnityEngine.InputSystem.LowLevel.IMECompositionString> value)

Disassembly:
	0x0377D93C LDR X8, [X8 + 0x1B0]
	0x0377D940 CMP W1, 0x18
	0x0377D944 LDR X8, [X8]
	0x0377D948 STR X8, [X20 + 0xD8]
	0x0377D94C B.LS 0x377E2BC
	0x0377D950 ADRP X8, 0x9CA000
	0x0377D954 LDR X8, [X8 + 0x188]
	0x0377D958 CMP W1, 0x19
	0x0377D95C LDR X8, [X8]
	0x0377D960 STR X8, [X20 + 0xE0]
	0x0377D964 B.EQ 0x377E2BC
	0x0377D968 ADRP X8, 0x9CA000
	0x0377D96C LDR X8, [X8 + 0x2D0]
	0x0377D970 CMP W1, 0x1A
	0x0377D974 LDR X8, [X8]
	0x0377D978 STR X8, [X20 + 0xE8]
	0x0377D97C B.LS 0x377E2BC
	0x0377D980 ADRP X8, 0x9CA000
	0x0377D984 LDR X8, [X8 + 0x2E0]
	0x0377D988 CMP W1, 0x1B
	0x0377D98C LDR X8, [X8]
	0x0377D990 STR X8, [X20 + 0xF0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xC64000
	007 Move X21, 0x9CB000
	008 Move W8, [X22+3963]
	009 Move X21, [X21+152]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x9CB000
	017 Move X0, [X0+152]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+3963], W8
	021 Move X2, [X21]
	022 Add X0, X20, 448
	023 Move X1, X19
	024 Move X20, [X31+32]
	025 Move X19, [X31+40]
	026 Move X22, [X31+16]
	027 Move X21, [X31+24]
	028 Move X30, [X31+48]
	029 Call InlinedArray`1<Object>.Remove, X0, X1
	030 Return 

Method: System.Void SetIMEEnabled(System.Boolean enabled)

Disassembly:
	0x0377D994 B.EQ 0x377E2BC
	0x0377D998 ADRP X8, 0x9CA000
	0x0377D99C LDR X8, [X8 + 0x1A0]
	0x0377D9A0 CMP W1, 0x1C
	0x0377D9A4 LDR X8, [X8]
	0x0377D9A8 STR X8, [X20 + 0xF8]
	0x0377D9AC B.LS 0x377E2BC
	0x0377D9B0 ADRP X8, 0x9BB000
	0x0377D9B4 LDR X8, [X8 + 0x518]
	0x0377D9B8 CMP W1, 0x1D
	0x0377D9BC LDR X8, [X8]
	0x0377D9C0 STR X8, [X20 + 0x100]
	0x0377D9C4 B.EQ 0x377E2BC
	0x0377D9C8 ADRP X8, 0x9CA000
	0x0377D9CC LDR X8, [X8 + 0x118]
	0x0377D9D0 CMP W1, 0x1E
	0x0377D9D4 LDR X8, [X8]
	0x0377D9D8 STR X8, [X20 + 0x108]
	0x0377D9DC B.LS 0x377E2BC
	0x0377D9E0 ADRP X8, 0x9BD000
	0x0377D9E4 LDR X8, [X8 + 0xDD0]
	0x0377D9E8 CMP W1, 0x1F
	0x0377D9EC LDR X8, [X8]
	0x0377D9F0 STR X8, [X20 + 0x110]
	0x0377D9F4 B.EQ 0x377E2BC
	0x0377D9F8 ADRP X8, 0x9A3000
	0x0377D9FC LDR X8, [X8 + 0x3A8]
	0x0377DA00 CMP W1, 0x20
	0x0377DA04 LDR X8, [X8]
	0x0377DA08 STR X8, [X20 + 0x118]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+32], X22
	004 Move [X31+40], X21
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move X22, 0xC64000
	008 Move X21, 0x9CB000
	009 Move W8, [X22+3964]
	010 Move X21, [X21+160]
	011 Move W20, W1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x9CB000
	018 Move X0, [X0+160]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X22+3964], W8
	022 And W0, W20, 1
	023 Move X1, X31
	024 Call EnableIMECompositionCommand.Create, X0
	025 Move X2, [X21]
	026 Move [X31], X0
	027 Move [X31+8], W1
	028 Add X1, X31, 0
	029 Move X0, X19
	030 Call InputDevice.ExecuteCommand, X0, X1
	031 Move X20, [X31+48]
	032 Move X19, [X31+56]
	033 Move X22, [X31+32]
	034 Move X21, [X31+40]
	035 Move X30, [X31+16]
	036 Add X31, X31, 64
	037 Return 

Method: System.Void SetIMECursorPosition(UnityEngine.Vector2 position)

Disassembly:
	0x0377DA0C B.LS 0x377E2BC
	0x0377DA10 ADRP X8, 0x99F000
	0x0377DA14 LDR X8, [X8 + 0xCC0]
	0x0377DA18 CMP W1, 0x21
	0x0377DA1C LDR X8, [X8]
	0x0377DA20 STR X8, [X20 + 0x120]
	0x0377DA24 B.EQ 0x377E2BC
	0x0377DA28 ADRP X8, 0x9A8000
	0x0377DA2C LDR X8, [X8 + 0x718]
	0x0377DA30 CMP W1, 0x22
	0x0377DA34 LDR X8, [X8]
	0x0377DA38 STR X8, [X20 + 0x128]
	0x0377DA3C B.LS 0x377E2BC
	0x0377DA40 ADRP X8, 0x9CA000
	0x0377DA44 LDR X8, [X8 + 0x308]
	0x0377DA48 CMP W1, 0x23
	0x0377DA4C LDR X8, [X8]
	0x0377DA50 STR X8, [X20 + 0x130]
	0x0377DA54 B.EQ 0x377E2BC
	0x0377DA58 ADRP X8, 0x97A000
	0x0377DA5C LDR X8, [X8 + 0x600]
	0x0377DA60 CMP W1, 0x24
	0x0377DA64 LDR X8, [X8]
	0x0377DA68 STR X8, [X20 + 0x138]
	0x0377DA6C B.LS 0x377E2BC
	0x0377DA70 ADRP X8, 0x9A3000
	0x0377DA74 LDR X8, [X8 + 0x3D8]
	0x0377DA78 CMP W1, 0x25
	0x0377DA7C LDR X8, [X8]
	0x0377DA80 STR X8, [X20 + 0x140]
	0x0377DA84 B.EQ 0x377E2BC
	0x0377DA88 ADRP X8, 0x99E000
	0x0377DA8C LDR X8, [X8 + 0x780]
	0x0377DA90 CMP W1, 0x26
	0x0377DA94 LDR X8, [X8]
	0x0377DA98 STR X8, [X20 + 0x148]
	0x0377DA9C B.LS 0x377E2BC
	0x0377DAA0 ADRP X8, 0x99E000
	0x0377DAA4 LDR X8, [X8 + 0x788]
	0x0377DAA8 CMP W1, 0x27
	0x0377DAAC LDR X8, [X8]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+32], D9
	003 Move [X31+40], D8
	004 Move [X31+48], X30
	005 Move [X31+64], X22
	006 Move [X31+72], X21
	007 Move [X31+80], X20
	008 Move [X31+88], X19
	009 NotImplemented "Instruction MRS not yet implemented."
	010 Move X8, [X20+40]
	011 Move X22, 0xC64000
	012 Move X21, 0x9CB000
	013 Move V8, V1
	014 Move [X31+24], X8
	015 Move W8, [X22+3965]
	016 Move X21, [X21+168]
	017 Move V9, V0
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {28}
	023 Move X0, 0x9CB000
	024 Move X0, [X0+168]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X22+3965], W8
	028 Move V0, V9
	029 Move V1, V8
	030 Move X0, X31
	031 Call SetIMECursorPositionCommand.Create, X0
	032 Move X2, [X21]
	033 Move [X31+8], X0
	034 Move [X31+16], X1
	035 Add X1, X31, 8
	036 Move X0, X19
	037 Call InputDevice.ExecuteCommand, X0, X1
	038 Move X8, [X20+40]
	039 Move X9, [X31+24]
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move X20, [X31+80]
	042 Move X19, [X31+88]
	043 Move X22, [X31+64]
	044 Move X21, [X31+72]
	045 Move X30, [X31+48]
	046 Move D9, [X31+32]
	047 Move D8, [X31+40]
	048 Add X31, X31, 96
	049 Return 
	050 Call 0x3EB2B20

Method: System.String get_keyboardLayout()

Disassembly:
	0x0377DAB0 STR X8, [X20 + 0x150]
	0x0377DAB4 B.EQ 0x377E2BC
	0x0377DAB8 ADRP X8, 0x9A3000
	0x0377DABC LDR X8, [X8 + 0x3D0]
	0x0377DAC0 CMP W1, 0x28
	0x0377DAC4 LDR X8, [X8]
	0x0377DAC8 STR X8, [X20 + 0x158]
	0x0377DACC B.LS 0x377E2BC
	0x0377DAD0 ADRP X8, 0x99A000
	0x0377DAD4 LDR X8, [X8 + 0xEC0]
	0x0377DAD8 CMP W1, 0x29
	0x0377DADC LDR X8, [X8]
	0x0377DAE0 STR X8, [X20 + 0x160]
	0x0377DAE4 B.EQ 0x377E2BC
	0x0377DAE8 ADRP X8, 0x987000

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W8, [X0+160]
	004 Move X19, X0
	005 Move TEMP, X8
	006 And TEMP, TEMP, 1
	007 Compare TEMP, 1
	008 JumpIfEqual {17}
	009 Move X8, [X19]
	010 Move X0, X19
	011 Move X9, [X8+536]
	012 Move X1, [X8+544]
	013 NotImplemented "Instruction BLR not yet implemented."
	014 Move W8, [X19+160]
	015 Or W8, W8, 1
	016 Move [X19+160], W8
	017 Move X0, [X19+432]
	018 Move X30, [X31+16]
	019 Move X19, [X31+24]
	020 Return X0

Method: System.Void set_keyboardLayout(System.String value)

Disassembly:
	0x0377DAEC LDR X8, [X8 + 0x338]
	0x0377DAF0 CMP W1, 0x2A

ISIL:
	001 Move [X0+432], X1
	002 Return 

Method: UnityEngine.InputSystem.Controls.AnyKeyControl get_anyKey()

Disassembly:
	0x0377DAF4 LDR X8, [X8]
	0x0377DAF8 STR X8, [X20 + 0x168]

ISIL:
	001 Move X0, [X0+368]
	002 Return X0

Method: System.Void set_anyKey(UnityEngine.InputSystem.Controls.AnyKeyControl value)

Disassembly:
	0x0377DAFC B.LS 0x377E2BC
	0x0377DB00 ADRP X8, 0x987000

ISIL:
	001 Move [X0+368], X1
	002 Return 

Method: UnityEngine.InputSystem.Controls.KeyControl get_spaceKey()

Disassembly:
	0x0377DB04 LDR X8, [X8 + 0x118]
	0x0377DB08 CMP W1, 0x2B

ISIL:
	001 Move W1, 1

Method: UnityEngine.InputSystem.Controls.KeyControl get_enterKey()

Disassembly:
	0x0377DB90 ADRP X8, 0x987000
	0x0377DB94 LDR X8, [X8 + 0x9A8]

ISIL:
	001 Move W1, 2
	002 Call Keyboard.get_Item, X0, X1
	003 Return X0

Method: UnityEngine.InputSystem.Controls.KeyControl get_tabKey()

Disassembly:
	0x0377DB98 CMP W1, 0x31
	0x0377DB9C LDR X8, [X8]

ISIL:
	001 Move W1, 3
	002 Call Keyboard.get_Item, X0, X1
	003 Return X0

Method: UnityEngine.InputSystem.Controls.KeyControl get_backquoteKey()

Disassembly:
	0x0377DBA0 STR X8, [X20 + 0x1A0]
	0x0377DBA4 B.EQ 0x377E2BC

ISIL:
	001 Move W1, 4
	002 Call Keyboard.get_Item, X0, X1
	003 Return X0

Method: UnityEngine.InputSystem.Controls.KeyControl get_quoteKey()

Disassembly:
	0x0377DBA8 ADRP X8, 0x978000
	0x0377DBAC LDR X8, [X8 + 0x4B0]

ISIL:
	001 Move W1, 5
	002 Call Keyboard.get_Item, X0, X1
	003 Return X0

Method: UnityEngine.InputSystem.Controls.KeyControl get_semicolonKey()

Disassembly:
	0x0377DBB0 CMP W1, 0x32
	0x0377DBB4 LDR X8, [X8]

ISIL:
	001 Move W1, 6
	002 Call Keyboard.get_Item, X0, X1
	003 Return X0

Method: UnityEngine.InputSystem.Controls.KeyControl get_commaKey()

Disassembly:
	0x0377DBB8 STR X8, [X20 + 0x1A8]
	0x0377DBBC B.LS 0x377E2BC

ISIL:
	001 Move W1, 7
	002 Call Keyboard.get_Item, X0, X1
	003 Return X0

Method: UnityEngine.InputSystem.Controls.KeyControl get_periodKey()

Disassembly:
	0x0377DBC0 ADRP X8, 0x9CA000
	0x0377DBC4 LDR X8, [X8 + 0x178]

ISIL:
	001 Move W1, 8
	002 Call Keyboard.get_Item, X0, X1
	003 Return X0

Method: UnityEngine.InputSystem.Controls.KeyControl get_slashKey()

Disassembly:
	0x0377DBC8 CMP W1, 0x33
	0x0377DBCC LDR X8, [X8]

ISIL:
	001 Move W1, 9
	002 Call Keyboard.get_Item, X0, X1
	003 Return X0

Method: UnityEngine.InputSystem.Controls.KeyControl get_backslashKey()

Disassembly:
	0x0377DBD0 STR X8, [X20 + 0x1B0]
	0x0377DBD4 B.EQ 0x377E2BC

ISIL:
	001 Move W1, 10
	002 Call Keyboard.get_Item, X0, X1
	003 Return X0

Method: UnityEngine.InputSystem.Controls.KeyControl get_leftBracketKey()

Disassembly:
	0x0377DBD8 ADRP X8, 0x9CA000
	0x0377DBDC LDR X8, [X8 + 0x380]

ISIL:
	001 Move W1, 11
	002 Call Keyboard.get_Item, X0, X1
	003 Return X0

Method: UnityEngine.InputSystem.Controls.KeyControl get_rightBracketKey()

Disassembly:
	0x0377DBE0 CMP W1, 0x34
	0x0377DBE4 LDR X8, [X8]

ISIL:
	001 Move W1, 12
	002 Call Keyboard.get_Item, X0, X1
	003 Return X0

Method: UnityEngine.InputSystem.Controls.KeyControl get_minusKey()

Disassembly:
	0x0377DBE8 STR X8, [X20 + 0x1B8]
	0x0377DBEC B.LS 0x377E2BC

ISIL:
	001 Move W1, 13
	002 Call Keyboard.get_Item, X0, X1
	003 Return X0

Method: UnityEngine.InputSystem.Controls.KeyControl get_equalsKey()

Disassembly:
	0x0377DBF0 ADRP X8, 0x9CA000
	0x0377DBF4 LDR X8, [X8 + 0x238]

ISIL:
	001 Move W1, 14
	002 Call Keyboard.get_Item, X0, X1
	003 Return X0

Method: UnityEngine.InputSystem.Controls.KeyControl get_aKey()

Disassembly:
	0x0377DBF8 CMP W1, 0x35
	0x0377DBFC LDR X8, [X8]

ISIL:
	001 Move W1, 15
	002 Call Keyboard.get_Item, X0, X1
	003 Return X0

Method: UnityEngine.InputSystem.Controls.KeyControl get_bKey()

Disassembly:
	0x0377DC00 STR X8, [X20 + 0x1C0]
	0x0377DC04 B.EQ 0x377E2BC

ISIL:
	001 Move W1, 16
	002 Call Keyboard.get_Item, X0, X1
	003 Return X0

Method: UnityEngine.InputSystem.Controls.KeyControl get_cKey()

Disassembly:
	0x0377DC08 ADRP X8, 0x9CA000
	0x0377DC0C LDR X8, [X8 + 0x328]

ISIL:
	001 Move W1, 17
	002 Call Keyboard.get_Item, X0, X1
	003 Return X0

Method: UnityEngine.InputSystem.Controls.KeyControl get_dKey()

Disassembly:
	0x0377DC10 CMP W1, 0x36
	0x0377DC14 LDR X8, [X8]

ISIL:
	001 Move W1, 18
	002 Call Keyboard.get_Item, X0, X1
	003 Return X0

Method: UnityEngine.InputSystem.Controls.KeyControl get_eKey()

Disassembly:
	0x0377DC18 STR X8, [X20 + 0x1C8]
	0x0377DC1C B.LS 0x377E2BC

ISIL:
	001 Move W1, 19
	002 Call Keyboard.get_Item, X0, X1
	003 Return X0

Method: UnityEngine.InputSystem.Controls.KeyControl get_fKey()

Disassembly:
	0x0377DC20 ADRP X8, 0x9CA000
	0x0377DC24 LDR X8, [X8 + 0x1C0]

ISIL:
	001 Move W1, 20
	002 Call Keyboard.get_Item, X0, X1
	003 Return X0

Method: UnityEngine.InputSystem.Controls.KeyControl get_gKey()

Disassembly:
	0x0377DC28 CMP W1, 0x37
	0x0377DC2C LDR X8, [X8]

ISIL:
	001 Move W1, 21
	002 Call Keyboard.get_Item, X0, X1
	003 Return X0

Method: UnityEngine.InputSystem.Controls.KeyControl get_hKey()

Disassembly:
	0x0377DC30 STR X8, [X20 + 0x1D0]
	0x0377DC34 B.EQ 0x377E2BC

ISIL:
	001 Move W1, 22
	002 Call Keyboard.get_Item, X0, X1
	003 Return X0

Method: UnityEngine.InputSystem.Controls.KeyControl get_iKey()

Disassembly:
	0x0377DC38 ADRP X8, 0x9CA000
	0x0377DC3C LDR X8, [X8 + 0x228]

ISIL:
	001 Move W1, 23
	002 Call Keyboard.get_Item, X0, X1
	003 Return X0

Method: UnityEngine.InputSystem.Controls.KeyControl get_jKey()

Disassembly:
	0x0377DC40 CMP W1, 0x38
	0x0377DC44 LDR X8, [X8]

ISIL:
	001 Move W1, 24
	002 Call Keyboard.get_Item, X0, X1
	003 Return X0

Method: UnityEngine.InputSystem.Controls.KeyControl get_kKey()

Disassembly:
	0x0377DC48 STR X8, [X20 + 0x1D8]
	0x0377DC4C B.LS 0x377E2BC

ISIL:
	001 Move W1, 25
	002 Call Keyboard.get_Item, X0, X1
	003 Return X0

Method: UnityEngine.InputSystem.Controls.KeyControl get_lKey()

Disassembly:
	0x0377DC50 ADRP X8, 0x9CA000
	0x0377DC54 LDR X8, [X8 + 0x378]

ISIL:
	001 Move W1, 26
	002 Call Keyboard.get_Item, X0, X1
	003 Return X0

Method: UnityEngine.InputSystem.Controls.KeyControl get_mKey()

Disassembly:
	0x0377DC58 CMP W1, 0x39
	0x0377DC5C LDR X8, [X8]

ISIL:
	001 Move W1, 27
	002 Call Keyboard.get_Item, X0, X1
	003 Return X0

Method: UnityEngine.InputSystem.Controls.KeyControl get_nKey()

Disassembly:
	0x0377DC60 STR X8, [X20 + 0x1E0]
	0x0377DC64 B.EQ 0x377E2BC

ISIL:
	001 Move W1, 28
	002 Call Keyboard.get_Item, X0, X1
	003 Return X0

Method: UnityEngine.InputSystem.Controls.KeyControl get_oKey()

Disassembly:
	0x0377DC68 ADRP X8, 0x9CA000
	0x0377DC6C LDR X8, [X8 + 0x260]

ISIL:
	001 Move W1, 29
	002 Call Keyboard.get_Item, X0, X1
	003 Return X0

Method: UnityEngine.InputSystem.Controls.KeyControl get_pKey()

Disassembly:
	0x0377DC70 CMP W1, 0x3A
	0x0377DC74 LDR X8, [X8]

ISIL:
	001 Move W1, 30
	002 Call Keyboard.get_Item, X0, X1
	003 Return X0

Method: UnityEngine.InputSystem.Controls.KeyControl get_qKey()

Disassembly:
	0x0377DC78 STR X8, [X20 + 0x1E8]
	0x0377DC7C B.LS 0x377E2BC

ISIL:
	001 Move W1, 31
	002 Call Keyboard.get_Item, X0, X1
	003 Return X0

Method: UnityEngine.InputSystem.Controls.KeyControl get_rKey()

Disassembly:
	0x0377DC80 ADRP X8, 0x9CA000
	0x0377DC84 LDR X8, [X8 + 0x190]

ISIL:
	001 Move W1, 32
	002 Call Keyboard.get_Item, X0, X1
	003 Return X0

Method: UnityEngine.InputSystem.Controls.KeyControl get_sKey()

Disassembly:
	0x0377DC88 CMP W1, 0x3B
	0x0377DC8C LDR X8, [X8]

ISIL:
	001 Move W1, 33
	002 Call Keyboard.get_Item, X0, X1
	003 Return X0

Method: UnityEngine.InputSystem.Controls.KeyControl get_tKey()

Disassembly:
	0x0377DC90 STR X8, [X20 + 0x1F0]
	0x0377DC94 B.EQ 0x377E2BC

ISIL:
	001 Move W1, 34
	002 Call Keyboard.get_Item, X0, X1
	003 Return X0

Method: UnityEngine.InputSystem.Controls.KeyControl get_uKey()

Disassembly:
	0x0377DC98 ADRP X8, 0x9CA000
	0x0377DC9C LDR X8, [X8 + 0x310]

ISIL:
	001 Move W1, 35
	002 Call Keyboard.get_Item, X0, X1
	003 Return X0

Method: UnityEngine.InputSystem.Controls.KeyControl get_vKey()

Disassembly:
	0x0377DCA0 CMP W1, 0x3C
	0x0377DCA4 LDR X8, [X8]

ISIL:
	001 Move W1, 36
	002 Call Keyboard.get_Item, X0, X1
	003 Return X0

Method: UnityEngine.InputSystem.Controls.KeyControl get_wKey()

Disassembly:
	0x0377DCA8 STR X8, [X20 + 0x1F8]
	0x0377DCAC B.LS 0x377E2BC

ISIL:
	001 Move W1, 37
	002 Call Keyboard.get_Item, X0, X1
	003 Return X0

Method: UnityEngine.InputSystem.Controls.KeyControl get_xKey()

Disassembly:
	0x0377DCB0 ADRP X8, 0x9CA000
	0x0377DCB4 LDR X8, [X8 + 0x170]

ISIL:
	001 Move W1, 38
	002 Call Keyboard.get_Item, X0, X1
	003 Return X0

Method: UnityEngine.InputSystem.Controls.KeyControl get_yKey()

Disassembly:
	0x0377DCB8 CMP W1, 0x3D
	0x0377DCBC LDR X8, [X8]

ISIL:
	001 Move W1, 39
	002 Call Keyboard.get_Item, X0, X1
	003 Return X0

Method: UnityEngine.InputSystem.Controls.KeyControl get_zKey()

Disassembly:
	0x0377DCC0 STR X8, [X20 + 0x200]
	0x0377DCC4 B.EQ 0x377E2BC

ISIL:
	001 Move W1, 40
	002 Call Keyboard.get_Item, X0, X1
	003 Return X0

Method: UnityEngine.InputSystem.Controls.KeyControl get_digit1Key()

Disassembly:
	0x0377DCC8 ADRP X8, 0x9CA000
	0x0377DCCC LDR X8, [X8 + 0x158]

ISIL:
	001 Move W1, 41
	002 Call Keyboard.get_Item, X0, X1
	003 Return X0

Method: UnityEngine.InputSystem.Controls.KeyControl get_digit2Key()

Disassembly:
	0x0377DCD0 CMP W1, 0x3E
	0x0377DCD4 LDR X8, [X8]

ISIL:
	001 Move W1, 42
	002 Call Keyboard.get_Item, X0, X1
	003 Return X0

Method: UnityEngine.InputSystem.Controls.KeyControl get_digit3Key()

Disassembly:
	0x0377DCD8 STR X8, [X20 + 0x208]
	0x0377DCDC B.LS 0x377E2BC

ISIL:
	001 Move W1, 43
	002 Call Keyboard.get_Item, X0, X1
	003 Return X0

Method: UnityEngine.InputSystem.Controls.KeyControl get_digit4Key()

Disassembly:
	0x0377DCE0 ADRP X8, 0x9CA000
	0x0377DCE4 LDR X8, [X8 + 0x2A0]

ISIL:
	001 Move W1, 44
	002 Call Keyboard.get_Item, X0, X1
	003 Return X0

Method: UnityEngine.InputSystem.Controls.KeyControl get_digit5Key()

Disassembly:
	0x0377DCE8 CMP W1, 0x3F
	0x0377DCEC LDR X8, [X8]

ISIL:
	001 Move W1, 45
	002 Call Keyboard.get_Item, X0, X1
	003 Return X0

Method: UnityEngine.InputSystem.Controls.KeyControl get_digit6Key()

Disassembly:
	0x0377DCF0 STR X8, [X20 + 0x210]
	0x0377DCF4 B.EQ 0x377E2BC

ISIL:
	001 Move W1, 46
	002 Call Keyboard.get_Item, X0, X1
	003 Return X0

Method: UnityEngine.InputSystem.Controls.KeyControl get_digit7Key()

Disassembly:
	0x0377DCF8 ADRP X8, 0x9CA000
	0x0377DCFC LDR X8, [X8 + 0xF0]

ISIL:
	001 Move W1, 47
	002 Call Keyboard.get_Item, X0, X1
	003 Return X0

Method: UnityEngine.InputSystem.Controls.KeyControl get_digit8Key()

Disassembly:
	0x0377DD00 CMP W1, 0x40
	0x0377DD04 LDR X8, [X8]

ISIL:
	001 Move W1, 48
	002 Call Keyboard.get_Item, X0, X1
	003 Return X0

Method: UnityEngine.InputSystem.Controls.KeyControl get_digit9Key()

Disassembly:
	0x0377DD08 STR X8, [X20 + 0x218]
	0x0377DD0C B.LS 0x377E2BC

ISIL:
	001 Move W1, 49
	002 Call Keyboard.get_Item, X0, X1
	003 Return X0

Method: UnityEngine.InputSystem.Controls.KeyControl get_digit0Key()

Disassembly:
	0x0377DD10 ADRP X8, 0x9CA000
	0x0377DD14 LDR X8, [X8 + 0x220]

ISIL:
	001 Move W1, 50
	002 Call Keyboard.get_Item, X0, X1
	003 Return X0

Method: UnityEngine.InputSystem.Controls.KeyControl get_leftShiftKey()

Disassembly:
	0x0377DD18 CMP W1, 0x41
	0x0377DD1C LDR X8, [X8]

ISIL:
	001 Move W1, 51
	002 Call Keyboard.get_Item, X0, X1
	003 Return X0

Method: UnityEngine.InputSystem.Controls.KeyControl get_rightShiftKey()

Disassembly:
	0x0377DD20 STR X8, [X20 + 0x220]
	0x0377DD24 B.EQ 0x377E2BC

ISIL:
	001 Move W1, 52
	002 Call Keyboard.get_Item, X0, X1
	003 Return X0

Method: UnityEngine.InputSystem.Controls.KeyControl get_leftAltKey()

Disassembly:
	0x0377DD28 ADRP X8, 0x9CA000
	0x0377DD2C LDR X8, [X8 + 0x1D0]

ISIL:
	001 Move W1, 53
	002 Call Keyboard.get_Item, X0, X1
	003 Return X0

Method: UnityEngine.InputSystem.Controls.KeyControl get_rightAltKey()

Disassembly:
	0x0377DD30 CMP W1, 0x42
	0x0377DD34 LDR X8, [X8]

ISIL:
	001 Move W1, 54
	002 Call Keyboard.get_Item, X0, X1
	003 Return X0

Method: UnityEngine.InputSystem.Controls.KeyControl get_leftCtrlKey()

Disassembly:
	0x0377DD38 STR X8, [X20 + 0x228]
	0x0377DD3C B.LS 0x377E2BC

ISIL:
	001 Move W1, 55
	002 Call Keyboard.get_Item, X0, X1
	003 Return X0

Method: UnityEngine.InputSystem.Controls.KeyControl get_rightCtrlKey()

Disassembly:
	0x0377DD40 ADRP X8, 0x9CA000
	0x0377DD44 LDR X8, [X8 + 0x1F8]

ISIL:
	001 Move W1, 56
	002 Call Keyboard.get_Item, X0, X1
	003 Return X0

Method: UnityEngine.InputSystem.Controls.KeyControl get_leftMetaKey()

Disassembly:
	0x0377DD48 CMP W1, 0x43
	0x0377DD4C LDR X8, [X8]

ISIL:
	001 Move W1, 57
	002 Call Keyboard.get_Item, X0, X1
	003 Return X0

Method: UnityEngine.InputSystem.Controls.KeyControl get_rightMetaKey()

Disassembly:
	0x0377DD50 STR X8, [X20 + 0x230]
	0x0377DD54 B.EQ 0x377E2BC

ISIL:
	001 Move W1, 58
	002 Call Keyboard.get_Item, X0, X1
	003 Return X0

Method: UnityEngine.InputSystem.Controls.KeyControl get_leftWindowsKey()

Disassembly:
	0x0377DD58 ADRP X8, 0x9C7000
	0x0377DD5C LDR X8, [X8 + 0xE98]

ISIL:
	001 Move W1, 57
	002 Call Keyboard.get_Item, X0, X1
	003 Return X0

Method: UnityEngine.InputSystem.Controls.KeyControl get_rightWindowsKey()

Disassembly:
	0x0377DD60 CMP W1, 0x44
	0x0377DD64 LDR X8, [X8]

ISIL:
	001 Move W1, 58
	002 Call Keyboard.get_Item, X0, X1
	003 Return X0

Method: UnityEngine.InputSystem.Controls.KeyControl get_leftAppleKey()

Disassembly:
	0x0377DD68 STR X8, [X20 + 0x238]
	0x0377DD6C B.LS 0x377E2BC

ISIL:
	001 Move W1, 57
	002 Call Keyboard.get_Item, X0, X1
	003 Return X0

Method: UnityEngine.InputSystem.Controls.KeyControl get_rightAppleKey()

Disassembly:
	0x0377DD70 ADRP X8, 0x9CA000
	0x0377DD74 LDR X8, [X8 + 0x298]

ISIL:
	001 Move W1, 58
	002 Call Keyboard.get_Item, X0, X1
	003 Return X0

Method: UnityEngine.InputSystem.Controls.KeyControl get_leftCommandKey()

Disassembly:
	0x0377DD78 CMP W1, 0x45
	0x0377DD7C LDR X8, [X8]

ISIL:
	001 Move W1, 57
	002 Call Keyboard.get_Item, X0, X1
	003 Return X0

Method: UnityEngine.InputSystem.Controls.KeyControl get_rightCommandKey()

Disassembly:
	0x0377DD80 STR X8, [X20 + 0x240]
	0x0377DD84 B.EQ 0x377E2BC

ISIL:
	001 Move W1, 58
	002 Call Keyboard.get_Item, X0, X1
	003 Return X0

Method: UnityEngine.InputSystem.Controls.KeyControl get_contextMenuKey()

Disassembly:
	0x0377DD88 ADRP X8, 0x9CA000
	0x0377DD8C LDR X8, [X8 + 0x288]

ISIL:
	001 Move W1, 59
	002 Call Keyboard.get_Item, X0, X1
	003 Return X0

Method: UnityEngine.InputSystem.Controls.KeyControl get_escapeKey()

Disassembly:
	0x0377DD90 CMP W1, 0x46
	0x0377DD94 LDR X8, [X8]

ISIL:
	001 Move W1, 60
	002 Call Keyboard.get_Item, X0, X1
	003 Return X0

Method: UnityEngine.InputSystem.Controls.KeyControl get_leftArrowKey()

Disassembly:
	0x0377DD98 STR X8, [X20 + 0x248]
	0x0377DD9C B.LS 0x377E2BC

ISIL:
	001 Move W1, 61
	002 Call Keyboard.get_Item, X0, X1
	003 Return X0

Method: UnityEngine.InputSystem.Controls.KeyControl get_rightArrowKey()

Disassembly:
	0x0377DDA0 ADRP X8, 0x9CA000
	0x0377DDA4 LDR X8, [X8 + 0xF8]

ISIL:
	001 Move W1, 62
	002 Call Keyboard.get_Item, X0, X1
	003 Return X0

Method: UnityEngine.InputSystem.Controls.KeyControl get_upArrowKey()

Disassembly:
	0x0377DDA8 CMP W1, 0x47
	0x0377DDAC LDR X8, [X8]

ISIL:
	001 Move W1, 63
	002 Call Keyboard.get_Item, X0, X1
	003 Return X0

Method: UnityEngine.InputSystem.Controls.KeyControl get_downArrowKey()

Disassembly:
	0x0377DDB0 STR X8, [X20 + 0x250]
	0x0377DDB4 B.EQ 0x377E2BC

ISIL:
	001 Move W1, 64
	002 Call Keyboard.get_Item, X0, X1
	003 Return X0

Method: UnityEngine.InputSystem.Controls.KeyControl get_backspaceKey()

Disassembly:
	0x0377DDB8 ADRP X8, 0x9CA000
	0x0377DDBC LDR X8, [X8 + 0x150]

ISIL:
	001 Move W1, 65
	002 Call Keyboard.get_Item, X0, X1
	003 Return X0

Method: UnityEngine.InputSystem.Controls.KeyControl get_pageDownKey()

Disassembly:
	0x0377DDC0 CMP W1, 0x48
	0x0377DDC4 LDR X8, [X8]

ISIL:
	001 Move W1, 66
	002 Call Keyboard.get_Item, X0, X1
	003 Return X0

Method: UnityEngine.InputSystem.Controls.KeyControl get_pageUpKey()

Disassembly:
	0x0377DDC8 STR X8, [X20 + 0x258]
	0x0377DDCC B.LS 0x377E2BC

ISIL:
	001 Move W1, 67
	002 Call Keyboard.get_Item, X0, X1
	003 Return X0

Method: UnityEngine.InputSystem.Controls.KeyControl get_homeKey()

Disassembly:
	0x0377DDD0 ADRP X8, 0x9CA000
	0x0377DDD4 LDR X8, [X8 + 0x120]

ISIL:
	001 Move W1, 68
	002 Call Keyboard.get_Item, X0, X1
	003 Return X0

Method: UnityEngine.InputSystem.Controls.KeyControl get_endKey()

Disassembly:
	0x0377DDD8 CMP W1, 0x49
	0x0377DDDC LDR X8, [X8]

ISIL:
	001 Move W1, 69
	002 Call Keyboard.get_Item, X0, X1
	003 Return X0

Method: UnityEngine.InputSystem.Controls.KeyControl get_insertKey()

Disassembly:
	0x0377DDE0 STR X8, [X20 + 0x260]
	0x0377DDE4 B.EQ 0x377E2BC

ISIL:
	001 Move W1, 70
	002 Call Keyboard.get_Item, X0, X1
	003 Return X0

Method: UnityEngine.InputSystem.Controls.KeyControl get_deleteKey()

Disassembly:
	0x0377DDE8 ADRP X8, 0x9CA000
	0x0377DDEC LDR X8, [X8 + 0x2F0]

ISIL:
	001 Move W1, 71
	002 Call Keyboard.get_Item, X0, X1
	003 Return X0

Method: UnityEngine.InputSystem.Controls.KeyControl get_capsLockKey()

Disassembly:
	0x0377DDF0 CMP W1, 0x4A
	0x0377DDF4 LDR X8, [X8]

ISIL:
	001 Move W1, 72
	002 Call Keyboard.get_Item, X0, X1
	003 Return X0

Method: UnityEngine.InputSystem.Controls.KeyControl get_scrollLockKey()

Disassembly:
	0x0377DDF8 STR X8, [X20 + 0x268]
	0x0377DDFC B.LS 0x377E2BC

ISIL:
	001 Move W1, 75
	002 Call Keyboard.get_Item, X0, X1
	003 Return X0

Method: UnityEngine.InputSystem.Controls.KeyControl get_numLockKey()

Disassembly:
	0x0377DE00 ADRP X8, 0x9CA000
	0x0377DE04 LDR X8, [X8 + 0x1E0]

ISIL:
	001 Move W1, 73
	002 Call Keyboard.get_Item, X0, X1
	003 Return X0

Method: UnityEngine.InputSystem.Controls.KeyControl get_printScreenKey()

Disassembly:
	0x0377DE08 CMP W1, 0x4B
	0x0377DE0C LDR X8, [X8]

ISIL:
	001 Move W1, 74
	002 Call Keyboard.get_Item, X0, X1
	003 Return X0

Method: UnityEngine.InputSystem.Controls.KeyControl get_pauseKey()

Disassembly:
	0x0377DE10 STR X8, [X20 + 0x270]
	0x0377DE14 B.EQ 0x377E2BC

ISIL:
	001 Move W1, 76
	002 Call Keyboard.get_Item, X0, X1
	003 Return X0

Method: UnityEngine.InputSystem.Controls.KeyControl get_numpadEnterKey()

Disassembly:
	0x0377DE18 ADRP X8, 0x9CA000
	0x0377DE1C LDR X8, [X8 + 0x1F0]

ISIL:
	001 Move W1, 77
	002 Call Keyboard.get_Item, X0, X1
	003 Return X0

Method: UnityEngine.InputSystem.Controls.KeyControl get_numpadDivideKey()

Disassembly:
	0x0377DE20 CMP W1, 0x4C
	0x0377DE24 LDR X8, [X8]

ISIL:
	001 Move W1, 78
	002 Call Keyboard.get_Item, X0, X1
	003 Return X0

Method: UnityEngine.InputSystem.Controls.KeyControl get_numpadMultiplyKey()

Disassembly:
	0x0377DE28 STR X8, [X20 + 0x278]
	0x0377DE2C B.LS 0x377E2BC

ISIL:
	001 Move W1, 79
	002 Call Keyboard.get_Item, X0, X1
	003 Return X0

Method: UnityEngine.InputSystem.Controls.KeyControl get_numpadMinusKey()

Disassembly:
	0x0377DE30 ADRP X8, 0x9CA000
	0x0377DE34 LDR X8, [X8 + 0x218]

ISIL:
	001 Move W1, 81
	002 Call Keyboard.get_Item, X0, X1
	003 Return X0

Method: UnityEngine.InputSystem.Controls.KeyControl get_numpadPlusKey()

Disassembly:
	0x0377DE38 CMP W1, 0x4D
	0x0377DE3C LDR X8, [X8]

ISIL:
	001 Move W1, 80
	002 Call Keyboard.get_Item, X0, X1
	003 Return X0

Method: UnityEngine.InputSystem.Controls.KeyControl get_numpadPeriodKey()

Disassembly:
	0x0377DE40 STR X8, [X20 + 0x280]
	0x0377DE44 B.EQ 0x377E2BC

ISIL:
	001 Move W1, 82
	002 Call Keyboard.get_Item, X0, X1
	003 Return X0

Method: UnityEngine.InputSystem.Controls.KeyControl get_numpadEqualsKey()

Disassembly:
	0x0377DE48 ADRP X8, 0x9CA000
	0x0377DE4C LDR X8, [X8 + 0x168]

ISIL:
	001 Move W1, 83
	002 Call Keyboard.get_Item, X0, X1
	003 Return X0

Method: UnityEngine.InputSystem.Controls.KeyControl get_numpad0Key()

Disassembly:
	0x0377DE50 CMP W1, 0x4E
	0x0377DE54 LDR X8, [X8]

ISIL:
	001 Move W1, 84
	002 Call Keyboard.get_Item, X0, X1
	003 Return X0

Method: UnityEngine.InputSystem.Controls.KeyControl get_numpad1Key()

Disassembly:
	0x0377DE58 STR X8, [X20 + 0x288]
	0x0377DE5C B.LS 0x377E2BC

ISIL:
	001 Move W1, 85
	002 Call Keyboard.get_Item, X0, X1
	003 Return X0

Method: UnityEngine.InputSystem.Controls.KeyControl get_numpad2Key()

Disassembly:
	0x0377DE60 ADRP X8, 0x9CA000
	0x0377DE64 LDR X8, [X8 + 0x278]

ISIL:
	001 Move W1, 86
	002 Call Keyboard.get_Item, X0, X1
	003 Return X0

Method: UnityEngine.InputSystem.Controls.KeyControl get_numpad3Key()

Disassembly:
	0x0377DE68 CMP W1, 0x4F
	0x0377DE6C LDR X8, [X8]

ISIL:
	001 Move W1, 87
	002 Call Keyboard.get_Item, X0, X1
	003 Return X0

Method: UnityEngine.InputSystem.Controls.KeyControl get_numpad4Key()

Disassembly:
	0x0377DE70 STR X8, [X20 + 0x290]
	0x0377DE74 B.EQ 0x377E2BC

ISIL:
	001 Move W1, 88
	002 Call Keyboard.get_Item, X0, X1
	003 Return X0

Method: UnityEngine.InputSystem.Controls.KeyControl get_numpad5Key()

Disassembly:
	0x0377DE78 ADRP X8, 0x9CA000
	0x0377DE7C LDR X8, [X8 + 0x2A8]

ISIL:
	001 Move W1, 89
	002 Call Keyboard.get_Item, X0, X1
	003 Return X0

Method: UnityEngine.InputSystem.Controls.KeyControl get_numpad6Key()

Disassembly:
	0x0377DE80 CMP W1, 0x50
	0x0377DE84 LDR X8, [X8]

ISIL:
	001 Move W1, 90
	002 Call Keyboard.get_Item, X0, X1
	003 Return X0

Method: UnityEngine.InputSystem.Controls.KeyControl get_numpad7Key()

Disassembly:
	0x0377DE88 STR X8, [X20 + 0x298]
	0x0377DE8C B.LS 0x377E2BC

ISIL:
	001 Move W1, 91
	002 Call Keyboard.get_Item, X0, X1
	003 Return X0

Method: UnityEngine.InputSystem.Controls.KeyControl get_numpad8Key()

Disassembly:
	0x0377DE90 ADRP X8, 0x9CA000
	0x0377DE94 LDR X8, [X8 + 0x338]

ISIL:
	001 Move W1, 92
	002 Call Keyboard.get_Item, X0, X1
	003 Return X0

Method: UnityEngine.InputSystem.Controls.KeyControl get_numpad9Key()

Disassembly:
	0x0377DE98 CMP W1, 0x51
	0x0377DE9C LDR X8, [X8]

ISIL:
	001 Move W1, 93
	002 Call Keyboard.get_Item, X0, X1
	003 Return X0

Method: UnityEngine.InputSystem.Controls.KeyControl get_f1Key()

Disassembly:
	0x0377DEA0 STR X8, [X20 + 0x2A0]
	0x0377DEA4 B.EQ 0x377E2BC

ISIL:
	001 Move W1, 94
	002 Call Keyboard.get_Item, X0, X1
	003 Return X0

Method: UnityEngine.InputSystem.Controls.KeyControl get_f2Key()

Disassembly:
	0x0377DEA8 ADRP X8, 0x9CA000
	0x0377DEAC LDR X8, [X8 + 0x198]

ISIL:
	001 Move W1, 95
	002 Call Keyboard.get_Item, X0, X1
	003 Return X0

Method: UnityEngine.InputSystem.Controls.KeyControl get_f3Key()

Disassembly:
	0x0377DEB0 CMP W1, 0x52
	0x0377DEB4 LDR X8, [X8]

ISIL:
	001 Move W1, 96
	002 Call Keyboard.get_Item, X0, X1
	003 Return X0

Method: UnityEngine.InputSystem.Controls.KeyControl get_f4Key()

Disassembly:
	0x0377DEB8 STR X8, [X20 + 0x2A8]
	0x0377DEBC B.LS 0x377E2BC

ISIL:
	001 Move W1, 97
	002 Call Keyboard.get_Item, X0, X1
	003 Return X0

Method: UnityEngine.InputSystem.Controls.KeyControl get_f5Key()

Disassembly:
	0x0377DEC0 ADRP X8, 0x9CA000
	0x0377DEC4 LDR X8, [X8 + 0x140]

ISIL:
	001 Move W1, 98
	002 Call Keyboard.get_Item, X0, X1
	003 Return X0

Method: UnityEngine.InputSystem.Controls.KeyControl get_f6Key()

Disassembly:
	0x0377DEC8 CMP W1, 0x53
	0x0377DECC LDR X8, [X8]

ISIL:
	001 Move W1, 99
	002 Call Keyboard.get_Item, X0, X1
	003 Return X0

Method: UnityEngine.InputSystem.Controls.KeyControl get_f7Key()

Disassembly:
	0x0377DED0 STR X8, [X20 + 0x2B0]
	0x0377DED4 B.EQ 0x377E2BC

ISIL:
	001 Move W1, 100
	002 Call Keyboard.get_Item, X0, X1
	003 Return X0

Method: UnityEngine.InputSystem.Controls.KeyControl get_f8Key()

Disassembly:
	0x0377DED8 ADRP X8, 0x9CA000
	0x0377DEDC LDR X8, [X8 + 0x2C0]

ISIL:
	001 Move W1, 101
	002 Call Keyboard.get_Item, X0, X1
	003 Return X0

Method: UnityEngine.InputSystem.Controls.KeyControl get_f9Key()

Disassembly:
	0x0377DEE0 CMP W1, 0x54
	0x0377DEE4 LDR X8, [X8]

ISIL:
	001 Move W1, 102
	002 Call Keyboard.get_Item, X0, X1
	003 Return X0

Method: UnityEngine.InputSystem.Controls.KeyControl get_f10Key()

Disassembly:
	0x0377DEE8 STR X8, [X20 + 0x2B8]
	0x0377DEEC B.LS 0x377E2BC

ISIL:
	001 Move W1, 103
	002 Call Keyboard.get_Item, X0, X1
	003 Return X0

Method: UnityEngine.InputSystem.Controls.KeyControl get_f11Key()

Disassembly:
	0x0377DEF0 ADRP X8, 0x9CA000
	0x0377DEF4 LDR X8, [X8 + 0x268]

ISIL:
	001 Move W1, 104
	002 Call Keyboard.get_Item, X0, X1
	003 Return X0

Method: UnityEngine.InputSystem.Controls.KeyControl get_f12Key()

Disassembly:
	0x0377DEF8 CMP W1, 0x55
	0x0377DEFC LDR X8, [X8]

ISIL:
	001 Move W1, 105
	002 Call Keyboard.get_Item, X0, X1
	003 Return X0

Method: UnityEngine.InputSystem.Controls.KeyControl get_oem1Key()

Disassembly:
	0x0377DF00 STR X8, [X20 + 0x2C0]
	0x0377DF04 B.EQ 0x377E2BC

ISIL:
	001 Move W1, 106
	002 Call Keyboard.get_Item, X0, X1
	003 Return X0

Method: UnityEngine.InputSystem.Controls.KeyControl get_oem2Key()

Disassembly:
	0x0377DF08 ADRP X8, 0x9CA000
	0x0377DF0C LDR X8, [X8 + 0x208]

ISIL:
	001 Move W1, 107
	002 Call Keyboard.get_Item, X0, X1
	003 Return X0

Method: UnityEngine.InputSystem.Controls.KeyControl get_oem3Key()

Disassembly:
	0x0377DF10 CMP W1, 0x56
	0x0377DF14 LDR X8, [X8]

ISIL:
	001 Move W1, 108
	002 Call Keyboard.get_Item, X0, X1
	003 Return X0

Method: UnityEngine.InputSystem.Controls.KeyControl get_oem4Key()

Disassembly:
	0x0377DF18 STR X8, [X20 + 0x2C8]
	0x0377DF1C B.LS 0x377E2BC

ISIL:
	001 Move W1, 109
	002 Call Keyboard.get_Item, X0, X1
	003 Return X0

Method: UnityEngine.InputSystem.Controls.KeyControl get_oem5Key()

Disassembly:
	0x0377DF20 ADRP X8, 0x9CA000
	0x0377DF24 LDR X8, [X8 + 0x2C8]

ISIL:
	001 Move W1, 110
	002 Call Keyboard.get_Item, X0, X1
	003 Return X0

Method: UnityEngine.InputSystem.Controls.ButtonControl get_shiftKey()

Disassembly:
	0x0377DF28 CMP W1, 0x57
	0x0377DF2C LDR X8, [X8]

ISIL:
	001 Move X0, [X0+376]
	002 Return X0

Method: System.Void set_shiftKey(UnityEngine.InputSystem.Controls.ButtonControl value)

Disassembly:
	0x0377DF30 STR X8, [X20 + 0x2D0]
	0x0377DF34 B.EQ 0x377E2BC

ISIL:
	001 Move [X0+376], X1
	002 Return 

Method: UnityEngine.InputSystem.Controls.ButtonControl get_ctrlKey()

Disassembly:
	0x0377DF38 ADRP X8, 0x9CA000
	0x0377DF3C LDR X8, [X8 + 0x370]

ISIL:
	001 Move X0, [X0+384]
	002 Return X0

Method: System.Void set_ctrlKey(UnityEngine.InputSystem.Controls.ButtonControl value)

Disassembly:
	0x0377DF40 CMP W1, 0x58
	0x0377DF44 LDR X8, [X8]

ISIL:
	001 Move [X0+384], X1
	002 Return 

Method: UnityEngine.InputSystem.Controls.ButtonControl get_altKey()

Disassembly:
	0x0377DF48 STR X8, [X20 + 0x2D8]
	0x0377DF4C B.LS 0x377E2BC

ISIL:
	001 Move X0, [X0+392]
	002 Return X0

Method: System.Void set_altKey(UnityEngine.InputSystem.Controls.ButtonControl value)

Disassembly:
	0x0377DF50 ADRP X8, 0x9CA000
	0x0377DF54 LDR X8, [X8 + 0x100]

ISIL:
	001 Move [X0+392], X1
	002 Return 

Method: UnityEngine.InputSystem.Controls.ButtonControl get_imeSelected()

Disassembly:
	0x0377DF58 CMP W1, 0x59
	0x0377DF5C LDR X8, [X8]

ISIL:
	001 Move X0, [X0+400]
	002 Return X0

Method: System.Void set_imeSelected(UnityEngine.InputSystem.Controls.ButtonControl value)

Disassembly:
	0x0377DF60 STR X8, [X20 + 0x2E0]
	0x0377DF64 B.EQ 0x377E2BC

ISIL:
	001 Move [X0+400], X1
	002 Return 

Method: UnityEngine.InputSystem.Controls.KeyControl get_Item(UnityEngine.InputSystem.Key key)

Disassembly:
	0x0377DB0C LDR X8, [X8]
	0x0377DB10 STR X8, [X20 + 0x170]
	0x0377DB14 B.EQ 0x377E2BC
	0x0377DB18 ADRP X8, 0x98F000
	0x0377DB1C LDR X8, [X8 + 0x428]
	0x0377DB20 CMP W1, 0x2C
	0x0377DB24 LDR X8, [X8]
	0x0377DB28 STR X8, [X20 + 0x178]
	0x0377DB2C B.LS 0x377E2BC
	0x0377DB30 ADRP X8, 0x99C000
	0x0377DB34 LDR X8, [X8 + 0x5A8]
	0x0377DB38 CMP W1, 0x2D
	0x0377DB3C LDR X8, [X8]
	0x0377DB40 STR X8, [X20 + 0x180]
	0x0377DB44 B.EQ 0x377E2BC
	0x0377DB48 ADRP X8, 0x988000
	0x0377DB4C LDR X8, [X8 + 0x8B0]
	0x0377DB50 CMP W1, 0x2E
	0x0377DB54 LDR X8, [X8]
	0x0377DB58 STR X8, [X20 + 0x188]
	0x0377DB5C B.LS 0x377E2BC
	0x0377DB60 ADRP X8, 0x98F000
	0x0377DB64 LDR X8, [X8 + 0x370]
	0x0377DB68 CMP W1, 0x2F
	0x0377DB6C LDR X8, [X8]
	0x0377DB70 STR X8, [X20 + 0x190]
	0x0377DB74 B.EQ 0x377E2BC
	0x0377DB78 ADRP X8, 0x995000
	0x0377DB7C LDR X8, [X8 + 0x6C8]
	0x0377DB80 CMP W1, 0x30
	0x0377DB84 LDR X8, [X8]
	0x0377DB88 STR X8, [X20 + 0x198]
	0x0377DB8C B.LS 0x377E2BC

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Subtract W8, W1, 1
	004 Move X9, [X0+440]
	005 Compare X9, 0
	006 JumpIfEqual {32}
	007 Move W10, [X9+24]
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Add X8, X9, W8
	010 Move X0, [X8+32]
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 Return X0
	014 Move X0, 0x97F000
	015 Move X0, [X0+1888]
	016 Call 0x1C17D08
	017 Call 0x1C17F10
	018 Move X19, X0
	019 Move X0, 0x9A1000
	020 Move X0, [X0+112]
	021 Call 0x1C17D08
	022 Move X1, X0
	023 Move X0, X19
	024 Move X2, X31
	025 Call ArgumentOutOfRangeException..ctor, X0, X1
	026 Move X0, 0x9CB000
	027 Move X0, [X0+176]
	028 Call 0x1C17D08
	029 Move X1, X0
	030 Move X0, X19
	031 Call 0x1C17DEC
	032 Call 0x1C17F20
	033 Call 0x1C17F28

Method: UnityEngine.InputSystem.Utilities.ReadOnlyArray`1<UnityEngine.InputSystem.Controls.KeyControl> get_allKeys()

Disassembly:
	0x0377DF68 ADRP X8, 0x9CA000
	0x0377DF6C LDR X8, [X8 + 0x320]
	0x0377DF70 CMP W1, 0x5A
	0x0377DF74 LDR X8, [X8]
	0x0377DF78 STR X8, [X20 + 0x2E8]
	0x0377DF7C B.LS 0x377E2BC
	0x0377DF80 ADRP X8, 0x9CA000
	0x0377DF84 LDR X8, [X8 + 0x1A8]
	0x0377DF88 CMP W1, 0x5B
	0x0377DF8C LDR X8, [X8]
	0x0377DF90 STR X8, [X20 + 0x2F0]
	0x0377DF94 B.EQ 0x377E2BC
	0x0377DF98 ADRP X8, 0x9CA000
	0x0377DF9C LDR X8, [X8 + 0x1E8]
	0x0377DFA0 CMP W1, 0x5C
	0x0377DFA4 LDR X8, [X8]
	0x0377DFA8 STR X8, [X20 + 0x2F8]
	0x0377DFAC B.LS 0x377E2BC
	0x0377DFB0 ADRP X8, 0x9CA000
	0x0377DFB4 LDR X8, [X8 + 0x390]
	0x0377DFB8 CMP W1, 0x5D
	0x0377DFBC LDR X8, [X8]
	0x0377DFC0 STR X8, [X20 + 0x300]
	0x0377DFC4 B.EQ 0x377E2BC

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xC64000
	007 Move X20, 0x9CB000
	008 Move W8, [X21+3966]
	009 Move X20, [X20+184]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x9CB000
	016 Move X0, [X0+184]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+3966], W8
	020 Move X1, [X19+440]
	021 Move X2, [X20]
	022 Add X0, X31, 0
	023 Move [X31], X31
	024 Move [X31+8], X31
	025 Call ReadOnlyArray`1<Object>..ctor, X0, X1
	026 Move X0, [X31]
	027 Move X1, [X31+8]
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X30, [X31+16]
	031 Move X21, [X31+24]
	032 Add X31, X31, 48
	033 Return X0

Method: UnityEngine.InputSystem.Keyboard get_current()

Disassembly:
	0x0377DFC8 ADRP X8, 0x9CA000
	0x0377DFCC LDR X8, [X8 + 0x1B8]
	0x0377DFD0 CMP W1, 0x5E
	0x0377DFD4 LDR X8, [X8]
	0x0377DFD8 STR X8, [X20 + 0x308]
	0x0377DFDC B.LS 0x377E2BC
	0x0377DFE0 ADRP X8, 0x9CA000
	0x0377DFE4 LDR X8, [X8 + 0x180]
	0x0377DFE8 CMP W1, 0x5F
	0x0377DFEC LDR X8, [X8]
	0x0377DFF0 STR X8, [X20 + 0x310]
	0x0377DFF4 B.EQ 0x377E2BC
	0x0377DFF8 ADRP X8, 0x9CA000
	0x0377DFFC LDR X8, [X8 + 0x318]
	0x0377E000 CMP W1, 0x60
	0x0377E004 LDR X8, [X8]
	0x0377E008 STR X8, [X20 + 0x318]
	0x0377E00C B.LS 0x377E2BC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xC64000
	005 Move X20, 0x9CB000
	006 Move W8, [X19+3967]
	007 Move X20, [X20+192]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x9CB000
	013 Move X0, [X0+192]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+3967], W8
	017 Move X8, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X8, [X8+184]
	021 Move X0, [X8]
	022 Move X30, [X31+32]
	023 Return X0

Method: System.Void set_current(UnityEngine.InputSystem.Keyboard value)

Disassembly:
	0x0377E010 ADRP X8, 0x9C9000
	0x0377E014 LDR X8, [X8 + 0x358]
	0x0377E018 CMP W1, 0x61
	0x0377E01C LDR X8, [X8]
	0x0377E020 STR X8, [X20 + 0x320]
	0x0377E024 B.EQ 0x377E2BC
	0x0377E028 ADRP X8, 0x9C9000
	0x0377E02C LDR X8, [X8 + 0x2E8]
	0x0377E030 CMP W1, 0x62
	0x0377E034 LDR X8, [X8]
	0x0377E038 STR X8, [X20 + 0x328]
	0x0377E03C B.LS 0x377E2BC
	0x0377E040 ADRP X8, 0x9C9000
	0x0377E044 LDR X8, [X8 + 0x1C8]
	0x0377E048 CMP W1, 0x63
	0x0377E04C LDR X8, [X8]
	0x0377E050 STR X8, [X20 + 0x330]
	0x0377E054 B.EQ 0x377E2BC
	0x0377E058 ADRP X8, 0x9C9000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xC63000
	006 Move X21, 0x9CA000
	007 Move W8, [X20+3968]
	008 Move X21, [X21+192]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x9CA000
	015 Move X0, [X0+192]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3968], W8
	019 Move X8, [X21]
	020 Move X8, [X8+184]
	021 Move [X8], X19
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X30, [X31+32]
	025 Move X21, [X31+40]
	026 Return 

Method: System.Void MakeCurrent()

Disassembly:
	0x0377E05C LDR X8, [X8 + 0x290]
	0x0377E060 CMP W1, 0x64
	0x0377E064 LDR X8, [X8]
	0x0377E068 STR X8, [X20 + 0x338]
	0x0377E06C B.LS 0x377E2BC
	0x0377E070 ADRP X8, 0x9C9000
	0x0377E074 LDR X8, [X8 + 0x368]
	0x0377E078 CMP W1, 0x65
	0x0377E07C LDR X8, [X8]
	0x0377E080 STR X8, [X20 + 0x340]
	0x0377E084 B.EQ 0x377E2BC
	0x0377E088 ADRP X8, 0x9C9000
	0x0377E08C LDR X8, [X8 + 0x360]
	0x0377E090 CMP W1, 0x66
	0x0377E094 LDR X8, [X8]
	0x0377E098 STR X8, [X20 + 0x348]
	0x0377E09C B.LS 0x377E2BC
	0x0377E0A0 ADRP X8, 0x9C9000
	0x0377E0A4 LDR X8, [X8 + 0x280]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xC63000
	005 Move W8, [X20+3995]
	006 Move X19, X0
	007 Compare W8, 0
	008 JumpIfNotEqual {14}
	009 Move X0, 0x9CA000
	010 Move X0, [X0+192]
	011 Call 0x1C17CF4
	012 Move W8, 1
	013 Move [X20+3995], W8
	014 Move X8, 0x9CA000
	015 Move X8, [X8+192]
	016 Move X8, [X8]
	017 Move X8, [X8+184]
	018 Move [X8], X19
	019 Move X20, [X31+16]
	020 Move X19, [X31+24]
	021 Move X30, [X31+32]
	022 Return 

Method: System.Void OnRemoved()

Disassembly:
	0x0377E0A8 CMP W1, 0x67
	0x0377E0AC LDR X8, [X8]
	0x0377E0B0 STR X8, [X20 + 0x350]
	0x0377E0B4 B.EQ 0x377E2BC
	0x0377E0B8 ADRP X8, 0x9C9000
	0x0377E0BC LDR X8, [X8 + 0xE8]
	0x0377E0C0 CMP W1, 0x68
	0x0377E0C4 LDR X8, [X8]
	0x0377E0C8 STR X8, [X20 + 0x358]
	0x0377E0CC B.LS 0x377E2BC
	0x0377E0D0 ADRP X8, 0x9C9000
	0x0377E0D4 LDR X8, [X8 + 0x138]
	0x0377E0D8 CMP W1, 0x69
	0x0377E0DC LDR X8, [X8]
	0x0377E0E0 STR X8, [X20 + 0x360]
	0x0377E0E4 B.EQ 0x377E2BC
	0x0377E0E8 ADRP X8, 0x9C9000
	0x0377E0EC LDR X8, [X8 + 0x300]
	0x0377E0F0 CMP W1, 0x6A
	0x0377E0F4 LDR X8, [X8]
	0x0377E0F8 STR X8, [X20 + 0x368]
	0x0377E0FC B.LS 0x377E2BC
	0x0377E100 ADRP X8, 0x9C9000
	0x0377E104 LDR X8, [X8 + 0x130]
	0x0377E108 CMP W1, 0x6B
	0x0377E10C LDR X8, [X8]
	0x0377E110 STR X8, [X20 + 0x370]
	0x0377E114 B.EQ 0x377E2BC
	0x0377E118 ADRP X8, 0x9C9000
	0x0377E11C LDR X8, [X8 + 0x230]
	0x0377E120 CMP W1, 0x6C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xC63000
	005 Move W8, [X19+3996]
	006 Move X20, X0
	007 Compare W8, 0
	008 JumpIfNotEqual {14}
	009 Move X0, 0x9CA000
	010 Move X0, [X0+192]
	011 Call 0x1C17CF4
	012 Move W8, 1
	013 Move [X19+3996], W8
	014 Move X19, 0x9CA000
	015 Move X19, [X19+192]
	016 Move X8, [X19]
	017 Move X8, [X8+184]
	018 Move X9, [X8]
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move X20, 0xC63000
	021 Move W9, [X20+3995]
	022 Compare W9, 0
	023 JumpIfNotEqual {30}
	024 Move X0, X19
	025 Call 0x1C17CF4
	026 Move X8, [X19]
	027 Move W9, 1
	028 Move [X20+3995], W9
	029 Move X8, [X8+184]
	030 Move [X8], X31
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Return 

Method: System.Void FinishSetup()

Disassembly:
	0x0377E124 LDR X8, [X8]
	0x0377E128 STR X8, [X20 + 0x378]
	0x0377E12C B.LS 0x377E2BC
	0x0377E130 ADRP X8, 0x9C9000
	0x0377E134 LDR X8, [X8 + 0x270]
	0x0377E138 CMP W1, 0x6D
	0x0377E13C LDR X8, [X8]
	0x0377E140 STR X8, [X20 + 0x380]
	0x0377E144 B.EQ 0x377E2BC
	0x0377E148 ADRP X8, 0x9C9000
	0x0377E14C LDR X8, [X8 + 0x388]
	0x0377E150 ADRP X9, 0x9C9000
	0x0377E154 LDR X8, [X8]
	0x0377E158 LDR X9, [X9 + 0xD8]
	0x0377E15C STR X8, [X20 + 0x388]
	0x0377E160 LDR X0, [X9]
	0x0377E164 BL 0x1C16D6C
	0x0377E168 STR X0, [X19 + 0x1B8]
	0x0377E16C LDR X8, [X20 + 0x18]
	0x0377E170 CMP W8, 0x0
	0x0377E174 B.LE 0x377E20C
	0x0377E178 ADRP X23, 0x9C9000
	0x0377E17C LDR X23, [X23 + 0xD0]
	0x0377E180 MOV X21, X0
	0x0377E184 MOVZ W24, 0x4
	0x0377E188 SUB X25, X24, 0x4
	0x0377E18C CMP W25, W8
	0x0377E190 B.CS 0x377E2BC
	0x0377E194 LDR X1, [X20, X24, LSL #3]
	0x0377E198 LDR X2, [X23]
	0x0377E19C MOV X0, X19
	0x0377E1A0 BL 0x21FC754
	0x0377E1A4 CBZ X21, 0x377E2C0
	0x0377E1A8 MOV X22, X0
	0x0377E1AC CBZ X0, 0x377E1C4
	0x0377E1B0 LDR X8, [X21]
	0x0377E1B4 MOV X0, X22
	0x0377E1B8 LDR X1, [X8 + 0x40]
	0x0377E1BC BL 0x1C16E00
	0x0377E1C0 CBZ X0, 0x377E2C4
	0x0377E1C4 LDR W8, [X21 + 0x18]
	0x0377E1C8 CMP W25, W8
	0x0377E1CC B.CS 0x377E2BC
	0x0377E1D0 STR X22, [X21, X24, LSL #3]
	0x0377E1D4 LDR X21, [X19 + 0x1B8]
	0x0377E1D8 CBZ X21, 0x377E2C0
	0x0377E1DC LDR W8, [X21 + 0x18]
	0x0377E1E0 CMP W25, W8
	0x0377E1E4 B.CS 0x377E2BC
	0x0377E1E8 LDR X8, [X21, X24, LSL #3]
	0x0377E1EC CBZ X8, 0x377E2C0
	0x0377E1F0 SUB W9, W24, 0x3
	0x0377E1F4 STR W9, [X8 + 0x130]
	0x0377E1F8 LDR X8, [X20 + 0x18]
	0x0377E1FC ADD X24, X24, 0x1
	0x0377E200 SUB W9, W24, 0x4
	0x0377E204 CMP W9, W8
	0x0377E208 B.LT 0x377E188
	0x0377E20C ADRP X8, 0x9C9000
	0x0377E210 ADRP X9, 0x9C9000
	0x0377E214 LDR X8, [X8 + 0x2D8]
	0x0377E218 LDR X9, [X9 + 0xC8]
	0x0377E21C ADRP X20, 0x9C9000
	0x0377E220 ADRP X21, 0x9C6000
	0x0377E224 LDR X20, [X20 + 0x330]
	0x0377E228 LDR X21, [X21 + 0xE18]
	0x0377E22C LDR X1, [X8]
	0x0377E230 LDR X2, [X9]
	0x0377E234 ADRP X22, 0x9C9000
	0x0377E238 ADRP X23, 0x9C9000
	0x0377E23C ADRP X24, 0x9C9000
	0x0377E240 LDR X22, [X22 + 0x240]
	0x0377E244 LDR X23, [X23 + 0x108]
	0x0377E248 LDR X24, [X24 + 0x350]
	0x0377E24C MOV X0, X19
	0x0377E250 BL 0x21FC754
	0x0377E254 STR X0, [X19 + 0x170]
	0x0377E258 LDR X1, [X20]
	0x0377E25C LDR X2, [X21]
	0x0377E260 MOV X0, X19
	0x0377E264 BL 0x21FC754
	0x0377E268 STR X0, [X19 + 0x178]
	0x0377E26C LDR X1, [X22]
	0x0377E270 LDR X2, [X21]
	0x0377E274 MOV X0, X19
	0x0377E278 BL 0x21FC754
	0x0377E27C STR X0, [X19 + 0x180]
	0x0377E280 LDR X1, [X23]
	0x0377E284 LDR X2, [X21]
	0x0377E288 MOV X0, X19
	0x0377E28C BL 0x21FC754
	0x0377E290 STR X0, [X19 + 0x188]
	0x0377E294 LDR X1, [X24]
	0x0377E298 LDR X2, [X21]
	0x0377E29C MOV X0, X19
	0x0377E2A0 BL 0x21FC754
	0x0377E2A4 STR X0, [X19 + 0x190]
	0x0377E2A8 LDP X20, X19, [X31 + 0x30]
	0x0377E2AC LDP X22, X21, [X31 + 0x20]
	0x0377E2B0 LDP X24, X23, [X31 + 0x10]
	0x0377E2B4 LDP X30, X25, [X31], #0x40
	0x0377E2B8 RET
	0x0377E2BC BL 0x1C16F28
	0x0377E2C0 BL 0x1C16F20
	0x0377E2C4 BL 0x1C16F44
	0x0377E2C8 MOV X1, X31
	0x0377E2CC BL 0x1C16DEC
	0x0377E2D0 STP X29, X30, [X31 - 0x30]!
	0x0377E2D4 STP X22, X21, [X31 + 0x10]
	0x0377E2D8 STP X20, X19, [X31 + 0x20]
	0x0377E2DC SUB X31, X31, 0x220
	0x0377E2E0 MRS X20, 0xC000
	0x0377E2E4 LDR X8, [X20 + 0x28]
	0x0377E2E8 ADRP X22, 0xC62000
	0x0377E2EC ADRP X21, 0x9C9000
	0x0377E2F0 MOV X19, X0
	0x0377E2F4 STR X8, [X31 + 0x218]
	0x0377E2F8 LDRB W8, [X22 + 0xF82]
	0x0377E2FC LDR X21, [X21 + 0x398]
	0x0377E300 TBNZ X8, 0x0, 0x377E318
	0x0377E304 ADRP X0, 0x9C9000
	0x0377E308 LDR X0, [X0 + 0x398]
	0x0377E30C BL 0x1C16CF4
	0x0377E310 MOVZ W8, 0x1
	0x0377E314 STRB W8, [X22 + 0xF82]
	0x0377E318 ADD X0, X31, 0x110
	0x0377E31C MOVZ W2, 0x108
	0x0377E320 MOV W1, W31
	0x0377E324 BL 0x3EB1B10
	0x0377E328 ADD X8, X31, 0x8
	0x0377E32C MOV X0, X31
	0x0377E330 STR X31, [X19 + 0x1B0]
	0x0377E334 BL 0x37FEEA8
	0x0377E338 ADD X0, X31, 0x110
	0x0377E33C ADD X1, X31, 0x8
	0x0377E340 MOVZ W2, 0x108
	0x0377E344 BL 0x3EB1AC0
	0x0377E348 LDR X2, [X21]
	0x0377E34C ADD X1, X31, 0x110
	0x0377E350 MOV X0, X19
	0x0377E354 BL 0x2205C1C
	0x0377E358 TBNZ X0, 0x0, 0x377E36C
	0x0377E35C ADD X0, X31, 0x110
	0x0377E360 MOV X1, X31
	0x0377E364 BL 0x37FEE44
	0x0377E368 STR X0, [X19 + 0x1B0]
	0x0377E36C LDR X8, [X20 + 0x28]
	0x0377E370 LDR X9, [X31 + 0x218]
	0x0377E374 CMP X8, X9
	0x0377E378 B.NE 0x377E390
	0x0377E37C ADD X31, X31, 0x220
	0x0377E380 LDP X20, X19, [X31 + 0x20]
	0x0377E384 LDP X22, X21, [X31 + 0x10]
	0x0377E388 LDP X29, X30, [X31], #0x30
	0x0377E38C RET
	0x0377E390 BL 0x3EB1B20
	0x0377E394 STR X30, [X31 - 0x30]!
	0x0377E398 STP X22, X21, [X31 + 0x10]
	0x0377E39C STP X20, X19, [X31 + 0x20]
	0x0377E3A0 ADRP X20, 0xC62000
	0x0377E3A4 LDRB W8, [X20 + 0xF83]
	0x0377E3A8 MOV W19, W1
	0x0377E3AC MOV X21, X0
	0x0377E3B0 TBNZ X8, 0x0, 0x377E3C8
	0x0377E3B4 ADRP X0, 0x9C9000
	0x0377E3B8 LDR X0, [X0 + 0x3A0]
	0x0377E3BC BL 0x1C16CF4
	0x0377E3C0 MOVZ W8, 0x1
	0x0377E3C4 STRB W8, [X20 + 0xF83]
	0x0377E3C8 LDR W8, [X21 + 0x198]
	0x0377E3CC CMP W8, 0x1
	0x0377E3D0 B.LT 0x377E420
	0x0377E3D4 ADRP X22, 0x9C9000
	0x0377E3D8 LDR X22, [X22 + 0x3A0]
	0x0377E3DC MOV W20, W31
	0x0377E3E0 ADD X21, X21, 0x198
	0x0377E3E4 LDR X2, [X22]
	0x0377E3E8 MOV X0, X21
	0x0377E3EC MOV W1, W20
	0x0377E3F0 BL 0x2DEA3EC
	0x0377E3F4 CBZ X0, 0x377E430
	0x0377E3F8 LDR X8, [X0 + 0x40]
	0x0377E3FC LDR X9, [X0 + 0x18]
	0x0377E400 LDR X2, [X0 + 0x28]
	0x0377E404 MOV W1, W19
	0x0377E408 MOV X0, X8
	0x0377E40C BLR X9
	0x0377E410 LDR W8, [X21]
	0x0377E414 ADD W20, W20, 0x1
	0x0377E418 CMP W20, W8
	0x0377E41C B.LT 0x377E3E4
	0x0377E420 LDP X20, X19, [X31 + 0x20]
	0x0377E424 LDP X22, X21, [X31 + 0x10]
	0x0377E428 LDR X30, [X31], #0x30
	0x0377E42C RET
	0x0377E430 BL 0x1C16F20
	0x0377E434 SUB X31, X31, 0x30
	0x0377E438 STP X30, X21, [X31 + 0x10]
	0x0377E43C STP X20, X19, [X31 + 0x20]
	0x0377E440 ADRP X21, 0xC62000
	0x0377E444 LDRB W8, [X21 + 0xF84]
	0x0377E448 MOV X19, X1
	0x0377E44C MOV X20, X0
	0x0377E450 TBNZ X8, 0x0, 0x377E474
	0x0377E454 ADRP X0, 0x9C9000
	0x0377E458 LDR X0, [X0 + 0x3A8]
	0x0377E45C BL 0x1C16CF4
	0x0377E460 ADRP X0, 0x9C9000
	0x0377E464 LDR X0, [X0 + 0x3B0]
	0x0377E468 BL 0x1C16CF4
	0x0377E46C MOVZ W8, 0x1
	0x0377E470 STRB W8, [X21 + 0xF84]
	0x0377E474 MOV X0, X20
	0x0377E478 BL 0x377CF68
	0x0377E47C UBFM X8, X1, 0x20, 0x3F
	0x0377E480 CMP W8, 0x1
	0x0377E484 STP X0, X1, [X31]
	0x0377E488 B.LT 0x377E4D4
	0x0377E48C ADRP X21, 0x9C9000
	0x0377E490 LDR X21, [X21 + 0x3B0]
	0x0377E494 MOV W20, W31
	0x0377E498 LDR X2, [X21]
	0x0377E49C ADD X0, X31, 0x0
	0x0377E4A0 MOV W1, W20
	0x0377E4A4 BL 0x24FDB3C
	0x0377E4A8 CBZ X0, 0x377E4FC
	0x0377E4AC BL 0x3771E88
	0x0377E4B0 MOVZ W2, 0x1
	0x0377E4B4 MOV X1, X19
	0x0377E4B8 MOV X3, X31
	0x0377E4BC BL 0x3226C60
	0x0377E4C0 TBNZ X0, 0x0, 0x377E4DC
	0x0377E4C4 LDR W8, [X31 + 0xC]
	0x0377E4C8 ADD W20, W20, 0x1
	0x0377E4CC CMP W20, W8
	0x0377E4D0 B.LT 0x377E498
	0x0377E4D4 MOV X0, X31
	0x0377E4D8 B 0x377E4EC
	0x0377E4DC LDR X2, [X21]
	0x0377E4E0 ADD X0, X31, 0x0
	0x0377E4E4 MOV W1, W20
	0x0377E4E8 BL 0x24FDB3C
	0x0377E4EC LDP X20, X19, [X31 + 0x20]
	0x0377E4F0 LDP X30, X21, [X31 + 0x10]
	0x0377E4F4 ADD X31, X31, 0x30
	0x0377E4F8 RET
	0x0377E4FC BL 0x1C16F20
	0x0377E500 SUB X31, X31, 0x170
	0x0377E504 STP X29, X30, [X31 + 0x120]
	0x0377E508 STP X26, X25, [X31 + 0x130]
	0x0377E50C STP X24, X23, [X31 + 0x140]
	0x0377E510 STP X22, X21, [X31 + 0x150]
	0x0377E514 STP X20, X19, [X31 + 0x160]
	0x0377E518 MRS X24, 0xC000
	0x0377E51C LDR X8, [X24 + 0x28]
	0x0377E520 ADRP X20, 0xC62000
	0x0377E524 MOV X19, X1
	0x0377E528 MOV X21, X0
	0x0377E52C STR X8, [X31 + 0x118]
	0x0377E530 LDRB W8, [X20 + 0xF85]
	0x0377E534 TBNZ X8, 0x0, 0x377E54C
	0x0377E538 ADRP X0, 0x9C9000
	0x0377E53C LDR X0, [X0 + 0x3B8]
	0x0377E540 BL 0x1C16CF4
	0x0377E544 MOVZ W8, 0x1
	0x0377E548 STRB W8, [X20 + 0xF85]
	0x0377E54C LDR W8, [X21 + 0x1C0]
	0x0377E550 CMP W8, 0x1
	0x0377E554 B.LT 0x377E5C8
	0x0377E558 ADRP X25, 0x9C9000
	0x0377E55C LDR X25, [X25 + 0x3B8]
	0x0377E560 MOV W20, W31
	0x0377E564 ADD X21, X21, 0x1C0
	0x0377E568 LDR X2, [X25]
	0x0377E56C MOV X0, X21
	0x0377E570 MOV W1, W20
	0x0377E574 BL 0x2DEA3EC
	0x0377E578 MOV X22, X0
	0x0377E57C ADD X0, X31, 0x8
	0x0377E580 MOVZ W2, 0x84
	0x0377E584 MOV X1, X19
	0x0377E588 BL 0x3EB1AC0
	0x0377E58C CBZ X22, 0x377E5F4
	0x0377E590 LDR X26, [X22 + 0x18]
	0x0377E594 LDR X23, [X22 + 0x40]
	0x0377E598 ADD X0, X31, 0x90
	0x0377E59C ADD X1, X31, 0x8
	0x0377E5A0 MOVZ W2, 0x84
	0x0377E5A4 BL 0x3EB1AC0
	0x0377E5A8 LDR X2, [X22 + 0x28]
	0x0377E5AC ADD X1, X31, 0x90
	0x0377E5B0 MOV X0, X23
	0x0377E5B4 BLR X26
	0x0377E5B8 LDR W8, [X21]
	0x0377E5BC ADD W20, W20, 0x1
	0x0377E5C0 CMP W20, W8
	0x0377E5C4 B.LT 0x377E568
	0x0377E5C8 LDR X8, [X24 + 0x28]
	0x0377E5CC LDR X9, [X31 + 0x118]
	0x0377E5D0 CMP X8, X9
	0x0377E5D4 B.NE 0x377E5F8
	0x0377E5D8 LDP X20, X19, [X31 + 0x160]
	0x0377E5DC LDP X22, X21, [X31 + 0x150]
	0x0377E5E0 LDP X24, X23, [X31 + 0x140]
	0x0377E5E4 LDP X26, X25, [X31 + 0x130]
	0x0377E5E8 LDP X29, X30, [X31 + 0x120]
	0x0377E5EC ADD X31, X31, 0x170
	0x0377E5F0 RET
	0x0377E5F4 BL 0x1C16F20
	0x0377E5F8 BL 0x3EB1B20
	0x0377E5FC LDR X0, [X0 + 0x1B8]
	0x0377E600 RET
	0x0377E604 STR X1, [X0 + 0x1B8]
	0x0377E608 RET
	0x0377E60C STP X30, X19, [X31 - 0x10]!
	0x0377E610 MOV X19, X0
	0x0377E614 BL 0x377295C
	0x0377E618 MOVN W8, 0x0
	0x0377E61C STR X31, [X19 + 0xE0]
	0x0377E620 STR W8, [X19 + 0xE8]
	0x0377E624 LDP X30, X19, [X31], #0x10
	0x0377E628 RET
	0x0377E62C LDR X0, [X0 + 0x1A0]
	0x0377E630 RET
	0x0377E634 STR X1, [X0 + 0x1A0]
	0x0377E638 RET
	0x0377E63C LDR X0, [X0 + 0x1A8]
	0x0377E640 RET
	0x0377E644 STR X1, [X0 + 0x1A8]
	0x0377E648 RET
	0x0377E64C LDR X0, [X0 + 0x1B0]
	0x0377E650 RET
	0x0377E654 STR X1, [X0 + 0x1B0]
	0x0377E658 RET
	0x0377E65C LDR X0, [X0 + 0x1B8]
	0x0377E660 RET
	0x0377E664 STR X1, [X0 + 0x1B8]
	0x0377E668 RET
	0x0377E66C LDR X0, [X0 + 0x1C0]
	0x0377E670 RET
	0x0377E674 STR X1, [X0 + 0x1C0]
	0x0377E678 RET
	0x0377E67C LDR X0, [X0 + 0x1C8]
	0x0377E680 RET
	0x0377E684 STR X1, [X0 + 0x1C8]
	0x0377E688 RET
	0x0377E68C LDR X0, [X0 + 0x1D0]
	0x0377E690 RET
	0x0377E694 STR X1, [X0 + 0x1D0]
	0x0377E698 RET
	0x0377E69C STR X30, [X31 - 0x20]!
	0x0377E6A0 STP X20, X19, [X31 + 0x10]
	0x0377E6A4 ADRP X19, 0xC62000
	0x0377E6A8 ADRP X20, 0x99D000
	0x0377E6AC LDRB W8, [X19 + 0xF86]
	0x0377E6B0 LDR X20, [X20 + 0x528]
	0x0377E6B4 TBNZ X8, 0x0, 0x377E6CC
	0x0377E6B8 ADRP X0, 0x99D000
	0x0377E6BC LDR X0, [X0 + 0x528]
	0x0377E6C0 BL 0x1C16CF4
	0x0377E6C4 MOVZ W8, 0x1
	0x0377E6C8 STRB W8, [X19 + 0xF86]
	0x0377E6CC LDR X8, [X20]
	0x0377E6D0 LDP X20, X19, [X31 + 0x10]
	0x0377E6D4 LDR X8, [X8 + 0xB8]
	0x0377E6D8 LDR X0, [X8]
	0x0377E6DC LDR X30, [X31], #0x20
	0x0377E6E0 RET
	0x0377E6E4 STP X30, X21, [X31 - 0x20]!
	0x0377E6E8 STP X20, X19, [X31 + 0x10]
	0x0377E6EC ADRP X20, 0xC62000
	0x0377E6F0 ADRP X21, 0x99D000
	0x0377E6F4 LDRB W8, [X20 + 0xF87]
	0x0377E6F8 LDR X21, [X21 + 0x528]
	0x0377E6FC MOV X19, X0
	0x0377E700 TBNZ X8, 0x0, 0x377E718
	0x0377E704 ADRP X0, 0x99D000
	0x0377E708 LDR X0, [X0 + 0x528]
	0x0377E70C BL 0x1C16CF4
	0x0377E710 MOVZ W8, 0x1
	0x0377E714 STRB W8, [X20 + 0xF87]
	0x0377E718 LDR X8, [X21]
	0x0377E71C LDR X8, [X8 + 0xB8]
	0x0377E720 STR X19, [X8]
	0x0377E724 LDP X20, X19, [X31 + 0x10]
	0x0377E728 LDP X30, X21, [X31], #0x20
	0x0377E72C RET
	0x0377E730 STR X30, [X31 - 0x20]!
	0x0377E734 STP X20, X19, [X31 + 0x10]
	0x0377E738 ADRP X20, 0xC62000
	0x0377E73C LDRB W8, [X20 + 0xFA0]
	0x0377E740 MOV X19, X0
	0x0377E744 CBNZ W8, 0x377E75C
	0x0377E748 ADRP X0, 0x9C9000
	0x0377E74C LDR X0, [X0 + 0x3C0]
	0x0377E750 BL 0x1C16CF4
	0x0377E754 MOVZ W8, 0x1
	0x0377E758 STRB W8, [X20 + 0xFA0]
	0x0377E75C ADRP X8, 0x9C9000
	0x0377E760 LDR X8, [X8 + 0x3C0]
	0x0377E764 ADRP X20, 0xC62000
	0x0377E768 LDR X8, [X8]
	0x0377E76C LDR X8, [X8 + 0xB8]
	0x0377E770 STR X19, [X8]
	0x0377E774 LDRB W8, [X20 + 0xF9D]
	0x0377E778 CBNZ W8, 0x377E790
	0x0377E77C ADRP X0, 0x99D000
	0x0377E780 LDR X0, [X0 + 0x528]
	0x0377E784 BL 0x1C16CF4
	0x0377E788 MOVZ W8, 0x1
	0x0377E78C STRB W8, [X20 + 0xF9D]
	0x0377E790 ADRP X8, 0x99D000
	0x0377E794 LDR X8, [X8 + 0x528]
	0x0377E798 LDR X8, [X8]
	0x0377E79C LDR X8, [X8 + 0xB8]
	0x0377E7A0 STR X19, [X8]
	0x0377E7A4 LDP X20, X19, [X31 + 0x10]
	0x0377E7A8 LDR X30, [X31], #0x20
	0x0377E7AC RET
	0x0377E7B0 STR X30, [X31 - 0x20]!
	0x0377E7B4 STP X20, X19, [X31 + 0x10]
	0x0377E7B8 ADRP X20, 0xC62000
	0x0377E7BC LDRB W8, [X20 + 0xFA0]
	0x0377E7C0 MOV X19, X0
	0x0377E7C4 CBNZ W8, 0x377E7DC
	0x0377E7C8 ADRP X0, 0x9C9000
	0x0377E7CC LDR X0, [X0 + 0x3C0]
	0x0377E7D0 BL 0x1C16CF4
	0x0377E7D4 MOVZ W8, 0x1
	0x0377E7D8 STRB W8, [X20 + 0xFA0]
	0x0377E7DC ADRP X8, 0x9C9000
	0x0377E7E0 LDR X8, [X8 + 0x3C0]
	0x0377E7E4 LDR X8, [X8]
	0x0377E7E8 LDR X8, [X8 + 0xB8]
	0x0377E7EC STR X19, [X8]
	0x0377E7F0 LDP X20, X19, [X31 + 0x10]
	0x0377E7F4 LDR X30, [X31], #0x20
	0x0377E7F8 RET
	0x0377E7FC STR X30, [X31 - 0x20]!
	0x0377E800 STP X20, X19, [X31 + 0x10]
	0x0377E804 ADRP X20, 0xC62000
	0x0377E808 LDRB W8, [X20 + 0xF88]
	0x0377E80C MOV X19, X0
	0x0377E810 TBNZ X8, 0x0, 0x377E828
	0x0377E814 ADRP X0, 0x99D000
	0x0377E818 LDR X0, [X0 + 0x528]
	0x0377E81C BL 0x1C16CF4
	0x0377E820 MOVZ W8, 0x1
	0x0377E824 STRB W8, [X20 + 0xF88]
	0x0377E828 LDRB W8, [X19 + 0xDC]
	0x0377E82C TBZ X8, 0x4, 0x377E84C
	0x0377E830 ADRP X8, 0x99D000
	0x0377E834 LDR X8, [X8 + 0x528]
	0x0377E838 LDR X8, [X8]
	0x0377E83C LDR X8, [X8 + 0xB8]
	0x0377E840 LDR X9, [X8 + 0x8]
	0x0377E844 CBNZ X9, 0x377E84C
	0x0377E848 STR X19, [X8 + 0x8]
	0x0377E84C LDP X20, X19, [X31 + 0x10]
	0x0377E850 LDR X30, [X31], #0x20
	0x0377E854 RET
	0x0377E858 STR X30, [X31 - 0x20]!
	0x0377E85C STP X20, X19, [X31 + 0x10]
	0x0377E860 MOV X19, X0
	0x0377E864 BL 0x377E8D8
	0x0377E868 ADRP X20, 0xC5B000
	0x0377E86C LDRB W8, [X20 + 0x817]
	0x0377E870 CBNZ W8, 0x377E888
	0x0377E874 ADRP X0, 0x99D000
	0x0377E878 LDR X0, [X0 + 0x528]
	0x0377E87C BL 0x1C16CF4
	0x0377E880 MOVZ W8, 0x1
	0x0377E884 STRB W8, [X20 + 0x817]
	0x0377E888 ADRP X20, 0x99D000
	0x0377E88C LDR X20, [X20 + 0x528]
	0x0377E890 LDR X8, [X20]
	0x0377E894 LDR X8, [X8 + 0xB8]
	0x0377E898 LDR X9, [X8]
	0x0377E89C CMP X9, X19
	0x0377E8A0 B.NE 0x377E8CC
	0x0377E8A4 ADRP X19, 0xC62000
	0x0377E8A8 LDRB W9, [X19 + 0xF9D]
	0x0377E8AC CBNZ W9, 0x377E8C8
	0x0377E8B0 MOV X0, X20
	0x0377E8B4 BL 0x1C16CF4
	0x0377E8B8 LDR X8, [X20]
	0x0377E8BC MOVZ W9, 0x1
	0x0377E8C0 STRB W9, [X19 + 0xF9D]
	0x0377E8C4 LDR X8, [X8 + 0xB8]
	0x0377E8C8 STR X31, [X8]
	0x0377E8CC LDP X20, X19, [X31 + 0x10]
	0x0377E8D0 LDR X30, [X31], #0x20
	0x0377E8D4 RET
	0x0377E8D8 STR X30, [X31 - 0x20]!
	0x0377E8DC STP X20, X19, [X31 + 0x10]
	0x0377E8E0 ADRP X19, 0xC62000
	0x0377E8E4 LDRB W8, [X19 + 0xFA1]
	0x0377E8E8 MOV X20, X0
	0x0377E8EC CBNZ W8, 0x377E904
	0x0377E8F0 ADRP X0, 0x9C9000
	0x0377E8F4 LDR X0, [X0 + 0x3C0]
	0x0377E8F8 BL 0x1C16CF4
	0x0377E8FC MOVZ W8, 0x1
	0x0377E900 STRB W8, [X19 + 0xFA1]
	0x0377E904 ADRP X19, 0x9C9000
	0x0377E908 LDR X19, [X19 + 0x3C0]
	0x0377E90C LDR X8, [X19]
	0x0377E910 LDR X8, [X8 + 0xB8]
	0x0377E914 LDR X9, [X8]
	0x0377E918 CMP X9, X20
	0x0377E91C B.NE 0x377E948
	0x0377E920 ADRP X20, 0xC62000
	0x0377E924 LDRB W9, [X20 + 0xFA0]
	0x0377E928 CBNZ W9, 0x377E944
	0x0377E92C MOV X0, X19
	0x0377E930 BL 0x1C16CF4
	0x0377E934 LDR X8, [X19]
	0x0377E938 MOVZ W9, 0x1
	0x0377E93C STRB W9, [X20 + 0xFA0]
	0x0377E940 LDR X8, [X8 + 0xB8]
	0x0377E944 STR X31, [X8]
	0x0377E948 LDP X20, X19, [X31 + 0x10]
	0x0377E94C LDR X30, [X31], #0x20
	0x0377E950 RET
	0x0377E954 SUB X31, X31, 0x60
	0x0377E958 STP D9, D8, [X31 + 0x20]
	0x0377E95C STR X30, [X31 + 0x30]
	0x0377E960 STP X22, X21, [X31 + 0x40]
	0x0377E964 STP X20, X19, [X31 + 0x50]
	0x0377E968 MRS X20, 0xC000
	0x0377E96C LDR X8, [X20 + 0x28]
	0x0377E970 ADRP X22, 0xC62000
	0x0377E974 ADRP X21, 0x9C9000
	0x0377E978 MOV V8.16B, V1.16B
	0x0377E97C STR X8, [X31 + 0x18]
	0x0377E980 LDRB W8, [X22 + 0xF89]
	0x0377E984 LDR X21, [X21 + 0x3C8]
	0x0377E988 MOV V9.16B, V0.16B
	0x0377E98C MOV X19, X0
	0x0377E990 TBNZ X8, 0x0, 0x377E9A8
	0x0377E994 ADRP X0, 0x9C9000
	0x0377E998 LDR X0, [X0 + 0x3C8]
	0x0377E99C BL 0x1C16CF4
	0x0377E9A0 MOVZ W8, 0x1
	0x0377E9A4 STRB W8, [X22 + 0xF89]
	0x0377E9A8 MOV V0.16B, V9.16B
	0x0377E9AC MOV V1.16B, V8.16B
	0x0377E9B0 MOV X0, X31
	0x0377E9B4 BL 0x37FF7BC
	0x0377E9B8 LDR X2, [X21]
	0x0377E9BC STP X0, X1, [X31 + 0x8]
	0x0377E9C0 ADD X1, X31, 0x8
	0x0377E9C4 MOV X0, X19
	0x0377E9C8 BL 0x2207590
	0x0377E9CC LDR X8, [X20 + 0x28]
	0x0377E9D0 LDR X9, [X31 + 0x18]
	0x0377E9D4 CMP X8, X9
	0x0377E9D8 B.NE 0x377E9F4
	0x0377E9DC LDP X20, X19, [X31 + 0x50]
	0x0377E9E0 LDP X22, X21, [X31 + 0x40]
	0x0377E9E4 LDR X30, [X31 + 0x30]
	0x0377E9E8 LDP D9, D8, [X31 + 0x20]
	0x0377E9EC ADD X31, X31, 0x60
	0x0377E9F0 RET
	0x0377E9F4 BL 0x3EB1B20
	0x0377E9F8 STP X29, X30, [X31 - 0x60]!
	0x0377E9FC STP X28, X27, [X31 + 0x10]
	0x0377EA00 STP X26, X25, [X31 + 0x20]
	0x0377EA04 STP X24, X23, [X31 + 0x30]
	0x0377EA08 STP X22, X21, [X31 + 0x40]
	0x0377EA0C STP X20, X19, [X31 + 0x50]
	0x0377EA10 ADRP X29, 0xC62000
	0x0377EA14 ADRP X21, 0x9C9000
	0x0377EA18 ADRP X22, 0x9C8000
	0x0377EA1C ADRP X28, 0x9C9000
	0x0377EA20 ADRP X23, 0x9C6000
	0x0377EA24 ADRP X27, 0x9C9000
	0x0377EA28 ADRP X26, 0x9C9000
	0x0377EA2C ADRP X25, 0x9C9000
	0x0377EA30 ADRP X24, 0x9C9000
	0x0377EA34 ADRP X20, 0x9C8000
	0x0377EA38 LDR X21, [X21 + 0x3D0]
	0x0377EA3C LDR X22, [X22 + 0x68]
	0x0377EA40 LDR X28, [X28 + 0x3D8]
	0x0377EA44 LDR X23, [X23 + 0xE18]
	0x0377EA48 LDR X27, [X27 + 0x3E0]
	0x0377EA4C LDR X26, [X26 + 0x3E8]
	0x0377EA50 LDRB W8, [X29 + 0xF8A]
	0x0377EA54 LDR X25, [X25 + 0x3F0]
	0x0377EA58 LDR X24, [X24 + 0x3F8]
	0x0377EA5C LDR X20, [X20 + 0x58]
	0x0377EA60 MOV X19, X0
	0x0377EA64 TBNZ X8, 0x0, 0x377EAF4
	0x0377EA68 ADRP X0, 0x9C6000
	0x0377EA6C LDR X0, [X0 + 0xE18]
	0x0377EA70 BL 0x1C16CF4
	0x0377EA74 ADRP X0, 0x9C8000
	0x0377EA78 LDR X0, [X0 + 0x68]
	0x0377EA7C BL 0x1C16CF4
	0x0377EA80 ADRP X0, 0x9C8000
	0x0377EA84 LDR X0, [X0 + 0x58]
	0x0377EA88 BL 0x1C16CF4
	0x0377EA8C ADRP X0, 0x9C9000
	0x0377EA90 LDR X0, [X0 + 0x3D0]
	0x0377EA94 BL 0x1C16CF4
	0x0377EA98 ADRP X0, 0x9C9000
	0x0377EA9C LDR X0, [X0 + 0x3F0]
	0x0377EAA0 BL 0x1C16CF4
	0x0377EAA4 ADRP X0, 0x9C9000
	0x0377EAA8 LDR X0, [X0 + 0x400]
	0x0377EAAC BL 0x1C16CF4
	0x0377EAB0 ADRP X0, 0x9C9000
	0x0377EAB4 LDR X0, [X0 + 0x3F8]
	0x0377EAB8 BL 0x1C16CF4
	0x0377EABC ADRP X0, 0x9C9000
	0x0377EAC0 LDR X0, [X0 + 0x3D8]
	0x0377EAC4 BL 0x1C16CF4
	0x0377EAC8 ADRP X0, 0x9C9000
	0x0377EACC LDR X0, [X0 + 0x3E8]
	0x0377EAD0 BL 0x1C16CF4
	0x0377EAD4 ADRP X0, 0x9C8000
	0x0377EAD8 LDR X0, [X0 + 0x50]
	0x0377EADC BL 0x1C16CF4
	0x0377EAE0 ADRP X0, 0x9C9000
	0x0377EAE4 LDR X0, [X0 + 0x3E0]
	0x0377EAE8 BL 0x1C16CF4
	0x0377EAEC MOVZ W8, 0x1
	0x0377EAF0 STRB W8, [X29 + 0xF8A]
	0x0377EAF4 LDR X1, [X21]
	0x0377EAF8 LDR X2, [X22]
	0x0377EAFC MOV X0, X19
	0x0377EB00 BL 0x21FC754
	0x0377EB04 STR X0, [X19 + 0x1A0]
	0x0377EB08 LDR X1, [X28]
	0x0377EB0C LDR X2, [X23]
	0x0377EB10 MOV X0, X19
	0x0377EB14 BL 0x21FC754
	0x0377EB18 STR X0, [X19 + 0x1A8]
	0x0377EB1C LDR X1, [X27]
	0x0377EB20 LDR X2, [X23]
	0x0377EB24 MOV X0, X19
	0x0377EB28 BL 0x21FC754
	0x0377EB2C STR X0, [X19 + 0x1B0]
	0x0377EB30 LDR X1, [X26]
	0x0377EB34 LDR X2, [X23]
	0x0377EB38 MOV X0, X19
	0x0377EB3C BL 0x21FC754
	0x0377EB40 STR X0, [X19 + 0x1B8]
	0x0377EB44 LDR X1, [X25]
	0x0377EB48 LDR X2, [X23]
	0x0377EB4C MOV X0, X19
	0x0377EB50 BL 0x21FC754
	0x0377EB54 STR X0, [X19 + 0x1C8]
	0x0377EB58 LDR X1, [X24]
	0x0377EB5C LDR X2, [X23]
	0x0377EB60 MOV X0, X19
	0x0377EB64 BL 0x21FC754
	0x0377EB68 STR X0, [X19 + 0x1C0]
	0x0377EB6C ADRP X8, 0x9C8000
	0x0377EB70 LDR X8, [X8 + 0x50]
	0x0377EB74 LDR X2, [X20]
	0x0377EB78 MOV X0, X19
	0x0377EB7C LDR X1, [X8]
	0x0377EB80 BL 0x21FC754
	0x0377EB84 STR X0, [X19 + 0x198]
	0x0377EB88 ADRP X8, 0x9C9000
	0x0377EB8C LDR X8, [X8 + 0x400]
	0x0377EB90 LDR X2, [X20]
	0x0377EB94 MOV X0, X19
	0x0377EB98 LDR X1, [X8]
	0x0377EB9C BL 0x21FC754
	0x0377EBA0 STR X0, [X19 + 0x1D0]
	0x0377EBA4 MOV X0, X19
	0x0377EBA8 LDP X20, X19, [X31 + 0x50]
	0x0377EBAC LDP X22, X21, [X31 + 0x40]
	0x0377EBB0 LDP X24, X23, [X31 + 0x30]
	0x0377EBB4 LDP X26, X25, [X31 + 0x20]
	0x0377EBB8 LDP X28, X27, [X31 + 0x10]
	0x0377EBBC LDP X29, X30, [X31], #0x60
	0x0377EBC0 B 0x377EBC4
	0x0377EBC4 STP X29, X30, [X31 - 0x60]!
	0x0377EBC8 STP X28, X27, [X31 + 0x10]
	0x0377EBCC STP X26, X25, [X31 + 0x20]
	0x0377EBD0 STP X24, X23, [X31 + 0x30]
	0x0377EBD4 STP X22, X21, [X31 + 0x40]
	0x0377EBD8 STP X20, X19, [X31 + 0x50]
	0x0377EBDC ADRP X20, 0xC62000
	0x0377EBE0 ADRP X21, 0x980000
	0x0377EBE4 ADRP X26, 0x9C6000
	0x0377EBE8 ADRP X28, 0x99D000
	0x0377EBEC ADRP X29, 0x9C8000
	0x0377EBF0 ADRP X27, 0x9C8000
	0x0377EBF4 ADRP X24, 0x9C8000
	0x0377EBF8 ADRP X25, 0x9C6000
	0x0377EBFC ADRP X22, 0x9C8000
	0x0377EC00 ADRP X23, 0x9C6000
	0x0377EC04 LDR X21, [X21 + 0x2B8]
	0x0377EC08 LDR X26, [X26 + 0xE38]
	0x0377EC0C LDR X28, [X28 + 0xF68]
	0x0377EC10 LDR X29, [X29 + 0x68]
	0x0377EC14 LDR X27, [X27 + 0xA8]
	0x0377EC18 LDR X24, [X24 + 0xA0]
	0x0377EC1C LDRB W8, [X20 + 0xF91]
	0x0377EC20 LDR X25, [X25 + 0xE30]
	0x0377EC24 LDR X22, [X22 + 0x40]
	0x0377EC28 LDR X23, [X23 + 0xE18]
	0x0377EC2C MOV X19, X0
	0x0377EC30 TBNZ X8, 0x0, 0x377ECC0
	0x0377EC34 ADRP X0, 0x9C6000
	0x0377EC38 LDR X0, [X0 + 0xE30]
	0x0377EC3C BL 0x1C16CF4
	0x0377EC40 ADRP X0, 0x9C6000
	0x0377EC44 LDR X0, [X0 + 0xE18]
	0x0377EC48 BL 0x1C16CF4
	0x0377EC4C ADRP X0, 0x9C8000
	0x0377EC50 LDR X0, [X0 + 0x68]
	0x0377EC54 BL 0x1C16CF4
	0x0377EC58 ADRP X0, 0x9C8000
	0x0377EC5C LDR X0, [X0 + 0x58]
	0x0377EC60 BL 0x1C16CF4
	0x0377EC64 ADRP X0, 0x9C6000
	0x0377EC68 LDR X0, [X0 + 0xE38]
	0x0377EC6C BL 0x1C16CF4
	0x0377EC70 ADRP X0, 0x9C8000
	0x0377EC74 LDR X0, [X0 + 0x40]
	0x0377EC78 BL 0x1C16CF4
	0x0377EC7C ADRP X0, 0x9C8000
	0x0377EC80 LDR X0, [X0 + 0xA0]
	0x0377EC84 BL 0x1C16CF4
	0x0377EC88 ADRP X0, 0x980000
	0x0377EC8C LDR X0, [X0 + 0x2B8]
	0x0377EC90 BL 0x1C16CF4
	0x0377EC94 ADRP X0, 0x9C8000
	0x0377EC98 LDR X0, [X0 + 0xA8]
	0x0377EC9C BL 0x1C16CF4
	0x0377ECA0 ADRP X0, 0x9C8000
	0x0377ECA4 LDR X0, [X0 + 0x50]
	0x0377ECA8 BL 0x1C16CF4
	0x0377ECAC ADRP X0, 0x99D000
	0x0377ECB0 LDR X0, [X0 + 0xF68]
	0x0377ECB4 BL 0x1C16CF4
	0x0377ECB8 MOVZ W8, 0x1
	0x0377ECBC STRB W8, [X20 + 0xF91]
	0x0377ECC0 LDR X1, [X21]
	0x0377ECC4 LDR X2, [X26]
	0x0377ECC8 MOV X0, X19
	0x0377ECCC BL 0x21FC754
	0x0377ECD0 STR X0, [X19 + 0x170]
	0x0377ECD4 LDR X1, [X28]
	0x0377ECD8 LDR X2, [X29]
	0x0377ECDC MOV X0, X19
	0x0377ECE0 BL 0x21FC754
	0x0377ECE4 STR X0, [X19 + 0x178]
	0x0377ECE8 LDR X1, [X27]
	0x0377ECEC LDR X2, [X26]
	0x0377ECF0 MOV X0, X19
	0x0377ECF4 BL 0x21FC754
	0x0377ECF8 STR X0, [X19 + 0x180]
	0x0377ECFC LDR X1, [X24]
	0x0377ED00 LDR X2, [X25]
	0x0377ED04 MOV X0, X19
	0x0377ED08 BL 0x21FC754
	0x0377ED0C STR X0, [X19 + 0x188]
	0x0377ED10 LDR X1, [X22]
	0x0377ED14 LDR X2, [X23]
	0x0377ED18 MOV X0, X19
	0x0377ED1C BL 0x21FC754
	0x0377ED20 STR X0, [X19 + 0x190]
	0x0377ED24 ADRP X8, 0x9C8000
	0x0377ED28 LDR X8, [X8 + 0x50]
	0x0377ED2C MOV X0, X19
	0x0377ED30 LDR X1, [X8]
	0x0377ED34 ADRP X8, 0x9C8000
	0x0377ED38 LDR X8, [X8 + 0x58]
	0x0377ED3C LDR X2, [X8]
	0x0377ED40 BL 0x21FC754
	0x0377ED44 STR X0, [X19 + 0x198]
	0x0377ED48 LDP X20, X19, [X31 + 0x50]
	0x0377ED4C LDP X22, X21, [X31 + 0x40]
	0x0377ED50 LDP X24, X23, [X31 + 0x30]
	0x0377ED54 LDP X26, X25, [X31 + 0x20]
	0x0377ED58 LDP X28, X27, [X31 + 0x10]
	0x0377ED5C LDP X29, X30, [X31], #0x60
	0x0377ED60 RET
	0x0377ED64 STP X30, X21, [X31 - 0x20]!
	0x0377ED68 STP X20, X19, [X31 + 0x10]
	0x0377ED6C ADRP X20, 0xC62000
	0x0377ED70 LDRB W8, [X20 + 0xF8B]
	0x0377ED74 MOV X19, X0
	0x0377ED78 TBNZ X8, 0x0, 0x377ED90
	0x0377ED7C ADRP X0, 0x9C9000
	0x0377ED80 LDR X0, [X0 + 0x408]
	0x0377ED84 BL 0x1C16CF4
	0x0377ED88 MOVZ W8, 0x1
	0x0377ED8C STRB W8, [X20 + 0xF8B]
	0x0377ED90 ADRP X20, 0x9C9000
	0x0377ED94 LDR X20, [X20 + 0x408]
	0x0377ED98 MOV X0, X19
	0x0377ED9C BL 0x377EDF4
	0x0377EDA0 ADRP X21, 0xC5B000
	0x0377EDA4 LDRB W8, [X21 + 0x78F]
	0x0377EDA8 LDR X19, [X19 + 0x1A0]
	0x0377EDAC CBNZ W8, 0x377EDC4
	0x0377EDB0 ADRP X0, 0x97D000
	0x0377EDB4 LDR X0, [X0 + 0xF08]
	0x0377EDB8 BL 0x1C16CF4
	0x0377EDBC MOVZ W8, 0x1
	0x0377EDC0 STRB W8, [X21 + 0x78F]
	0x0377EDC4 ADRP X8, 0x97D000
	0x0377EDC8 LDR X8, [X8 + 0xF08]
	0x0377EDCC LDR X3, [X20]
	0x0377EDD0 MOV X0, X19
	0x0377EDD4 LDP X20, X19, [X31 + 0x10]
	0x0377EDD8 LDR X8, [X8]
	0x0377EDDC MOV W1, W31
	0x0377EDE0 MOV X2, X31
	0x0377EDE4 LDR X8, [X8 + 0xB8]
	0x0377EDE8 LDP S0, S1, [X8]
	0x0377EDEC LDP X30, X21, [X31], #0x20
	0x0377EDF0 B 0x2209FB4
	0x0377EDF4 STP X30, X21, [X31 - 0x20]!
	0x0377EDF8 STP X20, X19, [X31 + 0x10]
	0x0377EDFC ADRP X20, 0xC62000
	0x0377EE00 LDRB W8, [X20 + 0xF92]
	0x0377EE04 MOV X19, X0
	0x0377EE08 TBNZ X8, 0x0, 0x377EE20
	0x0377EE0C ADRP X0, 0x9C9000
	0x0377EE10 LDR X0, [X0 + 0x408]
	0x0377EE14 BL 0x1C16CF4
	0x0377EE18 MOVZ W8, 0x1
	0x0377EE1C STRB W8, [X20 + 0xF92]
	0x0377EE20 ADRP X21, 0xC5B000
	0x0377EE24 ADRP X20, 0x9C9000
	0x0377EE28 LDRB W8, [X21 + 0x78F]
	0x0377EE2C LDR X19, [X19 + 0x178]
	0x0377EE30 LDR X20, [X20 + 0x408]
	0x0377EE34 CBNZ W8, 0x377EE4C
	0x0377EE38 ADRP X0, 0x97D000
	0x0377EE3C LDR X0, [X0 + 0xF08]
	0x0377EE40 BL 0x1C16CF4
	0x0377EE44 MOVZ W8, 0x1
	0x0377EE48 STRB W8, [X21 + 0x78F]
	0x0377EE4C ADRP X8, 0x97D000
	0x0377EE50 LDR X8, [X8 + 0xF08]
	0x0377EE54 LDR X3, [X20]
	0x0377EE58 MOV X0, X19
	0x0377EE5C LDP X20, X19, [X31 + 0x10]
	0x0377EE60 LDR X8, [X8]
	0x0377EE64 MOV W1, W31
	0x0377EE68 MOV X2, X31
	0x0377EE6C LDR X8, [X8 + 0xB8]
	0x0377EE70 LDP S0, S1, [X8]
	0x0377EE74 LDP X30, X21, [X31], #0x20
	0x0377EE78 B 0x2209FB4
	0x0377EE7C STP X30, X21, [X31 - 0x20]!
	0x0377EE80 STP X20, X19, [X31 + 0x10]
	0x0377EE84 LDR X20, [X0 + 0x1A0]
	0x0377EE88 MOV X19, X0
	0x0377EE8C MOV X21, X1
	0x0377EE90 BL 0x37729EC
	0x0377EE94 MOV X1, X31
	0x0377EE98 BL 0x380C47C
	0x0377EE9C MOV X1, X0
	0x0377EEA0 MOV X0, X20
	0x0377EEA4 MOV X2, X21
	0x0377EEA8 BL 0x3774C34
	0x0377EEAC MOV X0, X19
	0x0377EEB0 LDP X20, X19, [X31 + 0x10]
	0x0377EEB4 MOV X1, X21
	0x0377EEB8 LDP X30, X21, [X31], #0x20
	0x0377EEBC B 0x377EEC0
	0x0377EEC0 STP X30, X21, [X31 - 0x20]!
	0x0377EEC4 STP X20, X19, [X31 + 0x10]
	0x0377EEC8 LDR X20, [X0 + 0x178]
	0x0377EECC MOV X19, X0
	0x0377EED0 MOV X21, X1
	0x0377EED4 BL 0x37729EC
	0x0377EED8 MOV X1, X31
	0x0377EEDC BL 0x380C47C
	0x0377EEE0 MOV X1, X0
	0x0377EEE4 MOV X0, X20
	0x0377EEE8 MOV X2, X21
	0x0377EEEC BL 0x3774C34
	0x0377EEF0 MOV X0, X19
	0x0377EEF4 LDP X20, X19, [X31 + 0x10]
	0x0377EEF8 MOV X1, X21
	0x0377EEFC MOV W2, W31
	0x0377EF00 MOV X3, X31
	0x0377EF04 LDP X30, X21, [X31], #0x20
	0x0377EF08 B 0x3808C14
	0x0377EF0C B 0x377ED64
	0x0377EF10 B 0x377EE7C
	0x0377EF14 STP X30, X19, [X31 - 0x10]!
	0x0377EF18 MOV X19, X0
	0x0377EF1C BL 0x377295C
	0x0377EF20 MOVN W8, 0x0
	0x0377EF24 STR X31, [X19 + 0xE0]
	0x0377EF28 STR W8, [X19 + 0xE8]
	0x0377EF2C LDP X30, X19, [X31], #0x10
	0x0377EF30 RET
	0x0377EF34 STP X30, X19, [X31 - 0x10]!
	0x0377EF38 MOV X19, X0
	0x0377EF3C BL 0x377295C
	0x0377EF40 MOVN W8, 0x0
	0x0377EF44 STR X31, [X19 + 0xE0]
	0x0377EF48 STR W8, [X19 + 0xE8]
	0x0377EF4C LDP X30, X19, [X31], #0x10
	0x0377EF50 RET
	0x0377EF54 LDR X0, [X0 + 0x1A0]
	0x0377EF58 RET
	0x0377EF5C STR X1, [X0 + 0x1A0]
	0x0377EF60 RET
	0x0377EF64 LDR X0, [X0 + 0x1A8]
	0x0377EF68 RET
	0x0377EF6C STR X1, [X0 + 0x1A8]
	0x0377EF70 RET
	0x0377EF74 LDR X0, [X0 + 0x1B0]
	0x0377EF78 RET
	0x0377EF7C STR X1, [X0 + 0x1B0]
	0x0377EF80 RET
	0x0377EF84 LDR X0, [X0 + 0x1B8]
	0x0377EF88 RET
	0x0377EF8C STR X1, [X0 + 0x1B8]
	0x0377EF90 RET
	0x0377EF94 LDR X0, [X0 + 0x1C0]
	0x0377EF98 RET
	0x0377EF9C STR X1, [X0 + 0x1C0]
	0x0377EFA0 RET
	0x0377EFA4 LDR X0, [X0 + 0x1C8]
	0x0377EFA8 RET
	0x0377EFAC STR X1, [X0 + 0x1C8]
	0x0377EFB0 RET
	0x0377EFB4 LDR X0, [X0 + 0x1D0]
	0x0377EFB8 RET
	0x0377EFBC STR X1, [X0 + 0x1D0]
	0x0377EFC0 RET
	0x0377EFC4 LDR X0, [X0 + 0x1D8]
	0x0377EFC8 RET
	0x0377EFCC STR X1, [X0 + 0x1D8]
	0x0377EFD0 RET
	0x0377EFD4 LDR X0, [X0 + 0x1E0]
	0x0377EFD8 RET
	0x0377EFDC STR X1, [X0 + 0x1E0]
	0x0377EFE0 RET
	0x0377EFE4 STR X30, [X31 - 0x20]!
	0x0377EFE8 STP X20, X19, [X31 + 0x10]
	0x0377EFEC ADRP X19, 0xC62000
	0x0377EFF0 ADRP X20, 0x9C9000
	0x0377EFF4 LDRB W8, [X19 + 0xF8C]
	0x0377EFF8 LDR X20, [X20 + 0x410]
	0x0377EFFC TBNZ X8, 0x0, 0x377F014
	0x0377F000 ADRP X0, 0x9C8000
	0x0377F004 LDR X0, [X0 + 0x410]
	0x0377F008 BL 0x1C16CF4
	0x0377F00C MOVZ W8, 0x1
	0x0377F010 STRB W8, [X19 + 0xF8C]
	0x0377F014 LDR X8, [X20]
	0x0377F018 LDP X20, X19, [X31 + 0x10]
	0x0377F01C LDR X8, [X8 + 0xB8]
	0x0377F020 LDR X0, [X8]
	0x0377F024 LDR X30, [X31], #0x20
	0x0377F028 RET
	0x0377F02C STP X30, X21, [X31 - 0x20]!
	0x0377F030 STP X20, X19, [X31 + 0x10]
	0x0377F034 ADRP X20, 0xC61000
	0x0377F038 ADRP X21, 0x9C8000
	0x0377F03C LDRB W8, [X20 + 0xF8D]
	0x0377F040 LDR X21, [X21 + 0x410]
	0x0377F044 MOV X19, X0
	0x0377F048 TBNZ X8, 0x0, 0x377F060
	0x0377F04C ADRP X0, 0x9C8000
	0x0377F050 LDR X0, [X0 + 0x410]
	0x0377F054 BL 0x1C16CF4
	0x0377F058 MOVZ W8, 0x1
	0x0377F05C STRB W8, [X20 + 0xF8D]
	0x0377F060 LDR X8, [X21]
	0x0377F064 LDR X8, [X8 + 0xB8]
	0x0377F068 STR X19, [X8]
	0x0377F06C LDP X20, X19, [X31 + 0x10]
	0x0377F070 LDP X30, X21, [X31], #0x20
	0x0377F074 RET
	0x0377F078 STP X30, X21, [X31 - 0x20]!
	0x0377F07C STP X20, X19, [X31 + 0x10]
	0x0377F080 CMP W1, 0x6
	0x0377F084 B.HI 0x377F0E8
	0x0377F088 ADRP X9, 0xFFFFFFFFFD418000
	0x0377F08C MOV W8, W1
	0x0377F090 ADD X9, X9, 0x936
	0x0377F094 ADR X10, 0x10
	0x0377F098 LDRB W11, [X9, X8, LSL]
	0x0377F09C ADD X10, X10, X11, 0x2, LSL
	0x0377F0A0 BR X10
	0x0377F0A4 ADD X8, X0, 0x1A0
	0x0377F0A8 B 0x377F0D8
	0x0377F0AC ADD X8, X0, 0x1A8
	0x0377F0B0 B 0x377F0D8
	0x0377F0B4 ADD X8, X0, 0x1B0
	0x0377F0B8 B 0x377F0D8
	0x0377F0BC ADD X8, X0, 0x1B8
	0x0377F0C0 B 0x377F0D8
	0x0377F0C4 ADD X8, X0, 0x1D0
	0x0377F0C8 B 0x377F0D8
	0x0377F0CC ADD X8, X0, 0x1C0
	0x0377F0D0 B 0x377F0D8
	0x0377F0D4 ADD X8, X0, 0x1C8
	0x0377F0D8 LDR X0, [X8]
	0x0377F0DC LDP X20, X19, [X31 + 0x10]
	0x0377F0E0 LDP X30, X21, [X31], #0x20
	0x0377F0E4 RET
	0x0377F0E8 ADRP X0, 0x9C8000
	0x0377F0EC LDR X0, [X0 + 0x418]
	0x0377F0F0 MOV W19, W1
	0x0377F0F4 BL 0x1C16D08
	0x0377F0F8 MOV X20, X0
	0x0377F0FC ADRP X0, 0x974000
	0x0377F100 LDR X0, [X0 + 0x6C0]
	0x0377F104 BL 0x1C16D08
	0x0377F108 BL 0x19903D0
	0x0377F10C MOV X0, X20
	0x0377F110 MOV X1, X31
	0x0377F114 BL 0x338C698
	0x0377F118 MOV X20, X0
	0x0377F11C ADRP X0, 0x9C7000
	0x0377F120 LDR X0, [X0 + 0xEC8]
	0x0377F124 BL 0x1C16D08
	0x0377F128 BL 0x1C16F10
	0x0377F12C MOV X21, X0
	0x0377F130 ADRP X0, 0x9C7000
	0x0377F134 LDR X0, [X0 + 0xED0]
	0x0377F138 BL 0x1C16D08
	0x0377F13C MOV X1, X0
	0x0377F140 MOV X0, X21
	0x0377F144 MOV W2, W19
	0x0377F148 MOV X3, X20
	0x0377F14C MOV X4, X31
	0x0377F150 BL 0x366013C
	0x0377F154 ADRP X0, 0x9C8000
	0x0377F158 LDR X0, [X0 + 0x420]
	0x0377F15C BL 0x1C16D08
	0x0377F160 MOV X1, X0
	0x0377F164 MOV X0, X21
	0x0377F168 BL 0x1C16DEC
	0x0377F16C STR X30, [X31 - 0x20]!
	0x0377F170 STP X20, X19, [X31 + 0x10]
	0x0377F174 ADRP X20, 0xC61000
	0x0377F178 LDRB W8, [X20 + 0xFA0]
	0x0377F17C MOV X19, X0
	0x0377F180 CBNZ W8, 0x377F198
	0x0377F184 ADRP X0, 0x9C8000
	0x0377F188 LDR X0, [X0 + 0x3C0]
	0x0377F18C BL 0x1C16CF4
	0x0377F190 MOVZ W8, 0x1
	0x0377F194 STRB W8, [X20 + 0xFA0]
	0x0377F198 ADRP X8, 0x9C8000
	0x0377F19C LDR X8, [X8 + 0x3C0]
	0x0377F1A0 ADRP X20, 0xC61000
	0x0377F1A4 LDR X8, [X8]
	0x0377F1A8 LDR X8, [X8 + 0xB8]
	0x0377F1AC STR X19, [X8]
	0x0377F1B0 LDRB W8, [X20 + 0xF9E]
	0x0377F1B4 CBNZ W8, 0x377F1CC
	0x0377F1B8 ADRP X0, 0x9C8000
	0x0377F1BC LDR X0, [X0 + 0x410]
	0x0377F1C0 BL 0x1C16CF4
	0x0377F1C4 MOVZ W8, 0x1
	0x0377F1C8 STRB W8, [X20 + 0xF9E]
	0x0377F1CC ADRP X8, 0x9C8000
	0x0377F1D0 LDR X8, [X8 + 0x410]
	0x0377F1D4 LDR X8, [X8]
	0x0377F1D8 LDR X8, [X8 + 0xB8]
	0x0377F1DC STR X19, [X8]
	0x0377F1E0 LDP X20, X19, [X31 + 0x10]
	0x0377F1E4 LDR X30, [X31], #0x20
	0x0377F1E8 RET
	0x0377F1EC STR X30, [X31 - 0x20]!
	0x0377F1F0 STP X20, X19, [X31 + 0x10]
	0x0377F1F4 MOV X19, X0
	0x0377F1F8 BL 0x377E8D8
	0x0377F1FC ADRP X20, 0xC61000
	0x0377F200 LDRB W8, [X20 + 0xF9F]
	0x0377F204 CBNZ W8, 0x377F21C
	0x0377F208 ADRP X0, 0x9C8000
	0x0377F20C LDR X0, [X0 + 0x410]
	0x0377F210 BL 0x1C16CF4
	0x0377F214 MOVZ W8, 0x1
	0x0377F218 STRB W8, [X20 + 0xF9F]
	0x0377F21C ADRP X20, 0x9C8000
	0x0377F220 LDR X20, [X20 + 0x410]
	0x0377F224 LDR X8, [X20]
	0x0377F228 LDR X8, [X8 + 0xB8]
	0x0377F22C LDR X9, [X8]
	0x0377F230 CMP X9, X19
	0x0377F234 B.NE 0x377F260
	0x0377F238 ADRP X19, 0xC61000
	0x0377F23C LDRB W9, [X19 + 0xF9E]
	0x0377F240 CBNZ W9, 0x377F25C
	0x0377F244 MOV X0, X20
	0x0377F248 BL 0x1C16CF4
	0x0377F24C LDR X8, [X20]
	0x0377F250 MOVZ W9, 0x1
	0x0377F254 STRB W9, [X19 + 0xF9E]
	0x0377F258 LDR X8, [X8 + 0xB8]
	0x0377F25C STR X31, [X8]
	0x0377F260 LDP X20, X19, [X31 + 0x10]
	0x0377F264 LDR X30, [X31], #0x20
	0x0377F268 RET
	0x0377F26C STP X29, X30, [X31 - 0x60]!
	0x0377F270 STP X28, X27, [X31 + 0x10]
	0x0377F274 STP X26, X25, [X31 + 0x20]
	0x0377F278 STP X24, X23, [X31 + 0x30]
	0x0377F27C STP X22, X21, [X31 + 0x40]
	0x0377F280 STP X20, X19, [X31 + 0x50]
	0x0377F284 ADRP X21, 0xC61000
	0x0377F288 ADRP X22, 0x9C8000
	0x0377F28C ADRP X24, 0x9C5000
	0x0377F290 ADRP X20, 0x9C8000
	0x0377F294 ADRP X29, 0x9C8000
	0x0377F298 ADRP X28, 0x9C8000
	0x0377F29C ADRP X27, 0x9C8000
	0x0377F2A0 ADRP X26, 0x9C8000
	0x0377F2A4 ADRP X25, 0x9C8000
	0x0377F2A8 ADRP X23, 0x9C5000
	0x0377F2AC LDR X22, [X22 + 0x428]
	0x0377F2B0 LDR X24, [X24 + 0xE18]
	0x0377F2B4 LDR X20, [X20 + 0x430]
	0x0377F2B8 LDR X29, [X29 + 0x438]
	0x0377F2BC LDR X28, [X28 + 0x440]
	0x0377F2C0 LDR X27, [X27 + 0x448]
	0x0377F2C4 LDR X26, [X26 + 0x450]
	0x0377F2C8 LDRB W8, [X21 + 0xF8E]
	0x0377F2CC LDR X25, [X25 + 0x458]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X20, 0xC63000
	010 Move X21, 0x976000
	011 Move W8, [X20+3969]
	012 Move X21, [X21+2760]
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {380}
	018 Move X0, 0x9CA000
	019 Move X0, [X0+200]
	020 Call 0x1C17CF4
	021 Move X0, 0x9C7000
	022 Move X0, [X0+3608]
	023 Call 0x1C17CF4
	024 Move X0, 0x9CA000
	025 Move X0, [X0+208]
	026 Call 0x1C17CF4
	027 Move X0, 0x9CA000
	028 Move X0, [X0+216]
	029 Call 0x1C17CF4
	030 Move X0, 0x976000
	031 Move X0, [X0+2760]
	032 Call 0x1C17CF4
	033 Move X0, 0x9CA000
	034 Move X0, [X0+224]
	035 Call 0x1C17CF4
	036 Move X0, 0x9CA000
	037 Move X0, [X0+232]
	038 Call 0x1C17CF4
	039 Move X0, 0x9CA000
	040 Move X0, [X0+240]
	041 Call 0x1C17CF4
	042 Move X0, 0x9CA000
	043 Move X0, [X0+248]
	044 Call 0x1C17CF4
	045 Move X0, 0x9CA000
	046 Move X0, [X0+256]
	047 Call 0x1C17CF4
	048 Move X0, 0x99E000
	049 Move X0, [X0+1920]
	050 Call 0x1C17CF4
	051 Move X0, 0x9CA000
	052 Move X0, [X0+264]
	053 Call 0x1C17CF4
	054 Move X0, 0x9A3000
	055 Move X0, [X0+944]
	056 Call 0x1C17CF4
	057 Move X0, 0x9C7000
	058 Move X0, [X0+3736]
	059 Call 0x1C17CF4
	060 Move X0, 0x9CA000
	061 Move X0, [X0+272]
	062 Call 0x1C17CF4
	063 Move X0, 0x9BB000
	064 Move X0, [X0+1304]
	065 Call 0x1C17CF4
	066 Move X0, 0x9CA000
	067 Move X0, [X0+280]
	068 Call 0x1C17CF4
	069 Move X0, 0x9CA000
	070 Move X0, [X0+288]
	071 Call 0x1C17CF4
	072 Move X0, 0x9CA000
	073 Move X0, [X0+296]
	074 Call 0x1C17CF4
	075 Move X0, 0x9CA000
	076 Move X0, [X0+304]
	077 Call 0x1C17CF4
	078 Move X0, 0x987000
	079 Move X0, [X0+280]
	080 Call 0x1C17CF4
	081 Move X0, 0x9CA000
	082 Move X0, [X0+312]
	083 Call 0x1C17CF4
	084 Move X0, 0x9CA000
	085 Move X0, [X0+320]
	086 Call 0x1C17CF4
	087 Move X0, 0x987000
	088 Move X0, [X0+824]
	089 Call 0x1C17CF4
	090 Move X0, 0x9CA000
	091 Move X0, [X0+328]
	092 Call 0x1C17CF4
	093 Move X0, 0x987000
	094 Move X0, [X0+2472]
	095 Call 0x1C17CF4
	096 Move X0, 0x9CA000
	097 Move X0, [X0+336]
	098 Call 0x1C17CF4
	099 Move X0, 0x9CA000
	100 Move X0, [X0+344]
	101 Call 0x1C17CF4
	102 Move X0, 0x9A3000
	103 Move X0, [X0+952]
	104 Call 0x1C17CF4
	105 Move X0, 0x9CA000
	106 Move X0, [X0+352]
	107 Call 0x1C17CF4
	108 Move X0, 0x9CA000
	109 Move X0, [X0+360]
	110 Call 0x1C17CF4
	111 Move X0, 0x988000
	112 Move X0, [X0+2224]
	113 Call 0x1C17CF4
	114 Move X0, 0x9CA000
	115 Move X0, [X0+368]
	116 Call 0x1C17CF4
	117 Move X0, 0x9CA000
	118 Move X0, [X0+376]
	119 Call 0x1C17CF4
	120 Move X0, 0x9AD000
	121 Move X0, [X0+416]
	122 Call 0x1C17CF4
	123 Move X0, 0x9CA000
	124 Move X0, [X0+384]
	125 Call 0x1C17CF4
	126 Move X0, 0x9CA000
	127 Move X0, [X0+392]
	128 Call 0x1C17CF4
	129 Move X0, 0x9BD000
	130 Move X0, [X0+3536]
	131 Call 0x1C17CF4
	132 Move X0, 0x9CA000
	133 Move X0, [X0+400]
	134 Call 0x1C17CF4
	135 Move X0, 0x9A3000
	136 Move X0, [X0+960]
	137 Call 0x1C17CF4
	138 Move X0, 0x9CA000
	139 Move X0, [X0+408]
	140 Call 0x1C17CF4
	141 Move X0, 0x9CA000
	142 Move X0, [X0+416]
	143 Call 0x1C17CF4
	144 Move X0, 0x9CA000
	145 Move X0, [X0+424]
	146 Call 0x1C17CF4
	147 Move X0, 0x9CA000
	148 Move X0, [X0+432]
	149 Call 0x1C17CF4
	150 Move X0, 0x9CA000
	151 Move X0, [X0+440]
	152 Call 0x1C17CF4
	153 Move X0, 0x9CA000
	154 Move X0, [X0+448]
	155 Call 0x1C17CF4
	156 Move X0, 0x9CA000
	157 Move X0, [X0+456]
	158 Call 0x1C17CF4
	159 Move X0, 0x9CA000
	160 Move X0, [X0+464]
	161 Call 0x1C17CF4
	162 Move X0, 0x9CA000
	163 Move X0, [X0+472]
	164 Call 0x1C17CF4
	165 Move X0, 0x9AB000
	166 Move X0, [X0+1336]
	167 Call 0x1C17CF4
	168 Move X0, 0x9CA000
	169 Move X0, [X0+480]
	170 Call 0x1C17CF4
	171 Move X0, 0x9CA000
	172 Move X0, [X0+488]
	173 Call 0x1C17CF4
	174 Move X0, 0x9CA000
	175 Move X0, [X0+496]
	176 Call 0x1C17CF4
	177 Move X0, 0x9CA000
	178 Move X0, [X0+504]
	179 Call 0x1C17CF4
	180 Move X0, 0x9CA000
	181 Move X0, [X0+512]
	182 Call 0x1C17CF4
	183 Move X0, 0x9CA000
	184 Move X0, [X0+520]
	185 Call 0x1C17CF4
	186 Move X0, 0x9A8000
	187 Move X0, [X0+1816]
	188 Call 0x1C17CF4
	189 Move X0, 0x9CA000
	190 Move X0, [X0+528]
	191 Call 0x1C17CF4
	192 Move X0, 0x9CA000
	193 Move X0, [X0+536]
	194 Call 0x1C17CF4
	195 Move X0, 0x9CA000
	196 Move X0, [X0+544]
	197 Call 0x1C17CF4
	198 Move X0, 0x98F000
	199 Move X0, [X0+880]
	200 Call 0x1C17CF4
	201 Move X0, 0x98F000
	202 Move X0, [X0+1064]
	203 Call 0x1C17CF4
	204 Move X0, 0x9CA000
	205 Move X0, [X0+552]
	206 Call 0x1C17CF4
	207 Move X0, 0x9CA000
	208 Move X0, [X0+560]
	209 Call 0x1C17CF4
	210 Move X0, 0x9CA000
	211 Move X0, [X0+568]
	212 Call 0x1C17CF4
	213 Move X0, 0x9CA000
	214 Move X0, [X0+576]
	215 Call 0x1C17CF4
	216 Move X0, 0x9CA000
	217 Move X0, [X0+584]
	218 Call 0x1C17CF4
	219 Move X0, 0x9CA000
	220 Move X0, [X0+592]
	221 Call 0x1C17CF4
	222 Move X0, 0x9CA000
	223 Move X0, [X0+600]
	224 Call 0x1C17CF4
	225 Move X0, 0x9CA000
	226 Move X0, [X0+608]
	227 Call 0x1C17CF4
	228 Move X0, 0x9CA000
	229 Move X0, [X0+616]
	230 Call 0x1C17CF4
	231 Move X0, 0x9CA000
	232 Move X0, [X0+624]
	233 Call 0x1C17CF4
	234 Move X0, 0x9CA000
	235 Move X0, [X0+632]
	236 Call 0x1C17CF4
	237 Move X0, 0x99E000
	238 Move X0, [X0+1928]
	239 Call 0x1C17CF4
	240 Move X0, 0x9CA000
	241 Move X0, [X0+640]
	242 Call 0x1C17CF4
	243 Move X0, 0x9CA000
	244 Move X0, [X0+648]
	245 Call 0x1C17CF4
	246 Move X0, 0x9CA000
	247 Move X0, [X0+656]
	248 Call 0x1C17CF4
	249 Move X0, 0x9A3000
	250 Move X0, [X0+976]
	251 Call 0x1C17CF4
	252 Move X0, 0x97A000
	253 Move X0, [X0+1536]
	254 Call 0x1C17CF4
	255 Move X0, 0x99F000
	256 Move X0, [X0+88]
	257 Call 0x1C17CF4
	258 Move X0, 0x9CA000
	259 Move X0, [X0+664]
	260 Call 0x1C17CF4
	261 Move X0, 0x9A3000
	262 Move X0, [X0+936]
	263 Call 0x1C17CF4
	264 Move X0, 0x9CA000
	265 Move X0, [X0+672]
	266 Call 0x1C17CF4
	267 Move X0, 0x9CA000
	268 Move X0, [X0+680]
	269 Call 0x1C17CF4
	270 Move X0, 0x9A3000
	271 Move X0, [X0+984]
	272 Call 0x1C17CF4
	273 Move X0, 0x9CA000
	274 Move X0, [X0+688]
	275 Call 0x1C17CF4
	276 Move X0, 0x9CA000
	277 Move X0, [X0+696]
	278 Call 0x1C17CF4
	279 Move X0, 0x9CA000
	280 Move X0, [X0+704]
	281 Call 0x1C17CF4
	282 Move X0, 0x995000
	283 Move X0, [X0+1736]
	284 Call 0x1C17CF4
	285 Move X0, 0x9CA000
	286 Move X0, [X0+712]
	287 Call 0x1C17CF4
	288 Move X0, 0x9CA000
	289 Move X0, [X0+720]
	290 Call 0x1C17CF4
	291 Move X0, 0x9CA000
	292 Move X0, [X0+728]
	293 Call 0x1C17CF4
	294 Move X0, 0x9CA000
	295 Move X0, [X0+736]
	296 Call 0x1C17CF4
	297 Move X0, 0x9CA000
	298 Move X0, [X0+744]
	299 Call 0x1C17CF4
	300 Move X0, 0x9CA000
	301 Move X0, [X0+752]
	302 Call 0x1C17CF4
	303 Move X0, 0x9CA000
	304 Move X0, [X0+760]
	305 Call 0x1C17CF4
	306 Move X0, 0x9CA000
	307 Move X0, [X0+768]
	308 Call 0x1C17CF4
	309 Move X0, 0x9CA000
	310 Move X0, [X0+776]
	311 Call 0x1C17CF4
	312 Move X0, 0x9CA000
	313 Move X0, [X0+784]
	314 Call 0x1C17CF4
	315 Move X0, 0x9CA000
	316 Move X0, [X0+792]
	317 Call 0x1C17CF4
	318 Move X0, 0x9CA000
	319 Move X0, [X0+800]
	320 Call 0x1C17CF4
	321 Move X0, 0x9CA000
	322 Move X0, [X0+808]
	323 Call 0x1C17CF4
	324 Move X0, 0x9CA000
	325 Move X0, [X0+816]
	326 Call 0x1C17CF4
	327 Move X0, 0x9CA000
	328 Move X0, [X0+824]
	329 Call 0x1C17CF4
	330 Move X0, 0x99F000
	331 Move X0, [X0+3264]
	332 Call 0x1C17CF4
	333 Move X0, 0x9CA000
	334 Move X0, [X0+832]
	335 Call 0x1C17CF4
	336 Move X0, 0x9CA000
	337 Move X0, [X0+840]
	338 Call 0x1C17CF4
	339 Move X0, 0x9CA000
	340 Move X0, [X0+848]
	341 Call 0x1C17CF4
	342 Move X0, 0x9CA000
	343 Move X0, [X0+856]
	344 Call 0x1C17CF4
	345 Move X0, 0x9CA000
	346 Move X0, [X0+864]
	347 Call 0x1C17CF4
	348 Move X0, 0x99A000
	349 Move X0, [X0+3776]
	350 Call 0x1C17CF4
	351 Move X0, 0x9CA000
	352 Move X0, [X0+872]
	353 Call 0x1C17CF4
	354 Move X0, 0x9B0000
	355 Move X0, [X0+1432]
	356 Call 0x1C17CF4
	357 Move X0, 0x9CA000
	358 Move X0, [X0+880]
	359 Call 0x1C17CF4
	360 Move X0, 0x9CA000
	361 Move X0, [X0+888]
	362 Call 0x1C17CF4
	363 Move X0, 0x99C000
	364 Move X0, [X0+1448]
	365 Call 0x1C17CF4
	366 Move X0, 0x978000
	367 Move X0, [X0+1200]
	368 Call 0x1C17CF4
	369 Move X0, 0x9CA000
	370 Move X0, [X0+896]
	371 Call 0x1C17CF4
	372 Move X0, 0x9CA000
	373 Move X0, [X0+904]
	374 Call 0x1C17CF4
	375 Move X0, 0x9CA000
	376 Move X0, [X0+912]
	377 Call 0x1C17CF4
	378 Move W8, 1
	379 Move [X20+3969], W8
	380 Move X0, [X21]
	381 Move W1, 110
	382 Call 0x1C17D6C
	383 Compare X0, 0
	384 JumpIfEqual {1032}
	385 Move W1, [X0+24]
	386 Move X20, X0
	387 Compare W1, 0
	388 JumpIfEqual {1031}
	389 Move X8, 0x9CA000
	390 Move X8, [X8+840]
	391 NotImplemented "Instruction CMP not yet implemented."
	392 Move X8, [X8]
	393 Move [X20+32], X8
	394 Move X8, 0x9CA000
	395 Move X8, [X8+512]
	396 NotImplemented "Instruction CMP not yet implemented."
	397 Move X8, [X8]
	398 Move [X20+40], X8
	399 Move X8, 0x9CA000
	400 Move X8, [X8+600]
	401 NotImplemented "Instruction CMP not yet implemented."
	402 Move X8, [X8]
	403 Move [X20+48], X8
	404 Move X8, 0x9CA000
	405 Move X8, [X8+832]
	406 NotImplemented "Instruction CMP not yet implemented."
	407 Move X8, [X8]
	408 Move [X20+56], X8
	409 Move X8, 0x9CA000
	410 Move X8, [X8+224]
	411 NotImplemented "Instruction CMP not yet implemented."
	412 Move X8, [X8]
	413 Move [X20+64], X8
	414 Move X8, 0x9CA000
	415 Move X8, [X8+760]
	416 NotImplemented "Instruction CMP not yet implemented."
	417 Move X8, [X8]
	418 Move [X20+72], X8
	419 Move X8, 0x9CA000
	420 Move X8, [X8+472]
	421 NotImplemented "Instruction CMP not yet implemented."
	422 Move X8, [X8]
	423 Move [X20+80], X8
	424 Move X8, 0x9B0000
	425 Move X8, [X8+1432]
	426 NotImplemented "Instruction CMP not yet implemented."
	427 Move X8, [X8]
	428 Move [X20+88], X8
	429 Move X8, 0x9CA000
	430 Move X8, [X8+328]
	431 NotImplemented "Instruction CMP not yet implemented."
	432 Move X8, [X8]
	433 Move [X20+96], X8
	434 Move X8, 0x9CA000
	435 Move X8, [X8+696]
	436 NotImplemented "Instruction CMP not yet implemented."
	437 Move X8, [X8]
	438 Move [X20+104], X8
	439 Move X8, 0x9CA000
	440 Move X8, [X8+584]
	441 NotImplemented "Instruction CMP not yet implemented."
	442 Move X8, [X8]
	443 Move [X20+112], X8
	444 Move X8, 0x9CA000
	445 Move X8, [X8+592]
	446 NotImplemented "Instruction CMP not yet implemented."
	447 Move X8, [X8]
	448 Move [X20+120], X8
	449 Move X8, 0x9CA000
	450 Move X8, [X8+528]
	451 NotImplemented "Instruction CMP not yet implemented."
	452 Move X8, [X8]
	453 Move [X20+128], X8
	454 Move X8, 0x9CA000
	455 Move X8, [X8+688]
	456 NotImplemented "Instruction CMP not yet implemented."
	457 Move X8, [X8]
	458 Move [X20+136], X8
	459 Move X8, 0x9A3000
	460 Move X8, [X8+944]
	461 NotImplemented "Instruction CMP not yet implemented."
	462 Move X8, [X8]
	463 Move [X20+144], X8
	464 Move X8, 0x9A3000
	465 Move X8, [X8+960]
	466 NotImplemented "Instruction CMP not yet implemented."
	467 Move X8, [X8]
	468 Move [X20+152], X8
	469 Move X8, 0x9AB000
	470 Move X8, [X8+1336]
	471 NotImplemented "Instruction CMP not yet implemented."
	472 Move X8, [X8]
	473 Move [X20+160], X8
	474 Move X8, 0x99F000
	475 Move X8, [X8+88]
	476 NotImplemented "Instruction CMP not yet implemented."
	477 Move X8, [X8]
	478 Move [X20+168], X8
	479 Move X8, 0x9AD000
	480 Move X8, [X8+416]
	481 NotImplemented "Instruction CMP not yet implemented."
	482 Move X8, [X8]
	483 Move [X20+176], X8
	484 Move X8, 0x9CA000
	485 Move X8, [X8+352]
	486 NotImplemented "Instruction CMP not yet implemented."
	487 Move X8, [X8]
	488 Move [X20+184], X8
	489 Move X8, 0x9A3000
	490 Move X8, [X8+952]
	491 NotImplemented "Instruction CMP not yet implemented."
	492 Move X8, [X8]
	493 Move [X20+192], X8
	494 Move X8, 0x9CA000
	495 Move X8, [X8+272]
	496 NotImplemented "Instruction CMP not yet implemented."
	497 Move X8, [X8]
	498 Move [X20+200], X8
	499 Move X8, 0x9CA000
	500 Move X8, [X8+296]
	501 NotImplemented "Instruction CMP not yet implemented."
	502 Move X8, [X8]
	503 Move [X20+208], X8
	504 Move X8, 0x9CA000
	505 Move X8, [X8+432]
	506 NotImplemented "Instruction CMP not yet implemented."
	507 Move X8, [X8]
	508 Move [X20+216], X8
	509 Move X8, 0x9CA000
	510 Move X8, [X8+392]
	511 NotImplemented "Instruction CMP not yet implemented."
	512 Move X8, [X8]
	513 Move [X20+224], X8
	514 Move X8, 0x9CA000
	515 Move X8, [X8+720]
	516 NotImplemented "Instruction CMP not yet implemented."
	517 Move X8, [X8]
	518 Move [X20+232], X8
	519 Move X8, 0x9CA000
	520 Move X8, [X8+736]
	521 NotImplemented "Instruction CMP not yet implemented."
	522 Move X8, [X8]
	523 Move [X20+240], X8
	524 Move X8, 0x9CA000
	525 Move X8, [X8+416]
	526 NotImplemented "Instruction CMP not yet implemented."
	527 Move X8, [X8]
	528 Move [X20+248], X8
	529 Move X8, 0x9BB000
	530 Move X8, [X8+1304]
	531 NotImplemented "Instruction CMP not yet implemented."
	532 Move X8, [X8]
	533 Move [X20+256], X8
	534 Move X8, 0x9CA000
	535 Move X8, [X8+280]
	536 NotImplemented "Instruction CMP not yet implemented."
	537 Move X8, [X8]
	538 Move [X20+264], X8
	539 Move X8, 0x9BD000
	540 Move X8, [X8+3536]
	541 NotImplemented "Instruction CMP not yet implemented."
	542 Move X8, [X8]
	543 Move [X20+272], X8
	544 Move X8, 0x9A3000
	545 Move X8, [X8+936]
	546 NotImplemented "Instruction CMP not yet implemented."
	547 Move X8, [X8]
	548 Move [X20+280], X8
	549 Move X8, 0x99F000
	550 Move X8, [X8+3264]
	551 NotImplemented "Instruction CMP not yet implemented."
	552 Move X8, [X8]
	553 Move [X20+288], X8
	554 Move X8, 0x9A8000
	555 Move X8, [X8+1816]
	556 NotImplemented "Instruction CMP not yet implemented."
	557 Move X8, [X8]
	558 Move [X20+296], X8
	559 Move X8, 0x9CA000
	560 Move X8, [X8+776]
	561 NotImplemented "Instruction CMP not yet implemented."
	562 Move X8, [X8]
	563 Move [X20+304], X8
	564 Move X8, 0x97A000
	565 Move X8, [X8+1536]
	566 NotImplemented "Instruction CMP not yet implemented."
	567 Move X8, [X8]
	568 Move [X20+312], X8
	569 Move X8, 0x9A3000
	570 Move X8, [X8+984]
	571 NotImplemented "Instruction CMP not yet implemented."
	572 Move X8, [X8]
	573 Move [X20+320], X8
	574 Move X8, 0x99E000
	575 Move X8, [X8+1920]
	576 NotImplemented "Instruction CMP not yet implemented."
	577 Move X8, [X8]
	578 Move [X20+328], X8
	579 Move X8, 0x99E000
	580 Move X8, [X8+1928]
	581 NotImplemented "Instruction CMP not yet implemented."
	582 Move X8, [X8]
	583 Move [X20+336], X8
	584 Move X8, 0x9A3000
	585 Move X8, [X8+976]
	586 NotImplemented "Instruction CMP not yet implemented."
	587 Move X8, [X8]
	588 Move [X20+344], X8
	589 Move X8, 0x99A000
	590 Move X8, [X8+3776]
	591 NotImplemented "Instruction CMP not yet implemented."
	592 Move X8, [X8]
	593 Move [X20+352], X8
	594 Move X8, 0x987000
	595 Move X8, [X8+824]
	596 NotImplemented "Instruction CMP not yet implemented."
	597 Move X8, [X8]
	598 Move [X20+360], X8
	599 Move X8, 0x987000
	600 Move X8, [X8+280]
	601 NotImplemented "Instruction CMP not yet implemented."
	602 Move X8, [X8]
	603 Move [X20+368], X8
	604 Move X8, 0x98F000
	605 Move X8, [X8+1064]
	606 NotImplemented "Instruction CMP not yet implemented."
	607 Move X8, [X8]
	608 Move [X20+376], X8
	609 Move X8, 0x99C000
	610 Move X8, [X8+1448]
	611 NotImplemented "Instruction CMP not yet implemented."
	612 Move X8, [X8]
	613 Move [X20+384], X8
	614 Move X8, 0x988000
	615 Move X8, [X8+2224]
	616 NotImplemented "Instruction CMP not yet implemented."
	617 Move X8, [X8]
	618 Move [X20+392], X8
	619 Move X8, 0x98F000
	620 Move X8, [X8+880]
	621 NotImplemented "Instruction CMP not yet implemented."
	622 Move X8, [X8]
	623 Move [X20+400], X8
	624 Move X8, 0x995000
	625 Move X8, [X8+1736]
	626 NotImplemented "Instruction CMP not yet implemented."
	627 Move X8, [X8]
	628 Move [X20+408], X8
	629 Move X8, 0x987000
	630 Move X8, [X8+2472]
	631 NotImplemented "Instruction CMP not yet implemented."
	632 Move X8, [X8]
	633 Move [X20+416], X8
	634 Move X8, 0x978000
	635 Move X8, [X8+1200]
	636 NotImplemented "Instruction CMP not yet implemented."
	637 Move X8, [X8]
	638 Move [X20+424], X8
	639 Move X8, 0x9CA000
	640 Move X8, [X8+376]
	641 NotImplemented "Instruction CMP not yet implemented."
	642 Move X8, [X8]
	643 Move [X20+432], X8
	644 Move X8, 0x9CA000
	645 Move X8, [X8+896]
	646 NotImplemented "Instruction CMP not yet implemented."
	647 Move X8, [X8]
	648 Move [X20+440], X8
	649 Move X8, 0x9CA000
	650 Move X8, [X8+568]
	651 NotImplemented "Instruction CMP not yet implemented."
	652 Move X8, [X8]
	653 Move [X20+448], X8
	654 Move X8, 0x9CA000
	655 Move X8, [X8+808]
	656 NotImplemented "Instruction CMP not yet implemented."
	657 Move X8, [X8]
	658 Move [X20+456], X8
	659 Move X8, 0x9CA000
	660 Move X8, [X8+448]
	661 NotImplemented "Instruction CMP not yet implemented."
	662 Move X8, [X8]
	663 Move [X20+464], X8
	664 Move X8, 0x9CA000
	665 Move X8, [X8+552]
	666 NotImplemented "Instruction CMP not yet implemented."
	667 Move X8, [X8]
	668 Move [X20+472], X8
	669 Move X8, 0x9CA000
	670 Move X8, [X8+888]
	671 NotImplemented "Instruction CMP not yet implemented."
	672 Move X8, [X8]
	673 Move [X20+480], X8
	674 Move X8, 0x9CA000
	675 Move X8, [X8+608]
	676 NotImplemented "Instruction CMP not yet implemented."
	677 Move X8, [X8]
	678 Move [X20+488], X8
	679 Move X8, 0x9CA000
	680 Move X8, [X8+400]
	681 NotImplemented "Instruction CMP not yet implemented."
	682 Move X8, [X8]
	683 Move [X20+496], X8
	684 Move X8, 0x9CA000
	685 Move X8, [X8+784]
	686 NotImplemented "Instruction CMP not yet implemented."
	687 Move X8, [X8]
	688 Move [X20+504], X8
	689 Move X8, 0x9CA000
	690 Move X8, [X8+368]
	691 NotImplemented "Instruction CMP not yet implemented."
	692 Move X8, [X8]
	693 Move [X20+512], X8
	694 Move X8, 0x9CA000
	695 Move X8, [X8+344]
	696 NotImplemented "Instruction CMP not yet implemented."
	697 Move X8, [X8]
	698 Move [X20+520], X8
	699 Move X8, 0x9CA000
	700 Move X8, [X8+672]
	701 NotImplemented "Instruction CMP not yet implemented."
	702 Move X8, [X8]
	703 Move [X20+528], X8
	704 Move X8, 0x9CA000
	705 Move X8, [X8+240]
	706 NotImplemented "Instruction CMP not yet implemented."
	707 Move X8, [X8]
	708 Move [X20+536], X8
	709 Move X8, 0x9CA000
	710 Move X8, [X8+544]
	711 NotImplemented "Instruction CMP not yet implemented."
	712 Move X8, [X8]
	713 Move [X20+544], X8
	714 Move X8, 0x9CA000
	715 Move X8, [X8+464]
	716 NotImplemented "Instruction CMP not yet implemented."
	717 Move X8, [X8]
	718 Move [X20+552], X8
	719 Move X8, 0x9CA000
	720 Move X8, [X8+504]
	721 NotImplemented "Instruction CMP not yet implemented."
	722 Move X8, [X8]
	723 Move [X20+560], X8
	724 Move X8, 0x9C7000
	725 Move X8, [X8+3736]
	726 NotImplemented "Instruction CMP not yet implemented."
	727 Move X8, [X8]
	728 Move [X20+568], X8
	729 Move X8, 0x9CA000
	730 Move X8, [X8+664]
	731 NotImplemented "Instruction CMP not yet implemented."
	732 Move X8, [X8]
	733 Move [X20+576], X8
	734 Move X8, 0x9CA000
	735 Move X8, [X8+648]
	736 NotImplemented "Instruction CMP not yet implemented."
	737 Move X8, [X8]
	738 Move [X20+584], X8
	739 Move X8, 0x9CA000
	740 Move X8, [X8+248]
	741 NotImplemented "Instruction CMP not yet implemented."
	742 Move X8, [X8]
	743 Move [X20+592], X8
	744 Move X8, 0x9CA000
	745 Move X8, [X8+336]
	746 NotImplemented "Instruction CMP not yet implemented."
	747 Move X8, [X8]
	748 Move [X20+600], X8
	749 Move X8, 0x9CA000
	750 Move X8, [X8+288]
	751 NotImplemented "Instruction CMP not yet implemented."
	752 Move X8, [X8]
	753 Move [X20+608], X8
	754 Move X8, 0x9CA000
	755 Move X8, [X8+752]
	756 NotImplemented "Instruction CMP not yet implemented."
	757 Move X8, [X8]
	758 Move [X20+616], X8
	759 Move X8, 0x9CA000
	760 Move X8, [X8+480]
	761 NotImplemented "Instruction CMP not yet implemented."
	762 Move X8, [X8]
	763 Move [X20+624], X8
	764 Move X8, 0x9CA000
	765 Move X8, [X8+496]
	766 NotImplemented "Instruction CMP not yet implemented."
	767 Move X8, [X8]
	768 Move [X20+632], X8
	769 Move X8, 0x9CA000
	770 Move X8, [X8+536]
	771 NotImplemented "Instruction CMP not yet implemented."
	772 Move X8, [X8]
	773 Move [X20+640], X8
	774 Move X8, 0x9CA000
	775 Move X8, [X8+360]
	776 NotImplemented "Instruction CMP not yet implemented."
	777 Move X8, [X8]
	778 Move [X20+648], X8
	779 Move X8, 0x9CA000
	780 Move X8, [X8+632]
	781 NotImplemented "Instruction CMP not yet implemented."
	782 Move X8, [X8]
	783 Move [X20+656], X8
	784 Move X8, 0x9CA000
	785 Move X8, [X8+680]
	786 NotImplemented "Instruction CMP not yet implemented."
	787 Move X8, [X8]
	788 Move [X20+664], X8
	789 Move X8, 0x9CA000
	790 Move X8, [X8+824]
	791 NotImplemented "Instruction CMP not yet implemented."
	792 Move X8, [X8]
	793 Move [X20+672], X8
	794 Move X8, 0x9CA000
	795 Move X8, [X8+408]
	796 NotImplemented "Instruction CMP not yet implemented."
	797 Move X8, [X8]
	798 Move [X20+680], X8
	799 Move X8, 0x9CA000
	800 Move X8, [X8+320]
	801 NotImplemented "Instruction CMP not yet implemented."
	802 Move X8, [X8]
	803 Move [X20+688], X8
	804 Move X8, 0x9CA000
	805 Move X8, [X8+704]
	806 NotImplemented "Instruction CMP not yet implemented."
	807 Move X8, [X8]
	808 Move [X20+696], X8
	809 Move X8, 0x9CA000
	810 Move X8, [X8+616]
	811 NotImplemented "Instruction CMP not yet implemented."
	812 Move X8, [X8]
	813 Move [X20+704], X8
	814 Move X8, 0x9CA000
	815 Move X8, [X8+520]
	816 NotImplemented "Instruction CMP not yet implemented."
	817 Move X8, [X8]
	818 Move [X20+712], X8
	819 Move X8, 0x9CA000
	820 Move X8, [X8+712]
	821 NotImplemented "Instruction CMP not yet implemented."
	822 Move X8, [X8]
	823 Move [X20+720], X8
	824 Move X8, 0x9CA000
	825 Move X8, [X8+880]
	826 NotImplemented "Instruction CMP not yet implemented."
	827 Move X8, [X8]
	828 Move [X20+728], X8
	829 Move X8, 0x9CA000
	830 Move X8, [X8+256]
	831 NotImplemented "Instruction CMP not yet implemented."
	832 Move X8, [X8]
	833 Move [X20+736], X8
	834 Move X8, 0x9CA000
	835 Move X8, [X8+800]
	836 NotImplemented "Instruction CMP not yet implemented."
	837 Move X8, [X8]
	838 Move [X20+744], X8
	839 Move X8, 0x9CA000
	840 Move X8, [X8+424]
	841 NotImplemented "Instruction CMP not yet implemented."
	842 Move X8, [X8]
	843 Move [X20+752], X8
	844 Move X8, 0x9CA000
	845 Move X8, [X8+488]
	846 NotImplemented "Instruction CMP not yet implemented."
	847 Move X8, [X8]
	848 Move [X20+760], X8
	849 Move X8, 0x9CA000
	850 Move X8, [X8+912]
	851 NotImplemented "Instruction CMP not yet implemented."
	852 Move X8, [X8]
	853 Move [X20+768], X8
	854 Move X8, 0x9CA000
	855 Move X8, [X8+440]
	856 NotImplemented "Instruction CMP not yet implemented."
	857 Move X8, [X8]
	858 Move [X20+776], X8
	859 Move X8, 0x9CA000
	860 Move X8, [X8+384]
	861 NotImplemented "Instruction CMP not yet implemented."
	862 Move X8, [X8]
	863 Move [X20+784], X8
	864 Move X8, 0x9CA000
	865 Move X8, [X8+792]
	866 NotImplemented "Instruction CMP not yet implemented."
	867 Move X8, [X8]
	868 Move [X20+792], X8
	869 Move X8, 0x9C9000
	870 Move X8, [X8+856]
	871 NotImplemented "Instruction CMP not yet implemented."
	872 Move X8, [X8]
	873 Move [X20+800], X8
	874 Move X8, 0x9C9000
	875 Move X8, [X8+744]
	876 NotImplemented "Instruction CMP not yet implemented."
	877 Move X8, [X8]
	878 Move [X20+808], X8
	879 Move X8, 0x9C9000
	880 Move X8, [X8+456]
	881 NotImplemented "Instruction CMP not yet implemented."
	882 Move X8, [X8]
	883 Move [X20+816], X8
	884 Move X8, 0x9C9000
	885 Move X8, [X8+656]
	886 NotImplemented "Instruction CMP not yet implemented."
	887 Move X8, [X8]
	888 Move [X20+824], X8
	889 Move X8, 0x9C9000
	890 Move X8, [X8+872]
	891 NotImplemented "Instruction CMP not yet implemented."
	892 Move X8, [X8]
	893 Move [X20+832], X8
	894 Move X8, 0x9C9000
	895 Move X8, [X8+864]
	896 NotImplemented "Instruction CMP not yet implemented."
	897 Move X8, [X8]
	898 Move [X20+840], X8
	899 Move X8, 0x9C9000
	900 Move X8, [X8+640]
	901 NotImplemented "Instruction CMP not yet implemented."
	902 Move X8, [X8]
	903 Move [X20+848], X8
	904 Move X8, 0x9C9000
	905 Move X8, [X8+232]
	906 NotImplemented "Instruction CMP not yet implemented."
	907 Move X8, [X8]
	908 Move [X20+856], X8
	909 Move X8, 0x9C9000
	910 Move X8, [X8+312]
	911 NotImplemented "Instruction CMP not yet implemented."
	912 Move X8, [X8]
	913 Move [X20+864], X8
	914 Move X8, 0x9C9000
	915 Move X8, [X8+768]
	916 NotImplemented "Instruction CMP not yet implemented."
	917 Move X8, [X8]
	918 Move [X20+872], X8
	919 Move X8, 0x9C9000
	920 Move X8, [X8+304]
	921 NotImplemented "Instruction CMP not yet implemented."
	922 Move X8, [X8]
	923 Move [X20+880], X8
	924 Move X8, 0x9C9000
	925 Move X8, [X8+560]
	926 NotImplemented "Instruction CMP not yet implemented."
	927 Move X8, [X8]
	928 Move [X20+888], X8
	929 Move X8, 0x9C9000
	930 Move X8, [X8+624]
	931 NotImplemented "Instruction CMP not yet implemented."
	932 Move X8, [X8]
	933 Move [X20+896], X8
	934 Move X8, 0x9C9000
	935 Move X8, [X8+904]
	936 Move X9, 0x9C9000
	937 Move X8, [X8]
	938 Move X9, [X9+216]
	939 Move [X20+904], X8
	940 Move X0, [X9]
	941 Call 0x1C17D6C
	942 Move [X19+440], X0
	943 Move X8, [X20+24]
	944 NotImplemented "Instruction CMP not yet implemented."
	945 Move X23, 0x9C9000
	946 Move X23, [X23+208]
	947 Move X21, X0
	948 Move W24, 4
	949 Subtract X25, X24, 4
	950 NotImplemented "Instruction CMP not yet implemented."
	951 Move X1, [X20]
	952 Move X2, [X23]
	953 Move X0, X19
	954 Call 0x21FD754, X0, X1
	955 Compare X21, 0
	956 JumpIfEqual {1032}
	957 Move X22, X0
	958 Compare X0, 0
	959 JumpIfEqual {966}
	960 Move X8, [X21]
	961 Move X0, X22
	962 Move X1, [X8+64]
	963 Call 0x1C17E00
	964 Compare X0, 0
	965 JumpIfEqual {1033}
	966 Move W8, [X21+24]
	967 NotImplemented "Instruction CMP not yet implemented."
	968 Move [X21], X22
	969 Move X21, [X19+440]
	970 Compare X21, 0
	971 JumpIfEqual {1032}
	972 Move W8, [X21+24]
	973 NotImplemented "Instruction CMP not yet implemented."
	974 Move X8, [X21]
	975 Compare X8, 0
	976 JumpIfEqual {1032}
	977 Subtract W9, W24, 3
	978 Move [X8+304], W9
	979 Move X8, [X20+24]
	980 Add X24, X24, 1
	981 Subtract W9, W24, 4
	982 NotImplemented "Instruction CMP not yet implemented."
	983 Move X8, 0x9C9000
	984 Move X9, 0x9C9000
	985 Move X8, [X8+728]
	986 Move X9, [X9+200]
	987 Move X20, 0x9C9000
	988 Move X21, 0x9C6000
	989 Move X20, [X20+816]
	990 Move X21, [X21+3608]
	991 Move X1, [X8]
	992 Move X2, [X9]
	993 Move X22, 0x9C9000
	994 Move X23, 0x9C9000
	995 Move X24, 0x9C9000
	996 Move X22, [X22+576]
	997 Move X23, [X23+264]
	998 Move X24, [X24+848]
	999 Move X0, X19
	1000 Call 0x21FD754, X0, X1
	1001 Move [X19+368], X0
	1002 Move X1, [X20]
	1003 Move X2, [X21]
	1004 Move X0, X19
	1005 Call 0x21FD754, X0, X1
	1006 Move [X19+376], X0
	1007 Move X1, [X22]
	1008 Move X2, [X21]
	1009 Move X0, X19
	1010 Call 0x21FD754, X0, X1
	1011 Move [X19+384], X0
	1012 Move X1, [X23]
	1013 Move X2, [X21]
	1014 Move X0, X19
	1015 Call 0x21FD754, X0, X1
	1016 Move [X19+392], X0
	1017 Move X1, [X24]
	1018 Move X2, [X21]
	1019 Move X0, X19
	1020 Call 0x21FD754, X0, X1
	1021 Move [X19+400], X0
	1022 Move X20, [X31+48]
	1023 Move X19, [X31+56]
	1024 Move X22, [X31+32]
	1025 Move X21, [X31+40]
	1026 Move X24, [X31+16]
	1027 Move X23, [X31+24]
	1028 Move X30, [X31+64]
	1029 Move X25, [X31+72]
	1030 Return 
	1031 Call 0x1C17F28
	1032 Call 0x1C17F20
	1033 Call 0x1C17F44
	1034 Move X1, X31
	1035 Call 0x1C17DEC

Method: System.Void RefreshConfiguration()

Disassembly:
	0x0377F2D0 LDR X23, [X23 + 0xE38]
	0x0377F2D4 MOV X19, X0
	0x0377F2D8 TBNZ X8, 0x0, 0x377F374
	0x0377F2DC ADRP X0, 0x9C5000
	0x0377F2E0 LDR X0, [X0 + 0xE30]
	0x0377F2E4 BL 0x1C16CF4
	0x0377F2E8 ADRP X0, 0x9C5000
	0x0377F2EC LDR X0, [X0 + 0xE18]
	0x0377F2F0 BL 0x1C16CF4
	0x0377F2F4 ADRP X0, 0x9C5000
	0x0377F2F8 LDR X0, [X0 + 0xE38]
	0x0377F2FC BL 0x1C16CF4
	0x0377F300 ADRP X0, 0x9C8000
	0x0377F304 LDR X0, [X0 + 0x460]
	0x0377F308 BL 0x1C16CF4
	0x0377F30C ADRP X0, 0x9C8000
	0x0377F310 LDR X0, [X0 + 0x448]
	0x0377F314 BL 0x1C16CF4
	0x0377F318 ADRP X0, 0x9C8000
	0x0377F31C LDR X0, [X0 + 0x440]
	0x0377F320 BL 0x1C16CF4
	0x0377F324 ADRP X0, 0x9C8000
	0x0377F328 LDR X0, [X0 + 0x468]
	0x0377F32C BL 0x1C16CF4
	0x0377F330 ADRP X0, 0x9C8000
	0x0377F334 LDR X0, [X0 + 0x428]
	0x0377F338 BL 0x1C16CF4
	0x0377F33C ADRP X0, 0x9C8000
	0x0377F340 LDR X0, [X0 + 0x438]
	0x0377F344 BL 0x1C16CF4
	0x0377F348 ADRP X0, 0x9C8000
	0x0377F34C LDR X0, [X0 + 0x458]
	0x0377F350 BL 0x1C16CF4
	0x0377F354 ADRP X0, 0x9C8000
	0x0377F358 LDR X0, [X0 + 0x450]
	0x0377F35C BL 0x1C16CF4
	0x0377F360 ADRP X0, 0x9C8000
	0x0377F364 LDR X0, [X0 + 0x430]
	0x0377F368 BL 0x1C16CF4
	0x0377F36C MOVZ W8, 0x1
	0x0377F370 STRB W8, [X21 + 0xF8E]
	0x0377F374 LDR X1, [X22]
	0x0377F378 LDR X2, [X24]
	0x0377F37C MOV X0, X19
	0x0377F380 BL 0x21FC754
	0x0377F384 STR X0, [X19 + 0x1A0]
	0x0377F388 LDR X1, [X20]
	0x0377F38C LDR X2, [X24]
	0x0377F390 MOV X0, X19

ISIL:
	001 Move [X31-48], X29
	002 Move [X31-40], X30
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Subtract X31, X31, 544
	008 NotImplemented "Instruction MRS not yet implemented."
	009 Move X8, [X20+40]
	010 Move X22, 0xC62000
	011 Move X21, 0x9C9000
	012 Move X19, X0
	013 Move [X31+536], X8
	014 Move W8, [X22+3970]
	015 Move X21, [X21+920]
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0x9C9000
	021 Move X0, [X0+920]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+3970], W8
	025 Add X0, X31, 272
	026 Move W2, 264
	027 Move W1, W31
	028 Call 0x3EB2B10
	029 Add X8, X31, 8
	030 Move X0, X31
	031 Move [X19+432], X31
	032 Call QueryKeyboardLayoutCommand.Create
	033 Add X0, X31, 272
	034 Add X1, X31, 8
	035 Move W2, 264
	036 Call 0x3EB2AC0
	037 Move X2, [X21]
	038 Add X1, X31, 272
	039 Move X0, X19
	040 Call InputDevice.ExecuteCommand, X0, X1
	041 Move TEMP, X0
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfEqual {49}
	045 Add X0, X31, 272
	046 Move X1, X31
	047 Call QueryKeyboardLayoutCommand.ReadLayoutName, X0
	048 Move [X19+432], X0
	049 Move X8, [X20+40]
	050 Move X9, [X31+536]
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Add X31, X31, 544
	053 Move X20, [X31+32]
	054 Move X19, [X31+40]
	055 Move X22, [X31+16]
	056 Move X21, [X31+24]
	057 Move X29, [X31+48]
	058 Move X30, [X31+56]
	059 Return 
	060 Call 0x3EB2B20

Method: System.Void OnTextInput(System.Char character)

Disassembly:
	0x0377F394 BL 0x21FC754
	0x0377F398 STR X0, [X19 + 0x1A8]
	0x0377F39C LDR X1, [X29]
	0x0377F3A0 LDR X2, [X24]
	0x0377F3A4 MOV X0, X19
	0x0377F3A8 BL 0x21FC754
	0x0377F3AC STR X0, [X19 + 0x1B0]
	0x0377F3B0 LDR X1, [X28]
	0x0377F3B4 LDR X2, [X24]
	0x0377F3B8 MOV X0, X19
	0x0377F3BC BL 0x21FC754
	0x0377F3C0 STR X0, [X19 + 0x1B8]
	0x0377F3C4 LDR X1, [X27]
	0x0377F3C8 LDR X2, [X24]
	0x0377F3CC MOV X0, X19
	0x0377F3D0 BL 0x21FC754
	0x0377F3D4 STR X0, [X19 + 0x1C0]
	0x0377F3D8 LDR X1, [X26]
	0x0377F3DC LDR X2, [X24]
	0x0377F3E0 MOV X0, X19
	0x0377F3E4 BL 0x21FC754
	0x0377F3E8 STR X0, [X19 + 0x1C8]
	0x0377F3EC LDR X1, [X25]
	0x0377F3F0 LDR X2, [X24]
	0x0377F3F4 MOV X0, X19
	0x0377F3F8 BL 0x21FC754
	0x0377F3FC STR X0, [X19 + 0x1D0]
	0x0377F400 ADRP X8, 0x9C8000
	0x0377F404 LDR X8, [X8 + 0x468]
	0x0377F408 LDR X2, [X23]
	0x0377F40C MOV X0, X19
	0x0377F410 LDR X1, [X8]
	0x0377F414 BL 0x21FC754
	0x0377F418 STR X0, [X19 + 0x1D8]
	0x0377F41C ADRP X8, 0x9C8000
	0x0377F420 LDR X8, [X8 + 0x460]
	0x0377F424 MOV X0, X19
	0x0377F428 LDR X1, [X8]
	0x0377F42C ADRP X8, 0x9C5000
	0x0377F430 LDR X8, [X8 + 0xE30]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xC62000
	007 Move W8, [X20+3971]
	008 Move W19, W1
	009 Move X21, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x9C9000
	015 Move X0, [X0+928]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3971], W8
	019 Move W8, [X21+408]
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Move X22, 0x9C9000
	022 Move X22, [X22+928]
	023 Move W20, W31
	024 Add X21, X21, 408
	025 Move X2, [X22]
	026 Move X0, X21
	027 Move W1, W20
	028 Call InlinedArray`1<Object>.get_Item, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {46}
	031 Move X8, [X0+64]
	032 Move X9, [X0+24]
	033 Move X2, [X0+40]
	034 Move W1, W19
	035 Move X0, X8
	036 NotImplemented "Instruction BLR not yet implemented."
	037 Move W8, [X21]
	038 Add W20, W20, 1
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move X20, [X31+32]
	041 Move X19, [X31+40]
	042 Move X22, [X31+16]
	043 Move X21, [X31+24]
	044 Move X30, [X31+48]
	045 Return 
	046 Call 0x1C17F20

Method: UnityEngine.InputSystem.Controls.KeyControl FindKeyOnCurrentKeyboardLayout(System.String displayName)

Disassembly:
	0x0377F434 LDR X2, [X8]
	0x0377F438 BL 0x21FC754
	0x0377F43C STR X0, [X19 + 0x1E0]
	0x0377F440 MOV X0, X19
	0x0377F444 LDP X20, X19, [X31 + 0x50]
	0x0377F448 LDP X22, X21, [X31 + 0x40]
	0x0377F44C LDP X24, X23, [X31 + 0x30]
	0x0377F450 LDP X26, X25, [X31 + 0x20]
	0x0377F454 LDP X28, X27, [X31 + 0x10]
	0x0377F458 LDP X29, X30, [X31], #0x60
	0x0377F45C B 0x377EBC4
	0x0377F460 STP X30, X19, [X31 - 0x10]!
	0x0377F464 MOV X19, X0
	0x0377F468 BL 0x377295C
	0x0377F46C MOVN W8, 0x0
	0x0377F470 STR X31, [X19 + 0xE0]
	0x0377F474 STR W8, [X19 + 0xE8]
	0x0377F478 LDP X30, X19, [X31], #0x10
	0x0377F47C RET
	0x0377F480 LDR X0, [X0 + 0x170]
	0x0377F484 RET
	0x0377F488 STR X1, [X0 + 0x170]
	0x0377F48C RET
	0x0377F490 LDR X0, [X0 + 0x178]
	0x0377F494 RET
	0x0377F498 STR X1, [X0 + 0x178]
	0x0377F49C RET
	0x0377F4A0 LDR X0, [X0 + 0x180]
	0x0377F4A4 RET
	0x0377F4A8 STR X1, [X0 + 0x180]
	0x0377F4AC RET
	0x0377F4B0 LDR X0, [X0 + 0x188]
	0x0377F4B4 RET
	0x0377F4B8 STR X1, [X0 + 0x188]
	0x0377F4BC RET
	0x0377F4C0 LDR X0, [X0 + 0x190]
	0x0377F4C4 RET
	0x0377F4C8 STR X1, [X0 + 0x190]
	0x0377F4CC RET
	0x0377F4D0 LDR X0, [X0 + 0x198]
	0x0377F4D4 RET
	0x0377F4D8 STR X1, [X0 + 0x198]
	0x0377F4DC RET
	0x0377F4E0 STR X30, [X31 - 0x20]!
	0x0377F4E4 STP X20, X19, [X31 + 0x10]
	0x0377F4E8 ADRP X19, 0xC61000
	0x0377F4EC ADRP X20, 0x9C8000
	0x0377F4F0 LDRB W8, [X19 + 0xF8F]
	0x0377F4F4 LDR X20, [X20 + 0x3C0]
	0x0377F4F8 TBNZ X8, 0x0, 0x377F510
	0x0377F4FC ADRP X0, 0x9C8000

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xC62000
	007 Move W8, [X21+3972]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x9C9000
	015 Move X0, [X0+936]
	016 Call 0x1C17CF4
	017 Move X0, 0x9C9000
	018 Move X0, [X0+944]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+3972], W8
	022 Move X0, X20
	023 Call Keyboard.get_allKeys, X0
	024 Move X8, X1
	025 ShiftRight X8, 32
	026 And X8, X8, 0x7FFFFFFF
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move [X31], X0
	029 Move [X31+8], X1
	030 Move X21, 0x9C9000
	031 Move X21, [X21+944]
	032 Move W20, W31
	033 Move X2, [X21]
	034 Add X0, X31, 0
	035 Move W1, W20
	036 Call ReadOnlyArray`1<Object>.get_Item, X0, X1
	037 Compare X0, 0
	038 JumpIfEqual {62}
	039 Call InputControl.get_displayName, X0
	040 Move W2, 1
	041 Move X1, X19
	042 Move X3, X31
	043 Call String.Equals, X0, X1, X2
	044 Move TEMP, X0
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfEqual {52}
	048 Move W8, [X31+12]
	049 Add W20, W20, 1
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move X0, X31
	052 Move X2, [X21]
	053 Add X0, X31, 0
	054 Move W1, W20
	055 Call ReadOnlyArray`1<Object>.get_Item, X0, X1
	056 Move X20, [X31+32]
	057 Move X19, [X31+40]
	058 Move X30, [X31+16]
	059 Move X21, [X31+24]
	060 Add X31, X31, 48
	061 Return X0
	062 Call 0x1C17F20

Method: System.Void OnIMECompositionChanged(UnityEngine.InputSystem.LowLevel.IMECompositionString compositionString)

Disassembly:
	0x0377F500 LDR X0, [X0 + 0x3C0]
	0x0377F504 BL 0x1C16CF4
	0x0377F508 MOVZ W8, 0x1
	0x0377F50C STRB W8, [X19 + 0xF8F]
	0x0377F510 LDR X8, [X20]
	0x0377F514 LDP X20, X19, [X31 + 0x10]
	0x0377F518 LDR X8, [X8 + 0xB8]
	0x0377F51C LDR X0, [X8]
	0x0377F520 LDR X30, [X31], #0x20
	0x0377F524 RET
	0x0377F528 STP X30, X21, [X31 - 0x20]!
	0x0377F52C STP X20, X19, [X31 + 0x10]
	0x0377F530 ADRP X20, 0xC61000
	0x0377F534 ADRP X21, 0x9C8000
	0x0377F538 LDRB W8, [X20 + 0xF90]
	0x0377F53C LDR X21, [X21 + 0x3C0]
	0x0377F540 MOV X19, X0
	0x0377F544 TBNZ X8, 0x0, 0x377F55C
	0x0377F548 ADRP X0, 0x9C8000
	0x0377F54C LDR X0, [X0 + 0x3C0]
	0x0377F550 BL 0x1C16CF4
	0x0377F554 MOVZ W8, 0x1
	0x0377F558 STRB W8, [X20 + 0xF90]
	0x0377F55C LDR X8, [X21]
	0x0377F560 LDR X8, [X8 + 0xB8]
	0x0377F564 STR X19, [X8]
	0x0377F568 LDP X20, X19, [X31 + 0x10]
	0x0377F56C LDP X30, X21, [X31], #0x20
	0x0377F570 RET
	0x0377F574 B 0x377EDF4
	0x0377F578 B 0x377EEC0
	0x0377F57C MOV W0, W31
	0x0377F580 RET
	0x0377F584 SUB X31, X31, 0x50
	0x0377F588 STP X30, X21, [X31 + 0x30]
	0x0377F58C STP X20, X19, [X31 + 0x40]
	0x0377F590 ADRP X20, 0xC61000
	0x0377F594 LDRB W8, [X20 + 0xF93]
	0x0377F598 MOV X19, X0
	0x0377F59C CBNZ W8, 0x377F5D8
	0x0377F5A0 ADRP X0, 0x9A0000
	0x0377F5A4 LDR X0, [X0 + 0x48]
	0x0377F5A8 BL 0x1C16CF4
	0x0377F5AC ADRP X0, 0x9A0000
	0x0377F5B0 LDR X0, [X0 + 0x50]
	0x0377F5B4 BL 0x1C16CF4
	0x0377F5B8 ADRP X0, 0x9A0000
	0x0377F5BC LDR X0, [X0 + 0x58]
	0x0377F5C0 BL 0x1C16CF4
	0x0377F5C4 ADRP X0, 0x9A0000
	0x0377F5C8 LDR X0, [X0 + 0x60]
	0x0377F5CC BL 0x1C16CF4
	0x0377F5D0 MOVZ W8, 0x1
	0x0377F5D4 STRB W8, [X20 + 0xF93]
	0x0377F5D8 STP X31, X31, [X31 + 0x18]
	0x0377F5DC STR X31, [X31 + 0x28]
	0x0377F5E0 STP X31, X31, [X31 + 0x8]
	0x0377F5E4 LDR W8, [X19 + 0x98]
	0x0377F5E8 CMP W8, 0x1
	0x0377F5EC B.LT 0x377F668
	0x0377F5F0 MOV X0, X19
	0x0377F5F4 BL 0x37720C4
	0x0377F5F8 ADRP X8, 0x9A0000

ISIL:
	001 Subtract X31, X31, 368
	002 Move [X31+288], X29
	003 Move [X31+296], X30
	004 Move [X31+304], X26
	005 Move [X31+312], X25
	006 Move [X31+320], X24
	007 Move [X31+328], X23
	008 Move [X31+336], X22
	009 Move [X31+344], X21
	010 Move [X31+352], X20
	011 Move [X31+360], X19
	012 NotImplemented "Instruction MRS not yet implemented."
	013 Move X8, [X24+40]
	014 Move X20, 0xC62000
	015 Move X19, X1
	016 Move X21, X0
	017 Move [X31+280], X8
	018 Move W8, [X20+3973]
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {28}
	023 Move X0, 0x9C9000
	024 Move X0, [X0+952]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X20+3973], W8
	028 Move W8, [X21+448]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X25, 0x9C9000
	031 Move X25, [X25+952]
	032 Move W20, W31
	033 Add X21, X21, 448
	034 Move X2, [X25]
	035 Move X0, X21
	036 Move W1, W20
	037 Call InlinedArray`1<Object>.get_Item, X0, X1
	038 Move X22, X0
	039 Add X0, X31, 8
	040 Move W2, 132
	041 Move X1, X19
	042 Call 0x3EB2AC0
	043 Compare X22, 0
	044 JumpIfEqual {73}
	045 Move X26, [X22+24]
	046 Move X23, [X22+64]
	047 Add X0, X31, 144
	048 Add X1, X31, 8
	049 Move W2, 132
	050 Call 0x3EB2AC0
	051 Move X2, [X22+40]
	052 Add X1, X31, 144
	053 Move X0, X23
	054 NotImplemented "Instruction BLR not yet implemented."
	055 Move W8, [X21]
	056 Add W20, W20, 1
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move X8, [X24+40]
	059 Move X9, [X31+280]
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move X20, [X31+352]
	062 Move X19, [X31+360]
	063 Move X22, [X31+336]
	064 Move X21, [X31+344]
	065 Move X24, [X31+320]
	066 Move X23, [X31+328]
	067 Move X26, [X31+304]
	068 Move X25, [X31+312]
	069 Move X29, [X31+288]
	070 Move X30, [X31+296]
	071 Add X31, X31, 368
	072 Return 
	073 Call 0x1C17F20
	074 Call 0x3EB2B20

Method: UnityEngine.InputSystem.Controls.KeyControl[] get_keys()

Disassembly:
	0x0377F5FC LDR X8, [X8 + 0x60]
	0x0377F600 STP X0, X1, [X31 + 0x8]

ISIL:
	001 Move X0, [X0+440]
	002 Return X0

Method: System.Void set_keys(UnityEngine.InputSystem.Controls.KeyControl[] value)

Disassembly:
	0x0377F604 ADD X0, X31, 0x8
	0x0377F608 LDR X9, [X8]

ISIL:
	001 Move [X0+440], X1
	002 Return 

Method: System.Void .ctor()

Disassembly:
	0x0377F60C ADD X8, X31, 0x18
	0x0377F610 MOV X1, X9
	0x0377F614 BL 0x24FD990
	0x0377F618 ADRP X20, 0x9A0000
	0x0377F61C ADRP X21, 0x9A0000
	0x0377F620 LDR X20, [X20 + 0x50]
	0x0377F624 LDR X21, [X21 + 0x58]
	0x0377F628 LDR X1, [X20]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call InputControl..ctor, X0
	005 Move TEMP, 0
	006 Not TEMP
	007 Move W8, TEMP
	008 Move [X19+224], X31
	009 Move [X19+232], W8
	010 Move X30, [X31+16]
	011 Move X19, [X31+24]
	012 Return 

