Type: UnityEngine.InputSystem.Layouts.InputDeviceMatcher

Method: System.Boolean get_empty()

Disassembly:
	0x03756C40 AND W21, W9, 0x1
	0x03756C44 BL 0x32277A8
	0x03756C48 LDR X8, [X19 + 0x10]
	0x03756C4C ANDS W31, W20, 0x1

ISIL:
	001 Move X8, [X0]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.Collections.Generic.IEnumerable`1<System.Collections.Generic.KeyValuePair`2<System.String, System.Object>> get_patterns()

Disassembly:
	0x03756C50 MOVZ W9, 0x1
	0x03756C54 CINC W9, W9, EQ
	0x03756C58 ANDS W31, W0, 0x1
	0x03756C5C MOV X0, X8
	0x03756C60 MOV X1, X31
	0x03756C64 CSEL W20, W21, W9, NE
	0x03756C68 BL 0x32277A8
	0x03756C6C LDR X8, [X19 + 0x18]
	0x03756C70 ORN W9, W31, W0, 0x0
	0x03756C74 AND W9, W9, 0x1
	0x03756C78 MOV X1, X31
	0x03756C7C MOV X0, X8
	0x03756C80 ADD W20, W20, W9
	0x03756C84 BL 0x32277A8
	0x03756C88 LDR X8, [X19 + 0x28]
	0x03756C8C ORN W9, W31, W0, 0x0
	0x03756C90 AND W9, W9, 0x1
	0x03756C94 MOV X1, X31
	0x03756C98 MOV X0, X8
	0x03756C9C ADD W20, W20, W9
	0x03756CA0 BL 0x32277A8
	0x03756CA4 LDR X8, [X19 + 0x30]
	0x03756CA8 ORN W9, W31, W0, 0x0
	0x03756CAC AND W9, W9, 0x1
	0x03756CB0 MOV X1, X31
	0x03756CB4 MOV X0, X8
	0x03756CB8 ADD W19, W20, W9
	0x03756CBC BL 0x32277A8
	0x03756CC0 ORN W8, W31, W0, 0x0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xC8B000
	006 Move X21, 0x9F0000
	007 Move W8, [X20+3534]
	008 Move X21, [X21+3760]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x9F0000
	015 Move X0, [X0+3760]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3534], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move X1, X31
	022 Move X20, X0
	023 Call Object..ctor, X0
	024 Move TEMP, 1
	025 Not TEMP
	026 Move W8, TEMP
	027 Move X0, X31
	028 Move [X20+16], W8
	029 Call Environment.get_CurrentManagedThreadId
	030 Move [X20+40], W0
	031 Move X8, [X19]
	032 Move X0, X20
	033 Move [X20+56], X8
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X30, [X31+32]
	037 Move X21, [X31+40]
	038 Return X0

Method: UnityEngine.InputSystem.Layouts.InputDeviceMatcher WithInterface(System.String pattern, System.Boolean supportRegex = True)

Disassembly:
	0x03756CF8 LDR X0, [X0 + 0xEC0]
	0x03756CFC BL 0x1C16CF4
	0x03756D00 MOVZ W8, 0x1
	0x03756D04 STRB W8, [X20 + 0xDD7]
	0x03756D08 STR X31, [X31 + 0x8]
	0x03756D0C LDR X0, [X19]
	0x03756D10 ADRP X21, 0x9C5000
	0x03756D14 LDR X21, [X21 + 0xEC0]
	0x03756D18 MOV X1, X31
	0x03756D1C BL 0x32277A8
	0x03756D20 MOV X20, X31
	0x03756D24 TBNZ X0, 0x0, 0x3756D54
	0x03756D28 LDR X0, [X21]
	0x03756D2C LDR X20, [X19]
	0x03756D30 LDR W8, [X0 + 0xE0]
	0x03756D34 CBNZ W8, 0x3756D3C
	0x03756D38 BL 0x1C16DFC
	0x03756D3C ADD X0, X31, 0x8
	0x03756D40 MOV X1, X20
	0x03756D44 MOV W2, W31
	0x03756D48 BL 0x3755CF8
	0x03756D4C MOV X20, X0
	0x03756D50 STR X0, [X31 + 0x8]
	0x03756D54 LDR X0, [X19 + 0x8]
	0x03756D58 MOV X1, X31
	0x03756D5C BL 0x32277A8
	0x03756D60 TBNZ X0, 0x0, 0x3756D90
	0x03756D64 LDR X0, [X21]
	0x03756D68 LDR X20, [X19 + 0x8]
	0x03756D6C LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0xC8B000
	008 Move X22, 0x9C6000
	009 Move W8, [X23+3535]
	010 Move X22, [X22+3776]
	011 Move W20, W2
	012 Move X19, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x9C6000
	019 Move X0, [X0+3776]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X23+3535], W8
	023 Move X0, [X22]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {29}
	027 Call 0x1C17DFC
	028 Move X0, [X22]
	029 Move X8, [X0+184]
	030 And W4, W20, 1
	031 Move X0, X21
	032 Move X3, X19
	033 Move X1, [X8]
	034 Move X2, [X8+8]
	035 Move X20, [X31+32]
	036 Move X19, [X31+40]
	037 Move X22, [X31+16]
	038 Move X21, [X31+24]
	039 Move X30, [X31+48]
	040 Move X23, [X31+56]

Method: UnityEngine.InputSystem.Layouts.InputDeviceMatcher WithDeviceClass(System.String pattern, System.Boolean supportRegex = True)

Disassembly:
	0x03756F7C B 0x3756F94
	0x03756F80 LDR X0, [X24]
	0x03756F84 ADD X1, X31, 0x0
	0x03756F88 STP X8, X9, [X31]
	0x03756F8C BL 0x1C16E04
	0x03756F90 LDR X8, [X25]
	0x03756F94 MOV X1, X0
	0x03756F98 MOV X0, X8
	0x03756F9C MOV X2, X20
	0x03756FA0 MOV X3, X31
	0x03756FA4 BL 0x3227BD4
	0x03756FA8 MOV X1, X0
	0x03756FAC MOV X0, X19
	0x03756FB0 MOV X2, X31
	0x03756FB4 BL 0x321B938
	0x03756FB8 LDR W8, [X21 + 0x18]
	0x03756FBC ADD X22, X22, 0x1
	0x03756FC0 MOV X19, X0
	0x03756FC4 ADD X23, X23, 0x18
	0x03756FC8 CMP X22, W8, SXTW
	0x03756FCC B.LT 0x3756F48
	0x03756FD0 B 0x3756FE0
	0x03756FD4 ADRP X8, 0x9A4000
	0x03756FD8 LDR X8, [X8 + 0xD50]
	0x03756FDC LDR X19, [X8]
	0x03756FE0 MOV X0, X19
	0x03756FE4 LDP X20, X19, [X31 + 0x50]
	0x03756FE8 LDP X22, X21, [X31 + 0x40]
	0x03756FEC LDP X24, X23, [X31 + 0x30]
	0x03756FF0 LDP X26, X25, [X31 + 0x20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0xC8B000
	008 Move X22, 0x9C6000
	009 Move W8, [X23+3536]
	010 Move X22, [X22+3776]
	011 Move W20, W2
	012 Move X19, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x9C6000
	019 Move X0, [X0+3776]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X23+3536], W8
	023 Move X0, [X22]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {29}
	027 Call 0x1C17DFC
	028 Move X0, [X22]
	029 Move X8, [X0+184]
	030 And W4, W20, 1
	031 Move X0, X21
	032 Move X3, X19
	033 Move X1, [X8+16]
	034 Move X2, [X8+24]
	035 Move X20, [X31+32]
	036 Move X19, [X31+40]
	037 Move X22, [X31+16]
	038 Move X21, [X31+24]
	039 Move X30, [X31+48]
	040 Move X23, [X31+56]
	041 Call InputDeviceMatcher.With, X0, X1, X2, X3
	042 Return X0

Method: UnityEngine.InputSystem.Layouts.InputDeviceMatcher WithManufacturer(System.String pattern, System.Boolean supportRegex = True)

Disassembly:
	0x03756FF4 LDR X30, [X31 + 0x10]
	0x03756FF8 ADD X31, X31, 0x60
	0x03756FFC RET
	0x03757000 BL 0x1C16F28
	0x03757004 BL 0x1C16F20
	0x03757008 STR X30, [X31 - 0x30]!
	0x0375700C STP X22, X21, [X31 + 0x10]
	0x03757010 STP X20, X19, [X31 + 0x20]
	0x03757014 ADRP X21, 0xC89000
	0x03757018 LDRB W8, [X21 + 0xDD9]
	0x0375701C MOV X19, X1
	0x03757020 MOV X20, X0
	0x03757024 TBNZ X8, 0x0, 0x3757048
	0x03757028 ADRP X0, 0x9EE000
	0x0375702C LDR X0, [X0 + 0xEE0]
	0x03757030 BL 0x1C16CF4
	0x03757034 ADRP X0, 0x9EE000
	0x03757038 LDR X0, [X0 + 0xEE8]
	0x0375703C BL 0x1C16CF4
	0x03757040 MOVZ W8, 0x1
	0x03757044 STRB W8, [X21 + 0xDD9]
	0x03757048 LDR X9, [X20]
	0x0375704C CMP X9, X19
	0x03757050 B.EQ 0x3757114
	0x03757054 MOV W0, W31
	0x03757058 CBZ X19, 0x3757120
	0x0375705C CBZ X9, 0x3757120
	0x03757060 LDR X8, [X9 + 0x18]
	0x03757064 LDR W10, [X19 + 0x18]
	0x03757068 CMP W8, W10

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0xC8A000
	008 Move X22, 0x9C5000
	009 Move W8, [X23+3537]
	010 Call 0x3EB26CC
	011 Return X0
	012 Move W20, W2
	013 Move X19, X1
	014 Move X21, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0x9C5000
	020 Move X0, [X0+3776]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X23+3537], W8
	024 Move X0, [X22]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {30}
	028 Call 0x1C17DFC
	029 Move X0, [X22]
	030 Move X8, [X0+184]
	031 And W4, W20, 1
	032 Move X0, X21
	033 Move X3, X19
	034 Move X1, [X8+32]
	035 Move X2, [X8+40]
	036 Move X20, [X31+32]
	037 Move X19, [X31+40]
	038 Move X22, [X31+16]
	039 Move X21, [X31+24]
	040 Move X30, [X31+48]
	041 Move X23, [X31+56]
	042 Call InputDeviceMatcher.With, X0, X1, X2, X3
	043 Return X0

Method: UnityEngine.InputSystem.Layouts.InputDeviceMatcher WithProduct(System.String pattern, System.Boolean supportRegex = True)

Disassembly:
	0x0375706C B.NE 0x375711C
	0x03757070 CMP W8, 0x1
	0x03757074 B.LT 0x3757114
	0x03757078 MOV W21, W31
	0x0375707C MOVZ W22, 0x18
	0x03757080 CMP W21, W8
	0x03757084 B.CS 0x3757130
	0x03757088 CMP W8, 0x1
	0x0375708C B.LT 0x375711C
	0x03757090 SXTW X10, W21
	0x03757094 SMADDL X11, X21, X22, X9
	0x03757098 MADD X9, X10, X22, X9
	0x0375709C LDR X0, [X11 + 0x30]
	0x037570A0 LDR X10, [X9 + 0x28]
	0x037570A4 LDR W11, [X19 + 0x18]
	0x037570A8 MOV W9, W31
	0x037570AC CMP W11, W9
	0x037570B0 B.EQ 0x3757130
	0x037570B4 SMADDL X12, X9, X22, X19
	0x037570B8 LDR X12, [X12 + 0x28]
	0x037570BC CMP X10, X12
	0x037570C0 B.EQ 0x37570D4
	0x037570C4 ADD W9, W9, 0x1
	0x037570C8 CMP W8, W9
	0x037570CC B.NE 0x37570AC
	0x037570D0 B 0x375711C
	0x037570D4 CBZ X0, 0x3757134
	0x037570D8 LDR X8, [X0]
	0x037570DC SXTW X9, W9
	0x037570E0 MADD X9, X9, X22, X19

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0xC8A000
	008 Move X22, 0x9C5000
	009 Move W8, [X23+3538]
	010 Move X22, [X22+3776]
	011 Move W20, W2
	012 Move X19, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x9C5000
	019 Move X0, [X0+3776]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X23+3538], W8
	023 Move X0, [X22]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {29}
	027 Call 0x1C17DFC
	028 Move X0, [X22]
	029 Move X8, [X0+184]
	030 And W4, W20, 1
	031 Move X0, X21
	032 Move X3, X19
	033 Move X1, [X8+48]
	034 Move X2, [X8+56]
	035 Move X20, [X31+32]
	036 Move X19, [X31+40]
	037 Move X22, [X31+16]
	038 Move X21, [X31+24]
	039 Move X30, [X31+48]
	040 Move X23, [X31+56]
	041 Call InputDeviceMatcher.With, X0, X1, X2, X3
	042 Return X0

Method: UnityEngine.InputSystem.Layouts.InputDeviceMatcher WithVersion(System.String pattern, System.Boolean supportRegex = True)

Disassembly:
	0x037570E4 LDR X1, [X9 + 0x30]
	0x037570E8 LDP X9, X2, [X8 + 0x138]
	0x037570EC BLR X9
	0x037570F0 TBZ X0, 0x0, 0x375711C
	0x037570F4 LDR X9, [X20]
	0x037570F8 CBZ X9, 0x3757134
	0x037570FC LDR W8, [X9 + 0x18]
	0x03757100 ADD W21, W21, 0x1
	0x03757104 MOVZ W0, 0x1
	0x03757108 CMP W21, W8
	0x0375710C B.LT 0x3757080
	0x03757110 B 0x3757120
	0x03757114 MOVZ W0, 0x1
	0x03757118 B 0x3757120
	0x0375711C MOV W0, W31
	0x03757120 LDP X20, X19, [X31 + 0x20]
	0x03757124 LDP X22, X21, [X31 + 0x10]
	0x03757128 LDR X30, [X31], #0x30
	0x0375712C RET
	0x03757130 BL 0x1C16F28
	0x03757134 BL 0x1C16F20
	0x03757138 CMP X1, X3
	0x0375713C CSET W0, NE
	0x03757140 RET
	0x03757144 STP X30, X21, [X31 - 0x20]!
	0x03757148 STP X20, X19, [X31 + 0x10]
	0x0375714C ADRP X21, 0xC89000
	0x03757150 LDRB W8, [X21 + 0xDDA]
	0x03757154 MOV X20, X1
	0x03757158 MOV X19, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0xC8A000
	008 Move X22, 0x9C5000
	009 Move W8, [X23+3539]
	010 Move X22, [X22+3776]
	011 Move W20, W2
	012 Move X19, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x9C5000
	019 Move X0, [X0+3776]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X23+3539], W8
	023 Move X0, [X22]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {29}
	027 Call 0x1C17DFC
	028 Move X0, [X22]
	029 Move X8, [X0+184]
	030 And W4, W20, 1
	031 Move X0, X21
	032 Move X3, X19
	033 Move X1, [X8+64]
	034 Move X2, [X8+72]
	035 Move X20, [X31+32]
	036 Move X19, [X31+40]
	037 Move X22, [X31+16]
	038 Move X21, [X31+24]
	039 Move X30, [X31+48]
	040 Move X23, [X31+56]
	041 Call InputDeviceMatcher.With, X0, X1, X2, X3
	042 Return X0

Method: UnityEngine.InputSystem.Layouts.InputDeviceMatcher WithCapability(System.String path, TValue value)

Disassembly:
	0x02208C08 LDR X8, [X2 + 0x38]
	0x02208C0C MOV X19, X1
	0x02208C10 MOV X20, X0
	0x02208C14 CBNZ X8, 0x2208C28
	0x02208C18 MOV X0, X2
	0x02208C1C MOV X21, X2
	0x02208C20 BL 0x1C5C6E0
	0x02208C24 LDR X8, [X21 + 0x38]
	0x02208C28 STP X20, X19, [X31]
	0x02208C2C LDR X0, [X8]
	0x02208C30 ADD X1, X31, 0x0
	0x02208C34 BL 0x1C16E04
	0x02208C38 MOV X1, X31
	0x02208C3C BL 0x3C86C20
	0x02208C40 MOV X19, X0
	0x02208C44 MOV X0, X31
	0x02208C48 BL 0x3241948
	0x02208C4C CBZ X0, 0x2208C74
	0x02208C50 LDR X8, [X0]
	0x02208C54 MOV X1, X19
	0x02208C58 LDR X9, [X8 + 0x268]
	0x02208C5C LDR X2, [X8 + 0x270]
	0x02208C60 BLR X9
	0x02208C64 LDP X20, X19, [X31 + 0x20]
	0x02208C68 LDP X30, X21, [X31 + 0x10]
	0x02208C6C ADD X31, X31, 0x30
	0x02208C70 RET
	0x02208C74 BL 0x1C16F20
	0x02208C78 SUB X31, X31, 0x80
	0x02208C7C STP X30, X21, [X31 + 0x60]
	0x02208C80 STP X20, X19, [X31 + 0x70]
	0x02208C84 LDR X21, [X1 + 0x38]
	0x02208C88 MOV X19, X0
	0x02208C8C CBNZ X21, 0x2208CA0
	0x02208C90 MOV X0, X1
	0x02208C94 MOV X20, X1
	0x02208C98 BL 0x1C5C6E0
	0x02208C9C LDR X21, [X20 + 0x38]
	0x02208CA0 ADD X0, X31, 0x8
	0x02208CA4 MOVZ W2, 0x58
	0x02208CA8 MOV X1, X19
	0x02208CAC BL 0x3EB1AC0
	0x02208CB0 LDR X0, [X21]
	0x02208CB4 ADD X1, X31, 0x8
	0x02208CB8 BL 0x1C16E04
	0x02208CBC MOV X1, X31

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+32], X22
	004 Move [X31+40], X21
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move X8, [X3+56]
	008 Move X20, X3
	009 Move W21, W2
	010 Move X22, X1
	011 Move X19, X0
	012 Compare X8, 0
	013 JumpIfNotEqual {22}
	014 Move X0, 0x1F14000
	015 Move X0, [X0+3776]
	016 Call 0x1C17CF4
	017 Move X8, [X20+56]
	018 Compare X8, 0
	019 JumpIfNotEqual {22}
	020 Move X0, X20
	021 Call 0x1C5D6E0
	022 Add X0, X31, 0
	023 Move X1, X22
	024 Move X2, X31
	025 Move [X31], X31
	026 Move [X31+8], X31
	027 Call InternedString..ctor, X0, X1
	028 Move [X31+28], W21
	029 Move X8, [X20+56]
	030 Add X1, X31, 28
	031 Move X0, [X8]
	032 Call 0x1C17E04
	033 Move X8, 0x1F14000
	034 Move X8, [X8+3776]
	035 Move X20, X0
	036 Move X8, [X8]
	037 Move W9, [X8+224]
	038 Compare W9, 0
	039 JumpIfNotEqual {42}
	040 Move X0, X8
	041 Call 0x1C17DFC
	042 Move X1, [X31]
	043 Move X2, [X31+8]
	044 Move W4, 1
	045 Move X0, X19
	046 Move X3, X20
	047 Move X5, X31
	048 Call InputDeviceMatcher.With, X0, X1, X2, X3
	049 Move X20, [X31+48]
	050 Move X19, [X31+56]
	051 Move X22, [X31+32]
	052 Move X21, [X31+40]
	053 Move X30, [X31+16]
	054 Add X31, X31, 64
	055 Return X0

Method: UnityEngine.InputSystem.Layouts.InputDeviceMatcher With(UnityEngine.InputSystem.Utilities.InternedString key, System.Object value, System.Boolean supportRegex = True)

Disassembly:
	0x03756D70 CBNZ W8, 0x3756D78
	0x03756D74 BL 0x1C16DFC
	0x03756D78 ADD X0, X31, 0x8
	0x03756D7C MOV X1, X20
	0x03756D80 MOV W2, W31
	0x03756D84 BL 0x3755F7C
	0x03756D88 MOV X20, X0
	0x03756D8C STR X0, [X31 + 0x8]
	0x03756D90 LDR X0, [X19 + 0x10]
	0x03756D94 MOV X1, X31
	0x03756D98 BL 0x32277A8
	0x03756D9C TBNZ X0, 0x0, 0x3756DCC
	0x03756DA0 LDR X0, [X21]
	0x03756DA4 LDR X20, [X19 + 0x10]
	0x03756DA8 LDR W8, [X0 + 0xE0]
	0x03756DAC CBNZ W8, 0x3756DB4
	0x03756DB0 BL 0x1C16DFC
	0x03756DB4 ADD X0, X31, 0x8
	0x03756DB8 MOV X1, X20
	0x03756DBC MOV W2, W31
	0x03756DC0 BL 0x3755FF4
	0x03756DC4 MOV X20, X0
	0x03756DC8 STR X0, [X31 + 0x8]
	0x03756DCC LDR X0, [X19 + 0x18]
	0x03756DD0 MOV X1, X31
	0x03756DD4 BL 0x32277A8
	0x03756DD8 TBNZ X0, 0x0, 0x3756E08
	0x03756DDC LDR X0, [X21]
	0x03756DE0 LDR X20, [X19 + 0x18]
	0x03756DE4 LDR W8, [X0 + 0xE0]
	0x03756DE8 CBNZ W8, 0x3756DF0
	0x03756DEC BL 0x1C16DFC
	0x03756DF0 ADD X0, X31, 0x8
	0x03756DF4 MOV X1, X20
	0x03756DF8 MOV W2, W31
	0x03756DFC BL 0x375606C
	0x03756E00 MOV X20, X0
	0x03756E04 STR X0, [X31 + 0x8]
	0x03756E08 LDR X0, [X19 + 0x28]
	0x03756E0C MOV X1, X31
	0x03756E10 BL 0x32277A8
	0x03756E14 TBNZ X0, 0x0, 0x3756E40
	0x03756E18 LDR X0, [X21]
	0x03756E1C LDR X19, [X19 + 0x28]
	0x03756E20 LDR W8, [X0 + 0xE0]
	0x03756E24 CBNZ W8, 0x3756E2C
	0x03756E28 BL 0x1C16DFC
	0x03756E2C ADD X0, X31, 0x8
	0x03756E30 MOV X1, X19
	0x03756E34 MOV W2, W31
	0x03756E38 BL 0x37560E4
	0x03756E3C MOV X20, X0
	0x03756E40 MOV X0, X20
	0x03756E44 LDP X20, X19, [X31 + 0x20]
	0x03756E48 LDP X30, X21, [X31 + 0x10]
	0x03756E4C ADD X31, X31, 0x30
	0x03756E50 RET
	0x03756E54 SUB X31, X31, 0x60
	0x03756E58 STR X30, [X31 + 0x10]
	0x03756E5C STP X26, X25, [X31 + 0x20]
	0x03756E60 STP X24, X23, [X31 + 0x30]
	0x03756E64 STP X22, X21, [X31 + 0x40]
	0x03756E68 STP X20, X19, [X31 + 0x50]
	0x03756E6C ADRP X20, 0xC8A000
	0x03756E70 ADRP X21, 0x9C5000
	0x03756E74 LDRB W8, [X20 + 0xDD8]
	0x03756E78 LDR X21, [X21 + 0xEC0]
	0x03756E7C MOV X19, X0
	0x03756E80 TBNZ X8, 0x0, 0x3756EEC
	0x03756E84 ADRP X0, 0x9C5000
	0x03756E88 LDR X0, [X0 + 0xEC0]
	0x03756E8C BL 0x1C16CF4
	0x03756E90 ADRP X0, 0x9C8000
	0x03756E94 LDR X0, [X0 + 0x510]
	0x03756E98 BL 0x1C16CF4
	0x03756E9C ADRP X0, 0x9EF000
	0x03756EA0 LDR X0, [X0 + 0xEE0]
	0x03756EA4 BL 0x1C16CF4
	0x03756EA8 ADRP X0, 0x9EF000
	0x03756EAC LDR X0, [X0 + 0xEE8]
	0x03756EB0 BL 0x1C16CF4
	0x03756EB4 ADRP X0, 0x99F000
	0x03756EB8 LDR X0, [X0 + 0x278]
	0x03756EBC BL 0x1C16CF4
	0x03756EC0 ADRP X0, 0x99D000
	0x03756EC4 LDR X0, [X0 + 0xEF8]
	0x03756EC8 BL 0x1C16CF4
	0x03756ECC ADRP X0, 0x9A4000
	0x03756ED0 LDR X0, [X0 + 0xD50]
	0x03756ED4 BL 0x1C16CF4
	0x03756ED8 ADRP X0, 0x9EF000
	0x03756EDC LDR X0, [X0 + 0xF20]
	0x03756EE0 BL 0x1C16CF4
	0x03756EE4 MOVZ W8, 0x1
	0x03756EE8 STRB W8, [X20 + 0xDD8]
	0x03756EEC LDR X0, [X21]
	0x03756EF0 LDR W8, [X0 + 0xE0]
	0x03756EF4 CBNZ W8, 0x3756EFC
	0x03756EF8 BL 0x1C16DFC
	0x03756EFC LDR X21, [X19]
	0x03756F00 CBZ X21, 0x3756FD4
	0x03756F04 ADRP X8, 0x99F000
	0x03756F08 LDR X8, [X8 + 0x278]
	0x03756F0C LDR X8, [X8]
	0x03756F10 LDR X9, [X8 + 0xB8]
	0x03756F14 LDR X8, [X21 + 0x18]
	0x03756F18 LDR X19, [X9]
	0x03756F1C CMP W8, 0x1
	0x03756F20 B.LT 0x3756FE0
	0x03756F24 ADRP X24, 0x9C8000
	0x03756F28 ADRP X25, 0x99D000
	0x03756F2C ADRP X26, 0x9EF000
	0x03756F30 LDR X24, [X24 + 0x510]
	0x03756F34 LDR X25, [X25 + 0xEF8]
	0x03756F38 LDR X26, [X26 + 0xF20]
	0x03756F3C MOV X22, X31
	0x03756F40 AND X8, X8, 0x0
	0x03756F44 ADD X23, X21, 0x30
	0x03756F48 CMP X22, W8, UXTW
	0x03756F4C B.CS 0x3757000
	0x03756F50 CBZ X19, 0x3757004
	0x03756F54 LDR W10, [X19 + 0x10]
	0x03756F58 LDP X8, X9, [X23 - 0x10]
	0x03756F5C LDR X20, [X23]
	0x03756F60 CMP W10, 0x1
	0x03756F64 B.LT 0x3756F80
	0x03756F68 LDR X0, [X24]
	0x03756F6C ADD X1, X31, 0x0
	0x03756F70 STP X8, X9, [X31]
	0x03756F74 BL 0x1C16E04
	0x03756F78 LDR X8, [X26]

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+80], X30
	003 Move [X31+88], X27
	004 Move [X31+96], X26
	005 Move [X31+104], X25
	006 Move [X31+112], X24
	007 Move [X31+120], X23
	008 Move [X31+128], X22
	009 Move [X31+136], X21
	010 Move [X31+144], X20
	011 Move [X31+152], X19
	012 Move X24, 0xC8B000
	013 Move W8, [X24+3540]
	014 Move W23, W4
	015 Move X21, X3
	016 Move X19, X2
	017 Move X20, X1
	018 Move X22, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {49}
	023 Move X0, 0x9F0000
	024 Move X0, [X0+3768]
	025 Call 0x1C17CF4
	026 Move X0, 0x9F0000
	027 Move X0, [X0+3776]
	028 Call 0x1C17CF4
	029 Move X0, 0x9C8000
	030 Move X0, [X0+1608]
	031 Call 0x1C17CF4
	032 Move X0, 0x9F0000
	033 Move X0, [X0+3784]
	034 Call 0x1C17CF4
	035 Move X0, 0x9A6000
	036 Move X0, [X0+1536]
	037 Call 0x1C17CF4
	038 Move X0, 0x9A0000
	039 Move X0, [X0+632]
	040 Call 0x1C17CF4
	041 Move X0, 0x9F0000
	042 Move X0, [X0+3792]
	043 Call 0x1C17CF4
	044 Move X0, 0x9F0000
	045 Move X0, [X0+3800]
	046 Call 0x1C17CF4
	047 Move W8, 1
	048 Move [X24+3540], W8
	049 Move X26, 0x9F0000
	050 Move X25, 0x9F0000
	051 Move X26, [X26+3784]
	052 Move X25, [X25+3768]
	053 Move [X31+32], X31
	054 Move [X31+40], X31
	055 Move TEMP, X23
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfNotEqual {127}
	059 Compare X21, 0
	060 JumpIfEqual {127}
	061 Move X8, 0x9A0000
	062 Move X8, [X8+632]
	063 Move X9, [X21]
	064 Move X8, [X8]
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Move X27, 0x9F0000
	067 Move X27, [X27+3800]
	068 Move X0, [X27]
	069 Move W8, [X0+224]
	070 Compare W8, 0
	071 JumpIfNotEqual {74}
	072 Call 0x1C17DFC
	073 Move X0, [X27]
	074 Move X8, [X0+184]
	075 Move X23, [X8+8]
	076 Compare X23, 0
	077 JumpIfNotEqual {99}
	078 Move W8, [X0+224]
	079 Compare W8, 0
	080 JumpIfNotEqual {83}
	081 Call 0x1C17DFC
	082 Move X0, [X27]
	083 Move X9, 0x9C8000
	084 Move X8, [X0+184]
	085 Move X9, [X9+1608]
	086 Move X24, [X8]
	087 Move X0, [X9]
	088 Call 0x1C17F10
	089 Move X8, 0x9F0000
	090 Move X8, [X8+3792]
	091 Move X1, X24
	092 Move X3, X31
	093 Move X23, X0
	094 Move X2, [X8]
	095 Call Func`2<Char, Boolean>..ctor, X0, X1, X2
	096 Move X8, [X27]
	097 Move X8, [X8+184]
	098 Move [X8+8], X23
	099 Move X8, 0x9F0000
	100 Move X8, [X8+3776]
	101 Move X0, X21
	102 Move X1, X23
	103 Move X2, [X8]
	104 Call 0x21B26E4, X0, X1
	105 Move TEMP, X0
	106 And TEMP, TEMP, 1
	107 Compare TEMP, 1
	108 JumpIfEqual {127}
	109 Add X1, X31, 32
	110 Move X0, X21
	111 Move X2, X31
	112 Call Double.TryParse, X0, X1
	113 Move TEMP, X0
	114 And TEMP, TEMP, 1
	115 Compare TEMP, 1
	116 JumpIfEqual {127}
	117 Move X8, 0x9A6000
	118 Move X8, [X8+1536]
	119 Move X0, [X8]
	120 Call 0x1C17F10
	121 Move W2, 1
	122 Move X1, X21
	123 Move X3, X31
	124 Move X23, X0
	125 Call Regex..ctor, X0, X1, X2
	126 Move X21, X23
	127 Move X8, [X22]
	128 Move X4, [X26]
	129 Add X0, X31, 8
	130 Move X1, X20
	131 Move X2, X19
	132 Move X3, X21
	133 Move [X31+8], X31
	134 Move [X31+16], X31
	135 Move [X31+40], X8
	136 Move [X31+24], X31
	137 Call KeyValuePair`2<InternedString, Object>..ctor, X0, X1, X2
	138 NotImplemented "Instruction LDUR not yet implemented."
	139 Move X8, [X31+24]
	140 Move X2, [X25]
	141 Add X0, X31, 40
	142 Add X1, X31, 48
	143 Move [X31+3], V0
	144 Move [X31+64], X8
	145 Call 0x2173824, X0, X1
	146 Move X0, [X31+40]
	147 Move X20, [X31+144]
	148 Move X19, [X31+152]
	149 Move X22, [X31+128]
	150 Move X21, [X31+136]
	151 Move X24, [X31+112]
	152 Move X23, [X31+120]
	153 Move X26, [X31+96]
	154 Move X25, [X31+104]
	155 Move X30, [X31+80]
	156 Move X27, [X31+88]
	157 Add X31, X31, 160
	158 Return X0

Method: System.Single MatchPercentage(UnityEngine.InputSystem.Layouts.InputDeviceDescription deviceDescription)

Disassembly:
	0x0375715C TBNZ X8, 0x0, 0x3757174
	0x03757160 ADRP X0, 0x9C4000
	0x03757164 LDR X0, [X0 + 0xEC0]
	0x03757168 BL 0x1C16CF4
	0x0375716C MOVZ W8, 0x1
	0x03757170 STRB W8, [X21 + 0xDDA]
	0x03757174 CBZ X20, 0x3757190
	0x03757178 ADRP X21, 0x9C4000
	0x0375717C LDR X21, [X21 + 0xEC0]
	0x03757180 LDR X9, [X20]
	0x03757184 LDR X8, [X21]
	0x03757188 CMP X9, X8
	0x0375718C B.EQ 0x37571A0
	0x03757190 LDP X20, X19, [X31 + 0x10]
	0x03757194 MOV W0, W31
	0x03757198 LDP X30, X21, [X31], #0x20
	0x0375719C RET
	0x037571A0 MOV X0, X20
	0x037571A4 BL 0x1C16E08
	0x037571A8 MOV X8, X0
	0x037571AC LDR X0, [X21]
	0x037571B0 LDR X20, [X8]
	0x037571B4 LDR W9, [X0 + 0xE0]
	0x037571B8 CBNZ W9, 0x37571C0
	0x037571BC BL 0x1C16DFC
	0x037571C0 MOV X0, X19
	0x037571C4 MOV X1, X20
	0x037571C8 LDP X20, X19, [X31 + 0x10]
	0x037571CC LDP X30, X21, [X31], #0x20
	0x037571D0 B 0x3757008
	0x037571D4 SUB X31, X31, 0x30
	0x037571D8 STP X30, X21, [X31 + 0x10]
	0x037571DC STP X20, X19, [X31 + 0x20]
	0x037571E0 ADRP X20, 0xC89000
	0x037571E4 STR X0, [X31 + 0x8]
	0x037571E8 ADRP X21, 0x9C4000
	0x037571EC LDRB W8, [X20 + 0xDDB]
	0x037571F0 LDR X21, [X21 + 0xEC0]
	0x037571F4 MOV X19, X1
	0x037571F8 TBNZ X8, 0x0, 0x3757210
	0x037571FC ADRP X0, 0x9C4000
	0x03757200 LDR X0, [X0 + 0xEC0]
	0x03757204 BL 0x1C16CF4
	0x03757208 MOVZ W8, 0x1
	0x0375720C STRB W8, [X20 + 0xDDB]
	0x03757210 LDR X0, [X21]
	0x03757214 LDR W8, [X0 + 0xE0]
	0x03757218 CBNZ W8, 0x3757220
	0x0375721C BL 0x1C16DFC
	0x03757220 ADD X0, X31, 0x8
	0x03757224 MOV X1, X19
	0x03757228 BL 0x3757008
	0x0375722C LDP X20, X19, [X31 + 0x20]
	0x03757230 LDP X30, X21, [X31 + 0x10]
	0x03757234 AND W0, W0, 0x1
	0x03757238 ADD X31, X31, 0x30
	0x0375723C RET
	0x03757240 STR X30, [X31 - 0x30]!
	0x03757244 STP X22, X21, [X31 + 0x10]
	0x03757248 STP X20, X19, [X31 + 0x20]
	0x0375724C ADRP X21, 0xC89000
	0x03757250 ADRP X22, 0x9C4000
	0x03757254 LDRB W8, [X21 + 0xDDC]
	0x03757258 LDR X22, [X22 + 0xEC0]
	0x0375725C MOV X19, X1
	0x03757260 MOV X20, X0
	0x03757264 TBNZ X8, 0x0, 0x375727C
	0x03757268 ADRP X0, 0x9C4000
	0x0375726C LDR X0, [X0 + 0xEC0]
	0x03757270 BL 0x1C16CF4
	0x03757274 MOVZ W8, 0x1
	0x03757278 STRB W8, [X21 + 0xDDC]
	0x0375727C LDR X0, [X22]
	0x03757280 LDR W8, [X0 + 0xE0]
	0x03757284 CBNZ W8, 0x375728C
	0x03757288 BL 0x1C16DFC
	0x0375728C MOV X0, X20
	0x03757290 MOV X1, X19
	0x03757294 BL 0x37571D4
	0x03757298 LDP X20, X19, [X31 + 0x20]
	0x0375729C LDP X22, X21, [X31 + 0x10]
	0x037572A0 ORN W8, W31, W0, 0x0
	0x037572A4 AND W0, W8, 0x1
	0x037572A8 LDR X30, [X31], #0x30
	0x037572AC RET
	0x037572B0 LDR X0, [X0]
	0x037572B4 CBZ X0, 0x37572C4
	0x037572B8 LDR X8, [X0]
	0x037572BC LDP X2, X1, [X8 + 0x158]
	0x037572C0 BR X2
	0x037572C4 RET
	0x037572C8 SUB X31, X31, 0x90
	0x037572CC STP X30, X25, [X31 + 0x50]
	0x037572D0 STP X24, X23, [X31 + 0x60]
	0x037572D4 STP X22, X21, [X31 + 0x70]
	0x037572D8 STP X20, X19, [X31 + 0x80]
	0x037572DC ADRP X25, 0xC89000
	0x037572E0 ADRP X24, 0x9EE000
	0x037572E4 ADRP X19, 0x9C4000
	0x037572E8 ADRP X23, 0x9EE000
	0x037572EC ADRP X22, 0x9EE000
	0x037572F0 ADRP X21, 0x9EE000
	0x037572F4 ADRP X20, 0x9CE000
	0x037572F8 LDR X24, [X24 + 0xF28]
	0x037572FC LDRB W8, [X25 + 0xDDD]
	0x03757300 LDR X19, [X19 + 0xEC0]
	0x03757304 LDR X23, [X23 + 0xF30]
	0x03757308 LDR X22, [X22 + 0xF38]
	0x0375730C LDR X21, [X21 + 0xF40]
	0x03757310 LDR X20, [X20 + 0xA30]
	0x03757314 TBNZ X8, 0x0, 0x3757368
	0x03757318 ADRP X0, 0x9C4000
	0x0375731C LDR X0, [X0 + 0xEC0]
	0x03757320 BL 0x1C16CF4
	0x03757324 ADRP X0, 0x9EE000
	0x03757328 LDR X0, [X0 + 0xF30]
	0x0375732C BL 0x1C16CF4
	0x03757330 ADRP X0, 0x9EE000
	0x03757334 LDR X0, [X0 + 0xF40]
	0x03757338 BL 0x1C16CF4
	0x0375733C ADRP X0, 0x9EE000
	0x03757340 LDR X0, [X0 + 0xF38]
	0x03757344 BL 0x1C16CF4
	0x03757348 ADRP X0, 0x9CE000
	0x0375734C LDR X0, [X0 + 0xA30]
	0x03757350 BL 0x1C16CF4
	0x03757354 ADRP X0, 0x9EE000
	0x03757358 LDR X0, [X0 + 0xF28]
	0x0375735C BL 0x1C16CF4
	0x03757360 MOVZ W8, 0x1
	0x03757364 STRB W8, [X25 + 0xDDD]
	0x03757368 LDR X1, [X24]
	0x0375736C ADD X0, X31, 0x40
	0x03757370 STP X31, X31, [X31 + 0x40]
	0x03757374 BL 0x3757420
	0x03757378 LDR X8, [X19]
	0x0375737C LDR V0, [X31 + 0x4]
	0x03757380 ADD X0, X31, 0x30
	0x03757384 LDR X8, [X8 + 0xB8]
	0x03757388 STR V0, [X8]
	0x0375738C LDR X1, [X23]
	0x03757390 STP X31, X31, [X31 + 0x30]
	0x03757394 BL 0x3757420
	0x03757398 LDR X8, [X19]
	0x0375739C LDR V0, [X31 + 0x3]
	0x037573A0 ADD X0, X31, 0x20
	0x037573A4 LDR X8, [X8 + 0xB8]
	0x037573A8 STR V0, [X8 + 0x1]
	0x037573AC LDR X1, [X22]
	0x037573B0 STP X31, X31, [X31 + 0x20]
	0x037573B4 BL 0x3757420
	0x037573B8 LDR X8, [X19]
	0x037573BC LDR V0, [X31 + 0x2]
	0x037573C0 ADD X0, X31, 0x10
	0x037573C4 LDR X8, [X8 + 0xB8]
	0x037573C8 STR V0, [X8 + 0x2]
	0x037573CC LDR X1, [X21]
	0x037573D0 STP X31, X31, [X31 + 0x10]
	0x037573D4 BL 0x3757420
	0x037573D8 LDR X8, [X19]
	0x037573DC LDR V0, [X31 + 0x1]
	0x037573E0 ADD X0, X31, 0x0
	0x037573E4 LDR X8, [X8 + 0xB8]
	0x037573E8 STR V0, [X8 + 0x3]
	0x037573EC LDR X1, [X20]
	0x037573F0 STP X31, X31, [X31]
	0x037573F4 BL 0x3757420
	0x037573F8 LDR X8, [X19]
	0x037573FC LDR V0, [X31]
	0x03757400 LDP X20, X19, [X31 + 0x80]
	0x03757404 LDP X22, X21, [X31 + 0x70]
	0x03757408 LDR X8, [X8 + 0xB8]
	0x0375740C LDP X24, X23, [X31 + 0x60]
	0x03757410 LDP X30, X25, [X31 + 0x50]
	0x03757414 STR V0, [X8 + 0x4]
	0x03757418 ADD X31, X31, 0x90
	0x0375741C RET
	0x03757420 STP X30, X21, [X31 - 0x20]!
	0x03757424 STP X20, X19, [X31 + 0x10]
	0x03757428 ADRP X21, 0xC89000
	0x0375742C LDRB W8, [X21 + 0xE47]
	0x03757430 MOV X20, X1
	0x03757434 MOV X19, X0
	0x03757438 TBNZ X8, 0x0, 0x3757450
	0x0375743C ADRP X0, 0x99E000
	0x03757440 LDR X0, [X0 + 0xC48]
	0x03757444 BL 0x1C16CF4
	0x03757448 MOVZ W8, 0x1
	0x0375744C STRB W8, [X21 + 0xE47]
	0x03757450 MOV X0, X20
	0x03757454 MOV X1, X31
	0x03757458 BL 0x32277A8
	0x0375745C TBZ X0, 0x0, 0x3757468
	0x03757460 STP X31, X31, [X19]
	0x03757464 B 0x37574B8
	0x03757468 MOV X0, X20
	0x0375746C MOV X1, X31
	0x03757470 BL 0x322EB20
	0x03757474 STR X0, [X19]
	0x03757478 ADRP X8, 0x99E000
	0x0375747C LDR X8, [X8 + 0xC48]
	0x03757480 LDR X0, [X8]
	0x03757484 LDR W8, [X0 + 0xE0]
	0x03757488 CBNZ W8, 0x3757490
	0x0375748C BL 0x1C16DFC
	0x03757490 MOV X0, X31
	0x03757494 BL 0x3338524
	0x03757498 CBZ X20, 0x37574C4
	0x0375749C MOV X1, X0
	0x037574A0 MOV X0, X20

ISIL:
	001 Subtract X31, X31, 352
	002 Move [X31+240], D8
	003 Move [X31+256], X29
	004 Move [X31+264], X30
	005 Move [X31+272], X28
	006 Move [X31+280], X27
	007 Move [X31+288], X26
	008 Move [X31+296], X25
	009 Move [X31+304], X24
	010 Move [X31+312], X23
	011 Move [X31+320], X22
	012 Move [X31+328], X21
	013 Move [X31+336], X20
	014 Move [X31+344], X19
	015 Move X21, 0xC8A000
	016 Move X24, 0x9C5000
	017 Move W8, [X21+3541]
	018 Move X24, [X24+3776]
	019 Move X19, X1
	020 Move X20, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {36}
	025 Move X0, 0x9C5000
	026 Move X0, [X0+3776]
	027 Call 0x1C17CF4
	028 Move X0, 0x9EF000
	029 Move X0, [X0+3808]
	030 Call 0x1C17CF4
	031 Move X0, 0x9EF000
	032 Move X0, [X0+3816]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X21+3541], W8
	036 Move X0, [X24]
	037 Move [X31+216], X31
	038 Move [X31+224], X31
	039 Move [X31+232], X31
	040 Move W8, [X0+224]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Move X8, [X20]
	045 Move S8, W31
	046 Compare X8, 0
	047 JumpIfEqual {244}
	048 Move X25, [X8+24]
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Add X9, X31, 144
	051 Move X26, X31
	052 Move X27, X31
	053 And X28, X25, 0
	054 Or X21, X9, 7
	055 Move W9, [X8+24]
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move X0, [X24]
	058 Add X8, X8, X26
	059 Move X23, [X8+32]
	060 Move X29, [X8+40]
	061 Move X22, [X8+48]
	062 Move W9, [X0+224]
	063 Compare W9, 0
	064 JumpIfNotEqual {67}
	065 Call 0x1C17DFC
	066 Move X0, [X24]
	067 Move X8, [X0+184]
	068 Move X9, [X8+8]
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move W9, [X0+224]
	071 Compare W9, 0
	072 JumpIfNotEqual {76}
	073 Call 0x1C17DFC
	074 Move X0, [X24]
	075 Move X8, [X0+184]
	076 Move X9, [X8+24]
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Move W9, [X0+224]
	079 Compare W9, 0
	080 JumpIfNotEqual {84}
	081 Call 0x1C17DFC
	082 Move X0, [X24]
	083 Move X8, [X0+184]
	084 Move X9, [X8+40]
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move W9, [X0+224]
	087 Compare W9, 0
	088 JumpIfNotEqual {92}
	089 Call 0x1C17DFC
	090 Move X0, [X24]
	091 Move X8, [X0+184]
	092 Move X9, [X8+56]
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Move W9, [X0+224]
	095 Compare W9, 0
	096 JumpIfNotEqual {100}
	097 Call 0x1C17DFC
	098 Move X8, [X24]
	099 Move X8, [X8+184]
	100 Move X8, [X8+72]
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Move X0, [X19+48]
	103 Move X1, X31
	104 Call String.IsNullOrEmpty, X0
	105 Move TEMP, X0
	106 And TEMP, TEMP, 1
	107 Compare TEMP, 1
	108 JumpIfEqual {244}
	109 Move X1, [X19+48]
	110 Add X0, X31, 216
	111 Call JsonParser..ctor, X0, X1
	112 Move X8, 0xC8A000
	113 Move W8, [X8+3657]
	114 Move TEMP, X8
	115 And TEMP, TEMP, 1
	116 Compare TEMP, 1
	117 JumpIfEqual {124}
	118 Move X0, 0x99F000
	119 Move X0, [X0+632]
	120 Call 0x1C17CF4
	121 Move X8, 0xC8A000
	122 Move W9, 1
	123 Move [X8+3657], W9
	124 Compare X23, 0
	125 JumpIfNotEqual {131}
	126 Move X8, 0x99F000
	127 Move X8, [X8+632]
	128 Move X8, [X8]
	129 Move X8, [X8+184]
	130 Move X23, [X8]
	131 Add X0, X31, 216
	132 Move X1, X23
	133 Call JsonParser.NavigateToProperty, X0, X1
	134 Move TEMP, X0
	135 And TEMP, TEMP, 1
	136 Compare TEMP, 1
	137 JumpIfNotEqual {244}
	138 NotImplemented "Instruction MOVI not yet implemented."
	139 Move W8, 7
	140 Add X0, X31, 216
	141 Add X1, X31, 144
	142 Move [X21+44], V0
	143 Move [X21+16], V0
	144 Move [X21+24], V0
	145 Move [X21], V0
	146 Move [X31+144], W8
	147 Move [X31+208], X22
	148 Call JsonParser.CurrentPropertyHasValueEqualTo, X0, X1
	149 Move TEMP, X0
	150 And TEMP, TEMP, 1
	151 Compare TEMP, 1
	152 JumpIfEqual {209}
	153 Move X0, [X19]
	154 Move X1, X31
	155 Call String.IsNullOrEmpty, X0
	156 Move TEMP, X0
	157 And TEMP, TEMP, 1
	158 Compare TEMP, 1
	159 JumpIfEqual {244}
	160 Move X0, [X24]
	161 Move X23, [X19]
	162 Move X0, [X19+8]
	163 Move X1, X31
	164 Call String.IsNullOrEmpty, X0
	165 Move TEMP, X0
	166 And TEMP, TEMP, 1
	167 Compare TEMP, 1
	168 JumpIfEqual {244}
	169 Move X0, [X24]
	170 Move X23, [X19+8]
	171 Move X0, [X19+16]
	172 Move X1, X31
	173 Call String.IsNullOrEmpty, X0
	174 Move TEMP, X0
	175 And TEMP, TEMP, 1
	176 Compare TEMP, 1
	177 JumpIfEqual {244}
	178 Move X0, [X24]
	179 Move X23, [X19+16]
	180 Move X0, [X19+24]
	181 Move X1, X31
	182 Call String.IsNullOrEmpty, X0
	183 Move TEMP, X0
	184 And TEMP, TEMP, 1
	185 Compare TEMP, 1
	186 JumpIfEqual {244}
	187 Move X0, [X24]
	188 Move X23, [X19+24]
	189 Move X0, [X19+40]
	190 Move X1, X31
	191 Call String.IsNullOrEmpty, X0
	192 Move TEMP, X0
	193 And TEMP, TEMP, 1
	194 Compare TEMP, 1
	195 JumpIfEqual {244}
	196 Move X0, [X24]
	197 Move X23, [X19+40]
	198 Move W8, [X0+224]
	199 Compare W8, 0
	200 JumpIfNotEqual {202}
	201 Call 0x1C17DFC
	202 Move X0, X22
	203 Move X1, X23
	204 Call InputDeviceMatcher.MatchSingleProperty, X0, X1
	205 Move TEMP, X0
	206 And TEMP, TEMP, 1
	207 Compare TEMP, 1
	208 JumpIfNotEqual {244}
	209 Add X27, X27, 1
	210 NotImplemented "Instruction CMP not yet implemented."
	211 Move X8, [X20]
	212 Add X26, X26, 24
	213 Compare X8, 0
	214 JumpIfNotEqual {55}
	215 Call 0x1C17F20
	216 Move V2, [X19+16]
	217 Move V0, [X19+32]
	218 Move X8, [X19+48]
	219 Move V1, [X19]
	220 Move X0, [X24]
	221 Move [X31+96], V2
	222 Move [X31+104], V0
	223 Move [X31+128], X8
	224 Move [X31+5], V1
	225 Move W8, [X0+224]
	226 Compare W8, 0
	227 JumpIfNotEqual {229}
	228 Call 0x1C17DFC
	229 Move V0, [X31+80]
	230 Move V1, [X31+96]
	231 Move V2, [X31+7]
	232 Move X8, [X31+128]
	233 Add X0, X31, 16
	234 Move [X31+16], V0
	235 Move [X31+24], V1
	236 Move [X31+3], V2
	237 Move [X31+64], X8
	238 Call InputDeviceMatcher.GetNumPropertiesIn, X0
	239 NotImplemented "Instruction SCVTF not yet implemented."
	240 Move S1, 1
	241 NotImplemented "Instruction FDIV not yet implemented."
	242 NotImplemented "Instruction SCVTF not yet implemented."
	243 Multiply S8, S0, S1
	244 Move V0, V8
	245 Move X20, [X31+336]
	246 Move X19, [X31+344]
	247 Move X22, [X31+320]
	248 Move X21, [X31+328]
	249 Move X24, [X31+304]
	250 Move X23, [X31+312]
	251 Move X26, [X31+288]
	252 Move X25, [X31+296]
	253 Move X28, [X31+272]
	254 Move X27, [X31+280]
	255 Move X29, [X31+256]
	256 Move X30, [X31+264]
	257 Move V8, [X31+240]
	258 Add X31, X31, 352
	259 Return V0
	260 Call 0x1C17F28

Method: System.Boolean MatchSingleProperty(System.Object pattern, System.String value)

Disassembly:
	0x037574B0 BL 0x322EB20
	0x037574B4 STR X0, [X19 + 0x8]
	0x037574B8 LDP X20, X19, [X31 + 0x10]
	0x037574BC LDP X30, X21, [X31], #0x20
	0x037574C0 RET
	0x037574C4 BL 0x1C16F20
	0x037574C8 SUB X31, X31, 0xE0
	0x037574CC STP X29, X30, [X31 + 0x80]
	0x037574D0 STP X28, X27, [X31 + 0x90]
	0x037574D4 STP X26, X25, [X31 + 0xA0]
	0x037574D8 STP X24, X23, [X31 + 0xB0]
	0x037574DC STP X22, X21, [X31 + 0xC0]
	0x037574E0 STP X20, X19, [X31 + 0xD0]
	0x037574E4 ADRP X22, 0xC89000
	0x037574E8 ADRP X21, 0x9C4000
	0x037574EC MOV X19, X8
	0x037574F0 LDRB W8, [X22 + 0xDDE]
	0x037574F4 LDR X21, [X21 + 0xEC0]
	0x037574F8 MOV X20, X0
	0x037574FC TBNZ X8, 0x0, 0x3757544
	0x03757500 ADRP X0, 0x9EE000
	0x03757504 LDR X0, [X0 + 0xF48]
	0x03757508 BL 0x1C16CF4
	0x0375750C ADRP X0, 0x9EE000
	0x03757510 LDR X0, [X0 + 0xF50]
	0x03757514 BL 0x1C16CF4
	0x03757518 ADRP X0, 0x9C4000
	0x0375751C LDR X0, [X0 + 0xEC0]
	0x03757520 BL 0x1C16CF4
	0x03757524 ADRP X0, 0x9EE000
	0x03757528 LDR X0, [X0 + 0xEE0]
	0x0375752C BL 0x1C16CF4
	0x03757530 ADRP X0, 0x9EE000
	0x03757534 LDR X0, [X0 + 0xEE8]
	0x03757538 BL 0x1C16CF4
	0x0375753C MOVZ W8, 0x1
	0x03757540 STRB W8, [X22 + 0xDDE]
	0x03757544 LDR X0, [X21]
	0x03757548 LDR W8, [X0 + 0xE0]
	0x0375754C CBZ W8, 0x375779C
	0x03757550 CBZ X20, 0x37577A4
	0x03757554 MOVI V0.2D, 0x0
	0x03757558 STR X31, [X31 + 0x70]
	0x0375755C STP V0, V0, [X31 + 0x50]
	0x03757560 STP V0, V0, [X31 + 0x30]
	0x03757564 STR V0, [X31 + 0x2]
	0x03757568 LDR W8, [X20 + 0x18]
	0x0375756C CMP W8, 0x1
	0x03757570 B.LT 0x3757788
	0x03757574 ADRP X25, 0x9EE000
	0x03757578 LDR X25, [X25 + 0xF50]
	0x0375757C ADD X9, X31, 0x20
	0x03757580 ADD X12, X9, 0x48
	0x03757584 ADD X10, X9, 0x38

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xC8A000
	006 Move W8, [X21+3542]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x9A5000
	014 Move X0, [X0+1536]
	015 Call 0x1C17CF4
	016 Move X0, 0x99F000
	017 Move X0, [X0+632]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3542], W8
	021 Compare X20, 0
	022 JumpIfEqual {39}
	023 Move X8, 0x99F000
	024 Move X8, [X8+632]
	025 Move X9, [X8]
	026 Move X8, [X20]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move X9, 0x9A5000
	029 Move X9, [X9+1536]
	030 Move W11, [X8+304]
	031 Move X9, [X9]
	032 Move W10, [X9+304]
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X8, [X8+200]
	035 Add X8, X8, X10
	036 NotImplemented "Instruction LDUR not yet implemented."
	037 NotImplemented "Instruction CMP not yet implemented."
	038 NotImplemented "Instruction CSEL not yet implemented."
	039 Move W0, W31
	040 Move W2, 5
	041 Move X0, X20
	042 Move X1, X19
	043 Move X3, X31
	044 Call String.Compare, X0, X1, X2
	045 NotImplemented "Instruction CMP not yet implemented."
	046 NotImplemented "Instruction CSET not yet implemented."
	047 Move X20, [X31+16]
	048 Move X19, [X31+24]
	049 Move X30, [X31+32]
	050 Move X21, [X31+40]
	051 Return X0
	052 Compare X0, 0
	053 JumpIfEqual {62}
	054 Move X1, X19
	055 Move X20, [X31+16]
	056 Move X19, [X31+24]
	057 Move X2, X31
	058 Move X30, [X31+32]
	059 Move X21, [X31+40]
	060 Call Regex.IsMatch, X0, X1
	061 Return X0
	062 Call 0x1C17F20

Method: System.Int32 GetNumPropertiesIn(UnityEngine.InputSystem.Layouts.InputDeviceDescription description)

Disassembly:
	0x03757C14 MOV X22, X31
	0x03757C18 AND X8, X8, 0x0
	0x03757C1C ADD X23, X21, 0x28
	0x03757C20 CMP X22, W8, UXTW
	0x03757C24 B.CS 0x3757C88
	0x03757C28 LDR X0, [X24]
	0x03757C2C LDP X19, X20, [X23 - 0x8]
	0x03757C30 LDR W8, [X0 + 0xE0]
	0x03757C34 CBNZ W8, 0x3757C3C
	0x03757C38 BL 0x1C16DFC
	0x03757C3C LDR X3, [X25]
	0x03757C40 ADD X0, X31, 0x8
	0x03757C44 MOV X1, X19
	0x03757C48 MOV X2, X20
	0x03757C4C BL 0x2207D78
	0x03757C50 STR X0, [X31 + 0x8]
	0x03757C54 LDR W8, [X21 + 0x18]
	0x03757C58 ADD X22, X22, 0x1
	0x03757C5C ADD X23, X23, 0x10
	0x03757C60 CMP X22, W8, SXTW
	0x03757C64 B.LT 0x3757C20
	0x03757C68 MOV X20, X0
	0x03757C6C MOV X0, X20
	0x03757C70 LDP X20, X19, [X31 + 0x40]
	0x03757C74 LDP X22, X21, [X31 + 0x30]
	0x03757C78 LDP X24, X23, [X31 + 0x20]
	0x03757C7C LDP X30, X25, [X31 + 0x10]
	0x03757C80 ADD X31, X31, 0x50
	0x03757C84 RET
	0x03757C88 BL 0x1C16F28
	0x03757C8C STR X30, [X31 - 0x20]!
	0x03757C90 STP X20, X19, [X31 + 0x10]
	0x03757C94 ADRP X19, 0xC89000
	0x03757C98 ADRP X20, 0x9EE000
	0x03757C9C LDRB W8, [X19 + 0xDE0]
	0x03757CA0 LDR X20, [X20 + 0xED8]
	0x03757CA4 TBNZ X8, 0x0, 0x3757CBC
	0x03757CA8 ADRP X0, 0x9EE000
	0x03757CAC LDR X0, [X0 + 0xED8]
	0x03757CB0 BL 0x1C16CF4
	0x03757CB4 MOVZ W8, 0x1
	0x03757CB8 STRB W8, [X19 + 0xDE0]
	0x03757CBC LDR X0, [X20]
	0x03757CC0 BL 0x1C16F10
	0x03757CC4 MOV X1, X31
	0x03757CC8 MOV X19, X0
	0x03757CCC BL 0x33BDD8C
	0x03757CD0 LDR X8, [X20]
	0x03757CD4 LDR X8, [X8 + 0xB8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, X0
	006 Move X0, [X0]
	007 Move X1, X31
	008 Call String.IsNullOrEmpty, X0
	009 Move X8, [X19+8]
	010 Move W20, W0
	011 NotImplemented "Instruction ORN not yet implemented."
	012 Move X1, X31
	013 Move X0, X8
	014 And W21, W9, 1
	015 Call String.IsNullOrEmpty, X0
	016 Move X8, [X19+16]
	017 And W31, W20, 1
	018 Move W9, 1
	019 NotImplemented "Instruction CINC not yet implemented."
	020 And W31, W0, 1
	021 Move X0, X8
	022 Move X1, X31
	023 NotImplemented "Instruction CSEL not yet implemented."
	024 Call String.IsNullOrEmpty, X0
	025 Move X8, [X19+24]
	026 NotImplemented "Instruction ORN not yet implemented."
	027 And W9, W9, 1
	028 Move X1, X31
	029 Move X0, X8
	030 Add W20, W20, W9
	031 Call String.IsNullOrEmpty, X0
	032 Move X8, [X19+40]
	033 NotImplemented "Instruction ORN not yet implemented."
	034 And W9, W9, 1
	035 Move X1, X31
	036 Move X0, X8
	037 Add W20, W20, W9
	038 Call String.IsNullOrEmpty, X0
	039 Move X8, [X19+48]
	040 NotImplemented "Instruction ORN not yet implemented."
	041 And W9, W9, 1
	042 Move X1, X31
	043 Move X0, X8
	044 Add W19, W20, W9
	045 Call String.IsNullOrEmpty, X0
	046 NotImplemented "Instruction ORN not yet implemented."
	047 And W8, W8, 1
	048 Add W0, W19, W8
	049 Move X20, [X31+16]
	050 Move X19, [X31+24]
	051 Move X30, [X31+32]
	052 Move X21, [X31+40]
	053 Return X0

Method: UnityEngine.InputSystem.Layouts.InputDeviceMatcher FromDeviceDescription(UnityEngine.InputSystem.Layouts.InputDeviceDescription deviceDescription)

Disassembly:
	0x03757CD8 STR X19, [X8]
	0x03757CDC LDP X20, X19, [X31 + 0x10]
	0x03757CE0 LDR X30, [X31], #0x20
	0x03757CE4 RET
	0x03757CE8 MOV X1, X31
	0x03757CEC B 0x33BDD8C
	0x03757CF0 STP X30, X21, [X31 - 0x20]!
	0x03757CF4 STP X20, X19, [X31 + 0x10]
	0x03757CF8 ADRP X21, 0xC89000
	0x03757CFC ADRP X20, 0x99E000
	0x03757D00 LDRB W8, [X21 + 0xDE1]
	0x03757D04 LDR X20, [X20 + 0x170]
	0x03757D08 MOV W19, W1
	0x03757D0C TBNZ X8, 0x0, 0x3757D24
	0x03757D10 ADRP X0, 0x99E000
	0x03757D14 LDR X0, [X0 + 0x170]
	0x03757D18 BL 0x1C16CF4
	0x03757D1C MOVZ W8, 0x1
	0x03757D20 STRB W8, [X21 + 0xDE1]
	0x03757D24 LDR X0, [X20]
	0x03757D28 LDR W8, [X0 + 0xE0]
	0x03757D2C CBNZ W8, 0x3757D34
	0x03757D30 BL 0x1C16DFC
	0x03757D34 MOV W0, W19
	0x03757D38 MOV X1, X31
	0x03757D3C BL 0x331ABF0
	0x03757D40 TBZ X0, 0x0, 0x3757D54
	0x03757D44 LDP X20, X19, [X31 + 0x10]
	0x03757D48 MOVZ W0, 0x1
	0x03757D4C LDP X30, X21, [X31], #0x20
	0x03757D50 RET
	0x03757D54 LDR X0, [X20]
	0x03757D58 LDR W8, [X0 + 0xE0]
	0x03757D5C CBNZ W8, 0x3757D64
	0x03757D60 BL 0x1C16DFC
	0x03757D64 MOV W0, W19
	0x03757D68 LDP X20, X19, [X31 + 0x10]
	0x03757D6C MOV X1, X31
	0x03757D70 LDP X30, X21, [X31], #0x20
	0x03757D74 B 0x3317FCC
	0x03757D78 RET
	0x03757D7C SUB X31, X31, 0x30
	0x03757D80 STP X30, X21, [X31 + 0x10]
	0x03757D84 STP X20, X19, [X31 + 0x20]
	0x03757D88 ADRP X20, 0xC89000
	0x03757D8C LDRB W8, [X20 + 0xDE2]
	0x03757D90 MOV X19, X0
	0x03757D94 TBNZ X8, 0x0, 0x3757DC4
	0x03757D98 ADRP X0, 0x9EE000
	0x03757D9C LDR X0, [X0 + 0xF60]
	0x03757DA0 BL 0x1C16CF4
	0x03757DA4 ADRP X0, 0x9EE000
	0x03757DA8 LDR X0, [X0 + 0xEE0]
	0x03757DAC BL 0x1C16CF4
	0x03757DB0 ADRP X0, 0x9EE000
	0x03757DB4 LDR X0, [X0 + 0xEE8]
	0x03757DB8 BL 0x1C16CF4
	0x03757DBC MOVZ W8, 0x1
	0x03757DC0 STRB W8, [X20 + 0xDE2]
	0x03757DC4 LDR W8, [X19 + 0x10]
	0x03757DC8 CMP W8, 0x1
	0x03757DCC B.EQ 0x3757DF4
	0x03757DD0 CBNZ W8, 0x3757EBC
	0x03757DD4 LDR X9, [X19 + 0x30]
	0x03757DD8 MOVN W8, 0x0
	0x03757DDC STR W8, [X19 + 0x10]
	0x03757DE0 CBZ X9, 0x3757EBC
	0x03757DE4 LDR W9, [X9 + 0x18]
	0x03757DE8 MOV W8, W31
	0x03757DEC STP W9, W31, [X19 + 0x40]
	0x03757DF0 B 0x3757E08
	0x03757DF4 LDP W9, W8, [X19 + 0x40]
	0x03757DF8 MOVN W10, 0x0
	0x03757DFC STR W10, [X19 + 0x10]
	0x03757E00 ADD W8, W8, 0x1
	0x03757E04 STR W8, [X19 + 0x44]
	0x03757E08 CMP W8, W9
	0x03757E0C B.GE 0x3757EBC
	0x03757E10 LDR X9, [X19 + 0x30]
	0x03757E14 CBZ X9, 0x3757ED0
	0x03757E18 LDR W10, [X9 + 0x18]
	0x03757E1C CMP W8, W10
	0x03757E20 B.CS 0x3757ED4
	0x03757E24 MOVZ W10, 0x18
	0x03757E28 ADRP X21, 0xC89000
	0x03757E2C SMADDL X8, X8, X10, X9
	0x03757E30 LDRB W9, [X21 + 0xE49]
	0x03757E34 LDR X20, [X8 + 0x20]
	0x03757E38 TBNZ X9, 0x0, 0x3757E50
	0x03757E3C ADRP X0, 0x99E000
	0x03757E40 LDR X0, [X0 + 0x278]
	0x03757E44 BL 0x1C16CF4
	0x03757E48 MOVZ W8, 0x1
	0x03757E4C STRB W8, [X21 + 0xE49]
	0x03757E50 CBNZ X20, 0x3757E68

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xC8A000
	007 Move W8, [X20+3543]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x9C5000
	014 Move X0, [X0+3776]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X20+3543], W8
	018 Move [X31+8], X31
	019 Move X0, [X19]
	020 Move X21, 0x9C5000
	021 Move X21, [X21+3776]
	022 Move X1, X31
	023 Call String.IsNullOrEmpty, X0
	024 Move X20, X31
	025 Move TEMP, X0
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {41}
	029 Move X0, [X21]
	030 Move X20, [X19]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Add X0, X31, 8
	036 Move X1, X20
	037 Move W2, W31
	038 Call InputDeviceMatcher.WithInterface, X0, X1, X2
	039 Move X20, X0
	040 Move [X31+8], X0
	041 Move X0, [X19+8]
	042 Move X1, X31
	043 Call String.IsNullOrEmpty, X0
	044 Move TEMP, X0
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfEqual {60}
	048 Move X0, [X21]
	049 Move X20, [X19+8]
	050 Move W8, [X0+224]
	051 Compare W8, 0
	052 JumpIfNotEqual {54}
	053 Call 0x1C17DFC
	054 Add X0, X31, 8
	055 Move X1, X20
	056 Move W2, W31
	057 Call InputDeviceMatcher.WithDeviceClass, X0, X1, X2
	058 Move X20, X0
	059 Move [X31+8], X0
	060 Move X0, [X19+16]
	061 Move X1, X31
	062 Call String.IsNullOrEmpty, X0
	063 Move TEMP, X0
	064 And TEMP, TEMP, 1
	065 Compare TEMP, 1
	066 JumpIfEqual {79}
	067 Move X0, [X21]
	068 Move X20, [X19+16]
	069 Move W8, [X0+224]
	070 Compare W8, 0
	071 JumpIfNotEqual {73}
	072 Call 0x1C17DFC
	073 Add X0, X31, 8
	074 Move X1, X20
	075 Move W2, W31
	076 Call InputDeviceMatcher.WithManufacturer, X0, X1, X2
	077 Move X20, X0
	078 Move [X31+8], X0
	079 Move X0, [X19+24]
	080 Move X1, X31
	081 Call String.IsNullOrEmpty, X0
	082 Move TEMP, X0
	083 And TEMP, TEMP, 1
	084 Compare TEMP, 1
	085 JumpIfEqual {98}
	086 Move X0, [X21]
	087 Move X20, [X19+24]
	088 Move W8, [X0+224]
	089 Compare W8, 0
	090 JumpIfNotEqual {92}
	091 Call 0x1C17DFC
	092 Add X0, X31, 8
	093 Move X1, X20
	094 Move W2, W31
	095 Call InputDeviceMatcher.WithProduct, X0, X1, X2
	096 Move X20, X0
	097 Move [X31+8], X0
	098 Move X0, [X19+40]
	099 Move X1, X31
	100 Call String.IsNullOrEmpty, X0
	101 Move TEMP, X0
	102 And TEMP, TEMP, 1
	103 Compare TEMP, 1
	104 JumpIfEqual {116}
	105 Move X0, [X21]
	106 Move X19, [X19+40]
	107 Move W8, [X0+224]
	108 Compare W8, 0
	109 JumpIfNotEqual {111}
	110 Call 0x1C17DFC
	111 Add X0, X31, 8
	112 Move X1, X19
	113 Move W2, W31
	114 Call InputDeviceMatcher.WithVersion, X0, X1, X2
	115 Move X20, X0
	116 Move X0, X20
	117 Move X20, [X31+32]
	118 Move X19, [X31+40]
	119 Move X30, [X31+16]
	120 Move X21, [X31+24]
	121 Add X31, X31, 48
	122 Return X0

Method: System.String ToString()

Disassembly:
	0x03757E54 ADRP X8, 0x99E000
	0x03757E58 LDR X8, [X8 + 0x278]
	0x03757E5C LDR X8, [X8]
	0x03757E60 LDR X8, [X8 + 0xB8]
	0x03757E64 LDR X20, [X8]
	0x03757E68 LDR X8, [X19 + 0x30]
	0x03757E6C CBZ X8, 0x3757ED0
	0x03757E70 LDRSW X9, [X19 + 0x44]
	0x03757E74 LDR W10, [X8 + 0x18]
	0x03757E78 CMP W9, W10
	0x03757E7C B.CS 0x3757ED4
	0x03757E80 ADRP X11, 0x9EE000
	0x03757E84 LDR X11, [X11 + 0xF60]
	0x03757E88 MOVZ W10, 0x18
	0x03757E8C MADD X8, X9, X10, X8
	0x03757E90 LDR X2, [X8 + 0x30]
	0x03757E94 LDR X3, [X11]
	0x03757E98 ADD X0, X31, 0x0
	0x03757E9C MOV X1, X20
	0x03757EA0 STP X31, X31, [X31]
	0x03757EA4 BL 0x2EE2840
	0x03757EA8 LDR V0, [X31]
	0x03757EAC MOVZ W0, 0x1
	0x03757EB0 STR W0, [X19 + 0x10]
	0x03757EB4 STUR V0, [X19 + 0x18]
	0x03757EB8 B 0x3757EC0
	0x03757EBC MOV W0, W31
	0x03757EC0 LDP X20, X19, [X31 + 0x20]
	0x03757EC4 LDP X30, X21, [X31 + 0x10]
	0x03757EC8 ADD X31, X31, 0x30
	0x03757ECC RET
	0x03757ED0 BL 0x1C16F20
	0x03757ED4 BL 0x1C16F28
	0x03757ED8 LDP X8, X1, [X0 + 0x18]
	0x03757EDC MOV X0, X8
	0x03757EE0 RET
	0x03757EE4 STP X30, X19, [X31 - 0x10]!
	0x03757EE8 ADRP X0, 0x99C000
	0x03757EEC LDR X0, [X0 + 0xB40]
	0x03757EF0 BL 0x1C16D08
	0x03757EF4 BL 0x1C16F10
	0x03757EF8 MOV X1, X31
	0x03757EFC MOV X19, X0
	0x03757F00 BL 0x3380310
	0x03757F04 ADRP X0, 0x9EE000
	0x03757F08 LDR X0, [X0 + 0xF68]
	0x03757F0C BL 0x1C16D08
	0x03757F10 MOV X1, X0
	0x03757F14 MOV X0, X19
	0x03757F18 BL 0x1C16DEC
	0x03757F1C SUB X31, X31, 0x30
	0x03757F20 STP X30, X21, [X31 + 0x10]
	0x03757F24 STP X20, X19, [X31 + 0x20]
	0x03757F28 ADRP X21, 0xC89000
	0x03757F2C ADRP X20, 0x9EE000
	0x03757F30 LDRB W8, [X21 + 0xDE3]
	0x03757F34 LDR X20, [X20 + 0xF70]
	0x03757F38 MOV X19, X0
	0x03757F3C TBNZ X8, 0x0, 0x3757F54
	0x03757F40 ADRP X0, 0x9EE000
	0x03757F44 LDR X0, [X0 + 0xF70]
	0x03757F48 BL 0x1C16CF4
	0x03757F4C MOVZ W8, 0x1
	0x03757F50 STRB W8, [X21 + 0xDE3]
	0x03757F54 LDUR V0, [X19 + 0x18]
	0x03757F58 LDR X0, [X20]
	0x03757F5C ADD X1, X31, 0x0
	0x03757F60 STR V0, [X31]
	0x03757F64 BL 0x1C16E04
	0x03757F68 LDP X20, X19, [X31 + 0x20]
	0x03757F6C LDP X30, X21, [X31 + 0x10]
	0x03757F70 ADD X31, X31, 0x30
	0x03757F74 RET
	0x03757F78 STR X30, [X31 - 0x20]!
	0x03757F7C STP X20, X19, [X31 + 0x10]
	0x03757F80 ADRP X20, 0xC89000
	0x03757F84 LDRB W8, [X20 + 0xDE4]
	0x03757F88 MOV X19, X0
	0x03757F8C TBNZ X8, 0x0, 0x3757FA4
	0x03757F90 ADRP X0, 0x9EE000
	0x03757F94 LDR X0, [X0 + 0xEB0]
	0x03757F98 BL 0x1C16CF4
	0x03757F9C MOVZ W8, 0x1
	0x03757FA0 STRB W8, [X20 + 0xDE4]
	0x03757FA4 LDR W8, [X19 + 0x10]
	0x03757FA8 ADDS W31, W8, 0x2
	0x03757FAC B.NE 0x3757FD0
	0x03757FB0 LDR W20, [X19 + 0x28]
	0x03757FB4 MOV X0, X31
	0x03757FB8 BL 0x33C151C
	0x03757FBC CMP W20, W0
	0x03757FC0 B.NE 0x3757FD0
	0x03757FC4 STR W31, [X19 + 0x10]
	0x03757FC8 MOV X20, X19
	0x03757FCC B 0x3757FFC
	0x03757FD0 ADRP X8, 0x9EE000
	0x03757FD4 LDR X8, [X8 + 0xEB0]
	0x03757FD8 LDR X0, [X8]
	0x03757FDC BL 0x1C16F10
	0x03757FE0 MOV X1, X31
	0x03757FE4 MOV X20, X0
	0x03757FE8 BL 0x33BDD8C
	0x03757FEC MOV X0, X31
	0x03757FF0 STR W31, [X20 + 0x10]
	0x03757FF4 BL 0x33C151C
	0x03757FF8 STR W0, [X20 + 0x28]
	0x03757FFC LDR X8, [X19 + 0x38]
	0x03758000 MOV X0, X20
	0x03758004 STR X8, [X20 + 0x30]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+32], X26
	004 Move [X31+40], X25
	005 Move [X31+48], X24
	006 Move [X31+56], X23
	007 Move [X31+64], X22
	008 Move [X31+72], X21
	009 Move [X31+80], X20
	010 Move [X31+88], X19
	011 Move X20, 0xC8A000
	012 Move X21, 0x9C5000
	013 Move W8, [X20+3544]
	014 Move X21, [X21+3776]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {46}
	020 Move X0, 0x9C5000
	021 Move X0, [X0+3776]
	022 Call 0x1C17CF4
	023 Move X0, 0x9C8000
	024 Move X0, [X0+1296]
	025 Call 0x1C17CF4
	026 Move X0, 0x9EF000
	027 Move X0, [X0+3808]
	028 Call 0x1C17CF4
	029 Move X0, 0x9EF000
	030 Move X0, [X0+3816]
	031 Call 0x1C17CF4
	032 Move X0, 0x99F000
	033 Move X0, [X0+632]
	034 Call 0x1C17CF4
	035 Move X0, 0x99D000
	036 Move X0, [X0+3832]
	037 Call 0x1C17CF4
	038 Move X0, 0x9A4000
	039 Move X0, [X0+3408]
	040 Call 0x1C17CF4
	041 Move X0, 0x9EF000
	042 Move X0, [X0+3872]
	043 Call 0x1C17CF4
	044 Move W8, 1
	045 Move [X20+3544], W8
	046 Move X0, [X21]
	047 Move W8, [X0+224]
	048 Compare W8, 0
	049 JumpIfNotEqual {51}
	050 Call 0x1C17DFC
	051 Move X21, [X19]
	052 Compare X21, 0
	053 JumpIfEqual {104}
	054 Move X8, 0x99F000
	055 Move X8, [X8+632]
	056 Move X8, [X8]
	057 Move X9, [X8+184]
	058 Move X8, [X21+24]
	059 Move X19, [X9]
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move X24, 0x9C8000
	062 Move X25, 0x99D000
	063 Move X26, 0x9EF000
	064 Move X24, [X24+1296]
	065 Move X25, [X25+3832]
	066 Move X26, [X26+3872]
	067 Move X22, X31
	068 And X8, X8, 0
	069 Add X23, X21, 48
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Compare X19, 0
	072 JumpIfEqual {120}
	073 Move W10, [X19+16]
	074 Move X8, [X23-16]
	075 Move X9, [X23-8]
	076 Move X20, [X23]
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Move X0, [X24]
	079 Add X1, X31, 0
	080 Move [X31], X8
	081 Move [X31+8], X9
	082 Call 0x1C17E04
	083 Move X8, [X26]
	084 Move X0, [X24]
	085 Add X1, X31, 0
	086 Move [X31], X8
	087 Move [X31+8], X9
	088 Call 0x1C17E04
	089 Move X8, [X25]
	090 Move X1, X0
	091 Move X0, X8
	092 Move X2, X20
	093 Move X3, X31
	094 Call String.Format, X0, X1, X2
	095 Move X1, X0
	096 Move X0, X19
	097 Move X2, X31
	098 Call String.Concat, X0, X1
	099 Move W8, [X21+24]
	100 Add X22, X22, 1
	101 Move X19, X0
	102 Add X23, X23, 24
	103 NotImplemented "Instruction CMP not yet implemented."
	104 Move X8, 0x9A4000
	105 Move X8, [X8+3408]
	106 Move X19, [X8]
	107 Move X0, X19
	108 Move X20, [X31+80]
	109 Move X19, [X31+88]
	110 Move X22, [X31+64]
	111 Move X21, [X31+72]
	112 Move X24, [X31+48]
	113 Move X23, [X31+56]
	114 Move X26, [X31+32]
	115 Move X25, [X31+40]
	116 Move X30, [X31+16]
	117 Add X31, X31, 96
	118 Return X0
	119 Call 0x1C17F28
	120 Call 0x1C17F20

Method: System.Boolean Equals(UnityEngine.InputSystem.Layouts.InputDeviceMatcher other)

Disassembly:
	0x03758008 LDP X20, X19, [X31 + 0x10]
	0x0375800C LDR X30, [X31], #0x20
	0x03758010 RET
	0x03758014 B 0x3757F78
	0x03758018 STP X30, X21, [X31 - 0x20]!
	0x0375801C STP X20, X19, [X31 + 0x10]
	0x03758020 ADRP X21, 0xC88000
	0x03758024 ADRP X20, 0x9C3000
	0x03758028 LDRB W8, [X21 + 0xDE5]
	0x0375802C LDR X20, [X20 + 0xD18]
	0x03758030 MOV X19, X0
	0x03758034 TBNZ X8, 0x0, 0x375804C
	0x03758038 ADRP X0, 0x9C3000
	0x0375803C LDR X0, [X0 + 0xD18]
	0x03758040 BL 0x1C16CF4
	0x03758044 MOVZ W8, 0x1
	0x03758048 STRB W8, [X21 + 0xDE5]
	0x0375804C MOV X0, X19
	0x03758050 BL 0x3758088
	0x03758054 LDR X0, [X20]
	0x03758058 LDR W8, [X0 + 0xE0]
	0x0375805C CBNZ W8, 0x3758068
	0x03758060 BL 0x1C16DFC
	0x03758064 LDR X0, [X20]
	0x03758068 MOVZ W8, 0x1
	0x0375806C STR W8, [X19 + 0x1C]
	0x03758070 LDR X8, [X0 + 0xB8]
	0x03758074 LDR W8, [X8 + 0x4]
	0x03758078 STR W8, [X19 + 0x10]
	0x0375807C LDP X20, X19, [X31 + 0x10]
	0x03758080 LDP X30, X21, [X31], #0x20
	0x03758084 RET
	0x03758088 STP X30, X21, [X31 - 0x20]!
	0x0375808C STP X20, X19, [X31 + 0x10]
	0x03758090 ADRP X21, 0xC88000
	0x03758094 ADRP X20, 0x9C3000
	0x03758098 LDRB W8, [X21 + 0xDEE]
	0x0375809C LDR X20, [X20 + 0xD18]
	0x037580A0 MOV X19, X0
	0x037580A4 TBNZ X8, 0x0, 0x37580BC
	0x037580A8 ADRP X0, 0x9C3000
	0x037580AC LDR X0, [X0 + 0xD18]
	0x037580B0 BL 0x1C16CF4
	0x037580B4 MOVZ W8, 0x1
	0x037580B8 STRB W8, [X21 + 0xDEE]
	0x037580BC MOVZ W8, 0xBF800000
	0x037580C0 MOV X0, X19
	0x037580C4 STR W8, [X19 + 0x12C]
	0x037580C8 BL 0x3758258
	0x037580CC LDR X0, [X20]
	0x037580D0 LDR W8, [X0 + 0xE0]
	0x037580D4 CBNZ W8, 0x37580E0
	0x037580D8 BL 0x1C16DFC
	0x037580DC LDR X0, [X20]
	0x037580E0 LDR X8, [X0 + 0xB8]
	0x037580E4 ADRP X9, 0xFFFFFFFFFD393000
	0x037580E8 ADRP X10, 0xFFFFFFFFFD392000
	0x037580EC LDR V0, [X9 + 0xC1]
	0x037580F0 LDR W8, [X8 + 0x4]
	0x037580F4 LDR V1, [X10 + 0x49]
	0x037580F8 STUR V0, [X19 + 0xB8]
	0x037580FC STR W8, [X19 + 0x10]
	0x03758100 STUR V1, [X19 + 0xC8]
	0x03758104 LDP X20, X19, [X31 + 0x10]
	0x03758108 LDP X30, X21, [X31], #0x20
	0x0375810C RET
	0x03758110 STR X30, [X31 - 0x10]!
	0x03758114 MOV X2, X31
	0x03758118 MOV X3, X31
	0x0375811C BL 0x3773FF4
	0x03758120 ANDS W31, W0, 0x1
	0x03758124 FMOV S0, 1
	0x03758128 FMOV S1, W31
	0x0375812C FCSEL S0, S1, S0, NE
	0x03758130 LDR X30, [X31], #0x10
	0x03758134 RET

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xC89000
	007 Move W8, [X21+3545]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x9EE000
	015 Move X0, [X0+3808]
	016 Call 0x1C17CF4
	017 Move X0, 0x9EE000
	018 Move X0, [X0+3816]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+3545], W8
	022 Move X9, [X20]
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move W0, W31
	025 Compare X19, 0
	026 JumpIfEqual {72}
	027 Compare X9, 0
	028 JumpIfEqual {72}
	029 Move X8, [X9+24]
	030 Move W10, [X19+24]
	031 NotImplemented "Instruction CMP not yet implemented."
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move W21, W31
	034 Move W22, 24
	035 NotImplemented "Instruction CMP not yet implemented."
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X10, W21
	038 NotImplemented "Instruction SMADDL not yet implemented."
	039 NotImplemented "Instruction MADD not yet implemented."
	040 Move X0, [X11+48]
	041 Move X10, [X9+40]
	042 Move W11, [X19+24]
	043 Move W9, W31
	044 NotImplemented "Instruction CMP not yet implemented."
	045 NotImplemented "Instruction SMADDL not yet implemented."
	046 Move X12, [X12+40]
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Add W9, W9, 1
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Compare X0, 0
	051 JumpIfEqual {79}
	052 Move X8, [X0]
	053 Move X9, W9
	054 NotImplemented "Instruction MADD not yet implemented."
	055 Move X1, [X9+48]
	056 Move X9, [X8+312]
	057 Move X2, [X8+320]
	058 NotImplemented "Instruction BLR not yet implemented."
	059 Move TEMP, X0
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfNotEqual {71}
	063 Move X9, [X20]
	064 Compare X9, 0
	065 JumpIfEqual {79}
	066 Move W8, [X9+24]
	067 Add W21, W21, 1
	068 Move W0, 1
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move W0, 1
	071 Move W0, W31
	072 Move X20, [X31+32]
	073 Move X19, [X31+40]
	074 Move X22, [X31+16]
	075 Move X21, [X31+24]
	076 Move X30, [X31+48]
	077 Return X0
	078 Call 0x1C17F28
	079 Call 0x1C17F20

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x03758144 MOV V1.16B, V0.16B
	0x03758148 CBZ W8, 0x3758154
	0x0375814C LDR V0, [X19 + 0x128]
	0x03758150 FMUL S1, S0, S1
	0x03758154 LDR W8, [X19 + 0x104]
	0x03758158 CMP W8, 0x1
	0x0375815C B.EQ 0x375818C
	0x03758160 CMP W8, 0x3
	0x03758164 B.NE 0x37581A8
	0x03758168 LDR V0, [X19 + 0x108]
	0x0375816C FCMP S1, S0
	0x03758170 B.MI 0x3758184
	0x03758174 LDR V0, [X19 + 0x10C]
	0x03758178 FCMP S1, S0
	0x0375817C MOV V0.16B, V1.16B
	0x03758180 B.LE 0x37581AC
	0x03758184 LDR V0, [X19 + 0x110]
	0x03758188 B 0x37581AC
	0x0375818C LDR V0, [X19 + 0x108]
	0x03758190 FCMP S1, S0
	0x03758194 B.MI 0x37581AC
	0x03758198 LDR V0, [X19 + 0x10C]
	0x0375819C FCMP S1, S0
	0x037581A0 FCSEL S0, S0, S1, GT
	0x037581A4 B 0x37581AC
	0x037581A8 MOV V0.16B, V1.16B
	0x037581AC LDRB W9, [X19 + 0x115]
	0x037581B0 CBZ W9, 0x37581CC
	0x037581B4 LDR V1, [X19 + 0x118]
	0x037581B8 LDR V2, [X19 + 0x11C]
	0x037581BC LDR V3, [X19 + 0x120]
	0x037581C0 MOV X0, X31
	0x037581C4 BL 0x380FE18
	0x037581C8 LDR W8, [X19 + 0x104]
	0x037581CC CMP W8, 0x2
	0x037581D0 B.NE 0x37581F0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xC89000
	006 Move W8, [X21+3546]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x9C4000
	014 Move X0, [X0+3776]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+3546], W8
	018 Compare X20, 0
	019 JumpIfEqual {25}
	020 Move X21, 0x9C4000
	021 Move X21, [X21+3776]
	022 Move X9, [X20]
	023 Move X8, [X21]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move W0, W31
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Return X0
	031 Move X0, X20
	032 Call 0x1C17E08
	033 Move X8, X0
	034 Move X0, [X21]
	035 Move X20, [X8]
	036 Move W9, [X0+224]
	037 Compare W9, 0
	038 JumpIfNotEqual {40}
	039 Call 0x1C17DFC
	040 Move X0, X19
	041 Move X1, X20
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X30, [X31+32]
	045 Move X21, [X31+40]
	046 Call InputDeviceMatcher.Equals, X0, X1
	047 Return X0

Method: System.Boolean op_Equality(UnityEngine.InputSystem.Layouts.InputDeviceMatcher left, UnityEngine.InputSystem.Layouts.InputDeviceMatcher right)

Disassembly:
	0x037581D4 LDR V1, [X19 + 0x108]
	0x037581D8 FCMP S0, S1
	0x037581DC B.MI 0x37581F4
	0x037581E0 LDR V1, [X19 + 0x10C]
	0x037581E4 FCMP S0, S1
	0x037581E8 FCSEL S1, S1, S0, GT
	0x037581EC B 0x37581F4
	0x037581F0 MOV V1.16B, V0.16B
	0x037581F4 LDRB W8, [X19 + 0x114]
	0x037581F8 FNEG S0, S1
	0x037581FC CMP W8, 0x0
	0x03758200 FCSEL S0, S1, S0, EQ
	0x03758204 LDP X30, X19, [X31], #0x10
	0x03758208 RET
	0x0375820C STP X30, X19, [X31 - 0x10]!
	0x03758210 LDRB W8, [X0 + 0x114]
	0x03758214 LDRB W9, [X0 + 0x115]
	0x03758218 FNEG S1, S0
	0x0375821C MOV X19, X0
	0x03758220 CMP W8, 0x0
	0x03758224 FCSEL S0, S0, S1, EQ
	0x03758228 CBZ W9, 0x3758240
	0x0375822C LDR V1, [X19 + 0x118]
	0x03758230 LDR V2, [X19 + 0x11C]
	0x03758234 LDR V3, [X19 + 0x120]
	0x03758238 MOV X0, X31
	0x0375823C BL 0x380FEE8

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xC89000
	007 Move [X31+8], X0
	008 Move X21, 0x9C4000
	009 Move W8, [X20+3547]
	010 Move X21, [X21+3776]
	011 Move X19, X1
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x9C4000
	017 Move X0, [X0+3776]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+3547], W8
	021 Move X0, [X21]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X31, 8
	027 Move X1, X19
	028 Call InputDeviceMatcher.Equals, X0, X1
	029 Move X20, [X31+32]
	030 Move X19, [X31+40]
	031 Move X30, [X31+16]
	032 Move X21, [X31+24]
	033 And W0, W0, 1
	034 Add X31, X31, 48
	035 Return X0

Method: System.Boolean op_Inequality(UnityEngine.InputSystem.Layouts.InputDeviceMatcher left, UnityEngine.InputSystem.Layouts.InputDeviceMatcher right)

Disassembly:
	0x03758240 LDRB W8, [X19 + 0x124]
	0x03758244 CBZ W8, 0x3758250
	0x03758248 LDR V1, [X19 + 0x128]
	0x0375824C FDIV S0, S0, S1
	0x03758250 LDP X30, X19, [X31], #0x10
	0x03758254 RET
	0x03758258 STR X30, [X31 - 0x30]!
	0x0375825C STP X22, X21, [X31 + 0x10]
	0x03758260 STP X20, X19, [X31 + 0x20]
	0x03758264 ADRP X21, 0xC88000
	0x03758268 ADRP X22, 0x9ED000
	0x0375826C ADRP X20, 0x9C3000
	0x03758270 LDRB W8, [X21 + 0xDE6]
	0x03758274 LDR X22, [X22 + 0xF78]
	0x03758278 LDR X20, [X20 + 0xD18]
	0x0375827C MOV X19, X0
	0x03758280 TBNZ X8, 0x0, 0x37582A4
	0x03758284 ADRP X0, 0x9ED000
	0x03758288 LDR X0, [X0 + 0xF78]
	0x0375828C BL 0x1C16CF4
	0x03758290 ADRP X0, 0x9C3000
	0x03758294 LDR X0, [X0 + 0xD18]
	0x03758298 BL 0x1C16CF4
	0x0375829C MOVZ W8, 0x1
	0x037582A0 STRB W8, [X21 + 0xDE6]
	0x037582A4 LDR X1, [X22]
	0x037582A8 MOV X0, X19
	0x037582AC BL 0x2E06BA8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xC89000
	007 Move X22, 0x9C4000
	008 Move W8, [X21+3548]
	009 Move X22, [X22+3776]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x9C4000
	017 Move X0, [X0+3776]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3548], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X0, X20
	027 Move X1, X19
	028 Call InputDeviceMatcher.op_Equality, X0, X1
	029 Move X20, [X31+32]
	030 Move X19, [X31+40]
	031 Move X22, [X31+16]
	032 Move X21, [X31+24]
	033 NotImplemented "Instruction ORN not yet implemented."
	034 And W0, W8, 1
	035 Move X30, [X31+48]
	036 Return X0

Method: System.Int32 GetHashCode()

Disassembly:
	0x037582B0 LDR X0, [X20]
	0x037582B4 LDR W8, [X0 + 0xE0]
	0x037582B8 CBNZ W8, 0x37582C4
	0x037582BC BL 0x1C16DFC
	0x037582C0 LDR X0, [X20]
	0x037582C4 LDR X8, [X0 + 0xB8]

ISIL:
	001 Move X0, [X0]
	002 Compare X0, 0
	003 JumpIfEqual {8}
	004 Move X8, [X0]
	005 Move X2, [X8+344]
	006 Move X1, [X8+352]
	007 CallNoReturn X2
	008 Return X0

Method: System.Void .cctor()

Disassembly:
	0x037582C8 LDP X22, X21, [X31 + 0x10]
	0x037582CC LDR W8, [X8 + 0x2C]
	0x037582D0 STR W8, [X19 + 0x10]
	0x037582D4 LDP X20, X19, [X31 + 0x20]
	0x037582D8 LDR X30, [X31], #0x30
	0x037582DC RET
	0x037582E0 SUB X31, X31, 0x40
	0x037582E4 STR D8, [X31 + 0x10]
	0x037582E8 STP X30, X21, [X31 + 0x20]
	0x037582EC STP X20, X19, [X31 + 0x30]
	0x037582F0 ADRP X21, 0xC88000
	0x037582F4 ADRP X20, 0x9ED000
	0x037582F8 LDRB W8, [X21 + 0xDE7]
	0x037582FC LDR X20, [X20 + 0xF80]
	0x03758300 MOV X19, X0
	0x03758304 TBNZ X8, 0x0, 0x3758334
	0x03758308 ADRP X0, 0x9ED000
	0x0375830C LDR X0, [X0 + 0xF80]
	0x03758310 BL 0x1C16CF4
	0x03758314 ADRP X0, 0x9C3000
	0x03758318 LDR X0, [X0 + 0xD18]
	0x0375831C BL 0x1C16CF4
	0x03758320 ADRP X0, 0x9A2000
	0x03758324 LDR X0, [X0 + 0x4B8]
	0x03758328 BL 0x1C16CF4
	0x0375832C MOVZ W8, 0x1
	0x03758330 STRB W8, [X21 + 0xDE7]
	0x03758334 LDR X1, [X20]
	0x03758338 MOV X0, X19
	0x0375833C STP X31, X31, [X31]
	0x03758340 BL 0x2E068EC
	0x03758344 MOV X0, X19
	0x03758348 MOV X1, X31
	0x0375834C BL 0x37734CC
	0x03758350 TBNZ X0, 0x0, 0x37583B4
	0x03758354 LDRB W8, [X19 + 0x115]
	0x03758358 CBZ W8, 0x37583B4
	0x0375835C ADRP X8, 0x9A2000
	0x03758360 LDR X8, [X8 + 0x4B8]
	0x03758364 LDR V8, [X19 + 0x120]
	0x03758368 LDR X8, [X8]
	0x0375836C FABS S1, S8
	0x03758370 LDR X8, [X8 + 0xB8]
	0x03758374 LDR V0, [X8]
	0x03758378 FCMP S1, S0
	0x0375837C B.LE 0x37583B4
	0x03758380 ADRP X8, 0x9C3000
	0x03758384 LDR V0, [X19 + 0x1]
	0x03758388 LDR X8, [X8 + 0xD18]
	0x0375838C STR V0, [X31]
	0x03758390 LDR X0, [X8]
	0x03758394 LDR W8, [X0 + 0xE0]
	0x03758398 CBNZ W8, 0x37583A0
	0x0375839C BL 0x1C16DFC
	0x037583A0 ADD X0, X31, 0x0
	0x037583A4 MOV V0.16B, V8.16B
	0x037583A8 MOV X1, X31
	0x037583AC BL 0x380AC98
	0x037583B0 STP X0, X1, [X19 + 0xA8]
	0x037583B4 LDP X20, X19, [X31 + 0x30]
	0x037583B8 LDP X30, X21, [X31 + 0x20]
	0x037583BC LDR V8, [X31 + 0x10]
	0x037583C0 ADD X31, X31, 0x40
	0x037583C4 RET
	0x037583C8 SUB X31, X31, 0x30
	0x037583CC STP X30, X21, [X31 + 0x10]
	0x037583D0 STP X20, X19, [X31 + 0x20]
	0x037583D4 ADRP X21, 0xC88000
	0x037583D8 LDRB W8, [X21 + 0xDE8]
	0x037583DC MOV X20, X1
	0x037583E0 MOV X19, X0
	0x037583E4 TBNZ X8, 0x0, 0x37583FC
	0x037583E8 ADRP X0, 0x9C3000
	0x037583EC LDR X0, [X0 + 0xD18]
	0x037583F0 BL 0x1C16CF4
	0x037583F4 MOVZ W8, 0x1
	0x037583F8 STRB W8, [X21 + 0xDE8]
	0x037583FC STP X31, X31, [X31]
	0x03758400 LDR W8, [X19 + 0xD8]
	0x03758404 MOVZ W9, 0x5445
	0x03758408 MOVK W9, 0x42590000
	0x0375840C CMP W8, W9
	0x03758410 B.EQ 0x3758430
	0x03758414 MOVZ W9, 0x5420
	0x03758418 MOVK W9, 0x464C0000
	0x0375841C CMP W8, W9

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+80], X30
	003 Move [X31+88], X25
	004 Move [X31+96], X24
	005 Move [X31+104], X23
	006 Move [X31+112], X22
	007 Move [X31+120], X21
	008 Move [X31+128], X20
	009 Move [X31+136], X19
	010 Move X25, 0xC89000
	011 Move X24, 0x9EE000
	012 Move X19, 0x9C4000
	013 Move X23, 0x9EE000
	014 Move X22, 0x9EE000
	015 Move X21, 0x9EE000
	016 Move X20, 0x9CE000
	017 Move X24, [X24+3880]
	018 Move W8, [X25+3549]
	019 Move X19, [X19+3776]
	020 Move X23, [X23+3888]
	021 Move X22, [X22+3896]
	022 Move X21, [X21+3904]
	023 Move X20, [X20+2608]
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {48}
	028 Move X0, 0x9C4000
	029 Move X0, [X0+3776]
	030 Call 0x1C17CF4
	031 Move X0, 0x9EE000
	032 Move X0, [X0+3888]
	033 Call 0x1C17CF4
	034 Move X0, 0x9EE000
	035 Move X0, [X0+3904]
	036 Call 0x1C17CF4
	037 Move X0, 0x9EE000
	038 Move X0, [X0+3896]
	039 Call 0x1C17CF4
	040 Move X0, 0x9CE000
	041 Move X0, [X0+2608]
	042 Call 0x1C17CF4
	043 Move X0, 0x9EE000
	044 Move X0, [X0+3880]
	045 Call 0x1C17CF4
	046 Move W8, 1
	047 Move [X25+3549], W8
	048 Move X1, [X24]
	049 Add X0, X31, 64
	050 Move [X31+64], X31
	051 Move [X31+72], X31
	052 Call InternedString..ctor, X0, X1
	053 Move X8, [X19]
	054 Move V0, [X31+4]
	055 Add X0, X31, 48
	056 Move X8, [X8+184]
	057 Move [X8], V0
	058 Move X1, [X23]
	059 Move [X31+48], X31
	060 Move [X31+56], X31
	061 Call InternedString..ctor, X0, X1
	062 Move X8, [X19]
	063 Move V0, [X31+3]
	064 Add X0, X31, 32
	065 Move X8, [X8+184]
	066 Move [X8+1], V0
	067 Move X1, [X22]
	068 Move [X31+32], X31
	069 Move [X31+40], X31
	070 Call InternedString..ctor, X0, X1
	071 Move X8, [X19]
	072 Move V0, [X31+2]
	073 Add X0, X31, 16
	074 Move X8, [X8+184]
	075 Move [X8+2], V0
	076 Move X1, [X21]
	077 Move [X31+16], X31
	078 Move [X31+24], X31
	079 Call InternedString..ctor, X0, X1
	080 Move X8, [X19]
	081 Move V0, [X31+1]
	082 Add X0, X31, 0
	083 Move X8, [X8+184]
	084 Move [X8+3], V0
	085 Move X1, [X20]
	086 Move [X31], X31
	087 Move [X31+8], X31
	088 Call InternedString..ctor, X0, X1
	089 Move X8, [X19]
	090 Move V0, [X31]
	091 Move X20, [X31+128]
	092 Move X19, [X31+136]
	093 Move X22, [X31+112]
	094 Move X21, [X31+120]
	095 Move X8, [X8+184]
	096 Move X24, [X31+96]
	097 Move X23, [X31+104]
	098 Move X30, [X31+80]
	099 Move X25, [X31+88]
	100 Move [X8+4], V0
	101 Add X31, X31, 144
	102 Return 

