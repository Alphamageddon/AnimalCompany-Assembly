Type: UnityEngine.InputSystem.Layouts.InputControlLayout/ControlItemJson

Method: System.Void .ctor()

Disassembly:
	0x03818CFC ADRP X22, 0xBC9000
	0x03818D00 LDRB W8, [X22 + 0x4FD]
	0x03818D04 MOV X19, X2
	0x03818D08 MOV X20, X1
	0x03818D0C MOV X21, X0
	0x03818D10 TBNZ X8, 0x0, 0x3818D58
	0x03818D14 ADRP X0, 0x932000
	0x03818D18 LDR X0, [X0 + 0x8B8]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X1, X31
	004 Move X19, X0
	005 Call Object..ctor, X0
	006 NotImplemented "Instruction MOVI not yet implemented."
	007 Move [X19+64], D0
	008 Move X30, [X31+16]
	009 Move X19, [X31+24]
	010 Return 

Method: UnityEngine.InputSystem.Layouts.InputControlLayout/ControlItem ToLayout()

Disassembly:
	0x03817F1C LDR X0, [X0 + 0xA28]
	0x03817F20 BL 0x1C16CF4
	0x03817F24 ADRP X0, 0x933000
	0x03817F28 LDR X0, [X0 + 0xA38]
	0x03817F2C BL 0x1C16CF4
	0x03817F30 ADRP X0, 0x933000
	0x03817F34 LDR X0, [X0 + 0xA78]
	0x03817F38 BL 0x1C16CF4
	0x03817F3C ADRP X0, 0x933000
	0x03817F40 LDR X0, [X0 + 0xA80]
	0x03817F44 BL 0x1C16CF4
	0x03817F48 ADRP X0, 0x933000
	0x03817F4C LDR X0, [X0 + 0xA88]
	0x03817F50 BL 0x1C16CF4
	0x03817F54 ADRP X0, 0x933000
	0x03817F58 LDR X0, [X0 + 0xA90]
	0x03817F5C BL 0x1C16CF4
	0x03817F60 MOVZ W8, 0x1
	0x03817F64 STRB W8, [X26 + 0x4F4]
	0x03817F68 LDR X0, [X27]
	0x03817F6C BL 0x1C16F10
	0x03817F70 LDR X1, [X20]
	0x03817F74 MOV X20, X0
	0x03817F78 BL 0x2A59E9C
	0x03817F7C STR X20, [X19]
	0x03817F80 LDR X0, [X25]
	0x03817F84 BL 0x1C16F10
	0x03817F88 LDR X1, [X24]
	0x03817F8C MOV X20, X0
	0x03817F90 BL 0x2A59E9C
	0x03817F94 STR X20, [X19 + 0x8]
	0x03817F98 LDR X0, [X23]
	0x03817F9C BL 0x1C16F10
	0x03817FA0 LDR X1, [X22]
	0x03817FA4 MOV X20, X0
	0x03817FA8 BL 0x2A59E9C
	0x03817FAC STR X20, [X19 + 0x10]
	0x03817FB0 LDR X0, [X21]
	0x03817FB4 BL 0x1C16F10
	0x03817FB8 LDR X1, [X29]
	0x03817FBC MOV X20, X0
	0x03817FC0 BL 0x2A56D18
	0x03817FC4 STR X20, [X19 + 0x18]
	0x03817FC8 LDR X0, [X28]
	0x03817FCC BL 0x1C16F10
	0x03817FD0 ADRP X8, 0x933000
	0x03817FD4 LDR X8, [X8 + 0xA60]
	0x03817FD8 MOV X20, X0
	0x03817FDC LDR X1, [X8]
	0x03817FE0 BL 0x2A59E9C
	0x03817FE4 STR X20, [X19 + 0x20]
	0x03817FE8 ADRP X8, 0x933000
	0x03817FEC LDR X8, [X8 + 0xA80]
	0x03817FF0 LDR X0, [X8]
	0x03817FF4 BL 0x1C16F10
	0x03817FF8 ADRP X8, 0x933000
	0x03817FFC LDR X8, [X8 + 0xA78]
	0x03818000 MOV X20, X0
	0x03818004 LDR X1, [X8]
	0x03818008 BL 0x2DB3D84
	0x0381800C STR X20, [X19 + 0x28]
	0x03818010 ADRP X8, 0x932000
	0x03818014 LDR X8, [X8 + 0xA90]
	0x03818018 LDR X0, [X8]
	0x0381801C BL 0x1C16F10
	0x03818020 ADRP X8, 0x932000
	0x03818024 LDR X8, [X8 + 0xA88]
	0x03818028 MOV X20, X0
	0x0381802C LDR X1, [X8]
	0x03818030 BL 0x3186FC0
	0x03818034 STR X20, [X19 + 0x38]
	0x03818038 ADRP X8, 0x932000
	0x0381803C LDR X8, [X8 + 0xA70]
	0x03818040 LDR X0, [X8]
	0x03818044 BL 0x1C16F10
	0x03818048 ADRP X8, 0x932000
	0x0381804C LDR X8, [X8 + 0xA68]
	0x03818050 MOV X20, X0
	0x03818054 LDR X1, [X8]
	0x03818058 BL 0x2A5CEF4
	0x0381805C STR X20, [X19 + 0x30]
	0x03818060 LDP X20, X19, [X31 + 0x50]
	0x03818064 LDP X22, X21, [X31 + 0x40]
	0x03818068 LDP X24, X23, [X31 + 0x30]
	0x0381806C LDP X26, X25, [X31 + 0x20]
	0x03818070 LDP X28, X27, [X31 + 0x10]
	0x03818074 LDP X29, X30, [X31], #0x60
	0x03818078 RET
	0x0381807C SUB X31, X31, 0xF0
	0x03818080 STR D10, [X31 + 0x80]
	0x03818084 STP D9, D8, [X31 + 0x88]
	0x03818088 STR X30, [X31 + 0x98]
	0x0381808C STP X28, X27, [X31 + 0xA0]
	0x03818090 STP X26, X25, [X31 + 0xB0]
	0x03818094 STP X24, X23, [X31 + 0xC0]
	0x03818098 STP X22, X21, [X31 + 0xD0]
	0x0381809C STP X20, X19, [X31 + 0xE0]
	0x038180A0 ADRP X21, 0xBC9000
	0x038180A4 LDRB W8, [X21 + 0x4F6]
	0x038180A8 MOV X19, X1
	0x038180AC MOV X20, X0
	0x038180B0 TBNZ X8, 0x0, 0x38180EC
	0x038180B4 ADRP X0, 0x932000
	0x038180B8 LDR X0, [X0 + 0x8C0]
	0x038180BC BL 0x1C16CF4
	0x038180C0 ADRP X0, 0x903000
	0x038180C4 LDR X0, [X0 + 0xEC0]
	0x038180C8 BL 0x1C16CF4
	0x038180CC ADRP X0, 0x932000
	0x038180D0 LDR X0, [X0 + 0xA98]
	0x038180D4 BL 0x1C16CF4
	0x038180D8 ADRP X0, 0x932000
	0x038180DC LDR X0, [X0 + 0xAA0]
	0x038180E0 BL 0x1C16CF4
	0x038180E4 MOVZ W8, 0x1
	0x038180E8 STRB W8, [X21 + 0x4F6]
	0x038180EC STR X31, [X31 + 0x78]
	0x038180F0 LDR X0, [X20 + 0x38]
	0x038180F4 CBZ X0, 0x3818218
	0x038180F8 LDR W8, [X0 + 0x18]
	0x038180FC MOV X22, X31
	0x03818100 MOV X23, X31
	0x03818104 SUBS W25, W8, 0x1
	0x03818108 B.LT 0x381821C
	0x0381810C ADRP X26, 0x932000
	0x03818110 ADRP X27, 0x903000
	0x03818114 ADRP X28, 0x932000
	0x03818118 LDR X26, [X26 + 0xAA0]
	0x0381811C LDR X27, [X27 + 0xEC0]
	0x03818120 LDR X28, [X28 + 0x8C0]
	0x03818124 MOV W21, W31
	0x03818128 FMOV S10, W31
	0x0381812C FMOV S9, 1
	0x03818130 LDR X2, [X26]
	0x03818134 ADD X8, X31, 0x40
	0x03818138 MOV W1, W21
	0x0381813C BL 0x31874C8
	0x03818140 LDR X9, [X31 + 0x50]
	0x03818144 LDP V2, V0, [X19 + 0x10]
	0x03818148 LDR X8, [X19 + 0x30]
	0x0381814C LDR V1, [X19]
	0x03818150 LDR X0, [X27]
	0x03818154 STP V2, V0, [X31 + 0x50]
	0x03818158 STP X8, X9, [X31 + 0x70]
	0x0381815C STR V1, [X31 + 0x4]
	0x03818160 LDR W8, [X0 + 0xE0]
	0x03818164 CBNZ W8, 0x381816C
	0x03818168 BL 0x1C16DFC
	0x0381816C LDP V0, V1, [X31 + 0x40]
	0x03818170 LDR V2, [X31 + 0x6]
	0x03818174 LDR X8, [X31 + 0x70]
	0x03818178 ADD X0, X31, 0x78
	0x0381817C ADD X1, X31, 0x0
	0x03818180 MOV X2, X31
	0x03818184 STP V0, V1, [X31]
	0x03818188 STR V2, [X31 + 0x2]
	0x0381818C STR X8, [X31 + 0x30]
	0x03818190 BL 0x375615C
	0x03818194 MOV V8.16B, V0.16B
	0x03818198 FCMP S0, 0x0
	0x0381819C B.LE 0x38181DC
	0x038181A0 LDR X0, [X20 + 0x38]
	0x038181A4 CBZ X0, 0x3818218
	0x038181A8 LDR X2, [X26]
	0x038181AC LDR X24, [X20 + 0x10]
	0x038181B0 ADD X8, X31, 0x40
	0x038181B4 MOV W1, W21
	0x038181B8 BL 0x31874C8
	0x038181BC CBZ X24, 0x3818218
	0x038181C0 LDP X1, X2, [X31 + 0x40]
	0x038181C4 LDR X3, [X28]
	0x038181C8 MOV X0, X24
	0x038181CC BL 0x2A5A970
	0x038181D0 FADD S0, S8, S9
	0x038181D4 ANDS W31, W0, 0x1
	0x038181D8 FCSEL S8, S8, S0, NE
	0x038181DC FCMP S8, S10
	0x038181E0 B.LE 0x3818204
	0x038181E4 LDR X0, [X20 + 0x38]
	0x038181E8 CBZ X0, 0x3818218
	0x038181EC LDR X2, [X26]
	0x038181F0 ADD X8, X31, 0x40
	0x038181F4 MOV W1, W21
	0x038181F8 BL 0x31874C8
	0x038181FC LDP X22, X23, [X31 + 0x40]
	0x03818200 MOV V10.16B, V8.16B
	0x03818204 CMP W25, W21
	0x03818208 B.EQ 0x381821C
	0x0381820C LDR X0, [X20 + 0x38]
	0x03818210 ADD W21, W21, 0x1
	0x03818214 CBNZ X0, 0x3818130
	0x03818218 BL 0x1C16F20
	0x0381821C MOV X0, X22
	0x03818220 MOV X1, X23
	0x03818224 LDP X20, X19, [X31 + 0xE0]
	0x03818228 LDP X22, X21, [X31 + 0xD0]
	0x0381822C LDP X24, X23, [X31 + 0xC0]
	0x03818230 LDP X26, X25, [X31 + 0xB0]
	0x03818234 LDP X28, X27, [X31 + 0xA0]
	0x03818238 LDR X30, [X31 + 0x98]
	0x0381823C LDP D9, D8, [X31 + 0x88]
	0x03818240 LDR V10, [X31 + 0x80]
	0x03818244 ADD X31, X31, 0xF0
	0x03818248 RET
	0x0381824C SUB X31, X31, 0x50
	0x03818250 STR X30, [X31 + 0x20]
	0x03818254 STP X22, X21, [X31 + 0x30]
	0x03818258 STP X20, X19, [X31 + 0x40]
	0x0381825C ADRP X22, 0xBC9000
	0x03818260 LDRB W8, [X22 + 0x4F8]
	0x03818264 MOV X19, X2
	0x03818268 MOV X20, X1
	0x0381826C MOV X21, X0
	0x03818270 TBNZ X8, 0x0, 0x38182AC
	0x03818274 ADRP X0, 0x932000
	0x03818278 LDR X0, [X0 + 0xAA8]
	0x0381827C BL 0x1C16CF4
	0x03818280 ADRP X0, 0x932000
	0x03818284 LDR X0, [X0 + 0xAB0]
	0x03818288 BL 0x1C16CF4
	0x0381828C ADRP X0, 0x92E000
	0x03818290 LDR X0, [X0 + 0x6E0]
	0x03818294 BL 0x1C16CF4
	0x03818298 ADRP X0, 0x903000
	0x0381829C LDR X0, [X0 + 0xDC0]
	0x038182A0 BL 0x1C16CF4
	0x038182A4 MOVZ W8, 0x1
	0x038182A8 STRB W8, [X22 + 0x4F8]
	0x038182AC STR X31, [X31 + 0x28]
	0x038182B0 STP X31, X31, [X31 + 0x10]
	0x038182B4 LDR X0, [X21 + 0x8]
	0x038182B8 CBZ X0, 0x381843C
	0x038182BC ADRP X8, 0x932000
	0x038182C0 LDR X8, [X8 + 0xAA8]
	0x038182C4 ADD X3, X31, 0x28
	0x038182C8 MOV X1, X20
	0x038182CC MOV X2, X19
	0x038182D0 LDR X4, [X8]
	0x038182D4 BL 0x2A5C178
	0x038182D8 TBZ X0, 0x0, 0x3818304
	0x038182DC ADRP X8, 0x903000
	0x038182E0 LDR X8, [X8 + 0xDC0]
	0x038182E4 LDR X19, [X31 + 0x28]
	0x038182E8 LDR X0, [X8]
	0x038182EC LDR W8, [X0 + 0xE0]
	0x038182F0 CBNZ W8, 0x38182F8
	0x038182F4 BL 0x1C16DFC
	0x038182F8 MOV X0, X19
	0x038182FC BL 0x3812058
	0x03818300 B 0x3818428
	0x03818304 LDR X0, [X21]
	0x03818308 CBZ X0, 0x381843C
	0x0381830C ADRP X8, 0x92E000
	0x03818310 LDR X8, [X8 + 0x6E0]
	0x03818314 ADD X3, X31, 0x18
	0x03818318 MOV X1, X20
	0x0381831C MOV X2, X19
	0x03818320 LDR X4, [X8]
	0x03818324 BL 0x2A5C178
	0x03818328 TBZ X0, 0x0, 0x3818370
	0x0381832C MOV X0, X20
	0x03818330 MOV X1, X19
	0x03818334 MOV X2, X31
	0x03818338 BL 0x37577E0
	0x0381833C ADRP X8, 0x903000
	0x03818340 LDR X8, [X8 + 0xDC0]
	0x03818344 LDR X19, [X31 + 0x18]
	0x03818348 MOV X20, X0
	0x0381834C LDR X8, [X8]
	0x03818350 LDR W9, [X8 + 0xE0]
	0x03818354 CBNZ W9, 0x3818360
	0x03818358 MOV X0, X8
	0x0381835C BL 0x1C16DFC
	0x03818360 MOV X0, X20
	0x03818364 MOV X1, X19
	0x03818368 BL 0x381172C
	0x0381836C B 0x3818428
	0x03818370 LDR X0, [X21 + 0x10]
	0x03818374 CBZ X0, 0x381843C
	0x03818378 ADRP X8, 0x932000
	0x0381837C LDR X8, [X8 + 0xAB0]
	0x03818380 ADD X3, X31, 0x10
	0x03818384 MOV X1, X20
	0x03818388 MOV X2, X19
	0x0381838C LDR X4, [X8]
	0x03818390 BL 0x2A5C178
	0x03818394 TBZ X0, 0x0, 0x3818424
	0x03818398 LDR X8, [X31 + 0x10]
	0x0381839C CBZ X8, 0x381843C
	0x038183A0 LDR X9, [X8 + 0x18]
	0x038183A4 LDR X0, [X8 + 0x40]
	0x038183A8 LDR X1, [X8 + 0x28]
	0x038183AC BLR X9
	0x038183B0 CBNZ X0, 0x3818428
	0x038183B4 STP X20, X19, [X31]
	0x038183B8 ADRP X0, 0x906000
	0x038183BC LDR X0, [X0 + 0x510]
	0x038183C0 BL 0x1C16D08
	0x038183C4 ADD X1, X31, 0x0
	0x038183C8 BL 0x1C16E04
	0x038183CC MOV X19, X0
	0x038183D0 ADRP X0, 0x932000
	0x038183D4 LDR X0, [X0 + 0xAB8]
	0x038183D8 BL 0x1C16D08
	0x038183DC MOV X1, X19
	0x038183E0 MOV X2, X31
	0x038183E4 BL 0x321EFD0
	0x038183E8 MOV X19, X0
	0x038183EC ADRP X0, 0x8DB000
	0x038183F0 LDR X0, [X0 + 0x5B0]
	0x038183F4 BL 0x1C16D08
	0x038183F8 BL 0x1C16F10
	0x038183FC MOV X1, X19
	0x03818400 MOV X2, X31
	0x03818404 MOV X20, X0
	0x03818408 BL 0x337DF1C
	0x0381840C ADRP X0, 0x932000
	0x03818410 LDR X0, [X0 + 0xAC0]
	0x03818414 BL 0x1C16D08
	0x03818418 MOV X1, X0
	0x0381841C MOV X0, X20
	0x03818420 BL 0x1C16DEC
	0x03818424 MOV X0, X31
	0x03818428 LDP X20, X19, [X31 + 0x40]
	0x0381842C LDP X22, X21, [X31 + 0x30]
	0x03818430 LDR X30, [X31 + 0x20]
	0x03818434 ADD X31, X31, 0x50
	0x03818438 RET
	0x0381843C BL 0x1C16F20
	0x03818440 SUB X31, X31, 0xB0
	0x03818444 STP X29, X30, [X31 + 0x50]
	0x03818448 STP X28, X27, [X31 + 0x60]
	0x0381844C STP X26, X25, [X31 + 0x70]
	0x03818450 STP X24, X23, [X31 + 0x80]
	0x03818454 STP X22, X21, [X31 + 0x90]
	0x03818458 STP X20, X19, [X31 + 0xA0]
	0x0381845C ADRP X19, 0xBC9000
	0x03818460 LDRB W8, [X19 + 0x4F9]
	0x03818464 MOV X21, X3
	0x03818468 MOV X23, X2
	0x0381846C MOV X20, X1
	0x03818470 MOV X22, X0
	0x03818474 TBNZ X8, 0x0, 0x38184D4
	0x03818478 ADRP X0, 0x932000
	0x0381847C LDR X0, [X0 + 0xAC8]
	0x03818480 BL 0x1C16CF4
	0x03818484 ADRP X0, 0x92F000
	0x03818488 LDR X0, [X0 + 0xD58]
	0x0381848C BL 0x1C16CF4
	0x03818490 ADRP X0, 0x903000
	0x03818494 LDR X0, [X0 + 0xDB8]
	0x03818498 BL 0x1C16CF4
	0x0381849C ADRP X0, 0x932000
	0x038184A0 LDR X0, [X0 + 0xAD0]
	0x038184A4 BL 0x1C16CF4
	0x038184A8 ADRP X0, 0x92F000
	0x038184AC LDR X0, [X0 + 0xD78]
	0x038184B0 BL 0x1C16CF4
	0x038184B4 ADRP X0, 0x932000
	0x038184B8 LDR X0, [X0 + 0x7D8]
	0x038184BC BL 0x1C16CF4
	0x038184C0 ADRP X0, 0x932000
	0x038184C4 LDR X0, [X0 + 0xAD8]
	0x038184C8 BL 0x1C16CF4
	0x038184CC MOVZ W8, 0x1
	0x038184D0 STRB W8, [X19 + 0x4F9]
	0x038184D4 STP X31, X31, [X31 + 0x40]
	0x038184D8 STP X31, X31, [X31 + 0x30]
	0x038184DC CBZ X21, 0x3818504
	0x038184E0 ADRP X8, 0x932000
	0x038184E4 LDR X8, [X8 + 0xAC8]
	0x038184E8 ADD X3, X31, 0x48
	0x038184EC MOV X0, X21
	0x038184F0 MOV X1, X20
	0x038184F4 LDR X4, [X8]
	0x038184F8 MOV X2, X23
	0x038184FC BL 0x2A5C178
	0x03818500 TBNZ X0, 0x0, 0x381870C
	0x03818504 MOV X0, X22
	0x03818508 MOV X1, X20
	0x0381850C MOV X2, X23
	0x03818510 BL 0x381824C
	0x03818514 STR X0, [X31 + 0x48]
	0x03818518 CBZ X0, 0x381870C
	0x0381851C STP X20, X23, [X0 + 0x10]
	0x03818520 LDR X0, [X22 + 0x28]
	0x03818524 CBZ X0, 0x38186E8
	0x03818528 ADRP X8, 0x92F000
	0x0381852C LDR X8, [X8 + 0xD78]
	0x03818530 MOV X1, X20
	0x03818534 MOV X2, X23
	0x03818538 LDR X3, [X8]
	0x0381853C BL 0x2DB442C
	0x03818540 LDR X8, [X31 + 0x48]
	0x03818544 TBZ X0, 0x0, 0x3818560
	0x03818548 CBZ X8, 0x38186E8
	0x0381854C LDR W9, [X8 + 0xA8]
	0x03818550 ORR W9, W9, 0x4
	0x03818554 STR W9, [X8 + 0xA8]
	0x03818558 STP X31, X31, [X31 + 0x38]

ISIL:
	001 Move [X31-112], D8
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Subtract X31, X31, 400
	015 Move X19, 0xBCB000
	016 Move W9, [X19+1265]
	017 Move X20, X0
	018 Move X24, X8
	019 Move TEMP, X9
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {67}
	023 Move X0, 0x934000
	024 Move X0, [X0+2184]
	025 Call 0x1C17CF4
	026 Move X0, 0x932000
	027 Move X0, [X0+288]
	028 Call 0x1C17CF4
	029 Move X0, 0x934000
	030 Move X0, [X0+2192]
	031 Call 0x1C17CF4
	032 Move X0, 0x934000
	033 Move X0, [X0+1896]
	034 Call 0x1C17CF4
	035 Move X0, 0x908000
	036 Move X0, [X0+3888]
	037 Call 0x1C17CF4
	038 Move X0, 0x8DE000
	039 Move X0, [X0+440]
	040 Call 0x1C17CF4
	041 Move X0, 0x8DE000
	042 Move X0, [X0+448]
	043 Call 0x1C17CF4
	044 Move X0, 0x8DE000
	045 Move X0, [X0+464]
	046 Call 0x1C17CF4
	047 Move X0, 0x930000
	048 Move X0, [X0+976]
	049 Call 0x1C17CF4
	050 Move X0, 0x934000
	051 Move X0, [X0+1800]
	052 Call 0x1C17CF4
	053 Move X0, 0x934000
	054 Move X0, [X0+2200]
	055 Call 0x1C17CF4
	056 Move X0, 0x934000
	057 Move X0, [X0+2504]
	058 Call 0x1C17CF4
	059 Move X0, 0x934000
	060 Move X0, [X0+2512]
	061 Call 0x1C17CF4
	062 Move X0, 0x934000
	063 Move X0, [X0+2520]
	064 Call 0x1C17CF4
	065 Move W8, 1
	066 Move [X19+1265], W8
	067 Add X0, X31, 192
	068 Move W2, 208
	069 Move W1, W31
	070 Call 0x3EB2B10
	071 NotImplemented "Instruction MOVI not yet implemented."
	072 Move [X31+128], V0
	073 Move [X31+136], V0
	074 Move [X31+160], V0
	075 Move [X31+168], V0
	076 Move [X31+80], V0
	077 Move [X31+88], V0
	078 Move [X31+7], V0
	079 Move X1, [X20+16]
	080 Add X0, X31, 64
	081 Move X2, X31
	082 Move [X31+64], X31
	083 Move [X31+72], X31
	084 Call InternedString..ctor, X0, X1
	085 Move X1, [X20+24]
	086 Move X19, [X31+64]
	087 Move X21, [X31+72]
	088 Add X0, X31, 48
	089 Move X2, X31
	090 Move [X31+48], X31
	091 Move [X31+56], X31
	092 Call InternedString..ctor, X0, X1
	093 Move X1, [X20+32]
	094 Move X22, [X31+48]
	095 Move X23, [X31+56]
	096 Add X0, X31, 32
	097 Move X2, X31
	098 Move [X31+32], X31
	099 Move [X31+40], X31
	100 Call InternedString..ctor, X0, X1
	101 Move X0, [X20+16]
	102 Compare X0, 0
	103 JumpIfEqual {474}
	104 Move V0, [X20+8]
	105 Move W25, [X20+72]
	106 Move X26, [X20+56]
	107 Move V8, [X20+64]
	108 Move X28, [X31+32]
	109 Move X27, [X31+40]
	110 Move W1, 47
	111 Move X2, X31
	112 Move [X31+408], X24
	113 Move [X31+1], V0
	114 Add X24, X31, 192
	115 Call String.IndexOf, X0, X1
	116 Move V0, [X31+128]
	117 Move V1, [X31+144]
	118 Move W8, [X20+144]
	119 Move W9, [X20+145]
	120 Move W10, [X20+146]
	121 Move W11, [X20+88]
	122 Move V2, [X31+160]
	123 Move V3, [X31+176]
	124 Move [X24+72], V0
	125 Move [X24+88], V1
	126 Move V0, [X31+80]
	127 Move V1, [X31+96]
	128 Move [X24+104], V2
	129 Move [X24+120], V3
	130 Add W31, W0, 1
	131 Move [X31+352], V0
	132 Move [X31+360], V1
	133 Move V0, [X31+7]
	134 NotImplemented "Instruction CSET not yet implemented."
	135 NotImplemented "Instruction BFM not yet implemented."
	136 Or W8, W12, W9
	137 Move [X31+24], V0
	138 Move V0, [X31+1]
	139 Or W8, W8, W10
	140 Or W8, W8, 8
	141 Move [X31+192], X19
	142 Move [X31+200], X21
	143 Move [X31+208], X22
	144 Move [X31+216], X23
	145 Move [X31+224], X28
	146 Move [X31+232], X27
	147 Move [X31+240], X26
	148 Move [X24+56], V0
	149 Move [X31+328], D8
	150 Move [X31+336], W25
	151 Move [X31+340], W31
	152 Move [X31+344], W8
	153 Move [X31+348], W11
	154 Move X0, [X20+80]
	155 Move X1, X31
	156 Call String.IsNullOrEmpty, X0
	157 Move TEMP, X0
	158 And TEMP, TEMP, 1
	159 Compare TEMP, 1
	160 JumpIfEqual {168}
	161 Move X1, [X20+80]
	162 Add X0, X31, 64
	163 Move X2, X31
	164 Move [X31+64], W31
	165 Call FourCC..ctor, X0, X1
	166 Move W8, [X31+64]
	167 Move [X31+340], W8
	168 Move X29, 0x8DD000
	169 Move X19, 0x8DD000
	170 Move X23, 0x907000
	171 Move X28, 0x933000
	172 Move X29, [X29+464]
	173 Move X19, [X19+448]
	174 Move X23, [X23+3888]
	175 Move X28, [X28+2520]
	176 Move X0, [X20+40]
	177 Move X27, 0x933000
	178 Move X26, 0x931000
	179 Move X25, 0x933000
	180 Move X27, [X27+2184]
	181 Move X26, [X26+288]
	182 Move X25, [X25+1800]
	183 Move X1, X31
	184 Call String.IsNullOrEmpty, X0
	185 Move TEMP, X0
	186 And TEMP, TEMP, 1
	187 Compare TEMP, 1
	188 JumpIfNotEqual {192}
	189 Move X8, [X20+96]
	190 Compare X8, 0
	191 JumpIfEqual {290}
	192 Move X0, [X29]
	193 Call 0x1C17F10
	194 Move X1, [X19]
	195 Move X21, X0
	196 Call List`1<Object>..ctor, X0
	197 Move X0, [X20+40]
	198 Move X1, X31
	199 Call String.IsNullOrEmpty, X0
	200 Move TEMP, X0
	201 And TEMP, TEMP, 1
	202 Compare TEMP, 1
	203 JumpIfEqual {228}
	204 Compare X21, 0
	205 JumpIfEqual {474}
	206 Move X9, 0x8DD000
	207 Move X1, [X20+40]
	208 Move X9, [X9+440]
	209 Move W10, [X21+28]
	210 Move X8, [X21+16]
	211 Move X9, [X9]
	212 Add W10, W10, 1
	213 Move [X21+28], W10
	214 Compare X8, 0
	215 JumpIfEqual {474}
	216 NotImplemented "Instruction LDRSW not yet implemented."
	217 Move W11, [X8+24]
	218 NotImplemented "Instruction CMP not yet implemented."
	219 Add W9, W10, 1
	220 Add X8, X8, X10
	221 Move [X21+24], W9
	222 Move [X8+32], X1
	223 Move X8, [X9+32]
	224 Move X0, X21
	225 Move X8, [X8+192]
	226 Move X2, [X8+112]
	227 Call List`1<Object>.AddWithResize, X0, X1
	228 Move X1, [X20+96]
	229 Compare X1, 0
	230 JumpIfEqual {236}
	231 Compare X21, 0
	232 JumpIfEqual {474}
	233 Move X2, [X23]
	234 Move X0, X21
	235 Call List`1<Object>.AddRange, X0, X1
	236 Move X0, [X28]
	237 Move W8, [X0+224]
	238 Compare W8, 0
	239 JumpIfNotEqual {242}
	240 Call 0x1C17DFC
	241 Move X0, [X28]
	242 Move X8, [X0+184]
	243 Move X22, [X8+8]
	244 Compare X22, 0
	245 JumpIfNotEqual {276}
	246 Move W8, [X0+224]
	247 Move X27, X26
	248 Move X26, X25
	249 Compare W8, 0
	250 JumpIfEqual {252}
	251 Move X25, X23
	252 Move X25, X23
	253 Call 0x1C17DFC
	254 Move X0, [X28]
	255 Move X9, 0x933000
	256 Move X8, [X0+184]
	257 Move X9, [X9+1896]
	258 Move X23, [X8]
	259 Move X0, [X9]
	260 Call 0x1C17F10
	261 Move X8, 0x933000
	262 Move X8, [X8+2504]
	263 Move X1, X23
	264 Move X3, X31
	265 Move X22, X0
	266 Move X2, [X8]
	267 Call Func`2<Object, InternedString>..ctor, X0, X1, X2
	268 Move X8, [X28]
	269 Move X23, X25
	270 Move X25, X26
	271 Move X26, X27
	272 Move X8, [X8+184]
	273 Move X27, 0x933000
	274 Move [X8+8], X22
	275 Move X27, [X27+2184]
	276 Move X2, [X27]
	277 Move X0, X21
	278 Move X1, X22
	279 Call Enumerable.Select, X0, X1
	280 Move X1, [X26]
	281 Call Enumerable.ToArray, X0
	282 Move X2, [X25]
	283 Move X1, X0
	284 Add X0, X31, 64
	285 Move [X31+64], X31
	286 Move [X31+72], X31
	287 Call ReadOnlyArray`1<InternedString>..ctor, X0, X1
	288 Move V0, [X31+4]
	289 Move [X24+72], V0
	290 Move X0, [X20+48]
	291 Move X1, X31
	292 Call String.IsNullOrEmpty, X0
	293 Move TEMP, X0
	294 And TEMP, TEMP, 1
	295 Compare TEMP, 1
	296 JumpIfNotEqual {300}
	297 Move X8, [X20+104]
	298 Compare X8, 0
	299 JumpIfEqual {389}
	300 Move X0, [X29]
	301 Call 0x1C17F10
	302 Move X1, [X19]
	303 Move X21, X0
	304 Call List`1<Object>..ctor, X0
	305 Move X0, [X20+48]
	306 Move X1, X31
	307 Call String.IsNullOrEmpty, X0
	308 Move TEMP, X0
	309 And TEMP, TEMP, 1
	310 Compare TEMP, 1
	311 JumpIfEqual {336}
	312 Compare X21, 0
	313 JumpIfEqual {474}
	314 Move X9, 0x8DD000
	315 Move X1, [X20+48]
	316 Move X9, [X9+440]
	317 Move W10, [X21+28]
	318 Move X8, [X21+16]
	319 Move X9, [X9]
	320 Add W10, W10, 1
	321 Move [X21+28], W10
	322 Compare X8, 0
	323 JumpIfEqual {474}
	324 NotImplemented "Instruction LDRSW not yet implemented."
	325 Move W11, [X8+24]
	326 NotImplemented "Instruction CMP not yet implemented."
	327 Add W9, W10, 1
	328 Add X8, X8, X10
	329 Move [X21+24], W9
	330 Move [X8+32], X1
	331 Move X8, [X9+32]
	332 Move X0, X21
	333 Move X8, [X8+192]
	334 Move X2, [X8+112]
	335 Call List`1<Object>.AddWithResize, X0, X1
	336 Move X1, [X20+104]
	337 Compare X1, 0
	338 JumpIfEqual {344}
	339 Compare X21, 0
	340 JumpIfEqual {474}
	341 Move X2, [X23]
	342 Move X0, X21
	343 Call List`1<Object>.AddRange, X0, X1
	344 Move X0, [X28]
	345 Move W8, [X0+224]
	346 Compare W8, 0
	347 JumpIfNotEqual {350}
	348 Call 0x1C17DFC
	349 Move X0, [X28]
	350 Move X8, [X0+184]
	351 Move X22, [X8+16]
	352 Compare X22, 0
	353 JumpIfNotEqual {375}
	354 Move W8, [X0+224]
	355 Compare W8, 0
	356 JumpIfNotEqual {359}
	357 Call 0x1C17DFC
	358 Move X0, [X28]
	359 Move X9, 0x933000
	360 Move X8, [X0+184]
	361 Move X9, [X9+1896]
	362 Move X23, [X8]
	363 Move X0, [X9]
	364 Call 0x1C17F10
	365 Move X8, 0x933000
	366 Move X8, [X8+2512]
	367 Move X1, X23
	368 Move X3, X31
	369 Move X22, X0
	370 Move X2, [X8]
	371 Call Func`2<Object, InternedString>..ctor, X0, X1, X2
	372 Move X8, [X28]
	373 Move X8, [X8+184]
	374 Move [X8+16], X22
	375 Move X2, [X27]
	376 Move X0, X21
	377 Move X1, X22
	378 Call Enumerable.Select, X0, X1
	379 Move X1, [X26]
	380 Call Enumerable.ToArray, X0
	381 Move X2, [X25]
	382 Move X1, X0
	383 Add X0, X31, 64
	384 Move [X31+64], X31
	385 Move [X31+72], X31
	386 Call ReadOnlyArray`1<InternedString>..ctor, X0, X1
	387 Move V0, [X31+4]
	388 Move [X24+88], V0
	389 Move X0, [X20+112]
	390 Move X1, X31
	391 Call String.IsNullOrEmpty, X0
	392 Move TEMP, X0
	393 And TEMP, TEMP, 1
	394 Compare TEMP, 1
	395 JumpIfEqual {409}
	396 Move X0, [X20+112]
	397 Move X1, X31
	398 Call NamedValue.ParseMultiple, X0
	399 Move X8, 0x92F000
	400 Move X8, [X8+976]
	401 Move X1, X0
	402 Add X0, X31, 64
	403 Move [X31+64], X31
	404 Move [X31+72], X31
	405 Move X2, [X8]
	406 Call ReadOnlyArray`1<NamedValue>..ctor, X0, X1
	407 Move V0, [X31+4]
	408 Move [X24+104], V0
	409 Move X0, [X20+120]
	410 Move X1, X31
	411 Call String.IsNullOrEmpty, X0
	412 Move X19, [X31+408]
	413 Move TEMP, X0
	414 And TEMP, TEMP, 1
	415 Compare TEMP, 1
	416 JumpIfEqual {434}
	417 Move X0, [X20+120]
	418 Move X1, X31
	419 Call NameAndParameters.ParseMultiple, X0
	420 Move X8, 0x933000
	421 Move X8, [X8+2192]
	422 Move X1, [X8]
	423 Call Enumerable.ToArray, X0
	424 Move X8, 0x933000
	425 Move X8, [X8+2200]
	426 Move X1, X0
	427 Add X0, X31, 64
	428 Move [X31+64], X31
	429 Move [X31+72], X31
	430 Move X2, [X8]
	431 Call ReadOnlyArray`1<NameAndParameters>..ctor, X0, X1
	432 Move V0, [X31+4]
	433 Move [X24+120], V0
	434 Move X0, [X20+152]
	435 Compare X0, 0
	436 JumpIfEqual {441}
	437 Move X1, X31
	438 Call PrimitiveValue.FromObject, X0
	439 Move [X31+352], X0
	440 Move [X31+360], X1
	441 Move X0, [X20+160]
	442 Compare X0, 0
	443 JumpIfEqual {448}
	444 Move X1, X31
	445 Call PrimitiveValue.FromObject, X0
	446 Move [X31+368], X0
	447 Move [X31+376], X1
	448 Move X0, [X20+168]
	449 Compare X0, 0
	450 JumpIfEqual {455}
	451 Move X1, X31
	452 Call PrimitiveValue.FromObject, X0
	453 Move [X31+384], X0
	454 Move [X31+392], X1
	455 Add X1, X31, 192
	456 Move W2, 208
	457 Move X0, X19
	458 Call 0x3EB2AC0
	459 Add X31, X31, 400
	460 Move X20, [X31+96]
	461 Move X19, [X31+104]
	462 Move X22, [X31+80]
	463 Move X21, [X31+88]
	464 Move X24, [X31+64]
	465 Move X23, [X31+72]
	466 Move X26, [X31+48]
	467 Move X25, [X31+56]
	468 Move X28, [X31+32]
	469 Move X27, [X31+40]
	470 Move X29, [X31+16]
	471 Move X30, [X31+24]
	472 Move V8, [X31+112]
	473 Return X0
	474 Call 0x1C17F20

Method: UnityEngine.InputSystem.Layouts.InputControlLayout/ControlItemJson[] FromControlItems(UnityEngine.InputSystem.Layouts.InputControlLayout/ControlItem[] items)

Disassembly:
	0x0381855C B 0x3818568
	0x03818560 STP X31, X31, [X31 + 0x38]
	0x03818564 CBZ X8, 0x38186E8
	0x03818568 LDRB W8, [X8 + 0xA8]
	0x0381856C TBNZ X8, 0x2, 0x38185E4
	0x03818570 LDR X0, [X22 + 0x18]
	0x03818574 CBZ X0, 0x38186E8
	0x03818578 ADRP X8, 0x903000
	0x0381857C LDR X8, [X8 + 0xDB8]
	0x03818580 ADD X3, X31, 0x38
	0x03818584 MOV X1, X20
	0x03818588 MOV X2, X23
	0x0381858C LDR X4, [X8]
	0x03818590 BL 0x2A590C0
	0x03818594 TBZ X0, 0x0, 0x38185E4
	0x03818598 LDP X1, X2, [X31 + 0x38]
	0x0381859C MOV X0, X22
	0x038185A0 MOV X3, X21
	0x038185A4 BL 0x3818440
	0x038185A8 CBZ X0, 0x3818734
	0x038185AC MOV X1, X0
	0x038185B0 LDR X0, [X31 + 0x48]
	0x038185B4 CBZ X0, 0x38186E8
	0x038185B8 BL 0x3813F90
	0x038185BC LDR X8, [X31 + 0x48]
	0x038185C0 CBZ X8, 0x38186E8
	0x038185C4 LDR W9, [X8 + 0x48]
	0x038185C8 CBNZ W9, 0x38185E4
	0x038185CC ADRP X9, 0x932000
	0x038185D0 LDP X1, X2, [X31 + 0x38]
	0x038185D4 LDR X9, [X9 + 0x7D8]
	0x038185D8 ADD X0, X8, 0x48
	0x038185DC LDR X3, [X9]
	0x038185E0 BL 0x2DE91C0
	0x038185E4 LDR X0, [X22 + 0x20]
	0x038185E8 STR X21, [X31 + 0x8]
	0x038185EC CBZ X0, 0x38186E8
	0x038185F0 ADRP X8, 0x92F000
	0x038185F4 LDR X8, [X8 + 0xD58]
	0x038185F8 ADD X3, X31, 0x30
	0x038185FC MOV X1, X20
	0x03818600 MOV X2, X23
	0x03818604 LDR X4, [X8]
	0x03818608 STR X23, [X31]
	0x0381860C BL 0x2A5C178
	0x03818610 TBZ X0, 0x0, 0x38186EC
	0x03818614 LDR X8, [X31 + 0x30]
	0x03818618 CBZ X8, 0x38186E8
	0x0381861C ADRP X29, 0x932000
	0x03818620 ADRP X19, 0x932000
	0x03818624 LDR X29, [X29 + 0xAD8]
	0x03818628 LDR X19, [X19 + 0x7D8]
	0x0381862C MOV X27, X31
	0x03818630 MOV X28, X31
	0x03818634 MOVN W21, 0x5
	0x03818638 LDR W9, [X8 + 0x18]
	0x0381863C CMP X28, W9, SXTW
	0x03818640 B.GE 0x38186EC
	0x03818644 CMP X28, X9
	0x03818648 B.CS 0x3818730
	0x0381864C ADD X8, X8, X27
	0x03818650 LDP X23, X24, [X8 + 0x20]
	0x03818654 MOV X0, X22
	0x03818658 MOV X3, X31
	0x0381865C MOV X1, X23
	0x03818660 MOV X2, X24
	0x03818664 BL 0x3818440
	0x03818668 CBZ X0, 0x38186E8
	0x0381866C LDR X1, [X31 + 0x48]
	0x03818670 MOV X25, X0
	0x03818674 BL 0x3813F90
	0x03818678 LDR X1, [X29]
	0x0381867C ADD X26, X25, 0x48
	0x03818680 MOV X0, X26
	0x03818684 BL 0x2DE8EC4
	0x03818688 LDR W9, [X25 + 0xA8]
	0x0381868C AND W8, W9, 0xFFFFFFFB
	0x03818690 STR W8, [X25 + 0xA8]
	0x03818694 LDR X8, [X31 + 0x48]
	0x03818698 CBZ X8, 0x38186E8
	0x0381869C LDR W10, [X8 + 0xA8]
	0x038186A0 AND W9, W9, W21, 0x0
	0x038186A4 ADD X0, X25, 0x68
	0x038186A8 MOV X1, X23
	0x038186AC BFM W9, W10, 0x0, 0x0
	0x038186B0 STR W9, [X25 + 0xA8]
	0x038186B4 LDR V0, [X8 + 0x1]
	0x038186B8 MOV X2, X24
	0x038186BC ADD X28, X28, 0x1
	0x038186C0 ADD X27, X27, 0x10
	0x038186C4 STR V0, [X25 + 0x1]
	0x038186C8 LDUR V0, [X8 + 0x58]
	0x038186CC LDUR V1, [X8 + 0x48]
	0x038186D0 STP V1, V0, [X26]
	0x038186D4 LDR X3, [X19]
	0x038186D8 STR X25, [X31 + 0x48]
	0x038186DC BL 0x2DE91C0
	0x038186E0 LDR X8, [X31 + 0x30]
	0x038186E4 CBNZ X8, 0x3818638
	0x038186E8 BL 0x1C16F20
	0x038186EC LDP X2, X0, [X31]
	0x038186F0 CBZ X0, 0x381870C
	0x038186F4 ADRP X8, 0x932000
	0x038186F8 LDR X3, [X31 + 0x48]
	0x038186FC LDR X8, [X8 + 0xAD0]
	0x03818700 MOV X1, X20
	0x03818704 LDR X4, [X8]
	0x03818708 BL 0x2A5A750
	0x0381870C LDR X0, [X31 + 0x48]
	0x03818710 LDP X20, X19, [X31 + 0xA0]
	0x03818714 LDP X22, X21, [X31 + 0x90]
	0x03818718 LDP X24, X23, [X31 + 0x80]
	0x0381871C LDP X26, X25, [X31 + 0x70]
	0x03818720 LDP X28, X27, [X31 + 0x60]
	0x03818724 LDP X29, X30, [X31 + 0x50]
	0x03818728 ADD X31, X31, 0xB0
	0x0381872C RET
	0x03818730 BL 0x1C16F28
	0x03818734 LDUR V0, [X31 + 0x38]
	0x03818738 ADRP X21, 0x906000
	0x0381873C STR V0, [X31 + 0x2]
	0x03818740 LDR X21, [X21 + 0x510]
	0x03818744 MOV X0, X21
	0x03818748 BL 0x1C16D08
	0x0381874C ADD X1, X31, 0x20
	0x03818750 BL 0x1C16E04
	0x03818754 MOV X22, X0
	0x03818758 MOV X0, X21
	0x0381875C STP X20, X23, [X31 + 0x10]
	0x03818760 BL 0x1C16D08
	0x03818764 ADD X1, X31, 0x10
	0x03818768 BL 0x1C16E04
	0x0381876C MOV X19, X0
	0x03818770 ADRP X0, 0x932000
	0x03818774 LDR X0, [X0 + 0xAE0]
	0x03818778 BL 0x1C16D08
	0x0381877C MOV X1, X22
	0x03818780 MOV X2, X19
	0x03818784 MOV X3, X31
	0x03818788 BL 0x3227BD4
	0x0381878C MOV X19, X0
	0x03818790 ADRP X0, 0x932000
	0x03818794 LDR X0, [X0 + 0xAE8]
	0x03818798 BL 0x1C16D08
	0x0381879C BL 0x1C16F10
	0x038187A0 MOV X1, X19
	0x038187A4 MOV X20, X0
	0x038187A8 BL 0x38187C4
	0x038187AC ADRP X0, 0x932000
	0x038187B0 LDR X0, [X0 + 0xAF0]
	0x038187B4 BL 0x1C16D08
	0x038187B8 MOV X1, X0
	0x038187BC MOV X0, X20
	0x038187C0 BL 0x1C16DEC
	0x038187C4 STR X30, [X31 - 0x40]!
	0x038187C8 STP X24, X23, [X31 + 0x10]
	0x038187CC STP X22, X21, [X31 + 0x20]
	0x038187D0 STP X20, X19, [X31 + 0x30]
	0x038187D4 ADRP X22, 0xBC9000
	0x038187D8 ADRP X23, 0x932000
	0x038187DC ADRP X24, 0x8E3000
	0x038187E0 ADRP X21, 0x8DB000
	0x038187E4 LDRB W8, [X22 + 0x509]
	0x038187E8 LDR X23, [X23 + 0xAF8]
	0x038187EC LDR X24, [X24 + 0x9B0]
	0x038187F0 LDR X21, [X21 + 0x7D0]
	0x038187F4 MOV X19, X1
	0x038187F8 MOV X20, X0
	0x038187FC TBNZ X8, 0x0, 0x381882C
	0x03818800 ADRP X0, 0x8DB000
	0x03818804 LDR X0, [X0 + 0x7D0]
	0x03818808 BL 0x1C16CF4
	0x0381880C ADRP X0, 0x932000
	0x03818810 LDR X0, [X0 + 0xAF8]
	0x03818814 BL 0x1C16CF4
	0x03818818 ADRP X0, 0x8E3000
	0x0381881C LDR X0, [X0 + 0x9B0]
	0x03818820 BL 0x1C16CF4
	0x03818824 MOVZ W8, 0x1
	0x03818828 STRB W8, [X22 + 0x509]
	0x0381882C LDR X0, [X23]
	0x03818830 LDR X2, [X24]
	0x03818834 MOV X1, X19
	0x03818838 MOV X3, X31
	0x0381883C BL 0x32274B8
	0x03818840 LDR X8, [X21]
	0x03818844 MOV X21, X0
	0x03818848 LDR W9, [X8 + 0xE0]
	0x0381884C CBNZ W9, 0x3818858
	0x03818850 MOV X0, X8
	0x03818854 BL 0x1C16DFC
	0x03818858 MOV X0, X20
	0x0381885C MOV X1, X21
	0x03818860 MOV X2, X31
	0x03818864 BL 0x33B2C70
	0x03818868 STR X19, [X20 + 0x90]
	0x0381886C LDP X20, X19, [X31 + 0x30]
	0x03818870 LDP X22, X21, [X31 + 0x20]
	0x03818874 LDP X24, X23, [X31 + 0x10]
	0x03818878 LDR X30, [X31], #0x40
	0x0381887C RET
	0x03818880 SUB X31, X31, 0x40
	0x03818884 STR X30, [X31 + 0x10]
	0x03818888 STP X22, X21, [X31 + 0x20]
	0x0381888C STP X20, X19, [X31 + 0x30]
	0x03818890 ADRP X22, 0xBC9000
	0x03818894 LDRB W8, [X22 + 0x4FA]
	0x03818898 MOV X19, X2
	0x0381889C MOV X20, X1
	0x038188A0 MOV X21, X0
	0x038188A4 TBNZ X8, 0x0, 0x38188BC
	0x038188A8 ADRP X0, 0x903000
	0x038188AC LDR X0, [X0 + 0xDB8]
	0x038188B0 BL 0x1C16CF4
	0x038188B4 MOVZ W8, 0x1
	0x038188B8 STRB W8, [X22 + 0x4FA]
	0x038188BC STP X31, X31, [X31]
	0x038188C0 LDR X0, [X21 + 0x18]
	0x038188C4 CBZ X0, 0x3818908
	0x038188C8 ADRP X8, 0x903000
	0x038188CC LDR X8, [X8 + 0xDB8]
	0x038188D0 ADD X3, X31, 0x0
	0x038188D4 MOV X1, X20
	0x038188D8 MOV X2, X19
	0x038188DC LDR X4, [X8]
	0x038188E0 BL 0x2A590C0
	0x038188E4 LDP X8, X9, [X31]
	0x038188E8 LDP X20, X19, [X31 + 0x30]
	0x038188EC LDP X22, X21, [X31 + 0x20]
	0x038188F0 LDR X30, [X31 + 0x10]
	0x038188F4 ANDS W31, W0, 0x1
	0x038188F8 CSEL X0, X8, X31, NE
	0x038188FC CSEL X1, X9, X31, NE
	0x03818900 ADD X31, X31, 0x40
	0x03818904 RET
	0x03818908 BL 0x1C16F20
	0x0381890C SUB X31, X31, 0x40
	0x03818910 STR X30, [X31 + 0x10]
	0x03818914 STP X22, X21, [X31 + 0x20]
	0x03818918 STP X20, X19, [X31 + 0x30]
	0x0381891C ADRP X22, 0xBC9000
	0x03818920 LDRB W8, [X22 + 0x4FB]
	0x03818924 MOV X19, X2
	0x03818928 MOV X20, X1
	0x0381892C MOV X21, X0
	0x03818930 TBNZ X8, 0x0, 0x3818948
	0x03818934 ADRP X0, 0x903000
	0x03818938 LDR X0, [X0 + 0xDB8]
	0x0381893C BL 0x1C16CF4
	0x03818940 MOVZ W8, 0x1
	0x03818944 STRB W8, [X22 + 0x4FB]
	0x03818948 STP X31, X31, [X31]
	0x0381894C LDR X0, [X21 + 0x18]
	0x03818950 CBZ X0, 0x3818980
	0x03818954 ADRP X22, 0x903000
	0x03818958 LDR X22, [X22 + 0xDB8]
	0x0381895C LDR X4, [X22]
	0x03818960 ADD X3, X31, 0x0
	0x03818964 MOV X1, X20
	0x03818968 MOV X2, X19
	0x0381896C BL 0x2A590C0
	0x03818970 TBZ X0, 0x0, 0x3818984
	0x03818974 LDR X0, [X21 + 0x18]
	0x03818978 LDP X20, X19, [X31]
	0x0381897C CBNZ X0, 0x381895C
	0x03818980 BL 0x1C16F20
	0x03818984 MOV X0, X20
	0x03818988 MOV X1, X19
	0x0381898C LDP X20, X19, [X31 + 0x30]
	0x03818990 LDP X22, X21, [X31 + 0x20]
	0x03818994 LDR X30, [X31 + 0x10]
	0x03818998 ADD X31, X31, 0x40
	0x0381899C RET
	0x038189A0 SUB X31, X31, 0x50
	0x038189A4 STP X30, X25, [X31 + 0x10]
	0x038189A8 STP X24, X23, [X31 + 0x20]
	0x038189AC STP X22, X21, [X31 + 0x30]
	0x038189B0 STP X20, X19, [X31 + 0x40]
	0x038189B4 MOV X24, X1
	0x038189B8 MOV X22, X0
	0x038189BC ADD X0, X31, 0x0
	0x038189C0 MOV X1, X31
	0x038189C4 MOV X19, X5
	0x038189C8 MOV X20, X4
	0x038189CC MOV X21, X3
	0x038189D0 MOV X23, X2
	0x038189D4 STR W31, [X5]
	0x038189D8 STP X3, X4, [X31]
	0x038189DC BL 0x375F7A0
	0x038189E0 MOV W25, W31
	0x038189E4 TBNZ X0, 0x0, 0x3818A28
	0x038189E8 MOV W25, W31
	0x038189EC LDP X0, X1, [X31]
	0x038189F0 MOV X2, X24
	0x038189F4 MOV X3, X23
	0x038189F8 MOV X4, X31
	0x038189FC BL 0x3757138
	0x03818A00 TBZ X0, 0x0, 0x3818A28
	0x03818A04 LDP X1, X2, [X31]
	0x03818A08 MOV X0, X22
	0x03818A0C BL 0x3818880
	0x03818A10 STP X0, X1, [X31]
	0x03818A14 ADD X0, X31, 0x0
	0x03818A18 MOV X1, X31
	0x03818A1C ADD W25, W25, 0x1
	0x03818A20 BL 0x375F7A0
	0x03818A24 TBZ X0, 0x0, 0x38189EC
	0x03818A28 LDP X0, X1, [X31]
	0x03818A2C MOV X2, X24
	0x03818A30 MOV X3, X23
	0x03818A34 MOV X4, X31
	0x03818A38 BL 0x37564A4
	0x03818A3C TBNZ X0, 0x0, 0x3818AAC
	0x03818A40 ADD X0, X31, 0x0
	0x03818A44 MOV X1, X31
	0x03818A48 STP X24, X23, [X31]
	0x03818A4C BL 0x375F7A0
	0x03818A50 MOV W25, W31
	0x03818A54 TBNZ X0, 0x0, 0x3818A94
	0x03818A58 LDP X0, X1, [X31]
	0x03818A5C MOV X2, X21
	0x03818A60 MOV X3, X20
	0x03818A64 MOV X4, X31
	0x03818A68 BL 0x3757138
	0x03818A6C TBZ X0, 0x0, 0x3818A94
	0x03818A70 LDP X1, X2, [X31]
	0x03818A74 MOV X0, X22
	0x03818A78 BL 0x3818880
	0x03818A7C STP X0, X1, [X31]
	0x03818A80 ADD X0, X31, 0x0
	0x03818A84 MOV X1, X31
	0x03818A88 ADD W25, W25, 0x1
	0x03818A8C BL 0x375F7A0
	0x03818A90 TBZ X0, 0x0, 0x3818A58
	0x03818A94 LDP X0, X1, [X31]
	0x03818A98 MOV X2, X21
	0x03818A9C MOV X3, X20
	0x03818AA0 MOV X4, X31
	0x03818AA4 BL 0x37564A4
	0x03818AA8 TBZ X0, 0x0, 0x3818AB8
	0x03818AAC MOVZ W0, 0x1
	0x03818AB0 STR W25, [X19]
	0x03818AB4 B 0x3818ABC
	0x03818AB8 MOV W0, W31
	0x03818ABC LDP X20, X19, [X31 + 0x40]
	0x03818AC0 LDP X22, X21, [X31 + 0x30]
	0x03818AC4 LDP X24, X23, [X31 + 0x20]
	0x03818AC8 LDP X30, X25, [X31 + 0x10]
	0x03818ACC ADD X31, X31, 0x50
	0x03818AD0 RET
	0x03818AD4 SUB X31, X31, 0x130
	0x03818AD8 STP X29, X2, [X31 + 0xF0]
	0x03818ADC STP X30, X23, [X31 + 0x100]
	0x03818AE0 STP X22, X21, [X31 + 0x110]
	0x03818AE4 STP X20, X19, [X31 + 0x120]
	0x03818AE8 ADRP X21, 0xBC9000
	0x03818AEC LDRB W8, [X21 + 0x4FC]
	0x03818AF0 MOV X20, X1
	0x03818AF4 MOV X19, X0
	0x03818AF8 TBNZ X8, 0x0, 0x3818B1C
	0x03818AFC ADRP X0, 0x903000
	0x03818B00 LDR X0, [X0 + 0xDB8]
	0x03818B04 BL 0x1C16CF4
	0x03818B08 ADRP X0, 0x92E000
	0x03818B0C LDR X0, [X0 + 0xDB0]
	0x03818B10 BL 0x1C16CF4
	0x03818B14 MOVZ W8, 0x1
	0x03818B18 STRB W8, [X21 + 0x4FC]
	0x03818B1C ADRP X22, 0x903000
	0x03818B20 LDR X22, [X22 + 0xDB8]
	0x03818B24 MOV X9, X20
	0x03818B28 CBZ X9, 0x3818BC8
	0x03818B2C CBZ X20, 0x3818BC8
	0x03818B30 MOV X23, X9
	0x03818B34 LDR X9, [X9 + 0x80]
	0x03818B38 LDR X8, [X20 + 0x78]
	0x03818B3C CMP X9, X8
	0x03818B40 B.NE 0x3818B28
	0x03818B44 CBZ X8, 0x3818BC8
	0x03818B48 LDP X20, X21, [X8 + 0x58]
	0x03818B4C STP X20, X21, [X31 + 0xE0]
	0x03818B50 LDR X0, [X19 + 0x18]
	0x03818B54 CBZ X0, 0x3818BC8
	0x03818B58 LDP X1, X2, [X31 + 0xE0]
	0x03818B5C LDR X4, [X22]
	0x03818B60 ADD X3, X31, 0xE0
	0x03818B64 BL 0x2A590C0
	0x03818B68 TBZ X0, 0x0, 0x3818BA8
	0x03818B6C LDP X0, X1, [X31 + 0xE0]
	0x03818B70 MOV X2, X31
	0x03818B74 BL 0x37577E0
	0x03818B78 MOV X1, X0
	0x03818B7C ADD X0, X31, 0xF8
	0x03818B80 MOVZ W2, 0x1
	0x03818B84 BL 0x3818BCC
	0x03818B88 CBZ X0, 0x3818BC8
	0x03818B8C LDP X1, X2, [X23 + 0x20]
	0x03818B90 ADD X8, X31, 0x8
	0x03818B94 BL 0x3811214
	0x03818B98 LDRB W8, [X31 + 0x8]
	0x03818B9C CBZ W8, 0x3818B50
	0x03818BA0 LDP X20, X21, [X31 + 0xE0]
	0x03818BA4 B 0x3818B50
	0x03818BA8 MOV X0, X20
	0x03818BAC MOV X1, X21
	0x03818BB0 LDP X20, X19, [X31 + 0x120]
	0x03818BB4 LDP X22, X21, [X31 + 0x110]
	0x03818BB8 LDP X30, X23, [X31 + 0x100]
	0x03818BBC LDR X29, [X31 + 0xF0]
	0x03818BC0 ADD X31, X31, 0x130
	0x03818BC4 RET
	0x03818BC8 BL 0x1C16F20
	0x03818BCC SUB X31, X31, 0x40
	0x03818BD0 STP X30, X23, [X31 + 0x10]
	0x03818BD4 STP X22, X21, [X31 + 0x20]
	0x03818BD8 STP X20, X19, [X31 + 0x30]
	0x03818BDC ADRP X22, 0xBC9000
	0x03818BE0 LDRB W8, [X22 + 0x50C]
	0x03818BE4 MOV W20, W2
	0x03818BE8 MOV X19, X1
	0x03818BEC MOV X21, X0
	0x03818BF0 TBNZ X8, 0x0, 0x3818C20
	0x03818BF4 ADRP X0, 0x932000
	0x03818BF8 LDR X0, [X0 + 0xB00]
	0x03818BFC BL 0x1C16CF4
	0x03818C00 ADRP X0, 0x932000
	0x03818C04 LDR X0, [X0 + 0xB08]
	0x03818C08 BL 0x1C16CF4
	0x03818C0C ADRP X0, 0x903000
	0x03818C10 LDR X0, [X0 + 0xDC0]
	0x03818C14 BL 0x1C16CF4
	0x03818C18 MOVZ W8, 0x1
	0x03818C1C STRB W8, [X22 + 0x50C]
	0x03818C20 ADRP X23, 0x903000
	0x03818C24 LDR X23, [X23 + 0xDC0]

ISIL:
	001 Subtract X31, X31, 368
	002 Move [X31+256], D8
	003 Move [X31+272], X29
	004 Move [X31+280], X30
	005 Move [X31+288], X28
	006 Move [X31+296], X27
	007 Move [X31+304], X26
	008 Move [X31+312], X25
	009 Move [X31+320], X24
	010 Move [X31+328], X23
	011 Move [X31+336], X22
	012 Move [X31+344], X21
	013 Move [X31+352], X20
	014 Move [X31+360], X19
	015 Move X19, 0xBCA000
	016 Move W8, [X19+1266]
	017 Move X20, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {78}
	022 Move X0, 0x933000
	023 Move X0, [X0+2528]
	024 Call 0x1C17CF4
	025 Move X0, 0x933000
	026 Move X0, [X0+2536]
	027 Call 0x1C17CF4
	028 Move X0, 0x92F000
	029 Move X0, [X0+1632]
	030 Call 0x1C17CF4
	031 Move X0, 0x933000
	032 Move X0, [X0+2544]
	033 Call 0x1C17CF4
	034 Move X0, 0x92F000
	035 Move X0, [X0+888]
	036 Call 0x1C17CF4
	037 Move X0, 0x8DC000
	038 Move X0, [X0+3768]
	039 Call 0x1C17CF4
	040 Move X0, 0x933000
	041 Move X0, [X0+2552]
	042 Call 0x1C17CF4
	043 Move X0, 0x92F000
	044 Move X0, [X0+896]
	045 Call 0x1C17CF4
	046 Move X0, 0x92F000
	047 Move X0, [X0+1640]
	048 Call 0x1C17CF4
	049 Move X0, 0x933000
	050 Move X0, [X0+2560]
	051 Call 0x1C17CF4
	052 Move X0, 0x930000
	053 Move X0, [X0+3264]
	054 Call 0x1C17CF4
	055 Move X0, 0x92F000
	056 Move X0, [X0+912]
	057 Call 0x1C17CF4
	058 Move X0, 0x933000
	059 Move X0, [X0+2568]
	060 Call 0x1C17CF4
	061 Move X0, 0x933000
	062 Move X0, [X0+2576]
	063 Call 0x1C17CF4
	064 Move X0, 0x933000
	065 Move X0, [X0+2584]
	066 Call 0x1C17CF4
	067 Move X0, 0x933000
	068 Move X0, [X0+2592]
	069 Call 0x1C17CF4
	070 Move X0, 0x933000
	071 Move X0, [X0+2520]
	072 Call 0x1C17CF4
	073 Move X0, 0x8DE000
	074 Move X0, [X0+928]
	075 Call 0x1C17CF4
	076 Move W8, 1
	077 Move [X19+1266], W8
	078 Move [X31+264], W31
	079 Move [X31+240], X31
	080 Move [X31+248], X31
	081 Compare X20, 0
	082 JumpIfEqual {466}
	083 Move X8, 0x933000
	084 Move X8, [X8+2528]
	085 Move X21, [X20+24]
	086 Move X0, [X8]
	087 Move W1, W21
	088 Call 0x1C17D6C
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Move X19, X0
	091 Add X12, X19, 32
	092 Move [X31+24], X12
	093 Move X26, 0x933000
	094 Move X27, 0x8DE000
	095 Move X28, 0x8DC000
	096 Move X29, 0x930000
	097 Move X26, [X26+2520]
	098 Move X27, [X27+928]
	099 Move X28, [X28+3768]
	100 Move X29, [X29+3264]
	101 And X8, X21, 0
	102 Move W9, 208
	103 Move X10, X31
	104 Move X11, X31
	105 Multiply X8, X8, X9
	106 Move [X31+16], X8
	107 Move [X31+32], X20
	108 Move W8, [X20+24]
	109 Move [X31+48], X11
	110 NotImplemented "Instruction CMP not yet implemented."
	111 Add X8, X20, X10
	112 Move [X31+40], X10
	113 Move X10, [X8+64]
	114 Move X9, [X8+72]
	115 Move X22, [X8+32]
	116 Move X23, [X8+40]
	117 Move X24, [X8+48]
	118 Move X25, [X8+56]
	119 NotImplemented "Instruction LDUR not yet implemented."
	120 Move [X31+64], X9
	121 Move [X31+72], X10
	122 Move X10, [X8+104]
	123 Move X9, [X8+112]
	124 Move V8, [X8+168]
	125 Move [X31+5], V0
	126 Move [X31+136], X9
	127 Move [X31+144], X10
	128 Move X10, [X8+120]
	129 Move X9, [X8+128]
	130 Move [X31+152], X9
	131 Move [X31+160], X10
	132 Move X10, [X8+136]
	133 Move X9, [X8+144]
	134 Move [X31+104], X9
	135 Move [X31+112], X10
	136 Move X10, [X8+152]
	137 Move X9, [X8+160]
	138 Move [X31+120], X9
	139 Move [X31+128], X10
	140 Move W20, [X8+176]
	141 Move W9, [X8+180]
	142 Move X10, [X8+192]
	143 Move [X31+60], W9
	144 Move W9, [X8+184]
	145 Move [X31+172], W9
	146 Move W9, [X8+188]
	147 Move [X31+268], W9
	148 Move X9, [X8+200]
	149 Move [X31+176], X9
	150 Move [X31+184], X10
	151 Move X10, [X8+208]
	152 Move X9, [X8+216]
	153 Move [X31+192], X9
	154 Move [X31+200], X10
	155 Move X9, [X8+224]
	156 Move X8, [X8+232]
	157 Move [X31+208], X8
	158 Move [X31+216], X9
	159 Move X8, 0x933000
	160 Move X8, [X8+2536]
	161 Move X0, [X8]
	162 Call 0x1C17F10
	163 Move X1, X31
	164 Move X21, X0
	165 Call Object..ctor, X0
	166 NotImplemented "Instruction MOVI not yet implemented."
	167 Move X0, X22
	168 Move X1, X23
	169 Move X2, X31
	170 Move [X21+64], D0
	171 Call InternedString.op_Implicit, X0
	172 Move [X21+16], X0
	173 Move X0, X24
	174 Move X1, X25
	175 Move X2, X31
	176 Call InternedString.op_Implicit, X0
	177 Move [X21+24], X0
	178 Move X1, [X31+64]
	179 Move X0, [X31+72]
	180 Move X2, X31
	181 Call InternedString.op_Implicit, X0
	182 Move V0, [X31+5]
	183 Move W8, [X31+60]
	184 Move [X21+32], X0
	185 Add X0, X31, 264
	186 Move X1, X31
	187 Move [X21+8], V0
	188 Move [X21+64], D8
	189 Move [X21+72], W20
	190 Move [X31+264], W8
	191 Call FourCC.ToString, X0
	192 Move [X21+80], X0
	193 Move X8, 0x92F000
	194 Move X8, [X8+912]
	195 Move X10, [X31+112]
	196 Add X1, X31, 224
	197 Move X0, [X8]
	198 Move X8, [X31+104]
	199 Move [X31+224], X10
	200 Move [X31+232], X8
	201 Call 0x1C17E04
	202 Move X8, [X26]
	203 Move X22, X0
	204 Move W9, [X8+224]
	205 Compare W9, 0
	206 JumpIfNotEqual {210}
	207 Move X0, X8
	208 Call 0x1C17DFC
	209 Move X8, [X26]
	210 Move X9, [X8+184]
	211 Move X23, [X27]
	212 Move X24, [X9+24]
	213 Compare X24, 0
	214 JumpIfNotEqual {237}
	215 Move W9, [X8+224]
	216 Compare W9, 0
	217 JumpIfNotEqual {221}
	218 Move X0, X8
	219 Call 0x1C17DFC
	220 Move X8, [X26]
	221 Move X8, [X8+184]
	222 Move X25, [X8]
	223 Move X8, 0x92F000
	224 Move X8, [X8+896]
	225 Move X0, [X8]
	226 Call 0x1C17F10
	227 Move X8, 0x933000
	228 Move X8, [X8+2568]
	229 Move X1, X25
	230 Move X3, X31
	231 Move X24, X0
	232 Move X2, [X8]
	233 Call Func`2<NamedValue, Object>..ctor, X0, X1, X2
	234 Move X8, [X26]
	235 Move X8, [X8+184]
	236 Move [X8+24], X24
	237 Move X8, 0x92F000
	238 Move X8, [X8+888]
	239 Move X0, X22
	240 Move X1, X24
	241 Move X2, [X8]
	242 Call Enumerable.Select, X0, X1
	243 Move X1, [X28]
	244 Call Enumerable.ToArray, X0
	245 Move X1, X0
	246 Move X0, X23
	247 Move X2, X31
	248 Call String.Join, X0, X1
	249 Move [X21+112], X0
	250 Move X8, 0x933000
	251 Move X8, [X8+2560]
	252 Move X9, [X31+128]
	253 Add X1, X31, 224
	254 Move X0, [X8]
	255 Move X8, [X31+120]
	256 Move [X31+224], X9
	257 Move [X31+232], X8
	258 Call 0x1C17E04
	259 Move X8, [X26]
	260 Move X22, X0
	261 Move W9, [X8+224]
	262 Compare W9, 0
	263 JumpIfNotEqual {267}
	264 Move X0, X8
	265 Call 0x1C17DFC
	266 Move X8, [X26]
	267 Move X9, [X8+184]
	268 Move X23, [X27]
	269 Move X24, [X9+32]
	270 Compare X24, 0
	271 JumpIfNotEqual {294}
	272 Move W9, [X8+224]
	273 Compare W9, 0
	274 JumpIfNotEqual {278}
	275 Move X0, X8
	276 Call 0x1C17DFC
	277 Move X8, [X26]
	278 Move X8, [X8+184]
	279 Move X25, [X8]
	280 Move X8, 0x933000
	281 Move X8, [X8+2552]
	282 Move X0, [X8]
	283 Call 0x1C17F10
	284 Move X8, 0x933000
	285 Move X8, [X8+2576]
	286 Move X1, X25
	287 Move X3, X31
	288 Move X24, X0
	289 Move X2, [X8]
	290 Call Func`2<NameAndParameters, Object>..ctor, X0, X1, X2
	291 Move X8, [X26]
	292 Move X8, [X8+184]
	293 Move [X8+32], X24
	294 Move X8, 0x933000
	295 Move X8, [X8+2544]
	296 Move X0, X22
	297 Move X1, X24
	298 Move X2, [X8]
	299 Call Enumerable.Select, X0, X1
	300 Move X1, [X28]
	301 Call Enumerable.ToArray, X0
	302 Move X1, X0
	303 Move X0, X23
	304 Move X2, X31
	305 Call String.Join, X0, X1
	306 Move [X21+120], X0
	307 Move X0, [X29]
	308 Move X9, [X31+144]
	309 Move X8, [X31+136]
	310 Add X1, X31, 224
	311 Move [X31+224], X9
	312 Move [X31+232], X8
	313 Call 0x1C17E04
	314 Move X8, [X26]
	315 Move X22, X0
	316 Move W9, [X8+224]
	317 Compare W9, 0
	318 JumpIfNotEqual {322}
	319 Move X0, X8
	320 Call 0x1C17DFC
	321 Move X8, [X26]
	322 Move X9, [X8+184]
	323 Move X23, [X9+40]
	324 Compare X23, 0
	325 JumpIfNotEqual {348}
	326 Move W9, [X8+224]
	327 Compare W9, 0
	328 JumpIfNotEqual {332}
	329 Move X0, X8
	330 Call 0x1C17DFC
	331 Move X8, [X26]
	332 Move X8, [X8+184]
	333 Move X24, [X8]
	334 Move X8, 0x92F000
	335 Move X8, [X8+1640]
	336 Move X0, [X8]
	337 Call 0x1C17F10
	338 Move X8, 0x933000
	339 Move X8, [X8+2584]
	340 Move X1, X24
	341 Move X3, X31
	342 Move X23, X0
	343 Move X2, [X8]
	344 Call Func`2<InternedString, Object>..ctor, X0, X1, X2
	345 Move X8, [X26]
	346 Move X8, [X8+184]
	347 Move [X8+40], X23
	348 Move X8, 0x92F000
	349 Move X8, [X8+1632]
	350 Move X0, X22
	351 Move X1, X23
	352 Move X2, [X8]
	353 Call Enumerable.Select, X0, X1
	354 Move X1, [X28]
	355 Call Enumerable.ToArray, X0
	356 Move [X21+96], X0
	357 Move X0, [X29]
	358 Move X9, [X31+160]
	359 Move X8, [X31+152]
	360 Add X1, X31, 224
	361 Move [X31+224], X9
	362 Move [X31+232], X8
	363 Call 0x1C17E04
	364 Move X8, [X26]
	365 Move X22, X0
	366 Move W9, [X8+224]
	367 Compare W9, 0
	368 JumpIfNotEqual {372}
	369 Move X0, X8
	370 Call 0x1C17DFC
	371 Move X8, [X26]
	372 Move X9, [X8+184]
	373 Move X23, [X9+48]
	374 Compare X23, 0
	375 JumpIfNotEqual {398}
	376 Move W9, [X8+224]
	377 Compare W9, 0
	378 JumpIfNotEqual {382}
	379 Move X0, X8
	380 Call 0x1C17DFC
	381 Move X8, [X26]
	382 Move X8, [X8+184]
	383 Move X24, [X8]
	384 Move X8, 0x92F000
	385 Move X8, [X8+1640]
	386 Move X0, [X8]
	387 Call 0x1C17F10
	388 Move X8, 0x933000
	389 Move X8, [X8+2592]
	390 Move X1, X24
	391 Move X3, X31
	392 Move X23, X0
	393 Move X2, [X8]
	394 Call Func`2<InternedString, Object>..ctor, X0, X1, X2
	395 Move X8, [X26]
	396 Move X8, [X8+184]
	397 Move [X8+48], X23
	398 Move X8, 0x92F000
	399 Move X8, [X8+1632]
	400 Move X0, X22
	401 Move X1, X23
	402 Move X2, [X8]
	403 Call Enumerable.Select, X0, X1
	404 Move X1, [X28]
	405 Call Enumerable.ToArray, X0
	406 Move W8, [X31+172]
	407 Move W9, [X31+268]
	408 Move [X21+104], X0
	409 Add X0, X31, 240
	410 And W8, W8, 255
	411 Move [X21+88], W9
	412 Move W9, W8
	413 ShiftRight W9, 1
	414 And W9, W9, 1
	415 Move W10, W8
	416 ShiftRight W10, 4
	417 And W10, W10, 15
	418 Move W8, W8
	419 ShiftRight W8, 2
	420 And W8, W8, 3
	421 Move [X21+144], W9
	422 Move [X21+146], W8
	423 Move X9, [X31+184]
	424 Move X8, [X31+176]
	425 Move X1, X31
	426 Move [X21+145], W10
	427 Move [X31+240], X9
	428 Move [X31+248], X8
	429 Call PrimitiveValue.ToString, X0
	430 Move X9, [X31+200]
	431 Move X8, [X31+192]
	432 Move [X21+152], X0
	433 Add X0, X31, 240
	434 Move X1, X31
	435 Move [X31+240], X9
	436 Move [X31+248], X8
	437 Call PrimitiveValue.ToString, X0
	438 Move X9, [X31+216]
	439 Move X8, [X31+208]
	440 Move [X21+160], X0
	441 Add X0, X31, 240
	442 Move X1, X31
	443 Move [X31+240], X9
	444 Move [X31+248], X8
	445 Call PrimitiveValue.ToString, X0
	446 Move [X21+168], X0
	447 Compare X19, 0
	448 JumpIfEqual {484}
	449 Move X8, [X19]
	450 Move X0, X21
	451 Move X1, [X8+64]
	452 Call 0x1C17E00
	453 Move X20, [X31+32]
	454 Compare X0, 0
	455 JumpIfEqual {485}
	456 Move W8, [X19+24]
	457 Move X11, [X31+48]
	458 NotImplemented "Instruction CMP not yet implemented."
	459 Move X8, [X31+24]
	460 Move X10, [X31+40]
	461 Move [X8], X21
	462 Move X8, [X31+16]
	463 Add X10, X10, 208
	464 Add X11, X11, 1
	465 NotImplemented "Instruction CMP not yet implemented."
	466 Move X19, X31
	467 Move X0, X19
	468 Move X20, [X31+352]
	469 Move X19, [X31+360]
	470 Move X22, [X31+336]
	471 Move X21, [X31+344]
	472 Move X24, [X31+320]
	473 Move X23, [X31+328]
	474 Move X26, [X31+304]
	475 Move X25, [X31+312]
	476 Move X28, [X31+288]
	477 Move X27, [X31+296]
	478 Move X29, [X31+272]
	479 Move X30, [X31+280]
	480 Move V8, [X31+256]
	481 Add X31, X31, 368
	482 Return X0
	483 Call 0x1C17F28
	484 Call 0x1C17F20
	485 Call 0x1C17F44
	486 Move X1, X31
	487 Call 0x1C17DEC

