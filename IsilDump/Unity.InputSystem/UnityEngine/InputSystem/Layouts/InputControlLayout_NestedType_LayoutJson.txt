Type: UnityEngine.InputSystem.Layouts.InputControlLayout/LayoutJson

Method: UnityEngine.InputSystem.Layouts.InputControlLayout ToLayout()

Disassembly:
	0x038130C8 BL 0x3EB1B10
	0x038130CC CBZ X21, 0x38132C0
	0x038130D0 LDR X8, [X21 + 0x18]
	0x038130D4 CBZ X8, 0x38131D4
	0x038130D8 CMP W8, 0x1
	0x038130DC B.LT 0x38132A0
	0x038130E0 ADRP X25, 0x908000
	0x038130E4 ADRP X27, 0x937000
	0x038130E8 LDR X25, [X25 + 0xDC0]
	0x038130EC LDR X27, [X27 + 0x7E8]
	0x038130F0 MOV X23, X31
	0x038130F4 ADD X24, X21, 0x20
	0x038130F8 MOVZ W26, 0xD0
	0x038130FC CMP X23, W8, UXTW
	0x03813100 B.CS 0x38132C4
	0x03813104 LDR X0, [X25]
	0x03813108 LDR X22, [X24, X23, LSL #3]
	0x0381310C LDR W8, [X0 + 0xE0]
	0x03813110 CBNZ W8, 0x3813118
	0x03813114 BL 0x1C16DFC
	0x03813118 ADD X8, X31, 0xD0
	0x0381311C MOV X0, X20
	0x03813120 MOV X1, X22
	0x03813124 BL 0x38132C8
	0x03813128 ADD X0, X31, 0x0
	0x0381312C ADD X1, X31, 0xD0
	0x03813130 MOVZ W2, 0xD0
	0x03813134 BL 0x3EB1AC0
	0x03813138 CBZ X19, 0x38132C0
	0x0381313C LDR X22, [X27]
	0x03813140 ADD X0, X31, 0x270
	0x03813144 ADD X1, X31, 0x0
	0x03813148 MOVZ W2, 0xD0
	0x0381314C BL 0x3EB1AC0
	0x03813150 LDR W9, [X19 + 0x1C]
	0x03813154 LDR X8, [X19 + 0x10]
	0x03813158 ADD W9, W9, 0x1
	0x0381315C STR W9, [X19 + 0x1C]
	0x03813160 CBZ X8, 0x38132C0
	0x03813164 LDRSW X9, [X19 + 0x18]
	0x03813168 LDR W10, [X8 + 0x18]
	0x0381316C CMP W9, W10
	0x03813170 B.CS 0x3813194
	0x03813174 MADD X8, X9, X26, X8
	0x03813178 ADD W10, W9, 0x1
	0x0381317C ADD X0, X8, 0x20
	0x03813180 ADD X1, X31, 0x270
	0x03813184 MOVZ W2, 0xD0
	0x03813188 STR W10, [X19 + 0x18]
	0x0381318C BL 0x3EB1AC0
	0x03813190 B 0x38131C0
	0x03813194 LDR X8, [X22 + 0x20]
	0x03813198 ADD X0, X31, 0x340
	0x0381319C ADD X1, X31, 0x270
	0x038131A0 MOVZ W2, 0xD0
	0x038131A4 LDR X8, [X8 + 0xC0]
	0x038131A8 LDR X22, [X8 + 0x70]
	0x038131AC BL 0x3EB1AC0
	0x038131B0 ADD X1, X31, 0x340
	0x038131B4 MOV X0, X19
	0x038131B8 MOV X2, X22
	0x038131BC BL 0x3107CDC
	0x038131C0 LDR W8, [X21 + 0x18]
	0x038131C4 ADD X23, X23, 0x1
	0x038131C8 CMP X23, W8, SXTW
	0x038131CC B.LT 0x38130FC
	0x038131D0 B 0x38132A0
	0x038131D4 ADRP X8, 0x908000
	0x038131D8 LDR X8, [X8 + 0xDC0]
	0x038131DC LDR X0, [X8]
	0x038131E0 LDR W8, [X0 + 0xE0]
	0x038131E4 CBNZ W8, 0x38131EC
	0x038131E8 BL 0x1C16DFC
	0x038131EC ADD X8, X31, 0x1A0
	0x038131F0 MOV X0, X20
	0x038131F4 MOV X1, X31
	0x038131F8 BL 0x38132C8
	0x038131FC ADD X0, X31, 0x0
	0x03813200 ADD X1, X31, 0x1A0
	0x03813204 MOVZ W2, 0xD0
	0x03813208 BL 0x3EB1AC0
	0x0381320C CBZ X19, 0x38132C0
	0x03813210 ADRP X8, 0x937000
	0x03813214 LDR X8, [X8 + 0x7E8]
	0x03813218 ADD X0, X31, 0x270
	0x0381321C ADD X1, X31, 0x0
	0x03813220 MOVZ W2, 0xD0
	0x03813224 LDR X20, [X8]
	0x03813228 BL 0x3EB1AC0
	0x0381322C LDR W9, [X19 + 0x1C]
	0x03813230 LDR X8, [X19 + 0x10]
	0x03813234 ADD W9, W9, 0x1
	0x03813238 STR W9, [X19 + 0x1C]
	0x0381323C CBZ X8, 0x38132C0
	0x03813240 LDRSW X9, [X19 + 0x18]
	0x03813244 LDR W10, [X8 + 0x18]
	0x03813248 CMP W9, W10
	0x0381324C B.CS 0x3813274
	0x03813250 MOVZ W11, 0xD0
	0x03813254 MADD X8, X9, X11, X8
	0x03813258 ADD W10, W9, 0x1
	0x0381325C ADD X0, X8, 0x20
	0x03813260 ADD X1, X31, 0x270
	0x03813264 MOVZ W2, 0xD0
	0x03813268 STR W10, [X19 + 0x18]
	0x0381326C BL 0x3EB1AC0
	0x03813270 B 0x38132A0
	0x03813274 LDR X8, [X20 + 0x20]
	0x03813278 ADD X0, X31, 0x340
	0x0381327C ADD X1, X31, 0x270
	0x03813280 MOVZ W2, 0xD0
	0x03813284 LDR X8, [X8 + 0xC0]
	0x03813288 LDR X20, [X8 + 0x70]
	0x0381328C BL 0x3EB1AC0
	0x03813290 ADD X1, X31, 0x340
	0x03813294 MOV X0, X19
	0x03813298 MOV X2, X20
	0x0381329C BL 0x3107CDC
	0x038132A0 ADD X31, X31, 0x410
	0x038132A4 LDP X20, X19, [X31 + 0x50]
	0x038132A8 LDP X22, X21, [X31 + 0x40]
	0x038132AC LDP X24, X23, [X31 + 0x30]
	0x038132B0 LDP X26, X25, [X31 + 0x20]
	0x038132B4 LDP X30, X27, [X31 + 0x10]
	0x038132B8 LDR X29, [X31], #0x60
	0x038132BC RET
	0x038132C0 BL 0x1C16F20
	0x038132C4 BL 0x1C16F28
	0x038132C8 SUB X31, X31, 0x190
	0x038132CC STP X29, X30, [X31 + 0x130]
	0x038132D0 STP X28, X27, [X31 + 0x140]
	0x038132D4 STP X26, X25, [X31 + 0x150]
	0x038132D8 STP X24, X23, [X31 + 0x160]
	0x038132DC STP X22, X21, [X31 + 0x170]
	0x038132E0 STP X20, X19, [X31 + 0x180]
	0x038132E4 ADRP X21, 0xBCE000
	0x038132E8 LDRB W9, [X21 + 0x4DA]
	0x038132EC MOV X20, X1
	0x038132F0 MOV X26, X0
	0x038132F4 MOV X19, X8
	0x038132F8 TBNZ X9, 0x0, 0x38133C4
	0x038132FC ADRP X0, 0x937000
	0x03813300 LDR X0, [X0 + 0x878]
	0x03813304 BL 0x1C16CF4
	0x03813308 ADRP X0, 0x937000
	0x0381330C LDR X0, [X0 + 0x880]
	0x03813310 BL 0x1C16CF4
	0x03813314 ADRP X0, 0x937000
	0x03813318 LDR X0, [X0 + 0x888]
	0x0381331C BL 0x1C16CF4
	0x03813320 ADRP X0, 0x935000
	0x03813324 LDR X0, [X0 + 0x120]
	0x03813328 BL 0x1C16CF4
	0x0381332C ADRP X0, 0x937000
	0x03813330 LDR X0, [X0 + 0x890]
	0x03813334 BL 0x1C16CF4
	0x03813338 ADRP X0, 0x909000
	0x0381333C LDR X0, [X0 + 0x3A8]
	0x03813340 BL 0x1C16CF4
	0x03813344 ADRP X0, 0x937000
	0x03813348 LDR X0, [X0 + 0x768]
	0x0381334C BL 0x1C16CF4
	0x03813350 ADRP X0, 0x908000
	0x03813354 LDR X0, [X0 + 0xDC0]
	0x03813358 BL 0x1C16CF4
	0x0381335C ADRP X0, 0x908000
	0x03813360 LDR X0, [X0 + 0xD18]
	0x03813364 BL 0x1C16CF4
	0x03813368 ADRP X0, 0x908000
	0x0381336C LDR X0, [X0 + 0x850]
	0x03813370 BL 0x1C16CF4
	0x03813374 ADRP X0, 0x933000
	0x03813378 LDR X0, [X0 + 0x3D0]
	0x0381337C BL 0x1C16CF4
	0x03813380 ADRP X0, 0x937000
	0x03813384 LDR X0, [X0 + 0x708]
	0x03813388 BL 0x1C16CF4
	0x0381338C ADRP X0, 0x937000
	0x03813390 LDR X0, [X0 + 0x898]
	0x03813394 BL 0x1C16CF4
	0x03813398 ADRP X0, 0x937000
	0x0381339C LDR X0, [X0 + 0x8A0]
	0x038133A0 BL 0x1C16CF4
	0x038133A4 ADRP X0, 0x937000
	0x038133A8 LDR X0, [X0 + 0x8A8]
	0x038133AC BL 0x1C16CF4
	0x038133B0 ADRP X0, 0x937000
	0x038133B4 LDR X0, [X0 + 0x790]
	0x038133B8 BL 0x1C16CF4
	0x038133BC MOVZ W8, 0x1
	0x038133C0 STRB W8, [X21 + 0x4DA]
	0x038133C4 STR W31, [X31 + 0x128]
	0x038133C8 STR X31, [X31 + 0x120]
	0x038133CC CBZ X20, 0x38133D8
	0x038133D0 LDR X27, [X20 + 0x28]
	0x038133D4 B 0x38133DC
	0x038133D8 MOV X27, X31
	0x038133DC MOV X0, X27
	0x038133E0 MOV X1, X31
	0x038133E4 BL 0x32277A8
	0x038133E8 TBZ X0, 0x0, 0x3813404
	0x038133EC CBZ X26, 0x3813ABC
	0x038133F0 LDR X8, [X26]
	0x038133F4 MOV X0, X26
	0x038133F8 LDP X9, X1, [X8 + 0x1A8]
	0x038133FC BLR X9
	0x03813400 MOV X27, X0
	0x03813404 CBZ X27, 0x3813ABC
	0x03813408 MOVZ W1, 0x2F
	0x0381340C MOV X0, X27
	0x03813410 MOV X2, X31
	0x03813414 BL 0x322BD98
	0x03813418 MOV W28, W0
	0x0381341C CBZ X20, 0x381342C
	0x03813420 LDR V0, [X20 + 0x8]
	0x03813424 LDR X29, [X20 + 0x18]
	0x03813428 B 0x3813434
	0x0381342C MOVI V0.2D, 0x0
	0x03813430 MOV X29, X31
	0x03813434 STR V0, [X31 + 0xA]
	0x03813438 ADRP X21, 0x909000
	0x0381343C LDR X21, [X21 + 0x3A8]
	0x03813440 MOV X0, X29
	0x03813444 MOV X1, X31
	0x03813448 BL 0x32277A8
	0x0381344C ADDS W31, W28, 0x1
	0x03813450 B.NE 0x38134C0
	0x03813454 TBZ X0, 0x0, 0x38134C0
	0x03813458 CBZ X26, 0x3813488
	0x0381345C LDR X9, [X26]
	0x03813460 LDR X8, [X21]
	0x03813464 LDRB W11, [X9 + 0x130]
	0x03813468 LDRB W10, [X8 + 0x130]
	0x0381346C CMP W11, W10
	0x03813470 B.CC 0x3813488
	0x03813474 LDR X9, [X9 + 0xC8]
	0x03813478 ADD X9, X9, X10, 0x3, LSL
	0x0381347C LDUR X9, [X9 - 0x8]
	0x03813480 CMP X9, X8
	0x03813484 B.EQ 0x3813A9C
	0x03813488 MOV X0, X26
	0x0381348C MOV X1, X31
	0x03813490 BL 0x3768D64
	0x03813494 ADRP X8, 0x908000
	0x03813498 LDR X8, [X8 + 0xDC0]
	0x0381349C MOV X22, X0
	0x038134A0 LDR X8, [X8]
	0x038134A4 LDR W9, [X8 + 0xE0]
	0x038134A8 CBNZ W9, 0x38134B4
	0x038134AC MOV X0, X8
	0x038134B0 BL 0x1C16DFC
	0x038134B4 MOV X0, X22
	0x038134B8 BL 0x3813AC0
	0x038134BC MOV X29, X0
	0x038134C0 ADRP X24, 0x937000
	0x038134C4 LDR X24, [X24 + 0x898]
	0x038134C8 CBZ X20, 0x38134F8
	0x038134CC LDR X0, [X20 + 0x20]
	0x038134D0 MOV X1, X31
	0x038134D4 BL 0x32277A8
	0x038134D8 MOV X23, X31
	0x038134DC TBNZ X0, 0x0, 0x38134E4
	0x038134E0 LDR X23, [X20 + 0x20]
	0x038134E4 LDR W0, [X20 + 0x74]
	0x038134E8 ADDS W31, W0, 0x1
	0x038134EC B.NE 0x3813520
	0x038134F0 CBNZ X26, 0x3813500
	0x038134F4 B 0x3813518
	0x038134F8 MOV X23, X31
	0x038134FC CBZ X26, 0x3813518
	0x03813500 LDR X8, [X26]
	0x03813504 LDR X9, [X21]
	0x03813508 LDRB W11, [X8 + 0x130]
	0x0381350C LDRB W10, [X9 + 0x130]
	0x03813510 CMP W11, W10
	0x03813514 B.CS 0x3813A10
	0x03813518 MOVN W0, 0x0
	0x0381351C CBZ X20, 0x3813558
	0x03813520 LDR W22, [X20 + 0x70]
	0x03813524 LDR W21, [X20 + 0x78]
	0x03813528 STR W31, [X31 + 0x128]
	0x0381352C STR W0, [X31 + 0x9C]
	0x03813530 LDR X0, [X20 + 0x30]
	0x03813534 MOV X1, X31
	0x03813538 BL 0x32277A8
	0x0381353C TBNZ X0, 0x0, 0x3813568
	0x03813540 LDR X1, [X20 + 0x30]
	0x03813544 ADD X0, X31, 0x128
	0x03813548 MOV X2, X31
	0x0381354C STP W22, W21, [X31 + 0x94]
	0x03813550 BL 0x375F3B0
	0x03813554 B 0x38135C4
	0x03813558 MOV W21, W31
	0x0381355C MOVN W22, 0x0
	0x03813560 STR W0, [X31 + 0x9C]
	0x03813564 STR W31, [X31 + 0x128]
	0x03813568 ADDS W31, W22, 0x1
	0x0381356C B.NE 0x38135BC
	0x03813570 ADDS W31, W28, 0x1
	0x03813574 B.NE 0x38135BC
	0x03813578 MOV X0, X26
	0x0381357C MOV X1, X31
	0x03813580 MOV W25, W22
	0x03813584 BL 0x3768D64
	0x03813588 ADRP X8, 0x908000
	0x0381358C LDR X8, [X8 + 0xD18]
	0x03813590 MOV X22, X0
	0x03813594 LDR X8, [X8]
	0x03813598 LDR W9, [X8 + 0xE0]
	0x0381359C CBNZ W9, 0x38135A8
	0x038135A0 MOV X0, X8
	0x038135A4 BL 0x1C16DFC
	0x038135A8 MOV X0, X22
	0x038135AC MOV X1, X31
	0x038135B0 BL 0x38097FC
	0x038135B4 MOV W22, W25
	0x038135B8 STR W0, [X31 + 0x128]
	0x038135BC STP W22, W21, [X31 + 0x94]
	0x038135C0 CBZ X20, 0x3813858
	0x038135C4 ADRP X21, 0x937000
	0x038135C8 LDR X21, [X21 + 0x878]
	0x038135CC LDP X0, X1, [X20 + 0x58]
	0x038135D0 LDR X2, [X21]
	0x038135D4 BL 0x217AAD8
	0x038135D8 MOV X26, X23
	0x038135DC CBZ X0, 0x3813690
	0x038135E0 ADRP X25, 0x937000
	0x038135E4 LDR X25, [X25 + 0x790]
	0x038135E8 MOV X22, X0
	0x038135EC LDR X0, [X25]
	0x038135F0 LDR W8, [X0 + 0xE0]
	0x038135F4 CBNZ W8, 0x3813600
	0x038135F8 BL 0x1C16DFC
	0x038135FC LDR X0, [X25]
	0x03813600 LDR X8, [X0 + 0xB8]
	0x03813604 LDR X23, [X8 + 0x10]
	0x03813608 CBNZ X23, 0x381365C
	0x0381360C LDR W8, [X0 + 0xE0]
	0x03813610 CBNZ W8, 0x381361C
	0x03813614 BL 0x1C16DFC
	0x03813618 LDR X0, [X25]
	0x0381361C ADRP X9, 0x937000
	0x03813620 LDR X8, [X0 + 0xB8]
	0x03813624 LDR X9, [X9 + 0x768]
	0x03813628 LDR X24, [X8]
	0x0381362C LDR X0, [X9]
	0x03813630 BL 0x1C16F10
	0x03813634 ADRP X8, 0x937000
	0x03813638 LDR X8, [X8 + 0x8A0]
	0x0381363C MOV X1, X24
	0x03813640 MOV X3, X31
	0x03813644 MOV X23, X0
	0x03813648 LDR X2, [X8]
	0x0381364C BL 0x2D30464
	0x03813650 LDR X8, [X25]
	0x03813654 LDR X8, [X8 + 0xB8]
	0x03813658 STR X23, [X8 + 0x10]
	0x0381365C ADRP X8, 0x937000
	0x03813660 LDR X8, [X8 + 0x888]
	0x03813664 MOV X0, X22
	0x03813668 MOV X1, X23
	0x0381366C LDR X2, [X8]
	0x03813670 BL 0x21CEF30
	0x03813674 ADRP X8, 0x935000
	0x03813678 LDR X8, [X8 + 0x120]
	0x0381367C LDR X1, [X8]
	0x03813680 BL 0x21D55E4
	0x03813684 MOV X23, X26
	0x03813688 STR X0, [X31 + 0x88]
	0x0381368C B 0x3813694
	0x03813690 STR X31, [X31 + 0x88]
	0x03813694 LDP X0, X1, [X20 + 0x38]
	0x03813698 LDR X2, [X21]
	0x0381369C BL 0x217AAD8
	0x038136A0 STR X27, [X31 + 0x28]
	0x038136A4 CBZ X0, 0x3813758
	0x038136A8 ADRP X21, 0x937000
	0x038136AC LDR X21, [X21 + 0x790]
	0x038136B0 MOV X22, X0
	0x038136B4 LDR X0, [X21]
	0x038136B8 LDR W8, [X0 + 0xE0]
	0x038136BC CBNZ W8, 0x38136C8
	0x038136C0 BL 0x1C16DFC
	0x038136C4 LDR X0, [X21]
	0x038136C8 LDR X8, [X0 + 0xB8]
	0x038136CC LDR X23, [X8 + 0x18]
	0x038136D0 CBNZ X23, 0x3813724
	0x038136D4 LDR W8, [X0 + 0xE0]
	0x038136D8 CBNZ W8, 0x38136E4
	0x038136DC BL 0x1C16DFC
	0x038136E0 LDR X0, [X21]
	0x038136E4 ADRP X9, 0x937000
	0x038136E8 LDR X8, [X0 + 0xB8]
	0x038136EC LDR X9, [X9 + 0x768]
	0x038136F0 LDR X24, [X8]
	0x038136F4 LDR X0, [X9]
	0x038136F8 BL 0x1C16F10
	0x038136FC ADRP X8, 0x937000
	0x03813700 LDR X8, [X8 + 0x8A8]
	0x03813704 MOV X1, X24
	0x03813708 MOV X3, X31
	0x0381370C MOV X23, X0
	0x03813710 LDR X2, [X8]
	0x03813714 BL 0x2D30464
	0x03813718 LDR X8, [X21]
	0x0381371C LDR X8, [X8 + 0xB8]
	0x03813720 STR X23, [X8 + 0x18]
	0x03813724 ADRP X8, 0x937000
	0x03813728 LDR X8, [X8 + 0x888]
	0x0381372C MOV X0, X22
	0x03813730 MOV X1, X23
	0x03813734 LDR X2, [X8]
	0x03813738 BL 0x21CEF30
	0x0381373C ADRP X8, 0x935000
	0x03813740 LDR X8, [X8 + 0x120]
	0x03813744 LDR X1, [X8]
	0x03813748 BL 0x21D55E4
	0x0381374C MOV X21, X0
	0x03813750 MOV X23, X26
	0x03813754 B 0x381375C
	0x03813758 MOV X21, X31
	0x0381375C LDR X0, [X20 + 0x48]
	0x03813760 MOV X1, X31
	0x03813764 MOV W27, W28
	0x03813768 BL 0x32277A8
	0x0381376C MOV X26, X31
	0x03813770 TBNZ X0, 0x0, 0x3813784
	0x03813774 LDR X0, [X20 + 0x48]
	0x03813778 MOV X1, X31
	0x0381377C BL 0x3763948
	0x03813780 MOV X26, X0
	0x03813784 LDR X0, [X20 + 0x50]
	0x03813788 MOV X1, X31
	0x0381378C MOV X28, X29
	0x03813790 BL 0x32277A8
	0x03813794 MOV X29, X31
	0x03813798 TBNZ X0, 0x0, 0x38137BC
	0x0381379C LDR X0, [X20 + 0x50]
	0x038137A0 MOV X1, X31
	0x038137A4 BL 0x3763238
	0x038137A8 ADRP X8, 0x937000
	0x038137AC LDR X8, [X8 + 0x890]
	0x038137B0 LDR X1, [X8]
	0x038137B4 BL 0x21D566C
	0x038137B8 MOV X29, X0
	0x038137BC LDR X0, [X20 + 0x68]
	0x038137C0 MOV X1, X31
	0x038137C4 MOV X24, X21
	0x038137C8 BL 0x32277A8
	0x038137CC MOV X8, X31
	0x038137D0 TBNZ X0, 0x0, 0x38137D8
	0x038137D4 LDR X8, [X20 + 0x68]
	0x038137D8 STR X8, [X31 + 0x78]
	0x038137DC LDR W8, [X20 + 0x7C]
	0x038137E0 LDR X0, [X20 + 0x98]
	0x038137E4 LDRB W21, [X20 + 0x90]
	0x038137E8 LDRB W22, [X20 + 0x92]
	0x038137EC LDRB W25, [X20 + 0x91]
	0x038137F0 MOV X1, X31
	0x038137F4 STR W8, [X31 + 0x84]
	0x038137F8 BL 0x3765FE0
	0x038137FC STP X1, X0, [X31 + 0x68]
	0x03813800 LDR X0, [X20 + 0xA0]
	0x03813804 MOV X1, X31
	0x03813808 BL 0x3765FE0
	0x0381380C STP X1, X0, [X31 + 0x58]
	0x03813810 LDR X0, [X20 + 0xA8]
	0x03813814 MOV X1, X31
	0x03813818 BL 0x3765FE0
	0x0381381C UBFM W8, W21, 0x1F, 0x1E
	0x03813820 STR W8, [X31 + 0x4C]
	0x03813824 UBFM W9, W22, 0x1C, 0x1B
	0x03813828 UBFM W8, W25, 0x1E, 0x1D
	0x0381382C STR X0, [X31 + 0x50]
	0x03813830 STR X1, [X31 + 0x40]
	0x03813834 STP W9, W8, [X31 + 0x38]
	0x03813838 ADRP X20, 0x937000
	0x0381383C LDR X20, [X20 + 0x898]
	0x03813840 MOV X22, X29
	0x03813844 MOV X29, X28
	0x03813848 MOV W28, W27
	0x0381384C LDR X27, [X31 + 0x28]
	0x03813850 MOV X21, X24
	0x03813854 B 0x3813884
	0x03813858 STR W31, [X31 + 0x84]
	0x0381385C STP X31, X31, [X31 + 0x38]
	0x03813860 STP X31, X31, [X31 + 0x70]
	0x03813864 MOV X26, X31
	0x03813868 STR X31, [X31 + 0x88]
	0x0381386C MOV X21, X31
	0x03813870 MOV X22, X31
	0x03813874 STR W31, [X31 + 0x4C]
	0x03813878 STP X31, X31, [X31 + 0x60]
	0x0381387C STP X31, X31, [X31 + 0x50]
	0x03813880 MOV X20, X24
	0x03813884 ADDS W31, W28, 0x1
	0x03813888 CSET W8, NE
	0x0381388C ADD X0, X31, 0x110
	0x03813890 MOV X1, X27
	0x03813894 MOV X2, X31
	0x03813898 STR W8, [X31 + 0x34]
	0x0381389C STP X31, X31, [X31 + 0x110]
	0x038138A0 BL 0x3757420
	0x038138A4 LDR X9, [X31 + 0x110]
	0x038138A8 LDR X8, [X31 + 0x118]
	0x038138AC ADD X0, X31, 0x100
	0x038138B0 MOV X1, X29
	0x038138B4 MOV X2, X31
	0x038138B8 STP X8, X9, [X31 + 0x20]
	0x038138BC STP X31, X31, [X31 + 0x100]
	0x038138C0 BL 0x3757420
	0x038138C4 LDP X27, X8, [X31 + 0x100]
	0x038138C8 ADD X0, X31, 0xF0
	0x038138CC MOV X1, X23
	0x038138D0 MOV X2, X31
	0x038138D4 STR X8, [X31 + 0x10]
	0x038138D8 STP X31, X31, [X31 + 0xF0]
	0x038138DC BL 0x3757420
	0x038138E0 LDR W8, [X31 + 0x128]
	0x038138E4 LDP X28, X29, [X31 + 0xF0]
	0x038138E8 ADD X0, X31, 0xE0
	0x038138EC MOV X1, X26
	0x038138F0 STR W8, [X31 + 0x1C]
	0x038138F4 ADRP X8, 0x933000
	0x038138F8 LDR X8, [X8 + 0x3D0]
	0x038138FC STP X31, X31, [X31 + 0xE0]
	0x03813900 LDR X2, [X8]
	0x03813904 BL 0x24FD3F4
	0x03813908 LDR X2, [X20]
	0x0381390C LDP X24, X23, [X31 + 0xE0]
	0x03813910 ADD X0, X31, 0xD0
	0x03813914 MOV X1, X22
	0x03813918 STP X31, X31, [X31 + 0xD0]
	0x0381391C BL 0x24FCFDC
	0x03813920 ADRP X26, 0x937000
	0x03813924 LDP X25, X20, [X31 + 0xD0]
	0x03813928 LDR X26, [X26 + 0x708]
	0x0381392C ADD X0, X31, 0xC0
	0x03813930 MOV X1, X21
	0x03813934 STP X31, X31, [X31 + 0xC0]
	0x03813938 LDR X2, [X26]
	0x0381393C BL 0x24FCBE8
	0x03813940 LDR X2, [X26]
	0x03813944 LDR X1, [X31 + 0x88]
	0x03813948 LDP X21, X22, [X31 + 0xC0]
	0x0381394C ADD X0, X31, 0xB0
	0x03813950 STP X31, X31, [X31 + 0xB0]
	0x03813954 BL 0x24FCBE8
	0x03813958 LDP W9, W8, [X31 + 0x34]
	0x0381395C LDR X10, [X31 + 0x28]
	0x03813960 LDP V1, V0, [X31 + 0xA0]
	0x03813964 STP X28, X29, [X19 + 0x20]
	0x03813968 ORR W8, W8, W9, 0x0
	0x0381396C LDR X9, [X31 + 0x20]
	0x03813970 STUR V1, [X19 + 0x38]
	0x03813974 STP X21, X22, [X19 + 0x48]
	0x03813978 STP X24, X23, [X19 + 0x68]
	0x0381397C STP X10, X9, [X19]
	0x03813980 LDR X9, [X31 + 0x10]
	0x03813984 LDR W10, [X31 + 0x9C]
	0x03813988 STP X25, X20, [X19 + 0x78]
	0x0381398C STUR V0, [X19 + 0x58]
	0x03813990 STP X27, X9, [X19 + 0x10]
	0x03813994 LDR X9, [X31 + 0x78]
	0x03813998 LDP X22, X21, [X31 + 0x170]
	0x0381399C LDP X24, X23, [X31 + 0x160]
	0x038139A0 LDP X26, X25, [X31 + 0x150]
	0x038139A4 STR X9, [X19 + 0x30]
	0x038139A8 LDR W9, [X31 + 0x94]
	0x038139AC LDP X28, X27, [X31 + 0x140]
	0x038139B0 LDP X29, X30, [X31 + 0x130]
	0x038139B4 STP W10, W9, [X19 + 0x88]
	0x038139B8 LDR W10, [X31 + 0x98]
	0x038139BC LDR W9, [X31 + 0x1C]
	0x038139C0 STP W10, W9, [X19 + 0x90]
	0x038139C4 LDR X10, [X31 + 0x70]
	0x038139C8 LDR X9, [X31 + 0x68]
	0x038139CC STP X10, X9, [X19 + 0xA0]
	0x038139D0 LDR X10, [X31 + 0x60]
	0x038139D4 LDR X9, [X31 + 0x58]
	0x038139D8 STP X10, X9, [X19 + 0xB0]
	0x038139DC LDR W9, [X31 + 0x4C]
	0x038139E0 ORR W8, W8, W9, 0x0
	0x038139E4 LDR W9, [X31 + 0x3C]
	0x038139E8 ORR W8, W8, W9, 0x0
	0x038139EC ORR W9, W8, 0x8
	0x038139F0 LDR W8, [X31 + 0x84]
	0x038139F4 STP W9, W8, [X19 + 0x98]
	0x038139F8 LDR X9, [X31 + 0x50]
	0x038139FC LDR X8, [X31 + 0x40]
	0x03813A00 STP X9, X8, [X19 + 0xC0]
	0x03813A04 LDP X20, X19, [X31 + 0x180]
	0x03813A08 ADD X31, X31, 0x190
	0x03813A0C RET
	0x03813A10 ADDS W31, W28, 0x1

ISIL:
	001 Move [X31-96], X29
	002 Move [X31+16], X30
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Subtract X31, X31, 832
	013 Move X20, 0xBCF000
	014 Move W8, [X20+1262]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {97}
	020 Move X0, 0x938000
	021 Move X0, [X0+1888]
	022 Call 0x1C17CF4
	023 Move X0, 0x8E1000
	024 Move X0, [X0+2600]
	025 Call 0x1C17CF4
	026 Move X0, 0x938000
	027 Move X0, [X0+1896]
	028 Call 0x1C17CF4
	029 Move X0, 0x938000
	030 Move X0, [X0+2008]
	031 Call 0x1C17CF4
	032 Move X0, 0x909000
	033 Move X0, [X0+3520]
	034 Call 0x1C17CF4
	035 Move X0, 0x933000
	036 Move X0, [X0+1696]
	037 Call 0x1C17CF4
	038 Move X0, 0x936000
	039 Move X0, [X0+232]
	040 Call 0x1C17CF4
	041 Move X0, 0x938000
	042 Move X0, [X0+2016]
	043 Call 0x1C17CF4
	044 Move X0, 0x938000
	045 Move X0, [X0+2024]
	046 Call 0x1C17CF4
	047 Move X0, 0x938000
	048 Move X0, [X0+1920]
	049 Call 0x1C17CF4
	050 Move X0, 0x938000
	051 Move X0, [X0+1872]
	052 Call 0x1C17CF4
	053 Move X0, 0x938000
	054 Move X0, [X0+1864]
	055 Call 0x1C17CF4
	056 Move X0, 0x8E5000
	057 Move X0, [X0+4056]
	058 Call 0x1C17CF4
	059 Move X0, 0x8E1000
	060 Move X0, [X0+2760]
	061 Call 0x1C17CF4
	062 Move X0, 0x8E9000
	063 Move X0, [X0+1480]
	064 Call 0x1C17CF4
	065 Move X0, 0x8E1000
	066 Move X0, [X0+1728]
	067 Call 0x1C17CF4
	068 Move X0, 0x938000
	069 Move X0, [X0+2032]
	070 Call 0x1C17CF4
	071 Move X0, 0x938000
	072 Move X0, [X0+1984]
	073 Call 0x1C17CF4
	074 Move X0, 0x90B000
	075 Move X0, [X0+1360]
	076 Call 0x1C17CF4
	077 Move X0, 0x938000
	078 Move X0, [X0+2040]
	079 Call 0x1C17CF4
	080 Move X0, 0x938000
	081 Move X0, [X0+2048]
	082 Call 0x1C17CF4
	083 Move X0, 0x938000
	084 Move X0, [X0+2056]
	085 Call 0x1C17CF4
	086 Move X0, 0x938000
	087 Move X0, [X0+2064]
	088 Call 0x1C17CF4
	089 Move X0, 0x938000
	090 Move X0, [X0+2072]
	091 Call 0x1C17CF4
	092 Move X0, 0x938000
	093 Move X0, [X0+2080]
	094 Call 0x1C17CF4
	095 Move W8, 1
	096 Move [X20+1262], W8
	097 Add X0, X31, 208
	098 Move W2, 208
	099 Move W1, W31
	100 Call 0x3EB2B10
	101 Move X0, [X19+72]
	102 Move X1, X31
	103 Call String.IsNullOrEmpty, X0
	104 Move TEMP, X0
	105 And TEMP, TEMP, 1
	106 Compare TEMP, 1
	107 JumpIfNotEqual {119}
	108 Move X0, [X19+8]
	109 Move X1, X31
	110 Call String.IsNullOrEmpty, X0
	111 Move X21, X31
	112 Move TEMP, X0
	113 And TEMP, TEMP, 1
	114 Compare TEMP, 1
	115 JumpIfNotEqual {222}
	116 Move X8, 0x8E1000
	117 Move X8, [X8+1728]
	118 Move X0, [X8]
	119 Move X22, 0x8E1000
	120 Move X22, [X22+1728]
	121 Move X20, [X19+72]
	122 Move X0, [X22]
	123 Move W8, [X0+224]
	124 Compare W8, 0
	125 JumpIfNotEqual {127}
	126 Call 0x1C17DFC
	127 Move X8, 0x8E9000
	128 Move X9, 0x938000
	129 Move X8, [X8+1480]
	130 Move X9, [X9+2016]
	131 Move X0, X20
	132 Move W1, W31
	133 Move X2, [X8]
	134 Move X3, [X9]
	135 Call 0x1C180BC
	136 Move X1, X31
	137 Move X2, X31
	138 Move X21, X0
	139 Call Type.op_Equality, X0, X1
	140 Move TEMP, X0
	141 And TEMP, TEMP, 1
	142 Compare TEMP, 1
	143 JumpIfNotEqual {200}
	144 Move X8, 0x8E1000
	145 Move X8, [X8+2760]
	146 Move W1, 5
	147 Move X0, [X8]
	148 Call 0x1C17D6C
	149 Compare X0, 0
	150 JumpIfEqual {556}
	151 Move W8, [X0+24]
	152 Compare W8, 0
	153 JumpIfEqual {557}
	154 Move X9, 0x938000
	155 Move X9, [X9+2048]
	156 NotImplemented "Instruction CMP not yet implemented."
	157 Move X9, [X9]
	158 Move [X0+32], X9
	159 Move X9, [X19+72]
	160 NotImplemented "Instruction CMP not yet implemented."
	161 Move [X0+40], X9
	162 Move X9, 0x938000
	163 Move X9, [X9+2064]
	164 NotImplemented "Instruction CMP not yet implemented."
	165 Move X9, [X9]
	166 Move [X0+48], X9
	167 Move X9, [X19]
	168 NotImplemented "Instruction CMP not yet implemented."
	169 Move [X0+56], X9
	170 Move X8, 0x938000
	171 Move X8, [X8+2072]
	172 Move X1, X31
	173 Move X8, [X8]
	174 Move [X0+64], X8
	175 Call String.Concat, X0
	176 Move X8, 0x8E1000
	177 Move X8, [X8+2600]
	178 Move X20, X0
	179 Move X8, [X8]
	180 Move W9, [X8+224]
	181 Compare W9, 0
	182 JumpIfNotEqual {185}
	183 Move X0, X8
	184 Call 0x1C17DFC
	185 Move X0, X20
	186 Move X1, X31
	187 Call Debug.Log, X0
	188 Move X0, [X22]
	189 Move X8, 0x936000
	190 Move X8, [X8+232]
	191 Move W9, [X0+224]
	192 Move X20, [X8]
	193 Compare W9, 0
	194 JumpIfNotEqual {196}
	195 Call 0x1C17DFC
	196 Move X0, X20
	197 Move X1, X31
	198 Call Type.GetTypeFromHandle, X0
	199 Move X21, X0
	200 Move X8, 0x933000
	201 Move X0, [X22]
	202 Move X8, [X8+1696]
	203 Move W9, [X0+224]
	204 Move X20, [X8]
	205 Compare W9, 0
	206 JumpIfNotEqual {208}
	207 Call 0x1C17DFC
	208 Move X0, X20
	209 Move X1, X31
	210 Call Type.GetTypeFromHandle, X0
	211 Compare X0, 0
	212 JumpIfEqual {556}
	213 Move X8, [X0]
	214 Move X1, X21
	215 Move X9, [X8+680]
	216 Move X2, [X8+688]
	217 NotImplemented "Instruction BLR not yet implemented."
	218 Move TEMP, X0
	219 And TEMP, TEMP, 1
	220 Compare TEMP, 1
	221 JumpIfNotEqual {580}
	222 Move X8, 0x909000
	223 Move X8, [X8+3520]
	224 Move X24, 0x938000
	225 Move X22, [X19]
	226 Move X0, [X8]
	227 Move X24, [X24+1984]
	228 Call 0x1C17F10
	229 Move X1, X31
	230 Move X20, X0
	231 Call Object..ctor, X0
	232 Add X0, X31, 624
	233 Move X1, X22
	234 Move X2, X31
	235 Move [X31+632], X31
	236 Move [X31+624], X31
	237 Call InternedString..ctor, X0, X1
	238 Move V0, [X31+39]
	239 Move [X20+32], X21
	240 Move W8, [X20+168]
	241 Add X0, X31, 624
	242 Move [X20+1], V0
	243 NotImplemented "Instruction LDUR not yet implemented."
	244 And W8, W8, 0xFFFFFFFC
	245 Move X2, X31
	246 Move [X20+152], V0
	247 Move W9, [X19+88]
	248 Move W10, [X19+89]
	249 Or W8, W8, W9
	250 Or W8, W8, W10
	251 Move [X20+168], W8
	252 Move X1, [X19+80]
	253 Move [X31+632], X31
	254 Move [X31+624], X31
	255 Call InternedString..ctor, X0, X1
	256 Move V0, [X31+39]
	257 Move [X20+40], V0
	258 Move X0, [X24]
	259 Move X21, [X19+48]
	260 Move W8, [X0+224]
	261 Compare W8, 0
	262 JumpIfNotEqual {265}
	263 Call 0x1C17DFC
	264 Move X0, [X24]
	265 Move X8, [X0+184]
	266 Move X25, 0x938000
	267 Move X22, [X8+8]
	268 Move X25, [X25+1888]
	269 Compare X22, 0
	270 JumpIfNotEqual {292}
	271 Move W8, [X0+224]
	272 Compare W8, 0
	273 JumpIfNotEqual {276}
	274 Call 0x1C17DFC
	275 Move X0, [X24]
	276 Move X9, 0x938000
	277 Move X8, [X0+184]
	278 Move X9, [X9+1896]
	279 Move X23, [X8]
	280 Move X0, [X9]
	281 Call 0x1C17F10
	282 Move X8, 0x938000
	283 Move X8, [X8+2032]
	284 Move X1, X23
	285 Move X3, X31
	286 Move X22, X0
	287 Move X2, [X8]
	288 Call Func`2<Object, InternedString>..ctor, X0, X1, X2
	289 Move X8, [X24]
	290 Move X8, [X8+184]
	291 Move [X8+8], X22
	292 Move X2, [X25]
	293 Move X0, X21
	294 Move X1, X22
	295 Call ArrayHelpers.Select, X0, X1
	296 Move [X20+136], X0
	297 Move X0, [X19+24]
	298 Move X1, X31
	299 Call String.IsNullOrEmpty, X0
	300 Move TEMP, X0
	301 And TEMP, TEMP, 1
	302 Compare TEMP, 1
	303 JumpIfEqual {311}
	304 Move X1, [X19+24]
	305 Add X0, X31, 624
	306 Move X2, X31
	307 Move [X31+624], W31
	308 Call FourCC..ctor, X0, X1
	309 Move W8, [X31+624]
	310 Move [X20+56], W8
	311 Move X0, [X19+8]
	312 Move X1, X31
	313 Call String.IsNullOrEmpty, X0
	314 Move TEMP, X0
	315 And TEMP, TEMP, 1
	316 Compare TEMP, 1
	317 JumpIfEqual {332}
	318 Move X1, [X19+8]
	319 Add X0, X31, 624
	320 Move X2, X31
	321 Add X21, X20, 72
	322 Move [X31+632], X31
	323 Move [X31+624], X31
	324 Call InternedString..ctor, X0, X1
	325 Move X8, 0x938000
	326 Move X1, [X31+624]
	327 Move X2, [X31+632]
	328 Move X8, [X8+2008]
	329 Move X0, X21
	330 Move X3, [X8]
	331 Call InlinedArray`1<InternedString>.Append, X0, X1
	332 Move X22, [X19+16]
	333 Compare X22, 0
	334 JumpIfEqual {358}
	335 Move X8, [X22+24]
	336 NotImplemented "Instruction CMP not yet implemented."
	337 Move X25, 0x938000
	338 Move X25, [X25+2008]
	339 Move X23, X31
	340 And X8, X8, 0
	341 Add X21, X20, 72
	342 Add X24, X22, 32
	343 NotImplemented "Instruction CMP not yet implemented."
	344 Move X1, [X24]
	345 Add X0, X31, 624
	346 Move X2, X31
	347 Move [X31+632], X31
	348 Move [X31+624], X31
	349 Call InternedString..ctor, X0, X1
	350 Move X1, [X31+624]
	351 Move X2, [X31+632]
	352 Move X3, [X25]
	353 Move X0, X21
	354 Call InlinedArray`1<InternedString>.Append, X0, X1
	355 Move W8, [X22+24]
	356 Add X23, X23, 1
	357 NotImplemented "Instruction CMP not yet implemented."
	358 Move X0, [X19+32]
	359 Move X1, X31
	360 Call String.IsNullOrEmpty, X0
	361 Move TEMP, X0
	362 And TEMP, TEMP, 1
	363 Compare TEMP, 1
	364 JumpIfEqual {404}
	365 Move X0, [X19+32]
	366 Compare X0, 0
	367 JumpIfEqual {556}
	368 Move X1, X31
	369 Call String.ToLower, X0
	370 Move X8, 0x938000
	371 Move X8, [X8+2040]
	372 Move X2, X31
	373 Move X21, X0
	374 Move X1, [X8]
	375 Call String.op_Equality, X0, X1
	376 Move TEMP, X0
	377 And TEMP, TEMP, 1
	378 Compare TEMP, 1
	379 JumpIfNotEqual {385}
	380 Move X8, 0x8E5000
	381 Move X8, [X8+4056]
	382 Add X0, X31, 624
	383 Move W1, W31
	384 NotImplemented "Instruction STRH not yet implemented."
	385 Move X8, 0x938000
	386 Move X8, [X8+2056]
	387 Move X0, X21
	388 Move X2, X31
	389 Move X1, [X8]
	390 Call String.op_Equality, X0, X1
	391 Move TEMP, X0
	392 And TEMP, TEMP, 1
	393 Compare TEMP, 1
	394 JumpIfNotEqual {629}
	395 Move X8, 0x8E5000
	396 Move X8, [X8+4056]
	397 NotImplemented "Instruction STRH not yet implemented."
	398 Add X0, X31, 624
	399 Move W1, 1
	400 Move X2, [X8]
	401 Call Nullable`1<Boolean>..ctor, X0, X1
	402 NotImplemented "Instruction LDRH not yet implemented."
	403 NotImplemented "Instruction STRH not yet implemented."
	404 Move X0, [X19+40]
	405 Move X1, X31
	406 Call String.IsNullOrEmpty, X0
	407 Move TEMP, X0
	408 And TEMP, TEMP, 1
	409 Compare TEMP, 1
	410 JumpIfEqual {451}
	411 Move X0, [X19+40]
	412 Compare X0, 0
	413 JumpIfEqual {556}
	414 Move X1, X31
	415 Call String.ToLower, X0
	416 Move X8, 0x938000
	417 Move X8, [X8+2080]
	418 Move X2, X31
	419 Move X21, X0
	420 Move X1, [X8]
	421 Call String.op_Equality, X0, X1
	422 Move TEMP, X0
	423 And TEMP, TEMP, 1
	424 Compare TEMP, 1
	425 JumpIfNotEqual {431}
	426 Move X8, 0x8E5000
	427 Move X8, [X8+4056]
	428 Add X0, X31, 624
	429 Move W1, 1
	430 NotImplemented "Instruction STRH not yet implemented."
	431 Move X8, 0x90B000
	432 Move X8, [X8+1360]
	433 Move X0, X21
	434 Move X2, X31
	435 Move X1, [X8]
	436 Call String.op_Equality, X0, X1
	437 Move TEMP, X0
	438 And TEMP, TEMP, 1
	439 Compare TEMP, 1
	440 JumpIfNotEqual {636}
	441 Move X8, 0x8E5000
	442 Move X8, [X8+4056]
	443 NotImplemented "Instruction STRH not yet implemented."
	444 Add X0, X31, 624
	445 Move W1, W31
	446 Move X2, [X8]
	447 Call Nullable`1<Boolean>..ctor, X0, X1
	448 NotImplemented "Instruction LDRH not yet implemented."
	449 Move X0, X20
	450 Call InputControlLayout.set_canRunInBackground, X0, X1
	451 Move X8, [X19+96]
	452 Compare X8, 0
	453 JumpIfEqual {542}
	454 Move X8, 0x938000
	455 Move X8, [X8+1864]
	456 Move X21, 0x938000
	457 Move X0, [X8]
	458 Move X21, [X21+1872]
	459 Call 0x1C17F10
	460 Move X1, [X21]
	461 Move X21, X0
	462 Call List`1<ControlItem>..ctor, X0
	463 Move X23, [X19+96]
	464 Compare X23, 0
	465 JumpIfEqual {556}
	466 Move W8, [X23+24]
	467 NotImplemented "Instruction CMP not yet implemented."
	468 Move X26, 0x938000
	469 Move X26, [X26+2024]
	470 Move X22, X31
	471 Move W24, W31
	472 Move W25, 208
	473 NotImplemented "Instruction CMP not yet implemented."
	474 Add X8, X23, W24
	475 Move X27, [X8+32]
	476 Compare X27, 0
	477 JumpIfEqual {556}
	478 Move X0, [X27+16]
	479 Move X1, X31
	480 Call String.IsNullOrEmpty, X0
	481 And W31, W0, 1
	482 Move W8, W0
	483 NotImplemented "Instruction CSEL not yet implemented."
	484 Move TEMP, X8
	485 And TEMP, TEMP, 1
	486 Compare TEMP, 1
	487 JumpIfEqual {558}
	488 Compare X0, 0
	489 JumpIfEqual {556}
	490 Add X8, X31, 208
	491 Call ControlItemJson.ToLayout, X0
	492 Add X0, X31, 0
	493 Add X1, X31, 208
	494 Move W2, 208
	495 Call 0x3EB2AC0
	496 Compare X21, 0
	497 JumpIfEqual {556}
	498 Move X22, [X26]
	499 Add X0, X31, 416
	500 Add X1, X31, 0
	501 Move W2, 208
	502 Call 0x3EB2AC0
	503 Move W9, [X21+28]
	504 Move X8, [X21+16]
	505 Add W9, W9, 1
	506 Move [X21+28], W9
	507 Compare X8, 0
	508 JumpIfEqual {556}
	509 NotImplemented "Instruction LDRSW not yet implemented."
	510 Move W10, [X8+24]
	511 NotImplemented "Instruction CMP not yet implemented."
	512 NotImplemented "Instruction MADD not yet implemented."
	513 Add W10, W9, 1
	514 Add X0, X8, 32
	515 Add X1, X31, 416
	516 Move W2, 208
	517 Move [X21+24], W10
	518 Call 0x3EB2AC0
	519 Move X8, [X22+32]
	520 Add X0, X31, 624
	521 Add X1, X31, 416
	522 Move W2, 208
	523 Move X8, [X8+192]
	524 Move X22, [X8+112]
	525 Call 0x3EB2AC0
	526 Add X1, X31, 624
	527 Move X0, X21
	528 Move X2, X22
	529 Call List`1<ControlItem>.AddWithResize, X0, X1
	530 Move W8, [X23+24]
	531 Add W24, W24, 1
	532 Move X22, X27
	533 NotImplemented "Instruction CMP not yet implemented."
	534 Compare X21, 0
	535 JumpIfEqual {556}
	536 Move X8, 0x938000
	537 Move X8, [X8+1920]
	538 Move X0, X21
	539 Move X1, [X8]
	540 Call List`1<ControlItem>.ToArray, X0
	541 Move [X20+144], X0
	542 Move X0, X20
	543 Add X31, X31, 832
	544 Move X20, [X31+80]
	545 Move X19, [X31+88]
	546 Move X22, [X31+64]
	547 Move X21, [X31+72]
	548 Move X24, [X31+48]
	549 Move X23, [X31+56]
	550 Move X26, [X31+32]
	551 Move X25, [X31+40]
	552 Move X30, [X31+16]
	553 Move X27, [X31+24]
	554 Move X29, [X31+96]
	555 Return X0
	556 Call 0x1C17F20
	557 Call 0x1C17F28
	558 Move X0, 0x938000
	559 Move X19, [X19]
	560 Move X0, [X0+2088]
	561 Call 0x1C17D08
	562 Move X1, X19
	563 Move X2, X31
	564 Call String.Concat, X0, X1
	565 Move X19, X0
	566 Move X0, 0x8E1000
	567 Move X0, [X0+1456]
	568 Call 0x1C17D08
	569 Call 0x1C17F10
	570 Move X1, X19
	571 Move X2, X31
	572 Move X20, X0
	573 Call InvalidOperationException..ctor, X0, X1
	574 Move X0, 0x938000
	575 Move X0, [X0+2016]
	576 Call 0x1C17D08
	577 Move X1, X0
	578 Move X0, X20
	579 Call 0x1C17DEC
	580 Move X0, 0x8E1000
	581 Move X0, [X0+2760]
	582 Call 0x1C17D08
	583 Move W1, 5
	584 Call 0x1C17D6C
	585 Move X20, X0
	586 Call 0x19913C0
	587 Move X0, 0x8E9000
	588 Move X0, [X0+2480]
	589 Call 0x1C17D08
	590 Move X2, X0
	591 Move X0, X20
	592 Move X1, X31
	593 Call 0x1994444
	594 Move X21, [X19+72]
	595 Move X0, X20
	596 Call 0x19913C0
	597 Move W1, 1
	598 Move X0, X20
	599 Move X2, X21
	600 Call 0x1994444
	601 Move X0, X20
	602 Call 0x19913C0
	603 Move X0, 0x938000
	604 Move X0, [X0+2064]
	605 Call 0x1C17D08
	606 Move X2, X0
	607 Move W1, 2
	608 Move X0, X20
	609 Call 0x1994444
	610 Move X19, [X19]
	611 Move X0, X20
	612 Call 0x19913C0
	613 Move W1, 3
	614 Move X0, X20
	615 Move X2, X19
	616 Call 0x1994444
	617 Move X0, X20
	618 Call 0x19913C0
	619 Move X0, 0x933000
	620 Move X0, [X0+1704]
	621 Call 0x1C17D08
	622 Move X2, X0
	623 Move W1, 4
	624 Move X0, X20
	625 Call 0x1994444
	626 Move X0, X20
	627 Move X1, X31
	628 Call String.Concat, X0
	629 Move X0, 0x938000
	630 Move X19, [X19+32]
	631 Move X0, [X0+2096]
	632 Call 0x1C17D08
	633 Move X20, X0
	634 Move X0, 0x938000
	635 Move X0, [X0+2104]
	636 Move X0, 0x938000
	637 Move X19, [X19+32]
	638 Move X0, [X0+2112]
	639 Call 0x1C17D08
	640 Move X20, X0
	641 Move X0, 0x938000
	642 Move X0, [X0+2120]
	643 Call 0x1C17D08
	644 Move X2, X0
	645 Move X0, X20
	646 Move X1, X19
	647 Move X3, X31
	648 Call String.Concat, X0, X1, X2

Method: UnityEngine.InputSystem.Layouts.InputControlLayout/LayoutJson FromLayout(UnityEngine.InputSystem.Layouts.InputControlLayout layout)

Disassembly:
	0x03812D18 MOV X1, X31
	0x03812D1C BL 0x338C698
	0x03812D20 CBZ X0, 0x381304C
	0x03812D24 LDR X8, [X0]
	0x03812D28 MOV X1, X24
	0x03812D2C LDR X9, [X8 + 0x2A8]
	0x03812D30 LDR X2, [X8 + 0x2B0]
	0x03812D34 BLR X9
	0x03812D38 TBZ X0, 0x0, 0x3812F10
	0x03812D3C LDR X8, [X31 + 0x28]
	0x03812D40 CBZ X8, 0x381304C
	0x03812D44 ADRP X8, 0x909000
	0x03812D48 LDR X8, [X8 + 0xDC0]
	0x03812D4C LDR X9, [X31 + 0x28]
	0x03812D50 LDR X0, [X8]
	0x03812D54 LDR W25, [X9 + 0x18]
	0x03812D58 LDR W8, [X0 + 0xE0]
	0x03812D5C CBNZ W8, 0x3812D64
	0x03812D60 BL 0x1C16DFC
	0x03812D64 LDR X1, [X31 + 0x28]
	0x03812D68 LDR X2, [X31 + 0x10]
	0x03812D6C MOV X0, X24
	0x03812D70 BL 0x3811BD0
	0x03812D74 ADRP X8, 0x90A000
	0x03812D78 LDR X9, [X23]
	0x03812D7C LDR X8, [X8 + 0x3A8]
	0x03812D80 LDRB W11, [X9 + 0x130]
	0x03812D84 LDR X8, [X8]
	0x03812D88 LDRB W10, [X8 + 0x130]
	0x03812D8C CMP W11, W10
	0x03812D90 B.CS 0x3812D9C
	0x03812D94 MOV X0, X31
	0x03812D98 B 0x3812DB0
	0x03812D9C LDR X9, [X9 + 0xC8]
	0x03812DA0 ADD X9, X9, X10, 0x3, LSL
	0x03812DA4 LDUR X9, [X9 - 0x8]
	0x03812DA8 CMP X9, X8
	0x03812DAC CSEL X0, X23, X31, EQ
	0x03812DB0 MOV X1, X31
	0x03812DB4 MOV X2, X31
	0x03812DB8 BL 0x32CCED4
	0x03812DBC TBZ X0, 0x0, 0x3812F10
	0x03812DC0 LDR X8, [X23]
	0x03812DC4 MOV X0, X23
	0x03812DC8 LDP X9, X1, [X8 + 0x1B8]
	0x03812DCC BLR X9
	0x03812DD0 LDR X8, [X23]
	0x03812DD4 MOV X26, X0
	0x03812DD8 MOV X0, X23
	0x03812DDC LDP X9, X1, [X8 + 0x1A8]
	0x03812DE0 BLR X9
	0x03812DE4 ADRP X8, 0x909000
	0x03812DE8 LDR X8, [X8 + 0x850]
	0x03812DEC MOV X27, X0
	0x03812DF0 LDR X8, [X8]
	0x03812DF4 LDR W9, [X8 + 0xE0]
	0x03812DF8 CBNZ W9, 0x3812E04
	0x03812DFC MOV X0, X8
	0x03812E00 BL 0x1C16DFC
	0x03812E04 MOV X0, X26
	0x03812E08 MOV X1, X27
	0x03812E0C MOV X2, X31
	0x03812E10 BL 0x32C1328
	0x03812E14 STR X0, [X31 + 0xB8]
	0x03812E18 ADD X0, X31, 0xB8
	0x03812E1C MOV X1, X31
	0x03812E20 BL 0x33C68D4
	0x03812E24 LDR X8, [X31 + 0x28]
	0x03812E28 ADRP X27, 0x933000
	0x03812E2C LDR W8, [X8 + 0x18]
	0x03812E30 STP W0, W8, [X31 + 0x18]
	0x03812E34 LDR X27, [X27 + 0x6A0]
	0x03812E38 CMP W25, W8
	0x03812E3C B.GE 0x3812F10
	0x03812E40 MOV X19, X20
	0x03812E44 ADRP X20, 0x938000
	0x03812E48 LDR X20, [X20 + 0x868]
	0x03812E4C LDR X26, [X31 + 0x28]
	0x03812E50 ADD X8, X31, 0xC0
	0x03812E54 MOV W1, W25
	0x03812E58 LDR X2, [X20]
	0x03812E5C MOV X0, X26
	0x03812E60 BL 0x310791C
	0x03812E64 ADD X0, X31, 0x30
	0x03812E68 ADD X1, X31, 0xC0
	0x03812E6C MOVZ W2, 0x88
	0x03812E70 BL 0x3EB1AC0
	0x03812E74 LDR W22, [X31 + 0x148]
	0x03812E78 ADD X0, X31, 0x194
	0x03812E7C MOVZ W2, 0x44
	0x03812E80 MOV X1, X21
	0x03812E84 BL 0x3EB1AC0
	0x03812E88 LDR X2, [X20]
	0x03812E8C ADD X8, X31, 0xC0
	0x03812E90 MOV X0, X26
	0x03812E94 MOV W1, W25
	0x03812E98 BL 0x310791C
	0x03812E9C LDR W8, [X31 + 0x148]
	0x03812EA0 ADDS W31, W8, 0x1
	0x03812EA4 B.EQ 0x3812EFC
	0x03812EA8 ADRP X8, 0x938000
	0x03812EAC LDR X8, [X8 + 0x870]
	0x03812EB0 ADD X0, X31, 0xC0
	0x03812EB4 ADD X1, X31, 0x30
	0x03812EB8 MOVZ W2, 0x88
	0x03812EBC LDR X27, [X8]
	0x03812EC0 LDR W8, [X31 + 0x18]
	0x03812EC4 ADD W22, W22, W8
	0x03812EC8 BL 0x3EB1AC0
	0x03812ECC ADD X1, X31, 0x194
	0x03812ED0 MOVZ W2, 0x44
	0x03812ED4 MOV X0, X21
	0x03812ED8 STR W22, [X31 + 0x148]
	0x03812EDC BL 0x3EB1AC0
	0x03812EE0 LDR X0, [X31 + 0x28]
	0x03812EE4 MOV X3, X27
	0x03812EE8 ADRP X27, 0x933000
	0x03812EEC LDR X27, [X27 + 0x6A0]
	0x03812EF0 ADD X2, X31, 0xC0
	0x03812EF4 MOV W1, W25
	0x03812EF8 BL 0x3107980
	0x03812EFC LDR W8, [X31 + 0x1C]
	0x03812F00 ADD W25, W25, 0x1
	0x03812F04 MOV X20, X19
	0x03812F08 CMP W8, W25
	0x03812F0C B.NE 0x3812E40
	0x03812F10 ADRP X8, 0x938000
	0x03812F14 LDR X8, [X8 + 0x850]
	0x03812F18 MOV X0, X23
	0x03812F1C MOV W1, W31
	0x03812F20 LDR X2, [X8]
	0x03812F24 BL 0x21A8C2C
	0x03812F28 ADRP X8, 0x938000
	0x03812F2C LDR X8, [X8 + 0x858]
	0x03812F30 LDR X1, [X8]
	0x03812F34 BL 0x21D577C
	0x03812F38 CBZ X0, 0x381304C
	0x03812F3C LDR X8, [X0 + 0x18]
	0x03812F40 MOV X25, X0
	0x03812F44 CBZ X8, 0x3812F74
	0x03812F48 ADRP X8, 0x909000
	0x03812F4C LDR X8, [X8 + 0xDC0]
	0x03812F50 LDR X0, [X8]
	0x03812F54 LDR W8, [X0 + 0xE0]
	0x03812F58 CBNZ W8, 0x3812F60
	0x03812F5C BL 0x1C16DFC
	0x03812F60 LDR X2, [X31 + 0x28]
	0x03812F64 MOV X0, X23
	0x03812F68 MOV X1, X25
	0x03812F6C BL 0x3813058
	0x03812F70 B 0x3813008
	0x03812F74 LDR X0, [X28]
	0x03812F78 LDR W8, [X0 + 0xE0]
	0x03812F7C CBNZ W8, 0x3812F84
	0x03812F80 BL 0x1C16DFC
	0x03812F84 MOV X0, X24
	0x03812F88 MOV X1, X31
	0x03812F8C MOV X2, X31
	0x03812F90 BL 0x3395194
	0x03812F94 TBNZ X0, 0x0, 0x3813008
	0x03812F98 LDR X0, [X28]
	0x03812F9C LDR X26, [X27]
	0x03812FA0 LDR W8, [X0 + 0xE0]
	0x03812FA4 CBNZ W8, 0x3812FAC
	0x03812FA8 BL 0x1C16DFC
	0x03812FAC MOV X0, X26
	0x03812FB0 MOV X1, X31
	0x03812FB4 BL 0x338C698
	0x03812FB8 CBZ X0, 0x381304C
	0x03812FBC LDR X8, [X0]
	0x03812FC0 MOV X1, X24
	0x03812FC4 LDR X9, [X8 + 0x2A8]
	0x03812FC8 LDR X2, [X8 + 0x2B0]
	0x03812FCC BLR X9
	0x03812FD0 TBZ X0, 0x0, 0x3813008
	0x03812FD4 ADRP X8, 0x90A000
	0x03812FD8 LDR X9, [X23]
	0x03812FDC LDR X8, [X8 + 0x3F0]
	0x03812FE0 LDRB W11, [X9 + 0x130]
	0x03812FE4 LDR X8, [X8]
	0x03812FE8 LDRB W10, [X8 + 0x130]
	0x03812FEC CMP W11, W10
	0x03812FF0 B.CC 0x3812F48
	0x03812FF4 LDR X9, [X9 + 0xC8]
	0x03812FF8 ADD X9, X9, X10, 0x3, LSL
	0x03812FFC LDUR X9, [X9 - 0x8]
	0x03813000 CMP X9, X8
	0x03813004 B.NE 0x3812F48
	0x03813008 LDR W8, [X20 + 0x18]
	0x0381300C ADD W29, W29, 0x1
	0x03813010 CMP W29, W8
	0x03813014 B.LT 0x3812C4C
	0x03813018 LDR X8, [X31 + 0x8]
	0x0381301C LDR X8, [X8 + 0x28]
	0x03813020 LDR X9, [X31 + 0x1D8]
	0x03813024 CMP X8, X9
	0x03813028 B.NE 0x3813054
	0x0381302C ADD X31, X31, 0x1E0
	0x03813030 LDP X20, X19, [X31 + 0x50]
	0x03813034 LDP X22, X21, [X31 + 0x40]
	0x03813038 LDP X24, X23, [X31 + 0x30]
	0x0381303C LDP X26, X25, [X31 + 0x20]
	0x03813040 LDP X28, X27, [X31 + 0x10]
	0x03813044 LDP X29, X30, [X31], #0x60
	0x03813048 RET
	0x0381304C BL 0x1C16F20
	0x03813050 BL 0x1C16F28
	0x03813054 BL 0x3EB1B20

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+128], X30
	003 Move [X31+136], X25
	004 Move [X31+144], X24
	005 Move [X31+152], X23
	006 Move [X31+160], X22
	007 Move [X31+168], X21
	008 Move [X31+176], X20
	009 Move [X31+184], X19
	010 Move X21, 0xBD0000
	011 Move W9, [X21+1263]
	012 Move X20, X0
	013 Move X19, X8
	014 Move TEMP, X9
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {53}
	018 Move X0, 0x939000
	019 Move X0, [X0+1952]
	020 Call 0x1C17CF4
	021 Move X0, 0x935000
	022 Move X0, [X0+1640]
	023 Call 0x1C17CF4
	024 Move X0, 0x939000
	025 Move X0, [X0+1960]
	026 Call 0x1C17CF4
	027 Move X0, 0x936000
	028 Move X0, [X0+3456]
	029 Call 0x1C17CF4
	030 Move X0, 0x8E6000
	031 Move X0, [X0+3056]
	032 Call 0x1C17CF4
	033 Move X0, 0x8E6000
	034 Move X0, [X0+3064]
	035 Call 0x1C17CF4
	036 Move X0, 0x939000
	037 Move X0, [X0+1968]
	038 Call 0x1C17CF4
	039 Move X0, 0x939000
	040 Move X0, [X0+1976]
	041 Call 0x1C17CF4
	042 Move X0, 0x939000
	043 Move X0, [X0+1984]
	044 Call 0x1C17CF4
	045 Move X0, 0x939000
	046 Move X0, [X0+1992]
	047 Call 0x1C17CF4
	048 Move X0, 0x8E4000
	049 Move X0, [X0+2016]
	050 Call 0x1C17CF4
	051 Move W8, 1
	052 Move [X21+1263], W8
	053 NotImplemented "Instruction MOVI not yet implemented."
	054 Move [X31+8], X31
	055 Move [X31+16], X31
	056 Move [X31], W31
	057 Move [X31+32], V0
	058 Move [X31+40], V0
	059 Move [X31+64], V0
	060 Move [X31+72], V0
	061 Move [X31+96], V0
	062 Move [X31+104], V0
	063 Compare X20, 0
	064 JumpIfEqual {236}
	065 Move X0, [X20+16]
	066 Move X1, [X20+24]
	067 Move X2, X31
	068 Call InternedString.op_Implicit, X0
	069 Move [X31+24], X0
	070 Move X0, [X20+32]
	071 Compare X0, 0
	072 JumpIfEqual {77}
	073 Move X8, [X0]
	074 Move X9, [X8+728]
	075 Move X1, [X8+736]
	076 NotImplemented "Instruction BLR not yet implemented."
	077 Move [X31+96], X0
	078 Move X0, [X20+40]
	079 Move X1, [X20+48]
	080 Move X2, X31
	081 Call InternedString.op_Implicit, X0
	082 Move [X31+104], X0
	083 NotImplemented "Instruction LDUR not yet implemented."
	084 Move X21, X20
	085 Move [X31+80], V0
	086 Move W8, [X20+168]
	087 And W9, W8, 1
	088 Move W8, W8
	089 ShiftRight W8, 1
	090 And W8, W8, 1
	091 Move [X31+112], W9
	092 Move [X31+113], W8
	093 Add X21, X21, 72
	094 Move W8, [X21]
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Move X8, 0x936000
	097 Move X8, [X8+3456]
	098 Move X0, X21
	099 Move W1, W31
	100 Move X2, [X8]
	101 Call InlinedArray`1<InternedString>.get_Item, X0, X1
	102 Move [X31+8], X0
	103 Move [X31+16], X1
	104 Add X0, X31, 8
	105 Move X1, X31
	106 Call InternedString.ToString, X0
	107 Move W8, [X21]
	108 Move X0, X31
	109 Move X24, 0x939000
	110 Move X24, [X24+1984]
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Move [X31+32], X0
	113 Move X0, [X24]
	114 Move W8, [X0+224]
	115 Compare W8, 0
	116 JumpIfNotEqual {119}
	117 Call 0x1C17DFC
	118 Move X0, [X24]
	119 Move X8, [X0+184]
	120 Move X22, [X8+16]
	121 Compare X22, 0
	122 JumpIfNotEqual {144}
	123 Move W8, [X0+224]
	124 Compare W8, 0
	125 JumpIfNotEqual {128}
	126 Call 0x1C17DFC
	127 Move X0, [X24]
	128 Move X9, 0x935000
	129 Move X8, [X0+184]
	130 Move X9, [X9+1640]
	131 Move X23, [X8]
	132 Move X0, [X9]
	133 Call 0x1C17F10
	134 Move X8, 0x939000
	135 Move X8, [X8+1968]
	136 Move X1, X23
	137 Move X3, X31
	138 Move X22, X0
	139 Move X2, [X8]
	140 Call Func`2<InternedString, Object>..ctor, X0, X1, X2
	141 Move X8, [X24]
	142 Move X8, [X8+184]
	143 Move [X8+16], X22
	144 Move X8, 0x939000
	145 Move X8, [X8+1960]
	146 Move X0, X21
	147 Move X1, X22
	148 Move X2, [X8]
	149 Call 0x21305C8, X0, X1
	150 Move X0, X31
	151 Move [X31+40], X0
	152 Move W8, [X20+56]
	153 Add X0, X31, 0
	154 Move X1, X31
	155 Move [X31], W8
	156 Call FourCC.ToString, X0
	157 Move X8, [X24]
	158 Move [X31+48], X0
	159 Move X21, [X20+136]
	160 Move W9, [X8+224]
	161 Compare W9, 0
	162 JumpIfNotEqual {166}
	163 Move X0, X8
	164 Call 0x1C17DFC
	165 Move X8, [X24]
	166 Move X9, [X8+184]
	167 Move X25, 0x939000
	168 Move X22, [X9+24]
	169 Move X25, [X25+1952]
	170 Compare X22, 0
	171 JumpIfNotEqual {194}
	172 Move W9, [X8+224]
	173 Compare W9, 0
	174 JumpIfNotEqual {178}
	175 Move X0, X8
	176 Call 0x1C17DFC
	177 Move X8, [X24]
	178 Move X9, 0x935000
	179 Move X8, [X8+184]
	180 Move X9, [X9+1640]
	181 Move X23, [X8]
	182 Move X0, [X9]
	183 Call 0x1C17F10
	184 Move X8, 0x939000
	185 Move X8, [X8+1976]
	186 Move X1, X23
	187 Move X3, X31
	188 Move X22, X0
	189 Move X2, [X8]
	190 Call Func`2<InternedString, Object>..ctor, X0, X1, X2
	191 Move X8, [X24]
	192 Move X8, [X8+184]
	193 Move [X8+24], X22
	194 Move X2, [X25]
	195 Move X0, X21
	196 Move X1, X22
	197 Call 0x217D140, X0, X1
	198 Move [X31+72], X0
	199 Move X0, [X20+144]
	200 Call ControlItemJson.FromControlItems, X0
	201 Move [X31+120], X0
	202 Add X20, X20, 64
	203 Move W8, [X20]
	204 Compare W8, 0
	205 JumpIfEqual {217}
	206 Move X8, 0x8E6000
	207 Move X8, [X8+3064]
	208 Move X0, X20
	209 Move X1, [X8]
	210 Call Nullable`1<Boolean>.get_Value, X0
	211 Move TEMP, X0
	212 And TEMP, TEMP, 1
	213 Compare TEMP, 1
	214 JumpIfNotEqual {218}
	215 Move X8, 0x8E3000
	216 Move X8, [X8+2016]
	217 Move X8, X31
	218 Move X8, 0x938000
	219 Move X8, [X8+1992]
	220 Move X8, [X8]
	221 Add X1, X31, 24
	222 Move W2, 104
	223 Move X0, X19
	224 Move [X31+56], X8
	225 Call 0x3EB2AC0
	226 Move X20, [X31+176]
	227 Move X19, [X31+184]
	228 Move X22, [X31+160]
	229 Move X21, [X31+168]
	230 Move X24, [X31+144]
	231 Move X23, [X31+152]
	232 Move X30, [X31+128]
	233 Move X25, [X31+136]
	234 Add X31, X31, 192
	235 Return X0
	236 Call 0x1C17F20

