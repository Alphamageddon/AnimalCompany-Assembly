Type: UnityEngine.InputSystem.Layouts.InputControlLayout/Collection

Method: System.Void Allocate()

Disassembly:
	0x03818E30 BL 0x1C16F20
	0x03818E34 STR X30, [X31 - 0x40]!
	0x03818E38 STP X24, X23, [X31 + 0x10]
	0x03818E3C STP X22, X21, [X31 + 0x20]
	0x03818E40 STP X20, X19, [X31 + 0x30]
	0x03818E44 ADRP X24, 0xBC9000
	0x03818E48 ADRP X23, 0x8DB000
	0x03818E4C LDRB W8, [X24 + 0x4FE]
	0x03818E50 LDR X23, [X23 + 0x6C0]
	0x03818E54 MOV X19, X3
	0x03818E58 MOV X20, X2
	0x03818E5C MOV X21, X1
	0x03818E60 MOV X22, X0
	0x03818E64 TBNZ X8, 0x0, 0x3818E88
	0x03818E68 ADRP X0, 0x932000
	0x03818E6C LDR X0, [X0 + 0x740]
	0x03818E70 BL 0x1C16CF4
	0x03818E74 ADRP X0, 0x8DB000
	0x03818E78 LDR X0, [X0 + 0x6C0]
	0x03818E7C BL 0x1C16CF4
	0x03818E80 MOVZ W8, 0x1
	0x03818E84 STRB W8, [X24 + 0x4FE]
	0x03818E88 MOV X0, X22
	0x03818E8C MOV X1, X21
	0x03818E90 MOV X2, X20
	0x03818E94 BL 0x3818CE8
	0x03818E98 LDR X8, [X23]
	0x03818E9C MOV X20, X0
	0x03818EA0 LDR W9, [X8 + 0xE0]
	0x03818EA4 CBNZ W9, 0x3818EB0
	0x03818EA8 MOV X0, X8
	0x03818EAC BL 0x1C16DFC
	0x03818EB0 MOV X0, X20
	0x03818EB4 MOV X1, X31
	0x03818EB8 MOV X2, X31
	0x03818EBC BL 0x3395194
	0x03818EC0 TBNZ X0, 0x0, 0x3818F14
	0x03818EC4 ADRP X8, 0x932000
	0x03818EC8 LDR X0, [X23]
	0x03818ECC LDR X8, [X8 + 0x740]
	0x03818ED0 LDR W9, [X0 + 0xE0]
	0x03818ED4 LDR X21, [X8]
	0x03818ED8 CBNZ W9, 0x3818EE0
	0x03818EDC BL 0x1C16DFC
	0x03818EE0 MOV X0, X21
	0x03818EE4 MOV X1, X31
	0x03818EE8 BL 0x338C698
	0x03818EEC MOV X1, X0
	0x03818EF0 MOV X0, X20
	0x03818EF4 MOV W2, W31
	0x03818EF8 MOV X3, X31
	0x03818EFC BL 0x37693C0
	0x03818F00 MOV X1, X31
	0x03818F04 MOV X2, X31
	0x03818F08 MOV X20, X0
	0x03818F0C BL 0x3395194
	0x03818F10 TBZ X0, 0x0, 0x3818F2C
	0x03818F14 LDP X20, X19, [X31 + 0x30]
	0x03818F18 LDP X22, X21, [X31 + 0x20]
	0x03818F1C LDP X24, X23, [X31 + 0x10]
	0x03818F20 MOV W0, W31
	0x03818F24 LDR X30, [X31], #0x40
	0x03818F28 RET
	0x03818F2C CBZ X19, 0x3818F58
	0x03818F30 LDR X8, [X19]
	0x03818F34 MOV X0, X19
	0x03818F38 MOV X1, X20
	0x03818F3C LDP X20, X19, [X31 + 0x30]
	0x03818F40 LDR X3, [X8 + 0x2A8]
	0x03818F44 LDR X2, [X8 + 0x2B0]
	0x03818F48 LDP X22, X21, [X31 + 0x20]
	0x03818F4C LDP X24, X23, [X31 + 0x10]
	0x03818F50 LDR X30, [X31], #0x40
	0x03818F54 BR X3
	0x03818F58 BL 0x1C16F20
	0x03818F5C STR X30, [X31 - 0x30]!
	0x03818F60 STP X22, X21, [X31 + 0x10]
	0x03818F64 STP X20, X19, [X31 + 0x20]
	0x03818F68 ADRP X22, 0xBC9000
	0x03818F6C LDRB W8, [X22 + 0x4FF]
	0x03818F70 MOV X19, X2
	0x03818F74 MOV X20, X1
	0x03818F78 MOV X21, X0
	0x03818F7C TBNZ X8, 0x0, 0x3818F94
	0x03818F80 ADRP X0, 0x932000
	0x03818F84 LDR X0, [X0 + 0x8C0]
	0x03818F88 BL 0x1C16CF4
	0x03818F8C MOVZ W8, 0x1
	0x03818F90 STRB W8, [X22 + 0x4FF]
	0x03818F94 LDR X0, [X21 + 0x10]
	0x03818F98 CBZ X0, 0x3818FC0
	0x03818F9C ADRP X8, 0x932000
	0x03818FA0 LDR X8, [X8 + 0x8C0]
	0x03818FA4 MOV X1, X20
	0x03818FA8 MOV X2, X19
	0x03818FAC LDP X20, X19, [X31 + 0x20]
	0x03818FB0 LDR X3, [X8]
	0x03818FB4 LDP X22, X21, [X31 + 0x10]
	0x03818FB8 LDR X30, [X31], #0x30
	0x03818FBC B 0x2A5A970
	0x03818FC0 BL 0x1C16F20
	0x03818FC4 STR X30, [X31 - 0x40]!
	0x03818FC8 STP X24, X23, [X31 + 0x10]
	0x03818FCC STP X22, X21, [X31 + 0x20]
	0x03818FD0 STP X20, X19, [X31 + 0x30]
	0x03818FD4 ADRP X24, 0xBC9000
	0x03818FD8 ADRP X23, 0x932000
	0x03818FDC LDRB W8, [X24 + 0x500]
	0x03818FE0 LDR X23, [X23 + 0xB18]
	0x03818FE4 MOV W22, W3
	0x03818FE8 MOV X19, X2
	0x03818FEC MOV X20, X1
	0x03818FF0 MOV X21, X0
	0x03818FF4 TBNZ X8, 0x0, 0x381900C
	0x03818FF8 ADRP X0, 0x932000
	0x03818FFC LDR X0, [X0 + 0xB18]
	0x03819000 BL 0x1C16CF4
	0x03819004 MOVZ W8, 0x1
	0x03819008 STRB W8, [X24 + 0x500]
	0x0381900C LDR X0, [X23]
	0x03819010 AND W23, W22, 0x1
	0x03819014 BL 0x1C16F10
	0x03819018 MOV X1, X31
	0x0381901C MOV X22, X0
	0x03819020 BL 0x33BDD8C
	0x03819024 MOVN W8, 0x1
	0x03819028 MOV X0, X31
	0x0381902C STR W8, [X22 + 0x10]
	0x03819030 BL 0x33C151C
	0x03819034 STR W0, [X22 + 0x28]
	0x03819038 LDP V0, V1, [X21 + 0x20]
	0x0381903C LDP V3, V2, [X21]
	0x03819040 STP X20, X19, [X22 + 0x40]
	0x03819044 STRB W23, [X22 + 0x2D]
	0x03819048 STP V0, V1, [X22 + 0xB0]
	0x0381904C STP V3, V2, [X22 + 0x90]
	0x03819050 MOV X0, X22
	0x03819054 LDP X20, X19, [X31 + 0x30]
	0x03819058 LDP X22, X21, [X31 + 0x20]
	0x0381905C LDP X24, X23, [X31 + 0x10]
	0x03819060 LDR X30, [X31], #0x40
	0x03819064 RET
	0x03819068 STR X30, [X31 - 0x20]!
	0x0381906C STP X20, X19, [X31 + 0x10]
	0x03819070 MOV W19, W1
	0x03819074 MOV X1, X31
	0x03819078 MOV X20, X0

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X26, 0xBCA000
	014 Move X27, 0x92F000
	015 Move X20, 0x92F000
	016 Move X25, 0x933000
	017 Move X24, 0x933000
	018 Move X23, 0x933000
	019 Move X22, 0x933000
	020 Move X21, 0x933000
	021 Move X29, 0x933000
	022 Move X28, 0x933000
	023 Move X27, [X27+1664]
	024 Move X20, [X20+1672]
	025 Move X25, [X25+2600]
	026 Move X24, [X24+2608]
	027 Move X23, [X23+2616]
	028 Move X22, [X22+2624]
	029 Move X21, [X21+2632]
	030 Move X29, [X29+2640]
	031 Move X28, [X28+2648]
	032 Move W8, [X26+1268]
	033 Move X19, X0
	034 Move TEMP, X8
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfEqual {88}
	038 Move X0, 0x933000
	039 Move X0, [X0+2608]
	040 Call 0x1C17CF4
	041 Move X0, 0x933000
	042 Move X0, [X0+2656]
	043 Call 0x1C17CF4
	044 Move X0, 0x933000
	045 Move X0, [X0+2664]
	046 Call 0x1C17CF4
	047 Move X0, 0x92F000
	048 Move X0, [X0+1672]
	049 Call 0x1C17CF4
	050 Move X0, 0x933000
	051 Move X0, [X0+2640]
	052 Call 0x1C17CF4
	053 Move X0, 0x933000
	054 Move X0, [X0+2624]
	055 Call 0x1C17CF4
	056 Move X0, 0x92F000
	057 Move X0, [X0+1664]
	058 Call 0x1C17CF4
	059 Move X0, 0x933000
	060 Move X0, [X0+2632]
	061 Call 0x1C17CF4
	062 Move X0, 0x933000
	063 Move X0, [X0+2648]
	064 Call 0x1C17CF4
	065 Move X0, 0x933000
	066 Move X0, [X0+2672]
	067 Call 0x1C17CF4
	068 Move X0, 0x933000
	069 Move X0, [X0+2600]
	070 Call 0x1C17CF4
	071 Move X0, 0x933000
	072 Move X0, [X0+2616]
	073 Call 0x1C17CF4
	074 Move X0, 0x933000
	075 Move X0, [X0+2680]
	076 Call 0x1C17CF4
	077 Move X0, 0x933000
	078 Move X0, [X0+2688]
	079 Call 0x1C17CF4
	080 Move X0, 0x933000
	081 Move X0, [X0+2696]
	082 Call 0x1C17CF4
	083 Move X0, 0x933000
	084 Move X0, [X0+2704]
	085 Call 0x1C17CF4
	086 Move W8, 1
	087 Move [X26+1268], W8
	088 Move X0, [X27]
	089 Call 0x1C17F10
	090 Move X1, [X20]
	091 Move X20, X0
	092 Call Dictionary`2<InternedString, Object>..ctor, X0
	093 Move [X19], X20
	094 Move X0, [X25]
	095 Call 0x1C17F10
	096 Move X1, [X24]
	097 Move X20, X0
	098 Call Dictionary`2<InternedString, Object>..ctor, X0
	099 Move [X19+8], X20
	100 Move X0, [X23]
	101 Call 0x1C17F10
	102 Move X1, [X22]
	103 Move X20, X0
	104 Call Dictionary`2<InternedString, Object>..ctor, X0
	105 Move [X19+16], X20
	106 Move X0, [X21]
	107 Call 0x1C17F10
	108 Move X1, [X29]
	109 Move X20, X0
	110 Call Dictionary`2<InternedString, InternedString>..ctor, X0
	111 Move [X19+24], X20
	112 Move X0, [X28]
	113 Call 0x1C17F10
	114 Move X8, 0x933000
	115 Move X8, [X8+2656]
	116 Move X20, X0
	117 Move X1, [X8]
	118 Call Dictionary`2<InternedString, Object>..ctor, X0
	119 Move [X19+32], X20
	120 Move X8, 0x933000
	121 Move X8, [X8+2688]
	122 Move X0, [X8]
	123 Call 0x1C17F10
	124 Move X8, 0x933000
	125 Move X8, [X8+2680]
	126 Move X20, X0
	127 Move X1, [X8]
	128 Call HashSet`1<InternedString>..ctor, X0
	129 Move [X19+40], X20
	130 Move X8, 0x932000
	131 Move X8, [X8+2704]
	132 Move X0, [X8]
	133 Call 0x1C17F10
	134 Move X8, 0x932000
	135 Move X8, [X8+2696]
	136 Move X20, X0
	137 Move X1, [X8]
	138 Call List`1<LayoutMatcher>..ctor, X0
	139 Move [X19+56], X20
	140 Move X8, 0x932000
	141 Move X8, [X8+2672]
	142 Move X0, [X8]
	143 Call 0x1C17F10
	144 Move X8, 0x932000
	145 Move X8, [X8+2664]
	146 Move X20, X0
	147 Move X1, [X8]
	148 Call Dictionary`2<InternedString, PrecompiledLayout>..ctor, X0
	149 Move [X19+48], X20
	150 Move X20, [X31+80]
	151 Move X19, [X31+88]
	152 Move X22, [X31+64]
	153 Move X21, [X31+72]
	154 Move X24, [X31+48]
	155 Move X23, [X31+56]
	156 Move X26, [X31+32]
	157 Move X25, [X31+40]
	158 Move X28, [X31+16]
	159 Move X27, [X31+24]
	160 Move X29, [X31+96]
	161 Move X30, [X31+104]
	162 Return 

Method: UnityEngine.InputSystem.Utilities.InternedString TryFindLayoutForType(System.Type layoutType)

Disassembly:
	0x03814D04 B 0x3814F68
	0x03814D08 ADRP X8, 0x936000
	0x03814D0C LDR X8, [X8 + 0x8F8]
	0x03814D10 ADD X0, X31, 0xB78
	0x03814D14 LDR X1, [X8]
	0x03814D18 BL 0x2C10A04
	0x03814D1C CBZ X20, 0x381500C
	0x03814D20 CBZ X22, 0x381500C
	0x03814D24 ADRP X8, 0x936000
	0x03814D28 LDR W23, [X20 + 0x18]
	0x03814D2C LDR X8, [X8 + 0x8E8]
	0x03814D30 MOV X0, X22
	0x03814D34 LDR X1, [X8]
	0x03814D38 BL 0x2ACA00C
	0x03814D3C LDR W8, [X31 + 0x1C]
	0x03814D40 MOV X22, X0
	0x03814D44 TBZ X8, 0x0, 0x3814E28
	0x03814D48 ADRP X8, 0x936000
	0x03814D4C LDR X8, [X8 + 0x938]
	0x03814D50 MOV X0, X20
	0x03814D54 MOV X1, X22
	0x03814D58 LDR X2, [X8]
	0x03814D5C BL 0x3107F74
	0x03814D60 LDR W8, [X20 + 0x18]
	0x03814D64 CMP W23, W8
	0x03814D68 B.GE 0x3814F48
	0x03814D6C ADRP X19, 0x936000
	0x03814D70 ADRP X24, 0x936000
	0x03814D74 LDR X19, [X19 + 0x868]
	0x03814D78 LDR X24, [X24 + 0x870]
	0x03814D7C ADD X8, X31, 0xC70
	0x03814D80 ADD X22, X8, 0x9C
	0x03814D84 LDR X2, [X19]
	0x03814D88 ADD X8, X31, 0xC70
	0x03814D8C MOV X0, X20
	0x03814D90 MOV W1, W23
	0x03814D94 BL 0x310791C
	0x03814D98 ADD X0, X31, 0x4F8
	0x03814D9C ADD X1, X31, 0xC70
	0x03814DA0 MOVZ W2, 0x98
	0x03814DA4 BL 0x3EB1AC0
	0x03814DA8 LDR W8, [X31 + 0xD08]
	0x03814DAC LDP V1, V0, [X22 + 0x10]
	0x03814DB0 LDR W9, [X22 + 0x30]
	0x03814DB4 LDR V2, [X22]
	0x03814DB8 LDR X21, [X24]
	0x03814DBC ADD X0, X31, 0xC70
	0x03814DC0 ADD X1, X31, 0x4F8
	0x03814DC4 MOVZ W2, 0x98
	0x03814DC8 STR W9, [X31 + 0x1020]
	0x03814DCC STR V0, [X31 + 0x101]
	0x03814DD0 STR V2, [X31 + 0xFF]
	0x03814DD4 STR V1, [X31 + 0x100]
	0x03814DD8 AND W25, W8, 0xFFFFFFF7
	0x03814DDC BL 0x3EB1AC0
	0x03814DE0 LDR V0, [X31 + 0x100]
	0x03814DE4 LDR V1, [X31 + 0xFF]
	0x03814DE8 LDR V2, [X31 + 0x101]
	0x03814DEC LDR W8, [X31 + 0x1020]
	0x03814DF0 ADD X2, X31, 0xC70
	0x03814DF4 MOV X0, X20
	0x03814DF8 MOV W1, W23
	0x03814DFC MOV X3, X21
	0x03814E00 STR W25, [X31 + 0xD08]
	0x03814E04 STP V1, V0, [X22]
	0x03814E08 STR V2, [X22 + 0x2]
	0x03814E0C STR W8, [X22 + 0x30]
	0x03814E10 BL 0x3107980
	0x03814E14 LDR W8, [X20 + 0x18]
	0x03814E18 ADD W23, W23, 0x1
	0x03814E1C CMP W23, W8
	0x03814E20 B.LT 0x3814D84
	0x03814E24 B 0x3814F48
	0x03814E28 ADRP X8, 0x936000
	0x03814E2C LDR X8, [X8 + 0x910]
	0x03814E30 LDR X0, [X8]
	0x03814E34 BL 0x1C16F10
	0x03814E38 ADRP X8, 0x936000
	0x03814E3C LDR X8, [X8 + 0x920]
	0x03814E40 LDR X1, [X31 + 0x28]
	0x03814E44 MOV X3, X31
	0x03814E48 MOV X21, X0
	0x03814E4C LDR X2, [X8]
	0x03814E50 BL 0x2D35018
	0x03814E54 ADRP X8, 0x936000
	0x03814E58 LDR X8, [X8 + 0x8F0]
	0x03814E5C MOV X0, X22
	0x03814E60 MOV X1, X21
	0x03814E64 LDR X2, [X8]
	0x03814E68 BL 0x21DAD2C
	0x03814E6C ADRP X8, 0x936000
	0x03814E70 LDR X8, [X8 + 0x938]
	0x03814E74 MOV X1, X0
	0x03814E78 MOV X0, X20
	0x03814E7C LDR X2, [X8]
	0x03814E80 BL 0x3107F74
	0x03814E84 LDR W8, [X20 + 0x18]
	0x03814E88 CMP W23, W8
	0x03814E8C B.GE 0x3814F48
	0x03814E90 ADRP X19, 0x936000
	0x03814E94 ADRP X24, 0x936000
	0x03814E98 LDR X19, [X19 + 0x868]
	0x03814E9C LDR X24, [X24 + 0x870]
	0x03814EA0 ADD X8, X31, 0xC70
	0x03814EA4 ADD X22, X8, 0x9C
	0x03814EA8 LDR X2, [X19]
	0x03814EAC ADD X8, X31, 0xC70
	0x03814EB0 MOV X0, X20

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+48], X30
	003 Move [X31+56], X25
	004 Move [X31+64], X24
	005 Move [X31+72], X23
	006 Move [X31+80], X22
	007 Move [X31+88], X21
	008 Move [X31+96], X20
	009 Move [X31+104], X19
	010 Move X21, 0xBCE000
	011 Move W8, [X21+1269]
	012 Move X19, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {41}
	018 Move X0, 0x933000
	019 Move X0, [X0+1680]
	020 Call 0x1C17CF4
	021 Move X0, 0x933000
	022 Move X0, [X0+1688]
	023 Call 0x1C17CF4
	024 Move X0, 0x933000
	025 Move X0, [X0+1696]
	026 Call 0x1C17CF4
	027 Move X0, 0x933000
	028 Move X0, [X0+1704]
	029 Call 0x1C17CF4
	030 Move X0, 0x933000
	031 Move X0, [X0+1712]
	032 Call 0x1C17CF4
	033 Move X0, 0x933000
	034 Move X0, [X0+1720]
	035 Call 0x1C17CF4
	036 Move X0, 0x8E0000
	037 Move X0, [X0+1728]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X21+1269], W8
	041 NotImplemented "Instruction MOVI not yet implemented."
	042 Move [X31+16], V0
	043 Move [X31+24], V0
	044 Move [X31], V0
	045 Move X0, [X20]
	046 Compare X0, 0
	047 JumpIfEqual {99}
	048 Move X8, 0x933000
	049 Move X8, [X8+1680]
	050 Move X24, 0x933000
	051 Move X25, 0x8E0000
	052 Move X23, 0x933000
	053 Move X1, [X8]
	054 Move X24, [X24+1696]
	055 Move X25, [X25+1728]
	056 Move X23, [X23+1688]
	057 Add X8, X31, 0
	058 Call Dictionary`2<InternedString, Object>.GetEnumerator, X0
	059 Move X1, [X24]
	060 Add X0, X31, 0
	061 Call Enumerator<InternedString, Object>.MoveNext, X0
	062 Move TEMP, X0
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfNotEqual {82}
	066 Move X0, [X25]
	067 Move X20, [X31+16]
	068 Move X21, [X31+24]
	069 Move X22, [X31+32]
	070 Move W8, [X0+224]
	071 Compare W8, 0
	072 JumpIfNotEqual {74}
	073 Call 0x1C17DFC
	074 Move X0, X22
	075 Move X1, X19
	076 Move X2, X31
	077 Call Type.op_Equality, X0, X1
	078 Move TEMP, X0
	079 And TEMP, TEMP, 1
	080 Compare TEMP, 1
	081 JumpIfNotEqual {59}
	082 Move X20, X31
	083 Move X21, X31
	084 Move X1, [X23]
	085 Add X0, X31, 0
	086 Call Enumerator<InternedString, Object>.Dispose, X0
	087 Move X0, X20
	088 Move X1, X21
	089 Move X20, [X31+96]
	090 Move X19, [X31+104]
	091 Move X22, [X31+80]
	092 Move X21, [X31+88]
	093 Move X24, [X31+64]
	094 Move X23, [X31+72]
	095 Move X30, [X31+48]
	096 Move X25, [X31+56]
	097 Add X31, X31, 112
	098 Return X0
	099 Call 0x1C17F20
	100 Move X19, X0
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Move X0, X19
	103 Call 0x3EB2AD0
	104 Move X20, [X0]
	105 Call 0x3EB2AE0
	106 Move X1, [X23]
	107 Add X0, X31, 0
	108 Call Enumerator<InternedString, Object>.Dispose, X0
	109 Compare X20, 0
	110 JumpIfNotEqual {113}
	111 Move X21, X31
	112 Move X20, X31
	113 Move X0, X20
	114 Call 0x1C17F18
	115 Move X19, X0
	116 Move X1, [X23]
	117 Add X0, X31, 0
	118 Call Enumerator<InternedString, Object>.Dispose, X0
	119 Compare X20, 0
	120 JumpIfNotEqual {123}
	121 Move X0, X19
	122 Call 0x1D2D690
	123 Move X0, X20
	124 Call 0x1C17F18
	125 Call 0x1991590

Method: UnityEngine.InputSystem.Utilities.InternedString TryFindMatchingLayout(UnityEngine.InputSystem.Layouts.InputDeviceDescription deviceDescription)

Disassembly:
	0x0381907C BL 0x33BDD8C
	0x03819080 MOV X0, X31
	0x03819084 STR W19, [X20 + 0x10]
	0x03819088 BL 0x33C151C
	0x0381908C STR W0, [X20 + 0x28]
	0x03819090 LDP X20, X19, [X31 + 0x10]
	0x03819094 LDR X30, [X31], #0x20
	0x03819098 RET
	0x0381909C SUB X31, X31, 0x50
	0x038190A0 STR X30, [X31 + 0x10]
	0x038190A4 STP X24, X23, [X31 + 0x20]
	0x038190A8 STP X22, X21, [X31 + 0x30]
	0x038190AC STP X20, X19, [X31 + 0x40]
	0x038190B0 ADRP X24, 0xBC8000
	0x038190B4 LDRB W8, [X24 + 0x501]
	0x038190B8 MOV X22, X4
	0x038190BC MOV X23, X3
	0x038190C0 MOV X19, X2
	0x038190C4 MOV X20, X1
	0x038190C8 MOV X21, X0
	0x038190CC TBNZ X8, 0x0, 0x38190E4
	0x038190D0 ADRP X0, 0x902000
	0x038190D4 LDR X0, [X0 + 0xDB8]
	0x038190D8 BL 0x1C16CF4
	0x038190DC MOVZ W8, 0x1
	0x038190E0 STRB W8, [X24 + 0x501]
	0x038190E4 ADRP X24, 0x902000
	0x038190E8 LDR X24, [X24 + 0xDB8]
	0x038190EC STP X23, X22, [X31]
	0x038190F0 LDR X0, [X21 + 0x18]
	0x038190F4 CBZ X0, 0x3819144
	0x038190F8 LDP X1, X2, [X31]
	0x038190FC LDR X4, [X24]
	0x03819100 ADD X3, X31, 0x0
	0x03819104 BL 0x2A590C0
	0x03819108 MOV W22, W0
	0x0381910C TBZ X0, 0x0, 0x3819128
	0x03819110 LDP X0, X1, [X31]
	0x03819114 MOV X2, X20
	0x03819118 MOV X3, X19
	0x0381911C MOV X4, X31
	0x03819120 BL 0x37564A4
	0x03819124 TBZ X0, 0x0, 0x38190F0
	0x03819128 AND W0, W22, 0x1
	0x0381912C LDP X20, X19, [X31 + 0x40]
	0x03819130 LDP X22, X21, [X31 + 0x30]
	0x03819134 LDP X24, X23, [X31 + 0x20]
	0x03819138 LDR X30, [X31 + 0x10]
	0x0381913C ADD X31, X31, 0x50
	0x03819140 RET
	0x03819144 BL 0x1C16F20
	0x03819148 SUB X31, X31, 0x70
	0x0381914C STP X30, X27, [X31 + 0x20]
	0x03819150 STP X26, X25, [X31 + 0x30]
	0x03819154 STP X24, X23, [X31 + 0x40]
	0x03819158 STP X22, X21, [X31 + 0x50]
	0x0381915C STP X20, X19, [X31 + 0x60]
	0x03819160 ADRP X23, 0xBC8000
	0x03819164 LDRB W8, [X23 + 0x502]
	0x03819168 MOV X19, X3
	0x0381916C MOV X20, X2
	0x03819170 MOV X21, X1
	0x03819174 MOV X22, X0
	0x03819178 TBNZ X8, 0x0, 0x38191B4
	0x0381917C ADRP X0, 0x902000
	0x03819180 LDR X0, [X0 + 0xEC0]
	0x03819184 BL 0x1C16CF4
	0x03819188 ADRP X0, 0x931000
	0x0381918C LDR X0, [X0 + 0xB20]
	0x03819190 BL 0x1C16CF4
	0x03819194 ADRP X0, 0x931000
	0x03819198 LDR X0, [X0 + 0xA98]
	0x0381919C BL 0x1C16CF4
	0x038191A0 ADRP X0, 0x931000
	0x038191A4 LDR X0, [X0 + 0xAA0]
	0x038191A8 BL 0x1C16CF4
	0x038191AC MOVZ W8, 0x1
	0x038191B0 STRB W8, [X23 + 0x502]
	0x038191B4 LDR X0, [X22 + 0x38]
	0x038191B8 CBZ X0, 0x38192BC
	0x038191BC LDR W25, [X0 + 0x18]
	0x038191C0 CMP W25, 0x1
	0x038191C4 B.LT 0x3819238
	0x038191C8 ADRP X26, 0x931000
	0x038191CC ADRP X27, 0x902000
	0x038191D0 LDR X26, [X26 + 0xAA0]
	0x038191D4 LDR X27, [X27 + 0xEC0]
	0x038191D8 MOV W8, W31
	0x038191DC MOV W23, W31
	0x038191E0 TBNZ X8, 0x0, 0x38192BC
	0x038191E4 LDR X2, [X26]
	0x038191E8 ADD X8, X31, 0x8
	0x038191EC MOV W1, W23
	0x038191F0 BL 0x31874C8
	0x038191F4 LDR X0, [X27]
	0x038191F8 LDR X24, [X31 + 0x18]
	0x038191FC LDR W8, [X0 + 0xE0]
	0x03819200 CBNZ W8, 0x3819208
	0x03819204 BL 0x1C16DFC
	0x03819208 MOV X0, X24
	0x0381920C MOV X1, X19
	0x03819210 MOV X2, X31
	0x03819214 BL 0x37571D4
	0x03819218 TBNZ X0, 0x0, 0x38192A0
	0x0381921C LDR X0, [X22 + 0x38]
	0x03819220 ADD W23, W23, 0x1
	0x03819224 CMP X0, 0x0
	0x03819228 CSET W8, EQ
	0x0381922C CMP W25, W23
	0x03819230 B.NE 0x38191E0
	0x03819234 CBZ X0, 0x38192BC
	0x03819238 ADRP X9, 0x931000
	0x0381923C LDR X9, [X9 + 0xB20]
	0x03819240 LDR W10, [X0 + 0x1C]
	0x03819244 LDR X8, [X0 + 0x10]
	0x03819248 LDR X9, [X9]

ISIL:
	001 Subtract X31, X31, 240
	002 Move [X31+128], D10
	003 Move [X31+136], D9
	004 Move [X31+144], D8
	005 Move [X31+152], X30
	006 Move [X31+160], X28
	007 Move [X31+168], X27
	008 Move [X31+176], X26
	009 Move [X31+184], X25
	010 Move [X31+192], X24
	011 Move [X31+200], X23
	012 Move [X31+208], X22
	013 Move [X31+216], X21
	014 Move [X31+224], X20
	015 Move [X31+232], X19
	016 Move X21, 0xBC9000
	017 Move W8, [X21+1270]
	018 Move X19, X1
	019 Move X20, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {38}
	024 Move X0, 0x932000
	025 Move X0, [X0+2240]
	026 Call 0x1C17CF4
	027 Move X0, 0x903000
	028 Move X0, [X0+3776]
	029 Call 0x1C17CF4
	030 Move X0, 0x932000
	031 Move X0, [X0+2712]
	032 Call 0x1C17CF4
	033 Move X0, 0x932000
	034 Move X0, [X0+2720]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X21+1270], W8
	038 Move [X31+120], X31
	039 Move X0, [X20+56]
	040 Compare X0, 0
	041 JumpIfEqual {122}
	042 Move W8, [X0+24]
	043 Move X22, X31
	044 Move X23, X31
	045 Subtract W25, W8, 1
	046 Move X26, 0x932000
	047 Move X27, 0x903000
	048 Move X28, 0x932000
	049 Move X26, [X26+2720]
	050 Move X27, [X27+3776]
	051 Move X28, [X28+2240]
	052 Move W21, W31
	053 Move S10, W31
	054 Move S9, 1
	055 Move X2, [X26]
	056 Add X8, X31, 64
	057 Move W1, W21
	058 Call List`1<LayoutMatcher>.get_Item, X0, X1
	059 Move X9, [X31+80]
	060 Move V2, [X19+16]
	061 Move V0, [X19+32]
	062 Move X8, [X19+48]
	063 Move V1, [X19]
	064 Move X0, [X27]
	065 Move [X31+80], V2
	066 Move [X31+88], V0
	067 Move [X31+112], X8
	068 Move [X31+120], X9
	069 Move [X31+4], V1
	070 Move W8, [X0+224]
	071 Compare W8, 0
	072 JumpIfNotEqual {74}
	073 Call 0x1C17DFC
	074 Move V0, [X31+64]
	075 Move V1, [X31+80]
	076 Move V2, [X31+6]
	077 Move X8, [X31+112]
	078 Add X0, X31, 120
	079 Add X1, X31, 0
	080 Move X2, X31
	081 Move [X31], V0
	082 Move [X31+8], V1
	083 Move [X31+2], V2
	084 Move [X31+48], X8
	085 Call InputDeviceMatcher.MatchPercentage, X0, X1
	086 Move V8, V0
	087 NotImplemented "Instruction FCMP not yet implemented."
	088 Move X0, [X20+56]
	089 Compare X0, 0
	090 JumpIfEqual {122}
	091 Move X2, [X26]
	092 Move X24, [X20+16]
	093 Add X8, X31, 64
	094 Move W1, W21
	095 Call List`1<LayoutMatcher>.get_Item, X0, X1
	096 Compare X24, 0
	097 JumpIfEqual {122}
	098 Move X1, [X31+64]
	099 Move X2, [X31+72]
	100 Move X3, [X28]
	101 Move X0, X24
	102 Call Dictionary`2<InternedString, Object>.ContainsKey, X0, X1
	103 Add S0, S8, S9
	104 And W31, W0, 1
	105 NotImplemented "Instruction FCSEL not yet implemented."
	106 NotImplemented "Instruction FCMP not yet implemented."
	107 Move X0, [X20+56]
	108 Compare X0, 0
	109 JumpIfEqual {122}
	110 Move X2, [X26]
	111 Add X8, X31, 64
	112 Move W1, W21
	113 Call List`1<LayoutMatcher>.get_Item, X0, X1
	114 Move X22, [X31+64]
	115 Move X23, [X31+72]
	116 Move V10, V8
	117 NotImplemented "Instruction CMP not yet implemented."
	118 Move X0, [X20+56]
	119 Add W21, W21, 1
	120 Compare X0, 0
	121 JumpIfNotEqual {55}
	122 Call 0x1C17F20
	123 Move X0, X22
	124 Move X1, X23
	125 Move X20, [X31+224]
	126 Move X19, [X31+232]
	127 Move X22, [X31+208]
	128 Move X21, [X31+216]
	129 Move X24, [X31+192]
	130 Move X23, [X31+200]
	131 Move X26, [X31+176]
	132 Move X25, [X31+184]
	133 Move X28, [X31+160]
	134 Move X27, [X31+168]
	135 Move X30, [X31+152]
	136 Move D9, [X31+136]
	137 Move D8, [X31+144]
	138 Move V10, [X31+128]
	139 Add X31, X31, 240
	140 Return X0

Method: System.Boolean HasLayout(UnityEngine.InputSystem.Utilities.InternedString name)

Disassembly:
	0x03814EB4 MOV W1, W23
	0x03814EB8 BL 0x310791C
	0x03814EBC ADD X0, X31, 0x460
	0x03814EC0 ADD X1, X31, 0xC70
	0x03814EC4 MOVZ W2, 0x98
	0x03814EC8 BL 0x3EB1AC0
	0x03814ECC LDR W8, [X31 + 0xD08]
	0x03814ED0 LDP V1, V0, [X22 + 0x10]
	0x03814ED4 LDR W9, [X22 + 0x30]
	0x03814ED8 LDR V2, [X22]
	0x03814EDC LDR X21, [X24]
	0x03814EE0 ADD X0, X31, 0xC70
	0x03814EE4 ADD X1, X31, 0x460
	0x03814EE8 MOVZ W2, 0x98
	0x03814EEC STR W9, [X31 + 0xFE0]
	0x03814EF0 STR V0, [X31 + 0xFD]
	0x03814EF4 STR V2, [X31 + 0xFB]
	0x03814EF8 STR V1, [X31 + 0xFC]
	0x03814EFC AND W25, W8, 0xFFFFFFF7
	0x03814F00 BL 0x3EB1AC0
	0x03814F04 LDR V0, [X31 + 0xFC]
	0x03814F08 LDR V1, [X31 + 0xFB]
	0x03814F0C LDR V2, [X31 + 0xFD]
	0x03814F10 LDR W8, [X31 + 0xFE0]
	0x03814F14 ADD X2, X31, 0xC70
	0x03814F18 MOV X0, X20
	0x03814F1C MOV W1, W23
	0x03814F20 MOV X3, X21
	0x03814F24 STR W25, [X31 + 0xD08]
	0x03814F28 STP V1, V0, [X22]
	0x03814F2C STR V2, [X22 + 0x2]
	0x03814F30 STR W8, [X22 + 0x30]
	0x03814F34 BL 0x3107980
	0x03814F38 LDR W8, [X20 + 0x18]
	0x03814F3C ADD W23, W23, 0x1
	0x03814F40 CMP W23, W8
	0x03814F44 B.LT 0x3814EA8
	0x03814F48 ADRP X8, 0x936000
	0x03814F4C LDR X8, [X8 + 0x780]
	0x03814F50 MOV X0, X20
	0x03814F54 LDR X1, [X8]
	0x03814F58 BL 0x310A2EC
	0x03814F5C LDR X8, [X31 + 0x28]
	0x03814F60 STR X0, [X8 + 0x90]
	0x03814F64 LDR X23, [X31 + 0x10]
	0x03814F68 LDR X8, [X23 + 0x28]
	0x03814F6C LDR X9, [X31 + 0x1028]
	0x03814F70 CMP X8, X9
	0x03814F74 B.NE 0x3815068
	0x03814F78 ADD X31, X31, 0x1000
	0x03814F7C ADD X31, X31, 0x30
	0x03814F80 LDP X20, X19, [X31 + 0x50]
	0x03814F84 LDP X22, X21, [X31 + 0x40]
	0x03814F88 LDP X24, X23, [X31 + 0x30]
	0x03814F8C LDP X26, X25, [X31 + 0x20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xBCE000
	007 Move W8, [X22+1271]
	008 Move X19, X2
	009 Move X20, X1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0x937000
	016 Move X0, [X0+2224]
	017 Call 0x1C17CF4
	018 Move X0, 0x937000
	019 Move X0, [X0+2232]
	020 Call 0x1C17CF4
	021 Move X0, 0x937000
	022 Move X0, [X0+2240]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X22+1271], W8
	026 Move X0, [X21]
	027 Compare X0, 0
	028 JumpIfEqual {74}
	029 Move X8, 0x937000
	030 Move X8, [X8+2224]
	031 Move X1, X20
	032 Move X2, X19
	033 Move X3, [X8]
	034 Call Dictionary`2<InternedString, Object>.ContainsKey, X0, X1
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {52}
	039 Move X0, [X21+8]
	040 Compare X0, 0
	041 JumpIfEqual {74}
	042 Move X8, 0x937000
	043 Move X8, [X8+2232]
	044 Move X1, X20
	045 Move X2, X19
	046 Move X3, [X8]
	047 Call Dictionary`2<InternedString, Object>.ContainsKey, X0, X1
	048 Move TEMP, X0
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfNotEqual {59}
	052 Move X20, [X31+32]
	053 Move X19, [X31+40]
	054 Move X22, [X31+16]
	055 Move X21, [X31+24]
	056 Move W0, 1
	057 Move X30, [X31+48]
	058 Return X0
	059 Move X0, [X21+16]
	060 Compare X0, 0
	061 JumpIfEqual {74}
	062 Move X8, 0x937000
	063 Move X8, [X8+2240]
	064 Move X1, X20
	065 Move X2, X19
	066 Move X20, [X31+32]
	067 Move X19, [X31+40]
	068 Move X3, [X8]
	069 Move X22, [X31+16]
	070 Move X21, [X31+24]
	071 Move X30, [X31+48]
	072 Call Dictionary`2<InternedString, Object>.ContainsKey, X0, X1
	073 Return X0
	074 Call 0x1C17F20

Method: UnityEngine.InputSystem.Layouts.InputControlLayout TryLoadLayoutInternal(UnityEngine.InputSystem.Utilities.InternedString name)

Disassembly:
	0x0381924C ADD W10, W10, 0x1
	0x03819250 STR W10, [X0 + 0x1C]
	0x03819254 CBZ X8, 0x38192BC
	0x03819258 LDRSW X10, [X0 + 0x18]
	0x0381925C LDR W11, [X8 + 0x18]
	0x03819260 CMP W10, W11
	0x03819264 B.CS 0x3819284
	0x03819268 MOVZ W11, 0x18
	0x0381926C ADD W9, W10, 0x1
	0x03819270 MADD X8, X10, X11, X8
	0x03819274 STR W9, [X0 + 0x18]
	0x03819278 STP X21, X20, [X8 + 0x20]
	0x0381927C STR X19, [X8 + 0x30]
	0x03819280 B 0x38192A0
	0x03819284 LDR X8, [X9 + 0x20]
	0x03819288 ADD X1, X31, 0x8
	0x0381928C LDR X8, [X8 + 0xC0]
	0x03819290 LDR X2, [X8 + 0x70]
	0x03819294 STP X21, X20, [X31 + 0x8]
	0x03819298 STR X19, [X31 + 0x18]
	0x0381929C BL 0x3187864
	0x038192A0 LDP X20, X19, [X31 + 0x60]
	0x038192A4 LDP X22, X21, [X31 + 0x50]
	0x038192A8 LDP X24, X23, [X31 + 0x40]
	0x038192AC LDP X26, X25, [X31 + 0x30]
	0x038192B0 LDP X30, X27, [X31 + 0x20]
	0x038192B4 ADD X31, X31, 0x70
	0x038192B8 RET
	0x038192BC BL 0x1C16F20
	0x038192C0 RET
	0x038192C4 STR X30, [X31 - 0x20]!
	0x038192C8 STP X20, X19, [X31 + 0x10]
	0x038192CC ADRP X20, 0xBC8000
	0x038192D0 LDRB W8, [X20 + 0x504]
	0x038192D4 MOV X19, X0
	0x038192D8 TBNZ X8, 0x0, 0x38192F0
	0x038192DC ADRP X0, 0x902000
	0x038192E0 LDR X0, [X0 + 0xDB8]
	0x038192E4 BL 0x1C16CF4
	0x038192E8 MOVZ W8, 0x1
	0x038192EC STRB W8, [X20 + 0x504]
	0x038192F0 LDR W8, [X19 + 0x10]
	0x038192F4 SUB W9, W8, 0x1
	0x038192F8 CMP W9, 0x2
	0x038192FC B.CS 0x3819344
	0x03819300 MOVN W8, 0x0
	0x03819304 STR W8, [X19 + 0x10]
	0x03819308 LDR X0, [X19 + 0x68]
	0x0381930C CBZ X0, 0x381937C
	0x03819310 ADRP X8, 0x902000
	0x03819314 LDR X8, [X8 + 0xDB8]
	0x03819318 LDP X1, X2, [X19 + 0x30]
	0x0381931C ADD X20, X19, 0x30
	0x03819320 MOV X3, X20
	0x03819324 LDR X4, [X8]
	0x03819328 BL 0x2A590C0
	0x0381932C TBZ X0, 0x0, 0x381936C
	0x03819330 LDR V0, [X20]
	0x03819334 MOVZ W8, 0x2
	0x03819338 STR W8, [X19 + 0x10]
	0x0381933C MOVZ W0, 0x1
	0x03819340 B 0x3819364
	0x03819344 CBNZ W8, 0x381936C
	0x03819348 LDRB W8, [X19 + 0x2C]
	0x0381934C MOVN W9, 0x0
	0x03819350 STR W9, [X19 + 0x10]
	0x03819354 CBZ W8, 0x3819308
	0x03819358 LDR V0, [X19 + 0x3]
	0x0381935C MOVZ W0, 0x1
	0x03819360 STR W0, [X19 + 0x10]
	0x03819364 STUR V0, [X19 + 0x18]
	0x03819368 B 0x3819370
	0x0381936C MOV W0, W31
	0x03819370 LDP X20, X19, [X31 + 0x10]
	0x03819374 LDR X30, [X31], #0x20
	0x03819378 RET
	0x0381937C BL 0x1C16F20
	0x03819380 LDP X8, X1, [X0 + 0x18]
	0x03819384 MOV X0, X8
	0x03819388 RET
	0x0381938C STP X30, X19, [X31 - 0x10]!
	0x03819390 ADRP X0, 0x8DA000
	0x03819394 LDR X0, [X0 + 0xB40]
	0x03819398 BL 0x1C16D08
	0x0381939C BL 0x1C16F10
	0x038193A0 MOV X1, X31
	0x038193A4 MOV X19, X0
	0x038193A8 BL 0x3380310
	0x038193AC ADRP X0, 0x931000
	0x038193B0 LDR X0, [X0 + 0xB28]
	0x038193B4 BL 0x1C16D08
	0x038193B8 MOV X1, X0
	0x038193BC MOV X0, X19
	0x038193C0 BL 0x1C16DEC
	0x038193C4 SUB X31, X31, 0x30
	0x038193C8 STP X30, X21, [X31 + 0x10]
	0x038193CC STP X20, X19, [X31 + 0x20]
	0x038193D0 ADRP X21, 0xBC8000
	0x038193D4 ADRP X20, 0x905000
	0x038193D8 LDRB W8, [X21 + 0x505]
	0x038193DC LDR X20, [X20 + 0x510]
	0x038193E0 MOV X19, X0
	0x038193E4 TBNZ X8, 0x0, 0x38193FC
	0x038193E8 ADRP X0, 0x905000
	0x038193EC LDR X0, [X0 + 0x510]
	0x038193F0 BL 0x1C16CF4
	0x038193F4 MOVZ W8, 0x1
	0x038193F8 STRB W8, [X21 + 0x505]
	0x038193FC LDUR V0, [X19 + 0x18]
	0x03819400 LDR X0, [X20]
	0x03819404 ADD X1, X31, 0x0
	0x03819408 STR V0, [X31]
	0x0381940C BL 0x1C16E04
	0x03819410 LDP X20, X19, [X31 + 0x20]
	0x03819414 LDP X30, X21, [X31 + 0x10]
	0x03819418 ADD X31, X31, 0x30
	0x0381941C RET
	0x03819420 SUB X31, X31, 0x60
	0x03819424 STR X30, [X31 + 0x40]
	0x03819428 STP X20, X19, [X31 + 0x50]
	0x0381942C ADRP X20, 0xBC8000
	0x03819430 LDRB W8, [X20 + 0x506]
	0x03819434 MOV X19, X0
	0x03819438 TBNZ X8, 0x0, 0x3819450
	0x0381943C ADRP X0, 0x931000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+48], X22
	004 Move [X31+56], X21
	005 Move [X31+64], X20
	006 Move [X31+72], X19
	007 Move X22, 0xBC9000
	008 Move W8, [X22+1272]
	009 Move X19, X2
	010 Move X20, X1
	011 Move X21, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0x932000
	017 Move X0, [X0+2728]
	018 Call 0x1C17CF4
	019 Move X0, 0x932000
	020 Move X0, [X0+2736]
	021 Call 0x1C17CF4
	022 Move X0, 0x92E000
	023 Move X0, [X0+1760]
	024 Call 0x1C17CF4
	025 Move X0, 0x903000
	026 Move X0, [X0+3520]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X22+1272], W8
	030 Move [X31+40], X31
	031 Move [X31+16], X31
	032 Move [X31+24], X31
	033 Move X0, [X21+8]
	034 Compare X0, 0
	035 JumpIfEqual {148}
	036 Move X8, 0x932000
	037 Move X8, [X8+2728]
	038 Add X3, X31, 40
	039 Move X1, X20
	040 Move X2, X19
	041 Move X4, [X8]
	042 Call Dictionary`2<InternedString, Object>.TryGetValue, X0, X1, X2
	043 Move TEMP, X0
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfNotEqual {57}
	047 Move X8, 0x903000
	048 Move X8, [X8+3520]
	049 Move X19, [X31+40]
	050 Move X0, [X8]
	051 Move W8, [X0+224]
	052 Compare W8, 0
	053 JumpIfNotEqual {55}
	054 Call 0x1C17DFC
	055 Move X0, X19
	056 Call InputControlLayout.FromJson, X0
	057 Move X0, [X21]
	058 Compare X0, 0
	059 JumpIfEqual {148}
	060 Move X8, 0x92E000
	061 Move X8, [X8+1760]
	062 Add X3, X31, 24
	063 Move X1, X20
	064 Move X2, X19
	065 Move X4, [X8]
	066 Call Dictionary`2<InternedString, Object>.TryGetValue, X0, X1, X2
	067 Move TEMP, X0
	068 And TEMP, TEMP, 1
	069 Compare TEMP, 1
	070 JumpIfNotEqual {88}
	071 Move X0, X20
	072 Move X1, X19
	073 Move X2, X31
	074 Call InternedString.op_Implicit, X0
	075 Move X8, 0x903000
	076 Move X8, [X8+3520]
	077 Move X19, [X31+24]
	078 Move X20, X0
	079 Move X8, [X8]
	080 Move W9, [X8+224]
	081 Compare W9, 0
	082 JumpIfNotEqual {85}
	083 Move X0, X8
	084 Call 0x1C17DFC
	085 Move X0, X20
	086 Move X1, X19
	087 Call InputControlLayout.FromType, X0, X1
	088 Move X0, [X21+16]
	089 Compare X0, 0
	090 JumpIfEqual {148}
	091 Move X8, 0x932000
	092 Move X8, [X8+2736]
	093 Add X3, X31, 16
	094 Move X1, X20
	095 Move X2, X19
	096 Move X4, [X8]
	097 Call Dictionary`2<InternedString, Object>.TryGetValue, X0, X1, X2
	098 Move TEMP, X0
	099 And TEMP, TEMP, 1
	100 Compare TEMP, 1
	101 JumpIfNotEqual {140}
	102 Move X8, [X31+16]
	103 Compare X8, 0
	104 JumpIfEqual {148}
	105 Move X9, [X8+24]
	106 Move X0, [X8+64]
	107 Move X1, [X8+40]
	108 NotImplemented "Instruction BLR not yet implemented."
	109 Compare X0, 0
	110 JumpIfNotEqual {141}
	111 Move [X31], X20
	112 Move [X31+8], X19
	113 Move X0, 0x906000
	114 Move X0, [X0+1296]
	115 Call 0x1C17D08
	116 Add X1, X31, 0
	117 Call 0x1C17E04
	118 Move X19, X0
	119 Move X0, 0x932000
	120 Move X0, [X0+2744]
	121 Call 0x1C17D08
	122 Move X1, X19
	123 Move X2, X31
	124 Call String.Format, X0, X1
	125 Move X19, X0
	126 Move X0, 0x8DB000
	127 Move X0, [X0+1456]
	128 Call 0x1C17D08
	129 Call 0x1C17F10
	130 Move X1, X19
	131 Move X2, X31
	132 Move X20, X0
	133 Call InvalidOperationException..ctor, X0, X1
	134 Move X0, 0x932000
	135 Move X0, [X0+2752]
	136 Call 0x1C17D08
	137 Move X1, X0
	138 Move X0, X20
	139 Call 0x1C17DEC
	140 Move X0, X31
	141 Move X20, [X31+64]
	142 Move X19, [X31+72]
	143 Move X22, [X31+48]
	144 Move X21, [X31+56]
	145 Move X30, [X31+32]
	146 Add X31, X31, 80
	147 Return X0
	148 Call 0x1C17F20

Method: UnityEngine.InputSystem.Layouts.InputControlLayout TryLoadLayout(UnityEngine.InputSystem.Utilities.InternedString name, System.Collections.Generic.Dictionary`2<UnityEngine.InputSystem.Utilities.InternedString, UnityEngine.InputSystem.Layouts.InputControlLayout> table = null)

Disassembly:
	0x03819440 LDR X0, [X0 + 0xB18]
	0x03819444 BL 0x1C16CF4
	0x03819448 MOVZ W8, 0x1
	0x0381944C STRB W8, [X20 + 0x506]
	0x03819450 LDR W8, [X19 + 0x10]
	0x03819454 ADDS W31, W8, 0x2
	0x03819458 B.NE 0x381947C
	0x0381945C LDR W20, [X19 + 0x28]
	0x03819460 MOV X0, X31
	0x03819464 BL 0x33C151C
	0x03819468 CMP W20, W0
	0x0381946C B.NE 0x381947C
	0x03819470 STR W31, [X19 + 0x10]
	0x03819474 MOV X20, X19
	0x03819478 B 0x38194A8
	0x0381947C ADRP X8, 0x931000
	0x03819480 LDR X8, [X8 + 0xB18]
	0x03819484 LDR X0, [X8]
	0x03819488 BL 0x1C16F10
	0x0381948C MOV X1, X31
	0x03819490 MOV X20, X0
	0x03819494 BL 0x33BDD8C
	0x03819498 MOV X0, X31
	0x0381949C STR W31, [X20 + 0x10]
	0x038194A0 BL 0x33C151C
	0x038194A4 STR W0, [X20 + 0x28]
	0x038194A8 LDP V1, V0, [X19 + 0xB0]
	0x038194AC LDP V2, V3, [X19 + 0x90]
	0x038194B0 MOV X0, X20
	0x038194B4 LDR X30, [X31 + 0x40]
	0x038194B8 STP V1, V0, [X31 + 0x20]
	0x038194BC STP V2, V3, [X31]
	0x038194C0 STP V1, V0, [X20 + 0x70]
	0x038194C4 STP V2, V3, [X20 + 0x50]
	0x038194C8 LDR V0, [X19 + 0x4]
	0x038194CC STR V0, [X20 + 0x3]
	0x038194D0 LDRB W8, [X19 + 0x2D]
	0x038194D4 STRB W8, [X20 + 0x2C]
	0x038194D8 LDP X20, X19, [X31 + 0x50]
	0x038194DC ADD X31, X31, 0x60
	0x038194E0 RET
	0x038194E4 B 0x3819420
	0x038194E8 LDR X0, [X0 + 0x90]
	0x038194EC RET
	0x038194F0 STP X30, X21, [X31 - 0x20]!
	0x038194F4 STP X20, X19, [X31 + 0x10]
	0x038194F8 ADRP X20, 0xBC8000
	0x038194FC ADRP X21, 0x8DA000
	0x03819500 LDRB W8, [X20 + 0x507]
	0x03819504 LDR X21, [X21 + 0x7D0]
	0x03819508 MOV X19, X0
	0x0381950C TBNZ X8, 0x0, 0x3819524
	0x03819510 ADRP X0, 0x8DA000
	0x03819514 LDR X0, [X0 + 0x7D0]
	0x03819518 BL 0x1C16CF4
	0x0381951C MOVZ W8, 0x1
	0x03819520 STRB W8, [X20 + 0x507]
	0x03819524 LDR X0, [X21]
	0x03819528 LDR W8, [X0 + 0xE0]
	0x0381952C CBNZ W8, 0x3819534
	0x03819530 BL 0x1C16DFC
	0x03819534 MOV X0, X19
	0x03819538 LDP X20, X19, [X31 + 0x10]
	0x0381953C MOV X1, X31
	0x03819540 LDP X30, X21, [X31], #0x20
	0x03819544 B 0x33B2C54
	0x03819548 STP X30, X23, [X31 - 0x30]!
	0x0381954C STP X22, X21, [X31 + 0x10]
	0x03819550 STP X20, X19, [X31 + 0x20]
	0x03819554 ADRP X22, 0xBC8000
	0x03819558 ADRP X23, 0x8DA000
	0x0381955C LDRB W8, [X22 + 0x508]
	0x03819560 LDR X23, [X23 + 0x7D0]
	0x03819564 MOV X21, X2
	0x03819568 MOV X19, X1
	0x0381956C MOV X20, X0
	0x03819570 TBNZ X8, 0x0, 0x3819588
	0x03819574 ADRP X0, 0x8DA000
	0x03819578 LDR X0, [X0 + 0x7D0]
	0x0381957C BL 0x1C16CF4
	0x03819580 MOVZ W8, 0x1
	0x03819584 STRB W8, [X22 + 0x508]
	0x03819588 LDR X0, [X23]
	0x0381958C LDR W8, [X0 + 0xE0]
	0x03819590 CBNZ W8, 0x3819598
	0x03819594 BL 0x1C16DFC
	0x03819598 MOV X0, X20
	0x0381959C MOV X1, X21
	0x038195A0 MOV X2, X31
	0x038195A4 BL 0x33B2C70
	0x038195A8 STR X19, [X20 + 0x90]
	0x038195AC LDP X20, X19, [X31 + 0x20]
	0x038195B0 LDP X22, X21, [X31 + 0x10]
	0x038195B4 LDP X30, X23, [X31], #0x30
	0x038195B8 RET
	0x038195BC STP X30, X23, [X31 - 0x30]!
	0x038195C0 STP X22, X21, [X31 + 0x10]
	0x038195C4 STP X20, X19, [X31 + 0x20]
	0x038195C8 ADRP X22, 0xBC8000
	0x038195CC ADRP X23, 0x8DA000
	0x038195D0 LDRB W8, [X22 + 0x50A]
	0x038195D4 LDR X23, [X23 + 0x7D0]
	0x038195D8 MOV X19, X2
	0x038195DC MOV X20, X1
	0x038195E0 MOV X21, X0
	0x038195E4 TBNZ X8, 0x0, 0x38195FC
	0x038195E8 ADRP X0, 0x8DA000
	0x038195EC LDR X0, [X0 + 0x7D0]
	0x038195F0 BL 0x1C16CF4
	0x038195F4 MOVZ W8, 0x1
	0x038195F8 STRB W8, [X22 + 0x50A]
	0x038195FC LDR X0, [X23]
	0x03819600 LDR W8, [X0 + 0xE0]
	0x03819604 CBNZ W8, 0x381960C
	0x03819608 BL 0x1C16DFC
	0x0381960C MOV X0, X21
	0x03819610 MOV X1, X20
	0x03819614 MOV X2, X19
	0x03819618 LDP X20, X19, [X31 + 0x20]
	0x0381961C LDP X22, X21, [X31 + 0x10]
	0x03819620 MOV X3, X31
	0x03819624 LDP X30, X23, [X31], #0x30
	0x03819628 B 0x33B2CA0
	0x0381962C STR X30, [X31 - 0x40]!
	0x03819630 STP X24, X23, [X31 + 0x10]
	0x03819634 STP X22, X21, [X31 + 0x20]
	0x03819638 STP X20, X19, [X31 + 0x30]
	0x0381963C ADRP X24, 0xBC8000
	0x03819640 ADRP X23, 0x8DA000
	0x03819644 LDRB W8, [X24 + 0x50B]
	0x03819648 LDR X23, [X23 + 0x7D0]
	0x0381964C MOV X19, X3
	0x03819650 MOV X20, X2
	0x03819654 MOV X21, X1
	0x03819658 MOV X22, X0
	0x0381965C TBNZ X8, 0x0, 0x3819674
	0x03819660 ADRP X0, 0x8DA000
	0x03819664 LDR X0, [X0 + 0x7D0]
	0x03819668 BL 0x1C16CF4
	0x0381966C MOVZ W8, 0x1
	0x03819670 STRB W8, [X24 + 0x50B]
	0x03819674 LDR X0, [X23]
	0x03819678 LDR W8, [X0 + 0xE0]
	0x0381967C CBNZ W8, 0x3819684
	0x03819680 BL 0x1C16DFC
	0x03819684 MOV X0, X22
	0x03819688 MOV X1, X21
	0x0381968C MOV X2, X20
	0x03819690 MOV X3, X19
	0x03819694 LDP X20, X19, [X31 + 0x30]
	0x03819698 LDP X22, X21, [X31 + 0x20]
	0x0381969C LDP X24, X23, [X31 + 0x10]
	0x038196A0 MOV X4, X31
	0x038196A4 LDR X30, [X31], #0x40
	0x038196A8 B 0x33B2CD8
	0x038196AC STR X31, [X0]
	0x038196B0 RET
	0x038196B4 STR X30, [X31 - 0x20]!
	0x038196B8 STP X20, X19, [X31 + 0x10]
	0x038196BC ADRP X20, 0xBC8000
	0x038196C0 LDRB W8, [X20 + 0x50D]
	0x038196C4 MOV X19, X0
	0x038196C8 TBNZ X8, 0x0, 0x38196E0
	0x038196CC ADRP X0, 0x902000
	0x038196D0 LDR X0, [X0 + 0xDC0]
	0x038196D4 BL 0x1C16CF4
	0x038196D8 MOVZ W8, 0x1
	0x038196DC STRB W8, [X20 + 0x50D]
	0x038196E0 LDRB W8, [X19]
	0x038196E4 CBZ W8, 0x3819740
	0x038196E8 ADRP X20, 0x902000
	0x038196EC LDR X20, [X20 + 0xDC0]
	0x038196F0 LDR X0, [X20]
	0x038196F4 LDR W8, [X0 + 0xE0]
	0x038196F8 CBNZ W8, 0x3819704
	0x038196FC BL 0x1C16DFC
	0x03819700 LDR X0, [X20]
	0x03819704 LDR X8, [X0 + 0xB8]
	0x03819708 LDR W9, [X8 + 0x58]
	0x0381970C SUB W9, W9, 0x1
	0x03819710 CMP W9, 0x0
	0x03819714 STR W9, [X8 + 0x58]
	0x03819718 B.GT 0x381973C
	0x0381971C LDR W9, [X0 + 0xE0]
	0x03819720 CBNZ W9, 0x3819730
	0x03819724 BL 0x1C16DFC
	0x03819728 LDR X0, [X20]
	0x0381972C LDR X8, [X0 + 0xB8]
	0x03819730 STR X31, [X8 + 0x50]
	0x03819734 LDR X8, [X0 + 0xB8]
	0x03819738 STR W31, [X8 + 0x58]
	0x0381973C STRB W31, [X19]
	0x03819740 LDP X20, X19, [X31 + 0x10]
	0x03819744 LDR X30, [X31], #0x20
	0x03819748 RET
	0x0381974C STR X30, [X31 - 0x20]!
	0x03819750 STP X20, X19, [X31 + 0x10]
	0x03819754 ADRP X19, 0xBC8000
	0x03819758 ADRP X20, 0x931000
	0x0381975C LDRB W8, [X19 + 0x50E]
	0x03819760 LDR X20, [X20 + 0x790]
	0x03819764 TBNZ X8, 0x0, 0x381977C
	0x03819768 ADRP X0, 0x931000
	0x0381976C LDR X0, [X0 + 0x790]
	0x03819770 BL 0x1C16CF4
	0x03819774 MOVZ W8, 0x1
	0x03819778 STRB W8, [X19 + 0x50E]
	0x0381977C LDR X0, [X20]
	0x03819780 BL 0x1C16F10
	0x03819784 MOV X1, X31
	0x03819788 MOV X19, X0
	0x0381978C BL 0x33BDD8C
	0x03819790 LDR X8, [X20]
	0x03819794 LDR X8, [X8 + 0xB8]
	0x03819798 STR X19, [X8]
	0x0381979C LDP X20, X19, [X31 + 0x10]
	0x038197A0 LDR X30, [X31], #0x20
	0x038197A4 RET
	0x038197A8 MOV X1, X31
	0x038197AC B 0x33BDD8C
	0x038197B0 SUB X31, X31, 0x20
	0x038197B4 STP X31, X30, [X31 + 0x8]
	0x038197B8 ADD X0, X31, 0x0
	0x038197BC MOV X2, X31
	0x038197C0 STR X31, [X31]

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+80], X29
	003 Move [X31+88], X30
	004 Move [X31+96], X28
	005 Move [X31+104], X27
	006 Move [X31+112], X26
	007 Move [X31+120], X25
	008 Move [X31+128], X24
	009 Move [X31+136], X23
	010 Move [X31+144], X22
	011 Move [X31+152], X21
	012 Move [X31+160], X20
	013 Move [X31+168], X19
	014 Move X19, 0xBC9000
	015 Move W8, [X19+1273]
	016 Move X21, X3
	017 Move X23, X2
	018 Move X20, X1
	019 Move X22, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {47}
	024 Move X0, 0x932000
	025 Move X0, [X0+2760]
	026 Call 0x1C17CF4
	027 Move X0, 0x92F000
	028 Move X0, [X0+3416]
	029 Call 0x1C17CF4
	030 Move X0, 0x903000
	031 Move X0, [X0+3512]
	032 Call 0x1C17CF4
	033 Move X0, 0x932000
	034 Move X0, [X0+2768]
	035 Call 0x1C17CF4
	036 Move X0, 0x92F000
	037 Move X0, [X0+3448]
	038 Call 0x1C17CF4
	039 Move X0, 0x932000
	040 Move X0, [X0+2008]
	041 Call 0x1C17CF4
	042 Move X0, 0x932000
	043 Move X0, [X0+2776]
	044 Call 0x1C17CF4
	045 Move W8, 1
	046 Move [X19+1273], W8
	047 Move [X31+64], X31
	048 Move [X31+72], X31
	049 Move [X31+48], X31
	050 Move [X31+56], X31
	051 Compare X21, 0
	052 JumpIfEqual {65}
	053 Move X8, 0x932000
	054 Move X8, [X8+2760]
	055 Add X3, X31, 72
	056 Move X0, X21
	057 Move X1, X20
	058 Move X4, [X8]
	059 Move X2, X23
	060 Call Dictionary`2<InternedString, Object>.TryGetValue, X0, X1, X2
	061 Move TEMP, X0
	062 And TEMP, TEMP, 1
	063 Compare TEMP, 1
	064 JumpIfEqual {229}
	065 Move X0, X22
	066 Move X1, X20
	067 Move X2, X23
	068 Call Collection.TryLoadLayoutInternal, X0, X1
	069 Move [X31+72], X0
	070 Compare X0, 0
	071 JumpIfEqual {229}
	072 Move [X0+16], X20
	073 Move [X0+24], X23
	074 Move X0, [X22+40]
	075 Compare X0, 0
	076 JumpIfEqual {218}
	077 Move X8, 0x92F000
	078 Move X8, [X8+3448]
	079 Move X1, X20
	080 Move X2, X23
	081 Move X3, [X8]
	082 Call HashSet`1<InternedString>.Contains, X0, X1
	083 Move X8, [X31+72]
	084 Move TEMP, X0
	085 And TEMP, TEMP, 1
	086 Compare TEMP, 1
	087 JumpIfNotEqual {95}
	088 Compare X8, 0
	089 JumpIfEqual {218}
	090 Move W9, [X8+168]
	091 Or W9, W9, 4
	092 Move [X8+168], W9
	093 Move [X31+56], X31
	094 Move [X31+64], X31
	095 Move [X31+56], X31
	096 Move [X31+64], X31
	097 Compare X8, 0
	098 JumpIfEqual {218}
	099 Move W8, [X8+168]
	100 Move TEMP, X8
	101 And TEMP, TEMP, 4
	102 Compare TEMP, 4
	103 JumpIfEqual {143}
	104 Move X0, [X22+24]
	105 Compare X0, 0
	106 JumpIfEqual {218}
	107 Move X8, 0x903000
	108 Move X8, [X8+3512]
	109 Add X3, X31, 56
	110 Move X1, X20
	111 Move X2, X23
	112 Move X4, [X8]
	113 Call Dictionary`2<InternedString, InternedString>.TryGetValue, X0, X1, X2
	114 Move TEMP, X0
	115 And TEMP, TEMP, 1
	116 Compare TEMP, 1
	117 JumpIfNotEqual {143}
	118 Move X1, [X31+56]
	119 Move X2, [X31+64]
	120 Move X0, X22
	121 Move X3, X21
	122 Call Collection.TryLoadLayout, X0, X1, X2
	123 Compare X0, 0
	124 JumpIfEqual {245}
	125 Move X1, X0
	126 Move X0, [X31+72]
	127 Compare X0, 0
	128 JumpIfEqual {218}
	129 Call InputControlLayout.MergeLayout, X0, X1
	130 Move X8, [X31+72]
	131 Compare X8, 0
	132 JumpIfEqual {218}
	133 Move W9, [X8+72]
	134 Compare W9, 0
	135 JumpIfNotEqual {143}
	136 Move X9, 0x932000
	137 Move X1, [X31+56]
	138 Move X2, [X31+64]
	139 Move X9, [X9+2008]
	140 Add X0, X8, 72
	141 Move X3, [X9]
	142 Call InlinedArray`1<InternedString>.Append, X0, X1
	143 Move X0, [X22+32]
	144 Move [X31+8], X21
	145 Compare X0, 0
	146 JumpIfEqual {218}
	147 Move X8, 0x92F000
	148 Move X8, [X8+3416]
	149 Add X3, X31, 48
	150 Move X1, X20
	151 Move X2, X23
	152 Move X4, [X8]
	153 Move [X31], X23
	154 Call Dictionary`2<InternedString, Object>.TryGetValue, X0, X1, X2
	155 Move TEMP, X0
	156 And TEMP, TEMP, 1
	157 Compare TEMP, 1
	158 JumpIfNotEqual {219}
	159 Move X8, [X31+48]
	160 Compare X8, 0
	161 JumpIfEqual {218}
	162 Move X29, 0x932000
	163 Move X19, 0x932000
	164 Move X29, [X29+2776]
	165 Move X19, [X19+2008]
	166 Move X27, X31
	167 Move X28, X31
	168 Move TEMP, 5
	169 Not TEMP
	170 Move W21, TEMP
	171 Move W9, [X8+24]
	172 NotImplemented "Instruction CMP not yet implemented."
	173 NotImplemented "Instruction CMP not yet implemented."
	174 Add X8, X8, X27
	175 Move X23, [X8+32]
	176 Move X24, [X8+40]
	177 Move X0, X22
	178 Move X3, X31
	179 Move X1, X23
	180 Move X2, X24
	181 Call Collection.TryLoadLayout, X0, X1, X2
	182 Compare X0, 0
	183 JumpIfEqual {218}
	184 Move X1, [X31+72]
	185 Move X25, X0
	186 Call InputControlLayout.MergeLayout, X0, X1
	187 Move X1, [X29]
	188 Add X26, X25, 72
	189 Move X0, X26
	190 Call InlinedArray`1<InternedString>.Clear, X0
	191 Move W9, [X25+168]
	192 And W8, W9, 0xFFFFFFFB
	193 Move [X25+168], W8
	194 Move X8, [X31+72]
	195 Compare X8, 0
	196 JumpIfEqual {218}
	197 Move W10, [X8+168]
	198 And W9, W9, W21
	199 Add X0, X25, 104
	200 Move X1, X23
	201 NotImplemented "Instruction BFM not yet implemented."
	202 Move [X25+168], W9
	203 Move V0, [X8+1]
	204 Move X2, X24
	205 Add X28, X28, 1
	206 Add X27, X27, 16
	207 Move [X25+1], V0
	208 NotImplemented "Instruction LDUR not yet implemented."
	209 NotImplemented "Instruction LDUR not yet implemented."
	210 Move [X26], V1
	211 Move [X26+8], V0
	212 Move X3, [X19]
	213 Move [X31+72], X25
	214 Call InlinedArray`1<InternedString>.Append, X0, X1
	215 Move X8, [X31+48]
	216 Compare X8, 0
	217 JumpIfNotEqual {171}
	218 Call 0x1C17F20
	219 Move X2, [X31]
	220 Move X0, [X31+8]
	221 Compare X0, 0
	222 JumpIfEqual {229}
	223 Move X8, 0x932000
	224 Move X3, [X31+72]
	225 Move X8, [X8+2768]
	226 Move X1, X20
	227 Move X4, [X8]
	228 Call Dictionary`2<InternedString, Object>.set_Item, X0, X1, X2
	229 Move X0, [X31+72]
	230 Move X20, [X31+160]
	231 Move X19, [X31+168]
	232 Move X22, [X31+144]
	233 Move X21, [X31+152]
	234 Move X24, [X31+128]
	235 Move X23, [X31+136]
	236 Move X26, [X31+112]
	237 Move X25, [X31+120]
	238 Move X28, [X31+96]
	239 Move X27, [X31+104]
	240 Move X29, [X31+80]
	241 Move X30, [X31+88]
	242 Add X31, X31, 176
	243 Return X0
	244 Call 0x1C17F28
	245 NotImplemented "Instruction LDUR not yet implemented."
	246 Move X21, 0x906000
	247 Move [X31+2], V0
	248 Move X21, [X21+1296]
	249 Move X0, X21
	250 Call 0x1C17D08
	251 Add X1, X31, 32
	252 Call 0x1C17E04
	253 Move X22, X0
	254 Move X0, X21
	255 Move [X31+16], X20
	256 Move [X31+24], X23
	257 Call 0x1C17D08
	258 Add X1, X31, 16
	259 Call 0x1C17E04
	260 Move X19, X0
	261 Move X0, 0x932000
	262 Move X0, [X0+2784]
	263 Call 0x1C17D08
	264 Move X1, X22
	265 Move X2, X19
	266 Move X3, X31
	267 Call String.Format, X0, X1, X2
	268 Move X19, X0
	269 Move X0, 0x932000
	270 Move X0, [X0+2792]
	271 Call 0x1C17D08
	272 Call 0x1C17F10
	273 Move X1, X19
	274 Move X20, X0
	275 Call LayoutNotFoundException..ctor, X0, X1
	276 Move X0, 0x932000
	277 Move X0, [X0+2800]
	278 Call 0x1C17D08
	279 Move X1, X0
	280 Move X0, X20
	281 Call 0x1C17DEC

Method: UnityEngine.InputSystem.Utilities.InternedString GetBaseLayoutName(UnityEngine.InputSystem.Utilities.InternedString layoutName)

Disassembly:
	0x03819880 STP X20, X19, [X31 + 0x10]
	0x03819884 ADRP X21, 0xBC8000
	0x03819888 ADRP X20, 0x8DE000
	0x0381988C LDRB W8, [X21 + 0x50F]
	0x03819890 LDR X20, [X20 + 0xBF8]
	0x03819894 MOV X19, X0
	0x03819898 TBNZ X8, 0x0, 0x38198B0
	0x0381989C ADRP X0, 0x8DE000
	0x038198A0 LDR X0, [X0 + 0xBF8]
	0x038198A4 BL 0x1C16CF4
	0x038198A8 MOVZ W8, 0x1
	0x038198AC STRB W8, [X21 + 0x50F]
	0x038198B0 LDR X1, [X20]
	0x038198B4 ADD X0, X19, 0x31
	0x038198B8 LDP X20, X19, [X31 + 0x10]
	0x038198BC LDP X30, X21, [X31], #0x20
	0x038198C0 B 0x242D58C
	0x038198C4 STR X30, [X31 - 0x30]!
	0x038198C8 STP X22, X21, [X31 + 0x10]
	0x038198CC STP X20, X19, [X31 + 0x20]
	0x038198D0 ADRP X22, 0xBC8000
	0x038198D4 ADRP X21, 0x8DE000
	0x038198D8 LDRB W8, [X22 + 0x510]
	0x038198DC LDR X21, [X21 + 0xFD8]
	0x038198E0 MOV W20, W1
	0x038198E4 MOV X19, X0
	0x038198E8 TBNZ X8, 0x0, 0x3819900
	0x038198EC ADRP X0, 0x8DE000
	0x038198F0 LDR X0, [X0 + 0xFD8]
	0x038198F4 BL 0x1C16CF4
	0x038198F8 MOVZ W8, 0x1
	0x038198FC STRB W8, [X22 + 0x510]
	0x03819900 LDR X2, [X21]
	0x03819904 AND W1, W20, 0x1
	0x03819908 ADD X0, X31, 0xC

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+32], X22
	004 Move [X31+40], X21
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move X22, 0xBC9000
	008 Move W8, [X22+1274]
	009 Move X19, X2
	010 Move X20, X1
	011 Move X21, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x903000
	017 Move X0, [X0+3512]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+1274], W8
	021 Move [X31], X31
	022 Move [X31+8], X31
	023 Move X0, [X21+24]
	024 Compare X0, 0
	025 JumpIfEqual {45}
	026 Move X8, 0x903000
	027 Move X8, [X8+3512]
	028 Add X3, X31, 0
	029 Move X1, X20
	030 Move X2, X19
	031 Move X4, [X8]
	032 Call Dictionary`2<InternedString, InternedString>.TryGetValue, X0, X1, X2
	033 Move X8, [X31]
	034 Move X9, [X31+8]
	035 Move X20, [X31+48]
	036 Move X19, [X31+56]
	037 Move X22, [X31+32]
	038 Move X21, [X31+40]
	039 Move X30, [X31+16]
	040 And W31, W0, 1
	041 NotImplemented "Instruction CSEL not yet implemented."
	042 NotImplemented "Instruction CSEL not yet implemented."
	043 Add X31, X31, 64
	044 Return X0
	045 Call 0x1C17F20

Method: UnityEngine.InputSystem.Utilities.InternedString GetRootLayoutName(UnityEngine.InputSystem.Utilities.InternedString layoutName)

Disassembly:
	0x0381990C STRH W31, [X31 + 0xC]
	0x03819910 BL 0x242D570
	0x03819914 LDRH W8, [X31 + 0xC]
	0x03819918 LDP X22, X21, [X31 + 0x10]
	0x0381991C STURH W8, [X19 + 0x31]
	0x03819920 LDP X20, X19, [X31 + 0x20]
	0x03819924 LDR X30, [X31], #0x30
	0x03819928 RET
	0x0381992C STP X30, X21, [X31 - 0x20]!
	0x03819930 STP X20, X19, [X31 + 0x10]
	0x03819934 ADRP X21, 0xBC8000
	0x03819938 ADRP X20, 0x8DE000
	0x0381993C LDRB W8, [X21 + 0x511]
	0x03819940 LDR X20, [X20 + 0xBF8]
	0x03819944 MOV X19, X0
	0x03819948 TBNZ X8, 0x0, 0x3819960
	0x0381994C ADRP X0, 0x8DE000
	0x03819950 LDR X0, [X0 + 0xBF8]
	0x03819954 BL 0x1C16CF4
	0x03819958 MOVZ W8, 0x1
	0x0381995C STRB W8, [X21 + 0x511]
	0x03819960 LDR X1, [X20]
	0x03819964 ADD X0, X19, 0x33
	0x03819968 LDP X20, X19, [X31 + 0x10]
	0x0381996C LDP X30, X21, [X31], #0x20
	0x03819970 B 0x242D58C
	0x03819974 STR X30, [X31 - 0x30]!
	0x03819978 STP X22, X21, [X31 + 0x10]
	0x0381997C STP X20, X19, [X31 + 0x20]
	0x03819980 ADRP X22, 0xBC8000
	0x03819984 ADRP X21, 0x8DE000
	0x03819988 LDRB W8, [X22 + 0x512]
	0x0381998C LDR X21, [X21 + 0xFD8]
	0x03819990 MOV W20, W1
	0x03819994 MOV X19, X0
	0x03819998 TBNZ X8, 0x0, 0x38199B0
	0x0381999C ADRP X0, 0x8DE000

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+32], X22
	004 Move [X31+40], X21
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move X22, 0xBC9000
	008 Move W8, [X22+1275]
	009 Move X19, X2
	010 Move X20, X1
	011 Move X21, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x903000
	017 Move X0, [X0+3512]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+1275], W8
	021 Move [X31], X31
	022 Move [X31+8], X31
	023 Move X0, [X21+24]
	024 Compare X0, 0
	025 JumpIfEqual {42}
	026 Move X22, 0x903000
	027 Move X22, [X22+3512]
	028 Move X4, [X22]
	029 Add X3, X31, 0
	030 Move X1, X20
	031 Move X2, X19
	032 Call Dictionary`2<InternedString, InternedString>.TryGetValue, X0, X1, X2
	033 Move TEMP, X0
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfNotEqual {43}
	037 Move X0, [X21+24]
	038 Move X20, [X31]
	039 Move X19, [X31+8]
	040 Compare X0, 0
	041 JumpIfNotEqual {28}
	042 Call 0x1C17F20
	043 Move X0, X20
	044 Move X1, X19
	045 Move X20, [X31+48]
	046 Move X19, [X31+56]
	047 Move X22, [X31+32]
	048 Move X21, [X31+40]
	049 Move X30, [X31+16]
	050 Add X31, X31, 64
	051 Return X0

Method: System.Boolean ComputeDistanceInInheritanceHierarchy(UnityEngine.InputSystem.Utilities.InternedString firstLayout, UnityEngine.InputSystem.Utilities.InternedString secondLayout, out System.Int32 distance)

Disassembly:
	0x038199A0 LDR X0, [X0 + 0xFD8]
	0x038199A4 BL 0x1C16CF4
	0x038199A8 MOVZ W8, 0x1
	0x038199AC STRB W8, [X22 + 0x512]
	0x038199B0 LDR X2, [X21]
	0x038199B4 AND W1, W20, 0x1
	0x038199B8 ADD X0, X31, 0xC
	0x038199BC STRH W31, [X31 + 0xC]
	0x038199C0 BL 0x242D570
	0x038199C4 LDRH W8, [X31 + 0xC]
	0x038199C8 LDP X22, X21, [X31 + 0x10]
	0x038199CC STURH W8, [X19 + 0x33]
	0x038199D0 LDP X20, X19, [X31 + 0x20]
	0x038199D4 LDR X30, [X31], #0x30
	0x038199D8 RET
	0x038199DC LDRB W0, [X0 + 0x35]
	0x038199E0 RET
	0x038199E4 AND W8, W1, 0x1
	0x038199E8 STRB W8, [X0 + 0x35]
	0x038199EC RET
	0x038199F0 LDR X0, [X0 + 0x38]
	0x038199F4 RET
	0x038199F8 STR X1, [X0 + 0x38]
	0x038199FC RET
	0x03819A00 LDR X0, [X0 + 0x40]
	0x03819A04 RET
	0x03819A08 STR X1, [X0 + 0x40]
	0x03819A0C RET
	0x03819A10 LDRB W0, [X0 + 0x48]
	0x03819A14 RET
	0x03819A18 AND W8, W1, 0x1
	0x03819A1C STRB W8, [X0 + 0x48]
	0x03819A20 RET
	0x03819A24 MOV X1, X31
	0x03819A28 B 0x33A51F0
	0x03819A2C SUB X31, X31, 0xA0
	0x03819A30 STR X30, [X31 + 0x50]
	0x03819A34 STP X26, X25, [X31 + 0x60]
	0x03819A38 STP X24, X23, [X31 + 0x70]
	0x03819A3C STP X22, X21, [X31 + 0x80]
	0x03819A40 STP X20, X19, [X31 + 0x90]
	0x03819A44 ADRP X26, 0xBC8000
	0x03819A48 ADRP X25, 0x902000
	0x03819A4C LDRB W8, [X26 + 0x513]
	0x03819A50 LDR X25, [X25 + 0xDC0]
	0x03819A54 MOV X20, X5
	0x03819A58 MOV X21, X4
	0x03819A5C MOV X22, X3
	0x03819A60 MOV X23, X2
	0x03819A64 MOV X24, X1
	0x03819A68 MOV X19, X0
	0x03819A6C TBNZ X8, 0x0, 0x3819A9C
	0x03819A70 ADRP X0, 0x902000
	0x03819A74 LDR X0, [X0 + 0xDC0]
	0x03819A78 BL 0x1C16CF4
	0x03819A7C ADRP X0, 0x931000
	0x03819A80 LDR X0, [X0 + 0xB30]
	0x03819A84 BL 0x1C16CF4
	0x03819A88 ADRP X0, 0x907000
	0x03819A8C LDR X0, [X0 + 0x558]
	0x03819A90 BL 0x1C16CF4
	0x03819A94 MOVZ W8, 0x1
	0x03819A98 STRB W8, [X26 + 0x513]
	0x03819A9C LDR X0, [X25]
	0x03819AA0 LDR W8, [X0 + 0xE0]
	0x03819AA4 CBNZ W8, 0x3819AAC
	0x03819AA8 BL 0x1C16DFC
	0x03819AAC BL 0x3815C88
	0x03819AB0 STRB W0, [X19 + 0x8]
	0x03819AB4 MOV X0, X19
	0x03819AB8 MOV X1, X24
	0x03819ABC MOV X2, X23
	0x03819AC0 MOV X3, X22
	0x03819AC4 MOV X4, X21
	0x03819AC8 MOV X5, X31
	0x03819ACC MOV X6, X31
	0x03819AD0 MOV X7, X31

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X24, X1
	011 Move X22, X0
	012 Add X0, X31, 0
	013 Move X1, X31
	014 Move X19, X5
	015 Move X20, X4
	016 Move X21, X3
	017 Move X23, X2
	018 Move [X5], W31
	019 Move [X31], X3
	020 Move [X31+8], X4
	021 Call InternedString.IsEmpty, X0
	022 Move W25, W31
	023 Move TEMP, X0
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {52}
	027 Move W25, W31
	028 Move X0, [X31]
	029 Move X1, [X31+8]
	030 Move X2, X24
	031 Move X3, X23
	032 Move X4, X31
	033 Call InternedString.op_Inequality, X0, X1
	034 Move TEMP, X0
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfNotEqual {52}
	038 Move X1, [X31]
	039 Move X2, [X31+8]
	040 Move X0, X22
	041 Call Collection.GetBaseLayoutName, X0, X1
	042 Move [X31], X0
	043 Move [X31+8], X1
	044 Add X0, X31, 0
	045 Move X1, X31
	046 Add W25, W25, 1
	047 Call InternedString.IsEmpty, X0
	048 Move TEMP, X0
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfNotEqual {28}
	052 Move X0, [X31]
	053 Move X1, [X31+8]
	054 Move X2, X24
	055 Move X3, X23
	056 Move X4, X31
	057 Call InternedString.op_Equality, X0, X1
	058 Move TEMP, X0
	059 And TEMP, TEMP, 1
	060 Compare TEMP, 1
	061 JumpIfEqual {106}
	062 Add X0, X31, 0
	063 Move X1, X31
	064 Move [X31], X24
	065 Move [X31+8], X23
	066 Call InternedString.IsEmpty, X0
	067 Move W25, W31
	068 Move TEMP, X0
	069 And TEMP, TEMP, 1
	070 Compare TEMP, 1
	071 JumpIfEqual {96}
	072 Move X0, [X31]
	073 Move X1, [X31+8]
	074 Move X2, X21
	075 Move X3, X20
	076 Move X4, X31
	077 Call InternedString.op_Inequality, X0, X1
	078 Move TEMP, X0
	079 And TEMP, TEMP, 1
	080 Compare TEMP, 1
	081 JumpIfNotEqual {96}
	082 Move X1, [X31]
	083 Move X2, [X31+8]
	084 Move X0, X22
	085 Call Collection.GetBaseLayoutName, X0, X1
	086 Move [X31], X0
	087 Move [X31+8], X1
	088 Add X0, X31, 0
	089 Move X1, X31
	090 Add W25, W25, 1
	091 Call InternedString.IsEmpty, X0
	092 Move TEMP, X0
	093 And TEMP, TEMP, 1
	094 Compare TEMP, 1
	095 JumpIfNotEqual {72}
	096 Move X0, [X31]
	097 Move X1, [X31+8]
	098 Move X2, X21
	099 Move X3, X20
	100 Move X4, X31
	101 Call InternedString.op_Equality, X0, X1
	102 Move TEMP, X0
	103 And TEMP, TEMP, 1
	104 Compare TEMP, 1
	105 JumpIfNotEqual {108}
	106 Move W0, 1
	107 Move [X19], W25
	108 Move W0, W31
	109 Move X20, [X31+64]
	110 Move X19, [X31+72]
	111 Move X22, [X31+48]
	112 Move X21, [X31+56]
	113 Move X24, [X31+32]
	114 Move X23, [X31+40]
	115 Move X30, [X31+16]
	116 Move X25, [X31+24]
	117 Add X31, X31, 80
	118 Return X0

Method: UnityEngine.InputSystem.Utilities.InternedString FindLayoutThatIntroducesControl(UnityEngine.InputSystem.InputControl control, UnityEngine.InputSystem.Layouts.InputControlLayout/Cache cache)

Disassembly:
	0x03819AD4 BL 0x3819B80
	0x03819AD8 MOV X0, X19
	0x03819ADC BL 0x3819BEC
	0x03819AE0 LDR X0, [X19 + 0x18]
	0x03819AE4 CBZ X0, 0x3819B7C
	0x03819AE8 ADRP X8, 0x931000
	0x03819AEC LDR X8, [X8 + 0xB30]
	0x03819AF0 LDR X1, [X8]
	0x03819AF4 BL 0x30C32E0
	0x03819AF8 LDP V2, V0, [X20 + 0x10]
	0x03819AFC LDR X9, [X20 + 0x30]
	0x03819B00 LDR V1, [X20]
	0x03819B04 LDR X8, [X19]
	0x03819B08 STP V2, V0, [X31 + 0x20]
	0x03819B0C STR X9, [X31 + 0x40]
	0x03819B10 STR V1, [X31 + 0x1]
	0x03819B14 CBZ X8, 0x3819B7C
	0x03819B18 LDR X9, [X31 + 0x40]
	0x03819B1C LDP V1, V0, [X31 + 0x20]
	0x03819B20 LDR V2, [X31 + 0x1]
	0x03819B24 STR X9, [X8 + 0x120]
	0x03819B28 STP V1, V0, [X8 + 0x100]
	0x03819B2C STR V2, [X8 + 0xF]
	0x03819B30 LDR X0, [X19 + 0x18]
	0x03819B34 CBZ X0, 0x3819B7C
	0x03819B38 ADRP X8, 0x907000
	0x03819B3C LDR X8, [X8 + 0x558]
	0x03819B40 LDR X20, [X19]
	0x03819B44 LDR X1, [X8]
	0x03819B48 BL 0x30C3454
	0x03819B4C CBZ X20, 0x3819B7C
	0x03819B50 STR X0, [X20 + 0x158]
	0x03819B54 LDR X0, [X19]
	0x03819B58 CBZ X0, 0x3819B7C
	0x03819B5C LDP X20, X19, [X31 + 0x90]
	0x03819B60 LDP X22, X21, [X31 + 0x80]
	0x03819B64 LDP X24, X23, [X31 + 0x70]
	0x03819B68 LDP X26, X25, [X31 + 0x60]
	0x03819B6C LDR X30, [X31 + 0x50]
	0x03819B70 MOV X1, X31
	0x03819B74 ADD X31, X31, 0xA0
	0x03819B78 B 0x37734EC
	0x03819B7C BL 0x1C16F20
	0x03819B80 STR X30, [X31 - 0x40]!
	0x03819B84 STP X24, X23, [X31 + 0x10]
	0x03819B88 STP X22, X21, [X31 + 0x20]
	0x03819B8C STP X20, X19, [X31 + 0x30]
	0x03819B90 MOV X24, X0
	0x03819B94 MOV X0, X1
	0x03819B98 MOV X1, X2
	0x03819B9C MOV X2, X31
	0x03819BA0 MOV X19, X7
	0x03819BA4 MOV X20, X6
	0x03819BA8 MOV X21, X5
	0x03819BAC MOV X22, X4
	0x03819BB0 MOV X23, X3
	0x03819BB4 BL 0x37577E0
	0x03819BB8 BL 0x3819ED0
	0x03819BBC MOV X1, X0
	0x03819BC0 MOV X0, X24
	0x03819BC4 MOV X2, X23
	0x03819BC8 MOV X3, X22

ISIL:
	001 Subtract X31, X31, 304
	002 Move [X31+240], X29
	003 Move [X31+248], X2
	004 Move [X31+256], X30
	005 Move [X31+264], X23
	006 Move [X31+272], X22
	007 Move [X31+280], X21
	008 Move [X31+288], X20
	009 Move [X31+296], X19
	010 Move X21, 0xBC9000
	011 Move W8, [X21+1276]
	012 Move X20, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x903000
	019 Move X0, [X0+3512]
	020 Call 0x1C17CF4
	021 Move X0, 0x92E000
	022 Move X0, [X0+3504]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+1276], W8
	026 Move X22, 0x903000
	027 Move X22, [X22+3512]
	028 Move X9, X20
	029 Compare X9, 0
	030 JumpIfEqual {85}
	031 Compare X20, 0
	032 JumpIfEqual {85}
	033 Move X23, X9
	034 Move X9, [X9+128]
	035 Move X8, [X20+120]
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Compare X8, 0
	038 JumpIfEqual {85}
	039 Move X20, [X8+88]
	040 Move X21, [X8+96]
	041 Move [X31+224], X20
	042 Move [X31+232], X21
	043 Move X0, [X19+24]
	044 Compare X0, 0
	045 JumpIfEqual {85}
	046 Move X1, [X31+224]
	047 Move X2, [X31+232]
	048 Move X4, [X22]
	049 Add X3, X31, 224
	050 Call Dictionary`2<InternedString, InternedString>.TryGetValue, X0, X1, X2
	051 Move TEMP, X0
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfNotEqual {74}
	055 Move X0, [X31+224]
	056 Move X1, [X31+232]
	057 Move X2, X31
	058 Call InternedString.op_Implicit, X0
	059 Move X1, X0
	060 Add X0, X31, 248
	061 Move W2, 1
	062 Call Cache.FindOrLoadLayout, X0, X1, X2
	063 Compare X0, 0
	064 JumpIfEqual {85}
	065 Move X1, [X23+32]
	066 Move X2, [X23+40]
	067 Add X8, X31, 8
	068 Call InputControlLayout.FindControl, X0, X1
	069 Move W8, [X31+8]
	070 Compare W8, 0
	071 JumpIfEqual {43}
	072 Move X20, [X31+224]
	073 Move X21, [X31+232]
	074 Move X0, X20
	075 Move X1, X21
	076 Move X20, [X31+288]
	077 Move X19, [X31+296]
	078 Move X22, [X31+272]
	079 Move X21, [X31+280]
	080 Move X30, [X31+256]
	081 Move X23, [X31+264]
	082 Move X29, [X31+240]
	083 Add X31, X31, 304
	084 Return X0
	085 Call 0x1C17F20

Method: System.Type GetControlTypeForLayout(UnityEngine.InputSystem.Utilities.InternedString layoutName)

Disassembly:
	0x03819CE8 BL 0x1C16D6C
	0x03819CEC CBZ X21, 0x3819D6C
	0x03819CF0 STR X0, [X21 + 0x160]
	0x03819CF4 LDR X8, [X19]
	0x03819CF8 CBZ X8, 0x3819D6C
	0x03819CFC LDR X8, [X8 + 0x160]
	0x03819D00 CBZ X8, 0x3819D6C
	0x03819D04 LDR W9, [X8 + 0x18]
	0x03819D08 CBZ W9, 0x3819E38
	0x03819D0C LDRB W9, [X31 + 0x1E]
	0x03819D10 LDRH W10, [X31 + 0x1C]
	0x03819D14 LDR W11, [X31 + 0x18]
	0x03819D18 BFM W10, W9, 0x10, 0xF
	0x03819D1C BFM X11, X10, 0x20, 0x1F
	0x03819D20 UBFM X9, X11, 0x30, 0x3F
	0x03819D24 UBFM X10, X11, 0x20, 0x3F
	0x03819D28 STR W11, [X8 + 0x20]
	0x03819D2C STRB W9, [X8 + 0x26]
	0x03819D30 STRH W10, [X8 + 0x24]
	0x03819D34 STR W31, [X31 + 0x14]
	0x03819D38 LDR X1, [X19]
	0x03819D3C CBZ X1, 0x3819D6C
	0x03819D40 LDR X3, [X1 + 0x150]
	0x03819D44 ADD X6, X31, 0x14
	0x03819D48 MOVN W2, 0x0
	0x03819D4C MOV X0, X19
	0x03819D50 MOV W4, W31
	0x03819D54 MOV W5, W31
	0x03819D58 BL 0x381C9D4
	0x03819D5C LDP X20, X19, [X31 + 0x30]
	0x03819D60 LDP X30, X21, [X31 + 0x20]
	0x03819D64 ADD X31, X31, 0x40
	0x03819D68 RET
	0x03819D6C BL 0x1C16F20
	0x03819D70 MOVZ W8, 0x400
	0x03819D74 LDR X20, [X19]
	0x03819D78 STR W8, [X31 + 0x10]
	0x03819D7C ADRP X0, 0x8E2000
	0x03819D80 LDR X0, [X0 + 0x720]
	0x03819D84 BL 0x1C16D08
	0x03819D88 ADD X1, X31, 0x10
	0x03819D8C BL 0x1C16E04
	0x03819D90 LDR X19, [X19]
	0x03819D94 MOV X21, X0
	0x03819D98 MOV X0, X19
	0x03819D9C BL 0x19903C0
	0x03819DA0 MOV X0, X19
	0x03819DA4 MOV X1, X31
	0x03819DA8 BL 0x377AAE8
	0x03819DAC ADRP X0, 0x902000
	0x03819DB0 LDR X0, [X0 + 0xD40]
	0x03819DB4 MOV X19, X1
	0x03819DB8 BL 0x1C16D08
	0x03819DBC UBFM X8, X19, 0x20, 0x3F
	0x03819DC0 STR W8, [X31 + 0xC]
	0x03819DC4 ADRP X0, 0x8DA000
	0x03819DC8 LDR X0, [X0 + 0x758]
	0x03819DCC BL 0x1C16D08
	0x03819DD0 ADD X1, X31, 0xC
	0x03819DD4 BL 0x1C16E04
	0x03819DD8 MOV X19, X0
	0x03819DDC ADRP X0, 0x931000
	0x03819DE0 LDR X0, [X0 + 0xB38]
	0x03819DE4 BL 0x1C16D08
	0x03819DE8 MOV X1, X20
	0x03819DEC MOV X2, X21
	0x03819DF0 MOV X3, X19
	0x03819DF4 MOV X4, X31
	0x03819DF8 BL 0x3227C18
	0x03819DFC MOV X19, X0
	0x03819E00 ADRP X0, 0x8DA000
	0x03819E04 LDR X0, [X0 + 0xB40]
	0x03819E08 BL 0x1C16D08
	0x03819E0C BL 0x1C16F10
	0x03819E10 MOV X1, X19
	0x03819E14 MOV X2, X31
	0x03819E18 MOV X20, X0
	0x03819E1C BL 0x3379A44
	0x03819E20 ADRP X0, 0x931000
	0x03819E24 LDR X0, [X0 + 0xB40]
	0x03819E28 BL 0x1C16D08
	0x03819E2C MOV X1, X0
	0x03819E30 MOV X0, X20

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+32], X24
	004 Move [X31+40], X23
	005 Move [X31+48], X22
	006 Move [X31+56], X21
	007 Move [X31+64], X20
	008 Move [X31+72], X19
	009 Move X22, 0xBC9000
	010 Move W8, [X22+1277]
	011 Move X19, X2
	012 Move X20, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {35}
	018 Move X0, 0x932000
	019 Move X0, [X0+2232]
	020 Call 0x1C17CF4
	021 Move X0, 0x92E000
	022 Move X0, [X0+1760]
	023 Call 0x1C17CF4
	024 Move X0, 0x903000
	025 Move X0, [X0+3512]
	026 Call 0x1C17CF4
	027 Move X0, 0x930000
	028 Move X0, [X0+232]
	029 Call 0x1C17CF4
	030 Move X0, 0x8DB000
	031 Move X0, [X0+1728]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X22+1277], W8
	035 Move [X31+24], X31
	036 Move [X31], X31
	037 Move [X31+8], X31
	038 Move X0, [X21+8]
	039 Compare X0, 0
	040 JumpIfEqual {103}
	041 Move X22, 0x92E000
	042 Move X23, 0x932000
	043 Move X24, 0x903000
	044 Move X22, [X22+1760]
	045 Move X23, [X23+2232]
	046 Move X24, [X24+3512]
	047 Move X3, [X23]
	048 Move X1, X20
	049 Move X2, X19
	050 Call Dictionary`2<InternedString, Object>.ContainsKey, X0, X1
	051 Move TEMP, X0
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfNotEqual {72}
	055 Move X0, [X21+24]
	056 Compare X0, 0
	057 JumpIfEqual {103}
	058 Move X4, [X24]
	059 Add X3, X31, 0
	060 Move X1, X20
	061 Move X2, X19
	062 Call Dictionary`2<InternedString, InternedString>.TryGetValue, X0, X1, X2
	063 Move TEMP, X0
	064 And TEMP, TEMP, 1
	065 Compare TEMP, 1
	066 JumpIfNotEqual {81}
	067 Move X0, [X21+8]
	068 Move X20, [X31]
	069 Move X19, [X31+8]
	070 Compare X0, 0
	071 JumpIfNotEqual {47}
	072 Move X0, [X21]
	073 Compare X0, 0
	074 JumpIfEqual {103}
	075 Move X4, [X22]
	076 Add X3, X31, 24
	077 Move X1, X20
	078 Move X2, X19
	079 Call Dictionary`2<InternedString, Object>.TryGetValue, X0, X1, X2
	080 Move X0, [X31+24]
	081 Move X8, 0x8DB000
	082 Move X8, [X8+1728]
	083 Move X0, [X8]
	084 Move X8, 0x930000
	085 Move X8, [X8+232]
	086 Move W9, [X0+224]
	087 Move X19, [X8]
	088 Compare W9, 0
	089 JumpIfNotEqual {91}
	090 Call 0x1C17DFC
	091 Move X0, X19
	092 Move X1, X31
	093 Call Type.GetTypeFromHandle, X0
	094 Move X20, [X31+64]
	095 Move X19, [X31+72]
	096 Move X22, [X31+48]
	097 Move X21, [X31+56]
	098 Move X24, [X31+32]
	099 Move X23, [X31+40]
	100 Move X30, [X31+16]
	101 Add X31, X31, 80
	102 Return X0
	103 Call 0x1C17F20

Method: System.Boolean ValueTypeIsAssignableFrom(UnityEngine.InputSystem.Utilities.InternedString layoutName, System.Type valueType)

Disassembly:
	0x03819E34 BL 0x1C16DEC
	0x03819E38 BL 0x1C16F28
	0x03819E3C STP X30, X19, [X31 - 0x10]!
	0x03819E40 LDR X19, [X0]
	0x03819E44 BL 0x3819E54
	0x03819E48 MOV X0, X19
	0x03819E4C LDP X30, X19, [X31], #0x10
	0x03819E50 RET
	0x03819E54 STR X30, [X31 - 0x20]!
	0x03819E58 STP X20, X19, [X31 + 0x10]
	0x03819E5C ADRP X20, 0xBC8000
	0x03819E60 LDRB W8, [X20 + 0x514]
	0x03819E64 MOV X19, X0
	0x03819E68 TBNZ X8, 0x0, 0x3819E8C
	0x03819E6C ADRP X0, 0x931000
	0x03819E70 LDR X0, [X0 + 0xB48]
	0x03819E74 BL 0x1C16CF4
	0x03819E78 ADRP X0, 0x931000
	0x03819E7C LDR X0, [X0 + 0xB50]
	0x03819E80 BL 0x1C16CF4
	0x03819E84 MOVZ W8, 0x1
	0x03819E88 STRB W8, [X20 + 0x514]
	0x03819E8C LDR X0, [X19 + 0x10]
	0x03819E90 STR X31, [X19]
	0x03819E94 CBZ X0, 0x3819EA8
	0x03819E98 ADRP X8, 0x931000
	0x03819E9C LDR X8, [X8 + 0xB48]
	0x03819EA0 LDR X1, [X8]
	0x03819EA4 BL 0x2ACA4C8
	0x03819EA8 LDR X8, [X19 + 0x18]
	0x03819EAC CBZ X8, 0x3819EBC
	0x03819EB0 LDR W9, [X8 + 0x1C]
	0x03819EB4 ADD W9, W9, 0x1
	0x03819EB8 STP W31, W9, [X8 + 0x18]
	0x03819EBC LDP X20, X19, [X31 + 0x10]
	0x03819EC0 LDR X30, [X31], #0x20
	0x03819EC4 RET
	0x03819EC8 ADD X0, X0, 0x8
	0x03819ECC B 0x38196B4
	0x03819ED0 STP X30, X21, [X31 - 0x20]!
	0x03819ED4 STP X20, X19, [X31 + 0x10]
	0x03819ED8 ADRP X20, 0xBC8000
	0x03819EDC ADRP X21, 0x902000
	0x03819EE0 LDRB W8, [X20 + 0x51F]
	0x03819EE4 LDR X21, [X21 + 0xDC0]
	0x03819EE8 MOV X19, X0
	0x03819EEC TBNZ X8, 0x0, 0x3819F04
	0x03819EF0 ADRP X0, 0x902000
	0x03819EF4 LDR X0, [X0 + 0xDC0]
	0x03819EF8 BL 0x1C16CF4
	0x03819EFC MOVZ W8, 0x1
	0x03819F00 STRB W8, [X20 + 0x51F]
	0x03819F04 LDR X0, [X21]
	0x03819F08 LDR W8, [X0 + 0xE0]
	0x03819F0C CBNZ W8, 0x3819F14
	0x03819F10 BL 0x1C16DFC
	0x03819F14 BL 0x3815C30
	0x03819F18 MOV X1, X19
	0x03819F1C LDP X20, X19, [X31 + 0x10]
	0x03819F20 MOVZ W2, 0x1
	0x03819F24 LDP X30, X21, [X31], #0x20
	0x03819F28 B 0x3818BCC
	0x03819F2C SUB X31, X31, 0x80
	0x03819F30 STP X30, X25, [X31 + 0x40]
	0x03819F34 STP X24, X23, [X31 + 0x50]
	0x03819F38 STP X22, X21, [X31 + 0x60]
	0x03819F3C STP X20, X19, [X31 + 0x70]
	0x03819F40 ADRP X20, 0xBC8000
	0x03819F44 LDRB W8, [X20 + 0x515]
	0x03819F48 MOV X22, X6
	0x03819F4C MOV X19, X1
	0x03819F50 MOV X21, X0
	0x03819F54 STP X2, X3, [X31 + 0x30]
	0x03819F58 STP X4, X5, [X31 + 0x20]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0xBC9000
	009 Move X23, 0x8DB000
	010 Move W8, [X24+1278]
	011 Move X23, [X23+1728]
	012 Move X19, X3
	013 Move X20, X2
	014 Move X21, X1
	015 Move X22, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {28}
	020 Move X0, 0x932000
	021 Move X0, [X0+1856]
	022 Call 0x1C17CF4
	023 Move X0, 0x8DB000
	024 Move X0, [X0+1728]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X24+1278], W8
	028 Move X0, X22
	029 Move X1, X21
	030 Move X2, X20
	031 Call Collection.GetControlTypeForLayout, X0, X1
	032 Move X8, [X23]
	033 Move X20, X0
	034 Move W9, [X8+224]
	035 Compare W9, 0
	036 JumpIfNotEqual {39}
	037 Move X0, X8
	038 Call 0x1C17DFC
	039 Move X0, X20
	040 Move X1, X31
	041 Move X2, X31
	042 Call Type.op_Equality, X0, X1
	043 Move TEMP, X0
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfEqual {71}
	047 Move X8, 0x932000
	048 Move X0, [X23]
	049 Move X8, [X8+1856]
	050 Move W9, [X0+224]
	051 Move X21, [X8]
	052 Compare W9, 0
	053 JumpIfNotEqual {55}
	054 Call 0x1C17DFC
	055 Move X0, X21
	056 Move X1, X31
	057 Call Type.GetTypeFromHandle, X0
	058 Move X1, X0
	059 Move X0, X20
	060 Move W2, W31
	061 Move X3, X31
	062 Call TypeHelpers.GetGenericTypeArgumentFromHierarchy, X0, X1, X2
	063 Move X1, X31
	064 Move X2, X31
	065 Move X20, X0
	066 Call Type.op_Equality, X0, X1
	067 Move TEMP, X0
	068 And TEMP, TEMP, 1
	069 Compare TEMP, 1
	070 JumpIfNotEqual {80}
	071 Move X20, [X31+48]
	072 Move X19, [X31+56]
	073 Move X22, [X31+32]
	074 Move X21, [X31+40]
	075 Move X24, [X31+16]
	076 Move X23, [X31+24]
	077 Move W0, W31
	078 Move X30, [X31+64]
	079 Return X0
	080 Compare X19, 0
	081 JumpIfEqual {95}
	082 Move X8, [X19]
	083 Move X0, X19
	084 Move X1, X20
	085 Move X20, [X31+48]
	086 Move X19, [X31+56]
	087 Move X3, [X8+680]
	088 Move X2, [X8+688]
	089 Move X22, [X31+32]
	090 Move X21, [X31+40]
	091 Move X24, [X31+16]
	092 Move X23, [X31+24]
	093 Move X30, [X31+64]
	094 CallNoReturn X3
	095 Call 0x1C17F20

Method: System.Boolean IsGeneratedLayout(UnityEngine.InputSystem.Utilities.InternedString layout)

Disassembly:
	0x03819F5C TBNZ X8, 0x0, 0x3819FB0
	0x03819F60 ADRP X0, 0x902000
	0x03819F64 LDR X0, [X0 + 0xDC0]
	0x03819F68 BL 0x1C16CF4
	0x03819F6C ADRP X0, 0x931000
	0x03819F70 LDR X0, [X0 + 0xB58]
	0x03819F74 BL 0x1C16CF4
	0x03819F78 ADRP X0, 0x92D000
	0x03819F7C LDR X0, [X0 + 0xB88]
	0x03819F80 BL 0x1C16CF4
	0x03819F84 ADRP X0, 0x902000
	0x03819F88 LDR X0, [X0 + 0xD18]
	0x03819F8C BL 0x1C16CF4
	0x03819F90 ADRP X0, 0x8E4000
	0x03819F94 LDR X0, [X0 + 0x170]
	0x03819F98 BL 0x1C16CF4
	0x03819F9C ADRP X0, 0x8DE000
	0x03819FA0 LDR X0, [X0 + 0xBF0]
	0x03819FA4 BL 0x1C16CF4
	0x03819FA8 MOVZ W8, 0x1
	0x03819FAC STRB W8, [X20 + 0x515]
	0x03819FB0 STRB W31, [X31 + 0x1C]
	0x03819FB4 CBZ X19, 0x381A340
	0x03819FB8 LDR X0, [X19 + 0x20]
	0x03819FBC MOV X1, X31
	0x03819FC0 BL 0x33A703C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xBC9000
	007 Move W8, [X22+1279]
	008 Move X19, X2
	009 Move X20, X1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x932000
	016 Move X0, [X0+2240]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+1279], W8
	020 Move X0, [X21+16]
	021 Compare X0, 0
	022 JumpIfEqual {35}
	023 Move X8, 0x932000
	024 Move X8, [X8+2240]
	025 Move X1, X20
	026 Move X2, X19
	027 Move X20, [X31+32]
	028 Move X19, [X31+40]
	029 Move X3, [X8]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Call Dictionary`2<InternedString, Object>.ContainsKey, X0, X1
	034 Return X0
	035 Call 0x1C17F20

Method: System.Collections.Generic.IEnumerable`1<UnityEngine.InputSystem.Utilities.InternedString> GetBaseLayouts(UnityEngine.InputSystem.Utilities.InternedString layout, System.Boolean includeSelf = True)

Disassembly:
	0x03819FC4 CBZ X0, 0x381A344
	0x03819FC8 ADRP X8, 0x931000
	0x03819FCC LDR X8, [X8 + 0xB58]
	0x03819FD0 LDR X9, [X0]
	0x03819FD4 MOV X20, X0
	0x03819FD8 LDR X10, [X8]
	0x03819FDC LDRB W8, [X9 + 0x130]
	0x03819FE0 LDRB W11, [X10 + 0x130]
	0x03819FE4 CMP W8, W11
	0x03819FE8 B.CC 0x381A344
	0x03819FEC LDR X9, [X9 + 0xC8]
	0x03819FF0 ADD X11, X9, X11, 0x3, LSL
	0x03819FF4 LDUR X11, [X11 - 0x8]
	0x03819FF8 CMP X11, X10
	0x03819FFC B.NE 0x381A344
	0x0381A000 ADRP X24, 0x92C000
	0x0381A004 LDR X24, [X24 + 0xB88]
	0x0381A008 LDR X10, [X24]
	0x0381A00C LDRB W11, [X10 + 0x130]
	0x0381A010 CMP W8, W11
	0x0381A014 B.CC 0x381A028
	0x0381A018 ADD X8, X9, X11, 0x3, LSL
	0x0381A01C LDUR X8, [X8 - 0x8]
	0x0381A020 CMP X8, X10
	0x0381A024 B.EQ 0x381A270
	0x0381A028 CBZ X22, 0x381A3B4
	0x0381A02C ADD X0, X31, 0x20
	0x0381A030 MOV X1, X31
	0x0381A034 BL 0x375F7A0
	0x0381A038 TBZ X0, 0x0, 0x381A098
	0x0381A03C LDR V0, [X19 + 0x1]
	0x0381A040 ADD X0, X31, 0x20
	0x0381A044 MOV X1, X31
	0x0381A048 STR V0, [X31 + 0x2]
	0x0381A04C BL 0x37565F4
	0x0381A050 CBZ X0, 0x381A340
	0x0381A054 MOVZ W1, 0x3A
	0x0381A058 MOV X2, X31
	0x0381A05C BL 0x322C668
	0x0381A060 ADDS W31, W0, 0x1
	0x0381A064 B.EQ 0x381A098

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0xBC9000
	009 Move X23, 0x932000
	010 Move W8, [X24+1280]
	011 Move X23, [X23+2840]
	012 Move W22, W3
	013 Move X19, X2
	014 Move X20, X1
	015 Move X21, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0x932000
	021 Move X0, [X0+2840]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X24+1280], W8
	025 Move X0, [X23]
	026 And W23, W22, 1
	027 Call 0x1C17F10
	028 Move X1, X31
	029 Move X22, X0
	030 Call Object..ctor, X0
	031 Move TEMP, 1
	032 Not TEMP
	033 Move W8, TEMP
	034 Move X0, X31
	035 Move [X22+16], W8
	036 Call Environment.get_CurrentManagedThreadId
	037 Move [X22+40], W0
	038 Move V0, [X21+32]
	039 Move V1, [X21+48]
	040 Move V3, [X21]
	041 Move V2, [X21+16]
	042 Move [X22+64], X20
	043 Move [X22+72], X19
	044 Move [X22+45], W23
	045 Move [X22+176], V0
	046 Move [X22+184], V1
	047 Move [X22+144], V3
	048 Move [X22+152], V2
	049 Move X0, X22
	050 Move X20, [X31+48]
	051 Move X19, [X31+56]
	052 Move X22, [X31+32]
	053 Move X21, [X31+40]
	054 Move X24, [X31+16]
	055 Move X23, [X31+24]
	056 Move X30, [X31+64]
	057 Return X0

Method: System.Boolean IsBasedOn(UnityEngine.InputSystem.Utilities.InternedString parentLayout, UnityEngine.InputSystem.Utilities.InternedString childLayout)

Disassembly:
	0x0381A09C MOV X1, X31
	0x0381A0A0 BL 0x37565F4
	0x0381A0A4 CBZ X0, 0x381A340
	0x0381A0A8 MOVZ W1, 0x2F
	0x0381A0AC MOV X2, X31
	0x0381A0B0 BL 0x322BD98
	0x0381A0B4 ADDS W31, W0, 0x1
	0x0381A0B8 B.EQ 0x381A0E0
	0x0381A0BC ADD X0, X31, 0x20
	0x0381A0C0 MOV X1, X31
	0x0381A0C4 BL 0x37565F4
	0x0381A0C8 MOV X1, X31
	0x0381A0CC BL 0x3776C70
	0x0381A0D0 MOV X1, X0
	0x0381A0D4 ADD X0, X31, 0x20
	0x0381A0D8 MOV X2, X31
	0x0381A0DC BL 0x3757420
	0x0381A0E0 ADD X0, X31, 0x30
	0x0381A0E4 MOV X1, X31
	0x0381A0E8 BL 0x375F7A0
	0x0381A0EC TBZ X0, 0x0, 0x381A160
	0x0381A0F0 LDUR V0, [X19 + 0x28]
	0x0381A0F4 ADD X0, X31, 0x30
	0x0381A0F8 MOV X1, X31
	0x0381A0FC STR V0, [X31 + 0x3]
	0x0381A100 BL 0x375F7A0
	0x0381A104 TBZ X0, 0x0, 0x381A160
	0x0381A108 ADRP X23, 0x901000
	0x0381A10C LDR X23, [X23 + 0xDC0]
	0x0381A110 LDR X0, [X23]
	0x0381A114 LDR W8, [X0 + 0xE0]
	0x0381A118 CBNZ W8, 0x381A120
	0x0381A11C BL 0x1C16DFC
	0x0381A120 ADRP X25, 0xBC7000
	0x0381A124 LDRB W8, [X25 + 0x52E]
	0x0381A128 CBNZ W8, 0x381A140
	0x0381A12C ADRP X0, 0x901000
	0x0381A130 LDR X0, [X0 + 0xDC0]
	0x0381A134 BL 0x1C16CF4
	0x0381A138 MOVZ W8, 0x1
	0x0381A13C STRB W8, [X25 + 0x52E]
	0x0381A140 LDR X0, [X23]
	0x0381A144 LDR W8, [X0 + 0xE0]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+32], X24
	004 Move [X31+40], X23
	005 Move [X31+48], X22
	006 Move [X31+56], X21
	007 Move [X31+64], X20
	008 Move [X31+72], X19
	009 Move X24, 0xBC8000
	010 Move W8, [X24+1281]
	011 Move X22, X4
	012 Move X23, X3
	013 Move X19, X2
	014 Move X20, X1
	015 Move X21, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0x902000
	021 Move X0, [X0+3512]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X24+1281], W8
	025 Move X24, 0x902000
	026 Move X24, [X24+3512]
	027 Move [X31], X23
	028 Move [X31+8], X22
	029 Move X0, [X21+24]
	030 Compare X0, 0
	031 JumpIfEqual {62}
	032 Move X1, [X31]
	033 Move X2, [X31+8]
	034 Move X4, [X24]
	035 Add X3, X31, 0
	036 Call Dictionary`2<InternedString, InternedString>.TryGetValue, X0, X1, X2
	037 Move W22, W0
	038 Move TEMP, X0
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfNotEqual {52}
	042 Move X0, [X31]
	043 Move X1, [X31+8]
	044 Move X2, X20
	045 Move X3, X19
	046 Move X4, X31
	047 Call InternedString.op_Equality, X0, X1
	048 Move TEMP, X0
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfNotEqual {29}
	052 And W0, W22, 1
	053 Move X20, [X31+64]
	054 Move X19, [X31+72]
	055 Move X22, [X31+48]
	056 Move X21, [X31+56]
	057 Move X24, [X31+32]
	058 Move X23, [X31+40]
	059 Move X30, [X31+16]
	060 Add X31, X31, 80
	061 Return X0
	062 Call 0x1C17F20

Method: System.Void AddMatcher(UnityEngine.InputSystem.Utilities.InternedString layout, UnityEngine.InputSystem.Layouts.InputDeviceMatcher matcher)

Disassembly:
	0x0381A148 CBNZ W8, 0x381A154
	0x0381A14C BL 0x1C16DFC
	0x0381A150 LDR X0, [X23]
	0x0381A154 LDR X8, [X0 + 0xB8]
	0x0381A158 LDR V0, [X8]
	0x0381A15C STR V0, [X31 + 0x3]
	0x0381A160 LDR V0, [X31 + 0x2]
	0x0381A164 LDR X9, [X20]
	0x0381A168 STR V0, [X20 + 0x2]
	0x0381A16C LDR X8, [X19 + 0x98]
	0x0381A170 STR X8, [X20 + 0x40]
	0x0381A174 LDR V0, [X19 + 0x1]
	0x0381A178 STUR V0, [X20 + 0x58]
	0x0381A17C LDR V0, [X31 + 0x3]
	0x0381A180 STR X22, [X20 + 0x80]
	0x0381A184 STUR V0, [X20 + 0x68]
	0x0381A188 LDR X8, [X21]
	0x0381A18C STR X8, [X20 + 0x78]
	0x0381A190 LDR X8, [X24]
	0x0381A194 LDRB W11, [X9 + 0x130]
	0x0381A198 LDRB W10, [X8 + 0x130]
	0x0381A19C CMP W11, W10
	0x0381A1A0 B.CC 0x381A1CC
	0x0381A1A4 LDR X9, [X9 + 0xC8]
	0x0381A1A8 ADD X9, X9, X10, 0x3, LSL
	0x0381A1AC LDUR X9, [X9 - 0x8]
	0x0381A1B0 CMP X9, X8
	0x0381A1B4 B.NE 0x381A1CC
	0x0381A1B8 LDR W8, [X19 + 0xA8]
	0x0381A1BC MOV X0, X20
	0x0381A1C0 MOV X2, X31
	0x0381A1C4 UBFM W1, W8, 0x5, 0x5
	0x0381A1C8 BL 0x377222C
	0x0381A1CC LDP X2, X3, [X31 + 0x30]
	0x0381A1D0 STRB W31, [X31 + 0x1C]
	0x0381A1D4 ADD X5, X31, 0x1C
	0x0381A1D8 MOV X0, X21
	0x0381A1DC MOV X1, X19
	0x0381A1E0 MOV X4, X20
	0x0381A1E4 BL 0x381A500
	0x0381A1E8 MOV X0, X20
	0x0381A1EC BL 0x381ABB8
	0x0381A1F0 LDRB W8, [X31 + 0x1C]
	0x0381A1F4 CBZ W8, 0x381A254
	0x0381A1F8 LDR X21, [X19 + 0x90]
	0x0381A1FC CBZ X21, 0x381A340
	0x0381A200 LDR X8, [X21 + 0x18]
	0x0381A204 CMP W8, 0x1
	0x0381A208 B.LT 0x381A254
	0x0381A20C MOV X22, X31
	0x0381A210 AND X8, X8, 0x0
	0x0381A214 ADD X23, X21, 0x50
	0x0381A218 CMP X22, W8, UXTW
	0x0381A21C B.CS 0x381A33C
	0x0381A220 LDR X0, [X23]
	0x0381A224 MOV X1, X31
	0x0381A228 BL 0x32277A8
	0x0381A22C TBNZ X0, 0x0, 0x381A240
	0x0381A230 SUB X1, X23, 0x30
	0x0381A234 MOV X0, X20
	0x0381A238 MOV X2, X19
	0x0381A23C BL 0x381B4C4
	0x0381A240 LDR W8, [X21 + 0x18]
	0x0381A244 ADD X22, X22, 0x1
	0x0381A248 ADD X23, X23, 0xD0
	0x0381A24C CMP X22, W8, SXTW
	0x0381A250 B.LT 0x381A218
	0x0381A254 MOV X0, X20
	0x0381A258 LDP X20, X19, [X31 + 0x70]
	0x0381A25C LDP X22, X21, [X31 + 0x60]
	0x0381A260 LDP X24, X23, [X31 + 0x50]
	0x0381A264 LDP X30, X25, [X31 + 0x40]
	0x0381A268 ADD X31, X31, 0x80
	0x0381A26C RET
	0x0381A270 CBNZ X22, 0x381A430
	0x0381A274 STR X20, [X21]
	0x0381A278 ADRP X8, 0x901000
	0x0381A27C LDR X8, [X8 + 0xD18]
	0x0381A280 LDR X0, [X8]
	0x0381A284 LDR W8, [X0 + 0xE0]
	0x0381A288 CBZ W8, 0x381A298
	0x0381A28C STR W31, [X20 + 0x14]
	0x0381A290 MOV X8, X20
	0x0381A294 B 0x381A2A8
	0x0381A298 BL 0x1C16DFC
	0x0381A29C LDR X8, [X21]
	0x0381A2A0 STR W31, [X20 + 0x14]
	0x0381A2A4 CBZ X8, 0x381A340
	0x0381A2A8 STR W31, [X8 + 0x18]
	0x0381A2AC LDR W9, [X19 + 0x38]
	0x0381A2B0 STR W9, [X8 + 0x10]
	0x0381A2B4 LDR X8, [X21]
	0x0381A2B8 CBZ X8, 0x381A340
	0x0381A2BC ADD X9, X8, 0x138

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+32], X30
	003 Move [X31+40], X27
	004 Move [X31+48], X26
	005 Move [X31+56], X25
	006 Move [X31+64], X24
	007 Move [X31+72], X23
	008 Move [X31+80], X22
	009 Move [X31+88], X21
	010 Move [X31+96], X20
	011 Move [X31+104], X19
	012 Move X23, 0xBC8000
	013 Move W8, [X23+1282]
	014 Move X19, X3
	015 Move X20, X2
	016 Move X21, X1
	017 Move X22, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {36}
	022 Move X0, 0x902000
	023 Move X0, [X0+3776]
	024 Call 0x1C17CF4
	025 Move X0, 0x931000
	026 Move X0, [X0+2848]
	027 Call 0x1C17CF4
	028 Move X0, 0x931000
	029 Move X0, [X0+2712]
	030 Call 0x1C17CF4
	031 Move X0, 0x931000
	032 Move X0, [X0+2720]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X23+1282], W8
	036 Move X0, [X22+56]
	037 Compare X0, 0
	038 JumpIfEqual {115}
	039 Move W25, [X0+24]
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move X26, 0x931000
	042 Move X27, 0x902000
	043 Move X26, [X26+2720]
	044 Move X27, [X27+3776]
	045 Move W8, W31
	046 Move W23, W31
	047 Move TEMP, X8
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfEqual {115}
	051 Move X2, [X26]
	052 Add X8, X31, 8
	053 Move W1, W23
	054 Call List`1<LayoutMatcher>.get_Item, X0, X1
	055 Move X0, [X27]
	056 Move X24, [X31+24]
	057 Move W8, [X0+224]
	058 Compare W8, 0
	059 JumpIfNotEqual {61}
	060 Call 0x1C17DFC
	061 Move X0, X24
	062 Move X1, X19
	063 Move X2, X31
	064 Call InputDeviceMatcher.op_Equality, X0, X1
	065 Move TEMP, X0
	066 And TEMP, TEMP, 1
	067 Compare TEMP, 1
	068 JumpIfEqual {103}
	069 Move X0, [X22+56]
	070 Add W23, W23, 1
	071 NotImplemented "Instruction CMP not yet implemented."
	072 NotImplemented "Instruction CSET not yet implemented."
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Compare X0, 0
	075 JumpIfEqual {115}
	076 Move X9, 0x931000
	077 Move X9, [X9+2848]
	078 Move W10, [X0+28]
	079 Move X8, [X0+16]
	080 Move X9, [X9]
	081 Add W10, W10, 1
	082 Move [X0+28], W10
	083 Compare X8, 0
	084 JumpIfEqual {115}
	085 NotImplemented "Instruction LDRSW not yet implemented."
	086 Move W11, [X8+24]
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Move W11, 24
	089 Add W9, W10, 1
	090 NotImplemented "Instruction MADD not yet implemented."
	091 Move [X0+24], W9
	092 Move [X8+32], X21
	093 Move [X8+40], X20
	094 Move [X8+48], X19
	095 Move X8, [X9+32]
	096 Add X1, X31, 8
	097 Move X8, [X8+192]
	098 Move X2, [X8+112]
	099 Move [X31+8], X21
	100 Move [X31+16], X20
	101 Move [X31+24], X19
	102 Call List`1<LayoutMatcher>.AddWithResize, X0, X1
	103 Move X20, [X31+96]
	104 Move X19, [X31+104]
	105 Move X22, [X31+80]
	106 Move X21, [X31+88]
	107 Move X24, [X31+64]
	108 Move X23, [X31+72]
	109 Move X26, [X31+48]
	110 Move X25, [X31+56]
	111 Move X30, [X31+32]
	112 Move X27, [X31+40]
	113 Add X31, X31, 112
	114 Return 
	115 Call 0x1C17F20

