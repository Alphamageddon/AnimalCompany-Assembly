Type: UnityEngine.InputSystem.Layouts.InputDeviceMatcher/<>c

Method: System.Void .cctor()

Disassembly:
	0x03758C8C MOV X0, X19
	0x03758C90 LDR X1, [X8]
	0x03758C94 BL 0x2E05A28
	0x03758C98 ADRP X20, 0xC88000
	0x03758C9C LDRB W8, [X20 + 0xDED]
	0x03758CA0 LDR V8, [X0]
	0x03758CA4 TBNZ X8, 0x0, 0x3758CBC
	0x03758CA8 ADRP X0, 0x9C3000
	0x03758CAC LDR X0, [X0 + 0xC90]
	0x03758CB0 BL 0x1C16CF4
	0x03758CB4 MOVZ W8, 0x1
	0x03758CB8 STRB W8, [X20 + 0xDED]
	0x03758CBC LDR V0, [X19 + 0x12C]
	0x03758CC0 FCMP S0, 0x0
	0x03758CC4 B.GT 0x3758CDC
	0x03758CC8 ADRP X8, 0x9C3000
	0x03758CCC LDR X8, [X8 + 0xC90]
	0x03758CD0 LDR X8, [X8]
	0x03758CD4 LDR X8, [X8 + 0xB8]
	0x03758CD8 LDR V0, [X8]
	0x03758CDC FCMP S0, S8
	0x03758CE0 B.LS 0x3758D44
	0x03758CE4 ADRP X8, 0x9ED000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xC89000
	005 Move X20, 0x9EE000
	006 Move W8, [X19+3552]
	007 Move X20, [X20+3800]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x9EE000
	013 Move X0, [X0+3800]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+3552], W8
	017 Move X0, [X20]
	018 Call 0x1C17F10
	019 Move X1, X31
	020 Move X19, X0
	021 Call Object..ctor, X0
	022 Move X8, [X20]
	023 Move X8, [X8+184]
	024 Move [X8], X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Return 

Method: System.Void .ctor()

Disassembly:
	0x03758CE8 LDR X8, [X8 + 0xFA0]
	0x03758CEC MOV X0, X19

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Boolean <With>b__11_0(System.Char ch)

Disassembly:
	0x03758CF0 LDR X1, [X8]
	0x03758CF4 BL 0x2E05BE0
	0x03758CF8 LDRB W8, [X20 + 0xDED]
	0x03758CFC MOV V8.16B, V0.16B
	0x03758D00 TBNZ X8, 0x0, 0x3758D18
	0x03758D04 ADRP X0, 0x9C3000
	0x03758D08 LDR X0, [X0 + 0xC90]
	0x03758D0C BL 0x1C16CF4
	0x03758D10 MOVZ W8, 0x1
	0x03758D14 STRB W8, [X20 + 0xDED]
	0x03758D18 LDR V0, [X19 + 0x12C]
	0x03758D1C FCMP S0, 0x0
	0x03758D20 B.GT 0x3758D38
	0x03758D24 ADRP X8, 0x9C3000
	0x03758D28 LDR X8, [X8 + 0xC90]
	0x03758D2C LDR X8, [X8]
	0x03758D30 LDR X8, [X8 + 0xB8]
	0x03758D34 LDR V0, [X8]
	0x03758D38 FCMP S0, S8
	0x03758D3C CSET W0, LS
	0x03758D40 B 0x3758D48
	0x03758D44 MOV W0, W31
	0x03758D48 LDP X20, X19, [X31 + 0x10]
	0x03758D4C LDR X30, [X31 + 0x8]
	0x03758D50 LDR V8, [X31], #0x20
	0x03758D54 RET
	0x03758D58 BL 0x1C16F20
	0x03758D5C LDR X0, [X0 + 0x120]
	0x03758D60 RET
	0x03758D64 STR X1, [X0 + 0x120]
	0x03758D68 RET
	0x03758D6C LDR X0, [X0 + 0x128]
	0x03758D70 RET
	0x03758D74 STR X1, [X0 + 0x128]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xC89000
	006 Move X20, 0x99E000
	007 Move W8, [X21+3553]
	008 Move X20, [X20+368]
	009 Move W19, W1
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x99E000
	015 Move X0, [X0+368]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3553], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move W0, W19
	025 Move X1, X31
	026 Call Char.IsLetterOrDigit, X0
	027 Move TEMP, X0
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfNotEqual {37}
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move W0, 1
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Return X0
	037 Move X0, [X20]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Move W0, W19
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move X1, X31
	046 Move X30, [X31+32]
	047 Move X21, [X31+40]
	048 Call Char.IsWhiteSpace, X0
	049 Return X0

