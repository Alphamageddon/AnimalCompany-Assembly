Type: UnityEngine.InputSystem.Layouts.InputControlAttribute

Method: System.String get_layout()

Disassembly:
	0x038118EC ADRP X24, 0x939000
	0x038118F0 LDR X24, [X24 + 0x778]

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void set_layout(System.String value)

Disassembly:
	0x038118F4 MOV X25, X0
	0x038118F8 LDR X23, [X24]

ISIL:
	001 Move [X0+24], X1
	002 Return 

Method: System.String get_variants()

Disassembly:
	0x038118FC MOV X1, X23
	0x03811900 BL 0x1C16E00

ISIL:
	001 Move X0, [X0+32]
	002 Return X0

Method: System.Void set_variants(System.String value)

Disassembly:
	0x03811904 CBZ X0, 0x3811BB8
	0x03811908 LDR X24, [X24]

ISIL:
	001 Move [X0+32], X1
	002 Return 

Method: System.String get_name()

Disassembly:
	0x0381190C MOV X0, X25
	0x03811910 MOV X1, X24

ISIL:
	001 Move X0, [X0+40]
	002 Return X0

Method: System.Void set_name(System.String value)

Disassembly:
	0x03811914 BL 0x1C16E00
	0x03811918 CBZ X0, 0x3811BC4

ISIL:
	001 Move [X0+40], X1
	002 Return 

Method: System.String get_format()

Disassembly:
	0x0381191C LDR X8, [X0]
	0x03811920 MOV X23, X0

ISIL:
	001 Move X0, [X0+48]
	002 Return X0

Method: System.Void set_format(System.String value)

Disassembly:
	0x03811924 LDRH W9, [X8 + 0x12E]
	0x03811928 CBZ X9, 0x381194C

ISIL:
	001 Move [X0+48], X1
	002 Return 

Method: System.String get_usage()

Disassembly:
	0x0381192C LDR X10, [X8 + 0xB0]
	0x03811930 ADD X10, X10, 0x8

ISIL:
	001 Move X0, [X0+56]
	002 Return X0

Method: System.Void set_usage(System.String value)

Disassembly:
	0x03811934 LDUR X11, [X10 - 0x8]
	0x03811938 CMP X11, X24

ISIL:
	001 Move [X0+56], X1
	002 Return 

Method: System.String[] get_usages()

Disassembly:
	0x0381193C B.EQ 0x38119BC
	0x03811940 SUBS X9, X9, 0x1

ISIL:
	001 Move X0, [X0+64]
	002 Return X0

Method: System.Void set_usages(System.String[] value)

Disassembly:
	0x03811944 ADD X10, X10, 0x10
	0x03811948 B.NE 0x3811934

ISIL:
	001 Move [X0+64], X1
	002 Return 

Method: System.String get_parameters()

Disassembly:
	0x0381194C MOV X0, X23
	0x03811950 MOV X1, X24

ISIL:
	001 Move X0, [X0+72]
	002 Return X0

Method: System.Void set_parameters(System.String value)

Disassembly:
	0x03811954 MOV W2, W31
	0x03811958 BL 0x1C5C788

ISIL:
	001 Move [X0+72], X1
	002 Return 

Method: System.String get_processors()

Disassembly:
	0x0381195C B 0x38119C8
	0x03811960 LDR X0, [X26]

ISIL:
	001 Move X0, [X0+80]
	002 Return X0

Method: System.Void set_processors(System.String value)

Disassembly:
	0x03811964 LDR W8, [X0 + 0xE0]
	0x03811968 CBNZ W8, 0x3811970

ISIL:
	001 Move [X0+80], X1
	002 Return 

Method: System.String get_alias()

Disassembly:
	0x0381196C BL 0x1C16DFC
	0x03811970 MOV X0, X19

ISIL:
	001 Move X0, [X0+88]
	002 Return X0

Method: System.Void set_alias(System.String value)

Disassembly:
	0x03811974 MOV X1, X22
	0x03811978 MOV X2, X20

ISIL:
	001 Move [X0+88], X1
	002 Return 

Method: System.String[] get_aliases()

Disassembly:
	0x0381197C BL 0x3811BD0
	0x03811980 CBZ X21, 0x38119DC

ISIL:
	001 Move X0, [X0+96]
	002 Return X0

Method: System.Void set_aliases(System.String[] value)

Disassembly:
	0x03811984 LDR X0, [X21 + 0x18]
	0x03811988 MOV X1, X31

ISIL:
	001 Move [X0+96], X1
	002 Return 

Method: System.String get_useStateFrom()

Disassembly:
	0x0381198C BL 0x32277A8
	0x03811990 TBNZ X0, 0x0, 0x38119A4

ISIL:
	001 Move X0, [X0+104]
	002 Return X0

Method: System.Void set_useStateFrom(System.String value)

Disassembly:
	0x03811994 LDR X1, [X21 + 0x18]
	0x03811998 ADD X0, X31, 0x28

ISIL:
	001 Move [X0+104], X1
	002 Return 

Method: System.UInt32 get_bit()

Disassembly:
	0x0381199C MOV X2, X31
	0x038119A0 BL 0x375F3B0

ISIL:
	001 Move W0, [X0+112]
	002 Return X0

Method: System.Void set_bit(System.UInt32 value)

Disassembly:
	0x038119A4 STP X31, X31, [X31]
	0x038119A8 LDR X1, [X21 + 0x28]

ISIL:
	001 Move [X0+112], W1
	002 Return 

Method: System.UInt32 get_offset()

Disassembly:
	0x038119AC ADD X0, X31, 0x0
	0x038119B0 MOV X2, X31

ISIL:
	001 Move W0, [X0+116]
	002 Return X0

Method: System.Void set_offset(System.UInt32 value)

Disassembly:
	0x038119B4 BL 0x3757420
	0x038119B8 B 0x38119E0

ISIL:
	001 Move [X0+116], W1
	002 Return 

Method: System.UInt32 get_sizeInBits()

Disassembly:
	0x038119BC LDRSW X9, [X10]
	0x038119C0 ADD X8, X8, X9, 0x4, LSL

ISIL:
	001 Move W0, [X0+120]
	002 Return X0

Method: System.Void set_sizeInBits(System.UInt32 value)

Disassembly:
	0x038119C4 ADD X0, X8, 0x138
	0x038119C8 LDP X8, X1, [X0]

ISIL:
	001 Move [X0+120], W1
	002 Return 

Method: System.Int32 get_arraySize()

Disassembly:
	0x038119CC MOV X0, X23
	0x038119D0 BLR X8

ISIL:
	001 Move W0, [X0+124]
	002 Return X0

Method: System.Void set_arraySize(System.Int32 value)

Disassembly:
	0x038119D4 STR W0, [X31 + 0x28]
	0x038119D8 CBNZ X21, 0x3811984

ISIL:
	001 Move [X0+124], W1
	002 Return 

Method: System.String get_displayName()

Disassembly:
	0x038119DC STP X31, X31, [X31]
	0x038119E0 LDR X0, [X26]

ISIL:
	001 Move X0, [X0+128]
	002 Return X0

Method: System.Void set_displayName(System.String value)

Disassembly:
	0x038119E4 BL 0x1C16F10
	0x038119E8 MOV X1, X31

ISIL:
	001 Move [X0+128], X1
	002 Return 

Method: System.String get_shortDisplayName()

Disassembly:
	0x038119EC MOV X23, X0
	0x038119F0 BL 0x33BDD8C

ISIL:
	001 Move X0, [X0+136]
	002 Return X0

Method: System.Void set_shortDisplayName(System.String value)

Disassembly:
	0x038119F4 ADD X0, X31, 0x10
	0x038119F8 MOV X1, X20

ISIL:
	001 Move [X0+136], X1
	002 Return 

Method: System.Boolean get_noisy()

Disassembly:
	0x038119FC MOV X2, X31
	0x03811A00 STP X31, X31, [X31 + 0x10]

ISIL:
	001 Move W0, [X0+144]
	002 Return X0

Method: System.Void set_noisy(System.Boolean value)

Disassembly:
	0x03811A04 BL 0x3757420
	0x03811A08 LDR V0, [X31 + 0x1]
	0x03811A0C STR X19, [X23 + 0x20]

ISIL:
	001 And W8, W1, 1
	002 Move [X0+144], W8
	003 Return 

Method: System.Boolean get_synthetic()

Disassembly:
	0x03811A10 STR V0, [X23 + 0x1]
	0x03811A14 CBZ X22, 0x3811BB4

ISIL:
	001 Move W0, [X0+145]
	002 Return X0

Method: System.Void set_synthetic(System.Boolean value)

Disassembly:
	0x03811A18 ADRP X8, 0x939000
	0x03811A1C LDR X8, [X8 + 0x780]
	0x03811A20 MOV X0, X22

ISIL:
	001 And W8, W1, 1
	002 Move [X0+145], W8
	003 Return 

Method: System.Boolean get_dontReset()

Disassembly:
	0x03811A24 LDR X1, [X8]
	0x03811A28 BL 0x310A2EC

ISIL:
	001 Move W0, [X0+146]
	002 Return X0

Method: System.Void set_dontReset(System.Boolean value)

Disassembly:
	0x03811A2C STR X0, [X23 + 0x90]
	0x03811A30 LDR W8, [X31 + 0x28]
	0x03811A34 CMP X21, 0x0

ISIL:
	001 And W8, W1, 1
	002 Move [X0+146], W8
	003 Return 

Method: System.Object get_defaultState()

Disassembly:
	0x03811A38 CSEL X9, X23, X31, EQ
	0x03811A3C STR W8, [X23 + 0x38]

ISIL:
	001 Move X0, [X0+152]
	002 Return X0

Method: System.Void set_defaultState(System.Object value)

Disassembly:
	0x03811A40 LDR V0, [X31]
	0x03811A44 STUR V0, [X23 + 0x28]

ISIL:
	001 Move [X0+152], X1
	002 Return 

Method: System.Object get_minValue()

Disassembly:
	0x03811A48 CBZ X21, 0x3811A64
	0x03811A4C LDURH W8, [X21 + 0x33]

ISIL:
	001 Move X0, [X0+160]
	002 Return X0

Method: System.Void set_minValue(System.Object value)

Disassembly:
	0x03811A50 MOV X20, X31
	0x03811A54 MOV X19, X23

ISIL:
	001 Move [X0+160], X1
	002 Return 

Method: System.Object get_maxValue()

Disassembly:
	0x03811A58 STRH W8, [X23 + 0x40]
	0x03811A5C LDRB W8, [X21 + 0x35]

ISIL:
	001 Move X0, [X0+168]
	002 Return X0

Method: System.Void set_maxValue(System.Object value)

Disassembly:
	0x03811A60 B 0x3811A78
	0x03811A64 CBZ X9, 0x3811BB4

ISIL:
	001 Move [X0+168], X1
	002 Return 

Method: System.Void .ctor()

Disassembly:
	0x03811A68 MOV X19, X31
	0x03811A6C MOV W8, W31
	0x03811A70 STRH W31, [X9 + 0x40]
	0x03811A74 MOV X20, X23

ISIL:
	001 NotImplemented "Instruction MOVI not yet implemented."
	002 Move X1, X31
	003 Move [X0+112], D0
	004 Call PropertyAttribute..ctor, X0
	005 Return 

