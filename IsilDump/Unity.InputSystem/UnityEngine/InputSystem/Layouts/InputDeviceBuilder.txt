Type: UnityEngine.InputSystem.Layouts.InputDeviceBuilder

Method: System.Void Setup(UnityEngine.InputSystem.Utilities.InternedString layout, UnityEngine.InputSystem.Utilities.InternedString variants, UnityEngine.InputSystem.Layouts.InputDeviceDescription deviceDescription = null)

Disassembly:
	0x0381AA2C BL 0x375F7A0
	0x0381AA30 TBNZ X0, 0x0, 0x381AA98
	0x0381AA34 LDR W8, [X24 + 0x18]
	0x0381AA38 CMP X21, X8
	0x0381AA3C B.CS 0x381AB00
	0x0381AA40 LDP X0, X1, [X22 - 0x8]
	0x0381AA44 MOV X2, X31
	0x0381AA48 BL 0x37577E0
	0x0381AA4C MOV X19, X0
	0x0381AA50 MOV X0, X27
	0x0381AA54 MOV X1, X23
	0x0381AA58 MOV X2, X31
	0x0381AA5C BL 0x37577E0
	0x0381AA60 LDR X8, [X29]
	0x0381AA64 CBZ X8, 0x381AB04
	0x0381AA68 MOV X20, X0
	0x0381AA6C MOV X0, X8
	0x0381AA70 MOV W1, W31
	0x0381AA74 MOV X2, X31
	0x0381AA78 BL 0x3222A1C
	0x0381AA7C MOV W2, W0
	0x0381AA80 MOV X0, X19
	0x0381AA84 MOV X1, X20
	0x0381AA88 MOV X3, X31
	0x0381AA8C BL 0x37677D0
	0x0381AA90 ADD X20, X31, 0x320
	0x0381AA94 TBZ X0, 0x0, 0x381AAB8
	0x0381AA98 LDR X1, [X31 + 0x70]
	0x0381AA9C LDR X5, [X31 + 0x80]
	0x0381AAA0 ADD X6, X31, 0x248
	0x0381AAA4 MOV X0, X26
	0x0381AAA8 MOV X2, X27
	0x0381AAAC MOV X3, X23
	0x0381AAB0 MOV X4, X28
	0x0381AAB4 BL 0x381BF78
	0x0381AAB8 LDR W8, [X24 + 0x18]
	0x0381AABC ADD X21, X21, 0x1
	0x0381AAC0 ADD X22, X22, 0xD0
	0x0381AAC4 CMP X21, W8, SXTW
	0x0381AAC8 B.LT 0x381A9F8
	0x0381AACC B 0x381AAE0
	0x0381AAD0 CBZ X28, 0x381AB04
	0x0381AAD4 LDR X8, [X31 + 0x80]
	0x0381AAD8 STR X31, [X28 + 0x98]
	0x0381AADC STRB W31, [X8]
	0x0381AAE0 ADD X31, X31, 0x3E0
	0x0381AAE4 LDP X20, X19, [X31 + 0x50]
	0x0381AAE8 LDP X22, X21, [X31 + 0x40]
	0x0381AAEC LDP X24, X23, [X31 + 0x30]
	0x0381AAF0 LDP X26, X25, [X31 + 0x20]
	0x0381AAF4 LDP X28, X27, [X31 + 0x10]
	0x0381AAF8 LDP X29, X30, [X31], #0x60
	0x0381AAFC RET
	0x0381AB00 BL 0x1C16F28
	0x0381AB04 BL 0x1C16F20
	0x0381AB08 LDUR X8, [X22 - 0x9C]
	0x0381AB0C LDUR X9, [X22 - 0x94]
	0x0381AB10 ADRP X19, 0x904000
	0x0381AB14 STR X8, [X31 + 0x248]
	0x0381AB18 STR X9, [X31 + 0x250]
	0x0381AB1C LDR X19, [X19 + 0x510]
	0x0381AB20 MOV X0, X19
	0x0381AB24 BL 0x1C16D08
	0x0381AB28 ADD X1, X31, 0x248
	0x0381AB2C BL 0x1C16E04
	0x0381AB30 LDR X21, [X31 + 0x70]
	0x0381AB34 MOV X20, X0
	0x0381AB38 MOV X0, X21
	0x0381AB3C BL 0x19903C0
	0x0381AB40 LDP X8, X9, [X21 + 0x10]
	0x0381AB44 MOV X0, X19
	0x0381AB48 STR X8, [X31 + 0x358]
	0x0381AB4C STR X9, [X31 + 0x360]
	0x0381AB50 BL 0x1C16D08
	0x0381AB54 ADD X1, X31, 0x358
	0x0381AB58 BL 0x1C16E04
	0x0381AB5C MOV X19, X0
	0x0381AB60 ADRP X0, 0x930000
	0x0381AB64 LDR X0, [X0 + 0xB88]
	0x0381AB68 BL 0x1C16D08
	0x0381AB6C MOV X1, X20
	0x0381AB70 MOV X2, X19
	0x0381AB74 MOV X3, X31
	0x0381AB78 BL 0x3227BD4
	0x0381AB7C MOV X19, X0

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+80], X30
	003 Move [X31+96], X26
	004 Move [X31+104], X25
	005 Move [X31+112], X24
	006 Move [X31+120], X23
	007 Move [X31+128], X22
	008 Move [X31+136], X21
	009 Move [X31+144], X20
	010 Move [X31+152], X19
	011 Move X26, 0xBC8000
	012 Move X25, 0x902000
	013 Move W8, [X26+1299]
	014 Move X25, [X25+3520]
	015 Move X20, X5
	016 Move X21, X4
	017 Move X22, X3
	018 Move X23, X2
	019 Move X24, X1
	020 Move X19, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {36}
	025 Move X0, 0x902000
	026 Move X0, [X0+3520]
	027 Call 0x1C17CF4
	028 Move X0, 0x931000
	029 Move X0, [X0+2864]
	030 Call 0x1C17CF4
	031 Move X0, 0x907000
	032 Move X0, [X0+1368]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X26+1299], W8
	036 Move X0, [X25]
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {41}
	040 Call 0x1C17DFC
	041 Call InputControlLayout.CacheRef
	042 Move [X19+8], W0
	043 Move X0, X19
	044 Move X1, X24
	045 Move X2, X23
	046 Move X3, X22
	047 Move X4, X21
	048 Move X5, X31
	049 Move X6, X31
	050 Move X7, X31
	051 Call InputDeviceBuilder.InstantiateLayout, X0, X1, X2, X3, X4
	052 Move X0, X19
	053 Call InputDeviceBuilder.FinalizeControlHierarchy, X0
	054 Move X0, [X19+24]
	055 Compare X0, 0
	056 JumpIfEqual {107}
	057 Move X8, 0x931000
	058 Move X8, [X8+2864]
	059 Move X1, [X8]
	060 Call List`1<UInt32>.Sort, X0
	061 Move V2, [X20+16]
	062 Move V0, [X20+32]
	063 Move X9, [X20+48]
	064 Move V1, [X20]
	065 Move X8, [X19]
	066 Move [X31+32], V2
	067 Move [X31+40], V0
	068 Move [X31+64], X9
	069 Move [X31+1], V1
	070 Compare X8, 0
	071 JumpIfEqual {107}
	072 Move X9, [X31+64]
	073 Move V1, [X31+32]
	074 Move V0, [X31+48]
	075 Move V2, [X31+1]
	076 Move [X8+288], X9
	077 Move [X8+256], V1
	078 Move [X8+264], V0
	079 Move [X8+15], V2
	080 Move X0, [X19+24]
	081 Compare X0, 0
	082 JumpIfEqual {107}
	083 Move X8, 0x907000
	084 Move X8, [X8+1368]
	085 Move X20, [X19]
	086 Move X1, [X8]
	087 Call List`1<UInt32>.ToArray, X0
	088 Compare X20, 0
	089 JumpIfEqual {107}
	090 Move [X20+344], X0
	091 Move X0, [X19]
	092 Compare X0, 0
	093 JumpIfEqual {107}
	094 Move X20, [X31+144]
	095 Move X19, [X31+152]
	096 Move X22, [X31+128]
	097 Move X21, [X31+136]
	098 Move X24, [X31+112]
	099 Move X23, [X31+120]
	100 Move X26, [X31+96]
	101 Move X25, [X31+104]
	102 Move X30, [X31+80]
	103 Move X1, X31
	104 Add X31, X31, 160
	105 Call InputControl.CallFinishSetupRecursive, X0
	106 Return 
	107 Call 0x1C17F20

Method: UnityEngine.InputSystem.InputDevice Finish()

Disassembly:
	0x0381AE3C B 0x381AD44
	0x0381AE40 LDR X1, [X25]
	0x0381AE44 ADD X0, X31, 0x20
	0x0381AE48 BL 0x2BC4968
	0x0381AE4C LDR X1, [X23]
	0x0381AE50 ADD X8, X31, 0x8

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, [X0]
	004 Call InputDeviceBuilder.Reset, X0
	005 Move X0, X19
	006 Move X30, [X31+16]
	007 Move X19, [X31+24]
	008 Return X0

Method: System.Void Dispose()

Disassembly:
	0x0381AEC8 CBNZ W9, 0x381AED4
	0x0381AECC BL 0x1C16DFC

ISIL:
	001 Add X0, X0, 8
	002 Call CacheRefInstance.Dispose, X0
	003 Return 

Method: System.Void Reset()

Disassembly:
	0x0381AE54 ADD X0, X31, 0x40
	0x0381AE58 BL 0x24FD990
	0x0381AE5C LDUR V0, [X31 + 0x8]
	0x0381AE60 LDR X8, [X31 + 0x18]
	0x0381AE64 STR W31, [X31 + 0x4]
	0x0381AE68 MOV W29, W31
	0x0381AE6C MOV W21, W31
	0x0381AE70 MOV X28, X31
	0x0381AE74 STR V0, [X31 + 0x2]
	0x0381AE78 STR X8, [X31 + 0x30]
	0x0381AE7C LDR X1, [X26]
	0x0381AE80 ADD X0, X31, 0x20
	0x0381AE84 BL 0x2BC496C
	0x0381AE88 TBZ X0, 0x0, 0x381B098
	0x0381AE8C LDR X1, [X27]
	0x0381AE90 ADD X0, X31, 0x20
	0x0381AE94 BL 0x2BC4998
	0x0381AE98 MOV X23, X0
	0x0381AE9C CBZ X0, 0x381B11C
	0x0381AEA0 LDR X0, [X24]
	0x0381AEA4 LDR W8, [X0 + 0xE0]
	0x0381AEA8 CBNZ W8, 0x381AEB0
	0x0381AEAC BL 0x1C16DFC
	0x0381AEB0 ADD X22, X23, 0x10
	0x0381AEB4 LDR W8, [X22 + 0x4]
	0x0381AEB8 ADDS W31, W8, 0x1
	0x0381AEBC B.EQ 0x381AEDC
	0x0381AEC0 LDR X0, [X24]
	0x0381AEC4 LDR W9, [X0 + 0xE0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xBC8000
	005 Move W8, [X20+1300]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0x931000
	012 Move X0, [X0+2888]
	013 Call 0x1C17CF4
	014 Move X0, 0x931000
	015 Move X0, [X0+2896]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1300], W8
	019 Move X0, [X19+16]
	020 Move [X19], X31
	021 Compare X0, 0
	022 JumpIfEqual {27}
	023 Move X8, 0x931000
	024 Move X8, [X8+2888]
	025 Move X1, [X8]
	026 Call Dictionary`2<Object, ControlItem>.Clear, X0
	027 Move X8, [X19+24]
	028 Compare X8, 0
	029 JumpIfEqual {34}
	030 Move W9, [X8+28]
	031 Add W9, W9, 1
	032 Move [X8+24], W31
	033 Move [X8+28], W9
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X30, [X31+32]
	037 Return 

Method: UnityEngine.InputSystem.InputControl InstantiateLayout(UnityEngine.InputSystem.Utilities.InternedString layout, UnityEngine.InputSystem.Utilities.InternedString variants, UnityEngine.InputSystem.Utilities.InternedString name, UnityEngine.InputSystem.InputControl parent)

Disassembly:
	0x0381AB80 ADRP X0, 0x8D9000
	0x0381AB84 LDR X0, [X0 + 0xB40]
	0x0381AB88 BL 0x1C16D08
	0x0381AB8C BL 0x1C16F10
	0x0381AB90 MOV X1, X19
	0x0381AB94 MOV X2, X31
	0x0381AB98 MOV X20, X0
	0x0381AB9C BL 0x3379A44
	0x0381ABA0 ADRP X0, 0x930000
	0x0381ABA4 LDR X0, [X0 + 0xB90]
	0x0381ABA8 BL 0x1C16D08
	0x0381ABAC MOV X1, X0
	0x0381ABB0 MOV X0, X20
	0x0381ABB4 BL 0x1C16DEC
	0x0381ABB8 SUB X31, X31, 0xB0
	0x0381ABBC STP X29, X30, [X31 + 0x50]
	0x0381ABC0 STP X28, X27, [X31 + 0x60]
	0x0381ABC4 STP X26, X25, [X31 + 0x70]
	0x0381ABC8 STP X24, X23, [X31 + 0x80]
	0x0381ABCC STP X22, X21, [X31 + 0x90]
	0x0381ABD0 STP X20, X19, [X31 + 0xA0]
	0x0381ABD4 ADRP X20, 0xBC7000
	0x0381ABD8 LDRB W8, [X20 + 0x520]
	0x0381ABDC MOV X19, X0
	0x0381ABE0 TBNZ X8, 0x0, 0x381AC34
	0x0381ABE4 ADRP X0, 0x905000
	0x0381ABE8 LDR X0, [X0 + 0x48]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, X0
	009 Move X0, X1
	010 Move X1, X2
	011 Move X2, X31
	012 Move X19, X7
	013 Move X20, X6
	014 Move X21, X5
	015 Move X22, X4
	016 Move X23, X3
	017 Call InternedString.op_Implicit, X0
	018 Call InputDeviceBuilder.FindOrLoadLayout, X0
	019 Move X1, X0
	020 Move X0, X24
	021 Move X2, X23
	022 Move X3, X22
	023 Move X4, X21
	024 Move X5, X20
	025 Move X6, X19
	026 Move X20, [X31+48]
	027 Move X19, [X31+56]
	028 Move X22, [X31+32]
	029 Move X21, [X31+40]
	030 Move X24, [X31+16]
	031 Move X23, [X31+24]
	032 Move X30, [X31+64]
	033 Call InputDeviceBuilder.InstantiateLayout, X0, X1, X2, X3, X4
	034 Return X0

Method: UnityEngine.InputSystem.InputControl InstantiateLayout(UnityEngine.InputSystem.Layouts.InputControlLayout layout, UnityEngine.InputSystem.Utilities.InternedString variants, UnityEngine.InputSystem.Utilities.InternedString name, UnityEngine.InputSystem.InputControl parent)

Disassembly:
	0x0381AF2C LDR W8, [X0 + 0xE0]
	0x0381AF30 CBNZ W8, 0x381AF38
	0x0381AF34 BL 0x1C16DFC
	0x0381AF38 LDR W8, [X23 + 0x18]
	0x0381AF3C LDR W9, [X31 + 0x4]
	0x0381AF40 ADDS W31, W8, 0x1
	0x0381AF44 CSEL W9, W9, W29, EQ
	0x0381AF48 STR W9, [X31 + 0x4]
	0x0381AF4C B.EQ 0x381B02C
	0x0381AF50 LDR X0, [X24]
	0x0381AF54 LDR W9, [X0 + 0xE0]
	0x0381AF58 CBNZ W9, 0x381AF64
	0x0381AF5C BL 0x1C16DFC
	0x0381AF60 LDR W8, [X23 + 0x18]
	0x0381AF64 ADDS W31, W8, 0x2
	0x0381AF68 MOV W25, W29
	0x0381AF6C B.EQ 0x381B030
	0x0381AF70 LDR X0, [X24]
	0x0381AF74 LDR W9, [X0 + 0xE0]
	0x0381AF78 CBNZ W9, 0x381AF84
	0x0381AF7C BL 0x1C16DFC
	0x0381AF80 LDR W8, [X23 + 0x18]
	0x0381AF84 LDR W9, [X22 + 0xC]
	0x0381AF88 ADD W8, W9, W8
	0x0381AF8C LDP W9, W25, [X31]
	0x0381AF90 STR W21, [X31 + 0x4]
	0x0381AF94 CMP W8, W9
	0x0381AF98 CSEL W9, W8, W9, HI
	0x0381AF9C MOV W21, W9
	0x0381AFA0 B 0x381B050
	0x0381AFA4 CBZ X28, 0x381AFBC
	0x0381AFA8 LDR W1, [X31]
	0x0381AFAC MOV W0, W20
	0x0381AFB0 MOV X2, X31
	0x0381AFB4 BL 0x3762834
	0x0381AFB8 MOV W20, W0
	0x0381AFBC LDR X0, [X24]
	0x0381AFC0 LDR W8, [X0 + 0xE0]
	0x0381AFC4 CBNZ W8, 0x381AFCC
	0x0381AFC8 BL 0x1C16DFC
	0x0381AFCC LDR W8, [X23 + 0x18]
	0x0381AFD0 ADDS W31, W8, 0x1
	0x0381AFD4 B.NE 0x381AFEC
	0x0381AFD8 LDR X0, [X24]
	0x0381AFDC LDR W8, [X0 + 0xE0]
	0x0381AFE0 CBNZ W8, 0x381AFE8
	0x0381AFE4 BL 0x1C16DFC
	0x0381AFE8 STR W31, [X23 + 0x18]
	0x0381AFEC LDR X0, [X24]
	0x0381AFF0 LDR W8, [X0 + 0xE0]
	0x0381AFF4 CBNZ W8, 0x381AFFC
	0x0381AFF8 BL 0x1C16DFC
	0x0381AFFC MOV X0, X22
	0x0381B000 MOV X1, X31
	0x0381B004 BL 0x3800B6C
	0x0381B008 MOV W1, W0
	0x0381B00C MOV W0, W20
	0x0381B010 MOV X2, X31
	0x0381B014 BL 0x3762EC4
	0x0381B018 MOV W25, W21
	0x0381B01C LDR W21, [X31]
	0x0381B020 MOV W23, W0
	0x0381B024 MOV X28, X31
	0x0381B028 B 0x381B054
	0x0381B02C MOV W25, W21
	0x0381B030 LDR X0, [X24]
	0x0381B034 LDR W8, [X0 + 0xE0]
	0x0381B038 CBNZ W8, 0x381B040
	0x0381B03C BL 0x1C16DFC
	0x0381B040 LDR W8, [X23 + 0x1C]
	0x0381B044 LDR W21, [X31]
	0x0381B048 STR W21, [X23 + 0x18]
	0x0381B04C ADD W21, W8, W21
	0x0381B050 MOV W23, W20
	0x0381B054 LDR X0, [X24]
	0x0381B058 LDR W8, [X0 + 0xE0]
	0x0381B05C CBNZ W8, 0x381B064
	0x0381B060 BL 0x1C16DFC
	0x0381B064 MOV W20, W23
	0x0381B068 STR W23, [X22 + 0x4]
	0x0381B06C CBNZ W25, 0x381AE7C
	0x0381B070 LDR X0, [X24]
	0x0381B074 LDR W8, [X0 + 0xE0]
	0x0381B078 CBNZ W8, 0x381B080
	0x0381B07C BL 0x1C16DFC
	0x0381B080 LDR W1, [X22 + 0xC]
	0x0381B084 MOV W0, W23
	0x0381B088 MOV X2, X31
	0x0381B08C BL 0x3762834
	0x0381B090 MOV W20, W0
	0x0381B094 B 0x381AE7C
	0x0381B098 ADRP X8, 0x904000
	0x0381B09C LDR X8, [X8 + 0x48]
	0x0381B0A0 ADD X0, X31, 0x20
	0x0381B0A4 LDR X1, [X8]
	0x0381B0A8 BL 0x2BC4968
	0x0381B0AC CBZ X28, 0x381B0C4
	0x0381B0B0 MOV W0, W20
	0x0381B0B4 MOV W1, W21
	0x0381B0B8 MOV X2, X31
	0x0381B0BC BL 0x3762834
	0x0381B0C0 MOV W20, W0
	0x0381B0C4 LDR X0, [X24]
	0x0381B0C8 LDR W8, [X0 + 0xE0]
	0x0381B0CC CBNZ W8, 0x381B0D4
	0x0381B0D0 BL 0x1C16DFC
	0x0381B0D4 UBFM W8, W20, 0x1D, 0x1C
	0x0381B0D8 STR W8, [X19 + 0x1C]
	0x0381B0DC LDP X20, X19, [X31 + 0xA0]
	0x0381B0E0 LDP X22, X21, [X31 + 0x90]
	0x0381B0E4 LDP X24, X23, [X31 + 0x80]
	0x0381B0E8 LDP X26, X25, [X31 + 0x70]
	0x0381B0EC LDP X28, X27, [X31 + 0x60]
	0x0381B0F0 LDP X29, X30, [X31 + 0x50]
	0x0381B0F4 ADD X31, X31, 0xB0
	0x0381B0F8 RET
	0x0381B0FC ADRP X0, 0x8D8000
	0x0381B100 LDR X0, [X0 + 0xAC8]
	0x0381B104 BL 0x1C16D08
	0x0381B108 MOVZ W1, 0x5
	0x0381B10C BL 0x1C16D6C
	0x0381B110 MOV X22, X0
	0x0381B114 CBNZ X0, 0x381B128
	0x0381B118 BL 0x1C16F20
	0x0381B11C STR W21, [X31]
	0x0381B120 BL 0x1C16F20
	0x0381B124 BL 0x1C16F20
	0x0381B128 ADRP X0, 0x92F000
	0x0381B12C LDR X0, [X0 + 0xB98]
	0x0381B130 BL 0x1C16D08
	0x0381B134 LDR W8, [X22 + 0x18]
	0x0381B138 CBNZ W8, 0x381B144
	0x0381B13C BL 0x1C16F28
	0x0381B140 BL 0x1C16F20
	0x0381B144 STR X0, [X22 + 0x20]
	0x0381B148 MOV X0, X21
	0x0381B14C MOV X1, X31
	0x0381B150 BL 0x3771E78
	0x0381B154 LDR W8, [X22 + 0x18]
	0x0381B158 CMP W8, 0x1
	0x0381B15C B.LS 0x381B328
	0x0381B160 STR X0, [X22 + 0x28]
	0x0381B164 ADRP X0, 0x92F000
	0x0381B168 LDR X0, [X0 + 0xBA0]
	0x0381B16C BL 0x1C16D08
	0x0381B170 LDR W8, [X22 + 0x18]
	0x0381B174 CMP W8, 0x2
	0x0381B178 B.LS 0x381B32C
	0x0381B17C STR X0, [X22 + 0x30]
	0x0381B180 MOV X0, X19
	0x0381B184 MOV X1, X31
	0x0381B188 BL 0x3771E78
	0x0381B18C LDR W8, [X22 + 0x18]
	0x0381B190 CMP W8, 0x3
	0x0381B194 B.LS 0x381B330
	0x0381B198 STR X0, [X22 + 0x38]
	0x0381B19C ADRP X0, 0x92F000
	0x0381B1A0 LDR X0, [X0 + 0xBA8]
	0x0381B1A4 BL 0x1C16D08
	0x0381B1A8 LDR W8, [X22 + 0x18]
	0x0381B1AC CMP W8, 0x4
	0x0381B1B0 B.LS 0x381B334
	0x0381B1B4 STR X0, [X22 + 0x40]
	0x0381B1B8 MOV X0, X22
	0x0381B1BC MOV X1, X31
	0x0381B1C0 BL 0x32278CC
	0x0381B1C4 MOV X21, X0
	0x0381B1C8 ADRP X0, 0x8D8000
	0x0381B1CC LDR X0, [X0 + 0x5B0]
	0x0381B1D0 BL 0x1C16D08
	0x0381B1D4 BL 0x1C16F10
	0x0381B1D8 MOV X22, X0
	0x0381B1DC MOV X1, X21
	0x0381B1E0 MOV X2, X31
	0x0381B1E4 BL 0x337DF1C
	0x0381B1E8 ADRP X0, 0x92F000
	0x0381B1EC LDR X0, [X0 + 0xBB0]
	0x0381B1F0 BL 0x1C16D08
	0x0381B1F4 MOV X1, X0
	0x0381B1F8 MOV X0, X22
	0x0381B1FC BL 0x1C16DEC
	0x0381B200 ADRP X0, 0x8D8000
	0x0381B204 LDR X0, [X0 + 0xAC8]
	0x0381B208 BL 0x1C16D08
	0x0381B20C MOVZ W1, 0x5
	0x0381B210 BL 0x1C16D6C
	0x0381B214 MOV X20, X0
	0x0381B218 BL 0x19903C0
	0x0381B21C ADRP X0, 0x92B000
	0x0381B220 LDR X0, [X0 + 0xBB0]
	0x0381B224 BL 0x1C16D08
	0x0381B228 MOV X2, X0
	0x0381B22C MOV X0, X20
	0x0381B230 MOV X1, X31
	0x0381B234 BL 0x1993444
	0x0381B238 MOV X0, X19
	0x0381B23C BL 0x19903C0
	0x0381B240 MOV X0, X19
	0x0381B244 MOV X1, X31
	0x0381B248 BL 0x3771F68
	0x0381B24C MOV X21, X0
	0x0381B250 MOV X0, X20
	0x0381B254 BL 0x19903C0
	0x0381B258 MOVZ W1, 0x1
	0x0381B25C MOV X0, X20
	0x0381B260 MOV X2, X21
	0x0381B264 BL 0x1993444
	0x0381B268 MOV X0, X20
	0x0381B26C BL 0x19903C0
	0x0381B270 ADRP X0, 0x92F000
	0x0381B274 LDR X0, [X0 + 0xBB8]
	0x0381B278 BL 0x1C16D08
	0x0381B27C MOV X2, X0
	0x0381B280 MOVZ W1, 0x2
	0x0381B284 MOV X0, X20
	0x0381B288 BL 0x1993444
	0x0381B28C MOV X0, X19
	0x0381B290 BL 0x19903C0
	0x0381B294 MOV X0, X19
	0x0381B298 MOV X1, X31
	0x0381B29C BL 0x3772094
	0x0381B2A0 MOV X19, X0
	0x0381B2A4 MOV X0, X20
	0x0381B2A8 BL 0x19903C0
	0x0381B2AC MOVZ W1, 0x3
	0x0381B2B0 MOV X0, X20
	0x0381B2B4 MOV X2, X19
	0x0381B2B8 BL 0x1993444
	0x0381B2BC MOV X0, X20
	0x0381B2C0 BL 0x19903C0
	0x0381B2C4 ADRP X0, 0x92F000
	0x0381B2C8 LDR X0, [X0 + 0xBC0]
	0x0381B2CC BL 0x1C16D08
	0x0381B2D0 MOV X2, X0
	0x0381B2D4 MOVZ W1, 0x4
	0x0381B2D8 MOV X0, X20
	0x0381B2DC BL 0x1993444
	0x0381B2E0 MOV X0, X20
	0x0381B2E4 MOV X1, X31
	0x0381B2E8 BL 0x32278CC
	0x0381B2EC MOV X19, X0
	0x0381B2F0 ADRP X0, 0x8D8000
	0x0381B2F4 LDR X0, [X0 + 0x5B0]
	0x0381B2F8 BL 0x1C16D08
	0x0381B2FC BL 0x1C16F10
	0x0381B300 MOV X1, X19
	0x0381B304 MOV X2, X31
	0x0381B308 MOV X20, X0
	0x0381B30C BL 0x337DF1C
	0x0381B310 ADRP X0, 0x92F000
	0x0381B314 LDR X0, [X0 + 0xBB0]
	0x0381B318 BL 0x1C16D08
	0x0381B31C MOV X1, X0
	0x0381B320 MOV X0, X20
	0x0381B324 BL 0x1C16DEC
	0x0381B328 BL 0x1C16F28
	0x0381B32C BL 0x1C16F28
	0x0381B330 BL 0x1C16F28
	0x0381B334 BL 0x1C16F28
	0x0381B338 B 0x381B3E0
	0x0381B33C B 0x381B3E0
	0x0381B340 B 0x381B3E0
	0x0381B344 B 0x381B398
	0x0381B348 B 0x381B44C
	0x0381B34C B 0x381B3E0
	0x0381B350 B 0x381B3E0
	0x0381B354 B 0x381B388
	0x0381B358 B 0x381B398
	0x0381B35C B 0x381B398
	0x0381B360 B 0x381B44C
	0x0381B364 B 0x381B44C
	0x0381B368 B 0x381B3E0
	0x0381B36C B 0x381B3E0
	0x0381B370 B 0x381B44C
	0x0381B374 B 0x381B44C
	0x0381B378 B 0x381B3E0
	0x0381B37C B 0x381B388
	0x0381B380 B 0x381B44C
	0x0381B384 B 0x381B398
	0x0381B388 STR W21, [X31]
	0x0381B38C MOV X22, X0
	0x0381B390 MOV W20, W23
	0x0381B394 B 0x381B450
	0x0381B398 MOV X22, X0
	0x0381B39C MOV X28, X31
	0x0381B3A0 B 0x381B450
	0x0381B3A4 B 0x381B3E0
	0x0381B3A8 B 0x381B3E0
	0x0381B3AC B 0x381B3E0
	0x0381B3B0 B 0x381B3E0
	0x0381B3B4 B 0x381B3E0
	0x0381B3B8 B 0x381B448
	0x0381B3BC B 0x381B448
	0x0381B3C0 B 0x381B3E0
	0x0381B3C4 B 0x381B3E0
	0x0381B3C8 B 0x381B448
	0x0381B3CC B 0x381B3E0
	0x0381B3D0 B 0x381B3E0
	0x0381B3D4 B 0x381B3E0
	0x0381B3D8 B 0x381B44C
	0x0381B3DC B 0x381B448
	0x0381B3E0 MOV X22, X0
	0x0381B3E4 CMP W1, 0x1
	0x0381B3E8 B.NE 0x381B41C
	0x0381B3EC MOV X0, X22
	0x0381B3F0 BL 0x3EB1AD0
	0x0381B3F4 LDR X21, [X0]
	0x0381B3F8 BL 0x3EB1AE0
	0x0381B3FC ADRP X8, 0x904000
	0x0381B400 LDR X8, [X8 + 0x48]
	0x0381B404 ADD X0, X31, 0x20
	0x0381B408 LDR X1, [X8]
	0x0381B40C BL 0x2BC4968
	0x0381B410 CBZ X21, 0x381AE4C
	0x0381B414 MOV X0, X21
	0x0381B418 BL 0x1C16F18
	0x0381B41C MOV X21, X31
	0x0381B420 B 0x381B428
	0x0381B424 MOV X22, X0
	0x0381B428 ADRP X8, 0x904000
	0x0381B42C LDR X8, [X8 + 0x48]
	0x0381B430 LDR X1, [X8]
	0x0381B434 ADD X0, X31, 0x20
	0x0381B438 BL 0x2BC4968
	0x0381B43C CBZ X21, 0x381B4B0
	0x0381B440 MOV X0, X21
	0x0381B444 BL 0x1C16F18
	0x0381B448 STR W21, [X31]
	0x0381B44C MOV X22, X0
	0x0381B450 CMP W1, 0x1
	0x0381B454 B.NE 0x381B48C
	0x0381B458 MOV X0, X22
	0x0381B45C BL 0x3EB1AD0
	0x0381B460 LDR X23, [X0]
	0x0381B464 BL 0x3EB1AE0
	0x0381B468 ADRP X8, 0x904000
	0x0381B46C LDR X8, [X8 + 0x48]
	0x0381B470 ADD X0, X31, 0x20
	0x0381B474 LDR X1, [X8]
	0x0381B478 BL 0x2BC4968
	0x0381B47C LDR W21, [X31]
	0x0381B480 CBZ X23, 0x381B0AC
	0x0381B484 MOV X0, X23
	0x0381B488 BL 0x1C16F18
	0x0381B48C MOV X23, X31
	0x0381B490 B 0x381B498
	0x0381B494 MOV X22, X0
	0x0381B498 ADRP X8, 0x904000
	0x0381B49C LDR X8, [X8 + 0x48]
	0x0381B4A0 LDR X1, [X8]
	0x0381B4A4 ADD X0, X31, 0x20
	0x0381B4A8 BL 0x2BC4968
	0x0381B4AC CBNZ X23, 0x381B4B8
	0x0381B4B0 MOV X0, X22
	0x0381B4B4 BL 0x1D2C690
	0x0381B4B8 MOV X0, X23
	0x0381B4BC BL 0x1C16F18
	0x0381B4C0 BL 0x1990590
	0x0381B4C4 SUB X31, X31, 0x50
	0x0381B4C8 STP X30, X23, [X31 + 0x20]
	0x0381B4CC STP X22, X21, [X31 + 0x30]
	0x0381B4D0 STP X20, X19, [X31 + 0x40]
	0x0381B4D4 ADRP X20, 0xBC6000
	0x0381B4D8 LDRB W8, [X20 + 0x51B]
	0x0381B4DC MOV X21, X2
	0x0381B4E0 MOV X22, X1
	0x0381B4E4 MOV X19, X0
	0x0381B4E8 TBNZ X8, 0x0, 0x381B500
	0x0381B4EC ADRP X0, 0x900000
	0x0381B4F0 LDR X0, [X0 + 0xD18]
	0x0381B4F4 BL 0x1C16CF4
	0x0381B4F8 MOVZ W8, 0x1
	0x0381B4FC STRB W8, [X20 + 0x51B]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+64], X30
	003 Move [X31+72], X25
	004 Move [X31+80], X24
	005 Move [X31+88], X23
	006 Move [X31+96], X22
	007 Move [X31+104], X21
	008 Move [X31+112], X20
	009 Move [X31+120], X19
	010 Move X20, 0xBC8000
	011 Move W8, [X20+1301]
	012 Move X22, X6
	013 Move X19, X1
	014 Move X21, X0
	015 Move [X31+48], X2
	016 Move [X31+56], X3
	017 Move [X31+32], X4
	018 Move [X31+40], X5
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {43}
	023 Move X0, 0x902000
	024 Move X0, [X0+3520]
	025 Call 0x1C17CF4
	026 Move X0, 0x931000
	027 Move X0, [X0+2904]
	028 Call 0x1C17CF4
	029 Move X0, 0x92D000
	030 Move X0, [X0+2952]
	031 Call 0x1C17CF4
	032 Move X0, 0x902000
	033 Move X0, [X0+3352]
	034 Call 0x1C17CF4
	035 Move X0, 0x8E4000
	036 Move X0, [X0+368]
	037 Call 0x1C17CF4
	038 Move X0, 0x8DE000
	039 Move X0, [X0+3056]
	040 Call 0x1C17CF4
	041 Move W8, 1
	042 Move [X20+1301], W8
	043 Move [X31+28], W31
	044 Compare X19, 0
	045 JumpIfEqual {290}
	046 Move X0, [X19+32]
	047 Move X1, X31
	048 Call Activator.CreateInstance, X0
	049 Compare X0, 0
	050 JumpIfEqual {291}
	051 Move X8, 0x931000
	052 Move X8, [X8+2904]
	053 Move X9, [X0]
	054 Move X20, X0
	055 Move X10, [X8]
	056 Move W8, [X9+304]
	057 Move W11, [X10+304]
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move X9, [X9+200]
	060 Add X11, X9, X11
	061 NotImplemented "Instruction LDUR not yet implemented."
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move X24, 0x92C000
	064 Move X24, [X24+2952]
	065 Move X10, [X24]
	066 Move W11, [X10+304]
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Add X8, X9, X11
	069 NotImplemented "Instruction LDUR not yet implemented."
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Compare X22, 0
	072 JumpIfEqual {321}
	073 Add X0, X31, 32
	074 Move X1, X31
	075 Call InternedString.IsEmpty, X0
	076 Move TEMP, X0
	077 And TEMP, TEMP, 1
	078 Compare TEMP, 1
	079 JumpIfNotEqual {104}
	080 Move V0, [X19+1]
	081 Add X0, X31, 32
	082 Move X1, X31
	083 Move [X31+2], V0
	084 Call InternedString.ToString, X0
	085 Compare X0, 0
	086 JumpIfEqual {290}
	087 Move W1, 58
	088 Move X2, X31
	089 Call String.LastIndexOf, X0, X1
	090 Add W31, W0, 1
	091 Move W23, W0
	092 Add X0, X31, 32
	093 Move X1, X31
	094 Call InternedString.ToString, X0
	095 Compare X0, 0
	096 JumpIfEqual {290}
	097 Add W1, W23, 1
	098 Move X2, X31
	099 Call String.Substring, X0, X1
	100 Move X1, X0
	101 Add X0, X31, 32
	102 Move X2, X31
	103 Call InternedString..ctor, X0, X1
	104 Add X0, X31, 32
	105 Move X1, X31
	106 Call InternedString.ToString, X0
	107 Compare X0, 0
	108 JumpIfEqual {290}
	109 Move W1, 47
	110 Move X2, X31
	111 Call String.IndexOf, X0, X1
	112 Add W31, W0, 1
	113 Add X0, X31, 32
	114 Move X1, X31
	115 Call InternedString.ToString, X0
	116 Move X1, X31
	117 Call InputControlPath.CleanSlashes, X0
	118 Move X1, X0
	119 Add X0, X31, 32
	120 Move X2, X31
	121 Call InternedString..ctor, X0, X1
	122 Add X0, X31, 48
	123 Move X1, X31
	124 Call InternedString.IsEmpty, X0
	125 Move TEMP, X0
	126 And TEMP, TEMP, 1
	127 Compare TEMP, 1
	128 JumpIfNotEqual {163}
	129 NotImplemented "Instruction LDUR not yet implemented."
	130 Add X0, X31, 48
	131 Move X1, X31
	132 Move [X31+3], V0
	133 Call InternedString.IsEmpty, X0
	134 Move TEMP, X0
	135 And TEMP, TEMP, 1
	136 Compare TEMP, 1
	137 JumpIfNotEqual {163}
	138 Move X23, 0x901000
	139 Move X23, [X23+3520]
	140 Move X0, [X23]
	141 Move W8, [X0+224]
	142 Compare W8, 0
	143 JumpIfNotEqual {145}
	144 Call 0x1C17DFC
	145 Move X25, 0xBC7000
	146 Move W8, [X25+1326]
	147 Compare W8, 0
	148 JumpIfNotEqual {154}
	149 Move X0, 0x901000
	150 Move X0, [X0+3520]
	151 Call 0x1C17CF4
	152 Move W8, 1
	153 Move [X25+1326], W8
	154 Move X0, [X23]
	155 Move W8, [X0+224]
	156 Compare W8, 0
	157 JumpIfNotEqual {160}
	158 Call 0x1C17DFC
	159 Move X0, [X23]
	160 Move X8, [X0+184]
	161 Move V0, [X8]
	162 Move [X31+3], V0
	163 Move V0, [X31+2]
	164 Move X9, [X20]
	165 Move [X20+2], V0
	166 Move X8, [X19+152]
	167 Move [X20+64], X8
	168 Move V0, [X19+1]
	169 Move [X20+88], V0
	170 Move V0, [X31+3]
	171 Move [X20+128], X22
	172 Move [X20+104], V0
	173 Move X8, [X21]
	174 Move [X20+120], X8
	175 Move X8, [X24]
	176 Move W11, [X9+304]
	177 Move W10, [X8+304]
	178 NotImplemented "Instruction CMP not yet implemented."
	179 Move X9, [X9+200]
	180 Add X9, X9, X10
	181 NotImplemented "Instruction LDUR not yet implemented."
	182 NotImplemented "Instruction CMP not yet implemented."
	183 Move W8, [X19+168]
	184 Move X0, X20
	185 Move X2, X31
	186 Move W1, W8
	187 ShiftRight W1, 5
	188 And W1, W1, 31
	189 Call InputControl.set_noisy, X0, X1
	190 Move X2, [X31+48]
	191 Move X3, [X31+56]
	192 Move [X31+28], W31
	193 Add X5, X31, 28
	194 Move X0, X21
	195 Move X1, X19
	196 Move X4, X20
	197 Call InputDeviceBuilder.AddChildControls, X0, X1, X2, X3, X4
	198 Move X0, X20
	199 Call InputDeviceBuilder.ComputeStateLayout, X0
	200 Move W8, [X31+28]
	201 Compare W8, 0
	202 JumpIfEqual {227}
	203 Move X21, [X19+144]
	204 Compare X21, 0
	205 JumpIfEqual {290}
	206 Move X8, [X21+24]
	207 NotImplemented "Instruction CMP not yet implemented."
	208 Move X22, X31
	209 And X8, X8, 0
	210 Add X23, X21, 80
	211 NotImplemented "Instruction CMP not yet implemented."
	212 Move X0, [X23]
	213 Move X1, X31
	214 Call String.IsNullOrEmpty, X0
	215 Move TEMP, X0
	216 And TEMP, TEMP, 1
	217 Compare TEMP, 1
	218 JumpIfEqual {223}
	219 Subtract X1, X23, 48
	220 Move X0, X20
	221 Move X2, X19
	222 Call InputDeviceBuilder.ApplyUseStateFrom, X0, X1, X2
	223 Move W8, [X21+24]
	224 Add X22, X22, 1
	225 Add X23, X23, 208
	226 NotImplemented "Instruction CMP not yet implemented."
	227 Move X0, X20
	228 Move X20, [X31+112]
	229 Move X19, [X31+120]
	230 Move X22, [X31+96]
	231 Move X21, [X31+104]
	232 Move X24, [X31+80]
	233 Move X23, [X31+88]
	234 Move X30, [X31+64]
	235 Move X25, [X31+72]
	236 Add X31, X31, 128
	237 Return X0
	238 Compare X22, 0
	239 JumpIfNotEqual {354}
	240 Move [X21], X20
	241 Move X8, 0x901000
	242 Move X8, [X8+3352]
	243 Move X0, [X8]
	244 Move W8, [X0+224]
	245 Compare W8, 0
	246 JumpIfEqual {249}
	247 Move [X20+20], W31
	248 Move X8, X20
	249 Call 0x1C17DFC
	250 Move X8, [X21]
	251 Move [X20+20], W31
	252 Compare X8, 0
	253 JumpIfEqual {290}
	254 Move [X8+24], W31
	255 Move W9, [X19+56]
	256 Move [X8+16], W9
	257 Move X8, [X21]
	258 Compare X8, 0
	259 JumpIfEqual {290}
	260 Add X9, X8, 312
	261 NotImplemented "Instruction MOVI not yet implemented."
	262 Move [X9], V0
	263 Move [X9+8], V0
	264 NotImplemented "Instruction LDRH not yet implemented."
	265 NotImplemented "Instruction CMP not yet implemented."
	266 And W31, W9, 255
	267 Move W9, [X8+220]
	268 Or W9, W9, 1
	269 Move [X8+220], W9
	270 Move X0, X19
	271 Call InputControlLayout.get_canRunInBackground, X0
	272 And W31, W0, 255
	273 Move X8, [X21]
	274 Compare X8, 0
	275 JumpIfEqual {290}
	276 Move W9, [X8+220]
	277 Move X0, X19
	278 Or W9, W9, 4096
	279 Move [X8+220], W9
	280 Call InputControlLayout.get_canRunInBackground, X0
	281 And X31, X0, 0xFFFF
	282 And W31, W0, 255
	283 Move X8, [X21]
	284 Compare X8, 0
	285 JumpIfEqual {290}
	286 Move W9, [X8+220]
	287 Or W9, W9, 2048
	288 Move [X8+220], W9
	289 Call 0x1C17F28
	290 Call 0x1C17F20
	291 Move X0, X19
	292 Call 0x19913C0
	293 Move X20, [X19+32]
	294 Move X0, X20
	295 Call 0x19913C0
	296 Move X8, [X20]
	297 Move X0, X20
	298 Move X9, [X8+424]
	299 Move X1, [X8+432]
	300 NotImplemented "Instruction BLR not yet implemented."
	301 Move X20, X0
	302 Move X0, X19
	303 Call 0x19913C0
	304 Move X8, [X19+16]
	305 Move X9, [X19+24]
	306 Move X0, 0x904000
	307 Move [X31+8], X8
	308 Move [X31+16], X9
	309 Move X0, [X0+1296]
	310 Call 0x1C17D08
	311 Add X1, X31, 8
	312 Call 0x1C17E04
	313 Move X19, X0
	314 Move X0, 0x930000
	315 Move X0, [X0+2912]
	316 Call 0x1C17D08
	317 Move X1, X20
	318 Move X2, X19
	319 Move X3, X31
	320 Call String.Format, X0, X1, X2
	321 Move X0, X19
	322 Call 0x19913C0
	323 Move X8, [X19+16]
	324 Move X9, [X19+24]
	325 Move X0, 0x904000
	326 Move [X31+8], X8
	327 Move [X31+16], X9
	328 Move X0, [X0+1296]
	329 Call 0x1C17D08
	330 Add X1, X31, 8
	331 Call 0x1C17E04
	332 Move X19, X0
	333 Move X0, 0x930000
	334 Move X0, [X0+2920]
	335 Call 0x1C17D08
	336 Move X1, X19
	337 Move X2, X31
	338 Call String.Format, X0, X1
	339 Move X19, X0
	340 Move X0, 0x8D9000
	341 Move X0, [X0+1456]
	342 Call 0x1C17D08
	343 Call 0x1C17F10
	344 Move X1, X19
	345 Move X2, X31
	346 Move X20, X0
	347 Call InvalidOperationException..ctor, X0, X1
	348 Move X0, 0x930000
	349 Move X0, [X0+2928]
	350 Call 0x1C17D08
	351 Move X1, X0
	352 Move X0, X20
	353 Call 0x1C17DEC
	354 Move X0, X19
	355 Call 0x19913C0
	356 Move X8, [X19+16]
	357 Move X9, [X19+24]
	358 Move X0, 0x904000
	359 Move [X31+8], X8
	360 Move [X31+16], X9
	361 Move X0, [X0+1296]
	362 Call 0x1C17D08
	363 Add X1, X31, 8
	364 Call 0x1C17E04
	365 Move X19, X0
	366 Move X0, X22
	367 Call 0x19913C0
	368 Move X0, X22
	369 Move X1, X31
	370 Call InputControl.get_path, X0
	371 Move X20, X0
	372 Move X0, 0x930000
	373 Move X0, [X0+2936]
	374 Call 0x1C17D08
	375 Move X1, X19
	376 Move X2, X20
	377 NotImplemented "Instruction CMP not yet implemented."
	378 Move X19, X0
	379 Move X0, X19
	380 Call 0x3EB2AD0
	381 Move X19, X0
	382 Move X0, 0x8DF000
	383 Move X0, [X0+3264]
	384 Call 0x1C17D08
	385 Move X8, [X19]
	386 Move X1, [X8]
	387 Call 0x1C18270
	388 Move TEMP, X0
	389 And TEMP, TEMP, 1
	390 Compare TEMP, 1
	391 JumpIfNotEqual {396}
	392 Move X19, [X19]
	393 Call 0x3EB2AE0
	394 Move X0, X19
	395 Call 0x1C17F18
	396 Move W0, 8
	397 Call 0x3EB2AF0
	398 Move X8, [X19]
	399 Move [X0], X8
	400 Move X1, 0x69A000
	401 Add X1, X1, 3672
	402 Move X2, X31
	403 Call 0x3EB2B00
	404 Move X19, X0
	405 Call 0x3EB2AE0
	406 Move X0, X19
	407 Call 0x1D2D690
	408 Call 0x1991590

Method: System.Void AddChildControls(UnityEngine.InputSystem.Layouts.InputControlLayout layout, UnityEngine.InputSystem.Utilities.InternedString variants, UnityEngine.InputSystem.InputControl parent, ref System.Boolean haveChildrenUsingStateFromOtherControls)

Disassembly:
	0x0381B500 LDP X0, X1, [X22]
	0x0381B504 MOV X2, X31
	0x0381B508 BL 0x37577E0
	0x0381B50C MOV X1, X0
	0x0381B510 MOV X0, X19
	0x0381B514 MOV W2, W31
	0x0381B518 MOV X3, X31
	0x0381B51C BL 0x37723AC
	0x0381B520 LDR X1, [X22 + 0x30]
	0x0381B524 MOV X20, X0
	0x0381B528 MOV X0, X19
	0x0381B52C MOV W2, W31
	0x0381B530 MOV X3, X31
	0x0381B534 BL 0x37723AC
	0x0381B538 CBZ X0, 0x381B5E8
	0x0381B53C LDR V0, [X0 + 0x1]
	0x0381B540 MOV X23, X0
	0x0381B544 STR V0, [X31 + 0x1]
	0x0381B548 CBZ X20, 0x381B5E4
	0x0381B54C LDR V0, [X31 + 0x1]
	0x0381B550 MOVZ W1, 0x1
	0x0381B554 MOV X0, X20
	0x0381B558 MOV X2, X31
	0x0381B55C STR V0, [X20 + 0x1]
	0x0381B560 BL 0x37734AC
	0x0381B564 MOV X0, X23
	0x0381B568 MOV X1, X31
	0x0381B56C BL 0x3773474
	0x0381B570 AND W1, W0, 0x1
	0x0381B574 MOV X0, X20
	0x0381B578 MOV X2, X31
	0x0381B57C BL 0x3773480
	0x0381B580 LDR X8, [X20 + 0x80]
	0x0381B584 LDR X21, [X23 + 0x80]
	0x0381B588 CMP X8, X21
	0x0381B58C B.EQ 0x381B5D0
	0x0381B590 CMP X21, X19
	0x0381B594 B.EQ 0x381B5D0
	0x0381B598 ADRP X22, 0x900000
	0x0381B59C LDR X22, [X22 + 0xD18]
	0x0381B5A0 LDR X0, [X22]
	0x0381B5A4 LDR W8, [X0 + 0xE0]
	0x0381B5A8 CBNZ W8, 0x381B5B0
	0x0381B5AC BL 0x1C16DFC
	0x0381B5B0 CBZ X21, 0x381B5E4
	0x0381B5B4 LDR W8, [X20 + 0x14]
	0x0381B5B8 LDR W9, [X21 + 0x14]
	0x0381B5BC ADD W8, W9, W8
	0x0381B5C0 STR W8, [X20 + 0x14]
	0x0381B5C4 LDR X21, [X21 + 0x80]
	0x0381B5C8 CMP X21, X19
	0x0381B5CC B.NE 0x381B5A0
	0x0381B5D0 LDP X20, X19, [X31 + 0x40]
	0x0381B5D4 LDP X22, X21, [X31 + 0x30]
	0x0381B5D8 LDP X30, X23, [X31 + 0x20]
	0x0381B5DC ADD X31, X31, 0x50
	0x0381B5E0 RET
	0x0381B5E4 BL 0x1C16F20
	0x0381B5E8 LDP X8, X9, [X22]
	0x0381B5EC LDR X19, [X22 + 0x30]
	0x0381B5F0 ADRP X20, 0x903000
	0x0381B5F4 STP X8, X9, [X31 + 0x10]
	0x0381B5F8 LDR X20, [X20 + 0x510]
	0x0381B5FC MOV X0, X20
	0x0381B600 BL 0x1C16D08
	0x0381B604 ADD X1, X31, 0x10
	0x0381B608 BL 0x1C16E04
	0x0381B60C MOV X22, X0
	0x0381B610 MOV X0, X21
	0x0381B614 BL 0x19903C0
	0x0381B618 LDP X8, X9, [X21 + 0x10]
	0x0381B61C MOV X0, X20
	0x0381B620 STP X8, X9, [X31]
	0x0381B624 BL 0x1C16D08
	0x0381B628 ADD X1, X31, 0x0
	0x0381B62C BL 0x1C16E04
	0x0381B630 MOV X20, X0
	0x0381B634 ADRP X0, 0x92F000
	0x0381B638 LDR X0, [X0 + 0xBC8]
	0x0381B63C BL 0x1C16D08
	0x0381B640 MOV X1, X19
	0x0381B644 MOV X2, X22
	0x0381B648 MOV X3, X20
	0x0381B64C MOV X4, X31
	0x0381B650 BL 0x3227C18
	0x0381B654 MOV X19, X0
	0x0381B658 ADRP X0, 0x8D8000
	0x0381B65C LDR X0, [X0 + 0x5B0]
	0x0381B660 BL 0x1C16D08
	0x0381B664 BL 0x1C16F10
	0x0381B668 MOV X1, X19
	0x0381B66C MOV X2, X31
	0x0381B670 MOV X20, X0
	0x0381B674 BL 0x337DF1C
	0x0381B678 ADRP X0, 0x92F000
	0x0381B67C LDR X0, [X0 + 0xBD0]
	0x0381B680 BL 0x1C16D08
	0x0381B684 MOV X1, X0
	0x0381B688 MOV X0, X20
	0x0381B68C BL 0x1C16DEC
	0x0381B690 STP X29, X30, [X31 - 0x30]!
	0x0381B694 STP X22, X21, [X31 + 0x10]
	0x0381B698 STP X20, X19, [X31 + 0x20]
	0x0381B69C SUB X31, X31, 0x410
	0x0381B6A0 ADRP X22, 0xBC6000
	0x0381B6A4 LDRB W8, [X22 + 0x518]
	0x0381B6A8 MOV X20, X2
	0x0381B6AC MOV X21, X1
	0x0381B6B0 MOV X19, X0
	0x0381B6B4 TBNZ X8, 0x0, 0x381B6F0
	0x0381B6B8 ADRP X0, 0x92F000
	0x0381B6BC LDR X0, [X0 + 0x8E0]
	0x0381B6C0 BL 0x1C16CF4
	0x0381B6C4 ADRP X0, 0x92F000
	0x0381B6C8 LDR X0, [X0 + 0x950]
	0x0381B6CC BL 0x1C16CF4
	0x0381B6D0 ADRP X0, 0x92F000
	0x0381B6D4 LDR X0, [X0 + 0x958]
	0x0381B6D8 BL 0x1C16CF4
	0x0381B6DC ADRP X0, 0x92F000
	0x0381B6E0 LDR X0, [X0 + 0x948]
	0x0381B6E4 BL 0x1C16CF4
	0x0381B6E8 MOVZ W8, 0x1
	0x0381B6EC STRB W8, [X22 + 0x518]
	0x0381B6F0 ADD X0, X31, 0x270
	0x0381B6F4 MOVZ W2, 0xD0
	0x0381B6F8 MOV W1, W31
	0x0381B6FC BL 0x3EB1B10
	0x0381B700 LDR X8, [X19 + 0x10]
	0x0381B704 CBNZ X8, 0x381B730
	0x0381B708 ADRP X8, 0x92F000
	0x0381B70C LDR X8, [X8 + 0x948]
	0x0381B710 LDR X0, [X8]
	0x0381B714 BL 0x1C16F10
	0x0381B718 ADRP X8, 0x92F000
	0x0381B71C LDR X8, [X8 + 0x950]
	0x0381B720 MOV X22, X0
	0x0381B724 LDR X1, [X8]
	0x0381B728 BL 0x2AC9840
	0x0381B72C STR X22, [X19 + 0x10]
	0x0381B730 LDP X2, X3, [X20]
	0x0381B734 MOV X0, X19
	0x0381B738 MOV X1, X21
	0x0381B73C BL 0x381C028
	0x0381B740 LDR X8, [X19 + 0x10]
	0x0381B744 CBZ X8, 0x381B824
	0x0381B748 ADRP X9, 0x92F000
	0x0381B74C LDR X9, [X9 + 0x8E0]
	0x0381B750 MOV X21, X0
	0x0381B754 ADD X2, X31, 0x270
	0x0381B758 MOV X0, X8
	0x0381B75C LDR X3, [X9]
	0x0381B760 MOV X1, X21
	0x0381B764 BL 0x2ACBF4C
	0x0381B768 TBZ X0, 0x0, 0x381B7C8
	0x0381B76C ADD X0, X31, 0xD0
	0x0381B770 MOVZ W2, 0xD0
	0x0381B774 MOV X1, X20
	0x0381B778 BL 0x3EB1AC0
	0x0381B77C ADD X8, X31, 0x1A0
	0x0381B780 ADD X0, X31, 0x270
	0x0381B784 ADD X1, X31, 0xD0
	0x0381B788 BL 0x3815580
	0x0381B78C ADD X0, X31, 0x270
	0x0381B790 ADD X1, X31, 0x1A0
	0x0381B794 MOVZ W2, 0xD0
	0x0381B798 BL 0x3EB1AC0
	0x0381B79C LDR X19, [X19 + 0x10]
	0x0381B7A0 ADD X0, X31, 0x0
	0x0381B7A4 ADD X1, X31, 0x1A0
	0x0381B7A8 MOVZ W2, 0xD0
	0x0381B7AC BL 0x3EB1AC0
	0x0381B7B0 CBZ X19, 0x381B824
	0x0381B7B4 ADRP X8, 0x92F000
	0x0381B7B8 LDR X8, [X8 + 0x958]
	0x0381B7BC ADD X0, X31, 0x340
	0x0381B7C0 ADD X1, X31, 0x0
	0x0381B7C4 B 0x381B7F0
	0x0381B7C8 LDR X19, [X19 + 0x10]
	0x0381B7CC ADD X0, X31, 0x1A0
	0x0381B7D0 MOVZ W2, 0xD0
	0x0381B7D4 MOV X1, X20
	0x0381B7D8 BL 0x3EB1AC0
	0x0381B7DC CBZ X19, 0x381B824
	0x0381B7E0 ADRP X8, 0x92F000
	0x0381B7E4 LDR X8, [X8 + 0x958]
	0x0381B7E8 ADD X0, X31, 0x340
	0x0381B7EC ADD X1, X31, 0x1A0
	0x0381B7F0 LDR X20, [X8]
	0x0381B7F4 MOVZ W2, 0xD0
	0x0381B7F8 BL 0x3EB1AC0
	0x0381B7FC ADD X2, X31, 0x340
	0x0381B800 MOV X0, X19
	0x0381B804 MOV X1, X21
	0x0381B808 MOV X3, X20
	0x0381B80C BL 0x2ACA158
	0x0381B810 ADD X31, X31, 0x410
	0x0381B814 LDP X20, X19, [X31 + 0x20]
	0x0381B818 LDP X22, X21, [X31 + 0x10]
	0x0381B81C LDP X29, X30, [X31], #0x30
	0x0381B820 RET
	0x0381B824 BL 0x1C16F20
	0x0381B828 STP X29, X30, [X31 - 0x60]!
	0x0381B82C STP X28, X27, [X31 + 0x10]
	0x0381B830 STP X26, X25, [X31 + 0x20]
	0x0381B834 STP X24, X23, [X31 + 0x30]
	0x0381B838 STP X22, X21, [X31 + 0x40]
	0x0381B83C STP X20, X19, [X31 + 0x50]
	0x0381B840 SUB X31, X31, 0x370
	0x0381B844 ADRP X28, 0xBC6000
	0x0381B848 LDRB W8, [X28 + 0x517]
	0x0381B84C LDR X27, [X31 + 0x3D0]
	0x0381B850 MOV W24, W7
	0x0381B854 MOV X20, X6
	0x0381B858 MOV X23, X5
	0x0381B85C MOV X22, X4
	0x0381B860 MOV X25, X3
	0x0381B864 MOV X26, X2
	0x0381B868 MOV X19, X1
	0x0381B86C MOV X21, X0
	0x0381B870 TBNZ X8, 0x0, 0x381B8E8
	0x0381B874 ADRP X0, 0x92F000
	0x0381B878 LDR X0, [X0 + 0xBD8]
	0x0381B87C BL 0x1C16CF4
	0x0381B880 ADRP X0, 0x92F000
	0x0381B884 LDR X0, [X0 + 0xB80]
	0x0381B888 BL 0x1C16CF4
	0x0381B88C ADRP X0, 0x900000
	0x0381B890 LDR X0, [X0 + 0xC90]
	0x0381B894 BL 0x1C16CF4
	0x0381B898 ADRP X0, 0x92F000
	0x0381B89C LDR X0, [X0 + 0x8E0]
	0x0381B8A0 BL 0x1C16CF4
	0x0381B8A4 ADRP X0, 0x900000
	0x0381B8A8 LDR X0, [X0 + 0xD18]
	0x0381B8AC BL 0x1C16CF4
	0x0381B8B0 ADRP X0, 0x92F000
	0x0381B8B4 LDR X0, [X0 + 0xBE0]
	0x0381B8B8 BL 0x1C16CF4
	0x0381B8BC ADRP X0, 0x900000
	0x0381B8C0 LDR X0, [X0 + 0xDC8]
	0x0381B8C4 BL 0x1C16CF4
	0x0381B8C8 ADRP X0, 0x92B000
	0x0381B8CC LDR X0, [X0 + 0x388]
	0x0381B8D0 BL 0x1C16CF4
	0x0381B8D4 ADRP X0, 0x92F000
	0x0381B8D8 LDR X0, [X0 + 0x960]
	0x0381B8DC BL 0x1C16CF4
	0x0381B8E0 MOVZ W8, 0x1
	0x0381B8E4 STRB W8, [X28 + 0x517]
	0x0381B8E8 ADD X0, X31, 0x2A0
	0x0381B8EC MOVZ W2, 0xD0
	0x0381B8F0 MOV W1, W31
	0x0381B8F4 BL 0x3EB1B10
	0x0381B8F8 STR X31, [X31 + 0x298]
	0x0381B8FC STR X31, [X31 + 0x290]
	0x0381B900 CBZ X27, 0x381B920
	0x0381B904 ADD X0, X31, 0x1B0
	0x0381B908 MOV X1, X27
	0x0381B90C MOV X2, X31
	0x0381B910 STP X31, X31, [X31 + 0x1B0]
	0x0381B914 BL 0x3757420
	0x0381B918 LDP X27, X28, [X31 + 0x1B0]
	0x0381B91C B 0x381B924
	0x0381B920 LDP X27, X28, [X20]
	0x0381B924 LDP X0, X1, [X20 + 0x10]
	0x0381B928 MOV X2, X31
	0x0381B92C BL 0x37577E0
	0x0381B930 MOV X1, X31
	0x0381B934 BL 0x32277A8
	0x0381B938 TBNZ X0, 0x0, 0x381BDB4
	0x0381B93C LDR X8, [X21 + 0x10]
	0x0381B940 CBZ X8, 0x381B9B0
	0x0381B944 MOV X0, X21
	0x0381B948 MOV X1, X22
	0x0381B94C MOV X2, X27
	0x0381B950 MOV X3, X28
	0x0381B954 BL 0x381C028
	0x0381B958 LDR X8, [X21 + 0x10]
	0x0381B95C CBZ X8, 0x381BDA0
	0x0381B960 ADRP X9, 0x92F000
	0x0381B964 LDR X9, [X9 + 0x8E0]
	0x0381B968 MOV X1, X0
	0x0381B96C ADD X2, X31, 0x2A0
	0x0381B970 MOV X0, X8
	0x0381B974 LDR X3, [X9]
	0x0381B978 BL 0x2ACBF4C
	0x0381B97C TBZ X0, 0x0, 0x381B9B0
	0x0381B980 ADD X0, X31, 0xE0
	0x0381B984 MOVZ W2, 0xD0
	0x0381B988 MOV X1, X20
	0x0381B98C BL 0x3EB1AC0
	0x0381B990 ADD X8, X31, 0x1B0
	0x0381B994 ADD X0, X31, 0x2A0
	0x0381B998 ADD X1, X31, 0xE0
	0x0381B99C BL 0x3815580
	0x0381B9A0 ADD X1, X31, 0x1B0
	0x0381B9A4 MOVZ W2, 0xD0
	0x0381B9A8 MOV X0, X20
	0x0381B9AC BL 0x3EB1AC0
	0x0381B9B0 LDP X1, X2, [X20 + 0x10]
	0x0381B9B4 MOV X0, X21
	0x0381B9B8 MOV X3, X26
	0x0381B9BC MOV X4, X25
	0x0381B9C0 MOV X5, X27
	0x0381B9C4 MOV X6, X28
	0x0381B9C8 MOV X7, X22
	0x0381B9CC BL 0x3819B80
	0x0381B9D0 LDR X8, [X21]
	0x0381B9D4 CBZ X8, 0x381BDA0
	0x0381B9D8 LDR X25, [X8 + 0x150]
	0x0381B9DC CBZ X25, 0x381BDA0
	0x0381B9E0 MOV X22, X0
	0x0381B9E4 CBZ X0, 0x381B9FC
	0x0381B9E8 LDR X8, [X25]
	0x0381B9EC MOV X0, X22
	0x0381B9F0 LDR X1, [X8 + 0x40]
	0x0381B9F4 BL 0x1C16E00
	0x0381B9F8 CBZ X0, 0x381BDA8
	0x0381B9FC LDR W8, [X25 + 0x18]
	0x0381BA00 CMP W8, W24
	0x0381BA04 B.LS 0x381BDA4
	0x0381BA08 ADD X8, X25, W24, 0x3, SXTW
	0x0381BA0C STR X22, [X8 + 0x20]
	0x0381BA10 CBZ X22, 0x381BDA0
	0x0381BA14 LDR W8, [X20 + 0x98]
	0x0381BA18 MOV X0, X22
	0x0381BA1C MOV X2, X31
	0x0381BA20 UBFM W1, W8, 0x1, 0x1
	0x0381BA24 BL 0x377222C
	0x0381BA28 LDR W8, [X20 + 0x98]
	0x0381BA2C MOV X0, X22
	0x0381BA30 MOV X2, X31
	0x0381BA34 UBFM W1, W8, 0x2, 0x2
	0x0381BA38 BL 0x377230C
	0x0381BA3C LDR X0, [X20 + 0x30]
	0x0381BA40 MOV X1, X31
	0x0381BA44 BL 0x32277A8
	0x0381BA48 ORN W8, W31, W0, 0x0
	0x0381BA4C AND W1, W8, 0x1
	0x0381BA50 MOV X0, X22
	0x0381BA54 MOV X2, X31
	0x0381BA58 BL 0x37734AC
	0x0381BA5C MOV X0, X22
	0x0381BA60 MOV X1, X31
	0x0381BA64 BL 0x3772220
	0x0381BA68 TBNZ X0, 0x0, 0x381BA7C
	0x0381BA6C LDRB W8, [X20 + 0x98]
	0x0381BA70 TBNZ X8, 0x4, 0x381BA7C
	0x0381BA74 MOV W1, W31
	0x0381BA78 B 0x381BA90
	0x0381BA7C MOV X0, X22
	0x0381BA80 MOV X1, X31
	0x0381BA84 BL 0x37734A0
	0x0381BA88 ORN W8, W31, W0, 0x0
	0x0381BA8C AND W1, W8, 0x1
	0x0381BA90 MOV X0, X22
	0x0381BA94 MOV X2, X31
	0x0381BA98 BL 0x3773480
	0x0381BA9C MOV X0, X22
	0x0381BAA0 MOV X1, X31
	0x0381BAA4 BL 0x3772220
	0x0381BAA8 TBZ X0, 0x0, 0x381BAC0
	0x0381BAAC LDR X0, [X21]
	0x0381BAB0 CBZ X0, 0x381BDA0
	0x0381BAB4 MOVZ W1, 0x1
	0x0381BAB8 MOV X2, X31
	0x0381BABC BL 0x377222C
	0x0381BAC0 ADRP X8, 0x900000
	0x0381BAC4 LDR X8, [X8 + 0xC90]
	0x0381BAC8 LDR X9, [X22]
	0x0381BACC LDR X8, [X8]
	0x0381BAD0 LDRB W11, [X9 + 0x130]
	0x0381BAD4 LDRB W10, [X8 + 0x130]
	0x0381BAD8 CMP W11, W10
	0x0381BADC B.CS 0x381BAE8
	0x0381BAE0 MOV X8, X31
	0x0381BAE4 B 0x381BAFC
	0x0381BAE8 LDR X9, [X9 + 0xC8]
	0x0381BAEC ADD X9, X9, X10, 0x3, LSL
	0x0381BAF0 LDUR X9, [X9 - 0x8]
	0x0381BAF4 CMP X9, X8
	0x0381BAF8 CSEL X8, X22, X31, EQ
	0x0381BAFC CMP X8, 0x0
	0x0381BB00 CSET W1, NE
	0x0381BB04 MOV X0, X22
	0x0381BB08 MOV X2, X31
	0x0381BB0C BL 0x3773454
	0x0381BB10 MOV X0, X22
	0x0381BB14 MOV X1, X31
	0x0381BB18 BL 0x3773474
	0x0381BB1C TBZ X0, 0x0, 0x381BB34
	0x0381BB20 LDR X0, [X21]
	0x0381BB24 CBZ X0, 0x381BDA0
	0x0381BB28 MOVZ W1, 0x1
	0x0381BB2C MOV X2, X31
	0x0381BB30 BL 0x37764C0
	0x0381BB34 LDR X8, [X20 + 0x38]
	0x0381BB38 MOV X0, X22
	0x0381BB3C MOV X1, X31
	0x0381BB40 STR X8, [X22 + 0x40]
	0x0381BB44 LDR X8, [X20 + 0x40]
	0x0381BB48 STR X8, [X22 + 0x50]
	0x0381BB4C LDR V0, [X20 + 0xA]
	0x0381BB50 STR V0, [X0 + 0xA8]!
	0x0381BB54 BL 0x3758800
	0x0381BB58 TBNZ X0, 0x0, 0x381BB70
	0x0381BB5C LDR X0, [X21]
	0x0381BB60 CBZ X0, 0x381BDA0
	0x0381BB64 MOVZ W1, 0x1
	0x0381BB68 MOV X2, X31
	0x0381BB6C BL 0x37763C4
	0x0381BB70 LDR V0, [X20 + 0xB]
	0x0381BB74 ADD X0, X31, 0x290
	0x0381BB78 MOV X1, X31
	0x0381BB7C STR V0, [X31 + 0x29]
	0x0381BB80 BL 0x3758800
	0x0381BB84 TBNZ X0, 0x0, 0x381BB90
	0x0381BB88 LDR V0, [X20 + 0xB]
	0x0381BB8C STUR V0, [X22 + 0xB8]
	0x0381BB90 LDR V0, [X20 + 0xC]
	0x0381BB94 ADD X0, X31, 0x290
	0x0381BB98 MOV X1, X31
	0x0381BB9C STR V0, [X31 + 0x29]
	0x0381BBA0 BL 0x3758800
	0x0381BBA4 TBNZ X0, 0x0, 0x381BBB0
	0x0381BBA8 LDR V0, [X20 + 0xC]
	0x0381BBAC STUR V0, [X22 + 0xC8]
	0x0381BBB0 MOV X0, X22
	0x0381BBB4 MOV X1, X31

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Subtract X31, X31, 992
	014 Move X19, 0xBC7000
	015 Move W8, [X19+1302]
	016 Move X28, X4
	017 Move X23, X3
	018 Move X27, X2
	019 Move X20, X1
	020 Move X26, X0
	021 Move [X31+128], X5
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {37}
	026 Move X0, 0x930000
	027 Move X0, [X0+2944]
	028 Call 0x1C17CF4
	029 Move X0, 0x901000
	030 Move X0, [X0+3352]
	031 Call 0x1C17CF4
	032 Move X0, 0x8E2000
	033 Move X0, [X0+2120]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X19+1302], W8
	037 Move [X31+984], X31
	038 Move [X31+976], X31
	039 Move [X31+796], W31
	040 Compare X20, 0
	041 JumpIfEqual {451}
	042 Move X24, [X20+144]
	043 Move [X31+112], X20
	044 Compare X24, 0
	045 JumpIfEqual {436}
	046 Move X8, [X24+24]
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move [X31+92], W31
	049 Move [X31+68], W31
	050 Move X29, 0x8E2000
	051 Move X29, [X29+2120]
	052 Move X21, X31
	053 Add X20, X31, 800
	054 And X8, X8, 0
	055 Add X22, X24, 188
	056 NotImplemented "Instruction CMP not yet implemented."
	057 NotImplemented "Instruction LDUR not yet implemented."
	058 Add X0, X31, 976
	059 Move X1, X31
	060 Move [X20+11], V0
	061 Call InternedString.IsEmpty, X0
	062 Move TEMP, X0
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfEqual {95}
	066 Move W8, [X24+24]
	067 NotImplemented "Instruction CMP not yet implemented."
	068 NotImplemented "Instruction LDUR not yet implemented."
	069 NotImplemented "Instruction LDUR not yet implemented."
	070 Move X2, X31
	071 Call InternedString.op_Implicit, X0
	072 Move X19, X0
	073 Move X0, X27
	074 Move X1, X23
	075 Move X2, X31
	076 Call InternedString.op_Implicit, X0
	077 Move X8, [X29]
	078 Compare X8, 0
	079 JumpIfEqual {451}
	080 Move X20, X0
	081 Move X0, X8
	082 Move W1, W31
	083 Move X2, X31
	084 Call String.get_Chars, X0, X1
	085 Move W2, W0
	086 Move X0, X19
	087 Move X1, X20
	088 Move X3, X31
	089 Call StringHelpers.CharacterSeparatedListsHaveAtLeastOneCommonElement, X0, X1, X2
	090 Add X20, X31, 800
	091 Move TEMP, X0
	092 And TEMP, TEMP, 1
	093 Compare TEMP, 1
	094 JumpIfNotEqual {119}
	095 Move W8, [X24+24]
	096 NotImplemented "Instruction CMP not yet implemented."
	097 NotImplemented "Instruction LDURB not yet implemented."
	098 Move W8, [X22]
	099 Move TEMP, X9
	100 And TEMP, TEMP, 1
	101 Compare TEMP, 1
	102 JumpIfEqual {108}
	103 Compare W8, 0
	104 JumpIfEqual {116}
	105 Move W9, [X31+92]
	106 Add W9, W8, W9
	107 Move [X31+92], W9
	108 Compare W8, 0
	109 JumpIfNotEqual {452}
	110 Subtract X2, X22, 156
	111 Move X0, X26
	112 Move X1, X28
	113 Call InputDeviceBuilder.InsertChildControlOverride, X0, X1, X2
	114 Move W8, 1
	115 Move [X31+68], W8
	116 Move W8, [X31+92]
	117 Add W8, W8, 1
	118 Move [X31+92], W8
	119 Move W8, [X24+24]
	120 Add X21, X21, 1
	121 Add X22, X22, 208
	122 NotImplemented "Instruction CMP not yet implemented."
	123 Move W8, [X31+92]
	124 Compare W8, 0
	125 JumpIfEqual {431}
	126 Move X8, [X26]
	127 Compare X8, 0
	128 JumpIfEqual {451}
	129 Move X9, 0x930000
	130 Move X9, [X9+2944]
	131 Move W1, [X31+92]
	132 Add X0, X8, 336
	133 Move X2, [X9]
	134 Call 0x2179BD8, X0, X1
	135 Move X8, [X24+24]
	136 Move [X31+80], X24
	137 Move [X31+36], W0
	138 NotImplemented "Instruction CMP not yet implemented."
	139 And X8, X8, 0
	140 Add X9, X31, 376
	141 Add X10, X31, 168
	142 Add X13, X9, 16
	143 Add X12, X9, 48
	144 Move [X31+96], X12
	145 Move [X31+104], X13
	146 Add X21, X9, 160
	147 Add X12, X10, 16
	148 Add X9, X10, 48
	149 Move X11, X31
	150 Move [X31+48], X9
	151 Move [X31+56], X12
	152 Add X9, X10, 160
	153 Move W29, W0
	154 Move [X31+40], X9
	155 NotImplemented "Instruction CMP not yet implemented."
	156 Move X8, [X31+80]
	157 Move W9, 208
	158 Add X0, X31, 856
	159 Move W2, 104
	160 NotImplemented "Instruction MADD not yet implemented."
	161 Move V0, [X19+3]
	162 Move X9, [X19+32]
	163 Move X8, [X19+40]
	164 Add X1, X19, 80
	165 Move [X20+10], V0
	166 Move X25, [X19+64]
	167 Move X24, [X19+72]
	168 Move [X31+72], X11
	169 Move [X31+152], X9
	170 Move [X31+160], X8
	171 Call 0x3EB2AC0
	172 Move V1, [X19+192]
	173 Move V0, [X19+208]
	174 Move V2, [X19+14]
	175 Move W8, [X19+184]
	176 Move W22, [X19+188]
	177 Move [X20], V1
	178 Move [X20+8], V0
	179 Move [X20+2], V2
	180 Move [X31+148], W8
	181 Move TEMP, X8
	182 And TEMP, TEMP, 1
	183 Compare TEMP, 1
	184 JumpIfEqual {346}
	185 Add X0, X31, 976
	186 Move X1, X31
	187 Move [X31+976], X25
	188 Move [X31+984], X24
	189 Call InternedString.IsEmpty, X0
	190 Move [X31+136], X25
	191 Move TEMP, X0
	192 And TEMP, TEMP, 1
	193 Compare TEMP, 1
	194 JumpIfEqual {226}
	195 Move X0, X25
	196 Move X1, X24
	197 Move X2, X31
	198 Move [X31+120], X24
	199 Call InternedString.op_Implicit, X0
	200 Move X19, X0
	201 Move X0, X27
	202 Move X1, X23
	203 Move X2, X31
	204 Call InternedString.op_Implicit, X0
	205 Move X8, 0x8E2000
	206 Move X8, [X8+2120]
	207 Move X8, [X8]
	208 Compare X8, 0
	209 JumpIfEqual {451}
	210 Move X24, X0
	211 Move X0, X8
	212 Move W1, W31
	213 Move X2, X31
	214 Call String.get_Chars, X0, X1
	215 Move W2, W0
	216 Move X0, X19
	217 Move X1, X24
	218 Move X3, X31
	219 Call StringHelpers.CharacterSeparatedListsHaveAtLeastOneCommonElement, X0, X1, X2
	220 Move X25, [X31+136]
	221 Move X24, [X31+120]
	222 Move TEMP, X0
	223 And TEMP, TEMP, 1
	224 Compare TEMP, 1
	225 JumpIfNotEqual {346}
	226 Compare W22, 0
	227 JumpIfEqual {312}
	228 NotImplemented "Instruction CMP not yet implemented."
	229 Move [X31+796], W31
	230 Move [X31+120], X24
	231 Move X25, [X31+152]
	232 Move X24, [X31+160]
	233 Move X2, X31
	234 Move X0, X25
	235 Move X1, X24
	236 Call InternedString.op_Implicit, X0
	237 Move X19, X0
	238 Add X0, X31, 796
	239 Move X1, X31
	240 Call Int32.ToString, X0
	241 Move X1, X0
	242 Move X0, X19
	243 Move X2, X31
	244 Call String.Concat, X0, X1
	245 Move X19, X0
	246 Move V0, [X20+10]
	247 Move X0, [X31+96]
	248 Move X8, [X31+104]
	249 Add X1, X31, 856
	250 Move W2, 104
	251 Move [X8], V0
	252 Call 0x3EB2AC0
	253 Move V0, [X20]
	254 Move V1, [X20+16]
	255 Move V2, [X20+2]
	256 Move X5, [X31+128]
	257 Move X9, [X31+136]
	258 Move X1, [X31+112]
	259 Move X8, [X31+120]
	260 Move [X21], V0
	261 Move [X21+8], V1
	262 Move [X21+2], V2
	263 Add X6, X31, 376
	264 Move [X31+408], X9
	265 Move [X31+416], X8
	266 Move W8, [X31+148]
	267 Move X0, X26
	268 Move X2, X27
	269 Move X3, X23
	270 Move X4, X28
	271 Move W7, W29
	272 Move [X31+376], X25
	273 Move [X31+384], X24
	274 Move [X31+528], W8
	275 Move [X31+532], W22
	276 Move [X31], X19
	277 Call InputDeviceBuilder.AddChildControl, X0, X1, X2, X3, X4, X5, X6, X7
	278 Compare X0, 0
	279 JumpIfEqual {451}
	280 Move X8, 0x901000
	281 Move X8, [X8+3352]
	282 Move X19, X0
	283 Move X0, [X8]
	284 Move W8, [X0+224]
	285 Compare W8, 0
	286 JumpIfNotEqual {288}
	287 Call 0x1C17DFC
	288 Move W24, [X19+20]
	289 Add W31, W24, 1
	290 Move X8, 0x901000
	291 Move X8, [X8+3352]
	292 Move X20, X26
	293 Move X0, [X8]
	294 Move W8, [X0+224]
	295 Compare W8, 0
	296 JumpIfNotEqual {299}
	297 Call 0x1C17DFC
	298 Move W24, [X19+20]
	299 Move W25, [X31+796]
	300 Add X0, X19, 16
	301 Move X1, X31
	302 Call InputStateBlock.get_alignedSizeInBytes, X0
	303 NotImplemented "Instruction MADD not yet implemented."
	304 Move X26, X20
	305 Add X20, X31, 800
	306 Move [X19+20], W8
	307 Move W8, [X31+796]
	308 Add W29, W29, 1
	309 Add W8, W8, 1
	310 NotImplemented "Instruction CMP not yet implemented."
	311 Move [X31+796], W8
	312 Move V0, [X20+10]
	313 Move X0, [X31+48]
	314 Move X8, [X31+56]
	315 Add X1, X31, 856
	316 Move W2, 104
	317 Move [X8], V0
	318 Call 0x3EB2AC0
	319 Move V0, [X20]
	320 Move V1, [X20+16]
	321 Move V2, [X20+2]
	322 Move X8, [X31+40]
	323 Move X9, [X31+152]
	324 Move X1, [X31+112]
	325 Move X5, [X31+128]
	326 Move [X8], V0
	327 Move [X8+8], V1
	328 Move [X8+2], V2
	329 Move X8, [X31+160]
	330 Add X6, X31, 168
	331 Move X0, X26
	332 Move X2, X27
	333 Move [X31+168], X9
	334 Move [X31+176], X8
	335 Move W8, [X31+148]
	336 Move X3, X23
	337 Move X4, X28
	338 Move W7, W29
	339 Move [X31+200], X25
	340 Move [X31+208], X24
	341 Move [X31+320], W8
	342 Move [X31+324], W31
	343 Move [X31], X31
	344 Call InputDeviceBuilder.AddChildControl, X0, X1, X2, X3, X4, X5, X6, X7
	345 Add W29, W29, 1
	346 Move X11, [X31+72]
	347 Move X8, [X31+80]
	348 Move W8, [X8+24]
	349 Add X11, X11, 1
	350 NotImplemented "Instruction CMP not yet implemented."
	351 Move X29, 0x8E2000
	352 Move X29, [X29+2120]
	353 Compare X28, 0
	354 JumpIfEqual {451}
	355 Move W10, [X31+68]
	356 NotImplemented "Instruction CMP not yet implemented."
	357 NotImplemented "Instruction CSET not yet implemented."
	358 Move W11, [X31+92]
	359 NotImplemented "Instruction ORN not yet implemented."
	360 Move W10, [X31+36]
	361 Move X24, [X31+80]
	362 Move [X28+152], W11
	363 Move [X28+156], W10
	364 Move TEMP, X9
	365 And TEMP, TEMP, 1
	366 Compare TEMP, 1
	367 JumpIfEqual {436}
	368 Move X21, X31
	369 Add X22, X24, 72
	370 NotImplemented "Instruction CMP not yet implemented."
	371 Subtract X1, X22, 40
	372 Add X0, X31, 584
	373 Move W2, 208
	374 Call 0x3EB2AC0
	375 Move W8, [X31+736]
	376 Move TEMP, X8
	377 And TEMP, TEMP, 1
	378 Compare TEMP, 1
	379 JumpIfNotEqual {427}
	380 Add X8, X31, 361
	381 NotImplemented "Instruction LDUR not yet implemented."
	382 Add X0, X31, 976
	383 Move X1, X31
	384 Move [X20+11], V0
	385 Call InternedString.IsEmpty, X0
	386 Move TEMP, X0
	387 And TEMP, TEMP, 1
	388 Compare TEMP, 1
	389 JumpIfEqual {419}
	390 Move W8, [X24+24]
	391 NotImplemented "Instruction CMP not yet implemented."
	392 Move X0, [X22-8]
	393 Move X1, [X22]
	394 Move X2, X31
	395 Call InternedString.op_Implicit, X0
	396 Move X19, X0
	397 Move X0, X27
	398 Move X1, X23
	399 Move X2, X31
	400 Call InternedString.op_Implicit, X0
	401 Move X8, [X29]
	402 Compare X8, 0
	403 JumpIfEqual {451}
	404 Move X20, X0
	405 Move X0, X8
	406 Move W1, W31
	407 Move X2, X31
	408 Call String.get_Chars, X0, X1
	409 Move W2, W0
	410 Move X0, X19
	411 Move X1, X20
	412 Move X3, X31
	413 Call StringHelpers.CharacterSeparatedListsHaveAtLeastOneCommonElement, X0, X1, X2
	414 Add X20, X31, 800
	415 Move TEMP, X0
	416 And TEMP, TEMP, 1
	417 Compare TEMP, 1
	418 JumpIfNotEqual {427}
	419 Move X1, [X31+112]
	420 Move X5, [X31+128]
	421 Add X6, X31, 584
	422 Move X0, X26
	423 Move X2, X27
	424 Move X3, X23
	425 Move X4, X28
	426 Call InputDeviceBuilder.AddChildControlIfMissing, X0, X1, X2, X3, X4, X5
	427 Move W8, [X24+24]
	428 Add X21, X21, 1
	429 Add X22, X22, 208
	430 NotImplemented "Instruction CMP not yet implemented."
	431 Compare X28, 0
	432 JumpIfEqual {451}
	433 Move X8, [X31+128]
	434 Move [X28+152], X31
	435 Move [X8], W31
	436 Add X31, X31, 992
	437 Move X20, [X31+80]
	438 Move X19, [X31+88]
	439 Move X22, [X31+64]
	440 Move X21, [X31+72]
	441 Move X24, [X31+48]
	442 Move X23, [X31+56]
	443 Move X26, [X31+32]
	444 Move X25, [X31+40]
	445 Move X28, [X31+16]
	446 Move X27, [X31+24]
	447 Move X29, [X31+96]
	448 Move X30, [X31+104]
	449 Return 
	450 Call 0x1C17F28
	451 Call 0x1C17F20
	452 NotImplemented "Instruction LDUR not yet implemented."
	453 NotImplemented "Instruction LDUR not yet implemented."
	454 Move X19, 0x904000
	455 Move [X31+584], X8
	456 Move [X31+592], X9
	457 Move X19, [X19+1296]
	458 Move X0, X19
	459 Call 0x1C17D08
	460 Add X1, X31, 584
	461 Call 0x1C17E04
	462 Move X21, [X31+112]
	463 Move X20, X0
	464 Move X0, X21
	465 Call 0x19913C0
	466 Move X8, [X21+16]
	467 Move X9, [X21+24]
	468 Move X0, X19
	469 Move [X31+856], X8
	470 Move [X31+864], X9
	471 Call 0x1C17D08
	472 Add X1, X31, 856
	473 Call 0x1C17E04
	474 Move X19, X0
	475 Move X0, 0x930000
	476 Move X0, [X0+2952]
	477 Call 0x1C17D08
	478 Move X1, X20
	479 Move X2, X19
	480 Move X3, X31
	481 Call String.Format, X0, X1, X2
	482 Move X19, X0
	483 Move X0, 0x8D9000
	484 Move X0, [X0+2880]
	485 Call 0x1C17D08
	486 Call 0x1C17F10
	487 Move X1, X19
	488 Move X2, X31
	489 Move X20, X0
	490 Call NotSupportedException..ctor, X0, X1
	491 Move X0, 0x930000
	492 Move X0, [X0+2960]
	493 Call 0x1C17D08
	494 Move X1, X0
	495 Move X0, X20
	496 Call 0x1C17DEC

Method: UnityEngine.InputSystem.InputControl AddChildControl(UnityEngine.InputSystem.Layouts.InputControlLayout layout, UnityEngine.InputSystem.Utilities.InternedString variants, UnityEngine.InputSystem.InputControl parent, ref System.Boolean haveChildrenUsingStateFromOtherControls, UnityEngine.InputSystem.Layouts.InputControlLayout/ControlItem controlItem, System.Int32 childIndex, System.String nameOverride = null)

Disassembly:
	0x0381C828 MOV X0, X19
	0x0381C82C MOV X1, X31
	0x0381C830 BL 0x3771E78
	0x0381C834 MOV X23, X0
	0x0381C838 LDR X8, [X19 + 0x80]
	0x0381C83C CBZ X8, 0x381C8C4
	0x0381C840 LDR X9, [X19 + 0x78]
	0x0381C844 CMP X8, X9
	0x0381C848 B.EQ 0x381C8C4
	0x0381C84C LDR X22, [X20 + 0x20]
	0x0381C850 CBNZ X22, 0x381C878
	0x0381C854 ADRP X8, 0x8D7000
	0x0381C858 LDR X8, [X8 + 0x8F0]
	0x0381C85C LDR X0, [X8]
	0x0381C860 BL 0x1C16F10
	0x0381C864 MOV X1, X31
	0x0381C868 MOV X22, X0
	0x0381C86C BL 0x3231AC4
	0x0381C870 STR X22, [X20 + 0x20]
	0x0381C874 CBZ X22, 0x381C920
	0x0381C878 MOV X0, X22
	0x0381C87C MOV W1, W31
	0x0381C880 MOV X2, X31
	0x0381C884 BL 0x3232ADC
	0x0381C888 LDR X0, [X19 + 0x80]
	0x0381C88C LDR X1, [X20 + 0x20]
	0x0381C890 AND W2, W21, 0x1
	0x0381C894 BL 0x381C924
	0x0381C898 LDR X0, [X20 + 0x20]
	0x0381C89C CBZ X0, 0x381C920
	0x0381C8A0 MOV X1, X23
	0x0381C8A4 MOV X2, X31
	0x0381C8A8 BL 0x32333E0
	0x0381C8AC LDR X0, [X20 + 0x20]
	0x0381C8B0 CBZ X0, 0x381C920
	0x0381C8B4 LDR X8, [X0]
	0x0381C8B8 LDP X9, X1, [X8 + 0x168]
	0x0381C8BC BLR X9
	0x0381C8C0 MOV X23, X0
	0x0381C8C4 TBZ X21, 0x0, 0x381C8D0
	0x0381C8C8 STR X23, [X19 + 0x50]
	0x0381C8CC B 0x381C90C
	0x0381C8D0 STR X23, [X19 + 0x40]
	0x0381C8D4 B 0x381C90C
	0x0381C8D8 STR X31, [X19 + 0x50]
	0x0381C8DC B 0x381C90C
	0x0381C8E0 CBZ X21, 0x381C920
	0x0381C8E4 MOV X0, X21
	0x0381C8E8 MOV X1, X22
	0x0381C8EC MOV X2, X31
	0x0381C8F0 BL 0x32333E0
	0x0381C8F4 LDR X0, [X20 + 0x20]
	0x0381C8F8 CBZ X0, 0x381C920
	0x0381C8FC LDR X8, [X0]
	0x0381C900 LDP X9, X1, [X8 + 0x168]
	0x0381C904 BLR X9
	0x0381C908 STR X0, [X19 + 0x50]
	0x0381C90C LDP X20, X19, [X31 + 0x30]
	0x0381C910 LDP X22, X21, [X31 + 0x20]
	0x0381C914 LDP X24, X23, [X31 + 0x10]
	0x0381C918 LDR X30, [X31], #0x40
	0x0381C91C RET
	0x0381C920 BL 0x1C16F20
	0x0381C924 STP X30, X21, [X31 - 0x20]!
	0x0381C928 STP X20, X19, [X31 + 0x10]
	0x0381C92C CBZ X0, 0x381C9D0
	0x0381C930 MOV X20, X0
	0x0381C934 LDR X0, [X0 + 0x80]
	0x0381C938 MOV W21, W2
	0x0381C93C MOV X19, X1
	0x0381C940 CBZ X0, 0x381C95C
	0x0381C944 LDR X8, [X20 + 0x78]
	0x0381C948 CMP X0, X8
	0x0381C94C B.EQ 0x381C95C
	0x0381C950 AND W2, W21, 0x1
	0x0381C954 MOV X1, X19
	0x0381C958 BL 0x381C924
	0x0381C95C TBZ X21, 0x0, 0x381C994
	0x0381C960 MOV X0, X20
	0x0381C964 MOV X1, X31
	0x0381C968 BL 0x3771F1C
	0x0381C96C MOV X1, X31
	0x0381C970 MOV X21, X0
	0x0381C974 BL 0x32277A8
	0x0381C978 TBZ X0, 0x0, 0x381C98C
	0x0381C97C MOV X0, X20
	0x0381C980 MOV X1, X31
	0x0381C984 BL 0x3771E88
	0x0381C988 MOV X21, X0
	0x0381C98C CBNZ X19, 0x381C9A8
	0x0381C990 B 0x381C9D0
	0x0381C994 MOV X0, X20
	0x0381C998 MOV X1, X31
	0x0381C99C BL 0x3771E88
	0x0381C9A0 CBZ X19, 0x381C9D0
	0x0381C9A4 MOV X21, X0
	0x0381C9A8 MOV X0, X19
	0x0381C9AC MOV X1, X21
	0x0381C9B0 MOV X2, X31
	0x0381C9B4 BL 0x32333E0
	0x0381C9B8 MOV X0, X19
	0x0381C9BC LDP X20, X19, [X31 + 0x10]
	0x0381C9C0 MOVZ W1, 0x20
	0x0381C9C4 MOV X2, X31
	0x0381C9C8 LDP X30, X21, [X31], #0x20
	0x0381C9CC B 0x3233D30
	0x0381C9D0 BL 0x1C16F20
	0x0381C9D4 SUB X31, X31, 0x80
	0x0381C9D8 STP X29, X30, [X31 + 0x20]
	0x0381C9DC STP X28, X27, [X31 + 0x30]
	0x0381C9E0 STP X26, X25, [X31 + 0x40]
	0x0381C9E4 STP X24, X23, [X31 + 0x50]
	0x0381C9E8 STP X22, X21, [X31 + 0x60]
	0x0381C9EC STP X20, X19, [X31 + 0x70]
	0x0381C9F0 ADRP X26, 0xBC5000
	0x0381C9F4 LDRB W8, [X26 + 0x522]
	0x0381C9F8 MOV X20, X6
	0x0381C9FC MOV W23, W5
	0x0381CA00 MOV W24, W4
	0x0381CA04 MOV X21, X3
	0x0381CA08 MOV W25, W2
	0x0381CA0C MOV X19, X1
	0x0381CA10 MOV X22, X0
	0x0381CA14 TBNZ X8, 0x0, 0x381CA38
	0x0381CA18 ADRP X0, 0x8FF000
	0x0381CA1C LDR X0, [X0 + 0xD18]
	0x0381CA20 BL 0x1C16CF4
	0x0381CA24 ADRP X0, 0x8DD000
	0x0381CA28 LDR X0, [X0 + 0x1D0]
	0x0381CA2C BL 0x1C16CF4
	0x0381CA30 MOVZ W8, 0x1
	0x0381CA34 STRB W8, [X26 + 0x522]
	0x0381CA38 STP X31, X31, [X31 + 0x10]
	0x0381CA3C CBZ X19, 0x381CCC4
	0x0381CA40 ADRP X28, 0x8FF000
	0x0381CA44 LDR W8, [X19 + 0x98]
	0x0381CA48 LDR X28, [X28 + 0xD18]
	0x0381CA4C CBNZ W8, 0x381CA94
	0x0381CA50 LDR X0, [X28]
	0x0381CA54 ADD X26, X19, 0x10
	0x0381CA58 LDR W8, [X0 + 0xE0]
	0x0381CA5C CBNZ W8, 0x381CA64
	0x0381CA60 BL 0x1C16DFC
	0x0381CA64 MOV X0, X26
	0x0381CA68 MOV X1, X31
	0x0381CA6C BL 0x3809DD0
	0x0381CA70 CMP W0, 0x2000
	0x0381CA74 B.CS 0x381CCCC
	0x0381CA78 LDR X0, [X28]
	0x0381CA7C LDR W8, [X0 + 0xE0]
	0x0381CA80 CBNZ W8, 0x381CA88
	0x0381CA84 BL 0x1C16DFC
	0x0381CA88 LDR W8, [X19 + 0x1C]
	0x0381CA8C CMP W8, 0x200
	0x0381CA90 B.CS 0x381CD40
	0x0381CA94 LDR X8, [X22]
	0x0381CA98 CMP X19, X8
	0x0381CA9C B.EQ 0x381CACC
	0x0381CAA0 CBZ X8, 0x381CCC4
	0x0381CAA4 LDR X8, [X8 + 0x160]
	0x0381CAA8 CBZ X8, 0x381CCC4
	0x0381CAAC LDR W9, [X8 + 0x18]
	0x0381CAB0 CBZ W9, 0x381CCC8
	0x0381CAB4 ADD X1, X8, 0x20
	0x0381CAB8 MOV X0, X22
	0x0381CABC MOV X2, X19
	0x0381CAC0 MOV X3, X20
	0x0381CAC4 MOV W4, W31
	0x0381CAC8 BL 0x381CDFC
	0x0381CACC LDR W8, [X19 + 0x98]
	0x0381CAD0 CBNZ W8, 0x381CB6C
	0x0381CAD4 LDR X0, [X28]
	0x0381CAD8 LDR X26, [X22 + 0x18]
	0x0381CADC ADD X27, X19, 0x10
	0x0381CAE0 LDR W8, [X0 + 0xE0]
	0x0381CAE4 CBNZ W8, 0x381CAEC
	0x0381CAE8 BL 0x1C16DFC
	0x0381CAEC MOV X0, X27
	0x0381CAF0 MOV X1, X31
	0x0381CAF4 BL 0x3809DD0
	0x0381CAF8 LDR W2, [X19 + 0x1C]
	0x0381CAFC MOV W1, W0
	0x0381CB00 MOV W0, W25
	0x0381CB04 MOV X3, X31
	0x0381CB08 BL 0x377B230
	0x0381CB0C CBZ X26, 0x381CCC4
	0x0381CB10 ADRP X9, 0x8DD000
	0x0381CB14 LDR X9, [X9 + 0x1D0]
	0x0381CB18 LDR W10, [X26 + 0x1C]
	0x0381CB1C LDR X8, [X26 + 0x10]
	0x0381CB20 LDR X9, [X9]
	0x0381CB24 ADD W10, W10, 0x1
	0x0381CB28 STR W10, [X26 + 0x1C]
	0x0381CB2C CBZ X8, 0x381CCC4
	0x0381CB30 LDRSW X10, [X26 + 0x18]
	0x0381CB34 LDR W11, [X8 + 0x18]
	0x0381CB38 MOV W1, W0
	0x0381CB3C CMP W10, W11
	0x0381CB40 B.CS 0x381CB58
	0x0381CB44 ADD W9, W10, 0x1
	0x0381CB48 ADD X8, X8, X10, 0x2, LSL
	0x0381CB4C STR W9, [X26 + 0x18]
	0x0381CB50 STR W1, [X8 + 0x20]
	0x0381CB54 B 0x381CB6C
	0x0381CB58 LDR X8, [X9 + 0x20]
	0x0381CB5C MOV X0, X26
	0x0381CB60 LDR X8, [X8 + 0xC0]
	0x0381CB64 LDR X2, [X8 + 0x70]
	0x0381CB68 BL 0x30C1698
	0x0381CB6C LDR X25, [X19 + 0x40]
	0x0381CB70 LDR X26, [X19 + 0x50]
	0x0381CB74 MOV X0, X22
	0x0381CB78 MOV X1, X19
	0x0381CB7C MOV X2, X25
	0x0381CB80 MOV X3, X26
	0x0381CB84 MOV W4, W31
	0x0381CB88 BL 0x381C71C
	0x0381CB8C MOVZ W4, 0x1
	0x0381CB90 MOV X0, X22
	0x0381CB94 MOV X1, X19
	0x0381CB98 MOV X2, X25
	0x0381CB9C MOV X3, X26
	0x0381CBA0 BL 0x381C71C
	0x0381CBA4 LDR X8, [X19 + 0x78]
	0x0381CBA8 CMP X19, X8
	0x0381CBAC B.EQ 0x381CC08
	0x0381CBB0 TBZ X24, 0x0, 0x381CBE0
	0x0381CBB4 MOVZ W1, 0x1
	0x0381CBB8 MOV X0, X19
	0x0381CBBC MOV X2, X31
	0x0381CBC0 MOVZ W24, 0x1
	0x0381CBC4 BL 0x377222C
	0x0381CBC8 TBNZ X23, 0x0, 0x381CBF4
	0x0381CBCC MOV X0, X19
	0x0381CBD0 MOV X1, X31
	0x0381CBD4 BL 0x3773474
	0x0381CBD8 MOV W23, W0
	0x0381CBDC B 0x381CC08
	0x0381CBE0 MOV X0, X19
	0x0381CBE4 MOV X1, X31
	0x0381CBE8 BL 0x3772220
	0x0381CBEC MOV W24, W0
	0x0381CBF0 TBZ X23, 0x0, 0x381CBCC
	0x0381CBF4 MOVZ W1, 0x1
	0x0381CBF8 MOV X0, X19
	0x0381CBFC MOV X2, X31
	0x0381CC00 MOVZ W23, 0x1
	0x0381CC04 BL 0x3773480
	0x0381CC08 LDR X0, [X28]
	0x0381CC0C LDR W8, [X0 + 0xE0]
	0x0381CC10 CBNZ W8, 0x381CC18
	0x0381CC14 BL 0x1C16DFC
	0x0381CC18 LDR W27, [X19 + 0x98]
	0x0381CC1C CMP W27, 0x1
	0x0381CC20 B.LT 0x381CC98
	0x0381CC24 CBZ X21, 0x381CCC4
	0x0381CC28 LDR W29, [X19 + 0x14]
	0x0381CC2C LDR W25, [X19 + 0x9C]
	0x0381CC30 AND W24, W24, 0x1
	0x0381CC34 AND W23, W23, 0x1
	0x0381CC38 LDR W8, [X21 + 0x18]
	0x0381CC3C CMP W25, W8
	0x0381CC40 B.CS 0x381CCC8
	0x0381CC44 ADD X8, X21, W25, 0x3, SXTW
	0x0381CC48 LDR X26, [X8 + 0x20]
	0x0381CC4C CBZ X26, 0x381CCC4
	0x0381CC50 LDR X0, [X28]
	0x0381CC54 LDR W8, [X0 + 0xE0]
	0x0381CC58 CBNZ W8, 0x381CC60
	0x0381CC5C BL 0x1C16DFC
	0x0381CC60 LDR W8, [X26 + 0x14]
	0x0381CC64 MOV X0, X22
	0x0381CC68 MOV X1, X26
	0x0381CC6C MOV W2, W25
	0x0381CC70 ADD W8, W8, W29
	0x0381CC74 MOV X3, X21
	0x0381CC78 MOV W4, W24
	0x0381CC7C MOV W5, W23
	0x0381CC80 MOV X6, X20
	0x0381CC84 STR W8, [X26 + 0x14]
	0x0381CC88 BL 0x381C9D4
	0x0381CC8C SUBS X27, X27, 0x1
	0x0381CC90 ADD W25, W25, 0x1
	0x0381CC94 B.NE 0x381CC38
	0x0381CC98 MOV X0, X19
	0x0381CC9C LDP X20, X19, [X31 + 0x70]
	0x0381CCA0 LDP X22, X21, [X31 + 0x60]
	0x0381CCA4 LDP X24, X23, [X31 + 0x50]
	0x0381CCA8 LDP X26, X25, [X31 + 0x40]
	0x0381CCAC LDP X28, X27, [X31 + 0x30]
	0x0381CCB0 LDP X29, X30, [X31 + 0x20]
	0x0381CCB4 MOVZ W1, 0x1
	0x0381CCB8 MOV X2, X31
	0x0381CCBC ADD X31, X31, 0x80
	0x0381CCC0 B 0x3773428
	0x0381CCC4 BL 0x1C16F20
	0x0381CCC8 BL 0x1C16F28
	0x0381CCCC MOVZ W8, 0x1FFF
	0x0381CCD0 STR W8, [X31 + 0xC]
	0x0381CCD4 ADRP X20, 0x8DF000
	0x0381CCD8 LDR X20, [X20 + 0x720]
	0x0381CCDC MOV X0, X20
	0x0381CCE0 BL 0x1C16D08
	0x0381CCE4 ADD X1, X31, 0xC
	0x0381CCE8 BL 0x1C16E04
	0x0381CCEC MOV X21, X0
	0x0381CCF0 MOV X0, X19
	0x0381CCF4 BL 0x19903C0
	0x0381CCF8 LDR V0, [X19 + 0x1]
	0x0381CCFC ADRP X0, 0x8FF000
	0x0381CD00 STR V0, [X31 + 0x1]
	0x0381CD04 LDR X0, [X0 + 0xD18]
	0x0381CD08 BL 0x1C16D08
	0x0381CD0C BL 0x19903D0
	0x0381CD10 ADD X0, X31, 0x10
	0x0381CD14 MOV X1, X31
	0x0381CD18 BL 0x3809DD0
	0x0381CD1C STR W0, [X31 + 0x8]
	0x0381CD20 MOV X0, X20
	0x0381CD24 BL 0x1C16D08
	0x0381CD28 ADD X1, X31, 0x8
	0x0381CD2C BL 0x1C16E04
	0x0381CD30 MOV X20, X0
	0x0381CD34 ADRP X0, 0x92E000
	0x0381CD38 LDR X0, [X0 + 0xC40]
	0x0381CD3C B 0x381CDA8
	0x0381CD40 MOVZ W8, 0x1FF
	0x0381CD44 STR W8, [X31 + 0xC]
	0x0381CD48 ADRP X20, 0x8DF000
	0x0381CD4C LDR X20, [X20 + 0x720]
	0x0381CD50 MOV X0, X20
	0x0381CD54 BL 0x1C16D08
	0x0381CD58 ADD X1, X31, 0xC
	0x0381CD5C BL 0x1C16E04
	0x0381CD60 MOV X21, X0
	0x0381CD64 MOV X0, X19
	0x0381CD68 BL 0x19903C0
	0x0381CD6C LDR V0, [X19 + 0x1]
	0x0381CD70 ADRP X0, 0x8FF000
	0x0381CD74 STR V0, [X31 + 0x1]
	0x0381CD78 LDR X0, [X0 + 0xD18]
	0x0381CD7C BL 0x1C16D08
	0x0381CD80 BL 0x19903D0
	0x0381CD84 LDR W8, [X31 + 0x1C]
	0x0381CD88 MOV X0, X20
	0x0381CD8C STR W8, [X31 + 0x8]
	0x0381CD90 BL 0x1C16D08
	0x0381CD94 ADD X1, X31, 0x8
	0x0381CD98 BL 0x1C16E04
	0x0381CD9C MOV X20, X0
	0x0381CDA0 ADRP X0, 0x92E000
	0x0381CDA4 LDR X0, [X0 + 0xC48]
	0x0381CDA8 BL 0x1C16D08
	0x0381CDAC MOV X1, X19
	0x0381CDB0 MOV X2, X21
	0x0381CDB4 MOV X3, X20
	0x0381CDB8 MOV X4, X31
	0x0381CDBC BL 0x3227C18
	0x0381CDC0 MOV X19, X0
	0x0381CDC4 ADRP X0, 0x8D7000
	0x0381CDC8 LDR X0, [X0 + 0xB40]
	0x0381CDCC BL 0x1C16D08
	0x0381CDD0 BL 0x1C16F10
	0x0381CDD4 MOV X1, X19
	0x0381CDD8 MOV X2, X31
	0x0381CDDC MOV X20, X0
	0x0381CDE0 BL 0x3379A44
	0x0381CDE4 ADRP X0, 0x92E000
	0x0381CDE8 LDR X0, [X0 + 0xC50]
	0x0381CDEC BL 0x1C16D08
	0x0381CDF0 MOV X1, X0
	0x0381CDF4 MOV X0, X20
	0x0381CDF8 BL 0x1C16DEC
	0x0381CDFC SUB X31, X31, 0x50
	0x0381CE00 STP X30, X25, [X31 + 0x10]
	0x0381CE04 STP X24, X23, [X31 + 0x20]
	0x0381CE08 STP X22, X21, [X31 + 0x30]
	0x0381CE0C STP X20, X19, [X31 + 0x40]
	0x0381CE10 ADRP X24, 0xBC5000
	0x0381CE14 LDRB W8, [X24 + 0x523]
	0x0381CE18 MOV W22, W4
	0x0381CE1C MOV X19, X3
	0x0381CE20 MOV X20, X2
	0x0381CE24 MOV X23, X1
	0x0381CE28 MOV X21, X0
	0x0381CE2C TBNZ X8, 0x0, 0x381CE44
	0x0381CE30 ADRP X0, 0x8FF000
	0x0381CE34 LDR X0, [X0 + 0xD18]
	0x0381CE38 BL 0x1C16CF4
	0x0381CE3C MOVZ W8, 0x1
	0x0381CE40 STRB W8, [X24 + 0x523]
	0x0381CE44 STUR W31, [X31 + 0xB]
	0x0381CE48 STR W31, [X31 + 0x8]
	0x0381CE4C STUR W31, [X31 + 0x3]
	0x0381CE50 STR W31, [X31]
	0x0381CE54 LDRSH W10, [X23 + 0x2]
	0x0381CE58 ADDS W31, W10, 0x1
	0x0381CE5C B.EQ 0x381CEE0
	0x0381CE60 LDR X8, [X21]
	0x0381CE64 CBZ X8, 0x381D160
	0x0381CE68 LDR X8, [X8 + 0x160]
	0x0381CE6C CBZ X8, 0x381D160
	0x0381CE70 LDR W9, [X8 + 0x18]
	0x0381CE74 CMP W10, W9
	0x0381CE78 B.CS 0x381D164
	0x0381CE7C MOV W12, W10
	0x0381CE80 SBFM X12, X12, 0x3D, 0x1F
	0x0381CE84 SXTW X11, W10
	0x0381CE88 SUB X12, X12, W10, SXTW
	0x0381CE8C ADD X10, X11, 0x1
	0x0381CE90 ADD X11, X8, X12
	0x0381CE94 LDRH W12, [X11 + 0x24]
	0x0381CE98 LDRB W13, [X11 + 0x26]
	0x0381CE9C LDR W11, [X11 + 0x20]
	0x0381CEA0 CMP W10, W9
	0x0381CEA4 STRH W12, [X31 + 0xC]
	0x0381CEA8 STRB W13, [X31 + 0xE]
	0x0381CEAC STR W11, [X31 + 0x8]
	0x0381CEB0 B.CS 0x381D164
	0x0381CEB4 UBFM X9, X10, 0x3D, 0x3C
	0x0381CEB8 SUB X9, X9, X10
	0x0381CEBC ADD X8, X8, X9
	0x0381CEC0 LDRH W9, [X8 + 0x24]
	0x0381CEC4 LDRB W10, [X8 + 0x26]
	0x0381CEC8 LDR W8, [X8 + 0x20]
	0x0381CECC STRH W9, [X31 + 0x4]
	0x0381CED0 STRB W10, [X31 + 0x6]
	0x0381CED4 STR W8, [X31]
	0x0381CED8 CBNZ X20, 0x381CF58
	0x0381CEDC B 0x381D160
	0x0381CEE0 LDRB W8, [X23 + 0x6]
	0x0381CEE4 LDRH W9, [X23 + 0x4]
	0x0381CEE8 LDR W1, [X23]
	0x0381CEEC MOV X0, X21
	0x0381CEF0 MOV W2, W22
	0x0381CEF4 BFM W9, W8, 0x10, 0x7
	0x0381CEF8 BFM X1, X9, 0x20, 0x17
	0x0381CEFC BL 0x381D168
	0x0381CF00 MOV W1, W0
	0x0381CF04 ADD X0, X31, 0x8
	0x0381CF08 MOV X2, X31
	0x0381CF0C BL 0x377C280
	0x0381CF10 LDRH W1, [X23]
	0x0381CF14 ADD X0, X31, 0x0
	0x0381CF18 MOV X2, X31
	0x0381CF1C BL 0x377C280
	0x0381CF20 LDRB W8, [X31 + 0xE]
	0x0381CF24 LDRH W9, [X31 + 0xC]
	0x0381CF28 LDRB W10, [X31 + 0x6]
	0x0381CF2C LDRH W11, [X31 + 0x4]
	0x0381CF30 LDR W2, [X31 + 0x8]
	0x0381CF34 LDR W3, [X31]
	0x0381CF38 BFM W9, W8, 0x10, 0x7
	0x0381CF3C BFM W11, W10, 0x10, 0x7
	0x0381CF40 BFM X2, X9, 0x20, 0x17
	0x0381CF44 BFM X3, X11, 0x20, 0x17
	0x0381CF48 MOV X0, X21
	0x0381CF4C MOV X1, X23
	0x0381CF50 BL 0x381D698
	0x0381CF54 CBZ X20, 0x381D160
	0x0381CF58 ADRP X25, 0x8FF000
	0x0381CF5C LDR X25, [X25 + 0xD18]
	0x0381CF60 ADD X24, X20, 0x10
	0x0381CF64 LDR X0, [X25]
	0x0381CF68 LDR W8, [X0 + 0xE0]
	0x0381CF6C CBNZ W8, 0x381CF74
	0x0381CF70 BL 0x1C16DFC
	0x0381CF74 MOV X0, X24

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Subtract X31, X31, 880
	014 Move X28, 0xBC6000
	015 Move W8, [X28+1303]
	016 Move X27, [X31+976]
	017 Move W24, W7
	018 Move X20, X6
	019 Move X23, X5
	020 Move X22, X4
	021 Move X25, X3
	022 Move X26, X2
	023 Move X19, X1
	024 Move X21, X0
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {58}
	029 Move X0, 0x92F000
	030 Move X0, [X0+3032]
	031 Call 0x1C17CF4
	032 Move X0, 0x92F000
	033 Move X0, [X0+2944]
	034 Call 0x1C17CF4
	035 Move X0, 0x900000
	036 Move X0, [X0+3216]
	037 Call 0x1C17CF4
	038 Move X0, 0x92F000
	039 Move X0, [X0+2272]
	040 Call 0x1C17CF4
	041 Move X0, 0x900000
	042 Move X0, [X0+3352]
	043 Call 0x1C17CF4
	044 Move X0, 0x92F000
	045 Move X0, [X0+3040]
	046 Call 0x1C17CF4
	047 Move X0, 0x900000
	048 Move X0, [X0+3528]
	049 Call 0x1C17CF4
	050 Move X0, 0x92B000
	051 Move X0, [X0+904]
	052 Call 0x1C17CF4
	053 Move X0, 0x92F000
	054 Move X0, [X0+2400]
	055 Call 0x1C17CF4
	056 Move W8, 1
	057 Move [X28+1303], W8
	058 Add X0, X31, 672
	059 Move W2, 208
	060 Move W1, W31
	061 Call 0x3EB2B10
	062 Move [X31+664], X31
	063 Move [X31+656], X31
	064 Compare X27, 0
	065 JumpIfEqual {74}
	066 Add X0, X31, 432
	067 Move X1, X27
	068 Move X2, X31
	069 Move [X31+432], X31
	070 Move [X31+440], X31
	071 Call InternedString..ctor, X0, X1
	072 Move X27, [X31+432]
	073 Move X28, [X31+440]
	074 Move X27, [X20]
	075 Move X28, [X20+8]
	076 Move X0, [X20+16]
	077 Move X1, [X20+24]
	078 Move X2, X31
	079 Call InternedString.op_Implicit, X0
	080 Move X1, X31
	081 Call String.IsNullOrEmpty, X0
	082 Move TEMP, X0
	083 And TEMP, TEMP, 1
	084 Compare TEMP, 1
	085 JumpIfEqual {432}
	086 Move X8, [X21+16]
	087 Compare X8, 0
	088 JumpIfEqual {120}
	089 Move X0, X21
	090 Move X1, X22
	091 Move X2, X27
	092 Move X3, X28
	093 Call InputDeviceBuilder.ChildControlOverridePath, X0, X1, X2
	094 Move X8, [X21+16]
	095 Compare X8, 0
	096 JumpIfEqual {427}
	097 Move X9, 0x92F000
	098 Move X9, [X9+2272]
	099 Move X1, X0
	100 Add X2, X31, 672
	101 Move X0, X8
	102 Move X3, [X9]
	103 Call Dictionary`2<Object, ControlItem>.TryGetValue, X0, X1, X2
	104 Move TEMP, X0
	105 And TEMP, TEMP, 1
	106 Compare TEMP, 1
	107 JumpIfNotEqual {120}
	108 Add X0, X31, 224
	109 Move W2, 208
	110 Move X1, X20
	111 Call 0x3EB2AC0
	112 Add X8, X31, 432
	113 Add X0, X31, 672
	114 Add X1, X31, 224
	115 Call ControlItem.Merge, X0, X1
	116 Add X1, X31, 432
	117 Move W2, 208
	118 Move X0, X20
	119 Call 0x3EB2AC0
	120 Move X1, [X20+16]
	121 Move X2, [X20+24]
	122 Move X0, X21
	123 Move X3, X26
	124 Move X4, X25
	125 Move X5, X27
	126 Move X6, X28
	127 Move X7, X22
	128 Call InputDeviceBuilder.InstantiateLayout, X0, X1, X2, X3, X4
	129 Move X8, [X21]
	130 Compare X8, 0
	131 JumpIfEqual {427}
	132 Move X25, [X8+336]
	133 Compare X25, 0
	134 JumpIfEqual {427}
	135 Move X22, X0
	136 Compare X0, 0
	137 JumpIfEqual {144}
	138 Move X8, [X25]
	139 Move X0, X22
	140 Move X1, [X8+64]
	141 Call 0x1C17E00
	142 Compare X0, 0
	143 JumpIfEqual {429}
	144 Move W8, [X25+24]
	145 NotImplemented "Instruction CMP not yet implemented."
	146 Add X8, X25, W24
	147 Move [X8+32], X22
	148 Compare X22, 0
	149 JumpIfEqual {427}
	150 Move W8, [X20+152]
	151 Move X0, X22
	152 Move X2, X31
	153 Move W1, W8
	154 ShiftRight W1, 1
	155 And W1, W1, 1
	156 Call InputControl.set_noisy, X0, X1
	157 Move W8, [X20+152]
	158 Move X0, X22
	159 Move X2, X31
	160 Move W1, W8
	161 ShiftRight W1, 2
	162 And W1, W1, 3
	163 Call InputControl.set_synthetic, X0, X1
	164 Move X0, [X20+48]
	165 Move X1, X31
	166 Call String.IsNullOrEmpty, X0
	167 NotImplemented "Instruction ORN not yet implemented."
	168 And W1, W8, 1
	169 Move X0, X22
	170 Move X2, X31
	171 Call InputControl.set_usesStateFromOtherControl, X0, X1
	172 Move X0, X22
	173 Move X1, X31
	174 Call InputControl.get_noisy, X0
	175 Move TEMP, X0
	176 And TEMP, TEMP, 1
	177 Compare TEMP, 1
	178 JumpIfEqual {185}
	179 Move W8, [X20+152]
	180 Move TEMP, X8
	181 And TEMP, TEMP, 16
	182 Compare TEMP, 16
	183 JumpIfEqual {185}
	184 Move W1, W31
	185 Move X0, X22
	186 Move X1, X31
	187 Call InputControl.get_usesStateFromOtherControl, X0
	188 NotImplemented "Instruction ORN not yet implemented."
	189 And W1, W8, 1
	190 Move X0, X22
	191 Move X2, X31
	192 Call InputControl.set_dontReset, X0, X1
	193 Move X0, X22
	194 Move X1, X31
	195 Call InputControl.get_noisy, X0
	196 Move TEMP, X0
	197 And TEMP, TEMP, 1
	198 Compare TEMP, 1
	199 JumpIfNotEqual {206}
	200 Move X0, [X21]
	201 Compare X0, 0
	202 JumpIfEqual {427}
	203 Move W1, 1
	204 Move X2, X31
	205 Call InputControl.set_noisy, X0, X1
	206 Move X8, 0x900000
	207 Move X8, [X8+3216]
	208 Move X9, [X22]
	209 Move X8, [X8]
	210 Move W11, [X9+304]
	211 Move W10, [X8+304]
	212 NotImplemented "Instruction CMP not yet implemented."
	213 Move X8, X31
	214 Move X9, [X9+200]
	215 Add X9, X9, X10
	216 NotImplemented "Instruction LDUR not yet implemented."
	217 NotImplemented "Instruction CMP not yet implemented."
	218 NotImplemented "Instruction CSEL not yet implemented."
	219 NotImplemented "Instruction CMP not yet implemented."
	220 NotImplemented "Instruction CSET not yet implemented."
	221 Move X0, X22
	222 Move X2, X31
	223 Call InputControl.set_isButton, X0, X1
	224 Move X0, X22
	225 Move X1, X31
	226 Call InputControl.get_dontReset, X0
	227 Move TEMP, X0
	228 And TEMP, TEMP, 1
	229 Compare TEMP, 1
	230 JumpIfNotEqual {237}
	231 Move X0, [X21]
	232 Compare X0, 0
	233 JumpIfEqual {427}
	234 Move W1, 1
	235 Move X2, X31
	236 Call InputDevice.set_hasDontResetControls, X0, X1
	237 Move X8, [X20+56]
	238 Move X0, X22
	239 Move X1, X31
	240 Move [X22+64], X8
	241 Move X8, [X20+64]
	242 Move [X22+80], X8
	243 Move V0, [X20+10]
	244 Move [X0+168], V0
	245 Call PrimitiveValue.get_isEmpty, X0
	246 Move TEMP, X0
	247 And TEMP, TEMP, 1
	248 Compare TEMP, 1
	249 JumpIfEqual {256}
	250 Move X0, [X21]
	251 Compare X0, 0
	252 JumpIfEqual {427}
	253 Move W1, 1
	254 Move X2, X31
	255 Call InputDevice.set_hasControlsWithDefaultState, X0, X1
	256 Move V0, [X20+11]
	257 Add X0, X31, 656
	258 Move X1, X31
	259 Move [X31+41], V0
	260 Call PrimitiveValue.get_isEmpty, X0
	261 Move TEMP, X0
	262 And TEMP, TEMP, 1
	263 Compare TEMP, 1
	264 JumpIfEqual {267}
	265 Move V0, [X20+11]
	266 Move [X22+184], V0
	267 Move V0, [X20+12]
	268 Add X0, X31, 656
	269 Move X1, X31
	270 Move [X31+41], V0
	271 Call PrimitiveValue.get_isEmpty, X0
	272 Move TEMP, X0
	273 And TEMP, TEMP, 1
	274 Compare TEMP, 1
	275 JumpIfEqual {278}
	276 Move V0, [X20+12]
	277 Move [X22+200], V0
	278 Move X0, X22
	279 Move X1, X31
	280 Call InputControl.get_usesStateFromOtherControl, X0
	281 Move TEMP, X0
	282 And TEMP, TEMP, 1
	283 Compare TEMP, 1
	284 JumpIfNotEqual {298}
	285 Move X8, 0x900000
	286 Move X8, [X8+3352]
	287 Move X0, [X8]
	288 Move W8, [X0+224]
	289 Compare W8, 0
	290 JumpIfNotEqual {292}
	291 Call 0x1C17DFC
	292 Move TEMP, 0
	293 Not TEMP
	294 Move W8, TEMP
	295 Move W9, 1
	296 Move [X22+28], W8
	297 Move [X23], W9
	298 Move X23, 0x900000
	299 Move X23, [X23+3352]
	300 Move W24, [X20+136]
	301 Move X0, [X23]
	302 Move W8, [X0+224]
	303 Compare W8, 0
	304 JumpIfNotEqual {306}
	305 Call 0x1C17DFC
	306 Move [X22+20], W24
	307 Move W8, [X20+140]
	308 Move [X22+24], W8
	309 Move W24, [X20+144]
	310 Compare W24, 0
	311 JumpIfEqual {318}
	312 Move X0, [X23]
	313 Move W8, [X0+224]
	314 Compare W8, 0
	315 JumpIfNotEqual {317}
	316 Call 0x1C17DFC
	317 Move [X22+28], W24
	318 Move W8, [X20+148]
	319 Compare W8, 0
	320 JumpIfEqual {328}
	321 Add X0, X31, 16
	322 Move W2, 208
	323 Move X1, X20
	324 Call 0x3EB2AC0
	325 Add X1, X31, 16
	326 Move X0, X22
	327 Call InputDeviceBuilder.SetFormat, X0, X1
	328 Move X8, [X20+80]
	329 Move X25, 0x92F000
	330 Move X25, [X25+3032]
	331 Move X23, X8
	332 ShiftRight X23, 32
	333 And X23, X23, 0x7FFFFFFF
	334 NotImplemented "Instruction CMP not yet implemented."
	335 Move X8, [X21]
	336 Compare X8, 0
	337 JumpIfEqual {427}
	338 Move X1, [X20+72]
	339 Move X2, [X25]
	340 Add X0, X8, 320
	341 Call 0x21751AC, X0, X1
	342 Move [X22+136], W23
	343 Move [X22+140], W0
	344 Move X8, [X21]
	345 Compare X8, 0
	346 JumpIfEqual {427}
	347 Move X9, 0x92F000
	348 Move X9, [X9+2944]
	349 Move W24, W0
	350 Add X0, X8, 328
	351 Move W1, W23
	352 Move X2, [X9]
	353 Call 0x2179BD8, X0, X1
	354 Move W24, W24
	355 Move X26, X24
	356 ShiftRight X26, 32
	357 And X26, X26, 0x7FFFFFFF
	358 Move X27, 1
	359 Move X8, [X21]
	360 Compare X8, 0
	361 JumpIfEqual {427}
	362 Move X28, [X8+328]
	363 Compare X28, 0
	364 JumpIfEqual {427}
	365 Move X8, [X28]
	366 Move X0, X22
	367 Move X1, [X8+64]
	368 Call 0x1C17E00
	369 Compare X0, 0
	370 JumpIfEqual {429}
	371 Move W8, [X28+24]
	372 NotImplemented "Instruction CMP not yet implemented."
	373 Add X8, X28, X26
	374 Add X26, X26, X27
	375 Subtract X23, X23, 1
	376 Add X24, X24, 1
	377 Move [X8+32], X22
	378 Move W23, [X20+100]
	379 NotImplemented "Instruction CMP not yet implemented."
	380 Move X8, [X21]
	381 Compare X8, 0
	382 JumpIfEqual {427}
	383 Move X1, [X20+88]
	384 Move X2, [X25]
	385 Add X0, X8, 312
	386 Call 0x21751AC, X0, X1
	387 Move [X22+144], W23
	388 Move [X22+148], W0
	389 Move X2, [X20+112]
	390 Move X8, X2
	391 ShiftRight X8, 32
	392 And X8, X8, 0x7FFFFFFF
	393 NotImplemented "Instruction CMP not yet implemented."
	394 Move X8, 0x92F000
	395 Move X8, [X8+3040]
	396 Move X1, [X20+104]
	397 Move X0, X22
	398 Move X3, [X8]
	399 Call 0x22221EC, X0, X1
	400 Move W8, [X20+132]
	401 NotImplemented "Instruction CMP not yet implemented."
	402 Compare X19, 0
	403 JumpIfEqual {427}
	404 Move X0, [X19+16]
	405 Move X1, [X19+24]
	406 Move X2, X31
	407 Call InternedString.op_Implicit, X0
	408 Move X2, X0
	409 Move X0, X22
	410 Move X1, X20
	411 Call InputDeviceBuilder.AddProcessors, X0, X1, X2
	412 Move X0, X22
	413 Add X31, X31, 880
	414 Move X20, [X31+80]
	415 Move X19, [X31+88]
	416 Move X22, [X31+64]
	417 Move X21, [X31+72]
	418 Move X24, [X31+48]
	419 Move X23, [X31+56]
	420 Move X26, [X31+32]
	421 Move X25, [X31+40]
	422 Move X28, [X31+16]
	423 Move X27, [X31+24]
	424 Move X29, [X31+96]
	425 Move X30, [X31+104]
	426 Return X0
	427 Call 0x1C17F20
	428 Call 0x1C17F28
	429 Call 0x1C17F44
	430 Move X1, X31
	431 Call 0x1C17DEC
	432 Move X8, [X20]
	433 Move X9, [X20+8]
	434 Move X20, 0x903000
	435 Move [X31+432], X8
	436 Move [X31+440], X9
	437 Move X20, [X20+1296]
	438 Move X0, X20
	439 Call 0x1C17D08
	440 Add X1, X31, 432
	441 Call 0x1C17E04
	442 Move X21, X0
	443 Move X0, X19
	444 Call 0x19913C0
	445 Move X8, [X19+16]
	446 Move X9, [X19+24]
	447 Move X0, X20
	448 Move [X31+640], X8
	449 Move [X31+648], X9
	450 Call 0x1C17D08
	451 Add X1, X31, 640
	452 Call 0x1C17E04
	453 Move X19, X0
	454 Move X0, 0x92F000
	455 Move X0, [X0+3048]
	456 Call 0x1C17D08
	457 Move X1, X21
	458 Move X2, X19
	459 Move X3, X31
	460 Call String.Format, X0, X1, X2
	461 Move X19, X0
	462 Move X0, 0x8D8000
	463 Move X0, [X0+1456]
	464 Call 0x1C17D08
	465 Call 0x1C17F10
	466 Move X1, X19
	467 Move X2, X31
	468 Move X20, X0
	469 Call InvalidOperationException..ctor, X0, X1
	470 Move X0, 0x92F000
	471 Move X0, [X0+3056]
	472 Call 0x1C17D08
	473 Move X1, X0
	474 Move X0, X20
	475 Call 0x1C17DEC
	476 NotImplemented "Instruction CMP not yet implemented."
	477 Move X20, X0
	478 Move X0, X20
	479 Call 0x3EB2AD0
	480 Move X20, X0
	481 Move X0, 0x92F000
	482 Move X0, [X0+2792]
	483 Call 0x1C17D08
	484 Move X8, [X20]
	485 Move X1, [X8]
	486 Call 0x1C18270
	487 Move TEMP, X0
	488 And TEMP, TEMP, 1
	489 Compare TEMP, 1
	490 JumpIfNotEqual {539}
	491 Move X20, [X20]
	492 Call 0x3EB2AE0
	493 Move X0, X20
	494 Call 0x19913C0
	495 Move X21, [X20+144]
	496 Move [X31+432], X27
	497 Move [X31+440], X28
	498 Move X22, 0x903000
	499 Move X22, [X22+1296]
	500 Move X0, X22
	501 Call 0x1C17D08
	502 Add X1, X31, 432
	503 Call 0x1C17E04
	504 Move X23, X0
	505 Move X0, X19
	506 Call 0x19913C0
	507 Move X8, [X19+16]
	508 Move X9, [X19+24]
	509 Move X0, X22
	510 Move [X31+640], X8
	511 Move [X31+648], X9
	512 Call 0x1C17D08
	513 Add X1, X31, 640
	514 Call 0x1C17E04
	515 Move X19, X0
	516 Move X0, 0x92F000
	517 Move X0, [X0+3064]
	518 Call 0x1C17D08
	519 Move X1, X21
	520 Move X2, X23
	521 Move X3, X19
	522 Move X4, X31
	523 Call String.Format, X0, X1, X2, X3
	524 Move X19, X0
	525 Move X0, 0x92F000
	526 Move X0, [X0+2792]
	527 Call 0x1C17D08
	528 Call 0x1C17F10
	529 Move X1, X19
	530 Move X2, X20
	531 Move X21, X0
	532 Call LayoutNotFoundException..ctor, X0, X1, X2
	533 Move X0, 0x92F000
	534 Move X0, [X0+3056]
	535 Call 0x1C17D08
	536 Move X1, X0
	537 Move X0, X21
	538 Call 0x1C17DEC
	539 Move W0, 8
	540 Call 0x3EB2AF0
	541 Move X8, [X20]
	542 Move [X0], X8
	543 Move X1, 0x699000
	544 Add X1, X1, 3672
	545 Move X2, X31
	546 Call 0x3EB2B00
	547 Move X20, X0
	548 Call 0x3EB2AE0
	549 Move X0, X20
	550 Call 0x1D2D690
	551 Call 0x1991590

Method: System.Void InsertChildControlOverride(UnityEngine.InputSystem.InputControl parent, ref UnityEngine.InputSystem.Layouts.InputControlLayout/ControlItem controlItem)

Disassembly:
	0x0381C690 BL 0x1C16F10
	0x0381C694 MOV X1, X19
	0x0381C698 MOV X2, X31
	0x0381C69C MOV X20, X0
	0x0381C6A0 BL 0x337DF1C
	0x0381C6A4 ADRP X0, 0x92E000
	0x0381C6A8 LDR X0, [X0 + 0xC28]
	0x0381C6AC BL 0x1C16D08
	0x0381C6B0 MOV X1, X0
	0x0381C6B4 MOV X0, X20
	0x0381C6B8 BL 0x1C16DEC
	0x0381C6BC STR X30, [X31 - 0x10]!
	0x0381C6C0 CBZ X0, 0x381C718
	0x0381C6C4 LDR X9, [X0 + 0x150]
	0x0381C6C8 CBZ X9, 0x381C718
	0x0381C6CC LDR X8, [X9 + 0x18]
	0x0381C6D0 CMP W8, 0x1
	0x0381C6D4 B.LT 0x381C710
	0x0381C6D8 AND X8, X8, 0x0
	0x0381C6DC ADD X9, X9, 0x20
	0x0381C6E0 LDR X10, [X9]
	0x0381C6E4 CBZ X10, 0x381C704
	0x0381C6E8 CMP X10, X2
	0x0381C6EC B.EQ 0x381C704
	0x0381C6F0 LDR W11, [X10 + 0x9C]
	0x0381C6F4 CMP W11, W1
	0x0381C6F8 B.LT 0x381C704
	0x0381C6FC ADD W11, W11, 0x1
	0x0381C700 STR W11, [X10 + 0x9C]
	0x0381C704 SUBS X8, X8, 0x1
	0x0381C708 ADD X9, X9, 0x8
	0x0381C70C B.NE 0x381C6E0
	0x0381C710 LDR X30, [X31], #0x10
	0x0381C714 RET
	0x0381C718 BL 0x1C16F20
	0x0381C71C STR X30, [X31 - 0x40]!
	0x0381C720 STP X24, X23, [X31 + 0x10]
	0x0381C724 STP X22, X21, [X31 + 0x20]
	0x0381C728 STP X20, X19, [X31 + 0x30]
	0x0381C72C ADRP X24, 0xBC5000
	0x0381C730 LDRB W8, [X24 + 0x51C]
	0x0381C734 MOV W21, W4
	0x0381C738 MOV X23, X3
	0x0381C73C MOV X22, X2
	0x0381C740 MOV X19, X1
	0x0381C744 MOV X20, X0
	0x0381C748 TBNZ X8, 0x0, 0x381C760
	0x0381C74C ADRP X0, 0x8D7000
	0x0381C750 LDR X0, [X0 + 0x8F0]
	0x0381C754 BL 0x1C16CF4
	0x0381C758 MOVZ W8, 0x1
	0x0381C75C STRB W8, [X24 + 0x51C]
	0x0381C760 ANDS W31, W21, 0x1
	0x0381C764 CSEL X23, X23, X22, NE
	0x0381C768 MOV X0, X23
	0x0381C76C MOV X1, X31
	0x0381C770 BL 0x32277A8
	0x0381C774 TBZ X0, 0x0, 0x381C820
	0x0381C778 CBZ X19, 0x381C920
	0x0381C77C TBZ X21, 0x0, 0x381C828
	0x0381C780 LDR X8, [X19 + 0x80]
	0x0381C784 CBZ X8, 0x381C8D8
	0x0381C788 LDR X9, [X19 + 0x78]
	0x0381C78C CMP X8, X9
	0x0381C790 B.EQ 0x381C8D8
	0x0381C794 LDR X21, [X20 + 0x20]
	0x0381C798 CBNZ X21, 0x381C7C0
	0x0381C79C ADRP X8, 0x8D7000
	0x0381C7A0 LDR X8, [X8 + 0x8F0]
	0x0381C7A4 LDR X0, [X8]
	0x0381C7A8 BL 0x1C16F10
	0x0381C7AC MOV X1, X31
	0x0381C7B0 MOV X21, X0
	0x0381C7B4 BL 0x3231AC4
	0x0381C7B8 STR X21, [X20 + 0x20]
	0x0381C7BC CBZ X21, 0x381C920
	0x0381C7C0 MOV X0, X21
	0x0381C7C4 MOV W1, W31
	0x0381C7C8 MOV X2, X31
	0x0381C7CC BL 0x3232ADC
	0x0381C7D0 LDR X0, [X19 + 0x80]
	0x0381C7D4 LDR X1, [X20 + 0x20]
	0x0381C7D8 MOVZ W2, 0x1
	0x0381C7DC BL 0x381C924
	0x0381C7E0 LDR X0, [X20 + 0x20]
	0x0381C7E4 CBZ X0, 0x381C920
	0x0381C7E8 MOV X1, X31
	0x0381C7EC BL 0x323260C
	0x0381C7F0 CBZ W0, 0x381C8D8
	0x0381C7F4 MOV X0, X22
	0x0381C7F8 MOV X1, X31
	0x0381C7FC BL 0x32277A8
	0x0381C800 LDR X21, [X20 + 0x20]
	0x0381C804 TBZ X0, 0x0, 0x381C8E0
	0x0381C808 MOV X0, X19
	0x0381C80C MOV X1, X31
	0x0381C810 BL 0x3771E78
	0x0381C814 CBZ X21, 0x381C920
	0x0381C818 MOV X22, X0
	0x0381C81C B 0x381C8E4
	0x0381C820 CBNZ X19, 0x381C838
	0x0381C824 B 0x381C920

ISIL:
	001 Move [X31-48], X29
	002 Move [X31-40], X30
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Subtract X31, X31, 1040
	008 Move X22, 0xBC6000
	009 Move W8, [X22+1304]
	010 Move X20, X2
	011 Move X21, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {31}
	017 Move X0, 0x92F000
	018 Move X0, [X0+2272]
	019 Call 0x1C17CF4
	020 Move X0, 0x92F000
	021 Move X0, [X0+2384]
	022 Call 0x1C17CF4
	023 Move X0, 0x92F000
	024 Move X0, [X0+2392]
	025 Call 0x1C17CF4
	026 Move X0, 0x92F000
	027 Move X0, [X0+2376]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X22+1304], W8
	031 Add X0, X31, 624
	032 Move W2, 208
	033 Move W1, W31
	034 Call 0x3EB2B10
	035 Move X8, [X19+16]
	036 Compare X8, 0
	037 JumpIfNotEqual {48}
	038 Move X8, 0x92F000
	039 Move X8, [X8+2376]
	040 Move X0, [X8]
	041 Call 0x1C17F10
	042 Move X8, 0x92F000
	043 Move X8, [X8+2384]
	044 Move X22, X0
	045 Move X1, [X8]
	046 Call Dictionary`2<Object, ControlItem>..ctor, X0
	047 Move [X19+16], X22
	048 Move X2, [X20]
	049 Move X3, [X20+8]
	050 Move X0, X19
	051 Move X1, X21
	052 Call InputDeviceBuilder.ChildControlOverridePath, X0, X1, X2
	053 Move X8, [X19+16]
	054 Compare X8, 0
	055 JumpIfEqual {118}
	056 Move X9, 0x92F000
	057 Move X9, [X9+2272]
	058 Move X21, X0
	059 Add X2, X31, 624
	060 Move X0, X8
	061 Move X3, [X9]
	062 Move X1, X21
	063 Call Dictionary`2<Object, ControlItem>.TryGetValue, X0, X1, X2
	064 Move TEMP, X0
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfNotEqual {91}
	068 Add X0, X31, 208
	069 Move W2, 208
	070 Move X1, X20
	071 Call 0x3EB2AC0
	072 Add X8, X31, 416
	073 Add X0, X31, 624
	074 Add X1, X31, 208
	075 Call ControlItem.Merge, X0, X1
	076 Add X0, X31, 624
	077 Add X1, X31, 416
	078 Move W2, 208
	079 Call 0x3EB2AC0
	080 Move X19, [X19+16]
	081 Add X0, X31, 0
	082 Add X1, X31, 416
	083 Move W2, 208
	084 Call 0x3EB2AC0
	085 Compare X19, 0
	086 JumpIfEqual {118}
	087 Move X8, 0x92F000
	088 Move X8, [X8+2392]
	089 Add X0, X31, 832
	090 Add X1, X31, 0
	091 Move X19, [X19+16]
	092 Add X0, X31, 416
	093 Move W2, 208
	094 Move X1, X20
	095 Call 0x3EB2AC0
	096 Compare X19, 0
	097 JumpIfEqual {118}
	098 Move X8, 0x92F000
	099 Move X8, [X8+2392]
	100 Add X0, X31, 832
	101 Add X1, X31, 416
	102 Move X20, [X8]
	103 Move W2, 208
	104 Call 0x3EB2AC0
	105 Add X2, X31, 832
	106 Move X0, X19
	107 Move X1, X21
	108 Move X3, X20
	109 Call Dictionary`2<Object, ControlItem>.set_Item, X0, X1, X2
	110 Add X31, X31, 1040
	111 Move X20, [X31+32]
	112 Move X19, [X31+40]
	113 Move X22, [X31+16]
	114 Move X21, [X31+24]
	115 Move X29, [X31+48]
	116 Move X30, [X31+56]
	117 Return 
	118 Call 0x1C17F20

Method: System.String ChildControlOverridePath(UnityEngine.InputSystem.InputControl parent, UnityEngine.InputSystem.Utilities.InternedString controlName)

Disassembly:
	0x0381D028 LDRSH W3, [X23 + 0x2]
	0x0381D02C B 0x381D090
	0x0381D030 LDR X0, [X25]
	0x0381D034 LDR W8, [X0 + 0xE0]
	0x0381D038 CBNZ W8, 0x381D040
	0x0381D03C BL 0x1C16DFC
	0x0381D040 MOV X0, X24
	0x0381D044 MOV X1, X31
	0x0381D048 BL 0x3809DD0
	0x0381D04C LDRH W8, [X31 + 0x8]
	0x0381D050 CMP W0, W8
	0x0381D054 B.NE 0x381D0A4
	0x0381D058 LDR X0, [X25]
	0x0381D05C LDR W8, [X0 + 0xE0]
	0x0381D060 CBNZ W8, 0x381D068
	0x0381D064 BL 0x1C16DFC
	0x0381D068 MOV X0, X24
	0x0381D06C MOV X1, X31
	0x0381D070 BL 0x3809DD0
	0x0381D074 LDR W8, [X20 + 0x1C]
	0x0381D078 LDRH W9, [X31]
	0x0381D07C ADD W8, W8, W0
	0x0381D080 CMP W8, W9
	0x0381D084 B.NE 0x381D0A4
	0x0381D088 LDRSH W8, [X23 + 0x2]
	0x0381D08C ADD W3, W8, 0x1
	0x0381D090 MOV X0, X21
	0x0381D094 MOV X1, X20
	0x0381D098 MOV X2, X19
	0x0381D09C BL 0x381D7A8
	0x0381D0A0 B 0x381D148
	0x0381D0A4 LDR X0, [X25]
	0x0381D0A8 LDR W8, [X0 + 0xE0]
	0x0381D0AC CBNZ W8, 0x381D0B4
	0x0381D0B0 BL 0x1C16DFC
	0x0381D0B4 MOV X0, X24

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xBC5000
	007 Move W8, [X22+1305]
	008 Move X20, X3
	009 Move X19, X1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x8D8000
	016 Move X0, [X0+3784]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+1305], W8
	020 Move X8, [X21]
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move X22, 0x8D8000
	023 Move X22, [X22+3784]
	024 Compare X19, 0
	025 JumpIfEqual {42}
	026 Move X0, [X19+40]
	027 Move X1, [X22]
	028 Move X2, X20
	029 Move X3, X31
	030 Call String.Concat, X0, X1, X2
	031 Move X19, [X19+128]
	032 Move X8, [X21]
	033 Move X20, X0
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move X0, X20
	036 Move X20, [X31+32]
	037 Move X19, [X31+40]
	038 Move X22, [X31+16]
	039 Move X21, [X31+24]
	040 Move X30, [X31+48]
	041 Return X0
	042 Call 0x1C17F20

Method: System.Void AddChildControlIfMissing(UnityEngine.InputSystem.Layouts.InputControlLayout layout, UnityEngine.InputSystem.Utilities.InternedString variants, UnityEngine.InputSystem.InputControl parent, ref System.Boolean haveChildrenUsingStateFromOtherControls, ref UnityEngine.InputSystem.Layouts.InputControlLayout/ControlItem controlItem)

Disassembly:
	0x0381CF78 MOV X1, X31
	0x0381CF7C BL 0x3809DD0
	0x0381CF80 LDRH W8, [X31 + 0x8]
	0x0381CF84 CMP W0, W8
	0x0381CF88 B.CS 0x381CFD4
	0x0381CF8C LDR X0, [X25]
	0x0381CF90 LDR W8, [X0 + 0xE0]
	0x0381CF94 CBNZ W8, 0x381CF9C
	0x0381CF98 BL 0x1C16DFC
	0x0381CF9C MOV X0, X24
	0x0381CFA0 MOV X1, X31
	0x0381CFA4 BL 0x3809DD0
	0x0381CFA8 LDR W8, [X20 + 0x1C]
	0x0381CFAC LDRH W9, [X31 + 0x8]
	0x0381CFB0 ADD W8, W8, W0
	0x0381CFB4 CMP W8, W9
	0x0381CFB8 B.LS 0x381CFD4
	0x0381CFBC LDRSH W3, [X23 + 0x2]
	0x0381CFC0 MOV X0, X21
	0x0381CFC4 MOV X1, X20
	0x0381CFC8 MOV X2, X19
	0x0381CFCC BL 0x381D7A8
	0x0381CFD0 B 0x381D088
	0x0381CFD4 LDR X0, [X25]
	0x0381CFD8 LDR W8, [X0 + 0xE0]
	0x0381CFDC CBNZ W8, 0x381CFE4
	0x0381CFE0 BL 0x1C16DFC
	0x0381CFE4 MOV X0, X24
	0x0381CFE8 MOV X1, X31
	0x0381CFEC BL 0x3809DD0
	0x0381CFF0 CMP W0, W22, UXTH
	0x0381CFF4 B.NE 0x381D030
	0x0381CFF8 LDR X0, [X25]
	0x0381CFFC LDR W8, [X0 + 0xE0]
	0x0381D000 CBNZ W8, 0x381D008
	0x0381D004 BL 0x1C16DFC
	0x0381D008 MOV X0, X24
	0x0381D00C MOV X1, X31
	0x0381D010 BL 0x3809DD0
	0x0381D014 LDR W8, [X20 + 0x1C]
	0x0381D018 LDRH W9, [X31 + 0x8]
	0x0381D01C ADD W8, W8, W0
	0x0381D020 CMP W8, W9
	0x0381D024 B.NE 0x381D030

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X24, X1
	010 Move X8, [X6]
	011 Move X1, [X6+8]
	012 Move X23, X2
	013 Move X25, X0
	014 Move X2, X31
	015 Move X0, X8
	016 Move X20, X6
	017 Move X21, X5
	018 Move X19, X4
	019 Move X22, X3
	020 Call InternedString.op_Implicit, X0
	021 Move X1, X0
	022 Move X0, X19
	023 Move W2, W31
	024 Move X3, X31
	025 Call InputControlPath.TryFindChild, X0, X1, X2
	026 Compare X0, 0
	027 JumpIfEqual {37}
	028 Move X20, [X31+48]
	029 Move X19, [X31+56]
	030 Move X22, [X31+32]
	031 Move X21, [X31+40]
	032 Move X24, [X31+16]
	033 Move X23, [X31+24]
	034 Move X30, [X31+64]
	035 Move X25, [X31+72]
	036 Return 
	037 Move X0, X25
	038 Move X1, X24
	039 Move X2, X23
	040 Move X3, X22
	041 Move X4, X19
	042 Move X5, X21
	043 Move X6, X20
	044 Call InputDeviceBuilder.InsertChildControl, X0, X1, X2, X3, X4, X5
	045 Compare X0, 0
	046 JumpIfEqual {59}
	047 Move X0, [X0+128]
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X20, [X31+48]
	050 Move X19, [X31+56]
	051 Move X22, [X31+32]
	052 Move X21, [X31+40]
	053 Move X24, [X31+16]
	054 Move X23, [X31+24]
	055 Move X30, [X31+64]
	056 Move X25, [X31+72]
	057 Call InputDeviceBuilder.ComputeStateLayout, X0
	058 Return 
	059 Call 0x1C17F20

Method: UnityEngine.InputSystem.InputControl InsertChildControl(UnityEngine.InputSystem.Layouts.InputControlLayout layout, UnityEngine.InputSystem.Utilities.InternedString variant, UnityEngine.InputSystem.InputControl parent, ref System.Boolean haveChildrenUsingStateFromOtherControls, ref UnityEngine.InputSystem.Layouts.InputControlLayout/ControlItem controlItem)

Disassembly:
	0x0381D3A0 BL 0x1C16DFC
	0x0381D3A4 ADD X0, X31, 0x10
	0x0381D3A8 MOV X1, X31
	0x0381D3AC BL 0x3809DD0
	0x0381D3B0 LDR W8, [X31 + 0x1C]
	0x0381D3B4 ADD W8, W8, W0
	0x0381D3B8 STR W8, [X31 + 0x8]
	0x0381D3BC LDR X0, [X24]
	0x0381D3C0 LDR W8, [X0 + 0xE0]
	0x0381D3C4 CBNZ W8, 0x381D3CC
	0x0381D3C8 BL 0x1C16DFC
	0x0381D3CC ADD X0, X31, 0x10
	0x0381D3D0 MOV X1, X31
	0x0381D3D4 BL 0x3809DD0
	0x0381D3D8 ADRP X8, 0x8D6000
	0x0381D3DC LDR X8, [X8 + 0x5A8]
	0x0381D3E0 MOV W22, W0
	0x0381D3E4 LDR X8, [X8]
	0x0381D3E8 LDR W9, [X8 + 0xE0]
	0x0381D3EC CBNZ W9, 0x381D3F8
	0x0381D3F0 MOV X0, X8
	0x0381D3F4 BL 0x1C16DFC
	0x0381D3F8 LDR W9, [X31 + 0x4]
	0x0381D3FC LDR W10, [X31 + 0xC]
	0x0381D400 MOV W8, W22
	0x0381D404 SUBS X8, X8, X25
	0x0381D408 AND W9, W9, 0xFFFF
	0x0381D40C CSNEG X8, X8, X8, PL
	0x0381D410 SUBS W9, W9, W10
	0x0381D414 CSNEG W9, W9, W9, PL
	0x0381D418 CMP X8, X9
	0x0381D41C B.CS 0x381D464
	0x0381D420 LDR X0, [X24]
	0x0381D424 LDR W8, [X0 + 0xE0]
	0x0381D428 CBNZ W8, 0x381D430
	0x0381D42C BL 0x1C16DFC
	0x0381D430 ADD X0, X31, 0x10
	0x0381D434 MOV X1, X31
	0x0381D438 BL 0x3809DD0
	0x0381D43C CMP W0, W29
	0x0381D440 B.CC 0x381D464
	0x0381D444 LDR X0, [X24]
	0x0381D448 LDR W8, [X0 + 0xE0]
	0x0381D44C CBNZ W8, 0x381D454
	0x0381D450 BL 0x1C16DFC
	0x0381D454 ADD X0, X31, 0x10
	0x0381D458 MOV X1, X31
	0x0381D45C BL 0x3809DD0
	0x0381D460 STR W0, [X31 + 0x4]
	0x0381D464 LDR W8, [X27 + 0x18]
	0x0381D468 ADD W28, W28, 0x1
	0x0381D46C CMP W28, W8
	0x0381D470 B.LT 0x381D228
	0x0381D474 B 0x381D484
	0x0381D478 MOVZ W9, 0xFFFF
	0x0381D47C MOVZ W8, 0xFFFF
	0x0381D480 STP W8, W9, [X31 + 0x4]
	0x0381D484 LDR X8, [X21]
	0x0381D488 CBZ X8, 0x381D690
	0x0381D48C LDR X27, [X8 + 0x150]
	0x0381D490 CBZ X27, 0x381D690
	0x0381D494 LDR W8, [X27 + 0x18]
	0x0381D498 STR W20, [X31]
	0x0381D49C CMP W8, 0x1
	0x0381D4A0 B.LT 0x381D61C
	0x0381D4A4 LDR W9, [X31 + 0x4]
	0x0381D4A8 MOV X28, X31
	0x0381D4AC MOV W26, W31
	0x0381D4B0 MOV W22, W31
	0x0381D4B4 AND W29, W9, 0xFFFF
	0x0381D4B8 LDR W9, [X31 + 0x8]
	0x0381D4BC MOV W23, W31
	0x0381D4C0 ADD X20, X27, 0x20
	0x0381D4C4 AND W19, W9, 0xFFFF
	0x0381D4C8 CMP W28, W8
	0x0381D4CC B.CS 0x381D694
	0x0381D4D0 LDR W8, [X31 + 0x4]
	0x0381D4D4 LDR X25, [X20, X28, LSL #3]
	0x0381D4D8 ORN W8, W31, W8, 0x0
	0x0381D4DC ANDS W31, W8, 0xFFFF
	0x0381D4E0 B.EQ 0x381D53C
	0x0381D4E4 CBZ X25, 0x381D690
	0x0381D4E8 LDR X0, [X24]
	0x0381D4EC LDR W8, [X0 + 0xE0]
	0x0381D4F0 CBNZ W8, 0x381D4F8
	0x0381D4F4 BL 0x1C16DFC
	0x0381D4F8 ADD X21, X25, 0x10
	0x0381D4FC MOV X0, X21
	0x0381D500 MOV X1, X31
	0x0381D504 BL 0x3809DD0
	0x0381D508 CMP W0, W29
	0x0381D50C B.CS 0x381D53C
	0x0381D510 LDR X0, [X24]
	0x0381D514 LDR W8, [X0 + 0xE0]
	0x0381D518 CBNZ W8, 0x381D520
	0x0381D51C BL 0x1C16DFC
	0x0381D520 MOV X0, X21
	0x0381D524 MOV X1, X31
	0x0381D528 BL 0x3809DD0
	0x0381D52C LDR W8, [X25 + 0x1C]
	0x0381D530 ADD W8, W8, W0
	0x0381D534 CMP W8, W29
	0x0381D538 CINC W22, W22, HI
	0x0381D53C LDR W8, [X31 + 0x8]
	0x0381D540 ORN W8, W31, W8, 0x0
	0x0381D544 ANDS W31, W8, 0xFFFF
	0x0381D548 B.EQ 0x381D5A8
	0x0381D54C CBZ X25, 0x381D690
	0x0381D550 LDR X0, [X24]
	0x0381D554 LDR W8, [X0 + 0xE0]
	0x0381D558 CBNZ W8, 0x381D560
	0x0381D55C BL 0x1C16DFC
	0x0381D560 ADD X21, X25, 0x10
	0x0381D564 MOV X0, X21
	0x0381D568 MOV X1, X31
	0x0381D56C BL 0x3809DD0
	0x0381D570 CMP W0, W19
	0x0381D574 B.CS 0x381D5AC
	0x0381D578 LDR X0, [X24]
	0x0381D57C LDR W8, [X0 + 0xE0]
	0x0381D580 CBNZ W8, 0x381D588
	0x0381D584 BL 0x1C16DFC
	0x0381D588 MOV X0, X21
	0x0381D58C MOV X1, X31
	0x0381D590 BL 0x3809DD0
	0x0381D594 LDR W8, [X25 + 0x1C]
	0x0381D598 ADD W8, W8, W0
	0x0381D59C CMP W8, W19
	0x0381D5A0 CINC W26, W26, HI
	0x0381D5A4 B 0x381D5AC
	0x0381D5A8 CBZ X25, 0x381D690
	0x0381D5AC LDR X0, [X24]
	0x0381D5B0 LDR W8, [X0 + 0xE0]
	0x0381D5B4 CBNZ W8, 0x381D5BC
	0x0381D5B8 BL 0x1C16DFC
	0x0381D5BC ADD X21, X25, 0x10
	0x0381D5C0 MOV X0, X21
	0x0381D5C4 MOV X1, X31
	0x0381D5C8 BL 0x3809DD0
	0x0381D5CC LDR W8, [X31 + 0xC]
	0x0381D5D0 CMP W8, W0
	0x0381D5D4 B.LS 0x381D608
	0x0381D5D8 LDR X0, [X24]
	0x0381D5DC LDR W8, [X0 + 0xE0]
	0x0381D5E0 CBNZ W8, 0x381D5E8
	0x0381D5E4 BL 0x1C16DFC
	0x0381D5E8 MOV X0, X21
	0x0381D5EC MOV X1, X31
	0x0381D5F0 BL 0x3809DD0
	0x0381D5F4 LDR W8, [X25 + 0x1C]
	0x0381D5F8 LDR W9, [X31 + 0xC]
	0x0381D5FC ADD W8, W8, W0
	0x0381D600 CMP W9, W8
	0x0381D604 CINC W23, W23, CC
	0x0381D608 LDR W8, [X27 + 0x18]
	0x0381D60C ADD X28, X28, 0x1
	0x0381D610 CMP W28, W8
	0x0381D614 B.LT 0x381D4C8
	0x0381D618 B 0x381D628
	0x0381D61C MOV W23, W31
	0x0381D620 MOV W22, W31
	0x0381D624 MOV W26, W31
	0x0381D628 LDR W8, [X31 + 0x8]
	0x0381D62C ORN W8, W31, W8, 0x0
	0x0381D630 ANDS W31, W8, 0xFFFF
	0x0381D634 B.EQ 0x381D648
	0x0381D638 CMP W26, W22
	0x0381D63C B.GT 0x381D648
	0x0381D640 CMP W26, W23
	0x0381D644 B.LE 0x381D66C
	0x0381D648 LDR W9, [X31 + 0x4]
	0x0381D64C CMP W22, W23
	0x0381D650 CCMP W22, W26, 0x0, LE
	0x0381D654 ORN W8, W31, W9, 0x0
	0x0381D658 AND W8, W8, 0xFFFF
	0x0381D65C CCMP W8, 0x0, 0x4, LE
	0x0381D660 LDR W8, [X31]
	0x0381D664 CSEL W8, W8, W9, EQ
	0x0381D668 STR W8, [X31 + 0x8]
	0x0381D66C LDR W0, [X31 + 0x8]
	0x0381D670 LDP X20, X19, [X31 + 0x70]
	0x0381D674 LDP X22, X21, [X31 + 0x60]
	0x0381D678 LDP X24, X23, [X31 + 0x50]
	0x0381D67C LDP X26, X25, [X31 + 0x40]
	0x0381D680 LDP X28, X27, [X31 + 0x30]
	0x0381D684 LDP X29, X30, [X31 + 0x20]
	0x0381D688 ADD X31, X31, 0x80
	0x0381D68C RET
	0x0381D690 BL 0x1C16F20
	0x0381D694 BL 0x1C16F28
	0x0381D698 STP X30, X23, [X31 - 0x30]!
	0x0381D69C STP X22, X21, [X31 + 0x10]
	0x0381D6A0 STP X20, X19, [X31 + 0x20]
	0x0381D6A4 ADRP X23, 0xBC4000
	0x0381D6A8 LDRB W8, [X23 + 0x526]
	0x0381D6AC MOV X19, X3
	0x0381D6B0 MOV X20, X2
	0x0381D6B4 MOV X22, X1
	0x0381D6B8 MOV X21, X0

ISIL:
	001 Subtract X31, X31, 368
	002 Move [X31+272], X29
	003 Move [X31+280], X30
	004 Move [X31+288], X28
	005 Move [X31+296], X27
	006 Move [X31+304], X26
	007 Move [X31+312], X25
	008 Move [X31+320], X24
	009 Move [X31+328], X23
	010 Move [X31+336], X22
	011 Move [X31+344], X21
	012 Move [X31+352], X20
	013 Move [X31+360], X19
	014 Move X26, 0xBC5000
	015 Move W8, [X26+1306]
	016 Move X23, X6
	017 Move X20, X5
	018 Move X25, X4
	019 Move X21, X3
	020 Move X22, X2
	021 Move X19, X1
	022 Move X24, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {35}
	027 Move X0, 0x92E000
	028 Move X0, [X0+3096]
	029 Call 0x1C17CF4
	030 Move X0, 0x8FF000
	031 Move X0, [X0+3488]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X26+1306], W8
	035 Move V0, [X23]
	036 Add X0, X31, 256
	037 Move X1, X31
	038 Move [X31+16], V0
	039 Call InternedString.ToString, X0
	040 Compare X0, 0
	041 JumpIfEqual {136}
	042 Move W1, 47
	043 Move X2, X31
	044 Move X26, X0
	045 Call String.LastIndexOf, X0, X1
	046 Add W31, W0, 1
	047 NotImplemented "Instruction CSEL not yet implemented."
	048 Move W27, W0
	049 Move X0, X28
	050 Move W1, W31
	051 Move W2, W27
	052 Move X3, X31
	053 Call String.Substring, X0, X1, X2
	054 Move X26, X0
	055 Move X0, X25
	056 Move X1, X26
	057 Move W2, W31
	058 Move X3, X31
	059 Call InputControlPath.TryFindChild, X0, X1, X2
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move X25, X0
	062 NotImplemented "Instruction CSEL not yet implemented."
	063 Compare X25, 0
	064 JumpIfEqual {155}
	065 Compare X0, 0
	066 JumpIfEqual {136}
	067 Add W1, W27, 1
	068 Move X2, X31
	069 Call String.Substring, X0, X1
	070 Compare X0, 0
	071 JumpIfEqual {136}
	072 Move W8, [X0+16]
	073 Move X26, X0
	074 Compare W8, 0
	075 JumpIfEqual {185}
	076 Move W0, [X25+156]
	077 Compare W0, 0
	078 JumpIfNotEqual {88}
	079 Move X8, [X24]
	080 Compare X8, 0
	081 JumpIfEqual {136}
	082 Move X0, [X8+336]
	083 Move X8, 0x8FF000
	084 Move X8, [X8+3488]
	085 Move X1, [X8]
	086 Call ArrayHelpers.LengthSafe, X0
	087 Move [X25+156], W0
	088 Move W9, [X25+152]
	089 Move X8, [X24]
	090 Move X2, X25
	091 Add W27, W9, W0
	092 Move X0, X8
	093 Move W1, W27
	094 Call InputDeviceBuilder.ShiftChildIndicesInHierarchyOneUp, X0, X1, X2
	095 Move X8, [X24]
	096 Compare X8, 0
	097 JumpIfEqual {136}
	098 Move X9, 0x92E000
	099 Move X9, [X9+3096]
	100 Add X0, X8, 336
	101 Move W1, W27
	102 Move X2, X31
	103 Move X3, [X9]
	104 Call ArrayHelpers.InsertAt, X0, X1, X2
	105 Move W8, [X25+152]
	106 Add X0, X31, 16
	107 Move W2, 208
	108 Move X1, X23
	109 Add W8, W8, 1
	110 Move [X25+152], W8
	111 Call 0x3EB2AC0
	112 Add X6, X31, 16
	113 Move X0, X24
	114 Move X1, X19
	115 Move X2, X22
	116 Move X3, X21
	117 Move X4, X25
	118 Move X5, X20
	119 Move W7, W27
	120 Move [X31], X26
	121 Call InputDeviceBuilder.AddChildControl, X0, X1, X2, X3, X4, X5, X6, X7
	122 Move X20, [X31+352]
	123 Move X19, [X31+360]
	124 Move X22, [X31+336]
	125 Move X21, [X31+344]
	126 Move X24, [X31+320]
	127 Move X23, [X31+328]
	128 Move X26, [X31+304]
	129 Move X25, [X31+312]
	130 Move X28, [X31+288]
	131 Move X27, [X31+296]
	132 Move X29, [X31+272]
	133 Move X30, [X31+280]
	134 Add X31, X31, 368
	135 Return X0
	136 Call 0x1C17F20
	137 Move X0, 0x8D7000
	138 Move X0, [X0+1456]
	139 Call 0x1C17D08
	140 Call 0x1C17F10
	141 Move X19, X0
	142 Move X0, 0x92E000
	143 Move X0, [X0+3104]
	144 Call 0x1C17D08
	145 Move X1, X0
	146 Move X0, X19
	147 Move X2, X31
	148 Call InvalidOperationException..ctor, X0, X1
	149 Move X0, 0x92E000
	150 Move X0, [X0+3112]
	151 Call 0x1C17D08
	152 Move X1, X0
	153 Move X0, X19
	154 Call 0x1C17DEC
	155 Move X8, [X23]
	156 Move X9, [X23+8]
	157 Move X20, 0x902000
	158 Move [X31+240], X8
	159 Move [X31+248], X9
	160 Move X20, [X20+1296]
	161 Move X0, X20
	162 Call 0x1C17D08
	163 Add X1, X31, 240
	164 Call 0x1C17E04
	165 Move X21, X0
	166 Move X0, X19
	167 Call 0x19913C0
	168 Move X8, [X19+16]
	169 Move X9, [X19+24]
	170 Move X0, X20
	171 Move [X31+224], X8
	172 Move [X31+232], X9
	173 Call 0x1C17D08
	174 Add X1, X31, 224
	175 Call 0x1C17E04
	176 Move X19, X0
	177 Move X0, 0x92E000
	178 Move X0, [X0+3120]
	179 Call 0x1C17D08
	180 Move X1, X26
	181 Move X2, X21
	182 Move X3, X19
	183 Move X4, X31
	184 Call String.Format, X0, X1, X2, X3
	185 Move X8, [X23]
	186 Move X9, [X23+8]
	187 Move X20, 0x902000
	188 Move [X31+240], X8
	189 Move [X31+248], X9
	190 Move X20, [X20+1296]
	191 Move X0, X20
	192 Call 0x1C17D08
	193 Add X1, X31, 240
	194 Call 0x1C17E04
	195 Move X21, X0
	196 Move X0, X19
	197 Call 0x19913C0
	198 Move X8, [X19+16]
	199 Move X9, [X19+24]
	200 Move X0, X20
	201 Move [X31+224], X8
	202 Move [X31+232], X9
	203 Call 0x1C17D08
	204 Add X1, X31, 224
	205 Call 0x1C17E04
	206 Move X19, X0
	207 Move X0, 0x92E000
	208 Move X0, [X0+3128]
	209 Call 0x1C17D08
	210 Move X1, X21
	211 Move X2, X19
	212 Move X3, X31
	213 Call String.Format, X0, X1, X2
	214 Move X19, X0
	215 Move X0, 0x8D7000
	216 Move X0, [X0+1456]
	217 Call 0x1C17D08
	218 Call 0x1C17F10
	219 Move X1, X19
	220 Move X2, X31
	221 Move X20, X0
	222 Call InvalidOperationException..ctor, X0, X1
	223 Move X0, 0x92E000
	224 Move X0, [X0+3112]
	225 Call 0x1C17D08
	226 Move X1, X0
	227 Move X0, X20
	228 Call 0x1C17DEC

Method: System.Void ApplyUseStateFrom(UnityEngine.InputSystem.InputControl parent, ref UnityEngine.InputSystem.Layouts.InputControlLayout/ControlItem controlItem, UnityEngine.InputSystem.Layouts.InputControlLayout layout)

Disassembly:
	0x0381C4C4 LDR X8, [X24]
	0x0381C4C8 MOV X2, X25
	0x0381C4CC ADD W27, W9, W0
	0x0381C4D0 MOV X0, X8
	0x0381C4D4 MOV W1, W27
	0x0381C4D8 BL 0x381C6BC
	0x0381C4DC LDR X8, [X24]
	0x0381C4E0 CBZ X8, 0x381C564
	0x0381C4E4 ADRP X9, 0x92E000
	0x0381C4E8 LDR X9, [X9 + 0xC18]
	0x0381C4EC ADD X0, X8, 0x150
	0x0381C4F0 MOV W1, W27
	0x0381C4F4 MOV X2, X31
	0x0381C4F8 LDR X3, [X9]
	0x0381C4FC BL 0x217A148
	0x0381C500 LDR W8, [X25 + 0x98]
	0x0381C504 ADD X0, X31, 0x10
	0x0381C508 MOVZ W2, 0xD0
	0x0381C50C MOV X1, X23
	0x0381C510 ADD W8, W8, 0x1
	0x0381C514 STR W8, [X25 + 0x98]
	0x0381C518 BL 0x3EB1AC0
	0x0381C51C ADD X6, X31, 0x10
	0x0381C520 MOV X0, X24
	0x0381C524 MOV X1, X19
	0x0381C528 MOV X2, X22
	0x0381C52C MOV X3, X21
	0x0381C530 MOV X4, X25
	0x0381C534 MOV X5, X20
	0x0381C538 MOV W7, W27
	0x0381C53C STR X26, [X31]
	0x0381C540 BL 0x381B828
	0x0381C544 LDP X20, X19, [X31 + 0x160]
	0x0381C548 LDP X22, X21, [X31 + 0x150]
	0x0381C54C LDP X24, X23, [X31 + 0x140]
	0x0381C550 LDP X26, X25, [X31 + 0x130]
	0x0381C554 LDP X28, X27, [X31 + 0x120]
	0x0381C558 LDP X29, X30, [X31 + 0x110]
	0x0381C55C ADD X31, X31, 0x170
	0x0381C560 RET
	0x0381C564 BL 0x1C16F20
	0x0381C568 ADRP X0, 0x8D7000
	0x0381C56C LDR X0, [X0 + 0x5B0]
	0x0381C570 BL 0x1C16D08
	0x0381C574 BL 0x1C16F10
	0x0381C578 MOV X19, X0
	0x0381C57C ADRP X0, 0x92E000
	0x0381C580 LDR X0, [X0 + 0xC20]
	0x0381C584 BL 0x1C16D08
	0x0381C588 MOV X1, X0
	0x0381C58C MOV X0, X19
	0x0381C590 MOV X2, X31
	0x0381C594 BL 0x337DF1C
	0x0381C598 ADRP X0, 0x92E000
	0x0381C59C LDR X0, [X0 + 0xC28]
	0x0381C5A0 BL 0x1C16D08
	0x0381C5A4 MOV X1, X0
	0x0381C5A8 MOV X0, X19
	0x0381C5AC BL 0x1C16DEC
	0x0381C5B0 LDP X8, X9, [X23]
	0x0381C5B4 ADRP X20, 0x902000
	0x0381C5B8 STP X8, X9, [X31 + 0xF0]
	0x0381C5BC LDR X20, [X20 + 0x510]
	0x0381C5C0 MOV X0, X20
	0x0381C5C4 BL 0x1C16D08
	0x0381C5C8 ADD X1, X31, 0xF0
	0x0381C5CC BL 0x1C16E04
	0x0381C5D0 MOV X21, X0
	0x0381C5D4 MOV X0, X19
	0x0381C5D8 BL 0x19903C0
	0x0381C5DC LDP X8, X9, [X19 + 0x10]
	0x0381C5E0 MOV X0, X20
	0x0381C5E4 STP X8, X9, [X31 + 0xE0]
	0x0381C5E8 BL 0x1C16D08
	0x0381C5EC ADD X1, X31, 0xE0
	0x0381C5F0 BL 0x1C16E04
	0x0381C5F4 MOV X19, X0
	0x0381C5F8 ADRP X0, 0x92E000
	0x0381C5FC LDR X0, [X0 + 0xC30]
	0x0381C600 BL 0x1C16D08
	0x0381C604 MOV X1, X26
	0x0381C608 MOV X2, X21
	0x0381C60C MOV X3, X19
	0x0381C610 MOV X4, X31
	0x0381C614 BL 0x3227C18
	0x0381C618 B 0x381C680
	0x0381C61C LDP X8, X9, [X23]
	0x0381C620 ADRP X20, 0x902000
	0x0381C624 STP X8, X9, [X31 + 0xF0]
	0x0381C628 LDR X20, [X20 + 0x510]
	0x0381C62C MOV X0, X20
	0x0381C630 BL 0x1C16D08
	0x0381C634 ADD X1, X31, 0xF0
	0x0381C638 BL 0x1C16E04
	0x0381C63C MOV X21, X0
	0x0381C640 MOV X0, X19
	0x0381C644 BL 0x19903C0
	0x0381C648 LDP X8, X9, [X19 + 0x10]
	0x0381C64C MOV X0, X20
	0x0381C650 STP X8, X9, [X31 + 0xE0]
	0x0381C654 BL 0x1C16D08
	0x0381C658 ADD X1, X31, 0xE0
	0x0381C65C BL 0x1C16E04
	0x0381C660 MOV X19, X0
	0x0381C664 ADRP X0, 0x92E000
	0x0381C668 LDR X0, [X0 + 0xC38]
	0x0381C66C BL 0x1C16D08
	0x0381C670 MOV X1, X21
	0x0381C674 MOV X2, X19
	0x0381C678 MOV X3, X31
	0x0381C67C BL 0x3227BD4
	0x0381C680 MOV X19, X0
	0x0381C684 ADRP X0, 0x8D7000
	0x0381C688 LDR X0, [X0 + 0x5B0]
	0x0381C68C BL 0x1C16D08

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+40], X23
	004 Move [X31+48], X22
	005 Move [X31+56], X21
	006 Move [X31+64], X20
	007 Move [X31+72], X19
	008 Move X20, 0xBC6000
	009 Move W8, [X20+1307]
	010 Move X21, X2
	011 Move X22, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x900000
	018 Move X0, [X0+3352]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+1307], W8
	022 Move X0, [X22]
	023 Move X1, [X22+8]
	024 Move X2, X31
	025 Call InternedString.op_Implicit, X0
	026 Move X1, X0
	027 Move X0, X19
	028 Move W2, W31
	029 Move X3, X31
	030 Call InputControlPath.TryFindChild, X0, X1, X2
	031 Move X1, [X22+48]
	032 Move X20, X0
	033 Move X0, X19
	034 Move W2, W31
	035 Move X3, X31
	036 Call InputControlPath.TryFindChild, X0, X1, X2
	037 Compare X0, 0
	038 JumpIfEqual {85}
	039 Move V0, [X0+1]
	040 Move X23, X0
	041 Move [X31+1], V0
	042 Compare X20, 0
	043 JumpIfEqual {84}
	044 Move V0, [X31+1]
	045 Move W1, 1
	046 Move X0, X20
	047 Move X2, X31
	048 Move [X20+1], V0
	049 Call InputControl.set_usesStateFromOtherControl, X0, X1
	050 Move X0, X23
	051 Move X1, X31
	052 Call InputControl.get_dontReset, X0
	053 And W1, W0, 1
	054 Move X0, X20
	055 Move X2, X31
	056 Call InputControl.set_dontReset, X0, X1
	057 Move X8, [X20+128]
	058 Move X21, [X23+128]
	059 NotImplemented "Instruction CMP not yet implemented."
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move X22, 0x900000
	062 Move X22, [X22+3352]
	063 Move X0, [X22]
	064 Move W8, [X0+224]
	065 Compare W8, 0
	066 JumpIfNotEqual {68}
	067 Call 0x1C17DFC
	068 Compare X21, 0
	069 JumpIfEqual {84}
	070 Move W8, [X20+20]
	071 Move W9, [X21+20]
	072 Add W8, W9, W8
	073 Move [X20+20], W8
	074 Move X21, [X21+128]
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Move X20, [X31+64]
	077 Move X19, [X31+72]
	078 Move X22, [X31+48]
	079 Move X21, [X31+56]
	080 Move X30, [X31+32]
	081 Move X23, [X31+40]
	082 Add X31, X31, 80
	083 Return 
	084 Call 0x1C17F20
	085 Move X8, [X22]
	086 Move X9, [X22+8]
	087 Move X19, [X22+48]
	088 Move X20, 0x903000
	089 Move [X31+16], X8
	090 Move [X31+24], X9
	091 Move X20, [X20+1296]
	092 Move X0, X20
	093 Call 0x1C17D08
	094 Add X1, X31, 16
	095 Call 0x1C17E04
	096 Move X22, X0
	097 Move X0, X21
	098 Call 0x19913C0
	099 Move X8, [X21+16]
	100 Move X9, [X21+24]
	101 Move X0, X20
	102 Move [X31], X8
	103 Move [X31+8], X9
	104 Call 0x1C17D08
	105 Add X1, X31, 0
	106 Call 0x1C17E04
	107 Move X20, X0
	108 Move X0, 0x92F000
	109 Move X0, [X0+3016]
	110 Call 0x1C17D08
	111 Move X1, X19
	112 Move X2, X22
	113 Move X3, X20
	114 Move X4, X31
	115 Call String.Format, X0, X1, X2, X3
	116 Move X19, X0
	117 Move X0, 0x8D8000
	118 Move X0, [X0+1456]
	119 Call 0x1C17D08
	120 Call 0x1C17F10
	121 Move X1, X19
	122 Move X2, X31
	123 Move X20, X0
	124 Call InvalidOperationException..ctor, X0, X1
	125 Move X0, 0x92F000
	126 Move X0, [X0+3024]
	127 Call 0x1C17D08
	128 Move X1, X0
	129 Move X0, X20
	130 Call 0x1C17DEC

Method: System.Void ShiftChildIndicesInHierarchyOneUp(UnityEngine.InputSystem.InputDevice device, System.Int32 startIndex, UnityEngine.InputSystem.InputControl exceptControl)

Disassembly:
	0x0381D6BC TBNZ X8, 0x0, 0x381D6D4
	0x0381D6C0 ADRP X0, 0x92D000
	0x0381D6C4 LDR X0, [X0 + 0xC58]
	0x0381D6C8 BL 0x1C16CF4
	0x0381D6CC MOVZ W8, 0x1
	0x0381D6D0 STRB W8, [X23 + 0x526]
	0x0381D6D4 LDRSH W8, [X22 + 0x2]
	0x0381D6D8 ADDS W31, W8, 0x1
	0x0381D6DC B.NE 0x381D790
	0x0381D6E0 LDR X8, [X21]
	0x0381D6E4 CBZ X8, 0x381D7A0
	0x0381D6E8 LDR X9, [X8 + 0x160]
	0x0381D6EC CBZ X9, 0x381D7A0
	0x0381D6F0 LDR X23, [X9 + 0x18]
	0x0381D6F4 ADRP X9, 0x92D000
	0x0381D6F8 ADD X0, X8, 0x160
	0x0381D6FC STRH W23, [X22 + 0x2]
	0x0381D700 LDR X9, [X9 + 0xC58]
	0x0381D704 ADD W1, W23, 0x2
	0x0381D708 LDR X2, [X9]
	0x0381D70C BL 0x214541C
	0x0381D710 LDR X8, [X21]
	0x0381D714 CBZ X8, 0x381D7A0
	0x0381D718 LDR X8, [X8 + 0x160]

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {23}
	004 Move X9, [X0+336]
	005 Compare X9, 0
	006 JumpIfEqual {23}
	007 Move X8, [X9+24]
	008 NotImplemented "Instruction CMP not yet implemented."
	009 And X8, X8, 0
	010 Add X9, X9, 32
	011 Move X10, [X9]
	012 Compare X10, 0
	013 JumpIfEqual {19}
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Move W11, [X10+156]
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Add W11, W11, 1
	018 Move [X10+156], W11
	019 Subtract X8, X8, 1
	020 Add X9, X9, 8
	021 Move X30, [X31+16]
	022 Return 
	023 Call 0x1C17F20

Method: System.Void SetDisplayName(UnityEngine.InputSystem.InputControl control, System.String longDisplayNameFromLayout, System.String shortDisplayNameFromLayout, System.Boolean shortName)

Disassembly:
	0x0381D71C CBZ X8, 0x381D7A0
	0x0381D720 LDR W9, [X8 + 0x18]
	0x0381D724 CMP W23, W9
	0x0381D728 B.CS 0x381D7A4
	0x0381D72C SXTW X9, W23
	0x0381D730 UBFM X9, X9, 0x3D, 0x3C
	0x0381D734 SUB X9, X9, W23, SXTW
	0x0381D738 UBFM X10, X20, 0x30, 0x3F
	0x0381D73C UBFM X11, X20, 0x20, 0x3F
	0x0381D740 ADD X8, X8, X9
	0x0381D744 STRB W10, [X8 + 0x26]
	0x0381D748 STRH W11, [X8 + 0x24]
	0x0381D74C STR W20, [X8 + 0x20]
	0x0381D750 LDR X8, [X21]
	0x0381D754 CBZ X8, 0x381D7A0
	0x0381D758 LDR X8, [X8 + 0x160]
	0x0381D75C CBZ X8, 0x381D7A0
	0x0381D760 LDR W10, [X8 + 0x18]
	0x0381D764 ADD W9, W23, 0x1
	0x0381D768 CMP W9, W10
	0x0381D76C B.CS 0x381D7A4
	0x0381D770 SBFM X10, X9, 0x3D, 0x1F
	0x0381D774 SUB X9, X10, W9, SXTW
	0x0381D778 UBFM X11, X19, 0x30, 0x3F
	0x0381D77C UBFM X12, X19, 0x20, 0x3F
	0x0381D780 ADD X8, X8, X9
	0x0381D784 STRB W11, [X8 + 0x26]
	0x0381D788 STRH W12, [X8 + 0x24]
	0x0381D78C STR W19, [X8 + 0x20]
	0x0381D790 LDP X20, X19, [X31 + 0x20]
	0x0381D794 LDP X22, X21, [X31 + 0x10]
	0x0381D798 LDP X30, X23, [X31], #0x30
	0x0381D79C RET
	0x0381D7A0 BL 0x1C16F20
	0x0381D7A4 BL 0x1C16F28
	0x0381D7A8 STR X30, [X31 - 0x50]!
	0x0381D7AC STP X26, X25, [X31 + 0x10]
	0x0381D7B0 STP X24, X23, [X31 + 0x20]
	0x0381D7B4 STP X22, X21, [X31 + 0x30]
	0x0381D7B8 STP X20, X19, [X31 + 0x40]
	0x0381D7BC ADRP X23, 0xBC4000
	0x0381D7C0 LDRB W8, [X23 + 0x525]
	0x0381D7C4 MOV W22, W3
	0x0381D7C8 MOV X19, X2
	0x0381D7CC MOV X21, X1
	0x0381D7D0 MOV X20, X0
	0x0381D7D4 TBNZ X8, 0x0, 0x381D7EC
	0x0381D7D8 ADRP X0, 0x92D000
	0x0381D7DC LDR X0, [X0 + 0xC60]
	0x0381D7E0 BL 0x1C16CF4
	0x0381D7E4 MOVZ W8, 0x1
	0x0381D7E8 STRB W8, [X23 + 0x525]
	0x0381D7EC LDR X8, [X20]
	0x0381D7F0 CBZ X8, 0x381D8C8
	0x0381D7F4 LDR X9, [X8 + 0x160]
	0x0381D7F8 CBZ X9, 0x381D8C8
	0x0381D7FC LDR W10, [X9 + 0x18]
	0x0381D800 CMP W10, W22
	0x0381D804 B.LS 0x381D8E4
	0x0381D808 SBFM X10, X22, 0x3D, 0x1F
	0x0381D80C SUB X10, X10, W22, SXTW
	0x0381D810 ADD X24, X9, X10
	0x0381D814 LDRB W25, [X24 + 0x26]!
	0x0381D818 ADRP X26, 0x92D000
	0x0381D81C MOV X9, X24
	0x0381D820 LDRH W23, [X9 - 0x2]!
	0x0381D824 LDR X26, [X26 + 0xC60]
	0x0381D828 CBNZ W25, 0x381D834
	0x0381D82C LDR W23, [X19]
	0x0381D830 STRH W23, [X9]
	0x0381D834 MOV X0, X20
	0x0381D838 MOV X1, X21
	0x0381D83C ADD X22, X8, 0x168
	0x0381D840 BL 0x381D8E8
	0x0381D844 LDR X3, [X26]
	0x0381D848 MOV W2, W0
	0x0381D84C ADD W1, W25, W23, UXTH
	0x0381D850 MOV X0, X22
	0x0381D854 BL 0x217A260
	0x0381D858 LDRB W8, [X24]
	0x0381D85C ADD W8, W8, 0x1
	0x0381D860 STRB W8, [X24]
	0x0381D864 LDR W8, [X19]
	0x0381D868 ADD W8, W8, 0x1
	0x0381D86C STR W8, [X19]
	0x0381D870 LDR X8, [X20]
	0x0381D874 CBZ X8, 0x381D8C8
	0x0381D878 LDR X8, [X8 + 0x160]
	0x0381D87C CBZ X8, 0x381D8C8
	0x0381D880 LDR W9, [X8 + 0x18]
	0x0381D884 ADD X10, X8, 0x24
	0x0381D888 MOVN X12, 0x0
	0x0381D88C SXTW X11, W9
	0x0381D890 ADD X12, X12, 0x1
	0x0381D894 CMP X12, X11
	0x0381D898 B.GE 0x381D8CC
	0x0381D89C CMP X12, X9
	0x0381D8A0 B.CS 0x381D8E4
	0x0381D8A4 LDRB W13, [X10 + 0x2]
	0x0381D8A8 CBZ W13, 0x381D8C0
	0x0381D8AC LDRH W13, [X10]
	0x0381D8B0 CMP W13, W23, UXTH
	0x0381D8B4 B.LS 0x381D8C0
	0x0381D8B8 ADD W13, W13, 0x1
	0x0381D8BC STRH W13, [X10]
	0x0381D8C0 ADD X10, X10, 0x7
	0x0381D8C4 CBNZ X8, 0x381D890
	0x0381D8C8 BL 0x1C16F20
	0x0381D8CC LDP X20, X19, [X31 + 0x40]
	0x0381D8D0 LDP X22, X21, [X31 + 0x30]
	0x0381D8D4 LDP X24, X23, [X31 + 0x20]
	0x0381D8D8 LDP X26, X25, [X31 + 0x10]
	0x0381D8DC LDR X30, [X31], #0x50
	0x0381D8E0 RET
	0x0381D8E4 BL 0x1C16F28
	0x0381D8E8 STR X30, [X31 - 0x20]!
	0x0381D8EC STP X20, X19, [X31 + 0x10]
	0x0381D8F0 LDR X8, [X0]
	0x0381D8F4 CBZ X8, 0x381D92C
	0x0381D8F8 LDR X8, [X8 + 0x150]
	0x0381D8FC CBZ X8, 0x381D92C
	0x0381D900 LDR W9, [X8 + 0x18]
	0x0381D904 MOV W0, W31
	0x0381D908 CMP W0, W9
	0x0381D90C B.GE 0x381D93C
	0x0381D910 B.CS 0x381D994
	0x0381D914 ADD X10, X8, W0, 0x3, SXTW
	0x0381D918 LDR X10, [X10 + 0x20]
	0x0381D91C CMP X10, X1
	0x0381D920 B.EQ 0x381D930

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0xBC5000
	009 Move W8, [X24+1308]
	010 Move W21, W4
	011 Move X23, X3
	012 Move X22, X2
	013 Move X19, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0x8D7000
	020 Move X0, [X0+2288]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X24+1308], W8
	024 And W31, W21, 1
	025 NotImplemented "Instruction CSEL not yet implemented."
	026 Move X0, X23
	027 Move X1, X31
	028 Call String.IsNullOrEmpty, X0
	029 Move TEMP, X0
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfNotEqual {86}
	033 Compare X19, 0
	034 JumpIfEqual {161}
	035 Move TEMP, X21
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfNotEqual {88}
	039 Move X8, [X19+128]
	040 Compare X8, 0
	041 JumpIfEqual {138}
	042 Move X9, [X19+120]
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move X21, [X20+32]
	045 Compare X21, 0
	046 JumpIfNotEqual {57}
	047 Move X8, 0x8D7000
	048 Move X8, [X8+2288]
	049 Move X0, [X8]
	050 Call 0x1C17F10
	051 Move X1, X31
	052 Move X21, X0
	053 Call StringBuilder..ctor, X0
	054 Move [X20+32], X21
	055 Compare X21, 0
	056 JumpIfEqual {161}
	057 Move X0, X21
	058 Move W1, W31
	059 Move X2, X31
	060 Call StringBuilder.set_Length, X0, X1
	061 Move X0, [X19+128]
	062 Move X1, [X20+32]
	063 Move W2, 1
	064 Call InputDeviceBuilder.AddParentDisplayNameRecursive, X0, X1, X2
	065 Move X0, [X20+32]
	066 Compare X0, 0
	067 JumpIfEqual {161}
	068 Move X1, X31
	069 Call StringBuilder.get_Length, X0
	070 Compare W0, 0
	071 JumpIfEqual {138}
	072 Move X0, X22
	073 Move X1, X31
	074 Call String.IsNullOrEmpty, X0
	075 Move X21, [X20+32]
	076 Move TEMP, X0
	077 And TEMP, TEMP, 1
	078 Compare TEMP, 1
	079 JumpIfNotEqual {139}
	080 Move X0, X19
	081 Move X1, X31
	082 Call InputControl.get_name, X0
	083 Compare X21, 0
	084 JumpIfEqual {161}
	085 Move X22, X0
	086 Compare X19, 0
	087 JumpIfNotEqual {92}
	088 Move X0, X19
	089 Move X1, X31
	090 Call InputControl.get_name, X0
	091 Move X23, X0
	092 Move X8, [X19+128]
	093 Compare X8, 0
	094 JumpIfEqual {132}
	095 Move X9, [X19+120]
	096 NotImplemented "Instruction CMP not yet implemented."
	097 Move X22, [X20+32]
	098 Compare X22, 0
	099 JumpIfNotEqual {110}
	100 Move X8, 0x8D7000
	101 Move X8, [X8+2288]
	102 Move X0, [X8]
	103 Call 0x1C17F10
	104 Move X1, X31
	105 Move X22, X0
	106 Call StringBuilder..ctor, X0
	107 Move [X20+32], X22
	108 Compare X22, 0
	109 JumpIfEqual {161}
	110 Move X0, X22
	111 Move W1, W31
	112 Move X2, X31
	113 Call StringBuilder.set_Length, X0, X1
	114 Move X0, [X19+128]
	115 Move X1, [X20+32]
	116 And W2, W21, 1
	117 Call InputDeviceBuilder.AddParentDisplayNameRecursive, X0, X1, X2
	118 Move X0, [X20+32]
	119 Compare X0, 0
	120 JumpIfEqual {161}
	121 Move X1, X23
	122 Move X2, X31
	123 Call StringBuilder.Append, X0, X1
	124 Move X0, [X20+32]
	125 Compare X0, 0
	126 JumpIfEqual {161}
	127 Move X8, [X0]
	128 Move X9, [X8+360]
	129 Move X1, [X8+368]
	130 NotImplemented "Instruction BLR not yet implemented."
	131 Move X23, X0
	132 Move TEMP, X21
	133 And TEMP, TEMP, 1
	134 Compare TEMP, 1
	135 JumpIfNotEqual {137}
	136 Move [X19+80], X23
	137 Move [X19+64], X23
	138 Move [X19+80], X31
	139 Compare X21, 0
	140 JumpIfEqual {161}
	141 Move X0, X21
	142 Move X1, X22
	143 Move X2, X31
	144 Call StringBuilder.Append, X0, X1
	145 Move X0, [X20+32]
	146 Compare X0, 0
	147 JumpIfEqual {161}
	148 Move X8, [X0]
	149 Move X9, [X8+360]
	150 Move X1, [X8+368]
	151 NotImplemented "Instruction BLR not yet implemented."
	152 Move [X19+80], X0
	153 Move X20, [X31+48]
	154 Move X19, [X31+56]
	155 Move X22, [X31+32]
	156 Move X21, [X31+40]
	157 Move X24, [X31+16]
	158 Move X23, [X31+24]
	159 Move X30, [X31+64]
	160 Return 
	161 Call 0x1C17F20

Method: System.Void AddParentDisplayNameRecursive(UnityEngine.InputSystem.InputControl control, System.Text.StringBuilder stringBuilder, System.Boolean shortName)

Disassembly:
	0x0381D924 ADD W0, W0, 0x1
	0x0381D928 CBNZ X8, 0x381D908
	0x0381D92C BL 0x1C16F20
	0x0381D930 LDP X20, X19, [X31 + 0x10]
	0x0381D934 LDR X30, [X31], #0x20
	0x0381D938 RET
	0x0381D93C ADRP X0, 0x92D000
	0x0381D940 LDR X0, [X0 + 0xC68]
	0x0381D944 MOV X19, X1
	0x0381D948 BL 0x1C16D08
	0x0381D94C MOV X1, X19
	0x0381D950 MOV X2, X31
	0x0381D954 BL 0x321EFD0
	0x0381D958 MOV X19, X0
	0x0381D95C ADRP X0, 0x8D6000
	0x0381D960 LDR X0, [X0 + 0x5B0]
	0x0381D964 BL 0x1C16D08
	0x0381D968 BL 0x1C16F10
	0x0381D96C MOV X1, X19
	0x0381D970 MOV X2, X31
	0x0381D974 MOV X20, X0
	0x0381D978 BL 0x337DF1C
	0x0381D97C ADRP X0, 0x92D000
	0x0381D980 LDR X0, [X0 + 0xC70]
	0x0381D984 BL 0x1C16D08
	0x0381D988 MOV X1, X0
	0x0381D98C MOV X0, X20
	0x0381D990 BL 0x1C16DEC
	0x0381D994 BL 0x1C16F28
	0x0381D998 STR X30, [X31 - 0x20]!
	0x0381D99C STP X20, X19, [X31 + 0x10]
	0x0381D9A0 ADRP X19, 0xBC4000
	0x0381D9A4 ADRP X20, 0x92D000
	0x0381D9A8 LDRB W8, [X19 + 0x527]
	0x0381D9AC LDR X20, [X20 + 0xC78]
	0x0381D9B0 TBNZ X8, 0x0, 0x381D9C8
	0x0381D9B4 ADRP X0, 0x92D000
	0x0381D9B8 LDR X0, [X0 + 0xC78]
	0x0381D9BC BL 0x1C16CF4
	0x0381D9C0 MOVZ W8, 0x1
	0x0381D9C4 STRB W8, [X19 + 0x527]
	0x0381D9C8 LDR X8, [X20]
	0x0381D9CC LDP X20, X19, [X31 + 0x10]
	0x0381D9D0 LDR X0, [X8 + 0xB8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Compare X0, 0
	006 JumpIfEqual {57}
	007 Move X20, X0
	008 Move X0, [X0+128]
	009 Move W21, W2
	010 Move X19, X1
	011 Compare X0, 0
	012 JumpIfEqual {18}
	013 Move X8, [X20+120]
	014 NotImplemented "Instruction CMP not yet implemented."
	015 And W2, W21, 1
	016 Move X1, X19
	017 Call InputDeviceBuilder.AddParentDisplayNameRecursive, X0, X1, X2
	018 Move TEMP, X21
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfNotEqual {38}
	022 Move X0, X20
	023 Move X1, X31
	024 Call InputControl.get_shortDisplayName, X0
	025 Move X1, X31
	026 Move X21, X0
	027 Call String.IsNullOrEmpty, X0
	028 Move TEMP, X0
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfNotEqual {36}
	032 Move X0, X20
	033 Move X1, X31
	034 Call InputControl.get_displayName, X0
	035 Move X21, X0
	036 Compare X19, 0
	037 JumpIfNotEqual {44}
	038 Move X0, X20
	039 Move X1, X31
	040 Call InputControl.get_displayName, X0
	041 Compare X19, 0
	042 JumpIfEqual {57}
	043 Move X21, X0
	044 Move X0, X19
	045 Move X1, X21
	046 Move X2, X31
	047 Call StringBuilder.Append, X0, X1
	048 Move X0, X19
	049 Move X20, [X31+16]
	050 Move X19, [X31+24]
	051 Move W1, 32
	052 Move X2, X31
	053 Move X30, [X31+32]
	054 Move X21, [X31+40]
	055 Call StringBuilder.Append, X0, X1
	056 Return 
	057 Call 0x1C17F20

Method: System.Void AddProcessors(UnityEngine.InputSystem.InputControl control, ref UnityEngine.InputSystem.Layouts.InputControlLayout/ControlItem controlItem, System.String layoutName)

Disassembly:
	0x0381D16C STP X29, X30, [X31 + 0x20]
	0x0381D170 STP X28, X27, [X31 + 0x30]
	0x0381D174 STP X26, X25, [X31 + 0x40]
	0x0381D178 STP X24, X23, [X31 + 0x50]
	0x0381D17C STP X22, X21, [X31 + 0x60]
	0x0381D180 STP X20, X19, [X31 + 0x70]
	0x0381D184 ADRP X22, 0xBC4000
	0x0381D188 LDRB W8, [X22 + 0x524]
	0x0381D18C MOV W19, W2
	0x0381D190 MOV X20, X1
	0x0381D194 MOV X21, X0
	0x0381D198 TBNZ X8, 0x0, 0x381D1BC
	0x0381D19C ADRP X0, 0x8FE000
	0x0381D1A0 LDR X0, [X0 + 0xD18]
	0x0381D1A4 BL 0x1C16CF4
	0x0381D1A8 ADRP X0, 0x8D6000
	0x0381D1AC LDR X0, [X0 + 0x5A8]
	0x0381D1B0 BL 0x1C16CF4
	0x0381D1B4 MOVZ W8, 0x1
	0x0381D1B8 STRB W8, [X22 + 0x524]
	0x0381D1BC STP X31, X31, [X31 + 0x10]
	0x0381D1C0 AND W26, W20, 0xFFFF
	0x0381D1C4 LDR X8, [X21]
	0x0381D1C8 SUB W9, W26, W19, UXTH
	0x0381D1CC SUB W10, W9, 0x1
	0x0381D1D0 CMP W10, 0x0
	0x0381D1D4 CSEL W10, W9, W10, LT
	0x0381D1D8 CBZ X8, 0x381D690
	0x0381D1DC LDR X27, [X8 + 0x150]
	0x0381D1E0 CBZ X27, 0x381D690
	0x0381D1E4 ADRP X24, 0x8FE000
	0x0381D1E8 LDR X24, [X24 + 0xD18]
	0x0381D1EC LDR W8, [X27 + 0x18]
	0x0381D1F0 SBFM W10, W10, 0x1, 0x1F
	0x0381D1F4 ADD W10, W10, W19, UXTH
	0x0381D1F8 ADD W20, W10, 0x1
	0x0381D1FC CMP W8, 0x1
	0x0381D200 AND W10, W20, 0xFFFF
	0x0381D204 STR W10, [X31 + 0xC]
	0x0381D208 B.LT 0x381D478
	0x0381D20C MOV W28, W31
	0x0381D210 AND W29, W19, 0xFFFF
	0x0381D214 SXTW X23, W9
	0x0381D218 MOV W25, W10
	0x0381D21C MOVZ W10, 0xFFFF
	0x0381D220 MOVZ W9, 0xFFFF
	0x0381D224 STP W10, W9, [X31 + 0x4]
	0x0381D228 CMP W28, W8
	0x0381D22C B.CS 0x381D694
	0x0381D230 ADD X8, X27, W28, 0x3, SXTW
	0x0381D234 LDR X8, [X8 + 0x20]
	0x0381D238 CBZ X8, 0x381D690
	0x0381D23C LDR V0, [X8 + 0x1]
	0x0381D240 LDR X0, [X24]
	0x0381D244 STR V0, [X31 + 0x1]
	0x0381D248 LDR W8, [X0 + 0xE0]
	0x0381D24C CBNZ W8, 0x381D254
	0x0381D250 BL 0x1C16DFC
	0x0381D254 ADD X0, X31, 0x10
	0x0381D258 MOV X1, X31
	0x0381D25C BL 0x3809DD0
	0x0381D260 LDR W8, [X31 + 0x1C]
	0x0381D264 ADD W8, W0, W8
	0x0381D268 SUB W8, W8, 0x1
	0x0381D26C CMP W8, W29
	0x0381D270 B.CC 0x381D464
	0x0381D274 LDR X0, [X24]
	0x0381D278 LDR W8, [X0 + 0xE0]
	0x0381D27C CBNZ W8, 0x381D284
	0x0381D280 BL 0x1C16DFC
	0x0381D284 ADD X0, X31, 0x10
	0x0381D288 MOV X1, X31
	0x0381D28C BL 0x3809DD0
	0x0381D290 CMP W0, W26
	0x0381D294 B.CS 0x381D464
	0x0381D298 LDR X0, [X24]
	0x0381D29C LDR W8, [X0 + 0xE0]
	0x0381D2A0 CBNZ W8, 0x381D2A8
	0x0381D2A4 BL 0x1C16DFC
	0x0381D2A8 LDR W8, [X31 + 0x1C]
	0x0381D2AC CMP X8, X23
	0x0381D2B0 B.GT 0x381D464
	0x0381D2B4 LDR X0, [X24]
	0x0381D2B8 LDR W8, [X0 + 0xE0]
	0x0381D2BC CBNZ W8, 0x381D2C4
	0x0381D2C0 BL 0x1C16DFC
	0x0381D2C4 ADD X0, X31, 0x10
	0x0381D2C8 MOV X1, X31
	0x0381D2CC BL 0x3809DD0
	0x0381D2D0 CMP W0, W29
	0x0381D2D4 B.EQ 0x381D464
	0x0381D2D8 LDR X0, [X24]
	0x0381D2DC LDR W8, [X0 + 0xE0]
	0x0381D2E0 CBNZ W8, 0x381D2E8
	0x0381D2E4 BL 0x1C16DFC
	0x0381D2E8 ADD X0, X31, 0x10
	0x0381D2EC MOV X1, X31
	0x0381D2F0 BL 0x3809DD0
	0x0381D2F4 LDR W8, [X31 + 0x1C]
	0x0381D2F8 ADD W8, W8, W0
	0x0381D2FC CMP W8, W26
	0x0381D300 B.EQ 0x381D464
	0x0381D304 LDR X0, [X24]
	0x0381D308 LDR W8, [X0 + 0xE0]
	0x0381D30C CBNZ W8, 0x381D314
	0x0381D310 BL 0x1C16DFC
	0x0381D314 ADD X0, X31, 0x10
	0x0381D318 MOV X1, X31
	0x0381D31C BL 0x3809DD0
	0x0381D320 ADRP X8, 0x8D6000
	0x0381D324 LDR X8, [X8 + 0x5A8]
	0x0381D328 LDR W19, [X31 + 0x1C]
	0x0381D32C MOV W22, W0
	0x0381D330 LDR X8, [X8]
	0x0381D334 LDR W9, [X8 + 0xE0]
	0x0381D338 CBNZ W9, 0x381D344
	0x0381D33C MOV X0, X8
	0x0381D340 BL 0x1C16DFC
	0x0381D344 LDP W9, W10, [X31 + 0x8]
	0x0381D348 ADD W8, W19, W22
	0x0381D34C SUBS X8, X8, X25
	0x0381D350 CSNEG X8, X8, X8, PL
	0x0381D354 AND W9, W9, 0xFFFF
	0x0381D358 SUBS W9, W9, W10
	0x0381D35C CSNEG W9, W9, W9, PL
	0x0381D360 CMP X8, X9
	0x0381D364 B.CS 0x381D3BC
	0x0381D368 LDR X0, [X24]
	0x0381D36C LDR W8, [X0 + 0xE0]
	0x0381D370 CBNZ W8, 0x381D378
	0x0381D374 BL 0x1C16DFC
	0x0381D378 ADD X0, X31, 0x10
	0x0381D37C MOV X1, X31
	0x0381D380 BL 0x3809DD0
	0x0381D384 LDR W8, [X31 + 0x1C]
	0x0381D388 ADD W8, W8, W0
	0x0381D38C CMP W8, W26
	0x0381D390 B.CS 0x381D3BC
	0x0381D394 LDR X0, [X24]
	0x0381D398 LDR W8, [X0 + 0xE0]
	0x0381D39C CBNZ W8, 0x381D3A4

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+48], X29
	003 Move [X31+56], X30
	004 Move [X31+64], X28
	005 Move [X31+72], X27
	006 Move [X31+80], X26
	007 Move [X31+88], X25
	008 Move [X31+96], X24
	009 Move [X31+104], X23
	010 Move [X31+112], X22
	011 Move [X31+120], X21
	012 Move [X31+128], X20
	013 Move [X31+136], X19
	014 Move X22, 0xBC5000
	015 Move W8, [X22+1309]
	016 Move X19, X2
	017 Move X20, X1
	018 Move X21, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {43}
	023 Move X0, 0x8FF000
	024 Move X0, [X0+3136]
	025 Call 0x1C17CF4
	026 Move X0, 0x92E000
	027 Move X0, [X0+3040]
	028 Call 0x1C17CF4
	029 Move X0, 0x92A000
	030 Move X0, [X0+904]
	031 Call 0x1C17CF4
	032 Move X0, 0x92E000
	033 Move X0, [X0+2400]
	034 Call 0x1C17CF4
	035 Move X0, 0x92E000
	036 Move X0, [X0+3072]
	037 Call 0x1C17CF4
	038 Move X0, 0x8D7000
	039 Move X0, [X0+1728]
	040 Call 0x1C17CF4
	041 Move W8, 1
	042 Move [X22+1309], W8
	043 Move X8, [X20+128]
	044 Move X9, X8
	045 ShiftRight X9, 32
	046 And X9, X9, 0x7FFFFFFF
	047 Subtract W25, W9, 1
	048 Move X26, 0x92E000
	049 Move X27, 0x8FF000
	050 Move X28, 0x8D7000
	051 Move X29, 0x92E000
	052 Move X26, [X26+3072]
	053 Move X27, [X27+3136]
	054 Move X28, [X28+1728]
	055 Move X29, [X29+3040]
	056 Move W22, W31
	057 Move X9, [X20+120]
	058 Move X2, [X26]
	059 Add X0, X31, 32
	060 Move W1, W22
	061 Move [X31+32], X9
	062 Move [X31+40], X8
	063 Add X8, X31, 8
	064 Call ReadOnlyArray`1<NameAndParameters>.get_Item, X0, X1
	065 Move X8, [X27]
	066 Move X23, [X31+8]
	067 Move X2, X31
	068 Move X0, [X8+184]
	069 Move X1, X23
	070 Call TypeTable.LookupTypeRegistration, X0, X1
	071 Move X8, [X28]
	072 Move X24, X0
	073 Move W9, [X8+224]
	074 Compare W9, 0
	075 JumpIfNotEqual {78}
	076 Move X0, X8
	077 Call 0x1C17DFC
	078 Move X0, X24
	079 Move X1, X31
	080 Move X2, X31
	081 Call Type.op_Equality, X0, X1
	082 Move TEMP, X0
	083 And TEMP, TEMP, 1
	084 Compare TEMP, 1
	085 JumpIfEqual {131}
	086 Move X0, X24
	087 Move X1, X31
	088 Call Activator.CreateInstance, X0
	089 NotImplemented "Instruction LDUR not yet implemented."
	090 Move X2, [X26]
	091 Move X23, X0
	092 Add X8, X31, 8
	093 Add X0, X31, 32
	094 Move W1, W22
	095 Move [X31+2], V0
	096 Call ReadOnlyArray`1<NameAndParameters>.get_Item, X0, X1
	097 Move X2, [X31+24]
	098 Move X8, X2
	099 ShiftRight X8, 32
	100 And X8, X8, 0x7FFFFFFF
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Move X1, [X31+16]
	103 Move X3, [X29]
	104 Move X0, X23
	105 Call 0x22221EC, X0, X1
	106 Compare X21, 0
	107 JumpIfEqual {164}
	108 Move X8, [X21]
	109 Move X0, X21
	110 Move X1, X23
	111 Move X9, [X8+568]
	112 Move X2, [X8+576]
	113 NotImplemented "Instruction BLR not yet implemented."
	114 NotImplemented "Instruction CMP not yet implemented."
	115 Move X8, [X20+128]
	116 Add W22, W22, 1
	117 Move X20, [X31+128]
	118 Move X19, [X31+136]
	119 Move X22, [X31+112]
	120 Move X21, [X31+120]
	121 Move X24, [X31+96]
	122 Move X23, [X31+104]
	123 Move X26, [X31+80]
	124 Move X25, [X31+88]
	125 Move X28, [X31+64]
	126 Move X27, [X31+72]
	127 Move X29, [X31+48]
	128 Move X30, [X31+56]
	129 Add X31, X31, 144
	130 Return 
	131 Move X8, [X20]
	132 Move X9, [X20+8]
	133 Move X0, 0x902000
	134 Move [X31+8], X8
	135 Move [X31+16], X9
	136 Move X0, [X0+1296]
	137 Call 0x1C17D08
	138 Add X1, X31, 8
	139 Call 0x1C17E04
	140 Move X20, X0
	141 Move X0, 0x92E000
	142 Move X0, [X0+3080]
	143 Call 0x1C17D08
	144 Move X1, X23
	145 Move X2, X20
	146 Move X3, X19
	147 Move X4, X31
	148 Call String.Format, X0, X1, X2, X3
	149 Move X19, X0
	150 Move X0, 0x8D7000
	151 Move X0, [X0+1456]
	152 Call 0x1C17D08
	153 Call 0x1C17F10
	154 Move X1, X19
	155 Move X2, X31
	156 Move X20, X0
	157 Call InvalidOperationException..ctor, X0, X1
	158 Move X0, 0x92E000
	159 Move X0, [X0+3088]
	160 Call 0x1C17D08
	161 Move X1, X0
	162 Move X0, X20
	163 Call 0x1C17DEC
	164 Call 0x1C17F20

Method: System.Void SetFormat(UnityEngine.InputSystem.InputControl control, UnityEngine.InputSystem.Layouts.InputControlLayout/ControlItem controlItem)

Disassembly:
	0x0381D0B8 MOV X1, X31
	0x0381D0BC BL 0x3809DD0
	0x0381D0C0 LDR X8, [X21]
	0x0381D0C4 CBZ X8, 0x381D160
	0x0381D0C8 LDR X8, [X8 + 0x160]
	0x0381D0CC CBZ X8, 0x381D160
	0x0381D0D0 LDRH W4, [X31 + 0x8]
	0x0381D0D4 LDRSH W9, [X23 + 0x2]
	0x0381D0D8 CMP W0, W4
	0x0381D0DC B.CS 0x381D114
	0x0381D0E0 LDR W10, [X8 + 0x18]
	0x0381D0E4 CMP W9, W10
	0x0381D0E8 B.CS 0x381D164
	0x0381D0EC MOV W10, W9
	0x0381D0F0 SBFM X10, X10, 0x3D, 0x1F
	0x0381D0F4 SUB X9, X10, W9, SXTW
	0x0381D0F8 ADD X8, X8, X9
	0x0381D0FC ADD X1, X8, 0x20
	0x0381D100 MOV X0, X21
	0x0381D104 MOV X2, X20
	0x0381D108 MOV X3, X19
	0x0381D10C MOV W4, W22
	0x0381D110 B 0x381D144
	0x0381D114 LDR W10, [X8 + 0x18]
	0x0381D118 SXTW X9, W9
	0x0381D11C ADD X9, X9, 0x1
	0x0381D120 CMP W9, W10
	0x0381D124 B.CS 0x381D164
	0x0381D128 UBFM X10, X9, 0x3D, 0x3C
	0x0381D12C SUB X9, X10, X9
	0x0381D130 ADD X8, X8, X9
	0x0381D134 ADD X1, X8, 0x20
	0x0381D138 MOV X0, X21
	0x0381D13C MOV X2, X20
	0x0381D140 MOV X3, X19
	0x0381D144 BL 0x381CDFC
	0x0381D148 LDP X20, X19, [X31 + 0x40]
	0x0381D14C LDP X22, X21, [X31 + 0x30]
	0x0381D150 LDP X24, X23, [X31 + 0x20]
	0x0381D154 LDP X30, X25, [X31 + 0x10]
	0x0381D158 ADD X31, X31, 0x50
	0x0381D15C RET
	0x0381D160 BL 0x1C16F20
	0x0381D164 BL 0x1C16F28
	0x0381D168 SUB X31, X31, 0x80

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xBC5000
	007 Move W8, [X21+1310]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x8FF000
	015 Move X0, [X0+3352]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1310], W8
	019 Compare X19, 0
	020 JumpIfEqual {56}
	021 Move X21, 0x8FF000
	022 Move X21, [X21+3352]
	023 Move W22, [X20+148]
	024 Move X0, [X21]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move [X19+16], W22
	030 Move W8, [X20+144]
	031 Compare W8, 0
	032 JumpIfNotEqual {50}
	033 Move X0, [X21]
	034 Move W20, [X20+148]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Move X0, X20
	040 Move X1, X31
	041 Call InputStateBlock.GetSizeOfPrimitiveFormatInBits, X0
	042 Add W31, W0, 1
	043 Move W20, W0
	044 Move X0, [X21]
	045 Move W8, [X0+224]
	046 Compare W8, 0
	047 JumpIfNotEqual {49}
	048 Call 0x1C17DFC
	049 Move [X19+28], W20
	050 Move X20, [X31+32]
	051 Move X19, [X31+40]
	052 Move X22, [X31+16]
	053 Move X21, [X31+24]
	054 Move X30, [X31+48]
	055 Return 
	056 Call 0x1C17F20

Method: UnityEngine.InputSystem.Layouts.InputControlLayout FindOrLoadLayout(System.String name)

Disassembly:
	0x0381AED0 LDR W8, [X22 + 0x4]
	0x0381AED4 ADDS W31, W8, 0x2
	0x0381AED8 B.NE 0x381AE7C
	0x0381AEDC LDR X0, [X24]
	0x0381AEE0 LDR W8, [X0 + 0xE0]
	0x0381AEE4 CBNZ W8, 0x381AEEC
	0x0381AEE8 BL 0x1C16DFC
	0x0381AEEC LDR W8, [X22 + 0xC]
	0x0381AEF0 ADDS W31, W8, 0x1
	0x0381AEF4 B.EQ 0x381AE7C
	0x0381AEF8 LDR X0, [X24]
	0x0381AEFC STR W21, [X31]
	0x0381AF00 LDR W9, [X0 + 0xE0]
	0x0381AF04 CBNZ W9, 0x381AF10
	0x0381AF08 BL 0x1C16DFC
	0x0381AF0C LDR W8, [X22 + 0xC]
	0x0381AF10 ANDS W8, W8, 0x7
	0x0381AF14 CSET W21, NE
	0x0381AF18 CSEL W29, W29, W21, EQ
	0x0381AF1C CBZ W8, 0x381AFA4
	0x0381AF20 LDR X0, [X24]
	0x0381AF24 CMP X28, 0x0
	0x0381AF28 CSEL X28, X23, X28, EQ

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xBC8000
	006 Move X21, 0x902000
	007 Move W8, [X20+1311]
	008 Move X21, [X21+3520]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x902000
	015 Move X0, [X0+3520]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1311], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Call InputControlLayout.get_cache
	025 Move X1, X19
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move W2, 1
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Call Cache.FindOrLoadLayout, X0, X1, X2
	032 Return X0

Method: System.Void ComputeStateLayout(UnityEngine.InputSystem.InputControl control)

Disassembly:
	0x0381BBB8 BL 0x37734A0
	0x0381BBBC TBZ X0, 0x0, 0x381BBEC
	0x0381BBC0 ADRP X8, 0x900000
	0x0381BBC4 LDR X8, [X8 + 0xD18]
	0x0381BBC8 LDR X0, [X8]
	0x0381BBCC LDR W8, [X0 + 0xE0]
	0x0381BBD0 CBNZ W8, 0x381BBD8
	0x0381BBD4 BL 0x1C16DFC
	0x0381BBD8 MOVN W8, 0x0
	0x0381BBDC MOVZ W9, 0x1
	0x0381BBE0 STR W8, [X22 + 0x1C]
	0x0381BBE4 STRB W9, [X23]
	0x0381BBE8 B 0x381BC54
	0x0381BBEC ADRP X23, 0x900000
	0x0381BBF0 LDR X23, [X23 + 0xD18]
	0x0381BBF4 LDR W24, [X20 + 0x88]
	0x0381BBF8 LDR X0, [X23]
	0x0381BBFC LDR W8, [X0 + 0xE0]
	0x0381BC00 CBNZ W8, 0x381BC08
	0x0381BC04 BL 0x1C16DFC
	0x0381BC08 STR W24, [X22 + 0x14]
	0x0381BC0C LDR W8, [X20 + 0x8C]
	0x0381BC10 STR W8, [X22 + 0x18]
	0x0381BC14 LDR W24, [X20 + 0x90]
	0x0381BC18 CBZ W24, 0x381BC30
	0x0381BC1C LDR X0, [X23]
	0x0381BC20 LDR W8, [X0 + 0xE0]
	0x0381BC24 CBNZ W8, 0x381BC2C
	0x0381BC28 BL 0x1C16DFC
	0x0381BC2C STR W24, [X22 + 0x1C]
	0x0381BC30 LDR W8, [X20 + 0x94]
	0x0381BC34 CBZ W8, 0x381BC54
	0x0381BC38 ADD X0, X31, 0x10
	0x0381BC3C MOVZ W2, 0xD0
	0x0381BC40 MOV X1, X20
	0x0381BC44 BL 0x3EB1AC0
	0x0381BC48 ADD X1, X31, 0x10
	0x0381BC4C MOV X0, X22
	0x0381BC50 BL 0x381C0B8
	0x0381BC54 LDR X8, [X20 + 0x50]
	0x0381BC58 ADRP X25, 0x92F000
	0x0381BC5C LDR X25, [X25 + 0xBD8]
	0x0381BC60 UBFM X23, X8, 0x20, 0x3F
	0x0381BC64 CMP W23, 0x1
	0x0381BC68 B.LT 0x381BD00
	0x0381BC6C LDR X8, [X21]
	0x0381BC70 CBZ X8, 0x381BDA0
	0x0381BC74 LDR X1, [X20 + 0x48]
	0x0381BC78 LDR X2, [X25]
	0x0381BC7C ADD X0, X8, 0x140
	0x0381BC80 BL 0x21741AC
	0x0381BC84 STP W23, W0, [X22 + 0x88]
	0x0381BC88 LDR X8, [X21]
	0x0381BC8C CBZ X8, 0x381BDA0
	0x0381BC90 ADRP X9, 0x92F000
	0x0381BC94 LDR X9, [X9 + 0xB80]
	0x0381BC98 MOV W24, W0
	0x0381BC9C ADD X0, X8, 0x148
	0x0381BCA0 MOV W1, W23
	0x0381BCA4 LDR X2, [X9]
	0x0381BCA8 BL 0x2178BD8
	0x0381BCAC MOV W24, W24
	0x0381BCB0 UBFM X26, X24, 0x20, 0x1F
	0x0381BCB4 MOVZ X27, 0x1
	0x0381BCB8 LDR X8, [X21]
	0x0381BCBC CBZ X8, 0x381BDA0
	0x0381BCC0 LDR X28, [X8 + 0x148]
	0x0381BCC4 CBZ X28, 0x381BDA0
	0x0381BCC8 LDR X8, [X28]
	0x0381BCCC MOV X0, X22
	0x0381BCD0 LDR X1, [X8 + 0x40]
	0x0381BCD4 BL 0x1C16E00
	0x0381BCD8 CBZ X0, 0x381BDA8
	0x0381BCDC LDR W8, [X28 + 0x18]
	0x0381BCE0 CMP X24, X8
	0x0381BCE4 B.CS 0x381BDA4
	0x0381BCE8 ADD X8, X28, X26, 0x1D, ASR
	0x0381BCEC ADD X26, X26, X27
	0x0381BCF0 SUBS X23, X23, 0x1
	0x0381BCF4 ADD X24, X24, 0x1
	0x0381BCF8 STR X22, [X8 + 0x20]
	0x0381BCFC B.NE 0x381BCB8
	0x0381BD00 LDR W23, [X20 + 0x64]
	0x0381BD04 CMP W23, 0x1
	0x0381BD08 B.LT 0x381BD28
	0x0381BD0C LDR X8, [X21]
	0x0381BD10 CBZ X8, 0x381BDA0
	0x0381BD14 LDR X1, [X20 + 0x58]
	0x0381BD18 LDR X2, [X25]
	0x0381BD1C ADD X0, X8, 0x138
	0x0381BD20 BL 0x21741AC
	0x0381BD24 STP W23, W0, [X22 + 0x90]
	0x0381BD28 LDR X2, [X20 + 0x70]
	0x0381BD2C UBFM X8, X2, 0x20, 0x3F
	0x0381BD30 CMP W8, 0x1
	0x0381BD34 B.LT 0x381BD50
	0x0381BD38 ADRP X8, 0x92F000
	0x0381BD3C LDR X8, [X8 + 0xBE0]
	0x0381BD40 LDR X1, [X20 + 0x68]
	0x0381BD44 MOV X0, X22
	0x0381BD48 LDR X3, [X8]
	0x0381BD4C BL 0x22211EC
	0x0381BD50 LDR W8, [X20 + 0x84]
	0x0381BD54 CMP W8, 0x1
	0x0381BD58 B.LT 0x381BD7C
	0x0381BD5C CBZ X19, 0x381BDA0
	0x0381BD60 LDP X0, X1, [X19 + 0x10]
	0x0381BD64 MOV X2, X31
	0x0381BD68 BL 0x37577E0
	0x0381BD6C MOV X2, X0
	0x0381BD70 MOV X0, X22
	0x0381BD74 MOV X1, X20
	0x0381BD78 BL 0x381C16C
	0x0381BD7C MOV X0, X22
	0x0381BD80 ADD X31, X31, 0x370
	0x0381BD84 LDP X20, X19, [X31 + 0x50]
	0x0381BD88 LDP X22, X21, [X31 + 0x40]
	0x0381BD8C LDP X24, X23, [X31 + 0x30]
	0x0381BD90 LDP X26, X25, [X31 + 0x20]
	0x0381BD94 LDP X28, X27, [X31 + 0x10]
	0x0381BD98 LDP X29, X30, [X31], #0x60
	0x0381BD9C RET
	0x0381BDA0 BL 0x1C16F20
	0x0381BDA4 BL 0x1C16F28
	0x0381BDA8 BL 0x1C16F44
	0x0381BDAC MOV X1, X31
	0x0381BDB0 BL 0x1C16DEC
	0x0381BDB4 LDP X8, X9, [X20]
	0x0381BDB8 ADRP X20, 0x903000
	0x0381BDBC STP X8, X9, [X31 + 0x1B0]
	0x0381BDC0 LDR X20, [X20 + 0x510]
	0x0381BDC4 MOV X0, X20
	0x0381BDC8 BL 0x1C16D08
	0x0381BDCC ADD X1, X31, 0x1B0
	0x0381BDD0 BL 0x1C16E04
	0x0381BDD4 MOV X21, X0
	0x0381BDD8 MOV X0, X19
	0x0381BDDC BL 0x19903C0
	0x0381BDE0 LDP X8, X9, [X19 + 0x10]
	0x0381BDE4 MOV X0, X20
	0x0381BDE8 STR X8, [X31 + 0x280]
	0x0381BDEC STR X9, [X31 + 0x288]
	0x0381BDF0 BL 0x1C16D08
	0x0381BDF4 ADD X1, X31, 0x280
	0x0381BDF8 BL 0x1C16E04
	0x0381BDFC MOV X19, X0
	0x0381BE00 ADRP X0, 0x92F000
	0x0381BE04 LDR X0, [X0 + 0xBE8]
	0x0381BE08 BL 0x1C16D08
	0x0381BE0C MOV X1, X21
	0x0381BE10 MOV X2, X19
	0x0381BE14 MOV X3, X31
	0x0381BE18 BL 0x3227BD4
	0x0381BE1C MOV X19, X0
	0x0381BE20 ADRP X0, 0x8D8000
	0x0381BE24 LDR X0, [X0 + 0x5B0]
	0x0381BE28 BL 0x1C16D08
	0x0381BE2C BL 0x1C16F10
	0x0381BE30 MOV X1, X19
	0x0381BE34 MOV X2, X31
	0x0381BE38 MOV X20, X0
	0x0381BE3C BL 0x337DF1C
	0x0381BE40 ADRP X0, 0x92F000
	0x0381BE44 LDR X0, [X0 + 0xBF0]
	0x0381BE48 BL 0x1C16D08
	0x0381BE4C MOV X1, X0
	0x0381BE50 MOV X0, X20
	0x0381BE54 BL 0x1C16DEC
	0x0381BE58 CMP W1, 0x1
	0x0381BE5C MOV X20, X0
	0x0381BE60 B.NE 0x381BF6C
	0x0381BE64 MOV X0, X20
	0x0381BE68 BL 0x3EB1AD0
	0x0381BE6C MOV X20, X0
	0x0381BE70 ADRP X0, 0x92F000
	0x0381BE74 LDR X0, [X0 + 0xAE8]
	0x0381BE78 BL 0x1C16D08
	0x0381BE7C LDR X8, [X20]
	0x0381BE80 LDR X1, [X8]
	0x0381BE84 BL 0x1C17270
	0x0381BE88 TBZ X0, 0x0, 0x381BF44
	0x0381BE8C LDR X20, [X20]
	0x0381BE90 BL 0x3EB1AE0
	0x0381BE94 MOV X0, X20
	0x0381BE98 BL 0x19903C0
	0x0381BE9C LDR X21, [X20 + 0x90]
	0x0381BEA0 STP X27, X28, [X31 + 0x1B0]
	0x0381BEA4 ADRP X22, 0x903000
	0x0381BEA8 LDR X22, [X22 + 0x510]
	0x0381BEAC MOV X0, X22
	0x0381BEB0 BL 0x1C16D08
	0x0381BEB4 ADD X1, X31, 0x1B0
	0x0381BEB8 BL 0x1C16E04
	0x0381BEBC MOV X23, X0
	0x0381BEC0 MOV X0, X19
	0x0381BEC4 BL 0x19903C0
	0x0381BEC8 LDP X8, X9, [X19 + 0x10]
	0x0381BECC MOV X0, X22
	0x0381BED0 STR X8, [X31 + 0x280]
	0x0381BED4 STR X9, [X31 + 0x288]
	0x0381BED8 BL 0x1C16D08
	0x0381BEDC ADD X1, X31, 0x280
	0x0381BEE0 BL 0x1C16E04
	0x0381BEE4 MOV X19, X0
	0x0381BEE8 ADRP X0, 0x92F000
	0x0381BEEC LDR X0, [X0 + 0xBF8]
	0x0381BEF0 BL 0x1C16D08
	0x0381BEF4 MOV X1, X21
	0x0381BEF8 MOV X2, X23
	0x0381BEFC MOV X3, X19
	0x0381BF00 MOV X4, X31
	0x0381BF04 BL 0x3227C18
	0x0381BF08 MOV X19, X0
	0x0381BF0C ADRP X0, 0x92F000
	0x0381BF10 LDR X0, [X0 + 0xAE8]
	0x0381BF14 BL 0x1C16D08
	0x0381BF18 BL 0x1C16F10
	0x0381BF1C MOV X1, X19
	0x0381BF20 MOV X2, X20
	0x0381BF24 MOV X21, X0
	0x0381BF28 BL 0x38195BC
	0x0381BF2C ADRP X0, 0x92F000
	0x0381BF30 LDR X0, [X0 + 0xBF0]
	0x0381BF34 BL 0x1C16D08
	0x0381BF38 MOV X1, X0
	0x0381BF3C MOV X0, X21
	0x0381BF40 BL 0x1C16DEC
	0x0381BF44 MOVZ W0, 0x8
	0x0381BF48 BL 0x3EB1AF0
	0x0381BF4C LDR X8, [X20]
	0x0381BF50 STR X8, [X0]
	0x0381BF54 ADRP X1, 0x699000
	0x0381BF58 ADD X1, X1, 0xE58
	0x0381BF5C MOV X2, X31
	0x0381BF60 BL 0x3EB1B00
	0x0381BF64 MOV X20, X0
	0x0381BF68 BL 0x3EB1AE0
	0x0381BF6C MOV X0, X20
	0x0381BF70 BL 0x1D2C690
	0x0381BF74 BL 0x1990590
	0x0381BF78 STP X30, X25, [X31 - 0x40]!
	0x0381BF7C STP X24, X23, [X31 + 0x10]
	0x0381BF80 STP X22, X21, [X31 + 0x20]
	0x0381BF84 STP X20, X19, [X31 + 0x30]
	0x0381BF88 MOV X24, X1
	0x0381BF8C LDP X8, X1, [X6]
	0x0381BF90 MOV X23, X2
	0x0381BF94 MOV X25, X0
	0x0381BF98 MOV X2, X31
	0x0381BF9C MOV X0, X8
	0x0381BFA0 MOV X20, X6
	0x0381BFA4 MOV X21, X5
	0x0381BFA8 MOV X19, X4
	0x0381BFAC MOV X22, X3
	0x0381BFB0 BL 0x37577E0
	0x0381BFB4 MOV X1, X0
	0x0381BFB8 MOV X0, X19
	0x0381BFBC MOV W2, W31
	0x0381BFC0 MOV X3, X31
	0x0381BFC4 BL 0x37723AC
	0x0381BFC8 CBZ X0, 0x381BFE0
	0x0381BFCC LDP X20, X19, [X31 + 0x30]
	0x0381BFD0 LDP X22, X21, [X31 + 0x20]
	0x0381BFD4 LDP X24, X23, [X31 + 0x10]
	0x0381BFD8 LDP X30, X25, [X31], #0x40
	0x0381BFDC RET
	0x0381BFE0 MOV X0, X25
	0x0381BFE4 MOV X1, X24
	0x0381BFE8 MOV X2, X23
	0x0381BFEC MOV X3, X22
	0x0381BFF0 MOV X4, X19
	0x0381BFF4 MOV X5, X21
	0x0381BFF8 MOV X6, X20
	0x0381BFFC BL 0x381C3A0
	0x0381C000 CBZ X0, 0x381C024
	0x0381C004 LDR X0, [X0 + 0x80]
	0x0381C008 CMP X0, X19
	0x0381C00C B.EQ 0x381BFCC
	0x0381C010 LDP X20, X19, [X31 + 0x30]
	0x0381C014 LDP X22, X21, [X31 + 0x20]
	0x0381C018 LDP X24, X23, [X31 + 0x10]
	0x0381C01C LDP X30, X25, [X31], #0x40
	0x0381C020 B 0x381ABB8
	0x0381C024 BL 0x1C16F20
	0x0381C028 STR X30, [X31 - 0x30]!
	0x0381C02C STP X22, X21, [X31 + 0x10]
	0x0381C030 STP X20, X19, [X31 + 0x20]
	0x0381C034 ADRP X22, 0xBC5000
	0x0381C038 LDRB W8, [X22 + 0x519]
	0x0381C03C MOV X20, X3
	0x0381C040 MOV X19, X1
	0x0381C044 MOV X21, X0
	0x0381C048 TBNZ X8, 0x0, 0x381C060
	0x0381C04C ADRP X0, 0x8D8000
	0x0381C050 LDR X0, [X0 + 0xEC8]
	0x0381C054 BL 0x1C16CF4
	0x0381C058 MOVZ W8, 0x1
	0x0381C05C STRB W8, [X22 + 0x519]
	0x0381C060 LDR X8, [X21]
	0x0381C064 CMP X19, X8
	0x0381C068 B.EQ 0x381C0A0
	0x0381C06C ADRP X22, 0x8D8000
	0x0381C070 LDR X22, [X22 + 0xEC8]
	0x0381C074 CBZ X19, 0x381C0B4
	0x0381C078 LDR X0, [X19 + 0x28]
	0x0381C07C LDR X1, [X22]
	0x0381C080 MOV X2, X20
	0x0381C084 MOV X3, X31
	0x0381C088 BL 0x32274B8
	0x0381C08C LDR X19, [X19 + 0x80]
	0x0381C090 LDR X8, [X21]
	0x0381C094 MOV X20, X0
	0x0381C098 CMP X19, X8
	0x0381C09C B.NE 0x381C074
	0x0381C0A0 MOV X0, X20
	0x0381C0A4 LDP X20, X19, [X31 + 0x20]
	0x0381C0A8 LDP X22, X21, [X31 + 0x10]
	0x0381C0AC LDR X30, [X31], #0x30
	0x0381C0B0 RET
	0x0381C0B4 BL 0x1C16F20
	0x0381C0B8 STR X30, [X31 - 0x30]!
	0x0381C0BC STP X22, X21, [X31 + 0x10]
	0x0381C0C0 STP X20, X19, [X31 + 0x20]
	0x0381C0C4 ADRP X21, 0xBC5000
	0x0381C0C8 LDRB W8, [X21 + 0x51E]
	0x0381C0CC MOV X20, X1
	0x0381C0D0 MOV X19, X0
	0x0381C0D4 TBNZ X8, 0x0, 0x381C0EC
	0x0381C0D8 ADRP X0, 0x8FF000
	0x0381C0DC LDR X0, [X0 + 0xD18]
	0x0381C0E0 BL 0x1C16CF4
	0x0381C0E4 MOVZ W8, 0x1
	0x0381C0E8 STRB W8, [X21 + 0x51E]
	0x0381C0EC CBZ X19, 0x381C168
	0x0381C0F0 ADRP X21, 0x8FF000
	0x0381C0F4 LDR X21, [X21 + 0xD18]
	0x0381C0F8 LDR W22, [X20 + 0x94]
	0x0381C0FC LDR X0, [X21]
	0x0381C100 LDR W8, [X0 + 0xE0]
	0x0381C104 CBNZ W8, 0x381C10C
	0x0381C108 BL 0x1C16DFC
	0x0381C10C STR W22, [X19 + 0x10]
	0x0381C110 LDR W8, [X20 + 0x90]
	0x0381C114 CBNZ W8, 0x381C158
	0x0381C118 LDR X0, [X21]
	0x0381C11C LDR W20, [X20 + 0x94]
	0x0381C120 LDR W8, [X0 + 0xE0]
	0x0381C124 CBNZ W8, 0x381C12C
	0x0381C128 BL 0x1C16DFC
	0x0381C12C MOV X0, X20
	0x0381C130 MOV X1, X31
	0x0381C134 BL 0x3809514
	0x0381C138 ADDS W31, W0, 0x1
	0x0381C13C B.EQ 0x381C158
	0x0381C140 MOV W20, W0
	0x0381C144 LDR X0, [X21]
	0x0381C148 LDR W8, [X0 + 0xE0]
	0x0381C14C CBNZ W8, 0x381C154
	0x0381C150 BL 0x1C16DFC
	0x0381C154 STR W20, [X19 + 0x1C]
	0x0381C158 LDP X20, X19, [X31 + 0x20]
	0x0381C15C LDP X22, X21, [X31 + 0x10]
	0x0381C160 LDR X30, [X31], #0x30
	0x0381C164 RET
	0x0381C168 BL 0x1C16F20
	0x0381C16C SUB X31, X31, 0x90
	0x0381C170 STP X29, X30, [X31 + 0x30]
	0x0381C174 STP X28, X27, [X31 + 0x40]
	0x0381C178 STP X26, X25, [X31 + 0x50]
	0x0381C17C STP X24, X23, [X31 + 0x60]
	0x0381C180 STP X22, X21, [X31 + 0x70]
	0x0381C184 STP X20, X19, [X31 + 0x80]
	0x0381C188 ADRP X22, 0xBC5000
	0x0381C18C LDRB W8, [X22 + 0x51D]
	0x0381C190 MOV X19, X2
	0x0381C194 MOV X20, X1
	0x0381C198 MOV X21, X0
	0x0381C19C TBNZ X8, 0x0, 0x381C1F0
	0x0381C1A0 ADRP X0, 0x8FF000
	0x0381C1A4 LDR X0, [X0 + 0xC40]
	0x0381C1A8 BL 0x1C16CF4
	0x0381C1AC ADRP X0, 0x92E000
	0x0381C1B0 LDR X0, [X0 + 0xBE0]
	0x0381C1B4 BL 0x1C16CF4
	0x0381C1B8 ADRP X0, 0x92A000
	0x0381C1BC LDR X0, [X0 + 0x388]
	0x0381C1C0 BL 0x1C16CF4
	0x0381C1C4 ADRP X0, 0x92E000
	0x0381C1C8 LDR X0, [X0 + 0x960]
	0x0381C1CC BL 0x1C16CF4
	0x0381C1D0 ADRP X0, 0x92E000
	0x0381C1D4 LDR X0, [X0 + 0xC00]
	0x0381C1D8 BL 0x1C16CF4
	0x0381C1DC ADRP X0, 0x8D7000
	0x0381C1E0 LDR X0, [X0 + 0x6C0]
	0x0381C1E4 BL 0x1C16CF4
	0x0381C1E8 MOVZ W8, 0x1
	0x0381C1EC STRB W8, [X22 + 0x51D]
	0x0381C1F0 LDR X8, [X20 + 0x80]
	0x0381C1F4 UBFM X9, X8, 0x20, 0x3F
	0x0381C1F8 SUBS W25, W9, 0x1
	0x0381C1FC B.LT 0x381C300
	0x0381C200 ADRP X26, 0x92E000
	0x0381C204 ADRP X27, 0x8FF000
	0x0381C208 ADRP X28, 0x8D7000
	0x0381C20C ADRP X29, 0x92E000
	0x0381C210 LDR X26, [X26 + 0xC00]
	0x0381C214 LDR X27, [X27 + 0xC40]
	0x0381C218 LDR X28, [X28 + 0x6C0]
	0x0381C21C LDR X29, [X29 + 0xBE0]
	0x0381C220 MOV W22, W31
	0x0381C224 LDR X9, [X20 + 0x78]
	0x0381C228 LDR X2, [X26]
	0x0381C22C ADD X0, X31, 0x20
	0x0381C230 MOV W1, W22
	0x0381C234 STP X9, X8, [X31 + 0x20]
	0x0381C238 ADD X8, X31, 0x8
	0x0381C23C BL 0x24FD334
	0x0381C240 LDR X8, [X27]
	0x0381C244 LDR X23, [X31 + 0x8]
	0x0381C248 MOV X2, X31
	0x0381C24C LDR X0, [X8 + 0xB8]
	0x0381C250 MOV X1, X23
	0x0381C254 BL 0x3769CEC
	0x0381C258 LDR X8, [X28]
	0x0381C25C MOV X24, X0
	0x0381C260 LDR W9, [X8 + 0xE0]
	0x0381C264 CBNZ W9, 0x381C270
	0x0381C268 MOV X0, X8
	0x0381C26C BL 0x1C16DFC
	0x0381C270 MOV X0, X24
	0x0381C274 MOV X1, X31
	0x0381C278 MOV X2, X31
	0x0381C27C BL 0x3395194
	0x0381C280 TBNZ X0, 0x0, 0x381C320
	0x0381C284 MOV X0, X24
	0x0381C288 MOV X1, X31
	0x0381C28C BL 0x33A703C
	0x0381C290 LDUR V0, [X20 + 0x78]
	0x0381C294 LDR X2, [X26]
	0x0381C298 MOV X23, X0
	0x0381C29C ADD X8, X31, 0x8
	0x0381C2A0 ADD X0, X31, 0x20
	0x0381C2A4 MOV W1, W22
	0x0381C2A8 STR V0, [X31 + 0x2]
	0x0381C2AC BL 0x24FD334
	0x0381C2B0 LDR X2, [X31 + 0x18]
	0x0381C2B4 UBFM X8, X2, 0x20, 0x3F
	0x0381C2B8 CMP W8, 0x1
	0x0381C2BC B.LT 0x381C2D0
	0x0381C2C0 LDR X1, [X31 + 0x10]
	0x0381C2C4 LDR X3, [X29]
	0x0381C2C8 MOV X0, X23
	0x0381C2CC BL 0x22211EC
	0x0381C2D0 CBZ X21, 0x381C39C
	0x0381C2D4 LDR X8, [X21]
	0x0381C2D8 MOV X0, X21
	0x0381C2DC MOV X1, X23
	0x0381C2E0 LDR X9, [X8 + 0x238]
	0x0381C2E4 LDR X2, [X8 + 0x240]
	0x0381C2E8 BLR X9
	0x0381C2EC CMP W25, W22
	0x0381C2F0 B.EQ 0x381C300
	0x0381C2F4 LDR X8, [X20 + 0x80]
	0x0381C2F8 ADD W22, W22, 0x1
	0x0381C2FC B 0x381C224
	0x0381C300 LDP X20, X19, [X31 + 0x80]
	0x0381C304 LDP X22, X21, [X31 + 0x70]
	0x0381C308 LDP X24, X23, [X31 + 0x60]
	0x0381C30C LDP X26, X25, [X31 + 0x50]
	0x0381C310 LDP X28, X27, [X31 + 0x40]
	0x0381C314 LDP X29, X30, [X31 + 0x30]
	0x0381C318 ADD X31, X31, 0x90
	0x0381C31C RET
	0x0381C320 LDP X8, X9, [X20]
	0x0381C324 ADRP X0, 0x902000
	0x0381C328 STP X8, X9, [X31 + 0x8]
	0x0381C32C LDR X0, [X0 + 0x510]
	0x0381C330 BL 0x1C16D08
	0x0381C334 ADD X1, X31, 0x8
	0x0381C338 BL 0x1C16E04
	0x0381C33C MOV X20, X0
	0x0381C340 ADRP X0, 0x92E000
	0x0381C344 LDR X0, [X0 + 0xC08]
	0x0381C348 BL 0x1C16D08
	0x0381C34C MOV X1, X23
	0x0381C350 MOV X2, X20
	0x0381C354 MOV X3, X19
	0x0381C358 MOV X4, X31
	0x0381C35C BL 0x3227C18
	0x0381C360 MOV X19, X0
	0x0381C364 ADRP X0, 0x8D7000
	0x0381C368 LDR X0, [X0 + 0x5B0]
	0x0381C36C BL 0x1C16D08
	0x0381C370 BL 0x1C16F10
	0x0381C374 MOV X1, X19
	0x0381C378 MOV X2, X31
	0x0381C37C MOV X20, X0
	0x0381C380 BL 0x337DF1C
	0x0381C384 ADRP X0, 0x92E000
	0x0381C388 LDR X0, [X0 + 0xC10]
	0x0381C38C BL 0x1C16D08
	0x0381C390 MOV X1, X0
	0x0381C394 MOV X0, X20
	0x0381C398 BL 0x1C16DEC
	0x0381C39C BL 0x1C16F20
	0x0381C3A0 SUB X31, X31, 0x170
	0x0381C3A4 STP X29, X30, [X31 + 0x110]
	0x0381C3A8 STP X28, X27, [X31 + 0x120]
	0x0381C3AC STP X26, X25, [X31 + 0x130]
	0x0381C3B0 STP X24, X23, [X31 + 0x140]
	0x0381C3B4 STP X22, X21, [X31 + 0x150]
	0x0381C3B8 STP X20, X19, [X31 + 0x160]
	0x0381C3BC ADRP X26, 0xBC5000
	0x0381C3C0 LDRB W8, [X26 + 0x51A]
	0x0381C3C4 MOV X23, X6
	0x0381C3C8 MOV X20, X5
	0x0381C3CC MOV X25, X4
	0x0381C3D0 MOV X21, X3
	0x0381C3D4 MOV X22, X2
	0x0381C3D8 MOV X19, X1
	0x0381C3DC MOV X24, X0
	0x0381C3E0 TBNZ X8, 0x0, 0x381C404
	0x0381C3E4 ADRP X0, 0x92E000
	0x0381C3E8 LDR X0, [X0 + 0xC18]
	0x0381C3EC BL 0x1C16CF4
	0x0381C3F0 ADRP X0, 0x8FF000
	0x0381C3F4 LDR X0, [X0 + 0xDA0]
	0x0381C3F8 BL 0x1C16CF4
	0x0381C3FC MOVZ W8, 0x1
	0x0381C400 STRB W8, [X26 + 0x51A]
	0x0381C404 LDR V0, [X23]
	0x0381C408 ADD X0, X31, 0x100
	0x0381C40C MOV X1, X31
	0x0381C410 STR V0, [X31 + 0x10]
	0x0381C414 BL 0x37565F4
	0x0381C418 CBZ X0, 0x381C564
	0x0381C41C MOVZ W1, 0x2F
	0x0381C420 MOV X2, X31
	0x0381C424 MOV X26, X0
	0x0381C428 BL 0x322C668
	0x0381C42C ADDS W31, W0, 0x1
	0x0381C430 CSEL X28, X31, X26, EQ
	0x0381C434 B.EQ 0x381C568
	0x0381C438 MOV W27, W0
	0x0381C43C MOV X0, X28
	0x0381C440 MOV W1, W31
	0x0381C444 MOV W2, W27
	0x0381C448 MOV X3, X31
	0x0381C44C BL 0x3228DE4
	0x0381C450 MOV X26, X0
	0x0381C454 MOV X0, X25
	0x0381C458 MOV X1, X26
	0x0381C45C MOV W2, W31
	0x0381C460 MOV X3, X31
	0x0381C464 BL 0x37723AC
	0x0381C468 CMP X0, 0x0
	0x0381C46C MOV X25, X0
	0x0381C470 CSEL X0, X31, X28, EQ
	0x0381C474 CBZ X25, 0x381C5B0
	0x0381C478 CBZ X0, 0x381C564
	0x0381C47C ADD W1, W27, 0x1
	0x0381C480 MOV X2, X31
	0x0381C484 BL 0x322B484
	0x0381C488 CBZ X0, 0x381C564
	0x0381C48C LDR W8, [X0 + 0x10]
	0x0381C490 MOV X26, X0
	0x0381C494 CBZ W8, 0x381C61C
	0x0381C498 LDR W0, [X25 + 0x9C]
	0x0381C49C CBNZ W0, 0x381C4C0
	0x0381C4A0 LDR X8, [X24]
	0x0381C4A4 CBZ X8, 0x381C564
	0x0381C4A8 LDR X0, [X8 + 0x150]
	0x0381C4AC ADRP X8, 0x8FF000
	0x0381C4B0 LDR X8, [X8 + 0xDA0]
	0x0381C4B4 LDR X1, [X8]
	0x0381C4B8 BL 0x217B258
	0x0381C4BC STR W0, [X25 + 0x9C]
	0x0381C4C0 LDR W9, [X25 + 0x98]

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+80], X29
	003 Move [X31+88], X30
	004 Move [X31+96], X28
	005 Move [X31+104], X27
	006 Move [X31+112], X26
	007 Move [X31+120], X25
	008 Move [X31+128], X24
	009 Move [X31+136], X23
	010 Move [X31+144], X22
	011 Move [X31+152], X21
	012 Move [X31+160], X20
	013 Move [X31+168], X19
	014 Move X20, 0xBC7000
	015 Move W8, [X20+1312]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {41}
	021 Move X0, 0x905000
	022 Move X0, [X0+72]
	023 Call 0x1C17CF4
	024 Move X0, 0x905000
	025 Move X0, [X0+80]
	026 Call 0x1C17CF4
	027 Move X0, 0x905000
	028 Move X0, [X0+88]
	029 Call 0x1C17CF4
	030 Move X0, 0x901000
	031 Move X0, [X0+3352]
	032 Call 0x1C17CF4
	033 Move X0, 0x905000
	034 Move X0, [X0+96]
	035 Call 0x1C17CF4
	036 Move X0, 0x901000
	037 Move X0, [X0+3392]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X20+1312], W8
	041 Move [X31+32], X31
	042 Move [X31+40], X31
	043 Move [X31+48], X31
	044 Compare X19, 0
	045 JumpIfEqual {407}
	046 Move X24, 0x901000
	047 Move X24, [X24+3352]
	048 Move X0, X19
	049 Move X1, X31
	050 Call InputControl.get_children, X0
	051 Move X8, X0
	052 Move X0, [X24]
	053 Move [X31+64], X8
	054 Move [X31+72], X1
	055 Move X20, X1
	056 Move W8, [X0+224]
	057 Compare W8, 0
	058 JumpIfNotEqual {60}
	059 Call 0x1C17DFC
	060 Move W8, [X19+28]
	061 Compare W8, 0
	062 JumpIfEqual {76}
	063 Move X0, [X24]
	064 Move W8, [X0+224]
	065 Compare W8, 0
	066 JumpIfNotEqual {68}
	067 Call 0x1C17DFC
	068 Move W8, [X19+28]
	069 Compare W8, 0
	070 JumpIfEqual {101}
	071 Move X8, X20
	072 ShiftRight X8, 32
	073 And X8, X8, 0x7FFFFFFF
	074 Compare X8, 0
	075 JumpIfNotEqual {106}
	076 Move X0, [X24]
	077 Move W8, [X0+224]
	078 Compare W8, 0
	079 JumpIfNotEqual {81}
	080 Call 0x1C17DFC
	081 Move W8, [X19+16]
	082 Compare W8, 0
	083 JumpIfEqual {63}
	084 Move X0, [X24]
	085 Move W9, [X0+224]
	086 Compare W9, 0
	087 JumpIfNotEqual {90}
	088 Call 0x1C17DFC
	089 Move W8, [X19+16]
	090 Move W0, W8
	091 Move X1, X31
	092 Call InputStateBlock.GetSizeOfPrimitiveFormatInBits, X0
	093 Add W31, W0, 1
	094 Move W21, W0
	095 Move X0, [X24]
	096 Move W8, [X0+224]
	097 Compare W8, 0
	098 JumpIfNotEqual {100}
	099 Call 0x1C17DFC
	100 Move [X19+28], W21
	101 Move X8, X20
	102 ShiftRight X8, 32
	103 And X8, X8, 0x7FFFFFFF
	104 Compare X8, 0
	105 JumpIfEqual {451}
	106 Move X23, 0x905000
	107 Move X23, [X23+96]
	108 Move X26, 0x905000
	109 Move X27, 0x905000
	110 Move X25, 0x905000
	111 Move X1, [X23]
	112 Move X26, [X26+80]
	113 Move X27, [X27+88]
	114 Move X25, [X25+72]
	115 Add X8, X31, 8
	116 Add X0, X31, 64
	117 Call ReadOnlyArray`1<Object>.GetEnumerator, X0
	118 NotImplemented "Instruction LDUR not yet implemented."
	119 Move X8, [X31+24]
	120 Move W20, W31
	121 Move [X31+2], V0
	122 Move [X31+48], X8
	123 Move X1, [X26]
	124 Add X0, X31, 32
	125 Call Enumerator<Object>.MoveNext, X0
	126 Move TEMP, X0
	127 And TEMP, TEMP, 1
	128 Compare TEMP, 1
	129 JumpIfNotEqual {191}
	130 Move X1, [X27]
	131 Add X0, X31, 32
	132 Call Enumerator<Object>.get_Current, X0
	133 Move X21, X0
	134 Compare X0, 0
	135 JumpIfEqual {399}
	136 Move X0, [X24]
	137 Move W8, [X0+224]
	138 Compare W8, 0
	139 JumpIfNotEqual {141}
	140 Call 0x1C17DFC
	141 Move W22, [X21+28]
	142 Add W31, W22, 1
	143 Move X0, [X24]
	144 Move W8, [X0+224]
	145 Compare W8, 0
	146 JumpIfNotEqual {149}
	147 Call 0x1C17DFC
	148 Move W22, [X21+28]
	149 Add W8, W22, 1
	150 NotImplemented "Instruction CMP not yet implemented."
	151 Move X0, [X24]
	152 Move W8, [X0+224]
	153 Compare W8, 0
	154 JumpIfNotEqual {156}
	155 Call 0x1C17DFC
	156 Move W8, [X21+20]
	157 Add W31, W8, 1
	158 Move X0, [X24]
	159 Move W9, [X0+224]
	160 Compare W9, 0
	161 JumpIfNotEqual {164}
	162 Call 0x1C17DFC
	163 Move W8, [X21+20]
	164 Add W31, W8, 2
	165 Move X0, [X24]
	166 Move W8, [X0+224]
	167 Compare W8, 0
	168 JumpIfNotEqual {170}
	169 Call 0x1C17DFC
	170 Move W8, [X21+24]
	171 Add W31, W8, 1
	172 Move X0, [X24]
	173 Move W8, [X0+224]
	174 Compare W8, 0
	175 JumpIfNotEqual {177}
	176 Call 0x1C17DFC
	177 Move W8, W31
	178 Move [X21+24], W31
	179 Move X0, [X24]
	180 Move W9, [X0+224]
	181 Compare W9, 0
	182 JumpIfNotEqual {185}
	183 Call 0x1C17DFC
	184 Move W8, [X21+24]
	185 Move W0, [X21+20]
	186 Add W1, W8, W22
	187 Move X2, X31
	188 Call MemoryHelpers.ComputeFollowingByteOffset, X0, X1
	189 NotImplemented "Instruction CMP not yet implemented."
	190 NotImplemented "Instruction CSEL not yet implemented."
	191 Move X1, [X25]
	192 Add X0, X31, 32
	193 Call Enumerator<Object>.Dispose, X0
	194 Move X1, [X23]
	195 Add X8, X31, 8
	196 Add X0, X31, 64
	197 Call ReadOnlyArray`1<Object>.GetEnumerator, X0
	198 NotImplemented "Instruction LDUR not yet implemented."
	199 Move X8, [X31+24]
	200 Move [X31+4], W31
	201 Move W29, W31
	202 Move W21, W31
	203 Move X28, X31
	204 Move [X31+2], V0
	205 Move [X31+48], X8
	206 Move X1, [X26]
	207 Add X0, X31, 32
	208 Call Enumerator<Object>.MoveNext, X0
	209 Move TEMP, X0
	210 And TEMP, TEMP, 1
	211 Compare TEMP, 1
	212 JumpIfNotEqual {353}
	213 Move X1, [X27]
	214 Add X0, X31, 32
	215 Call Enumerator<Object>.get_Current, X0
	216 Move X23, X0
	217 Compare X0, 0
	218 JumpIfEqual {397}
	219 Move X0, [X24]
	220 Move W8, [X0+224]
	221 Compare W8, 0
	222 JumpIfNotEqual {224}
	223 Call 0x1C17DFC
	224 Add X22, X23, 16
	225 Move W8, [X22+4]
	226 Add W31, W8, 1
	227 Move X0, [X24]
	228 Move W9, [X0+224]
	229 Compare W9, 0
	230 JumpIfNotEqual {233}
	231 Call 0x1C17DFC
	232 Move W8, [X22+4]
	233 Add W31, W8, 2
	234 Move X0, [X24]
	235 Move W8, [X0+224]
	236 Compare W8, 0
	237 JumpIfNotEqual {239}
	238 Call 0x1C17DFC
	239 Move W8, [X22+12]
	240 Add W31, W8, 1
	241 Move X0, [X24]
	242 Move [X31], W21
	243 Move W9, [X0+224]
	244 Compare W9, 0
	245 JumpIfNotEqual {248}
	246 Call 0x1C17DFC
	247 Move W8, [X22+12]
	248 And W8, W8, 7
	249 NotImplemented "Instruction CSET not yet implemented."
	250 NotImplemented "Instruction CSEL not yet implemented."
	251 Compare W8, 0
	252 JumpIfEqual {287}
	253 Move X0, [X24]
	254 NotImplemented "Instruction CMP not yet implemented."
	255 NotImplemented "Instruction CSEL not yet implemented."
	256 Move W8, [X0+224]
	257 Compare W8, 0
	258 JumpIfNotEqual {260}
	259 Call 0x1C17DFC
	260 Move W8, [X23+24]
	261 Move W9, [X31+4]
	262 Add W31, W8, 1
	263 NotImplemented "Instruction CSEL not yet implemented."
	264 Move [X31+4], W9
	265 Move X0, [X24]
	266 Move W9, [X0+224]
	267 Compare W9, 0
	268 JumpIfNotEqual {271}
	269 Call 0x1C17DFC
	270 Move W8, [X23+24]
	271 Add W31, W8, 2
	272 Move W25, W29
	273 Move X0, [X24]
	274 Move W9, [X0+224]
	275 Compare W9, 0
	276 JumpIfNotEqual {279}
	277 Call 0x1C17DFC
	278 Move W8, [X23+24]
	279 Move W9, [X22+12]
	280 Add W8, W9, W8
	281 Move W9, [X31]
	282 Move W25, [X31+4]
	283 Move [X31+4], W21
	284 NotImplemented "Instruction CMP not yet implemented."
	285 NotImplemented "Instruction CSEL not yet implemented."
	286 Move W21, W9
	287 Compare X28, 0
	288 JumpIfEqual {294}
	289 Move W1, [X31]
	290 Move W0, W20
	291 Move X2, X31
	292 Call MemoryHelpers.ComputeFollowingByteOffset, X0, X1
	293 Move W20, W0
	294 Move X0, [X24]
	295 Move W8, [X0+224]
	296 Compare W8, 0
	297 JumpIfNotEqual {299}
	298 Call 0x1C17DFC
	299 Move W8, [X23+24]
	300 Add W31, W8, 1
	301 Move X0, [X24]
	302 Move W8, [X0+224]
	303 Compare W8, 0
	304 JumpIfNotEqual {306}
	305 Call 0x1C17DFC
	306 Move [X23+24], W31
	307 Move X0, [X24]
	308 Move W8, [X0+224]
	309 Compare W8, 0
	310 JumpIfNotEqual {312}
	311 Call 0x1C17DFC
	312 Move X0, X22
	313 Move X1, X31
	314 Call InputStateBlock.get_alignedSizeInBytes, X0
	315 Move W1, W0
	316 Move W0, W20
	317 Move X2, X31
	318 Call MemoryHelpers.AlignNatural, X0, X1
	319 Move W25, W21
	320 Move W21, [X31]
	321 Move W23, W0
	322 Move X28, X31
	323 Move W25, W21
	324 Move X0, [X24]
	325 Move W8, [X0+224]
	326 Compare W8, 0
	327 JumpIfNotEqual {329}
	328 Call 0x1C17DFC
	329 Move W8, [X23+28]
	330 Move W21, [X31]
	331 Move [X23+24], W21
	332 Add W21, W8, W21
	333 Move W23, W20
	334 Move X0, [X24]
	335 Move W8, [X0+224]
	336 Compare W8, 0
	337 JumpIfNotEqual {339}
	338 Call 0x1C17DFC
	339 Move W20, W23
	340 Move [X22+4], W23
	341 Compare W25, 0
	342 JumpIfNotEqual {206}
	343 Move X0, [X24]
	344 Move W8, [X0+224]
	345 Compare W8, 0
	346 JumpIfNotEqual {348}
	347 Call 0x1C17DFC
	348 Move W1, [X22+12]
	349 Move W0, W23
	350 Move X2, X31
	351 Call MemoryHelpers.ComputeFollowingByteOffset, X0, X1
	352 Move W20, W0
	353 Move X8, 0x904000
	354 Move X8, [X8+72]
	355 Add X0, X31, 32
	356 Move X1, [X8]
	357 Call Enumerator<Object>.Dispose, X0
	358 Compare X28, 0
	359 JumpIfEqual {365}
	360 Move W0, W20
	361 Move W1, W21
	362 Move X2, X31
	363 Call MemoryHelpers.ComputeFollowingByteOffset, X0, X1
	364 Move W20, W0
	365 Move X0, [X24]
	366 Move W8, [X0+224]
	367 Compare W8, 0
	368 JumpIfNotEqual {370}
	369 Call 0x1C17DFC
	370 Move W8, W20
	371 ShiftRight W8, 29
	372 And W8, W8, 0xFFFFFFF
	373 Move [X19+28], W8
	374 Move X20, [X31+160]
	375 Move X19, [X31+168]
	376 Move X22, [X31+144]
	377 Move X21, [X31+152]
	378 Move X24, [X31+128]
	379 Move X23, [X31+136]
	380 Move X26, [X31+112]
	381 Move X25, [X31+120]
	382 Move X28, [X31+96]
	383 Move X27, [X31+104]
	384 Move X29, [X31+80]
	385 Move X30, [X31+88]
	386 Add X31, X31, 176
	387 Return 
	388 Move X0, 0x8D8000
	389 Move X0, [X0+2760]
	390 Call 0x1C17D08
	391 Move W1, 5
	392 Call 0x1C17D6C
	393 Move X22, X0
	394 Compare X0, 0
	395 JumpIfNotEqual {400}
	396 Call 0x1C17F20
	397 Move [X31], W21
	398 Call 0x1C17F20
	399 Call 0x1C17F20
	400 Move X0, 0x92F000
	401 Move X0, [X0+2968]
	402 Call 0x1C17D08
	403 Move W8, [X22+24]
	404 Compare W8, 0
	405 JumpIfNotEqual {408}
	406 Call 0x1C17F28
	407 Call 0x1C17F20
	408 Move [X22+32], X0
	409 Move X0, X21
	410 Move X1, X31
	411 Call InputControl.get_name, X0
	412 Move W8, [X22+24]
	413 NotImplemented "Instruction CMP not yet implemented."
	414 Move [X22+40], X0
	415 Move X0, 0x92F000
	416 Move X0, [X0+2976]
	417 Call 0x1C17D08
	418 Move W8, [X22+24]
	419 NotImplemented "Instruction CMP not yet implemented."
	420 Move [X22+48], X0
	421 Move X0, X19
	422 Move X1, X31
	423 Call InputControl.get_name, X0
	424 Move W8, [X22+24]
	425 NotImplemented "Instruction CMP not yet implemented."
	426 Move [X22+56], X0
	427 Move X0, 0x92F000
	428 Move X0, [X0+2984]
	429 Call 0x1C17D08
	430 Move W8, [X22+24]
	431 NotImplemented "Instruction CMP not yet implemented."
	432 Move [X22+64], X0
	433 Move X0, X22
	434 Move X1, X31
	435 Call String.Concat, X0
	436 Move X21, X0
	437 Move X0, 0x8D8000
	438 Move X0, [X0+1456]
	439 Call 0x1C17D08
	440 Call 0x1C17F10
	441 Move X22, X0
	442 Move X1, X21
	443 Move X2, X31
	444 Call InvalidOperationException..ctor, X0, X1
	445 Move X0, 0x92F000
	446 Move X0, [X0+2992]
	447 Call 0x1C17D08
	448 Move X1, X0
	449 Move X0, X22
	450 Call 0x1C17DEC
	451 Move X0, 0x8D8000
	452 Move X0, [X0+2760]
	453 Call 0x1C17D08
	454 Move W1, 5
	455 Call 0x1C17D6C
	456 Move X20, X0
	457 Call 0x19913C0
	458 Move X0, 0x92B000
	459 Move X0, [X0+2992]
	460 Call 0x1C17D08
	461 Move X2, X0
	462 Move X0, X20
	463 Move X1, X31
	464 Call 0x1994444
	465 Move X0, X19
	466 Call 0x19913C0
	467 Move X0, X19
	468 Move X1, X31
	469 Call InputControl.get_path, X0
	470 Move X21, X0
	471 Move X0, X20
	472 Call 0x19913C0
	473 Move W1, 1
	474 Move X0, X20
	475 Move X2, X21
	476 Call 0x1994444
	477 Move X0, X20
	478 Call 0x19913C0
	479 Move X0, 0x92F000
	480 Move X0, [X0+3000]
	481 Call 0x1C17D08
	482 Move X2, X0
	483 Move W1, 2
	484 Move X0, X20
	485 Call 0x1994444
	486 Move X0, X19
	487 Call 0x19913C0
	488 Move X0, X19
	489 Move X1, X31
	490 Call InputControl.get_layout, X0
	491 Move X19, X0
	492 Move X0, X20
	493 Call 0x19913C0
	494 Move W1, 3
	495 Move X0, X20
	496 Move X2, X19
	497 Call 0x1994444
	498 Move X0, X20
	499 Call 0x19913C0
	500 Move X0, 0x92F000
	501 Move X0, [X0+3008]
	502 Call 0x1C17D08
	503 Move X2, X0
	504 Move W1, 4
	505 Move X0, X20
	506 Call 0x1994444
	507 Move X0, X20
	508 Move X1, X31
	509 Call String.Concat, X0
	510 Move X19, X0
	511 Move X0, 0x8D8000
	512 Move X0, [X0+1456]
	513 Call 0x1C17D08
	514 Call 0x1C17F10
	515 Move X1, X19
	516 Move X2, X31
	517 Move X20, X0
	518 Call InvalidOperationException..ctor, X0, X1
	519 Move X0, 0x92F000
	520 Move X0, [X0+2992]
	521 Call 0x1C17D08
	522 Move X1, X0
	523 Move X0, X20
	524 Call 0x1C17DEC
	525 Call 0x1C17F28
	526 Call 0x1C17F28
	527 Call 0x1C17F28
	528 Call 0x1C17F28
	529 Move [X31], W21
	530 Move X22, X0
	531 Move W20, W23
	532 Move X22, X0
	533 Move X28, X31
	534 Move X22, X0
	535 NotImplemented "Instruction CMP not yet implemented."
	536 Move X0, X22
	537 Call 0x3EB2AD0
	538 Move X21, [X0]
	539 Call 0x3EB2AE0
	540 Move X8, 0x904000
	541 Move X8, [X8+72]
	542 Add X0, X31, 32
	543 Move X1, [X8]
	544 Call Enumerator<Object>.Dispose, X0
	545 Compare X21, 0
	546 JumpIfEqual {194}
	547 Move X0, X21
	548 Call 0x1C17F18
	549 Move X21, X31
	550 Move X22, X0
	551 Move X8, 0x904000
	552 Move X8, [X8+72]
	553 Move X1, [X8]
	554 Add X0, X31, 32
	555 Call Enumerator<Object>.Dispose, X0
	556 Compare X21, 0
	557 JumpIfEqual {586}
	558 Move X0, X21
	559 Call 0x1C17F18
	560 Move [X31], W21
	561 Move X22, X0
	562 NotImplemented "Instruction CMP not yet implemented."
	563 Move X0, X22
	564 Call 0x3EB2AD0
	565 Move X23, [X0]
	566 Call 0x3EB2AE0
	567 Move X8, 0x904000
	568 Move X8, [X8+72]
	569 Add X0, X31, 32
	570 Move X1, [X8]
	571 Call Enumerator<Object>.Dispose, X0
	572 Move W21, [X31]
	573 Compare X23, 0
	574 JumpIfEqual {358}
	575 Move X0, X23
	576 Call 0x1C17F18
	577 Move X23, X31
	578 Move X22, X0
	579 Move X8, 0x904000
	580 Move X8, [X8+72]
	581 Move X1, [X8]
	582 Add X0, X31, 32
	583 Call Enumerator<Object>.Dispose, X0
	584 Compare X23, 0
	585 JumpIfNotEqual {588}
	586 Move X0, X22
	587 Call 0x1D2D690
	588 Move X0, X23
	589 Call 0x1C17F18
	590 Call 0x1991590

Method: System.Void FinalizeControlHierarchy()

Disassembly:
	0x0381ABEC BL 0x1C16CF4
	0x0381ABF0 ADRP X0, 0x905000
	0x0381ABF4 LDR X0, [X0 + 0x50]
	0x0381ABF8 BL 0x1C16CF4
	0x0381ABFC ADRP X0, 0x905000
	0x0381AC00 LDR X0, [X0 + 0x58]
	0x0381AC04 BL 0x1C16CF4
	0x0381AC08 ADRP X0, 0x901000
	0x0381AC0C LDR X0, [X0 + 0xD18]
	0x0381AC10 BL 0x1C16CF4
	0x0381AC14 ADRP X0, 0x905000
	0x0381AC18 LDR X0, [X0 + 0x60]
	0x0381AC1C BL 0x1C16CF4
	0x0381AC20 ADRP X0, 0x901000
	0x0381AC24 LDR X0, [X0 + 0xD40]
	0x0381AC28 BL 0x1C16CF4
	0x0381AC2C MOVZ W8, 0x1
	0x0381AC30 STRB W8, [X20 + 0x520]
	0x0381AC34 STP X31, X31, [X31 + 0x20]
	0x0381AC38 STR X31, [X31 + 0x30]
	0x0381AC3C CBZ X19, 0x381B140
	0x0381AC40 ADRP X24, 0x901000
	0x0381AC44 LDR X24, [X24 + 0xD18]
	0x0381AC48 MOV X0, X19
	0x0381AC4C MOV X1, X31
	0x0381AC50 BL 0x37720C4
	0x0381AC54 MOV X8, X0
	0x0381AC58 LDR X0, [X24]
	0x0381AC5C STP X8, X1, [X31 + 0x40]
	0x0381AC60 MOV X20, X1
	0x0381AC64 LDR W8, [X0 + 0xE0]
	0x0381AC68 CBNZ W8, 0x381AC70
	0x0381AC6C BL 0x1C16DFC
	0x0381AC70 LDR W8, [X19 + 0x1C]
	0x0381AC74 CBZ W8, 0x381AC9C
	0x0381AC78 LDR X0, [X24]
	0x0381AC7C LDR W8, [X0 + 0xE0]
	0x0381AC80 CBNZ W8, 0x381AC88
	0x0381AC84 BL 0x1C16DFC
	0x0381AC88 LDR W8, [X19 + 0x1C]
	0x0381AC8C CBZ W8, 0x381ACF8
	0x0381AC90 UBFM X8, X20, 0x20, 0x3F
	0x0381AC94 CBNZ X8, 0x381AD00
	0x0381AC98 B 0x381B0DC
	0x0381AC9C LDR X0, [X24]
	0x0381ACA0 LDR W8, [X0 + 0xE0]
	0x0381ACA4 CBNZ W8, 0x381ACAC
	0x0381ACA8 BL 0x1C16DFC
	0x0381ACAC LDR W8, [X19 + 0x10]
	0x0381ACB0 CBZ W8, 0x381AC78
	0x0381ACB4 LDR X0, [X24]
	0x0381ACB8 LDR W9, [X0 + 0xE0]
	0x0381ACBC CBNZ W9, 0x381ACC8
	0x0381ACC0 BL 0x1C16DFC
	0x0381ACC4 LDR W8, [X19 + 0x10]
	0x0381ACC8 MOV W0, W8
	0x0381ACCC MOV X1, X31
	0x0381ACD0 BL 0x3809514
	0x0381ACD4 ADDS W31, W0, 0x1
	0x0381ACD8 B.EQ 0x381AC78
	0x0381ACDC MOV W21, W0
	0x0381ACE0 LDR X0, [X24]
	0x0381ACE4 LDR W8, [X0 + 0xE0]
	0x0381ACE8 CBNZ W8, 0x381ACF0
	0x0381ACEC BL 0x1C16DFC
	0x0381ACF0 STR W21, [X19 + 0x1C]
	0x0381ACF4 B 0x381AC78
	0x0381ACF8 UBFM X8, X20, 0x20, 0x3F
	0x0381ACFC CBZ X8, 0x381B200
	0x0381AD00 ADRP X23, 0x905000
	0x0381AD04 LDR X23, [X23 + 0x60]
	0x0381AD08 ADRP X26, 0x905000
	0x0381AD0C ADRP X27, 0x905000
	0x0381AD10 ADRP X25, 0x905000
	0x0381AD14 LDR X1, [X23]
	0x0381AD18 LDR X26, [X26 + 0x50]
	0x0381AD1C LDR X27, [X27 + 0x58]
	0x0381AD20 LDR X25, [X25 + 0x48]
	0x0381AD24 ADD X8, X31, 0x8
	0x0381AD28 ADD X0, X31, 0x40
	0x0381AD2C BL 0x24FD990
	0x0381AD30 LDUR V0, [X31 + 0x8]
	0x0381AD34 LDR X8, [X31 + 0x18]
	0x0381AD38 MOV W20, W31
	0x0381AD3C STR V0, [X31 + 0x2]
	0x0381AD40 STR X8, [X31 + 0x30]
	0x0381AD44 LDR X1, [X26]
	0x0381AD48 ADD X0, X31, 0x20
	0x0381AD4C BL 0x2BC496C
	0x0381AD50 TBZ X0, 0x0, 0x381AE40
	0x0381AD54 LDR X1, [X27]
	0x0381AD58 ADD X0, X31, 0x20
	0x0381AD5C BL 0x2BC4998
	0x0381AD60 MOV X21, X0
	0x0381AD64 CBZ X0, 0x381B124
	0x0381AD68 LDR X0, [X24]
	0x0381AD6C LDR W8, [X0 + 0xE0]
	0x0381AD70 CBNZ W8, 0x381AD78
	0x0381AD74 BL 0x1C16DFC
	0x0381AD78 LDR W22, [X21 + 0x1C]
	0x0381AD7C ADDS W31, W22, 0x1
	0x0381AD80 B.EQ 0x381AD44
	0x0381AD84 LDR X0, [X24]
	0x0381AD88 LDR W8, [X0 + 0xE0]
	0x0381AD8C CBNZ W8, 0x381AD98
	0x0381AD90 BL 0x1C16DFC
	0x0381AD94 LDR W22, [X21 + 0x1C]
	0x0381AD98 ADD W8, W22, 0x1
	0x0381AD9C CMP W8, 0x2
	0x0381ADA0 B.CC 0x381B0FC
	0x0381ADA4 LDR X0, [X24]
	0x0381ADA8 LDR W8, [X0 + 0xE0]
	0x0381ADAC CBNZ W8, 0x381ADB4
	0x0381ADB0 BL 0x1C16DFC
	0x0381ADB4 LDR W8, [X21 + 0x14]
	0x0381ADB8 ADDS W31, W8, 0x1
	0x0381ADBC B.EQ 0x381AD44
	0x0381ADC0 LDR X0, [X24]
	0x0381ADC4 LDR W9, [X0 + 0xE0]
	0x0381ADC8 CBNZ W9, 0x381ADD4
	0x0381ADCC BL 0x1C16DFC
	0x0381ADD0 LDR W8, [X21 + 0x14]
	0x0381ADD4 ADDS W31, W8, 0x2
	0x0381ADD8 B.EQ 0x381AD44
	0x0381ADDC LDR X0, [X24]
	0x0381ADE0 LDR W8, [X0 + 0xE0]
	0x0381ADE4 CBNZ W8, 0x381ADEC
	0x0381ADE8 BL 0x1C16DFC
	0x0381ADEC LDR W8, [X21 + 0x18]
	0x0381ADF0 ADDS W31, W8, 0x1
	0x0381ADF4 B.NE 0x381AE10
	0x0381ADF8 LDR X0, [X24]
	0x0381ADFC LDR W8, [X0 + 0xE0]
	0x0381AE00 CBNZ W8, 0x381AE08
	0x0381AE04 BL 0x1C16DFC
	0x0381AE08 MOV W8, W31
	0x0381AE0C STR W31, [X21 + 0x18]
	0x0381AE10 LDR X0, [X24]
	0x0381AE14 LDR W9, [X0 + 0xE0]
	0x0381AE18 CBNZ W9, 0x381AE24
	0x0381AE1C BL 0x1C16DFC
	0x0381AE20 LDR W8, [X21 + 0x18]
	0x0381AE24 LDR W0, [X21 + 0x14]
	0x0381AE28 ADD W1, W8, W22
	0x0381AE2C MOV X2, X31
	0x0381AE30 BL 0x3762834
	0x0381AE34 CMP W0, W20
	0x0381AE38 CSEL W20, W0, W20, HI

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+40], X21
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move X20, 0xBC8000
	007 Move W8, [X20+1313]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {30}
	013 Move X0, 0x92D000
	014 Move X0, [X0+3448]
	015 Call 0x1C17CF4
	016 Move X0, 0x902000
	017 Move X0, [X0+3352]
	018 Call 0x1C17CF4
	019 Move X0, 0x8E0000
	020 Move X0, [X0+480]
	021 Call 0x1C17CF4
	022 Move X0, 0x8E0000
	023 Move X0, [X0+488]
	024 Call 0x1C17CF4
	025 Move X0, 0x902000
	026 Move X0, [X0+3392]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X20+1313], W8
	030 Move [X31+27], W31
	031 Move [X31+20], W31
	032 Move [X31+24], W31
	033 Move X8, [X19+24]
	034 Compare X8, 0
	035 JumpIfNotEqual {46}
	036 Move X8, 0x8E0000
	037 Move X8, [X8+488]
	038 Move X0, [X8]
	039 Call 0x1C17F10
	040 Move X8, 0x8E0000
	041 Move X8, [X8+480]
	042 Move X20, X0
	043 Move X1, [X8]
	044 Call List`1<UInt32>..ctor, X0
	045 Move [X19+24], X20
	046 Move X0, [X19]
	047 Compare X0, 0
	048 JumpIfEqual {121}
	049 Move X1, X31
	050 Call InputDevice.get_allControls, X0
	051 Move X8, X1
	052 ShiftRight X8, 32
	053 And X8, X8, 0x7FFFFFFF
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move X21, [X19]
	056 Compare X21, 0
	057 JumpIfEqual {121}
	058 Move X8, 0x902000
	059 Move X8, [X8+3352]
	060 Move X20, 0x92D000
	061 Move X0, [X8]
	062 Move W8, [X0+224]
	063 Move X20, [X20+3448]
	064 Compare W8, 0
	065 JumpIfNotEqual {67}
	066 Call 0x1C17DFC
	067 NotImplemented "Instruction LDRH not yet implemented."
	068 Add X0, X31, 24
	069 Move X2, X31
	070 Subtract W1, W8, 1
	071 Call ControlBitRangeNode..ctor, X0, X1
	072 Move X0, [X20]
	073 Move X21, [X19]
	074 Move W1, 1
	075 Call 0x1C17D6C
	076 Compare X21, 0
	077 JumpIfEqual {121}
	078 Move [X21+352], X0
	079 Move X8, [X19]
	080 Compare X8, 0
	081 JumpIfEqual {121}
	082 Move X8, [X8+352]
	083 Compare X8, 0
	084 JumpIfEqual {121}
	085 Move W9, [X8+24]
	086 Compare W9, 0
	087 JumpIfEqual {174}
	088 Move W9, [X31+30]
	089 NotImplemented "Instruction LDRH not yet implemented."
	090 Move W11, [X31+24]
	091 NotImplemented "Instruction BFM not yet implemented."
	092 NotImplemented "Instruction BFM not yet implemented."
	093 Move X9, X11
	094 ShiftRight X9, 48
	095 And X9, X9, 0x7FFFFFFF
	096 Move X10, X11
	097 ShiftRight X10, 32
	098 And X10, X10, 0x7FFFFFFF
	099 Move [X8+32], W11
	100 Move [X8+38], W9
	101 NotImplemented "Instruction STRH not yet implemented."
	102 Move [X31+20], W31
	103 Move X1, [X19]
	104 Compare X1, 0
	105 JumpIfEqual {121}
	106 Move X3, [X1+336]
	107 Add X6, X31, 20
	108 Move TEMP, 0
	109 Not TEMP
	110 Move W2, TEMP
	111 Move X0, X19
	112 Move W4, W31
	113 Move W5, W31
	114 Call InputDeviceBuilder.FinalizeControlHierarchyRecursive, X0, X1, X2, X3, X4, X5, X6
	115 Move X20, [X31+48]
	116 Move X19, [X31+56]
	117 Move X30, [X31+32]
	118 Move X21, [X31+40]
	119 Add X31, X31, 64
	120 Return 
	121 Call 0x1C17F20
	122 Move W8, 1024
	123 Move X20, [X19]
	124 Move [X31+16], W8
	125 Move X0, 0x8E2000
	126 Move X0, [X0+1824]
	127 Call 0x1C17D08
	128 Add X1, X31, 16
	129 Call 0x1C17E04
	130 Move X19, [X19]
	131 Move X21, X0
	132 Move X0, X19
	133 Call 0x19913C0
	134 Move X0, X19
	135 Move X1, X31
	136 Call InputDevice.get_allControls, X0
	137 Move X0, 0x902000
	138 Move X0, [X0+3392]
	139 Move X19, X1
	140 Call 0x1C17D08
	141 Move X8, X19
	142 ShiftRight X8, 32
	143 And X8, X8, 0x7FFFFFFF
	144 Move [X31+12], W8
	145 Move X0, 0x8DA000
	146 Move X0, [X0+1880]
	147 Call 0x1C17D08
	148 Add X1, X31, 12
	149 Call 0x1C17E04
	150 Move X19, X0
	151 Move X0, 0x931000
	152 Move X0, [X0+2872]
	153 Call 0x1C17D08
	154 Move X1, X20
	155 Move X2, X21
	156 Move X3, X19
	157 Move X4, X31
	158 Call String.Format, X0, X1, X2, X3
	159 Move X19, X0
	160 Move X0, 0x8DA000
	161 Move X0, [X0+2880]
	162 Call 0x1C17D08
	163 Call 0x1C17F10
	164 Move X1, X19
	165 Move X2, X31
	166 Move X20, X0
	167 Call NotSupportedException..ctor, X0, X1
	168 Move X0, 0x931000
	169 Move X0, [X0+2880]
	170 Call 0x1C17D08
	171 Move X1, X0
	172 Move X0, X20
	173 Call 0x1C17DEC
	174 Call 0x1C17F28

Method: System.Void FinalizeControlHierarchyRecursive(UnityEngine.InputSystem.InputControl control, System.Int32 controlIndex, UnityEngine.InputSystem.InputControl[] allControls, System.Boolean noisy, System.Boolean dontReset, ref System.Int32 controlIndiciesNextFreeIndex)

Disassembly:
	0x0381D9D4 LDR X30, [X31], #0x20
	0x0381D9D8 RET
	0x0381D9DC STR X30, [X31 - 0x20]!
	0x0381D9E0 STP X20, X19, [X31 + 0x10]
	0x0381D9E4 ADRP X19, 0xBC4000
	0x0381D9E8 ADRP X20, 0x92D000
	0x0381D9EC LDRB W8, [X19 + 0x528]
	0x0381D9F0 LDR X20, [X20 + 0xC78]
	0x0381D9F4 TBNZ X8, 0x0, 0x381DA0C
	0x0381D9F8 ADRP X0, 0x92D000
	0x0381D9FC LDR X0, [X0 + 0xC78]
	0x0381DA00 BL 0x1C16CF4
	0x0381DA04 MOVZ W8, 0x1
	0x0381DA08 STRB W8, [X19 + 0x528]
	0x0381DA0C LDR X8, [X20]
	0x0381DA10 LDP X20, X19, [X31 + 0x10]
	0x0381DA14 MOV X0, X31
	0x0381DA18 LDR X8, [X8 + 0xB8]
	0x0381DA1C LDR W9, [X8 + 0x28]
	0x0381DA20 ADD W9, W9, 0x1
	0x0381DA24 STR W9, [X8 + 0x28]
	0x0381DA28 LDR X30, [X31], #0x20
	0x0381DA2C RET
	0x0381DA30 STR X30, [X31 - 0x20]!
	0x0381DA34 STP X20, X19, [X31 + 0x10]
	0x0381DA38 ADRP X20, 0xBC4000
	0x0381DA3C ADRP X19, 0x92D000
	0x0381DA40 LDRB W8, [X20 + 0x529]
	0x0381DA44 LDR X19, [X19 + 0xC78]
	0x0381DA48 TBNZ X8, 0x0, 0x381DA60
	0x0381DA4C ADRP X0, 0x92D000
	0x0381DA50 LDR X0, [X0 + 0xC78]
	0x0381DA54 BL 0x1C16CF4
	0x0381DA58 MOVZ W8, 0x1
	0x0381DA5C STRB W8, [X20 + 0x529]
	0x0381DA60 LDR X8, [X19]
	0x0381DA64 LDR X0, [X8 + 0xB8]
	0x0381DA68 LDR W8, [X0 + 0x28]
	0x0381DA6C SUB W8, W8, 0x1
	0x0381DA70 CMP W8, 0x0
	0x0381DA74 STR W8, [X0 + 0x28]
	0x0381DA78 B.LE 0x381DA88
	0x0381DA7C LDP X20, X19, [X31 + 0x10]
	0x0381DA80 LDR X30, [X31], #0x20
	0x0381DA84 B 0x3819E54
	0x0381DA88 ADD X0, X0, 0x8
	0x0381DA8C BL 0x38196B4
	0x0381DA90 LDR X8, [X19]
	0x0381DA94 MOVI V0.2D, 0x0
	0x0381DA98 LDR X8, [X8 + 0xB8]
	0x0381DA9C STR X31, [X8 + 0x20]
	0x0381DAA0 STP V0, V0, [X8]
	0x0381DAA4 LDR X8, [X19]
	0x0381DAA8 LDP X20, X19, [X31 + 0x10]
	0x0381DAAC LDR X8, [X8 + 0xB8]
	0x0381DAB0 STR W31, [X8 + 0x28]
	0x0381DAB4 LDR X30, [X31], #0x20
	0x0381DAB8 RET
	0x0381DABC LDR X0, [X0]
	0x0381DAC0 RET
	0x0381DAC4 STR X1, [X0]
	0x0381DAC8 RET
	0x0381DACC LDR X0, [X0 + 0x8]
	0x0381DAD0 RET
	0x0381DAD4 STR X1, [X0 + 0x8]
	0x0381DAD8 RET
	0x0381DADC LDR X0, [X0 + 0x10]
	0x0381DAE0 RET
	0x0381DAE4 STR X1, [X0 + 0x10]
	0x0381DAE8 RET
	0x0381DAEC LDR X0, [X0 + 0x18]
	0x0381DAF0 RET
	0x0381DAF4 STR X1, [X0 + 0x18]
	0x0381DAF8 RET
	0x0381DAFC LDR X0, [X0 + 0x20]
	0x0381DB00 RET
	0x0381DB04 STR X1, [X0 + 0x20]
	0x0381DB08 RET
	0x0381DB0C LDR X0, [X0 + 0x28]
	0x0381DB10 RET
	0x0381DB14 STR X1, [X0 + 0x28]
	0x0381DB18 RET
	0x0381DB1C LDR X0, [X0 + 0x30]
	0x0381DB20 RET
	0x0381DB24 STR X1, [X0 + 0x30]
	0x0381DB28 RET
	0x0381DB2C STP X30, X19, [X31 - 0x10]!
	0x0381DB30 MOV X19, X0
	0x0381DB34 LDR X0, [X0]
	0x0381DB38 MOV X1, X31
	0x0381DB3C BL 0x32277A8
	0x0381DB40 TBZ X0, 0x0, 0x381DBA4
	0x0381DB44 LDR X0, [X19 + 0x8]
	0x0381DB48 MOV X1, X31
	0x0381DB4C BL 0x32277A8
	0x0381DB50 TBZ X0, 0x0, 0x381DBA4
	0x0381DB54 LDR X0, [X19 + 0x10]
	0x0381DB58 MOV X1, X31
	0x0381DB5C BL 0x32277A8
	0x0381DB60 TBZ X0, 0x0, 0x381DBA4
	0x0381DB64 LDR X0, [X19 + 0x18]
	0x0381DB68 MOV X1, X31
	0x0381DB6C BL 0x32277A8
	0x0381DB70 TBZ X0, 0x0, 0x381DBA4
	0x0381DB74 LDR X0, [X19 + 0x20]
	0x0381DB78 MOV X1, X31
	0x0381DB7C BL 0x32277A8
	0x0381DB80 TBZ X0, 0x0, 0x381DBA4
	0x0381DB84 LDR X0, [X19 + 0x28]
	0x0381DB88 MOV X1, X31
	0x0381DB8C BL 0x32277A8
	0x0381DB90 TBZ X0, 0x0, 0x381DBA4
	0x0381DB94 LDR X0, [X19 + 0x30]
	0x0381DB98 MOV X1, X31
	0x0381DB9C LDP X30, X19, [X31], #0x10
	0x0381DBA0 B 0x32277A8
	0x0381DBA4 MOV W0, W31
	0x0381DBA8 LDP X30, X19, [X31], #0x10
	0x0381DBAC RET
	0x0381DBB0 STR X30, [X31 - 0x30]!
	0x0381DBB4 STP X22, X21, [X31 + 0x10]
	0x0381DBB8 STP X20, X19, [X31 + 0x20]
	0x0381DBBC ADRP X20, 0xBC4000
	0x0381DBC0 LDRB W8, [X20 + 0x52A]
	0x0381DBC4 MOV X19, X0
	0x0381DBC8 TBNZ X8, 0x0, 0x381DC1C
	0x0381DBCC ADRP X0, 0x8D6000
	0x0381DBD0 LDR X0, [X0 + 0xAC8]
	0x0381DBD4 BL 0x1C16CF4
	0x0381DBD8 ADRP X0, 0x8D6000
	0x0381DBDC LDR X0, [X0 + 0xDD8]
	0x0381DBE0 BL 0x1C16CF4
	0x0381DBE4 ADRP X0, 0x92D000
	0x0381DBE8 LDR X0, [X0 + 0xC80]
	0x0381DBEC BL 0x1C16CF4
	0x0381DBF0 ADRP X0, 0x8D7000
	0x0381DBF4 LDR X0, [X0 + 0x608]
	0x0381DBF8 BL 0x1C16CF4
	0x0381DBFC ADRP X0, 0x8D7000
	0x0381DC00 LDR X0, [X0 + 0x610]
	0x0381DC04 BL 0x1C16CF4
	0x0381DC08 ADRP X0, 0x901000
	0x0381DC0C LDR X0, [X0 + 0x5F8]
	0x0381DC10 BL 0x1C16CF4
	0x0381DC14 MOVZ W8, 0x1
	0x0381DC18 STRB W8, [X20 + 0x52A]
	0x0381DC1C LDR X0, [X19 + 0x18]
	0x0381DC20 MOV X1, X31
	0x0381DC24 BL 0x32277A8
	0x0381DC28 LDR X8, [X19 + 0x10]
	0x0381DC2C MOV W21, W0
	0x0381DC30 MOV X1, X31
	0x0381DC34 MOV X0, X8
	0x0381DC38 BL 0x32277A8
	0x0381DC3C LDR X8, [X19]
	0x0381DC40 MOV W22, W0
	0x0381DC44 MOV X1, X31
	0x0381DC48 MOV X0, X8
	0x0381DC4C BL 0x32277A8
	0x0381DC50 MOV W20, W0
	0x0381DC54 TBNZ X21, 0x0, 0x381DC84
	0x0381DC58 TBNZ X22, 0x0, 0x381DC84
	0x0381DC5C TBZ X20, 0x0, 0x381DCBC
	0x0381DC60 ADRP X8, 0x8D6000
	0x0381DC64 LDP X0, X2, [X19 + 0x10]
	0x0381DC68 LDR X8, [X8 + 0xDD8]
	0x0381DC6C LDP X20, X19, [X31 + 0x20]
	0x0381DC70 LDP X22, X21, [X31 + 0x10]
	0x0381DC74 MOV X3, X31
	0x0381DC78 LDR X1, [X8]
	0x0381DC7C LDR X30, [X31], #0x30
	0x0381DC80 B 0x32274B8
	0x0381DC84 TBZ X21, 0x0, 0x381DD60
	0x0381DC88 LDR X0, [X19 + 0x8]
	0x0381DC8C MOV X1, X31
	0x0381DC90 BL 0x32277A8
	0x0381DC94 TBZ X0, 0x0, 0x381DD68
	0x0381DC98 LDR X0, [X19 + 0x30]
	0x0381DC9C MOV X1, X31
	0x0381DCA0 BL 0x32277A8
	0x0381DCA4 TBZ X0, 0x0, 0x381DDB0
	0x0381DCA8 TBZ X20, 0x0, 0x381DDEC
	0x0381DCAC ADRP X8, 0x92D000
	0x0381DCB0 LDR X8, [X8 + 0xC80]
	0x0381DCB4 LDR X0, [X8]
	0x0381DCB8 B 0x381DD70
	0x0381DCBC ADRP X8, 0x8D6000
	0x0381DCC0 LDR X8, [X8 + 0xAC8]
	0x0381DCC4 MOVZ W1, 0x6
	0x0381DCC8 LDR X0, [X8]
	0x0381DCCC BL 0x1C16D6C
	0x0381DCD0 CBZ X0, 0x381DDF8
	0x0381DCD4 LDR W8, [X0 + 0x18]
	0x0381DCD8 CBZ W8, 0x381DDF4
	0x0381DCDC LDR X9, [X19 + 0x10]
	0x0381DCE0 CMP W8, 0x1
	0x0381DCE4 STR X9, [X0 + 0x20]
	0x0381DCE8 B.EQ 0x381DDF4
	0x0381DCEC ADRP X9, 0x8D6000
	0x0381DCF0 LDR X9, [X9 + 0xDD8]
	0x0381DCF4 CMP W8, 0x2
	0x0381DCF8 LDR X9, [X9]
	0x0381DCFC STR X9, [X0 + 0x28]
	0x0381DD00 B.LS 0x381DDF4
	0x0381DD04 LDR X9, [X19 + 0x18]
	0x0381DD08 CMP W8, 0x3
	0x0381DD0C STR X9, [X0 + 0x30]
	0x0381DD10 B.EQ 0x381DDF4
	0x0381DD14 ADRP X9, 0x8D7000
	0x0381DD18 LDR X9, [X9 + 0x610]
	0x0381DD1C CMP W8, 0x4
	0x0381DD20 LDR X9, [X9]
	0x0381DD24 STR X9, [X0 + 0x38]
	0x0381DD28 B.LS 0x381DDF4
	0x0381DD2C LDR X9, [X19]
	0x0381DD30 CMP W8, 0x5
	0x0381DD34 STR X9, [X0 + 0x40]
	0x0381DD38 B.EQ 0x381DDF4
	0x0381DD3C ADRP X8, 0x8D7000
	0x0381DD40 LDR X8, [X8 + 0x608]
	0x0381DD44 LDP X20, X19, [X31 + 0x20]
	0x0381DD48 LDP X22, X21, [X31 + 0x10]
	0x0381DD4C MOV X1, X31
	0x0381DD50 LDR X8, [X8]
	0x0381DD54 STR X8, [X0 + 0x48]
	0x0381DD58 LDR X30, [X31], #0x30
	0x0381DD5C B 0x32278CC
	0x0381DD60 LDR X0, [X19 + 0x18]
	0x0381DD64 B 0x381DD6C
	0x0381DD68 LDR X0, [X19 + 0x8]
	0x0381DD6C TBZ X20, 0x0, 0x381DD80
	0x0381DD70 LDP X20, X19, [X31 + 0x20]
	0x0381DD74 LDP X22, X21, [X31 + 0x10]
	0x0381DD78 LDR X30, [X31], #0x30
	0x0381DD7C RET
	0x0381DD80 ADRP X8, 0x8D7000
	0x0381DD84 ADRP X9, 0x8D7000
	0x0381DD88 LDR X2, [X19]
	0x0381DD8C LDR X8, [X8 + 0x610]
	0x0381DD90 LDR X9, [X9 + 0x608]
	0x0381DD94 LDP X20, X19, [X31 + 0x20]
	0x0381DD98 LDP X22, X21, [X31 + 0x10]
	0x0381DD9C LDR X1, [X8]
	0x0381DDA0 LDR X3, [X9]
	0x0381DDA4 MOV X4, X31
	0x0381DDA8 LDR X30, [X31], #0x30
	0x0381DDAC B 0x32277C4
	0x0381DDB0 LDR X0, [X19 + 0x30]
	0x0381DDB4 CBZ X0, 0x381DDF8
	0x0381DDB8 LDR W8, [X0 + 0x10]
	0x0381DDBC CMP W8, 0x29
	0x0381DDC0 B.LT 0x381DD6C
	0x0381DDC4 MOVZ W2, 0x28
	0x0381DDC8 MOV W1, W31
	0x0381DDCC MOV X3, X31
	0x0381DDD0 BL 0x3228DE4
	0x0381DDD4 ADRP X8, 0x901000
	0x0381DDD8 LDR X8, [X8 + 0x5F8]
	0x0381DDDC MOV X2, X31
	0x0381DDE0 LDR X1, [X8]
	0x0381DDE4 BL 0x321B938
	0x0381DDE8 B 0x381DD6C
	0x0381DDEC LDR X0, [X19]
	0x0381DDF0 B 0x381DD70
	0x0381DDF4 BL 0x1C16F28
	0x0381DDF8 BL 0x1C16F20

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X29
	003 Move [X31+40], X30
	004 Move [X31+48], X28
	005 Move [X31+56], X27
	006 Move [X31+64], X26
	007 Move [X31+72], X25
	008 Move [X31+80], X24
	009 Move [X31+88], X23
	010 Move [X31+96], X22
	011 Move [X31+104], X21
	012 Move [X31+112], X20
	013 Move [X31+120], X19
	014 Move X26, 0xBC5000
	015 Move W8, [X26+1314]
	016 Move X20, X6
	017 Move W23, W5
	018 Move W24, W4
	019 Move X21, X3
	020 Move W25, W2
	021 Move X19, X1
	022 Move X22, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {35}
	027 Move X0, 0x8FF000
	028 Move X0, [X0+3352]
	029 Call 0x1C17CF4
	030 Move X0, 0x8DD000
	031 Move X0, [X0+464]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X26+1314], W8
	035 Move [X31+16], X31
	036 Move [X31+24], X31
	037 Compare X19, 0
	038 JumpIfEqual {220}
	039 Move X28, 0x8FF000
	040 Move W8, [X19+152]
	041 Move X28, [X28+3352]
	042 Compare W8, 0
	043 JumpIfNotEqual {61}
	044 Move X0, [X28]
	045 Add X26, X19, 16
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1C17DFC
	050 Move X0, X26
	051 Move X1, X31
	052 Call InputStateBlock.get_effectiveBitOffset, X0
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move X0, [X28]
	055 Move W8, [X0+224]
	056 Compare W8, 0
	057 JumpIfNotEqual {59}
	058 Call 0x1C17DFC
	059 Move W8, [X19+28]
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move X8, [X22]
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Compare X8, 0
	064 JumpIfEqual {220}
	065 Move X8, [X8+352]
	066 Compare X8, 0
	067 JumpIfEqual {220}
	068 Move W9, [X8+24]
	069 Compare W9, 0
	070 JumpIfEqual {221}
	071 Add X1, X8, 32
	072 Move X0, X22
	073 Move X2, X19
	074 Move X3, X20
	075 Move W4, W31
	076 Call InputDeviceBuilder.InsertControlBitRangeNode, X0, X1, X2, X3, X4
	077 Move W8, [X19+152]
	078 Compare W8, 0
	079 JumpIfNotEqual {119}
	080 Move X0, [X28]
	081 Move X26, [X22+24]
	082 Add X27, X19, 16
	083 Move W8, [X0+224]
	084 Compare W8, 0
	085 JumpIfNotEqual {87}
	086 Call 0x1C17DFC
	087 Move X0, X27
	088 Move X1, X31
	089 Call InputStateBlock.get_effectiveBitOffset, X0
	090 Move W2, [X19+28]
	091 Move W1, W0
	092 Move W0, W25
	093 Move X3, X31
	094 Call InputDevice.EncodeStateOffsetToControlMapEntry, X0, X1, X2
	095 Compare X26, 0
	096 JumpIfEqual {220}
	097 Move X9, 0x8DD000
	098 Move X9, [X9+464]
	099 Move W10, [X26+28]
	100 Move X8, [X26+16]
	101 Move X9, [X9]
	102 Add W10, W10, 1
	103 Move [X26+28], W10
	104 Compare X8, 0
	105 JumpIfEqual {220}
	106 NotImplemented "Instruction LDRSW not yet implemented."
	107 Move W11, [X8+24]
	108 Move W1, W0
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Add W9, W10, 1
	111 Add X8, X8, X10
	112 Move [X26+24], W9
	113 Move [X8+32], W1
	114 Move X8, [X9+32]
	115 Move X0, X26
	116 Move X8, [X8+192]
	117 Move X2, [X8+112]
	118 Call List`1<UInt32>.AddWithResize, X0, X1
	119 Move X25, [X19+64]
	120 Move X26, [X19+80]
	121 Move X0, X22
	122 Move X1, X19
	123 Move X2, X25
	124 Move X3, X26
	125 Move W4, W31
	126 Call InputDeviceBuilder.SetDisplayName, X0, X1, X2, X3, X4
	127 Move W4, 1
	128 Move X0, X22
	129 Move X1, X19
	130 Move X2, X25
	131 Move X3, X26
	132 Call InputDeviceBuilder.SetDisplayName, X0, X1, X2, X3, X4
	133 Move X8, [X19+120]
	134 NotImplemented "Instruction CMP not yet implemented."
	135 Move TEMP, X24
	136 And TEMP, TEMP, 1
	137 Compare TEMP, 1
	138 JumpIfNotEqual {152}
	139 Move W1, 1
	140 Move X0, X19
	141 Move X2, X31
	142 Move W24, 1
	143 Call InputControl.set_noisy, X0, X1
	144 Move TEMP, X23
	145 And TEMP, TEMP, 1
	146 Compare TEMP, 1
	147 JumpIfEqual {160}
	148 Move X0, X19
	149 Move X1, X31
	150 Call InputControl.get_dontReset, X0
	151 Move W23, W0
	152 Move X0, X19
	153 Move X1, X31
	154 Call InputControl.get_noisy, X0
	155 Move W24, W0
	156 Move TEMP, X23
	157 And TEMP, TEMP, 1
	158 Compare TEMP, 1
	159 JumpIfNotEqual {148}
	160 Move W1, 1
	161 Move X0, X19
	162 Move X2, X31
	163 Move W23, 1
	164 Call InputControl.set_dontReset, X0, X1
	165 Move X0, [X28]
	166 Move W8, [X0+224]
	167 Compare W8, 0
	168 JumpIfNotEqual {170}
	169 Call 0x1C17DFC
	170 Move W27, [X19+152]
	171 NotImplemented "Instruction CMP not yet implemented."
	172 Compare X21, 0
	173 JumpIfEqual {220}
	174 Move W29, [X19+20]
	175 Move W25, [X19+156]
	176 And W24, W24, 1
	177 And W23, W23, 1
	178 Move W8, [X21+24]
	179 NotImplemented "Instruction CMP not yet implemented."
	180 Add X8, X21, W25
	181 Move X26, [X8+32]
	182 Compare X26, 0
	183 JumpIfEqual {220}
	184 Move X0, [X28]
	185 Move W8, [X0+224]
	186 Compare W8, 0
	187 JumpIfNotEqual {189}
	188 Call 0x1C17DFC
	189 Move W8, [X26+20]
	190 Move X0, X22
	191 Move X1, X26
	192 Move W2, W25
	193 Add W8, W8, W29
	194 Move X3, X21
	195 Move W4, W24
	196 Move W5, W23
	197 Move X6, X20
	198 Move [X26+20], W8
	199 Call InputDeviceBuilder.FinalizeControlHierarchyRecursive, X0, X1, X2, X3, X4, X5, X6
	200 Subtract X27, X27, 1
	201 Add W25, W25, 1
	202 Move X0, X19
	203 Move X20, [X31+112]
	204 Move X19, [X31+120]
	205 Move X22, [X31+96]
	206 Move X21, [X31+104]
	207 Move X24, [X31+80]
	208 Move X23, [X31+88]
	209 Move X26, [X31+64]
	210 Move X25, [X31+72]
	211 Move X28, [X31+48]
	212 Move X27, [X31+56]
	213 Move X29, [X31+32]
	214 Move X30, [X31+40]
	215 Move W1, 1
	216 Move X2, X31
	217 Add X31, X31, 128
	218 Call InputControl.set_isSetupFinished, X0, X1
	219 Return 
	220 Call 0x1C17F20
	221 Call 0x1C17F28
	222 Move W8, 0x1FFF
	223 Move [X31+12], W8
	224 Move X20, 0x8DF000
	225 Move X20, [X20+1824]
	226 Move X0, X20
	227 Call 0x1C17D08
	228 Add X1, X31, 12
	229 Call 0x1C17E04
	230 Move X21, X0
	231 Move X0, X19
	232 Call 0x19913C0
	233 Move V0, [X19+1]
	234 Move X0, 0x8FF000
	235 Move [X31+1], V0
	236 Move X0, [X0+3352]
	237 Call 0x1C17D08
	238 Call 0x19913D0
	239 Add X0, X31, 16
	240 Move X1, X31
	241 Call InputStateBlock.get_effectiveBitOffset, X0
	242 Move [X31+8], W0
	243 Move X0, X20
	244 Call 0x1C17D08
	245 Add X1, X31, 8
	246 Call 0x1C17E04
	247 Move X20, X0
	248 Move X0, 0x92E000
	249 Move X0, [X0+3136]
	250 Move W8, 511
	251 Move [X31+12], W8
	252 Move X20, 0x8DF000
	253 Move X20, [X20+1824]
	254 Move X0, X20
	255 Call 0x1C17D08
	256 Add X1, X31, 12
	257 Call 0x1C17E04
	258 Move X21, X0
	259 Move X0, X19
	260 Call 0x19913C0
	261 Move V0, [X19+1]
	262 Move X0, 0x8FF000
	263 Move [X31+1], V0
	264 Move X0, [X0+3352]
	265 Call 0x1C17D08
	266 Call 0x19913D0
	267 Move W8, [X31+28]
	268 Move X0, X20
	269 Move [X31+8], W8
	270 Call 0x1C17D08
	271 Add X1, X31, 8
	272 Call 0x1C17E04
	273 Move X20, X0
	274 Move X0, 0x92E000
	275 Move X0, [X0+3144]
	276 Call 0x1C17D08
	277 Move X1, X19
	278 Move X2, X21
	279 Move X3, X20
	280 Move X4, X31
	281 Call String.Format, X0, X1, X2, X3
	282 Move X19, X0
	283 Move X0, 0x8D7000
	284 Move X0, [X0+2880]
	285 Call 0x1C17D08
	286 Call 0x1C17F10
	287 Move X1, X19
	288 Move X2, X31
	289 Move X20, X0
	290 Call NotSupportedException..ctor, X0, X1
	291 Move X0, 0x92E000
	292 Move X0, [X0+3152]
	293 Call 0x1C17D08
	294 Move X1, X0
	295 Move X0, X20
	296 Call 0x1C17DEC

Method: System.Void InsertControlBitRangeNode(ref UnityEngine.InputSystem.InputDevice/ControlBitRangeNode parent, UnityEngine.InputSystem.InputControl control, ref System.Int32 controlIndiciesNextFreeIndex, System.UInt16 startOffset)

Disassembly:
	0x0381DDFC STR X30, [X31 - 0x20]!
	0x0381DE00 STP X20, X19, [X31 + 0x10]
	0x0381DE04 MOV X19, X1
	0x0381DE08 MOV X20, X0
	0x0381DE0C LDR X0, [X0]
	0x0381DE10 LDR X1, [X1]
	0x0381DE14 MOV X2, X31
	0x0381DE18 BL 0x3767F80
	0x0381DE1C TBZ X0, 0x0, 0x381DE9C
	0x0381DE20 LDR X0, [X20 + 0x8]
	0x0381DE24 LDR X1, [X19 + 0x8]
	0x0381DE28 MOV X2, X31
	0x0381DE2C BL 0x3767F80
	0x0381DE30 TBZ X0, 0x0, 0x381DE9C
	0x0381DE34 LDR X0, [X20 + 0x10]
	0x0381DE38 LDR X1, [X19 + 0x10]
	0x0381DE3C MOV X2, X31
	0x0381DE40 BL 0x3767F80
	0x0381DE44 TBZ X0, 0x0, 0x381DE9C
	0x0381DE48 LDR X0, [X20 + 0x18]
	0x0381DE4C LDR X1, [X19 + 0x18]
	0x0381DE50 MOV X2, X31
	0x0381DE54 BL 0x3767F80
	0x0381DE58 TBZ X0, 0x0, 0x381DE9C
	0x0381DE5C LDR X0, [X20 + 0x20]
	0x0381DE60 LDR X1, [X19 + 0x20]
	0x0381DE64 MOV X2, X31
	0x0381DE68 BL 0x3767F80
	0x0381DE6C TBZ X0, 0x0, 0x381DE9C
	0x0381DE70 LDR X0, [X20 + 0x28]
	0x0381DE74 LDR X1, [X19 + 0x28]
	0x0381DE78 MOV X2, X31
	0x0381DE7C BL 0x3767F80
	0x0381DE80 TBZ X0, 0x0, 0x381DE9C
	0x0381DE84 LDR X0, [X20 + 0x30]
	0x0381DE88 LDR X1, [X19 + 0x30]
	0x0381DE8C LDP X20, X19, [X31 + 0x10]
	0x0381DE90 MOV X2, X31
	0x0381DE94 LDR X30, [X31], #0x20
	0x0381DE98 B 0x3767F80
	0x0381DE9C LDP X20, X19, [X31 + 0x10]
	0x0381DEA0 MOV W0, W31
	0x0381DEA4 LDR X30, [X31], #0x20
	0x0381DEA8 RET
	0x0381DEAC SUB X31, X31, 0x60
	0x0381DEB0 STP X30, X21, [X31 + 0x40]
	0x0381DEB4 STP X20, X19, [X31 + 0x50]
	0x0381DEB8 ADRP X21, 0xBC4000
	0x0381DEBC LDRB W8, [X21 + 0x52B]
	0x0381DEC0 MOV X20, X1
	0x0381DEC4 MOV X19, X0
	0x0381DEC8 TBNZ X8, 0x0, 0x381DEE0
	0x0381DECC ADRP X0, 0x901000
	0x0381DED0 LDR X0, [X0 + 0x4F0]
	0x0381DED4 BL 0x1C16CF4
	0x0381DED8 MOVZ W8, 0x1
	0x0381DEDC STRB W8, [X21 + 0x52B]
	0x0381DEE0 CBZ X20, 0x381DEFC
	0x0381DEE4 ADRP X8, 0x901000
	0x0381DEE8 LDR X8, [X8 + 0x4F0]
	0x0381DEEC LDR X9, [X20]
	0x0381DEF0 LDR X8, [X8]
	0x0381DEF4 CMP X9, X8
	0x0381DEF8 B.EQ 0x381DF04
	0x0381DEFC MOV W0, W31
	0x0381DF00 B 0x381DF30
	0x0381DF04 MOV X0, X20
	0x0381DF08 BL 0x1C16E08
	0x0381DF0C LDR X8, [X0 + 0x30]
	0x0381DF10 LDP V2, V0, [X0 + 0x10]
	0x0381DF14 LDR V1, [X0]
	0x0381DF18 ADD X1, X31, 0x0
	0x0381DF1C MOV X0, X19
	0x0381DF20 STR X8, [X31 + 0x30]
	0x0381DF24 STP V2, V0, [X31 + 0x10]
	0x0381DF28 STR V1, [X31]
	0x0381DF2C BL 0x381DDFC
	0x0381DF30 LDP X20, X19, [X31 + 0x50]
	0x0381DF34 LDP X30, X21, [X31 + 0x40]
	0x0381DF38 AND W0, W0, 0x1
	0x0381DF3C ADD X31, X31, 0x60
	0x0381DF40 RET
	0x0381DF44 STP X30, X25, [X31 - 0x40]!
	0x0381DF48 STP X24, X23, [X31 + 0x10]
	0x0381DF4C STP X22, X21, [X31 + 0x20]
	0x0381DF50 STP X20, X19, [X31 + 0x30]
	0x0381DF54 MOV X19, X0
	0x0381DF58 LDR X0, [X0]
	0x0381DF5C CBZ X0, 0x381DF78
	0x0381DF60 LDR X8, [X0]
	0x0381DF64 LDP X9, X1, [X8 + 0x158]
	0x0381DF68 BLR X9
	0x0381DF6C MOVZ W8, 0x18D
	0x0381DF70 MUL W25, W0, W8
	0x0381DF74 B 0x381DF7C
	0x0381DF78 MOV W25, W31
	0x0381DF7C LDR X0, [X19 + 0x8]
	0x0381DF80 CBZ X0, 0x381DF98
	0x0381DF84 LDR X8, [X0]
	0x0381DF88 LDP X9, X1, [X8 + 0x158]
	0x0381DF8C BLR X9
	0x0381DF90 MOV W20, W0
	0x0381DF94 B 0x381DF9C
	0x0381DF98 MOV W20, W31
	0x0381DF9C LDR X0, [X19 + 0x10]
	0x0381DFA0 CBZ X0, 0x381DFB8
	0x0381DFA4 LDR X8, [X0]
	0x0381DFA8 LDP X9, X1, [X8 + 0x158]
	0x0381DFAC BLR X9
	0x0381DFB0 MOV W21, W0
	0x0381DFB4 B 0x381DFBC
	0x0381DFB8 MOV W21, W31
	0x0381DFBC LDR X0, [X19 + 0x18]
	0x0381DFC0 CBZ X0, 0x381DFD8
	0x0381DFC4 LDR X8, [X0]
	0x0381DFC8 LDP X9, X1, [X8 + 0x158]
	0x0381DFCC BLR X9
	0x0381DFD0 MOV W22, W0
	0x0381DFD4 B 0x381DFDC
	0x0381DFD8 MOV W22, W31
	0x0381DFDC LDR X0, [X19 + 0x20]
	0x0381DFE0 CBZ X0, 0x381DFF8
	0x0381DFE4 LDR X8, [X0]
	0x0381DFE8 LDP X9, X1, [X8 + 0x158]
	0x0381DFEC BLR X9
	0x0381DFF0 MOV W23, W0
	0x0381DFF4 B 0x381DFFC
	0x0381DFF8 MOV W23, W31
	0x0381DFFC LDR X0, [X19 + 0x28]
	0x0381E000 CBZ X0, 0x381E018
	0x0381E004 LDR X8, [X0]
	0x0381E008 LDP X9, X1, [X8 + 0x158]
	0x0381E00C BLR X9
	0x0381E010 MOV W24, W0
	0x0381E014 B 0x381E01C
	0x0381E018 MOV W24, W31
	0x0381E01C LDR X0, [X19 + 0x30]
	0x0381E020 CBZ X0, 0x381E030
	0x0381E024 LDR X8, [X0]
	0x0381E028 LDP X9, X1, [X8 + 0x158]
	0x0381E02C BLR X9
	0x0381E030 EOR W8, W20, W25, 0x0
	0x0381E034 MOVZ W9, 0x18D
	0x0381E038 MUL W8, W8, W9
	0x0381E03C EOR W8, W21, W8, 0x0
	0x0381E040 MUL W8, W8, W9
	0x0381E044 EOR W8, W22, W8, 0x0
	0x0381E048 MUL W8, W8, W9
	0x0381E04C EOR W8, W23, W8, 0x0
	0x0381E050 MUL W8, W8, W9
	0x0381E054 EOR W8, W24, W8, 0x0
	0x0381E058 LDP X20, X19, [X31 + 0x30]
	0x0381E05C LDP X22, X21, [X31 + 0x20]
	0x0381E060 LDP X24, X23, [X31 + 0x10]
	0x0381E064 MUL W8, W8, W9
	0x0381E068 EOR W0, W0, W8, 0x0
	0x0381E06C LDP X30, X25, [X31], #0x40
	0x0381E070 RET
	0x0381E074 SUB X31, X31, 0x50
	0x0381E078 STR X30, [X31 + 0x40]
	0x0381E07C LDR X8, [X1 + 0x30]
	0x0381E080 LDP V1, V0, [X1 + 0x10]
	0x0381E084 LDR V2, [X1]
	0x0381E088 ADD X1, X31, 0x0
	0x0381E08C STR X8, [X31 + 0x30]
	0x0381E090 STP V1, V0, [X31 + 0x10]
	0x0381E094 STR V2, [X31]
	0x0381E098 BL 0x381DDFC
	0x0381E09C LDR X30, [X31 + 0x40]
	0x0381E0A0 AND W0, W0, 0x1
	0x0381E0A4 ADD X31, X31, 0x50
	0x0381E0A8 RET
	0x0381E0AC SUB X31, X31, 0x50
	0x0381E0B0 STR X30, [X31 + 0x40]
	0x0381E0B4 LDR X8, [X1 + 0x30]
	0x0381E0B8 LDP V1, V0, [X1 + 0x10]
	0x0381E0BC LDR V2, [X1]
	0x0381E0C0 ADD X1, X31, 0x0
	0x0381E0C4 STR X8, [X31 + 0x30]
	0x0381E0C8 STP V1, V0, [X31 + 0x10]
	0x0381E0CC STR V2, [X31]
	0x0381E0D0 BL 0x381DDFC
	0x0381E0D4 LDR X30, [X31 + 0x40]
	0x0381E0D8 ORN W8, W31, W0, 0x0
	0x0381E0DC AND W0, W8, 0x1
	0x0381E0E0 ADD X31, X31, 0x50
	0x0381E0E4 RET
	0x0381E0E8 SUB X31, X31, 0x60
	0x0381E0EC STP X30, X21, [X31 + 0x40]
	0x0381E0F0 STP X20, X19, [X31 + 0x50]
	0x0381E0F4 ADRP X21, 0xBC3000
	0x0381E0F8 ADRP X20, 0x92C000
	0x0381E0FC LDRB W8, [X21 + 0x52C]
	0x0381E100 LDR X20, [X20 + 0xC88]
	0x0381E104 MOV X19, X0
	0x0381E108 TBNZ X8, 0x0, 0x381E120
	0x0381E10C ADRP X0, 0x92C000
	0x0381E110 LDR X0, [X0 + 0xC88]
	0x0381E114 BL 0x1C16CF4
	0x0381E118 MOVZ W8, 0x1
	0x0381E11C STRB W8, [X21 + 0x52C]
	0x0381E120 LDR V0, [X19]
	0x0381E124 LDR X8, [X19 + 0x10]
	0x0381E128 LDUR V1, [X19 + 0x18]
	0x0381E12C LDP X9, X10, [X19 + 0x28]
	0x0381E130 LDR X0, [X20]
	0x0381E134 ADD X1, X31, 0x0
	0x0381E138 STP V0, V1, [X31]
	0x0381E13C STP X9, X8, [X31 + 0x20]
	0x0381E140 STR X10, [X31 + 0x30]
	0x0381E144 BL 0x1C16E04
	0x0381E148 MOVZ W1, 0x1
	0x0381E14C MOV X2, X31
	0x0381E150 BL 0x3C86C28
	0x0381E154 LDP X20, X19, [X31 + 0x50]
	0x0381E158 LDP X30, X21, [X31 + 0x40]
	0x0381E15C ADD X31, X31, 0x60
	0x0381E160 RET
	0x0381E164 SUB X31, X31, 0x60

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X24, 0xBC5000
	011 Move W8, [X24+1315]
	012 Move W22, W4
	013 Move X19, X3
	014 Move X20, X2
	015 Move X23, X1
	016 Move X21, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {26}
	021 Move X0, 0x8FF000
	022 Move X0, [X0+3352]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X24+1315], W8
	026 Move [X31+11], W31
	027 Move [X31+8], W31
	028 Move [X31+3], W31
	029 Move [X31], W31
	030 NotImplemented "Instruction LDRSH not yet implemented."
	031 Add W31, W10, 1
	032 Move X8, [X21]
	033 Compare X8, 0
	034 JumpIfEqual {229}
	035 Move X8, [X8+352]
	036 Compare X8, 0
	037 JumpIfEqual {229}
	038 Move W9, [X8+24]
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move W12, W10
	041 NotImplemented "Instruction SBFM not yet implemented."
	042 Move X11, W10
	043 Subtract X12, X12, W10
	044 Add X10, X11, 1
	045 Add X11, X8, X12
	046 NotImplemented "Instruction LDRH not yet implemented."
	047 Move W13, [X11+38]
	048 Move W11, [X11+32]
	049 NotImplemented "Instruction CMP not yet implemented."
	050 NotImplemented "Instruction STRH not yet implemented."
	051 Move [X31+14], W13
	052 Move [X31+8], W11
	053 Move X9, X10
	054 ShiftRight X9, 61
	055 And X9, X9, 0xFFFFFFF
	056 Subtract X9, X9, X10
	057 Add X8, X8, X9
	058 NotImplemented "Instruction LDRH not yet implemented."
	059 Move W10, [X8+38]
	060 Move W8, [X8+32]
	061 NotImplemented "Instruction STRH not yet implemented."
	062 Move [X31+6], W10
	063 Move [X31], W8
	064 Compare X20, 0
	065 JumpIfNotEqual {97}
	066 Move W8, [X23+6]
	067 NotImplemented "Instruction LDRH not yet implemented."
	068 Move W1, [X23]
	069 Move X0, X21
	070 Move W2, W22
	071 NotImplemented "Instruction BFM not yet implemented."
	072 NotImplemented "Instruction BFM not yet implemented."
	073 Call InputDeviceBuilder.GetBestMidPoint, X0, X1, X2
	074 Move W1, W0
	075 Add X0, X31, 8
	076 Move X2, X31
	077 Call ControlBitRangeNode..ctor, X0, X1
	078 NotImplemented "Instruction LDRH not yet implemented."
	079 Add X0, X31, 0
	080 Move X2, X31
	081 Call ControlBitRangeNode..ctor, X0, X1
	082 Move W8, [X31+14]
	083 NotImplemented "Instruction LDRH not yet implemented."
	084 Move W10, [X31+6]
	085 NotImplemented "Instruction LDRH not yet implemented."
	086 Move W2, [X31+8]
	087 Move W3, [X31]
	088 NotImplemented "Instruction BFM not yet implemented."
	089 NotImplemented "Instruction BFM not yet implemented."
	090 NotImplemented "Instruction BFM not yet implemented."
	091 NotImplemented "Instruction BFM not yet implemented."
	092 Move X0, X21
	093 Move X1, X23
	094 Call InputDeviceBuilder.AddChildren, X0, X1, X2, X3
	095 Compare X20, 0
	096 JumpIfEqual {229}
	097 Move X25, 0x8FF000
	098 Move X25, [X25+3352]
	099 Add X24, X20, 16
	100 Move X0, [X25]
	101 Move W8, [X0+224]
	102 Compare W8, 0
	103 JumpIfNotEqual {105}
	104 Call 0x1C17DFC
	105 Move X0, X24
	106 Move X1, X31
	107 Call InputStateBlock.get_effectiveBitOffset, X0
	108 NotImplemented "Instruction LDRH not yet implemented."
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Move X0, [X25]
	111 Move W8, [X0+224]
	112 Compare W8, 0
	113 JumpIfNotEqual {115}
	114 Call 0x1C17DFC
	115 Move X0, X24
	116 Move X1, X31
	117 Call InputStateBlock.get_effectiveBitOffset, X0
	118 Move W8, [X20+28]
	119 NotImplemented "Instruction LDRH not yet implemented."
	120 Add W8, W8, W0
	121 NotImplemented "Instruction CMP not yet implemented."
	122 NotImplemented "Instruction LDRSH not yet implemented."
	123 Move X0, X21
	124 Move X1, X20
	125 Move X2, X19
	126 Call InputDeviceBuilder.AddControlToNode, X0, X1, X2, X3
	127 Move X0, [X25]
	128 Move W8, [X0+224]
	129 Compare W8, 0
	130 JumpIfNotEqual {132}
	131 Call 0x1C17DFC
	132 Move X0, X24
	133 Move X1, X31
	134 Call InputStateBlock.get_effectiveBitOffset, X0
	135 NotImplemented "Instruction CMP not yet implemented."
	136 Move X0, [X25]
	137 Move W8, [X0+224]
	138 Compare W8, 0
	139 JumpIfNotEqual {141}
	140 Call 0x1C17DFC
	141 Move X0, X24
	142 Move X1, X31
	143 Call InputStateBlock.get_effectiveBitOffset, X0
	144 Move W8, [X20+28]
	145 NotImplemented "Instruction LDRH not yet implemented."
	146 Add W8, W8, W0
	147 NotImplemented "Instruction CMP not yet implemented."
	148 NotImplemented "Instruction LDRSH not yet implemented."
	149 Move X0, [X25]
	150 Move W8, [X0+224]
	151 Compare W8, 0
	152 JumpIfNotEqual {154}
	153 Call 0x1C17DFC
	154 Move X0, X24
	155 Move X1, X31
	156 Call InputStateBlock.get_effectiveBitOffset, X0
	157 NotImplemented "Instruction LDRH not yet implemented."
	158 NotImplemented "Instruction CMP not yet implemented."
	159 Move X0, [X25]
	160 Move W8, [X0+224]
	161 Compare W8, 0
	162 JumpIfNotEqual {164}
	163 Call 0x1C17DFC
	164 Move X0, X24
	165 Move X1, X31
	166 Call InputStateBlock.get_effectiveBitOffset, X0
	167 Move W8, [X20+28]
	168 NotImplemented "Instruction LDRH not yet implemented."
	169 Add W8, W8, W0
	170 NotImplemented "Instruction CMP not yet implemented."
	171 NotImplemented "Instruction LDRSH not yet implemented."
	172 Add W3, W8, 1
	173 Move X0, X21
	174 Move X1, X20
	175 Move X2, X19
	176 Call InputDeviceBuilder.AddControlToNode, X0, X1, X2, X3
	177 Move X0, [X25]
	178 Move W8, [X0+224]
	179 Compare W8, 0
	180 JumpIfNotEqual {182}
	181 Call 0x1C17DFC
	182 Move X0, X24
	183 Move X1, X31
	184 Call InputStateBlock.get_effectiveBitOffset, X0
	185 Move X8, [X21]
	186 Compare X8, 0
	187 JumpIfEqual {229}
	188 Move X8, [X8+352]
	189 Compare X8, 0
	190 JumpIfEqual {229}
	191 NotImplemented "Instruction LDRH not yet implemented."
	192 NotImplemented "Instruction LDRSH not yet implemented."
	193 NotImplemented "Instruction CMP not yet implemented."
	194 Move W10, [X8+24]
	195 NotImplemented "Instruction CMP not yet implemented."
	196 Move W10, W9
	197 NotImplemented "Instruction SBFM not yet implemented."
	198 Subtract X9, X10, W9
	199 Add X8, X8, X9
	200 Add X1, X8, 32
	201 Move X0, X21
	202 Move X2, X20
	203 Move X3, X19
	204 Move W4, W22
	205 Move W10, [X8+24]
	206 Move X9, W9
	207 Add X9, X9, 1
	208 NotImplemented "Instruction CMP not yet implemented."
	209 Move X10, X9
	210 ShiftRight X10, 61
	211 And X10, X10, 0xFFFFFFF
	212 Subtract X9, X10, X9
	213 Add X8, X8, X9
	214 Add X1, X8, 32
	215 Move X0, X21
	216 Move X2, X20
	217 Move X3, X19
	218 Call InputDeviceBuilder.InsertControlBitRangeNode, X0, X1, X2, X3, X4
	219 Move X20, [X31+64]
	220 Move X19, [X31+72]
	221 Move X22, [X31+48]
	222 Move X21, [X31+56]
	223 Move X24, [X31+32]
	224 Move X23, [X31+40]
	225 Move X30, [X31+16]
	226 Move X25, [X31+24]
	227 Add X31, X31, 80
	228 Return 
	229 Call 0x1C17F20
	230 Call 0x1C17F28

Method: System.UInt16 GetBestMidPoint(UnityEngine.InputSystem.InputDevice/ControlBitRangeNode parent, System.UInt16 startOffset)

Disassembly:
	0x0381E168 STP X30, X21, [X31 + 0x40]
	0x0381E16C STP X20, X19, [X31 + 0x50]
	0x0381E170 ADRP X21, 0xBC3000
	0x0381E174 LDRB W9, [X21 + 0x52D]
	0x0381E178 MOV X20, X0
	0x0381E17C MOV X19, X8
	0x0381E180 TBNZ X9, 0x0, 0x381E198
	0x0381E184 ADRP X0, 0x92C000
	0x0381E188 LDR X0, [X0 + 0xC90]
	0x0381E18C BL 0x1C16CF4
	0x0381E190 MOVZ W8, 0x1
	0x0381E194 STRB W8, [X21 + 0x52D]
	0x0381E198 CBZ X20, 0x381E1E0
	0x0381E19C ADRP X8, 0x92C000
	0x0381E1A0 LDR X8, [X8 + 0xC90]
	0x0381E1A4 MOV X0, X20
	0x0381E1A8 LDR X1, [X8]
	0x0381E1AC ADD X8, X31, 0x0
	0x0381E1B0 BL 0x2211AEC
	0x0381E1B4 LDP V0, V1, [X31]
	0x0381E1B8 LDP X8, X9, [X31 + 0x20]
	0x0381E1BC LDR X10, [X31 + 0x30]
	0x0381E1C0 LDP X30, X21, [X31 + 0x40]
	0x0381E1C4 STR V0, [X19]
	0x0381E1C8 STR X9, [X19 + 0x10]
	0x0381E1CC STUR V1, [X19 + 0x18]
	0x0381E1D0 STP X8, X10, [X19 + 0x28]
	0x0381E1D4 LDP X20, X19, [X31 + 0x50]
	0x0381E1D8 ADD X31, X31, 0x60
	0x0381E1DC RET
	0x0381E1E0 ADRP X0, 0x8DA000
	0x0381E1E4 LDR X0, [X0 + 0x528]
	0x0381E1E8 BL 0x1C16D08
	0x0381E1EC BL 0x1C16F10
	0x0381E1F0 MOV X19, X0
	0x0381E1F4 ADRP X0, 0x927000
	0x0381E1F8 LDR X0, [X0 + 0xD8]
	0x0381E1FC BL 0x1C16D08
	0x0381E200 MOV X1, X0
	0x0381E204 MOV X0, X19
	0x0381E208 MOV X2, X31
	0x0381E20C BL 0x330E100
	0x0381E210 ADRP X0, 0x92C000
	0x0381E214 LDR X0, [X0 + 0xC98]
	0x0381E218 BL 0x1C16D08
	0x0381E21C MOV X1, X0
	0x0381E220 MOV X0, X19
	0x0381E224 BL 0x1C16DEC
	0x0381E228 SUB X31, X31, 0xD0
	0x0381E22C STP X31, X30, [X31 + 0xA8]
	0x0381E230 STP X20, X19, [X31 + 0xC0]
	0x0381E234 MOV X19, X1
	0x0381E238 MOV X20, X0
	0x0381E23C ADD X0, X31, 0x98
	0x0381E240 MOV X1, X2
	0x0381E244 MOV X2, X31
	0x0381E248 STP X31, X31, [X31 + 0x98]
	0x0381E24C BL 0x3756588
	0x0381E250 ADD X0, X31, 0x98
	0x0381E254 MOV X1, X20
	0x0381E258 MOV X2, X31
	0x0381E25C BL 0x3756648
	0x0381E260 TBZ X0, 0x0, 0x381E298
	0x0381E264 ADD X8, X31, 0x50
	0x0381E268 MOV X0, X19
	0x0381E26C MOV X1, X31
	0x0381E270 BL 0x376184C
	0x0381E274 ADD X0, X31, 0x8
	0x0381E278 ADD X1, X31, 0x50
	0x0381E27C MOVZ W2, 0x48
	0x0381E280 BL 0x3EB1AC0
	0x0381E284 ADD X0, X31, 0x98
	0x0381E288 ADD X1, X31, 0x8
	0x0381E28C MOV X2, X31
	0x0381E290 BL 0x3756AC8
	0x0381E294 B 0x381E2A4
	0x0381E298 MOV X0, X19
	0x0381E29C MOV X1, X31
	0x0381E2A0 BL 0x32277A8
	0x0381E2A4 LDP X20, X19, [X31 + 0xC0]
	0x0381E2A8 LDR X30, [X31 + 0xB0]
	0x0381E2AC AND W0, W0, 0x1
	0x0381E2B0 ADD X31, X31, 0xD0
	0x0381E2B4 RET
	0x0381E2B8 ANDS W31, W1, 0x1
	0x0381E2BC MOVZ W8, 0x100
	0x0381E2C0 CSEL X8, X8, X31, NE
	0x0381E2C4 BFM X8, X0, 0x0, 0x0
	0x0381E2C8 MOV X0, X8
	0x0381E2CC RET
	0x0381E2D0 MOVZ W8, 0x101
	0x0381E2D4 AND X0, X0, X8, 0x0
	0x0381E2D8 RET
	0x0381E2DC ANDS W31, W0, 0x1
	0x0381E2E0 MOVZ W8, 0x100
	0x0381E2E4 CSEL X8, X8, X31, NE
	0x0381E2E8 BFM X8, X0, 0x0, 0x0
	0x0381E2EC MOV X0, X8
	0x0381E2F0 RET
	0x0381E2F4 MOVZ W8, 0x7DD
	0x0381E2F8 MOVZ W9, 0x85BB
	0x0381E2FC ANDS X31, X0, 0x1
	0x0381E300 MOVK W8, 0xFAAF0000
	0x0381E304 MOVK W9, 0x90A20000
	0x0381E308 MOVZ W10, 0x45BD
	0x0381E30C CSEL W8, W9, W8, EQ
	0x0381E310 MOVZ W9, 0xE1D5
	0x0381E314 MOVK W10, 0x625C0000
	0x0381E318 ANDS X31, X0, 0x1FF
	0x0381E31C MOVK W9, 0x5D190000
	0x0381E320 CSEL W9, W9, W10, EQ
	0x0381E324 ADD W0, W9, W8
	0x0381E328 RET
	0x0381E32C MOVZ W8, 0xF6A9
	0x0381E330 MOVZ W9, 0x7FCB
	0x0381E334 ANDS X31, X0, 0x1
	0x0381E338 MOVK W8, 0x6E2B0000
	0x0381E33C MOVK W9, 0xC9F20000
	0x0381E340 MOVZ X10, 0xB3B7
	0x0381E344 CSEL X8, X9, X8, EQ
	0x0381E348 MOVZ X9, 0x23B1
	0x0381E34C MOVK X10, 0xCC740000
	0x0381E350 ANDS X31, X0, 0x1FF
	0x0381E354 MOVK X9, 0x6D250000
	0x0381E358 CSEL X9, X9, X10, EQ
	0x0381E35C ORR X0, X9, X8, 0x0
	0x0381E360 RET
	0x0381E364 AND X0, X0, 0xFFFF
	0x0381E368 AND X1, X1, 0xFFFF
	0x0381E36C MOV X3, X31
	0x0381E370 B 0x384A6EC
	0x0381E374 STR X30, [X31 - 0x30]!
	0x0381E378 STP X22, X21, [X31 + 0x10]
	0x0381E37C STP X20, X19, [X31 + 0x20]
	0x0381E380 AND X20, X0, 0xFFFF
	0x0381E384 AND X21, X1, 0xFFFF
	0x0381E388 MOV W19, W3
	0x0381E38C MOV X0, X20
	0x0381E390 MOV X1, X21
	0x0381E394 MOV X3, X31
	0x0381E398 BL 0x384A6EC
	0x0381E39C MOV W22, W0
	0x0381E3A0 MOV X0, X20
	0x0381E3A4 MOV X1, X21
	0x0381E3A8 MOV W2, W19
	0x0381E3AC MOV X3, X31
	0x0381E3B0 BL 0x384A6EC
	0x0381E3B4 ANDS W31, W0, 0x1
	0x0381E3B8 MOVZ W8, 0x100
	0x0381E3BC CSEL X0, X8, X31, NE
	0x0381E3C0 BFM X0, X22, 0x0, 0x0
	0x0381E3C4 LDP X20, X19, [X31 + 0x20]
	0x0381E3C8 LDP X22, X21, [X31 + 0x10]
	0x0381E3CC LDR X30, [X31], #0x30
	0x0381E3D0 RET
	0x0381E3D4 STP X30, X23, [X31 - 0x30]!
	0x0381E3D8 STP X22, X21, [X31 + 0x10]
	0x0381E3DC STP X20, X19, [X31 + 0x20]
	0x0381E3E0 AND X21, X0, 0xFFFF
	0x0381E3E4 AND X22, X1, 0xFFFF
	0x0381E3E8 MOV W20, W3
	0x0381E3EC MOV X0, X21
	0x0381E3F0 MOV X1, X22
	0x0381E3F4 MOV X3, X31
	0x0381E3F8 MOV W19, W4
	0x0381E3FC BL 0x384A6EC
	0x0381E400 MOV W23, W0
	0x0381E404 MOV X0, X21
	0x0381E408 MOV X1, X22
	0x0381E40C MOV W2, W20
	0x0381E410 MOV X3, X31
	0x0381E414 BL 0x384A6EC
	0x0381E418 MOV W20, W0
	0x0381E41C MOV X0, X21
	0x0381E420 MOV X1, X22
	0x0381E424 MOV W2, W19
	0x0381E428 MOV X3, X31
	0x0381E42C BL 0x384A6EC
	0x0381E430 ANDS W31, W0, 0x1
	0x0381E434 MOVZ W8, 0x10000
	0x0381E438 CSEL X8, X8, X31, NE
	0x0381E43C ANDS W31, W20, 0x1
	0x0381E440 MOVZ W9, 0x100
	0x0381E444 LDP X20, X19, [X31 + 0x20]
	0x0381E448 LDP X22, X21, [X31 + 0x10]
	0x0381E44C CSEL X9, X9, X31, NE
	0x0381E450 BFM X9, X23, 0x0, 0x0
	0x0381E454 ORR X0, X9, X8, 0x0
	0x0381E458 LDP X30, X23, [X31], #0x30
	0x0381E45C RET
	0x0381E460 STR X30, [X31 - 0x40]!
	0x0381E464 STP X24, X23, [X31 + 0x10]
	0x0381E468 STP X22, X21, [X31 + 0x20]
	0x0381E46C STP X20, X19, [X31 + 0x30]
	0x0381E470 AND X22, X0, 0xFFFF
	0x0381E474 AND X23, X1, 0xFFFF
	0x0381E478 MOV W21, W3
	0x0381E47C MOV X0, X22
	0x0381E480 MOV X1, X23
	0x0381E484 MOV X3, X31
	0x0381E488 MOV W19, W5
	0x0381E48C MOV W20, W4
	0x0381E490 BL 0x384A6EC
	0x0381E494 MOV W24, W0
	0x0381E498 MOV X0, X22
	0x0381E49C MOV X1, X23
	0x0381E4A0 MOV W2, W21
	0x0381E4A4 MOV X3, X31
	0x0381E4A8 BL 0x384A6EC
	0x0381E4AC MOV W21, W0
	0x0381E4B0 MOV X0, X22
	0x0381E4B4 MOV X1, X23
	0x0381E4B8 MOV W2, W20
	0x0381E4BC MOV X3, X31
	0x0381E4C0 BL 0x384A6EC
	0x0381E4C4 MOV W20, W0
	0x0381E4C8 MOV X0, X22
	0x0381E4CC MOV X1, X23
	0x0381E4D0 MOV W2, W19
	0x0381E4D4 MOV X3, X31
	0x0381E4D8 BL 0x384A6EC
	0x0381E4DC ANDS W31, W0, 0x1
	0x0381E4E0 MOVZ W8, 0x1000000
	0x0381E4E4 MOVZ W9, 0x10000
	0x0381E4E8 CSEL X8, X8, X31, NE
	0x0381E4EC ANDS W31, W20, 0x1
	0x0381E4F0 CSEL X9, X9, X31, NE
	0x0381E4F4 ANDS W31, W21, 0x1
	0x0381E4F8 MOVZ W10, 0x100
	0x0381E4FC CSEL X10, X10, X31, NE
	0x0381E500 BFM X10, X24, 0x0, 0x0
	0x0381E504 LDP X20, X19, [X31 + 0x30]
	0x0381E508 LDP X22, X21, [X31 + 0x20]
	0x0381E50C LDP X24, X23, [X31 + 0x10]
	0x0381E510 ORR X9, X10, X9, 0x0
	0x0381E514 ORR X0, X9, X8, 0x0
	0x0381E518 LDR X30, [X31], #0x40
	0x0381E51C RET
	0x0381E520 AND W8, W2, 0xFF
	0x0381E524 CMP W8, 0x5
	0x0381E528 B.HI 0x381E570
	0x0381E52C ADRP X9, 0xFFFFFFFFFD379000
	0x0381E530 AND X8, X2, 0xFF
	0x0381E534 ADD X9, X9, 0x9D0
	0x0381E538 ADR X10, 0x10
	0x0381E53C LDRB W11, [X9, X8, LSL]
	0x0381E540 ADD X10, X10, X11, 0x2, LSL
	0x0381E544 BR X10
	0x0381E548 AND X8, X0, 0x1
	0x0381E54C B 0x381E564
	0x0381E550 AND X8, X1, 0x1
	0x0381E554 B 0x381E564
	0x0381E558 AND X8, X1, 0x1FF
	0x0381E55C B 0x381E564
	0x0381E560 AND X8, X0, 0x1FF
	0x0381E564 CMP X8, 0x0
	0x0381E568 CSET W0, NE
	0x0381E56C RET
	0x0381E570 SUB X31, X31, 0x40
	0x0381E574 STR X30, [X31 + 0x20]
	0x0381E578 STP X20, X19, [X31 + 0x30]
	0x0381E57C ADRP X0, 0x92C000
	0x0381E580 LDR X0, [X0 + 0xCA0]
	0x0381E584 MOV X19, X2
	0x0381E588 BL 0x1C16D08
	0x0381E58C MOVN X8, 0x0
	0x0381E590 STP X0, X8, [X31 + 0x8]
	0x0381E594 ADD X0, X31, 0x8
	0x0381E598 MOV X1, X31
	0x0381E59C STRB W19, [X31 + 0x18]
	0x0381E5A0 BL 0x33B162C
	0x0381E5A4 MOV X19, X0
	0x0381E5A8 ADRP X0, 0x92C000
	0x0381E5AC LDR X0, [X0 + 0xCA8]
	0x0381E5B0 BL 0x1C16D08
	0x0381E5B4 MOV X1, X19
	0x0381E5B8 MOV X2, X31
	0x0381E5BC BL 0x321B938
	0x0381E5C0 MOV X19, X0
	0x0381E5C4 ADRP X0, 0x8DD000
	0x0381E5C8 LDR X0, [X0 + 0x578]
	0x0381E5CC BL 0x1C16D08
	0x0381E5D0 BL 0x1C16F10
	0x0381E5D4 MOV X1, X19
	0x0381E5D8 MOV X2, X31
	0x0381E5DC MOV X20, X0
	0x0381E5E0 BL 0x3314A68
	0x0381E5E4 ADRP X0, 0x92C000
	0x0381E5E8 LDR X0, [X0 + 0xCB0]
	0x0381E5EC BL 0x1C16D08
	0x0381E5F0 MOV X1, X0
	0x0381E5F4 MOV X0, X20
	0x0381E5F8 BL 0x1C16DEC
	0x0381E5FC UBFM W8, W1, 0x10, 0xF
	0x0381E600 BFM X8, X0, 0x0, 0xF
	0x0381E604 MOV X0, X8
	0x0381E608 RET
	0x0381E60C ANDS W31, W2, 0x1
	0x0381E610 MOVZ W8, 0x100
	0x0381E614 CSEL X9, X8, X31, NE
	0x0381E618 ANDS W31, W3, 0x1
	0x0381E61C CSEL X8, X8, X31, NE
	0x0381E620 BFM X9, X0, 0x0, 0x0
	0x0381E624 BFM X8, X1, 0x0, 0x0
	0x0381E628 ORR X0, X9, X8, 0x10
	0x0381E62C RET
	0x0381E630 ANDS W8, W0, 0x1
	0x0381E634 MOVZ W9, 0x100
	0x0381E638 CSEL W9, W9, W31, NE
	0x0381E63C ORR W8, W9, W8, 0x0
	0x0381E640 MOV W0, W8
	0x0381E644 RET
	0x0381E648 MOVZ W10, 0x1
	0x0381E64C UBFM X8, X0, 0x8, 0x3F
	0x0381E650 MOVK W10, 0x1000000
	0x0381E654 UBFM W9, W0, 0x18, 0x17
	0x0381E658 AND X8, X8, 0x1FF
	0x0381E65C AND X10, X0, X10, 0x0
	0x0381E660 AND X9, X9, 0x1FFFF
	0x0381E664 ORR X8, X10, X8, 0x0
	0x0381E668 ORR X0, X8, X9, 0x0
	0x0381E66C RET
	0x0381E670 MOVZ W8, 0x165B
	0x0381E674 MOVZ W9, 0x2C49
	0x0381E678 ANDS X31, X0, 0x1
	0x0381E67C MOVK W8, 0x5D1B0000
	0x0381E680 MOVK W9, 0x7AF30000
	0x0381E684 MOVZ X10, 0x6CD7
	0x0381E688 MOVZ X11, 0x1389
	0x0381E68C MOVK X10, 0x87090000
	0x0381E690 MOVK X11, 0xAE130000
	0x0381E694 CSEL X8, X9, X8, EQ

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X29
	003 Move [X31+40], X30
	004 Move [X31+48], X28
	005 Move [X31+56], X27
	006 Move [X31+64], X26
	007 Move [X31+72], X25
	008 Move [X31+80], X24
	009 Move [X31+88], X23
	010 Move [X31+96], X22
	011 Move [X31+104], X21
	012 Move [X31+112], X20
	013 Move [X31+120], X19
	014 Move X22, 0xBC4000
	015 Move W8, [X22+1316]
	016 Move W19, W2
	017 Move X20, X1
	018 Move X21, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {31}
	023 Move X0, 0x8FE000
	024 Move X0, [X0+3352]
	025 Call 0x1C17CF4
	026 Move X0, 0x8D6000
	027 Move X0, [X0+1448]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X22+1316], W8
	031 Move [X31+16], X31
	032 Move [X31+24], X31
	033 And W26, W20, 0xFFFF
	034 Move X8, [X21]
	035 Subtract W9, W26, W19
	036 Subtract W10, W9, 1
	037 NotImplemented "Instruction CMP not yet implemented."
	038 NotImplemented "Instruction CSEL not yet implemented."
	039 Compare X8, 0
	040 JumpIfEqual {351}
	041 Move X27, [X8+336]
	042 Compare X27, 0
	043 JumpIfEqual {351}
	044 Move X24, 0x8FE000
	045 Move X24, [X24+3352]
	046 Move W8, [X27+24]
	047 NotImplemented "Instruction SBFM not yet implemented."
	048 Add W10, W10, W19
	049 Add W20, W10, 1
	050 NotImplemented "Instruction CMP not yet implemented."
	051 And W10, W20, 0xFFFF
	052 Move [X31+12], W10
	053 Move W28, W31
	054 And W29, W19, 0xFFFF
	055 Move X23, W9
	056 Move W25, W10
	057 Move W10, 0xFFFF
	058 Move W9, 0xFFFF
	059 Move [X31+4], W10
	060 Move [X31+8], W9
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Add X8, X27, W28
	063 Move X8, [X8+32]
	064 Compare X8, 0
	065 JumpIfEqual {351}
	066 Move V0, [X8+1]
	067 Move X0, [X24]
	068 Move [X31+1], V0
	069 Move W8, [X0+224]
	070 Compare W8, 0
	071 JumpIfNotEqual {73}
	072 Call 0x1C17DFC
	073 Add X0, X31, 16
	074 Move X1, X31
	075 Call InputStateBlock.get_effectiveBitOffset, X0
	076 Move W8, [X31+28]
	077 Add W8, W0, W8
	078 Subtract W8, W8, 1
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Move X0, [X24]
	081 Move W8, [X0+224]
	082 Compare W8, 0
	083 JumpIfNotEqual {85}
	084 Call 0x1C17DFC
	085 Add X0, X31, 16
	086 Move X1, X31
	087 Call InputStateBlock.get_effectiveBitOffset, X0
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Move X0, [X24]
	090 Move W8, [X0+224]
	091 Compare W8, 0
	092 JumpIfNotEqual {94}
	093 Call 0x1C17DFC
	094 Move W8, [X31+28]
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Move X0, [X24]
	097 Move W8, [X0+224]
	098 Compare W8, 0
	099 JumpIfNotEqual {101}
	100 Call 0x1C17DFC
	101 Add X0, X31, 16
	102 Move X1, X31
	103 Call InputStateBlock.get_effectiveBitOffset, X0
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Move X0, [X24]
	106 Move W8, [X0+224]
	107 Compare W8, 0
	108 JumpIfNotEqual {110}
	109 Call 0x1C17DFC
	110 Add X0, X31, 16
	111 Move X1, X31
	112 Call InputStateBlock.get_effectiveBitOffset, X0
	113 Move W8, [X31+28]
	114 Add W8, W8, W0
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Move X0, [X24]
	117 Move W8, [X0+224]
	118 Compare W8, 0
	119 JumpIfNotEqual {121}
	120 Call 0x1C17DFC
	121 Add X0, X31, 16
	122 Move X1, X31
	123 Call InputStateBlock.get_effectiveBitOffset, X0
	124 Move X8, 0x8D6000
	125 Move X8, [X8+1448]
	126 Move W19, [X31+28]
	127 Move W22, W0
	128 Move X8, [X8]
	129 Move W9, [X8+224]
	130 Compare W9, 0
	131 JumpIfNotEqual {134}
	132 Move X0, X8
	133 Call 0x1C17DFC
	134 Move W9, [X31+8]
	135 Move W10, [X31+12]
	136 Add W8, W19, W22
	137 Subtract X8, X8, X25
	138 NotImplemented "Instruction CSNEG not yet implemented."
	139 And W9, W9, 0xFFFF
	140 Subtract W9, W9, W10
	141 NotImplemented "Instruction CSNEG not yet implemented."
	142 NotImplemented "Instruction CMP not yet implemented."
	143 Move X0, [X24]
	144 Move W8, [X0+224]
	145 Compare W8, 0
	146 JumpIfNotEqual {148}
	147 Call 0x1C17DFC
	148 Add X0, X31, 16
	149 Move X1, X31
	150 Call InputStateBlock.get_effectiveBitOffset, X0
	151 Move W8, [X31+28]
	152 Add W8, W8, W0
	153 NotImplemented "Instruction CMP not yet implemented."
	154 Move X0, [X24]
	155 Move W8, [X0+224]
	156 Compare W8, 0
	157 JumpIfNotEqual {159}
	158 Call 0x1C17DFC
	159 Add X0, X31, 16
	160 Move X1, X31
	161 Call InputStateBlock.get_effectiveBitOffset, X0
	162 Move W8, [X31+28]
	163 Add W8, W8, W0
	164 Move [X31+8], W8
	165 Move X0, [X24]
	166 Move W8, [X0+224]
	167 Compare W8, 0
	168 JumpIfNotEqual {170}
	169 Call 0x1C17DFC
	170 Add X0, X31, 16
	171 Move X1, X31
	172 Call InputStateBlock.get_effectiveBitOffset, X0
	173 Move X8, 0x8D6000
	174 Move X8, [X8+1448]
	175 Move W22, W0
	176 Move X8, [X8]
	177 Move W9, [X8+224]
	178 Compare W9, 0
	179 JumpIfNotEqual {182}
	180 Move X0, X8
	181 Call 0x1C17DFC
	182 Move W9, [X31+4]
	183 Move W10, [X31+12]
	184 Move W8, W22
	185 Subtract X8, X8, X25
	186 And W9, W9, 0xFFFF
	187 NotImplemented "Instruction CSNEG not yet implemented."
	188 Subtract W9, W9, W10
	189 NotImplemented "Instruction CSNEG not yet implemented."
	190 NotImplemented "Instruction CMP not yet implemented."
	191 Move X0, [X24]
	192 Move W8, [X0+224]
	193 Compare W8, 0
	194 JumpIfNotEqual {196}
	195 Call 0x1C17DFC
	196 Add X0, X31, 16
	197 Move X1, X31
	198 Call InputStateBlock.get_effectiveBitOffset, X0
	199 NotImplemented "Instruction CMP not yet implemented."
	200 Move X0, [X24]
	201 Move W8, [X0+224]
	202 Compare W8, 0
	203 JumpIfNotEqual {205}
	204 Call 0x1C17DFC
	205 Add X0, X31, 16
	206 Move X1, X31
	207 Call InputStateBlock.get_effectiveBitOffset, X0
	208 Move [X31+4], W0
	209 Move W8, [X27+24]
	210 Add W28, W28, 1
	211 NotImplemented "Instruction CMP not yet implemented."
	212 Move W9, 0xFFFF
	213 Move W8, 0xFFFF
	214 Move [X31+4], W8
	215 Move [X31+8], W9
	216 Move X8, [X21]
	217 Compare X8, 0
	218 JumpIfEqual {351}
	219 Move X27, [X8+336]
	220 Compare X27, 0
	221 JumpIfEqual {351}
	222 Move W8, [X27+24]
	223 Move [X31], W20
	224 NotImplemented "Instruction CMP not yet implemented."
	225 Move W9, [X31+4]
	226 Move X28, X31
	227 Move W26, W31
	228 Move W22, W31
	229 And W29, W9, 0xFFFF
	230 Move W9, [X31+8]
	231 Move W23, W31
	232 Add X20, X27, 32
	233 And W19, W9, 0xFFFF
	234 NotImplemented "Instruction CMP not yet implemented."
	235 Move W8, [X31+4]
	236 Move X25, [X20]
	237 NotImplemented "Instruction ORN not yet implemented."
	238 And W31, W8, 0xFFFF
	239 Compare X25, 0
	240 JumpIfEqual {351}
	241 Move X0, [X24]
	242 Move W8, [X0+224]
	243 Compare W8, 0
	244 JumpIfNotEqual {246}
	245 Call 0x1C17DFC
	246 Add X21, X25, 16
	247 Move X0, X21
	248 Move X1, X31
	249 Call InputStateBlock.get_effectiveBitOffset, X0
	250 NotImplemented "Instruction CMP not yet implemented."
	251 Move X0, [X24]
	252 Move W8, [X0+224]
	253 Compare W8, 0
	254 JumpIfNotEqual {256}
	255 Call 0x1C17DFC
	256 Move X0, X21
	257 Move X1, X31
	258 Call InputStateBlock.get_effectiveBitOffset, X0
	259 Move W8, [X25+28]
	260 Add W8, W8, W0
	261 NotImplemented "Instruction CMP not yet implemented."
	262 NotImplemented "Instruction CINC not yet implemented."
	263 Move W8, [X31+8]
	264 NotImplemented "Instruction ORN not yet implemented."
	265 And W31, W8, 0xFFFF
	266 Compare X25, 0
	267 JumpIfEqual {351}
	268 Move X0, [X24]
	269 Move W8, [X0+224]
	270 Compare W8, 0
	271 JumpIfNotEqual {273}
	272 Call 0x1C17DFC
	273 Add X21, X25, 16
	274 Move X0, X21
	275 Move X1, X31
	276 Call InputStateBlock.get_effectiveBitOffset, X0
	277 NotImplemented "Instruction CMP not yet implemented."
	278 Move X0, [X24]
	279 Move W8, [X0+224]
	280 Compare W8, 0
	281 JumpIfNotEqual {283}
	282 Call 0x1C17DFC
	283 Move X0, X21
	284 Move X1, X31
	285 Call InputStateBlock.get_effectiveBitOffset, X0
	286 Move W8, [X25+28]
	287 Add W8, W8, W0
	288 NotImplemented "Instruction CMP not yet implemented."
	289 NotImplemented "Instruction CINC not yet implemented."
	290 Compare X25, 0
	291 JumpIfEqual {351}
	292 Move X0, [X24]
	293 Move W8, [X0+224]
	294 Compare W8, 0
	295 JumpIfNotEqual {297}
	296 Call 0x1C17DFC
	297 Add X21, X25, 16
	298 Move X0, X21
	299 Move X1, X31
	300 Call InputStateBlock.get_effectiveBitOffset, X0
	301 Move W8, [X31+12]
	302 NotImplemented "Instruction CMP not yet implemented."
	303 Move X0, [X24]
	304 Move W8, [X0+224]
	305 Compare W8, 0
	306 JumpIfNotEqual {308}
	307 Call 0x1C17DFC
	308 Move X0, X21
	309 Move X1, X31
	310 Call InputStateBlock.get_effectiveBitOffset, X0
	311 Move W8, [X25+28]
	312 Move W9, [X31+12]
	313 Add W8, W8, W0
	314 NotImplemented "Instruction CMP not yet implemented."
	315 NotImplemented "Instruction CINC not yet implemented."
	316 Move W8, [X27+24]
	317 Add X28, X28, 1
	318 NotImplemented "Instruction CMP not yet implemented."
	319 Move W23, W31
	320 Move W22, W31
	321 Move W26, W31
	322 Move W8, [X31+8]
	323 NotImplemented "Instruction ORN not yet implemented."
	324 And W31, W8, 0xFFFF
	325 NotImplemented "Instruction CMP not yet implemented."
	326 NotImplemented "Instruction CMP not yet implemented."
	327 Move W9, [X31+4]
	328 NotImplemented "Instruction CMP not yet implemented."
	329 NotImplemented "Instruction CCMP not yet implemented."
	330 NotImplemented "Instruction ORN not yet implemented."
	331 And W8, W8, 0xFFFF
	332 NotImplemented "Instruction CCMP not yet implemented."
	333 Move W8, [X31]
	334 NotImplemented "Instruction CSEL not yet implemented."
	335 Move [X31+8], W8
	336 Move W0, [X31+8]
	337 Move X20, [X31+112]
	338 Move X19, [X31+120]
	339 Move X22, [X31+96]
	340 Move X21, [X31+104]
	341 Move X24, [X31+80]
	342 Move X23, [X31+88]
	343 Move X26, [X31+64]
	344 Move X25, [X31+72]
	345 Move X28, [X31+48]
	346 Move X27, [X31+56]
	347 Move X29, [X31+32]
	348 Move X30, [X31+40]
	349 Add X31, X31, 128
	350 Return X0
	351 Call 0x1C17F20
	352 Call 0x1C17F28

Method: System.Void AddControlToNode(UnityEngine.InputSystem.InputControl control, ref System.Int32 controlIndiciesNextFreeIndex, System.Int32 nodeIndex)

Disassembly:
	0x0381E7A8 ANDS W8, W0, 0x1
	0x0381E7AC MOVZ W9, 0x100
	0x0381E7B0 CSEL W9, W9, W31, NE
	0x0381E7B4 ORR W8, W9, W8, 0x0
	0x0381E7B8 MOV X9, X8
	0x0381E7BC ORR X0, X9, X8, 0x20
	0x0381E7C0 RET
	0x0381E7C4 MOVZ X12, 0x1
	0x0381E7C8 UBFM W9, W0, 0x10, 0xF
	0x0381E7CC MOVK X12, 0x100
	0x0381E7D0 UBFM X11, X0, 0x8, 0x3F
	0x0381E7D4 AND X9, X9, 0x1FFFFFF
	0x0381E7D8 AND X12, X0, X12, 0x0
	0x0381E7DC AND X11, X11, 0x1FF
	0x0381E7E0 ORR X9, X12, X9, 0x0
	0x0381E7E4 UBFM X8, X0, 0x18, 0x3F
	0x0381E7E8 UBFM X10, X0, 0x10, 0x3F
	0x0381E7EC ORR X9, X9, X11, 0x0
	0x0381E7F0 AND X10, X10, 0x1FFFF
	0x0381E7F4 BFM X9, X8, 0x20, 0x0
	0x0381E7F8 ORR X0, X9, X10, 0x0
	0x0381E7FC RET
	0x0381E800 MOVZ W8, 0x1269
	0x0381E804 MOVZ W9, 0x9F3B
	0x0381E808 ANDS X31, X0, 0x1
	0x0381E80C MOVK W8, 0xB4500000
	0x0381E810 MOVK W9, 0x7BE30000
	0x0381E814 MOVZ X10, 0x89FD
	0x0381E818 MOVZ X11, 0x913F
	0x0381E81C MOVK X10, 0x604B0000
	0x0381E820 MOVK X11, 0x7AB90000
	0x0381E824 MOVZ X12, 0x29C9
	0x0381E828 CSEL X8, X9, X8, EQ
	0x0381E82C MOVZ X9, 0x1B4B
	0x0381E830 ANDS X31, X0, 0x1FF
	0x0381E834 MOVK X12, 0x5EAC0000
	0x0381E838 MOVK X9, 0x7B6D0000
	0x0381E83C CSEL X10, X11, X10, EQ
	0x0381E840 ANDS X31, X0, 0x1FFFFFF
	0x0381E844 MOVZ W11, 0x9E77
	0x0381E848 CSEL X9, X9, X12, EQ
	0x0381E84C MOVZ W12, 0xE101
	0x0381E850 MOVK W11, 0x58390000
	0x0381E854 MOVK W12, 0xDB3D0000
	0x0381E858 ANDS X31, X0, 0x1FFFF
	0x0381E85C ORR X10, X10, X8, 0x0
	0x0381E860 CSEL X11, X12, X11, EQ
	0x0381E864 MOVZ X12, 0xF5C1
	0x0381E868 ADD X9, X10, X9
	0x0381E86C MOVZ X10, 0x693F
	0x0381E870 MOVK X12, 0xF8420000
	0x0381E874 MOVK X10, 0x6BF60000
	0x0381E878 ANDS X31, X0, 0x1FFFFFFFFFF
	0x0381E87C ADD X8, X11, X8
	0x0381E880 MOVZ W11, 0x1D9B
	0x0381E884 CSEL X10, X10, X12, EQ
	0x0381E888 MOVZ W12, 0x14F9
	0x0381E88C MOVK W11, 0x9D1B0000
	0x0381E890 MOVK W12, 0xFC600000
	0x0381E894 AND X9, X9, 0x7FFFFFFFFFFFFFFF
	0x0381E898 ANDS X31, X0, 0x1FFFFFFFF
	0x0381E89C ORR X10, X8, X10, 0x0
	0x0381E8A0 CSEL W11, W12, W11, EQ
	0x0381E8A4 ADD X9, X10, X9
	0x0381E8A8 ADD W8, W8, W11
	0x0381E8AC UBFM X9, X9, 0x20, 0x3F
	0x0381E8B0 ADD W0, W9, W8
	0x0381E8B4 RET
	0x0381E8B8 MOVZ W8, 0x493F
	0x0381E8BC MOVZ W9, 0xC335
	0x0381E8C0 ANDS X31, X0, 0x1
	0x0381E8C4 MOVK W8, 0xC4B10000
	0x0381E8C8 MOVK W9, 0xA47E0000
	0x0381E8CC MOVZ X10, 0x66D3
	0x0381E8D0 MOVZ X11, 0xDF57
	0x0381E8D4 MOVK X10, 0xBA090000
	0x0381E8D8 MOVK X11, 0xA4770000
	0x0381E8DC MOVZ X12, 0x68F3
	0x0381E8E0 CSEL X8, X9, X8, EQ
	0x0381E8E4 MOVZ X9, 0x9C01

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X23, 0xBC4000
	011 Move W8, [X23+1317]
	012 Move W22, W3
	013 Move X19, X2
	014 Move X21, X1
	015 Move X20, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0x92D000
	021 Move X0, [X0+3168]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X23+1317], W8
	025 Move X8, [X20]
	026 Compare X8, 0
	027 JumpIfEqual {86}
	028 Move X9, [X8+352]
	029 Compare X9, 0
	030 JumpIfEqual {86}
	031 Move W10, [X9+24]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 NotImplemented "Instruction SBFM not yet implemented."
	034 Subtract X10, X10, W22
	035 Add X24, X9, X10
	036 Add X24, X24, 38
	037 Move W25, [X24]
	038 Move X26, 0x92D000
	039 Move X9, X24
	040 NotImplemented "Instruction LDRH not yet implemented."
	041 Move X26, [X26+3168]
	042 Compare W25, 0
	043 JumpIfNotEqual {46}
	044 Move W23, [X19]
	045 NotImplemented "Instruction STRH not yet implemented."
	046 Move X0, X20
	047 Move X1, X21
	048 Add X22, X8, 360
	049 Call InputDeviceBuilder.GetControlIndex, X0, X1
	050 Move X3, [X26]
	051 Move W2, W0
	052 Add W1, W25, W23
	053 Move X0, X22
	054 Call ArrayHelpers.InsertAt, X0, X1, X2
	055 Move W8, [X24]
	056 Add W8, W8, 1
	057 Move [X24], W8
	058 Move W8, [X19]
	059 Add W8, W8, 1
	060 Move [X19], W8
	061 Move X8, [X20]
	062 Compare X8, 0
	063 JumpIfEqual {86}
	064 Move X8, [X8+352]
	065 Compare X8, 0
	066 JumpIfEqual {86}
	067 Move W9, [X8+24]
	068 Add X10, X8, 36
	069 Move TEMP, 0
	070 Not TEMP
	071 Move X12, TEMP
	072 Move X11, W9
	073 Add X12, X12, 1
	074 NotImplemented "Instruction CMP not yet implemented."
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Move W13, [X10+2]
	077 Compare W13, 0
	078 JumpIfEqual {83}
	079 NotImplemented "Instruction LDRH not yet implemented."
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Add W13, W13, 1
	082 NotImplemented "Instruction STRH not yet implemented."
	083 Add X10, X10, 7
	084 Compare X8, 0
	085 JumpIfNotEqual {73}
	086 Call 0x1C17F20
	087 Move X20, [X31+64]
	088 Move X19, [X31+72]
	089 Move X22, [X31+48]
	090 Move X21, [X31+56]
	091 Move X24, [X31+32]
	092 Move X23, [X31+40]
	093 Move X26, [X31+16]
	094 Move X25, [X31+24]
	095 Move X30, [X31+80]
	096 Return 
	097 Call 0x1C17F28

Method: System.Void AddChildren(ref UnityEngine.InputSystem.InputDevice/ControlBitRangeNode parent, UnityEngine.InputSystem.InputDevice/ControlBitRangeNode left, UnityEngine.InputSystem.InputDevice/ControlBitRangeNode right)

Disassembly:
	0x0381E698 ANDS X31, X0, 0x1FF
	0x0381E69C MOVZ X9, 0x945
	0x0381E6A0 CSEL X10, X11, X10, EQ
	0x0381E6A4 MOVZ X11, 0xA3E9
	0x0381E6A8 MOVK X9, 0xD21D0000
	0x0381E6AC MOVK X11, 0x48220000
	0x0381E6B0 ANDS X31, X0, 0x1FFFFFF
	0x0381E6B4 CSEL X9, X11, X9, EQ
	0x0381E6B8 MOVZ W11, 0xC25D
	0x0381E6BC MOVZ W12, 0x6DD1
	0x0381E6C0 MOVK W11, 0xAAC30000
	0x0381E6C4 ANDS X31, X0, 0x1FFFF
	0x0381E6C8 MOVK W12, 0x4C7F0000
	0x0381E6CC ORR X10, X10, X8, 0x0
	0x0381E6D0 CSEL W11, W12, W11, EQ
	0x0381E6D4 ADD X9, X10, X9
	0x0381E6D8 ADD W8, W11, W8
	0x0381E6DC UBFM X9, X9, 0x20, 0x3F
	0x0381E6E0 ADD W0, W9, W8
	0x0381E6E4 RET
	0x0381E6E8 MOVZ W8, 0xC50B
	0x0381E6EC MOVZ W9, 0xAB2D
	0x0381E6F0 ANDS X31, X0, 0x1
	0x0381E6F4 MOVK W8, 0x5BA20000
	0x0381E6F8 MOVK W9, 0x88FC0000
	0x0381E6FC MOVZ X10, 0x5ACB
	0x0381E700 MOVZ X11, 0xA60D
	0x0381E704 MOVK X10, 0x8C450000
	0x0381E708 MOVK X11, 0x614D0000
	0x0381E70C CSEL X8, X9, X8, EQ
	0x0381E710 ANDS X31, X0, 0x1FF
	0x0381E714 MOVZ X9, 0x3729
	0x0381E718 CSEL X10, X11, X10, EQ
	0x0381E71C MOVZ X11, 0x2A33
	0x0381E720 MOVK X9, 0x863E0000
	0x0381E724 MOVK X11, 0xF1850000
	0x0381E728 ANDS X31, X0, 0x1FFFFFF
	0x0381E72C CSEL X9, X11, X9, EQ
	0x0381E730 MOVZ W11, 0x5E77
	0x0381E734 MOVZ W12, 0x6C89
	0x0381E738 MOVK W11, 0x77E30000
	0x0381E73C ANDS X31, X0, 0x1FFFF
	0x0381E740 MOVK W12, 0xCD260000
	0x0381E744 ORR X10, X10, X8, 0x0
	0x0381E748 CSEL W11, W12, W11, EQ
	0x0381E74C ADD X9, X10, X9
	0x0381E750 ADD W8, W11, W8
	0x0381E754 AND X9, X9, 0xFFFFFFFFFFFFFFFF
	0x0381E758 ORR X0, X9, X8, 0x0
	0x0381E75C RET
	0x0381E760 UBFM W8, W1, 0x10, 0xF
	0x0381E764 BFM X8, X0, 0x0, 0xF
	0x0381E768 BFM X8, X2, 0x20, 0xF
	0x0381E76C MOV X0, X8
	0x0381E770 RET
	0x0381E774 ANDS W31, W3, 0x1
	0x0381E778 MOVZ W8, 0x100
	0x0381E77C CSEL X9, X8, X31, NE
	0x0381E780 ANDS W31, W4, 0x1
	0x0381E784 CSEL X10, X8, X31, NE
	0x0381E788 ANDS W31, W5, 0x1
	0x0381E78C BFM X9, X0, 0x0, 0x0
	0x0381E790 BFM X10, X1, 0x0, 0x0
	0x0381E794 CSEL W8, W8, W31, NE
	0x0381E798 BFM W8, W2, 0x0, 0x0
	0x0381E79C ORR X9, X9, X10, 0x10
	0x0381E7A0 ORR X0, X9, X8, 0x20
	0x0381E7A4 RET

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0xBC4000
	008 Move W8, [X23+1318]
	009 Move X19, X3
	010 Move X20, X2
	011 Move X22, X1
	012 Move X21, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x92D000
	018 Move X0, [X0+3160]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X23+1318], W8
	022 NotImplemented "Instruction LDRSH not yet implemented."
	023 Add W31, W8, 1
	024 Move X8, [X21]
	025 Compare X8, 0
	026 JumpIfEqual {89}
	027 Move X9, [X8+352]
	028 Compare X9, 0
	029 JumpIfEqual {89}
	030 Move X23, [X9+24]
	031 Move X9, 0x92D000
	032 Add X0, X8, 352
	033 NotImplemented "Instruction STRH not yet implemented."
	034 Move X9, [X9+3160]
	035 Add W1, W23, 2
	036 Move X2, [X9]
	037 Call Array.Resize, X0, X1
	038 Move X8, [X21]
	039 Compare X8, 0
	040 JumpIfEqual {89}
	041 Move X8, [X8+352]
	042 Compare X8, 0
	043 JumpIfEqual {89}
	044 Move W9, [X8+24]
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move X9, W23
	047 Move X9, X9
	048 ShiftRight X9, 61
	049 And X9, X9, 0xFFFFFFF
	050 Subtract X9, X9, W23
	051 Move X10, X20
	052 ShiftRight X10, 48
	053 And X10, X10, 0x7FFFFFFF
	054 Move X11, X20
	055 ShiftRight X11, 32
	056 And X11, X11, 0x7FFFFFFF
	057 Add X8, X8, X9
	058 Move [X8+38], W10
	059 NotImplemented "Instruction STRH not yet implemented."
	060 Move [X8+32], W20
	061 Move X8, [X21]
	062 Compare X8, 0
	063 JumpIfEqual {89}
	064 Move X8, [X8+352]
	065 Compare X8, 0
	066 JumpIfEqual {89}
	067 Move W10, [X8+24]
	068 Add W9, W23, 1
	069 NotImplemented "Instruction CMP not yet implemented."
	070 NotImplemented "Instruction SBFM not yet implemented."
	071 Subtract X9, X10, W9
	072 Move X11, X19
	073 ShiftRight X11, 48
	074 And X11, X11, 0x7FFFFFFF
	075 Move X12, X19
	076 ShiftRight X12, 32
	077 And X12, X12, 0x7FFFFFFF
	078 Add X8, X8, X9
	079 Move [X8+38], W11
	080 NotImplemented "Instruction STRH not yet implemented."
	081 Move [X8+32], W19
	082 Move X20, [X31+32]
	083 Move X19, [X31+40]
	084 Move X22, [X31+16]
	085 Move X21, [X31+24]
	086 Move X30, [X31+48]
	087 Move X23, [X31+56]
	088 Return 
	089 Call 0x1C17F20
	090 Call 0x1C17F28

Method: System.UInt16 GetControlIndex(UnityEngine.InputSystem.InputControl control)

Disassembly:
	0x0381E8E8 ANDS X31, X0, 0x1FF
	0x0381E8EC MOVK X12, 0xEC9F0000
	0x0381E8F0 MOVK X9, 0x5B410000
	0x0381E8F4 CSEL X10, X11, X10, EQ
	0x0381E8F8 ANDS X31, X0, 0x1FFFFFF
	0x0381E8FC MOVZ W11, 0x90F5
	0x0381E900 CSEL X9, X9, X12, EQ
	0x0381E904 MOVZ W12, 0xE253
	0x0381E908 MOVK W11, 0x515D0000
	0x0381E90C MOVK W12, 0xAFBE0000
	0x0381E910 ANDS X31, X0, 0x1FFFF
	0x0381E914 ORR X10, X10, X8, 0x0
	0x0381E918 CSEL X11, X12, X11, EQ
	0x0381E91C MOVZ X12, 0x394B
	0x0381E920 ADD X9, X10, X9
	0x0381E924 MOVZ X10, 0xFCB9
	0x0381E928 MOVK X12, 0xC5C50000
	0x0381E92C MOVK X10, 0xC2FA0000
	0x0381E930 ANDS X31, X0, 0x1FFFFFFFFFF
	0x0381E934 ADD X8, X11, X8
	0x0381E938 MOVZ W11, 0x9CA1
	0x0381E93C CSEL X10, X10, X12, EQ
	0x0381E940 MOVZ W12, 0x92D5
	0x0381E944 MOVK W11, 0x616E0000
	0x0381E948 MOVK W12, 0xF9EA0000
	0x0381E94C AND X9, X9, 0xFFFFFFFFFFFFFFFF
	0x0381E950 ANDS X31, X0, 0x1FFFFFFFF
	0x0381E954 ORR X10, X8, X10, 0x0
	0x0381E958 CSEL W11, W12, W11, EQ
	0x0381E95C ADD X9, X10, X9
	0x0381E960 ADD W8, W8, W11
	0x0381E964 AND X9, X9, 0x0
	0x0381E968 ORR X0, X9, X8, 0x0
	0x0381E96C RET
	0x0381E970 UBFM W8, W1, 0x10, 0xF
	0x0381E974 BFM X8, X0, 0x0, 0xF
	0x0381E978 BFM X8, X2, 0x20, 0xF
	0x0381E97C BFM X8, X3, 0x10, 0xF
	0x0381E980 MOV X0, X8
	0x0381E984 RET
	0x0381E988 ANDS W31, W4, 0x1
	0x0381E98C MOVZ W8, 0x100
	0x0381E990 CSEL X9, X8, X31, NE
	0x0381E994 ANDS W31, W5, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X0]
	005 Compare X8, 0
	006 JumpIfEqual {19}
	007 Move X8, [X8+336]
	008 Compare X8, 0
	009 JumpIfEqual {19}
	010 Move W9, [X8+24]
	011 Move W0, W31
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Add X10, X8, W0
	014 Move X10, [X10+32]
	015 NotImplemented "Instruction CMP not yet implemented."
	016 Add W0, W0, 1
	017 Compare X8, 0
	018 JumpIfNotEqual {12}
	019 Call 0x1C17F20
	020 Move X20, [X31+16]
	021 Move X19, [X31+24]
	022 Move X30, [X31+32]
	023 Return X0
	024 Move X0, 0x92D000
	025 Move X0, [X0+3176]
	026 Move X19, X1
	027 Call 0x1C17D08
	028 Move X1, X19
	029 Move X2, X31
	030 Call String.Format, X0, X1
	031 Move X19, X0
	032 Move X0, 0x8D6000
	033 Move X0, [X0+1456]
	034 Call 0x1C17D08
	035 Call 0x1C17F10
	036 Move X1, X19
	037 Move X2, X31
	038 Move X20, X0
	039 Call InvalidOperationException..ctor, X0, X1
	040 Move X0, 0x92D000
	041 Move X0, [X0+3184]
	042 Call 0x1C17D08
	043 Move X1, X0
	044 Move X0, X20
	045 Call 0x1C17DEC
	046 Call 0x1C17F28

Method: UnityEngine.InputSystem.Layouts.InputDeviceBuilder get_instance()

Disassembly:
	0x0381E998 CSEL X10, X8, X31, NE
	0x0381E99C ANDS W31, W6, 0x1
	0x0381E9A0 BFM X9, X0, 0x0, 0x0
	0x0381E9A4 BFM X10, X1, 0x0, 0x0
	0x0381E9A8 CSEL W11, W8, W31, NE
	0x0381E9AC ANDS W31, W7, 0x1
	0x0381E9B0 BFM W11, W2, 0x0, 0x0
	0x0381E9B4 CSEL W8, W8, W31, NE
	0x0381E9B8 ORR X9, X9, X10, 0x10
	0x0381E9BC BFM W8, W3, 0x0, 0x0
	0x0381E9C0 ORR X9, X9, X11, 0x20
	0x0381E9C4 ORR X0, X9, X8, 0x30
	0x0381E9C8 RET
	0x0381E9CC ANDS W31, W0, 0x1
	0x0381E9D0 MOVZ W8, 0x100
	0x0381E9D4 CSEL X8, X8, X31, NE
	0x0381E9D8 BFM X8, X0, 0x0, 0x0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xBC4000
	005 Move X20, 0x92D000
	006 Move W8, [X19+1319]
	007 Move X20, [X20+3192]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x92D000
	013 Move X0, [X0+3192]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+1319], W8
	017 Move X8, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X0, [X8+184]
	021 Move X30, [X31+32]
	022 Return X0

Method: UnityEngine.InputSystem.Layouts.InputDeviceBuilder/RefInstance Ref()

Disassembly:
	0x0381E9DC MOV X9, X8
	0x0381E9E0 ORR X9, X9, X8, 0x30
	0x0381E9E4 ORR X0, X9, X8, 0x10
	0x0381E9E8 RET
	0x0381E9EC MOVZ X12, 0x1
	0x0381E9F0 UBFM X9, X0, 0x10, 0x3F
	0x0381E9F4 UBFM X10, X0, 0x8, 0x3F
	0x0381E9F8 MOVK X12, 0x1000000
	0x0381E9FC UBFM X8, X0, 0x18, 0x3F
	0x0381EA00 UBFM X11, X0, 0x8, 0x8
	0x0381EA04 AND X12, X0, X12, 0x0
	0x0381EA08 AND X14, X9, 0x1FFFF
	0x0381EA0C AND X10, X10, 0x1FF
	0x0381EA10 AND W9, W9, 0x100
	0x0381EA14 AND X13, X8, 0x1FFFFFF
	0x0381EA18 AND W8, W8, 0x10000
	0x0381EA1C ORR W9, W9, W11, 0x0
	0x0381EA20 ORR X10, X12, X10, 0x0
	0x0381EA24 ORR W8, W9, W8, 0x0
	0x0381EA28 ORR X9, X10, X14, 0x0
	0x0381EA2C ORR X9, X9, X13, 0x0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xBC4000
	005 Move X20, 0x92D000
	006 Move W8, [X19+1320]
	007 Move X20, [X20+3192]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x92D000
	013 Move X0, [X0+3192]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+1320], W8
	017 Move X8, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X0, X31
	021 Move X8, [X8+184]
	022 Move W9, [X8+40]
	023 Add W9, W9, 1
	024 Move [X8+40], W9
	025 Move X30, [X31+32]
	026 Return X0

