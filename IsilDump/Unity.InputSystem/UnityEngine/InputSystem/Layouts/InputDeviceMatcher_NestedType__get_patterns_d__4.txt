Type: UnityEngine.InputSystem.Layouts.InputDeviceMatcher/<get_patterns>d__4

Method: System.Void .ctor(System.Int32 <>1__state)

Disassembly:
	0x03756CC4 AND W8, W8, 0x1
	0x03756CC8 ADD W0, W19, W8
	0x03756CCC LDP X20, X19, [X31 + 0x10]
	0x03756CD0 LDP X30, X21, [X31], #0x20
	0x03756CD4 RET
	0x03756CD8 SUB X31, X31, 0x30
	0x03756CDC STP X30, X21, [X31 + 0x10]
	0x03756CE0 STP X20, X19, [X31 + 0x20]
	0x03756CE4 ADRP X20, 0xC8A000
	0x03756CE8 LDRB W8, [X20 + 0xDD7]
	0x03756CEC MOV X19, X0
	0x03756CF0 TBNZ X8, 0x0, 0x3756D08
	0x03756CF4 ADRP X0, 0x9C5000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move X0, X31
	009 Move [X20+16], W19
	010 Call Environment.get_CurrentManagedThreadId
	011 Move [X20+40], W0
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move X30, [X31+32]
	015 Return 

Method: System.Void System.IDisposable.Dispose()

Disassembly:
	0x03758D78 RET

ISIL:
	001 Return 

Method: System.Boolean MoveNext()

Disassembly:
	0x03758D7C LDR X0, [X0 + 0x130]
	0x03758D80 RET
	0x03758D84 STR X1, [X0 + 0x130]
	0x03758D88 RET
	0x03758D8C LDR X0, [X0 + 0x138]
	0x03758D90 RET
	0x03758D94 STR X1, [X0 + 0x138]
	0x03758D98 RET
	0x03758D9C STP X30, X25, [X31 - 0x40]!
	0x03758DA0 STP X24, X23, [X31 + 0x10]
	0x03758DA4 STP X22, X21, [X31 + 0x20]
	0x03758DA8 STP X20, X19, [X31 + 0x30]
	0x03758DAC ADRP X25, 0xC88000
	0x03758DB0 ADRP X24, 0x9ED000
	0x03758DB4 ADRP X20, 0x9EC000
	0x03758DB8 ADRP X23, 0x9ED000
	0x03758DBC ADRP X22, 0x9D4000
	0x03758DC0 ADRP X21, 0x9DF000
	0x03758DC4 LDRB W8, [X25 + 0xDF2]
	0x03758DC8 LDR X24, [X24 + 0xFA8]
	0x03758DCC LDR X20, [X20 + 0xE30]
	0x03758DD0 LDR X23, [X23 + 0xFB0]
	0x03758DD4 LDR X22, [X22 + 0xB38]
	0x03758DD8 LDR X21, [X21 + 0x760]
	0x03758DDC MOV X19, X0
	0x03758DE0 TBNZ X8, 0x0, 0x3758E28
	0x03758DE4 ADRP X0, 0x9EC000
	0x03758DE8 LDR X0, [X0 + 0xE30]
	0x03758DEC BL 0x1C16CF4
	0x03758DF0 ADRP X0, 0x9ED000
	0x03758DF4 LDR X0, [X0 + 0xFA8]
	0x03758DF8 BL 0x1C16CF4
	0x03758DFC ADRP X0, 0x9ED000
	0x03758E00 LDR X0, [X0 + 0xFB0]
	0x03758E04 BL 0x1C16CF4
	0x03758E08 ADRP X0, 0x9D4000
	0x03758E0C LDR X0, [X0 + 0xB38]
	0x03758E10 BL 0x1C16CF4
	0x03758E14 ADRP X0, 0x9DF000
	0x03758E18 LDR X0, [X0 + 0x760]
	0x03758E1C BL 0x1C16CF4
	0x03758E20 MOVZ W8, 0x1
	0x03758E24 STRB W8, [X25 + 0xDF2]
	0x03758E28 MOV X0, X19
	0x03758E2C BL 0x3758E94
	0x03758E30 LDR X1, [X24]
	0x03758E34 LDR X2, [X20]
	0x03758E38 MOV X0, X19
	0x03758E3C BL 0x21FC754
	0x03758E40 STR X0, [X19 + 0x120]
	0x03758E44 LDR X1, [X23]
	0x03758E48 LDR X2, [X20]
	0x03758E4C MOV X0, X19
	0x03758E50 BL 0x21FC754
	0x03758E54 STR X0, [X19 + 0x128]
	0x03758E58 LDR X1, [X22]
	0x03758E5C LDR X2, [X20]
	0x03758E60 MOV X0, X19
	0x03758E64 BL 0x21FC754
	0x03758E68 STR X0, [X19 + 0x130]
	0x03758E6C LDR X1, [X21]
	0x03758E70 LDR X2, [X20]
	0x03758E74 MOV X0, X19
	0x03758E78 BL 0x21FC754
	0x03758E7C STR X0, [X19 + 0x138]
	0x03758E80 LDP X20, X19, [X31 + 0x30]
	0x03758E84 LDP X22, X21, [X31 + 0x20]
	0x03758E88 LDP X24, X23, [X31 + 0x10]
	0x03758E8C LDP X30, X25, [X31], #0x40
	0x03758E90 RET
	0x03758E94 STR X30, [X31 - 0x40]!
	0x03758E98 STP X24, X23, [X31 + 0x10]
	0x03758E9C STP X22, X21, [X31 + 0x20]
	0x03758EA0 STP X20, X19, [X31 + 0x30]
	0x03758EA4 ADRP X23, 0xC88000
	0x03758EA8 ADRP X24, 0x9C3000
	0x03758EAC ADRP X21, 0x9EC000
	0x03758EB0 ADRP X22, 0x9C3000
	0x03758EB4 ADRP X20, 0x9ED000
	0x03758EB8 LDRB W8, [X23 + 0xE14]
	0x03758EBC LDR X24, [X24 + 0x780]
	0x03758EC0 LDR X21, [X21 + 0xE30]
	0x03758EC4 LDR X22, [X22 + 0x788]
	0x03758EC8 LDR X20, [X20 + 0xFB8]
	0x03758ECC MOV X19, X0
	0x03758ED0 TBNZ X8, 0x0, 0x3758F0C
	0x03758ED4 ADRP X0, 0x9ED000

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xC89000
	007 Move W8, [X20+3554]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {24}
	013 Move X0, 0x9EE000
	014 Move X0, [X0+3936]
	015 Call 0x1C17CF4
	016 Move X0, 0x9EE000
	017 Move X0, [X0+3808]
	018 Call 0x1C17CF4
	019 Move X0, 0x9EE000
	020 Move X0, [X0+3816]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X20+3554], W8
	024 Move W8, [X19+16]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Compare W8, 0
	027 JumpIfNotEqual {95}
	028 Move X9, [X19+48]
	029 Move TEMP, 0
	030 Not TEMP
	031 Move W8, TEMP
	032 Move [X19+16], W8
	033 Compare X9, 0
	034 JumpIfEqual {95}
	035 Move W9, [X9+24]
	036 Move W8, W31
	037 Move [X19+64], W9
	038 Move [X19+68], W31
	039 Move W9, [X19+64]
	040 Move W8, [X19+68]
	041 Move TEMP, 0
	042 Not TEMP
	043 Move W10, TEMP
	044 Move [X19+16], W10
	045 Add W8, W8, 1
	046 Move [X19+68], W8
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move X9, [X19+48]
	049 Compare X9, 0
	050 JumpIfEqual {102}
	051 Move W10, [X9+24]
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move W10, 24
	054 Move X21, 0xC89000
	055 NotImplemented "Instruction SMADDL not yet implemented."
	056 Move W9, [X21+3657]
	057 Move X20, [X8+32]
	058 Move TEMP, X9
	059 And TEMP, TEMP, 1
	060 Compare TEMP, 1
	061 JumpIfEqual {67}
	062 Move X0, 0x99E000
	063 Move X0, [X0+632]
	064 Call 0x1C17CF4
	065 Move W8, 1
	066 Move [X21+3657], W8
	067 Compare X20, 0
	068 JumpIfNotEqual {74}
	069 Move X8, 0x99E000
	070 Move X8, [X8+632]
	071 Move X8, [X8]
	072 Move X8, [X8+184]
	073 Move X20, [X8]
	074 Move X8, [X19+48]
	075 Compare X8, 0
	076 JumpIfEqual {102}
	077 NotImplemented "Instruction LDRSW not yet implemented."
	078 Move W10, [X8+24]
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Move X11, 0x9EE000
	081 Move X11, [X11+3936]
	082 Move W10, 24
	083 NotImplemented "Instruction MADD not yet implemented."
	084 Move X2, [X8+48]
	085 Move X3, [X11]
	086 Add X0, X31, 0
	087 Move X1, X20
	088 Move [X31], X31
	089 Move [X31+8], X31
	090 Call KeyValuePair`2<Object, Object>..ctor, X0, X1, X2
	091 Move V0, [X31]
	092 Move W0, 1
	093 Move [X19+16], W0
	094 Move [X19+24], V0
	095 Move W0, W31
	096 Move X20, [X31+32]
	097 Move X19, [X31+40]
	098 Move X30, [X31+16]
	099 Move X21, [X31+24]
	100 Add X31, X31, 48
	101 Return X0
	102 Call 0x1C17F20
	103 Call 0x1C17F28

Method: System.Collections.Generic.KeyValuePair`2<System.String, System.Object> System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.get_Current()

Disassembly:
	0x03758ED8 LDR X0, [X0 + 0xFB8]
	0x03758EDC BL 0x1C16CF4
	0x03758EE0 ADRP X0, 0x9EC000

ISIL:
	001 Move X8, [X0+24]
	002 Move X1, [X0+32]
	003 Move X0, X8
	004 Return X0

Method: System.Void System.Collections.IEnumerator.Reset()

Disassembly:
	0x03758EE4 LDR X0, [X0 + 0xE30]
	0x03758EE8 BL 0x1C16CF4
	0x03758EEC ADRP X0, 0x9C3000
	0x03758EF0 LDR X0, [X0 + 0x780]
	0x03758EF4 BL 0x1C16CF4
	0x03758EF8 ADRP X0, 0x9C3000
	0x03758EFC LDR X0, [X0 + 0x788]
	0x03758F00 BL 0x1C16CF4
	0x03758F04 MOVZ W8, 0x1
	0x03758F08 STRB W8, [X23 + 0xE14]
	0x03758F0C LDR X1, [X24]
	0x03758F10 LDR X2, [X21]
	0x03758F14 MOV X0, X19
	0x03758F18 BL 0x21FC754

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0x99C000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0x9EE000
	011 Move X0, [X0+3944]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x03758F1C STR X0, [X19 + 0x110]
	0x03758F20 LDR X1, [X22]
	0x03758F24 LDR X2, [X21]
	0x03758F28 MOV X0, X19
	0x03758F2C BL 0x21FC754
	0x03758F30 STR X0, [X19 + 0x118]
	0x03758F34 LDR X1, [X20]
	0x03758F38 MOV X0, X19
	0x03758F3C LDP X20, X19, [X31 + 0x30]
	0x03758F40 LDP X22, X21, [X31 + 0x20]
	0x03758F44 LDP X24, X23, [X31 + 0x10]
	0x03758F48 LDR X30, [X31], #0x40
	0x03758F4C B 0x2E0A244
	0x03758F50 B 0x3758F54
	0x03758F54 STR X30, [X31 - 0x30]!
	0x03758F58 STP X22, X21, [X31 + 0x10]
	0x03758F5C STP X20, X19, [X31 + 0x20]
	0x03758F60 ADRP X21, 0xC88000
	0x03758F64 ADRP X22, 0x9ED000
	0x03758F68 ADRP X20, 0x9C3000
	0x03758F6C LDRB W8, [X21 + 0xE13]
	0x03758F70 LDR X22, [X22 + 0xFC0]
	0x03758F74 LDR X20, [X20 + 0xD18]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xC89000
	007 Move X20, 0x9EE000
	008 Move W8, [X21+3555]
	009 Move X20, [X20+3952]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x9EE000
	016 Move X0, [X0+3952]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+3555], W8
	020 NotImplemented "Instruction LDUR not yet implemented."
	021 Move X0, [X20]
	022 Add X1, X31, 0
	023 Move [X31], V0
	024 Call 0x1C17E04
	025 Move X20, [X31+32]
	026 Move X19, [X31+40]
	027 Move X30, [X31+16]
	028 Move X21, [X31+24]
	029 Add X31, X31, 48
	030 Return X0

Method: System.Collections.Generic.IEnumerator`1<System.Collections.Generic.KeyValuePair`2<System.String, System.Object>> System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.GetEnumerator()

Disassembly:
	0x03758F78 MOV X19, X0
	0x03758F7C TBNZ X8, 0x0, 0x3758FA0
	0x03758F80 ADRP X0, 0x9ED000
	0x03758F84 LDR X0, [X0 + 0xFC0]
	0x03758F88 BL 0x1C16CF4
	0x03758F8C ADRP X0, 0x9C3000
	0x03758F90 LDR X0, [X0 + 0xD18]
	0x03758F94 BL 0x1C16CF4
	0x03758F98 MOVZ W8, 0x1
	0x03758F9C STRB W8, [X21 + 0xE13]
	0x03758FA0 LDR X1, [X22]
	0x03758FA4 MOV X0, X19
	0x03758FA8 BL 0x2E0A500
	0x03758FAC LDR X0, [X20]
	0x03758FB0 LDR W8, [X0 + 0xE0]
	0x03758FB4 CBNZ W8, 0x3758FC0
	0x03758FB8 BL 0x1C16DFC
	0x03758FBC LDR X0, [X20]
	0x03758FC0 LDR X8, [X0 + 0xB8]
	0x03758FC4 LDP X22, X21, [X31 + 0x10]
	0x03758FC8 LDR W8, [X8 + 0x34]
	0x03758FCC STR W8, [X19 + 0x10]
	0x03758FD0 LDP X20, X19, [X31 + 0x20]
	0x03758FD4 LDR X30, [X31], #0x30
	0x03758FD8 RET
	0x03758FDC SUB X31, X31, 0x30
	0x03758FE0 STP X30, X21, [X31 + 0x10]
	0x03758FE4 STP X20, X19, [X31 + 0x20]
	0x03758FE8 ADRP X21, 0xC88000
	0x03758FEC ADRP X20, 0x9C3000
	0x03758FF0 LDRB W8, [X21 + 0xDF3]
	0x03758FF4 LDR X20, [X20 + 0xD18]
	0x03758FF8 MOV X19, X0
	0x03758FFC TBNZ X8, 0x0, 0x3759014
	0x03759000 ADRP X0, 0x9C2000
	0x03759004 LDR X0, [X0 + 0xD18]
	0x03759008 BL 0x1C16CF4
	0x0375900C MOVZ W8, 0x1
	0x03759010 STRB W8, [X21 + 0xDF3]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xC89000
	005 Move W8, [X20+3556]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x9EE000
	012 Move X0, [X0+3760]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3556], W8
	016 Move W8, [X19+16]
	017 Add W31, W8, 2
	018 Move W20, [X19+40]
	019 Move X0, X31
	020 Call Environment.get_CurrentManagedThreadId
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move [X19+16], W31
	023 Move X20, X19
	024 Move X8, 0x9EE000
	025 Move X8, [X8+3760]
	026 Move X0, [X8]
	027 Call 0x1C17F10
	028 Move X1, X31
	029 Move X20, X0
	030 Call Object..ctor, X0
	031 Move X0, X31
	032 Move [X20+16], W31
	033 Call Environment.get_CurrentManagedThreadId
	034 Move [X20+40], W0
	035 Move X8, [X19+56]
	036 Move X0, X20
	037 Move [X20+48], X8
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move X30, [X31+32]
	041 Return X0

Method: System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()

Disassembly:
	0x03759014 MOV X0, X19

ISIL:
	001 Call <get_patterns>d__4.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.GetEnumerator, X0
	002 Return X0

