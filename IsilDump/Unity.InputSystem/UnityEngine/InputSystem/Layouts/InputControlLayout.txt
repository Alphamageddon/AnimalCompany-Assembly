Type: UnityEngine.InputSystem.Layouts.InputControlLayout

Method: UnityEngine.InputSystem.Utilities.InternedString get_DefaultVariant()

Disassembly:
	0x03811BE8 LDR X23, [X23 + 0xDC0]
	0x03811BEC MOV X19, X2
	0x03811BF0 MOV X20, X1
	0x03811BF4 MOV X21, X0
	0x03811BF8 TBNZ X8, 0x0, 0x3811C10
	0x03811BFC ADRP X0, 0x90A000
	0x03811C00 LDR X0, [X0 + 0xDC0]
	0x03811C04 BL 0x1C16CF4
	0x03811C08 MOVZ W8, 0x1
	0x03811C0C STRB W8, [X22 + 0x4D5]
	0x03811C10 LDR X0, [X23]
	0x03811C14 LDR W8, [X0 + 0xE0]
	0x03811C18 CBNZ W8, 0x3811C20
	0x03811C1C BL 0x1C16DFC
	0x03811C20 MOV X0, X21
	0x03811C24 MOV X1, X20
	0x03811C28 MOV X2, X19
	0x03811C2C BL 0x3812A14
	0x03811C30 MOV X0, X21
	0x03811C34 MOV X1, X20
	0x03811C38 MOV X2, X19
	0x03811C3C LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xBD1000
	005 Move X19, 0x90B000
	006 Move W8, [X20+1222]
	007 Move X19, [X19+3520]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x90B000
	013 Move X0, [X0+3520]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+1222], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X0, [X8]
	027 Move X1, [X8+8]
	028 Move X30, [X31+32]
	029 Return X0

Method: UnityEngine.InputSystem.Utilities.InternedString get_name()

Disassembly:
	0x03811C40 LDP X22, X21, [X31 + 0x10]
	0x03811C44 LDP X30, X23, [X31], #0x30
	0x03811C48 B 0x3812AA8

ISIL:
	001 Move X8, [X0+16]
	002 Move X1, [X0+24]
	003 Move X0, X8
	004 Return X0

Method: System.String get_displayName()

Disassembly:
	0x03811C4C SUB X31, X31, 0x30
	0x03811C50 STP X30, X21, [X31 + 0x10]
	0x03811C54 STP X20, X19, [X31 + 0x20]
	0x03811C58 MOV X20, X1
	0x03811C5C MOV X1, X31
	0x03811C60 MOV X19, X2
	0x03811C64 MOV X21, X0
	0x03811C68 BL 0x33BDD8C

ISIL:
	001 Move X8, [X0+152]
	002 Compare X8, 0
	003 JumpIfEqual {6}
	004 Move X0, X8
	005 Return X0
	006 Move X8, [X0+16]
	007 Move X1, [X0+24]
	008 Move X2, X31
	009 Move X0, X8
	010 Call InternedString.op_Implicit, X0
	011 Return X0

Method: System.Type get_type()

Disassembly:
	0x03811C6C ADD X0, X31, 0x0
	0x03811C70 MOV X1, X20

ISIL:
	001 Move X0, [X0+32]
	002 Return X0

Method: UnityEngine.InputSystem.Utilities.InternedString get_variants()

Disassembly:
	0x03811C74 MOV X2, X31
	0x03811C78 STP X31, X31, [X31]
	0x03811C7C BL 0x3757420

ISIL:
	001 Move X8, [X0+40]
	002 Move X1, [X0+48]
	003 Move X0, X8
	004 Return X0

Method: UnityEngine.InputSystem.Utilities.FourCC get_stateFormat()

Disassembly:
	0x03811C80 LDR V0, [X31]
	0x03811C84 STR X19, [X21 + 0x20]

ISIL:
	001 Move W0, [X0+56]
	002 Return X0

Method: System.Int32 get_stateSizeInBytes()

Disassembly:
	0x03811C88 LDP X20, X19, [X31 + 0x20]
	0x03811C8C STR V0, [X21 + 0x1]

ISIL:
	001 Move W0, [X0+60]
	002 Return X0

Method: System.Collections.Generic.IEnumerable`1<UnityEngine.InputSystem.Utilities.InternedString> get_baseLayouts()

Disassembly:
	0x03811C90 LDP X30, X21, [X31 + 0x10]
	0x03811C94 ADD X31, X31, 0x30
	0x03811C98 RET
	0x03811C9C SUB X31, X31, 0xF0
	0x03811CA0 STP X30, X21, [X31 + 0xD0]
	0x03811CA4 STP X20, X19, [X31 + 0xE0]
	0x03811CA8 ADRP X21, 0xBD0000
	0x03811CAC ADRP X20, 0x939000
	0x03811CB0 LDRB W8, [X21 + 0x4D3]
	0x03811CB4 LDR X20, [X20 + 0x798]
	0x03811CB8 MOV X19, X0
	0x03811CBC TBNZ X8, 0x0, 0x3811CD4
	0x03811CC0 ADRP X0, 0x939000
	0x03811CC4 LDR X0, [X0 + 0x798]
	0x03811CC8 BL 0x1C16CF4
	0x03811CCC MOVZ W8, 0x1
	0x03811CD0 STRB W8, [X21 + 0x4D3]
	0x03811CD4 ADD X8, X31, 0x68
	0x03811CD8 MOV X0, X19
	0x03811CDC BL 0x3811D18
	0x03811CE0 ADD X0, X31, 0x0
	0x03811CE4 ADD X1, X31, 0x68
	0x03811CE8 MOVZ W2, 0x68
	0x03811CEC BL 0x3EB1AC0

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+40], X21
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move X21, 0xBD1000
	007 Move X20, 0x93A000
	008 Move W8, [X21+1223]
	009 Move X20, [X20+1792]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x93A000
	016 Move X0, [X0+1792]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+1223], W8
	020 NotImplemented "Instruction LDUR not yet implemented."
	021 NotImplemented "Instruction LDUR not yet implemented."
	022 Move X0, [X20]
	023 Add X1, X31, 0
	024 Move [X31], V1
	025 Move [X31+8], V0
	026 Call 0x1C17E04
	027 Move X20, [X31+48]
	028 Move X19, [X31+56]
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Add X31, X31, 64
	032 Return X0

Method: System.Collections.Generic.IEnumerable`1<UnityEngine.InputSystem.Utilities.InternedString> get_appliedOverrides()

Disassembly:
	0x03811CF0 LDR X0, [X20]
	0x03811CF4 ADD X1, X31, 0x0
	0x03811CF8 BL 0x1C16E04
	0x03811CFC MOVZ W1, 0x1
	0x03811D00 MOV X2, X31
	0x03811D04 BL 0x3C86C28
	0x03811D08 LDP X20, X19, [X31 + 0xE0]
	0x03811D0C LDP X30, X21, [X31 + 0xD0]
	0x03811D10 ADD X31, X31, 0xF0
	0x03811D14 RET
	0x03811D18 SUB X31, X31, 0xC0
	0x03811D1C STP X30, X25, [X31 + 0x80]
	0x03811D20 STP X24, X23, [X31 + 0x90]
	0x03811D24 STP X22, X21, [X31 + 0xA0]
	0x03811D28 STP X20, X19, [X31 + 0xB0]
	0x03811D2C ADRP X21, 0xBD0000
	0x03811D30 LDRB W9, [X21 + 0x4EF]
	0x03811D34 MOV X20, X0
	0x03811D38 MOV X19, X8
	0x03811D3C TBNZ X9, 0x0, 0x3811DCC
	0x03811D40 ADRP X0, 0x939000
	0x03811D44 LDR X0, [X0 + 0x7A0]
	0x03811D48 BL 0x1C16CF4
	0x03811D4C ADRP X0, 0x935000

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+40], X21
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move X21, 0xBD1000
	007 Move X20, 0x93A000
	008 Move W8, [X21+1224]
	009 Move X20, [X20+1792]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x93A000
	016 Move X0, [X0+1792]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+1224], W8
	020 NotImplemented "Instruction LDUR not yet implemented."
	021 NotImplemented "Instruction LDUR not yet implemented."
	022 Move X0, [X20]
	023 Add X1, X31, 0
	024 Move [X31], V1
	025 Move [X31+8], V0
	026 Call 0x1C17E04
	027 Move X20, [X31+48]
	028 Move X19, [X31+56]
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Add X31, X31, 64
	032 Return X0

Method: UnityEngine.InputSystem.Utilities.ReadOnlyArray`1<UnityEngine.InputSystem.Utilities.InternedString> get_commonUsages()

Disassembly:
	0x03811D50 LDR X0, [X0 + 0x668]
	0x03811D54 BL 0x1C16CF4
	0x03811D58 ADRP X0, 0x939000
	0x03811D5C LDR X0, [X0 + 0x7A8]
	0x03811D60 BL 0x1C16CF4
	0x03811D64 ADRP X0, 0x936000
	0x03811D68 LDR X0, [X0 + 0xD80]
	0x03811D6C BL 0x1C16CF4
	0x03811D70 ADRP X0, 0x8E6000
	0x03811D74 LDR X0, [X0 + 0xBF0]
	0x03811D78 BL 0x1C16CF4
	0x03811D7C ADRP X0, 0x8E6000
	0x03811D80 LDR X0, [X0 + 0xBF8]
	0x03811D84 BL 0x1C16CF4
	0x03811D88 ADRP X0, 0x939000
	0x03811D8C LDR X0, [X0 + 0x7B0]
	0x03811D90 BL 0x1C16CF4
	0x03811D94 ADRP X0, 0x939000
	0x03811D98 LDR X0, [X0 + 0x7B8]
	0x03811D9C BL 0x1C16CF4
	0x03811DA0 ADRP X0, 0x939000
	0x03811DA4 LDR X0, [X0 + 0x7C0]
	0x03811DA8 BL 0x1C16CF4
	0x03811DAC ADRP X0, 0x939000

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xBD1000
	007 Move X20, 0x93A000
	008 Move W8, [X21+1225]
	009 Move X20, [X20+1800]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x93A000
	016 Move X0, [X0+1800]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+1225], W8
	020 Move X1, [X19+136]
	021 Move X2, [X20]
	022 Add X0, X31, 0
	023 Move [X31], X31
	024 Move [X31+8], X31
	025 Call ReadOnlyArray`1<InternedString>..ctor, X0, X1
	026 Move X0, [X31]
	027 Move X1, [X31+8]
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X30, [X31+16]
	031 Move X21, [X31+24]
	032 Add X31, X31, 48
	033 Return X0

Method: UnityEngine.InputSystem.Utilities.ReadOnlyArray`1<UnityEngine.InputSystem.Layouts.InputControlLayout/ControlItem> get_controls()

Disassembly:
	0x03811DB0 LDR X0, [X0 + 0x7C8]
	0x03811DB4 BL 0x1C16CF4
	0x03811DB8 ADRP X0, 0x8E4000
	0x03811DBC LDR X0, [X0 + 0x7E0]
	0x03811DC0 BL 0x1C16CF4
	0x03811DC4 MOVZ W8, 0x1
	0x03811DC8 STRB W8, [X21 + 0x4EF]
	0x03811DCC MOVI V0.2D, 0x0
	0x03811DD0 STP X31, X31, [X31 + 0x8]
	0x03811DD4 STR W31, [X31]
	0x03811DD8 STP V0, V0, [X31 + 0x20]
	0x03811DDC STP V0, V0, [X31 + 0x40]
	0x03811DE0 STP V0, V0, [X31 + 0x60]
	0x03811DE4 CBZ X20, 0x3812054
	0x03811DE8 LDP X0, X1, [X20 + 0x10]
	0x03811DEC MOV X2, X31
	0x03811DF0 BL 0x37577E0
	0x03811DF4 STR X0, [X31 + 0x18]
	0x03811DF8 LDR X0, [X20 + 0x20]
	0x03811DFC CBZ X0, 0x3811E10
	0x03811E00 LDR X8, [X0]
	0x03811E04 LDR X9, [X8 + 0x2D8]
	0x03811E08 LDR X1, [X8 + 0x2E0]
	0x03811E0C BLR X9

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xBD1000
	007 Move X20, 0x93A000
	008 Move W8, [X21+1226]
	009 Move X20, [X20+1808]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x93A000
	016 Move X0, [X0+1808]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+1226], W8
	020 Move X1, [X19+144]
	021 Move X2, [X20]
	022 Add X0, X31, 0
	023 Move [X31], X31
	024 Move [X31+8], X31
	025 Call ReadOnlyArray`1<ControlItem>..ctor, X0, X1
	026 Move X0, [X31]
	027 Move X1, [X31+8]
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X30, [X31+16]
	031 Move X21, [X31+24]
	032 Add X31, X31, 48
	033 Return X0

Method: System.Boolean get_updateBeforeRender()

Disassembly:
	0x03811E10 STR X0, [X31 + 0x60]
	0x03811E14 LDP X0, X1, [X20 + 0x28]
	0x03811E18 MOV X2, X31
	0x03811E1C BL 0x37577E0
	0x03811E20 STR X0, [X31 + 0x68]
	0x03811E24 LDUR V0, [X20 + 0x98]
	0x03811E28 MOV X21, X20
	0x03811E2C STUR V0, [X31 + 0x50]
	0x03811E30 LDRB W8, [X20 + 0xA8]
	0x03811E34 AND W9, W8, 0x1
	0x03811E38 UBFM W8, W8, 0x1, 0x1
	0x03811E3C STRB W9, [X31 + 0x70]
	0x03811E40 STRB W8, [X31 + 0x71]
	0x03811E44 LDR W8, [X21 + 0x48]!
	0x03811E48 CMP W8, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xBD1000
	005 Move W8, [X20+1227]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x8ED000
	012 Move X0, [X0+368]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1227], W8
	016 Move W0, [X19+65]
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 Move X30, [X31+32]
	020 Return X0

Method: System.Boolean get_isDeviceLayout()

Disassembly:
	0x03811E4C B.NE 0x3811E80
	0x03811E50 ADRP X8, 0x936000
	0x03811E54 LDR X8, [X8 + 0xD80]
	0x03811E58 MOV X0, X21
	0x03811E5C MOV W1, W31
	0x03811E60 LDR X2, [X8]
	0x03811E64 BL 0x2DE8D70
	0x03811E68 STP X0, X1, [X31 + 0x8]
	0x03811E6C ADD X0, X31, 0x8
	0x03811E70 MOV X1, X31
	0x03811E74 BL 0x37565F4
	0x03811E78 LDR W8, [X21]
	0x03811E7C B 0x3811E84
	0x03811E80 MOV X0, X31
	0x03811E84 ADRP X24, 0x939000
	0x03811E88 LDR X24, [X24 + 0x7C0]
	0x03811E8C CMP W8, 0x2
	0x03811E90 STR X0, [X31 + 0x20]
	0x03811E94 B.LT 0x3811F24
	0x03811E98 LDR X0, [X24]
	0x03811E9C LDR W8, [X0 + 0xE0]
	0x03811EA0 CBNZ W8, 0x3811EAC
	0x03811EA4 BL 0x1C16DFC
	0x03811EA8 LDR X0, [X24]
	0x03811EAC LDR X8, [X0 + 0xB8]
	0x03811EB0 LDR X22, [X8 + 0x10]
	0x03811EB4 CBNZ X22, 0x3811F08
	0x03811EB8 LDR W8, [X0 + 0xE0]
	0x03811EBC CBNZ W8, 0x3811EC8
	0x03811EC0 BL 0x1C16DFC
	0x03811EC4 LDR X0, [X24]
	0x03811EC8 ADRP X9, 0x935000
	0x03811ECC LDR X8, [X0 + 0xB8]
	0x03811ED0 LDR X9, [X9 + 0x668]
	0x03811ED4 LDR X23, [X8]
	0x03811ED8 LDR X0, [X9]
	0x03811EDC BL 0x1C16F10

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xBD1000
	007 Move X20, 0x938000
	008 Move X21, 0x8E3000
	009 Move W8, [X22+1228]
	010 Move X20, [X20+232]
	011 Move X21, [X21+1728]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x938000
	018 Move X0, [X0+232]
	019 Call 0x1C17CF4
	020 Move X0, 0x8E3000
	021 Move X0, [X0+1728]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+1228], W8
	025 Move X0, [X21]
	026 Move X20, [X20]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X0, X20
	032 Move X1, X31
	033 Call Type.GetTypeFromHandle, X0
	034 Compare X0, 0
	035 JumpIfEqual {46}
	036 Move X8, [X0]
	037 Move X1, [X19+32]
	038 Move X20, [X31+32]
	039 Move X19, [X31+40]
	040 Move X22, [X31+16]
	041 Move X21, [X31+24]
	042 Move X3, [X8+680]
	043 Move X2, [X8+688]
	044 Move X30, [X31+48]
	045 CallNoReturn X3
	046 Call 0x1C17F20

Method: System.Boolean get_isControlLayout()

Disassembly:
	0x03811EE0 ADRP X8, 0x939000
	0x03811EE4 LDR X8, [X8 + 0x7B0]
	0x03811EE8 MOV X1, X23
	0x03811EEC MOV X3, X31
	0x03811EF0 MOV X22, X0
	0x03811EF4 LDR X2, [X8]

ISIL:
	001 Move [X31-16], X30
	002 Call InputControlLayout.get_isDeviceLayout, X0
	003 NotImplemented "Instruction ORN not yet implemented."
	004 And W0, W8, 1
	005 Move X30, [X31+16]
	006 Return X0

Method: System.Boolean get_isOverride()

Disassembly:
	0x03811EF8 BL 0x2D2DC94
	0x03811EFC LDR X8, [X24]
	0x03811F00 LDR X8, [X8 + 0xB8]

ISIL:
	001 Move W8, [X0+168]
	002 Move W0, W8
	003 ShiftRight W0, 2
	004 And W0, W0, 3
	005 Return X0

Method: System.Void set_isOverride(System.Boolean value)

Disassembly:
	0x03811F04 STR X22, [X8 + 0x10]
	0x03811F08 ADRP X8, 0x939000
	0x03811F0C LDR X8, [X8 + 0x7A8]
	0x03811F10 MOV X0, X21
	0x03811F14 MOV X1, X22
	0x03811F18 LDR X2, [X8]
	0x03811F1C BL 0x212F5C8
	0x03811F20 B 0x3811F28

ISIL:
	001 Move W8, [X0+168]
	002 And W31, W1, 1
	003 Move W9, 4
	004 NotImplemented "Instruction CSEL not yet implemented."
	005 And W8, W8, 0xFFFFFFFB
	006 Or W8, W8, W9
	007 Move [X0+168], W8
	008 Return 

Method: System.Boolean get_isGenericTypeOfDevice()

Disassembly:
	0x03811F24 MOV X0, X31
	0x03811F28 STR X0, [X31 + 0x28]
	0x03811F2C LDR W8, [X20 + 0x38]

ISIL:
	001 Move W8, [X0+168]
	002 And W0, W8, 1
	003 Return X0

Method: System.Void set_isGenericTypeOfDevice(System.Boolean value)

Disassembly:
	0x03811F30 ADD X0, X31, 0x0
	0x03811F34 MOV X1, X31
	0x03811F38 STR W8, [X31]
	0x03811F3C BL 0x375F524

ISIL:
	001 Move W8, [X0+168]
	002 NotImplemented "Instruction BFM not yet implemented."
	003 Move [X0+168], W8
	004 Return 

Method: System.Boolean get_hideInUI()

Disassembly:
	0x03811F40 LDR X8, [X24]
	0x03811F44 STR X0, [X31 + 0x30]
	0x03811F48 LDR X21, [X20 + 0x88]

ISIL:
	001 Move W8, [X0+168]
	002 Move W0, W8
	003 ShiftRight W0, 1
	004 And W0, W0, 1
	005 Return X0

Method: System.Void set_hideInUI(System.Boolean value)

Disassembly:
	0x03811F4C LDR W9, [X8 + 0xE0]
	0x03811F50 CBNZ W9, 0x3811F60
	0x03811F54 MOV X0, X8
	0x03811F58 BL 0x1C16DFC
	0x03811F5C LDR X8, [X24]
	0x03811F60 LDR X9, [X8 + 0xB8]
	0x03811F64 ADRP X25, 0x939000
	0x03811F68 LDR X22, [X9 + 0x18]

ISIL:
	001 Move W8, [X0+168]
	002 And W31, W1, 1
	003 Move W9, 2
	004 NotImplemented "Instruction CSEL not yet implemented."
	005 And W8, W8, 0xFFFFFFFD
	006 Or W8, W8, W9
	007 Move [X0+168], W8
	008 Return 

Method: System.Boolean get_isNoisy()

Disassembly:
	0x03811F6C LDR X25, [X25 + 0x7A0]
	0x03811F70 CBNZ X22, 0x3811FC8
	0x03811F74 LDR W9, [X8 + 0xE0]

ISIL:
	001 Move W8, [X0+168]
	002 Move W0, W8
	003 ShiftRight W0, 5
	004 And W0, W0, 31
	005 Return X0

Method: System.Void set_isNoisy(System.Boolean value)

Disassembly:
	0x03811F78 CBNZ W9, 0x3811F88
	0x03811F7C MOV X0, X8
	0x03811F80 BL 0x1C16DFC
	0x03811F84 LDR X8, [X24]
	0x03811F88 ADRP X9, 0x935000
	0x03811F8C LDR X8, [X8 + 0xB8]
	0x03811F90 LDR X9, [X9 + 0x668]
	0x03811F94 LDR X23, [X8]

ISIL:
	001 Move W8, [X0+168]
	002 And W31, W1, 1
	003 Move W9, 32
	004 NotImplemented "Instruction CSEL not yet implemented."
	005 And W8, W8, 0xFFFFFFDF
	006 Or W8, W8, W9
	007 Move [X0+168], W8
	008 Return 

Method: System.Nullable`1<System.Boolean> get_canRunInBackground()

Disassembly:
	0x03811F98 LDR X0, [X9]
	0x03811F9C BL 0x1C16F10
	0x03811FA0 ADRP X8, 0x939000
	0x03811FA4 LDR X8, [X8 + 0x7B8]
	0x03811FA8 MOV X1, X23
	0x03811FAC MOV X3, X31
	0x03811FB0 MOV X22, X0
	0x03811FB4 LDR X2, [X8]
	0x03811FB8 BL 0x2D2DC94
	0x03811FBC LDR X8, [X24]
	0x03811FC0 LDR X8, [X8 + 0xB8]
	0x03811FC4 STR X22, [X8 + 0x18]
	0x03811FC8 LDR X2, [X25]
	0x03811FCC MOV X0, X21
	0x03811FD0 MOV X1, X22
	0x03811FD4 BL 0x217C140
	0x03811FD8 STR X0, [X31 + 0x48]
	0x03811FDC LDR X0, [X20 + 0x90]
	0x03811FE0 BL 0x381755C
	0x03811FE4 STR X0, [X31 + 0x78]
	0x03811FE8 LDRB W8, [X20 + 0x40]!
	0x03811FEC CBZ W8, 0x3812014
	0x03811FF0 ADRP X8, 0x8E6000
	0x03811FF4 LDR X8, [X8 + 0xBF8]
	0x03811FF8 MOV X0, X20
	0x03811FFC LDR X1, [X8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xBD1000
	005 Move W8, [X20+1229]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x8E7000
	012 Move X0, [X0+4056]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1229], W8
	016 Move W8, [X19+168]
	017 NotImplemented "Instruction STRH not yet implemented."
	018 Move TEMP, X8
	019 And TEMP, TEMP, 16
	020 Compare TEMP, 16
	021 JumpIfEqual {23}
	022 Move X0, X31
	023 Move X9, 0x8E7000
	024 Move X9, [X9+4056]
	025 Move W1, W8
	026 ShiftRight W1, 3
	027 And W1, W1, 7
	028 Add X0, X31, 12
	029 Move X2, [X9]
	030 Call Nullable`1<Boolean>..ctor, X0, X1
	031 NotImplemented "Instruction LDRH not yet implemented."
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Return X0

Method: System.Void set_canRunInBackground(System.Nullable`1<System.Boolean> value)

Disassembly:
	0x03812000 BL 0x242D58C
	0x03812004 TBZ X0, 0x0, 0x381201C
	0x03812008 ADRP X8, 0x8E3000
	0x0381200C LDR X8, [X8 + 0x7E0]
	0x03812010 B 0x3812024
	0x03812014 MOV X8, X31
	0x03812018 B 0x3812028
	0x0381201C ADRP X8, 0x938000
	0x03812020 LDR X8, [X8 + 0x7C8]
	0x03812024 LDR X8, [X8]
	0x03812028 ADD X1, X31, 0x18
	0x0381202C MOVZ W2, 0x68
	0x03812030 MOV X0, X19
	0x03812034 STR X8, [X31 + 0x38]
	0x03812038 BL 0x3EB1AC0
	0x0381203C LDP X20, X19, [X31 + 0xB0]
	0x03812040 LDP X22, X21, [X31 + 0xA0]
	0x03812044 LDP X24, X23, [X31 + 0x90]
	0x03812048 LDP X30, X25, [X31 + 0x80]
	0x0381204C ADD X31, X31, 0xC0
	0x03812050 RET
	0x03812054 BL 0x1C16F20
	0x03812058 SUB X31, X31, 0xF0
	0x0381205C STP X30, X21, [X31 + 0xD0]
	0x03812060 STP X20, X19, [X31 + 0xE0]
	0x03812064 ADRP X20, 0xBCF000
	0x03812068 ADRP X21, 0x938000
	0x0381206C LDRB W8, [X20 + 0x4D4]
	0x03812070 LDR X21, [X21 + 0x7D0]
	0x03812074 MOV X19, X0
	0x03812078 TBNZ X8, 0x0, 0x3812090
	0x0381207C ADRP X0, 0x938000
	0x03812080 LDR X0, [X0 + 0x7D0]
	0x03812084 BL 0x1C16CF4
	0x03812088 MOVZ W8, 0x1
	0x0381208C STRB W8, [X20 + 0x4D4]
	0x03812090 LDR X1, [X21]
	0x03812094 ADD X8, X31, 0x0
	0x03812098 MOV X0, X19

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xBD0000
	007 Move W8, [X21+1230]
	008 Move X20, X1
	009 Move X19, X0
	010 NotImplemented "Instruction STRH not yet implemented."
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x8E6000
	016 Move X0, [X0+3056]
	017 Call 0x1C17CF4
	018 Move X0, 0x8E6000
	019 Move X0, [X0+3064]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+1230], W8
	023 Move W8, [X19+168]
	024 And W31, W20, 255
	025 Move X9, 0x8E6000
	026 Move X9, [X9+3064]
	027 Or W8, W8, 16
	028 Move [X19+168], W8
	029 Add X0, X31, 12
	030 Move X1, [X9]
	031 Call Nullable`1<Boolean>.get_Value, X0
	032 Move W8, [X19+168]
	033 Move TEMP, X0
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfNotEqual {39}
	037 Or W8, W8, 8
	038 And W8, W8, 0xFFFFFFEF
	039 And W8, W8, 0xFFFFFFF7
	040 Move [X19+168], W8
	041 Move X20, [X31+32]
	042 Move X19, [X31+40]
	043 Move X30, [X31+16]
	044 Move X21, [X31+24]
	045 Add X31, X31, 48
	046 Return 

Method: UnityEngine.InputSystem.Layouts.InputControlLayout/ControlItem get_Item(System.String path)

Disassembly:
	0x0381209C BL 0x221192C
	0x038120A0 ADD X0, X31, 0x68
	0x038120A4 ADD X1, X31, 0x0
	0x038120A8 MOVZ W2, 0x68
	0x038120AC BL 0x3EB1AC0
	0x038120B0 ADD X0, X31, 0x68
	0x038120B4 BL 0x38120C8
	0x038120B8 LDP X20, X19, [X31 + 0xE0]
	0x038120BC LDP X30, X21, [X31 + 0xD0]
	0x038120C0 ADD X31, X31, 0xF0
	0x038120C4 RET
	0x038120C8 STR X29, [X31 - 0x60]!
	0x038120CC STP X30, X27, [X31 + 0x10]
	0x038120D0 STP X26, X25, [X31 + 0x20]
	0x038120D4 STP X24, X23, [X31 + 0x30]
	0x038120D8 STP X22, X21, [X31 + 0x40]
	0x038120DC STP X20, X19, [X31 + 0x50]
	0x038120E0 SUB X31, X31, 0x340
	0x038120E4 ADRP X20, 0xBCF000
	0x038120E8 LDRB W8, [X20 + 0x4EE]
	0x038120EC MOV X19, X0
	0x038120F0 TBNZ X8, 0x0, 0x3812228
	0x038120F4 ADRP X0, 0x938000
	0x038120F8 LDR X0, [X0 + 0x760]
	0x038120FC BL 0x1C16CF4
	0x03812100 ADRP X0, 0x8E1000
	0x03812104 LDR X0, [X0 + 0xA28]
	0x03812108 BL 0x1C16CF4
	0x0381210C ADRP X0, 0x938000
	0x03812110 LDR X0, [X0 + 0x768]
	0x03812114 BL 0x1C16CF4
	0x03812118 ADRP X0, 0x938000
	0x0381211C LDR X0, [X0 + 0x7D8]
	0x03812120 BL 0x1C16CF4
	0x03812124 ADRP X0, 0x909000
	0x03812128 LDR X0, [X0 + 0xDC0]
	0x0381212C BL 0x1C16CF4
	0x03812130 ADRP X0, 0x933000
	0x03812134 LDR X0, [X0 + 0x6A0]
	0x03812138 BL 0x1C16CF4
	0x0381213C ADRP X0, 0x936000
	0x03812140 LDR X0, [X0 + 0xE8]
	0x03812144 BL 0x1C16CF4
	0x03812148 ADRP X0, 0x938000
	0x0381214C LDR X0, [X0 + 0x7E0]
	0x03812150 BL 0x1C16CF4
	0x03812154 ADRP X0, 0x938000
	0x03812158 LDR X0, [X0 + 0x7E8]
	0x0381215C BL 0x1C16CF4
	0x03812160 ADRP X0, 0x938000
	0x03812164 LDR X0, [X0 + 0x780]
	0x03812168 BL 0x1C16CF4
	0x0381216C ADRP X0, 0x938000
	0x03812170 LDR X0, [X0 + 0x750]
	0x03812174 BL 0x1C16CF4
	0x03812178 ADRP X0, 0x938000
	0x0381217C LDR X0, [X0 + 0x748]
	0x03812180 BL 0x1C16CF4
	0x03812184 ADRP X0, 0x8E5000
	0x03812188 LDR X0, [X0 + 0xFD8]
	0x0381218C BL 0x1C16CF4
	0x03812190 ADRP X0, 0x8E1000
	0x03812194 LDR X0, [X0 + 0xAC8]
	0x03812198 BL 0x1C16CF4
	0x0381219C ADRP X0, 0x8E9000
	0x038121A0 LDR X0, [X0 + 0x5C8]
	0x038121A4 BL 0x1C16CF4
	0x038121A8 ADRP X0, 0x8E1000
	0x038121AC LDR X0, [X0 + 0x6C0]
	0x038121B0 BL 0x1C16CF4
	0x038121B4 ADRP X0, 0x938000
	0x038121B8 LDR X0, [X0 + 0x7F0]
	0x038121BC BL 0x1C16CF4
	0x038121C0 ADRP X0, 0x938000
	0x038121C4 LDR X0, [X0 + 0x7C0]
	0x038121C8 BL 0x1C16CF4
	0x038121CC ADRP X0, 0x90B000
	0x038121D0 LDR X0, [X0 + 0x550]
	0x038121D4 BL 0x1C16CF4
	0x038121D8 ADRP X0, 0x938000
	0x038121DC LDR X0, [X0 + 0x7F8]
	0x038121E0 BL 0x1C16CF4
	0x038121E4 ADRP X0, 0x938000
	0x038121E8 LDR X0, [X0 + 0x800]
	0x038121EC BL 0x1C16CF4
	0x038121F0 ADRP X0, 0x938000
	0x038121F4 LDR X0, [X0 + 0x808]
	0x038121F8 BL 0x1C16CF4
	0x038121FC ADRP X0, 0x938000
	0x03812200 LDR X0, [X0 + 0x810]
	0x03812204 BL 0x1C16CF4
	0x03812208 ADRP X0, 0x938000
	0x0381220C LDR X0, [X0 + 0x818]
	0x03812210 BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X19, X1
	009 Move X21, X0
	010 Move X0, X1
	011 Move X1, X31
	012 Move X20, X8
	013 Call String.IsNullOrEmpty, X0
	014 Move TEMP, X0
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {93}
	018 Move X8, [X21+144]
	019 Compare X8, 0
	020 JumpIfEqual {60}
	021 Move X22, X31
	022 Move X23, X31
	023 Move W9, [X8+24]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Add X8, X8, X22
	027 Move X0, [X8+32]
	028 Move X1, [X8+40]
	029 Move X2, X19
	030 Move X3, X31
	031 Call InternedString.op_Equality, X0, X1
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfEqual {42}
	036 Move X8, [X21+144]
	037 Add X23, X23, 1
	038 Add X22, X22, 208
	039 Compare X8, 0
	040 JumpIfNotEqual {23}
	041 Call 0x1C17F20
	042 Move X8, [X21+144]
	043 Compare X8, 0
	044 JumpIfEqual {41}
	045 Move W9, [X8+24]
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Add X8, X8, X22
	048 Move X0, X20
	049 Move X20, [X31+48]
	050 Move X19, [X31+56]
	051 Move X22, [X31+32]
	052 Move X21, [X31+40]
	053 Move X30, [X31+16]
	054 Move X23, [X31+24]
	055 Add X1, X8, 32
	056 Move W2, 208
	057 Add X31, X31, 64
	058 Call 0x3EB2AC0
	059 Return X0
	060 Move X8, [X21+16]
	061 Move X9, [X21+24]
	062 Move X0, 0x90D000
	063 Move [X31], X8
	064 Move [X31+8], X9
	065 Move X0, [X0+1296]
	066 Call 0x1C17D08
	067 Add X1, X31, 0
	068 Call 0x1C17E04
	069 Move X20, X0
	070 Move X0, 0x939000
	071 Move X0, [X0+1816]
	072 Call 0x1C17D08
	073 Move X1, X19
	074 Move X2, X20
	075 Move X3, X31
	076 Call String.Format, X0, X1, X2
	077 Move X19, X0
	078 Move X0, 0x8E5000
	079 Move X0, [X0+120]
	080 Call 0x1C17D08
	081 Call 0x1C17F10
	082 Move X1, X19
	083 Move X2, X31
	084 Move X20, X0
	085 Call KeyNotFoundException..ctor, X0, X1
	086 Move X0, 0x939000
	087 Move X0, [X0+1824]
	088 Call 0x1C17D08
	089 Move X1, X0
	090 Move X0, X20
	091 Call 0x1C17DEC
	092 Call 0x1C17F28
	093 Move X0, 0x8E7000
	094 Move X0, [X0+1320]
	095 Call 0x1C17D08
	096 Call 0x1C17F10
	097 Move X19, X0
	098 Move X0, 0x8ED000
	099 Move X0, [X0+288]
	100 Call 0x1C17D08
	101 Move X1, X0
	102 Move X0, X19
	103 Move X2, X31
	104 Call ArgumentNullException..ctor, X0, X1
	105 Move X0, 0x939000
	106 Move X0, [X0+1824]
	107 Call 0x1C17D08
	108 Move X1, X0
	109 Move X0, X19
	110 Call 0x1C17DEC

Method: System.Nullable`1<UnityEngine.InputSystem.Layouts.InputControlLayout/ControlItem> FindControl(UnityEngine.InputSystem.Utilities.InternedString path)

Disassembly:
	0x03812214 ADRP X0, 0x938000
	0x03812218 LDR X0, [X0 + 0x820]
	0x0381221C BL 0x1C16CF4
	0x03812220 MOVZ W8, 0x1
	0x03812224 STRB W8, [X20 + 0x4EE]
	0x03812228 ADD X0, X31, 0xD0
	0x0381222C MOVZ W2, 0xD0
	0x03812230 MOV W1, W31
	0x03812234 BL 0x3EB1B10
	0x03812238 LDR X0, [X19 + 0x48]
	0x0381223C MOV X1, X31
	0x03812240 BL 0x32277A8
	0x03812244 TBZ X0, 0x0, 0x381226C
	0x03812248 LDR X0, [X19 + 0x8]
	0x0381224C MOV X1, X31
	0x03812250 BL 0x32277A8
	0x03812254 MOV X21, X31
	0x03812258 TBZ X0, 0x0, 0x38123E8
	0x0381225C ADRP X8, 0x8E1000
	0x03812260 LDR X8, [X8 + 0x6C0]
	0x03812264 LDR X0, [X8]
	0x03812268 B 0x3812378
	0x0381226C ADRP X22, 0x8E1000
	0x03812270 LDR X22, [X22 + 0x6C0]
	0x03812274 LDR X20, [X19 + 0x48]
	0x03812278 LDR X0, [X22]
	0x0381227C LDR W8, [X0 + 0xE0]
	0x03812280 CBNZ W8, 0x3812288
	0x03812284 BL 0x1C16DFC
	0x03812288 ADRP X8, 0x8E9000
	0x0381228C ADRP X9, 0x938000
	0x03812290 LDR X8, [X8 + 0x5C8]
	0x03812294 LDR X9, [X9 + 0x7E0]
	0x03812298 MOV X0, X20
	0x0381229C MOV W1, W31
	0x038122A0 LDR X2, [X8]
	0x038122A4 LDR X3, [X9]
	0x038122A8 BL 0x1C170BC
	0x038122AC MOV X1, X31
	0x038122B0 MOV X2, X31
	0x038122B4 MOV X21, X0
	0x038122B8 BL 0x3395194
	0x038122BC TBZ X0, 0x0, 0x38123A4
	0x038122C0 ADRP X8, 0x8E1000
	0x038122C4 LDR X8, [X8 + 0xAC8]
	0x038122C8 MOVZ W1, 0x5
	0x038122CC LDR X0, [X8]
	0x038122D0 BL 0x1C16D6C
	0x038122D4 CBZ X0, 0x3812894
	0x038122D8 LDR W8, [X0 + 0x18]
	0x038122DC CBZ W8, 0x3812898
	0x038122E0 ADRP X9, 0x938000
	0x038122E4 LDR X9, [X9 + 0x800]
	0x038122E8 CMP W8, 0x1
	0x038122EC LDR X9, [X9]
	0x038122F0 STR X9, [X0 + 0x20]
	0x038122F4 B.EQ 0x3812898
	0x038122F8 LDR X9, [X19 + 0x48]
	0x038122FC CMP W8, 0x2
	0x03812300 STR X9, [X0 + 0x28]
	0x03812304 B.LS 0x3812898
	0x03812308 ADRP X9, 0x938000
	0x0381230C LDR X9, [X9 + 0x810]
	0x03812310 CMP W8, 0x3
	0x03812314 LDR X9, [X9]
	0x03812318 STR X9, [X0 + 0x30]
	0x0381231C B.EQ 0x3812898
	0x03812320 LDR X9, [X19]
	0x03812324 CMP W8, 0x4
	0x03812328 STR X9, [X0 + 0x38]
	0x0381232C B.LS 0x3812898
	0x03812330 ADRP X8, 0x938000
	0x03812334 LDR X8, [X8 + 0x818]
	0x03812338 MOV X1, X31
	0x0381233C LDR X8, [X8]
	0x03812340 STR X8, [X0 + 0x40]
	0x03812344 BL 0x32278CC
	0x03812348 ADRP X8, 0x8E1000
	0x0381234C LDR X8, [X8 + 0xA28]
	0x03812350 MOV X20, X0
	0x03812354 LDR X8, [X8]
	0x03812358 LDR W9, [X8 + 0xE0]
	0x0381235C CBNZ W9, 0x3812368
	0x03812360 MOV X0, X8
	0x03812364 BL 0x1C16DFC
	0x03812368 MOV X0, X20
	0x0381236C MOV X1, X31
	0x03812370 BL 0x3C06048
	0x03812374 LDR X0, [X22]
	0x03812378 ADRP X8, 0x936000
	0x0381237C LDR X8, [X8 + 0xE8]
	0x03812380 LDR W9, [X0 + 0xE0]
	0x03812384 LDR X20, [X8]
	0x03812388 CBNZ W9, 0x3812390
	0x0381238C BL 0x1C16DFC
	0x03812390 MOV X0, X20
	0x03812394 MOV X1, X31
	0x03812398 BL 0x338C698
	0x0381239C MOV X21, X0
	0x038123A0 B 0x38123E8

ISIL:
	001 Subtract X31, X31, 480
	002 Move [X31+416], X29
	003 Move [X31+424], X30
	004 Move [X31+432], X24
	005 Move [X31+440], X23
	006 Move [X31+448], X22
	007 Move [X31+456], X21
	008 Move [X31+464], X20
	009 Move [X31+472], X19
	010 Move X23, 0xBD0000
	011 Move W9, [X23+1231]
	012 Move X20, X2
	013 Move X22, X1
	014 Move X21, X0
	015 Move X19, X8
	016 Move TEMP, X9
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0x939000
	021 Move X0, [X0+1832]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X23+1231], W8
	025 Move X0, X22
	026 Move X1, X20
	027 Move X2, X31
	028 Call InternedString.op_Implicit, X0
	029 Move X1, X31
	030 Call String.IsNullOrEmpty, X0
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {100}
	035 Move X8, [X21+144]
	036 Compare X8, 0
	037 JumpIfEqual {60}
	038 Move X23, X31
	039 Move X24, X31
	040 Move W9, [X8+24]
	041 NotImplemented "Instruction CMP not yet implemented."
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Add X8, X8, X23
	044 Move X0, [X8+32]
	045 Move X1, [X8+40]
	046 Move X2, X22
	047 Move X3, X20
	048 Move X4, X31
	049 Call InternedString.op_Equality, X0, X1
	050 Move TEMP, X0
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfEqual {64}
	054 Move X8, [X21+144]
	055 Add X24, X24, 1
	056 Add X23, X23, 208
	057 Compare X8, 0
	058 JumpIfNotEqual {40}
	059 Call 0x1C17F20
	060 Move W2, 216
	061 Move X0, X19
	062 Move W1, W31
	063 Call 0x3EB2B10
	064 Move X8, [X21+144]
	065 Compare X8, 0
	066 JumpIfEqual {59}
	067 Move W9, [X8+24]
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Add X8, X8, X23
	070 Add X1, X8, 32
	071 Add X0, X31, 0
	072 Move W2, 208
	073 Call 0x3EB2AC0
	074 Move W2, 216
	075 Move X0, X19
	076 Move W1, W31
	077 Call 0x3EB2B10
	078 Move X8, 0x939000
	079 Move X8, [X8+1832]
	080 Add X0, X31, 208
	081 Add X1, X31, 0
	082 Move W2, 208
	083 Move X20, [X8]
	084 Call 0x3EB2AC0
	085 Add X1, X31, 208
	086 Move X0, X19
	087 Move X2, X20
	088 Call Nullable`1<ControlItem>..ctor, X0, X1
	089 Move X20, [X31+464]
	090 Move X19, [X31+472]
	091 Move X22, [X31+448]
	092 Move X21, [X31+456]
	093 Move X24, [X31+432]
	094 Move X23, [X31+440]
	095 Move X29, [X31+416]
	096 Move X30, [X31+424]
	097 Add X31, X31, 480
	098 Return X0
	099 Call 0x1C17F28
	100 Move X0, 0x8E7000
	101 Move X0, [X0+1320]
	102 Call 0x1C17D08
	103 Call 0x1C17F10
	104 Move X19, X0
	105 Move X0, 0x8ED000
	106 Move X0, [X0+288]
	107 Call 0x1C17D08
	108 Move X1, X0
	109 Move X0, X19
	110 Move X2, X31
	111 Call ArgumentNullException..ctor, X0, X1
	112 Move X0, 0x939000
	113 Move X0, [X0+1840]
	114 Call 0x1C17D08
	115 Move X1, X0
	116 Move X0, X19
	117 Call 0x1C17DEC

Method: System.Nullable`1<UnityEngine.InputSystem.Layouts.InputControlLayout/ControlItem> FindControlIncludingArrayElements(System.String path, out System.Int32 arrayIndex)

Disassembly:
	0x038123A4 ADRP X8, 0x933000
	0x038123A8 LDR X0, [X22]
	0x038123AC LDR X8, [X8 + 0x6A0]
	0x038123B0 LDR W9, [X0 + 0xE0]
	0x038123B4 LDR X20, [X8]
	0x038123B8 CBNZ W9, 0x38123C0
	0x038123BC BL 0x1C16DFC
	0x038123C0 MOV X0, X20
	0x038123C4 MOV X1, X31
	0x038123C8 BL 0x338C698
	0x038123CC CBZ X0, 0x3812894
	0x038123D0 LDR X8, [X0]
	0x038123D4 MOV X1, X21
	0x038123D8 LDR X9, [X8 + 0x2A8]
	0x038123DC LDR X2, [X8 + 0x2B0]
	0x038123E0 BLR X9
	0x038123E4 TBZ X0, 0x0, 0x38128F4
	0x038123E8 ADRP X8, 0x909000
	0x038123EC LDR X8, [X8 + 0xDC0]
	0x038123F0 ADRP X24, 0x938000
	0x038123F4 LDR X22, [X19]
	0x038123F8 LDR X0, [X8]
	0x038123FC LDR X24, [X24 + 0x7C0]
	0x03812400 BL 0x1C16F10
	0x03812404 MOV X1, X31
	0x03812408 MOV X20, X0
	0x0381240C BL 0x33BDD8C
	0x03812410 ADD X0, X31, 0x270
	0x03812414 MOV X1, X22
	0x03812418 MOV X2, X31
	0x0381241C STR X31, [X31 + 0x278]
	0x03812420 STR X31, [X31 + 0x270]
	0x03812424 BL 0x3757420
	0x03812428 LDR V0, [X31 + 0x27]
	0x0381242C STR X21, [X20 + 0x20]
	0x03812430 LDR W8, [X20 + 0xA8]
	0x03812434 ADD X0, X31, 0x270
	0x03812438 STR V0, [X20 + 0x1]
	0x0381243C LDUR V0, [X19 + 0x38]
	0x03812440 AND W8, W8, 0xFFFFFFFC
	0x03812444 MOV X2, X31
	0x03812448 STUR V0, [X20 + 0x98]
	0x0381244C LDRB W9, [X19 + 0x58]
	0x03812450 LDRB W10, [X19 + 0x59]
	0x03812454 ORR W8, W8, W9, 0x0
	0x03812458 ORR W8, W8, W10, 0x1
	0x0381245C STR W8, [X20 + 0xA8]
	0x03812460 LDR X1, [X19 + 0x50]
	0x03812464 STR X31, [X31 + 0x278]
	0x03812468 STR X31, [X31 + 0x270]
	0x0381246C BL 0x3757420
	0x03812470 LDR V0, [X31 + 0x27]
	0x03812474 STUR V0, [X20 + 0x28]
	0x03812478 LDR X0, [X24]
	0x0381247C LDR X21, [X19 + 0x30]
	0x03812480 LDR W8, [X0 + 0xE0]
	0x03812484 CBNZ W8, 0x3812490
	0x03812488 BL 0x1C16DFC
	0x0381248C LDR X0, [X24]
	0x03812490 LDR X8, [X0 + 0xB8]
	0x03812494 ADRP X25, 0x938000
	0x03812498 LDR X22, [X8 + 0x8]
	0x0381249C LDR X25, [X25 + 0x760]
	0x038124A0 CBNZ X22, 0x38124F4
	0x038124A4 LDR W8, [X0 + 0xE0]
	0x038124A8 CBNZ W8, 0x38124B4
	0x038124AC BL 0x1C16DFC
	0x038124B0 LDR X0, [X24]
	0x038124B4 ADRP X9, 0x938000
	0x038124B8 LDR X8, [X0 + 0xB8]
	0x038124BC LDR X9, [X9 + 0x768]
	0x038124C0 LDR X23, [X8]
	0x038124C4 LDR X0, [X9]
	0x038124C8 BL 0x1C16F10
	0x038124CC ADRP X8, 0x938000
	0x038124D0 LDR X8, [X8 + 0x7F0]
	0x038124D4 MOV X1, X23
	0x038124D8 MOV X3, X31
	0x038124DC MOV X22, X0
	0x038124E0 LDR X2, [X8]
	0x038124E4 BL 0x2D30464
	0x038124E8 LDR X8, [X24]
	0x038124EC LDR X8, [X8 + 0xB8]
	0x038124F0 STR X22, [X8 + 0x8]
	0x038124F4 LDR X2, [X25]
	0x038124F8 MOV X0, X21
	0x038124FC MOV X1, X22
	0x03812500 BL 0x217C220
	0x03812504 STR X0, [X20 + 0x88]
	0x03812508 LDR X0, [X19 + 0x18]
	0x0381250C MOV X1, X31
	0x03812510 BL 0x32277A8
	0x03812514 TBNZ X0, 0x0, 0x3812534
	0x03812518 LDR X1, [X19 + 0x18]
	0x0381251C ADD X0, X31, 0x270
	0x03812520 MOV X2, X31
	0x03812524 STR W31, [X31 + 0x270]
	0x03812528 BL 0x375F3B0
	0x0381252C LDR W8, [X31 + 0x270]
	0x03812530 STR W8, [X20 + 0x38]
	0x03812534 LDR X0, [X19 + 0x8]
	0x03812538 MOV X1, X31
	0x0381253C BL 0x32277A8
	0x03812540 TBNZ X0, 0x0, 0x381257C
	0x03812544 LDR X1, [X19 + 0x8]
	0x03812548 ADD X0, X31, 0x270
	0x0381254C MOV X2, X31
	0x03812550 ADD X21, X20, 0x48
	0x03812554 STR X31, [X31 + 0x278]
	0x03812558 STR X31, [X31 + 0x270]
	0x0381255C BL 0x3757420
	0x03812560 ADRP X8, 0x938000
	0x03812564 LDR X1, [X31 + 0x270]
	0x03812568 LDR X2, [X31 + 0x278]
	0x0381256C LDR X8, [X8 + 0x7D8]
	0x03812570 MOV X0, X21
	0x03812574 LDR X3, [X8]
	0x03812578 BL 0x2DE91C0
	0x0381257C LDR X22, [X19 + 0x10]
	0x03812580 CBZ X22, 0x38125EC
	0x03812584 LDR X8, [X22 + 0x18]
	0x03812588 CMP W8, 0x1
	0x0381258C B.LT 0x38125EC
	0x03812590 ADRP X25, 0x938000
	0x03812594 LDR X25, [X25 + 0x7D8]
	0x03812598 MOV X23, X31
	0x0381259C AND X8, X8, 0x0
	0x038125A0 ADD X21, X20, 0x48
	0x038125A4 ADD X24, X22, 0x20
	0x038125A8 CMP X23, W8, UXTW
	0x038125AC B.CS 0x3812898
	0x038125B0 LDR X1, [X24, X23, LSL #3]
	0x038125B4 ADD X0, X31, 0x270
	0x038125B8 MOV X2, X31
	0x038125BC STR X31, [X31 + 0x278]
	0x038125C0 STR X31, [X31 + 0x270]
	0x038125C4 BL 0x3757420
	0x038125C8 LDR X1, [X31 + 0x270]
	0x038125CC LDR X2, [X31 + 0x278]
	0x038125D0 LDR X3, [X25]
	0x038125D4 MOV X0, X21
	0x038125D8 BL 0x2DE91C0
	0x038125DC LDR W8, [X22 + 0x18]
	0x038125E0 ADD X23, X23, 0x1
	0x038125E4 CMP X23, W8, SXTW
	0x038125E8 B.LT 0x38125A8
	0x038125EC LDR X0, [X19 + 0x20]
	0x038125F0 MOV X1, X31
	0x038125F4 BL 0x32277A8
	0x038125F8 TBNZ X0, 0x0, 0x3812680
	0x038125FC LDR X0, [X19 + 0x20]
	0x03812600 CBZ X0, 0x3812894
	0x03812604 MOV X1, X31
	0x03812608 BL 0x322B5E4
	0x0381260C ADRP X8, 0x938000
	0x03812610 LDR X8, [X8 + 0x7F8]
	0x03812614 MOV X2, X31
	0x03812618 MOV X21, X0
	0x0381261C LDR X1, [X8]
	0x03812620 BL 0x321BA08
	0x03812624 TBZ X0, 0x0, 0x3812640
	0x03812628 ADRP X8, 0x8E5000
	0x0381262C LDR X8, [X8 + 0xFD8]
	0x03812630 ADD X0, X31, 0x270
	0x03812634 MOV W1, W31
	0x03812638 STRH W31, [X31 + 0x270]
	0x0381263C B 0x3812670
	0x03812640 ADRP X8, 0x938000
	0x03812644 LDR X8, [X8 + 0x808]
	0x03812648 MOV X0, X21
	0x0381264C MOV X2, X31
	0x03812650 LDR X1, [X8]
	0x03812654 BL 0x321BA08
	0x03812658 TBZ X0, 0x0, 0x38129BC
	0x0381265C ADRP X8, 0x8E5000
	0x03812660 LDR X8, [X8 + 0xFD8]
	0x03812664 STRH W31, [X31 + 0x270]
	0x03812668 ADD X0, X31, 0x270
	0x0381266C MOVZ W1, 0x1
	0x03812670 LDR X2, [X8]
	0x03812674 BL 0x242D570
	0x03812678 LDRH W8, [X31 + 0x270]
	0x0381267C STRH W8, [X20 + 0x40]
	0x03812680 LDR X0, [X19 + 0x28]
	0x03812684 MOV X1, X31
	0x03812688 BL 0x32277A8

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Subtract X31, X31, 640
	014 Move X23, 0xBD0000
	015 Move W9, [X23+1232]
	016 Move X20, X2
	017 Move X21, X1
	018 Move X22, X0
	019 Move X19, X8
	020 Move TEMP, X9
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {32}
	024 Move X0, 0x8E4000
	025 Move X0, [X0+368]
	026 Call 0x1C17CF4
	027 Move X0, 0x939000
	028 Move X0, [X0+1832]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X23+1232], W8
	032 Move X0, X21
	033 Move X1, X31
	034 Move [X31+416], X31
	035 Move [X31+424], X31
	036 Call String.IsNullOrEmpty, X0
	037 Move TEMP, X0
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfEqual {193}
	041 Move TEMP, 0
	042 Not TEMP
	043 Move W8, TEMP
	044 Move [X20], W8
	045 Move X24, [X22+144]
	046 Compare X24, 0
	047 JumpIfEqual {141}
	048 Compare X21, 0
	049 JumpIfEqual {140}
	050 Move W26, [X21+16]
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move X27, 0x8E4000
	053 Move X27, [X27+368]
	054 Move W25, W31
	055 Move W28, 10
	056 Subtract W23, W26, 1
	057 Move X0, X21
	058 Move W1, W23
	059 Move X2, X31
	060 Call String.get_Chars, X0, X1
	061 Move X8, [X27]
	062 Move W24, W0
	063 Move W9, [X8+224]
	064 Compare W9, 0
	065 JumpIfNotEqual {68}
	066 Move X0, X8
	067 Call 0x1C17DFC
	068 Move W0, W24
	069 Move X1, X31
	070 Call Char.IsDigit, X0
	071 Move TEMP, X0
	072 And TEMP, TEMP, 1
	073 Compare TEMP, 1
	074 JumpIfNotEqual {86}
	075 Move X0, X21
	076 Move W1, W23
	077 Move X2, X31
	078 Multiply W24, W25, W28
	079 Call String.get_Chars, X0, X1
	080 Add W8, W24, W0
	081 Add W9, W23, 1
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Subtract W25, W8, 48
	084 Move W26, W23
	085 Move W26, W31
	086 Move W8, [X21+16]
	087 Move X24, [X22+144]
	088 NotImplemented "Instruction CMP not yet implemented."
	089 NotImplemented "Instruction CSEL not yet implemented."
	090 Compare X24, 0
	091 JumpIfNotEqual {94}
	092 Move W23, W31
	093 Move W25, W31
	094 Move X26, X31
	095 Move X27, X31
	096 Move W8, [X24+24]
	097 NotImplemented "Instruction CMP not yet implemented."
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Add X28, X24, X26
	100 Move X0, [X28+32]
	101 Move X1, [X28+40]
	102 Move X2, X31
	103 Call InternedString.op_Implicit, X0
	104 Move W2, 3
	105 Move X1, X21
	106 Move X3, X31
	107 Call String.Compare, X0, X1, X2
	108 Compare W0, 0
	109 JumpIfEqual {145}
	110 NotImplemented "Instruction CMP not yet implemented."
	111 Move W8, [X28+188]
	112 Compare W8, 0
	113 JumpIfEqual {135}
	114 Add X28, X24, X26
	115 Move V0, [X28+2]
	116 Add X0, X31, 416
	117 Move X1, X31
	118 Move [X31+26], V0
	119 Call InternedString.get_length, X0
	120 NotImplemented "Instruction CMP not yet implemented."
	121 Move V0, [X28+2]
	122 Add X0, X31, 416
	123 Move X1, X31
	124 Move [X31+26], V0
	125 Call InternedString.ToString, X0
	126 Move W5, 3
	127 Move W1, W31
	128 Move X2, X21
	129 Move W3, W31
	130 Move W4, W23
	131 Move X6, X31
	132 Call String.Compare, X0, X1, X2, X3, X4, X5
	133 Compare W0, 0
	134 JumpIfEqual {178}
	135 Move X24, [X22+144]
	136 Add X27, X27, 1
	137 Add X26, X26, 208
	138 Compare X24, 0
	139 JumpIfNotEqual {96}
	140 Call 0x1C17F20
	141 Move W2, 216
	142 Move X0, X19
	143 Move W1, W31
	144 Call 0x3EB2B10
	145 Add X1, X28, 32
	146 Add X0, X31, 208
	147 Move W2, 208
	148 Call 0x3EB2AC0
	149 Move W2, 216
	150 Move X0, X19
	151 Move W1, W31
	152 Call 0x3EB2B10
	153 Move X8, 0x939000
	154 Move X8, [X8+1832]
	155 Add X0, X31, 432
	156 Add X1, X31, 208
	157 Move X20, [X8]
	158 Move W2, 208
	159 Call 0x3EB2AC0
	160 Add X1, X31, 432
	161 Move X0, X19
	162 Move X2, X20
	163 Call Nullable`1<ControlItem>..ctor, X0, X1
	164 Add X31, X31, 640
	165 Move X20, [X31+80]
	166 Move X19, [X31+88]
	167 Move X22, [X31+64]
	168 Move X21, [X31+72]
	169 Move X24, [X31+48]
	170 Move X23, [X31+56]
	171 Move X26, [X31+32]
	172 Move X25, [X31+40]
	173 Move X28, [X31+16]
	174 Move X27, [X31+24]
	175 Move X29, [X31+96]
	176 Move X30, [X31+104]
	177 Return X0
	178 Add X8, X24, X26
	179 Add X1, X8, 32
	180 Add X0, X31, 0
	181 Move W2, 208
	182 Move [X20], W25
	183 Call 0x3EB2AC0
	184 Move W2, 216
	185 Move X0, X19
	186 Move W1, W31
	187 Call 0x3EB2B10
	188 Move X8, 0x939000
	189 Move X8, [X8+1832]
	190 Add X0, X31, 432
	191 Add X1, X31, 0
	192 Call 0x1C17F28
	193 Move X0, 0x8E7000
	194 Move X0, [X0+1320]
	195 Call 0x1C17D08
	196 Call 0x1C17F10
	197 Move X19, X0
	198 Move X0, 0x8ED000
	199 Move X0, [X0+288]
	200 Call 0x1C17D08
	201 Move X1, X0
	202 Move X0, X19
	203 Move X2, X31
	204 Call ArgumentNullException..ctor, X0, X1
	205 Move X0, 0x939000
	206 Move X0, [X0+1848]
	207 Call 0x1C17D08
	208 Move X1, X0
	209 Move X0, X19
	210 Call 0x1C17DEC

Method: System.Type GetValueType()

Disassembly:
	0x0381269C BL 0x322B5E4
	0x038126A0 ADRP X8, 0x938000
	0x038126A4 LDR X8, [X8 + 0x820]
	0x038126A8 MOV X2, X31
	0x038126AC MOV X21, X0
	0x038126B0 LDR X1, [X8]
	0x038126B4 BL 0x321BA08
	0x038126B8 TBZ X0, 0x0, 0x38126D4
	0x038126BC ADRP X8, 0x8E5000
	0x038126C0 LDR X8, [X8 + 0xFD8]
	0x038126C4 ADD X0, X31, 0x270
	0x038126C8 MOVZ W1, 0x1
	0x038126CC STRH W31, [X31 + 0x270]
	0x038126D0 B 0x3812704
	0x038126D4 ADRP X8, 0x90B000
	0x038126D8 LDR X8, [X8 + 0x550]
	0x038126DC MOV X0, X21
	0x038126E0 MOV X2, X31
	0x038126E4 LDR X1, [X8]
	0x038126E8 BL 0x321BA08
	0x038126EC TBZ X0, 0x0, 0x38129DC
	0x038126F0 ADRP X8, 0x8E5000
	0x038126F4 LDR X8, [X8 + 0xFD8]
	0x038126F8 STRH W31, [X31 + 0x270]
	0x038126FC ADD X0, X31, 0x270
	0x03812700 MOV W1, W31
	0x03812704 LDR X2, [X8]
	0x03812708 BL 0x242D570
	0x0381270C LDRH W1, [X31 + 0x270]
	0x03812710 MOV X0, X20
	0x03812714 BL 0x3811000
	0x03812718 LDR X8, [X19 + 0x60]
	0x0381271C CBZ X8, 0x3812870
	0x03812720 ADRP X8, 0x938000
	0x03812724 LDR X8, [X8 + 0x748]
	0x03812728 ADRP X21, 0x938000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xBD0000
	007 Move X20, 0x939000
	008 Move X21, 0x8E2000
	009 Move W8, [X22+1233]
	010 Move X20, [X20+1856]
	011 Move X21, [X21+1728]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x939000
	018 Move X0, [X0+1856]
	019 Call 0x1C17CF4
	020 Move X0, 0x8E2000
	021 Move X0, [X0+1728]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+1233], W8
	025 Move X0, [X21]
	026 Move X19, [X19+32]
	027 Move X20, [X20]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Move X0, X20
	033 Move X1, X31
	034 Call Type.GetTypeFromHandle, X0
	035 Move X1, X0
	036 Move X0, X19
	037 Move X20, [X31+32]
	038 Move X19, [X31+40]
	039 Move X22, [X31+16]
	040 Move X21, [X31+24]
	041 Move W2, W31
	042 Move X3, X31
	043 Move X30, [X31+48]
	044 Call TypeHelpers.GetGenericTypeArgumentFromHierarchy, X0, X1, X2
	045 Return X0

Method: UnityEngine.InputSystem.Layouts.InputControlLayout FromType(System.String name, System.Type type)

Disassembly:
	0x0381272C LDR X0, [X8]
	0x03812730 LDR X21, [X21 + 0x750]
	0x03812734 BL 0x1C16F10
	0x03812738 LDR X1, [X21]
	0x0381273C MOV X21, X0
	0x03812740 BL 0x3107414
	0x03812744 LDR X23, [X19 + 0x60]
	0x03812748 CBZ X23, 0x3812894
	0x0381274C LDR W8, [X23 + 0x18]
	0x03812750 CMP W8, 0x1
	0x03812754 B.LT 0x3812854
	0x03812758 ADRP X26, 0x938000
	0x0381275C LDR X26, [X26 + 0x7E8]
	0x03812760 MOV X22, X31
	0x03812764 MOV W24, W31
	0x03812768 MOVZ W25, 0xD0
	0x0381276C CMP W24, W8
	0x03812770 B.CS 0x3812898
	0x03812774 ADD X8, X23, W24, 0x3, SXTW
	0x03812778 LDR X27, [X8 + 0x20]
	0x0381277C CBZ X27, 0x3812894
	0x03812780 LDR X0, [X27 + 0x10]
	0x03812784 MOV X1, X31
	0x03812788 BL 0x32277A8
	0x0381278C ANDS W31, W0, 0x1
	0x03812790 MOV W8, W0
	0x03812794 CSEL X0, X22, X27, NE
	0x03812798 TBNZ X8, 0x0, 0x381289C
	0x0381279C CBZ X0, 0x3812894
	0x038127A0 ADD X8, X31, 0xD0
	0x038127A4 BL 0x3816F1C
	0x038127A8 ADD X0, X31, 0x0
	0x038127AC ADD X1, X31, 0xD0
	0x038127B0 MOVZ W2, 0xD0
	0x038127B4 BL 0x3EB1AC0
	0x038127B8 CBZ X21, 0x3812894
	0x038127BC LDR X22, [X26]
	0x038127C0 ADD X0, X31, 0x1A0
	0x038127C4 ADD X1, X31, 0x0
	0x038127C8 MOVZ W2, 0xD0
	0x038127CC BL 0x3EB1AC0
	0x038127D0 LDR W9, [X21 + 0x1C]
	0x038127D4 LDR X8, [X21 + 0x10]
	0x038127D8 ADD W9, W9, 0x1
	0x038127DC STR W9, [X21 + 0x1C]
	0x038127E0 CBZ X8, 0x3812894
	0x038127E4 LDRSW X9, [X21 + 0x18]
	0x038127E8 LDR W10, [X8 + 0x18]
	0x038127EC CMP W9, W10
	0x038127F0 B.CS 0x3812814
	0x038127F4 MADD X8, X9, X25, X8
	0x038127F8 ADD W10, W9, 0x1
	0x038127FC ADD X0, X8, 0x20
	0x03812800 ADD X1, X31, 0x1A0
	0x03812804 MOVZ W2, 0xD0
	0x03812808 STR W10, [X21 + 0x18]
	0x0381280C BL 0x3EB1AC0
	0x03812810 B 0x3812840
	0x03812814 LDR X8, [X22 + 0x20]
	0x03812818 ADD X0, X31, 0x270
	0x0381281C ADD X1, X31, 0x1A0
	0x03812820 MOVZ W2, 0xD0
	0x03812824 LDR X8, [X8 + 0xC0]
	0x03812828 LDR X22, [X8 + 0x70]
	0x0381282C BL 0x3EB1AC0
	0x03812830 ADD X1, X31, 0x270
	0x03812834 MOV X0, X21
	0x03812838 MOV X2, X22
	0x0381283C BL 0x3107CDC
	0x03812840 LDR W8, [X23 + 0x18]
	0x03812844 ADD W24, W24, 0x1
	0x03812848 MOV X22, X27
	0x0381284C CMP W24, W8
	0x03812850 B.LT 0x381276C
	0x03812854 CBZ X21, 0x3812894
	0x03812858 ADRP X8, 0x938000
	0x0381285C LDR X8, [X8 + 0x780]
	0x03812860 MOV X0, X21
	0x03812864 LDR X1, [X8]
	0x03812868 BL 0x310A2EC
	0x0381286C STR X0, [X20 + 0x90]
	0x03812870 MOV X0, X20
	0x03812874 ADD X31, X31, 0x340
	0x03812878 LDP X20, X19, [X31 + 0x50]
	0x0381287C LDP X22, X21, [X31 + 0x40]
	0x03812880 LDP X24, X23, [X31 + 0x30]
	0x03812884 LDP X26, X25, [X31 + 0x20]
	0x03812888 LDP X30, X27, [X31 + 0x10]
	0x0381288C LDR X29, [X31], #0x60
	0x03812890 RET
	0x03812894 BL 0x1C16F20
	0x03812898 BL 0x1C16F28
	0x0381289C ADRP X0, 0x938000
	0x038128A0 LDR X19, [X19]
	0x038128A4 LDR X0, [X0 + 0x828]
	0x038128A8 BL 0x1C16D08
	0x038128AC MOV X1, X19
	0x038128B0 MOV X2, X31
	0x038128B4 BL 0x321B938
	0x038128B8 MOV X19, X0
	0x038128BC ADRP X0, 0x8E1000
	0x038128C0 LDR X0, [X0 + 0x5B0]
	0x038128C4 BL 0x1C16D08
	0x038128C8 BL 0x1C16F10
	0x038128CC MOV X1, X19
	0x038128D0 MOV X2, X31
	0x038128D4 MOV X20, X0
	0x038128D8 BL 0x337DF1C
	0x038128DC ADRP X0, 0x938000
	0x038128E0 LDR X0, [X0 + 0x7E0]
	0x038128E4 BL 0x1C16D08
	0x038128E8 MOV X1, X0
	0x038128EC MOV X0, X20
	0x038128F0 BL 0x1C16DEC
	0x038128F4 ADRP X0, 0x8E1000
	0x038128F8 LDR X0, [X0 + 0xAC8]
	0x038128FC BL 0x1C16D08
	0x03812900 MOVZ W1, 0x5
	0x03812904 BL 0x1C16D6C
	0x03812908 MOV X20, X0
	0x0381290C BL 0x19903C0
	0x03812910 ADRP X0, 0x8E9000
	0x03812914 LDR X0, [X0 + 0x9B0]
	0x03812918 BL 0x1C16D08
	0x0381291C MOV X2, X0
	0x03812920 MOV X0, X20
	0x03812924 MOV X1, X31
	0x03812928 BL 0x1993444
	0x0381292C LDR X21, [X19 + 0x48]
	0x03812930 MOV X0, X20
	0x03812934 BL 0x19903C0
	0x03812938 MOVZ W1, 0x1
	0x0381293C MOV X0, X20
	0x03812940 MOV X2, X21
	0x03812944 BL 0x1993444
	0x03812948 MOV X0, X20
	0x0381294C BL 0x19903C0
	0x03812950 ADRP X0, 0x938000
	0x03812954 LDR X0, [X0 + 0x810]
	0x03812958 BL 0x1C16D08
	0x0381295C MOV X2, X0
	0x03812960 MOVZ W1, 0x2
	0x03812964 MOV X0, X20
	0x03812968 BL 0x1993444
	0x0381296C LDR X19, [X19]
	0x03812970 MOV X0, X20
	0x03812974 BL 0x19903C0
	0x03812978 MOVZ W1, 0x3
	0x0381297C MOV X0, X20
	0x03812980 MOV X2, X19
	0x03812984 BL 0x1993444
	0x03812988 MOV X0, X20
	0x0381298C BL 0x19903C0
	0x03812990 ADRP X0, 0x933000
	0x03812994 LDR X0, [X0 + 0x6A8]
	0x03812998 BL 0x1C16D08
	0x0381299C MOV X2, X0
	0x038129A0 MOVZ W1, 0x4
	0x038129A4 MOV X0, X20
	0x038129A8 BL 0x1993444
	0x038129AC MOV X0, X20
	0x038129B0 MOV X1, X31
	0x038129B4 BL 0x32278CC
	0x038129B8 B 0x38128B8
	0x038129BC ADRP X0, 0x938000
	0x038129C0 LDR X19, [X19 + 0x20]
	0x038129C4 LDR X0, [X0 + 0x830]
	0x038129C8 BL 0x1C16D08
	0x038129CC MOV X20, X0
	0x038129D0 ADRP X0, 0x938000
	0x038129D4 LDR X0, [X0 + 0x838]
	0x038129D8 B 0x38129F8
	0x038129DC ADRP X0, 0x938000
	0x038129E0 LDR X19, [X19 + 0x20]
	0x038129E4 LDR X0, [X0 + 0x840]
	0x038129E8 BL 0x1C16D08
	0x038129EC MOV X20, X0
	0x038129F0 ADRP X0, 0x938000
	0x038129F4 LDR X0, [X0 + 0x848]
	0x038129F8 BL 0x1C16D08
	0x038129FC MOV X2, X0
	0x03812A00 MOV X0, X20
	0x03812A04 MOV X1, X19
	0x03812A08 MOV X3, X31
	0x03812A0C BL 0x32274B8
	0x03812A10 B 0x38128B8
	0x03812A14 STR X30, [X31 - 0x30]!
	0x03812A18 STP X22, X21, [X31 + 0x10]
	0x03812A1C STP X20, X19, [X31 + 0x20]
	0x03812A20 ADRP X22, 0xBCF000
	0x03812A24 LDRB W8, [X22 + 0x4D6]
	0x03812A28 MOV X19, X2
	0x03812A2C MOV X20, X1
	0x03812A30 MOV X21, X0
	0x03812A34 TBNZ X8, 0x0, 0x3812A4C
	0x03812A38 ADRP X0, 0x909000
	0x03812A3C LDR X0, [X0 + 0xDC0]
	0x03812A40 BL 0x1C16CF4
	0x03812A44 MOVZ W8, 0x1
	0x03812A48 STRB W8, [X22 + 0x4D6]
	0x03812A4C CBZ X21, 0x3812AA4
	0x03812A50 LDR X8, [X21]
	0x03812A54 ADRP X22, 0x909000
	0x03812A58 MOVZ W1, 0x16
	0x03812A5C MOV X0, X21
	0x03812A60 LDR X9, [X8 + 0x688]
	0x03812A64 LDR X2, [X8 + 0x690]
	0x03812A68 LDR X22, [X22 + 0xDC0]
	0x03812A6C BLR X9
	0x03812A70 LDR X8, [X22]
	0x03812A74 MOV X21, X0
	0x03812A78 LDR W9, [X8 + 0xE0]
	0x03812A7C CBNZ W9, 0x3812A88
	0x03812A80 MOV X0, X8
	0x03812A84 BL 0x1C16DFC
	0x03812A88 MOV X0, X21
	0x03812A8C MOV X1, X20
	0x03812A90 MOV X2, X19
	0x03812A94 LDP X20, X19, [X31 + 0x20]
	0x03812A98 LDP X22, X21, [X31 + 0x10]
	0x03812A9C LDR X30, [X31], #0x30
	0x03812AA0 B 0x3812B3C
	0x03812AA4 BL 0x1C16F20
	0x03812AA8 STR X30, [X31 - 0x30]!
	0x03812AAC STP X22, X21, [X31 + 0x10]
	0x03812AB0 STP X20, X19, [X31 + 0x20]
	0x03812AB4 ADRP X22, 0xBCF000
	0x03812AB8 LDRB W8, [X22 + 0x4D7]
	0x03812ABC MOV X19, X2
	0x03812AC0 MOV X20, X1
	0x03812AC4 MOV X21, X0
	0x03812AC8 TBNZ X8, 0x0, 0x3812AE0
	0x03812ACC ADRP X0, 0x909000
	0x03812AD0 LDR X0, [X0 + 0xDC0]
	0x03812AD4 BL 0x1C16CF4
	0x03812AD8 MOVZ W8, 0x1
	0x03812ADC STRB W8, [X22 + 0x4D7]
	0x03812AE0 CBZ X21, 0x3812B38
	0x03812AE4 LDR X8, [X21]
	0x03812AE8 ADRP X22, 0x909000
	0x03812AEC MOVZ W1, 0x16
	0x03812AF0 MOV X0, X21
	0x03812AF4 LDR X9, [X8 + 0x7E8]
	0x03812AF8 LDR X2, [X8 + 0x7F0]
	0x03812AFC LDR X22, [X22 + 0xDC0]
	0x03812B00 BLR X9
	0x03812B04 LDR X8, [X22]
	0x03812B08 MOV X21, X0
	0x03812B0C LDR W9, [X8 + 0xE0]
	0x03812B10 CBNZ W9, 0x3812B1C
	0x03812B14 MOV X0, X8
	0x03812B18 BL 0x1C16DFC
	0x03812B1C MOV X0, X21
	0x03812B20 MOV X1, X20
	0x03812B24 MOV X2, X19
	0x03812B28 LDP X20, X19, [X31 + 0x20]
	0x03812B2C LDP X22, X21, [X31 + 0x10]
	0x03812B30 LDR X30, [X31], #0x30
	0x03812B34 B 0x3812B3C
	0x03812B38 BL 0x1C16F20
	0x03812B3C STP X29, X30, [X31 - 0x60]!
	0x03812B40 STP X28, X27, [X31 + 0x10]
	0x03812B44 STP X26, X25, [X31 + 0x20]
	0x03812B48 STP X24, X23, [X31 + 0x30]
	0x03812B4C STP X22, X21, [X31 + 0x40]
	0x03812B50 STP X20, X19, [X31 + 0x50]
	0x03812B54 SUB X31, X31, 0x1E0
	0x03812B58 STR X1, [X31 + 0x28]
	0x03812B5C MRS X8, 0xC000
	0x03812B60 STP X8, X2, [X31 + 0x8]
	0x03812B64 LDR X8, [X8 + 0x28]
	0x03812B68 ADRP X19, 0xBCF000
	0x03812B6C MOV X20, X0
	0x03812B70 STR X8, [X31 + 0x1D8]
	0x03812B74 LDRB W8, [X19 + 0x4D8]
	0x03812B78 TBNZ X8, 0x0, 0x3812C14
	0x03812B7C ADRP X0, 0x938000
	0x03812B80 LDR X0, [X0 + 0x850]
	0x03812B84 BL 0x1C16CF4
	0x03812B88 ADRP X0, 0x938000
	0x03812B8C LDR X0, [X0 + 0x858]
	0x03812B90 BL 0x1C16CF4
	0x03812B94 ADRP X0, 0x90A000
	0x03812B98 LDR X0, [X0 + 0x3A8]
	0x03812B9C BL 0x1C16CF4
	0x03812BA0 ADRP X0, 0x938000
	0x03812BA4 LDR X0, [X0 + 0x770]
	0x03812BA8 BL 0x1C16CF4
	0x03812BAC ADRP X0, 0x909000
	0x03812BB0 LDR X0, [X0 + 0xDC0]
	0x03812BB4 BL 0x1C16CF4
	0x03812BB8 ADRP X0, 0x933000
	0x03812BBC LDR X0, [X0 + 0x6A0]
	0x03812BC0 BL 0x1C16CF4
	0x03812BC4 ADRP X0, 0x938000
	0x03812BC8 LDR X0, [X0 + 0x860]
	0x03812BCC BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+32], X30
	003 Move [X31+48], X26
	004 Move [X31+56], X25
	005 Move [X31+64], X24
	006 Move [X31+72], X23
	007 Move [X31+80], X22
	008 Move [X31+88], X21
	009 Move [X31+96], X20
	010 Move [X31+104], X19
	011 Move X24, 0xBD0000
	012 Move X23, 0x939000
	013 Move X22, 0x939000
	014 Move X21, 0x939000
	015 Move W8, [X24+1234]
	016 Move X23, [X23+1864]
	017 Move X22, [X22+1872]
	018 Move X21, [X21+1880]
	019 Move X19, X1
	020 Move X20, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {63}
	025 Move X0, 0x939000
	026 Move X0, [X0+1888]
	027 Call 0x1C17CF4
	028 Move X0, 0x939000
	029 Move X0, [X0+1880]
	030 Call 0x1C17CF4
	031 Move X0, 0x939000
	032 Move X0, [X0+1896]
	033 Call 0x1C17CF4
	034 Move X0, 0x939000
	035 Move X0, [X0+1904]
	036 Call 0x1C17CF4
	037 Move X0, 0x939000
	038 Move X0, [X0+1912]
	039 Call 0x1C17CF4
	040 Move X0, 0x90A000
	041 Move X0, [X0+3520]
	042 Call 0x1C17CF4
	043 Move X0, 0x939000
	044 Move X0, [X0+1920]
	045 Call 0x1C17CF4
	046 Move X0, 0x939000
	047 Move X0, [X0+1872]
	048 Call 0x1C17CF4
	049 Move X0, 0x939000
	050 Move X0, [X0+1864]
	051 Call 0x1C17CF4
	052 Move X0, 0x8E2000
	053 Move X0, [X0+1728]
	054 Call 0x1C17CF4
	055 Move X0, 0x939000
	056 Move X0, [X0+1928]
	057 Call 0x1C17CF4
	058 Move X0, 0x939000
	059 Move X0, [X0+1936]
	060 Call 0x1C17CF4
	061 Move W8, 1
	062 Move [X24+1234], W8
	063 Move X0, [X23]
	064 Move X26, 0x90A000
	065 Move X26, [X26+3520]
	066 Move [X31], X31
	067 Move [X31+8], X31
	068 Call 0x1C17F10
	069 Move X1, [X22]
	070 Move X22, X0
	071 Call List`1<ControlItem>..ctor, X0
	072 Move X2, [X21]
	073 Move W1, 1
	074 Move X0, X19
	075 Call 0x21A99DC, X0, X1
	076 Move X21, X0
	077 Move [X31+40], W31
	078 Compare X0, 0
	079 JumpIfEqual {162}
	080 Move X24, 0x8E2000
	081 Move X24, [X24+1728]
	082 Move X23, [X21+16]
	083 Move X0, [X24]
	084 Move W8, [X0+224]
	085 Compare W8, 0
	086 JumpIfNotEqual {88}
	087 Call 0x1C17DFC
	088 Move X0, X23
	089 Move X1, X31
	090 Move X2, X31
	091 Call Type.op_Inequality, X0, X1
	092 Move TEMP, X0
	093 And TEMP, TEMP, 1
	094 Compare TEMP, 1
	095 JumpIfNotEqual {162}
	096 Move X0, [X26]
	097 Move X23, [X21+16]
	098 Move W8, [X0+224]
	099 Compare W8, 0
	100 JumpIfNotEqual {102}
	101 Call 0x1C17DFC
	102 Move X0, X23
	103 Move X1, X22
	104 Move X2, X20
	105 Call InputControlLayout.AddControlItems, X0, X1, X2
	106 Move X8, 0x939000
	107 Move X0, [X24]
	108 Move X8, [X8+1904]
	109 Move W9, [X0+224]
	110 Move X23, [X8]
	111 Compare W9, 0
	112 JumpIfNotEqual {114}
	113 Call 0x1C17DFC
	114 Move X0, X23
	115 Move X1, X31
	116 Call Type.GetTypeFromHandle, X0
	117 Compare X0, 0
	118 JumpIfEqual {333}
	119 Move X8, [X0]
	120 Move X1, [X21+16]
	121 Move X9, [X8+680]
	122 Move X2, [X8+688]
	123 NotImplemented "Instruction BLR not yet implemented."
	124 Move TEMP, X0
	125 And TEMP, TEMP, 1
	126 Compare TEMP, 1
	127 JumpIfNotEqual {173}
	128 Move X0, [X21+16]
	129 Move X1, X31
	130 Call Activator.CreateInstance, X0
	131 Compare X0, 0
	132 JumpIfEqual {333}
	133 Move X24, 0x939000
	134 Move X24, [X24+1912]
	135 Move X25, X0
	136 Move X23, [X24]
	137 Move X1, X23
	138 Call 0x1C17E00
	139 Compare X0, 0
	140 JumpIfEqual {334}
	141 Move X24, [X24]
	142 Move X0, X25
	143 Move X1, X24
	144 Call 0x1C17E00
	145 Compare X0, 0
	146 JumpIfEqual {337}
	147 Move X8, [X0]
	148 Move X23, X0
	149 NotImplemented "Instruction LDRH not yet implemented."
	150 Compare X9, 0
	151 JumpIfEqual {158}
	152 Move X10, [X8+176]
	153 Add X10, X10, 8
	154 NotImplemented "Instruction LDUR not yet implemented."
	155 NotImplemented "Instruction CMP not yet implemented."
	156 Subtract X9, X9, 1
	157 Add X10, X10, 16
	158 Move X0, X23
	159 Move X1, X24
	160 Move W2, W31
	161 Call 0x1C5D788
	162 Move X0, [X26]
	163 Move W8, [X0+224]
	164 Compare W8, 0
	165 JumpIfNotEqual {167}
	166 Call 0x1C17DFC
	167 Move X0, X19
	168 Move X1, X22
	169 Move X2, X20
	170 Call InputControlLayout.AddControlItems, X0, X1, X2
	171 Compare X21, 0
	172 JumpIfEqual {200}
	173 Move X0, [X21+24]
	174 Move X1, X31
	175 Call String.IsNullOrEmpty, X0
	176 Move TEMP, X0
	177 And TEMP, TEMP, 1
	178 Compare TEMP, 1
	179 JumpIfEqual {184}
	180 Move X1, [X21+24]
	181 Add X0, X31, 40
	182 Move X2, X31
	183 Call FourCC..ctor, X0, X1
	184 Move [X31], X31
	185 Move [X31+8], X31
	186 Move X1, [X21+40]
	187 Add X0, X31, 0
	188 Move X2, X31
	189 Call InternedString..ctor, X0, X1
	190 NotImplemented "Instruction LDRSW not yet implemented."
	191 Add X8, X8, X9
	192 Add X0, X8, 312
	193 Move X8, [X0]
	194 Move X1, [X0+8]
	195 Move X0, X23
	196 NotImplemented "Instruction BLR not yet implemented."
	197 Move [X31+40], W0
	198 Compare X21, 0
	199 JumpIfNotEqual {173}
	200 Move [X31], X31
	201 Move [X31+8], X31
	202 Move X0, [X26]
	203 Call 0x1C17F10
	204 Move X1, X31
	205 Move X23, X0
	206 Call Object..ctor, X0
	207 Add X0, X31, 16
	208 Move X1, X20
	209 Move X2, X31
	210 Move [X31+16], X31
	211 Move [X31+24], X31
	212 Call InternedString..ctor, X0, X1
	213 Move V0, [X31+1]
	214 Move [X23+32], X19
	215 Move [X23+1], V0
	216 Compare X22, 0
	217 JumpIfEqual {333}
	218 Move X8, 0x939000
	219 Move X8, [X8+1920]
	220 Move X0, X22
	221 Move X1, [X8]
	222 Call List`1<ControlItem>.ToArray, X0
	223 Move [X23+144], X0
	224 Move W8, [X31+40]
	225 NotImplemented "Instruction CMP not yet implemented."
	226 NotImplemented "Instruction CSEL not yet implemented."
	227 Move [X23+56], W8
	228 Move V0, [X31]
	229 Move [X23+40], V0
	230 Compare X21, 0
	231 JumpIfEqual {237}
	232 NotImplemented "Instruction LDURH not yet implemented."
	233 Move X20, X31
	234 Move X19, X23
	235 NotImplemented "Instruction STRH not yet implemented."
	236 Move W8, [X21+53]
	237 Compare X9, 0
	238 JumpIfEqual {333}
	239 Move X19, X31
	240 Move W8, W31
	241 NotImplemented "Instruction STRH not yet implemented."
	242 Move X20, X23
	243 Move W9, [X23+168]
	244 And W9, W9, 0xFFFFFFFE
	245 Or W8, W9, W8
	246 Move [X23+168], W8
	247 Compare X21, 0
	248 JumpIfEqual {308}
	249 Move W9, [X21+72]
	250 And W8, W8, 0xFFFFFFFD
	251 Or W8, W8, W9
	252 Move [X23+168], W8
	253 Compare X19, 0
	254 JumpIfEqual {333}
	255 NotImplemented "Instruction LDUR not yet implemented."
	256 Move X0, X19
	257 Move [X19+152], V0
	258 NotImplemented "Instruction LDURH not yet implemented."
	259 Call InputControlLayout.set_canRunInBackground, X0, X1
	260 Move W8, [X19+168]
	261 Move W9, [X21+48]
	262 And W8, W8, 0xFFFFFFDF
	263 Or W8, W8, W9
	264 Move [X19+168], W8
	265 Move X20, [X21+32]
	266 Compare X20, 0
	267 JumpIfEqual {321}
	268 Move X23, 0x939000
	269 Move X23, [X23+1936]
	270 Move X0, [X23]
	271 Move W8, [X0+224]
	272 Compare W8, 0
	273 JumpIfNotEqual {276}
	274 Call 0x1C17DFC
	275 Move X0, [X23]
	276 Move X8, [X0+184]
	277 Move X21, [X8+8]
	278 Compare X21, 0
	279 JumpIfNotEqual {301}
	280 Move W8, [X0+224]
	281 Compare W8, 0
	282 JumpIfNotEqual {285}
	283 Call 0x1C17DFC
	284 Move X0, [X23]
	285 Move X9, 0x939000
	286 Move X8, [X0+184]
	287 Move X9, [X9+1896]
	288 Move X22, [X8]
	289 Move X0, [X9]
	290 Call 0x1C17F10
	291 Move X8, 0x939000
	292 Move X8, [X8+1928]
	293 Move X1, X22
	294 Move X3, X31
	295 Move X21, X0
	296 Move X2, [X8]
	297 Call Func`2<Object, InternedString>..ctor, X0, X1, X2
	298 Move X8, [X23]
	299 Move X8, [X8+184]
	300 Move [X8+8], X21
	301 Move X8, 0x939000
	302 Move X8, [X8+1888]
	303 Move X0, X20
	304 Move X1, X21
	305 Move X2, [X8]
	306 Call ArrayHelpers.Select, X0, X1
	307 Move [X19+136], X0
	308 And W8, W8, 0xFFFFFFFD
	309 Move [X23+168], W8
	310 Compare X20, 0
	311 JumpIfEqual {333}
	312 Move X0, X20
	313 Move X1, X31
	314 Move [X20+152], X31
	315 Move [X20+160], X31
	316 Call InputControlLayout.set_canRunInBackground, X0, X1
	317 Move W8, [X20+168]
	318 Move X19, X20
	319 And W8, W8, 0xFFFFFFDF
	320 Move [X20+168], W8
	321 Move X0, X19
	322 Move X20, [X31+96]
	323 Move X19, [X31+104]
	324 Move X22, [X31+80]
	325 Move X21, [X31+88]
	326 Move X24, [X31+64]
	327 Move X23, [X31+72]
	328 Move X26, [X31+48]
	329 Move X25, [X31+56]
	330 Move X30, [X31+32]
	331 Add X31, X31, 112
	332 Return X0
	333 Call 0x1C17F20
	334 Move X0, X25
	335 Move X1, X23
	336 Call 0x1C181E0
	337 Move X0, X25
	338 Move X1, X24
	339 Call 0x1C181E0

Method: System.String ToJson()

Disassembly:
	0x03812C9C MOV X0, X24
	0x03812CA0 MOV X2, X31
	0x03812CA4 BL 0x3395194
	0x03812CA8 TBNZ X0, 0x0, 0x3813008
	0x03812CAC MOV X0, X23
	0x03812CB0 MOV X1, X31
	0x03812CB4 BL 0x3768D64
	0x03812CB8 LDR X8, [X28]
	0x03812CBC MOV X24, X0
	0x03812CC0 LDR W9, [X8 + 0xE0]
	0x03812CC4 CBNZ W9, 0x3812CD0
	0x03812CC8 MOV X0, X8
	0x03812CCC BL 0x1C16DFC
	0x03812CD0 MOV X0, X24
	0x03812CD4 MOV X1, X31
	0x03812CD8 MOV X2, X31
	0x03812CDC BL 0x3395F0C
	0x03812CE0 TBZ X0, 0x0, 0x3812F10
	0x03812CE4 CBZ X24, 0x381304C
	0x03812CE8 MOV X0, X24
	0x03812CEC MOV X1, X31
	0x03812CF0 BL 0x33970C4
	0x03812CF4 TBZ X0, 0x0, 0x3812F10
	0x03812CF8 LDR X0, [X28]
	0x03812CFC ADRP X9, 0x938000
	0x03812D00 LDR W8, [X0 + 0xE0]
	0x03812D04 LDR X9, [X9 + 0x770]
	0x03812D08 LDR X25, [X9]
	0x03812D0C CBNZ W8, 0x3812D14
	0x03812D10 BL 0x1C16DFC
	0x03812D14 MOV X0, X25

ISIL:
	001 Subtract X31, X31, 240
	002 Move [X31+208], X30
	003 Move [X31+216], X21
	004 Move [X31+224], X20
	005 Move [X31+232], X19
	006 Move X21, 0xBD0000
	007 Move X20, 0x939000
	008 Move W8, [X21+1235]
	009 Move X20, [X20+1944]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x939000
	016 Move X0, [X0+1944]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+1235], W8
	020 Add X8, X31, 104
	021 Move X0, X19
	022 Call LayoutJson.FromLayout, X0
	023 Add X0, X31, 0
	024 Add X1, X31, 104
	025 Move W2, 104
	026 Call 0x3EB2AC0
	027 Move X0, [X20]
	028 Add X1, X31, 0
	029 Call 0x1C17E04
	030 Move W1, 1
	031 Move X2, X31
	032 Call JsonUtility.ToJson, X0, X1
	033 Move X20, [X31+224]
	034 Move X19, [X31+232]
	035 Move X30, [X31+208]
	036 Move X21, [X31+216]
	037 Add X31, X31, 240
	038 Return X0

Method: UnityEngine.InputSystem.Layouts.InputControlLayout FromJson(System.String json)

Disassembly:
	0x03813058 STR X29, [X31 - 0x60]!
	0x0381305C STP X30, X27, [X31 + 0x10]
	0x03813060 STP X26, X25, [X31 + 0x20]
	0x03813064 STP X24, X23, [X31 + 0x30]
	0x03813068 STP X22, X21, [X31 + 0x40]
	0x0381306C STP X20, X19, [X31 + 0x50]
	0x03813070 SUB X31, X31, 0x410
	0x03813074 ADRP X22, 0xBCE000
	0x03813078 LDRB W8, [X22 + 0x4D9]
	0x0381307C MOV X19, X2
	0x03813080 MOV X21, X1
	0x03813084 MOV X20, X0
	0x03813088 TBNZ X8, 0x0, 0x38130AC
	0x0381308C ADRP X0, 0x908000
	0x03813090 LDR X0, [X0 + 0xDC0]
	0x03813094 BL 0x1C16CF4
	0x03813098 ADRP X0, 0x937000
	0x0381309C LDR X0, [X0 + 0x7E8]
	0x038130A0 BL 0x1C16CF4
	0x038130A4 MOVZ W8, 0x1
	0x038130A8 STRB W8, [X22 + 0x4D9]
	0x038130AC ADD X0, X31, 0x1A0
	0x038130B0 MOVZ W2, 0xD0
	0x038130B4 MOV W1, W31
	0x038130B8 BL 0x3EB1B10
	0x038130BC ADD X0, X31, 0xD0
	0x038130C0 MOVZ W2, 0xD0
	0x038130C4 MOV W1, W31

ISIL:
	001 Subtract X31, X31, 240
	002 Move [X31+208], X30
	003 Move [X31+216], X21
	004 Move [X31+224], X20
	005 Move [X31+232], X19
	006 Move X20, 0xBCF000
	007 Move X21, 0x938000
	008 Move W8, [X20+1236]
	009 Move X21, [X21+2000]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x938000
	016 Move X0, [X0+2000]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+1236], W8
	020 Move X1, [X21]
	021 Add X8, X31, 0
	022 Move X0, X19
	023 Call JsonUtility.FromJson, X0
	024 Add X0, X31, 104
	025 Add X1, X31, 0
	026 Move W2, 104
	027 Call 0x3EB2AC0
	028 Add X0, X31, 104
	029 Call LayoutJson.ToLayout, X0
	030 Move X20, [X31+224]
	031 Move X19, [X31+232]
	032 Move X30, [X31+208]
	033 Move X21, [X31+216]
	034 Add X31, X31, 240
	035 Return X0

Method: System.Void .ctor(System.String name, System.Type type)

Disassembly:
	0x03812C4C CMP W29, W8
	0x03812C50 B.CS 0x3813050
	0x03812C54 ADD X8, X20, W29, 0x3, SXTW
	0x03812C58 LDR X23, [X8 + 0x20]
	0x03812C5C CBZ X23, 0x381304C
	0x03812C60 LDR X8, [X23]
	0x03812C64 MOV X0, X23
	0x03812C68 LDP X9, X1, [X8 + 0x1B8]
	0x03812C6C BLR X9
	0x03812C70 LDR X8, [X28]
	0x03812C74 LDR X25, [X27]
	0x03812C78 MOV X24, X0
	0x03812C7C LDR W9, [X8 + 0xE0]
	0x03812C80 CBNZ W9, 0x3812C8C
	0x03812C84 MOV X0, X8
	0x03812C88 BL 0x1C16DFC
	0x03812C8C MOV X0, X25
	0x03812C90 MOV X1, X31
	0x03812C94 BL 0x338C698
	0x03812C98 MOV X1, X0

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, X1
	007 Move X1, X31
	008 Move X19, X2
	009 Move X21, X0
	010 Call Object..ctor, X0
	011 Add X0, X31, 0
	012 Move X1, X20
	013 Move X2, X31
	014 Move [X31], X31
	015 Move [X31+8], X31
	016 Call InternedString..ctor, X0, X1
	017 Move V0, [X31]
	018 Move [X21+32], X19
	019 Move X20, [X31+32]
	020 Move X19, [X31+40]
	021 Move [X21+1], V0
	022 Move X30, [X31+16]
	023 Move X21, [X31+24]
	024 Add X31, X31, 48
	025 Return 

Method: System.Void AddControlItems(System.Type type, System.Collections.Generic.List`1<UnityEngine.InputSystem.Layouts.InputControlLayout/ControlItem> controlLayouts, System.String layoutName)

Disassembly:
	0x03812BD0 ADRP X0, 0x938000
	0x03812BD4 LDR X0, [X0 + 0x868]
	0x03812BD8 BL 0x1C16CF4
	0x03812BDC ADRP X0, 0x938000
	0x03812BE0 LDR X0, [X0 + 0x870]
	0x03812BE4 BL 0x1C16CF4
	0x03812BE8 ADRP X0, 0x909000
	0x03812BEC LDR X0, [X0 + 0x850]
	0x03812BF0 BL 0x1C16CF4
	0x03812BF4 ADRP X0, 0x90A000
	0x03812BF8 LDR X0, [X0 + 0x3F0]
	0x03812BFC BL 0x1C16CF4
	0x03812C00 ADRP X0, 0x8E1000
	0x03812C04 LDR X0, [X0 + 0x6C0]
	0x03812C08 BL 0x1C16CF4
	0x03812C0C MOVZ W8, 0x1
	0x03812C10 STRB W8, [X19 + 0x4D8]
	0x03812C14 STR X31, [X31 + 0xB8]
	0x03812C18 CBZ X20, 0x381304C
	0x03812C1C LDR W8, [X20 + 0x18]
	0x03812C20 CMP W8, 0x1
	0x03812C24 B.LT 0x3813018
	0x03812C28 ADRP X27, 0x933000
	0x03812C2C ADRP X28, 0x8E1000
	0x03812C30 LDR X27, [X27 + 0x6A0]
	0x03812C34 LDR X28, [X28 + 0x6C0]
	0x03812C38 ADD X9, X31, 0xC0
	0x03812C3C ADD X19, X9, 0x8C
	0x03812C40 MOV W29, W31
	0x03812C44 MOV X21, X19
	0x03812C48 STR X19, [X31 + 0x20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0xBD0000
	008 Move X23, 0x90A000
	009 Move W8, [X22+1237]
	010 Move X23, [X23+3520]
	011 Move X19, X2
	012 Move X20, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x90A000
	019 Move X0, [X0+3520]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+1237], W8
	023 Move X0, [X23]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, X21
	029 Move X1, X20
	030 Move X2, X19
	031 Call InputControlLayout.AddControlItemsFromFields, X0, X1, X2
	032 Move X0, X21
	033 Move X1, X20
	034 Move X2, X19
	035 Move X20, [X31+32]
	036 Move X19, [X31+40]
	037 Move X22, [X31+16]
	038 Move X21, [X31+24]
	039 Move X30, [X31+48]
	040 Move X23, [X31+56]
	041 Call InputControlLayout.AddControlItemsFromProperties, X0, X1, X2
	042 Return 

Method: System.Void AddControlItemsFromFields(System.Type type, System.Collections.Generic.List`1<UnityEngine.InputSystem.Layouts.InputControlLayout/ControlItem> controlLayouts, System.String layoutName)

Disassembly:
	0x03813A14 MOVN W0, 0x0
	0x03813A18 B.NE 0x381351C
	0x03813A1C LDR X11, [X8 + 0xC8]
	0x03813A20 ADD X10, X11, X10, 0x3, LSL
	0x03813A24 LDUR X10, [X10 - 0x8]
	0x03813A28 CMP X10, X9
	0x03813A2C B.NE 0x381351C
	0x03813A30 LDP X9, X1, [X8 + 0x1B8]
	0x03813A34 MOV X0, X26
	0x03813A38 MOV X21, X23
	0x03813A3C BLR X9
	0x03813A40 LDR X8, [X26]
	0x03813A44 MOV X22, X0
	0x03813A48 MOV X0, X26
	0x03813A4C LDP X9, X1, [X8 + 0x1A8]
	0x03813A50 BLR X9
	0x03813A54 ADRP X8, 0x908000
	0x03813A58 LDR X8, [X8 + 0x850]
	0x03813A5C MOV X23, X0
	0x03813A60 LDR X8, [X8]
	0x03813A64 LDR W9, [X8 + 0xE0]
	0x03813A68 CBNZ W9, 0x3813A74
	0x03813A6C MOV X0, X8
	0x03813A70 BL 0x1C16DFC
	0x03813A74 MOV X0, X22
	0x03813A78 MOV X1, X23
	0x03813A7C MOV X2, X31
	0x03813A80 BL 0x32C1328
	0x03813A84 STR X0, [X31 + 0x120]
	0x03813A88 ADD X0, X31, 0x120
	0x03813A8C MOV X1, X31
	0x03813A90 BL 0x33C68D4
	0x03813A94 MOV X23, X21
	0x03813A98 B 0x381351C
	0x03813A9C ADRP X8, 0x937000
	0x03813AA0 LDR X8, [X8 + 0x880]
	0x03813AA4 MOV X0, X26

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xBCF000
	007 Move W8, [X22+1238]
	008 Move X19, X2
	009 Move X20, X1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x909000
	016 Move X0, [X0+3520]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+1238], W8
	020 Compare X21, 0
	021 JumpIfEqual {47}
	022 Move X8, [X21]
	023 Move X22, 0x909000
	024 Move W1, 22
	025 Move X0, X21
	026 Move X9, [X8+1672]
	027 Move X2, [X8+1680]
	028 Move X22, [X22+3520]
	029 NotImplemented "Instruction BLR not yet implemented."
	030 Move X8, [X22]
	031 Move X21, X0
	032 Move W9, [X8+224]
	033 Compare W9, 0
	034 JumpIfNotEqual {37}
	035 Move X0, X8
	036 Call 0x1C17DFC
	037 Move X0, X21
	038 Move X1, X20
	039 Move X2, X19
	040 Move X20, [X31+32]
	041 Move X19, [X31+40]
	042 Move X22, [X31+16]
	043 Move X21, [X31+24]
	044 Move X30, [X31+48]
	045 Call InputControlLayout.AddControlItemsFromMembers, X0, X1, X2
	046 Return 
	047 Call 0x1C17F20

Method: System.Void AddControlItemsFromProperties(System.Type type, System.Collections.Generic.List`1<UnityEngine.InputSystem.Layouts.InputControlLayout/ControlItem> controlLayouts, System.String layoutName)

Disassembly:
	0x03813AA8 MOV W1, W31
	0x03813AAC LDR X2, [X8]
	0x03813AB0 BL 0x21A89DC
	0x03813AB4 CBNZ X0, 0x38134C0
	0x03813AB8 B 0x3813488
	0x03813ABC BL 0x1C16F20
	0x03813AC0 SUB X31, X31, 0x50
	0x03813AC4 STR X30, [X31 + 0x20]
	0x03813AC8 STP X22, X21, [X31 + 0x30]
	0x03813ACC STP X20, X19, [X31 + 0x40]
	0x03813AD0 ADRP X20, 0xBCE000
	0x03813AD4 ADRP X21, 0x908000
	0x03813AD8 LDRB W8, [X20 + 0x4DB]
	0x03813ADC LDR X21, [X21 + 0xDC0]
	0x03813AE0 MOV X19, X0
	0x03813AE4 TBNZ X8, 0x0, 0x3813B08
	0x03813AE8 ADRP X0, 0x908000
	0x03813AEC LDR X0, [X0 + 0xDC0]
	0x03813AF0 BL 0x1C16CF4
	0x03813AF4 ADRP X0, 0x934000
	0x03813AF8 LDR X0, [X0 + 0x5F8]
	0x03813AFC BL 0x1C16CF4
	0x03813B00 MOVZ W8, 0x1
	0x03813B04 STRB W8, [X20 + 0x4DB]
	0x03813B08 LDR X0, [X21]
	0x03813B0C STP X31, X31, [X31]
	0x03813B10 LDR W8, [X0 + 0xE0]
	0x03813B14 CBNZ W8, 0x3813B20
	0x03813B18 BL 0x1C16DFC
	0x03813B1C LDR X0, [X21]
	0x03813B20 LDR X8, [X0 + 0xB8]
	0x03813B24 MOV X1, X19
	0x03813B28 ADD X0, X8, 0x10
	0x03813B2C BL 0x3813D04
	0x03813B30 STP X0, X1, [X31 + 0x10]
	0x03813B34 ADD X0, X31, 0x10
	0x03813B38 MOV X1, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xBCF000
	007 Move W8, [X22+1239]
	008 Move X19, X2
	009 Move X20, X1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x909000
	016 Move X0, [X0+3520]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+1239], W8
	020 Compare X21, 0
	021 JumpIfEqual {45}
	022 Move X8, [X21]
	023 Move X22, 0x909000
	024 Move W1, 22
	025 Move X0, X21
	026 Move X9, [X8+2024]
	027 Move X2, [X8+2032]
	028 Move X22, [X22+3520]
	029 NotImplemented "Instruction BLR not yet implemented."
	030 Move X8, [X22]
	031 Move X21, X0
	032 Move W9, [X8+224]
	033 Compare W9, 0
	034 JumpIfNotEqual {37}
	035 Move X0, X8
	036 Call 0x1C17DFC
	037 Move X0, X21
	038 Move X1, X20
	039 Move X2, X19
	040 Move X20, [X31+32]
	041 Move X19, [X31+40]
	042 Move X22, [X31+16]
	043 Move X21, [X31+24]
	044 Move X30, [X31+48]
	045 Call 0x1C17F20

Method: System.Void AddControlItemsFromMembers(System.Reflection.MemberInfo[] members, System.Collections.Generic.List`1<UnityEngine.InputSystem.Layouts.InputControlLayout/ControlItem> controlItems, System.String layoutName)

Disassembly:
	0x03813B3C BL 0x375F7A0
	0x03813B40 TBZ X0, 0x0, 0x3813C50
	0x03813B44 CBZ X19, 0x3813C70
	0x03813B48 LDR X8, [X19]
	0x03813B4C MOV X0, X19
	0x03813B50 LDP X9, X1, [X8 + 0x1A8]
	0x03813B54 BLR X9
	0x03813B58 MOV X1, X0
	0x03813B5C ADD X0, X31, 0x0
	0x03813B60 MOV X2, X31
	0x03813B64 BL 0x3757420
	0x03813B68 LDR X0, [X21]
	0x03813B6C LDR W8, [X0 + 0xE0]
	0x03813B70 CBNZ W8, 0x3813B7C
	0x03813B74 BL 0x1C16DFC
	0x03813B78 LDR X0, [X21]
	0x03813B7C LDR X8, [X0 + 0xB8]
	0x03813B80 LDP X1, X2, [X31]
	0x03813B84 ADD X0, X8, 0x10
	0x03813B88 BL 0x3813EB4
	0x03813B8C TBZ X0, 0x0, 0x3813B9C
	0x03813B90 LDR V0, [X31]
	0x03813B94 STR V0, [X31 + 0x1]
	0x03813B98 B 0x3813C50
	0x03813B9C LDR X8, [X19]
	0x03813BA0 MOV X0, X19
	0x03813BA4 LDP X9, X1, [X8 + 0x1A8]
	0x03813BA8 BLR X9
	0x03813BAC CBZ X0, 0x3813C70
	0x03813BB0 ADRP X22, 0x934000
	0x03813BB4 LDR X22, [X22 + 0x5F8]
	0x03813BB8 MOV X2, X31
	0x03813BBC LDR X1, [X22]
	0x03813BC0 BL 0x3226588
	0x03813BC4 TBZ X0, 0x0, 0x3813C50
	0x03813BC8 LDR X8, [X19]
	0x03813BCC MOV X0, X19
	0x03813BD0 LDP X9, X1, [X8 + 0x1A8]
	0x03813BD4 BLR X9
	0x03813BD8 LDR X8, [X19]
	0x03813BDC MOV X20, X0
	0x03813BE0 MOV X0, X19
	0x03813BE4 LDP X9, X1, [X8 + 0x1A8]
	0x03813BE8 BLR X9
	0x03813BEC CBZ X0, 0x3813C70
	0x03813BF0 LDR X8, [X22]
	0x03813BF4 CBZ X8, 0x3813C70
	0x03813BF8 CBZ X20, 0x3813C70
	0x03813BFC LDR W9, [X0 + 0x10]
	0x03813C00 LDR W8, [X8 + 0x10]
	0x03813C04 MOV X0, X20
	0x03813C08 MOV W1, W31
	0x03813C0C MOV X3, X31
	0x03813C10 SUB W2, W9, W8
	0x03813C14 BL 0x3228DE4
	0x03813C18 MOV X1, X0
	0x03813C1C ADD X0, X31, 0x0
	0x03813C20 MOV X2, X31
	0x03813C24 BL 0x3757420
	0x03813C28 LDR X0, [X21]
	0x03813C2C LDR W8, [X0 + 0xE0]
	0x03813C30 CBNZ W8, 0x3813C3C
	0x03813C34 BL 0x1C16DFC
	0x03813C38 LDR X0, [X21]
	0x03813C3C LDR X8, [X0 + 0xB8]
	0x03813C40 LDP X1, X2, [X31]
	0x03813C44 ADD X0, X8, 0x10
	0x03813C48 BL 0x3813EB4
	0x03813C4C TBNZ X0, 0x0, 0x3813B90
	0x03813C50 LDP X0, X1, [X31 + 0x10]
	0x03813C54 MOV X2, X31
	0x03813C58 BL 0x37577E0
	0x03813C5C LDP X20, X19, [X31 + 0x40]
	0x03813C60 LDP X22, X21, [X31 + 0x30]
	0x03813C64 LDR X30, [X31 + 0x20]
	0x03813C68 ADD X31, X31, 0x50
	0x03813C6C RET
	0x03813C70 BL 0x1C16F20
	0x03813C74 LDR W8, [X0 + 0x98]
	0x03813C78 BFM W8, W1, 0x0, 0x0
	0x03813C7C STR W8, [X0 + 0x98]
	0x03813C80 RET
	0x03813C84 LDR W8, [X0 + 0x98]
	0x03813C88 ANDS W31, W1, 0x1
	0x03813C8C MOVZ W9, 0x8
	0x03813C90 CSEL W9, W9, W31, NE
	0x03813C94 AND W8, W8, 0xFFFFFFF7
	0x03813C98 ORR W8, W8, W9, 0x0
	0x03813C9C STR W8, [X0 + 0x98]
	0x03813CA0 RET
	0x03813CA4 LDR W8, [X0 + 0x98]
	0x03813CA8 ANDS W31, W1, 0x1
	0x03813CAC MOVZ W9, 0x2
	0x03813CB0 CSEL W9, W9, W31, NE
	0x03813CB4 AND W8, W8, 0xFFFFFFFD
	0x03813CB8 ORR W8, W8, W9, 0x0
	0x03813CBC STR W8, [X0 + 0x98]
	0x03813CC0 RET
	0x03813CC4 LDR W8, [X0 + 0x98]
	0x03813CC8 ANDS W31, W1, 0x1
	0x03813CCC MOVZ W9, 0x10
	0x03813CD0 CSEL W9, W9, W31, NE
	0x03813CD4 AND W8, W8, 0xFFFFFFEF
	0x03813CD8 ORR W8, W8, W9, 0x0
	0x03813CDC STR W8, [X0 + 0x98]
	0x03813CE0 RET
	0x03813CE4 LDR W8, [X0 + 0x98]
	0x03813CE8 ANDS W31, W1, 0x1
	0x03813CEC MOVZ W9, 0x4
	0x03813CF0 CSEL W9, W9, W31, NE
	0x03813CF4 AND W8, W8, 0xFFFFFFFB
	0x03813CF8 ORR W8, W8, W9, 0x0
	0x03813CFC STR W8, [X0 + 0x98]
	0x03813D00 RET
	0x03813D04 SUB X31, X31, 0x70
	0x03813D08 STP X30, X25, [X31 + 0x30]
	0x03813D0C STP X24, X23, [X31 + 0x40]
	0x03813D10 STP X22, X21, [X31 + 0x50]
	0x03813D14 STP X20, X19, [X31 + 0x60]
	0x03813D18 ADRP X21, 0xBCE000
	0x03813D1C LDRB W8, [X21 + 0x4F5]
	0x03813D20 MOV X19, X1
	0x03813D24 MOV X20, X0
	0x03813D28 TBNZ X8, 0x0, 0x3813D88
	0x03813D2C ADRP X0, 0x933000
	0x03813D30 LDR X0, [X0 + 0x690]
	0x03813D34 BL 0x1C16CF4
	0x03813D38 ADRP X0, 0x933000
	0x03813D3C LDR X0, [X0 + 0x698]
	0x03813D40 BL 0x1C16CF4
	0x03813D44 ADRP X0, 0x933000
	0x03813D48 LDR X0, [X0 + 0x6A0]
	0x03813D4C BL 0x1C16CF4
	0x03813D50 ADRP X0, 0x933000
	0x03813D54 LDR X0, [X0 + 0x6A8]
	0x03813D58 BL 0x1C16CF4
	0x03813D5C ADRP X0, 0x933000
	0x03813D60 LDR X0, [X0 + 0x6B0]
	0x03813D64 BL 0x1C16CF4
	0x03813D68 ADRP X0, 0x933000
	0x03813D6C LDR X0, [X0 + 0x6B8]
	0x03813D70 BL 0x1C16CF4
	0x03813D74 ADRP X0, 0x8E0000
	0x03813D78 LDR X0, [X0 + 0x6C0]
	0x03813D7C BL 0x1C16CF4
	0x03813D80 MOVZ W8, 0x1
	0x03813D84 STRB W8, [X21 + 0x4F5]
	0x03813D88 MOVI V0.2D, 0x0
	0x03813D8C STP V0, V0, [X31 + 0x10]
	0x03813D90 STR V0, [X31]
	0x03813D94 LDR X0, [X20]
	0x03813D98 CBZ X0, 0x3813E3C
	0x03813D9C ADRP X8, 0x933000
	0x03813DA0 LDR X8, [X8 + 0x690]
	0x03813DA4 ADRP X24, 0x933000
	0x03813DA8 ADRP X25, 0x8E0000
	0x03813DAC ADRP X23, 0x933000
	0x03813DB0 LDR X1, [X8]
	0x03813DB4 LDR X24, [X24 + 0x6A0]
	0x03813DB8 LDR X25, [X25 + 0x6C0]
	0x03813DBC LDR X23, [X23 + 0x698]
	0x03813DC0 ADD X8, X31, 0x0
	0x03813DC4 BL 0x2A5ABD0
	0x03813DC8 LDR X1, [X24]
	0x03813DCC ADD X0, X31, 0x0
	0x03813DD0 BL 0x2C01CA0
	0x03813DD4 TBZ X0, 0x0, 0x3813E08
	0x03813DD8 LDR X0, [X25]
	0x03813DDC LDP X20, X21, [X31 + 0x10]
	0x03813DE0 LDR X22, [X31 + 0x20]
	0x03813DE4 LDR W8, [X0 + 0xE0]
	0x03813DE8 CBNZ W8, 0x3813DF0
	0x03813DEC BL 0x1C16DFC
	0x03813DF0 MOV X0, X22
	0x03813DF4 MOV X1, X19
	0x03813DF8 MOV X2, X31
	0x03813DFC BL 0x3395194
	0x03813E00 TBZ X0, 0x0, 0x3813DC8
	0x03813E04 B 0x3813E10
	0x03813E08 MOV X20, X31
	0x03813E0C MOV X21, X31
	0x03813E10 LDR X1, [X23]
	0x03813E14 ADD X0, X31, 0x0
	0x03813E18 BL 0x2C01DC8
	0x03813E1C MOV X0, X20
	0x03813E20 MOV X1, X21
	0x03813E24 LDP X20, X19, [X31 + 0x60]
	0x03813E28 LDP X22, X21, [X31 + 0x50]
	0x03813E2C LDP X24, X23, [X31 + 0x40]
	0x03813E30 LDP X30, X25, [X31 + 0x30]
	0x03813E34 ADD X31, X31, 0x70
	0x03813E38 RET
	0x03813E3C BL 0x1C16F20
	0x03813E40 B 0x3813E48
	0x03813E44 B 0x3813E48
	0x03813E48 MOV X19, X0
	0x03813E4C CMP W1, 0x1
	0x03813E50 B.NE 0x3813E7C
	0x03813E54 MOV X0, X19
	0x03813E58 BL 0x3EB1AD0
	0x03813E5C LDR X20, [X0]
	0x03813E60 BL 0x3EB1AE0
	0x03813E64 LDR X1, [X23]
	0x03813E68 ADD X0, X31, 0x0
	0x03813E6C BL 0x2C01DC8
	0x03813E70 CBNZ X20, 0x3813E84
	0x03813E74 MOV X21, X31
	0x03813E78 B 0x3813E1C
	0x03813E7C MOV X20, X31
	0x03813E80 B 0x3813E90
	0x03813E84 MOV X0, X20
	0x03813E88 BL 0x1C16F18
	0x03813E8C MOV X19, X0
	0x03813E90 LDR X1, [X23]
	0x03813E94 ADD X0, X31, 0x0
	0x03813E98 BL 0x2C01DC8
	0x03813E9C CBNZ X20, 0x3813EA8
	0x03813EA0 MOV X0, X19
	0x03813EA4 BL 0x1D2C690
	0x03813EA8 MOV X0, X20
	0x03813EAC BL 0x1C16F18
	0x03813EB0 BL 0x1990590
	0x03813EB4 STR X30, [X31 - 0x30]!
	0x03813EB8 STP X22, X21, [X31 + 0x10]
	0x03813EBC STP X20, X19, [X31 + 0x20]
	0x03813EC0 ADRP X22, 0xBCE000
	0x03813EC4 LDRB W8, [X22 + 0x4F7]
	0x03813EC8 MOV X19, X2
	0x03813ECC MOV X20, X1
	0x03813ED0 MOV X21, X0
	0x03813ED4 TBNZ X8, 0x0, 0x3813F04
	0x03813ED8 ADRP X0, 0x937000
	0x03813EDC LDR X0, [X0 + 0x8B0]
	0x03813EE0 BL 0x1C16CF4
	0x03813EE4 ADRP X0, 0x937000
	0x03813EE8 LDR X0, [X0 + 0x8B8]
	0x03813EEC BL 0x1C16CF4
	0x03813EF0 ADRP X0, 0x937000
	0x03813EF4 LDR X0, [X0 + 0x8C0]
	0x03813EF8 BL 0x1C16CF4
	0x03813EFC MOVZ W8, 0x1
	0x03813F00 STRB W8, [X22 + 0x4F7]
	0x03813F04 LDR X0, [X21]
	0x03813F08 CBZ X0, 0x3813F8C
	0x03813F0C ADRP X8, 0x937000
	0x03813F10 LDR X8, [X8 + 0x8B0]
	0x03813F14 MOV X1, X20
	0x03813F18 MOV X2, X19
	0x03813F1C LDR X3, [X8]
	0x03813F20 BL 0x2A5A970
	0x03813F24 TBNZ X0, 0x0, 0x3813F4C
	0x03813F28 LDR X0, [X21 + 0x8]
	0x03813F2C CBZ X0, 0x3813F8C
	0x03813F30 ADRP X8, 0x937000
	0x03813F34 LDR X8, [X8 + 0x8B8]
	0x03813F38 MOV X1, X20
	0x03813F3C MOV X2, X19
	0x03813F40 LDR X3, [X8]
	0x03813F44 BL 0x2A5A970
	0x03813F48 TBZ X0, 0x0, 0x3813F60
	0x03813F4C LDP X20, X19, [X31 + 0x20]
	0x03813F50 LDP X22, X21, [X31 + 0x10]
	0x03813F54 MOVZ W0, 0x1
	0x03813F58 LDR X30, [X31], #0x30
	0x03813F5C RET
	0x03813F60 LDR X0, [X21 + 0x10]
	0x03813F64 CBZ X0, 0x3813F8C
	0x03813F68 ADRP X8, 0x937000
	0x03813F6C LDR X8, [X8 + 0x8C0]
	0x03813F70 MOV X1, X20
	0x03813F74 MOV X2, X19
	0x03813F78 LDP X20, X19, [X31 + 0x20]
	0x03813F7C LDR X3, [X8]
	0x03813F80 LDP X22, X21, [X31 + 0x10]
	0x03813F84 LDR X30, [X31], #0x30
	0x03813F88 B 0x2A5A970
	0x03813F8C BL 0x1C16F20
	0x03813F90 STP X29, X30, [X31 - 0x60]!
	0x03813F94 STP X28, X27, [X31 + 0x10]
	0x03813F98 STP X26, X25, [X31 + 0x20]
	0x03813F9C STP X24, X23, [X31 + 0x30]
	0x03813FA0 STP X22, X21, [X31 + 0x40]
	0x03813FA4 STP X20, X19, [X31 + 0x50]
	0x03813FA8 SUB X31, X31, 0x1000
	0x03813FAC SUB X31, X31, 0x30
	0x03813FB0 MRS X23, 0xC000
	0x03813FB4 LDR X8, [X23 + 0x28]
	0x03813FB8 ADRP X19, 0xBCE000
	0x03813FBC MOV X20, X1
	0x03813FC0 STR X8, [X31 + 0x1028]
	0x03813FC4 LDRB W8, [X19 + 0x4DC]
	0x03813FC8 STR X0, [X31 + 0x28]
	0x03813FCC TBNZ X8, 0x0, 0x3814170
	0x03813FD0 ADRP X0, 0x937000
	0x03813FD4 LDR X0, [X0 + 0x8C8]
	0x03813FD8 BL 0x1C16CF4
	0x03813FDC ADRP X0, 0x937000
	0x03813FE0 LDR X0, [X0 + 0x8D0]
	0x03813FE4 BL 0x1C16CF4
	0x03813FE8 ADRP X0, 0x937000
	0x03813FEC LDR X0, [X0 + 0x8D8]
	0x03813FF0 BL 0x1C16CF4
	0x03813FF4 ADRP X0, 0x937000
	0x03813FF8 LDR X0, [X0 + 0x8E0]
	0x03813FFC BL 0x1C16CF4
	0x03814000 ADRP X0, 0x936000
	0x03814004 LDR X0, [X0 + 0x8E8]
	0x03814008 BL 0x1C16CF4
	0x0381400C ADRP X0, 0x936000
	0x03814010 LDR X0, [X0 + 0x8F0]
	0x03814014 BL 0x1C16CF4
	0x03814018 ADRP X0, 0x906000
	0x0381401C LDR X0, [X0 + 0xFC8]
	0x03814020 BL 0x1C16CF4
	0x03814024 ADRP X0, 0x936000
	0x03814028 LDR X0, [X0 + 0x8F8]
	0x0381402C BL 0x1C16CF4
	0x03814030 ADRP X0, 0x936000
	0x03814034 LDR X0, [X0 + 0x900]
	0x03814038 BL 0x1C16CF4
	0x0381403C ADRP X0, 0x906000
	0x03814040 LDR X0, [X0 + 0xFD0]
	0x03814044 BL 0x1C16CF4
	0x03814048 ADRP X0, 0x906000
	0x0381404C LDR X0, [X0 + 0xFD8]
	0x03814050 BL 0x1C16CF4
	0x03814054 ADRP X0, 0x936000

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Subtract X31, X31, 480
	014 Move [X31+40], X1
	015 NotImplemented "Instruction MRS not yet implemented."
	016 Move [X31+8], X8
	017 Move [X31+16], X2
	018 Move X8, [X8+40]
	019 Move X19, 0xBCF000
	020 Move X20, X0
	021 Move [X31+472], X8
	022 Move W8, [X19+1240]
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {65}
	027 Move X0, 0x938000
	028 Move X0, [X0+2128]
	029 Call 0x1C17CF4
	030 Move X0, 0x938000
	031 Move X0, [X0+2136]
	032 Call 0x1C17CF4
	033 Move X0, 0x90A000
	034 Move X0, [X0+936]
	035 Call 0x1C17CF4
	036 Move X0, 0x938000
	037 Move X0, [X0+1904]
	038 Call 0x1C17CF4
	039 Move X0, 0x909000
	040 Move X0, [X0+3520]
	041 Call 0x1C17CF4
	042 Move X0, 0x933000
	043 Move X0, [X0+1696]
	044 Call 0x1C17CF4
	045 Move X0, 0x938000
	046 Move X0, [X0+2144]
	047 Call 0x1C17CF4
	048 Move X0, 0x938000
	049 Move X0, [X0+2152]
	050 Call 0x1C17CF4
	051 Move X0, 0x938000
	052 Move X0, [X0+2160]
	053 Call 0x1C17CF4
	054 Move X0, 0x909000
	055 Move X0, [X0+2128]
	056 Call 0x1C17CF4
	057 Move X0, 0x90A000
	058 Move X0, [X0+1008]
	059 Call 0x1C17CF4
	060 Move X0, 0x8E1000
	061 Move X0, [X0+1728]
	062 Call 0x1C17CF4
	063 Move W8, 1
	064 Move [X19+1240], W8
	065 Move [X31+184], X31
	066 Compare X20, 0
	067 JumpIfEqual {370}
	068 Move W8, [X20+24]
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move X27, 0x933000
	071 Move X28, 0x8E1000
	072 Move X27, [X27+1696]
	073 Move X28, [X28+1728]
	074 Add X9, X31, 192
	075 Add X19, X9, 140
	076 Move W29, W31
	077 Move X21, X19
	078 Move [X31+32], X19
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Add X8, X20, W29
	081 Move X23, [X8+32]
	082 Compare X23, 0
	083 JumpIfEqual {370}
	084 Move X8, [X23]
	085 Move X0, X23
	086 Move X9, [X8+440]
	087 Move X1, [X8+448]
	088 NotImplemented "Instruction BLR not yet implemented."
	089 Move X8, [X28]
	090 Move X25, [X27]
	091 Move X24, X0
	092 Move W9, [X8+224]
	093 Compare W9, 0
	094 JumpIfNotEqual {97}
	095 Move X0, X8
	096 Call 0x1C17DFC
	097 Move X0, X25
	098 Move X1, X31
	099 Call Type.GetTypeFromHandle, X0
	100 Move X1, X0
	101 Move X0, X24
	102 Move X2, X31
	103 Call Type.op_Equality, X0, X1
	104 Move TEMP, X0
	105 And TEMP, TEMP, 1
	106 Compare TEMP, 1
	107 JumpIfEqual {349}
	108 Move X0, X23
	109 Move X1, X31
	110 Call TypeHelpers.GetValueType, X0
	111 Move X8, [X28]
	112 Move X24, X0
	113 Move W9, [X8+224]
	114 Compare W9, 0
	115 JumpIfNotEqual {118}
	116 Move X0, X8
	117 Call 0x1C17DFC
	118 Move X0, X24
	119 Move X1, X31
	120 Move X2, X31
	121 Call Type.op_Inequality, X0, X1
	122 Move TEMP, X0
	123 And TEMP, TEMP, 1
	124 Compare TEMP, 1
	125 JumpIfNotEqual {278}
	126 Compare X24, 0
	127 JumpIfEqual {370}
	128 Move X0, X24
	129 Move X1, X31
	130 Call Type.get_IsValueType, X0
	131 Move TEMP, X0
	132 And TEMP, TEMP, 1
	133 Compare TEMP, 1
	134 JumpIfNotEqual {278}
	135 Move X0, [X28]
	136 Move X9, 0x938000
	137 Move W8, [X0+224]
	138 Move X9, [X9+1904]
	139 Move X25, [X9]
	140 Compare W8, 0
	141 JumpIfNotEqual {143}
	142 Call 0x1C17DFC
	143 Move X0, X25
	144 Move X1, X31
	145 Call Type.GetTypeFromHandle, X0
	146 Compare X0, 0
	147 JumpIfEqual {370}
	148 Move X8, [X0]
	149 Move X1, X24
	150 Move X9, [X8+680]
	151 Move X2, [X8+688]
	152 NotImplemented "Instruction BLR not yet implemented."
	153 Move TEMP, X0
	154 And TEMP, TEMP, 1
	155 Compare TEMP, 1
	156 JumpIfNotEqual {278}
	157 Move X8, [X31+40]
	158 Compare X8, 0
	159 JumpIfEqual {370}
	160 Move X8, 0x909000
	161 Move X8, [X8+3520]
	162 Move X9, [X31+40]
	163 Move X0, [X8]
	164 Move W25, [X9+24]
	165 Move W8, [X0+224]
	166 Compare W8, 0
	167 JumpIfNotEqual {169}
	168 Call 0x1C17DFC
	169 Move X1, [X31+40]
	170 Move X2, [X31+16]
	171 Move X0, X24
	172 Call InputControlLayout.AddControlItems, X0, X1, X2
	173 Move X8, 0x90A000
	174 Move X9, [X23]
	175 Move X8, [X8+936]
	176 Move W11, [X9+304]
	177 Move X8, [X8]
	178 Move W10, [X8+304]
	179 NotImplemented "Instruction CMP not yet implemented."
	180 Move X0, X31
	181 Move X9, [X9+200]
	182 Add X9, X9, X10
	183 NotImplemented "Instruction LDUR not yet implemented."
	184 NotImplemented "Instruction CMP not yet implemented."
	185 NotImplemented "Instruction CSEL not yet implemented."
	186 Move X1, X31
	187 Move X2, X31
	188 Call FieldInfo.op_Inequality, X0, X1
	189 Move TEMP, X0
	190 And TEMP, TEMP, 1
	191 Compare TEMP, 1
	192 JumpIfNotEqual {278}
	193 Move X8, [X23]
	194 Move X0, X23
	195 Move X9, [X8+440]
	196 Move X1, [X8+448]
	197 NotImplemented "Instruction BLR not yet implemented."
	198 Move X8, [X23]
	199 Move X26, X0
	200 Move X0, X23
	201 Move X9, [X8+424]
	202 Move X1, [X8+432]
	203 NotImplemented "Instruction BLR not yet implemented."
	204 Move X8, 0x909000
	205 Move X8, [X8+2128]
	206 Move X27, X0
	207 Move X8, [X8]
	208 Move W9, [X8+224]
	209 Compare W9, 0
	210 JumpIfNotEqual {213}
	211 Move X0, X8
	212 Call 0x1C17DFC
	213 Move X0, X26
	214 Move X1, X27
	215 Move X2, X31
	216 Call Marshal.OffsetOf, X0, X1
	217 Move [X31+184], X0
	218 Add X0, X31, 184
	219 Move X1, X31
	220 Call IntPtr.ToInt32, X0
	221 Move X8, [X31+40]
	222 Move X27, 0x933000
	223 Move W8, [X8+24]
	224 Move [X31+24], W0
	225 Move [X31+28], W8
	226 Move X27, [X27+1696]
	227 NotImplemented "Instruction CMP not yet implemented."
	228 Move X19, X20
	229 Move X20, 0x938000
	230 Move X20, [X20+2152]
	231 Move X26, [X31+40]
	232 Add X8, X31, 192
	233 Move W1, W25
	234 Move X2, [X20]
	235 Move X0, X26
	236 Call List`1<ControlItem>.get_Item, X0, X1
	237 Add X0, X31, 48
	238 Add X1, X31, 192
	239 Move W2, 136
	240 Call 0x3EB2AC0
	241 Move W22, [X31+328]
	242 Add X0, X31, 404
	243 Move W2, 68
	244 Move X1, X21
	245 Call 0x3EB2AC0
	246 Move X2, [X20]
	247 Add X8, X31, 192
	248 Move X0, X26
	249 Move W1, W25
	250 Call List`1<ControlItem>.get_Item, X0, X1
	251 Move W8, [X31+328]
	252 Add W31, W8, 1
	253 Move X8, 0x938000
	254 Move X8, [X8+2160]
	255 Add X0, X31, 192
	256 Add X1, X31, 48
	257 Move W2, 136
	258 Move X27, [X8]
	259 Move W8, [X31+24]
	260 Add W22, W22, W8
	261 Call 0x3EB2AC0
	262 Add X1, X31, 404
	263 Move W2, 68
	264 Move X0, X21
	265 Move [X31+328], W22
	266 Call 0x3EB2AC0
	267 Move X0, [X31+40]
	268 Move X3, X27
	269 Move X27, 0x933000
	270 Move X27, [X27+1696]
	271 Add X2, X31, 192
	272 Move W1, W25
	273 Call List`1<ControlItem>.set_Item, X0, X1, X2
	274 Move W8, [X31+28]
	275 Add W25, W25, 1
	276 Move X20, X19
	277 NotImplemented "Instruction CMP not yet implemented."
	278 Move X8, 0x938000
	279 Move X8, [X8+2128]
	280 Move X0, X23
	281 Move W1, W31
	282 Move X2, [X8]
	283 Call 0x21A9C2C, X0, X1
	284 Move X8, 0x938000
	285 Move X8, [X8+2136]
	286 Move X1, [X8]
	287 Call Enumerable.ToArray, X0
	288 Compare X0, 0
	289 JumpIfEqual {370}
	290 Move X8, [X0+24]
	291 Move X25, X0
	292 Compare X8, 0
	293 JumpIfEqual {305}
	294 Move X8, 0x909000
	295 Move X8, [X8+3520]
	296 Move X0, [X8]
	297 Move W8, [X0+224]
	298 Compare W8, 0
	299 JumpIfNotEqual {301}
	300 Call 0x1C17DFC
	301 Move X2, [X31+40]
	302 Move X0, X23
	303 Move X1, X25
	304 Call InputControlLayout.AddControlItemsFromMember, X0, X1, X2
	305 Move X0, [X28]
	306 Move W8, [X0+224]
	307 Compare W8, 0
	308 JumpIfNotEqual {310}
	309 Call 0x1C17DFC
	310 Move X0, X24
	311 Move X1, X31
	312 Move X2, X31
	313 Call Type.op_Equality, X0, X1
	314 Move TEMP, X0
	315 And TEMP, TEMP, 1
	316 Compare TEMP, 1
	317 JumpIfEqual {349}
	318 Move X0, [X28]
	319 Move X26, [X27]
	320 Move W8, [X0+224]
	321 Compare W8, 0
	322 JumpIfNotEqual {324}
	323 Call 0x1C17DFC
	324 Move X0, X26
	325 Move X1, X31
	326 Call Type.GetTypeFromHandle, X0
	327 Compare X0, 0
	328 JumpIfEqual {370}
	329 Move X8, [X0]
	330 Move X1, X24
	331 Move X9, [X8+680]
	332 Move X2, [X8+688]
	333 NotImplemented "Instruction BLR not yet implemented."
	334 Move TEMP, X0
	335 And TEMP, TEMP, 1
	336 Compare TEMP, 1
	337 JumpIfNotEqual {349}
	338 Move X8, 0x90A000
	339 Move X9, [X23]
	340 Move X8, [X8+1008]
	341 Move W11, [X9+304]
	342 Move X8, [X8]
	343 Move W10, [X8+304]
	344 NotImplemented "Instruction CMP not yet implemented."
	345 Move X9, [X9+200]
	346 Add X9, X9, X10
	347 NotImplemented "Instruction LDUR not yet implemented."
	348 NotImplemented "Instruction CMP not yet implemented."
	349 Move W8, [X20+24]
	350 Add W29, W29, 1
	351 NotImplemented "Instruction CMP not yet implemented."
	352 Move X8, [X31+8]
	353 Move X8, [X8+40]
	354 Move X9, [X31+472]
	355 NotImplemented "Instruction CMP not yet implemented."
	356 Add X31, X31, 480
	357 Move X20, [X31+80]
	358 Move X19, [X31+88]
	359 Move X22, [X31+64]
	360 Move X21, [X31+72]
	361 Move X24, [X31+48]
	362 Move X23, [X31+56]
	363 Move X26, [X31+32]
	364 Move X25, [X31+40]
	365 Move X28, [X31+16]
	366 Move X27, [X31+24]
	367 Move X29, [X31+96]
	368 Move X30, [X31+104]
	369 Return 
	370 Call 0x1C17F20
	371 Call 0x1C17F28
	372 Call 0x3EB2B20

Method: System.Void AddControlItemsFromMember(System.Reflection.MemberInfo member, UnityEngine.InputSystem.Layouts.InputControlAttribute[] attributes, System.Collections.Generic.List`1<UnityEngine.InputSystem.Layouts.InputControlLayout/ControlItem> controlItems)

Disassembly:
	0x03814058 LDR X0, [X0 + 0x908]
	0x0381405C BL 0x1C16CF4
	0x03814060 ADRP X0, 0x936000
	0x03814064 LDR X0, [X0 + 0x910]
	0x03814068 BL 0x1C16CF4
	0x0381406C ADRP X0, 0x936000
	0x03814070 LDR X0, [X0 + 0x918]
	0x03814074 BL 0x1C16CF4
	0x03814078 ADRP X0, 0x936000
	0x0381407C LDR X0, [X0 + 0x920]
	0x03814080 BL 0x1C16CF4
	0x03814084 ADRP X0, 0x907000
	0x03814088 LDR X0, [X0 + 0xDC0]
	0x0381408C BL 0x1C16CF4
	0x03814090 ADRP X0, 0x936000
	0x03814094 LDR X0, [X0 + 0x928]
	0x03814098 BL 0x1C16CF4
	0x0381409C ADRP X0, 0x936000
	0x038140A0 LDR X0, [X0 + 0x930]
	0x038140A4 BL 0x1C16CF4
	0x038140A8 ADRP X0, 0x936000
	0x038140AC LDR X0, [X0 + 0x938]
	0x038140B0 BL 0x1C16CF4
	0x038140B4 ADRP X0, 0x936000
	0x038140B8 LDR X0, [X0 + 0x7E8]
	0x038140BC BL 0x1C16CF4
	0x038140C0 ADRP X0, 0x906000
	0x038140C4 LDR X0, [X0 + 0xFE0]
	0x038140C8 BL 0x1C16CF4
	0x038140CC ADRP X0, 0x936000
	0x038140D0 LDR X0, [X0 + 0x780]
	0x038140D4 BL 0x1C16CF4
	0x038140D8 ADRP X0, 0x936000
	0x038140DC LDR X0, [X0 + 0x750]
	0x038140E0 BL 0x1C16CF4
	0x038140E4 ADRP X0, 0x8E0000
	0x038140E8 LDR X0, [X0 + 0x1C0]
	0x038140EC BL 0x1C16CF4
	0x038140F0 ADRP X0, 0x936000
	0x038140F4 LDR X0, [X0 + 0x860]
	0x038140F8 BL 0x1C16CF4
	0x038140FC ADRP X0, 0x8E0000
	0x03814100 LDR X0, [X0 + 0x1C8]
	0x03814104 BL 0x1C16CF4
	0x03814108 ADRP X0, 0x936000
	0x0381410C LDR X0, [X0 + 0x868]
	0x03814110 BL 0x1C16CF4
	0x03814114 ADRP X0, 0x907000
	0x03814118 LDR X0, [X0 + 0xB58]
	0x0381411C BL 0x1C16CF4
	0x03814120 ADRP X0, 0x936000
	0x03814124 LDR X0, [X0 + 0x870]
	0x03814128 BL 0x1C16CF4
	0x0381412C ADRP X0, 0x936000
	0x03814130 LDR X0, [X0 + 0x748]
	0x03814134 BL 0x1C16CF4
	0x03814138 ADRP X0, 0x8E0000
	0x0381413C LDR X0, [X0 + 0x1D0]
	0x03814140 BL 0x1C16CF4
	0x03814144 ADRP X0, 0x8E3000
	0x03814148 LDR X0, [X0 + 0xBF0]
	0x0381414C BL 0x1C16CF4
	0x03814150 ADRP X0, 0x8DF000
	0x03814154 LDR X0, [X0 + 0x6C0]
	0x03814158 BL 0x1C16CF4
	0x0381415C ADRP X0, 0x8E9000
	0x03814160 LDR X0, [X0 + 0x898]
	0x03814164 BL 0x1C16CF4
	0x03814168 MOVZ W8, 0x1
	0x0381416C STRB W8, [X19 + 0x4DC]
	0x03814170 ADD X0, X31, 0xB78
	0x03814174 MOVZ W2, 0xF0
	0x03814178 MOV W1, W31
	0x0381417C STRH W31, [X31 + 0xC6C]
	0x03814180 BL 0x3EB1B10
	0x03814184 ADD X0, X31, 0xAA8
	0x03814188 MOVZ W2, 0xD0
	0x0381418C MOV W1, W31
	0x03814190 BL 0x3EB1B10
	0x03814194 ADD X0, X31, 0x9D8
	0x03814198 MOVZ W2, 0xD0
	0x0381419C MOV W1, W31
	0x038141A0 BL 0x3EB1B10
	0x038141A4 ADD X0, X31, 0x908
	0x038141A8 MOVZ W2, 0xD0
	0x038141AC MOV W1, W31
	0x038141B0 BL 0x3EB1B10
	0x038141B4 ADD X0, X31, 0x838
	0x038141B8 MOVZ W2, 0xD0
	0x038141BC MOV W1, W31
	0x038141C0 BL 0x3EB1B10
	0x038141C4 ADD X0, X31, 0x750
	0x038141C8 MOVZ W2, 0xD0
	0x038141CC MOV W1, W31
	0x038141D0 STR X31, [X31 + 0x828]
	0x038141D4 STR X31, [X31 + 0x820]
	0x038141D8 BL 0x3EB1B10
	0x038141DC ADD X0, X31, 0x660
	0x038141E0 MOVZ W2, 0xD0
	0x038141E4 MOV W1, W31
	0x038141E8 STR X31, [X31 + 0x738]
	0x038141EC STR X31, [X31 + 0x730]
	0x038141F0 STR X31, [X31 + 0x740]
	0x038141F4 BL 0x3EB1B10
	0x038141F8 ADD X0, X31, 0x590
	0x038141FC MOVZ W2, 0xD0
	0x03814200 MOV W1, W31
	0x03814204 BL 0x3EB1B10
	0x03814208 ADD X0, X31, 0x4F8
	0x0381420C MOVZ W2, 0x98
	0x03814210 MOV W1, W31
	0x03814214 BL 0x3EB1B10
	0x03814218 MOVI V0.2D, 0x0
	0x0381421C ADD X0, X31, 0x460
	0x03814220 MOVZ W2, 0x98
	0x03814224 MOV W1, W31
	0x03814228 STR V0, [X31 + 0xFF]
	0x0381422C STR V0, [X31 + 0x100]
	0x03814230 STR V0, [X31 + 0x101]
	0x03814234 STR W31, [X31 + 0x1020]
	0x03814238 BL 0x3EB1B10
	0x0381423C MOVI V0.2D, 0x0
	0x03814240 STR V0, [X31 + 0xFB]
	0x03814244 STR V0, [X31 + 0xFC]
	0x03814248 STR V0, [X31 + 0xFD]
	0x0381424C STR W31, [X31 + 0xFE0]
	0x03814250 CBZ X20, 0x3815010
	0x03814254 LDR X11, [X31 + 0x28]
	0x03814258 ADD X9, X20, 0x40
	0x0381425C ADD X10, X31, 0xC6C
	0x03814260 ADRP X19, 0x8DF000
	0x03814264 LDRH W8, [X11 + 0x40]
	0x03814268 ADD X21, X11, 0x28
	0x0381426C MOV X0, X21
	0x03814270 MOV X1, X31
	0x03814274 ANDS W31, W8, 0xFF
	0x03814278 STRH W8, [X31 + 0xC6C]
	0x0381427C CSEL X8, X9, X10, EQ
	0x03814280 LDRH W8, [X8]
	0x03814284 LDR X19, [X19 + 0x6C0]
	0x03814288 STRH W8, [X11 + 0x40]
	0x0381428C BL 0x375F7A0
	0x03814290 TBZ X0, 0x0, 0x381429C
	0x03814294 LDUR V0, [X20 + 0x28]
	0x03814298 STR V0, [X21]
	0x0381429C LDR X0, [X19]
	0x038142A0 LDR X9, [X31 + 0x28]
	0x038142A4 LDR W8, [X0 + 0xE0]
	0x038142A8 LDR X22, [X9 + 0x20]
	0x038142AC CBNZ W8, 0x38142B4
	0x038142B0 BL 0x1C16DFC
	0x038142B4 MOV X0, X22
	0x038142B8 MOV X1, X31
	0x038142BC MOV X2, X31
	0x038142C0 BL 0x3395194
	0x038142C4 TBZ X0, 0x0, 0x38142D4

ISIL:
	001 Move [X31-96], X29
	002 Move [X31+16], X30
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Subtract X31, X31, 1040
	013 Move X22, 0xBCE000
	014 Move W8, [X22+1241]
	015 Move X19, X2
	016 Move X21, X1
	017 Move X20, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {30}
	022 Move X0, 0x908000
	023 Move X0, [X0+3520]
	024 Call 0x1C17CF4
	025 Move X0, 0x937000
	026 Move X0, [X0+2024]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X22+1241], W8
	030 Add X0, X31, 416
	031 Move W2, 208
	032 Move W1, W31
	033 Call 0x3EB2B10
	034 Add X0, X31, 208
	035 Move W2, 208
	036 Move W1, W31
	037 Call 0x3EB2B10
	038 Compare X21, 0
	039 JumpIfEqual {168}
	040 Move X8, [X21+24]
	041 Compare X8, 0
	042 JumpIfEqual {103}
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move X25, 0x908000
	045 Move X27, 0x937000
	046 Move X25, [X25+3520]
	047 Move X27, [X27+2024]
	048 Move X23, X31
	049 Add X24, X21, 32
	050 Move W26, 208
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move X0, [X25]
	053 Move X22, [X24]
	054 Move W8, [X0+224]
	055 Compare W8, 0
	056 JumpIfNotEqual {58}
	057 Call 0x1C17DFC
	058 Add X8, X31, 208
	059 Move X0, X20
	060 Move X1, X22
	061 Call InputControlLayout.CreateControlItemFromMember, X0, X1
	062 Add X0, X31, 0
	063 Add X1, X31, 208
	064 Move W2, 208
	065 Call 0x3EB2AC0
	066 Compare X19, 0
	067 JumpIfEqual {168}
	068 Move X22, [X27]
	069 Add X0, X31, 624
	070 Add X1, X31, 0
	071 Move W2, 208
	072 Call 0x3EB2AC0
	073 Move W9, [X19+28]
	074 Move X8, [X19+16]
	075 Add W9, W9, 1
	076 Move [X19+28], W9
	077 Compare X8, 0
	078 JumpIfEqual {168}
	079 NotImplemented "Instruction LDRSW not yet implemented."
	080 Move W10, [X8+24]
	081 NotImplemented "Instruction CMP not yet implemented."
	082 NotImplemented "Instruction MADD not yet implemented."
	083 Add W10, W9, 1
	084 Add X0, X8, 32
	085 Add X1, X31, 624
	086 Move W2, 208
	087 Move [X19+24], W10
	088 Call 0x3EB2AC0
	089 Move X8, [X22+32]
	090 Add X0, X31, 832
	091 Add X1, X31, 624
	092 Move W2, 208
	093 Move X8, [X8+192]
	094 Move X22, [X8+112]
	095 Call 0x3EB2AC0
	096 Add X1, X31, 832
	097 Move X0, X19
	098 Move X2, X22
	099 Call List`1<ControlItem>.AddWithResize, X0, X1
	100 Move W8, [X21+24]
	101 Add X23, X23, 1
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Move X8, 0x908000
	104 Move X8, [X8+3520]
	105 Move X0, [X8]
	106 Move W8, [X0+224]
	107 Compare W8, 0
	108 JumpIfNotEqual {110}
	109 Call 0x1C17DFC
	110 Add X8, X31, 416
	111 Move X0, X20
	112 Move X1, X31
	113 Call InputControlLayout.CreateControlItemFromMember, X0, X1
	114 Add X0, X31, 0
	115 Add X1, X31, 416
	116 Move W2, 208
	117 Call 0x3EB2AC0
	118 Compare X19, 0
	119 JumpIfEqual {168}
	120 Move X8, 0x937000
	121 Move X8, [X8+2024]
	122 Add X0, X31, 624
	123 Add X1, X31, 0
	124 Move W2, 208
	125 Move X20, [X8]
	126 Call 0x3EB2AC0
	127 Move W9, [X19+28]
	128 Move X8, [X19+16]
	129 Add W9, W9, 1
	130 Move [X19+28], W9
	131 Compare X8, 0
	132 JumpIfEqual {168}
	133 NotImplemented "Instruction LDRSW not yet implemented."
	134 Move W10, [X8+24]
	135 NotImplemented "Instruction CMP not yet implemented."
	136 Move W11, 208
	137 NotImplemented "Instruction MADD not yet implemented."
	138 Add W10, W9, 1
	139 Add X0, X8, 32
	140 Add X1, X31, 624
	141 Move W2, 208
	142 Move [X19+24], W10
	143 Call 0x3EB2AC0
	144 Move X8, [X20+32]
	145 Add X0, X31, 832
	146 Add X1, X31, 624
	147 Move W2, 208
	148 Move X8, [X8+192]
	149 Move X20, [X8+112]
	150 Call 0x3EB2AC0
	151 Add X1, X31, 832
	152 Move X0, X19
	153 Move X2, X20
	154 Call List`1<ControlItem>.AddWithResize, X0, X1
	155 Add X31, X31, 1040
	156 Move X20, [X31+80]
	157 Move X19, [X31+88]
	158 Move X22, [X31+64]
	159 Move X21, [X31+72]
	160 Move X24, [X31+48]
	161 Move X23, [X31+56]
	162 Move X26, [X31+32]
	163 Move X25, [X31+40]
	164 Move X30, [X31+16]
	165 Move X27, [X31+24]
	166 Move X29, [X31+96]
	167 Return 
	168 Call 0x1C17F20
	169 Call 0x1C17F28

Method: UnityEngine.InputSystem.Layouts.InputControlLayout/ControlItem CreateControlItemFromMember(System.Reflection.MemberInfo member, UnityEngine.InputSystem.Layouts.InputControlAttribute attribute)

Disassembly:
	0x038142C8 LDR X24, [X31 + 0x28]
	0x038142CC ADD X19, X20, 0x20
	0x038142D0 B 0x3814300
	0x038142D4 LDR X8, [X31 + 0x28]
	0x038142D8 LDR X0, [X8 + 0x20]
	0x038142DC CBZ X0, 0x381500C
	0x038142E0 LDR X8, [X0]
	0x038142E4 ADD X19, X20, 0x20
	0x038142E8 LDR X1, [X19]
	0x038142EC LDR X9, [X8 + 0x2A8]
	0x038142F0 LDR X2, [X8 + 0x2B0]
	0x038142F4 BLR X9
	0x038142F8 LDR X24, [X31 + 0x28]
	0x038142FC TBZ X0, 0x0, 0x3814308
	0x03814300 LDR X8, [X19]
	0x03814304 STR X8, [X24 + 0x20]
	0x03814308 ADRP X22, 0x936000
	0x0381430C ADRP X19, 0x936000
	0x03814310 LDR X22, [X22 + 0x8C8]
	0x03814314 LDR X19, [X19 + 0x918]
	0x03814318 MOV X0, X21
	0x0381431C MOV X1, X31
	0x03814320 BL 0x375F7A0
	0x03814324 LDR W8, [X24 + 0x38]
	0x03814328 STR W0, [X31 + 0x1C]
	0x0381432C CBNZ W8, 0x3814338
	0x03814330 LDR W8, [X20 + 0x38]
	0x03814334 STR W8, [X24 + 0x38]
	0x03814338 LDR X0, [X20 + 0x88]
	0x0381433C LDR X1, [X24 + 0x88]
	0x03814340 LDR X2, [X22]
	0x03814344 BL 0x217B294
	0x03814348 STR X0, [X24 + 0x88]
	0x0381434C LDUR V0, [X20 + 0x78]
	0x03814350 LDUR V1, [X20 + 0x68]
	0x03814354 LDR X2, [X19]
	0x03814358 ADD X0, X24, 0x68
	0x0381435C ADD X1, X31, 0x370
	0x03814360 STP V1, V0, [X31 + 0x370]
	0x03814364 BL 0x2DE9E80
	0x03814368 LDR X0, [X24 + 0x98]
	0x0381436C MOV X1, X31
	0x03814370 BL 0x32277A8
	0x03814374 TBZ X0, 0x0, 0x3814380
	0x03814378 LDR X8, [X20 + 0x98]
	0x0381437C STR X8, [X24 + 0x98]
	0x03814380 LDR X8, [X24 + 0x90]
	0x03814384 LDR X22, [X20 + 0x90]
	0x03814388 CBZ X8, 0x3814D00
	0x0381438C CBZ X22, 0x3814F68
	0x03814390 STR X23, [X31 + 0x10]
	0x03814394 ADRP X8, 0x936000
	0x03814398 LDR X8, [X8 + 0x748]
	0x0381439C LDR X0, [X8]
	0x038143A0 BL 0x1C16F10
	0x038143A4 ADRP X8, 0x936000
	0x038143A8 LDR X8, [X8 + 0x750]
	0x038143AC MOV X20, X0
	0x038143B0 LDR X1, [X8]
	0x038143B4 BL 0x3107414
	0x038143B8 ADRP X8, 0x8E0000
	0x038143BC LDR X8, [X8 + 0x1D0]
	0x038143C0 LDR X0, [X8]
	0x038143C4 BL 0x1C16F10
	0x038143C8 ADRP X8, 0x8E0000
	0x038143CC LDR X8, [X8 + 0x1C0]
	0x038143D0 MOV X23, X0
	0x038143D4 LDR X1, [X8]
	0x038143D8 BL 0x301B7C4
	0x038143DC ADRP X8, 0x907000
	0x038143E0 LDR X8, [X8 + 0xDC0]
	0x038143E4 LDR X0, [X8]
	0x038143E8 LDR W8, [X0 + 0xE0]
	0x038143EC CBNZ W8, 0x38143F4
	0x038143F0 BL 0x1C16DFC
	0x038143F4 MOV X0, X22
	0x038143F8 MOV X1, X23
	0x038143FC BL 0x3815178
	0x03814400 LDR X8, [X31 + 0x28]
	0x03814404 MOV X22, X0
	0x03814408 MOV X1, X31
	0x0381440C LDR X8, [X8 + 0x90]
	0x03814410 MOV X0, X8
	0x03814414 BL 0x3815178
	0x03814418 CBZ X0, 0x381500C
	0x0381441C ADRP X8, 0x936000
	0x03814420 LDR X8, [X8 + 0x8D0]
	0x03814424 LDR X1, [X8]
	0x03814428 ADD X8, X31, 0x370
	0x0381442C BL 0x2ACA7EC
	0x03814430 ADD X0, X31, 0xB78
	0x03814434 ADD X1, X31, 0x370
	0x03814438 MOVZ W2, 0xF0
	0x0381443C ADD X19, X31, 0xB78
	0x03814440 BL 0x3EB1AC0
	0x03814444 ADD X8, X19, 0x18
	0x03814448 STR X8, [X31 + 0x20]
	0x0381444C ADRP X21, 0x936000
	0x03814450 ADRP X25, 0x906000
	0x03814454 ADRP X24, 0x8E9000
	0x03814458 LDR X21, [X21 + 0x8E0]
	0x0381445C LDR X25, [X25 + 0xFD0]
	0x03814460 LDR X24, [X24 + 0x898]
	0x03814464 ADRP X8, 0x936000
	0x03814468 LDR X8, [X8 + 0x900]
	0x0381446C LDR X1, [X8]
	0x03814470 ADD X0, X31, 0xB78
	0x03814474 BL 0x2C108A8
	0x03814478 TBZ X0, 0x0, 0x3814D08
	0x0381447C LDR X1, [X31 + 0x20]
	0x03814480 LDR X26, [X31 + 0xB88]
	0x03814484 ADD X0, X31, 0xAA8
	0x03814488 MOVZ W2, 0xD0
	0x0381448C BL 0x3EB1AC0
	0x03814490 CBZ X22, 0x3814FB4
	0x03814494 LDR X3, [X21]
	0x03814498 ADD X2, X31, 0x9D8
	0x0381449C MOV X0, X22
	0x038144A0 MOV X1, X26
	0x038144A4 BL 0x2ACBF4C
	0x038144A8 TBZ X0, 0x0, 0x3814564
	0x038144AC ADD X0, X31, 0x838
	0x038144B0 ADD X1, X31, 0xAA8
	0x038144B4 MOVZ W2, 0xD0
	0x038144B8 BL 0x3EB1AC0
	0x038144BC ADD X0, X31, 0x2A0
	0x038144C0 ADD X1, X31, 0x9D8
	0x038144C4 MOVZ W2, 0xD0
	0x038144C8 BL 0x3EB1AC0
	0x038144CC ADD X8, X31, 0x370
	0x038144D0 ADD X0, X31, 0x838
	0x038144D4 ADD X1, X31, 0x2A0
	0x038144D8 BL 0x3815580
	0x038144DC ADD X0, X31, 0x908
	0x038144E0 ADD X1, X31, 0x370
	0x038144E4 MOVZ W2, 0xD0
	0x038144E8 BL 0x3EB1AC0
	0x038144EC ADD X0, X31, 0xC70
	0x038144F0 ADD X1, X31, 0x908
	0x038144F4 MOVZ W2, 0xD0
	0x038144F8 BL 0x3EB1AC0
	0x038144FC CBZ X20, 0x3814FEC
	0x03814500 ADRP X8, 0x936000
	0x03814504 LDR X8, [X8 + 0x7E8]
	0x03814508 ADD X0, X31, 0xEE0
	0x0381450C ADD X1, X31, 0xC70
	0x03814510 MOVZ W2, 0xD0
	0x03814514 LDR X19, [X8]
	0x03814518 BL 0x3EB1AC0
	0x0381451C LDR W9, [X20 + 0x1C]
	0x03814520 LDR X8, [X20 + 0x10]
	0x03814524 ADD W9, W9, 0x1
	0x03814528 STR W9, [X20 + 0x1C]
	0x0381452C CBZ X8, 0x3814FF0
	0x03814530 LDRSW X9, [X20 + 0x18]
	0x03814534 LDR W10, [X8 + 0x18]
	0x03814538 CMP W9, W10
	0x0381453C B.CS 0x38147A0
	0x03814540 MOVZ W11, 0xD0
	0x03814544 MADD X8, X9, X11, X8
	0x03814548 ADD W10, W9, 0x1
	0x0381454C ADD X0, X8, 0x20
	0x03814550 ADD X1, X31, 0xEE0
	0x03814554 MOVZ W2, 0xD0
	0x03814558 STR W10, [X20 + 0x18]
	0x0381455C BL 0x3EB1AC0
	0x03814560 B 0x38147CC
	0x03814564 ADD X0, X31, 0x838
	0x03814568 ADD X1, X31, 0xAA8
	0x0381456C MOVZ W2, 0xD0
	0x03814570 BL 0x3EB1AC0
	0x03814574 ADD X8, X31, 0x759
	0x03814578 LDUR V0, [X8 + 0xFF]
	0x0381457C STR V0, [X31 + 0x82]
	0x03814580 ADD X0, X31, 0x820
	0x03814584 MOV X1, X31
	0x03814588 BL 0x375F7A0
	0x0381458C TBNZ X0, 0x0, 0x3814624
	0x03814590 ADD X0, X31, 0x838
	0x03814594 ADD X1, X31, 0xAA8
	0x03814598 MOVZ W2, 0xD0
	0x0381459C BL 0x3EB1AC0
	0x038145A0 ADRP X8, 0x907000
	0x038145A4 LDR X8, [X8 + 0xDC0]
	0x038145A8 LDR X28, [X31 + 0x858]
	0x038145AC LDR X27, [X31 + 0x860]
	0x038145B0 LDR X0, [X8]
	0x038145B4 LDR W8, [X0 + 0xE0]
	0x038145B8 CBNZ W8, 0x38145C0
	0x038145BC BL 0x1C16DFC
	0x038145C0 ADRP X8, 0xBCD000
	0x038145C4 LDRB W8, [X8 + 0x52E]
	0x038145C8 CBNZ W8, 0x38145E4
	0x038145CC ADRP X0, 0x907000
	0x038145D0 LDR X0, [X0 + 0xDC0]
	0x038145D4 BL 0x1C16CF4
	0x038145D8 ADRP X8, 0xBCD000
	0x038145DC MOVZ W9, 0x1
	0x038145E0 STRB W9, [X8 + 0x52E]
	0x038145E4 ADRP X8, 0x907000
	0x038145E8 LDR X8, [X8 + 0xDC0]
	0x038145EC LDR X0, [X8]
	0x038145F0 LDR W8, [X0 + 0xE0]
	0x038145F4 CBNZ W8, 0x3814608
	0x038145F8 BL 0x1C16DFC
	0x038145FC ADRP X8, 0x907000
	0x03814600 LDR X8, [X8 + 0xDC0]
	0x03814604 LDR X0, [X8]
	0x03814608 LDR X8, [X0 + 0xB8]
	0x0381460C LDP X2, X3, [X8]
	0x03814610 MOV X0, X28
	0x03814614 MOV X1, X27
	0x03814618 MOV X4, X31
	0x0381461C BL 0x37564A4
	0x03814620 TBZ X0, 0x0, 0x38149E0
	0x03814624 LDR W8, [X31 + 0x1C]
	0x03814628 TBZ X8, 0x0, 0x38147E8
	0x0381462C CBZ X23, 0x3815000
	0x03814630 ADRP X8, 0x906000
	0x03814634 LDR X8, [X8 + 0xFE0]
	0x03814638 LDR X1, [X8]
	0x0381463C ADD X8, X31, 0x370
	0x03814640 MOV X0, X23
	0x03814644 BL 0x301CB58
	0x03814648 LDR V0, [X31 + 0x37]
	0x0381464C LDR X8, [X31 + 0x380]
	0x03814650 MOV W29, W31
	0x03814654 STR V0, [X31 + 0x73]
	0x03814658 STR X8, [X31 + 0x740]
	0x0381465C LDR X1, [X25]
	0x03814660 ADD X0, X31, 0x730
	0x03814664 BL 0x2BC4350
	0x03814668 TBZ X0, 0x0, 0x38149AC
	0x0381466C LDR X1, [X24]
	0x03814670 LDR X2, [X31 + 0x740]
	0x03814674 MOV X0, X26
	0x03814678 MOV X3, X31
	0x0381467C BL 0x32274B8
	0x03814680 LDR X3, [X21]
	0x03814684 MOV X27, X0
	0x03814688 ADD X2, X31, 0x9D8
	0x0381468C MOV X0, X22
	0x03814690 MOV X1, X27
	0x03814694 BL 0x2ACBF4C
	0x03814698 TBZ X0, 0x0, 0x381465C
	0x0381469C ADD X0, X31, 0x838
	0x038146A0 ADD X1, X31, 0xAA8
	0x038146A4 MOVZ W2, 0xD0
	0x038146A8 BL 0x3EB1AC0
	0x038146AC ADD X0, X31, 0x100
	0x038146B0 ADD X1, X31, 0x9D8
	0x038146B4 MOVZ W2, 0xD0
	0x038146B8 BL 0x3EB1AC0
	0x038146BC ADD X8, X31, 0x370
	0x038146C0 ADD X0, X31, 0x838
	0x038146C4 ADD X1, X31, 0x100
	0x038146C8 BL 0x3815580
	0x038146CC ADD X0, X31, 0x660
	0x038146D0 ADD X1, X31, 0x370
	0x038146D4 MOVZ W2, 0xD0
	0x038146D8 BL 0x3EB1AC0
	0x038146DC ADD X0, X31, 0x370
	0x038146E0 ADD X1, X31, 0x660
	0x038146E4 MOVZ W2, 0xD0
	0x038146E8 BL 0x3EB1AC0
	0x038146EC CBZ X20, 0x3814CB4
	0x038146F0 ADRP X8, 0x936000
	0x038146F4 LDR X8, [X8 + 0x7E8]
	0x038146F8 ADD X0, X31, 0xD40
	0x038146FC ADD X1, X31, 0x370
	0x03814700 MOVZ W2, 0xD0
	0x03814704 LDR X19, [X8]
	0x03814708 BL 0x3EB1AC0
	0x0381470C LDR W9, [X20 + 0x1C]
	0x03814710 LDR X8, [X20 + 0x10]
	0x03814714 ADD W9, W9, 0x1
	0x03814718 STR W9, [X20 + 0x1C]
	0x0381471C CBZ X8, 0x3814CC0
	0x03814720 LDRSW X9, [X20 + 0x18]
	0x03814724 LDR W10, [X8 + 0x18]
	0x03814728 CMP W9, W10
	0x0381472C B.CS 0x3814754
	0x03814730 MOVZ W11, 0xD0
	0x03814734 MADD X8, X9, X11, X8
	0x03814738 ADD W10, W9, 0x1
	0x0381473C ADD X0, X8, 0x20
	0x03814740 ADD X1, X31, 0xD40
	0x03814744 MOVZ W2, 0xD0
	0x03814748 STR W10, [X20 + 0x18]
	0x0381474C BL 0x3EB1AC0
	0x03814750 B 0x3814780
	0x03814754 LDR X8, [X19 + 0x20]
	0x03814758 ADD X0, X31, 0xE10
	0x0381475C ADD X1, X31, 0xD40
	0x03814760 MOVZ W2, 0xD0
	0x03814764 LDR X8, [X8 + 0xC0]
	0x03814768 LDR X28, [X8 + 0x70]
	0x0381476C BL 0x3EB1AC0
	0x03814770 ADD X1, X31, 0xE10
	0x03814774 MOV X0, X20
	0x03814778 MOV X2, X28
	0x0381477C BL 0x3107CDC
	0x03814780 ADRP X8, 0x936000
	0x03814784 LDR X8, [X8 + 0x8D8]
	0x03814788 LDR X2, [X8]
	0x0381478C MOV X0, X22
	0x03814790 MOV X1, X27
	0x03814794 BL 0x2ACB8F4
	0x03814798 MOVZ W29, 0x1
	0x0381479C B 0x381465C
	0x038147A0 LDR X8, [X19 + 0x20]
	0x038147A4 ADD X0, X31, 0x370
	0x038147A8 ADD X1, X31, 0xEE0
	0x038147AC MOVZ W2, 0xD0
	0x038147B0 LDR X8, [X8 + 0xC0]
	0x038147B4 LDR X27, [X8 + 0x70]
	0x038147B8 BL 0x3EB1AC0
	0x038147BC ADD X1, X31, 0x370
	0x038147C0 MOV X0, X20
	0x038147C4 MOV X2, X27
	0x038147C8 BL 0x3107CDC
	0x038147CC ADRP X8, 0x936000
	0x038147D0 LDR X8, [X8 + 0x8D8]
	0x038147D4 LDR X2, [X8]
	0x038147D8 MOV X0, X22
	0x038147DC MOV X1, X26
	0x038147E0 BL 0x2ACB8F4
	0x038147E4 B 0x3814464
	0x038147E8 CBZ X23, 0x3814FFC
	0x038147EC LDR W8, [X23 + 0x18]
	0x038147F0 CMP W8, 0x1
	0x038147F4 B.LT 0x3814ACC
	0x038147F8 MOV W27, W31
	0x038147FC MOV W19, W31
	0x03814800 LDR X8, [X31 + 0x28]
	0x03814804 LDR X28, [X8 + 0x30]
	0x03814808 ADRP X8, 0x907000
	0x0381480C LDR X8, [X8 + 0xB58]
	0x03814810 LDR X2, [X8]
	0x03814814 MOV X0, X23
	0x03814818 MOV W1, W27
	0x0381481C BL 0x301BCCC
	0x03814820 ADRP X8, 0x907000
	0x03814824 LDR X8, [X8 + 0xDC0]
	0x03814828 MOV X29, X0
	0x0381482C LDR X0, [X8]
	0x03814830 LDR W8, [X0 + 0xE0]
	0x03814834 CBNZ W8, 0x381483C
	0x03814838 BL 0x1C16DFC
	0x0381483C MOV X0, X28
	0x03814840 MOV X1, X29
	0x03814844 BL 0x381591C
	0x03814848 TBZ X0, 0x0, 0x3814994
	0x0381484C ADRP X8, 0x907000
	0x03814850 LDR X8, [X8 + 0xB58]
	0x03814854 LDR X2, [X8]
	0x03814858 MOV X0, X23
	0x0381485C MOV W1, W27
	0x03814860 BL 0x301BCCC
	0x03814864 LDR X1, [X24]
	0x03814868 MOV X2, X0
	0x0381486C MOV X0, X26
	0x03814870 MOV X3, X31
	0x03814874 BL 0x32274B8
	0x03814878 LDR X3, [X21]
	0x0381487C MOV X28, X0
	0x03814880 ADD X2, X31, 0x9D8
	0x03814884 MOV X0, X22
	0x03814888 MOV X1, X28
	0x0381488C BL 0x2ACBF4C
	0x03814890 TBZ X0, 0x0, 0x3814994
	0x03814894 ADD X0, X31, 0x838
	0x03814898 ADD X1, X31, 0xAA8
	0x0381489C MOVZ W2, 0xD0
	0x038148A0 BL 0x3EB1AC0
	0x038148A4 ADD X0, X31, 0x1D0
	0x038148A8 ADD X1, X31, 0x9D8
	0x038148AC MOVZ W2, 0xD0
	0x038148B0 BL 0x3EB1AC0
	0x038148B4 ADD X8, X31, 0x370
	0x038148B8 ADD X0, X31, 0x838
	0x038148BC ADD X1, X31, 0x1D0
	0x038148C0 BL 0x3815580
	0x038148C4 ADD X0, X31, 0x750
	0x038148C8 ADD X1, X31, 0x370
	0x038148CC MOVZ W2, 0xD0
	0x038148D0 BL 0x3EB1AC0
	0x038148D4 ADD X0, X31, 0xC70
	0x038148D8 ADD X1, X31, 0x750
	0x038148DC MOVZ W2, 0xD0
	0x038148E0 BL 0x3EB1AC0
	0x038148E4 CBZ X20, 0x3814FB8
	0x038148E8 ADRP X8, 0x936000
	0x038148EC LDR X8, [X8 + 0x7E8]
	0x038148F0 ADD X0, X31, 0xEE0
	0x038148F4 ADD X1, X31, 0xC70
	0x038148F8 MOVZ W2, 0xD0
	0x038148FC LDR X19, [X8]
	0x03814900 BL 0x3EB1AC0
	0x03814904 LDR W9, [X20 + 0x1C]
	0x03814908 LDR X8, [X20 + 0x10]
	0x0381490C ADD W9, W9, 0x1
	0x03814910 STR W9, [X20 + 0x1C]
	0x03814914 CBZ X8, 0x3814FBC
	0x03814918 LDRSW X9, [X20 + 0x18]
	0x0381491C LDR W10, [X8 + 0x18]
	0x03814920 CMP W9, W10
	0x03814924 B.CS 0x381494C
	0x03814928 MOVZ W11, 0xD0
	0x0381492C MADD X8, X9, X11, X8
	0x03814930 ADD W10, W9, 0x1
	0x03814934 ADD X0, X8, 0x20
	0x03814938 ADD X1, X31, 0xEE0
	0x0381493C MOVZ W2, 0xD0
	0x03814940 STR W10, [X20 + 0x18]
	0x03814944 BL 0x3EB1AC0
	0x03814948 B 0x3814978
	0x0381494C LDR X8, [X19 + 0x20]
	0x03814950 ADD X0, X31, 0x370
	0x03814954 ADD X1, X31, 0xEE0
	0x03814958 MOVZ W2, 0xD0
	0x0381495C LDR X8, [X8 + 0xC0]
	0x03814960 LDR X29, [X8 + 0x70]
	0x03814964 BL 0x3EB1AC0
	0x03814968 ADD X1, X31, 0x370
	0x0381496C MOV X0, X20
	0x03814970 MOV X2, X29
	0x03814974 BL 0x3107CDC
	0x03814978 ADRP X8, 0x936000
	0x0381497C LDR X8, [X8 + 0x8D8]
	0x03814980 LDR X2, [X8]
	0x03814984 MOV X0, X22
	0x03814988 MOV X1, X28
	0x0381498C BL 0x2ACB8F4
	0x03814990 MOVZ W19, 0x1
	0x03814994 LDR W8, [X23 + 0x18]
	0x03814998 ADD W27, W27, 0x1
	0x0381499C CMP W27, W8
	0x038149A0 B.LT 0x3814800
	0x038149A4 TBNZ X19, 0x0, 0x3814464
	0x038149A8 B 0x3814AD4
	0x038149AC MOV X27, X31
	0x038149B0 MOVZ W19, 0x17
	0x038149B4 ADRP X8, 0x906000
	0x038149B8 LDR X8, [X8 + 0xFC8]
	0x038149BC LDR X1, [X8]
	0x038149C0 ADD X0, X31, 0x730
	0x038149C4 BL 0x2BC434C
	0x038149C8 CBNZ X27, 0x3814FF4
	0x038149CC CBZ W19, 0x38149D8
	0x038149D0 CMP W19, 0x17
	0x038149D4 B.NE 0x3814F9C
	0x038149D8 TBNZ X29, 0x0, 0x3814464
	0x038149DC B 0x3814AD4
	0x038149E0 ADD X0, X31, 0x838
	0x038149E4 ADD X1, X31, 0xAA8
	0x038149E8 MOVZ W2, 0xD0
	0x038149EC BL 0x3EB1AC0
	0x038149F0 LDR X8, [X31 + 0x838]
	0x038149F4 LDR X1, [X31 + 0x840]
	0x038149F8 LDR X3, [X21]
	0x038149FC STR X8, [X31 + 0x820]
	0x03814A00 STR X1, [X31 + 0x828]
	0x03814A04 ADD X2, X31, 0x9D8
	0x03814A08 MOV X0, X22
	0x03814A0C BL 0x2ACBF4C
	0x03814A10 TBZ X0, 0x0, 0x3814B7C
	0x03814A14 ADD X0, X31, 0x838
	0x03814A18 ADD X1, X31, 0xAA8
	0x03814A1C MOVZ W2, 0xD0
	0x03814A20 BL 0x3EB1AC0
	0x03814A24 ADD X0, X31, 0x30
	0x03814A28 ADD X1, X31, 0x9D8
	0x03814A2C MOVZ W2, 0xD0
	0x03814A30 BL 0x3EB1AC0
	0x03814A34 ADD X8, X31, 0x370
	0x03814A38 ADD X0, X31, 0x838
	0x03814A3C ADD X1, X31, 0x30
	0x03814A40 BL 0x3815580
	0x03814A44 ADD X0, X31, 0x590
	0x03814A48 ADD X1, X31, 0x370
	0x03814A4C MOVZ W2, 0xD0
	0x03814A50 BL 0x3EB1AC0
	0x03814A54 ADD X0, X31, 0xC70
	0x03814A58 ADD X1, X31, 0x590
	0x03814A5C MOVZ W2, 0xD0
	0x03814A60 BL 0x3EB1AC0
	0x03814A64 CBZ X20, 0x3815058
	0x03814A68 ADRP X8, 0x936000
	0x03814A6C LDR X8, [X8 + 0x7E8]
	0x03814A70 ADD X0, X31, 0xEE0
	0x03814A74 ADD X1, X31, 0xC70
	0x03814A78 MOVZ W2, 0xD0
	0x03814A7C LDR X19, [X8]
	0x03814A80 BL 0x3EB1AC0
	0x03814A84 LDR W9, [X20 + 0x1C]
	0x03814A88 LDR X8, [X20 + 0x10]
	0x03814A8C ADD W9, W9, 0x1
	0x03814A90 STR W9, [X20 + 0x1C]
	0x03814A94 CBZ X8, 0x381505C
	0x03814A98 LDRSW X9, [X20 + 0x18]
	0x03814A9C LDR W10, [X8 + 0x18]
	0x03814AA0 CMP W9, W10
	0x03814AA4 B.CS 0x3814C50
	0x03814AA8 MOVZ W11, 0xD0
	0x03814AAC MADD X8, X9, X11, X8
	0x03814AB0 ADD W10, W9, 0x1
	0x03814AB4 ADD X0, X8, 0x20
	0x03814AB8 ADD X1, X31, 0xEE0
	0x03814ABC MOVZ W2, 0xD0

ISIL:
	001 Subtract X31, X31, 400
	002 Move [X31+304], X29
	003 Move [X31+312], X30
	004 Move [X31+320], X28
	005 Move [X31+328], X27
	006 Move [X31+336], X26
	007 Move [X31+344], X25
	008 Move [X31+352], X24
	009 Move [X31+360], X23
	010 Move [X31+368], X22
	011 Move [X31+376], X21
	012 Move [X31+384], X20
	013 Move [X31+392], X19
	014 Move X21, 0xBCE000
	015 Move W9, [X21+1242]
	016 Move X20, X1
	017 Move X26, X0
	018 Move X19, X8
	019 Move TEMP, X9
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {73}
	023 Move X0, 0x937000
	024 Move X0, [X0+2168]
	025 Call 0x1C17CF4
	026 Move X0, 0x937000
	027 Move X0, [X0+2176]
	028 Call 0x1C17CF4
	029 Move X0, 0x937000
	030 Move X0, [X0+2184]
	031 Call 0x1C17CF4
	032 Move X0, 0x935000
	033 Move X0, [X0+288]
	034 Call 0x1C17CF4
	035 Move X0, 0x937000
	036 Move X0, [X0+2192]
	037 Call 0x1C17CF4
	038 Move X0, 0x909000
	039 Move X0, [X0+936]
	040 Call 0x1C17CF4
	041 Move X0, 0x937000
	042 Move X0, [X0+1896]
	043 Call 0x1C17CF4
	044 Move X0, 0x908000
	045 Move X0, [X0+3520]
	046 Call 0x1C17CF4
	047 Move X0, 0x908000
	048 Move X0, [X0+3352]
	049 Call 0x1C17CF4
	050 Move X0, 0x908000
	051 Move X0, [X0+2128]
	052 Call 0x1C17CF4
	053 Move X0, 0x933000
	054 Move X0, [X0+976]
	055 Call 0x1C17CF4
	056 Move X0, 0x937000
	057 Move X0, [X0+1800]
	058 Call 0x1C17CF4
	059 Move X0, 0x937000
	060 Move X0, [X0+2200]
	061 Call 0x1C17CF4
	062 Move X0, 0x937000
	063 Move X0, [X0+2208]
	064 Call 0x1C17CF4
	065 Move X0, 0x937000
	066 Move X0, [X0+2216]
	067 Call 0x1C17CF4
	068 Move X0, 0x937000
	069 Move X0, [X0+1936]
	070 Call 0x1C17CF4
	071 Move W8, 1
	072 Move [X21+1242], W8
	073 Move [X31+296], W31
	074 Move [X31+288], X31
	075 Compare X20, 0
	076 JumpIfEqual {78}
	077 Move X27, [X20+40]
	078 Move X27, X31
	079 Move X0, X27
	080 Move X1, X31
	081 Call String.IsNullOrEmpty, X0
	082 Move TEMP, X0
	083 And TEMP, TEMP, 1
	084 Compare TEMP, 1
	085 JumpIfNotEqual {94}
	086 Compare X26, 0
	087 JumpIfEqual {603}
	088 Move X8, [X26]
	089 Move X0, X26
	090 Move X9, [X8+424]
	091 Move X1, [X8+432]
	092 NotImplemented "Instruction BLR not yet implemented."
	093 Move X27, X0
	094 Compare X27, 0
	095 JumpIfEqual {603}
	096 Move W1, 47
	097 Move X0, X27
	098 Move X2, X31
	099 Call String.IndexOf, X0, X1
	100 Move W28, W0
	101 Compare X20, 0
	102 JumpIfEqual {105}
	103 Move V0, [X20+8]
	104 Move X29, [X20+24]
	105 NotImplemented "Instruction MOVI not yet implemented."
	106 Move X29, X31
	107 Move [X31+10], V0
	108 Move X21, 0x909000
	109 Move X21, [X21+936]
	110 Move X0, X29
	111 Move X1, X31
	112 Call String.IsNullOrEmpty, X0
	113 Add W31, W28, 1
	114 Move TEMP, X0
	115 And TEMP, TEMP, 1
	116 Compare TEMP, 1
	117 JumpIfNotEqual {144}
	118 Compare X26, 0
	119 JumpIfEqual {129}
	120 Move X9, [X26]
	121 Move X8, [X21]
	122 Move W11, [X9+304]
	123 Move W10, [X8+304]
	124 NotImplemented "Instruction CMP not yet implemented."
	125 Move X9, [X9+200]
	126 Add X9, X9, X10
	127 NotImplemented "Instruction LDUR not yet implemented."
	128 NotImplemented "Instruction CMP not yet implemented."
	129 Move X0, X26
	130 Move X1, X31
	131 Call TypeHelpers.GetValueType, X0
	132 Move X8, 0x908000
	133 Move X8, [X8+3520]
	134 Move X22, X0
	135 Move X8, [X8]
	136 Move W9, [X8+224]
	137 Compare W9, 0
	138 JumpIfNotEqual {141}
	139 Move X0, X8
	140 Call 0x1C17DFC
	141 Move X0, X22
	142 Call InputControlLayout.InferLayoutFromValueType, X0
	143 Move X29, X0
	144 Move X24, 0x937000
	145 Move X24, [X24+2200]
	146 Compare X20, 0
	147 JumpIfEqual {161}
	148 Move X0, [X20+32]
	149 Move X1, X31
	150 Call String.IsNullOrEmpty, X0
	151 Move X23, X31
	152 Move TEMP, X0
	153 And TEMP, TEMP, 1
	154 Compare TEMP, 1
	155 JumpIfEqual {157}
	156 Move X23, [X20+32]
	157 Move W0, [X20+116]
	158 Add W31, W0, 1
	159 Compare X26, 0
	160 JumpIfNotEqual {164}
	161 Move X23, X31
	162 Compare X26, 0
	163 JumpIfEqual {169}
	164 Move X8, [X26]
	165 Move X9, [X21]
	166 Move W11, [X8+304]
	167 Move W10, [X9+304]
	168 NotImplemented "Instruction CMP not yet implemented."
	169 Move TEMP, 0
	170 Not TEMP
	171 Move W0, TEMP
	172 Compare X20, 0
	173 JumpIfEqual {191}
	174 Move W22, [X20+112]
	175 Move W21, [X20+120]
	176 Move [X31+296], W31
	177 Move [X31+156], W0
	178 Move X0, [X20+48]
	179 Move X1, X31
	180 Call String.IsNullOrEmpty, X0
	181 Move TEMP, X0
	182 And TEMP, TEMP, 1
	183 Compare TEMP, 1
	184 JumpIfEqual {197}
	185 Move X1, [X20+48]
	186 Add X0, X31, 296
	187 Move X2, X31
	188 Move [X31+148], W22
	189 Move [X31+152], W21
	190 Call FourCC..ctor, X0, X1
	191 Move W21, W31
	192 Move TEMP, 0
	193 Not TEMP
	194 Move W22, TEMP
	195 Move [X31+156], W0
	196 Move [X31+296], W31
	197 Add W31, W22, 1
	198 Add W31, W28, 1
	199 Move X0, X26
	200 Move X1, X31
	201 Move W25, W22
	202 Call TypeHelpers.GetValueType, X0
	203 Move X8, 0x908000
	204 Move X8, [X8+3352]
	205 Move X22, X0
	206 Move X8, [X8]
	207 Move W9, [X8+224]
	208 Compare W9, 0
	209 JumpIfNotEqual {212}
	210 Move X0, X8
	211 Call 0x1C17DFC
	212 Move X0, X22
	213 Move X1, X31
	214 Call InputStateBlock.GetPrimitiveFormatFromType, X0
	215 Move W22, W25
	216 Move [X31+296], W0
	217 Move [X31+148], W22
	218 Move [X31+152], W21
	219 Compare X20, 0
	220 JumpIfEqual {411}
	221 Move X21, 0x937000
	222 Move X21, [X21+2168]
	223 Move X0, [X20+88]
	224 Move X1, [X20+96]
	225 Move X2, [X21]
	226 Call ArrayHelpers.Join, X0, X1
	227 Move X26, X23
	228 Compare X0, 0
	229 JumpIfEqual {276}
	230 Move X25, 0x937000
	231 Move X25, [X25+1936]
	232 Move X22, X0
	233 Move X0, [X25]
	234 Move W8, [X0+224]
	235 Compare W8, 0
	236 JumpIfNotEqual {239}
	237 Call 0x1C17DFC
	238 Move X0, [X25]
	239 Move X8, [X0+184]
	240 Move X23, [X8+16]
	241 Compare X23, 0
	242 JumpIfNotEqual {264}
	243 Move W8, [X0+224]
	244 Compare W8, 0
	245 JumpIfNotEqual {248}
	246 Call 0x1C17DFC
	247 Move X0, [X25]
	248 Move X9, 0x937000
	249 Move X8, [X0+184]
	250 Move X9, [X9+1896]
	251 Move X24, [X8]
	252 Move X0, [X9]
	253 Call 0x1C17F10
	254 Move X8, 0x937000
	255 Move X8, [X8+2208]
	256 Move X1, X24
	257 Move X3, X31
	258 Move X23, X0
	259 Move X2, [X8]
	260 Call Func`2<Object, InternedString>..ctor, X0, X1, X2
	261 Move X8, [X25]
	262 Move X8, [X8+184]
	263 Move [X8+16], X23
	264 Move X8, 0x937000
	265 Move X8, [X8+2184]
	266 Move X0, X22
	267 Move X1, X23
	268 Move X2, [X8]
	269 Call Enumerable.Select, X0, X1
	270 Move X8, 0x935000
	271 Move X8, [X8+288]
	272 Move X1, [X8]
	273 Call Enumerable.ToArray, X0
	274 Move X23, X26
	275 Move [X31+136], X0
	276 Move [X31+136], X31
	277 Move X0, [X20+56]
	278 Move X1, [X20+64]
	279 Move X2, [X21]
	280 Call ArrayHelpers.Join, X0, X1
	281 Move [X31+40], X27
	282 Compare X0, 0
	283 JumpIfEqual {330}
	284 Move X21, 0x937000
	285 Move X21, [X21+1936]
	286 Move X22, X0
	287 Move X0, [X21]
	288 Move W8, [X0+224]
	289 Compare W8, 0
	290 JumpIfNotEqual {293}
	291 Call 0x1C17DFC
	292 Move X0, [X21]
	293 Move X8, [X0+184]
	294 Move X23, [X8+24]
	295 Compare X23, 0
	296 JumpIfNotEqual {318}
	297 Move W8, [X0+224]
	298 Compare W8, 0
	299 JumpIfNotEqual {302}
	300 Call 0x1C17DFC
	301 Move X0, [X21]
	302 Move X9, 0x937000
	303 Move X8, [X0+184]
	304 Move X9, [X9+1896]
	305 Move X24, [X8]
	306 Move X0, [X9]
	307 Call 0x1C17F10
	308 Move X8, 0x937000
	309 Move X8, [X8+2216]
	310 Move X1, X24
	311 Move X3, X31
	312 Move X23, X0
	313 Move X2, [X8]
	314 Call Func`2<Object, InternedString>..ctor, X0, X1, X2
	315 Move X8, [X21]
	316 Move X8, [X8+184]
	317 Move [X8+24], X23
	318 Move X8, 0x937000
	319 Move X8, [X8+2184]
	320 Move X0, X22
	321 Move X1, X23
	322 Move X2, [X8]
	323 Call Enumerable.Select, X0, X1
	324 Move X8, 0x935000
	325 Move X8, [X8+288]
	326 Move X1, [X8]
	327 Call Enumerable.ToArray, X0
	328 Move X21, X0
	329 Move X23, X26
	330 Move X21, X31
	331 Move X0, [X20+72]
	332 Move X1, X31
	333 Move W27, W28
	334 Call String.IsNullOrEmpty, X0
	335 Move X26, X31
	336 Move TEMP, X0
	337 And TEMP, TEMP, 1
	338 Compare TEMP, 1
	339 JumpIfEqual {344}
	340 Move X0, [X20+72]
	341 Move X1, X31
	342 Call NamedValue.ParseMultiple, X0
	343 Move X26, X0
	344 Move X0, [X20+80]
	345 Move X1, X31
	346 Move X28, X29
	347 Call String.IsNullOrEmpty, X0
	348 Move X29, X31
	349 Move TEMP, X0
	350 And TEMP, TEMP, 1
	351 Compare TEMP, 1
	352 JumpIfEqual {361}
	353 Move X0, [X20+80]
	354 Move X1, X31
	355 Call NameAndParameters.ParseMultiple, X0
	356 Move X8, 0x937000
	357 Move X8, [X8+2192]
	358 Move X1, [X8]
	359 Call Enumerable.ToArray, X0
	360 Move X29, X0
	361 Move X0, [X20+104]
	362 Move X1, X31
	363 Move X24, X21
	364 Call String.IsNullOrEmpty, X0
	365 Move X8, X31
	366 Move TEMP, X0
	367 And TEMP, TEMP, 1
	368 Compare TEMP, 1
	369 JumpIfEqual {371}
	370 Move X8, [X20+104]
	371 Move [X31+120], X8
	372 Move W8, [X20+124]
	373 Move X0, [X20+152]
	374 Move W21, [X20+144]
	375 Move W22, [X20+146]
	376 Move W25, [X20+145]
	377 Move X1, X31
	378 Move [X31+132], W8
	379 Call PrimitiveValue.FromObject, X0
	380 Move [X31+104], X1
	381 Move [X31+112], X0
	382 Move X0, [X20+160]
	383 Move X1, X31
	384 Call PrimitiveValue.FromObject, X0
	385 Move [X31+88], X1
	386 Move [X31+96], X0
	387 Move X0, [X20+168]
	388 Move X1, X31
	389 Call PrimitiveValue.FromObject, X0
	390 Move W8, W21
	391 ShiftRight W8, 31
	392 And W8, W8, 0x3FFFFFFF
	393 Move [X31+76], W8
	394 Move W9, W22
	395 ShiftRight W9, 28
	396 And W9, W9, 0x7FFFFFF
	397 Move W8, W25
	398 ShiftRight W8, 30
	399 And W8, W8, 0x1FFFFFFF
	400 Move [X31+80], X0
	401 Move [X31+64], X1
	402 Move [X31+56], W9
	403 Move [X31+60], W8
	404 Move X20, 0x937000
	405 Move X20, [X20+2200]
	406 Move X22, X29
	407 Move X29, X28
	408 Move W28, W27
	409 Move X27, [X31+40]
	410 Move X21, X24
	411 Move [X31+132], W31
	412 Move [X31+56], X31
	413 Move [X31+64], X31
	414 Move [X31+112], X31
	415 Move [X31+120], X31
	416 Move X26, X31
	417 Move [X31+136], X31
	418 Move X21, X31
	419 Move X22, X31
	420 Move [X31+76], W31
	421 Move [X31+96], X31
	422 Move [X31+104], X31
	423 Move [X31+80], X31
	424 Move [X31+88], X31
	425 Move X20, X24
	426 Add W31, W28, 1
	427 NotImplemented "Instruction CSET not yet implemented."
	428 Add X0, X31, 272
	429 Move X1, X27
	430 Move X2, X31
	431 Move [X31+52], W8
	432 Move [X31+272], X31
	433 Move [X31+280], X31
	434 Call InternedString..ctor, X0, X1
	435 Move X9, [X31+272]
	436 Move X8, [X31+280]
	437 Add X0, X31, 256
	438 Move X1, X29
	439 Move X2, X31
	440 Move [X31+32], X8
	441 Move [X31+40], X9
	442 Move [X31+256], X31
	443 Move [X31+264], X31
	444 Call InternedString..ctor, X0, X1
	445 Move X27, [X31+256]
	446 Move X8, [X31+264]
	447 Add X0, X31, 240
	448 Move X1, X23
	449 Move X2, X31
	450 Move [X31+16], X8
	451 Move [X31+240], X31
	452 Move [X31+248], X31
	453 Call InternedString..ctor, X0, X1
	454 Move W8, [X31+296]
	455 Move X28, [X31+240]
	456 Move X29, [X31+248]
	457 Add X0, X31, 224
	458 Move X1, X26
	459 Move [X31+28], W8
	460 Move X8, 0x933000
	461 Move X8, [X8+976]
	462 Move [X31+224], X31
	463 Move [X31+232], X31
	464 Move X2, [X8]
	465 Call ReadOnlyArray`1<NamedValue>..ctor, X0, X1
	466 Move X2, [X20]
	467 Move X24, [X31+224]
	468 Move X23, [X31+232]
	469 Add X0, X31, 208
	470 Move X1, X22
	471 Move [X31+208], X31
	472 Move [X31+216], X31
	473 Call ReadOnlyArray`1<NameAndParameters>..ctor, X0, X1
	474 Move X26, 0x937000
	475 Move X25, [X31+208]
	476 Move X20, [X31+216]
	477 Move X26, [X26+1800]
	478 Add X0, X31, 192
	479 Move X1, X21
	480 Move [X31+192], X31
	481 Move [X31+200], X31
	482 Move X2, [X26]
	483 Call ReadOnlyArray`1<InternedString>..ctor, X0, X1
	484 Move X2, [X26]
	485 Move X1, [X31+136]
	486 Move X21, [X31+192]
	487 Move X22, [X31+200]
	488 Add X0, X31, 176
	489 Move [X31+176], X31
	490 Move [X31+184], X31
	491 Call ReadOnlyArray`1<InternedString>..ctor, X0, X1
	492 Move W9, [X31+52]
	493 Move W8, [X31+56]
	494 Move X10, [X31+40]
	495 Move V1, [X31+160]
	496 Move V0, [X31+176]
	497 Move [X19+32], X28
	498 Move [X19+40], X29
	499 Or W8, W8, W9
	500 Move X9, [X31+32]
	501 Move [X19+56], V1
	502 Move [X19+72], X21
	503 Move [X19+80], X22
	504 Move [X19+104], X24
	505 Move [X19+112], X23
	506 Move [X19], X10
	507 Move [X19+8], X9
	508 Move X9, [X31+16]
	509 Move W10, [X31+156]
	510 Move [X19+120], X25
	511 Move [X19+128], X20
	512 Move [X19+88], V0
	513 Move [X19+16], X27
	514 Move [X19+24], X9
	515 Move X9, [X31+120]
	516 Move X22, [X31+368]
	517 Move X21, [X31+376]
	518 Move X24, [X31+352]
	519 Move X23, [X31+360]
	520 Move X26, [X31+336]
	521 Move X25, [X31+344]
	522 Move [X19+48], X9
	523 Move W9, [X31+148]
	524 Move X28, [X31+320]
	525 Move X27, [X31+328]
	526 Move X29, [X31+304]
	527 Move X30, [X31+312]
	528 Move [X19+136], W10
	529 Move [X19+140], W9
	530 Move W10, [X31+152]
	531 Move W9, [X31+28]
	532 Move [X19+144], W10
	533 Move [X19+148], W9
	534 Move X10, [X31+112]
	535 Move X9, [X31+104]
	536 Move [X19+160], X10
	537 Move [X19+168], X9
	538 Move X10, [X31+96]
	539 Move X9, [X31+88]
	540 Move [X19+176], X10
	541 Move [X19+184], X9
	542 Move W9, [X31+76]
	543 Or W8, W8, W9
	544 Move W9, [X31+60]
	545 Or W8, W8, W9
	546 Or W9, W8, 8
	547 Move W8, [X31+132]
	548 Move [X19+152], W9
	549 Move [X19+156], W8
	550 Move X9, [X31+80]
	551 Move X8, [X31+64]
	552 Move [X19+192], X9
	553 Move [X19+200], X8
	554 Move X20, [X31+384]
	555 Move X19, [X31+392]
	556 Add X31, X31, 400
	557 Return X0
	558 Add W31, W28, 1
	559 Move TEMP, 0
	560 Not TEMP
	561 Move W0, TEMP
	562 Move X11, [X8+200]
	563 Add X10, X11, X10
	564 NotImplemented "Instruction LDUR not yet implemented."
	565 NotImplemented "Instruction CMP not yet implemented."
	566 Move X9, [X8+440]
	567 Move X1, [X8+448]
	568 Move X0, X26
	569 Move X21, X23
	570 NotImplemented "Instruction BLR not yet implemented."
	571 Move X8, [X26]
	572 Move X22, X0
	573 Move X0, X26
	574 Move X9, [X8+424]
	575 Move X1, [X8+432]
	576 NotImplemented "Instruction BLR not yet implemented."
	577 Move X8, 0x908000
	578 Move X8, [X8+2128]
	579 Move X23, X0
	580 Move X8, [X8]
	581 Move W9, [X8+224]
	582 Compare W9, 0
	583 JumpIfNotEqual {586}
	584 Move X0, X8
	585 Call 0x1C17DFC
	586 Move X0, X22
	587 Move X1, X23
	588 Move X2, X31
	589 Call Marshal.OffsetOf, X0, X1
	590 Move [X31+288], X0
	591 Add X0, X31, 288
	592 Move X1, X31
	593 Call IntPtr.ToInt32, X0
	594 Move X23, X21
	595 Move X8, 0x937000
	596 Move X8, [X8+2176]
	597 Move X0, X26
	598 Move W1, W31
	599 Move X2, [X8]
	600 Call 0x21A99DC, X0, X1
	601 Compare X0, 0
	602 JumpIfNotEqual {144}
	603 Call 0x1C17F20

Method: System.String InferLayoutFromValueType(System.Type type)

Disassembly:
	0x03814AC0 STR W10, [X20 + 0x18]
	0x03814AC4 BL 0x3EB1AC0
	0x03814AC8 B 0x3814C7C
	0x03814ACC MOV W19, W31
	0x03814AD0 TBNZ X19, 0x0, 0x3814464
	0x03814AD4 ADD X0, X31, 0xC70
	0x03814AD8 ADD X1, X31, 0xAA8
	0x03814ADC MOVZ W2, 0xD0
	0x03814AE0 BL 0x3EB1AC0
	0x03814AE4 CBZ X20, 0x3815004
	0x03814AE8 ADRP X8, 0x936000
	0x03814AEC LDR X8, [X8 + 0x7E8]
	0x03814AF0 ADD X0, X31, 0xEE0
	0x03814AF4 ADD X1, X31, 0xC70
	0x03814AF8 MOVZ W2, 0xD0
	0x03814AFC LDR X19, [X8]
	0x03814B00 BL 0x3EB1AC0
	0x03814B04 LDR W9, [X20 + 0x1C]
	0x03814B08 LDR X8, [X20 + 0x10]
	0x03814B0C ADD W9, W9, 0x1
	0x03814B10 STR W9, [X20 + 0x1C]
	0x03814B14 CBZ X8, 0x3815008
	0x03814B18 LDRSW X9, [X20 + 0x18]
	0x03814B1C LDR W10, [X8 + 0x18]
	0x03814B20 CMP W9, W10
	0x03814B24 B.CS 0x3814B4C
	0x03814B28 MOVZ W11, 0xD0
	0x03814B2C MADD X8, X9, X11, X8
	0x03814B30 ADD W10, W9, 0x1
	0x03814B34 ADD X0, X8, 0x20
	0x03814B38 ADD X1, X31, 0xEE0
	0x03814B3C MOVZ W2, 0xD0
	0x03814B40 STR W10, [X20 + 0x18]
	0x03814B44 BL 0x3EB1AC0
	0x03814B48 B 0x3814464
	0x03814B4C LDR X8, [X19 + 0x20]
	0x03814B50 ADD X0, X31, 0x370
	0x03814B54 ADD X1, X31, 0xEE0
	0x03814B58 MOVZ W2, 0xD0
	0x03814B5C LDR X8, [X8 + 0xC0]
	0x03814B60 LDR X26, [X8 + 0x70]
	0x03814B64 BL 0x3EB1AC0
	0x03814B68 ADD X1, X31, 0x370
	0x03814B6C MOV X0, X20
	0x03814B70 MOV X2, X26
	0x03814B74 BL 0x3107CDC
	0x03814B78 B 0x3814464
	0x03814B7C LDR X8, [X31 + 0x28]
	0x03814B80 ADD X0, X31, 0x838
	0x03814B84 ADD X1, X31, 0xAA8
	0x03814B88 MOVZ W2, 0xD0
	0x03814B8C LDP X26, X27, [X8 + 0x28]
	0x03814B90 BL 0x3EB1AC0
	0x03814B94 ADRP X8, 0x907000
	0x03814B98 LDR X8, [X8 + 0xDC0]
	0x03814B9C LDR X29, [X31 + 0x858]
	0x03814BA0 LDR X28, [X31 + 0x860]
	0x03814BA4 LDR X0, [X8]
	0x03814BA8 LDR W8, [X0 + 0xE0]
	0x03814BAC CBNZ W8, 0x3814BB4
	0x03814BB0 BL 0x1C16DFC
	0x03814BB4 MOV X0, X26
	0x03814BB8 MOV X1, X27
	0x03814BBC MOV X2, X29
	0x03814BC0 MOV X3, X28
	0x03814BC4 BL 0x3815A48
	0x03814BC8 TBZ X0, 0x0, 0x3814464
	0x03814BCC ADD X0, X31, 0xC70
	0x03814BD0 ADD X1, X31, 0xAA8
	0x03814BD4 MOVZ W2, 0xD0
	0x03814BD8 BL 0x3EB1AC0
	0x03814BDC CBZ X20, 0x3815064
	0x03814BE0 ADRP X8, 0x936000
	0x03814BE4 LDR X8, [X8 + 0x7E8]
	0x03814BE8 ADD X0, X31, 0xEE0
	0x03814BEC ADD X1, X31, 0xC70
	0x03814BF0 MOVZ W2, 0xD0
	0x03814BF4 LDR X19, [X8]
	0x03814BF8 BL 0x3EB1AC0
	0x03814BFC LDR W9, [X20 + 0x1C]
	0x03814C00 LDR X8, [X20 + 0x10]
	0x03814C04 ADD W9, W9, 0x1
	0x03814C08 STR W9, [X20 + 0x1C]
	0x03814C0C CBZ X8, 0x3815060
	0x03814C10 LDRSW X9, [X20 + 0x18]
	0x03814C14 LDR W10, [X8 + 0x18]
	0x03814C18 CMP W9, W10
	0x03814C1C B.CC 0x3814B28
	0x03814C20 LDR X8, [X19 + 0x20]
	0x03814C24 ADD X0, X31, 0x370
	0x03814C28 ADD X1, X31, 0xEE0
	0x03814C2C MOVZ W2, 0xD0
	0x03814C30 LDR X8, [X8 + 0xC0]
	0x03814C34 LDR X26, [X8 + 0x70]
	0x03814C38 BL 0x3EB1AC0
	0x03814C3C ADD X1, X31, 0x370
	0x03814C40 MOV X0, X20
	0x03814C44 MOV X2, X26
	0x03814C48 BL 0x3107CDC
	0x03814C4C B 0x3814464
	0x03814C50 LDR X8, [X19 + 0x20]
	0x03814C54 ADD X0, X31, 0x370
	0x03814C58 ADD X1, X31, 0xEE0
	0x03814C5C MOVZ W2, 0xD0
	0x03814C60 LDR X8, [X8 + 0xC0]
	0x03814C64 LDR X26, [X8 + 0x70]
	0x03814C68 BL 0x3EB1AC0
	0x03814C6C ADD X1, X31, 0x370
	0x03814C70 MOV X0, X20

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+48], X22
	004 Move [X31+56], X21
	005 Move [X31+64], X20
	006 Move [X31+72], X19
	007 Move X20, 0xBCE000
	008 Move X21, 0x908000
	009 Move W8, [X20+1243]
	010 Move X21, [X21+3520]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x908000
	017 Move X0, [X0+3520]
	018 Call 0x1C17CF4
	019 Move X0, 0x934000
	020 Move X0, [X0+1528]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X20+1243], W8
	024 Move X0, [X21]
	025 Move [X31], X31
	026 Move [X31+8], X31
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {32}
	030 Call 0x1C17DFC
	031 Move X0, [X21]
	032 Move X8, [X0+184]
	033 Move X1, X19
	034 Add X0, X8, 16
	035 Call Collection.TryFindLayoutForType, X0, X1
	036 Move [X31+16], X0
	037 Move [X31+24], X1
	038 Add X0, X31, 16
	039 Move X1, X31
	040 Call InternedString.IsEmpty, X0
	041 Move TEMP, X0
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfNotEqual {133}
	045 Compare X19, 0
	046 JumpIfEqual {144}
	047 Move X8, [X19]
	048 Move X0, X19
	049 Move X9, [X8+424]
	050 Move X1, [X8+432]
	051 NotImplemented "Instruction BLR not yet implemented."
	052 Move X1, X0
	053 Add X0, X31, 0
	054 Move X2, X31
	055 Call InternedString..ctor, X0, X1
	056 Move X0, [X21]
	057 Move W8, [X0+224]
	058 Compare W8, 0
	059 JumpIfNotEqual {62}
	060 Call 0x1C17DFC
	061 Move X0, [X21]
	062 Move X8, [X0+184]
	063 Move X1, [X31]
	064 Move X2, [X31+8]
	065 Add X0, X8, 16
	066 Call Collection.HasLayout, X0, X1
	067 Move TEMP, X0
	068 And TEMP, TEMP, 1
	069 Compare TEMP, 1
	070 JumpIfNotEqual {73}
	071 Move V0, [X31]
	072 Move [X31+1], V0
	073 Move X8, [X19]
	074 Move X0, X19
	075 Move X9, [X8+424]
	076 Move X1, [X8+432]
	077 NotImplemented "Instruction BLR not yet implemented."
	078 Compare X0, 0
	079 JumpIfEqual {144}
	080 Move X22, 0x934000
	081 Move X22, [X22+1528]
	082 Move X2, X31
	083 Move X1, [X22]
	084 Call String.EndsWith, X0, X1
	085 Move TEMP, X0
	086 And TEMP, TEMP, 1
	087 Compare TEMP, 1
	088 JumpIfNotEqual {133}
	089 Move X8, [X19]
	090 Move X0, X19
	091 Move X9, [X8+424]
	092 Move X1, [X8+432]
	093 NotImplemented "Instruction BLR not yet implemented."
	094 Move X8, [X19]
	095 Move X20, X0
	096 Move X0, X19
	097 Move X9, [X8+424]
	098 Move X1, [X8+432]
	099 NotImplemented "Instruction BLR not yet implemented."
	100 Compare X0, 0
	101 JumpIfEqual {144}
	102 Move X8, [X22]
	103 Compare X8, 0
	104 JumpIfEqual {144}
	105 Compare X20, 0
	106 JumpIfEqual {144}
	107 Move W9, [X0+16]
	108 Move W8, [X8+16]
	109 Move X0, X20
	110 Move W1, W31
	111 Move X3, X31
	112 Subtract W2, W9, W8
	113 Call String.Substring, X0, X1, X2
	114 Move X1, X0
	115 Add X0, X31, 0
	116 Move X2, X31
	117 Call InternedString..ctor, X0, X1
	118 Move X0, [X21]
	119 Move W8, [X0+224]
	120 Compare W8, 0
	121 JumpIfNotEqual {124}
	122 Call 0x1C17DFC
	123 Move X0, [X21]
	124 Move X8, [X0+184]
	125 Move X1, [X31]
	126 Move X2, [X31+8]
	127 Add X0, X8, 16
	128 Call Collection.HasLayout, X0, X1
	129 Move TEMP, X0
	130 And TEMP, TEMP, 1
	131 Compare TEMP, 1
	132 JumpIfEqual {71}
	133 Move X0, [X31+16]
	134 Move X1, [X31+24]
	135 Move X2, X31
	136 Call InternedString.op_Implicit, X0
	137 Move X20, [X31+64]
	138 Move X19, [X31+72]
	139 Move X22, [X31+48]
	140 Move X21, [X31+56]
	141 Move X30, [X31+32]
	142 Add X31, X31, 80
	143 Return X0
	144 Call 0x1C17F20

Method: System.Void MergeLayout(UnityEngine.InputSystem.Layouts.InputControlLayout other)

Disassembly:
	0x03814F90 LDP X28, X27, [X31 + 0x10]
	0x03814F94 LDP X29, X30, [X31], #0x60
	0x03814F98 RET
	0x03814F9C ADRP X8, 0x936000
	0x03814FA0 LDR X8, [X8 + 0x8F8]
	0x03814FA4 ADD X0, X31, 0xB78
	0x03814FA8 LDR X1, [X8]
	0x03814FAC BL 0x2C10A04
	0x03814FB0 B 0x3814F64
	0x03814FB4 BL 0x1C16F20
	0x03814FB8 BL 0x1C16F20
	0x03814FBC BL 0x1C16F20
	0x03814FC0 MOV X23, X0
	0x03814FC4 MOV X27, X31
	0x03814FC8 ADRP X8, 0x906000
	0x03814FCC LDR X8, [X8 + 0xFC8]
	0x03814FD0 LDR X1, [X8]
	0x03814FD4 ADD X0, X31, 0x730
	0x03814FD8 BL 0x2BC434C
	0x03814FDC MOV X0, X23
	0x03814FE0 CBZ X27, 0x3815108
	0x03814FE4 MOV X0, X27
	0x03814FE8 BL 0x1C16F18
	0x03814FEC BL 0x1C16F20
	0x03814FF0 BL 0x1C16F20
	0x03814FF4 MOV X0, X27
	0x03814FF8 BL 0x1C16F18
	0x03814FFC BL 0x1C16F20
	0x03815000 BL 0x1C16F20
	0x03815004 BL 0x1C16F20
	0x03815008 BL 0x1C16F20
	0x0381500C BL 0x1C16F20
	0x03815010 ADRP X0, 0x8E3000
	0x03815014 LDR X0, [X0 + 0x528]
	0x03815018 BL 0x1C16D08
	0x0381501C BL 0x1C16F10
	0x03815020 MOV X19, X0
	0x03815024 ADRP X0, 0x908000
	0x03815028 LDR X0, [X0 + 0x928]
	0x0381502C BL 0x1C16D08
	0x03815030 MOV X1, X0
	0x03815034 MOV X0, X19
	0x03815038 MOV X2, X31
	0x0381503C BL 0x330E100
	0x03815040 ADRP X0, 0x935000
	0x03815044 LDR X0, [X0 + 0x940]
	0x03815048 BL 0x1C16D08
	0x0381504C MOV X1, X0
	0x03815050 MOV X0, X19
	0x03815054 BL 0x1C16DEC
	0x03815058 BL 0x1C16F20
	0x0381505C BL 0x1C16F20
	0x03815060 BL 0x1C16F20
	0x03815064 BL 0x1C16F20
	0x03815068 BL 0x3EB1B20
	0x0381506C MOV X26, X1
	0x03815070 MOV X23, X0
	0x03815074 B 0x3814FC8
	0x03815078 B 0x3815104
	0x0381507C B 0x3815104
	0x03815080 B 0x3815104
	0x03815084 B 0x3815104
	0x03815088 B 0x3815104
	0x0381508C B 0x3815104
	0x03815090 B 0x3815104
	0x03815094 B 0x3815104
	0x03815098 B 0x3815104
	0x0381509C B 0x3815104
	0x038150A0 B 0x3815104
	0x038150A4 B 0x3815104
	0x038150A8 B 0x3815104
	0x038150AC B 0x3815104
	0x038150B0 B 0x3815104
	0x038150B4 B 0x3815104
	0x038150B8 B 0x3815104
	0x038150BC B 0x3815104
	0x038150C0 B 0x3815104
	0x038150C4 B 0x3815104
	0x038150C8 B 0x3815104
	0x038150CC B 0x3815104
	0x038150D0 B 0x3815104
	0x038150D4 B 0x3815104
	0x038150D8 B 0x3815104
	0x038150DC B 0x3815104
	0x038150E0 B 0x3815104
	0x038150E4 B 0x3815104
	0x038150E8 B 0x3815104
	0x038150EC B 0x3815104
	0x038150F0 B 0x3815104
	0x038150F4 B 0x3815104
	0x038150F8 B 0x3815104
	0x038150FC B 0x3815104
	0x03815100 B 0x3815104
	0x03815104 MOV X26, X1
	0x03815108 CMP W26, 0x1
	0x0381510C B.NE 0x381513C
	0x03815110 BL 0x3EB1AD0
	0x03815114 LDR X23, [X0]
	0x03815118 BL 0x3EB1AE0
	0x0381511C ADRP X8, 0x935000
	0x03815120 LDR X8, [X8 + 0x8F8]
	0x03815124 ADD X0, X31, 0xB78
	0x03815128 LDR X1, [X8]
	0x0381512C BL 0x2C10A04
	0x03815130 CBZ X23, 0x3814D1C
	0x03815134 MOV X0, X23
	0x03815138 BL 0x1C16F18
	0x0381513C MOV X19, X0
	0x03815140 MOV X23, X31
	0x03815144 B 0x381514C
	0x03815148 MOV X19, X0
	0x0381514C ADRP X8, 0x935000
	0x03815150 LDR X8, [X8 + 0x8F8]
	0x03815154 LDR X1, [X8]
	0x03815158 ADD X0, X31, 0xB78
	0x0381515C BL 0x2C10A04
	0x03815160 CBNZ X23, 0x381516C
	0x03815164 MOV X0, X19
	0x03815168 BL 0x1D2C690
	0x0381516C MOV X0, X23
	0x03815170 BL 0x1C16F18
	0x03815174 BL 0x1990590
	0x03815178 STP X29, X30, [X31 - 0x60]!
	0x0381517C STP X28, X27, [X31 + 0x10]
	0x03815180 STP X26, X25, [X31 + 0x20]
	0x03815184 STP X24, X23, [X31 + 0x30]
	0x03815188 STP X22, X21, [X31 + 0x40]
	0x0381518C STP X20, X19, [X31 + 0x50]
	0x03815190 SUB X31, X31, 0x1C0
	0x03815194 ADRP X23, 0xBCC000
	0x03815198 ADRP X22, 0x935000
	0x0381519C ADRP X21, 0x935000
	0x038151A0 LDRB W8, [X23 + 0x4DD]
	0x038151A4 LDR X22, [X22 + 0x948]
	0x038151A8 LDR X21, [X21 + 0x950]
	0x038151AC MOV X19, X1
	0x038151B0 MOV X20, X0
	0x038151B4 TBNZ X8, 0x0, 0x3815214
	0x038151B8 ADRP X0, 0x935000
	0x038151BC LDR X0, [X0 + 0x950]
	0x038151C0 BL 0x1C16CF4
	0x038151C4 ADRP X0, 0x935000
	0x038151C8 LDR X0, [X0 + 0x958]
	0x038151CC BL 0x1C16CF4
	0x038151D0 ADRP X0, 0x935000
	0x038151D4 LDR X0, [X0 + 0x948]
	0x038151D8 BL 0x1C16CF4
	0x038151DC ADRP X0, 0x906000
	0x038151E0 LDR X0, [X0 + 0xDC0]
	0x038151E4 BL 0x1C16CF4
	0x038151E8 ADRP X0, 0x8DF000
	0x038151EC LDR X0, [X0 + 0x1B8]
	0x038151F0 BL 0x1C16CF4
	0x038151F4 ADRP X0, 0x8E7000
	0x038151F8 LDR X0, [X0 + 0x848]
	0x038151FC BL 0x1C16CF4
	0x03815200 ADRP X0, 0x8E8000
	0x03815204 LDR X0, [X0 + 0x898]
	0x03815208 BL 0x1C16CF4
	0x0381520C MOVZ W8, 0x1
	0x03815210 STRB W8, [X23 + 0x4DD]
	0x03815214 LDR X0, [X22]
	0x03815218 STP X31, X31, [X31 + 0xE0]
	0x0381521C BL 0x1C16F10
	0x03815220 LDR X1, [X21]
	0x03815224 MOV X21, X0
	0x03815228 BL 0x2AC9840
	0x0381522C CBZ X20, 0x381557C
	0x03815230 LDR X8, [X20 + 0x18]
	0x03815234 CMP W8, 0x1
	0x03815238 B.LT 0x3815554
	0x0381523C ADRP X28, 0x935000
	0x03815240 ADRP X22, 0x906000
	0x03815244 LDR X28, [X28 + 0x958]
	0x03815248 LDR X22, [X22 + 0xDC0]
	0x0381524C MOV X27, X31
	0x03815250 AND X8, X8, 0x0
	0x03815254 CMP X27, W8, UXTW
	0x03815258 B.CS 0x3815578
	0x0381525C MOVZ W8, 0xD0
	0x03815260 MADD X8, X27, X8, X20
	0x03815264 LDR V0, [X8 + 0x4]
	0x03815268 LDR X23, [X8 + 0x28]
	0x0381526C ADD X0, X31, 0xE0
	0x03815270 MOV X1, X31
	0x03815274 ADD X24, X8, 0x20
	0x03815278 STR V0, [X31 + 0xE]
	0x0381527C BL 0x375F7A0
	0x03815280 TBNZ X0, 0x0, 0x38154F4
	0x03815284 LDR X0, [X22]
	0x03815288 LDP X26, X25, [X31 + 0xE0]
	0x0381528C LDR W8, [X0 + 0xE0]
	0x03815290 CBNZ W8, 0x3815298
	0x03815294 BL 0x1C16DFC
	0x03815298 ADRP X8, 0xBCC000
	0x0381529C LDRB W8, [X8 + 0x52E]
	0x038152A0 CBNZ W8, 0x38152B8
	0x038152A4 MOV X0, X22
	0x038152A8 BL 0x1C16CF4
	0x038152AC ADRP X8, 0xBCC000
	0x038152B0 MOVZ W9, 0x1
	0x038152B4 STRB W9, [X8 + 0x52E]
	0x038152B8 LDR X0, [X22]
	0x038152BC LDR W8, [X0 + 0xE0]
	0x038152C0 CBNZ W8, 0x38152CC
	0x038152C4 BL 0x1C16DFC
	0x038152C8 LDR X0, [X22]
	0x038152CC LDR X8, [X0 + 0xB8]
	0x038152D0 MOV X0, X26
	0x038152D4 MOV X1, X25
	0x038152D8 MOV X4, X31
	0x038152DC LDP X2, X3, [X8]
	0x038152E0 BL 0x3757138
	0x038152E4 TBZ X0, 0x0, 0x38154F4
	0x038152E8 ADD X0, X31, 0xE0
	0x038152EC MOV X1, X31
	0x038152F0 BL 0x37565F4
	0x038152F4 ADRP X8, 0x8E7000
	0x038152F8 LDR X8, [X8 + 0x848]
	0x038152FC LDR X8, [X8]
	0x03815300 CBZ X8, 0x381557C
	0x03815304 MOV X25, X0
	0x03815308 MOV X0, X8
	0x0381530C MOV W1, W31
	0x03815310 MOV X2, X31
	0x03815314 BL 0x3222A1C
	0x03815318 CBZ X25, 0x381557C
	0x0381531C MOV W1, W0
	0x03815320 MOV X0, X25
	0x03815324 MOV X2, X31
	0x03815328 BL 0x322BD98
	0x0381532C LDR X25, [X31 + 0xE8]
	0x03815330 ADDS W31, W0, 0x1
	0x03815334 B.EQ 0x3815474
	0x03815338 ADRP X8, 0x8E7000
	0x0381533C LDR X8, [X8 + 0x848]
	0x03815340 LDR X0, [X8]
	0x03815344 CBZ X0, 0x381557C
	0x03815348 MOV W1, W31
	0x0381534C MOV X2, X31
	0x03815350 BL 0x3222A1C
	0x03815354 CBZ X25, 0x381557C
	0x03815358 MOV W1, W0
	0x0381535C MOV X0, X25
	0x03815360 MOV W2, W31
	0x03815364 MOV X3, X31
	0x03815368 BL 0x3229AE8
	0x0381536C CBZ X0, 0x381557C
	0x03815370 LDR X8, [X0 + 0x18]
	0x03815374 MOV X25, X0
	0x03815378 CMP W8, 0x1
	0x0381537C B.LT 0x381553C
	0x03815380 MOV X22, X31
	0x03815384 AND X8, X8, 0x0
	0x03815388 ADD X29, X25, 0x20
	0x0381538C CMP X22, W8, UXTW
	0x03815390 B.CS 0x3815578
	0x03815394 LDR X26, [X29, X22, LSL #3]
	0x03815398 CBZ X19, 0x38153F8
	0x0381539C ADRP X9, 0x8DF000
	0x038153A0 LDR W10, [X19 + 0x1C]
	0x038153A4 LDR X8, [X19 + 0x10]
	0x038153A8 LDR X9, [X9 + 0x1B8]
	0x038153AC ADD W10, W10, 0x1
	0x038153B0 LDR X9, [X9]
	0x038153B4 STR W10, [X19 + 0x1C]
	0x038153B8 CBZ X8, 0x381557C
	0x038153BC LDRSW X10, [X19 + 0x18]
	0x038153C0 LDR W11, [X8 + 0x18]
	0x038153C4 CMP W10, W11
	0x038153C8 B.CS 0x38153E0
	0x038153CC ADD W9, W10, 0x1
	0x038153D0 ADD X8, X8, X10, 0x3, LSL
	0x038153D4 STR W9, [X19 + 0x18]
	0x038153D8 STR X26, [X8 + 0x20]
	0x038153DC B 0x38153F8
	0x038153E0 LDR X8, [X9 + 0x20]
	0x038153E4 MOV X0, X19
	0x038153E8 MOV X1, X26
	0x038153EC LDR X8, [X8 + 0xC0]
	0x038153F0 LDR X2, [X8 + 0x70]
	0x038153F4 BL 0x301BF90
	0x038153F8 ADRP X8, 0x8E8000
	0x038153FC LDR X8, [X8 + 0x898]
	0x03815400 MOV X0, X23
	0x03815404 MOV X2, X26
	0x03815408 MOV X3, X31
	0x0381540C LDR X1, [X8]
	0x03815410 BL 0x32274B8
	0x03815414 LDR W8, [X20 + 0x18]
	0x03815418 CMP X27, X8
	0x0381541C B.CS 0x3815578
	0x03815420 MOV X23, X0
	0x03815424 ADD X0, X31, 0x10
	0x03815428 MOVZ W2, 0xD0
	0x0381542C MOV X1, X24
	0x03815430 BL 0x3EB1AC0
	0x03815434 CBZ X21, 0x381557C
	0x03815438 LDR X26, [X28]
	0x0381543C ADD X0, X31, 0xF0
	0x03815440 ADD X1, X31, 0x10
	0x03815444 MOVZ W2, 0xD0
	0x03815448 BL 0x3EB1AC0
	0x0381544C ADD X2, X31, 0xF0
	0x03815450 MOV X0, X21
	0x03815454 MOV X1, X23
	0x03815458 MOV X3, X26
	0x0381545C BL 0x2ACA158
	0x03815460 LDR W8, [X25 + 0x18]
	0x03815464 ADD X22, X22, 0x1
	0x03815468 CMP X22, W8, SXTW
	0x0381546C B.LT 0x381538C
	0x03815470 B 0x381553C
	0x03815474 ADRP X8, 0x8E8000
	0x03815478 LDR X8, [X8 + 0x898]
	0x0381547C MOV X0, X23
	0x03815480 MOV X2, X25
	0x03815484 MOV X3, X31
	0x03815488 LDR X1, [X8]
	0x0381548C BL 0x32274B8
	0x03815490 MOV X23, X0
	0x03815494 CBZ X19, 0x38154F4
	0x03815498 ADRP X9, 0x8DF000
	0x0381549C LDR X1, [X31 + 0xE8]
	0x038154A0 LDR W10, [X19 + 0x1C]
	0x038154A4 LDR X8, [X19 + 0x10]
	0x038154A8 LDR X9, [X9 + 0x1B8]
	0x038154AC ADD W10, W10, 0x1
	0x038154B0 LDR X9, [X9]
	0x038154B4 STR W10, [X19 + 0x1C]
	0x038154B8 CBZ X8, 0x381557C
	0x038154BC LDRSW X10, [X19 + 0x18]
	0x038154C0 LDR W11, [X8 + 0x18]
	0x038154C4 CMP W10, W11
	0x038154C8 B.CS 0x38154E0
	0x038154CC ADD W9, W10, 0x1
	0x038154D0 ADD X8, X8, X10, 0x3, LSL
	0x038154D4 STR W9, [X19 + 0x18]
	0x038154D8 STR X1, [X8 + 0x20]
	0x038154DC B 0x38154F4
	0x038154E0 LDR X8, [X9 + 0x20]
	0x038154E4 MOV X0, X19
	0x038154E8 LDR X8, [X8 + 0xC0]
	0x038154EC LDR X2, [X8 + 0x70]
	0x038154F0 BL 0x301BF90
	0x038154F4 LDR W8, [X20 + 0x18]
	0x038154F8 CMP X27, X8
	0x038154FC B.CS 0x3815578
	0x03815500 ADD X0, X31, 0x10
	0x03815504 MOVZ W2, 0xD0
	0x03815508 MOV X1, X24
	0x0381550C BL 0x3EB1AC0
	0x03815510 CBZ X21, 0x381557C
	0x03815514 LDR X24, [X28]
	0x03815518 ADD X0, X31, 0xF0
	0x0381551C ADD X1, X31, 0x10
	0x03815520 MOVZ W2, 0xD0
	0x03815524 BL 0x3EB1AC0
	0x03815528 ADD X2, X31, 0xF0
	0x0381552C MOV X0, X21
	0x03815530 MOV X1, X23
	0x03815534 MOV X3, X24
	0x03815538 BL 0x2ACA158
	0x0381553C LDR W8, [X20 + 0x18]
	0x03815540 ADRP X22, 0x906000
	0x03815544 LDR X22, [X22 + 0xDC0]
	0x03815548 ADD X27, X27, 0x1
	0x0381554C CMP X27, W8, SXTW
	0x03815550 B.LT 0x3815254
	0x03815554 MOV X0, X21
	0x03815558 ADD X31, X31, 0x1C0
	0x0381555C LDP X20, X19, [X31 + 0x50]
	0x03815560 LDP X22, X21, [X31 + 0x40]
	0x03815564 LDP X24, X23, [X31 + 0x30]
	0x03815568 LDP X26, X25, [X31 + 0x20]
	0x0381556C LDP X28, X27, [X31 + 0x10]
	0x03815570 LDP X29, X30, [X31], #0x60
	0x03815574 RET
	0x03815578 BL 0x1C16F28
	0x0381557C BL 0x1C16F20
	0x03815580 SUB X31, X31, 0x130
	0x03815584 STR X29, [X31 + 0xF0]
	0x03815588 STP X30, X23, [X31 + 0x100]
	0x0381558C STP X22, X21, [X31 + 0x110]
	0x03815590 STP X20, X19, [X31 + 0x120]
	0x03815594 ADRP X22, 0xBCC000
	0x03815598 LDRB W9, [X22 + 0x4E5]
	0x0381559C MOV X20, X1
	0x038155A0 MOV X21, X0
	0x038155A4 MOV X19, X8
	0x038155A8 TBNZ X9, 0x0, 0x38155D8
	0x038155AC ADRP X0, 0x906000
	0x038155B0 LDR X0, [X0 + 0xDC8]
	0x038155B4 BL 0x1C16CF4
	0x038155B8 ADRP X0, 0x931000
	0x038155BC LDR X0, [X0 + 0x388]
	0x038155C0 BL 0x1C16CF4
	0x038155C4 ADRP X0, 0x935000
	0x038155C8 LDR X0, [X0 + 0x960]
	0x038155CC BL 0x1C16CF4
	0x038155D0 MOVZ W8, 0x1
	0x038155D4 STRB W8, [X22 + 0x4E5]
	0x038155D8 ADD X8, X31, 0x20
	0x038155DC ADD X0, X8, 0x10
	0x038155E0 MOVZ W2, 0xC0
	0x038155E4 MOV W1, W31
	0x038155E8 STP X31, X31, [X31]
	0x038155EC BL 0x3EB1B10
	0x038155F0 LDR V0, [X21]
	0x038155F4 MOV X1, X31
	0x038155F8 STR V0, [X31 + 0x2]
	0x038155FC LDR W8, [X21 + 0x98]
	0x03815600 AND W8, W8, 0x1
	0x03815604 STR W8, [X31 + 0xB8]
	0x03815608 LDR X0, [X21 + 0x38]
	0x0381560C BL 0x32277A8
	0x03815610 ANDS W31, W0, 0x1
	0x03815614 CSEL X8, X20, X21, NE
	0x03815618 LDR X8, [X8 + 0x38]
	0x0381561C MOV X1, X31
	0x03815620 STR X8, [X31 + 0x58]
	0x03815624 LDR X0, [X21 + 0x40]
	0x03815628 BL 0x32277A8
	0x0381562C ANDS W31, W0, 0x1
	0x03815630 CSEL X8, X20, X21, NE
	0x03815634 LDR X8, [X8 + 0x40]
	0x03815638 MOV X22, X21
	0x0381563C ADD X0, X31, 0x10
	0x03815640 MOV X1, X31
	0x03815644 STR X8, [X31 + 0x60]
	0x03815648 LDR V0, [X22 + 0x10]!
	0x0381564C ADD X23, X21, 0x18
	0x03815650 STR V0, [X31 + 0x1]
	0x03815654 BL 0x375F7A0
	0x03815658 ADD X8, X20, 0x10
	0x0381565C ADD X9, X20, 0x18
	0x03815660 ANDS W31, W0, 0x1
	0x03815664 CSEL X8, X8, X22, NE
	0x03815668 CSEL X9, X9, X23, NE
	0x0381566C LDR X8, [X8]
	0x03815670 LDR X9, [X9]
	0x03815674 MOV X22, X21
	0x03815678 ADD X0, X31, 0x10
	0x0381567C MOV X1, X31
	0x03815680 STP X8, X9, [X31 + 0x30]
	0x03815684 LDR V0, [X22 + 0x20]!
	0x03815688 ADD X23, X22, 0x8
	0x0381568C STR V0, [X31 + 0x1]
	0x03815690 BL 0x375F7A0
	0x03815694 ADD X8, X20, 0x20
	0x03815698 ADD X9, X20, 0x28
	0x0381569C ANDS W31, W0, 0x1
	0x038156A0 CSEL X8, X8, X22, NE
	0x038156A4 CSEL X9, X9, X23, NE
	0x038156A8 LDR X8, [X8]
	0x038156AC LDR X9, [X9]
	0x038156B0 STP X8, X9, [X31 + 0x40]
	0x038156B4 LDR X8, [X22 + 0x10]
	0x038156B8 CBNZ X8, 0x38156C0
	0x038156BC LDR X8, [X20 + 0x30]
	0x038156C0 STR X8, [X31 + 0x50]
	0x038156C4 LDR W8, [X21 + 0x9C]
	0x038156C8 CBNZ W8, 0x38156D0
	0x038156CC LDR W8, [X20 + 0x9C]
	0x038156D0 STR W8, [X31 + 0xBC]
	0x038156D4 LDR W8, [X21 + 0x98]
	0x038156D8 TBNZ X8, 0x1, 0x38156F4
	0x038156DC LDR W9, [X31 + 0xB8]
	0x038156E0 LDRB W10, [X20 + 0x98]
	0x038156E4 AND W9, W9, 0xFFFFFFFD
	0x038156E8 TBNZ X10, 0x1, 0x38156FC
	0x038156EC MOV W10, W31
	0x038156F0 B 0x3815700
	0x038156F4 LDR W9, [X31 + 0xB8]
	0x038156F8 AND W9, W9, 0xFFFFFFFD
	0x038156FC MOVZ W10, 0x2
	0x03815700 ORR W9, W10, W9, 0x0
	0x03815704 STR W9, [X31 + 0xB8]
	0x03815708 TBNZ X8, 0x4, 0x3815724
	0x0381570C LDR W9, [X31 + 0xB8]
	0x03815710 LDRB W10, [X20 + 0x98]
	0x03815714 AND W9, W9, 0xFFFFFFEF
	0x03815718 TBNZ X10, 0x4, 0x381572C
	0x0381571C MOV W10, W31
	0x03815720 B 0x3815730
	0x03815724 LDR W9, [X31 + 0xB8]
	0x03815728 AND W9, W9, 0xFFFFFFEF
	0x0381572C MOVZ W10, 0x10
	0x03815730 ORR W9, W10, W9, 0x0
	0x03815734 STR W9, [X31 + 0xB8]
	0x03815738 TBNZ X8, 0x2, 0x3815754
	0x0381573C LDR W8, [X31 + 0xB8]
	0x03815740 LDRB W9, [X20 + 0x98]
	0x03815744 AND W8, W8, 0xFFFFFFFB
	0x03815748 TBNZ X9, 0x2, 0x381575C
	0x0381574C MOV W9, W31
	0x03815750 B 0x3815760
	0x03815754 LDR W8, [X31 + 0xB8]
	0x03815758 AND W8, W8, 0xFFFFFFFB
	0x0381575C MOVZ W9, 0x4
	0x03815760 AND W8, W8, 0xFFFFFFF7
	0x03815764 ORR W8, W9, W8, 0x0
	0x03815768 STR W8, [X31 + 0xB8]
	0x0381576C LDR W8, [X21 + 0x88]
	0x03815770 ADDS W31, W8, 0x1
	0x03815774 B.NE 0x381577C
	0x03815778 LDR W8, [X20 + 0x88]
	0x0381577C STR W8, [X31 + 0xA8]
	0x03815780 LDR W8, [X21 + 0x8C]
	0x03815784 ADDS W31, W8, 0x1
	0x03815788 B.NE 0x3815790
	0x0381578C LDR W8, [X20 + 0x8C]
	0x03815790 STR W8, [X31 + 0xAC]
	0x03815794 LDR W8, [X21 + 0x94]
	0x03815798 CBNZ W8, 0x38157A0
	0x0381579C LDR W8, [X20 + 0x94]
	0x038157A0 STR W8, [X31 + 0xB4]
	0x038157A4 LDR W8, [X21 + 0x90]
	0x038157A8 CBNZ W8, 0x38157B0
	0x038157AC LDR W8, [X20 + 0x90]
	0x038157B0 STR W8, [X31 + 0xB0]
	0x038157B4 LDR X8, [X21 + 0x60]
	0x038157B8 UBFM X9, X8, 0x20, 0x3F
	0x038157BC CMP W9, 0x0
	0x038157C0 MOV X9, X21
	0x038157C4 B.GT 0x38157D0
	0x038157C8 LDR X8, [X20 + 0x60]
	0x038157CC MOV X9, X20
	0x038157D0 LDR X9, [X9 + 0x58]
	0x038157D4 STP X9, X8, [X31 + 0x78]
	0x038157D8 LDR X8, [X21 + 0x50]
	0x038157DC UBFM X9, X8, 0x20, 0x3F
	0x038157E0 CMP W9, 0x0
	0x038157E4 MOV X9, X21
	0x038157E8 B.GT 0x38157F4
	0x038157EC LDR X8, [X20 + 0x50]
	0x038157F0 MOV X9, X20
	0x038157F4 LDR X9, [X9 + 0x48]
	0x038157F8 STP X9, X8, [X31 + 0x68]
	0x038157FC LDR X8, [X21 + 0x70]
	0x03815800 MOV X9, X21
	0x03815804 UBFM X10, X8, 0x20, 0x3F
	0x03815808 CBNZ X10, 0x3815814
	0x0381580C LDR X8, [X20 + 0x70]
	0x03815810 MOV X9, X20
	0x03815814 LDR X9, [X9 + 0x68]
	0x03815818 STP X9, X8, [X31 + 0x88]
	0x0381581C LDR X8, [X21 + 0x80]
	0x03815820 MOV X9, X21
	0x03815824 UBFM X10, X8, 0x20, 0x3F
	0x03815828 CBNZ X10, 0x3815834
	0x0381582C LDR X8, [X20 + 0x80]
	0x03815830 MOV X9, X20
	0x03815834 LDR X9, [X9 + 0x78]
	0x03815838 MOV X1, X31
	0x0381583C STP X9, X8, [X31 + 0x98]
	0x03815840 LDR X0, [X21 + 0x38]
	0x03815844 BL 0x32277A8
	0x03815848 ANDS W31, W0, 0x1
	0x0381584C CSEL X8, X20, X21, NE
	0x03815850 LDR X8, [X8 + 0x38]
	0x03815854 MOV X22, X21
	0x03815858 ADD X0, X31, 0x0
	0x0381585C MOV X1, X31
	0x03815860 STR X8, [X31 + 0x58]
	0x03815864 LDR V0, [X22 + 0xA0]!
	0x03815868 STR V0, [X31]
	0x0381586C BL 0x3758800
	0x03815870 ADD X8, X20, 0xA0
	0x03815874 ANDS W31, W0, 0x1
	0x03815878 CSEL X9, X20, X21, NE
	0x0381587C CSEL X8, X8, X22, NE
	0x03815880 LDR X8, [X8]
	0x03815884 LDR X9, [X9 + 0xA8]
	0x03815888 MOV X22, X21
	0x0381588C ADD X0, X31, 0x0
	0x03815890 MOV X1, X31
	0x03815894 STP X8, X9, [X31 + 0xC0]
	0x03815898 LDR V0, [X22 + 0xB0]!
	0x0381589C STR V0, [X31]
	0x038158A0 BL 0x3758800
	0x038158A4 ADD X8, X20, 0xB0
	0x038158A8 ANDS W31, W0, 0x1
	0x038158AC CSEL X9, X20, X21, NE
	0x038158B0 CSEL X8, X8, X22, NE
	0x038158B4 LDR X8, [X8]
	0x038158B8 LDR X9, [X9 + 0xB8]
	0x038158BC MOV X22, X21
	0x038158C0 ADD X0, X31, 0x0
	0x038158C4 MOV X1, X31
	0x038158C8 STP X8, X9, [X31 + 0xD0]
	0x038158CC LDR V0, [X22 + 0xC0]!
	0x038158D0 STR V0, [X31]
	0x038158D4 BL 0x3758800
	0x038158D8 ADD X8, X20, 0xC0
	0x038158DC ANDS W31, W0, 0x1
	0x038158E0 CSEL X9, X20, X21, NE
	0x038158E4 CSEL X8, X8, X22, NE
	0x038158E8 LDR X8, [X8]
	0x038158EC LDR X9, [X9 + 0xC8]
	0x038158F0 ADD X1, X31, 0x20
	0x038158F4 MOVZ W2, 0xD0
	0x038158F8 MOV X0, X19
	0x038158FC STP X8, X9, [X31 + 0xE0]
	0x03815900 BL 0x3EB1AC0
	0x03815904 LDP X20, X19, [X31 + 0x120]
	0x03815908 LDP X22, X21, [X31 + 0x110]
	0x0381590C LDP X30, X23, [X31 + 0x100]
	0x03815910 LDR X29, [X31 + 0xF0]
	0x03815914 ADD X31, X31, 0x130
	0x03815918 RET
	0x0381591C STR X30, [X31 - 0x30]!
	0x03815920 STP X22, X21, [X31 + 0x10]
	0x03815924 STP X20, X19, [X31 + 0x20]
	0x03815928 ADRP X21, 0xBCC000
	0x0381592C LDRB W8, [X21 + 0x4DF]
	0x03815930 MOV X19, X1
	0x03815934 MOV X20, X0
	0x03815938 TBNZ X8, 0x0, 0x381595C
	0x0381593C ADRP X0, 0x906000
	0x03815940 LDR X0, [X0 + 0xDC0]
	0x03815944 BL 0x1C16CF4
	0x03815948 ADRP X0, 0x8E7000
	0x0381594C LDR X0, [X0 + 0x848]
	0x03815950 BL 0x1C16CF4
	0x03815954 MOVZ W8, 0x1
	0x03815958 STRB W8, [X21 + 0x4DF]
	0x0381595C CBZ X19, 0x3815A30
	0x03815960 ADRP X21, 0x906000
	0x03815964 LDR X21, [X21 + 0xDC0]
	0x03815968 LDR X0, [X21]
	0x0381596C LDR W8, [X0 + 0xE0]
	0x03815970 CBNZ W8, 0x3815978
	0x03815974 BL 0x1C16DFC
	0x03815978 ADRP X22, 0xBCC000
	0x0381597C LDRB W8, [X22 + 0x52E]
	0x03815980 CBNZ W8, 0x3815998
	0x03815984 ADRP X0, 0x906000
	0x03815988 LDR X0, [X0 + 0xDC0]
	0x0381598C BL 0x1C16CF4
	0x03815990 MOVZ W8, 0x1
	0x03815994 STRB W8, [X22 + 0x52E]
	0x03815998 LDR X0, [X21]
	0x0381599C ADRP X22, 0x8E7000
	0x038159A0 LDR W8, [X0 + 0xE0]
	0x038159A4 LDR X22, [X22 + 0x848]
	0x038159A8 CBNZ W8, 0x38159B4
	0x038159AC BL 0x1C16DFC
	0x038159B0 LDR X0, [X21]
	0x038159B4 LDR X8, [X0 + 0xB8]
	0x038159B8 MOV X2, X31
	0x038159BC LDP X0, X1, [X8]
	0x038159C0 BL 0x37577E0
	0x038159C4 LDR X8, [X22]
	0x038159C8 CBZ X8, 0x3815A44
	0x038159CC MOV X21, X0
	0x038159D0 MOV X0, X8
	0x038159D4 MOV W1, W31
	0x038159D8 MOV X2, X31
	0x038159DC BL 0x3222A1C
	0x038159E0 MOV W2, W0
	0x038159E4 MOV X0, X21
	0x038159E8 MOV X1, X19
	0x038159EC MOV X3, X31
	0x038159F0 BL 0x37677D0
	0x038159F4 CBZ X20, 0x3815A30
	0x038159F8 TBNZ X0, 0x0, 0x3815A30
	0x038159FC LDR X0, [X22]
	0x03815A00 CBZ X0, 0x3815A44
	0x03815A04 MOV W1, W31
	0x03815A08 MOV X2, X31
	0x03815A0C BL 0x3222A1C
	0x03815A10 MOV W2, W0
	0x03815A14 MOV X0, X20
	0x03815A18 MOV X1, X19
	0x03815A1C LDP X20, X19, [X31 + 0x20]
	0x03815A20 LDP X22, X21, [X31 + 0x10]
	0x03815A24 MOV X3, X31
	0x03815A28 LDR X30, [X31], #0x30
	0x03815A2C B 0x37677D0
	0x03815A30 LDP X20, X19, [X31 + 0x20]
	0x03815A34 LDP X22, X21, [X31 + 0x10]
	0x03815A38 MOVZ W0, 0x1
	0x03815A3C LDR X30, [X31], #0x30
	0x03815A40 RET
	0x03815A44 BL 0x1C16F20
	0x03815A48 STR X30, [X31 - 0x30]!
	0x03815A4C STP X22, X21, [X31 + 0x10]
	0x03815A50 STP X20, X19, [X31 + 0x20]
	0x03815A54 ADRP X22, 0xBCC000
	0x03815A58 ADRP X21, 0x906000
	0x03815A5C LDRB W8, [X22 + 0x4DE]
	0x03815A60 LDR X21, [X21 + 0xDC0]
	0x03815A64 MOV X19, X3
	0x03815A68 MOV X20, X1
	0x03815A6C TBNZ X8, 0x0, 0x3815A84
	0x03815A70 ADRP X0, 0x906000
	0x03815A74 LDR X0, [X0 + 0xDC0]
	0x03815A78 BL 0x1C16CF4
	0x03815A7C MOVZ W8, 0x1
	0x03815A80 STRB W8, [X22 + 0x4DE]
	0x03815A84 LDR X0, [X21]
	0x03815A88 LDR W8, [X0 + 0xE0]
	0x03815A8C CBNZ W8, 0x3815A94
	0x03815A90 BL 0x1C16DFC
	0x03815A94 MOV X0, X20
	0x03815A98 MOV X1, X19
	0x03815A9C LDP X20, X19, [X31 + 0x20]
	0x03815AA0 LDP X22, X21, [X31 + 0x10]
	0x03815AA4 LDR X30, [X31], #0x30
	0x03815AA8 B 0x381591C
	0x03815AAC SUB X31, X31, 0x120
	0x03815AB0 STP X29, X30, [X31 + 0xE0]
	0x03815AB4 STP X24, X23, [X31 + 0xF0]
	0x03815AB8 STP X22, X21, [X31 + 0x100]
	0x03815ABC STP X20, X19, [X31 + 0x110]
	0x03815AC0 ADRP X24, 0xBCC000
	0x03815AC4 ADRP X23, 0x935000
	0x03815AC8 LDRB W8, [X24 + 0x4E0]
	0x03815ACC LDR X23, [X23 + 0x968]
	0x03815AD0 MOV X19, X3
	0x03815AD4 MOV X20, X2
	0x03815AD8 MOV X21, X1
	0x03815ADC MOV X22, X0
	0x03815AE0 TBNZ X8, 0x0, 0x3815B04
	0x03815AE4 ADRP X0, 0x935000
	0x03815AE8 LDR X0, [X0 + 0x7D8]
	0x03815AEC BL 0x1C16CF4
	0x03815AF0 ADRP X0, 0x935000
	0x03815AF4 LDR X0, [X0 + 0x968]
	0x03815AF8 BL 0x1C16CF4
	0x03815AFC MOVZ W8, 0x1
	0x03815B00 STRB W8, [X24 + 0x4E0]
	0x03815B04 LDR X1, [X23]
	0x03815B08 MOVI V0.2D, 0x0
	0x03815B0C ADD X8, X31, 0x0
	0x03815B10 MOV X0, X22
	0x03815B14 STP V0, V0, [X31 + 0xC0]
	0x03815B18 STP V0, V0, [X31 + 0xA0]
	0x03815B1C STP V0, V0, [X31 + 0x80]
	0x03815B20 STR V0, [X31 + 0x7]
	0x03815B24 BL 0x2211A0C
	0x03815B28 ADD X0, X31, 0x70
	0x03815B2C ADD X1, X31, 0x0
	0x03815B30 MOVZ W2, 0x70
	0x03815B34 BL 0x3EB1AC0
	0x03815B38 LDR X1, [X31 + 0x70]
	0x03815B3C ADD X0, X31, 0x0
	0x03815B40 MOV X2, X31
	0x03815B44 STP X31, X31, [X31]
	0x03815B48 BL 0x3757420
	0x03815B4C LDR V0, [X31]
	0x03815B50 MOV X1, X31
	0x03815B54 STR V0, [X21]
	0x03815B58 MOVI V0.2D, 0x0
	0x03815B5C STP V0, V0, [X20]
	0x03815B60 LDR X21, [X31 + 0x78]
	0x03815B64 MOV X0, X21
	0x03815B68 BL 0x32277A8
	0x03815B6C TBNZ X0, 0x0, 0x3815B9C
	0x03815B70 ADD X0, X31, 0x0
	0x03815B74 MOV X1, X21
	0x03815B78 MOV X2, X31
	0x03815B7C STP X31, X31, [X31]
	0x03815B80 BL 0x3757420
	0x03815B84 ADRP X8, 0x935000
	0x03815B88 LDP X1, X2, [X31]
	0x03815B8C LDR X8, [X8 + 0x7D8]
	0x03815B90 MOV X0, X20
	0x03815B94 LDR X3, [X8]
	0x03815B98 BL 0x2DE91C0
	0x03815B9C LDR X21, [X31 + 0x80]
	0x03815BA0 CBZ X21, 0x3815C00
	0x03815BA4 LDR X8, [X21 + 0x18]
	0x03815BA8 CMP W8, 0x1
	0x03815BAC B.LT 0x3815C00
	0x03815BB0 ADRP X24, 0x935000
	0x03815BB4 LDR X24, [X24 + 0x7D8]
	0x03815BB8 MOV X22, X31
	0x03815BBC AND X8, X8, 0x0
	0x03815BC0 ADD X23, X21, 0x20
	0x03815BC4 CMP X22, W8, UXTW
	0x03815BC8 B.CS 0x3815C2C
	0x03815BCC LDR X1, [X23, X22, LSL #3]
	0x03815BD0 ADD X0, X31, 0x0
	0x03815BD4 MOV X2, X31
	0x03815BD8 STP X31, X31, [X31]
	0x03815BDC BL 0x3757420
	0x03815BE0 LDP X1, X2, [X31]
	0x03815BE4 LDR X3, [X24]
	0x03815BE8 MOV X0, X20
	0x03815BEC BL 0x2DE91C0
	0x03815BF0 LDR W8, [X21 + 0x18]
	0x03815BF4 ADD X22, X22, 0x1
	0x03815BF8 CMP X22, W8, SXTW
	0x03815BFC B.LT 0x3815BC4
	0x03815C00 ADD X8, X31, 0x70
	0x03815C04 ADD X0, X8, 0x18
	0x03815C08 MOV X1, X31
	0x03815C0C BL 0x3757834
	0x03815C10 STR X0, [X19]
	0x03815C14 LDP X20, X19, [X31 + 0x110]
	0x03815C18 LDP X22, X21, [X31 + 0x100]
	0x03815C1C LDP X24, X23, [X31 + 0xF0]
	0x03815C20 LDP X29, X30, [X31 + 0xE0]
	0x03815C24 ADD X31, X31, 0x120
	0x03815C28 RET
	0x03815C2C BL 0x1C16F28
	0x03815C30 STR X30, [X31 - 0x20]!
	0x03815C34 STP X20, X19, [X31 + 0x10]
	0x03815C38 ADRP X20, 0xBCC000
	0x03815C3C ADRP X19, 0x906000
	0x03815C40 LDRB W8, [X20 + 0x4E1]
	0x03815C44 LDR X19, [X19 + 0xDC0]
	0x03815C48 TBNZ X8, 0x0, 0x3815C60
	0x03815C4C ADRP X0, 0x906000
	0x03815C50 LDR X0, [X0 + 0xDC0]
	0x03815C54 BL 0x1C16CF4
	0x03815C58 MOVZ W8, 0x1
	0x03815C5C STRB W8, [X20 + 0x4E1]
	0x03815C60 LDR X0, [X19]
	0x03815C64 LDR W8, [X0 + 0xE0]
	0x03815C68 CBNZ W8, 0x3815C74
	0x03815C6C BL 0x1C16DFC
	0x03815C70 LDR X0, [X19]
	0x03815C74 LDR X8, [X0 + 0xB8]
	0x03815C78 LDP X20, X19, [X31 + 0x10]
	0x03815C7C ADD X0, X8, 0x50
	0x03815C80 LDR X30, [X31], #0x20
	0x03815C84 RET
	0x03815C88 STR X30, [X31 - 0x20]!
	0x03815C8C STP X20, X19, [X31 + 0x10]
	0x03815C90 ADRP X20, 0xBCC000
	0x03815C94 ADRP X19, 0x906000
	0x03815C98 LDRB W8, [X20 + 0x4E2]
	0x03815C9C LDR X19, [X19 + 0xDC0]
	0x03815CA0 TBNZ X8, 0x0, 0x3815CB8
	0x03815CA4 ADRP X0, 0x906000
	0x03815CA8 LDR X0, [X0 + 0xDC0]
	0x03815CAC BL 0x1C16CF4
	0x03815CB0 MOVZ W8, 0x1
	0x03815CB4 STRB W8, [X20 + 0x4E2]
	0x03815CB8 LDR X0, [X19]
	0x03815CBC LDR W8, [X0 + 0xE0]
	0x03815CC0 CBNZ W8, 0x3815CCC
	0x03815CC4 BL 0x1C16DFC
	0x03815CC8 LDR X0, [X19]
	0x03815CCC LDR X8, [X0 + 0xB8]
	0x03815CD0 LDP X20, X19, [X31 + 0x10]
	0x03815CD4 MOVZ W0, 0x1
	0x03815CD8 LDR W9, [X8 + 0x58]
	0x03815CDC ADD W9, W9, 0x1
	0x03815CE0 STR W9, [X8 + 0x58]
	0x03815CE4 LDR X30, [X31], #0x20
	0x03815CE8 RET
	0x03815CEC SUB X31, X31, 0x30
	0x03815CF0 STP X30, X21, [X31 + 0x10]
	0x03815CF4 STP X20, X19, [X31 + 0x20]
	0x03815CF8 ADRP X21, 0xBCC000
	0x03815CFC ADRP X20, 0x906000
	0x03815D00 ADRP X19, 0x906000
	0x03815D04 LDRB W8, [X21 + 0x4E3]
	0x03815D08 LDR X20, [X20 + 0x68]
	0x03815D0C LDR X19, [X19 + 0xDC0]
	0x03815D10 TBNZ X8, 0x0, 0x3815D34
	0x03815D14 ADRP X0, 0x906000
	0x03815D18 LDR X0, [X0 + 0xDC0]
	0x03815D1C BL 0x1C16CF4
	0x03815D20 ADRP X0, 0x906000
	0x03815D24 LDR X0, [X0 + 0x68]
	0x03815D28 BL 0x1C16CF4
	0x03815D2C MOVZ W8, 0x1
	0x03815D30 STRB W8, [X21 + 0x4E3]
	0x03815D34 LDR X1, [X20]
	0x03815D38 ADD X0, X31, 0x0
	0x03815D3C MOV X2, X31
	0x03815D40 STP X31, X31, [X31]
	0x03815D44 BL 0x3757420
	0x03815D48 LDR X8, [X19]
	0x03815D4C LDR V0, [X31]
	0x03815D50 LDP X20, X19, [X31 + 0x20]
	0x03815D54 LDP X30, X21, [X31 + 0x10]
	0x03815D58 LDR X8, [X8 + 0xB8]
	0x03815D5C STR V0, [X8]
	0x03815D60 ADD X31, X31, 0x30
	0x03815D64 RET
	0x03815D68 STR X30, [X31 - 0x30]!
	0x03815D6C STP X22, X21, [X31 + 0x10]
	0x03815D70 STP X20, X19, [X31 + 0x20]
	0x03815D74 ADRP X22, 0xBCC000
	0x03815D78 ADRP X21, 0x906000
	0x03815D7C LDRB W8, [X22 + 0x4E4]
	0x03815D80 LDR X21, [X21 + 0xDC0]
	0x03815D84 MOV X19, X1
	0x03815D88 MOV X20, X0
	0x03815D8C TBNZ X8, 0x0, 0x3815DA4
	0x03815D90 ADRP X0, 0x906000
	0x03815D94 LDR X0, [X0 + 0xDC0]
	0x03815D98 BL 0x1C16CF4
	0x03815D9C MOVZ W8, 0x1
	0x03815DA0 STRB W8, [X22 + 0x4E4]
	0x03815DA4 LDR X0, [X21]
	0x03815DA8 LDP X22, X21, [X20 + 0x28]
	0x03815DAC LDP X20, X19, [X19 + 0x20]
	0x03815DB0 LDR W8, [X0 + 0xE0]
	0x03815DB4 CBNZ W8, 0x3815DBC
	0x03815DB8 BL 0x1C16DFC
	0x03815DBC MOV X0, X22
	0x03815DC0 MOV X1, X21
	0x03815DC4 MOV X2, X20
	0x03815DC8 MOV X3, X19
	0x03815DCC LDP X20, X19, [X31 + 0x20]
	0x03815DD0 LDP X22, X21, [X31 + 0x10]
	0x03815DD4 LDR X30, [X31], #0x30
	0x03815DD8 B 0x3815A48
	0x03815DDC LDP X8, X1, [X0]
	0x03815DE0 MOV X0, X8
	0x03815DE4 RET
	0x03815DE8 STP X1, X2, [X0]
	0x03815DEC RET
	0x03815DF0 LDP X8, X1, [X0 + 0x10]
	0x03815DF4 MOV X0, X8
	0x03815DF8 RET
	0x03815DFC STP X1, X2, [X0 + 0x10]
	0x03815E00 RET
	0x03815E04 LDP X8, X1, [X0 + 0x20]
	0x03815E08 MOV X0, X8
	0x03815E0C RET
	0x03815E10 STP X1, X2, [X0 + 0x20]
	0x03815E14 RET
	0x03815E18 LDR X0, [X0 + 0x30]
	0x03815E1C RET
	0x03815E20 STR X1, [X0 + 0x30]
	0x03815E24 RET
	0x03815E28 LDR X0, [X0 + 0x38]
	0x03815E2C RET
	0x03815E30 STR X1, [X0 + 0x38]
	0x03815E34 RET
	0x03815E38 LDR X0, [X0 + 0x40]
	0x03815E3C RET
	0x03815E40 STR X1, [X0 + 0x40]
	0x03815E44 RET
	0x03815E48 LDP X8, X1, [X0 + 0x48]
	0x03815E4C MOV X0, X8
	0x03815E50 RET
	0x03815E54 STP X1, X2, [X0 + 0x48]
	0x03815E58 RET
	0x03815E5C LDP X8, X1, [X0 + 0x58]
	0x03815E60 MOV X0, X8
	0x03815E64 RET
	0x03815E68 STP X1, X2, [X0 + 0x58]
	0x03815E6C RET
	0x03815E70 LDP X8, X1, [X0 + 0x68]
	0x03815E74 MOV X0, X8
	0x03815E78 RET
	0x03815E7C STP X1, X2, [X0 + 0x68]
	0x03815E80 RET
	0x03815E84 LDP X8, X1, [X0 + 0x78]
	0x03815E88 MOV X0, X8
	0x03815E8C RET
	0x03815E90 STP X1, X2, [X0 + 0x78]
	0x03815E94 RET
	0x03815E98 LDR W0, [X0 + 0x88]
	0x03815E9C RET
	0x03815EA0 STR W1, [X0 + 0x88]
	0x03815EA4 RET
	0x03815EA8 LDR W0, [X0 + 0x8C]
	0x03815EAC RET
	0x03815EB0 STR W1, [X0 + 0x8C]
	0x03815EB4 RET
	0x03815EB8 LDR W0, [X0 + 0x90]
	0x03815EBC RET
	0x03815EC0 STR W1, [X0 + 0x90]
	0x03815EC4 RET
	0x03815EC8 LDR W0, [X0 + 0x94]
	0x03815ECC RET
	0x03815ED0 STR W1, [X0 + 0x94]
	0x03815ED4 RET
	0x03815ED8 LDR W0, [X0 + 0x98]
	0x03815EDC RET
	0x03815EE0 STR W1, [X0 + 0x98]
	0x03815EE4 RET
	0x03815EE8 LDR W0, [X0 + 0x9C]
	0x03815EEC RET
	0x03815EF0 STR W1, [X0 + 0x9C]
	0x03815EF4 RET
	0x03815EF8 LDP X8, X1, [X0 + 0xA0]
	0x03815EFC MOV X0, X8
	0x03815F00 RET
	0x03815F04 STP X1, X2, [X0 + 0xA0]
	0x03815F08 RET
	0x03815F0C LDP X8, X1, [X0 + 0xB0]
	0x03815F10 MOV X0, X8
	0x03815F14 RET
	0x03815F18 STP X1, X2, [X0 + 0xB0]
	0x03815F1C RET
	0x03815F20 LDP X8, X1, [X0 + 0xC0]
	0x03815F24 MOV X0, X8
	0x03815F28 RET
	0x03815F2C STP X1, X2, [X0 + 0xC0]
	0x03815F30 RET
	0x03815F34 LDR W8, [X0 + 0x98]
	0x03815F38 AND W0, W8, 0x1
	0x03815F3C RET
	0x03815F40 LDRB W8, [X0 + 0x98]
	0x03815F44 UBFM W0, W8, 0x1, 0x1
	0x03815F48 RET
	0x03815F4C LDRB W8, [X0 + 0x98]
	0x03815F50 UBFM W0, W8, 0x2, 0x2
	0x03815F54 RET
	0x03815F58 LDRB W8, [X0 + 0x98]
	0x03815F5C UBFM W0, W8, 0x4, 0x4
	0x03815F60 RET
	0x03815F64 LDRB W8, [X0 + 0x98]
	0x03815F68 UBFM W0, W8, 0x3, 0x3
	0x03815F6C RET
	0x03815F70 LDR X0, [X0 + 0x10]
	0x03815F74 RET
	0x03815F78 STR X1, [X0 + 0x10]
	0x03815F7C RET
	0x03815F80 LDR X0, [X0 + 0x18]
	0x03815F84 RET
	0x03815F88 STR X1, [X0 + 0x18]
	0x03815F8C RET
	0x03815F90 LDR X0, [X0 + 0x20]
	0x03815F94 RET
	0x03815F98 STR X1, [X0 + 0x20]
	0x03815F9C RET
	0x03815FA0 LDR W0, [X0 + 0x28]
	0x03815FA4 RET
	0x03815FA8 STR W1, [X0 + 0x28]
	0x03815FAC RET
	0x03815FB0 LDR W0, [X0 + 0x2C]
	0x03815FB4 RET
	0x03815FB8 STR W1, [X0 + 0x2C]
	0x03815FBC RET
	0x03815FC0 LDR X0, [X0 + 0x30]
	0x03815FC4 RET
	0x03815FC8 STR X30, [X31 - 0x20]!
	0x03815FCC STP X20, X19, [X31 + 0x10]
	0x03815FD0 MOV X19, X1
	0x03815FD4 MOV X20, X0
	0x03815FD8 MOV X0, X1
	0x03815FDC MOV X1, X31
	0x03815FE0 BL 0x32277A8
	0x03815FE4 ANDS W31, W0, 0x1
	0x03815FE8 CSEL X8, X31, X19, NE
	0x03815FEC STR X8, [X20 + 0x30]
	0x03815FF0 LDP X20, X19, [X31 + 0x10]
	0x03815FF4 LDR X30, [X31], #0x20
	0x03815FF8 RET
	0x03815FFC LDRH W0, [X0 + 0x38]
	0x03816000 RET
	0x03816004 STRH W1, [X0 + 0x38]
	0x03816008 RET
	0x0381600C SUB X31, X31, 0x30
	0x03816010 STP X30, X21, [X31 + 0x10]
	0x03816014 STP X20, X19, [X31 + 0x20]
	0x03816018 ADRP X21, 0xBCB000
	0x0381601C ADRP X20, 0x934000
	0x03816020 LDRB W8, [X21 + 0x4E6]
	0x03816024 LDR X20, [X20 + 0x970]
	0x03816028 MOV X19, X0
	0x0381602C TBNZ X8, 0x0, 0x3816044
	0x03816030 ADRP X0, 0x934000
	0x03816034 LDR X0, [X0 + 0x970]
	0x03816038 BL 0x1C16CF4
	0x0381603C MOVZ W8, 0x1
	0x03816040 STRB W8, [X21 + 0x4E6]
	0x03816044 LDR X1, [X19 + 0x40]
	0x03816048 LDR W3, [X19 + 0x3C]
	0x0381604C LDR X4, [X20]
	0x03816050 ADD X0, X31, 0x0
	0x03816054 MOV W2, W31
	0x03816058 STP X31, X31, [X31]
	0x0381605C BL 0x24FEDFC
	0x03816060 LDP X0, X1, [X31]
	0x03816064 LDP X20, X19, [X31 + 0x20]
	0x03816068 LDP X30, X21, [X31 + 0x10]
	0x0381606C ADD X31, X31, 0x30
	0x03816070 RET
	0x03816074 STR X29, [X31 - 0x60]!
	0x03816078 STP X30, X27, [X31 + 0x10]
	0x0381607C STP X26, X25, [X31 + 0x20]
	0x03816080 STP X24, X23, [X31 + 0x30]
	0x03816084 STP X22, X21, [X31 + 0x40]
	0x03816088 STP X20, X19, [X31 + 0x50]
	0x0381608C SUB X31, X31, 0x1A0
	0x03816090 MRS X23, 0xC000
	0x03816094 LDR X8, [X23 + 0x28]
	0x03816098 ADRP X21, 0xBCB000
	0x0381609C MOV X20, X1
	0x038160A0 MOV X19, X0
	0x038160A4 STR X8, [X31 + 0x198]
	0x038160A8 LDRB W8, [X21 + 0x4E7]
	0x038160AC TBNZ X8, 0x0, 0x38160C4
	0x038160B0 ADRP X0, 0x934000
	0x038160B4 LDR X0, [X0 + 0x978]
	0x038160B8 BL 0x1C16CF4
	0x038160BC MOVZ W8, 0x1
	0x038160C0 STRB W8, [X21 + 0x4E7]
	0x038160C4 MOV X0, X20
	0x038160C8 MOV X1, X31
	0x038160CC BL 0x32277A8
	0x038160D0 TBNZ X0, 0x0, 0x38161D8
	0x038160D4 MOVI V0.2D, 0x0
	0x038160D8 ADD X0, X31, 0x0
	0x038160DC MOV X1, X20
	0x038160E0 MOV X2, X31
	0x038160E4 STR X31, [X31 + 0x80]
	0x038160E8 STR W31, [X31 + 0x190]
	0x038160EC STP V0, V0, [X31 + 0x60]
	0x038160F0 STP V0, V0, [X31 + 0x40]
	0x038160F4 STP V0, V0, [X31 + 0x20]
	0x038160F8 STR V0, [X31 + 0x1]
	0x038160FC STP V0, V0, [X31 + 0x160]
	0x03816100 STR V0, [X31 + 0x18]
	0x03816104 STP X31, X31, [X31]
	0x03816108 BL 0x3757420
	0x0381610C CBZ X20, 0x3816210
	0x03816110 ADRP X27, 0x934000
	0x03816114 LDP X26, X25, [X31]
	0x03816118 LDR X27, [X27 + 0x978]
	0x0381611C MOVZ W1, 0x2F
	0x03816120 MOV X0, X20
	0x03816124 MOV X2, X31
	0x03816128 ADD X24, X31, 0x90
	0x0381612C ADD X21, X19, 0x3C
	0x03816130 ADD X22, X19, 0x40
	0x03816134 BL 0x322BD98
	0x03816138 LDR X20, [X27]
	0x0381613C ADD X8, X31, 0x90
	0x03816140 ADDS W31, W0, 0x1
	0x03816144 ADD X0, X8, 0x10
	0x03816148 ADD X1, X31, 0x10
	0x0381614C MOVZ W2, 0x78
	0x03816150 CSET W27, NE
	0x03816154 STP X26, X25, [X31 + 0x90]
	0x03816158 BL 0x3EB1AC0
	0x0381615C LDP V1, V2, [X31 + 0x160]
	0x03816160 LDR V3, [X31 + 0x18]
	0x03816164 LDR W8, [X31 + 0x190]
	0x03816168 MOVI V0.2D, 0xFFFFFFFFFFFFFFFF
	0x0381616C ADD X2, X31, 0x90
	0x03816170 MOVZ W3, 0xA
	0x03816174 MOV X0, X22

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Subtract X31, X31, 4096
	014 Subtract X31, X31, 48
	015 NotImplemented "Instruction MRS not yet implemented."
	016 Move X8, [X23+40]
	017 Move X19, 0xBCE000
	018 Move X20, X1
	019 Move [X31+4136], X8
	020 Move W8, [X19+1244]
	021 Move [X31+40], X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {130}
	026 Move X0, 0x937000
	027 Move X0, [X0+2248]
	028 Call 0x1C17CF4
	029 Move X0, 0x937000
	030 Move X0, [X0+2256]
	031 Call 0x1C17CF4
	032 Move X0, 0x937000
	033 Move X0, [X0+2264]
	034 Call 0x1C17CF4
	035 Move X0, 0x937000
	036 Move X0, [X0+2272]
	037 Call 0x1C17CF4
	038 Move X0, 0x936000
	039 Move X0, [X0+2280]
	040 Call 0x1C17CF4
	041 Move X0, 0x936000
	042 Move X0, [X0+2288]
	043 Call 0x1C17CF4
	044 Move X0, 0x906000
	045 Move X0, [X0+4040]
	046 Call 0x1C17CF4
	047 Move X0, 0x936000
	048 Move X0, [X0+2296]
	049 Call 0x1C17CF4
	050 Move X0, 0x936000
	051 Move X0, [X0+2304]
	052 Call 0x1C17CF4
	053 Move X0, 0x906000
	054 Move X0, [X0+4048]
	055 Call 0x1C17CF4
	056 Move X0, 0x906000
	057 Move X0, [X0+4056]
	058 Call 0x1C17CF4
	059 Move X0, 0x936000
	060 Move X0, [X0+2312]
	061 Call 0x1C17CF4
	062 Move X0, 0x936000
	063 Move X0, [X0+2320]
	064 Call 0x1C17CF4
	065 Move X0, 0x936000
	066 Move X0, [X0+2328]
	067 Call 0x1C17CF4
	068 Move X0, 0x936000
	069 Move X0, [X0+2336]
	070 Call 0x1C17CF4
	071 Move X0, 0x907000
	072 Move X0, [X0+3520]
	073 Call 0x1C17CF4
	074 Move X0, 0x936000
	075 Move X0, [X0+2344]
	076 Call 0x1C17CF4
	077 Move X0, 0x936000
	078 Move X0, [X0+2352]
	079 Call 0x1C17CF4
	080 Move X0, 0x936000
	081 Move X0, [X0+2360]
	082 Call 0x1C17CF4
	083 Move X0, 0x936000
	084 Move X0, [X0+2024]
	085 Call 0x1C17CF4
	086 Move X0, 0x906000
	087 Move X0, [X0+4064]
	088 Call 0x1C17CF4
	089 Move X0, 0x936000
	090 Move X0, [X0+1920]
	091 Call 0x1C17CF4
	092 Move X0, 0x936000
	093 Move X0, [X0+1872]
	094 Call 0x1C17CF4
	095 Move X0, 0x8E0000
	096 Move X0, [X0+448]
	097 Call 0x1C17CF4
	098 Move X0, 0x936000
	099 Move X0, [X0+2144]
	100 Call 0x1C17CF4
	101 Move X0, 0x8E0000
	102 Move X0, [X0+456]
	103 Call 0x1C17CF4
	104 Move X0, 0x936000
	105 Move X0, [X0+2152]
	106 Call 0x1C17CF4
	107 Move X0, 0x907000
	108 Move X0, [X0+2904]
	109 Call 0x1C17CF4
	110 Move X0, 0x936000
	111 Move X0, [X0+2160]
	112 Call 0x1C17CF4
	113 Move X0, 0x936000
	114 Move X0, [X0+1864]
	115 Call 0x1C17CF4
	116 Move X0, 0x8E0000
	117 Move X0, [X0+464]
	118 Call 0x1C17CF4
	119 Move X0, 0x8E3000
	120 Move X0, [X0+3056]
	121 Call 0x1C17CF4
	122 Move X0, 0x8DF000
	123 Move X0, [X0+1728]
	124 Call 0x1C17CF4
	125 Move X0, 0x8E9000
	126 Move X0, [X0+2200]
	127 Call 0x1C17CF4
	128 Move W8, 1
	129 Move [X19+1244], W8
	130 Add X0, X31, 2936
	131 Move W2, 240
	132 Move W1, W31
	133 NotImplemented "Instruction STRH not yet implemented."
	134 Call 0x3EB2B10
	135 Add X0, X31, 2728
	136 Move W2, 208
	137 Move W1, W31
	138 Call 0x3EB2B10
	139 Add X0, X31, 2520
	140 Move W2, 208
	141 Move W1, W31
	142 Call 0x3EB2B10
	143 Add X0, X31, 2312
	144 Move W2, 208
	145 Move W1, W31
	146 Call 0x3EB2B10
	147 Add X0, X31, 2104
	148 Move W2, 208
	149 Move W1, W31
	150 Call 0x3EB2B10
	151 Add X0, X31, 1872
	152 Move W2, 208
	153 Move W1, W31
	154 Move [X31+2088], X31
	155 Move [X31+2080], X31
	156 Call 0x3EB2B10
	157 Add X0, X31, 1632
	158 Move W2, 208
	159 Move W1, W31
	160 Move [X31+1848], X31
	161 Move [X31+1840], X31
	162 Move [X31+1856], X31
	163 Call 0x3EB2B10
	164 Add X0, X31, 1424
	165 Move W2, 208
	166 Move W1, W31
	167 Call 0x3EB2B10
	168 Add X0, X31, 1272
	169 Move W2, 152
	170 Move W1, W31
	171 Call 0x3EB2B10
	172 NotImplemented "Instruction MOVI not yet implemented."
	173 Add X0, X31, 1120
	174 Move W2, 152
	175 Move W1, W31
	176 Move [X31+255], V0
	177 Move [X31+256], V0
	178 Move [X31+257], V0
	179 Move [X31+4128], W31
	180 Call 0x3EB2B10
	181 NotImplemented "Instruction MOVI not yet implemented."
	182 Move [X31+251], V0
	183 Move [X31+252], V0
	184 Move [X31+253], V0
	185 Move [X31+4064], W31
	186 Compare X20, 0
	187 JumpIfEqual {1129}
	188 Move X11, [X31+40]
	189 Add X9, X20, 64
	190 Add X10, X31, 3180
	191 Move X19, 0x8DF000
	192 NotImplemented "Instruction LDRH not yet implemented."
	193 Add X21, X11, 40
	194 Move X0, X21
	195 Move X1, X31
	196 And W31, W8, 255
	197 NotImplemented "Instruction STRH not yet implemented."
	198 NotImplemented "Instruction CSEL not yet implemented."
	199 NotImplemented "Instruction LDRH not yet implemented."
	200 Move X19, [X19+1728]
	201 NotImplemented "Instruction STRH not yet implemented."
	202 Call InternedString.IsEmpty, X0
	203 Move TEMP, X0
	204 And TEMP, TEMP, 1
	205 Compare TEMP, 1
	206 JumpIfNotEqual {209}
	207 NotImplemented "Instruction LDUR not yet implemented."
	208 Move [X21], V0
	209 Move X0, [X19]
	210 Move X9, [X31+40]
	211 Move W8, [X0+224]
	212 Move X22, [X9+32]
	213 Compare W8, 0
	214 JumpIfNotEqual {216}
	215 Call 0x1C17DFC
	216 Move X0, X22
	217 Move X1, X31
	218 Move X2, X31
	219 Call Type.op_Equality, X0, X1
	220 Move TEMP, X0
	221 And TEMP, TEMP, 1
	222 Compare TEMP, 1
	223 JumpIfNotEqual {226}
	224 Move X24, [X31+40]
	225 Add X19, X20, 32
	226 Move X8, [X31+40]
	227 Move X0, [X8+32]
	228 Compare X0, 0
	229 JumpIfEqual {1128}
	230 Move X8, [X0]
	231 Add X19, X20, 32
	232 Move X1, [X19]
	233 Move X9, [X8+680]
	234 Move X2, [X8+688]
	235 NotImplemented "Instruction BLR not yet implemented."
	236 Move X24, [X31+40]
	237 Move TEMP, X0
	238 And TEMP, TEMP, 1
	239 Compare TEMP, 1
	240 JumpIfNotEqual {243}
	241 Move X8, [X19]
	242 Move [X24+32], X8
	243 Move X22, 0x936000
	244 Move X19, 0x936000
	245 Move X22, [X22+2248]
	246 Move X19, [X19+2328]
	247 Move X0, X21
	248 Move X1, X31
	249 Call InternedString.IsEmpty, X0
	250 Move W8, [X24+56]
	251 Move [X31+28], W0
	252 Compare W8, 0
	253 JumpIfNotEqual {256}
	254 Move W8, [X20+56]
	255 Move [X24+56], W8
	256 Move X0, [X20+136]
	257 Move X1, [X24+136]
	258 Move X2, [X22]
	259 Call 0x217C294, X0, X1
	260 Move [X24+136], X0
	261 NotImplemented "Instruction LDUR not yet implemented."
	262 NotImplemented "Instruction LDUR not yet implemented."
	263 Move X2, [X19]
	264 Add X0, X24, 104
	265 Add X1, X31, 880
	266 Move [X31+880], V1
	267 Move [X31+888], V0
	268 Call InlinedArray`1<InternedString>.Merge, X0, X1
	269 Move X0, [X24+152]
	270 Move X1, X31
	271 Call String.IsNullOrEmpty, X0
	272 Move TEMP, X0
	273 And TEMP, TEMP, 1
	274 Compare TEMP, 1
	275 JumpIfNotEqual {278}
	276 Move X8, [X20+152]
	277 Move [X24+152], X8
	278 Move X8, [X24+144]
	279 Move X22, [X20+144]
	280 Compare X8, 0
	281 JumpIfEqual {925}
	282 Compare X22, 0
	283 JumpIfEqual {1082}
	284 Move [X31+16], X23
	285 Move X8, 0x936000
	286 Move X8, [X8+1864]
	287 Move X0, [X8]
	288 Call 0x1C17F10
	289 Move X8, 0x936000
	290 Move X8, [X8+1872]
	291 Move X20, X0
	292 Move X1, [X8]
	293 Call List`1<ControlItem>..ctor, X0
	294 Move X8, 0x8E0000
	295 Move X8, [X8+464]
	296 Move X0, [X8]
	297 Call 0x1C17F10
	298 Move X8, 0x8E0000
	299 Move X8, [X8+448]
	300 Move X23, X0
	301 Move X1, [X8]
	302 Call List`1<Object>..ctor, X0
	303 Move X8, 0x907000
	304 Move X8, [X8+3520]
	305 Move X0, [X8]
	306 Move W8, [X0+224]
	307 Compare W8, 0
	308 JumpIfNotEqual {310}
	309 Call 0x1C17DFC
	310 Move X0, X22
	311 Move X1, X23
	312 Call InputControlLayout.CreateLookupTableForControls, X0, X1
	313 Move X8, [X31+40]
	314 Move X22, X0
	315 Move X1, X31
	316 Move X8, [X8+144]
	317 Move X0, X8
	318 Call InputControlLayout.CreateLookupTableForControls, X0, X1
	319 Compare X0, 0
	320 JumpIfEqual {1128}
	321 Move X8, 0x936000
	322 Move X8, [X8+2256]
	323 Move X1, [X8]
	324 Add X8, X31, 880
	325 Call Dictionary`2<Object, ControlItem>.GetEnumerator, X0
	326 Add X0, X31, 2936
	327 Add X1, X31, 880
	328 Move W2, 240
	329 Add X19, X31, 2936
	330 Call 0x3EB2AC0
	331 Add X8, X19, 24
	332 Move [X31+32], X8
	333 Move X21, 0x936000
	334 Move X25, 0x906000
	335 Move X24, 0x8E9000
	336 Move X21, [X21+2272]
	337 Move X25, [X25+4048]
	338 Move X24, [X24+2200]
	339 Move X8, 0x936000
	340 Move X8, [X8+2304]
	341 Move X1, [X8]
	342 Add X0, X31, 2936
	343 Call Enumerator<Object, ControlItem>.MoveNext, X0
	344 Move TEMP, X0
	345 And TEMP, TEMP, 1
	346 Compare TEMP, 1
	347 JumpIfNotEqual {926}
	348 Move X1, [X31+32]
	349 Move X26, [X31+2952]
	350 Add X0, X31, 2728
	351 Move W2, 208
	352 Call 0x3EB2AC0
	353 Compare X22, 0
	354 JumpIfEqual {1105}
	355 Move X3, [X21]
	356 Add X2, X31, 2520
	357 Move X0, X22
	358 Move X1, X26
	359 Call Dictionary`2<Object, ControlItem>.TryGetValue, X0, X1, X2
	360 Move TEMP, X0
	361 And TEMP, TEMP, 1
	362 Compare TEMP, 1
	363 JumpIfNotEqual {410}
	364 Add X0, X31, 2104
	365 Add X1, X31, 2728
	366 Move W2, 208
	367 Call 0x3EB2AC0
	368 Add X0, X31, 672
	369 Add X1, X31, 2520
	370 Move W2, 208
	371 Call 0x3EB2AC0
	372 Add X8, X31, 880
	373 Add X0, X31, 2104
	374 Add X1, X31, 672
	375 Call ControlItem.Merge, X0, X1
	376 Add X0, X31, 2312
	377 Add X1, X31, 880
	378 Move W2, 208
	379 Call 0x3EB2AC0
	380 Add X0, X31, 3184
	381 Add X1, X31, 2312
	382 Move W2, 208
	383 Call 0x3EB2AC0
	384 Compare X20, 0
	385 JumpIfEqual {1120}
	386 Move X8, 0x936000
	387 Move X8, [X8+2024]
	388 Add X0, X31, 3808
	389 Add X1, X31, 3184
	390 Move W2, 208
	391 Move X19, [X8]
	392 Call 0x3EB2AC0
	393 Move W9, [X20+28]
	394 Move X8, [X20+16]
	395 Add W9, W9, 1
	396 Move [X20+28], W9
	397 Compare X8, 0
	398 JumpIfEqual {1121}
	399 NotImplemented "Instruction LDRSW not yet implemented."
	400 Move W10, [X8+24]
	401 NotImplemented "Instruction CMP not yet implemented."
	402 Move W11, 208
	403 NotImplemented "Instruction MADD not yet implemented."
	404 Add W10, W9, 1
	405 Add X0, X8, 32
	406 Add X1, X31, 3808
	407 Move W2, 208
	408 Move [X20+24], W10
	409 Call 0x3EB2AC0
	410 Add X0, X31, 2104
	411 Add X1, X31, 2728
	412 Move W2, 208
	413 Call 0x3EB2AC0
	414 Add X8, X31, 1881
	415 NotImplemented "Instruction LDUR not yet implemented."
	416 Move [X31+130], V0
	417 Add X0, X31, 2080
	418 Move X1, X31
	419 Call InternedString.IsEmpty, X0
	420 Move TEMP, X0
	421 And TEMP, TEMP, 1
	422 Compare TEMP, 1
	423 JumpIfEqual {468}
	424 Add X0, X31, 2104
	425 Add X1, X31, 2728
	426 Move W2, 208
	427 Call 0x3EB2AC0
	428 Move X8, 0x907000
	429 Move X8, [X8+3520]
	430 Move X28, [X31+2136]
	431 Move X27, [X31+2144]
	432 Move X0, [X8]
	433 Move W8, [X0+224]
	434 Compare W8, 0
	435 JumpIfNotEqual {437}
	436 Call 0x1C17DFC
	437 Move X8, 0xBCD000
	438 Move W8, [X8+1326]
	439 Compare W8, 0
	440 JumpIfNotEqual {447}
	441 Move X0, 0x907000
	442 Move X0, [X0+3520]
	443 Call 0x1C17CF4
	444 Move X8, 0xBCD000
	445 Move W9, 1
	446 Move [X8+1326], W9
	447 Move X8, 0x907000
	448 Move X8, [X8+3520]
	449 Move X0, [X8]
	450 Move W8, [X0+224]
	451 Compare W8, 0
	452 JumpIfNotEqual {457}
	453 Call 0x1C17DFC
	454 Move X8, 0x907000
	455 Move X8, [X8+3520]
	456 Move X0, [X8]
	457 Move X8, [X0+184]
	458 Move X2, [X8]
	459 Move X3, [X8+8]
	460 Move X0, X28
	461 Move X1, X27
	462 Move X4, X31
	463 Call InternedString.op_Equality, X0, X1
	464 Move TEMP, X0
	465 And TEMP, TEMP, 1
	466 Compare TEMP, 1
	467 JumpIfNotEqual {726}
	468 Move W8, [X31+28]
	469 Move TEMP, X8
	470 And TEMP, TEMP, 1
	471 Compare TEMP, 1
	472 JumpIfNotEqual {589}
	473 Compare X23, 0
	474 JumpIfEqual {1125}
	475 Move X8, 0x906000
	476 Move X8, [X8+4064]
	477 Move X1, [X8]
	478 Add X8, X31, 880
	479 Move X0, X23
	480 Call List`1<Object>.GetEnumerator, X0
	481 Move V0, [X31+55]
	482 Move X8, [X31+896]
	483 Move W29, W31
	484 Move [X31+115], V0
	485 Move [X31+1856], X8
	486 Move X1, [X25]
	487 Add X0, X31, 1840
	488 Call Enumerator<Object>.MoveNext, X0
	489 Move TEMP, X0
	490 And TEMP, TEMP, 1
	491 Compare TEMP, 1
	492 JumpIfNotEqual {710}
	493 Move X1, [X24]
	494 Move X2, [X31+1856]
	495 Move X0, X26
	496 Move X3, X31
	497 Call String.Concat, X0, X1, X2
	498 Move X3, [X21]
	499 Move X27, X0
	500 Add X2, X31, 2520
	501 Move X0, X22
	502 Move X1, X27
	503 Call Dictionary`2<Object, ControlItem>.TryGetValue, X0, X1, X2
	504 Move TEMP, X0
	505 And TEMP, TEMP, 1
	506 Compare TEMP, 1
	507 JumpIfNotEqual {486}
	508 Add X0, X31, 2104
	509 Add X1, X31, 2728
	510 Move W2, 208
	511 Call 0x3EB2AC0
	512 Add X0, X31, 256
	513 Add X1, X31, 2520
	514 Move W2, 208
	515 Call 0x3EB2AC0
	516 Add X8, X31, 880
	517 Add X0, X31, 2104
	518 Add X1, X31, 256
	519 Call ControlItem.Merge, X0, X1
	520 Add X0, X31, 1632
	521 Add X1, X31, 880
	522 Move W2, 208
	523 Call 0x3EB2AC0
	524 Add X0, X31, 880
	525 Add X1, X31, 1632
	526 Move W2, 208
	527 Call 0x3EB2AC0
	528 Compare X20, 0
	529 JumpIfEqual {916}
	530 Move X8, 0x936000
	531 Move X8, [X8+2024]
	532 Add X0, X31, 3392
	533 Add X1, X31, 880
	534 Move W2, 208
	535 Move X19, [X8]
	536 Call 0x3EB2AC0
	537 Move W9, [X20+28]
	538 Move X8, [X20+16]
	539 Add W9, W9, 1
	540 Move [X20+28], W9
	541 Compare X8, 0
	542 JumpIfEqual {918}
	543 NotImplemented "Instruction LDRSW not yet implemented."
	544 Move W10, [X8+24]
	545 NotImplemented "Instruction CMP not yet implemented."
	546 Move W11, 208
	547 NotImplemented "Instruction MADD not yet implemented."
	548 Add W10, W9, 1
	549 Add X0, X8, 32
	550 Add X1, X31, 3392
	551 Move W2, 208
	552 Move [X20+24], W10
	553 Call 0x3EB2AC0
	554 Move X8, [X19+32]
	555 Add X0, X31, 3600
	556 Add X1, X31, 3392
	557 Move W2, 208
	558 Move X8, [X8+192]
	559 Move X28, [X8+112]
	560 Call 0x3EB2AC0
	561 Add X1, X31, 3600
	562 Move X0, X20
	563 Move X2, X28
	564 Call List`1<ControlItem>.AddWithResize, X0, X1
	565 Move X8, 0x936000
	566 Move X8, [X8+2264]
	567 Move X2, [X8]
	568 Move X0, X22
	569 Move X1, X27
	570 Call Dictionary`2<Object, ControlItem>.Remove, X0, X1
	571 Move W29, 1
	572 Move X8, [X19+32]
	573 Add X0, X31, 880
	574 Add X1, X31, 3808
	575 Move W2, 208
	576 Move X8, [X8+192]
	577 Move X27, [X8+112]
	578 Call 0x3EB2AC0
	579 Add X1, X31, 880
	580 Move X0, X20
	581 Move X2, X27
	582 Call List`1<ControlItem>.AddWithResize, X0, X1
	583 Move X8, 0x936000
	584 Move X8, [X8+2264]
	585 Move X2, [X8]
	586 Move X0, X22
	587 Move X1, X26
	588 Call Dictionary`2<Object, ControlItem>.Remove, X0, X1
	589 Compare X23, 0
	590 JumpIfEqual {1124}
	591 Move W8, [X23+24]
	592 NotImplemented "Instruction CMP not yet implemented."
	593 Move W27, W31
	594 Move W19, W31
	595 Move X8, [X31+40]
	596 Move X28, [X8+48]
	597 Move X8, 0x907000
	598 Move X8, [X8+2904]
	599 Move X2, [X8]
	600 Move X0, X23
	601 Move W1, W27
	602 Call List`1<Object>.get_Item, X0, X1
	603 Move X8, 0x907000
	604 Move X8, [X8+3520]
	605 Move X29, X0
	606 Move X0, [X8]
	607 Move W8, [X0+224]
	608 Compare W8, 0
	609 JumpIfNotEqual {611}
	610 Call 0x1C17DFC
	611 Move X0, X28
	612 Move X1, X29
	613 Call InputControlLayout.VariantsMatch, X0, X1
	614 Move TEMP, X0
	615 And TEMP, TEMP, 1
	616 Compare TEMP, 1
	617 JumpIfNotEqual {703}
	618 Move X8, 0x907000
	619 Move X8, [X8+2904]
	620 Move X2, [X8]
	621 Move X0, X23
	622 Move W1, W27
	623 Call List`1<Object>.get_Item, X0, X1
	624 Move X1, [X24]
	625 Move X2, X0
	626 Move X0, X26
	627 Move X3, X31
	628 Call String.Concat, X0, X1, X2
	629 Move X3, [X21]
	630 Move X28, X0
	631 Add X2, X31, 2520
	632 Move X0, X22
	633 Move X1, X28
	634 Call Dictionary`2<Object, ControlItem>.TryGetValue, X0, X1, X2
	635 Move TEMP, X0
	636 And TEMP, TEMP, 1
	637 Compare TEMP, 1
	638 JumpIfNotEqual {703}
	639 Add X0, X31, 2104
	640 Add X1, X31, 2728
	641 Move W2, 208
	642 Call 0x3EB2AC0
	643 Add X0, X31, 464
	644 Add X1, X31, 2520
	645 Move W2, 208
	646 Call 0x3EB2AC0
	647 Add X8, X31, 880
	648 Add X0, X31, 2104
	649 Add X1, X31, 464
	650 Call ControlItem.Merge, X0, X1
	651 Add X0, X31, 1872
	652 Add X1, X31, 880
	653 Move W2, 208
	654 Call 0x3EB2AC0
	655 Add X0, X31, 3184
	656 Add X1, X31, 1872
	657 Move W2, 208
	658 Call 0x3EB2AC0
	659 Compare X20, 0
	660 JumpIfEqual {1106}
	661 Move X8, 0x936000
	662 Move X8, [X8+2024]
	663 Add X0, X31, 3808
	664 Add X1, X31, 3184
	665 Move W2, 208
	666 Move X19, [X8]
	667 Call 0x3EB2AC0
	668 Move W9, [X20+28]
	669 Move X8, [X20+16]
	670 Add W9, W9, 1
	671 Move [X20+28], W9
	672 Compare X8, 0
	673 JumpIfEqual {1107}
	674 NotImplemented "Instruction LDRSW not yet implemented."
	675 Move W10, [X8+24]
	676 NotImplemented "Instruction CMP not yet implemented."
	677 Move W11, 208
	678 NotImplemented "Instruction MADD not yet implemented."
	679 Add W10, W9, 1
	680 Add X0, X8, 32
	681 Add X1, X31, 3808
	682 Move W2, 208
	683 Move [X20+24], W10
	684 Call 0x3EB2AC0
	685 Move X8, [X19+32]
	686 Add X0, X31, 880
	687 Add X1, X31, 3808
	688 Move W2, 208
	689 Move X8, [X8+192]
	690 Move X29, [X8+112]
	691 Call 0x3EB2AC0
	692 Add X1, X31, 880
	693 Move X0, X20
	694 Move X2, X29
	695 Call List`1<ControlItem>.AddWithResize, X0, X1
	696 Move X8, 0x936000
	697 Move X8, [X8+2264]
	698 Move X2, [X8]
	699 Move X0, X22
	700 Move X1, X28
	701 Call Dictionary`2<Object, ControlItem>.Remove, X0, X1
	702 Move W19, 1
	703 Move W8, [X23+24]
	704 Add W27, W27, 1
	705 NotImplemented "Instruction CMP not yet implemented."
	706 Move TEMP, X19
	707 And TEMP, TEMP, 1
	708 Compare TEMP, 1
	709 JumpIfEqual {339}
	710 Move X27, X31
	711 Move W19, 23
	712 Move X8, 0x906000
	713 Move X8, [X8+4040]
	714 Move X1, [X8]
	715 Add X0, X31, 1840
	716 Call Enumerator<Object>.Dispose, X0
	717 Compare X27, 0
	718 JumpIfNotEqual {1122}
	719 Compare W19, 0
	720 JumpIfEqual {722}
	721 NotImplemented "Instruction CMP not yet implemented."
	722 Move TEMP, X29
	723 And TEMP, TEMP, 1
	724 Compare TEMP, 1
	725 JumpIfEqual {339}
	726 Add X0, X31, 2104
	727 Add X1, X31, 2728
	728 Move W2, 208
	729 Call 0x3EB2AC0
	730 Move X8, [X31+2104]
	731 Move X1, [X31+2112]
	732 Move X3, [X21]
	733 Move [X31+2080], X8
	734 Move [X31+2088], X1
	735 Add X2, X31, 2520
	736 Move X0, X22
	737 Call Dictionary`2<Object, ControlItem>.TryGetValue, X0, X1, X2
	738 Move TEMP, X0
	739 And TEMP, TEMP, 1
	740 Compare TEMP, 1
	741 JumpIfNotEqual {834}
	742 Add X0, X31, 2104
	743 Add X1, X31, 2728
	744 Move W2, 208
	745 Call 0x3EB2AC0
	746 Add X0, X31, 48
	747 Add X1, X31, 2520
	748 Move W2, 208
	749 Call 0x3EB2AC0
	750 Add X8, X31, 880
	751 Add X0, X31, 2104
	752 Add X1, X31, 48
	753 Call ControlItem.Merge, X0, X1
	754 Add X0, X31, 1424
	755 Add X1, X31, 880
	756 Move W2, 208
	757 Call 0x3EB2AC0
	758 Add X0, X31, 3184
	759 Add X1, X31, 1424
	760 Move W2, 208
	761 Call 0x3EB2AC0
	762 Compare X20, 0
	763 JumpIfEqual {1147}
	764 Move X8, 0x936000
	765 Move X8, [X8+2024]
	766 Add X0, X31, 3808
	767 Add X1, X31, 3184
	768 Move W2, 208
	769 Move X19, [X8]
	770 Call 0x3EB2AC0
	771 Move W9, [X20+28]
	772 Move X8, [X20+16]
	773 Add W9, W9, 1
	774 Move [X20+28], W9
	775 Compare X8, 0
	776 JumpIfEqual {1148}
	777 NotImplemented "Instruction LDRSW not yet implemented."
	778 Move W10, [X8+24]
	779 NotImplemented "Instruction CMP not yet implemented."
	780 Move W11, 208
	781 NotImplemented "Instruction MADD not yet implemented."
	782 Add W10, W9, 1
	783 Add X0, X8, 32
	784 Add X1, X31, 3808
	785 Move W2, 208
	786 Move [X20+24], W10
	787 Call 0x3EB2AC0
	788 Move W19, W31
	789 Move TEMP, X19
	790 And TEMP, TEMP, 1
	791 Compare TEMP, 1
	792 JumpIfEqual {339}
	793 Add X0, X31, 3184
	794 Add X1, X31, 2728
	795 Move W2, 208
	796 Call 0x3EB2AC0
	797 Compare X20, 0
	798 JumpIfEqual {1126}
	799 Move X8, 0x936000
	800 Move X8, [X8+2024]
	801 Add X0, X31, 3808
	802 Add X1, X31, 3184
	803 Move W2, 208
	804 Move X19, [X8]
	805 Call 0x3EB2AC0
	806 Move W9, [X20+28]
	807 Move X8, [X20+16]
	808 Add W9, W9, 1
	809 Move [X20+28], W9
	810 Compare X8, 0
	811 JumpIfEqual {1127}
	812 NotImplemented "Instruction LDRSW not yet implemented."
	813 Move W10, [X8+24]
	814 NotImplemented "Instruction CMP not yet implemented."
	815 Move W11, 208
	816 NotImplemented "Instruction MADD not yet implemented."
	817 Add W10, W9, 1
	818 Add X0, X8, 32
	819 Add X1, X31, 3808
	820 Move W2, 208
	821 Move [X20+24], W10
	822 Call 0x3EB2AC0
	823 Move X8, [X19+32]
	824 Add X0, X31, 880
	825 Add X1, X31, 3808
	826 Move W2, 208
	827 Move X8, [X8+192]
	828 Move X26, [X8+112]
	829 Call 0x3EB2AC0
	830 Add X1, X31, 880
	831 Move X0, X20
	832 Move X2, X26
	833 Call List`1<ControlItem>.AddWithResize, X0, X1
	834 Move X8, [X31+40]
	835 Add X0, X31, 2104
	836 Add X1, X31, 2728
	837 Move W2, 208
	838 Move X26, [X8+40]
	839 Move X27, [X8+48]
	840 Call 0x3EB2AC0
	841 Move X8, 0x907000
	842 Move X8, [X8+3520]
	843 Move X29, [X31+2136]
	844 Move X28, [X31+2144]
	845 Move X0, [X8]
	846 Move W8, [X0+224]
	847 Compare W8, 0
	848 JumpIfNotEqual {850}
	849 Call 0x1C17DFC
	850 Move X0, X26
	851 Move X1, X27
	852 Move X2, X29
	853 Move X3, X28
	854 Call InputControlLayout.VariantsMatch, X0, X1
	855 Move TEMP, X0
	856 And TEMP, TEMP, 1
	857 Compare TEMP, 1
	858 JumpIfNotEqual {339}
	859 Add X0, X31, 3184
	860 Add X1, X31, 2728
	861 Move W2, 208
	862 Call 0x3EB2AC0
	863 Compare X20, 0
	864 JumpIfEqual {1150}
	865 Move X8, 0x936000
	866 Move X8, [X8+2024]
	867 Add X0, X31, 3808
	868 Add X1, X31, 3184
	869 Move W2, 208
	870 Move X19, [X8]
	871 Call 0x3EB2AC0
	872 Move W9, [X20+28]
	873 Move X8, [X20+16]
	874 Add W9, W9, 1
	875 Move [X20+28], W9
	876 Compare X8, 0
	877 JumpIfEqual {1149}
	878 NotImplemented "Instruction LDRSW not yet implemented."
	879 Move W10, [X8+24]
	880 NotImplemented "Instruction CMP not yet implemented."
	881 Move X8, [X19+32]
	882 Add X0, X31, 880
	883 Add X1, X31, 3808
	884 Move W2, 208
	885 Move X8, [X8+192]
	886 Move X26, [X8+112]
	887 Call 0x3EB2AC0
	888 Add X1, X31, 880
	889 Move X0, X20
	890 Move X2, X26
	891 Call List`1<ControlItem>.AddWithResize, X0, X1
	892 Move X8, [X19+32]
	893 Add X0, X31, 880
	894 Add X1, X31, 3808
	895 Move W2, 208
	896 Move X8, [X8+192]
	897 Move X26, [X8+112]
	898 Call 0x3EB2AC0
	899 Add X1, X31, 880
	900 Move X0, X20
	901 Move X2, X26
	902 Call List`1<ControlItem>.AddWithResize, X0, X1
	903 Add X0, X31, 2104
	904 Add X1, X31, 2728
	905 Move W2, 208
	906 Call 0x3EB2AC0
	907 Move X9, 0x936000
	908 Move X8, [X31+2104]
	909 Move X1, [X31+2112]
	910 Move X9, [X9+2264]
	911 Move [X31+2080], X8
	912 Move [X31+2088], X1
	913 Move X2, [X9]
	914 Move X0, X22
	915 Call Dictionary`2<Object, ControlItem>.Remove, X0, X1
	916 Move W29, W31
	917 Call 0x1C17F20
	918 Call 0x1C17F20
	919 Move X26, X1
	920 NotImplemented "Instruction CMP not yet implemented."
	921 Call 0x3EB2AD0
	922 Move X27, [X0]
	923 Call 0x3EB2AE0
	924 Move W19, W31
	925 Move [X24+144], X22
	926 Move X8, 0x936000
	927 Move X8, [X8+2296]
	928 Add X0, X31, 2936
	929 Move X1, [X8]
	930 Call Enumerator<Object, ControlItem>.Dispose, X0
	931 Compare X20, 0
	932 JumpIfEqual {1128}
	933 Compare X22, 0
	934 JumpIfEqual {1128}
	935 Move X8, 0x936000
	936 Move W23, [X20+24]
	937 Move X8, [X8+2280]
	938 Move X0, X22
	939 Move X1, [X8]
	940 Call Dictionary`2<Object, ControlItem>.get_Values, X0
	941 Move W8, [X31+28]
	942 Move X22, X0
	943 Move TEMP, X8
	944 And TEMP, TEMP, 1
	945 Compare TEMP, 1
	946 JumpIfNotEqual {1002}
	947 Move X8, 0x936000
	948 Move X8, [X8+2360]
	949 Move X0, X20
	950 Move X1, X22
	951 Move X2, [X8]
	952 Call List`1<ControlItem>.AddRange, X0, X1
	953 Move W8, [X20+24]
	954 NotImplemented "Instruction CMP not yet implemented."
	955 Move X19, 0x936000
	956 Move X24, 0x936000
	957 Move X19, [X19+2152]
	958 Move X24, [X24+2160]
	959 Add X8, X31, 3184
	960 Add X22, X8, 156
	961 Move X2, [X19]
	962 Add X8, X31, 3184
	963 Move X0, X20
	964 Move W1, W23
	965 Call List`1<ControlItem>.get_Item, X0, X1
	966 Add X0, X31, 1272
	967 Add X1, X31, 3184
	968 Move W2, 152
	969 Call 0x3EB2AC0
	970 Move W8, [X31+3336]
	971 Move V1, [X22+16]
	972 Move V0, [X22+32]
	973 Move W9, [X22+48]
	974 Move V2, [X22]
	975 Move X21, [X24]
	976 Add X0, X31, 3184
	977 Add X1, X31, 1272
	978 Move W2, 152
	979 Move [X31+4128], W9
	980 Move [X31+257], V0
	981 Move [X31+255], V2
	982 Move [X31+256], V1
	983 And W25, W8, 0xFFFFFFF7
	984 Call 0x3EB2AC0
	985 Move V0, [X31+256]
	986 Move V1, [X31+255]
	987 Move V2, [X31+257]
	988 Move W8, [X31+4128]
	989 Add X2, X31, 3184
	990 Move X0, X20
	991 Move W1, W23
	992 Move X3, X21
	993 Move [X31+3336], W25
	994 Move [X22], V1
	995 Move [X22+8], V0
	996 Move [X22+2], V2
	997 Move [X22+48], W8
	998 Call List`1<ControlItem>.set_Item, X0, X1, X2
	999 Move W8, [X20+24]
	1000 Add W23, W23, 1
	1001 NotImplemented "Instruction CMP not yet implemented."
	1002 Move X8, 0x936000
	1003 Move X8, [X8+2320]
	1004 Move X0, [X8]
	1005 Call 0x1C17F10
	1006 Move X8, 0x936000
	1007 Move X8, [X8+2336]
	1008 Move X1, [X31+40]
	1009 Move X3, X31
	1010 Move X21, X0
	1011 Move X2, [X8]
	1012 Call Func`2<ControlItem, Boolean>..ctor, X0, X1, X2
	1013 Move X8, 0x936000
	1014 Move X8, [X8+2288]
	1015 Move X0, X22
	1016 Move X1, X21
	1017 Move X2, [X8]
	1018 Call Enumerable.Where, X0, X1
	1019 Move X8, 0x936000
	1020 Move X8, [X8+2360]
	1021 Move X1, X0
	1022 Move X0, X20
	1023 Move X2, [X8]
	1024 Call List`1<ControlItem>.AddRange, X0, X1
	1025 Move W8, [X20+24]
	1026 NotImplemented "Instruction CMP not yet implemented."
	1027 Move X19, 0x936000
	1028 Move X24, 0x936000
	1029 Move X19, [X19+2152]
	1030 Move X24, [X24+2160]
	1031 Add X8, X31, 3184
	1032 Add X22, X8, 156
	1033 Move X2, [X19]
	1034 Add X8, X31, 3184
	1035 Move X0, X20
	1036 Move W1, W23
	1037 Call List`1<ControlItem>.get_Item, X0, X1
	1038 Add X0, X31, 1120
	1039 Add X1, X31, 3184
	1040 Move W2, 152
	1041 Call 0x3EB2AC0
	1042 Move W8, [X31+3336]
	1043 Move V1, [X22+16]
	1044 Move V0, [X22+32]
	1045 Move W9, [X22+48]
	1046 Move V2, [X22]
	1047 Move X21, [X24]
	1048 Add X0, X31, 3184
	1049 Add X1, X31, 1120
	1050 Move W2, 152
	1051 Move [X31+4064], W9
	1052 Move [X31+253], V0
	1053 Move [X31+251], V2
	1054 Move [X31+252], V1
	1055 And W25, W8, 0xFFFFFFF7
	1056 Call 0x3EB2AC0
	1057 Move V0, [X31+252]
	1058 Move V1, [X31+251]
	1059 Move V2, [X31+253]
	1060 Move W8, [X31+4064]
	1061 Add X2, X31, 3184
	1062 Move X0, X20
	1063 Move W1, W23
	1064 Move X3, X21
	1065 Move [X31+3336], W25
	1066 Move [X22], V1
	1067 Move [X22+8], V0
	1068 Move [X22+2], V2
	1069 Move [X22+48], W8
	1070 Call List`1<ControlItem>.set_Item, X0, X1, X2
	1071 Move W8, [X20+24]
	1072 Add W23, W23, 1
	1073 NotImplemented "Instruction CMP not yet implemented."
	1074 Move X8, 0x936000
	1075 Move X8, [X8+1920]
	1076 Move X0, X20
	1077 Move X1, [X8]
	1078 Call List`1<ControlItem>.ToArray, X0
	1079 Move X8, [X31+40]
	1080 Move [X8+144], X0
	1081 Move X23, [X31+16]
	1082 Move X8, [X23+40]
	1083 Move X9, [X31+4136]
	1084 NotImplemented "Instruction CMP not yet implemented."
	1085 Add X31, X31, 4096
	1086 Add X31, X31, 48
	1087 Move X20, [X31+80]
	1088 Move X19, [X31+88]
	1089 Move X22, [X31+64]
	1090 Move X21, [X31+72]
	1091 Move X24, [X31+48]
	1092 Move X23, [X31+56]
	1093 Move X26, [X31+32]
	1094 Move X25, [X31+40]
	1095 Move X28, [X31+16]
	1096 Move X27, [X31+24]
	1097 Move X29, [X31+96]
	1098 Move X30, [X31+104]
	1099 Return 
	1100 Move X8, 0x936000
	1101 Move X8, [X8+2296]
	1102 Add X0, X31, 2936
	1103 Move X1, [X8]
	1104 Call Enumerator<Object, ControlItem>.Dispose, X0
	1105 Call 0x1C17F20
	1106 Call 0x1C17F20
	1107 Call 0x1C17F20
	1108 Move X23, X0
	1109 Move X27, X31
	1110 Move X8, 0x906000
	1111 Move X8, [X8+4040]
	1112 Move X1, [X8]
	1113 Add X0, X31, 1840
	1114 Call Enumerator<Object>.Dispose, X0
	1115 Move X0, X23
	1116 Compare X27, 0
	1117 JumpIfEqual {1155}
	1118 Move X0, X27
	1119 Call 0x1C17F18
	1120 Call 0x1C17F20
	1121 Call 0x1C17F20
	1122 Move X0, X27
	1123 Call 0x1C17F18
	1124 Call 0x1C17F20
	1125 Call 0x1C17F20
	1126 Call 0x1C17F20
	1127 Call 0x1C17F20
	1128 Call 0x1C17F20
	1129 Move X0, 0x8E3000
	1130 Move X0, [X0+1320]
	1131 Call 0x1C17D08
	1132 Call 0x1C17F10
	1133 Move X19, X0
	1134 Move X0, 0x908000
	1135 Move X0, [X0+2344]
	1136 Call 0x1C17D08
	1137 Move X1, X0
	1138 Move X0, X19
	1139 Move X2, X31
	1140 Call ArgumentNullException..ctor, X0, X1
	1141 Move X0, 0x935000
	1142 Move X0, [X0+2368]
	1143 Call 0x1C17D08
	1144 Move X1, X0
	1145 Move X0, X19
	1146 Call 0x1C17DEC
	1147 Call 0x1C17F20
	1148 Call 0x1C17F20
	1149 Call 0x1C17F20
	1150 Call 0x1C17F20
	1151 Call 0x3EB2B20
	1152 Move X26, X1
	1153 Move X23, X0
	1154 Move X26, X1
	1155 NotImplemented "Instruction CMP not yet implemented."
	1156 Call 0x3EB2AD0
	1157 Move X23, [X0]
	1158 Call 0x3EB2AE0
	1159 Move X8, 0x935000
	1160 Move X8, [X8+2296]
	1161 Add X0, X31, 2936
	1162 Move X1, [X8]
	1163 Call Enumerator<Object, ControlItem>.Dispose, X0
	1164 Compare X23, 0
	1165 JumpIfEqual {931}
	1166 Move X0, X23
	1167 Call 0x1C17F18
	1168 Move X19, X0
	1169 Move X23, X31
	1170 Move X19, X0
	1171 Move X8, 0x935000
	1172 Move X8, [X8+2296]
	1173 Move X1, [X8]
	1174 Add X0, X31, 2936
	1175 Call Enumerator<Object, ControlItem>.Dispose, X0
	1176 Compare X23, 0
	1177 JumpIfNotEqual {1180}
	1178 Move X0, X19
	1179 Call 0x1D2D690
	1180 Move X0, X23
	1181 Call 0x1C17F18
	1182 Call 0x1991590

Method: System.Collections.Generic.Dictionary`2<System.String, UnityEngine.InputSystem.Layouts.InputControlLayout/ControlItem> CreateLookupTableForControls(UnityEngine.InputSystem.Layouts.InputControlLayout/ControlItem[] controlItems, System.Collections.Generic.List`1<System.String> variants = null)

Disassembly:
	0x03816178 MOV X1, X21
	0x0381617C MOV X4, X20
	0x03816180 STR X31, [X31 + 0x120]
	0x03816184 STR D0, [X31 + 0x118]
	0x03816188 STR W27, [X31 + 0x128]
	0x0381618C STUR V1, [X24 + 0x9C]
	0x03816190 STUR V2, [X24 + 0xAC]
	0x03816194 STUR V3, [X24 + 0xBC]
	0x03816198 STR W8, [X31 + 0x15C]
	0x0381619C BL 0x2174F60
	0x038161A0 LDR X8, [X23 + 0x28]
	0x038161A4 LDR X9, [X31 + 0x198]
	0x038161A8 CMP X8, X9
	0x038161AC B.NE 0x3816214
	0x038161B0 MOV W1, W0
	0x038161B4 MOV X0, X19
	0x038161B8 ADD X31, X31, 0x1A0
	0x038161BC LDP X20, X19, [X31 + 0x50]
	0x038161C0 LDP X22, X21, [X31 + 0x40]
	0x038161C4 LDP X24, X23, [X31 + 0x30]
	0x038161C8 LDP X26, X25, [X31 + 0x20]
	0x038161CC LDP X30, X27, [X31 + 0x10]
	0x038161D0 LDR X29, [X31], #0x60
	0x038161D4 RET
	0x038161D8 ADRP X0, 0x8E5000
	0x038161DC LDR X0, [X0 + 0x578]
	0x038161E0 BL 0x1C16D08
	0x038161E4 BL 0x1C16F10
	0x038161E8 MOV X1, X20
	0x038161EC MOV X2, X31
	0x038161F0 MOV X19, X0
	0x038161F4 BL 0x3314A68
	0x038161F8 ADRP X0, 0x934000
	0x038161FC LDR X0, [X0 + 0x980]
	0x03816200 BL 0x1C16D08
	0x03816204 MOV X1, X0
	0x03816208 MOV X0, X19
	0x0381620C BL 0x1C16DEC
	0x03816210 BL 0x1C16F20
	0x03816214 BL 0x3EB1B20
	0x03816218 STR X1, [X0 + 0x10]
	0x0381621C RET
	0x03816220 STR X1, [X0 + 0x18]
	0x03816224 RET
	0x03816228 STR W1, [X0 + 0x28]
	0x0381622C RET
	0x03816230 SUB X31, X31, 0x20
	0x03816234 STP X30, X19, [X31 + 0x10]
	0x03816238 MOV X19, X0
	0x0381623C ADD X0, X31, 0x8
	0x03816240 MOV X2, X31
	0x03816244 STR W31, [X31 + 0x8]
	0x03816248 BL 0x375F3B0
	0x0381624C LDR W8, [X31 + 0x8]
	0x03816250 MOV X0, X19
	0x03816254 STR W8, [X19 + 0x28]
	0x03816258 LDP X30, X19, [X31 + 0x10]
	0x0381625C ADD X31, X31, 0x20
	0x03816260 RET
	0x03816264 STR W1, [X0 + 0x2C]
	0x03816268 RET
	0x0381626C STR X30, [X31 - 0x20]!
	0x03816270 STP X20, X19, [X31 + 0x10]
	0x03816274 MOV X19, X1
	0x03816278 MOV X20, X0
	0x0381627C MOV X0, X1
	0x03816280 MOV X1, X31
	0x03816284 BL 0x32277A8
	0x03816288 ANDS W31, W0, 0x1
	0x0381628C CSEL X8, X31, X19, NE
	0x03816290 STR X8, [X20 + 0x30]
	0x03816294 MOV X0, X20
	0x03816298 LDP X20, X19, [X31 + 0x10]
	0x0381629C LDR X30, [X31], #0x20
	0x038162A0 RET
	0x038162A4 SUB X31, X31, 0x90
	0x038162A8 STR X30, [X31 + 0x50]
	0x038162AC STP X24, X23, [X31 + 0x60]
	0x038162B0 STP X22, X21, [X31 + 0x70]
	0x038162B4 STP X20, X19, [X31 + 0x80]
	0x038162B8 ADRP X20, 0xBCB000
	0x038162BC LDRB W8, [X20 + 0x4E8]
	0x038162C0 MOV X19, X0
	0x038162C4 TBNZ X8, 0x0, 0x381630C
	0x038162C8 ADRP X0, 0x934000
	0x038162CC LDR X0, [X0 + 0x988]
	0x038162D0 BL 0x1C16CF4
	0x038162D4 ADRP X0, 0x932000
	0x038162D8 LDR X0, [X0 + 0xE0]
	0x038162DC BL 0x1C16CF4
	0x038162E0 ADRP X0, 0x905000
	0x038162E4 LDR X0, [X0 + 0xDC0]
	0x038162E8 BL 0x1C16CF4
	0x038162EC ADRP X0, 0x932000
	0x038162F0 LDR X0, [X0 + 0xE8]
	0x038162F4 BL 0x1C16CF4
	0x038162F8 ADRP X0, 0x8DD000
	0x038162FC LDR X0, [X0 + 0x6C0]
	0x03816300 BL 0x1C16CF4
	0x03816304 MOVZ W8, 0x1
	0x03816308 STRB W8, [X20 + 0x4E8]
	0x0381630C MOVI V0.2D, 0x0
	0x03816310 STP V0, V0, [X31 + 0x30]
	0x03816314 LDR W1, [X19 + 0x3C]
	0x03816318 ADRP X23, 0x8DD000
	0x0381631C LDR X23, [X23 + 0x6C0]
	0x03816320 CMP W1, 0x1
	0x03816324 B.LT 0x3816358
	0x03816328 ADRP X8, 0x934000
	0x0381632C LDR X8, [X8 + 0x988]
	0x03816330 LDR X0, [X8]
	0x03816334 BL 0x1C16D6C
	0x03816338 LDR X8, [X19 + 0x40]
	0x0381633C LDR W2, [X19 + 0x3C]
	0x03816340 MOV X20, X0
	0x03816344 MOV X1, X20
	0x03816348 MOV X0, X8
	0x0381634C MOV X3, X31
	0x03816350 BL 0x33A0C7C
	0x03816354 B 0x381635C
	0x03816358 MOV X20, X31
	0x0381635C LDR X1, [X19 + 0x10]
	0x03816360 ADD X0, X31, 0x0
	0x03816364 MOV X2, X31
	0x03816368 STP X31, X31, [X31]
	0x0381636C BL 0x3757420
	0x03816370 LDP X0, X1, [X31]
	0x03816374 MOV X2, X31
	0x03816378 BL 0x37577E0
	0x0381637C LDR X8, [X23]
	0x03816380 LDR X22, [X19 + 0x20]
	0x03816384 MOV X21, X0
	0x03816388 LDR W9, [X8 + 0xE0]
	0x0381638C CBNZ W9, 0x3816398
	0x03816390 MOV X0, X8
	0x03816394 BL 0x1C16DFC
	0x03816398 ADRP X24, 0x905000
	0x0381639C LDR X24, [X24 + 0xDC0]
	0x038163A0 MOV X0, X22
	0x038163A4 MOV X1, X31
	0x038163A8 MOV X2, X31
	0x038163AC BL 0x3395194
	0x038163B0 TBZ X0, 0x0, 0x38163F4
	0x038163B4 LDR X0, [X19 + 0x30]
	0x038163B8 MOV X1, X31
	0x038163BC BL 0x32277A8
	0x038163C0 TBZ X0, 0x0, 0x38163F4
	0x038163C4 ADRP X8, 0x932000
	0x038163C8 LDR X0, [X23]
	0x038163CC LDR X8, [X8 + 0xE8]
	0x038163D0 LDR W9, [X0 + 0xE0]
	0x038163D4 LDR X22, [X8]
	0x038163D8 CBNZ W9, 0x38163E0
	0x038163DC BL 0x1C16DFC
	0x038163E0 MOV X0, X22
	0x038163E4 MOV X1, X31
	0x038163E8 BL 0x338C698
	0x038163EC MOV X23, X0
	0x038163F0 B 0x38163F8
	0x038163F4 LDR X23, [X19 + 0x20]
	0x038163F8 LDR X0, [X24]
	0x038163FC BL 0x1C16F10
	0x03816400 MOV X1, X31
	0x03816404 MOV X22, X0
	0x03816408 BL 0x33BDD8C
	0x0381640C ADD X0, X31, 0x0
	0x03816410 MOV X1, X21
	0x03816414 MOV X2, X31
	0x03816418 STP X31, X31, [X31]
	0x0381641C BL 0x3757420
	0x03816420 LDR V0, [X31]
	0x03816424 STR X23, [X22 + 0x20]
	0x03816428 MOV X1, X31
	0x0381642C STR V0, [X22 + 0x1]
	0x03816430 LDR X8, [X19 + 0x18]
	0x03816434 STR X8, [X22 + 0x98]
	0x03816438 LDR W8, [X19 + 0x28]
	0x0381643C STR W8, [X22 + 0x38]
	0x03816440 LDR W8, [X19 + 0x2C]
	0x03816444 STR W8, [X22 + 0x3C]
	0x03816448 LDR X0, [X19 + 0x30]
	0x0381644C BL 0x32277A8
	0x03816450 TBZ X0, 0x0, 0x3816460
	0x03816454 MOVI V0.2D, 0x0
	0x03816458 STP V0, V0, [X31 + 0x30]
	0x0381645C B 0x381649C
	0x03816460 LDR X1, [X19 + 0x30]
	0x03816464 ADD X0, X31, 0x20
	0x03816468 MOV X2, X31
	0x0381646C STP X31, X31, [X31 + 0x20]
	0x03816470 BL 0x3757420
	0x03816474 ADRP X8, 0x932000
	0x03816478 LDP X1, X2, [X31 + 0x20]
	0x0381647C LDR X8, [X8 + 0xE0]
	0x03816480 MOVI V0.2D, 0x0
	0x03816484 ADD X0, X31, 0x0
	0x03816488 STP V0, V0, [X31]
	0x0381648C LDR X3, [X8]
	0x03816490 BL 0x2DE897C
	0x03816494 LDP V0, V1, [X31]
	0x03816498 STP V0, V1, [X31 + 0x30]
	0x0381649C LDP V1, V0, [X31 + 0x30]
	0x038164A0 STR X20, [X22 + 0x90]
	0x038164A4 MOV X0, X22
	0x038164A8 LDP X24, X23, [X31 + 0x60]
	0x038164AC STUR V0, [X22 + 0x58]
	0x038164B0 STUR V1, [X22 + 0x48]
	0x038164B4 LDRH W8, [X19 + 0x38]
	0x038164B8 LDP X20, X19, [X31 + 0x80]
	0x038164BC LDR X30, [X31 + 0x50]
	0x038164C0 STRH W8, [X22 + 0x40]
	0x038164C4 LDP X22, X21, [X31 + 0x70]
	0x038164C8 ADD X31, X31, 0x90
	0x038164CC RET
	0x038164D0 MOV X1, X31
	0x038164D4 B 0x33BDD8C
	0x038164D8 STR X30, [X31 - 0x10]!
	0x038164DC LDR X8, [X0]
	0x038164E0 CBZ X8, 0x3816518
	0x038164E4 LDR X8, [X8 + 0x40]
	0x038164E8 CBZ X8, 0x3816518
	0x038164EC LDRSW X9, [X0 + 0x8]
	0x038164F0 LDR W10, [X8 + 0x18]
	0x038164F4 CMP W9, W10
	0x038164F8 B.CS 0x381651C
	0x038164FC MOVZ W10, 0xD0
	0x03816500 MADD X8, X9, X10, X8
	0x03816504 STR X1, [X8 + 0x58]
	0x03816508 LDP X8, X1, [X0]
	0x0381650C MOV X0, X8
	0x03816510 LDR X30, [X31], #0x10
	0x03816514 RET
	0x03816518 BL 0x1C16F20
	0x0381651C BL 0x1C16F28
	0x03816520 SUB X31, X31, 0x40
	0x03816524 STR X30, [X31 + 0x10]
	0x03816528 STP X22, X21, [X31 + 0x20]
	0x0381652C STP X20, X19, [X31 + 0x30]
	0x03816530 MOV X20, X1
	0x03816534 MOV X19, X0
	0x03816538 MOV X0, X1
	0x0381653C MOV X1, X31
	0x03816540 BL 0x32277A8
	0x03816544 TBNZ X0, 0x0, 0x38165A8
	0x03816548 LDR X8, [X19]
	0x0381654C CBZ X8, 0x38165A4
	0x03816550 LDR X21, [X8 + 0x40]
	0x03816554 CBZ X21, 0x38165A4
	0x03816558 LDRSW X22, [X19 + 0x8]
	0x0381655C ADD X0, X31, 0x0
	0x03816560 MOV X1, X20
	0x03816564 MOV X2, X31
	0x03816568 STP X31, X31, [X31]
	0x0381656C BL 0x3757420
	0x03816570 LDR W8, [X21 + 0x18]
	0x03816574 CMP W22, W8
	0x03816578 B.CS 0x3816604
	0x0381657C LDR V0, [X31]

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Subtract X31, X31, 448
	014 Move X23, 0xBCC000
	015 Move X22, 0x935000
	016 Move X21, 0x935000
	017 Move W8, [X23+1245]
	018 Move X22, [X22+2376]
	019 Move X21, [X21+2384]
	020 Move X19, X1
	021 Move X20, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {49}
	026 Move X0, 0x935000
	027 Move X0, [X0+2384]
	028 Call 0x1C17CF4
	029 Move X0, 0x935000
	030 Move X0, [X0+2392]
	031 Call 0x1C17CF4
	032 Move X0, 0x935000
	033 Move X0, [X0+2376]
	034 Call 0x1C17CF4
	035 Move X0, 0x906000
	036 Move X0, [X0+3520]
	037 Call 0x1C17CF4
	038 Move X0, 0x8DF000
	039 Move X0, [X0+440]
	040 Call 0x1C17CF4
	041 Move X0, 0x8E7000
	042 Move X0, [X0+2120]
	043 Call 0x1C17CF4
	044 Move X0, 0x8E8000
	045 Move X0, [X0+2200]
	046 Call 0x1C17CF4
	047 Move W8, 1
	048 Move [X23+1245], W8
	049 Move X0, [X22]
	050 Move [X31+224], X31
	051 Move [X31+232], X31
	052 Call 0x1C17F10
	053 Move X1, [X21]
	054 Move X21, X0
	055 Call Dictionary`2<Object, ControlItem>..ctor, X0
	056 Compare X20, 0
	057 JumpIfEqual {283}
	058 Move X8, [X20+24]
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move X28, 0x935000
	061 Move X22, 0x906000
	062 Move X28, [X28+2392]
	063 Move X22, [X22+3520]
	064 Move X27, X31
	065 And X8, X8, 0
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move W8, 208
	068 NotImplemented "Instruction MADD not yet implemented."
	069 Move V0, [X8+4]
	070 Move X23, [X8+40]
	071 Add X0, X31, 224
	072 Move X1, X31
	073 Add X24, X8, 32
	074 Move [X31+14], V0
	075 Call InternedString.IsEmpty, X0
	076 Move TEMP, X0
	077 And TEMP, TEMP, 1
	078 Compare TEMP, 1
	079 JumpIfEqual {244}
	080 Move X0, [X22]
	081 Move X26, [X31+224]
	082 Move X25, [X31+232]
	083 Move W8, [X0+224]
	084 Compare W8, 0
	085 JumpIfNotEqual {87}
	086 Call 0x1C17DFC
	087 Move X8, 0xBCC000
	088 Move W8, [X8+1326]
	089 Compare W8, 0
	090 JumpIfNotEqual {96}
	091 Move X0, X22
	092 Call 0x1C17CF4
	093 Move X8, 0xBCC000
	094 Move W9, 1
	095 Move [X8+1326], W9
	096 Move X0, [X22]
	097 Move W8, [X0+224]
	098 Compare W8, 0
	099 JumpIfNotEqual {102}
	100 Call 0x1C17DFC
	101 Move X0, [X22]
	102 Move X8, [X0+184]
	103 Move X0, X26
	104 Move X1, X25
	105 Move X4, X31
	106 Move X2, [X8]
	107 Move X3, [X8+8]
	108 Call InternedString.op_Inequality, X0, X1
	109 Move TEMP, X0
	110 And TEMP, TEMP, 1
	111 Compare TEMP, 1
	112 JumpIfNotEqual {244}
	113 Add X0, X31, 224
	114 Move X1, X31
	115 Call InternedString.ToString, X0
	116 Move X8, 0x8E7000
	117 Move X8, [X8+2120]
	118 Move X8, [X8]
	119 Compare X8, 0
	120 JumpIfEqual {283}
	121 Move X25, X0
	122 Move X0, X8
	123 Move W1, W31
	124 Move X2, X31
	125 Call String.get_Chars, X0, X1
	126 Compare X25, 0
	127 JumpIfEqual {283}
	128 Move W1, W0
	129 Move X0, X25
	130 Move X2, X31
	131 Call String.IndexOf, X0, X1
	132 Move X25, [X31+232]
	133 Add W31, W0, 1
	134 Move X8, 0x8E7000
	135 Move X8, [X8+2120]
	136 Move X0, [X8]
	137 Compare X0, 0
	138 JumpIfEqual {283}
	139 Move W1, W31
	140 Move X2, X31
	141 Call String.get_Chars, X0, X1
	142 Compare X25, 0
	143 JumpIfEqual {283}
	144 Move W1, W0
	145 Move X0, X25
	146 Move W2, W31
	147 Move X3, X31
	148 Call String.Split, X0, X1, X2
	149 Compare X0, 0
	150 JumpIfEqual {283}
	151 Move X8, [X0+24]
	152 Move X25, X0
	153 NotImplemented "Instruction CMP not yet implemented."
	154 Move X22, X31
	155 And X8, X8, 0
	156 Add X29, X25, 32
	157 NotImplemented "Instruction CMP not yet implemented."
	158 Move X26, [X29]
	159 Compare X19, 0
	160 JumpIfEqual {183}
	161 Move X9, 0x8DF000
	162 Move W10, [X19+28]
	163 Move X8, [X19+16]
	164 Move X9, [X9+440]
	165 Add W10, W10, 1
	166 Move X9, [X9]
	167 Move [X19+28], W10
	168 Compare X8, 0
	169 JumpIfEqual {283}
	170 NotImplemented "Instruction LDRSW not yet implemented."
	171 Move W11, [X8+24]
	172 NotImplemented "Instruction CMP not yet implemented."
	173 Add W9, W10, 1
	174 Add X8, X8, X10
	175 Move [X19+24], W9
	176 Move [X8+32], X26
	177 Move X8, [X9+32]
	178 Move X0, X19
	179 Move X1, X26
	180 Move X8, [X8+192]
	181 Move X2, [X8+112]
	182 Call List`1<Object>.AddWithResize, X0, X1
	183 Move X8, 0x8E8000
	184 Move X8, [X8+2200]
	185 Move X0, X23
	186 Move X2, X26
	187 Move X3, X31
	188 Move X1, [X8]
	189 Call String.Concat, X0, X1, X2
	190 Move W8, [X20+24]
	191 NotImplemented "Instruction CMP not yet implemented."
	192 Move X23, X0
	193 Add X0, X31, 16
	194 Move W2, 208
	195 Move X1, X24
	196 Call 0x3EB2AC0
	197 Compare X21, 0
	198 JumpIfEqual {283}
	199 Move X26, [X28]
	200 Add X0, X31, 240
	201 Add X1, X31, 16
	202 Move W2, 208
	203 Call 0x3EB2AC0
	204 Add X2, X31, 240
	205 Move X0, X21
	206 Move X1, X23
	207 Move X3, X26
	208 Call Dictionary`2<Object, ControlItem>.set_Item, X0, X1, X2
	209 Move W8, [X25+24]
	210 Add X22, X22, 1
	211 NotImplemented "Instruction CMP not yet implemented."
	212 Move X8, 0x8E8000
	213 Move X8, [X8+2200]
	214 Move X0, X23
	215 Move X2, X25
	216 Move X3, X31
	217 Move X1, [X8]
	218 Call String.Concat, X0, X1, X2
	219 Move X23, X0
	220 Compare X19, 0
	221 JumpIfEqual {244}
	222 Move X9, 0x8DF000
	223 Move X1, [X31+232]
	224 Move W10, [X19+28]
	225 Move X8, [X19+16]
	226 Move X9, [X9+440]
	227 Add W10, W10, 1
	228 Move X9, [X9]
	229 Move [X19+28], W10
	230 Compare X8, 0
	231 JumpIfEqual {283}
	232 NotImplemented "Instruction LDRSW not yet implemented."
	233 Move W11, [X8+24]
	234 NotImplemented "Instruction CMP not yet implemented."
	235 Add W9, W10, 1
	236 Add X8, X8, X10
	237 Move [X19+24], W9
	238 Move [X8+32], X1
	239 Move X8, [X9+32]
	240 Move X0, X19
	241 Move X8, [X8+192]
	242 Move X2, [X8+112]
	243 Call List`1<Object>.AddWithResize, X0, X1
	244 Move W8, [X20+24]
	245 NotImplemented "Instruction CMP not yet implemented."
	246 Add X0, X31, 16
	247 Move W2, 208
	248 Move X1, X24
	249 Call 0x3EB2AC0
	250 Compare X21, 0
	251 JumpIfEqual {283}
	252 Move X24, [X28]
	253 Add X0, X31, 240
	254 Add X1, X31, 16
	255 Move W2, 208
	256 Call 0x3EB2AC0
	257 Add X2, X31, 240
	258 Move X0, X21
	259 Move X1, X23
	260 Move X3, X24
	261 Call Dictionary`2<Object, ControlItem>.set_Item, X0, X1, X2
	262 Move W8, [X20+24]
	263 Move X22, 0x906000
	264 Move X22, [X22+3520]
	265 Add X27, X27, 1
	266 NotImplemented "Instruction CMP not yet implemented."
	267 Move X0, X21
	268 Add X31, X31, 448
	269 Move X20, [X31+80]
	270 Move X19, [X31+88]
	271 Move X22, [X31+64]
	272 Move X21, [X31+72]
	273 Move X24, [X31+48]
	274 Move X23, [X31+56]
	275 Move X26, [X31+32]
	276 Move X25, [X31+40]
	277 Move X28, [X31+16]
	278 Move X27, [X31+24]
	279 Move X29, [X31+96]
	280 Move X30, [X31+104]
	281 Return X0
	282 Call 0x1C17F28
	283 Call 0x1C17F20

Method: System.Boolean VariantsMatch(UnityEngine.InputSystem.Utilities.InternedString expected, UnityEngine.InputSystem.Utilities.InternedString actual)

Disassembly:
	0x03816A48 ADRP X0, 0x908000
	0x03816A4C STP X8, X9, [X31]
	0x03816A50 LDR X0, [X0 + 0x510]
	0x03816A54 BL 0x1C16D08
	0x03816A58 ADD X1, X31, 0x0
	0x03816A5C BL 0x1C16E04
	0x03816A60 LDR X19, [X19]
	0x03816A64 MOV X20, X0
	0x03816A68 MOV X0, X19
	0x03816A6C BL 0x19903C0
	0x03816A70 ADRP X0, 0x934000
	0x03816A74 LDR X19, [X19 + 0x10]
	0x03816A78 LDR X0, [X0 + 0x9A0]
	0x03816A7C BL 0x1C16D08
	0x03816A80 MOV X1, X21
	0x03816A84 MOV X2, X20
	0x03816A88 MOV X3, X19
	0x03816A8C MOV X4, X31
	0x03816A90 BL 0x3227C18
	0x03816A94 MOV X19, X0
	0x03816A98 ADRP X0, 0x8E5000
	0x03816A9C LDR X0, [X0 + 0x578]
	0x03816AA0 BL 0x1C16D08
	0x03816AA4 BL 0x1C16F10
	0x03816AA8 MOV X20, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xBCC000
	007 Move X21, 0x906000
	008 Move W8, [X22+1246]
	009 Move X21, [X21+3520]
	010 Move X19, X3
	011 Move X20, X1
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x906000
	017 Move X0, [X0+3520]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+1246], W8
	021 Move X0, [X21]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X0, X20
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Call InputControlLayout.VariantsMatch, X0, X1
	034 Return X0

Method: System.Boolean VariantsMatch(System.String expected, System.String actual)

Disassembly:
	0x0381691C STR X30, [X31 + 0x10]
	0x03816920 STP X22, X21, [X31 + 0x20]
	0x03816924 STP X20, X19, [X31 + 0x30]
	0x03816928 ADRP X21, 0xBCB000
	0x0381692C LDRB W8, [X21 + 0x4E9]
	0x03816930 MOV X20, X1
	0x03816934 MOV X19, X0
	0x03816938 TBNZ X8, 0x0, 0x3816950
	0x0381693C ADRP X0, 0x934000
	0x03816940 LDR X0, [X0 + 0x708]
	0x03816944 BL 0x1C16CF4
	0x03816948 MOVZ W8, 0x1
	0x0381694C STRB W8, [X21 + 0x4E9]
	0x03816950 CBZ X20, 0x38169E4
	0x03816954 LDR X8, [X20 + 0x18]
	0x03816958 CBZ X8, 0x38169E4
	0x0381695C CMP W8, 0x1
	0x03816960 B.LT 0x3816998
	0x03816964 MOV X22, X31
	0x03816968 ADD X21, X20, 0x20
	0x0381696C CMP X22, W8, UXTW
	0x03816970 B.CS 0x38169FC
	0x03816974 MOV X0, X21
	0x03816978 MOV X1, X31
	0x0381697C BL 0x375F7A0
	0x03816980 TBNZ X0, 0x0, 0x3816A00
	0x03816984 LDR W8, [X20 + 0x18]
	0x03816988 ADD X22, X22, 0x1
	0x0381698C ADD X21, X21, 0x10
	0x03816990 CMP X22, W8, SXTW
	0x03816994 B.LT 0x381696C
	0x03816998 LDR X8, [X19]
	0x0381699C CBZ X8, 0x3816AE4
	0x038169A0 LDR X21, [X8 + 0x40]
	0x038169A4 CBZ X21, 0x3816AE4
	0x038169A8 ADRP X8, 0x934000
	0x038169AC LDRSW X22, [X19 + 0x8]
	0x038169B0 LDR X8, [X8 + 0x708]
	0x038169B4 ADD X0, X31, 0x0
	0x038169B8 MOV X1, X20
	0x038169BC STP X31, X31, [X31]
	0x038169C0 LDR X2, [X8]
	0x038169C4 BL 0x24FCBE8
	0x038169C8 LDR W8, [X21 + 0x18]
	0x038169CC CMP W22, W8
	0x038169D0 B.CS 0x38169FC
	0x038169D4 LDR V0, [X31]
	0x038169D8 MOVZ W8, 0xD0
	0x038169DC MADD X8, X22, X8, X21
	0x038169E0 STUR V0, [X8 + 0x68]
	0x038169E4 LDP X0, X1, [X19]
	0x038169E8 LDP X20, X19, [X31 + 0x30]
	0x038169EC LDP X22, X21, [X31 + 0x20]
	0x038169F0 LDR X30, [X31 + 0x10]
	0x038169F4 ADD X31, X31, 0x40
	0x038169F8 RET
	0x038169FC BL 0x1C16F28
	0x03816A00 STR W22, [X31 + 0x1C]
	0x03816A04 ADRP X0, 0x8DD000
	0x03816A08 LDR X0, [X0 + 0x758]
	0x03816A0C BL 0x1C16D08
	0x03816A10 ADD X1, X31, 0x1C
	0x03816A14 BL 0x1C16E04
	0x03816A18 LDR X20, [X19]
	0x03816A1C MOV X21, X0
	0x03816A20 MOV X0, X20
	0x03816A24 BL 0x19903C0
	0x03816A28 LDR X20, [X20 + 0x40]
	0x03816A2C LDRSW X22, [X19 + 0x8]
	0x03816A30 MOV X0, X20
	0x03816A34 BL 0x19903C0
	0x03816A38 MOV X0, X20
	0x03816A3C MOV X1, X22
	0x03816A40 BL 0x1BD5548
	0x03816A44 LDP X8, X9, [X0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xBCC000
	007 Move W8, [X21+1247]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x906000
	015 Move X0, [X0+3520]
	016 Call 0x1C17CF4
	017 Move X0, 0x8E7000
	018 Move X0, [X0+2120]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+1247], W8
	022 Compare X19, 0
	023 JumpIfEqual {89}
	024 Move X21, 0x906000
	025 Move X21, [X21+3520]
	026 Move X0, [X21]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X22, 0xBCC000
	032 Move W8, [X22+1326]
	033 Compare W8, 0
	034 JumpIfNotEqual {40}
	035 Move X0, 0x906000
	036 Move X0, [X0+3520]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X22+1326], W8
	040 Move X0, [X21]
	041 Move X22, 0x8E7000
	042 Move W8, [X0+224]
	043 Move X22, [X22+2120]
	044 Compare W8, 0
	045 JumpIfNotEqual {48}
	046 Call 0x1C17DFC
	047 Move X0, [X21]
	048 Move X8, [X0+184]
	049 Move X2, X31
	050 Move X0, [X8]
	051 Move X1, [X8+8]
	052 Call InternedString.op_Implicit, X0
	053 Move X8, [X22]
	054 Compare X8, 0
	055 JumpIfEqual {96}
	056 Move X21, X0
	057 Move X0, X8
	058 Move W1, W31
	059 Move X2, X31
	060 Call String.get_Chars, X0, X1
	061 Move W2, W0
	062 Move X0, X21
	063 Move X1, X19
	064 Move X3, X31
	065 Call StringHelpers.CharacterSeparatedListsHaveAtLeastOneCommonElement, X0, X1, X2
	066 Compare X20, 0
	067 JumpIfEqual {89}
	068 Move TEMP, X0
	069 And TEMP, TEMP, 1
	070 Compare TEMP, 1
	071 JumpIfEqual {89}
	072 Move X0, [X22]
	073 Compare X0, 0
	074 JumpIfEqual {96}
	075 Move W1, W31
	076 Move X2, X31
	077 Call String.get_Chars, X0, X1
	078 Move W2, W0
	079 Move X0, X20
	080 Move X1, X19
	081 Move X20, [X31+32]
	082 Move X19, [X31+40]
	083 Move X22, [X31+16]
	084 Move X21, [X31+24]
	085 Move X3, X31
	086 Move X30, [X31+48]
	087 Call StringHelpers.CharacterSeparatedListsHaveAtLeastOneCommonElement, X0, X1, X2
	088 Return X0
	089 Move X20, [X31+32]
	090 Move X19, [X31+40]
	091 Move X22, [X31+16]
	092 Move X21, [X31+24]
	093 Move W0, 1
	094 Move X30, [X31+48]
	095 Return X0
	096 Call 0x1C17F20

Method: System.Void ParseHeaderFieldsFromJson(System.String json, out UnityEngine.InputSystem.Utilities.InternedString name, out UnityEngine.InputSystem.Utilities.InlinedArray`1<UnityEngine.InputSystem.Utilities.InternedString> baseLayouts, out UnityEngine.InputSystem.Layouts.InputDeviceMatcher deviceMatcher)

Disassembly:
	0x03816AAC ADRP X0, 0x934000
	0x03816AB0 LDR X0, [X0 + 0x9A8]
	0x03816AB4 BL 0x1C16D08
	0x03816AB8 MOV X2, X0
	0x03816ABC MOV X0, X20
	0x03816AC0 MOV X1, X19
	0x03816AC4 MOV X3, X31
	0x03816AC8 BL 0x330E16C
	0x03816ACC ADRP X0, 0x934000
	0x03816AD0 LDR X0, [X0 + 0x9B0]
	0x03816AD4 BL 0x1C16D08
	0x03816AD8 MOV X1, X0
	0x03816ADC MOV X0, X20
	0x03816AE0 BL 0x1C16DEC
	0x03816AE4 BL 0x1C16F20
	0x03816AE8 STP X30, X25, [X31 - 0x40]!
	0x03816AEC STP X24, X23, [X31 + 0x10]
	0x03816AF0 STP X22, X21, [X31 + 0x20]
	0x03816AF4 STP X20, X19, [X31 + 0x30]
	0x03816AF8 ADRP X21, 0xBCB000
	0x03816AFC ADRP X23, 0x934000
	0x03816B00 LDRB W8, [X21 + 0x4EA]
	0x03816B04 LDR X23, [X23 + 0x9B8]
	0x03816B08 MOV X20, X1
	0x03816B0C MOV X19, X0
	0x03816B10 TBNZ X8, 0x0, 0x3816B58
	0x03816B14 ADRP X0, 0x934000
	0x03816B18 LDR X0, [X0 + 0x888]
	0x03816B1C BL 0x1C16CF4
	0x03816B20 ADRP X0, 0x932000
	0x03816B24 LDR X0, [X0 + 0x120]
	0x03816B28 BL 0x1C16CF4
	0x03816B2C ADRP X0, 0x934000
	0x03816B30 LDR X0, [X0 + 0x768]
	0x03816B34 BL 0x1C16CF4
	0x03816B38 ADRP X0, 0x934000
	0x03816B3C LDR X0, [X0 + 0x9C0]
	0x03816B40 BL 0x1C16CF4
	0x03816B44 ADRP X0, 0x934000
	0x03816B48 LDR X0, [X0 + 0x9B8]
	0x03816B4C BL 0x1C16CF4
	0x03816B50 MOVZ W8, 0x1
	0x03816B54 STRB W8, [X21 + 0x4EA]
	0x03816B58 LDR X0, [X23]
	0x03816B5C LDR W8, [X0 + 0xE0]
	0x03816B60 CBNZ W8, 0x3816B6C
	0x03816B64 BL 0x1C16DFC
	0x03816B68 LDR X0, [X23]
	0x03816B6C LDR X8, [X0 + 0xB8]
	0x03816B70 ADRP X25, 0x934000
	0x03816B74 ADRP X24, 0x932000
	0x03816B78 LDR X21, [X8 + 0x8]
	0x03816B7C LDR X25, [X25 + 0x888]
	0x03816B80 LDR X24, [X24 + 0x120]
	0x03816B84 CBNZ X21, 0x3816BD8
	0x03816B88 LDR W8, [X0 + 0xE0]
	0x03816B8C CBNZ W8, 0x3816B98
	0x03816B90 BL 0x1C16DFC
	0x03816B94 LDR X0, [X23]
	0x03816B98 ADRP X9, 0x934000
	0x03816B9C LDR X8, [X0 + 0xB8]
	0x03816BA0 LDR X9, [X9 + 0x768]
	0x03816BA4 LDR X22, [X8]
	0x03816BA8 LDR X0, [X9]
	0x03816BAC BL 0x1C16F10
	0x03816BB0 ADRP X8, 0x934000
	0x03816BB4 LDR X8, [X8 + 0x9C0]
	0x03816BB8 MOV X1, X22
	0x03816BBC MOV X3, X31
	0x03816BC0 MOV X21, X0
	0x03816BC4 LDR X2, [X8]
	0x03816BC8 BL 0x2D30464
	0x03816BCC LDR X8, [X23]
	0x03816BD0 LDR X8, [X8 + 0xB8]
	0x03816BD4 STR X21, [X8 + 0x8]
	0x03816BD8 LDR X2, [X25]
	0x03816BDC MOV X0, X20
	0x03816BE0 MOV X1, X21
	0x03816BE4 BL 0x21CEF30
	0x03816BE8 LDR X1, [X24]
	0x03816BEC BL 0x21D55E4
	0x03816BF0 MOV X1, X0
	0x03816BF4 MOV X0, X19
	0x03816BF8 LDP X20, X19, [X31 + 0x30]
	0x03816BFC LDP X22, X21, [X31 + 0x20]
	0x03816C00 LDP X24, X23, [X31 + 0x10]
	0x03816C04 LDP X30, X25, [X31], #0x40
	0x03816C08 B 0x3816918
	0x03816C0C B 0x3816AE8
	0x03816C10 SUB X31, X31, 0x30
	0x03816C14 STP X30, X21, [X31 + 0x10]
	0x03816C18 STP X20, X19, [X31 + 0x20]
	0x03816C1C ADRP X21, 0xBCB000
	0x03816C20 LDRB W8, [X21 + 0x4EB]
	0x03816C24 MOV X20, X1
	0x03816C28 MOV X19, X0
	0x03816C2C TBNZ X8, 0x0, 0x3816C44

ISIL:
	001 Subtract X31, X31, 288
	002 Move [X31+224], X29
	003 Move [X31+232], X30
	004 Move [X31+240], X24
	005 Move [X31+248], X23
	006 Move [X31+256], X22
	007 Move [X31+264], X21
	008 Move [X31+272], X20
	009 Move [X31+280], X19
	010 Move X24, 0xBCC000
	011 Move X23, 0x935000
	012 Move W8, [X24+1248]
	013 Move X23, [X23+2408]
	014 Move X19, X3
	015 Move X20, X2
	016 Move X21, X1
	017 Move X22, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {30}
	022 Move X0, 0x935000
	023 Move X0, [X0+2008]
	024 Call 0x1C17CF4
	025 Move X0, 0x935000
	026 Move X0, [X0+2408]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X24+1248], W8
	030 Move X1, [X23]
	031 NotImplemented "Instruction MOVI not yet implemented."
	032 Add X8, X31, 0
	033 Move X0, X22
	034 Move [X31+192], V0
	035 Move [X31+200], V0
	036 Move [X31+160], V0
	037 Move [X31+168], V0
	038 Move [X31+128], V0
	039 Move [X31+136], V0
	040 Move [X31+7], V0
	041 Call JsonUtility.FromJson, X0
	042 Add X0, X31, 112
	043 Add X1, X31, 0
	044 Move W2, 112
	045 Call 0x3EB2AC0
	046 Move X1, [X31+112]
	047 Add X0, X31, 0
	048 Move X2, X31
	049 Move [X31], X31
	050 Move [X31+8], X31
	051 Call InternedString..ctor, X0, X1
	052 Move V0, [X31]
	053 Move X1, X31
	054 Move [X21], V0
	055 NotImplemented "Instruction MOVI not yet implemented."
	056 Move [X20], V0
	057 Move [X20+8], V0
	058 Move X21, [X31+120]
	059 Move X0, X21
	060 Call String.IsNullOrEmpty, X0
	061 Move TEMP, X0
	062 And TEMP, TEMP, 1
	063 Compare TEMP, 1
	064 JumpIfEqual {78}
	065 Add X0, X31, 0
	066 Move X1, X21
	067 Move X2, X31
	068 Move [X31], X31
	069 Move [X31+8], X31
	070 Call InternedString..ctor, X0, X1
	071 Move X8, 0x935000
	072 Move X1, [X31]
	073 Move X2, [X31+8]
	074 Move X8, [X8+2008]
	075 Move X0, X20
	076 Move X3, [X8]
	077 Call InlinedArray`1<InternedString>.Append, X0, X1
	078 Move X21, [X31+128]
	079 Compare X21, 0
	080 JumpIfEqual {103}
	081 Move X8, [X21+24]
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Move X24, 0x935000
	084 Move X24, [X24+2008]
	085 Move X22, X31
	086 And X8, X8, 0
	087 Add X23, X21, 32
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Move X1, [X23]
	090 Add X0, X31, 0
	091 Move X2, X31
	092 Move [X31], X31
	093 Move [X31+8], X31
	094 Call InternedString..ctor, X0, X1
	095 Move X1, [X31]
	096 Move X2, [X31+8]
	097 Move X3, [X24]
	098 Move X0, X20
	099 Call InlinedArray`1<InternedString>.Append, X0, X1
	100 Move W8, [X21+24]
	101 Add X22, X22, 1
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Add X8, X31, 112
	104 Add X0, X8, 24
	105 Move X1, X31
	106 Call MatcherJson.ToMatcher, X0
	107 Move [X19], X0
	108 Move X20, [X31+272]
	109 Move X19, [X31+280]
	110 Move X22, [X31+256]
	111 Move X21, [X31+264]
	112 Move X24, [X31+240]
	113 Move X23, [X31+248]
	114 Move X29, [X31+224]
	115 Move X30, [X31+232]
	116 Add X31, X31, 288
	117 Return 
	118 Call 0x1C17F28

Method: UnityEngine.InputSystem.Layouts.InputControlLayout/Cache get_cache()

Disassembly:
	0x03816C30 ADRP X0, 0x930000
	0x03816C34 LDR X0, [X0 + 0x3D0]
	0x03816C38 BL 0x1C16CF4
	0x03816C3C MOVZ W8, 0x1
	0x03816C40 STRB W8, [X21 + 0x4EB]
	0x03816C44 MOV X0, X20
	0x03816C48 MOV X1, X31
	0x03816C4C BL 0x32277A8
	0x03816C50 TBNZ X0, 0x0, 0x3816CAC
	0x03816C54 MOV X0, X20
	0x03816C58 MOV X1, X31
	0x03816C5C BL 0x3763948
	0x03816C60 LDR X8, [X19]
	0x03816C64 CBZ X8, 0x3816CC0
	0x03816C68 LDR X20, [X8 + 0x40]
	0x03816C6C CBZ X20, 0x3816CC0
	0x03816C70 ADRP X8, 0x930000
	0x03816C74 LDRSW X21, [X19 + 0x8]
	0x03816C78 LDR X8, [X8 + 0x3D0]
	0x03816C7C MOV X1, X0
	0x03816C80 ADD X0, X31, 0x0
	0x03816C84 STP X31, X31, [X31]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xBCC000
	005 Move X19, 0x906000
	006 Move W8, [X20+1249]
	007 Move X19, [X19+3520]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x906000
	013 Move X0, [X0+3520]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+1249], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Add X0, X8, 80
	027 Move X30, [X31+32]
	028 Return X0

Method: UnityEngine.InputSystem.Layouts.InputControlLayout/CacheRefInstance CacheRef()

Disassembly:
	0x03816C88 LDR X2, [X8]
	0x03816C8C BL 0x24FD3F4
	0x03816C90 LDR W8, [X20 + 0x18]
	0x03816C94 CMP W21, W8
	0x03816C98 B.CS 0x3816CC4
	0x03816C9C LDR V0, [X31]
	0x03816CA0 MOVZ W8, 0xD0
	0x03816CA4 MADD X8, X21, X8, X20
	0x03816CA8 STUR V0, [X8 + 0x88]
	0x03816CAC LDP X0, X1, [X19]
	0x03816CB0 LDP X20, X19, [X31 + 0x20]
	0x03816CB4 LDP X30, X21, [X31 + 0x10]
	0x03816CB8 ADD X31, X31, 0x30
	0x03816CBC RET
	0x03816CC0 BL 0x1C16F20
	0x03816CC4 BL 0x1C16F28
	0x03816CC8 SUB X31, X31, 0x30
	0x03816CCC STP X30, X21, [X31 + 0x10]
	0x03816CD0 STP X20, X19, [X31 + 0x20]
	0x03816CD4 ADRP X21, 0xBCB000
	0x03816CD8 LDRB W8, [X21 + 0x4EC]
	0x03816CDC MOV X20, X1
	0x03816CE0 MOV X19, X0
	0x03816CE4 TBNZ X8, 0x0, 0x3816D08
	0x03816CE8 ADRP X0, 0x934000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xBCC000
	005 Move X19, 0x906000
	006 Move W8, [X20+1250]
	007 Move X19, [X19+3520]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x906000
	013 Move X0, [X0+3520]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+1250], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move W0, 1
	027 Move W9, [X8+88]
	028 Add W9, W9, 1
	029 Move [X8+88], W9
	030 Move X30, [X31+32]
	031 Return X0

Method: System.Void .cctor()

Disassembly:
	0x03816CEC LDR X0, [X0 + 0x890]
	0x03816CF0 BL 0x1C16CF4
	0x03816CF4 ADRP X0, 0x934000
	0x03816CF8 LDR X0, [X0 + 0x898]
	0x03816CFC BL 0x1C16CF4
	0x03816D00 MOVZ W8, 0x1
	0x03816D04 STRB W8, [X21 + 0x4EC]
	0x03816D08 MOV X0, X20
	0x03816D0C MOV X1, X31
	0x03816D10 BL 0x32277A8
	0x03816D14 TBNZ X0, 0x0, 0x3816D80
	0x03816D18 ADRP X21, 0x934000
	0x03816D1C LDR X21, [X21 + 0x890]
	0x03816D20 MOV X0, X20
	0x03816D24 MOV X1, X31
	0x03816D28 BL 0x3763238
	0x03816D2C LDR X1, [X21]
	0x03816D30 BL 0x21D566C
	0x03816D34 LDR X8, [X19]
	0x03816D38 CBZ X8, 0x3816D94
	0x03816D3C LDR X20, [X8 + 0x40]
	0x03816D40 CBZ X20, 0x3816D94
	0x03816D44 ADRP X8, 0x934000
	0x03816D48 LDRSW X21, [X19 + 0x8]
	0x03816D4C LDR X8, [X8 + 0x898]
	0x03816D50 MOV X1, X0
	0x03816D54 ADD X0, X31, 0x0
	0x03816D58 STP X31, X31, [X31]
	0x03816D5C LDR X2, [X8]
	0x03816D60 BL 0x24FCFDC
	0x03816D64 LDR W8, [X20 + 0x18]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xBCC000
	007 Move X20, 0x906000
	008 Move X19, 0x906000
	009 Move W8, [X21+1251]
	010 Move X20, [X20+104]
	011 Move X19, [X19+3520]
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x906000
	017 Move X0, [X0+3520]
	018 Call 0x1C17CF4
	019 Move X0, 0x906000
	020 Move X0, [X0+104]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+1251], W8
	024 Move X1, [X20]
	025 Add X0, X31, 0
	026 Move X2, X31
	027 Move [X31], X31
	028 Move [X31+8], X31
	029 Call InternedString..ctor, X0, X1
	030 Move X8, [X19]
	031 Move V0, [X31]
	032 Move X20, [X31+32]
	033 Move X19, [X31+40]
	034 Move X30, [X31+16]
	035 Move X21, [X31+24]
	036 Move X8, [X8+184]
	037 Move [X8], V0
	038 Add X31, X31, 48
	039 Return 

Method: System.Boolean <MergeLayout>b__77_0(UnityEngine.InputSystem.Layouts.InputControlLayout/ControlItem x)

Disassembly:
	0x03816D68 CMP W21, W8
	0x03816D6C B.CS 0x3816D98
	0x03816D70 LDR V0, [X31]
	0x03816D74 MOVZ W8, 0xD0
	0x03816D78 MADD X8, X21, X8, X20
	0x03816D7C STUR V0, [X8 + 0x98]
	0x03816D80 LDP X0, X1, [X19]
	0x03816D84 LDP X20, X19, [X31 + 0x20]
	0x03816D88 LDP X30, X21, [X31 + 0x10]
	0x03816D8C ADD X31, X31, 0x30
	0x03816D90 RET
	0x03816D94 BL 0x1C16F20
	0x03816D98 BL 0x1C16F28
	0x03816D9C STR X30, [X31 - 0x10]!
	0x03816DA0 LDR X8, [X0]
	0x03816DA4 CBZ X8, 0x3816DDC
	0x03816DA8 LDR X8, [X8 + 0x40]
	0x03816DAC CBZ X8, 0x3816DDC
	0x03816DB0 LDRSW X9, [X0 + 0x8]
	0x03816DB4 LDR W10, [X8 + 0x18]
	0x03816DB8 CMP W9, W10
	0x03816DBC B.CS 0x3816DE0
	0x03816DC0 MOVZ W10, 0xD0
	0x03816DC4 MADD X8, X9, X10, X8
	0x03816DC8 STP X1, X2, [X8 + 0xC0]
	0x03816DCC LDP X8, X1, [X0]
	0x03816DD0 MOV X0, X8
	0x03816DD4 LDR X30, [X31], #0x10
	0x03816DD8 RET

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xBCC000
	007 Move X21, 0x906000
	008 Move W8, [X22+1252]
	009 Move X21, [X21+3520]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x906000
	017 Move X0, [X0+3520]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+1252], W8
	021 Move X0, [X21]
	022 Move X22, [X20+40]
	023 Move X21, [X20+48]
	024 Move X20, [X19+32]
	025 Move X19, [X19+40]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X0, X22
	031 Move X1, X21
	032 Move X2, X20
	033 Move X3, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call InputControlLayout.VariantsMatch, X0, X1
	040 Return X0

