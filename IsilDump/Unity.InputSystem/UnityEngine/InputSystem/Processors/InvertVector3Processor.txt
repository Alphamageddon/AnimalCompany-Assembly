Type: UnityEngine.InputSystem.Processors.InvertVector3Processor

Method: UnityEngine.Vector3 Process(UnityEngine.Vector3 value, UnityEngine.InputSystem.InputControl control)

Disassembly:
	0x03810CBC BL 0x1C16CF4
	0x03810CC0 MOVZ W8, 0x1
	0x03810CC4 STRB W8, [X21 + 0x4C7]
	0x03810CC8 LDUR V0, [X19 + 0x58]
	0x03810CCC LDUR V1, [X19 + 0x48]
	0x03810CD0 LDR X0, [X20]
	0x03810CD4 ADD X1, X31, 0x0
	0x03810CD8 STP V1, V0, [X31]
	0x03810CDC BL 0x1C16E04
	0x03810CE0 LDP X20, X19, [X31 + 0x30]
	0x03810CE4 LDP X30, X21, [X31 + 0x20]
	0x03810CE8 ADD X31, X31, 0x40
	0x03810CEC RET

ISIL:
	001 Move W8, [X0+16]
	002 Move W9, [X0+18]
	003 NotImplemented "Instruction FNEG not yet implemented."
	004 NotImplemented "Instruction CMP not yet implemented."
	005 Move W8, [X0+17]
	006 NotImplemented "Instruction FCSEL not yet implemented."
	007 NotImplemented "Instruction FNEG not yet implemented."
	008 NotImplemented "Instruction CMP not yet implemented."
	009 NotImplemented "Instruction FCSEL not yet implemented."
	010 NotImplemented "Instruction FNEG not yet implemented."
	011 NotImplemented "Instruction CMP not yet implemented."
	012 NotImplemented "Instruction FCSEL not yet implemented."
	013 Return X0

Method: System.String ToString()

Disassembly:
	0x03810CF0 SUB X31, X31, 0x40
	0x03810CF4 STP X30, X21, [X31 + 0x20]
	0x03810CF8 STP X20, X19, [X31 + 0x30]
	0x03810CFC ADRP X21, 0xBD1000
	0x03810D00 ADRP X20, 0x93A000
	0x03810D04 LDRB W8, [X21 + 0x4C8]
	0x03810D08 LDR X20, [X20 + 0x700]
	0x03810D0C MOV X19, X0
	0x03810D10 TBNZ X8, 0x0, 0x3810D28
	0x03810D14 ADRP X0, 0x93A000
	0x03810D18 LDR X0, [X0 + 0x700]
	0x03810D1C BL 0x1C16CF4
	0x03810D20 MOVZ W8, 0x1
	0x03810D24 STRB W8, [X21 + 0x4C8]
	0x03810D28 LDUR V0, [X19 + 0x78]
	0x03810D2C LDUR V1, [X19 + 0x68]
	0x03810D30 LDR X0, [X20]
	0x03810D34 ADD X1, X31, 0x0
	0x03810D38 STP V1, V0, [X31]
	0x03810D3C BL 0x1C16E04
	0x03810D40 LDP X20, X19, [X31 + 0x30]
	0x03810D44 LDP X30, X21, [X31 + 0x20]
	0x03810D48 ADD X31, X31, 0x40
	0x03810D4C RET
	0x03810D50 SUB X31, X31, 0x30
	0x03810D54 STP X30, X21, [X31 + 0x10]
	0x03810D58 STP X20, X19, [X31 + 0x20]
	0x03810D5C ADRP X21, 0xBD1000
	0x03810D60 ADRP X20, 0x93A000
	0x03810D64 LDRB W8, [X21 + 0x4C9]
	0x03810D68 LDR X20, [X20 + 0x708]
	0x03810D6C MOV X19, X0
	0x03810D70 TBNZ X8, 0x0, 0x3810D88
	0x03810D74 ADRP X0, 0x93A000
	0x03810D78 LDR X0, [X0 + 0x708]
	0x03810D7C BL 0x1C16CF4
	0x03810D80 MOVZ W8, 0x1
	0x03810D84 STRB W8, [X21 + 0x4C9]
	0x03810D88 LDR X1, [X19 + 0x88]
	0x03810D8C LDR X2, [X20]
	0x03810D90 ADD X0, X31, 0x0
	0x03810D94 STP X31, X31, [X31]
	0x03810D98 BL 0x24FCBE8
	0x03810D9C LDP X0, X1, [X31]
	0x03810DA0 LDP X20, X19, [X31 + 0x20]
	0x03810DA4 LDP X30, X21, [X31 + 0x10]
	0x03810DA8 ADD X31, X31, 0x30
	0x03810DAC RET
	0x03810DB0 SUB X31, X31, 0x30

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0xBD2000
	009 Move X23, 0x8E4000
	010 Move X22, 0x93B000
	011 Move W8, [X20+1203]
	012 Move X23, [X23+2904]
	013 Move X22, [X22+1728]
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0x8E4000
	020 Move X0, [X0+2904]
	021 Call 0x1C17CF4
	022 Move X0, 0x93B000
	023 Move X0, [X0+1728]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X20+1203], W8
	027 Move W8, [X19+16]
	028 Move X0, [X23]
	029 Add X1, X31, 12
	030 Move [X31+12], W8
	031 Call 0x1C17E04
	032 Move X20, X0
	033 Move W8, [X19+17]
	034 Move X0, [X23]
	035 Add X1, X31, 8
	036 Move [X31+8], W8
	037 Call 0x1C17E04
	038 Move X21, X0
	039 Move W8, [X19+18]
	040 Move X0, [X23]
	041 Add X1, X31, 4
	042 Move [X31+4], W8
	043 Call 0x1C17E04
	044 Move X8, [X22]
	045 Move X3, X0
	046 Move X1, X20
	047 Move X2, X21
	048 Move X0, X8
	049 Move X4, X31
	050 Call String.Format, X0, X1, X2, X3
	051 Move X20, [X31+48]
	052 Move X19, [X31+56]
	053 Move X22, [X31+32]
	054 Move X21, [X31+40]
	055 Move X30, [X31+16]
	056 Move X23, [X31+24]
	057 Add X31, X31, 64
	058 Return X0

Method: System.Void .ctor()

Disassembly:
	0x03810DB4 STP X30, X21, [X31 + 0x10]
	0x03810DB8 STP X20, X19, [X31 + 0x20]
	0x03810DBC ADRP X21, 0xBD1000
	0x03810DC0 ADRP X20, 0x93A000
	0x03810DC4 LDRB W8, [X21 + 0x4CA]
	0x03810DC8 LDR X20, [X20 + 0x710]
	0x03810DCC MOV X19, X0
	0x03810DD0 TBNZ X8, 0x0, 0x3810DE8
	0x03810DD4 ADRP X0, 0x93A000
	0x03810DD8 LDR X0, [X0 + 0x710]
	0x03810DDC BL 0x1C16CF4
	0x03810DE0 MOVZ W8, 0x1
	0x03810DE4 STRB W8, [X21 + 0x4CA]
	0x03810DE8 LDR X1, [X19 + 0x90]
	0x03810DEC LDR X2, [X20]
	0x03810DF0 ADD X0, X31, 0x0
	0x03810DF4 STP X31, X31, [X31]
	0x03810DF8 BL 0x24FEDDC
	0x03810DFC LDP X0, X1, [X31]
	0x03810E00 LDP X20, X19, [X31 + 0x20]
	0x03810E04 LDP X30, X21, [X31 + 0x10]
	0x03810E08 ADD X31, X31, 0x30

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xBD2000
	006 Move X20, 0x93B000
	007 Move W8, [X21+1204]
	008 Move X20, [X20+1680]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x93B000
	015 Move X0, [X0+1680]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1204], W8
	019 Move W8, 257
	020 Move W9, 1
	021 NotImplemented "Instruction STRH not yet implemented."
	022 Move [X19+18], W9
	023 Move X1, [X20]
	024 Move X0, X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Call InputProcessor`1<Vector3>..ctor, X0
	030 Return 

