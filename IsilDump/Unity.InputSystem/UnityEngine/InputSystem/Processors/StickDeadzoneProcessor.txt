Type: UnityEngine.InputSystem.Processors.StickDeadzoneProcessor

Method: System.Single get_minOrDefault()

Disassembly:
	0x038115E4 ADD X31, X31, 0x280
	0x038115E8 LDP X20, X19, [X31 + 0x50]
	0x038115EC LDP X22, X21, [X31 + 0x40]
	0x038115F0 LDP X24, X23, [X31 + 0x30]
	0x038115F4 LDP X26, X25, [X31 + 0x20]
	0x038115F8 LDP X28, X27, [X31 + 0x10]
	0x038115FC LDP X29, X30, [X31], #0x60
	0x03811600 RET
	0x03811604 ADD X8, X24, X26
	0x03811608 ADD X1, X8, 0x20
	0x0381160C ADD X0, X31, 0x0
	0x03811610 MOVZ W2, 0xD0
	0x03811614 STR W25, [X20]
	0x03811618 BL 0x3EB1AC0
	0x0381161C MOVZ W2, 0xD8
	0x03811620 MOV X0, X19
	0x03811624 MOV W1, W31
	0x03811628 BL 0x3EB1B10
	0x0381162C ADRP X8, 0x939000
	0x03811630 LDR X8, [X8 + 0x728]
	0x03811634 ADD X0, X31, 0x1B0
	0x03811638 ADD X1, X31, 0x0
	0x0381163C B 0x38115C8
	0x03811640 BL 0x1C16F28
	0x03811644 ADRP X0, 0x8E7000
	0x03811648 LDR X0, [X0 + 0x528]
	0x0381164C BL 0x1C16D08
	0x03811650 BL 0x1C16F10

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xBD1000
	005 Move W8, [X20+1217]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x90B000
	012 Move X0, [X0+624]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1217], W8
	016 Move V0, [X19+16]
	017 NotImplemented "Instruction FCMP not yet implemented."
	018 Move X8, 0x90B000
	019 Move X8, [X8+624]
	020 Move X0, [X8]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X0, X31
	026 Call InputSystem.get_settings
	027 Compare X0, 0
	028 JumpIfEqual {34}
	029 Move V0, [X0+56]
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X30, [X31+32]
	033 Return V0
	034 Call 0x1C17F20

Method: System.Single get_maxOrDefault()

Disassembly:
	0x03811654 MOV X19, X0
	0x03811658 ADRP X0, 0x8ED000
	0x0381165C LDR X0, [X0 + 0x120]
	0x03811660 BL 0x1C16D08
	0x03811664 MOV X1, X0
	0x03811668 MOV X0, X19
	0x0381166C MOV X2, X31
	0x03811670 BL 0x330E100
	0x03811674 ADRP X0, 0x939000
	0x03811678 LDR X0, [X0 + 0x738]
	0x0381167C BL 0x1C16D08
	0x03811680 MOV X1, X0
	0x03811684 MOV X0, X19
	0x03811688 BL 0x1C16DEC
	0x0381168C LDR W8, [X0 + 0x9C]
	0x03811690 CMP W8, 0x0
	0x03811694 CSET W0, NE
	0x03811698 RET
	0x0381169C STR X30, [X31 - 0x30]!
	0x038116A0 STP X22, X21, [X31 + 0x10]
	0x038116A4 STP X20, X19, [X31 + 0x20]
	0x038116A8 ADRP X22, 0xBD0000
	0x038116AC ADRP X20, 0x939000
	0x038116B0 ADRP X21, 0x8E2000
	0x038116B4 LDRB W8, [X22 + 0x4D1]
	0x038116B8 LDR X20, [X20 + 0x740]
	0x038116BC LDR X21, [X21 + 0x6C0]
	0x038116C0 MOV X19, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xBD1000
	005 Move W8, [X20+1218]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x90B000
	012 Move X0, [X0+624]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1218], W8
	016 Move V0, [X19+20]
	017 NotImplemented "Instruction FCMP not yet implemented."
	018 Move X8, 0x90B000
	019 Move X8, [X8+624]
	020 Move X0, [X8]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X0, X31
	026 Call InputSystem.get_settings
	027 Compare X0, 0
	028 JumpIfEqual {34}
	029 Move V0, [X0+60]
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X30, [X31+32]
	033 Return V0
	034 Call 0x1C17F20

Method: UnityEngine.Vector2 Process(UnityEngine.Vector2 value, UnityEngine.InputSystem.InputControl control = null)

Disassembly:
	0x038116C4 TBNZ X8, 0x0, 0x38116E8
	0x038116C8 ADRP X0, 0x939000
	0x038116CC LDR X0, [X0 + 0x740]
	0x038116D0 BL 0x1C16CF4
	0x038116D4 ADRP X0, 0x8E2000
	0x038116D8 LDR X0, [X0 + 0x6C0]
	0x038116DC BL 0x1C16CF4
	0x038116E0 MOVZ W8, 0x1
	0x038116E4 STRB W8, [X22 + 0x4D1]
	0x038116E8 LDR X0, [X21]
	0x038116EC LDR X19, [X19 + 0x20]
	0x038116F0 LDR X20, [X20]
	0x038116F4 LDR W8, [X0 + 0xE0]
	0x038116F8 CBNZ W8, 0x3811700
	0x038116FC BL 0x1C16DFC
	0x03811700 MOV X0, X20
	0x03811704 MOV X1, X31
	0x03811708 BL 0x338C698
	0x0381170C MOV X1, X0
	0x03811710 MOV X0, X19
	0x03811714 LDP X20, X19, [X31 + 0x20]
	0x03811718 LDP X22, X21, [X31 + 0x10]
	0x0381171C MOV W2, W31
	0x03811720 MOV X3, X31
	0x03811724 LDR X30, [X31], #0x30
	0x03811728 B 0x37693C0
	0x0381172C SUB X31, X31, 0x70
	0x03811730 STR X30, [X31 + 0x20]
	0x03811734 STP X26, X25, [X31 + 0x30]
	0x03811738 STP X24, X23, [X31 + 0x40]
	0x0381173C STP X22, X21, [X31 + 0x50]
	0x03811740 STP X20, X19, [X31 + 0x60]
	0x03811744 ADRP X24, 0xBD0000
	0x03811748 ADRP X23, 0x939000
	0x0381174C ADRP X22, 0x939000
	0x03811750 ADRP X21, 0x939000
	0x03811754 LDRB W8, [X24 + 0x4D2]
	0x03811758 LDR X23, [X23 + 0x748]
	0x0381175C LDR X22, [X22 + 0x750]
	0x03811760 LDR X21, [X21 + 0x758]
	0x03811764 MOV X19, X1
	0x03811768 MOV X20, X0
	0x0381176C TBNZ X8, 0x0, 0x3811808
	0x03811770 ADRP X0, 0x939000
	0x03811774 LDR X0, [X0 + 0x760]
	0x03811778 BL 0x1C16CF4
	0x0381177C ADRP X0, 0x939000
	0x03811780 LDR X0, [X0 + 0x758]
	0x03811784 BL 0x1C16CF4
	0x03811788 ADRP X0, 0x939000
	0x0381178C LDR X0, [X0 + 0x768]
	0x03811790 BL 0x1C16CF4

ISIL:
	001 Move [X31-48], D10
	002 Move [X31+8], D9
	003 Move [X31+16], D8
	004 Move [X31+24], X30
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0xBC9000
	008 Move W8, [X20+2072]
	009 Move V8, V1
	010 Move V9, V0
	011 Move X19, X0
	012 Compare W8, 0
	013 JumpIfNotEqual {19}
	014 Move X0, 0x8E3000
	015 Move X0, [X0+1448]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2072], W8
	019 Move X8, 0x8E3000
	020 Move X8, [X8+1448]
	021 Move X0, [X8]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Multiply S0, S9, S9
	027 Multiply S1, S8, S8
	028 Add S0, S0, S1
	029 NotImplemented "Instruction FSQRT not yet implemented."
	030 Move X0, X19
	031 Move V0, V10
	032 Call StickDeadzoneProcessor.GetDeadZoneAdjustedValue, X0, V0
	033 NotImplemented "Instruction FCMP not yet implemented."
	034 Move X19, 0xBC9000
	035 Move W8, [X19+1935]
	036 Compare W8, 0
	037 JumpIfNotEqual {43}
	038 Move X0, 0x8EB000
	039 Move X0, [X0+3848]
	040 Call 0x1C17CF4
	041 Move W8, 1
	042 Move [X19+1935], W8
	043 Move X8, 0x8EB000
	044 Move X8, [X8+3848]
	045 Move X8, [X8]
	046 Move X8, [X8+184]
	047 Move S0, [X8]
	048 Move S1, [X8+4]
	049 NotImplemented "Instruction FDIV not yet implemented."
	050 Multiply S0, S9, S1
	051 Multiply S1, S8, S1
	052 Move X20, [X31+32]
	053 Move X19, [X31+40]
	054 Move X30, [X31+24]
	055 Move D9, [X31+8]
	056 Move D8, [X31+16]
	057 Move V10, [X31+48]
	058 Return X0

Method: System.Single GetDeadZoneAdjustedValue(System.Single value)

Disassembly:
	0x03811794 ADRP X0, 0x939000
	0x03811798 LDR X0, [X0 + 0x770]
	0x0381179C BL 0x1C16CF4
	0x038117A0 ADRP X0, 0x939000
	0x038117A4 LDR X0, [X0 + 0x778]
	0x038117A8 BL 0x1C16CF4
	0x038117AC ADRP X0, 0x90A000
	0x038117B0 LDR X0, [X0 + 0xDC0]
	0x038117B4 BL 0x1C16CF4
	0x038117B8 ADRP X0, 0x939000
	0x038117BC LDR X0, [X0 + 0x780]
	0x038117C0 BL 0x1C16CF4
	0x038117C4 ADRP X0, 0x939000
	0x038117C8 LDR X0, [X0 + 0x750]
	0x038117CC BL 0x1C16CF4
	0x038117D0 ADRP X0, 0x939000
	0x038117D4 LDR X0, [X0 + 0x748]
	0x038117D8 BL 0x1C16CF4
	0x038117DC ADRP X0, 0x8E2000
	0x038117E0 LDR X0, [X0 + 0x6C0]
	0x038117E4 BL 0x1C16CF4
	0x038117E8 ADRP X0, 0x939000
	0x038117EC LDR X0, [X0 + 0x788]
	0x038117F0 BL 0x1C16CF4
	0x038117F4 ADRP X0, 0x939000
	0x038117F8 LDR X0, [X0 + 0x790]

ISIL:
	001 Move [X31-32], D9
	002 Move [X31-24], D8
	003 Move [X31+16], X30
	004 Move [X31+24], X19
	005 Move V9, V0
	006 Move X19, X0
	007 Call StickDeadzoneProcessor.get_minOrDefault, X0
	008 Move X0, X19
	009 Move V8, V0
	010 Call StickDeadzoneProcessor.get_maxOrDefault, X0
	011 NotImplemented "Instruction FABS not yet implemented."
	012 Move V1, V0
	013 NotImplemented "Instruction FCMP not yet implemented."
	014 Move S0, W31
	015 NotImplemented "Instruction FCMP not yet implemented."
	016 Move S0, -1
	017 Move S3, 1
	018 NotImplemented "Instruction FCSEL not yet implemented."
	019 NotImplemented "Instruction FCMP not yet implemented."
	020 Subtract S2, S2, S8
	021 Subtract S1, S1, S8
	022 NotImplemented "Instruction FDIV not yet implemented."
	023 Multiply S0, S0, S1
	024 Move X30, [X31+16]
	025 Move X19, [X31+24]
	026 Move D9, [X31+32]
	027 Move D8, [X31+40]
	028 Return V0

Method: System.String ToString()

Disassembly:
	0x038117FC BL 0x1C16CF4
	0x03811800 MOVZ W8, 0x1
	0x03811804 STRB W8, [X24 + 0x4D2]
	0x03811808 LDR X0, [X23]
	0x0381180C ADRP X26, 0x90A000
	0x03811810 LDR X26, [X26 + 0xDC0]
	0x03811814 STP X31, X31, [X31]
	0x03811818 BL 0x1C16F10
	0x0381181C LDR X1, [X22]
	0x03811820 MOV X22, X0
	0x03811824 BL 0x3107414
	0x03811828 LDR X2, [X21]
	0x0381182C MOVZ W1, 0x1
	0x03811830 MOV X0, X19
	0x03811834 BL 0x21A89DC
	0x03811838 MOV X21, X0
	0x0381183C STR W31, [X31 + 0x28]
	0x03811840 CBZ X0, 0x3811960
	0x03811844 ADRP X24, 0x8E2000
	0x03811848 LDR X24, [X24 + 0x6C0]
	0x0381184C LDR X23, [X21 + 0x10]
	0x03811850 LDR X0, [X24]
	0x03811854 LDR W8, [X0 + 0xE0]
	0x03811858 CBNZ W8, 0x3811860
	0x0381185C BL 0x1C16DFC
	0x03811860 MOV X0, X23
	0x03811864 MOV X1, X31
	0x03811868 MOV X2, X31
	0x0381186C BL 0x3395F0C
	0x03811870 TBZ X0, 0x0, 0x3811960
	0x03811874 LDR X0, [X26]
	0x03811878 LDR X23, [X21 + 0x10]
	0x0381187C LDR W8, [X0 + 0xE0]
	0x03811880 CBNZ W8, 0x3811888
	0x03811884 BL 0x1C16DFC
	0x03811888 MOV X0, X23
	0x0381188C MOV X1, X22
	0x03811890 MOV X2, X20
	0x03811894 BL 0x3811BD0
	0x03811898 ADRP X8, 0x939000
	0x0381189C LDR X0, [X24]
	0x038118A0 LDR X8, [X8 + 0x770]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xBD1000
	007 Move X22, 0x8E3000
	008 Move X21, 0x93A000
	009 Move W8, [X20+1219]
	010 Move X22, [X22+2704]
	011 Move X21, [X21+1784]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x8E3000
	018 Move X0, [X0+2704]
	019 Call 0x1C17CF4
	020 Move X0, 0x93A000
	021 Move X0, [X0+1784]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+1219], W8
	025 Move X0, X19
	026 Call StickDeadzoneProcessor.get_minOrDefault, X0
	027 Move X0, [X22]
	028 Add X1, X31, 12
	029 Move [X31+12], S0
	030 Call 0x1C17E04
	031 Move X20, X0
	032 Move X0, X19
	033 Call StickDeadzoneProcessor.get_maxOrDefault, X0
	034 Move X0, [X22]
	035 Add X1, X31, 8
	036 Move [X31+8], S0
	037 Call 0x1C17E04
	038 Move X8, [X21]
	039 Move X2, X0
	040 Move X1, X20
	041 Move X3, X31
	042 Move X0, X8
	043 Call String.Format, X0, X1, X2
	044 Move X20, [X31+32]
	045 Move X19, [X31+40]
	046 Move X22, [X31+16]
	047 Move X21, [X31+24]
	048 Move X30, [X31+48]
	049 Return X0

Method: System.Void .ctor()

Disassembly:
	0x038118A4 LDR W9, [X0 + 0xE0]
	0x038118A8 LDR X23, [X8]
	0x038118AC CBNZ W9, 0x38118B4
	0x038118B0 BL 0x1C16DFC
	0x038118B4 MOV X0, X23
	0x038118B8 MOV X1, X31
	0x038118BC BL 0x338C698
	0x038118C0 CBZ X0, 0x3811BB4
	0x038118C4 LDR X8, [X0]
	0x038118C8 LDR X1, [X21 + 0x10]
	0x038118CC LDR X9, [X8 + 0x2A8]
	0x038118D0 LDR X2, [X8 + 0x2B0]
	0x038118D4 BLR X9
	0x038118D8 TBZ X0, 0x0, 0x3811984
	0x038118DC LDR X0, [X21 + 0x10]
	0x038118E0 MOV X1, X31
	0x038118E4 BL 0x33A703C
	0x038118E8 CBZ X0, 0x3811BB4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xBD1000
	006 Move X21, 0x93A000
	007 Move W8, [X20+1220]
	008 Move X21, [X21+1720]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x93A000
	015 Move X0, [X0+1720]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1220], W8
	019 Move X1, [X21]
	020 Move X0, X19
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X30, [X31+32]
	024 Move X21, [X31+40]
	025 Call InputProcessor`1<Vector2>..ctor, X0
	026 Return 

