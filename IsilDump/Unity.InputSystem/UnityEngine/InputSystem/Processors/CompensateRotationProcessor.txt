Type: UnityEngine.InputSystem.Processors.CompensateRotationProcessor

Method: UnityEngine.Quaternion Process(UnityEngine.Quaternion value, UnityEngine.InputSystem.InputControl control)

Disassembly:
	0x03810878 BL 0x1C16E04
	0x0381087C LDR X8, [X21]
	0x03810880 MOV X2, X0
	0x03810884 MOV X1, X20
	0x03810888 MOV X3, X31
	0x0381088C MOV X0, X8
	0x03810890 BL 0x3227BD4
	0x03810894 LDP X20, X19, [X31 + 0x20]
	0x03810898 LDP X22, X21, [X31 + 0x10]
	0x0381089C LDR X30, [X31], #0x30
	0x038108A0 RET
	0x038108A4 STP X30, X21, [X31 - 0x20]!
	0x038108A8 STP X20, X19, [X31 + 0x10]
	0x038108AC ADRP X20, 0xBD1000
	0x038108B0 ADRP X21, 0x93A000
	0x038108B4 LDRB W8, [X20 + 0x4C4]
	0x038108B8 LDR X21, [X21 + 0x6B8]
	0x038108BC MOV X19, X0
	0x038108C0 TBNZ X8, 0x0, 0x38108D8
	0x038108C4 ADRP X0, 0x93A000
	0x038108C8 LDR X0, [X0 + 0x6B8]
	0x038108CC BL 0x1C16CF4
	0x038108D0 MOVZ W8, 0x1
	0x038108D4 STRB W8, [X20 + 0x4C4]
	0x038108D8 LDR X1, [X21]
	0x038108DC MOV X0, X19
	0x038108E0 LDP X20, X19, [X31 + 0x10]
	0x038108E4 LDP X30, X21, [X31], #0x20
	0x038108E8 B 0x2E11034
	0x038108EC LDR X0, [X0 + 0x18]
	0x038108F0 RET
	0x038108F4 STR X1, [X0 + 0x18]
	0x038108F8 RET
	0x038108FC LDR X0, [X0 + 0x20]
	0x03810900 RET
	0x03810904 STR X1, [X0 + 0x20]
	0x03810908 RET
	0x0381090C LDR X0, [X0 + 0x28]
	0x03810910 RET
	0x03810914 STR X1, [X0 + 0x28]
	0x03810918 RET
	0x0381091C LDR X0, [X0 + 0x30]
	0x03810920 RET
	0x03810924 STR X1, [X0 + 0x30]
	0x03810928 RET
	0x0381092C LDR X0, [X0 + 0x38]
	0x03810930 RET
	0x03810934 STR X1, [X0 + 0x38]
	0x03810938 RET
	0x0381093C LDR X0, [X0 + 0x40]
	0x03810940 RET
	0x03810944 STR X1, [X0 + 0x40]
	0x03810948 RET
	0x0381094C LDR X0, [X0 + 0x48]
	0x03810950 RET
	0x03810954 STR X1, [X0 + 0x48]
	0x03810958 RET
	0x0381095C LDR X0, [X0 + 0x50]
	0x03810960 RET
	0x03810964 STR X1, [X0 + 0x50]
	0x03810968 RET
	0x0381096C LDR X0, [X0 + 0x58]
	0x03810970 RET
	0x03810974 STR X1, [X0 + 0x58]
	0x03810978 RET
	0x0381097C LDR X0, [X0 + 0x60]
	0x03810980 RET
	0x03810984 STR X1, [X0 + 0x60]
	0x03810988 RET
	0x0381098C LDR X0, [X0 + 0x68]
	0x03810990 RET
	0x03810994 STR X1, [X0 + 0x68]
	0x03810998 RET
	0x0381099C LDR W0, [X0 + 0x70]
	0x038109A0 RET
	0x038109A4 STR W1, [X0 + 0x70]
	0x038109A8 RET
	0x038109AC LDR W0, [X0 + 0x74]
	0x038109B0 RET
	0x038109B4 STR W1, [X0 + 0x74]
	0x038109B8 RET
	0x038109BC LDR W0, [X0 + 0x78]
	0x038109C0 RET
	0x038109C4 STR W1, [X0 + 0x78]
	0x038109C8 RET
	0x038109CC LDR W0, [X0 + 0x7C]
	0x038109D0 RET
	0x038109D4 STR W1, [X0 + 0x7C]
	0x038109D8 RET
	0x038109DC LDR X0, [X0 + 0x80]
	0x038109E0 RET
	0x038109E4 STR X1, [X0 + 0x80]
	0x038109E8 RET
	0x038109EC LDR X0, [X0 + 0x88]
	0x038109F0 RET
	0x038109F4 STR X1, [X0 + 0x88]
	0x038109F8 RET
	0x038109FC LDRB W0, [X0 + 0x90]
	0x03810A00 RET
	0x03810A04 AND W8, W1, 0x1
	0x03810A08 STRB W8, [X0 + 0x90]
	0x03810A0C RET
	0x03810A10 LDRB W0, [X0 + 0x91]
	0x03810A14 RET
	0x03810A18 AND W8, W1, 0x1
	0x03810A1C STRB W8, [X0 + 0x91]
	0x03810A20 RET
	0x03810A24 LDRB W0, [X0 + 0x92]
	0x03810A28 RET
	0x03810A2C AND W8, W1, 0x1
	0x03810A30 STRB W8, [X0 + 0x92]
	0x03810A34 RET
	0x03810A38 LDR X0, [X0 + 0x98]
	0x03810A3C RET
	0x03810A40 STR X1, [X0 + 0x98]
	0x03810A44 RET
	0x03810A48 LDR X0, [X0 + 0xA0]
	0x03810A4C RET
	0x03810A50 STR X1, [X0 + 0xA0]
	0x03810A54 RET
	0x03810A58 LDR X0, [X0 + 0xA8]
	0x03810A5C RET
	0x03810A60 STR X1, [X0 + 0xA8]
	0x03810A64 RET
	0x03810A68 MOVI V0.2D, 0xFFFFFFFFFFFFFFFF
	0x03810A6C MOV X1, X31
	0x03810A70 STR D0, [X0 + 0x70]
	0x03810A74 B 0x3C303D4
	0x03810A78 STP X30, X21, [X31 - 0x20]!
	0x03810A7C STP X20, X19, [X31 + 0x10]
	0x03810A80 LDR X8, [X2 + 0x8]
	0x03810A84 STP X1, X2, [X0 + 0x20]

ISIL:
	001 Move [X31-96], D15
	002 Move [X31-88], D14
	003 Move [X31+16], D13
	004 Move [X31+24], D12
	005 Move [X31+32], D11
	006 Move [X31+40], D10
	007 Move [X31+48], D9
	008 Move [X31+56], D8
	009 Move [X31+64], X30
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X19, 0xBD2000
	013 Move X20, 0x90C000
	014 Move W8, [X19+1196]
	015 Move X20, [X20+624]
	016 Move V8, V3
	017 Move V9, V2
	018 Move V10, V1
	019 Move V11, V0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {35}
	024 Move X0, 0x90C000
	025 Move X0, [X0+3792]
	026 Call 0x1C17CF4
	027 Move X0, 0x90C000
	028 Move X0, [X0+3784]
	029 Call 0x1C17CF4
	030 Move X0, 0x90C000
	031 Move X0, [X0+624]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X19+1196], W8
	035 Move X0, [X20]
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {40}
	039 Call 0x1C17DFC
	040 Move X0, X31
	041 Call InputSystem.get_settings
	042 Compare X0, 0
	043 JumpIfEqual {149}
	044 Move W8, [X0+44]
	045 Compare W8, 0
	046 JumpIfEqual {87}
	047 Move X20, 0xBC9000
	048 Move X19, 0x90C000
	049 Move W8, [X20+1939]
	050 Move X19, [X19+3784]
	051 Compare W8, 0
	052 JumpIfNotEqual {58}
	053 Move X0, 0x8E5000
	054 Move X0, [X0+1448]
	055 Call 0x1C17CF4
	056 Move W8, 1
	057 Move [X20+1939], W8
	058 Move X8, [X19]
	059 Move X8, [X8+184]
	060 Move X19, [X8]
	061 Compare X19, 0
	062 JumpIfEqual {149}
	063 Move X8, 0x8E5000
	064 Move X8, [X8+1448]
	065 Move X11, 0x90C000
	066 Move X9, [X8]
	067 Move X8, [X19]
	068 Move X10, [X9+184]
	069 Move X11, [X11+3792]
	070 NotImplemented "Instruction LDRH not yet implemented."
	071 Move S14, [X10]
	072 Move S15, [X10+4]
	073 Move S12, [X10+8]
	074 Move S13, [X10+12]
	075 Move X1, [X11]
	076 Compare X9, 0
	077 JumpIfEqual {84}
	078 Move X10, [X8+176]
	079 Add X10, X10, 8
	080 NotImplemented "Instruction LDUR not yet implemented."
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Subtract X9, X9, 1
	083 Add X10, X10, 16
	084 Move W2, 26
	085 Move X0, X19
	086 Call 0x1C5D788
	087 Move V0, V11
	088 Move V1, V10
	089 Move V2, V9
	090 Move W9, [X10]
	091 Add W9, W9, 26
	092 Add X8, X8, W9
	093 Add X0, X8, 312
	094 Move X8, [X0]
	095 Move X1, [X0+8]
	096 Move X0, X19
	097 NotImplemented "Instruction BLR not yet implemented."
	098 Subtract W8, W0, 2
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Move X9, -46628864
	101 Move X10, -46628864
	102 Add X9, X9, 2488
	103 Add X10, X10, 2500
	104 Move V12, [X9]
	105 Move V13, [X10]
	106 Move S14, W31
	107 Move S15, W31
	108 Multiply S0, S8, S14
	109 Multiply S1, S11, S13
	110 Multiply S4, S8, S15
	111 Multiply S5, S10, S13
	112 Multiply S17, S11, S14
	113 Multiply S20, S8, S12
	114 Multiply S21, S8, S13
	115 Multiply S22, S9, S13
	116 Multiply S2, S10, S12
	117 Multiply S6, S9, S14
	118 Multiply S16, S11, S15
	119 Multiply S19, S10, S15
	120 Add S0, S0, S1
	121 Add S1, S4, S5
	122 Add S4, S20, S22
	123 Subtract S5, S21, S17
	124 Multiply S3, S9, S15
	125 Multiply S7, S11, S12
	126 Multiply S18, S10, S14
	127 Multiply S23, S9, S12
	128 Add S0, S2, S0
	129 Add S1, S6, S1
	130 Add S2, S16, S4
	131 Subtract S4, S5, S19
	132 Subtract S0, S0, S3
	133 Subtract S1, S1, S7
	134 Subtract S2, S2, S18
	135 Subtract S8, S4, S23
	136 Move V3, V8
	137 Move X20, [X31+80]
	138 Move X19, [X31+88]
	139 Move X30, [X31+64]
	140 Move D9, [X31+48]
	141 Move D8, [X31+56]
	142 Move D11, [X31+32]
	143 Move D10, [X31+40]
	144 Move D13, [X31+16]
	145 Move D12, [X31+24]
	146 Move D15, [X31+96]
	147 Move D14, [X31+104]
	148 Return X0
	149 Call 0x1C17F20

Method: System.String ToString()

Disassembly:
	0x03810A88 MOV X19, X0
	0x03810A8C MOV X20, X1
	0x03810A90 STR X8, [X0 + 0x10]
	0x03810A94 LDRB W21, [X2 + 0x52]
	0x03810A98 STR X0, [X0 + 0x40]
	0x03810A9C MOV X0, X2
	0x03810AA0 BL 0x1C16D84
	0x03810AA4 TBZ X0, 0x0, 0x3810ABC
	0x03810AA8 CMP W21, 0x3
	0x03810AAC B.NE 0x3810AD8
	0x03810AB0 ADRP X8, 0xFFFFFFFFFE3C5000
	0x03810AB4 ADD X8, X8, 0x2E8
	0x03810AB8 B 0x3810ACC
	0x03810ABC CMP W21, 0x2
	0x03810AC0 B.NE 0x3810AD4
	0x03810AC4 ADRP X8, 0xFFFFFFFFFE3C5000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xBD2000
	005 Move X20, 0x93B000
	006 Move W8, [X19+1197]
	007 Move X20, [X20+1688]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x93B000
	013 Move X0, [X0+1688]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+1197], W8
	017 Move X0, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Return X0

Method: UnityEngine.InputSystem.InputProcessor/CachingPolicy get_cachingPolicy()

Disassembly:
	0x03810AC8 ADD X8, X8, 0x2D0
	0x03810ACC STR X8, [X19 + 0x18]

ISIL:
	001 Move W0, 1
	002 Return X0

Method: System.Void .ctor()

Disassembly:
	0x03810AD0 B 0x3810AE8
	0x03810AD4 CBZ X20, 0x3810B00
	0x03810AD8 LDR X8, [X19 + 0x10]
	0x03810ADC LDR X9, [X19 + 0x20]
	0x03810AE0 STR X8, [X19 + 0x18]
	0x03810AE4 STR X9, [X19 + 0x40]
	0x03810AE8 ADRP X8, 0xFFFFFFFFFE3C5000
	0x03810AEC ADD X8, X8, 0x268
	0x03810AF0 STR X8, [X19 + 0x38]
	0x03810AF4 LDP X20, X19, [X31 + 0x10]
	0x03810AF8 LDP X30, X21, [X31], #0x20
	0x03810AFC RET
	0x03810B00 ADRP X1, 0xFFFFFFFFFD30B000
	0x03810B04 ADD X1, X1, 0xEE3
	0x03810B08 MOV X0, X31
	0x03810B0C BL 0x1C16F3C
	0x03810B10 MOV X1, X31
	0x03810B14 BL 0x1C16DEC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xBD2000
	006 Move X21, 0x93B000
	007 Move W8, [X20+1198]
	008 Move X21, [X21+1696]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x93B000
	015 Move X0, [X0+1696]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1198], W8
	019 Move X1, [X21]
	020 Move X0, X19
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X30, [X31+32]
	024 Move X21, [X31+40]
	025 Call InputProcessor`1<Quaternion>..ctor, X0
	026 Return 

