Type: UnityEngine.InputSystem.Processors.ScaleVector3Processor

Method: UnityEngine.Vector3 Process(UnityEngine.Vector3 value, UnityEngine.InputSystem.InputControl control)

Disassembly:
	0x038114B0 LDR X24, [X22 + 0x90]
	0x038114B4 CMP W26, W8
	0x038114B8 CSEL W23, W26, W31, LT
	0x038114BC CBNZ X24, 0x38114CC
	0x038114C0 B 0x3811580
	0x038114C4 MOV W23, W31

ISIL:
	001 Move S3, [X0+16]
	002 Move S4, [X0+20]
	003 Move V5, [X0+24]
	004 Multiply S0, S0, S3
	005 Multiply S1, S1, S4
	006 Multiply S2, S2, S5
	007 Return X0

Method: System.String ToString()

Disassembly:
	0x038114C8 MOV W25, W31
	0x038114CC MOV X26, X31
	0x038114D0 MOV X27, X31
	0x038114D4 LDR W8, [X24 + 0x18]
	0x038114D8 CMP X27, W8, SXTW
	0x038114DC B.GE 0x3811584
	0x038114E0 CMP X27, X8
	0x038114E4 B.CS 0x3811640
	0x038114E8 ADD X28, X24, X26
	0x038114EC LDP X0, X1, [X28 + 0x20]
	0x038114F0 MOV X2, X31
	0x038114F4 BL 0x37577E0
	0x038114F8 MOVZ W2, 0x3
	0x038114FC MOV X1, X21
	0x03811500 MOV X3, X31
	0x03811504 BL 0x322590C
	0x03811508 CBZ W0, 0x3811598
	0x0381150C CMP W23, 0x1
	0x03811510 B.LT 0x3811570
	0x03811514 LDR W8, [X28 + 0xBC]
	0x03811518 CBZ W8, 0x3811570
	0x0381151C ADD X28, X24, X26
	0x03811520 LDR V0, [X28 + 0x2]
	0x03811524 ADD X0, X31, 0x1A0
	0x03811528 MOV X1, X31
	0x0381152C STR V0, [X31 + 0x1A]
	0x03811530 BL 0x375F788
	0x03811534 CMP W23, W0
	0x03811538 B.NE 0x3811570
	0x0381153C LDR V0, [X28 + 0x2]
	0x03811540 ADD X0, X31, 0x1A0
	0x03811544 MOV X1, X31
	0x03811548 STR V0, [X31 + 0x1A]
	0x0381154C BL 0x37565F4
	0x03811550 MOVZ W5, 0x3
	0x03811554 MOV W1, W31
	0x03811558 MOV X2, X21
	0x0381155C MOV W3, W31
	0x03811560 MOV W4, W23
	0x03811564 MOV X6, X31
	0x03811568 BL 0x3225DC8
	0x0381156C CBZ W0, 0x3811604
	0x03811570 LDR X24, [X22 + 0x90]
	0x03811574 ADD X27, X27, 0x1
	0x03811578 ADD X26, X26, 0xD0
	0x0381157C CBNZ X24, 0x38114D4
	0x03811580 BL 0x1C16F20
	0x03811584 MOVZ W2, 0xD8
	0x03811588 MOV X0, X19

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0xBD1000
	009 Move X23, 0x8E3000
	010 Move X22, 0x93A000
	011 Move W8, [X20+1215]
	012 Move X23, [X23+2704]
	013 Move X22, [X22+1776]
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0x8E3000
	020 Move X0, [X0+2704]
	021 Call 0x1C17CF4
	022 Move X0, 0x93A000
	023 Move X0, [X0+1776]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X20+1215], W8
	027 Move V0, [X19+16]
	028 Move X0, [X23]
	029 Add X1, X31, 12
	030 Move [X31+12], S0
	031 Call 0x1C17E04
	032 Move X20, X0
	033 Move V0, [X19+20]
	034 Move X0, [X23]
	035 Add X1, X31, 8
	036 Move [X31+8], S0
	037 Call 0x1C17E04
	038 Move X21, X0
	039 Move V0, [X19+24]
	040 Move X0, [X23]
	041 Add X1, X31, 4
	042 Move [X31+4], S0
	043 Call 0x1C17E04
	044 Move X8, [X22]
	045 Move X3, X0
	046 Move X1, X20
	047 Move X2, X21
	048 Move X0, X8
	049 Move X4, X31
	050 Call String.Format, X0, X1, X2, X3
	051 Move X20, [X31+48]
	052 Move X19, [X31+56]
	053 Move X22, [X31+32]
	054 Move X21, [X31+40]
	055 Move X30, [X31+16]
	056 Move X23, [X31+24]
	057 Add X31, X31, 64
	058 Return X0

Method: System.Void .ctor()

Disassembly:
	0x0381158C MOV W1, W31
	0x03811590 BL 0x3EB1B10
	0x03811594 B 0x38115E4
	0x03811598 ADD X1, X28, 0x20
	0x0381159C ADD X0, X31, 0xD0
	0x038115A0 MOVZ W2, 0xD0
	0x038115A4 BL 0x3EB1AC0
	0x038115A8 MOVZ W2, 0xD8
	0x038115AC MOV X0, X19
	0x038115B0 MOV W1, W31
	0x038115B4 BL 0x3EB1B10
	0x038115B8 ADRP X8, 0x939000
	0x038115BC LDR X8, [X8 + 0x728]
	0x038115C0 ADD X0, X31, 0x1B0
	0x038115C4 ADD X1, X31, 0xD0
	0x038115C8 LDR X20, [X8]
	0x038115CC MOVZ W2, 0xD0
	0x038115D0 BL 0x3EB1AC0
	0x038115D4 ADD X1, X31, 0x1B0
	0x038115D8 MOV X0, X19
	0x038115DC MOV X2, X20
	0x038115E0 BL 0x243E200

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xBD1000
	006 Move X20, 0x93A000
	007 Move W8, [X21+1216]
	008 Move X20, [X20+1680]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x93A000
	015 Move X0, [X0+1680]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1216], W8
	019 Move V0, 0
	020 Move W8, 0x3F800000
	021 Move [X19+16], D0
	022 Move [X19+24], W8
	023 Move X1, [X20]
	024 Move X0, X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Call InputProcessor`1<Vector3>..ctor, X0
	030 Return 

