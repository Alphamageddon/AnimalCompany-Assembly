Type: UnityEngine.InputSystem.Processors.ScaleVector2Processor

Method: UnityEngine.Vector2 Process(UnityEngine.Vector2 value, UnityEngine.InputSystem.InputControl control)

Disassembly:
	0x038113B0 STP X24, X23, [X31 + 0x30]
	0x038113B4 STP X22, X21, [X31 + 0x40]
	0x038113B8 STP X20, X19, [X31 + 0x50]
	0x038113BC SUB X31, X31, 0x280

ISIL:
	001 Move S2, [X0+16]
	002 Move S3, [X0+20]
	003 Multiply S0, S0, S2
	004 Multiply S1, S1, S3
	005 Return X0

Method: System.String ToString()

Disassembly:
	0x038113C0 ADRP X23, 0xBD0000
	0x038113C4 LDRB W9, [X23 + 0x4D0]
	0x038113C8 MOV X20, X2
	0x038113CC MOV X21, X1
	0x038113D0 MOV X22, X0
	0x038113D4 MOV X19, X8
	0x038113D8 TBNZ X9, 0x0, 0x38113FC
	0x038113DC ADRP X0, 0x8E4000
	0x038113E0 LDR X0, [X0 + 0x170]
	0x038113E4 BL 0x1C16CF4
	0x038113E8 ADRP X0, 0x939000
	0x038113EC LDR X0, [X0 + 0x728]
	0x038113F0 BL 0x1C16CF4
	0x038113F4 MOVZ W8, 0x1
	0x038113F8 STRB W8, [X23 + 0x4D0]
	0x038113FC MOV X0, X21
	0x03811400 MOV X1, X31
	0x03811404 STP X31, X31, [X31 + 0x1A0]
	0x03811408 BL 0x32277A8
	0x0381140C TBNZ X0, 0x0, 0x3811644
	0x03811410 MOVN W8, 0x0
	0x03811414 STR W8, [X20]
	0x03811418 LDR X24, [X22 + 0x90]
	0x0381141C CBZ X24, 0x3811584
	0x03811420 CBZ X21, 0x3811580
	0x03811424 LDR W26, [X21 + 0x10]
	0x03811428 CMP W26, 0x1
	0x0381142C B.LT 0x38114C4
	0x03811430 ADRP X27, 0x8E4000
	0x03811434 LDR X27, [X27 + 0x170]
	0x03811438 MOV W25, W31
	0x0381143C MOVZ W28, 0xA
	0x03811440 SUB W23, W26, 0x1
	0x03811444 MOV X0, X21
	0x03811448 MOV W1, W23
	0x0381144C MOV X2, X31
	0x03811450 BL 0x3222A1C
	0x03811454 LDR X8, [X27]
	0x03811458 MOV W24, W0
	0x0381145C LDR W9, [X8 + 0xE0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xBD1000
	007 Move X22, 0x8E3000
	008 Move X21, 0x93A000
	009 Move W8, [X20+1213]
	010 Move X22, [X22+2704]
	011 Move X21, [X21+1768]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x8E3000
	018 Move X0, [X0+2704]
	019 Call 0x1C17CF4
	020 Move X0, 0x93A000
	021 Move X0, [X0+1768]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+1213], W8
	025 Move V0, [X19+16]
	026 Move X0, [X22]
	027 Add X1, X31, 12
	028 Move [X31+12], S0
	029 Call 0x1C17E04
	030 Move X20, X0
	031 Move V0, [X19+20]
	032 Move X0, [X22]
	033 Add X1, X31, 8
	034 Move [X31+8], S0
	035 Call 0x1C17E04
	036 Move X8, [X21]
	037 Move X2, X0
	038 Move X1, X20
	039 Move X3, X31
	040 Move X0, X8
	041 Call String.Format, X0, X1, X2
	042 Move X20, [X31+32]
	043 Move X19, [X31+40]
	044 Move X22, [X31+16]
	045 Move X21, [X31+24]
	046 Move X30, [X31+48]
	047 Return X0

Method: System.Void .ctor()

Disassembly:
	0x03811460 CBNZ W9, 0x381146C
	0x03811464 MOV X0, X8
	0x03811468 BL 0x1C16DFC
	0x0381146C MOV W0, W24
	0x03811470 MOV X1, X31
	0x03811474 BL 0x33141B4
	0x03811478 TBZ X0, 0x0, 0x38114AC
	0x0381147C MOV X0, X21
	0x03811480 MOV W1, W23
	0x03811484 MOV X2, X31
	0x03811488 MUL W24, W25, W28
	0x0381148C BL 0x3222A1C
	0x03811490 ADD W8, W24, W0, UXTH
	0x03811494 ADD W9, W23, 0x1
	0x03811498 CMP W9, 0x2
	0x0381149C SUB W25, W8, 0x30
	0x038114A0 MOV W26, W23
	0x038114A4 B.GE 0x3811440
	0x038114A8 MOV W26, W31
	0x038114AC LDR W8, [X21 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xBD1000
	006 Move X20, 0x93A000
	007 Move W8, [X21+1214]
	008 Move X20, [X20+1720]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x93A000
	015 Move X0, [X0+1720]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1214], W8
	019 Move V0, 0
	020 Move [X19+16], D0
	021 Move X1, [X20]
	022 Move X0, X19
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 Move X21, [X31+40]
	027 Call InputProcessor`1<Vector2>..ctor, X0
	028 Return 

