Type: UnityEngine.InputSystem.Processors.ScaleProcessor

Method: System.Single Process(System.Single value, UnityEngine.InputSystem.InputControl control)

Disassembly:
	0x038112D0 MOV W1, W31
	0x038112D4 BL 0x3EB1B10
	0x038112D8 B 0x3811340

ISIL:
	001 Move V1, [X0+16]
	002 Multiply S0, S1, S0
	003 Return V0

Method: System.String ToString()

Disassembly:
	0x038112DC LDR X8, [X21 + 0x90]
	0x038112E0 CBZ X8, 0x38112C4
	0x038112E4 LDR W9, [X8 + 0x18]
	0x038112E8 CMP W24, W9
	0x038112EC B.CS 0x3811358
	0x038112F0 ADD X8, X8, X23
	0x038112F4 ADD X1, X8, 0x20
	0x038112F8 ADD X0, X31, 0x0
	0x038112FC MOVZ W2, 0xD0
	0x03811300 BL 0x3EB1AC0
	0x03811304 MOVZ W2, 0xD8
	0x03811308 MOV X0, X19
	0x0381130C MOV W1, W31
	0x03811310 BL 0x3EB1B10
	0x03811314 ADRP X8, 0x939000
	0x03811318 LDR X8, [X8 + 0x728]
	0x0381131C ADD X0, X31, 0xD0
	0x03811320 ADD X1, X31, 0x0
	0x03811324 MOVZ W2, 0xD0
	0x03811328 LDR X20, [X8]
	0x0381132C BL 0x3EB1AC0
	0x03811330 ADD X1, X31, 0xD0
	0x03811334 MOV X0, X19
	0x03811338 MOV X2, X20
	0x0381133C BL 0x243E200
	0x03811340 LDP X20, X19, [X31 + 0x1D0]
	0x03811344 LDP X22, X21, [X31 + 0x1C0]
	0x03811348 LDP X24, X23, [X31 + 0x1B0]
	0x0381134C LDP X29, X30, [X31 + 0x1A0]
	0x03811350 ADD X31, X31, 0x1E0
	0x03811354 RET
	0x03811358 BL 0x1C16F28
	0x0381135C ADRP X0, 0x8E7000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xBD1000
	007 Move X21, 0x8E3000
	008 Move X20, 0x93A000
	009 Move W8, [X22+1211]
	010 Move X21, [X21+2704]
	011 Move X20, [X20+1760]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x8E3000
	018 Move X0, [X0+2704]
	019 Call 0x1C17CF4
	020 Move X0, 0x93A000
	021 Move X0, [X0+1760]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+1211], W8
	025 Move V0, [X19+16]
	026 Move X0, [X21]
	027 Add X1, X31, 12
	028 Move [X31+12], S0
	029 Call 0x1C17E04
	030 Move X8, [X20]
	031 Move X1, X0
	032 Move X2, X31
	033 Move X0, X8
	034 Call String.Format, X0, X1
	035 Move X20, [X31+32]
	036 Move X19, [X31+40]
	037 Move X22, [X31+16]
	038 Move X21, [X31+24]
	039 Move X30, [X31+48]
	040 Return X0

Method: System.Void .ctor()

Disassembly:
	0x03811360 LDR X0, [X0 + 0x528]
	0x03811364 BL 0x1C16D08
	0x03811368 BL 0x1C16F10
	0x0381136C MOV X19, X0
	0x03811370 ADRP X0, 0x8ED000
	0x03811374 LDR X0, [X0 + 0x120]
	0x03811378 BL 0x1C16D08
	0x0381137C MOV X1, X0
	0x03811380 MOV X0, X19
	0x03811384 MOV X2, X31
	0x03811388 BL 0x330E100
	0x0381138C ADRP X0, 0x939000
	0x03811390 LDR X0, [X0 + 0x730]
	0x03811394 BL 0x1C16D08
	0x03811398 MOV X1, X0
	0x0381139C MOV X0, X19
	0x038113A0 BL 0x1C16DEC
	0x038113A4 STP X29, X30, [X31 - 0x60]!
	0x038113A8 STP X28, X27, [X31 + 0x10]
	0x038113AC STP X26, X25, [X31 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xBD1000
	006 Move X20, 0x93A000
	007 Move W8, [X21+1212]
	008 Move X20, [X20+1656]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x93A000
	015 Move X0, [X0+1656]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1212], W8
	019 Move W8, 0x3F800000
	020 Move [X19+16], W8
	021 Move X1, [X20]
	022 Move X0, X19
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 Move X21, [X31+40]
	027 Call InputProcessor`1<Single>..ctor, X0
	028 Return 

