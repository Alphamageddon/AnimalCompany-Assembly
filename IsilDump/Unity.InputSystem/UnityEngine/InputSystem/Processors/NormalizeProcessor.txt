Type: UnityEngine.InputSystem.Processors.NormalizeProcessor

Method: System.Single Process(System.Single value, UnityEngine.InputSystem.InputControl control)

Disassembly:
	0x03810E0C RET
	0x03810E10 STR X30, [X31 - 0x20]!
	0x03810E14 STP X20, X19, [X31 + 0x10]

ISIL:
	001 Move S1, [X0+16]
	002 Move S2, [X0+20]
	003 Move V3, [X0+24]

Method: System.Single Normalize(System.Single value, System.Single min, System.Single max, System.Single zero)

Disassembly:
	0x03810E18 ADRP X20, 0xBD1000
	0x03810E1C LDRB W8, [X20 + 0x4CB]
	0x03810E20 MOV X19, X0
	0x03810E24 TBNZ X8, 0x0, 0x3810E3C
	0x03810E28 ADRP X0, 0x8ED000
	0x03810E2C LDR X0, [X0 + 0x170]
	0x03810E30 BL 0x1C16CF4
	0x03810E34 MOVZ W8, 0x1
	0x03810E38 STRB W8, [X20 + 0x4CB]
	0x03810E3C LDRB W0, [X19 + 0x41]
	0x03810E40 LDP X20, X19, [X31 + 0x10]
	0x03810E44 LDR X30, [X31], #0x20
	0x03810E48 RET
	0x03810E4C STR X30, [X31 - 0x30]!
	0x03810E50 STP X22, X21, [X31 + 0x10]
	0x03810E54 STP X20, X19, [X31 + 0x20]
	0x03810E58 ADRP X22, 0xBD1000
	0x03810E5C ADRP X20, 0x938000
	0x03810E60 ADRP X21, 0x8E3000
	0x03810E64 LDRB W8, [X22 + 0x4CC]
	0x03810E68 LDR X20, [X20 + 0xE8]
	0x03810E6C LDR X21, [X21 + 0x6C0]
	0x03810E70 MOV X19, X0
	0x03810E74 TBNZ X8, 0x0, 0x3810E98
	0x03810E78 ADRP X0, 0x938000
	0x03810E7C LDR X0, [X0 + 0xE8]
	0x03810E80 BL 0x1C16CF4
	0x03810E84 ADRP X0, 0x8E3000
	0x03810E88 LDR X0, [X0 + 0x6C0]
	0x03810E8C BL 0x1C16CF4
	0x03810E90 MOVZ W8, 0x1
	0x03810E94 STRB W8, [X22 + 0x4CC]
	0x03810E98 LDR X0, [X21]
	0x03810E9C LDR X20, [X20]
	0x03810EA0 LDR W8, [X0 + 0xE0]
	0x03810EA4 CBNZ W8, 0x3810EAC
	0x03810EA8 BL 0x1C16DFC
	0x03810EAC MOV X0, X20
	0x03810EB0 MOV X1, X31
	0x03810EB4 BL 0x338C698
	0x03810EB8 CBZ X0, 0x3810EDC
	0x03810EBC LDR X8, [X0]
	0x03810EC0 LDR X1, [X19 + 0x20]
	0x03810EC4 LDP X20, X19, [X31 + 0x20]
	0x03810EC8 LDP X22, X21, [X31 + 0x10]
	0x03810ECC LDR X3, [X8 + 0x2A8]
	0x03810ED0 LDR X2, [X8 + 0x2B0]
	0x03810ED4 LDR X30, [X31], #0x30
	0x03810ED8 BR X3
	0x03810EDC BL 0x1C16F20
	0x03810EE0 STR X30, [X31 - 0x10]!
	0x03810EE4 BL 0x3810E4C

ISIL:
	001 Move [X31-48], D11
	002 Move [X31-40], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+40], X19
	007 Move X19, 0xBCA000
	008 Move W8, [X19+1450]
	009 NotImplemented "Instruction FCMP not yet implemented."
	010 Move V9, V2
	011 Move V8, V1
	012 Move V10, V0
	013 NotImplemented "Instruction FCSEL not yet implemented."
	014 Compare W8, 0
	015 JumpIfNotEqual {21}
	016 Move X0, 0x8EB000
	017 Move X0, [X0+1208]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X19+1450], W8
	021 Move X8, 0x8EB000
	022 Move X8, [X8+1208]
	023 Move X9, -47337472
	024 Move V0, [X9+576]
	025 NotImplemented "Instruction FABS not yet implemented."
	026 Move X8, [X8]
	027 NotImplemented "Instruction FABS not yet implemented."
	028 NotImplemented "Instruction FCMP not yet implemented."
	029 NotImplemented "Instruction FCSEL not yet implemented."
	030 Move X8, [X8+184]
	031 Multiply S0, S1, S0
	032 Move S1, 8
	033 Move V3, [X8]
	034 Multiply S1, S3, S1
	035 NotImplemented "Instruction FCMP not yet implemented."
	036 NotImplemented "Instruction FCSEL not yet implemented."
	037 NotImplemented "Instruction FABD not yet implemented."
	038 NotImplemented "Instruction FCMP not yet implemented."
	039 NotImplemented "Instruction FCMP not yet implemented."
	040 Move S0, -1
	041 Move S1, W31
	042 NotImplemented "Instruction FCSEL not yet implemented."
	043 Subtract S0, S10, S8
	044 Subtract S1, S9, S8
	045 NotImplemented "Instruction FDIV not yet implemented."
	046 Move S2, -1
	047 Add S1, S0, S0
	048 Add S1, S1, S2
	049 NotImplemented "Instruction FCMP not yet implemented."
	050 NotImplemented "Instruction FCSEL not yet implemented."
	051 Move X30, [X31+32]
	052 Move X19, [X31+40]
	053 Move D9, [X31+16]
	054 Move D8, [X31+24]
	055 Move D11, [X31+48]
	056 Move D10, [X31+56]
	057 Return V0

Method: System.Single Denormalize(System.Single value, System.Single min, System.Single max, System.Single zero)

Disassembly:
	0x03810EE8 ORN W8, W31, W0, 0x0
	0x03810EEC AND W0, W8, 0x1
	0x03810EF0 LDR X30, [X31], #0x10
	0x03810EF4 RET
	0x03810EF8 LDRB W8, [X0 + 0xA8]
	0x03810EFC UBFM W0, W8, 0x2, 0x2
	0x03810F00 RET
	0x03810F04 LDR W8, [X0 + 0xA8]
	0x03810F08 ANDS W31, W1, 0x1
	0x03810F0C MOVZ W9, 0x4
	0x03810F10 CSEL W9, W9, W31, NE
	0x03810F14 AND W8, W8, 0xFFFFFFFB
	0x03810F18 ORR W8, W8, W9, 0x0
	0x03810F1C STR W8, [X0 + 0xA8]
	0x03810F20 RET
	0x03810F24 LDR W8, [X0 + 0xA8]
	0x03810F28 AND W0, W8, 0x1
	0x03810F2C RET

ISIL:
	001 NotImplemented "Instruction FCMP not yet implemented."
	002 NotImplemented "Instruction FCSEL not yet implemented."
	003 NotImplemented "Instruction FCMP not yet implemented."
	004 NotImplemented "Instruction FCMP not yet implemented."
	005 Subtract S2, S3, S1
	006 Multiply S0, S2, S0
	007 Subtract S0, S1, S0
	008 Return V0
	009 Subtract S2, S2, S1
	010 Multiply S0, S2, S0
	011 Add S0, S0, S1
	012 Return V0
	013 Subtract S1, S2, S3
	014 Multiply S0, S1, S0
	015 Add S0, S3, S0
	016 Return V0

Method: System.String ToString()

Disassembly:
	0x03810F30 LDR W8, [X0 + 0xA8]
	0x03810F34 BFM W8, W1, 0x0, 0x0
	0x03810F38 STR W8, [X0 + 0xA8]
	0x03810F3C RET
	0x03810F40 LDRB W8, [X0 + 0xA8]
	0x03810F44 UBFM W0, W8, 0x1, 0x1
	0x03810F48 RET
	0x03810F4C LDR W8, [X0 + 0xA8]
	0x03810F50 ANDS W31, W1, 0x1
	0x03810F54 MOVZ W9, 0x2
	0x03810F58 CSEL W9, W9, W31, NE
	0x03810F5C AND W8, W8, 0xFFFFFFFD
	0x03810F60 ORR W8, W8, W9, 0x0
	0x03810F64 STR W8, [X0 + 0xA8]
	0x03810F68 RET
	0x03810F6C LDRB W8, [X0 + 0xA8]
	0x03810F70 UBFM W0, W8, 0x5, 0x5
	0x03810F74 RET
	0x03810F78 LDR W8, [X0 + 0xA8]
	0x03810F7C ANDS W31, W1, 0x1
	0x03810F80 MOVZ W9, 0x20
	0x03810F84 CSEL W9, W9, W31, NE
	0x03810F88 AND W8, W8, 0xFFFFFFDF
	0x03810F8C ORR W8, W8, W9, 0x0
	0x03810F90 STR W8, [X0 + 0xA8]
	0x03810F94 RET
	0x03810F98 STR X30, [X31 - 0x20]!
	0x03810F9C STP X20, X19, [X31 + 0x10]
	0x03810FA0 ADRP X20, 0xBD1000
	0x03810FA4 LDRB W8, [X20 + 0x4CD]
	0x03810FA8 MOV X19, X0
	0x03810FAC TBNZ X8, 0x0, 0x3810FC4
	0x03810FB0 ADRP X0, 0x8E7000
	0x03810FB4 LDR X0, [X0 + 0xFD8]
	0x03810FB8 BL 0x1C16CF4
	0x03810FBC MOVZ W8, 0x1
	0x03810FC0 STRB W8, [X20 + 0x4CD]
	0x03810FC4 LDR W8, [X19 + 0xA8]
	0x03810FC8 STRH W31, [X31 + 0xC]
	0x03810FCC TBNZ X8, 0x4, 0x3810FD8
	0x03810FD0 MOV X0, X31
	0x03810FD4 B 0x3810FF4
	0x03810FD8 ADRP X9, 0x8E7000
	0x03810FDC LDR X9, [X9 + 0xFD8]
	0x03810FE0 UBFM W1, W8, 0x3, 0x3
	0x03810FE4 ADD X0, X31, 0xC
	0x03810FE8 LDR X2, [X9]
	0x03810FEC BL 0x242D570
	0x03810FF0 LDRH W0, [X31 + 0xC]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0xBD2000
	009 Move X23, 0x8E4000
	010 Move X22, 0x93B000
	011 Move W8, [X20+1205]
	012 Move X23, [X23+2704]
	013 Move X22, [X22+1736]
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0x8E4000
	020 Move X0, [X0+2704]
	021 Call 0x1C17CF4
	022 Move X0, 0x93B000
	023 Move X0, [X0+1736]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X20+1205], W8
	027 Move V0, [X19+16]
	028 Move X0, [X23]
	029 Add X1, X31, 12
	030 Move [X31+12], S0
	031 Call 0x1C17E04
	032 Move X20, X0
	033 Move V0, [X19+20]
	034 Move X0, [X23]
	035 Add X1, X31, 8
	036 Move [X31+8], S0
	037 Call 0x1C17E04
	038 Move X21, X0
	039 Move V0, [X19+24]
	040 Move X0, [X23]
	041 Add X1, X31, 4
	042 Move [X31+4], S0
	043 Call 0x1C17E04
	044 Move X8, [X22]
	045 Move X3, X0
	046 Move X1, X20
	047 Move X2, X21
	048 Move X0, X8
	049 Move X4, X31
	050 Call String.Format, X0, X1, X2, X3
	051 Move X20, [X31+48]
	052 Move X19, [X31+56]
	053 Move X22, [X31+32]
	054 Move X21, [X31+40]
	055 Move X30, [X31+16]
	056 Move X23, [X31+24]
	057 Add X31, X31, 64
	058 Return X0

Method: System.Void .ctor()

Disassembly:
	0x03810FF4 LDP X20, X19, [X31 + 0x10]
	0x03810FF8 LDR X30, [X31], #0x20
	0x03810FFC RET
	0x03811000 SUB X31, X31, 0x30
	0x03811004 STP X30, X21, [X31 + 0x10]
	0x03811008 STP X20, X19, [X31 + 0x20]
	0x0381100C ADRP X21, 0xBD0000
	0x03811010 LDRB W8, [X21 + 0x4CE]
	0x03811014 MOV X20, X1
	0x03811018 MOV X19, X0
	0x0381101C STRH W20, [X31 + 0xC]
	0x03811020 TBNZ X8, 0x0, 0x3811044
	0x03811024 ADRP X0, 0x8E6000
	0x03811028 LDR X0, [X0 + 0xBF0]
	0x0381102C BL 0x1C16CF4
	0x03811030 ADRP X0, 0x8E6000
	0x03811034 LDR X0, [X0 + 0xBF8]
	0x03811038 BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xBD2000
	006 Move X21, 0x93A000
	007 Move W8, [X20+1206]
	008 Call 0x3EB26D4
	009 Return 
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x93A000
	016 Move X0, [X0+1656]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+1206], W8
	020 Move X1, [X21]
	021 Move X0, X19
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X30, [X31+32]
	025 Move X21, [X31+40]
	026 Call InputProcessor`1<Single>..ctor, X0
	027 Return 

