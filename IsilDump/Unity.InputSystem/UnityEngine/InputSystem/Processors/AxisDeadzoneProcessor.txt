Type: UnityEngine.InputSystem.Processors.AxisDeadzoneProcessor

Method: System.Single get_minOrDefault()

Disassembly:
	0x038102C0 MOV X0, X19
	0x038102C4 LDP X20, X19, [X31 + 0x10]
	0x038102C8 LDP X30, X21, [X31], #0x20
	0x038102CC B 0x2E11398
	0x038102D0 LDR V1, [X0 + 0x10]
	0x038102D4 FMUL S0, S1, S0
	0x038102D8 RET
	0x038102DC STR X30, [X31 - 0x30]!
	0x038102E0 STP X22, X21, [X31 + 0x10]
	0x038102E4 STP X20, X19, [X31 + 0x20]
	0x038102E8 ADRP X22, 0xBD1000
	0x038102EC ADRP X21, 0x8E3000
	0x038102F0 ADRP X20, 0x93A000
	0x038102F4 LDRB W8, [X22 + 0x4BB]
	0x038102F8 LDR X21, [X21 + 0xA90]
	0x038102FC LDR X20, [X20 + 0x6E0]
	0x03810300 MOV X19, X0
	0x03810304 TBNZ X8, 0x0, 0x3810328
	0x03810308 ADRP X0, 0x8E3000
	0x0381030C LDR X0, [X0 + 0xA90]
	0x03810310 BL 0x1C16CF4
	0x03810314 ADRP X0, 0x93A000
	0x03810318 LDR X0, [X0 + 0x6E0]
	0x0381031C BL 0x1C16CF4
	0x03810320 MOVZ W8, 0x1
	0x03810324 STRB W8, [X22 + 0x4BB]
	0x03810328 LDR V0, [X19 + 0x10]
	0x0381032C LDR X0, [X21]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xBD2000
	005 Move W8, [X20+1187]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x90C000
	012 Move X0, [X0+624]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1187], W8
	016 Move V0, [X19+16]
	017 NotImplemented "Instruction FCMP not yet implemented."
	018 Move X8, 0x90C000
	019 Move X8, [X8+624]
	020 Move X0, [X8]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X0, X31
	026 Call InputSystem.get_settings
	027 Compare X0, 0
	028 JumpIfEqual {34}
	029 Move V0, [X0+56]
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X30, [X31+32]
	033 Return V0
	034 Call 0x1C17F20

Method: System.Single get_maxOrDefault()

Disassembly:
	0x03810330 ADD X1, X31, 0xC
	0x03810334 STR S0, [X31 + 0xC]
	0x03810338 BL 0x1C16E04
	0x0381033C LDR X8, [X20]
	0x03810340 MOV X1, X0
	0x03810344 MOV X2, X31
	0x03810348 MOV X0, X8
	0x0381034C BL 0x321EFD0
	0x03810350 LDP X20, X19, [X31 + 0x20]
	0x03810354 LDP X22, X21, [X31 + 0x10]
	0x03810358 LDR X30, [X31], #0x30
	0x0381035C RET
	0x03810360 STP X30, X21, [X31 - 0x20]!
	0x03810364 STP X20, X19, [X31 + 0x10]
	0x03810368 ADRP X21, 0xBD1000
	0x0381036C ADRP X20, 0x93A000
	0x03810370 LDRB W8, [X21 + 0x4BC]
	0x03810374 LDR X20, [X20 + 0x678]
	0x03810378 MOV X19, X0
	0x0381037C TBNZ X8, 0x0, 0x3810394
	0x03810380 ADRP X0, 0x93A000
	0x03810384 LDR X0, [X0 + 0x678]
	0x03810388 BL 0x1C16CF4
	0x0381038C MOVZ W8, 0x1
	0x03810390 STRB W8, [X21 + 0x4BC]
	0x03810394 MOVZ W8, 0x3F800000
	0x03810398 STR W8, [X19 + 0x10]
	0x0381039C LDR X1, [X20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xBD2000
	005 Move W8, [X20+1188]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x90C000
	012 Move X0, [X0+624]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1188], W8
	016 Move V0, [X19+20]
	017 NotImplemented "Instruction FCMP not yet implemented."
	018 Move X8, 0x90C000
	019 Move X8, [X8+624]
	020 Move X0, [X8]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X0, X31
	026 Call InputSystem.get_settings
	027 Compare X0, 0
	028 JumpIfEqual {34}
	029 Move V0, [X0+60]
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X30, [X31+32]
	033 Return V0
	034 Call 0x1C17F20

Method: System.Single Process(System.Single value, UnityEngine.InputSystem.InputControl control = null)

Disassembly:
	0x038103A0 MOV X0, X19
	0x038103A4 LDP X20, X19, [X31 + 0x10]
	0x038103A8 LDP X30, X21, [X31], #0x20
	0x038103AC B 0x2E10570
	0x038103B0 LDP S2, S3, [X0 + 0x10]
	0x038103B4 FMUL S0, S0, S2
	0x038103B8 FMUL S1, S1, S3
	0x038103BC RET
	0x038103C0 STR X30, [X31 - 0x30]!
	0x038103C4 STP X22, X21, [X31 + 0x10]
	0x038103C8 STP X20, X19, [X31 + 0x20]
	0x038103CC ADRP X20, 0xBD1000
	0x038103D0 ADRP X22, 0x8E3000
	0x038103D4 ADRP X21, 0x93A000
	0x038103D8 LDRB W8, [X20 + 0x4BD]
	0x038103DC LDR X22, [X22 + 0xA90]
	0x038103E0 LDR X21, [X21 + 0x6E8]
	0x038103E4 MOV X19, X0
	0x038103E8 TBNZ X8, 0x0, 0x381040C
	0x038103EC ADRP X0, 0x8E3000
	0x038103F0 LDR X0, [X0 + 0xA90]
	0x038103F4 BL 0x1C16CF4
	0x038103F8 ADRP X0, 0x93A000
	0x038103FC LDR X0, [X0 + 0x6E8]
	0x03810400 BL 0x1C16CF4
	0x03810404 MOVZ W8, 0x1

ISIL:
	001 Move [X31-32], D9
	002 Move [X31-24], D8
	003 Move [X31+16], X30
	004 Move [X31+24], X19
	005 Move V9, V0
	006 Move X19, X0
	007 Call AxisDeadzoneProcessor.get_minOrDefault, X0
	008 Move X0, X19
	009 Move V8, V0
	010 Call AxisDeadzoneProcessor.get_maxOrDefault, X0
	011 NotImplemented "Instruction FABS not yet implemented."
	012 Move V1, V0
	013 NotImplemented "Instruction FCMP not yet implemented."
	014 Move S0, W31
	015 NotImplemented "Instruction FCMP not yet implemented."
	016 Move S0, -1
	017 Move S3, 1
	018 NotImplemented "Instruction FCSEL not yet implemented."
	019 NotImplemented "Instruction FCMP not yet implemented."
	020 Subtract S2, S2, S8
	021 Subtract S1, S1, S8
	022 NotImplemented "Instruction FDIV not yet implemented."
	023 Multiply S0, S0, S1
	024 Move X30, [X31+16]
	025 Move X19, [X31+24]
	026 Move D9, [X31+32]
	027 Move D8, [X31+40]
	028 Return V0

Method: System.String ToString()

Disassembly:
	0x03810408 STRB W8, [X20 + 0x4BD]
	0x0381040C LDR V0, [X19 + 0x10]
	0x03810410 LDR X0, [X22]
	0x03810414 ADD X1, X31, 0xC
	0x03810418 STR S0, [X31 + 0xC]
	0x0381041C BL 0x1C16E04
	0x03810420 MOV X20, X0
	0x03810424 LDR V0, [X19 + 0x14]
	0x03810428 LDR X0, [X22]
	0x0381042C ADD X1, X31, 0x8
	0x03810430 STR S0, [X31 + 0x8]
	0x03810434 BL 0x1C16E04
	0x03810438 LDR X8, [X21]
	0x0381043C MOV X2, X0
	0x03810440 MOV X1, X20
	0x03810444 MOV X3, X31
	0x03810448 MOV X0, X8
	0x0381044C BL 0x3227BD4
	0x03810450 LDP X20, X19, [X31 + 0x20]
	0x03810454 LDP X22, X21, [X31 + 0x10]
	0x03810458 LDR X30, [X31], #0x30
	0x0381045C RET
	0x03810460 STP X30, X21, [X31 - 0x20]!
	0x03810464 STP X20, X19, [X31 + 0x10]
	0x03810468 ADRP X21, 0xBD1000
	0x0381046C ADRP X20, 0x93A000
	0x03810470 LDRB W8, [X21 + 0x4BE]
	0x03810474 LDR X20, [X20 + 0x6B8]
	0x03810478 MOV X19, X0
	0x0381047C TBNZ X8, 0x0, 0x3810494
	0x03810480 ADRP X0, 0x93A000
	0x03810484 LDR X0, [X0 + 0x6B8]
	0x03810488 BL 0x1C16CF4
	0x0381048C MOVZ W8, 0x1
	0x03810490 STRB W8, [X21 + 0x4BE]
	0x03810494 FMOV V0.2S, 0x0
	0x03810498 STR D0, [X19 + 0x10]
	0x0381049C LDR X1, [X20]
	0x038104A0 MOV X0, X19
	0x038104A4 LDP X20, X19, [X31 + 0x10]
	0x038104A8 LDP X30, X21, [X31], #0x20
	0x038104AC B 0x2E11034

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xBD2000
	007 Move X22, 0x8E4000
	008 Move X21, 0x93B000
	009 Move W8, [X20+1189]
	010 Move X22, [X22+2704]
	011 Move X21, [X21+1648]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x8E4000
	018 Move X0, [X0+2704]
	019 Call 0x1C17CF4
	020 Move X0, 0x93B000
	021 Move X0, [X0+1648]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+1189], W8
	025 Move X0, X19
	026 Call AxisDeadzoneProcessor.get_minOrDefault, X0
	027 Move X0, [X22]
	028 Add X1, X31, 12
	029 Move [X31+12], S0
	030 Call 0x1C17E04
	031 Move X20, X0
	032 Move X0, X19
	033 Call AxisDeadzoneProcessor.get_maxOrDefault, X0
	034 Move X0, [X22]
	035 Add X1, X31, 8
	036 Move [X31+8], S0
	037 Call 0x1C17E04
	038 Move X8, [X21]
	039 Move X2, X0
	040 Move X1, X20
	041 Move X3, X31
	042 Move X0, X8
	043 Call String.Format, X0, X1, X2
	044 Move X20, [X31+32]
	045 Move X19, [X31+40]
	046 Move X22, [X31+16]
	047 Move X21, [X31+24]
	048 Move X30, [X31+48]
	049 Return X0

Method: System.Void .ctor()

Disassembly:
	0x038104B0 LDP S3, S4, [X0 + 0x10]
	0x038104B4 LDR V5, [X0 + 0x18]
	0x038104B8 FMUL S0, S0, S3
	0x038104BC FMUL S1, S1, S4
	0x038104C0 FMUL S2, S2, S5
	0x038104C4 RET
	0x038104C8 SUB X31, X31, 0x40
	0x038104CC STP X30, X23, [X31 + 0x10]
	0x038104D0 STP X22, X21, [X31 + 0x20]
	0x038104D4 STP X20, X19, [X31 + 0x30]
	0x038104D8 ADRP X20, 0xBD1000
	0x038104DC ADRP X23, 0x8E3000
	0x038104E0 ADRP X22, 0x93A000
	0x038104E4 LDRB W8, [X20 + 0x4BF]
	0x038104E8 LDR X23, [X23 + 0xA90]
	0x038104EC LDR X22, [X22 + 0x6F0]
	0x038104F0 MOV X19, X0
	0x038104F4 TBNZ X8, 0x0, 0x3810518

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xBD2000
	006 Move X21, 0x93B000
	007 Move W8, [X20+1190]
	008 Move X21, [X21+1656]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x93B000
	015 Move X0, [X0+1656]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1190], W8
	019 Move X1, [X21]
	020 Move X0, X19
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X30, [X31+32]
	024 Move X21, [X31+40]
	025 Call InputProcessor`1<Single>..ctor, X0
	026 Return 

