Type: UnityEngine.InputSystem.InputRemoting

Method: System.Boolean get_sending()

Disassembly:
	0x037BACD8 LDP X24, X23, [X31 + 0x90]
	0x037BACDC LDP X26, X25, [X31 + 0x80]
	0x037BACE0 LDP X28, X27, [X31 + 0x70]

ISIL:
	001 Move W8, [X0+16]
	002 And W0, W8, 1
	003 Return X0

Method: System.Void set_sending(System.Boolean value)

Disassembly:
	0x037BACE4 LDR X30, [X31 + 0x60]
	0x037BACE8 ADD X31, X31, 0xC0
	0x037BACEC RET
	0x037BACF0 BL 0x1C16F28

ISIL:
	001 Move W8, [X0+16]
	002 NotImplemented "Instruction BFM not yet implemented."
	003 Move [X0+16], W8
	004 Return 

Method: System.Void .ctor(UnityEngine.InputSystem.InputManager manager, System.Boolean startSendingOnConnect = False)

Disassembly:
	0x037BACF4 BL 0x1C16F20
	0x037BACF8 BL 0x1C16F20
	0x037BACFC B 0x37BAD14
	0x037BAD00 B 0x37BAD14
	0x037BAD04 B 0x37BAD14
	0x037BAD08 B 0x37BAD14
	0x037BAD0C B 0x37BAD14
	0x037BAD10 B 0x37BAD14
	0x037BAD14 MOV X22, X0
	0x037BAD18 CMP W1, 0x1
	0x037BAD1C B.NE 0x37BAD48
	0x037BAD20 MOV X0, X22
	0x037BAD24 BL 0x3EB1AD0
	0x037BAD28 LDR X23, [X0]
	0x037BAD2C BL 0x3EB1AE0
	0x037BAD30 LDR X1, [X25]
	0x037BAD34 ADD X0, X31, 0x40
	0x037BAD38 BL 0x2BBF88C
	0x037BAD3C CBZ X23, 0x37BAC38
	0x037BAD40 MOV X0, X23
	0x037BAD44 BL 0x1C16F18
	0x037BAD48 MOV X23, X31
	0x037BAD4C B 0x37BAD54
	0x037BAD50 MOV X22, X0
	0x037BAD54 LDR X1, [X25]
	0x037BAD58 ADD X0, X31, 0x40
	0x037BAD5C BL 0x2BBF88C
	0x037BAD60 CBNZ X23, 0x37BAD6C
	0x037BAD64 MOV X0, X22
	0x037BAD68 BL 0x1D2C690
	0x037BAD6C MOV X0, X23
	0x037BAD70 BL 0x1C16F18
	0x037BAD74 BL 0x1990590
	0x037BAD78 STP X30, X21, [X31 - 0x20]!

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, X1
	006 Move X1, X31
	007 Move W20, W2
	008 Move X19, X0
	009 Call Object..ctor, X0
	010 Compare X21, 0
	011 JumpIfEqual {25}
	012 Move [X19+24], X21
	013 Move TEMP, X20
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfNotEqual {20}
	017 Move W8, [X19+16]
	018 Or W8, W8, 2
	019 Move [X19+16], W8
	020 Move X20, [X31+16]
	021 Move X19, [X31+24]
	022 Move X30, [X31+32]
	023 Move X21, [X31+40]
	024 Return 
	025 Move X0, 0x93F000
	026 Move X0, [X0+1320]
	027 Call 0x1C17D08
	028 Call 0x1C17F10
	029 Move X19, X0
	030 Move X0, 0x98E000
	031 Move X0, [X0+2928]
	032 Call 0x1C17D08
	033 Move X1, X0
	034 Move X0, X19
	035 Move X2, X31
	036 Call ArgumentNullException..ctor, X0, X1
	037 Move X0, 0x98E000
	038 Move X0, [X0+2936]
	039 Call 0x1C17D08
	040 Move X1, X0
	041 Move X0, X19
	042 Call 0x1C17DEC

Method: System.Void StartSending()

Disassembly:
	0x037BAD7C STP X20, X19, [X31 + 0x10]
	0x037BAD80 CBZ X0, 0x37BADE0
	0x037BAD84 MOV X20, X2
	0x037BAD88 MOV X19, X0
	0x037BAD8C BL 0x37BBEB4
	0x037BAD90 MOV W21, W0
	0x037BAD94 MOV X0, X20
	0x037BAD98 MOV W1, W31
	0x037BAD9C MOV X2, X31
	0x037BADA0 BL 0x3316F8C
	0x037BADA4 MOV W1, W0
	0x037BADA8 MOV X0, X19
	0x037BADAC MOV W2, W21
	0x037BADB0 BL 0x37BC06C
	0x037BADB4 CBZ X0, 0x37BADD4
	0x037BADB8 MOV X1, X0
	0x037BADBC LDR X0, [X19 + 0x18]
	0x037BADC0 CBZ X0, 0x37BADE0
	0x037BADC4 LDP X20, X19, [X31 + 0x10]
	0x037BADC8 MOV W2, W31
	0x037BADCC LDP X30, X21, [X31], #0x20
	0x037BADD0 B 0x37BC210
	0x037BADD4 LDP X20, X19, [X31 + 0x10]
	0x037BADD8 LDP X30, X21, [X31], #0x20
	0x037BADDC RET
	0x037BADE0 BL 0x1C16F20
	0x037BADE4 CBZ X0, 0x37BADEC
	0x037BADE8 B 0x37B9D7C
	0x037BADEC STR X30, [X31 - 0x10]!
	0x037BADF0 BL 0x1C16F20
	0x037BADF4 CBZ X0, 0x37BADFC
	0x037BADF8 B 0x37BA000
	0x037BADFC STR X30, [X31 - 0x10]!
	0x037BAE00 BL 0x1C16F20
	0x037BAE04 RET
	0x037BAE08 RET
	0x037BAE0C STP X30, X21, [X31 - 0x20]!
	0x037BAE10 STP X20, X19, [X31 + 0x10]
	0x037BAE14 ADRP X21, 0xC27000
	0x037BAE18 LDRB W8, [X21 + 0x168]
	0x037BAE1C MOV X19, X1
	0x037BAE20 MOV X20, X0
	0x037BAE24 TBNZ X8, 0x0, 0x37BAE48
	0x037BAE28 ADRP X0, 0x98D000
	0x037BAE2C LDR X0, [X0 + 0xC38]
	0x037BAE30 BL 0x1C16CF4
	0x037BAE34 ADRP X0, 0x98D000
	0x037BAE38 LDR X0, [X0 + 0xC40]
	0x037BAE3C BL 0x1C16CF4
	0x037BAE40 MOVZ W8, 0x1
	0x037BAE44 STRB W8, [X21 + 0x168]
	0x037BAE48 CBZ X19, 0x37BAE98
	0x037BAE4C ADRP X8, 0x98D000
	0x037BAE50 LDR X8, [X8 + 0xC40]
	0x037BAE54 LDR X0, [X8]
	0x037BAE58 BL 0x1C16F10
	0x037BAE5C MOV X1, X31
	0x037BAE60 MOV X21, X0
	0x037BAE64 BL 0x33BDD8C
	0x037BAE68 CBZ X21, 0x37BAEE0
	0x037BAE6C ADRP X8, 0x98D000
	0x037BAE70 LDR X8, [X8 + 0xC38]
	0x037BAE74 STP X20, X19, [X21 + 0x10]
	0x037BAE78 ADD X0, X20, 0x20
	0x037BAE7C MOV X1, X21
	0x037BAE80 LDR X2, [X8]
	0x037BAE84 BL 0x2172CE4
	0x037BAE88 LDP X20, X19, [X31 + 0x10]
	0x037BAE8C MOV X0, X21
	0x037BAE90 LDP X30, X21, [X31], #0x20
	0x037BAE94 RET
	0x037BAE98 ADRP X0, 0x93E000
	0x037BAE9C LDR X0, [X0 + 0x528]
	0x037BAEA0 BL 0x1C16D08
	0x037BAEA4 BL 0x1C16F10
	0x037BAEA8 MOV X19, X0
	0x037BAEAC ADRP X0, 0x98D000
	0x037BAEB0 LDR X0, [X0 + 0xC48]
	0x037BAEB4 BL 0x1C16D08
	0x037BAEB8 MOV X1, X0
	0x037BAEBC MOV X0, X19
	0x037BAEC0 MOV X2, X31
	0x037BAEC4 BL 0x330E100
	0x037BAEC8 ADRP X0, 0x98D000
	0x037BAECC LDR X0, [X0 + 0xC50]
	0x037BAED0 BL 0x1C16D08
	0x037BAED4 MOV X1, X0
	0x037BAED8 MOV X0, X19
	0x037BAEDC BL 0x1C16DEC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xC28000
	006 Move W8, [X20+358]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {32}
	012 Move X0, 0x98E000
	013 Move X0, [X0+2944]
	014 Call 0x1C17CF4
	015 Move X0, 0x98C000
	016 Move X0, [X0+1784]
	017 Call 0x1C17CF4
	018 Move X0, 0x98E000
	019 Move X0, [X0+2952]
	020 Call 0x1C17CF4
	021 Move X0, 0x98E000
	022 Move X0, [X0+2960]
	023 Call 0x1C17CF4
	024 Move X0, 0x98E000
	025 Move X0, [X0+2968]
	026 Call 0x1C17CF4
	027 Move X0, 0x98E000
	028 Move X0, [X0+2976]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X20+358], W8
	032 Move W8, [X19+16]
	033 Move TEMP, X8
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfEqual {100}
	037 Move X8, 0x98C000
	038 Move X8, [X8+1784]
	039 Move X21, 0x98E000
	040 Move X20, [X19+24]
	041 Move X0, [X8]
	042 Move X21, [X21+2968]
	043 Call 0x1C17F10
	044 Move X2, [X21]
	045 Move X1, X19
	046 Move X3, X31
	047 Move X21, X0
	048 Call Action`2<InputEventPtr, Object>..ctor, X0, X1, X2
	049 Compare X20, 0
	050 JumpIfEqual {105}
	051 Move X0, X20
	052 Move X1, X21
	053 Call InputManager.add_onEvent, X0, X1
	054 Move X8, 0x98E000
	055 Move X20, [X19+24]
	056 Move X8, [X8+2952]
	057 Move X0, [X8]
	058 Call 0x1C17F10
	059 Move X8, 0x98E000
	060 Move X8, [X8+2960]
	061 Move X1, X19
	062 Move X3, X31
	063 Move X21, X0
	064 Move X2, [X8]
	065 Call Action`2<Object, Int32Enum>..ctor, X0, X1, X2
	066 Compare X20, 0
	067 JumpIfEqual {105}
	068 Move X0, X20
	069 Move X1, X21
	070 Call InputManager.add_onDeviceChange, X0, X1
	071 Move X8, 0x98E000
	072 Move X20, [X19+24]
	073 Move X8, [X8+2944]
	074 Move X0, [X8]
	075 Call 0x1C17F10
	076 Move X8, 0x98E000
	077 Move X8, [X8+2976]
	078 Move X1, X19
	079 Move X3, X31
	080 Move X21, X0
	081 Move X2, [X8]
	082 Call Action`2<Object, Int32Enum>..ctor, X0, X1, X2
	083 Compare X20, 0
	084 JumpIfEqual {105}
	085 Move X0, X20
	086 Move X1, X21
	087 Call InputManager.add_onLayoutChange, X0, X1
	088 Move W8, [X19+16]
	089 Move X0, X19
	090 Or W8, W8, 1
	091 Move [X19+16], W8
	092 Call InputRemoting.SendAllGeneratedLayouts, X0
	093 Move X0, X19
	094 Move X20, [X31+16]
	095 Move X19, [X31+24]
	096 Move X30, [X31+32]
	097 Move X21, [X31+40]
	098 Call InputRemoting.SendAllDevices, X0
	099 Return 
	100 Move X20, [X31+16]
	101 Move X19, [X31+24]
	102 Move X30, [X31+32]
	103 Move X21, [X31+40]
	104 Return 
	105 Call 0x1C17F20

Method: System.Void StopSending()

Disassembly:
	0x037BB000 BL 0x2C01DC8
	0x037BB004 CBZ X19, 0x37BAFC4
	0x037BB008 MOV X0, X19
	0x037BB00C BL 0x1C16F18
	0x037BB010 MOV X19, X31
	0x037BB014 B 0x37BB01C
	0x037BB018 MOV X20, X0
	0x037BB01C LDR X1, [X21]
	0x037BB020 ADD X0, X31, 0x0
	0x037BB024 BL 0x2C01DC8
	0x037BB028 CBNZ X19, 0x37BB034
	0x037BB02C MOV X0, X20
	0x037BB030 BL 0x1D2C690
	0x037BB034 MOV X0, X19
	0x037BB038 BL 0x1C16F18
	0x037BB03C BL 0x1990590
	0x037BB040 SUB X31, X31, 0x60
	0x037BB044 STP X30, X23, [X31 + 0x30]
	0x037BB048 STP X22, X21, [X31 + 0x40]
	0x037BB04C STP X20, X19, [X31 + 0x50]
	0x037BB050 ADRP X20, 0xC26000
	0x037BB054 LDRB W8, [X20 + 0x16B]
	0x037BB058 MOV X19, X0
	0x037BB05C TBNZ X8, 0x0, 0x37BB098
	0x037BB060 ADRP X0, 0x960000
	0x037BB064 LDR X0, [X0 + 0xF10]
	0x037BB068 BL 0x1C16CF4
	0x037BB06C ADRP X0, 0x960000
	0x037BB070 LDR X0, [X0 + 0xF18]
	0x037BB074 BL 0x1C16CF4
	0x037BB078 ADRP X0, 0x960000
	0x037BB07C LDR X0, [X0 + 0xF20]
	0x037BB080 BL 0x1C16CF4
	0x037BB084 ADRP X0, 0x960000
	0x037BB088 LDR X0, [X0 + 0xF30]
	0x037BB08C BL 0x1C16CF4
	0x037BB090 MOVZ W8, 0x1
	0x037BB094 STRB W8, [X20 + 0x16B]
	0x037BB098 STP X31, X31, [X31 + 0x8]
	0x037BB09C STR X31, [X31 + 0x18]
	0x037BB0A0 LDR X0, [X19 + 0x18]
	0x037BB0A4 CBZ X0, 0x37BB130
	0x037BB0A8 ADRP X23, 0x960000
	0x037BB0AC ADRP X21, 0x960000
	0x037BB0B0 ADRP X22, 0x960000
	0x037BB0B4 ADRP X20, 0x960000
	0x037BB0B8 LDR X23, [X23 + 0xF30]
	0x037BB0BC LDR X21, [X21 + 0xF18]
	0x037BB0C0 LDR X22, [X22 + 0xF20]
	0x037BB0C4 LDR X20, [X20 + 0xF10]
	0x037BB0C8 BL 0x37BB5A0
	0x037BB0CC LDR X9, [X23]
	0x037BB0D0 STP X0, X1, [X31 + 0x20]
	0x037BB0D4 ADD X8, X31, 0x8
	0x037BB0D8 ADD X0, X31, 0x20
	0x037BB0DC MOV X1, X9
	0x037BB0E0 BL 0x24FD990
	0x037BB0E4 LDR X1, [X21]
	0x037BB0E8 ADD X0, X31, 0x8
	0x037BB0EC BL 0x2BC496C
	0x037BB0F0 TBZ X0, 0x0, 0x37BB110
	0x037BB0F4 LDR X1, [X22]
	0x037BB0F8 ADD X0, X31, 0x8
	0x037BB0FC BL 0x2BC4998
	0x037BB100 MOV X1, X0
	0x037BB104 MOV X0, X19
	0x037BB108 BL 0x37BB608
	0x037BB10C B 0x37BB0E4
	0x037BB110 LDR X1, [X20]
	0x037BB114 ADD X0, X31, 0x8
	0x037BB118 BL 0x2BC4968
	0x037BB11C LDP X20, X19, [X31 + 0x50]
	0x037BB120 LDP X22, X21, [X31 + 0x40]
	0x037BB124 LDP X30, X23, [X31 + 0x30]
	0x037BB128 ADD X31, X31, 0x60
	0x037BB12C RET
	0x037BB130 BL 0x1C16F20
	0x037BB134 B 0x37BB13C
	0x037BB138 B 0x37BB13C
	0x037BB13C MOV X21, X20
	0x037BB140 MOV X19, X0
	0x037BB144 CMP W1, 0x1
	0x037BB148 B.NE 0x37BB174

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xC27000
	006 Move W8, [X20+359]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {32}
	012 Move X0, 0x98D000
	013 Move X0, [X0+2944]
	014 Call 0x1C17CF4
	015 Move X0, 0x98B000
	016 Move X0, [X0+1784]
	017 Call 0x1C17CF4
	018 Move X0, 0x98D000
	019 Move X0, [X0+2952]
	020 Call 0x1C17CF4
	021 Move X0, 0x98D000
	022 Move X0, [X0+2960]
	023 Call 0x1C17CF4
	024 Move X0, 0x98D000
	025 Move X0, [X0+2968]
	026 Call 0x1C17CF4
	027 Move X0, 0x98D000
	028 Move X0, [X0+2976]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X20+359], W8
	032 Move W8, [X19+16]
	033 Move TEMP, X8
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfNotEqual {91}
	037 Move X8, 0x98B000
	038 Move X8, [X8+1784]
	039 Move X21, 0x98D000
	040 Move X20, [X19+24]
	041 Move X0, [X8]
	042 Move X21, [X21+2968]
	043 Call 0x1C17F10
	044 Move X2, [X21]
	045 Move X1, X19
	046 Move X3, X31
	047 Move X21, X0
	048 Call Action`2<InputEventPtr, Object>..ctor, X0, X1, X2
	049 Compare X20, 0
	050 JumpIfEqual {96}
	051 Move X0, X20
	052 Move X1, X21
	053 Call InputManager.remove_onEvent, X0, X1
	054 Move X8, 0x98D000
	055 Move X20, [X19+24]
	056 Move X8, [X8+2952]
	057 Move X0, [X8]
	058 Call 0x1C17F10
	059 Move X8, 0x98D000
	060 Move X8, [X8+2960]
	061 Move X1, X19
	062 Move X3, X31
	063 Move X21, X0
	064 Move X2, [X8]
	065 Call Action`2<Object, Int32Enum>..ctor, X0, X1, X2
	066 Compare X20, 0
	067 JumpIfEqual {96}
	068 Move X0, X20
	069 Move X1, X21
	070 Call InputManager.remove_onDeviceChange, X0, X1
	071 Move X8, 0x98D000
	072 Move X20, [X19+24]
	073 Move X8, [X8+2944]
	074 Move X0, [X8]
	075 Call 0x1C17F10
	076 Move X8, 0x98D000
	077 Move X8, [X8+2976]
	078 Move X1, X19
	079 Move X3, X31
	080 Move X21, X0
	081 Move X2, [X8]
	082 Call Action`2<Object, Int32Enum>..ctor, X0, X1, X2
	083 Compare X20, 0
	084 JumpIfEqual {96}
	085 Move X0, X20
	086 Move X1, X21
	087 Call InputManager.remove_onLayoutChange, X0, X1
	088 Move W8, [X19+16]
	089 And W8, W8, 0xFFFFFFFE
	090 Move [X19+16], W8
	091 Move X20, [X31+16]
	092 Move X19, [X31+24]
	093 Move X30, [X31+32]
	094 Move X21, [X31+40]
	095 Return 
	096 Call 0x1C17F20

Method: System.Void System.IObserver<UnityEngine.InputSystem.InputRemoting.Message>.OnNext(UnityEngine.InputSystem.InputRemoting/Message msg)

Disassembly:
	0x037BB254 RET
	0x037BB258 SUB X31, X31, 0x70
	0x037BB25C STR X30, [X31 + 0x30]
	0x037BB260 STP X24, X23, [X31 + 0x40]
	0x037BB264 STP X22, X21, [X31 + 0x50]
	0x037BB268 STP X20, X19, [X31 + 0x60]
	0x037BB26C ADRP X22, 0xC26000
	0x037BB270 LDRB W9, [X22 + 0x175]
	0x037BB274 MOV X20, X1
	0x037BB278 MOV X21, X0
	0x037BB27C MOV X19, X8
	0x037BB280 TBNZ X9, 0x0, 0x37BB2BC
	0x037BB284 ADRP X0, 0x938000
	0x037BB288 LDR X0, [X0 + 0xA28]
	0x037BB28C BL 0x1C16CF4
	0x037BB290 ADRP X0, 0x98C000
	0x037BB294 LDR X0, [X0 + 0xC90]
	0x037BB298 BL 0x1C16CF4
	0x037BB29C ADRP X0, 0x98C000
	0x037BB2A0 LDR X0, [X0 + 0xC98]
	0x037BB2A4 BL 0x1C16CF4
	0x037BB2A8 ADRP X0, 0x98C000
	0x037BB2AC LDR X0, [X0 + 0xCA0]
	0x037BB2B0 BL 0x1C16CF4
	0x037BB2B4 MOVZ W8, 0x1
	0x037BB2B8 STRB W8, [X22 + 0x175]
	0x037BB2BC CBZ X21, 0x37BB3D0
	0x037BB2C0 LDR X21, [X21 + 0x18]
	0x037BB2C4 STP X31, X31, [X31 + 0x18]
	0x037BB2C8 ADD X0, X31, 0x18
	0x037BB2CC MOV X1, X20
	0x037BB2D0 MOV X2, X31
	0x037BB2D4 BL 0x3757420

ISIL:
	001 Move [X31-16], X30
	002 Move X8, X1
	003 ShiftRight X8, 32
	004 And X8, X8, 0x7FFFFFFF
	005 NotImplemented "Instruction CMP not yet implemented."
	006 Move X9, -46280704
	007 Add X9, X9, 2365
	008 NotImplemented "Instruction ADR not yet implemented."
	009 Move W11, [X9]
	010 Add X10, X10, X11
	011 CallNoReturn X10
	012 Move X30, [X31+16]
	013 Move X30, [X31+16]
	014 Call DisconnectMsg.Process, X0, X1
	015 Return 
	016 Move X30, [X31+16]
	017 Call NewLayoutMsg.Process, X0, X1
	018 Return 
	019 Move X30, [X31+16]
	020 Call NewDeviceMsg.Process, X0, X1
	021 Return 
	022 Move X30, [X31+16]
	023 Call RemoveDeviceMsg.Process, X0, X1
	024 Return 
	025 Move X30, [X31+16]
	026 Call ChangeUsageMsg.Process, X0, X1
	027 Return 
	028 Compare X0, 0
	029 JumpIfEqual {43}
	030 Move X30, [X31+16]
	031 Call InputRemoting.StartSending, X0
	032 Return 
	033 Move X30, [X31+16]
	034 Call NewEventsMsg.Process, X0, X1
	035 Return 
	036 Move X30, [X31+16]
	037 Return 
	038 Compare X0, 0
	039 JumpIfEqual {43}
	040 Move X30, [X31+16]
	041 Call InputRemoting.StopSending, X0
	042 Return 
	043 Call 0x1C17F20

Method: System.Void System.IObserver<UnityEngine.InputSystem.InputRemoting.Message>.OnError(System.Exception error)

Disassembly:
	0x037BBE04 CBZ X8, 0x37BBE9C

ISIL:
	001 Return 

Method: System.Void System.IObserver<UnityEngine.InputSystem.InputRemoting.Message>.OnCompleted()

Disassembly:
	0x037BBE08 LDR X8, [X19 + 0x18]

ISIL:
	001 Return 

Method: System.IDisposable Subscribe(System.IObserver`1<UnityEngine.InputSystem.InputRemoting/Message> observer)

Disassembly:
	0x037BBE0C CBZ X8, 0x37BBEB0
	0x037BBE10 ADD X0, X31, 0x8
	0x037BBE14 MOV X1, X20
	0x037BBE18 MOV X2, X31
	0x037BBE1C ADD X22, X8, 0x18
	0x037BBE20 STP X31, X31, [X31 + 0x8]
	0x037BBE24 BL 0x3757420
	0x037BBE28 LDP X1, X2, [X31 + 0x8]
	0x037BBE2C MOV X0, X22
	0x037BBE30 MOV X3, X31
	0x037BBE34 BL 0x3818F5C
	0x037BBE38 TBZ X0, 0x0, 0x37BBE9C
	0x037BBE3C ORR W8, W21, 0x2
	0x037BBE40 CMP W8, 0x2
	0x037BBE44 B.NE 0x37BBE9C
	0x037BBE48 ADD X8, X31, 0x8
	0x037BBE4C MOV X0, X19
	0x037BBE50 MOV X1, X20
	0x037BBE54 BL 0x37BB258
	0x037BBE58 LDUR V0, [X31 + 0x8]
	0x037BBE5C LDR X8, [X31 + 0x18]
	0x037BBE60 STR V0, [X31 + 0x2]
	0x037BBE64 LDRB W9, [X31 + 0x20]
	0x037BBE68 STR X8, [X31 + 0x30]
	0x037BBE6C CBZ W9, 0x37BBE9C
	0x037BBE70 ADRP X8, 0x98C000
	0x037BBE74 LDR X8, [X8 + 0xC88]
	0x037BBE78 ADD X0, X31, 0x20
	0x037BBE7C LDR X1, [X8]
	0x037BBE80 BL 0x243EC90
	0x037BBE84 MOV X2, X0
	0x037BBE88 MOV X3, X1
	0x037BBE8C MOV X0, X19
	0x037BBE90 MOV X1, X2
	0x037BBE94 MOV X2, X3
	0x037BBE98 BL 0x37BB49C
	0x037BBE9C LDP X20, X19, [X31 + 0x60]
	0x037BBEA0 LDP X22, X21, [X31 + 0x50]
	0x037BBEA4 LDR X30, [X31 + 0x40]
	0x037BBEA8 ADD X31, X31, 0x70
	0x037BBEAC RET
	0x037BBEB0 BL 0x1C16F20
	0x037BBEB4 SUB X31, X31, 0x40
	0x037BBEB8 STP X30, X21, [X31 + 0x20]
	0x037BBEBC STP X20, X19, [X31 + 0x30]
	0x037BBEC0 ADRP X21, 0xC26000
	0x037BBEC4 LDRB W8, [X21 + 0x16E]
	0x037BBEC8 MOV W20, W1
	0x037BBECC MOV X19, X0
	0x037BBED0 TBNZ X8, 0x0, 0x37BBEE8
	0x037BBED4 ADRP X0, 0x98C000
	0x037BBED8 LDR X0, [X0 + 0xCF0]
	0x037BBEDC BL 0x1C16CF4
	0x037BBEE0 MOVZ W8, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xC27000
	006 Move W8, [X21+360]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x98D000
	014 Move X0, [X0+3128]
	015 Call 0x1C17CF4
	016 Move X0, 0x98D000
	017 Move X0, [X0+3136]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+360], W8
	021 Compare X19, 0
	022 JumpIfEqual {46}
	023 Move X8, 0x98D000
	024 Move X8, [X8+3136]
	025 Move X0, [X8]
	026 Call 0x1C17F10
	027 Move X1, X31
	028 Move X21, X0
	029 Call Object..ctor, X0
	030 Compare X21, 0
	031 JumpIfEqual {64}
	032 Move X8, 0x98D000
	033 Move X8, [X8+3128]
	034 Move [X21+16], X20
	035 Move [X21+24], X19
	036 Add X0, X20, 32
	037 Move X1, X21
	038 Move X2, [X8]
	039 Call ArrayHelpers.Append, X0, X1
	040 Move X20, [X31+16]
	041 Move X19, [X31+24]
	042 Move X0, X21
	043 Move X30, [X31+32]
	044 Move X21, [X31+40]
	045 Return X0
	046 Move X0, 0x93E000
	047 Move X0, [X0+1320]
	048 Call 0x1C17D08
	049 Call 0x1C17F10
	050 Move X19, X0
	051 Move X0, 0x98D000
	052 Move X0, [X0+3144]
	053 Call 0x1C17D08
	054 Move X1, X0
	055 Move X0, X19
	056 Move X2, X31
	057 Call ArgumentNullException..ctor, X0, X1
	058 Move X0, 0x98D000
	059 Move X0, [X0+3152]
	060 Call 0x1C17D08
	061 Move X1, X0
	062 Move X0, X19
	063 Call 0x1C17DEC
	064 Call 0x1C17F20

Method: System.Void SendInitialMessages()

Disassembly:
	0x037BAFE8 MOV X0, X20
	0x037BAFEC BL 0x3EB1AD0
	0x037BAFF0 LDR X19, [X0]
	0x037BAFF4 BL 0x3EB1AE0
	0x037BAFF8 LDR X1, [X21]
	0x037BAFFC ADD X0, X31, 0x0

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call InputRemoting.SendAllGeneratedLayouts, X0
	005 Move X0, X19
	006 Move X30, [X31+16]
	007 Move X19, [X31+24]
	008 Call InputRemoting.SendAllDevices, X0
	009 Return 

Method: System.Void SendAllGeneratedLayouts()

Disassembly:
	0x037BBEEC CBZ X8, 0x37BBF20
	0x037BBEF0 LDR W9, [X8 + 0x18]
	0x037BBEF4 CMP W9, 0x1
	0x037BBEF8 B.LT 0x37BBF20
	0x037BBEFC MOV W0, W31
	0x037BBF00 MOVZ W10, 0x18
	0x037BBF04 SMADDL X11, X0, X10, X8
	0x037BBF08 LDR W11, [X11 + 0x20]
	0x037BBF0C CMP W11, W20
	0x037BBF10 B.EQ 0x37BBF48
	0x037BBF14 ADD W0, W0, 0x1
	0x037BBF18 CMP W9, W0
	0x037BBF1C B.NE 0x37BBF04
	0x037BBF20 ADRP X8, 0x98C000
	0x037BBF24 LDR X8, [X8 + 0xCF0]
	0x037BBF28 ADD X1, X31, 0x8
	0x037BBF2C MOV X0, X19
	0x037BBF30 STR W20, [X31 + 0x8]
	0x037BBF34 LDR X2, [X8]
	0x037BBF38 STUR X31, [X31 + 0x14]
	0x037BBF3C STUR X31, [X31 + 0xC]
	0x037BBF40 STR W31, [X31 + 0x1C]
	0x037BBF44 BL 0x2173758
	0x037BBF48 LDP X20, X19, [X31 + 0x30]
	0x037BBF4C LDP X30, X21, [X31 + 0x20]
	0x037BBF50 ADD X31, X31, 0x40
	0x037BBF54 RET
	0x037BBF58 SUB X31, X31, 0x40
	0x037BBF5C STR X30, [X31 + 0x10]
	0x037BBF60 STP X22, X21, [X31 + 0x20]
	0x037BBF64 STP X20, X19, [X31 + 0x30]
	0x037BBF68 ADRP X22, 0xC26000
	0x037BBF6C ADRP X21, 0x938000
	0x037BBF70 ADRP X20, 0x98C000
	0x037BBF74 LDRB W8, [X22 + 0x16F]
	0x037BBF78 LDR X21, [X21 + 0x758]
	0x037BBF7C LDR X20, [X20 + 0xCF8]
	0x037BBF80 MOV W19, W0
	0x037BBF84 TBNZ X8, 0x0, 0x37BBFA8
	0x037BBF88 ADRP X0, 0x938000
	0x037BBF8C LDR X0, [X0 + 0x758]
	0x037BBF90 BL 0x1C16CF4
	0x037BBF94 ADRP X0, 0x98C000
	0x037BBF98 LDR X0, [X0 + 0xCF8]
	0x037BBF9C BL 0x1C16CF4
	0x037BBFA0 MOVZ W8, 0x1
	0x037BBFA4 STRB W8, [X22 + 0x16F]
	0x037BBFA8 LDR X0, [X21]
	0x037BBFAC ADD X1, X31, 0x1C
	0x037BBFB0 STR W19, [X31 + 0x1C]
	0x037BBFB4 BL 0x1C16E04
	0x037BBFB8 LDR X8, [X20]
	0x037BBFBC MOV X1, X0
	0x037BBFC0 MOV X2, X31
	0x037BBFC4 MOV X0, X8
	0x037BBFC8 BL 0x321EFD0
	0x037BBFCC MOV X1, X0
	0x037BBFD0 ADD X0, X31, 0x0
	0x037BBFD4 MOV X2, X31
	0x037BBFD8 STP X31, X31, [X31]
	0x037BBFDC BL 0x3757420
	0x037BBFE0 LDP X0, X1, [X31]
	0x037BBFE4 LDP X20, X19, [X31 + 0x30]
	0x037BBFE8 LDP X22, X21, [X31 + 0x20]
	0x037BBFEC LDR X30, [X31 + 0x10]
	0x037BBFF0 ADD X31, X31, 0x40
	0x037BBFF4 RET
	0x037BBFF8 STR X30, [X31 - 0x10]!
	0x037BBFFC LDR X8, [X0 + 0x28]
	0x037BC000 CBZ X8, 0x37BC064
	0x037BC004 LDR W9, [X8 + 0x18]
	0x037BC008 CMP W9, W2
	0x037BC00C B.LS 0x37BC068
	0x037BC010 MOVZ W9, 0x18
	0x037BC014 SMADDL X8, X2, X9, X8
	0x037BC018 LDR X8, [X8 + 0x30]
	0x037BC01C CBZ X8, 0x37BC050
	0x037BC020 LDR W9, [X8 + 0x18]
	0x037BC024 CMP W9, 0x1
	0x037BC028 B.LT 0x37BC050
	0x037BC02C MOV W10, W31
	0x037BC030 SXTW X11, W10
	0x037BC034 ADD X11, X8, X11, 0x6, LSL
	0x037BC038 LDR W12, [X11 + 0x20]
	0x037BC03C CMP W12, W1

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X20, 0xC27000
	007 Move W8, [X20+361]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {30}
	013 Move X0, 0x98D000
	014 Move X0, [X0+3160]
	015 Call 0x1C17CF4
	016 Move X0, 0x98D000
	017 Move X0, [X0+3168]
	018 Call 0x1C17CF4
	019 Move X0, 0x98D000
	020 Move X0, [X0+3176]
	021 Call 0x1C17CF4
	022 Move X0, 0x98D000
	023 Move X0, [X0+3184]
	024 Call 0x1C17CF4
	025 Move X0, 0x98D000
	026 Move X0, [X0+3192]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X20+361], W8
	030 NotImplemented "Instruction MOVI not yet implemented."
	031 Move [X31+16], V0
	032 Move [X31+24], V0
	033 Move [X31], V0
	034 Move X8, [X19+24]
	035 Compare X8, 0
	036 JumpIfEqual {72}
	037 Move X0, [X8+40]
	038 Compare X0, 0
	039 JumpIfEqual {72}
	040 Move X8, 0x98D000
	041 Move X8, [X8+3160]
	042 Move X20, 0x98D000
	043 Move X21, 0x98D000
	044 Move X1, [X8]
	045 Move X20, [X20+3176]
	046 Move X21, [X21+3168]
	047 Add X8, X31, 0
	048 Call Dictionary`2<InternedString, Object>.GetEnumerator, X0
	049 Move X1, [X20]
	050 Add X0, X31, 0
	051 Call Enumerator<InternedString, Object>.MoveNext, X0
	052 Move TEMP, X0
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfNotEqual {63}
	056 Move X0, [X31+16]
	057 Move X1, [X31+24]
	058 Move X2, X31
	059 Call InternedString.op_Implicit, X0
	060 Move X1, X0
	061 Move X0, X19
	062 Call InputRemoting.SendLayout, X0, X1
	063 Move X1, [X21]
	064 Add X0, X31, 0
	065 Call Enumerator<InternedString, Object>.Dispose, X0
	066 Move X20, [X31+64]
	067 Move X19, [X31+72]
	068 Move X30, [X31+48]
	069 Move X21, [X31+56]
	070 Add X31, X31, 80
	071 Return 
	072 Call 0x1C17F20
	073 Move X20, X0
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move X0, X20
	076 Call 0x3EB2AD0
	077 Move X19, [X0]
	078 Call 0x3EB2AE0
	079 Move X1, [X21]
	080 Add X0, X31, 0
	081 Call Enumerator<InternedString, Object>.Dispose, X0
	082 Compare X19, 0
	083 JumpIfEqual {66}
	084 Move X0, X19
	085 Call 0x1C17F18
	086 Move X19, X31
	087 Move X20, X0
	088 Move X1, [X21]
	089 Add X0, X31, 0
	090 Call Enumerator<InternedString, Object>.Dispose, X0
	091 Compare X19, 0
	092 JumpIfNotEqual {95}
	093 Move X0, X20
	094 Call 0x1D2D690
	095 Move X0, X19
	096 Call 0x1C17F18
	097 Call 0x1991590

Method: System.Void SendLayout(System.String layoutName)

Disassembly:
	0x037BC1A4 LDR X0, [X19 + 0x18]
	0x037BC1A8 CBZ X0, 0x37BC208
	0x037BC1AC LDR W1, [X24]
	0x037BC1B0 BL 0x37BC094
	0x037BC1B4 CBZ X0, 0x37BC1CC
	0x037BC1B8 MOV X1, X0
	0x037BC1BC LDR X0, [X19 + 0x18]
	0x037BC1C0 CBZ X0, 0x37BC208
	0x037BC1C4 MOV W2, W31
	0x037BC1C8 BL 0x37BC210
	0x037BC1CC LDR W8, [X22 + 0x18]
	0x037BC1D0 ADD X23, X23, 0x1
	0x037BC1D4 ADD X24, X24, 0x40
	0x037BC1D8 CMP X23, W8, SXTW
	0x037BC1DC B.LT 0x37BC19C
	0x037BC1E0 ADRP X8, 0x98B000
	0x037BC1E4 LDR X8, [X8 + 0xD08]
	0x037BC1E8 MOV X0, X20
	0x037BC1EC MOV W1, W21
	0x037BC1F0 LDP X20, X19, [X31 + 0x30]
	0x037BC1F4 LDR X2, [X8]
	0x037BC1F8 LDP X22, X21, [X31 + 0x20]
	0x037BC1FC LDP X24, X23, [X31 + 0x10]
	0x037BC200 LDR X30, [X31], #0x40
	0x037BC204 B 0x2177388
	0x037BC208 BL 0x1C16F20
	0x037BC20C BL 0x1C16F28
	0x037BC210 STR X30, [X31 - 0x40]!
	0x037BC214 STP X24, X23, [X31 + 0x10]
	0x037BC218 STP X22, X21, [X31 + 0x20]
	0x037BC21C STP X20, X19, [X31 + 0x30]
	0x037BC220 ADRP X21, 0xC25000
	0x037BC224 LDRB W8, [X21 + 0x1E7]
	0x037BC228 MOV W22, W2
	0x037BC22C MOV X19, X1
	0x037BC230 MOV X20, X0
	0x037BC234 TBNZ X8, 0x0, 0x37BC2C4
	0x037BC238 ADRP X0, 0x938000
	0x037BC23C LDR X0, [X0 + 0xE70]
	0x037BC240 BL 0x1C16CF4
	0x037BC244 ADRP X0, 0x98B000
	0x037BC248 LDR X0, [X0 + 0xD10]
	0x037BC24C BL 0x1C16CF4
	0x037BC250 ADRP X0, 0x989000
	0x037BC254 LDR X0, [X0 + 0x338]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+64], X30
	003 Move [X31+72], X21
	004 Move [X31+80], X20
	005 Move [X31+88], X19
	006 Move X21, 0xC26000
	007 Move W8, [X21+362]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x98C000
	015 Move X0, [X0+3200]
	016 Call 0x1C17CF4
	017 Move X0, 0x98C000
	018 Move X0, [X0+3208]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+362], W8
	022 Move [X31+32], X31
	023 Move [X31+40], X31
	024 Move [X31+48], X31
	025 Move X8, [X19+32]
	026 Compare X8, 0
	027 JumpIfEqual {50}
	028 Add X8, X31, 8
	029 Move X0, X19
	030 Move X1, X20
	031 Call NewLayoutMsg.Create, X0, X1
	032 NotImplemented "Instruction LDUR not yet implemented."
	033 Move X8, [X31+24]
	034 Move [X31+2], V0
	035 Move W9, [X31+32]
	036 Move [X31+48], X8
	037 Compare W9, 0
	038 JumpIfEqual {50}
	039 Move X8, 0x98C000
	040 Move X8, [X8+3208]
	041 Add X0, X31, 32
	042 Move X1, [X8]
	043 Call Nullable`1<Message>.get_Value, X0
	044 Move X2, X0
	045 Move X3, X1
	046 Move X0, X19
	047 Move X1, X2
	048 Move X2, X3
	049 Call InputRemoting.Send, X0, X1
	050 Move X20, [X31+80]
	051 Move X19, [X31+88]
	052 Move X30, [X31+64]
	053 Move X21, [X31+72]
	054 Add X31, X31, 96
	055 Return 

Method: System.Void SendAllDevices()

Disassembly:
	0x037BC040 B.EQ 0x37BC05C
	0x037BC044 ADD W10, W10, 0x1
	0x037BC048 CMP W9, W10
	0x037BC04C B.NE 0x37BC030
	0x037BC050 MOV W0, W31
	0x037BC054 LDR X30, [X31], #0x10
	0x037BC058 RET
	0x037BC05C LDR W0, [X11 + 0x24]
	0x037BC060 B 0x37BC054
	0x037BC064 BL 0x1C16F20
	0x037BC068 BL 0x1C16F28
	0x037BC06C STP X30, X19, [X31 - 0x10]!
	0x037BC070 MOV X19, X0
	0x037BC074 BL 0x37BBFF8
	0x037BC078 LDR X8, [X19 + 0x18]
	0x037BC07C CBZ X8, 0x37BC090
	0x037BC080 MOV W1, W0
	0x037BC084 MOV X0, X8
	0x037BC088 LDP X30, X19, [X31], #0x10
	0x037BC08C B 0x37BC094
	0x037BC090 BL 0x1C16F20
	0x037BC094 SUB X31, X31, 0x30
	0x037BC098 STP X30, X21, [X31 + 0x10]
	0x037BC09C STP X20, X19, [X31 + 0x20]
	0x037BC0A0 ADRP X21, 0xC25000
	0x037BC0A4 LDRB W8, [X21 + 0x1EA]
	0x037BC0A8 MOV W19, W1
	0x037BC0AC MOV X20, X0
	0x037BC0B0 TBNZ X8, 0x0, 0x37BC0C8
	0x037BC0B4 ADRP X0, 0x98B000
	0x037BC0B8 LDR X0, [X0 + 0xD00]
	0x037BC0BC BL 0x1C16CF4
	0x037BC0C0 MOVZ W8, 0x1
	0x037BC0C4 STRB W8, [X21 + 0x1EA]
	0x037BC0C8 STR X31, [X31 + 0x8]
	0x037BC0CC LDR X0, [X20 + 0x80]
	0x037BC0D0 CBZ X0, 0x37BC108
	0x037BC0D4 ADRP X8, 0x98B000
	0x037BC0D8 LDR X8, [X8 + 0xD00]
	0x037BC0DC ADD X2, X31, 0x8
	0x037BC0E0 MOV W1, W19
	0x037BC0E4 LDR X3, [X8]
	0x037BC0E8 BL 0x2A150AC
	0x037BC0EC LDR X8, [X31 + 0x8]
	0x037BC0F0 LDP X20, X19, [X31 + 0x20]
	0x037BC0F4 LDP X30, X21, [X31 + 0x10]
	0x037BC0F8 ANDS W31, W0, 0x1
	0x037BC0FC CSEL X0, X8, X31, NE
	0x037BC100 ADD X31, X31, 0x30
	0x037BC104 RET
	0x037BC108 BL 0x1C16F20
	0x037BC10C LDR X0, [X0 + 0x18]
	0x037BC110 RET
	0x037BC114 STR X30, [X31 - 0x40]!
	0x037BC118 STP X24, X23, [X31 + 0x10]
	0x037BC11C STP X22, X21, [X31 + 0x20]
	0x037BC120 STP X20, X19, [X31 + 0x30]
	0x037BC124 ADRP X21, 0xC25000
	0x037BC128 LDRB W8, [X21 + 0x170]
	0x037BC12C MOV W20, W1
	0x037BC130 MOV X19, X0
	0x037BC134 TBNZ X8, 0x0, 0x37BC14C
	0x037BC138 ADRP X0, 0x98B000
	0x037BC13C LDR X0, [X0 + 0xD08]
	0x037BC140 BL 0x1C16CF4
	0x037BC144 MOVZ W8, 0x1
	0x037BC148 STRB W8, [X21 + 0x170]
	0x037BC14C MOV X0, X19
	0x037BC150 MOV W1, W20
	0x037BC154 BL 0x37BBEB4
	0x037BC158 MOV X20, X19
	0x037BC15C LDR X8, [X20 + 0x28]!
	0x037BC160 CBZ X8, 0x37BC208
	0x037BC164 LDR W9, [X8 + 0x18]
	0x037BC168 MOV W21, W0
	0x037BC16C CMP W0, W9
	0x037BC170 B.CS 0x37BC20C
	0x037BC174 MOVZ W9, 0x18
	0x037BC178 SMADDL X8, X21, X9, X8
	0x037BC17C LDR X22, [X8 + 0x30]
	0x037BC180 CBZ X22, 0x37BC1E0
	0x037BC184 LDR X8, [X22 + 0x18]
	0x037BC188 CMP W8, 0x1
	0x037BC18C B.LT 0x37BC1E0
	0x037BC190 MOV X23, X31
	0x037BC194 AND X8, X8, 0x0
	0x037BC198 ADD X24, X22, 0x24
	0x037BC19C CMP X23, W8, UXTW
	0x037BC1A0 B.CS 0x37BC20C

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+56], X23
	004 Move [X31+64], X22
	005 Move [X31+72], X21
	006 Move [X31+80], X20
	007 Move [X31+88], X19
	008 Move X20, 0xC26000
	009 Move W8, [X20+363]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {29}
	015 Move X0, 0x960000
	016 Move X0, [X0+3856]
	017 Call 0x1C17CF4
	018 Move X0, 0x960000
	019 Move X0, [X0+3864]
	020 Call 0x1C17CF4
	021 Move X0, 0x960000
	022 Move X0, [X0+3872]
	023 Call 0x1C17CF4
	024 Move X0, 0x960000
	025 Move X0, [X0+3888]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X20+363], W8
	029 Move [X31+8], X31
	030 Move [X31+16], X31
	031 Move [X31+24], X31
	032 Move X0, [X19+24]
	033 Compare X0, 0
	034 JumpIfEqual {75}
	035 Move X23, 0x960000
	036 Move X21, 0x960000
	037 Move X22, 0x960000
	038 Move X20, 0x960000
	039 Move X23, [X23+3888]
	040 Move X21, [X21+3864]
	041 Move X22, [X22+3872]
	042 Move X20, [X20+3856]
	043 Call InputManager.get_devices, X0
	044 Move X9, [X23]
	045 Move [X31+32], X0
	046 Move [X31+40], X1
	047 Add X8, X31, 8
	048 Add X0, X31, 32
	049 Move X1, X9
	050 Call ReadOnlyArray`1<Object>.GetEnumerator, X0
	051 Move X1, [X21]
	052 Add X0, X31, 8
	053 Call Enumerator<Object>.MoveNext, X0
	054 Move TEMP, X0
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfNotEqual {64}
	058 Move X1, [X22]
	059 Add X0, X31, 8
	060 Call Enumerator<Object>.get_Current, X0
	061 Move X1, X0
	062 Move X0, X19
	063 Call InputRemoting.SendDevice, X0, X1
	064 Move X1, [X20]
	065 Add X0, X31, 8
	066 Call Enumerator<Object>.Dispose, X0
	067 Move X20, [X31+80]
	068 Move X19, [X31+88]
	069 Move X22, [X31+64]
	070 Move X21, [X31+72]
	071 Move X30, [X31+48]
	072 Move X23, [X31+56]
	073 Add X31, X31, 96
	074 Return 
	075 Call 0x1C17F20
	076 Move X21, X20
	077 Move X19, X0
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Move X0, X19
	080 Call 0x3EB2AD0
	081 Move X20, [X0]
	082 Call 0x3EB2AE0
	083 Move X1, [X21]
	084 Add X0, X31, 8
	085 Call Enumerator<Object>.Dispose, X0
	086 Compare X20, 0
	087 JumpIfEqual {67}
	088 Move X0, X20
	089 Call 0x1C17F18
	090 Move X20, X31
	091 Move X19, X0
	092 Move X1, [X21]
	093 Add X0, X31, 8
	094 Call Enumerator<Object>.Dispose, X0
	095 Compare X20, 0
	096 JumpIfNotEqual {99}
	097 Move X0, X19
	098 Call 0x1D2D690
	099 Move X0, X20
	100 Call 0x1C17F18
	101 Call 0x1991590

Method: System.Void SendDevice(UnityEngine.InputSystem.InputDevice device)

Disassembly:
	0x037BC608 BL 0x1C16DFC
	0x037BC60C MOV X0, X19
	0x037BC610 MOV X1, X31
	0x037BC614 BL 0x376E8D8
	0x037BC618 CBZ X0, 0x37BC62C
	0x037BC61C LDR X8, [X0]
	0x037BC620 LDR X9, [X8 + 0x248]
	0x037BC624 LDR X1, [X8 + 0x250]
	0x037BC628 BLR X9
	0x037BC62C LDP X20, X19, [X31 + 0x30]
	0x037BC630 LDP X22, X21, [X31 + 0x20]
	0x037BC634 LDP X24, X23, [X31 + 0x10]
	0x037BC638 LDR X30, [X31], #0x40
	0x037BC63C RET
	0x037BC640 BL 0x1C16F28
	0x037BC644 BL 0x1C16F20
	0x037BC648 ADRP X0, 0x93C000
	0x037BC64C LDR X0, [X0 + 0x528]
	0x037BC650 BL 0x1C16D08
	0x037BC654 BL 0x1C16F10
	0x037BC658 MOV X19, X0
	0x037BC65C ADRP X0, 0x95F000
	0x037BC660 LDR X0, [X0 + 0xD20]
	0x037BC664 BL 0x1C16D08
	0x037BC668 MOV X1, X0
	0x037BC66C MOV X0, X19
	0x037BC670 MOV X2, X31
	0x037BC674 BL 0x330E100
	0x037BC678 ADRP X0, 0x98B000
	0x037BC67C LDR X0, [X0 + 0xD48]
	0x037BC680 BL 0x1C16D08
	0x037BC684 MOV X1, X0
	0x037BC688 MOV X0, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X0+32]
	005 Compare X8, 0
	006 JumpIfEqual {18}
	007 Move X20, X1
	008 Compare X1, 0
	009 JumpIfEqual {42}
	010 Move X19, X0
	011 Move X0, X20
	012 Move X1, X31
	013 Call InputDevice.get_remote, X0
	014 Move TEMP, X0
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfNotEqual {22}
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Return 
	022 Move X0, X20
	023 Call NewDeviceMsg.Create, X0
	024 Move X2, X0
	025 Move X3, X1
	026 Move X0, X19
	027 Move X1, X2
	028 Move X2, X3
	029 Call InputRemoting.Send, X0, X1
	030 Move X0, X20
	031 Call NewEventsMsg.CreateStateEvent, X0
	032 Move X2, X0
	033 Move X0, X19
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X3, X1
	037 Move X1, X2
	038 Move X2, X3
	039 Move X30, [X31+32]
	040 Call InputRemoting.Send, X0, X1
	041 Return 
	042 Call 0x1C17F20

Method: System.Void SendEvent(UnityEngine.InputSystem.LowLevel.InputEventPtr eventPtr, UnityEngine.InputSystem.InputDevice device)

Disassembly:
	0x037BC97C MOV X0, X19
	0x037BC980 MOV W5, W31
	0x037BC984 STP V0, V1, [X31]
	0x037BC988 BL 0x37C2CF0
	0x037BC98C LDR X0, [X21]
	0x037BC990 LDR W8, [X0 + 0xE0]
	0x037BC994 CBNZ W8, 0x37BC99C
	0x037BC998 BL 0x1C16DFC
	0x037BC99C ADD X0, X31, 0x98
	0x037BC9A0 MOV X1, X31
	0x037BC9A4 BL 0x3755C40
	0x037BC9A8 TBNZ X0, 0x0, 0x37BC9C8
	0x037BC9AC LDP X0, X1, [X31 + 0x50]
	0x037BC9B0 MOV X2, X31
	0x037BC9B4 BL 0x37577E0
	0x037BC9B8 LDR X2, [X31 + 0x98]
	0x037BC9BC MOV X1, X0
	0x037BC9C0 MOV X0, X19
	0x037BC9C4 BL 0x37C3154
	0x037BC9C8 LDP X20, X19, [X31 + 0xE0]
	0x037BC9CC LDP X22, X21, [X31 + 0xD0]
	0x037BC9D0 LDP X24, X23, [X31 + 0xC0]
	0x037BC9D4 LDP X26, X25, [X31 + 0xB0]
	0x037BC9D8 LDP X28, X27, [X31 + 0xA0]
	0x037BC9DC LDR X30, [X31 + 0x90]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X0+32]
	005 Compare X8, 0
	006 JumpIfEqual {18}
	007 Move X19, X0
	008 Move X20, X1
	009 Compare X2, 0
	010 JumpIfEqual {22}
	011 Move X0, X2
	012 Move X1, X31
	013 Call InputDevice.get_remote, X0
	014 Move TEMP, X0
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfNotEqual {22}
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Return 
	022 Move W1, 1
	023 Move X0, X20
	024 Call NewEventsMsg.Create, X0, X1
	025 Move X2, X0
	026 Move X0, X19
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X3, X1
	030 Move X1, X2
	031 Move X2, X3
	032 Move X30, [X31+32]
	033 Call InputRemoting.Send, X0, X1
	034 Return 

Method: System.Void SendDeviceChange(UnityEngine.InputSystem.InputDevice device, UnityEngine.InputSystem.InputDeviceChange change)

Disassembly:
	0x037BCAB4 MOV X19, X0
	0x037BCAB8 ADRP X0, 0x93F000
	0x037BCABC LDR X0, [X0 + 0x578]
	0x037BCAC0 BL 0x1C16D08
	0x037BCAC4 BL 0x1C16F10
	0x037BCAC8 MOV X20, X0
	0x037BCACC ADRP X0, 0x989000
	0x037BCAD0 LDR X0, [X0 + 0xD8]
	0x037BCAD4 BL 0x1C16D08
	0x037BCAD8 MOV X2, X0
	0x037BCADC MOV X0, X20
	0x037BCAE0 MOV X1, X19
	0x037BCAE4 MOV X3, X31
	0x037BCAE8 BL 0x330E16C
	0x037BCAEC B 0x37BCBAC
	0x037BCAF0 LDR V0, [X31 + 0x5]
	0x037BCAF4 ADRP X19, 0x962000
	0x037BCAF8 STR V0, [X31 + 0x3]
	0x037BCAFC LDR X19, [X19 + 0x510]
	0x037BCB00 MOV X0, X19
	0x037BCB04 BL 0x1C16D08
	0x037BCB08 ADD X1, X31, 0x30
	0x037BCB0C BL 0x1C16E04
	0x037BCB10 MOV X20, X0
	0x037BCB14 ADRP X0, 0x98B000
	0x037BCB18 LDR X0, [X0 + 0xDA0]
	0x037BCB1C BL 0x1C16D08
	0x037BCB20 MOV X1, X20
	0x037BCB24 MOV X2, X31
	0x037BCB28 BL 0x321EFD0
	0x037BCB2C LDR V0, [X31 + 0x5]
	0x037BCB30 MOV X20, X0
	0x037BCB34 MOV X0, X19
	0x037BCB38 STR V0, [X31 + 0x2]
	0x037BCB3C BL 0x1C16D08
	0x037BCB40 ADD X1, X31, 0x20
	0x037BCB44 BL 0x1C16E04
	0x037BCB48 MOV X19, X0
	0x037BCB4C ADRP X0, 0x98B000
	0x037BCB50 LDR X0, [X0 + 0xDA8]
	0x037BCB54 BL 0x1C16D08
	0x037BCB58 MOV X1, X19
	0x037BCB5C MOV X2, X31
	0x037BCB60 BL 0x321EFD0
	0x037BCB64 MOV X19, X0
	0x037BCB68 ADRP X0, 0x98B000
	0x037BCB6C LDR X0, [X0 + 0xDB0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X0+32]
	006 Compare X8, 0
	007 JumpIfEqual {20}
	008 Move X20, X1
	009 Compare X1, 0
	010 JumpIfEqual {54}
	011 Move X19, X0
	012 Move X0, X20
	013 Move X1, X31
	014 Move W21, W2
	015 Call InputDevice.get_remote, X0
	016 Move TEMP, X0
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfNotEqual {25}
	020 Move X20, [X31+16]
	021 Move X19, [X31+24]
	022 Move X30, [X31+32]
	023 Move X21, [X31+40]
	024 Return 
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X9, -46284800
	027 Move W8, W21
	028 Add X9, X9, 2375
	029 NotImplemented "Instruction ADR not yet implemented."
	030 Move W11, [X9]
	031 Add X10, X10, X11
	032 CallNoReturn X10
	033 Move X0, X20
	034 Call NewDeviceMsg.Create, X0
	035 Move X0, X20
	036 Call ChangeUsageMsg.Create, X0
	037 Move X0, X20
	038 Call RemoveDeviceMsg.Create, X0
	039 Move X0, X20
	040 Move W1, W31
	041 Move W1, 1
	042 Move X0, X20
	043 Call NewEventsMsg.CreateResetEvent, X0, X1
	044 Move X3, X0
	045 Move X0, X19
	046 Move X20, [X31+16]
	047 Move X19, [X31+24]
	048 Move X2, X1
	049 Move X1, X3
	050 Move X30, [X31+32]
	051 Move X21, [X31+40]
	052 Call InputRemoting.Send, X0, X1
	053 Return 
	054 Call 0x1C17F20

Method: System.Void SendLayoutChange(System.String layout, UnityEngine.InputSystem.InputControlLayoutChange change)

Disassembly:
	0x037BCDB0 MOV X19, X0
	0x037BCDB4 ADRP X0, 0x95F000
	0x037BCDB8 LDR X0, [X0 + 0xD20]
	0x037BCDBC BL 0x1C16D08
	0x037BCDC0 MOV X1, X0
	0x037BCDC4 MOV X0, X19
	0x037BCDC8 MOV X2, X31
	0x037BCDCC BL 0x330E100
	0x037BCDD0 B 0x37BCE18
	0x037BCDD4 ADRP X0, 0x93F000
	0x037BCDD8 LDR X0, [X0 + 0x578]
	0x037BCDDC BL 0x1C16D08
	0x037BCDE0 BL 0x1C16F10
	0x037BCDE4 MOV X19, X0
	0x037BCDE8 ADRP X0, 0x98B000
	0x037BCDEC LDR X0, [X0 + 0xDC8]
	0x037BCDF0 BL 0x1C16D08
	0x037BCDF4 MOV X20, X0
	0x037BCDF8 ADRP X0, 0x98B000
	0x037BCDFC LDR X0, [X0 + 0xDD0]
	0x037BCE00 BL 0x1C16D08
	0x037BCE04 MOV X2, X0
	0x037BCE08 MOV X0, X19
	0x037BCE0C MOV X1, X20
	0x037BCE10 MOV X3, X31
	0x037BCE14 BL 0x330E16C
	0x037BCE18 ADRP X0, 0x98B000
	0x037BCE1C LDR X0, [X0 + 0xDD8]
	0x037BCE20 BL 0x1C16D08
	0x037BCE24 MOV X1, X0
	0x037BCE28 MOV X0, X19
	0x037BCE2C BL 0x1C16DEC
	0x037BCE30 STR X30, [X31 - 0x20]!
	0x037BCE34 STP X20, X19, [X31 + 0x10]
	0x037BCE38 ADRP X19, 0xC25000
	0x037BCE3C ADRP X20, 0x98B000
	0x037BCE40 LDRB W8, [X19 + 0x179]
	0x037BCE44 LDR X20, [X20 + 0xCD0]
	0x037BCE48 TBNZ X8, 0x0, 0x37BCE60
	0x037BCE4C ADRP X0, 0x98B000
	0x037BCE50 LDR X0, [X0 + 0xCD0]
	0x037BCE54 BL 0x1C16CF4
	0x037BCE58 MOVZ W8, 0x1
	0x037BCE5C STRB W8, [X19 + 0x179]
	0x037BCE60 LDR X0, [X20]
	0x037BCE64 BL 0x1C16F10
	0x037BCE68 MOV X1, X31
	0x037BCE6C MOV X19, X0
	0x037BCE70 BL 0x33BDD8C
	0x037BCE74 LDR X8, [X20]
	0x037BCE78 LDR X8, [X8 + 0xB8]
	0x037BCE7C STR X19, [X8]
	0x037BCE80 LDP X20, X19, [X31 + 0x10]
	0x037BCE84 LDR X30, [X31], #0x20
	0x037BCE88 RET
	0x037BCE8C MOV X1, X31
	0x037BCE90 B 0x33BDD8C
	0x037BCE94 SUB X31, X31, 0x20
	0x037BCE98 STP X2, X30, [X31 + 0x8]
	0x037BCE9C STR X1, [X31]
	0x037BCEA0 ADD X0, X31, 0x0
	0x037BCEA4 MOV X1, X31
	0x037BCEA8 BL 0x37565F4
	0x037BCEAC LDR X30, [X31 + 0x10]
	0x037BCEB0 ADD X31, X31, 0x20

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+64], X30
	003 Move [X31+80], X22
	004 Move [X31+88], X21
	005 Move [X31+96], X20
	006 Move [X31+104], X19
	007 Move X22, 0xC26000
	008 Move W8, [X22+364]
	009 Move W21, W2
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x98C000
	017 Move X0, [X0+3200]
	018 Call 0x1C17CF4
	019 Move X0, 0x98C000
	020 Move X0, [X0+3208]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+364], W8
	024 Move [X31+32], X31
	025 Move [X31+40], X31
	026 Move [X31+48], X31
	027 Move X8, [X19+32]
	028 Compare X8, 0
	029 JumpIfEqual {73}
	030 Move X8, [X19+24]
	031 Compare X8, 0
	032 JumpIfEqual {80}
	033 Add X0, X31, 8
	034 Move X1, X20
	035 Move X2, X31
	036 Add X22, X8, 24
	037 Move [X31+8], X31
	038 Move [X31+16], X31
	039 Call InternedString..ctor, X0, X1
	040 Move X1, [X31+8]
	041 Move X2, [X31+16]
	042 Move X0, X22
	043 Move X3, X31
	044 Call Collection.IsGeneratedLayout, X0, X1
	045 Move TEMP, X0
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfNotEqual {73}
	049 Or W8, W21, 2
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Add X8, X31, 8
	052 Move X0, X19
	053 Move X1, X20
	054 Call NewLayoutMsg.Create, X0, X1
	055 NotImplemented "Instruction LDUR not yet implemented."
	056 Move X8, [X31+24]
	057 Move [X31+2], V0
	058 Move W9, [X31+32]
	059 Move [X31+48], X8
	060 Compare W9, 0
	061 JumpIfEqual {73}
	062 Move X8, 0x98C000
	063 Move X8, [X8+3208]
	064 Add X0, X31, 32
	065 Move X1, [X8]
	066 Call Nullable`1<Message>.get_Value, X0
	067 Move X2, X0
	068 Move X3, X1
	069 Move X0, X19
	070 Move X1, X2
	071 Move X2, X3
	072 Call InputRemoting.Send, X0, X1
	073 Move X20, [X31+96]
	074 Move X19, [X31+104]
	075 Move X22, [X31+80]
	076 Move X21, [X31+88]
	077 Move X30, [X31+64]
	078 Add X31, X31, 112
	079 Return 
	080 Call 0x1C17F20

Method: System.Void Send(UnityEngine.InputSystem.InputRemoting/Message msg)

Disassembly:
	0x037BC49C BL 0x1C16E00
	0x037BC4A0 CBZ X0, 0x37BC528
	0x037BC4A4 ADRP X8, 0x938000
	0x037BC4A8 LDR X8, [X8 + 0xE70]
	0x037BC4AC MOV X22, X0
	0x037BC4B0 LDR X0, [X8]
	0x037BC4B4 BL 0x1C16F10
	0x037BC4B8 LDR X8, [X22]
	0x037BC4BC LDR X1, [X23]
	0x037BC4C0 MOV X23, X0
	0x037BC4C4 LDRH W9, [X8 + 0x12E]
	0x037BC4C8 CBZ X9, 0x37BC4EC
	0x037BC4CC LDR X10, [X8 + 0xB0]
	0x037BC4D0 ADD X10, X10, 0x8
	0x037BC4D4 LDUR X11, [X10 - 0x8]
	0x037BC4D8 CMP X11, X1
	0x037BC4DC B.EQ 0x37BC4FC
	0x037BC4E0 SUBS X9, X9, 0x1
	0x037BC4E4 ADD X10, X10, 0x10
	0x037BC4E8 B.NE 0x37BC4D4
	0x037BC4EC MOV X0, X22
	0x037BC4F0 MOV W2, W31
	0x037BC4F4 BL 0x1C5C788
	0x037BC4F8 B 0x37BC508
	0x037BC4FC LDRSW X9, [X10]
	0x037BC500 ADD X8, X8, X9, 0x4, LSL
	0x037BC504 ADD X0, X8, 0x138
	0x037BC508 LDR X2, [X0 + 0x8]
	0x037BC50C MOV X0, X23
	0x037BC510 MOV X1, X22
	0x037BC514 MOV X3, X31
	0x037BC518 BL 0x3314368
	0x037BC51C MOV X0, X20
	0x037BC520 MOV X1, X23
	0x037BC524 BL 0x37C2524
	0x037BC528 MOV X0, X19
	0x037BC52C MOV X1, X31
	0x037BC530 BL 0x377AA28
	0x037BC534 TBZ X0, 0x0, 0x37BC5A8
	0x037BC538 LDR W8, [X21]
	0x037BC53C CMP W8, 0x1
	0x037BC540 B.LT 0x37BC584
	0x037BC544 MOV X22, X31
	0x037BC548 LDR X8, [X20 + 0x78]
	0x037BC54C CBZ X8, 0x37BC644
	0x037BC550 LDR W9, [X8 + 0x18]
	0x037BC554 CMP W22, W9
	0x037BC558 B.CS 0x37BC640
	0x037BC55C ADD X8, X8, X22, 0x3, LSL
	0x037BC560 LDR X0, [X8 + 0x20]
	0x037BC564 CBZ X0, 0x37BC644
	0x037BC568 MOV X1, X31
	0x037BC56C BL 0x377AA28
	0x037BC570 TBNZ X0, 0x0, 0x37BC5A8
	0x037BC574 LDR W8, [X21]
	0x037BC578 ADD X22, X22, 0x1
	0x037BC57C CMP W22, W8
	0x037BC580 B.LT 0x37BC548
	0x037BC584 LDR W10, [X20 + 0xA8]
	0x037BC588 AND W9, W10, 0xFFFFFFFB
	0x037BC58C CMP W10, W9
	0x037BC590 B.EQ 0x37BC5A8
	0x037BC594 CMP W8, 0x1
	0x037BC598 STR W9, [X20 + 0xA8]
	0x037BC59C B.LT 0x37BC5A8

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0xC26000
	009 Move W8, [X22+365]
	010 Move X19, X2
	011 Move X20, X1
	012 Move X21, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x98C000
	018 Move X0, [X0+3248]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X22+365], W8
	022 Move X22, [X21+32]
	023 Compare X22, 0
	024 JumpIfEqual {72}
	025 Move W8, [X22+24]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X24, 0x98C000
	028 Move X24, [X24+3248]
	029 Move W23, W31
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Add X8, X22, W23
	032 Move X8, [X8+32]
	033 Compare X8, 0
	034 JumpIfEqual {72}
	035 Move X21, [X8+24]
	036 Compare X21, 0
	037 JumpIfEqual {72}
	038 Move X8, [X21]
	039 Move X1, [X24]
	040 NotImplemented "Instruction LDRH not yet implemented."
	041 Compare X9, 0
	042 JumpIfEqual {49}
	043 Move X10, [X8+176]
	044 Add X10, X10, 8
	045 NotImplemented "Instruction LDUR not yet implemented."
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Subtract X9, X9, 1
	048 Add X10, X10, 16
	049 Move X0, X21
	050 Move W2, W31
	051 Call 0x1C5D788
	052 NotImplemented "Instruction LDRSW not yet implemented."
	053 Add X8, X8, X9
	054 Add X0, X8, 312
	055 Move X8, [X0]
	056 Move X3, [X0+8]
	057 Move X0, X21
	058 Move X1, X20
	059 Move X2, X19
	060 NotImplemented "Instruction BLR not yet implemented."
	061 Move W8, [X22+24]
	062 Add W23, W23, 1
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move X20, [X31+48]
	065 Move X19, [X31+56]
	066 Move X22, [X31+32]
	067 Move X21, [X31+40]
	068 Move X24, [X31+16]
	069 Move X23, [X31+24]
	070 Move X30, [X31+64]
	071 Return 
	072 Call 0x1C17F20
	073 Call 0x1C17F28

Method: System.Int32 FindOrCreateSenderRecord(System.Int32 senderId)

Disassembly:
	0x037BCEB4 RET
	0x037BCEB8 B 0x37C7038
	0x037BCEBC SUB X31, X31, 0x30
	0x037BCEC0 STP X30, X21, [X31 + 0x10]
	0x037BCEC4 STP X20, X19, [X31 + 0x20]
	0x037BCEC8 ADRP X21, 0xC25000
	0x037BCECC LDRB W8, [X21 + 0x1E0]
	0x037BCED0 MOV X19, X1
	0x037BCED4 MOV X20, X0
	0x037BCED8 STP X2, X3, [X31]
	0x037BCEDC TBNZ X8, 0x0, 0x37BCEF4
	0x037BCEE0 ADRP X0, 0x95F000
	0x037BCEE4 LDR X0, [X0 + 0xF28]
	0x037BCEE8 BL 0x1C16CF4
	0x037BCEEC MOVZ W8, 0x1
	0x037BCEF0 STRB W8, [X21 + 0x1E0]
	0x037BCEF4 CBZ X19, 0x37BCF58
	0x037BCEF8 ADD X0, X31, 0x0
	0x037BCEFC MOV X1, X31
	0x037BCF00 BL 0x375F7A0
	0x037BCF04 TBNZ X0, 0x0, 0x37BCF8C
	0x037BCF08 ADRP X21, 0x95F000
	0x037BCF0C LDR X21, [X21 + 0xF28]
	0x037BCF10 MOV X0, X19
	0x037BCF14 MOV X1, X31
	0x037BCF18 BL 0x3772134
	0x037BCF1C LDP X2, X3, [X31]
	0x037BCF20 LDR X4, [X21]
	0x037BCF24 BL 0x223C25C
	0x037BCF28 TBZ X0, 0x0, 0x37BCF48
	0x037BCF2C LDP X1, X2, [X31]
	0x037BCF30 MOV X0, X19
	0x037BCF34 MOV X3, X31
	0x037BCF38 BL 0x377B380
	0x037BCF3C MOV X0, X20
	0x037BCF40 MOV X1, X19
	0x037BCF44 BL 0x37C5478
	0x037BCF48 LDP X20, X19, [X31 + 0x20]
	0x037BCF4C LDP X30, X21, [X31 + 0x10]
	0x037BCF50 ADD X31, X31, 0x30
	0x037BCF54 RET

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+40], X21
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move X21, 0xC26000
	007 Move W8, [X21+366]
	008 Move W20, W1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x98C000
	015 Move X0, [X0+3312]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+366], W8
	019 Add X19, X19, 40
	020 Move X8, [X19]
	021 Compare X8, 0
	022 JumpIfEqual {32}
	023 Move W9, [X8+24]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move W0, W31
	026 Move W10, 24
	027 NotImplemented "Instruction SMADDL not yet implemented."
	028 Move W11, [X11+32]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Add W0, W0, 1
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move X8, 0x98C000
	033 Move X8, [X8+3312]
	034 Add X1, X31, 8
	035 Move X0, X19
	036 Move [X31+8], W20
	037 Move X2, [X8]
	038 Move [X31+20], X31
	039 Move [X31+12], X31
	040 Move [X31+28], W31
	041 Call ArrayHelpers.Append, X0, X1
	042 Move X20, [X31+48]
	043 Move X19, [X31+56]
	044 Move X30, [X31+32]
	045 Move X21, [X31+40]
	046 Add X31, X31, 64
	047 Return X0

Method: UnityEngine.InputSystem.Utilities.InternedString BuildLayoutNamespace(System.Int32 senderId)

Disassembly:
	0x037BCF58 ADRP X0, 0x93C000
	0x037BCF5C LDR X0, [X0 + 0x528]
	0x037BCF60 BL 0x1C16D08
	0x037BCF64 BL 0x1C16F10
	0x037BCF68 MOV X19, X0
	0x037BCF6C ADRP X0, 0x95F000
	0x037BCF70 LDR X0, [X0 + 0xD20]
	0x037BCF74 BL 0x1C16D08
	0x037BCF78 MOV X1, X0
	0x037BCF7C MOV X0, X19
	0x037BCF80 MOV X2, X31
	0x037BCF84 BL 0x330E100
	0x037BCF88 B 0x37BCFD0
	0x037BCF8C ADRP X0, 0x93F000
	0x037BCF90 LDR X0, [X0 + 0x578]
	0x037BCF94 BL 0x1C16D08
	0x037BCF98 BL 0x1C16F10
	0x037BCF9C MOV X19, X0
	0x037BCFA0 ADRP X0, 0x98B000
	0x037BCFA4 LDR X0, [X0 + 0xDC8]
	0x037BCFA8 BL 0x1C16D08
	0x037BCFAC MOV X20, X0
	0x037BCFB0 ADRP X0, 0x98B000
	0x037BCFB4 LDR X0, [X0 + 0xDD0]
	0x037BCFB8 BL 0x1C16D08
	0x037BCFBC MOV X2, X0
	0x037BCFC0 MOV X0, X19
	0x037BCFC4 MOV X1, X20
	0x037BCFC8 MOV X3, X31
	0x037BCFCC BL 0x330E16C
	0x037BCFD0 ADRP X0, 0x98B000
	0x037BCFD4 LDR X0, [X0 + 0xDE0]
	0x037BCFD8 BL 0x1C16D08
	0x037BCFDC MOV X1, X0
	0x037BCFE0 MOV X0, X19
	0x037BCFE4 BL 0x1C16DEC
	0x037BCFE8 STR X30, [X31 - 0x20]!
	0x037BCFEC STP X20, X19, [X31 + 0x10]
	0x037BCFF0 ADRP X19, 0xC25000
	0x037BCFF4 ADRP X20, 0x98B000

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+32], X22
	004 Move [X31+40], X21
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move X22, 0xC26000
	008 Move X21, 0x938000
	009 Move X20, 0x98C000
	010 Move W8, [X22+367]
	011 Move X21, [X21+1880]
	012 Move X20, [X20+3320]
	013 Move W19, W0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x938000
	019 Move X0, [X0+1880]
	020 Call 0x1C17CF4
	021 Move X0, 0x98C000
	022 Move X0, [X0+3320]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X22+367], W8
	026 Move X0, [X21]
	027 Add X1, X31, 28
	028 Move [X31+28], W19
	029 Call 0x1C17E04
	030 Move X8, [X20]
	031 Move X1, X0
	032 Move X2, X31
	033 Move X0, X8
	034 Call String.Format, X0, X1
	035 Move X1, X0
	036 Add X0, X31, 0
	037 Move X2, X31
	038 Move [X31], X31
	039 Move [X31+8], X31
	040 Call InternedString..ctor, X0, X1
	041 Move X0, [X31]
	042 Move X1, [X31+8]
	043 Move X20, [X31+48]
	044 Move X19, [X31+56]
	045 Move X22, [X31+32]
	046 Move X21, [X31+40]
	047 Move X30, [X31+16]
	048 Add X31, X31, 64
	049 Return X0

Method: System.Int32 FindLocalDeviceId(System.Int32 remoteDeviceId, System.Int32 senderIndex)

Disassembly:
	0x037BCFF8 LDRB W8, [X19 + 0x17E]
	0x037BCFFC LDR X20, [X20 + 0xCE8]
	0x037BD000 TBNZ X8, 0x0, 0x37BD018
	0x037BD004 ADRP X0, 0x98A000
	0x037BD008 LDR X0, [X0 + 0xCE8]
	0x037BD00C BL 0x1C16CF4
	0x037BD010 MOVZ W8, 0x1
	0x037BD014 STRB W8, [X19 + 0x17E]
	0x037BD018 LDR X0, [X20]
	0x037BD01C BL 0x1C16F10
	0x037BD020 MOV X1, X31
	0x037BD024 MOV X19, X0
	0x037BD028 BL 0x33BDD8C
	0x037BD02C LDR X8, [X20]
	0x037BD030 LDR X8, [X8 + 0xB8]
	0x037BD034 STR X19, [X8]
	0x037BD038 LDP X20, X19, [X31 + 0x10]
	0x037BD03C LDR X30, [X31], #0x20
	0x037BD040 RET
	0x037BD044 MOV X1, X31
	0x037BD048 B 0x33BDD8C
	0x037BD04C SUB X31, X31, 0x20
	0x037BD050 STP X2, X30, [X31 + 0x8]
	0x037BD054 STR X1, [X31]
	0x037BD058 ADD X0, X31, 0x0
	0x037BD05C MOV X1, X31
	0x037BD060 BL 0x37565F4
	0x037BD064 LDR X30, [X31 + 0x10]
	0x037BD068 ADD X31, X31, 0x20

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+40]
	003 Compare X8, 0
	004 JumpIfEqual {25}
	005 Move W9, [X8+24]
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Move W9, 24
	008 NotImplemented "Instruction SMADDL not yet implemented."
	009 Move X8, [X8+48]
	010 Compare X8, 0
	011 JumpIfEqual {21}
	012 Move W9, [X8+24]
	013 NotImplemented "Instruction CMP not yet implemented."
	014 Move W10, W31
	015 Move X11, W10
	016 Add X11, X8, X11
	017 Move W12, [X11+32]
	018 NotImplemented "Instruction CMP not yet implemented."
	019 Add W10, W10, 1
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Move W0, W31
	022 Move X30, [X31+16]
	023 Return X0
	024 Move W0, [X11+36]
	025 Call 0x1C17F20
	026 Call 0x1C17F28

Method: UnityEngine.InputSystem.InputDevice TryGetDeviceByRemoteId(System.Int32 remoteDeviceId, System.Int32 senderIndex)

Disassembly:
	0x037BD06C RET
	0x037BD070 STP X30, X27, [X31 - 0x50]!
	0x037BD074 STP X26, X25, [X31 + 0x10]
	0x037BD078 STP X24, X23, [X31 + 0x20]
	0x037BD07C STP X22, X21, [X31 + 0x30]
	0x037BD080 STP X20, X19, [X31 + 0x40]
	0x037BD084 ADRP X22, 0xC24000
	0x037BD088 LDRB W8, [X22 + 0x17F]
	0x037BD08C MOV W19, W2
	0x037BD090 MOV X21, X1

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call InputRemoting.FindLocalDeviceId, X0, X1, X2
	005 Move X8, [X19+24]
	006 Compare X8, 0
	007 JumpIfEqual {12}
	008 Move W1, W0
	009 Move X0, X8
	010 Move X30, [X31+16]
	011 Move X19, [X31+24]
	012 Call 0x1C17F20

Method: UnityEngine.InputSystem.InputManager get_manager()

Disassembly:
	0x037BD10C LDR X0, [X0 + 0xE30]
	0x037BD110 BL 0x1C16CF4

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void RemoveRemoteDevices(System.Int32 participantId)

Disassembly:
	0x037BD114 ADRP X0, 0x98A000
	0x037BD118 LDR X0, [X0 + 0xE38]
	0x037BD11C BL 0x1C16CF4
	0x037BD120 ADRP X0, 0x95D000
	0x037BD124 LDR X0, [X0 + 0xD08]
	0x037BD128 BL 0x1C16CF4
	0x037BD12C ADRP X0, 0x98A000
	0x037BD130 LDR X0, [X0 + 0xE40]
	0x037BD134 BL 0x1C16CF4
	0x037BD138 MOVZ W8, 0x1
	0x037BD13C STRB W8, [X22 + 0x17F]
	0x037BD140 LDR X8, [X20 + 0x18]
	0x037BD144 CBZ X8, 0x37BD198
	0x037BD148 CMP X8, X21
	0x037BD14C B.EQ 0x37BD708
	0x037BD150 ADRP X0, 0x936000
	0x037BD154 LDR X0, [X0 + 0x5B0]
	0x037BD158 BL 0x1C16D08
	0x037BD15C BL 0x1C16F10
	0x037BD160 MOV X19, X0
	0x037BD164 ADRP X0, 0x98A000
	0x037BD168 LDR X0, [X0 + 0xE48]
	0x037BD16C BL 0x1C16D08
	0x037BD170 MOV X1, X0
	0x037BD174 MOV X0, X19
	0x037BD178 MOV X2, X31
	0x037BD17C BL 0x337DF1C
	0x037BD180 ADRP X0, 0x98A000
	0x037BD184 LDR X0, [X0 + 0xE50]
	0x037BD188 BL 0x1C16D08
	0x037BD18C MOV X1, X0
	0x037BD190 MOV X0, X19
	0x037BD194 BL 0x1C16DEC
	0x037BD198 ADRP X23, 0x95D000
	0x037BD19C LDR X23, [X23 + 0xD08]
	0x037BD1A0 LDR X0, [X23]
	0x037BD1A4 BL 0x1C16F10
	0x037BD1A8 ADRP X8, 0x98A000
	0x037BD1AC LDR X8, [X8 + 0xDF8]
	0x037BD1B0 MOV X1, X20
	0x037BD1B4 MOV X3, X31
	0x037BD1B8 MOV X22, X0
	0x037BD1BC LDR X2, [X8]
	0x037BD1C0 BL 0x2725B2C
	0x037BD1C4 CBZ X21, 0x37BD720
	0x037BD1C8 ADRP X25, 0x98A000
	0x037BD1CC LDR X8, [X21]
	0x037BD1D0 LDR X25, [X25 + 0xDE8]
	0x037BD1D4 LDRH W9, [X8 + 0x12E]
	0x037BD1D8 LDR X1, [X25]
	0x037BD1DC CBZ X9, 0x37BD200
	0x037BD1E0 LDR X10, [X8 + 0xB0]
	0x037BD1E4 ADD X10, X10, 0x8
	0x037BD1E8 LDUR X11, [X10 - 0x8]
	0x037BD1EC CMP X11, X1
	0x037BD1F0 B.EQ 0x37BD210
	0x037BD1F4 SUBS X9, X9, 0x1
	0x037BD1F8 ADD X10, X10, 0x10
	0x037BD1FC B.NE 0x37BD1E8
	0x037BD200 MOVZ W2, 0x1
	0x037BD204 MOV X0, X21
	0x037BD208 BL 0x1C5C788
	0x037BD20C B 0x37BD220

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0xC25000
	009 Move W8, [X21+368]
	010 Move W20, W1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x98B000
	017 Move X0, [X0+3336]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+368], W8
	021 Move X0, X19
	022 Move W1, W20
	023 Call InputRemoting.FindOrCreateSenderRecord, X0, X1
	024 Move X20, X19
	025 Add X20, X20, 40
	026 Move X8, [X20]
	027 Compare X8, 0
	028 JumpIfEqual {74}
	029 Move W9, [X8+24]
	030 Move W21, W0
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move W9, 24
	033 NotImplemented "Instruction SMADDL not yet implemented."
	034 Move X22, [X8+48]
	035 Compare X22, 0
	036 JumpIfEqual {60}
	037 Move X8, [X22+24]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move X23, X31
	040 And X8, X8, 0
	041 Add X24, X22, 36
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X0, [X19+24]
	044 Compare X0, 0
	045 JumpIfEqual {74}
	046 Move W1, [X24]
	047 Call InputManager.TryGetDeviceById, X0, X1
	048 Compare X0, 0
	049 JumpIfEqual {56}
	050 Move X1, X0
	051 Move X0, [X19+24]
	052 Compare X0, 0
	053 JumpIfEqual {74}
	054 Move W2, W31
	055 Call InputManager.RemoveDevice, X0, X1, X2
	056 Move W8, [X22+24]
	057 Add X23, X23, 1
	058 Add X24, X24, 64
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move X8, 0x98B000
	061 Move X8, [X8+3336]
	062 Move X0, X20
	063 Move W1, W21
	064 Move X20, [X31+48]
	065 Move X19, [X31+56]
	066 Move X2, [X8]
	067 Move X22, [X31+32]
	068 Move X21, [X31+40]
	069 Move X24, [X31+16]
	070 Move X23, [X31+24]
	071 Move X30, [X31+64]
	072 Call ArrayHelpers.EraseAt, X0, X1
	073 Return 
	074 Call 0x1C17F20
	075 Call 0x1C17F28

Method: System.Byte[] SerializeData(TData data)

Disassembly:
	0x02209B24 ADD X8, X8, W9, 0x4, SXTW
	0x02209B28 ADD X0, X8, 0x138
	0x02209B2C LDP X8, X1, [X0]
	0x02209B30 MOV X0, X19
	0x02209B34 BLR X8
	0x02209B38 MOV X25, X26
	0x02209B3C MOV X21, X27
	0x02209B40 MOV W19, W28
	0x02209B44 CBZ X25, 0x2209B8C
	0x02209B48 LDR X6, [X31 + 0x8]
	0x02209B4C MOV X0, X25
	0x02209B50 MOV X1, X21
	0x02209B54 MOV W2, W19
	0x02209B58 MOV X3, X23
	0x02209B5C MOV W4, W20
	0x02209B60 MOV W5, W22
	0x02209B64 MOV X7, X31
	0x02209B68 BL 0x37C6A44
	0x02209B6C LDP X20, X19, [X31 + 0x60]
	0x02209B70 LDP X22, X21, [X31 + 0x50]
	0x02209B74 LDP X24, X23, [X31 + 0x40]
	0x02209B78 LDP X26, X25, [X31 + 0x30]
	0x02209B7C LDP X28, X27, [X31 + 0x20]
	0x02209B80 LDP X29, X30, [X31 + 0x10]
	0x02209B84 ADD X31, X31, 0x70
	0x02209B88 RET
	0x02209B8C BL 0x1C16F20
	0x02209B90 ADRP X0, 0x1F12000
	0x02209B94 LDR X0, [X0 + 0xEF0]
	0x02209B98 BL 0x1C16D08
	0x02209B9C MOV X1, X22
	0x02209BA0 MOV X2, X31
	0x02209BA4 BL 0x321EFD0
	0x02209BA8 MOV X19, X0
	0x02209BAC ADRP X0, 0x1EF2000
	0x02209BB0 LDR X0, [X0 + 0x578]
	0x02209BB4 BL 0x1C16D08
	0x02209BB8 BL 0x1C16F10
	0x02209BBC MOV X20, X0
	0x02209BC0 ADRP X0, 0x1F12000
	0x02209BC4 LDR X0, [X0 + 0xD60]
	0x02209BC8 BL 0x1C16D08
	0x02209BCC MOV X2, X0
	0x02209BD0 MOV X0, X20
	0x02209BD4 MOV X1, X19
	0x02209BD8 MOV X3, X31
	0x02209BDC BL 0x330E16C
	0x02209BE0 MOV X0, X20
	0x02209BE4 B 0x2209C1C
	0x02209BE8 ADRP X0, 0x1EEF000
	0x02209BEC LDR X0, [X0 + 0x528]
	0x02209BF0 BL 0x1C16D08
	0x02209BF4 BL 0x1C16F10
	0x02209BF8 MOV X19, X0

ISIL:
	001 Move [X31-48], X29
	002 Move [X31-40], X30
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Add X29, X31, 0
	008 Subtract X31, X31, 16
	009 NotImplemented "Instruction MRS not yet implemented."
	010 Move X8, [X21+40]
	011 Move X19, X0
	012 Move [X29-8], X8
	013 Move [X29-16], X0
	014 Move X22, [X1+56]
	015 Compare X22, 0
	016 JumpIfNotEqual {21}
	017 Move X0, X1
	018 Move X20, X1
	019 Call 0x1C5D6E0
	020 Move X22, [X20+56]
	021 Move X8, [X22]
	022 Add X9, X31, 0
	023 Move W2, [X8+252]
	024 Add X10, X2, 15
	025 And X10, X10, 0x1FFFFFFFF
	026 Subtract X20, X9, X10
	027 Add X31, X20, 0
	028 Move W8, [X8+40]
	029 Move X0, X20
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Subtract X8, X29, 16
	032 NotImplemented "Instruction CSEL not yet implemented."
	033 Call 0x3EB2AC0
	034 Move X0, [X22]
	035 Move X1, X20
	036 Call 0x1C17E04
	037 Move X1, X31
	038 Call JsonUtility.ToJson, X0
	039 Move X19, X0
	040 Move X0, X31
	041 Call Encoding.get_UTF8
	042 Compare X0, 0
	043 JumpIfEqual {60}
	044 Move X8, [X0]
	045 Move X1, X19
	046 Move X9, [X8+616]
	047 Move X2, [X8+624]
	048 NotImplemented "Instruction BLR not yet implemented."
	049 Move X8, [X21+40]
	050 NotImplemented "Instruction LDUR not yet implemented."
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Add X31, X29, 0
	053 Move X20, [X31+32]
	054 Move X19, [X31+40]
	055 Move X22, [X31+16]
	056 Move X21, [X31+24]
	057 Move X29, [X31+48]
	058 Move X30, [X31+56]
	059 Return X0
	060 Call 0x1C17F20
	061 Call 0x3EB2B20

Method: TData DeserializeData(System.Byte[] data)

Disassembly:
	0x022098EC SUB X31, X31, 0x70
	0x022098F0 STP X29, X30, [X31 + 0x10]
	0x022098F4 STP X28, X27, [X31 + 0x20]
	0x022098F8 STP X26, X25, [X31 + 0x30]
	0x022098FC STP X24, X23, [X31 + 0x40]
	0x02209900 STP X22, X21, [X31 + 0x50]
	0x02209904 STP X20, X19, [X31 + 0x60]
	0x02209908 STR X3, [X31 + 0x8]
	0x0220990C LDR X8, [X4 + 0x38]
	0x02209910 MOV X21, X4
	0x02209914 MOV W19, W2
	0x02209918 MOV X29, X1
	0x0220991C MOV X22, X0
	0x02209920 CBNZ X8, 0x2209970
	0x02209924 ADRP X0, 0x1F12000
	0x02209928 LDR X0, [X0 + 0xED0]
	0x0220992C BL 0x1C16CF4
	0x02209930 ADRP X0, 0x1F12000
	0x02209934 LDR X0, [X0 + 0xEC8]
	0x02209938 BL 0x1C16CF4
	0x0220993C ADRP X0, 0x1F12000
	0x02209940 LDR X0, [X0 + 0xD18]
	0x02209944 BL 0x1C16CF4
	0x02209948 ADRP X0, 0x1F12000
	0x0220994C LDR X0, [X0 + 0x270]
	0x02209950 BL 0x1C16CF4
	0x02209954 ADRP X0, 0x1EEA000
	0x02209958 LDR X0, [X0 + 0x5A8]
	0x0220995C BL 0x1C16CF4
	0x02209960 LDR X8, [X21 + 0x38]
	0x02209964 CBNZ X8, 0x2209970
	0x02209968 MOV X0, X21
	0x0220996C BL 0x1C5C6E0
	0x02209970 CBZ X22, 0x2209BE8
	0x02209974 ADRP X20, 0x1F12000
	0x02209978 LDR X20, [X20 + 0xD18]
	0x0220997C LDR X23, [X22 + 0x18]
	0x02209980 LDR X0, [X20]
	0x02209984 LDR W8, [X0 + 0xE0]
	0x02209988 CBNZ W8, 0x2209990
	0x0220998C BL 0x1C16DFC
	0x02209990 CBNZ W23, 0x2209B90
	0x02209994 LDR X0, [X20]
	0x02209998 LDR X23, [X22 + 0x18]
	0x0220999C LDR W8, [X0 + 0xE0]
	0x022099A0 CBNZ W8, 0x22099A8
	0x022099A4 BL 0x1C16DFC
	0x022099A8 ANDS X31, X23, 0x7FFFFFFFF
	0x022099AC B.NE 0x2209B90
	0x022099B0 LDR X0, [X20]
	0x022099B4 LDR X21, [X22 + 0x78]
	0x022099B8 ADD X23, X22, 0x10
	0x022099BC LDR W8, [X0 + 0xE0]
	0x022099C0 CBNZ W8, 0x22099C8
	0x022099C4 BL 0x1C16DFC
	0x022099C8 MOV X0, X23
	0x022099CC MOV X1, X31
	0x022099D0 BL 0x3800B6C

ISIL:
	001 Move [X31-64], X29
	002 Move [X31-56], X30
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Add X29, X31, 0
	010 Subtract X31, X31, 32
	011 NotImplemented "Instruction MRS not yet implemented."
	012 Move X8, [X24+40]
	013 Move X20, X2
	014 Move X19, X1
	015 Move X23, X0
	016 Move [X29-8], X8
	017 Move X8, [X2+56]
	018 Compare X8, 0
	019 JumpIfNotEqual {23}
	020 Move X0, X20
	021 Call 0x1C5D6E0
	022 Move X8, [X20+56]
	023 Move X8, [X8+8]
	024 Move W21, [X8+252]
	025 Add X8, X31, 0
	026 Add X9, X21, 15
	027 And X9, X9, 0x1FFFFFFFF
	028 Subtract X22, X8, X9
	029 Add X31, X22, 0
	030 Move X0, X31
	031 Call Encoding.get_UTF8
	032 Compare X0, 0
	033 JumpIfEqual {67}
	034 Move X8, [X0]
	035 Move X1, X23
	036 Move X9, [X8+888]
	037 Move X2, [X8+896]
	038 NotImplemented "Instruction BLR not yet implemented."
	039 Move X8, [X20+56]
	040 Subtract X3, X29, 24
	041 Move X2, X31
	042 Move X4, X22
	043 Move X1, [X8]
	044 Move X8, [X1]
	045 Move [X29-24], X0
	046 Move [X29-16], X22
	047 Move X9, [X1+16]
	048 Move X0, X8
	049 NotImplemented "Instruction BLR not yet implemented."
	050 Move X0, X19
	051 Move X1, X22
	052 Move X2, X21
	053 Call 0x3EB2AC0
	054 Move X8, [X24+40]
	055 NotImplemented "Instruction LDUR not yet implemented."
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Add X31, X29, 0
	058 Move X20, [X31+48]
	059 Move X19, [X31+56]
	060 Move X22, [X31+32]
	061 Move X21, [X31+40]
	062 Move X24, [X31+16]
	063 Move X23, [X31+24]
	064 Move X29, [X31+64]
	065 Move X30, [X31+72]
	066 Return X0
	067 Call 0x1C17F20
	068 Call 0x3EB2B20

