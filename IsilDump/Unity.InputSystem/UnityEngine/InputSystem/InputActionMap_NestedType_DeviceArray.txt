Type: UnityEngine.InputSystem.InputActionMap/DeviceArray

Method: System.Int32 IndexOf(UnityEngine.InputSystem.InputDevice device)

Disassembly:
	0x0373D3D8 BL 0x1C16D08
	0x0373D3DC MOV X1, X0
	0x0373D3E0 MOV X0, X19
	0x0373D3E4 BL 0x1C16DEC
	0x0373D3E8 BL 0x1C16F20
	0x0373D3EC SUB X31, X31, 0x1A0
	0x0373D3F0 STP X29, X30, [X31 + 0x150]
	0x0373D3F4 STP X26, X25, [X31 + 0x160]
	0x0373D3F8 STP X24, X23, [X31 + 0x170]
	0x0373D3FC STP X22, X21, [X31 + 0x180]
	0x0373D400 STP X20, X19, [X31 + 0x190]
	0x0373D404 CBZ X0, 0x373D4C8
	0x0373D408 MOV X21, X1
	0x0373D40C MOV X23, X0
	0x0373D410 MOV X0, X1
	0x0373D414 MOV X1, X31
	0x0373D418 MOV X22, X4
	0x0373D41C MOV X19, X3
	0x0373D420 MOV X20, X2
	0x0373D424 BL 0x32277A8
	0x0373D428 TBNZ X0, 0x0, 0x373D4E8
	0x0373D42C MOV X0, X23
	0x0373D430 BL 0x37346C0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xCA4000
	007 Move X21, 0xA09000
	008 Move W8, [X22+3360]
	009 Move X21, [X21+816]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xA09000
	017 Move X0, [X0+816]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+3360], W8
	021 Move X0, [X20+8]
	022 Move W2, [X20+4]
	023 Move X3, [X21]
	024 Move X1, X19
	025 Move X20, [X31+32]
	026 Move X19, [X31+40]
	027 Move X22, [X31+16]
	028 Move X21, [X31+24]
	029 Move X30, [X31+48]
	030 Call 0x217AB8C, X0, X1, X2
	031 Return X0

Method: System.Boolean Remove(UnityEngine.InputSystem.InputDevice device)

Disassembly:
	0x0373D434 LDR X24, [X23 + 0x60]
	0x0373D438 LDR W25, [X23 + 0x58]
	0x0373D43C ADD X0, X31, 0x78
	0x0373D440 MOVZ W2, 0x58
	0x0373D444 MOV X1, X22
	0x0373D448 ADD X26, X23, 0xD0
	0x0373D44C ADD X23, X23, 0xCC
	0x0373D450 BL 0x3EB1AC0
	0x0373D454 MOVI V0.2D, 0x0
	0x0373D458 ADD X0, X31, 0xD0
	0x0373D45C ADD X2, X31, 0x78
	0x0373D460 MOV X1, X21
	0x0373D464 MOV X3, X20
	0x0373D468 MOV X4, X19
	0x0373D46C STR X31, [X31 + 0x140]
	0x0373D470 STP V0, V0, [X31 + 0x120]
	0x0373D474 STP V0, V0, [X31 + 0x100]
	0x0373D478 STP V0, V0, [X31 + 0xE0]
	0x0373D47C STR V0, [X31 + 0xD]
	0x0373D480 BL 0x373CE38
	0x0373D484 ADD X0, X31, 0x0
	0x0373D488 ADD X1, X31, 0xD0
	0x0373D48C MOVZ W2, 0x78
	0x0373D490 BL 0x3EB1AC0
	0x0373D494 ADD X4, X31, 0x0
	0x0373D498 MOV X0, X24
	0x0373D49C MOV W1, W25
	0x0373D4A0 MOV X2, X26
	0x0373D4A4 MOV X3, X23

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xCA4000
	006 Move W8, [X21+3361]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xA09000
	014 Move X0, [X0+824]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+3361], W8
	018 Move X0, X19
	019 Move X1, X20
	020 Call DeviceArray.IndexOf, X0, X1
	021 Move W20, W0
	022 Move TEMP, X0
	023 And TEMP, TEMP, -2147483648
	024 Compare TEMP, -2147483648
	025 JumpIfEqual {33}
	026 Move X8, 0xA09000
	027 Move X8, [X8+824]
	028 Move X0, [X19+8]
	029 Add X1, X19, 4
	030 Move W2, W20
	031 Move X3, [X8]
	032 Call ArrayHelpers.EraseAtWithCapacity, X0, X1, X2
	033 NotImplemented "Instruction ORN not yet implemented."
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move W0, W8
	037 ShiftRight W0, 31
	038 And W0, W0, 0x7FFFFFFF
	039 Move X30, [X31+32]
	040 Move X21, [X31+40]
	041 Return X0

Method: System.Nullable`1<UnityEngine.InputSystem.Utilities.ReadOnlyArray`1<UnityEngine.InputSystem.InputDevice>> Get()

Disassembly:
	0x03737A70 BL 0x322590C
	0x03737A74 CBZ W0, 0x3737A90
	0x03737A78 LDR X8, [X19 + 0x18]
	0x03737A7C ADD X23, X23, 0x1
	0x03737A80 CBNZ X8, 0x3737A40
	0x03737A84 BL 0x1C16F20
	0x03737A88 TBNZ X21, 0x0, 0x3737AF4
	0x03737A8C MOV X22, X31
	0x03737A90 MOV X0, X22
	0x03737A94 LDP X20, X19, [X31 + 0x30]
	0x03737A98 LDP X22, X21, [X31 + 0x20]
	0x03737A9C LDP X30, X23, [X31 + 0x10]
	0x03737AA0 ADD X31, X31, 0x40
	0x03737AA4 RET
	0x03737AA8 BL 0x1C16F28
	0x03737AAC ADRP X0, 0x9C1000
	0x03737AB0 LDR X0, [X0 + 0x528]
	0x03737AB4 BL 0x1C16D08
	0x03737AB8 BL 0x1C16F10
	0x03737ABC MOV X19, X0
	0x03737AC0 ADRP X0, 0xA0E000
	0x03737AC4 LDR X0, [X0 + 0x110]
	0x03737AC8 BL 0x1C16D08
	0x03737ACC MOV X1, X0
	0x03737AD0 MOV X0, X19
	0x03737AD4 MOV X2, X31
	0x03737AD8 BL 0x330E100
	0x03737ADC ADRP X0, 0xA0E000
	0x03737AE0 LDR X0, [X0 + 0x118]
	0x03737AE4 BL 0x1C16D08
	0x03737AE8 MOV X1, X0
	0x03737AEC MOV X0, X19
	0x03737AF0 BL 0x1C16DEC
	0x03737AF4 ADRP X0, 0xA0E000
	0x03737AF8 LDR X0, [X0 + 0x120]
	0x03737AFC BL 0x1C16D08
	0x03737B00 MOV X1, X20
	0x03737B04 MOV X2, X19
	0x03737B08 MOV X3, X31
	0x03737B0C BL 0x3227BD4
	0x03737B10 MOV X19, X0
	0x03737B14 ADRP X0, 0x9C4000

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xCAA000
	007 Move W9, [X21+3362]
	008 Move X20, X0
	009 Move X19, X8
	010 Move TEMP, X9
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xA0F000
	015 Move X0, [X0+72]
	016 Call 0x1C17CF4
	017 Move X0, 0xA0F000
	018 Move X0, [X0+80]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+3362], W8
	022 Move W8, [X20]
	023 Compare W8, 0
	024 JumpIfEqual {45}
	025 Move X8, 0xA0F000
	026 Move X8, [X8+80]
	027 Move X1, [X20+8]
	028 Move W3, [X20+4]
	029 Move X20, 0xA0F000
	030 Move X4, [X8]
	031 Move X20, [X20+72]
	032 Add X0, X31, 0
	033 Move W2, W31
	034 Move [X31], X31
	035 Move [X31+8], X31
	036 Call ReadOnlyArray`1<Object>..ctor, X0, X1, X2, X3
	037 Move X1, [X31]
	038 Move X2, [X31+8]
	039 Move X3, [X20]
	040 Move X0, X19
	041 Move [X19], X31
	042 Move [X19+8], X31
	043 Move [X19+16], X31
	044 Call Nullable`1<ReadOnlyArray`1<Object>>..ctor, X0, X1
	045 Move [X19], X31
	046 Move [X19+8], X31
	047 Move [X19+16], X31
	048 Move X20, [X31+32]
	049 Move X19, [X31+40]
	050 Move X30, [X31+16]
	051 Move X21, [X31+24]
	052 Add X31, X31, 48
	053 Return X0

Method: System.Boolean Set(System.Nullable`1<UnityEngine.InputSystem.Utilities.ReadOnlyArray`1<UnityEngine.InputSystem.InputDevice>> devices)

Disassembly:
	0x03737B5C MOV X1, X31
	0x03737B60 BL 0x32277A8
	0x03737B64 TBZ X0, 0x0, 0x3737B70
	0x03737B68 STP X31, X31, [X31]
	0x03737B6C B 0x3737B84
	0x03737B70 LDR X1, [X19 + 0x18]
	0x03737B74 ADD X0, X31, 0x0
	0x03737B78 MOV X2, X31
	0x03737B7C STP X31, X31, [X31]
	0x03737B80 BL 0x3376AD0
	0x03737B84 LDP X0, X1, [X31]
	0x03737B88 LDP X30, X19, [X31 + 0x10]
	0x03737B8C ADD X31, X31, 0x20
	0x03737B90 RET
	0x03737B94 STP X30, X23, [X31 - 0x30]!
	0x03737B98 STP X22, X21, [X31 + 0x10]
	0x03737B9C STP X20, X19, [X31 + 0x20]
	0x03737BA0 LDR X8, [X0 + 0x18]
	0x03737BA4 CBZ X8, 0x3737C04
	0x03737BA8 MOV X19, X2
	0x03737BAC MOV X20, X0
	0x03737BB0 MOV X21, X1
	0x03737BB4 MOV X23, X31
	0x03737BB8 LDR W9, [X8 + 0x18]
	0x03737BBC CMP W23, W9
	0x03737BC0 B.GE 0x3737C04
	0x03737BC4 CMP W23, W9
	0x03737BC8 B.CS 0x3737C1C
	0x03737BCC ADD X8, X8, X23, 0x3, LSL
	0x03737BD0 LDR X22, [X8 + 0x20]
	0x03737BD4 CBZ X22, 0x3737C00
	0x03737BD8 MOV X0, X22
	0x03737BDC BL 0x3737B4C
	0x03737BE0 MOV X2, X21
	0x03737BE4 MOV X3, X19
	0x03737BE8 MOV X4, X31
	0x03737BEC BL 0x3378C2C
	0x03737BF0 TBNZ X0, 0x0, 0x3737C08
	0x03737BF4 LDR X8, [X20 + 0x18]
	0x03737BF8 ADD X23, X23, 0x1
	0x03737BFC CBNZ X8, 0x3737BB8
	0x03737C00 BL 0x1C16F20
	0x03737C04 MOV X22, X31
	0x03737C08 MOV X0, X22
	0x03737C0C LDP X20, X19, [X31 + 0x20]
	0x03737C10 LDP X22, X21, [X31 + 0x10]
	0x03737C14 LDP X30, X23, [X31], #0x30
	0x03737C18 RET
	0x03737C1C BL 0x1C16F28
	0x03737C20 STR X30, [X31 - 0x30]!
	0x03737C24 STP X22, X21, [X31 + 0x10]
	0x03737C28 STP X20, X19, [X31 + 0x20]
	0x03737C2C LDR X8, [X0 + 0x18]
	0x03737C30 CBZ X8, 0x3737C84
	0x03737C34 MOV X19, X2
	0x03737C38 MOV X20, X0
	0x03737C3C MOV X21, X1
	0x03737C40 MOV X22, X31
	0x03737C44 LDR W9, [X8 + 0x18]
	0x03737C48 CMP W22, W9
	0x03737C4C B.GE 0x3737C84
	0x03737C50 CMP W22, W9
	0x03737C54 B.CS 0x3737C98
	0x03737C58 ADD X8, X8, X22, 0x3, LSL
	0x03737C5C LDR X0, [X8 + 0x20]
	0x03737C60 CBZ X0, 0x3737C80
	0x03737C64 MOV X1, X21
	0x03737C68 MOV X2, X19
	0x03737C6C BL 0x3737C9C
	0x03737C70 CBNZ X0, 0x3737C88
	0x03737C74 LDR X8, [X20 + 0x18]
	0x03737C78 ADD X22, X22, 0x1
	0x03737C7C CBNZ X8, 0x3737C44
	0x03737C80 BL 0x1C16F20
	0x03737C84 MOV X0, X31
	0x03737C88 LDP X20, X19, [X31 + 0x20]
	0x03737C8C LDP X22, X21, [X31 + 0x10]
	0x03737C90 LDR X30, [X31], #0x30
	0x03737C94 RET
	0x03737C98 BL 0x1C16F28
	0x03737C9C STP X30, X19, [X31 - 0x10]!
	0x03737CA0 MOV X19, X0
	0x03737CA4 BL 0x373A8B4
	0x03737CA8 ADDS W31, W0, 0x1
	0x03737CAC B.EQ 0x3737CD0
	0x03737CB0 LDR X8, [X19 + 0x28]
	0x03737CB4 CBZ X8, 0x3737CDC
	0x03737CB8 LDR W9, [X8 + 0x18]
	0x03737CBC CMP W0, W9
	0x03737CC0 B.CS 0x3737CE0
	0x03737CC4 ADD X8, X8, W0, 0x3, SXTW
	0x03737CC8 LDR X0, [X8 + 0x20]
	0x03737CCC B 0x3737CD4
	0x03737CD0 MOV X0, X31
	0x03737CD4 LDP X30, X19, [X31], #0x10

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0xCAA000
	009 Move W8, [X21+3363]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {36}
	016 Move X0, 0xA0F000
	017 Move X0, [X0+88]
	018 Call 0x1C17CF4
	019 Move X0, 0xA0F000
	020 Move X0, [X0+96]
	021 Call 0x1C17CF4
	022 Move X0, 0xA0E000
	023 Move X0, [X0+4024]
	024 Call 0x1C17CF4
	025 Move X0, 0xA0E000
	026 Move X0, [X0+4032]
	027 Call 0x1C17CF4
	028 Move X0, 0xA0F000
	029 Move X0, [X0+104]
	030 Call 0x1C17CF4
	031 Move X0, 0xA0F000
	032 Move X0, [X0+112]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X21+3363], W8
	036 Move W8, [X20]
	037 Compare W8, 0
	038 JumpIfEqual {87}
	039 Move X8, 0xA0E000
	040 Move X8, [X8+4032]
	041 Move X0, X20
	042 Move X1, [X8]
	043 Call Nullable`1<ReadOnlyArray`1<Object>>.get_Value, X0
	044 Move W8, [X19]
	045 Move X20, X0
	046 Move X21, X1
	047 Compare W8, 0
	048 JumpIfEqual {65}
	049 Move W8, [X19+4]
	050 Move X3, X21
	051 ShiftRight X3, 32
	052 And X3, X3, 0x7FFFFFFF
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move X8, 0xA0F000
	055 Move X2, [X19+8]
	056 Move X8, [X8+104]
	057 Move X0, X20
	058 Move X1, X21
	059 Move X4, [X8]
	060 Call 0x223D54C, X0, X1, X2
	061 Move TEMP, X0
	062 And TEMP, TEMP, 1
	063 Compare TEMP, 1
	064 JumpIfEqual {99}
	065 Move X22, X19
	066 Add X22, X22, 4
	067 Move W8, [X22]
	068 Move X24, 0xA0F000
	069 Move X24, [X24+88]
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move X8, 0xA0F000
	072 Move X0, [X19+8]
	073 Move X8, [X8+96]
	074 Move X1, X22
	075 Move X2, [X8]
	076 Call 0x2176B08, X0, X1
	077 Move W23, 1
	078 Move [X19], W23
	079 Move [X19+4], W31
	080 Move X5, [X24]
	081 Add X0, X19, 8
	082 Move W4, 10
	083 Move X1, X22
	084 Move X2, X20
	085 Move X3, X21
	086 Call ArrayHelpers.AppendListWithCapacity, X0, X1, X2, X3
	087 Move W8, [X19]
	088 Compare W8, 0
	089 JumpIfEqual {99}
	090 Move W2, [X19+4]
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Move X0, [X19+8]
	093 Move W1, W31
	094 Move X3, X31
	095 Call Array.Clear, X0, X1, X2
	096 Move [X19+4], W31
	097 Move [X19], W31
	098 Move W23, 1
	099 Move W23, W31
	100 Move W0, W23
	101 Move X20, [X31+48]
	102 Move X19, [X31+56]
	103 Move X22, [X31+32]
	104 Move X21, [X31+40]
	105 Move X24, [X31+16]
	106 Move X23, [X31+24]
	107 Move X30, [X31+64]
	108 Return X0

