Type: UnityEngine.InputSystem.Android.LowLevel.AndroidSensorState

Method: UnityEngine.InputSystem.Android.LowLevel.AndroidSensorState WithData(System.Single[] data)

Disassembly:
	0x037FEF58 MOV X5, X31
	0x037FEF5C STR W31, [X31 + 0x8]
	0x037FEF60 BL 0x375AA28
	0x037FEF64 LDR W0, [X31 + 0x8]
	0x037FEF68 LDR X30, [X31], #0x10
	0x037FEF6C RET
	0x037FEF70 STR X30, [X31 - 0x20]!
	0x037FEF74 STP X20, X19, [X31 + 0x10]
	0x037FEF78 MOV W19, W0
	0x037FEF7C ADD X0, X31, 0x8
	0x037FEF80 MOVZ W1, 0x4B
	0x037FEF84 MOVZ W2, 0x59
	0x037FEF88 MOVZ W3, 0x43
	0x037FEF8C MOVZ W4, 0x46
	0x037FEF90 MOV X5, X31
	0x037FEF94 MOV X20, X8
	0x037FEF98 STR W31, [X31 + 0x8]
	0x037FEF9C BL 0x375AA28
	0x037FEFA0 LDR W8, [X31 + 0x8]
	0x037FEFA4 MOVZ X9, 0x10C
	0x037FEFA8 ADD X0, X20, 0xC
	0x037FEFAC MOVZ W2, 0x100
	0x037FEFB0 ORR X8, X8, X9, 0x0
	0x037FEFB4 MOV W1, W31
	0x037FEFB8 STR W19, [X20 + 0x8]
	0x037FEFBC STR X8, [X20]
	0x037FEFC0 BL 0x3EB1B10
	0x037FEFC4 LDP X20, X19, [X31 + 0x10]
	0x037FEFC8 LDR X30, [X31], #0x20
	0x037FEFCC RET
	0x037FEFD0 STR X30, [X31 - 0x10]!
	0x037FEFD4 ADD X0, X31, 0x8
	0x037FEFD8 MOVZ W1, 0x50
	0x037FEFDC MOVZ W2, 0x41
	0x037FEFE0 MOVZ W3, 0x43
	0x037FEFE4 MOVZ W4, 0x43
	0x037FEFE8 MOV X5, X31
	0x037FEFEC STR W31, [X31 + 0x8]
	0x037FEFF0 BL 0x375AA28
	0x037FEFF4 LDR W0, [X31 + 0x8]
	0x037FEFF8 LDR X30, [X31], #0x10
	0x037FEFFC RET
	0x037FF000 ADD X0, X0, 0x210
	0x037FF004 MOVZ W1, 0x100
	0x037FF008 MOV X2, X31
	0x037FF00C B 0x3767CCC
	0x037FF010 STR X30, [X31 - 0x20]!
	0x037FF014 STP X20, X19, [X31 + 0x10]
	0x037FF018 CBZ X1, 0x37FF048
	0x037FF01C LDR W8, [X1 + 0x10]
	0x037FF020 CMP W8, 0x101
	0x037FF024 B.GE 0x37FF090
	0x037FF028 LDP X20, X19, [X31 + 0x10]
	0x037FF02C ADD X8, X0, 0x210
	0x037FF030 MOVZ W2, 0x100
	0x037FF034 MOV X0, X1
	0x037FF038 MOV X1, X8
	0x037FF03C MOV X3, X31
	0x037FF040 LDR X30, [X31], #0x20
	0x037FF044 B 0x3767AF0
	0x037FF048 ADRP X0, 0x8F9000
	0x037FF04C LDR X0, [X0 + 0x528]
	0x037FF050 BL 0x1C16D08
	0x037FF054 BL 0x1C16F10
	0x037FF058 MOV X19, X0
	0x037FF05C ADRP X0, 0x8FE000
	0x037FF060 LDR X0, [X0 + 0xEC8]
	0x037FF064 BL 0x1C16D08
	0x037FF068 MOV X1, X0
	0x037FF06C MOV X0, X19
	0x037FF070 MOV X2, X31

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Compare X1, 0
	004 JumpIfEqual {61}
	005 Move X9, [X1+24]
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Move X10, X31
	008 And X11, X9, 0
	009 Move X12, W9
	010 Add X13, X1, 32
	011 Move X14, X0
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Move V0, [X13]
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Move [X14+4], S0
	016 Add X10, X10, 1
	017 NotImplemented "Instruction CMP not yet implemented."
	018 NotImplemented "Instruction CMP not yet implemented."
	019 Move W12, 15
	020 Move X13, -47263744
	021 Add X11, X0, W9
	022 Subtract X9, X12, X9
	023 Move V0, [X13+121]
	024 And X12, X9, 0
	025 And X9, X9, 1
	026 Subtract X9, X12, X9
	027 Move X10, X31
	028 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	029 Add X9, X9, 2
	030 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	031 Or V2, V2, V0
	032 NotImplemented "Instruction INVALID not yet implemented."
	033 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	034 Move W12, S2
	035 Move TEMP, X12
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfNotEqual {40}
	039 Move [X11], W31
	040 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	041 Move TEMP, X12
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfNotEqual {46}
	045 Move [X11+4], W31
	046 Add X10, X10, 2
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Add X11, X11, 8
	049 Move V1, [X0+32]
	050 Move V0, [X0+48]
	051 Move V3, [X0]
	052 Move V2, [X0+16]
	053 Move [X8+32], V1
	054 Move [X8+40], V0
	055 Move [X8], V3
	056 Move [X8+8], V2
	057 Move X30, [X31+16]
	058 Move X19, [X31+24]
	059 Return X0
	060 Call 0x1C17F28
	061 Move X0, 0x8FA000
	062 Move X0, [X0+1320]
	063 Call 0x1C17D08
	064 Call 0x1C17F10
	065 Move X19, X0
	066 Move X0, 0x901000
	067 Move X0, [X0+1680]
	068 Call 0x1C17D08
	069 Move X1, X0
	070 Move X0, X19
	071 Move X2, X31
	072 Call ArgumentNullException..ctor, X0, X1
	073 Move X0, 0x94B000
	074 Move X0, [X0+3984]
	075 Call 0x1C17D08
	076 Move X1, X0
	077 Move X0, X19
	078 Call 0x1C17DEC

Method: UnityEngine.InputSystem.Utilities.FourCC get_format()

Disassembly:
	0x037FF074 BL 0x330E100
	0x037FF078 ADRP X0, 0x94A000
	0x037FF07C LDR X0, [X0 + 0xFD0]
	0x037FF080 BL 0x1C16D08
	0x037FF084 MOV X1, X0
	0x037FF088 MOV X0, X19
	0x037FF08C BL 0x1C16DEC
	0x037FF090 MOVZ W8, 0x100
	0x037FF094 STR W8, [X31 + 0xC]
	0x037FF098 ADRP X0, 0x8F4000
	0x037FF09C LDR X0, [X0 + 0x758]
	0x037FF0A0 MOV X19, X1
	0x037FF0A4 BL 0x1C16D08
	0x037FF0A8 ADD X1, X31, 0xC
	0x037FF0AC BL 0x1C16E04
	0x037FF0B0 MOV X20, X0
	0x037FF0B4 ADRP X0, 0x94A000
	0x037FF0B8 LDR X0, [X0 + 0xFD8]
	0x037FF0BC BL 0x1C16D08
	0x037FF0C0 MOV X1, X19
	0x037FF0C4 MOV X2, X20
	0x037FF0C8 MOV X3, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xBE3000
	005 Move X19, 0x94B000
	006 Move W8, [X20+1023]
	007 Move X19, [X19+3992]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x94B000
	013 Move X0, [X0+3992]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+1023], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move W0, [X8]
	027 Move X30, [X31+32]
	028 Return X0

Method: System.Void .cctor()

Disassembly:
	0x037FF0CC BL 0x3227BD4
	0x037FF0D0 MOV X19, X0
	0x037FF0D4 ADRP X0, 0x8FC000
	0x037FF0D8 LDR X0, [X0 + 0x578]
	0x037FF0DC BL 0x1C16D08
	0x037FF0E0 BL 0x1C16F10
	0x037FF0E4 MOV X20, X0
	0x037FF0E8 ADRP X0, 0x8FE000
	0x037FF0EC LDR X0, [X0 + 0xEC8]
	0x037FF0F0 BL 0x1C16D08
	0x037FF0F4 MOV X2, X0
	0x037FF0F8 MOV X0, X20
	0x037FF0FC MOV X1, X19
	0x037FF100 MOV X3, X31
	0x037FF104 BL 0x330E16C
	0x037FF108 ADRP X0, 0x94A000
	0x037FF10C LDR X0, [X0 + 0xFD0]
	0x037FF110 BL 0x1C16D08
	0x037FF114 MOV X1, X0
	0x037FF118 MOV X0, X20
	0x037FF11C BL 0x1C16DEC
	0x037FF120 ADD X0, X0, 0x10
	0x037FF124 MOVZ W1, 0x100
	0x037FF128 MOV X2, X31
	0x037FF12C B 0x3767CCC
	0x037FF130 STR X30, [X31 - 0x20]!
	0x037FF134 STP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xBE3000
	005 Move X19, 0x94B000
	006 Move W8, [X20+1024]
	007 Move X19, [X19+3992]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x94B000
	013 Move X0, [X0+3992]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+1024], W8
	017 Add X0, X31, 8
	018 Move W1, 65
	019 Move W2, 83
	020 Move W3, 83
	021 Move W4, 32
	022 Move X5, X31
	023 Move [X31+8], W31
	024 Call FourCC..ctor, X0, X1, X2, X3, X4
	025 Move X8, [X19]
	026 Move W9, [X31+8]
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X8, [X8+184]
	030 Move [X8], W9
	031 Move X30, [X31+32]
	032 Return 

