Type: UnityEngine.InputSystem.DefaultInputActions/PlayerActions

Method: System.Void .ctor(UnityEngine.InputSystem.DefaultInputActions wrapper)

Disassembly:
	0x037CF930 LDR X2, [X0 + 0x8]
	0x037CF934 MOV X0, X22

ISIL:
	001 Move [X0], X1
	002 Return 

Method: UnityEngine.InputSystem.InputAction get_Move()

Disassembly:
	0x037CF938 MOV X1, X23
	0x037CF93C MOV X3, X31
	0x037CF940 BL 0x2A719B8
	0x037CF944 CBZ X21, 0x37D19C8
	0x037CF948 MOV X0, X21
	0x037CF94C MOV X1, X22
	0x037CF950 MOV X2, X31

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0]
	003 Compare X8, 0
	004 JumpIfEqual {8}
	005 Move X0, [X8+40]
	006 Move X30, [X31+16]
	007 Return X0
	008 Call 0x1C17F20

Method: UnityEngine.InputSystem.InputAction get_Look()

Disassembly:
	0x037CF954 BL 0x37348FC
	0x037CF958 LDR X8, [X20]
	0x037CF95C CBZ X8, 0x37D19C8
	0x037CF960 LDR X0, [X25]
	0x037CF964 LDR X21, [X8 + 0x58]
	0x037CF968 LDR X23, [X8 + 0x48]
	0x037CF96C BL 0x1C16F10

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0]
	003 Compare X8, 0
	004 JumpIfEqual {8}
	005 Move X0, [X8+48]
	006 Move X30, [X31+16]
	007 Return X0
	008 Call 0x1C17F20

Method: UnityEngine.InputSystem.InputAction get_Fire()

Disassembly:
	0x037CF970 CBZ X23, 0x37D19C8
	0x037CF974 LDR X8, [X23]
	0x037CF978 LDR X1, [X24]
	0x037CF97C MOV X22, X0
	0x037CF980 LDRH W9, [X8 + 0x12E]
	0x037CF984 CBZ X9, 0x37CF9A8
	0x037CF988 LDR X10, [X8 + 0xB0]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0]
	003 Compare X8, 0
	004 JumpIfEqual {8}
	005 Move X0, [X8+56]
	006 Move X30, [X31+16]
	007 Return X0
	008 Call 0x1C17F20

Method: UnityEngine.InputSystem.InputActionMap Get()

Disassembly:
	0x037CF98C ADD X10, X10, 0x8
	0x037CF990 LDUR X11, [X10 - 0x8]
	0x037CF994 CMP X11, X1
	0x037CF998 B.EQ 0x37CF9B8
	0x037CF99C SUBS X9, X9, 0x1
	0x037CF9A0 ADD X10, X10, 0x10
	0x037CF9A4 B.NE 0x37CF990

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0]
	003 Compare X8, 0
	004 JumpIfEqual {8}
	005 Move X0, [X8+24]
	006 Move X30, [X31+16]
	007 Return X0
	008 Call 0x1C17F20

Method: System.Void Enable()

Disassembly:
	0x037CF9A8 MOVZ W2, 0x1
	0x037CF9AC MOV X0, X23
	0x037CF9B0 BL 0x1C5C788
	0x037CF9B4 B 0x37CF9C8
	0x037CF9B8 LDR W9, [X10]
	0x037CF9BC ADD W9, W9, 0x1
	0x037CF9C0 ADD X8, X8, W9, 0x4, SXTW
	0x037CF9C4 ADD X0, X8, 0x138
	0x037CF9C8 LDR X2, [X0 + 0x8]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0]
	003 Compare X8, 0
	004 JumpIfEqual {12}
	005 Move X0, [X8+24]
	006 Compare X0, 0
	007 JumpIfEqual {12}
	008 Move X1, X31
	009 Move X30, [X31+16]
	010 Call InputActionMap.Enable, X0
	011 Return 
	012 Call 0x1C17F20

Method: System.Void Disable()

Disassembly:
	0x037CF9CC MOV X0, X22
	0x037CF9D0 MOV X1, X23
	0x037CF9D4 MOV X3, X31
	0x037CF9D8 BL 0x2A719B8
	0x037CF9DC CBZ X21, 0x37D19C8
	0x037CF9E0 MOV X0, X21
	0x037CF9E4 MOV X1, X22
	0x037CF9E8 MOV X2, X31
	0x037CF9EC BL 0x3734A5C

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0]
	003 Compare X8, 0
	004 JumpIfEqual {12}
	005 Move X0, [X8+24]
	006 Compare X0, 0
	007 JumpIfEqual {12}
	008 Move X1, X31
	009 Move X30, [X31+16]
	010 Call InputActionMap.Disable, X0
	011 Return 
	012 Call 0x1C17F20

Method: System.Boolean get_enabled()

Disassembly:
	0x037CF9F0 LDR X8, [X20]
	0x037CF9F4 CBZ X8, 0x37D19C8
	0x037CF9F8 LDR X0, [X25]
	0x037CF9FC LDR X21, [X8 + 0x58]
	0x037CFA00 LDR X23, [X8 + 0x48]
	0x037CFA04 BL 0x1C16F10
	0x037CFA08 CBZ X23, 0x37D19C8
	0x037CFA0C LDR X8, [X23]
	0x037CFA10 LDR X1, [X24]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0]
	003 Compare X8, 0
	004 JumpIfEqual {12}
	005 Move X0, [X8+24]
	006 Compare X0, 0
	007 JumpIfEqual {12}
	008 Move X1, X31
	009 Move X30, [X31+16]
	010 Call InputActionMap.get_enabled, X0
	011 Return X0
	012 Call 0x1C17F20

Method: UnityEngine.InputSystem.InputActionMap op_Implicit(UnityEngine.InputSystem.DefaultInputActions/PlayerActions set)

Disassembly:
	0x037CFA14 MOV X22, X0
	0x037CFA18 LDRH W9, [X8 + 0x12E]
	0x037CFA1C CBZ X9, 0x37CFA40
	0x037CFA20 LDR X10, [X8 + 0xB0]
	0x037CFA24 ADD X10, X10, 0x8
	0x037CFA28 LDUR X11, [X10 - 0x8]

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {7}
	004 Move X0, [X0+24]
	005 Move X30, [X31+16]
	006 Return X0
	007 Call 0x1C17F20

Method: System.Void SetCallbacks(UnityEngine.InputSystem.DefaultInputActions/IPlayerActions instance)

Disassembly:
	0x037CFA2C CMP X11, X1
	0x037CFA30 B.EQ 0x37CFA50
	0x037CFA34 SUBS X9, X9, 0x1
	0x037CFA38 ADD X10, X10, 0x10
	0x037CFA3C B.NE 0x37CFA28
	0x037CFA40 MOVZ W2, 0x1
	0x037CFA44 MOV X0, X23
	0x037CFA48 BL 0x1C5C788
	0x037CFA4C B 0x37CFA60
	0x037CFA50 LDR W9, [X10]
	0x037CFA54 ADD W9, W9, 0x1
	0x037CFA58 ADD X8, X8, W9, 0x4, SXTW
	0x037CFA5C ADD X0, X8, 0x138
	0x037CFA60 LDR X2, [X0 + 0x8]
	0x037CFA64 MOV X0, X22
	0x037CFA68 MOV X1, X23
	0x037CFA6C MOV X3, X31
	0x037CFA70 BL 0x2A719B8
	0x037CFA74 CBZ X21, 0x37D19C8
	0x037CFA78 MOV X0, X21
	0x037CFA7C MOV X1, X22
	0x037CFA80 MOV X2, X31
	0x037CFA84 BL 0x37349AC
	0x037CFA88 LDR X8, [X20]
	0x037CFA8C CBZ X8, 0x37D19C8
	0x037CFA90 LDR X0, [X25]
	0x037CFA94 LDR X21, [X8 + 0x60]
	0x037CFA98 LDR X23, [X8 + 0x48]
	0x037CFA9C BL 0x1C16F10
	0x037CFAA0 CBZ X23, 0x37D19C8
	0x037CFAA4 LDR X8, [X23]
	0x037CFAA8 LDR X1, [X24]
	0x037CFAAC MOV X22, X0
	0x037CFAB0 LDRH W9, [X8 + 0x12E]
	0x037CFAB4 CBZ X9, 0x37CFAD8
	0x037CFAB8 LDR X10, [X8 + 0xB0]
	0x037CFABC ADD X10, X10, 0x8
	0x037CFAC0 LDUR X11, [X10 - 0x8]
	0x037CFAC4 CMP X11, X1
	0x037CFAC8 B.EQ 0x37CFAE8
	0x037CFACC SUBS X9, X9, 0x1
	0x037CFAD0 ADD X10, X10, 0x10
	0x037CFAD4 B.NE 0x37CFAC0
	0x037CFAD8 MOVZ W2, 0x2
	0x037CFADC MOV X0, X23
	0x037CFAE0 BL 0x1C5C788
	0x037CFAE4 B 0x37CFAF8
	0x037CFAE8 LDR W9, [X10]
	0x037CFAEC ADD W9, W9, 0x2
	0x037CFAF0 ADD X8, X8, W9, 0x4, SXTW
	0x037CFAF4 ADD X0, X8, 0x138
	0x037CFAF8 LDR X2, [X0 + 0x8]
	0x037CFAFC MOV X0, X22
	0x037CFB00 MOV X1, X23
	0x037CFB04 MOV X3, X31
	0x037CFB08 BL 0x2A719B8
	0x037CFB0C CBZ X21, 0x37D19C8
	0x037CFB10 MOV X0, X21
	0x037CFB14 MOV X1, X22
	0x037CFB18 MOV X2, X31
	0x037CFB1C BL 0x37348FC
	0x037CFB20 LDR X8, [X20]
	0x037CFB24 CBZ X8, 0x37D19C8
	0x037CFB28 LDR X0, [X25]
	0x037CFB2C LDR X21, [X8 + 0x60]
	0x037CFB30 LDR X23, [X8 + 0x48]
	0x037CFB34 BL 0x1C16F10
	0x037CFB38 CBZ X23, 0x37D19C8
	0x037CFB3C LDR X8, [X23]
	0x037CFB40 LDR X1, [X24]
	0x037CFB44 MOV X22, X0
	0x037CFB48 LDRH W9, [X8 + 0x12E]
	0x037CFB4C CBZ X9, 0x37CFB70
	0x037CFB50 LDR X10, [X8 + 0xB0]
	0x037CFB54 ADD X10, X10, 0x8
	0x037CFB58 LDUR X11, [X10 - 0x8]
	0x037CFB5C CMP X11, X1
	0x037CFB60 B.EQ 0x37CFB80
	0x037CFB64 SUBS X9, X9, 0x1
	0x037CFB68 ADD X10, X10, 0x10
	0x037CFB6C B.NE 0x37CFB58
	0x037CFB70 MOVZ W2, 0x2
	0x037CFB74 MOV X0, X23
	0x037CFB78 BL 0x1C5C788
	0x037CFB7C B 0x37CFB90
	0x037CFB80 LDR W9, [X10]
	0x037CFB84 ADD W9, W9, 0x2
	0x037CFB88 ADD X8, X8, W9, 0x4, SXTW
	0x037CFB8C ADD X0, X8, 0x138
	0x037CFB90 LDR X2, [X0 + 0x8]
	0x037CFB94 MOV X0, X22
	0x037CFB98 MOV X1, X23
	0x037CFB9C MOV X3, X31
	0x037CFBA0 BL 0x2A719B8
	0x037CFBA4 CBZ X21, 0x37D19C8
	0x037CFBA8 MOV X0, X21
	0x037CFBAC MOV X1, X22
	0x037CFBB0 MOV X2, X31
	0x037CFBB4 BL 0x3734A5C
	0x037CFBB8 LDR X8, [X20]
	0x037CFBBC CBZ X8, 0x37D19C8
	0x037CFBC0 LDR X0, [X25]
	0x037CFBC4 LDR X21, [X8 + 0x60]
	0x037CFBC8 LDR X23, [X8 + 0x48]
	0x037CFBCC BL 0x1C16F10
	0x037CFBD0 CBZ X23, 0x37D19C8
	0x037CFBD4 LDR X8, [X23]
	0x037CFBD8 LDR X1, [X24]
	0x037CFBDC MOV X22, X0
	0x037CFBE0 LDRH W9, [X8 + 0x12E]
	0x037CFBE4 CBZ X9, 0x37CFC08
	0x037CFBE8 LDR X10, [X8 + 0xB0]
	0x037CFBEC ADD X10, X10, 0x8
	0x037CFBF0 LDUR X11, [X10 - 0x8]
	0x037CFBF4 CMP X11, X1
	0x037CFBF8 B.EQ 0x37CFC18
	0x037CFBFC SUBS X9, X9, 0x1
	0x037CFC00 ADD X10, X10, 0x10
	0x037CFC04 B.NE 0x37CFBF0
	0x037CFC08 MOVZ W2, 0x2
	0x037CFC0C MOV X0, X23
	0x037CFC10 BL 0x1C5C788
	0x037CFC14 B 0x37CFC28
	0x037CFC18 LDR W9, [X10]
	0x037CFC1C ADD W9, W9, 0x2
	0x037CFC20 ADD X8, X8, W9, 0x4, SXTW
	0x037CFC24 ADD X0, X8, 0x138
	0x037CFC28 LDR X2, [X0 + 0x8]
	0x037CFC2C MOV X0, X22
	0x037CFC30 MOV X1, X23
	0x037CFC34 MOV X3, X31
	0x037CFC38 BL 0x2A719B8
	0x037CFC3C CBZ X21, 0x37D19C8
	0x037CFC40 MOV X0, X21
	0x037CFC44 MOV X1, X22
	0x037CFC48 MOV X2, X31
	0x037CFC4C BL 0x37349AC
	0x037CFC50 LDR X8, [X20]
	0x037CFC54 CBZ X8, 0x37D19C8
	0x037CFC58 LDR X0, [X25]
	0x037CFC5C LDR X21, [X8 + 0x68]
	0x037CFC60 LDR X23, [X8 + 0x48]
	0x037CFC64 BL 0x1C16F10
	0x037CFC68 CBZ X23, 0x37D19C8
	0x037CFC6C LDR X8, [X23]
	0x037CFC70 LDR X1, [X24]
	0x037CFC74 MOV X22, X0
	0x037CFC78 LDRH W9, [X8 + 0x12E]
	0x037CFC7C CBZ X9, 0x37CFCA0
	0x037CFC80 LDR X10, [X8 + 0xB0]
	0x037CFC84 ADD X10, X10, 0x8
	0x037CFC88 LDUR X11, [X10 - 0x8]
	0x037CFC8C CMP X11, X1
	0x037CFC90 B.EQ 0x37CFCB0
	0x037CFC94 SUBS X9, X9, 0x1
	0x037CFC98 ADD X10, X10, 0x10
	0x037CFC9C B.NE 0x37CFC88
	0x037CFCA0 MOVZ W2, 0x3
	0x037CFCA4 MOV X0, X23
	0x037CFCA8 BL 0x1C5C788
	0x037CFCAC B 0x37CFCC0
	0x037CFCB0 LDR W9, [X10]
	0x037CFCB4 ADD W9, W9, 0x3
	0x037CFCB8 ADD X8, X8, W9, 0x4, SXTW
	0x037CFCBC ADD X0, X8, 0x138
	0x037CFCC0 LDR X2, [X0 + 0x8]
	0x037CFCC4 MOV X0, X22
	0x037CFCC8 MOV X1, X23
	0x037CFCCC MOV X3, X31
	0x037CFCD0 BL 0x2A719B8
	0x037CFCD4 CBZ X21, 0x37D19C8
	0x037CFCD8 MOV X0, X21
	0x037CFCDC MOV X1, X22
	0x037CFCE0 MOV X2, X31
	0x037CFCE4 BL 0x37348FC
	0x037CFCE8 LDR X8, [X20]
	0x037CFCEC CBZ X8, 0x37D19C8
	0x037CFCF0 LDR X0, [X25]
	0x037CFCF4 LDR X21, [X8 + 0x68]
	0x037CFCF8 LDR X23, [X8 + 0x48]
	0x037CFCFC BL 0x1C16F10
	0x037CFD00 CBZ X23, 0x37D19C8
	0x037CFD04 LDR X8, [X23]
	0x037CFD08 LDR X1, [X24]
	0x037CFD0C MOV X22, X0
	0x037CFD10 LDRH W9, [X8 + 0x12E]
	0x037CFD14 CBZ X9, 0x37CFD38
	0x037CFD18 LDR X10, [X8 + 0xB0]
	0x037CFD1C ADD X10, X10, 0x8
	0x037CFD20 LDUR X11, [X10 - 0x8]
	0x037CFD24 CMP X11, X1
	0x037CFD28 B.EQ 0x37CFD48
	0x037CFD2C SUBS X9, X9, 0x1
	0x037CFD30 ADD X10, X10, 0x10
	0x037CFD34 B.NE 0x37CFD20
	0x037CFD38 MOVZ W2, 0x3
	0x037CFD3C MOV X0, X23
	0x037CFD40 BL 0x1C5C788
	0x037CFD44 B 0x37CFD58
	0x037CFD48 LDR W9, [X10]
	0x037CFD4C ADD W9, W9, 0x3
	0x037CFD50 ADD X8, X8, W9, 0x4, SXTW
	0x037CFD54 ADD X0, X8, 0x138
	0x037CFD58 LDR X2, [X0 + 0x8]
	0x037CFD5C MOV X0, X22
	0x037CFD60 MOV X1, X23
	0x037CFD64 MOV X3, X31
	0x037CFD68 BL 0x2A719B8
	0x037CFD6C CBZ X21, 0x37D19C8
	0x037CFD70 MOV X0, X21
	0x037CFD74 MOV X1, X22
	0x037CFD78 MOV X2, X31
	0x037CFD7C BL 0x3734A5C
	0x037CFD80 LDR X8, [X20]
	0x037CFD84 CBZ X8, 0x37D19C8
	0x037CFD88 LDR X0, [X25]
	0x037CFD8C LDR X21, [X8 + 0x68]
	0x037CFD90 LDR X23, [X8 + 0x48]
	0x037CFD94 BL 0x1C16F10
	0x037CFD98 CBZ X23, 0x37D19C8
	0x037CFD9C LDR X8, [X23]
	0x037CFDA0 LDR X1, [X24]
	0x037CFDA4 MOV X22, X0
	0x037CFDA8 LDRH W9, [X8 + 0x12E]
	0x037CFDAC CBZ X9, 0x37CFDD0
	0x037CFDB0 LDR X10, [X8 + 0xB0]
	0x037CFDB4 ADD X10, X10, 0x8
	0x037CFDB8 LDUR X11, [X10 - 0x8]
	0x037CFDBC CMP X11, X1
	0x037CFDC0 B.EQ 0x37CFDE0
	0x037CFDC4 SUBS X9, X9, 0x1
	0x037CFDC8 ADD X10, X10, 0x10
	0x037CFDCC B.NE 0x37CFDB8
	0x037CFDD0 MOVZ W2, 0x3
	0x037CFDD4 MOV X0, X23
	0x037CFDD8 BL 0x1C5C788
	0x037CFDDC B 0x37CFDF0
	0x037CFDE0 LDR W9, [X10]
	0x037CFDE4 ADD W9, W9, 0x3
	0x037CFDE8 ADD X8, X8, W9, 0x4, SXTW
	0x037CFDEC ADD X0, X8, 0x138
	0x037CFDF0 LDR X2, [X0 + 0x8]
	0x037CFDF4 MOV X0, X22
	0x037CFDF8 MOV X1, X23
	0x037CFDFC MOV X3, X31
	0x037CFE00 BL 0x2A719B8
	0x037CFE04 CBZ X21, 0x37D19C8
	0x037CFE08 MOV X0, X21
	0x037CFE0C MOV X1, X22
	0x037CFE10 MOV X2, X31
	0x037CFE14 BL 0x37349AC
	0x037CFE18 LDR X8, [X20]
	0x037CFE1C CBZ X8, 0x37D19C8
	0x037CFE20 LDR X0, [X25]
	0x037CFE24 LDR X21, [X8 + 0x70]
	0x037CFE28 LDR X23, [X8 + 0x48]
	0x037CFE2C BL 0x1C16F10
	0x037CFE30 CBZ X23, 0x37D19C8
	0x037CFE34 LDR X8, [X23]
	0x037CFE38 LDR X1, [X24]
	0x037CFE3C MOV X22, X0
	0x037CFE40 LDRH W9, [X8 + 0x12E]
	0x037CFE44 CBZ X9, 0x37CFE68
	0x037CFE48 LDR X10, [X8 + 0xB0]
	0x037CFE4C ADD X10, X10, 0x8
	0x037CFE50 LDUR X11, [X10 - 0x8]
	0x037CFE54 CMP X11, X1
	0x037CFE58 B.EQ 0x37CFE78
	0x037CFE5C SUBS X9, X9, 0x1
	0x037CFE60 ADD X10, X10, 0x10
	0x037CFE64 B.NE 0x37CFE50
	0x037CFE68 MOVZ W2, 0x4
	0x037CFE6C MOV X0, X23
	0x037CFE70 BL 0x1C5C788
	0x037CFE74 B 0x37CFE88
	0x037CFE78 LDR W9, [X10]
	0x037CFE7C ADD W9, W9, 0x4
	0x037CFE80 ADD X8, X8, W9, 0x4, SXTW
	0x037CFE84 ADD X0, X8, 0x138
	0x037CFE88 LDR X2, [X0 + 0x8]
	0x037CFE8C MOV X0, X22
	0x037CFE90 MOV X1, X23
	0x037CFE94 MOV X3, X31
	0x037CFE98 BL 0x2A719B8
	0x037CFE9C CBZ X21, 0x37D19C8
	0x037CFEA0 MOV X0, X21
	0x037CFEA4 MOV X1, X22
	0x037CFEA8 MOV X2, X31
	0x037CFEAC BL 0x37348FC
	0x037CFEB0 LDR X8, [X20]
	0x037CFEB4 CBZ X8, 0x37D19C8
	0x037CFEB8 LDR X0, [X25]
	0x037CFEBC LDR X21, [X8 + 0x70]
	0x037CFEC0 LDR X23, [X8 + 0x48]
	0x037CFEC4 BL 0x1C16F10
	0x037CFEC8 CBZ X23, 0x37D19C8
	0x037CFECC LDR X8, [X23]
	0x037CFED0 LDR X1, [X24]
	0x037CFED4 MOV X22, X0
	0x037CFED8 LDRH W9, [X8 + 0x12E]
	0x037CFEDC CBZ X9, 0x37CFF00
	0x037CFEE0 LDR X10, [X8 + 0xB0]
	0x037CFEE4 ADD X10, X10, 0x8
	0x037CFEE8 LDUR X11, [X10 - 0x8]
	0x037CFEEC CMP X11, X1
	0x037CFEF0 B.EQ 0x37CFF10
	0x037CFEF4 SUBS X9, X9, 0x1
	0x037CFEF8 ADD X10, X10, 0x10
	0x037CFEFC B.NE 0x37CFEE8
	0x037CFF00 MOVZ W2, 0x4
	0x037CFF04 MOV X0, X23
	0x037CFF08 BL 0x1C5C788
	0x037CFF0C B 0x37CFF20
	0x037CFF10 LDR W9, [X10]
	0x037CFF14 ADD W9, W9, 0x4
	0x037CFF18 ADD X8, X8, W9, 0x4, SXTW
	0x037CFF1C ADD X0, X8, 0x138
	0x037CFF20 LDR X2, [X0 + 0x8]
	0x037CFF24 MOV X0, X22
	0x037CFF28 MOV X1, X23
	0x037CFF2C MOV X3, X31
	0x037CFF30 BL 0x2A719B8
	0x037CFF34 CBZ X21, 0x37D19C8
	0x037CFF38 MOV X0, X21
	0x037CFF3C MOV X1, X22
	0x037CFF40 MOV X2, X31
	0x037CFF44 BL 0x3734A5C
	0x037CFF48 LDR X8, [X20]
	0x037CFF4C CBZ X8, 0x37D19C8
	0x037CFF50 LDR X0, [X25]
	0x037CFF54 LDR X21, [X8 + 0x70]
	0x037CFF58 LDR X23, [X8 + 0x48]
	0x037CFF5C BL 0x1C16F10
	0x037CFF60 CBZ X23, 0x37D19C8
	0x037CFF64 LDR X8, [X23]
	0x037CFF68 LDR X1, [X24]
	0x037CFF6C MOV X22, X0
	0x037CFF70 LDRH W9, [X8 + 0x12E]
	0x037CFF74 CBZ X9, 0x37CFF98
	0x037CFF78 LDR X10, [X8 + 0xB0]
	0x037CFF7C ADD X10, X10, 0x8
	0x037CFF80 LDUR X11, [X10 - 0x8]
	0x037CFF84 CMP X11, X1
	0x037CFF88 B.EQ 0x37CFFA8
	0x037CFF8C SUBS X9, X9, 0x1
	0x037CFF90 ADD X10, X10, 0x10
	0x037CFF94 B.NE 0x37CFF80
	0x037CFF98 MOVZ W2, 0x4
	0x037CFF9C MOV X0, X23
	0x037CFFA0 BL 0x1C5C788
	0x037CFFA4 B 0x37CFFB8
	0x037CFFA8 LDR W9, [X10]
	0x037CFFAC ADD W9, W9, 0x4
	0x037CFFB0 ADD X8, X8, W9, 0x4, SXTW
	0x037CFFB4 ADD X0, X8, 0x138
	0x037CFFB8 LDR X2, [X0 + 0x8]
	0x037CFFBC MOV X0, X22
	0x037CFFC0 MOV X1, X23
	0x037CFFC4 MOV X3, X31
	0x037CFFC8 BL 0x2A719B8
	0x037CFFCC CBZ X21, 0x37D19C8
	0x037CFFD0 MOV X0, X21
	0x037CFFD4 MOV X1, X22
	0x037CFFD8 MOV X2, X31
	0x037CFFDC BL 0x37349AC
	0x037CFFE0 LDR X8, [X20]
	0x037CFFE4 CBZ X8, 0x37D19C8
	0x037CFFE8 LDR X0, [X25]
	0x037CFFEC LDR X21, [X8 + 0x78]
	0x037CFFF0 LDR X23, [X8 + 0x48]
	0x037CFFF4 BL 0x1C16F10
	0x037CFFF8 CBZ X23, 0x37D19C8
	0x037CFFFC LDR X8, [X23]
	0x037D0000 LDR X1, [X24]
	0x037D0004 MOV X22, X0
	0x037D0008 LDRH W9, [X8 + 0x12E]
	0x037D000C CBZ X9, 0x37D0030
	0x037D0010 LDR X10, [X8 + 0xB0]
	0x037D0014 ADD X10, X10, 0x8
	0x037D0018 LDUR X11, [X10 - 0x8]
	0x037D001C CMP X11, X1
	0x037D0020 B.EQ 0x37D0040
	0x037D0024 SUBS X9, X9, 0x1
	0x037D0028 ADD X10, X10, 0x10
	0x037D002C B.NE 0x37D0018
	0x037D0030 MOVZ W2, 0x5
	0x037D0034 MOV X0, X23
	0x037D0038 BL 0x1C5C788
	0x037D003C B 0x37D0050
	0x037D0040 LDR W9, [X10]
	0x037D0044 ADD W9, W9, 0x5
	0x037D0048 ADD X8, X8, W9, 0x4, SXTW
	0x037D004C ADD X0, X8, 0x138
	0x037D0050 LDR X2, [X0 + 0x8]
	0x037D0054 MOV X0, X22
	0x037D0058 MOV X1, X23
	0x037D005C MOV X3, X31
	0x037D0060 BL 0x2A719B8
	0x037D0064 CBZ X21, 0x37D19C8
	0x037D0068 MOV X0, X21
	0x037D006C MOV X1, X22
	0x037D0070 MOV X2, X31
	0x037D0074 BL 0x37348FC
	0x037D0078 LDR X8, [X20]
	0x037D007C CBZ X8, 0x37D19C8
	0x037D0080 LDR X0, [X25]
	0x037D0084 LDR X21, [X8 + 0x78]
	0x037D0088 LDR X23, [X8 + 0x48]
	0x037D008C BL 0x1C16F10
	0x037D0090 CBZ X23, 0x37D19C8
	0x037D0094 LDR X8, [X23]
	0x037D0098 LDR X1, [X24]
	0x037D009C MOV X22, X0
	0x037D00A0 LDRH W9, [X8 + 0x12E]
	0x037D00A4 CBZ X9, 0x37D00C8
	0x037D00A8 LDR X10, [X8 + 0xB0]
	0x037D00AC ADD X10, X10, 0x8
	0x037D00B0 LDUR X11, [X10 - 0x8]
	0x037D00B4 CMP X11, X1
	0x037D00B8 B.EQ 0x37D00D8
	0x037D00BC SUBS X9, X9, 0x1
	0x037D00C0 ADD X10, X10, 0x10
	0x037D00C4 B.NE 0x37D00B0
	0x037D00C8 MOVZ W2, 0x5
	0x037D00CC MOV X0, X23
	0x037D00D0 BL 0x1C5C788
	0x037D00D4 B 0x37D00E8
	0x037D00D8 LDR W9, [X10]
	0x037D00DC ADD W9, W9, 0x5
	0x037D00E0 ADD X8, X8, W9, 0x4, SXTW
	0x037D00E4 ADD X0, X8, 0x138
	0x037D00E8 LDR X2, [X0 + 0x8]
	0x037D00EC MOV X0, X22
	0x037D00F0 MOV X1, X23
	0x037D00F4 MOV X3, X31
	0x037D00F8 BL 0x2A719B8
	0x037D00FC CBZ X21, 0x37D19C8
	0x037D0100 MOV X0, X21
	0x037D0104 MOV X1, X22
	0x037D0108 MOV X2, X31
	0x037D010C BL 0x3734A5C
	0x037D0110 LDR X8, [X20]
	0x037D0114 CBZ X8, 0x37D19C8
	0x037D0118 LDR X0, [X25]
	0x037D011C LDR X21, [X8 + 0x78]
	0x037D0120 LDR X23, [X8 + 0x48]
	0x037D0124 BL 0x1C16F10
	0x037D0128 CBZ X23, 0x37D19C8
	0x037D012C LDR X8, [X23]
	0x037D0130 LDR X1, [X24]
	0x037D0134 MOV X22, X0
	0x037D0138 LDRH W9, [X8 + 0x12E]
	0x037D013C CBZ X9, 0x37D0160
	0x037D0140 LDR X10, [X8 + 0xB0]
	0x037D0144 ADD X10, X10, 0x8
	0x037D0148 LDUR X11, [X10 - 0x8]
	0x037D014C CMP X11, X1
	0x037D0150 B.EQ 0x37D0170
	0x037D0154 SUBS X9, X9, 0x1
	0x037D0158 ADD X10, X10, 0x10
	0x037D015C B.NE 0x37D0148
	0x037D0160 MOVZ W2, 0x5
	0x037D0164 MOV X0, X23
	0x037D0168 BL 0x1C5C788
	0x037D016C B 0x37D0180
	0x037D0170 LDR W9, [X10]
	0x037D0174 ADD W9, W9, 0x5
	0x037D0178 ADD X8, X8, W9, 0x4, SXTW
	0x037D017C ADD X0, X8, 0x138
	0x037D0180 LDR X2, [X0 + 0x8]
	0x037D0184 MOV X0, X22
	0x037D0188 MOV X1, X23
	0x037D018C MOV X3, X31
	0x037D0190 BL 0x2A719B8
	0x037D0194 CBZ X21, 0x37D19C8
	0x037D0198 MOV X0, X21
	0x037D019C MOV X1, X22
	0x037D01A0 MOV X2, X31
	0x037D01A4 BL 0x37349AC
	0x037D01A8 LDR X8, [X20]
	0x037D01AC CBZ X8, 0x37D19C8
	0x037D01B0 LDR X0, [X25]
	0x037D01B4 LDR X21, [X8 + 0x80]
	0x037D01B8 LDR X23, [X8 + 0x48]
	0x037D01BC BL 0x1C16F10
	0x037D01C0 CBZ X23, 0x37D19C8
	0x037D01C4 LDR X8, [X23]
	0x037D01C8 LDR X1, [X24]
	0x037D01CC MOV X22, X0
	0x037D01D0 LDRH W9, [X8 + 0x12E]
	0x037D01D4 CBZ X9, 0x37D01F8
	0x037D01D8 LDR X10, [X8 + 0xB0]
	0x037D01DC ADD X10, X10, 0x8
	0x037D01E0 LDUR X11, [X10 - 0x8]
	0x037D01E4 CMP X11, X1
	0x037D01E8 B.EQ 0x37D0208
	0x037D01EC SUBS X9, X9, 0x1
	0x037D01F0 ADD X10, X10, 0x10
	0x037D01F4 B.NE 0x37D01E0
	0x037D01F8 MOVZ W2, 0x6
	0x037D01FC MOV X0, X23
	0x037D0200 BL 0x1C5C788
	0x037D0204 B 0x37D0218
	0x037D0208 LDR W9, [X10]
	0x037D020C ADD W9, W9, 0x6
	0x037D0210 ADD X8, X8, W9, 0x4, SXTW
	0x037D0214 ADD X0, X8, 0x138
	0x037D0218 LDR X2, [X0 + 0x8]
	0x037D021C MOV X0, X22
	0x037D0220 MOV X1, X23
	0x037D0224 MOV X3, X31
	0x037D0228 BL 0x2A719B8
	0x037D022C CBZ X21, 0x37D19C8
	0x037D0230 MOV X0, X21
	0x037D0234 MOV X1, X22
	0x037D0238 MOV X2, X31
	0x037D023C BL 0x37348FC
	0x037D0240 LDR X8, [X20]
	0x037D0244 CBZ X8, 0x37D19C8
	0x037D0248 LDR X0, [X25]
	0x037D024C LDR X21, [X8 + 0x80]
	0x037D0250 LDR X23, [X8 + 0x48]
	0x037D0254 BL 0x1C16F10
	0x037D0258 CBZ X23, 0x37D19C8
	0x037D025C LDR X8, [X23]
	0x037D0260 LDR X1, [X24]
	0x037D0264 MOV X22, X0
	0x037D0268 LDRH W9, [X8 + 0x12E]
	0x037D026C CBZ X9, 0x37D0290
	0x037D0270 LDR X10, [X8 + 0xB0]
	0x037D0274 ADD X10, X10, 0x8
	0x037D0278 LDUR X11, [X10 - 0x8]
	0x037D027C CMP X11, X1
	0x037D0280 B.EQ 0x37D02A0
	0x037D0284 SUBS X9, X9, 0x1
	0x037D0288 ADD X10, X10, 0x10
	0x037D028C B.NE 0x37D0278
	0x037D0290 MOVZ W2, 0x6
	0x037D0294 MOV X0, X23
	0x037D0298 BL 0x1C5C788
	0x037D029C B 0x37D02B0
	0x037D02A0 LDR W9, [X10]
	0x037D02A4 ADD W9, W9, 0x6
	0x037D02A8 ADD X8, X8, W9, 0x4, SXTW
	0x037D02AC ADD X0, X8, 0x138
	0x037D02B0 LDR X2, [X0 + 0x8]
	0x037D02B4 MOV X0, X22
	0x037D02B8 MOV X1, X23
	0x037D02BC MOV X3, X31
	0x037D02C0 BL 0x2A719B8
	0x037D02C4 CBZ X21, 0x37D19C8
	0x037D02C8 MOV X0, X21
	0x037D02CC MOV X1, X22
	0x037D02D0 MOV X2, X31
	0x037D02D4 BL 0x3734A5C
	0x037D02D8 LDR X8, [X20]
	0x037D02DC CBZ X8, 0x37D19C8
	0x037D02E0 LDR X0, [X25]
	0x037D02E4 LDR X21, [X8 + 0x80]
	0x037D02E8 LDR X23, [X8 + 0x48]
	0x037D02EC BL 0x1C16F10
	0x037D02F0 CBZ X23, 0x37D19C8
	0x037D02F4 LDR X8, [X23]
	0x037D02F8 LDR X1, [X24]
	0x037D02FC MOV X22, X0
	0x037D0300 LDRH W9, [X8 + 0x12E]
	0x037D0304 CBZ X9, 0x37D0328
	0x037D0308 LDR X10, [X8 + 0xB0]
	0x037D030C ADD X10, X10, 0x8
	0x037D0310 LDUR X11, [X10 - 0x8]
	0x037D0314 CMP X11, X1
	0x037D0318 B.EQ 0x37D0338
	0x037D031C SUBS X9, X9, 0x1
	0x037D0320 ADD X10, X10, 0x10
	0x037D0324 B.NE 0x37D0310
	0x037D0328 MOVZ W2, 0x6
	0x037D032C MOV X0, X23
	0x037D0330 BL 0x1C5C788
	0x037D0334 B 0x37D0348
	0x037D0338 LDR W9, [X10]
	0x037D033C ADD W9, W9, 0x6
	0x037D0340 ADD X8, X8, W9, 0x4, SXTW
	0x037D0344 ADD X0, X8, 0x138
	0x037D0348 LDR X2, [X0 + 0x8]
	0x037D034C MOV X0, X22
	0x037D0350 MOV X1, X23
	0x037D0354 MOV X3, X31
	0x037D0358 BL 0x2A719B8
	0x037D035C CBZ X21, 0x37D19C8
	0x037D0360 MOV X0, X21
	0x037D0364 MOV X1, X22
	0x037D0368 MOV X2, X31
	0x037D036C BL 0x37349AC
	0x037D0370 LDR X8, [X20]
	0x037D0374 CBZ X8, 0x37D19C8
	0x037D0378 LDR X0, [X25]
	0x037D037C LDR X21, [X8 + 0x88]
	0x037D0380 LDR X23, [X8 + 0x48]
	0x037D0384 BL 0x1C16F10
	0x037D0388 CBZ X23, 0x37D19C8
	0x037D038C LDR X8, [X23]
	0x037D0390 LDR X1, [X24]
	0x037D0394 MOV X22, X0
	0x037D0398 LDRH W9, [X8 + 0x12E]
	0x037D039C CBZ X9, 0x37D03C0
	0x037D03A0 LDR X10, [X8 + 0xB0]
	0x037D03A4 ADD X10, X10, 0x8
	0x037D03A8 LDUR X11, [X10 - 0x8]
	0x037D03AC CMP X11, X1
	0x037D03B0 B.EQ 0x37D03D0
	0x037D03B4 SUBS X9, X9, 0x1
	0x037D03B8 ADD X10, X10, 0x10
	0x037D03BC B.NE 0x37D03A8
	0x037D03C0 MOVZ W2, 0x7
	0x037D03C4 MOV X0, X23
	0x037D03C8 BL 0x1C5C788
	0x037D03CC B 0x37D03E0
	0x037D03D0 LDR W9, [X10]
	0x037D03D4 ADD W9, W9, 0x7
	0x037D03D8 ADD X8, X8, W9, 0x4, SXTW
	0x037D03DC ADD X0, X8, 0x138
	0x037D03E0 LDR X2, [X0 + 0x8]
	0x037D03E4 MOV X0, X22
	0x037D03E8 MOV X1, X23
	0x037D03EC MOV X3, X31
	0x037D03F0 BL 0x2A719B8
	0x037D03F4 CBZ X21, 0x37D19C8
	0x037D03F8 MOV X0, X21
	0x037D03FC MOV X1, X22
	0x037D0400 MOV X2, X31
	0x037D0404 BL 0x37348FC
	0x037D0408 LDR X8, [X20]
	0x037D040C CBZ X8, 0x37D19C8
	0x037D0410 LDR X0, [X25]
	0x037D0414 LDR X21, [X8 + 0x88]
	0x037D0418 LDR X23, [X8 + 0x48]
	0x037D041C BL 0x1C16F10
	0x037D0420 CBZ X23, 0x37D19C8
	0x037D0424 LDR X8, [X23]
	0x037D0428 LDR X1, [X24]
	0x037D042C MOV X22, X0
	0x037D0430 LDRH W9, [X8 + 0x12E]
	0x037D0434 CBZ X9, 0x37D0458
	0x037D0438 LDR X10, [X8 + 0xB0]
	0x037D043C ADD X10, X10, 0x8
	0x037D0440 LDUR X11, [X10 - 0x8]
	0x037D0444 CMP X11, X1
	0x037D0448 B.EQ 0x37D0468
	0x037D044C SUBS X9, X9, 0x1
	0x037D0450 ADD X10, X10, 0x10
	0x037D0454 B.NE 0x37D0440
	0x037D0458 MOVZ W2, 0x7
	0x037D045C MOV X0, X23
	0x037D0460 BL 0x1C5C788
	0x037D0464 B 0x37D0478
	0x037D0468 LDR W9, [X10]
	0x037D046C ADD W9, W9, 0x7
	0x037D0470 ADD X8, X8, W9, 0x4, SXTW
	0x037D0474 ADD X0, X8, 0x138
	0x037D0478 LDR X2, [X0 + 0x8]
	0x037D047C MOV X0, X22
	0x037D0480 MOV X1, X23
	0x037D0484 MOV X3, X31
	0x037D0488 BL 0x2A719B8
	0x037D048C CBZ X21, 0x37D19C8
	0x037D0490 MOV X0, X21
	0x037D0494 MOV X1, X22
	0x037D0498 MOV X2, X31
	0x037D049C BL 0x3734A5C
	0x037D04A0 LDR X8, [X20]
	0x037D04A4 CBZ X8, 0x37D19C8
	0x037D04A8 LDR X0, [X25]
	0x037D04AC LDR X21, [X8 + 0x88]
	0x037D04B0 LDR X23, [X8 + 0x48]
	0x037D04B4 BL 0x1C16F10
	0x037D04B8 CBZ X23, 0x37D19C8
	0x037D04BC LDR X8, [X23]
	0x037D04C0 LDR X1, [X24]
	0x037D04C4 MOV X22, X0
	0x037D04C8 LDRH W9, [X8 + 0x12E]
	0x037D04CC CBZ X9, 0x37D04F0
	0x037D04D0 LDR X10, [X8 + 0xB0]
	0x037D04D4 ADD X10, X10, 0x8
	0x037D04D8 LDUR X11, [X10 - 0x8]
	0x037D04DC CMP X11, X1
	0x037D04E0 B.EQ 0x37D0500
	0x037D04E4 SUBS X9, X9, 0x1
	0x037D04E8 ADD X10, X10, 0x10
	0x037D04EC B.NE 0x37D04D8
	0x037D04F0 MOVZ W2, 0x7
	0x037D04F4 MOV X0, X23

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X21, 0xC13000
	010 Move W8, [X21+581]
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x929000
	018 Move X0, [X0+984]
	019 Call 0x1C17CF4
	020 Move X0, 0x97A000
	021 Move X0, [X0+2264]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+581], W8
	025 Move X8, [X20]
	026 Compare X8, 0
	027 JumpIfEqual {719}
	028 Move X25, 0x929000
	029 Move X24, 0x97A000
	030 Move X22, [X8+32]
	031 Move X25, [X25+984]
	032 Move X24, [X24+2264]
	033 Compare X22, 0
	034 JumpIfEqual {380}
	035 Move X0, [X25]
	036 Move X21, [X8+40]
	037 Call 0x1C17F10
	038 Move X8, [X22]
	039 Move X1, [X24]
	040 Move X23, X0
	041 NotImplemented "Instruction LDRH not yet implemented."
	042 Compare X9, 0
	043 JumpIfEqual {50}
	044 Move X10, [X8+176]
	045 Add X10, X10, 8
	046 NotImplemented "Instruction LDUR not yet implemented."
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Subtract X9, X9, 1
	049 Add X10, X10, 16
	050 Move X0, X22
	051 Move W2, W31
	052 Call 0x1C5D788
	053 NotImplemented "Instruction LDRSW not yet implemented."
	054 Add X8, X8, X9
	055 Add X0, X8, 312
	056 Move X2, [X0+8]
	057 Move X0, X23
	058 Move X1, X22
	059 Move X3, X31
	060 Call Action`1<CallbackContext>..ctor, X0, X1, X2
	061 Compare X21, 0
	062 JumpIfEqual {719}
	063 Move X0, X21
	064 Move X1, X23
	065 Move X2, X31
	066 Call InputAction.remove_started, X0, X1
	067 Move X8, [X20]
	068 Compare X8, 0
	069 JumpIfEqual {719}
	070 Move X0, [X25]
	071 Move X23, [X8+32]
	072 Move X21, [X8+40]
	073 Call 0x1C17F10
	074 Compare X23, 0
	075 JumpIfEqual {719}
	076 Move X8, [X23]
	077 Move X1, [X24]
	078 Move X22, X0
	079 NotImplemented "Instruction LDRH not yet implemented."
	080 Compare X9, 0
	081 JumpIfEqual {88}
	082 Move X10, [X8+176]
	083 Add X10, X10, 8
	084 NotImplemented "Instruction LDUR not yet implemented."
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Subtract X9, X9, 1
	087 Add X10, X10, 16
	088 Move X0, X23
	089 Move W2, W31
	090 Call 0x1C5D788
	091 NotImplemented "Instruction LDRSW not yet implemented."
	092 Add X8, X8, X9
	093 Add X0, X8, 312
	094 Move X2, [X0+8]
	095 Move X0, X22
	096 Move X1, X23
	097 Move X3, X31
	098 Call Action`1<CallbackContext>..ctor, X0, X1, X2
	099 Compare X21, 0
	100 JumpIfEqual {719}
	101 Move X0, X21
	102 Move X1, X22
	103 Move X2, X31
	104 Call InputAction.remove_performed, X0, X1
	105 Move X8, [X20]
	106 Compare X8, 0
	107 JumpIfEqual {719}
	108 Move X0, [X25]
	109 Move X23, [X8+32]
	110 Move X21, [X8+40]
	111 Call 0x1C17F10
	112 Compare X23, 0
	113 JumpIfEqual {719}
	114 Move X8, [X23]
	115 Move X1, [X24]
	116 Move X22, X0
	117 NotImplemented "Instruction LDRH not yet implemented."
	118 Compare X9, 0
	119 JumpIfEqual {126}
	120 Move X10, [X8+176]
	121 Add X10, X10, 8
	122 NotImplemented "Instruction LDUR not yet implemented."
	123 NotImplemented "Instruction CMP not yet implemented."
	124 Subtract X9, X9, 1
	125 Add X10, X10, 16
	126 Move X0, X23
	127 Move W2, W31
	128 Call 0x1C5D788
	129 NotImplemented "Instruction LDRSW not yet implemented."
	130 Add X8, X8, X9
	131 Add X0, X8, 312
	132 Move X2, [X0+8]
	133 Move X0, X22
	134 Move X1, X23
	135 Move X3, X31
	136 Call Action`1<CallbackContext>..ctor, X0, X1, X2
	137 Compare X21, 0
	138 JumpIfEqual {719}
	139 Move X0, X21
	140 Move X1, X22
	141 Move X2, X31
	142 Call InputAction.remove_canceled, X0, X1
	143 Move X8, [X20]
	144 Compare X8, 0
	145 JumpIfEqual {719}
	146 Move X0, [X25]
	147 Move X21, [X8+48]
	148 Move X23, [X8+32]
	149 Call 0x1C17F10
	150 Compare X23, 0
	151 JumpIfEqual {719}
	152 Move X8, [X23]
	153 Move X1, [X24]
	154 Move X22, X0
	155 NotImplemented "Instruction LDRH not yet implemented."
	156 Compare X9, 0
	157 JumpIfEqual {164}
	158 Move X10, [X8+176]
	159 Add X10, X10, 8
	160 NotImplemented "Instruction LDUR not yet implemented."
	161 NotImplemented "Instruction CMP not yet implemented."
	162 Subtract X9, X9, 1
	163 Add X10, X10, 16
	164 Move W2, 1
	165 Move X0, X23
	166 Call 0x1C5D788
	167 Move W9, [X10]
	168 Add W9, W9, 1
	169 Add X8, X8, W9
	170 Add X0, X8, 312
	171 Move X2, [X0+8]
	172 Move X0, X22
	173 Move X1, X23
	174 Move X3, X31
	175 Call Action`1<CallbackContext>..ctor, X0, X1, X2
	176 Compare X21, 0
	177 JumpIfEqual {719}
	178 Move X0, X21
	179 Move X1, X22
	180 Move X2, X31
	181 Call InputAction.remove_started, X0, X1
	182 Move X8, [X20]
	183 Compare X8, 0
	184 JumpIfEqual {719}
	185 Move X0, [X25]
	186 Move X21, [X8+48]
	187 Move X23, [X8+32]
	188 Call 0x1C17F10
	189 Compare X23, 0
	190 JumpIfEqual {719}
	191 Move X8, [X23]
	192 Move X1, [X24]
	193 Move X22, X0
	194 NotImplemented "Instruction LDRH not yet implemented."
	195 Compare X9, 0
	196 JumpIfEqual {203}
	197 Move X10, [X8+176]
	198 Add X10, X10, 8
	199 NotImplemented "Instruction LDUR not yet implemented."
	200 NotImplemented "Instruction CMP not yet implemented."
	201 Subtract X9, X9, 1
	202 Add X10, X10, 16
	203 Move W2, 1
	204 Move X0, X23
	205 Call 0x1C5D788
	206 Move W9, [X10]
	207 Add W9, W9, 1
	208 Add X8, X8, W9
	209 Add X0, X8, 312
	210 Move X2, [X0+8]
	211 Move X0, X22
	212 Move X1, X23
	213 Move X3, X31
	214 Call Action`1<CallbackContext>..ctor, X0, X1, X2
	215 Compare X21, 0
	216 JumpIfEqual {719}
	217 Move X0, X21
	218 Move X1, X22
	219 Move X2, X31
	220 Call InputAction.remove_performed, X0, X1
	221 Move X8, [X20]
	222 Compare X8, 0
	223 JumpIfEqual {719}
	224 Move X0, [X25]
	225 Move X21, [X8+48]
	226 Move X23, [X8+32]
	227 Call 0x1C17F10
	228 Compare X23, 0
	229 JumpIfEqual {719}
	230 Move X8, [X23]
	231 Move X1, [X24]
	232 Move X22, X0
	233 NotImplemented "Instruction LDRH not yet implemented."
	234 Compare X9, 0
	235 JumpIfEqual {242}
	236 Move X10, [X8+176]
	237 Add X10, X10, 8
	238 NotImplemented "Instruction LDUR not yet implemented."
	239 NotImplemented "Instruction CMP not yet implemented."
	240 Subtract X9, X9, 1
	241 Add X10, X10, 16
	242 Move W2, 1
	243 Move X0, X23
	244 Call 0x1C5D788
	245 Move W9, [X10]
	246 Add W9, W9, 1
	247 Add X8, X8, W9
	248 Add X0, X8, 312
	249 Move X2, [X0+8]
	250 Move X0, X22
	251 Move X1, X23
	252 Move X3, X31
	253 Call Action`1<CallbackContext>..ctor, X0, X1, X2
	254 Compare X21, 0
	255 JumpIfEqual {719}
	256 Move X0, X21
	257 Move X1, X22
	258 Move X2, X31
	259 Call InputAction.remove_canceled, X0, X1
	260 Move X8, [X20]
	261 Compare X8, 0
	262 JumpIfEqual {719}
	263 Move X0, [X25]
	264 Move X21, [X8+56]
	265 Move X23, [X8+32]
	266 Call 0x1C17F10
	267 Compare X23, 0
	268 JumpIfEqual {719}
	269 Move X8, [X23]
	270 Move X1, [X24]
	271 Move X22, X0
	272 NotImplemented "Instruction LDRH not yet implemented."
	273 Compare X9, 0
	274 JumpIfEqual {281}
	275 Move X10, [X8+176]
	276 Add X10, X10, 8
	277 NotImplemented "Instruction LDUR not yet implemented."
	278 NotImplemented "Instruction CMP not yet implemented."
	279 Subtract X9, X9, 1
	280 Add X10, X10, 16
	281 Move W2, 2
	282 Move X0, X23
	283 Call 0x1C5D788
	284 Move W9, [X10]
	285 Add W9, W9, 2
	286 Add X8, X8, W9
	287 Add X0, X8, 312
	288 Move X2, [X0+8]
	289 Move X0, X22
	290 Move X1, X23
	291 Move X3, X31
	292 Call Action`1<CallbackContext>..ctor, X0, X1, X2
	293 Compare X21, 0
	294 JumpIfEqual {719}
	295 Move X0, X21
	296 Move X1, X22
	297 Move X2, X31
	298 Call InputAction.remove_started, X0, X1
	299 Move X8, [X20]
	300 Compare X8, 0
	301 JumpIfEqual {719}
	302 Move X0, [X25]
	303 Move X21, [X8+56]
	304 Move X23, [X8+32]
	305 Call 0x1C17F10
	306 Compare X23, 0
	307 JumpIfEqual {719}
	308 Move X8, [X23]
	309 Move X1, [X24]
	310 Move X22, X0
	311 NotImplemented "Instruction LDRH not yet implemented."
	312 Compare X9, 0
	313 JumpIfEqual {320}
	314 Move X10, [X8+176]
	315 Add X10, X10, 8
	316 NotImplemented "Instruction LDUR not yet implemented."
	317 NotImplemented "Instruction CMP not yet implemented."
	318 Subtract X9, X9, 1
	319 Add X10, X10, 16
	320 Move W2, 2
	321 Move X0, X23
	322 Call 0x1C5D788
	323 Move W9, [X10]
	324 Add W9, W9, 2
	325 Add X8, X8, W9
	326 Add X0, X8, 312
	327 Move X2, [X0+8]
	328 Move X0, X22
	329 Move X1, X23
	330 Move X3, X31
	331 Call Action`1<CallbackContext>..ctor, X0, X1, X2
	332 Compare X21, 0
	333 JumpIfEqual {719}
	334 Move X0, X21
	335 Move X1, X22
	336 Move X2, X31
	337 Call InputAction.remove_performed, X0, X1
	338 Move X8, [X20]
	339 Compare X8, 0
	340 JumpIfEqual {719}
	341 Move X0, [X25]
	342 Move X21, [X8+56]
	343 Move X23, [X8+32]
	344 Call 0x1C17F10
	345 Compare X23, 0
	346 JumpIfEqual {719}
	347 Move X8, [X23]
	348 Move X1, [X24]
	349 Move X22, X0
	350 NotImplemented "Instruction LDRH not yet implemented."
	351 Compare X9, 0
	352 JumpIfEqual {359}
	353 Move X10, [X8+176]
	354 Add X10, X10, 8
	355 NotImplemented "Instruction LDUR not yet implemented."
	356 NotImplemented "Instruction CMP not yet implemented."
	357 Subtract X9, X9, 1
	358 Add X10, X10, 16
	359 Move W2, 2
	360 Move X0, X23
	361 Call 0x1C5D788
	362 Move W9, [X10]
	363 Add W9, W9, 2
	364 Add X8, X8, W9
	365 Add X0, X8, 312
	366 Move X2, [X0+8]
	367 Move X0, X22
	368 Move X1, X23
	369 Move X3, X31
	370 Call Action`1<CallbackContext>..ctor, X0, X1, X2
	371 Compare X21, 0
	372 JumpIfEqual {719}
	373 Move X0, X21
	374 Move X1, X22
	375 Move X2, X31
	376 Call InputAction.remove_canceled, X0, X1
	377 Move X8, [X20]
	378 Compare X8, 0
	379 JumpIfEqual {719}
	380 Move [X8+32], X19
	381 Compare X19, 0
	382 JumpIfEqual {401}
	383 Move X0, [X25]
	384 Move X21, [X8+40]
	385 Call 0x1C17F10
	386 Move X8, [X19]
	387 Move X1, [X24]
	388 Move X22, X0
	389 NotImplemented "Instruction LDRH not yet implemented."
	390 Compare X9, 0
	391 JumpIfEqual {398}
	392 Move X10, [X8+176]
	393 Add X10, X10, 8
	394 NotImplemented "Instruction LDUR not yet implemented."
	395 NotImplemented "Instruction CMP not yet implemented."
	396 Subtract X9, X9, 1
	397 Add X10, X10, 16
	398 Move X0, X19
	399 Move W2, W31
	400 Call 0x1C5D788
	401 Move X20, [X31+48]
	402 Move X19, [X31+56]
	403 Move X22, [X31+32]
	404 Move X21, [X31+40]
	405 Move X24, [X31+16]
	406 Move X23, [X31+24]
	407 Move X30, [X31+64]
	408 Move X25, [X31+72]
	409 Return 
	410 NotImplemented "Instruction LDRSW not yet implemented."
	411 Add X8, X8, X9
	412 Add X0, X8, 312
	413 Move X2, [X0+8]
	414 Move X0, X22
	415 Move X1, X19
	416 Move X3, X31
	417 Call Action`1<CallbackContext>..ctor, X0, X1, X2
	418 Compare X21, 0
	419 JumpIfEqual {719}
	420 Move X0, X21
	421 Move X1, X22
	422 Move X2, X31
	423 Call InputAction.add_started, X0, X1
	424 Move X8, [X20]
	425 Compare X8, 0
	426 JumpIfEqual {719}
	427 Move X0, [X25]
	428 Move X21, [X8+40]
	429 Call 0x1C17F10
	430 Move X8, [X19]
	431 Move X1, [X24]
	432 Move X22, X0
	433 NotImplemented "Instruction LDRH not yet implemented."
	434 Compare X9, 0
	435 JumpIfEqual {442}
	436 Move X10, [X8+176]
	437 Add X10, X10, 8
	438 NotImplemented "Instruction LDUR not yet implemented."
	439 NotImplemented "Instruction CMP not yet implemented."
	440 Subtract X9, X9, 1
	441 Add X10, X10, 16
	442 Move X0, X19
	443 Move W2, W31
	444 Call 0x1C5D788
	445 NotImplemented "Instruction LDRSW not yet implemented."
	446 Add X8, X8, X9
	447 Add X0, X8, 312
	448 Move X2, [X0+8]
	449 Move X0, X22
	450 Move X1, X19
	451 Move X3, X31
	452 Call Action`1<CallbackContext>..ctor, X0, X1, X2
	453 Compare X21, 0
	454 JumpIfEqual {719}
	455 Move X0, X21
	456 Move X1, X22
	457 Move X2, X31
	458 Call InputAction.add_performed, X0, X1
	459 Move X8, [X20]
	460 Compare X8, 0
	461 JumpIfEqual {719}
	462 Move X0, [X25]
	463 Move X21, [X8+40]
	464 Call 0x1C17F10
	465 Move X8, [X19]
	466 Move X1, [X24]
	467 Move X22, X0
	468 NotImplemented "Instruction LDRH not yet implemented."
	469 Compare X9, 0
	470 JumpIfEqual {477}
	471 Move X10, [X8+176]
	472 Add X10, X10, 8
	473 NotImplemented "Instruction LDUR not yet implemented."
	474 NotImplemented "Instruction CMP not yet implemented."
	475 Subtract X9, X9, 1
	476 Add X10, X10, 16
	477 Move X0, X19
	478 Move W2, W31
	479 Call 0x1C5D788
	480 NotImplemented "Instruction LDRSW not yet implemented."
	481 Add X8, X8, X9
	482 Add X0, X8, 312
	483 Move X2, [X0+8]
	484 Move X0, X22
	485 Move X1, X19
	486 Move X3, X31
	487 Call Action`1<CallbackContext>..ctor, X0, X1, X2
	488 Compare X21, 0
	489 JumpIfEqual {719}
	490 Move X0, X21
	491 Move X1, X22
	492 Move X2, X31
	493 Call InputAction.add_canceled, X0, X1
	494 Move X8, [X20]
	495 Compare X8, 0
	496 JumpIfEqual {719}
	497 Move X0, [X25]
	498 Move X21, [X8+48]
	499 Call 0x1C17F10
	500 Move X8, [X19]
	501 Move X1, [X24]
	502 Move X22, X0
	503 NotImplemented "Instruction LDRH not yet implemented."
	504 Compare X9, 0
	505 JumpIfEqual {512}
	506 Move X10, [X8+176]
	507 Add X10, X10, 8
	508 NotImplemented "Instruction LDUR not yet implemented."
	509 NotImplemented "Instruction CMP not yet implemented."
	510 Subtract X9, X9, 1
	511 Add X10, X10, 16
	512 Move W2, 1
	513 Move X0, X19
	514 Call 0x1C5D788
	515 Move W9, [X10]
	516 Add W9, W9, 1
	517 Add X8, X8, W9
	518 Add X0, X8, 312
	519 Move X2, [X0+8]
	520 Move X0, X22
	521 Move X1, X19
	522 Move X3, X31
	523 Call Action`1<CallbackContext>..ctor, X0, X1, X2
	524 Compare X21, 0
	525 JumpIfEqual {719}
	526 Move X0, X21
	527 Move X1, X22
	528 Move X2, X31
	529 Call InputAction.add_started, X0, X1
	530 Move X8, [X20]
	531 Compare X8, 0
	532 JumpIfEqual {719}
	533 Move X0, [X25]
	534 Move X21, [X8+48]
	535 Call 0x1C17F10
	536 Move X8, [X19]
	537 Move X1, [X24]
	538 Move X22, X0
	539 NotImplemented "Instruction LDRH not yet implemented."
	540 Compare X9, 0
	541 JumpIfEqual {548}
	542 Move X10, [X8+176]
	543 Add X10, X10, 8
	544 NotImplemented "Instruction LDUR not yet implemented."
	545 NotImplemented "Instruction CMP not yet implemented."
	546 Subtract X9, X9, 1
	547 Add X10, X10, 16
	548 Move W2, 1
	549 Move X0, X19
	550 Call 0x1C5D788
	551 Move W9, [X10]
	552 Add W9, W9, 1
	553 Add X8, X8, W9
	554 Add X0, X8, 312
	555 Move X2, [X0+8]
	556 Move X0, X22
	557 Move X1, X19
	558 Move X3, X31
	559 Call Action`1<CallbackContext>..ctor, X0, X1, X2
	560 Compare X21, 0
	561 JumpIfEqual {719}
	562 Move X0, X21
	563 Move X1, X22
	564 Move X2, X31
	565 Call InputAction.add_performed, X0, X1
	566 Move X8, [X20]
	567 Compare X8, 0
	568 JumpIfEqual {719}
	569 Move X0, [X25]
	570 Move X21, [X8+48]
	571 Call 0x1C17F10
	572 Move X8, [X19]
	573 Move X1, [X24]
	574 Move X22, X0
	575 NotImplemented "Instruction LDRH not yet implemented."
	576 Compare X9, 0
	577 JumpIfEqual {584}
	578 Move X10, [X8+176]
	579 Add X10, X10, 8
	580 NotImplemented "Instruction LDUR not yet implemented."
	581 NotImplemented "Instruction CMP not yet implemented."
	582 Subtract X9, X9, 1
	583 Add X10, X10, 16
	584 Move W2, 1
	585 Move X0, X19
	586 Call 0x1C5D788
	587 Move W9, [X10]
	588 Add W9, W9, 1
	589 Add X8, X8, W9
	590 Add X0, X8, 312
	591 Move X2, [X0+8]
	592 Move X0, X22
	593 Move X1, X19
	594 Move X3, X31
	595 Call Action`1<CallbackContext>..ctor, X0, X1, X2
	596 Compare X21, 0
	597 JumpIfEqual {719}
	598 Move X0, X21
	599 Move X1, X22
	600 Move X2, X31
	601 Call InputAction.add_canceled, X0, X1
	602 Move X8, [X20]
	603 Compare X8, 0
	604 JumpIfEqual {719}
	605 Move X0, [X25]
	606 Move X21, [X8+56]
	607 Call 0x1C17F10
	608 Move X8, [X19]
	609 Move X1, [X24]
	610 Move X22, X0
	611 NotImplemented "Instruction LDRH not yet implemented."
	612 Compare X9, 0
	613 JumpIfEqual {620}
	614 Move X10, [X8+176]
	615 Add X10, X10, 8
	616 NotImplemented "Instruction LDUR not yet implemented."
	617 NotImplemented "Instruction CMP not yet implemented."
	618 Subtract X9, X9, 1
	619 Add X10, X10, 16
	620 Move W2, 2
	621 Move X0, X19
	622 Call 0x1C5D788
	623 Move W9, [X10]
	624 Add W9, W9, 2
	625 Add X8, X8, W9
	626 Add X0, X8, 312
	627 Move X2, [X0+8]
	628 Move X0, X22
	629 Move X1, X19
	630 Move X3, X31
	631 Call Action`1<CallbackContext>..ctor, X0, X1, X2
	632 Compare X21, 0
	633 JumpIfEqual {719}
	634 Move X0, X21
	635 Move X1, X22
	636 Move X2, X31
	637 Call InputAction.add_started, X0, X1
	638 Move X8, [X20]
	639 Compare X8, 0
	640 JumpIfEqual {719}
	641 Move X0, [X25]
	642 Move X21, [X8+56]
	643 Call 0x1C17F10
	644 Move X8, [X19]
	645 Move X1, [X24]
	646 Move X22, X0
	647 NotImplemented "Instruction LDRH not yet implemented."
	648 Compare X9, 0
	649 JumpIfEqual {656}
	650 Move X10, [X8+176]
	651 Add X10, X10, 8
	652 NotImplemented "Instruction LDUR not yet implemented."
	653 NotImplemented "Instruction CMP not yet implemented."
	654 Subtract X9, X9, 1
	655 Add X10, X10, 16
	656 Move W2, 2
	657 Move X0, X19
	658 Call 0x1C5D788
	659 Move W9, [X10]
	660 Add W9, W9, 2
	661 Add X8, X8, W9
	662 Add X0, X8, 312
	663 Move X2, [X0+8]
	664 Move X0, X22
	665 Move X1, X19
	666 Move X3, X31
	667 Call Action`1<CallbackContext>..ctor, X0, X1, X2
	668 Compare X21, 0
	669 JumpIfEqual {719}
	670 Move X0, X21
	671 Move X1, X22
	672 Move X2, X31
	673 Call InputAction.add_performed, X0, X1
	674 Move X8, [X20]
	675 Compare X8, 0
	676 JumpIfEqual {719}
	677 Move X0, [X25]
	678 Move X20, [X8+56]
	679 Call 0x1C17F10
	680 Move X8, [X19]
	681 Move X1, [X24]
	682 Move X21, X0
	683 NotImplemented "Instruction LDRH not yet implemented."
	684 Compare X9, 0
	685 JumpIfEqual {692}
	686 Move X10, [X8+176]
	687 Add X10, X10, 8
	688 NotImplemented "Instruction LDUR not yet implemented."
	689 NotImplemented "Instruction CMP not yet implemented."
	690 Subtract X9, X9, 1
	691 Add X10, X10, 16
	692 Move W2, 2
	693 Move X0, X19
	694 Call 0x1C5D788
	695 Move W9, [X10]
	696 Add W9, W9, 2
	697 Add X8, X8, W9
	698 Add X0, X8, 312
	699 Move X2, [X0+8]
	700 Move X0, X21
	701 Move X1, X19
	702 Move X3, X31
	703 Call Action`1<CallbackContext>..ctor, X0, X1, X2
	704 Compare X20, 0
	705 JumpIfEqual {719}
	706 Move X0, X20
	707 Move X1, X21
	708 Move X20, [X31+48]
	709 Move X19, [X31+56]
	710 Move X22, [X31+32]
	711 Move X21, [X31+40]
	712 Move X24, [X31+16]
	713 Move X23, [X31+24]
	714 Move X2, X31
	715 Move X30, [X31+64]
	716 Move X25, [X31+72]
	717 Call InputAction.add_canceled, X0, X1
	718 Return 
	719 Call 0x1C17F20

