Type: UnityEngine.InputSystem.InputAction

Method: System.String get_name()

Disassembly:
	0x037351E0 LDR X20, [X20 + 0x3E0]
	0x037351E4 LDR X23, [X23 + 0xFA8]

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: UnityEngine.InputSystem.InputActionType get_type()

Disassembly:
	0x037351E8 MOV X19, X0
	0x037351EC TBNZ X8, 0x0, 0x3735210

ISIL:
	001 Move W0, [X0+24]
	002 Return X0

Method: System.Guid get_id()

Disassembly:
	0x037351F0 ADRP X0, 0x9C2000
	0x037351F4 LDR X0, [X0 + 0x3E0]
	0x037351F8 BL 0x1C16CF4
	0x037351FC ADRP X0, 0xA0F000
	0x03735200 LDR X0, [X0 + 0xFA8]
	0x03735204 BL 0x1C16CF4
	0x03735208 MOVZ W8, 0x1
	0x0373520C STRB W8, [X21 + 0xCE5]
	0x03735210 LDR X0, [X20]
	0x03735214 LDR X21, [X19 + 0x10]
	0x03735218 LDR W22, [X19 + 0x18]
	0x0373521C BL 0x1C16F10
	0x03735220 MOV X1, X21

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+16], X30
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Call InputAction.MakeSureIdIsInPlace, X0
	006 Move X1, [X19+40]
	007 Add X0, X31, 0
	008 Move X2, X31
	009 Move [X31], X31
	010 Move [X31+8], X31
	011 Call Guid..ctor, X0, X1
	012 Move X0, [X31]
	013 Move X1, [X31+8]
	014 Move X30, [X31+16]
	015 Move X19, [X31+24]
	016 Add X31, X31, 32
	017 Return X0

Method: System.Guid get_idDontGenerate()

Disassembly:
	0x03735270 LDP X30, X23, [X31 + 0x10]
	0x03735274 STR W8, [X20 + 0xB4]
	0x03735278 LDR X8, [X19 + 0x20]
	0x0373527C STR X8, [X20 + 0x20]
	0x03735280 LDR V0, [X19 + 0x3]
	0x03735284 STR V0, [X20 + 0x3]
	0x03735288 LDR W8, [X19 + 0x48]
	0x0373528C STR W8, [X20 + 0x48]
	0x03735290 LDP X20, X19, [X31 + 0x30]
	0x03735294 ADD X31, X31, 0x40
	0x03735298 RET
	0x0373529C BL 0x1C16F20
	0x037352A0 B 0x37351C0
	0x037352A4 STR X30, [X31 - 0x20]!
	0x037352A8 STP X20, X19, [X31 + 0x10]
	0x037352AC LDR X8, [X0 + 0xC8]
	0x037352B0 MOV X20, X0
	0x037352B4 CBNZ X8, 0x37352C8

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+16], X30
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move X0, [X0+40]
	006 Move X1, X31
	007 Call String.IsNullOrEmpty, X0
	008 Move TEMP, X0
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfNotEqual {14}
	012 Move [X31], X31
	013 Move [X31+8], X31
	014 Move X1, [X19+40]
	015 Add X0, X31, 0
	016 Move X2, X31
	017 Move [X31], X31
	018 Move [X31+8], X31
	019 Call Guid..ctor, X0, X1
	020 Move X0, [X31]
	021 Move X1, [X31+8]
	022 Move X30, [X31+16]
	023 Move X19, [X31+24]
	024 Add X31, X31, 32
	025 Return X0

Method: System.String get_expectedControlType()

Disassembly:
	0x037352B8 MOV X0, X20
	0x037352BC BL 0x373572C

ISIL:
	001 Move X0, [X0+32]
	002 Return X0

Method: System.Void set_expectedControlType(System.String value)

Disassembly:
	0x037352C0 LDR X8, [X20 + 0xC8]
	0x037352C4 CBZ X8, 0x373533C

ISIL:
	001 Move [X0+32], X1
	002 Return 

Method: System.String get_processors()

Disassembly:
	0x037352C8 LDR X19, [X8 + 0x60]
	0x037352CC CBZ X19, 0x373532C

ISIL:
	001 Move X0, [X0+48]
	002 Return X0

Method: System.String get_interactions()

Disassembly:
	0x037352D0 MOV X0, X19
	0x037352D4 MOV X1, X31

ISIL:
	001 Move X0, [X0+56]
	002 Return X0

Method: UnityEngine.InputSystem.InputActionMap get_actionMap()

Disassembly:
	0x037352D8 BL 0x374A7E0
	0x037352DC LDRSW X8, [X20 + 0xC0]
	0x037352E0 MOVZ W9, 0x30
	0x037352E4 MOV X1, X31
	0x037352E8 MADD X20, X8, X9, X0
	0x037352EC LDRB W0, [X20]
	0x037352F0 BL 0x37C1380
	0x037352F4 TBZ X0, 0x0, 0x373532C

ISIL:
	001 Move X8, [X0+200]
	002 Compare X8, 0
	003 JumpIfEqual {8}
	004 Move X9, [X8+80]
	005 NotImplemented "Instruction CMP not yet implemented."
	006 NotImplemented "Instruction CSEL not yet implemented."
	007 Return X0
	008 Move X0, X31
	009 Return X0

Method: System.Nullable`1<UnityEngine.InputSystem.InputBinding> get_bindingMask()

Disassembly:
	0x03735318 LDP X20, X19, [X31 + 0x10]
	0x0373531C MOV W3, W31
	0x03735320 MOV X4, X31
	0x03735324 LDR X30, [X31], #0x20

ISIL:
	001 Add X1, X0, 80
	002 Move W2, 96
	003 Move X0, X8
	004 Call 0x3EB2AC0
	005 Return X0

Method: System.Void set_bindingMask(System.Nullable`1<UnityEngine.InputSystem.InputBinding> value)

Disassembly:
	0x03735328 B 0x375053C
	0x0373532C LDP X20, X19, [X31 + 0x10]
	0x03735330 MOV X0, X31
	0x03735334 LDR X30, [X31], #0x20
	0x03735338 RET
	0x0373533C BL 0x1C16F20
	0x03735340 SUB X31, X31, 0x70
	0x03735344 STR X30, [X31 + 0x40]
	0x03735348 STP X22, X21, [X31 + 0x50]
	0x0373534C STP X20, X19, [X31 + 0x60]
	0x03735350 MRS X22, 0xC000
	0x03735354 LDR X8, [X22 + 0x28]
	0x03735358 MOV X19, X0
	0x0373535C STR X8, [X31 + 0x38]
	0x03735360 LDR X8, [X0 + 0xC8]
	0x03735364 CBNZ X8, 0x3735378
	0x03735368 MOV X0, X19
	0x0373536C BL 0x373572C
	0x03735370 LDR X8, [X19 + 0xC8]
	0x03735374 CBZ X8, 0x37353D4
	0x03735378 LDR X20, [X8 + 0x60]
	0x0373537C CBZ X20, 0x37353B0
	0x03735380 LDR W21, [X19 + 0xC0]
	0x03735384 ADD X8, X31, 0x8
	0x03735388 MOV X0, X19
	0x0373538C BL 0x37347B4
	0x03735390 LDRB W8, [X31 + 0x8]
	0x03735394 MOVZ W3, 0x1
	0x03735398 MOV X0, X20
	0x0373539C MOV W1, W21
	0x037353A0 CMP W8, 0x0
	0x037353A4 CSET W2, NE
	0x037353A8 MOV X4, X31
	0x037353AC BL 0x374BF30
	0x037353B0 LDR X8, [X22 + 0x28]
	0x037353B4 LDR X9, [X31 + 0x38]
	0x037353B8 CMP X8, X9
	0x037353BC B.NE 0x37353D8
	0x037353C0 LDP X20, X19, [X31 + 0x60]
	0x037353C4 LDP X22, X21, [X31 + 0x50]
	0x037353C8 LDR X30, [X31 + 0x40]
	0x037353CC ADD X31, X31, 0x70
	0x037353D0 RET
	0x037353D4 BL 0x1C16F20
	0x037353D8 BL 0x3EB1B20
	0x037353DC STP X30, X19, [X31 - 0x10]!
	0x037353E0 LDR X8, [X0 + 0xC8]
	0x037353E4 MOV X19, X0
	0x037353E8 CBNZ X8, 0x37353FC
	0x037353EC MOV X0, X19
	0x037353F0 BL 0x373572C
	0x037353F4 LDR X8, [X19 + 0xC8]
	0x037353F8 CBZ X8, 0x373542C
	0x037353FC LDR X0, [X8 + 0x60]
	0x03735400 CBZ X0, 0x3735424
	0x03735404 MOV X1, X31
	0x03735408 BL 0x374A7E0
	0x0373540C LDRSW X8, [X19 + 0xC0]
	0x03735410 MOVZ W9, 0x30
	0x03735414 MOV X1, X31
	0x03735418 MADD X0, X8, X9, X0
	0x0373541C LDP X30, X19, [X31], #0x10
	0x03735420 B 0x374F1C0
	0x03735424 LDP X30, X19, [X31], #0x10
	0x03735428 RET
	0x0373542C BL 0x1C16F20
	0x03735430 STP X30, X19, [X31 - 0x10]!
	0x03735434 LDR X8, [X0 + 0xC8]
	0x03735438 MOV X19, X0
	0x0373543C CBNZ X8, 0x3735450
	0x03735440 MOV X0, X19
	0x03735444 BL 0x373572C
	0x03735448 LDR X8, [X19 + 0xC8]
	0x0373544C CBZ X8, 0x3735484
	0x03735450 LDR X0, [X8 + 0x60]
	0x03735454 CBZ X0, 0x373547C
	0x03735458 MOV X1, X31
	0x0373545C BL 0x374A7E0
	0x03735460 LDRSW X8, [X19 + 0xC0]
	0x03735464 MOVZ W9, 0x30
	0x03735468 MOV X1, X31
	0x0373546C MUL X8, X8, X9
	0x03735470 LDRB W0, [X8, X0, LSL]
	0x03735474 LDP X30, X19, [X31], #0x10
	0x03735478 B 0x37C1380
	0x0373547C LDP X30, X19, [X31], #0x10
	0x03735480 RET
	0x03735484 BL 0x1C16F20
	0x03735488 STR X30, [X31 - 0x20]!
	0x0373548C STP X20, X19, [X31 + 0x10]
	0x03735490 ADRP X20, 0xCAB000
	0x03735494 LDRB W8, [X20 + 0xCE6]
	0x03735498 MOV X19, X0
	0x0373549C TBNZ X8, 0x0, 0x37354B4
	0x037354A0 ADRP X0, 0xA0F000
	0x037354A4 LDR X0, [X0 + 0xF90]
	0x037354A8 BL 0x1C16CF4
	0x037354AC MOVZ W8, 0x1
	0x037354B0 STRB W8, [X20 + 0xCE6]
	0x037354B4 LDR X8, [X19 + 0xC8]
	0x037354B8 CBNZ X8, 0x37354CC
	0x037354BC MOV X0, X19
	0x037354C0 BL 0x373572C
	0x037354C4 LDR X8, [X19 + 0xC8]
	0x037354C8 CBZ X8, 0x3735524
	0x037354CC LDR X0, [X8 + 0x60]
	0x037354D0 CBZ X0, 0x3735518
	0x037354D4 ADRP X20, 0xA0F000
	0x037354D8 LDR X20, [X20 + 0xF90]
	0x037354DC MOV X1, X31
	0x037354E0 BL 0x374A7E0
	0x037354E4 LDR X8, [X20]
	0x037354E8 LDRSW X9, [X19 + 0xC0]
	0x037354EC MOVZ W10, 0x30
	0x037354F0 LDR X8, [X8 + 0xB8]
	0x037354F4 NOP
	0x037354F8 MADD X9, X9, X10, X0

ISIL:
	001 Move [X31-80], X29
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Subtract X31, X31, 544
	011 NotImplemented "Instruction MRS not yet implemented."
	012 Move X8, [X22+40]
	013 Move X21, 0xCAC000
	014 Move X20, X1
	015 Move X19, X0
	016 Move [X31+536], X8
	017 Move W8, [X21+3292]
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {36}
	022 Move X0, 0xA10000
	023 Move X0, [X0+3912]
	024 Call 0x1C17CF4
	025 Move X0, 0xA10000
	026 Move X0, [X0+3920]
	027 Call 0x1C17CF4
	028 Move X0, 0xA10000
	029 Move X0, [X0+3928]
	030 Call 0x1C17CF4
	031 Move X0, 0xA10000
	032 Move X0, [X0+3936]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X21+3292], W8
	036 Move X1, X20
	037 Move W23, [X1+1]
	038 Add X0, X31, 440
	039 Move W2, 95
	040 NotImplemented "Instruction CMP not yet implemented."
	041 NotImplemented "Instruction CSET not yet implemented."
	042 Call 0x3EB2AC0
	043 Move X21, X19
	044 Add X21, X21, 80
	045 Move W25, [X21]
	046 Add X0, X31, 344
	047 Move W2, 95
	048 Add X1, X21, 1
	049 Call 0x3EB2AC0
	050 NotImplemented "Instruction CMP not yet implemented."
	051 NotImplemented "Instruction CSET not yet implemented."
	052 Xor W8, W24, W8
	053 Move TEMP, X8
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfEqual {78}
	057 Compare W23, 0
	058 JumpIfEqual {129}
	059 Add X8, X31, 440
	060 Add X1, X8, 7
	061 Add X0, X31, 88
	062 Move W2, 88
	063 Call 0x3EB2AC0
	064 Add X8, X31, 344
	065 Add X1, X8, 7
	066 Add X0, X31, 0
	067 Move W2, 88
	068 Call 0x3EB2AC0
	069 Add X0, X31, 88
	070 Add X1, X31, 0
	071 Move X2, X31
	072 Call InputBinding.op_Equality, X0, X1
	073 Move TEMP, X0
	074 And TEMP, TEMP, 1
	075 Compare TEMP, 1
	076 JumpIfEqual {129}
	077 Move W23, [X20]
	078 Compare W23, 0
	079 JumpIfEqual {112}
	080 Move X8, 0xA10000
	081 Move X8, [X8+3936]
	082 Move X0, X20
	083 Add X23, X31, 256
	084 Move X1, [X8]
	085 Add X8, X31, 256
	086 Call Nullable`1<InputBinding>.get_Value, X0
	087 Move V1, [X31+272]
	088 Move V0, [X31+288]
	089 Move V2, [X31+16]
	090 NotImplemented "Instruction LDUR not yet implemented."
	091 NotImplemented "Instruction LDUR not yet implemented."
	092 Move X8, 0xA10000
	093 Move X8, [X8+3920]
	094 Move [X31+224], V1
	095 Move [X31+232], V0
	096 Move [X31+192], V4
	097 Move [X31+200], V2
	098 Move [X31+11], V3
	099 Move X2, [X8]
	100 Move X8, [X19+16]
	101 Move [X31+256], V2
	102 Move [X31+264], V1
	103 Move V1, [X31+176]
	104 Move V2, [X31+192]
	105 Add X1, X31, 256
	106 Move X0, X20
	107 Move [X31+18], V0
	108 Move [X31+304], X8
	109 Move [X23+56], V1
	110 Move [X23+72], V2
	111 Call Nullable`1<InputBinding>..ctor, X0, X1
	112 Move W2, 96
	113 Move X0, X21
	114 Move X1, X20
	115 Call 0x3EB2B30
	116 Move X0, [X19+200]
	117 Compare X0, 0
	118 JumpIfNotEqual {124}
	119 Move X0, X19
	120 Call InputAction.CreateInternalActionMapForSingletonAction, X0
	121 Move X0, [X19+200]
	122 Compare X0, 0
	123 JumpIfEqual {143}
	124 Move X8, [X0+96]
	125 Compare X8, 0
	126 JumpIfEqual {129}
	127 Move W1, 1
	128 Call InputActionMap.LazyResolveBindings, X0, X1
	129 Move X8, [X22+40]
	130 Move X9, [X31+536]
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Add X31, X31, 544
	133 Move X20, [X31+64]
	134 Move X19, [X31+72]
	135 Move X22, [X31+48]
	136 Move X21, [X31+56]
	137 Move X24, [X31+32]
	138 Move X23, [X31+40]
	139 Move X30, [X31+16]
	140 Move X25, [X31+24]
	141 Move X29, [X31+80]
	142 Return 
	143 Call 0x1C17F20
	144 Call 0x3EB2B20

Method: UnityEngine.InputSystem.Utilities.ReadOnlyArray`1<UnityEngine.InputSystem.InputBinding> get_bindings()

Disassembly:
	0x037355CC STR X30, [X31 + 0x10]
	0x037355D0 STP X22, X21, [X31 + 0x20]
	0x037355D4 STP X20, X19, [X31 + 0x30]
	0x037355D8 LDR X8, [X0 + 0xC8]
	0x037355DC MOV X19, X0
	0x037355E0 CBNZ X8, 0x37355F4
	0x037355E4 MOV X0, X19
	0x037355E8 BL 0x373572C
	0x037355EC LDR X8, [X19 + 0xC8]
	0x037355F0 CBZ X8, 0x37356F4
	0x037355F4 LDR X20, [X8 + 0x60]
	0x037355F8 CBZ X20, 0x37356B8

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+200]
	005 Compare X0, 0
	006 JumpIfNotEqual {12}
	007 Move X0, X19
	008 Call InputAction.CreateInternalActionMapForSingletonAction, X0
	009 Move X0, [X19+200]
	010 Compare X0, 0
	011 JumpIfEqual {15}
	012 Move X1, X19
	013 Move X30, [X31+16]
	014 Move X19, [X31+24]
	015 Call 0x1C17F20

Method: UnityEngine.InputSystem.Utilities.ReadOnlyArray`1<UnityEngine.InputSystem.InputControl> get_controls()

Disassembly:
	0x0373567C FMOV S0, 1
	0x03735680 B.LS 0x3735690
	0x03735684 FSUB D0, D1, D2
	0x03735688 FDIV D0, D0, D1
	0x00000000 INVALID
	0x03735690 LDR V1, [X19 + 0x24]
	0x03735694 FCMP S1, 0x0
	0x03735698 B.LE 0x37356E0
	0x0373569C LDR V2, [X19 + 0x4]
	0x037356A0 LDR V3, [X19 + 0x20]
	0x037356A4 FMUL S0, S0, S2
	0x037356A8 FADD S0, S3, S0
	0x037356AC FADD S1, S1, S3
	0x037356B0 FDIV S0, S0, S1
	0x037356B4 B 0x37356E0
	0x037356B8 FMOV S0, W31
	0x037356BC B 0x37356E0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, [X0+200]
	005 Move X19, X0
	006 Compare X20, 0
	007 JumpIfNotEqual {13}
	008 Move X0, X19
	009 Call InputAction.CreateInternalActionMapForSingletonAction, X0
	010 Move X20, [X19+200]
	011 Compare X20, 0
	012 JumpIfEqual {22}
	013 Move X0, X20
	014 Call InputActionMap.ResolveBindingsIfNecessary, X0
	015 Move X0, X20
	016 Move X1, X19
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 Move X30, [X31+32]
	020 Call InputActionMap.GetControlsForSingleAction, X0, X1
	021 Return X0
	022 Call 0x1C17F20

Method: UnityEngine.InputSystem.InputActionPhase get_phase()

Disassembly:
	0x03735774 STRB W8, [X20 + 0xCE9]
	0x03735778 LDR X0, [X22]
	0x0373577C BL 0x1C16F10
	0x03735780 MOVN W8, 0x0
	0x03735784 MOV X1, X31
	0x03735788 MOV X20, X0
	0x0373578C STR W8, [X0 + 0x58]
	0x03735790 BL 0x33BDD8C
	0x03735794 LDR X0, [X21]
	0x03735798 MOVZ W1, 0x1
	0x0373579C BL 0x1C16D6C
	0x037357A0 CBZ X0, 0x37357D4
	0x037357A4 LDR W8, [X0 + 0x18]
	0x037357A8 CBZ W8, 0x37357D8
	0x037357AC STR X19, [X0 + 0x20]
	0x037357B0 STR X0, [X20 + 0x28]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+64], X30
	003 Move [X31+72], X19
	004 NotImplemented "Instruction MRS not yet implemented."
	005 Move X8, [X19+40]
	006 Move [X31+56], X8
	007 Add X8, X31, 8
	008 Call InputAction.get_currentState, X0
	009 Move W0, [X31+8]
	010 Move X8, [X19+40]
	011 Move X9, [X31+56]
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Move X30, [X31+64]
	014 Move X19, [X31+72]
	015 Add X31, X31, 80
	016 Return X0
	017 Call 0x3EB2B20

Method: System.Boolean get_inProgress()

Disassembly:
	0x03735810 CBZ X0, 0x3735828
	0x03735814 LDR W1, [X19 + 0xC0]
	0x03735818 MOVZ W2, 0x1
	0x0373581C MOV X3, X31
	0x03735820 LDP X30, X19, [X31], #0x10
	0x03735824 B 0x374DB38
	0x03735828 BL 0x1C16F20
	0x0373582C SUB X31, X31, 0x60
	0x03735830 STP X30, X21, [X31 + 0x40]
	0x03735834 STP X20, X19, [X31 + 0x50]
	0x03735838 ADRP X21, 0xCAB000
	0x0373583C LDRB W8, [X21 + 0xCEA]
	0x03735840 MOV X19, X1
	0x03735844 MOV X20, X0
	0x03735848 TBNZ X8, 0x0, 0x3735878
	0x0373584C ADRP X0, 0xA0F000
	0x03735850 LDR X0, [X0 + 0xFB8]
	0x03735854 BL 0x1C16CF4
	0x03735858 ADRP X0, 0xA0F000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+64], X30
	003 Move [X31+72], X19
	004 NotImplemented "Instruction MRS not yet implemented."
	005 Move X8, [X19+40]
	006 Move [X31+56], X8
	007 Add X8, X31, 8
	008 Call InputAction.get_currentState, X0
	009 Move W0, [X31+8]
	010 Move X1, X31
	011 Call InputExtensions.IsInProgress, X0
	012 Move X8, [X19+40]
	013 Move X9, [X31+56]
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Move X30, [X31+64]
	016 Move X19, [X31+72]
	017 And W0, W0, 1
	018 Add X31, X31, 80
	019 Return X0
	020 Call 0x3EB2B20

Method: System.Boolean get_enabled()

Disassembly:
	0x0373585C LDR X0, [X0 + 0xFC0]
	0x03735860 BL 0x1C16CF4
	0x03735864 ADRP X0, 0xA0F000
	0x03735868 LDR X0, [X0 + 0xFC8]
	0x0373586C BL 0x1C16CF4
	0x03735870 MOVZ W8, 0x1
	0x03735874 STRB W8, [X21 + 0xCEA]
	0x03735878 STP X31, X31, [X31 + 0x20]
	0x0373587C STR X31, [X31 + 0x30]
	0x03735880 CBZ X19, 0x3735908
	0x03735884 LDR X19, [X19 + 0x78]
	0x03735888 CBZ X19, 0x373591C
	0x0373588C MOV X0, X19
	0x03735890 MOV X1, X31
	0x03735894 BL 0x376EE00
	0x03735898 TBZ X0, 0x0, 0x3735908
	0x0373589C LDR X0, [X20 + 0xC8]
	0x037358A0 CBNZ X0, 0x37358B4

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+64], X30
	003 Move [X31+72], X19
	004 NotImplemented "Instruction MRS not yet implemented."
	005 Move X8, [X19+40]
	006 Move [X31+56], X8
	007 Add X8, X31, 8
	008 Call InputAction.get_currentState, X0
	009 Move W8, [X31+8]
	010 Move X9, [X19+40]
	011 Move X10, [X31+56]
	012 NotImplemented "Instruction CMP not yet implemented."
	013 NotImplemented "Instruction CSET not yet implemented."
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Move X30, [X31+64]
	016 Move X19, [X31+72]
	017 Add X31, X31, 80
	018 Return X0
	019 Call 0x3EB2B20

Method: System.Void add_started(System.Action`1<UnityEngine.InputSystem.InputAction/CallbackContext> value)

Disassembly:
	0x037358A4 MOV X0, X20
	0x037358A8 BL 0x373572C
	0x037358AC LDR X0, [X20 + 0xC8]
	0x037358B0 CBZ X0, 0x373591C
	0x037358B4 ADD X8, X31, 0x8
	0x037358B8 BL 0x3735920
	0x037358BC LDUR V0, [X31 + 0x8]
	0x037358C0 LDR X8, [X31 + 0x18]
	0x037358C4 STR V0, [X31 + 0x2]
	0x037358C8 LDRB W9, [X31 + 0x20]
	0x037358CC STR X8, [X31 + 0x30]
	0x037358D0 CBZ W9, 0x3735900
	0x037358D4 ADRP X8, 0xA0F000
	0x037358D8 LDR X8, [X8 + 0xFC0]
	0x037358DC ADD X0, X31, 0x20
	0x037358E0 LDR X1, [X8]
	0x037358E4 BL 0x242CC48
	0x037358E8 ADRP X8, 0xA0F000
	0x037358EC LDR X8, [X8 + 0xFC8]
	0x037358F0 MOV X2, X19
	0x037358F4 LDR X3, [X8]
	0x037358F8 BL 0x223C504

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xCAC000
	007 Move X21, 0xA10000
	008 Move W8, [X22+3293]
	009 Move X21, [X21+3968]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xA10000
	017 Move X0, [X0+3968]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+3293], W8
	021 Move X2, [X21]
	022 Add X0, X20, 208
	023 Move X1, X19
	024 Move X20, [X31+32]
	025 Move X19, [X31+40]
	026 Move X22, [X31+16]
	027 Move X21, [X31+24]
	028 Move X30, [X31+48]
	029 Call 0x28F24E0, X0, X1
	030 Return 

Method: System.Void remove_started(System.Action`1<UnityEngine.InputSystem.InputAction/CallbackContext> value)

Disassembly:
	0x037358FC TBZ X0, 0x0, 0x3735908
	0x03735900 MOVZ W0, 0x1
	0x03735904 B 0x373590C
	0x03735908 MOV W0, W31
	0x0373590C LDP X20, X19, [X31 + 0x50]
	0x03735910 LDP X30, X21, [X31 + 0x40]
	0x03735914 ADD X31, X31, 0x60
	0x03735918 RET
	0x0373591C BL 0x1C16F20
	0x03735920 SUB X31, X31, 0x70
	0x03735924 STR X30, [X31 + 0x40]
	0x03735928 STP X22, X21, [X31 + 0x50]
	0x0373592C STP X20, X19, [X31 + 0x60]
	0x03735930 MRS X21, 0xC000
	0x03735934 LDR X9, [X21 + 0x28]
	0x03735938 ADRP X22, 0xCAB000
	0x0373593C MOV X20, X0
	0x03735940 MOV X19, X8
	0x03735944 STR X9, [X31 + 0x38]
	0x03735948 LDRB W9, [X22 + 0xD0B]
	0x0373594C TBNZ X9, 0x0, 0x3735964
	0x03735950 ADRP X0, 0xA0F000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xCAC000
	007 Move X21, 0xA10000
	008 Move W8, [X22+3294]
	009 Move X21, [X21+3976]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xA10000
	017 Move X0, [X0+3976]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+3294], W8
	021 Move X2, [X21]
	022 Add X0, X20, 208
	023 Move X1, X19
	024 Move X20, [X31+32]
	025 Move X19, [X31+40]
	026 Move X22, [X31+16]
	027 Move X21, [X31+24]
	028 Move X30, [X31+48]
	029 Call 0x28F2650, X0, X1
	030 Return 

Method: System.Void add_canceled(System.Action`1<UnityEngine.InputSystem.InputAction/CallbackContext> value)

Disassembly:
	0x03735954 LDR X0, [X0 + 0xFB8]
	0x03735958 BL 0x1C16CF4
	0x0373595C MOVZ W8, 0x1
	0x03735960 STRB W8, [X22 + 0xD0B]
	0x03735964 ADD X0, X20, 0xD8
	0x03735968 ADD X8, X31, 0x8
	0x0373596C BL 0x3736A70
	0x03735970 LDRB W8, [X31 + 0x8]
	0x03735974 LDUR V0, [X31 + 0x9]
	0x03735978 LDR X9, [X31 + 0x18]
	0x0373597C STR V0, [X31 + 0x2]
	0x03735980 STUR X9, [X31 + 0x2F]
	0x03735984 CBZ W8, 0x37359A0
	0x03735988 LDUR X9, [X31 + 0x2F]
	0x0373598C LDR V0, [X31 + 0x2]
	0x03735990 STRB W8, [X19]
	0x03735994 STR X9, [X19 + 0x10]
	0x03735998 STUR V0, [X19 + 0x1]
	0x0373599C B 0x37359D0
	0x037359A0 LDR X8, [X20 + 0x20]
	0x037359A4 CBZ X8, 0x37359C8
	0x037359A8 ADD X0, X8, 0xA0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xCAC000
	007 Move X21, 0xA10000
	008 Move W8, [X22+3295]
	009 Move X21, [X21+3968]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xA10000
	017 Move X0, [X0+3968]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+3295], W8
	021 Move X2, [X21]
	022 Add X0, X20, 288
	023 Move X1, X19
	024 Move X20, [X31+32]
	025 Move X19, [X31+40]
	026 Move X22, [X31+16]
	027 Move X21, [X31+24]
	028 Move X30, [X31+48]
	029 Call 0x28F24E0, X0, X1
	030 Return 

Method: System.Void remove_canceled(System.Action`1<UnityEngine.InputSystem.InputAction/CallbackContext> value)

Disassembly:
	0x037359AC ADD X8, X31, 0x8
	0x037359B0 BL 0x3736A70
	0x037359B4 LDR X8, [X31 + 0x18]
	0x037359B8 LDUR V0, [X31 + 0x8]
	0x037359BC STR X8, [X19 + 0x10]
	0x037359C0 STR V0, [X19]
	0x037359C4 B 0x37359D0
	0x037359C8 STP X31, X31, [X19]
	0x037359CC STR X31, [X19 + 0x10]
	0x037359D0 LDR X8, [X21 + 0x28]
	0x037359D4 LDR X9, [X31 + 0x38]
	0x037359D8 CMP X8, X9
	0x037359DC B.NE 0x37359F4
	0x037359E0 LDP X20, X19, [X31 + 0x60]
	0x037359E4 LDP X22, X21, [X31 + 0x50]
	0x037359E8 LDR X30, [X31 + 0x40]
	0x037359EC ADD X31, X31, 0x70
	0x037359F0 RET
	0x037359F4 BL 0x3EB1B20
	0x037359F8 STP X30, X21, [X31 - 0x20]!
	0x037359FC STP X20, X19, [X31 + 0x10]
	0x03735A00 ADRP X21, 0xCAB000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xCAC000
	007 Move X21, 0xA10000
	008 Move W8, [X22+3296]
	009 Move X21, [X21+3976]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xA10000
	017 Move X0, [X0+3976]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+3296], W8
	021 Move X2, [X21]
	022 Add X0, X20, 288
	023 Move X1, X19
	024 Move X20, [X31+32]
	025 Move X19, [X31+40]
	026 Move X22, [X31+16]
	027 Move X21, [X31+24]
	028 Move X30, [X31+48]
	029 Call 0x28F2650, X0, X1
	030 Return 

Method: System.Void add_performed(System.Action`1<UnityEngine.InputSystem.InputAction/CallbackContext> value)

Disassembly:
	0x03735A04 LDRB W9, [X21 + 0xCEB]
	0x03735A08 MOV X20, X0
	0x03735A0C MOV X19, X8
	0x03735A10 TBNZ X9, 0x0, 0x3735A28
	0x03735A14 ADRP X0, 0xA0F000
	0x03735A18 LDR X0, [X0 + 0xF58]
	0x03735A1C BL 0x1C16CF4
	0x03735A20 MOVZ W8, 0x1
	0x03735A24 STRB W8, [X21 + 0xCEB]
	0x03735A28 MOV X1, X20
	0x03735A2C LDRB W8, [X1 + 0x50]!
	0x03735A30 CBZ W8, 0x3735A48
	0x03735A34 MOV X0, X19
	0x03735A38 LDP X20, X19, [X31 + 0x10]
	0x03735A3C MOVZ W2, 0x60
	0x03735A40 LDP X30, X21, [X31], #0x20
	0x03735A44 B 0x3EB1AC0
	0x03735A48 LDR X8, [X20 + 0xC8]
	0x03735A4C CBZ X8, 0x3735A6C
	0x03735A50 MOV X1, X8
	0x03735A54 LDRB W9, [X1 + 0x68]!
	0x03735A58 CBNZ W9, 0x3735A34

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xCAC000
	007 Move X21, 0xA10000
	008 Move W8, [X22+3297]
	009 Move X21, [X21+3968]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xA10000
	017 Move X0, [X0+3968]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+3297], W8
	021 Move X2, [X21]
	022 Add X0, X20, 368
	023 Move X1, X19
	024 Move X20, [X31+32]
	025 Move X19, [X31+40]
	026 Move X22, [X31+16]
	027 Move X21, [X31+24]
	028 Move X30, [X31+48]
	029 Call 0x28F24E0, X0, X1
	030 Return 

Method: System.Void remove_performed(System.Action`1<UnityEngine.InputSystem.InputAction/CallbackContext> value)

Disassembly:
	0x03735A5C LDR X8, [X8 + 0x20]
	0x03735A60 CBZ X8, 0x3735A6C
	0x03735A64 ADD X1, X8, 0x30
	0x03735A68 B 0x3735A34
	0x03735A6C MOVI V0.2D, 0x0
	0x03735A70 STP V0, V0, [X19 + 0x40]
	0x03735A74 STP V0, V0, [X19 + 0x20]
	0x03735A78 STP V0, V0, [X19]
	0x03735A7C LDP X20, X19, [X31 + 0x10]
	0x03735A80 LDP X30, X21, [X31], #0x20
	0x03735A84 RET
	0x03735A88 SUB X31, X31, 0x50
	0x03735A8C STP X30, X25, [X31 + 0x10]
	0x03735A90 STP X24, X23, [X31 + 0x20]
	0x03735A94 STP X22, X21, [X31 + 0x30]
	0x03735A98 STP X20, X19, [X31 + 0x40]
	0x03735A9C ADRP X21, 0xCAB000
	0x03735AA0 LDRB W8, [X21 + 0xCEC]
	0x03735AA4 MOV W20, W1
	0x03735AA8 MOV X19, X0
	0x03735AAC TBNZ X8, 0x0, 0x3735AC4
	0x03735AB0 ADRP X0, 0xA0F000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xCAC000
	007 Move X21, 0xA10000
	008 Move W8, [X22+3298]
	009 Move X21, [X21+3976]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xA10000
	017 Move X0, [X0+3976]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+3298], W8
	021 Move X2, [X21]
	022 Add X0, X20, 368
	023 Move X1, X19
	024 Move X20, [X31+32]
	025 Move X19, [X31+40]
	026 Move X22, [X31+16]
	027 Move X21, [X31+24]
	028 Move X30, [X31+48]
	029 Call 0x28F2650, X0, X1
	030 Return 

Method: System.Boolean get_triggered()

Disassembly:
	0x03735AB4 LDR X0, [X0 + 0xFD0]

ISIL:
No ISIL was generated
Method: UnityEngine.InputSystem.InputControl get_activeControl()

Disassembly:
	0x03735B58 MOV X0, X20
	0x03735B5C BL 0x1C16D08
	0x03735B60 ADD X1, X31, 0xC
	0x03735B64 BL 0x1C16E04
	0x03735B68 MOV X21, X0
	0x03735B6C ADD W8, W24, 0x1
	0x03735B70 MOV X0, X20
	0x03735B74 STR W8, [X31 + 0x8]
	0x03735B78 BL 0x1C16D08
	0x03735B7C ADD X1, X31, 0x8
	0x03735B80 BL 0x1C16E04
	0x03735B84 MOV X20, X0
	0x03735B88 ADRP X0, 0xA0F000
	0x03735B8C LDR X0, [X0 + 0xFD8]
	0x03735B90 BL 0x1C16D08
	0x03735B94 MOV X1, X21
	0x03735B98 MOV X2, X19
	0x03735B9C MOV X3, X20
	0x03735BA0 MOV X4, X31
	0x03735BA4 BL 0x3227C18
	0x03735BA8 MOV X19, X0
	0x03735BAC ADRP X0, 0x9C6000
	0x03735BB0 LDR X0, [X0 + 0x760]
	0x03735BB4 BL 0x1C16D08
	0x03735BB8 BL 0x1C16F10
	0x03735BBC MOV X20, X0
	0x03735BC0 ADRP X0, 0xA0F000
	0x03735BC4 LDR X0, [X0 + 0xFE0]
	0x03735BC8 BL 0x1C16D08
	0x03735BCC MOV X1, X0
	0x03735BD0 MOV X0, X20
	0x03735BD4 MOV X2, X19
	0x03735BD8 MOV X3, X31
	0x03735BDC BL 0x3311888
	0x03735BE0 ADRP X0, 0xA0F000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X0+200]
	005 Move X19, X0
	006 Compare X8, 0
	007 JumpIfNotEqual {13}
	008 Move X0, X19
	009 Call InputAction.CreateInternalActionMapForSingletonAction, X0
	010 Move X8, [X19+200]
	011 Compare X8, 0
	012 JumpIfEqual {37}
	013 Move X20, [X8+96]
	014 Compare X20, 0
	015 JumpIfEqual {32}
	016 Move X0, X20
	017 Move X1, X31
	018 Call InputActionState.get_actionStates, X0
	019 NotImplemented "Instruction LDRSW not yet implemented."
	020 Move W9, 48
	021 Move X1, X31
	022 NotImplemented "Instruction MADD not yet implemented."
	023 Call TriggerState.get_controlIndex, X0
	024 Add W31, W0, 1
	025 Move X8, [X20+24]
	026 Compare X8, 0
	027 JumpIfEqual {37}
	028 Move W9, [X8+24]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Add X8, X8, W0
	031 Move X0, [X8+32]
	032 Move X0, X31
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Return X0
	037 Call 0x1C17F20
	038 Call 0x1C17F28

Method: System.Boolean get_wantsInitialStateCheck()

Disassembly:
	0x03735BE4 LDR X0, [X0 + 0xFE8]
	0x03735BE8 BL 0x1C16D08
	0x03735BEC MOV X1, X0
	0x03735BF0 MOV X0, X20
	0x03735BF4 BL 0x1C16DEC
	0x03735BF8 MOV W0, W22
	0x03735BFC LDP X20, X19, [X31 + 0x40]

ISIL:
	001 Move W8, [X0+24]
	002 Compare W8, 0
	003 JumpIfEqual {7}
	004 Move W8, [X0+72]
	005 And W0, W8, 1
	006 Return X0
	007 Move W0, 1
	008 Return X0

Method: System.Void set_wantsInitialStateCheck(System.Boolean value)

Disassembly:
	0x03735C00 LDP X22, X21, [X31 + 0x30]
	0x03735C04 LDP X24, X23, [X31 + 0x20]
	0x03735C08 LDP X30, X25, [X31 + 0x10]
	0x03735C0C ADD X31, X31, 0x50

ISIL:
	001 Move W8, [X0+72]
	002 NotImplemented "Instruction BFM not yet implemented."
	003 Move [X0+72], W8
	004 Return 

Method: System.Void .ctor()

Disassembly:
	0x03735C10 RET
	0x03735C14 BL 0x1C16F28
	0x03735C18 BL 0x1C16F20
	0x03735C1C MOVN W24, 0x0
	0x03735C20 B 0x3735B4C
	0x03735C24 STP X30, X25, [X31 - 0x40]!
	0x03735C28 STP X24, X23, [X31 + 0x10]
	0x03735C2C STP X22, X21, [X31 + 0x20]
	0x03735C30 STP X20, X19, [X31 + 0x30]
	0x03735C34 LDR X8, [X0 + 0xC8]
	0x03735C38 MOV X19, X0
	0x03735C3C MOV W20, W1
	0x03735C40 CBNZ X8, 0x3735C54
	0x03735C44 MOV X0, X19
	0x03735C48 BL 0x373572C
	0x03735C4C LDR X8, [X19 + 0xC8]
	0x03735C50 CBZ X8, 0x3735CDC

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+16], X30
	003 Move [X31+24], X19
	004 Move TEMP, 0
	005 Not TEMP
	006 Move W8, TEMP
	007 Move X1, X31
	008 Move X19, X0
	009 Move [X0+192], W8
	010 Call Object..ctor, X0
	011 Move X0, X31
	012 Call Guid.NewGuid
	013 Move [X31], X0
	014 Move [X31+8], X1
	015 Add X0, X31, 0
	016 Move X1, X31
	017 Call Guid.ToString, X0
	018 Move [X19+40], X0
	019 Move X30, [X31+16]
	020 Move X19, [X31+24]
	021 Add X31, X31, 32
	022 Return 

Method: System.Void .ctor(System.String name = null, UnityEngine.InputSystem.InputActionType type = 0, System.String binding = null, System.String interactions = null, System.String processors = null, System.String expectedControlType = null)

Disassembly:
	0x03735C54 SUBS W22, W20, 0x1
	0x03735C58 B.MI 0x3735CBC
	0x03735C5C LDR X23, [X8 + 0x30]
	0x03735C60 CBZ X23, 0x3735CDC
	0x03735C64 LDR X21, [X19 + 0x10]
	0x03735C68 MOV W20, W31
	0x03735C6C MOVZ W24, 0x58
	0x03735C70 LDR W8, [X23 + 0x18]
	0x03735C74 CMP W22, W8
	0x03735C78 B.CS 0x3735CD8
	0x03735C7C UMADDL X25, X22, X24, X23
	0x03735C80 LDR X0, [X25 + 0x50]!
	0x03735C84 MOVZ W2, 0x3
	0x03735C88 MOV X1, X21
	0x03735C8C MOV X3, X31
	0x03735C90 BL 0x322590C
	0x03735C94 CBZ W0, 0x3735CAC
	0x03735C98 LDR X0, [X25]
	0x03735C9C LDR X1, [X19 + 0x28]
	0x03735CA0 MOV X2, X31
	0x03735CA4 BL 0x321BA08
	0x03735CA8 TBZ X0, 0x0, 0x3735CB0
	0x03735CAC ADD W20, W20, 0x1
	0x03735CB0 SUBS W22, W22, 0x1
	0x03735CB4 B.PL 0x3735C70
	0x03735CB8 B 0x3735CC0
	0x03735CBC MOV W20, W31
	0x03735CC0 MOV W0, W20
	0x03735CC4 LDP X20, X19, [X31 + 0x30]
	0x03735CC8 LDP X22, X21, [X31 + 0x20]
	0x03735CCC LDP X24, X23, [X31 + 0x10]
	0x03735CD0 LDP X30, X25, [X31], #0x40
	0x03735CD4 RET
	0x03735CD8 BL 0x1C16F28
	0x03735CDC BL 0x1C16F20
	0x03735CE0 LDR W0, [X0 + 0x8]
	0x03735CE4 RET
	0x03735CE8 STP X30, X19, [X31 - 0x10]!
	0x03735CEC MOV X19, X0
	0x03735CF0 LDR X0, [X0]
	0x03735CF4 CBZ X0, 0x3735D18
	0x03735CF8 MOV X1, X31
	0x03735CFC BL 0x374A7E0
	0x03735D00 LDRSW X8, [X19 + 0x8]
	0x03735D04 MOVZ W9, 0x30
	0x03735D08 MADD X8, X8, X9, X0
	0x03735D0C LDRH W0, [X8 + 0x18]
	0x03735D10 LDP X30, X19, [X31], #0x10
	0x03735D14 RET
	0x03735D18 BL 0x1C16F20
	0x03735D1C STP X30, X19, [X31 - 0x10]!
	0x03735D20 MOV X19, X0
	0x03735D24 LDR X0, [X0]
	0x03735D28 CBZ X0, 0x3735D4C
	0x03735D2C MOV X1, X31
	0x03735D30 BL 0x374A7E0
	0x03735D34 LDRSW X8, [X19 + 0x8]
	0x03735D38 MOVZ W9, 0x30
	0x03735D3C MOV X1, X31
	0x03735D40 MADD X0, X8, X9, X0
	0x03735D44 LDP X30, X19, [X31], #0x10
	0x03735D48 B 0x374BD9C
	0x03735D4C BL 0x1C16F20
	0x03735D50 STP X30, X19, [X31 - 0x10]!
	0x03735D54 MOV X19, X0
	0x03735D58 LDR X0, [X0]
	0x03735D5C CBZ X0, 0x3735D80
	0x03735D60 MOV X1, X31
	0x03735D64 BL 0x374A7E0
	0x03735D68 LDRSW X8, [X19 + 0x8]
	0x03735D6C MOVZ W9, 0x30
	0x03735D70 MOV X1, X31
	0x03735D74 MADD X0, X8, X9, X0
	0x03735D78 LDP X30, X19, [X31], #0x10
	0x03735D7C B 0x374CB58
	0x03735D80 BL 0x1C16F20
	0x03735D84 STP X30, X19, [X31 - 0x10]!
	0x03735D88 MOV X19, X0
	0x03735D8C LDR X0, [X0]
	0x03735D90 CBZ X0, 0x3735DAC
	0x03735D94 MOV X1, X31
	0x03735D98 BL 0x374A7E0
	0x03735D9C LDRSW X8, [X19 + 0x8]
	0x03735DA0 MOVZ W9, 0x30
	0x03735DA4 MUL X8, X8, X9
	0x03735DA8 LDRB W0, [X8, X0, LSL]
	0x03735DAC LDP X30, X19, [X31], #0x10
	0x03735DB0 RET
	0x03735DB4 STP X30, X19, [X31 - 0x10]!
	0x03735DB8 MOV X19, X0
	0x03735DBC LDR X0, [X0]
	0x03735DC0 CBZ X0, 0x3735DE4
	0x03735DC4 MOV X1, X31
	0x03735DC8 BL 0x374A7E0
	0x03735DCC LDRSW X8, [X19 + 0x8]
	0x03735DD0 MOVZ W9, 0x30
	0x03735DD4 MUL X8, X8, X9
	0x03735DD8 LDRB W8, [X8, X0, LSL]
	0x03735DDC CMP W8, 0x2
	0x03735DE0 CSET W0, EQ

ISIL:
	001 Subtract X31, X31, 368
	002 Move [X31+288], X29
	003 Move [X31+296], X30
	004 Move [X31+304], X26
	005 Move [X31+312], X25
	006 Move [X31+320], X24
	007 Move [X31+328], X23
	008 Move [X31+336], X22
	009 Move [X31+344], X21
	010 Move [X31+352], X20
	011 Move [X31+360], X19
	012 Move X26, 0xCAC000
	013 Move W8, [X26+3299]
	014 Move X20, X6
	015 Move X21, X5
	016 Move X23, X4
	017 Move X24, X3
	018 Move W22, W2
	019 Move X25, X1
	020 Move X19, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {30}
	025 Move X0, 0xA10000
	026 Move X0, [X0+3992]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X26+3299], W8
	030 NotImplemented "Instruction MOVI not yet implemented."
	031 Move TEMP, 0
	032 Not TEMP
	033 Move W8, TEMP
	034 Move X0, X19
	035 Move X1, X31
	036 Move [X31+272], X31
	037 Move [X31+176], X31
	038 Move [X31+184], X31
	039 Move [X31+240], V0
	040 Move [X31+248], V0
	041 Move [X31+208], V0
	042 Move [X31+216], V0
	043 Move [X31+12], V0
	044 Move [X19+192], W8
	045 Call Object..ctor, X0
	046 Move X0, X24
	047 Move X1, X31
	048 Move [X19+16], X25
	049 Move [X19+24], W22
	050 Call String.IsNullOrEmpty, X0
	051 Move TEMP, X0
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfNotEqual {57}
	055 Move [X19+48], X21
	056 Move [X19+56], X23
	057 Move X8, 0xA10000
	058 Move X8, [X8+3992]
	059 Move W1, 1
	060 Move X0, [X8]
	061 Call 0x1C17D6C
	062 NotImplemented "Instruction MOVI not yet implemented."
	063 Move [X31+192], V0
	064 Move [X31+200], V0
	065 Move [X31+224], V0
	066 Move [X31+232], V0
	067 Move [X31+16], V0
	068 Move [X31+272], X31
	069 Move [X31+208], X24
	070 Move [X31+216], X23
	071 Move [X31+224], X21
	072 Move X8, [X19+16]
	073 Move X22, X0
	074 Move X0, X31
	075 Move [X31+240], X8
	076 Call Guid.NewGuid
	077 Move X2, X0
	078 Move X3, X1
	079 Add X0, X31, 192
	080 Move X1, X2
	081 Move X2, X3
	082 Move X3, X31
	083 Call InputBinding.set_id, X0, X1
	084 Add X0, X31, 88
	085 Add X1, X31, 192
	086 Move W2, 88
	087 Call 0x3EB2AC0
	088 Compare X22, 0
	089 JumpIfEqual {126}
	090 Add X0, X31, 0
	091 Add X1, X31, 88
	092 Move W2, 88
	093 Call 0x3EB2AC0
	094 Move W8, [X22+24]
	095 Compare W8, 0
	096 JumpIfEqual {127}
	097 Add X0, X22, 32
	098 Add X1, X31, 0
	099 Move W2, 88
	100 Call 0x3EB2AC0
	101 Move X8, -46428160
	102 Move V0, [X8+1600]
	103 Move [X19+64], X22
	104 Move [X19+176], D0
	105 Move X0, X31
	106 Move [X19+32], X20
	107 Call Guid.NewGuid
	108 Move [X31+176], X0
	109 Move [X31+184], X1
	110 Add X0, X31, 176
	111 Move X1, X31
	112 Call Guid.ToString, X0
	113 Move [X19+40], X0
	114 Move X20, [X31+352]
	115 Move X19, [X31+360]
	116 Move X22, [X31+336]
	117 Move X21, [X31+344]
	118 Move X24, [X31+320]
	119 Move X23, [X31+328]
	120 Move X26, [X31+304]
	121 Move X25, [X31+312]
	122 Move X29, [X31+288]
	123 Move X30, [X31+296]
	124 Add X31, X31, 368
	125 Return 
	126 Call 0x1C17F20
	127 Call 0x1C17F28

Method: System.Void Dispose()

Disassembly:
	0x03735DE4 LDP X30, X19, [X31], #0x10
	0x03735DE8 RET
	0x03735DEC STP X30, X19, [X31 - 0x10]!
	0x03735DF0 MOV X19, X0
	0x03735DF4 LDR X0, [X0]
	0x03735DF8 CBZ X0, 0x3735E1C
	0x03735DFC MOV X1, X31

ISIL:
	001 Move X8, [X0+200]
	002 Compare X8, 0
	003 JumpIfEqual {10}
	004 Move X0, [X8+96]
	005 Compare X0, 0
	006 JumpIfEqual {10}
	007 Move X1, X31
	008 Call InputActionState.Dispose, X0
	009 Return 
	010 Return 

Method: System.String ToString()

Disassembly:
	0x03735E00 BL 0x374A7E0
	0x03735E04 LDRSW X8, [X19 + 0x8]
	0x03735E08 MOVZ W9, 0x30
	0x03735E0C MUL X8, X8, X9
	0x03735E10 LDRB W8, [X8, X0, LSL]
	0x03735E14 CMP W8, 0x3
	0x03735E18 CSET W0, EQ
	0x03735E1C LDP X30, X19, [X31], #0x10
	0x03735E20 RET
	0x03735E24 STP X30, X19, [X31 - 0x10]!
	0x03735E28 MOV X19, X0
	0x03735E2C LDR X0, [X0]
	0x03735E30 CBZ X0, 0x3735E54
	0x03735E34 MOV X1, X31
	0x03735E38 BL 0x374A7E0
	0x03735E3C LDRSW X8, [X19 + 0x8]
	0x03735E40 MOVZ W9, 0x30
	0x03735E44 MUL X8, X8, X9
	0x03735E48 LDRB W8, [X8, X0, LSL]
	0x03735E4C CMP W8, 0x4
	0x03735E50 CSET W0, EQ
	0x03735E54 LDP X30, X19, [X31], #0x10
	0x03735E58 RET
	0x03735E5C STP X30, X19, [X31 - 0x10]!
	0x03735E60 LDR X19, [X0]
	0x03735E64 CBZ X19, 0x3735E80
	0x03735E68 BL 0x3735CE8
	0x03735E6C MOV W1, W0
	0x03735E70 MOV X0, X19
	0x03735E74 MOV X2, X31
	0x03735E78 LDP X30, X19, [X31], #0x10
	0x03735E7C B 0x374FCD8
	0x03735E80 MOV X0, X31
	0x03735E84 LDP X30, X19, [X31], #0x10
	0x03735E88 RET
	0x03735E8C STP X30, X19, [X31 - 0x10]!
	0x03735E90 LDR X8, [X0]
	0x03735E94 CBZ X8, 0x3735EBC
	0x03735E98 LDR X19, [X8 + 0x18]
	0x03735E9C BL 0x3735D1C
	0x03735EA0 CBZ X19, 0x3735EC8
	0x03735EA4 LDR W8, [X19 + 0x18]
	0x03735EA8 CMP W0, W8
	0x03735EAC B.CS 0x3735ECC
	0x03735EB0 ADD X8, X19, W0, 0x3, SXTW
	0x03735EB4 LDR X0, [X8 + 0x20]
	0x03735EB8 B 0x3735EC0
	0x03735EBC MOV X0, X31
	0x03735EC0 LDP X30, X19, [X31], #0x10
	0x03735EC4 RET
	0x03735EC8 BL 0x1C16F20
	0x03735ECC BL 0x1C16F28
	0x03735ED0 STP X30, X19, [X31 - 0x10]!
	0x03735ED4 LDR X8, [X0]
	0x03735ED8 CBZ X8, 0x3735F14
	0x03735EDC MOV X19, X0
	0x03735EE0 BL 0x3735D50
	0x03735EE4 ADDS W31, W0, 0x1
	0x03735EE8 B.EQ 0x3735F14
	0x03735EEC LDR X8, [X19]
	0x03735EF0 CBZ X8, 0x3735F20
	0x03735EF4 LDR X8, [X8 + 0x20]
	0x03735EF8 CBZ X8, 0x3735F20
	0x03735EFC LDR W9, [X8 + 0x18]
	0x03735F00 CMP W0, W9
	0x03735F04 B.CS 0x3735F24
	0x03735F08 ADD X8, X8, W0, 0x3, SXTW
	0x03735F0C LDR X0, [X8 + 0x20]
	0x03735F10 B 0x3735F18
	0x03735F14 MOV X0, X31
	0x03735F18 LDP X30, X19, [X31], #0x10
	0x03735F1C RET
	0x03735F20 BL 0x1C16F20
	0x03735F24 BL 0x1C16F28
	0x03735F28 STP X30, X19, [X31 - 0x10]!
	0x03735F2C MOV X19, X0
	0x03735F30 LDR X0, [X0]
	0x03735F34 CBZ X0, 0x3735F54
	0x03735F38 MOV X1, X31
	0x03735F3C BL 0x374A7E0
	0x03735F40 LDRSW X8, [X19 + 0x8]
	0x03735F44 MOVZ W9, 0x30
	0x03735F48 MADD X8, X8, X9, X0
	0x03735F4C LDR V0, [X8 + 0x8]
	0x03735F50 B 0x3735F58
	0x03735F54 FMOV D0, X31
	0x03735F58 LDP X30, X19, [X31], #0x10
	0x03735F5C RET
	0x03735F60 STP X30, X19, [X31 - 0x10]!
	0x03735F64 MOV X19, X0
	0x03735F68 LDR X0, [X0]
	0x03735F6C CBZ X0, 0x3735F8C
	0x03735F70 MOV X1, X31
	0x03735F74 BL 0x374A7E0
	0x03735F78 LDRSW X8, [X19 + 0x8]
	0x03735F7C MOVZ W9, 0x30
	0x03735F80 MADD X8, X8, X9, X0
	0x03735F84 LDR V0, [X8 + 0x10]
	0x03735F88 B 0x3735F90
	0x03735F8C FMOV D0, X31
	0x03735F90 LDP X30, X19, [X31], #0x10
	0x03735F94 RET
	0x03735F98 STP D9, D8, [X31 - 0x20]!
	0x03735F9C STP X30, X19, [X31 + 0x10]
	0x03735FA0 MOV X19, X0
	0x03735FA4 LDR X0, [X0]
	0x03735FA8 FMOV D8, X31
	0x03735FAC CBZ X0, 0x3735FEC
	0x03735FB0 MOV X1, X31
	0x03735FB4 BL 0x374A7E0
	0x03735FB8 LDRSW X8, [X19 + 0x8]
	0x03735FBC MOVZ W9, 0x30
	0x03735FC0 MADD X8, X8, X9, X0
	0x03735FC4 LDR X0, [X19]
	0x03735FC8 LDR V9, [X8 + 0x8]
	0x03735FCC CBZ X0, 0x3735FF0
	0x03735FD0 MOV X1, X31
	0x03735FD4 BL 0x374A7E0
	0x03735FD8 LDRSW X8, [X19 + 0x8]
	0x03735FDC MOVZ W9, 0x30
	0x03735FE0 MADD X8, X8, X9, X0
	0x03735FE4 LDR V8, [X8 + 0x10]
	0x03735FE8 B 0x3735FF0
	0x03735FEC FMOV D9, X31
	0x03735FF0 LDP X30, X19, [X31 + 0x10]
	0x03735FF4 FSUB D0, D9, D8
	0x03735FF8 LDP D9, D8, [X31], #0x20
	0x03735FFC RET
	0x03736000 STP X30, X21, [X31 - 0x20]!
	0x03736004 STP X20, X19, [X31 + 0x10]
	0x03736008 LDR X19, [X0]
	0x0373600C CBZ X19, 0x3736040
	0x03736010 MOV X20, X0
	0x03736014 BL 0x3735CE8
	0x03736018 MOV W21, W0
	0x0373601C MOV X0, X20
	0x03736020 BL 0x3735D1C
	0x03736024 MOV W2, W0
	0x03736028 MOV X0, X19
	0x0373602C LDP X20, X19, [X31 + 0x10]
	0x03736030 MOV W1, W21
	0x03736034 MOV X3, X31
	0x03736038 LDP X30, X21, [X31], #0x20
	0x0373603C B 0x374FFBC
	0x03736040 LDP X20, X19, [X31 + 0x10]
	0x03736044 MOV X0, X31
	0x03736048 LDP X30, X21, [X31], #0x20
	0x0373604C RET
	0x03736050 STP X30, X21, [X31 - 0x20]!
	0x03736054 STP X20, X19, [X31 + 0x10]
	0x03736058 LDR X19, [X0]
	0x0373605C CBZ X19, 0x3736090
	0x03736060 MOV X20, X0
	0x03736064 BL 0x3735CE8
	0x03736068 MOV W21, W0
	0x0373606C MOV X0, X20
	0x03736070 BL 0x3735D1C
	0x03736074 MOV W2, W0
	0x03736078 MOV X0, X19
	0x0373607C LDP X20, X19, [X31 + 0x10]
	0x03736080 MOV W1, W21
	0x03736084 MOV X3, X31
	0x03736088 LDP X30, X21, [X31], #0x20
	0x0373608C B 0x374FF28
	0x03736090 LDP X20, X19, [X31 + 0x10]
	0x03736094 MOV W0, W31
	0x03736098 LDP X30, X21, [X31], #0x20
	0x0373609C RET
	0x037360A0 SUB X31, X31, 0x40
	0x037360A4 STP X30, X23, [X31 + 0x10]
	0x037360A8 STP X22, X21, [X31 + 0x20]
	0x037360AC STP X20, X19, [X31 + 0x30]
	0x037360B0 CBZ X1, 0x3736170
	0x037360B4 MOV X21, X0
	0x037360B8 LDR X0, [X0]
	0x037360BC MOV W19, W2
	0x037360C0 MOV X20, X1
	0x037360C4 CBZ X0, 0x3736138

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+48], X30
	003 Move [X31+56], X27
	004 Move [X31+64], X26
	005 Move [X31+72], X25
	006 Move [X31+80], X24
	007 Move [X31+88], X23
	008 Move [X31+96], X22
	009 Move [X31+104], X21
	010 Move [X31+112], X20
	011 Move [X31+120], X19
	012 Move X20, 0xCAC000
	013 Move W8, [X20+3300]
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {51}
	019 Move X0, 0x9EB000
	020 Move X0, [X0+72]
	021 Call 0x1C17CF4
	022 Move X0, 0x9EB000
	023 Move X0, [X0+80]
	024 Call 0x1C17CF4
	025 Move X0, 0x9EB000
	026 Move X0, [X0+88]
	027 Call 0x1C17CF4
	028 Move X0, 0x9EB000
	029 Move X0, [X0+96]
	030 Call 0x1C17CF4
	031 Move X0, 0x9E7000
	032 Move X0, [X0+3392]
	033 Call 0x1C17CF4
	034 Move X0, 0xA10000
	035 Move X0, [X0+4000]
	036 Call 0x1C17CF4
	037 Move X0, 0x9C0000
	038 Move X0, [X0+3784]
	039 Call 0x1C17CF4
	040 Move X0, 0x9C1000
	041 Move X0, [X0+928]
	042 Call 0x1C17CF4
	043 Move X0, 0x9BF000
	044 Move X0, [X0+3784]
	045 Call 0x1C17CF4
	046 Move X0, 0x9BF000
	047 Move X0, [X0+2120]
	048 Call 0x1C17CF4
	049 Move W8, 1
	050 Move [X20+3300], W8
	051 Move [X31+8], X31
	052 Move [X31+16], X31
	053 Move [X31+24], X31
	054 Move X20, [X19+16]
	055 Compare X20, 0
	056 JumpIfEqual {70}
	057 Move X8, [X19+200]
	058 Compare X8, 0
	059 JumpIfEqual {84}
	060 Move X9, [X8+80]
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move X0, [X8+16]
	063 Move X1, X31
	064 Call String.IsNullOrEmpty, X0
	065 Move TEMP, X0
	066 And TEMP, TEMP, 1
	067 Compare TEMP, 1
	068 JumpIfNotEqual {73}
	069 Move X20, [X19+16]
	070 Move X8, 0xA10000
	071 Move X8, [X8+4000]
	072 Move X20, [X8]
	073 Move X8, [X19+200]
	074 Compare X8, 0
	075 JumpIfEqual {171}
	076 Move X0, [X8+16]
	077 Move X8, 0x9C0000
	078 Move X2, [X19+16]
	079 Move X8, [X8+3784]
	080 Move X3, X31
	081 Move X1, [X8]
	082 Call String.Concat, X0, X1, X2
	083 Move X20, X0
	084 Move X0, X19
	085 Call InputAction.get_controls, X0
	086 Move X8, X1
	087 ShiftRight X8, 32
	088 And X8, X8, 0x7FFFFFFF
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Move [X31+32], X0
	091 Move [X31+40], X1
	092 Move X8, 0x9BF000
	093 Move X8, [X8+3784]
	094 Move X19, 0x9EB000
	095 Move X24, 0x9EB000
	096 Move X25, 0x9EB000
	097 Move X19, [X19+96]
	098 Move X24, [X24+80]
	099 Move X25, [X25+88]
	100 Move X1, [X8]
	101 Move X26, 0x9C1000
	102 Move X22, 0x9BF000
	103 Move X23, 0x9EB000
	104 Move X26, [X26+928]
	105 Move X22, [X22+2120]
	106 Move X23, [X23+72]
	107 Move X0, X20
	108 Move X2, X31
	109 Call String.Concat, X0, X1
	110 Move X1, [X19]
	111 Move X19, X0
	112 Add X8, X31, 8
	113 Add X0, X31, 32
	114 Call ReadOnlyArray`1<Object>.GetEnumerator, X0
	115 Move W27, 1
	116 Move X1, [X24]
	117 Add X0, X31, 8
	118 Call Enumerator<Object>.MoveNext, X0
	119 Move TEMP, X0
	120 And TEMP, TEMP, 1
	121 Compare TEMP, 1
	122 JumpIfNotEqual {148}
	123 Move X1, [X25]
	124 Add X0, X31, 8
	125 Call Enumerator<Object>.get_Current, X0
	126 Move X21, X0
	127 Move TEMP, X27
	128 And TEMP, TEMP, 1
	129 Compare TEMP, 1
	130 JumpIfNotEqual {132}
	131 Move X20, X19
	132 Move X1, [X26]
	133 Move X0, X19
	134 Move X2, X31
	135 Call String.Concat, X0, X1
	136 Move X20, X0
	137 Compare X21, 0
	138 JumpIfEqual {169}
	139 Move X0, X21
	140 Move X1, X31
	141 Call InputControl.get_path, X0
	142 Move X1, X0
	143 Move X0, X20
	144 Move X2, X31
	145 Call String.Concat, X0, X1
	146 Move X19, X0
	147 Move W27, W31
	148 Move X1, [X23]
	149 Add X0, X31, 8
	150 Call Enumerator<Object>.Dispose, X0
	151 Move X1, [X22]
	152 Move X0, X19
	153 Move X2, X31
	154 Call String.Concat, X0, X1
	155 Move X20, X0
	156 Move X0, X20
	157 Move X20, [X31+112]
	158 Move X19, [X31+120]
	159 Move X22, [X31+96]
	160 Move X21, [X31+104]
	161 Move X24, [X31+80]
	162 Move X23, [X31+88]
	163 Move X26, [X31+64]
	164 Move X25, [X31+72]
	165 Move X30, [X31+48]
	166 Move X27, [X31+56]
	167 Add X31, X31, 128
	168 Return X0
	169 Move X19, X20
	170 Call 0x1C17F20
	171 Call 0x1C17F20
	172 Move X19, X20
	173 Move X20, X0
	174 NotImplemented "Instruction CMP not yet implemented."
	175 Move X0, X20
	176 Call 0x3EB2AD0
	177 Move X21, [X0]
	178 Call 0x3EB2AE0
	179 Move X1, [X23]
	180 Add X0, X31, 8
	181 Call Enumerator<Object>.Dispose, X0
	182 Compare X21, 0
	183 JumpIfEqual {151}
	184 Move X0, X21
	185 Call 0x1C17F18
	186 Move X21, X31
	187 Move X20, X0
	188 Move X1, [X23]
	189 Add X0, X31, 8
	190 Call Enumerator<Object>.Dispose, X0
	191 Compare X21, 0
	192 JumpIfNotEqual {195}
	193 Move X0, X20
	194 Call 0x1D2D690
	195 Move X0, X21
	196 Call 0x1C17F18
	197 Call 0x1991590

Method: System.Void Enable()

Disassembly:
	0x037360C8 MOV X1, X31
	0x037360CC BL 0x374A7E0
	0x037360D0 LDRSW X8, [X21 + 0x8]
	0x037360D4 MOVZ W9, 0x30
	0x037360D8 MOV X1, X31
	0x037360DC MUL X8, X8, X9
	0x037360E0 LDRB W0, [X8, X0, LSL]
	0x037360E4 BL 0x37C1380
	0x037360E8 TBZ X0, 0x0, 0x3736138
	0x037360EC LDR X22, [X21]
	0x037360F0 MOV X0, X21
	0x037360F4 BL 0x3735CE8
	0x037360F8 MOV W23, W0
	0x037360FC MOV X0, X21
	0x03736100 BL 0x3735D1C
	0x03736104 CBZ X22, 0x373625C
	0x03736108 MOV W2, W0
	0x0373610C MOV X0, X22
	0x03736110 MOV W1, W23
	0x03736114 MOV X3, X20
	0x03736118 MOV W4, W19
	0x0373611C LDP X20, X19, [X31 + 0x30]
	0x03736120 LDP X22, X21, [X31 + 0x20]
	0x03736124 LDP X30, X23, [X31 + 0x10]
	0x03736128 MOV W5, W31
	0x0373612C MOV X6, X31
	0x03736130 ADD X31, X31, 0x40
	0x03736134 B 0x3750050
	0x03736138 MOV X0, X21
	0x0373613C BL 0x3736050
	0x03736140 CMP W0, W19
	0x03736144 B.GT 0x37361B8
	0x03736148 MOV X0, X21
	0x0373614C BL 0x3736050

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+64], X30
	003 Move [X31+72], X21
	004 Move [X31+80], X20
	005 Move [X31+88], X19
	006 NotImplemented "Instruction MRS not yet implemented."
	007 Move X8, [X21+40]
	008 Move X19, X0
	009 Move [X31+56], X8
	010 Add X8, X31, 8
	011 Call InputAction.get_currentState, X0
	012 Move W8, [X31+8]
	013 Compare W8, 0
	014 JumpIfNotEqual {31}
	015 Move X20, [X19+200]
	016 Compare X20, 0
	017 JumpIfNotEqual {23}
	018 Move X0, X19
	019 Call InputAction.CreateInternalActionMapForSingletonAction, X0
	020 Move X20, [X19+200]
	021 Compare X20, 0
	022 JumpIfEqual {40}
	023 Move X0, X20
	024 Call InputActionMap.ResolveBindingsIfNecessary, X0
	025 Move X0, [X20+96]
	026 Compare X0, 0
	027 JumpIfEqual {40}
	028 Move X1, X19
	029 Move X2, X31
	030 Call InputActionState.EnableSingleAction, X0, X1
	031 Move X8, [X21+40]
	032 Move X9, [X31+56]
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X20, [X31+80]
	035 Move X19, [X31+88]
	036 Move X30, [X31+64]
	037 Move X21, [X31+72]
	038 Add X31, X31, 96
	039 Return 
	040 Call 0x1C17F20
	041 Call 0x3EB2B20

Method: System.Void Disable()

Disassembly:
	0x03736150 SXTW X1, W0
	0x03736154 MOV X0, X20
	0x03736158 LDP X20, X19, [X31 + 0x30]
	0x0373615C LDP X22, X21, [X31 + 0x20]
	0x03736160 LDP X30, X23, [X31 + 0x10]
	0x03736164 MOV X2, X31
	0x03736168 ADD X31, X31, 0x40
	0x0373616C B 0x3C001B4
	0x03736170 ADRP X0, 0x9C2000
	0x03736174 LDR X0, [X0 + 0x528]
	0x03736178 BL 0x1C16D08
	0x0373617C BL 0x1C16F10
	0x03736180 MOV X19, X0
	0x03736184 ADRP X0, 0x9E8000
	0x03736188 LDR X0, [X0 + 0xF48]
	0x0373618C BL 0x1C16D08
	0x03736190 MOV X1, X0
	0x03736194 MOV X0, X19
	0x03736198 MOV X2, X31
	0x0373619C BL 0x330E100
	0x037361A0 ADRP X0, 0xA0E000
	0x037361A4 LDR X0, [X0 + 0xFF0]
	0x037361A8 BL 0x1C16D08
	0x037361AC MOV X1, X0
	0x037361B0 MOV X0, X19
	0x037361B4 BL 0x1C16DEC
	0x037361B8 STR W0, [X31 + 0xC]
	0x037361BC ADRP X20, 0x9BD000

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+64], X30
	003 Move [X31+80], X20
	004 Move [X31+88], X19
	005 NotImplemented "Instruction MRS not yet implemented."
	006 Move X8, [X20+40]
	007 Move X19, X0
	008 Move [X31+56], X8
	009 Add X8, X31, 8
	010 Call InputAction.get_currentState, X0
	011 Move W8, [X31+8]
	012 Compare W8, 0
	013 JumpIfEqual {23}
	014 Move X8, [X19+200]
	015 Compare X8, 0
	016 JumpIfEqual {31}
	017 Move X0, [X8+96]
	018 Compare X0, 0
	019 JumpIfEqual {31}
	020 Move X1, X19
	021 Move X2, X31
	022 Call InputActionState.DisableSingleAction, X0, X1
	023 Move X8, [X20+40]
	024 Move X9, [X31+56]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X20, [X31+80]
	027 Move X19, [X31+88]
	028 Move X30, [X31+64]
	029 Add X31, X31, 96
	030 Return 
	031 Call 0x1C17F20
	032 Call 0x3EB2B20

Method: UnityEngine.InputSystem.InputAction Clone()

Disassembly:
	0x037361C0 LDR X20, [X20 + 0x758]
	0x037361C4 MOV X0, X20
	0x037361C8 BL 0x1C16D08
	0x037361CC ADD X1, X31, 0xC
	0x037361D0 BL 0x1C16E04
	0x037361D4 MOV X21, X0
	0x037361D8 MOV X0, X20
	0x037361DC STR W19, [X31 + 0x8]
	0x037361E0 BL 0x1C16D08
	0x037361E4 ADD X1, X31, 0x8
	0x037361E8 BL 0x1C16E04
	0x037361EC MOV X19, X0
	0x037361F0 ADRP X0, 0xA0E000
	0x037361F4 LDR X0, [X0 + 0xFF8]
	0x037361F8 BL 0x1C16D08
	0x037361FC MOV X1, X21
	0x03736200 MOV X2, X19
	0x03736204 MOV X3, X31
	0x03736208 BL 0x3227BD4
	0x0373620C MOV X19, X0
	0x03736210 ADRP X0, 0x9C5000
	0x03736214 LDR X0, [X0 + 0x578]
	0x03736218 BL 0x1C16D08
	0x0373621C BL 0x1C16F10
	0x03736220 MOV X20, X0
	0x03736224 ADRP X0, 0x9E8000
	0x03736228 LDR X0, [X0 + 0xF58]
	0x0373622C BL 0x1C16D08
	0x03736230 MOV X2, X0
	0x03736234 MOV X0, X20
	0x03736238 MOV X1, X19
	0x0373623C MOV X3, X31
	0x03736240 BL 0x330E16C
	0x03736244 ADRP X0, 0xA0E000
	0x03736248 LDR X0, [X0 + 0xFF0]
	0x0373624C BL 0x1C16D08
	0x03736250 MOV X1, X0
	0x03736254 MOV X0, X20
	0x03736258 BL 0x1C16DEC
	0x0373625C BL 0x1C16F20
	0x03736260 STP X30, X21, [X31 - 0x20]!
	0x03736264 STP X20, X19, [X31 + 0x10]
	0x03736268 MOV X19, X0
	0x0373626C LDR X0, [X0]
	0x03736270 CBZ X0, 0x37362D0
	0x03736274 MOV X1, X31
	0x03736278 BL 0x374A7E0
	0x0373627C LDRSW X8, [X19 + 0x8]
	0x03736280 MOVZ W9, 0x30
	0x03736284 MOV X1, X31
	0x03736288 MUL X8, X8, X9
	0x0373628C LDRB W0, [X8, X0, LSL]
	0x03736290 BL 0x37C1380
	0x03736294 TBZ X0, 0x0, 0x37362D0
	0x03736298 LDR X20, [X19]
	0x0373629C MOV X0, X19

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0xCAB000
	009 Move X20, 0x9C2000
	010 Move X23, 0xA0F000
	011 Move W8, [X21+3301]
	012 Move X20, [X20+992]
	013 Move X23, [X23+4008]
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0x9C2000
	020 Move X0, [X0+992]
	021 Call 0x1C17CF4
	022 Move X0, 0xA0F000
	023 Move X0, [X0+4008]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+3301], W8
	027 Move X0, [X20]
	028 Move X21, [X19+16]
	029 Move W22, [X19+24]
	030 Call 0x1C17F10
	031 Move X1, X21
	032 Move W2, W22
	033 Move X3, X31
	034 Move X4, X31
	035 Move X5, X31
	036 Move X6, X31
	037 Move X20, X0
	038 Call InputAction..ctor, X0, X1, X2, X3, X4, X5, X6
	039 Move X0, X19
	040 Call InputAction.get_bindings, X0
	041 Move X8, [X23]
	042 Move [X31], X0
	043 Move [X31+8], X1
	044 Add X0, X31, 0
	045 Move X1, X8
	046 Call 0x24FCFFC, X0
	047 Compare X20, 0
	048 JumpIfEqual {67}
	049 Move [X20+64], X0
	050 Move W8, [X19+180]
	051 Move X0, X20
	052 Move X22, [X31+32]
	053 Move X21, [X31+40]
	054 Move X30, [X31+16]
	055 Move X23, [X31+24]
	056 Move [X20+180], W8
	057 Move X8, [X19+32]
	058 Move [X20+32], X8
	059 Move V0, [X19+3]
	060 Move [X20+3], V0
	061 Move W8, [X19+72]
	062 Move [X20+72], W8
	063 Move X20, [X31+48]
	064 Move X19, [X31+56]
	065 Add X31, X31, 64
	066 Return X0
	067 Call 0x1C17F20

Method: System.Object System.ICloneable.Clone()

Disassembly:
	0x037362A0 BL 0x3735CE8

ISIL:
	001 Call InputAction.Clone, X0
	002 Return X0

Method: TValue ReadValue()

Disassembly:
	0x021F6BCC LDR X0, [X0 + 0xC58]
	0x021F6BD0 BL 0x1C16D08
	0x021F6BD4 MOV X21, X0
	0x021F6BD8 ADRP X0, 0x1F25000
	0x021F6BDC LDR X0, [X0 + 0xC60]
	0x021F6BE0 BL 0x1C16D08
	0x021F6BE4 MOV X2, X0
	0x021F6BE8 MOV X0, X21
	0x021F6BEC MOV X1, X20
	0x021F6BF0 MOV X3, X31
	0x021F6BF4 BL 0x32274B8
	0x021F6BF8 MOV X20, X0
	0x021F6BFC ADRP X0, 0x1F05000
	0x021F6C00 LDR X0, [X0 + 0x578]
	0x021F6C04 BL 0x1C16D08
	0x021F6C08 BL 0x1C16F10
	0x021F6C0C MOV X21, X0
	0x021F6C10 ADRP X0, 0x1F25000
	0x021F6C14 LDR X0, [X0 + 0xC00]
	0x021F6C18 BL 0x1C16D08
	0x021F6C1C MOV X2, X0
	0x021F6C20 MOV X0, X21
	0x021F6C24 MOV X1, X20
	0x021F6C28 MOV X3, X31
	0x021F6C2C BL 0x330E16C
	0x021F6C30 MOV X0, X21
	0x021F6C34 MOV X1, X19
	0x021F6C38 BL 0x1C16DEC
	0x021F6C3C BL 0x1C16F20
	0x021F6C40 MOV X0, X31
	0x021F6C44 BL 0x19903C0
	0x021F6C48 MOV X0, X31
	0x021F6C4C MOV X1, X31
	0x021F6C50 BL 0x33BE520
	0x021F6C54 MOV X20, X0
	0x021F6C58 BL 0x19903C0
	0x021F6C5C LDR X8, [X20]
	0x021F6C60 MOV X0, X20
	0x021F6C64 LDP X9, X1, [X8 + 0x1A8]
	0x021F6C68 BLR X9
	0x021F6C6C MOV X20, X0
	0x021F6C70 ADRP X0, 0x1F25000
	0x021F6C74 LDR X0, [X0 + 0xC68]
	0x021F6C78 B 0x21F6BD0
	0x021F6C7C ADRP X0, 0x1EFD000
	0x021F6C80 LDR X0, [X0 + 0x6C0]
	0x021F6C84 BL 0x1C16D08
	0x021F6C88 BL 0x19903D0
	0x021F6C8C MOV X0, X25
	0x021F6C90 MOV X1, X31
	0x021F6C94 BL 0x338C698
	0x021F6C98 MOV X20, X0
	0x021F6C9C BL 0x19903C0
	0x021F6CA0 LDR X8, [X20]
	0x021F6CA4 MOV X0, X20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X1+56]
	007 Move X19, X1
	008 Move X21, X0
	009 Compare X8, 0
	010 JumpIfNotEqual {13}
	011 Move X0, X19
	012 Call 0x1C5D6E0
	013 Move X0, X21
	014 Move X1, X31
	015 Call InputAction.GetOrCreateActionMap, X0
	016 Compare X0, 0
	017 JumpIfEqual {71}
	018 Move X20, [X0+96]
	019 Compare X20, 0
	020 JumpIfEqual {51}
	021 Move X0, X20
	022 Move X1, X31
	023 Call InputActionState.get_actionStates, X0
	024 NotImplemented "Instruction LDRSW not yet implemented."
	025 Move W9, 48
	026 Move X1, X31
	027 NotImplemented "Instruction MADD not yet implemented."
	028 Move W0, [X22]
	029 Call InputExtensions.IsInProgress, X0
	030 NotImplemented "Instruction LDRH not yet implemented."
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfNotEqual {58}
	035 Move X0, X22
	036 Move X1, X31
	037 Call TriggerState.get_controlIndex, X0
	038 Move X8, [X19+56]
	039 Move W2, W0
	040 Move X0, X20
	041 Move W1, W21
	042 Move X4, [X8+24]
	043 Move X20, [X31+32]
	044 Move X19, [X31+40]
	045 Move X22, [X31+16]
	046 Move X21, [X31+24]
	047 Move W3, W31
	048 Move X30, [X31+48]
	049 Call 0x21F988C, X0, X1, X2, X3
	050 Return X0
	051 Move X20, [X31+32]
	052 Move X19, [X31+40]
	053 Move X22, [X31+16]
	054 Move X21, [X31+24]
	055 Move W0, W31
	056 Move X30, [X31+48]
	057 Return X0
	058 Move X8, [X19+56]
	059 Move X0, X20
	060 Move W1, W21
	061 Move X20, [X31+32]
	062 Move X19, [X31+40]
	063 Move X4, [X8+8]
	064 Move X22, [X31+16]
	065 Move X21, [X31+24]
	066 Move W2, W31
	067 Move X3, X31
	068 Move X30, [X31+48]
	069 Call 0x21F8198, X0, X1, X2, X3
	070 Return X0
	071 Call 0x1C17F20

Method: System.Object ReadValueAsObject()

Disassembly:
	0x037362A4 MOV W21, W0
	0x037362A8 MOV X0, X19
	0x037362AC BL 0x3735D1C
	0x037362B0 CBZ X20, 0x37362E0
	0x037362B4 MOV W2, W0
	0x037362B8 MOV X0, X20
	0x037362BC LDP X20, X19, [X31 + 0x10]
	0x037362C0 MOV W1, W21
	0x037362C4 MOV X3, X31
	0x037362C8 LDP X30, X21, [X31], #0x20
	0x037362CC B 0x37506AC
	0x037362D0 LDP X20, X19, [X31 + 0x10]
	0x037362D4 MOV W0, W31
	0x037362D8 LDP X30, X21, [X31], #0x20
	0x037362DC RET
	0x037362E0 BL 0x1C16F20
	0x037362E4 STP X30, X21, [X31 - 0x20]!
	0x037362E8 STP X20, X19, [X31 + 0x10]
	0x037362EC MOV X19, X0
	0x037362F0 LDR X0, [X0]
	0x037362F4 CBZ X0, 0x3736358
	0x037362F8 MOV X1, X31
	0x037362FC BL 0x374A7E0
	0x03736300 LDRSW X8, [X19 + 0x8]
	0x03736304 MOVZ W9, 0x30
	0x03736308 MOV X1, X31
	0x0373630C MUL X8, X8, X9
	0x03736310 LDRB W0, [X8, X0, LSL]
	0x03736314 BL 0x37C1380
	0x03736318 TBZ X0, 0x0, 0x3736358
	0x0373631C LDR X20, [X19]
	0x03736320 MOV X0, X19
	0x03736324 BL 0x3735CE8
	0x03736328 MOV W21, W0
	0x0373632C MOV X0, X19
	0x03736330 BL 0x3735D1C
	0x03736334 CBZ X20, 0x3736368
	0x03736338 MOV W2, W0
	0x0373633C MOV X0, X20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X0+200]
	005 Move X20, X0
	006 Compare X8, 0
	007 JumpIfNotEqual {13}
	008 Move X0, X20
	009 Call InputAction.CreateInternalActionMapForSingletonAction, X0
	010 Move X8, [X20+200]
	011 Compare X8, 0
	012 JumpIfEqual {48}
	013 Move X19, [X8+96]
	014 Compare X19, 0
	015 JumpIfEqual {43}
	016 Move X0, X19
	017 Move X1, X31
	018 Call InputActionState.get_actionStates, X0
	019 NotImplemented "Instruction LDRSW not yet implemented."
	020 Move W9, 48
	021 Move X1, X31
	022 NotImplemented "Instruction MADD not yet implemented."
	023 Move W0, [X20]
	024 Call InputExtensions.IsInProgress, X0
	025 Move TEMP, X0
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfNotEqual {43}
	029 Move X0, X20
	030 Move X1, X31
	031 Call TriggerState.get_controlIndex, X0
	032 Add W31, W0, 1
	033 Move W2, W0
	034 NotImplemented "Instruction LDRH not yet implemented."
	035 Move X0, X19
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move W3, W31
	039 Move X4, X31
	040 Move X30, [X31+32]
	041 Call InputActionState.ReadValueAsObject, X0, X1, X2, X3
	042 Return X0
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move X0, X31
	046 Move X30, [X31+32]
	047 Return X0
	048 Call 0x1C17F20

Method: System.Void Reset()

Disassembly:
	0x03736340 LDP X20, X19, [X31 + 0x10]
	0x03736344 MOV W1, W21
	0x03736348 MOV W3, W31
	0x0373634C MOV X4, X31
	0x03736350 LDP X30, X21, [X31], #0x20
	0x03736354 B 0x375053C
	0x03736358 LDP X20, X19, [X31 + 0x10]
	0x0373635C MOV X0, X31
	0x03736360 LDP X30, X21, [X31], #0x20
	0x03736364 RET
	0x03736368 BL 0x1C16F20
	0x0373636C SUB X31, X31, 0x30
	0x03736370 STP X30, X21, [X31 + 0x10]
	0x03736374 STP X20, X19, [X31 + 0x20]
	0x03736378 ADRP X20, 0xCAA000
	0x0373637C ADRP X21, 0x9BD000
	0x03736380 LDRB W8, [X20 + 0xCED]
	0x03736384 LDR X21, [X21 + 0x9D0]
	0x03736388 MOV X19, X0
	0x0373638C TBNZ X8, 0x0, 0x37363C8
	0x03736390 ADRP X0, 0x9C0000
	0x03736394 LDR X0, [X0 + 0x978]
	0x03736398 BL 0x1C16CF4
	0x0373639C ADRP X0, 0xA0F000
	0x037363A0 LDR X0, [X0]
	0x037363A4 BL 0x1C16CF4
	0x037363A8 ADRP X0, 0x9BD000
	0x037363AC LDR X0, [X0 + 0x9D0]
	0x037363B0 BL 0x1C16CF4
	0x037363B4 ADRP X0, 0xA0F000
	0x037363B8 LDR X0, [X0 + 0x8]
	0x037363BC BL 0x1C16CF4
	0x037363C0 MOVZ W8, 0x1
	0x037363C4 STRB W8, [X20 + 0xCED]
	0x037363C8 LDR X0, [X21]
	0x037363CC MOVZ W1, 0x6
	0x037363D0 BL 0x1C16D6C
	0x037363D4 MOV X20, X0
	0x037363D8 MOV X0, X19

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+64], X30
	003 Move [X31+80], X22
	004 Move [X31+88], X21
	005 Move [X31+96], X20
	006 Move [X31+104], X19
	007 NotImplemented "Instruction MRS not yet implemented."
	008 Move X8, [X22+40]
	009 Move X19, X0
	010 Move [X31+56], X8
	011 Move X8, [X0+200]
	012 Compare X8, 0
	013 JumpIfNotEqual {19}
	014 Move X0, X19
	015 Call InputAction.CreateInternalActionMapForSingletonAction, X0
	016 Move X8, [X19+200]
	017 Compare X8, 0
	018 JumpIfEqual {44}
	019 Move X20, [X8+96]
	020 Compare X20, 0
	021 JumpIfEqual {34}
	022 Move W21, [X19+192]
	023 Add X8, X31, 8
	024 Move X0, X19
	025 Call InputAction.get_currentState, X0
	026 Move W8, [X31+8]
	027 Move W3, 1
	028 Move X0, X20
	029 Move W1, W21
	030 NotImplemented "Instruction CMP not yet implemented."
	031 NotImplemented "Instruction CSET not yet implemented."
	032 Move X4, X31
	033 Call InputActionState.ResetActionState, X0, X1, X2, X3
	034 Move X8, [X22+40]
	035 Move X9, [X31+56]
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X20, [X31+96]
	038 Move X19, [X31+104]
	039 Move X22, [X31+80]
	040 Move X21, [X31+88]
	041 Move X30, [X31+64]
	042 Add X31, X31, 112
	043 Return 
	044 Call 0x1C17F20
	045 Call 0x3EB2B20

Method: System.Boolean IsPressed()

Disassembly:
	0x037363DC BL 0x3735E5C
	0x037363E0 CBZ X20, 0x37365B8
	0x037363E4 MOV X21, X0
	0x037363E8 CBZ X0, 0x3736400
	0x037363EC LDR X8, [X20]
	0x037363F0 MOV X0, X21
	0x037363F4 LDR X1, [X8 + 0x40]
	0x037363F8 BL 0x1C16E00
	0x037363FC CBZ X0, 0x37365AC
	0x03736400 LDR W8, [X20 + 0x18]
	0x03736404 CBZ W8, 0x37365A8
	0x03736408 STR X21, [X20 + 0x20]
	0x0373640C ADRP X21, 0xA0F000
	0x03736410 LDR X0, [X19]
	0x03736414 LDR X21, [X21]
	0x03736418 CBZ X0, 0x3736438
	0x0373641C MOV X1, X31
	0x03736420 BL 0x374A7E0
	0x03736424 LDRSW X8, [X19 + 0x8]
	0x03736428 MOVZ W9, 0x30
	0x0373642C MUL X8, X8, X9

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+200]
	004 Move X19, X0
	005 Compare X8, 0
	006 JumpIfNotEqual {12}
	007 Move X0, X19
	008 Call InputAction.CreateInternalActionMapForSingletonAction, X0
	009 Move X8, [X19+200]
	010 Compare X8, 0
	011 JumpIfEqual {28}
	012 Move X0, [X8+96]
	013 Compare X0, 0
	014 JumpIfEqual {25}
	015 Move X1, X31
	016 Call InputActionState.get_actionStates, X0
	017 NotImplemented "Instruction LDRSW not yet implemented."
	018 Move W9, 48
	019 Move X1, X31
	020 NotImplemented "Instruction MADD not yet implemented."
	021 Move X30, [X31+16]
	022 Move X19, [X31+24]
	023 Call TriggerState.get_isPressed, X0
	024 Return X0
	025 Move X30, [X31+16]
	026 Move X19, [X31+24]
	027 Return X0
	028 Call 0x1C17F20

Method: System.Boolean IsInProgress()

Disassembly:
	0x03736430 LDRB W8, [X8, X0, LSL]
	0x03736434 B 0x373643C
	0x03736438 MOV W8, W31
	0x0373643C LDR X0, [X21]
	0x03736440 ADD X1, X31, 0xC
	0x03736444 STR W8, [X31 + 0xC]
	0x03736448 BL 0x1C16E04
	0x0373644C MOV X21, X0
	0x03736450 CBZ X0, 0x3736468
	0x03736454 LDR X8, [X20]
	0x03736458 MOV X0, X21
	0x0373645C LDR X1, [X8 + 0x40]
	0x03736460 BL 0x1C16E00
	0x03736464 CBZ X0, 0x37365AC
	0x03736468 LDR W8, [X20 + 0x18]
	0x0373646C CMP W8, 0x1
	0x03736470 B.LS 0x37365A8
	0x03736474 STR X21, [X20 + 0x28]
	0x03736478 ADRP X21, 0x9C0000
	0x0373647C LDR X0, [X19]
	0x03736480 LDR X21, [X21 + 0x978]
	0x03736484 CBZ X0, 0x37364A4

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+200]
	004 Move X19, X0
	005 Compare X8, 0
	006 JumpIfNotEqual {12}
	007 Move X0, X19
	008 Call InputAction.CreateInternalActionMapForSingletonAction, X0
	009 Move X8, [X19+200]
	010 Compare X8, 0
	011 JumpIfEqual {29}
	012 Move X0, [X8+96]
	013 Compare X0, 0
	014 JumpIfEqual {26}
	015 Move X1, X31
	016 Call InputActionState.get_actionStates, X0
	017 NotImplemented "Instruction LDRSW not yet implemented."
	018 Move W9, 48
	019 Move X1, X31
	020 Multiply X8, X8, X9
	021 Move W0, [X8]
	022 Move X30, [X31+16]
	023 Move X19, [X31+24]
	024 Call InputExtensions.IsInProgress, X0
	025 Return X0
	026 Move X30, [X31+16]
	027 Move X19, [X31+24]
	028 Return X0
	029 Call 0x1C17F20

Method: System.Boolean WasPressedThisFrame()

Disassembly:
	0x03736488 MOV X1, X31
	0x0373648C BL 0x374A7E0
	0x03736490 LDRSW X8, [X19 + 0x8]
	0x03736494 MOVZ W9, 0x30
	0x03736498 MADD X8, X8, X9, X0
	0x0373649C LDR V0, [X8 + 0x8]
	0x037364A0 B 0x37364A8
	0x037364A4 FMOV D0, X31
	0x037364A8 LDR X0, [X21]
	0x037364AC ADD X1, X31, 0x0
	0x037364B0 STR D0, [X31]
	0x037364B4 BL 0x1C16E04
	0x037364B8 MOV X21, X0
	0x037364BC CBZ X0, 0x37364D4
	0x037364C0 LDR X8, [X20]
	0x037364C4 MOV X0, X21
	0x037364C8 LDR X1, [X8 + 0x40]
	0x037364CC BL 0x1C16E00
	0x037364D0 CBZ X0, 0x37365AC
	0x037364D4 LDR W8, [X20 + 0x18]
	0x037364D8 CMP W8, 0x2
	0x037364DC B.LS 0x37365A8
	0x037364E0 MOV X0, X19
	0x037364E4 STR X21, [X20 + 0x30]
	0x037364E8 BL 0x3735E8C
	0x037364EC MOV X21, X0
	0x037364F0 CBZ X0, 0x3736508
	0x037364F4 LDR X8, [X20]
	0x037364F8 MOV X0, X21
	0x037364FC LDR X1, [X8 + 0x40]
	0x03736500 BL 0x1C16E00
	0x03736504 CBZ X0, 0x37365AC
	0x03736508 LDR W8, [X20 + 0x18]
	0x0373650C CMP W8, 0x3
	0x03736510 B.LS 0x37365A8
	0x03736514 MOV X0, X19
	0x03736518 STR X21, [X20 + 0x38]
	0x0373651C BL 0x37362E4
	0x03736520 MOV X21, X0
	0x03736524 CBZ X0, 0x373653C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xCAB000
	005 Move W8, [X20+3302]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xA0F000
	012 Move X0, [X0+3984]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3302], W8
	016 Move X8, [X19+200]
	017 Compare X8, 0
	018 JumpIfNotEqual {24}
	019 Move X0, X19
	020 Call InputAction.CreateInternalActionMapForSingletonAction, X0
	021 Move X8, [X19+200]
	022 Compare X8, 0
	023 JumpIfEqual {48}
	024 Move X0, [X8+96]
	025 Compare X0, 0
	026 JumpIfEqual {44}
	027 Move X20, 0xA0F000
	028 Move X20, [X20+3984]
	029 Move X1, X31
	030 Call InputActionState.get_actionStates, X0
	031 Move X8, [X20]
	032 NotImplemented "Instruction LDRSW not yet implemented."
	033 Move W10, 48
	034 Move X8, [X8+184]
	035 NotImplemented "Instruction NOP not yet implemented."
	036 NotImplemented "Instruction MADD not yet implemented."
	037 Move W9, [X9+40]
	038 Move W8, [X8]
	039 NotImplemented "Instruction CMP not yet implemented."
	040 NotImplemented "Instruction CSET not yet implemented."
	041 NotImplemented "Instruction CMP not yet implemented."
	042 NotImplemented "Instruction CSET not yet implemented."
	043 And W0, W8, W9
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X30, [X31+32]
	047 Return X0
	048 Call 0x1C17F20

Method: System.Boolean WasReleasedThisFrame()

Disassembly:
	0x03736528 LDR X8, [X20]
	0x0373652C MOV X0, X21
	0x03736530 LDR X1, [X8 + 0x40]
	0x03736534 BL 0x1C16E00
	0x03736538 CBZ X0, 0x37365AC
	0x0373653C LDR W8, [X20 + 0x18]
	0x03736540 CMP W8, 0x4
	0x03736544 B.LS 0x37365A8
	0x03736548 MOV X0, X19
	0x0373654C STR X21, [X20 + 0x40]
	0x03736550 BL 0x3735ED0
	0x03736554 MOV X19, X0
	0x03736558 CBZ X0, 0x3736570
	0x0373655C LDR X8, [X20]
	0x03736560 MOV X0, X19
	0x03736564 LDR X1, [X8 + 0x40]
	0x03736568 BL 0x1C16E00
	0x0373656C CBZ X0, 0x37365AC
	0x03736570 LDR W8, [X20 + 0x18]
	0x03736574 CMP W8, 0x5
	0x03736578 B.LS 0x37365A8
	0x0373657C ADRP X8, 0xA0F000
	0x03736580 LDR X8, [X8 + 0x8]
	0x03736584 STR X19, [X20 + 0x48]
	0x03736588 MOV X1, X20
	0x0373658C MOV X2, X31
	0x03736590 LDR X0, [X8]
	0x03736594 BL 0x3227C5C
	0x03736598 LDP X20, X19, [X31 + 0x20]
	0x0373659C LDP X30, X21, [X31 + 0x10]
	0x037365A0 ADD X31, X31, 0x30
	0x037365A4 RET
	0x037365A8 BL 0x1C16F28
	0x037365AC BL 0x1C16F44
	0x037365B0 MOV X1, X31
	0x037365B4 BL 0x1C16DEC
	0x037365B8 BL 0x1C16F20
	0x037365BC SUB X31, X31, 0x60
	0x037365C0 STP X30, X23, [X31 + 0x30]
	0x037365C4 STP X22, X21, [X31 + 0x40]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xCAB000
	005 Move W8, [X20+3303]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xA0F000
	012 Move X0, [X0+3984]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3303], W8
	016 Move X8, [X19+200]
	017 Compare X8, 0
	018 JumpIfNotEqual {24}
	019 Move X0, X19
	020 Call InputAction.CreateInternalActionMapForSingletonAction, X0
	021 Move X8, [X19+200]
	022 Compare X8, 0
	023 JumpIfEqual {48}
	024 Move X0, [X8+96]
	025 Compare X0, 0
	026 JumpIfEqual {44}
	027 Move X20, 0xA0F000
	028 Move X20, [X20+3984]
	029 Move X1, X31
	030 Call InputActionState.get_actionStates, X0
	031 Move X8, [X20]
	032 NotImplemented "Instruction LDRSW not yet implemented."
	033 Move W10, 48
	034 Move X8, [X8+184]
	035 NotImplemented "Instruction NOP not yet implemented."
	036 NotImplemented "Instruction MADD not yet implemented."
	037 Move W9, [X9+44]
	038 Move W8, [X8]
	039 NotImplemented "Instruction CMP not yet implemented."
	040 NotImplemented "Instruction CSET not yet implemented."
	041 NotImplemented "Instruction CMP not yet implemented."
	042 NotImplemented "Instruction CSET not yet implemented."
	043 And W0, W8, W9
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X30, [X31+32]
	047 Return X0
	048 Call 0x1C17F20

Method: System.Boolean WasPerformedThisFrame()

Disassembly:
	0x03735AB8 BL 0x1C16CF4
	0x03735ABC MOVZ W8, 0x1
	0x03735AC0 STRB W8, [X21 + 0xCEC]
	0x03735AC4 LDR X8, [X19 + 0xC8]
	0x03735AC8 CBNZ X8, 0x3735ADC
	0x03735ACC MOV X0, X19
	0x03735AD0 BL 0x373572C
	0x03735AD4 LDR X8, [X19 + 0xC8]
	0x03735AD8 CBZ X8, 0x3735C18
	0x03735ADC ADRP X9, 0xA0F000
	0x03735AE0 LDR X9, [X9 + 0xFD0]
	0x03735AE4 LDR X21, [X8 + 0x30]
	0x03735AE8 LDR X1, [X9]
	0x03735AEC MOV X0, X21
	0x03735AF0 BL 0x217B240
	0x03735AF4 CMP W0, 0x1
	0x03735AF8 B.LT 0x3735C1C
	0x03735AFC CBZ X21, 0x3735C18
	0x03735B00 MOV X22, X31
	0x03735B04 MOV W25, W0
	0x03735B08 ADD X23, X21, 0x20
	0x03735B0C MOVN W24, 0x0
	0x03735B10 LDR W8, [X21 + 0x18]
	0x03735B14 CMP X22, X8
	0x03735B18 B.CS 0x3735C14
	0x03735B1C MOV X0, X23
	0x03735B20 MOV X1, X19
	0x03735B24 MOV X2, X31
	0x03735B28 BL 0x3747D00
	0x03735B2C TBZ X0, 0x0, 0x3735B3C
	0x03735B30 ADD W24, W24, 0x1
	0x03735B34 CMP W24, W20
	0x03735B38 B.EQ 0x3735BF8
	0x03735B3C ADD X22, X22, 0x1
	0x03735B40 CMP X25, X22
	0x03735B44 ADD X23, X23, 0x58
	0x03735B48 B.NE 0x3735B10
	0x03735B4C STR W20, [X31 + 0xC]
	0x03735B50 ADRP X20, 0x9BE000
	0x03735B54 LDR X20, [X20 + 0x758]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xCAC000
	005 Move W8, [X20+3304]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xA10000
	012 Move X0, [X0+3984]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3304], W8
	016 Move X8, [X19+200]
	017 Compare X8, 0
	018 JumpIfNotEqual {24}
	019 Move X0, X19
	020 Call InputAction.CreateInternalActionMapForSingletonAction, X0
	021 Move X8, [X19+200]
	022 Compare X8, 0
	023 JumpIfEqual {48}
	024 Move X0, [X8+96]
	025 Compare X0, 0
	026 JumpIfEqual {44}
	027 Move X20, 0xA10000
	028 Move X20, [X20+3984]
	029 Move X1, X31
	030 Call InputActionState.get_actionStates, X0
	031 Move X8, [X20]
	032 NotImplemented "Instruction LDRSW not yet implemented."
	033 Move W10, 48
	034 Move X8, [X8+184]
	035 NotImplemented "Instruction NOP not yet implemented."
	036 NotImplemented "Instruction MADD not yet implemented."
	037 Move W9, [X9+32]
	038 Move W8, [X8]
	039 NotImplemented "Instruction CMP not yet implemented."
	040 NotImplemented "Instruction CSET not yet implemented."
	041 NotImplemented "Instruction CMP not yet implemented."
	042 NotImplemented "Instruction CSET not yet implemented."
	043 And W0, W8, W9
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X30, [X31+32]
	047 Return X0
	048 Call 0x1C17F20

Method: System.Single GetTimeoutCompletionPercentage()

Disassembly:
	0x037365C8 STP X20, X19, [X31 + 0x50]
	0x037365CC ADRP X20, 0xCAA000
	0x037365D0 ADRP X23, 0xA0F000
	0x037365D4 LDRB W8, [X20 + 0xCEE]
	0x037365D8 LDR X23, [X23 + 0x10]
	0x037365DC MOV X19, X0
	0x037365E0 TBNZ X8, 0x0, 0x373661C
	0x037365E4 ADRP X0, 0xA0F000
	0x037365E8 LDR X0, [X0 + 0x18]
	0x037365EC BL 0x1C16CF4
	0x037365F0 ADRP X0, 0xA0F000
	0x037365F4 LDR X0, [X0 + 0x20]
	0x037365F8 BL 0x1C16CF4
	0x037365FC ADRP X0, 0xA0F000
	0x03736600 LDR X0, [X0 + 0x28]
	0x03736604 BL 0x1C16CF4
	0x03736608 ADRP X0, 0xA0F000
	0x0373660C LDR X0, [X0 + 0x10]
	0x03736610 BL 0x1C16CF4
	0x03736614 MOVZ W8, 0x1
	0x03736618 STRB W8, [X20 + 0xCEE]
	0x0373661C ADRP X21, 0xA0F000
	0x03736620 ADRP X22, 0xA0F000
	0x03736624 ADRP X20, 0xA0F000
	0x03736628 LDR X21, [X21 + 0x20]
	0x0373662C LDR X22, [X22 + 0x28]
	0x03736630 LDR X20, [X20 + 0x18]
	0x03736634 MOV X0, X19
	0x03736638 STP X31, X31, [X31 + 0x18]
	0x0373663C STR X31, [X31 + 0x28]
	0x03736640 BL 0x3736750
	0x03736644 LDR X9, [X23]
	0x03736648 STP X0, X1, [X31 + 0x8]
	0x0373664C ADD X8, X31, 0x18
	0x03736650 ADD X0, X31, 0x8
	0x03736654 MOV X1, X9
	0x03736658 BL 0x24FD990
	0x0373665C LDR X1, [X21]
	0x03736660 ADD X0, X31, 0x18
	0x03736664 BL 0x2BC496C
	0x03736668 MOV W19, W0
	0x0373666C TBZ X0, 0x0, 0x3736694
	0x03736670 LDR X1, [X22]
	0x03736674 ADD X0, X31, 0x18
	0x03736678 BL 0x2BC4998
	0x0373667C CBZ X0, 0x37366C4
	0x03736680 LDR W8, [X0 + 0x48]
	0x03736684 CMP W8, 0x0
	0x03736688 B.LE 0x373665C
	0x0373668C MOVZ W21, 0x4
	0x03736690 B 0x3736698
	0x03736694 MOVZ W21, 0x5
	0x03736698 LDR X1, [X20]
	0x0373669C ADD X0, X31, 0x18
	0x037366A0 BL 0x2BC4968
	0x037366A4 CMP W21, 0x4
	0x037366A8 CSET W8, EQ
	0x037366AC AND W0, W19, W8, 0x0
	0x037366B0 LDP X20, X19, [X31 + 0x50]
	0x037366B4 LDP X22, X21, [X31 + 0x40]
	0x037366B8 LDP X30, X23, [X31 + 0x30]
	0x037366BC ADD X31, X31, 0x60
	0x037366C0 RET
	0x037366C4 BL 0x1C16F20
	0x037366C8 B 0x37366D0
	0x037366CC B 0x37366D0
	0x037366D0 MOV X19, X0
	0x037366D4 CMP W1, 0x1
	0x037366D8 B.NE 0x3736710
	0x037366DC MOV X0, X19
	0x037366E0 BL 0x3EB1AD0
	0x037366E4 LDR X20, [X0]
	0x037366E8 BL 0x3EB1AE0
	0x037366EC ADRP X8, 0xA0F000
	0x037366F0 LDR X8, [X8 + 0x18]
	0x037366F4 ADD X0, X31, 0x18

ISIL:
	001 Move [X31-64], D9
	002 Move [X31-56], D8
	003 Move [X31+16], X30
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X8, [X0+200]
	009 Move X19, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {17}
	012 Move X0, X19
	013 Call InputAction.CreateInternalActionMapForSingletonAction, X0
	014 Move X8, [X19+200]
	015 Compare X8, 0
	016 JumpIfEqual {81}
	017 Move X20, [X8+96]
	018 Compare X20, 0
	019 JumpIfEqual {65}
	020 Move X0, X20
	021 Move X1, X31
	022 Call InputActionState.get_actionStates, X0
	023 NotImplemented "Instruction LDRSW not yet implemented."
	024 Move W22, 48
	025 Move X1, X31
	026 NotImplemented "Instruction MADD not yet implemented."
	027 Move X0, X19
	028 Call TriggerState.get_interactionIndex, X0
	029 Add W31, W0, 1
	030 Move W21, W0
	031 Move X0, X20
	032 Move X1, X31
	033 Call InputActionState.get_interactionStates, X0
	034 NotImplemented "Instruction SMADDL not yet implemented."
	035 Move W8, [X19+2]
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X0, X19
	038 Move X1, X31
	039 Call InteractionState.get_isTimerRunning, X0
	040 Move S0, W31
	041 Move TEMP, X0
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfNotEqual {57}
	045 Move V8, [X19+4]
	046 Move V9, [X19+16]
	047 Move X0, X31
	048 Call InputState.get_currentTime
	049 NotImplemented "Instruction FCVT not yet implemented."
	050 Add D2, D9, D1
	051 Subtract D2, D2, D0
	052 NotImplemented "Instruction FCMP not yet implemented."
	053 Move S0, 1
	054 Subtract D0, D1, D2
	055 NotImplemented "Instruction FDIV not yet implemented."
	056 NotImplemented "Instruction INVALID not yet implemented."
	057 Move V1, [X19+36]
	058 NotImplemented "Instruction FCMP not yet implemented."
	059 Move V2, [X19+4]
	060 Move V3, [X19+32]
	061 Multiply S0, S0, S2
	062 Add S0, S3, S0
	063 Add S1, S1, S3
	064 NotImplemented "Instruction FDIV not yet implemented."
	065 Move S0, W31
	066 Move W8, [X19]
	067 Move S0, W31
	068 NotImplemented "Instruction CMP not yet implemented."
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move S0, W31
	071 Move S1, 1
	072 NotImplemented "Instruction FCSEL not yet implemented."
	073 Move X20, [X31+48]
	074 Move X19, [X31+56]
	075 Move X22, [X31+32]
	076 Move X21, [X31+40]
	077 Move X30, [X31+16]
	078 Move D9, [X31+64]
	079 Move D8, [X31+72]
	080 Return V0
	081 Call 0x1C17F20

Method: System.Boolean get_isSingletonAction()

Disassembly:
	0x037352F8 MOV X0, X20
	0x037352FC MOV X1, X31
	0x03735300 BL 0x374BD9C
	0x03735304 ADDS W31, W0, 0x1
	0x03735308 B.EQ 0x373532C
	0x0373530C MOV W2, W0
	0x03735310 LDRH W1, [X20 + 0x18]
	0x03735314 MOV X0, X19

ISIL:
	001 Move X8, [X0+200]
	002 Compare X8, 0
	003 JumpIfEqual {8}
	004 Move X8, [X8+80]
	005 NotImplemented "Instruction CMP not yet implemented."
	006 NotImplemented "Instruction CSET not yet implemented."
	007 Return X0
	008 Move W0, 1
	009 Return X0

Method: UnityEngine.InputSystem.InputActionState/TriggerState get_currentState()

Disassembly:
	0x037357B4 STR X19, [X20 + 0x50]
	0x037357B8 LDR X8, [X19 + 0x40]
	0x037357BC LDP X22, X21, [X31 + 0x10]
	0x037357C0 STR X8, [X20 + 0x30]
	0x037357C4 STR X20, [X19 + 0xC8]
	0x037357C8 LDP X20, X19, [X31 + 0x20]
	0x037357CC LDR X30, [X31], #0x30
	0x037357D0 RET
	0x037357D4 BL 0x1C16F20
	0x037357D8 BL 0x1C16F28
	0x037357DC MOVN W8, 0x0
	0x037357E0 MOV X1, X31
	0x037357E4 STR W8, [X0 + 0x58]
	0x037357E8 B 0x33BDD8C
	0x037357EC STP X30, X19, [X31 - 0x10]!
	0x037357F0 LDR X8, [X0 + 0xC8]
	0x037357F4 MOV X19, X0
	0x037357F8 CBNZ X8, 0x373580C
	0x037357FC MOV X0, X19
	0x03735800 BL 0x373572C
	0x03735804 LDR X8, [X19 + 0xC8]
	0x03735808 CBZ X8, 0x3735828
	0x0373580C LDR X0, [X8 + 0x60]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W9, [X0+192]
	004 Move X19, X8
	005 Add W31, W9, 1
	006 Move X8, [X0+200]
	007 Move X1, X0
	008 Compare X8, 0
	009 JumpIfEqual {28}
	010 Move X0, [X8+96]
	011 Compare X0, 0
	012 JumpIfEqual {28}
	013 Move X2, X31
	014 Call InputActionState.FetchActionState, X0, X1
	015 Move V0, [X0]
	016 Move V1, [X0+16]
	017 Move V2, [X0+2]
	018 Move [X19], V0
	019 Move [X19+8], V1
	020 Move [X19+2], V2
	021 NotImplemented "Instruction MOVI not yet implemented."
	022 Move [X19+16], V0
	023 Move [X19+24], V0
	024 Move [X19], V0
	025 Move X30, [X31+16]
	026 Move X19, [X31+24]
	027 Return X0
	028 Call 0x1C17F20

Method: System.String MakeSureIdIsInPlace()

Disassembly:
	0x03735224 MOV W2, W22
	0x03735228 MOV X3, X31
	0x0373522C MOV X4, X31
	0x03735230 MOV X5, X31
	0x03735234 MOV X6, X31
	0x03735238 MOV X20, X0
	0x0373523C BL 0x3734C54
	0x03735240 MOV X0, X19
	0x03735244 BL 0x37345CC
	0x03735248 LDR X8, [X23]
	0x0373524C STP X0, X1, [X31]
	0x03735250 ADD X0, X31, 0x0
	0x03735254 MOV X1, X8
	0x03735258 BL 0x24FBFFC
	0x0373525C CBZ X20, 0x373529C
	0x03735260 STR X0, [X20 + 0x40]
	0x03735264 LDR W8, [X19 + 0xB4]
	0x03735268 MOV X0, X20
	0x0373526C LDP X22, X21, [X31 + 0x20]

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+16], X30
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move X0, [X0+40]
	006 Move X1, X31
	007 Call String.IsNullOrEmpty, X0
	008 Move TEMP, X0
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfNotEqual {20}
	012 Move X0, X31
	013 Call Guid.NewGuid
	014 Move [X31], X0
	015 Move [X31+8], X1
	016 Add X0, X31, 0
	017 Move X1, X31
	018 Call Guid.ToString, X0
	019 Move [X19+40], X0
	020 Move X0, [X19+40]
	021 Move X30, [X31+16]
	022 Move X19, [X31+24]
	023 Add X31, X31, 32
	024 Return X0

Method: System.Void GenerateId()

Disassembly:
	0x037366F8 LDR X1, [X8]
	0x037366FC BL 0x2BC4968
	0x03736700 CBNZ X20, 0x3736718
	0x03736704 MOV W19, W31
	0x03736708 MOV W21, W31
	0x0373670C B 0x37366A4
	0x03736710 MOV X20, X31
	0x03736714 B 0x3736724
	0x03736718 MOV X0, X20
	0x0373671C BL 0x1C16F18
	0x03736720 MOV X19, X0
	0x03736724 ADRP X8, 0xA0F000
	0x03736728 LDR X8, [X8 + 0x18]

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+16], X30
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move X0, X31
	006 Call Guid.NewGuid
	007 Move [X31], X0
	008 Move [X31+8], X1
	009 Add X0, X31, 0
	010 Move X1, X31
	011 Call Guid.ToString, X0
	012 Move [X19+40], X0
	013 Move X30, [X31+16]
	014 Move X19, [X31+24]
	015 Add X31, X31, 32
	016 Return 

Method: UnityEngine.InputSystem.InputActionMap GetOrCreateActionMap()

Disassembly:
	0x037354FC LDR W9, [X9 + 0x28]
	0x03735500 LDR W8, [X8]
	0x03735504 CMP W9, W8
	0x03735508 CSET W9, EQ
	0x0373550C CMP W8, 0x0
	0x03735510 CSET W8, NE
	0x03735514 AND W0, W8, W9, 0x0
	0x03735518 LDP X20, X19, [X31 + 0x10]
	0x0373551C LDR X30, [X31], #0x20

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+200]
	005 Compare X0, 0
	006 JumpIfNotEqual {10}
	007 Move X0, X19
	008 Call InputAction.CreateInternalActionMapForSingletonAction, X0
	009 Move X0, [X19+200]
	010 Move X30, [X31+16]
	011 Move X19, [X31+24]
	012 Return X0

Method: System.Void CreateInternalActionMapForSingletonAction()

Disassembly:
	0x0373672C LDR X1, [X8]
	0x03736730 ADD X0, X31, 0x18
	0x03736734 BL 0x2BC4968
	0x03736738 CBNZ X20, 0x3736744
	0x0373673C MOV X0, X19
	0x03736740 BL 0x1D2C690
	0x03736744 MOV X0, X20
	0x03736748 BL 0x1C16F18
	0x0373674C BL 0x1990590
	0x03736750 SUB X31, X31, 0x30
	0x03736754 STP X30, X21, [X31 + 0x10]
	0x03736758 STP X20, X19, [X31 + 0x20]
	0x0373675C ADRP X21, 0xCAA000
	0x03736760 ADRP X20, 0xA0F000
	0x03736764 LDRB W8, [X21 + 0xCEF]
	0x03736768 LDR X20, [X20 + 0x30]
	0x0373676C MOV X19, X0
	0x03736770 TBNZ X8, 0x0, 0x3736788
	0x03736774 ADRP X0, 0xA0F000
	0x03736778 LDR X0, [X0 + 0x30]
	0x0373677C BL 0x1C16CF4
	0x03736780 MOVZ W8, 0x1
	0x03736784 STRB W8, [X21 + 0xCEF]
	0x03736788 LDR X1, [X19 + 0x18]
	0x0373678C LDR X2, [X20]
	0x03736790 ADD X0, X31, 0x0
	0x03736794 STP X31, X31, [X31]
	0x03736798 BL 0x24FD80C
	0x0373679C LDP X0, X1, [X31]
	0x037367A0 LDP X20, X19, [X31 + 0x20]
	0x037367A4 LDP X30, X21, [X31 + 0x10]
	0x037367A8 ADD X31, X31, 0x30
	0x037367AC RET
	0x037367B0 LDR W8, [X0 + 0x48]
	0x037367B4 CMP W8, 0x0
	0x037367B8 CSET W0, GT
	0x037367BC RET
	0x037367C0 SUB X31, X31, 0x30
	0x037367C4 STP X30, X21, [X31 + 0x10]
	0x037367C8 STP X20, X19, [X31 + 0x20]
	0x037367CC ADRP X21, 0xCAA000
	0x037367D0 ADRP X20, 0xA0F000
	0x037367D4 LDRB W8, [X21 + 0xCF0]
	0x037367D8 LDR X20, [X20 + 0x38]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xCAB000
	007 Move X22, 0xA0F000
	008 Move X21, 0xA0F000
	009 Move W8, [X20+3305]
	010 Move X22, [X22+3944]
	011 Move X21, [X21+4016]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0xA0F000
	018 Move X0, [X0+3944]
	019 Call 0x1C17CF4
	020 Move X0, 0xA0F000
	021 Move X0, [X0+4016]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+3305], W8
	025 Move X0, [X22]
	026 Call 0x1C17F10
	027 Move TEMP, 0
	028 Not TEMP
	029 Move W8, TEMP
	030 Move X1, X31
	031 Move X20, X0
	032 Move [X0+88], W8
	033 Call Object..ctor, X0
	034 Move X0, [X21]
	035 Move W1, 1
	036 Call 0x1C17D6C
	037 Compare X0, 0
	038 JumpIfEqual {54}
	039 Move W8, [X0+24]
	040 Compare W8, 0
	041 JumpIfEqual {55}
	042 Move [X0+32], X19
	043 Move [X20+40], X0
	044 Move [X20+80], X19
	045 Move X8, [X19+64]
	046 Move X22, [X31+16]
	047 Move X21, [X31+24]
	048 Move [X20+48], X8
	049 Move [X19+200], X20
	050 Move X20, [X31+32]
	051 Move X19, [X31+40]
	052 Move X30, [X31+48]
	053 Return 
	054 Call 0x1C17F20
	055 Call 0x1C17F28

Method: System.Void RequestInitialStateCheckOnEnabledAction()

Disassembly:
	0x037367EC BL 0x1C16CF4
	0x037367F0 MOVZ W8, 0x1
	0x037367F4 STRB W8, [X21 + 0xCF0]
	0x037367F8 LDR X1, [X19 + 0x20]
	0x037367FC LDR X2, [X20]
	0x03736800 ADD X0, X31, 0x0
	0x03736804 STP X31, X31, [X31]
	0x03736808 BL 0x24FC3F0
	0x0373680C LDP X0, X1, [X31]
	0x03736810 LDP X20, X19, [X31 + 0x20]
	0x03736814 LDP X30, X21, [X31 + 0x10]
	0x03736818 ADD X31, X31, 0x30
	0x0373681C RET
	0x03736820 STP X30, X21, [X31 - 0x20]!
	0x03736824 STP X20, X19, [X31 + 0x10]
	0x03736828 ADRP X20, 0xCAA000

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+200]
	004 Move X19, X0
	005 Compare X8, 0
	006 JumpIfNotEqual {12}
	007 Move X0, X19
	008 Call InputAction.CreateInternalActionMapForSingletonAction, X0
	009 Move X8, [X19+200]
	010 Compare X8, 0
	011 JumpIfEqual {22}
	012 Move X0, [X8+96]
	013 Compare X0, 0
	014 JumpIfEqual {22}
	015 Move W1, [X19+192]
	016 Move W2, 1
	017 Move X3, X31
	018 Move X30, [X31+16]
	019 Move X19, [X31+24]
	020 Call InputActionState.SetInitialStateCheckPending, X0, X1, X2
	021 Return 
	022 Call 0x1C17F20

Method: System.Boolean ActiveControlIsValid(UnityEngine.InputSystem.InputControl control)

Disassembly:
	0x0373682C ADRP X21, 0xA0F000
	0x03736830 LDRB W8, [X20 + 0xCF1]
	0x03736834 LDR X21, [X21 + 0x40]
	0x03736838 MOV X19, X0
	0x0373683C TBNZ X8, 0x0, 0x3736854
	0x03736840 ADRP X0, 0xA0F000
	0x03736844 LDR X0, [X0 + 0x40]
	0x03736848 BL 0x1C16CF4
	0x0373684C MOVZ W8, 0x1
	0x03736850 STRB W8, [X20 + 0xCF1]
	0x03736854 LDR X0, [X21]
	0x03736858 BL 0x1C16F10
	0x0373685C MOV X1, X31
	0x03736860 MOV X20, X0
	0x03736864 BL 0x33BDD8C
	0x03736868 MOVN W8, 0x1
	0x0373686C MOV X0, X31
	0x03736870 STR W8, [X20 + 0x10]
	0x03736874 BL 0x33C151C
	0x03736878 STR W0, [X20 + 0x70]
	0x0373687C STR X19, [X20 + 0x78]
	0x03736880 MOV X0, X20
	0x03736884 LDP X20, X19, [X31 + 0x10]
	0x03736888 LDP X30, X21, [X31], #0x20
	0x0373688C RET
	0x03736890 STR X30, [X31 - 0x20]!
	0x03736894 STP X20, X19, [X31 + 0x10]
	0x03736898 MOV W19, W1
	0x0373689C MOV X1, X31
	0x037368A0 MOV X20, X0
	0x037368A4 BL 0x33BDD8C
	0x037368A8 MOV X0, X31
	0x037368AC STR W19, [X20 + 0x10]
	0x037368B0 BL 0x33C151C
	0x037368B4 STR W0, [X20 + 0x70]
	0x037368B8 LDP X20, X19, [X31 + 0x10]
	0x037368BC LDR X30, [X31], #0x20
	0x037368C0 RET
	0x037368C4 ADD X1, X0, 0x30
	0x037368C8 MOVZ W2, 0x60
	0x037368CC MOV X0, X8
	0x037368D0 B 0x3EB1AC0
	0x037368D4 SUB X31, X31, 0x1D0
	0x037368D8 STR X29, [X31 + 0x180]
	0x037368DC STP X30, X25, [X31 + 0x190]
	0x037368E0 STP X24, X23, [X31 + 0x1A0]
	0x037368E4 STP X22, X21, [X31 + 0x1B0]
	0x037368E8 STP X20, X19, [X31 + 0x1C0]
	0x037368EC MRS X22, 0xC000
	0x037368F0 LDR X8, [X22 + 0x28]
	0x037368F4 ADRP X21, 0xCAA000
	0x037368F8 MOV X19, X1
	0x037368FC MOV X20, X0
	0x03736900 STR X8, [X31 + 0x178]
	0x03736904 LDRB W8, [X21 + 0xCF2]
	0x03736908 TBNZ X8, 0x0, 0x373692C
	0x0373690C ADRP X0, 0xA0E000
	0x03736910 LDR X0, [X0 + 0xF48]
	0x03736914 BL 0x1C16CF4
	0x03736918 ADRP X0, 0xA0E000
	0x0373691C LDR X0, [X0 + 0xF58]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+64], X30
	003 Move [X31+72], X21
	004 Move [X31+80], X20
	005 Move [X31+88], X19
	006 Move X21, 0xCAB000
	007 Move W8, [X21+3306]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0xA0F000
	015 Move X0, [X0+4024]
	016 Call 0x1C17CF4
	017 Move X0, 0xA0F000
	018 Move X0, [X0+4032]
	019 Call 0x1C17CF4
	020 Move X0, 0xA0F000
	021 Move X0, [X0+4040]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+3306], W8
	025 Move [X31+32], X31
	026 Move [X31+40], X31
	027 Move [X31+48], X31
	028 Compare X19, 0
	029 JumpIfEqual {72}
	030 Move X19, [X19+120]
	031 Compare X19, 0
	032 JumpIfEqual {79}
	033 Move X0, X19
	034 Move X1, X31
	035 Call InputDevice.get_added, X0
	036 Move TEMP, X0
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfNotEqual {72}
	040 Move X0, [X20+200]
	041 Compare X0, 0
	042 JumpIfNotEqual {48}
	043 Move X0, X20
	044 Call InputAction.CreateInternalActionMapForSingletonAction, X0
	045 Move X0, [X20+200]
	046 Compare X0, 0
	047 JumpIfEqual {79}
	048 Add X8, X31, 8
	049 Call InputActionMap.get_devices, X0
	050 NotImplemented "Instruction LDUR not yet implemented."
	051 Move X8, [X31+24]
	052 Move [X31+2], V0
	053 Move W9, [X31+32]
	054 Move [X31+48], X8
	055 Compare W9, 0
	056 JumpIfEqual {71}
	057 Move X8, 0xA0F000
	058 Move X8, [X8+4032]
	059 Add X0, X31, 32
	060 Move X1, [X8]
	061 Call Nullable`1<ReadOnlyArray`1<Object>>.get_Value, X0
	062 Move X8, 0xA0F000
	063 Move X8, [X8+4040]
	064 Move X2, X19
	065 Move X3, [X8]
	066 Call 0x223D504, X0, X1
	067 Move TEMP, X0
	068 And TEMP, TEMP, 1
	069 Compare TEMP, 1
	070 JumpIfNotEqual {72}
	071 Move W0, 1
	072 Move W0, W31
	073 Move X20, [X31+80]
	074 Move X19, [X31+88]
	075 Move X30, [X31+64]
	076 Move X21, [X31+72]
	077 Add X31, X31, 96
	078 Return X0
	079 Call 0x1C17F20

Method: System.Nullable`1<UnityEngine.InputSystem.InputBinding> FindEffectiveBindingMask()

Disassembly:
	0x037369F8 BL 0x3EB1B20
	0x037369FC STR X30, [X31 - 0x10]!
	0x03736A00 LDR X8, [X0 + 0x28]
	0x03736A04 CBZ X8, 0x3736A2C
	0x03736A08 LDR X8, [X0 + 0x18]
	0x03736A0C CBZ X8, 0x3736A34
	0x03736A10 LDR W9, [X8 + 0x18]
	0x03736A14 CBZ W9, 0x3736A38
	0x03736A18 LDR X0, [X8 + 0x20]
	0x03736A1C CBZ X0, 0x3736A34
	0x03736A20 AND W1, W1, 0x1
	0x03736A24 LDR X30, [X31], #0x10
	0x03736A28 B 0x3734520
	0x03736A2C LDR X30, [X31], #0x10
	0x03736A30 RET
	0x03736A34 BL 0x1C16F20
	0x03736A38 BL 0x1C16F28
	0x03736A3C SUB X31, X31, 0x30
	0x03736A40 STP X30, X19, [X31 + 0x20]
	0x03736A44 MOV X19, X8
	0x03736A48 ADD X0, X0, 0xA0
	0x03736A4C ADD X8, X31, 0x8
	0x03736A50 BL 0x3736A70
	0x03736A54 LDR X8, [X31 + 0x18]
	0x03736A58 LDUR V0, [X31 + 0x8]
	0x03736A5C STR X8, [X19 + 0x10]
	0x03736A60 STR V0, [X19]
	0x03736A64 LDP X30, X19, [X31 + 0x20]
	0x03736A68 ADD X31, X31, 0x30
	0x03736A6C RET
	0x03736A70 SUB X31, X31, 0x30
	0x03736A74 STP X30, X21, [X31 + 0x10]
	0x03736A78 STP X20, X19, [X31 + 0x20]
	0x03736A7C ADRP X21, 0xCAA000
	0x03736A80 LDRB W9, [X21 + 0xD22]
	0x03736A84 MOV X20, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xCAB000
	006 Move W9, [X21+3307]
	007 Move X20, X0
	008 Move X19, X8
	009 Move TEMP, X9
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xA0F000
	014 Move X0, [X0+3928]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+3307], W8
	018 Move X1, X20
	019 Add X1, X1, 80
	020 Move W8, [X1]
	021 Compare W8, 0
	022 JumpIfEqual {31}
	023 Move X0, X19
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move W2, 96
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Call 0x3EB2AC0
	030 Return X0
	031 Move X8, [X20+200]
	032 Compare X8, 0
	033 JumpIfEqual {43}
	034 Move X1, X8
	035 Add X1, X1, 104
	036 Move W9, [X1]
	037 Compare W9, 0
	038 JumpIfNotEqual {23}
	039 Move X8, [X8+32]
	040 Compare X8, 0
	041 JumpIfEqual {43}
	042 Add X1, X8, 48
	043 NotImplemented "Instruction MOVI not yet implemented."
	044 Move [X19+64], V0
	045 Move [X19+72], V0
	046 Move [X19+32], V0
	047 Move [X19+40], V0
	048 Move [X19], V0
	049 Move [X19+8], V0
	050 Move X20, [X31+16]
	051 Move X19, [X31+24]
	052 Move X30, [X31+32]
	053 Move X21, [X31+40]
	054 Return X0

Method: System.Int32 BindingIndexOnActionToBindingIndexOnMap(System.Int32 indexOfBindingOnAction)

Disassembly:
	0x03736A88 MOV X19, X8
	0x03736A8C TBNZ X9, 0x0, 0x3736AB0
	0x03736A90 ADRP X0, 0xA0F000
	0x03736A94 LDR X0, [X0 + 0x48]
	0x03736A98 BL 0x1C16CF4
	0x03736A9C ADRP X0, 0xA0F000
	0x03736AA0 LDR X0, [X0 + 0x50]
	0x03736AA4 BL 0x1C16CF4
	0x03736AA8 MOVZ W8, 0x1
	0x03736AAC STRB W8, [X21 + 0xD22]
	0x03736AB0 LDRB W8, [X20]
	0x03736AB4 CBZ W8, 0x3736B00
	0x03736AB8 ADRP X8, 0xA0F000
	0x03736ABC LDR X8, [X8 + 0x50]
	0x03736AC0 LDR X1, [X20 + 0x8]
	0x03736AC4 LDR W3, [X20 + 0x4]
	0x03736AC8 ADRP X20, 0xA0F000
	0x03736ACC LDR X4, [X8]
	0x03736AD0 LDR X20, [X20 + 0x48]
	0x03736AD4 ADD X0, X31, 0x0
	0x03736AD8 MOV W2, W31
	0x03736ADC STP X31, X31, [X31]
	0x03736AE0 BL 0x24FD82C
	0x03736AE4 LDP X1, X2, [X31]
	0x03736AE8 LDR X3, [X20]
	0x03736AEC MOV X0, X19
	0x03736AF0 STP X31, X31, [X19]
	0x03736AF4 STR X31, [X19 + 0x10]
	0x03736AF8 BL 0x242CC30
	0x03736AFC B 0x3736B08
	0x03736B00 STP X31, X31, [X19]
	0x03736B04 STR X31, [X19 + 0x10]
	0x03736B08 LDP X20, X19, [X31 + 0x20]
	0x03736B0C LDP X30, X21, [X31 + 0x10]
	0x03736B10 ADD X31, X31, 0x30
	0x03736B14 RET
	0x03736B18 SUB X31, X31, 0x30
	0x03736B1C STP X30, X19, [X31 + 0x20]
	0x03736B20 LDR X8, [X1 + 0x10]
	0x03736B24 LDR V0, [X1]
	0x03736B28 MOV X19, X0
	0x03736B2C ADD X0, X0, 0xA0
	0x03736B30 ADD X1, X31, 0x0
	0x03736B34 STR X8, [X31 + 0x10]
	0x03736B38 STR V0, [X31]
	0x03736B3C BL 0x3736B5C
	0x03736B40 TBZ X0, 0x0, 0x3736B50
	0x03736B44 MOV X0, X19
	0x03736B48 MOV W1, W31
	0x03736B4C BL 0x37369FC
	0x03736B50 LDP X30, X19, [X31 + 0x20]
	0x03736B54 ADD X31, X31, 0x30
	0x03736B58 RET
	0x03736B5C STR X30, [X31 - 0x40]!
	0x03736B60 STP X24, X23, [X31 + 0x10]
	0x03736B64 STP X22, X21, [X31 + 0x20]
	0x03736B68 STP X20, X19, [X31 + 0x30]
	0x03736B6C ADRP X21, 0xCAA000
	0x03736B70 LDRB W8, [X21 + 0xD23]
	0x03736B74 MOV X20, X1
	0x03736B78 MOV X19, X0
	0x03736B7C TBNZ X8, 0x0, 0x3736BD0
	0x03736B80 ADRP X0, 0xA0F000
	0x03736B84 LDR X0, [X0 + 0x58]
	0x03736B88 BL 0x1C16CF4
	0x03736B8C ADRP X0, 0xA0F000
	0x03736B90 LDR X0, [X0 + 0x60]
	0x03736B94 BL 0x1C16CF4
	0x03736B98 ADRP X0, 0xA0E000
	0x03736B9C LDR X0, [X0 + 0xFB8]
	0x03736BA0 BL 0x1C16CF4
	0x03736BA4 ADRP X0, 0xA0E000
	0x03736BA8 LDR X0, [X0 + 0xFC0]
	0x03736BAC BL 0x1C16CF4
	0x03736BB0 ADRP X0, 0xA0F000
	0x03736BB4 LDR X0, [X0 + 0x68]
	0x03736BB8 BL 0x1C16CF4
	0x03736BBC ADRP X0, 0xA0F000
	0x03736BC0 LDR X0, [X0 + 0x70]
	0x03736BC4 BL 0x1C16CF4
	0x03736BC8 MOVZ W8, 0x1
	0x03736BCC STRB W8, [X21 + 0xD23]
	0x03736BD0 LDRB W8, [X20]
	0x03736BD4 CBZ W8, 0x3736C88
	0x03736BD8 ADRP X8, 0xA0E000
	0x03736BDC LDR X8, [X8 + 0xFC0]
	0x03736BE0 MOV X0, X20
	0x03736BE4 LDR X1, [X8]
	0x03736BE8 BL 0x242CC48
	0x03736BEC LDRB W8, [X19]
	0x03736BF0 MOV X20, X0
	0x03736BF4 MOV X21, X1
	0x03736BF8 CBZ W8, 0x3736C2C
	0x03736BFC LDR W8, [X19 + 0x4]
	0x03736C00 UBFM X3, X21, 0x20, 0x3F
	0x03736C04 CMP W8, W3
	0x03736C08 B.NE 0x3736C2C
	0x03736C0C ADRP X8, 0xA0F000
	0x03736C10 LDR X2, [X19 + 0x8]
	0x03736C14 LDR X8, [X8 + 0x68]
	0x03736C18 MOV X0, X20
	0x03736C1C MOV X1, X21
	0x03736C20 LDR X4, [X8]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X21, 0xCAB000
	011 Move W8, [X21+3308]
	012 Move W20, W1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xA0F000
	019 Move X0, [X0+4048]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+3308], W8
	023 Move X8, [X19+200]
	024 Compare X8, 0
	025 JumpIfNotEqual {31}
	026 Move X0, X19
	027 Call InputAction.CreateInternalActionMapForSingletonAction, X0
	028 Move X8, [X19+200]
	029 Compare X8, 0
	030 JumpIfEqual {116}
	031 Move X9, 0xA0F000
	032 Move X9, [X9+4048]
	033 Move X21, [X8+48]
	034 Move X1, [X9]
	035 Move X0, X21
	036 Call 0x217C240, X0
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Compare X21, 0
	039 JumpIfEqual {116}
	040 Move X22, X31
	041 Move W25, W0
	042 Add X23, X21, 32
	043 Move TEMP, 0
	044 Not TEMP
	045 Move W24, TEMP
	046 Move W8, [X21+24]
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move X0, X23
	049 Move X1, X19
	050 Move X2, X31
	051 Call InputBinding.TriggersAction, X0, X1
	052 Move TEMP, X0
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfNotEqual {58}
	056 Add W24, W24, 1
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Add X22, X22, 1
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Add X23, X23, 88
	061 Move [X31+12], W20
	062 Move X20, 0x9BE000
	063 Move X20, [X20+1880]
	064 Move X0, X20
	065 Call 0x1C17D08
	066 Add X1, X31, 12
	067 Call 0x1C17E04
	068 Move X21, X0
	069 Add W8, W24, 1
	070 Move X0, X20
	071 Move [X31+8], W8
	072 Call 0x1C17D08
	073 Add X1, X31, 8
	074 Call 0x1C17E04
	075 Move X20, X0
	076 Move X0, 0xA0F000
	077 Move X0, [X0+4056]
	078 Call 0x1C17D08
	079 Move X1, X21
	080 Move X2, X19
	081 Move X3, X20
	082 Move X4, X31
	083 Call String.Format, X0, X1, X2, X3
	084 Move X19, X0
	085 Move X0, 0x9C6000
	086 Move X0, [X0+1888]
	087 Call 0x1C17D08
	088 Call 0x1C17F10
	089 Move X20, X0
	090 Move X0, 0xA0F000
	091 Move X0, [X0+4064]
	092 Call 0x1C17D08
	093 Move X1, X0
	094 Move X0, X20
	095 Move X2, X19
	096 Move X3, X31
	097 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	098 Move X0, 0xA0F000
	099 Move X0, [X0+4072]
	100 Call 0x1C17D08
	101 Move X1, X0
	102 Move X0, X20
	103 Call 0x1C17DEC
	104 Move W0, W22
	105 Move X20, [X31+64]
	106 Move X19, [X31+72]
	107 Move X22, [X31+48]
	108 Move X21, [X31+56]
	109 Move X24, [X31+32]
	110 Move X23, [X31+40]
	111 Move X30, [X31+16]
	112 Move X25, [X31+24]
	113 Add X31, X31, 80
	114 Return X0
	115 Call 0x1C17F28
	116 Call 0x1C17F20
	117 Move TEMP, 0
	118 Not TEMP
	119 Move W24, TEMP

Method: System.Int32 BindingIndexOnMapToBindingIndexOnAction(System.Int32 indexOfBindingOnMap)

Disassembly:
	0x03736C24 BL 0x223C54C
	0x03736C28 TBNZ X0, 0x0, 0x3736CBC
	0x03736C2C MOV X22, X19
	0x03736C30 LDR W8, [X22 + 0x4]!
	0x03736C34 ADRP X24, 0xA0F000
	0x03736C38 LDR X24, [X24 + 0x58]
	0x03736C3C CMP W8, 0x1
	0x03736C40 B.LT 0x3736C5C
	0x03736C44 ADRP X8, 0xA0F000
	0x03736C48 LDR X0, [X19 + 0x8]
	0x03736C4C LDR X8, [X8 + 0x60]
	0x03736C50 MOV X1, X22
	0x03736C54 LDR X2, [X8]
	0x03736C58 BL 0x2175B08
	0x03736C5C MOVZ W23, 0x1
	0x03736C60 STRB W23, [X19]
	0x03736C64 STR W31, [X19 + 0x4]
	0x03736C68 LDR X5, [X24]
	0x03736C6C ADD X0, X19, 0x8
	0x03736C70 MOVZ W4, 0xA
	0x03736C74 MOV X1, X22
	0x03736C78 MOV X2, X20
	0x03736C7C MOV X3, X21
	0x03736C80 BL 0x2173B38
	0x03736C84 B 0x3736CC0
	0x03736C88 LDRB W8, [X19]
	0x03736C8C CBZ W8, 0x3736CBC
	0x03736C90 LDR W2, [X19 + 0x4]
	0x03736C94 CMP W2, 0x1
	0x03736C98 B.LT 0x3736CAC
	0x03736C9C LDR X0, [X19 + 0x8]
	0x03736CA0 MOV W1, W31
	0x03736CA4 MOV X3, X31
	0x03736CA8 BL 0x339FA34
	0x03736CAC STR W31, [X19 + 0x4]
	0x03736CB0 STRB W31, [X19]
	0x03736CB4 MOVZ W23, 0x1
	0x03736CB8 B 0x3736CC0
	0x03736CBC MOV W23, W31
	0x03736CC0 MOV W0, W23
	0x03736CC4 LDP X20, X19, [X31 + 0x30]
	0x03736CC8 LDP X22, X21, [X31 + 0x20]
	0x03736CCC LDP X24, X23, [X31 + 0x10]
	0x03736CD0 LDR X30, [X31], #0x40
	0x03736CD4 RET
	0x03736CD8 STR X30, [X31 - 0x20]!
	0x03736CDC STP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X8, [X0+200]
	010 Move X19, X0
	011 Move W20, W1
	012 Compare X8, 0
	013 JumpIfNotEqual {19}
	014 Move X0, X19
	015 Call InputAction.CreateInternalActionMapForSingletonAction, X0
	016 Move X8, [X19+200]
	017 Compare X8, 0
	018 JumpIfEqual {59}
	019 Subtract W22, W20, 1
	020 Move X23, [X8+48]
	021 Compare X23, 0
	022 JumpIfEqual {59}
	023 Move X21, [X19+16]
	024 Move W20, W31
	025 Move W24, 88
	026 Move W8, [X23+24]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 NotImplemented "Instruction UMADDL not yet implemented."
	029 Add X25, X25, 80
	030 Move X0, [X25]
	031 Move W2, 3
	032 Move X1, X21
	033 Move X3, X31
	034 Call String.Compare, X0, X1, X2
	035 Compare W0, 0
	036 JumpIfEqual {45}
	037 Move X0, [X25]
	038 Move X1, [X19+40]
	039 Move X2, X31
	040 Call String.op_Equality, X0, X1
	041 Move TEMP, X0
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfNotEqual {46}
	045 Add W20, W20, 1
	046 Subtract W22, W22, 1
	047 Move W20, W31
	048 Move W0, W20
	049 Move X20, [X31+48]
	050 Move X19, [X31+56]
	051 Move X22, [X31+32]
	052 Move X21, [X31+40]
	053 Move X24, [X31+16]
	054 Move X23, [X31+24]
	055 Move X30, [X31+64]
	056 Move X25, [X31+72]
	057 Return X0
	058 Call 0x1C17F28
	059 Call 0x1C17F20

