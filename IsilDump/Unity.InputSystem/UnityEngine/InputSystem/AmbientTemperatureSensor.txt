Type: UnityEngine.InputSystem.AmbientTemperatureSensor

Method: UnityEngine.InputSystem.Controls.AxisControl get_ambientTemperature()

Disassembly:
	0x037C0630 LDR V0, [X8]
	0x037C0634 STUR D0, [X31 + 0x6C]

ISIL:
	001 Move X0, [X0+368]
	002 Return X0

Method: System.Void set_ambientTemperature(UnityEngine.InputSystem.Controls.AxisControl value)

Disassembly:
	0x037C0638 BL 0x37FC758
	0x037C063C LDUR X8, [X31 + 0x64]

ISIL:
	001 Move [X0+368], X1
	002 Return 

Method: UnityEngine.InputSystem.AmbientTemperatureSensor get_current()

Disassembly:
	0x037C0640 ADD X0, X31, 0x60
	0x037C0644 MOV W1, W31
	0x037C0648 MOV X2, X31
	0x037C064C STR D0, [X31 + 0x88]
	0x037C0650 STR X8, [X31 + 0x90]
	0x037C0654 BL 0x37FC7B8
	0x037C0658 ADD X0, X31, 0x60
	0x037C065C MOV W1, W31
	0x037C0660 MOV X2, X31
	0x037C0664 BL 0x37FFF50
	0x037C0668 ADD X0, X31, 0x60
	0x037C066C MOV W1, W31
	0x037C0670 MOV X2, X31
	0x037C0674 BL 0x37FC7E4
	0x037C0678 CBZ X20, 0x37C0968
	0x037C067C LDRB W8, [X20 + 0x21]
	0x037C0680 MOV X0, X21
	0x037C0684 MOV X1, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xC22000
	005 Move X20, 0x988000
	006 Move W8, [X19+423]
	007 Move X20, [X20+3968]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x988000
	013 Move X0, [X0+3968]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+423], W8
	017 Move X8, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X8, [X8+184]
	021 Move X0, [X8]
	022 Move X30, [X31+32]
	023 Return X0

Method: System.Void set_current(UnityEngine.InputSystem.AmbientTemperatureSensor value)

Disassembly:
	0x037C0688 STRB W8, [X31 + 0x81]
	0x037C068C BL 0x37FFEF8
	0x037C0690 TBZ X0, 0x0, 0x37C06C4
	0x037C0694 ADD X0, X31, 0x60
	0x037C0698 MOVZ W1, 0x1
	0x037C069C MOV X2, X31
	0x037C06A0 BL 0x37FC7B8
	0x037C06A4 ADRP X8, 0x987000
	0x037C06A8 LDR X0, [X19 + 0x1A0]
	0x037C06AC LDR X3, [X31 + 0x18]
	0x037C06B0 LDR X8, [X8 + 0xFC8]
	0x037C06B4 ADD X1, X31, 0x60
	0x037C06B8 MOV W2, W31
	0x037C06BC LDR X4, [X8]
	0x037C06C0 BL 0x2209C7C
	0x037C06C4 LDR V0, [X27]
	0x037C06C8 LDR X2, [X26]
	0x037C06CC ADD X0, X31, 0x0
	0x037C06D0 MOV W1, W22

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xC22000
	006 Move X21, 0x988000
	007 Move W8, [X20+424]
	008 Move X21, [X21+3968]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x988000
	015 Move X0, [X0+3968]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+424], W8
	019 Move X8, [X21]
	020 Move X8, [X8+184]
	021 Move [X8], X19
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X30, [X31+32]
	025 Move X21, [X31+40]
	026 Return 

Method: System.Void MakeCurrent()

Disassembly:
	0x037C06D4 STR V0, [X31]
	0x037C06D8 BL 0x24FDB3C
	0x037C06DC LDR X3, [X31 + 0x18]
	0x037C06E0 B 0x37C093C
	0x037C06E4 MOV X0, X24
	0x037C06E8 MOV X1, X31
	0x037C06EC BL 0x37FC7D8
	0x037C06F0 MOV W23, W0
	0x037C06F4 AND W1, W0, 0x1
	0x037C06F8 ADD X0, X31, 0x60
	0x037C06FC MOV X2, X31
	0x037C0700 BL 0x37FC7B8
	0x037C0704 LDUR V0, [X31 + 0x6C]
	0x037C0708 ADRP X8, 0xFFFFFFFFFD329000
	0x037C070C LDR V1, [X8 + 0xF20]
	0x00000000 INVALID
	0x037C0714 FADDP S2, V2.2S
	0x037C0718 FCMP S2, S1
	0x037C071C B.PL 0x37C0730
	0x037C0720 LDUR V0, [X31 + 0x64]
	0x037C0724 LDUR V1, [X24 + 0x4]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X1, X31
	005 Move X19, X0
	006 Call InputDevice.MakeCurrent, X0
	007 Move X20, 0xC22000
	008 Move W8, [X20+563]
	009 Compare W8, 0
	010 JumpIfNotEqual {16}
	011 Move X0, 0x988000
	012 Move X0, [X0+3968]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+563], W8
	016 Move X8, 0x988000
	017 Move X8, [X8+3968]
	018 Move X8, [X8]
	019 Move X8, [X8+184]
	020 Move [X8], X19
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X30, [X31+32]
	024 Return 

Method: System.Void OnRemoved()

Disassembly:
	0x037C0728 FSUB V0.2S, V0.2S, V1.2S
	0x037C072C STUR D0, [X31 + 0x6C]
	0x037C0730 LDUR V1, [X24 + 0xC]
	0x037C0734 ADD X0, X31, 0x60
	0x037C0738 MOV X1, X31
	0x037C073C FADD V0.2S, V0.2S, V1.2S
	0x037C0740 STUR D0, [X31 + 0x6C]
	0x037C0744 LDR V0, [X24 + 0x28]
	0x037C0748 STR D0, [X31 + 0x88]
	0x037C074C LDR X8, [X24 + 0x30]
	0x037C0750 STR X8, [X31 + 0x90]
	0x037C0754 BL 0x37FFEF8
	0x037C0758 TBZ X0, 0x0, 0x37C0790
	0x037C075C ADD X0, X31, 0x18
	0x037C0760 MOV X1, X31
	0x037C0764 BL 0x37FC758
	0x037C0768 ADRP X8, 0x986000
	0x037C076C LDR X8, [X8 + 0xD58]
	0x037C0770 LDR V1, [X31 + 0x88]
	0x037C0774 LDR X8, [X8]
	0x037C0778 FSUB D0, D0, D1
	0x037C077C LDR X8, [X8 + 0xB8]
	0x037C0780 LDR V2, [X8 + 0x8]
	0x037C0784 FCVT S1, S2
	0x037C0788 FCMP D0, D1
	0x037C078C B.LS 0x37C087C
	0x037C0790 LDRB W8, [X24 + 0x21]
	0x037C0794 MOVZ W24, 0x1
	0x037C0798 ADD X0, X31, 0x60
	0x037C079C MOV X1, X31
	0x037C07A0 STRB W8, [X31 + 0x81]
	0x037C07A4 BL 0x37FFEF8
	0x037C07A8 TBZ X23, 0x0, 0x37C0804

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X1, X31
	005 Move X19, X0
	006 Call InputDevice.OnRemoved, X0
	007 Move X20, 0xC22000
	008 Move W8, [X20+564]
	009 Compare W8, 0
	010 JumpIfNotEqual {16}
	011 Move X0, 0x988000
	012 Move X0, [X0+3968]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+564], W8
	016 Move X20, 0x988000
	017 Move X20, [X20+3968]
	018 Move X8, [X20]
	019 Move X8, [X8+184]
	020 Move X9, [X8]
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move X19, 0xC22000
	023 Move W9, [X19+563]
	024 Compare W9, 0
	025 JumpIfNotEqual {32}
	026 Move X0, X20
	027 Call 0x1C17CF4
	028 Move X8, [X20]
	029 Move W9, 1
	030 Move [X19+563], W9
	031 Move X8, [X8+184]
	032 Move [X8], X31
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Return 

Method: System.Void FinishSetup()

Disassembly:
	0x037C07AC TBZ X0, 0x0, 0x37C08AC
	0x037C07B0 ADD X0, X31, 0x60
	0x037C07B4 MOV W1, W31
	0x037C07B8 MOV X2, X31
	0x037C07BC BL 0x37FC7B8
	0x037C07C0 AND X21, X22, 0x0
	0x037C07C4 CBZ X21, 0x37C07D8
	0x037C07C8 MOV X0, X20
	0x037C07CC MOV X1, X31
	0x037C07D0 BL 0x37FFF1C
	0x037C07D4 TBNZ X0, 0x0, 0x37C08C4
	0x037C07D8 SUB X21, X21, 0x1
	0x037C07DC SUBS X28, X28, 0x1
	0x037C07E0 ADD X20, X20, 0x38
	0x037C07E4 B.NE 0x37C07C4
	0x037C07E8 LDR X0, [X19 + 0x1A0]
	0x037C07EC LDR X3, [X31 + 0x18]
	0x037C07F0 TBNZ X24, 0x0, 0x37C08B4
	0x037C07F4 ADD X1, X31, 0x60
	0x037C07F8 MOV X2, X3
	0x037C07FC BL 0x37C0970
	0x037C0800 B 0x37C091C
	0x037C0804 TBZ X0, 0x0, 0x37C091C
	0x037C0808 MOV X0, X21
	0x037C080C MOV X1, X31
	0x037C0810 BL 0x37FFF44
	0x037C0814 TBZ X0, 0x0, 0x37C091C
	0x037C0818 AND X23, X22, 0x0
	0x037C081C CBZ X23, 0x37C0830
	0x037C0820 MOV X0, X20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xC22000
	007 Move X21, 0x988000
	008 Move X22, 0x985000
	009 Move W8, [X20+425]
	010 Move X21, [X21+3976]
	011 Move X22, [X22+3632]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x985000
	018 Move X0, [X0+3632]
	019 Call 0x1C17CF4
	020 Move X0, 0x988000
	021 Move X0, [X0+3976]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+425], W8
	025 Move X1, [X21]
	026 Move X2, [X22]
	027 Move X0, X19
	028 Call 0x21FD754, X0, X1
	029 Move [X19+368], X0
	030 Move X0, X19
	031 Move X20, [X31+32]
	032 Move X19, [X31+40]
	033 Move X22, [X31+16]
	034 Move X21, [X31+24]
	035 Move X1, X31
	036 Move X30, [X31+48]
	037 Call InputControl.FinishSetup, X0
	038 Return 

Method: System.Void .ctor()

Disassembly:
	0x037C0824 MOV X1, X31
	0x037C0828 BL 0x37FFF1C

ISIL:
	001 Move X1, X31
	002 Call InputDevice..ctor, X0
	003 Return 

