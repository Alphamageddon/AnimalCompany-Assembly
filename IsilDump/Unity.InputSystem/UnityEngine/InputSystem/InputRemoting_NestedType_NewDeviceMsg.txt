Type: UnityEngine.InputSystem.InputRemoting/NewDeviceMsg

Method: UnityEngine.InputSystem.InputRemoting/Message Create(UnityEngine.InputSystem.InputDevice device)

Disassembly:
	0x037BC68C BL 0x1C16DEC
	0x037BC690 STR X30, [X31 - 0x20]!
	0x037BC694 STP X20, X19, [X31 + 0x10]
	0x037BC698 ADRP X20, 0xC25000
	0x037BC69C LDRB W8, [X20 + 0x173]
	0x037BC6A0 MOV X19, X0
	0x037BC6A4 TBNZ X8, 0x0, 0x37BC6BC
	0x037BC6A8 ADRP X0, 0x98B000
	0x037BC6AC LDR X0, [X0 + 0xD50]
	0x037BC6B0 BL 0x1C16CF4
	0x037BC6B4 MOVZ W8, 0x1
	0x037BC6B8 STRB W8, [X20 + 0x173]
	0x037BC6BC LDR X8, [X19 + 0x10]
	0x037BC6C0 CBZ X8, 0x37BC6E4
	0x037BC6C4 ADRP X9, 0x98B000
	0x037BC6C8 LDR X9, [X9 + 0xD50]
	0x037BC6CC MOV X1, X19
	0x037BC6D0 LDP X20, X19, [X31 + 0x10]
	0x037BC6D4 ADD X0, X8, 0x20
	0x037BC6D8 LDR X2, [X9]
	0x037BC6DC LDR X30, [X31], #0x20
	0x037BC6E0 B 0x2176E30
	0x037BC6E4 BL 0x1C16F20
	0x037BC6E8 ADD X0, X0, 0x18
	0x037BC6EC MOV X3, X31
	0x037BC6F0 MOV X4, X31
	0x037BC6F4 B 0x3818440
	0x037BC6F8 SUB X31, X31, 0xF0
	0x037BC6FC STR X30, [X31 + 0x90]
	0x037BC700 STP X28, X27, [X31 + 0xA0]
	0x037BC704 STP X26, X25, [X31 + 0xB0]
	0x037BC708 STP X24, X23, [X31 + 0xC0]
	0x037BC70C STP X22, X21, [X31 + 0xD0]
	0x037BC710 STP X20, X19, [X31 + 0xE0]
	0x037BC714 ADRP X23, 0xC25000
	0x037BC718 LDRB W8, [X23 + 0x1CE]
	0x037BC71C MOV W20, W3
	0x037BC720 MOV X22, X2
	0x037BC724 MOV X21, X1
	0x037BC728 MOV X19, X0
	0x037BC72C TBNZ X8, 0x0, 0x37BC7A4
	0x037BC730 ADRP X0, 0x98B000
	0x037BC734 LDR X0, [X0 + 0xBE8]
	0x037BC738 BL 0x1C16CF4
	0x037BC73C ADRP X0, 0x98B000
	0x037BC740 LDR X0, [X0 + 0xD58]
	0x037BC744 BL 0x1C16CF4
	0x037BC748 ADRP X0, 0x98B000
	0x037BC74C LDR X0, [X0 + 0xD60]
	0x037BC750 BL 0x1C16CF4
	0x037BC754 ADRP X0, 0x98B000
	0x037BC758 LDR X0, [X0 + 0xD68]
	0x037BC75C BL 0x1C16CF4
	0x037BC760 ADRP X0, 0x98B000
	0x037BC764 LDR X0, [X0 + 0xD70]
	0x037BC768 BL 0x1C16CF4
	0x037BC76C ADRP X0, 0x98B000
	0x037BC770 LDR X0, [X0 + 0xD78]
	0x037BC774 BL 0x1C16CF4
	0x037BC778 ADRP X0, 0x98B000
	0x037BC77C LDR X0, [X0 + 0xD80]
	0x037BC780 BL 0x1C16CF4
	0x037BC784 ADRP X0, 0x95F000
	0x037BC788 LDR X0, [X0 + 0xDC0]
	0x037BC78C BL 0x1C16CF4
	0x037BC790 ADRP X0, 0x95F000
	0x037BC794 LDR X0, [X0 + 0xEC0]
	0x037BC798 BL 0x1C16CF4
	0x037BC79C MOVZ W8, 0x1
	0x037BC7A0 STRB W8, [X23 + 0x1CE]
	0x037BC7A4 MOVI V0.2D, 0x0
	0x037BC7A8 MOV X0, X21
	0x037BC7AC MOV X1, X31
	0x037BC7B0 STP X31, X31, [X31 + 0x80]
	0x037BC7B4 STR X31, [X31 + 0x98]
	0x037BC7B8 STP X31, X31, [X31 + 0x50]
	0x037BC7BC STP V0, V0, [X31 + 0x60]
	0x037BC7C0 STR X31, [X31 + 0x48]
	0x037BC7C4 BL 0x32277A8
	0x037BC7C8 TBNZ X0, 0x0, 0x37BC9EC
	0x037BC7CC ADRP X8, 0x95F000
	0x037BC7D0 LDR X8, [X8 + 0xDC0]
	0x037BC7D4 LDR X0, [X8]
	0x037BC7D8 LDR W8, [X0 + 0xE0]
	0x037BC7DC CBNZ W8, 0x37BC7E4
	0x037BC7E0 BL 0x1C16DFC
	0x037BC7E4 ADD X1, X31, 0x80
	0x037BC7E8 ADD X2, X31, 0x60
	0x037BC7EC ADD X3, X31, 0x98
	0x037BC7F0 MOV X0, X21
	0x037BC7F4 MOV X4, X31
	0x037BC7F8 BL 0x3815AAC
	0x037BC7FC ADD X0, X31, 0x50
	0x037BC800 MOV X1, X22
	0x037BC804 MOV X2, X31
	0x037BC808 BL 0x3757420
	0x037BC80C ADD X0, X31, 0x50
	0x037BC810 MOV X1, X31
	0x037BC814 BL 0x375F7A0
	0x037BC818 TBZ X0, 0x0, 0x37BC834
	0x037BC81C LDR V0, [X31 + 0x8]
	0x037BC820 ADD X0, X31, 0x50
	0x037BC824 MOV X1, X31
	0x037BC828 STR V0, [X31 + 0x5]
	0x037BC82C BL 0x375F7A0
	0x037BC830 TBNZ X0, 0x0, 0x37BCA20
	0x037BC834 TBZ X20, 0x0, 0x37BC840
	0x037BC838 LDR W8, [X31 + 0x60]
	0x037BC83C CBZ W8, 0x37BCA7C
	0x037BC840 LDP X1, X2, [X31 + 0x50]
	0x037BC844 ADD X0, X19, 0x18
	0x037BC848 MOV X3, X31
	0x037BC84C BL 0x3813EB4
	0x037BC850 MOV W22, W0
	0x037BC854 TBZ X0, 0x0, 0x37BC87C
	0x037BC858 TBZ X20, 0x0, 0x37BC87C
	0x037BC85C LDR X0, [X19 + 0x40]
	0x037BC860 CBZ X0, 0x37BC9E8
	0x037BC864 ADRP X8, 0x98B000
	0x037BC868 LDP X1, X2, [X31 + 0x50]
	0x037BC86C LDR X8, [X8 + 0xD78]
	0x037BC870 LDR X3, [X8]
	0x037BC874 BL 0x2DB442C
	0x037BC878 TBZ X0, 0x0, 0x37BCAF0

ISIL:
	001 Subtract X31, X31, 240
	002 Move [X31+176], X30
	003 Move [X31+184], X25
	004 Move [X31+192], X24
	005 Move [X31+200], X23
	006 Move [X31+208], X22
	007 Move [X31+216], X21
	008 Move [X31+224], X20
	009 Move [X31+232], X19
	010 Move X20, 0xC26000
	011 Move W8, [X20+375]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {40}
	017 Move X0, 0x98B000
	018 Move X0, [X0+1632]
	019 Call 0x1C17CF4
	020 Move X0, 0x938000
	021 Move X0, [X0+3768]
	022 Call 0x1C17CF4
	023 Move X0, 0x98B000
	024 Move X0, [X0+1640]
	025 Call 0x1C17CF4
	026 Move X0, 0x98C000
	027 Move X0, [X0+3256]
	028 Call 0x1C17CF4
	029 Move X0, 0x98C000
	030 Move X0, [X0+3264]
	031 Call 0x1C17CF4
	032 Move X0, 0x98C000
	033 Move X0, [X0+3272]
	034 Call 0x1C17CF4
	035 Move X0, 0x98C000
	036 Move X0, [X0+3280]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X20+375], W8
	040 NotImplemented "Instruction MOVI not yet implemented."
	041 Move [X31], V0
	042 Move [X31+8], V0
	043 Compare X19, 0
	044 JumpIfEqual {143}
	045 Move X20, 0x98C000
	046 Move X22, 0x98C000
	047 Move X20, [X20+3264]
	048 Move X22, [X22+3280]
	049 Move X0, X19
	050 Move X1, X31
	051 Call InputControl.get_name, X0
	052 Move [X31], X0
	053 Move X0, X19
	054 Move X1, X31
	055 Call InputControl.get_layout, X0
	056 Move [X31+8], X0
	057 Move W8, [X19+224]
	058 Move X0, X19
	059 Move X1, X31
	060 Move [X31+16], W8
	061 Move X8, [X19+288]
	062 Move V1, [X19+256]
	063 Move V0, [X19+272]
	064 Move V2, [X19+15]
	065 Move [X31+80], X8
	066 Move [X31+48], V1
	067 Move [X31+56], V0
	068 Move [X31+2], V2
	069 Call InputControl.get_usages, X0
	070 Move X8, [X20]
	071 Move [X31+88], X0
	072 Move [X31+96], X1
	073 Add X1, X31, 88
	074 Move X0, X8
	075 Call 0x1C17E04
	076 Move X8, [X22]
	077 Move X19, X0
	078 Move W9, [X8+224]
	079 Compare W9, 0
	080 JumpIfNotEqual {84}
	081 Move X0, X8
	082 Call 0x1C17DFC
	083 Move X8, [X22]
	084 Move X9, [X8+184]
	085 Move X25, 0x98B000
	086 Move X24, 0x938000
	087 Move X23, 0x98C000
	088 Move X20, [X9+8]
	089 Move X25, [X25+1632]
	090 Move X24, [X24+3768]
	091 Move X23, [X23+3256]
	092 Compare X20, 0
	093 JumpIfNotEqual {116}
	094 Move W9, [X8+224]
	095 Compare W9, 0
	096 JumpIfNotEqual {100}
	097 Move X0, X8
	098 Call 0x1C17DFC
	099 Move X8, [X22]
	100 Move X9, 0x98B000
	101 Move X8, [X8+184]
	102 Move X9, [X9+1640]
	103 Move X21, [X8]
	104 Move X0, [X9]
	105 Call 0x1C17F10
	106 Move X8, 0x98C000
	107 Move X8, [X8+3272]
	108 Move X1, X21
	109 Move X3, X31
	110 Move X20, X0
	111 Move X2, [X8]
	112 Call Func`2<InternedString, Object>..ctor, X0, X1, X2
	113 Move X8, [X22]
	114 Move X8, [X8+184]
	115 Move [X8+8], X20
	116 Move X2, [X25]
	117 Move X0, X19
	118 Move X1, X20
	119 Call Enumerable.Select, X0, X1
	120 Move X1, [X24]
	121 Call Enumerable.ToArray, X0
	122 Move X19, [X23]
	123 Move [X31+24], X0
	124 Add X0, X31, 88
	125 Add X1, X31, 0
	126 Move W2, 88
	127 Call 0x3EB2AC0
	128 Add X0, X31, 88
	129 Move X1, X19
	130 Call InputRemoting.SerializeData, X0
	131 Move X20, [X31+224]
	132 Move X19, [X31+232]
	133 Move X22, [X31+208]
	134 Move X21, [X31+216]
	135 Move X24, [X31+192]
	136 Move X23, [X31+200]
	137 Move X30, [X31+176]
	138 Move X25, [X31+184]
	139 Move X1, X0
	140 Move X0, 3
	141 Add X31, X31, 240
	142 Return X0
	143 Call 0x1C17F20

Method: System.Void Process(UnityEngine.InputSystem.InputRemoting receiver, UnityEngine.InputSystem.InputRemoting/Message msg)

Disassembly:
	0x037BB4A8 STP X20, X19, [X31 + 0x30]
	0x037BB4AC ADRP X22, 0xC26000
	0x037BB4B0 LDRB W8, [X22 + 0x16D]
	0x037BB4B4 MOV X19, X2
	0x037BB4B8 MOV X20, X1
	0x037BB4BC MOV X21, X0
	0x037BB4C0 TBNZ X8, 0x0, 0x37BB4D8
	0x037BB4C4 ADRP X0, 0x98C000
	0x037BB4C8 LDR X0, [X0 + 0xCB0]
	0x037BB4CC BL 0x1C16CF4
	0x037BB4D0 MOVZ W8, 0x1
	0x037BB4D4 STRB W8, [X22 + 0x16D]
	0x037BB4D8 LDR X22, [X21 + 0x20]
	0x037BB4DC CBZ X22, 0x37BB598
	0x037BB4E0 LDR W8, [X22 + 0x18]
	0x037BB4E4 CMP W8, 0x1
	0x037BB4E8 B.LT 0x37BB584
	0x037BB4EC ADRP X24, 0x98C000
	0x037BB4F0 LDR X24, [X24 + 0xCB0]
	0x037BB4F4 MOV W23, W31
	0x037BB4F8 CMP W23, W8
	0x037BB4FC B.CS 0x37BB59C
	0x037BB500 ADD X8, X22, W23, 0x3, SXTW
	0x037BB504 LDR X8, [X8 + 0x20]
	0x037BB508 CBZ X8, 0x37BB598
	0x037BB50C LDR X21, [X8 + 0x18]
	0x037BB510 CBZ X21, 0x37BB598
	0x037BB514 LDR X8, [X21]
	0x037BB518 LDR X1, [X24]
	0x037BB51C LDRH W9, [X8 + 0x12E]
	0x037BB520 CBZ X9, 0x37BB544
	0x037BB524 LDR X10, [X8 + 0xB0]
	0x037BB528 ADD X10, X10, 0x8
	0x037BB52C LDUR X11, [X10 - 0x8]
	0x037BB530 CMP X11, X1
	0x037BB534 B.EQ 0x37BB554
	0x037BB538 SUBS X9, X9, 0x1
	0x037BB53C ADD X10, X10, 0x10
	0x037BB540 B.NE 0x37BB52C
	0x037BB544 MOV X0, X21
	0x037BB548 MOV W2, W31
	0x037BB54C BL 0x1C5C788
	0x037BB550 B 0x37BB560
	0x037BB554 LDRSW X9, [X10]
	0x037BB558 ADD X8, X8, X9, 0x4, LSL
	0x037BB55C ADD X0, X8, 0x138
	0x037BB560 LDP X8, X3, [X0]
	0x037BB564 MOV X0, X21
	0x037BB568 MOV X1, X20
	0x037BB56C MOV X2, X19
	0x037BB570 BLR X8
	0x037BB574 LDR W8, [X22 + 0x18]
	0x037BB578 ADD W23, W23, 0x1
	0x037BB57C CMP W23, W8
	0x037BB580 B.LT 0x37BB4F8
	0x037BB584 LDP X20, X19, [X31 + 0x30]
	0x037BB588 LDP X22, X21, [X31 + 0x20]
	0x037BB58C LDP X24, X23, [X31 + 0x10]
	0x037BB590 LDR X30, [X31], #0x40
	0x037BB594 RET
	0x037BB598 BL 0x1C16F20
	0x037BB59C BL 0x1C16F28
	0x037BB5A0 SUB X31, X31, 0x30
	0x037BB5A4 STP X30, X21, [X31 + 0x10]
	0x037BB5A8 STP X20, X19, [X31 + 0x20]
	0x037BB5AC ADRP X21, 0xC26000
	0x037BB5B0 ADRP X20, 0x98A000
	0x037BB5B4 LDRB W8, [X21 + 0x1B7]
	0x037BB5B8 LDR X20, [X20 + 0x50]
	0x037BB5BC MOV X19, X0
	0x037BB5C0 TBNZ X8, 0x0, 0x37BB5D8
	0x037BB5C4 ADRP X0, 0x98A000
	0x037BB5C8 LDR X0, [X0 + 0x50]
	0x037BB5CC BL 0x1C16CF4
	0x037BB5D0 MOVZ W8, 0x1
	0x037BB5D4 STRB W8, [X21 + 0x1B7]
	0x037BB5D8 LDR X1, [X19 + 0x78]
	0x037BB5DC LDR W3, [X19 + 0x70]
	0x037BB5E0 LDR X4, [X20]
	0x037BB5E4 ADD X0, X31, 0x0
	0x037BB5E8 MOV W2, W31
	0x037BB5EC STP X31, X31, [X31]
	0x037BB5F0 BL 0x24FD82C
	0x037BB5F4 LDP X0, X1, [X31]
	0x037BB5F8 LDP X20, X19, [X31 + 0x20]
	0x037BB5FC LDP X30, X21, [X31 + 0x10]
	0x037BB600 ADD X31, X31, 0x30
	0x037BB604 RET
	0x037BB608 STR X30, [X31 - 0x20]!
	0x037BB60C STP X20, X19, [X31 + 0x10]
	0x037BB610 LDR X8, [X0 + 0x20]
	0x037BB614 CBZ X8, 0x37BB634
	0x037BB618 MOV X20, X1
	0x037BB61C CBZ X1, 0x37BB688
	0x037BB620 MOV X19, X0
	0x037BB624 MOV X0, X20
	0x037BB628 MOV X1, X31
	0x037BB62C BL 0x377AA10
	0x037BB630 TBZ X0, 0x0, 0x37BB640
	0x037BB634 LDP X20, X19, [X31 + 0x10]
	0x037BB638 LDR X30, [X31], #0x20
	0x037BB63C RET
	0x037BB640 MOV X0, X20
	0x037BB644 BL 0x37BB68C
	0x037BB648 MOV X2, X0
	0x037BB64C MOV X3, X1
	0x037BB650 MOV X0, X19
	0x037BB654 MOV X1, X2
	0x037BB658 MOV X2, X3
	0x037BB65C BL 0x37BB49C
	0x037BB660 MOV X0, X20
	0x037BB664 BL 0x37BB87C
	0x037BB668 MOV X2, X0
	0x037BB66C MOV X0, X19
	0x037BB670 LDP X20, X19, [X31 + 0x10]
	0x037BB674 MOV X3, X1
	0x037BB678 MOV X1, X2
	0x037BB67C MOV X2, X3
	0x037BB680 LDR X30, [X31], #0x20
	0x037BB684 B 0x37BB49C
	0x037BB688 BL 0x1C16F20
	0x037BB68C SUB X31, X31, 0xF0
	0x037BB690 STP X30, X25, [X31 + 0xB0]
	0x037BB694 STP X24, X23, [X31 + 0xC0]
	0x037BB698 STP X22, X21, [X31 + 0xD0]
	0x037BB69C STP X20, X19, [X31 + 0xE0]
	0x037BB6A0 ADRP X20, 0xC26000
	0x037BB6A4 LDRB W8, [X20 + 0x177]
	0x037BB6A8 MOV X19, X0
	0x037BB6AC TBNZ X8, 0x0, 0x37BB70C
	0x037BB6B0 ADRP X0, 0x98B000
	0x037BB6B4 LDR X0, [X0 + 0x660]
	0x037BB6B8 BL 0x1C16CF4
	0x037BB6BC ADRP X0, 0x938000
	0x037BB6C0 LDR X0, [X0 + 0xEB8]
	0x037BB6C4 BL 0x1C16CF4
	0x037BB6C8 ADRP X0, 0x98B000
	0x037BB6CC LDR X0, [X0 + 0x668]
	0x037BB6D0 BL 0x1C16CF4
	0x037BB6D4 ADRP X0, 0x98C000
	0x037BB6D8 LDR X0, [X0 + 0xCB8]
	0x037BB6DC BL 0x1C16CF4
	0x037BB6E0 ADRP X0, 0x98C000
	0x037BB6E4 LDR X0, [X0 + 0xCC0]
	0x037BB6E8 BL 0x1C16CF4
	0x037BB6EC ADRP X0, 0x98C000
	0x037BB6F0 LDR X0, [X0 + 0xCC8]
	0x037BB6F4 BL 0x1C16CF4
	0x037BB6F8 ADRP X0, 0x98C000
	0x037BB6FC LDR X0, [X0 + 0xCD0]
	0x037BB700 BL 0x1C16CF4
	0x037BB704 MOVZ W8, 0x1
	0x037BB708 STRB W8, [X20 + 0x177]
	0x037BB70C MOVI V0.2D, 0x0
	0x037BB710 STP V0, V0, [X31]
	0x037BB714 CBZ X19, 0x37BB878
	0x037BB718 ADRP X20, 0x98C000
	0x037BB71C ADRP X22, 0x98C000
	0x037BB720 LDR X20, [X20 + 0xCC0]
	0x037BB724 LDR X22, [X22 + 0xCD0]
	0x037BB728 MOV X0, X19
	0x037BB72C MOV X1, X31
	0x037BB730 BL 0x3771E78
	0x037BB734 STR X0, [X31]
	0x037BB738 MOV X0, X19
	0x037BB73C MOV X1, X31
	0x037BB740 BL 0x3772094
	0x037BB744 STR X0, [X31 + 0x8]
	0x037BB748 LDR W8, [X19 + 0xE0]
	0x037BB74C MOV X0, X19
	0x037BB750 MOV X1, X31
	0x037BB754 STR W8, [X31 + 0x10]
	0x037BB758 LDR X8, [X19 + 0x120]
	0x037BB75C LDP V1, V0, [X19 + 0x100]
	0x037BB760 LDR V2, [X19 + 0xF]
	0x037BB764 STR X8, [X31 + 0x50]
	0x037BB768 STP V1, V0, [X31 + 0x30]
	0x037BB76C STR V2, [X31 + 0x2]
	0x037BB770 BL 0x3772134
	0x037BB774 LDR X8, [X20]
	0x037BB778 STP X0, X1, [X31 + 0x58]
	0x037BB77C ADD X1, X31, 0x58
	0x037BB780 MOV X0, X8
	0x037BB784 BL 0x1C16E04
	0x037BB788 LDR X8, [X22]
	0x037BB78C MOV X19, X0
	0x037BB790 LDR W9, [X8 + 0xE0]
	0x037BB794 CBNZ W9, 0x37BB7A4
	0x037BB798 MOV X0, X8
	0x037BB79C BL 0x1C16DFC
	0x037BB7A0 LDR X8, [X22]
	0x037BB7A4 LDR X9, [X8 + 0xB8]
	0x037BB7A8 ADRP X25, 0x98B000
	0x037BB7AC ADRP X24, 0x938000
	0x037BB7B0 ADRP X23, 0x98C000
	0x037BB7B4 LDR X20, [X9 + 0x8]
	0x037BB7B8 LDR X25, [X25 + 0x660]
	0x037BB7BC LDR X24, [X24 + 0xEB8]
	0x037BB7C0 LDR X23, [X23 + 0xCB8]
	0x037BB7C4 CBNZ X20, 0x37BB81C
	0x037BB7C8 LDR W9, [X8 + 0xE0]
	0x037BB7CC CBNZ W9, 0x37BB7DC
	0x037BB7D0 MOV X0, X8
	0x037BB7D4 BL 0x1C16DFC
	0x037BB7D8 LDR X8, [X22]
	0x037BB7DC ADRP X9, 0x98B000
	0x037BB7E0 LDR X8, [X8 + 0xB8]
	0x037BB7E4 LDR X9, [X9 + 0x668]
	0x037BB7E8 LDR X21, [X8]
	0x037BB7EC LDR X0, [X9]
	0x037BB7F0 BL 0x1C16F10
	0x037BB7F4 ADRP X8, 0x98C000
	0x037BB7F8 LDR X8, [X8 + 0xCC8]
	0x037BB7FC MOV X1, X21
	0x037BB800 MOV X3, X31
	0x037BB804 MOV X20, X0
	0x037BB808 LDR X2, [X8]
	0x037BB80C BL 0x2D2DC94
	0x037BB810 LDR X8, [X22]
	0x037BB814 LDR X8, [X8 + 0xB8]
	0x037BB818 STR X20, [X8 + 0x8]
	0x037BB81C LDR X2, [X25]
	0x037BB820 MOV X0, X19
	0x037BB824 MOV X1, X20
	0x037BB828 BL 0x21CDD78
	0x037BB82C LDR X1, [X24]
	0x037BB830 BL 0x21D577C
	0x037BB834 LDR X19, [X23]
	0x037BB838 STR X0, [X31 + 0x18]
	0x037BB83C ADD X0, X31, 0x58
	0x037BB840 ADD X1, X31, 0x0
	0x037BB844 MOVZ W2, 0x58
	0x037BB848 BL 0x3EB1AC0
	0x037BB84C ADD X0, X31, 0x58
	0x037BB850 MOV X1, X19
	0x037BB854 BL 0x2208C78
	0x037BB858 LDP X20, X19, [X31 + 0xE0]
	0x037BB85C LDP X22, X21, [X31 + 0xD0]
	0x037BB860 LDP X24, X23, [X31 + 0xC0]
	0x037BB864 LDP X30, X25, [X31 + 0xB0]
	0x037BB868 MOV X1, X0
	0x037BB86C MOVZ X0, 0x3
	0x037BB870 ADD X31, X31, 0xF0
	0x037BB874 RET
	0x037BB878 BL 0x1C16F20
	0x037BB87C SUB X31, X31, 0x40
	0x037BB880 STP X30, X21, [X31 + 0x20]
	0x037BB884 STP X20, X19, [X31 + 0x30]
	0x037BB888 ADRP X20, 0xC26000
	0x037BB88C LDRB W8, [X20 + 0x17A]
	0x037BB890 MOV X19, X0
	0x037BB894 TBNZ X8, 0x0, 0x37BB8AC
	0x037BB898 ADRP X0, 0x960000
	0x037BB89C LDR X0, [X0 + 0xD68]
	0x037BB8A0 BL 0x1C16CF4
	0x037BB8A4 MOVZ W8, 0x1
	0x037BB8A8 STRB W8, [X20 + 0x17A]
	0x037BB8AC ADRP X21, 0x960000
	0x037BB8B0 LDR X21, [X21 + 0xD68]
	0x037BB8B4 ADD X1, X31, 0x18
	0x037BB8B8 MOVZ W2, 0x2
	0x037BB8BC MOV X0, X19
	0x037BB8C0 MOV X3, X31
	0x037BB8C4 STP X31, X31, [X31 + 0x10]
	0x037BB8C8 STR X31, [X31 + 0x8]
	0x037BB8CC BL 0x38072B0
	0x037BB8D0 LDR X8, [X31 + 0x18]
	0x037BB8D4 STP X0, X1, [X31 + 0x8]
	0x037BB8D8 MOVZ W1, 0x1
	0x037BB8DC MOV X0, X8
	0x037BB8E0 BL 0x37BB9E0
	0x037BB8E4 MOV X20, X1
	0x037BB8E8 LDR X1, [X21]
	0x037BB8EC MOV X19, X0
	0x037BB8F0 ADD X0, X31, 0x8
	0x037BB8F4 BL 0x23C9DBC
	0x037BB8F8 MOV X0, X19
	0x037BB8FC MOV X1, X20
	0x037BB900 LDP X20, X19, [X31 + 0x30]
	0x037BB904 LDP X30, X21, [X31 + 0x20]
	0x037BB908 ADD X31, X31, 0x40
	0x037BB90C RET
	0x037BB910 CMP W1, 0x1
	0x037BB914 MOV X20, X0
	0x037BB918 B.NE 0x37BB944
	0x037BB91C MOV X0, X20
	0x037BB920 BL 0x3EB1AD0
	0x037BB924 LDR X19, [X0]
	0x037BB928 BL 0x3EB1AE0
	0x037BB92C LDR X1, [X21]
	0x037BB930 ADD X0, X31, 0x8
	0x037BB934 BL 0x23C9DBC
	0x037BB938 CBNZ X19, 0x37BB94C
	0x037BB93C MOV X20, X31
	0x037BB940 B 0x37BB8F8
	0x037BB944 MOV X19, X31
	0x037BB948 B 0x37BB958
	0x037BB94C MOV X0, X19
	0x037BB950 BL 0x1C16F18
	0x037BB954 MOV X20, X0
	0x037BB958 LDR X1, [X21]
	0x037BB95C ADD X0, X31, 0x8
	0x037BB960 BL 0x23C9DBC
	0x037BB964 CBNZ X19, 0x37BB970
	0x037BB968 MOV X0, X20
	0x037BB96C BL 0x1D2C690
	0x037BB970 MOV X0, X19
	0x037BB974 BL 0x1C16F18
	0x037BB978 BL 0x1990590
	0x037BB97C STR X30, [X31 - 0x20]!
	0x037BB980 STP X20, X19, [X31 + 0x10]
	0x037BB984 LDR X8, [X0 + 0x20]
	0x037BB988 CBZ X8, 0x37BB9A8
	0x037BB98C MOV X19, X0
	0x037BB990 MOV X20, X1
	0x037BB994 CBZ X2, 0x37BB9B4
	0x037BB998 MOV X0, X2
	0x037BB99C MOV X1, X31
	0x037BB9A0 BL 0x377AA10
	0x037BB9A4 TBZ X0, 0x0, 0x37BB9B4
	0x037BB9A8 LDP X20, X19, [X31 + 0x10]
	0x037BB9AC LDR X30, [X31], #0x20
	0x037BB9B0 RET

ISIL:
	001 Subtract X31, X31, 352
	002 Move [X31+256], X29
	003 Move [X31+264], X30
	004 Move [X31+272], X28
	005 Move [X31+280], X27
	006 Move [X31+288], X26
	007 Move [X31+296], X25
	008 Move [X31+304], X24
	009 Move [X31+312], X23
	010 Move [X31+320], X22
	011 Move [X31+328], X21
	012 Move [X31+336], X20
	013 Move [X31+344], X19
	014 Move X22, 0xC27000
	015 Move W8, [X22+376]
	016 Move X19, X2
	017 Move X21, X1
	018 Move X20, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {46}
	023 Move X0, 0x98D000
	024 Move X0, [X0+3056]
	025 Call 0x1C17CF4
	026 Move X0, 0x939000
	027 Move X0, [X0+2600]
	028 Call 0x1C17CF4
	029 Move X0, 0x964000
	030 Move X0, [X0+1264]
	031 Call 0x1C17CF4
	032 Move X0, 0x98D000
	033 Move X0, [X0+3064]
	034 Call 0x1C17CF4
	035 Move X0, 0x939000
	036 Move X0, [X0+1880]
	037 Call 0x1C17CF4
	038 Move X0, 0x939000
	039 Move X0, [X0+2512]
	040 Call 0x1C17CF4
	041 Move X0, 0x98D000
	042 Move X0, [X0+3072]
	043 Call 0x1C17CF4
	044 Move W8, 1
	045 Move [X22+376], W8
	046 Move [X31+112], X31
	047 Move [X31+120], X31
	048 Compare X20, 0
	049 JumpIfEqual {295}
	050 Move X22, 0x98D000
	051 Move X22, [X22+3064]
	052 Move X0, X20
	053 Move W1, W21
	054 Add X25, X31, 128
	055 Call InputRemoting.FindOrCreateSenderRecord, X0, X1
	056 Move X1, [X22]
	057 Move W22, W0
	058 Add X8, X31, 16
	059 Move X0, X19
	060 Call InputRemoting.DeserializeData, X0
	061 Move V0, [X31+48]
	062 Move V1, [X31+64]
	063 Move V2, [X31+5]
	064 Move X8, [X31+96]
	065 Move X23, [X31+16]
	066 Move X19, [X31+24]
	067 Move [X25+64], V0
	068 Move [X25+72], V1
	069 Move [X25+6], V2
	070 Move [X31+240], X8
	071 Move W26, [X31+32]
	072 Move X8, [X20+40]
	073 Move X28, [X31+40]
	074 Compare X8, 0
	075 JumpIfEqual {295}
	076 Move W9, [X8+24]
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Move X27, W22
	079 Move W9, 24
	080 NotImplemented "Instruction MADD not yet implemented."
	081 Move X10, [X8+48]
	082 Compare X10, 0
	083 JumpIfEqual {94}
	084 Move W8, [X10+24]
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move W9, W31
	087 Add X10, X10, 32
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Move W11, [X10]
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Add W9, W9, 1
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Add X10, X10, 64
	094 Add X0, X31, 112
	095 Move X1, X19
	096 Move X2, X31
	097 Call InternedString..ctor, X0, X1
	098 Move X24, [X20+24]
	099 Move X0, [X31+112]
	100 Move X1, [X31+120]
	101 Move X2, X31
	102 Call InternedString.op_Implicit, X0
	103 Move X1, X0
	104 Compare X24, 0
	105 JumpIfEqual {296}
	106 Move X0, X24
	107 Move X2, X23
	108 Move X3, X31
	109 Move X4, X31
	110 Call InputManager.AddDevice, X0, X1, X2, X3
	111 Move X23, X0
	112 Compare X0, 0
	113 JumpIfEqual {297}
	114 Move [X23+228], W21
	115 Move W8, [X23+220]
	116 Move V2, [X25+80]
	117 Move V0, [X25+96]
	118 Move X9, [X31+240]
	119 Move V1, [X25+4]
	120 Or W8, W8, 8
	121 Move [X23+256], V2
	122 Move [X23+264], V0
	123 Move [X23+288], X9
	124 Move [X23+15], V1
	125 Move [X23+220], W8
	126 Compare X28, 0
	127 JumpIfEqual {295}
	128 Move X8, [X28+24]
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Move X21, X31
	131 And X8, X8, 0
	132 Add X24, X28, 32
	133 NotImplemented "Instruction CMP not yet implemented."
	134 Move X1, [X24]
	135 Move X19, [X20+24]
	136 Add X0, X31, 16
	137 Move X2, X31
	138 Move [X31+16], X31
	139 Move [X31+24], X31
	140 Call InternedString..ctor, X0, X1
	141 Compare X19, 0
	142 JumpIfEqual {295}
	143 Move X2, [X31+16]
	144 Move X3, [X31+24]
	145 Move X0, X19
	146 Move X1, X23
	147 Call InputManager.AddDeviceUsage, X0, X1, X2
	148 Move W8, [X28+24]
	149 Add X21, X21, 1
	150 NotImplemented "Instruction CMP not yet implemented."
	151 Move V0, [X25+64]
	152 Move V1, [X25+80]
	153 Move V2, [X25+6]
	154 Move X9, [X31+240]
	155 Move W8, [X23+224]
	156 Move [X31+8], V0
	157 Move [X25+16], V1
	158 Move [X25+24], V2
	159 Move [X31+176], X9
	160 Move X9, [X20+40]
	161 Compare X9, 0
	162 JumpIfEqual {295}
	163 Move W10, [X9+24]
	164 NotImplemented "Instruction CMP not yet implemented."
	165 Move X10, 0x98D000
	166 Move X10, [X10+3056]
	167 Move [X31+16], W26
	168 Move [X31+20], W8
	169 Move V0, [X31+8]
	170 Move V1, [X25+16]
	171 Move V2, [X25+32]
	172 Move X8, [X31+176]
	173 Move X2, [X10]
	174 Move W11, 24
	175 NotImplemented "Instruction MADD not yet implemented."
	176 Add X0, X9, 48
	177 Add X1, X31, 16
	178 Move [X31+24], V0
	179 Move [X31+40], V1
	180 Move [X31+56], V2
	181 Move [X31+72], X8
	182 Call ArrayHelpers.Append, X0, X1
	183 Move X20, [X31+336]
	184 Move X19, [X31+344]
	185 Move X22, [X31+320]
	186 Move X21, [X31+328]
	187 Move X24, [X31+304]
	188 Move X23, [X31+312]
	189 Move X26, [X31+288]
	190 Move X25, [X31+296]
	191 Move X28, [X31+272]
	192 Move X27, [X31+280]
	193 Move X29, [X31+256]
	194 Move X30, [X31+264]
	195 Add X31, X31, 352
	196 Return 
	197 Move X8, 0x939000
	198 Move X8, [X8+2512]
	199 Move W1, 4
	200 Move X0, [X8]
	201 Call 0x1C17D6C
	202 Move X23, 0x939000
	203 Move X23, [X23+1880]
	204 Move X20, X0
	205 Add X1, X31, 12
	206 Move [X31+12], W26
	207 Move X0, [X23]
	208 Call 0x1C17E04
	209 Compare X20, 0
	210 JumpIfEqual {295}
	211 Move X22, X0
	212 Compare X0, 0
	213 JumpIfEqual {220}
	214 Move X8, [X20]
	215 Move X0, X22
	216 Move X1, [X8+64]
	217 Call 0x1C17E00
	218 Compare X0, 0
	219 JumpIfEqual {298}
	220 Move W8, [X20+24]
	221 Compare W8, 0
	222 JumpIfEqual {294}
	223 Move [X20+32], X22
	224 Compare X19, 0
	225 JumpIfEqual {233}
	226 Move X8, [X20]
	227 Move X0, X19
	228 Move X1, [X8+64]
	229 Call 0x1C17E00
	230 Compare X0, 0
	231 JumpIfEqual {298}
	232 Move W8, [X20+24]
	233 NotImplemented "Instruction CMP not yet implemented."
	234 Move [X20+40], X19
	235 Move X0, [X23]
	236 Add X1, X31, 8
	237 Move [X31+8], W21
	238 Call 0x1C17E04
	239 Move X19, X0
	240 Compare X0, 0
	241 JumpIfEqual {248}
	242 Move X8, [X20]
	243 Move X0, X19
	244 Move X1, [X8+64]
	245 Call 0x1C17E00
	246 Compare X0, 0
	247 JumpIfEqual {298}
	248 Move W8, [X20+24]
	249 NotImplemented "Instruction CMP not yet implemented."
	250 Move [X20+48], X19
	251 Move X8, 0x964000
	252 Move X8, [X8+1264]
	253 Move V0, [X25+64]
	254 Move V1, [X25+80]
	255 Move V2, [X25+6]
	256 Move X9, [X31+240]
	257 Move X0, [X8]
	258 Add X1, X31, 16
	259 Move [X31+16], V0
	260 Move [X31+24], V1
	261 Move [X31+3], V2
	262 Move [X31+64], X9
	263 Call 0x1C17E04
	264 Move X19, X0
	265 Compare X0, 0
	266 JumpIfEqual {273}
	267 Move X8, [X20]
	268 Move X0, X19
	269 Move X1, [X8+64]
	270 Call 0x1C17E00
	271 Compare X0, 0
	272 JumpIfEqual {298}
	273 Move W8, [X20+24]
	274 NotImplemented "Instruction CMP not yet implemented."
	275 Move [X20+56], X19
	276 Move X8, 0x98D000
	277 Move X8, [X8+3072]
	278 Move X1, X20
	279 Move X2, X31
	280 Move X0, [X8]
	281 Call String.Format, X0, X1
	282 Move X8, 0x939000
	283 Move X8, [X8+2600]
	284 Move X19, X0
	285 Move X8, [X8]
	286 Move W9, [X8+224]
	287 Compare W9, 0
	288 JumpIfNotEqual {291}
	289 Move X0, X8
	290 Call 0x1C17DFC
	291 Move X0, X19
	292 Move X1, X31
	293 Call Debug.LogError, X0
	294 Call 0x1C17F28
	295 Call 0x1C17F20
	296 Call 0x1C17F20
	297 Call 0x1C17F20
	298 Call 0x1C17F44
	299 Move X1, X31
	300 Call 0x1C17DEC
	301 Move X20, X0
	302 NotImplemented "Instruction CMP not yet implemented."
	303 Move X0, X20
	304 Call 0x3EB2AD0
	305 Move X20, X0
	306 Move X0, 0x939000
	307 Move X0, [X0+2000]
	308 Call 0x1C17D08
	309 Move X8, [X20]
	310 Move X1, [X8]
	311 Call 0x1C18270
	312 Move TEMP, X0
	313 And TEMP, TEMP, 1
	314 Compare TEMP, 1
	315 JumpIfNotEqual {347}
	316 Move X20, [X20]
	317 Call 0x3EB2AE0
	318 Move V0, [X25+64]
	319 Move V1, [X25+80]
	320 Move V2, [X25+6]
	321 Move X8, [X31+240]
	322 Move X0, 0x964000
	323 Move [X31+16], V0
	324 Move [X31+24], V1
	325 Move [X31+3], V2
	326 Move [X31+64], X8
	327 Move X0, [X0+1264]
	328 Call 0x1C17D08
	329 Add X1, X31, 16
	330 Call 0x1C17E04
	331 Move X21, X0
	332 Move X0, 0x98D000
	333 Move X0, [X0+3080]
	334 Call 0x1C17D08
	335 Move X1, X21
	336 Move X2, X19
	337 Move X3, X20
	338 Move X4, X31
	339 Call String.Format, X0, X1, X2, X3
	340 Move X19, X0
	341 Move X0, 0x939000
	342 Move X0, [X0+2600]
	343 Call 0x1C17D08
	344 Move W8, [X0+224]
	345 Compare W8, 0
	346 JumpIfNotEqual {291}
	347 Move W0, 8
	348 Call 0x3EB2AF0
	349 Move X8, [X20]
	350 Move [X0], X8
	351 Move X1, 0x6FA000
	352 Add X1, X1, 3672
	353 Move X2, X31
	354 Call 0x3EB2B00
	355 Move X20, X0
	356 Call 0x3EB2AE0
	357 Move X0, X20
	358 Call 0x1D2D690
	359 Call 0x1991590

