Type: UnityEngine.InputSystem.StepCounter

Method: UnityEngine.InputSystem.Controls.IntegerControl get_stepCounter()

Disassembly:
	0x037C082C TBNZ X0, 0x0, 0x37C091C
	0x037C0830 SUB X23, X23, 0x1

ISIL:
	001 Move X0, [X0+368]
	002 Return X0

Method: System.Void set_stepCounter(UnityEngine.InputSystem.Controls.IntegerControl value)

Disassembly:
	0x037C0834 SUBS X28, X28, 0x1
	0x037C0838 ADD X20, X20, 0x38

ISIL:
	001 Move [X0+368], X1
	002 Return 

Method: UnityEngine.InputSystem.StepCounter get_current()

Disassembly:
	0x037C083C B.NE 0x37C081C
	0x037C0840 MOV X0, X21
	0x037C0844 MOV W1, W31
	0x037C0848 MOV X2, X31
	0x037C084C BL 0x37FFF50
	0x037C0850 LDR X8, [X19 + 0x1A0]
	0x037C0854 CBZ X8, 0x37C0968
	0x037C0858 LDR X0, [X8 + 0x1A8]
	0x037C085C ADRP X8, 0x987000
	0x037C0860 LDR X8, [X8 + 0xFB0]
	0x037C0864 MOVZ W1, 0x3
	0x037C0868 MOV W2, W31
	0x037C086C MOV X3, X31
	0x037C0870 LDR X4, [X8]
	0x037C0874 BL 0x220916C
	0x037C0878 B 0x37C091C
	0x037C087C LDUR V0, [X31 + 0x64]
	0x037C0880 LDR V1, [X31 + 0x90]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xC22000
	005 Move X20, 0x988000
	006 Move W8, [X19+426]
	007 Move X20, [X20+3984]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x988000
	013 Move X0, [X0+3984]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+426], W8
	017 Move X8, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X8, [X8+184]
	021 Move X0, [X8]
	022 Move X30, [X31+32]
	023 Return X0

Method: System.Void set_current(UnityEngine.InputSystem.StepCounter value)

Disassembly:
	0x037C0884 LDR V2, [X8 + 0x10]
	0x037C0888 LDRB W8, [X24 + 0x21]
	0x037C088C FSUB V0.2S, V0.2S, V1.2S
	0x00000000 INVALID
	0x037C0894 FADDP S0, V0.2S
	0x037C0898 FCMP S0, S2
	0x037C089C B.HI 0x37C0794
	0x037C08A0 MOV W24, W31
	0x037C08A4 ADD W8, W8, 0x1
	0x037C08A8 B 0x37C0798
	0x037C08AC LDR X0, [X19 + 0x1A0]
	0x037C08B0 LDR X3, [X31 + 0x18]
	0x037C08B4 ADRP X8, 0x987000
	0x037C08B8 LDR X8, [X8 + 0xFC8]
	0x037C08BC ADD X1, X31, 0x60
	0x037C08C0 B 0x37C0910
	0x037C08C4 LDP V0, V1, [X31 + 0x60]
	0x037C08C8 LDR V2, [X31 + 0x8]
	0x037C08CC LDR X8, [X31 + 0x90]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xC22000
	006 Move X21, 0x988000
	007 Move W8, [X20+427]
	008 Move X21, [X21+3984]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x988000
	015 Move X0, [X0+3984]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+427], W8
	019 Move X8, [X21]
	020 Move X8, [X8+184]
	021 Move [X8], X19
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X30, [X31+32]
	025 Move X21, [X31+40]
	026 Return 

Method: System.Void MakeCurrent()

Disassembly:
	0x037C08D0 ADD X0, X31, 0x20
	0x037C08D4 MOVZ W1, 0x2
	0x037C08D8 MOV X2, X31
	0x037C08DC STP V0, V1, [X31 + 0x20]
	0x037C08E0 STR V2, [X31 + 0x4]
	0x037C08E4 STR X8, [X31 + 0x50]
	0x037C08E8 BL 0x37FA840
	0x037C08EC ADD X0, X31, 0x20
	0x037C08F0 MOVZ W1, 0x1
	0x037C08F4 MOV X2, X31
	0x037C08F8 BL 0x37FFF50
	0x037C08FC ADRP X8, 0x987000
	0x037C0900 LDR X0, [X19 + 0x1A0]
	0x037C0904 LDR X3, [X31 + 0x18]
	0x037C0908 LDR X8, [X8 + 0xFC8]
	0x037C090C ADD X1, X31, 0x20
	0x037C0910 LDR X4, [X8]
	0x037C0914 MOV W2, W31
	0x037C0918 BL 0x2209C7C
	0x037C091C LDR V0, [X27]
	0x037C0920 LDR X2, [X26]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X1, X31
	005 Move X19, X0
	006 Call InputDevice.MakeCurrent, X0
	007 Move X20, 0xC22000
	008 Move W8, [X20+565]
	009 Compare W8, 0
	010 JumpIfNotEqual {16}
	011 Move X0, 0x988000
	012 Move X0, [X0+3984]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+565], W8
	016 Move X8, 0x988000
	017 Move X8, [X8+3984]
	018 Move X8, [X8]
	019 Move X8, [X8+184]
	020 Move [X8], X19
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X30, [X31+32]
	024 Return 

Method: System.Void OnRemoved()

Disassembly:
	0x037C0924 ADD X0, X31, 0x0
	0x037C0928 MOV W1, W22
	0x037C092C STR V0, [X31]
	0x037C0930 BL 0x24FDB3C
	0x037C0934 LDR X3, [X31 + 0x18]
	0x037C0938 TBZ X24, 0x0, 0x37C0958
	0x037C093C ADRP X8, 0x987000
	0x037C0940 LDR X8, [X8 + 0xFC8]
	0x037C0944 ADD X1, X31, 0x60
	0x037C0948 MOV W2, W31
	0x037C094C LDR X4, [X8]
	0x037C0950 BL 0x2209C7C
	0x037C0954 B 0x37C04D8
	0x037C0958 ADD X1, X31, 0x60
	0x037C095C MOV X2, X3
	0x037C0960 BL 0x37C0970
	0x037C0964 B 0x37C04D8
	0x037C0968 BL 0x1C16F20
	0x037C096C BL 0x3EB1B20
	0x037C0970 STP X30, X23, [X31 - 0x30]!
	0x037C0974 STP X22, X21, [X31 + 0x10]
	0x037C0978 STP X20, X19, [X31 + 0x20]
	0x037C097C ADRP X23, 0xC21000
	0x037C0980 ADRP X22, 0x987000
	0x037C0984 LDRB W8, [X23 + 0x1B5]
	0x037C0988 LDR X22, [X22 + 0xFC8]
	0x037C098C MOV X20, X2
	0x037C0990 MOV X19, X1
	0x037C0994 MOV X21, X0
	0x037C0998 TBNZ X8, 0x0, 0x37C09B0
	0x037C099C ADRP X0, 0x987000
	0x037C09A0 LDR X0, [X0 + 0xFC8]
	0x037C09A4 BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X1, X31
	005 Move X19, X0
	006 Call InputDevice.OnRemoved, X0
	007 Move X20, 0xC22000
	008 Move W8, [X20+566]
	009 Compare W8, 0
	010 JumpIfNotEqual {16}
	011 Move X0, 0x988000
	012 Move X0, [X0+3984]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+566], W8
	016 Move X20, 0x988000
	017 Move X20, [X20+3984]
	018 Move X8, [X20]
	019 Move X8, [X8+184]
	020 Move X9, [X8]
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move X19, 0xC22000
	023 Move W9, [X19+565]
	024 Compare W9, 0
	025 JumpIfNotEqual {32}
	026 Move X0, X20
	027 Call 0x1C17CF4
	028 Move X8, [X20]
	029 Move W9, 1
	030 Move [X19+565], W9
	031 Move X8, [X8+184]
	032 Move [X8], X31
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Return 

Method: System.Void FinishSetup()

Disassembly:
	0x037C09A8 MOVZ W8, 0x1
	0x037C09AC STRB W8, [X23 + 0x1B5]
	0x037C09B0 MOVZ W1, 0x1
	0x037C09B4 MOV X0, X19
	0x037C09B8 MOV X2, X31
	0x037C09BC BL 0x37FFF98
	0x037C09C0 MOV X0, X19
	0x037C09C4 MOV W1, W31
	0x037C09C8 MOV X2, X31
	0x037C09CC BL 0x37FFFB8
	0x037C09D0 LDR X4, [X22]
	0x037C09D4 MOV X0, X21
	0x037C09D8 MOV X1, X19
	0x037C09DC MOV W2, W31
	0x037C09E0 MOV X3, X20
	0x037C09E4 BL 0x2209C7C
	0x037C09E8 MOV X0, X19
	0x037C09EC MOV W1, W31
	0x037C09F0 MOV X2, X31
	0x037C09F4 BL 0x37FFF98
	0x037C09F8 MOVZ W1, 0x1
	0x037C09FC MOV X0, X19
	0x037C0A00 MOV X2, X31
	0x037C0A04 BL 0x37FFFB8
	0x037C0A08 LDR X4, [X22]
	0x037C0A0C MOV X0, X21
	0x037C0A10 MOV X1, X19
	0x037C0A14 MOV W2, W31
	0x037C0A18 MOV X3, X20
	0x037C0A1C BL 0x2209C7C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xC22000
	007 Move X21, 0x988000
	008 Move X22, 0x987000
	009 Move W8, [X20+428]
	010 Move X21, [X21+3992]
	011 Move X22, [X22+88]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x987000
	018 Move X0, [X0+88]
	019 Call 0x1C17CF4
	020 Move X0, 0x988000
	021 Move X0, [X0+3992]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+428], W8
	025 Move X1, [X21]
	026 Move X2, [X22]
	027 Move X0, X19
	028 Call 0x21FD754, X0, X1
	029 Move [X19+368], X0
	030 Move X0, X19
	031 Move X20, [X31+32]
	032 Move X19, [X31+40]
	033 Move X22, [X31+16]
	034 Move X21, [X31+24]
	035 Move X1, X31
	036 Move X30, [X31+48]
	037 Call InputControl.FinishSetup, X0
	038 Return 

Method: System.Void .ctor()

Disassembly:
	0x037C0A20 MOV X0, X19
	0x037C0A24 LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Move X1, X31
	002 Call InputDevice..ctor, X0
	003 Return 

