Type: UnityEngine.InputSystem.InputControlExtensions

Method: TControl FindInParentChain(UnityEngine.InputSystem.InputControl control)

Disassembly:
	0x021FE4C0 MOV X1, X0
	0x021FE4C4 MOV X0, X20
	0x021FE4C8 MOV X2, X31
	0x021FE4CC BL 0x330E100
	0x021FE4D0 MOV X0, X20
	0x021FE4D4 MOV X1, X19
	0x021FE4D8 BL 0x1C16DEC
	0x021FE4DC BL 0x3EB1B20
	0x021FE4E0 STP X29, X30, [X31 - 0x40]!
	0x021FE4E4 STR X23, [X31 + 0x10]
	0x021FE4E8 STP X22, X21, [X31 + 0x20]
	0x021FE4EC STP X20, X19, [X31 + 0x30]
	0x021FE4F0 ADD X29, X31, 0x0
	0x021FE4F4 SUB X31, X31, 0x20
	0x021FE4F8 MRS X23, 0xC000
	0x021FE4FC LDR X8, [X23 + 0x28]
	0x021FE500 MOV X20, X2
	0x021FE504 MOV X19, X1
	0x021FE508 MOV X21, X0
	0x021FE50C STUR X8, [X29 - 0x8]
	0x021FE510 LDR X8, [X2 + 0x38]
	0x021FE514 CBNZ X8, 0x21FE524
	0x021FE518 MOV X0, X20
	0x021FE51C BL 0x1C5C6E0
	0x021FE520 LDR X8, [X20 + 0x38]
	0x021FE524 LDR X9, [X8 + 0x10]
	0x021FE528 ADD X10, X31, 0x0
	0x021FE52C LDR W9, [X9 + 0xFC]
	0x021FE530 ADD X9, X9, 0xF
	0x021FE534 AND X9, X9, 0x1FFFFFFFF
	0x021FE538 SUB X22, X10, X9
	0x021FE53C ADD X31, X22, 0x0
	0x021FE540 CBZ X21, 0x21FE5AC
	0x021FE544 LDR X1, [X8 + 0x8]
	0x021FE548 SUB X3, X29, 0x18
	0x021FE54C MOV X2, X21
	0x021FE550 MOV X4, X22
	0x021FE554 LDR X0, [X1]
	0x021FE558 STUR X22, [X29 - 0x18]
	0x021FE55C LDR X8, [X1 + 0x10]
	0x021FE560 BLR X8
	0x021FE564 LDR X8, [X21]
	0x021FE568 STP X22, X19, [X29 - 0x18]
	0x021FE56C SUB X3, X29, 0x18
	0x021FE570 MOV X2, X21
	0x021FE574 LDR X1, [X8 + 0x260]
	0x021FE578 MOV X4, X19
	0x021FE57C LDP X0, X8, [X1 + 0x8]
	0x021FE580 BLR X8
	0x021FE584 LDR X8, [X23 + 0x28]
	0x021FE588 LDUR X9, [X29 - 0x8]
	0x021FE58C CMP X8, X9
	0x021FE590 B.NE 0x21FE5E8
	0x021FE594 ADD X31, X29, 0x0
	0x021FE598 LDP X20, X19, [X31 + 0x30]
	0x021FE59C LDP X22, X21, [X31 + 0x20]
	0x021FE5A0 LDR X23, [X31 + 0x10]
	0x021FE5A4 LDP X29, X30, [X31], #0x40

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X1+56]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X8, 0
	010 JumpIfNotEqual {13}
	011 Move X0, X19
	012 Call 0x1C5D6E0
	013 Compare X20, 0
	014 JumpIfEqual {55}
	015 Move X8, [X19+56]
	016 Move X1, [X8]
	017 Move W8, [X1+309]
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {25}
	022 Move X0, X1
	023 Call 0x1C5D684
	024 Move X1, X0
	025 Move X0, X20
	026 Call 0x1C17E00
	027 Move X8, [X19+56]
	028 Move X22, X0
	029 Move X21, [X8]
	030 Move W8, [X21+309]
	031 Move TEMP, X8
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {38}
	035 Move X0, X21
	036 Call 0x1C5D684
	037 Move X21, X0
	038 Compare X22, 0
	039 JumpIfNotEqual {44}
	040 Move X20, [X20+128]
	041 Compare X20, 0
	042 JumpIfNotEqual {15}
	043 Move X0, X31
	044 Move X0, X22
	045 Move X1, X21
	046 Call 0x1C17E00
	047 Compare X0, 0
	048 JumpIfEqual {70}
	049 Move X20, [X31+32]
	050 Move X19, [X31+40]
	051 Move X22, [X31+16]
	052 Move X21, [X31+24]
	053 Move X30, [X31+48]
	054 Return X0
	055 Move X0, 0x1EFB000
	056 Move X0, [X0+1320]
	057 Call 0x1C17D08
	058 Call 0x1C17F10
	059 Move X20, X0
	060 Move X0, 0x1F1E000
	061 Move X0, [X0+3424]
	062 Call 0x1C17D08
	063 Move X1, X0
	064 Move X0, X20
	065 Move X2, X31
	066 Call ArgumentNullException..ctor, X0, X1
	067 Move X0, X20
	068 Move X1, X19
	069 Call 0x1C17DEC
	070 Move X0, X22
	071 Move X1, X21
	072 Call 0x1C181E0

Method: System.Boolean IsPressed(UnityEngine.InputSystem.InputControl control, System.Single buttonPressPoint = 0)

Disassembly:
	0x0377473C CBZ X0, 0x37748D8
	0x03774740 LDP W25, W24, [X0 + 0x14]
	0x03774744 MOV X1, X31
	0x03774748 MOV X22, X0
	0x0377474C STR W24, [X31 + 0xC]
	0x03774750 BL 0x38006BC
	0x03774754 MOV W21, W0
	0x03774758 MOV X0, X22
	0x0377475C MOV X1, X31
	0x03774760 BL 0x38006C8
	0x03774764 MOV X22, X0
	0x03774768 CBZ X19, 0x37748D8
	0x0377476C LDR X23, [X19 + 0x78]
	0x03774770 CBZ X23, 0x37748D8
	0x03774774 ADRP X26, 0x9A7000
	0x03774778 LDR X26, [X26 + 0xD18]
	0x0377477C LDR X0, [X26]
	0x03774780 LDR W8, [X0 + 0xE0]
	0x03774784 CBNZ W8, 0x377478C
	0x03774788 BL 0x1C16DFC
	0x0377478C LDR W8, [X23 + 0x10]
	0x03774790 CMP W25, W8
	0x03774794 B.NE 0x377480C
	0x03774798 LDR X0, [X26]
	0x0377479C LDR W8, [X0 + 0xE0]
	0x037747A0 CBNZ W8, 0x37747A8
	0x037747A4 BL 0x1C16DFC
	0x037747A8 LDR W8, [X23 + 0x14]
	0x037747AC ADD X19, X19, 0x10
	0x037747B0 MOV X0, X19
	0x037747B4 MOV X1, X31
	0x037747B8 ADD W8, W8, W24
	0x037747BC STR W8, [X31 + 0xC]
	0x037747C0 BL 0x3809D78
	0x037747C4 LDR W8, [X31 + 0xC]
	0x037747C8 SXTW X9, W0
	0x037747CC SUBS X20, X9, X8
	0x037747D0 B.MI 0x37748BC
	0x037747D4 LDR X0, [X26]
	0x037747D8 LDR W8, [X0 + 0xE0]
	0x037747DC CBNZ W8, 0x37747E4
	0x037747E0 BL 0x1C16DFC
	0x037747E4 MOV X0, X19
	0x037747E8 MOV X1, X31
	0x037747EC BL 0x3800B6C
	0x037747F0 ADD X8, X20, W0, UXTW
	0x037747F4 CMP X8, W21, UXTW
	0x037747F8 MOV X0, X31
	0x037747FC B.GT 0x37748C0
	0x03774800 LDRSW X8, [X31 + 0xC]
	0x03774804 SUB X0, X22, X8
	0x03774808 B 0x37748C0
	0x0377480C LDRB W8, [X23 + 0xDC]
	0x03774810 TBZ X8, 0x1, 0x37748BC
	0x03774814 ADRP X25, 0x9D2000
	0x03774818 LDR X25, [X25 + 0xC68]
	0x0377481C MOV X0, X23
	0x03774820 LDR X24, [X25]
	0x03774824 MOV X1, X24
	0x03774828 BL 0x1C16E00
	0x0377482C CBZ X0, 0x3774960
	0x03774830 LDR X25, [X25]
	0x03774834 MOV X0, X23
	0x03774838 MOV X1, X25
	0x0377483C BL 0x1C16E00
	0x03774840 CBZ X0, 0x377496C
	0x03774844 LDR X8, [X0]
	0x03774848 MOV X24, X0
	0x0377484C LDRH W9, [X8 + 0x12E]
	0x03774850 CBZ X9, 0x3774874
	0x03774854 LDR X10, [X8 + 0xB0]
	0x03774858 ADD X10, X10, 0x8
	0x0377485C LDUR X11, [X10 - 0x8]
	0x03774860 CMP X11, X25
	0x03774864 B.EQ 0x3774888
	0x03774868 SUBS X9, X9, 0x1
	0x0377486C ADD X10, X10, 0x10
	0x03774870 B.NE 0x377485C
	0x03774874 MOVZ W2, 0x2
	0x03774878 MOV X0, X24
	0x0377487C MOV X1, X25

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xC6D000
	006 Move W8, [X20+3875]
	007 Move V8, V0
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x9A8000
	014 Move X0, [X0+3216]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X20+3875], W8
	018 Compare X19, 0
	019 JumpIfEqual {66}
	020 Move X20, 0xC66000
	021 Move W8, [X20+1450]
	022 Compare W8, 0
	023 JumpIfNotEqual {29}
	024 Move X0, 0x987000
	025 Move X0, [X0+1208]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X20+1450], W8
	029 Move X8, 0x987000
	030 Move X8, [X8+1208]
	031 Move X9, -46698496
	032 Move V0, [X9+576]
	033 NotImplemented "Instruction FABS not yet implemented."
	034 Move X8, [X8]
	035 Move S3, 8
	036 Multiply S0, S2, S0
	037 Move X8, [X8+184]
	038 Move V1, [X8]
	039 Multiply S1, S1, S3
	040 NotImplemented "Instruction FCMP not yet implemented."
	041 NotImplemented "Instruction FCSEL not yet implemented."
	042 NotImplemented "Instruction FCMP not yet implemented."
	043 Move X8, 0x9A8000
	044 Move X8, [X8+3216]
	045 Move X9, [X19]
	046 Move X8, [X8]
	047 Move W11, [X9+304]
	048 Move W10, [X8+304]
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move X9, [X9+200]
	051 Add X9, X9, X10
	052 NotImplemented "Instruction LDUR not yet implemented."
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move X8, [X8+184]
	055 Move V8, [X8]
	056 Move X0, X19
	057 Move X20, [X31+16]
	058 Move X19, [X31+24]
	059 Move X30, [X31+8]
	060 Move V0, V8
	061 Move V8, [X31+32]
	062 Move X0, X19
	063 Move X1, X31
	064 Call ButtonControl.get_pressPointOrDefault, X0
	065 Move V8, V0
	066 Move X0, 0x985000
	067 Move X0, [X0+1320]
	068 Call 0x1C17D08
	069 Call 0x1C17F10
	070 Move X19, X0
	071 Move X0, 0x9A8000
	072 Move X0, [X0+3424]
	073 Call 0x1C17D08
	074 Move X1, X0
	075 Move X0, X19
	076 Move X2, X31
	077 Call ArgumentNullException..ctor, X0, X1
	078 Move X0, 0x9D3000
	079 Move X0, [X0+3032]
	080 Call 0x1C17D08
	081 Move X1, X0
	082 Move X0, X19
	083 Call 0x1C17DEC

Method: System.Boolean IsActuated(UnityEngine.InputSystem.InputControl control, System.Single threshold = 0)

Disassembly:
	0x03774880 BL 0x1C5C788
	0x03774884 B 0x3774898
	0x03774888 LDR W9, [X10]
	0x0377488C ADD W9, W9, 0x2
	0x03774890 ADD X8, X8, W9, 0x4, SXTW
	0x03774894 ADD X0, X8, 0x138
	0x03774898 LDP X8, X4, [X0]
	0x0377489C ADD X3, X31, 0xC
	0x037748A0 MOV X0, X24
	0x037748A4 MOV X1, X19
	0x037748A8 MOV X2, X20
	0x037748AC BLR X8
	0x037748B0 TBZ X0, 0x0, 0x37748BC
	0x037748B4 LDR W24, [X31 + 0xC]
	0x037748B8 B 0x3774798
	0x037748BC MOV X0, X31
	0x037748C0 LDP X20, X19, [X31 + 0x40]
	0x037748C4 LDP X22, X21, [X31 + 0x30]
	0x037748C8 LDP X24, X23, [X31 + 0x20]
	0x037748CC LDP X26, X25, [X31 + 0x10]
	0x037748D0 LDR X30, [X31], #0x50
	0x037748D4 RET
	0x037748D8 BL 0x1C16F20
	0x037748DC STR W21, [X31 + 0x8]
	0x037748E0 ADRP X0, 0x9A7000
	0x037748E4 LDR X0, [X0 + 0xD28]
	0x037748E8 BL 0x1C16D08
	0x037748EC ADD X1, X31, 0x8
	0x037748F0 BL 0x1C16E04
	0x037748F4 MOV X19, X0
	0x037748F8 ADRP X0, 0x9D2000
	0x037748FC LDR X0, [X0 + 0xC70]
	0x03774900 BL 0x1C16D08
	0x03774904 MOV X1, X19
	0x03774908 MOV X2, X31
	0x0377490C BL 0x321EFD0
	0x03774910 MOV X19, X0
	0x03774914 ADRP X0, 0x987000
	0x03774918 LDR X0, [X0 + 0x578]
	0x0377491C BL 0x1C16D08
	0x03774920 BL 0x1C16F10
	0x03774924 MOV X20, X0
	0x03774928 ADRP X0, 0x9A7000
	0x0377492C LDR X0, [X0 + 0xD70]
	0x03774930 BL 0x1C16D08
	0x03774934 MOV X2, X0
	0x03774938 MOV X0, X20
	0x0377493C MOV X1, X19
	0x03774940 MOV X3, X31
	0x03774944 BL 0x330E16C
	0x03774948 ADRP X0, 0x9D2000

ISIL:
	001 Move [X31-32], D9
	002 Move [X31-24], D8
	003 Move [X31+16], X30
	004 Move [X31+24], X19
	005 Move V8, V0
	006 Move X19, X0
	007 Call InputControlExtensions.CheckStateIsAtDefault, X0
	008 Move TEMP, X0
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfNotEqual {13}
	012 Move W0, W31
	013 Compare X19, 0
	014 JumpIfEqual {56}
	015 Move X0, X19
	016 Call InputControl.EvaluateMagnitude, X0
	017 Move X19, 0xC66000
	018 Move W8, [X19+1450]
	019 Move V9, V0
	020 Compare W8, 0
	021 JumpIfNotEqual {27}
	022 Move X0, 0x987000
	023 Move X0, [X0+1208]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X19+1450], W8
	027 Move X8, 0x987000
	028 Move X8, [X8+1208]
	029 Move X9, -46698496
	030 Move V0, [X9+576]
	031 NotImplemented "Instruction FABS not yet implemented."
	032 Move X8, [X8]
	033 Move S2, W31
	034 NotImplemented "Instruction FMAXNM not yet implemented."
	035 Move S4, 8
	036 Move X8, [X8+184]
	037 Multiply S1, S1, S0
	038 NotImplemented "Instruction FABD not yet implemented."
	039 Move V3, [X8]
	040 Multiply S2, S3, S4
	041 NotImplemented "Instruction FCMP not yet implemented."
	042 NotImplemented "Instruction FCSEL not yet implemented."
	043 NotImplemented "Instruction FCMP not yet implemented."
	044 NotImplemented "Instruction CSET not yet implemented."
	045 NotImplemented "Instruction FCMP not yet implemented."
	046 NotImplemented "Instruction FCMP not yet implemented."
	047 NotImplemented "Instruction FCMP not yet implemented."
	048 NotImplemented "Instruction CSET not yet implemented."
	049 NotImplemented "Instruction FCMP not yet implemented."
	050 NotImplemented "Instruction CSET not yet implemented."
	051 Move X30, [X31+16]
	052 Move X19, [X31+24]
	053 Move D9, [X31+32]
	054 Move D8, [X31+40]
	055 Return X0
	056 Call 0x1C17F20

Method: System.Object ReadValueAsObject(UnityEngine.InputSystem.InputControl control)

Disassembly:
	0x037735C8 MOV W19, W1
	0x037735CC MOV X20, X0
	0x037735D0 TBNZ X8, 0x0, 0x3773600
	0x037735D4 ADRP X0, 0x9A8000
	0x037735D8 LDR X0, [X0 + 0xD18]
	0x037735DC BL 0x1C16CF4
	0x037735E0 ADRP X0, 0x9A8000
	0x037735E4 LDR X0, [X0 + 0xD40]
	0x037735E8 BL 0x1C16CF4
	0x037735EC ADRP X0, 0x9A8000
	0x037735F0 LDR X0, [X0 + 0xD48]
	0x037735F4 BL 0x1C16CF4
	0x037735F8 MOVZ W8, 0x1
	0x037735FC STRB W8, [X21 + 0xF20]
	0x03773600 LDR X0, [X22]
	0x03773604 LDR W8, [X0 + 0xE0]
	0x03773608 CBNZ W8, 0x3773610
	0x0377360C BL 0x1C16DFC
	0x03773610 LDR W8, [X20 + 0x14]
	0x03773614 MOV X0, X20
	0x03773618 ADD W8, W8, W19
	0x0377361C STR W8, [X20 + 0x14]
	0x03773620 BL 0x37720C4
	0x03773624 UBFM X8, X1, 0x20, 0x3F
	0x03773628 CMP W8, 0x1
	0x0377362C STP X0, X1, [X31]
	0x03773630 B.LT 0x377366C
	0x03773634 ADRP X21, 0x9A8000
	0x03773638 LDR X21, [X21 + 0xD48]
	0x0377363C MOV W20, W31

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Compare X0, 0
	004 JumpIfEqual {17}
	005 Move X19, X0
	006 Call InputControl.GetDeviceIndex, X0
	007 Move X1, X31
	008 Call InputStateBuffers.GetFrontBufferForDevice, X0
	009 Move X8, [X19]
	010 Move X1, X0
	011 Move X0, X19
	012 Move X3, [X8+440]
	013 Move X2, [X8+448]
	014 Move X30, [X31+16]
	015 Move X19, [X31+24]
	016 CallNoReturn X3
	017 Move X0, 0x986000
	018 Move X0, [X0+1320]
	019 Call 0x1C17D08
	020 Call 0x1C17F10
	021 Move X19, X0
	022 Move X0, 0x9A9000
	023 Move X0, [X0+3424]
	024 Call 0x1C17D08
	025 Move X1, X0
	026 Move X0, X19
	027 Move X2, X31
	028 Call ArgumentNullException..ctor, X0, X1
	029 Move X0, 0x9D4000
	030 Move X0, [X0+2904]
	031 Call 0x1C17D08
	032 Move X1, X0
	033 Move X0, X19
	034 Call 0x1C17DEC

Method: System.Void ReadValueIntoBuffer(UnityEngine.InputSystem.InputControl control, System.Void* buffer, System.Int32 bufferSize)

Disassembly:
	0x037749C0 MOV X1, X31
	0x037749C4 BL 0x37F80A4
	0x037749C8 TBZ X0, 0x0, 0x3774AA8
	0x037749CC ADD X0, X31, 0x8
	0x037749D0 MOV X1, X31
	0x037749D4 BL 0x37F80B4
	0x037749D8 MOVZ W8, 0x5441
	0x037749DC MOVK W8, 0x444C0000
	0x037749E0 CMP W0, W8
	0x037749E4 B.EQ 0x37749F8
	0x037749E8 MOVZ W8, 0x4154
	0x037749EC MOVK W8, 0x53540000
	0x037749F0 CMP W0, W8
	0x037749F4 B.NE 0x3774ADC
	0x037749F8 LDR X1, [X31 + 0x8]
	0x037749FC MOV X0, X19
	0x03774A00 BL 0x3773B98
	0x03774A04 MOV X20, X0
	0x03774A08 CBZ X0, 0x3774A70
	0x03774A0C ADRP X22, 0xC67000
	0x03774A10 ADRP X21, 0x9A7000
	0x03774A14 LDRB W8, [X22 + 0xA03]
	0x03774A18 LDR X21, [X21 + 0xD18]
	0x03774A1C CBNZ W8, 0x3774A34
	0x03774A20 ADRP X0, 0x9AA000
	0x03774A24 LDR X0, [X0 + 0xFE8]
	0x03774A28 BL 0x1C16CF4
	0x03774A2C MOVZ W8, 0x1
	0x03774A30 STRB W8, [X22 + 0xA03]
	0x03774A34 ADRP X8, 0x9AA000
	0x03774A38 LDR X8, [X8 + 0xFE8]
	0x03774A3C LDR X0, [X21]
	0x03774A40 LDR X8, [X8]
	0x03774A44 LDR W9, [X0 + 0xE0]
	0x03774A48 LDR X8, [X8 + 0xB8]
	0x03774A4C LDR X21, [X8]
	0x03774A50 CBNZ W9, 0x3774A58
	0x03774A54 BL 0x1C16DFC
	0x03774A58 LDP W8, W2, [X19 + 0x14]
	0x03774A5C LDR W3, [X19 + 0x1C]
	0x03774A60 MOV X4, X31
	0x03774A64 ADD X0, X8, X20
	0x03774A68 ADD X1, X8, X21
	0x03774A6C BL 0x3762874
	0x03774A70 CMP X20, 0x0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Compare X0, 0
	006 JumpIfEqual {27}
	007 Move X20, X1
	008 Compare X1, 0
	009 JumpIfEqual {34}
	010 Move W19, W2
	011 Move X21, X0
	012 Call InputControl.GetDeviceIndex, X0
	013 Move X1, X31
	014 Call InputStateBuffers.GetFrontBufferForDevice, X0
	015 Move X8, [X21]
	016 Move X2, X20
	017 Move W3, W19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X5, [X8+456]
	021 Move X4, [X8+464]
	022 Move X1, X0
	023 Move X0, X21
	024 Move X30, [X31+32]
	025 Move X21, [X31+40]
	026 CallNoReturn X5
	027 Move X0, 0x985000
	028 Move X0, [X0+1320]
	029 Call 0x1C17D08
	030 Call 0x1C17F10
	031 Move X19, X0
	032 Move X0, 0x9A8000
	033 Move X0, [X0+3424]
	034 Move X0, 0x985000
	035 Move X0, [X0+1320]
	036 Call 0x1C17D08
	037 Call 0x1C17F10
	038 Move X19, X0
	039 Move X0, 0x9AB000
	040 Move X0, [X0+3912]
	041 Call 0x1C17D08
	042 Move X1, X0
	043 Move X0, X19
	044 Move X2, X31
	045 Call ArgumentNullException..ctor, X0, X1
	046 Move X0, 0x9D3000
	047 Move X0, [X0+3048]
	048 Call 0x1C17D08
	049 Move X1, X0
	050 Move X0, X19
	051 Call 0x1C17DEC

Method: System.Object ReadDefaultValueAsObject(UnityEngine.InputSystem.InputControl control)

Disassembly:
	0x03774A74 LDP X20, X19, [X31 + 0x20]
	0x03774A78 LDP X22, X21, [X31 + 0x10]
	0x03774A7C CSET W0, NE
	0x03774A80 LDR X30, [X31], #0x30
	0x03774A84 RET
	0x03774A88 ADRP X0, 0x984000
	0x03774A8C LDR X0, [X0 + 0x528]
	0x03774A90 BL 0x1C16D08
	0x03774A94 BL 0x1C16F10
	0x03774A98 MOV X19, X0
	0x03774A9C ADRP X0, 0x9A7000
	0x03774AA0 LDR X0, [X0 + 0xD60]
	0x03774AA4 B 0x3774AC4
	0x03774AA8 ADRP X0, 0x984000
	0x03774AAC LDR X0, [X0 + 0x528]
	0x03774AB0 BL 0x1C16D08
	0x03774AB4 BL 0x1C16F10
	0x03774AB8 MOV X19, X0
	0x03774ABC ADRP X0, 0x9A7000
	0x03774AC0 LDR X0, [X0 + 0xD70]
	0x03774AC4 BL 0x1C16D08
	0x03774AC8 MOV X1, X0
	0x03774ACC MOV X0, X19
	0x03774AD0 MOV X2, X31
	0x03774AD4 BL 0x330E100
	0x03774AD8 B 0x3774B20
	0x03774ADC ADRP X0, 0x987000
	0x03774AE0 LDR X0, [X0 + 0x578]
	0x03774AE4 BL 0x1C16D08
	0x03774AE8 BL 0x1C16F10
	0x03774AEC MOV X19, X0
	0x03774AF0 ADRP X0, 0x9D2000
	0x03774AF4 LDR X0, [X0 + 0xC80]
	0x03774AF8 BL 0x1C16D08
	0x03774AFC MOV X20, X0
	0x03774B00 ADRP X0, 0x9A7000
	0x03774B04 LDR X0, [X0 + 0xD70]
	0x03774B08 BL 0x1C16D08
	0x03774B0C MOV X2, X0
	0x03774B10 MOV X0, X19
	0x03774B14 MOV X1, X20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X0, 0
	005 JumpIfEqual {29}
	006 Move X20, 0xC68000
	007 Move W8, [X20+2563]
	008 Move X19, X0
	009 Compare W8, 0
	010 JumpIfNotEqual {16}
	011 Move X0, 0x9AB000
	012 Move X0, [X0+4072]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2563], W8
	016 Move X8, 0x9AB000
	017 Move X8, [X8+4072]
	018 Move X9, [X19]
	019 Move X0, X19
	020 Move X20, [X31+16]
	021 Move X19, [X31+24]
	022 Move X8, [X8]
	023 Move X3, [X9+440]
	024 Move X2, [X9+448]
	025 Move X8, [X8+184]
	026 Move X1, [X8]
	027 Move X30, [X31+32]
	028 CallNoReturn X3
	029 Move X0, 0x985000
	030 Move X0, [X0+1320]
	031 Call 0x1C17D08
	032 Call 0x1C17F10
	033 Move X19, X0
	034 Move X0, 0x9A8000
	035 Move X0, [X0+3424]
	036 Call 0x1C17D08
	037 Move X1, X0
	038 Move X0, X19
	039 Move X2, X31
	040 Call ArgumentNullException..ctor, X0, X1
	041 Move X0, 0x9D3000
	042 Move X0, [X0+3056]
	043 Call 0x1C17D08
	044 Move X1, X0
	045 Move X0, X19
	046 Call 0x1C17DEC

Method: TValue ReadValueFromEvent(UnityEngine.InputSystem.InputControl`1<TValue> control, UnityEngine.InputSystem.LowLevel.InputEventPtr inputEvent)

Disassembly:
	0x021FEC30 ADRP X0, 0x1F1D000
	0x021FEC34 LDR X0, [X0 + 0xD78]
	0x021FEC38 BL 0x1C16D08
	0x021FEC3C MOV X2, X0
	0x021FEC40 MOV X0, X21
	0x021FEC44 MOV X1, X31
	0x021FEC48 BL 0x1993444
	0x021FEC4C LDR X8, [X19 + 0x38]
	0x021FEC50 ADRP X0, 0x1EF5000
	0x021FEC54 LDR X22, [X8 + 0x8]
	0x021FEC58 LDR X0, [X0 + 0x6C0]
	0x021FEC5C BL 0x1C16D08
	0x021FEC60 BL 0x19903D0
	0x021FEC64 MOV X0, X22
	0x021FEC68 MOV X1, X31
	0x021FEC6C BL 0x338C698
	0x021FEC70 MOV X22, X0
	0x021FEC74 BL 0x19903C0
	0x021FEC78 LDR X8, [X22]
	0x021FEC7C MOV X0, X22
	0x021FEC80 LDP X9, X1, [X8 + 0x1A8]
	0x021FEC84 BLR X9
	0x021FEC88 MOV X22, X0
	0x021FEC8C MOV X0, X21
	0x021FEC90 BL 0x19903C0
	0x021FEC94 MOVZ W1, 0x1
	0x021FEC98 MOV X0, X21
	0x021FEC9C MOV X2, X22
	0x021FECA0 BL 0x1993444
	0x021FECA4 MOV X0, X21
	0x021FECA8 BL 0x19903C0
	0x021FECAC ADRP X0, 0x1F1D000
	0x021FECB0 LDR X0, [X0 + 0xD80]
	0x021FECB4 BL 0x1C16D08
	0x021FECB8 MOV X2, X0
	0x021FECBC MOVZ W1, 0x2
	0x021FECC0 MOV X0, X21
	0x021FECC4 BL 0x1993444
	0x021FECC8 MOV X0, X20
	0x021FECCC BL 0x19903C0
	0x021FECD0 MOV X0, X20
	0x021FECD4 MOV X1, X31
	0x021FECD8 BL 0x33BE520
	0x021FECDC MOV X20, X0
	0x021FECE0 BL 0x19903C0
	0x021FECE4 LDR X8, [X20]
	0x021FECE8 MOV X0, X20
	0x021FECEC LDP X9, X1, [X8 + 0x1A8]
	0x021FECF0 BLR X9
	0x021FECF4 MOV X20, X0
	0x021FECF8 MOV X0, X21
	0x021FECFC BL 0x19903C0
	0x021FED00 MOVZ W1, 0x3
	0x021FED04 MOV X0, X21
	0x021FED08 MOV X2, X20
	0x021FED0C BL 0x1993444
	0x021FED10 MOV X0, X21
	0x021FED14 BL 0x19903C0
	0x021FED18 ADRP X0, 0x1EFD000
	0x021FED1C LDR X0, [X0 + 0x9B0]
	0x021FED20 BL 0x1C16D08
	0x021FED24 MOV X2, X0
	0x021FED28 MOVZ W1, 0x4
	0x021FED2C MOV X0, X21
	0x021FED30 BL 0x1993444
	0x021FED34 MOV X0, X21
	0x021FED38 MOV X1, X31
	0x021FED3C BL 0x32278CC
	0x021FED40 MOV X20, X0
	0x021FED44 ADRP X0, 0x1EFD000
	0x021FED48 LDR X0, [X0 + 0x578]
	0x021FED4C BL 0x1C16D08
	0x021FED50 BL 0x1C16F10
	0x021FED54 MOV X1, X20
	0x021FED58 MOV X2, X31
	0x021FED5C MOV X21, X0
	0x021FED60 BL 0x3314A68
	0x021FED64 MOV X0, X21
	0x021FED68 B 0x21FEDA0
	0x021FED6C ADRP X0, 0x1EFA000
	0x021FED70 LDR X0, [X0 + 0x528]
	0x021FED74 BL 0x1C16D08
	0x021FED78 BL 0x1C16F10
	0x021FED7C MOV X20, X0
	0x021FED80 ADRP X0, 0x1F1D000
	0x021FED84 LDR X0, [X0 + 0xD60]
	0x021FED88 BL 0x1C16D08
	0x021FED8C MOV X1, X0
	0x021FED90 MOV X0, X20
	0x021FED94 MOV X2, X31

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Add X29, X31, 0
	014 Subtract X31, X31, 16
	015 NotImplemented "Instruction MRS not yet implemented."
	016 Move X8, [X27+40]
	017 Move X20, X3
	018 Move X19, X2
	019 Move X23, X1
	020 Move [X29-8], X8
	021 Move X28, [X3+56]
	022 Move X24, X0
	023 Compare X28, 0
	024 JumpIfNotEqual {28}
	025 Move X0, X20
	026 Call 0x1C5D6E0
	027 Move X28, [X20+56]
	028 Move X8, [X28+24]
	029 Move W21, [X8+252]
	030 Add X8, X31, 0
	031 Add X9, X21, 15
	032 And X26, X9, 0x1FFFFFFFF
	033 Subtract X22, X8, X26
	034 Add X31, X22, 0
	035 Add X8, X31, 0
	036 Subtract X25, X8, X26
	037 Add X31, X25, 0
	038 Move X0, X25
	039 Move W1, W31
	040 Move X2, X21
	041 Call 0x3EB2B10
	042 Add X8, X31, 0
	043 Subtract X26, X8, X26
	044 Add X31, X26, 0
	045 Move X0, X26
	046 Move W1, W31
	047 Move X2, X21
	048 Call 0x3EB2B10
	049 Compare X24, 0
	050 JumpIfEqual {91}
	051 Move X3, [X28+8]
	052 Move X0, X24
	053 Move X1, X23
	054 Move X2, X25
	055 Move X8, [X3]
	056 NotImplemented "Instruction BLR not yet implemented."
	057 Move TEMP, X0
	058 And TEMP, TEMP, 1
	059 Compare TEMP, 1
	060 JumpIfEqual {66}
	061 Move X0, X26
	062 Move W1, W31
	063 Move X2, X21
	064 Call 0x3EB2B10
	065 Move X25, X26
	066 Move X0, X22
	067 Move X1, X25
	068 Move X2, X21
	069 Call 0x3EB2AC0
	070 Move X0, X19
	071 Move X1, X22
	072 Move X2, X21
	073 Call 0x3EB2AC0
	074 Move X8, [X27+40]
	075 NotImplemented "Instruction LDUR not yet implemented."
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Add X31, X29, 0
	078 Move X20, [X31+80]
	079 Move X19, [X31+88]
	080 Move X22, [X31+64]
	081 Move X21, [X31+72]
	082 Move X24, [X31+48]
	083 Move X23, [X31+56]
	084 Move X26, [X31+32]
	085 Move X25, [X31+40]
	086 Move X28, [X31+16]
	087 Move X27, [X31+24]
	088 Move X29, [X31+96]
	089 Move X30, [X31+104]
	090 Return X0
	091 Move X0, 0x1EFB000
	092 Move X0, [X0+1320]
	093 Call 0x1C17D08
	094 Call 0x1C17F10
	095 Move X19, X0
	096 Move X0, 0x1F1E000
	097 Move X0, [X0+3424]
	098 Call 0x1C17D08
	099 Move X1, X0
	100 Move X0, X19
	101 Move X2, X31
	102 Call ArgumentNullException..ctor, X0, X1
	103 Move X0, X19
	104 Move X1, X20
	105 Call 0x1C17DEC
	106 Call 0x3EB2B20

Method: System.Boolean ReadValueFromEvent(UnityEngine.InputSystem.InputControl`1<TValue> control, UnityEngine.InputSystem.LowLevel.InputEventPtr inputEvent, out TValue value)

Disassembly:
	0x021FED98 BL 0x330E100
	0x021FED9C MOV X0, X20
	0x021FEDA0 MOV X1, X19
	0x021FEDA4 BL 0x1C16DEC
	0x021FEDA8 BL 0x3EB1B20
	0x021FEDAC STP X29, X30, [X31 - 0x60]!
	0x021FEDB0 STP X28, X27, [X31 + 0x10]
	0x021FEDB4 STP X26, X25, [X31 + 0x20]
	0x021FEDB8 STP X24, X23, [X31 + 0x30]
	0x021FEDBC STP X22, X21, [X31 + 0x40]
	0x021FEDC0 STP X20, X19, [X31 + 0x50]
	0x021FEDC4 ADD X29, X31, 0x0
	0x021FEDC8 SUB X31, X31, 0x20
	0x021FEDCC MRS X28, 0xC000
	0x021FEDD0 LDR X8, [X28 + 0x28]
	0x021FEDD4 MOV X19, X3
	0x021FEDD8 MOV X23, X2
	0x021FEDDC MOV X22, X1
	0x021FEDE0 STUR X8, [X29 - 0x8]
	0x021FEDE4 LDR X8, [X3 + 0x38]
	0x021FEDE8 MOV X21, X0
	0x021FEDEC CBNZ X8, 0x21FEE10
	0x021FEDF0 ADRP X0, 0x1F1D000
	0x021FEDF4 LDR X0, [X0 + 0xD18]
	0x021FEDF8 BL 0x1C16CF4
	0x021FEDFC LDR X8, [X19 + 0x38]
	0x021FEE00 CBNZ X8, 0x21FEE10
	0x021FEE04 MOV X0, X19
	0x021FEE08 BL 0x1C5C6E0
	0x021FEE0C LDR X8, [X19 + 0x38]
	0x021FEE10 LDR X9, [X8 + 0x28]
	0x021FEE14 LDR W24, [X9 + 0xFC]
	0x021FEE18 ADD X9, X31, 0x0
	0x021FEE1C ADD X10, X24, 0xF
	0x021FEE20 AND X10, X10, 0x1FFFFFFFF
	0x021FEE24 SUB X25, X9, X10
	0x021FEE28 ADD X31, X25, 0x0
	0x021FEE2C CBZ X21, 0x21FEEFC
	0x021FEE30 LDR X0, [X8 + 0x8]
	0x021FEE34 LDR X8, [X0]
	0x021FEE38 BLR X8
	0x021FEE3C MOV W20, W0
	0x021FEE40 MOV X0, X21
	0x021FEE44 MOV X1, X31
	0x021FEE48 BL 0x3772BE4
	0x021FEE4C ADRP X8, 0x1F1D000
	0x021FEE50 LDR X8, [X8 + 0xD18]
	0x021FEE54 MOV W26, W0
	0x021FEE58 ADD X27, X21, 0x10
	0x021FEE5C LDR X0, [X8]
	0x021FEE60 LDR W8, [X0 + 0xE0]
	0x021FEE64 CBNZ W8, 0x21FEE6C
	0x021FEE68 BL 0x1C16DFC
	0x021FEE6C MOV X0, X27
	0x021FEE70 MOV X1, X31
	0x021FEE74 BL 0x3800B6C
	0x021FEE78 ADD W8, W0, W26
	0x021FEE7C CMP X8, W20, SXTW
	0x021FEE80 B.GE 0x21FEF34
	0x021FEE84 LDR X8, [X19 + 0x38]
	0x021FEE88 MOV X0, X23
	0x021FEE8C LDR X1, [X8 + 0x20]
	0x021FEE90 LDR X8, [X1]
	0x021FEE94 BLR X8
	0x021FEE98 MOV X19, X0
	0x021FEE9C MOV X0, X25
	0x021FEEA0 MOV X1, X22
	0x021FEEA4 MOV X2, X24
	0x021FEEA8 BL 0x3EB1AC0
	0x021FEEAC LDR X8, [X21]
	0x021FEEB0 STP X25, X19, [X29 - 0x18]
	0x021FEEB4 SUB X3, X29, 0x18
	0x021FEEB8 MOV X2, X21
	0x021FEEBC LDR X1, [X8 + 0x260]
	0x021FEEC0 MOV X4, X19
	0x021FEEC4 LDP X0, X8, [X1 + 0x8]
	0x021FEEC8 BLR X8
	0x021FEECC LDR X8, [X28 + 0x28]
	0x021FEED0 LDUR X9, [X29 - 0x8]
	0x021FEED4 CMP X8, X9
	0x021FEED8 B.NE 0x21FF138
	0x021FEEDC ADD X31, X29, 0x0
	0x021FEEE0 LDP X20, X19, [X31 + 0x50]
	0x021FEEE4 LDP X22, X21, [X31 + 0x40]
	0x021FEEE8 LDP X24, X23, [X31 + 0x30]
	0x021FEEEC LDP X26, X25, [X31 + 0x20]
	0x021FEEF0 LDP X28, X27, [X31 + 0x10]
	0x021FEEF4 LDP X29, X30, [X31], #0x60
	0x021FEEF8 RET
	0x021FEEFC ADRP X0, 0x1EFA000
	0x021FEF00 LDR X0, [X0 + 0x528]
	0x021FEF04 BL 0x1C16D08
	0x021FEF08 BL 0x1C16F10
	0x021FEF0C MOV X20, X0
	0x021FEF10 ADRP X0, 0x1F1D000
	0x021FEF14 LDR X0, [X0 + 0xD60]
	0x021FEF18 BL 0x1C16D08
	0x021FEF1C MOV X1, X0

ISIL:
	001 Move [X31-80], X29
	002 Move [X31-72], X30
	003 Move [X31+16], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Add X29, X31, 0
	011 Subtract X31, X31, 32
	012 NotImplemented "Instruction MRS not yet implemented."
	013 Move X8, [X25+40]
	014 Move X19, X3
	015 Move X20, X2
	016 Move X24, X1
	017 Move [X29-8], X8
	018 Move X8, [X3+56]
	019 Move X21, X0
	020 Compare X8, 0
	021 JumpIfNotEqual {25}
	022 Move X0, X19
	023 Call 0x1C5D6E0
	024 Move X8, [X19+56]
	025 Move X8, [X8+24]
	026 Move W22, [X8+252]
	027 Add X8, X31, 0
	028 Add X9, X22, 15
	029 And X9, X9, 0x1FFFFFFFF
	030 Subtract X23, X8, X9
	031 Add X31, X23, 0
	032 Compare X21, 0
	033 JumpIfEqual {99}
	034 Move X0, X21
	035 Move X1, X24
	036 Move X2, X31
	037 Call InputControlExtensions.GetStatePtrFromStateEvent, X0, X1
	038 Move X8, [X19+56]
	039 Compare X0, 0
	040 JumpIfEqual {64}
	041 Move X1, [X8+32]
	042 Subtract X3, X29, 24
	043 Move X2, X21
	044 Move X4, X23
	045 Move X8, [X1]
	046 Move [X29-24], X0
	047 Move [X29-16], X23
	048 Move X9, [X1+16]
	049 Move X0, X8
	050 NotImplemented "Instruction BLR not yet implemented."
	051 Move X0, X20
	052 Move X1, X23
	053 Move X2, X22
	054 Call 0x3EB2AC0
	055 Move X8, [X19+56]
	056 Move X0, [X8+24]
	057 Move W8, [X0+309]
	058 Move TEMP, X8
	059 And TEMP, TEMP, 1
	060 Compare TEMP, 1
	061 JumpIfEqual {63}
	062 Call 0x1C5D684
	063 Move W0, 1
	064 Move X1, [X8+16]
	065 Subtract X3, X29, 24
	066 Move X2, X21
	067 Move X4, X23
	068 Move X0, [X1]
	069 Move [X29-24], X23
	070 Move X8, [X1+16]
	071 NotImplemented "Instruction BLR not yet implemented."
	072 Move X0, X20
	073 Move X1, X23
	074 Move X2, X22
	075 Call 0x3EB2AC0
	076 Move X8, [X19+56]
	077 Move X0, [X8+24]
	078 Move W8, [X0+309]
	079 Move TEMP, X8
	080 And TEMP, TEMP, 1
	081 Compare TEMP, 1
	082 JumpIfEqual {84}
	083 Call 0x1C5D684
	084 Move W0, W31
	085 Move X8, [X25+40]
	086 NotImplemented "Instruction LDUR not yet implemented."
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Add X31, X29, 0
	089 Move X20, [X31+64]
	090 Move X19, [X31+72]
	091 Move X22, [X31+48]
	092 Move X21, [X31+56]
	093 Move X24, [X31+32]
	094 Move X23, [X31+40]
	095 Move X25, [X31+16]
	096 Move X29, [X31+80]
	097 Move X30, [X31+88]
	098 Return X0
	099 Move X0, 0x1EFB000
	100 Move X0, [X0+1320]
	101 Call 0x1C17D08
	102 Call 0x1C17F10
	103 Move X20, X0
	104 Move X0, 0x1F1E000
	105 Move X0, [X0+3424]
	106 Call 0x1C17D08
	107 Move X1, X0
	108 Move X0, X20
	109 Move X2, X31
	110 Call ArgumentNullException..ctor, X0, X1
	111 Move X0, X20
	112 Move X1, X19
	113 Call 0x1C17DEC
	114 Call 0x3EB2B20

Method: System.Object ReadValueFromEventAsObject(UnityEngine.InputSystem.InputControl control, UnityEngine.InputSystem.LowLevel.InputEventPtr inputEvent)

Disassembly:
	0x03774B18 MOV X3, X31
	0x03774B1C BL 0x330E16C
	0x03774B20 ADRP X0, 0x9D2000
	0x03774B24 LDR X0, [X0 + 0xC88]
	0x03774B28 BL 0x1C16D08
	0x03774B2C MOV X1, X0
	0x03774B30 MOV X0, X19
	0x03774B34 BL 0x1C16DEC
	0x03774B38 STR X30, [X31 - 0x30]!
	0x03774B3C STP X22, X21, [X31 + 0x10]
	0x03774B40 STP X20, X19, [X31 + 0x20]
	0x03774B44 ADRP X22, 0xC6C000
	0x03774B48 LDRB W8, [X22 + 0xF29]
	0x03774B4C MOV X19, X2
	0x03774B50 MOV X21, X1
	0x03774B54 MOV X20, X0
	0x03774B58 TBNZ X8, 0x0, 0x3774B7C
	0x03774B5C ADRP X0, 0x9D2000
	0x03774B60 LDR X0, [X0 + 0xC90]
	0x03774B64 BL 0x1C16CF4
	0x03774B68 ADRP X0, 0x9D2000
	0x03774B6C LDR X0, [X0 + 0xC98]
	0x03774B70 BL 0x1C16CF4
	0x03774B74 MOVZ W8, 0x1
	0x03774B78 STRB W8, [X22 + 0xF29]
	0x03774B7C STR W31, [X31 + 0xC]
	0x03774B80 CBZ X20, 0x3774BEC
	0x03774B84 ADRP X8, 0x9D2000
	0x03774B88 LDR X8, [X8 + 0xC90]
	0x03774B8C ADD X2, X31, 0xC
	0x03774B90 MOV X0, X20
	0x03774B94 MOV X1, X19

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Compare X0, 0
	004 JumpIfEqual {22}
	005 Move X19, X0
	006 Call InputControlExtensions.GetStatePtrFromStateEvent, X0, X1
	007 Compare X0, 0
	008 JumpIfEqual {17}
	009 Move X8, [X19]
	010 Move X1, X0
	011 Move X0, X19
	012 Move X3, [X8+440]
	013 Move X2, [X8+448]
	014 Move X30, [X31+16]
	015 Move X19, [X31+24]
	016 CallNoReturn X3
	017 Move X0, X19
	018 Move X30, [X31+16]
	019 Move X19, [X31+24]
	020 Call InputControlExtensions.ReadDefaultValueAsObject, X0
	021 Return X0
	022 Move X0, 0x985000
	023 Move X0, [X0+1320]
	024 Call 0x1C17D08
	025 Call 0x1C17F10
	026 Move X19, X0
	027 Move X0, 0x9A8000
	028 Move X0, [X0+3424]
	029 Call 0x1C17D08
	030 Move X1, X0
	031 Move X0, X19
	032 Move X2, X31
	033 Call ArgumentNullException..ctor, X0, X1
	034 Move X0, 0x9D3000
	035 Move X0, [X0+3064]
	036 Call 0x1C17D08
	037 Move X1, X0
	038 Move X0, X19
	039 Call 0x1C17DEC

Method: TValue ReadUnprocessedValueFromEvent(UnityEngine.InputSystem.InputControl`1<TValue> control, UnityEngine.InputSystem.LowLevel.InputEventPtr eventPtr)

Disassembly:
	0x021FE7D0 B 0x21FE808
	0x021FE7D4 ADRP X0, 0x1EFA000
	0x021FE7D8 LDR X0, [X0 + 0x528]
	0x021FE7DC BL 0x1C16D08
	0x021FE7E0 BL 0x1C16F10
	0x021FE7E4 MOV X20, X0
	0x021FE7E8 ADRP X0, 0x1F1D000
	0x021FE7EC LDR X0, [X0 + 0xD60]
	0x021FE7F0 BL 0x1C16D08
	0x021FE7F4 MOV X1, X0
	0x021FE7F8 MOV X0, X20
	0x021FE7FC MOV X2, X31
	0x021FE800 BL 0x330E100
	0x021FE804 MOV X0, X20
	0x021FE808 MOV X1, X19
	0x021FE80C BL 0x1C16DEC
	0x021FE810 STR X30, [X31 - 0x30]!
	0x021FE814 STP X22, X21, [X31 + 0x10]
	0x021FE818 STP X20, X19, [X31 + 0x20]
	0x021FE81C LDR X8, [X3 + 0x38]
	0x021FE820 MOV X19, X3
	0x021FE824 MOV X21, X2
	0x021FE828 MOV W22, W1
	0x021FE82C MOV X20, X0
	0x021FE830 CBNZ X8, 0x21FE83C
	0x021FE834 MOV X0, X19
	0x021FE838 BL 0x1C5C6E0
	0x021FE83C CBZ X20, 0x21FE9F8
	0x021FE840 LDR X8, [X19 + 0x38]
	0x021FE844 LDR X0, [X8]
	0x021FE848 LDRB W8, [X0 + 0x135]
	0x021FE84C TBNZ X8, 0x0, 0x21FE854
	0x021FE850 BL 0x1C5C684
	0x021FE854 LDR X8, [X20]
	0x021FE858 LDRB W9, [X0 + 0x130]
	0x021FE85C LDRB W10, [X8 + 0x130]
	0x021FE860 CMP W10, W9
	0x021FE864 B.CC 0x21FE8A0
	0x021FE868 LDR X10, [X8 + 0xC8]
	0x021FE86C ADD X9, X10, X9, 0x3, LSL
	0x021FE870 LDUR X9, [X9 - 0x8]
	0x021FE874 CMP X9, X0
	0x021FE878 B.NE 0x21FE8A0
	0x021FE87C LDR X4, [X8 + 0x258]
	0x021FE880 LDR X3, [X8 + 0x260]
	0x021FE884 MOV X0, X20
	0x021FE888 MOV W1, W22
	0x021FE88C MOV X2, X21
	0x021FE890 LDP X20, X19, [X31 + 0x20]
	0x021FE894 LDP X22, X21, [X31 + 0x10]
	0x021FE898 LDR X30, [X31], #0x30
	0x021FE89C BR X4
	0x021FE8A0 ADRP X0, 0x1EF5000
	0x021FE8A4 LDR X0, [X0 + 0xAC8]
	0x021FE8A8 BL 0x1C16D08
	0x021FE8AC MOVZ W1, 0x5
	0x021FE8B0 BL 0x1C16D6C
	0x021FE8B4 MOV X21, X0
	0x021FE8B8 BL 0x19903C0
	0x021FE8BC ADRP X0, 0x1F1D000
	0x021FE8C0 LDR X0, [X0 + 0xD78]
	0x021FE8C4 BL 0x1C16D08
	0x021FE8C8 MOV X2, X0
	0x021FE8CC MOV X0, X21
	0x021FE8D0 MOV X1, X31
	0x021FE8D4 BL 0x1993444
	0x021FE8D8 LDR X8, [X19 + 0x38]
	0x021FE8DC ADRP X0, 0x1EF5000
	0x021FE8E0 LDR X22, [X8 + 0x8]
	0x021FE8E4 LDR X0, [X0 + 0x6C0]
	0x021FE8E8 BL 0x1C16D08
	0x021FE8EC BL 0x19903D0
	0x021FE8F0 MOV X0, X22
	0x021FE8F4 MOV X1, X31
	0x021FE8F8 BL 0x338C698
	0x021FE8FC MOV X22, X0
	0x021FE900 BL 0x19903C0
	0x021FE904 LDR X8, [X22]
	0x021FE908 MOV X0, X22
	0x021FE90C LDP X9, X1, [X8 + 0x1A8]
	0x021FE910 BLR X9

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Add X29, X31, 0
	013 Subtract X31, X31, 16
	014 NotImplemented "Instruction MRS not yet implemented."
	015 Move X8, [X26+40]
	016 Move X19, X3
	017 Move X20, X2
	018 Move X21, X1
	019 Move [X29-8], X8
	020 Move X27, [X3+56]
	021 Move X22, X0
	022 Compare X27, 0
	023 JumpIfNotEqual {27}
	024 Move X0, X19
	025 Call 0x1C5D6E0
	026 Move X27, [X19+56]
	027 Move X8, [X27+8]
	028 Move W23, [X8+252]
	029 Add X8, X31, 0
	030 Add X9, X23, 15
	031 And X9, X9, 0x1FFFFFFFF
	032 Subtract X24, X8, X9
	033 Add X31, X24, 0
	034 Add X8, X31, 0
	035 Subtract X25, X8, X9
	036 Add X31, X25, 0
	037 Move X0, X25
	038 Move W1, W31
	039 Move X2, X23
	040 Call 0x3EB2B10
	041 Compare X22, 0
	042 JumpIfEqual {77}
	043 Move X0, X25
	044 Move W1, W31
	045 Move X2, X23
	046 Call 0x3EB2B10
	047 Move X3, [X27+16]
	048 Move X0, X22
	049 Move X1, X21
	050 Move X2, X25
	051 Move X8, [X3]
	052 NotImplemented "Instruction BLR not yet implemented."
	053 Move X0, X24
	054 Move X1, X25
	055 Move X2, X23
	056 Call 0x3EB2AC0
	057 Move X0, X20
	058 Move X1, X24
	059 Move X2, X23
	060 Call 0x3EB2AC0
	061 Move X8, [X26+40]
	062 NotImplemented "Instruction LDUR not yet implemented."
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Add X31, X29, 0
	065 Move X20, [X31+80]
	066 Move X19, [X31+88]
	067 Move X22, [X31+64]
	068 Move X21, [X31+72]
	069 Move X24, [X31+48]
	070 Move X23, [X31+56]
	071 Move X26, [X31+32]
	072 Move X25, [X31+40]
	073 Move X27, [X31+16]
	074 Move X29, [X31+96]
	075 Move X30, [X31+104]
	076 Return X0
	077 Move X0, 0x1EFB000
	078 Move X0, [X0+1320]
	079 Call 0x1C17D08
	080 Call 0x1C17F10
	081 Move X20, X0
	082 Move X0, 0x1F1E000
	083 Move X0, [X0+3424]
	084 Call 0x1C17D08
	085 Move X1, X0
	086 Move X0, X20
	087 Move X2, X31
	088 Call ArgumentNullException..ctor, X0, X1
	089 Move X0, X20
	090 Move X1, X19
	091 Call 0x1C17DEC
	092 Call 0x3EB2B20

Method: System.Boolean ReadUnprocessedValueFromEvent(UnityEngine.InputSystem.InputControl`1<TValue> control, UnityEngine.InputSystem.LowLevel.InputEventPtr inputEvent, out TValue value)

Disassembly:
	0x021FE914 MOV X22, X0
	0x021FE918 MOV X0, X21
	0x021FE91C BL 0x19903C0
	0x021FE920 MOVZ W1, 0x1
	0x021FE924 MOV X0, X21
	0x021FE928 MOV X2, X22
	0x021FE92C BL 0x1993444
	0x021FE930 MOV X0, X21
	0x021FE934 BL 0x19903C0
	0x021FE938 ADRP X0, 0x1F1D000
	0x021FE93C LDR X0, [X0 + 0xD80]
	0x021FE940 BL 0x1C16D08
	0x021FE944 MOV X2, X0
	0x021FE948 MOVZ W1, 0x2
	0x021FE94C MOV X0, X21
	0x021FE950 BL 0x1993444
	0x021FE954 MOV X0, X20
	0x021FE958 BL 0x19903C0
	0x021FE95C MOV X0, X20
	0x021FE960 MOV X1, X31
	0x021FE964 BL 0x33BE520
	0x021FE968 MOV X20, X0
	0x021FE96C BL 0x19903C0
	0x021FE970 LDR X8, [X20]
	0x021FE974 MOV X0, X20
	0x021FE978 LDP X9, X1, [X8 + 0x1A8]
	0x021FE97C BLR X9
	0x021FE980 MOV X20, X0
	0x021FE984 MOV X0, X21
	0x021FE988 BL 0x19903C0
	0x021FE98C MOVZ W1, 0x3
	0x021FE990 MOV X0, X21
	0x021FE994 MOV X2, X20
	0x021FE998 BL 0x1993444
	0x021FE99C MOV X0, X21
	0x021FE9A0 BL 0x19903C0
	0x021FE9A4 ADRP X0, 0x1EFD000
	0x021FE9A8 LDR X0, [X0 + 0x9B0]
	0x021FE9AC BL 0x1C16D08
	0x021FE9B0 MOV X2, X0
	0x021FE9B4 MOVZ W1, 0x4
	0x021FE9B8 MOV X0, X21
	0x021FE9BC BL 0x1993444
	0x021FE9C0 MOV X0, X21
	0x021FE9C4 MOV X1, X31
	0x021FE9C8 BL 0x32278CC
	0x021FE9CC MOV X20, X0
	0x021FE9D0 ADRP X0, 0x1EFD000
	0x021FE9D4 LDR X0, [X0 + 0x578]
	0x021FE9D8 BL 0x1C16D08
	0x021FE9DC BL 0x1C16F10

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X3+56]
	007 Move X20, X3
	008 Move X19, X2
	009 Move X22, X1
	010 Move X21, X0
	011 Compare X8, 0
	012 JumpIfNotEqual {15}
	013 Move X0, X20
	014 Call 0x1C5D6E0
	015 Compare X21, 0
	016 JumpIfEqual {43}
	017 Move X0, X21
	018 Move X1, X22
	019 Move X2, X31
	020 Call InputControlExtensions.GetStatePtrFromStateEvent, X0, X1
	021 Move X22, X0
	022 Compare X0, 0
	023 JumpIfEqual {30}
	024 Move X8, [X21]
	025 Move X0, X21
	026 Move X1, X22
	027 Move X9, [X8+584]
	028 Move X2, [X8+592]
	029 NotImplemented "Instruction BLR not yet implemented."
	030 Move X8, [X20+56]
	031 Move X0, X21
	032 Move X1, [X8+16]
	033 Call InputControl`1<Single>.ReadDefaultValue, X0
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move [X19], S0
	036 Move X20, [X31+32]
	037 Move X19, [X31+40]
	038 Move X22, [X31+16]
	039 Move X21, [X31+24]
	040 NotImplemented "Instruction CSET not yet implemented."
	041 Move X30, [X31+48]
	042 Return X0
	043 Move X0, 0x1EFB000
	044 Move X0, [X0+1320]
	045 Call 0x1C17D08
	046 Call 0x1C17F10
	047 Move X19, X0
	048 Move X0, 0x1F1E000
	049 Move X0, [X0+3424]
	050 Call 0x1C17D08
	051 Move X1, X0
	052 Move X0, X19
	053 Move X2, X31
	054 Call ArgumentNullException..ctor, X0, X1
	055 Move X0, X19
	056 Move X1, X20
	057 Call 0x1C17DEC

Method: System.Void WriteValueFromObjectIntoEvent(UnityEngine.InputSystem.InputControl control, UnityEngine.InputSystem.LowLevel.InputEventPtr eventPtr, System.Object value)

Disassembly:
	0x03774C50 MOV X20, X0
	0x03774C54 TBNZ X8, 0x0, 0x3774C78
	0x03774C58 ADRP X0, 0x9D2000
	0x03774C5C LDR X0, [X0 + 0xCA8]
	0x03774C60 BL 0x1C16CF4
	0x03774C64 ADRP X0, 0x9D2000
	0x03774C68 LDR X0, [X0 + 0xCB0]
	0x03774C6C BL 0x1C16CF4
	0x03774C70 MOVZ W8, 0x1
	0x03774C74 STRB W8, [X22 + 0xF2A]
	0x03774C78 STR X31, [X31 + 0x8]
	0x03774C7C CBZ X20, 0x3774CEC
	0x03774C80 ADRP X8, 0x9D2000
	0x03774C84 LDR X8, [X8 + 0xCA8]
	0x03774C88 ADD X2, X31, 0x8
	0x03774C8C MOV X0, X20
	0x03774C90 MOV X1, X19
	0x03774C94 LDR X3, [X8]
	0x03774C98 BL 0x21FD9E0
	0x03774C9C TBZ X0, 0x0, 0x3774CDC
	0x03774CA0 LDR X8, [X20]
	0x03774CA4 MOV X0, X20
	0x03774CA8 MOV X1, X21
	0x03774CAC LDR X9, [X8 + 0x248]
	0x03774CB0 LDR X2, [X8 + 0x250]
	0x03774CB4 BLR X9
	0x03774CB8 ADRP X8, 0x9D2000
	0x03774CBC LDP S2, S3, [X31 + 0x8]
	0x03774CC0 LDR X8, [X8 + 0xCB0]
	0x03774CC4 MOV X0, X20
	0x03774CC8 MOV X1, X19
	0x03774CCC FADD S0, S0, S2
	0x03774CD0 LDR X2, [X8]
	0x03774CD4 FADD S1, S1, S3
	0x03774CD8 BL 0x21FDFF4
	0x03774CDC LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X0, 0
	005 JumpIfEqual {25}
	006 Move X19, X2
	007 Move X20, X0
	008 Call InputControlExtensions.GetStatePtrFromStateEvent, X0, X1
	009 Compare X0, 0
	010 JumpIfEqual {21}
	011 Move X8, [X20]
	012 Move X2, X0
	013 Move X0, X20
	014 Move X1, X19
	015 Move X4, [X8+488]
	016 Move X3, [X8+496]
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 Move X30, [X31+32]
	020 CallNoReturn X4
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X30, [X31+32]
	024 Return 
	025 Move X0, 0x985000
	026 Move X0, [X0+1320]
	027 Call 0x1C17D08
	028 Call 0x1C17F10
	029 Move X19, X0
	030 Move X0, 0x9A8000
	031 Move X0, [X0+3424]
	032 Call 0x1C17D08
	033 Move X1, X0
	034 Move X0, X19
	035 Move X2, X31
	036 Call ArgumentNullException..ctor, X0, X1
	037 Move X0, 0x9D3000
	038 Move X0, [X0+3080]
	039 Call 0x1C17D08
	040 Move X1, X0
	041 Move X0, X19
	042 Call 0x1C17DEC

Method: System.Void WriteValueIntoState(UnityEngine.InputSystem.InputControl control, System.Void* statePtr)

Disassembly:
	0x03774CE0 LDP X22, X21, [X31 + 0x10]
	0x03774CE4 LDR X30, [X31], #0x30
	0x03774CE8 RET
	0x03774CEC ADRP X0, 0x984000
	0x03774CF0 LDR X0, [X0 + 0x528]
	0x03774CF4 BL 0x1C16D08
	0x03774CF8 BL 0x1C16F10
	0x03774CFC MOV X19, X0
	0x03774D00 ADRP X0, 0x9A7000
	0x03774D04 LDR X0, [X0 + 0xD60]
	0x03774D08 BL 0x1C16D08
	0x03774D0C MOV X1, X0
	0x03774D10 MOV X0, X19
	0x03774D14 MOV X2, X31
	0x03774D18 BL 0x330E100
	0x03774D1C ADRP X0, 0x9D2000
	0x03774D20 LDR X0, [X0 + 0xCB8]
	0x03774D24 BL 0x1C16D08
	0x03774D28 MOV X1, X0
	0x03774D2C MOV X0, X19
	0x03774D30 BL 0x1C16DEC
	0x03774D34 SUB X31, X31, 0x60
	0x03774D38 STR X30, [X31 + 0x20]
	0x03774D3C STP X24, X23, [X31 + 0x30]
	0x03774D40 STP X22, X21, [X31 + 0x40]
	0x03774D44 STP X20, X19, [X31 + 0x50]
	0x03774D48 ADRP X21, 0xC6C000
	0x03774D4C LDRB W8, [X21 + 0xF2B]
	0x03774D50 MOV X19, X2
	0x03774D54 MOV X22, X1
	0x03774D58 MOV X20, X0
	0x03774D5C TBNZ X8, 0x0, 0x3774DBC
	0x03774D60 ADRP X0, 0x9A7000
	0x03774D64 LDR X0, [X0 + 0xDC8]
	0x03774D68 BL 0x1C16CF4
	0x03774D6C ADRP X0, 0x9A7000
	0x03774D70 LDR X0, [X0 + 0xDD0]
	0x03774D74 BL 0x1C16CF4
	0x03774D78 ADRP X0, 0x97F000
	0x03774D7C LDR X0, [X0 + 0x8F0]
	0x03774D80 BL 0x1C16CF4
	0x03774D84 ADRP X0, 0x9B3000
	0x03774D88 LDR X0, [X0 + 0x7F8]
	0x03774D8C BL 0x1C16CF4
	0x03774D90 ADRP X0, 0x9B3000
	0x03774D94 LDR X0, [X0 + 0x800]
	0x03774D98 BL 0x1C16CF4
	0x03774D9C ADRP X0, 0x9D2000
	0x03774DA0 LDR X0, [X0 + 0xCC0]
	0x03774DA4 BL 0x1C16CF4
	0x03774DA8 ADRP X0, 0x9B3000
	0x03774DAC LDR X0, [X0 + 0x4A8]
	0x03774DB0 BL 0x1C16CF4
	0x03774DB4 MOVZ W8, 0x1
	0x03774DB8 STRB W8, [X21 + 0xF2B]
	0x03774DBC STP X31, X31, [X31]
	0x03774DC0 CBZ X20, 0x3774F9C
	0x03774DC4 MOV X0, X22
	0x03774DC8 MOV X1, X31
	0x03774DCC BL 0x32277A8
	0x03774DD0 TBNZ X0, 0x0, 0x3774FBC
	0x03774DD4 CBNZ X19, 0x3774DF8
	0x03774DD8 ADRP X8, 0x97F000
	0x03774DDC LDR X8, [X8 + 0x8F0]
	0x03774DE0 LDR X0, [X8]
	0x03774DE4 BL 0x1C16F10
	0x03774DE8 MOV X1, X31
	0x03774DEC MOV X19, X0
	0x03774DF0 BL 0x3231AC4
	0x03774DF4 CBZ X19, 0x3774F98
	0x03774DF8 ADRP X23, 0x9B3000
	0x03774DFC LDR X21, [X20 + 0x78]
	0x03774E00 LDR X23, [X23 + 0x800]
	0x03774E04 MOVZ W1, 0x3C
	0x03774E08 MOV X0, X19
	0x03774E0C MOV X2, X31
	0x03774E10 BL 0x3233D30
	0x03774E14 LDR X1, [X23]
	0x03774E18 MOV X0, X22
	0x03774E1C MOV X3, X31
	0x03774E20 MOV X2, X1
	0x03774E24 BL 0x3766E54
	0x03774E28 MOV X1, X0
	0x03774E2C MOV X0, X19
	0x03774E30 MOV X2, X31
	0x03774E34 BL 0x32333E0
	0x03774E38 MOVZ W1, 0x3E
	0x03774E3C MOV X0, X19
	0x03774E40 MOV X2, X31
	0x03774E44 BL 0x3233D30
	0x03774E48 CBZ X21, 0x3774F98
	0x03774E4C MOV X0, X21
	0x03774E50 BL 0x3772134
	0x03774E54 UBFM X8, X1, 0x20, 0x3F
	0x03774E58 CMP W8, 0x1
	0x03774E5C STP X0, X1, [X31 + 0x10]
	0x03774E60 B.LT 0x3774EE8
	0x03774E64 ADRP X23, 0x9A7000
	0x03774E68 ADRP X24, 0x9D2000
	0x03774E6C LDR X23, [X23 + 0xDD0]
	0x03774E70 LDR X24, [X24 + 0xCC0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Compare X0, 0
	007 JumpIfEqual {53}
	008 Move X20, X1
	009 Compare X1, 0
	010 JumpIfEqual {60}
	011 Move X8, [X0]
	012 Move X21, X0
	013 Move X9, [X8+392]
	014 Move X1, [X8+400]
	015 NotImplemented "Instruction BLR not yet implemented."
	016 Move W22, W0
	017 Move X0, W22
	018 Move W1, 8
	019 Move W2, 2
	020 Move X3, X31
	021 Call UnsafeUtility.Malloc, X0, X1, X2
	022 Move X19, X0
	023 Move X0, X21
	024 Call InputControl.GetDeviceIndex, X0
	025 Move X1, X31
	026 Call InputStateBuffers.GetFrontBufferForDevice, X0
	027 Move X1, X0
	028 Move X8, [X21]
	029 Move X9, [X8+456]
	030 Move X4, [X8+464]
	031 Move X0, X21
	032 Move X2, X19
	033 Move W3, W22
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move X8, [X21]
	036 Move X9, [X8+472]
	037 Move X4, [X8+480]
	038 Move X0, X21
	039 Move X1, X19
	040 Move W2, W22
	041 Move X3, X20
	042 NotImplemented "Instruction BLR not yet implemented."
	043 Move X0, X19
	044 Move X20, [X31+32]
	045 Move X19, [X31+40]
	046 Move X22, [X31+16]
	047 Move X21, [X31+24]
	048 Move W1, 2
	049 Move X2, X31
	050 Move X30, [X31+48]
	051 Call UnsafeUtility.Free, X0, X1
	052 Return 
	053 Move X0, 0x985000
	054 Move X0, [X0+1320]
	055 Call 0x1C17D08
	056 Call 0x1C17F10
	057 Move X19, X0
	058 Move X0, 0x9A8000
	059 Move X0, [X0+3424]
	060 Move X0, 0x985000
	061 Move X0, [X0+1320]
	062 Call 0x1C17D08
	063 Call 0x1C17F10
	064 Move X19, X0
	065 Move X0, 0x9A8000
	066 Move X0, [X0+3464]
	067 Call 0x1C17D08
	068 Move X1, X0
	069 Move X0, X19
	070 Move X2, X31
	071 Call ArgumentNullException..ctor, X0, X1
	072 Move X0, 0x9D3000
	073 Move X0, [X0+3088]
	074 Call 0x1C17D08
	075 Move X1, X0
	076 Move X0, X19
	077 Call 0x1C17DEC
	078 Move X20, X0
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Move X0, X20
	081 Call 0x3EB2AD0
	082 Move X21, [X0]
	083 Call 0x3EB2AE0
	084 Move W1, 2
	085 Move X0, X19
	086 Move X2, X31
	087 Call UnsafeUtility.Free, X0, X1
	088 Compare X21, 0
	089 JumpIfNotEqual {97}
	090 Move X20, [X31+32]
	091 Move X19, [X31+40]
	092 Move X22, [X31+16]
	093 Move X21, [X31+24]
	094 Move X30, [X31+48]
	095 Return 
	096 Move X21, X31
	097 Move X0, X21
	098 Call 0x1C17F18
	099 Move X20, X0
	100 Move W1, 2
	101 Move X0, X19
	102 Move X2, X31
	103 Call UnsafeUtility.Free, X0, X1
	104 Compare X21, 0
	105 JumpIfNotEqual {108}
	106 Move X0, X20
	107 Call 0x1D2D690
	108 Move X0, X21
	109 Call 0x1C17F18
	110 Call 0x1991590

Method: System.Void WriteValueIntoState(UnityEngine.InputSystem.InputControl control, TValue value, System.Void* statePtr)

Disassembly:
	0x021FF5EC MOV X1, X31
	0x021FF5F0 BL 0x3772094
	0x021FF5F4 ADD X2, X31, 0x2C
	0x021FF5F8 MOVZ W3, 0x3
	0x021FF5FC MOV X1, X23
	0x021FF600 MOV W4, W31
	0x021FF604 MOV X5, X31
	0x021FF608 BL 0x37792A4
	0x021FF60C TBZ X0, 0x0, 0x21FF984
	0x021FF610 MOVZ W24, 0x1
	0x021FF614 ADRP X27, 0x1F1C000
	0x021FF618 LDR X27, [X27 + 0xDD0]
	0x021FF61C AND W25, W24, 0x1
	0x021FF620 LDR W1, [X31 + 0x2C]
	0x021FF624 CMP W1, W26
	0x021FF628 B.GE 0x21FF64C
	0x021FF62C MOV X0, X23
	0x021FF630 MOV X2, X31
	0x021FF634 BL 0x3222A1C
	0x021FF638 LDR W1, [X31 + 0x2C]
	0x021FF63C AND W8, W0, 0xFFFF
	0x021FF640 CMP W8, 0x7B
	0x021FF644 CSET W8, EQ
	0x021FF648 B 0x21FF650
	0x021FF64C MOV W8, W31
	0x021FF650 ANDS W31, W8, W25, 0x0
	0x021FF654 B.EQ 0x21FF6F0
	0x021FF658 ADD W8, W1, 0x1
	0x021FF65C STR W8, [X31 + 0x2C]
	0x021FF660 CBZ X22, 0x21FFA44
	0x021FF664 MOV X0, X22
	0x021FF668 MOV X1, X31
	0x021FF66C BL 0x3772134
	0x021FF670 UBFM X8, X1, 0x20, 0x3F
	0x021FF674 CMP W8, 0x1
	0x021FF678 STP X0, X1, [X31]
	0x021FF67C B.LT 0x21FF620
	0x021FF680 MOV W25, W31
	0x021FF684 MOV X0, X22
	0x021FF688 MOV X1, X31
	0x021FF68C BL 0x3772134
	0x021FF690 LDR X2, [X27]
	0x021FF694 STP X0, X1, [X31]
	0x021FF698 ADD X0, X31, 0x0
	0x021FF69C MOV W1, W25
	0x021FF6A0 BL 0x24FCF28
	0x021FF6A4 MOV X2, X31
	0x021FF6A8 BL 0x37577E0
	0x021FF6AC ADD X2, X31, 0x2C
	0x021FF6B0 MOVZ W3, 0x2
	0x021FF6B4 MOV X1, X23
	0x021FF6B8 MOV W4, W31
	0x021FF6BC MOV X5, X31
	0x021FF6C0 BL 0x37792A4
	0x021FF6C4 MOV W24, W0
	0x021FF6C8 ADD W25, W25, 0x1
	0x021FF6CC TBNZ X0, 0x0, 0x21FF61C
	0x021FF6D0 MOV X0, X22
	0x021FF6D4 MOV X1, X31
	0x021FF6D8 BL 0x3772134
	0x021FF6DC UBFM X8, X1, 0x20, 0x3F
	0x021FF6E0 CMP W25, W8
	0x021FF6E4 STP X0, X1, [X31]
	0x021FF6E8 B.LT 0x21FF684
	0x021FF6EC B 0x21FF61C
	0x021FF6F0 SUB W8, W26, 0x1
	0x021FF6F4 CMP W1, W8
	0x021FF6F8 CSET W8, GE
	0x021FF6FC ORN W8, W8, W24, 0x0
	0x021FF700 TBNZ X8, 0x0, 0x21FF77C
	0x021FF704 MOV X0, X23
	0x021FF708 MOV X2, X31
	0x021FF70C BL 0x3222A1C
	0x021FF710 AND W8, W0, 0xFFFF
	0x021FF714 CMP W8, 0x23
	0x021FF718 B.NE 0x21FF778
	0x021FF71C LDR W8, [X31 + 0x2C]
	0x021FF720 MOV X0, X23
	0x021FF724 MOV X2, X31
	0x021FF728 ADD W1, W8, 0x1
	0x021FF72C BL 0x3222A1C
	0x021FF730 AND W8, W0, 0xFFFF
	0x021FF734 CMP W8, 0x28
	0x021FF738 B.NE 0x21FF778
	0x021FF73C LDR W8, [X31 + 0x2C]
	0x021FF740 ADD W8, W8, 0x2
	0x021FF744 STR W8, [X31 + 0x2C]
	0x021FF748 CBZ X22, 0x21FFA44
	0x021FF74C MOV X0, X22
	0x021FF750 MOV X1, X31
	0x021FF754 BL 0x3771E88
	0x021FF758 ADD X2, X31, 0x2C
	0x021FF75C MOVZ W3, 0x1
	0x021FF760 MOV X1, X23
	0x021FF764 MOV W4, W31
	0x021FF768 MOV X5, X31
	0x021FF76C BL 0x37792A4
	0x021FF770 MOV W24, W0
	0x021FF774 B 0x21FF77C
	0x021FF778 MOVZ W24, 0x1
	0x021FF77C TBZ X24, 0x0, 0x21FF858
	0x021FF780 LDR W1, [X31 + 0x2C]
	0x021FF784 CMP W1, W26
	0x021FF788 B.GE 0x21FF858
	0x021FF78C MOV X0, X23
	0x021FF790 MOV X2, X31
	0x021FF794 BL 0x3222A1C
	0x021FF798 AND W8, W0, 0xFFFF
	0x021FF79C CMP W8, 0x2F
	0x021FF7A0 B.EQ 0x21FF85C
	0x021FF7A4 CBZ X22, 0x21FFA44
	0x021FF7A8 MOV X0, X22
	0x021FF7AC MOV X1, X31
	0x021FF7B0 BL 0x3771E78
	0x021FF7B4 ADD X2, X31, 0x2C
	0x021FF7B8 MOV X1, X23
	0x021FF7BC MOV W3, W31
	0x021FF7C0 MOV W4, W31
	0x021FF7C4 MOV X5, X31
	0x021FF7C8 BL 0x37792A4
	0x021FF7CC TBNZ X0, 0x0, 0x21FF85C
	0x021FF7D0 MOV X0, X22
	0x021FF7D4 MOV X1, X31
	0x021FF7D8 BL 0x37721A4
	0x021FF7DC UBFM X8, X1, 0x20, 0x3F
	0x021FF7E0 CMP W8, 0x1
	0x021FF7E4 STP X0, X1, [X31]
	0x021FF7E8 B.LT 0x21FF90C
	0x021FF7EC MOV W25, W31
	0x021FF7F0 MOV X0, X22
	0x021FF7F4 MOV X1, X31
	0x021FF7F8 BL 0x37721A4
	0x021FF7FC LDR X2, [X27]
	0x021FF800 STP X0, X1, [X31]
	0x021FF804 ADD X0, X31, 0x0
	0x021FF808 MOV W1, W25
	0x021FF80C BL 0x24FCF28

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X3+56]
	007 Move X19, X3
	008 Move X21, X2
	009 Move W22, W1
	010 Move X20, X0
	011 Compare X8, 0
	012 JumpIfNotEqual {15}
	013 Move X0, X19
	014 Call 0x1C5D6E0
	015 Compare X20, 0
	016 JumpIfEqual {131}
	017 Move X8, [X19+56]
	018 Move X0, [X8]
	019 Move W8, [X0+309]
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {25}
	024 Call 0x1C5D684
	025 Move X8, [X20]
	026 Move W9, [X0+304]
	027 Move W10, [X8+304]
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move X10, [X8+200]
	030 Add X9, X10, X9
	031 NotImplemented "Instruction LDUR not yet implemented."
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X4, [X8+600]
	034 Move X3, [X8+608]
	035 And W1, W22, 1
	036 Move X0, X20
	037 Move X2, X21
	038 Move X20, [X31+32]
	039 Move X19, [X31+40]
	040 Move X22, [X31+16]
	041 Move X21, [X31+24]
	042 Move X30, [X31+48]
	043 CallNoReturn X4
	044 Move X0, 0x1EF5000
	045 Move X0, [X0+2760]
	046 Call 0x1C17D08
	047 Move W1, 5
	048 Call 0x1C17D6C
	049 Move X21, X0
	050 Call 0x19913C0
	051 Move X0, 0x1F1D000
	052 Move X0, [X0+3448]
	053 Call 0x1C17D08
	054 Move X2, X0
	055 Move X0, X21
	056 Move X1, X31
	057 Call 0x1994444
	058 Move X8, [X19+56]
	059 Move X0, 0x1EF5000
	060 Move X22, [X8+8]
	061 Move X0, [X0+1728]
	062 Call 0x1C17D08
	063 Call 0x19913D0
	064 Move X0, X22
	065 Move X1, X31
	066 Call Type.GetTypeFromHandle, X0
	067 Move X22, X0
	068 Call 0x19913C0
	069 Move X8, [X22]
	070 Move X0, X22
	071 Move X9, [X8+424]
	072 Move X1, [X8+432]
	073 NotImplemented "Instruction BLR not yet implemented."
	074 Move X22, X0
	075 Move X0, X21
	076 Call 0x19913C0
	077 Move W1, 1
	078 Move X0, X21
	079 Move X2, X22
	080 Call 0x1994444
	081 Move X0, X21
	082 Call 0x19913C0
	083 Move X0, 0x1F1D000
	084 Move X0, [X0+3456]
	085 Call 0x1C17D08
	086 Move X2, X0
	087 Move W1, 2
	088 Move X0, X21
	089 Call 0x1994444
	090 Move X0, X20
	091 Call 0x19913C0
	092 Move X0, X20
	093 Move X1, X31
	094 Call "il2cpp_vm_object_is_inst", X0
	095 Move X20, X0
	096 Call 0x19913C0
	097 Move X8, [X20]
	098 Move X0, X20
	099 Move X9, [X8+424]
	100 Move X1, [X8+432]
	101 NotImplemented "Instruction BLR not yet implemented."
	102 Move X20, X0
	103 Move X0, X21
	104 Call 0x19913C0
	105 Move W1, 3
	106 Move X0, X21
	107 Move X2, X20
	108 Call 0x1994444
	109 Move X0, X21
	110 Call 0x19913C0
	111 Move X0, 0x1EFD000
	112 Move X0, [X0+2480]
	113 Call 0x1C17D08
	114 Move X2, X0
	115 Move W1, 4
	116 Move X0, X21
	117 Call 0x1994444
	118 Move X0, X21
	119 Move X1, X31
	120 Call String.Concat, X0
	121 Move X20, X0
	122 Move X0, 0x1EFD000
	123 Move X0, [X0+1400]
	124 Call 0x1C17D08
	125 Call 0x1C17F10
	126 Move X1, X20
	127 Move X2, X31
	128 Move X21, X0
	129 Call ArgumentException..ctor, X0, X1
	130 Move X0, X21
	131 Move X0, 0x1EFA000
	132 Move X0, [X0+1320]
	133 Call 0x1C17D08
	134 Call 0x1C17F10
	135 Move X20, X0
	136 Move X0, 0x1F1D000
	137 Move X0, [X0+3424]
	138 Call 0x1C17D08
	139 Move X1, X0
	140 Move X0, X20
	141 Move X2, X31
	142 Call ArgumentNullException..ctor, X0, X1
	143 Move X0, X20
	144 Move X1, X19
	145 Call 0x1C17DEC

Method: System.Void WriteValueIntoState(UnityEngine.InputSystem.InputControl`1<TValue> control, TValue value, System.Void* statePtr)

Disassembly:
	0x021FFA34 LDP X26, X25, [X31 + 0x40]
	0x021FFA38 LDP X30, X27, [X31 + 0x30]
	0x021FFA3C ADD X31, X31, 0x80
	0x021FFA40 RET
	0x021FFA44 BL 0x1C16F20
	0x021FFA48 MOV X0, X23
	0x021FFA4C MOV X1, X22
	0x021FFA50 BL 0x1C171E0
	0x021FFA54 SUB X31, X31, 0x50
	0x021FFA58 STR X30, [X31 + 0x10]
	0x021FFA5C STP X24, X23, [X31 + 0x20]
	0x021FFA60 STP X22, X21, [X31 + 0x30]
	0x021FFA64 STP X20, X19, [X31 + 0x40]
	0x021FFA68 LDR X8, [X3 + 0x38]
	0x021FFA6C MOV X19, X3
	0x021FFA70 MOV W20, W2
	0x021FFA74 MOV X21, X1
	0x021FFA78 MOV X22, X0
	0x021FFA7C CBNZ X8, 0x21FFAA8
	0x021FFA80 ADRP X0, 0x1F1C000
	0x021FFA84 LDR X0, [X0 + 0xD40]
	0x021FFA88 BL 0x1C16CF4
	0x021FFA8C ADRP X0, 0x1F1C000
	0x021FFA90 LDR X0, [X0 + 0xD48]
	0x021FFA94 BL 0x1C16CF4
	0x021FFA98 LDR X8, [X19 + 0x38]
	0x021FFA9C CBNZ X8, 0x21FFAA8
	0x021FFAA0 MOV X0, X19
	0x021FFAA4 BL 0x1C5C6E0
	0x021FFAA8 CBZ X22, 0x21FFB28
	0x021FFAAC CBZ X21, 0x21FFB48
	0x021FFAB0 MOV X0, X22
	0x021FFAB4 MOV X1, X31
	0x021FFAB8 BL 0x37720C4
	0x021FFABC UBFM X23, X1, 0x20, 0x3F
	0x021FFAC0 CMP W23, 0x1
	0x021FFAC4 STP X0, X1, [X31]
	0x021FFAC8 B.LT 0x21FFB0C
	0x021FFACC ADRP X24, 0x1F1C000
	0x021FFAD0 LDR X24, [X24 + 0xD48]
	0x021FFAD4 MOV W22, W31
	0x021FFAD8 LDR X2, [X24]
	0x021FFADC ADD X0, X31, 0x0
	0x021FFAE0 MOV W1, W22
	0x021FFAE4 BL 0x24FDB3C
	0x021FFAE8 LDR X8, [X19 + 0x38]
	0x021FFAEC MOV X1, X21
	0x021FFAF0 MOV W2, W20
	0x021FFAF4 LDR X3, [X8]
	0x021FFAF8 BL 0x21FFB84
	0x021FFAFC CBNZ X0, 0x21FFB10
	0x021FFB00 ADD W22, W22, 0x1
	0x021FFB04 CMP W23, W22
	0x021FFB08 B.NE 0x21FFAD8
	0x021FFB0C MOV X0, X31
	0x021FFB10 LDP X20, X19, [X31 + 0x40]
	0x021FFB14 LDP X22, X21, [X31 + 0x30]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X3+56]
	007 Move X19, X3
	008 Move X20, X2
	009 Move X22, X1
	010 Move X21, X0
	011 Compare X8, 0
	012 JumpIfNotEqual {15}
	013 Move X0, X19
	014 Call 0x1C5D6E0
	015 Compare X21, 0
	016 JumpIfEqual {43}
	017 Compare X20, 0
	018 JumpIfEqual {50}
	019 Move X8, [X19+56]
	020 Move X0, X22
	021 Move X1, [X8+16]
	022 Move X8, [X1]
	023 NotImplemented "Instruction BLR not yet implemented."
	024 Move X8, [X19+56]
	025 Move X19, X0
	026 Move X8, [X8+32]
	027 Move X9, [X8]
	028 Move X0, X8
	029 NotImplemented "Instruction BLR not yet implemented."
	030 Move X8, [X21]
	031 Move W2, W0
	032 Move X0, X21
	033 Move X1, X19
	034 Move X5, [X8+472]
	035 Move X4, [X8+480]
	036 Move X3, X20
	037 Move X20, [X31+32]
	038 Move X19, [X31+40]
	039 Move X22, [X31+16]
	040 Move X21, [X31+24]
	041 Move X30, [X31+48]
	042 CallNoReturn X5
	043 Move X0, 0x1EFA000
	044 Move X0, [X0+1320]
	045 Call 0x1C17D08
	046 Call 0x1C17F10
	047 Move X20, X0
	048 Move X0, 0x1F1D000
	049 Move X0, [X0+3424]
	050 Move X0, 0x1EFA000
	051 Move X0, [X0+1320]
	052 Call 0x1C17D08
	053 Call 0x1C17F10
	054 Move X20, X0
	055 Move X0, 0x1F1D000
	056 Move X0, [X0+3464]
	057 Call 0x1C17D08
	058 Move X1, X0
	059 Move X0, X20
	060 Move X2, X31
	061 Call ArgumentNullException..ctor, X0, X1
	062 Move X0, X20
	063 Move X1, X19
	064 Call 0x1C17DEC

Method: System.Void WriteValueIntoState(UnityEngine.InputSystem.InputControl`1<TValue> control, System.Void* statePtr)

Disassembly:
	0x021FF4E0 CSET W8, EQ
	0x021FF4E4 ORR W8, W8, W27, 0x0
	0x021FF4E8 CSEL X24, X24, X0, EQ
	0x021FF4EC TBZ X8, 0x0, 0x21FF508
	0x021FF4F0 ADD W25, W25, 0x1
	0x021FF4F4 CMP W26, W25
	0x021FF4F8 B.NE 0x21FF4B0
	0x021FF4FC B 0x21FF50C
	0x021FF500 MOV X24, X31
	0x021FF504 B 0x21FF50C
	0x021FF508 MOV X24, X0
	0x021FF50C MOV X0, X24
	0x021FF510 LDP X20, X19, [X31 + 0x60]
	0x021FF514 LDP X22, X21, [X31 + 0x50]
	0x021FF518 LDP X24, X23, [X31 + 0x40]
	0x021FF51C LDP X26, X25, [X31 + 0x30]
	0x021FF520 LDP X28, X27, [X31 + 0x20]
	0x021FF524 LDR X30, [X31 + 0x10]
	0x021FF528 ADD X31, X31, 0x70
	0x021FF52C RET
	0x021FF530 BL 0x1C16F20
	0x021FF534 SUB X31, X31, 0x80
	0x021FF538 STP X30, X27, [X31 + 0x30]
	0x021FF53C STP X26, X25, [X31 + 0x40]
	0x021FF540 STP X24, X23, [X31 + 0x50]
	0x021FF544 STP X22, X21, [X31 + 0x60]
	0x021FF548 STP X20, X19, [X31 + 0x70]
	0x021FF54C STR W2, [X31 + 0x2C]
	0x021FF550 LDR X8, [X5 + 0x38]
	0x021FF554 MOV X21, X5
	0x021FF558 MOV W20, W4
	0x021FF55C MOV X19, X3
	0x021FF560 MOV W24, W2
	0x021FF564 MOV X23, X1
	0x021FF568 MOV X22, X0
	0x021FF56C CBNZ X8, 0x21FF5B0
	0x021FF570 ADRP X0, 0x1F1C000
	0x021FF574 LDR X0, [X0 + 0xDB8]
	0x021FF578 BL 0x1C16CF4
	0x021FF57C ADRP X0, 0x1F1C000
	0x021FF580 LDR X0, [X0 + 0xDC0]
	0x021FF584 BL 0x1C16CF4
	0x021FF588 ADRP X0, 0x1F1C000
	0x021FF58C LDR X0, [X0 + 0xDC8]
	0x021FF590 BL 0x1C16CF4
	0x021FF594 ADRP X0, 0x1F1C000
	0x021FF598 LDR X0, [X0 + 0xDD0]
	0x021FF59C BL 0x1C16CF4
	0x021FF5A0 LDR X8, [X21 + 0x38]
	0x021FF5A4 CBNZ X8, 0x21FF5B0
	0x021FF5A8 MOV X0, X21
	0x021FF5AC BL 0x1C5C6E0
	0x021FF5B0 STP X31, X31, [X31 + 0x10]
	0x021FF5B4 STP X31, X31, [X31]
	0x021FF5B8 CBZ X23, 0x21FFA44
	0x021FF5BC LDR W26, [X23 + 0x10]
	0x021FF5C0 MOV X0, X23
	0x021FF5C4 MOV W1, W24
	0x021FF5C8 MOV X2, X31
	0x021FF5CC BL 0x3222A1C
	0x021FF5D0 AND W8, W0, 0xFFFF
	0x021FF5D4 CMP W8, 0x3C
	0x021FF5D8 B.NE 0x21FF610
	0x021FF5DC ADD W8, W24, 0x1
	0x021FF5E0 STR W8, [X31 + 0x2C]
	0x021FF5E4 CBZ X22, 0x21FFA44
	0x021FF5E8 MOV X0, X22

ISIL:
	001 Move [X31-64], X29
	002 Move [X31-56], X30
	003 Move [X31+16], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Add X29, X31, 0
	009 Subtract X31, X31, 32
	010 NotImplemented "Instruction MRS not yet implemented."
	011 Move X8, [X23+40]
	012 Move X20, X2
	013 Move X19, X1
	014 Move X21, X0
	015 Move [X29-8], X8
	016 Move X8, [X2+56]
	017 Compare X8, 0
	018 JumpIfNotEqual {22}
	019 Move X0, X20
	020 Call 0x1C5D6E0
	021 Move X8, [X20+56]
	022 Move X9, [X8+16]
	023 Add X10, X31, 0
	024 Move W9, [X9+252]
	025 Add X9, X9, 15
	026 And X9, X9, 0x1FFFFFFFF
	027 Subtract X22, X10, X9
	028 Add X31, X22, 0
	029 Compare X21, 0
	030 JumpIfEqual {61}
	031 Move X1, [X8+8]
	032 Subtract X3, X29, 24
	033 Move X2, X21
	034 Move X4, X22
	035 Move X0, [X1]
	036 Move [X29-24], X22
	037 Move X8, [X1+16]
	038 NotImplemented "Instruction BLR not yet implemented."
	039 Move X8, [X21]
	040 Move [X29-24], X22
	041 Move [X29-16], X19
	042 Subtract X3, X29, 24
	043 Move X2, X21
	044 Move X1, [X8+608]
	045 Move X4, X19
	046 Move X0, [X1+8]
	047 Move X8, [X1+16]
	048 NotImplemented "Instruction BLR not yet implemented."
	049 Move X8, [X23+40]
	050 NotImplemented "Instruction LDUR not yet implemented."
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Add X31, X29, 0
	053 Move X20, [X31+48]
	054 Move X19, [X31+56]
	055 Move X22, [X31+32]
	056 Move X21, [X31+40]
	057 Move X23, [X31+16]
	058 Move X29, [X31+64]
	059 Move X30, [X31+72]
	060 Return 
	061 Move X0, 0x1EFA000
	062 Move X0, [X0+1320]
	063 Call 0x1C17D08
	064 Call 0x1C17F10
	065 Move X19, X0
	066 Move X0, 0x1F1D000
	067 Move X0, [X0+3424]
	068 Call 0x1C17D08
	069 Move X1, X0
	070 Move X0, X19
	071 Move X2, X31
	072 Call ArgumentNullException..ctor, X0, X1
	073 Move X0, X19
	074 Move X1, X20
	075 Call 0x1C17DEC
	076 Call 0x3EB2B20

Method: System.Void WriteValueIntoState(UnityEngine.InputSystem.InputControl`1<TValue> control, TValue value, ref TState state)

Disassembly:
	0x021FFDAC BL 0x1C16CF4
	0x021FFDB0 LDR X26, [X19 + 0x38]
	0x021FFDB4 CBNZ X26, 0x21FFDC4
	0x021FFDB8 MOV X0, X19
	0x021FFDBC BL 0x1C5C6E0
	0x021FFDC0 LDR X26, [X19 + 0x38]
	0x021FFDC4 LDR X8, [X26]
	0x021FFDC8 ADD X9, X31, 0x0
	0x021FFDCC LDR W24, [X8 + 0xFC]
	0x021FFDD0 ADD X10, X24, 0xF
	0x021FFDD4 AND X10, X10, 0x1FFFFFFFF
	0x021FFDD8 SUB X22, X9, X10
	0x021FFDDC ADD X31, X22, 0x0
	0x021FFDE0 LDR W8, [X8 + 0x28]
	0x021FFDE4 MOV X0, X22
	0x021FFDE8 MOV X2, X24
	0x021FFDEC CMP W8, 0x0
	0x021FFDF0 SUB X8, X29, 0x38
	0x021FFDF4 CSEL X1, X21, X8, LT
	0x021FFDF8 BL 0x3EB1AC0
	0x021FFDFC LDR X0, [X26]
	0x021FFE00 MOV X1, X22
	0x021FFE04 BL 0x1C16ED4
	0x021FFE08 TBZ X0, 0x0, 0x21FFED0
	0x021FFE0C CBZ X23, 0x21FFEF0
	0x021FFE10 ADRP X8, 0x1F1C000
	0x021FFE14 LDR X8, [X8 + 0xDD8]
	0x021FFE18 MOVI V0.2D, 0x0
	0x021FFE1C SUB X0, X29, 0x60
	0x021FFE20 MOV X1, X23
	0x021FFE24 LDR X2, [X8]
	0x021FFE28 STP V0, V0, [X29 - 0x60]
	0x021FFE2C BL 0x249A560
	0x021FFE30 LDR X19, [X19 + 0x38]
	0x021FFE34 MOV X0, X22
	0x021FFE38 MOV X2, X24
	0x021FFE3C LDR X8, [X19]
	0x021FFE40 LDR W8, [X8 + 0x28]
	0x021FFE44 CMP W8, 0x0
	0x021FFE48 SUB X8, X29, 0x38
	0x021FFE4C CSEL X1, X21, X8, LT
	0x021FFE50 BL 0x3EB1AC0
	0x021FFE54 LDR X1, [X19 + 0x8]
	0x021FFE58 LDP V1, V0, [X29 - 0x60]
	0x021FFE5C LDR X0, [X1]
	0x021FFE60 STP V1, V0, [X29 - 0xA0]
	0x021FFE64 LDR X8, [X19]
	0x021FFE68 LDR W8, [X8 + 0x28]
	0x021FFE6C TBNZ X8, 0x1F, 0x21FFE74
	0x021FFE70 LDR X22, [X22]
	0x021FFE74 SUB X8, X29, 0xA0
	0x021FFE78 SUB X9, X29, 0xC
	0x021FFE7C STURB W31, [X29 - 0xC]
	0x021FFE80 STP X8, X22, [X29 - 0x30]
	0x021FFE84 STP X31, X9, [X29 - 0x20]
	0x021FFE88 LDR X8, [X1 + 0x10]
	0x021FFE8C SUB X3, X29, 0x30
	0x021FFE90 SUB X4, X29, 0x80
	0x021FFE94 MOV X2, X31
	0x021FFE98 BLR X8
	0x021FFE9C LDP V1, V0, [X29 - 0x80]
	0x021FFEA0 STP V1, V0, [X20]
	0x021FFEA4 LDR X8, [X25 + 0x28]
	0x021FFEA8 LDUR X9, [X29 - 0x8]
	0x021FFEAC CMP X8, X9
	0x021FFEB0 B.NE 0x21FFF2C
	0x021FFEB4 ADD X31, X29, 0x0
	0x021FFEB8 LDP X20, X19, [X31 + 0x40]
	0x021FFEBC LDP X22, X21, [X31 + 0x30]
	0x021FFEC0 LDP X24, X23, [X31 + 0x20]
	0x021FFEC4 LDP X26, X25, [X31 + 0x10]
	0x021FFEC8 LDP X29, X30, [X31], #0x50
	0x021FFECC RET
	0x021FFED0 ADRP X0, 0x1EF9000
	0x021FFED4 LDR X0, [X0 + 0x528]
	0x021FFED8 BL 0x1C16D08
	0x021FFEDC BL 0x1C16F10
	0x021FFEE0 MOV X20, X0
	0x021FFEE4 ADRP X0, 0x1F1C000
	0x021FFEE8 LDR X0, [X0 + 0xDE0]
	0x021FFEEC B 0x21FFF0C
	0x021FFEF0 ADRP X0, 0x1EF9000
	0x021FFEF4 LDR X0, [X0 + 0x528]
	0x021FFEF8 BL 0x1C16D08
	0x021FFEFC BL 0x1C16F10
	0x021FFF00 MOV X20, X0
	0x021FFF04 ADRP X0, 0x1F1C000
	0x021FFF08 LDR X0, [X0 + 0xD20]
	0x021FFF0C BL 0x1C16D08
	0x021FFF10 MOV X1, X0
	0x021FFF14 MOV X0, X20
	0x021FFF18 MOV X2, X31
	0x021FFF1C BL 0x330E100
	0x021FFF20 MOV X0, X20
	0x021FFF24 MOV X1, X19
	0x021FFF28 BL 0x1C16DEC
	0x021FFF2C BL 0x3EB1B20
	0x021FFF30 SUB X31, X31, 0xF0
	0x021FFF34 STP X30, X25, [X31 + 0xB0]
	0x021FFF38 STP X24, X23, [X31 + 0xC0]
	0x021FFF3C STP X22, X21, [X31 + 0xD0]
	0x021FFF40 STP X20, X19, [X31 + 0xE0]
	0x021FFF44 LDR X9, [X5 + 0x38]
	0x021FFF48 MOV W23, W4
	0x021FFF4C MOV X20, X3
	0x021FFF50 MOV X21, X2
	0x021FFF54 MOV X22, X1
	0x021FFF58 MOV X24, X0
	0x021FFF5C MOV X19, X8
	0x021FFF60 CBNZ X9, 0x21FFF88
	0x021FFF64 ADRP X0, 0x1F1C000
	0x021FFF68 LDR X0, [X0 + 0xDE8]
	0x021FFF6C MOV X25, X5
	0x021FFF70 BL 0x1C16CF4
	0x021FFF74 LDR X9, [X25 + 0x38]
	0x021FFF78 CBNZ X9, 0x21FFF88
	0x021FFF7C MOV X0, X25
	0x021FFF80 BL 0x1C5C6E0
	0x021FFF84 LDR X9, [X25 + 0x38]
	0x021FFF88 MOVI V2.2D, 0x0
	0x021FFF8C STP X31, X31, [X31 + 0x78]
	0x021FFF90 STR X31, [X31 + 0x88]
	0x021FFF94 STP V2, V2, [X31 + 0x50]
	0x021FFF98 STP V2, V2, [X31 + 0x30]
	0x021FFF9C LDP V1, V0, [X24]
	0x021FFFA0 AND W6, W23, 0x1
	0x021FFFA4 ADD X0, X31, 0x90
	0x021FFFA8 ADD X3, X31, 0x78
	0x021FFFAC STP V0, V2, [X31 + 0x10]
	0x021FFFB0 STR V1, [X31]
	0x021FFFB4 LDP V0, V1, [X31]
	0x021FFFB8 LDR X7, [X9 + 0x10]
	0x021FFFBC ADD X4, X31, 0x20
	0x021FFFC0 MOV X1, X22
	0x021FFFC4 MOV X2, X21
	0x021FFFC8 MOV X5, X20
	0x021FFFCC STP V0, V1, [X31 + 0x90]
	0x021FFFD0 BL 0x2200524
	0x021FFFD4 TBZ X0, 0x0, 0x2200018
	0x021FFFD8 ADD X0, X31, 0x20
	0x021FFFDC MOV X1, X31
	0x021FFFE0 BL 0x376BC1C
	0x021FFFE4 ADRP X8, 0x1F1C000
	0x021FFFE8 LDR X8, [X8 + 0xDE8]
	0x021FFFEC LDUR V0, [X31 + 0x78]
	0x021FFFF0 LDR X9, [X31 + 0x88]
	0x021FFFF4 MOVI V1.2D, 0x0
	0x021FFFF8 LDR X2, [X8]
	0x021FFFFC ADD X1, X31, 0x90
	0x02200000 MOV X0, X19
	0x02200004 STP V1, V1, [X19]
	0x02200008 STR V0, [X31 + 0x9]
	0x0220000C STR X9, [X31 + 0xA0]
	0x02200010 BL 0x2432978
	0x02200014 B 0x2200020
	0x02200018 MOVI V0.2D, 0x0
	0x0220001C STP V0, V0, [X19]
	0x02200020 LDP X20, X19, [X31 + 0xE0]
	0x02200024 LDP X22, X21, [X31 + 0xD0]
	0x02200028 LDP X24, X23, [X31 + 0xC0]
	0x0220002C LDP X30, X25, [X31 + 0xB0]
	0x02200030 ADD X31, X31, 0xF0
	0x02200034 RET
	0x02200038 SUB X31, X31, 0xF0
	0x0220003C STR X30, [X31 + 0xA0]
	0x02200040 STP X26, X25, [X31 + 0xB0]
	0x02200044 STP X24, X23, [X31 + 0xC0]
	0x02200048 STP X22, X21, [X31 + 0xD0]
	0x0220004C STP X20, X19, [X31 + 0xE0]
	0x02200050 LDR X9, [X6 + 0x38]
	0x02200054 MOV W25, W5
	0x02200058 MOV X20, X4
	0x0220005C MOV X21, X3
	0x02200060 MOV X22, X2
	0x02200064 MOV X23, X1
	0x02200068 MOV X24, X0
	0x0220006C MOV X19, X8
	0x02200070 CBNZ X9, 0x2200098
	0x02200074 ADRP X0, 0x1F1B000
	0x02200078 LDR X0, [X0 + 0xDE8]
	0x0220007C MOV X26, X6
	0x02200080 BL 0x1C16CF4
	0x02200084 LDR X9, [X26 + 0x38]
	0x02200088 CBNZ X9, 0x2200098
	0x0220008C MOV X0, X26
	0x02200090 BL 0x1C5C6E0
	0x02200094 LDR X9, [X26 + 0x38]
	0x02200098 MOVI V0.2D, 0x0
	0x0220009C STP X31, X31, [X31 + 0x68]
	0x022000A0 STR X31, [X31 + 0x78]
	0x022000A4 STP V0, V0, [X31 + 0x40]
	0x022000A8 STP V0, V0, [X31 + 0x20]
	0x022000AC STR V0, [X31 + 0x1]
	0x022000B0 LDR X8, [X9 + 0x10]
	0x022000B4 AND W7, W25, 0x1
	0x022000B8 ADD X4, X31, 0x68
	0x022000BC ADD X5, X31, 0x10
	0x022000C0 MOV X0, X24
	0x022000C4 MOV X1, X23
	0x022000C8 MOV X2, X22
	0x022000CC MOV X3, X21
	0x022000D0 MOV X6, X20
	0x022000D4 STR X8, [X31]
	0x022000D8 BL 0x2200A90
	0x022000DC TBZ X0, 0x0, 0x2200120
	0x022000E0 ADD X0, X31, 0x10
	0x022000E4 MOV X1, X31
	0x022000E8 BL 0x376BC1C
	0x022000EC ADRP X8, 0x1F1B000
	0x022000F0 LDR X8, [X8 + 0xDE8]
	0x022000F4 LDUR V0, [X31 + 0x68]
	0x022000F8 LDR X9, [X31 + 0x78]
	0x022000FC MOVI V1.2D, 0x0
	0x02200100 LDR X2, [X8]
	0x02200104 ADD X1, X31, 0x80
	0x02200108 MOV X0, X19
	0x0220010C STP V1, V1, [X19]
	0x02200110 STR V0, [X31 + 0x8]
	0x02200114 STR X9, [X31 + 0x90]
	0x02200118 BL 0x2432978
	0x0220011C B 0x2200128
	0x02200120 MOVI V0.2D, 0x0
	0x02200124 STP V0, V0, [X19]
	0x02200128 LDP X20, X19, [X31 + 0xE0]
	0x0220012C LDP X22, X21, [X31 + 0xD0]
	0x02200130 LDP X24, X23, [X31 + 0xC0]
	0x02200134 LDP X26, X25, [X31 + 0xB0]
	0x02200138 LDR X30, [X31 + 0xA0]

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Add X29, X31, 0
	014 Subtract X31, X31, 32
	015 NotImplemented "Instruction MRS not yet implemented."
	016 Move X8, [X28+40]
	017 Move X19, X3
	018 Move X23, X2
	019 Move X22, X1
	020 Move [X29-8], X8
	021 Move X8, [X3+56]
	022 Move X21, X0
	023 Compare X8, 0
	024 JumpIfNotEqual {34}
	025 Move X0, 0x1F1D000
	026 Move X0, [X0+3352]
	027 Call 0x1C17CF4
	028 Move X8, [X19+56]
	029 Compare X8, 0
	030 JumpIfNotEqual {34}
	031 Move X0, X19
	032 Call 0x1C5D6E0
	033 Move X8, [X19+56]
	034 Move X9, [X8+40]
	035 Move W24, [X9+252]
	036 Add X9, X31, 0
	037 Add X10, X24, 15
	038 And X10, X10, 0x1FFFFFFFF
	039 Subtract X25, X9, X10
	040 Add X31, X25, 0
	041 Compare X21, 0
	042 JumpIfEqual {101}
	043 Move X0, [X8+8]
	044 Move X8, [X0]
	045 NotImplemented "Instruction BLR not yet implemented."
	046 Move W20, W0
	047 Move X0, X21
	048 Move X1, X31
	049 Call InputControl.get_stateOffsetRelativeToDeviceRoot, X0
	050 Move X8, 0x1F1D000
	051 Move X8, [X8+3352]
	052 Move W26, W0
	053 Add X27, X21, 16
	054 Move X0, [X8]
	055 Move W8, [X0+224]
	056 Compare W8, 0
	057 JumpIfNotEqual {59}
	058 Call 0x1C17DFC
	059 Move X0, X27
	060 Move X1, X31
	061 Call InputStateBlock.get_alignedSizeInBytes, X0
	062 Add W8, W0, W26
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move X8, [X19+56]
	065 Move X0, X23
	066 Move X1, [X8+32]
	067 Move X8, [X1]
	068 NotImplemented "Instruction BLR not yet implemented."
	069 Move X19, X0
	070 Move X0, X25
	071 Move X1, X22
	072 Move X2, X24
	073 Call 0x3EB2AC0
	074 Move X8, [X21]
	075 Move [X29-24], X25
	076 Move [X29-16], X19
	077 Subtract X3, X29, 24
	078 Move X2, X21
	079 Move X1, [X8+608]
	080 Move X4, X19
	081 Move X0, [X1+8]
	082 Move X8, [X1+16]
	083 NotImplemented "Instruction BLR not yet implemented."
	084 Move X8, [X28+40]
	085 NotImplemented "Instruction LDUR not yet implemented."
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Add X31, X29, 0
	088 Move X20, [X31+80]
	089 Move X19, [X31+88]
	090 Move X22, [X31+64]
	091 Move X21, [X31+72]
	092 Move X24, [X31+48]
	093 Move X23, [X31+56]
	094 Move X26, [X31+32]
	095 Move X25, [X31+40]
	096 Move X28, [X31+16]
	097 Move X27, [X31+24]
	098 Move X29, [X31+96]
	099 Move X30, [X31+104]
	100 Return 
	101 Move X0, 0x1EFA000
	102 Move X0, [X0+1320]
	103 Call 0x1C17D08
	104 Call 0x1C17F10
	105 Move X20, X0
	106 Move X0, 0x1F1D000
	107 Move X0, [X0+3424]
	108 Call 0x1C17D08
	109 Move X1, X0
	110 Move X0, X20
	111 Move X2, X31
	112 Call ArgumentNullException..ctor, X0, X1
	113 Move X0, X20
	114 Move X0, 0x1EF5000
	115 Move X0, [X0+2512]
	116 Call 0x1C17D08
	117 Move W1, 5
	118 Call 0x1C17D6C
	119 Move X22, X0
	120 Move X0, X21
	121 Call 0x19913C0
	122 Move X0, X21
	123 Move X1, X31
	124 Call InputControl.get_path, X0
	125 Move X23, X0
	126 Move X0, X22
	127 Call 0x19913C0
	128 Move X0, X22
	129 Move X1, X23
	130 Call 0x19990B4
	131 Move X0, X22
	132 Move X1, X31
	133 Move X2, X23
	134 Call 0x1994444
	135 Move X0, X21
	136 Call 0x19913C0
	137 Move X0, X21
	138 Move X1, X31
	139 Call InputControl.get_stateOffsetRelativeToDeviceRoot, X0
	140 Move [X29-24], W0
	141 Move X23, 0x1EFD000
	142 Move X23, [X23+1824]
	143 Move X0, X23
	144 Call 0x1C17D08
	145 Subtract X1, X29, 24
	146 Call 0x1C17E04
	147 Move X24, X0
	148 Move X0, X22
	149 Call 0x19913C0
	150 Move X0, X22
	151 Move X1, X24
	152 Call 0x19990B4
	153 Move W1, 1
	154 Move X0, X22
	155 Move X2, X24
	156 Call 0x1994444
	157 Move X0, X21
	158 Call 0x19913C0
	159 Move X0, 0x1F1D000
	160 Move X0, [X0+3352]
	161 Call 0x1C17D08
	162 Call 0x19913D0
	163 Move W8, [X21+28]
	164 Move X0, X23
	165 Move [X29-28], W8
	166 Call 0x1C17D08
	167 Subtract X1, X29, 28
	168 Call 0x1C17E04
	169 Move X21, X0
	170 Move X0, X22
	171 Call 0x19913C0
	172 Move X0, X22
	173 Move X1, X21
	174 Call 0x19990B4
	175 Move W1, 2
	176 Move X0, X22
	177 Move X2, X21
	178 Call 0x1994444
	179 Move X8, [X19+56]
	180 Move X0, 0x1EF4000
	181 Move X21, [X8+16]
	182 Move X0, [X0+1728]
	183 Call 0x1C17D08
	184 Call 0x19913D0
	185 Move X0, X21
	186 Move X1, X31
	187 Call Type.GetTypeFromHandle, X0
	188 Move X21, X0
	189 Call 0x19913C0
	190 Move X8, [X21]
	191 Move X0, X21
	192 Move X9, [X8+424]
	193 Move X1, [X8+432]
	194 NotImplemented "Instruction BLR not yet implemented."
	195 Move X21, X0
	196 Move X0, X22
	197 Call 0x19913C0
	198 Move X0, X22
	199 Move X1, X21
	200 Call 0x19990B4
	201 Move W1, 3
	202 Move X0, X22
	203 Move X2, X21
	204 Call 0x1994444
	205 Move [X29-32], W20
	206 Move X0, 0x1EF4000
	207 Move X0, [X0+1880]
	208 Call 0x1C17D08
	209 Subtract X1, X29, 32
	210 Call 0x1C17E04
	211 Move X20, X0
	212 Move X0, X22
	213 Call 0x19913C0
	214 Move X0, X22
	215 Move X1, X20
	216 Call 0x19990B4
	217 Move W1, 4
	218 Move X0, X22
	219 Move X2, X20
	220 Call 0x1994444
	221 Move X0, 0x1F1C000
	222 Move X0, [X0+3472]
	223 Call 0x1C17D08
	224 Move X1, X22
	225 Move X2, X31
	226 Call String.Format, X0, X1
	227 Move X20, X0
	228 Move X0, 0x1EFC000
	229 Move X0, [X0+1400]
	230 Call 0x1C17D08
	231 Call 0x1C17F10
	232 Move X21, X0
	233 Move X0, 0x1F1C000
	234 Move X0, [X0+3480]
	235 Call 0x1C17D08
	236 Move X2, X0
	237 Move X0, X21
	238 Move X1, X20
	239 Move X3, X31
	240 Call ArgumentException..ctor, X0, X1, X2
	241 Move X0, X21
	242 Move X1, X19
	243 Call 0x1C17DEC
	244 Call 0x3EB2B20

Method: System.Void WriteValueIntoEvent(UnityEngine.InputSystem.InputControl control, TValue value, UnityEngine.InputSystem.LowLevel.InputEventPtr eventPtr)

Disassembly:
	0x021FF20C B.CS 0x21FF380
	0x021FF210 LDP X0, X1, [X28 - 0x8]
	0x021FF214 MOV X2, X31
	0x021FF218 BL 0x37577E0
	0x021FF21C ADD X2, X31, 0x1C
	0x021FF220 MOVZ W3, 0x2
	0x021FF224 MOV X1, X20
	0x021FF228 MOV W4, W31
	0x021FF22C MOV X5, X31
	0x021FF230 BL 0x37792A4
	0x021FF234 TBZ X0, 0x0, 0x21FF2BC
	0x021FF238 LDR X8, [X23 + 0x148]
	0x021FF23C CBZ X8, 0x21FF384
	0x021FF240 LDR W9, [X8 + 0x18]
	0x021FF244 CMP X22, X9
	0x021FF248 B.CS 0x21FF380
	0x021FF24C ADD X8, X8, X22, 0x3, LSL
	0x021FF250 LDR X24, [X8 + 0x20]
	0x021FF254 LDP W8, W1, [X31 + 0x18]
	0x021FF258 CMP W1, W8
	0x021FF25C B.GE 0x21FF2C4
	0x021FF260 MOV X0, X20
	0x021FF264 MOV X2, X31
	0x021FF268 BL 0x3222A1C
	0x021FF26C AND W8, W0, 0xFFFF
	0x021FF270 CMP W8, 0x2F
	0x021FF274 B.NE 0x21FF2C4
	0x021FF278 LDR X8, [X19 + 0x38]
	0x021FF27C LDR W9, [X31 + 0x1C]
	0x021FF280 LDR X3, [X31 + 0x8]
	0x021FF284 MOV X0, X24
	0x021FF288 LDR X5, [X8 + 0x10]
	0x021FF28C LDR W8, [X31 + 0x14]
	0x021FF290 ADD W2, W9, 0x1
	0x021FF294 MOV X1, X20
	0x021FF298 AND W4, W8, 0x1
	0x021FF29C BL 0x21FF408
	0x021FF2A0 LDR W9, [X31 + 0x4]
	0x021FF2A4 CMP X0, 0x0
	0x021FF2A8 CSET W8, EQ
	0x021FF2AC MOV X24, X0
	0x021FF2B0 ORR W8, W9, W8, 0x0
	0x021FF2B4 TBNZ X8, 0x0, 0x21FF344
	0x021FF2B8 B 0x21FF35C
	0x021FF2BC STR W29, [X31 + 0x1C]
	0x021FF2C0 B 0x21FF344
	0x021FF2C4 LDR X8, [X19 + 0x38]
	0x021FF2C8 LDR X1, [X8]
	0x021FF2CC LDRB W8, [X1 + 0x135]
	0x021FF2D0 TBNZ X8, 0x0, 0x21FF2E0
	0x021FF2D4 MOV X0, X1
	0x021FF2D8 BL 0x1C5C684
	0x021FF2DC MOV X1, X0
	0x021FF2E0 MOV X0, X24
	0x021FF2E4 BL 0x1C16E00
	0x021FF2E8 LDR X8, [X19 + 0x38]
	0x021FF2EC MOV X26, X0
	0x021FF2F0 LDR X25, [X8]
	0x021FF2F4 LDRB W8, [X25 + 0x135]
	0x021FF2F8 TBNZ X8, 0x0, 0x21FF308
	0x021FF2FC MOV X0, X25
	0x021FF300 BL 0x1C5C684
	0x021FF304 MOV X25, X0
	0x021FF308 CBZ X26, 0x21FF340
	0x021FF30C MOV X0, X26
	0x021FF310 MOV X1, X25
	0x021FF314 BL 0x1C16E00
	0x021FF318 CBZ X0, 0x21FF388
	0x021FF31C LDR W8, [X31 + 0x14]
	0x021FF320 MOV X24, X0
	0x021FF324 TBZ X8, 0x0, 0x21FF35C
	0x021FF328 LDR X8, [X19 + 0x38]
	0x021FF32C LDR X0, [X31 + 0x8]
	0x021FF330 MOV X1, X24
	0x021FF334 LDR X2, [X8 + 0x18]
	0x021FF338 BL 0x2DFACEC
	0x021FF33C B 0x21FF344
	0x021FF340 MOV X24, X31
	0x021FF344 ADD X22, X22, 0x1
	0x021FF348 CMP X21, X22
	0x021FF34C ADD X28, X28, 0x10
	0x021FF350 B.NE 0x21FF204
	0x021FF354 B 0x21FF35C
	0x021FF358 MOV X24, X31
	0x021FF35C MOV X0, X24
	0x021FF360 LDP X20, X19, [X31 + 0x70]
	0x021FF364 LDP X22, X21, [X31 + 0x60]
	0x021FF368 LDP X24, X23, [X31 + 0x50]
	0x021FF36C LDP X26, X25, [X31 + 0x40]
	0x021FF370 LDP X28, X27, [X31 + 0x30]
	0x021FF374 LDP X29, X30, [X31 + 0x20]
	0x021FF378 ADD X31, X31, 0x80
	0x021FF37C RET
	0x021FF380 BL 0x1C16F28
	0x021FF384 BL 0x1C16F20
	0x021FF388 MOV X0, X26
	0x021FF38C MOV X1, X25
	0x021FF390 BL 0x1C171E0
	0x021FF394 ADRP X0, 0x1F1C000
	0x021FF398 LDR X0, [X0 + 0xDA8]
	0x021FF39C BL 0x1C16D08
	0x021FF3A0 MOV X21, X0
	0x021FF3A4 ADRP X0, 0x1F1C000
	0x021FF3A8 LDR X0, [X0 + 0xDB0]
	0x021FF3AC BL 0x1C16D08
	0x021FF3B0 MOV X2, X0
	0x021FF3B4 MOV X0, X21
	0x021FF3B8 MOV X1, X20
	0x021FF3BC MOV X3, X31
	0x021FF3C0 BL 0x32274B8
	0x021FF3C4 MOV X20, X0
	0x021FF3C8 ADRP X0, 0x1EFC000
	0x021FF3CC LDR X0, [X0 + 0x578]
	0x021FF3D0 BL 0x1C16D08
	0x021FF3D4 BL 0x1C16F10
	0x021FF3D8 MOV X21, X0
	0x021FF3DC ADRP X0, 0x1EFF000
	0x021FF3E0 LDR X0, [X0 + 0x120]
	0x021FF3E4 BL 0x1C16D08
	0x021FF3E8 MOV X2, X0
	0x021FF3EC MOV X0, X21
	0x021FF3F0 MOV X1, X20
	0x021FF3F4 MOV X3, X31
	0x021FF3F8 BL 0x330E16C
	0x021FF3FC MOV X0, X21
	0x021FF400 MOV X1, X19
	0x021FF404 BL 0x1C16DEC
	0x021FF408 SUB X31, X31, 0x70
	0x021FF40C STR X30, [X31 + 0x10]
	0x021FF410 STP X28, X27, [X31 + 0x20]
	0x021FF414 STP X26, X25, [X31 + 0x30]
	0x021FF418 STP X24, X23, [X31 + 0x40]
	0x021FF41C STP X22, X21, [X31 + 0x50]
	0x021FF420 STP X20, X19, [X31 + 0x60]
	0x021FF424 LDR X8, [X5 + 0x38]
	0x021FF428 MOV X19, X5
	0x021FF42C MOV W20, W4
	0x021FF430 MOV X21, X3
	0x021FF434 MOV W22, W2
	0x021FF438 MOV X23, X1
	0x021FF43C MOV X24, X0
	0x021FF440 CBNZ X8, 0x21FF46C
	0x021FF444 ADRP X0, 0x1F1C000
	0x021FF448 LDR X0, [X0 + 0xD40]
	0x021FF44C BL 0x1C16CF4
	0x021FF450 ADRP X0, 0x1F1C000
	0x021FF454 LDR X0, [X0 + 0xD48]
	0x021FF458 BL 0x1C16CF4
	0x021FF45C LDR X8, [X19 + 0x38]
	0x021FF460 CBNZ X8, 0x21FF46C
	0x021FF464 MOV X0, X19
	0x021FF468 BL 0x1C5C6E0
	0x021FF46C CBZ X24, 0x21FF530
	0x021FF470 MOV X0, X24
	0x021FF474 MOV X1, X31
	0x021FF478 BL 0x37720C4
	0x021FF47C STP X0, X1, [X31]
	0x021FF480 UBFM X26, X1, 0x20, 0x3F
	0x021FF484 MOV X0, X23
	0x021FF488 MOV W1, W22
	0x021FF48C MOV X2, X31
	0x021FF490 BL 0x3779534
	0x021FF494 CMP W26, 0x1
	0x021FF498 B.LT 0x21FF500
	0x021FF49C ADRP X28, 0x1F1C000
	0x021FF4A0 LDR X28, [X28 + 0xD48]
	0x021FF4A4 MOV W25, W31
	0x021FF4A8 MOV X24, X31
	0x021FF4AC AND W27, W0, W20, 0x0
	0x021FF4B0 LDR X2, [X28]
	0x021FF4B4 ADD X0, X31, 0x0
	0x021FF4B8 MOV W1, W25
	0x021FF4BC BL 0x24FDB3C
	0x021FF4C0 LDR X8, [X19 + 0x38]
	0x021FF4C4 AND W4, W20, 0x1
	0x021FF4C8 MOV X1, X23
	0x021FF4CC MOV W2, W22
	0x021FF4D0 LDR X5, [X8 + 0x10]
	0x021FF4D4 MOV X3, X21
	0x021FF4D8 BL 0x21FF534
	0x021FF4DC CMP X0, 0x0

ISIL:
	001 Move [X31-64], X29
	002 Move [X31-56], X30
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Add X29, X31, 0
	010 Subtract X31, X31, 48
	011 NotImplemented "Instruction MRS not yet implemented."
	012 Move X8, [X24+40]
	013 Move X19, X3
	014 Move X21, X1
	015 Move X20, X0
	016 Move [X29-8], X8
	017 Move [X29-48], X2
	018 Move X8, [X3+56]
	019 Compare X8, 0
	020 JumpIfNotEqual {24}
	021 Move X0, X19
	022 Call 0x1C5D6E0
	023 Move X8, [X19+56]
	024 Move X8, [X8+16]
	025 Move W23, [X8+252]
	026 Add X8, X31, 0
	027 Add X9, X23, 15
	028 And X9, X9, 0x1FFFFFFFF
	029 Subtract X22, X8, X9
	030 Add X31, X22, 0
	031 Compare X20, 0
	032 JumpIfEqual {174}
	033 Subtract X0, X29, 48
	034 Move X1, X31
	035 Call InputEventPtr.get_valid, X0
	036 Move TEMP, X0
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfNotEqual {181}
	040 Move X8, [X19+56]
	041 Move X0, [X8]
	042 Move W8, [X0+309]
	043 Move TEMP, X8
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfEqual {48}
	047 Call 0x1C5D684
	048 Move X8, [X20]
	049 Move W9, [X0+304]
	050 Move W10, [X8+304]
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move X8, [X8+200]
	053 Add X8, X8, X9
	054 NotImplemented "Instruction LDUR not yet implemented."
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move X0, X22
	057 Move X1, X21
	058 Move X2, X23
	059 Call 0x3EB2AC0
	060 Move X8, [X19+56]
	061 Subtract X9, X29, 16
	062 Subtract X3, X29, 40
	063 Subtract X4, X29, 16
	064 Move X1, [X8+24]
	065 NotImplemented "Instruction LDUR not yet implemented."
	066 Move X2, X31
	067 Move X0, [X1]
	068 Move [X29-24], X9
	069 Move [X29-16], X8
	070 Move [X29-40], X20
	071 Move [X29-32], X22
	072 Move X8, [X1+16]
	073 NotImplemented "Instruction BLR not yet implemented."
	074 Move X8, [X24+40]
	075 NotImplemented "Instruction LDUR not yet implemented."
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Add X31, X29, 0
	078 Move X20, [X31+48]
	079 Move X19, [X31+56]
	080 Move X22, [X31+32]
	081 Move X21, [X31+40]
	082 Move X24, [X31+16]
	083 Move X23, [X31+24]
	084 Move X29, [X31+64]
	085 Move X30, [X31+72]
	086 Return 
	087 Move X0, 0x1EF5000
	088 Move X0, [X0+2760]
	089 Call 0x1C17D08
	090 Move W1, 5
	091 Call 0x1C17D6C
	092 Move X21, X0
	093 Call 0x19913C0
	094 Move X0, 0x1F1D000
	095 Move X0, [X0+3448]
	096 Call 0x1C17D08
	097 Move X2, X0
	098 Move X0, X21
	099 Move X1, X31
	100 Call 0x1994444
	101 Move X8, [X19+56]
	102 Move X0, 0x1EF5000
	103 Move X22, [X8+8]
	104 Move X0, [X0+1728]
	105 Call 0x1C17D08
	106 Call 0x19913D0
	107 Move X0, X22
	108 Move X1, X31
	109 Call Type.GetTypeFromHandle, X0
	110 Move X22, X0
	111 Call 0x19913C0
	112 Move X8, [X22]
	113 Move X0, X22
	114 Move X9, [X8+424]
	115 Move X1, [X8+432]
	116 NotImplemented "Instruction BLR not yet implemented."
	117 Move X22, X0
	118 Move X0, X21
	119 Call 0x19913C0
	120 Move W1, 1
	121 Move X0, X21
	122 Move X2, X22
	123 Call 0x1994444
	124 Move X0, X21
	125 Call 0x19913C0
	126 Move X0, 0x1F1D000
	127 Move X0, [X0+3456]
	128 Call 0x1C17D08
	129 Move X2, X0
	130 Move W1, 2
	131 Move X0, X21
	132 Call 0x1994444
	133 Move X0, X20
	134 Call 0x19913C0
	135 Move X0, X20
	136 Move X1, X31
	137 Call "il2cpp_vm_object_is_inst", X0
	138 Move X20, X0
	139 Call 0x19913C0
	140 Move X8, [X20]
	141 Move X0, X20
	142 Move X9, [X8+424]
	143 Move X1, [X8+432]
	144 NotImplemented "Instruction BLR not yet implemented."
	145 Move X20, X0
	146 Move X0, X21
	147 Call 0x19913C0
	148 Move W1, 3
	149 Move X0, X21
	150 Move X2, X20
	151 Call 0x1994444
	152 Move X0, X21
	153 Call 0x19913C0
	154 Move X0, 0x1EFD000
	155 Move X0, [X0+2480]
	156 Call 0x1C17D08
	157 Move X2, X0
	158 Move W1, 4
	159 Move X0, X21
	160 Call 0x1994444
	161 Move X0, X21
	162 Move X1, X31
	163 Call String.Concat, X0
	164 Move X20, X0
	165 Move X0, 0x1EFD000
	166 Move X0, [X0+1400]
	167 Call 0x1C17D08
	168 Call 0x1C17F10
	169 Move X1, X20
	170 Move X2, X31
	171 Move X21, X0
	172 Call ArgumentException..ctor, X0, X1
	173 Move X0, X21
	174 Move X0, 0x1EFA000
	175 Move X0, [X0+1320]
	176 Call 0x1C17D08
	177 Call 0x1C17F10
	178 Move X20, X0
	179 Move X0, 0x1F1D000
	180 Move X0, [X0+3424]
	181 Move X0, 0x1EFA000
	182 Move X0, [X0+1320]
	183 Call 0x1C17D08
	184 Call 0x1C17F10
	185 Move X20, X0
	186 Move X0, 0x1F1D000
	187 Move X0, [X0+3440]
	188 Call 0x1C17D08
	189 Move X1, X0
	190 Move X0, X20
	191 Move X2, X31
	192 Call ArgumentNullException..ctor, X0, X1
	193 Move X0, X20
	194 Move X1, X19
	195 Call 0x1C17DEC
	196 Call 0x3EB2B20

Method: System.Void WriteValueIntoEvent(UnityEngine.InputSystem.InputControl`1<TValue> control, TValue value, UnityEngine.InputSystem.LowLevel.InputEventPtr eventPtr)

Disassembly:
	0x021FEF20 MOV X0, X20
	0x021FEF24 MOV X2, X31
	0x021FEF28 BL 0x330E100
	0x021FEF2C MOV X0, X20
	0x021FEF30 B 0x21FF130
	0x021FEF34 ADRP X0, 0x1EF5000
	0x021FEF38 LDR X0, [X0 + 0x9D0]
	0x021FEF3C BL 0x1C16D08
	0x021FEF40 MOVZ W1, 0x5
	0x021FEF44 BL 0x1C16D6C
	0x021FEF48 MOV X22, X0
	0x021FEF4C MOV X0, X21
	0x021FEF50 BL 0x19903C0
	0x021FEF54 MOV X0, X21
	0x021FEF58 MOV X1, X31
	0x021FEF5C BL 0x3771F68
	0x021FEF60 MOV X23, X0
	0x021FEF64 MOV X0, X22
	0x021FEF68 BL 0x19903C0
	0x021FEF6C MOV X0, X22
	0x021FEF70 MOV X1, X23
	0x021FEF74 BL 0x19980B4
	0x021FEF78 MOV X0, X22
	0x021FEF7C MOV X1, X31
	0x021FEF80 MOV X2, X23
	0x021FEF84 BL 0x1993444
	0x021FEF88 MOV X0, X21
	0x021FEF8C BL 0x19903C0
	0x021FEF90 MOV X0, X21
	0x021FEF94 MOV X1, X31
	0x021FEF98 BL 0x3772BE4
	0x021FEF9C STUR W0, [X29 - 0x18]
	0x021FEFA0 ADRP X23, 0x1EFD000
	0x021FEFA4 LDR X23, [X23 + 0x720]
	0x021FEFA8 MOV X0, X23
	0x021FEFAC BL 0x1C16D08
	0x021FEFB0 SUB X1, X29, 0x18
	0x021FEFB4 BL 0x1C16E04
	0x021FEFB8 MOV X24, X0
	0x021FEFBC MOV X0, X22
	0x021FEFC0 BL 0x19903C0
	0x021FEFC4 MOV X0, X22
	0x021FEFC8 MOV X1, X24
	0x021FEFCC BL 0x19980B4
	0x021FEFD0 MOVZ W1, 0x1
	0x021FEFD4 MOV X0, X22
	0x021FEFD8 MOV X2, X24
	0x021FEFDC BL 0x1993444
	0x021FEFE0 MOV X0, X21
	0x021FEFE4 BL 0x19903C0
	0x021FEFE8 ADRP X0, 0x1F1D000
	0x021FEFEC LDR X0, [X0 + 0xD18]
	0x021FEFF0 BL 0x1C16D08

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], D8
	003 Move [X31+24], X30
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X2
	007 Move [X31+8], X1
	008 Compare X0, 0
	009 JumpIfEqual {38}
	010 Move X20, X0
	011 Add X0, X31, 8
	012 Move X1, X31
	013 Move V8, V0
	014 Call InputEventPtr.get_valid, X0
	015 Move TEMP, X0
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfNotEqual {45}
	019 Move X1, [X31+8]
	020 Move X0, X20
	021 Move X2, X31
	022 Call InputControlExtensions.GetStatePtrFromStateEvent, X0, X1
	023 Compare X0, 0
	024 JumpIfEqual {32}
	025 Move X8, [X20]
	026 Move X1, X0
	027 Move X0, X20
	028 Move V0, V8
	029 Move X9, [X8+600]
	030 Move X2, [X8+608]
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+32]
	033 Move X19, [X31+40]
	034 Move X30, [X31+24]
	035 Move V8, [X31+16]
	036 Add X31, X31, 48
	037 Return 
	038 Move X0, 0x1EFB000
	039 Move X0, [X0+1320]
	040 Call 0x1C17D08
	041 Call 0x1C17F10
	042 Move X20, X0
	043 Move X0, 0x1F1E000
	044 Move X0, [X0+3424]
	045 Move X0, 0x1EFB000
	046 Move X0, [X0+1320]
	047 Call 0x1C17D08
	048 Call 0x1C17F10
	049 Move X20, X0
	050 Move X0, 0x1F1E000
	051 Move X0, [X0+3440]
	052 Call 0x1C17D08
	053 Move X1, X0
	054 Move X0, X20
	055 Move X2, X31
	056 Call ArgumentNullException..ctor, X0, X1
	057 Move X0, X20
	058 Move X1, X19
	059 Call 0x1C17DEC

Method: System.Void CopyState(UnityEngine.InputSystem.InputDevice device, System.Void* buffer, System.Int32 bufferSizeInBytes)

Disassembly:
	0x03774E74 MOV W22, W31
	0x03774E78 MOVZ W1, 0x7B
	0x03774E7C MOV X0, X19
	0x03774E80 MOV X2, X31
	0x03774E84 BL 0x3233D30
	0x03774E88 LDR X2, [X23]
	0x03774E8C ADD X0, X31, 0x10
	0x03774E90 MOV W1, W22
	0x03774E94 BL 0x24FCF28
	0x03774E98 STP X0, X1, [X31]
	0x03774E9C ADD X0, X31, 0x0
	0x03774EA0 MOV X1, X31
	0x03774EA4 BL 0x37565F4
	0x03774EA8 LDR X1, [X24]
	0x03774EAC MOV X3, X31
	0x03774EB0 MOV X2, X1
	0x03774EB4 BL 0x3766E54
	0x03774EB8 MOV X1, X0
	0x03774EBC MOV X0, X19
	0x03774EC0 MOV X2, X31
	0x03774EC4 BL 0x32333E0
	0x03774EC8 MOVZ W1, 0x7D
	0x03774ECC MOV X0, X19
	0x03774ED0 MOV X2, X31
	0x03774ED4 BL 0x3233D30
	0x03774ED8 LDR W8, [X31 + 0x1C]
	0x03774EDC ADD W22, W22, 0x1
	0x03774EE0 CMP W22, W8
	0x03774EE4 B.LT 0x3774E78
	0x03774EE8 MOVZ W1, 0x2F
	0x03774EEC MOV X0, X19
	0x03774EF0 MOV X2, X31
	0x03774EF4 BL 0x3233D30
	0x03774EF8 MOV X0, X21
	0x03774EFC BL 0x3771F68
	0x03774F00 CBZ X0, 0x3774F98
	0x03774F04 ADRP X22, 0x9B3000
	0x03774F08 ADRP X23, 0x9B3000
	0x03774F0C LDR X22, [X22 + 0x7F8]
	0x03774F10 LDR X23, [X23 + 0x4A8]
	0x03774F14 MOV X3, X31
	0x03774F18 LDR X1, [X22]
	0x03774F1C LDR X2, [X23]
	0x03774F20 BL 0x32293BC
	0x03774F24 MOV X21, X0
	0x03774F28 MOV X0, X20
	0x03774F2C BL 0x3771F68
	0x03774F30 CBZ X0, 0x3774F98
	0x03774F34 LDR X1, [X22]
	0x03774F38 LDR X2, [X23]
	0x03774F3C MOV X3, X31
	0x03774F40 BL 0x32293BC
	0x03774F44 CBZ X21, 0x3774F98
	0x03774F48 MOV X1, X0
	0x03774F4C CBZ X0, 0x3774F98
	0x03774F50 LDR W8, [X21 + 0x10]
	0x03774F54 LDR W9, [X1 + 0x10]
	0x03774F58 MOV X0, X19
	0x03774F5C MOV X4, X31
	0x03774F60 ADD W2, W8, 0x1
	0x03774F64 ORN W8, W31, W8, 0x0
	0x03774F68 ADD W3, W9, W8
	0x03774F6C BL 0x323351C
	0x03774F70 LDR X8, [X19]
	0x03774F74 MOV X0, X19
	0x03774F78 LDP X9, X1, [X8 + 0x168]
	0x03774F7C BLR X9
	0x03774F80 LDP X20, X19, [X31 + 0x50]
	0x03774F84 LDP X22, X21, [X31 + 0x40]
	0x03774F88 LDP X24, X23, [X31 + 0x30]
	0x03774F8C LDR X30, [X31 + 0x20]
	0x03774F90 ADD X31, X31, 0x60
	0x03774F94 RET
	0x03774F98 BL 0x1C16F20
	0x03774F9C ADRP X0, 0x984000
	0x03774FA0 LDR X0, [X0 + 0x528]
	0x03774FA4 BL 0x1C16D08
	0x03774FA8 BL 0x1C16F10
	0x03774FAC MOV X19, X0
	0x03774FB0 ADRP X0, 0x9A7000
	0x03774FB4 LDR X0, [X0 + 0xD60]
	0x03774FB8 B 0x3774FD8
	0x03774FBC ADRP X0, 0x984000
	0x03774FC0 LDR X0, [X0 + 0x528]
	0x03774FC4 BL 0x1C16D08
	0x03774FC8 BL 0x1C16F10
	0x03774FCC MOV X19, X0
	0x03774FD0 ADRP X0, 0x9D2000
	0x03774FD4 LDR X0, [X0 + 0xCC8]
	0x03774FD8 BL 0x1C16D08
	0x03774FDC MOV X1, X0
	0x03774FE0 MOV X0, X19
	0x03774FE4 MOV X2, X31
	0x03774FE8 BL 0x330E100
	0x03774FEC ADRP X0, 0x9D2000
	0x03774FF0 LDR X0, [X0 + 0xCD0]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+32], X22
	004 Move [X31+40], X21
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move X22, 0xC6D000
	008 Move W8, [X22+3876]
	009 Move W21, W2
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x9A8000
	017 Move X0, [X0+3352]
	018 Call 0x1C17CF4
	019 Move X0, 0x980000
	020 Move X0, [X0+1448]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+3876], W8
	024 Compare X20, 0
	025 JumpIfEqual {70}
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X8, 0x9A8000
	028 Move X8, [X8+3352]
	029 Move V0, [X20+1]
	030 Move X22, 0x980000
	031 Move X0, [X8]
	032 Move [X31], V0
	033 Move W8, [X0+224]
	034 Move X22, [X22+1448]
	035 Compare W8, 0
	036 JumpIfNotEqual {38}
	037 Call 0x1C17DFC
	038 Add X0, X31, 0
	039 Move X1, X31
	040 Call InputStateBlock.get_alignedSizeInBytes, X0
	041 Move X8, [X22]
	042 Move W22, W0
	043 Move W9, [X8+224]
	044 Compare W9, 0
	045 JumpIfNotEqual {48}
	046 Move X0, X8
	047 Call 0x1C17DFC
	048 Move W0, W21
	049 Move W1, W22
	050 Move X2, X31
	051 Call Math.Min, X0, X1
	052 Move X21, X0
	053 Move X0, X20
	054 Call InputControl.GetDeviceIndex, X0
	055 Move X1, X31
	056 Call InputStateBuffers.GetFrontBufferForDevice, X0
	057 Move W8, [X31+4]
	058 Move X2, X21
	059 Move X3, X31
	060 Add X1, X8, X0
	061 Move X0, X19
	062 Call UnsafeUtility.MemCpy, X0, X1, X2
	063 Move X20, [X31+48]
	064 Move X19, [X31+56]
	065 Move X22, [X31+32]
	066 Move X21, [X31+40]
	067 Move X30, [X31+16]
	068 Add X31, X31, 64
	069 Return 
	070 Move X0, 0x985000
	071 Move X0, [X0+1320]
	072 Call 0x1C17D08
	073 Call 0x1C17F10
	074 Move X19, X0
	075 Move X0, 0x9A8000
	076 Move X0, [X0+3360]
	077 Call 0x1C17D08
	078 Move X1, X0
	079 Move X0, X19
	080 Move X2, X31
	081 Call ArgumentNullException..ctor, X0, X1
	082 Move X0, 0x988000
	083 Move X0, [X0+1400]
	084 Call 0x1C17D08
	085 Call 0x1C17F10
	086 Move X19, X0
	087 Move X0, 0x9D3000
	088 Move X0, [X0+3096]
	089 Call 0x1C17D08
	090 Move X20, X0
	091 Move X0, 0x9D3000
	092 Move X0, [X0+3104]
	093 Call 0x1C17D08
	094 Move X2, X0
	095 Move X0, X19
	096 Move X1, X20
	097 Move X3, X31
	098 Call ArgumentException..ctor, X0, X1, X2
	099 Move X0, 0x9D3000
	100 Move X0, [X0+3112]
	101 Call 0x1C17D08
	102 Move X1, X0
	103 Move X0, X19
	104 Call 0x1C17DEC

Method: System.Void CopyState(UnityEngine.InputSystem.InputDevice device, out TState state)

Disassembly:
	0x021FDC4C SUB X31, X31, 0x10
	0x021FDC50 MRS X27, 0xC000
	0x021FDC54 LDR X8, [X27 + 0x28]
	0x021FDC58 MOV X20, X3
	0x021FDC5C MOV X19, X2
	0x021FDC60 MOV X23, X1
	0x021FDC64 STUR X8, [X29 - 0x8]
	0x021FDC68 LDR X28, [X3 + 0x38]
	0x021FDC6C MOV X24, X0
	0x021FDC70 CBNZ X28, 0x21FDC80
	0x021FDC74 MOV X0, X20
	0x021FDC78 BL 0x1C5C6E0
	0x021FDC7C LDR X28, [X20 + 0x38]
	0x021FDC80 LDR X8, [X28 + 0x18]
	0x021FDC84 LDR W21, [X8 + 0xFC]
	0x021FDC88 ADD X8, X31, 0x0
	0x021FDC8C ADD X9, X21, 0xF
	0x021FDC90 AND X26, X9, 0x1FFFFFFFF
	0x021FDC94 SUB X22, X8, X26
	0x021FDC98 ADD X31, X22, 0x0
	0x021FDC9C ADD X8, X31, 0x0
	0x021FDCA0 SUB X25, X8, X26
	0x021FDCA4 ADD X31, X25, 0x0
	0x021FDCA8 MOV X0, X25
	0x021FDCAC MOV W1, W31
	0x021FDCB0 MOV X2, X21
	0x021FDCB4 BL 0x3EB1B10
	0x021FDCB8 ADD X8, X31, 0x0
	0x021FDCBC SUB X26, X8, X26
	0x021FDCC0 ADD X31, X26, 0x0
	0x021FDCC4 MOV X0, X26
	0x021FDCC8 MOV W1, W31
	0x021FDCCC MOV X2, X21
	0x021FDCD0 BL 0x3EB1B10
	0x021FDCD4 CBZ X24, 0x21FDD58
	0x021FDCD8 LDR X3, [X28 + 0x8]
	0x021FDCDC MOV X0, X24
	0x021FDCE0 MOV X1, X23
	0x021FDCE4 MOV X2, X25
	0x021FDCE8 LDR X8, [X3]
	0x021FDCEC BLR X8
	0x021FDCF0 TBNZ X0, 0x0, 0x21FDD08
	0x021FDCF4 MOV X0, X26
	0x021FDCF8 MOV W1, W31
	0x021FDCFC MOV X2, X21
	0x021FDD00 BL 0x3EB1B10
	0x021FDD04 MOV X25, X26
	0x021FDD08 MOV X0, X22
	0x021FDD0C MOV X1, X25
	0x021FDD10 MOV X2, X21
	0x021FDD14 BL 0x3EB1AC0
	0x021FDD18 MOV X0, X19
	0x021FDD1C MOV X1, X22
	0x021FDD20 MOV X2, X21
	0x021FDD24 BL 0x3EB1AC0
	0x021FDD28 LDR X8, [X27 + 0x28]
	0x021FDD2C LDUR X9, [X29 - 0x8]
	0x021FDD30 CMP X8, X9
	0x021FDD34 B.NE 0x21FDD94
	0x021FDD38 ADD X31, X29, 0x0
	0x021FDD3C LDP X20, X19, [X31 + 0x50]
	0x021FDD40 LDP X22, X21, [X31 + 0x40]
	0x021FDD44 LDP X24, X23, [X31 + 0x30]
	0x021FDD48 LDP X26, X25, [X31 + 0x20]
	0x021FDD4C LDP X28, X27, [X31 + 0x10]
	0x021FDD50 LDP X29, X30, [X31], #0x60
	0x021FDD54 RET
	0x021FDD58 ADRP X0, 0x1EFB000
	0x021FDD5C LDR X0, [X0 + 0x528]
	0x021FDD60 BL 0x1C16D08
	0x021FDD64 BL 0x1C16F10
	0x021FDD68 MOV X19, X0
	0x021FDD6C ADRP X0, 0x1F1E000
	0x021FDD70 LDR X0, [X0 + 0xD60]
	0x021FDD74 BL 0x1C16D08
	0x021FDD78 MOV X1, X0
	0x021FDD7C MOV X0, X19
	0x021FDD80 MOV X2, X31
	0x021FDD84 BL 0x330E100
	0x021FDD88 MOV X0, X19
	0x021FDD8C MOV X1, X20
	0x021FDD90 BL 0x1C16DEC
	0x021FDD94 BL 0x3EB1B20
	0x021FDD98 STP X29, X30, [X31 - 0x50]!
	0x021FDD9C STR X25, [X31 + 0x10]
	0x021FDDA0 STP X24, X23, [X31 + 0x20]
	0x021FDDA4 STP X22, X21, [X31 + 0x30]
	0x021FDDA8 STP X20, X19, [X31 + 0x40]
	0x021FDDAC ADD X29, X31, 0x0
	0x021FDDB0 SUB X31, X31, 0x20
	0x021FDDB4 MRS X25, 0xC000
	0x021FDDB8 LDR X8, [X25 + 0x28]
	0x021FDDBC MOV X19, X3
	0x021FDDC0 MOV X20, X2
	0x021FDDC4 MOV X24, X1
	0x021FDDC8 STUR X8, [X29 - 0x8]
	0x021FDDCC LDR X8, [X3 + 0x38]
	0x021FDDD0 MOV X21, X0
	0x021FDDD4 CBNZ X8, 0x21FDDE4
	0x021FDDD8 MOV X0, X19
	0x021FDDDC BL 0x1C5C6E0
	0x021FDDE0 LDR X8, [X19 + 0x38]
	0x021FDDE4 LDR X8, [X8 + 0x18]
	0x021FDDE8 LDR W22, [X8 + 0xFC]
	0x021FDDEC ADD X8, X31, 0x0
	0x021FDDF0 ADD X9, X22, 0xF
	0x021FDDF4 AND X9, X9, 0x1FFFFFFFF
	0x021FDDF8 SUB X23, X8, X9
	0x021FDDFC ADD X31, X23, 0x0
	0x021FDE00 CBZ X21, 0x21FDEE0
	0x021FDE04 MOV X0, X21
	0x021FDE08 MOV X1, X24
	0x021FDE0C MOV X2, X31
	0x021FDE10 BL 0x3773B98
	0x021FDE14 LDR X8, [X19 + 0x38]
	0x021FDE18 CBZ X0, 0x21FDE6C
	0x021FDE1C LDR X1, [X8 + 0x20]
	0x021FDE20 SUB X3, X29, 0x18
	0x021FDE24 MOV X2, X21
	0x021FDE28 MOV X4, X23
	0x021FDE2C LDR X8, [X1]
	0x021FDE30 STP X0, X23, [X29 - 0x18]
	0x021FDE34 LDR X9, [X1 + 0x10]
	0x021FDE38 MOV X0, X8
	0x021FDE3C BLR X9
	0x021FDE40 MOV X0, X20
	0x021FDE44 MOV X1, X23
	0x021FDE48 MOV X2, X22
	0x021FDE4C BL 0x3EB1AC0
	0x021FDE50 LDR X8, [X19 + 0x38]
	0x021FDE54 LDR X0, [X8 + 0x18]
	0x021FDE58 LDRB W8, [X0 + 0x135]
	0x021FDE5C TBNZ X8, 0x0, 0x21FDE64
	0x021FDE60 BL 0x1C5C684
	0x021FDE64 MOVZ W0, 0x1
	0x021FDE68 B 0x21FDEB4
	0x021FDE6C LDR X1, [X8 + 0x10]
	0x021FDE70 SUB X3, X29, 0x18
	0x021FDE74 MOV X2, X21
	0x021FDE78 MOV X4, X23
	0x021FDE7C LDR X0, [X1]
	0x021FDE80 STUR X23, [X29 - 0x18]
	0x021FDE84 LDR X8, [X1 + 0x10]
	0x021FDE88 BLR X8
	0x021FDE8C MOV X0, X20
	0x021FDE90 MOV X1, X23
	0x021FDE94 MOV X2, X22
	0x021FDE98 BL 0x3EB1AC0
	0x021FDE9C LDR X8, [X19 + 0x38]
	0x021FDEA0 LDR X0, [X8 + 0x18]
	0x021FDEA4 LDRB W8, [X0 + 0x135]
	0x021FDEA8 TBNZ X8, 0x0, 0x21FDEB0
	0x021FDEAC BL 0x1C5C684
	0x021FDEB0 MOV W0, W31
	0x021FDEB4 LDR X8, [X25 + 0x28]
	0x021FDEB8 LDUR X9, [X29 - 0x8]
	0x021FDEBC CMP X8, X9
	0x021FDEC0 B.NE 0x21FDF1C
	0x021FDEC4 ADD X31, X29, 0x0
	0x021FDEC8 LDP X20, X19, [X31 + 0x40]
	0x021FDECC LDP X22, X21, [X31 + 0x30]
	0x021FDED0 LDP X24, X23, [X31 + 0x20]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X8, [X2+56]
	009 Move X19, X2
	010 Move X23, X1
	011 Move X20, X0
	012 Compare X8, 0
	013 JumpIfNotEqual {22}
	014 Move X0, 0x1F1F000
	015 Move X0, [X0+3352]
	016 Call 0x1C17CF4
	017 Move X8, [X19+56]
	018 Compare X8, 0
	019 JumpIfNotEqual {22}
	020 Move X0, X19
	021 Call 0x1C5D6E0
	022 Compare X20, 0
	023 JumpIfEqual {54}
	024 Move [X23], X31
	025 Move [X23+8], X31
	026 Move [X23+22], X31
	027 Move [X23+16], X31
	028 Move X8, 0x1F1F000
	029 Move X8, [X8+3352]
	030 Move W22, [X20+16]
	031 Move X0, [X8]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1C17DFC
	036 Move X8, [X19+56]
	037 Move X0, X23
	038 Move X1, [X8+16]
	039 Call MouseState.get_format, X0
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move X0, X20
	042 Move X1, X23
	043 Move X20, [X31+48]
	044 Move X19, [X31+56]
	045 Move X22, [X31+32]
	046 Move X21, [X31+40]
	047 Move X30, [X31+16]
	048 Move X23, [X31+24]
	049 Move W2, 30
	050 Move X3, X31
	051 Add X31, X31, 64
	052 Call InputControlExtensions.CopyState, X0, X1, X2
	053 Return 
	054 Move X0, 0x1EFC000
	055 Move X0, [X0+1320]
	056 Call 0x1C17D08
	057 Call 0x1C17F10
	058 Move X20, X0
	059 Move X0, 0x1F1F000
	060 Move X0, [X0+3360]
	061 Call 0x1C17D08
	062 Move X1, X0
	063 Move X0, X20
	064 Move X2, X31
	065 Call ArgumentNullException..ctor, X0, X1
	066 Move X0, X20
	067 Move X0, 0x1EF7000
	068 Move X0, [X0+2512]
	069 Call 0x1C17D08
	070 Move W1, 4
	071 Call 0x1C17D6C
	072 Move X8, [X19+56]
	073 Move X21, X0
	074 Move X0, 0x1EF7000
	075 Move X22, [X8+24]
	076 Move X0, [X0+1728]
	077 Call 0x1C17D08
	078 Call 0x19913D0
	079 Move X0, X22
	080 Move X1, X31
	081 Call Type.GetTypeFromHandle, X0
	082 Move X22, X0
	083 Call 0x19913C0
	084 Move X8, [X22]
	085 Move X0, X22
	086 Move X9, [X8+424]
	087 Move X1, [X8+432]
	088 NotImplemented "Instruction BLR not yet implemented."
	089 Move X22, X0
	090 Move X0, X21
	091 Call 0x19913C0
	092 Move X0, X21
	093 Move X1, X22
	094 Call 0x19990B4
	095 Move X0, X21
	096 Move X1, X31
	097 Move X2, X22
	098 Call 0x1994444
	099 Move X8, [X19+56]
	100 Move X0, X23
	101 Move X1, [X8+16]
	102 Call MouseState.get_format, X0
	103 Move [X31+8], W0
	104 Move X22, 0x1F1F000
	105 Move X22, [X22+3368]
	106 Move X0, X22
	107 Call 0x1C17D08
	108 Add X1, X31, 8
	109 Call 0x1C17E04
	110 Move X23, X0
	111 Move X0, X21
	112 Call 0x19913C0
	113 Move X0, X21
	114 Move X1, X23
	115 Call 0x19990B4
	116 Move W1, 1
	117 Move X0, X21
	118 Move X2, X23
	119 Call 0x1994444
	120 Move X0, X21
	121 Call 0x19913C0
	122 Move X0, X21
	123 Move X1, X20
	124 Call 0x19990B4
	125 Move W1, 2
	126 Move X0, X21
	127 Move X2, X20
	128 Call 0x1994444
	129 Move X0, X20
	130 Call 0x19913C0
	131 Move X0, 0x1F1F000
	132 Move X20, [X20+16]
	133 Move X0, [X0+3352]
	134 Call 0x1C17D08
	135 Call 0x19913D0
	136 Move X0, X22
	137 Move [X31], W20
	138 Call 0x1C17D08
	139 Add X1, X31, 0
	140 Call 0x1C17E04
	141 Move X20, X0
	142 Move X0, X21
	143 Call 0x19913C0
	144 Move X0, X21
	145 Move X1, X20
	146 Call 0x19990B4
	147 Move W1, 3
	148 Move X0, X21
	149 Move X2, X20
	150 Call 0x1994444
	151 Move X0, 0x1F1F000
	152 Move X0, [X0+3376]
	153 Call 0x1C17D08
	154 Move X1, X21
	155 Move X2, X31
	156 Call String.Format, X0, X1
	157 Move X20, X0
	158 Move X0, 0x1EFF000
	159 Move X0, [X0+1400]
	160 Call 0x1C17D08
	161 Call 0x1C17F10
	162 Move X21, X0
	163 Move X0, 0x1F1F000
	164 Move X0, [X0+3384]
	165 Call 0x1C17D08
	166 Move X2, X0
	167 Move X0, X21
	168 Move X1, X20
	169 Move X3, X31
	170 Call ArgumentException..ctor, X0, X1, X2
	171 Move X0, X21
	172 Move X1, X19
	173 Call 0x1C17DEC

Method: System.Boolean CheckStateIsAtDefault(UnityEngine.InputSystem.InputControl control)

Disassembly:
	0x0377494C LDR X0, [X0 + 0xC78]
	0x03774950 BL 0x1C16D08
	0x03774954 MOV X1, X0
	0x03774958 MOV X0, X20
	0x0377495C BL 0x1C16DEC
	0x03774960 MOV X0, X23
	0x03774964 MOV X1, X24
	0x03774968 BL 0x1C171E0
	0x0377496C MOV X0, X23
	0x03774970 MOV X1, X25
	0x03774974 BL 0x1C171E0
	0x03774978 LDRB W8, [X0 + 0xDC]
	0x0377497C UBFM W0, W8, 0x1, 0x1
	0x03774980 RET
	0x03774984 STR X30, [X31 - 0x30]!
	0x03774988 STP X22, X21, [X31 + 0x10]
	0x0377498C STP X20, X19, [X31 + 0x20]
	0x03774990 ADRP X20, 0xC6C000
	0x03774994 LDRB W8, [X20 + 0xF28]
	0x03774998 MOV X19, X0
	0x0377499C STR X1, [X31 + 0x8]
	0x037749A0 TBNZ X8, 0x0, 0x37749B8
	0x037749A4 ADRP X0, 0x9A7000
	0x037749A8 LDR X0, [X0 + 0xD18]
	0x037749AC BL 0x1C16CF4
	0x037749B0 MOVZ W8, 0x1
	0x037749B4 STRB W8, [X20 + 0xF28]
	0x037749B8 CBZ X19, 0x3774A88
	0x037749BC ADD X0, X31, 0x8

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Compare X0, 0
	004 JumpIfEqual {16}
	005 Move X19, X0
	006 Call InputControl.GetDeviceIndex, X0
	007 Move X1, X31
	008 Call InputStateBuffers.GetFrontBufferForDevice, X0
	009 Move X1, X0
	010 Move X0, X19
	011 Move X2, X31
	012 Move X30, [X31+16]
	013 Move X19, [X31+24]
	014 Call InputControlExtensions.CheckStateIsAtDefault, X0, X1, X2
	015 Return X0
	016 Move X0, 0x985000
	017 Move X0, [X0+1320]
	018 Call 0x1C17D08
	019 Call 0x1C17F10
	020 Move X19, X0
	021 Move X0, 0x9A8000
	022 Move X0, [X0+3424]
	023 Call 0x1C17D08
	024 Move X1, X0
	025 Move X0, X19
	026 Move X2, X31
	027 Call ArgumentNullException..ctor, X0, X1
	028 Move X0, 0x9D3000
	029 Move X0, [X0+3040]
	030 Call 0x1C17D08
	031 Move X1, X0
	032 Move X0, X19
	033 Call 0x1C17DEC

Method: System.Boolean CheckStateIsAtDefault(UnityEngine.InputSystem.InputControl control, System.Void* statePtr, System.Void* maskPtr = null)

Disassembly:
	0x03774FF4 BL 0x1C16D08
	0x03774FF8 MOV X1, X0
	0x03774FFC MOV X0, X19
	0x03775000 BL 0x1C16DEC
	0x03775004 SUB X31, X31, 0x40
	0x03775008 STR D8, [X31 + 0x10]
	0x0377500C STR X30, [X31 + 0x18]
	0x03775010 STP X22, X21, [X31 + 0x20]
	0x03775014 STP X20, X19, [X31 + 0x30]
	0x03775018 ADRP X22, 0xC6B000
	0x0377501C MOV X20, X8
	0x03775020 LDRB W8, [X22 + 0xF2C]
	0x03775024 MOV V8.16B, V0.16B
	0x03775028 MOV X21, X2
	0x0377502C MOV W19, W1
	0x03775030 STR X0, [X31 + 0x8]
	0x03775034 TBNZ X8, 0x0, 0x377504C
	0x03775038 ADRP X0, 0x9A6000
	0x0377503C LDR X0, [X0 + 0x270]
	0x03775040 BL 0x1C16CF4
	0x03775044 MOVZ W8, 0x1
	0x03775048 STRB W8, [X22 + 0xF2C]
	0x0377504C ADD X0, X31, 0x8
	0x03775050 MOV X1, X31
	0x03775054 BL 0x37F80A4
	0x03775058 TBZ X0, 0x0, 0x37750F0
	0x0377505C ADD X0, X31, 0x8
	0x03775060 MOV X1, X31
	0x03775064 BL 0x37F80B4
	0x03775068 MOVZ W8, 0x5441
	0x0377506C MOVK W8, 0x444C0000
	0x03775070 CMP W0, W8
	0x03775074 B.EQ 0x3775088
	0x03775078 MOVZ W8, 0x4154
	0x0377507C MOVK W8, 0x53540000
	0x03775080 CMP W0, W8
	0x03775084 B.NE 0x377514C
	0x03775088 CBNZ X21, 0x37750C8
	0x0377508C ADD X0, X31, 0x8
	0x03775090 MOV X1, X31
	0x03775094 BL 0x3802760
	0x03775098 ADRP X8, 0x9A6000
	0x0377509C LDR X8, [X8 + 0x270]
	0x037750A0 MOV W22, W0
	0x037750A4 LDR X8, [X8]
	0x037750A8 LDR W9, [X8 + 0xE0]
	0x037750AC CBNZ W9, 0x37750B8
	0x037750B0 MOV X0, X8
	0x037750B4 BL 0x1C16DFC
	0x037750B8 MOV W0, W22
	0x037750BC BL 0x376EAD0
	0x037750C0 MOV X21, X0
	0x037750C4 CBZ X0, 0x3775174
	0x037750C8 LDR X8, [X31 + 0x8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Compare X0, 0
	007 JumpIfEqual {35}
	008 Move X20, X1
	009 Compare X1, 0
	010 JumpIfEqual {42}
	011 Move X22, 0xC67000
	012 Move W8, [X22+2563]
	013 Move X19, X2
	014 Move X21, X0
	015 Compare W8, 0
	016 JumpIfNotEqual {22}
	017 Move X0, 0x9AA000
	018 Move X0, [X0+4072]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X22+2563], W8
	022 Move X8, 0x9AA000
	023 Move X8, [X8+4072]
	024 Move X0, X21
	025 Move X1, X20
	026 Move X3, X19
	027 Move X8, [X8]
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X8, [X8+184]
	033 Move X2, [X8]
	034 Move X30, [X31+48]
	035 Move X0, 0x984000
	036 Move X0, [X0+1320]
	037 Call 0x1C17D08
	038 Call 0x1C17F10
	039 Move X19, X0
	040 Move X0, 0x9A7000
	041 Move X0, [X0+3424]
	042 Move X0, 0x984000
	043 Move X0, [X0+1320]
	044 Call 0x1C17D08
	045 Call 0x1C17F10
	046 Move X19, X0
	047 Move X0, 0x9A7000
	048 Move X0, [X0+3464]
	049 Call 0x1C17D08
	050 Move X1, X0
	051 Move X0, X19
	052 Move X2, X31
	053 Call ArgumentNullException..ctor, X0, X1
	054 Move X0, 0x9D2000
	055 Move X0, [X0+3120]
	056 Call 0x1C17D08
	057 Move X1, X0
	058 Move X0, X19
	059 Call 0x1C17DEC

Method: System.Boolean CheckStateIsAtDefaultIgnoringNoise(UnityEngine.InputSystem.InputControl control)

Disassembly:
	0x03775234 AND W1, W1, 0x1
	0x03775238 BL 0x377168C
	0x0377523C CMP X0, 0x0
	0x03775240 CSET W0, NE
	0x03775244 LDR X30, [X31], #0x10
	0x03775248 RET
	0x0377524C LDP X2, X1, [X0]
	0x03775250 LDR W3, [X0 + 0x10]
	0x03775254 LDR V0, [X0 + 0x14]
	0x03775258 MOVI V1.2D, 0x0
	0x0377525C MOV X0, X8
	0x03775260 STP V1, V1, [X8 + 0x50]
	0x03775264 STP V1, V1, [X8 + 0x30]
	0x03775268 STP V1, V1, [X8 + 0x10]
	0x0377526C STR V1, [X8]
	0x03775270 B 0x3775980
	0x03775274 STP X30, X27, [X31 - 0x50]!
	0x03775278 STP X26, X25, [X31 + 0x10]
	0x0377527C STP X24, X23, [X31 + 0x20]
	0x03775280 STP X22, X21, [X31 + 0x30]
	0x03775284 STP X20, X19, [X31 + 0x40]
	0x03775288 ADRP X20, 0xC6B000
	0x0377528C LDRB W8, [X20 + 0xF33]
	0x03775290 MOV X19, X0
	0x03775294 TBNZ X8, 0x0, 0x37752AC
	0x03775298 ADRP X0, 0x9A6000
	0x0377529C LDR X0, [X0 + 0xD18]
	0x037752A0 BL 0x1C16CF4

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Compare X0, 0
	004 JumpIfEqual {13}
	005 Move X19, X0
	006 Call InputControl.GetDeviceIndex, X0
	007 Move X1, X31
	008 Call InputStateBuffers.GetFrontBufferForDevice, X0
	009 Move X1, X0
	010 Move X0, X19
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 Move X0, 0x984000
	014 Move X0, [X0+1320]
	015 Call 0x1C17D08
	016 Call 0x1C17F10
	017 Move X19, X0
	018 Move X0, 0x9A7000
	019 Move X0, [X0+3424]
	020 Call 0x1C17D08
	021 Move X1, X0
	022 Move X0, X19
	023 Move X2, X31
	024 Call ArgumentNullException..ctor, X0, X1
	025 Move X0, 0x9D2000
	026 Move X0, [X0+3128]
	027 Call 0x1C17D08
	028 Move X1, X0
	029 Move X0, X19
	030 Call 0x1C17DEC

Method: System.Boolean CheckStateIsAtDefaultIgnoringNoise(UnityEngine.InputSystem.InputControl control, System.Void* statePtr)

Disassembly:
	0x037752A4 MOVZ W8, 0x1
	0x037752A8 STRB W8, [X20 + 0xF33]
	0x037752AC ADD X0, X19, 0x40
	0x037752B0 MOV X1, X31
	0x037752B4 BL 0x37F80A4
	0x037752B8 TBZ X0, 0x0, 0x37755B0
	0x037752BC LDR X8, [X19 + 0x48]
	0x037752C0 CBZ X8, 0x37752E4
	0x037752C4 LDRB W9, [X19]
	0x037752C8 TBZ X9, 0x4, 0x37752E4
	0x037752CC LDR X8, [X8 + 0x80]
	0x037752D0 LDR X9, [X19 + 0x8]
	0x037752D4 CMP X8, X9
	0x037752D8 B.EQ 0x37752E4
	0x037752DC STR X8, [X19 + 0x48]
	0x037752E0 B 0x3775584
	0x037752E4 LDP X21, X22, [X19 + 0x28]
	0x037752E8 ADRP X23, 0x9A6000
	0x037752EC LDR X23, [X23 + 0xD18]
	0x037752F0 MOVZ W25, 0x1C00
	0x037752F4 ORR X8, X21, X22, 0x0
	0x037752F8 CMP X8, 0x0
	0x037752FC CSET W24, NE
	0x03775300 MOVK W25, 0x380000
	0x03775304 LDR W2, [X19 + 0x60]
	0x03775308 STR X31, [X19 + 0x48]
	0x0377530C TBZ X24, 0x0, 0x37753D8
	0x03775310 ANDS W20, W2, 0x7
	0x03775314 B.EQ 0x3775364
	0x03775318 CBZ X22, 0x3775334
	0x0377531C LDR X0, [X19 + 0x58]
	0x03775320 LDP X1, X4, [X19 + 0x30]
	0x03775324 MOV W3, W20
	0x03775328 MOV X5, X31
	0x0377532C BL 0x37626EC
	0x03775330 TBNZ X0, 0x0, 0x3775358
	0x03775334 CBZ X21, 0x3775364
	0x03775338 LDR X0, [X19 + 0x58]
	0x0377533C LDR X1, [X19 + 0x28]
	0x03775340 LDR W2, [X19 + 0x60]
	0x03775344 LDR X4, [X19 + 0x38]
	0x03775348 MOV W3, W20
	0x0377534C MOV X5, X31
	0x03775350 BL 0x37626EC
	0x03775354 TBZ X0, 0x0, 0x3775364
	0x03775358 LDR W8, [X19 + 0x60]
	0x0377535C ADD W8, W8, W20
	0x03775360 STR W8, [X19 + 0x60]
	0x03775364 LDP W2, W8, [X19 + 0x60]
	0x03775368 CMP W2, W8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xC6C000
	006 Move W8, [X21+3877]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x9AA000
	014 Move X0, [X0+4072]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+3877], W8
	018 Compare X20, 0
	019 JumpIfEqual {35}
	020 Compare X19, 0
	021 JumpIfEqual {42}
	022 Move X8, 0x9AA000
	023 Move X8, [X8+4072]
	024 Move X0, X20
	025 Move X1, X19
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X8, [X8]
	029 Move X8, [X8+184]
	030 Move X2, [X8+8]
	031 Move X30, [X31+32]
	032 Move X21, [X31+40]
	033 Call InputControlExtensions.CheckStateIsAtDefault, X0, X1, X2
	034 Return X0
	035 Move X0, 0x984000
	036 Move X0, [X0+1320]
	037 Call 0x1C17D08
	038 Call 0x1C17F10
	039 Move X19, X0
	040 Move X0, 0x9A7000
	041 Move X0, [X0+3424]
	042 Move X0, 0x984000
	043 Move X0, [X0+1320]
	044 Call 0x1C17D08
	045 Call 0x1C17F10
	046 Move X19, X0
	047 Move X0, 0x9A7000
	048 Move X0, [X0+3464]
	049 Call 0x1C17D08
	050 Move X1, X0
	051 Move X0, X19
	052 Move X2, X31
	053 Call ArgumentNullException..ctor, X0, X1
	054 Move X0, 0x9D2000
	055 Move X0, [X0+3136]
	056 Call 0x1C17D08
	057 Move X1, X0
	058 Move X0, X19
	059 Call 0x1C17DEC

Method: System.Boolean CompareStateIgnoringNoise(UnityEngine.InputSystem.InputControl control, System.Void* statePtr)

Disassembly:
	0x0377536C B.CS 0x37753DC
	0x03775370 LDR X9, [X19 + 0x58]
	0x03775374 LDR X10, [X19 + 0x38]
	0x03775378 MOV W11, W2
	0x0377537C UBFM X11, X11, 0x3, 0x3F
	0x03775380 CBZ X10, 0x377538C
	0x03775384 LDRB W12, [X10, X11, LSL]
	0x03775388 B 0x3775390
	0x0377538C MOVZ W12, 0xFF
	0x03775390 LDRB W13, [X9, X11, LSL]
	0x03775394 CBZ X22, 0x37753AC
	0x03775398 LDR X14, [X19 + 0x30]
	0x0377539C LDRB W14, [X14, X11, LSL]
	0x037753A0 EOR W14, W14, W13, 0x0
	0x037753A4 ANDS W31, W12, W14, 0x0
	0x037753A8 B.EQ 0x37753C4
	0x037753AC CBZ X21, 0x37753DC
	0x037753B0 LDR X14, [X19 + 0x28]
	0x037753B4 LDRB W11, [X14, X11, LSL]
	0x037753B8 EOR W11, W11, W13, 0x0
	0x037753BC ANDS W31, W12, W11, 0x0
	0x037753C0 B.NE 0x37753DC
	0x037753C4 ADD W2, W2, 0x8
	0x037753C8 CMP W2, W8
	0x037753CC STR W2, [X19 + 0x60]
	0x037753D0 B.CC 0x3775378
	0x037753D4 B 0x37753DC
	0x037753D8 LDR W8, [X19 + 0x64]
	0x037753DC CMP W2, W8
	0x037753E0 B.CS 0x377558C
	0x037753E4 LDR W8, [X19 + 0x50]
	0x037753E8 LDR W9, [X19 + 0x18]
	0x037753EC CMP W8, W9
	0x037753F0 B.GE 0x377558C
	0x037753F4 LDR X9, [X19 + 0x10]
	0x037753F8 CBZ X9, 0x37755A8
	0x037753FC LDR W10, [X9 + 0x18]
	0x03775400 CMP W8, W10
	0x03775404 B.CS 0x37755AC
	0x03775408 ADD X8, X9, W8, 0x2, SXTW
	0x0377540C LDR W8, [X8 + 0x20]
	0x03775410 LDR W9, [X19 + 0x54]
	0x03775414 UBFM X27, X8, 0x13, 0x1F
	0x03775418 SUBS W2, W27, W9
	0x0377541C B.CC 0x37754E8
	0x03775420 LDR W10, [X19 + 0x60]
	0x03775424 UBFM W20, W8, 0xA, 0x12
	0x03775428 ADD W9, W2, W20
	0x0377542C CMP W10, W9
	0x03775430 B.CS 0x37754E8
	0x03775434 ADD W10, W10, 0x8
	0x03775438 CMP W2, W10
	0x0377543C B.CS 0x3775504
	0x03775440 LDR W10, [X19 + 0x64]
	0x03775444 CMP W9, W10
	0x03775448 B.HI 0x37754E8
	0x0377544C ANDS W31, W8, W25, 0x0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Compare X0, 0
	007 JumpIfEqual {40}
	008 Move X19, X1
	009 Compare X1, 0
	010 JumpIfEqual {47}
	011 Move X20, X0
	012 Call InputControl.GetDeviceIndex, X0
	013 Move X1, X31
	014 Call InputStateBuffers.GetFrontBufferForDevice, X0
	015 Move X22, 0xC6C000
	016 Move W8, [X22+3989]
	017 Move X21, X0
	018 Compare W8, 0
	019 JumpIfNotEqual {25}
	020 Move X0, 0x9AA000
	021 Move X0, [X0+4072]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+3989], W8
	025 Move X8, 0x9AA000
	026 Move X8, [X8+4072]
	027 Move X0, X20
	028 Move X1, X21
	029 Move X2, X19
	030 Move X8, [X8]
	031 Move X20, [X31+32]
	032 Move X19, [X31+40]
	033 Move X22, [X31+16]
	034 Move X21, [X31+24]
	035 Move X8, [X8+184]
	036 Move X3, [X8+8]
	037 Move X30, [X31+48]
	038 Call InputControlExtensions.CompareState, X0, X1, X2, X3
	039 Return X0
	040 Move X0, 0x984000
	041 Move X0, [X0+1320]
	042 Call 0x1C17D08
	043 Call 0x1C17F10
	044 Move X19, X0
	045 Move X0, 0x9A7000
	046 Move X0, [X0+3424]
	047 Move X0, 0x984000
	048 Move X0, [X0+1320]
	049 Call 0x1C17D08
	050 Call 0x1C17F10
	051 Move X19, X0
	052 Move X0, 0x9A7000
	053 Move X0, [X0+3464]
	054 Call 0x1C17D08
	055 Move X1, X0
	056 Move X0, X19
	057 Move X2, X31
	058 Call ArgumentNullException..ctor, X0, X1
	059 Move X0, 0x9D2000
	060 Move X0, [X0+3144]
	061 Call 0x1C17D08
	062 Move X1, X0
	063 Move X0, X19
	064 Call 0x1C17DEC

Method: System.Boolean CompareState(UnityEngine.InputSystem.InputControl control, System.Void* firstStatePtr, System.Void* secondStatePtr, System.Void* maskPtr = null)

Disassembly:
	0x037750CC STR W19, [X20 + 0x10]
	0x037750D0 STR S8, [X20 + 0x14]
	0x037750D4 LDR X30, [X31 + 0x18]
	0x037750D8 STP X21, X8, [X20]
	0x037750DC LDP X20, X19, [X31 + 0x30]
	0x037750E0 LDP X22, X21, [X31 + 0x20]
	0x037750E4 LDR V8, [X31 + 0x10]
	0x037750E8 ADD X31, X31, 0x40
	0x037750EC RET
	0x037750F0 ADRP X0, 0x983000
	0x037750F4 LDR X0, [X0 + 0x528]
	0x037750F8 BL 0x1C16D08
	0x037750FC BL 0x1C16F10
	0x03775100 MOV X19, X0
	0x03775104 ADRP X0, 0x9A6000
	0x03775108 LDR X0, [X0 + 0xD70]
	0x0377510C BL 0x1C16D08
	0x03775110 MOV X20, X0
	0x03775114 ADRP X0, 0x9D1000
	0x03775118 LDR X0, [X0 + 0xCD8]
	0x0377511C BL 0x1C16D08
	0x03775120 MOV X2, X0
	0x03775124 MOV X0, X19
	0x03775128 MOV X1, X20
	0x0377512C MOV X3, X31
	0x03775130 BL 0x3315F7C
	0x03775134 ADRP X0, 0x9D1000
	0x03775138 LDR X0, [X0 + 0xCE0]
	0x0377513C BL 0x1C16D08
	0x03775140 MOV X1, X0
	0x03775144 MOV X0, X19
	0x03775148 BL 0x1C16DEC
	0x0377514C STR W0, [X31]
	0x03775150 ADRP X0, 0x9A6000
	0x03775154 LDR X0, [X0 + 0xD28]
	0x03775158 BL 0x1C16D08
	0x0377515C ADD X1, X31, 0x0
	0x03775160 BL 0x1C16E04
	0x03775164 MOV X19, X0
	0x03775168 ADRP X0, 0x9D1000
	0x0377516C LDR X0, [X0 + 0xC70]
	0x03775170 B 0x3775198
	0x03775174 STR W22, [X31]
	0x03775178 ADRP X0, 0x97E000
	0x0377517C LDR X0, [X0 + 0x758]
	0x03775180 BL 0x1C16D08
	0x03775184 ADD X1, X31, 0x0
	0x03775188 BL 0x1C16E04
	0x0377518C MOV X19, X0
	0x03775190 ADRP X0, 0x9D1000
	0x03775194 LDR X0, [X0 + 0xCE8]
	0x03775198 BL 0x1C16D08
	0x0377519C MOV X1, X19
	0x037751A0 MOV X2, X31
	0x037751A4 BL 0x321EFD0
	0x037751A8 MOV X19, X0
	0x037751AC ADRP X0, 0x986000
	0x037751B0 LDR X0, [X0 + 0x578]
	0x037751B4 BL 0x1C16D08
	0x037751B8 BL 0x1C16F10
	0x037751BC MOV X20, X0
	0x037751C0 ADRP X0, 0x9A6000
	0x037751C4 LDR X0, [X0 + 0xD70]
	0x037751C8 BL 0x1C16D08
	0x037751CC MOV X2, X0
	0x037751D0 MOV X0, X20
	0x037751D4 MOV X1, X19
	0x037751D8 MOV X3, X31
	0x037751DC BL 0x330E16C
	0x037751E0 ADRP X0, 0x9D1000
	0x037751E4 LDR X0, [X0 + 0xCE0]
	0x037751E8 BL 0x1C16D08
	0x037751EC MOV X1, X0
	0x037751F0 MOV X0, X20
	0x037751F4 BL 0x1C16DEC
	0x037751F8 SUB X31, X31, 0x30
	0x037751FC STP X30, X19, [X31 + 0x20]
	0x03775200 MOV X2, X1
	0x03775204 MOV X19, X8
	0x03775208 ADD X8, X31, 0x8
	0x0377520C MOVZ W1, 0x2
	0x03775210 BL 0x3775004
	0x03775214 LDR X8, [X31 + 0x18]
	0x03775218 LDUR V0, [X31 + 0x8]
	0x0377521C STR X8, [X19 + 0x10]
	0x03775220 STR V0, [X19]
	0x03775224 LDP X30, X19, [X31 + 0x20]
	0x03775228 ADD X31, X31, 0x30
	0x0377522C RET
	0x03775230 STR X30, [X31 - 0x10]!

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0xC6C000
	009 Move W8, [X23+3878]
	010 Move X22, X3
	011 Move X21, X2
	012 Move X20, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x9A7000
	019 Move X0, [X0+3352]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X23+3878], W8
	023 Compare X19, 0
	024 JumpIfEqual {113}
	025 Move X23, 0x9A7000
	026 Move X23, [X23+3352]
	027 Move X0, [X23]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 NotImplemented "Instruction LDRSW not yet implemented."
	033 Compare X22, 0
	034 JumpIfEqual {43}
	035 Move X0, [X23]
	036 Move X8, X24
	037 Move W9, [X0+224]
	038 Compare W9, 0
	039 JumpIfNotEqual {42}
	040 Call 0x1C17DFC
	041 NotImplemented "Instruction LDRSW not yet implemented."
	042 Add X22, X8, X22
	043 Move X0, [X23]
	044 Add X20, X24, X20
	045 Add X21, X24, X21
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1C17DFC
	050 Move W3, [X19+28]
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Compare X22, 0
	053 JumpIfEqual {88}
	054 Move X0, [X23]
	055 Move W8, [X0+224]
	056 Compare W8, 0
	057 JumpIfNotEqual {59}
	058 Call 0x1C17DFC
	059 Move W1, [X19+24]
	060 Move X0, X22
	061 Move X2, X31
	062 Call MemoryHelpers.ReadSingleBit, X0, X1
	063 Move TEMP, X0
	064 And TEMP, TEMP, 1
	065 Compare TEMP, 1
	066 JumpIfNotEqual {88}
	067 Move W8, 1
	068 Move X0, [X23]
	069 Move W8, [X0+224]
	070 Compare W8, 0
	071 JumpIfNotEqual {74}
	072 Call 0x1C17DFC
	073 Move W3, [X19+28]
	074 Move W2, [X19+24]
	075 Move X0, X20
	076 Move X1, X21
	077 Move X4, X22
	078 Move X20, [X31+48]
	079 Move X19, [X31+56]
	080 Move X22, [X31+32]
	081 Move X21, [X31+40]
	082 Move X24, [X31+16]
	083 Move X23, [X31+24]
	084 Move X5, X31
	085 Move X30, [X31+64]
	086 Call MemoryHelpers.MemCmpBitRegion, X0, X1, X2, X3, X4
	087 Return X0
	088 Move X0, [X23]
	089 Move W8, [X0+224]
	090 Compare W8, 0
	091 JumpIfNotEqual {93}
	092 Call 0x1C17DFC
	093 Move W1, [X19+24]
	094 Move X0, X21
	095 Move X2, X31
	096 Call MemoryHelpers.ReadSingleBit, X0, X1
	097 Move W1, [X19+24]
	098 Move W19, W0
	099 Move X0, X20
	100 Move X2, X31
	101 Call MemoryHelpers.ReadSingleBit, X0, X1
	102 Xor W8, W19, W0
	103 Xor W8, W8, 1
	104 Move X20, [X31+48]
	105 Move X19, [X31+56]
	106 Move X22, [X31+32]
	107 Move X21, [X31+40]
	108 Move X24, [X31+16]
	109 Move X23, [X31+24]
	110 And W0, W8, 1
	111 Move X30, [X31+64]
	112 Return X0
	113 Call 0x1C17F20

Method: System.Boolean CompareState(UnityEngine.InputSystem.InputControl control, System.Void* statePtr, System.Void* maskPtr = null)

Disassembly:
	0x03775450 AND X26, X8, 0x3FF
	0x03775454 B.EQ 0x377549C
	0x03775458 CBZ X22, 0x3775474
	0x0377545C LDR X0, [X19 + 0x58]
	0x03775460 LDP X1, X4, [X19 + 0x30]
	0x03775464 MOV W3, W20
	0x03775468 MOV X5, X31
	0x0377546C BL 0x37626EC
	0x03775470 TBNZ X0, 0x0, 0x37754E8
	0x03775474 CBZ X21, 0x377549C
	0x03775478 LDR W8, [X19 + 0x54]
	0x0377547C LDR X0, [X19 + 0x58]
	0x03775480 LDR X1, [X19 + 0x28]
	0x03775484 LDR X4, [X19 + 0x38]
	0x03775488 SUB W2, W27, W8
	0x0377548C MOV W3, W20
	0x03775490 MOV X5, X31
	0x03775494 BL 0x37626EC
	0x03775498 TBNZ X0, 0x0, 0x37754E8
	0x0377549C LDR X8, [X19 + 0x20]
	0x037754A0 CBZ X8, 0x37755A8
	0x037754A4 LDR W9, [X8 + 0x18]
	0x037754A8 CMP W26, W9
	0x037754AC B.CS 0x37755AC
	0x037754B0 ADD X8, X8, X26, 0x3, LSL
	0x037754B4 LDR X8, [X8 + 0x20]
	0x037754B8 LDR W9, [X19]
	0x037754BC STR X8, [X19 + 0x48]
	0x037754C0 TBNZ X9, 0x3, 0x37754D0
	0x037754C4 CBZ X8, 0x37755A8
	0x037754C8 LDRB W10, [X8 + 0xA0]
	0x037754CC TBNZ X10, 0x1, 0x37754E4
	0x037754D0 TBNZ X9, 0x2, 0x377550C
	0x037754D4 CBZ X8, 0x37755A8
	0x037754D8 LDRB W8, [X8 + 0xA0]
	0x037754DC ANDS W31, W8, 0x44444444
	0x037754E0 B.EQ 0x377550C
	0x037754E4 STR X31, [X19 + 0x48]
	0x037754E8 LDR W8, [X19 + 0x50]
	0x037754EC LDR W9, [X19 + 0x18]
	0x037754F0 ADD W8, W8, 0x1
	0x037754F4 CMP W8, W9
	0x037754F8 STR W8, [X19 + 0x50]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Compare X0, 0
	006 JumpIfEqual {25}
	007 Move X20, X1
	008 Compare X1, 0
	009 JumpIfEqual {32}
	010 Move X19, X2
	011 Move X21, X0
	012 Call InputControl.GetDeviceIndex, X0
	013 Move X1, X31
	014 Call InputStateBuffers.GetFrontBufferForDevice, X0
	015 Move X2, X20
	016 Move X3, X19
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 Move X1, X0
	020 Move X0, X21
	021 Move X30, [X31+32]
	022 Move X21, [X31+40]
	023 Call InputControlExtensions.CompareState, X0, X1, X2, X3
	024 Return X0
	025 Move X0, 0x984000
	026 Move X0, [X0+1320]
	027 Call 0x1C17D08
	028 Call 0x1C17F10
	029 Move X19, X0
	030 Move X0, 0x9A7000
	031 Move X0, [X0+3424]
	032 Move X0, 0x984000
	033 Move X0, [X0+1320]
	034 Call 0x1C17D08
	035 Call 0x1C17F10
	036 Move X19, X0
	037 Move X0, 0x9A7000
	038 Move X0, [X0+3464]
	039 Call 0x1C17D08
	040 Move X1, X0
	041 Move X0, X19
	042 Move X2, X31
	043 Call ArgumentNullException..ctor, X0, X1
	044 Move X0, 0x9D2000
	045 Move X0, [X0+3152]
	046 Call 0x1C17D08
	047 Move X1, X0
	048 Move X0, X19
	049 Call 0x1C17DEC

Method: System.Boolean HasValueChangeInState(UnityEngine.InputSystem.InputControl control, System.Void* statePtr)

Disassembly:
	0x037754FC B.LT 0x37753F4
	0x03775500 B 0x3775518
	0x03775504 STR W2, [X19 + 0x60]
	0x03775508 B 0x3775518
	0x0377550C LDR W8, [X19 + 0x50]
	0x03775510 ADD W8, W8, 0x1
	0x03775514 STR W8, [X19 + 0x50]
	0x03775518 LDR X0, [X19 + 0x48]
	0x0377551C CBZ X0, 0x3775304
	0x03775520 LDR V0, [X19 + 0x68]
	0x03775524 FCMP S0, 0x0
	0x03775528 B.EQ 0x3775584
	0x0377552C LDR X20, [X19 + 0x8]
	0x03775530 CBZ X20, 0x37755A8
	0x03775534 LDR X8, [X23]
	0x03775538 LDR X26, [X19 + 0x58]
	0x0377553C LDR W27, [X19 + 0x54]
	0x03775540 LDR W9, [X8 + 0xE0]
	0x03775544 CBNZ W9, 0x3775558
	0x03775548 MOV X0, X8
	0x0377554C BL 0x1C16DFC
	0x03775550 LDR X0, [X19 + 0x48]
	0x03775554 CBZ X0, 0x37755A8
	0x03775558 LDR X8, [X0]
	0x0377555C LDR W9, [X20 + 0x14]
	0x03775560 LDP X10, X2, [X8 + 0x198]
	0x03775564 SUB X8, X26, X27, 0x3, LSR
	0x03775568 SUB X1, X8, X9
	0x0377556C BLR X10
	0x03775570 FCMP S0, 0x0
	0x03775574 B.LT 0x3775584
	0x03775578 LDR V1, [X19 + 0x68]
	0x0377557C FCMP S0, S1
	0x03775580 B.MI 0x3775304
	0x03775584 MOVZ W0, 0x1
	0x03775588 B 0x3775590
	0x0377558C MOV W0, W31
	0x03775590 LDP X20, X19, [X31 + 0x40]
	0x03775594 LDP X22, X21, [X31 + 0x30]
	0x03775598 LDP X24, X23, [X31 + 0x20]
	0x0377559C LDP X26, X25, [X31 + 0x10]
	0x037755A0 LDP X30, X27, [X31], #0x50
	0x037755A4 RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X0, 0
	005 JumpIfEqual {23}
	006 Move X19, X1
	007 Compare X1, 0
	008 JumpIfEqual {30}
	009 Move X20, X0
	010 Call InputControl.GetDeviceIndex, X0
	011 Move X1, X31
	012 Call InputStateBuffers.GetFrontBufferForDevice, X0
	013 Move X8, [X20]
	014 Move X1, X0
	015 Move X0, X20
	016 Move X2, X19
	017 Move X4, [X8+504]
	018 Move X3, [X8+512]
	019 Move X20, [X31+16]
	020 Move X19, [X31+24]
	021 Move X30, [X31+32]
	022 CallNoReturn X4
	023 Move X0, 0x984000
	024 Move X0, [X0+1320]
	025 Call 0x1C17D08
	026 Call 0x1C17F10
	027 Move X19, X0
	028 Move X0, 0x9A7000
	029 Move X0, [X0+3424]
	030 Move X0, 0x984000
	031 Move X0, [X0+1320]
	032 Call 0x1C17D08
	033 Call 0x1C17F10
	034 Move X19, X0
	035 Move X0, 0x9A7000
	036 Move X0, [X0+3464]
	037 Call 0x1C17D08
	038 Move X1, X0
	039 Move X0, X19
	040 Move X2, X31
	041 Call ArgumentNullException..ctor, X0, X1
	042 Move X0, 0x9D2000
	043 Move X0, [X0+3160]
	044 Call 0x1C17D08
	045 Move X1, X0
	046 Move X0, X19
	047 Call 0x1C17DEC

Method: System.Boolean HasValueChangeInEvent(UnityEngine.InputSystem.InputControl control, UnityEngine.InputSystem.LowLevel.InputEventPtr eventPtr)

Disassembly:
	0x037755A8 BL 0x1C16F20
	0x037755AC BL 0x1C16F28
	0x037755B0 ADRP X0, 0x9A7000
	0x037755B4 LDR X0, [X0 + 0x4B8]
	0x037755B8 BL 0x1C16D08
	0x037755BC BL 0x1C16F10
	0x037755C0 MOV X19, X0
	0x037755C4 ADRP X0, 0x9D1000
	0x037755C8 LDR X0, [X0 + 0xCF0]
	0x037755CC BL 0x1C16D08
	0x037755D0 MOV X1, X0
	0x037755D4 MOV X0, X19
	0x037755D8 MOV X2, X31
	0x037755DC BL 0x338C448
	0x037755E0 ADRP X0, 0x9D1000
	0x037755E4 LDR X0, [X0 + 0xCF8]
	0x037755E8 BL 0x1C16D08
	0x037755EC MOV X1, X0
	0x037755F0 MOV X0, X19
	0x037755F4 BL 0x1C16DEC
	0x037755F8 STR D8, [X31 - 0x30]!
	0x037755FC STR X30, [X31 + 0x8]
	0x03775600 STP X22, X21, [X31 + 0x10]
	0x03775604 STP X20, X19, [X31 + 0x20]
	0x03775608 ADRP X22, 0xC6B000
	0x0377560C ADRP X21, 0x9D1000
	0x03775610 LDRB W8, [X22 + 0xF2E]
	0x03775614 LDR X21, [X21 + 0xD00]
	0x03775618 MOV W20, W1
	0x0377561C MOV V8.16B, V0.16B
	0x03775620 MOV X19, X0
	0x03775624 TBNZ X8, 0x0, 0x377563C
	0x03775628 ADRP X0, 0x9D1000
	0x0377562C LDR X0, [X0 + 0xD00]
	0x03775630 BL 0x1C16CF4
	0x03775634 MOVZ W8, 0x1
	0x03775638 STRB W8, [X22 + 0xF2E]
	0x0377563C LDR X0, [X21]
	0x03775640 AND W21, W20, 0x1
	0x03775644 BL 0x1C16F10
	0x03775648 MOV X1, X31
	0x0377564C MOV X20, X0
	0x03775650 BL 0x33BDD8C
	0x03775654 MOVN W8, 0x1
	0x03775658 MOV X0, X31
	0x0377565C STR W8, [X20 + 0x10]
	0x03775660 BL 0x33C151C
	0x03775664 STR W0, [X20 + 0x20]
	0x03775668 STR X19, [X20 + 0x30]
	0x0377566C STR S8, [X20 + 0x3C]
	0x03775670 STRB W21, [X20 + 0x41]
	0x03775674 MOV X0, X20
	0x03775678 LDP X20, X19, [X31 + 0x20]
	0x0377567C LDP X22, X21, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move [X31+8], X1
	005 Compare X0, 0
	006 JumpIfEqual {37}
	007 Move X19, X0
	008 Add X0, X31, 8
	009 Move X1, X31
	010 Call InputEventPtr.get_valid, X0
	011 Move TEMP, X0
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfNotEqual {44}
	015 Move X1, [X31+8]
	016 Move X0, X19
	017 Call InputControlExtensions.GetStatePtrFromStateEvent, X0, X1
	018 Compare X0, 0
	019 JumpIfEqual {32}
	020 Move X20, X0
	021 Move X0, X19
	022 Call InputControl.GetDeviceIndex, X0
	023 Move X1, X31
	024 Call InputStateBuffers.GetFrontBufferForDevice, X0
	025 Move X8, [X19]
	026 Move X1, X0
	027 Move X0, X19
	028 Move X2, X20
	029 Move X9, [X8+504]
	030 Move X3, [X8+512]
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 And W0, W0, 1
	035 Move X30, [X31+32]
	036 Return X0
	037 Move X0, 0x984000
	038 Move X0, [X0+1320]
	039 Call 0x1C17D08
	040 Call 0x1C17F10
	041 Move X19, X0
	042 Move X0, 0x9A7000
	043 Move X0, [X0+3424]
	044 Move X0, 0x984000
	045 Move X0, [X0+1320]
	046 Call 0x1C17D08
	047 Call 0x1C17F10
	048 Move X19, X0
	049 Move X0, 0x9A7000
	050 Move X0, [X0+3440]
	051 Call 0x1C17D08
	052 Move X1, X0
	053 Move X0, X19
	054 Move X2, X31
	055 Call ArgumentNullException..ctor, X0, X1
	056 Move X0, 0x9D2000
	057 Move X0, [X0+3168]
	058 Call 0x1C17D08
	059 Move X1, X0
	060 Move X0, X19
	061 Call 0x1C17DEC

Method: System.Void* GetStatePtrFromStateEvent(UnityEngine.InputSystem.InputControl control, UnityEngine.InputSystem.LowLevel.InputEventPtr eventPtr)

Disassembly:
	0x03774B98 LDR X3, [X8]
	0x03774B9C BL 0x21FD914
	0x03774BA0 TBZ X0, 0x0, 0x3774BDC
	0x03774BA4 LDR X8, [X20]
	0x03774BA8 MOV X0, X20
	0x03774BAC MOV X1, X21
	0x03774BB0 LDR X9, [X8 + 0x248]
	0x03774BB4 LDR X2, [X8 + 0x250]
	0x03774BB8 BLR X9
	0x03774BBC ADRP X8, 0x9D2000
	0x03774BC0 LDR V1, [X31 + 0xC]
	0x03774BC4 LDR X8, [X8 + 0xC98]
	0x03774BC8 MOV X0, X20
	0x03774BCC MOV X1, X19
	0x03774BD0 FADD S0, S0, S1
	0x03774BD4 LDR X2, [X8]
	0x03774BD8 BL 0x21FDF20
	0x03774BDC LDP X20, X19, [X31 + 0x20]
	0x03774BE0 LDP X22, X21, [X31 + 0x10]
	0x03774BE4 LDR X30, [X31], #0x30
	0x03774BE8 RET
	0x03774BEC ADRP X0, 0x984000
	0x03774BF0 LDR X0, [X0 + 0x528]
	0x03774BF4 BL 0x1C16D08
	0x03774BF8 BL 0x1C16F10
	0x03774BFC MOV X19, X0
	0x03774C00 ADRP X0, 0x9A7000
	0x03774C04 LDR X0, [X0 + 0xD60]
	0x03774C08 BL 0x1C16D08
	0x03774C0C MOV X1, X0
	0x03774C10 MOV X0, X19
	0x03774C14 MOV X2, X31
	0x03774C18 BL 0x330E100
	0x03774C1C ADRP X0, 0x9D2000
	0x03774C20 LDR X0, [X0 + 0xCA0]
	0x03774C24 BL 0x1C16D08
	0x03774C28 MOV X1, X0
	0x03774C2C MOV X0, X19
	0x03774C30 BL 0x1C16DEC
	0x03774C34 STR X30, [X31 - 0x30]!
	0x03774C38 STP X22, X21, [X31 + 0x10]
	0x03774C3C STP X20, X19, [X31 + 0x20]
	0x03774C40 ADRP X22, 0xC6C000
	0x03774C44 LDRB W8, [X22 + 0xF2A]
	0x03774C48 MOV X19, X2
	0x03774C4C MOV X21, X1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move [X31+8], X1
	005 Compare X0, 0
	006 JumpIfEqual {27}
	007 Move X19, X0
	008 Add X0, X31, 8
	009 Move X1, X31
	010 Call InputEventPtr.get_valid, X0
	011 Move TEMP, X0
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfNotEqual {34}
	015 Move X20, [X31+8]
	016 Add X0, X31, 8
	017 Move X1, X31
	018 Call InputEventPtr.get_type, X0
	019 And X2, X0, 0
	020 Move X0, X19
	021 Move X1, X20
	022 Call InputControlExtensions.GetStatePtrFromStateEventUnchecked, X0, X1, X2
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 Return X0
	027 Move X0, 0x985000
	028 Move X0, [X0+1320]
	029 Call 0x1C17D08
	030 Call 0x1C17F10
	031 Move X19, X0
	032 Move X0, 0x9A8000
	033 Move X0, [X0+3424]
	034 Move X0, 0x985000
	035 Move X0, [X0+1320]
	036 Call 0x1C17D08
	037 Call 0x1C17F10
	038 Move X19, X0
	039 Move X0, 0x9A8000
	040 Move X0, [X0+3440]
	041 Call 0x1C17D08
	042 Move X1, X0
	043 Move X0, X19
	044 Move X2, X31
	045 Call ArgumentNullException..ctor, X0, X1
	046 Move X0, 0x9D3000
	047 Move X0, [X0+3072]
	048 Call 0x1C17D08
	049 Move X1, X0
	050 Move X0, X19
	051 Call 0x1C17DEC

Method: System.Void* GetStatePtrFromStateEventUnchecked(UnityEngine.InputSystem.InputControl control, UnityEngine.InputSystem.LowLevel.InputEventPtr eventPtr, UnityEngine.InputSystem.Utilities.FourCC eventType)

Disassembly:
	0x03775680 LDR X30, [X31 + 0x8]
	0x03775684 LDR V8, [X31], #0x30
	0x03775688 RET
	0x0377568C STR X30, [X31 - 0x20]!
	0x03775690 STP X20, X19, [X31 + 0x10]
	0x03775694 MOV W19, W1
	0x03775698 MOV X1, X31
	0x0377569C MOV X20, X0
	0x037756A0 BL 0x33BDD8C
	0x037756A4 MOV X0, X31
	0x037756A8 STR W19, [X20 + 0x10]
	0x037756AC BL 0x33C151C
	0x037756B0 STR W0, [X20 + 0x20]
	0x037756B4 LDP X20, X19, [X31 + 0x10]
	0x037756B8 LDR X30, [X31], #0x20
	0x037756BC RET
	0x037756C0 STR X30, [X31 - 0x20]!
	0x037756C4 STP X20, X19, [X31 + 0x10]
	0x037756C8 CBZ X0, 0x37756E0
	0x037756CC LDRB W8, [X0 + 0xA0]
	0x037756D0 TBNZ X8, 0x5, 0x3775728
	0x037756D4 LDP X20, X19, [X31 + 0x10]
	0x037756D8 LDR X30, [X31], #0x20
	0x037756DC RET
	0x037756E0 ADRP X0, 0x983000
	0x037756E4 LDR X0, [X0 + 0x528]
	0x037756E8 BL 0x1C16D08
	0x037756EC BL 0x1C16F10
	0x037756F0 MOV X19, X0
	0x037756F4 ADRP X0, 0x9A6000
	0x037756F8 LDR X0, [X0 + 0xD60]
	0x037756FC BL 0x1C16D08
	0x03775700 MOV X1, X0
	0x03775704 MOV X0, X19
	0x03775708 MOV X2, X31
	0x0377570C BL 0x330E100
	0x03775710 ADRP X0, 0x9D1000
	0x03775714 LDR X0, [X0 + 0xD08]
	0x03775718 BL 0x1C16D08
	0x0377571C MOV X1, X0
	0x03775720 MOV X0, X19
	0x03775724 BL 0x1C16DEC
	0x03775728 ADRP X8, 0x9D1000
	0x0377572C LDR X8, [X8 + 0xD10]
	0x03775730 MOV X19, X0
	0x03775734 MOV X0, X8
	0x03775738 BL 0x1C16D08
	0x0377573C MOV X1, X19
	0x03775740 MOV X2, X31
	0x03775744 BL 0x321EFD0
	0x03775748 MOV X19, X0
	0x0377574C ADRP X0, 0x97E000
	0x03775750 LDR X0, [X0 + 0x5B0]
	0x03775754 BL 0x1C16D08
	0x03775758 BL 0x1C16F10
	0x0377575C MOV X1, X19
	0x03775760 MOV X2, X31
	0x03775764 MOV X20, X0
	0x03775768 BL 0x337DF1C
	0x0377576C ADRP X0, 0x9D1000
	0x03775770 LDR X0, [X0 + 0xD08]
	0x03775774 BL 0x1C16D08
	0x03775778 MOV X1, X0
	0x0377577C MOV X0, X20
	0x03775780 BL 0x1C16DEC
	0x03775784 STR X30, [X31 - 0x40]!
	0x03775788 STP X24, X23, [X31 + 0x10]
	0x0377578C STP X22, X21, [X31 + 0x20]
	0x03775790 STP X20, X19, [X31 + 0x30]
	0x03775794 ADRP X23, 0xC6B000
	0x03775798 LDRB W8, [X23 + 0xF2F]
	0x0377579C MOV W20, W3
	0x037757A0 MOV W21, W2
	0x037757A4 MOV W22, W1
	0x037757A8 MOV X19, X0
	0x037757AC TBNZ X8, 0x0, 0x37757D0
	0x037757B0 ADRP X0, 0x9D0000
	0x037757B4 LDR X0, [X0 + 0x2D0]
	0x037757B8 BL 0x1C16CF4
	0x037757BC ADRP X0, 0x9D1000
	0x037757C0 LDR X0, [X0 + 0xD18]
	0x037757C4 BL 0x1C16CF4
	0x037757C8 MOVZ W8, 0x1
	0x037757CC STRB W8, [X23 + 0xF2F]
	0x037757D0 CBZ X19, 0x3775868
	0x037757D4 LDRB W8, [X19 + 0xA0]
	0x037757D8 TBNZ X8, 0x5, 0x377589C
	0x037757DC CMP W22, 0x0
	0x037757E0 B.LE 0x37758F0
	0x037757E4 TBNZ X21, 0x1F, 0x3775910
	0x037757E8 TBNZ X20, 0x1F, 0x3775930
	0x037757EC ADRP X24, 0x9D0000
	0x037757F0 LDR X24, [X24 + 0x2D0]
	0x037757F4 STR X19, [X19 + 0x78]
	0x037757F8 ADRP X23, 0x9D1000
	0x037757FC MOV W1, W22
	0x03775800 LDR X0, [X24]
	0x03775804 LDR X23, [X23 + 0xD18]
	0x03775808 BL 0x1C16D6C
	0x0377580C CMP W21, 0x1
	0x03775810 STR X0, [X19 + 0x150]
	0x03775814 B.LT 0x3775838
	0x03775818 LDR X0, [X23]
	0x0377581C MOV W1, W21
	0x03775820 BL 0x1C16D6C
	0x03775824 STR X0, [X19 + 0x140]
	0x03775828 LDR X0, [X24]
	0x0377582C MOV W1, W21
	0x03775830 BL 0x1C16D6C
	0x03775834 STR X0, [X19 + 0x148]
	0x03775838 CMP W20, 0x1
	0x0377583C B.LT 0x3775850
	0x03775840 LDR X0, [X23]
	0x03775844 MOV W1, W20
	0x03775848 BL 0x1C16D6C
	0x0377584C STR X0, [X19 + 0x138]
	0x03775850 MOV X0, X19
	0x03775854 LDP X20, X19, [X31 + 0x30]
	0x03775858 LDP X22, X21, [X31 + 0x20]
	0x0377585C LDP X24, X23, [X31 + 0x10]
	0x03775860 LDR X30, [X31], #0x40
	0x03775864 RET
	0x03775868 ADRP X0, 0x983000
	0x0377586C LDR X0, [X0 + 0x528]
	0x03775870 BL 0x1C16D08
	0x03775874 BL 0x1C16F10
	0x03775878 MOV X19, X0
	0x0377587C ADRP X0, 0x9A6000
	0x03775880 LDR X0, [X0 + 0xD20]
	0x03775884 BL 0x1C16D08
	0x03775888 MOV X1, X0
	0x0377588C MOV X0, X19
	0x03775890 MOV X2, X31
	0x03775894 BL 0x330E100
	0x03775898 B 0x3775960
	0x0377589C ADRP X0, 0x9D1000
	0x037758A0 LDR X0, [X0 + 0xD10]
	0x037758A4 BL 0x1C16D08
	0x037758A8 MOV X1, X19
	0x037758AC MOV X2, X31
	0x037758B0 BL 0x321EFD0
	0x037758B4 MOV X19, X0
	0x037758B8 ADRP X0, 0x97E000
	0x037758BC LDR X0, [X0 + 0x5B0]
	0x037758C0 BL 0x1C16D08
	0x037758C4 BL 0x1C16F10
	0x037758C8 MOV X1, X19
	0x037758CC MOV X2, X31
	0x037758D0 MOV X20, X0
	0x037758D4 BL 0x337DF1C
	0x037758D8 ADRP X0, 0x9D1000
	0x037758DC LDR X0, [X0 + 0xD20]
	0x037758E0 BL 0x1C16D08
	0x037758E4 MOV X1, X0
	0x037758E8 MOV X0, X20
	0x037758EC BL 0x1C16DEC
	0x037758F0 ADRP X0, 0x986000
	0x037758F4 LDR X0, [X0 + 0x760]
	0x037758F8 BL 0x1C16D08
	0x037758FC BL 0x1C16F10
	0x03775900 MOV X19, X0
	0x03775904 ADRP X0, 0x9D1000
	0x03775908 LDR X0, [X0 + 0xD28]
	0x0377590C B 0x377594C
	0x03775910 ADRP X0, 0x986000
	0x03775914 LDR X0, [X0 + 0x760]
	0x03775918 BL 0x1C16D08
	0x0377591C BL 0x1C16F10
	0x03775920 MOV X19, X0
	0x03775924 ADRP X0, 0x9D1000
	0x03775928 LDR X0, [X0 + 0xD30]
	0x0377592C B 0x377594C
	0x03775930 ADRP X0, 0x986000
	0x03775934 LDR X0, [X0 + 0x760]
	0x03775938 BL 0x1C16D08
	0x0377593C BL 0x1C16F10
	0x03775940 MOV X19, X0
	0x03775944 ADRP X0, 0x9D1000
	0x03775948 LDR X0, [X0 + 0xD38]
	0x0377594C BL 0x1C16D08
	0x03775950 MOV X1, X0
	0x03775954 MOV X0, X19
	0x03775958 MOV X2, X31
	0x0377595C BL 0x3316014
	0x03775960 ADRP X0, 0x9D1000
	0x03775964 LDR X0, [X0 + 0xD20]
	0x03775968 BL 0x1C16D08
	0x0377596C MOV X1, X0
	0x03775970 MOV X0, X19
	0x03775974 BL 0x1C16DEC

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X22, 0xC6C000
	011 Move W8, [X22+3879]
	012 Move X21, X2
	013 Move X20, X1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0x9D2000
	020 Move X0, [X0+3176]
	021 Call 0x1C17CF4
	022 Move X0, 0x9A7000
	023 Move X0, [X0+3352]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X22+3879], W8
	027 Move W8, 0x5441
	028 NotImplemented "Instruction MOVK not yet implemented."
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move [X31+12], W31
	031 Move W8, 0x4154
	032 NotImplemented "Instruction MOVK not yet implemented."
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X0, X20
	035 Move X1, X31
	036 Call StateEvent.FromUnchecked, X0
	037 Move [X31+12], W31
	038 Compare X0, 0
	039 JumpIfEqual {169}
	040 Move W25, [X0+20]
	041 Move X1, X31
	042 Move X22, X0
	043 Call StateEvent.get_stateSizeInBytes, X0
	044 Move W21, W0
	045 Move X0, X22
	046 Move X1, X31
	047 Call StateEvent.get_state, X0
	048 Move X22, X0
	049 Move W24, W31
	050 Move X0, X20
	051 Move X1, X31
	052 Call DeltaStateEvent.FromUnchecked, X0
	053 Compare X0, 0
	054 JumpIfEqual {169}
	055 Move W25, [X0+20]
	056 Move W24, [X0+24]
	057 Move X1, X31
	058 Move X22, X0
	059 Move [X31+12], W24
	060 Call DeltaStateEvent.get_deltaStateSizeInBytes, X0
	061 Move W21, W0
	062 Move X0, X22
	063 Move X1, X31
	064 Call DeltaStateEvent.get_deltaState, X0
	065 Move X22, X0
	066 Compare X19, 0
	067 JumpIfEqual {169}
	068 Move X23, [X19+120]
	069 Compare X23, 0
	070 JumpIfEqual {169}
	071 Move X26, 0x9A7000
	072 Move X26, [X26+3352]
	073 Move X0, [X26]
	074 Move W8, [X0+224]
	075 Compare W8, 0
	076 JumpIfNotEqual {78}
	077 Call 0x1C17DFC
	078 Move W8, [X23+16]
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Move X0, [X26]
	081 Move W8, [X0+224]
	082 Compare W8, 0
	083 JumpIfNotEqual {85}
	084 Call 0x1C17DFC
	085 Move W8, [X23+20]
	086 Add X19, X19, 16
	087 Move X0, X19
	088 Move X1, X31
	089 Add W8, W8, W24
	090 Move [X31+12], W8
	091 Call InputStateBlock.get_effectiveByteOffset, X0
	092 Move W8, [X31+12]
	093 Move X9, W0
	094 Subtract X20, X9, X8
	095 Move X0, [X26]
	096 Move W8, [X0+224]
	097 Compare W8, 0
	098 JumpIfNotEqual {100}
	099 Call 0x1C17DFC
	100 Move X0, X19
	101 Move X1, X31
	102 Call InputStateBlock.get_alignedSizeInBytes, X0
	103 Add X8, X20, W0
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Move X0, X31
	106 NotImplemented "Instruction LDRSW not yet implemented."
	107 Subtract X0, X22, X8
	108 Move W8, [X23+220]
	109 Move TEMP, X8
	110 And TEMP, TEMP, 2
	111 Compare TEMP, 2
	112 JumpIfNotEqual {158}
	113 Move X25, 0x9D2000
	114 Move X25, [X25+3176]
	115 Move X0, X23
	116 Move X24, [X25]
	117 Move X1, X24
	118 Call 0x1C17E00
	119 Compare X0, 0
	120 JumpIfEqual {203}
	121 Move X25, [X25]
	122 Move X0, X23
	123 Move X1, X25
	124 Call 0x1C17E00
	125 Compare X0, 0
	126 JumpIfEqual {206}
	127 Move X8, [X0]
	128 Move X24, X0
	129 NotImplemented "Instruction LDRH not yet implemented."
	130 Compare X9, 0
	131 JumpIfEqual {138}
	132 Move X10, [X8+176]
	133 Add X10, X10, 8
	134 NotImplemented "Instruction LDUR not yet implemented."
	135 NotImplemented "Instruction CMP not yet implemented."
	136 Subtract X9, X9, 1
	137 Add X10, X10, 16
	138 Move W2, 2
	139 Move X0, X24
	140 Move X1, X25
	141 Call 0x1C5D788
	142 Move W9, [X10]
	143 Add W9, W9, 2
	144 Add X8, X8, W9
	145 Add X0, X8, 312
	146 Move X8, [X0]
	147 Move X4, [X0+8]
	148 Add X3, X31, 12
	149 Move X0, X24
	150 Move X1, X19
	151 Move X2, X20
	152 NotImplemented "Instruction BLR not yet implemented."
	153 Move TEMP, X0
	154 And TEMP, TEMP, 1
	155 Compare TEMP, 1
	156 JumpIfNotEqual {158}
	157 Move W24, [X31+12]
	158 Move X0, X31
	159 Move X20, [X31+64]
	160 Move X19, [X31+72]
	161 Move X22, [X31+48]
	162 Move X21, [X31+56]
	163 Move X24, [X31+32]
	164 Move X23, [X31+40]
	165 Move X26, [X31+16]
	166 Move X25, [X31+24]
	167 Move X30, [X31+80]
	168 Return X0
	169 Call 0x1C17F20
	170 Move [X31+8], W21
	171 Move X0, 0x9A7000
	172 Move X0, [X0+3368]
	173 Call 0x1C17D08
	174 Add X1, X31, 8
	175 Call 0x1C17E04
	176 Move X19, X0
	177 Move X0, 0x9D2000
	178 Move X0, [X0+3184]
	179 Call 0x1C17D08
	180 Move X1, X19
	181 Move X2, X31
	182 Call String.Format, X0, X1
	183 Move X19, X0
	184 Move X0, 0x987000
	185 Move X0, [X0+1400]
	186 Call 0x1C17D08
	187 Call 0x1C17F10
	188 Move X20, X0
	189 Move X0, 0x9A7000
	190 Move X0, [X0+3440]
	191 Call 0x1C17D08
	192 Move X2, X0
	193 Move X0, X20
	194 Move X1, X19
	195 Move X3, X31
	196 Call ArgumentException..ctor, X0, X1, X2
	197 Move X0, 0x9D2000
	198 Move X0, [X0+3192]
	199 Call 0x1C17D08
	200 Move X1, X0
	201 Move X0, X20
	202 Call 0x1C17DEC
	203 Move X0, X23
	204 Move X1, X24
	205 Call 0x1C181E0
	206 Move X0, X23
	207 Move X1, X25
	208 Call 0x1C181E0

Method: System.Boolean ResetToDefaultStateInEvent(UnityEngine.InputSystem.InputControl control, UnityEngine.InputSystem.LowLevel.InputEventPtr eventPtr)

Disassembly:
	0x03775984 STP X30, X23, [X31 + 0x10]
	0x03775988 STP X22, X21, [X31 + 0x20]
	0x0377598C STP X20, X19, [X31 + 0x30]
	0x03775990 ADRP X23, 0xC6B000
	0x03775994 LDRB W8, [X23 + 0xF32]
	0x03775998 MOV V8.16B, V0.16B
	0x0377599C MOV W21, W3
	0x037759A0 MOV X20, X2
	0x037759A4 MOV X22, X1
	0x037759A8 MOV X19, X0
	0x037759AC TBNZ X8, 0x0, 0x37759D0
	0x037759B0 ADRP X0, 0x9D1000
	0x037759B4 LDR X0, [X0 + 0xD40]
	0x037759B8 BL 0x1C16CF4
	0x037759BC ADRP X0, 0x9A6000
	0x037759C0 LDR X0, [X0 + 0xD18]
	0x037759C4 BL 0x1C16CF4
	0x037759C8 MOVZ W8, 0x1
	0x037759CC STRB W8, [X23 + 0xF32]
	0x037759D0 STR X20, [X19 + 0x8]
	0x037759D4 CBZ X20, 0x3775B3C
	0x037759D8 LDR X0, [X20 + 0x158]
	0x037759DC ADRP X8, 0x9D1000
	0x037759E0 LDR X8, [X8 + 0xD40]
	0x037759E4 STR X0, [X19 + 0x10]
	0x037759E8 LDR X1, [X8]
	0x037759EC BL 0x217B264
	0x037759F0 STR W0, [X19 + 0x18]
	0x037759F4 LDR X8, [X20 + 0x150]
	0x037759F8 MOVI V0.2D, 0x0
	0x037759FC STR X22, [X19 + 0x40]
	0x03775A00 STR W21, [X19]
	0x03775A04 STUR V0, [X19 + 0x58]
	0x03775A08 STUR V0, [X19 + 0x48]
	0x03775A0C STR X8, [X19 + 0x20]
	0x03775A10 STR S8, [X19 + 0x68]
	0x03775A14 TBNZ X21, 0x3, 0x3775B10
	0x03775A18 ADRP X22, 0xC6B000
	0x03775A1C LDRB W8, [X22 + 0xF95]
	0x03775A20 CBNZ W8, 0x3775A38
	0x03775A24 ADRP X0, 0x9A9000
	0x03775A28 LDR X0, [X0 + 0xFE8]
	0x03775A2C BL 0x1C16CF4
	0x03775A30 MOVZ W8, 0x1
	0x03775A34 STRB W8, [X22 + 0xF95]
	0x03775A38 ADRP X8, 0x9A9000
	0x03775A3C LDR X8, [X8 + 0xFE8]
	0x03775A40 ADRP X9, 0x9A6000
	0x03775A44 LDR X8, [X8]
	0x03775A48 LDR X9, [X9 + 0xD18]
	0x03775A4C LDR X8, [X8 + 0xB8]
	0x03775A50 LDR X0, [X9]
	0x03775A54 LDR X22, [X8 + 0x8]
	0x03775A58 LDR W9, [X0 + 0xE0]
	0x03775A5C CBNZ W9, 0x3775A64
	0x03775A60 BL 0x1C16DFC
	0x03775A64 LDR W8, [X20 + 0x14]
	0x03775A68 ADD X8, X8, X22
	0x03775A6C STR X8, [X19 + 0x38]
	0x03775A70 TBZ X21, 0x0, 0x3775B18
	0x03775A74 ADRP X22, 0xC66000
	0x03775A78 LDRB W8, [X22 + 0xA03]
	0x03775A7C CBNZ W8, 0x3775A94
	0x03775A80 ADRP X0, 0x9A9000
	0x03775A84 LDR X0, [X0 + 0xFE8]
	0x03775A88 BL 0x1C16CF4
	0x03775A8C MOVZ W8, 0x1
	0x03775A90 STRB W8, [X22 + 0xA03]
	0x03775A94 ADRP X8, 0x9A9000
	0x03775A98 LDR X8, [X8 + 0xFE8]
	0x03775A9C ADRP X9, 0x9A6000
	0x03775AA0 LDR X8, [X8]
	0x03775AA4 LDR X9, [X9 + 0xD18]
	0x03775AA8 LDR X8, [X8 + 0xB8]
	0x03775AAC LDR X0, [X9]
	0x03775AB0 LDR X22, [X8]
	0x03775AB4 LDR W9, [X0 + 0xE0]
	0x03775AB8 CBNZ W9, 0x3775AC0
	0x03775ABC BL 0x1C16DFC
	0x03775AC0 LDR W8, [X20 + 0x14]
	0x03775AC4 ADD X8, X8, X22
	0x03775AC8 STR X8, [X19 + 0x28]
	0x03775ACC TBZ X21, 0x1, 0x3775B20
	0x03775AD0 MOV X0, X20
	0x03775AD4 BL 0x37729EC
	0x03775AD8 MOV X1, X31
	0x03775ADC BL 0x380C47C
	0x03775AE0 ADRP X8, 0x9A6000
	0x03775AE4 LDR X8, [X8 + 0xD18]
	0x03775AE8 MOV X21, X0
	0x03775AEC LDR X8, [X8]
	0x03775AF0 LDR W9, [X8 + 0xE0]
	0x03775AF4 CBNZ W9, 0x3775B00
	0x03775AF8 MOV X0, X8
	0x03775AFC BL 0x1C16DFC
	0x03775B00 LDR W8, [X20 + 0x14]
	0x03775B04 ADD X8, X8, X21
	0x03775B08 STR X8, [X19 + 0x30]
	0x03775B0C B 0x3775B24
	0x03775B10 STR X31, [X19 + 0x38]
	0x03775B14 TBNZ X21, 0x0, 0x3775A74
	0x03775B18 STR X31, [X19 + 0x28]
	0x03775B1C TBNZ X21, 0x1, 0x3775AD0
	0x03775B20 STR X31, [X19 + 0x30]
	0x03775B24 MOV X0, X19
	0x03775B28 LDP X20, X19, [X31 + 0x30]
	0x03775B2C LDP X22, X21, [X31 + 0x20]
	0x03775B30 LDP X30, X23, [X31 + 0x10]
	0x03775B34 LDR V8, [X31], #0x40

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xC6C000
	007 Move W8, [X20+3880]
	008 Move X19, X0
	009 Move [X31+8], X1
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x9A7000
	015 Move X0, [X0+3352]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3880], W8
	019 Compare X19, 0
	020 JumpIfEqual {79}
	021 Add X0, X31, 8
	022 Move X1, X31
	023 Call InputEventPtr.get_valid, X0
	024 Move TEMP, X0
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfNotEqual {86}
	028 Add X0, X31, 8
	029 Move X1, X31
	030 Call InputEventPtr.get_type, X0
	031 Move W8, 0x5441
	032 NotImplemented "Instruction MOVK not yet implemented."
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move W8, 0x4154
	035 NotImplemented "Instruction MOVK not yet implemented."
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X1, [X31+8]
	038 Move X0, X19
	039 Call InputControlExtensions.GetStatePtrFromStateEvent, X0, X1
	040 Move X20, X0
	041 Compare X0, 0
	042 JumpIfEqual {71}
	043 Move X22, 0xC67000
	044 Move X21, 0x9A7000
	045 Move W8, [X22+2563]
	046 Move X21, [X21+3352]
	047 Compare W8, 0
	048 JumpIfNotEqual {54}
	049 Move X0, 0x9AA000
	050 Move X0, [X0+4072]
	051 Call 0x1C17CF4
	052 Move W8, 1
	053 Move [X22+2563], W8
	054 Move X8, 0x9AA000
	055 Move X8, [X8+4072]
	056 Move X0, [X21]
	057 Move X8, [X8]
	058 Move W9, [X0+224]
	059 Move X8, [X8+184]
	060 Move X21, [X8]
	061 Compare W9, 0
	062 JumpIfNotEqual {64}
	063 Call 0x1C17DFC
	064 Move W8, [X19+20]
	065 Move W2, [X19+24]
	066 Move W3, [X19+28]
	067 Move X4, X31
	068 Add X0, X8, X20
	069 Add X1, X8, X21
	070 Call MemoryHelpers.MemCpyBitRegion, X0, X1, X2, X3
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move X20, [X31+32]
	073 Move X19, [X31+40]
	074 Move X22, [X31+16]
	075 Move X21, [X31+24]
	076 NotImplemented "Instruction CSET not yet implemented."
	077 Move X30, [X31+48]
	078 Return X0
	079 Move X0, 0x984000
	080 Move X0, [X0+1320]
	081 Call 0x1C17D08
	082 Call 0x1C17F10
	083 Move X19, X0
	084 Move X0, 0x9A7000
	085 Move X0, [X0+3424]
	086 Move X0, 0x984000
	087 Move X0, [X0+1320]
	088 Call 0x1C17D08
	089 Call 0x1C17F10
	090 Move X19, X0
	091 Move X0, 0x9A7000
	092 Move X0, [X0+3440]
	093 Call 0x1C17D08
	094 Move X1, X0
	095 Move X0, X19
	096 Move X2, X31
	097 Call ArgumentNullException..ctor, X0, X1
	098 Move X0, 0x987000
	099 Move X0, [X0+1400]
	100 Call 0x1C17D08
	101 Call 0x1C17F10
	102 Move X19, X0
	103 Move X0, 0x9D2000
	104 Move X0, [X0+3200]
	105 Call 0x1C17D08
	106 Move X20, X0
	107 Move X0, 0x9A7000
	108 Move X0, [X0+3440]
	109 Call 0x1C17D08
	110 Move X2, X0
	111 Move X0, X19
	112 Move X1, X20
	113 Move X3, X31
	114 Call ArgumentException..ctor, X0, X1, X2
	115 Move X0, 0x9D2000
	116 Move X0, [X0+3208]
	117 Call 0x1C17D08
	118 Move X1, X0
	119 Move X0, X19
	120 Call 0x1C17DEC

Method: System.Void QueueValueChange(UnityEngine.InputSystem.InputControl`1<TValue> control, TValue value, System.Double time = -1)

Disassembly:
	0x021FE5A8 RET
	0x021FE5AC ADRP X0, 0x1EFA000
	0x021FE5B0 LDR X0, [X0 + 0x528]
	0x021FE5B4 BL 0x1C16D08
	0x021FE5B8 BL 0x1C16F10
	0x021FE5BC MOV X19, X0
	0x021FE5C0 ADRP X0, 0x1F1D000
	0x021FE5C4 LDR X0, [X0 + 0xD60]
	0x021FE5C8 BL 0x1C16D08
	0x021FE5CC MOV X1, X0
	0x021FE5D0 MOV X0, X19
	0x021FE5D4 MOV X2, X31
	0x021FE5D8 BL 0x330E100
	0x021FE5DC MOV X0, X19
	0x021FE5E0 MOV X1, X20
	0x021FE5E4 BL 0x1C16DEC
	0x021FE5E8 BL 0x3EB1B20
	0x021FE5EC STR X30, [X31 - 0x30]!
	0x021FE5F0 STP X22, X21, [X31 + 0x10]
	0x021FE5F4 STP X20, X19, [X31 + 0x20]
	0x021FE5F8 LDR X8, [X3 + 0x38]
	0x021FE5FC MOV X19, X3
	0x021FE600 MOV X21, X2
	0x021FE604 MOV W22, W1
	0x021FE608 MOV X20, X0
	0x021FE60C CBNZ X8, 0x21FE618
	0x021FE610 MOV X0, X19
	0x021FE614 BL 0x1C5C6E0
	0x021FE618 CBZ X20, 0x21FE7D4
	0x021FE61C LDR X8, [X19 + 0x38]
	0x021FE620 LDR X0, [X8]
	0x021FE624 LDRB W8, [X0 + 0x135]
	0x021FE628 TBNZ X8, 0x0, 0x21FE630
	0x021FE62C BL 0x1C5C684
	0x021FE630 LDR X8, [X20]
	0x021FE634 LDRB W9, [X0 + 0x130]
	0x021FE638 LDRB W10, [X8 + 0x130]
	0x021FE63C CMP W10, W9
	0x021FE640 B.CC 0x21FE67C
	0x021FE644 LDR X10, [X8 + 0xC8]
	0x021FE648 ADD X9, X10, X9, 0x3, LSL
	0x021FE64C LDUR X9, [X9 - 0x8]
	0x021FE650 CMP X9, X0
	0x021FE654 B.NE 0x21FE67C
	0x021FE658 LDR X4, [X8 + 0x258]
	0x021FE65C LDR X3, [X8 + 0x260]
	0x021FE660 AND W1, W22, 0x1
	0x021FE664 MOV X0, X20
	0x021FE668 MOV X2, X21
	0x021FE66C LDP X20, X19, [X31 + 0x20]
	0x021FE670 LDP X22, X21, [X31 + 0x10]
	0x021FE674 LDR X30, [X31], #0x30
	0x021FE678 BR X4
	0x021FE67C ADRP X0, 0x1EF5000
	0x021FE680 LDR X0, [X0 + 0xAC8]
	0x021FE684 BL 0x1C16D08
	0x021FE688 MOVZ W1, 0x5
	0x021FE68C BL 0x1C16D6C
	0x021FE690 MOV X21, X0
	0x021FE694 BL 0x19903C0
	0x021FE698 ADRP X0, 0x1F1D000
	0x021FE69C LDR X0, [X0 + 0xD78]
	0x021FE6A0 BL 0x1C16D08
	0x021FE6A4 MOV X2, X0
	0x021FE6A8 MOV X0, X21
	0x021FE6AC MOV X1, X31
	0x021FE6B0 BL 0x1993444
	0x021FE6B4 LDR X8, [X19 + 0x38]
	0x021FE6B8 ADRP X0, 0x1EF5000
	0x021FE6BC LDR X22, [X8 + 0x8]
	0x021FE6C0 LDR X0, [X0 + 0x6C0]
	0x021FE6C4 BL 0x1C16D08
	0x021FE6C8 BL 0x19903D0
	0x021FE6CC MOV X0, X22
	0x021FE6D0 MOV X1, X31
	0x021FE6D4 BL 0x338C698
	0x021FE6D8 MOV X22, X0
	0x021FE6DC BL 0x19903C0
	0x021FE6E0 LDR X8, [X22]
	0x021FE6E4 MOV X0, X22
	0x021FE6E8 LDP X9, X1, [X8 + 0x1A8]
	0x021FE6EC BLR X9
	0x021FE6F0 MOV X22, X0
	0x021FE6F4 MOV X0, X21
	0x021FE6F8 BL 0x19903C0
	0x021FE6FC MOVZ W1, 0x1
	0x021FE700 MOV X0, X21
	0x021FE704 MOV X2, X22
	0x021FE708 BL 0x1993444
	0x021FE70C MOV X0, X21
	0x021FE710 BL 0x19903C0
	0x021FE714 ADRP X0, 0x1F1D000
	0x021FE718 LDR X0, [X0 + 0xD80]
	0x021FE71C BL 0x1C16D08
	0x021FE720 MOV X2, X0
	0x021FE724 MOVZ W1, 0x2
	0x021FE728 MOV X0, X21
	0x021FE72C BL 0x1993444
	0x021FE730 MOV X0, X20
	0x021FE734 BL 0x19903C0
	0x021FE738 MOV X0, X20
	0x021FE73C MOV X1, X31
	0x021FE740 BL 0x33BE520
	0x021FE744 MOV X20, X0
	0x021FE748 BL 0x19903C0
	0x021FE74C LDR X8, [X20]
	0x021FE750 MOV X0, X20
	0x021FE754 LDP X9, X1, [X8 + 0x1A8]
	0x021FE758 BLR X9
	0x021FE75C MOV X20, X0
	0x021FE760 MOV X0, X21
	0x021FE764 BL 0x19903C0
	0x021FE768 MOVZ W1, 0x3
	0x021FE76C MOV X0, X21
	0x021FE770 MOV X2, X20
	0x021FE774 BL 0x1993444
	0x021FE778 MOV X0, X21
	0x021FE77C BL 0x19903C0
	0x021FE780 ADRP X0, 0x1EFD000
	0x021FE784 LDR X0, [X0 + 0x9B0]
	0x021FE788 BL 0x1C16D08
	0x021FE78C MOV X2, X0
	0x021FE790 MOVZ W1, 0x4
	0x021FE794 MOV X0, X21
	0x021FE798 BL 0x1993444
	0x021FE79C MOV X0, X21
	0x021FE7A0 MOV X1, X31
	0x021FE7A4 BL 0x32278CC
	0x021FE7A8 MOV X20, X0
	0x021FE7AC ADRP X0, 0x1EFD000
	0x021FE7B0 LDR X0, [X0 + 0x578]
	0x021FE7B4 BL 0x1C16D08
	0x021FE7B8 BL 0x1C16F10
	0x021FE7BC MOV X1, X20
	0x021FE7C0 MOV X2, X31
	0x021FE7C4 MOV X21, X0
	0x021FE7C8 BL 0x3314A68
	0x021FE7CC MOV X0, X21

ISIL:
	001 Move [X31-80], D8
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Add X29, X31, 16
	011 Subtract X31, X31, 64
	012 NotImplemented "Instruction MRS not yet implemented."
	013 Move X8, [X24+40]
	014 Move X19, X2
	015 Move V8, V0
	016 Move X21, X1
	017 Move [X29-24], X8
	018 Move X8, [X2+56]
	019 Move X20, X0
	020 Compare X8, 0
	021 JumpIfNotEqual {34}
	022 Move X0, 0x1F1E000
	023 Move X0, [X0+624]
	024 Call 0x1C17CF4
	025 Move X0, 0x1F1E000
	026 Move X0, [X0+3432]
	027 Call 0x1C17CF4
	028 Move X8, [X19+56]
	029 Compare X8, 0
	030 JumpIfNotEqual {34}
	031 Move X0, X19
	032 Call 0x1C5D6E0
	033 Move X8, [X19+56]
	034 Move X8, [X8+8]
	035 Move W23, [X8+252]
	036 Add X8, X31, 0
	037 Add X9, X23, 15
	038 And X9, X9, 0x1FFFFFFFF
	039 Subtract X22, X8, X9
	040 Add X31, X22, 0
	041 Move [X29-72], X31
	042 Move [X29-64], X31
	043 Move [X29-80], X31
	044 Compare X20, 0
	045 JumpIfEqual {106}
	046 Move X0, [X20+120]
	047 Subtract X1, X29, 64
	048 Move W2, 2
	049 Move X3, X31
	050 Call StateEvent.From, X0, X1, X2
	051 NotImplemented "Instruction FCMP not yet implemented."
	052 Move [X29-80], X0
	053 Move [X29-72], X1
	054 Subtract X0, X29, 64
	055 Move V0, V8
	056 Move X1, X31
	057 Call InputEventPtr.set_time, X0, V0
	058 Move X0, X22
	059 Move X1, X21
	060 Move X2, X23
	061 Call 0x3EB2AC0
	062 Move X8, [X19+56]
	063 Subtract X9, X29, 32
	064 Move X1, [X8+16]
	065 NotImplemented "Instruction LDUR not yet implemented."
	066 Move X0, [X1]
	067 Move [X29-40], X9
	068 Move [X29-32], X8
	069 Move [X29-56], X20
	070 Move [X29-48], X22
	071 Move X8, [X1+16]
	072 Subtract X3, X29, 56
	073 Subtract X4, X29, 32
	074 Move X2, X31
	075 NotImplemented "Instruction BLR not yet implemented."
	076 Move X8, 0x1F1E000
	077 Move X8, [X8+624]
	078 NotImplemented "Instruction LDUR not yet implemented."
	079 Move X0, [X8]
	080 Move W8, [X0+224]
	081 Compare W8, 0
	082 JumpIfNotEqual {84}
	083 Call 0x1C17DFC
	084 Move X0, X19
	085 Move X1, X31
	086 Call InputSystem.QueueEvent, X0
	087 Move X8, 0x1F1E000
	088 Move X8, [X8+3432]
	089 Subtract X0, X29, 80
	090 Move X1, [X8]
	091 Call NativeArray`1<Byte>.Dispose, X0
	092 Move X8, [X24+40]
	093 NotImplemented "Instruction LDUR not yet implemented."
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Subtract X31, X29, 16
	096 Move X20, [X31+64]
	097 Move X19, [X31+72]
	098 Move X22, [X31+48]
	099 Move X21, [X31+56]
	100 Move X24, [X31+32]
	101 Move X23, [X31+40]
	102 Move X29, [X31+16]
	103 Move X30, [X31+24]
	104 Move V8, [X31+80]
	105 Return 
	106 Move X0, 0x1EFB000
	107 Move X0, [X0+1320]
	108 Call 0x1C17D08
	109 Call 0x1C17F10
	110 Move X20, X0
	111 Move X0, 0x1F1E000
	112 Move X0, [X0+3424]
	113 Call 0x1C17D08
	114 Move X1, X0
	115 Move X0, X20
	116 Move X2, X31
	117 Call ArgumentNullException..ctor, X0, X1
	118 Move X0, X20
	119 Move X1, X19
	120 Call 0x1C17DEC
	121 Call 0x3EB2B20
	122 Move X19, X0
	123 NotImplemented "Instruction CMP not yet implemented."
	124 Move X0, X19
	125 Call 0x3EB2AD0
	126 Move X20, [X0]
	127 Call 0x3EB2AE0
	128 Move X8, 0x1F1E000
	129 Move X8, [X8+3432]
	130 Subtract X0, X29, 80
	131 Move X1, [X8]
	132 Call NativeArray`1<Byte>.Dispose, X0
	133 Compare X20, 0
	134 JumpIfEqual {92}
	135 Move X0, X20
	136 Call 0x1C17F18
	137 Move X20, X31
	138 Move X19, X0
	139 Move X8, 0x1F1E000
	140 Move X8, [X8+3432]
	141 Move X1, [X8]
	142 Subtract X0, X29, 80
	143 Call NativeArray`1<Byte>.Dispose, X0
	144 Compare X20, 0
	145 JumpIfNotEqual {148}
	146 Move X0, X19
	147 Call 0x1D2D690
	148 Move X0, X20
	149 Call 0x1C17F18
	150 Call 0x1991590

Method: System.Void AccumulateValueInEvent(UnityEngine.InputSystem.InputControl`1<System.Single> control, System.Void* currentStatePtr, UnityEngine.InputSystem.LowLevel.InputEventPtr newState)

Disassembly:
	0x03775B38 B 0x3775C88
	0x03775B3C BL 0x1C16F20
	0x03775B40 SUB X31, X31, 0x110
	0x03775B44 STR X29, [X31 + 0xE0]
	0x03775B48 STP X30, X21, [X31 + 0xF0]
	0x03775B4C STP X20, X19, [X31 + 0x100]
	0x03775B50 ADRP X21, 0xC6B000
	0x03775B54 ADRP X20, 0x9D1000
	0x03775B58 LDRB W8, [X21 + 0xF30]
	0x03775B5C LDR X20, [X20 + 0xD48]
	0x03775B60 MOV X19, X0
	0x03775B64 TBNZ X8, 0x0, 0x3775B7C
	0x03775B68 ADRP X0, 0x9D1000
	0x03775B6C LDR X0, [X0 + 0xD48]
	0x03775B70 BL 0x1C16CF4
	0x03775B74 MOVZ W8, 0x1
	0x03775B78 STRB W8, [X21 + 0xF30]
	0x03775B7C LDP X2, X1, [X19]
	0x03775B80 LDR W3, [X19 + 0x10]
	0x03775B84 LDR V0, [X19 + 0x14]
	0x03775B88 MOVI V1.2D, 0x0
	0x03775B8C ADD X0, X31, 0x0
	0x03775B90 STP V1, V1, [X31 + 0x50]
	0x03775B94 STP V1, V1, [X31 + 0x30]
	0x03775B98 STP V1, V1, [X31 + 0x10]
	0x03775B9C STR V1, [X31]
	0x03775BA0 BL 0x3775980
	0x03775BA4 ADD X0, X31, 0x70
	0x03775BA8 ADD X1, X31, 0x0
	0x03775BAC MOVZ W2, 0x70
	0x03775BB0 BL 0x3EB1AC0
	0x03775BB4 ADD X0, X31, 0x0
	0x03775BB8 ADD X1, X31, 0x70
	0x03775BBC MOVZ W2, 0x70
	0x03775BC0 BL 0x3EB1AC0
	0x03775BC4 LDR X0, [X20]
	0x03775BC8 ADD X1, X31, 0x0
	0x03775BCC BL 0x1C16E04
	0x03775BD0 LDP X20, X19, [X31 + 0x100]
	0x03775BD4 LDP X30, X21, [X31 + 0xF0]
	0x03775BD8 LDR X29, [X31 + 0xE0]
	0x03775BDC ADD X31, X31, 0x110
	0x03775BE0 RET
	0x03775BE4 SUB X31, X31, 0x110
	0x03775BE8 STR X29, [X31 + 0xE0]
	0x03775BEC STP X30, X21, [X31 + 0xF0]
	0x03775BF0 STP X20, X19, [X31 + 0x100]
	0x03775BF4 ADRP X21, 0xC6B000
	0x03775BF8 ADRP X20, 0x9D1000
	0x03775BFC LDRB W8, [X21 + 0xF31]
	0x03775C00 LDR X20, [X20 + 0xD48]
	0x03775C04 MOV X19, X0
	0x03775C08 TBNZ X8, 0x0, 0x3775C20
	0x03775C0C ADRP X0, 0x9D1000
	0x03775C10 LDR X0, [X0 + 0xD48]
	0x03775C14 BL 0x1C16CF4
	0x03775C18 MOVZ W8, 0x1
	0x03775C1C STRB W8, [X21 + 0xF31]
	0x03775C20 LDP X2, X1, [X19]
	0x03775C24 LDR W3, [X19 + 0x10]
	0x03775C28 LDR V0, [X19 + 0x14]
	0x03775C2C MOVI V1.2D, 0x0
	0x03775C30 ADD X0, X31, 0x0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xC6C000
	007 Move W8, [X22+3881]
	008 Move X19, X2
	009 Move X21, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x9D2000
	016 Move X0, [X0+3216]
	017 Call 0x1C17CF4
	018 Move X0, 0x9D2000
	019 Move X0, [X0+3224]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+3881], W8
	023 Move [X31+12], W31
	024 Compare X20, 0
	025 JumpIfEqual {57}
	026 Move X8, 0x9D2000
	027 Move X8, [X8+3216]
	028 Add X2, X31, 12
	029 Move X0, X20
	030 Move X1, X19
	031 Move X3, [X8]
	032 Call 0x21FE914, X0, X1, X2
	033 Move TEMP, X0
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfNotEqual {51}
	037 Move X8, [X20]
	038 Move X0, X20
	039 Move X1, X21
	040 Move X9, [X8+584]
	041 Move X2, [X8+592]
	042 NotImplemented "Instruction BLR not yet implemented."
	043 Move X8, 0x9D2000
	044 Move V1, [X31+12]
	045 Move X8, [X8+3224]
	046 Move X0, X20
	047 Move X1, X19
	048 Add S0, S0, S1
	049 Move X2, [X8]
	050 Call 0x21FEF20, X0, X1, X2
	051 Move X20, [X31+32]
	052 Move X19, [X31+40]
	053 Move X22, [X31+16]
	054 Move X21, [X31+24]
	055 Move X30, [X31+48]
	056 Return 
	057 Move X0, 0x984000
	058 Move X0, [X0+1320]
	059 Call 0x1C17D08
	060 Call 0x1C17F10
	061 Move X19, X0
	062 Move X0, 0x9A7000
	063 Move X0, [X0+3424]
	064 Call 0x1C17D08
	065 Move X1, X0
	066 Move X0, X19
	067 Move X2, X31
	068 Call ArgumentNullException..ctor, X0, X1
	069 Move X0, 0x9D2000
	070 Move X0, [X0+3232]
	071 Call 0x1C17D08
	072 Move X1, X0
	073 Move X0, X19
	074 Call 0x1C17DEC

Method: System.Void AccumulateValueInEvent(UnityEngine.InputSystem.InputControl`1<UnityEngine.Vector2> control, System.Void* currentStatePtr, UnityEngine.InputSystem.LowLevel.InputEventPtr newState)

Disassembly:
	0x03775C34 STP V1, V1, [X31 + 0x50]
	0x03775C38 STP V1, V1, [X31 + 0x30]
	0x03775C3C STP V1, V1, [X31 + 0x10]
	0x03775C40 STR V1, [X31]
	0x03775C44 BL 0x3775980
	0x03775C48 ADD X0, X31, 0x70
	0x03775C4C ADD X1, X31, 0x0
	0x03775C50 MOVZ W2, 0x70
	0x03775C54 BL 0x3EB1AC0
	0x03775C58 ADD X0, X31, 0x0
	0x03775C5C ADD X1, X31, 0x70
	0x03775C60 MOVZ W2, 0x70
	0x03775C64 BL 0x3EB1AC0
	0x03775C68 LDR X0, [X20]
	0x03775C6C ADD X1, X31, 0x0
	0x03775C70 BL 0x1C16E04
	0x03775C74 LDP X20, X19, [X31 + 0x100]
	0x03775C78 LDP X30, X21, [X31 + 0xF0]
	0x03775C7C LDR X29, [X31 + 0xE0]
	0x03775C80 ADD X31, X31, 0x110
	0x03775C84 RET
	0x03775C88 SUB X31, X31, 0x60
	0x03775C8C STR X30, [X31 + 0x10]
	0x03775C90 STP X26, X25, [X31 + 0x20]
	0x03775C94 STP X24, X23, [X31 + 0x30]
	0x03775C98 STP X22, X21, [X31 + 0x40]
	0x03775C9C STP X20, X19, [X31 + 0x50]
	0x03775CA0 ADRP X20, 0xC6B000
	0x03775CA4 LDRB W8, [X20 + 0xF34]
	0x03775CA8 MOV X19, X0
	0x03775CAC TBNZ X8, 0x0, 0x3775CE8
	0x03775CB0 ADRP X0, 0x9D1000
	0x03775CB4 LDR X0, [X0 + 0xC68]
	0x03775CB8 BL 0x1C16CF4
	0x03775CBC ADRP X0, 0x9D1000
	0x03775CC0 LDR X0, [X0 + 0xD50]
	0x03775CC4 BL 0x1C16CF4
	0x03775CC8 ADRP X0, 0x9A6000
	0x03775CCC LDR X0, [X0 + 0xD18]
	0x03775CD0 BL 0x1C16CF4
	0x03775CD4 ADRP X0, 0x9D1000
	0x03775CD8 LDR X0, [X0 + 0xD58]
	0x03775CDC BL 0x1C16CF4
	0x03775CE0 MOVZ W8, 0x1
	0x03775CE4 STRB W8, [X20 + 0xF34]
	0x03775CE8 ADD X21, X19, 0x40
	0x03775CEC MOV X0, X21
	0x03775CF0 MOV X1, X31
	0x03775CF4 STR W31, [X31 + 0x1C]
	0x03775CF8 BL 0x37F80A4
	0x03775CFC TBZ X0, 0x0, 0x3776000
	0x03775D00 MOV X0, X21
	0x03775D04 MOV X1, X31
	0x03775D08 BL 0x37F80B4
	0x03775D0C MOVZ W8, 0x5441
	0x03775D10 MOV X20, X0
	0x03775D14 MOVK W8, 0x444C0000
	0x03775D18 CMP W20, W8
	0x03775D1C B.EQ 0x3775D68
	0x03775D20 MOVZ W8, 0x4154
	0x03775D24 MOVK W8, 0x53540000
	0x03775D28 CMP W20, W8
	0x03775D2C B.NE 0x3776048
	0x03775D30 LDR X0, [X19 + 0x40]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xC6C000
	007 Move W8, [X22+3882]
	008 Move X19, X2
	009 Move X21, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x9D2000
	016 Move X0, [X0+3240]
	017 Call 0x1C17CF4
	018 Move X0, 0x9D2000
	019 Move X0, [X0+3248]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+3882], W8
	023 Move [X31+8], X31
	024 Compare X20, 0
	025 JumpIfEqual {59}
	026 Move X8, 0x9D2000
	027 Move X8, [X8+3240]
	028 Add X2, X31, 8
	029 Move X0, X20
	030 Move X1, X19
	031 Move X3, [X8]
	032 Call InputControlExtensions.ReadUnprocessedValueFromEvent, X0, X1, X2
	033 Move TEMP, X0
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfNotEqual {53}
	037 Move X8, [X20]
	038 Move X0, X20
	039 Move X1, X21
	040 Move X9, [X8+584]
	041 Move X2, [X8+592]
	042 NotImplemented "Instruction BLR not yet implemented."
	043 Move X8, 0x9D2000
	044 Move S2, [X31+8]
	045 Move S3, [X31+12]
	046 Move X8, [X8+3248]
	047 Move X0, X20
	048 Move X1, X19
	049 Add S0, S0, S2
	050 Move X2, [X8]
	051 Add S1, S1, S3
	052 Call InputControlExtensions.WriteValueIntoEvent, X0, X1, X2
	053 Move X20, [X31+32]
	054 Move X19, [X31+40]
	055 Move X22, [X31+16]
	056 Move X21, [X31+24]
	057 Move X30, [X31+48]
	058 Return 
	059 Move X0, 0x984000
	060 Move X0, [X0+1320]
	061 Call 0x1C17D08
	062 Call 0x1C17F10
	063 Move X19, X0
	064 Move X0, 0x9A7000
	065 Move X0, [X0+3424]
	066 Call 0x1C17D08
	067 Move X1, X0
	068 Move X0, X19
	069 Move X2, X31
	070 Call ArgumentNullException..ctor, X0, X1
	071 Move X0, 0x9D2000
	072 Move X0, [X0+3256]
	073 Call 0x1C17D08
	074 Move X1, X0
	075 Move X0, X19
	076 Call 0x1C17DEC

Method: System.Void FindControlsRecursive(UnityEngine.InputSystem.InputControl parent, System.Collections.Generic.IList`1<TControl> controls, System.Func`2<TControl, System.Boolean> predicate)

Disassembly:
	0x021FE26C ADD X31, X22, 0x0
	0x021FE270 CBZ X20, 0x21FE480
	0x021FE274 SUB X0, X29, 0x30
	0x021FE278 MOV X1, X31
	0x021FE27C BL 0x37F80A4
	0x021FE280 TBZ X0, 0x0, 0x21FE4A0
	0x021FE284 LDR X8, [X19 + 0x38]
	0x021FE288 LDR X0, [X8]
	0x021FE28C LDRB W8, [X0 + 0x135]
	0x021FE290 TBNZ X8, 0x0, 0x21FE298
	0x021FE294 BL 0x1C5C684
	0x021FE298 LDR X8, [X20]
	0x021FE29C LDRB W9, [X0 + 0x130]
	0x021FE2A0 LDRB W10, [X8 + 0x130]
	0x021FE2A4 CMP W10, W9
	0x021FE2A8 B.CC 0x21FE328
	0x021FE2AC LDR X8, [X8 + 0xC8]
	0x021FE2B0 ADD X8, X8, X9, 0x3, LSL
	0x021FE2B4 LDUR X8, [X8 - 0x8]
	0x021FE2B8 CMP X8, X0
	0x021FE2BC B.NE 0x21FE328
	0x021FE2C0 MOV X0, X22
	0x021FE2C4 MOV X1, X21
	0x021FE2C8 MOV X2, X23
	0x021FE2CC BL 0x3EB1AC0
	0x021FE2D0 LDR X8, [X19 + 0x38]
	0x021FE2D4 SUB X9, X29, 0x10
	0x021FE2D8 SUB X3, X29, 0x28
	0x021FE2DC SUB X4, X29, 0x10
	0x021FE2E0 LDR X1, [X8 + 0x18]
	0x021FE2E4 LDUR X8, [X29 - 0x30]
	0x021FE2E8 MOV X2, X31
	0x021FE2EC LDR X0, [X1]
	0x021FE2F0 STP X9, X8, [X29 - 0x18]
	0x021FE2F4 STP X20, X22, [X29 - 0x28]
	0x021FE2F8 LDR X8, [X1 + 0x10]
	0x021FE2FC BLR X8
	0x021FE300 LDR X8, [X24 + 0x28]
	0x021FE304 LDUR X9, [X29 - 0x8]
	0x021FE308 CMP X8, X9
	0x021FE30C B.NE 0x21FE4DC
	0x021FE310 ADD X31, X29, 0x0
	0x021FE314 LDP X20, X19, [X31 + 0x30]
	0x021FE318 LDP X22, X21, [X31 + 0x20]
	0x021FE31C LDP X24, X23, [X31 + 0x10]
	0x021FE320 LDP X29, X30, [X31], #0x40
	0x021FE324 RET
	0x021FE328 ADRP X0, 0x1EF5000
	0x021FE32C LDR X0, [X0 + 0xAC8]
	0x021FE330 BL 0x1C16D08
	0x021FE334 MOVZ W1, 0x5
	0x021FE338 BL 0x1C16D6C
	0x021FE33C MOV X21, X0
	0x021FE340 BL 0x19903C0
	0x021FE344 ADRP X0, 0x1F1D000
	0x021FE348 LDR X0, [X0 + 0xD78]
	0x021FE34C BL 0x1C16D08
	0x021FE350 MOV X2, X0
	0x021FE354 MOV X0, X21
	0x021FE358 MOV X1, X31
	0x021FE35C BL 0x1993444
	0x021FE360 LDR X8, [X19 + 0x38]
	0x021FE364 ADRP X0, 0x1EF5000
	0x021FE368 LDR X22, [X8 + 0x8]
	0x021FE36C LDR X0, [X0 + 0x6C0]
	0x021FE370 BL 0x1C16D08
	0x021FE374 BL 0x19903D0
	0x021FE378 MOV X0, X22
	0x021FE37C MOV X1, X31
	0x021FE380 BL 0x338C698
	0x021FE384 MOV X22, X0
	0x021FE388 BL 0x19903C0
	0x021FE38C LDR X8, [X22]
	0x021FE390 MOV X0, X22
	0x021FE394 LDP X9, X1, [X8 + 0x1A8]
	0x021FE398 BLR X9
	0x021FE39C MOV X22, X0
	0x021FE3A0 MOV X0, X21
	0x021FE3A4 BL 0x19903C0
	0x021FE3A8 MOVZ W1, 0x1
	0x021FE3AC MOV X0, X21
	0x021FE3B0 MOV X2, X22
	0x021FE3B4 BL 0x1993444
	0x021FE3B8 MOV X0, X21
	0x021FE3BC BL 0x19903C0
	0x021FE3C0 ADRP X0, 0x1F1D000
	0x021FE3C4 LDR X0, [X0 + 0xD80]
	0x021FE3C8 BL 0x1C16D08
	0x021FE3CC MOV X2, X0
	0x021FE3D0 MOVZ W1, 0x2
	0x021FE3D4 MOV X0, X21
	0x021FE3D8 BL 0x1993444
	0x021FE3DC MOV X0, X20
	0x021FE3E0 BL 0x19903C0
	0x021FE3E4 MOV X0, X20
	0x021FE3E8 MOV X1, X31
	0x021FE3EC BL 0x33BE520
	0x021FE3F0 MOV X20, X0
	0x021FE3F4 BL 0x19903C0
	0x021FE3F8 LDR X8, [X20]
	0x021FE3FC MOV X0, X20
	0x021FE400 LDP X9, X1, [X8 + 0x1A8]
	0x021FE404 BLR X9
	0x021FE408 MOV X20, X0
	0x021FE40C MOV X0, X21
	0x021FE410 BL 0x19903C0
	0x021FE414 MOVZ W1, 0x3
	0x021FE418 MOV X0, X21
	0x021FE41C MOV X2, X20
	0x021FE420 BL 0x1993444
	0x021FE424 MOV X0, X21
	0x021FE428 BL 0x19903C0
	0x021FE42C ADRP X0, 0x1EFD000
	0x021FE430 LDR X0, [X0 + 0x9B0]
	0x021FE434 BL 0x1C16D08
	0x021FE438 MOV X2, X0
	0x021FE43C MOVZ W1, 0x4
	0x021FE440 MOV X0, X21
	0x021FE444 BL 0x1993444
	0x021FE448 MOV X0, X21
	0x021FE44C MOV X1, X31
	0x021FE450 BL 0x32278CC
	0x021FE454 MOV X20, X0
	0x021FE458 ADRP X0, 0x1EFD000
	0x021FE45C LDR X0, [X0 + 0x578]
	0x021FE460 BL 0x1C16D08
	0x021FE464 BL 0x1C16F10
	0x021FE468 MOV X1, X20
	0x021FE46C MOV X2, X31
	0x021FE470 MOV X21, X0
	0x021FE474 BL 0x3314A68
	0x021FE478 MOV X0, X21
	0x021FE47C B 0x21FE4D4
	0x021FE480 ADRP X0, 0x1EFA000
	0x021FE484 LDR X0, [X0 + 0x528]
	0x021FE488 BL 0x1C16D08
	0x021FE48C BL 0x1C16F10
	0x021FE490 MOV X20, X0
	0x021FE494 ADRP X0, 0x1F1D000
	0x021FE498 LDR X0, [X0 + 0xD60]
	0x021FE49C B 0x21FE4BC
	0x021FE4A0 ADRP X0, 0x1EFA000
	0x021FE4A4 LDR X0, [X0 + 0x528]
	0x021FE4A8 BL 0x1C16D08
	0x021FE4AC BL 0x1C16F10
	0x021FE4B0 MOV X20, X0
	0x021FE4B4 ADRP X0, 0x1F1D000
	0x021FE4B8 LDR X0, [X0 + 0xD70]
	0x021FE4BC BL 0x1C16D08

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X8, [X3+56]
	011 Move X19, X3
	012 Move X20, X2
	013 Move X21, X1
	014 Move X22, X0
	015 Compare X8, 0
	016 JumpIfNotEqual {28}
	017 Move X0, 0x1F1E000
	018 Move X0, [X0+3392]
	019 Call 0x1C17CF4
	020 Move X0, 0x1F1E000
	021 Move X0, [X0+3400]
	022 Call 0x1C17CF4
	023 Move X8, [X19+56]
	024 Compare X8, 0
	025 JumpIfNotEqual {28}
	026 Move X0, X19
	027 Call 0x1C5D6E0
	028 Move [X31], X31
	029 Move [X31+8], X31
	030 Compare X22, 0
	031 JumpIfEqual {144}
	032 Compare X21, 0
	033 JumpIfEqual {151}
	034 Compare X20, 0
	035 JumpIfEqual {158}
	036 Move X8, [X19+56]
	037 Move X1, [X8+16]
	038 Move W8, [X1+309]
	039 Move TEMP, X8
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfEqual {46}
	043 Move X0, X1
	044 Call 0x1C5D684
	045 Move X1, X0
	046 Move X0, X22
	047 Call 0x1C17E00
	048 Move X8, [X19+56]
	049 Move X25, X0
	050 Move X24, [X8+16]
	051 Move W8, [X24+309]
	052 Move TEMP, X8
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfEqual {59}
	056 Move X0, X24
	057 Call 0x1C5D684
	058 Move X24, X0
	059 Compare X25, 0
	060 JumpIfEqual {108}
	061 Move X0, X25
	062 Move X1, X24
	063 Call 0x1C17E00
	064 Compare X0, 0
	065 JumpIfEqual {173}
	066 Move X23, X0
	067 Move X8, [X20+24]
	068 Move X0, [X20+64]
	069 Move X2, [X20+40]
	070 Move X1, X23
	071 NotImplemented "Instruction BLR not yet implemented."
	072 Move TEMP, X0
	073 And TEMP, TEMP, 1
	074 Compare TEMP, 1
	075 JumpIfNotEqual {108}
	076 Move X8, [X19+56]
	077 Move X1, [X8+32]
	078 Move W8, [X1+309]
	079 Move TEMP, X8
	080 And TEMP, TEMP, 1
	081 Compare TEMP, 1
	082 JumpIfEqual {86}
	083 Move X0, X1
	084 Call 0x1C5D684
	085 Move X1, X0
	086 Move X8, [X21]
	087 NotImplemented "Instruction LDRH not yet implemented."
	088 Compare X9, 0
	089 JumpIfEqual {96}
	090 Move X10, [X8+176]
	091 Add X10, X10, 8
	092 NotImplemented "Instruction LDUR not yet implemented."
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Subtract X9, X9, 1
	095 Add X10, X10, 16
	096 Move W2, 2
	097 Move X0, X21
	098 Call 0x1C5D788
	099 Move W9, [X10]
	100 Add W9, W9, 2
	101 Add X8, X8, W9
	102 Add X0, X8, 312
	103 Move X8, [X0]
	104 Move X2, [X0+8]
	105 Move X0, X21
	106 Move X1, X23
	107 NotImplemented "Instruction BLR not yet implemented."
	108 Move X0, X22
	109 Move X1, X31
	110 Call InputControl.get_children, X0
	111 Move X24, X1
	112 ShiftRight X24, 32
	113 And X24, X24, 0x7FFFFFFF
	114 NotImplemented "Instruction CMP not yet implemented."
	115 Move X25, 0x1F1E000
	116 Move X25, [X25+3400]
	117 Move W23, W31
	118 Move X0, X22
	119 Move X1, X31
	120 Call InputControl.get_children, X0
	121 Move X2, [X25]
	122 Move [X31], X0
	123 Move [X31+8], X1
	124 Add X0, X31, 0
	125 Move W1, W23
	126 Call ReadOnlyArray`1<Object>.get_Item, X0, X1
	127 Move X8, [X19+56]
	128 Move X1, X21
	129 Move X2, X20
	130 Move X3, [X8+48]
	131 Call 0x21FE26C, X0, X1, X2
	132 Add W23, W23, 1
	133 NotImplemented "Instruction CMP not yet implemented."
	134 Move X20, [X31+64]
	135 Move X19, [X31+72]
	136 Move X22, [X31+48]
	137 Move X21, [X31+56]
	138 Move X24, [X31+32]
	139 Move X23, [X31+40]
	140 Move X30, [X31+16]
	141 Move X25, [X31+24]
	142 Add X31, X31, 80
	143 Return 
	144 Move X0, 0x1EFB000
	145 Move X0, [X0+1320]
	146 Call 0x1C17D08
	147 Call 0x1C17F10
	148 Move X20, X0
	149 Move X0, 0x1F1E000
	150 Move X0, [X0+3408]
	151 Move X0, 0x1EFB000
	152 Move X0, [X0+1320]
	153 Call 0x1C17D08
	154 Call 0x1C17F10
	155 Move X20, X0
	156 Move X0, 0x1F1E000
	157 Move X0, [X0+3416]
	158 Move X0, 0x1EFB000
	159 Move X0, [X0+1320]
	160 Call 0x1C17D08
	161 Call 0x1C17F10
	162 Move X20, X0
	163 Move X0, 0x1F1E000
	164 Move X0, [X0+2288]
	165 Call 0x1C17D08
	166 Move X1, X0
	167 Move X0, X20
	168 Move X2, X31
	169 Call ArgumentNullException..ctor, X0, X1
	170 Move X0, X20
	171 Move X1, X19
	172 Call 0x1C17DEC
	173 Move X0, X25
	174 Move X1, X24
	175 Call 0x1C181E0

Method: System.String BuildPath(UnityEngine.InputSystem.InputControl control, System.String deviceLayout, System.Text.StringBuilder builder = null)

Disassembly:
	0x03775D34 MOV X1, X31
	0x03775D38 BL 0x38029AC
	0x03775D3C MOV X1, X31
	0x03775D40 MOV X22, X0
	0x03775D44 BL 0x3807298
	0x03775D48 STR X0, [X19 + 0x58]
	0x03775D4C MOV X0, X22
	0x03775D50 MOV X1, X31
	0x03775D54 BL 0x3802C74
	0x03775D58 UBFM W8, W0, 0x1D, 0x1C
	0x03775D5C STP W31, W8, [X19 + 0x60]
	0x03775D60 CBNZ X22, 0x3775DB4
	0x03775D64 B 0x3775F78
	0x03775D68 LDR X0, [X19 + 0x40]
	0x03775D6C MOV X1, X31
	0x03775D70 BL 0x3800804
	0x03775D74 MOV X1, X31
	0x03775D78 MOV X22, X0
	0x03775D7C BL 0x38006C8
	0x03775D80 CBZ X22, 0x3775F78
	0x03775D84 LDR W8, [X22 + 0x18]
	0x03775D88 MOV X1, X31
	0x03775D8C SUB X8, X0, X8
	0x03775D90 STR X8, [X19 + 0x58]
	0x03775D94 LDR W23, [X22 + 0x18]
	0x03775D98 MOV X0, X22
	0x03775D9C UBFM W8, W23, 0x1D, 0x1C
	0x03775DA0 STR W8, [X19 + 0x60]
	0x03775DA4 BL 0x38006BC
	0x03775DA8 ADD W8, W0, W23
	0x03775DAC UBFM W8, W8, 0x1D, 0x1C
	0x03775DB0 STR W8, [X19 + 0x64]
	0x03775DB4 ADD X8, X22, 0x14
	0x03775DB8 LDR X22, [X19 + 0x8]
	0x03775DBC LDR W26, [X8]
	0x03775DC0 STP X31, X31, [X19 + 0x48]
	0x03775DC4 CBZ X22, 0x3775F78
	0x03775DC8 ADRP X8, 0x9A6000
	0x03775DCC LDR X8, [X8 + 0xD18]
	0x03775DD0 LDR X0, [X8]
	0x03775DD4 LDR W8, [X0 + 0xE0]
	0x03775DD8 CBNZ W8, 0x3775DE0
	0x03775DDC BL 0x1C16DFC
	0x03775DE0 LDR W8, [X22 + 0x10]
	0x03775DE4 CMP W26, W8
	0x03775DE8 B.EQ 0x3775F5C
	0x03775DEC STR W31, [X31 + 0x1C]
	0x03775DF0 LDR X25, [X19 + 0x8]
	0x03775DF4 CBZ X25, 0x3775F78
	0x03775DF8 LDRB W8, [X25 + 0xDC]
	0x03775DFC TBZ X8, 0x1, 0x3775EEC
	0x03775E00 ADRP X24, 0x9D1000
	0x03775E04 LDR X22, [X19 + 0x40]
	0x03775E08 LDR X24, [X24 + 0xC68]
	0x03775E0C MOV X0, X25
	0x03775E10 LDR X23, [X24]
	0x03775E14 MOV X1, X23
	0x03775E18 BL 0x1C16E00
	0x03775E1C CBZ X0, 0x37760B8
	0x03775E20 LDR X24, [X24]
	0x03775E24 MOV X0, X25
	0x03775E28 MOV X1, X24
	0x03775E2C BL 0x1C16E00
	0x03775E30 CBZ X0, 0x37760C4
	0x03775E34 LDR X8, [X0]
	0x03775E38 MOV X23, X0
	0x03775E3C LDRH W9, [X8 + 0x12E]
	0x03775E40 CBZ X9, 0x3775E64
	0x03775E44 LDR X10, [X8 + 0xB0]
	0x03775E48 ADD X10, X10, 0x8
	0x03775E4C LDUR X11, [X10 - 0x8]
	0x03775E50 CMP X11, X24
	0x03775E54 B.EQ 0x3775E78
	0x03775E58 SUBS X9, X9, 0x1
	0x03775E5C ADD X10, X10, 0x10
	0x03775E60 B.NE 0x3775E4C
	0x03775E64 MOVZ W2, 0x2
	0x03775E68 MOV X0, X23
	0x03775E6C MOV X1, X24
	0x03775E70 BL 0x1C5C788
	0x03775E74 B 0x3775E88
	0x03775E78 LDR W9, [X10]
	0x03775E7C ADD W9, W9, 0x2
	0x03775E80 ADD X8, X8, W9, 0x4, SXTW
	0x03775E84 ADD X0, X8, 0x138
	0x03775E88 LDP X8, X4, [X0]
	0x03775E8C ADD X3, X31, 0x1C
	0x03775E90 MOV X0, X23
	0x03775E94 MOV X1, X31
	0x03775E98 MOV X2, X22
	0x03775E9C BLR X8
	0x03775EA0 TBZ X0, 0x0, 0x3775EE4
	0x03775EA4 LDR W8, [X31 + 0x1C]
	0x03775EA8 LDR X9, [X19 + 0x30]
	0x03775EAC UBFM W10, W8, 0x1D, 0x1C
	0x03775EB0 STR W10, [X19 + 0x54]
	0x03775EB4 CBZ X9, 0x3775EC0
	0x03775EB8 ADD X9, X9, X8
	0x03775EBC STR X9, [X19 + 0x30]
	0x03775EC0 LDR X9, [X19 + 0x28]
	0x03775EC4 CBZ X9, 0x3775ED0
	0x03775EC8 ADD X9, X9, X8
	0x03775ECC STR X9, [X19 + 0x28]
	0x03775ED0 LDR X9, [X19 + 0x38]
	0x03775ED4 CBZ X9, 0x3775F5C
	0x03775ED8 ADD X8, X9, X8
	0x03775EDC STR X8, [X19 + 0x38]
	0x03775EE0 B 0x3775F5C
	0x03775EE4 LDR X25, [X19 + 0x8]
	0x03775EE8 CBZ X25, 0x3775F7C
	0x03775EEC ADRP X8, 0x9D1000
	0x03775EF0 LDR X8, [X8 + 0xD58]
	0x03775EF4 LDR X9, [X25]
	0x03775EF8 LDR X8, [X8]
	0x03775EFC LDRB W11, [X9 + 0x130]
	0x03775F00 LDRB W10, [X8 + 0x130]
	0x03775F04 CMP W11, W10
	0x03775F08 B.CC 0x3775F7C
	0x03775F0C LDR X9, [X9 + 0xC8]
	0x03775F10 ADD X9, X9, X10, 0x3, LSL
	0x03775F14 LDUR X9, [X9 - 0x8]
	0x03775F18 CMP X9, X8
	0x03775F1C B.NE 0x3775F7C
	0x03775F20 ADRP X8, 0x9D1000
	0x03775F24 LDR X8, [X8 + 0xD50]
	0x03775F28 MOV X0, X21
	0x03775F2C LDR X1, [X8]
	0x03775F30 BL 0x2208050
	0x03775F34 TBZ X0, 0x0, 0x3775F7C
	0x03775F38 LDR X0, [X19 + 0x40]
	0x03775F3C MOV X1, X31
	0x03775F40 BL 0x38029AC
	0x03775F44 CBZ X0, 0x3775F78
	0x03775F48 LDR W21, [X0 + 0x14]
	0x03775F4C MOV X0, X31
	0x03775F50 BL 0x37FFEC0
	0x03775F54 CMP W21, W0
	0x03775F58 B.NE 0x3775F7C
	0x03775F5C LDP X20, X19, [X31 + 0x50]
	0x03775F60 LDP X22, X21, [X31 + 0x40]
	0x03775F64 LDP X24, X23, [X31 + 0x30]
	0x03775F68 LDP X26, X25, [X31 + 0x20]
	0x03775F6C LDR X30, [X31 + 0x10]
	0x03775F70 ADD X31, X31, 0x60
	0x03775F74 RET
	0x03775F78 BL 0x1C16F20
	0x03775F7C STR W20, [X31 + 0x18]
	0x03775F80 ADRP X20, 0x9A6000
	0x03775F84 LDR X20, [X20 + 0xD28]
	0x03775F88 MOV X0, X20
	0x03775F8C BL 0x1C16D08
	0x03775F90 ADD X1, X31, 0x18
	0x03775F94 BL 0x1C16E04
	0x03775F98 MOV X21, X0
	0x03775F9C MOV X0, X20
	0x03775FA0 STR W26, [X31 + 0x8]
	0x03775FA4 BL 0x1C16D08
	0x03775FA8 ADD X1, X31, 0x8
	0x03775FAC BL 0x1C16E04
	0x03775FB0 MOV X20, X0
	0x03775FB4 ADRP X0, 0x9D1000
	0x03775FB8 LDR X19, [X19 + 0x8]
	0x03775FBC LDR X0, [X0 + 0xD60]
	0x03775FC0 BL 0x1C16D08
	0x03775FC4 MOV X1, X21
	0x03775FC8 MOV X2, X20
	0x03775FCC MOV X3, X19
	0x03775FD0 MOV X4, X31
	0x03775FD4 BL 0x3227C18
	0x03775FD8 MOV X19, X0
	0x03775FDC ADRP X0, 0x97E000
	0x03775FE0 LDR X0, [X0 + 0x5B0]
	0x03775FE4 BL 0x1C16D08
	0x03775FE8 BL 0x1C16F10
	0x03775FEC MOV X1, X19
	0x03775FF0 MOV X2, X31
	0x03775FF4 MOV X20, X0
	0x03775FF8 BL 0x337DF1C
	0x03775FFC B 0x37760A0
	0x03776000 ADRP X0, 0x9A6000

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+32], X30
	003 Move [X31+48], X24
	004 Move [X31+56], X23
	005 Move [X31+64], X22
	006 Move [X31+72], X21
	007 Move [X31+80], X20
	008 Move [X31+88], X19
	009 Move X21, 0xC6C000
	010 Move W8, [X21+3883]
	011 Move X19, X2
	012 Move X22, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {41}
	018 Move X0, 0x9A7000
	019 Move X0, [X0+3528]
	020 Call 0x1C17CF4
	021 Move X0, 0x9A7000
	022 Move X0, [X0+3536]
	023 Call 0x1C17CF4
	024 Move X0, 0x97F000
	025 Move X0, [X0+2288]
	026 Call 0x1C17CF4
	027 Move X0, 0x9B3000
	028 Move X0, [X0+2040]
	029 Call 0x1C17CF4
	030 Move X0, 0x9B3000
	031 Move X0, [X0+2048]
	032 Call 0x1C17CF4
	033 Move X0, 0x9D2000
	034 Move X0, [X0+3264]
	035 Call 0x1C17CF4
	036 Move X0, 0x9B3000
	037 Move X0, [X0+1192]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X21+3883], W8
	041 Move [X31], X31
	042 Move [X31+8], X31
	043 Compare X20, 0
	044 JumpIfEqual {179}
	045 Move X0, X22
	046 Move X1, X31
	047 Call String.IsNullOrEmpty, X0
	048 Move TEMP, X0
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfEqual {186}
	052 Compare X19, 0
	053 JumpIfNotEqual {63}
	054 Move X8, 0x97F000
	055 Move X8, [X8+2288]
	056 Move X0, [X8]
	057 Call 0x1C17F10
	058 Move X1, X31
	059 Move X19, X0
	060 Call StringBuilder..ctor, X0
	061 Compare X19, 0
	062 JumpIfEqual {178}
	063 Move X23, 0x9B3000
	064 Move X21, [X20+120]
	065 Move X23, [X23+2048]
	066 Move W1, 60
	067 Move X0, X19
	068 Move X2, X31
	069 Call StringBuilder.Append, X0, X1
	070 Move X1, [X23]
	071 Move X0, X22
	072 Move X3, X31
	073 Move X2, X1
	074 Call StringHelpers.Escape, X0, X1, X2
	075 Move X1, X0
	076 Move X0, X19
	077 Move X2, X31
	078 Call StringBuilder.Append, X0, X1
	079 Move W1, 62
	080 Move X0, X19
	081 Move X2, X31
	082 Call StringBuilder.Append, X0, X1
	083 Compare X21, 0
	084 JumpIfEqual {178}
	085 Move X0, X21
	086 Call InputControl.get_usages, X0
	087 Move X8, X1
	088 ShiftRight X8, 32
	089 And X8, X8, 0x7FFFFFFF
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Move [X31+16], X0
	092 Move [X31+24], X1
	093 Move X23, 0x9A7000
	094 Move X24, 0x9D2000
	095 Move X23, [X23+3536]
	096 Move X24, [X24+3264]
	097 Move W22, W31
	098 Move W1, 123
	099 Move X0, X19
	100 Move X2, X31
	101 Call StringBuilder.Append, X0, X1
	102 Move X2, [X23]
	103 Add X0, X31, 16
	104 Move W1, W22
	105 Call ReadOnlyArray`1<InternedString>.get_Item, X0, X1
	106 Move [X31], X0
	107 Move [X31+8], X1
	108 Add X0, X31, 0
	109 Move X1, X31
	110 Call InternedString.ToString, X0
	111 Move X1, [X24]
	112 Move X3, X31
	113 Move X2, X1
	114 Call StringHelpers.Escape, X0, X1, X2
	115 Move X1, X0
	116 Move X0, X19
	117 Move X2, X31
	118 Call StringBuilder.Append, X0, X1
	119 Move W1, 125
	120 Move X0, X19
	121 Move X2, X31
	122 Call StringBuilder.Append, X0, X1
	123 Move W8, [X31+28]
	124 Add W22, W22, 1
	125 NotImplemented "Instruction CMP not yet implemented."
	126 Move W1, 47
	127 Move X0, X19
	128 Move X2, X31
	129 Call StringBuilder.Append, X0, X1
	130 Move X0, X21
	131 Call InputControl.get_path, X0
	132 Compare X0, 0
	133 JumpIfEqual {178}
	134 Move X22, 0x9B3000
	135 Move X23, 0x9B3000
	136 Move X22, [X22+2040]
	137 Move X23, [X23+1192]
	138 Move X3, X31
	139 Move X1, [X22]
	140 Move X2, [X23]
	141 Call String.Replace, X0, X1, X2
	142 Move X21, X0
	143 Move X0, X20
	144 Call InputControl.get_path, X0
	145 Compare X0, 0
	146 JumpIfEqual {178}
	147 Move X1, [X22]
	148 Move X2, [X23]
	149 Move X3, X31
	150 Call String.Replace, X0, X1, X2
	151 Compare X21, 0
	152 JumpIfEqual {178}
	153 Move X1, X0
	154 Compare X0, 0
	155 JumpIfEqual {178}
	156 Move W8, [X21+16]
	157 Move W9, [X1+16]
	158 Move X0, X19
	159 Move X4, X31
	160 Add W2, W8, 1
	161 NotImplemented "Instruction ORN not yet implemented."
	162 Add W3, W9, W8
	163 Call StringBuilder.Append, X0, X1, X2, X3
	164 Move X8, [X19]
	165 Move X0, X19
	166 Move X9, [X8+360]
	167 Move X1, [X8+368]
	168 NotImplemented "Instruction BLR not yet implemented."
	169 Move X20, [X31+80]
	170 Move X19, [X31+88]
	171 Move X22, [X31+64]
	172 Move X21, [X31+72]
	173 Move X24, [X31+48]
	174 Move X23, [X31+56]
	175 Move X30, [X31+32]
	176 Add X31, X31, 96
	177 Return X0
	178 Call 0x1C17F20
	179 Move X0, 0x984000
	180 Move X0, [X0+1320]
	181 Call 0x1C17D08
	182 Call 0x1C17F10
	183 Move X19, X0
	184 Move X0, 0x9A7000
	185 Move X0, [X0+3424]
	186 Move X0, 0x984000
	187 Move X0, [X0+1320]
	188 Call 0x1C17D08
	189 Call 0x1C17F10
	190 Move X19, X0
	191 Move X0, 0x9D2000
	192 Move X0, [X0+3272]
	193 Call 0x1C17D08
	194 Move X1, X0
	195 Move X0, X19
	196 Move X2, X31
	197 Call ArgumentNullException..ctor, X0, X1
	198 Move X0, 0x9D2000
	199 Move X0, [X0+3280]
	200 Call 0x1C17D08
	201 Move X1, X0
	202 Move X0, X19
	203 Call 0x1C17DEC

Method: UnityEngine.InputSystem.InputControlExtensions/InputEventControlCollection EnumerateControls(UnityEngine.InputSystem.LowLevel.InputEventPtr eventPtr, UnityEngine.InputSystem.InputControlExtensions/Enumerate flags, UnityEngine.InputSystem.InputDevice device = null, System.Single magnitudeThreshold = 0)

Disassembly:
	0x03776004 LDR X0, [X0 + 0x4B8]
	0x03776008 BL 0x1C16D08
	0x0377600C BL 0x1C16F10
	0x03776010 MOV X19, X0
	0x03776014 ADRP X0, 0x9D0000
	0x03776018 LDR X0, [X0 + 0xCF0]
	0x0377601C BL 0x1C16D08
	0x03776020 MOV X1, X0
	0x03776024 MOV X0, X19
	0x03776028 MOV X2, X31
	0x0377602C BL 0x338C448
	0x03776030 ADRP X0, 0x9D0000
	0x03776034 LDR X0, [X0 + 0xD68]
	0x03776038 BL 0x1C16D08
	0x0377603C MOV X1, X0
	0x03776040 MOV X0, X19
	0x03776044 BL 0x1C16DEC
	0x03776048 STR W20, [X31 + 0x18]
	0x0377604C ADRP X0, 0x9A5000
	0x03776050 LDR X0, [X0 + 0xD28]
	0x03776054 BL 0x1C16D08
	0x03776058 ADD X1, X31, 0x18
	0x0377605C BL 0x1C16E04
	0x03776060 MOV X19, X0
	0x03776064 ADRP X0, 0x9D0000
	0x03776068 LDR X0, [X0 + 0xD70]
	0x0377606C BL 0x1C16D08
	0x03776070 MOV X1, X19
	0x03776074 MOV X2, X31
	0x03776078 BL 0x321EFD0
	0x0377607C MOV X19, X0
	0x03776080 ADRP X0, 0x97D000
	0x03776084 LDR X0, [X0 + 0xB40]
	0x03776088 BL 0x1C16D08
	0x0377608C BL 0x1C16F10
	0x03776090 MOV X1, X19
	0x03776094 MOV X2, X31
	0x03776098 MOV X20, X0
	0x0377609C BL 0x3379A44
	0x037760A0 ADRP X0, 0x9D0000
	0x037760A4 LDR X0, [X0 + 0xD68]
	0x037760A8 BL 0x1C16D08
	0x037760AC MOV X1, X0
	0x037760B0 MOV X0, X20
	0x037760B4 BL 0x1C16DEC
	0x037760B8 MOV X0, X25
	0x037760BC MOV X1, X23
	0x037760C0 BL 0x1C171E0
	0x037760C4 MOV X0, X25
	0x037760C8 MOV X1, X24
	0x037760CC BL 0x1C171E0
	0x037760D0 LDR X8, [X0 + 0x58]
	0x037760D4 LDR X9, [X0 + 0x28]
	0x037760D8 LDR W2, [X0 + 0x60]
	0x037760DC LDR X4, [X0 + 0x38]
	0x037760E0 MOV W3, W1
	0x037760E4 MOV X0, X8
	0x037760E8 MOV X1, X9
	0x037760EC MOV X5, X31
	0x037760F0 B 0x37626EC
	0x037760F4 LDR X8, [X0 + 0x58]
	0x037760F8 LDP X9, X4, [X0 + 0x30]
	0x037760FC LDR W2, [X0 + 0x60]
	0x03776100 MOV W3, W1
	0x03776104 MOV X0, X8
	0x03776108 MOV X1, X9
	0x0377610C MOV X5, X31
	0x03776110 B 0x37626EC
	0x03776114 AND W8, W0, 0x3FF
	0x03776118 UBFM W9, W0, 0x13, 0x1F
	0x0377611C UBFM W10, W0, 0xA, 0x12
	0x03776120 STR W8, [X1]
	0x03776124 STR W9, [X2]
	0x03776128 STR W10, [X3]
	0x0377612C RET
	0x03776130 STR X31, [X0 + 0x40]
	0x03776134 RET
	0x03776138 LDR X0, [X0 + 0x48]
	0x0377613C RET
	0x03776140 LDR X0, [X0 + 0x48]
	0x03776144 RET
	0x03776148 LDR X0, [X0]
	0x0377614C RET
	0x03776150 STR X1, [X0]
	0x03776154 RET
	0x03776158 STP X30, X23, [X31 - 0x30]!
	0x0377615C STP X22, X21, [X31 + 0x10]
	0x03776160 STP X20, X19, [X31 + 0x20]
	0x03776164 CBZ X1, 0x37761CC
	0x03776168 LDR X23, [X1 + 0x150]
	0x0377616C MOV X20, X1
	0x03776170 CBZ X23, 0x37761CC
	0x03776174 LDR X22, [X0]
	0x03776178 MOV W21, W2
	0x0377617C MOV X19, X0
	0x03776180 CBZ X22, 0x3776198
	0x03776184 LDR X8, [X23]
	0x03776188 MOV X0, X22
	0x0377618C LDR X1, [X8 + 0x40]
	0x03776190 BL 0x1C16E00
	0x03776194 CBZ X0, 0x37761D4
	0x03776198 LDR W8, [X23 + 0x18]
	0x0377619C CMP W8, W21
	0x037761A0 B.LS 0x37761D0
	0x037761A4 ADD X8, X23, W21, 0x3, SXTW
	0x037761A8 STR X22, [X8 + 0x20]
	0x037761AC LDR X8, [X19]
	0x037761B0 CBZ X8, 0x37761CC
	0x037761B4 STR X20, [X8 + 0x78]
	0x037761B8 LDR X0, [X19]
	0x037761BC LDP X20, X19, [X31 + 0x20]
	0x037761C0 LDP X22, X21, [X31 + 0x10]
	0x037761C4 LDP X30, X23, [X31], #0x30
	0x037761C8 RET
	0x037761CC BL 0x1C16F20
	0x037761D0 BL 0x1C16F28
	0x037761D4 BL 0x1C16F44
	0x037761D8 MOV X1, X31
	0x037761DC BL 0x1C16DEC
	0x037761E0 STR X30, [X31 - 0x10]!
	0x037761E4 LDR X8, [X0]
	0x037761E8 CBZ X8, 0x37761FC
	0x037761EC STR X1, [X8 + 0x80]
	0x037761F0 LDR X0, [X0]
	0x037761F4 LDR X30, [X31], #0x10

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], D8
	003 Move [X31+24], X30
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0xC6B000
	009 Move X20, X8
	010 Move W8, [X22+3884]
	011 Move V8, V0
	012 Move X21, X2
	013 Move W19, W1
	014 Move [X31+8], X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0x9A6000
	020 Move X0, [X0+624]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+3884], W8
	024 Add X0, X31, 8
	025 Move X1, X31
	026 Call InputEventPtr.get_valid, X0
	027 Move TEMP, X0
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfNotEqual {72}
	031 Add X0, X31, 8
	032 Move X1, X31
	033 Call InputEventPtr.get_type, X0
	034 Move W8, 0x5441
	035 NotImplemented "Instruction MOVK not yet implemented."
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move W8, 0x4154
	038 NotImplemented "Instruction MOVK not yet implemented."
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Compare X21, 0
	041 JumpIfNotEqual {59}
	042 Add X0, X31, 8
	043 Move X1, X31
	044 Call InputEventPtr.get_deviceId, X0
	045 Move X8, 0x9A6000
	046 Move X8, [X8+624]
	047 Move W22, W0
	048 Move X8, [X8]
	049 Move W9, [X8+224]
	050 Compare W9, 0
	051 JumpIfNotEqual {54}
	052 Move X0, X8
	053 Call 0x1C17DFC
	054 Move W0, W22
	055 Call InputSystem.GetDeviceById, X0
	056 Move X21, X0
	057 Compare X0, 0
	058 JumpIfEqual {104}
	059 Move X8, [X31+8]
	060 Move [X20+16], W19
	061 Move [X20+20], S8
	062 Move X30, [X31+24]
	063 Move [X20], X21
	064 Move [X20+8], X8
	065 Move X20, [X31+48]
	066 Move X19, [X31+56]
	067 Move X22, [X31+32]
	068 Move X21, [X31+40]
	069 Move V8, [X31+16]
	070 Add X31, X31, 64
	071 Return X0
	072 Move X0, 0x983000
	073 Move X0, [X0+1320]
	074 Call 0x1C17D08
	075 Call 0x1C17F10
	076 Move X19, X0
	077 Move X0, 0x9A6000
	078 Move X0, [X0+3440]
	079 Call 0x1C17D08
	080 Move X20, X0
	081 Move X0, 0x9D1000
	082 Move X0, [X0+3288]
	083 Call 0x1C17D08
	084 Move X2, X0
	085 Move X0, X19
	086 Move X1, X20
	087 Move X3, X31
	088 Call ArgumentNullException..ctor, X0, X1, X2
	089 Move X0, 0x9D1000
	090 Move X0, [X0+3296]
	091 Call 0x1C17D08
	092 Move X1, X0
	093 Move X0, X19
	094 Call 0x1C17DEC
	095 Move [X31], W0
	096 Move X0, 0x9A6000
	097 Move X0, [X0+3368]
	098 Call 0x1C17D08
	099 Add X1, X31, 0
	100 Call 0x1C17E04
	101 Move X19, X0
	102 Move X0, 0x9D1000
	103 Move X0, [X0+3184]
	104 Move [X31], W22
	105 Move X0, 0x97E000
	106 Move X0, [X0+1880]
	107 Call 0x1C17D08
	108 Add X1, X31, 0
	109 Call 0x1C17E04
	110 Move X19, X0
	111 Move X0, 0x9D1000
	112 Move X0, [X0+3304]
	113 Call 0x1C17D08
	114 Move X1, X19
	115 Move X2, X31
	116 Call String.Format, X0, X1
	117 Move X19, X0
	118 Move X0, 0x986000
	119 Move X0, [X0+1400]
	120 Call 0x1C17D08
	121 Call 0x1C17F10
	122 Move X20, X0
	123 Move X0, 0x9A6000
	124 Move X0, [X0+3440]
	125 Call 0x1C17D08
	126 Move X2, X0
	127 Move X0, X20
	128 Move X1, X19
	129 Move X3, X31
	130 Call ArgumentException..ctor, X0, X1, X2
	131 Move X0, 0x9D1000
	132 Move X0, [X0+3296]
	133 Call 0x1C17D08
	134 Move X1, X0
	135 Move X0, X20
	136 Call 0x1C17DEC

Method: UnityEngine.InputSystem.InputControlExtensions/InputEventControlCollection EnumerateChangedControls(UnityEngine.InputSystem.LowLevel.InputEventPtr eventPtr, UnityEngine.InputSystem.InputDevice device = null, System.Single magnitudeThreshold = 0)

Disassembly:
	0x037761F8 RET
	0x037761FC BL 0x1C16F20
	0x03776200 SUB X31, X31, 0x30
	0x03776204 STP X31, X30, [X31 + 0x8]
	0x03776208 STP X20, X19, [X31 + 0x20]
	0x0377620C LDR X20, [X0]
	0x03776210 MOV X19, X0
	0x03776214 ADD X0, X31, 0x0
	0x03776218 MOV X2, X31
	0x0377621C STR X31, [X31]
	0x03776220 BL 0x3757420
	0x03776224 CBZ X20, 0x3776244
	0x03776228 LDR V0, [X31]
	0x0377622C LDR X30, [X31 + 0x10]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+32], X30
	003 Move [X31+40], X19
	004 Move X2, X1
	005 Move X19, X8
	006 Add X8, X31, 8
	007 Move W1, 2
	008 Call InputControlExtensions.EnumerateControls, X0, X1, X2, V0
	009 Move X8, [X31+24]
	010 NotImplemented "Instruction LDUR not yet implemented."
	011 Move [X19+16], X8
	012 Move [X19], V0
	013 Move X30, [X31+32]
	014 Move X19, [X31+40]
	015 Add X31, X31, 48
	016 Return X0

Method: System.Boolean HasButtonPress(UnityEngine.InputSystem.LowLevel.InputEventPtr eventPtr, System.Single magnitude = -1, System.Boolean buttonControlsOnly = True)

Disassembly:
	0x03776230 STR V0, [X20 + 0x2]
	0x03776234 LDR X0, [X19]
	0x03776238 LDP X20, X19, [X31 + 0x20]
	0x0377623C ADD X31, X31, 0x30
	0x03776240 RET
	0x03776244 BL 0x1C16F20
	0x03776248 SUB X31, X31, 0x30

ISIL:
	001 Move [X31-16], X30
	002 And W1, W1, 1
	003 Call InputControlExtensions.GetFirstButtonPressOrNull, X0, V0, X1
	004 NotImplemented "Instruction CMP not yet implemented."
	005 NotImplemented "Instruction CSET not yet implemented."
	006 Move X30, [X31+16]
	007 Return X0

Method: UnityEngine.InputSystem.InputControl GetFirstButtonPressOrNull(UnityEngine.InputSystem.LowLevel.InputEventPtr eventPtr, System.Single magnitude = -1, System.Boolean buttonControlsOnly = True)

Disassembly:
	0x0377268C BL 0x1C16D08
	0x03772690 BL 0x1C16F10
	0x03772694 MOV X1, X19
	0x03772698 MOV X2, X31
	0x0377269C MOV X20, X0
	0x037726A0 BL 0x3379A44
	0x037726A4 ADRP X0, 0x9D4000
	0x037726A8 LDR X0, [X0 + 0xB60]
	0x037726AC BL 0x1C16D08
	0x037726B0 MOV X1, X0
	0x037726B4 MOV X0, X20
	0x037726B8 BL 0x1C16DEC
	0x037726BC STR X30, [X31 - 0x20]!
	0x037726C0 STP X20, X19, [X31 + 0x10]
	0x037726C4 MOV X19, X0
	0x037726C8 ADRP X0, 0x9AD000
	0x037726CC LDR X0, [X0]
	0x037726D0 BL 0x1C16D08
	0x037726D4 MOV X1, X19
	0x037726D8 MOV X2, X31
	0x037726DC BL 0x321EFD0
	0x037726E0 MOV X19, X0
	0x037726E4 ADRP X0, 0x981000
	0x037726E8 LDR X0, [X0 + 0xB40]
	0x037726EC BL 0x1C16D08
	0x037726F0 BL 0x1C16F10
	0x037726F4 MOV X1, X19
	0x037726F8 MOV X2, X31
	0x037726FC MOV X20, X0
	0x03772700 BL 0x3379A44
	0x03772704 ADRP X0, 0x9D4000
	0x03772708 LDR X0, [X0 + 0xB68]
	0x0377270C BL 0x1C16D08
	0x03772710 MOV X1, X0
	0x03772714 MOV X0, X20
	0x03772718 BL 0x1C16DEC
	0x0377271C STR X30, [X31 - 0x20]!
	0x03772720 STP X20, X19, [X31 + 0x10]
	0x03772724 MOV X19, X1
	0x03772728 MOV X20, X0
	0x0377272C MOV X0, X1
	0x03772730 MOV X1, X31
	0x03772734 BL 0x32277A8
	0x03772738 TBNZ X0, 0x0, 0x3772754
	0x0377273C MOV X0, X20
	0x03772740 MOV X1, X19
	0x03772744 LDP X20, X19, [X31 + 0x10]
	0x03772748 MOV W2, W31
	0x0377274C LDR X30, [X31], #0x20
	0x03772750 B 0x37723AC
	0x03772754 ADRP X0, 0x986000
	0x03772758 LDR X0, [X0 + 0x528]
	0x0377275C BL 0x1C16D08
	0x03772760 BL 0x1C16F10
	0x03772764 MOV X19, X0
	0x03772768 ADRP X0, 0x98C000
	0x0377276C LDR X0, [X0 + 0x120]
	0x03772770 BL 0x1C16D08
	0x03772774 MOV X1, X0
	0x03772778 MOV X0, X19
	0x0377277C MOV X2, X31
	0x03772780 BL 0x330E100
	0x03772784 ADRP X0, 0x9D4000
	0x03772788 LDR X0, [X0 + 0xB70]
	0x0377278C BL 0x1C16D08
	0x03772790 MOV X1, X0
	0x03772794 MOV X0, X19
	0x03772798 BL 0x1C16DEC
	0x0377279C STR X30, [X31 - 0x20]!
	0x037727A0 STP X20, X19, [X31 + 0x10]
	0x037727A4 MOV X19, X1
	0x037727A8 MOV X20, X0
	0x037727AC MOV X0, X1
	0x037727B0 MOV X1, X31
	0x037727B4 BL 0x32277A8
	0x037727B8 TBNZ X0, 0x0, 0x37727D8
	0x037727BC MOV X0, X20
	0x037727C0 MOV X1, X19
	0x037727C4 BL 0x377271C
	0x037727C8 CBZ X0, 0x3772820
	0x037727CC LDP X20, X19, [X31 + 0x10]
	0x037727D0 LDR X30, [X31], #0x20
	0x037727D4 RET
	0x037727D8 ADRP X0, 0x986000
	0x037727DC LDR X0, [X0 + 0x528]
	0x037727E0 BL 0x1C16D08
	0x037727E4 BL 0x1C16F10
	0x037727E8 MOV X19, X0
	0x037727EC ADRP X0, 0x98C000
	0x037727F0 LDR X0, [X0 + 0x120]
	0x037727F4 BL 0x1C16D08
	0x037727F8 MOV X1, X0
	0x037727FC MOV X0, X19
	0x03772800 MOV X2, X31
	0x03772804 BL 0x330E100
	0x03772808 ADRP X0, 0x9D4000
	0x0377280C LDR X0, [X0 + 0xB78]
	0x03772810 BL 0x1C16D08
	0x03772814 MOV X1, X0
	0x03772818 MOV X0, X19
	0x0377281C BL 0x1C16DEC

ISIL:
	001 Subtract X31, X31, 272
	002 Move [X31+224], D8
	003 Move [X31+240], X29
	004 Move [X31+248], X30
	005 Move [X31+256], X20
	006 Move [X31+264], X19
	007 Move X20, 0xC6F000
	008 Move W8, [X20+3885]
	009 Move W19, W1
	010 Move V8, V0
	011 Move [X31+232], X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x9AA000
	017 Move X0, [X0+624]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+3885], W8
	021 NotImplemented "Instruction MOVI not yet implemented."
	022 Add X0, X31, 232
	023 Move X1, X31
	024 Move [X31+192], V0
	025 Move [X31+200], V0
	026 Move [X31+160], V0
	027 Move [X31+168], V0
	028 Move [X31+128], V0
	029 Move [X31+136], V0
	030 Move [X31+7], V0
	031 Call InputEventPtr.get_type, X0
	032 Move W8, 0x4154
	033 NotImplemented "Instruction MOVK not yet implemented."
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Add X0, X31, 232
	036 Move X1, X31
	037 Call InputEventPtr.get_type, X0
	038 Move W8, 0x5441
	039 NotImplemented "Instruction MOVK not yet implemented."
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move X8, X31
	042 NotImplemented "Instruction FCMP not yet implemented."
	043 Move X8, 0x9AA000
	044 Move X8, [X8+624]
	045 Move X0, [X8]
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1C17DFC
	050 Call InputSystem.get_settings
	051 Compare X0, 0
	052 JumpIfEqual {106}
	053 Move V8, [X0+64]
	054 Move X0, [X31+232]
	055 Add X8, X31, 0
	056 Move W1, 1
	057 Move X2, X31
	058 Move V0, V8
	059 Call InputControlExtensions.EnumerateControls, X0, X1, X2, V0
	060 Move X2, [X31]
	061 Move X1, [X31+8]
	062 Move W3, [X31+16]
	063 Move V0, [X31+20]
	064 NotImplemented "Instruction MOVI not yet implemented."
	065 Add X0, X31, 0
	066 Move [X31+80], V1
	067 Move [X31+88], V1
	068 Move [X31+48], V1
	069 Move [X31+56], V1
	070 Move [X31+16], V1
	071 Move [X31+24], V1
	072 Move [X31], V1
	073 Call InputEventControlEnumerator..ctor, X0, X1, X2, X3, V0
	074 Add X0, X31, 112
	075 Add X1, X31, 0
	076 Move W2, 112
	077 Call 0x3EB2AC0
	078 Add X0, X31, 112
	079 Call InputEventControlEnumerator.MoveNext, X0
	080 Move TEMP, X0
	081 And TEMP, TEMP, 1
	082 Compare TEMP, 1
	083 JumpIfNotEqual {96}
	084 Move X8, [X31+184]
	085 Move TEMP, X19
	086 And TEMP, TEMP, 1
	087 Compare TEMP, 1
	088 JumpIfNotEqual {97}
	089 Compare X8, 0
	090 JumpIfEqual {105}
	091 Move W9, [X8+160]
	092 Move TEMP, X9
	093 And TEMP, TEMP, 8
	094 Compare TEMP, 8
	095 JumpIfNotEqual {78}
	096 Move X8, X31
	097 Move X20, [X31+256]
	098 Move X19, [X31+264]
	099 Move X29, [X31+240]
	100 Move X30, [X31+248]
	101 Move V8, [X31+224]
	102 Move X0, X8
	103 Add X31, X31, 272
	104 Return X0
	105 Call 0x1C17F20
	106 Call 0x1C17F20
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Call 0x3EB2AD0
	109 Move X19, [X0]
	110 Call 0x3EB2AE0
	111 Move X8, X31
	112 Move [X31+176], X31
	113 Compare X19, 0
	114 JumpIfEqual {97}
	115 Move X0, X19
	116 Call 0x1C17F18
	117 Move [X31+176], X31
	118 Compare X19, 0
	119 JumpIfNotEqual {121}
	120 Call 0x1D2D690
	121 Move X0, X19
	122 Call 0x1C17F18
	123 Call 0x1991590

Method: System.Collections.Generic.IEnumerable`1<UnityEngine.InputSystem.InputControl> GetAllButtonPresses(UnityEngine.InputSystem.LowLevel.InputEventPtr eventPtr, System.Single magnitude = -1, System.Boolean buttonControlsOnly = True)

Disassembly:
	0x037765F8 ADD X0, X31, 0x0
	0x037765FC MOV X2, X31
	0x03776600 STR X31, [X31]
	0x03776604 BL 0x3757420
	0x03776608 LDP X0, X1, [X31]
	0x0377660C MOV X2, X31
	0x03776610 BL 0x37577E0
	0x03776614 CBZ X20, 0x3776630
	0x03776618 STR X0, [X20 + 0x50]
	0x0377661C LDR X0, [X19]
	0x03776620 LDP X20, X19, [X31 + 0x20]
	0x03776624 LDR X30, [X31 + 0x10]
	0x03776628 ADD X31, X31, 0x30
	0x0377662C RET
	0x03776630 BL 0x1C16F20
	0x03776634 STR X30, [X31 - 0x10]!
	0x03776638 LDR X8, [X0]
	0x0377663C CBZ X8, 0x3776650
	0x03776640 STP X1, X2, [X8 + 0x58]
	0x03776644 LDR X0, [X0]
	0x03776648 LDR X30, [X31], #0x10
	0x0377664C RET
	0x03776650 BL 0x1C16F20
	0x03776654 STR X30, [X31 - 0x10]!
	0x03776658 LDR X8, [X0]
	0x0377665C CBZ X8, 0x3776670
	0x03776660 STP W2, W1, [X8 + 0x98]
	0x03776664 LDR X0, [X0]
	0x03776668 LDR X30, [X31], #0x10
	0x0377666C RET
	0x03776670 BL 0x1C16F20
	0x03776674 STR X30, [X31 - 0x10]!
	0x03776678 LDR X8, [X0]
	0x0377667C CBZ X8, 0x3776690
	0x03776680 STP X1, X2, [X8 + 0x10]
	0x03776684 LDR X0, [X0]
	0x03776688 LDR X30, [X31], #0x10

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0xC6B000
	008 Move X21, 0x9D1000
	009 Move W8, [X22+3886]
	010 Move X21, [X21+3328]
	011 Move W20, W1
	012 Move V8, V0
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x9D1000
	019 Move X0, [X0+3328]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+3886], W8
	023 Move X0, [X21]
	024 And W21, W20, 1
	025 Call 0x1C17F10
	026 Move X1, X31
	027 Move X20, X0
	028 Call Object..ctor, X0
	029 Move TEMP, 1
	030 Not TEMP
	031 Move W8, TEMP
	032 Move X0, X31
	033 Move [X20+16], W8
	034 Call Environment.get_CurrentManagedThreadId
	035 Move [X20+32], W0
	036 Move [X20+48], X19
	037 Move [X20+60], S8
	038 Move [X20+65], W21
	039 Move X0, X20
	040 Move X20, [X31+32]
	041 Move X19, [X31+40]
	042 Move X22, [X31+16]
	043 Move X21, [X31+24]
	044 Move X30, [X31+8]
	045 Move V8, [X31+48]
	046 Return X0

Method: UnityEngine.InputSystem.InputControlExtensions/ControlBuilder Setup(UnityEngine.InputSystem.InputControl control)

Disassembly:
	0x037766C0 STP X22, X21, [X31 + 0x10]
	0x037766C4 STP X20, X19, [X31 + 0x20]
	0x037766C8 LDR X8, [X0]
	0x037766CC CBZ X8, 0x377674C
	0x037766D0 LDR X8, [X8 + 0x140]
	0x037766D4 CBZ X8, 0x377674C
	0x037766D8 LDR W9, [X8 + 0x18]
	0x037766DC MOV W21, W1
	0x037766E0 CMP W9, W1
	0x037766E4 B.LS 0x3776750
	0x037766E8 SXTW X22, W21
	0x037766EC ADD X8, X8, X22, 0x4, LSL
	0x037766F0 STP X2, X3, [X8 + 0x20]
	0x037766F4 LDR X8, [X0]
	0x037766F8 MOV X20, X0
	0x037766FC CBZ X8, 0x377674C
	0x03776700 LDR X23, [X8 + 0x148]
	0x03776704 CBZ X23, 0x377674C
	0x03776708 MOV X19, X4
	0x0377670C CBZ X4, 0x3776724
	0x03776710 LDR X8, [X23]
	0x03776714 MOV X0, X19
	0x03776718 LDR X1, [X8 + 0x40]
	0x0377671C BL 0x1C16E00
	0x03776720 CBZ X0, 0x3776754
	0x03776724 LDR W8, [X23 + 0x18]
	0x03776728 CMP W8, W21
	0x0377672C B.LS 0x3776750
	0x03776730 ADD X8, X23, X22, 0x3, LSL
	0x03776734 STR X19, [X8 + 0x20]
	0x03776738 LDR X0, [X20]
	0x0377673C LDP X20, X19, [X31 + 0x20]
	0x03776740 LDP X22, X21, [X31 + 0x10]
	0x03776744 LDP X30, X23, [X31], #0x30
	0x03776748 RET
	0x0377674C BL 0x1C16F20
	0x03776750 BL 0x1C16F28
	0x03776754 BL 0x1C16F44
	0x03776758 MOV X1, X31
	0x0377675C BL 0x1C16DEC
	0x03776760 STR X30, [X31 - 0x10]!
	0x03776764 LDR X8, [X0]
	0x03776768 CBZ X8, 0x3776798
	0x0377676C LDR X8, [X8 + 0x138]
	0x03776770 CBZ X8, 0x3776798
	0x03776774 LDR W9, [X8 + 0x18]
	0x03776778 CMP W9, W1
	0x0377677C B.LS 0x377679C
	0x03776780 SXTW X9, W1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X0, 0
	005 JumpIfEqual {15}
	006 Move W8, [X0+160]
	007 Move TEMP, X8
	008 And TEMP, TEMP, 32
	009 Compare TEMP, 32
	010 JumpIfEqual {33}
	011 Move X20, [X31+16]
	012 Move X19, [X31+24]
	013 Move X30, [X31+32]
	014 Return X0
	015 Move X0, 0x983000
	016 Move X0, [X0+1320]
	017 Call 0x1C17D08
	018 Call 0x1C17F10
	019 Move X19, X0
	020 Move X0, 0x9A6000
	021 Move X0, [X0+3424]
	022 Call 0x1C17D08
	023 Move X1, X0
	024 Move X0, X19
	025 Move X2, X31
	026 Call ArgumentNullException..ctor, X0, X1
	027 Move X0, 0x9D1000
	028 Move X0, [X0+3336]
	029 Call 0x1C17D08
	030 Move X1, X0
	031 Move X0, X19
	032 Call 0x1C17DEC
	033 Move X8, 0x9D1000
	034 Move X8, [X8+3344]
	035 Move X19, X0
	036 Move X0, X8
	037 Call 0x1C17D08
	038 Move X1, X19
	039 Move X2, X31
	040 Call String.Format, X0, X1
	041 Move X19, X0
	042 Move X0, 0x97E000
	043 Move X0, [X0+1456]
	044 Call 0x1C17D08
	045 Call 0x1C17F10
	046 Move X1, X19
	047 Move X2, X31
	048 Move X20, X0
	049 Call InvalidOperationException..ctor, X0, X1
	050 Move X0, 0x9D1000
	051 Move X0, [X0+3336]
	052 Call 0x1C17D08
	053 Move X1, X0
	054 Move X0, X20
	055 Call 0x1C17DEC

Method: UnityEngine.InputSystem.InputControlExtensions/DeviceBuilder Setup(UnityEngine.InputSystem.InputDevice device, System.Int32 controlCount, System.Int32 usageCount, System.Int32 aliasCount)

Disassembly:
	0x03776784 ADD X8, X8, X9, 0x4, LSL
	0x03776788 STP X2, X3, [X8 + 0x20]
	0x0377678C LDR X0, [X0]
	0x03776790 LDR X30, [X31], #0x10
	0x03776794 RET
	0x03776798 BL 0x1C16F20
	0x0377679C BL 0x1C16F28
	0x037767A0 STR X30, [X31 - 0x10]!
	0x037767A4 LDR X8, [X0]
	0x037767A8 CBZ X8, 0x37767BC
	0x037767AC STR X1, [X8 + 0x158]
	0x037767B0 LDR X0, [X0]
	0x037767B4 LDR X30, [X31], #0x10
	0x037767B8 RET
	0x037767BC BL 0x1C16F20
	0x037767C0 STP X30, X23, [X31 - 0x30]!
	0x037767C4 STP X22, X21, [X31 + 0x10]
	0x037767C8 STP X20, X19, [X31 + 0x20]
	0x037767CC ADRP X22, 0xC6A000
	0x037767D0 LDRB W8, [X22 + 0xF35]
	0x037767D4 MOV X19, X2
	0x037767D8 MOV X21, X1
	0x037767DC MOV X20, X0
	0x037767E0 TBNZ X8, 0x0, 0x3776804
	0x037767E4 ADRP X0, 0x9D0000
	0x037767E8 LDR X0, [X0 + 0xD78]
	0x037767EC BL 0x1C16CF4
	0x037767F0 ADRP X0, 0x9D0000
	0x037767F4 LDR X0, [X0 + 0xD80]
	0x037767F8 BL 0x1C16CF4
	0x037767FC MOVZ W8, 0x1
	0x03776800 STRB W8, [X22 + 0xF35]
	0x03776804 CBZ X21, 0x37768C4
	0x03776808 LDRSW X8, [X21 + 0x18]
	0x0377680C ADRP X9, 0x9D0000
	0x03776810 LDR X9, [X9 + 0xD78]
	0x03776814 MOVN X10, 0xDB6C
	0x03776818 MOVK X10, 0x92490000
	0x0377681C MUL X10, X8, X10
	0x03776820 UBFM X10, X10, 0x20, 0x3F
	0x03776824 LDR X0, [X9]
	0x03776828 ADD W8, W10, W8
	0x0377682C LDR X23, [X20]
	0x03776830 SBFM W9, W8, 0x2, 0x1F
	0x03776834 ADD W22, W9, W8, 0x1F, LSR
	0x03776838 MOV W1, W22
	0x0377683C BL 0x1C16D6C
	0x03776840 CBZ X23, 0x37768C4
	0x03776844 STR X0, [X23 + 0x160]
	0x03776848 LDR W8, [X21 + 0x18]
	0x0377684C LDR X14, [X20]
	0x03776850 ADD X9, X21, 0x20
	0x03776854 CMP W8, 0x0
	0x03776858 CSEL X8, X31, X9, EQ
	0x0377685C CBZ X14, 0x37768C4
	0x03776860 MOV X11, X31
	0x03776864 MOV X9, X31
	0x03776868 BIC W10, W22, W22, 0x1F
	0x0377686C MOVZ W12, 0x20
	0x03776870 MOVZ X13, 0x7
	0x03776874 CMP X10, X9
	0x03776878 B.EQ 0x37768C8
	0x0377687C LDR X14, [X14 + 0x160]
	0x03776880 CBZ X14, 0x37768C4
	0x03776884 LDR W15, [X14 + 0x18]
	0x03776888 CMP X9, X15
	0x0377688C B.CS 0x37768E0
	0x03776890 ADD X15, X8, X11, 0x20, ASR
	0x03776894 LDRH W16, [X15 + 0x4]
	0x03776898 LDRB W17, [X15 + 0x6]
	0x0377689C LDR W15, [X15]
	0x037768A0 ADD X14, X14, X12
	0x037768A4 STRH W16, [X14 + 0x4]
	0x037768A8 STRB W17, [X14 + 0x6]
	0x037768AC STR W15, [X14]
	0x037768B0 LDR X14, [X20]
	0x037768B4 ADD X11, X11, X13
	0x037768B8 ADD X12, X12, 0x7
	0x037768BC ADD X9, X9, 0x1
	0x037768C0 CBNZ X14, 0x3776874
	0x037768C4 BL 0x1C16F20
	0x037768C8 STR X19, [X14 + 0x168]
	0x037768CC LDR X0, [X20]
	0x037768D0 LDP X20, X19, [X31 + 0x20]
	0x037768D4 LDP X22, X21, [X31 + 0x10]
	0x037768D8 LDP X30, X23, [X31], #0x30
	0x037768DC RET
	0x037768E0 BL 0x1C16F28
	0x037768E4 STR X30, [X31 - 0x10]!
	0x037768E8 LDR X8, [X0]
	0x037768EC CBZ X8, 0x3776904
	0x037768F0 LDR W9, [X8 + 0xA0]
	0x037768F4 ORR W9, W9, 0x20
	0x037768F8 STR W9, [X8 + 0xA0]
	0x037768FC LDR X30, [X31], #0x10
	0x03776900 RET
	0x03776904 BL 0x1C16F20
	0x03776908 LDR W8, [X0 + 0x10]
	0x0377690C CMP W8, 0x1
	0x03776910 B.EQ 0x377691C
	0x03776914 ADDS W31, W8, 0x3
	0x03776918 B.NE 0x3776928
	0x0377691C MOVN W8, 0x0
	0x03776920 STR W8, [X0 + 0x10]
	0x03776924 STR X31, [X0 + 0x88]
	0x03776928 RET
	0x0377692C SUB X31, X31, 0x120
	0x03776930 STP X29, X30, [X31 + 0x100]
	0x03776934 STP X20, X19, [X31 + 0x110]
	0x03776938 ADRP X20, 0xC6A000
	0x0377693C LDRB W8, [X20 + 0xF36]
	0x03776940 MOV X19, X0
	0x03776944 STR X0, [X31 + 0xF8]
	0x03776948 TBNZ X8, 0x0, 0x3776960
	0x0377694C ADRP X0, 0x9A5000
	0x03776950 LDR X0, [X0 + 0x270]
	0x03776954 BL 0x1C16CF4
	0x03776958 MOVZ W8, 0x1
	0x0377695C STRB W8, [X20 + 0xF36]
	0x03776960 ADD X8, X31, 0xF8
	0x03776964 STP X31, X8, [X31 + 0xE8]
	0x03776968 LDR W8, [X19 + 0x10]
	0x0377696C CMP W8, 0x1
	0x03776970 B.EQ 0x3776A58
	0x03776974 CBNZ W8, 0x3776B08

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0xC6B000
	009 Move W8, [X23+3887]
	010 Move W20, W3
	011 Move W21, W2
	012 Move W22, W1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x9D0000
	019 Move X0, [X0+720]
	020 Call 0x1C17CF4
	021 Move X0, 0x9D1000
	022 Move X0, [X0+3352]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X23+3887], W8
	026 Compare X19, 0
	027 JumpIfEqual {74}
	028 Move W8, [X19+160]
	029 Move TEMP, X8
	030 And TEMP, TEMP, 32
	031 Compare TEMP, 32
	032 JumpIfEqual {86}
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move TEMP, X21
	035 And TEMP, TEMP, -2147483648
	036 Compare TEMP, -2147483648
	037 JumpIfEqual {114}
	038 Move TEMP, X20
	039 And TEMP, TEMP, -2147483648
	040 Compare TEMP, -2147483648
	041 JumpIfEqual {121}
	042 Move X24, 0x9D0000
	043 Move X24, [X24+720]
	044 Move [X19+120], X19
	045 Move X23, 0x9D1000
	046 Move W1, W22
	047 Move X0, [X24]
	048 Move X23, [X23+3352]
	049 Call 0x1C17D6C
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move [X19+336], X0
	052 Move X0, [X23]
	053 Move W1, W21
	054 Call 0x1C17D6C
	055 Move [X19+320], X0
	056 Move X0, [X24]
	057 Move W1, W21
	058 Call 0x1C17D6C
	059 Move [X19+328], X0
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move X0, [X23]
	062 Move W1, W20
	063 Call 0x1C17D6C
	064 Move [X19+312], X0
	065 Move X0, X19
	066 Move X20, [X31+48]
	067 Move X19, [X31+56]
	068 Move X22, [X31+32]
	069 Move X21, [X31+40]
	070 Move X24, [X31+16]
	071 Move X23, [X31+24]
	072 Move X30, [X31+64]
	073 Return X0
	074 Move X0, 0x983000
	075 Move X0, [X0+1320]
	076 Call 0x1C17D08
	077 Call 0x1C17F10
	078 Move X19, X0
	079 Move X0, 0x9A6000
	080 Move X0, [X0+3360]
	081 Call 0x1C17D08
	082 Move X1, X0
	083 Move X0, X19
	084 Move X2, X31
	085 Call ArgumentNullException..ctor, X0, X1
	086 Move X0, 0x9D1000
	087 Move X0, [X0+3344]
	088 Call 0x1C17D08
	089 Move X1, X19
	090 Move X2, X31
	091 Call String.Format, X0, X1
	092 Move X19, X0
	093 Move X0, 0x97E000
	094 Move X0, [X0+1456]
	095 Call 0x1C17D08
	096 Call 0x1C17F10
	097 Move X1, X19
	098 Move X2, X31
	099 Move X20, X0
	100 Call InvalidOperationException..ctor, X0, X1
	101 Move X0, 0x9D1000
	102 Move X0, [X0+3360]
	103 Call 0x1C17D08
	104 Move X1, X0
	105 Move X0, X20
	106 Call 0x1C17DEC
	107 Move X0, 0x986000
	108 Move X0, [X0+1888]
	109 Call 0x1C17D08
	110 Call 0x1C17F10
	111 Move X19, X0
	112 Move X0, 0x9D1000
	113 Move X0, [X0+3368]
	114 Move X0, 0x986000
	115 Move X0, [X0+1888]
	116 Call 0x1C17D08
	117 Call 0x1C17F10
	118 Move X19, X0
	119 Move X0, 0x9D1000
	120 Move X0, [X0+3376]
	121 Move X0, 0x986000
	122 Move X0, [X0+1888]
	123 Call 0x1C17D08
	124 Call 0x1C17F10
	125 Move X19, X0
	126 Move X0, 0x9D1000
	127 Move X0, [X0+3384]
	128 Call 0x1C17D08
	129 Move X1, X0
	130 Move X0, X19
	131 Move X2, X31
	132 Call ArgumentOutOfRangeException..ctor, X0, X1
	133 Move X0, 0x9D1000
	134 Move X0, [X0+3360]
	135 Call 0x1C17D08
	136 Move X1, X0
	137 Move X0, X19
	138 Call 0x1C17DEC

