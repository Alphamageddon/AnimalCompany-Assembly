Type: UnityEngine.InputSystem.Pointer

Method: UnityEngine.InputSystem.Controls.Vector2Control get_position()

Disassembly:
	0x03780480 MOV X3, X19
	0x03780484 BL 0x378D0A8

ISIL:
	001 Move X0, [X0+368]
	002 Return X0

Method: System.Void set_position(UnityEngine.InputSystem.Controls.Vector2Control value)

Disassembly:
	0x03780488 LDR X1, [X31 + 0x528]
	0x0378048C LDR X2, [X31 + 0x530]

ISIL:
	001 Move [X0+368], X1
	002 Return 

Method: UnityEngine.InputSystem.Controls.DeltaControl get_delta()

Disassembly:
	0x03780490 STR X0, [X31 + 0x108]
	0x03780494 MOV X0, X19

ISIL:
	001 Move X0, [X0+376]
	002 Return X0

Method: System.Void set_delta(UnityEngine.InputSystem.Controls.DeltaControl value)

Disassembly:
	0x03780498 MOV X3, X19
	0x0378049C BL 0x378D28C

ISIL:
	001 Move [X0+376], X1
	002 Return 

Method: UnityEngine.InputSystem.Controls.Vector2Control get_radius()

Disassembly:
	0x037804A0 LDR X1, [X31 + 0x528]
	0x037804A4 LDR X2, [X31 + 0x530]

ISIL:
	001 Move X0, [X0+384]
	002 Return X0

Method: System.Void set_radius(UnityEngine.InputSystem.Controls.Vector2Control value)

Disassembly:
	0x037804A8 STR X0, [X31 + 0x100]
	0x037804AC MOV X0, X19

ISIL:
	001 Move [X0+384], X1
	002 Return 

Method: UnityEngine.InputSystem.Controls.AxisControl get_pressure()

Disassembly:
	0x037804B0 MOV X3, X19
	0x037804B4 BL 0x378D470

ISIL:
	001 Move X0, [X0+392]
	002 Return X0

Method: System.Void set_pressure(UnityEngine.InputSystem.Controls.AxisControl value)

Disassembly:
	0x037804B8 LDR X1, [X31 + 0x528]
	0x037804BC LDR X2, [X31 + 0x530]

ISIL:
	001 Move [X0+392], X1
	002 Return 

Method: UnityEngine.InputSystem.Controls.ButtonControl get_press()

Disassembly:
	0x037804C0 STR X0, [X31 + 0xF8]
	0x037804C4 MOV X0, X19

ISIL:
	001 Move X0, [X0+400]
	002 Return X0

Method: System.Void set_press(UnityEngine.InputSystem.Controls.ButtonControl value)

Disassembly:
	0x037804C8 MOV X3, X19
	0x037804CC BL 0x378D654

ISIL:
	001 Move [X0+400], X1
	002 Return 

Method: UnityEngine.InputSystem.Controls.IntegerControl get_displayIndex()

Disassembly:
	0x037804D0 LDR X1, [X31 + 0x528]
	0x037804D4 LDR X2, [X31 + 0x530]

ISIL:
	001 Move X0, [X0+408]
	002 Return X0

Method: System.Void set_displayIndex(UnityEngine.InputSystem.Controls.IntegerControl value)

Disassembly:
	0x037804D8 STR X0, [X31 + 0xF0]
	0x037804DC MOV X0, X19

ISIL:
	001 Move [X0+408], X1
	002 Return 

Method: UnityEngine.InputSystem.Pointer get_current()

Disassembly:
	0x037804E0 MOV X3, X19
	0x037804E4 BL 0x378D838
	0x037804E8 LDR X1, [X31 + 0x528]
	0x037804EC LDR X2, [X31 + 0x530]
	0x037804F0 STR X0, [X31 + 0x138]
	0x037804F4 MOV X0, X19
	0x037804F8 MOV X3, X19
	0x037804FC BL 0x378DA1C
	0x03780500 LDR X1, [X31 + 0x528]
	0x03780504 LDR X2, [X31 + 0x530]
	0x03780508 STR X0, [X31 + 0xE8]
	0x0378050C MOV X0, X19
	0x03780510 MOV X3, X19
	0x03780514 BL 0x378DC00
	0x03780518 LDR X1, [X31 + 0x528]
	0x0378051C LDR X2, [X31 + 0x530]
	0x03780520 STR X0, [X31 + 0xE0]
	0x03780524 MOV X0, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xC61000
	005 Move X20, 0x9C8000
	006 Move W8, [X19+3983]
	007 Move X20, [X20+960]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x9C8000
	013 Move X0, [X0+960]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+3983], W8
	017 Move X8, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X8, [X8+184]
	021 Move X0, [X8]
	022 Move X30, [X31+32]
	023 Return X0

Method: System.Void set_current(UnityEngine.InputSystem.Pointer value)

Disassembly:
	0x03780528 MOV X3, X19
	0x0378052C BL 0x378DDE4
	0x03780530 LDR X1, [X31 + 0x528]
	0x03780534 LDR X2, [X31 + 0x530]
	0x03780538 STR X0, [X31 + 0xD8]
	0x0378053C MOV X0, X19
	0x03780540 MOV X3, X19
	0x03780544 BL 0x378DFC8
	0x03780548 LDR X1, [X31 + 0x528]
	0x0378054C LDR X2, [X31 + 0x530]
	0x03780550 STR X0, [X31 + 0xD0]
	0x03780554 MOV X0, X19
	0x03780558 MOV X3, X19
	0x0378055C BL 0x378E1AC
	0x03780560 LDR X1, [X31 + 0x528]
	0x03780564 LDR X2, [X31 + 0x530]
	0x03780568 STR X0, [X31 + 0xC8]
	0x0378056C MOV X0, X19
	0x03780570 MOV X3, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xC61000
	006 Move X21, 0x9C8000
	007 Move W8, [X20+3984]
	008 Move X21, [X21+960]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x9C8000
	015 Move X0, [X0+960]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3984], W8
	019 Move X8, [X21]
	020 Move X8, [X8+184]
	021 Move [X8], X19
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X30, [X31+32]
	025 Move X21, [X31+40]
	026 Return 

Method: System.Void MakeCurrent()

Disassembly:
	0x0377F7B0 MOV X0, X19
	0x0377F7B4 LDR X1, [X8 + 0x40]
	0x0377F7B8 BL 0x1C16E00
	0x0377F7BC CBZ X0, 0x377F7F0
	0x0377F7C0 LDR W8, [X23 + 0x18]
	0x0377F7C4 CMP W8, W21
	0x0377F7C8 B.LS 0x377F7EC
	0x0377F7CC ADD X8, X23, X22, 0x3, LSL
	0x0377F7D0 STR X19, [X8 + 0x20]
	0x0377F7D4 LDR X0, [X20]
	0x0377F7D8 LDP X20, X19, [X31 + 0x20]
	0x0377F7DC LDP X22, X21, [X31 + 0x10]
	0x0377F7E0 LDP X30, X23, [X31], #0x30
	0x0377F7E4 RET
	0x0377F7E8 BL 0x1C16F20
	0x0377F7EC BL 0x1C16F28
	0x0377F7F0 BL 0x1C16F44
	0x0377F7F4 MOV X1, X31
	0x0377F7F8 BL 0x1C16DEC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xC62000
	005 Move W8, [X20+4000]
	006 Move X19, X0
	007 Compare W8, 0
	008 JumpIfNotEqual {14}
	009 Move X0, 0x9C9000
	010 Move X0, [X0+960]
	011 Call 0x1C17CF4
	012 Move W8, 1
	013 Move [X20+4000], W8
	014 Move X8, 0x9C9000
	015 Move X8, [X8+960]
	016 Move X8, [X8]
	017 Move X8, [X8+184]
	018 Move [X8], X19
	019 Move X20, [X31+16]
	020 Move X19, [X31+24]
	021 Move X30, [X31+32]
	022 Return 

Method: System.Void OnRemoved()

Disassembly:
	0x0377F8D8 LDR W15, [X15]
	0x0377F8DC ADD X14, X14, X12
	0x0377F8E0 STRH W16, [X14 + 0x4]
	0x0377F8E4 STRB W17, [X14 + 0x6]
	0x0377F8E8 STR W15, [X14]
	0x0377F8EC LDR X14, [X20]
	0x0377F8F0 ADD X11, X11, X13
	0x0377F8F4 ADD X12, X12, 0x7
	0x0377F8F8 ADD X9, X9, 0x1
	0x0377F8FC CBNZ X14, 0x377F8B0
	0x0377F900 BL 0x1C16F20
	0x0377F904 STR X19, [X14 + 0x168]
	0x0377F908 LDR X0, [X20]
	0x0377F90C LDP X20, X19, [X31 + 0x20]
	0x0377F910 LDP X22, X21, [X31 + 0x10]
	0x0377F914 LDP X30, X23, [X31], #0x30
	0x0377F918 RET
	0x0377F91C BL 0x1C16F28
	0x0377F920 STP X29, X30, [X31 - 0x60]!
	0x0377F924 STP X28, X27, [X31 + 0x10]
	0x0377F928 STP X26, X25, [X31 + 0x20]
	0x0377F92C STP X24, X23, [X31 + 0x30]
	0x0377F930 STP X22, X21, [X31 + 0x40]
	0x0377F934 STP X20, X19, [X31 + 0x50]
	0x0377F938 SUB X31, X31, 0x560
	0x0377F93C ADRP X20, 0xC61000
	0x0377F940 ADRP X21, 0x9C8000
	0x0377F944 LDRB W8, [X20 + 0xFA2]
	0x0377F948 LDR X21, [X21 + 0x470]
	0x0377F94C MOV X19, X0
	0x0377F950 TBNZ X8, 0x0, 0x377FA7C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xC62000
	005 Move W8, [X19+4001]
	006 Move X20, X0
	007 Compare W8, 0
	008 JumpIfNotEqual {14}
	009 Move X0, 0x9C9000
	010 Move X0, [X0+960]
	011 Call 0x1C17CF4
	012 Move W8, 1
	013 Move [X19+4001], W8
	014 Move X19, 0x9C9000
	015 Move X19, [X19+960]
	016 Move X8, [X19]
	017 Move X8, [X8+184]
	018 Move X9, [X8]
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move X20, 0xC62000
	021 Move W9, [X20+4000]
	022 Compare W9, 0
	023 JumpIfNotEqual {30}
	024 Move X0, X19
	025 Call 0x1C17CF4
	026 Move X8, [X19]
	027 Move W9, 1
	028 Move [X20+4000], W9
	029 Move X8, [X8+184]
	030 Move [X8], X31
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Return 

Method: System.Void FinishSetup()

Disassembly:
	0x0377FBC4 LDR X1, [X22]
	0x0377FBC8 ADD X0, X31, 0x508
	0x0377FBCC MOV X2, X31
	0x0377FBD0 BL 0x3757420
	0x0377FBD4 LDR X1, [X31 + 0x538]
	0x0377FBD8 LDR X2, [X31 + 0x540]
	0x0377FBDC MOV X0, X19
	0x0377FBE0 MOV X3, X19
	0x0377FBE4 BL 0x3782288
	0x0377FBE8 LDR X1, [X31 + 0x528]
	0x0377FBEC LDR X2, [X31 + 0x530]
	0x0377FBF0 STR X0, [X31 + 0x20]
	0x0377FBF4 MOV X0, X19
	0x0377FBF8 MOV X3, X19
	0x0377FBFC BL 0x3782468
	0x0377FC00 LDR X1, [X31 + 0x528]
	0x0377FC04 LDR X2, [X31 + 0x530]
	0x0377FC08 MOV X27, X0
	0x0377FC0C MOV X0, X19
	0x0377FC10 MOV X3, X19
	0x0377FC14 BL 0x3782658
	0x0377FC18 LDR X1, [X31 + 0x528]
	0x0377FC1C LDR X2, [X31 + 0x530]
	0x0377FC20 STR X0, [X31 + 0x90]
	0x0377FC24 MOV X0, X19
	0x0377FC28 MOV X3, X19
	0x0377FC2C BL 0x378283C
	0x0377FC30 LDR X1, [X31 + 0x528]
	0x0377FC34 LDR X2, [X31 + 0x530]
	0x0377FC38 STR X0, [X31 + 0x390]
	0x0377FC3C MOV X0, X19
	0x0377FC40 MOV X3, X19
	0x0377FC44 BL 0x3782A2C
	0x0377FC48 LDR X1, [X31 + 0x528]
	0x0377FC4C LDR X2, [X31 + 0x530]
	0x0377FC50 STR X0, [X31 + 0x88]
	0x0377FC54 MOV X0, X19
	0x0377FC58 MOV X3, X19
	0x0377FC5C BL 0x3782C10
	0x0377FC60 LDR X1, [X31 + 0x528]
	0x0377FC64 LDR X2, [X31 + 0x530]
	0x0377FC68 STR X0, [X31 + 0x80]
	0x0377FC6C MOV X0, X19
	0x0377FC70 MOV X3, X19
	0x0377FC74 BL 0x3782DF4
	0x0377FC78 LDR X1, [X31 + 0x528]
	0x0377FC7C LDR X2, [X31 + 0x530]
	0x0377FC80 STR X0, [X31 + 0x68]
	0x0377FC84 MOV X0, X19
	0x0377FC88 MOV X3, X19
	0x0377FC8C BL 0x3782FD8
	0x0377FC90 LDR X1, [X31 + 0x528]
	0x0377FC94 LDR X2, [X31 + 0x530]
	0x0377FC98 STR X0, [X31 + 0x70]
	0x0377FC9C MOV X0, X19
	0x0377FCA0 MOV X3, X19
	0x0377FCA4 BL 0x37831BC
	0x0377FCA8 LDR X1, [X31 + 0x528]
	0x0377FCAC LDR X2, [X31 + 0x530]
	0x0377FCB0 STR X0, [X31 + 0x78]
	0x0377FCB4 MOV X0, X19
	0x0377FCB8 MOV X3, X19
	0x0377FCBC BL 0x37833A0
	0x0377FCC0 LDR X1, [X31 + 0x528]
	0x0377FCC4 LDR X2, [X31 + 0x530]
	0x0377FCC8 STR X0, [X31 + 0x388]
	0x0377FCCC MOV X0, X19
	0x0377FCD0 MOV X3, X19
	0x0377FCD4 BL 0x3783584
	0x0377FCD8 LDR X1, [X31 + 0x528]
	0x0377FCDC LDR X2, [X31 + 0x530]
	0x0377FCE0 STR X0, [X31 + 0x380]
	0x0377FCE4 MOV X0, X19
	0x0377FCE8 MOV X3, X19
	0x0377FCEC BL 0x3783768
	0x0377FCF0 LDR X1, [X31 + 0x528]
	0x0377FCF4 LDR X2, [X31 + 0x530]
	0x0377FCF8 STR X0, [X31 + 0x378]
	0x0377FCFC MOV X0, X19
	0x0377FD00 MOV X3, X19
	0x0377FD04 BL 0x378394C
	0x0377FD08 LDR X1, [X31 + 0x528]
	0x0377FD0C LDR X2, [X31 + 0x530]
	0x0377FD10 STR X0, [X31 + 0x370]
	0x0377FD14 MOV X0, X19
	0x0377FD18 MOV X3, X19
	0x0377FD1C BL 0x3783B30
	0x0377FD20 LDR X1, [X31 + 0x528]
	0x0377FD24 LDR X2, [X31 + 0x530]
	0x0377FD28 STR X0, [X31 + 0x368]
	0x0377FD2C MOV X0, X19
	0x0377FD30 MOV X3, X19
	0x0377FD34 BL 0x3783D14
	0x0377FD38 LDR X1, [X31 + 0x528]
	0x0377FD3C LDR X2, [X31 + 0x530]
	0x0377FD40 STR X0, [X31 + 0x360]
	0x0377FD44 MOV X0, X19
	0x0377FD48 MOV X3, X19
	0x0377FD4C BL 0x3783EF8
	0x0377FD50 LDR X1, [X31 + 0x528]
	0x0377FD54 LDR X2, [X31 + 0x530]
	0x0377FD58 STR X0, [X31 + 0x358]
	0x0377FD5C MOV X0, X19
	0x0377FD60 MOV X3, X19

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X20, 0xC62000
	014 Move X21, 0x980000
	015 Move X26, 0x9C6000
	016 Move X28, 0x99D000
	017 Move X29, 0x9C8000
	018 Move X27, 0x9C8000
	019 Move X24, 0x9C8000
	020 Move X25, 0x9C6000
	021 Move X22, 0x9C8000
	022 Move X23, 0x9C6000
	023 Move X21, [X21+696]
	024 Move X26, [X26+3640]
	025 Move X28, [X28+3944]
	026 Move X29, [X29+104]
	027 Move X27, [X27+168]
	028 Move X24, [X24+160]
	029 Move W8, [X20+3985]
	030 Move X25, [X25+3632]
	031 Move X22, [X22+64]
	032 Move X23, [X23+3608]
	033 Move X19, X0
	034 Move TEMP, X8
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfEqual {73}
	038 Move X0, 0x9C6000
	039 Move X0, [X0+3632]
	040 Call 0x1C17CF4
	041 Move X0, 0x9C6000
	042 Move X0, [X0+3608]
	043 Call 0x1C17CF4
	044 Move X0, 0x9C8000
	045 Move X0, [X0+104]
	046 Call 0x1C17CF4
	047 Move X0, 0x9C8000
	048 Move X0, [X0+88]
	049 Call 0x1C17CF4
	050 Move X0, 0x9C6000
	051 Move X0, [X0+3640]
	052 Call 0x1C17CF4
	053 Move X0, 0x9C8000
	054 Move X0, [X0+64]
	055 Call 0x1C17CF4
	056 Move X0, 0x9C8000
	057 Move X0, [X0+160]
	058 Call 0x1C17CF4
	059 Move X0, 0x980000
	060 Move X0, [X0+696]
	061 Call 0x1C17CF4
	062 Move X0, 0x9C8000
	063 Move X0, [X0+168]
	064 Call 0x1C17CF4
	065 Move X0, 0x9C8000
	066 Move X0, [X0+80]
	067 Call 0x1C17CF4
	068 Move X0, 0x99D000
	069 Move X0, [X0+3944]
	070 Call 0x1C17CF4
	071 Move W8, 1
	072 Move [X20+3985], W8
	073 Move X1, [X21]
	074 Move X2, [X26]
	075 Move X0, X19
	076 Call 0x21FD754, X0, X1
	077 Move [X19+368], X0
	078 Move X1, [X28]
	079 Move X2, [X29]
	080 Move X0, X19
	081 Call 0x21FD754, X0, X1
	082 Move [X19+376], X0
	083 Move X1, [X27]
	084 Move X2, [X26]
	085 Move X0, X19
	086 Call 0x21FD754, X0, X1
	087 Move [X19+384], X0
	088 Move X1, [X24]
	089 Move X2, [X25]
	090 Move X0, X19
	091 Call 0x21FD754, X0, X1
	092 Move [X19+392], X0
	093 Move X1, [X22]
	094 Move X2, [X23]
	095 Move X0, X19
	096 Call 0x21FD754, X0, X1
	097 Move [X19+400], X0
	098 Move X8, 0x9C8000
	099 Move X8, [X8+80]
	100 Move X0, X19
	101 Move X1, [X8]
	102 Move X8, 0x9C8000
	103 Move X8, [X8+88]
	104 Move X2, [X8]
	105 Call 0x21FD754, X0, X1
	106 Move [X19+408], X0
	107 Move X20, [X31+80]
	108 Move X19, [X31+88]
	109 Move X22, [X31+64]
	110 Move X21, [X31+72]
	111 Move X24, [X31+48]
	112 Move X23, [X31+56]
	113 Move X26, [X31+32]
	114 Move X25, [X31+40]
	115 Move X28, [X31+16]
	116 Move X27, [X31+24]
	117 Move X29, [X31+96]
	118 Move X30, [X31+104]
	119 Return 

Method: System.Void OnNextUpdate()

Disassembly:
	0x0377FDF4 BL 0x3784C34
	0x0377FDF8 LDR X1, [X31 + 0x528]
	0x0377FDFC LDR X2, [X31 + 0x530]
	0x0377FE00 STR X0, [X31 + 0x340]
	0x0377FE04 MOV X0, X19
	0x0377FE08 MOV X3, X19
	0x0377FE0C BL 0x3784E18
	0x0377FE10 LDR X1, [X31 + 0x528]
	0x0377FE14 LDR X2, [X31 + 0x530]
	0x0377FE18 STR X0, [X31 + 0x338]
	0x0377FE1C MOV X0, X19
	0x0377FE20 MOV X3, X19
	0x0377FE24 BL 0x3784FFC
	0x0377FE28 LDR X1, [X31 + 0x528]
	0x0377FE2C LDR X2, [X31 + 0x530]
	0x0377FE30 STR X0, [X31 + 0x330]
	0x0377FE34 MOV X0, X19
	0x0377FE38 MOV X3, X19
	0x0377FE3C BL 0x37851E0
	0x0377FE40 LDR X1, [X31 + 0x528]
	0x0377FE44 LDR X2, [X31 + 0x530]
	0x0377FE48 STR X0, [X31 + 0x328]
	0x0377FE4C MOV X0, X19
	0x0377FE50 MOV X3, X19
	0x0377FE54 BL 0x37853C4
	0x0377FE58 LDR X1, [X31 + 0x528]
	0x0377FE5C LDR X2, [X31 + 0x530]
	0x0377FE60 STR X0, [X31 + 0x320]
	0x0377FE64 MOV X0, X19
	0x0377FE68 MOV X3, X19
	0x0377FE6C BL 0x37855A8
	0x0377FE70 LDR X1, [X31 + 0x528]
	0x0377FE74 LDR X2, [X31 + 0x530]
	0x0377FE78 STR X0, [X31 + 0x318]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xC62000
	006 Move W8, [X20+3986]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x9C9000
	013 Move X0, [X0+1032]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+3986], W8
	017 Move X21, 0xC5B000
	018 Move X20, 0x9C9000
	019 Move W8, [X21+1935]
	020 Move X19, [X19+376]
	021 Move X20, [X20+1032]
	022 Compare W8, 0
	023 JumpIfNotEqual {29}
	024 Move X0, 0x97D000
	025 Move X0, [X0+3848]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+1935], W8
	029 Move X8, 0x97D000
	030 Move X8, [X8+3848]
	031 Move X3, [X20]
	032 Move X0, X19
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X8, [X8]
	036 Move W1, W31
	037 Move X2, X31
	038 Move X8, [X8+184]
	039 Move S0, [X8]
	040 Move S1, [X8+4]
	041 Move X30, [X31+32]
	042 Move X21, [X31+40]
	043 Call InputState.Change, X0, X1, X2, X3
	044 Return 

Method: System.Void OnStateEvent(UnityEngine.InputSystem.LowLevel.InputEventPtr eventPtr)

Disassembly:
	0x0377FEC0 STR X0, [X31 + 0x300]
	0x0377FEC4 MOV X0, X19
	0x0377FEC8 MOV X3, X19
	0x0377FECC BL 0x3785D38
	0x0377FED0 LDR X1, [X31 + 0x528]
	0x0377FED4 LDR X2, [X31 + 0x530]
	0x0377FED8 STR X0, [X31 + 0x2F8]
	0x0377FEDC MOV X0, X19
	0x0377FEE0 MOV X3, X19
	0x0377FEE4 BL 0x3785F1C
	0x0377FEE8 LDR X1, [X31 + 0x528]
	0x0377FEEC LDR X2, [X31 + 0x530]
	0x0377FEF0 STR X0, [X31 + 0x2F0]
	0x0377FEF4 MOV X0, X19
	0x0377FEF8 MOV X3, X19
	0x0377FEFC BL 0x3786100
	0x0377FF00 LDR X1, [X31 + 0x528]
	0x0377FF04 LDR X2, [X31 + 0x530]
	0x0377FF08 STR X0, [X31 + 0x2E8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, [X0+376]
	006 Move X19, X0
	007 Move X21, X1
	008 Call InputControl.GetDeviceIndex, X0
	009 Move X1, X31
	010 Call InputStateBuffers.GetFrontBufferForDevice, X0
	011 Move X1, X0
	012 Move X0, X20
	013 Move X2, X21
	014 Call InputControlExtensions.AccumulateValueInEvent, X0, X1, X2
	015 Move X0, X19
	016 Move X20, [X31+16]
	017 Move X19, [X31+24]
	018 Move X1, X21
	019 Move W2, W31
	020 Move X3, X31
	021 Move X30, [X31+32]
	022 Move X21, [X31+40]
	023 Call InputState.Change, X0, X1, X2
	024 Return 

Method: System.Void UnityEngine.InputSystem.LowLevel.IInputStateCallbackReceiver.OnNextUpdate()

Disassembly:
	0x03780574 BL 0x378E390

ISIL:
	001 Call Pointer.OnNextUpdate, X0
	002 Return 

Method: System.Void UnityEngine.InputSystem.LowLevel.IInputStateCallbackReceiver.OnStateEvent(UnityEngine.InputSystem.LowLevel.InputEventPtr eventPtr)

Disassembly:
	0x03780578 LDR X1, [X31 + 0x528]

ISIL:
	001 Call Pointer.OnStateEvent, X0, X1
	002 Return 

Method: System.Boolean UnityEngine.InputSystem.LowLevel.IInputStateCallbackReceiver.GetStateOffsetForEvent(UnityEngine.InputSystem.InputControl control, UnityEngine.InputSystem.LowLevel.InputEventPtr eventPtr, ref System.UInt32 offset)

Disassembly:
	0x0378057C LDR X2, [X31 + 0x530]
	0x03780580 STR X0, [X31 + 0xC0]
	0x03780584 MOV X0, X19
	0x03780588 MOV X3, X19
	0x0378058C BL 0x378E574
	0x03780590 LDR X1, [X31 + 0x528]
	0x03780594 LDR X2, [X31 + 0x530]
	0x03780598 STR X0, [X31 + 0xB8]
	0x0378059C MOV X0, X19
	0x037805A0 MOV X3, X19
	0x037805A4 BL 0x378E758
	0x037805A8 LDR X1, [X31 + 0x528]
	0x037805AC LDR X2, [X31 + 0x530]
	0x037805B0 STR X0, [X31 + 0xB0]
	0x037805B4 MOV X0, X19
	0x037805B8 MOV X3, X19
	0x037805BC BL 0x378E93C
	0x037805C0 LDR X1, [X31 + 0x528]
	0x037805C4 LDR X2, [X31 + 0x530]
	0x037805C8 STR X0, [X31 + 0xA8]
	0x037805CC MOV X0, X19
	0x037805D0 MOV X3, X19
	0x037805D4 BL 0x378EB20
	0x037805D8 LDR X1, [X31 + 0x528]
	0x037805DC LDR X2, [X31 + 0x530]
	0x037805E0 STR X0, [X31 + 0x30]
	0x037805E4 MOV X0, X19
	0x037805E8 MOV X3, X19
	0x037805EC BL 0x378ED04
	0x037805F0 LDR X1, [X31 + 0x528]
	0x037805F4 LDR X2, [X31 + 0x530]
	0x037805F8 STR X0, [X31 + 0x38]
	0x037805FC MOV X0, X19
	0x03780600 MOV X3, X19
	0x03780604 BL 0x378EEE8
	0x03780608 LDR X1, [X31 + 0x528]
	0x0378060C LDR X2, [X31 + 0x530]
	0x03780610 STR X0, [X31 + 0x40]
	0x03780614 MOV X0, X19
	0x03780618 MOV X3, X19
	0x0378061C BL 0x378F0CC
	0x03780620 LDR X1, [X31 + 0x528]
	0x03780624 LDR X2, [X31 + 0x530]
	0x03780628 STR X0, [X31 + 0x48]
	0x0378062C MOV X0, X19
	0x03780630 MOV X3, X19
	0x03780634 BL 0x378F29C
	0x03780638 LDR X1, [X31 + 0x528]
	0x0378063C LDR X2, [X31 + 0x530]
	0x03780640 STR X0, [X31 + 0x50]
	0x03780644 MOV X0, X19
	0x03780648 MOV X3, X19
	0x0378064C BL 0x378F46C
	0x03780650 LDR X1, [X31 + 0x528]
	0x03780654 LDR X2, [X31 + 0x530]
	0x03780658 STR X0, [X31 + 0x58]
	0x0378065C MOV X0, X19
	0x03780660 MOV X3, X19
	0x03780664 BL 0x378F63C
	0x03780668 LDR X1, [X31 + 0x528]
	0x0378066C LDR X2, [X31 + 0x530]
	0x03780670 STR X0, [X31 + 0x60]
	0x03780674 MOV X0, X19
	0x03780678 MOV X3, X19
	0x0378067C BL 0x378F80C
	0x03780680 LDR X1, [X31 + 0x508]
	0x03780684 LDR X2, [X31 + 0x510]
	0x03780688 STR X0, [X31 + 0x28]
	0x0378068C MOV X0, X19
	0x03780690 MOV X3, X19
	0x03780694 BL 0x378F9DC
	0x03780698 STR X0, [X31 + 0x8]
	0x0378069C ADRP X8, 0x9C6000
	0x037806A0 LDR X8, [X8 + 0xAD0]
	0x037806A4 ADD X0, X31, 0x4F8
	0x037806A8 MOV X2, X31
	0x037806AC STR X31, [X31 + 0x500]
	0x037806B0 LDR X1, [X8]
	0x037806B4 STR X31, [X31 + 0x4F8]
	0x037806B8 BL 0x3757420
	0x037806BC LDR X2, [X31 + 0x4F8]
	0x037806C0 LDR X3, [X31 + 0x500]
	0x037806C4 ADD X0, X31, 0x548
	0x037806C8 MOV W1, W31
	0x037806CC MOV X4, X27
	0x037806D0 MOV X5, X31
	0x037806D4 BL 0x377F758
	0x037806D8 ADRP X8, 0x9B7000
	0x037806DC LDR X8, [X8 + 0xB08]
	0x037806E0 ADD X0, X31, 0x4E8
	0x037806E4 MOV X2, X31
	0x037806E8 STR X31, [X31 + 0x4F0]
	0x037806EC LDR X1, [X8]
	0x037806F0 STR X31, [X31 + 0x4E8]
	0x037806F4 BL 0x3757420
	0x037806F8 LDR X2, [X31 + 0x4E8]
	0x037806FC LDR X3, [X31 + 0x4F0]
	0x03780700 ADD X0, X31, 0x548
	0x03780704 MOVZ W1, 0x1
	0x03780708 MOV X4, X27
	0x0378070C MOV X5, X31
	0x03780710 STR X27, [X31 + 0x1F8]
	0x03780714 BL 0x377F758
	0x03780718 ADRP X8, 0x9C6000
	0x0378071C LDR X8, [X8 + 0xAB8]
	0x03780720 ADD X0, X31, 0x4D8
	0x03780724 MOV X2, X31
	0x03780728 STR X31, [X31 + 0x4E0]
	0x0378072C LDR X1, [X8]
	0x03780730 STR X31, [X31 + 0x4D8]
	0x03780734 BL 0x3757420
	0x03780738 LDR X2, [X31 + 0x4D8]
	0x0378073C LDR X3, [X31 + 0x4E0]
	0x03780740 LDR X4, [X31 + 0x390]
	0x03780744 ADD X0, X31, 0x548
	0x03780748 MOVZ W1, 0x2
	0x0378074C MOV X5, X31
	0x03780750 BL 0x377F758
	0x03780754 LDR X1, [X28]
	0x03780758 ADD X0, X31, 0x4C8
	0x0378075C MOV X2, X31
	0x03780760 STR X31, [X31 + 0x4D0]
	0x03780764 STR X31, [X31 + 0x4C8]
	0x03780768 BL 0x3757420
	0x0378076C LDR X2, [X31 + 0x4C8]
	0x03780770 LDR X3, [X31 + 0x4D0]
	0x03780774 ADD X0, X31, 0x548
	0x03780778 MOVZ W1, 0x3
	0x0378077C MOV X4, X26
	0x03780780 MOV X5, X31
	0x03780784 STR X26, [X31 + 0x230]
	0x03780788 BL 0x377F758
	0x0378078C LDR X1, [X28]
	0x03780790 ADD X0, X31, 0x4B8
	0x03780794 MOV X2, X31
	0x03780798 STR X31, [X31 + 0x4C0]
	0x0378079C STR X31, [X31 + 0x4B8]
	0x037807A0 BL 0x3757420
	0x037807A4 LDR X2, [X31 + 0x4B8]
	0x037807A8 LDR X3, [X31 + 0x4C0]
	0x037807AC ADD X0, X31, 0x548
	0x037807B0 MOVZ W1, 0x4
	0x037807B4 MOV X4, X24
	0x037807B8 MOV X5, X31
	0x037807BC STR X24, [X31 + 0x220]
	0x037807C0 BL 0x377F758
	0x037807C4 LDR X1, [X28]
	0x037807C8 ADD X0, X31, 0x4A8
	0x037807CC MOV X2, X31
	0x037807D0 STR X31, [X31 + 0x4B0]
	0x037807D4 STR X31, [X31 + 0x4A8]
	0x037807D8 BL 0x3757420
	0x037807DC LDR X2, [X31 + 0x4A8]
	0x037807E0 LDR X3, [X31 + 0x4B0]
	0x037807E4 ADD X0, X31, 0x548
	0x037807E8 MOVZ W1, 0x5
	0x037807EC MOV X4, X20
	0x037807F0 MOV X5, X31
	0x037807F4 STR X20, [X31 + 0x18]
	0x037807F8 BL 0x377F758
	0x037807FC LDR X1, [X28]
	0x03780800 ADD X0, X31, 0x498
	0x03780804 MOV X2, X31
	0x03780808 STR X31, [X31 + 0x4A0]
	0x0378080C STR X31, [X31 + 0x498]
	0x03780810 BL 0x3757420
	0x03780814 LDR X2, [X31 + 0x498]
	0x03780818 LDR X3, [X31 + 0x4A0]
	0x0378081C ADD X0, X31, 0x548
	0x03780820 MOVZ W1, 0x6
	0x03780824 MOV X4, X23
	0x03780828 MOV X5, X31
	0x0378082C STR X23, [X31 + 0x218]
	0x03780830 BL 0x377F758
	0x03780834 LDR X1, [X28]
	0x03780838 ADD X0, X31, 0x488
	0x0378083C MOV X2, X31
	0x03780840 STR X31, [X31 + 0x490]
	0x03780844 STR X31, [X31 + 0x488]
	0x03780848 BL 0x3757420
	0x0378084C LDR X2, [X31 + 0x488]
	0x03780850 LDR X3, [X31 + 0x490]
	0x03780854 ADD X0, X31, 0x548
	0x03780858 MOVZ W1, 0x7
	0x0378085C MOV X4, X21
	0x03780860 MOV X5, X31
	0x03780864 STR X21, [X31 + 0x210]
	0x03780868 BL 0x377F758
	0x0378086C LDR X1, [X28]
	0x03780870 ADD X0, X31, 0x478
	0x03780874 MOV X2, X31
	0x03780878 STR X31, [X31 + 0x480]
	0x0378087C STR X31, [X31 + 0x478]
	0x03780880 BL 0x3757420
	0x03780884 LDR X2, [X31 + 0x478]
	0x03780888 LDR X3, [X31 + 0x480]
	0x0378088C ADD X0, X31, 0x548
	0x03780890 MOVZ W1, 0x8
	0x03780894 MOV X4, X29
	0x03780898 MOV X5, X31
	0x0378089C STR X29, [X31 + 0x10]
	0x037808A0 BL 0x377F758
	0x037808A4 LDR X1, [X28]
	0x037808A8 ADD X0, X31, 0x468
	0x037808AC MOV X2, X31
	0x037808B0 STR X31, [X31 + 0x470]
	0x037808B4 STR X31, [X31 + 0x468]
	0x037808B8 BL 0x3757420
	0x037808BC LDR X2, [X31 + 0x468]
	0x037808C0 LDR X3, [X31 + 0x470]
	0x037808C4 ADD X0, X31, 0x548
	0x037808C8 MOVZ W1, 0x9
	0x037808CC MOV X4, X22
	0x037808D0 MOV X5, X31
	0x037808D4 STR X22, [X31 + 0x208]
	0x037808D8 BL 0x377F758
	0x037808DC LDR X1, [X28]
	0x037808E0 ADD X0, X31, 0x458
	0x037808E4 MOV X2, X31
	0x037808E8 STR X31, [X31 + 0x460]
	0x037808EC STR X31, [X31 + 0x458]
	0x037808F0 BL 0x3757420
	0x037808F4 LDR X2, [X31 + 0x458]
	0x037808F8 LDR X3, [X31 + 0x460]
	0x037808FC ADD X0, X31, 0x548
	0x03780900 MOVZ W1, 0xA
	0x03780904 MOV X4, X25
	0x03780908 MOV X5, X31
	0x0378090C STR X25, [X31 + 0x200]
	0x03780910 BL 0x377F758
	0x03780914 LDR X1, [X28]
	0x03780918 ADD X0, X31, 0x448
	0x0378091C MOV X2, X31

ISIL:
	001 Move W0, W31
	002 Return X0
	003 Subtract X31, X31, 80
	004 Move [X31+48], X30
	005 Move [X31+56], X21
	006 Move [X31+64], X20
	007 Move [X31+72], X19
	008 Move X20, 0xC61000
	009 Move W8, [X20+3987]
	010 Move X19, X0
	011 Compare W8, 0
	012 JumpIfNotEqual {27}
	013 Move X0, 0x9A0000
	014 Move X0, [X0+72]
	015 Call 0x1C17CF4
	016 Move X0, 0x9A0000
	017 Move X0, [X0+80]
	018 Call 0x1C17CF4
	019 Move X0, 0x9A0000
	020 Move X0, [X0+88]
	021 Call 0x1C17CF4
	022 Move X0, 0x9A0000
	023 Move X0, [X0+96]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X20+3987], W8
	027 Move [X31+24], X31
	028 Move [X31+32], X31
	029 Move [X31+40], X31
	030 Move [X31+8], X31
	031 Move [X31+16], X31
	032 Move W8, [X19+152]
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X0, X19
	035 Call InputControl.get_children, X0
	036 Move X8, 0x9A0000
	037 Move X8, [X8+96]
	038 Move [X31+8], X0
	039 Move [X31+16], X1
	040 Add X0, X31, 8
	041 Move X9, [X8]
	042 Add X8, X31, 24
	043 Move X1, X9
	044 Call ReadOnlyArray`1<Object>.GetEnumerator, X0
	045 Move X20, 0x9A0000
	046 Move X21, 0x9A0000
	047 Move X20, [X20+80]
	048 Move X21, [X21+88]
	049 Move X1, [X20]
	050 Add X0, X31, 24
	051 Call Enumerator<Object>.MoveNext, X0
	052 Move TEMP, X0
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfNotEqual {63}
	056 Move X1, [X21]
	057 Add X0, X31, 24
	058 Call Enumerator<Object>.get_Current, X0
	059 Compare X0, 0
	060 JumpIfEqual {99}
	061 Move X1, X31
	062 Call 0x3780584
	063 Move X8, 0x9A0000
	064 Move X8, [X8+72]
	065 Add X0, X31, 24
	066 Move X1, [X8]
	067 Call Enumerator<Object>.Dispose, X0
	068 Move X20, 0xC61000
	069 Move W8, [X20+3988]
	070 Compare W8, 0
	071 JumpIfNotEqual {77}
	072 Move X0, 0x99F000
	073 Move X0, [X0+4064]
	074 Call 0x1C17CF4
	075 Move W8, 1
	076 Move [X20+3988], W8
	077 Move X8, 0x99F000
	078 Move X8, [X8+4064]
	079 Move X8, [X8]
	080 Move X8, [X8+184]
	081 Move W8, [X8]
	082 Compare W8, 0
	083 JumpIfEqual {89}
	084 Move X8, [X19]
	085 Move X0, X19
	086 Move X9, [X8+552]
	087 Move X1, [X8+560]
	088 NotImplemented "Instruction BLR not yet implemented."
	089 Compare X19, 0
	090 JumpIfEqual {100}
	091 Move W0, W31
	092 Move [X19+216], W0
	093 Move X20, [X31+64]
	094 Move X19, [X31+72]
	095 Move X30, [X31+48]
	096 Move X21, [X31+56]
	097 Add X31, X31, 80
	098 Return X0
	099 Call 0x1C17F20
	100 Call 0x1C17F20
	101 Move X20, X0
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Move X0, X20
	104 Call 0x3EB2AD0
	105 Move X21, [X0]
	106 Call 0x3EB2AE0
	107 Move X8, 0x9A0000
	108 Move X8, [X8+72]
	109 Add X0, X31, 24
	110 Move X1, [X8]
	111 Call Enumerator<Object>.Dispose, X0
	112 Compare X21, 0
	113 JumpIfEqual {68}
	114 Move X0, X21
	115 Call 0x1C17F18
	116 Move X21, X31
	117 Move X20, X0
	118 Move X8, 0x9A0000
	119 Move X8, [X8+72]
	120 Move X1, [X8]
	121 Add X0, X31, 24
	122 Call Enumerator<Object>.Dispose, X0
	123 Compare X21, 0
	124 JumpIfNotEqual {127}
	125 Move X0, X20
	126 Call 0x1D2D690
	127 Move X0, X21
	128 Call 0x1C17F18
	129 Call 0x1991590
	130 Move [X31-48], X30
	131 Move [X31-40], X23
	132 Move [X31+16], X22
	133 Move [X31+24], X21
	134 Move [X31+32], X20
	135 Move [X31+40], X19
	136 Move X8, [X0]
	137 Compare X8, 0
	138 JumpIfEqual {177}
	139 Move X8, [X8+320]
	140 Compare X8, 0
	141 JumpIfEqual {177}
	142 Move W9, [X8+24]
	143 Move W21, W1
	144 NotImplemented "Instruction CMP not yet implemented."
	145 Move X22, W21
	146 Add X8, X8, X22
	147 Move [X8+32], X2
	148 Move [X8+40], X3
	149 Move X8, [X0]
	150 Move X20, X0
	151 Compare X8, 0
	152 JumpIfEqual {177}
	153 Move X23, [X8+328]
	154 Compare X23, 0
	155 JumpIfEqual {177}
	156 Move X19, X4
	157 Compare X4, 0
	158 JumpIfEqual {165}
	159 Move X8, [X23]
	160 Move X0, X19
	161 Move X1, [X8+64]
	162 Call 0x1C17E00
	163 Compare X0, 0
	164 JumpIfEqual {179}
	165 Move W8, [X23+24]
	166 NotImplemented "Instruction CMP not yet implemented."
	167 Add X8, X23, X22
	168 Move [X8+32], X19
	169 Move X0, [X20]
	170 Move X20, [X31+32]
	171 Move X19, [X31+40]
	172 Move X22, [X31+16]
	173 Move X21, [X31+24]
	174 Move X30, [X31+48]
	175 Move X23, [X31+56]
	176 Return X0
	177 Call 0x1C17F20
	178 Call 0x1C17F28
	179 Call 0x1C17F44
	180 Move X1, X31
	181 Call 0x1C17DEC
	182 Move [X31-48], X30
	183 Move [X31-40], X23
	184 Move [X31+16], X22
	185 Move [X31+24], X21
	186 Move [X31+32], X20
	187 Move [X31+40], X19
	188 Move X22, 0xC61000
	189 Move W8, [X22+3990]
	190 Move X19, X2
	191 Move X21, X1
	192 Move X20, X0
	193 Compare W8, 0
	194 JumpIfNotEqual {203}
	195 Move X0, 0x9C7000
	196 Move X0, [X0+3448]
	197 Call 0x1C17CF4
	198 Move X0, 0x9C7000
	199 Move X0, [X0+3456]
	200 Call 0x1C17CF4
	201 Move W8, 1
	202 Move [X22+3990], W8
	203 Compare X21, 0
	204 JumpIfEqual {258}
	205 NotImplemented "Instruction LDRSW not yet implemented."
	206 Move X10, 0x9C7000
	207 Move TEMP, 0xDB6C
	208 Not TEMP
	209 Move X9, TEMP
	210 Move X23, [X20]
	211 Move X10, [X10+3448]
	212 NotImplemented "Instruction MOVK not yet implemented."
	213 Multiply X9, X8, X9
	214 Move X9, X9
	215 ShiftRight X9, 32
	216 And X9, X9, 0x7FFFFFFF
	217 Move X0, [X10]
	218 Add W8, W9, W8
	219 NotImplemented "Instruction SBFM not yet implemented."
	220 Add W22, W9, W8
	221 Move W1, W22
	222 Call 0x1C17D6C
	223 Compare X23, 0
	224 JumpIfEqual {258}
	225 Move [X23+352], X0
	226 Move W8, [X21+24]
	227 Move X14, [X20]
	228 Add X9, X21, 32
	229 NotImplemented "Instruction CMP not yet implemented."
	230 NotImplemented "Instruction CSEL not yet implemented."
	231 Compare X14, 0
	232 JumpIfEqual {258}
	233 Move X11, X31
	234 Move X9, X31
	235 NotImplemented "Instruction BIC not yet implemented."
	236 Move W12, 32
	237 Move X13, 7
	238 NotImplemented "Instruction CMP not yet implemented."
	239 Move X14, [X14+352]
	240 Compare X14, 0
	241 JumpIfEqual {258}
	242 Move W15, [X14+24]
	243 NotImplemented "Instruction CMP not yet implemented."
	244 Add X15, X8, X11
	245 NotImplemented "Instruction LDRH not yet implemented."
	246 Move W17, [X15+6]
	247 Move W15, [X15]
	248 Add X14, X14, X12
	249 NotImplemented "Instruction STRH not yet implemented."
	250 Move [X14+6], W17
	251 Move [X14], W15
	252 Move X14, [X20]
	253 Add X11, X11, X13
	254 Add X12, X12, 7
	255 Add X9, X9, 1
	256 Compare X14, 0
	257 JumpIfNotEqual {238}
	258 Call 0x1C17F20
	259 Move [X14+360], X19
	260 Move X0, [X20]
	261 Move X20, [X31+32]
	262 Move X19, [X31+40]
	263 Move X22, [X31+16]
	264 Move X21, [X31+24]
	265 Move X30, [X31+48]
	266 Move X23, [X31+56]
	267 Return X0
	268 Call 0x1C17F28

Method: System.Void .ctor()

Disassembly:
	0x0377FF34 LDR X2, [X31 + 0x530]
	0x0377FF38 STR X0, [X31 + 0x2D8]
	0x0377FF3C MOV X0, X19
	0x0377FF40 MOV X3, X19
	0x0377FF44 BL 0x37866AC
	0x0377FF48 LDR X1, [X31 + 0x528]
	0x0377FF4C LDR X2, [X31 + 0x530]
	0x0377FF50 STR X0, [X31 + 0x2D0]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call InputControl..ctor, X0
	005 Move TEMP, 0
	006 Not TEMP
	007 Move W8, TEMP
	008 Move [X19+224], X31
	009 Move [X19+232], W8
	010 Move X30, [X31+16]
	011 Move X19, [X31+24]
	012 Return 

