Type: UnityEngine.InputSystem.PlayerInput/ActionEvent

Method: System.String get_actionId()

Disassembly:
	0x037D9644 MOV X20, X0
	0x037D9648 TBNZ X8, 0x0, 0x37D9660

ISIL:
	001 Move X0, [X0+48]
	002 Return X0

Method: System.String get_actionName()

Disassembly:
	0x037D964C ADRP X0, 0x96F000
	0x037D9650 LDR X0, [X0 + 0x9B0]

ISIL:
	001 Move X0, [X0+56]
	002 Return X0

Method: System.Void .ctor()

Disassembly:
	0x037D9654 BL 0x1C16CF4
	0x037D9658 MOVZ W8, 0x1
	0x037D965C STRB W8, [X21 + 0x287]
	0x037D9660 CBZ X19, 0x37D9684
	0x037D9664 ADRP X8, 0x96F000
	0x037D9668 LDR X8, [X8 + 0x9B0]
	0x037D966C ADD X0, X20, 0x90
	0x037D9670 MOV X1, X19
	0x037D9674 LDP X20, X19, [X31 + 0x10]
	0x037D9678 LDR X2, [X8]
	0x037D967C LDP X30, X21, [X31], #0x20
	0x037D9680 B 0x28F14E0
	0x037D9684 ADRP X0, 0x91F000
	0x037D9688 LDR X0, [X0 + 0x528]
	0x037D968C BL 0x1C16D08
	0x037D9690 BL 0x1C16F10
	0x037D9694 MOV X19, X0
	0x037D9698 ADRP X0, 0x924000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xC09000
	006 Move X21, 0x970000
	007 Move W8, [X20+637]
	008 Move X21, [X21+3080]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x970000
	015 Move X0, [X0+3080]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+637], W8
	019 Move X1, [X21]
	020 Move X0, X19
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X30, [X31+32]
	024 Move X21, [X31+40]
	025 Call UnityEvent`1<CallbackContext>..ctor, X0
	026 Return 

Method: System.Void .ctor(UnityEngine.InputSystem.InputAction action)

Disassembly:
	0x037D969C LDR X0, [X0 + 0xEC8]
	0x037D96A0 BL 0x1C16D08
	0x037D96A4 MOV X1, X0
	0x037D96A8 MOV X0, X19
	0x037D96AC MOV X2, X31
	0x037D96B0 BL 0x330E100
	0x037D96B4 ADRP X0, 0x96F000
	0x037D96B8 LDR X0, [X0 + 0xC88]
	0x037D96BC BL 0x1C16D08
	0x037D96C0 MOV X1, X0
	0x037D96C4 MOV X0, X19
	0x037D96C8 BL 0x1C16DEC
	0x037D96CC STP X30, X21, [X31 - 0x20]!
	0x037D96D0 STP X20, X19, [X31 + 0x10]
	0x037D96D4 ADRP X21, 0xC08000
	0x037D96D8 LDRB W8, [X21 + 0x288]
	0x037D96DC MOV X19, X1
	0x037D96E0 MOV X20, X0
	0x037D96E4 TBNZ X8, 0x0, 0x37D96FC
	0x037D96E8 ADRP X0, 0x96F000
	0x037D96EC LDR X0, [X0 + 0x9C0]
	0x037D96F0 BL 0x1C16CF4
	0x037D96F4 MOVZ W8, 0x1
	0x037D96F8 STRB W8, [X21 + 0x288]
	0x037D96FC CBZ X19, 0x37D9720
	0x037D9700 ADRP X8, 0x96F000
	0x037D9704 LDR X8, [X8 + 0x9C0]
	0x037D9708 ADD X0, X20, 0x90
	0x037D970C MOV X1, X19
	0x037D9710 LDP X20, X19, [X31 + 0x10]
	0x037D9714 LDR X2, [X8]
	0x037D9718 LDP X30, X21, [X31], #0x20
	0x037D971C B 0x28F1650
	0x037D9720 ADRP X0, 0x91F000
	0x037D9724 LDR X0, [X0 + 0x528]
	0x037D9728 BL 0x1C16D08
	0x037D972C BL 0x1C16F10
	0x037D9730 MOV X19, X0
	0x037D9734 ADRP X0, 0x924000
	0x037D9738 LDR X0, [X0 + 0xEC8]
	0x037D973C BL 0x1C16D08
	0x037D9740 MOV X1, X0
	0x037D9744 MOV X0, X19
	0x037D9748 MOV X2, X31
	0x037D974C BL 0x330E100
	0x037D9750 ADRP X0, 0x96F000
	0x037D9754 LDR X0, [X0 + 0xC90]
	0x037D9758 BL 0x1C16D08
	0x037D975C MOV X1, X0
	0x037D9760 MOV X0, X19
	0x037D9764 BL 0x1C16DEC
	0x037D9768 STP X30, X21, [X31 - 0x20]!
	0x037D976C STP X20, X19, [X31 + 0x10]
	0x037D9770 ADRP X21, 0xC08000
	0x037D9774 LDRB W8, [X21 + 0x289]
	0x037D9778 MOV X19, X1
	0x037D977C MOV X20, X0
	0x037D9780 TBNZ X8, 0x0, 0x37D9798
	0x037D9784 ADRP X0, 0x96F000
	0x037D9788 LDR X0, [X0 + 0x9B0]
	0x037D978C BL 0x1C16CF4
	0x037D9790 MOVZ W8, 0x1
	0x037D9794 STRB W8, [X21 + 0x289]
	0x037D9798 CBZ X19, 0x37D97BC
	0x037D979C ADRP X8, 0x96F000
	0x037D97A0 LDR X8, [X8 + 0x9B0]
	0x037D97A4 ADD X0, X20, 0xE0
	0x037D97A8 MOV X1, X19
	0x037D97AC LDP X20, X19, [X31 + 0x10]
	0x037D97B0 LDR X2, [X8]
	0x037D97B4 LDP X30, X21, [X31], #0x20
	0x037D97B8 B 0x28F14E0
	0x037D97BC ADRP X0, 0x91F000
	0x037D97C0 LDR X0, [X0 + 0x528]
	0x037D97C4 BL 0x1C16D08
	0x037D97C8 BL 0x1C16F10
	0x037D97CC MOV X19, X0
	0x037D97D0 ADRP X0, 0x924000
	0x037D97D4 LDR X0, [X0 + 0xEC8]
	0x037D97D8 BL 0x1C16D08
	0x037D97DC MOV X1, X0
	0x037D97E0 MOV X0, X19
	0x037D97E4 MOV X2, X31
	0x037D97E8 BL 0x330E100
	0x037D97EC ADRP X0, 0x96F000
	0x037D97F0 LDR X0, [X0 + 0xC98]
	0x037D97F4 BL 0x1C16D08
	0x037D97F8 MOV X1, X0
	0x037D97FC MOV X0, X19
	0x037D9800 BL 0x1C16DEC
	0x037D9804 STP X30, X21, [X31 - 0x20]!
	0x037D9808 STP X20, X19, [X31 + 0x10]
	0x037D980C ADRP X21, 0xC08000
	0x037D9810 LDRB W8, [X21 + 0x28A]
	0x037D9814 MOV X19, X1
	0x037D9818 MOV X20, X0
	0x037D981C TBNZ X8, 0x0, 0x37D9834
	0x037D9820 ADRP X0, 0x96F000
	0x037D9824 LDR X0, [X0 + 0x9C0]
	0x037D9828 BL 0x1C16CF4
	0x037D982C MOVZ W8, 0x1
	0x037D9830 STRB W8, [X21 + 0x28A]
	0x037D9834 CBZ X19, 0x37D9858
	0x037D9838 ADRP X8, 0x96F000
	0x037D983C LDR X8, [X8 + 0x9C0]
	0x037D9840 ADD X0, X20, 0xE0
	0x037D9844 MOV X1, X19
	0x037D9848 LDP X20, X19, [X31 + 0x10]
	0x037D984C LDR X2, [X8]
	0x037D9850 LDP X30, X21, [X31], #0x20
	0x037D9854 B 0x28F1650
	0x037D9858 ADRP X0, 0x91F000
	0x037D985C LDR X0, [X0 + 0x528]
	0x037D9860 BL 0x1C16D08
	0x037D9864 BL 0x1C16F10

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+32], X22
	004 Move [X31+40], X21
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move X21, 0xC09000
	008 Move X22, 0x970000
	009 Move W8, [X21+638]
	010 Move X22, [X22+3080]
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {28}
	017 Move X0, 0x91B000
	018 Move X0, [X0+1432]
	019 Call 0x1C17CF4
	020 Move X0, 0x970000
	021 Move X0, [X0+3080]
	022 Call 0x1C17CF4
	023 Move X0, 0x91C000
	024 Move X0, [X0+3784]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X21+638], W8
	028 Move X1, [X22]
	029 Move X0, X20
	030 Call UnityEvent`1<CallbackContext>..ctor, X0
	031 Compare X19, 0
	032 JumpIfEqual {92}
	033 Move X0, X19
	034 Move X1, X31
	035 Call InputAction.get_isSingletonAction, X0
	036 Move TEMP, X0
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfEqual {110}
	040 Move X0, X19
	041 Move X1, X31
	042 Call InputAction.get_actionMap, X0
	043 Compare X0, 0
	044 JumpIfEqual {91}
	045 Move X8, 0x91B000
	046 Move X8, [X8+1432]
	047 Move X21, [X0+32]
	048 Move X8, [X8]
	049 Move W9, [X8+224]
	050 Compare W9, 0
	051 JumpIfNotEqual {54}
	052 Move X0, X8
	053 Call 0x1C17DFC
	054 Move X0, X21
	055 Move X1, X31
	056 Move X2, X31
	057 Call Object.op_Equality, X0, X1
	058 Move TEMP, X0
	059 And TEMP, TEMP, 1
	060 Compare TEMP, 1
	061 JumpIfEqual {112}
	062 Move X0, X19
	063 Move X1, X31
	064 Call InputAction.get_id, X0
	065 Move [X31], X0
	066 Move [X31+8], X1
	067 Add X0, X31, 0
	068 Move X1, X31
	069 Call Guid.ToString, X0
	070 Move [X20+48], X0
	071 Move X0, X19
	072 Move X1, X31
	073 Call InputAction.get_actionMap, X0
	074 Compare X0, 0
	075 JumpIfEqual {91}
	076 Move X8, 0x91C000
	077 Move X8, [X8+3784]
	078 Move X0, [X0+16]
	079 Move X2, [X19+16]
	080 Move X3, X31
	081 Move X1, [X8]
	082 Call String.Concat, X0, X1, X2
	083 Move [X20+56], X0
	084 Move X20, [X31+48]
	085 Move X19, [X31+56]
	086 Move X22, [X31+32]
	087 Move X21, [X31+40]
	088 Move X30, [X31+16]
	089 Add X31, X31, 64
	090 Return 
	091 Call 0x1C17F20
	092 Move X0, 0x920000
	093 Move X0, [X0+1320]
	094 Call 0x1C17D08
	095 Call 0x1C17F10
	096 Move X19, X0
	097 Move X0, 0x943000
	098 Move X0, [X0+3064]
	099 Call 0x1C17D08
	100 Move X1, X0
	101 Move X0, X19
	102 Move X2, X31
	103 Call ArgumentNullException..ctor, X0, X1
	104 Move X0, 0x970000
	105 Move X0, [X0+3088]
	106 Call 0x1C17D08
	107 Move X1, X0
	108 Move X0, X19
	109 Call 0x1C17DEC
	110 Move X0, 0x970000
	111 Move X0, [X0+3096]
	112 Move X0, 0x970000
	113 Move X0, [X0+3104]
	114 Call 0x1C17D08
	115 Move X1, X19
	116 Move X2, X31
	117 Call String.Format, X0, X1
	118 Move X19, X0
	119 Move X0, 0x923000
	120 Move X0, [X0+1400]
	121 Call 0x1C17D08
	122 Call 0x1C17F10
	123 Move X1, X19
	124 Move X2, X31
	125 Move X20, X0
	126 Call ArgumentException..ctor, X0, X1
	127 Move X0, 0x970000
	128 Move X0, [X0+3088]
	129 Call 0x1C17D08
	130 Move X1, X0
	131 Move X0, X20
	132 Call 0x1C17DEC

Method: System.Void .ctor(System.Guid actionGUID, System.String name = null)

Disassembly:
	0x037D9868 MOV X19, X0
	0x037D986C ADRP X0, 0x924000
	0x037D9870 LDR X0, [X0 + 0xEC8]
	0x037D9874 BL 0x1C16D08
	0x037D9878 MOV X1, X0
	0x037D987C MOV X0, X19
	0x037D9880 MOV X2, X31
	0x037D9884 BL 0x330E100
	0x037D9888 ADRP X0, 0x96F000
	0x037D988C LDR X0, [X0 + 0xCA0]
	0x037D9890 BL 0x1C16D08
	0x037D9894 MOV X1, X0
	0x037D9898 MOV X0, X19
	0x037D989C BL 0x1C16DEC
	0x037D98A0 LDR X0, [X0 + 0x58]
	0x037D98A4 RET
	0x037D98A8 STR X1, [X0 + 0x58]
	0x037D98AC RET
	0x037D98B0 STR X30, [X31 - 0x20]!
	0x037D98B4 STP X20, X19, [X31 + 0x10]
	0x037D98B8 ADRP X19, 0xC08000
	0x037D98BC ADRP X20, 0x96F000
	0x037D98C0 LDRB W8, [X19 + 0x28B]
	0x037D98C4 LDR X20, [X20 + 0x9F8]
	0x037D98C8 TBNZ X8, 0x0, 0x37D98E0
	0x037D98CC ADRP X0, 0x96F000
	0x037D98D0 LDR X0, [X0 + 0x9F8]
	0x037D98D4 BL 0x1C16CF4
	0x037D98D8 MOVZ W8, 0x1

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+8], X2
	003 Move [X31+16], X30
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0xC09000
	009 Move [X31], X1
	010 Move X22, 0x970000
	011 Move W8, [X21+639]
	012 Move X22, [X22+3080]
	013 Move X19, X3
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0x970000
	020 Move X0, [X0+3080]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+639], W8
	024 Move X1, [X22]
	025 Move X0, X20
	026 Call UnityEvent`1<CallbackContext>..ctor, X0
	027 Add X0, X31, 0
	028 Move X1, X31
	029 Call Guid.ToString, X0
	030 Move [X20+48], X0
	031 Move [X20+56], X19
	032 Move X20, [X31+48]
	033 Move X19, [X31+56]
	034 Move X22, [X31+32]
	035 Move X21, [X31+40]
	036 Move X30, [X31+16]
	037 Add X31, X31, 64
	038 Return 

