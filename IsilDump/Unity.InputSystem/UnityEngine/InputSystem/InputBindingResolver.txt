Type: UnityEngine.InputSystem.InputBindingResolver

Method: System.Int32 get_totalMapCount()

Disassembly:
	0x03754BB0 MOVZ W2, 0x58
	0x03754BB4 MOV X1, X28

ISIL:
	001 Move W0, [X0+40]
	002 Return X0

Method: System.Int32 get_totalActionCount()

Disassembly:
	0x03754BB8 BL 0x3EB1B30
	0x03754BBC ADRP X0, 0x9CA000

ISIL:
	001 Move W0, [X0+44]
	002 Return X0

Method: System.Int32 get_totalBindingCount()

Disassembly:
	0x03754BC0 LDR X0, [X0 + 0x4E0]
	0x03754BC4 BL 0x1C16D08

ISIL:
	001 Move W0, [X0+52]
	002 Return X0

Method: System.Int32 get_totalControlCount()

Disassembly:
	0x03754BC8 ADD X1, X31, 0x180
	0x03754BCC BL 0x1C16E04

ISIL:
	001 Move W0, [X0+56]
	002 Return X0

Method: System.Void Dispose()

Disassembly:
	0x03754BD0 MOV X22, X0
	0x03754BD4 ADRP X0, 0x9F1000
	0x03754BD8 LDR X0, [X0 + 0xE38]
	0x03754BDC BL 0x1C16D08
	0x03754BE0 MOV X1, X21
	0x03754BE4 MOV X2, X22
	0x03754BE8 MOV X3, X24
	0x03754BEC MOV X4, X31
	0x03754BF0 BL 0x3227C18
	0x03754BF4 MOV X21, X0
	0x03754BF8 ADRP X0, 0x99F000
	0x03754BFC LDR X0, [X0 + 0xA28]
	0x03754C00 BL 0x1C16D08
	0x03754C04 LDR W8, [X0 + 0xE0]
	0x03754C08 CBNZ W8, 0x3754C10
	0x03754C0C BL 0x1C16DFC
	0x03754C10 MOV X0, X21
	0x03754C14 MOV X1, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, X0
	005 Move X19, X0
	006 Add X20, X20, 32
	007 Move X0, [X20]
	008 Compare X0, 0
	009 JumpIfEqual {22}
	010 Move W1, 4
	011 Move X2, X31
	012 Call UnsafeUtility.Free, X0, X1
	013 NotImplemented "Instruction MOVI not yet implemented."
	014 Move [X19+152], X31
	015 Move [X20+64], X31
	016 Move [X20+32], V0
	017 Move [X20+40], V0
	018 Move [X20], V0
	019 Move [X20+8], V0
	020 Move [X19+112], V0
	021 Move [X19+120], V0
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X30, [X31+32]
	025 Return 

Method: System.Void StartWithPreviousResolve(UnityEngine.InputSystem.InputActionState state, System.Boolean isFullResolve)

Disassembly:
	0x03754C18 BL 0x3C0649C
	0x03754C1C MOV X0, X20
	0x03754C20 MOV X1, X31
	0x03754C24 BL 0x3C02C84
	0x03754C28 MOV X0, X20
	0x03754C2C MOV X1, X31
	0x03754C30 BL 0x375F2D0
	0x03754C34 STR W23, [X31 + 0x268]
	0x03754C38 TBZ X0, 0x0, 0x375484C
	0x03754C3C MOV X0, X20
	0x03754C40 BL 0x1C16F18
	0x03754C44 LDR X8, [X31 + 0xD0]
	0x03754C48 LDR W20, [X31 + 0x360]
	0x03754C4C LDR W9, [X31 + 0x420]
	0x03754C50 LDR W5, [X8 + 0x8]
	0x03754C54 LDR W8, [X8 + 0x38]
	0x03754C58 CMP W9, W5
	0x03754C5C ADD W4, W8, W20
	0x03754C60 B.NE 0x3754C90
	0x03754C64 LDR X10, [X31 + 0x28]
	0x03754C68 LDR W9, [X31 + 0x42C]
	0x03754C6C LDR X19, [X31 + 0xA0]
	0x03754C70 LDR W6, [X10]
	0x03754C74 CMP W9, W6
	0x03754C78 B.NE 0x3754C9C
	0x03754C7C LDR W10, [X31 + 0x428]
	0x03754C80 MOV W6, W9
	0x03754C84 CMP W10, W4
	0x03754C88 B.NE 0x3754C9C
	0x03754C8C B 0x3754D0C
	0x03754C90 LDR X8, [X31 + 0x28]
	0x03754C94 LDR X19, [X31 + 0xA0]
	0x03754C98 LDR W6, [X8]
	0x03754C9C LDR W1, [X31 + 0x418]
	0x03754CA0 LDR W2, [X31 + 0x41C]
	0x03754CA4 LDR W3, [X31 + 0x424]
	0x03754CA8 MOVI V0.2D, 0x0
	0x03754CAC STP V0, V0, [X31 + 0x2D0]
	0x03754CB0 STP V0, V0, [X31 + 0x2B0]
	0x03754CB4 STP V0, V0, [X31 + 0x290]
	0x03754CB8 STP V0, V0, [X31 + 0x270]
	0x03754CBC ADD X0, X31, 0x270
	0x03754CC0 BL 0x3751F74
	0x03754CC4 ADD X0, X31, 0x100
	0x03754CC8 ADD X1, X31, 0x410
	0x03754CCC MOVZ W2, 0x80
	0x03754CD0 BL 0x3EB1AC0
	0x03754CD4 ADD X0, X31, 0x270
	0x03754CD8 ADD X1, X31, 0x100
	0x03754CDC BL 0x375209C
	0x03754CE0 LDR X0, [X31 + 0x410]
	0x03754CE4 CBZ X0, 0x3754CF4
	0x03754CE8 MOVZ W1, 0x4
	0x03754CEC MOV X2, X31
	0x03754CF0 BL 0x3C00054
	0x03754CF4 ADD X0, X31, 0x410
	0x03754CF8 ADD X1, X31, 0x270
	0x03754CFC MOVZ W2, 0x80

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 NotImplemented "Instruction ORN not yet implemented."
	006 And W8, W8, 1
	007 Move [X0+280], W8
	008 Compare X1, 0
	009 JumpIfEqual {73}
	010 Move X21, X1
	011 Add X21, X21, 16
	012 Move X8, [X21]
	013 Move X20, X0
	014 Move X19, X1
	015 Move [X0+16], X8
	016 Move X0, [X21+16]
	017 Move [X20+160], X0
	018 Move X9, [X21+24]
	019 Move [X20+168], X9
	020 Move X9, [X21+32]
	021 Move [X20+176], X9
	022 Move X9, [X21+8]
	023 Move [X20+24], X9
	024 Move TEMP, X2
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfNotEqual {57}
	028 Compare X8, 0
	029 JumpIfEqual {36}
	030 Move W2, [X19+72]
	031 Move X0, X8
	032 Move W1, W31
	033 Move X3, X31
	034 Call Array.Clear, X0, X1, X2
	035 Move X0, [X20+160]
	036 Compare X0, 0
	037 JumpIfEqual {42}
	038 Move W2, [X19+80]
	039 Move W1, W31
	040 Move X3, X31
	041 Call Array.Clear, X0, X1, X2
	042 Move X0, [X20+168]
	043 Compare X0, 0
	044 JumpIfEqual {49}
	045 Move W2, [X19+56]
	046 Move W1, W31
	047 Move X3, X31
	048 Call Array.Clear, X0, X1, X2
	049 Move X0, [X20+176]
	050 Compare X0, 0
	051 JumpIfEqual {56}
	052 Move W2, [X19+92]
	053 Move W1, W31
	054 Move X3, X31
	055 Call Array.Clear, X0, X1, X2
	056 Move X9, [X20+24]
	057 Compare X9, 0
	058 JumpIfEqual {64}
	059 Move W2, [X19+88]
	060 Move X0, X9
	061 Move W1, W31
	062 Move X3, X31
	063 Call Array.Clear, X0, X1, X2
	064 Move X20, [X31+16]
	065 Move X19, [X31+24]
	066 NotImplemented "Instruction MOVI not yet implemented."
	067 Move [X21+32], X31
	068 Move [X21], V0
	069 Move [X21+8], V0
	070 Move X30, [X31+32]
	071 Move X21, [X31+40]
	072 Return 
	073 Call 0x1C17F20

Method: System.Void AddActionMap(UnityEngine.InputSystem.InputActionMap actionMap)

Disassembly:
	0x03754D00 BL 0x3EB1AC0
	0x03754D04 LDR X8, [X31 + 0xD0]
	0x03754D08 LDR W8, [X8 + 0x38]
	0x03754D0C ADRP X9, 0x9F1000
	0x03754D10 LDR X9, [X9 + 0xDE0]
	0x03754D14 STR W8, [X31 + 0x35C]
	0x03754D18 LDR X8, [X31 + 0xD0]
	0x03754D1C LDP V0, V1, [X31 + 0x360]
	0x03754D20 LDR X4, [X9]
	0x03754D24 ADD X0, X8, 0x18
	0x03754D28 STP V0, V1, [X31 + 0x180]
	0x03754D2C ADD X1, X31, 0x35C
	0x03754D30 ADD X2, X31, 0x180
	0x03754D34 MOVZ W3, 0xA
	0x03754D38 BL 0x217392C
	0x03754D3C LDR W8, [X31 + 0x9C]
	0x03754D40 LDR W16, [X31 + 0x94]
	0x03754D44 STR W20, [X31 + 0xF8]
	0x03754D48 CMP W8, 0x1
	0x03754D4C B.LT 0x3754DA0
	0x03754D50 LDR W9, [X31 + 0x9C]
	0x03754D54 MOV X8, X31
	0x03754D58 MOV W9, W9
	0x03754D5C LDR W10, [X31 + 0xDC]
	0x03754D60 LDR X11, [X31 + 0x438]
	0x03754D64 ADD W10, W10, W8
	0x03754D68 SXTW X12, W10
	0x03754D6C ADD X12, X11, X12, 0x5, LSL
	0x03754D70 LDRB W11, [X12]
	0x03754D74 CBZ X11, 0x3754D94
	0x03754D78 LDRH W12, [X12 + 0xE]
	0x03754D7C UBFM X12, X12, 0x3E, 0x3D
	0x03754D80 LDR X13, [X31 + 0x470]
	0x03754D84 SUBS X11, X11, 0x1
	0x03754D88 STR W10, [X12, X13, LSL]
	0x03754D8C ADD X12, X12, 0x4
	0x03754D90 B.NE 0x3754D80
	0x03754D94 ADD X8, X8, 0x1
	0x03754D98 CMP X8, X9
	0x03754D9C B.NE 0x3754D5C
	0x03754DA0 LDR X8, [X31 + 0xD0]
	0x03754DA4 LDR W9, [X31 + 0x420]
	0x03754DA8 LDRSW X8, [X8 + 0x30]
	0x03754DAC CMP W8, W9
	0x03754DB0 B.GE 0x3754DE8
	0x03754DB4 ADD X10, X8, X8, 0x1, LSL
	0x03754DB8 MOVZ W9, 0x1
	0x03754DBC UBFM X10, X10, 0x3C, 0x3B
	0x03754DC0 MOVZ W11, 0xFFFF
	0x03754DC4 LDR X12, [X31 + 0x440]
	0x03754DC8 ADD X8, X8, 0x1
	0x03754DCC ADD X12, X10, X12
	0x03754DD0 STRB W9, [X12 + 0x2]
	0x03754DD4 STRH W11, [X12]
	0x03754DD8 LDRSW X12, [X31 + 0x420]
	0x03754DDC ADD X10, X10, 0x30
	0x03754DE0 CMP X8, X12
	0x03754DE4 B.LT 0x3754DC4
	0x03754DE8 CMP W16, 0x1
	0x03754DEC B.LT 0x3754F8C
	0x03754DF0 CBZ X19, 0x37550B8
	0x03754DF4 LDR X8, [X31 + 0xD0]
	0x03754DF8 MOV W20, W31
	0x03754DFC MOVZ W23, 0xFFFF
	0x03754E00 MOVZ W25, 0x4
	0x03754E04 LDR W21, [X8 + 0x34]
	0x03754E08 LDR W8, [X31 + 0x9C]
	0x03754E0C MOVZ W26, 0x30
	0x03754E10 MOV W22, W8
	0x03754E14 LDR W8, [X19 + 0x18]
	0x03754E18 CMP W20, W8
	0x03754E1C B.CS 0x37550AC
	0x03754E20 ADD X8, X19, W20, 0x3, SXTW
	0x03754E24 LDR X8, [X8 + 0x20]
	0x03754E28 CBZ X8, 0x37550A8
	0x03754E2C LDR W9, [X31 + 0xBC]
	0x03754E30 LDR W11, [X31 + 0x9C]
	0x03754E34 ADD W27, W20, W9
	0x03754E38 STR W27, [X8 + 0xC0]
	0x03754E3C LDR X10, [X31 + 0x460]
	0x03754E40 UBFM W9, W27, 0x1F, 0x1E
	0x03754E44 CMP W11, 0x1
	0x03754E48 STRH W21, [X10, W9, SXTW]
	0x03754E4C B.LT 0x3754ED0
	0x03754E50 LDR W12, [X31 + 0xDC]
	0x03754E54 MOV W10, W31
	0x03754E58 MOV W28, W31
	0x03754E5C MOVN W29, 0x0
	0x03754E60 MOV X11, X22
	0x03754E64 LDR X13, [X31 + 0x438]
	0x03754E68 SXTW X14, W12
	0x03754E6C ADD X13, X13, X14, 0x5, LSL
	0x03754E70 LDRH W14, [X13 + 0x6]
	0x03754E74 CMP W14, W23
	0x03754E78 CSINV W14, W14, W31, NE
	0x03754E7C CMP W14, W27
	0x03754E80 B.NE 0x3754EC0
	0x03754E84 LDRB W14, [X13 + 0x4]
	0x03754E88 TBNZ X14, 0x3, 0x3754EC0
	0x03754E8C LDR X14, [X31 + 0x468]
	0x03754E90 ADDS W31, W29, 0x1
	0x03754E94 ADD W10, W10, 0x1
	0x03754E98 CSEL W29, W12, W29, EQ
	0x03754E9C STRH W12, [X14, W21, SXTW]
	0x03754EA0 LDRB W14, [X13 + 0x4]
	0x03754EA4 LDRB W13, [X13]
	0x03754EA8 ADD W21, W21, 0x1
	0x03754EAC TBNZ X14, 0x2, 0x3754EB8
	0x03754EB0 ADD W28, W28, W13
	0x03754EB4 B 0x3754EC0
	0x03754EB8 CMP W13, 0x0
	0x03754EBC CINC W28, W28, NE
	0x03754EC0 SUBS X11, X11, 0x1
	0x03754EC4 ADD W12, W12, 0x1
	0x03754EC8 B.NE 0x3754E64
	0x03754ECC B 0x3754EDC
	0x03754ED0 MOV W28, W31
	0x03754ED4 MOV W10, W31
	0x03754ED8 MOVN W29, 0x0
	0x03754EDC LDR X11, [X31 + 0x460]
	0x03754EE0 ORR W9, W9, 0x1
	0x03754EE4 MOVI V0.2D, 0x0
	0x03754EE8 STRH W10, [X11, W9, SXTW]
	0x03754EEC LDR W24, [X8 + 0x18]
	0x03754EF0 LDR X19, [X31 + 0x430]
	0x03754EF4 STR V0, [X31 + 0x49]
	0x03754EF8 STR V0, [X31 + 0x4A]
	0x03754EFC STR V0, [X31 + 0x4B]
	0x03754F00 ADD X0, X31, 0x490
	0x03754F04 LDR X1, [X31 + 0x88]
	0x03754F08 BL 0x374CC60
	0x03754F0C CMP W24, 0x1
	0x03754F10 LDRB W8, [X31 + 0x491]
	0x03754F14 CSET W9, EQ
	0x03754F18 ADDS W31, W29, 0x1
	0x03754F1C CSEL W1, W31, W29, EQ
	0x03754F20 CMP W24, 0x2
	0x03754F24 CSET W10, EQ
	0x03754F28 CCMP W28, 0x1, 0x4, NE
	0x03754F2C MOVZ W11, 0xD9
	0x03754F30 UBFM W10, W10, 0x1F, 0x1E
	0x03754F34 AND W8, W8, W11, 0x0
	0x03754F38 CSEL W11, W25, W31, GT
	0x03754F3C BFM W10, W9, 0x1B, 0x0
	0x03754F40 ORR W9, W10, W11, 0x0
	0x03754F44 ORR W8, W9, W8, 0x0
	0x03754F48 STRH W23, [X31 + 0x494]
	0x03754F4C STRH W23, [X31 + 0x4AA]
	0x03754F50 STRB W8, [X31 + 0x491]
	0x03754F54 ADD X0, X31, 0x490
	0x03754F58 BL 0x374CCC0
	0x03754F5C LDR W16, [X31 + 0x94]
	0x03754F60 NOP
	0x03754F64 SMADDL X8, X27, X26, X19
	0x03754F68 LDR V0, [X31 + 0x4B]
	0x03754F6C LDR V1, [X31 + 0x49]
	0x03754F70 LDR V2, [X31 + 0x4A]
	0x03754F74 LDR X19, [X31 + 0xA0]
	0x03754F78 ADD W20, W20, 0x1
	0x03754F7C CMP W20, W16
	0x03754F80 STP V2, V0, [X8 + 0x10]
	0x03754F84 STR V1, [X8]
	0x03754F88 B.NE 0x3754E14
	0x03754F8C LDR X15, [X31 + 0x88]
	0x03754F90 LDR X9, [X31 + 0x488]
	0x03754F94 MOVZ W13, 0x30
	0x03754F98 LDR X14, [X31 + 0xD0]
	0x03754F9C SXTW X8, W15
	0x03754FA0 MADD X8, X8, X13, X9
	0x03754FA4 LDR W9, [X31 + 0xBC]
	0x03754FA8 LDP W12, W10, [X14 + 0x4]
	0x03754FAC LDR W11, [X14]
	0x03754FB0 LDR W13, [X31 + 0x18]
	0x03754FB4 STP W9, W16, [X8]
	0x03754FB8 LDR W9, [X31 + 0xF8]
	0x03754FBC LDP W1, W0, [X31 + 0x10]
	0x03754FC0 LDR W17, [X31 + 0x1C]
	0x03754FC4 LDR X2, [X31 + 0xB0]
	0x03754FC8 STP W13, W9, [X8 + 0x8]
	0x03754FCC LDR W13, [X31 + 0xDC]
	0x03754FD0 LDR W9, [X31 + 0x9C]
	0x03754FD4 SUB W10, W10, W1
	0x03754FD8 SUB W11, W11, W0
	0x03754FDC SUB W12, W12, W17
	0x03754FE0 STP W13, W9, [X8 + 0x10]
	0x03754FE4 STP W1, W10, [X8 + 0x18]
	0x03754FE8 STP W0, W11, [X8 + 0x20]
	0x03754FEC STP W17, W12, [X8 + 0x28]
	0x03754FF0 STR W15, [X2 + 0x58]
	0x03754FF4 ADRP X9, 0x9F1000
	0x03754FF8 LDR W8, [X14 + 0x28]
	0x03754FFC LDR X9, [X9 + 0xDE8]
	0x03755000 ADD X0, X14, 0x10
	0x03755004 STR W8, [X31 + 0x358]
	0x03755008 LDR X4, [X9]
	0x0375500C ADD X1, X31, 0x358
	0x03755010 MOVZ W3, 0x4
	0x03755014 BL 0x2174728
	0x03755018 LDR X19, [X31 + 0x8]
	0x0375501C LDR X0, [X19]
	0x03755020 CBZ X0, 0x375504C
	0x03755024 MOVZ W1, 0x4
	0x03755028 MOV X2, X31
	0x0375502C BL 0x3C00054
	0x03755030 LDR X8, [X31 + 0xD0]
	0x03755034 MOVI V0.2D, 0x0
	0x03755038 STR X31, [X8 + 0x98]
	0x0375503C STR X31, [X19 + 0x40]
	0x03755040 STP V0, V0, [X19 + 0x20]
	0x03755044 STP V0, V0, [X19]
	0x03755048 STP V0, V0, [X8 + 0x70]
	0x0375504C ADD X1, X31, 0x410
	0x03755050 MOVZ W2, 0x80
	0x03755054 MOV X0, X19
	0x03755058 BL 0x3EB1AC0
	0x0375505C ADRP X8, 0x9C6000
	0x03755060 LDR X8, [X8 + 0xE58]
	0x03755064 ADD X0, X31, 0x360
	0x03755068 LDR X1, [X8]
	0x0375506C BL 0x2DFB98C
	0x03755070 LDR X8, [X31 + 0x20]
	0x03755074 LDR X8, [X8 + 0x28]
	0x03755078 LDR X9, [X31 + 0x4E8]
	0x0375507C CMP X8, X9
	0x03755080 B.NE 0x37550E8
	0x03755084 ADD X31, X31, 0x4F0
	0x03755088 LDP X20, X19, [X31 + 0x50]
	0x0375508C LDP X22, X21, [X31 + 0x40]
	0x03755090 LDP X24, X23, [X31 + 0x30]
	0x03755094 LDP X26, X25, [X31 + 0x20]
	0x03755098 LDP X28, X27, [X31 + 0x10]
	0x0375509C LDP X29, X30, [X31], #0x60
	0x037550A0 RET
	0x037550A4 BL 0x1C16F28
	0x037550A8 BL 0x1C16F20
	0x037550AC BL 0x1C16F28
	0x037550B0 BL 0x1C16F20
	0x037550B4 BL 0x1C16F20
	0x037550B8 BL 0x1C16F20
	0x037550BC MOVZ W0, 0x8
	0x037550C0 BL 0x3EB1AF0
	0x037550C4 LDR X8, [X20]
	0x037550C8 STR X8, [X0]
	0x037550CC ADRP X1, 0x75F000
	0x037550D0 ADD X1, X1, 0xE58
	0x037550D4 MOV X2, X31
	0x037550D8 BL 0x3EB1B00
	0x037550DC B 0x3755244
	0x037550E0 BL 0x1C16F20
	0x037550E4 BL 0x1C16F20
	0x037550E8 BL 0x3EB1B20
	0x037550EC B 0x3755150
	0x037550F0 B 0x3755150
	0x037550F4 B 0x3755150
	0x037550F8 B 0x3755114
	0x037550FC B 0x3755150
	0x03755100 B 0x3755150
	0x03755104 B 0x3755150
	0x03755108 B 0x3755150
	0x0375510C B 0x3755150
	0x03755110 B 0x3755150
	0x03755114 MOV X20, X0
	0x03755118 MOV W23, W1
	0x0375511C BL 0x3EB1AE0
	0x03755120 B 0x3755158
	0x03755124 B 0x3755150
	0x03755128 B 0x3755150
	0x0375512C B 0x3755150
	0x03755130 B 0x3755150
	0x03755134 B 0x3755150
	0x03755138 B 0x3755150
	0x0375513C B 0x3755150
	0x03755140 B 0x3755150
	0x03755144 B 0x3755150
	0x03755148 B 0x3755150
	0x0375514C B 0x3755150
	0x03755150 MOV X20, X0
	0x03755154 MOV W23, W1
	0x03755158 CMP W23, 0x1
	0x0375515C B.EQ 0x375519C
	0x03755160 MOVZ W8, 0x1
	0x03755164 CMP W23, W8
	0x03755168 B.NE 0x375521C
	0x0375516C MOV X0, X20
	0x03755170 BL 0x3EB1AD0
	0x03755174 LDR X19, [X0]
	0x03755178 BL 0x3EB1AE0
	0x0375517C ADRP X8, 0x9C6000
	0x03755180 LDR X8, [X8 + 0xE58]
	0x03755184 ADD X0, X31, 0x360
	0x03755188 LDR X1, [X8]
	0x0375518C BL 0x2DFB98C
	0x03755190 CBZ X19, 0x3755070
	0x03755194 MOV X0, X19
	0x03755198 BL 0x1C16F18
	0x0375519C MOV X0, X20
	0x037551A0 BL 0x3EB1AD0
	0x037551A4 MOV X19, X0
	0x037551A8 ADRP X0, 0x99E000
	0x037551AC LDR X0, [X0 + 0x7D0]
	0x037551B0 BL 0x1C16D08
	0x037551B4 LDR X8, [X19]
	0x037551B8 LDR X1, [X8]
	0x037551BC BL 0x1C17270
	0x037551C0 TBZ X0, 0x0, 0x3755224
	0x037551C4 LDR X19, [X19]
	0x037551C8 LDRSW X20, [X31 + 0x268]
	0x037551CC ADD X8, X31, 0x258
	0x037551D0 STR X19, [X8, X20, LSL #3]
	0x037551D4 BL 0x3EB1AE0
	0x037551D8 LDR X0, [X31 + 0x410]
	0x037551DC CBZ X0, 0x3755210
	0x037551E0 MOVZ W1, 0x4
	0x037551E4 MOV X2, X31
	0x037551E8 BL 0x3C00054
	0x037551EC MOVI V0.2D, 0x0
	0x037551F0 STR X31, [X31 + 0x488]
	0x037551F4 STR X31, [X31 + 0x450]
	0x037551F8 STR V0, [X31 + 0x41]
	0x037551FC STR V0, [X31 + 0x42]
	0x03755200 STR V0, [X31 + 0x43]
	0x03755204 STR V0, [X31 + 0x44]
	0x03755208 STR V0, [X31 + 0x46]
	0x0375520C STR V0, [X31 + 0x47]
	0x03755210 STR W20, [X31 + 0x268]
	0x03755214 MOV X0, X19
	0x03755218 BL 0x1C16F18
	0x0375521C MOV X19, X31
	0x03755220 B 0x3755268
	0x03755224 MOVZ W0, 0x8
	0x03755228 BL 0x3EB1AF0
	0x0375522C LDR X8, [X19]
	0x03755230 STR X8, [X0]
	0x03755234 ADRP X1, 0x75F000
	0x03755238 ADD X1, X1, 0xE58
	0x0375523C MOV X2, X31
	0x03755240 BL 0x3EB1B00
	0x03755244 B 0x3755248
	0x03755248 MOV X20, X0
	0x0375524C MOV W23, W1
	0x03755250 B 0x3755160
	0x03755254 MOV X23, X1
	0x03755258 MOV X20, X0
	0x0375525C BL 0x3EB1AE0
	0x03755260 B 0x3755160
	0x03755264 MOV X20, X0
	0x03755268 ADRP X8, 0x9C6000
	0x0375526C LDR X8, [X8 + 0xE58]
	0x03755270 LDR X1, [X8]
	0x03755274 ADD X0, X31, 0x360
	0x03755278 BL 0x2DFB98C
	0x0375527C CBNZ X19, 0x3755288
	0x03755280 MOV X0, X20
	0x03755284 BL 0x1D2C690
	0x03755288 MOV X0, X19
	0x0375528C BL 0x1C16F18
	0x03755290 BL 0x1990590
	0x03755294 SUB X31, X31, 0x70
	0x03755298 STR X30, [X31 + 0x20]
	0x0375529C STP X26, X25, [X31 + 0x30]
	0x037552A0 STP X24, X23, [X31 + 0x40]
	0x037552A4 STP X22, X21, [X31 + 0x50]
	0x037552A8 STP X20, X19, [X31 + 0x60]
	0x037552AC ADRP X19, 0xC8B000
	0x037552B0 LDRB W8, [X19 + 0xDCA]
	0x037552B4 MOV X20, X1
	0x037552B8 MOV X21, X0
	0x037552BC TBNZ X8, 0x0, 0x37552E0
	0x037552C0 ADRP X0, 0x9C6000
	0x037552C4 LDR X0, [X0 + 0xC28]
	0x037552C8 BL 0x1C16CF4
	0x037552CC ADRP X0, 0x99E000
	0x037552D0 LDR X0, [X0 + 0x6C0]
	0x037552D4 BL 0x1C16CF4
	0x037552D8 MOVZ W8, 0x1
	0x037552DC STRB W8, [X19 + 0xDCA]
	0x037552E0 ADRP X26, 0x9C6000
	0x037552E4 ADRP X22, 0x99E000
	0x037552E8 LDR X0, [X21 + 0x40]
	0x037552EC LDR X26, [X26 + 0xC28]
	0x037552F0 LDR X22, [X22 + 0x6C0]
	0x037552F4 CBNZ X0, 0x37552FC
	0x037552F8 LDR X0, [X21 + 0x10]
	0x037552FC ADD X8, X31, 0x8
	0x03755300 MOV X1, X31
	0x03755304 BL 0x37638C0
	0x03755308 LDR X8, [X26]
	0x0375530C LDP X19, X24, [X31 + 0x8]
	0x03755310 LDR X23, [X31 + 0x18]
	0x03755314 MOV X2, X31
	0x03755318 LDR X0, [X8 + 0xB8]
	0x0375531C MOV X1, X19
	0x03755320 BL 0x3769CEC
	0x03755324 LDR X8, [X22]
	0x03755328 MOV X22, X0
	0x0375532C LDR W9, [X8 + 0xE0]
	0x03755330 CBNZ W9, 0x375533C
	0x03755334 MOV X0, X8
	0x03755338 BL 0x1C16DFC
	0x0375533C MOV X0, X22
	0x03755340 MOV X1, X31
	0x03755344 MOV X2, X31
	0x03755348 BL 0x3395194
	0x0375534C TBNZ X0, 0x0, 0x37554B4
	0x03755350 MOV X0, X22
	0x03755354 MOV X1, X31
	0x03755358 BL 0x33A703C
	0x0375535C CBZ X0, 0x37553D8
	0x03755360 LDR X9, [X0]
	0x03755364 LDR X8, [X26]
	0x03755368 MOV X25, X0
	0x0375536C LDRB W11, [X9 + 0x130]
	0x03755370 LDRB W10, [X8 + 0x130]
	0x03755374 CMP W11, W10
	0x03755378 B.CC 0x37553D8
	0x0375537C LDR X9, [X9 + 0xC8]
	0x03755380 ADD X9, X9, X10, 0x3, LSL
	0x03755384 LDUR X9, [X9 - 0x8]
	0x03755388 CMP X9, X8
	0x0375538C B.NE 0x37553D8
	0x03755390 LDR X6, [X21 + 0x40]
	0x03755394 CBNZ X6, 0x375539C
	0x03755398 LDR X6, [X21 + 0x10]
	0x0375539C MOV X0, X24
	0x037553A0 MOV X1, X23
	0x037553A4 MOV X2, X25
	0x037553A8 MOV X3, X20
	0x037553AC MOV X4, X21
	0x037553B0 MOV X5, X19
	0x037553B4 BL 0x3755750
	0x037553B8 MOV X0, X25
	0x037553BC LDP X20, X19, [X31 + 0x60]
	0x037553C0 LDP X22, X21, [X31 + 0x50]
	0x037553C4 LDP X24, X23, [X31 + 0x40]
	0x037553C8 LDP X26, X25, [X31 + 0x30]
	0x037553CC LDR X30, [X31 + 0x20]
	0x037553D0 ADD X31, X31, 0x70
	0x037553D4 RET
	0x037553D8 ADRP X0, 0x99E000
	0x037553DC LDR X0, [X0 + 0xAC8]
	0x037553E0 BL 0x1C16D08
	0x037553E4 MOVZ W1, 0x5
	0x037553E8 BL 0x1C16D6C
	0x037553EC MOV X20, X0
	0x037553F0 BL 0x19903C0
	0x037553F4 ADRP X0, 0x9F0000
	0x037553F8 LDR X0, [X0 + 0xE40]
	0x037553FC BL 0x1C16D08
	0x03755400 MOV X2, X0
	0x03755404 MOV X0, X20
	0x03755408 MOV X1, X31
	0x0375540C BL 0x1993444
	0x03755410 MOV X0, X22
	0x03755414 BL 0x19903C0
	0x03755418 LDR X8, [X22]
	0x0375541C MOV X0, X22
	0x03755420 LDP X9, X1, [X8 + 0x1A8]
	0x03755424 BLR X9
	0x03755428 MOV X21, X0
	0x0375542C MOV X0, X20
	0x03755430 BL 0x19903C0
	0x03755434 MOVZ W1, 0x1
	0x03755438 MOV X0, X20
	0x0375543C MOV X2, X21
	0x03755440 BL 0x1993444
	0x03755444 MOV X0, X20
	0x03755448 BL 0x19903C0
	0x0375544C ADRP X0, 0x9F0000
	0x03755450 LDR X0, [X0 + 0xE48]
	0x03755454 BL 0x1C16D08
	0x03755458 MOV X2, X0
	0x0375545C MOVZ W1, 0x2
	0x03755460 MOV X0, X20
	0x03755464 BL 0x1993444
	0x03755468 MOV X0, X20
	0x0375546C BL 0x19903C0
	0x03755470 MOVZ W1, 0x3
	0x03755474 MOV X0, X20
	0x03755478 MOV X2, X19
	0x0375547C BL 0x1993444
	0x03755480 MOV X0, X20
	0x03755484 BL 0x19903C0
	0x03755488 ADRP X0, 0x9F0000
	0x0375548C LDR X0, [X0 + 0xE50]
	0x03755490 BL 0x1C16D08
	0x03755494 MOV X2, X0
	0x03755498 MOVZ W1, 0x4
	0x0375549C MOV X0, X20
	0x037554A0 BL 0x1993444
	0x037554A4 MOV X0, X20
	0x037554A8 MOV X1, X31
	0x037554AC BL 0x32278CC
	0x037554B0 B 0x37554E4
	0x037554B4 ADRP X0, 0x9F0000
	0x037554B8 LDR X0, [X0 + 0xE58]
	0x037554BC BL 0x1C16D08
	0x037554C0 MOV X20, X0
	0x037554C4 ADRP X0, 0x9F0000
	0x037554C8 LDR X0, [X0 + 0xE60]
	0x037554CC BL 0x1C16D08
	0x037554D0 MOV X2, X0
	0x037554D4 MOV X0, X20
	0x037554D8 MOV X1, X19
	0x037554DC MOV X3, X31
	0x037554E0 BL 0x32274B8
	0x037554E4 MOV X19, X0
	0x037554E8 ADRP X0, 0x99E000
	0x037554EC LDR X0, [X0 + 0x5B0]
	0x037554F0 BL 0x1C16D08
	0x037554F4 BL 0x1C16F10
	0x037554F8 MOV X1, X19
	0x037554FC MOV X2, X31
	0x03755500 MOV X20, X0
	0x03755504 BL 0x337DF1C
	0x03755508 ADRP X0, 0x9F0000
	0x0375550C LDR X0, [X0 + 0xE68]
	0x03755510 BL 0x1C16D08
	0x03755514 MOV X1, X0
	0x03755518 MOV X0, X20
	0x0375551C BL 0x1C16DEC
	0x03755520 SUB X31, X31, 0x50
	0x03755524 STP X30, X25, [X31 + 0x10]
	0x03755528 STP X24, X23, [X31 + 0x20]
	0x0375552C STP X22, X21, [X31 + 0x30]
	0x03755530 STP X20, X19, [X31 + 0x40]
	0x03755534 ADRP X22, 0xC8B000
	0x03755538 LDRB W8, [X22 + 0xDCC]
	0x0375553C MOV X20, X2
	0x03755540 MOV X21, X1
	0x03755544 MOV X19, X0
	0x03755548 TBNZ X8, 0x0, 0x3755578
	0x0375554C ADRP X0, 0x9C5000
	0x03755550 LDR X0, [X0 + 0xD80]
	0x03755554 BL 0x1C16CF4
	0x03755558 ADRP X0, 0x99E000
	0x0375555C LDR X0, [X0 + 0x758]
	0x03755560 BL 0x1C16CF4
	0x03755564 ADRP X0, 0x99E000
	0x03755568 LDR X0, [X0 + 0x6C0]
	0x0375556C BL 0x1C16CF4
	0x03755570 MOVZ W8, 0x1
	0x03755574 STRB W8, [X22 + 0xDCC]
	0x03755578 CBZ X19, 0x37556B4
	0x0375557C MOV X0, X19
	0x03755580 MOV X1, X31
	0x03755584 BL 0x33BE520
	0x03755588 CBZ X0, 0x37556B4
	0x0375558C LDR X8, [X0]
	0x03755590 MOVZ W2, 0x35
	0x03755594 MOV X1, X21
	0x03755598 MOV X23, X0
	0x0375559C LDR X9, [X8 + 0x678]
	0x037555A0 LDR X3, [X8 + 0x680]
	0x037555A4 BLR X9
	0x037555A8 MOV X1, X31
	0x037555AC MOV X2, X31
	0x037555B0 MOV X22, X0
	0x037555B4 BL 0x32CCEA8
	0x037555B8 TBNZ X0, 0x0, 0x37556B8
	0x037555BC CBZ X22, 0x37556B4
	0x037555C0 LDR X8, [X22]
	0x037555C4 ADRP X24, 0x9C5000
	0x037555C8 ADRP X25, 0x99E000
	0x037555CC MOV X0, X22
	0x037555D0 LDR X9, [X8 + 0x258]
	0x037555D4 LDR X1, [X8 + 0x260]
	0x037555D8 LDR X24, [X24 + 0xD80]
	0x037555DC LDR X25, [X25 + 0x6C0]
	0x037555E0 BLR X9
	0x037555E4 LDR X8, [X25]
	0x037555E8 LDR X25, [X24]
	0x037555EC MOV X24, X0
	0x037555F0 LDR W9, [X8 + 0xE0]
	0x037555F4 CBNZ W9, 0x3755600
	0x037555F8 MOV X0, X8
	0x037555FC BL 0x1C16DFC
	0x03755600 MOV X0, X25
	0x03755604 MOV X1, X31
	0x03755608 BL 0x338C698
	0x0375560C MOV X1, X0
	0x03755610 MOV X0, X24
	0x03755614 MOV X2, X31
	0x03755618 BL 0x3395F0C
	0x0375561C TBNZ X0, 0x0, 0x37556D4
	0x03755620 LDR X8, [X22]
	0x03755624 MOV X0, X22
	0x03755628 MOV X1, X19
	0x0375562C LDR X9, [X8 + 0x2C8]
	0x03755630 LDR X2, [X8 + 0x2D0]
	0x03755634 BLR X9
	0x03755638 CBZ X0, 0x37556B4
	0x0375563C ADRP X23, 0x99E000
	0x03755640 LDR X23, [X23 + 0x758]
	0x03755644 LDR X8, [X0]
	0x03755648 LDR X1, [X23]
	0x0375564C LDR X8, [X8 + 0x40]
	0x03755650 LDR X9, [X1 + 0x40]
	0x03755654 CMP X8, X9
	0x03755658 B.NE 0x375574C
	0x0375565C BL 0x1C16E08
	0x03755660 LDR W21, [X0]
	0x03755664 CBNZ W21, 0x3755698
	0x03755668 LDR W8, [X20]
	0x0375566C ADD X1, X31, 0xC
	0x03755670 ADD W21, W8, 0x1
	0x03755674 STR W21, [X20]
	0x03755678 LDR X0, [X23]
	0x0375567C STR W21, [X31 + 0xC]
	0x03755680 BL 0x1C16E04
	0x03755684 MOV X2, X0
	0x03755688 MOV X0, X22
	0x0375568C MOV X1, X19
	0x03755690 MOV X3, X31
	0x03755694 BL 0x32CCF10
	0x03755698 MOV W0, W21
	0x0375569C LDP X20, X19, [X31 + 0x40]
	0x037556A0 LDP X22, X21, [X31 + 0x30]
	0x037556A4 LDP X24, X23, [X31 + 0x20]
	0x037556A8 LDP X30, X25, [X31 + 0x10]
	0x037556AC ADD X31, X31, 0x50
	0x037556B0 RET
	0x037556B4 BL 0x1C16F20
	0x037556B8 ADRP X0, 0x9F0000
	0x037556BC LDR X0, [X0 + 0xE70]
	0x037556C0 BL 0x1C16D08
	0x037556C4 MOV X1, X21
	0x037556C8 MOV X2, X19
	0x037556CC MOV X3, X23
	0x037556D0 B 0x3755708
	0x037556D4 MOV X0, X23
	0x037556D8 BL 0x19903C0
	0x037556DC LDR X8, [X23]
	0x037556E0 MOV X0, X23
	0x037556E4 LDP X9, X1, [X8 + 0x1A8]
	0x037556E8 BLR X9
	0x037556EC MOV X20, X0
	0x037556F0 ADRP X0, 0x9F0000
	0x037556F4 LDR X0, [X0 + 0xE78]
	0x037556F8 BL 0x1C16D08
	0x037556FC MOV X1, X21
	0x03755700 MOV X2, X19
	0x03755704 MOV X3, X20
	0x03755708 MOV X4, X31
	0x0375570C BL 0x3227C18
	0x03755710 MOV X19, X0
	0x03755714 ADRP X0, 0x99E000
	0x03755718 LDR X0, [X0 + 0x5B0]
	0x0375571C BL 0x1C16D08
	0x03755720 BL 0x1C16F10
	0x03755724 MOV X1, X19
	0x03755728 MOV X2, X31
	0x0375572C MOV X20, X0
	0x03755730 BL 0x337DF1C
	0x03755734 ADRP X0, 0x9F0000
	0x03755738 LDR X0, [X0 + 0xE80]
	0x0375573C BL 0x1C16D08
	0x03755740 MOV X1, X0
	0x03755744 MOV X0, X20
	0x03755748 BL 0x1C16DEC
	0x0375574C BL 0x1C171E0
	0x03755750 SUB X31, X31, 0x1C0
	0x03755754 STP X29, X30, [X31 + 0x160]
	0x03755758 STP X28, X27, [X31 + 0x170]
	0x0375575C STP X26, X25, [X31 + 0x180]
	0x03755760 STP X24, X23, [X31 + 0x190]
	0x03755764 STP X22, X21, [X31 + 0x1A0]
	0x03755768 STP X20, X19, [X31 + 0x1B0]
	0x0375576C STR X6, [X31 + 0x8]
	0x03755770 ADRP X24, 0xC8B000
	0x03755774 STP X0, X1, [X31 + 0x150]
	0x03755778 ADRP X19, 0x9F0000
	0x0375577C LDRB W8, [X24 + 0xDCB]
	0x03755780 LDR X19, [X19 + 0xE88]
	0x03755784 MOV X20, X5
	0x03755788 MOV X21, X4
	0x0375578C MOV X22, X3
	0x03755790 MOV X23, X2
	0x03755794 TBNZ X8, 0x0, 0x3755848
	0x03755798 ADRP X0, 0x99E000
	0x0375579C LDR X0, [X0 + 0xA28]
	0x037557A0 BL 0x1C16CF4
	0x037557A4 ADRP X0, 0x9F0000
	0x037557A8 LDR X0, [X0 + 0xE90]
	0x037557AC BL 0x1C16CF4
	0x037557B0 ADRP X0, 0x9F0000
	0x037557B4 LDR X0, [X0 + 0xE98]
	0x037557B8 BL 0x1C16CF4
	0x037557BC ADRP X0, 0x9F0000
	0x037557C0 LDR X0, [X0 + 0xEA0]
	0x037557C4 BL 0x1C16CF4
	0x037557C8 ADRP X0, 0x9F0000
	0x037557CC LDR X0, [X0 + 0x398]
	0x037557D0 BL 0x1C16CF4
	0x037557D4 ADRP X0, 0x9F0000
	0x037557D8 LDR X0, [X0 + 0x3A0]
	0x037557DC BL 0x1C16CF4
	0x037557E0 ADRP X0, 0x9F0000
	0x037557E4 LDR X0, [X0 + 0xE88]
	0x037557E8 BL 0x1C16CF4
	0x037557EC ADRP X0, 0x99E000
	0x037557F0 LDR X0, [X0 + 0xAC8]
	0x037557F4 BL 0x1C16CF4
	0x037557F8 ADRP X0, 0x99E000
	0x037557FC LDR X0, [X0 + 0x6C0]
	0x03755800 BL 0x1C16CF4
	0x03755804 ADRP X0, 0x9C6000
	0x03755808 LDR X0, [X0 + 0xCC8]
	0x0375580C BL 0x1C16CF4
	0x03755810 ADRP X0, 0x9C6000
	0x03755814 LDR X0, [X0 + 0xCD0]
	0x03755818 BL 0x1C16CF4
	0x0375581C ADRP X0, 0x9A6000
	0x03755820 LDR X0, [X0 + 0x9B0]
	0x03755824 BL 0x1C16CF4
	0x03755828 ADRP X0, 0x9C6000
	0x0375582C LDR X0, [X0 + 0xCD8]
	0x03755830 BL 0x1C16CF4
	0x03755834 ADRP X0, 0x9F0000
	0x03755838 LDR X0, [X0 + 0xEA8]
	0x0375583C BL 0x1C16CF4
	0x03755840 MOVZ W8, 0x1
	0x03755844 STRB W8, [X24 + 0xDCB]
	0x03755848 ADRP X28, 0x9F0000
	0x0375584C ADRP X29, 0x9F0000
	0x03755850 LDR X28, [X28 + 0xE98]
	0x03755854 LDR X29, [X29 + 0xEA0]
	0x03755858 LDR X1, [X19]
	0x0375585C MOVI V0.2D, 0x0
	0x03755860 ADD X8, X31, 0x10
	0x03755864 ADD X0, X31, 0x150
	0x03755868 STP X31, X31, [X31 + 0x130]
	0x0375586C STR X31, [X31 + 0x140]
	0x03755870 STP V0, V0, [X31 + 0x110]
	0x03755874 STP V0, V0, [X31 + 0xF0]
	0x03755878 STP V0, V0, [X31 + 0xD0]
	0x0375587C STP V0, V0, [X31 + 0xB0]
	0x03755880 STP X31, X31, [X31 + 0xA0]
	0x03755884 STP X31, X31, [X31 + 0x90]
	0x03755888 BL 0x24FD5A0
	0x0375588C LDR V0, [X31 + 0x1]
	0x03755890 LDR X8, [X31 + 0x20]
	0x03755894 STR V0, [X31 + 0x13]
	0x03755898 STR X8, [X31 + 0x140]
	0x0375589C LDR X1, [X28]
	0x037558A0 ADD X0, X31, 0x130
	0x037558A4 BL 0x2BC22D8
	0x037558A8 TBZ X0, 0x0, 0x3755AF4
	0x037558AC LDR X1, [X29]
	0x037558B0 ADD X8, X31, 0x10
	0x037558B4 ADD X0, X31, 0x130
	0x037558B8 BL 0x2BC2304
	0x037558BC CBZ X23, 0x3755B28
	0x037558C0 LDP X24, X27, [X31 + 0x10]
	0x037558C4 LDR X19, [X31 + 0x20]
	0x037558C8 MOV X0, X23
	0x037558CC MOV X1, X31
	0x037558D0 BL 0x33BE520
	0x037558D4 CBZ X0, 0x3755B2C
	0x037558D8 LDR X8, [X0]
	0x037558DC LDR X9, [X8 + 0x678]
	0x037558E0 LDR X3, [X8 + 0x680]
	0x037558E4 MOVZ W2, 0x35
	0x037558E8 MOV X1, X24
	0x037558EC BLR X9
	0x037558F0 MOV X25, X0
	0x037558F4 MOV X1, X31
	0x037558F8 MOV X2, X31
	0x037558FC BL 0x32CCEA8
	0x03755900 TBZ X0, 0x0, 0x3755A24
	0x03755904 ADRP X8, 0x99E000
	0x03755908 LDR X8, [X8 + 0xAC8]
	0x0375590C LDR X0, [X8]
	0x03755910 MOVZ W1, 0x9
	0x03755914 BL 0x1C16D6C
	0x03755918 MOV X25, X0
	0x0375591C CBZ X0, 0x3755B38
	0x03755920 LDR W8, [X25 + 0x18]
	0x03755924 CBZ W8, 0x3755B44
	0x03755928 ADRP X8, 0x9C6000
	0x0375592C LDR X8, [X8 + 0xCD0]
	0x03755930 LDR X8, [X8]
	0x03755934 STR X8, [X25 + 0x20]
	0x03755938 MOV X0, X23
	0x0375593C MOV X1, X31
	0x03755940 BL 0x33BE520
	0x03755944 CBZ X0, 0x3755B48
	0x03755948 LDR X8, [X0]
	0x0375594C LDP X9, X1, [X8 + 0x1A8]
	0x03755950 BLR X9
	0x03755954 LDR W8, [X25 + 0x18]
	0x03755958 CMP W8, 0x1
	0x0375595C B.LS 0x3755B58
	0x03755960 CMP W8, 0x2
	0x03755964 STR X0, [X25 + 0x28]
	0x03755968 B.EQ 0x3755B40
	0x0375596C ADRP X9, 0x9C6000
	0x03755970 LDR X9, [X9 + 0xCD8]
	0x03755974 CMP W8, 0x3
	0x03755978 LDR X9, [X9]
	0x0375597C STR X9, [X25 + 0x30]
	0x03755980 B.LS 0x3755B54
	0x03755984 CMP W8, 0x4
	0x03755988 STR X20, [X25 + 0x38]
	0x0375598C B.EQ 0x3755B50
	0x03755990 ADRP X9, 0x9C6000
	0x03755994 LDR X9, [X9 + 0xCC8]
	0x03755998 CMP W8, 0x5
	0x0375599C LDR X9, [X9]
	0x037559A0 STR X9, [X25 + 0x40]
	0x037559A4 B.LS 0x3755B30
	0x037559A8 LDR X9, [X31 + 0x8]
	0x037559AC CMP W8, 0x6
	0x037559B0 STR X9, [X25 + 0x48]
	0x037559B4 B.EQ 0x3755B3C
	0x037559B8 ADRP X9, 0x9F0000
	0x037559BC LDR X9, [X9 + 0xEA8]
	0x037559C0 CMP W8, 0x7
	0x037559C4 LDR X9, [X9]
	0x037559C8 STR X9, [X25 + 0x50]
	0x037559CC B.LS 0x3755B34
	0x037559D0 CMP W8, 0x8
	0x037559D4 STR X24, [X25 + 0x58]
	0x037559D8 B.EQ 0x3755B4C
	0x037559DC ADRP X8, 0x9A6000
	0x037559E0 LDR X8, [X8 + 0x9B0]
	0x037559E4 LDR X8, [X8]
	0x037559E8 STR X8, [X25 + 0x60]
	0x037559EC MOV X0, X25
	0x037559F0 MOV X1, X31
	0x037559F4 BL 0x32278CC
	0x037559F8 ADRP X8, 0x99E000
	0x037559FC LDR X8, [X8 + 0xA28]
	0x03755A00 MOV X24, X0
	0x03755A04 LDR X0, [X8]
	0x03755A08 LDR W8, [X0 + 0xE0]
	0x03755A0C CBNZ W8, 0x3755A14
	0x03755A10 BL 0x1C16DFC
	0x03755A14 MOV X0, X24
	0x03755A18 MOV X1, X31
	0x03755A1C BL 0x3C0649C
	0x03755A20 B 0x375589C
	0x03755A24 CBZ X25, 0x3755B5C
	0x03755A28 LDR X8, [X25]
	0x03755A2C LDR X1, [X8 + 0x260]
	0x03755A30 LDR X9, [X8 + 0x258]
	0x03755A34 MOV X0, X25
	0x03755A38 BLR X9
	0x03755A3C ADRP X8, 0x99E000
	0x03755A40 LDR X8, [X8 + 0x6C0]
	0x03755A44 MOV X26, X0
	0x03755A48 LDR X0, [X8]
	0x03755A4C LDR W8, [X0 + 0xE0]
	0x03755A50 CBNZ W8, 0x3755A58
	0x03755A54 BL 0x1C16DFC
	0x03755A58 MOV X0, X26
	0x03755A5C MOV X1, X31
	0x03755A60 BL 0x3397AFC
	0x03755A64 MOV W26, W0
	0x03755A68 ADD X8, X31, 0x10
	0x03755A6C MOV X0, X22
	0x03755A70 MOV X1, X21
	0x03755A74 MOV X2, X24
	0x03755A78 MOV X3, X20
	0x03755A7C MOV X4, X31
	0x03755A80 BL 0x373DDD4
	0x03755A84 ADD X0, X31, 0xB0
	0x03755A88 ADD X1, X31, 0x10
	0x03755A8C MOVZ W2, 0x80
	0x03755A90 BL 0x3EB1AC0
	0x03755A94 LDRB W8, [X31 + 0xB0]
	0x03755A98 CBZ W8, 0x3755AB8
	0x03755A9C ADRP X8, 0x9F0000
	0x03755AA0 LDR X8, [X8 + 0x3A0]
	0x03755AA4 LDR X1, [X8]
	0x03755AA8 ADD X8, X31, 0x10
	0x03755AAC ADD X0, X31, 0xB0
	0x03755AB0 BL 0x243DCF0
	0x03755AB4 LDP X27, X19, [X31 + 0x78]
	0x03755AB8 STP X27, X19, [X31 + 0xA0]
	0x03755ABC ADD X0, X31, 0xA0
	0x03755AC0 MOV W1, W26
	0x03755AC4 MOV X2, X31
	0x03755AC8 BL 0x3763C44
	0x03755ACC STP X0, X1, [X31 + 0x90]
	0x03755AD0 ADD X0, X31, 0x90
	0x03755AD4 MOV X1, X31
	0x03755AD8 BL 0x37649CC
	0x03755ADC MOV X2, X0
	0x03755AE0 MOV X0, X25
	0x03755AE4 MOV X1, X23
	0x03755AE8 MOV X3, X31
	0x03755AEC BL 0x32CCF10
	0x03755AF0 B 0x375589C
	0x03755AF4 ADRP X8, 0x9F0000
	0x03755AF8 LDR X8, [X8 + 0xE90]
	0x03755AFC ADD X0, X31, 0x130
	0x03755B00 LDR X1, [X8]
	0x03755B04 BL 0x2BC22D4
	0x03755B08 LDP X20, X19, [X31 + 0x1B0]
	0x03755B0C LDP X22, X21, [X31 + 0x1A0]
	0x03755B10 LDP X24, X23, [X31 + 0x190]
	0x03755B14 LDP X26, X25, [X31 + 0x180]
	0x03755B18 LDP X28, X27, [X31 + 0x170]
	0x03755B1C LDP X29, X30, [X31 + 0x160]
	0x03755B20 ADD X31, X31, 0x1C0
	0x03755B24 RET
	0x03755B28 BL 0x1C16F20
	0x03755B2C BL 0x1C16F20
	0x03755B30 BL 0x1C16F28
	0x03755B34 BL 0x1C16F28
	0x03755B38 BL 0x1C16F20
	0x03755B3C BL 0x1C16F28
	0x03755B40 BL 0x1C16F28
	0x03755B44 BL 0x1C16F28
	0x03755B48 BL 0x1C16F20
	0x03755B4C BL 0x1C16F28
	0x03755B50 BL 0x1C16F28
	0x03755B54 BL 0x1C16F28
	0x03755B58 BL 0x1C16F28
	0x03755B5C BL 0x1C16F20
	0x03755B60 B 0x3755BCC
	0x03755B64 B 0x3755BCC
	0x03755B68 B 0x3755BCC
	0x03755B6C B 0x3755BCC
	0x03755B70 B 0x3755BCC
	0x03755B74 B 0x3755BCC
	0x03755B78 B 0x3755BCC
	0x03755B7C B 0x3755BCC
	0x03755B80 B 0x3755BCC
	0x03755B84 B 0x3755BCC
	0x03755B88 B 0x3755BCC
	0x03755B8C B 0x3755BCC
	0x03755B90 B 0x3755BCC
	0x03755B94 B 0x3755BCC
	0x03755B98 B 0x3755BCC
	0x03755B9C B 0x3755BCC
	0x03755BA0 B 0x3755BCC
	0x03755BA4 B 0x3755BCC
	0x03755BA8 B 0x3755BCC
	0x03755BAC B 0x3755BCC
	0x03755BB0 B 0x3755BCC
	0x03755BB4 B 0x3755BCC
	0x03755BB8 B 0x3755BCC
	0x03755BBC B 0x3755BCC
	0x03755BC0 B 0x3755BCC
	0x03755BC4 B 0x3755BCC
	0x03755BC8 B 0x3755BCC
	0x03755BCC MOV X19, X0
	0x03755BD0 CMP W1, 0x1
	0x03755BD4 B.NE 0x3755C08
	0x03755BD8 MOV X0, X19
	0x03755BDC BL 0x3EB1AD0
	0x03755BE0 LDR X20, [X0]
	0x03755BE4 BL 0x3EB1AE0
	0x03755BE8 ADRP X8, 0x9F0000
	0x03755BEC LDR X8, [X8 + 0xE90]
	0x03755BF0 ADD X0, X31, 0x130
	0x03755BF4 LDR X1, [X8]
	0x03755BF8 BL 0x2BC22D4
	0x03755BFC CBZ X20, 0x3755B08
	0x03755C00 MOV X0, X20
	0x03755C04 BL 0x1C16F18
	0x03755C08 MOV X20, X31
	0x03755C0C B 0x3755C14
	0x03755C10 MOV X19, X0
	0x03755C14 ADRP X8, 0x9F0000
	0x03755C18 LDR X8, [X8 + 0xE90]
	0x03755C1C LDR X1, [X8]
	0x03755C20 ADD X0, X31, 0x130
	0x03755C24 BL 0x2BC22D4
	0x03755C28 CBNZ X20, 0x3755C34
	0x03755C2C MOV X0, X19
	0x03755C30 BL 0x1D2C690
	0x03755C34 MOV X0, X20
	0x03755C38 BL 0x1C16F18
	0x03755C3C BL 0x1990590
	0x03755C40 LDR X8, [X0]
	0x03755C44 CMP X8, 0x0
	0x03755C48 CSET W0, EQ
	0x03755C4C RET
	0x03755C50 STP X30, X21, [X31 - 0x20]!
	0x03755C54 STP X20, X19, [X31 + 0x10]
	0x03755C58 ADRP X20, 0xC8B000
	0x03755C5C ADRP X21, 0x9F0000
	0x03755C60 LDRB W8, [X20 + 0xDCE]
	0x03755C64 LDR X21, [X21 + 0xEB0]
	0x03755C68 MOV X19, X0
	0x03755C6C TBNZ X8, 0x0, 0x3755C84
	0x03755C70 ADRP X0, 0x9F0000
	0x03755C74 LDR X0, [X0 + 0xEB0]
	0x03755C78 BL 0x1C16CF4
	0x03755C7C MOVZ W8, 0x1
	0x03755C80 STRB W8, [X20 + 0xDCE]
	0x03755C84 LDR X0, [X21]
	0x03755C88 BL 0x1C16F10
	0x03755C8C MOV X1, X31
	0x03755C90 MOV X20, X0
	0x03755C94 BL 0x33BDD8C
	0x03755C98 MOVN W8, 0x1
	0x03755C9C MOV X0, X31
	0x03755CA0 STR W8, [X20 + 0x10]
	0x03755CA4 BL 0x33C151C
	0x03755CA8 STR W0, [X20 + 0x28]
	0x03755CAC LDR X8, [X19]
	0x03755CB0 MOV X0, X20
	0x03755CB4 STR X8, [X20 + 0x38]
	0x03755CB8 LDP X20, X19, [X31 + 0x10]
	0x03755CBC LDP X30, X21, [X31], #0x20
	0x03755CC0 RET
	0x03755CC4 STR X30, [X31 - 0x20]!
	0x03755CC8 STP X20, X19, [X31 + 0x10]
	0x03755CCC MOV W19, W1
	0x03755CD0 MOV X1, X31
	0x03755CD4 MOV X20, X0
	0x03755CD8 BL 0x33BDD8C
	0x03755CDC MOV X0, X31
	0x03755CE0 STR W19, [X20 + 0x10]
	0x03755CE4 BL 0x33C151C
	0x03755CE8 STR W0, [X20 + 0x28]
	0x03755CEC LDP X20, X19, [X31 + 0x10]
	0x03755CF0 LDR X30, [X31], #0x20
	0x03755CF4 RET
	0x03755CF8 STP X30, X23, [X31 - 0x30]!
	0x03755CFC STP X22, X21, [X31 + 0x10]
	0x03755D00 STP X20, X19, [X31 + 0x20]
	0x03755D04 ADRP X23, 0xC8B000
	0x03755D08 ADRP X22, 0x9C6000
	0x03755D0C LDRB W8, [X23 + 0xDCF]
	0x03755D10 LDR X22, [X22 + 0xEC0]
	0x03755D14 MOV W20, W2
	0x03755D18 MOV X19, X1
	0x03755D1C MOV X21, X0
	0x03755D20 TBNZ X8, 0x0, 0x3755D38
	0x03755D24 ADRP X0, 0x9C6000
	0x03755D28 LDR X0, [X0 + 0xEC0]
	0x03755D2C BL 0x1C16CF4
	0x03755D30 MOVZ W8, 0x1
	0x03755D34 STRB W8, [X23 + 0xDCF]
	0x03755D38 LDR X0, [X22]
	0x03755D3C LDR W8, [X0 + 0xE0]
	0x03755D40 CBNZ W8, 0x3755D4C
	0x03755D44 BL 0x1C16DFC
	0x03755D48 LDR X0, [X22]
	0x03755D4C LDR X8, [X0 + 0xB8]
	0x03755D50 AND W4, W20, 0x1
	0x03755D54 MOV X0, X21
	0x03755D58 MOV X3, X19
	0x03755D5C LDP X1, X2, [X8]
	0x03755D60 LDP X20, X19, [X31 + 0x20]
	0x03755D64 LDP X22, X21, [X31 + 0x10]
	0x03755D68 LDP X30, X23, [X31], #0x30
	0x03755D6C B 0x3755D70
	0x03755D70 SUB X31, X31, 0xA0
	0x03755D74 STP X30, X27, [X31 + 0x50]
	0x03755D78 STP X26, X25, [X31 + 0x60]
	0x03755D7C STP X24, X23, [X31 + 0x70]
	0x03755D80 STP X22, X21, [X31 + 0x80]
	0x03755D84 STP X20, X19, [X31 + 0x90]
	0x03755D88 ADRP X24, 0xC8B000
	0x03755D8C LDRB W8, [X24 + 0xDD4]
	0x03755D90 MOV W23, W4
	0x03755D94 MOV X21, X3
	0x03755D98 MOV X19, X2
	0x03755D9C MOV X20, X1
	0x03755DA0 MOV X22, X0
	0x03755DA4 TBNZ X8, 0x0, 0x3755E10
	0x03755DA8 ADRP X0, 0x9F0000
	0x03755DAC LDR X0, [X0 + 0xEB8]
	0x03755DB0 BL 0x1C16CF4
	0x03755DB4 ADRP X0, 0x9F0000
	0x03755DB8 LDR X0, [X0 + 0xEC0]
	0x03755DBC BL 0x1C16CF4
	0x03755DC0 ADRP X0, 0x9C8000
	0x03755DC4 LDR X0, [X0 + 0x648]
	0x03755DC8 BL 0x1C16CF4
	0x03755DCC ADRP X0, 0x9F0000
	0x03755DD0 LDR X0, [X0 + 0xEC8]
	0x03755DD4 BL 0x1C16CF4
	0x03755DD8 ADRP X0, 0x9A6000
	0x03755DDC LDR X0, [X0 + 0x600]
	0x03755DE0 BL 0x1C16CF4
	0x03755DE4 ADRP X0, 0x9A0000
	0x03755DE8 LDR X0, [X0 + 0x278]
	0x03755DEC BL 0x1C16CF4
	0x03755DF0 ADRP X0, 0x9F0000
	0x03755DF4 LDR X0, [X0 + 0xED0]
	0x03755DF8 BL 0x1C16CF4
	0x03755DFC ADRP X0, 0x9F0000
	0x03755E00 LDR X0, [X0 + 0xED8]
	0x03755E04 BL 0x1C16CF4
	0x03755E08 MOVZ W8, 0x1
	0x03755E0C STRB W8, [X24 + 0xDD4]
	0x03755E10 ADRP X26, 0x9F0000
	0x03755E14 ADRP X25, 0x9F0000
	0x03755E18 LDR X26, [X26 + 0xEC8]
	0x03755E1C LDR X25, [X25 + 0xEB8]
	0x03755E20 STP X31, X31, [X31 + 0x20]
	0x03755E24 TBZ X23, 0x0, 0x3755F14
	0x03755E28 CBZ X21, 0x3755F14
	0x03755E2C ADRP X8, 0x9A0000
	0x03755E30 LDR X8, [X8 + 0x278]
	0x03755E34 LDR X9, [X21]
	0x03755E38 LDR X8, [X8]
	0x03755E3C CMP X9, X8
	0x03755E40 B.NE 0x3755F14
	0x03755E44 ADRP X27, 0x9F0000
	0x03755E48 LDR X27, [X27 + 0xED8]
	0x03755E4C LDR X0, [X27]
	0x03755E50 LDR W8, [X0 + 0xE0]
	0x03755E54 CBNZ W8, 0x3755E60
	0x03755E58 BL 0x1C16DFC
	0x03755E5C LDR X0, [X27]
	0x03755E60 LDR X8, [X0 + 0xB8]
	0x03755E64 LDR X23, [X8 + 0x8]
	0x03755E68 CBNZ X23, 0x3755EBC
	0x03755E6C LDR W8, [X0 + 0xE0]
	0x03755E70 CBNZ W8, 0x3755E7C
	0x03755E74 BL 0x1C16DFC
	0x03755E78 LDR X0, [X27]
	0x03755E7C ADRP X9, 0x9C8000
	0x03755E80 LDR X8, [X0 + 0xB8]
	0x03755E84 LDR X9, [X9 + 0x648]
	0x03755E88 LDR X24, [X8]
	0x03755E8C LDR X0, [X9]
	0x03755E90 BL 0x1C16F10
	0x03755E94 ADRP X8, 0x9F0000
	0x03755E98 LDR X8, [X8 + 0xED0]
	0x03755E9C MOV X1, X24
	0x03755EA0 MOV X3, X31
	0x03755EA4 MOV X23, X0
	0x03755EA8 LDR X2, [X8]
	0x03755EAC BL 0x2D2BA94
	0x03755EB0 LDR X8, [X27]
	0x03755EB4 LDR X8, [X8 + 0xB8]
	0x03755EB8 STR X23, [X8 + 0x8]
	0x03755EBC ADRP X8, 0x9F0000
	0x03755EC0 LDR X8, [X8 + 0xEC0]
	0x03755EC4 MOV X0, X21
	0x03755EC8 MOV X1, X23
	0x03755ECC LDR X2, [X8]
	0x03755ED0 BL 0x21B16E4
	0x03755ED4 TBNZ X0, 0x0, 0x3755F14
	0x03755ED8 ADD X1, X31, 0x20
	0x03755EDC MOV X0, X21
	0x03755EE0 MOV X2, X31
	0x03755EE4 BL 0x3366738
	0x03755EE8 TBNZ X0, 0x0, 0x3755F14
	0x03755EEC ADRP X8, 0x9A6000
	0x03755EF0 LDR X8, [X8 + 0x600]
	0x03755EF4 LDR X0, [X8]
	0x03755EF8 BL 0x1C16F10
	0x03755EFC MOVZ W2, 0x1
	0x03755F00 MOV X1, X21
	0x03755F04 MOV X3, X31
	0x03755F08 MOV X23, X0
	0x03755F0C BL 0x3633518
	0x03755F10 MOV X21, X23
	0x03755F14 LDR X8, [X22]
	0x03755F18 LDR X4, [X26]
	0x03755F1C ADD X0, X31, 0x8
	0x03755F20 MOV X1, X20
	0x03755F24 MOV X2, X19
	0x03755F28 MOV X3, X21
	0x03755F2C STP X31, X31, [X31 + 0x8]
	0x03755F30 STR X8, [X31 + 0x28]
	0x03755F34 STR X31, [X31 + 0x18]
	0x03755F38 BL 0x2EE147C
	0x03755F3C LDUR V0, [X31 + 0x8]
	0x03755F40 LDR X8, [X31 + 0x18]
	0x03755F44 LDR X2, [X25]
	0x03755F48 ADD X0, X31, 0x28
	0x03755F4C ADD X1, X31, 0x30
	0x03755F50 STR V0, [X31 + 0x3]
	0x03755F54 STR X8, [X31 + 0x40]
	0x03755F58 BL 0x2172824
	0x03755F5C LDR X0, [X31 + 0x28]
	0x03755F60 LDP X20, X19, [X31 + 0x90]
	0x03755F64 LDP X22, X21, [X31 + 0x80]
	0x03755F68 LDP X24, X23, [X31 + 0x70]
	0x03755F6C LDP X26, X25, [X31 + 0x60]
	0x03755F70 LDP X30, X27, [X31 + 0x50]
	0x03755F74 ADD X31, X31, 0xA0
	0x03755F78 RET
	0x03755F7C STP X30, X23, [X31 - 0x30]!
	0x03755F80 STP X22, X21, [X31 + 0x10]
	0x03755F84 STP X20, X19, [X31 + 0x20]
	0x03755F88 ADRP X23, 0xC8B000
	0x03755F8C ADRP X22, 0x9C6000
	0x03755F90 LDRB W8, [X23 + 0xDD0]
	0x03755F94 LDR X22, [X22 + 0xEC0]
	0x03755F98 MOV W20, W2
	0x03755F9C MOV X19, X1
	0x03755FA0 MOV X21, X0
	0x03755FA4 TBNZ X8, 0x0, 0x3755FBC
	0x03755FA8 ADRP X0, 0x9C6000
	0x03755FAC LDR X0, [X0 + 0xEC0]
	0x03755FB0 BL 0x1C16CF4
	0x03755FB4 MOVZ W8, 0x1
	0x03755FB8 STRB W8, [X23 + 0xDD0]
	0x03755FBC LDR X0, [X22]
	0x03755FC0 LDR W8, [X0 + 0xE0]
	0x03755FC4 CBNZ W8, 0x3755FD0
	0x03755FC8 BL 0x1C16DFC
	0x03755FCC LDR X0, [X22]
	0x03755FD0 LDR X8, [X0 + 0xB8]
	0x03755FD4 AND W4, W20, 0x1
	0x03755FD8 MOV X0, X21
	0x03755FDC MOV X3, X19
	0x03755FE0 LDP X1, X2, [X8 + 0x10]
	0x03755FE4 LDP X20, X19, [X31 + 0x20]
	0x03755FE8 LDP X22, X21, [X31 + 0x10]
	0x03755FEC LDP X30, X23, [X31], #0x30
	0x03755FF0 B 0x3755D70
	0x03755FF4 STP X30, X23, [X31 - 0x30]!
	0x03755FF8 STP X22, X21, [X31 + 0x10]
	0x03755FFC STP X20, X19, [X31 + 0x20]
	0x03756000 ADRP X23, 0xC8A000
	0x03756004 ADRP X22, 0x9C5000
	0x03756008 LDRB W8, [X23 + 0xDD1]
	0x0375600C B 0x3EB16CC
	0x03756010 MOV W20, W2
	0x03756014 MOV X19, X1
	0x03756018 MOV X21, X0
	0x0375601C TBNZ X8, 0x0, 0x3756034
	0x03756020 ADRP X0, 0x9C5000
	0x03756024 LDR X0, [X0 + 0xEC0]
	0x03756028 BL 0x1C16CF4
	0x0375602C MOVZ W8, 0x1
	0x03756030 STRB W8, [X23 + 0xDD1]
	0x03756034 LDR X0, [X22]
	0x03756038 LDR W8, [X0 + 0xE0]
	0x0375603C CBNZ W8, 0x3756048
	0x03756040 BL 0x1C16DFC
	0x03756044 LDR X0, [X22]
	0x03756048 LDR X8, [X0 + 0xB8]
	0x0375604C AND W4, W20, 0x1
	0x03756050 MOV X0, X21
	0x03756054 MOV X3, X19
	0x03756058 LDP X1, X2, [X8 + 0x20]
	0x0375605C LDP X20, X19, [X31 + 0x20]
	0x03756060 LDP X22, X21, [X31 + 0x10]
	0x03756064 LDP X30, X23, [X31], #0x30
	0x03756068 B 0x3755D70
	0x0375606C STP X30, X23, [X31 - 0x30]!
	0x03756070 STP X22, X21, [X31 + 0x10]
	0x03756074 STP X20, X19, [X31 + 0x20]
	0x03756078 ADRP X23, 0xC8A000
	0x0375607C ADRP X22, 0x9C5000
	0x03756080 LDRB W8, [X23 + 0xDD2]
	0x03756084 LDR X22, [X22 + 0xEC0]
	0x03756088 MOV W20, W2
	0x0375608C MOV X19, X1
	0x03756090 MOV X21, X0
	0x03756094 TBNZ X8, 0x0, 0x37560AC
	0x03756098 ADRP X0, 0x9C5000
	0x0375609C LDR X0, [X0 + 0xEC0]
	0x037560A0 BL 0x1C16CF4
	0x037560A4 MOVZ W8, 0x1
	0x037560A8 STRB W8, [X23 + 0xDD2]
	0x037560AC LDR X0, [X22]
	0x037560B0 LDR W8, [X0 + 0xE0]
	0x037560B4 CBNZ W8, 0x37560C0
	0x037560B8 BL 0x1C16DFC
	0x037560BC LDR X0, [X22]
	0x037560C0 LDR X8, [X0 + 0xB8]
	0x037560C4 AND W4, W20, 0x1
	0x037560C8 MOV X0, X21
	0x037560CC MOV X3, X19
	0x037560D0 LDP X1, X2, [X8 + 0x30]
	0x037560D4 LDP X20, X19, [X31 + 0x20]
	0x037560D8 LDP X22, X21, [X31 + 0x10]
	0x037560DC LDP X30, X23, [X31], #0x30
	0x037560E0 B 0x3755D70
	0x037560E4 STP X30, X23, [X31 - 0x30]!
	0x037560E8 STP X22, X21, [X31 + 0x10]
	0x037560EC STP X20, X19, [X31 + 0x20]
	0x037560F0 ADRP X23, 0xC8A000
	0x037560F4 ADRP X22, 0x9C5000
	0x037560F8 LDRB W8, [X23 + 0xDD3]
	0x037560FC LDR X22, [X22 + 0xEC0]
	0x03756100 MOV W20, W2
	0x03756104 MOV X19, X1
	0x03756108 MOV X21, X0
	0x0375610C TBNZ X8, 0x0, 0x3756124
	0x03756110 ADRP X0, 0x9C5000
	0x03756114 LDR X0, [X0 + 0xEC0]
	0x03756118 BL 0x1C16CF4
	0x0375611C MOVZ W8, 0x1
	0x03756120 STRB W8, [X23 + 0xDD3]
	0x03756124 LDR X0, [X22]
	0x03756128 LDR W8, [X0 + 0xE0]
	0x0375612C CBNZ W8, 0x3756138
	0x03756130 BL 0x1C16DFC
	0x03756134 LDR X0, [X22]
	0x03756138 LDR X8, [X0 + 0xB8]
	0x0375613C AND W4, W20, 0x1
	0x03756140 MOV X0, X21
	0x03756144 MOV X3, X19
	0x03756148 LDP X1, X2, [X8 + 0x40]
	0x0375614C LDP X20, X19, [X31 + 0x20]
	0x03756150 LDP X22, X21, [X31 + 0x10]
	0x03756154 LDP X30, X23, [X31], #0x30
	0x03756158 B 0x3755D70
	0x0375615C SUB X31, X31, 0x160
	0x03756160 STR D8, [X31 + 0xF0]
	0x03756164 STP X29, X30, [X31 + 0x100]
	0x03756168 STP X28, X27, [X31 + 0x110]
	0x0375616C STP X26, X25, [X31 + 0x120]
	0x03756170 STP X24, X23, [X31 + 0x130]
	0x03756174 STP X22, X21, [X31 + 0x140]
	0x03756178 STP X20, X19, [X31 + 0x150]
	0x0375617C ADRP X21, 0xC8A000
	0x03756180 ADRP X24, 0x9C5000
	0x03756184 LDRB W8, [X21 + 0xDD5]
	0x03756188 LDR X24, [X24 + 0xEC0]
	0x0375618C MOV X19, X1
	0x03756190 MOV X20, X0
	0x03756194 TBNZ X8, 0x0, 0x37561C4
	0x03756198 ADRP X0, 0x9C5000
	0x0375619C LDR X0, [X0 + 0xEC0]
	0x037561A0 BL 0x1C16CF4
	0x037561A4 ADRP X0, 0x9EF000
	0x037561A8 LDR X0, [X0 + 0xEE0]
	0x037561AC BL 0x1C16CF4
	0x037561B0 ADRP X0, 0x9EF000
	0x037561B4 LDR X0, [X0 + 0xEE8]
	0x037561B8 BL 0x1C16CF4
	0x037561BC MOVZ W8, 0x1
	0x037561C0 STRB W8, [X21 + 0xDD5]
	0x037561C4 LDR X0, [X24]
	0x037561C8 STP X31, X31, [X31 + 0xD8]
	0x037561CC STR X31, [X31 + 0xE8]
	0x037561D0 LDR W8, [X0 + 0xE0]
	0x037561D4 CBNZ W8, 0x37561DC
	0x037561D8 BL 0x1C16DFC
	0x037561DC LDR X8, [X20]
	0x037561E0 FMOV S8, W31
	0x037561E4 CBZ X8, 0x3756478
	0x037561E8 LDR X25, [X8 + 0x18]
	0x037561EC CMP W25, 0x1
	0x037561F0 B.LT 0x375641C
	0x037561F4 ADD X9, X31, 0x90
	0x037561F8 MOV X26, X31
	0x037561FC MOV X27, X31
	0x03756200 AND X28, X25, 0x0
	0x03756204 ORR X21, X9, 0x7
	0x03756208 LDR W9, [X8 + 0x18]
	0x0375620C CMP X27, X9
	0x03756210 B.CS 0x37564A0
	0x03756214 LDR X0, [X24]
	0x03756218 ADD X8, X8, X26
	0x0375621C LDP X23, X29, [X8 + 0x20]
	0x03756220 LDR X22, [X8 + 0x30]
	0x03756224 LDR W9, [X0 + 0xE0]
	0x03756228 CBNZ W9, 0x3756234
	0x0375622C BL 0x1C16DFC
	0x03756230 LDR X0, [X24]
	0x03756234 LDR X8, [X0 + 0xB8]
	0x03756238 LDR X9, [X8 + 0x8]
	0x0375623C CMP X29, X9
	0x03756240 B.EQ 0x375635C
	0x03756244 LDR W9, [X0 + 0xE0]
	0x03756248 CBNZ W9, 0x3756258
	0x0375624C BL 0x1C16DFC
	0x03756250 LDR X0, [X24]
	0x03756254 LDR X8, [X0 + 0xB8]
	0x03756258 LDR X9, [X8 + 0x18]
	0x0375625C CMP X29, X9
	0x03756260 B.EQ 0x3756378
	0x03756264 LDR W9, [X0 + 0xE0]
	0x03756268 CBNZ W9, 0x3756278
	0x0375626C BL 0x1C16DFC
	0x03756270 LDR X0, [X24]
	0x03756274 LDR X8, [X0 + 0xB8]
	0x03756278 LDR X9, [X8 + 0x28]
	0x0375627C CMP X29, X9
	0x03756280 B.EQ 0x3756394
	0x03756284 LDR W9, [X0 + 0xE0]
	0x03756288 CBNZ W9, 0x3756298
	0x0375628C BL 0x1C16DFC
	0x03756290 LDR X0, [X24]

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Subtract X31, X31, 1264
	014 Move [X31+208], X0
	015 NotImplemented "Instruction MRS not yet implemented."
	016 Move [X31+32], X8
	017 Move X8, [X8+40]
	018 Move X19, 0xC8D000
	019 Move X24, X1
	020 Move [X31+1256], X8
	021 Move W8, [X19+3529]
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {85}
	026 Move X0, 0x9F2000
	027 Move X0, [X0+3552]
	028 Call 0x1C17CF4
	029 Move X0, 0x9F2000
	030 Move X0, [X0+3560]
	031 Call 0x1C17CF4
	032 Move X0, 0x9F2000
	033 Move X0, [X0+3568]
	034 Call 0x1C17CF4
	035 Move X0, 0x9F2000
	036 Move X0, [X0+3576]
	037 Call 0x1C17CF4
	038 Move X0, 0x9F2000
	039 Move X0, [X0+3584]
	040 Call 0x1C17CF4
	041 Move X0, 0x9C8000
	042 Move X0, [X0+3672]
	043 Call 0x1C17CF4
	044 Move X0, 0x9C8000
	045 Move X0, [X0+3664]
	046 Call 0x1C17CF4
	047 Move X0, 0x9F2000
	048 Move X0, [X0+1656]
	049 Call 0x1C17CF4
	050 Move X0, 0x9F2000
	051 Move X0, [X0+3592]
	052 Call 0x1C17CF4
	053 Move X0, 0x9C8000
	054 Move X0, [X0+3120]
	055 Call 0x1C17CF4
	056 Move X0, 0x9C8000
	057 Move X0, [X0+3136]
	058 Call 0x1C17CF4
	059 Move X0, 0x9F2000
	060 Move X0, [X0+3600]
	061 Call 0x1C17CF4
	062 Move X0, 0x9C8000
	063 Move X0, [X0+624]
	064 Call 0x1C17CF4
	065 Move X0, 0x9F1000
	066 Move X0, [X0+4024]
	067 Call 0x1C17CF4
	068 Move X0, 0x9F1000
	069 Move X0, [X0+3928]
	070 Call 0x1C17CF4
	071 Move X0, 0x9F1000
	072 Move X0, [X0+3936]
	073 Call 0x1C17CF4
	074 Move X0, 0x9F1000
	075 Move X0, [X0+4032]
	076 Call 0x1C17CF4
	077 Move X0, 0x9F2000
	078 Move X0, [X0+112]
	079 Call 0x1C17CF4
	080 Move X0, 0x9F2000
	081 Move X0, [X0+3608]
	082 Call 0x1C17CF4
	083 Move W8, 1
	084 Move [X19+3529], W8
	085 Move [X31+1036], W31
	086 Move [X31+904], X31
	087 Move [X31+896], X31
	088 Move [X31+912], X31
	089 Move [X31+856], X31
	090 Move [X31+848], X31
	091 Move [X31+760], X31
	092 Move [X31+752], X31
	093 Move X8, 0x9C8000
	094 Move X8, [X8+624]
	095 NotImplemented "Instruction MOVI not yet implemented."
	096 Move [X31+72], V0
	097 Move [X31+71], V0
	098 Move X0, [X8]
	099 Move [X31+70], V0
	100 Move [X31+69], V0
	101 Move [X31+68], V0
	102 Move [X31+67], V0
	103 Move [X31+66], V0
	104 Move [X31+65], V0
	105 Move [X31+992], V0
	106 Move [X31+1000], V0
	107 Move [X31+960], V0
	108 Move [X31+968], V0
	109 Move [X31+928], V0
	110 Move [X31+936], V0
	111 Move [X31+864], V0
	112 Move [X31+872], V0
	113 Move [X31+816], V0
	114 Move [X31+824], V0
	115 Move [X31+784], V0
	116 Move [X31+792], V0
	117 Move [X31+48], V0
	118 Move [X31+77], V0
	119 Move [X31+76], V0
	120 Move [X31+720], V0
	121 Move [X31+728], V0
	122 Move [X31+688], V0
	123 Move [X31+696], V0
	124 Move [X31+656], V0
	125 Move [X31+664], V0
	126 Move [X31+624], V0
	127 Move [X31+632], V0
	128 Move [X31+75], V0
	129 Move [X31+74], V0
	130 Move [X31+73], V0
	131 Move [X31+616], W31
	132 Move W8, [X0+224]
	133 Compare W8, 0
	134 JumpIfNotEqual {136}
	135 Call 0x1C17DFC
	136 Move X0, X31
	137 Call InputSystem.EnsureInitialized
	138 Compare X24, 0
	139 JumpIfEqual {1343}
	140 Move X9, [X24+40]
	141 Move X10, [X24+48]
	142 Compare X10, 0
	143 JumpIfEqual {146}
	144 Move W8, [X10+24]
	145 Move [X31+156], W8
	146 Move [X31+156], W31
	147 Move [X31+160], X9
	148 Move [X31+224], X10
	149 Compare X9, 0
	150 JumpIfEqual {152}
	151 Move W9, [X9+24]
	152 Move X19, 0x9C8000
	153 Move X19, [X19+3664]
	154 Move X25, [X31+208]
	155 NotImplemented "Instruction MOVI not yet implemented."
	156 Add X0, X31, 1040
	157 Move X12, X25
	158 Move W8, [X25+40]
	159 Move W11, [X25+44]
	160 Move W10, [X25+52]
	161 Move W4, [X25+56]
	162 Add X12, X12, 8
	163 Move W5, [X12]
	164 Move X13, X25
	165 Add W1, W8, 1
	166 Add W2, W11, W9
	167 Move [X31+72], X12
	168 Move W12, [X25]
	169 Move [X31+20], W12
	170 Add X13, X13, 4
	171 Move W6, [X13]
	172 Move [X31+136], X8
	173 Move W8, [X31+156]
	174 Move [X31+72], V0
	175 Move [X31+40], X13
	176 Move [X31+71], V0
	177 Add W3, W10, W8
	178 Move [X31+70], V0
	179 Move [X31+69], V0
	180 Move [X31+68], V0
	181 Move [X31+67], V0
	182 Move [X31+66], V0
	183 Move [X31+65], V0
	184 Move [X31+148], W9
	185 Move [X31+188], W11
	186 Move [X31+220], W10
	187 Move [X31+24], W4
	188 Move [X31+28], W6
	189 Move [X31+16], W5
	190 Call UnmanagedMemory.Allocate, X0, X1, X2, X3, X4, X5, X6
	191 Add X25, X25, 32
	192 Move X8, [X25]
	193 Compare X8, 0
	194 JumpIfEqual {202}
	195 Add X0, X31, 472
	196 Move W2, 128
	197 Move X1, X25
	198 Call 0x3EB2AC0
	199 Add X0, X31, 1040
	200 Add X1, X31, 472
	201 Call UnmanagedMemory.CopyDataFrom, X0, X1
	202 Add X1, X24, 104
	203 Add X0, X31, 928
	204 Move W2, 96
	205 Move [X31+1036], W31
	206 Call 0x3EB2AC0
	207 Add X8, X31, 384
	208 Move X0, X24
	209 Move X1, X31
	210 Call InputActionMap.get_devices, X0
	211 Move V0, [X31+24]
	212 Move X8, [X31+400]
	213 Move X3, [X19]
	214 Add X0, X31, 864
	215 Move [X31+56], V0
	216 Move [X31+912], X8
	217 Move X8, [X24+80]
	218 Move W1, 2
	219 Move W2, W31
	220 Move [X31+88], X8
	221 Call 0x2DFB684, X0, X1, X2
	222 Move W8, [X31+156]
	223 Move [X31+176], X24
	224 Move [X31+8], X25
	225 NotImplemented "Instruction CMP not yet implemented."
	226 Move X8, [X31+224]
	227 Compare X8, 0
	228 JumpIfEqual {1344}
	229 Move X8, [X31+208]
	230 Move X19, X31
	231 Add X9, X8, 184
	232 Move [X31+80], X9
	233 Add X10, X8, 168
	234 Add X9, X8, 160
	235 Add X8, X8, 176
	236 Move [X31+64], X8
	237 Move W8, [X31+156]
	238 Move [X31+48], X9
	239 Move [X31+56], X10
	240 Move W8, W8
	241 Move [X31+120], X8
	242 Move TEMP, 0
	243 Not TEMP
	244 Move W8, TEMP
	245 Move [X31+240], X31
	246 Move [X31+248], X8
	247 Move TEMP, 0
	248 Not TEMP
	249 Move W8, TEMP
	250 Move [X31+152], W8
	251 Move TEMP, 0
	252 Not TEMP
	253 Move W8, TEMP
	254 Move [X31+236], W8
	255 Move X9, [X31+224]
	256 Move W8, [X9+24]
	257 NotImplemented "Instruction CMP not yet implemented."
	258 Move X8, [X31+1080]
	259 Move [X31+200], X8
	260 Move W8, 88
	261 NotImplemented "Instruction MADD not yet implemented."
	262 Add X25, X25, 88
	263 Move W21, [X25]
	264 Move X8, [X31+248]
	265 And W27, W21, 12
	266 NotImplemented "Instruction CMP not yet implemented."
	267 NotImplemented "Instruction CSET not yet implemented."
	268 Add W31, W8, 1
	269 Subtract X28, X25, 56
	270 Move TEMP, X22
	271 And TEMP, TEMP, 1
	272 Compare TEMP, 1
	273 JumpIfEqual {832}
	274 Move X29, [X31+240]
	275 Move W24, [X31+236]
	276 NotImplemented "Instruction CMP not yet implemented."
	277 Move X8, [X31+88]
	278 Compare X8, 0
	279 JumpIfEqual {288}
	280 Move W24, W31
	281 Move X9, [X31+160]
	282 Compare X9, 0
	283 JumpIfEqual {864}
	284 Move W8, [X9+24]
	285 NotImplemented "Instruction CMP not yet implemented."
	286 Add X8, X9, W24
	287 Move X29, [X8+32]
	288 Move X8, [X31+224]
	289 Move W9, 88
	290 NotImplemented "Instruction MADD not yet implemented."
	291 Move X20, [X8+80]
	292 Move X0, X20
	293 Move X1, X31
	294 Call String.IsNullOrEmpty, X0
	295 Move TEMP, X0
	296 And TEMP, TEMP, 1
	297 Compare TEMP, 1
	298 JumpIfNotEqual {303}
	299 Move X29, X31
	300 Move TEMP, 0
	301 Not TEMP
	302 Move W24, TEMP
	303 Move X0, [X31+176]
	304 Move X1, X20
	305 Move X2, X31
	306 Call InputActionMap.FindActionIndex, X0, X1
	307 Move W24, W0
	308 Add W31, W0, 1
	309 Move X29, X31
	310 Move W8, [X31+220]
	311 Move W9, 88
	312 And W23, W21, 4
	313 Move [X31+132], W22
	314 Add W10, W8, W19
	315 Move X8, [X31+224]
	316 Move [X31+192], X10
	317 NotImplemented "Instruction NOP not yet implemented."
	318 NotImplemented "Instruction MADD not yet implemented."
	319 Move X20, [X8+96]
	320 Move X8, [X31+240]
	321 NotImplemented "Instruction CSEL not yet implemented."
	322 Move W8, [X31+236]
	323 NotImplemented "Instruction CSEL not yet implemented."
	324 Move X8, [X31+248]
	325 NotImplemented "Instruction CSEL not yet implemented."
	326 Compare X20, 0
	327 JumpIfNotEqual {332}
	328 Move X8, [X31+224]
	329 Move W9, 88
	330 NotImplemented "Instruction MADD not yet implemented."
	331 Move X20, [X8+48]
	332 Move X0, X20
	333 Move X1, X31
	334 Call String.IsNullOrEmpty, X0
	335 Move [X31+168], X28
	336 Move TEMP, X0
	337 And TEMP, TEMP, 1
	338 Compare TEMP, 1
	339 JumpIfNotEqual {353}
	340 Move X11, X26
	341 Move W10, W22
	342 Move W9, W21
	343 Move [X31+216], W31
	344 Move W28, W31
	345 Move W21, W31
	346 Move W26, W31
	347 Move TEMP, 0
	348 Not TEMP
	349 Move W20, TEMP
	350 Move TEMP, 0
	351 Not TEMP
	352 Move W27, TEMP
	353 NotImplemented "Instruction CMP not yet implemented."
	354 Move [X31+116], W27
	355 NotImplemented "Instruction CSET not yet implemented."
	356 Compare W23, 0
	357 JumpIfNotEqual {423}
	358 Compare X29, 0
	359 JumpIfEqual {423}
	360 Move X8, [X31+80]
	361 Move W8, [X8]
	362 Compare W8, 0
	363 JumpIfEqual {382}
	364 Move X8, 0x9F0000
	365 Move X8, [X8+3936]
	366 Move X1, [X8]
	367 Move X0, [X31+80]
	368 Add X8, X31, 384
	369 Call Nullable`1<InputBinding>.get_Value, X0
	370 Add X0, X31, 768
	371 Add X1, X31, 384
	372 Move W2, 88
	373 Call 0x3EB2AC0
	374 Add X0, X31, 768
	375 Move W2, 1
	376 Move X1, X28
	377 Call InputBinding.Matches, X0, X1, X2
	378 Move TEMP, X0
	379 And TEMP, TEMP, 1
	380 Compare TEMP, 1
	381 JumpIfNotEqual {340}
	382 Move W8, [X31+928]
	383 Compare W8, 0
	384 JumpIfEqual {403}
	385 Move X8, 0x9F0000
	386 Move X8, [X8+3936]
	387 Move X1, [X8]
	388 Add X8, X31, 384
	389 Add X0, X31, 928
	390 Call Nullable`1<InputBinding>.get_Value, X0
	391 Add X0, X31, 768
	392 Add X1, X31, 384
	393 Move W2, 88
	394 Call 0x3EB2AC0
	395 Add X0, X31, 768
	396 Move W2, 1
	397 Move X1, X28
	398 Call InputBinding.Matches, X0, X1, X2
	399 Move TEMP, X0
	400 And TEMP, TEMP, 1
	401 Compare TEMP, 1
	402 JumpIfNotEqual {340}
	403 Move X0, X29
	404 Add X0, X0, 80
	405 Move W8, [X0]
	406 Compare W8, 0
	407 JumpIfEqual {422}
	408 Move X8, 0x9F0000
	409 Move X8, [X8+3936]
	410 Move X1, [X8]
	411 Add X8, X31, 384
	412 Call Nullable`1<InputBinding>.get_Value, X0
	413 Add X0, X31, 768
	414 Add X1, X31, 384
	415 Move W2, 88
	416 Call 0x3EB2AC0
	417 Add X0, X31, 768
	418 Move W2, 1
	419 Move X1, X28
	420 Call InputBinding.Matches, X0, X1, X2
	421 Xor W27, W0, 1
	422 Move W27, W31
	423 Move [X31+96], X26
	424 Move [X31+108], W22
	425 Move [X31+112], W21
	426 Move W26, W31
	427 Move W21, W31
	428 Compare W23, 0
	429 JumpIfNotEqual {499}
	430 Move TEMP, X27
	431 And TEMP, TEMP, 1
	432 Compare TEMP, 1
	433 JumpIfEqual {499}
	434 Move X8, [X31+208]
	435 Move W9, [X31+864]
	436 Move W10, [X31+896]
	437 Move W8, [X8+56]
	438 Add W21, W9, W8
	439 Compare W10, 0
	440 JumpIfEqual {484}
	441 Move X8, 0x9F0000
	442 Move X8, [X8+4032]
	443 Move X1, [X8]
	444 Add X0, X31, 896
	445 Call Nullable`1<ReadOnlyArray`1<Object>>.get_Value, X0
	446 Move X8, X1
	447 ShiftRight X8, 32
	448 And X8, X8, 0x7FFFFFFF
	449 NotImplemented "Instruction CMP not yet implemented."
	450 Move [X31+752], X0
	451 Move [X31+760], X1
	452 Move [X31+216], W21
	453 Move W26, W31
	454 Move W21, W31
	455 Move X8, 0x9F1000
	456 Move X8, [X8+3608]
	457 Move X2, [X8]
	458 Add X0, X31, 752
	459 Move W1, W21
	460 Call ReadOnlyArray`1<Object>.get_Item, X0, X1
	461 Move X22, X0
	462 Compare X0, 0
	463 JumpIfEqual {831}
	464 Move X0, X22
	465 Move X1, X31
	466 Call InputDevice.get_added, X0
	467 Move TEMP, X0
	468 And TEMP, TEMP, 1
	469 Compare TEMP, 1
	470 JumpIfNotEqual {480}
	471 Move X8, 0x9F1000
	472 Move X8, [X8+3592]
	473 Move X4, [X8]
	474 Add X3, X31, 864
	475 Move X0, X22
	476 Move X1, X20
	477 Move W2, W31
	478 Call 0x2200C70, X0, X1, X2, X3
	479 Add W26, W0, W26
	480 Move W8, [X31+764]
	481 Add W21, W21, 1
	482 NotImplemented "Instruction CMP not yet implemented."
	483 Move W21, [X31+216]
	484 Move X8, 0x9C7000
	485 Move X8, [X8+624]
	486 Move X0, [X8]
	487 Move W8, [X0+224]
	488 Compare W8, 0
	489 JumpIfNotEqual {491}
	490 Call 0x1C17DFC
	491 Move X8, 0x9F1000
	492 Move X8, [X8+3600]
	493 Move X2, [X8]
	494 Add X1, X31, 864
	495 Move X0, X20
	496 Call 0x220C578, X0, X1
	497 Move W26, W0
	498 Move W26, W31
	499 Move [X31+216], W21
	500 Move TEMP, X27
	501 And TEMP, TEMP, 1
	502 Compare TEMP, 1
	503 JumpIfNotEqual {517}
	504 Move X8, [X31+96]
	505 Move W21, W31
	506 Move W28, W31
	507 Move TEMP, 0
	508 Not TEMP
	509 Move W27, TEMP
	510 Move [X31+240], X8
	511 Move W8, [X31+108]
	512 Move TEMP, 0
	513 Not TEMP
	514 Move W20, TEMP
	515 Move [X31+236], W8
	516 Move W8, [X31+112]
	517 Move X8, [X31+224]
	518 Move W9, 88
	519 NotImplemented "Instruction MADD not yet implemented."
	520 Move X20, [X8+112]
	521 Compare X20, 0
	522 JumpIfNotEqual {527}
	523 Move X8, [X31+224]
	524 Move W9, 88
	525 NotImplemented "Instruction MADD not yet implemented."
	526 Move X20, [X8+64]
	527 Move X0, X20
	528 Move X1, X31
	529 Call String.IsNullOrEmpty, X0
	530 Move TEMP, X0
	531 And TEMP, TEMP, 1
	532 Compare TEMP, 1
	533 JumpIfNotEqual {540}
	534 Move W21, W31
	535 Move TEMP, 0
	536 Not TEMP
	537 Move W27, TEMP
	538 Compare X29, 0
	539 JumpIfNotEqual {562}
	540 Move X8, 0x9C7000
	541 Move X8, [X8+3136]
	542 Move X8, [X8]
	543 Move X8, [X8+184]
	544 Move X1, [X8]
	545 Move X8, 0x9F1000
	546 Move X8, [X8+3584]
	547 Move X7, [X8]
	548 Move X0, [X31+208]
	549 Move X3, [X31+56]
	550 Move X5, [X31+176]
	551 Move X2, X20
	552 Move X4, X0
	553 Move X6, X28
	554 Call 0x21FCC3C, X0, X1, X2, X3, X4, X5, X6
	555 Move W27, W0
	556 Add W31, W0, 1
	557 Move X8, [X31+208]
	558 Move W8, [X8]
	559 Subtract W21, W8, W27
	560 Compare X29, 0
	561 JumpIfEqual {635}
	562 Move X0, [X29+48]
	563 Move X1, X31
	564 Call String.IsNullOrEmpty, X0
	565 Move TEMP, X0
	566 And TEMP, TEMP, 1
	567 Compare TEMP, 1
	568 JumpIfEqual {591}
	569 Move X8, 0x9C7000
	570 Move X8, [X8+3136]
	571 Move X2, [X29+48]
	572 Move X8, [X8]
	573 Move X8, [X8+184]
	574 Move X1, [X8]
	575 Move X8, 0x9F1000
	576 Move X8, [X8+3584]
	577 Move X7, [X8]
	578 Move X0, [X31+208]
	579 Move X3, [X31+56]
	580 Move X5, [X31+176]
	581 Move X6, X28
	582 Move X4, X0
	583 Call 0x21FCC3C, X0, X1, X2, X3, X4, X5, X6
	584 Add W31, W0, 1
	585 Move X8, [X31+208]
	586 Add W31, W27, 1
	587 Subtract W9, W21, W0
	588 NotImplemented "Instruction CSEL not yet implemented."
	589 Move W8, [X8]
	590 Add W21, W9, W8
	591 Move X8, [X31+224]
	592 Move W9, 88
	593 NotImplemented "Instruction MADD not yet implemented."
	594 Move X20, [X8+104]
	595 Compare X20, 0
	596 JumpIfNotEqual {601}
	597 Move X8, [X31+224]
	598 Move W9, 88
	599 NotImplemented "Instruction MADD not yet implemented."
	600 Move X20, [X8+56]
	601 Move X0, X20
	602 Move X1, X31
	603 Call String.IsNullOrEmpty, X0
	604 Move TEMP, X0
	605 And TEMP, TEMP, 1
	606 Compare TEMP, 1
	607 JumpIfNotEqual {612}
	608 Move W28, W31
	609 Move TEMP, 0
	610 Not TEMP
	611 Move W20, TEMP
	612 Move X8, 0x9C7000
	613 Move X8, [X8+3120]
	614 Move X8, [X8]
	615 Move X8, [X8+184]
	616 Move X1, [X8]
	617 Move X8, 0x9F1000
	618 Move X8, [X8+3576]
	619 Move X7, [X8]
	620 Move X0, [X31+208]
	621 Move X3, [X31+48]
	622 Move X4, [X31+72]
	623 Move X5, [X31+176]
	624 Move X2, X20
	625 Move X6, X28
	626 Call 0x21FCC3C, X0, X1, X2, X3, X4, X5, X6
	627 Move W20, W0
	628 Add W31, W0, 1
	629 Move X8, [X31+72]
	630 Move W8, [X8]
	631 Subtract W28, W8, W20
	632 Move W21, W31
	633 Compare X29, 0
	634 JumpIfNotEqual {562}
	635 Call 0x1C17F20
	636 Move W28, W31
	637 Move X0, [X29+56]
	638 Move X1, X31
	639 Call String.IsNullOrEmpty, X0
	640 Move TEMP, X0
	641 And TEMP, TEMP, 1
	642 Compare TEMP, 1
	643 JumpIfEqual {666}
	644 Move X8, 0x9C7000
	645 Move X8, [X8+3120]
	646 Move X2, [X29+56]
	647 Move X8, [X8]
	648 Move X8, [X8+184]
	649 Move X1, [X8]
	650 Move X8, 0x9F1000
	651 Move X8, [X8+3576]
	652 Move X7, [X8]
	653 Move X0, [X31+208]
	654 Move X3, [X31+48]
	655 Move X4, [X31+72]
	656 Move X6, [X31+168]
	657 Move X5, [X31+176]
	658 Call 0x21FCC3C, X0, X1, X2, X3, X4, X5, X6
	659 Add W31, W0, 1
	660 Move X8, [X31+72]
	661 Add W31, W20, 1
	662 Subtract W9, W28, W0
	663 NotImplemented "Instruction CSEL not yet implemented."
	664 Move W8, [X8]
	665 Add W28, W9, W8
	666 Compare W23, 0
	667 JumpIfEqual {732}
	668 Move X0, [X31+168]
	669 Move X1, [X31+176]
	670 Call InputBindingResolver.InstantiateBindingComposite, X0, X1
	671 Move X8, 0x9F1000
	672 Move X8, [X8+3568]
	673 Move X2, X0
	674 Move X4, [X8]
	675 Move X0, [X31+64]
	676 Move X1, [X31+40]
	677 Move W3, 10
	678 Call ArrayHelpers.AppendWithCapacity, X0, X1, X2, X3
	679 Move X8, [X31+208]
	680 Move W9, [X31+864]
	681 Move [X31+240], X29
	682 Move [X31+236], W24
	683 Move W8, [X8+56]
	684 Move [X31+152], W0
	685 Add W8, W9, W8
	686 Move [X31+216], W8
	687 Move X8, [X31+192]
	688 Move [X31+248], X8
	689 NotImplemented "Instruction CMP not yet implemented."
	690 Move W8, [X31+116]
	691 NotImplemented "Instruction CMP not yet implemented."
	692 Move X8, [X31+248]
	693 Add W31, W8, 1
	694 Move X8, [X31+168]
	695 Move X0, [X8]
	696 Move X1, X31
	697 Call String.IsNullOrEmpty, X0
	698 Move TEMP, X0
	699 And TEMP, TEMP, 1
	700 Compare TEMP, 1
	701 JumpIfEqual {866}
	702 Move X8, [X31+64]
	703 Move X8, [X8]
	704 Compare X8, 0
	705 JumpIfEqual {880}
	706 Move W9, [X8+24]
	707 Move W10, [X31+152]
	708 NotImplemented "Instruction CMP not yet implemented."
	709 Add X8, X8, W10
	710 Move X0, [X8+32]
	711 Move X8, [X31+168]
	712 Move X1, [X8]
	713 Add X2, X31, 1036
	714 Call InputBindingResolver.AssignCompositePartIndex, X0, X1, X2
	715 Move X8, [X31+248]
	716 Move X9, [X31+200]
	717 Move W24, W0
	718 Move X8, W8
	719 Add X22, X9, X8
	720 Move W8, [X22]
	721 Add W1, W26, W8
	722 Move X0, X22
	723 Call BindingState.set_controlCount, X0, X1
	724 NotImplemented "Instruction LDRH not yet implemented."
	725 Move W9, 0xFFFF
	726 NotImplemented "Instruction CMP not yet implemented."
	727 NotImplemented "Instruction CSINV not yet implemented."
	728 Move X11, [X31+240]
	729 Move X8, [X31+248]
	730 Move W10, [X31+236]
	731 Move W9, W8
	732 Move W8, [X31+112]
	733 Move W9, [X31+132]
	734 Add W31, W8, 1
	735 NotImplemented "Instruction CSET not yet implemented."
	736 Or W8, W8, W9
	737 Move TEMP, X8
	738 And TEMP, TEMP, 1
	739 Compare TEMP, 1
	740 JumpIfEqual {689}
	741 Move X11, X31
	742 Move TEMP, 0
	743 Not TEMP
	744 Move W9, TEMP
	745 Move TEMP, 0
	746 Not TEMP
	747 Move W8, TEMP
	748 Move TEMP, 0
	749 Not TEMP
	750 Move W10, TEMP
	751 Move [X31+1036], W31
	752 Move [X31+152], W8
	753 Move W8, [X31+188]
	754 Add W31, W24, 1
	755 Move [X31+236], W10
	756 Add W8, W24, W8
	757 NotImplemented "Instruction CSINV not yet implemented."
	758 Move W8, W9
	759 Move TEMP, 0
	760 Not TEMP
	761 Move W24, TEMP
	762 Move [X31+240], X11
	763 Move [X31+248], X8
	764 NotImplemented "Instruction MOVI not yet implemented."
	765 Move [X31+77], V0
	766 Move [X31+76], V0
	767 Move W1, [X31+216]
	768 Add X0, X31, 1216
	769 Call BindingState.set_controlStartIndex, X0, X1
	770 Add X0, X31, 1216
	771 Move W1, W26
	772 Call BindingState.set_controlCount, X0, X1
	773 Add X0, X31, 1216
	774 Move W1, W20
	775 Call BindingState.set_interactionStartIndex, X0, X1
	776 Add X0, X31, 1216
	777 Move W1, W28
	778 Call BindingState.set_interactionCount, X0, X1
	779 Add X0, X31, 1216
	780 Move W1, W27
	781 Call BindingState.set_processorStartIndex, X0, X1
	782 Add X0, X31, 1216
	783 Move W1, W21
	784 Call BindingState.set_processorCount, X0, X1
	785 Move W8, [X31+1220]
	786 Move W9, [X25]
	787 Move [X31+1221], W24
	788 And W8, W8, 0xFFFFFFF3
	789 And W9, W9, 8
	790 Or W8, W8, W23
	791 Or W8, W9, W8
	792 Move [X31+1220], W8
	793 Add X0, X31, 1216
	794 Move W1, W22
	795 Call BindingState.set_actionIndex, X0, X1
	796 Move W8, [X31+152]
	797 Move X9, [X31+248]
	798 NotImplemented "Instruction CMP not yet implemented."
	799 NotImplemented "Instruction CSEL not yet implemented."
	800 Move X24, [X31+176]
	801 Add X0, X31, 1216
	802 Call BindingState.set_compositeOrCompositeBindingIndex, X0, X1
	803 Move X8, [X31+208]
	804 Move W1, [X8+40]
	805 Add X0, X31, 1216
	806 Call BindingState.set_mapIndex, X0, X1
	807 Compare X29, 0
	808 JumpIfEqual {815}
	809 Move X0, X29
	810 Move X1, X31
	811 Call InputAction.get_wantsInitialStateCheck, X0
	812 And W31, W0, 1
	813 Move W8, 32
	814 NotImplemented "Instruction CSEL not yet implemented."
	815 Move W8, W31
	816 Move W9, [X31+1220]
	817 Move V0, [X31+77]
	818 And W9, W9, 0xFFFFFFDF
	819 Or W8, W9, W8
	820 Move [X31+1220], W8
	821 Move X8, [X31+192]
	822 Move X9, [X31+200]
	823 Move V1, [X31+76]
	824 Move X8, W8
	825 Add X8, X9, X8
	826 Move [X8], V1
	827 Move [X8+8], V0
	828 Move X8, [X31+120]
	829 Add X19, X19, 1
	830 NotImplemented "Instruction CMP not yet implemented."
	831 Call 0x1C17F20
	832 Add X0, X31, 384
	833 Move W2, 88
	834 Move X1, X28
	835 Move X22, X28
	836 Call 0x3EB2B30
	837 Move X0, 0x9CA000
	838 Move X0, [X0+1248]
	839 Call 0x1C17D08
	840 Add X1, X31, 384
	841 Call 0x1C17E04
	842 Move X20, X0
	843 Move X0, 0x9F1000
	844 Move X0, [X0+3616]
	845 Call 0x1C17D08
	846 Move X1, X20
	847 Move X2, X31
	848 Call String.Format, X0, X1
	849 Move X20, X0
	850 Move X0, 0x99F000
	851 Move X0, [X0+1456]
	852 Call 0x1C17D08
	853 Call 0x1C17F10
	854 Move X21, X0
	855 Move X1, X20
	856 Move X2, X31
	857 Call InvalidOperationException..ctor, X0, X1
	858 Move X0, 0x9F1000
	859 Move X0, [X0+3624]
	860 Call 0x1C17D08
	861 Move X1, X0
	862 Move X0, X21
	863 Call 0x1C17DEC
	864 Call 0x1C17F20
	865 Call 0x1C17F28
	866 Move X1, [X31+168]
	867 Add X0, X31, 384
	868 Move W2, 88
	869 Call 0x3EB2B30
	870 Move X0, 0x9CA000
	871 Move X0, [X0+1248]
	872 Call 0x1C17D08
	873 Add X1, X31, 384
	874 Call 0x1C17E04
	875 Move X8, [X31+64]
	876 Move X8, [X8]
	877 Compare X8, 0
	878 JumpIfNotEqual {882}
	879 Call 0x1C17F20
	880 Call 0x1C17F20
	881 Call 0x1C17F28
	882 Move W9, [X8+24]
	883 Move W10, [X31+152]
	884 NotImplemented "Instruction CMP not yet implemented."
	885 Move W9, [X31+152]
	886 Move X20, X0
	887 Add X8, X8, W9
	888 Move X21, [X8+32]
	889 Move X0, 0x9F1000
	890 Move X0, [X0+3632]
	891 Call 0x1C17D08
	892 Move X1, X20
	893 Move X2, X21
	894 Move X3, X31
	895 Call String.Format, X0, X1, X2
	896 Move X20, X0
	897 Move X0, 0x99F000
	898 Move X0, [X0+1456]
	899 Call 0x1C17D08
	900 Call 0x1C17F10
	901 Move X21, X0
	902 Move X1, X20
	903 Move X2, X31
	904 Call InvalidOperationException..ctor, X0, X1
	905 Move X0, 0x9F1000
	906 Move X0, [X0+3624]
	907 Call 0x1C17D08
	908 Move X1, X0
	909 Move X0, X21
	910 Call 0x1C17DEC
	911 Call 0x1C17F28
	912 Move X23, X1
	913 Move X20, X0
	914 Move X8, [X31+192]
	915 Move [X31+240], X29
	916 Move [X31+236], W24
	917 Move X8, [X31+96]
	918 Move X23, X1
	919 Move X20, X0
	920 Move [X31+240], X8
	921 Move W8, [X31+108]
	922 Move [X31+236], W8
	923 Move W8, [X31+112]
	924 Move [X31+248], X8
	925 Move X24, [X31+176]
	926 Move X23, X1
	927 Move X20, X0
	928 Move X24, [X31+176]
	929 Move TEMP, 0
	930 Not TEMP
	931 Move W8, TEMP
	932 Move X23, X1
	933 Move X20, X0
	934 Move [X31+248], X8
	935 Move X28, X22
	936 Move X23, X1
	937 Move X20, X0
	938 Move X23, X1
	939 Move X20, X0
	940 Move X24, [X31+176]
	941 Move X28, [X31+168]
	942 Move X23, X1
	943 Move X20, X0
	944 Move W8, W21
	945 Move [X31+240], X26
	946 Move [X31+236], W22
	947 Move X8, [X31+96]
	948 Move X23, X1
	949 Move X20, X0
	950 Move [X31+240], X8
	951 Move W8, [X31+108]
	952 Move [X31+236], W8
	953 Move W8, [X31+112]
	954 Move X24, [X31+176]
	955 Move [X31+248], X8
	956 NotImplemented "Instruction CMP not yet implemented."
	957 Move X0, X20
	958 Call 0x3EB2AD0
	959 Move X20, X0
	960 Move X0, 0x99F000
	961 Move X0, [X0+2000]
	962 Call 0x1C17D08
	963 Move X8, [X20]
	964 Move X1, [X8]
	965 Call 0x1C18270
	966 Move TEMP, X0
	967 And TEMP, TEMP, 1
	968 Compare TEMP, 1
	969 JumpIfNotEqual {1346}
	970 Move X20, [X20]
	971 NotImplemented "Instruction LDRSW not yet implemented."
	972 Add X8, X31, 600
	973 Move [X8], X20
	974 Add W8, W23, 1
	975 Move [X31+616], W8
	976 Call 0x3EB2AE0
	977 Compare X20, 0
	978 JumpIfEqual {1354}
	979 Move X0, X20
	980 Move X1, X31
	981 Call Exception.GetType, X0
	982 Compare X0, 0
	983 JumpIfEqual {1355}
	984 Move X8, [X0]
	985 Move X9, [X8+424]
	986 Move X1, [X8+432]
	987 NotImplemented "Instruction BLR not yet implemented."
	988 Move X21, X0
	989 Add X0, X31, 384
	990 Move W2, 88
	991 Move X1, X28
	992 Call 0x3EB2B30
	993 Move X0, 0x9CA000
	994 Move X0, [X0+1248]
	995 Call 0x1C17D08
	996 Add X1, X31, 384
	997 Call 0x1C17E04
	998 Move X22, X0
	999 Move X0, 0x9F1000
	1000 Move X0, [X0+3640]
	1001 Call 0x1C17D08
	1002 Move X1, X21
	1003 Move X2, X22
	1004 Move X3, X24
	1005 Move X4, X31
	1006 Call String.Format, X0, X1, X2, X3
	1007 Move X21, X0
	1008 Move X0, 0x99F000
	1009 Move X0, [X0+2600]
	1010 Call 0x1C17D08
	1011 Move W8, [X0+224]
	1012 Compare W8, 0
	1013 JumpIfNotEqual {1015}
	1014 Call 0x1C17DFC
	1015 Move X0, X21
	1016 Move X1, X31
	1017 Call Debug.LogError, X0
	1018 Move X0, X20
	1019 Move X1, X31
	1020 Call Debug.LogException, X0
	1021 Move X0, X20
	1022 Move X1, X31
	1023 Call ExceptionHelpers.IsExceptionIndicatingBugInCode, X0
	1024 Move [X31+616], W23
	1025 Move TEMP, X0
	1026 And TEMP, TEMP, 1
	1027 Compare TEMP, 1
	1028 JumpIfNotEqual {828}
	1029 Move X0, X20
	1030 Call 0x1C17F18
	1031 Move X8, [X31+208]
	1032 Move W20, [X31+864]
	1033 Move W9, [X31+1056]
	1034 Move W5, [X8+8]
	1035 Move W8, [X8+56]
	1036 NotImplemented "Instruction CMP not yet implemented."
	1037 Add W4, W8, W20
	1038 Move X10, [X31+40]
	1039 Move W9, [X31+1068]
	1040 Move X19, [X31+160]
	1041 Move W6, [X10]
	1042 NotImplemented "Instruction CMP not yet implemented."
	1043 Move W10, [X31+1064]
	1044 Move W6, W9
	1045 NotImplemented "Instruction CMP not yet implemented."
	1046 Move X8, [X31+40]
	1047 Move X19, [X31+160]
	1048 Move W6, [X8]
	1049 Move W1, [X31+1048]
	1050 Move W2, [X31+1052]
	1051 Move W3, [X31+1060]
	1052 NotImplemented "Instruction MOVI not yet implemented."
	1053 Move [X31+720], V0
	1054 Move [X31+728], V0
	1055 Move [X31+688], V0
	1056 Move [X31+696], V0
	1057 Move [X31+656], V0
	1058 Move [X31+664], V0
	1059 Move [X31+624], V0
	1060 Move [X31+632], V0
	1061 Add X0, X31, 624
	1062 Call UnmanagedMemory.Allocate, X0, X1, X2, X3, X4, X5, X6
	1063 Add X0, X31, 256
	1064 Add X1, X31, 1040
	1065 Move W2, 128
	1066 Call 0x3EB2AC0
	1067 Add X0, X31, 624
	1068 Add X1, X31, 256
	1069 Call UnmanagedMemory.CopyDataFrom, X0, X1
	1070 Move X0, [X31+1040]
	1071 Compare X0, 0
	1072 JumpIfEqual {1076}
	1073 Move W1, 4
	1074 Move X2, X31
	1075 Call UnsafeUtility.Free, X0, X1
	1076 Add X0, X31, 1040
	1077 Add X1, X31, 624
	1078 Move W2, 128
	1079 Call 0x3EB2AC0
	1080 Move X8, [X31+208]
	1081 Move W8, [X8+56]
	1082 Move X9, 0x9F1000
	1083 Move X9, [X9+3552]
	1084 Move [X31+860], W8
	1085 Move X8, [X31+208]
	1086 Move V0, [X31+864]
	1087 Move V1, [X31+880]
	1088 Move X4, [X9]
	1089 Add X0, X8, 24
	1090 Move [X31+384], V0
	1091 Move [X31+392], V1
	1092 Add X1, X31, 860
	1093 Add X2, X31, 384
	1094 Move W3, 10
	1095 Call 0x217492C, X0, X1, X2, X3
	1096 Move W8, [X31+156]
	1097 Move W16, [X31+148]
	1098 Move [X31+248], W20
	1099 NotImplemented "Instruction CMP not yet implemented."
	1100 Move W9, [X31+156]
	1101 Move X8, X31
	1102 Move W9, W9
	1103 Move W10, [X31+220]
	1104 Move X11, [X31+1080]
	1105 Add W10, W10, W8
	1106 Move X12, W10
	1107 Add X12, X11, X12
	1108 Move W11, [X12]
	1109 Compare X11, 0
	1110 JumpIfEqual {1119}
	1111 NotImplemented "Instruction LDRH not yet implemented."
	1112 Move X12, X12
	1113 ShiftRight X12, 62
	1114 And X12, X12, 0x1FFFFFFF
	1115 Move X13, [X31+1136]
	1116 Subtract X11, X11, 1
	1117 Move [X12], W10
	1118 Add X12, X12, 4
	1119 Add X8, X8, 1
	1120 NotImplemented "Instruction CMP not yet implemented."
	1121 Move X8, [X31+208]
	1122 Move W9, [X31+1056]
	1123 NotImplemented "Instruction LDRSW not yet implemented."
	1124 NotImplemented "Instruction CMP not yet implemented."
	1125 Add X10, X8, X8
	1126 Move W9, 1
	1127 Move X10, X10
	1128 ShiftRight X10, 60
	1129 And X10, X10, 0x7FFFFFF
	1130 Move W11, 0xFFFF
	1131 Move X12, [X31+1088]
	1132 Add X8, X8, 1
	1133 Add X12, X10, X12
	1134 Move [X12+2], W9
	1135 NotImplemented "Instruction STRH not yet implemented."
	1136 NotImplemented "Instruction LDRSW not yet implemented."
	1137 Add X10, X10, 48
	1138 NotImplemented "Instruction CMP not yet implemented."
	1139 NotImplemented "Instruction CMP not yet implemented."
	1140 Compare X19, 0
	1141 JumpIfEqual {1345}
	1142 Move X8, [X31+208]
	1143 Move W20, W31
	1144 Move W23, 0xFFFF
	1145 Move W25, 4
	1146 Move W21, [X8+52]
	1147 Move W8, [X31+156]
	1148 Move W26, 48
	1149 Move W22, W8
	1150 Move W8, [X19+24]
	1151 NotImplemented "Instruction CMP not yet implemented."
	1152 Add X8, X19, W20
	1153 Move X8, [X8+32]
	1154 Compare X8, 0
	1155 JumpIfEqual {1341}
	1156 Move W9, [X31+188]
	1157 Move W11, [X31+156]
	1158 Add W27, W20, W9
	1159 Move [X8+192], W27
	1160 Move X10, [X31+1120]
	1161 Move W9, W27
	1162 ShiftRight W9, 31
	1163 And W9, W9, 0x3FFFFFFF
	1164 NotImplemented "Instruction CMP not yet implemented."
	1165 NotImplemented "Instruction STRH not yet implemented."
	1166 Move W12, [X31+220]
	1167 Move W10, W31
	1168 Move W28, W31
	1169 Move TEMP, 0
	1170 Not TEMP
	1171 Move W29, TEMP
	1172 Move X11, X22
	1173 Move X13, [X31+1080]
	1174 Move X14, W12
	1175 Add X13, X13, X14
	1176 NotImplemented "Instruction LDRH not yet implemented."
	1177 NotImplemented "Instruction CMP not yet implemented."
	1178 NotImplemented "Instruction CSINV not yet implemented."
	1179 NotImplemented "Instruction CMP not yet implemented."
	1180 Move W14, [X13+4]
	1181 Move TEMP, X14
	1182 And TEMP, TEMP, 8
	1183 Compare TEMP, 8
	1184 JumpIfEqual {1200}
	1185 Move X14, [X31+1128]
	1186 Add W31, W29, 1
	1187 Add W10, W10, 1
	1188 NotImplemented "Instruction CSEL not yet implemented."
	1189 NotImplemented "Instruction STRH not yet implemented."
	1190 Move W14, [X13+4]
	1191 Move W13, [X13]
	1192 Add W21, W21, 1
	1193 Move TEMP, X14
	1194 And TEMP, TEMP, 4
	1195 Compare TEMP, 4
	1196 JumpIfEqual {1198}
	1197 Add W28, W28, W13
	1198 NotImplemented "Instruction CMP not yet implemented."
	1199 NotImplemented "Instruction CINC not yet implemented."
	1200 Subtract X11, X11, 1
	1201 Add W12, W12, 1
	1202 Move W28, W31
	1203 Move W10, W31
	1204 Move TEMP, 0
	1205 Not TEMP
	1206 Move W29, TEMP
	1207 Move X11, [X31+1120]
	1208 Or W9, W9, 1
	1209 NotImplemented "Instruction MOVI not yet implemented."
	1210 NotImplemented "Instruction STRH not yet implemented."
	1211 Move W24, [X8+24]
	1212 Move X19, [X31+1072]
	1213 Move [X31+73], V0
	1214 Move [X31+74], V0
	1215 Move [X31+75], V0
	1216 Add X0, X31, 1168
	1217 Move X1, [X31+136]
	1218 Call TriggerState.set_mapIndex, X0, X1
	1219 NotImplemented "Instruction CMP not yet implemented."
	1220 Move W8, [X31+1169]
	1221 NotImplemented "Instruction CSET not yet implemented."
	1222 Add W31, W29, 1
	1223 NotImplemented "Instruction CSEL not yet implemented."
	1224 NotImplemented "Instruction CMP not yet implemented."
	1225 NotImplemented "Instruction CSET not yet implemented."
	1226 NotImplemented "Instruction CCMP not yet implemented."
	1227 Move W11, 217
	1228 Move W10, W10
	1229 ShiftRight W10, 31
	1230 And W10, W10, 0x3FFFFFFF
	1231 And W8, W8, W11
	1232 NotImplemented "Instruction CSEL not yet implemented."
	1233 NotImplemented "Instruction BFM not yet implemented."
	1234 Or W9, W10, W11
	1235 Or W8, W9, W8
	1236 NotImplemented "Instruction STRH not yet implemented."
	1237 NotImplemented "Instruction STRH not yet implemented."
	1238 Move [X31+1169], W8
	1239 Add X0, X31, 1168
	1240 Call TriggerState.set_bindingIndex, X0, X1
	1241 Move W16, [X31+148]
	1242 NotImplemented "Instruction NOP not yet implemented."
	1243 NotImplemented "Instruction SMADDL not yet implemented."
	1244 Move V0, [X31+75]
	1245 Move V1, [X31+73]
	1246 Move V2, [X31+74]
	1247 Move X19, [X31+160]
	1248 Add W20, W20, 1
	1249 NotImplemented "Instruction CMP not yet implemented."
	1250 Move [X8+16], V2
	1251 Move [X8+24], V0
	1252 Move [X8], V1
	1253 Move X15, [X31+136]
	1254 Move X9, [X31+1160]
	1255 Move W13, 48
	1256 Move X14, [X31+208]
	1257 Move X8, W15
	1258 NotImplemented "Instruction MADD not yet implemented."
	1259 Move W9, [X31+188]
	1260 Move W12, [X14+4]
	1261 Move W10, [X14+8]
	1262 Move W11, [X14]
	1263 Move W13, [X31+24]
	1264 Move [X8], W9
	1265 Move [X8+4], W16
	1266 Move W9, [X31+248]
	1267 Move W1, [X31+16]
	1268 Move W0, [X31+20]
	1269 Move W17, [X31+28]
	1270 Move X2, [X31+176]
	1271 Move [X8+8], W13
	1272 Move [X8+12], W9
	1273 Move W13, [X31+220]
	1274 Move W9, [X31+156]
	1275 Subtract W10, W10, W1
	1276 Subtract W11, W11, W0
	1277 Subtract W12, W12, W17
	1278 Move [X8+16], W13
	1279 Move [X8+20], W9
	1280 Move [X8+24], W1
	1281 Move [X8+28], W10
	1282 Move [X8+32], W0
	1283 Move [X8+36], W11
	1284 Move [X8+40], W17
	1285 Move [X8+44], W12
	1286 Move [X2+88], W15
	1287 Move X9, 0x9F1000
	1288 Move W8, [X14+40]
	1289 Move X9, [X9+3560]
	1290 Add X0, X14, 16
	1291 Move [X31+856], W8
	1292 Move X4, [X9]
	1293 Add X1, X31, 856
	1294 Move W3, 4
	1295 Call ArrayHelpers.AppendWithCapacity, X0, X1, X2, X3
	1296 Move X19, [X31+8]
	1297 Move X0, [X19]
	1298 Compare X0, 0
	1299 JumpIfEqual {1313}
	1300 Move W1, 4
	1301 Move X2, X31
	1302 Call UnsafeUtility.Free, X0, X1
	1303 Move X8, [X31+208]
	1304 NotImplemented "Instruction MOVI not yet implemented."
	1305 Move [X8+152], X31
	1306 Move [X19+64], X31
	1307 Move [X19+32], V0
	1308 Move [X19+40], V0
	1309 Move [X19], V0
	1310 Move [X19+8], V0
	1311 Move [X8+112], V0
	1312 Move [X8+120], V0
	1313 Add X1, X31, 1040
	1314 Move W2, 128
	1315 Move X0, X19
	1316 Call 0x3EB2AC0
	1317 Move X8, 0x9C6000
	1318 Move X8, [X8+3672]
	1319 Add X0, X31, 864
	1320 Move X1, [X8]
	1321 Call 0x2DFC98C, X0
	1322 Move X8, [X31+32]
	1323 Move X8, [X8+40]
	1324 Move X9, [X31+1256]
	1325 NotImplemented "Instruction CMP not yet implemented."
	1326 Add X31, X31, 1264
	1327 Move X20, [X31+80]
	1328 Move X19, [X31+88]
	1329 Move X22, [X31+64]
	1330 Move X21, [X31+72]
	1331 Move X24, [X31+48]
	1332 Move X23, [X31+56]
	1333 Move X26, [X31+32]
	1334 Move X25, [X31+40]
	1335 Move X28, [X31+16]
	1336 Move X27, [X31+24]
	1337 Move X29, [X31+96]
	1338 Move X30, [X31+104]
	1339 Return 
	1340 Call 0x1C17F28
	1341 Call 0x1C17F20
	1342 Call 0x1C17F28
	1343 Call 0x1C17F20
	1344 Call 0x1C17F20
	1345 Call 0x1C17F20
	1346 Move W0, 8
	1347 Call 0x3EB2AF0
	1348 Move X8, [X20]
	1349 Move [X0], X8
	1350 Move X1, 0x75F000
	1351 Add X1, X1, 3672
	1352 Move X2, X31
	1353 Call 0x3EB2B00
	1354 Call 0x1C17F20
	1355 Call 0x1C17F20
	1356 Call 0x3EB2B20
	1357 Move X20, X0
	1358 Move W23, W1
	1359 Call 0x3EB2AE0
	1360 Move X20, X0
	1361 Move W23, W1
	1362 NotImplemented "Instruction CMP not yet implemented."
	1363 Move W8, 1
	1364 NotImplemented "Instruction CMP not yet implemented."
	1365 Move X0, X20
	1366 Call 0x3EB2AD0
	1367 Move X19, [X0]
	1368 Call 0x3EB2AE0
	1369 Move X8, 0x9C6000
	1370 Move X8, [X8+3672]
	1371 Add X0, X31, 864
	1372 Move X1, [X8]
	1373 Call 0x2DFC98C, X0
	1374 Compare X19, 0
	1375 JumpIfEqual {1322}
	1376 Move X0, X19
	1377 Call 0x1C17F18
	1378 Move X0, X20
	1379 Call 0x3EB2AD0
	1380 Move X19, X0
	1381 Move X0, 0x99E000
	1382 Move X0, [X0+2000]
	1383 Call 0x1C17D08
	1384 Move X8, [X19]
	1385 Move X1, [X8]
	1386 Call 0x1C18270
	1387 Move TEMP, X0
	1388 And TEMP, TEMP, 1
	1389 Compare TEMP, 1
	1390 JumpIfNotEqual {1415}
	1391 Move X19, [X19]
	1392 NotImplemented "Instruction LDRSW not yet implemented."
	1393 Add X8, X31, 600
	1394 Move [X8], X19
	1395 Call 0x3EB2AE0
	1396 Move X0, [X31+1040]
	1397 Compare X0, 0
	1398 JumpIfEqual {1411}
	1399 Move W1, 4
	1400 Move X2, X31
	1401 Call UnsafeUtility.Free, X0, X1
	1402 NotImplemented "Instruction MOVI not yet implemented."
	1403 Move [X31+1160], X31
	1404 Move [X31+1104], X31
	1405 Move [X31+65], V0
	1406 Move [X31+66], V0
	1407 Move [X31+67], V0
	1408 Move [X31+68], V0
	1409 Move [X31+70], V0
	1410 Move [X31+71], V0
	1411 Move [X31+616], W20
	1412 Move X0, X19
	1413 Call 0x1C17F18
	1414 Move X19, X31
	1415 Move W0, 8
	1416 Call 0x3EB2AF0
	1417 Move X8, [X19]
	1418 Move [X0], X8
	1419 Move X1, 0x75F000
	1420 Add X1, X1, 3672
	1421 Move X2, X31
	1422 Call 0x3EB2B00
	1423 Move X20, X0
	1424 Move W23, W1
	1425 Move X23, X1
	1426 Move X20, X0
	1427 Call 0x3EB2AE0
	1428 Move X20, X0
	1429 Move X8, 0x9C6000
	1430 Move X8, [X8+3672]
	1431 Move X1, [X8]
	1432 Add X0, X31, 864
	1433 Call 0x2DFC98C, X0
	1434 Compare X19, 0
	1435 JumpIfNotEqual {1438}
	1436 Move X0, X20
	1437 Call 0x1D2D690
	1438 Move X0, X19
	1439 Call 0x1C17F18
	1440 Call 0x1991590

Method: System.Int32 InstantiateWithParameters(UnityEngine.InputSystem.Utilities.TypeTable registrations, System.String namesAndParameters, ref TType[] array, ref System.Int32 count, UnityEngine.InputSystem.InputActionMap actionMap, ref UnityEngine.InputSystem.InputBinding binding)

Disassembly:
	0x021FCC3C BL 0x1C16DEC
	0x021FCC40 MOV X0, X23
	0x021FCC44 MOV X1, X22
	0x021FCC48 BL 0x1C171E0
	0x021FCC4C SUB X31, X31, 0x40
	0x021FCC50 STP X30, X23, [X31 + 0x10]
	0x021FCC54 STP X22, X21, [X31 + 0x20]
	0x021FCC58 STP X20, X19, [X31 + 0x30]
	0x021FCC5C LDR X8, [X2 + 0x38]
	0x021FCC60 MOV X19, X2
	0x021FCC64 MOV X23, X1
	0x021FCC68 MOV X20, X0
	0x021FCC6C CBNZ X8, 0x21FCC8C
	0x021FCC70 ADRP X0, 0x1F1F000
	0x021FCC74 LDR X0, [X0 + 0xD18]
	0x021FCC78 BL 0x1C16CF4
	0x021FCC7C LDR X8, [X19 + 0x38]
	0x021FCC80 CBNZ X8, 0x21FCC8C
	0x021FCC84 MOV X0, X19
	0x021FCC88 BL 0x1C5C6E0
	0x021FCC8C CBZ X20, 0x21FCCF4
	0x021FCC90 STP X31, X31, [X23]
	0x021FCC94 STUR X31, [X23 + 0x16]
	0x021FCC98 STR X31, [X23 + 0x10]
	0x021FCC9C ADRP X8, 0x1F1F000
	0x021FCCA0 LDR X8, [X8 + 0xD18]
	0x021FCCA4 LDR W22, [X20 + 0x10]
	0x021FCCA8 LDR X0, [X8]
	0x021FCCAC LDR W8, [X0 + 0xE0]
	0x021FCCB0 CBNZ W8, 0x21FCCB8
	0x021FCCB4 BL 0x1C16DFC
	0x021FCCB8 LDR X8, [X19 + 0x38]
	0x021FCCBC MOV X0, X23
	0x021FCCC0 LDR X1, [X8 + 0x10]
	0x021FCCC4 BL 0x37FFBBC
	0x021FCCC8 CMP W22, W0
	0x021FCCCC B.NE 0x21FCD2C
	0x021FCCD0 MOV X0, X20
	0x021FCCD4 MOV X1, X23
	0x021FCCD8 LDP X20, X19, [X31 + 0x30]
	0x021FCCDC LDP X22, X21, [X31 + 0x20]
	0x021FCCE0 LDP X30, X23, [X31 + 0x10]
	0x021FCCE4 MOVZ W2, 0x1E
	0x021FCCE8 MOV X3, X31
	0x021FCCEC ADD X31, X31, 0x40
	0x021FCCF0 B 0x3773E74
	0x021FCCF4 ADRP X0, 0x1EFC000
	0x021FCCF8 LDR X0, [X0 + 0x528]
	0x021FCCFC BL 0x1C16D08
	0x021FCD00 BL 0x1C16F10
	0x021FCD04 MOV X20, X0
	0x021FCD08 ADRP X0, 0x1F1F000
	0x021FCD0C LDR X0, [X0 + 0xD20]
	0x021FCD10 BL 0x1C16D08
	0x021FCD14 MOV X1, X0
	0x021FCD18 MOV X0, X20
	0x021FCD1C MOV X2, X31
	0x021FCD20 BL 0x330E100
	0x021FCD24 MOV X0, X20
	0x021FCD28 B 0x21FCECC
	0x021FCD2C ADRP X0, 0x1EF7000
	0x021FCD30 LDR X0, [X0 + 0x9D0]
	0x021FCD34 BL 0x1C16D08
	0x021FCD38 MOVZ W1, 0x4
	0x021FCD3C BL 0x1C16D6C
	0x021FCD40 LDR X8, [X19 + 0x38]
	0x021FCD44 MOV X21, X0
	0x021FCD48 ADRP X0, 0x1EF7000
	0x021FCD4C LDR X22, [X8 + 0x18]
	0x021FCD50 LDR X0, [X0 + 0x6C0]
	0x021FCD54 BL 0x1C16D08
	0x021FCD58 BL 0x19903D0
	0x021FCD5C MOV X0, X22
	0x021FCD60 MOV X1, X31
	0x021FCD64 BL 0x338C698
	0x021FCD68 MOV X22, X0
	0x021FCD6C BL 0x19903C0
	0x021FCD70 LDR X8, [X22]
	0x021FCD74 MOV X0, X22
	0x021FCD78 LDP X9, X1, [X8 + 0x1A8]
	0x021FCD7C BLR X9
	0x021FCD80 MOV X22, X0
	0x021FCD84 MOV X0, X21
	0x021FCD88 BL 0x19903C0
	0x021FCD8C MOV X0, X21
	0x021FCD90 MOV X1, X22
	0x021FCD94 BL 0x19980B4
	0x021FCD98 MOV X0, X21
	0x021FCD9C MOV X1, X31
	0x021FCDA0 MOV X2, X22
	0x021FCDA4 BL 0x1993444
	0x021FCDA8 LDR X8, [X19 + 0x38]
	0x021FCDAC MOV X0, X23
	0x021FCDB0 LDR X1, [X8 + 0x10]
	0x021FCDB4 BL 0x37FFBBC
	0x021FCDB8 STR W0, [X31 + 0x8]
	0x021FCDBC ADRP X22, 0x1F1F000
	0x021FCDC0 LDR X22, [X22 + 0xD28]
	0x021FCDC4 MOV X0, X22
	0x021FCDC8 BL 0x1C16D08
	0x021FCDCC ADD X1, X31, 0x8
	0x021FCDD0 BL 0x1C16E04
	0x021FCDD4 MOV X23, X0
	0x021FCDD8 MOV X0, X21
	0x021FCDDC BL 0x19903C0
	0x021FCDE0 MOV X0, X21
	0x021FCDE4 MOV X1, X23
	0x021FCDE8 BL 0x19980B4
	0x021FCDEC MOVZ W1, 0x1
	0x021FCDF0 MOV X0, X21
	0x021FCDF4 MOV X2, X23
	0x021FCDF8 BL 0x1993444
	0x021FCDFC MOV X0, X21
	0x021FCE00 BL 0x19903C0
	0x021FCE04 MOV X0, X21
	0x021FCE08 MOV X1, X20
	0x021FCE0C BL 0x19980B4
	0x021FCE10 MOVZ W1, 0x2
	0x021FCE14 MOV X0, X21
	0x021FCE18 MOV X2, X20
	0x021FCE1C BL 0x1993444
	0x021FCE20 MOV X0, X20
	0x021FCE24 BL 0x19903C0
	0x021FCE28 ADRP X0, 0x1F1F000
	0x021FCE2C LDR X20, [X20 + 0x10]
	0x021FCE30 LDR X0, [X0 + 0xD18]
	0x021FCE34 BL 0x1C16D08
	0x021FCE38 BL 0x19903D0
	0x021FCE3C MOV X0, X22
	0x021FCE40 STR W20, [X31]
	0x021FCE44 BL 0x1C16D08
	0x021FCE48 ADD X1, X31, 0x0
	0x021FCE4C BL 0x1C16E04
	0x021FCE50 MOV X20, X0
	0x021FCE54 MOV X0, X21
	0x021FCE58 BL 0x19903C0
	0x021FCE5C MOV X0, X21
	0x021FCE60 MOV X1, X20
	0x021FCE64 BL 0x19980B4
	0x021FCE68 MOVZ W1, 0x3
	0x021FCE6C MOV X0, X21
	0x021FCE70 MOV X2, X20
	0x021FCE74 BL 0x1993444
	0x021FCE78 ADRP X0, 0x1F1F000
	0x021FCE7C LDR X0, [X0 + 0xD30]
	0x021FCE80 BL 0x1C16D08
	0x021FCE84 MOV X1, X21
	0x021FCE88 MOV X2, X31
	0x021FCE8C BL 0x3227C5C
	0x021FCE90 MOV X20, X0
	0x021FCE94 ADRP X0, 0x1EFF000
	0x021FCE98 LDR X0, [X0 + 0x578]
	0x021FCE9C BL 0x1C16D08
	0x021FCEA0 BL 0x1C16F10
	0x021FCEA4 MOV X21, X0
	0x021FCEA8 ADRP X0, 0x1F1F000
	0x021FCEAC LDR X0, [X0 + 0xD38]
	0x021FCEB0 BL 0x1C16D08
	0x021FCEB4 MOV X2, X0
	0x021FCEB8 MOV X0, X21
	0x021FCEBC MOV X1, X20
	0x021FCEC0 MOV X3, X31
	0x021FCEC4 BL 0x330E16C
	0x021FCEC8 MOV X0, X21
	0x021FCECC MOV X1, X19
	0x021FCED0 BL 0x1C16DEC
	0x021FCED4 STP X29, X30, [X31 - 0x50]!
	0x021FCED8 STR X25, [X31 + 0x10]
	0x021FCEDC STP X24, X23, [X31 + 0x20]
	0x021FCEE0 STP X22, X21, [X31 + 0x30]
	0x021FCEE4 STP X20, X19, [X31 + 0x40]
	0x021FCEE8 ADD X29, X31, 0x0
	0x021FCEEC SUB X31, X31, 0x20
	0x021FCEF0 MRS X24, 0xC000
	0x021FCEF4 LDR X8, [X24 + 0x28]
	0x021FCEF8 MOV X19, X2
	0x021FCEFC MOV X21, X1
	0x021FCF00 MOV X20, X0
	0x021FCF04 STUR X8, [X29 - 0x8]
	0x021FCF08 LDR X8, [X2 + 0x38]
	0x021FCF0C CBNZ X8, 0x21FCF30
	0x021FCF10 ADRP X0, 0x1F1F000
	0x021FCF14 LDR X0, [X0 + 0xD18]
	0x021FCF18 BL 0x1C16CF4
	0x021FCF1C LDR X8, [X19 + 0x38]
	0x021FCF20 CBNZ X8, 0x21FCF30
	0x021FCF24 MOV X0, X19
	0x021FCF28 BL 0x1C5C6E0
	0x021FCF2C LDR X8, [X19 + 0x38]
	0x021FCF30 LDR X0, [X8 + 0x8]
	0x021FCF34 ADD X8, X0, 0x135
	0x021FCF38 LDRH W8, [X8]
	0x021FCF3C LDR W23, [X0 + 0xFC]
	0x021FCF40 TBNZ X8, 0x0, 0x21FCF64
	0x021FCF44 BL 0x1C5C684
	0x021FCF48 LDR X9, [X19 + 0x38]
	0x021FCF4C MOV X8, X0
	0x021FCF50 LDR X0, [X9 + 0x8]
	0x021FCF54 LDR W9, [X8 + 0xFC]
	0x021FCF58 ADD X8, X0, 0x135
	0x021FCF5C LDRH W8, [X8]
	0x021FCF60 B 0x21FCF68
	0x021FCF64 MOV W9, W23
	0x021FCF68 ADD W9, W9, 0x10
	0x021FCF6C ADD X9, X9, 0xF
	0x021FCF70 ADD X10, X31, 0x0
	0x021FCF74 AND X9, X9, 0x1FFFFFFFF
	0x021FCF78 SUB X22, X10, X9
	0x021FCF7C ADD X31, X22, 0x0
	0x021FCF80 TBNZ X8, 0x0, 0x21FCF88
	0x021FCF84 BL 0x1C5C684
	0x021FCF88 LDR W8, [X0 + 0xFC]
	0x021FCF8C ADD X9, X31, 0x0
	0x021FCF90 ADD W8, W8, 0x10
	0x021FCF94 ADD X8, X8, 0xF
	0x021FCF98 AND X8, X8, 0x1FFFFFFFF
	0x021FCF9C SUB X25, X9, X8
	0x021FCFA0 ADD X31, X25, 0x0
	0x021FCFA4 CBZ X20, 0x21FD078
	0x021FCFA8 MOV X0, X21
	0x021FCFAC MOV W1, W31
	0x021FCFB0 MOV X2, X23
	0x021FCFB4 BL 0x3EB1B10
	0x021FCFB8 ADRP X8, 0x1F1F000
	0x021FCFBC LDR X8, [X8 + 0xD18]
	0x021FCFC0 LDR W23, [X20 + 0x10]
	0x021FCFC4 LDR X0, [X8]
	0x021FCFC8 LDR W8, [X0 + 0xE0]
	0x021FCFCC CBNZ W8, 0x21FCFD4
	0x021FCFD0 BL 0x1C16DFC
	0x021FCFD4 LDR X8, [X19 + 0x38]
	0x021FCFD8 LDR X0, [X8 + 0x8]
	0x021FCFDC LDRB W9, [X0 + 0x135]
	0x021FCFE0 TBNZ X9, 0x0, 0x21FCFEC
	0x021FCFE4 BL 0x1C5C684
	0x021FCFE8 LDR X8, [X19 + 0x38]
	0x021FCFEC LDR X1, [X8 + 0x10]
	0x021FCFF0 SUB X5, X29, 0x10
	0x021FCFF4 MOV X2, X22
	0x021FCFF8 MOV X3, X21
	0x021FCFFC MOV X4, X31
	0x021FD000 BL 0x1C17728
	0x021FD004 LDUR W8, [X29 - 0x10]
	0x021FD008 CMP W8, W23
	0x021FD00C B.NE 0x21FD0B0
	0x021FD010 LDR X8, [X19 + 0x38]
	0x021FD014 LDR X0, [X8 + 0x20]
	0x021FD018 LDR X8, [X0]
	0x021FD01C BLR X8
	0x021FD020 LDR X8, [X19 + 0x38]
	0x021FD024 MOV W19, W0
	0x021FD028 MOV X0, X21
	0x021FD02C LDR X1, [X8 + 0x28]
	0x021FD030 LDR X8, [X1]
	0x021FD034 BLR X8
	0x021FD038 MOV X1, X0
	0x021FD03C MOV X0, X20
	0x021FD040 MOV W2, W19
	0x021FD044 MOV X3, X31
	0x021FD048 BL 0x3773E74
	0x021FD04C LDR X8, [X24 + 0x28]
	0x021FD050 LDUR X9, [X29 - 0x8]
	0x021FD054 CMP X8, X9
	0x021FD058 B.NE 0x21FD268
	0x021FD05C ADD X31, X29, 0x0
	0x021FD060 LDP X20, X19, [X31 + 0x40]
	0x021FD064 LDP X22, X21, [X31 + 0x30]
	0x021FD068 LDP X24, X23, [X31 + 0x20]
	0x021FD06C LDR X25, [X31 + 0x10]
	0x021FD070 LDP X29, X30, [X31], #0x50
	0x021FD074 RET
	0x021FD078 ADRP X0, 0x1EFB000
	0x021FD07C LDR X0, [X0 + 0x528]
	0x021FD080 BL 0x1C16D08
	0x021FD084 BL 0x1C16F10
	0x021FD088 MOV X20, X0
	0x021FD08C ADRP X0, 0x1F1E000
	0x021FD090 LDR X0, [X0 + 0xD20]
	0x021FD094 BL 0x1C16D08
	0x021FD098 MOV X1, X0
	0x021FD09C MOV X0, X20
	0x021FD0A0 MOV X2, X31
	0x021FD0A4 BL 0x330E100
	0x021FD0A8 MOV X0, X20
	0x021FD0AC B 0x21FD260
	0x021FD0B0 ADRP X0, 0x1EF6000
	0x021FD0B4 LDR X0, [X0 + 0x9D0]
	0x021FD0B8 BL 0x1C16D08
	0x021FD0BC MOVZ W1, 0x4
	0x021FD0C0 BL 0x1C16D6C
	0x021FD0C4 LDR X8, [X19 + 0x38]
	0x021FD0C8 MOV X22, X0
	0x021FD0CC ADRP X0, 0x1EF6000
	0x021FD0D0 LDR X23, [X8 + 0x18]
	0x021FD0D4 LDR X0, [X0 + 0x6C0]
	0x021FD0D8 BL 0x1C16D08
	0x021FD0DC BL 0x19903D0
	0x021FD0E0 MOV X0, X23
	0x021FD0E4 MOV X1, X31
	0x021FD0E8 BL 0x338C698
	0x021FD0EC MOV X23, X0
	0x021FD0F0 BL 0x19903C0
	0x021FD0F4 LDR X8, [X23]
	0x021FD0F8 MOV X0, X23
	0x021FD0FC LDP X9, X1, [X8 + 0x1A8]
	0x021FD100 BLR X9
	0x021FD104 MOV X23, X0
	0x021FD108 MOV X0, X22
	0x021FD10C BL 0x19903C0
	0x021FD110 MOV X0, X22
	0x021FD114 MOV X1, X23
	0x021FD118 BL 0x19980B4
	0x021FD11C MOV X0, X22
	0x021FD120 MOV X1, X31
	0x021FD124 MOV X2, X23
	0x021FD128 BL 0x1993444
	0x021FD12C LDR X0, [X19 + 0x38]

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+80], X29
	003 Move [X31+88], X30
	004 Move [X31+96], X28
	005 Move [X31+104], X27
	006 Move [X31+112], X26
	007 Move [X31+120], X25
	008 Move [X31+128], X24
	009 Move [X31+136], X23
	010 Move [X31+144], X22
	011 Move [X31+152], X21
	012 Move [X31+160], X20
	013 Move [X31+168], X19
	014 Move [X31+72], X1
	015 Move X8, [X7+56]
	016 Move X19, X7
	017 Move X22, X4
	018 Move X24, X2
	019 Move X27, X0
	020 Move [X31+24], X5
	021 Move [X31+32], X6
	022 Move [X31+16], X3
	023 Compare X8, 0
	024 JumpIfNotEqual {66}
	025 Move X0, 0x1EF8000
	026 Move X0, [X0+2600]
	027 Call 0x1C17CF4
	028 Move X0, 0x1F20000
	029 Move X0, [X0+3248]
	030 Call 0x1C17CF4
	031 Move X0, 0x1F20000
	032 Move X0, [X0+3256]
	033 Call 0x1C17CF4
	034 Move X0, 0x1EF8000
	035 Move X0, [X0+2760]
	036 Call 0x1C17CF4
	037 Move X0, 0x1EF8000
	038 Move X0, [X0+1728]
	039 Call 0x1C17CF4
	040 Move X0, 0x1F20000
	041 Move X0, [X0+3264]
	042 Call 0x1C17CF4
	043 Move X0, 0x1F20000
	044 Move X0, [X0+3272]
	045 Call 0x1C17CF4
	046 Move X0, 0x1F20000
	047 Move X0, [X0+3280]
	048 Call 0x1C17CF4
	049 Move X0, 0x1F20000
	050 Move X0, [X0+3288]
	051 Call 0x1C17CF4
	052 Move X0, 0x1F20000
	053 Move X0, [X0+3296]
	054 Call 0x1C17CF4
	055 Move X0, 0x1F20000
	056 Move X0, [X0+3304]
	057 Call 0x1C17CF4
	058 Move X0, 0x1F20000
	059 Move X0, [X0+3312]
	060 Call 0x1C17CF4
	061 Move X8, [X19+56]
	062 Compare X8, 0
	063 JumpIfNotEqual {66}
	064 Move X0, X19
	065 Call 0x1C5D6E0
	066 Add X26, X27, 288
	067 Move X0, X24
	068 Move X1, X26
	069 Move X2, X31
	070 Call NameAndParameters.ParseMultiple, X0, X1
	071 Move TEMP, X0
	072 And TEMP, TEMP, 1
	073 Compare TEMP, 1
	074 JumpIfNotEqual {330}
	075 Move X0, [X26]
	076 Compare X0, 0
	077 JumpIfEqual {329}
	078 Move W8, [X22]
	079 Move X23, 0x1F20000
	080 Move X25, 0x1EF8000
	081 Move W28, W31
	082 Move [X31+12], W8
	083 Move X23, [X23+3256]
	084 Move X25, [X25+1728]
	085 Move [X31+40], X27
	086 Move W8, [X0+24]
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Move X2, [X23]
	089 Add X8, X31, 48
	090 Move W1, W28
	091 Call List`1<NameAndParameters>.get_Item, X0, X1
	092 Move X29, [X31+48]
	093 Add X0, X31, 72
	094 Move X2, X31
	095 Move X1, X29
	096 Call TypeTable.LookupTypeRegistration, X0, X1
	097 Move X8, [X25]
	098 Move X20, X0
	099 Move W9, [X8+224]
	100 Compare W9, 0
	101 JumpIfNotEqual {104}
	102 Move X0, X8
	103 Call 0x1C17DFC
	104 Move X0, X20
	105 Move X1, X31
	106 Move X2, X31
	107 Call Type.op_Equality, X0, X1
	108 Move TEMP, X0
	109 And TEMP, TEMP, 1
	110 Compare TEMP, 1
	111 JumpIfNotEqual {180}
	112 Move X8, 0x1EF8000
	113 Move X8, [X8+2760]
	114 Move W1, 7
	115 Move X0, [X8]
	116 Call 0x1C17D6C
	117 Compare X0, 0
	118 JumpIfEqual {329}
	119 Move W8, [X0+24]
	120 Move X20, X0
	121 Compare W8, 0
	122 JumpIfEqual {348}
	123 Move X8, 0x1F20000
	124 Move X8, [X8+3296]
	125 Move X8, [X8]
	126 Move [X20+32], X8
	127 Move X0, [X25]
	128 Move X8, [X19+56]
	129 Move W9, [X0+224]
	130 Move X21, [X8]
	131 Compare W9, 0
	132 JumpIfNotEqual {134}
	133 Call 0x1C17DFC
	134 Move X0, X21
	135 Move X1, X31
	136 Call Type.GetTypeFromHandle, X0
	137 Compare X0, 0
	138 JumpIfEqual {329}
	139 Move X8, [X0]
	140 Move X9, [X8+424]
	141 Move X1, [X8+432]
	142 NotImplemented "Instruction BLR not yet implemented."
	143 Move W8, [X20+24]
	144 NotImplemented "Instruction CMP not yet implemented."
	145 NotImplemented "Instruction CMP not yet implemented."
	146 Move [X20+40], X0
	147 Move X9, 0x1F20000
	148 Move X9, [X9+3312]
	149 NotImplemented "Instruction CMP not yet implemented."
	150 Move X9, [X9]
	151 Move [X20+48], X9
	152 NotImplemented "Instruction CMP not yet implemented."
	153 Move [X20+56], X29
	154 Move X9, 0x1F20000
	155 Move X9, [X9+3272]
	156 NotImplemented "Instruction CMP not yet implemented."
	157 Move X9, [X9]
	158 Move [X20+64], X9
	159 NotImplemented "Instruction CMP not yet implemented."
	160 Move [X20+72], X24
	161 Move X8, 0x1F20000
	162 Move X8, [X8+3304]
	163 Move X0, X20
	164 Move X1, X31
	165 Move X8, [X8]
	166 Move [X20+80], X8
	167 Call String.Concat, X0
	168 Move X8, 0x1EF8000
	169 Move X8, [X8+2600]
	170 Move X20, X0
	171 Move X8, [X8]
	172 Move W9, [X8+224]
	173 Compare W9, 0
	174 JumpIfNotEqual {177}
	175 Move X0, X8
	176 Call 0x1C17DFC
	177 Move X0, X20
	178 Move X1, X31
	179 Call Debug.LogError, X0
	180 Move W8, [X27+280]
	181 Compare W8, 0
	182 JumpIfEqual {186}
	183 Move W8, [X22]
	184 Add W8, W8, 1
	185 Move [X22], W8
	186 Move X0, X20
	187 Move X1, X31
	188 Call Activator.CreateInstance, X0
	189 Move X8, [X19+56]
	190 Move X27, X0
	191 Move X1, [X8+8]
	192 Move W8, [X1+309]
	193 Move TEMP, X8
	194 And TEMP, TEMP, 1
	195 Compare TEMP, 1
	196 JumpIfEqual {200}
	197 Move X0, X1
	198 Call 0x1C5D684
	199 Move X1, X0
	200 Move X0, X27
	201 Call 0x1C17E00
	202 Compare X0, 0
	203 JumpIfEqual {222}
	204 Move X8, [X19+56]
	205 Move X21, [X8+8]
	206 Move W8, [X21+309]
	207 Move TEMP, X8
	208 And TEMP, TEMP, 1
	209 Compare TEMP, 1
	210 JumpIfEqual {214}
	211 Move X0, X21
	212 Call 0x1C5D684
	213 Move X21, X0
	214 Compare X27, 0
	215 JumpIfEqual {300}
	216 Move X0, X27
	217 Move X1, X21
	218 Call 0x1C17E00
	219 Move X20, X0
	220 Compare X0, 0
	221 JumpIfNotEqual {301}
	222 Move X8, 0x1EF8000
	223 Move X8, [X8+2760]
	224 Move W1, 8
	225 Move X0, [X8]
	226 Call 0x1C17D6C
	227 Compare X0, 0
	228 JumpIfEqual {329}
	229 Move W8, [X0+24]
	230 Move X27, X0
	231 Compare W8, 0
	232 JumpIfEqual {348}
	233 Move X8, 0x1F20000
	234 Move X8, [X8+3280]
	235 Move X8, [X8]
	236 Move [X27+32], X8
	237 Compare X20, 0
	238 JumpIfEqual {329}
	239 Move X8, [X20]
	240 Move X0, X20
	241 Move X9, [X8+424]
	242 Move X1, [X8+432]
	243 NotImplemented "Instruction BLR not yet implemented."
	244 Move W8, [X27+24]
	245 NotImplemented "Instruction CMP not yet implemented."
	246 NotImplemented "Instruction CMP not yet implemented."
	247 Move [X27+40], X0
	248 Move X9, 0x1F20000
	249 Move X9, [X9+3288]
	250 NotImplemented "Instruction CMP not yet implemented."
	251 Move X9, [X9]
	252 Move [X27+48], X9
	253 NotImplemented "Instruction CMP not yet implemented."
	254 Move [X27+56], X29
	255 Move X9, 0x1F20000
	256 Move X9, [X9+3272]
	257 NotImplemented "Instruction CMP not yet implemented."
	258 Move X9, [X9]
	259 Move [X27+64], X9
	260 NotImplemented "Instruction CMP not yet implemented."
	261 Move [X27+72], X24
	262 Move X8, 0x1F20000
	263 Move X8, [X8+3264]
	264 Move X8, [X8]
	265 Move [X27+80], X8
	266 Move X0, [X25]
	267 Move X8, [X19+56]
	268 Move W9, [X0+224]
	269 Move X20, [X8]
	270 Compare W9, 0
	271 JumpIfNotEqual {273}
	272 Call 0x1C17DFC
	273 Move X0, X20
	274 Move X1, X31
	275 Call Type.GetTypeFromHandle, X0
	276 Compare X0, 0
	277 JumpIfEqual {329}
	278 Move X8, [X0]
	279 Move X9, [X8+424]
	280 Move X1, [X8+432]
	281 NotImplemented "Instruction BLR not yet implemented."
	282 Move W8, [X27+24]
	283 NotImplemented "Instruction CMP not yet implemented."
	284 Move [X27+88], X0
	285 Move X0, X27
	286 Move X1, X31
	287 Call String.Concat, X0
	288 Move X8, 0x1EF7000
	289 Move X8, [X8+2600]
	290 Move X20, X0
	291 Move X8, [X8]
	292 Move W9, [X8+224]
	293 Compare W9, 0
	294 JumpIfNotEqual {297}
	295 Move X0, X8
	296 Call 0x1C17DFC
	297 Move X0, X20
	298 Move X1, X31
	299 Call Debug.LogError, X0
	300 Move X20, X31
	301 Move X0, [X26]
	302 Compare X0, 0
	303 JumpIfEqual {329}
	304 Move X2, [X23]
	305 Add X8, X31, 48
	306 Move W1, W28
	307 Call List`1<NameAndParameters>.get_Item, X0, X1
	308 Move X0, [X31+56]
	309 Move X1, [X31+64]
	310 Move X3, [X31+24]
	311 Move X4, [X31+32]
	312 Move X2, X20
	313 Move X5, X29
	314 Move X6, X24
	315 Move X7, X31
	316 Call InputBindingResolver.ApplyParameters, X0, X1, X2, X3, X4, X5
	317 Move X8, [X19+56]
	318 Move X0, [X31+16]
	319 Move W3, 10
	320 Move X1, X22
	321 Move X4, [X8+24]
	322 Move X2, X20
	323 Call ArrayHelpers.AppendWithCapacity, X0, X1, X2, X3
	324 Move X27, [X31+40]
	325 Move X0, [X26]
	326 Add W28, W28, 1
	327 Compare X0, 0
	328 JumpIfNotEqual {86}
	329 Call 0x1C17F20
	330 Move TEMP, 0
	331 Not TEMP
	332 Move W0, TEMP
	333 Move W0, [X31+12]
	334 Move X20, [X31+160]
	335 Move X19, [X31+168]
	336 Move X22, [X31+144]
	337 Move X21, [X31+152]
	338 Move X24, [X31+128]
	339 Move X23, [X31+136]
	340 Move X26, [X31+112]
	341 Move X25, [X31+120]
	342 Move X28, [X31+96]
	343 Move X27, [X31+104]
	344 Move X29, [X31+80]
	345 Move X30, [X31+88]
	346 Add X31, X31, 176
	347 Return X0
	348 Call 0x1C17F28
	349 Move X0, X27
	350 Move X1, X21
	351 Call 0x1C181E0

Method: UnityEngine.InputSystem.InputBindingComposite InstantiateBindingComposite(ref UnityEngine.InputSystem.InputBinding binding, UnityEngine.InputSystem.InputActionMap actionMap)

Disassembly:
	0x03756294 LDR X8, [X0 + 0xB8]
	0x03756298 LDR X9, [X8 + 0x38]
	0x0375629C CMP X29, X9
	0x037562A0 B.EQ 0x37563B0
	0x037562A4 LDR W9, [X0 + 0xE0]
	0x037562A8 CBNZ W9, 0x37562B8
	0x037562AC BL 0x1C16DFC
	0x037562B0 LDR X8, [X24]
	0x037562B4 LDR X8, [X8 + 0xB8]
	0x037562B8 LDR X8, [X8 + 0x48]
	0x037562BC CMP X29, X8
	0x037562C0 B.EQ 0x37563CC
	0x037562C4 LDR X0, [X19 + 0x30]
	0x037562C8 MOV X1, X31
	0x037562CC BL 0x32277A8
	0x037562D0 TBNZ X0, 0x0, 0x3756478
	0x037562D4 LDR X1, [X19 + 0x30]
	0x037562D8 ADD X0, X31, 0xD8
	0x037562DC BL 0x3756588
	0x037562E0 ADRP X8, 0xC8A000
	0x037562E4 LDRB W8, [X8 + 0xE49]
	0x037562E8 TBNZ X8, 0x0, 0x3756304
	0x037562EC ADRP X0, 0x99F000
	0x037562F0 LDR X0, [X0 + 0x278]
	0x037562F4 BL 0x1C16CF4
	0x037562F8 ADRP X8, 0xC8A000
	0x037562FC MOVZ W9, 0x1
	0x03756300 STRB W9, [X8 + 0xE49]
	0x03756304 CBNZ X23, 0x375631C
	0x03756308 ADRP X8, 0x99F000
	0x0375630C LDR X8, [X8 + 0x278]
	0x03756310 LDR X8, [X8]
	0x03756314 LDR X8, [X8 + 0xB8]
	0x03756318 LDR X23, [X8]
	0x0375631C ADD X0, X31, 0xD8
	0x03756320 MOV X1, X23
	0x03756324 BL 0x3756648
	0x03756328 TBZ X0, 0x0, 0x3756478
	0x0375632C MOVI V0.2D, 0x0
	0x03756330 MOVZ W8, 0x7
	0x03756334 ADD X0, X31, 0xD8
	0x03756338 ADD X1, X31, 0x90
	0x0375633C STUR V0, [X21 + 0x2C]
	0x03756340 STP V0, V0, [X21 + 0x10]
	0x03756344 STR V0, [X21]
	0x03756348 STR W8, [X31 + 0x90]
	0x0375634C STR X22, [X31 + 0xD0]
	0x03756350 BL 0x3756AC8
	0x03756354 TBNZ X0, 0x0, 0x3756400
	0x03756358 B 0x3756478
	0x0375635C LDR X0, [X19]
	0x03756360 MOV X1, X31
	0x03756364 BL 0x32277A8
	0x03756368 TBNZ X0, 0x0, 0x3756478
	0x0375636C LDR X0, [X24]
	0x03756370 LDR X23, [X19]
	0x03756374 B 0x37563E4
	0x03756378 LDR X0, [X19 + 0x8]
	0x0375637C MOV X1, X31
	0x03756380 BL 0x32277A8
	0x03756384 TBNZ X0, 0x0, 0x3756478
	0x03756388 LDR X0, [X24]
	0x0375638C LDR X23, [X19 + 0x8]
	0x03756390 B 0x37563E4
	0x03756394 LDR X0, [X19 + 0x10]
	0x03756398 MOV X1, X31
	0x0375639C BL 0x32277A8
	0x037563A0 TBNZ X0, 0x0, 0x3756478
	0x037563A4 LDR X0, [X24]
	0x037563A8 LDR X23, [X19 + 0x10]
	0x037563AC B 0x37563E4
	0x037563B0 LDR X0, [X19 + 0x18]
	0x037563B4 MOV X1, X31
	0x037563B8 BL 0x32277A8
	0x037563BC TBNZ X0, 0x0, 0x3756478
	0x037563C0 LDR X0, [X24]
	0x037563C4 LDR X23, [X19 + 0x18]
	0x037563C8 B 0x37563E4
	0x037563CC LDR X0, [X19 + 0x28]
	0x037563D0 MOV X1, X31
	0x037563D4 BL 0x32277A8
	0x037563D8 TBNZ X0, 0x0, 0x3756478
	0x037563DC LDR X0, [X24]
	0x037563E0 LDR X23, [X19 + 0x28]
	0x037563E4 LDR W8, [X0 + 0xE0]
	0x037563E8 CBNZ W8, 0x37563F0
	0x037563EC BL 0x1C16DFC
	0x037563F0 MOV X0, X22
	0x037563F4 MOV X1, X23
	0x037563F8 BL 0x37564B0
	0x037563FC TBZ X0, 0x0, 0x3756478
	0x03756400 ADD X27, X27, 0x1
	0x03756404 CMP X28, X27
	0x03756408 B.EQ 0x375641C
	0x0375640C LDR X8, [X20]
	0x03756410 ADD X26, X26, 0x18
	0x03756414 CBNZ X8, 0x3756208
	0x03756418 BL 0x1C16F20
	0x0375641C LDP V2, V0, [X19 + 0x10]
	0x03756420 LDR X8, [X19 + 0x30]
	0x03756424 LDR V1, [X19]
	0x03756428 LDR X0, [X24]
	0x0375642C STP V2, V0, [X31 + 0x60]
	0x03756430 STR X8, [X31 + 0x80]
	0x03756434 STR V1, [X31 + 0x5]
	0x03756438 LDR W8, [X0 + 0xE0]
	0x0375643C CBNZ W8, 0x3756444
	0x03756440 BL 0x1C16DFC
	0x03756444 LDP V0, V1, [X31 + 0x50]
	0x03756448 LDR V2, [X31 + 0x7]
	0x0375644C LDR X8, [X31 + 0x80]
	0x03756450 ADD X0, X31, 0x10
	0x03756454 STP V0, V1, [X31 + 0x10]
	0x03756458 STR V2, [X31 + 0x3]
	0x0375645C STR X8, [X31 + 0x40]
	0x03756460 BL 0x3756C14
	0x03756464 SCVTF S0, W0
	0x03756468 FMOV S1, 1
	0x0375646C FDIV S0, S1, S0
	0x03756470 SCVTF S1, W25
	0x03756474 FMUL S8, S0, S1
	0x03756478 MOV V0.16B, V8.16B
	0x0375647C LDP X20, X19, [X31 + 0x150]
	0x03756480 LDP X22, X21, [X31 + 0x140]
	0x03756484 LDP X24, X23, [X31 + 0x130]
	0x03756488 LDP X26, X25, [X31 + 0x120]
	0x0375648C LDP X28, X27, [X31 + 0x110]
	0x03756490 LDP X29, X30, [X31 + 0x100]
	0x03756494 LDR V8, [X31 + 0xF0]
	0x03756498 ADD X31, X31, 0x160
	0x0375649C RET
	0x037564A0 BL 0x1C16F28
	0x037564A4 CMP X1, X3
	0x037564A8 CSET W0, EQ
	0x037564AC RET
	0x037564B0 STP X30, X21, [X31 - 0x20]!
	0x037564B4 STP X20, X19, [X31 + 0x10]
	0x037564B8 ADRP X21, 0xC8A000
	0x037564BC LDRB W8, [X21 + 0xDD6]
	0x037564C0 MOV X19, X1
	0x037564C4 MOV X20, X0
	0x037564C8 TBNZ X8, 0x0, 0x37564EC
	0x037564CC ADRP X0, 0x9A5000
	0x037564D0 LDR X0, [X0 + 0x600]
	0x037564D4 BL 0x1C16CF4
	0x037564D8 ADRP X0, 0x99F000
	0x037564DC LDR X0, [X0 + 0x278]
	0x037564E0 BL 0x1C16CF4
	0x037564E4 MOVZ W8, 0x1
	0x037564E8 STRB W8, [X21 + 0xDD6]
	0x037564EC CBZ X20, 0x375653C
	0x037564F0 ADRP X8, 0x99F000
	0x037564F4 LDR X8, [X8 + 0x278]
	0x037564F8 LDR X9, [X8]
	0x037564FC LDR X8, [X20]
	0x03756500 CMP X8, X9
	0x03756504 B.EQ 0x3756544
	0x03756508 ADRP X9, 0x9A5000
	0x0375650C LDR X9, [X9 + 0x600]
	0x03756510 LDRB W11, [X8 + 0x130]
	0x03756514 LDR X9, [X9]
	0x03756518 LDRB W10, [X9 + 0x130]
	0x0375651C CMP W11, W10

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+32], X30
	003 Move [X31+48], X26
	004 Move [X31+56], X25
	005 Move [X31+64], X24
	006 Move [X31+72], X23
	007 Move [X31+80], X22
	008 Move [X31+88], X21
	009 Move [X31+96], X20
	010 Move [X31+104], X19
	011 Move X19, 0xC8B000
	012 Move W8, [X19+3530]
	013 Move X20, X1
	014 Move X21, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0x9C6000
	020 Move X0, [X0+3112]
	021 Call 0x1C17CF4
	022 Move X0, 0x99E000
	023 Move X0, [X0+1728]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X19+3530], W8
	027 Move X26, 0x9C6000
	028 Move X22, 0x99E000
	029 Move X0, [X21+64]
	030 Move X26, [X26+3112]
	031 Move X22, [X22+1728]
	032 Compare X0, 0
	033 JumpIfNotEqual {35}
	034 Move X0, [X21+16]
	035 Add X8, X31, 8
	036 Move X1, X31
	037 Call NameAndParameters.Parse, X0
	038 Move X8, [X26]
	039 Move X19, [X31+8]
	040 Move X24, [X31+16]
	041 Move X23, [X31+24]
	042 Move X2, X31
	043 Move X0, [X8+184]
	044 Move X1, X19
	045 Call TypeTable.LookupTypeRegistration, X0, X1
	046 Move X8, [X22]
	047 Move X22, X0
	048 Move W9, [X8+224]
	049 Compare W9, 0
	050 JumpIfNotEqual {53}
	051 Move X0, X8
	052 Call 0x1C17DFC
	053 Move X0, X22
	054 Move X1, X31
	055 Move X2, X31
	056 Call Type.op_Equality, X0, X1
	057 Move TEMP, X0
	058 And TEMP, TEMP, 1
	059 Compare TEMP, 1
	060 JumpIfEqual {154}
	061 Move X0, X22
	062 Move X1, X31
	063 Call Activator.CreateInstance, X0
	064 Compare X0, 0
	065 JumpIfEqual {99}
	066 Move X9, [X0]
	067 Move X8, [X26]
	068 Move X25, X0
	069 Move W11, [X9+304]
	070 Move W10, [X8+304]
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move X9, [X9+200]
	073 Add X9, X9, X10
	074 NotImplemented "Instruction LDUR not yet implemented."
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Move X6, [X21+64]
	077 Compare X6, 0
	078 JumpIfNotEqual {80}
	079 Move X6, [X21+16]
	080 Move X0, X24
	081 Move X1, X23
	082 Move X2, X25
	083 Move X3, X20
	084 Move X4, X21
	085 Move X5, X19
	086 Call InputBindingResolver.ApplyParameters, X0, X1, X2, X3, X4, X5
	087 Move X0, X25
	088 Move X20, [X31+96]
	089 Move X19, [X31+104]
	090 Move X22, [X31+80]
	091 Move X21, [X31+88]
	092 Move X24, [X31+64]
	093 Move X23, [X31+72]
	094 Move X26, [X31+48]
	095 Move X25, [X31+56]
	096 Move X30, [X31+32]
	097 Add X31, X31, 112
	098 Return X0
	099 Move X0, 0x99E000
	100 Move X0, [X0+2760]
	101 Call 0x1C17D08
	102 Move W1, 5
	103 Call 0x1C17D6C
	104 Move X20, X0
	105 Call 0x19913C0
	106 Move X0, 0x9F0000
	107 Move X0, [X0+3648]
	108 Call 0x1C17D08
	109 Move X2, X0
	110 Move X0, X20
	111 Move X1, X31
	112 Call 0x1994444
	113 Move X0, X22
	114 Call 0x19913C0
	115 Move X8, [X22]
	116 Move X0, X22
	117 Move X9, [X8+424]
	118 Move X1, [X8+432]
	119 NotImplemented "Instruction BLR not yet implemented."
	120 Move X21, X0
	121 Move X0, X20
	122 Call 0x19913C0
	123 Move W1, 1
	124 Move X0, X20
	125 Move X2, X21
	126 Call 0x1994444
	127 Move X0, X20
	128 Call 0x19913C0
	129 Move X0, 0x9F0000
	130 Move X0, [X0+3656]
	131 Call 0x1C17D08
	132 Move X2, X0
	133 Move W1, 2
	134 Move X0, X20
	135 Call 0x1994444
	136 Move X0, X20
	137 Call 0x19913C0
	138 Move W1, 3
	139 Move X0, X20
	140 Move X2, X19
	141 Call 0x1994444
	142 Move X0, X20
	143 Call 0x19913C0
	144 Move X0, 0x9F0000
	145 Move X0, [X0+3664]
	146 Call 0x1C17D08
	147 Move X2, X0
	148 Move W1, 4
	149 Move X0, X20
	150 Call 0x1994444
	151 Move X0, X20
	152 Move X1, X31
	153 Call String.Concat, X0
	154 Move X0, 0x9F0000
	155 Move X0, [X0+3672]
	156 Call 0x1C17D08
	157 Move X20, X0
	158 Move X0, 0x9F0000
	159 Move X0, [X0+3680]
	160 Call 0x1C17D08
	161 Move X2, X0
	162 Move X0, X20
	163 Move X1, X19
	164 Move X3, X31
	165 Call String.Concat, X0, X1, X2
	166 Move X19, X0
	167 Move X0, 0x99E000
	168 Move X0, [X0+1456]
	169 Call 0x1C17D08
	170 Call 0x1C17F10
	171 Move X1, X19
	172 Move X2, X31
	173 Move X20, X0
	174 Call InvalidOperationException..ctor, X0, X1
	175 Move X0, 0x9F0000
	176 Move X0, [X0+3688]
	177 Call 0x1C17D08
	178 Move X1, X0
	179 Move X0, X20
	180 Call 0x1C17DEC

Method: System.Void ApplyParameters(UnityEngine.InputSystem.Utilities.ReadOnlyArray`1<UnityEngine.InputSystem.Utilities.NamedValue> parameters, System.Object instance, UnityEngine.InputSystem.InputActionMap actionMap, ref UnityEngine.InputSystem.InputBinding binding, System.String objectRegistrationName, System.String namesAndParameters)

Disassembly:
	0x03756750 CSET W25, LT
	0x03756754 ADD W8, W8, 0x1
	0x03756758 CMP W23, W21
	0x0375675C STR W8, [X20 + 0xC]
	0x03756760 B.NE 0x37566FC
	0x03756764 MOV W21, W23
	0x03756768 LDR W1, [X20 + 0xC]
	0x0375676C B 0x3756778
	0x03756770 MOV W25, W31
	0x03756774 MOV W21, W24
	0x03756778 LDR W8, [X20 + 0x8]
	0x0375677C CMP W1, W8
	0x03756780 B.GE 0x37567DC
	0x03756784 LDR X0, [X20]
	0x03756788 CBZ X0, 0x37569E0
	0x0375678C MOV X2, X31
	0x03756790 BL 0x3222A1C
	0x03756794 AND W8, W0, 0xFFFF
	0x03756798 CMP W8, 0x22
	0x0375679C B.NE 0x37567DC
	0x037567A0 TBZ X25, 0x0, 0x37568F4
	0x037567A4 MOV X0, X19
	0x037567A8 MOV W1, W21
	0x037567AC MOV X2, X31
	0x037567B0 BL 0x3222A1C
	0x037567B4 AND W8, W0, 0xFFFF
	0x037567B8 CMP W8, 0x2F
	0x037567BC B.EQ 0x37568EC
	0x037567C0 MOV X0, X19
	0x037567C4 MOV W1, W21
	0x037567C8 MOV X2, X31
	0x037567CC BL 0x3222A1C
	0x037567D0 AND W8, W0, 0xFFFF
	0x037567D4 CMP W8, 0x5B
	0x037567D8 B.EQ 0x37568EC
	0x037567DC LDP W8, W1, [X20 + 0x8]
	0x037567E0 CMP W1, W8
	0x037567E4 B.GE 0x3756824
	0x037567E8 LDR X0, [X20]
	0x037567EC CBZ X0, 0x37569E0
	0x037567F0 MOV X2, X31
	0x037567F4 BL 0x3222A1C
	0x037567F8 LDR W1, [X20 + 0xC]
	0x037567FC AND W8, W0, 0xFFFF
	0x03756800 CMP W8, 0x22
	0x03756804 B.EQ 0x3756820
	0x03756808 LDR W8, [X20 + 0x8]
	0x0375680C ADD W1, W1, 0x1
	0x03756810 STR W1, [X20 + 0xC]
	0x03756814 CMP W1, W8
	0x03756818 B.LT 0x37567E8
	0x0375681C B 0x3756824
	0x03756820 LDR W8, [X20 + 0x8]
	0x03756824 CMP W1, W8
	0x03756828 B.EQ 0x37569C0
	0x0375682C LDR X0, [X20]
	0x03756830 CBZ X0, 0x37569E0
	0x03756834 MOV X2, X31
	0x03756838 BL 0x3222A1C
	0x0375683C AND W8, W0, 0xFFFF
	0x03756840 CMP W8, 0x22
	0x03756844 B.NE 0x37569C0
	0x03756848 LDR W8, [X20 + 0xC]
	0x0375684C MOV X0, X20
	0x03756850 ADD W8, W8, 0x1
	0x03756854 STR W8, [X20 + 0xC]
	0x03756858 BL 0x375FDB4
	0x0375685C TBZ X0, 0x0, 0x37569C0
	0x03756860 MOVI V0.2D, 0x0
	0x03756864 ADD X1, X31, 0x0
	0x03756868 MOV X0, X20
	0x0375686C STR X31, [X31 + 0x40]
	0x03756870 STP V0, V0, [X31 + 0x20]
	0x03756874 STP V0, V0, [X31]
	0x03756878 BL 0x375FE44
	0x0375687C TBZ X0, 0x0, 0x37569C0
	0x03756880 MOV X0, X20
	0x03756884 BL 0x375FD18
	0x03756888 LDP W8, W1, [X20 + 0x8]
	0x0375688C CMP W1, W8
	0x03756890 B.EQ 0x37569C0
	0x03756894 LDR X0, [X20]
	0x03756898 CBZ X0, 0x37569E0
	0x0375689C MOV X2, X31
	0x037568A0 BL 0x3222A1C
	0x037568A4 AND W8, W0, 0xFFFF
	0x037568A8 CMP W8, 0x7D
	0x037568AC B.EQ 0x37569C0
	0x037568B0 LDR X0, [X20]
	0x037568B4 CBZ X0, 0x37569E0
	0x037568B8 LDR W1, [X20 + 0xC]
	0x037568BC MOV X2, X31
	0x037568C0 BL 0x3222A1C
	0x037568C4 AND W8, W0, 0xFFFF
	0x037568C8 CMP W8, 0x2C
	0x037568CC B.NE 0x37569C0
	0x037568D0 LDP W9, W8, [X20 + 0x8]
	0x037568D4 MOV W0, W31
	0x037568D8 ADD W8, W8, 0x1
	0x037568DC CMP W8, W9
	0x037568E0 STR W8, [X20 + 0xC]
	0x037568E4 B.LT 0x37566B0
	0x037568E8 B 0x37569C4
	0x037568EC MOVZ W22, 0x1
	0x037568F0 B 0x37568F8
	0x037568F4 MOV W22, W31
	0x037568F8 LDR W8, [X20 + 0xC]
	0x037568FC MOV X0, X20
	0x03756900 ADD W8, W8, 0x1
	0x03756904 STR W8, [X20 + 0xC]
	0x03756908 BL 0x375FDB4
	0x0375690C CBZ W22, 0x37569C4
	0x03756910 TBZ X0, 0x0, 0x37569C4
	0x03756914 MOV X0, X19
	0x03756918 MOV W1, W21
	0x0375691C MOV X2, X31
	0x03756920 BL 0x3222A1C
	0x03756924 AND W8, W0, 0xFFFF
	0x03756928 CMP W8, 0x2F
	0x0375692C B.NE 0x3756948
	0x03756930 MOVZ W1, 0x7B
	0x03756934 MOV X0, X20
	0x03756938 BL 0x375FCA4
	0x0375693C TBZ X0, 0x0, 0x37569C0
	0x03756940 ADD W24, W21, 0x1
	0x03756944 B 0x37569A4
	0x03756948 MOV X0, X19
	0x0375694C MOV W1, W21
	0x03756950 MOV X2, X31
	0x03756954 BL 0x3222A1C
	0x03756958 AND W8, W0, 0xFFFF
	0x0375695C CMP W8, 0x5B
	0x03756960 B.NE 0x37569A0
	0x03756964 ADD W1, W21, 0x1
	0x03756968 CMP W1, W23
	0x0375696C B.EQ 0x3756A2C
	0x03756970 MOV X0, X19
	0x03756974 MOV X2, X31
	0x03756978 BL 0x3222A1C
	0x0375697C AND W8, W0, 0xFFFF
	0x03756980 CMP W8, 0x5D
	0x03756984 B.NE 0x3756A94
	0x03756988 ADD W24, W21, 0x2
	0x0375698C MOVZ W0, 0x1
	0x03756990 CMP W24, W23
	0x03756994 STRB W0, [X20 + 0x10]
	0x03756998 B.NE 0x37569A4
	0x0375699C B 0x37569C4
	0x037569A0 MOV W24, W21
	0x037569A4 CMP W24, W23
	0x037569A8 MOV W0, W31
	0x037569AC B.GE 0x37569C4
	0x037569B0 LDP W9, W8, [X20 + 0x8]
	0x037569B4 CMP W8, W9
	0x037569B8 B.LT 0x37566B0
	0x037569BC B 0x37569C4
	0x037569C0 MOV W0, W31
	0x037569C4 LDP X20, X19, [X31 + 0x80]
	0x037569C8 LDP X22, X21, [X31 + 0x70]
	0x037569CC LDP X24, X23, [X31 + 0x60]
	0x037569D0 LDP X30, X25, [X31 + 0x50]
	0x037569D4 AND W0, W0, 0x1
	0x037569D8 ADD X31, X31, 0x90
	0x037569DC RET
	0x037569E0 BL 0x1C16F20
	0x037569E4 ADRP X0, 0x9A2000
	0x037569E8 LDR X0, [X0 + 0x528]
	0x037569EC BL 0x1C16D08
	0x037569F0 BL 0x1C16F10
	0x037569F4 MOV X19, X0
	0x037569F8 ADRP X0, 0x9A8000
	0x037569FC LDR X0, [X0 + 0x120]
	0x03756A00 BL 0x1C16D08
	0x03756A04 MOV X1, X0
	0x03756A08 MOV X0, X19
	0x03756A0C MOV X2, X31
	0x03756A10 BL 0x330E100
	0x03756A14 ADRP X0, 0x9EF000
	0x03756A18 LDR X0, [X0 + 0xEF8]
	0x03756A1C BL 0x1C16D08
	0x03756A20 MOV X1, X0
	0x03756A24 MOV X0, X19
	0x03756A28 BL 0x1C16DEC
	0x03756A2C ADRP X0, 0x9EF000
	0x03756A30 LDR X0, [X0 + 0xF00]
	0x03756A34 BL 0x1C16D08
	0x03756A38 MOV X1, X19
	0x03756A3C MOV X2, X31
	0x03756A40 BL 0x321B938
	0x03756A44 MOV X19, X0
	0x03756A48 ADRP X0, 0x9A5000
	0x03756A4C LDR X0, [X0 + 0x578]
	0x03756A50 BL 0x1C16D08
	0x03756A54 BL 0x1C16F10
	0x03756A58 MOV X20, X0
	0x03756A5C ADRP X0, 0x9A8000
	0x03756A60 LDR X0, [X0 + 0x120]
	0x03756A64 BL 0x1C16D08
	0x03756A68 MOV X2, X0
	0x03756A6C MOV X0, X20
	0x03756A70 MOV X1, X19
	0x03756A74 MOV X3, X31
	0x03756A78 BL 0x330E16C
	0x03756A7C ADRP X0, 0x9EF000
	0x03756A80 LDR X0, [X0 + 0xEF8]
	0x03756A84 BL 0x1C16D08
	0x03756A88 MOV X1, X0
	0x03756A8C MOV X0, X20
	0x03756A90 BL 0x1C16DEC
	0x03756A94 ADRP X0, 0x9A6000
	0x03756A98 LDR X0, [X0 + 0x758]
	0x03756A9C BL 0x1C16D08
	0x03756AA0 BL 0x1C16F10
	0x03756AA4 MOV X19, X0
	0x03756AA8 ADRP X0, 0x9EF000
	0x03756AAC LDR X0, [X0 + 0xF08]
	0x03756AB0 BL 0x1C16D08
	0x03756AB4 MOV X1, X0
	0x03756AB8 MOV X0, X19
	0x03756ABC MOV X2, X31
	0x03756AC0 BL 0x33802E4
	0x03756AC4 B 0x3756A14
	0x03756AC8 SUB X31, X31, 0x160
	0x03756ACC STR X29, [X31 + 0x120]
	0x03756AD0 STP X30, X23, [X31 + 0x130]
	0x03756AD4 STP X22, X21, [X31 + 0x140]
	0x03756AD8 STP X20, X19, [X31 + 0x150]
	0x03756ADC ADRP X21, 0xC8A000
	0x03756AE0 LDRB W8, [X21 + 0xE4F]
	0x03756AE4 MOV X19, X1
	0x03756AE8 MOV X20, X0
	0x03756AEC TBNZ X8, 0x0, 0x3756B10
	0x03756AF0 ADRP X0, 0x9EF000
	0x03756AF4 LDR X0, [X0 + 0xF10]
	0x03756AF8 BL 0x1C16CF4
	0x03756AFC ADRP X0, 0x9EF000
	0x03756B00 LDR X0, [X0 + 0xF18]
	0x03756B04 BL 0x1C16CF4
	0x03756B08 MOVZ W8, 0x1
	0x03756B0C STRB W8, [X21 + 0xE4F]
	0x03756B10 MOVI V0.2D, 0x0
	0x03756B14 STR X31, [X31 + 0xD0]
	0x03756B18 STP V0, V0, [X31 + 0xB0]
	0x03756B1C STP V0, V0, [X31 + 0x90]
	0x03756B20 LDR W21, [X20 + 0xC]
	0x03756B24 ADD X1, X31, 0x90
	0x03756B28 MOV X0, X20
	0x03756B2C STRB W31, [X20 + 0x11]
	0x03756B30 BL 0x375FE44
	0x03756B34 MOV W22, W31
	0x03756B38 STR W21, [X20 + 0xC]
	0x03756B3C TBZ X0, 0x0, 0x3756BF4
	0x03756B40 LDR W8, [X31 + 0x90]
	0x03756B44 CMP W8, 0x5
	0x03756B48 B.NE 0x3756BC4
	0x03756B4C LDRB W8, [X20 + 0x10]
	0x03756B50 CBZ W8, 0x3756BC4
	0x03756B54 LDR X20, [X31 + 0xC0]
	0x03756B58 CBZ X20, 0x3756C10
	0x03756B5C ADRP X23, 0x9EF000
	0x03756B60 LDR X23, [X23 + 0xF18]
	0x03756B64 MOV W21, W31
	0x03756B68 LDR W8, [X20 + 0x18]
	0x03756B6C CMP W21, W8
	0x03756B70 CSET W22, LT
	0x03756B74 B.GE 0x3756BF4
	0x03756B78 LDR X2, [X23]
	0x03756B7C ADD X8, X31, 0xD8
	0x03756B80 MOV X0, X20
	0x03756B84 MOV W1, W21
	0x03756B88 BL 0x310AD04
	0x03756B8C ADD X0, X31, 0x48
	0x03756B90 ADD X1, X31, 0xD8
	0x03756B94 MOVZ W2, 0x48
	0x03756B98 BL 0x3EB1AC0
	0x03756B9C ADD X0, X31, 0xD8
	0x03756BA0 MOVZ W2, 0x48
	0x03756BA4 MOV X1, X19
	0x03756BA8 BL 0x3EB1AC0
	0x03756BAC ADD X0, X31, 0x48
	0x03756BB0 ADD X1, X31, 0xD8
	0x03756BB4 BL 0x37618D0
	0x03756BB8 ADD W21, W21, 0x1
	0x03756BBC TBZ X0, 0x0, 0x3756B68
	0x03756BC0 B 0x3756BF4
	0x03756BC4 ADD X0, X31, 0x0
	0x03756BC8 ADD X1, X31, 0x90
	0x03756BCC MOVZ W2, 0x48
	0x03756BD0 BL 0x3EB1AC0
	0x03756BD4 ADD X0, X31, 0xD8
	0x03756BD8 MOVZ W2, 0x48
	0x03756BDC MOV X1, X19
	0x03756BE0 BL 0x3EB1AC0
	0x03756BE4 ADD X0, X31, 0x0
	0x03756BE8 ADD X1, X31, 0xD8
	0x03756BEC BL 0x37618D0
	0x03756BF0 MOV W22, W0
	0x03756BF4 AND W0, W22, 0x1
	0x03756BF8 LDP X20, X19, [X31 + 0x150]
	0x03756BFC LDP X22, X21, [X31 + 0x140]
	0x03756C00 LDP X30, X23, [X31 + 0x130]
	0x03756C04 LDR X29, [X31 + 0x120]
	0x03756C08 ADD X31, X31, 0x160
	0x03756C0C RET
	0x03756C10 BL 0x1C16F20
	0x03756C14 STP X30, X21, [X31 - 0x20]!
	0x03756C18 STP X20, X19, [X31 + 0x10]
	0x03756C1C MOV X19, X0
	0x03756C20 LDR X0, [X0]
	0x03756C24 MOV X1, X31
	0x03756C28 BL 0x32277A8
	0x03756C2C LDR X8, [X19 + 0x8]
	0x03756C30 MOV W20, W0
	0x03756C34 ORN W9, W31, W0, 0x0
	0x03756C38 MOV X1, X31
	0x03756C3C MOV X0, X8

ISIL:
	001 Subtract X31, X31, 448
	002 Move [X31+352], X29
	003 Move [X31+360], X30
	004 Move [X31+368], X28
	005 Move [X31+376], X27
	006 Move [X31+384], X26
	007 Move [X31+392], X25
	008 Move [X31+400], X24
	009 Move [X31+408], X23
	010 Move [X31+416], X22
	011 Move [X31+424], X21
	012 Move [X31+432], X20
	013 Move [X31+440], X19
	014 Move [X31+8], X6
	015 Move X24, 0xC8B000
	016 Move [X31+336], X0
	017 Move [X31+344], X1
	018 Move X19, 0x9F0000
	019 Move W8, [X24+3531]
	020 Move X19, [X19+3720]
	021 Move X20, X5
	022 Move X21, X4
	023 Move X22, X3
	024 Move X23, X2
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {73}
	029 Move X0, 0x99E000
	030 Move X0, [X0+2600]
	031 Call 0x1C17CF4
	032 Move X0, 0x9F0000
	033 Move X0, [X0+3728]
	034 Call 0x1C17CF4
	035 Move X0, 0x9F0000
	036 Move X0, [X0+3736]
	037 Call 0x1C17CF4
	038 Move X0, 0x9F0000
	039 Move X0, [X0+3744]
	040 Call 0x1C17CF4
	041 Move X0, 0x9F0000
	042 Move X0, [X0+920]
	043 Call 0x1C17CF4
	044 Move X0, 0x9F0000
	045 Move X0, [X0+928]
	046 Call 0x1C17CF4
	047 Move X0, 0x9F0000
	048 Move X0, [X0+3720]
	049 Call 0x1C17CF4
	050 Move X0, 0x99E000
	051 Move X0, [X0+2760]
	052 Call 0x1C17CF4
	053 Move X0, 0x99E000
	054 Move X0, [X0+1728]
	055 Call 0x1C17CF4
	056 Move X0, 0x9C6000
	057 Move X0, [X0+3272]
	058 Call 0x1C17CF4
	059 Move X0, 0x9C6000
	060 Move X0, [X0+3280]
	061 Call 0x1C17CF4
	062 Move X0, 0x9A6000
	063 Move X0, [X0+2480]
	064 Call 0x1C17CF4
	065 Move X0, 0x9C6000
	066 Move X0, [X0+3288]
	067 Call 0x1C17CF4
	068 Move X0, 0x9F0000
	069 Move X0, [X0+3752]
	070 Call 0x1C17CF4
	071 Move W8, 1
	072 Move [X24+3531], W8
	073 Move X28, 0x9F0000
	074 Move X29, 0x9F0000
	075 Move X28, [X28+3736]
	076 Move X29, [X29+3744]
	077 Move X1, [X19]
	078 NotImplemented "Instruction MOVI not yet implemented."
	079 Add X8, X31, 16
	080 Add X0, X31, 336
	081 Move [X31+304], X31
	082 Move [X31+312], X31
	083 Move [X31+320], X31
	084 Move [X31+272], V0
	085 Move [X31+280], V0
	086 Move [X31+240], V0
	087 Move [X31+248], V0
	088 Move [X31+208], V0
	089 Move [X31+216], V0
	090 Move [X31+176], V0
	091 Move [X31+184], V0
	092 Move [X31+160], X31
	093 Move [X31+168], X31
	094 Move [X31+144], X31
	095 Move [X31+152], X31
	096 Call ReadOnlyArray`1<NamedValue>.GetEnumerator, X0
	097 Move V0, [X31+1]
	098 Move X8, [X31+32]
	099 Move [X31+19], V0
	100 Move [X31+320], X8
	101 Move X1, [X28]
	102 Add X0, X31, 304
	103 Call Enumerator<NamedValue>.MoveNext, X0
	104 Move TEMP, X0
	105 And TEMP, TEMP, 1
	106 Compare TEMP, 1
	107 JumpIfNotEqual {261}
	108 Move X1, [X29]
	109 Add X8, X31, 16
	110 Add X0, X31, 304
	111 Call Enumerator<NamedValue>.get_Current, X0
	112 Compare X23, 0
	113 JumpIfEqual {280}
	114 Move X24, [X31+16]
	115 Move X27, [X31+24]
	116 Move X19, [X31+32]
	117 Move X0, X23
	118 Move X1, X31
	119 Call "il2cpp_vm_object_is_inst", X0
	120 Compare X0, 0
	121 JumpIfEqual {281}
	122 Move X8, [X0]
	123 Move X9, [X8+1656]
	124 Move X3, [X8+1664]
	125 Move W2, 53
	126 Move X1, X24
	127 NotImplemented "Instruction BLR not yet implemented."
	128 Move X25, X0
	129 Move X1, X31
	130 Move X2, X31
	131 Call FieldInfo.op_Equality, X0, X1
	132 Move TEMP, X0
	133 And TEMP, TEMP, 1
	134 Compare TEMP, 1
	135 JumpIfNotEqual {204}
	136 Move X8, 0x99E000
	137 Move X8, [X8+2760]
	138 Move X0, [X8]
	139 Move W1, 9
	140 Call 0x1C17D6C
	141 Move X25, X0
	142 Compare X0, 0
	143 JumpIfEqual {284}
	144 Move W8, [X25+24]
	145 Compare W8, 0
	146 JumpIfEqual {287}
	147 Move X8, 0x9C6000
	148 Move X8, [X8+3280]
	149 Move X8, [X8]
	150 Move [X25+32], X8
	151 Move X0, X23
	152 Move X1, X31
	153 Call "il2cpp_vm_object_is_inst", X0
	154 Compare X0, 0
	155 JumpIfEqual {288}
	156 Move X8, [X0]
	157 Move X9, [X8+424]
	158 Move X1, [X8+432]
	159 NotImplemented "Instruction BLR not yet implemented."
	160 Move W8, [X25+24]
	161 NotImplemented "Instruction CMP not yet implemented."
	162 NotImplemented "Instruction CMP not yet implemented."
	163 Move [X25+40], X0
	164 Move X9, 0x9C6000
	165 Move X9, [X9+3288]
	166 NotImplemented "Instruction CMP not yet implemented."
	167 Move X9, [X9]
	168 Move [X25+48], X9
	169 NotImplemented "Instruction CMP not yet implemented."
	170 Move [X25+56], X20
	171 Move X9, 0x9C6000
	172 Move X9, [X9+3272]
	173 NotImplemented "Instruction CMP not yet implemented."
	174 Move X9, [X9]
	175 Move [X25+64], X9
	176 Move X9, [X31+8]
	177 NotImplemented "Instruction CMP not yet implemented."
	178 Move [X25+72], X9
	179 Move X9, 0x9F0000
	180 Move X9, [X9+3752]
	181 NotImplemented "Instruction CMP not yet implemented."
	182 Move X9, [X9]
	183 Move [X25+80], X9
	184 NotImplemented "Instruction CMP not yet implemented."
	185 Move [X25+88], X24
	186 Move X8, 0x9A6000
	187 Move X8, [X8+2480]
	188 Move X8, [X8]
	189 Move [X25+96], X8
	190 Move X0, X25
	191 Move X1, X31
	192 Call String.Concat, X0
	193 Move X8, 0x99E000
	194 Move X8, [X8+2600]
	195 Move X24, X0
	196 Move X0, [X8]
	197 Move W8, [X0+224]
	198 Compare W8, 0
	199 JumpIfNotEqual {201}
	200 Call 0x1C17DFC
	201 Move X0, X24
	202 Move X1, X31
	203 Call Debug.LogError, X0
	204 Compare X25, 0
	205 JumpIfEqual {293}
	206 Move X8, [X25]
	207 Move X1, [X8+608]
	208 Move X9, [X8+600]
	209 Move X0, X25
	210 NotImplemented "Instruction BLR not yet implemented."
	211 Move X8, 0x99E000
	212 Move X8, [X8+1728]
	213 Move X26, X0
	214 Move X0, [X8]
	215 Move W8, [X0+224]
	216 Compare W8, 0
	217 JumpIfNotEqual {219}
	218 Call 0x1C17DFC
	219 Move X0, X26
	220 Move X1, X31
	221 Call Type.GetTypeCode, X0
	222 Move W26, W0
	223 Add X8, X31, 16
	224 Move X0, X22
	225 Move X1, X21
	226 Move X2, X24
	227 Move X3, X20
	228 Move X4, X31
	229 Call ParameterOverride.Find, X0, X1, X2, X3
	230 Add X0, X31, 176
	231 Add X1, X31, 16
	232 Move W2, 128
	233 Call 0x3EB2AC0
	234 Move W8, [X31+176]
	235 Compare W8, 0
	236 JumpIfEqual {245}
	237 Move X8, 0x9F0000
	238 Move X8, [X8+928]
	239 Move X1, [X8]
	240 Add X8, X31, 16
	241 Add X0, X31, 176
	242 Call Nullable`1<ParameterOverride>.get_Value, X0
	243 Move X27, [X31+120]
	244 Move X19, [X31+128]
	245 Move [X31+160], X27
	246 Move [X31+168], X19
	247 Add X0, X31, 160
	248 Move W1, W26
	249 Move X2, X31
	250 Call PrimitiveValue.ConvertTo, X0, X1
	251 Move [X31+144], X0
	252 Move [X31+152], X1
	253 Add X0, X31, 144
	254 Move X1, X31
	255 Call PrimitiveValue.ToObject, X0
	256 Move X2, X0
	257 Move X0, X25
	258 Move X1, X23
	259 Move X3, X31
	260 Call FieldInfo.SetValue, X0, X1, X2
	261 Move X8, 0x9F0000
	262 Move X8, [X8+3728]
	263 Add X0, X31, 304
	264 Move X1, [X8]
	265 Call Enumerator<NamedValue>.Dispose, X0
	266 Move X20, [X31+432]
	267 Move X19, [X31+440]
	268 Move X22, [X31+416]
	269 Move X21, [X31+424]
	270 Move X24, [X31+400]
	271 Move X23, [X31+408]
	272 Move X26, [X31+384]
	273 Move X25, [X31+392]
	274 Move X28, [X31+368]
	275 Move X27, [X31+376]
	276 Move X29, [X31+352]
	277 Move X30, [X31+360]
	278 Add X31, X31, 448
	279 Return 
	280 Call 0x1C17F20
	281 Call 0x1C17F20
	282 Call 0x1C17F28
	283 Call 0x1C17F28
	284 Call 0x1C17F20
	285 Call 0x1C17F28
	286 Call 0x1C17F28
	287 Call 0x1C17F28
	288 Call 0x1C17F20
	289 Call 0x1C17F28
	290 Call 0x1C17F28
	291 Call 0x1C17F28
	292 Call 0x1C17F28
	293 Call 0x1C17F20
	294 Move X19, X0
	295 NotImplemented "Instruction CMP not yet implemented."
	296 Move X0, X19
	297 Call 0x3EB2AD0
	298 Move X20, [X0]
	299 Call 0x3EB2AE0
	300 Move X8, 0x9F0000
	301 Move X8, [X8+3728]
	302 Add X0, X31, 304
	303 Move X1, [X8]
	304 Call Enumerator<NamedValue>.Dispose, X0
	305 Compare X20, 0
	306 JumpIfEqual {266}
	307 Move X0, X20
	308 Call 0x1C17F18
	309 Move X20, X31
	310 Move X19, X0
	311 Move X8, 0x9F0000
	312 Move X8, [X8+3728]
	313 Move X1, [X8]
	314 Add X0, X31, 304
	315 Call Enumerator<NamedValue>.Dispose, X0
	316 Compare X20, 0
	317 JumpIfNotEqual {320}
	318 Move X0, X19
	319 Call 0x1D2D690
	320 Move X0, X20
	321 Call 0x1C17F18
	322 Call 0x1991590

Method: System.Int32 AssignCompositePartIndex(System.Object composite, System.String name, ref System.Int32 currentCompositePartCount)

Disassembly:
	0x03756520 B.CC 0x375653C
	0x03756524 LDR X8, [X8 + 0xC8]
	0x03756528 ADD X8, X8, X10, 0x3, LSL
	0x0375652C LDUR X8, [X8 - 0x8]
	0x03756530 CMP X8, X9
	0x03756534 CSEL X0, X20, X31, EQ
	0x03756538 B.EQ 0x375656C
	0x0375653C MOV W0, W31
	0x03756540 B 0x3756560
	0x03756544 MOVZ W2, 0x5
	0x03756548 MOV X0, X20
	0x0375654C MOV X1, X19
	0x03756550 MOV X3, X31
	0x03756554 BL 0x322590C
	0x03756558 CMP W0, 0x0
	0x0375655C CSET W0, EQ
	0x03756560 LDP X20, X19, [X31 + 0x10]
	0x03756564 LDP X30, X21, [X31], #0x20
	0x03756568 RET
	0x0375656C CBZ X0, 0x3756584
	0x03756570 MOV X1, X19
	0x03756574 LDP X20, X19, [X31 + 0x10]
	0x03756578 MOV X2, X31
	0x0375657C LDP X30, X21, [X31], #0x20
	0x03756580 B 0x3632A38
	0x03756584 BL 0x1C16F20
	0x03756588 STP X30, X19, [X31 - 0x10]!
	0x0375658C STP X31, X31, [X0]
	0x03756590 STR X31, [X0 + 0x10]
	0x03756594 CBZ X1, 0x37565AC
	0x03756598 STR X1, [X0]
	0x0375659C LDR W8, [X1 + 0x10]
	0x037565A0 STR W8, [X0 + 0x8]
	0x037565A4 LDP X30, X19, [X31], #0x10
	0x037565A8 RET
	0x037565AC ADRP X0, 0x9A2000
	0x037565B0 LDR X0, [X0 + 0x528]
	0x037565B4 BL 0x1C16D08
	0x037565B8 BL 0x1C16F10
	0x037565BC MOV X19, X0
	0x037565C0 ADRP X0, 0x9EF000
	0x037565C4 LDR X0, [X0 + 0xD8]
	0x037565C8 BL 0x1C16D08
	0x037565CC MOV X1, X0
	0x037565D0 MOV X0, X19
	0x037565D4 MOV X2, X31
	0x037565D8 BL 0x330E100
	0x037565DC ADRP X0, 0x9EF000
	0x037565E0 LDR X0, [X0 + 0xEF0]
	0x037565E4 BL 0x1C16D08
	0x037565E8 MOV X1, X0
	0x037565EC MOV X0, X19
	0x037565F0 BL 0x1C16DEC
	0x037565F4 STR X30, [X31 - 0x20]!
	0x037565F8 STP X20, X19, [X31 + 0x10]
	0x037565FC ADRP X20, 0xC8A000
	0x03756600 LDRB W8, [X20 + 0xE49]
	0x03756604 MOV X19, X0
	0x03756608 TBNZ X8, 0x0, 0x3756620
	0x0375660C ADRP X0, 0x99F000
	0x03756610 LDR X0, [X0 + 0x278]
	0x03756614 BL 0x1C16CF4
	0x03756618 MOVZ W8, 0x1
	0x0375661C STRB W8, [X20 + 0xE49]
	0x03756620 LDR X0, [X19]
	0x03756624 CBNZ X0, 0x375663C
	0x03756628 ADRP X8, 0x99F000
	0x0375662C LDR X8, [X8 + 0x278]
	0x03756630 LDR X8, [X8]
	0x03756634 LDR X8, [X8 + 0xB8]
	0x03756638 LDR X0, [X8]
	0x0375663C LDP X20, X19, [X31 + 0x10]
	0x03756640 LDR X30, [X31], #0x20
	0x03756644 RET
	0x03756648 SUB X31, X31, 0x90
	0x0375664C STP X30, X25, [X31 + 0x50]
	0x03756650 STP X24, X23, [X31 + 0x60]
	0x03756654 STP X22, X21, [X31 + 0x70]
	0x03756658 STP X20, X19, [X31 + 0x80]
	0x0375665C MOV X19, X1
	0x03756660 MOV X20, X0
	0x03756664 MOV X0, X1
	0x03756668 MOV X1, X31
	0x0375666C BL 0x32277A8
	0x03756670 TBNZ X0, 0x0, 0x37569E4
	0x03756674 CBZ X19, 0x37569E0
	0x03756678 LDR W23, [X19 + 0x10]
	0x0375667C MOVZ W8, 0x1
	0x03756680 MOVZ W1, 0x7B
	0x03756684 MOV X0, X20
	0x03756688 STRB W8, [X20 + 0x11]
	0x0375668C BL 0x375FCA4
	0x03756690 TBZ X0, 0x0, 0x37569C0
	0x03756694 CMP W23, 0x1
	0x03756698 MOV W0, W31
	0x0375669C B.LT 0x37569C4
	0x037566A0 LDP W9, W8, [X20 + 0x8]
	0x037566A4 CMP W8, W9
	0x037566A8 B.GE 0x37569C4
	0x037566AC MOV W24, W31
	0x037566B0 MOV X0, X20
	0x037566B4 BL 0x375FD18
	0x037566B8 LDP W8, W1, [X20 + 0x8]
	0x037566BC CMP W1, W8
	0x037566C0 B.EQ 0x37569C0
	0x037566C4 LDR X0, [X20]
	0x037566C8 CBZ X0, 0x37569E0
	0x037566CC MOV X2, X31
	0x037566D0 BL 0x3222A1C
	0x037566D4 AND W8, W0, 0xFFFF
	0x037566D8 CMP W8, 0x22
	0x037566DC B.NE 0x37569C0
	0x037566E0 LDR W8, [X20 + 0xC]
	0x037566E4 CMP W24, W23
	0x037566E8 ADD W1, W8, 0x1
	0x037566EC STR W1, [X20 + 0xC]
	0x037566F0 B.GE 0x3756770
	0x037566F4 MOVZ W25, 0x1
	0x037566F8 MOV W21, W24
	0x037566FC MOV X0, X19
	0x03756700 MOV W1, W21
	0x03756704 MOV X2, X31
	0x03756708 BL 0x3222A1C
	0x0375670C AND W8, W0, 0xFFFF
	0x03756710 CMP W8, 0x2F
	0x03756714 B.EQ 0x3756768
	0x03756718 CMP W8, 0x5B
	0x0375671C B.EQ 0x3756768
	0x03756720 MOV W22, W0
	0x03756724 LDR X0, [X20]
	0x03756728 CBZ X0, 0x37569E0
	0x0375672C LDR W1, [X20 + 0xC]
	0x03756730 MOV X2, X31
	0x03756734 BL 0x3222A1C
	0x03756738 AND W8, W0, 0xFFFF
	0x0375673C CMP W8, W22, UXTH
	0x03756740 B.NE 0x3756768
	0x03756744 LDR W8, [X20 + 0xC]
	0x03756748 ADD W21, W21, 0x1
	0x0375674C CMP W21, W23

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X22, 0xC8B000
	011 Move W8, [X22+3532]
	012 Move X20, X2
	013 Move X21, X1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {30}
	019 Move X0, 0x9C5000
	020 Move X0, [X0+3456]
	021 Call 0x1C17CF4
	022 Move X0, 0x99E000
	023 Move X0, [X0+1880]
	024 Call 0x1C17CF4
	025 Move X0, 0x99E000
	026 Move X0, [X0+1728]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X22+3532], W8
	030 Compare X19, 0
	031 JumpIfEqual {124}
	032 Move X0, X19
	033 Move X1, X31
	034 Call "il2cpp_vm_object_is_inst", X0
	035 Compare X0, 0
	036 JumpIfEqual {124}
	037 Move X8, [X0]
	038 Move W2, 53
	039 Move X1, X21
	040 Move X23, X0
	041 Move X9, [X8+1656]
	042 Move X3, [X8+1664]
	043 NotImplemented "Instruction BLR not yet implemented."
	044 Move X1, X31
	045 Move X2, X31
	046 Move X22, X0
	047 Call FieldInfo.op_Equality, X0, X1
	048 Move TEMP, X0
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfEqual {125}
	052 Compare X22, 0
	053 JumpIfEqual {124}
	054 Move X8, [X22]
	055 Move X24, 0x9C5000
	056 Move X25, 0x99E000
	057 Move X0, X22
	058 Move X9, [X8+600]
	059 Move X1, [X8+608]
	060 Move X24, [X24+3456]
	061 Move X25, [X25+1728]
	062 NotImplemented "Instruction BLR not yet implemented."
	063 Move X8, [X25]
	064 Move X25, [X24]
	065 Move X24, X0
	066 Move W9, [X8+224]
	067 Compare W9, 0
	068 JumpIfNotEqual {71}
	069 Move X0, X8
	070 Call 0x1C17DFC
	071 Move X0, X25
	072 Move X1, X31
	073 Call Type.GetTypeFromHandle, X0
	074 Move X1, X0
	075 Move X0, X24
	076 Move X2, X31
	077 Call Type.op_Inequality, X0, X1
	078 Move TEMP, X0
	079 And TEMP, TEMP, 1
	080 Compare TEMP, 1
	081 JumpIfEqual {131}
	082 Move X8, [X22]
	083 Move X0, X22
	084 Move X1, X19
	085 Move X9, [X8+712]
	086 Move X2, [X8+720]
	087 NotImplemented "Instruction BLR not yet implemented."
	088 Compare X0, 0
	089 JumpIfEqual {124}
	090 Move X23, 0x99E000
	091 Move X23, [X23+1880]
	092 Move X8, [X0]
	093 Move X1, [X23]
	094 Move X8, [X8+64]
	095 Move X9, [X1+64]
	096 NotImplemented "Instruction CMP not yet implemented."
	097 Call 0x1C17E08
	098 Move W21, [X0]
	099 Compare W21, 0
	100 JumpIfNotEqual {113}
	101 Move W8, [X20]
	102 Add X1, X31, 12
	103 Add W21, W8, 1
	104 Move [X20], W21
	105 Move X0, [X23]
	106 Move [X31+12], W21
	107 Call 0x1C17E04
	108 Move X2, X0
	109 Move X0, X22
	110 Move X1, X19
	111 Move X3, X31
	112 Call FieldInfo.SetValue, X0, X1, X2
	113 Move W0, W21
	114 Move X20, [X31+64]
	115 Move X19, [X31+72]
	116 Move X22, [X31+48]
	117 Move X21, [X31+56]
	118 Move X24, [X31+32]
	119 Move X23, [X31+40]
	120 Move X30, [X31+16]
	121 Move X25, [X31+24]
	122 Add X31, X31, 80
	123 Return X0
	124 Call 0x1C17F20
	125 Move X0, 0x9F0000
	126 Move X0, [X0+3696]
	127 Call 0x1C17D08
	128 Move X1, X21
	129 Move X2, X19
	130 Move X3, X23
	131 Move X0, X23
	132 Call 0x19913C0
	133 Move X8, [X23]
	134 Move X0, X23
	135 Move X9, [X8+424]
	136 Move X1, [X8+432]
	137 NotImplemented "Instruction BLR not yet implemented."
	138 Move X20, X0
	139 Move X0, 0x9F0000
	140 Move X0, [X0+3704]
	141 Call 0x1C17D08
	142 Move X1, X21
	143 Move X2, X19
	144 Move X3, X20
	145 Move X4, X31
	146 Call String.Format, X0, X1, X2, X3
	147 Move X19, X0
	148 Move X0, 0x99E000
	149 Move X0, [X0+1456]
	150 Call 0x1C17D08
	151 Call 0x1C17F10
	152 Move X1, X19
	153 Move X2, X31
	154 Move X20, X0
	155 Call InvalidOperationException..ctor, X0, X1
	156 Move X0, 0x9F0000
	157 Move X0, [X0+3712]
	158 Call 0x1C17D08
	159 Move X1, X0
	160 Move X0, X20
	161 Call 0x1C17DEC
	162 Call 0x1C181E0

