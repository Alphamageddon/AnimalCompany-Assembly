Type: UnityEngine.InputSystem.PlayerInputManager

Method: System.Boolean get_splitScreen()

Disassembly:
	0x037D98DC STRB W8, [X19 + 0x28B]
	0x037D98E0 LDR X8, [X20]

ISIL:
	001 Move W0, [X0+96]
	002 Return X0

Method: System.Void set_splitScreen(System.Boolean value)

Disassembly:
	0x037D98E4 LDP X20, X19, [X31 + 0x10]
	0x037D98E8 LDR X8, [X8 + 0xB8]
	0x037D98EC LDR X0, [X8]
	0x037D98F0 LDR X30, [X31], #0x20
	0x037D98F4 RET
	0x037D98F8 STP X30, X21, [X31 - 0x20]!
	0x037D98FC STP X20, X19, [X31 + 0x10]
	0x037D9900 ADRP X20, 0xC08000
	0x037D9904 ADRP X21, 0x96F000
	0x037D9908 LDRB W8, [X20 + 0x28C]
	0x037D990C LDR X21, [X21 + 0x9F8]
	0x037D9910 MOV X19, X0
	0x037D9914 TBNZ X8, 0x0, 0x37D992C
	0x037D9918 ADRP X0, 0x96F000
	0x037D991C LDR X0, [X0 + 0x9F8]
	0x037D9920 BL 0x1C16CF4
	0x037D9924 MOVZ W8, 0x1
	0x037D9928 STRB W8, [X20 + 0x28C]
	0x037D992C LDR X8, [X21]
	0x037D9930 LDR X8, [X8 + 0xB8]
	0x037D9934 STR X19, [X8]
	0x037D9938 LDP X20, X19, [X31 + 0x10]
	0x037D993C LDP X30, X21, [X31], #0x20
	0x037D9940 RET
	0x037D9944 RET
	0x037D9948 STP X30, X19, [X31 - 0x10]!
	0x037D994C MOVN W1, 0x0
	0x037D9950 BL 0x37D9994
	0x037D9954 TBNZ X0, 0x0, 0x37D9960
	0x037D9958 LDP X30, X19, [X31], #0x10
	0x037D995C RET
	0x037D9960 ADRP X0, 0x923000
	0x037D9964 LDR X0, [X0 + 0x758]
	0x037D9968 BL 0x1C16D08
	0x037D996C BL 0x1C16F10
	0x037D9970 MOV X1, X31
	0x037D9974 MOV X19, X0
	0x037D9978 BL 0x3380288
	0x037D997C ADRP X0, 0x96F000
	0x037D9980 LDR X0, [X0 + 0xCA8]
	0x037D9984 BL 0x1C16D08
	0x037D9988 MOV X1, X0
	0x037D998C MOV X0, X19
	0x037D9990 BL 0x1C16DEC
	0x037D9994 SUB X31, X31, 0x40
	0x037D9998 STP X30, X23, [X31 + 0x10]
	0x037D999C STP X22, X21, [X31 + 0x20]
	0x037D99A0 STP X20, X19, [X31 + 0x30]
	0x037D99A4 ADRP X22, 0xC08000
	0x037D99A8 ADRP X21, 0x91A000
	0x037D99AC LDRB W8, [X22 + 0x292]
	0x037D99B0 LDR X21, [X21 + 0x598]
	0x037D99B4 MOV W19, W1
	0x037D99B8 MOV X20, X0
	0x037D99BC TBNZ X8, 0x0, 0x37D9A1C
	0x037D99C0 ADRP X0, 0x91A000
	0x037D99C4 LDR X0, [X0 + 0xA28]
	0x037D99C8 BL 0x1C16CF4
	0x037D99CC ADRP X0, 0x91A000
	0x037D99D0 LDR X0, [X0 + 0x758]
	0x037D99D4 BL 0x1C16CF4
	0x037D99D8 ADRP X0, 0x91A000
	0x037D99DC LDR X0, [X0 + 0x598]
	0x037D99E0 BL 0x1C16CF4
	0x037D99E4 ADRP X0, 0x96F000
	0x037D99E8 LDR X0, [X0 + 0x8F8]
	0x037D99EC BL 0x1C16CF4
	0x037D99F0 ADRP X0, 0x96F000
	0x037D99F4 LDR X0, [X0 + 0xCB0]
	0x037D99F8 BL 0x1C16CF4
	0x037D99FC ADRP X0, 0x96F000
	0x037D9A00 LDR X0, [X0 + 0xCB8]
	0x037D9A04 BL 0x1C16CF4
	0x037D9A08 ADRP X0, 0x96F000
	0x037D9A0C LDR X0, [X0 + 0xCC0]
	0x037D9A10 BL 0x1C16CF4
	0x037D9A14 MOVZ W8, 0x1
	0x037D9A18 STRB W8, [X22 + 0x292]
	0x037D9A1C LDR X0, [X21]
	0x037D9A20 STR W31, [X31 + 0xC]
	0x037D9A24 LDR X21, [X20 + 0x58]
	0x037D9A28 LDR W8, [X0 + 0xE0]
	0x037D9A2C CBNZ W8, 0x37D9A34
	0x037D9A30 BL 0x1C16DFC
	0x037D9A34 ADRP X22, 0x91A000
	0x037D9A38 LDR X22, [X22 + 0xA28]
	0x037D9A3C MOV X0, X21
	0x037D9A40 MOV X1, X31
	0x037D9A44 MOV X2, X31
	0x037D9A48 BL 0x3C3883C
	0x037D9A4C TBZ X0, 0x0, 0x37D9A70
	0x037D9A50 LDR X0, [X22]
	0x037D9A54 ADRP X19, 0x96F000
	0x037D9A58 LDR W8, [X0 + 0xE0]
	0x037D9A5C LDR X19, [X19 + 0xCB0]
	0x037D9A60 CBNZ W8, 0x37D9A68
	0x037D9A64 BL 0x1C16DFC
	0x037D9A68 LDR X0, [X19]
	0x037D9A6C B 0x37D9C40
	0x037D9A70 LDR W8, [X20 + 0x24]
	0x037D9A74 TBNZ X8, 0x1F, 0x37D9AC8
	0x037D9A78 ADRP X21, 0xC08000
	0x037D9A7C LDRB W8, [X21 + 0x30C]
	0x037D9A80 CBNZ W8, 0x37D9A98
	0x037D9A84 ADRP X0, 0x96F000
	0x037D9A88 LDR X0, [X0 + 0x8F8]
	0x037D9A8C BL 0x1C16CF4
	0x037D9A90 MOVZ W8, 0x1
	0x037D9A94 STRB W8, [X21 + 0x30C]
	0x037D9A98 ADRP X21, 0x96F000
	0x037D9A9C LDR X21, [X21 + 0x8F8]
	0x037D9AA0 LDR X0, [X21]
	0x037D9AA4 LDR W8, [X0 + 0xE0]
	0x037D9AA8 CBNZ W8, 0x37D9AB4
	0x037D9AAC BL 0x1C16DFC
	0x037D9AB0 LDR X0, [X21]
	0x037D9AB4 LDR X8, [X0 + 0xB8]
	0x037D9AB8 LDR W9, [X8]
	0x037D9ABC LDR W8, [X20 + 0x24]
	0x037D9AC0 CMP W9, W8
	0x037D9AC4 B.GE 0x37D9B54
	0x037D9AC8 ADDS W31, W19, 0x1
	0x037D9ACC B.EQ 0x37D9B4C
	0x037D9AD0 ADRP X21, 0x96F000
	0x037D9AD4 LDR X21, [X21 + 0x8F8]
	0x037D9AD8 MOV W20, W31
	0x037D9ADC LDR X0, [X21]
	0x037D9AE0 LDR W8, [X0 + 0xE0]
	0x037D9AE4 CBNZ W8, 0x37D9AF0
	0x037D9AE8 BL 0x1C16DFC
	0x037D9AEC LDR X0, [X21]
	0x037D9AF0 LDR X8, [X0 + 0xB8]
	0x037D9AF4 LDR W8, [X8]
	0x037D9AF8 CMP W20, W8
	0x037D9AFC B.GE 0x37D9B4C
	0x037D9B00 LDR W8, [X0 + 0xE0]
	0x037D9B04 CBNZ W8, 0x37D9B10
	0x037D9B08 BL 0x1C16DFC
	0x037D9B0C LDR X0, [X21]
	0x037D9B10 LDR X8, [X0 + 0xB8]
	0x037D9B14 LDR X8, [X8 + 0x8]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+80], X30
	003 Move [X31+88], X23
	004 Move [X31+96], X22
	005 Move [X31+104], X21
	006 Move [X31+112], X20
	007 Move [X31+120], X19
	008 Move X22, 0xC09000
	009 Move W8, [X22+643]
	010 Move W20, W1
	011 Move X19, X0
	012 And W21, W1, 1
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {37}
	017 Move X0, 0x970000
	018 Move X0, [X0+3112]
	019 Call 0x1C17CF4
	020 Move X0, 0x970000
	021 Move X0, [X0+3120]
	022 Call 0x1C17CF4
	023 Move X0, 0x970000
	024 Move X0, [X0+3128]
	025 Call 0x1C17CF4
	026 Move X0, 0x91B000
	027 Move X0, [X0+1432]
	028 Call 0x1C17CF4
	029 Move X0, 0x970000
	030 Move X0, [X0+2296]
	031 Call 0x1C17CF4
	032 Move X0, 0x970000
	033 Move X0, [X0+3136]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X22+643], W8
	037 Move [X31+48], X31
	038 Move [X31+56], X31
	039 Move [X31+64], X31
	040 Move [X31+32], X31
	041 Move [X31+40], X31
	042 Move W8, [X19+96]
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move [X19+96], W21
	045 Move TEMP, X20
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfNotEqual {51}
	049 Move X0, X19
	050 Call PlayerInputManager.UpdateSplitScreen, X0
	051 Move X8, 0x970000
	052 Move X8, [X8+2296]
	053 Move X0, [X8]
	054 Move W8, [X0+224]
	055 Compare W8, 0
	056 JumpIfNotEqual {58}
	057 Call 0x1C17DFC
	058 Call PlayerInput.get_all
	059 Move X8, 0x970000
	060 Move X8, [X8+3136]
	061 Move [X31+32], X0
	062 Move [X31+40], X1
	063 Add X0, X31, 32
	064 Move X9, [X8]
	065 Add X8, X31, 8
	066 Move X1, X9
	067 Call ReadOnlyArray`1<Object>.GetEnumerator, X0
	068 NotImplemented "Instruction LDUR not yet implemented."
	069 Move X8, [X31+24]
	070 Move X21, 0x970000
	071 Move X22, 0x970000
	072 Move X21, [X21+3120]
	073 Move X22, [X22+3128]
	074 Move [X31+3], V0
	075 Move [X31+64], X8
	076 Move X23, 0x91B000
	077 Move X23, [X23+1432]
	078 Move X1, [X21]
	079 Add X0, X31, 48
	080 Call Enumerator<Object>.MoveNext, X0
	081 Move TEMP, X0
	082 And TEMP, TEMP, 1
	083 Compare TEMP, 1
	084 JumpIfNotEqual {114}
	085 Move X1, [X22]
	086 Add X0, X31, 48
	087 Call Enumerator<Object>.get_Current, X0
	088 Compare X0, 0
	089 JumpIfEqual {127}
	090 Move X8, [X23]
	091 Move X20, [X0+120]
	092 Move W9, [X8+224]
	093 Compare W9, 0
	094 JumpIfNotEqual {97}
	095 Move X0, X8
	096 Call 0x1C17DFC
	097 Move X0, X20
	098 Move X1, X31
	099 Move X2, X31
	100 Call Object.op_Inequality, X0, X1
	101 Move TEMP, X0
	102 And TEMP, TEMP, 1
	103 Compare TEMP, 1
	104 JumpIfNotEqual {78}
	105 Compare X20, 0
	106 JumpIfEqual {128}
	107 Move S0, W31
	108 Move S1, W31
	109 Move S2, 1
	110 Move S3, 1
	111 Move X0, X20
	112 Move X1, X31
	113 Call Camera.set_rect, X0, X1
	114 Move X8, 0x970000
	115 Move X8, [X8+3112]
	116 Add X0, X31, 48
	117 Move X1, [X8]
	118 Call Enumerator<Object>.Dispose, X0
	119 Move X20, [X31+112]
	120 Move X19, [X31+120]
	121 Move X22, [X31+96]
	122 Move X21, [X31+104]
	123 Move X30, [X31+80]
	124 Move X23, [X31+88]
	125 Add X31, X31, 128
	126 Return 
	127 Call 0x1C17F20
	128 Call 0x1C17F20
	129 Move X20, X0
	130 NotImplemented "Instruction CMP not yet implemented."
	131 Move X0, X20
	132 Call 0x3EB2AD0
	133 Move X21, [X0]
	134 Call 0x3EB2AE0
	135 Move X8, 0x970000
	136 Move X8, [X8+3112]
	137 Add X0, X31, 48
	138 Move X1, [X8]
	139 Call Enumerator<Object>.Dispose, X0
	140 Compare X21, 0
	141 JumpIfEqual {49}
	142 Move X0, X21
	143 Call 0x1C17F18
	144 Move X21, X31
	145 Move X20, X0
	146 Move X8, 0x970000
	147 Move X8, [X8+3112]
	148 Move X1, [X8]
	149 Add X0, X31, 48
	150 Call Enumerator<Object>.Dispose, X0
	151 Compare X21, 0
	152 JumpIfNotEqual {155}
	153 Move X0, X20
	154 Call 0x1D2D690
	155 Move X0, X21
	156 Call 0x1C17F18
	157 Call 0x1991590

Method: System.Boolean get_maintainAspectRatioInSplitScreen()

Disassembly:
	0x037DA07C STP X20, X19, [X31 + 0xD0]
	0x037DA080 ADRP X21, 0xC07000

ISIL:
	001 Move W0, [X0+97]
	002 Return X0

Method: System.Int32 get_fixedNumberOfSplitScreens()

Disassembly:
	0x037DA084 ADRP X22, 0x919000
	0x037DA088 LDRB W8, [X21 + 0x297]

ISIL:
	001 Move W0, [X0+100]
	002 Return X0

Method: UnityEngine.Rect get_splitScreenArea()

Disassembly:
	0x037DA08C LDR X22, [X22 + 0x598]
	0x037DA090 MOV X19, X1
	0x037DA094 MOV X20, X0

ISIL:
	001 Move S0, [X0+104]
	002 Move S1, [X0+108]
	003 Move S2, [X0+112]
	004 Move S3, [X0+116]
	005 Return X0

Method: System.Int32 get_playerCount()

Disassembly:
	0x037DA098 TBNZ X8, 0x0, 0x37DA11C
	0x037DA09C ADRP X0, 0x96B000
	0x037DA0A0 LDR X0, [X0 + 0x18]
	0x037DA0A4 BL 0x1C16CF4
	0x037DA0A8 ADRP X0, 0x96B000
	0x037DA0AC LDR X0, [X0 + 0x20]
	0x037DA0B0 BL 0x1C16CF4
	0x037DA0B4 ADRP X0, 0x96B000
	0x037DA0B8 LDR X0, [X0 + 0x28]
	0x037DA0BC BL 0x1C16CF4
	0x037DA0C0 ADRP X0, 0x96E000
	0x037DA0C4 LDR X0, [X0 + 0xA68]
	0x037DA0C8 BL 0x1C16CF4
	0x037DA0CC ADRP X0, 0x96C000
	0x037DA0D0 LDR X0, [X0 + 0x788]
	0x037DA0D4 BL 0x1C16CF4
	0x037DA0D8 ADRP X0, 0x96E000
	0x037DA0DC LDR X0, [X0 + 0x920]
	0x037DA0E0 BL 0x1C16CF4
	0x037DA0E4 ADRP X0, 0x96B000
	0x037DA0E8 LDR X0, [X0 + 0x9B8]
	0x037DA0EC BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xC08000
	005 Move X19, 0x96F000
	006 Move W8, [X20+644]
	007 Move X19, [X19+2296]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x96F000
	013 Move X0, [X0+2296]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+644], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move W0, [X8]
	027 Move X30, [X31+32]
	028 Return X0

Method: System.Int32 get_maxPlayerCount()

Disassembly:
	0x037DA0F0 ADRP X0, 0x919000
	0x037DA0F4 LDR X0, [X0 + 0x598]

ISIL:
	001 Move W0, [X0+36]
	002 Return X0

Method: System.Boolean get_joiningEnabled()

Disassembly:
	0x037DA0F8 BL 0x1C16CF4
	0x037DA0FC ADRP X0, 0x96B000

ISIL:
	001 Move W0, [X0+40]
	002 Return X0

Method: UnityEngine.InputSystem.PlayerJoinBehavior get_joinBehavior()

Disassembly:
	0x037DA100 LDR X0, [X0 + 0x10]
	0x037DA104 BL 0x1C16CF4

ISIL:
	001 Move W0, [X0+44]
	002 Return X0

Method: System.Void set_joinBehavior(UnityEngine.InputSystem.PlayerJoinBehavior value)

Disassembly:
	0x037DA108 ADRP X0, 0x96B000
	0x037DA10C LDR X0, [X0 + 0x9E8]
	0x037DA110 BL 0x1C16CF4
	0x037DA114 MOVZ W8, 0x1
	0x037DA118 STRB W8, [X21 + 0x297]
	0x037DA11C LDR X0, [X22]
	0x037DA120 MOVI V0.2D, 0x0
	0x037DA124 STP X31, X31, [X31 + 0x58]
	0x037DA128 STP V0, V0, [X31 + 0x70]
	0x037DA12C STR X31, [X31 + 0x68]
	0x037DA130 STP X31, X31, [X31 + 0x48]
	0x037DA134 LDR W8, [X0 + 0xE0]
	0x037DA138 LDR X21, [X20 + 0x58]
	0x037DA13C CBNZ W8, 0x37DA144
	0x037DA140 BL 0x1C16DFC
	0x037DA144 MOV X0, X21
	0x037DA148 MOV X1, X31
	0x037DA14C MOV X2, X31
	0x037DA150 BL 0x3C3883C
	0x037DA154 TBNZ X0, 0x0, 0x37DA264

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W8, [X0+44]
	005 NotImplemented "Instruction CMP not yet implemented."
	006 Move W8, [X0+40]
	007 Move X19, X0
	008 Move W20, W1
	009 Compare W8, 0
	010 JumpIfEqual {20}
	011 Move X0, X19
	012 Call PlayerInputManager.DisableJoining, X0
	013 Move [X19+44], W20
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 Call PlayerInputManager.EnableJoining, X0
	019 Return 
	020 Move [X19+44], W20
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X30, [X31+32]
	024 Return 

Method: UnityEngine.InputSystem.InputActionProperty get_joinAction()

Disassembly:
	0x037DA418 STP X22, X21, [X31 + 0x60]
	0x037DA41C STP X20, X19, [X31 + 0x70]
	0x037DA420 ADRP X20, 0xC07000
	0x037DA424 LDRB W8, [X20 + 0x294]
	0x037DA428 MOV X19, X0

ISIL:
	001 Move X9, [X0+80]
	002 Move V0, [X0+4]
	003 Move [X8+16], X9
	004 Move [X8], V0
	005 Return X0

Method: System.Void set_joinAction(UnityEngine.InputSystem.InputActionProperty value)

Disassembly:
	0x037DA42C TBNZ X8, 0x0, 0x37DA474
	0x037DA430 ADRP X0, 0x919000
	0x037DA434 LDR X0, [X0 + 0xA28]
	0x037DA438 BL 0x1C16CF4
	0x037DA43C ADRP X0, 0x96E000
	0x037DA440 LDR X0, [X0 + 0x8F0]
	0x037DA444 BL 0x1C16CF4
	0x037DA448 ADRP X0, 0x919000
	0x037DA44C LDR X0, [X0 + 0x598]
	0x037DA450 BL 0x1C16CF4
	0x037DA454 ADRP X0, 0x96E000
	0x037DA458 LDR X0, [X0 + 0x8F8]
	0x037DA45C BL 0x1C16CF4
	0x037DA460 ADRP X0, 0x96E000
	0x037DA464 LDR X0, [X0 + 0xCC8]
	0x037DA468 BL 0x1C16CF4
	0x037DA46C MOVZ W8, 0x1
	0x037DA470 STRB W8, [X20 + 0x294]
	0x037DA474 ADRP X20, 0xC07000
	0x037DA478 ADRP X21, 0x919000
	0x037DA47C LDRB W8, [X20 + 0x30B]
	0x037DA480 LDR X21, [X21 + 0x598]
	0x037DA484 STP X31, X31, [X31 + 0x30]
	0x037DA488 STR X31, [X31 + 0x40]
	0x037DA48C CBNZ W8, 0x37DA4A4
	0x037DA490 ADRP X0, 0x96E000
	0x037DA494 LDR X0, [X0 + 0x9F8]
	0x037DA498 BL 0x1C16CF4
	0x037DA49C MOVZ W8, 0x1
	0x037DA4A0 STRB W8, [X20 + 0x30B]
	0x037DA4A4 ADRP X22, 0x96E000
	0x037DA4A8 LDR X22, [X22 + 0x9F8]
	0x037DA4AC LDR X0, [X21]
	0x037DA4B0 LDR X8, [X22]
	0x037DA4B4 LDR W9, [X0 + 0xE0]
	0x037DA4B8 LDR X8, [X8 + 0xB8]
	0x037DA4BC LDR X20, [X8]
	0x037DA4C0 CBNZ W9, 0x37DA4C8
	0x037DA4C4 BL 0x1C16DFC
	0x037DA4C8 MOV X0, X20
	0x037DA4CC MOV X1, X31

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+64], X30
	003 Move [X31+72], X21
	004 Move [X31+80], X20
	005 Move [X31+88], X19
	006 Move X8, [X0+80]
	007 Move V0, [X0+4]
	008 Move X19, X1
	009 Move X20, X0
	010 Move [X31+48], X8
	011 Move [X31+2], V0
	012 Move X8, [X1+16]
	013 Move V0, [X1]
	014 Add X0, X31, 32
	015 Add X1, X31, 0
	016 Move X2, X31
	017 Move [X31+16], X8
	018 Move [X31], V0
	019 Call InputActionProperty.op_Equality, X0, X1
	020 Move TEMP, X0
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {42}
	024 Move W8, [X20+40]
	025 Add X21, X20, 64
	026 Compare W8, 0
	027 JumpIfEqual {38}
	028 Move W8, [X20+44]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X0, X20
	031 Call PlayerInputManager.DisableJoining, X0
	032 Move X8, [X19+16]
	033 Move V0, [X19]
	034 Move X0, X20
	035 Move [X21+16], X8
	036 Move [X21], V0
	037 Call PlayerInputManager.EnableJoining, X0
	038 Move X8, [X19+16]
	039 Move V0, [X19]
	040 Move [X21+16], X8
	041 Move [X21], V0
	042 Move X20, [X31+80]
	043 Move X19, [X31+88]
	044 Move X30, [X31+64]
	045 Move X21, [X31+72]
	046 Add X31, X31, 96
	047 Return 

Method: UnityEngine.InputSystem.PlayerNotifications get_notificationBehavior()

Disassembly:
	0x037DA4D0 MOV X2, X31
	0x037DA4D4 BL 0x3C3883C

ISIL:
	001 Move W0, [X0+32]
	002 Return X0

Method: System.Void set_notificationBehavior(UnityEngine.InputSystem.PlayerNotifications value)

Disassembly:
	0x037DA4D8 TBZ X0, 0x0, 0x37DA588
	0x037DA4DC ADRP X20, 0xC07000

ISIL:
	001 Move [X0+32], W1
	002 Return 

Method: UnityEngine.InputSystem.PlayerInputManager/PlayerJoinedEvent get_playerJoinedEvent()

Disassembly:
	0x037DA4E0 LDRB W8, [X20 + 0x30D]
	0x037DA4E4 CBNZ W8, 0x37DA4FC
	0x037DA4E8 ADRP X0, 0x96E000
	0x037DA4EC LDR X0, [X0 + 0x9F8]
	0x037DA4F0 BL 0x1C16CF4
	0x037DA4F4 MOVZ W8, 0x1
	0x037DA4F8 STRB W8, [X20 + 0x30D]
	0x037DA4FC LDR X8, [X22]
	0x037DA500 ADD X0, X31, 0x30
	0x037DA504 MOV X1, X31
	0x037DA508 LDR X8, [X8 + 0xB8]
	0x037DA50C STR X19, [X8]
	0x037DA510 LDR X8, [X19 + 0x50]
	0x037DA514 LDR V0, [X19 + 0x4]
	0x037DA518 STR X8, [X31 + 0x40]
	0x037DA51C STR V0, [X31 + 0x3]
	0x037DA520 BL 0x3745260
	0x037DA524 LDR X8, [X21]
	0x037DA528 MOV X20, X0
	0x037DA52C LDR W9, [X8 + 0xE0]
	0x037DA530 CBNZ W9, 0x37DA53C
	0x037DA534 MOV X0, X8
	0x037DA538 BL 0x1C16DFC
	0x037DA53C MOV X0, X20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xC08000
	005 Move W8, [X20+645]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x96F000
	012 Move X0, [X0+3192]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+645], W8
	016 Move X20, [X19+48]
	017 Compare X20, 0
	018 JumpIfNotEqual {26}
	019 Move X8, 0x96F000
	020 Move X8, [X8+3192]
	021 Move X0, [X8]
	022 Call 0x1C17F10
	023 Move X20, X0
	024 Call PlayerJoinedEvent..ctor, X0
	025 Move [X19+48], X20
	026 Move X0, X20
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Return X0

Method: UnityEngine.InputSystem.PlayerInputManager/PlayerLeftEvent get_playerLeftEvent()

Disassembly:
	0x037DA588 ADRP X8, 0x919000
	0x037DA58C LDR X8, [X8 + 0xA28]
	0x037DA590 ADRP X20, 0x96E000
	0x037DA594 LDR X0, [X8]
	0x037DA598 LDR W8, [X0 + 0xE0]
	0x037DA59C LDR X20, [X20 + 0xCC8]
	0x037DA5A0 CBNZ W8, 0x37DA5A8
	0x037DA5A4 BL 0x1C16DFC
	0x037DA5A8 LDR X0, [X20]
	0x037DA5AC MOV X1, X19
	0x037DA5B0 MOV X2, X31
	0x037DA5B4 BL 0x3C06B0C
	0x037DA5B8 B 0x37DA734
	0x037DA5BC MOV X20, X31
	0x037DA5C0 LDR X0, [X21]
	0x037DA5C4 LDR W8, [X0 + 0xE0]
	0x037DA5C8 CBNZ W8, 0x37DA5D0
	0x037DA5CC BL 0x1C16DFC
	0x037DA5D0 MOV X0, X20
	0x037DA5D4 MOV X1, X31
	0x037DA5D8 MOV X2, X31
	0x037DA5DC BL 0x3C354F8
	0x037DA5E0 TBZ X0, 0x0, 0x37DA6B4
	0x037DA5E4 LDR X8, [X22 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xC08000
	005 Move W8, [X20+646]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x96F000
	012 Move X0, [X0+3200]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+646], W8
	016 Move X20, [X19+56]
	017 Compare X20, 0
	018 JumpIfNotEqual {26}
	019 Move X8, 0x96F000
	020 Move X8, [X8+3200]
	021 Move X0, [X8]
	022 Call 0x1C17F10
	023 Move X20, X0
	024 Call PlayerLeftEvent..ctor, X0
	025 Move [X19+56], X20
	026 Move X0, X20
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Return X0

Method: System.Void add_onPlayerJoined(System.Action`1<UnityEngine.InputSystem.PlayerInput> value)

Disassembly:
	0x037DA630 MOV X0, X20
	0x037DA634 LDR X1, [X8]
	0x037DA638 BL 0x222D35C
	0x037DA63C LDR V0, [X22]
	0x037DA640 LDR X8, [X22 + 0x10]
	0x037DA644 MOV X20, X0
	0x037DA648 ADD X0, X31, 0x30
	0x037DA64C MOV X1, X31
	0x037DA650 STR V0, [X31 + 0x3]
	0x037DA654 STR X8, [X31 + 0x40]
	0x037DA658 BL 0x3745120
	0x037DA65C CBZ X0, 0x37DA748
	0x037DA660 CBZ X20, 0x37DA748
	0x037DA664 LDR X1, [X0 + 0x10]
	0x037DA668 MOV X0, X20
	0x037DA66C MOV W2, W31
	0x037DA670 MOV X3, X31
	0x037DA674 BL 0x3736D58
	0x037DA678 MOV X1, X31
	0x037DA67C BL 0x3745D90
	0x037DA680 MOV X1, X0
	0x037DA684 ADD X0, X31, 0x18
	0x037DA688 MOV X2, X31
	0x037DA68C STP X31, X31, [X31 + 0x18]
	0x037DA690 STR X31, [X31 + 0x28]
	0x037DA694 BL 0x3745294
	0x037DA698 LDUR V0, [X31 + 0x18]
	0x037DA69C LDR X8, [X31 + 0x28]
	0x037DA6A0 ADD X1, X31, 0x0
	0x037DA6A4 MOV X0, X19
	0x037DA6A8 STR V0, [X31]
	0x037DA6AC STR X8, [X31 + 0x10]
	0x037DA6B0 BL 0x37D942C
	0x037DA6B4 ADRP X21, 0x96E000
	0x037DA6B8 LDR X21, [X21 + 0x8F8]
	0x037DA6BC MOV X20, X31
	0x037DA6C0 LDR X0, [X21]
	0x037DA6C4 LDR W8, [X0 + 0xE0]
	0x037DA6C8 CBNZ W8, 0x37DA6D4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xC08000
	006 Move W8, [X21+647]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x96F000
	014 Move X0, [X0+2480]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+647], W8
	018 Compare X19, 0
	019 JumpIfEqual {31}
	020 Move X8, 0x96F000
	021 Move X8, [X8+2480]
	022 Add X0, X20, 144
	023 Move X1, X19
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X2, [X8]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Call 0x28F24E0, X0, X1
	030 Return 
	031 Move X0, 0x91F000
	032 Move X0, [X0+1320]
	033 Call 0x1C17D08
	034 Call 0x1C17F10
	035 Move X19, X0
	036 Move X0, 0x924000
	037 Move X0, [X0+3784]
	038 Call 0x1C17D08
	039 Move X1, X0
	040 Move X0, X19
	041 Move X2, X31
	042 Call ArgumentNullException..ctor, X0, X1
	043 Move X0, 0x96F000
	044 Move X0, [X0+3208]
	045 Call 0x1C17D08
	046 Move X1, X0
	047 Move X0, X19
	048 Call 0x1C17DEC

Method: System.Void remove_onPlayerJoined(System.Action`1<UnityEngine.InputSystem.PlayerInput> value)

Disassembly:
	0x037DA6CC BL 0x1C16DFC
	0x037DA6D0 LDR X0, [X21]
	0x037DA6D4 LDR X8, [X0 + 0xB8]
	0x037DA6D8 LDRSW X9, [X8]
	0x037DA6DC CMP X20, X9
	0x037DA6E0 B.GE 0x37DA724
	0x037DA6E4 LDR W9, [X0 + 0xE0]
	0x037DA6E8 CBNZ W9, 0x37DA6F8
	0x037DA6EC BL 0x1C16DFC
	0x037DA6F0 LDR X8, [X21]
	0x037DA6F4 LDR X8, [X8 + 0xB8]
	0x037DA6F8 LDR X8, [X8 + 0x8]
	0x037DA6FC CBZ X8, 0x37DA748
	0x037DA700 LDR W9, [X8 + 0x18]
	0x037DA704 CMP X20, X9
	0x037DA708 B.CS 0x37DA74C
	0x037DA70C ADD X8, X8, X20, 0x3, LSL
	0x037DA710 LDR X1, [X8 + 0x20]
	0x037DA714 MOV X0, X19
	0x037DA718 BL 0x37D6E08
	0x037DA71C ADD X20, X20, 0x1
	0x037DA720 B 0x37DA6C0
	0x037DA724 LDRB W8, [X19 + 0x28]
	0x037DA728 CBZ W8, 0x37DA734
	0x037DA72C MOV X0, X19
	0x037DA730 BL 0x37D9230
	0x037DA734 LDP X20, X19, [X31 + 0x70]
	0x037DA738 LDP X22, X21, [X31 + 0x60]
	0x037DA73C LDR X30, [X31 + 0x50]
	0x037DA740 ADD X31, X31, 0x80
	0x037DA744 RET
	0x037DA748 BL 0x1C16F20
	0x037DA74C BL 0x1C16F28
	0x037DA750 STP X30, X21, [X31 - 0x20]!
	0x037DA754 STP X20, X19, [X31 + 0x10]
	0x037DA758 ADRP X20, 0xC07000
	0x037DA75C LDRB W8, [X20 + 0x295]
	0x037DA760 MOV X19, X0
	0x037DA764 TBNZ X8, 0x0, 0x37DA77C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xC08000
	006 Move W8, [X21+648]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x96F000
	014 Move X0, [X0+2496]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+648], W8
	018 Compare X19, 0
	019 JumpIfEqual {31}
	020 Move X8, 0x96F000
	021 Move X8, [X8+2496]
	022 Add X0, X20, 144
	023 Move X1, X19
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X2, [X8]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Call 0x28F2650, X0, X1
	030 Return 
	031 Move X0, 0x91F000
	032 Move X0, [X0+1320]
	033 Call 0x1C17D08
	034 Call 0x1C17F10
	035 Move X19, X0
	036 Move X0, 0x924000
	037 Move X0, [X0+3784]
	038 Call 0x1C17D08
	039 Move X1, X0
	040 Move X0, X19
	041 Move X2, X31
	042 Call ArgumentNullException..ctor, X0, X1
	043 Move X0, 0x96F000
	044 Move X0, [X0+3216]
	045 Call 0x1C17D08
	046 Move X1, X0
	047 Move X0, X19
	048 Call 0x1C17DEC

Method: System.Void add_onPlayerLeft(System.Action`1<UnityEngine.InputSystem.PlayerInput> value)

Disassembly:
	0x037DA768 ADRP X0, 0x919000
	0x037DA76C LDR X0, [X0 + 0x598]
	0x037DA770 BL 0x1C16CF4
	0x037DA774 MOVZ W8, 0x1
	0x037DA778 STRB W8, [X20 + 0x295]
	0x037DA77C ADRP X21, 0xC07000
	0x037DA780 ADRP X20, 0x919000
	0x037DA784 LDRB W8, [X21 + 0x30B]
	0x037DA788 LDR X20, [X20 + 0x598]
	0x037DA78C CBNZ W8, 0x37DA7A4
	0x037DA790 ADRP X0, 0x96E000
	0x037DA794 LDR X0, [X0 + 0x9F8]
	0x037DA798 BL 0x1C16CF4
	0x037DA79C MOVZ W8, 0x1
	0x037DA7A0 STRB W8, [X21 + 0x30B]
	0x037DA7A4 ADRP X21, 0x96E000
	0x037DA7A8 LDR X21, [X21 + 0x9F8]
	0x037DA7AC LDR X0, [X20]
	0x037DA7B0 LDR X8, [X21]
	0x037DA7B4 LDR W9, [X0 + 0xE0]
	0x037DA7B8 LDR X8, [X8 + 0xB8]
	0x037DA7BC LDR X20, [X8]
	0x037DA7C0 CBNZ W9, 0x37DA7C8
	0x037DA7C4 BL 0x1C16DFC
	0x037DA7C8 MOV X0, X20
	0x037DA7CC MOV X1, X19
	0x037DA7D0 MOV X2, X31
	0x037DA7D4 BL 0x3C3883C
	0x037DA7D8 TBZ X0, 0x0, 0x37DA808
	0x037DA7DC ADRP X20, 0xC07000
	0x037DA7E0 LDRB W8, [X20 + 0x30D]
	0x037DA7E4 CBNZ W8, 0x37DA7FC
	0x037DA7E8 ADRP X0, 0x96E000
	0x037DA7EC LDR X0, [X0 + 0x9F8]
	0x037DA7F0 BL 0x1C16CF4
	0x037DA7F4 MOVZ W8, 0x1
	0x037DA7F8 STRB W8, [X20 + 0x30D]
	0x037DA7FC LDR X8, [X21]
	0x037DA800 LDR X8, [X8 + 0xB8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xC08000
	006 Move W8, [X21+649]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x96F000
	014 Move X0, [X0+2480]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+649], W8
	018 Compare X19, 0
	019 JumpIfEqual {31}
	020 Move X8, 0x96F000
	021 Move X8, [X8+2480]
	022 Add X0, X20, 224
	023 Move X1, X19
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X2, [X8]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Call 0x28F24E0, X0, X1
	030 Return 
	031 Move X0, 0x91F000
	032 Move X0, [X0+1320]
	033 Call 0x1C17D08
	034 Call 0x1C17F10
	035 Move X19, X0
	036 Move X0, 0x924000
	037 Move X0, [X0+3784]
	038 Call 0x1C17D08
	039 Move X1, X0
	040 Move X0, X19
	041 Move X2, X31
	042 Call ArgumentNullException..ctor, X0, X1
	043 Move X0, 0x96F000
	044 Move X0, [X0+3224]
	045 Call 0x1C17D08
	046 Move X1, X0
	047 Move X0, X19
	048 Call 0x1C17DEC

Method: System.Void remove_onPlayerLeft(System.Action`1<UnityEngine.InputSystem.PlayerInput> value)

Disassembly:
	0x037DA804 STR X31, [X8]
	0x037DA808 LDRB W8, [X19 + 0x28]
	0x037DA80C CBZ W8, 0x37DA820
	0x037DA810 MOV X0, X19
	0x037DA814 LDP X20, X19, [X31 + 0x10]
	0x037DA818 LDP X30, X21, [X31], #0x20
	0x037DA81C B 0x37D9158
	0x037DA820 LDP X20, X19, [X31 + 0x10]
	0x037DA824 LDP X30, X21, [X31], #0x20
	0x037DA828 RET
	0x037DA82C ADRP X9, 0xFFFFFFFFFD310000
	0x037DA830 LDR V0, [X9 + 0xBC]
	0x037DA834 MOVN W8, 0x0
	0x037DA838 MOVZ W9, 0x1
	0x037DA83C MOV X1, X31
	0x037DA840 STR W8, [X0 + 0x24]
	0x037DA844 STRB W9, [X0 + 0x28]
	0x037DA848 STR W8, [X0 + 0x64]
	0x037DA84C STUR V0, [X0 + 0x68]
	0x037DA850 B 0x3C36C30
	0x037DA854 STP X30, X21, [X31 - 0x20]!
	0x037DA858 STP X20, X19, [X31 + 0x10]
	0x037DA85C ADRP X21, 0xC07000
	0x037DA860 LDRB W8, [X21 + 0x29C]
	0x037DA864 MOV W19, W1
	0x037DA868 MOV X20, X0
	0x037DA86C TBNZ X8, 0x0, 0x37DA884
	0x037DA870 ADRP X0, 0x96E000
	0x037DA874 LDR X0, [X0 + 0xCD0]
	0x037DA878 BL 0x1C16CF4
	0x037DA87C MOVZ W8, 0x1
	0x037DA880 STRB W8, [X21 + 0x29C]
	0x037DA884 LDR W9, [X20]
	0x037DA888 ADD W8, W19, 0x3F
	0x037DA88C ADD W10, W19, 0x7E
	0x037DA890 CMP W8, 0x0
	0x037DA894 CSEL W8, W10, W8, LT
	0x037DA898 CMP W9, W8, ASR
	0x037DA89C B.GE 0x37DA8B8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xC08000
	006 Move W8, [X21+650]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x96F000
	014 Move X0, [X0+2496]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+650], W8
	018 Compare X19, 0
	019 JumpIfEqual {31}
	020 Move X8, 0x96F000
	021 Move X8, [X8+2496]
	022 Add X0, X20, 224
	023 Move X1, X19
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X2, [X8]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Call 0x28F2650, X0, X1
	030 Return 
	031 Move X0, 0x91F000
	032 Move X0, [X0+1320]
	033 Call 0x1C17D08
	034 Call 0x1C17F10
	035 Move X19, X0
	036 Move X0, 0x924000
	037 Move X0, [X0+3784]
	038 Call 0x1C17D08
	039 Move X1, X0
	040 Move X0, X19
	041 Move X2, X31
	042 Call ArgumentNullException..ctor, X0, X1
	043 Move X0, 0x96F000
	044 Move X0, [X0+3232]
	045 Call 0x1C17D08
	046 Move X1, X0
	047 Move X0, X19
	048 Call 0x1C17DEC

Method: UnityEngine.GameObject get_playerPrefab()

Disassembly:
	0x037DA8A0 ADRP X9, 0x96E000
	0x037DA8A4 LDR X9, [X9 + 0xCD0]

ISIL:
	001 Move X0, [X0+88]
	002 Return X0

Method: System.Void set_playerPrefab(UnityEngine.GameObject value)

Disassembly:
	0x037DA8A8 SBFM W1, W8, 0x6, 0x1F
	0x037DA8AC MOV X0, X20

ISIL:
	001 Move [X0+88], X1
	002 Return 

Method: UnityEngine.InputSystem.PlayerInputManager get_instance()

Disassembly:
	0x037DA8B0 LDR X2, [X9]
	0x037DA8B4 BL 0x2DEEDA4
	0x037DA8B8 STR W19, [X20 + 0x18]
	0x037DA8BC LDP X20, X19, [X31 + 0x10]
	0x037DA8C0 LDP X30, X21, [X31], #0x20
	0x037DA8C4 RET
	0x037DA8C8 ADD W8, W0, 0x3F
	0x037DA8CC ADD W9, W0, 0x7E
	0x037DA8D0 CMP W8, 0x0
	0x037DA8D4 CSEL W8, W9, W8, LT
	0x037DA8D8 SBFM W0, W8, 0x6, 0x1F
	0x037DA8DC RET
	0x037DA8E0 STP X30, X23, [X31 - 0x30]!
	0x037DA8E4 STP X22, X21, [X31 + 0x10]
	0x037DA8E8 STP X20, X19, [X31 + 0x20]
	0x037DA8EC ADRP X23, 0xC07000
	0x037DA8F0 ADRP X21, 0x96E000
	0x037DA8F4 ADRP X22, 0x96E000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xC08000
	005 Move X20, 0x96F000
	006 Move W8, [X19+651]
	007 Move X20, [X20+2552]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x96F000
	013 Move X0, [X0+2552]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+651], W8
	017 Move X8, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X8, [X8+184]
	021 Move X0, [X8]
	022 Move X30, [X31+32]
	023 Return X0

Method: System.Void set_instance(UnityEngine.InputSystem.PlayerInputManager value)

Disassembly:
	0x037DA8F8 LDRB W8, [X23 + 0x29D]
	0x037DA8FC LDR X21, [X21 + 0xCD8]
	0x037DA900 LDR X22, [X22 + 0xCE0]
	0x037DA904 MOV W20, W1
	0x037DA908 MOV X19, X0
	0x037DA90C TBNZ X8, 0x0, 0x37DA930
	0x037DA910 ADRP X0, 0x96E000
	0x037DA914 LDR X0, [X0 + 0xCD8]
	0x037DA918 BL 0x1C16CF4
	0x037DA91C ADRP X0, 0x96E000
	0x037DA920 LDR X0, [X0 + 0xCE0]
	0x037DA924 BL 0x1C16CF4
	0x037DA928 MOVZ W8, 0x1
	0x037DA92C STRB W8, [X23 + 0x29D]
	0x037DA930 ADD W8, W20, 0x3F
	0x037DA934 LDR X2, [X21]
	0x037DA938 CMP W20, 0x0
	0x037DA93C CSEL W8, W8, W20, LT
	0x037DA940 SBFM W21, W8, 0x6, 0x1F

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xC08000
	006 Move X21, 0x96F000
	007 Move W8, [X20+652]
	008 Move X21, [X21+2552]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x96F000
	015 Move X0, [X0+2552]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+652], W8
	019 Move X8, [X21]
	020 Move X8, [X8+184]
	021 Move [X8], X19
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X30, [X31+32]
	025 Move X21, [X31+40]
	026 Return 

Method: System.Void EnableJoining()

Disassembly:
	0x037DA230 ADD X0, X31, 0x90
	0x037DA234 MOV X1, X2
	0x037DA238 MOV X2, X3
	0x037DA23C MOV X3, X19
	0x037DA240 MOV W4, W31
	0x037DA244 BL 0x21FFF30
	0x037DA248 ADRP X8, 0x96C000
	0x037DA24C LDRB W19, [X31]
	0x037DA250 LDR X8, [X8 + 0x788]
	0x037DA254 ADD X0, X31, 0x70
	0x037DA258 LDR X1, [X8]
	0x037DA25C BL 0x2DFB98C
	0x037DA260 CBZ W19, 0x37DA268
	0x037DA264 MOVZ W20, 0x1
	0x037DA268 MOV W0, W20
	0x037DA26C LDP X20, X19, [X31 + 0xD0]
	0x037DA270 LDP X22, X21, [X31 + 0xC0]
	0x037DA274 LDR X30, [X31 + 0xB0]
	0x037DA278 ADD X31, X31, 0xE0
	0x037DA27C RET
	0x037DA280 MOV X0, X21
	0x037DA284 MOV X1, X31
	0x037DA288 BL 0x3736750
	0x037DA28C ADRP X8, 0x96B000
	0x037DA290 LDR X8, [X8 + 0x10]
	0x037DA294 STP X0, X1, [X31 + 0x48]
	0x037DA298 ADD X0, X31, 0x48
	0x037DA29C LDR X9, [X8]
	0x037DA2A0 ADD X8, X31, 0x58
	0x037DA2A4 MOV X1, X9
	0x037DA2A8 BL 0x24FD990
	0x037DA2AC ADRP X21, 0x96B000
	0x037DA2B0 ADRP X22, 0x96B000
	0x037DA2B4 LDR X21, [X21 + 0x20]
	0x037DA2B8 LDR X22, [X22 + 0x28]
	0x037DA2BC LDR X1, [X21]
	0x037DA2C0 ADD X0, X31, 0x58
	0x037DA2C4 BL 0x2BC496C
	0x037DA2C8 TBZ X0, 0x0, 0x37DA304
	0x037DA2CC LDR X1, [X22]
	0x037DA2D0 ADD X0, X31, 0x58
	0x037DA2D4 BL 0x2BC4998
	0x037DA2D8 CBZ X0, 0x37DA324
	0x037DA2DC MOV X1, X19
	0x037DA2E0 MOV X2, X31
	0x037DA2E4 BL 0x3738058
	0x037DA2E8 TBZ X0, 0x0, 0x37DA2BC
	0x037DA2EC ADRP X8, 0x96B000
	0x037DA2F0 LDR X8, [X8 + 0x18]
	0x037DA2F4 ADD X0, X31, 0x58
	0x037DA2F8 LDR X1, [X8]
	0x037DA2FC BL 0x2BC4968
	0x037DA300 B 0x37DA268
	0x037DA304 ADRP X8, 0x96B000
	0x037DA308 LDR X8, [X8 + 0x18]
	0x037DA30C ADD X0, X31, 0x58
	0x037DA310 LDR X1, [X8]
	0x037DA314 BL 0x2BC4968
	0x037DA318 MOV W20, W31
	0x037DA31C B 0x37DA268
	0x037DA320 BL 0x1C16F20
	0x037DA324 BL 0x1C16F20
	0x037DA328 B 0x37DA32C
	0x037DA32C MOV X19, X0
	0x037DA330 CMP W1, 0x1
	0x037DA334 B.NE 0x37DA364
	0x037DA338 MOV X0, X19
	0x037DA33C BL 0x3EB1AD0
	0x037DA340 LDR X20, [X0]
	0x037DA344 BL 0x3EB1AE0
	0x037DA348 ADRP X8, 0x96C000
	0x037DA34C LDR X8, [X8 + 0x788]
	0x037DA350 ADD X0, X31, 0x70
	0x037DA354 LDR X1, [X8]
	0x037DA358 BL 0x2DFB98C
	0x037DA35C CBZ X20, 0x37DA264
	0x037DA360 B 0x37DA3D0
	0x037DA364 MOV X20, X31
	0x037DA368 B 0x37DA370
	0x037DA36C MOV X19, X0
	0x037DA370 ADRP X8, 0x96C000
	0x037DA374 LDR X8, [X8 + 0x788]
	0x037DA378 LDR X1, [X8]
	0x037DA37C ADD X0, X31, 0x70
	0x037DA380 BL 0x2DFB98C
	0x037DA384 CBZ X20, 0x37DA3FC
	0x037DA388 MOV X0, X20
	0x037DA38C BL 0x1C16F18
	0x037DA390 B 0x37DA39C
	0x037DA394 B 0x37DA39C
	0x037DA398 B 0x37DA39C
	0x037DA39C MOV X19, X0
	0x037DA3A0 CMP W1, 0x1
	0x037DA3A4 B.NE 0x37DA3D8
	0x037DA3A8 MOV X0, X19
	0x037DA3AC BL 0x3EB1AD0
	0x037DA3B0 LDR X20, [X0]
	0x037DA3B4 BL 0x3EB1AE0
	0x037DA3B8 ADRP X8, 0x96B000
	0x037DA3BC LDR X8, [X8 + 0x18]
	0x037DA3C0 ADD X0, X31, 0x58
	0x037DA3C4 LDR X1, [X8]
	0x037DA3C8 BL 0x2BC4968
	0x037DA3CC CBZ X20, 0x37DA268
	0x037DA3D0 MOV X0, X20
	0x037DA3D4 BL 0x1C16F18
	0x037DA3D8 MOV X20, X31
	0x037DA3DC B 0x37DA3E4
	0x037DA3E0 MOV X19, X0
	0x037DA3E4 ADRP X8, 0x96B000
	0x037DA3E8 LDR X8, [X8 + 0x18]
	0x037DA3EC LDR X1, [X8]
	0x037DA3F0 ADD X0, X31, 0x58
	0x037DA3F4 BL 0x2BC4968
	0x037DA3F8 CBNZ X20, 0x37DA404
	0x037DA3FC MOV X0, X19
	0x037DA400 BL 0x1D2C690
	0x037DA404 MOV X0, X20
	0x037DA408 BL 0x1C16F18
	0x037DA40C BL 0x1990590
	0x037DA410 SUB X31, X31, 0x80
	0x037DA414 STR X30, [X31 + 0x50]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xC08000
	007 Move W8, [X20+653]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {33}
	013 Move X0, 0x91E000
	014 Move X0, [X0+984]
	015 Call 0x1C17CF4
	016 Move X0, 0x96F000
	017 Move X0, [X0+2384]
	018 Call 0x1C17CF4
	019 Move X0, 0x91A000
	020 Move X0, [X0+2600]
	021 Call 0x1C17CF4
	022 Move X0, 0x96F000
	023 Move X0, [X0+3168]
	024 Call 0x1C17CF4
	025 Move X0, 0x96F000
	026 Move X0, [X0+3176]
	027 Call 0x1C17CF4
	028 Move X0, 0x96F000
	029 Move X0, [X0+3184]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X20+653], W8
	033 Move W8, [X19+44]
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Compare W8, 0
	036 JumpIfNotEqual {130}
	037 Move W8, [X19+121]
	038 Compare W8, 0
	039 JumpIfNotEqual {130}
	040 Move X20, [X19+136]
	041 Compare X20, 0
	042 JumpIfNotEqual {55}
	043 Move X8, 0x96F000
	044 Move X8, [X8+2384]
	045 Move X0, [X8]
	046 Call 0x1C17F10
	047 Move X8, 0x96F000
	048 Move X8, [X8+3176]
	049 Move X1, X19
	050 Move X3, X31
	051 Move X20, X0
	052 Move X2, [X8]
	053 Call Action`2<Object, InputEventPtr>..ctor, X0, X1, X2
	054 Move [X19+136], X20
	055 Move X0, X20
	056 Call InputUser.add_onUnpairedDeviceUsed, X0
	057 Move W20, 1
	058 Move [X19+121], W20
	059 Move X21, 0xC08000
	060 Move X22, 0x96F000
	061 Move W8, [X21+737]
	062 Move X22, [X22+2376]
	063 Move TEMP, X8
	064 And TEMP, TEMP, 1
	065 Compare TEMP, 1
	066 JumpIfEqual {71}
	067 Move X0, 0x96F000
	068 Move X0, [X0+2376]
	069 Call 0x1C17CF4
	070 Move [X21+737], W20
	071 Move X8, [X22]
	072 Move X8, [X8+184]
	073 Move W8, [X8+356]
	074 Add W0, W8, 1
	075 Call InputUser.set_listenForUnpairedDeviceActivity, X0
	076 Add X20, X19, 64
	077 Move X0, X20
	078 Move X1, X31
	079 Call InputActionProperty.get_action, X0
	080 Compare X0, 0
	081 JumpIfEqual {117}
	082 Move W8, [X19+120]
	083 Compare W8, 0
	084 JumpIfNotEqual {110}
	085 Move X8, [X19+128]
	086 Compare X8, 0
	087 JumpIfNotEqual {100}
	088 Move X8, 0x91E000
	089 Move X8, [X8+984]
	090 Move X0, [X8]
	091 Call 0x1C17F10
	092 Move X8, 0x96F000
	093 Move X8, [X8+3168]
	094 Move X1, X19
	095 Move X3, X31
	096 Move X21, X0
	097 Move X2, [X8]
	098 Call Action`1<CallbackContext>..ctor, X0, X1, X2
	099 Move [X19+128], X21
	100 Move X0, X20
	101 Move X1, X31
	102 Call InputActionProperty.get_action, X0
	103 Compare X0, 0
	104 JumpIfEqual {138}
	105 Move X1, [X19+128]
	106 Move X2, X31
	107 Call InputAction.add_performed, X0, X1
	108 Move W8, 1
	109 Move [X19+120], W8
	110 Move X0, X20
	111 Move X1, X31
	112 Call InputActionProperty.get_action, X0
	113 Compare X0, 0
	114 JumpIfEqual {138}
	115 Move X1, X31
	116 Call InputAction.Enable, X0
	117 Move X8, 0x91A000
	118 Move X8, [X8+2600]
	119 Move X0, [X8]
	120 Move W8, [X0+224]
	121 Compare W8, 0
	122 JumpIfNotEqual {124}
	123 Call 0x1C17DFC
	124 Move X8, 0x96F000
	125 Move X8, [X8+3184]
	126 Move X1, X19
	127 Move X2, X31
	128 Move X0, [X8]
	129 Call Debug.LogError, X0, X1
	130 Move W8, 1
	131 Move [X19+40], W8
	132 Move X20, [X31+32]
	133 Move X19, [X31+40]
	134 Move X22, [X31+16]
	135 Move X21, [X31+24]
	136 Move X30, [X31+48]
	137 Return 
	138 Call 0x1C17F20

Method: System.Void DisableJoining()

Disassembly:
	0x037DA158 LDR X0, [X20 + 0x58]
	0x037DA15C CBZ X0, 0x37DA320
	0x037DA160 ADRP X8, 0x96E000
	0x037DA164 LDR X8, [X8 + 0xA68]
	0x037DA168 LDR X1, [X8]
	0x037DA16C BL 0x21E5548
	0x037DA170 LDR X8, [X22]
	0x037DA174 MOV X20, X0
	0x037DA178 LDR W9, [X8 + 0xE0]
	0x037DA17C CBNZ W9, 0x37DA188
	0x037DA180 MOV X0, X8
	0x037DA184 BL 0x1C16DFC
	0x037DA188 MOV X0, X20
	0x037DA18C MOV X1, X31
	0x037DA190 MOV X2, X31
	0x037DA194 BL 0x3C3883C
	0x037DA198 TBNZ X0, 0x0, 0x37DA264
	0x037DA19C CBZ X20, 0x37DA320
	0x037DA1A0 MOV X0, X20
	0x037DA1A4 BL 0x37D1AD4
	0x037DA1A8 LDR X8, [X22]
	0x037DA1AC MOV X21, X0
	0x037DA1B0 LDR W9, [X8 + 0xE0]
	0x037DA1B4 CBNZ W9, 0x37DA1C0
	0x037DA1B8 MOV X0, X8
	0x037DA1BC BL 0x1C16DFC
	0x037DA1C0 MOV X0, X21
	0x037DA1C4 MOV X1, X31
	0x037DA1C8 MOV X2, X31
	0x037DA1CC BL 0x3C3883C
	0x037DA1D0 TBNZ X0, 0x0, 0x37DA264
	0x037DA1D4 CBZ X21, 0x37DA320
	0x037DA1D8 MOV X0, X21
	0x037DA1DC MOV X1, X31
	0x037DA1E0 BL 0x37367C0
	0x037DA1E4 UBFM X8, X1, 0x20, 0x3F
	0x037DA1E8 CMP W8, 0x1
	0x037DA1EC CSET W20, LT
	0x037DA1F0 B.LT 0x37DA280
	0x037DA1F4 ADD X8, X31, 0x70
	0x037DA1F8 BL 0x37D5C9C
	0x037DA1FC LDP V0, V1, [X31 + 0x70]
	0x037DA200 STP V0, V1, [X31 + 0x20]
	0x037DA204 MOV X0, X21
	0x037DA208 MOV X1, X31
	0x037DA20C BL 0x37367C0
	0x037DA210 ADRP X8, 0x96E000
	0x037DA214 LDR X8, [X8 + 0x920]
	0x037DA218 LDP V0, V1, [X31 + 0x20]
	0x037DA21C MOV X2, X0
	0x037DA220 MOV X3, X1
	0x037DA224 LDR X5, [X8]
	0x037DA228 STP V0, V1, [X31 + 0x90]
	0x037DA22C ADD X8, X31, 0x0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W8, [X0+44]
	006 Move X19, X0
	007 NotImplemented "Instruction CMP not yet implemented."
	008 Compare W8, 0
	009 JumpIfNotEqual {59}
	010 Move W8, [X19+121]
	011 Compare W8, 0
	012 JumpIfEqual {59}
	013 Move X0, [X19+136]
	014 Call InputUser.remove_onUnpairedDeviceUsed, X0
	015 Move [X19+121], W31
	016 Move X20, 0xC08000
	017 Move X21, 0x96F000
	018 Move W8, [X20+737]
	019 Move X21, [X21+2376]
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {29}
	024 Move X0, 0x96F000
	025 Move X0, [X0+2376]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X20+737], W8
	029 Move X8, [X21]
	030 Move X8, [X8+184]
	031 Move W8, [X8+356]
	032 Subtract W0, W8, 1
	033 Call InputUser.set_listenForUnpairedDeviceActivity, X0
	034 Move W8, [X19+120]
	035 Compare W8, 0
	036 JumpIfEqual {52}
	037 Add X20, X19, 64
	038 Move X0, X20
	039 Move X1, X31
	040 Call InputActionProperty.get_action, X0
	041 Compare X0, 0
	042 JumpIfEqual {51}
	043 Move X0, X20
	044 Move X1, X31
	045 Call InputActionProperty.get_action, X0
	046 Compare X0, 0
	047 JumpIfEqual {65}
	048 Move X1, [X19+128]
	049 Move X2, X31
	050 Call InputAction.remove_performed, X0, X1
	051 Move [X19+120], W31
	052 Add X0, X19, 64
	053 Move X1, X31
	054 Call InputActionProperty.get_action, X0
	055 Compare X0, 0
	056 JumpIfEqual {59}
	057 Move X1, X31
	058 Call InputAction.Disable, X0
	059 Move [X19+40], W31
	060 Move X20, [X31+16]
	061 Move X19, [X31+24]
	062 Move X30, [X31+32]
	063 Move X21, [X31+40]
	064 Return 
	065 Call 0x1C17F20

Method: System.Void JoinPlayerFromUI()

Disassembly:
	0x037DA948 MOV W1, W21
	0x037DA94C BL 0x2DEEB94
	0x037DA950 MOVZ W8, 0x1
	0x037DA954 LSLV X8, X8, X20
	0x037DA958 LDR X3, [X22]
	0x037DA95C ORR X2, X0, X8, 0x0
	0x037DA960 MOV X0, X19
	0x037DA964 MOV W1, W21
	0x037DA968 LDP X20, X19, [X31 + 0x20]
	0x037DA96C LDP X22, X21, [X31 + 0x10]
	0x037DA970 LDP X30, X23, [X31], #0x30
	0x037DA974 B 0x2DEEC30
	0x037DA978 STR X30, [X31 - 0x30]!
	0x037DA97C STP X22, X21, [X31 + 0x10]
	0x037DA980 STP X20, X19, [X31 + 0x20]
	0x037DA984 ADRP X22, 0xC07000
	0x037DA988 ADRP X21, 0x96E000
	0x037DA98C LDRB W8, [X22 + 0x29E]
	0x037DA990 LDR X21, [X21 + 0xCD8]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move TEMP, 0
	004 Not TEMP
	005 Move W1, TEMP
	006 Call PlayerInputManager.CheckIfPlayerCanJoin, X0, X1
	007 Move TEMP, X0
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {14}
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 Return 
	014 Move X0, 0x923000
	015 Move X0, [X0+1880]
	016 Call 0x1C17D08
	017 Call 0x1C17F10
	018 Move X1, X31
	019 Move X19, X0
	020 Call NotImplementedException..ctor, X0
	021 Move X0, 0x96F000
	022 Move X0, [X0+3240]
	023 Call 0x1C17D08
	024 Move X1, X0
	025 Move X0, X19
	026 Call 0x1C17DEC

Method: System.Void JoinPlayerFromAction(UnityEngine.InputSystem.InputAction/CallbackContext context)

Disassembly:
	0x037DAC6C LDR W10, [X8 + 0xE0]
	0x037DAC70 LDR W20, [X9]
	0x037DAC74 CBNZ W10, 0x37DAC80
	0x037DAC78 MOV X0, X8
	0x037DAC7C BL 0x1C16DFC
	0x037DAC80 STR W20, [X19 + 0x10]
	0x037DAC84 LDP X20, X19, [X31 + 0x20]
	0x037DAC88 LDP X22, X21, [X31 + 0x10]
	0x037DAC8C LDR X30, [X31], #0x30
	0x037DAC90 RET
	0x037DAC94 STP X29, X30, [X31 - 0x60]!
	0x037DAC98 STP X28, X27, [X31 + 0x10]
	0x037DAC9C STP X26, X25, [X31 + 0x20]
	0x037DACA0 STP X24, X23, [X31 + 0x30]
	0x037DACA4 STP X22, X21, [X31 + 0x40]
	0x037DACA8 STP X20, X19, [X31 + 0x50]
	0x037DACAC ADRP X29, 0xC07000
	0x037DACB0 ADRP X20, 0x96E000
	0x037DACB4 ADRP X22, 0x96A000
	0x037DACB8 ADRP X27, 0x96D000
	0x037DACBC ADRP X28, 0x96C000

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+16], X30
	003 Move [X31+24], X19
	004 Move [X31], X1
	005 Move [X31+8], X2
	006 Move TEMP, 0
	007 Not TEMP
	008 Move W1, TEMP
	009 Move X19, X0
	010 Call PlayerInputManager.CheckIfPlayerCanJoin, X0, X1
	011 Move TEMP, X0
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfNotEqual {30}
	015 Add X0, X31, 0
	016 Move X1, X31
	017 Call CallbackContext.get_control, X0
	018 Compare X0, 0
	019 JumpIfEqual {34}
	020 Move X4, [X0+120]
	021 Move TEMP, 0
	022 Not TEMP
	023 Move W1, TEMP
	024 Move TEMP, 0
	025 Not TEMP
	026 Move W2, TEMP
	027 Move X0, X19
	028 Move X3, X31
	029 Call PlayerInputManager.JoinPlayer, X0, X1, X2, X3, X4
	030 Move X30, [X31+16]
	031 Move X19, [X31+24]
	032 Add X31, X31, 32
	033 Return 
	034 Call 0x1C17F20

Method: System.Void JoinPlayerFromActionIfNotAlreadyJoined(UnityEngine.InputSystem.InputAction/CallbackContext context)

Disassembly:
	0x037DAD7C ADRP X0, 0x96D000
	0x037DAD80 LDR X0, [X0 + 0xFF8]
	0x037DAD84 BL 0x1C16CF4
	0x037DAD88 MOVZ W8, 0x1
	0x037DAD8C STRB W8, [X29 + 0x2A3]
	0x037DAD90 LDR X1, [X20]
	0x037DAD94 LDR X2, [X22]
	0x037DAD98 MOV X0, X19
	0x037DAD9C BL 0x21FC754
	0x037DADA0 STR X0, [X19 + 0x178]
	0x037DADA4 LDR X1, [X27]
	0x037DADA8 LDR X2, [X28]
	0x037DADAC MOV X0, X19
	0x037DADB0 BL 0x21FC754
	0x037DADB4 STR X0, [X19 + 0x180]
	0x037DADB8 LDR X1, [X26]
	0x037DADBC LDR X2, [X21]
	0x037DADC0 MOV X0, X19
	0x037DADC4 BL 0x21FC754
	0x037DADC8 STR X0, [X19 + 0x188]
	0x037DADCC LDR X1, [X24]
	0x037DADD0 LDR X2, [X25]
	0x037DADD4 MOV X0, X19
	0x037DADD8 BL 0x21FC754
	0x037DADDC STR X0, [X19 + 0x190]
	0x037DADE0 LDR X1, [X23]
	0x037DADE4 LDR X2, [X21]
	0x037DADE8 MOV X0, X19
	0x037DADEC BL 0x21FC754
	0x037DADF0 STR X0, [X19 + 0x198]
	0x037DADF4 ADRP X8, 0x96D000
	0x037DADF8 LDR X8, [X8 + 0xF08]
	0x037DADFC LDR X2, [X21]
	0x037DAE00 MOV X0, X19
	0x037DAE04 LDR X1, [X8]
	0x037DAE08 BL 0x21FC754
	0x037DAE0C STR X0, [X19 + 0x1A0]
	0x037DAE10 ADRP X8, 0x96E000
	0x037DAE14 LDR X8, [X8 + 0xD08]
	0x037DAE18 MOV X0, X19
	0x037DAE1C LDP X20, X19, [X31 + 0x50]
	0x037DAE20 LDP X22, X21, [X31 + 0x40]
	0x037DAE24 LDR X1, [X8]
	0x037DAE28 LDP X24, X23, [X31 + 0x30]
	0x037DAE2C LDP X26, X25, [X31 + 0x20]
	0x037DAE30 LDP X28, X27, [X31 + 0x10]
	0x037DAE34 LDP X29, X30, [X31], #0x60
	0x037DAE38 B 0x2E045CC
	0x037DAE3C SUB X31, X31, 0x90
	0x037DAE40 STP D15, D14, [X31 + 0x10]
	0x037DAE44 STP D13, D12, [X31 + 0x20]
	0x037DAE48 STP D11, D10, [X31 + 0x30]
	0x037DAE4C STP D9, D8, [X31 + 0x40]
	0x037DAE50 STR X30, [X31 + 0x50]
	0x037DAE54 STP X24, X23, [X31 + 0x60]
	0x037DAE58 STP X22, X21, [X31 + 0x70]
	0x037DAE5C STP X20, X19, [X31 + 0x80]
	0x037DAE60 ADRP X22, 0xC07000

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xC08000
	007 Move W8, [X20+654]
	008 Move X19, X0
	009 Move [X31], X1
	010 Move [X31+8], X2
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x91A000
	016 Move X0, [X0+1432]
	017 Call 0x1C17CF4
	018 Move X0, 0x96F000
	019 Move X0, [X0+2296]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+654], W8
	023 Move TEMP, 0
	024 Not TEMP
	025 Move W1, TEMP
	026 Move X0, X19
	027 Call PlayerInputManager.CheckIfPlayerCanJoin, X0, X1
	028 Move TEMP, X0
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfNotEqual {75}
	032 Add X0, X31, 0
	033 Move X1, X31
	034 Call CallbackContext.get_control, X0
	035 Compare X0, 0
	036 JumpIfEqual {81}
	037 Move X8, 0x96F000
	038 Move X8, [X8+2296]
	039 Move X20, [X0+120]
	040 Move X8, [X8]
	041 Move W9, [X8+224]
	042 Compare W9, 0
	043 JumpIfNotEqual {46}
	044 Move X0, X8
	045 Call 0x1C17DFC
	046 Move X0, X20
	047 Call PlayerInput.FindFirstPairedToDevice, X0
	048 Move X8, 0x91A000
	049 Move X8, [X8+1432]
	050 Move X21, X0
	051 Move X8, [X8]
	052 Move W9, [X8+224]
	053 Compare W9, 0
	054 JumpIfNotEqual {57}
	055 Move X0, X8
	056 Call 0x1C17DFC
	057 Move X0, X21
	058 Move X1, X31
	059 Move X2, X31
	060 Call Object.op_Inequality, X0, X1
	061 Move TEMP, X0
	062 And TEMP, TEMP, 1
	063 Compare TEMP, 1
	064 JumpIfEqual {75}
	065 Move TEMP, 0
	066 Not TEMP
	067 Move W1, TEMP
	068 Move TEMP, 0
	069 Not TEMP
	070 Move W2, TEMP
	071 Move X0, X19
	072 Move X3, X31
	073 Move X4, X20
	074 Call PlayerInputManager.JoinPlayer, X0, X1, X2, X3, X4
	075 Move X20, [X31+32]
	076 Move X19, [X31+40]
	077 Move X30, [X31+16]
	078 Move X21, [X31+24]
	079 Add X31, X31, 48
	080 Return 
	081 Call 0x1C17F20

Method: UnityEngine.InputSystem.PlayerInput JoinPlayer(System.Int32 playerIndex = -1, System.Int32 splitScreenIndex = -1, System.String controlScheme = null, UnityEngine.InputSystem.InputDevice pairWithDevice = null)

Disassembly:
	0x037DACC0 ADRP X26, 0x924000
	0x037DACC4 ADRP X21, 0x96A000
	0x037DACC8 ADRP X24, 0x96E000
	0x037DACCC ADRP X25, 0x96A000
	0x037DACD0 ADRP X23, 0x96E000
	0x037DACD4 LDR X20, [X20]
	0x037DACD8 LDR X22, [X22 + 0xE18]
	0x037DACDC LDR X27, [X27 + 0xFF8]
	0x037DACE0 LDR X28, [X28 + 0x58]
	0x037DACE4 LDR X26, [X26 + 0x2B8]
	0x037DACE8 LDR X21, [X21 + 0xDD0]
	0x037DACEC LDRB W8, [X29 + 0x2A3]
	0x037DACF0 LDR X24, [X24 + 0xCF8]
	0x037DACF4 LDR X25, [X25 + 0xED8]
	0x037DACF8 LDR X23, [X23 + 0xD00]
	0x037DACFC MOV X19, X0
	0x037DAD00 TBNZ X8, 0x0, 0x37DAD90
	0x037DAD04 ADRP X0, 0x96E000
	0x037DAD08 LDR X0, [X0 + 0xD08]
	0x037DAD0C BL 0x1C16CF4
	0x037DAD10 ADRP X0, 0x96A000
	0x037DAD14 LDR X0, [X0 + 0xE18]
	0x037DAD18 BL 0x1C16CF4
	0x037DAD1C ADRP X0, 0x96C000
	0x037DAD20 LDR X0, [X0 + 0x58]
	0x037DAD24 BL 0x1C16CF4
	0x037DAD28 ADRP X0, 0x96A000
	0x037DAD2C LDR X0, [X0 + 0xED8]
	0x037DAD30 BL 0x1C16CF4
	0x037DAD34 ADRP X0, 0x96A000
	0x037DAD38 LDR X0, [X0 + 0xDD0]
	0x037DAD3C BL 0x1C16CF4
	0x037DAD40 ADRP X0, 0x96E000
	0x037DAD44 LDR X0, [X0]
	0x037DAD48 BL 0x1C16CF4
	0x037DAD4C ADRP X0, 0x96E000
	0x037DAD50 LDR X0, [X0 + 0xD00]
	0x037DAD54 BL 0x1C16CF4
	0x037DAD58 ADRP X0, 0x96E000
	0x037DAD5C LDR X0, [X0 + 0xCF8]
	0x037DAD60 BL 0x1C16CF4
	0x037DAD64 ADRP X0, 0x924000
	0x037DAD68 LDR X0, [X0 + 0x2B8]
	0x037DAD6C BL 0x1C16CF4
	0x037DAD70 ADRP X0, 0x96D000
	0x037DAD74 LDR X0, [X0 + 0xF08]
	0x037DAD78 BL 0x1C16CF4

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0xC08000
	009 Move W8, [X24+655]
	010 Move X19, X4
	011 Move X21, X3
	012 Move W20, W2
	013 Move W22, W1
	014 Move X23, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0x96F000
	020 Move X0, [X0+2296]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X24+655], W8
	024 Move X0, X23
	025 Move W1, W22
	026 Call PlayerInputManager.CheckIfPlayerCanJoin, X0, X1
	027 Move TEMP, X0
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfNotEqual {56}
	031 Move X24, 0x96F000
	032 Move X24, [X24+2296]
	033 Move X0, [X24]
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {39}
	037 Call 0x1C17DFC
	038 Move X0, [X24]
	039 Move X8, [X0+184]
	040 Move W9, 1
	041 Move W1, W22
	042 Move X2, X21
	043 Move [X8+56], W9
	044 Move X0, [X23+88]
	045 Move W3, W20
	046 Move X4, X19
	047 Move X20, [X31+48]
	048 Move X19, [X31+56]
	049 Move X22, [X31+32]
	050 Move X21, [X31+40]
	051 Move X24, [X31+16]
	052 Move X23, [X31+24]
	053 Move X30, [X31+64]
	054 Call PlayerInput.Instantiate, X0, X1, X2, X3, X4
	055 Return X0
	056 Move X20, [X31+48]
	057 Move X19, [X31+56]
	058 Move X22, [X31+32]
	059 Move X21, [X31+40]
	060 Move X24, [X31+16]
	061 Move X23, [X31+24]
	062 Move X0, X31
	063 Move X30, [X31+64]
	064 Return X0

Method: UnityEngine.InputSystem.PlayerInput JoinPlayer(System.Int32 playerIndex = -1, System.Int32 splitScreenIndex = -1, System.String controlScheme = null, UnityEngine.InputSystem.InputDevice[] pairWithDevices)

Disassembly:
	0x037DAE64 LDRB W9, [X22 + 0x2A4]
	0x037DAE68 MOV X20, X1
	0x037DAE6C MOV X21, X0
	0x037DAE70 MOV X19, X8
	0x037DAE74 TBNZ X9, 0x0, 0x37DAEBC
	0x037DAE78 ADRP X0, 0x96E000
	0x037DAE7C LDR X0, [X0 + 0xD10]
	0x037DAE80 BL 0x1C16CF4
	0x037DAE84 ADRP X0, 0x96E000
	0x037DAE88 LDR X0, [X0 + 0xD18]
	0x037DAE8C BL 0x1C16CF4
	0x037DAE90 ADRP X0, 0x96E000
	0x037DAE94 LDR X0, [X0 + 0xD20]
	0x037DAE98 BL 0x1C16CF4
	0x037DAE9C ADRP X0, 0x96C000
	0x037DAEA0 LDR X0, [X0 + 0x28]
	0x037DAEA4 BL 0x1C16CF4
	0x037DAEA8 ADRP X0, 0x941000
	0x037DAEAC LDR X0, [X0 + 0xD18]
	0x037DAEB0 BL 0x1C16CF4
	0x037DAEB4 MOVZ W8, 0x1
	0x037DAEB8 STRB W8, [X22 + 0x2A4]
	0x037DAEBC LDR W8, [X21 + 0xD8]
	0x037DAEC0 MOVZ W9, 0x7365
	0x037DAEC4 MOVK W9, 0x506F0000
	0x037DAEC8 CMP W8, W9
	0x037DAECC B.NE 0x37DAF0C
	0x037DAED0 ADRP X8, 0x941000
	0x037DAED4 LDR X8, [X8 + 0xD18]
	0x037DAED8 LDR X0, [X8]
	0x037DAEDC LDR W8, [X0 + 0xE0]
	0x037DAEE0 CBNZ W8, 0x37DAEE8
	0x037DAEE4 BL 0x1C16DFC
	0x037DAEE8 LDRSW X8, [X21 + 0x14]
	0x037DAEEC ADD X8, X8, X20
	0x037DAEF0 LDUR V0, [X8 + 0x2C]
	0x037DAEF4 LDP V2, V1, [X8 + 0x10]
	0x037DAEF8 LDR V3, [X8]
	0x037DAEFC STUR V0, [X19 + 0x2C]
	0x037DAF00 STP V2, V1, [X19 + 0x10]
	0x037DAF04 STR V3, [X19]
	0x037DAF08 B 0x37DB024
	0x037DAF0C STRB W31, [X31 + 0x5E]
	0x037DAF10 STRH W31, [X31 + 0x5C]
	0x037DAF14 LDR X0, [X21 + 0x178]
	0x037DAF18 CBZ X0, 0x37DB04C
	0x037DAF1C ADRP X8, 0x96C000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0xC08000
	009 Move W8, [X24+656]
	010 Move X19, X4
	011 Move X21, X3
	012 Move W20, W2
	013 Move W22, W1
	014 Move X23, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0x96F000
	020 Move X0, [X0+2296]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X24+656], W8
	024 Move X0, X23
	025 Move W1, W22
	026 Call PlayerInputManager.CheckIfPlayerCanJoin, X0, X1
	027 Move TEMP, X0
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfNotEqual {56}
	031 Move X24, 0x96F000
	032 Move X24, [X24+2296]
	033 Move X0, [X24]
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {39}
	037 Call 0x1C17DFC
	038 Move X0, [X24]
	039 Move X8, [X0+184]
	040 Move W9, 1
	041 Move W1, W22
	042 Move X2, X21
	043 Move [X8+56], W9
	044 Move X0, [X23+88]
	045 Move W3, W20
	046 Move X4, X19
	047 Move X20, [X31+48]
	048 Move X19, [X31+56]
	049 Move X22, [X31+32]
	050 Move X21, [X31+40]
	051 Move X24, [X31+16]
	052 Move X23, [X31+24]
	053 Move X30, [X31+64]
	054 Call PlayerInput.Instantiate, X0, X1, X2, X3, X4
	055 Return X0
	056 Move X20, [X31+48]
	057 Move X19, [X31+56]
	058 Move X22, [X31+32]
	059 Move X21, [X31+40]
	060 Move X24, [X31+16]
	061 Move X23, [X31+24]
	062 Move X0, X31
	063 Move X30, [X31+64]
	064 Return X0

Method: System.String[] get_messages()

Disassembly:
	0x037DAF20 LDR X8, [X8 + 0x28]
	0x037DAF24 MOV X1, X20
	0x037DAF28 LDR X2, [X8]
	0x037DAF2C BL 0x2E05DE8
	0x037DAF30 LDR X0, [X21 + 0x180]
	0x037DAF34 FMOV S1, 0.5
	0x037DAF38 FCMP S0, S1
	0x037DAF3C CSET W23, GT
	0x037DAF40 CBZ X0, 0x37DB04C
	0x037DAF44 ADRP X8, 0x96E000
	0x037DAF48 LDR X8, [X8 + 0xD18]
	0x037DAF4C MOV X1, X20
	0x037DAF50 LDR X2, [X8]
	0x037DAF54 BL 0x2E00C50
	0x037DAF58 LDR X8, [X21 + 0x188]
	0x037DAF5C CBZ X8, 0x37DB04C
	0x037DAF60 ADRP X24, 0x96E000
	0x037DAF64 LDR X24, [X24 + 0xD10]
	0x037DAF68 MOV W22, W0
	0x037DAF6C MOV X0, X8
	0x037DAF70 MOV X1, X20
	0x037DAF74 LDR X2, [X24]
	0x037DAF78 BL 0x2E0A8B4
	0x037DAF7C LDR X0, [X21 + 0x190]
	0x037DAF80 CBZ X0, 0x37DB04C
	0x037DAF84 STR S2, [X31 + 0xC]
	0x037DAF88 STR S1, [X31 + 0x58]
	0x037DAF8C ADRP X8, 0x96E000
	0x037DAF90 LDR X8, [X8 + 0xD20]
	0x037DAF94 MOV X1, X20
	0x037DAF98 MOV V10.16B, V0.16B
	0x037DAF9C LDR X2, [X8]
	0x037DAFA0 BL 0x2E04C30
	0x037DAFA4 LDR X0, [X21 + 0x198]
	0x037DAFA8 CBZ X0, 0x37DB04C
	0x037DAFAC LDR X2, [X24]
	0x037DAFB0 MOV X1, X20
	0x037DAFB4 MOV V11.16B, V0.16B
	0x037DAFB8 MOV V12.16B, V1.16B

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xC08000
	005 Move X20, 0x91A000
	006 Move W8, [X19+657]
	007 Move X20, [X20+2760]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {23}
	012 Move X0, 0x91A000
	013 Move X0, [X0+2760]
	014 Call 0x1C17CF4
	015 Move X0, 0x96F000
	016 Move X0, [X0+2992]
	017 Call 0x1C17CF4
	018 Move X0, 0x96F000
	019 Move X0, [X0+2864]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X19+657], W8
	023 Move X0, [X20]
	024 Move W1, 2
	025 Call 0x1C17D6C
	026 Compare X0, 0
	027 JumpIfEqual {45}
	028 Move W8, [X0+24]
	029 Compare W8, 0
	030 JumpIfEqual {44}
	031 Move X9, 0x96F000
	032 Move X9, [X9+2864]
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X9, [X9]
	035 Move [X0+32], X9
	036 Move X8, 0x96F000
	037 Move X8, [X8+2992]
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move X8, [X8]
	041 Move [X0+40], X8
	042 Move X30, [X31+32]
	043 Return X0
	044 Call 0x1C17F28
	045 Call 0x1C17F20

Method: System.Boolean CheckIfPlayerCanJoin(System.Int32 playerIndex = -1)

Disassembly:
	0x037DA994 MOV W19, W1
	0x037DA998 MOV X20, X0
	0x037DA99C TBNZ X8, 0x0, 0x37DA9B4
	0x037DA9A0 ADRP X0, 0x96E000
	0x037DA9A4 LDR X0, [X0 + 0xCD8]
	0x037DA9A8 BL 0x1C16CF4
	0x037DA9AC MOVZ W8, 0x1
	0x037DA9B0 STRB W8, [X22 + 0x29E]
	0x037DA9B4 LDR X2, [X21]
	0x037DA9B8 ADD W8, W19, 0x3F
	0x037DA9BC CMP W19, 0x0
	0x037DA9C0 CSEL W8, W8, W19, LT
	0x037DA9C4 SBFM W1, W8, 0x6, 0x1F
	0x037DA9C8 MOV X0, X20
	0x037DA9CC BL 0x2DEEB94
	0x037DA9D0 LSRV X8, X0, X19
	0x037DA9D4 LDP X20, X19, [X31 + 0x20]
	0x037DA9D8 LDP X22, X21, [X31 + 0x10]
	0x037DA9DC AND W0, W8, 0x1
	0x037DA9E0 LDR X30, [X31], #0x30
	0x037DA9E4 RET
	0x037DA9E8 STP X30, X23, [X31 - 0x30]!
	0x037DA9EC STP X22, X21, [X31 + 0x10]
	0x037DA9F0 STP X20, X19, [X31 + 0x20]
	0x037DA9F4 ADRP X23, 0xC07000
	0x037DA9F8 ADRP X21, 0x96E000
	0x037DA9FC ADRP X22, 0x96E000
	0x037DAA00 LDRB W8, [X23 + 0x29F]
	0x037DAA04 LDR X21, [X21 + 0xCD8]
	0x037DAA08 LDR X22, [X22 + 0xCE0]
	0x037DAA0C MOV W20, W1
	0x037DAA10 MOV X19, X0
	0x037DAA14 TBNZ X8, 0x0, 0x37DAA38
	0x037DAA18 ADRP X0, 0x96E000
	0x037DAA1C LDR X0, [X0 + 0xCD8]
	0x037DAA20 BL 0x1C16CF4
	0x037DAA24 ADRP X0, 0x96E000
	0x037DAA28 LDR X0, [X0 + 0xCE0]
	0x037DAA2C BL 0x1C16CF4
	0x037DAA30 MOVZ W8, 0x1
	0x037DAA34 STRB W8, [X23 + 0x29F]
	0x037DAA38 ADD W8, W20, 0x3F
	0x037DAA3C LDR X2, [X21]
	0x037DAA40 CMP W20, 0x0
	0x037DAA44 CSEL W8, W8, W20, LT
	0x037DAA48 SBFM W21, W8, 0x6, 0x1F
	0x037DAA4C MOV X0, X19
	0x037DAA50 MOV W1, W21
	0x037DAA54 BL 0x2DEEB94
	0x037DAA58 MOVZ W8, 0x1
	0x037DAA5C LSLV X8, X8, X20
	0x037DAA60 LDR X3, [X22]
	0x037DAA64 BIC X2, X0, X8, 0x0
	0x037DAA68 MOV X0, X19
	0x037DAA6C MOV W1, W21
	0x037DAA70 LDP X20, X19, [X31 + 0x20]
	0x037DAA74 LDP X22, X21, [X31 + 0x10]
	0x037DAA78 LDP X30, X23, [X31], #0x30
	0x037DAA7C B 0x2DEEC30
	0x037DAA80 STR X30, [X31 - 0x20]!
	0x037DAA84 STP X20, X19, [X31 + 0x10]
	0x037DAA88 ADRP X20, 0xC07000
	0x037DAA8C ADRP X19, 0x96E000
	0x037DAA90 LDRB W8, [X20 + 0x2A0]
	0x037DAA94 LDR X19, [X19 + 0xCE8]
	0x037DAA98 TBNZ X8, 0x0, 0x37DAAB0
	0x037DAA9C ADRP X0, 0x96E000
	0x037DAAA0 LDR X0, [X0 + 0xCE8]
	0x037DAAA4 BL 0x1C16CF4
	0x037DAAA8 MOVZ W8, 0x1
	0x037DAAAC STRB W8, [X20 + 0x2A0]
	0x037DAAB0 LDR X0, [X19]
	0x037DAAB4 LDR W8, [X0 + 0xE0]
	0x037DAAB8 CBNZ W8, 0x37DAAC4
	0x037DAABC BL 0x1C16DFC
	0x037DAAC0 LDR X0, [X19]
	0x037DAAC4 LDR X8, [X0 + 0xB8]
	0x037DAAC8 LDP X20, X19, [X31 + 0x10]
	0x037DAACC LDR W0, [X8]
	0x037DAAD0 LDR X30, [X31], #0x20
	0x037DAAD4 RET
	0x037DAAD8 LDR V7, [X31 + 0x18]
	0x037DAADC LDR X8, [X31 + 0x10]
	0x037DAAE0 LDR V16, [X31 + 0x8]
	0x037DAAE4 LDR X9, [X31]
	0x037DAAE8 AND W10, W1, 0x1
	0x037DAAEC STR W2, [X0 + 0x4]
	0x037DAAF0 STP S0, S1, [X0 + 0x8]
	0x037DAAF4 STP S2, S3, [X0 + 0x10]
	0x037DAAF8 STP S4, S5, [X0 + 0x18]
	0x037DAAFC STR S6, [X0 + 0x20]
	0x037DAB00 STRB W10, [X0]
	0x037DAB04 STUR X9, [X0 + 0x24]
	0x037DAB08 STR S16, [X0 + 0x2C]
	0x037DAB0C STR X8, [X0 + 0x30]
	0x037DAB10 STR S7, [X0 + 0x38]
	0x037DAB14 RET
	0x037DAB18 STR X30, [X31 - 0x20]!
	0x037DAB1C STP X20, X19, [X31 + 0x10]
	0x037DAB20 ADRP X20, 0xC07000
	0x037DAB24 ADRP X19, 0x96E000
	0x037DAB28 LDRB W8, [X20 + 0x2A1]
	0x037DAB2C LDR X19, [X19 + 0xCE8]
	0x037DAB30 TBNZ X8, 0x0, 0x37DAB48
	0x037DAB34 ADRP X0, 0x96E000
	0x037DAB38 LDR X0, [X0 + 0xCE8]
	0x037DAB3C BL 0x1C16CF4
	0x037DAB40 MOVZ W8, 0x1
	0x037DAB44 STRB W8, [X20 + 0x2A1]
	0x037DAB48 ADD X0, X31, 0x8
	0x037DAB4C MOVZ W1, 0x50
	0x037DAB50 MOVZ W2, 0x6F
	0x037DAB54 MOVZ W3, 0x73
	0x037DAB58 MOVZ W4, 0x65
	0x037DAB5C MOV X5, X31
	0x037DAB60 STR W31, [X31 + 0x8]
	0x037DAB64 BL 0x375AA28
	0x037DAB68 LDR X8, [X19]
	0x037DAB6C LDR W9, [X31 + 0x8]
	0x037DAB70 LDP X20, X19, [X31 + 0x10]
	0x037DAB74 LDR X8, [X8 + 0xB8]
	0x037DAB78 STR W9, [X8]
	0x037DAB7C LDR X30, [X31], #0x20
	0x037DAB80 RET
	0x037DAB84 LDR X0, [X0 + 0x178]
	0x037DAB88 RET
	0x037DAB8C STR X1, [X0 + 0x178]
	0x037DAB90 RET
	0x037DAB94 LDR X0, [X0 + 0x180]
	0x037DAB98 RET
	0x037DAB9C STR X1, [X0 + 0x180]
	0x037DABA0 RET
	0x037DABA4 LDR X0, [X0 + 0x188]
	0x037DABA8 RET
	0x037DABAC STR X1, [X0 + 0x188]
	0x037DABB0 RET
	0x037DABB4 LDR X0, [X0 + 0x190]
	0x037DABB8 RET
	0x037DABBC STR X1, [X0 + 0x190]
	0x037DABC0 RET
	0x037DABC4 LDR X0, [X0 + 0x198]
	0x037DABC8 RET
	0x037DABCC STR X1, [X0 + 0x198]
	0x037DABD0 RET
	0x037DABD4 LDR X0, [X0 + 0x1A0]
	0x037DABD8 RET
	0x037DABDC STR X1, [X0 + 0x1A0]
	0x037DABE0 RET
	0x037DABE4 STR X30, [X31 - 0x30]!
	0x037DABE8 STP X22, X21, [X31 + 0x10]
	0x037DABEC STP X20, X19, [X31 + 0x20]
	0x037DABF0 ADRP X22, 0xC07000
	0x037DABF4 ADRP X21, 0x96E000
	0x037DABF8 ADRP X20, 0x96E000
	0x037DABFC LDRB W8, [X22 + 0x2A2]
	0x037DAC00 LDR X21, [X21 + 0xCF0]
	0x037DAC04 LDR X20, [X20 + 0xCE8]
	0x037DAC08 MOV X19, X0
	0x037DAC0C TBNZ X8, 0x0, 0x37DAC3C
	0x037DAC10 ADRP X0, 0x96E000
	0x037DAC14 LDR X0, [X0 + 0xCF0]
	0x037DAC18 BL 0x1C16CF4
	0x037DAC1C ADRP X0, 0x941000
	0x037DAC20 LDR X0, [X0 + 0xD18]
	0x037DAC24 BL 0x1C16CF4
	0x037DAC28 ADRP X0, 0x96E000
	0x037DAC2C LDR X0, [X0 + 0xCE8]
	0x037DAC30 BL 0x1C16CF4
	0x037DAC34 MOVZ W8, 0x1
	0x037DAC38 STRB W8, [X22 + 0x2A2]
	0x037DAC3C LDR X1, [X21]
	0x037DAC40 ADRP X21, 0x941000
	0x037DAC44 LDR X21, [X21 + 0xD18]
	0x037DAC48 MOV X0, X19
	0x037DAC4C BL 0x2E04888
	0x037DAC50 LDR X0, [X20]
	0x037DAC54 LDR W8, [X0 + 0xE0]
	0x037DAC58 CBNZ W8, 0x37DAC64
	0x037DAC5C BL 0x1C16DFC
	0x037DAC60 LDR X0, [X20]
	0x037DAC64 LDR X8, [X21]
	0x037DAC68 LDR X9, [X0 + 0xB8]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0xC08000
	009 Move X21, 0x91A000
	010 Move W8, [X22+658]
	011 Move X21, [X21+1432]
	012 Move W19, W1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {41}
	018 Move X0, 0x91A000
	019 Move X0, [X0+2600]
	020 Call 0x1C17CF4
	021 Move X0, 0x91A000
	022 Move X0, [X0+1880]
	023 Call 0x1C17CF4
	024 Move X0, 0x91A000
	025 Move X0, [X0+1432]
	026 Call 0x1C17CF4
	027 Move X0, 0x96F000
	028 Move X0, [X0+2296]
	029 Call 0x1C17CF4
	030 Move X0, 0x96F000
	031 Move X0, [X0+3248]
	032 Call 0x1C17CF4
	033 Move X0, 0x96F000
	034 Move X0, [X0+3256]
	035 Call 0x1C17CF4
	036 Move X0, 0x96F000
	037 Move X0, [X0+3264]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X22+658], W8
	041 Move X0, [X21]
	042 Move [X31+12], W31
	043 Move X21, [X20+88]
	044 Move W8, [X0+224]
	045 Compare W8, 0
	046 JumpIfNotEqual {48}
	047 Call 0x1C17DFC
	048 Move X22, 0x91A000
	049 Move X22, [X22+2600]
	050 Move X0, X21
	051 Move X1, X31
	052 Move X2, X31
	053 Call Object.op_Equality, X0, X1
	054 Move TEMP, X0
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfNotEqual {66}
	058 Move X0, [X22]
	059 Move X19, 0x96F000
	060 Move W8, [X0+224]
	061 Move X19, [X19+3248]
	062 Compare W8, 0
	063 JumpIfNotEqual {65}
	064 Call 0x1C17DFC
	065 Move X0, [X19]
	066 Move W8, [X20+36]
	067 Move TEMP, X8
	068 And TEMP, TEMP, -2147483648
	069 Compare TEMP, -2147483648
	070 JumpIfEqual {92}
	071 Move X21, 0xC08000
	072 Move W8, [X21+780]
	073 Compare W8, 0
	074 JumpIfNotEqual {80}
	075 Move X0, 0x96F000
	076 Move X0, [X0+2296]
	077 Call 0x1C17CF4
	078 Move W8, 1
	079 Move [X21+780], W8
	080 Move X21, 0x96F000
	081 Move X21, [X21+2296]
	082 Move X0, [X21]
	083 Move W8, [X0+224]
	084 Compare W8, 0
	085 JumpIfNotEqual {88}
	086 Call 0x1C17DFC
	087 Move X0, [X21]
	088 Move X8, [X0+184]
	089 Move W9, [X8]
	090 Move W8, [X20+36]
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Add W31, W19, 1
	093 Move X21, 0x96F000
	094 Move X21, [X21+2296]
	095 Move W20, W31
	096 Move X0, [X21]
	097 Move W8, [X0+224]
	098 Compare W8, 0
	099 JumpIfNotEqual {102}
	100 Call 0x1C17DFC
	101 Move X0, [X21]
	102 Move X8, [X0+184]
	103 Move W8, [X8]
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Move W8, [X0+224]
	106 Compare W8, 0
	107 JumpIfNotEqual {110}
	108 Call 0x1C17DFC
	109 Move X0, [X21]
	110 Move X8, [X0+184]
	111 Move X8, [X8+8]
	112 Compare X8, 0
	113 JumpIfEqual {198}
	114 Move W9, [X8+24]
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Move X23, W20
	117 Add X8, X8, X23
	118 Move X8, [X8+32]
	119 Compare X8, 0
	120 JumpIfEqual {198}
	121 Move W8, [X8+144]
	122 NotImplemented "Instruction CMP not yet implemented."
	123 Add W20, W20, 1
	124 Move W0, 1
	125 Add X0, X31, 12
	126 Move X1, X31
	127 Move [X31+12], W8
	128 Call Int32.ToString, X0
	129 Move X8, 0x96F000
	130 Move X8, [X8+3264]
	131 Move X1, X0
	132 Move X2, X31
	133 Move X8, [X8]
	134 Move X0, X8
	135 Call String.Concat, X0, X1
	136 Move X8, [X22]
	137 Move X19, X0
	138 Move W9, [X8+224]
	139 Compare W9, 0
	140 JumpIfNotEqual {185}
	141 Move X0, X8
	142 Move X8, 0x91A000
	143 Move X8, [X8+1880]
	144 Add X1, X31, 8
	145 Move [X31+8], W19
	146 Move X0, [X8]
	147 Call 0x1C17E04
	148 Move X8, [X21]
	149 Move X19, X0
	150 Move W9, [X8+224]
	151 Compare W9, 0
	152 JumpIfNotEqual {156}
	153 Move X0, X8
	154 Call 0x1C17DFC
	155 Move X8, [X21]
	156 Move X8, [X8+184]
	157 Move X8, [X8+8]
	158 Compare X8, 0
	159 JumpIfEqual {198}
	160 Move W9, [X8+24]
	161 NotImplemented "Instruction CMP not yet implemented."
	162 Move X9, 0x96F000
	163 Move X9, [X9+3256]
	164 Add X8, X8, X23
	165 Move X2, [X8+32]
	166 Move X1, X19
	167 Move X0, [X9]
	168 Move X3, X31
	169 Call String.Format, X0, X1, X2
	170 Move X8, [X21]
	171 Move X8, [X8+184]
	172 Move X8, [X8+8]
	173 Compare X8, 0
	174 JumpIfEqual {198}
	175 Move W9, [X8+24]
	176 NotImplemented "Instruction CMP not yet implemented."
	177 Move X19, X0
	178 Move X0, [X22]
	179 Add X8, X8, X23
	180 Move X20, [X8+32]
	181 Move W9, [X0+224]
	182 Compare W9, 0
	183 JumpIfNotEqual {185}
	184 Call 0x1C17DFC
	185 Move X0, X19
	186 Move X1, X20
	187 Move X2, X31
	188 Call Debug.LogError, X0, X1
	189 Move W0, W31
	190 Move X20, [X31+48]
	191 Move X19, [X31+56]
	192 Move X22, [X31+32]
	193 Move X21, [X31+40]
	194 Move X30, [X31+16]
	195 Move X23, [X31+24]
	196 Add X31, X31, 64
	197 Return X0
	198 Call 0x1C17F20
	199 Call 0x1C17F28

Method: System.Void OnUnpairedDeviceUsed(UnityEngine.InputSystem.InputControl control, UnityEngine.InputSystem.LowLevel.InputEventPtr eventPtr)

Disassembly:
	0x037DAFBC MOV V13.16B, V2.16B
	0x037DAFC0 MOV V14.16B, V3.16B
	0x037DAFC4 BL 0x2E0A8B4
	0x037DAFC8 LDR X0, [X21 + 0x1A0]
	0x037DAFCC CBZ X0, 0x37DB04C
	0x037DAFD0 LDR X2, [X24]
	0x037DAFD4 MOV X1, X20
	0x037DAFD8 MOV V15.16B, V0.16B
	0x037DAFDC MOV V8.16B, V1.16B
	0x037DAFE0 MOV V9.16B, V2.16B
	0x037DAFE4 BL 0x2E0A8B4
	0x037DAFE8 LDR V3, [X31 + 0x58]
	0x037DAFEC LDRB W8, [X31 + 0x5E]
	0x037DAFF0 LDRH W9, [X31 + 0x5C]
	0x037DAFF4 STRB W23, [X19]
	0x037DAFF8 STP S10, S3, [X19 + 0x8]
	0x037DAFFC LDR V3, [X31 + 0xC]
	0x037DB000 STR W22, [X19 + 0x4]
	0x037DB004 STP S12, S13, [X19 + 0x18]
	0x037DB008 STP S14, S15, [X19 + 0x20]
	0x037DB00C STP S3, S11, [X19 + 0x10]
	0x037DB010 STP S8, S9, [X19 + 0x28]
	0x037DB014 STP S0, S1, [X19 + 0x30]
	0x037DB018 STURH W9, [X19 + 0x1]
	0x037DB01C STRB W8, [X19 + 0x3]
	0x037DB020 STR S2, [X19 + 0x38]
	0x037DB024 LDP X20, X19, [X31 + 0x80]
	0x037DB028 LDP X22, X21, [X31 + 0x70]
	0x037DB02C LDP X24, X23, [X31 + 0x60]
	0x037DB030 LDR X30, [X31 + 0x50]
	0x037DB034 LDP D9, D8, [X31 + 0x40]
	0x037DB038 LDP D11, D10, [X31 + 0x30]
	0x037DB03C LDP D13, D12, [X31 + 0x20]
	0x037DB040 LDP D15, D14, [X31 + 0x10]
	0x037DB044 ADD X31, X31, 0x90
	0x037DB048 RET
	0x037DB04C BL 0x1C16F20
	0x037DB050 STR X30, [X31 - 0x30]!
	0x037DB054 STP X22, X21, [X31 + 0x10]
	0x037DB058 STP X20, X19, [X31 + 0x20]
	0x037DB05C ADRP X22, 0xC06000
	0x037DB060 LDRB W8, [X22 + 0x2A5]
	0x037DB064 MOV X20, X2
	0x037DB068 MOV X19, X1
	0x037DB06C MOV X21, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xC08000
	006 Move W8, [X21+659]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x942000
	014 Move X0, [X0+3216]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+659], W8
	018 Move W8, [X19+40]
	019 Compare W8, 0
	020 JumpIfEqual {24}
	021 Move W8, [X19+44]
	022 Compare W8, 0
	023 JumpIfEqual {29}
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X30, [X31+32]
	027 Move X21, [X31+40]
	028 Return 
	029 Compare X20, 0
	030 JumpIfEqual {24}
	031 Move X8, 0x941000
	032 Move X8, [X8+3216]
	033 Move X9, [X20]
	034 Move X8, [X8]
	035 Move W11, [X9+304]
	036 Move W10, [X8+304]
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X9, [X9+200]
	039 Add X9, X9, X10
	040 NotImplemented "Instruction LDUR not yet implemented."
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move X1, [X20+120]
	043 Move X0, X19
	044 Call PlayerInputManager.IsDeviceUsableWithPlayerActions, X0, X1
	045 Move TEMP, X0
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfNotEqual {24}
	049 Move X4, [X20+120]
	050 Move X0, X19
	051 Move X20, [X31+16]
	052 Move X19, [X31+24]
	053 Move TEMP, 0
	054 Not TEMP
	055 Move W1, TEMP
	056 Move TEMP, 0
	057 Not TEMP
	058 Move W2, TEMP
	059 Move X3, X31
	060 Move X30, [X31+32]
	061 Move X21, [X31+40]
	062 Call PlayerInputManager.JoinPlayer, X0, X1, X2, X3, X4
	063 Return 

Method: System.Void OnEnable()

Disassembly:
	0x037DB410 STR X1, [X0 + 0x1A0]
	0x037DB414 RET
	0x037DB418 LDR X0, [X0 + 0x1A8]
	0x037DB41C RET
	0x037DB420 STR X1, [X0 + 0x1A8]
	0x037DB424 RET
	0x037DB428 LDR X0, [X0 + 0x1B0]
	0x037DB42C RET
	0x037DB430 STR X1, [X0 + 0x1B0]
	0x037DB434 RET
	0x037DB438 LDR X0, [X0 + 0x1B8]
	0x037DB43C RET
	0x037DB440 STR X1, [X0 + 0x1B8]
	0x037DB444 RET
	0x037DB448 STR X30, [X31 - 0x60]!
	0x037DB44C STP X28, X27, [X31 + 0x10]
	0x037DB450 STP X26, X25, [X31 + 0x20]
	0x037DB454 STP X24, X23, [X31 + 0x30]
	0x037DB458 STP X22, X21, [X31 + 0x40]
	0x037DB45C STP X20, X19, [X31 + 0x50]
	0x037DB460 ADRP X28, 0xC06000
	0x037DB464 ADRP X27, 0x96D000
	0x037DB468 ADRP X22, 0x969000
	0x037DB46C ADRP X26, 0x96D000
	0x037DB470 ADRP X20, 0x969000
	0x037DB474 ADRP X25, 0x96D000
	0x037DB478 ADRP X24, 0x96D000
	0x037DB47C ADRP X23, 0x96D000
	0x037DB480 ADRP X21, 0x96D000
	0x037DB484 LDR X27, [X27 + 0xD38]
	0x037DB488 LDR X22, [X22 + 0xDD0]
	0x037DB48C LDR X26, [X26 + 0xD40]
	0x037DB490 LDRB W8, [X28 + 0x2A7]
	0x037DB494 LDR X20, [X20 + 0xED8]
	0x037DB498 LDR X25, [X25 + 0xD48]
	0x037DB49C LDR X24, [X24 + 0xD50]
	0x037DB4A0 LDR X23, [X23 + 0xD58]
	0x037DB4A4 LDR X21, [X21 + 0xD60]
	0x037DB4A8 MOV X19, X0
	0x037DB4AC TBNZ X8, 0x0, 0x37DB518
	0x037DB4B0 ADRP X0, 0x969000
	0x037DB4B4 LDR X0, [X0 + 0xED8]
	0x037DB4B8 BL 0x1C16CF4
	0x037DB4BC ADRP X0, 0x969000
	0x037DB4C0 LDR X0, [X0 + 0xDD0]
	0x037DB4C4 BL 0x1C16CF4
	0x037DB4C8 ADRP X0, 0x96D000
	0x037DB4CC LDR X0, [X0 + 0xD58]
	0x037DB4D0 BL 0x1C16CF4
	0x037DB4D4 ADRP X0, 0x96D000
	0x037DB4D8 LDR X0, [X0 + 0xD48]
	0x037DB4DC BL 0x1C16CF4
	0x037DB4E0 ADRP X0, 0x96D000
	0x037DB4E4 LDR X0, [X0 + 0xD40]
	0x037DB4E8 BL 0x1C16CF4
	0x037DB4EC ADRP X0, 0x96D000
	0x037DB4F0 LDR X0, [X0 + 0xD60]
	0x037DB4F4 BL 0x1C16CF4
	0x037DB4F8 ADRP X0, 0x96D000
	0x037DB4FC LDR X0, [X0 + 0xD38]
	0x037DB500 BL 0x1C16CF4
	0x037DB504 ADRP X0, 0x96D000
	0x037DB508 LDR X0, [X0 + 0xD50]
	0x037DB50C BL 0x1C16CF4
	0x037DB510 MOVZ W8, 0x1
	0x037DB514 STRB W8, [X28 + 0x2A7]
	0x037DB518 MOV X0, X19
	0x037DB51C MOV X1, X31
	0x037DB520 BL 0x37C1230
	0x037DB524 LDR X1, [X27]
	0x037DB528 LDR X2, [X22]
	0x037DB52C MOV X0, X19
	0x037DB530 BL 0x21FC754
	0x037DB534 STR X0, [X19 + 0x1B0]
	0x037DB538 LDR X1, [X26]
	0x037DB53C LDR X2, [X20]
	0x037DB540 MOV X0, X19
	0x037DB544 BL 0x21FC754
	0x037DB548 STR X0, [X19 + 0x1B8]
	0x037DB54C LDR X1, [X25]
	0x037DB550 LDR X2, [X22]
	0x037DB554 MOV X0, X19
	0x037DB558 BL 0x21FC754
	0x037DB55C STR X0, [X19 + 0x190]
	0x037DB560 LDR X1, [X24]
	0x037DB564 LDR X2, [X20]
	0x037DB568 MOV X0, X19
	0x037DB56C BL 0x21FC754
	0x037DB570 STR X0, [X19 + 0x198]
	0x037DB574 LDR X1, [X23]
	0x037DB578 LDR X2, [X22]
	0x037DB57C MOV X0, X19
	0x037DB580 BL 0x21FC754
	0x037DB584 STR X0, [X19 + 0x1A0]
	0x037DB588 LDR X1, [X21]
	0x037DB58C LDR X2, [X20]
	0x037DB590 MOV X0, X19
	0x037DB594 BL 0x21FC754
	0x037DB598 STR X0, [X19 + 0x1A8]
	0x037DB59C LDP X20, X19, [X31 + 0x50]
	0x037DB5A0 LDP X22, X21, [X31 + 0x40]
	0x037DB5A4 LDP X24, X23, [X31 + 0x30]
	0x037DB5A8 LDP X26, X25, [X31 + 0x20]
	0x037DB5AC LDP X28, X27, [X31 + 0x10]
	0x037DB5B0 LDR X30, [X31], #0x60
	0x037DB5B4 RET
	0x037DB5B8 MOV X1, X31
	0x037DB5BC B 0x37C1378
	0x037DB5C0 STP X30, X21, [X31 - 0x20]!
	0x037DB5C4 STP X20, X19, [X31 + 0x10]
	0x037DB5C8 ADRP X20, 0xC06000
	0x037DB5CC ADRP X19, 0x96B000
	0x037DB5D0 LDRB W8, [X20 + 0x2A8]
	0x037DB5D4 LDR X19, [X19 + 0xA68]
	0x037DB5D8 TBNZ X8, 0x0, 0x37DB608
	0x037DB5DC ADRP X0, 0x96B000
	0x037DB5E0 LDR X0, [X0 + 0xA68]
	0x037DB5E4 BL 0x1C16CF4
	0x037DB5E8 ADRP X0, 0x96D000
	0x037DB5EC LDR X0, [X0 + 0xD68]
	0x037DB5F0 BL 0x1C16CF4
	0x037DB5F4 ADRP X0, 0x940000
	0x037DB5F8 LDR X0, [X0 + 0x270]
	0x037DB5FC BL 0x1C16CF4
	0x037DB600 MOVZ W8, 0x1
	0x037DB604 STRB W8, [X20 + 0x2A8]
	0x037DB608 LDR X0, [X19]
	0x037DB60C ADRP X20, 0x940000
	0x037DB610 LDR W8, [X0 + 0xE0]
	0x037DB614 LDR X20, [X20 + 0x270]
	0x037DB618 CBNZ W8, 0x37DB624
	0x037DB61C BL 0x1C16DFC
	0x037DB620 LDR X0, [X19]
	0x037DB624 LDR X8, [X20]
	0x037DB628 LDR X9, [X0 + 0xB8]
	0x037DB62C ADRP X21, 0x96D000
	0x037DB630 LDR W10, [X8 + 0xE0]
	0x037DB634 LDP X20, X19, [X9 + 0x180]
	0x037DB638 LDR X21, [X21 + 0xD68]
	0x037DB63C CBNZ W10, 0x37DB648
	0x037DB640 MOV X0, X8
	0x037DB644 BL 0x1C16DFC
	0x037DB648 LDR X2, [X21]
	0x037DB64C MOV X0, X20
	0x037DB650 MOV X1, X19
	0x037DB654 LDP X20, X19, [X31 + 0x10]
	0x037DB658 LDP X30, X21, [X31], #0x20
	0x037DB65C B 0x220B6E4
	0x037DB660 STP X30, X21, [X31 - 0x20]!
	0x037DB664 STP X20, X19, [X31 + 0x10]
	0x037DB668 ADRP X20, 0xC06000
	0x037DB66C ADRP X19, 0x96B000
	0x037DB670 LDRB W8, [X20 + 0x2A9]
	0x037DB674 LDR X19, [X19 + 0xA68]
	0x037DB678 TBNZ X8, 0x0, 0x37DB6A8
	0x037DB67C ADRP X0, 0x96B000
	0x037DB680 LDR X0, [X0 + 0xA68]
	0x037DB684 BL 0x1C16CF4
	0x037DB688 ADRP X0, 0x96D000
	0x037DB68C LDR X0, [X0 + 0xD68]
	0x037DB690 BL 0x1C16CF4
	0x037DB694 ADRP X0, 0x940000
	0x037DB698 LDR X0, [X0 + 0x270]
	0x037DB69C BL 0x1C16CF4
	0x037DB6A0 MOVZ W8, 0x1
	0x037DB6A4 STRB W8, [X20 + 0x2A9]
	0x037DB6A8 LDR X0, [X19]
	0x037DB6AC ADRP X20, 0x940000
	0x037DB6B0 LDR W8, [X0 + 0xE0]
	0x037DB6B4 LDR X20, [X20 + 0x270]
	0x037DB6B8 CBNZ W8, 0x37DB6C4
	0x037DB6BC BL 0x1C16DFC
	0x037DB6C0 LDR X0, [X19]
	0x037DB6C4 LDR X8, [X20]
	0x037DB6C8 LDR X9, [X0 + 0xB8]
	0x037DB6CC ADRP X21, 0x96D000
	0x037DB6D0 LDR W10, [X8 + 0xE0]
	0x037DB6D4 LDP X20, X19, [X9 + 0x190]
	0x037DB6D8 LDR X21, [X21 + 0xD68]
	0x037DB6DC CBNZ W10, 0x37DB6E8
	0x037DB6E0 MOV X0, X8
	0x037DB6E4 BL 0x1C16DFC
	0x037DB6E8 LDR X2, [X21]
	0x037DB6EC MOV X0, X20
	0x037DB6F0 MOV X1, X19
	0x037DB6F4 LDP X20, X19, [X31 + 0x10]
	0x037DB6F8 LDP X30, X21, [X31], #0x20
	0x037DB6FC B 0x220B6E4
	0x037DB700 STP X30, X21, [X31 - 0x20]!
	0x037DB704 STP X20, X19, [X31 + 0x10]
	0x037DB708 ADRP X20, 0xC06000
	0x037DB70C LDRB W8, [X20 + 0x2AA]
	0x037DB710 MOV X19, X0
	0x037DB714 TBNZ X8, 0x0, 0x37DB738
	0x037DB718 ADRP X0, 0x96B000
	0x037DB71C LDR X0, [X0 + 0xA68]
	0x037DB720 BL 0x1C16CF4
	0x037DB724 ADRP X0, 0x940000
	0x037DB728 LDR X0, [X0 + 0x270]
	0x037DB72C BL 0x1C16CF4
	0x037DB730 MOVZ W8, 0x1
	0x037DB734 STRB W8, [X20 + 0x2AA]
	0x037DB738 MOV X0, X19
	0x037DB73C MOV X1, X31
	0x037DB740 BL 0x37C1230
	0x037DB744 LDR X0, [X19 + 0x120]
	0x037DB748 BL 0x37DB7F8
	0x037DB74C CBZ X0, 0x37DB75C

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+80], X30
	003 Move [X31+96], X22
	004 Move [X31+104], X21
	005 Move [X31+112], X20
	006 Move [X31+120], X19
	007 Move X20, 0xC07000
	008 Move W8, [X20+660]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {31}
	014 Move X0, 0x919000
	015 Move X0, [X0+2600]
	016 Call 0x1C17CF4
	017 Move X0, 0x96E000
	018 Move X0, [X0+2288]
	019 Call 0x1C17CF4
	020 Move X0, 0x919000
	021 Move X0, [X0+1432]
	022 Call 0x1C17CF4
	023 Move X0, 0x96E000
	024 Move X0, [X0+2296]
	025 Call 0x1C17CF4
	026 Move X0, 0x96E000
	027 Move X0, [X0+3272]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X20+660], W8
	031 Move X20, 0xC07000
	032 Move X21, 0x919000
	033 Move W8, [X20+779]
	034 Move X21, [X21+1432]
	035 Move [X31+48], X31
	036 Move [X31+56], X31
	037 Move [X31+64], X31
	038 Compare W8, 0
	039 JumpIfNotEqual {45}
	040 Move X0, 0x96E000
	041 Move X0, [X0+2552]
	042 Call 0x1C17CF4
	043 Move W8, 1
	044 Move [X20+779], W8
	045 Move X22, 0x96E000
	046 Move X22, [X22+2552]
	047 Move X0, [X21]
	048 Move X8, [X22]
	049 Move W9, [X0+224]
	050 Move X8, [X8+184]
	051 Move X20, [X8]
	052 Compare W9, 0
	053 JumpIfNotEqual {55}
	054 Call 0x1C17DFC
	055 Move X0, X20
	056 Move X1, X31
	057 Move X2, X31
	058 Call Object.op_Equality, X0, X1
	059 Move TEMP, X0
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfNotEqual {112}
	063 Move X20, 0xC07000
	064 Move W8, [X20+781]
	065 Compare W8, 0
	066 JumpIfNotEqual {72}
	067 Move X0, 0x96E000
	068 Move X0, [X0+2552]
	069 Call 0x1C17CF4
	070 Move W8, 1
	071 Move [X20+781], W8
	072 Move X8, [X22]
	073 Add X0, X31, 48
	074 Move X1, X31
	075 Move X8, [X8+184]
	076 Move [X8], X19
	077 Move X8, [X19+80]
	078 Move V0, [X19+4]
	079 Move [X31+64], X8
	080 Move [X31+3], V0
	081 Call InputActionProperty.get_reference, X0
	082 Move X8, [X21]
	083 Move X20, X0
	084 Move W9, [X8+224]
	085 Compare W9, 0
	086 JumpIfNotEqual {89}
	087 Move X0, X8
	088 Call 0x1C17DFC
	089 Move X0, X20
	090 Move X1, X31
	091 Move X2, X31
	092 Call Object.op_Inequality, X0, X1
	093 Move TEMP, X0
	094 And TEMP, TEMP, 1
	095 Compare TEMP, 1
	096 JumpIfNotEqual {197}
	097 Add X22, X19, 64
	098 Move X8, [X22+16]
	099 Move V0, [X22]
	100 Add X0, X31, 48
	101 Move X1, X31
	102 Move [X31+64], X8
	103 Move [X31+3], V0
	104 Call InputActionProperty.get_action, X0
	105 Compare X0, 0
	106 JumpIfEqual {125}
	107 Move X1, X31
	108 Call InputAction.get_actionMap, X0
	109 Compare X0, 0
	110 JumpIfEqual {125}
	111 Move X20, [X0+32]
	112 Move X8, 0x919000
	113 Move X8, [X8+2600]
	114 Move X20, 0x96E000
	115 Move X0, [X8]
	116 Move W8, [X0+224]
	117 Move X20, [X20+3272]
	118 Compare W8, 0
	119 JumpIfNotEqual {121}
	120 Call 0x1C17DFC
	121 Move X0, [X20]
	122 Move X1, X19
	123 Move X2, X31
	124 Call Debug.LogWarning, X0, X1
	125 Move X20, X31
	126 Move X0, [X21]
	127 Move W8, [X0+224]
	128 Compare W8, 0
	129 JumpIfNotEqual {131}
	130 Call 0x1C17DFC
	131 Move X0, X20
	132 Move X1, X31
	133 Move X2, X31
	134 Call Object.op_Inequality, X0, X1
	135 Move TEMP, X0
	136 And TEMP, TEMP, 1
	137 Compare TEMP, 1
	138 JumpIfNotEqual {197}
	139 Move X8, [X22+16]
	140 Move V0, [X22]
	141 Add X0, X31, 48
	142 Move X1, X31
	143 Move [X31+64], X8
	144 Move [X31+3], V0
	145 Call InputActionProperty.get_action, X0
	146 Compare X0, 0
	147 JumpIfEqual {237}
	148 Move X1, X31
	149 Call InputAction.get_actionMap, X0
	150 Compare X0, 0
	151 JumpIfEqual {237}
	152 Move X8, [X21]
	153 Move X20, [X0+32]
	154 Move W9, [X8+224]
	155 Compare W9, 0
	156 JumpIfNotEqual {159}
	157 Move X0, X8
	158 Call 0x1C17DFC
	159 Move X8, 0x96E000
	160 Move X8, [X8+2288]
	161 Move X0, X20
	162 Move X1, [X8]
	163 Call 0x222E35C, X0
	164 Move V0, [X22]
	165 Move X8, [X22+16]
	166 Move X20, X0
	167 Add X0, X31, 48
	168 Move X1, X31
	169 Move [X31+3], V0
	170 Move [X31+64], X8
	171 Call InputActionProperty.get_action, X0
	172 Compare X0, 0
	173 JumpIfEqual {237}
	174 Compare X20, 0
	175 JumpIfEqual {237}
	176 Move X1, [X0+16]
	177 Move X0, X20
	178 Move W2, W31
	179 Move X3, X31
	180 Call InputActionAsset.FindAction, X0, X1, X2
	181 Move X1, X31
	182 Call InputActionReference.Create, X0
	183 Move X1, X0
	184 Add X0, X31, 24
	185 Move X2, X31
	186 Move [X31+24], X31
	187 Move [X31+32], X31
	188 Move [X31+40], X31
	189 Call InputActionProperty..ctor, X0, X1
	190 NotImplemented "Instruction LDUR not yet implemented."
	191 Move X8, [X31+40]
	192 Add X1, X31, 0
	193 Move X0, X19
	194 Move [X31], V0
	195 Move [X31+16], X8
	196 Call PlayerInputManager.set_joinAction, X0, X1
	197 Move X21, 0x96E000
	198 Move X21, [X21+2296]
	199 Move X20, X31
	200 Move X0, [X21]
	201 Move W8, [X0+224]
	202 Compare W8, 0
	203 JumpIfNotEqual {206}
	204 Call 0x1C17DFC
	205 Move X0, [X21]
	206 Move X8, [X0+184]
	207 NotImplemented "Instruction LDRSW not yet implemented."
	208 NotImplemented "Instruction CMP not yet implemented."
	209 Move W9, [X0+224]
	210 Compare W9, 0
	211 JumpIfNotEqual {215}
	212 Call 0x1C17DFC
	213 Move X8, [X21]
	214 Move X8, [X8+184]
	215 Move X8, [X8+8]
	216 Compare X8, 0
	217 JumpIfEqual {237}
	218 Move W9, [X8+24]
	219 NotImplemented "Instruction CMP not yet implemented."
	220 Add X8, X8, X20
	221 Move X1, [X8+32]
	222 Move X0, X19
	223 Call PlayerInputManager.NotifyPlayerJoined, X0, X1
	224 Add X20, X20, 1
	225 Move W8, [X19+40]
	226 Compare W8, 0
	227 JumpIfEqual {230}
	228 Move X0, X19
	229 Call PlayerInputManager.EnableJoining, X0
	230 Move X20, [X31+112]
	231 Move X19, [X31+120]
	232 Move X22, [X31+96]
	233 Move X21, [X31+104]
	234 Move X30, [X31+80]
	235 Add X31, X31, 128
	236 Return 
	237 Call 0x1C17F20
	238 Call 0x1C17F28

Method: System.Void OnDisable()

Disassembly:
	0x037DB750 LDR W8, [X0 + 0x28]
	0x037DB754 TBNZ X8, 0x8, 0x37DB768
	0x037DB758 TBNZ X8, 0x9, 0x37DB79C
	0x037DB75C LDP X20, X19, [X31 + 0x10]
	0x037DB760 LDP X30, X21, [X31], #0x20
	0x037DB764 RET
	0x037DB768 ADRP X20, 0x96B000
	0x037DB76C LDR X20, [X20 + 0xA68]
	0x037DB770 LDR X0, [X20]
	0x037DB774 LDR W8, [X0 + 0xE0]
	0x037DB778 CBNZ W8, 0x37DB784
	0x037DB77C BL 0x1C16DFC
	0x037DB780 LDR X0, [X20]
	0x037DB784 ADRP X8, 0x940000
	0x037DB788 LDR X8, [X8 + 0x270]
	0x037DB78C LDR X9, [X0 + 0xB8]
	0x037DB790 LDR X8, [X8]
	0x037DB794 LDP X21, X20, [X9 + 0x180]
	0x037DB798 B 0x37DB7CC
	0x037DB79C ADRP X20, 0x96B000
	0x037DB7A0 LDR X20, [X20 + 0xA68]
	0x037DB7A4 LDR X0, [X20]
	0x037DB7A8 LDR W8, [X0 + 0xE0]
	0x037DB7AC CBNZ W8, 0x37DB7B8
	0x037DB7B0 BL 0x1C16DFC
	0x037DB7B4 LDR X0, [X20]
	0x037DB7B8 ADRP X8, 0x940000
	0x037DB7BC LDR X8, [X8 + 0x270]
	0x037DB7C0 LDR X9, [X0 + 0xB8]
	0x037DB7C4 LDR X8, [X8]
	0x037DB7C8 LDP X21, X20, [X9 + 0x190]
	0x037DB7CC LDR W10, [X8 + 0xE0]
	0x037DB7D0 CBNZ W10, 0x37DB7DC
	0x037DB7D4 MOV X0, X8
	0x037DB7D8 BL 0x1C16DFC
	0x037DB7DC MOV X0, X19
	0x037DB7E0 MOV X2, X20
	0x037DB7E4 LDP X20, X19, [X31 + 0x10]
	0x037DB7E8 MOV X1, X21
	0x037DB7EC MOV X3, X31
	0x037DB7F0 LDP X30, X21, [X31], #0x20
	0x037DB7F4 B 0x376F3E4
	0x037DB7F8 STP X30, X21, [X31 - 0x20]!
	0x037DB7FC STP X20, X19, [X31 + 0x10]
	0x037DB800 ADRP X20, 0xC06000
	0x037DB804 ADRP X21, 0x96D000
	0x037DB808 LDRB W8, [X20 + 0x2C4]
	0x037DB80C LDR X21, [X21 + 0xD70]
	0x037DB810 MOV X19, X0
	0x037DB814 TBNZ X8, 0x0, 0x37DB82C
	0x037DB818 ADRP X0, 0x96D000
	0x037DB81C LDR X0, [X0 + 0xD70]
	0x037DB820 BL 0x1C16CF4
	0x037DB824 MOVZ W8, 0x1
	0x037DB828 STRB W8, [X20 + 0x2C4]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xC07000
	006 Move W8, [X20+661]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x919000
	013 Move X0, [X0+1432]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+661], W8
	017 Move X21, 0xC07000
	018 Move X20, 0x919000
	019 Move W8, [X21+779]
	020 Move X20, [X20+1432]
	021 Compare W8, 0
	022 JumpIfNotEqual {28}
	023 Move X0, 0x96E000
	024 Move X0, [X0+2552]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X21+779], W8
	028 Move X21, 0x96E000
	029 Move X21, [X21+2552]
	030 Move X0, [X20]
	031 Move X8, [X21]
	032 Move W9, [X0+224]
	033 Move X8, [X8+184]
	034 Move X20, [X8]
	035 Compare W9, 0
	036 JumpIfNotEqual {38}
	037 Call 0x1C17DFC
	038 Move X0, X20
	039 Move X1, X19
	040 Move X2, X31
	041 Call Object.op_Equality, X0, X1
	042 Move TEMP, X0
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfNotEqual {58}
	046 Move X20, 0xC07000
	047 Move W8, [X20+781]
	048 Compare W8, 0
	049 JumpIfNotEqual {55}
	050 Move X0, 0x96E000
	051 Move X0, [X0+2552]
	052 Call 0x1C17CF4
	053 Move W8, 1
	054 Move [X20+781], W8
	055 Move X8, [X21]
	056 Move X8, [X8+184]
	057 Move [X8], X31
	058 Move W8, [X19+40]
	059 Compare W8, 0
	060 JumpIfEqual {68}
	061 Move X0, X19
	062 Move X20, [X31+16]
	063 Move X19, [X31+24]
	064 Move X30, [X31+32]
	065 Move X21, [X31+40]
	066 Call PlayerInputManager.DisableJoining, X0
	067 Return 
	068 Move X20, [X31+16]
	069 Move X19, [X31+24]
	070 Move X30, [X31+32]
	071 Move X21, [X31+40]
	072 Return 

Method: System.Void UpdateSplitScreen()

Disassembly:
	0x037D9B18 CBZ X8, 0x37D9C64
	0x037D9B1C LDR W9, [X8 + 0x18]
	0x037D9B20 CMP W20, W9
	0x037D9B24 B.CS 0x37D9C68
	0x037D9B28 SXTW X23, W20
	0x037D9B2C ADD X8, X8, X23, 0x3, LSL
	0x037D9B30 LDR X8, [X8 + 0x20]
	0x037D9B34 CBZ X8, 0x37D9C64
	0x037D9B38 LDR W8, [X8 + 0x90]
	0x037D9B3C CMP W8, W19
	0x037D9B40 B.EQ 0x37D9B98
	0x037D9B44 ADD W20, W20, 0x1
	0x037D9B48 B 0x37D9AE0
	0x037D9B4C MOVZ W0, 0x1
	0x037D9B50 B 0x37D9C50
	0x037D9B54 ADD X0, X31, 0xC
	0x037D9B58 MOV X1, X31
	0x037D9B5C STR W8, [X31 + 0xC]
	0x037D9B60 BL 0x337B6E0
	0x037D9B64 ADRP X8, 0x96F000
	0x037D9B68 LDR X8, [X8 + 0xCC0]
	0x037D9B6C MOV X1, X0
	0x037D9B70 MOV X2, X31
	0x037D9B74 LDR X8, [X8]
	0x037D9B78 MOV X0, X8
	0x037D9B7C BL 0x321B938
	0x037D9B80 LDR X8, [X22]
	0x037D9B84 MOV X19, X0
	0x037D9B88 LDR W9, [X8 + 0xE0]
	0x037D9B8C CBNZ W9, 0x37D9C3C
	0x037D9B90 MOV X0, X8
	0x037D9B94 B 0x37D9C38
	0x037D9B98 ADRP X8, 0x91A000
	0x037D9B9C LDR X8, [X8 + 0x758]
	0x037D9BA0 ADD X1, X31, 0x8
	0x037D9BA4 STR W19, [X31 + 0x8]
	0x037D9BA8 LDR X0, [X8]
	0x037D9BAC BL 0x1C16E04
	0x037D9BB0 LDR X8, [X21]
	0x037D9BB4 MOV X19, X0
	0x037D9BB8 LDR W9, [X8 + 0xE0]
	0x037D9BBC CBNZ W9, 0x37D9BCC
	0x037D9BC0 MOV X0, X8
	0x037D9BC4 BL 0x1C16DFC
	0x037D9BC8 LDR X8, [X21]
	0x037D9BCC LDR X8, [X8 + 0xB8]
	0x037D9BD0 LDR X8, [X8 + 0x8]
	0x037D9BD4 CBZ X8, 0x37D9C64
	0x037D9BD8 LDR W9, [X8 + 0x18]
	0x037D9BDC CMP W20, W9
	0x037D9BE0 B.CS 0x37D9C68
	0x037D9BE4 ADRP X9, 0x96F000
	0x037D9BE8 LDR X9, [X9 + 0xCB8]
	0x037D9BEC ADD X8, X8, X23, 0x3, LSL
	0x037D9BF0 LDR X2, [X8 + 0x20]
	0x037D9BF4 MOV X1, X19
	0x037D9BF8 LDR X0, [X9]
	0x037D9BFC MOV X3, X31
	0x037D9C00 BL 0x3227BD4
	0x037D9C04 LDR X8, [X21]
	0x037D9C08 LDR X8, [X8 + 0xB8]
	0x037D9C0C LDR X8, [X8 + 0x8]
	0x037D9C10 CBZ X8, 0x37D9C64
	0x037D9C14 LDR W9, [X8 + 0x18]
	0x037D9C18 CMP W20, W9
	0x037D9C1C B.CS 0x37D9C68
	0x037D9C20 MOV X19, X0
	0x037D9C24 LDR X0, [X22]
	0x037D9C28 ADD X8, X8, X23, 0x3, LSL
	0x037D9C2C LDR X20, [X8 + 0x20]
	0x037D9C30 LDR W9, [X0 + 0xE0]
	0x037D9C34 CBNZ W9, 0x37D9C3C
	0x037D9C38 BL 0x1C16DFC
	0x037D9C3C MOV X0, X19
	0x037D9C40 MOV X1, X20
	0x037D9C44 MOV X2, X31
	0x037D9C48 BL 0x3C065A4
	0x037D9C4C MOV W0, W31
	0x037D9C50 LDP X20, X19, [X31 + 0x30]
	0x037D9C54 LDP X22, X21, [X31 + 0x20]
	0x037D9C58 LDP X30, X23, [X31 + 0x10]
	0x037D9C5C ADD X31, X31, 0x40
	0x037D9C60 RET
	0x037D9C64 BL 0x1C16F20
	0x037D9C68 BL 0x1C16F28
	0x037D9C6C SUB X31, X31, 0x20
	0x037D9C70 STP X30, X19, [X31 + 0x10]
	0x037D9C74 STP X1, X2, [X31]
	0x037D9C78 MOVN W1, 0x0
	0x037D9C7C MOV X19, X0
	0x037D9C80 BL 0x37D9994
	0x037D9C84 TBZ X0, 0x0, 0x37D9CB0
	0x037D9C88 ADD X0, X31, 0x0
	0x037D9C8C MOV X1, X31
	0x037D9C90 BL 0x3735E8C
	0x037D9C94 CBZ X0, 0x37D9CBC
	0x037D9C98 LDR X4, [X0 + 0x78]
	0x037D9C9C MOVN W1, 0x0
	0x037D9CA0 MOVN W2, 0x0
	0x037D9CA4 MOV X0, X19
	0x037D9CA8 MOV X3, X31
	0x037D9CAC BL 0x37D9CC0
	0x037D9CB0 LDP X30, X19, [X31 + 0x10]
	0x037D9CB4 ADD X31, X31, 0x20
	0x037D9CB8 RET
	0x037D9CBC BL 0x1C16F20
	0x037D9CC0 STR X30, [X31 - 0x40]!
	0x037D9CC4 STP X24, X23, [X31 + 0x10]
	0x037D9CC8 STP X22, X21, [X31 + 0x20]
	0x037D9CCC STP X20, X19, [X31 + 0x30]
	0x037D9CD0 ADRP X24, 0xC08000
	0x037D9CD4 LDRB W8, [X24 + 0x28F]
	0x037D9CD8 MOV X19, X4
	0x037D9CDC MOV X21, X3
	0x037D9CE0 MOV W20, W2
	0x037D9CE4 MOV W22, W1
	0x037D9CE8 MOV X23, X0
	0x037D9CEC TBNZ X8, 0x0, 0x37D9D04
	0x037D9CF0 ADRP X0, 0x96F000
	0x037D9CF4 LDR X0, [X0 + 0x8F8]
	0x037D9CF8 BL 0x1C16CF4
	0x037D9CFC MOVZ W8, 0x1
	0x037D9D00 STRB W8, [X24 + 0x28F]
	0x037D9D04 MOV X0, X23
	0x037D9D08 MOV W1, W22
	0x037D9D0C BL 0x37D9994
	0x037D9D10 TBZ X0, 0x0, 0x37D9D64
	0x037D9D14 ADRP X24, 0x96F000
	0x037D9D18 LDR X24, [X24 + 0x8F8]
	0x037D9D1C LDR X0, [X24]
	0x037D9D20 LDR W8, [X0 + 0xE0]
	0x037D9D24 CBNZ W8, 0x37D9D30
	0x037D9D28 BL 0x1C16DFC
	0x037D9D2C LDR X0, [X24]
	0x037D9D30 LDR X8, [X0 + 0xB8]
	0x037D9D34 MOVZ W9, 0x1
	0x037D9D38 MOV W1, W22
	0x037D9D3C MOV X2, X21
	0x037D9D40 STRB W9, [X8 + 0x38]
	0x037D9D44 LDR X0, [X23 + 0x58]
	0x037D9D48 MOV W3, W20
	0x037D9D4C MOV X4, X19
	0x037D9D50 LDP X20, X19, [X31 + 0x30]
	0x037D9D54 LDP X22, X21, [X31 + 0x20]
	0x037D9D58 LDP X24, X23, [X31 + 0x10]
	0x037D9D5C LDR X30, [X31], #0x40
	0x037D9D60 B 0x37D475C
	0x037D9D64 LDP X20, X19, [X31 + 0x30]
	0x037D9D68 LDP X22, X21, [X31 + 0x20]
	0x037D9D6C LDP X24, X23, [X31 + 0x10]
	0x037D9D70 MOV X0, X31
	0x037D9D74 LDR X30, [X31], #0x40
	0x037D9D78 RET
	0x037D9D7C SUB X31, X31, 0x30
	0x037D9D80 STP X30, X21, [X31 + 0x10]
	0x037D9D84 STP X20, X19, [X31 + 0x20]
	0x037D9D88 ADRP X20, 0xC08000
	0x037D9D8C LDRB W8, [X20 + 0x28E]
	0x037D9D90 MOV X19, X0
	0x037D9D94 STP X1, X2, [X31]
	0x037D9D98 TBNZ X8, 0x0, 0x37D9DBC
	0x037D9D9C ADRP X0, 0x91A000
	0x037D9DA0 LDR X0, [X0 + 0x598]
	0x037D9DA4 BL 0x1C16CF4
	0x037D9DA8 ADRP X0, 0x96F000
	0x037D9DAC LDR X0, [X0 + 0x8F8]
	0x037D9DB0 BL 0x1C16CF4
	0x037D9DB4 MOVZ W8, 0x1
	0x037D9DB8 STRB W8, [X20 + 0x28E]
	0x037D9DBC MOVN W1, 0x0
	0x037D9DC0 MOV X0, X19
	0x037D9DC4 BL 0x37D9994
	0x037D9DC8 TBZ X0, 0x0, 0x37D9E50
	0x037D9DCC ADD X0, X31, 0x0
	0x037D9DD0 MOV X1, X31
	0x037D9DD4 BL 0x3735E8C
	0x037D9DD8 CBZ X0, 0x37D9E60
	0x037D9DDC ADRP X8, 0x96F000
	0x037D9DE0 LDR X8, [X8 + 0x8F8]
	0x037D9DE4 LDR X20, [X0 + 0x78]
	0x037D9DE8 LDR X8, [X8]
	0x037D9DEC LDR W9, [X8 + 0xE0]
	0x037D9DF0 CBNZ W9, 0x37D9DFC
	0x037D9DF4 MOV X0, X8
	0x037D9DF8 BL 0x1C16DFC
	0x037D9DFC MOV X0, X20
	0x037D9E00 BL 0x37D45F4
	0x037D9E04 ADRP X8, 0x91A000
	0x037D9E08 LDR X8, [X8 + 0x598]
	0x037D9E0C MOV X21, X0
	0x037D9E10 LDR X8, [X8]
	0x037D9E14 LDR W9, [X8 + 0xE0]
	0x037D9E18 CBNZ W9, 0x37D9E24
	0x037D9E1C MOV X0, X8
	0x037D9E20 BL 0x1C16DFC
	0x037D9E24 MOV X0, X21
	0x037D9E28 MOV X1, X31
	0x037D9E2C MOV X2, X31
	0x037D9E30 BL 0x3C354F8
	0x037D9E34 TBNZ X0, 0x0, 0x37D9E50
	0x037D9E38 MOVN W1, 0x0
	0x037D9E3C MOVN W2, 0x0
	0x037D9E40 MOV X0, X19
	0x037D9E44 MOV X3, X31
	0x037D9E48 MOV X4, X20
	0x037D9E4C BL 0x37D9CC0
	0x037D9E50 LDP X20, X19, [X31 + 0x20]
	0x037D9E54 LDP X30, X21, [X31 + 0x10]
	0x037D9E58 ADD X31, X31, 0x30
	0x037D9E5C RET
	0x037D9E60 BL 0x1C16F20
	0x037D9E64 STR X30, [X31 - 0x40]!
	0x037D9E68 STP X24, X23, [X31 + 0x10]
	0x037D9E6C STP X22, X21, [X31 + 0x20]
	0x037D9E70 STP X20, X19, [X31 + 0x30]
	0x037D9E74 ADRP X24, 0xC08000
	0x037D9E78 LDRB W8, [X24 + 0x290]
	0x037D9E7C MOV X19, X4
	0x037D9E80 MOV X21, X3
	0x037D9E84 MOV W20, W2
	0x037D9E88 MOV W22, W1
	0x037D9E8C MOV X23, X0
	0x037D9E90 TBNZ X8, 0x0, 0x37D9EA8
	0x037D9E94 ADRP X0, 0x96F000
	0x037D9E98 LDR X0, [X0 + 0x8F8]
	0x037D9E9C BL 0x1C16CF4
	0x037D9EA0 MOVZ W8, 0x1
	0x037D9EA4 STRB W8, [X24 + 0x290]
	0x037D9EA8 MOV X0, X23
	0x037D9EAC MOV W1, W22
	0x037D9EB0 BL 0x37D9994
	0x037D9EB4 TBZ X0, 0x0, 0x37D9F08
	0x037D9EB8 ADRP X24, 0x96F000
	0x037D9EBC LDR X24, [X24 + 0x8F8]
	0x037D9EC0 LDR X0, [X24]
	0x037D9EC4 LDR W8, [X0 + 0xE0]
	0x037D9EC8 CBNZ W8, 0x37D9ED4
	0x037D9ECC BL 0x1C16DFC
	0x037D9ED0 LDR X0, [X24]
	0x037D9ED4 LDR X8, [X0 + 0xB8]
	0x037D9ED8 MOVZ W9, 0x1
	0x037D9EDC MOV W1, W22
	0x037D9EE0 MOV X2, X21
	0x037D9EE4 STRB W9, [X8 + 0x38]
	0x037D9EE8 LDR X0, [X23 + 0x58]
	0x037D9EEC MOV W3, W20
	0x037D9EF0 MOV X4, X19
	0x037D9EF4 LDP X20, X19, [X31 + 0x30]
	0x037D9EF8 LDP X22, X21, [X31 + 0x20]
	0x037D9EFC LDP X24, X23, [X31 + 0x10]
	0x037D9F00 LDR X30, [X31], #0x40
	0x037D9F04 B 0x37D4BF4
	0x037D9F08 LDP X20, X19, [X31 + 0x30]
	0x037D9F0C LDP X22, X21, [X31 + 0x20]
	0x037D9F10 LDP X24, X23, [X31 + 0x10]
	0x037D9F14 MOV X0, X31
	0x037D9F18 LDR X30, [X31], #0x40
	0x037D9F1C RET
	0x037D9F20 STR X30, [X31 - 0x20]!
	0x037D9F24 STP X20, X19, [X31 + 0x10]
	0x037D9F28 ADRP X19, 0xC08000
	0x037D9F2C ADRP X20, 0x91A000
	0x037D9F30 LDRB W8, [X19 + 0x291]
	0x037D9F34 LDR X20, [X20 + 0xAC8]
	0x037D9F38 TBNZ X8, 0x0, 0x37D9F68
	0x037D9F3C ADRP X0, 0x91A000
	0x037D9F40 LDR X0, [X0 + 0xAC8]
	0x037D9F44 BL 0x1C16CF4
	0x037D9F48 ADRP X0, 0x96F000
	0x037D9F4C LDR X0, [X0 + 0xBB0]
	0x037D9F50 BL 0x1C16CF4
	0x037D9F54 ADRP X0, 0x96F000
	0x037D9F58 LDR X0, [X0 + 0xB30]
	0x037D9F5C BL 0x1C16CF4
	0x037D9F60 MOVZ W8, 0x1
	0x037D9F64 STRB W8, [X19 + 0x291]
	0x037D9F68 LDR X0, [X20]
	0x037D9F6C MOVZ W1, 0x2
	0x037D9F70 BL 0x1C16D6C
	0x037D9F74 CBZ X0, 0x37D9FB8
	0x037D9F78 LDR W8, [X0 + 0x18]
	0x037D9F7C CBZ W8, 0x37D9FB4
	0x037D9F80 ADRP X9, 0x96F000
	0x037D9F84 LDR X9, [X9 + 0xB30]
	0x037D9F88 CMP W8, 0x1
	0x037D9F8C LDR X9, [X9]
	0x037D9F90 STR X9, [X0 + 0x20]
	0x037D9F94 B.EQ 0x37D9FB4
	0x037D9F98 ADRP X8, 0x96F000
	0x037D9F9C LDR X8, [X8 + 0xBB0]
	0x037D9FA0 LDP X20, X19, [X31 + 0x10]
	0x037D9FA4 LDR X8, [X8]
	0x037D9FA8 STR X8, [X0 + 0x28]
	0x037D9FAC LDR X30, [X31], #0x20
	0x037D9FB0 RET
	0x037D9FB4 BL 0x1C16F28
	0x037D9FB8 BL 0x1C16F20
	0x037D9FBC STP X30, X21, [X31 - 0x20]!
	0x037D9FC0 STP X20, X19, [X31 + 0x10]
	0x037D9FC4 ADRP X21, 0xC08000
	0x037D9FC8 LDRB W8, [X21 + 0x293]
	0x037D9FCC MOV X20, X1
	0x037D9FD0 MOV X19, X0
	0x037D9FD4 TBNZ X8, 0x0, 0x37D9FEC
	0x037D9FD8 ADRP X0, 0x942000
	0x037D9FDC LDR X0, [X0 + 0xC90]
	0x037D9FE0 BL 0x1C16CF4
	0x037D9FE4 MOVZ W8, 0x1
	0x037D9FE8 STRB W8, [X21 + 0x293]
	0x037D9FEC LDRB W8, [X19 + 0x28]
	0x037D9FF0 CBZ W8, 0x37D9FFC
	0x037D9FF4 LDR W8, [X19 + 0x2C]
	0x037D9FF8 CBZ W8, 0x37DA008
	0x037D9FFC LDP X20, X19, [X31 + 0x10]
	0x037DA000 LDP X30, X21, [X31], #0x20
	0x037DA004 RET
	0x037DA008 CBZ X20, 0x37D9FFC
	0x037DA00C ADRP X8, 0x941000
	0x037DA010 LDR X8, [X8 + 0xC90]
	0x037DA014 LDR X9, [X20]
	0x037DA018 LDR X8, [X8]
	0x037DA01C LDRB W11, [X9 + 0x130]
	0x037DA020 LDRB W10, [X8 + 0x130]
	0x037DA024 CMP W11, W10
	0x037DA028 B.CC 0x37D9FFC
	0x037DA02C LDR X9, [X9 + 0xC8]
	0x037DA030 ADD X9, X9, X10, 0x3, LSL
	0x037DA034 LDUR X9, [X9 - 0x8]
	0x037DA038 CMP X9, X8
	0x037DA03C B.NE 0x37D9FFC
	0x037DA040 LDR X1, [X20 + 0x78]
	0x037DA044 MOV X0, X19
	0x037DA048 BL 0x37DA070
	0x037DA04C TBZ X0, 0x0, 0x37D9FFC
	0x037DA050 LDR X4, [X20 + 0x78]
	0x037DA054 MOV X0, X19
	0x037DA058 LDP X20, X19, [X31 + 0x10]
	0x037DA05C MOVN W1, 0x0
	0x037DA060 MOVN W2, 0x0
	0x037DA064 MOV X3, X31
	0x037DA068 LDP X30, X21, [X31], #0x20
	0x037DA06C B 0x37D9CC0
	0x037DA070 SUB X31, X31, 0xE0
	0x037DA074 STR X30, [X31 + 0xB0]
	0x037DA078 STP X22, X21, [X31 + 0xC0]

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+96], D9
	003 Move [X31+104], D8
	004 Move [X31+112], X29
	005 Move [X31+120], X30
	006 Move [X31+128], X28
	007 Move [X31+136], X27
	008 Move [X31+144], X26
	009 Move [X31+152], X25
	010 Move [X31+160], X24
	011 Move [X31+168], X23
	012 Move [X31+176], X22
	013 Move [X31+184], X21
	014 Move [X31+192], X20
	015 Move [X31+200], X19
	016 Move X20, 0xC09000
	017 Move W8, [X20+662]
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {58}
	023 Move X0, 0x91B000
	024 Move X0, [X0+2600]
	025 Call 0x1C17CF4
	026 Move X0, 0x970000
	027 Move X0, [X0+3112]
	028 Call 0x1C17CF4
	029 Move X0, 0x970000
	030 Move X0, [X0+3120]
	031 Call 0x1C17CF4
	032 Move X0, 0x970000
	033 Move X0, [X0+3128]
	034 Call 0x1C17CF4
	035 Move X0, 0x91B000
	036 Move X0, [X0+1880]
	037 Call 0x1C17CF4
	038 Move X0, 0x91B000
	039 Move X0, [X0+1432]
	040 Call 0x1C17CF4
	041 Move X0, 0x970000
	042 Move X0, [X0+2296]
	043 Call 0x1C17CF4
	044 Move X0, 0x970000
	045 Move X0, [X0+3136]
	046 Call 0x1C17CF4
	047 Move X0, 0x970000
	048 Move X0, [X0+3144]
	049 Call 0x1C17CF4
	050 Move X0, 0x970000
	051 Move X0, [X0+3152]
	052 Call 0x1C17CF4
	053 Move X0, 0x970000
	054 Move X0, [X0+3160]
	055 Call 0x1C17CF4
	056 Move W8, 1
	057 Move [X20+662], W8
	058 Move [X31+64], X31
	059 Move [X31+72], X31
	060 Move [X31+80], X31
	061 Move W8, [X19+96]
	062 Compare W8, 0
	063 JumpIfEqual {296}
	064 Move X22, 0x970000
	065 Move X22, [X22+2296]
	066 Move X21, 0x970000
	067 Move X0, [X22]
	068 Move W8, [X0+224]
	069 Move X21, [X21+3136]
	070 Compare W8, 0
	071 JumpIfNotEqual {73}
	072 Call 0x1C17DFC
	073 Move X23, 0x970000
	074 Move X24, 0x970000
	075 Move X25, 0x91B000
	076 Move X26, 0x91B000
	077 Move X28, 0x91B000
	078 Move X23, [X23+3120]
	079 Move X24, [X24+3128]
	080 Move X25, [X25+1432]
	081 Move X26, [X26+2600]
	082 Move X28, [X28+1880]
	083 Call PlayerInput.get_all
	084 Move X9, [X21]
	085 Move [X31+48], X0
	086 Move [X31+56], X1
	087 Add X8, X31, 24
	088 Add X0, X31, 48
	089 Move X1, X9
	090 Call ReadOnlyArray`1<Object>.GetEnumerator, X0
	091 NotImplemented "Instruction LDUR not yet implemented."
	092 Move X8, [X31+40]
	093 Move W27, W31
	094 Move [X31+4], V0
	095 Move [X31+80], X8
	096 Move X1, [X23]
	097 Add X0, X31, 64
	098 Call Enumerator<Object>.MoveNext, X0
	099 Move TEMP, X0
	100 And TEMP, TEMP, 1
	101 Compare TEMP, 1
	102 JumpIfNotEqual {111}
	103 Move X1, [X24]
	104 Add X0, X31, 64
	105 Call Enumerator<Object>.get_Current, X0
	106 Compare X0, 0
	107 JumpIfEqual {312}
	108 Move W8, [X0+144]
	109 NotImplemented "Instruction CMP not yet implemented."
	110 NotImplemented "Instruction CSINC not yet implemented."
	111 Move X8, 0x970000
	112 Move X8, [X8+3112]
	113 Add X0, X31, 64
	114 Move X1, [X8]
	115 Call Enumerator<Object>.Dispose, X0
	116 Move W20, [X19+100]
	117 NotImplemented "Instruction CMP not yet implemented."
	118 NotImplemented "Instruction CMP not yet implemented."
	119 Move X0, [X28]
	120 Add X1, X31, 24
	121 Move [X31+24], W27
	122 Call 0x1C17E04
	123 Move X20, X0
	124 Move W8, [X19+100]
	125 Move X0, [X28]
	126 Add X1, X31, 20
	127 Move [X31+20], W8
	128 Call 0x1C17E04
	129 Move X8, 0x970000
	130 Move X8, [X8+3160]
	131 Move X2, X0
	132 Move X1, X20
	133 Move X3, X31
	134 Move X8, [X8]
	135 Move X0, X8
	136 Call String.Format, X0, X1, X2
	137 Move X8, [X26]
	138 Move X20, X0
	139 Move W9, [X8+224]
	140 Compare W9, 0
	141 JumpIfNotEqual {144}
	142 Move X0, X8
	143 Call 0x1C17DFC
	144 Move X0, X20
	145 Move X1, X19
	146 Move X2, X31
	147 Call Debug.LogWarning, X0, X1
	148 Move W20, [X19+100]
	149 Move W20, W27
	150 Move X27, 0xC00000
	151 Move W8, [X27+2750]
	152 NotImplemented "Instruction SCVTF not yet implemented."
	153 Compare W8, 0
	154 JumpIfNotEqual {160}
	155 Move X0, 0x91B000
	156 Move X0, [X0+1448]
	157 Call 0x1C17CF4
	158 Move W8, 1
	159 Move [X27+2750], W8
	160 Move X8, 0x91B000
	161 Move X8, [X8+1448]
	162 NotImplemented "Instruction FSQRT not yet implemented."
	163 Move X0, [X8]
	164 Move W8, [X0+224]
	165 Compare W8, 0
	166 JumpIfNotEqual {168}
	167 Call 0x1C17DFC
	168 Move W9, 0x7F800000
	169 NotImplemented "Instruction FRINTP not yet implemented."
	170 Move X0, [X22]
	171 Move S1, W9
	172 NotImplemented "Instruction FCVTPS not yet implemented."
	173 Move W10, 0x80000000
	174 NotImplemented "Instruction FCMP not yet implemented."
	175 Move W11, [X19+97]
	176 NotImplemented "Instruction CSEL not yet implemented."
	177 Subtract W8, W22, 1
	178 Multiply W9, W8, W22
	179 Move W10, [X0+224]
	180 NotImplemented "Instruction CMP not yet implemented."
	181 NotImplemented "Instruction CSEL not yet implemented."
	182 NotImplemented "Instruction CMP not yet implemented."
	183 NotImplemented "Instruction CSEL not yet implemented."
	184 Compare W10, 0
	185 JumpIfNotEqual {187}
	186 Call 0x1C17DFC
	187 Call PlayerInput.get_all
	188 Move X9, [X21]
	189 Move [X31+48], X0
	190 Move [X31+56], X1
	191 Add X8, X31, 24
	192 Add X0, X31, 48
	193 Move X1, X9
	194 Call ReadOnlyArray`1<Object>.GetEnumerator, X0
	195 NotImplemented "Instruction LDUR not yet implemented."
	196 Move X8, [X31+40]
	197 Multiply W27, W20, W22
	198 NotImplemented "Instruction SCVTF not yet implemented."
	199 Move [X31+4], V0
	200 Move [X31+80], X8
	201 NotImplemented "Instruction SCVTF not yet implemented."
	202 Move X1, [X23]
	203 Add X0, X31, 64
	204 Call Enumerator<Object>.MoveNext, X0
	205 Move TEMP, X0
	206 And TEMP, TEMP, 1
	207 Compare TEMP, 1
	208 JumpIfNotEqual {291}
	209 Move X1, [X24]
	210 Add X0, X31, 64
	211 Call Enumerator<Object>.get_Current, X0
	212 Move X20, X0
	213 Compare X0, 0
	214 JumpIfEqual {313}
	215 Move W29, [X20+112]
	216 NotImplemented "Instruction CMP not yet implemented."
	217 Move X0, [X28]
	218 Move [X31+24], W29
	219 Add X1, X31, 24
	220 Call 0x1C17E04
	221 Move X21, X0
	222 Move X0, [X28]
	223 Move [X31+20], W27
	224 Add X1, X31, 20
	225 Call 0x1C17E04
	226 Move X8, 0x970000
	227 Move X8, [X8+3144]
	228 Move X2, X0
	229 Move X0, [X8]
	230 Move X1, X21
	231 Move X3, X31
	232 Call String.Format, X0, X1, X2
	233 Move X21, X0
	234 Move X0, [X26]
	235 Move W8, [X0+224]
	236 Compare W8, 0
	237 JumpIfNotEqual {239}
	238 Call 0x1C17DFC
	239 Move X0, X21
	240 Move X1, X20
	241 Move X2, X31
	242 Call Debug.LogError, X0, X1
	243 Move W8, [X20+144]
	244 Move [X20+112], W8
	245 Move X0, [X25]
	246 Move X21, [X20+120]
	247 Move W8, [X0+224]
	248 Compare W8, 0
	249 JumpIfNotEqual {251}
	250 Call 0x1C17DFC
	251 Move X0, X21
	252 Move X1, X31
	253 Move X2, X31
	254 Call Object.op_Equality, X0, X1
	255 Move TEMP, X0
	256 And TEMP, TEMP, 1
	257 Compare TEMP, 1
	258 JumpIfNotEqual {270}
	259 Move X0, [X26]
	260 Move W8, [X0+224]
	261 Compare W8, 0
	262 JumpIfNotEqual {264}
	263 Call 0x1C17DFC
	264 Move X8, 0x970000
	265 Move X8, [X8+3152]
	266 Move X0, [X8]
	267 Move X1, X20
	268 Move X2, X31
	269 Call Debug.LogError, X0, X1
	270 Compare X21, 0
	271 JumpIfEqual {314}
	272 Move S0, [X19+112]
	273 Move S1, [X19+116]
	274 Move S4, [X19+104]
	275 Move S2, [X19+108]
	276 NotImplemented "Instruction SDIV not yet implemented."
	277 Add W9, W8, 1
	278 NotImplemented "Instruction SCVTF not yet implemented."
	279 NotImplemented "Instruction FDIV not yet implemented."
	280 NotImplemented "Instruction MSUB not yet implemented."
	281 Add S2, S1, S2
	282 Multiply S1, S3, S5
	283 Subtract S1, S2, S1
	284 NotImplemented "Instruction SCVTF not yet implemented."
	285 NotImplemented "Instruction FDIV not yet implemented."
	286 Multiply S0, S2, S5
	287 Add S0, S4, S0
	288 Move X0, X21
	289 Move X1, X31
	290 Call Camera.set_rect, X0, X1
	291 Move X8, 0x970000
	292 Move X8, [X8+3112]
	293 Add X0, X31, 64
	294 Move X1, [X8]
	295 Call Enumerator<Object>.Dispose, X0
	296 Move X20, [X31+192]
	297 Move X19, [X31+200]
	298 Move X22, [X31+176]
	299 Move X21, [X31+184]
	300 Move X24, [X31+160]
	301 Move X23, [X31+168]
	302 Move X26, [X31+144]
	303 Move X25, [X31+152]
	304 Move X28, [X31+128]
	305 Move X27, [X31+136]
	306 Move X29, [X31+112]
	307 Move X30, [X31+120]
	308 Move D9, [X31+96]
	309 Move D8, [X31+104]
	310 Add X31, X31, 208
	311 Return 
	312 Call 0x1C17F20
	313 Call 0x1C17F20
	314 Call 0x1C17F20
	315 NotImplemented "Instruction CMP not yet implemented."
	316 Call 0x3EB2AD0
	317 Move X19, [X0]
	318 Call 0x3EB2AE0
	319 Move X8, 0x970000
	320 Move X8, [X8+3112]
	321 Add X0, X31, 64
	322 Move X1, [X8]
	323 Call Enumerator<Object>.Dispose, X0
	324 Compare X19, 0
	325 JumpIfEqual {296}
	326 Move X0, X19
	327 Call 0x1C17F18
	328 Move [X31+8], X0
	329 Move X19, X31
	330 Move [X31+8], X0
	331 Move X8, 0x970000
	332 Move X8, [X8+3112]
	333 Move X1, [X8]
	334 Add X0, X31, 64
	335 Call Enumerator<Object>.Dispose, X0
	336 Compare X19, 0
	337 JumpIfEqual {364}
	338 Move X0, X19
	339 Call 0x1C17F18
	340 NotImplemented "Instruction CMP not yet implemented."
	341 Move [X31+8], X0
	342 Move X0, [X31+8]
	343 Call 0x3EB2AD0
	344 Move X20, [X0]
	345 Call 0x3EB2AE0
	346 Move X8, 0x96F000
	347 Move X8, [X8+3112]
	348 Add X0, X31, 64
	349 Move X1, [X8]
	350 Call Enumerator<Object>.Dispose, X0
	351 Compare X20, 0
	352 JumpIfEqual {116}
	353 Move X0, X20
	354 Call 0x1C17F18
	355 Move X20, X31
	356 Move [X31+8], X0
	357 Move X8, 0x96F000
	358 Move X8, [X8+3112]
	359 Move X1, [X8]
	360 Add X0, X31, 64
	361 Call Enumerator<Object>.Dispose, X0
	362 Compare X20, 0
	363 JumpIfNotEqual {366}
	364 Move X0, [X31+8]
	365 Call 0x1D2D690
	366 Move X0, X20
	367 Call 0x1C17F18
	368 Call 0x1991590

Method: System.Boolean IsDeviceUsableWithPlayerActions(UnityEngine.InputSystem.InputDevice device)

Disassembly:
	0x037DB070 TBNZ X8, 0x0, 0x37DB0A0
	0x037DB074 ADRP X0, 0x96D000
	0x037DB078 LDR X0, [X0 + 0xD28]
	0x037DB07C BL 0x1C16CF4
	0x037DB080 ADRP X0, 0x96D000
	0x037DB084 LDR X0, [X0 + 0xD30]
	0x037DB088 BL 0x1C16CF4
	0x037DB08C ADRP X0, 0x940000
	0x037DB090 LDR X0, [X0 + 0xD18]
	0x037DB094 BL 0x1C16CF4
	0x037DB098 MOVZ W8, 0x1
	0x037DB09C STRB W8, [X22 + 0x2A5]
	0x037DB0A0 LDR W8, [X21 + 0xD8]
	0x037DB0A4 MOVZ W9, 0x7365
	0x037DB0A8 MOVK W9, 0x506F0000
	0x037DB0AC CMP W8, W9
	0x037DB0B0 B.NE 0x37DB0F0
	0x037DB0B4 ADRP X8, 0x940000
	0x037DB0B8 LDR X8, [X8 + 0xD18]
	0x037DB0BC LDR X0, [X8]
	0x037DB0C0 LDR W8, [X0 + 0xE0]
	0x037DB0C4 CBNZ W8, 0x37DB0CC
	0x037DB0C8 BL 0x1C16DFC
	0x037DB0CC LDRSW X8, [X21 + 0x14]
	0x037DB0D0 MOVZ W2, 0x3C
	0x037DB0D4 MOV X1, X19
	0x037DB0D8 ADD X0, X8, X20
	0x037DB0DC BL 0x3EB1B30
	0x037DB0E0 LDP X20, X19, [X31 + 0x20]
	0x037DB0E4 LDP X22, X21, [X31 + 0x10]
	0x037DB0E8 LDR X30, [X31], #0x30
	0x037DB0EC RET
	0x037DB0F0 ADRP X8, 0x96D000
	0x037DB0F4 LDR X8, [X8 + 0xD28]
	0x037DB0F8 LDRB W9, [X19]
	0x037DB0FC LDR X0, [X21 + 0x178]
	0x037DB100 ADRP X22, 0x96D000
	0x037DB104 LDR X3, [X8]
	0x037DB108 LDR X22, [X22 + 0xD30]
	0x037DB10C AND W1, W9, 0x1
	0x037DB110 MOV X2, X20
	0x037DB114 BL 0x21FE5EC
	0x037DB118 LDR X0, [X21 + 0x180]
	0x037DB11C LDR W1, [X19 + 0x4]
	0x037DB120 LDR X3, [X22]
	0x037DB124 MOV X2, X20
	0x037DB128 BL 0x21FE810
	0x037DB12C LDR X0, [X21 + 0x188]
	0x037DB130 CBZ X0, 0x37DB1C8
	0x037DB134 LDR X8, [X0]
	0x037DB138 LDP S1, S2, [X19 + 0xC]
	0x037DB13C LDR V0, [X19 + 0x8]
	0x037DB140 MOV X1, X20
	0x037DB144 LDR X9, [X8 + 0x258]
	0x037DB148 LDR X2, [X8 + 0x260]
	0x037DB14C BLR X9
	0x037DB150 LDR X0, [X21 + 0x190]
	0x037DB154 CBZ X0, 0x37DB1C8
	0x037DB158 LDR X8, [X0]
	0x037DB15C LDP S2, S3, [X19 + 0x1C]
	0x037DB160 LDP S0, S1, [X19 + 0x14]
	0x037DB164 MOV X1, X20
	0x037DB168 LDR X9, [X8 + 0x258]
	0x037DB16C LDR X2, [X8 + 0x260]
	0x037DB170 BLR X9
	0x037DB174 LDR X0, [X21 + 0x198]
	0x037DB178 CBZ X0, 0x37DB1C8
	0x037DB17C LDR X8, [X0]
	0x037DB180 LDP S1, S2, [X19 + 0x28]
	0x037DB184 LDR V0, [X19 + 0x24]
	0x037DB188 MOV X1, X20
	0x037DB18C LDR X9, [X8 + 0x258]
	0x037DB190 LDR X2, [X8 + 0x260]
	0x037DB194 BLR X9
	0x037DB198 LDR X0, [X21 + 0x1A0]
	0x037DB19C CBZ X0, 0x37DB1C8
	0x037DB1A0 LDR X8, [X0]
	0x037DB1A4 LDP S1, S2, [X19 + 0x34]
	0x037DB1A8 LDR V0, [X19 + 0x30]
	0x037DB1AC MOV X1, X20
	0x037DB1B0 LDR X3, [X8 + 0x258]
	0x037DB1B4 LDR X2, [X8 + 0x260]
	0x037DB1B8 LDP X20, X19, [X31 + 0x20]
	0x037DB1BC LDP X22, X21, [X31 + 0x10]
	0x037DB1C0 LDR X30, [X31], #0x30
	0x037DB1C4 BR X3
	0x037DB1C8 BL 0x1C16F20
	0x037DB1CC STP X30, X21, [X31 - 0x20]!
	0x037DB1D0 STP X20, X19, [X31 + 0x10]
	0x037DB1D4 ADRP X21, 0xC06000
	0x037DB1D8 ADRP X20, 0x940000
	0x037DB1DC LDRB W8, [X21 + 0x2A6]
	0x037DB1E0 LDR X20, [X20 + 0xD18]
	0x037DB1E4 MOV X19, X0
	0x037DB1E8 TBNZ X8, 0x0, 0x37DB200
	0x037DB1EC ADRP X0, 0x940000
	0x037DB1F0 LDR X0, [X0 + 0xD18]
	0x037DB1F4 BL 0x1C16CF4
	0x037DB1F8 MOVZ W8, 0x1
	0x037DB1FC STRB W8, [X21 + 0x2A6]
	0x037DB200 LDR X0, [X20]
	0x037DB204 LDR W8, [X0 + 0xE0]
	0x037DB208 CBNZ W8, 0x37DB210
	0x037DB20C BL 0x1C16DFC
	0x037DB210 LDR W8, [X19 + 0x1C]
	0x037DB214 CMP W8, 0x1E0
	0x037DB218 B.NE 0x37DB3D4
	0x037DB21C LDR X0, [X20]
	0x037DB220 LDR W8, [X0 + 0xE0]
	0x037DB224 CBNZ W8, 0x37DB22C
	0x037DB228 BL 0x1C16DFC
	0x037DB22C LDR W8, [X19 + 0x18]
	0x037DB230 CBNZ W8, 0x37DB3D4
	0x037DB234 LDR X8, [X19 + 0x178]
	0x037DB238 CBZ X8, 0x37DB3E4
	0x037DB23C LDR W9, [X8 + 0xD8]
	0x037DB240 MOVZ W10, 0x5445
	0x037DB244 MOVK W10, 0x42590000
	0x037DB248 CMP W9, W10
	0x037DB24C B.NE 0x37DB3D4
	0x037DB250 LDR X21, [X19 + 0x180]
	0x037DB254 CBZ X21, 0x37DB3E4
	0x037DB258 LDR W9, [X21 + 0xD8]
	0x037DB25C MOVZ W10, 0x5420
	0x037DB260 MOVK W10, 0x494E0000
	0x037DB264 CMP W9, W10
	0x037DB268 B.NE 0x37DB3D4
	0x037DB26C LDR X9, [X19 + 0x188]
	0x037DB270 CBZ X9, 0x37DB3E4
	0x037DB274 LDR W10, [X9 + 0xD8]
	0x037DB278 MOVZ W9, 0x4333
	0x037DB27C MOVK W9, 0x56450000
	0x037DB280 CMP W10, W9
	0x037DB284 B.NE 0x37DB3D4
	0x037DB288 LDR X10, [X19 + 0x190]
	0x037DB28C CBZ X10, 0x37DB3E4
	0x037DB290 LDR W10, [X10 + 0xD8]
	0x037DB294 MOVZ W11, 0x4154
	0x037DB298 MOVK W11, 0x51550000
	0x037DB29C CMP W10, W11
	0x037DB2A0 B.NE 0x37DB3D4
	0x037DB2A4 LDR X10, [X19 + 0x198]
	0x037DB2A8 CBZ X10, 0x37DB3E4
	0x037DB2AC LDR W10, [X10 + 0xD8]
	0x037DB2B0 CMP W10, W9
	0x037DB2B4 B.NE 0x37DB3D4
	0x037DB2B8 LDR X10, [X19 + 0x1A0]
	0x037DB2BC CBZ X10, 0x37DB3E4
	0x037DB2C0 LDR W10, [X10 + 0xD8]
	0x037DB2C4 CMP W10, W9
	0x037DB2C8 B.NE 0x37DB3D4
	0x037DB2CC LDR X0, [X20]
	0x037DB2D0 LDR W9, [X0 + 0xE0]
	0x037DB2D4 CBNZ W9, 0x37DB2E4
	0x037DB2D8 BL 0x1C16DFC
	0x037DB2DC LDR X8, [X19 + 0x178]
	0x037DB2E0 CBZ X8, 0x37DB3E4
	0x037DB2E4 LDR W9, [X8 + 0x14]
	0x037DB2E8 LDR W10, [X21 + 0x14]
	0x037DB2EC ADD W9, W9, 0x4
	0x037DB2F0 CMP W10, W9
	0x037DB2F4 B.NE 0x37DB3D4
	0x037DB2F8 LDR X21, [X19 + 0x188]
	0x037DB2FC CBZ X21, 0x37DB3E4
	0x037DB300 LDR X0, [X20]
	0x037DB304 LDR W9, [X0 + 0xE0]
	0x037DB308 CBNZ W9, 0x37DB318
	0x037DB30C BL 0x1C16DFC
	0x037DB310 LDR X8, [X19 + 0x178]
	0x037DB314 CBZ X8, 0x37DB3E4
	0x037DB318 LDR W9, [X8 + 0x14]
	0x037DB31C LDR W10, [X21 + 0x14]
	0x037DB320 ADD W9, W9, 0x8
	0x037DB324 CMP W10, W9
	0x037DB328 B.NE 0x37DB3D4
	0x037DB32C LDR X21, [X19 + 0x190]
	0x037DB330 CBZ X21, 0x37DB3E4
	0x037DB334 LDR X0, [X20]
	0x037DB338 LDR W9, [X0 + 0xE0]
	0x037DB33C CBNZ W9, 0x37DB34C
	0x037DB340 BL 0x1C16DFC
	0x037DB344 LDR X8, [X19 + 0x178]
	0x037DB348 CBZ X8, 0x37DB3E4
	0x037DB34C LDR W9, [X8 + 0x14]
	0x037DB350 LDR W10, [X21 + 0x14]
	0x037DB354 ADD W9, W9, 0x14
	0x037DB358 CMP W10, W9
	0x037DB35C B.NE 0x37DB3D4
	0x037DB360 LDR X21, [X19 + 0x198]
	0x037DB364 CBZ X21, 0x37DB3E4
	0x037DB368 LDR X0, [X20]
	0x037DB36C LDR W9, [X0 + 0xE0]
	0x037DB370 CBNZ W9, 0x37DB380
	0x037DB374 BL 0x1C16DFC
	0x037DB378 LDR X8, [X19 + 0x178]
	0x037DB37C CBZ X8, 0x37DB3E4
	0x037DB380 LDR W9, [X8 + 0x14]
	0x037DB384 LDR W10, [X21 + 0x14]
	0x037DB388 ADD W9, W9, 0x24
	0x037DB38C CMP W10, W9
	0x037DB390 B.NE 0x37DB3D4
	0x037DB394 LDR X21, [X19 + 0x1A0]
	0x037DB398 CBZ X21, 0x37DB3E4
	0x037DB39C LDR X0, [X20]
	0x037DB3A0 LDR W9, [X0 + 0xE0]
	0x037DB3A4 CBNZ W9, 0x37DB3B4
	0x037DB3A8 BL 0x1C16DFC
	0x037DB3AC LDR X8, [X19 + 0x178]
	0x037DB3B0 CBZ X8, 0x37DB3E4
	0x037DB3B4 LDR W8, [X8 + 0x14]
	0x037DB3B8 LDR W9, [X21 + 0x14]
	0x037DB3BC ADD W8, W8, 0x30
	0x037DB3C0 CMP W9, W8
	0x037DB3C4 B.NE 0x37DB3D4
	0x037DB3C8 MOVZ W0, 0x7365
	0x037DB3CC MOVK W0, 0x506F0000
	0x037DB3D0 B 0x37DB3D8
	0x037DB3D4 MOV X0, X31
	0x037DB3D8 LDP X20, X19, [X31 + 0x10]
	0x037DB3DC LDP X30, X21, [X31], #0x20
	0x037DB3E0 RET
	0x037DB3E4 BL 0x1C16F20
	0x037DB3E8 LDR X0, [X0 + 0x190]
	0x037DB3EC RET
	0x037DB3F0 STR X1, [X0 + 0x190]
	0x037DB3F4 RET
	0x037DB3F8 LDR X0, [X0 + 0x198]
	0x037DB3FC RET
	0x037DB400 STR X1, [X0 + 0x198]
	0x037DB404 RET
	0x037DB408 LDR X0, [X0 + 0x1A0]
	0x037DB40C RET

ISIL:
	001 Subtract X31, X31, 224
	002 Move [X31+176], X30
	003 Move [X31+192], X22
	004 Move [X31+200], X21
	005 Move [X31+208], X20
	006 Move [X31+216], X19
	007 Move X21, 0xC07000
	008 Move X22, 0x919000
	009 Move W8, [X21+663]
	010 Move X22, [X22+1432]
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {49}
	017 Move X0, 0x96B000
	018 Move X0, [X0+24]
	019 Call 0x1C17CF4
	020 Move X0, 0x96B000
	021 Move X0, [X0+32]
	022 Call 0x1C17CF4
	023 Move X0, 0x96B000
	024 Move X0, [X0+40]
	025 Call 0x1C17CF4
	026 Move X0, 0x96E000
	027 Move X0, [X0+2664]
	028 Call 0x1C17CF4
	029 Move X0, 0x96C000
	030 Move X0, [X0+1928]
	031 Call 0x1C17CF4
	032 Move X0, 0x96E000
	033 Move X0, [X0+2336]
	034 Call 0x1C17CF4
	035 Move X0, 0x96B000
	036 Move X0, [X0+2488]
	037 Call 0x1C17CF4
	038 Move X0, 0x919000
	039 Move X0, [X0+1432]
	040 Call 0x1C17CF4
	041 Move X0, 0x96B000
	042 Move X0, [X0+16]
	043 Call 0x1C17CF4
	044 Move X0, 0x96B000
	045 Move X0, [X0+2536]
	046 Call 0x1C17CF4
	047 Move W8, 1
	048 Move [X21+663], W8
	049 Move X0, [X22]
	050 NotImplemented "Instruction MOVI not yet implemented."
	051 Move [X31+88], X31
	052 Move [X31+96], X31
	053 Move [X31+112], V0
	054 Move [X31+120], V0
	055 Move [X31+104], X31
	056 Move [X31+72], X31
	057 Move [X31+80], X31
	058 Move W8, [X0+224]
	059 Move X21, [X20+88]
	060 Compare W8, 0
	061 JumpIfNotEqual {63}
	062 Call 0x1C17DFC
	063 Move X0, X21
	064 Move X1, X31
	065 Move X2, X31
	066 Call Object.op_Equality, X0, X1
	067 Move TEMP, X0
	068 And TEMP, TEMP, 1
	069 Compare TEMP, 1
	070 JumpIfEqual {155}
	071 Move X0, [X20+88]
	072 Compare X0, 0
	073 JumpIfEqual {210}
	074 Move X8, 0x96E000
	075 Move X8, [X8+2664]
	076 Move X1, [X8]
	077 Call 0x21E6548, X0
	078 Move X8, [X22]
	079 Move X20, X0
	080 Move W9, [X8+224]
	081 Compare W9, 0
	082 JumpIfNotEqual {85}
	083 Move X0, X8
	084 Call 0x1C17DFC
	085 Move X0, X20
	086 Move X1, X31
	087 Move X2, X31
	088 Call Object.op_Equality, X0, X1
	089 Move TEMP, X0
	090 And TEMP, TEMP, 1
	091 Compare TEMP, 1
	092 JumpIfEqual {155}
	093 Compare X20, 0
	094 JumpIfEqual {210}
	095 Move X0, X20
	096 Call PlayerInput.get_actions, X0
	097 Move X8, [X22]
	098 Move X21, X0
	099 Move W9, [X8+224]
	100 Compare W9, 0
	101 JumpIfNotEqual {104}
	102 Move X0, X8
	103 Call 0x1C17DFC
	104 Move X0, X21
	105 Move X1, X31
	106 Move X2, X31
	107 Call Object.op_Equality, X0, X1
	108 Move TEMP, X0
	109 And TEMP, TEMP, 1
	110 Compare TEMP, 1
	111 JumpIfEqual {155}
	112 Compare X21, 0
	113 JumpIfEqual {210}
	114 Move X0, X21
	115 Move X1, X31
	116 Call InputActionAsset.get_controlSchemes, X0
	117 Move X8, X1
	118 ShiftRight X8, 32
	119 And X8, X8, 0x7FFFFFFF
	120 NotImplemented "Instruction CMP not yet implemented."
	121 NotImplemented "Instruction CSET not yet implemented."
	122 Add X8, X31, 112
	123 Call InputUser.GetUnpairedInputDevices
	124 Move V0, [X31+112]
	125 Move V1, [X31+128]
	126 Move [X31+32], V0
	127 Move [X31+40], V1
	128 Move X0, X21
	129 Move X1, X31
	130 Call InputActionAsset.get_controlSchemes, X0
	131 Move X8, 0x96E000
	132 Move X8, [X8+2336]
	133 Move V0, [X31+32]
	134 Move V1, [X31+48]
	135 Move X2, X0
	136 Move X3, X1
	137 Move X5, [X8]
	138 Move [X31+144], V0
	139 Move [X31+152], V1
	140 Add X8, X31, 0
	141 Add X0, X31, 144
	142 Move X1, X2
	143 Move X2, X3
	144 Move X3, X19
	145 Move W4, W31
	146 Call 0x2200F30, X0, X1, X2, X3
	147 Move X8, 0x96C000
	148 Move W19, [X31]
	149 Move X8, [X8+1928]
	150 Add X0, X31, 112
	151 Move X1, [X8]
	152 Call 0x2DFC98C, X0
	153 Compare W19, 0
	154 JumpIfEqual {156}
	155 Move W20, 1
	156 Move W0, W20
	157 Move X20, [X31+208]
	158 Move X19, [X31+216]
	159 Move X22, [X31+192]
	160 Move X21, [X31+200]
	161 Move X30, [X31+176]
	162 Add X31, X31, 224
	163 Return X0
	164 Move X0, X21
	165 Move X1, X31
	166 Call InputActionAsset.get_actionMaps, X0
	167 Move X8, 0x96B000
	168 Move X8, [X8+16]
	169 Move [X31+72], X0
	170 Move [X31+80], X1
	171 Add X0, X31, 72
	172 Move X9, [X8]
	173 Add X8, X31, 88
	174 Move X1, X9
	175 Call ReadOnlyArray`1<Object>.GetEnumerator, X0
	176 Move X21, 0x96B000
	177 Move X22, 0x96B000
	178 Move X21, [X21+32]
	179 Move X22, [X22+40]
	180 Move X1, [X21]
	181 Add X0, X31, 88
	182 Call Enumerator<Object>.MoveNext, X0
	183 Move TEMP, X0
	184 And TEMP, TEMP, 1
	185 Compare TEMP, 1
	186 JumpIfNotEqual {204}
	187 Move X1, [X22]
	188 Add X0, X31, 88
	189 Call Enumerator<Object>.get_Current, X0
	190 Compare X0, 0
	191 JumpIfEqual {211}
	192 Move X1, X19
	193 Move X2, X31
	194 Call InputActionMap.IsUsableWithDevice, X0, X1
	195 Move TEMP, X0
	196 And TEMP, TEMP, 1
	197 Compare TEMP, 1
	198 JumpIfNotEqual {180}
	199 Move X8, 0x96B000
	200 Move X8, [X8+24]
	201 Add X0, X31, 88
	202 Move X1, [X8]
	203 Call Enumerator<Object>.Dispose, X0
	204 Move X8, 0x96B000
	205 Move X8, [X8+24]
	206 Add X0, X31, 88
	207 Move X1, [X8]
	208 Call Enumerator<Object>.Dispose, X0
	209 Move W20, W31
	210 Call 0x1C17F20
	211 Call 0x1C17F20
	212 Move X19, X0
	213 NotImplemented "Instruction CMP not yet implemented."
	214 Move X0, X19
	215 Call 0x3EB2AD0
	216 Move X20, [X0]
	217 Call 0x3EB2AE0
	218 Move X8, 0x96C000
	219 Move X8, [X8+1928]
	220 Add X0, X31, 112
	221 Move X1, [X8]
	222 Call 0x2DFC98C, X0
	223 Compare X20, 0
	224 JumpIfEqual {155}
	225 Move X20, X31
	226 Move X19, X0
	227 Move X8, 0x96C000
	228 Move X8, [X8+1928]
	229 Move X1, [X8]
	230 Add X0, X31, 112
	231 Call 0x2DFC98C, X0
	232 Compare X20, 0
	233 JumpIfEqual {260}
	234 Move X0, X20
	235 Call 0x1C17F18
	236 Move X19, X0
	237 NotImplemented "Instruction CMP not yet implemented."
	238 Move X0, X19
	239 Call 0x3EB2AD0
	240 Move X20, [X0]
	241 Call 0x3EB2AE0
	242 Move X8, 0x96B000
	243 Move X8, [X8+24]
	244 Add X0, X31, 88
	245 Move X1, [X8]
	246 Call Enumerator<Object>.Dispose, X0
	247 Compare X20, 0
	248 JumpIfEqual {156}
	249 Move X0, X20
	250 Call 0x1C17F18
	251 Move X20, X31
	252 Move X19, X0
	253 Move X8, 0x96B000
	254 Move X8, [X8+24]
	255 Move X1, [X8]
	256 Add X0, X31, 88
	257 Call Enumerator<Object>.Dispose, X0
	258 Compare X20, 0
	259 JumpIfNotEqual {262}
	260 Move X0, X19
	261 Call 0x1D2D690
	262 Move X0, X20
	263 Call 0x1C17F18
	264 Call 0x1991590

Method: System.Void ValidateInputActionAsset()

Disassembly:
	0x037DA944 MOV X0, X19

ISIL:
	001 Return 

Method: System.Void NotifyPlayerJoined(UnityEngine.InputSystem.PlayerInput player)

Disassembly:
	0x037D7E08 SUB X31, X31, 0x190
	0x037D7E0C STP X29, X30, [X31 + 0x140]
	0x037D7E10 STP X26, X25, [X31 + 0x150]
	0x037D7E14 STP X24, X23, [X31 + 0x160]
	0x037D7E18 STP X22, X21, [X31 + 0x170]
	0x037D7E1C STP X20, X19, [X31 + 0x180]
	0x037D7E20 ADRP X22, 0xC0A000
	0x037D7E24 ADRP X21, 0x971000
	0x037D7E28 LDRB W8, [X22 + 0x279]
	0x037D7E2C LDR X21, [X21 + 0x8F8]
	0x037D7E30 MOV X19, X1
	0x037D7E34 MOV X20, X0
	0x037D7E38 TBNZ X8, 0x0, 0x37D7EE0
	0x037D7E3C ADRP X0, 0x91C000
	0x037D7E40 LDR X0, [X0 + 0xE00]
	0x037D7E44 BL 0x1C16CF4
	0x037D7E48 ADRP X0, 0x96F000
	0x037D7E4C LDR X0, [X0 + 0x760]
	0x037D7E50 BL 0x1C16CF4
	0x037D7E54 ADRP X0, 0x96F000
	0x037D7E58 LDR X0, [X0 + 0x788]
	0x037D7E5C BL 0x1C16CF4
	0x037D7E60 ADRP X0, 0x971000
	0x037D7E64 LDR X0, [X0 + 0xBE8]
	0x037D7E68 BL 0x1C16CF4
	0x037D7E6C ADRP X0, 0x971000
	0x037D7E70 LDR X0, [X0 + 0xBF0]
	0x037D7E74 BL 0x1C16CF4
	0x037D7E78 ADRP X0, 0x96F000
	0x037D7E7C LDR X0, [X0 + 0x768]
	0x037D7E80 BL 0x1C16CF4
	0x037D7E84 ADRP X0, 0x971000
	0x037D7E88 LDR X0, [X0 + 0x918]
	0x037D7E8C BL 0x1C16CF4
	0x037D7E90 ADRP X0, 0x971000
	0x037D7E94 LDR X0, [X0 + 0xBF8]
	0x037D7E98 BL 0x1C16CF4
	0x037D7E9C ADRP X0, 0x91C000
	0x037D7EA0 LDR X0, [X0 + 0x598]
	0x037D7EA4 BL 0x1C16CF4
	0x037D7EA8 ADRP X0, 0x971000
	0x037D7EAC LDR X0, [X0 + 0x8F8]
	0x037D7EB0 BL 0x1C16CF4
	0x037D7EB4 ADRP X0, 0x96E000
	0x037D7EB8 LDR X0, [X0 + 0x70]
	0x037D7EBC BL 0x1C16CF4
	0x037D7EC0 ADRP X0, 0x971000
	0x037D7EC4 LDR X0, [X0 + 0xBE0]
	0x037D7EC8 BL 0x1C16CF4
	0x037D7ECC ADRP X0, 0x96E000
	0x037D7ED0 LDR X0, [X0 + 0xE18]
	0x037D7ED4 BL 0x1C16CF4
	0x037D7ED8 MOVZ W8, 0x1
	0x037D7EDC STRB W8, [X22 + 0x279]
	0x037D7EE0 LDR X0, [X21]
	0x037D7EE4 MOVI V0.2D, 0x0
	0x037D7EE8 STP X31, X31, [X31 + 0xE0]
	0x037D7EEC STP X31, X31, [X31 + 0xC8]
	0x037D7EF0 STR X31, [X31 + 0xD8]
	0x037D7EF4 STP V0, V0, [X31 + 0xF0]
	0x037D7EF8 STP V0, V0, [X31 + 0xA0]
	0x037D7EFC STP V0, V0, [X31 + 0x80]
	0x037D7F00 STP V0, V0, [X31 + 0x60]
	0x037D7F04 STR V0, [X31 + 0x5]
	0x037D7F08 LDR W8, [X0 + 0xE0]
	0x037D7F0C CBNZ W8, 0x37D7F14
	0x037D7F10 BL 0x1C16DFC
	0x037D7F14 BL 0x37D3AF8
	0x037D7F18 TBZ X0, 0x0, 0x37D8240
	0x037D7F1C LDRB W8, [X20 + 0x58]
	0x037D7F20 CBNZ W8, 0x37D8240
	0x037D7F24 LDR X0, [X21]
	0x037D7F28 LDR W8, [X0 + 0xE0]
	0x037D7F2C CBNZ W8, 0x37D7F34
	0x037D7F30 BL 0x1C16DFC
	0x037D7F34 BL 0x37D3A68

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xC0B000
	006 Move W8, [X21+664]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {27}
	013 Move X0, 0x972000
	014 Move X0, [X0+2824]
	015 Call 0x1C17CF4
	016 Move X0, 0x972000
	017 Move X0, [X0+2832]
	018 Call 0x1C17CF4
	019 Move X0, 0x972000
	020 Move X0, [X0+2856]
	021 Call 0x1C17CF4
	022 Move X0, 0x972000
	023 Move X0, [X0+2864]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+664], W8
	027 Move X0, X20
	028 Call PlayerInputManager.UpdateSplitScreen, X0
	029 Move W8, [X20+32]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X9, -46395392
	032 Add X9, X9, 2428
	033 NotImplemented "Instruction ADR not yet implemented."
	034 Move W11, [X9]
	035 Add X10, X10, X11
	036 CallNoReturn X10
	037 Move X8, 0x972000
	038 Move X8, [X8+2864]
	039 Move X0, X20
	040 Move X2, X19
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move X1, [X8]
	044 Move W3, 1
	045 Move X4, X31
	046 Move X30, [X31+32]
	047 Move X21, [X31+40]
	048 Call Component.SendMessage, X0, X1, X2, X3
	049 Return 
	050 Move X8, 0x972000
	051 Move X8, [X8+2864]
	052 Move X0, X20
	053 Move X2, X19
	054 Move X20, [X31+16]
	055 Move X19, [X31+24]
	056 Move X1, [X8]
	057 Move W3, 1
	058 Move X4, X31
	059 Move X30, [X31+32]
	060 Move X21, [X31+40]
	061 Call Component.BroadcastMessage, X0, X1, X2, X3
	062 Return 
	063 Move X0, [X20+48]
	064 Compare X0, 0
	065 JumpIfEqual {76}
	066 Move X8, 0x972000
	067 Move X8, [X8+2832]
	068 Move X1, X19
	069 Move X20, [X31+16]
	070 Move X19, [X31+24]
	071 Move X2, [X8]
	072 Move X30, [X31+32]
	073 Move X21, [X31+40]
	074 Call UnityEvent`1<Object>.Invoke, X0, X1
	075 Return 
	076 Move X20, [X31+16]
	077 Move X19, [X31+24]
	078 Move X30, [X31+32]
	079 Move X21, [X31+40]
	080 Return 
	081 Move X8, 0x972000
	082 Move X9, 0x972000
	083 Move X8, [X8+2856]
	084 Move X9, [X9+2824]
	085 Add X0, X20, 144
	086 Move X1, X19
	087 Move X2, [X8]
	088 Move X4, [X9]
	089 Move X20, [X31+16]
	090 Move X19, [X31+24]
	091 Move X3, X31
	092 Move X30, [X31+32]
	093 Move X21, [X31+40]
	094 Call DelegateHelpers.InvokeCallbacksSafe, X0, X1, X2, X3
	095 Return 

Method: System.Void NotifyPlayerLeft(UnityEngine.InputSystem.PlayerInput player)

Disassembly:
	0x037D87AC LDP X22, X21, [X31 + 0x20]
	0x037D87B0 LDR X30, [X31 + 0x10]
	0x037D87B4 ADD X31, X31, 0x40
	0x037D87B8 RET
	0x037D87BC BL 0x1C16F20
	0x037D87C0 ADRP X0, 0x920000
	0x037D87C4 LDR X0, [X0 + 0x528]
	0x037D87C8 BL 0x1C16D08
	0x037D87CC BL 0x1C16F10
	0x037D87D0 MOV X19, X0
	0x037D87D4 ADRP X0, 0x943000
	0x037D87D8 LDR X0, [X0 + 0xBF8]
	0x037D87DC BL 0x1C16D08
	0x037D87E0 MOV X1, X0
	0x037D87E4 MOV X0, X19
	0x037D87E8 MOV X2, X31
	0x037D87EC BL 0x330E100
	0x037D87F0 ADRP X0, 0x970000
	0x037D87F4 LDR X0, [X0 + 0xC10]
	0x037D87F8 BL 0x1C16D08
	0x037D87FC MOV X1, X0
	0x037D8800 MOV X0, X19
	0x037D8804 BL 0x1C16DEC
	0x037D8808 ADRP X0, 0x970000
	0x037D880C LDR X0, [X0 + 0xC18]
	0x037D8810 B 0x37D881C
	0x037D8814 ADRP X0, 0x970000
	0x037D8818 LDR X0, [X0 + 0xC20]
	0x037D881C BL 0x1C16D08
	0x037D8820 MOV X1, X19
	0x037D8824 MOV X2, X31
	0x037D8828 BL 0x321EFD0
	0x037D882C MOV X19, X0
	0x037D8830 ADRP X0, 0x923000
	0x037D8834 LDR X0, [X0 + 0x578]
	0x037D8838 BL 0x1C16D08
	0x037D883C BL 0x1C16F10
	0x037D8840 MOV X1, X19
	0x037D8844 MOV X2, X31
	0x037D8848 MOV X20, X0
	0x037D884C BL 0x3314A68
	0x037D8850 ADRP X0, 0x970000
	0x037D8854 LDR X0, [X0 + 0xC10]
	0x037D8858 BL 0x1C16D08
	0x037D885C MOV X1, X0
	0x037D8860 MOV X0, X20
	0x037D8864 BL 0x1C16DEC
	0x037D8868 SUB X31, X31, 0x40
	0x037D886C STP X2, X30, [X31 + 0x8]
	0x037D8870 STP X22, X21, [X31 + 0x20]
	0x037D8874 STP X20, X19, [X31 + 0x30]
	0x037D8878 ADRP X21, 0xC09000
	0x037D887C STR X1, [X31]
	0x037D8880 ADRP X22, 0x970000
	0x037D8884 LDRB W8, [X21 + 0x27F]
	0x037D8888 LDR X22, [X22 + 0xC08]
	0x037D888C MOV X19, X3
	0x037D8890 MOV X20, X0
	0x037D8894 TBNZ X8, 0x0, 0x37D88AC
	0x037D8898 ADRP X0, 0x970000
	0x037D889C LDR X0, [X0 + 0xC08]
	0x037D88A0 BL 0x1C16CF4
	0x037D88A4 MOVZ W8, 0x1
	0x037D88A8 STRB W8, [X21 + 0x27F]
	0x037D88AC LDR X1, [X22]
	0x037D88B0 MOV X0, X20
	0x037D88B4 BL 0x272BD20
	0x037D88B8 ADD X0, X31, 0x0
	0x037D88BC MOV X1, X31
	0x037D88C0 BL 0x337866C
	0x037D88C4 STP X0, X19, [X20 + 0x30]
	0x037D88C8 LDP X20, X19, [X31 + 0x30]
	0x037D88CC LDP X22, X21, [X31 + 0x20]
	0x037D88D0 LDR X30, [X31 + 0x10]
	0x037D88D4 ADD X31, X31, 0x40
	0x037D88D8 RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xC0A000
	006 Move W8, [X21+665]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {27}
	013 Move X0, 0x971000
	014 Move X0, [X0+2824]
	015 Call 0x1C17CF4
	016 Move X0, 0x971000
	017 Move X0, [X0+2832]
	018 Call 0x1C17CF4
	019 Move X0, 0x971000
	020 Move X0, [X0+2992]
	021 Call 0x1C17CF4
	022 Move X0, 0x971000
	023 Move X0, [X0+3000]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+665], W8
	027 Move X0, X20
	028 Call PlayerInputManager.UpdateSplitScreen, X0
	029 Move W8, [X20+32]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X9, -46399488
	032 Add X9, X9, 2428
	033 NotImplemented "Instruction ADR not yet implemented."
	034 Move W11, [X9]
	035 Add X10, X10, X11
	036 CallNoReturn X10
	037 Move X8, 0x971000
	038 Move X8, [X8+2992]
	039 Move X0, X20
	040 Move X2, X19
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move X1, [X8]
	044 Move W3, 1
	045 Move X4, X31
	046 Move X30, [X31+32]
	047 Move X21, [X31+40]
	048 Call Component.SendMessage, X0, X1, X2, X3
	049 Return 
	050 Move X8, 0x971000
	051 Move X8, [X8+2992]
	052 Move X0, X20
	053 Move X2, X19
	054 Move X20, [X31+16]
	055 Move X19, [X31+24]
	056 Move X1, [X8]
	057 Move W3, 1
	058 Move X4, X31
	059 Move X30, [X31+32]
	060 Move X21, [X31+40]
	061 Call Component.BroadcastMessage, X0, X1, X2, X3
	062 Return 
	063 Move X0, [X20+56]
	064 Compare X0, 0
	065 JumpIfEqual {76}
	066 Move X8, 0x971000
	067 Move X8, [X8+2832]
	068 Move X1, X19
	069 Move X20, [X31+16]
	070 Move X19, [X31+24]
	071 Move X2, [X8]
	072 Move X30, [X31+32]
	073 Move X21, [X31+40]
	074 Call UnityEvent`1<Object>.Invoke, X0, X1
	075 Return 
	076 Move X20, [X31+16]
	077 Move X19, [X31+24]
	078 Move X30, [X31+32]
	079 Move X21, [X31+40]
	080 Return 
	081 Move X8, 0x971000
	082 Move X9, 0x971000
	083 Move X8, [X8+3000]
	084 Move X9, [X9+2824]
	085 Add X0, X20, 224
	086 Move X1, X19
	087 Move X2, [X8]
	088 Move X4, [X9]
	089 Move X20, [X31+16]
	090 Move X19, [X31+24]
	091 Move X3, X31
	092 Move X30, [X31+32]
	093 Move X21, [X31+40]
	094 Call DelegateHelpers.InvokeCallbacksSafe, X0, X1, X2, X3
	095 Return 

Method: System.Void .ctor()

Disassembly:
	0x037DB82C LDR X1, [X21]
	0x037DB830 MOV X0, X19
	0x037DB834 LDP X20, X19, [X31 + 0x10]
	0x037DB838 LDP X30, X21, [X31], #0x20
	0x037DB83C B 0x22113C0
	0x037DB840 MOV X1, X31
	0x037DB844 B 0x37C1378
	0x037DB848 SUB X31, X31, 0x60
	0x037DB84C STP D9, D8, [X31 + 0x20]
	0x037DB850 STR X30, [X31 + 0x30]

ISIL:
	001 Move X9, -47120384
	002 Move V0, [X9+188]
	003 Move TEMP, 0
	004 Not TEMP
	005 Move W8, TEMP
	006 Move W9, 1
	007 Move X1, X31
	008 Move [X0+36], W8
	009 Move [X0+40], W9
	010 Move [X0+100], W8
	011 Move [X0+104], V0
	012 Call MonoBehaviour..ctor, X0
	013 Return 

