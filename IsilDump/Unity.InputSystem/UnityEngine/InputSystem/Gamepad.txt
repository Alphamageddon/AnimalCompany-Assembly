Type: UnityEngine.InputSystem.Gamepad

Method: UnityEngine.InputSystem.Controls.ButtonControl get_buttonWest()

Disassembly:
	0x0377AFA4 LDR W8, [X20 + 0x14]
	0x0377AFA8 ADD X0, X20, 0x10

ISIL:
	001 Move X0, [X0+368]
	002 Return X0

Method: System.Void set_buttonWest(UnityEngine.InputSystem.Controls.ButtonControl value)

Disassembly:
	0x0377AFAC MOV X1, X31
	0x0377AFB0 ADD X19, X8, X19

ISIL:
	001 Move [X0+368], X1
	002 Return 

Method: UnityEngine.InputSystem.Controls.ButtonControl get_buttonNorth()

Disassembly:
	0x0377AFB4 BL 0x3800B6C
	0x0377AFB8 MOV W2, W0

ISIL:
	001 Move X0, [X0+376]
	002 Return X0

Method: System.Void set_buttonNorth(UnityEngine.InputSystem.Controls.ButtonControl value)

Disassembly:
	0x0377AFBC MOV X0, X19
	0x0377AFC0 MOV X1, X19

ISIL:
	001 Move [X0+376], X1
	002 Return 

Method: UnityEngine.InputSystem.Controls.ButtonControl get_buttonSouth()

Disassembly:
	0x0377AFC4 MOV X3, X31
	0x0377AFC8 BL 0x3C001FC

ISIL:
	001 Move X0, [X0+384]
	002 Return X0

Method: System.Void set_buttonSouth(UnityEngine.InputSystem.Controls.ButtonControl value)

Disassembly:
	0x0377AFCC LDP X20, X19, [X31 + 0x20]
	0x0377AFD0 LDP X22, X21, [X31 + 0x10]

ISIL:
	001 Move [X0+384], X1
	002 Return 

Method: UnityEngine.InputSystem.Controls.ButtonControl get_buttonEast()

Disassembly:
	0x0377AFD4 CMP W0, 0x0
	0x0377AFD8 CSET W0, EQ

ISIL:
	001 Move X0, [X0+392]
	002 Return X0

Method: System.Void set_buttonEast(UnityEngine.InputSystem.Controls.ButtonControl value)

Disassembly:
	0x0377AFDC LDR X30, [X31], #0x30
	0x0377AFE0 RET

ISIL:
	001 Move [X0+392], X1
	002 Return 

Method: UnityEngine.InputSystem.Controls.ButtonControl get_leftStickButton()

Disassembly:
	0x0377AFE4 ADRP X0, 0x97E000
	0x0377AFE8 LDR X0, [X0 + 0x528]

ISIL:
	001 Move X0, [X0+400]
	002 Return X0

Method: System.Void set_leftStickButton(UnityEngine.InputSystem.Controls.ButtonControl value)

Disassembly:
	0x0377AFEC BL 0x1C16D08
	0x0377AFF0 BL 0x1C16F10

ISIL:
	001 Move [X0+400], X1
	002 Return 

Method: UnityEngine.InputSystem.Controls.ButtonControl get_rightStickButton()

Disassembly:
	0x0377AFF4 MOV X19, X0
	0x0377AFF8 ADRP X0, 0x9CC000

ISIL:
	001 Move X0, [X0+408]
	002 Return X0

Method: System.Void set_rightStickButton(UnityEngine.InputSystem.Controls.ButtonControl value)

Disassembly:
	0x0377AFFC LDR X0, [X0 + 0xFB8]
	0x0377B000 B 0x377B020

ISIL:
	001 Move [X0+408], X1
	002 Return 

Method: UnityEngine.InputSystem.Controls.ButtonControl get_startButton()

Disassembly:
	0x0377B004 ADRP X0, 0x97D000
	0x0377B008 LDR X0, [X0 + 0x528]

ISIL:
	001 Move X0, [X0+416]
	002 Return X0

Method: System.Void set_startButton(UnityEngine.InputSystem.Controls.ButtonControl value)

Disassembly:
	0x0377B00C BL 0x1C16D08
	0x0377B010 BL 0x1C16F10

ISIL:
	001 Move [X0+416], X1
	002 Return 

Method: UnityEngine.InputSystem.Controls.ButtonControl get_selectButton()

Disassembly:
	0x0377B014 MOV X19, X0
	0x0377B018 ADRP X0, 0x9CB000

ISIL:
	001 Move X0, [X0+424]
	002 Return X0

Method: System.Void set_selectButton(UnityEngine.InputSystem.Controls.ButtonControl value)

Disassembly:
	0x0377B01C LDR X0, [X0 + 0xFC0]
	0x0377B020 BL 0x1C16D08

ISIL:
	001 Move [X0+424], X1
	002 Return 

Method: UnityEngine.InputSystem.Controls.DpadControl get_dpad()

Disassembly:
	0x0377B024 MOV X1, X0
	0x0377B028 MOV X0, X19

ISIL:
	001 Move X0, [X0+432]
	002 Return X0

Method: System.Void set_dpad(UnityEngine.InputSystem.Controls.DpadControl value)

Disassembly:
	0x0377B02C MOV X2, X31
	0x0377B030 BL 0x330E100

ISIL:
	001 Move [X0+432], X1
	002 Return 

Method: UnityEngine.InputSystem.Controls.ButtonControl get_leftShoulder()

Disassembly:
	0x0377B034 ADRP X0, 0x9CB000
	0x0377B038 LDR X0, [X0 + 0xFC8]

ISIL:
	001 Move X0, [X0+440]
	002 Return X0

Method: System.Void set_leftShoulder(UnityEngine.InputSystem.Controls.ButtonControl value)

Disassembly:
	0x0377B03C BL 0x1C16D08
	0x0377B040 MOV X1, X0

ISIL:
	001 Move [X0+440], X1
	002 Return 

Method: UnityEngine.InputSystem.Controls.ButtonControl get_rightShoulder()

Disassembly:
	0x0377B044 MOV X0, X19
	0x0377B048 BL 0x1C16DEC

ISIL:
	001 Move X0, [X0+448]
	002 Return X0

Method: System.Void set_rightShoulder(UnityEngine.InputSystem.Controls.ButtonControl value)

Disassembly:
	0x0377B04C STR X30, [X31 - 0x10]!
	0x0377B050 LDR W9, [X0 + 0xA0]

ISIL:
	001 Move [X0+448], X1
	002 Return 

Method: UnityEngine.InputSystem.Controls.StickControl get_leftStick()

Disassembly:
	0x0377B054 LDR X8, [X0 + 0x150]
	0x0377B058 AND W9, W9, 0xFFFFFFFE

ISIL:
	001 Move X0, [X0+456]
	002 Return X0

Method: System.Void set_leftStick(UnityEngine.InputSystem.Controls.StickControl value)

Disassembly:
	0x0377B05C STR W9, [X0 + 0xA0]
	0x0377B060 CBZ X8, 0x377B0C4

ISIL:
	001 Move [X0+456], X1
	002 Return 

Method: UnityEngine.InputSystem.Controls.StickControl get_rightStick()

Disassembly:
	0x0377B064 LDR W9, [X8 + 0x18]
	0x0377B068 CMP W9, 0x1

ISIL:
	001 Move X0, [X0+464]
	002 Return X0

Method: System.Void set_rightStick(UnityEngine.InputSystem.Controls.StickControl value)

Disassembly:
	0x0377B06C B.LT 0x377B0A0
	0x0377B070 MOV W10, W31

ISIL:
	001 Move [X0+464], X1
	002 Return 

Method: UnityEngine.InputSystem.Controls.ButtonControl get_leftTrigger()

Disassembly:
	0x0377B074 CMP W10, W9
	0x0377B078 B.CS 0x377B0C0

ISIL:
	001 Move X0, [X0+472]
	002 Return X0

Method: System.Void set_leftTrigger(UnityEngine.InputSystem.Controls.ButtonControl value)

Disassembly:
	0x0377B07C ADD X11, X8, W10, 0x3, SXTW
	0x0377B080 LDR X11, [X11 + 0x20]

ISIL:
	001 Move [X0+472], X1
	002 Return 

Method: UnityEngine.InputSystem.Controls.ButtonControl get_rightTrigger()

Disassembly:
	0x0377B084 CBZ X11, 0x377B0C4
	0x0377B088 LDR W12, [X11 + 0xA0]

ISIL:
	001 Move X0, [X0+480]
	002 Return X0

Method: System.Void set_rightTrigger(UnityEngine.InputSystem.Controls.ButtonControl value)

Disassembly:
	0x0377B08C ADD W10, W10, 0x1
	0x0377B090 CMP W10, W9

ISIL:
	001 Move [X0+480], X1
	002 Return 

Method: UnityEngine.InputSystem.Controls.ButtonControl get_aButton()

Disassembly:
	0x0377B094 AND W12, W12, 0xFFFFFFFE
	0x0377B098 STR W12, [X11 + 0xA0]

ISIL:
	001 Move X0, [X0+384]
	002 Return X0

Method: UnityEngine.InputSystem.Controls.ButtonControl get_bButton()

Disassembly:
	0x0377B09C B.LT 0x377B074
	0x0377B0A0 LDR W8, [X0 + 0xDC]

ISIL:
	001 Move X0, [X0+392]
	002 Return X0

Method: UnityEngine.InputSystem.Controls.ButtonControl get_xButton()

Disassembly:
	0x0377B0A4 LDR X9, [X0]
	0x0377B0A8 AND W8, W8, 0xFFFFFFBF

ISIL:
	001 Move X0, [X0+368]
	002 Return X0

Method: UnityEngine.InputSystem.Controls.ButtonControl get_yButton()

Disassembly:
	0x0377B0AC STR W8, [X0 + 0xDC]
	0x0377B0B0 LDR X2, [X9 + 0x278]

ISIL:
	001 Move X0, [X0+376]
	002 Return X0

Method: UnityEngine.InputSystem.Controls.ButtonControl get_triangleButton()

Disassembly:
	0x0377B0B4 LDR X1, [X9 + 0x280]
	0x0377B0B8 LDR X30, [X31], #0x10

ISIL:
	001 Move X0, [X0+376]
	002 Return X0

Method: UnityEngine.InputSystem.Controls.ButtonControl get_squareButton()

Disassembly:
	0x0377B0BC BR X2
	0x0377B0C0 BL 0x1C16F28

ISIL:
	001 Move X0, [X0+368]
	002 Return X0

Method: UnityEngine.InputSystem.Controls.ButtonControl get_circleButton()

Disassembly:
	0x0377B0C4 BL 0x1C16F20
	0x0377B0C8 RET

ISIL:
	001 Move X0, [X0+392]
	002 Return X0

Method: UnityEngine.InputSystem.Controls.ButtonControl get_crossButton()

Disassembly:
	0x0377B0CC RET
	0x0377B0D0 RET

ISIL:
	001 Move X0, [X0+384]
	002 Return X0

Method: UnityEngine.InputSystem.Controls.ButtonControl get_Item(UnityEngine.InputSystem.LowLevel.GamepadButton button)

Disassembly:
	0x0377B0D4 STR X30, [X31 - 0x30]!
	0x0377B0D8 STP X22, X21, [X31 + 0x10]
	0x0377B0DC STP X20, X19, [X31 + 0x20]
	0x0377B0E0 ADRP X20, 0xC65000
	0x0377B0E4 ADRP X22, 0x9A0000
	0x0377B0E8 LDRB W8, [X20 + 0xF65]
	0x0377B0EC LDR X22, [X22 + 0xEC8]
	0x0377B0F0 MOV X19, X1
	0x0377B0F4 MOV X21, X0
	0x0377B0F8 TBNZ X8, 0x0, 0x377B11C
	0x0377B0FC ADRP X0, 0x9A0000
	0x0377B100 LDR X0, [X0 + 0xED0]
	0x0377B104 BL 0x1C16CF4
	0x0377B108 ADRP X0, 0x9A0000
	0x0377B10C LDR X0, [X0 + 0xEC8]
	0x0377B110 BL 0x1C16CF4
	0x0377B114 MOVZ W8, 0x1
	0x0377B118 STRB W8, [X20 + 0xF65]
	0x0377B11C LDR X8, [X22]
	0x0377B120 LDR X8, [X8 + 0xB8]
	0x0377B124 LDR X20, [X8]
	0x0377B128 CBZ X20, 0x377B1A8
	0x0377B12C ADRP X10, 0x9A0000
	0x0377B130 LDR X8, [X20]
	0x0377B134 LDR X10, [X10 + 0xED0]
	0x0377B138 LDR W21, [X21 + 0xE0]
	0x0377B13C LDRH W9, [X8 + 0x12E]
	0x0377B140 LDR X1, [X10]
	0x0377B144 CBZ X9, 0x377B168
	0x0377B148 LDR X10, [X8 + 0xB0]
	0x0377B14C ADD X10, X10, 0x8
	0x0377B150 LDUR X11, [X10 - 0x8]
	0x0377B154 CMP X11, X1
	0x0377B158 B.EQ 0x377B178
	0x0377B15C SUBS X9, X9, 0x1
	0x0377B160 ADD X10, X10, 0x10
	0x0377B164 B.NE 0x377B150
	0x0377B168 MOVZ W2, 0x3
	0x0377B16C MOV X0, X20
	0x0377B170 BL 0x1C5C788
	0x0377B174 B 0x377B188
	0x0377B178 LDR W9, [X10]
	0x0377B17C ADD W9, W9, 0x3
	0x0377B180 ADD X8, X8, W9, 0x4, SXTW
	0x0377B184 ADD X0, X8, 0x138
	0x0377B188 LDP X4, X3, [X0]
	0x0377B18C MOV X0, X20
	0x0377B190 MOV W1, W21
	0x0377B194 MOV X2, X19
	0x0377B198 LDP X20, X19, [X31 + 0x20]
	0x0377B19C LDP X22, X21, [X31 + 0x10]
	0x0377B1A0 LDR X30, [X31], #0x30
	0x0377B1A4 BR X4
	0x0377B1A8 BL 0x1C16F20
	0x0377B1AC LDRB W8, [X0 + 0xDC]
	0x0377B1B0 UBFM W0, W8, 0x5, 0x5
	0x0377B1B4 RET
	0x0377B1B8 LDR W8, [X0 + 0xDC]
	0x0377B1BC ANDS W31, W1, 0x1
	0x0377B1C0 MOVZ W9, 0x20
	0x0377B1C4 CSEL W9, W9, W31, NE
	0x0377B1C8 AND W8, W8, 0xFFFFFFDF
	0x0377B1CC ORR W8, W8, W9, 0x0
	0x0377B1D0 STR W8, [X0 + 0xDC]
	0x0377B1D4 RET
	0x0377B1D8 LDRB W8, [X0 + 0xDC]
	0x0377B1DC UBFM W0, W8, 0x7, 0x1F
	0x0377B1E0 RET
	0x0377B1E4 LDR W8, [X0 + 0xDC]
	0x0377B1E8 ANDS W31, W1, 0x1
	0x0377B1EC MOVZ W9, 0x80
	0x0377B1F0 CSEL W9, W9, W31, NE
	0x0377B1F4 AND W8, W8, 0xFFFFFF7F
	0x0377B1F8 ORR W8, W8, W9, 0x0
	0x0377B1FC STR W8, [X0 + 0xDC]
	0x0377B200 RET
	0x0377B204 LDRB W8, [X0 + 0xDD]
	0x0377B208 AND W0, W8, 0x1
	0x0377B20C RET
	0x0377B210 LDR W8, [X0 + 0xDC]
	0x0377B214 ANDS W31, W1, 0x1
	0x0377B218 MOVZ W9, 0x100
	0x0377B21C CSEL W9, W9, W31, NE
	0x0377B220 AND W8, W8, 0xFFFFFEFF
	0x0377B224 ORR W8, W8, W9, 0x0
	0x0377B228 STR W8, [X0 + 0xDC]
	0x0377B22C RET
	0x0377B230 ORR W8, W0, W1, 0x13

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 NotImplemented "Instruction CMP not yet implemented."
	006 Move X9, -46018560
	007 Move W8, W1
	008 Add X9, X9, 2324
	009 NotImplemented "Instruction ADR not yet implemented."
	010 Move W11, [X9]
	011 Add X10, X10, X11
	012 CallNoReturn X10
	013 Move X8, [X0+432]
	014 Compare X8, 0
	015 JumpIfEqual {47}
	016 Add X8, X8, 288
	017 Move X8, [X0+432]
	018 Compare X8, 0
	019 JumpIfEqual {47}
	020 Add X8, X8, 296
	021 Move X8, [X0+432]
	022 Compare X8, 0
	023 JumpIfEqual {47}
	024 Add X8, X8, 304
	025 Move X8, [X0+432]
	026 Compare X8, 0
	027 JumpIfEqual {47}
	028 Add X8, X8, 312
	029 Add X8, X0, 376
	030 Add X8, X0, 392
	031 Add X8, X0, 384
	032 Add X8, X0, 368
	033 Add X8, X0, 400
	034 Add X8, X0, 408
	035 Add X8, X0, 440
	036 Add X8, X0, 448
	037 Add X8, X0, 416
	038 Add X8, X0, 424
	039 Add X8, X0, 472
	040 Add X8, X0, 480
	041 Move X0, [X8]
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X30, [X31+32]
	045 Move X21, [X31+40]
	046 Return X0
	047 Call 0x1C17F20
	048 Move X0, 0x9CC000
	049 Move X0, [X0+3776]
	050 Move W19, W1
	051 Call 0x1C17D08
	052 Move X20, X0
	053 Move X0, 0x979000
	054 Move X0, [X0+1728]
	055 Call 0x1C17D08
	056 Call 0x19913D0
	057 Move X0, X20
	058 Move X1, X31
	059 Call Type.GetTypeFromHandle, X0
	060 Move X20, X0
	061 Move X0, 0x9CC000
	062 Move X0, [X0+3784]
	063 Call 0x1C17D08
	064 Call 0x1C17F10
	065 Move X21, X0
	066 Move X0, 0x9CC000
	067 Move X0, [X0+3792]
	068 Call 0x1C17D08
	069 Move X1, X0
	070 Move X0, X21
	071 Move W2, W19
	072 Move X3, X20
	073 Move X4, X31
	074 Call InvalidEnumArgumentException..ctor, X0, X1, X2, X3
	075 Move X0, 0x9CC000
	076 Move X0, [X0+3800]
	077 Call 0x1C17D08
	078 Move X1, X0
	079 Move X0, X21
	080 Call 0x1C17DEC

Method: UnityEngine.InputSystem.Gamepad get_current()

Disassembly:
	0x0377B234 ORR W0, W8, W2, 0xA
	0x0377B238 RET
	0x0377B23C LDRB W8, [X0 + 0xDC]
	0x0377B240 UBFM W0, W8, 0x2, 0x2
	0x0377B244 RET
	0x0377B248 LDRB W8, [X0 + 0xDD]
	0x0377B24C UBFM W0, W8, 0x2, 0x2
	0x0377B250 RET
	0x0377B254 LDR W8, [X0 + 0xDC]
	0x0377B258 ANDS W31, W1, 0x1
	0x0377B25C MOVZ W9, 0x2
	0x0377B260 CSEL W9, W9, W31, NE
	0x0377B264 AND W8, W8, 0xFFFFFFFD
	0x0377B268 ORR W8, W8, W9, 0x0
	0x0377B26C STR W8, [X0 + 0xDC]
	0x0377B270 RET
	0x0377B274 LDRB W8, [X0 + 0xDD]
	0x0377B278 UBFM W0, W8, 0x5, 0x5

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xC66000
	005 Move X20, 0x9CC000
	006 Move W8, [X19+3925]
	007 Move X20, [X20+3808]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x9CC000
	013 Move X0, [X0+3808]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+3925], W8
	017 Move X8, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X8, [X8+184]
	021 Move X0, [X8]
	022 Move X30, [X31+32]
	023 Return X0

Method: System.Void set_current(UnityEngine.InputSystem.Gamepad value)

Disassembly:
	0x0377B27C RET
	0x0377B280 LDR W8, [X0 + 0xDC]
	0x0377B284 ANDS W31, W1, 0x1
	0x0377B288 MOVZ W9, 0x2000
	0x0377B28C CSEL W9, W9, W31, NE
	0x0377B290 AND W8, W8, 0xFFFFDFFF
	0x0377B294 ORR W8, W8, W9, 0x0
	0x0377B298 STR W8, [X0 + 0xDC]
	0x0377B29C RET
	0x0377B2A0 LDRB W8, [X0 + 0xDD]
	0x0377B2A4 UBFM W0, W8, 0x6, 0x6
	0x0377B2A8 RET
	0x0377B2AC LDR W8, [X0 + 0xDC]
	0x0377B2B0 ANDS W31, W1, 0x1
	0x0377B2B4 MOVZ W9, 0x4000
	0x0377B2B8 CSEL W9, W9, W31, NE
	0x0377B2BC AND W8, W8, 0xFFFFBFFF
	0x0377B2C0 ORR W8, W8, W9, 0x0
	0x0377B2C4 STR W8, [X0 + 0xDC]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xC66000
	006 Move X21, 0x9CC000
	007 Move W8, [X20+3926]
	008 Move X21, [X21+3808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x9CC000
	015 Move X0, [X0+3808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3926], W8
	019 Move X8, [X21]
	020 Move X8, [X8+184]
	021 Move [X8], X19
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X30, [X31+32]
	025 Move X21, [X31+40]
	026 Return 

Method: UnityEngine.InputSystem.Utilities.ReadOnlyArray`1<UnityEngine.InputSystem.Gamepad> get_all()

Disassembly:
	0x0377B2C8 RET
	0x0377B2CC SUB X31, X31, 0x40
	0x0377B2D0 STP X30, X23, [X31 + 0x10]
	0x0377B2D4 STP X22, X21, [X31 + 0x20]
	0x0377B2D8 STP X20, X19, [X31 + 0x30]
	0x0377B2DC ADRP X23, 0xC65000
	0x0377B2E0 ADRP X22, 0x9A0000
	0x0377B2E4 LDRB W8, [X23 + 0xF67]
	0x0377B2E8 LDR X22, [X22 + 0xDA0]
	0x0377B2EC MOV X20, X2
	0x0377B2F0 MOV X21, X1
	0x0377B2F4 MOV X19, X0
	0x0377B2F8 TBNZ X8, 0x0, 0x377B31C
	0x0377B2FC ADRP X0, 0x9CB000
	0x0377B300 LDR X0, [X0 + 0xFD0]
	0x0377B304 BL 0x1C16CF4
	0x0377B308 ADRP X0, 0x9A0000
	0x0377B30C LDR X0, [X0 + 0xDA0]
	0x0377B310 BL 0x1C16CF4
	0x0377B314 MOVZ W8, 0x1
	0x0377B318 STRB W8, [X23 + 0xF67]
	0x0377B31C LDR X0, [X19 + 0x148]
	0x0377B320 LDR X1, [X22]
	0x0377B324 ADRP X22, 0x9CB000
	0x0377B328 LDR X22, [X22 + 0xFD0]
	0x0377B32C BL 0x217B258
	0x0377B330 LDR W9, [X19 + 0x88]
	0x0377B334 ADD W8, W9, W0
	0x0377B338 STR W8, [X31 + 0xC]
	0x0377B33C CBNZ W9, 0x377B344
	0x0377B340 STR W8, [X19 + 0x8C]
	0x0377B344 LDR X5, [X22]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xC66000
	007 Move X21, 0x9CC000
	008 Move X19, 0x9CC000
	009 Move W8, [X20+3927]
	010 Move X21, [X21+3808]
	011 Move X19, [X19+3816]
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x9CC000
	017 Move X0, [X0+3808]
	018 Call 0x1C17CF4
	019 Move X0, 0x9CC000
	020 Move X0, [X0+3816]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X20+3927], W8
	024 Move X8, [X21]
	025 Move X4, [X19]
	026 Add X0, X31, 0
	027 Move W2, W31
	028 Move X8, [X8+184]
	029 Move X1, [X8+16]
	030 Move W3, [X8+8]
	031 Move [X31], X31
	032 Move [X31+8], X31
	033 Call ReadOnlyArray`1<Object>..ctor, X0, X1, X2, X3
	034 Move X0, [X31]
	035 Move X1, [X31+8]
	036 Move X20, [X31+32]
	037 Move X19, [X31+40]
	038 Move X30, [X31+16]
	039 Move X21, [X31+24]
	040 Add X31, X31, 48
	041 Return X0

Method: System.Void FinishSetup()

Disassembly:
	0x0377B348 ADD X0, X19, 0x140
	0x0377B34C ADD X1, X31, 0xC
	0x0377B350 MOVZ W4, 0xA
	0x0377B354 MOV X2, X21
	0x0377B358 MOV X3, X20
	0x0377B35C BL 0x2174640
	0x0377B360 LDR W8, [X19 + 0x88]
	0x0377B364 LDP X22, X21, [X31 + 0x20]
	0x0377B368 LDP X30, X23, [X31 + 0x10]
	0x0377B36C ADD W8, W8, 0x1
	0x0377B370 STR W8, [X19 + 0x88]
	0x0377B374 LDP X20, X19, [X31 + 0x30]
	0x0377B378 ADD X31, X31, 0x40
	0x0377B37C RET
	0x0377B380 STR X30, [X31 - 0x40]!
	0x0377B384 STP X24, X23, [X31 + 0x10]
	0x0377B388 STP X22, X21, [X31 + 0x20]
	0x0377B38C STP X20, X19, [X31 + 0x30]
	0x0377B390 ADRP X24, 0xC65000
	0x0377B394 ADRP X23, 0x9A0000
	0x0377B398 ADRP X22, 0x9CB000
	0x0377B39C LDRB W8, [X24 + 0xF68]
	0x0377B3A0 LDR X23, [X23 + 0xDA0]
	0x0377B3A4 LDR X22, [X22 + 0xFD8]
	0x0377B3A8 MOV X20, X2
	0x0377B3AC MOV X21, X1
	0x0377B3B0 MOV X19, X0
	0x0377B3B4 TBNZ X8, 0x0, 0x377B3E4
	0x0377B3B8 ADRP X0, 0x9CB000
	0x0377B3BC LDR X0, [X0 + 0xFE0]
	0x0377B3C0 BL 0x1C16CF4
	0x0377B3C4 ADRP X0, 0x9CB000
	0x0377B3C8 LDR X0, [X0 + 0xFD8]
	0x0377B3CC BL 0x1C16CF4
	0x0377B3D0 ADRP X0, 0x9A0000
	0x0377B3D4 LDR X0, [X0 + 0xDA0]
	0x0377B3D8 BL 0x1C16CF4
	0x0377B3DC MOVZ W8, 0x1
	0x0377B3E0 STRB W8, [X24 + 0xF68]
	0x0377B3E4 LDR X0, [X19 + 0x148]
	0x0377B3E8 LDR X1, [X23]
	0x0377B3EC BL 0x217B258
	0x0377B3F0 LDP W8, W3, [X19 + 0x88]
	0x0377B3F4 LDR X5, [X22]
	0x0377B3F8 MOV X1, X21
	0x0377B3FC MOV X2, X20
	0x0377B400 ADD W4, W8, W0
	0x0377B404 STR W4, [X31 + 0xC]
	0x0377B408 LDR X0, [X19 + 0x140]
	0x0377B40C BL 0x2179DA4
	0x0377B410 ADDS W31, W0, 0x1
	0x0377B414 B.EQ 0x377B448
	0x0377B418 ADRP X8, 0x9CB000
	0x0377B41C LDR X8, [X8 + 0xFE0]
	0x0377B420 MOV W2, W0
	0x0377B424 LDR X0, [X19 + 0x140]
	0x0377B428 ADD X1, X31, 0xC
	0x0377B42C LDR X3, [X8]
	0x0377B430 BL 0x2177E40
	0x0377B434 LDR W8, [X19 + 0x88]
	0x0377B438 SUBS W8, W8, 0x1
	0x0377B43C STR W8, [X19 + 0x88]
	0x0377B440 B.NE 0x377B448
	0x0377B444 STR W31, [X19 + 0x8C]
	0x0377B448 LDP X20, X19, [X31 + 0x30]
	0x0377B44C LDP X22, X21, [X31 + 0x20]
	0x0377B450 LDP X24, X23, [X31 + 0x10]
	0x0377B454 LDR X30, [X31], #0x40
	0x0377B458 RET
	0x0377B45C STR X30, [X31 - 0x10]!
	0x0377B460 LDP W9, W8, [X0 + 0x88]
	0x0377B464 SXTW X8, W8
	0x0377B468 CMP W8, W9
	0x0377B46C B.GE 0x377B4A8
	0x0377B470 UBFM X9, X8, 0x3C, 0x3B
	0x0377B474 ADD X9, X9, 0x20
	0x0377B478 LDR X10, [X0 + 0x140]
	0x0377B47C CBZ X10, 0x377B4B4
	0x0377B480 LDR W11, [X10 + 0x18]
	0x0377B484 CMP W8, W11
	0x0377B488 B.CS 0x377B4B8
	0x0377B48C ADD X10, X10, X9
	0x0377B490 STP X31, X31, [X10]
	0x0377B494 LDRSW X10, [X0 + 0x88]
	0x0377B498 ADD X8, X8, 0x1
	0x0377B49C ADD X9, X9, 0x10
	0x0377B4A0 CMP X8, X10
	0x0377B4A4 B.LT 0x377B478
	0x0377B4A8 STR W31, [X0 + 0x88]
	0x0377B4AC LDR X30, [X31], #0x10
	0x0377B4B0 RET
	0x0377B4B4 BL 0x1C16F20
	0x0377B4B8 BL 0x1C16F28
	0x0377B4BC STR X30, [X31 - 0x20]!
	0x0377B4C0 STP X20, X19, [X31 + 0x10]
	0x0377B4C4 ADRP X20, 0xC65000
	0x0377B4C8 LDRB W8, [X20 + 0xF6B]
	0x0377B4CC MOV X19, X0
	0x0377B4D0 TBNZ X8, 0x0, 0x377B4E8
	0x0377B4D4 ADRP X0, 0x9CB000
	0x0377B4D8 LDR X0, [X0 + 0xFE8]
	0x0377B4DC BL 0x1C16CF4
	0x0377B4E0 MOVZ W8, 0x1
	0x0377B4E4 STRB W8, [X20 + 0xF6B]
	0x0377B4E8 MOV X0, X19
	0x0377B4EC MOV X1, X31
	0x0377B4F0 BL 0x377F584
	0x0377B4F4 MOV X0, X31
	0x0377B4F8 BL 0x37FE71C
	0x0377B4FC STR X0, [X31 + 0x8]
	0x0377B500 LDR X0, [X19 + 0x78]
	0x0377B504 CBZ X0, 0x377B530
	0x0377B508 ADRP X8, 0x9CB000
	0x0377B50C LDR X8, [X8 + 0xFE8]
	0x0377B510 ADD X1, X31, 0x8
	0x0377B514 LDR X2, [X8]
	0x0377B518 BL 0x2204850
	0x0377B51C LDP X20, X19, [X31 + 0x10]
	0x0377B520 UBFM X8, X0, 0x3F, 0x3F
	0x0377B524 EOR W0, W8, 0x1
	0x0377B528 LDR X30, [X31], #0x20
	0x0377B52C RET
	0x0377B530 BL 0x1C16F20
	0x0377B534 STR X30, [X31 - 0x20]!
	0x0377B538 STP X20, X19, [X31 + 0x10]
	0x0377B53C ADRP X20, 0xC65000
	0x0377B540 LDRB W8, [X20 + 0xF6C]
	0x0377B544 MOV X19, X0
	0x0377B548 TBNZ X8, 0x0, 0x377B560
	0x0377B54C ADRP X0, 0x9CB000
	0x0377B550 LDR X0, [X0 + 0xFF0]
	0x0377B554 BL 0x1C16CF4
	0x0377B558 MOVZ W8, 0x1
	0x0377B55C STRB W8, [X20 + 0xF6C]
	0x0377B560 MOV X0, X31
	0x0377B564 BL 0x37FE680
	0x0377B568 STR X0, [X31 + 0x8]
	0x0377B56C LDR X0, [X19 + 0x78]
	0x0377B570 CBZ X0, 0x377B59C
	0x0377B574 ADRP X8, 0x9CB000
	0x0377B578 LDR X8, [X8 + 0xFF0]
	0x0377B57C ADD X1, X31, 0x8
	0x0377B580 LDR X2, [X8]
	0x0377B584 BL 0x22042A8
	0x0377B588 LDP X20, X19, [X31 + 0x10]
	0x0377B58C UBFM X8, X0, 0x3F, 0x3F
	0x0377B590 EOR W0, W8, 0x1
	0x0377B594 LDR X30, [X31], #0x20
	0x0377B598 RET
	0x0377B59C BL 0x1C16F20
	0x0377B5A0 LDR X8, [X0]
	0x0377B5A4 LDR X2, [X8 + 0x258]
	0x0377B5A8 LDR X1, [X8 + 0x260]
	0x0377B5AC BR X2
	0x0377B5B0 LDR X8, [X0]
	0x0377B5B4 LDR X2, [X8 + 0x268]
	0x0377B5B8 LDR X1, [X8 + 0x270]
	0x0377B5BC BR X2
	0x0377B5C0 STR X30, [X31 - 0x40]!
	0x0377B5C4 STP X24, X23, [X31 + 0x10]
	0x0377B5C8 STP X22, X21, [X31 + 0x20]
	0x0377B5CC STP X20, X19, [X31 + 0x30]
	0x0377B5D0 ADRP X24, 0xC65000
	0x0377B5D4 LDRB W8, [X24 + 0xF6D]
	0x0377B5D8 MOV W22, W4
	0x0377B5DC MOV W23, W3
	0x0377B5E0 MOV X20, X2
	0x0377B5E4 MOV X19, X1
	0x0377B5E8 MOV X21, X0
	0x0377B5EC TBNZ X8, 0x0, 0x377B604
	0x0377B5F0 ADRP X0, 0x9A0000
	0x0377B5F4 LDR X0, [X0 + 0xD18]
	0x0377B5F8 BL 0x1C16CF4
	0x0377B5FC MOVZ W8, 0x1
	0x0377B600 STRB W8, [X24 + 0xF6D]
	0x0377B604 LDR X9, [X21 + 0x160]
	0x0377B608 CBZ X9, 0x377B70C
	0x0377B60C LDR X8, [X9 + 0x18]
	0x0377B610 CBZ X8, 0x377B6F8
	0x0377B614 ADRP X8, 0x9A0000
	0x0377B618 LDR X8, [X8 + 0xD18]
	0x0377B61C LDR X0, [X8]
	0x0377B620 LDR W8, [X0 + 0xE0]
	0x0377B624 CBZ W8, 0x377B63C

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X29, 0xC66000
	014 Move X21, 0x9CC000
	015 Move X20, 0x9CA000
	016 Move X28, 0x9CC000
	017 Move X27, 0x9CC000
	018 Move X26, 0x9CC000
	019 Move X25, 0x9B3000
	020 Move X24, 0x9CC000
	021 Move X22, 0x9CC000
	022 Move X23, 0x9CC000
	023 Move X21, [X21+3824]
	024 Move X20, [X20+3608]
	025 Move X28, [X28+3832]
	026 Move X27, [X27+3840]
	027 Move X26, [X26+3848]
	028 Move X25, [X25+976]
	029 Move X24, [X24+3856]
	030 Move X22, [X22+3864]
	031 Move W8, [X29+3928]
	032 Move X23, [X23+3872]
	033 Move X19, X0
	034 Move TEMP, X8
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfEqual {94}
	038 Move X0, 0x9CA000
	039 Move X0, [X0+3608]
	040 Call 0x1C17CF4
	041 Move X0, 0x9CC000
	042 Move X0, [X0+3880]
	043 Call 0x1C17CF4
	044 Move X0, 0x9CC000
	045 Move X0, [X0+3872]
	046 Call 0x1C17CF4
	047 Move X0, 0x9CC000
	048 Move X0, [X0+3856]
	049 Call 0x1C17CF4
	050 Move X0, 0x9CC000
	051 Move X0, [X0+3864]
	052 Call 0x1C17CF4
	053 Move X0, 0x9CC000
	054 Move X0, [X0+3824]
	055 Call 0x1C17CF4
	056 Move X0, 0x9CC000
	057 Move X0, [X0+3888]
	058 Call 0x1C17CF4
	059 Move X0, 0x9CC000
	060 Move X0, [X0+3896]
	061 Call 0x1C17CF4
	062 Move X0, 0x9B3000
	063 Move X0, [X0+976]
	064 Call 0x1C17CF4
	065 Move X0, 0x9CC000
	066 Move X0, [X0+3904]
	067 Call 0x1C17CF4
	068 Move X0, 0x9CC000
	069 Move X0, [X0+3912]
	070 Call 0x1C17CF4
	071 Move X0, 0x9CC000
	072 Move X0, [X0+3832]
	073 Call 0x1C17CF4
	074 Move X0, 0x9CC000
	075 Move X0, [X0+3848]
	076 Call 0x1C17CF4
	077 Move X0, 0x9CC000
	078 Move X0, [X0+3920]
	079 Call 0x1C17CF4
	080 Move X0, 0x9CC000
	081 Move X0, [X0+3840]
	082 Call 0x1C17CF4
	083 Move X0, 0x9CC000
	084 Move X0, [X0+3928]
	085 Call 0x1C17CF4
	086 Move X0, 0x9CC000
	087 Move X0, [X0+3936]
	088 Call 0x1C17CF4
	089 Move X0, 0x9CC000
	090 Move X0, [X0+3944]
	091 Call 0x1C17CF4
	092 Move W8, 1
	093 Move [X29+3928], W8
	094 Move X1, [X21]
	095 Move X2, [X20]
	096 Move X0, X19
	097 Call 0x21FD754, X0, X1
	098 Move [X19+368], X0
	099 Move X1, [X28]
	100 Move X2, [X20]
	101 Move X0, X19
	102 Call 0x21FD754, X0, X1
	103 Move [X19+376], X0
	104 Move X1, [X27]
	105 Move X2, [X20]
	106 Move X0, X19
	107 Call 0x21FD754, X0, X1
	108 Move [X19+384], X0
	109 Move X1, [X26]
	110 Move X2, [X20]
	111 Move X0, X19
	112 Call 0x21FD754, X0, X1
	113 Move [X19+392], X0
	114 Move X1, [X25]
	115 Move X2, [X20]
	116 Move X0, X19
	117 Call 0x21FD754, X0, X1
	118 Move [X19+416], X0
	119 Move X1, [X24]
	120 Move X2, [X20]
	121 Move X0, X19
	122 Call 0x21FD754, X0, X1
	123 Move [X19+424], X0
	124 Move X1, [X22]
	125 Move X2, [X20]
	126 Move X0, X19
	127 Call 0x21FD754, X0, X1
	128 Move [X19+400], X0
	129 Move X8, 0x9CC000
	130 Move X8, [X8+3912]
	131 Move X2, [X20]
	132 Move X0, X19
	133 Move X1, [X8]
	134 Call 0x21FD754, X0, X1
	135 Move [X19+408], X0
	136 Move X8, 0x9CC000
	137 Move X8, [X8+3896]
	138 Move X0, X19
	139 Move X1, [X8]
	140 Move X8, 0x9CC000
	141 Move X8, [X8+3880]
	142 Move X2, [X8]
	143 Call 0x21FD754, X0, X1
	144 Move [X19+432], X0
	145 Move X8, 0x9CC000
	146 Move X8, [X8+3944]
	147 Move X2, [X20]
	148 Move X0, X19
	149 Move X1, [X8]
	150 Call 0x21FD754, X0, X1
	151 Move [X19+440], X0
	152 Move X8, 0x9CC000
	153 Move X8, [X8+3920]
	154 Move X2, [X20]
	155 Move X0, X19
	156 Move X1, [X8]
	157 Call 0x21FD754, X0, X1
	158 Move [X19+448], X0
	159 Move X8, 0x9CC000
	160 Move X8, [X8+3928]
	161 Move X2, [X23]
	162 Move X0, X19
	163 Move X1, [X8]
	164 Call 0x21FD754, X0, X1
	165 Move [X19+456], X0
	166 Move X8, 0x9CC000
	167 Move X8, [X8+3888]
	168 Move X2, [X23]
	169 Move X0, X19
	170 Move X1, [X8]
	171 Call 0x21FD754, X0, X1
	172 Move [X19+464], X0
	173 Move X8, 0x9CC000
	174 Move X8, [X8+3936]
	175 Move X2, [X20]
	176 Move X0, X19
	177 Move X1, [X8]
	178 Call 0x21FD754, X0, X1
	179 Move [X19+472], X0
	180 Move X8, 0x9CC000
	181 Move X8, [X8+3904]
	182 Move X2, [X20]
	183 Move X0, X19
	184 Move X1, [X8]
	185 Call 0x21FD754, X0, X1
	186 Move [X19+480], X0
	187 Move X20, [X31+80]
	188 Move X19, [X31+88]
	189 Move X22, [X31+64]
	190 Move X21, [X31+72]
	191 Move X24, [X31+48]
	192 Move X23, [X31+56]
	193 Move X26, [X31+32]
	194 Move X25, [X31+40]
	195 Move X28, [X31+16]
	196 Move X27, [X31+24]
	197 Move X29, [X31+96]
	198 Move X30, [X31+104]
	199 Return 

Method: System.Void MakeCurrent()

Disassembly:
	0x0377B628 LDR W2, [X21 + 0x1C]
	0x0377B62C UBFM W8, W23, 0x1D, 0x1C
	0x0377B630 CMP W2, W23, LSL
	0x0377B634 CSET W10, EQ
	0x0377B638 B 0x377B658
	0x0377B63C BL 0x1C16DFC
	0x0377B640 LDR W2, [X21 + 0x1C]
	0x0377B644 LDR X9, [X21 + 0x160]
	0x0377B648 CMP W2, W23, LSL
	0x0377B64C CSET W10, EQ
	0x0377B650 CBZ X9, 0x377B70C
	0x0377B654 UBFM W8, W23, 0x1D, 0x1C
	0x0377B658 LDR W11, [X9 + 0x18]
	0x0377B65C CBZ W11, 0x377B710
	0x0377B660 LDRH W11, [X9 + 0x22]
	0x0377B664 TBZ X10, 0x0, 0x377B6AC
	0x0377B668 MOVZ W8, 0xFFFF
	0x0377B66C CMP W11, W8
	0x0377B670 B.EQ 0x377B6F8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xC66000
	005 Move W8, [X20+3991]
	006 Move X19, X0
	007 Compare W8, 0
	008 JumpIfNotEqual {14}
	009 Move X0, 0x9CC000
	010 Move X0, [X0+3808]
	011 Call 0x1C17CF4
	012 Move W8, 1
	013 Move [X20+3991], W8
	014 Move X8, 0x9CC000
	015 Move X8, [X8+3808]
	016 Move X8, [X8]
	017 Move X8, [X8+184]
	018 Move [X8], X19
	019 Move X20, [X31+16]
	020 Move X19, [X31+24]
	021 Move X30, [X31+32]
	022 Return 

Method: System.Void OnAdded()

Disassembly:
	0x0377B678 LDRH W10, [X9 + 0x24]
	0x0377B67C LDR W4, [X9 + 0x20]
	0x0377B680 MOV X0, X21
	0x0377B684 MOV X1, X20
	0x0377B688 MOV X3, X19
	0x0377B68C LDP X20, X19, [X31 + 0x30]
	0x0377B690 LDP X22, X21, [X31 + 0x20]
	0x0377B694 LDP X24, X23, [X31 + 0x10]
	0x0377B698 BFM W10, W8, 0x10, 0x7
	0x0377B69C BFM X4, X10, 0x20, 0x17
	0x0377B6A0 MOV W5, W31
	0x0377B6A4 LDR X30, [X31], #0x40
	0x0377B6A8 B 0x377B98C
	0x0377B6AC MOVZ W10, 0xFFFF
	0x0377B6B0 CMP W11, W10
	0x0377B6B4 B.EQ 0x377B6F8
	0x0377B6B8 LDRB W10, [X9 + 0x26]
	0x0377B6BC LDRH W11, [X9 + 0x24]
	0x0377B6C0 LDR W5, [X9 + 0x20]
	0x0377B6C4 UBFM W3, W22, 0x1D, 0x1C
	0x0377B6C8 MOV X0, X21
	0x0377B6CC MOV X1, X20
	0x0377B6D0 MOV X4, X19
	0x0377B6D4 LDP X20, X19, [X31 + 0x30]
	0x0377B6D8 LDP X22, X21, [X31 + 0x20]
	0x0377B6DC LDP X24, X23, [X31 + 0x10]
	0x0377B6E0 BFM W11, W10, 0x10, 0x7
	0x0377B6E4 BFM X5, X11, 0x20, 0x17
	0x0377B6E8 MOV W2, W8
	0x0377B6EC MOV W6, W31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xC66000
	007 Move X22, 0x9CC000
	008 Move X20, 0x9CC000
	009 Move W8, [X21+3929]
	010 Move X22, [X22+3808]
	011 Move X20, [X20+3952]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x9CC000
	018 Move X0, [X0+3952]
	019 Call 0x1C17CF4
	020 Move X0, 0x9CC000
	021 Move X0, [X0+3808]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+3929], W8
	025 Move X8, [X22]
	026 Move X4, [X20]
	027 Move X2, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X8, [X8+184]
	031 Move X22, [X31+16]
	032 Move X21, [X31+24]
	033 Move W3, 10
	034 Add X0, X8, 16
	035 Add X1, X8, 8
	036 Move X30, [X31+48]
	037 Call ArrayHelpers.AppendWithCapacity, X0, X1, X2, X3
	038 Return 

Method: System.Void OnRemoved()

Disassembly:
	0x0377B6F0 LDR X30, [X31], #0x40
	0x0377B6F4 B 0x377B714
	0x0377B6F8 LDP X20, X19, [X31 + 0x30]
	0x0377B6FC LDP X22, X21, [X31 + 0x20]
	0x0377B700 LDP X24, X23, [X31 + 0x10]
	0x0377B704 LDR X30, [X31], #0x40
	0x0377B708 RET
	0x0377B70C BL 0x1C16F20
	0x0377B710 BL 0x1C16F28
	0x0377B714 SUB X31, X31, 0x80
	0x0377B718 STP X29, X30, [X31 + 0x20]
	0x0377B71C STP X28, X27, [X31 + 0x30]
	0x0377B720 STP X26, X25, [X31 + 0x40]
	0x0377B724 STP X24, X23, [X31 + 0x50]
	0x0377B728 STP X22, X21, [X31 + 0x60]
	0x0377B72C STP X20, X19, [X31 + 0x70]
	0x0377B730 STR X4, [X31 + 0x18]
	0x0377B734 STR X1, [X31 + 0x8]
	0x0377B738 STR W2, [X31 + 0x14]
	0x0377B73C ADRP X25, 0x978000
	0x0377B740 LDR X25, [X25 + 0x5A8]
	0x0377B744 MOV W28, W6
	0x0377B748 MOV X26, X5
	0x0377B74C MOV W20, W3
	0x0377B750 MOV X23, X0
	0x0377B754 ADD W24, W3, W2
	0x0377B758 ADRP X22, 0xC65000
	0x0377B75C MOVZ W21, 0x101
	0x0377B760 LDRB W8, [X22 + 0xF6E]
	0x0377B764 TBNZ X8, 0x0, 0x377B778
	0x0377B768 MOV X0, X25
	0x0377B76C BL 0x1C16CF4
	0x0377B770 MOVZ W8, 0x1
	0x0377B774 STRB W8, [X22 + 0xF6E]
	0x0377B778 LDR X8, [X23 + 0x160]
	0x0377B77C CBZ X8, 0x377B988
	0x0377B780 LDR W10, [X8 + 0x18]
	0x0377B784 SBFM X9, X26, 0x10, 0x1F
	0x0377B788 CMP W9, W10
	0x0377B78C B.CS 0x377B984
	0x0377B790 LDR X0, [X25]
	0x0377B794 UBFM X10, X9, 0x3D, 0x3C
	0x0377B798 SUB X9, X10, X9
	0x0377B79C ADD X8, X8, X9
	0x0377B7A0 LDRB W27, [X8 + 0x26]
	0x0377B7A4 LDRH W19, [X8 + 0x24]
	0x0377B7A8 LDR W9, [X0 + 0xE0]
	0x0377B7AC LDR W29, [X8 + 0x20]
	0x0377B7B0 CBNZ W9, 0x377B7B8
	0x0377B7B4 BL 0x1C16DFC
	0x0377B7B8 BFM W19, W27, 0x10, 0x7
	0x0377B7BC MOV W0, W20
	0x0377B7C0 MOV W1, W28
	0x0377B7C4 MOV X2, X31
	0x0377B7C8 BFM X29, X19, 0x20, 0x17
	0x0377B7CC BL 0x337EE48
	0x0377B7D0 AND W27, W29, 0xFFFF
	0x0377B7D4 MOV W19, W0
	0x0377B7D8 MOV W0, W24
	0x0377B7DC MOV W1, W27
	0x0377B7E0 MOV X2, X31
	0x0377B7E4 BL 0x337EEEC
	0x0377B7E8 CMP W19, W0
	0x0377B7EC B.HI 0x377B87C
	0x0377B7F0 UBFM X9, X29, 0x30, 0x3F
	0x0377B7F4 CBZ W9, 0x377B850
	0x0377B7F8 LDR X10, [X23 + 0x168]
	0x0377B7FC CBZ X10, 0x377B988
	0x0377B800 LDR W8, [X10 + 0x18]
	0x0377B804 UBFM X11, X29, 0x20, 0x3F

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xC66000
	007 Move W8, [X20+3930]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {24}
	013 Move X0, 0x9CC000
	014 Move X0, [X0+3960]
	015 Call 0x1C17CF4
	016 Move X0, 0x9CC000
	017 Move X0, [X0+3968]
	018 Call 0x1C17CF4
	019 Move X0, 0x9CC000
	020 Move X0, [X0+3808]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X20+3930], W8
	024 Move X21, 0xC66000
	025 Move X20, 0x9CC000
	026 Move W8, [X21+3992]
	027 Move X20, [X20+3808]
	028 Compare W8, 0
	029 JumpIfNotEqual {35}
	030 Move X0, 0x9CC000
	031 Move X0, [X0+3808]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X21+3992], W8
	035 Move X8, [X20]
	036 Move X21, 0x9CC000
	037 Move X8, [X8+184]
	038 Move X9, [X8]
	039 Move X21, [X21+3968]
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move X22, 0xC66000
	042 Move W9, [X22+3991]
	043 Compare W9, 0
	044 JumpIfNotEqual {51}
	045 Move X0, X20
	046 Call 0x1C17CF4
	047 Move X8, [X20]
	048 Move W9, 1
	049 Move [X22+3991], W9
	050 Move X8, [X8+184]
	051 Move [X8], X31
	052 Move X8, [X20]
	053 Move X8, [X8+184]
	054 Move X0, [X8+16]
	055 Move W2, [X8+8]
	056 Move X3, [X21]
	057 Move X1, X19
	058 Call 0x217AB8C, X0, X1, X2
	059 Add W31, W0, 1
	060 Move X8, [X20]
	061 Move X9, 0x9CC000
	062 Move W2, W0
	063 Move X8, [X8+184]
	064 Move X9, [X9+3960]
	065 Move X20, [X31+32]
	066 Move X19, [X31+40]
	067 Move X22, [X31+16]
	068 Move X21, [X31+24]
	069 Move X0, [X8+16]
	070 Move X3, [X9]
	071 Add X1, X8, 8
	072 Move X30, [X31+48]
	073 Call ArrayHelpers.EraseAtWithCapacity, X0, X1, X2
	074 Return 
	075 Move X20, [X31+32]
	076 Move X19, [X31+40]
	077 Move X22, [X31+16]
	078 Move X21, [X31+24]
	079 Move X30, [X31+48]
	080 Return 

Method: System.Void PauseHaptics()

Disassembly:
	0x0377B808 ADD W9, W9, W11, UXTH
	0x0377B80C ADD X10, X10, 0x20
	0x0377B810 UBFM X11, X29, 0x20, 0x2F
	0x0377B814 CMP W11, W8

ISIL:
	001 Move X1, X0
	002 Add X0, X0, 488
	003 Move X2, X31
	004 Call DualMotorRumble.PauseHaptics, X0, X1
	005 Return 

Method: System.Void ResumeHaptics()

Disassembly:
	0x0377B818 B.CS 0x377B984
	0x0377B81C LDR X12, [X23 + 0x150]
	0x0377B820 CBZ X12, 0x377B988
	0x0377B824 LDRH W13, [X10, X11, LSL #1]

ISIL:
	001 Move X1, X0
	002 Add X0, X0, 488
	003 Move X2, X31
	004 Call DualMotorRumble.ResumeHaptics, X0, X1
	005 Return 

Method: System.Void ResetHaptics()

Disassembly:
	0x0377B828 LDR W14, [X12 + 0x18]
	0x0377B82C CMP W13, W14
	0x0377B830 B.CS 0x377B984
	0x0377B834 ADD X12, X12, X13, 0x3, LSL

ISIL:
	001 Move X1, X0
	002 Add X0, X0, 488
	003 Move X2, X31
	004 Call DualMotorRumble.ResetHaptics, X0, X1
	005 Return 

Method: System.Void SetMotorSpeeds(System.Single lowFrequency, System.Single highFrequency)

Disassembly:
	0x0377B838 LDR X12, [X12 + 0x20]
	0x0377B83C CBZ X12, 0x377B988
	0x0377B840 ADD X11, X11, 0x1
	0x0377B844 CMP W11, W9

ISIL:
	001 Move X1, X0
	002 Add X0, X0, 488
	003 Move X2, X31
	004 Call DualMotorRumble.SetMotorSpeeds, X0, X1, V0, V1
	005 Return 

Method: System.Void .ctor()

Disassembly:
	0x0377B848 STRH W21, [X12 + 0xA4]
	0x0377B84C B.CC 0x377B814
	0x0377B850 ORN W8, W31, W29, 0x0
	0x0377B854 ANDS X31, X8, 0xFFFFFFFF
	0x0377B858 B.EQ 0x377B87C
	0x0377B85C LDR X1, [X31 + 0x8]
	0x0377B860 LDR W2, [X31 + 0x14]
	0x0377B864 LDR X4, [X31 + 0x18]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call InputControl..ctor, X0
	005 Move TEMP, 0
	006 Not TEMP
	007 Move W8, TEMP
	008 Move [X19+224], X31
	009 Move [X19+232], W8
	010 Move X30, [X31+16]
	011 Move X19, [X31+24]
	012 Return 

