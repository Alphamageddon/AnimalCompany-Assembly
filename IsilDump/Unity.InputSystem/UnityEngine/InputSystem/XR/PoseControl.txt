Type: UnityEngine.InputSystem.XR.PoseControl

Method: UnityEngine.InputSystem.Controls.ButtonControl get_isTracked()

Disassembly:
	0x037DBB84 ADRP X8, 0x96D000
	0x037DBB88 LDR X8, [X8 + 0xD80]

ISIL:
	001 Move X0, [X0+376]
	002 Return X0

Method: System.Void set_isTracked(UnityEngine.InputSystem.Controls.ButtonControl value)

Disassembly:
	0x037DBB8C MOV X1, X19
	0x037DBB90 MOV X3, X31

ISIL:
	001 Move [X0+376], X1
	002 Return 

Method: UnityEngine.InputSystem.Controls.IntegerControl get_trackingState()

Disassembly:
	0x037DBB94 MOV X21, X0
	0x037DBB98 LDR X2, [X8]

ISIL:
	001 Move X0, [X0+384]
	002 Return X0

Method: System.Void set_trackingState(UnityEngine.InputSystem.Controls.IntegerControl value)

Disassembly:
	0x037DBB9C BL 0x2A719B8
	0x037DBBA0 MOV X0, X20

ISIL:
	001 Move [X0+384], X1
	002 Return 

Method: UnityEngine.InputSystem.Controls.Vector3Control get_position()

Disassembly:
	0x037DBBA4 MOV X1, X21
	0x037DBBA8 MOV X2, X31

ISIL:
	001 Move X0, [X0+392]
	002 Return X0

Method: System.Void set_position(UnityEngine.InputSystem.Controls.Vector3Control value)

Disassembly:
	0x037DBBAC BL 0x37349AC
	0x037DBBB0 STRB W31, [X19 + 0x99]

ISIL:
	001 Move [X0+392], X1
	002 Return 

Method: UnityEngine.InputSystem.Controls.QuaternionControl get_rotation()

Disassembly:
	0x037DBBB4 LDP X20, X19, [X31 + 0x20]
	0x037DBBB8 LDP X22, X21, [X31 + 0x10]

ISIL:
	001 Move X0, [X0+400]
	002 Return X0

Method: System.Void set_rotation(UnityEngine.InputSystem.Controls.QuaternionControl value)

Disassembly:
	0x037DBBBC LDR X30, [X31], #0x30
	0x037DBBC0 RET

ISIL:
	001 Move [X0+400], X1
	002 Return 

Method: UnityEngine.InputSystem.Controls.Vector3Control get_velocity()

Disassembly:
	0x037DBBC4 STP X30, X23, [X31 - 0x30]!
	0x037DBBC8 STP X22, X21, [X31 + 0x10]

ISIL:
	001 Move X0, [X0+408]
	002 Return X0

Method: System.Void set_velocity(UnityEngine.InputSystem.Controls.Vector3Control value)

Disassembly:
	0x037DBBCC STP X20, X19, [X31 + 0x20]
	0x037DBBD0 ADRP X20, 0xC06000

ISIL:
	001 Move [X0+408], X1
	002 Return 

Method: UnityEngine.InputSystem.Controls.Vector3Control get_angularVelocity()

Disassembly:
	0x037DBBD4 LDRB W8, [X20 + 0x2AF]
	0x037DBBD8 MOV X19, X0

ISIL:
	001 Move X0, [X0+416]
	002 Return X0

Method: System.Void set_angularVelocity(UnityEngine.InputSystem.Controls.Vector3Control value)

Disassembly:
	0x037DBBDC TBNZ X8, 0x0, 0x37DBC24
	0x037DBBE0 ADRP X0, 0x91C000

ISIL:
	001 Move [X0+416], X1
	002 Return 

Method: System.Void .ctor()

Disassembly:
	0x037DBBE4 LDR X0, [X0 + 0x3D8]
	0x037DBBE8 BL 0x1C16CF4
	0x037DBBEC ADRP X0, 0x918000
	0x037DBBF0 LDR X0, [X0 + 0x598]
	0x037DBBF4 BL 0x1C16CF4
	0x037DBBF8 ADRP X0, 0x96D000
	0x037DBBFC LDR X0, [X0 + 0xD80]
	0x037DBC00 BL 0x1C16CF4
	0x037DBC04 ADRP X0, 0x96D000
	0x037DBC08 LDR X0, [X0 + 0xD88]
	0x037DBC0C BL 0x1C16CF4
	0x037DBC10 ADRP X0, 0x96D000
	0x037DBC14 LDR X0, [X0 + 0xD90]
	0x037DBC18 BL 0x1C16CF4
	0x037DBC1C MOVZ W8, 0x1
	0x037DBC20 STRB W8, [X20 + 0x2AF]
	0x037DBC24 LDRB W8, [X19 + 0x99]
	0x037DBC28 CBZ W8, 0x37DBC3C
	0x037DBC2C LDP X20, X19, [X31 + 0x20]
	0x037DBC30 LDP X22, X21, [X31 + 0x10]
	0x037DBC34 LDP X30, X23, [X31], #0x30
	0x037DBC38 RET
	0x037DBC3C ADD X21, X19, 0x30
	0x037DBC40 MOV X0, X21
	0x037DBC44 MOV X1, X31
	0x037DBC48 BL 0x3745120
	0x037DBC4C CBZ X0, 0x37DBC2C
	0x037DBC50 ADRP X23, 0x91C000
	0x037DBC54 LDR X23, [X23 + 0x3D8]
	0x037DBC58 MOV X20, X0
	0x037DBC5C LDR X0, [X23]
	0x037DBC60 BL 0x1C16F10
	0x037DBC64 ADRP X8, 0x96D000
	0x037DBC68 LDR X8, [X8 + 0xD88]
	0x037DBC6C MOV X1, X19
	0x037DBC70 MOV X3, X31
	0x037DBC74 MOV X22, X0
	0x037DBC78 LDR X2, [X8]
	0x037DBC7C BL 0x2A719B8
	0x037DBC80 MOV X0, X20
	0x037DBC84 MOV X1, X22
	0x037DBC88 MOV X2, X31
	0x037DBC8C BL 0x3734A04
	0x037DBC90 LDR X0, [X23]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xC07000
	007 Move X21, 0x96E000
	008 Move X20, 0x96E000
	009 Move W8, [X22+674]
	010 Move X21, [X21+3312]
	011 Move X20, [X20+3304]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {28}
	017 Move X0, 0x96E000
	018 Move X0, [X0+3312]
	019 Call 0x1C17CF4
	020 Move X0, 0x941000
	021 Move X0, [X0+3352]
	022 Call 0x1C17CF4
	023 Move X0, 0x96E000
	024 Move X0, [X0+3304]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X22+674], W8
	028 Move X1, [X21]
	029 Move X21, 0x941000
	030 Move X21, [X21+3352]
	031 Move X0, X19
	032 Call InputControl`1<PoseState>..ctor, X0
	033 Move X0, [X20]
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {39}
	037 Call 0x1C17DFC
	038 Move X0, [X20]
	039 Move X8, [X21]
	040 Move X9, [X0+184]
	041 Move W10, [X8+224]
	042 Move W20, [X9]
	043 Compare W10, 0
	044 JumpIfNotEqual {47}
	045 Move X0, X8
	046 Call 0x1C17DFC
	047 Move [X19+16], W20
	048 Move X20, [X31+32]
	049 Move X19, [X31+40]
	050 Move X22, [X31+16]
	051 Move X21, [X31+24]
	052 Move X30, [X31+48]
	053 Return 

Method: System.Void FinishSetup()

Disassembly:
	0x037DBC94 BL 0x1C16F10
	0x037DBC98 ADRP X8, 0x96D000
	0x037DBC9C LDR X8, [X8 + 0xD80]
	0x037DBCA0 MOV X1, X19
	0x037DBCA4 MOV X3, X31
	0x037DBCA8 MOV X22, X0
	0x037DBCAC LDR X2, [X8]
	0x037DBCB0 BL 0x2A719B8
	0x037DBCB4 MOV X0, X20
	0x037DBCB8 MOV X1, X22
	0x037DBCBC MOV X2, X31
	0x037DBCC0 BL 0x3734954
	0x037DBCC4 MOVZ W8, 0x1
	0x037DBCC8 MOV X0, X21
	0x037DBCCC MOV X1, X31
	0x037DBCD0 STRB W8, [X19 + 0x99]
	0x037DBCD4 BL 0x3745260
	0x037DBCD8 ADRP X8, 0x918000
	0x037DBCDC LDR X8, [X8 + 0x598]
	0x037DBCE0 MOV X21, X0
	0x037DBCE4 LDR X8, [X8]
	0x037DBCE8 LDR W9, [X8 + 0xE0]
	0x037DBCEC CBNZ W9, 0x37DBCF8
	0x037DBCF0 MOV X0, X8
	0x037DBCF4 BL 0x1C16DFC
	0x037DBCF8 MOV X0, X21
	0x037DBCFC MOV X1, X31
	0x037DBD00 MOV X2, X31
	0x037DBD04 BL 0x3C3883C
	0x037DBD08 TBZ X0, 0x0, 0x37DBC2C
	0x037DBD0C MOV X0, X19
	0x037DBD10 MOV X1, X31
	0x037DBD14 BL 0x3C32ECC
	0x037DBD18 CBZ X0, 0x37DBD60
	0x037DBD1C MOV X1, X31
	0x037DBD20 BL 0x3C389D4
	0x037DBD24 ADRP X8, 0x96D000
	0x037DBD28 LDR X8, [X8 + 0xD90]
	0x037DBD2C MOV X2, X31
	0x037DBD30 LDR X1, [X8]
	0x037DBD34 BL 0x321B938
	0x037DBD38 MOV X1, X0
	0x037DBD3C MOV X0, X20
	0x037DBD40 MOV X2, X31
	0x037DBD44 BL 0x3747D58
	0x037DBD48 MOV X0, X20
	0x037DBD4C LDP X20, X19, [X31 + 0x20]
	0x037DBD50 LDP X22, X21, [X31 + 0x10]
	0x037DBD54 MOV X1, X31
	0x037DBD58 LDP X30, X23, [X31], #0x30
	0x037DBD5C B 0x37350C8
	0x037DBD60 BL 0x1C16F20
	0x037DBD64 LDR X9, [X0 + 0x58]
	0x037DBD68 LDUR V0, [X0 + 0x48]
	0x037DBD6C STR X9, [X8 + 0x10]
	0x037DBD70 STR V0, [X8]
	0x037DBD74 RET
	0x037DBD78 STR X30, [X31 - 0x30]!
	0x037DBD7C STP X22, X21, [X31 + 0x10]
	0x037DBD80 STP X20, X19, [X31 + 0x20]
	0x037DBD84 ADRP X22, 0xC06000
	0x037DBD88 ADRP X21, 0x918000
	0x037DBD8C LDRB W8, [X22 + 0x2AD]
	0x037DBD90 LDR X21, [X21 + 0x970]
	0x037DBD94 MOV X20, X1
	0x037DBD98 MOV X19, X0
	0x037DBD9C TBNZ X8, 0x0, 0x37DBDB4
	0x037DBDA0 ADRP X0, 0x918000
	0x037DBDA4 LDR X0, [X0 + 0x970]
	0x037DBDA8 BL 0x1C16CF4
	0x037DBDAC MOVZ W8, 0x1
	0x037DBDB0 STRB W8, [X22 + 0x2AD]
	0x037DBDB4 LDR X0, [X21]
	0x037DBDB8 LDR W8, [X0 + 0xE0]
	0x037DBDBC CBNZ W8, 0x37DBDC4
	0x037DBDC0 BL 0x1C16DFC
	0x037DBDC4 MOV X0, X31
	0x037DBDC8 BL 0x3C018E4
	0x037DBDCC TBZ X0, 0x0, 0x37DBDD8
	0x037DBDD0 MOV X0, X19
	0x037DBDD4 BL 0x37DBE38
	0x037DBDD8 LDR X8, [X20 + 0x10]
	0x037DBDDC LDR V0, [X20]
	0x037DBDE0 STR X8, [X19 + 0x58]
	0x037DBDE4 STUR V0, [X19 + 0x48]
	0x037DBDE8 LDR X0, [X21]
	0x037DBDEC LDR W8, [X0 + 0xE0]
	0x037DBDF0 CBNZ W8, 0x37DBDF8
	0x037DBDF4 BL 0x1C16DFC
	0x037DBDF8 MOV X0, X31
	0x037DBDFC BL 0x3C018E4
	0x037DBE00 TBZ X0, 0x0, 0x37DBE28
	0x037DBE04 MOV X0, X19
	0x037DBE08 MOV X1, X31
	0x037DBE0C BL 0x3C32454
	0x037DBE10 TBZ X0, 0x0, 0x37DBE28
	0x037DBE14 MOV X0, X19
	0x037DBE18 LDP X20, X19, [X31 + 0x20]
	0x037DBE1C LDP X22, X21, [X31 + 0x10]
	0x037DBE20 LDR X30, [X31], #0x30
	0x037DBE24 B 0x37DBF7C
	0x037DBE28 LDP X20, X19, [X31 + 0x20]
	0x037DBE2C LDP X22, X21, [X31 + 0x10]
	0x037DBE30 LDR X30, [X31], #0x30
	0x037DBE34 RET
	0x037DBE38 STR X30, [X31 - 0x30]!

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X29, 0xC07000
	014 Move X20, 0x96E000
	015 Move X22, 0x96A000
	016 Move X27, 0x96D000
	017 Move X28, 0x96C000
	018 Move X26, 0x924000
	019 Move X21, 0x96A000
	020 Move X24, 0x96E000
	021 Move X25, 0x96A000
	022 Move X23, 0x96E000
	023 Move X20, [X20]
	024 Move X22, [X22+3608]
	025 Move X27, [X27+4088]
	026 Move X28, [X28+88]
	027 Move X26, [X26+696]
	028 Move X21, [X21+3536]
	029 Move W8, [X29+675]
	030 Move X24, [X24+3320]
	031 Move X25, [X25+3800]
	032 Move X23, [X23+3328]
	033 Move X19, X0
	034 Move TEMP, X8
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfEqual {73}
	038 Move X0, 0x96E000
	039 Move X0, [X0+3336]
	040 Call 0x1C17CF4
	041 Move X0, 0x96A000
	042 Move X0, [X0+3608]
	043 Call 0x1C17CF4
	044 Move X0, 0x96C000
	045 Move X0, [X0+88]
	046 Call 0x1C17CF4
	047 Move X0, 0x96A000
	048 Move X0, [X0+3800]
	049 Call 0x1C17CF4
	050 Move X0, 0x96A000
	051 Move X0, [X0+3536]
	052 Call 0x1C17CF4
	053 Move X0, 0x96E000
	054 Move X0, [X0]
	055 Call 0x1C17CF4
	056 Move X0, 0x96E000
	057 Move X0, [X0+3328]
	058 Call 0x1C17CF4
	059 Move X0, 0x96E000
	060 Move X0, [X0+3320]
	061 Call 0x1C17CF4
	062 Move X0, 0x924000
	063 Move X0, [X0+696]
	064 Call 0x1C17CF4
	065 Move X0, 0x96D000
	066 Move X0, [X0+3848]
	067 Call 0x1C17CF4
	068 Move X0, 0x96D000
	069 Move X0, [X0+4088]
	070 Call 0x1C17CF4
	071 Move W8, 1
	072 Move [X29+675], W8
	073 Move X1, [X20]
	074 Move X2, [X22]
	075 Move X0, X19
	076 Call 0x21FD754, X0, X1
	077 Move [X19+376], X0
	078 Move X1, [X27]
	079 Move X2, [X28]
	080 Move X0, X19
	081 Call 0x21FD754, X0, X1
	082 Move [X19+384], X0
	083 Move X1, [X26]
	084 Move X2, [X21]
	085 Move X0, X19
	086 Call 0x21FD754, X0, X1
	087 Move [X19+392], X0
	088 Move X1, [X24]
	089 Move X2, [X25]
	090 Move X0, X19
	091 Call 0x21FD754, X0, X1
	092 Move [X19+400], X0
	093 Move X1, [X23]
	094 Move X2, [X21]
	095 Move X0, X19
	096 Call 0x21FD754, X0, X1
	097 Move [X19+408], X0
	098 Move X8, 0x96D000
	099 Move X8, [X8+3848]
	100 Move X2, [X21]
	101 Move X0, X19
	102 Move X1, [X8]
	103 Call 0x21FD754, X0, X1
	104 Move [X19+416], X0
	105 Move X8, 0x96E000
	106 Move X8, [X8+3336]
	107 Move X0, X19
	108 Move X20, [X31+80]
	109 Move X19, [X31+88]
	110 Move X22, [X31+64]
	111 Move X21, [X31+72]
	112 Move X1, [X8]
	113 Move X24, [X31+48]
	114 Move X23, [X31+56]
	115 Move X26, [X31+32]
	116 Move X25, [X31+40]
	117 Move X28, [X31+16]
	118 Move X27, [X31+24]
	119 Move X29, [X31+96]
	120 Move X30, [X31+104]
	121 Call InputControl`1<PoseState>.FinishSetup, X0
	122 Return 

Method: UnityEngine.InputSystem.XR.PoseState ReadUnprocessedValueFromState(System.Void* statePtr)

Disassembly:
	0x037DBE3C STP X22, X21, [X31 + 0x10]
	0x037DBE40 STP X20, X19, [X31 + 0x20]
	0x037DBE44 ADRP X20, 0xC06000
	0x037DBE48 LDRB W8, [X20 + 0x2B3]
	0x037DBE4C MOV X19, X0
	0x037DBE50 TBNZ X8, 0x0, 0x37DBE8C
	0x037DBE54 ADRP X0, 0x91C000
	0x037DBE58 LDR X0, [X0 + 0x3D8]
	0x037DBE5C BL 0x1C16CF4
	0x037DBE60 ADRP X0, 0x918000
	0x037DBE64 LDR X0, [X0 + 0x598]
	0x037DBE68 BL 0x1C16CF4
	0x037DBE6C ADRP X0, 0x96D000
	0x037DBE70 LDR X0, [X0 + 0xD98]
	0x037DBE74 BL 0x1C16CF4
	0x037DBE78 ADRP X0, 0x96D000
	0x037DBE7C LDR X0, [X0 + 0xDA0]
	0x037DBE80 BL 0x1C16CF4
	0x037DBE84 MOVZ W8, 0x1
	0x037DBE88 STRB W8, [X20 + 0x2B3]
	0x037DBE8C LDRB W8, [X19 + 0x98]
	0x037DBE90 CBZ W8, 0x37DBF6C
	0x037DBE94 ADD X21, X19, 0x48
	0x037DBE98 MOV X0, X21
	0x037DBE9C MOV X1, X31
	0x037DBEA0 BL 0x3745120
	0x037DBEA4 CBZ X0, 0x37DBF6C
	0x037DBEA8 MOV X20, X0
	0x037DBEAC MOV X0, X21
	0x037DBEB0 MOV X1, X31
	0x037DBEB4 BL 0x3745260
	0x037DBEB8 ADRP X8, 0x918000
	0x037DBEBC LDR X8, [X8 + 0x598]
	0x037DBEC0 MOV X21, X0
	0x037DBEC4 LDR X8, [X8]
	0x037DBEC8 LDR W9, [X8 + 0xE0]
	0x037DBECC CBNZ W9, 0x37DBED8
	0x037DBED0 MOV X0, X8
	0x037DBED4 BL 0x1C16DFC
	0x037DBED8 MOV X0, X21
	0x037DBEDC MOV X1, X31
	0x037DBEE0 MOV X2, X31
	0x037DBEE4 BL 0x3C3883C
	0x037DBEE8 TBZ X0, 0x0, 0x37DBEF8
	0x037DBEEC MOV X0, X20
	0x037DBEF0 MOV X1, X31
	0x037DBEF4 BL 0x3735150
	0x037DBEF8 ADRP X22, 0x91C000
	0x037DBEFC LDR X22, [X22 + 0x3D8]
	0x037DBF00 LDR X0, [X22]
	0x037DBF04 BL 0x1C16F10
	0x037DBF08 ADRP X8, 0x96D000
	0x037DBF0C LDR X8, [X8 + 0xDA0]
	0x037DBF10 MOV X1, X19
	0x037DBF14 MOV X3, X31
	0x037DBF18 MOV X21, X0
	0x037DBF1C LDR X2, [X8]
	0x037DBF20 BL 0x2A719B8
	0x037DBF24 MOV X0, X20
	0x037DBF28 MOV X1, X21
	0x037DBF2C MOV X2, X31
	0x037DBF30 BL 0x3734A5C
	0x037DBF34 LDR X0, [X22]
	0x037DBF38 BL 0x1C16F10
	0x037DBF3C ADRP X8, 0x96D000
	0x037DBF40 LDR X8, [X8 + 0xD98]
	0x037DBF44 MOV X1, X19
	0x037DBF48 MOV X3, X31
	0x037DBF4C MOV X21, X0
	0x037DBF50 LDR X2, [X8]
	0x037DBF54 BL 0x2A719B8
	0x037DBF58 MOV X0, X20
	0x037DBF5C MOV X1, X21
	0x037DBF60 MOV X2, X31
	0x037DBF64 BL 0x37349AC
	0x037DBF68 STRB W31, [X19 + 0x98]
	0x037DBF6C LDP X20, X19, [X31 + 0x20]
	0x037DBF70 LDP X22, X21, [X31 + 0x10]
	0x037DBF74 LDR X30, [X31], #0x30
	0x037DBF78 RET
	0x037DBF7C STP X30, X23, [X31 - 0x30]!
	0x037DBF80 STP X22, X21, [X31 + 0x10]
	0x037DBF84 STP X20, X19, [X31 + 0x20]
	0x037DBF88 ADRP X20, 0xC06000
	0x037DBF8C LDRB W8, [X20 + 0x2B0]
	0x037DBF90 MOV X19, X0
	0x037DBF94 TBNZ X8, 0x0, 0x37DBFDC
	0x037DBF98 ADRP X0, 0x91C000
	0x037DBF9C LDR X0, [X0 + 0x3D8]
	0x037DBFA0 BL 0x1C16CF4
	0x037DBFA4 ADRP X0, 0x918000
	0x037DBFA8 LDR X0, [X0 + 0x598]
	0x037DBFAC BL 0x1C16CF4
	0x037DBFB0 ADRP X0, 0x96D000
	0x037DBFB4 LDR X0, [X0 + 0xD98]
	0x037DBFB8 BL 0x1C16CF4
	0x037DBFBC ADRP X0, 0x96D000
	0x037DBFC0 LDR X0, [X0 + 0xDA0]
	0x037DBFC4 BL 0x1C16CF4
	0x037DBFC8 ADRP X0, 0x96D000
	0x037DBFCC LDR X0, [X0 + 0xDA8]
	0x037DBFD0 BL 0x1C16CF4
	0x037DBFD4 MOVZ W8, 0x1
	0x037DBFD8 STRB W8, [X20 + 0x2B0]
	0x037DBFDC LDRB W8, [X19 + 0x98]
	0x037DBFE0 CBZ W8, 0x37DBFF4
	0x037DBFE4 LDP X20, X19, [X31 + 0x20]
	0x037DBFE8 LDP X22, X21, [X31 + 0x10]
	0x037DBFEC LDP X30, X23, [X31], #0x30
	0x037DBFF0 RET
	0x037DBFF4 ADD X21, X19, 0x48
	0x037DBFF8 MOV X0, X21
	0x037DBFFC MOV X1, X31
	0x037DC000 BL 0x3745120
	0x037DC004 CBZ X0, 0x37DBFE4
	0x037DC008 ADRP X23, 0x91B000
	0x037DC00C LDR X23, [X23 + 0x3D8]
	0x037DC010 MOV X20, X0
	0x037DC014 LDR X0, [X23]
	0x037DC018 BL 0x1C16F10
	0x037DC01C ADRP X8, 0x96C000
	0x037DC020 LDR X8, [X8 + 0xDA0]
	0x037DC024 MOV X1, X19
	0x037DC028 MOV X3, X31
	0x037DC02C MOV X22, X0
	0x037DC030 LDR X2, [X8]
	0x037DC034 BL 0x2A719B8
	0x037DC038 MOV X0, X20
	0x037DC03C MOV X1, X22
	0x037DC040 MOV X2, X31
	0x037DC044 BL 0x3734A04
	0x037DC048 LDR X0, [X23]
	0x037DC04C BL 0x1C16F10

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+16], D15
	003 Move [X31+24], D14
	004 Move [X31+32], D13
	005 Move [X31+40], D12
	006 Move [X31+48], D11
	007 Move [X31+56], D10
	008 Move [X31+64], D9
	009 Move [X31+72], D8
	010 Move [X31+80], X30
	011 Move [X31+96], X24
	012 Move [X31+104], X23
	013 Move [X31+112], X22
	014 Move [X31+120], X21
	015 Move [X31+128], X20
	016 Move [X31+136], X19
	017 Move X22, 0xC07000
	018 Move W9, [X22+676]
	019 Move X20, X1
	020 Move X21, X0
	021 Move X19, X8
	022 Move TEMP, X9
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {43}
	026 Move X0, 0x96E000
	027 Move X0, [X0+3344]
	028 Call 0x1C17CF4
	029 Move X0, 0x96E000
	030 Move X0, [X0+3352]
	031 Call 0x1C17CF4
	032 Move X0, 0x96E000
	033 Move X0, [X0+3360]
	034 Call 0x1C17CF4
	035 Move X0, 0x96C000
	036 Move X0, [X0+40]
	037 Call 0x1C17CF4
	038 Move X0, 0x941000
	039 Move X0, [X0+3352]
	040 Call 0x1C17CF4
	041 Move W8, 1
	042 Move [X22+676], W8
	043 Move W8, [X21+216]
	044 Move W9, 0x7365
	045 NotImplemented "Instruction MOVK not yet implemented."
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move X8, 0x941000
	048 Move X8, [X8+3352]
	049 Move X0, [X8]
	050 Move W8, [X0+224]
	051 Compare W8, 0
	052 JumpIfNotEqual {54}
	053 Call 0x1C17DFC
	054 NotImplemented "Instruction LDRSW not yet implemented."
	055 Add X8, X8, X20
	056 NotImplemented "Instruction LDUR not yet implemented."
	057 Move V2, [X8+16]
	058 Move V1, [X8+32]
	059 Move V3, [X8]
	060 Move [X19+44], V0
	061 Move [X19+16], V2
	062 Move [X19+24], V1
	063 Move [X19], V3
	064 Move [X31+94], W31
	065 NotImplemented "Instruction STRH not yet implemented."
	066 Move X0, [X21+376]
	067 Compare X0, 0
	068 JumpIfEqual {163}
	069 Move X8, 0x96C000
	070 Move X8, [X8+40]
	071 Move X1, X20
	072 Move X2, [X8]
	073 Call InputControl`1<Single>.ReadUnprocessedValueFromStateWithCaching, X0, X1
	074 Move X0, [X21+384]
	075 Move S1, 0.5
	076 NotImplemented "Instruction FCMP not yet implemented."
	077 NotImplemented "Instruction CSET not yet implemented."
	078 Compare X0, 0
	079 JumpIfEqual {163}
	080 Move X8, 0x96E000
	081 Move X8, [X8+3352]
	082 Move X1, X20
	083 Move X2, [X8]
	084 Call InputControl`1<Int32>.ReadUnprocessedValueFromStateWithCaching, X0, X1
	085 Move X8, [X21+392]
	086 Compare X8, 0
	087 JumpIfEqual {163}
	088 Move X24, 0x96E000
	089 Move X24, [X24+3344]
	090 Move W22, W0
	091 Move X0, X8
	092 Move X1, X20
	093 Move X2, [X24]
	094 Call InputControl`1<Vector3>.ReadUnprocessedValueFromStateWithCaching, X0, X1
	095 Move X0, [X21+400]
	096 Compare X0, 0
	097 JumpIfEqual {163}
	098 Move [X31+12], S2
	099 Move [X31+88], S1
	100 Move X8, 0x96E000
	101 Move X8, [X8+3360]
	102 Move X1, X20
	103 Move V10, V0
	104 Move X2, [X8]
	105 Call InputControl`1<Quaternion>.ReadUnprocessedValueFromStateWithCaching, X0, X1
	106 Move X0, [X21+408]
	107 Compare X0, 0
	108 JumpIfEqual {163}
	109 Move X2, [X24]
	110 Move X1, X20
	111 Move V11, V0
	112 Move V12, V1
	113 Move V13, V2
	114 Move V14, V3
	115 Call InputControl`1<Vector3>.ReadUnprocessedValueFromStateWithCaching, X0, X1
	116 Move X0, [X21+416]
	117 Compare X0, 0
	118 JumpIfEqual {163}
	119 Move X2, [X24]
	120 Move X1, X20
	121 Move V15, V0
	122 Move V8, V1
	123 Move V9, V2
	124 Call InputControl`1<Vector3>.ReadUnprocessedValueFromStateWithCaching, X0, X1
	125 Move V3, [X31+88]
	126 Move W8, [X31+94]
	127 NotImplemented "Instruction LDRH not yet implemented."
	128 Move [X19], W23
	129 Move [X19+8], S10
	130 Move [X19+16], S3
	131 Move V3, [X31+12]
	132 Move [X19+4], W22
	133 Move [X19+24], S12
	134 Move [X19+32], S13
	135 Move [X19+32], S14
	136 Move [X19+40], S15
	137 Move [X19+16], S3
	138 Move [X19+24], S11
	139 Move [X19+40], S8
	140 Move [X19+48], S9
	141 Move [X19+48], S0
	142 Move [X19+56], S1
	143 NotImplemented "Instruction STURH not yet implemented."
	144 Move [X19+3], W8
	145 Move [X19+56], S2
	146 Move X20, [X31+128]
	147 Move X19, [X31+136]
	148 Move X22, [X31+112]
	149 Move X21, [X31+120]
	150 Move X24, [X31+96]
	151 Move X23, [X31+104]
	152 Move X30, [X31+80]
	153 Move D9, [X31+64]
	154 Move D8, [X31+72]
	155 Move D11, [X31+48]
	156 Move D10, [X31+56]
	157 Move D13, [X31+32]
	158 Move D12, [X31+40]
	159 Move D15, [X31+16]
	160 Move D14, [X31+24]
	161 Add X31, X31, 144
	162 Return X0
	163 Call 0x1C17F20

Method: System.Void WriteValueIntoState(UnityEngine.InputSystem.XR.PoseState value, System.Void* statePtr)

Disassembly:
	0x037DC050 ADRP X8, 0x96C000
	0x037DC054 LDR X8, [X8 + 0xD98]
	0x037DC058 MOV X1, X19
	0x037DC05C MOV X3, X31
	0x037DC060 MOV X22, X0
	0x037DC064 LDR X2, [X8]
	0x037DC068 BL 0x2A719B8
	0x037DC06C MOV X0, X20
	0x037DC070 MOV X1, X22
	0x037DC074 MOV X2, X31
	0x037DC078 BL 0x3734954
	0x037DC07C MOVZ W8, 0x1
	0x037DC080 MOV X0, X21
	0x037DC084 MOV X1, X31
	0x037DC088 STRB W8, [X19 + 0x98]
	0x037DC08C BL 0x3745260
	0x037DC090 ADRP X8, 0x917000
	0x037DC094 LDR X8, [X8 + 0x598]
	0x037DC098 MOV X21, X0
	0x037DC09C LDR X8, [X8]
	0x037DC0A0 LDR W9, [X8 + 0xE0]
	0x037DC0A4 CBNZ W9, 0x37DC0B0
	0x037DC0A8 MOV X0, X8
	0x037DC0AC BL 0x1C16DFC
	0x037DC0B0 MOV X0, X21
	0x037DC0B4 MOV X1, X31
	0x037DC0B8 MOV X2, X31
	0x037DC0BC BL 0x3C3883C
	0x037DC0C0 TBZ X0, 0x0, 0x37DBFE4
	0x037DC0C4 MOV X0, X19
	0x037DC0C8 MOV X1, X31
	0x037DC0CC BL 0x3C32ECC
	0x037DC0D0 CBZ X0, 0x37DC118
	0x037DC0D4 MOV X1, X31
	0x037DC0D8 BL 0x3C389D4
	0x037DC0DC ADRP X8, 0x96C000
	0x037DC0E0 LDR X8, [X8 + 0xDA8]
	0x037DC0E4 MOV X2, X31
	0x037DC0E8 LDR X1, [X8]
	0x037DC0EC BL 0x321B938
	0x037DC0F0 MOV X1, X0
	0x037DC0F4 MOV X0, X20
	0x037DC0F8 MOV X2, X31
	0x037DC0FC BL 0x3747D58
	0x037DC100 MOV X0, X20
	0x037DC104 LDP X20, X19, [X31 + 0x20]
	0x037DC108 LDP X22, X21, [X31 + 0x10]
	0x037DC10C MOV X1, X31
	0x037DC110 LDP X30, X23, [X31], #0x30
	0x037DC114 B 0x37350C8
	0x037DC118 BL 0x1C16F20
	0x037DC11C LDR X9, [X0 + 0x70]
	0x037DC120 LDR V0, [X0 + 0x6]
	0x037DC124 STR X9, [X8 + 0x10]
	0x037DC128 STR V0, [X8]
	0x037DC12C RET
	0x037DC130 STR X30, [X31 - 0x30]!
	0x037DC134 STP X22, X21, [X31 + 0x10]
	0x037DC138 STP X20, X19, [X31 + 0x20]
	0x037DC13C ADRP X22, 0xC05000
	0x037DC140 ADRP X21, 0x917000
	0x037DC144 LDRB W8, [X22 + 0x2AE]
	0x037DC148 LDR X21, [X21 + 0x970]
	0x037DC14C MOV X20, X1
	0x037DC150 MOV X19, X0
	0x037DC154 TBNZ X8, 0x0, 0x37DC16C
	0x037DC158 ADRP X0, 0x917000
	0x037DC15C LDR X0, [X0 + 0x970]
	0x037DC160 BL 0x1C16CF4
	0x037DC164 MOVZ W8, 0x1
	0x037DC168 STRB W8, [X22 + 0x2AE]
	0x037DC16C LDR X0, [X21]
	0x037DC170 LDR W8, [X0 + 0xE0]
	0x037DC174 CBNZ W8, 0x37DC17C
	0x037DC178 BL 0x1C16DFC
	0x037DC17C MOV X0, X31
	0x037DC180 BL 0x3C018E4
	0x037DC184 TBZ X0, 0x0, 0x37DC190
	0x037DC188 MOV X0, X19
	0x037DC18C BL 0x37DC1F0
	0x037DC190 LDR X8, [X20 + 0x10]
	0x037DC194 LDR V0, [X20]
	0x037DC198 STR X8, [X19 + 0x70]
	0x037DC19C STR V0, [X19 + 0x6]
	0x037DC1A0 LDR X0, [X21]
	0x037DC1A4 LDR W8, [X0 + 0xE0]
	0x037DC1A8 CBNZ W8, 0x37DC1B0
	0x037DC1AC BL 0x1C16DFC
	0x037DC1B0 MOV X0, X31
	0x037DC1B4 BL 0x3C018E4
	0x037DC1B8 TBZ X0, 0x0, 0x37DC1E0
	0x037DC1BC MOV X0, X19
	0x037DC1C0 MOV X1, X31
	0x037DC1C4 BL 0x3C32454
	0x037DC1C8 TBZ X0, 0x0, 0x37DC1E0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xC06000
	007 Move W8, [X22+677]
	008 Move X20, X2
	009 Move X19, X1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0x96D000
	016 Move X0, [X0+3368]
	017 Call 0x1C17CF4
	018 Move X0, 0x96D000
	019 Move X0, [X0+3376]
	020 Call 0x1C17CF4
	021 Move X0, 0x940000
	022 Move X0, [X0+3352]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X22+677], W8
	026 Move W8, [X21+216]
	027 Move W9, 0x7365
	028 NotImplemented "Instruction MOVK not yet implemented."
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X8, 0x940000
	031 Move X8, [X8+3352]
	032 Move X0, [X8]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 NotImplemented "Instruction LDRSW not yet implemented."
	038 Move W2, 60
	039 Move X1, X19
	040 Add X0, X8, X20
	041 Call 0x3EB2B30
	042 Move X20, [X31+32]
	043 Move X19, [X31+40]
	044 Move X22, [X31+16]
	045 Move X21, [X31+24]
	046 Move X30, [X31+48]
	047 Return 
	048 Move X8, 0x96D000
	049 Move X8, [X8+3368]
	050 Move W9, [X19]
	051 Move X0, [X21+376]
	052 Move X22, 0x96D000
	053 Move X3, [X8]
	054 Move X22, [X22+3376]
	055 And W1, W9, 1
	056 Move X2, X20
	057 Call 0x21FF5EC, X0, X1, X2
	058 Move X0, [X21+384]
	059 Move W1, [X19+4]
	060 Move X3, [X22]
	061 Move X2, X20
	062 Call InputControlExtensions.WriteValueIntoState, X0, X1, X2
	063 Move X0, [X21+392]
	064 Compare X0, 0
	065 JumpIfEqual {113}
	066 Move X8, [X0]
	067 Move S1, [X19+12]
	068 Move S2, [X19+16]
	069 Move V0, [X19+8]
	070 Move X1, X20
	071 Move X9, [X8+600]
	072 Move X2, [X8+608]
	073 NotImplemented "Instruction BLR not yet implemented."
	074 Move X0, [X21+400]
	075 Compare X0, 0
	076 JumpIfEqual {113}
	077 Move X8, [X0]
	078 Move S2, [X19+28]
	079 Move S3, [X19+32]
	080 Move S0, [X19+20]
	081 Move S1, [X19+24]
	082 Move X1, X20
	083 Move X9, [X8+600]
	084 Move X2, [X8+608]
	085 NotImplemented "Instruction BLR not yet implemented."
	086 Move X0, [X21+408]
	087 Compare X0, 0
	088 JumpIfEqual {113}
	089 Move X8, [X0]
	090 Move S1, [X19+40]
	091 Move S2, [X19+44]
	092 Move V0, [X19+36]
	093 Move X1, X20
	094 Move X9, [X8+600]
	095 Move X2, [X8+608]
	096 NotImplemented "Instruction BLR not yet implemented."
	097 Move X0, [X21+416]
	098 Compare X0, 0
	099 JumpIfEqual {113}
	100 Move X8, [X0]
	101 Move S1, [X19+52]
	102 Move S2, [X19+56]
	103 Move V0, [X19+48]
	104 Move X1, X20
	105 Move X3, [X8+600]
	106 Move X2, [X8+608]
	107 Move X20, [X31+32]
	108 Move X19, [X31+40]
	109 Move X22, [X31+16]
	110 Move X21, [X31+24]
	111 Move X30, [X31+48]
	112 CallNoReturn X3
	113 Call 0x1C17F20

Method: UnityEngine.InputSystem.Utilities.FourCC CalculateOptimizedControlDataType()

Disassembly:
	0x037DC1CC MOV X0, X19
	0x037DC1D0 LDP X20, X19, [X31 + 0x20]
	0x037DC1D4 LDP X22, X21, [X31 + 0x10]
	0x037DC1D8 LDR X30, [X31], #0x30
	0x037DC1DC B 0x37DC334
	0x037DC1E0 LDP X20, X19, [X31 + 0x20]
	0x037DC1E4 LDP X22, X21, [X31 + 0x10]
	0x037DC1E8 LDR X30, [X31], #0x30
	0x037DC1EC RET
	0x037DC1F0 STR X30, [X31 - 0x30]!
	0x037DC1F4 STP X22, X21, [X31 + 0x10]
	0x037DC1F8 STP X20, X19, [X31 + 0x20]
	0x037DC1FC ADRP X20, 0xC05000
	0x037DC200 LDRB W8, [X20 + 0x2B4]
	0x037DC204 MOV X19, X0
	0x037DC208 TBNZ X8, 0x0, 0x37DC244
	0x037DC20C ADRP X0, 0x91B000
	0x037DC210 LDR X0, [X0 + 0x3D8]
	0x037DC214 BL 0x1C16CF4
	0x037DC218 ADRP X0, 0x917000
	0x037DC21C LDR X0, [X0 + 0x598]
	0x037DC220 BL 0x1C16CF4
	0x037DC224 ADRP X0, 0x96C000
	0x037DC228 LDR X0, [X0 + 0xDB0]
	0x037DC22C BL 0x1C16CF4
	0x037DC230 ADRP X0, 0x96C000
	0x037DC234 LDR X0, [X0 + 0xDB8]
	0x037DC238 BL 0x1C16CF4
	0x037DC23C MOVZ W8, 0x1
	0x037DC240 STRB W8, [X20 + 0x2B4]
	0x037DC244 LDRB W8, [X19 + 0x9A]
	0x037DC248 CBZ W8, 0x37DC324
	0x037DC24C ADD X21, X19, 0x60
	0x037DC250 MOV X0, X21
	0x037DC254 MOV X1, X31
	0x037DC258 BL 0x3745120
	0x037DC25C CBZ X0, 0x37DC324
	0x037DC260 MOV X20, X0
	0x037DC264 MOV X0, X21
	0x037DC268 MOV X1, X31
	0x037DC26C BL 0x3745260
	0x037DC270 ADRP X8, 0x917000
	0x037DC274 LDR X8, [X8 + 0x598]
	0x037DC278 MOV X21, X0
	0x037DC27C LDR X8, [X8]
	0x037DC280 LDR W9, [X8 + 0xE0]
	0x037DC284 CBNZ W9, 0x37DC290
	0x037DC288 MOV X0, X8
	0x037DC28C BL 0x1C16DFC
	0x037DC290 MOV X0, X21
	0x037DC294 MOV X1, X31
	0x037DC298 MOV X2, X31
	0x037DC29C BL 0x3C3883C
	0x037DC2A0 TBZ X0, 0x0, 0x37DC2B0
	0x037DC2A4 MOV X0, X20
	0x037DC2A8 MOV X1, X31
	0x037DC2AC BL 0x3735150
	0x037DC2B0 ADRP X22, 0x91B000
	0x037DC2B4 LDR X22, [X22 + 0x3D8]
	0x037DC2B8 LDR X0, [X22]
	0x037DC2BC BL 0x1C16F10
	0x037DC2C0 ADRP X8, 0x96C000
	0x037DC2C4 LDR X8, [X8 + 0xDB8]
	0x037DC2C8 MOV X1, X19
	0x037DC2CC MOV X3, X31
	0x037DC2D0 MOV X21, X0
	0x037DC2D4 LDR X2, [X8]
	0x037DC2D8 BL 0x2A719B8
	0x037DC2DC MOV X0, X20
	0x037DC2E0 MOV X1, X21
	0x037DC2E4 MOV X2, X31
	0x037DC2E8 BL 0x3734A5C
	0x037DC2EC LDR X0, [X22]
	0x037DC2F0 BL 0x1C16F10
	0x037DC2F4 ADRP X8, 0x96C000
	0x037DC2F8 LDR X8, [X8 + 0xDB0]
	0x037DC2FC MOV X1, X19
	0x037DC300 MOV X3, X31
	0x037DC304 MOV X21, X0
	0x037DC308 LDR X2, [X8]
	0x037DC30C BL 0x2A719B8
	0x037DC310 MOV X0, X20
	0x037DC314 MOV X1, X21
	0x037DC318 MOV X2, X31
	0x037DC31C BL 0x37349AC
	0x037DC320 STRB W31, [X19 + 0x9A]
	0x037DC324 LDP X20, X19, [X31 + 0x20]
	0x037DC328 LDP X22, X21, [X31 + 0x10]
	0x037DC32C LDR X30, [X31], #0x30
	0x037DC330 RET
	0x037DC334 STP X30, X23, [X31 - 0x30]!
	0x037DC338 STP X22, X21, [X31 + 0x10]
	0x037DC33C STP X20, X19, [X31 + 0x20]
	0x037DC340 ADRP X20, 0xC05000
	0x037DC344 LDRB W8, [X20 + 0x2B1]
	0x037DC348 MOV X19, X0
	0x037DC34C TBNZ X8, 0x0, 0x37DC394
	0x037DC350 ADRP X0, 0x91B000
	0x037DC354 LDR X0, [X0 + 0x3D8]
	0x037DC358 BL 0x1C16CF4
	0x037DC35C ADRP X0, 0x917000
	0x037DC360 LDR X0, [X0 + 0x598]
	0x037DC364 BL 0x1C16CF4
	0x037DC368 ADRP X0, 0x96C000
	0x037DC36C LDR X0, [X0 + 0xDB0]
	0x037DC370 BL 0x1C16CF4
	0x037DC374 ADRP X0, 0x96C000
	0x037DC378 LDR X0, [X0 + 0xDB8]
	0x037DC37C BL 0x1C16CF4
	0x037DC380 ADRP X0, 0x96C000
	0x037DC384 LDR X0, [X0 + 0xDC0]
	0x037DC388 BL 0x1C16CF4
	0x037DC38C MOVZ W8, 0x1
	0x037DC390 STRB W8, [X20 + 0x2B1]
	0x037DC394 LDRB W8, [X19 + 0x9A]
	0x037DC398 CBZ W8, 0x37DC3AC
	0x037DC39C LDP X20, X19, [X31 + 0x20]
	0x037DC3A0 LDP X22, X21, [X31 + 0x10]
	0x037DC3A4 LDP X30, X23, [X31], #0x30
	0x037DC3A8 RET
	0x037DC3AC ADD X21, X19, 0x60
	0x037DC3B0 MOV X0, X21
	0x037DC3B4 MOV X1, X31
	0x037DC3B8 BL 0x3745120
	0x037DC3BC CBZ X0, 0x37DC39C
	0x037DC3C0 ADRP X23, 0x91B000
	0x037DC3C4 LDR X23, [X23 + 0x3D8]
	0x037DC3C8 MOV X20, X0
	0x037DC3CC LDR X0, [X23]
	0x037DC3D0 BL 0x1C16F10
	0x037DC3D4 ADRP X8, 0x96C000
	0x037DC3D8 LDR X8, [X8 + 0xDB8]
	0x037DC3DC MOV X1, X19
	0x037DC3E0 MOV X3, X31
	0x037DC3E4 MOV X22, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xC06000
	006 Move X20, 0x940000
	007 Move W8, [X21+678]
	008 Move X20, [X20+3352]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x940000
	015 Move X0, [X0+3352]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+678], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move W8, [X19+28]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X0, [X20]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move W8, [X19+24]
	032 Compare W8, 0
	033 JumpIfNotEqual {146}
	034 Move X8, [X19+376]
	035 Compare X8, 0
	036 JumpIfEqual {152}
	037 Move W9, [X8+216]
	038 Move W10, 0x5445
	039 NotImplemented "Instruction MOVK not yet implemented."
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move X21, [X19+384]
	042 Compare X21, 0
	043 JumpIfEqual {152}
	044 Move W9, [X21+216]
	045 Move W10, 0x5420
	046 NotImplemented "Instruction MOVK not yet implemented."
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move X9, [X19+392]
	049 Compare X9, 0
	050 JumpIfEqual {152}
	051 Move W10, [X9+216]
	052 Move W9, 0x4333
	053 NotImplemented "Instruction MOVK not yet implemented."
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move X10, [X19+400]
	056 Compare X10, 0
	057 JumpIfEqual {152}
	058 Move W10, [X10+216]
	059 Move W11, 0x4154
	060 NotImplemented "Instruction MOVK not yet implemented."
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move X10, [X19+408]
	063 Compare X10, 0
	064 JumpIfEqual {152}
	065 Move W10, [X10+216]
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move X10, [X19+416]
	068 Compare X10, 0
	069 JumpIfEqual {152}
	070 Move W10, [X10+216]
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move X0, [X20]
	073 Move W9, [X0+224]
	074 Compare W9, 0
	075 JumpIfNotEqual {80}
	076 Call 0x1C17DFC
	077 Move X8, [X19+376]
	078 Compare X8, 0
	079 JumpIfEqual {152}
	080 Move W9, [X8+20]
	081 Move W10, [X21+20]
	082 Add W9, W9, 4
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Move X21, [X19+392]
	085 Compare X21, 0
	086 JumpIfEqual {152}
	087 Move X0, [X20]
	088 Move W9, [X0+224]
	089 Compare W9, 0
	090 JumpIfNotEqual {95}
	091 Call 0x1C17DFC
	092 Move X8, [X19+376]
	093 Compare X8, 0
	094 JumpIfEqual {152}
	095 Move W9, [X8+20]
	096 Move W10, [X21+20]
	097 Add W9, W9, 8
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Move X21, [X19+400]
	100 Compare X21, 0
	101 JumpIfEqual {152}
	102 Move X0, [X20]
	103 Move W9, [X0+224]
	104 Compare W9, 0
	105 JumpIfNotEqual {110}
	106 Call 0x1C17DFC
	107 Move X8, [X19+376]
	108 Compare X8, 0
	109 JumpIfEqual {152}
	110 Move W9, [X8+20]
	111 Move W10, [X21+20]
	112 Add W9, W9, 20
	113 NotImplemented "Instruction CMP not yet implemented."
	114 Move X21, [X19+408]
	115 Compare X21, 0
	116 JumpIfEqual {152}
	117 Move X0, [X20]
	118 Move W9, [X0+224]
	119 Compare W9, 0
	120 JumpIfNotEqual {125}
	121 Call 0x1C17DFC
	122 Move X8, [X19+376]
	123 Compare X8, 0
	124 JumpIfEqual {152}
	125 Move W9, [X8+20]
	126 Move W10, [X21+20]
	127 Add W9, W9, 36
	128 NotImplemented "Instruction CMP not yet implemented."
	129 Move X21, [X19+416]
	130 Compare X21, 0
	131 JumpIfEqual {152}
	132 Move X0, [X20]
	133 Move W9, [X0+224]
	134 Compare W9, 0
	135 JumpIfNotEqual {140}
	136 Call 0x1C17DFC
	137 Move X8, [X19+376]
	138 Compare X8, 0
	139 JumpIfEqual {152}
	140 Move W8, [X8+20]
	141 Move W9, [X21+20]
	142 Add W8, W8, 48
	143 NotImplemented "Instruction CMP not yet implemented."
	144 Move W0, 0x7365
	145 NotImplemented "Instruction MOVK not yet implemented."
	146 Move X0, X31
	147 Move X20, [X31+16]
	148 Move X19, [X31+24]
	149 Move X30, [X31+32]
	150 Move X21, [X31+40]
	151 Return X0
	152 Call 0x1C17F20

