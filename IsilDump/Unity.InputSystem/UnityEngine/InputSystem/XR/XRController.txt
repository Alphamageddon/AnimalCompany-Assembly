Type: UnityEngine.InputSystem.XR.XRController

Method: UnityEngine.InputSystem.XR.XRController get_leftHand()

Disassembly:
	0x037DC5C0 LDP X20, X19, [X31 + 0x10]
	0x037DC5C4 LDR X30, [X31], #0x20
	0x037DC5C8 RET
	0x037DC5CC SUB X31, X31, 0x30
	0x037DC5D0 STP X30, X21, [X31 + 0x10]
	0x037DC5D4 STP X20, X19, [X31 + 0x20]
	0x037DC5D8 ADRP X20, 0xC05000
	0x037DC5DC STP X1, X2, [X31]
	0x037DC5E0 ADRP X21, 0x96C000
	0x037DC5E4 LDRB W8, [X20 + 0x2B6]
	0x037DC5E8 LDR X21, [X21 + 0xDD0]
	0x037DC5EC MOV X19, X0
	0x037DC5F0 TBNZ X8, 0x0, 0x37DC608
	0x037DC5F4 ADRP X0, 0x96C000
	0x037DC5F8 LDR X0, [X0 + 0xDD0]
	0x037DC5FC BL 0x1C16CF4
	0x037DC600 MOVZ W8, 0x1
	0x037DC604 STRB W8, [X20 + 0x2B6]
	0x037DC608 LDR X1, [X21]
	0x037DC60C ADD X0, X31, 0x0
	0x037DC610 BL 0x22B4B44
	0x037DC614 STP S0, S1, [X19 + 0x84]
	0x037DC618 STP S2, S3, [X19 + 0x8C]
	0x037DC61C LDP X20, X19, [X31 + 0x20]
	0x037DC620 LDP X30, X21, [X31 + 0x10]
	0x037DC624 ADD X31, X31, 0x30
	0x037DC628 RET
	0x037DC62C STR X30, [X31 - 0x20]!
	0x037DC630 STP X20, X19, [X31 + 0x10]
	0x037DC634 ADRP X20, 0xBFC000
	0x037DC638 LDRB W8, [X20 + 0x793]
	0x037DC63C MOV X19, X0
	0x037DC640 CBNZ W8, 0x37DC658
	0x037DC644 ADRP X0, 0x918000
	0x037DC648 LDR X0, [X0 + 0x5A8]
	0x037DC64C BL 0x1C16CF4
	0x037DC650 MOVZ W8, 0x1
	0x037DC654 STRB W8, [X20 + 0x793]
	0x037DC658 ADRP X8, 0x918000
	0x037DC65C LDR X8, [X8 + 0x5A8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xC06000
	006 Move X19, 0x96B000
	007 Move W8, [X20+680]
	008 Move X19, [X19+2664]
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {24}
	013 Move X0, 0x96B000
	014 Move X0, [X0+2664]
	015 Call 0x1C17CF4
	016 Move X0, 0x96D000
	017 Move X0, [X0+3432]
	018 Call 0x1C17CF4
	019 Move X0, 0x940000
	020 Move X0, [X0+624]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X20+680], W8
	024 Move X0, [X19]
	025 Move X20, 0x940000
	026 Move W8, [X0+224]
	027 Move X20, [X20+624]
	028 Compare W8, 0
	029 JumpIfNotEqual {32}
	030 Call 0x1C17DFC
	031 Move X0, [X19]
	032 Move X8, [X20]
	033 Move X9, [X0+184]
	034 Move X21, 0x96D000
	035 Move W10, [X8+224]
	036 Move X20, [X9+384]
	037 Move X19, [X9+392]
	038 Move X21, [X21+3432]
	039 Compare W10, 0
	040 JumpIfNotEqual {43}
	041 Move X0, X8
	042 Call 0x1C17DFC
	043 Move X2, [X21]
	044 Move X0, X20
	045 Move X1, X19
	046 Move X20, [X31+16]
	047 Move X19, [X31+24]
	048 Move X30, [X31+32]
	049 Move X21, [X31+40]
	050 Call 0x220C6E4, X0
	051 Return X0

Method: UnityEngine.InputSystem.XR.XRController get_rightHand()

Disassembly:
	0x037DC660 LDR X8, [X8]
	0x037DC664 LDR X8, [X8 + 0xB8]
	0x037DC668 LDR V0, [X8]
	0x037DC66C STUR V0, [X19 + 0x84]
	0x037DC670 LDP X20, X19, [X31 + 0x10]
	0x037DC674 LDR X30, [X31], #0x20
	0x037DC678 RET
	0x037DC67C SUB X31, X31, 0x30
	0x037DC680 STP X30, X21, [X31 + 0x10]
	0x037DC684 STP X20, X19, [X31 + 0x20]
	0x037DC688 ADRP X20, 0xC05000
	0x037DC68C STP X1, X2, [X31]
	0x037DC690 ADRP X21, 0x96C000
	0x037DC694 LDRB W8, [X20 + 0x2B7]
	0x037DC698 LDR X21, [X21 + 0xDD8]
	0x037DC69C MOV X19, X0
	0x037DC6A0 TBNZ X8, 0x0, 0x37DC6B8
	0x037DC6A4 ADRP X0, 0x96C000
	0x037DC6A8 LDR X0, [X0 + 0xDD8]
	0x037DC6AC BL 0x1C16CF4
	0x037DC6B0 MOVZ W8, 0x1
	0x037DC6B4 STRB W8, [X20 + 0x2B7]
	0x037DC6B8 LDR X1, [X21]
	0x037DC6BC ADD X0, X31, 0x0
	0x037DC6C0 BL 0x22B4A6C
	0x037DC6C4 STR W0, [X19 + 0x94]
	0x037DC6C8 LDP X20, X19, [X31 + 0x20]
	0x037DC6CC LDP X30, X21, [X31 + 0x10]
	0x037DC6D0 ADD X31, X31, 0x30
	0x037DC6D4 RET
	0x037DC6D8 STR W31, [X0 + 0x94]
	0x037DC6DC RET
	0x037DC6E0 SUB X31, X31, 0xA0
	0x037DC6E4 STP X30, X27, [X31 + 0x50]
	0x037DC6E8 STP X26, X25, [X31 + 0x60]
	0x037DC6EC STP X24, X23, [X31 + 0x70]
	0x037DC6F0 STP X22, X21, [X31 + 0x80]
	0x037DC6F4 STP X20, X19, [X31 + 0x90]
	0x037DC6F8 ADRP X27, 0xC05000
	0x037DC6FC ADRP X23, 0x91B000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xC06000
	006 Move X19, 0x96B000
	007 Move W8, [X20+681]
	008 Move X19, [X19+2664]
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {24}
	013 Move X0, 0x96B000
	014 Move X0, [X0+2664]
	015 Call 0x1C17CF4
	016 Move X0, 0x96D000
	017 Move X0, [X0+3432]
	018 Call 0x1C17CF4
	019 Move X0, 0x940000
	020 Move X0, [X0+624]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X20+681], W8
	024 Move X0, [X19]
	025 Move X20, 0x940000
	026 Move W8, [X0+224]
	027 Move X20, [X20+624]
	028 Compare W8, 0
	029 JumpIfNotEqual {32}
	030 Call 0x1C17DFC
	031 Move X0, [X19]
	032 Move X8, [X20]
	033 Move X9, [X0+184]
	034 Move X21, 0x96D000
	035 Move W10, [X8+224]
	036 Move X20, [X9+400]
	037 Move X19, [X9+408]
	038 Move X21, [X21+3432]
	039 Compare W10, 0
	040 JumpIfNotEqual {43}
	041 Move X0, X8
	042 Call 0x1C17DFC
	043 Move X2, [X21]
	044 Move X0, X20
	045 Move X1, X19
	046 Move X20, [X31+16]
	047 Move X19, [X31+24]
	048 Move X30, [X31+32]
	049 Move X21, [X31+40]
	050 Call 0x220C6E4, X0
	051 Return X0

Method: System.Void FinishSetup()

Disassembly:
	0x037DC700 ADRP X20, 0x91B000
	0x037DC704 ADRP X26, 0x96C000
	0x037DC708 ADRP X24, 0x923000
	0x037DC70C ADRP X25, 0x96C000
	0x037DC710 ADRP X21, 0x96C000
	0x037DC714 ADRP X22, 0x96B000
	0x037DC718 LDR X23, [X23 + 0x3E0]
	0x037DC71C LDR X20, [X20 + 0x468]
	0x037DC720 LDRB W8, [X27 + 0x2B8]
	0x037DC724 LDR X26, [X26 + 0x688]
	0x037DC728 LDR X24, [X24 + 0xB8]
	0x037DC72C LDR X25, [X25 + 0x598]
	0x037DC730 LDR X21, [X21 + 0xDE0]
	0x037DC734 LDR X22, [X22 + 0x808]
	0x037DC738 MOV X19, X0
	0x037DC73C TBNZ X8, 0x0, 0x37DC79C
	0x037DC740 ADRP X0, 0x91B000
	0x037DC744 LDR X0, [X0 + 0x3E0]
	0x037DC748 BL 0x1C16CF4
	0x037DC74C ADRP X0, 0x96C000
	0x037DC750 LDR X0, [X0 + 0x598]
	0x037DC754 BL 0x1C16CF4
	0x037DC758 ADRP X0, 0x91B000
	0x037DC75C LDR X0, [X0 + 0x468]
	0x037DC760 BL 0x1C16CF4
	0x037DC764 ADRP X0, 0x96C000
	0x037DC768 LDR X0, [X0 + 0xDE0]
	0x037DC76C BL 0x1C16CF4
	0x037DC770 ADRP X0, 0x923000
	0x037DC774 LDR X0, [X0 + 0xB8]
	0x037DC778 BL 0x1C16CF4
	0x037DC77C ADRP X0, 0x96C000
	0x037DC780 LDR X0, [X0 + 0x688]
	0x037DC784 BL 0x1C16CF4
	0x037DC788 ADRP X0, 0x96B000
	0x037DC78C LDR X0, [X0 + 0x808]
	0x037DC790 BL 0x1C16CF4
	0x037DC794 MOVZ W8, 0x1
	0x037DC798 STRB W8, [X27 + 0x2B8]
	0x037DC79C LDR X0, [X23]
	0x037DC7A0 BL 0x1C16F10
	0x037DC7A4 LDR X1, [X20]
	0x037DC7A8 LDR X6, [X26]
	0x037DC7AC MOV W2, W31
	0x037DC7B0 MOV X3, X31
	0x037DC7B4 MOV X4, X31
	0x037DC7B8 MOV X5, X31
	0x037DC7BC MOV X7, X31
	0x037DC7C0 MOV X20, X0
	0x037DC7C4 BL 0x3734C54
	0x037DC7C8 ADD X0, X31, 0x38
	0x037DC7CC MOV X1, X20
	0x037DC7D0 MOV X2, X31
	0x037DC7D4 STP X31, X31, [X31 + 0x38]
	0x037DC7D8 STR X31, [X31 + 0x48]
	0x037DC7DC BL 0x3745288
	0x037DC7E0 LDR X8, [X31 + 0x48]
	0x037DC7E4 LDUR V0, [X31 + 0x38]
	0x037DC7E8 STR X8, [X19 + 0x40]
	0x037DC7EC STR V0, [X19 + 0x3]
	0x037DC7F0 LDR X0, [X23]
	0x037DC7F4 BL 0x1C16F10

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xC06000
	006 Move W8, [X20+682]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x96B000
	013 Move X0, [X0+2664]
	014 Call 0x1C17CF4
	015 Move X0, 0x940000
	016 Move X0, [X0+624]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+682], W8
	020 Move X0, X19
	021 Move X1, X31
	022 Call TrackedDevice.FinishSetup, X0
	023 Move X0, [X19+288]
	024 Call XRDeviceDescriptor.FromJson, X0
	025 Compare X0, 0
	026 JumpIfEqual {36}
	027 Move W8, [X0+40]
	028 Move TEMP, X8
	029 And TEMP, TEMP, 256
	030 Compare TEMP, 256
	031 JumpIfEqual {41}
	032 Move TEMP, X8
	033 And TEMP, TEMP, 512
	034 Compare TEMP, 512
	035 JumpIfEqual {55}
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move X30, [X31+32]
	039 Move X21, [X31+40]
	040 Return 
	041 Move X20, 0x96B000
	042 Move X20, [X20+2664]
	043 Move X0, [X20]
	044 Move W8, [X0+224]
	045 Compare W8, 0
	046 JumpIfNotEqual {49}
	047 Call 0x1C17DFC
	048 Move X0, [X20]
	049 Move X8, 0x940000
	050 Move X8, [X8+624]
	051 Move X9, [X0+184]
	052 Move X8, [X8]
	053 Move X21, [X9+384]
	054 Move X20, [X9+392]
	055 Move X20, 0x96B000
	056 Move X20, [X20+2664]
	057 Move X0, [X20]
	058 Move W8, [X0+224]
	059 Compare W8, 0
	060 JumpIfNotEqual {63}
	061 Call 0x1C17DFC
	062 Move X0, [X20]
	063 Move X8, 0x940000
	064 Move X8, [X8+624]
	065 Move X9, [X0+184]
	066 Move X8, [X8]
	067 Move X21, [X9+400]
	068 Move X20, [X9+408]
	069 Move W10, [X8+224]
	070 Compare W10, 0
	071 JumpIfNotEqual {74}
	072 Move X0, X8
	073 Call 0x1C17DFC
	074 Move X0, X19
	075 Move X2, X20
	076 Move X20, [X31+16]
	077 Move X19, [X31+24]
	078 Move X1, X21
	079 Move X3, X31
	080 Move X30, [X31+32]
	081 Move X21, [X31+40]
	082 Call InputSystem.SetDeviceUsage, X0, X1
	083 Return 

Method: System.Void .ctor()

Disassembly:
	0x037DC840 STUR V0, [X19 + 0x48]
	0x037DC844 LDR X0, [X23]

ISIL:
	001 Move X1, X31
	002 Call TrackedDevice..ctor, X0
	003 Return 

