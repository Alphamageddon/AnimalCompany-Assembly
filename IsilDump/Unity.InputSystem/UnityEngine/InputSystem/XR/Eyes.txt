Type: UnityEngine.InputSystem.XR.Eyes

Method: UnityEngine.Vector3 get_leftEyePosition()

Disassembly:
	0x037DF698 MOV X3, X31
	0x037DF69C BL 0x375606C
	0x037DF6A0 LDR X2, [X20]

ISIL:
	001 Move S0, [X0]
	002 Move S1, [X0+4]
	003 Move V2, [X0+8]
	004 Return X0

Method: System.Void set_leftEyePosition(UnityEngine.Vector3 value)

Disassembly:
	0x037DF6A4 MOV X1, X0
	0x037DF6A8 ADD X0, X31, 0x28
	0x037DF6AC STP X31, X31, [X31 + 0x28]

ISIL:
	001 Move [X0], S0
	002 Move [X0+8], S1
	003 Move [X0+8], S2
	004 Return 

Method: UnityEngine.Quaternion get_leftEyeRotation()

Disassembly:
	0x037DF6B0 BL 0x243321C
	0x037DF6B4 ADRP X8, 0x969000
	0x037DF6B8 LDP X1, X2, [X31 + 0x28]

ISIL:
	001 Move S0, [X0+12]
	002 Move S1, [X0+16]
	003 Move S2, [X0+20]
	004 Move S3, [X0+24]
	005 Return X0

Method: System.Void set_leftEyeRotation(UnityEngine.Quaternion value)

Disassembly:
	0x037DF6BC LDR X8, [X8 + 0xF80]
	0x037DF6C0 MOV X0, X31
	0x037DF6C4 LDR X3, [X8]

ISIL:
	001 Move [X0+12], S0
	002 Move [X0+20], S1
	003 Move [X0+20], S2
	004 Move [X0+28], S3
	005 Return 

Method: UnityEngine.Vector3 get_rightEyePosition()

Disassembly:
	0x037DF6C8 BL 0x220C738
	0x037DF6CC LDR X1, [X22]
	0x037DF6D0 ADD X0, X31, 0xC8

ISIL:
	001 Move S0, [X0+28]
	002 Move S1, [X0+32]
	003 Move V2, [X0+36]
	004 Return X0

Method: System.Void set_rightEyePosition(UnityEngine.Vector3 value)

Disassembly:
	0x037DF6D4 MOVZ W2, 0x1
	0x037DF6D8 MOV X3, X31
	0x037DF6DC STR X31, [X31 + 0xC8]

ISIL:
	001 Move [X0+28], S0
	002 Move [X0+36], S1
	003 Move [X0+36], S2
	004 Return 

Method: UnityEngine.Quaternion get_rightEyeRotation()

Disassembly:
	0x037DF6E0 BL 0x3755CF8
	0x037DF6E4 LDR X1, [X19]
	0x037DF6E8 STR X0, [X31 + 0xC8]

ISIL:
	001 Move S0, [X0+40]
	002 Move S1, [X0+44]
	003 Move S2, [X0+48]
	004 Move S3, [X0+52]
	005 Return X0

Method: System.Void set_rightEyeRotation(UnityEngine.Quaternion value)

Disassembly:
	0x037DF6EC ADD X0, X31, 0xC8
	0x037DF6F0 MOVZ W2, 0x1
	0x037DF6F4 MOV X3, X31

ISIL:
	001 Move [X0+40], S0
	002 Move [X0+48], S1
	003 Move [X0+48], S2
	004 Move [X0+56], S3
	005 Return 

Method: UnityEngine.Vector3 get_fixationPoint()

Disassembly:
	0x037DF6F8 BL 0x3755FF4
	0x037DF6FC ADRP X8, 0x969000
	0x037DF700 LDR X8, [X8 + 0xFD0]

ISIL:
	001 Move S0, [X0+56]
	002 Move S1, [X0+60]
	003 Move V2, [X0+64]
	004 Return X0

Method: System.Void set_fixationPoint(UnityEngine.Vector3 value)

Disassembly:
	0x037DF704 STR X0, [X31 + 0xC8]
	0x037DF708 ADD X0, X31, 0xC8
	0x037DF70C MOVZ W2, 0x1

ISIL:
	001 Move [X0+56], S0
	002 Move [X0+64], S1
	003 Move [X0+64], S2
	004 Return 

Method: System.Single get_leftEyeOpenAmount()

Disassembly:
	0x037DF710 LDR X1, [X8]
	0x037DF714 MOV X3, X31

ISIL:
	001 Move V0, [X0+68]
	002 Return V0

Method: System.Void set_leftEyeOpenAmount(System.Single value)

Disassembly:
	0x037DF718 BL 0x375606C
	0x037DF71C LDR X2, [X20]

ISIL:
	001 Move [X0+68], S0
	002 Return 

Method: System.Single get_rightEyeOpenAmount()

Disassembly:
	0x037DF720 MOV X1, X0
	0x037DF724 ADD X0, X31, 0x18

ISIL:
	001 Move V0, [X0+72]
	002 Return V0

Method: System.Void set_rightEyeOpenAmount(System.Single value)

Disassembly:
	0x037DF728 STP X31, X31, [X31 + 0x18]
	0x037DF72C BL 0x243321C

ISIL:
	001 Move [X0+72], S0
	002 Return 

