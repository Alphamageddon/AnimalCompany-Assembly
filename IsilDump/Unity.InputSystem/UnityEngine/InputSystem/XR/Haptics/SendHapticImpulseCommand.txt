Type: UnityEngine.InputSystem.XR.Haptics.SendHapticImpulseCommand

Method: UnityEngine.InputSystem.Utilities.FourCC get_Type()

Disassembly:
	0x037E0D4C LDR X0, [X0 + 0x9E8]
	0x037E0D50 BL 0x1C16CF4
	0x037E0D54 ADRP X0, 0x965000
	0x037E0D58 LDR X0, [X0 + 0x638]
	0x037E0D5C BL 0x1C16CF4
	0x037E0D60 MOVZ W8, 0x1
	0x037E0D64 STRB W8, [X22 + 0x2E5]
	0x037E0D68 MOV X0, X19
	0x037E0D6C MOV X1, X31
	0x037E0D70 STP X31, X31, [X31 + 0x40]
	0x037E0D74 BL 0x32277A8
	0x037E0D78 TBNZ X0, 0x0, 0x37E0EA8

ISIL:
	001 Move [X31-16], X30
	002 Add X0, X31, 8
	003 Move W1, 88
	004 Move W2, 72
	005 Move W3, 73
	006 Move W4, 48
	007 Move X5, X31
	008 Move [X31+8], W31
	009 Call FourCC..ctor, X0, X1, X2, X3, X4
	010 Move W0, [X31+8]
	011 Move X30, [X31+16]
	012 Return X0

Method: UnityEngine.InputSystem.Utilities.FourCC get_typeStatic()

Disassembly:
	0x037E0D7C ADRP X22, 0x968000
	0x037E0D80 LDR X22, [X22 + 0x948]
	0x037E0D84 MOV X0, X21
	0x037E0D88 LDR X8, [X22]
	0x037E0D8C LDR X8, [X8 + 0xB8]
	0x037E0D90 LDR X23, [X8 + 0x20]
	0x037E0D94 BL 0x37DFF1C
	0x037E0D98 CBZ X23, 0x37E0EFC
	0x037E0D9C LDR W8, [X23 + 0x18]
	0x037E0DA0 CMP W0, W8
	0x037E0DA4 B.CS 0x37E0F00
	0x037E0DA8 MOVZ W8, 0xB8

ISIL:
	001 Move [X31-16], X30
	002 Add X0, X31, 8
	003 Move W1, 88
	004 Move W2, 72
	005 Move W3, 73
	006 Move W4, 48
	007 Move X5, X31
	008 Move [X31+8], W31
	009 Call FourCC..ctor, X0, X1, X2, X3, X4
	010 Move W0, [X31+8]
	011 Move X30, [X31+16]
	012 Return X0

Method: UnityEngine.InputSystem.XR.Haptics.SendHapticImpulseCommand Create(System.Int32 motorChannel, System.Single motorAmplitude, System.Single motorDuration)

Disassembly:
	0x037DC8F4 LDRB W8, [X21 + 0x2BD]
	0x037DC8F8 LDR X22, [X22 + 0x260]
	0x037DC8FC MOV X19, X1
	0x037DC900 MOV X20, X0
	0x037DC904 TBNZ X8, 0x0, 0x37DC91C
	0x037DC908 ADRP X0, 0x93F000
	0x037DC90C LDR X0, [X0 + 0x260]
	0x037DC910 BL 0x1C16CF4
	0x037DC914 MOVZ W8, 0x1
	0x037DC918 STRB W8, [X21 + 0x2BD]
	0x037DC91C LDR X2, [X22]
	0x037DC920 MOV X0, X20
	0x037DC924 MOV X1, X19
	0x037DC928 BL 0x21A4990
	0x037DC92C TBZ X0, 0x0, 0x37DC94C
	0x037DC930 LDR X0, [X19]
	0x037DC934 CBZ X0, 0x37DC960
	0x037DC938 LDP X20, X19, [X31 + 0x20]
	0x037DC93C LDP X22, X21, [X31 + 0x10]
	0x037DC940 MOV X1, X31
	0x037DC944 LDR X30, [X31], #0x30
	0x037DC948 B 0x3C04848
	0x037DC94C LDP X20, X19, [X31 + 0x20]
	0x037DC950 LDP X22, X21, [X31 + 0x10]
	0x037DC954 MOV W0, W31
	0x037DC958 LDR X30, [X31], #0x30
	0x037DC95C RET
	0x037DC960 BL 0x1C16F20
	0x037DC964 STP X30, X23, [X31 - 0x30]!
	0x037DC968 STP X22, X21, [X31 + 0x10]
	0x037DC96C STP X20, X19, [X31 + 0x20]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], D9
	003 Move [X31+24], D8
	004 Move [X31+32], X30
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move W19, W0
	008 Add X0, X31, 40
	009 Move W1, 88
	010 Move W2, 72
	011 Move W3, 73
	012 Move W4, 48
	013 Move X5, X31
	014 Move V8, V1
	015 Move V9, V0
	016 Move X20, X8
	017 Move [X31+40], W31
	018 Call FourCC..ctor, X0, X1, X2, X3, X4
	019 Move W1, [X31+40]
	020 Add X0, X31, 8
	021 Move W2, 20
	022 Move X3, X31
	023 Move [X31+8], X31
	024 Call InputDeviceCommand..ctor, X0, X1, X2
	025 Move X8, [X31+8]
	026 Move [X20+8], W19
	027 Move [X20+12], S9
	028 Move [X20+20], S8
	029 Move X30, [X31+32]
	030 Move [X20], X8
	031 Move X20, [X31+48]
	032 Move X19, [X31+56]
	033 Move D9, [X31+16]
	034 Move D8, [X31+24]
	035 Add X31, X31, 64
	036 Return X0

