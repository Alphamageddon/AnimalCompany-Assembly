Type: UnityEngine.InputSystem.XR.Haptics.BufferedRumble

Method: UnityEngine.InputSystem.XR.Haptics.HapticCapabilities get_capabilities()

Disassembly:
	0x037E07DC CBZ X0, 0x37E0858
	0x037E07E0 LDR W8, [X20 + 0x18]
	0x037E07E4 CMP W8, 0x3
	0x037E07E8 B.LS 0x37E0854

ISIL:
	001 Move X8, [X0]
	002 Move W1, [X0+8]
	003 Move X0, X8
	004 Return X0

Method: System.Void set_capabilities(UnityEngine.InputSystem.XR.Haptics.HapticCapabilities value)

Disassembly:
	0x037E07EC STR X19, [X20 + 0x38]
	0x037E07F0 ADRP X8, 0x969000
	0x037E07F4 LDR X8, [X8 + 0x90]

ISIL:
	001 Move [X0], X1
	002 Move [X0+8], W2
	003 Return 

Method: UnityEngine.InputSystem.InputDevice get_device()

Disassembly:
	0x037E07F8 MOV X1, X20
	0x037E07FC MOV X2, X31

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Void set_device(UnityEngine.InputSystem.InputDevice value)

Disassembly:
	0x037E0800 LDR X0, [X8]
	0x037E0804 BL 0x3227C5C

ISIL:
	001 Move [X0+16], X1
	002 Return 

Method: System.Void .ctor(UnityEngine.InputSystem.InputDevice device)

Disassembly:
	0x037E0808 B 0x37E083C
	0x037E080C LDR W8, [X19]
	0x037E0810 LDR X0, [X23]
	0x037E0814 ADRP X19, 0x969000
	0x037E0818 LDR X19, [X19 + 0x98]
	0x037E081C ADD X1, X31, 0x10
	0x037E0820 STR W8, [X31 + 0x10]
	0x037E0824 BL 0x1C16E04
	0x037E0828 LDR X8, [X19]
	0x037E082C MOV X1, X0
	0x037E0830 MOV X2, X31
	0x037E0834 MOV X0, X8
	0x037E0838 BL 0x321EFD0
	0x037E083C LDP X20, X19, [X31 + 0x50]
	0x037E0840 LDP X22, X21, [X31 + 0x40]
	0x037E0844 LDP X24, X23, [X31 + 0x30]
	0x037E0848 LDP X30, X25, [X31 + 0x20]
	0x037E084C ADD X31, X31, 0x60
	0x037E0850 RET
	0x037E0854 BL 0x1C16F28
	0x037E0858 BL 0x1C16F44
	0x037E085C MOV X1, X31
	0x037E0860 BL 0x1C16DEC
	0x037E0864 BL 0x1C16F20
	0x037E0868 STR X30, [X31 - 0x20]!
	0x037E086C STP X20, X19, [X31 + 0x10]
	0x037E0870 ADRP X19, 0xC01000
	0x037E0874 ADRP X20, 0x968000
	0x037E0878 LDRB W8, [X19 + 0x304]
	0x037E087C LDR X20, [X20 + 0x948]
	0x037E0880 TBNZ X8, 0x0, 0x37E08BC
	0x037E0884 ADRP X0, 0x966000
	0x037E0888 LDR X0, [X0 + 0x178]
	0x037E088C BL 0x1C16CF4
	0x037E0890 ADRP X0, 0x93B000
	0x037E0894 LDR X0, [X0 + 0x270]
	0x037E0898 BL 0x1C16CF4
	0x037E089C ADRP X0, 0x969000
	0x037E08A0 LDR X0, [X0 + 0xA0]
	0x037E08A4 BL 0x1C16CF4
	0x037E08A8 ADRP X0, 0x968000
	0x037E08AC LDR X0, [X0 + 0x948]
	0x037E08B0 BL 0x1C16CF4
	0x037E08B4 MOVZ W8, 0x1
	0x037E08B8 STRB W8, [X19 + 0x304]
	0x037E08BC LDR X8, [X20]
	0x037E08C0 LDR X8, [X8 + 0xB8]
	0x037E08C4 LDRB W9, [X8 + 0x160]
	0x037E08C8 CBNZ W9, 0x37E096C
	0x037E08CC LDR X8, [X8 + 0x148]
	0x037E08D0 CBNZ X8, 0x37E090C
	0x037E08D4 ADRP X8, 0x966000
	0x037E08D8 LDR X8, [X8 + 0x178]
	0x037E08DC LDR X0, [X8]
	0x037E08E0 BL 0x1C16F10
	0x037E08E4 ADRP X8, 0x969000
	0x037E08E8 LDR X8, [X8 + 0xA0]
	0x037E08EC MOV X1, X31
	0x037E08F0 MOV X3, X31
	0x037E08F4 MOV X19, X0
	0x037E08F8 LDR X2, [X8]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+48], X22
	004 Move [X31+56], X21
	005 Move [X31+64], X20
	006 Move [X31+72], X19
	007 NotImplemented "Instruction MRS not yet implemented."
	008 Move X8, [X21+40]
	009 Move X22, 0xC02000
	010 Move X20, X1
	011 Move X19, X0
	012 Move [X31+24], X8
	013 Move W8, [X22+716]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x96A000
	019 Move X0, [X0+48]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+716], W8
	023 Move [X31], X31
	024 Move [X31+8], X31
	025 Move [X31+16], W31
	026 Compare X20, 0
	027 JumpIfEqual {51}
	028 Move X22, 0x96A000
	029 Move X22, [X22+48]
	030 Add X8, X31, 0
	031 Move [X19+16], X20
	032 Call GetHapticCapabilitiesCommand.Create
	033 Move X2, [X22]
	034 Add X1, X31, 0
	035 Move X0, X20
	036 Call InputDevice.ExecuteCommand, X0, X1
	037 Move X8, [X31+8]
	038 Move W9, [X31+16]
	039 Move [X19], X8
	040 Move [X19+8], W9
	041 Move X8, [X21+40]
	042 Move X9, [X31+24]
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move X20, [X31+64]
	045 Move X19, [X31+72]
	046 Move X22, [X31+48]
	047 Move X21, [X31+56]
	048 Move X30, [X31+32]
	049 Add X31, X31, 80
	050 Return 
	051 Move X0, 0x919000
	052 Move X0, [X0+1320]
	053 Call 0x1C17D08
	054 Call 0x1C17F10
	055 Move X19, X0
	056 Move X0, 0x93C000
	057 Move X0, [X0+3360]
	058 Call 0x1C17D08
	059 Move X1, X0
	060 Move X0, X19
	061 Move X2, X31
	062 Call ArgumentNullException..ctor, X0, X1
	063 Move X0, 0x96A000
	064 Move X0, [X0+56]
	065 Call 0x1C17D08
	066 Move X1, X0
	067 Move X0, X19
	068 Call 0x1C17DEC
	069 Call 0x3EB2B20

Method: System.Void EnqueueRumble(System.Byte[] samples)

Disassembly:
	0x037E0964 LDR X8, [X8 + 0xB8]
	0x037E0968 STRB W9, [X8 + 0x160]
	0x037E096C LDP X20, X19, [X31 + 0x10]
	0x037E0970 LDR X30, [X31], #0x20
	0x037E0974 RET
	0x037E0978 STP X29, X30, [X31 - 0x40]!
	0x037E097C STP X24, X23, [X31 + 0x10]
	0x037E0980 STP X22, X21, [X31 + 0x20]
	0x037E0984 STP X20, X19, [X31 + 0x30]
	0x037E0988 SUB X31, X31, 0x1D0
	0x037E098C ADRP X20, 0xC01000
	0x037E0990 ADRP X23, 0x968000
	0x037E0994 LDRB W8, [X20 + 0x2E7]
	0x037E0998 LDR X23, [X23 + 0x948]
	0x037E099C MOV X21, X2
	0x037E09A0 MOV W19, W1
	0x037E09A4 TBNZ X8, 0x0, 0x37E09E0
	0x037E09A8 ADRP X0, 0x968000
	0x037E09AC LDR X0, [X0 + 0xAC8]
	0x037E09B0 BL 0x1C16CF4
	0x037E09B4 ADRP X0, 0x968000
	0x037E09B8 LDR X0, [X0 + 0x948]
	0x037E09BC BL 0x1C16CF4
	0x037E09C0 ADRP X0, 0x964000
	0x037E09C4 LDR X0, [X0 + 0xF50]
	0x037E09C8 BL 0x1C16CF4
	0x037E09CC ADRP X0, 0x93B000
	0x037E09D0 LDR X0, [X0 + 0xDE8]
	0x037E09D4 BL 0x1C16CF4
	0x037E09D8 MOVZ W8, 0x1
	0x037E09DC STRB W8, [X20 + 0x2E7]
	0x037E09E0 LDR X8, [X21 + 0x10]
	0x037E09E4 LDR V0, [X21]
	0x037E09E8 ADD X0, X31, 0x150
	0x037E09EC ADD X1, X31, 0x138
	0x037E09F0 MOV X2, X31
	0x037E09F4 STP X31, X31, [X31 + 0x140]
	0x037E09F8 STR X8, [X31 + 0x160]
	0x037E09FC STR V0, [X31 + 0x15]
	0x037E0A00 STR X31, [X31 + 0x138]
	0x037E0A04 BL 0x376B950
	0x037E0A08 LDR X8, [X23]

ISIL:
	001 Move [X31-48], X29
	002 Move [X31-40], X30
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Subtract X31, X31, 1056
	008 NotImplemented "Instruction MRS not yet implemented."
	009 Move X8, [X21+40]
	010 Move X22, 0xC02000
	011 Move X19, X1
	012 Move X20, X0
	013 Move [X31+1048], X8
	014 Move W8, [X22+717]
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0x96A000
	020 Move X0, [X0+64]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+717], W8
	024 Add X0, X31, 8
	025 Move W2, 1040
	026 Move W1, W31
	027 Call 0x3EB2B10
	028 Add X8, X31, 8
	029 Move X0, X19
	030 Call SendBufferedHapticCommand.Create, X0
	031 Move X0, [X20+16]
	032 Compare X0, 0
	033 JumpIfEqual {50}
	034 Move X8, 0x96A000
	035 Move X8, [X8+64]
	036 Add X1, X31, 8
	037 Move X2, [X8]
	038 Call InputDevice.ExecuteCommand, X0, X1
	039 Move X8, [X21+40]
	040 Move X9, [X31+1048]
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Add X31, X31, 1056
	043 Move X20, [X31+32]
	044 Move X19, [X31+40]
	045 Move X22, [X31+16]
	046 Move X21, [X31+24]
	047 Move X29, [X31+48]
	048 Move X30, [X31+56]
	049 Return 
	050 Call 0x1C17F20
	051 Call 0x3EB2B20

