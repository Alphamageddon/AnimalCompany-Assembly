Type: UnityEngine.InputSystem.XR.XRLayoutBuilder

Method: System.UInt32 GetSizeOfFeature(UnityEngine.InputSystem.XR.XRFeatureDescriptor featureDescriptor)

Disassembly:
	0x037DE0F4 STP X8, X1, [X31 + 0x40]
	0x037DE0F8 LDR W8, [X0 + 0xE0]
	0x037DE0FC CBNZ W8, 0x37DE108
	0x037DE100 BL 0x1C16DFC
	0x037DE104 LDR X0, [X21]
	0x037DE108 LDR X8, [X0 + 0xB8]
	0x037DE10C LDR W1, [X8 + 0xC]
	0x037DE110 B 0x37DE3AC
	0x037DE114 LDR X0, [X31 + 0x10]
	0x037DE118 MOV X1, X26
	0x037DE11C MOV X2, X31
	0x037DE120 BL 0x3816074
	0x037DE124 ADRP X8, 0x96A000
	0x037DE128 LDR X8, [X8 + 0xE90]
	0x037DE12C B 0x37DE148
	0x037DE130 LDR X0, [X31 + 0x10]
	0x037DE134 MOV X1, X26
	0x037DE138 MOV X2, X31
	0x037DE13C BL 0x3816074
	0x037DE140 ADRP X8, 0x96A000
	0x037DE144 LDR X8, [X8 + 0xE88]
	0x037DE148 LDR X8, [X8]
	0x037DE14C STP X0, X1, [X31 + 0x40]
	0x037DE150 ADD X0, X31, 0x40
	0x037DE154 MOV X2, X31
	0x037DE158 MOV X1, X8
	0x037DE15C BL 0x3816520
	0x037DE160 STP X0, X1, [X31 + 0x40]
	0x037DE164 ADD X0, X31, 0x40
	0x037DE168 MOV W1, W25

ISIL:
	001 Move W9, [X0+16]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Move X10, -46424064
	004 Add X10, X10, 2432
	005 NotImplemented "Instruction ADR not yet implemented."
	006 Move W12, [X10]
	007 Add X11, X11, X12
	008 Move X8, X0
	009 Move W0, 4
	010 CallNoReturn X11
	011 Return X0
	012 Move W0, W31
	013 Return X0
	014 Move W0, [X8+20]
	015 Return X0
	016 Move W0, 1
	017 Return X0
	018 Move W0, 8
	019 Return X0
	020 Move W0, 12
	021 Return X0
	022 Move W0, 16
	023 Return X0
	024 Move W0, 104
	025 Return X0
	026 Move W0, 76
	027 Return X0
	028 Move W0, 32
	029 Return X0

Method: System.String SanitizeString(System.String original, System.Boolean allowPaths = False)

Disassembly:
	0x037DE16C MOV X2, X31
	0x037DE170 BL 0x3816684
	0x037DE174 B 0x37DE3B8
	0x037DE178 LDR X0, [X31 + 0x10]
	0x037DE17C MOV X1, X26
	0x037DE180 MOV X2, X31
	0x037DE184 BL 0x3816074
	0x037DE188 ADRP X8, 0x969000
	0x037DE18C LDR X8, [X8 + 0x940]
	0x037DE190 STP X0, X1, [X31 + 0x40]
	0x037DE194 ADD X0, X31, 0x40
	0x037DE198 MOV X2, X31
	0x037DE19C LDR X8, [X8]
	0x037DE1A0 MOV X1, X8
	0x037DE1A4 BL 0x3816520
	0x037DE1A8 STP X0, X1, [X31 + 0x40]
	0x037DE1AC ADD X0, X31, 0x40
	0x037DE1B0 FMOV S0, -1
	0x037DE1B4 FMOV S1, 1
	0x037DE1B8 MOV X1, X31
	0x037DE1BC BL 0x381687C
	0x037DE1C0 STP X0, X1, [X31 + 0x40]
	0x037DE1C4 ADD X0, X31, 0x40
	0x037DE1C8 MOV W1, W25
	0x037DE1CC MOV X2, X31
	0x037DE1D0 BL 0x3816684
	0x037DE1D4 MOV X8, X0
	0x037DE1D8 LDR X0, [X21]
	0x037DE1DC STP X8, X1, [X31 + 0x40]
	0x037DE1E0 LDR W8, [X0 + 0xE0]
	0x037DE1E4 CBNZ W8, 0x37DE1F0
	0x037DE1E8 BL 0x1C16DFC
	0x037DE1EC LDR X0, [X21]
	0x037DE1F0 LDR X8, [X0 + 0xB8]
	0x037DE1F4 LDR W1, [X8 + 0x2C]
	0x037DE1F8 B 0x37DE3AC
	0x037DE1FC LDR X0, [X31 + 0x10]
	0x037DE200 MOV X1, X26
	0x037DE204 MOV X2, X31
	0x037DE208 BL 0x3816074
	0x037DE20C ADRP X8, 0x96A000
	0x037DE210 LDR X8, [X8 + 0x5E0]
	0x037DE214 STP X0, X1, [X31 + 0x40]
	0x037DE218 ADD X0, X31, 0x40
	0x037DE21C MOV X2, X31
	0x037DE220 LDR X8, [X8]
	0x037DE224 MOV X1, X8
	0x037DE228 BL 0x3816520
	0x037DE22C STP X0, X1, [X31 + 0x40]
	0x037DE230 ADD X0, X31, 0x40
	0x037DE234 MOV W1, W25
	0x037DE238 MOV X2, X31
	0x037DE23C BL 0x3816684
	0x037DE240 MOV X8, X0
	0x037DE244 LDR X0, [X21]
	0x037DE248 STP X8, X1, [X31 + 0x40]
	0x037DE24C LDR W8, [X0 + 0xE0]
	0x037DE250 CBNZ W8, 0x37DE25C
	0x037DE254 BL 0x1C16DFC
	0x037DE258 LDR X0, [X21]
	0x037DE25C LDR X8, [X0 + 0xB8]
	0x037DE260 ADD X0, X31, 0x40
	0x037DE264 MOV X2, X31
	0x037DE268 LDR W1, [X8 + 0x34]
	0x037DE26C BL 0x3816608
	0x037DE270 STP X0, X1, [X31 + 0x40]
	0x037DE274 ADD X0, X31, 0x40
	0x037DE278 MOV X1, X23
	0x037DE27C MOV X2, X31
	0x037DE280 BL 0x3816AE8
	0x037DE284 ADRP X8, 0x96A000
	0x037DE288 LDR X8, [X8 + 0xE98]
	0x037DE28C MOV X0, X26
	0x037DE290 MOV X2, X31
	0x037DE294 LDR X1, [X8]
	0x037DE298 BL 0x321B938
	0x037DE29C LDR X20, [X31 + 0x10]
	0x037DE2A0 MOV X1, X0
	0x037DE2A4 MOV X2, X31
	0x037DE2A8 MOV X0, X20
	0x037DE2AC BL 0x3816074
	0x037DE2B0 ADRP X22, 0x969000
	0x037DE2B4 LDR X22, [X22 + 0x940]
	0x037DE2B8 STP X0, X1, [X31 + 0x40]
	0x037DE2BC ADD X0, X31, 0x40
	0x037DE2C0 MOV X2, X31
	0x037DE2C4 LDR X8, [X22]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X21, 0xC04000
	010 Move W8, [X21+702]
	011 Move W19, W1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x918000
	018 Move X0, [X0+368]
	019 Call 0x1C17CF4
	020 Move X0, 0x916000
	021 Move X0, [X0+2288]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+702], W8
	025 Compare X20, 0
	026 JumpIfEqual {114}
	027 Move X8, 0x916000
	028 Move X8, [X8+2288]
	029 Move W22, [X20+16]
	030 Move X0, [X8]
	031 Call 0x1C17F10
	032 Move W1, W22
	033 Move X2, X31
	034 Move X21, X0
	035 Call StringBuilder..ctor, X0, X1
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X25, 0x918000
	038 Move X25, [X25+368]
	039 Move W23, W31
	040 Move X0, X20
	041 Move W1, W23
	042 Move X2, X31
	043 Call String.get_Chars, X0, X1
	044 Move X8, [X25]
	045 Move W24, W0
	046 Move W9, [X8+224]
	047 Compare W9, 0
	048 JumpIfNotEqual {51}
	049 Move X0, X8
	050 Call 0x1C17DFC
	051 Move W0, W24
	052 Move X1, X31
	053 Call Char.IsUpper, X0
	054 Move TEMP, X0
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfEqual {91}
	058 Move X0, [X25]
	059 Move W8, [X0+224]
	060 Compare W8, 0
	061 JumpIfNotEqual {63}
	062 Call 0x1C17DFC
	063 Move W0, W24
	064 Move X1, X31
	065 Call Char.IsLower, X0
	066 Move TEMP, X0
	067 And TEMP, TEMP, 1
	068 Compare TEMP, 1
	069 JumpIfEqual {91}
	070 Move X0, [X25]
	071 Move W8, [X0+224]
	072 Compare W8, 0
	073 JumpIfNotEqual {75}
	074 Call 0x1C17DFC
	075 Move W0, W24
	076 Move X1, X31
	077 Call Char.IsDigit, X0
	078 And W8, W24, 0xFFFF
	079 NotImplemented "Instruction CMP not yet implemented."
	080 NotImplemented "Instruction CSET not yet implemented."
	081 And W9, W9, W19
	082 Move TEMP, X9
	083 And TEMP, TEMP, 1
	084 Compare TEMP, 1
	085 JumpIfEqual {91}
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Move TEMP, X0
	088 And TEMP, TEMP, 1
	089 Compare TEMP, 1
	090 JumpIfNotEqual {97}
	091 Compare X21, 0
	092 JumpIfEqual {114}
	093 Move X0, X21
	094 Move W1, W24
	095 Move X2, X31
	096 Call StringBuilder.Append, X0, X1
	097 Add W23, W23, 1
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Compare X21, 0
	100 JumpIfEqual {114}
	101 Move X8, [X21]
	102 Move X0, X21
	103 Move X20, [X31+48]
	104 Move X19, [X31+56]
	105 Move X22, [X31+32]
	106 Move X21, [X31+40]
	107 Move X2, [X8+360]
	108 Move X1, [X8+368]
	109 Move X24, [X31+16]
	110 Move X23, [X31+24]
	111 Move X30, [X31+64]
	112 Move X25, [X31+72]
	113 CallNoReturn X2
	114 Call 0x1C17F20

Method: System.String OnFindLayoutForDevice(ref UnityEngine.InputSystem.Layouts.InputDeviceDescription description, System.String matchedLayout, UnityEngine.InputSystem.LowLevel.InputDeviceExecuteCommandDelegate executeCommandDelegate)

Disassembly:
	0x037DE2C8 MOV X1, X8
	0x037DE2CC BL 0x3816520
	0x037DE2D0 STP X0, X1, [X31 + 0x40]
	0x037DE2D4 ADD X0, X31, 0x40
	0x037DE2D8 FMOV S0, -1
	0x037DE2DC FMOV S1, 1
	0x037DE2E0 MOV X1, X31
	0x037DE2E4 BL 0x381687C
	0x037DE2E8 ADRP X8, 0x96A000
	0x037DE2EC LDR X8, [X8 + 0xE80]
	0x037DE2F0 MOV X0, X26
	0x037DE2F4 MOV X2, X31
	0x037DE2F8 LDR X1, [X8]
	0x037DE2FC BL 0x321B938
	0x037DE300 MOV X1, X0
	0x037DE304 MOV X0, X20
	0x037DE308 MOV X2, X31
	0x037DE30C BL 0x3816074
	0x037DE310 LDR X8, [X22]
	0x037DE314 STP X0, X1, [X31 + 0x40]
	0x037DE318 ADD X0, X31, 0x40
	0x037DE31C MOV X2, X31
	0x037DE320 MOV X1, X8
	0x037DE324 BL 0x3816520
	0x037DE328 STP X0, X1, [X31 + 0x40]
	0x037DE32C ADD X0, X31, 0x40
	0x037DE330 FMOV S0, -1
	0x037DE334 FMOV S1, 1
	0x037DE338 MOV X1, X31
	0x037DE33C BL 0x381687C
	0x037DE340 B 0x37DE3CC
	0x037DE344 LDR X0, [X31 + 0x10]
	0x037DE348 MOV X1, X26
	0x037DE34C MOV X2, X31
	0x037DE350 BL 0x3816074
	0x037DE354 ADRP X8, 0x96A000
	0x037DE358 LDR X8, [X8 + 0x688]
	0x037DE35C STP X0, X1, [X31 + 0x40]
	0x037DE360 ADD X0, X31, 0x40
	0x037DE364 MOV X2, X31
	0x037DE368 LDR X8, [X8]
	0x037DE36C MOV X1, X8
	0x037DE370 BL 0x3816520
	0x037DE374 STP X0, X1, [X31 + 0x40]
	0x037DE378 ADD X0, X31, 0x40
	0x037DE37C MOV W1, W25
	0x037DE380 MOV X2, X31
	0x037DE384 BL 0x3816684
	0x037DE388 MOV X8, X0
	0x037DE38C LDR X0, [X21]
	0x037DE390 STP X8, X1, [X31 + 0x40]
	0x037DE394 LDR W8, [X0 + 0xE0]
	0x037DE398 CBNZ W8, 0x37DE3A4
	0x037DE39C BL 0x1C16DFC
	0x037DE3A0 LDR X0, [X21]
	0x037DE3A4 LDR X8, [X0 + 0xB8]
	0x037DE3A8 LDR W1, [X8 + 0x38]
	0x037DE3AC ADD X0, X31, 0x40
	0x037DE3B0 MOV X2, X31
	0x037DE3B4 BL 0x3816608
	0x037DE3B8 STP X0, X1, [X31 + 0x40]
	0x037DE3BC ADD X0, X31, 0x40
	0x037DE3C0 MOV X1, X23
	0x037DE3C4 MOV X2, X31
	0x037DE3C8 BL 0x3816AE8
	0x037DE3CC LDR X8, [X19 + 0x20]
	0x037DE3D0 ADD W25, W25, W27
	0x037DE3D4 ADD W24, W24, 0x1
	0x037DE3D8 CBNZ X8, 0x37DDC74
	0x037DE3DC B 0x37DE454
	0x037DE3E0 BL 0x1C16F20
	0x037DE3E4 B 0x37DE464
	0x037DE3E8 B 0x37DE3F4
	0x037DE3EC B 0x37DE3F4
	0x037DE3F0 B 0x37DE3F4
	0x037DE3F4 CMP W1, 0x1
	0x037DE3F8 B.NE 0x37DE458
	0x037DE3FC BL 0x3EB1AD0
	0x037DE400 LDR X27, [X0]
	0x037DE404 BL 0x3EB1AE0
	0x037DE408 ADRP X8, 0x96A000
	0x037DE40C LDR X8, [X8 + 0xE58]
	0x037DE410 ADD X0, X31, 0x50
	0x037DE414 LDR X1, [X8]
	0x037DE418 BL 0x2BCFE40
	0x037DE41C CBZ X27, 0x37DDD8C
	0x037DE420 MOV X0, X27
	0x037DE424 BL 0x1C16F18
	0x037DE428 LDR X0, [X31 + 0x10]
	0x037DE42C MOV X1, X31
	0x037DE430 BL 0x38162A4
	0x037DE434 LDP X20, X19, [X31 + 0xC0]
	0x037DE438 LDP X22, X21, [X31 + 0xB0]
	0x037DE43C LDP X24, X23, [X31 + 0xA0]
	0x037DE440 LDP X26, X25, [X31 + 0x90]
	0x037DE444 LDP X28, X27, [X31 + 0x80]
	0x037DE448 LDP X29, X30, [X31 + 0x70]
	0x037DE44C ADD X31, X31, 0xD0
	0x037DE450 RET
	0x037DE454 BL 0x1C16F20
	0x037DE458 MOV X19, X0
	0x037DE45C MOV X27, X31
	0x037DE460 B 0x37DE468
	0x037DE464 MOV X19, X0
	0x037DE468 ADRP X8, 0x96A000
	0x037DE46C LDR X8, [X8 + 0xE58]
	0x037DE470 LDR X1, [X8]
	0x037DE474 ADD X0, X31, 0x50
	0x037DE478 BL 0x2BCFE40
	0x037DE47C CBNZ X27, 0x37DE488
	0x037DE480 MOV X0, X19
	0x037DE484 BL 0x1D2C690
	0x037DE488 MOV X0, X27
	0x037DE48C BL 0x1C16F18
	0x037DE490 BL 0x1990590
	0x037DE494 STR X30, [X31 - 0x20]!
	0x037DE498 STP X20, X19, [X31 + 0x10]
	0x037DE49C ADRP X19, 0xC03000
	0x037DE4A0 ADRP X20, 0x915000
	0x037DE4A4 LDRB W8, [X19 + 0x2C3]
	0x037DE4A8 LDR X20, [X20 + 0xAC8]
	0x037DE4AC TBNZ X8, 0x0, 0x37DE530
	0x037DE4B0 ADRP X0, 0x96A000
	0x037DE4B4 LDR X0, [X0 + 0xEA0]
	0x037DE4B8 BL 0x1C16CF4
	0x037DE4BC ADRP X0, 0x915000
	0x037DE4C0 LDR X0, [X0 + 0xAC8]
	0x037DE4C4 BL 0x1C16CF4
	0x037DE4C8 ADRP X0, 0x96A000
	0x037DE4CC LDR X0, [X0 + 0xEA8]
	0x037DE4D0 BL 0x1C16CF4
	0x037DE4D4 ADRP X0, 0x96A000
	0x037DE4D8 LDR X0, [X0 + 0xE20]
	0x037DE4DC BL 0x1C16CF4
	0x037DE4E0 ADRP X0, 0x96A000
	0x037DE4E4 LDR X0, [X0 + 0xEB0]
	0x037DE4E8 BL 0x1C16CF4
	0x037DE4EC ADRP X0, 0x96A000
	0x037DE4F0 LDR X0, [X0 + 0xEB8]
	0x037DE4F4 BL 0x1C16CF4
	0x037DE4F8 ADRP X0, 0x96A000
	0x037DE4FC LDR X0, [X0 + 0xEC0]
	0x037DE500 BL 0x1C16CF4
	0x037DE504 ADRP X0, 0x96A000
	0x037DE508 LDR X0, [X0 + 0xEC8]
	0x037DE50C BL 0x1C16CF4
	0x037DE510 ADRP X0, 0x96A000
	0x037DE514 LDR X0, [X0 + 0xED0]
	0x037DE518 BL 0x1C16CF4
	0x037DE51C ADRP X0, 0x96A000
	0x037DE520 LDR X0, [X0 + 0xED8]
	0x037DE524 BL 0x1C16CF4
	0x037DE528 MOVZ W8, 0x1
	0x037DE52C STRB W8, [X19 + 0x2C3]
	0x037DE530 LDR X0, [X20]
	0x037DE534 MOVZ W1, 0x6
	0x037DE538 BL 0x1C16D6C
	0x037DE53C CBZ X0, 0x37DE62C
	0x037DE540 LDR W8, [X0 + 0x18]
	0x037DE544 CBZ W8, 0x37DE628
	0x037DE548 ADRP X9, 0x96A000
	0x037DE54C LDR X9, [X9 + 0xEC8]
	0x037DE550 CMP W8, 0x1
	0x037DE554 LDR X9, [X9]
	0x037DE558 STR X9, [X0 + 0x20]
	0x037DE55C B.EQ 0x37DE628
	0x037DE560 ADRP X9, 0x96A000
	0x037DE564 LDR X9, [X9 + 0xEC0]
	0x037DE568 CMP W8, 0x2
	0x037DE56C LDR X9, [X9]
	0x037DE570 STR X9, [X0 + 0x28]
	0x037DE574 B.LS 0x37DE628
	0x037DE578 ADRP X9, 0x96A000
	0x037DE57C LDR X9, [X9 + 0xEB0]
	0x037DE580 CMP W8, 0x3
	0x037DE584 LDR X9, [X9]
	0x037DE588 STR X9, [X0 + 0x30]
	0x037DE58C B.EQ 0x37DE628
	0x037DE590 ADRP X9, 0x96A000
	0x037DE594 LDR X9, [X9 + 0xED0]
	0x037DE598 CMP W8, 0x4
	0x037DE59C LDR X9, [X9]
	0x037DE5A0 STR X9, [X0 + 0x38]
	0x037DE5A4 B.LS 0x37DE628
	0x037DE5A8 ADRP X9, 0x96A000
	0x037DE5AC LDR X9, [X9 + 0xEB8]
	0x037DE5B0 CMP W8, 0x5
	0x037DE5B4 LDR X9, [X9]
	0x037DE5B8 STR X9, [X0 + 0x40]
	0x037DE5BC B.EQ 0x37DE628
	0x037DE5C0 ADRP X8, 0x96A000
	0x037DE5C4 LDR X8, [X8 + 0xED8]
	0x037DE5C8 ADRP X20, 0x96A000
	0x037DE5CC ADRP X9, 0x96A000
	0x037DE5D0 ADRP X19, 0x96A000
	0x037DE5D4 LDR X8, [X8]
	0x037DE5D8 LDR X20, [X20 + 0xE20]
	0x037DE5DC MOVZ W1, 0x6
	0x037DE5E0 STR X8, [X0 + 0x48]
	0x037DE5E4 LDR X8, [X20]
	0x037DE5E8 LDR X8, [X8 + 0xB8]
	0x037DE5EC LDR X9, [X9 + 0xEA0]
	0x037DE5F0 STR X0, [X8]
	0x037DE5F4 LDR X0, [X9]
	0x037DE5F8 LDR X19, [X19 + 0xEA8]
	0x037DE5FC BL 0x1C16D6C
	0x037DE600 LDR X1, [X19]
	0x037DE604 MOV X2, X31
	0x037DE608 MOV X19, X0
	0x037DE60C BL 0x32C5BD8
	0x037DE610 LDR X8, [X20]
	0x037DE614 LDR X8, [X8 + 0xB8]
	0x037DE618 STR X19, [X8 + 0x8]
	0x037DE61C LDP X20, X19, [X31 + 0x10]
	0x037DE620 LDR X30, [X31], #0x20
	0x037DE624 RET
	0x037DE628 BL 0x1C16F28
	0x037DE62C BL 0x1C16F20
	0x037DE630 STR X30, [X31 - 0x10]!
	0x037DE634 LDR X0, [X0 + 0x10]
	0x037DE638 CBZ X0, 0x37DE644
	0x037DE63C LDR X30, [X31], #0x10
	0x037DE640 B 0x37DD9C4
	0x037DE644 BL 0x1C16F20
	0x037DE648 MOV X1, X31
	0x037DE64C B 0x3C86C20
	0x037DE650 MOV X1, X31
	0x037DE654 B 0x33BDD8C
	0x037DE658 LDR W0, [X0]
	0x037DE65C RET
	0x037DE660 STR W1, [X0]
	0x037DE664 RET
	0x037DE668 LDP S0, S1, [X0 + 0x4]
	0x037DE66C LDR V2, [X0 + 0xC]
	0x037DE670 RET
	0x037DE674 STP S0, S1, [X0 + 0x4]
	0x037DE678 STR S2, [X0 + 0xC]
	0x037DE67C RET
	0x037DE680 LDP S0, S1, [X0 + 0x10]
	0x037DE684 LDP S2, S3, [X0 + 0x18]
	0x037DE688 RET
	0x037DE68C STP S0, S1, [X0 + 0x10]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0xC04000
	009 Move X23, 0x96B000
	010 Move X22, 0x96B000
	011 Move W8, [X21+703]
	012 Move X23, [X23+3584]
	013 Move X22, [X22+3592]
	014 Move X19, X1
	015 Move X20, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {55}
	020 Move X0, 0x96B000
	021 Move X0, [X0+3600]
	022 Call 0x1C17CF4
	023 Move X0, 0x93E000
	024 Move X0, [X0+624]
	025 Call 0x1C17CF4
	026 Move X0, 0x916000
	027 Move X0, [X0+2760]
	028 Call 0x1C17CF4
	029 Move X0, 0x96B000
	030 Move X0, [X0+3608]
	031 Call 0x1C17CF4
	032 Move X0, 0x96B000
	033 Move X0, [X0+3584]
	034 Call 0x1C17CF4
	035 Move X0, 0x96B000
	036 Move X0, [X0+3616]
	037 Call 0x1C17CF4
	038 Move X0, 0x923000
	039 Move X0, [X0+2456]
	040 Call 0x1C17CF4
	041 Move X0, 0x96B000
	042 Move X0, [X0+3592]
	043 Call 0x1C17CF4
	044 Move X0, 0x96B000
	045 Move X0, [X0+3624]
	046 Call 0x1C17CF4
	047 Move X0, 0x96B000
	048 Move X0, [X0+3632]
	049 Call 0x1C17CF4
	050 Move X0, 0x96B000
	051 Move X0, [X0+3640]
	052 Call 0x1C17CF4
	053 Move W8, 1
	054 Move [X21+703], W8
	055 Move X0, [X23]
	056 Call 0x1C17F10
	057 Move X1, X31
	058 Move X21, X0
	059 Call Object..ctor, X0
	060 Move X0, [X20]
	061 Move X1, [X22]
	062 Move X2, X31
	063 Call String.op_Inequality, X0, X1
	064 Move TEMP, X0
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfNotEqual {79}
	068 Move X8, 0x96B000
	069 Move X8, [X8+3624]
	070 Move X0, [X20]
	071 Move X2, X31
	072 Move X1, [X8]
	073 Call String.op_Inequality, X0, X1
	074 Move X23, X31
	075 Move TEMP, X0
	076 And TEMP, TEMP, 1
	077 Compare TEMP, 1
	078 JumpIfEqual {251}
	079 Move X0, [X20+48]
	080 Move X1, X31
	081 Call String.IsNullOrEmpty, X0
	082 Move X23, X31
	083 Move TEMP, X0
	084 And TEMP, TEMP, 1
	085 Compare TEMP, 1
	086 JumpIfEqual {251}
	087 Move X0, [X20+48]
	088 Call XRDeviceDescriptor.FromJson, X0
	089 Move X22, X0
	090 Compare X0, 0
	091 JumpIfEqual {250}
	092 Move X0, X19
	093 Move X1, X31
	094 Call String.IsNullOrEmpty, X0
	095 Move TEMP, X0
	096 And TEMP, TEMP, 1
	097 Compare TEMP, 1
	098 JumpIfNotEqual {113}
	099 Move W8, [X22+40]
	100 Move TEMP, X8
	101 And TEMP, TEMP, 1
	102 Compare TEMP, 1
	103 JumpIfEqual {110}
	104 Move X9, 0x96B000
	105 Move X9, [X9+3640]
	106 Move W10, 68
	107 NotImplemented "Instruction BICS not yet implemented."
	108 Move X9, [X9]
	109 NotImplemented "Instruction CSEL not yet implemented."
	110 Move X8, 0x96B000
	111 Move X8, [X8+3632]
	112 Move X19, [X8]
	113 Move X0, [X20+16]
	114 Move X1, X31
	115 Call String.IsNullOrEmpty, X0
	116 Move TEMP, X0
	117 And TEMP, TEMP, 1
	118 Compare TEMP, 1
	119 JumpIfNotEqual {143}
	120 Move X8, 0x96B000
	121 Move X8, [X8+3616]
	122 Move X23, [X20]
	123 Move X0, [X8]
	124 Move W8, [X0+224]
	125 Compare W8, 0
	126 JumpIfNotEqual {128}
	127 Call 0x1C17DFC
	128 Move X0, X23
	129 Move W1, W31
	130 Call XRLayoutBuilder.SanitizeString, X0, X1
	131 Move X8, [X20+24]
	132 Move X23, X0
	133 Move W1, W31
	134 Move X0, X8
	135 Call XRLayoutBuilder.SanitizeString, X0, X1
	136 Move X8, 0x923000
	137 Move X8, [X8+2456]
	138 Move X2, X0
	139 Move X0, X23
	140 Move X3, X31
	141 Move X1, [X8]
	142 Call String.Concat, X0, X1, X2
	143 Move X8, 0x916000
	144 Move X8, [X8+2760]
	145 Move W1, 5
	146 Move X0, [X8]
	147 Call 0x1C17D6C
	148 Move X8, 0x96B000
	149 Move X8, [X8+3616]
	150 Move X24, [X20]
	151 Move X23, X0
	152 Move X8, [X8]
	153 Move W9, [X8+224]
	154 Compare W9, 0
	155 JumpIfNotEqual {158}
	156 Move X0, X8
	157 Call 0x1C17DFC
	158 Move X0, X24
	159 Move W1, W31
	160 Call XRLayoutBuilder.SanitizeString, X0, X1
	161 Compare X23, 0
	162 JumpIfEqual {232}
	163 Move W8, [X23+24]
	164 Compare W8, 0
	165 JumpIfEqual {233}
	166 NotImplemented "Instruction CMP not yet implemented."
	167 Move [X23+32], X0
	168 Move X24, 0x923000
	169 Move X24, [X24+2456]
	170 Move W1, W31
	171 Move X8, [X24]
	172 Move [X23+40], X8
	173 Move X0, [X20+16]
	174 Call XRLayoutBuilder.SanitizeString, X0, X1
	175 Move W8, [X23+24]
	176 NotImplemented "Instruction CMP not yet implemented."
	177 NotImplemented "Instruction CMP not yet implemented."
	178 Move [X23+48], X0
	179 Move X8, [X24]
	180 Move W1, W31
	181 Move [X23+56], X8
	182 Move X0, [X20+24]
	183 Call XRLayoutBuilder.SanitizeString, X0, X1
	184 Move W8, [X23+24]
	185 NotImplemented "Instruction CMP not yet implemented."
	186 Move [X23+64], X0
	187 Move X0, X23
	188 Move X1, X31
	189 Call String.Concat, X0
	190 Move X8, 0x96B000
	191 Move X8, [X8+3616]
	192 Move X23, X0
	193 Move X0, [X8]
	194 Call 0x1C17F10
	195 Move X1, X31
	196 Move X24, X0
	197 Call Object..ctor, X0
	198 Compare X24, 0
	199 JumpIfEqual {232}
	200 Move [X24+32], X22
	201 Move [X24+16], X19
	202 Move X8, [X20]
	203 Move [X24+24], X8
	204 Compare X21, 0
	205 JumpIfEqual {232}
	206 Move [X21+16], X24
	207 Move X8, 0x96B000
	208 Move X8, [X8+3600]
	209 Move X0, [X8]
	210 Call 0x1C17F10
	211 Move X8, 0x96B000
	212 Move X8, [X8+3608]
	213 Move X1, X21
	214 Move X3, X31
	215 Move X20, X0
	216 Move X2, [X8]
	217 Call Func`1<Object>..ctor, X0, X1, X2
	218 Move X8, 0x93E000
	219 Move X8, [X8+624]
	220 Move X0, [X8]
	221 Move W8, [X0+224]
	222 Compare W8, 0
	223 JumpIfNotEqual {225}
	224 Call 0x1C17DFC
	225 Move X0, X20
	226 Move X1, X23
	227 Move X2, X19
	228 Move X3, X31
	229 Move X4, X31
	230 Move X5, X31
	231 Call InputSystem.RegisterLayoutBuilder, X0, X1, X2, X3
	232 Call 0x1C17F20
	233 Call 0x1C17F28
	234 NotImplemented "Instruction CMP not yet implemented."
	235 Move X19, X0
	236 Move X0, X19
	237 Call 0x3EB2AD0
	238 Move X19, X0
	239 Move X0, 0x916000
	240 Move X0, [X0+2000]
	241 Call 0x1C17D08
	242 Move X8, [X19]
	243 Move X1, [X8]
	244 Call 0x1C18270
	245 Move TEMP, X0
	246 And TEMP, TEMP, 1
	247 Compare TEMP, 1
	248 JumpIfNotEqual {260}
	249 Call 0x3EB2AE0
	250 Move X23, X31
	251 Move X0, X23
	252 Move X20, [X31+48]
	253 Move X19, [X31+56]
	254 Move X22, [X31+32]
	255 Move X21, [X31+40]
	256 Move X24, [X31+16]
	257 Move X23, [X31+24]
	258 Move X30, [X31+64]
	259 Return X0
	260 Move W0, 8
	261 Call 0x3EB2AF0
	262 Move X8, [X19]
	263 Move [X0], X8
	264 Move X1, 0x6D7000
	265 Add X1, X1, 3672
	266 Move X2, X31
	267 Call 0x3EB2B00
	268 Move X19, X0
	269 Call 0x3EB2AE0
	270 Move X0, X19
	271 Call 0x1D2D690
	272 Call 0x1991590

Method: System.String ConvertPotentialAliasToName(UnityEngine.InputSystem.Layouts.InputControlLayout layout, System.String nameOrAlias)

Disassembly:
	0x037DE6A0 RET
	0x037DE6A4 STP S0, S1, [X0]
	0x037DE6A8 STR S2, [X0 + 0x8]
	0x037DE6AC RET
	0x037DE6B0 LDP S0, S1, [X0 + 0xC]
	0x037DE6B4 LDP S2, S3, [X0 + 0x14]
	0x037DE6B8 RET
	0x037DE6BC STP S0, S1, [X0 + 0xC]
	0x037DE6C0 STP S2, S3, [X0 + 0x14]
	0x037DE6C4 RET
	0x037DE6C8 LDP S0, S1, [X0 + 0x1C]
	0x037DE6CC LDR V2, [X0 + 0x24]
	0x037DE6D0 RET
	0x037DE6D4 STP S0, S1, [X0 + 0x1C]
	0x037DE6D8 STR S2, [X0 + 0x24]
	0x037DE6DC RET
	0x037DE6E0 LDP S0, S1, [X0 + 0x28]
	0x037DE6E4 LDP S2, S3, [X0 + 0x30]
	0x037DE6E8 RET
	0x037DE6EC STP S0, S1, [X0 + 0x28]
	0x037DE6F0 STP S2, S3, [X0 + 0x30]
	0x037DE6F4 RET
	0x037DE6F8 LDP S0, S1, [X0 + 0x38]
	0x037DE6FC LDR V2, [X0 + 0x40]
	0x037DE700 RET
	0x037DE704 STP S0, S1, [X0 + 0x38]
	0x037DE708 STR S2, [X0 + 0x40]
	0x037DE70C RET
	0x037DE710 LDR V0, [X0 + 0x44]
	0x037DE714 RET
	0x037DE718 STR S0, [X0 + 0x44]
	0x037DE71C RET
	0x037DE720 LDR V0, [X0 + 0x48]
	0x037DE724 RET
	0x037DE728 STR S0, [X0 + 0x48]
	0x037DE72C RET
	0x037DE730 LDR X0, [X0 + 0x140]
	0x037DE734 RET
	0x037DE738 STR X1, [X0 + 0x140]
	0x037DE73C RET
	0x037DE740 LDR X0, [X0 + 0x148]
	0x037DE744 RET
	0x037DE748 STR X1, [X0 + 0x148]
	0x037DE74C RET
	0x037DE750 LDR X0, [X0 + 0x150]
	0x037DE754 RET
	0x037DE758 STR X1, [X0 + 0x150]
	0x037DE75C RET
	0x037DE760 STP X30, X27, [X31 - 0x50]!
	0x037DE764 STP X26, X25, [X31 + 0x10]
	0x037DE768 STP X24, X23, [X31 + 0x20]
	0x037DE76C STP X22, X21, [X31 + 0x30]
	0x037DE770 STP X20, X19, [X31 + 0x40]
	0x037DE774 ADRP X25, 0xC03000
	0x037DE778 ADRP X26, 0x96A000
	0x037DE77C ADRP X27, 0x968000
	0x037DE780 ADRP X23, 0x920000
	0x037DE784 ADRP X24, 0x966000
	0x037DE788 ADRP X21, 0x96A000
	0x037DE78C ADRP X22, 0x966000
	0x037DE790 ADRP X20, 0x96A000
	0x037DE794 LDR X26, [X26 + 0xEE0]
	0x037DE798 LDR X27, [X27 + 0x58]
	0x037DE79C LDRB W8, [X25 + 0x2C5]
	0x037DE7A0 LDR X23, [X23 + 0x2B8]
	0x037DE7A4 LDR X24, [X24 + 0xDD0]
	0x037DE7A8 LDR X21, [X21 + 0xCF8]
	0x037DE7AC LDR X22, [X22 + 0xED8]
	0x037DE7B0 LDR X20, [X20 + 0xEE8]
	0x037DE7B4 MOV X19, X0
	0x037DE7B8 TBNZ X8, 0x0, 0x37DE818
	0x037DE7BC ADRP X0, 0x96A000
	0x037DE7C0 LDR X0, [X0 + 0xEE8]
	0x037DE7C4 BL 0x1C16CF4
	0x037DE7C8 ADRP X0, 0x968000
	0x037DE7CC LDR X0, [X0 + 0x58]
	0x037DE7D0 BL 0x1C16CF4
	0x037DE7D4 ADRP X0, 0x966000
	0x037DE7D8 LDR X0, [X0 + 0xED8]
	0x037DE7DC BL 0x1C16CF4
	0x037DE7E0 ADRP X0, 0x966000
	0x037DE7E4 LDR X0, [X0 + 0xDD0]
	0x037DE7E8 BL 0x1C16CF4
	0x037DE7EC ADRP X0, 0x96A000
	0x037DE7F0 LDR X0, [X0 + 0xCF8]
	0x037DE7F4 BL 0x1C16CF4
	0x037DE7F8 ADRP X0, 0x96A000
	0x037DE7FC LDR X0, [X0 + 0xEE0]
	0x037DE800 BL 0x1C16CF4
	0x037DE804 ADRP X0, 0x920000
	0x037DE808 LDR X0, [X0 + 0x2B8]
	0x037DE80C BL 0x1C16CF4
	0x037DE810 MOVZ W8, 0x1
	0x037DE814 STRB W8, [X25 + 0x2C5]
	0x037DE818 LDR X1, [X26]

ISIL:
	001 Subtract X31, X31, 352
	002 Move [X31+272], X29
	003 Move [X31+280], X30
	004 Move [X31+288], X26
	005 Move [X31+296], X25
	006 Move [X31+304], X24
	007 Move [X31+312], X23
	008 Move [X31+320], X22
	009 Move [X31+328], X21
	010 Move [X31+336], X20
	011 Move [X31+344], X19
	012 Move X21, 0xC04000
	013 Move W8, [X21+704]
	014 Move X19, X1
	015 Move X20, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {34}
	020 Move X0, 0x93E000
	021 Move X0, [X0+3528]
	022 Call 0x1C17CF4
	023 Move X0, 0x969000
	024 Move X0, [X0+3632]
	025 Call 0x1C17CF4
	026 Move X0, 0x93E000
	027 Move X0, [X0+3536]
	028 Call 0x1C17CF4
	029 Move X0, 0x96B000
	030 Move X0, [X0+3648]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X21+704], W8
	034 Add X0, X31, 256
	035 Move X1, X19
	036 Move X2, X31
	037 Move [X31+256], X31
	038 Move [X31+264], X31
	039 Move [X31+240], X31
	040 Move [X31+248], X31
	041 Move [X31+224], X31
	042 Move [X31+232], X31
	043 Move [X31+208], X31
	044 Move [X31+216], X31
	045 Call InternedString..ctor, X0, X1
	046 Compare X20, 0
	047 JumpIfEqual {124}
	048 Move X0, X20
	049 Move X1, X31
	050 Call InputControlLayout.get_controls, X0
	051 Move X8, X1
	052 ShiftRight X8, 32
	053 And X8, X8, 0x7FFFFFFF
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move [X31+240], X0
	056 Move [X31+248], X1
	057 Move X24, 0x96B000
	058 Move X25, 0x93E000
	059 Move X24, [X24+3648]
	060 Move X25, [X25+3536]
	061 Move W20, W31
	062 Move X2, [X24]
	063 Add X8, X31, 0
	064 Add X0, X31, 240
	065 Move W1, W20
	066 Call ReadOnlyArray`1<ControlItem>.get_Item, X0, X1
	067 Move X21, [X31]
	068 Move X22, [X31+8]
	069 Move X2, [X31+256]
	070 Move X3, [X31+264]
	071 Move X23, [X31+88]
	072 Move X26, [X31+96]
	073 Move X4, X31
	074 Move X0, X21
	075 Move X1, X22
	076 Call InternedString.op_Equality, X0, X1
	077 Move TEMP, X0
	078 And TEMP, TEMP, 1
	079 Compare TEMP, 1
	080 JumpIfEqual {111}
	081 Move X8, X26
	082 ShiftRight X8, 32
	083 And X8, X8, 0x7FFFFFFF
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Move [X31+224], X23
	086 Move [X31+232], X26
	087 Move W23, W31
	088 Move X2, [X25]
	089 Add X0, X31, 224
	090 Move W1, W23
	091 Call ReadOnlyArray`1<InternedString>.get_Item, X0, X1
	092 Move X2, X19
	093 Move X3, X31
	094 Call InternedString.op_Equality, X0, X1
	095 Move TEMP, X0
	096 And TEMP, TEMP, 1
	097 Compare TEMP, 1
	098 JumpIfEqual {105}
	099 Move W8, [X31+236]
	100 Add W23, W23, 1
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Move W8, [X31+252]
	103 Add W20, W20, 1
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Add X0, X31, 208
	106 Move X1, X31
	107 Move [X31+208], X21
	108 Move [X31+216], X22
	109 Call InternedString.ToString, X0
	110 Move X19, X0
	111 Move X0, X19
	112 Move X20, [X31+336]
	113 Move X19, [X31+344]
	114 Move X22, [X31+320]
	115 Move X21, [X31+328]
	116 Move X24, [X31+304]
	117 Move X23, [X31+312]
	118 Move X26, [X31+288]
	119 Move X25, [X31+296]
	120 Move X29, [X31+272]
	121 Move X30, [X31+280]
	122 Add X31, X31, 352
	123 Return X0
	124 Call 0x1C17F20

Method: System.Boolean IsSubControl(System.String name)

Disassembly:
	0x037DE81C LDR X2, [X27]
	0x037DE820 MOV X0, X19
	0x037DE824 BL 0x21FC754
	0x037DE828 STR X0, [X19 + 0x140]
	0x037DE82C LDR X1, [X23]
	0x037DE830 LDR X2, [X24]
	0x037DE834 MOV X0, X19

ISIL:
	001 Compare X1, 0
	002 JumpIfEqual {8}
	003 Move X0, X1
	004 Move W1, 47
	005 Move X2, X31
	006 Call String.Contains, X0, X1
	007 Return X0
	008 Move [X31-16], X30
	009 Call 0x1C17F20

Method: System.String GetParentControlName(System.String name)

Disassembly:
	0x037DE838 BL 0x21FC754
	0x037DE83C STR X0, [X19 + 0x148]
	0x037DE840 LDR X1, [X21]
	0x037DE844 LDR X2, [X22]
	0x037DE848 MOV X0, X19
	0x037DE84C BL 0x21FC754
	0x037DE850 STR X0, [X19 + 0x150]
	0x037DE854 LDR X1, [X20]
	0x037DE858 MOV X0, X19
	0x037DE85C LDP X20, X19, [X31 + 0x40]
	0x037DE860 LDP X22, X21, [X31 + 0x30]
	0x037DE864 LDP X24, X23, [X31 + 0x20]
	0x037DE868 LDP X26, X25, [X31 + 0x10]
	0x037DE86C LDP X30, X27, [X31], #0x50

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Compare X1, 0
	004 JumpIfEqual {18}
	005 Move X19, X1
	006 Move W1, 47
	007 Move X0, X19
	008 Move X2, X31
	009 Call String.IndexOf, X0, X1
	010 Move W2, W0
	011 Move X0, X19
	012 Move W1, W31
	013 Move X3, X31
	014 Move X30, [X31+16]
	015 Move X19, [X31+24]
	016 Call String.Substring, X0, X1, X2
	017 Return X0
	018 Call 0x1C17F20

Method: System.Boolean IsPoseControl(System.Collections.Generic.List`1<UnityEngine.InputSystem.XR.XRFeatureDescriptor> features, System.Int32 startIndex)

Disassembly:
	0x037DE870 B 0x2DFCD30
	0x037DE874 STR D10, [X31 - 0x40]!
	0x037DE878 STP D9, D8, [X31 + 0x8]
	0x037DE87C STR X30, [X31 + 0x18]
	0x037DE880 STP X22, X21, [X31 + 0x20]
	0x037DE884 STP X20, X19, [X31 + 0x30]
	0x037DE888 ADRP X22, 0xC03000
	0x037DE88C LDRB W9, [X22 + 0x2C6]
	0x037DE890 MOV X20, X1
	0x037DE894 MOV X21, X0
	0x037DE898 MOV X19, X8
	0x037DE89C TBNZ X9, 0x0, 0x37DE8CC
	0x037DE8A0 ADRP X0, 0x96A000
	0x037DE8A4 LDR X0, [X0 + 0xD10]
	0x037DE8A8 BL 0x1C16CF4
	0x037DE8AC ADRP X0, 0x96A000
	0x037DE8B0 LDR X0, [X0 + 0xD18]
	0x037DE8B4 BL 0x1C16CF4
	0x037DE8B8 ADRP X0, 0x96A000
	0x037DE8BC LDR X0, [X0 + 0xD20]
	0x037DE8C0 BL 0x1C16CF4
	0x037DE8C4 MOVZ W8, 0x1
	0x037DE8C8 STRB W8, [X22 + 0x2C6]
	0x037DE8CC LDR X0, [X21 + 0x140]
	0x037DE8D0 CBZ X0, 0x37DE960
	0x037DE8D4 ADRP X8, 0x96A000
	0x037DE8D8 LDR X8, [X8 + 0xD18]
	0x037DE8DC MOV X1, X20
	0x037DE8E0 LDR X2, [X8]
	0x037DE8E4 BL 0x2E00C50
	0x037DE8E8 LDR X8, [X21 + 0x148]
	0x037DE8EC CBZ X8, 0x37DE960
	0x037DE8F0 ADRP X9, 0x96A000
	0x037DE8F4 LDR X9, [X9 + 0xD10]
	0x037DE8F8 MOV W22, W0
	0x037DE8FC MOV X0, X8
	0x037DE900 MOV X1, X20
	0x037DE904 LDR X2, [X9]
	0x037DE908 BL 0x2E0A8B4
	0x037DE90C LDR X0, [X21 + 0x150]
	0x037DE910 CBZ X0, 0x37DE960
	0x037DE914 ADRP X8, 0x96A000
	0x037DE918 LDR X8, [X8 + 0xD20]
	0x037DE91C MOV X1, X20
	0x037DE920 MOV V8.16B, V0.16B
	0x037DE924 MOV V9.16B, V1.16B
	0x037DE928 LDR X2, [X8]
	0x037DE92C MOV V10.16B, V2.16B
	0x037DE930 BL 0x2E04C30
	0x037DE934 STR W22, [X19]
	0x037DE938 STP S8, S9, [X19 + 0x4]
	0x037DE93C STP S10, S0, [X19 + 0xC]
	0x037DE940 STP S1, S2, [X19 + 0x14]
	0x037DE944 STR S3, [X19 + 0x1C]
	0x037DE948 LDP X20, X19, [X31 + 0x30]
	0x037DE94C LDP X22, X21, [X31 + 0x20]
	0x037DE950 LDR X30, [X31 + 0x18]
	0x037DE954 LDP D9, D8, [X31 + 0x8]
	0x037DE958 LDR V10, [X31], #0x40
	0x037DE95C RET
	0x037DE960 BL 0x1C16F20
	0x037DE964 STP X30, X21, [X31 - 0x20]!
	0x037DE968 STP X20, X19, [X31 + 0x10]
	0x037DE96C MOV X21, X0
	0x037DE970 LDR X0, [X0 + 0x140]
	0x037DE974 CBZ X0, 0x37DE9E4
	0x037DE978 LDR X8, [X0]
	0x037DE97C MOV X20, X1
	0x037DE980 LDR W1, [X1]
	0x037DE984 MOV X19, X2
	0x037DE988 LDR X9, [X8 + 0x258]
	0x037DE98C LDR X3, [X8 + 0x260]
	0x037DE990 BLR X9
	0x037DE994 LDR X0, [X21 + 0x148]
	0x037DE998 CBZ X0, 0x37DE9E4
	0x037DE99C LDR X8, [X0]
	0x037DE9A0 LDP S1, S2, [X20 + 0x8]
	0x037DE9A4 LDR V0, [X20 + 0x4]
	0x037DE9A8 MOV X1, X19
	0x037DE9AC LDR X9, [X8 + 0x258]
	0x037DE9B0 LDR X2, [X8 + 0x260]
	0x037DE9B4 BLR X9
	0x037DE9B8 LDR X0, [X21 + 0x150]
	0x037DE9BC CBZ X0, 0x37DE9E4
	0x037DE9C0 LDR X8, [X0]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+32], X30
	003 Move [X31+40], X25
	004 Move [X31+48], X24
	005 Move [X31+56], X23
	006 Move [X31+64], X22
	007 Move [X31+72], X21
	008 Move [X31+80], X20
	009 Move [X31+88], X19
	010 Move X21, 0xC04000
	011 Move W8, [X21+705]
	012 Move W20, W2
	013 Move X19, X1
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x96B000
	019 Move X0, [X0+3656]
	020 Call 0x1C17CF4
	021 Move X0, 0x96B000
	022 Move X0, [X0+3616]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+705], W8
	026 Compare X19, 0
	027 JumpIfEqual {99}
	028 Move X23, 0x96B000
	029 Move X24, 0x96B000
	030 Move X23, [X23+3656]
	031 Move X24, [X24+3616]
	032 Move X22, X31
	033 Move W25, W20
	034 Move X2, [X23]
	035 Add X20, X25, X22
	036 Add X8, X31, 8
	037 Move X0, X19
	038 Move W1, W20
	039 Call List`1<XRFeatureDescriptor>.get_Item, X0, X1
	040 Move X0, [X24]
	041 Move X21, [X31+8]
	042 Move W8, [X0+224]
	043 Compare W8, 0
	044 JumpIfNotEqual {47}
	045 Call 0x1C17DFC
	046 Move X0, [X24]
	047 Move X8, [X0+184]
	048 Move X8, [X8]
	049 Compare X8, 0
	050 JumpIfEqual {99}
	051 Move W9, [X8+24]
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Compare X21, 0
	054 JumpIfEqual {99}
	055 Add X8, X8, X22
	056 Move X1, [X8+32]
	057 Move X0, X21
	058 Move X2, X31
	059 Call String.EndsWith, X0, X1
	060 Move TEMP, X0
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfNotEqual {88}
	064 Move X2, [X23]
	065 Add X8, X31, 8
	066 Move X0, X19
	067 Move W1, W20
	068 Call List`1<XRFeatureDescriptor>.get_Item, X0, X1
	069 Move X0, [X24]
	070 Move W20, [X31+24]
	071 Move W8, [X0+224]
	072 Compare W8, 0
	073 JumpIfNotEqual {76}
	074 Call 0x1C17DFC
	075 Move X0, [X24]
	076 Move X8, [X0+184]
	077 Move X8, [X8+8]
	078 Compare X8, 0
	079 JumpIfEqual {99}
	080 Move W9, [X8+24]
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Add X8, X8, X22
	083 Move W8, [X8+32]
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Add X22, X22, 1
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Move W0, 1
	088 Move W0, W31
	089 Move X20, [X31+80]
	090 Move X19, [X31+88]
	091 Move X22, [X31+64]
	092 Move X21, [X31+72]
	093 Move X24, [X31+48]
	094 Move X23, [X31+56]
	095 Move X30, [X31+32]
	096 Move X25, [X31+40]
	097 Add X31, X31, 96
	098 Return X0
	099 Call 0x1C17F20
	100 Call 0x1C17F28

Method: UnityEngine.InputSystem.Layouts.InputControlLayout Build()

Disassembly:
	0x037DE9C4 LDP S2, S3, [X20 + 0x18]
	0x037DE9C8 LDP S0, S1, [X20 + 0x10]
	0x037DE9CC MOV X1, X19
	0x037DE9D0 LDR X3, [X8 + 0x258]
	0x037DE9D4 LDR X2, [X8 + 0x260]
	0x037DE9D8 LDP X20, X19, [X31 + 0x10]
	0x037DE9DC LDP X30, X21, [X31], #0x20
	0x037DE9E0 BR X3
	0x037DE9E4 BL 0x1C16F20
	0x037DE9E8 STP X30, X21, [X31 - 0x20]!
	0x037DE9EC STP X20, X19, [X31 + 0x10]
	0x037DE9F0 ADRP X20, 0xC03000
	0x037DE9F4 ADRP X21, 0x96A000
	0x037DE9F8 LDRB W8, [X20 + 0x2C7]
	0x037DE9FC LDR X21, [X21 + 0xEF0]
	0x037DEA00 MOV X19, X0
	0x037DEA04 TBNZ X8, 0x0, 0x37DEA1C
	0x037DEA08 ADRP X0, 0x96A000
	0x037DEA0C LDR X0, [X0 + 0xEF0]
	0x037DEA10 BL 0x1C16CF4
	0x037DEA14 MOVZ W8, 0x1
	0x037DEA18 STRB W8, [X20 + 0x2C7]
	0x037DEA1C LDR X1, [X21]
	0x037DEA20 MOV X0, X19
	0x037DEA24 LDP X20, X19, [X31 + 0x10]
	0x037DEA28 LDP X30, X21, [X31], #0x20
	0x037DEA2C B 0x2DFCFEC
	0x037DEA30 LDR X0, [X0 + 0x198]
	0x037DEA34 RET
	0x037DEA38 STR X1, [X0 + 0x198]
	0x037DEA3C RET
	0x037DEA40 LDR X0, [X0 + 0x1A0]
	0x037DEA44 RET
	0x037DEA48 STR X1, [X0 + 0x1A0]
	0x037DEA4C RET
	0x037DEA50 LDR X0, [X0 + 0x1A8]
	0x037DEA54 RET
	0x037DEA58 STR X1, [X0 + 0x1A8]
	0x037DEA5C RET
	0x037DEA60 LDR X0, [X0 + 0x1B0]
	0x037DEA64 RET
	0x037DEA68 STR X1, [X0 + 0x1B0]
	0x037DEA6C RET
	0x037DEA70 LDR X0, [X0 + 0x1B8]
	0x037DEA74 RET
	0x037DEA78 STR X1, [X0 + 0x1B8]
	0x037DEA7C RET
	0x037DEA80 LDR X0, [X0 + 0x1C0]
	0x037DEA84 RET
	0x037DEA88 STR X1, [X0 + 0x1C0]
	0x037DEA8C RET
	0x037DEA90 LDR X0, [X0 + 0x1C8]
	0x037DEA94 RET
	0x037DEA98 STR X1, [X0 + 0x1C8]
	0x037DEA9C RET
	0x037DEAA0 STP X29, X30, [X31 - 0x60]!
	0x037DEAA4 STP X28, X27, [X31 + 0x10]
	0x037DEAA8 STP X26, X25, [X31 + 0x20]
	0x037DEAAC STP X24, X23, [X31 + 0x30]
	0x037DEAB0 STP X22, X21, [X31 + 0x40]
	0x037DEAB4 STP X20, X19, [X31 + 0x50]
	0x037DEAB8 ADRP X20, 0xC03000
	0x037DEABC ADRP X22, 0x96A000
	0x037DEAC0 ADRP X24, 0x966000
	0x037DEAC4 ADRP X29, 0x96A000
	0x037DEAC8 ADRP X26, 0x966000
	0x037DEACC ADRP X28, 0x96A000
	0x037DEAD0 ADRP X27, 0x96A000
	0x037DEAD4 ADRP X25, 0x96A000
	0x037DEAD8 ADRP X23, 0x96A000
	0x037DEADC ADRP X21, 0x966000
	0x037DEAE0 LDR X22, [X22 + 0xD48]
	0x037DEAE4 LDR X24, [X24 + 0xDD0]
	0x037DEAE8 LDR X29, [X29 + 0xD50]
	0x037DEAEC LDR X26, [X26 + 0xED8]
	0x037DEAF0 LDR X28, [X28 + 0xD58]
	0x037DEAF4 LDR X27, [X27 + 0xD60]
	0x037DEAF8 LDRB W8, [X20 + 0x2C8]
	0x037DEAFC LDR X25, [X25 + 0xEF8]
	0x037DEB00 LDR X23, [X23 + 0xF00]
	0x037DEB04 LDR X21, [X21 + 0xE30]
	0x037DEB08 MOV X19, X0
	0x037DEB0C TBNZ X8, 0x0, 0x37DEB9C
	0x037DEB10 ADRP X0, 0x96A000
	0x037DEB14 LDR X0, [X0 + 0xF08]
	0x037DEB18 BL 0x1C16CF4
	0x037DEB1C ADRP X0, 0x966000
	0x037DEB20 LDR X0, [X0 + 0xE30]
	0x037DEB24 BL 0x1C16CF4
	0x037DEB28 ADRP X0, 0x966000
	0x037DEB2C LDR X0, [X0 + 0xED8]
	0x037DEB30 BL 0x1C16CF4
	0x037DEB34 ADRP X0, 0x966000
	0x037DEB38 LDR X0, [X0 + 0xDD0]
	0x037DEB3C BL 0x1C16CF4
	0x037DEB40 ADRP X0, 0x96A000
	0x037DEB44 LDR X0, [X0 + 0xEF8]
	0x037DEB48 BL 0x1C16CF4
	0x037DEB4C ADRP X0, 0x96A000
	0x037DEB50 LDR X0, [X0 + 0xD58]
	0x037DEB54 BL 0x1C16CF4
	0x037DEB58 ADRP X0, 0x96A000
	0x037DEB5C LDR X0, [X0 + 0xD48]
	0x037DEB60 BL 0x1C16CF4
	0x037DEB64 ADRP X0, 0x96A000
	0x037DEB68 LDR X0, [X0 + 0xF10]
	0x037DEB6C BL 0x1C16CF4
	0x037DEB70 ADRP X0, 0x96A000
	0x037DEB74 LDR X0, [X0 + 0xF00]
	0x037DEB78 BL 0x1C16CF4
	0x037DEB7C ADRP X0, 0x96A000
	0x037DEB80 LDR X0, [X0 + 0xD60]
	0x037DEB84 BL 0x1C16CF4
	0x037DEB88 ADRP X0, 0x96A000
	0x037DEB8C LDR X0, [X0 + 0xD50]
	0x037DEB90 BL 0x1C16CF4
	0x037DEB94 MOVZ W8, 0x1
	0x037DEB98 STRB W8, [X20 + 0x2C8]
	0x037DEB9C LDR X1, [X22]
	0x037DEBA0 LDR X2, [X24]
	0x037DEBA4 MOV X0, X19
	0x037DEBA8 BL 0x21FC754
	0x037DEBAC STR X0, [X19 + 0x198]
	0x037DEBB0 LDR X1, [X29]
	0x037DEBB4 LDR X2, [X26]
	0x037DEBB8 MOV X0, X19
	0x037DEBBC BL 0x21FC754
	0x037DEBC0 STR X0, [X19 + 0x1A0]
	0x037DEBC4 LDR X1, [X28]
	0x037DEBC8 LDR X2, [X24]
	0x037DEBCC MOV X0, X19
	0x037DEBD0 BL 0x21FC754
	0x037DEBD4 STR X0, [X19 + 0x1A8]
	0x037DEBD8 LDR X1, [X27]
	0x037DEBDC LDR X2, [X26]
	0x037DEBE0 MOV X0, X19
	0x037DEBE4 BL 0x21FC754
	0x037DEBE8 STR X0, [X19 + 0x1B0]
	0x037DEBEC LDR X1, [X25]
	0x037DEBF0 LDR X2, [X24]
	0x037DEBF4 MOV X0, X19
	0x037DEBF8 BL 0x21FC754
	0x037DEBFC STR X0, [X19 + 0x1B8]
	0x037DEC00 LDR X1, [X23]
	0x037DEC04 LDR X2, [X21]
	0x037DEC08 MOV X0, X19
	0x037DEC0C BL 0x21FC754
	0x037DEC10 STR X0, [X19 + 0x1C0]
	0x037DEC14 ADRP X8, 0x96A000
	0x037DEC18 LDR X8, [X8 + 0xF10]
	0x037DEC1C LDR X2, [X21]
	0x037DEC20 MOV X0, X19
	0x037DEC24 LDR X1, [X8]
	0x037DEC28 BL 0x21FC754
	0x037DEC2C STR X0, [X19 + 0x1C8]
	0x037DEC30 ADRP X8, 0x96A000
	0x037DEC34 LDR X8, [X8 + 0xF08]
	0x037DEC38 MOV X0, X19
	0x037DEC3C LDP X20, X19, [X31 + 0x50]
	0x037DEC40 LDP X22, X21, [X31 + 0x40]
	0x037DEC44 LDR X1, [X8]
	0x037DEC48 LDP X24, X23, [X31 + 0x30]
	0x037DEC4C LDP X26, X25, [X31 + 0x20]
	0x037DEC50 LDP X28, X27, [X31 + 0x10]
	0x037DEC54 LDP X29, X30, [X31], #0x60
	0x037DEC58 B 0x2E00548
	0x037DEC5C SUB X31, X31, 0xA0
	0x037DEC60 STP D15, D14, [X31 + 0x30]
	0x037DEC64 STP D13, D12, [X31 + 0x40]
	0x037DEC68 STP D11, D10, [X31 + 0x50]
	0x037DEC6C STP D9, D8, [X31 + 0x60]
	0x037DEC70 STP X30, X23, [X31 + 0x70]
	0x037DEC74 STP X22, X21, [X31 + 0x80]
	0x037DEC78 STP X20, X19, [X31 + 0x90]
	0x037DEC7C ADRP X22, 0xC03000
	0x037DEC80 LDRB W9, [X22 + 0x2C9]
	0x037DEC84 MOV X20, X1
	0x037DEC88 MOV X21, X0
	0x037DEC8C MOV X19, X8
	0x037DEC90 TBNZ X9, 0x0, 0x37DECC0
	0x037DEC94 ADRP X0, 0x96A000
	0x037DEC98 LDR X0, [X0 + 0xD10]
	0x037DEC9C BL 0x1C16CF4
	0x037DECA0 ADRP X0, 0x96A000
	0x037DECA4 LDR X0, [X0 + 0xD20]
	0x037DECA8 BL 0x1C16CF4
	0x037DECAC ADRP X0, 0x968000
	0x037DECB0 LDR X0, [X0 + 0x28]
	0x037DECB4 BL 0x1C16CF4
	0x037DECB8 MOVZ W8, 0x1
	0x037DECBC STRB W8, [X22 + 0x2C9]
	0x037DECC0 LDR X0, [X21 + 0x198]
	0x037DECC4 CBZ X0, 0x37DEE24
	0x037DECC8 ADRP X22, 0x96A000
	0x037DECCC LDR X22, [X22 + 0xD10]
	0x037DECD0 MOV X1, X20
	0x037DECD4 LDR X2, [X22]
	0x037DECD8 BL 0x2E0A8B4
	0x037DECDC LDR X0, [X21 + 0x1A0]
	0x037DECE0 CBZ X0, 0x37DEE24
	0x037DECE4 ADRP X23, 0x96A000
	0x037DECE8 LDR X23, [X23 + 0xD20]
	0x037DECEC MOV X1, X20
	0x037DECF0 MOV V8.16B, V0.16B
	0x037DECF4 MOV V9.16B, V1.16B
	0x037DECF8 LDR X2, [X23]
	0x037DECFC MOV V10.16B, V2.16B
	0x037DED00 BL 0x2E04C30
	0x037DED04 LDR X0, [X21 + 0x1A8]
	0x037DED08 CBZ X0, 0x37DEE24
	0x037DED0C LDR X2, [X22]
	0x037DED10 MOV X1, X20
	0x037DED14 MOV V11.16B, V0.16B
	0x037DED18 MOV V12.16B, V1.16B
	0x037DED1C MOV V13.16B, V2.16B
	0x037DED20 MOV V14.16B, V3.16B
	0x037DED24 BL 0x2E0A8B4
	0x037DED28 LDR X0, [X21 + 0x1B0]
	0x037DED2C CBZ X0, 0x37DEE24
	0x037DED30 LDR X2, [X23]
	0x037DED34 MOV X1, X20
	0x037DED38 STP S2, S1, [X31 + 0x10]
	0x037DED3C STP S0, S14, [X31 + 0x18]
	0x037DED40 STP S13, S12, [X31 + 0x20]
	0x037DED44 STP S11, S10, [X31 + 0x28]
	0x037DED48 BL 0x2E04C30
	0x037DED4C LDR X0, [X21 + 0x1B8]
	0x037DED50 STP S1, S0, [X31 + 0x8]
	0x037DED54 CBZ X0, 0x37DEE24
	0x037DED58 LDR X2, [X22]
	0x037DED5C MOV X1, X20
	0x037DED60 MOV V12.16B, V2.16B
	0x037DED64 MOV V13.16B, V3.16B
	0x037DED68 MOV V11.16B, V9.16B
	0x037DED6C BL 0x2E0A8B4
	0x037DED70 LDR X0, [X21 + 0x1C0]
	0x037DED74 CBZ X0, 0x37DEE24
	0x037DED78 ADRP X22, 0x968000
	0x037DED7C LDR X22, [X22 + 0x28]
	0x037DED80 MOV X1, X20
	0x037DED84 MOV V14.16B, V0.16B
	0x037DED88 MOV V10.16B, V1.16B
	0x037DED8C LDR X2, [X22]
	0x037DED90 MOV V15.16B, V2.16B
	0x037DED94 BL 0x2E05DE8
	0x037DED98 LDR X0, [X21 + 0x1C8]
	0x037DED9C CBZ X0, 0x37DEE24
	0x037DEDA0 LDR X2, [X22]
	0x037DEDA4 MOV X1, X20
	0x037DEDA8 MOV V9.16B, V0.16B
	0x037DEDAC BL 0x2E05DE8
	0x037DEDB0 LDR V2, [X31 + 0x2C]
	0x037DEDB4 LDR V1, [X31 + 0x28]
	0x037DEDB8 STP S8, S11, [X19]
	0x037DEDBC STP S12, S13, [X19 + 0x30]
	0x037DEDC0 STP S14, S10, [X19 + 0x38]
	0x037DEDC4 STP S2, S1, [X19 + 0x8]
	0x037DEDC8 LDR V2, [X31 + 0x24]
	0x037DEDCC LDR V1, [X31 + 0x20]
	0x037DEDD0 STP S15, S9, [X19 + 0x40]
	0x037DEDD4 STR S0, [X19 + 0x48]
	0x037DEDD8 LDP X22, X21, [X31 + 0x80]
	0x037DEDDC STP S2, S1, [X19 + 0x10]
	0x037DEDE0 LDR V2, [X31 + 0x1C]
	0x037DEDE4 LDR V1, [X31 + 0x18]
	0x037DEDE8 LDP X30, X23, [X31 + 0x70]
	0x037DEDEC LDP D9, D8, [X31 + 0x60]
	0x037DEDF0 LDP D11, D10, [X31 + 0x50]
	0x037DEDF4 STP S2, S1, [X19 + 0x18]
	0x037DEDF8 LDR V2, [X31 + 0x14]
	0x037DEDFC LDR V1, [X31 + 0x10]
	0x037DEE00 LDP D13, D12, [X31 + 0x40]
	0x037DEE04 LDP D15, D14, [X31 + 0x30]
	0x037DEE08 STP S2, S1, [X19 + 0x20]
	0x037DEE0C LDR V2, [X31 + 0xC]
	0x037DEE10 LDR V1, [X31 + 0x8]
	0x037DEE14 STP S2, S1, [X19 + 0x28]
	0x037DEE18 LDP X20, X19, [X31 + 0x90]
	0x037DEE1C ADD X31, X31, 0xA0
	0x037DEE20 RET
	0x037DEE24 BL 0x1C16F20
	0x037DEE28 STP X30, X21, [X31 - 0x20]!
	0x037DEE2C STP X20, X19, [X31 + 0x10]
	0x037DEE30 MOV X21, X0
	0x037DEE34 LDR X0, [X0 + 0x198]
	0x037DEE38 CBZ X0, 0x37DEF38
	0x037DEE3C LDR X8, [X0]
	0x037DEE40 MOV X19, X2
	0x037DEE44 LDP S1, S2, [X1 + 0x4]
	0x037DEE48 LDR V0, [X1]
	0x037DEE4C LDR X9, [X8 + 0x258]
	0x037DEE50 LDR X2, [X8 + 0x260]
	0x037DEE54 MOV X20, X1
	0x037DEE58 MOV X1, X19
	0x037DEE5C BLR X9
	0x037DEE60 LDR X0, [X21 + 0x1A0]
	0x037DEE64 CBZ X0, 0x37DEF38
	0x037DEE68 LDR X8, [X0]
	0x037DEE6C LDP S2, S3, [X20 + 0x14]
	0x037DEE70 LDP S0, S1, [X20 + 0xC]
	0x037DEE74 MOV X1, X19
	0x037DEE78 LDR X9, [X8 + 0x258]
	0x037DEE7C LDR X2, [X8 + 0x260]
	0x037DEE80 BLR X9
	0x037DEE84 LDR X0, [X21 + 0x1A8]
	0x037DEE88 CBZ X0, 0x37DEF38
	0x037DEE8C LDR X8, [X0]
	0x037DEE90 LDP S1, S2, [X20 + 0x20]
	0x037DEE94 LDR V0, [X20 + 0x1C]
	0x037DEE98 MOV X1, X19
	0x037DEE9C LDR X9, [X8 + 0x258]
	0x037DEEA0 LDR X2, [X8 + 0x260]
	0x037DEEA4 BLR X9
	0x037DEEA8 LDR X0, [X21 + 0x1B0]
	0x037DEEAC CBZ X0, 0x37DEF38
	0x037DEEB0 LDR X8, [X0]
	0x037DEEB4 LDP S2, S3, [X20 + 0x30]
	0x037DEEB8 LDP S0, S1, [X20 + 0x28]
	0x037DEEBC MOV X1, X19
	0x037DEEC0 LDR X9, [X8 + 0x258]
	0x037DEEC4 LDR X2, [X8 + 0x260]
	0x037DEEC8 BLR X9
	0x037DEECC LDR X0, [X21 + 0x1B8]
	0x037DEED0 CBZ X0, 0x37DEF38
	0x037DEED4 LDR X8, [X0]
	0x037DEED8 LDP S1, S2, [X20 + 0x3C]
	0x037DEEDC LDR V0, [X20 + 0x38]
	0x037DEEE0 MOV X1, X19
	0x037DEEE4 LDR X9, [X8 + 0x258]
	0x037DEEE8 LDR X2, [X8 + 0x260]
	0x037DEEEC BLR X9
	0x037DEEF0 LDR X0, [X21 + 0x1C0]
	0x037DEEF4 CBZ X0, 0x37DEF38
	0x037DEEF8 LDR X8, [X0]
	0x037DEEFC LDR V0, [X20 + 0x44]
	0x037DEF00 MOV X1, X19
	0x037DEF04 LDR X9, [X8 + 0x258]
	0x037DEF08 LDR X2, [X8 + 0x260]
	0x037DEF0C BLR X9
	0x037DEF10 LDR X0, [X21 + 0x1C8]
	0x037DEF14 CBZ X0, 0x37DEF38
	0x037DEF18 LDR X8, [X0]
	0x037DEF1C LDR V0, [X20 + 0x48]
	0x037DEF20 MOV X1, X19
	0x037DEF24 LDP X20, X19, [X31 + 0x10]
	0x037DEF28 LDR X3, [X8 + 0x258]
	0x037DEF2C LDR X2, [X8 + 0x260]
	0x037DEF30 LDP X30, X21, [X31], #0x20
	0x037DEF34 BR X3
	0x037DEF38 BL 0x1C16F20
	0x037DEF3C STP X30, X21, [X31 - 0x20]!
	0x037DEF40 STP X20, X19, [X31 + 0x10]
	0x037DEF44 ADRP X20, 0xC03000
	0x037DEF48 ADRP X21, 0x96A000
	0x037DEF4C LDRB W8, [X20 + 0x2CA]
	0x037DEF50 LDR X21, [X21 + 0xF18]
	0x037DEF54 MOV X19, X0
	0x037DEF58 TBNZ X8, 0x0, 0x37DEF70
	0x037DEF5C ADRP X0, 0x96A000
	0x037DEF60 LDR X0, [X0 + 0xF18]
	0x037DEF64 BL 0x1C16CF4
	0x037DEF68 MOVZ W8, 0x1
	0x037DEF6C STRB W8, [X20 + 0x2CA]
	0x037DEF70 LDR X1, [X21]
	0x037DEF74 MOV X0, X19
	0x037DEF78 LDP X20, X19, [X31 + 0x10]
	0x037DEF7C LDP X30, X21, [X31], #0x20
	0x037DEF80 B 0x2E00804
	0x037DEF84 SUB X31, X31, 0x130
	0x037DEF88 STP X29, X30, [X31 + 0xD0]
	0x037DEF8C STP X28, X27, [X31 + 0xE0]
	0x037DEF90 STP X26, X25, [X31 + 0xF0]
	0x037DEF94 STP X24, X23, [X31 + 0x100]
	0x037DEF98 STP X22, X21, [X31 + 0x110]
	0x037DEF9C STP X20, X19, [X31 + 0x120]
	0x037DEFA0 ADRP X20, 0xC03000
	0x037DEFA4 ADRP X22, 0x93D000
	0x037DEFA8 LDRB W8, [X20 + 0x2CB]
	0x037DEFAC LDR X22, [X22 + 0x270]
	0x037DEFB0 TBNZ X8, 0x0, 0x37DF190
	0x037DEFB4 ADRP X0, 0x96A000
	0x037DEFB8 LDR X0, [X0 + 0xF20]
	0x037DEFBC BL 0x1C16CF4
	0x037DEFC0 ADRP X0, 0x93D000
	0x037DEFC4 LDR X0, [X0 + 0xEC0]
	0x037DEFC8 BL 0x1C16CF4
	0x037DEFCC ADRP X0, 0x96A000
	0x037DEFD0 LDR X0, [X0 + 0xF28]
	0x037DEFD4 BL 0x1C16CF4
	0x037DEFD8 ADRP X0, 0x96A000
	0x037DEFDC LDR X0, [X0 + 0xF30]
	0x037DEFE0 BL 0x1C16CF4
	0x037DEFE4 ADRP X0, 0x96A000
	0x037DEFE8 LDR X0, [X0 + 0xF38]
	0x037DEFEC BL 0x1C16CF4
	0x037DEFF0 ADRP X0, 0x96A000
	0x037DEFF4 LDR X0, [X0 + 0xF40]
	0x037DEFF8 BL 0x1C16CF4
	0x037DEFFC ADRP X0, 0x96A000
	0x037DF000 LDR X0, [X0 + 0xF48]
	0x037DF004 BL 0x1C16CF4
	0x037DF008 ADRP X0, 0x969000
	0x037DF00C LDR X0, [X0 + 0xF50]
	0x037DF010 BL 0x1C16CF4
	0x037DF014 ADRP X0, 0x969000
	0x037DF018 LDR X0, [X0 + 0xF58]
	0x037DF01C BL 0x1C16CF4
	0x037DF020 ADRP X0, 0x969000
	0x037DF024 LDR X0, [X0 + 0xF60]
	0x037DF028 BL 0x1C16CF4
	0x037DF02C ADRP X0, 0x969000
	0x037DF030 LDR X0, [X0 + 0xF68]
	0x037DF034 BL 0x1C16CF4
	0x037DF038 ADRP X0, 0x969000
	0x037DF03C LDR X0, [X0 + 0xF70]
	0x037DF040 BL 0x1C16CF4
	0x037DF044 ADRP X0, 0x969000
	0x037DF048 LDR X0, [X0 + 0xF78]
	0x037DF04C BL 0x1C16CF4
	0x037DF050 ADRP X0, 0x969000
	0x037DF054 LDR X0, [X0 + 0xF80]
	0x037DF058 BL 0x1C16CF4
	0x037DF05C ADRP X0, 0x969000
	0x037DF060 LDR X0, [X0 + 0xF88]
	0x037DF064 BL 0x1C16CF4
	0x037DF068 ADRP X0, 0x969000
	0x037DF06C LDR X0, [X0 + 0xF90]
	0x037DF070 BL 0x1C16CF4
	0x037DF074 ADRP X0, 0x969000
	0x037DF078 LDR X0, [X0 + 0xF98]
	0x037DF07C BL 0x1C16CF4
	0x037DF080 ADRP X0, 0x969000
	0x037DF084 LDR X0, [X0 + 0xFA0]
	0x037DF088 BL 0x1C16CF4
	0x037DF08C ADRP X0, 0x969000
	0x037DF090 LDR X0, [X0 + 0xFA8]
	0x037DF094 BL 0x1C16CF4
	0x037DF098 ADRP X0, 0x93C000
	0x037DF09C LDR X0, [X0 + 0x270]
	0x037DF0A0 BL 0x1C16CF4
	0x037DF0A4 ADRP X0, 0x969000
	0x037DF0A8 LDR X0, [X0 + 0xFB0]
	0x037DF0AC BL 0x1C16CF4
	0x037DF0B0 ADRP X0, 0x969000
	0x037DF0B4 LDR X0, [X0 + 0xFB8]
	0x037DF0B8 BL 0x1C16CF4
	0x037DF0BC ADRP X0, 0x969000
	0x037DF0C0 LDR X0, [X0 + 0xFC0]
	0x037DF0C4 BL 0x1C16CF4
	0x037DF0C8 ADRP X0, 0x969000
	0x037DF0CC LDR X0, [X0 + 0xFC8]
	0x037DF0D0 BL 0x1C16CF4
	0x037DF0D4 ADRP X0, 0x93C000
	0x037DF0D8 LDR X0, [X0 + 0x28]
	0x037DF0DC BL 0x1C16CF4
	0x037DF0E0 ADRP X0, 0x969000
	0x037DF0E4 LDR X0, [X0 + 0xFD0]
	0x037DF0E8 BL 0x1C16CF4
	0x037DF0EC ADRP X0, 0x969000
	0x037DF0F0 LDR X0, [X0 + 0xE88]
	0x037DF0F4 BL 0x1C16CF4
	0x037DF0F8 ADRP X0, 0x969000
	0x037DF0FC LDR X0, [X0 + 0xE90]
	0x037DF100 BL 0x1C16CF4
	0x037DF104 ADRP X0, 0x969000
	0x037DF108 LDR X0, [X0 + 0xFD8]
	0x037DF10C BL 0x1C16CF4
	0x037DF110 ADRP X0, 0x969000
	0x037DF114 LDR X0, [X0 + 0xFE0]
	0x037DF118 BL 0x1C16CF4
	0x037DF11C ADRP X0, 0x969000
	0x037DF120 LDR X0, [X0 + 0xFE8]
	0x037DF124 BL 0x1C16CF4
	0x037DF128 ADRP X0, 0x969000
	0x037DF12C LDR X0, [X0 + 0xFF0]
	0x037DF130 BL 0x1C16CF4
	0x037DF134 ADRP X0, 0x969000
	0x037DF138 LDR X0, [X0 + 0xFF8]
	0x037DF13C BL 0x1C16CF4
	0x037DF140 ADRP X0, 0x96A000
	0x037DF144 LDR X0, [X0]
	0x037DF148 BL 0x1C16CF4
	0x037DF14C ADRP X0, 0x96A000
	0x037DF150 LDR X0, [X0 + 0x8]
	0x037DF154 BL 0x1C16CF4
	0x037DF158 ADRP X0, 0x96A000
	0x037DF15C LDR X0, [X0 + 0x10]
	0x037DF160 BL 0x1C16CF4
	0x037DF164 ADRP X0, 0x96A000
	0x037DF168 LDR X0, [X0 + 0x18]
	0x037DF16C BL 0x1C16CF4
	0x037DF170 ADRP X0, 0x96A000
	0x037DF174 LDR X0, [X0 + 0x20]
	0x037DF178 BL 0x1C16CF4
	0x037DF17C ADRP X0, 0x96A000
	0x037DF180 LDR X0, [X0 + 0x28]
	0x037DF184 BL 0x1C16CF4
	0x037DF188 MOVZ W8, 0x1
	0x037DF18C STRB W8, [X20 + 0x2CB]
	0x037DF190 ADRP X26, 0x93C000
	0x037DF194 ADRP X19, 0x969000
	0x037DF198 ADRP X29, 0x969000
	0x037DF19C ADRP X21, 0x969000
	0x037DF1A0 LDR X26, [X26 + 0x28]
	0x037DF1A4 LDR X19, [X19 + 0xF70]
	0x037DF1A8 LDR X29, [X29 + 0xE90]
	0x037DF1AC LDR X21, [X21 + 0xF28]
	0x037DF1B0 LDR X0, [X22]
	0x037DF1B4 ADRP X25, 0x969000
	0x037DF1B8 ADRP X24, 0x969000
	0x037DF1BC ADRP X28, 0x969000
	0x037DF1C0 ADRP X27, 0x969000
	0x037DF1C4 ADRP X23, 0x969000
	0x037DF1C8 LDR X25, [X25 + 0xE88]
	0x037DF1CC LDR X24, [X24 + 0xF40]
	0x037DF1D0 LDR X28, [X28 + 0xFA8]
	0x037DF1D4 LDR W8, [X0 + 0xE0]
	0x037DF1D8 LDR X27, [X27 + 0xFA0]
	0x037DF1DC LDR X23, [X23 + 0xF20]
	0x037DF1E0 CBNZ W8, 0x37DF1E8
	0x037DF1E4 BL 0x1C16DFC
	0x037DF1E8 ADRP X22, 0x96A000
	0x037DF1EC ADRP X20, 0x969000
	0x037DF1F0 LDR X22, [X22 + 0x18]
	0x037DF1F4 LDR X20, [X20 + 0xFB0]
	0x037DF1F8 LDR X0, [X26]
	0x037DF1FC LDR X3, [X19]
	0x037DF200 ADRP X26, 0x969000
	0x037DF204 LDR X26, [X26 + 0xF48]
	0x037DF208 MOV X1, X31
	0x037DF20C MOV X2, X31
	0x037DF210 BL 0x220C738
	0x037DF214 LDR X0, [X29]
	0x037DF218 LDR X3, [X21]
	0x037DF21C MOV X1, X31
	0x037DF220 MOV X2, X31
	0x037DF224 BL 0x220C738
	0x037DF228 LDR X0, [X25]
	0x037DF22C LDR X3, [X24]
	0x037DF230 MOV X1, X31
	0x037DF234 MOV X2, X31
	0x037DF238 BL 0x220C738
	0x037DF23C LDR X3, [X28]
	0x037DF240 MOV X0, X31
	0x037DF244 MOV X1, X31
	0x037DF248 MOV X2, X31
	0x037DF24C BL 0x220C738
	0x037DF250 LDR X3, [X27]
	0x037DF254 MOV X0, X31
	0x037DF258 MOV X1, X31
	0x037DF25C MOV X2, X31
	0x037DF260 BL 0x220C738
	0x037DF264 LDR X0, [X23]
	0x037DF268 BL 0x1C16F10
	0x037DF26C ADRP X8, 0x969000
	0x037DF270 LDR X8, [X8 + 0xFB8]
	0x037DF274 MOV X1, X31
	0x037DF278 MOV X3, X31
	0x037DF27C MOV X19, X0
	0x037DF280 LDR X2, [X8]
	0x037DF284 BL 0x3810A78
	0x037DF288 MOV X0, X19
	0x037DF28C MOV X1, X31
	0x037DF290 BL 0x376E1A4
	0x037DF294 ADRP X8, 0x93C000
	0x037DF298 LDR X8, [X8 + 0xEC0]
	0x037DF29C STR X31, [X31 + 0xC8]
	0x037DF2A0 LDR X0, [X8]
	0x037DF2A4 LDR W8, [X0 + 0xE0]
	0x037DF2A8 CBNZ W8, 0x37DF2B0
	0x037DF2AC BL 0x1C16DFC
	0x037DF2B0 LDR X1, [X22]
	0x037DF2B4 ADD X0, X31, 0xC8
	0x037DF2B8 MOVZ W2, 0x1
	0x037DF2BC MOV X3, X31
	0x037DF2C0 BL 0x3755CF8
	0x037DF2C4 ADRP X8, 0x969000
	0x037DF2C8 LDR X8, [X8 + 0xFF0]
	0x037DF2CC STR X0, [X31 + 0xC8]
	0x037DF2D0 ADD X0, X31, 0xC8
	0x037DF2D4 MOVZ W2, 0x1
	0x037DF2D8 LDR X1, [X8]
	0x037DF2DC MOV X3, X31
	0x037DF2E0 BL 0x375606C
	0x037DF2E4 LDR X2, [X20]
	0x037DF2E8 MOV X1, X0
	0x037DF2EC ADD X0, X31, 0xB8
	0x037DF2F0 STP X31, X31, [X31 + 0xB8]
	0x037DF2F4 BL 0x243321C
	0x037DF2F8 ADRP X8, 0x969000
	0x037DF2FC LDP X1, X2, [X31 + 0xB8]
	0x037DF300 LDR X8, [X8 + 0xF90]
	0x037DF304 MOV X0, X31
	0x037DF308 LDR X3, [X8]
	0x037DF30C BL 0x220C738
	0x037DF310 LDR X1, [X22]
	0x037DF314 ADD X0, X31, 0xC8
	0x037DF318 MOVZ W2, 0x1
	0x037DF31C MOV X3, X31
	0x037DF320 STR X31, [X31 + 0xC8]
	0x037DF324 BL 0x3755CF8
	0x037DF328 ADRP X8, 0x969000
	0x037DF32C LDR X8, [X8 + 0xFD8]
	0x037DF330 STR X0, [X31 + 0xC8]
	0x037DF334 ADD X0, X31, 0xC8
	0x037DF338 MOVZ W2, 0x1
	0x037DF33C LDR X1, [X8]
	0x037DF340 MOV X3, X31
	0x037DF344 BL 0x375606C
	0x037DF348 LDR X2, [X20]
	0x037DF34C MOV X1, X0
	0x037DF350 ADD X0, X31, 0xA8
	0x037DF354 STP X31, X31, [X31 + 0xA8]
	0x037DF358 BL 0x243321C
	0x037DF35C ADRP X8, 0x969000
	0x037DF360 LDP X1, X2, [X31 + 0xA8]
	0x037DF364 LDR X8, [X8 + 0xF98]
	0x037DF368 MOV X0, X31
	0x037DF36C LDR X3, [X8]
	0x037DF370 BL 0x220C738
	0x037DF374 LDR X1, [X22]
	0x037DF378 ADD X0, X31, 0xC8
	0x037DF37C MOVZ W2, 0x1
	0x037DF380 MOV X3, X31
	0x037DF384 STR X31, [X31 + 0xC8]
	0x037DF388 BL 0x3755CF8
	0x037DF38C ADRP X8, 0x969000
	0x037DF390 LDR X8, [X8 + 0xFC0]
	0x037DF394 STR X0, [X31 + 0xC8]
	0x037DF398 ADD X0, X31, 0xC8
	0x037DF39C MOVZ W2, 0x1
	0x037DF3A0 LDR X1, [X8]
	0x037DF3A4 MOV X3, X31
	0x037DF3A8 BL 0x375606C
	0x037DF3AC LDR X2, [X20]
	0x037DF3B0 MOV X1, X0
	0x037DF3B4 ADD X0, X31, 0x98
	0x037DF3B8 STP X31, X31, [X31 + 0x98]
	0x037DF3BC BL 0x243321C
	0x037DF3C0 ADRP X8, 0x969000
	0x037DF3C4 LDP X1, X2, [X31 + 0x98]
	0x037DF3C8 LDR X8, [X8 + 0xF50]
	0x037DF3CC MOV X0, X31
	0x037DF3D0 LDR X3, [X8]
	0x037DF3D4 BL 0x220C738
	0x037DF3D8 LDR X1, [X22]
	0x037DF3DC ADD X0, X31, 0xC8
	0x037DF3E0 MOVZ W2, 0x1
	0x037DF3E4 MOV X3, X31
	0x037DF3E8 STR X31, [X31 + 0xC8]
	0x037DF3EC BL 0x3755CF8
	0x037DF3F0 ADRP X8, 0x96A000
	0x037DF3F4 LDR X8, [X8 + 0x28]
	0x037DF3F8 STR X0, [X31 + 0xC8]
	0x037DF3FC ADD X0, X31, 0xC8
	0x037DF400 MOVZ W2, 0x1
	0x037DF404 LDR X1, [X8]
	0x037DF408 MOV X3, X31
	0x037DF40C BL 0x375606C
	0x037DF410 LDR X2, [X20]
	0x037DF414 MOV X1, X0
	0x037DF418 ADD X0, X31, 0x88
	0x037DF41C STP X31, X31, [X31 + 0x88]
	0x037DF420 BL 0x243321C
	0x037DF424 ADRP X8, 0x969000
	0x037DF428 LDP X1, X2, [X31 + 0x88]
	0x037DF42C LDR X8, [X8 + 0xF38]
	0x037DF430 MOV X0, X31
	0x037DF434 LDR X3, [X8]
	0x037DF438 BL 0x220C738
	0x037DF43C LDR X1, [X22]
	0x037DF440 ADD X0, X31, 0xC8
	0x037DF444 MOVZ W2, 0x1
	0x037DF448 MOV X3, X31
	0x037DF44C STR X31, [X31 + 0xC8]
	0x037DF450 BL 0x3755CF8
	0x037DF454 ADRP X8, 0x96A000
	0x037DF458 LDR X8, [X8 + 0x20]
	0x037DF45C STR X0, [X31 + 0xC8]
	0x037DF460 ADD X0, X31, 0xC8
	0x037DF464 MOVZ W2, 0x1
	0x037DF468 LDR X1, [X8]
	0x037DF46C MOV X3, X31
	0x037DF470 BL 0x375606C
	0x037DF474 LDR X2, [X20]
	0x037DF478 MOV X1, X0
	0x037DF47C ADD X0, X31, 0x78
	0x037DF480 STP X31, X31, [X31 + 0x78]
	0x037DF484 BL 0x243321C
	0x037DF488 ADRP X8, 0x969000
	0x037DF48C LDP X1, X2, [X31 + 0x78]
	0x037DF490 LDR X8, [X8 + 0xF30]

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+112], X29
	003 Move [X31+120], X30
	004 Move [X31+128], X28
	005 Move [X31+136], X27
	006 Move [X31+144], X26
	007 Move [X31+152], X25
	008 Move [X31+160], X24
	009 Move [X31+168], X23
	010 Move [X31+176], X22
	011 Move [X31+184], X21
	012 Move [X31+192], X20
	013 Move [X31+200], X19
	014 Move X21, 0xC04000
	015 Move X20, 0x96B000
	016 Move W8, [X21+706]
	017 Move X20, [X20+3664]
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {109}
	023 Move X0, 0x96B000
	024 Move X0, [X0+3664]
	025 Call 0x1C17CF4
	026 Move X0, 0x96B000
	027 Move X0, [X0+3672]
	028 Call 0x1C17CF4
	029 Move X0, 0x96B000
	030 Move X0, [X0+3680]
	031 Call 0x1C17CF4
	032 Move X0, 0x96B000
	033 Move X0, [X0+3688]
	034 Call 0x1C17CF4
	035 Move X0, 0x93E000
	036 Move X0, [X0+3352]
	037 Call 0x1C17CF4
	038 Move X0, 0x93E000
	039 Move X0, [X0+624]
	040 Call 0x1C17CF4
	041 Move X0, 0x917000
	042 Move X0, [X0+440]
	043 Call 0x1C17CF4
	044 Move X0, 0x93E000
	045 Move X0, [X0+2936]
	046 Call 0x1C17CF4
	047 Move X0, 0x91F000
	048 Move X0, [X0+272]
	049 Call 0x1C17CF4
	050 Move X0, 0x96B000
	051 Move X0, [X0+3696]
	052 Call 0x1C17CF4
	053 Move X0, 0x917000
	054 Move X0, [X0+448]
	055 Call 0x1C17CF4
	056 Move X0, 0x96B000
	057 Move X0, [X0+3704]
	058 Call 0x1C17CF4
	059 Move X0, 0x96B000
	060 Move X0, [X0+3656]
	061 Call 0x1C17CF4
	062 Move X0, 0x917000
	063 Move X0, [X0+464]
	064 Call 0x1C17CF4
	065 Move X0, 0x91A000
	066 Move X0, [X0+4056]
	067 Call 0x1C17CF4
	068 Move X0, 0x96B000
	069 Move X0, [X0+3616]
	070 Call 0x1C17CF4
	071 Move X0, 0x96B000
	072 Move X0, [X0+3712]
	073 Call 0x1C17CF4
	074 Move X0, 0x96A000
	075 Move X0, [X0+2368]
	076 Call 0x1C17CF4
	077 Move X0, 0x93E000
	078 Move X0, [X0+40]
	079 Call 0x1C17CF4
	080 Move X0, 0x96B000
	081 Move X0, [X0+1432]
	082 Call 0x1C17CF4
	083 Move X0, 0x96B000
	084 Move X0, [X0+3720]
	085 Call 0x1C17CF4
	086 Move X0, 0x96B000
	087 Move X0, [X0+3728]
	088 Call 0x1C17CF4
	089 Move X0, 0x96B000
	090 Move X0, [X0+3736]
	091 Call 0x1C17CF4
	092 Move X0, 0x96B000
	093 Move X0, [X0+3624]
	094 Call 0x1C17CF4
	095 Move X0, 0x96B000
	096 Move X0, [X0+1504]
	097 Call 0x1C17CF4
	098 Move X0, 0x968000
	099 Move X0, [X0+848]
	100 Call 0x1C17CF4
	101 Move X0, 0x96B000
	102 Move X0, [X0+1672]
	103 Call 0x1C17CF4
	104 Move X0, 0x96A000
	105 Move X0, [X0+2056]
	106 Call 0x1C17CF4
	107 Move W8, 1
	108 Move [X21+706], W8
	109 Move X0, [X20]
	110 Move [X31+80], X31
	111 Move [X31+88], X31
	112 Move [X31+96], X31
	113 Move [X31+64], X31
	114 Move [X31+72], X31
	115 Call 0x1C17F10
	116 Move X1, X31
	117 Move X22, X0
	118 Call Builder..ctor, X0
	119 Add X0, X31, 32
	120 Move W1, 88
	121 Move W2, 82
	122 Move W3, 83
	123 Move W4, 48
	124 Move X5, X31
	125 Move [X31+32], W31
	126 Call FourCC..ctor, X0, X1, X2, X3, X4
	127 Compare X22, 0
	128 JumpIfEqual {741}
	129 Move W8, [X31+32]
	130 Move X21, 0x91A000
	131 Move X23, 0x917000
	132 Move X20, 0x917000
	133 Move [X22+40], W8
	134 Move X1, [X19+16]
	135 Move X21, [X21+4056]
	136 Move X23, [X23+464]
	137 Move X20, [X20+448]
	138 Move X0, X22
	139 Move X2, X31
	140 Call Builder.set_extendsLayout, X0, X1
	141 Move X2, [X21]
	142 Add X0, X31, 60
	143 Move W1, 1
	144 NotImplemented "Instruction STRH not yet implemented."
	145 Call Nullable`1<Boolean>..ctor, X0, X1
	146 NotImplemented "Instruction LDRH not yet implemented."
	147 Move X1, X31
	148 NotImplemented "Instruction STRH not yet implemented."
	149 Move X0, [X19+16]
	150 Call String.IsNullOrEmpty, X0
	151 Move [X31+24], X31
	152 Move TEMP, X0
	153 And TEMP, TEMP, 1
	154 Compare TEMP, 1
	155 JumpIfEqual {168}
	156 Move X8, 0x93E000
	157 Move X8, [X8+624]
	158 Move X21, [X19+16]
	159 Move X0, [X8]
	160 Move W8, [X0+224]
	161 Compare W8, 0
	162 JumpIfNotEqual {164}
	163 Call 0x1C17DFC
	164 Move X0, X21
	165 Move X1, X31
	166 Call InputSystem.LoadLayout, X0
	167 Move [X31+24], X0
	168 Move X0, [X23]
	169 Move [X31+16], X22
	170 Call 0x1C17F10
	171 Move X1, [X20]
	172 Move [X31+8], X0
	173 Call List`1<Object>..ctor, X0
	174 Move X0, [X23]
	175 Call 0x1C17F10
	176 Move X1, [X20]
	177 Move X23, X0
	178 Call List`1<Object>..ctor, X0
	179 Move X8, [X19+32]
	180 Compare X8, 0
	181 JumpIfEqual {741}
	182 Move X29, 0x917000
	183 Move X21, 0x93E000
	184 Move X28, 0x96B000
	185 Move X29, [X29+440]
	186 Move X21, [X21+3352]
	187 Move X28, [X28+3680]
	188 Move W25, W31
	189 Move W24, W31
	190 Move X0, [X8+48]
	191 Compare X0, 0
	192 JumpIfEqual {741}
	193 Move W8, [X0+24]
	194 NotImplemented "Instruction CMP not yet implemented."
	195 Move X8, 0x96B000
	196 Move X8, [X8+3656]
	197 Move W1, W24
	198 Move X2, [X8]
	199 Add X8, X31, 32
	200 Call List`1<XRFeatureDescriptor>.get_Item, X0, X1
	201 Compare X23, 0
	202 JumpIfEqual {741}
	203 Move W2, [X23+24]
	204 Move W8, [X23+28]
	205 Move X26, [X31+32]
	206 Move X27, [X31+40]
	207 Move W20, [X31+48]
	208 Move W22, [X31+52]
	209 Add W8, W8, 1
	210 NotImplemented "Instruction CMP not yet implemented."
	211 Move [X23+24], W31
	212 Move [X23+28], W8
	213 Move X0, [X23+16]
	214 Move W1, W31
	215 Move X3, X31
	216 Call Array.Clear, X0, X1, X2
	217 Compare X27, 0
	218 JumpIfEqual {269}
	219 Move X8, 0x96B000
	220 Move X8, [X8+3696]
	221 Move X0, X27
	222 Move X1, [X8]
	223 Add X8, X31, 32
	224 Call List`1<UsageHint>.GetEnumerator, X0
	225 Move V0, [X31+2]
	226 Move X8, [X31+48]
	227 Move [X31+5], V0
	228 Move [X31+96], X8
	229 Move X1, [X28]
	230 Add X0, X31, 80
	231 Call Enumerator<UsageHint>.MoveNext, X0
	232 Move TEMP, X0
	233 And TEMP, TEMP, 1
	234 Compare TEMP, 1
	235 JumpIfNotEqual {264}
	236 Move X27, [X31+96]
	237 Move X0, X27
	238 Move X1, X31
	239 Call String.IsNullOrEmpty, X0
	240 Move TEMP, X0
	241 And TEMP, TEMP, 1
	242 Compare TEMP, 1
	243 JumpIfEqual {229}
	244 Move W10, [X23+28]
	245 Move X8, [X23+16]
	246 Move X9, [X29]
	247 Add W10, W10, 1
	248 Move [X23+28], W10
	249 Compare X8, 0
	250 JumpIfEqual {710}
	251 NotImplemented "Instruction LDRSW not yet implemented."
	252 Move W11, [X8+24]
	253 NotImplemented "Instruction CMP not yet implemented."
	254 Add W9, W10, 1
	255 Add X8, X8, X10
	256 Move [X23+24], W9
	257 Move [X8+32], X27
	258 Move X8, [X9+32]
	259 Move X8, [X8+192]
	260 Move X2, [X8+112]
	261 Move X0, X23
	262 Move X1, X27
	263 Call List`1<Object>.AddWithResize, X0, X1
	264 Move X8, 0x96B000
	265 Move X8, [X8+3672]
	266 Add X0, X31, 80
	267 Move X1, [X8]
	268 Call Enumerator<UsageHint>.Dispose, X0
	269 Move X8, 0x96B000
	270 Move X8, [X8+3616]
	271 Move X0, [X8]
	272 Move W8, [X0+224]
	273 Compare W8, 0
	274 JumpIfNotEqual {276}
	275 Call 0x1C17DFC
	276 Move W1, 1
	277 Move X0, X26
	278 Call XRLayoutBuilder.SanitizeString, X0, X1
	279 Move X8, [X31+24]
	280 Move X26, X0
	281 Compare X8, 0
	282 JumpIfEqual {294}
	283 Move X8, 0x96B000
	284 Move X8, [X8+3616]
	285 Move X0, [X8]
	286 Move W8, [X0+224]
	287 Compare W8, 0
	288 JumpIfNotEqual {290}
	289 Call 0x1C17DFC
	290 Move X0, [X31+24]
	291 Move X1, X26
	292 Call XRLayoutBuilder.ConvertPotentialAliasToName, X0, X1
	293 Move X26, X0
	294 Compare X26, 0
	295 JumpIfEqual {741}
	296 Move X0, X26
	297 Move X1, X31
	298 Call String.ToLower, X0
	299 Compare X0, 0
	300 JumpIfEqual {741}
	301 Move W1, 47
	302 Move X2, X31
	303 Move X26, X0
	304 Call String.Contains, X0, X1
	305 Move TEMP, X0
	306 And TEMP, TEMP, 1
	307 Compare TEMP, 1
	308 JumpIfNotEqual {373}
	309 Move X1, X26
	310 Call XRLayoutBuilder.GetParentControlName, X0, X1
	311 Move X27, X0
	312 Move X0, [X31+8]
	313 Compare X0, 0
	314 JumpIfEqual {741}
	315 Move X8, 0x91F000
	316 Move X8, [X8+272]
	317 Move X1, X27
	318 Move X2, [X8]
	319 Call List`1<Object>.Contains, X0, X1
	320 Move TEMP, X0
	321 And TEMP, TEMP, 1
	322 Compare TEMP, 1
	323 JumpIfEqual {373}
	324 Move X8, [X19+32]
	325 Compare X8, 0
	326 JumpIfEqual {741}
	327 Move X1, [X8+48]
	328 Move W2, W24
	329 Call XRLayoutBuilder.IsPoseControl, X0, X1, X2
	330 Move TEMP, X0
	331 And TEMP, TEMP, 1
	332 Compare TEMP, 1
	333 JumpIfNotEqual {373}
	334 Move X0, [X31+16]
	335 Move X1, X27
	336 Move X2, X31
	337 Call Builder.AddControl, X0, X1
	338 Move X8, 0x93E000
	339 Move X8, [X8+40]
	340 Move [X31+64], X0
	341 Move [X31+72], X1
	342 Add X0, X31, 64
	343 Move X2, X31
	344 Move X8, [X8]
	345 Move X1, X8
	346 Call ControlBuilder.WithLayout, X0, X1
	347 Move [X31+64], X0
	348 Move [X31+72], X1
	349 Add X0, X31, 64
	350 Move W1, W31
	351 Move X2, X31
	352 Call ControlBuilder.WithByteOffset, X0, X1
	353 Move X0, [X31+8]
	354 Move X9, [X29]
	355 Move W10, [X0+28]
	356 Move X8, [X0+16]
	357 Add W10, W10, 1
	358 Move [X0+28], W10
	359 Compare X8, 0
	360 JumpIfEqual {741}
	361 NotImplemented "Instruction LDRSW not yet implemented."
	362 Move W11, [X8+24]
	363 NotImplemented "Instruction CMP not yet implemented."
	364 Add W9, W10, 1
	365 Add X8, X8, X10
	366 Move [X0+24], W9
	367 Move [X8+32], X27
	368 Move X8, [X9+32]
	369 Move X1, X27
	370 Move X8, [X8+192]
	371 Move X2, [X8+112]
	372 Call List`1<Object>.AddWithResize, X0, X1
	373 Move X8, 0x96B000
	374 Move X8, [X8+3616]
	375 Move X0, [X8]
	376 Move W8, [X0+224]
	377 Compare W8, 0
	378 JumpIfNotEqual {380}
	379 Call 0x1C17DFC
	380 NotImplemented "Instruction CMP not yet implemented."
	381 Move X11, -46424064
	382 Move W8, W20
	383 Add X11, X11, 2442
	384 NotImplemented "Instruction ADR not yet implemented."
	385 Move W10, [X11]
	386 Add X9, X9, X10
	387 Move W27, 4
	388 CallNoReturn X9
	389 Move W27, W22
	390 Move W27, 8
	391 Move W27, 76
	392 Move W27, 1
	393 Move W27, 104
	394 Move W27, 12
	395 Move W27, 16
	396 Move W27, W31
	397 Move W27, 32
	398 Move X8, 0x96B000
	399 Move X0, [X19+24]
	400 Move X8, [X8+3624]
	401 Move X2, X31
	402 Move X1, [X8]
	403 Call String.op_Equality, X0, X1
	404 NotImplemented "Instruction CMP not yet implemented."
	405 Move TEMP, X0
	406 And TEMP, TEMP, 1
	407 Compare TEMP, 1
	408 Invalid "Jump target not found in method."
	409 Move W8, 4
	410 NotImplemented "Instruction CSEL not yet implemented."
	411 And W8, W25, 3
	412 Compare W8, 0
	413 JumpIfEqual {416}
	414 Add W8, W25, 4
	415 And W25, W8, 0xFFFFFFFC
	416 Subtract W8, W20, 1
	417 NotImplemented "Instruction CMP not yet implemented."
	418 Move X11, -46424064
	419 Add X11, X11, 2452
	420 NotImplemented "Instruction ADR not yet implemented."
	421 Move W10, [X11]
	422 Add X9, X9, X10
	423 CallNoReturn X9
	424 Move X0, [X31+16]
	425 Move X1, X26
	426 Move X2, X31
	427 Call Builder.AddControl, X0, X1
	428 Move X8, 0x968000
	429 Move X8, [X8+848]
	430 Move [X31+64], X0
	431 Move [X31+72], X1
	432 Add X0, X31, 64
	433 Move X2, X31
	434 Move X8, [X8]
	435 Move X1, X8
	436 Call ControlBuilder.WithLayout, X0, X1
	437 Move [X31+64], X0
	438 Move [X31+72], X1
	439 Add X0, X31, 64
	440 Move W1, W25
	441 Move X2, X31
	442 Call ControlBuilder.WithByteOffset, X0, X1
	443 Move X8, X0
	444 Move X0, [X21]
	445 Move [X31+64], X8
	446 Move [X31+72], X1
	447 Move W8, [X0+224]
	448 Compare W8, 0
	449 JumpIfNotEqual {452}
	450 Call 0x1C17DFC
	451 Move X0, [X21]
	452 Move X8, [X0+184]
	453 Move W1, [X8+4]
	454 Move X0, [X31+16]
	455 Move X1, X26
	456 Move X2, X31
	457 Call Builder.AddControl, X0, X1
	458 Move X8, 0x96A000
	459 Move X8, [X8+1432]
	460 Move [X31+64], X0
	461 Move [X31+72], X1
	462 Add X0, X31, 64
	463 Move X2, X31
	464 Move X8, [X8]
	465 Move X1, X8
	466 Call ControlBuilder.WithLayout, X0, X1
	467 Move [X31+64], X0
	468 Move [X31+72], X1
	469 Add X0, X31, 64
	470 Move W1, W25
	471 Move X2, X31
	472 Call ControlBuilder.WithByteOffset, X0, X1
	473 Move X8, X0
	474 Move X0, [X21]
	475 Move [X31+64], X8
	476 Move [X31+72], X1
	477 Move W8, [X0+224]
	478 Compare W8, 0
	479 JumpIfNotEqual {482}
	480 Call 0x1C17DFC
	481 Move X0, [X21]
	482 Move X8, [X0+184]
	483 Move W1, [X8+60]
	484 Move X0, [X31+16]
	485 Move X1, X26
	486 Move X2, X31
	487 Call Builder.AddControl, X0, X1
	488 Move X8, 0x969000
	489 Move X8, [X8+2056]
	490 Move [X31+64], X0
	491 Move [X31+72], X1
	492 Add X0, X31, 64
	493 Move X2, X31
	494 Move X8, [X8]
	495 Move X1, X8
	496 Call ControlBuilder.WithLayout, X0, X1
	497 Move [X31+64], X0
	498 Move [X31+72], X1
	499 Add X0, X31, 64
	500 Move W1, W25
	501 Move X2, X31
	502 Call ControlBuilder.WithByteOffset, X0, X1
	503 Move X8, X0
	504 Move X0, [X21]
	505 Move [X31+64], X8
	506 Move [X31+72], X1
	507 Move W8, [X0+224]
	508 Compare W8, 0
	509 JumpIfNotEqual {512}
	510 Call 0x1C17DFC
	511 Move X0, [X21]
	512 Move X8, [X0+184]
	513 Move W1, [X8+12]
	514 Move X0, [X31+16]
	515 Move X1, X26
	516 Move X2, X31
	517 Call Builder.AddControl, X0, X1
	518 Move X8, 0x96A000
	519 Move X8, [X8+3728]
	520 Move X0, [X31+16]
	521 Move X1, X26
	522 Move X2, X31
	523 Call Builder.AddControl, X0, X1
	524 Move X8, 0x96A000
	525 Move X8, [X8+3720]
	526 Move X8, [X8]
	527 Move [X31+64], X0
	528 Move [X31+72], X1
	529 Add X0, X31, 64
	530 Move X2, X31
	531 Move X1, X8
	532 Call ControlBuilder.WithLayout, X0, X1
	533 Move [X31+64], X0
	534 Move [X31+72], X1
	535 Add X0, X31, 64
	536 Move W1, W25
	537 Move X2, X31
	538 Call ControlBuilder.WithByteOffset, X0, X1
	539 Move X0, [X31+16]
	540 Move X1, X26
	541 Move X2, X31
	542 Call Builder.AddControl, X0, X1
	543 Move X8, 0x969000
	544 Move X8, [X8+2368]
	545 Move [X31+64], X0
	546 Move [X31+72], X1
	547 Add X0, X31, 64
	548 Move X2, X31
	549 Move X8, [X8]
	550 Move X1, X8
	551 Call ControlBuilder.WithLayout, X0, X1
	552 Move [X31+64], X0
	553 Move [X31+72], X1
	554 Add X0, X31, 64
	555 Move S0, -1
	556 Move S1, 1
	557 Move X1, X31
	558 Call ControlBuilder.WithRange, X0, V0, V1
	559 Move [X31+64], X0
	560 Move [X31+72], X1
	561 Add X0, X31, 64
	562 Move W1, W25
	563 Move X2, X31
	564 Call ControlBuilder.WithByteOffset, X0, X1
	565 Move X8, X0
	566 Move X0, [X21]
	567 Move [X31+64], X8
	568 Move [X31+72], X1
	569 Move W8, [X0+224]
	570 Compare W8, 0
	571 JumpIfNotEqual {574}
	572 Call 0x1C17DFC
	573 Move X0, [X21]
	574 Move X8, [X0+184]
	575 Move W1, [X8+44]
	576 Move X0, [X31+16]
	577 Move X1, X26
	578 Move X2, X31
	579 Call Builder.AddControl, X0, X1
	580 Move X8, 0x96A000
	581 Move X8, [X8+1504]
	582 Move [X31+64], X0
	583 Move [X31+72], X1
	584 Add X0, X31, 64
	585 Move X2, X31
	586 Move X8, [X8]
	587 Move X1, X8
	588 Call ControlBuilder.WithLayout, X0, X1
	589 Move [X31+64], X0
	590 Move [X31+72], X1
	591 Add X0, X31, 64
	592 Move W1, W25
	593 Move X2, X31
	594 Call ControlBuilder.WithByteOffset, X0, X1
	595 Move X8, X0
	596 Move X0, [X21]
	597 Move [X31+64], X8
	598 Move [X31+72], X1
	599 Move W8, [X0+224]
	600 Compare W8, 0
	601 JumpIfNotEqual {604}
	602 Call 0x1C17DFC
	603 Move X0, [X21]
	604 Move X8, [X0+184]
	605 Add X0, X31, 64
	606 Move X2, X31
	607 Move W1, [X8+52]
	608 Call ControlBuilder.WithFormat, X0, X1
	609 Move [X31+64], X0
	610 Move [X31+72], X1
	611 Add X0, X31, 64
	612 Move X1, X23
	613 Move X2, X31
	614 Call ControlBuilder.WithUsages, X0, X1
	615 Move X8, 0x96A000
	616 Move X8, [X8+3736]
	617 Move X0, X26
	618 Move X2, X31
	619 Move X1, [X8]
	620 Call String.Concat, X0, X1
	621 Move X20, [X31+16]
	622 Move X1, X0
	623 Move X2, X31
	624 Move X0, X20
	625 Call Builder.AddControl, X0, X1
	626 Move X22, 0x969000
	627 Move X22, [X22+2368]
	628 Move [X31+64], X0
	629 Move [X31+72], X1
	630 Add X0, X31, 64
	631 Move X2, X31
	632 Move X8, [X22]
	633 Move X1, X8
	634 Call ControlBuilder.WithLayout, X0, X1
	635 Move [X31+64], X0
	636 Move [X31+72], X1
	637 Add X0, X31, 64
	638 Move S0, -1
	639 Move S1, 1
	640 Move X1, X31
	641 Call ControlBuilder.WithRange, X0, V0, V1
	642 Move X8, 0x96A000
	643 Move X8, [X8+3712]
	644 Move X0, X26
	645 Move X2, X31
	646 Move X1, [X8]
	647 Call String.Concat, X0, X1
	648 Move X1, X0
	649 Move X0, X20
	650 Move X2, X31
	651 Call Builder.AddControl, X0, X1
	652 Move X8, [X22]
	653 Move [X31+64], X0
	654 Move [X31+72], X1
	655 Add X0, X31, 64
	656 Move X2, X31
	657 Move X1, X8
	658 Call ControlBuilder.WithLayout, X0, X1
	659 Move [X31+64], X0
	660 Move [X31+72], X1
	661 Add X0, X31, 64
	662 Move S0, -1
	663 Move S1, 1
	664 Move X1, X31
	665 Call ControlBuilder.WithRange, X0, V0, V1
	666 Move X0, [X31+16]
	667 Move X1, X26
	668 Move X2, X31
	669 Call Builder.AddControl, X0, X1
	670 Move X8, 0x96A000
	671 Move X8, [X8+1672]
	672 Move [X31+64], X0
	673 Move [X31+72], X1
	674 Add X0, X31, 64
	675 Move X2, X31
	676 Move X8, [X8]
	677 Move X1, X8
	678 Call ControlBuilder.WithLayout, X0, X1
	679 Move [X31+64], X0
	680 Move [X31+72], X1
	681 Add X0, X31, 64
	682 Move W1, W25
	683 Move X2, X31
	684 Call ControlBuilder.WithByteOffset, X0, X1
	685 Move X8, X0
	686 Move X0, [X21]
	687 Move [X31+64], X8
	688 Move [X31+72], X1
	689 Move W8, [X0+224]
	690 Compare W8, 0
	691 JumpIfNotEqual {694}
	692 Call 0x1C17DFC
	693 Move X0, [X21]
	694 Move X8, [X0+184]
	695 Move W1, [X8+56]
	696 Add X0, X31, 64
	697 Move X2, X31
	698 Call ControlBuilder.WithFormat, X0, X1
	699 Move [X31+64], X0
	700 Move [X31+72], X1
	701 Add X0, X31, 64
	702 Move X1, X23
	703 Move X2, X31
	704 Call ControlBuilder.WithUsages, X0, X1
	705 Move X8, [X19+32]
	706 Add W25, W25, W27
	707 Add W24, W24, 1
	708 Compare X8, 0
	709 JumpIfNotEqual {190}
	710 Call 0x1C17F20
	711 NotImplemented "Instruction CMP not yet implemented."
	712 Call 0x3EB2AD0
	713 Move X27, [X0]
	714 Call 0x3EB2AE0
	715 Move X8, 0x96A000
	716 Move X8, [X8+3672]
	717 Add X0, X31, 80
	718 Move X1, [X8]
	719 Call Enumerator<UsageHint>.Dispose, X0
	720 Compare X27, 0
	721 JumpIfEqual {269}
	722 Move X0, X27
	723 Call 0x1C17F18
	724 Move X0, [X31+16]
	725 Move X1, X31
	726 Call Builder.Build, X0
	727 Move X20, [X31+192]
	728 Move X19, [X31+200]
	729 Move X22, [X31+176]
	730 Move X21, [X31+184]
	731 Move X24, [X31+160]
	732 Move X23, [X31+168]
	733 Move X26, [X31+144]
	734 Move X25, [X31+152]
	735 Move X28, [X31+128]
	736 Move X27, [X31+136]
	737 Move X29, [X31+112]
	738 Move X30, [X31+120]
	739 Add X31, X31, 208
	740 Return X0
	741 Call 0x1C17F20
	742 Move X19, X0
	743 Move X27, X31
	744 Move X19, X0
	745 Move X8, 0x96A000
	746 Move X8, [X8+3672]
	747 Move X1, [X8]
	748 Add X0, X31, 80
	749 Call Enumerator<UsageHint>.Dispose, X0
	750 Compare X27, 0
	751 JumpIfNotEqual {754}
	752 Move X0, X19
	753 Call 0x1D2D690
	754 Move X0, X27
	755 Call 0x1C17F18
	756 Call 0x1991590

Method: System.Void .ctor()

Disassembly:
	0x037DE698 LDP S0, S1, [X0]
	0x037DE69C LDR V2, [X0 + 0x8]

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Void .cctor()

Disassembly:
	0x037DF494 MOV X0, X31
	0x037DF498 LDR X3, [X8]
	0x037DF49C BL 0x220C738
	0x037DF4A0 LDR X1, [X22]
	0x037DF4A4 ADD X0, X31, 0xC8
	0x037DF4A8 MOVZ W2, 0x1
	0x037DF4AC MOV X3, X31
	0x037DF4B0 STR X31, [X31 + 0xC8]
	0x037DF4B4 BL 0x3755CF8
	0x037DF4B8 ADRP X8, 0x96A000
	0x037DF4BC LDR X8, [X8 + 0x8]
	0x037DF4C0 STR X0, [X31 + 0xC8]
	0x037DF4C4 ADD X0, X31, 0xC8
	0x037DF4C8 MOVZ W2, 0x1
	0x037DF4CC LDR X1, [X8]
	0x037DF4D0 MOV X3, X31
	0x037DF4D4 BL 0x375606C
	0x037DF4D8 LDR X2, [X20]
	0x037DF4DC MOV X1, X0
	0x037DF4E0 ADD X0, X31, 0x68
	0x037DF4E4 STP X31, X31, [X31 + 0x68]
	0x037DF4E8 BL 0x243321C
	0x037DF4EC ADRP X8, 0x969000
	0x037DF4F0 LDP X1, X2, [X31 + 0x68]
	0x037DF4F4 LDR X8, [X8 + 0xF60]
	0x037DF4F8 MOV X0, X31
	0x037DF4FC LDR X3, [X8]
	0x037DF500 BL 0x220C738
	0x037DF504 LDR X1, [X22]
	0x037DF508 ADD X0, X31, 0xC8
	0x037DF50C MOVZ W2, 0x1
	0x037DF510 MOV X3, X31
	0x037DF514 STR X31, [X31 + 0xC8]
	0x037DF518 BL 0x3755CF8
	0x037DF51C ADRP X8, 0x969000
	0x037DF520 LDR X8, [X8 + 0xFE0]
	0x037DF524 STR X0, [X31 + 0xC8]
	0x037DF528 ADD X0, X31, 0xC8
	0x037DF52C MOVZ W2, 0x1
	0x037DF530 LDR X1, [X8]
	0x037DF534 MOV X3, X31
	0x037DF538 BL 0x375606C
	0x037DF53C LDR X2, [X20]
	0x037DF540 MOV X1, X0
	0x037DF544 ADD X0, X31, 0x58
	0x037DF548 STP X31, X31, [X31 + 0x58]
	0x037DF54C BL 0x243321C
	0x037DF550 ADRP X8, 0x969000
	0x037DF554 LDP X1, X2, [X31 + 0x58]
	0x037DF558 LDR X8, [X8 + 0xF58]
	0x037DF55C MOV X0, X31
	0x037DF560 LDR X3, [X8]
	0x037DF564 BL 0x220C738
	0x037DF568 LDR X1, [X22]
	0x037DF56C ADD X0, X31, 0xC8
	0x037DF570 MOVZ W2, 0x1
	0x037DF574 MOV X3, X31
	0x037DF578 STR X31, [X31 + 0xC8]
	0x037DF57C BL 0x3755CF8
	0x037DF580 ADRP X19, 0x969000
	0x037DF584 LDR X19, [X19 + 0xFE8]
	0x037DF588 STR X0, [X31 + 0xC8]
	0x037DF58C ADD X0, X31, 0xC8
	0x037DF590 MOVZ W2, 0x1
	0x037DF594 LDR X1, [X19]
	0x037DF598 MOV X3, X31
	0x037DF59C BL 0x3755FF4
	0x037DF5A0 ADRP X8, 0x96A000
	0x037DF5A4 LDR X8, [X8]
	0x037DF5A8 STR X0, [X31 + 0xC8]
	0x037DF5AC ADD X0, X31, 0xC8
	0x037DF5B0 MOVZ W2, 0x1
	0x037DF5B4 LDR X1, [X8]
	0x037DF5B8 MOV X3, X31
	0x037DF5BC BL 0x375606C
	0x037DF5C0 LDR X2, [X20]
	0x037DF5C4 MOV X1, X0
	0x037DF5C8 ADD X0, X31, 0x48
	0x037DF5CC STP X31, X31, [X31 + 0x48]
	0x037DF5D0 BL 0x243321C
	0x037DF5D4 ADRP X8, 0x969000
	0x037DF5D8 LDP X1, X2, [X31 + 0x48]
	0x037DF5DC LDR X8, [X8 + 0xF88]
	0x037DF5E0 MOV X0, X31
	0x037DF5E4 LDR X3, [X8]
	0x037DF5E8 BL 0x220C738
	0x037DF5EC LDR X1, [X22]
	0x037DF5F0 ADD X0, X31, 0xC8
	0x037DF5F4 MOVZ W2, 0x1
	0x037DF5F8 MOV X3, X31
	0x037DF5FC STR X31, [X31 + 0xC8]
	0x037DF600 BL 0x3755CF8
	0x037DF604 ADRP X8, 0x969000
	0x037DF608 LDR X8, [X8 + 0xFC8]
	0x037DF60C STR X0, [X31 + 0xC8]
	0x037DF610 ADD X0, X31, 0xC8
	0x037DF614 MOVZ W2, 0x1
	0x037DF618 LDR X1, [X8]
	0x037DF61C MOV X3, X31
	0x037DF620 BL 0x375606C
	0x037DF624 LDR X2, [X20]
	0x037DF628 MOV X1, X0
	0x037DF62C ADD X0, X31, 0x38

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xC03000
	005 Move X20, 0x915000
	006 Move W8, [X19+707]
	007 Move X20, [X20+2760]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {44}
	012 Move X0, 0x96A000
	013 Move X0, [X0+3744]
	014 Call 0x1C17CF4
	015 Move X0, 0x915000
	016 Move X0, [X0+2760]
	017 Call 0x1C17CF4
	018 Move X0, 0x96A000
	019 Move X0, [X0+3752]
	020 Call 0x1C17CF4
	021 Move X0, 0x96A000
	022 Move X0, [X0+3616]
	023 Call 0x1C17CF4
	024 Move X0, 0x96A000
	025 Move X0, [X0+3760]
	026 Call 0x1C17CF4
	027 Move X0, 0x96A000
	028 Move X0, [X0+3768]
	029 Call 0x1C17CF4
	030 Move X0, 0x96A000
	031 Move X0, [X0+3776]
	032 Call 0x1C17CF4
	033 Move X0, 0x96A000
	034 Move X0, [X0+3784]
	035 Call 0x1C17CF4
	036 Move X0, 0x96A000
	037 Move X0, [X0+3792]
	038 Call 0x1C17CF4
	039 Move X0, 0x96A000
	040 Move X0, [X0+3800]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X19+707], W8
	044 Move X0, [X20]
	045 Move W1, 6
	046 Call 0x1C17D6C
	047 Compare X0, 0
	048 JumpIfEqual {105}
	049 Move W8, [X0+24]
	050 Compare W8, 0
	051 JumpIfEqual {104}
	052 Move X9, 0x96A000
	053 Move X9, [X9+3784]
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move X9, [X9]
	056 Move [X0+32], X9
	057 Move X9, 0x96A000
	058 Move X9, [X9+3776]
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move X9, [X9]
	061 Move [X0+40], X9
	062 Move X9, 0x96A000
	063 Move X9, [X9+3760]
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move X9, [X9]
	066 Move [X0+48], X9
	067 Move X9, 0x96A000
	068 Move X9, [X9+3792]
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move X9, [X9]
	071 Move [X0+56], X9
	072 Move X9, 0x96A000
	073 Move X9, [X9+3768]
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move X9, [X9]
	076 Move [X0+64], X9
	077 Move X8, 0x96A000
	078 Move X8, [X8+3800]
	079 Move X20, 0x96A000
	080 Move X9, 0x96A000
	081 Move X19, 0x96A000
	082 Move X8, [X8]
	083 Move X20, [X20+3616]
	084 Move W1, 6
	085 Move [X0+72], X8
	086 Move X8, [X20]
	087 Move X8, [X8+184]
	088 Move X9, [X9+3744]
	089 Move [X8], X0
	090 Move X0, [X9]
	091 Move X19, [X19+3752]
	092 Call 0x1C17D6C
	093 Move X1, [X19]
	094 Move X2, X31
	095 Move X19, X0
	096 Call RuntimeHelpers.InitializeArray, X0, X1
	097 Move X8, [X20]
	098 Move X8, [X8+184]
	099 Move [X8+8], X19
	100 Move X20, [X31+16]
	101 Move X19, [X31+24]
	102 Move X30, [X31+32]
	103 Return 
	104 Call 0x1C17F28
	105 Call 0x1C17F20

