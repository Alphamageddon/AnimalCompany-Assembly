Type: UnityEngine.InputSystem.InputControlScheme/MatchResult/Enumerator

Method: System.Boolean MoveNext()

Disassembly:
	0x0376CD4C BL 0x1C16DFC
	0x0376CD50 LDR X0, [X22]
	0x0376CD54 LDR X8, [X0 + 0xB8]
	0x0376CD58 LDR X0, [X8]
	0x0376CD5C CBZ X0, 0x376CDD8
	0x0376CD60 MOV X1, X21
	0x0376CD64 MOV X2, X19
	0x0376CD68 MOV W3, W31
	0x0376CD6C MOV X4, X31
	0x0376CD70 BL 0x37BC6F8
	0x0376CD74 ANDS W31, W20, 0xFF

ISIL:
	001 Move W8, [X0]
	002 Move X9, [X0+8]
	003 Add W8, W8, 1
	004 Move [X0], W8
	005 Compare X9, 0
	006 JumpIfEqual {11}
	007 Move W9, [X9+24]
	008 NotImplemented "Instruction CMP not yet implemented."
	009 NotImplemented "Instruction CSET not yet implemented."
	010 Return X0
	011 Move W0, W31
	012 Return X0

Method: System.Void Reset()

Disassembly:
	0x0376CD78 B.EQ 0x376CDC4
	0x0376CD7C LDR X0, [X22]
	0x0376CD80 ADRP X21, 0x9DA000

ISIL:
	001 Move TEMP, 0
	002 Not TEMP
	003 Move W8, TEMP
	004 Move [X0], W8
	005 Return 

Method: UnityEngine.InputSystem.InputControlScheme/MatchResult/Match get_Current()

Disassembly:
	0x0376CD84 LDR W8, [X0 + 0xE0]
	0x0376CD88 LDR X21, [X21 + 0x7E0]
	0x0376CD8C CBNZ W8, 0x376CD98
	0x0376CD90 BL 0x1C16DFC
	0x0376CD94 LDR X0, [X22]
	0x0376CD98 LDR X8, [X0 + 0xB8]
	0x0376CD9C LDR X1, [X21]
	0x0376CDA0 ADD X0, X31, 0x0
	0x0376CDA4 LDR X20, [X8]
	0x0376CDA8 BL 0x2433234
	0x0376CDAC CBZ X20, 0x376CDD8
	0x0376CDB0 MOV X2, X0
	0x0376CDB4 MOV X0, X20
	0x0376CDB8 MOV X1, X19
	0x0376CDBC MOV X3, X31
	0x0376CDC0 BL 0x37C3154
	0x0376CDC4 LDP X20, X19, [X31 + 0x30]
	0x0376CDC8 LDP X22, X21, [X31 + 0x20]
	0x0376CDCC LDP X30, X23, [X31 + 0x10]
	0x0376CDD0 ADD X31, X31, 0x40
	0x0376CDD4 RET
	0x0376CDD8 BL 0x1C16F20
	0x0376CDDC STR X30, [X31 - 0x30]!
	0x0376CDE0 STP X22, X21, [X31 + 0x10]
	0x0376CDE4 STP X20, X19, [X31 + 0x20]
	0x0376CDE8 ADRP X22, 0xC74000
	0x0376CDEC ADRP X21, 0x9AF000
	0x0376CDF0 LDRB W8, [X22 + 0xEC1]
	0x0376CDF4 LDR X21, [X21 + 0x270]
	0x0376CDF8 MOV X19, X1
	0x0376CDFC MOV X20, X0
	0x0376CE00 TBNZ X8, 0x0, 0x376CE18

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X9, [X0+8]
	004 Compare X9, 0
	005 JumpIfEqual {23}
	006 Move W10, [X0]
	007 Move TEMP, X10
	008 And TEMP, TEMP, -2147483648
	009 Compare TEMP, -2147483648
	010 JumpIfEqual {23}
	011 Move W11, [X9+24]
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Move [X8], W10
	014 Move [X8+4], W31
	015 Move [X8+8], X9
	016 Move V1, [X0+16]
	017 Move V0, [X0+32]
	018 Move [X8+16], V1
	019 Move [X8+24], V0
	020 Move X30, [X31+16]
	021 Move X19, [X31+24]
	022 Return X0
	023 Move X0, 0x988000
	024 Move X0, [X0+1456]
	025 Call 0x1C17D08
	026 Call 0x1C17F10
	027 Move X19, X0
	028 Move X0, 0x9B3000
	029 Move X0, [X0+3176]
	030 Call 0x1C17D08
	031 Move X1, X0
	032 Move X0, X19
	033 Move X2, X31
	034 Call InvalidOperationException..ctor, X0, X1
	035 Move X0, 0x9DB000
	036 Move X0, [X0+1936]
	037 Call 0x1C17D08
	038 Move X1, X0
	039 Move X0, X19
	040 Call 0x1C17DEC

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x0376CE04 ADRP X0, 0x9AF000
	0x0376CE08 LDR X0, [X0 + 0x270]
	0x0376CE0C BL 0x1C16CF4
	0x0376CE10 MOVZ W8, 0x1
	0x0376CE14 STRB W8, [X22 + 0xEC1]
	0x0376CE18 LDR X0, [X21]
	0x0376CE1C LDR W8, [X0 + 0xE0]
	0x0376CE20 CBNZ W8, 0x376CE2C
	0x0376CE24 BL 0x1C16DFC
	0x0376CE28 LDR X0, [X21]
	0x0376CE2C LDR X8, [X0 + 0xB8]
	0x0376CE30 LDR X0, [X8]
	0x0376CE34 CBZ X0, 0x376CE58
	0x0376CE38 MOV X1, X20
	0x0376CE3C MOV X2, X19
	0x0376CE40 LDP X20, X19, [X31 + 0x20]
	0x0376CE44 LDP X22, X21, [X31 + 0x10]
	0x0376CE48 MOVZ W3, 0x1
	0x0376CE4C MOV X4, X31
	0x0376CE50 LDR X30, [X31], #0x30
	0x0376CE54 B 0x37BC6F8
	0x0376CE58 BL 0x1C16F20
	0x0376CE5C STR X30, [X31 - 0x30]!
	0x0376CE60 STP X22, X21, [X31 + 0x10]
	0x0376CE64 STP X20, X19, [X31 + 0x20]
	0x0376CE68 ADRP X22, 0xC74000
	0x0376CE6C ADRP X21, 0x9AF000
	0x0376CE70 LDRB W8, [X22 + 0xEC2]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+96], X30
	003 Move [X31+104], X21
	004 Move [X31+112], X20
	005 Move [X31+120], X19
	006 Move X21, 0xC75000
	007 Move X20, 0x9DB000
	008 Move W8, [X21+3764]
	009 Move X20, [X20+1944]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x9DB000
	016 Move X0, [X0+1944]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+3764], W8
	020 Add X8, X31, 48
	021 Move X0, X19
	022 Call Enumerator.get_Current, X0
	023 Move V0, [X31+48]
	024 Move V1, [X31+64]
	025 Move V2, [X31+5]
	026 Move X0, [X20]
	027 Add X1, X31, 0
	028 Move [X31], V0
	029 Move [X31+8], V1
	030 Move [X31+2], V2
	031 Call 0x1C17E04
	032 Move X20, [X31+112]
	033 Move X19, [X31+120]
	034 Move X30, [X31+96]
	035 Move X21, [X31+104]
	036 Add X31, X31, 128
	037 Return X0

Method: System.Void Dispose()

Disassembly:
	0x0376CE74 LDR X21, [X21 + 0x270]

ISIL:
	001 Return 

