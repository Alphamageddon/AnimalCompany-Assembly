Type: UnityEngine.InputSystem.Joystick

Method: UnityEngine.InputSystem.Controls.ButtonControl get_trigger()

Disassembly:
	0x0377D294 LDR X0, [X0 + 0x158]
	0x0377D298 BL 0x1C16CF4

ISIL:
	001 Move X0, [X0+368]
	002 Return X0

Method: System.Void set_trigger(UnityEngine.InputSystem.Controls.ButtonControl value)

Disassembly:
	0x0377D29C ADRP X0, 0x9A3000
	0x0377D2A0 LDR X0, [X0 + 0x3B8]

ISIL:
	001 Move [X0+368], X1
	002 Return 

Method: UnityEngine.InputSystem.Controls.StickControl get_stick()

Disassembly:
	0x0377D2A4 BL 0x1C16CF4
	0x0377D2A8 ADRP X0, 0x9CA000

ISIL:
	001 Move X0, [X0+376]
	002 Return X0

Method: System.Void set_stick(UnityEngine.InputSystem.Controls.StickControl value)

Disassembly:
	0x0377D2AC LDR X0, [X0 + 0x160]
	0x0377D2B0 BL 0x1C16CF4

ISIL:
	001 Move [X0+376], X1
	002 Return 

Method: UnityEngine.InputSystem.Controls.AxisControl get_twist()

Disassembly:
	0x0377D2B4 ADRP X0, 0x9CA000
	0x0377D2B8 LDR X0, [X0 + 0x168]

ISIL:
	001 Move X0, [X0+384]
	002 Return X0

Method: System.Void set_twist(UnityEngine.InputSystem.Controls.AxisControl value)

Disassembly:
	0x0377D2BC BL 0x1C16CF4
	0x0377D2C0 ADRP X0, 0x988000

ISIL:
	001 Move [X0+384], X1
	002 Return 

Method: UnityEngine.InputSystem.Controls.Vector2Control get_hatswitch()

Disassembly:
	0x0377D2C4 LDR X0, [X0 + 0x8B0]
	0x0377D2C8 BL 0x1C16CF4

ISIL:
	001 Move X0, [X0+392]
	002 Return X0

Method: System.Void set_hatswitch(UnityEngine.InputSystem.Controls.Vector2Control value)

Disassembly:
	0x0377D2CC ADRP X0, 0x9CA000
	0x0377D2D0 LDR X0, [X0 + 0x170]

ISIL:
	001 Move [X0+392], X1
	002 Return 

Method: UnityEngine.InputSystem.Joystick get_current()

Disassembly:
	0x0377D2D4 BL 0x1C16CF4
	0x0377D2D8 ADRP X0, 0x9CA000
	0x0377D2DC LDR X0, [X0 + 0x178]
	0x0377D2E0 BL 0x1C16CF4
	0x0377D2E4 ADRP X0, 0x9AD000
	0x0377D2E8 LDR X0, [X0 + 0x1A0]
	0x0377D2EC BL 0x1C16CF4
	0x0377D2F0 ADRP X0, 0x9CA000
	0x0377D2F4 LDR X0, [X0 + 0x180]
	0x0377D2F8 BL 0x1C16CF4
	0x0377D2FC ADRP X0, 0x9CA000
	0x0377D300 LDR X0, [X0 + 0x188]
	0x0377D304 BL 0x1C16CF4
	0x0377D308 ADRP X0, 0x9BD000
	0x0377D30C LDR X0, [X0 + 0xDD0]
	0x0377D310 BL 0x1C16CF4
	0x0377D314 ADRP X0, 0x9CA000
	0x0377D318 LDR X0, [X0 + 0x190]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xC64000
	005 Move X20, 0x9CB000
	006 Move W8, [X19+3954]
	007 Move X20, [X20+8]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x9CB000
	013 Move X0, [X0+8]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+3954], W8
	017 Move X8, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X8, [X8+184]
	021 Move X0, [X8]
	022 Move X30, [X31+32]
	023 Return X0

Method: System.Void set_current(UnityEngine.InputSystem.Joystick value)

Disassembly:
	0x0377D31C BL 0x1C16CF4
	0x0377D320 ADRP X0, 0x9A3000
	0x0377D324 LDR X0, [X0 + 0x3C0]
	0x0377D328 BL 0x1C16CF4
	0x0377D32C ADRP X0, 0x9CA000
	0x0377D330 LDR X0, [X0 + 0x198]
	0x0377D334 BL 0x1C16CF4
	0x0377D338 ADRP X0, 0x9CA000
	0x0377D33C LDR X0, [X0 + 0x1A0]
	0x0377D340 BL 0x1C16CF4
	0x0377D344 ADRP X0, 0x9CA000
	0x0377D348 LDR X0, [X0 + 0x1A8]
	0x0377D34C BL 0x1C16CF4
	0x0377D350 ADRP X0, 0x9CA000
	0x0377D354 LDR X0, [X0 + 0x1B0]
	0x0377D358 BL 0x1C16CF4
	0x0377D35C ADRP X0, 0x9CA000
	0x0377D360 LDR X0, [X0 + 0x1B8]
	0x0377D364 BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xC64000
	006 Move X21, 0x9CB000
	007 Move W8, [X20+3955]
	008 Move X21, [X21+8]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x9CB000
	015 Move X0, [X0+8]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3955], W8
	019 Move X8, [X21]
	020 Move X8, [X8+184]
	021 Move [X8], X19
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X30, [X31+32]
	025 Move X21, [X31+40]
	026 Return 

Method: UnityEngine.InputSystem.Utilities.ReadOnlyArray`1<UnityEngine.InputSystem.Joystick> get_all()

Disassembly:
	0x0377D368 ADRP X0, 0x9CA000
	0x0377D36C LDR X0, [X0 + 0x1C0]
	0x0377D370 BL 0x1C16CF4
	0x0377D374 ADRP X0, 0x9CA000
	0x0377D378 LDR X0, [X0 + 0x1C8]
	0x0377D37C BL 0x1C16CF4
	0x0377D380 ADRP X0, 0x9CA000
	0x0377D384 LDR X0, [X0 + 0x1D0]
	0x0377D388 BL 0x1C16CF4
	0x0377D38C ADRP X0, 0x9CA000
	0x0377D390 LDR X0, [X0 + 0x1D8]
	0x0377D394 BL 0x1C16CF4
	0x0377D398 ADRP X0, 0x9AB000
	0x0377D39C LDR X0, [X0 + 0x538]
	0x0377D3A0 BL 0x1C16CF4
	0x0377D3A4 ADRP X0, 0x9CA000
	0x0377D3A8 LDR X0, [X0 + 0x1E0]
	0x0377D3AC BL 0x1C16CF4
	0x0377D3B0 ADRP X0, 0x9CA000
	0x0377D3B4 LDR X0, [X0 + 0x1E8]
	0x0377D3B8 BL 0x1C16CF4
	0x0377D3BC ADRP X0, 0x9CA000
	0x0377D3C0 LDR X0, [X0 + 0x1F0]
	0x0377D3C4 BL 0x1C16CF4
	0x0377D3C8 ADRP X0, 0x9CA000
	0x0377D3CC LDR X0, [X0 + 0x1F8]
	0x0377D3D0 BL 0x1C16CF4
	0x0377D3D4 ADRP X0, 0x9CA000
	0x0377D3D8 LDR X0, [X0 + 0x200]
	0x0377D3DC BL 0x1C16CF4
	0x0377D3E0 ADRP X0, 0x9CA000
	0x0377D3E4 LDR X0, [X0 + 0x208]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xC64000
	007 Move X21, 0x9CB000
	008 Move X19, 0x9CB000
	009 Move W8, [X20+3956]
	010 Move X21, [X21+8]
	011 Move X19, [X19+16]
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x9CB000
	017 Move X0, [X0+8]
	018 Call 0x1C17CF4
	019 Move X0, 0x9CB000
	020 Move X0, [X0+16]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X20+3956], W8
	024 Move X8, [X21]
	025 Move X4, [X19]
	026 Add X0, X31, 0
	027 Move W2, W31
	028 Move X8, [X8+184]
	029 Move X1, [X8+16]
	030 Move W3, [X8+8]
	031 Move [X31], X31
	032 Move [X31+8], X31
	033 Call ReadOnlyArray`1<Object>..ctor, X0, X1, X2, X3
	034 Move X0, [X31]
	035 Move X1, [X31+8]
	036 Move X20, [X31+32]
	037 Move X19, [X31+40]
	038 Move X30, [X31+16]
	039 Move X21, [X31+24]
	040 Add X31, X31, 48
	041 Return X0

Method: System.Void FinishSetup()

Disassembly:
	0x0377D3E8 BL 0x1C16CF4
	0x0377D3EC ADRP X0, 0x9A8000
	0x0377D3F0 LDR X0, [X0 + 0x718]
	0x0377D3F4 BL 0x1C16CF4
	0x0377D3F8 ADRP X0, 0x9CA000
	0x0377D3FC LDR X0, [X0 + 0x210]
	0x0377D400 BL 0x1C16CF4
	0x0377D404 ADRP X0, 0x9CA000
	0x0377D408 LDR X0, [X0 + 0x218]
	0x0377D40C BL 0x1C16CF4
	0x0377D410 ADRP X0, 0x9CA000
	0x0377D414 LDR X0, [X0 + 0x220]
	0x0377D418 BL 0x1C16CF4
	0x0377D41C ADRP X0, 0x98F000
	0x0377D420 LDR X0, [X0 + 0x370]
	0x0377D424 BL 0x1C16CF4
	0x0377D428 ADRP X0, 0x98F000
	0x0377D42C LDR X0, [X0 + 0x428]
	0x0377D430 BL 0x1C16CF4
	0x0377D434 ADRP X0, 0x9CA000
	0x0377D438 LDR X0, [X0 + 0x228]
	0x0377D43C BL 0x1C16CF4
	0x0377D440 ADRP X0, 0x9CA000
	0x0377D444 LDR X0, [X0 + 0x230]
	0x0377D448 BL 0x1C16CF4
	0x0377D44C ADRP X0, 0x9CA000
	0x0377D450 LDR X0, [X0 + 0x238]
	0x0377D454 BL 0x1C16CF4
	0x0377D458 ADRP X0, 0x9CA000
	0x0377D45C LDR X0, [X0 + 0x240]
	0x0377D460 BL 0x1C16CF4
	0x0377D464 ADRP X0, 0x9CA000
	0x0377D468 LDR X0, [X0 + 0x248]
	0x0377D46C BL 0x1C16CF4
	0x0377D470 ADRP X0, 0x9CA000
	0x0377D474 LDR X0, [X0 + 0x250]
	0x0377D478 BL 0x1C16CF4
	0x0377D47C ADRP X0, 0x9CA000
	0x0377D480 LDR X0, [X0 + 0x258]
	0x0377D484 BL 0x1C16CF4
	0x0377D488 ADRP X0, 0x9CA000
	0x0377D48C LDR X0, [X0 + 0x260]
	0x0377D490 BL 0x1C16CF4
	0x0377D494 ADRP X0, 0x9CA000
	0x0377D498 LDR X0, [X0 + 0x268]
	0x0377D49C BL 0x1C16CF4
	0x0377D4A0 ADRP X0, 0x9CA000
	0x0377D4A4 LDR X0, [X0 + 0x270]
	0x0377D4A8 BL 0x1C16CF4
	0x0377D4AC ADRP X0, 0x9CA000
	0x0377D4B0 LDR X0, [X0 + 0x278]
	0x0377D4B4 BL 0x1C16CF4
	0x0377D4B8 ADRP X0, 0x99E000
	0x0377D4BC LDR X0, [X0 + 0x788]
	0x0377D4C0 BL 0x1C16CF4
	0x0377D4C4 ADRP X0, 0x9CA000
	0x0377D4C8 LDR X0, [X0 + 0x280]
	0x0377D4CC BL 0x1C16CF4
	0x0377D4D0 ADRP X0, 0x9CA000
	0x0377D4D4 LDR X0, [X0 + 0x288]
	0x0377D4D8 BL 0x1C16CF4
	0x0377D4DC ADRP X0, 0x9CA000
	0x0377D4E0 LDR X0, [X0 + 0x290]
	0x0377D4E4 BL 0x1C16CF4
	0x0377D4E8 ADRP X0, 0x9A3000
	0x0377D4EC LDR X0, [X0 + 0x3D0]
	0x0377D4F0 BL 0x1C16CF4
	0x0377D4F4 ADRP X0, 0x97A000
	0x0377D4F8 LDR X0, [X0 + 0x600]
	0x0377D4FC BL 0x1C16CF4
	0x0377D500 ADRP X0, 0x99F000
	0x0377D504 LDR X0, [X0 + 0x58]
	0x0377D508 BL 0x1C16CF4
	0x0377D50C ADRP X0, 0x9CA000
	0x0377D510 LDR X0, [X0 + 0x298]
	0x0377D514 BL 0x1C16CF4
	0x0377D518 ADRP X0, 0x9A3000
	0x0377D51C LDR X0, [X0 + 0x3A8]
	0x0377D520 BL 0x1C16CF4

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X26, 0xC64000
	013 Move X27, 0x9CB000
	014 Move X28, 0x9C8000
	015 Move X24, 0x9CB000
	016 Move X25, 0x9CA000
	017 Move X22, 0x9CB000
	018 Move X23, 0x9CB000
	019 Move X20, 0x9CB000
	020 Move X21, 0x9CB000
	021 Move X27, [X27+24]
	022 Move X28, [X28+3608]
	023 Move X24, [X24+32]
	024 Move W8, [X26+3957]
	025 Move X25, [X25+3872]
	026 Move X22, [X22+40]
	027 Move X23, [X23+48]
	028 Move X20, [X20+56]
	029 Move X21, [X21+64]
	030 Move X19, X0
	031 Move TEMP, X8
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {61}
	035 Move X0, 0x9C8000
	036 Move X0, [X0+3608]
	037 Call 0x1C17CF4
	038 Move X0, 0x9CA000
	039 Move X0, [X0+3872]
	040 Call 0x1C17CF4
	041 Move X0, 0x9CB000
	042 Move X0, [X0+48]
	043 Call 0x1C17CF4
	044 Move X0, 0x9CB000
	045 Move X0, [X0+64]
	046 Call 0x1C17CF4
	047 Move X0, 0x9CB000
	048 Move X0, [X0+56]
	049 Call 0x1C17CF4
	050 Move X0, 0x9CB000
	051 Move X0, [X0+40]
	052 Call 0x1C17CF4
	053 Move X0, 0x9CB000
	054 Move X0, [X0+24]
	055 Call 0x1C17CF4
	056 Move X0, 0x9CB000
	057 Move X0, [X0+32]
	058 Call 0x1C17CF4
	059 Move W8, 1
	060 Move [X26+3957], W8
	061 Move X1, [X27]
	062 Move X2, [X28]
	063 Move X0, X19
	064 Call 0x21FD754, X0, X1
	065 Move [X19+368], X0
	066 Move X1, [X24]
	067 Move X2, [X25]
	068 Move X0, X19
	069 Call 0x21FD754, X0, X1
	070 Move [X19+376], X0
	071 Move X1, [X22]
	072 Move X2, [X23]
	073 Move X0, X19
	074 Call 0x21FD9B4, X0, X1
	075 Move [X19+384], X0
	076 Move X1, [X20]
	077 Move X2, [X21]
	078 Move X0, X19
	079 Call 0x21FD9B4, X0, X1
	080 Move [X19+392], X0
	081 Move X20, [X31+80]
	082 Move X19, [X31+88]
	083 Move X22, [X31+64]
	084 Move X21, [X31+72]
	085 Move X24, [X31+48]
	086 Move X23, [X31+56]
	087 Move X26, [X31+32]
	088 Move X25, [X31+40]
	089 Move X28, [X31+16]
	090 Move X27, [X31+24]
	091 Move X30, [X31+96]
	092 Return 

Method: System.Void MakeCurrent()

Disassembly:
	0x0377D524 ADRP X0, 0x9CA000
	0x0377D528 LDR X0, [X0 + 0x2A0]
	0x0377D52C BL 0x1C16CF4
	0x0377D530 ADRP X0, 0x9CA000
	0x0377D534 LDR X0, [X0 + 0x2A8]
	0x0377D538 BL 0x1C16CF4
	0x0377D53C ADRP X0, 0x9A3000
	0x0377D540 LDR X0, [X0 + 0x3D8]
	0x0377D544 BL 0x1C16CF4
	0x0377D548 ADRP X0, 0x9CA000
	0x0377D54C LDR X0, [X0 + 0x2B0]
	0x0377D550 BL 0x1C16CF4
	0x0377D554 ADRP X0, 0x9CA000
	0x0377D558 LDR X0, [X0 + 0x2B8]
	0x0377D55C BL 0x1C16CF4
	0x0377D560 ADRP X0, 0x9CA000
	0x0377D564 LDR X0, [X0 + 0x2C0]
	0x0377D568 BL 0x1C16CF4
	0x0377D56C ADRP X0, 0x995000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xC64000
	005 Move W8, [X20+3993]
	006 Move X19, X0
	007 Compare W8, 0
	008 JumpIfNotEqual {14}
	009 Move X0, 0x9CB000
	010 Move X0, [X0+8]
	011 Call 0x1C17CF4
	012 Move W8, 1
	013 Move [X20+3993], W8
	014 Move X8, 0x9CB000
	015 Move X8, [X8+8]
	016 Move X8, [X8]
	017 Move X8, [X8+184]
	018 Move [X8], X19
	019 Move X20, [X31+16]
	020 Move X19, [X31+24]
	021 Move X30, [X31+32]
	022 Return 

Method: System.Void OnAdded()

Disassembly:
	0x0377D570 LDR X0, [X0 + 0x6C8]
	0x0377D574 BL 0x1C16CF4
	0x0377D578 ADRP X0, 0x9CA000
	0x0377D57C LDR X0, [X0 + 0x2C8]
	0x0377D580 BL 0x1C16CF4
	0x0377D584 ADRP X0, 0x9CA000
	0x0377D588 LDR X0, [X0 + 0x2D0]
	0x0377D58C BL 0x1C16CF4
	0x0377D590 ADRP X0, 0x9CA000
	0x0377D594 LDR X0, [X0 + 0x2D8]
	0x0377D598 BL 0x1C16CF4
	0x0377D59C ADRP X0, 0x9CA000
	0x0377D5A0 LDR X0, [X0 + 0x2E0]
	0x0377D5A4 BL 0x1C16CF4
	0x0377D5A8 ADRP X0, 0x9CA000
	0x0377D5AC LDR X0, [X0 + 0x2E8]
	0x0377D5B0 BL 0x1C16CF4
	0x0377D5B4 ADRP X0, 0x9CA000
	0x0377D5B8 LDR X0, [X0 + 0x2F0]
	0x0377D5BC BL 0x1C16CF4
	0x0377D5C0 ADRP X0, 0x9CA000
	0x0377D5C4 LDR X0, [X0 + 0x2F8]
	0x0377D5C8 BL 0x1C16CF4
	0x0377D5CC ADRP X0, 0x9CA000
	0x0377D5D0 LDR X0, [X0 + 0x300]
	0x0377D5D4 BL 0x1C16CF4
	0x0377D5D8 ADRP X0, 0x9CA000
	0x0377D5DC LDR X0, [X0 + 0x308]
	0x0377D5E0 BL 0x1C16CF4
	0x0377D5E4 ADRP X0, 0x9CA000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xC64000
	007 Move X22, 0x9CB000
	008 Move X20, 0x9CB000
	009 Move W8, [X21+3958]
	010 Move X22, [X22+8]
	011 Move X20, [X20+72]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x9CB000
	018 Move X0, [X0+72]
	019 Call 0x1C17CF4
	020 Move X0, 0x9CB000
	021 Move X0, [X0+8]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+3958], W8
	025 Move X8, [X22]
	026 Move X4, [X20]
	027 Move X2, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X8, [X8+184]
	031 Move X22, [X31+16]
	032 Move X21, [X31+24]
	033 Move W3, 10
	034 Add X0, X8, 16
	035 Add X1, X8, 8
	036 Move X30, [X31+48]
	037 Call ArrayHelpers.AppendWithCapacity, X0, X1, X2, X3
	038 Return 

Method: System.Void OnRemoved()

Disassembly:
	0x0377D5E8 LDR X0, [X0 + 0x310]
	0x0377D5EC BL 0x1C16CF4
	0x0377D5F0 ADRP X0, 0x9CA000
	0x0377D5F4 LDR X0, [X0 + 0x318]
	0x0377D5F8 BL 0x1C16CF4
	0x0377D5FC ADRP X0, 0x9CA000
	0x0377D600 LDR X0, [X0 + 0x320]
	0x0377D604 BL 0x1C16CF4
	0x0377D608 ADRP X0, 0x9CA000
	0x0377D60C LDR X0, [X0 + 0x328]
	0x0377D610 BL 0x1C16CF4
	0x0377D614 ADRP X0, 0x9CA000
	0x0377D618 LDR X0, [X0 + 0x330]
	0x0377D61C BL 0x1C16CF4
	0x0377D620 ADRP X0, 0x9CA000
	0x0377D624 LDR X0, [X0 + 0x338]
	0x0377D628 BL 0x1C16CF4
	0x0377D62C ADRP X0, 0x99F000
	0x0377D630 LDR X0, [X0 + 0xCC0]
	0x0377D634 BL 0x1C16CF4
	0x0377D638 ADRP X0, 0x9CA000
	0x0377D63C LDR X0, [X0 + 0x340]
	0x0377D640 BL 0x1C16CF4
	0x0377D644 ADRP X0, 0x9CA000
	0x0377D648 LDR X0, [X0 + 0x348]
	0x0377D64C BL 0x1C16CF4
	0x0377D650 ADRP X0, 0x9CA000
	0x0377D654 LDR X0, [X0 + 0x350]
	0x0377D658 BL 0x1C16CF4
	0x0377D65C ADRP X0, 0x9CA000
	0x0377D660 LDR X0, [X0 + 0x358]
	0x0377D664 BL 0x1C16CF4
	0x0377D668 ADRP X0, 0x9CA000
	0x0377D66C LDR X0, [X0 + 0x360]
	0x0377D670 BL 0x1C16CF4
	0x0377D674 ADRP X0, 0x99A000
	0x0377D678 LDR X0, [X0 + 0xEC0]
	0x0377D67C BL 0x1C16CF4
	0x0377D680 ADRP X0, 0x9CA000
	0x0377D684 LDR X0, [X0 + 0x368]
	0x0377D688 BL 0x1C16CF4
	0x0377D68C ADRP X0, 0x9B0000
	0x0377D690 LDR X0, [X0 + 0x598]
	0x0377D694 BL 0x1C16CF4
	0x0377D698 ADRP X0, 0x9CA000
	0x0377D69C LDR X0, [X0 + 0x370]
	0x0377D6A0 BL 0x1C16CF4
	0x0377D6A4 ADRP X0, 0x9CA000
	0x0377D6A8 LDR X0, [X0 + 0x378]
	0x0377D6AC BL 0x1C16CF4
	0x0377D6B0 ADRP X0, 0x99C000
	0x0377D6B4 LDR X0, [X0 + 0x5A8]
	0x0377D6B8 BL 0x1C16CF4
	0x0377D6BC ADRP X0, 0x978000
	0x0377D6C0 LDR X0, [X0 + 0x4B0]
	0x0377D6C4 BL 0x1C16CF4
	0x0377D6C8 ADRP X0, 0x9CA000
	0x0377D6CC LDR X0, [X0 + 0x380]
	0x0377D6D0 BL 0x1C16CF4
	0x0377D6D4 ADRP X0, 0x9CA000
	0x0377D6D8 LDR X0, [X0 + 0x388]
	0x0377D6DC BL 0x1C16CF4
	0x0377D6E0 ADRP X0, 0x9CA000
	0x0377D6E4 LDR X0, [X0 + 0x390]
	0x0377D6E8 BL 0x1C16CF4
	0x0377D6EC MOVZ W8, 0x1
	0x0377D6F0 STRB W8, [X20 + 0xF81]
	0x0377D6F4 LDR X0, [X21]
	0x0377D6F8 MOVZ W1, 0x6E
	0x0377D6FC BL 0x1C16D6C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xC64000
	007 Move W8, [X20+3959]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {24}
	013 Move X0, 0x9CB000
	014 Move X0, [X0+80]
	015 Call 0x1C17CF4
	016 Move X0, 0x9CB000
	017 Move X0, [X0+88]
	018 Call 0x1C17CF4
	019 Move X0, 0x9CB000
	020 Move X0, [X0+8]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X20+3959], W8
	024 Move X21, 0xC64000
	025 Move X20, 0x9CB000
	026 Move W8, [X21+3994]
	027 Move X20, [X20+8]
	028 Compare W8, 0
	029 JumpIfNotEqual {35}
	030 Move X0, 0x9CB000
	031 Move X0, [X0+8]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X21+3994], W8
	035 Move X8, [X20]
	036 Move X21, 0x9CB000
	037 Move X8, [X8+184]
	038 Move X9, [X8]
	039 Move X21, [X21+88]
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move X22, 0xC64000
	042 Move W9, [X22+3993]
	043 Compare W9, 0
	044 JumpIfNotEqual {51}
	045 Move X0, X20
	046 Call 0x1C17CF4
	047 Move X8, [X20]
	048 Move W9, 1
	049 Move [X22+3993], W9
	050 Move X8, [X8+184]
	051 Move [X8], X31
	052 Move X8, [X20]
	053 Move X8, [X8+184]
	054 Move X0, [X8+16]
	055 Move W2, [X8+8]
	056 Move X3, [X21]
	057 Move X1, X19
	058 Call 0x217AB8C, X0, X1, X2
	059 Add W31, W0, 1
	060 Move X8, [X20]
	061 Move X9, 0x9CB000
	062 Move W2, W0
	063 Move X8, [X8+184]
	064 Move X9, [X9+80]
	065 Move X20, [X31+32]
	066 Move X19, [X31+40]
	067 Move X22, [X31+16]
	068 Move X21, [X31+24]
	069 Move X0, [X8+16]
	070 Move X3, [X9]
	071 Add X1, X8, 8
	072 Move X30, [X31+48]
	073 Call ArrayHelpers.EraseAtWithCapacity, X0, X1, X2
	074 Return 
	075 Move X20, [X31+32]
	076 Move X19, [X31+40]
	077 Move X22, [X31+16]
	078 Move X21, [X31+24]
	079 Move X30, [X31+48]
	080 Return 

Method: System.Void .ctor()

Disassembly:
	0x0377D700 CBZ X0, 0x377E2C0
	0x0377D704 LDR W1, [X0 + 0x18]
	0x0377D708 MOV X20, X0
	0x0377D70C CBZ W1, 0x377E2BC
	0x0377D710 ADRP X8, 0x9CA000
	0x0377D714 LDR X8, [X8 + 0x348]
	0x0377D718 CMP W1, 0x1
	0x0377D71C LDR X8, [X8]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call InputControl..ctor, X0
	005 Move TEMP, 0
	006 Not TEMP
	007 Move W8, TEMP
	008 Move [X19+224], X31
	009 Move [X19+232], W8
	010 Move X30, [X31+16]
	011 Move X19, [X31+24]
	012 Return 

