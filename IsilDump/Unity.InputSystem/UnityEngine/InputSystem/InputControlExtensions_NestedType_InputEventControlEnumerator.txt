Type: UnityEngine.InputSystem.InputControlExtensions/InputEventControlEnumerator

Method: System.Void .ctor(UnityEngine.InputSystem.LowLevel.InputEventPtr eventPtr, UnityEngine.InputSystem.InputDevice device, UnityEngine.InputSystem.InputControlExtensions/Enumerate flags, System.Single magnitudeThreshold = 0)

Disassembly:
	0x03776980 STR W8, [X19 + 0x10]
	0x03776984 MOV X1, X31
	0x03776988 BL 0x37F80B4
	0x0377698C MOVZ W8, 0x4154
	0x03776990 MOVK W8, 0x53540000
	0x03776994 CMP W0, W8
	0x03776998 B.EQ 0x37769BC
	0x0377699C LDR X8, [X31 + 0xF8]
	0x037769A0 ADD X0, X8, 0x28
	0x037769A4 MOV X1, X31
	0x037769A8 BL 0x37F80B4
	0x037769AC MOVZ W8, 0x5441
	0x037769B0 MOVK W8, 0x444C0000
	0x037769B4 CMP W0, W8
	0x037769B8 B.NE 0x3776B08
	0x037769BC LDR X8, [X31 + 0xF8]
	0x037769C0 LDR V0, [X8 + 0x38]
	0x037769C4 FCMP S0, 0x0
	0x037769C8 B.PL 0x37769F8
	0x037769CC ADRP X8, 0x9A5000
	0x037769D0 LDR X8, [X8 + 0x270]
	0x037769D4 LDR X0, [X8]
	0x037769D8 LDR W8, [X0 + 0xE0]
	0x037769DC CBNZ W8, 0x37769E4
	0x037769E0 BL 0x1C16DFC
	0x037769E4 BL 0x37701B0
	0x037769E8 CBZ X0, 0x3776ACC
	0x037769EC LDR V0, [X0 + 0x40]
	0x037769F0 LDR X8, [X31 + 0xF8]
	0x037769F4 STR S0, [X8 + 0x38]
	0x037769F8 LDR X0, [X8 + 0x28]
	0x037769FC ADD X8, X31, 0x78
	0x03776A00 MOVZ W1, 0x1
	0x03776A04 MOV X2, X31
	0x03776A08 BL 0x3775004
	0x03776A0C LDP X2, X1, [X31 + 0x78]
	0x03776A10 LDR W3, [X31 + 0x88]
	0x03776A14 LDR V0, [X31 + 0x8C]
	0x03776A18 MOVI V1.2D, 0x0
	0x03776A1C STP V1, V1, [X31 + 0x50]
	0x03776A20 STP V1, V1, [X31 + 0x30]
	0x03776A24 STP V1, V1, [X31 + 0x10]
	0x03776A28 STR V1, [X31]
	0x03776A2C ADD X0, X31, 0x0
	0x03776A30 BL 0x3775980
	0x03776A34 ADD X0, X31, 0x78
	0x03776A38 ADD X1, X31, 0x0
	0x03776A3C MOVZ W2, 0x70
	0x03776A40 BL 0x3EB1AC0
	0x03776A44 LDR X19, [X31 + 0xF8]
	0x03776A48 ADD X1, X31, 0x78
	0x03776A4C MOVZ W2, 0x70
	0x03776A50 ADD X0, X19, 0x48
	0x03776A54 BL 0x3EB1AC0
	0x03776A58 MOVN W8, 0x2
	0x03776A5C STR W8, [X19 + 0x10]
	0x03776A60 ADD X0, X19, 0x48
	0x03776A64 BL 0x3775274
	0x03776A68 LDR X19, [X31 + 0xF8]
	0x03776A6C TBZ X0, 0x0, 0x3776A98
	0x03776A70 LDRB W9, [X19 + 0x40]
	0x03776A74 LDR X8, [X19 + 0x90]
	0x03776A78 CBZ W9, 0x3776A88
	0x03776A7C CBZ X8, 0x3776AC8
	0x03776A80 LDRB W9, [X8 + 0xA0]
	0x03776A84 TBZ X9, 0x3, 0x3776A60
	0x03776A88 MOVZ W0, 0x1
	0x03776A8C STR X8, [X19 + 0x18]
	0x03776A90 STR W0, [X19 + 0x10]
	0x03776A94 B 0x3776B0C
	0x03776A98 MOV W0, W31
	0x03776A9C MOVN W8, 0x0
	0x03776AA0 MOVI V0.2D, 0x0
	0x03776AA4 STR W8, [X19 + 0x10]
	0x03776AA8 STUR V0, [X19 + 0x48]
	0x03776AAC STUR V0, [X19 + 0x58]
	0x03776AB0 STUR V0, [X19 + 0x68]
	0x03776AB4 STUR V0, [X19 + 0x78]
	0x03776AB8 STUR V0, [X19 + 0x88]
	0x03776ABC STUR V0, [X19 + 0x98]
	0x03776AC0 STUR V0, [X19 + 0xA8]
	0x03776AC4 B 0x3776B0C
	0x03776AC8 BL 0x1C16F20
	0x03776ACC BL 0x1C16F20
	0x03776AD0 B 0x3776AEC
	0x03776AD4 B 0x3776AEC
	0x03776AD8 B 0x3776AEC
	0x03776ADC B 0x3776AEC
	0x03776AE0 B 0x3776AEC
	0x03776AE4 B 0x3776AEC
	0x03776AE8 B 0x3776AEC
	0x03776AEC CMP W1, 0x1
	0x03776AF0 B.NE 0x3776B34
	0x03776AF4 BL 0x3EB1AD0
	0x03776AF8 LDR X19, [X0]
	0x03776AFC STR X19, [X31 + 0xE8]
	0x03776B00 BL 0x3EB1AE0
	0x03776B04 CBNZ X19, 0x3776B1C
	0x03776B08 MOV W0, W31
	0x03776B0C LDP X20, X19, [X31 + 0x110]
	0x03776B10 LDP X29, X30, [X31 + 0x100]
	0x03776B14 ADD X31, X31, 0x120
	0x03776B18 RET
	0x03776B1C ADD X8, X31, 0xE8
	0x03776B20 ADD X0, X8, 0x8
	0x03776B24 BL 0x1BD131C
	0x03776B28 MOV X0, X19
	0x03776B2C BL 0x1C16F18
	0x03776B30 CBNZ X19, 0x3776B38
	0x03776B34 BL 0x1D2C690
	0x03776B38 LDR X8, [X31 + 0xF8]
	0x03776B3C LDR W9, [X8 + 0x10]

ISIL:
	001 Move [X31-64], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0xC6B000
	009 Move W8, [X23+3890]
	010 Move V8, V0
	011 Move W21, W3
	012 Move X20, X2
	013 Move X22, X1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0x9D1000
	020 Move X0, [X0+3392]
	021 Call 0x1C17CF4
	022 Move X0, 0x9A6000
	023 Move X0, [X0+3352]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X23+3890], W8
	027 Move [X19+8], X20
	028 Compare X20, 0
	029 JumpIfEqual {142}
	030 Move X0, [X20+344]
	031 Move X8, 0x9D1000
	032 Move X8, [X8+3392]
	033 Move [X19+16], X0
	034 Move X1, [X8]
	035 Call ArrayHelpers.LengthSafe, X0
	036 Move [X19+24], W0
	037 Move X8, [X20+336]
	038 NotImplemented "Instruction MOVI not yet implemented."
	039 Move [X19+64], X22
	040 Move [X19], W21
	041 Move [X19+88], V0
	042 Move [X19+72], V0
	043 Move [X19+32], X8
	044 Move [X19+104], S8
	045 Move TEMP, X21
	046 And TEMP, TEMP, 8
	047 Compare TEMP, 8
	048 JumpIfEqual {121}
	049 Move X22, 0xC6B000
	050 Move W8, [X22+3989]
	051 Compare W8, 0
	052 JumpIfNotEqual {58}
	053 Move X0, 0x9A9000
	054 Move X0, [X0+4072]
	055 Call 0x1C17CF4
	056 Move W8, 1
	057 Move [X22+3989], W8
	058 Move X8, 0x9A9000
	059 Move X8, [X8+4072]
	060 Move X9, 0x9A6000
	061 Move X8, [X8]
	062 Move X9, [X9+3352]
	063 Move X8, [X8+184]
	064 Move X0, [X9]
	065 Move X22, [X8+8]
	066 Move W9, [X0+224]
	067 Compare W9, 0
	068 JumpIfNotEqual {70}
	069 Call 0x1C17DFC
	070 Move W8, [X20+20]
	071 Add X8, X8, X22
	072 Move [X19+56], X8
	073 Move TEMP, X21
	074 And TEMP, TEMP, 1
	075 Compare TEMP, 1
	076 JumpIfNotEqual {126}
	077 Move X22, 0xC66000
	078 Move W8, [X22+2563]
	079 Compare W8, 0
	080 JumpIfNotEqual {86}
	081 Move X0, 0x9A9000
	082 Move X0, [X0+4072]
	083 Call 0x1C17CF4
	084 Move W8, 1
	085 Move [X22+2563], W8
	086 Move X8, 0x9A9000
	087 Move X8, [X8+4072]
	088 Move X9, 0x9A6000
	089 Move X8, [X8]
	090 Move X9, [X9+3352]
	091 Move X8, [X8+184]
	092 Move X0, [X9]
	093 Move X22, [X8]
	094 Move W9, [X0+224]
	095 Compare W9, 0
	096 JumpIfNotEqual {98}
	097 Call 0x1C17DFC
	098 Move W8, [X20+20]
	099 Add X8, X8, X22
	100 Move [X19+40], X8
	101 Move TEMP, X21
	102 And TEMP, TEMP, 2
	103 Compare TEMP, 2
	104 JumpIfNotEqual {131}
	105 Move X0, X20
	106 Call InputControl.GetDeviceIndex, X0
	107 Move X1, X31
	108 Call InputStateBuffers.GetFrontBufferForDevice, X0
	109 Move X8, 0x9A6000
	110 Move X8, [X8+3352]
	111 Move X21, X0
	112 Move X8, [X8]
	113 Move W9, [X8+224]
	114 Compare W9, 0
	115 JumpIfNotEqual {118}
	116 Move X0, X8
	117 Call 0x1C17DFC
	118 Move W8, [X20+20]
	119 Add X8, X8, X21
	120 Move [X19+48], X8
	121 Move [X19+56], X31
	122 Move TEMP, X21
	123 And TEMP, TEMP, 1
	124 Compare TEMP, 1
	125 JumpIfEqual {77}
	126 Move [X19+40], X31
	127 Move TEMP, X21
	128 And TEMP, TEMP, 2
	129 Compare TEMP, 2
	130 JumpIfEqual {105}
	131 Move [X19+48], X31
	132 Move X0, X19
	133 Move X20, [X31+48]
	134 Move X19, [X31+56]
	135 Move X22, [X31+32]
	136 Move X21, [X31+40]
	137 Move X30, [X31+16]
	138 Move X23, [X31+24]
	139 Move V8, [X31+64]
	140 Call InputEventControlEnumerator.Reset, X0
	141 Return 
	142 Call 0x1C17F20

Method: System.Boolean CheckDefault(System.UInt32 numBits)

Disassembly:
	0x037770D0 CBNZ X20, 0x37770E4
	0x037770D4 LDR X19, [X31 + 0x8]
	0x037770D8 B 0x3776FFC
	0x037770DC MOV X20, X31
	0x037770E0 B 0x37770F0
	0x037770E4 MOV X0, X20
	0x037770E8 BL 0x1C16F18
	0x037770EC MOV X19, X0
	0x037770F0 ADD X0, X31, 0x18

ISIL:
	001 Move X8, [X0+88]
	002 Move X9, [X0+40]
	003 Move W2, [X0+96]
	004 Move X4, [X0+56]
	005 Move W3, W1
	006 Move X0, X8
	007 Move X1, X9
	008 Move X5, X31
	009 Call MemoryHelpers.MemCmpBitRegion, X0, X1, X2, X3, X4
	010 Return X0

Method: System.Boolean CheckCurrent(System.UInt32 numBits)

Disassembly:
	0x037770F4 MOV X1, X31
	0x037770F8 BL 0x38196B4
	0x037770FC CBNZ X20, 0x3777108
	0x03777100 MOV X0, X19
	0x03777104 BL 0x1D2C690
	0x03777108 MOV X0, X20
	0x0377710C BL 0x1C16F18
	0x03777110 BL 0x1990590

ISIL:
	001 Move X8, [X0+88]
	002 Move X9, [X0+48]
	003 Move X4, [X0+56]
	004 Move W2, [X0+96]
	005 Move W3, W1
	006 Move X0, X8
	007 Move X1, X9
	008 Move X5, X31
	009 Call MemoryHelpers.MemCmpBitRegion, X0, X1, X2, X3, X4
	010 Return X0

Method: System.Boolean MoveNext()

Disassembly:
	0x03776274 BL 0x37577E0
	0x03776278 CBZ X20, 0x3776294
	0x0377627C STR X0, [X20 + 0x40]
	0x03776280 LDR X0, [X19]
	0x03776284 LDP X20, X19, [X31 + 0x20]
	0x03776288 LDR X30, [X31 + 0x10]
	0x0377628C ADD X31, X31, 0x30
	0x03776290 RET
	0x03776294 BL 0x1C16F20
	0x03776298 SUB X31, X31, 0x30
	0x0377629C STP X31, X30, [X31 + 0x8]
	0x037762A0 STP X20, X19, [X31 + 0x20]
	0x037762A4 LDR X20, [X0]
	0x037762A8 MOV X19, X0
	0x037762AC ADD X0, X31, 0x0
	0x037762B0 MOV X2, X31
	0x037762B4 STR X31, [X31]
	0x037762B8 BL 0x3757420
	0x037762BC LDP X0, X1, [X31]
	0x037762C0 MOV X2, X31
	0x037762C4 BL 0x37577E0
	0x037762C8 CBZ X20, 0x37762E4
	0x037762CC STR X0, [X20 + 0x50]
	0x037762D0 LDR X0, [X19]
	0x037762D4 LDP X20, X19, [X31 + 0x20]
	0x037762D8 LDR X30, [X31 + 0x10]
	0x037762DC ADD X31, X31, 0x30
	0x037762E0 RET
	0x037762E4 BL 0x1C16F20
	0x037762E8 STR X30, [X31 - 0x10]!
	0x037762EC LDR X8, [X0]
	0x037762F0 CBZ X8, 0x3776304
	0x037762F4 STP X1, X2, [X8 + 0x58]
	0x037762F8 LDR X0, [X0]
	0x037762FC LDR X30, [X31], #0x10
	0x03776300 RET
	0x03776304 BL 0x1C16F20
	0x03776308 STR X30, [X31 - 0x10]!
	0x0377630C LDR X8, [X0]
	0x03776310 CBZ X8, 0x3776324
	0x03776314 STP W2, W1, [X8 + 0x88]
	0x03776318 LDR X0, [X0]
	0x0377631C LDR X30, [X31], #0x10
	0x03776320 RET
	0x03776324 BL 0x1C16F20
	0x03776328 STR X30, [X31 - 0x10]!
	0x0377632C LDR X8, [X0]
	0x03776330 CBZ X8, 0x3776344
	0x03776334 STP W2, W1, [X8 + 0x90]
	0x03776338 LDR X0, [X0]
	0x0377633C LDR X30, [X31], #0x10
	0x03776340 RET
	0x03776344 BL 0x1C16F20
	0x03776348 STR X30, [X31 - 0x10]!
	0x0377634C LDR X8, [X0]
	0x03776350 CBZ X8, 0x3776364
	0x03776354 STP W2, W1, [X8 + 0x98]
	0x03776358 LDR X0, [X0]
	0x0377635C LDR X30, [X31], #0x10
	0x03776360 RET
	0x03776364 BL 0x1C16F20
	0x03776368 STR X30, [X31 - 0x10]!
	0x0377636C LDR X8, [X0]
	0x03776370 CBZ X8, 0x3776384
	0x03776374 STP X1, X2, [X8 + 0x10]
	0x03776378 LDR X0, [X0]
	0x0377637C LDR X30, [X31], #0x10
	0x03776380 RET
	0x03776384 BL 0x1C16F20
	0x03776388 STR X30, [X31 - 0x10]!
	0x0377638C LDR X8, [X0]
	0x03776390 CBZ X8, 0x37763C0
	0x03776394 STP X1, X2, [X8 + 0xA8]
	0x03776398 LDR X8, [X0]
	0x0377639C CBZ X8, 0x37763C0
	0x037763A0 LDR X8, [X8 + 0x78]
	0x037763A4 CBZ X8, 0x37763C0
	0x037763A8 LDR W9, [X8 + 0xDC]
	0x037763AC ORR W9, W9, 0x4
	0x037763B0 STR W9, [X8 + 0xDC]
	0x037763B4 LDR X0, [X0]
	0x037763B8 LDR X30, [X31], #0x10
	0x037763BC RET
	0x037763C0 BL 0x1C16F20
	0x037763C4 LDR W8, [X0 + 0xDC]
	0x037763C8 ANDS W31, W1, 0x1
	0x037763CC MOVZ W9, 0x4
	0x037763D0 CSEL W9, W9, W31, NE
	0x037763D4 AND W8, W8, 0xFFFFFFFB
	0x037763D8 ORR W8, W8, W9, 0x0
	0x037763DC STR W8, [X0 + 0xDC]
	0x037763E0 RET
	0x037763E4 STR X30, [X31 - 0x10]!
	0x037763E8 LDR X8, [X0]
	0x037763EC CBZ X8, 0x377640C
	0x037763F0 STP X1, X2, [X8 + 0xB8]
	0x037763F4 LDR X8, [X0]
	0x037763F8 CBZ X8, 0x377640C
	0x037763FC STP X3, X4, [X8 + 0xC8]
	0x03776400 LDR X0, [X0]
	0x03776404 LDR X30, [X31], #0x10
	0x03776408 RET
	0x0377640C BL 0x1C16F20
	0x03776410 STP X30, X19, [X31 - 0x10]!
	0x03776414 MOV X19, X0
	0x03776418 LDR X0, [X0]
	0x0377641C CBZ X0, 0x3776434
	0x03776420 AND W1, W1, 0x1
	0x03776424 BL 0x377222C
	0x03776428 LDR X0, [X19]
	0x0377642C LDP X30, X19, [X31], #0x10
	0x03776430 RET
	0x03776434 BL 0x1C16F20
	0x03776438 STR X30, [X31 - 0x10]!
	0x0377643C LDR X8, [X0]
	0x03776440 CBZ X8, 0x377646C
	0x03776444 LDR W9, [X8 + 0xA0]
	0x03776448 ANDS W31, W1, 0x1
	0x0377644C MOVZ W10, 0x4
	0x03776450 CSEL W10, W10, W31, NE
	0x03776454 AND W9, W9, 0xFFFFFFFB
	0x03776458 ORR W9, W9, W10, 0x0
	0x0377645C STR W9, [X8 + 0xA0]
	0x03776460 LDR X0, [X0]
	0x03776464 LDR X30, [X31], #0x10
	0x03776468 RET
	0x0377646C BL 0x1C16F20
	0x03776470 STR X30, [X31 - 0x10]!
	0x03776474 LDR X8, [X0]
	0x03776478 CBZ X8, 0x37764BC
	0x0377647C LDR W9, [X8 + 0xA0]
	0x03776480 ANDS W31, W1, 0x1
	0x03776484 MOVZ W10, 0x10
	0x03776488 CSEL W10, W10, W31, NE
	0x0377648C AND W9, W9, 0xFFFFFFEF
	0x03776490 ORR W9, W9, W10, 0x0
	0x03776494 STR W9, [X8 + 0xA0]
	0x03776498 TBZ X1, 0x0, 0x37764B0
	0x0377649C LDR X8, [X8 + 0x78]
	0x037764A0 CBZ X8, 0x37764BC
	0x037764A4 LDR W9, [X8 + 0xDC]
	0x037764A8 ORR W9, W9, 0x400
	0x037764AC STR W9, [X8 + 0xDC]
	0x037764B0 LDR X0, [X0]
	0x037764B4 LDR X30, [X31], #0x10
	0x037764B8 RET
	0x037764BC BL 0x1C16F20
	0x037764C0 LDR W8, [X0 + 0xDC]
	0x037764C4 ANDS W31, W1, 0x1
	0x037764C8 MOVZ W9, 0x400
	0x037764CC CSEL W9, W9, W31, NE
	0x037764D0 AND W8, W8, 0xFFFFFBFF
	0x037764D4 ORR W8, W8, W9, 0x0
	0x037764D8 STR W8, [X0 + 0xDC]
	0x037764DC RET
	0x037764E0 STR X30, [X31 - 0x10]!
	0x037764E4 LDR X8, [X0]
	0x037764E8 CBZ X8, 0x3776514
	0x037764EC LDR W9, [X8 + 0xA0]
	0x037764F0 ANDS W31, W1, 0x1
	0x037764F4 MOVZ W10, 0x8
	0x037764F8 CSEL W10, W10, W31, NE
	0x037764FC AND W9, W9, 0xFFFFFFF7
	0x03776500 ORR W9, W9, W10, 0x0
	0x03776504 STR W9, [X8 + 0xA0]
	0x03776508 LDR X0, [X0]
	0x0377650C LDR X30, [X31], #0x10
	0x03776510 RET
	0x03776514 BL 0x1C16F20
	0x03776518 STR X30, [X31 - 0x10]!
	0x0377651C LDR X8, [X0]
	0x03776520 CBZ X8, 0x3776538
	0x03776524 LDR W9, [X8 + 0xA0]
	0x03776528 ORR W9, W9, 0x20
	0x0377652C STR W9, [X8 + 0xA0]
	0x03776530 LDR X30, [X31], #0x10
	0x03776534 RET
	0x03776538 BL 0x1C16F20
	0x0377653C LDR X0, [X0]
	0x03776540 RET
	0x03776544 STR X1, [X0]
	0x03776548 RET
	0x0377654C SUB X31, X31, 0x30
	0x03776550 STP X31, X30, [X31 + 0x8]
	0x03776554 STP X20, X19, [X31 + 0x20]
	0x03776558 LDR X20, [X0]
	0x0377655C MOV X19, X0
	0x03776560 ADD X0, X31, 0x0
	0x03776564 MOV X2, X31
	0x03776568 STR X31, [X31]
	0x0377656C BL 0x3757420
	0x03776570 CBZ X20, 0x3776590
	0x03776574 LDR V0, [X31]
	0x03776578 LDR X30, [X31 + 0x10]
	0x0377657C STR V0, [X20 + 0x2]
	0x03776580 LDR X0, [X19]
	0x03776584 LDP X20, X19, [X31 + 0x20]
	0x03776588 ADD X31, X31, 0x30
	0x0377658C RET
	0x03776590 BL 0x1C16F20
	0x03776594 SUB X31, X31, 0x30
	0x03776598 STP X31, X30, [X31 + 0x8]
	0x0377659C STP X20, X19, [X31 + 0x20]
	0x037765A0 LDR X20, [X0]
	0x037765A4 MOV X19, X0
	0x037765A8 ADD X0, X31, 0x0
	0x037765AC MOV X2, X31
	0x037765B0 STR X31, [X31]
	0x037765B4 BL 0x3757420
	0x037765B8 LDP X0, X1, [X31]
	0x037765BC MOV X2, X31
	0x037765C0 BL 0x37577E0
	0x037765C4 CBZ X20, 0x37765E0
	0x037765C8 STR X0, [X20 + 0x40]
	0x037765CC LDR X0, [X19]
	0x037765D0 LDP X20, X19, [X31 + 0x20]
	0x037765D4 LDR X30, [X31 + 0x10]
	0x037765D8 ADD X31, X31, 0x30
	0x037765DC RET
	0x037765E0 BL 0x1C16F20
	0x037765E4 SUB X31, X31, 0x30
	0x037765E8 STP X31, X30, [X31 + 0x8]
	0x037765EC STP X20, X19, [X31 + 0x20]
	0x037765F0 LDR X20, [X0]
	0x037765F4 MOV X19, X0

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X20, 0xC6B000
	012 Move W8, [X20+3891]
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x9A6000
	019 Move X0, [X0+3352]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+3891], W8
	023 Add X0, X19, 64
	024 Move X1, X31
	025 Call InputEventPtr.get_valid, X0
	026 Move TEMP, X0
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfNotEqual {252}
	030 Move X8, [X19+72]
	031 Compare X8, 0
	032 JumpIfEqual {42}
	033 Move W9, [X19]
	034 Move TEMP, X9
	035 And TEMP, TEMP, 16
	036 Compare TEMP, 16
	037 JumpIfNotEqual {42}
	038 Move X8, [X8+128]
	039 Move X9, [X19+8]
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move [X19+72], X8
	042 Move X21, [X19+40]
	043 Move X22, [X19+48]
	044 Move X23, 0x9A6000
	045 Move X23, [X23+3352]
	046 Move W25, 0x1C00
	047 Or X8, X21, X22
	048 NotImplemented "Instruction CMP not yet implemented."
	049 NotImplemented "Instruction CSET not yet implemented."
	050 NotImplemented "Instruction MOVK not yet implemented."
	051 Move W2, [X19+96]
	052 Move [X19+72], X31
	053 Move TEMP, X24
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfNotEqual {115}
	057 And W20, W2, 7
	058 Compare X22, 0
	059 JumpIfEqual {70}
	060 Move X0, [X19+88]
	061 Move X1, [X19+48]
	062 Move X4, [X19+56]
	063 Move W3, W20
	064 Move X5, X31
	065 Call MemoryHelpers.MemCmpBitRegion, X0, X1, X2, X3, X4
	066 Move TEMP, X0
	067 And TEMP, TEMP, 1
	068 Compare TEMP, 1
	069 JumpIfEqual {83}
	070 Compare X21, 0
	071 JumpIfEqual {86}
	072 Move X0, [X19+88]
	073 Move X1, [X19+40]
	074 Move W2, [X19+96]
	075 Move X4, [X19+56]
	076 Move W3, W20
	077 Move X5, X31
	078 Call MemoryHelpers.MemCmpBitRegion, X0, X1, X2, X3, X4
	079 Move TEMP, X0
	080 And TEMP, TEMP, 1
	081 Compare TEMP, 1
	082 JumpIfNotEqual {86}
	083 Move W8, [X19+96]
	084 Add W8, W8, W20
	085 Move [X19+96], W8
	086 Move W2, [X19+96]
	087 Move W8, [X19+100]
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Move X9, [X19+88]
	090 Move X10, [X19+56]
	091 Move W11, W2
	092 Move X11, X11
	093 ShiftRight X11, 3
	094 And X11, X11, 0x7FFFFFFF
	095 Compare X10, 0
	096 JumpIfEqual {98}
	097 Move W12, [X10]
	098 Move W12, 255
	099 Move W13, [X9]
	100 Compare X22, 0
	101 JumpIfEqual {106}
	102 Move X14, [X19+48]
	103 Move W14, [X14]
	104 Xor W14, W14, W13
	105 And W31, W12, W14
	106 Compare X21, 0
	107 JumpIfEqual {116}
	108 Move X14, [X19+40]
	109 Move W11, [X14]
	110 Xor W11, W11, W13
	111 And W31, W12, W11
	112 Add W2, W2, 8
	113 NotImplemented "Instruction CMP not yet implemented."
	114 Move [X19+96], W2
	115 Move W8, [X19+100]
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Move W8, [X19+80]
	118 Move W9, [X19+24]
	119 NotImplemented "Instruction CMP not yet implemented."
	120 Move X9, [X19+16]
	121 Compare X9, 0
	122 JumpIfEqual {250}
	123 Move W10, [X9+24]
	124 NotImplemented "Instruction CMP not yet implemented."
	125 Add X8, X9, W8
	126 Move W8, [X8+32]
	127 Move W9, [X19+84]
	128 Move X27, X8
	129 ShiftRight X27, 19
	130 And X27, X27, 0x7FFFFFFF
	131 Subtract W2, W27, W9
	132 Move W10, [X19+96]
	133 Move W20, W8
	134 ShiftRight W20, 10
	135 And W20, W20, 0x3FFFF
	136 Add W9, W2, W20
	137 NotImplemented "Instruction CMP not yet implemented."
	138 Add W10, W10, 8
	139 NotImplemented "Instruction CMP not yet implemented."
	140 Move W10, [X19+100]
	141 NotImplemented "Instruction CMP not yet implemented."
	142 And W31, W8, W25
	143 And X26, X8, 1023
	144 Compare X22, 0
	145 JumpIfEqual {156}
	146 Move X0, [X19+88]
	147 Move X1, [X19+48]
	148 Move X4, [X19+56]
	149 Move W3, W20
	150 Move X5, X31
	151 Call MemoryHelpers.MemCmpBitRegion, X0, X1, X2, X3, X4
	152 Move TEMP, X0
	153 And TEMP, TEMP, 1
	154 Compare TEMP, 1
	155 JumpIfEqual {199}
	156 Compare X21, 0
	157 JumpIfEqual {170}
	158 Move W8, [X19+84]
	159 Move X0, [X19+88]
	160 Move X1, [X19+40]
	161 Move X4, [X19+56]
	162 Subtract W2, W27, W8
	163 Move W3, W20
	164 Move X5, X31
	165 Call MemoryHelpers.MemCmpBitRegion, X0, X1, X2, X3, X4
	166 Move TEMP, X0
	167 And TEMP, TEMP, 1
	168 Compare TEMP, 1
	169 JumpIfEqual {199}
	170 Move X8, [X19+32]
	171 Compare X8, 0
	172 JumpIfEqual {250}
	173 Move W9, [X8+24]
	174 NotImplemented "Instruction CMP not yet implemented."
	175 Add X8, X8, X26
	176 Move X8, [X8+32]
	177 Move W9, [X19]
	178 Move [X19+72], X8
	179 Move TEMP, X9
	180 And TEMP, TEMP, 8
	181 Compare TEMP, 8
	182 JumpIfEqual {190}
	183 Compare X8, 0
	184 JumpIfEqual {250}
	185 Move W10, [X8+160]
	186 Move TEMP, X10
	187 And TEMP, TEMP, 2
	188 Compare TEMP, 2
	189 JumpIfEqual {198}
	190 Move TEMP, X9
	191 And TEMP, TEMP, 4
	192 Compare TEMP, 4
	193 JumpIfEqual {205}
	194 Compare X8, 0
	195 JumpIfEqual {250}
	196 Move W8, [X8+160]
	197 And W31, W8, 0x44444444
	198 Move [X19+72], X31
	199 Move W8, [X19+80]
	200 Move W9, [X19+24]
	201 Add W8, W8, 1
	202 NotImplemented "Instruction CMP not yet implemented."
	203 Move [X19+80], W8
	204 Move [X19+96], W2
	205 Move W8, [X19+80]
	206 Add W8, W8, 1
	207 Move [X19+80], W8
	208 Move X0, [X19+72]
	209 Compare X0, 0
	210 JumpIfEqual {51}
	211 Move V0, [X19+104]
	212 NotImplemented "Instruction FCMP not yet implemented."
	213 Move X20, [X19+8]
	214 Compare X20, 0
	215 JumpIfEqual {250}
	216 Move X8, [X23]
	217 Move X26, [X19+88]
	218 Move W27, [X19+84]
	219 Move W9, [X8+224]
	220 Compare W9, 0
	221 JumpIfNotEqual {227}
	222 Move X0, X8
	223 Call 0x1C17DFC
	224 Move X0, [X19+72]
	225 Compare X0, 0
	226 JumpIfEqual {250}
	227 Move X8, [X0]
	228 Move W9, [X20+20]
	229 Move X10, [X8+408]
	230 Move X2, [X8+416]
	231 Subtract X8, X26, X27
	232 Subtract X1, X8, X9
	233 NotImplemented "Instruction BLR not yet implemented."
	234 NotImplemented "Instruction FCMP not yet implemented."
	235 Move V1, [X19+104]
	236 NotImplemented "Instruction FCMP not yet implemented."
	237 Move W0, 1
	238 Move W0, W31
	239 Move X20, [X31+64]
	240 Move X19, [X31+72]
	241 Move X22, [X31+48]
	242 Move X21, [X31+56]
	243 Move X24, [X31+32]
	244 Move X23, [X31+40]
	245 Move X26, [X31+16]
	246 Move X25, [X31+24]
	247 Move X30, [X31+80]
	248 Move X27, [X31+88]
	249 Return X0
	250 Call 0x1C17F20
	251 Call 0x1C17F28
	252 Move X0, 0x9A7000
	253 Move X0, [X0+1208]
	254 Call 0x1C17D08
	255 Call 0x1C17F10
	256 Move X19, X0
	257 Move X0, 0x9D1000
	258 Move X0, [X0+3312]
	259 Call 0x1C17D08
	260 Move X1, X0
	261 Move X0, X19
	262 Move X2, X31
	263 Call ObjectDisposedException..ctor, X0, X1
	264 Move X0, 0x9D1000
	265 Move X0, [X0+3320]
	266 Call 0x1C17D08
	267 Move X1, X0
	268 Move X0, X19
	269 Call 0x1C17DEC

Method: System.Void Reset()

Disassembly:
	0x03776C88 BL 0x1C16F20
	0x03776C8C SUB X31, X31, 0x20
	0x03776C90 STP X30, X31, [X31 + 0x10]
	0x03776C94 MOV X4, X2
	0x03776C98 MOV W3, W1
	0x03776C9C ADD X1, X31, 0x18
	0x03776CA0 ADD X2, X31, 0x8
	0x03776CA4 STR X31, [X31 + 0x8]
	0x03776CA8 BL 0x3776CB8
	0x03776CAC LDR X30, [X31 + 0x10]
	0x03776CB0 ADD X31, X31, 0x20
	0x03776CB4 RET
	0x03776CB8 SUB X31, X31, 0xD0
	0x03776CBC STP X30, X25, [X31 + 0x90]
	0x03776CC0 STP X24, X23, [X31 + 0xA0]
	0x03776CC4 STP X22, X21, [X31 + 0xB0]
	0x03776CC8 STP X20, X19, [X31 + 0xC0]
	0x03776CCC ADRP X23, 0xC6A000
	0x03776CD0 LDRB W8, [X23 + 0xF39]
	0x03776CD4 MOV X24, X4
	0x03776CD8 MOV W21, W3
	0x03776CDC MOV X20, X2
	0x03776CE0 MOV X22, X1
	0x03776CE4 MOV X19, X0
	0x03776CE8 TBNZ X8, 0x0, 0x3776D3C
	0x03776CEC ADRP X0, 0x9A5000
	0x03776CF0 LDR X0, [X0 + 0xDC0]
	0x03776CF4 BL 0x1C16CF4
	0x03776CF8 ADRP X0, 0x9D0000
	0x03776CFC LDR X0, [X0 + 0xB88]
	0x03776D00 BL 0x1C16CF4
	0x03776D04 ADRP X0, 0x97D000
	0x03776D08 LDR X0, [X0 + 0x8F0]
	0x03776D0C BL 0x1C16CF4
	0x03776D10 ADRP X0, 0x97F000
	0x03776D14 LDR X0, [X0 + 0x278]
	0x03776D18 BL 0x1C16CF4
	0x03776D1C ADRP X0, 0x9B0000
	0x03776D20 LDR X0, [X0 + 0x6D0]
	0x03776D24 BL 0x1C16CF4
	0x03776D28 ADRP X0, 0x97D000
	0x03776D2C LDR X0, [X0 + 0x848]
	0x03776D30 BL 0x1C16CF4
	0x03776D34 MOVZ W8, 0x1
	0x03776D38 STRB W8, [X23 + 0xF39]
	0x03776D3C MOVI V0.2D, 0x0
	0x03776D40 MOV X0, X19
	0x03776D44 MOV X1, X31
	0x03776D48 STR X31, [X31 + 0x80]
	0x03776D4C STP X31, X31, [X31 + 0x8]
	0x03776D50 STP V0, V0, [X31 + 0x60]
	0x03776D54 STP V0, V0, [X31 + 0x40]
	0x03776D58 STP V0, V0, [X31 + 0x20]
	0x03776D5C STR X31, [X22]
	0x03776D60 STR X31, [X20]
	0x03776D64 BL 0x32277A8
	0x03776D68 TBZ X0, 0x0, 0x3776D84
	0x03776D6C ADRP X8, 0x97F000
	0x03776D70 LDR X8, [X8 + 0x278]
	0x03776D74 LDR X8, [X8]
	0x03776D78 LDR X8, [X8 + 0xB8]
	0x03776D7C LDR X19, [X8]
	0x03776D80 B 0x3776FFC
	0x03776D84 CBZ X24, 0x3776DD8
	0x03776D88 MOV X0, X24
	0x03776D8C MOV X1, X19
	0x03776D90 MOV W2, W31
	0x03776D94 BL 0x376B4E8
	0x03776D98 MOV X23, X0
	0x03776D9C CBNZ X0, 0x3776DB4
	0x03776DA0 MOV X0, X19
	0x03776DA4 MOV X1, X24
	0x03776DA8 BL 0x3777114
	0x03776DAC MOV X23, X24
	0x03776DB0 TBZ X0, 0x0, 0x3776DD8
	0x03776DB4 TBZ X21, 0x2, 0x3776DCC
	0x03776DB8 MOV X0, X23
	0x03776DBC BL 0x3771F1C
	0x03776DC0 MOV X1, X31
	0x03776DC4 BL 0x32277A8
	0x03776DC8 TBZ X0, 0x0, 0x3776F2C
	0x03776DCC MOV X0, X23
	0x03776DD0 BL 0x3771E88
	0x03776DD4 B 0x3776F34
	0x03776DD8 ADRP X8, 0x97D000
	0x03776DDC LDR X8, [X8 + 0x8F0]
	0x03776DE0 LDR X0, [X8]
	0x03776DE4 BL 0x1C16F10
	0x03776DE8 MOV X1, X31
	0x03776DEC MOV X23, X0
	0x03776DF0 BL 0x3231AC4
	0x03776DF4 STR X19, [X31 + 0x20]
	0x03776DF8 CBZ X19, 0x3777060
	0x03776DFC LDR W8, [X19 + 0x10]
	0x03776E00 STR W31, [X31 + 0x30]
	0x03776E04 ADRP X9, 0x9A5000
	0x03776E08 LDR X9, [X9 + 0xDC0]
	0x03776E0C MOVI V0.2D, 0x0
	0x03776E10 STUR V0, [X31 + 0x38]
	0x03776E14 STUR V0, [X31 + 0x48]
	0x03776E18 LDR X0, [X9]
	0x03776E1C STUR V0, [X31 + 0x58]
	0x03776E20 STUR V0, [X31 + 0x68]
	0x03776E24 STP W8, W31, [X31 + 0x28]
	0x03776E28 STUR V0, [X31 + 0x78]
	0x03776E2C LDR W8, [X0 + 0xE0]
	0x03776E30 CBNZ W8, 0x3776E38
	0x03776E34 BL 0x1C16DFC
	0x03776E38 MOV X0, X31
	0x03776E3C BL 0x3815C88
	0x03776E40 STRB W0, [X31 + 0x18]
	0x03776E44 ADD X0, X31, 0x20
	0x03776E48 BL 0x3777230
	0x03776E4C TBZ X0, 0x0, 0x3776EF4
	0x03776E50 ADD X8, X31, 0x20
	0x03776E54 ADD X25, X8, 0x18
	0x03776E58 ADD X3, X31, 0x10
	0x03776E5C ADD X4, X31, 0x8
	0x03776E60 MOV X0, X25
	0x03776E64 MOV X1, X31
	0x03776E68 MOV X2, X31
	0x03776E6C MOV W5, W21
	0x03776E70 BL 0x377749C
	0x03776E74 LDR X8, [X31 + 0x10]
	0x03776E78 MOV X24, X0
	0x03776E7C STR X8, [X22]
	0x03776E80 MOVZ W22, 0x1
	0x03776E84 ADD X0, X31, 0x20
	0x03776E88 BL 0x3777230
	0x03776E8C TBZ X0, 0x0, 0x3776EE0
	0x03776E90 TBNZ X22, 0x0, 0x3776EA8
	0x03776E94 CBZ X23, 0x377705C
	0x03776E98 MOVZ W1, 0x2F
	0x03776E9C MOV X0, X23
	0x03776EA0 MOV X2, X31
	0x03776EA4 BL 0x3233D30
	0x03776EA8 LDR X1, [X31 + 0x10]
	0x03776EAC LDR X2, [X20]
	0x03776EB0 ADD X3, X31, 0x10
	0x03776EB4 MOV X0, X25
	0x03776EB8 MOV X4, X20
	0x03776EBC MOV W5, W21
	0x03776EC0 BL 0x377749C
	0x03776EC4 MOV X1, X0
	0x03776EC8 CBZ X23, 0x3777058
	0x03776ECC MOV X0, X23
	0x03776ED0 MOV X2, X31
	0x03776ED4 BL 0x32333E0
	0x03776ED8 MOV W22, W31
	0x03776EDC B 0x3776E84
	0x03776EE0 TBNZ X21, 0x1, 0x3776EF4
	0x03776EE4 MOV X0, X24
	0x03776EE8 MOV X1, X31
	0x03776EEC BL 0x32277A8
	0x03776EF0 TBZ X0, 0x0, 0x3777018
	0x03776EF4 CBZ X23, 0x3777064
	0x03776EF8 MOV X0, X23
	0x03776EFC MOV X1, X31
	0x03776F00 BL 0x323260C
	0x03776F04 CBZ W0, 0x3776F1C
	0x03776F08 LDR X8, [X23]
	0x03776F0C LDP X9, X1, [X8 + 0x168]
	0x03776F10 MOV X0, X23
	0x03776F14 BLR X9
	0x03776F18 MOV X19, X0
	0x03776F1C ADD X0, X31, 0x18
	0x03776F20 MOV X1, X31
	0x03776F24 BL 0x38196B4
	0x03776F28 B 0x3776FFC
	0x03776F2C MOV X0, X23
	0x03776F30 BL 0x3771F1C
	0x03776F34 MOV X19, X0
	0x03776F38 TBNZ X21, 0x1, 0x3776F74
	0x03776F3C LDR X0, [X23 + 0x78]
	0x03776F40 CBZ X0, 0x3777060
	0x03776F44 BL 0x3771E88
	0x03776F48 ADRP X8, 0x9B0000
	0x03776F4C ADRP X9, 0x97D000
	0x03776F50 LDR X8, [X8 + 0x6D0]
	0x03776F54 LDR X9, [X9 + 0x848]
	0x03776F58 MOV X2, X0
	0x03776F5C MOV X0, X19
	0x03776F60 LDR X1, [X8]
	0x03776F64 LDR X3, [X9]
	0x03776F68 MOV X4, X31
	0x03776F6C BL 0x32277C4
	0x03776F70 MOV X19, X0
	0x03776F74 LDR X8, [X23 + 0x78]
	0x03776F78 CBZ X8, 0x3777060
	0x03776F7C LDP X0, X1, [X8 + 0x58]
	0x03776F80 MOV X2, X31
	0x03776F84 BL 0x37577E0
	0x03776F88 STR X0, [X22]
	0x03776F8C ADRP X8, 0x9D0000
	0x03776F90 LDR X8, [X8 + 0xB88]
	0x03776F94 LDR X9, [X23]
	0x03776F98 LDR X8, [X8]
	0x03776F9C LDRB W11, [X9 + 0x130]
	0x03776FA0 LDRB W10, [X8 + 0x130]
	0x03776FA4 CMP W11, W10
	0x03776FA8 B.CC 0x3776FC0
	0x03776FAC LDR X9, [X9 + 0xC8]
	0x03776FB0 ADD X9, X9, X10, 0x3, LSL
	0x03776FB4 LDUR X9, [X9 - 0x8]
	0x03776FB8 CMP X9, X8
	0x03776FBC B.EQ 0x3776FFC
	0x03776FC0 MOV X0, X23
	0x03776FC4 BL 0x3771F68
	0x03776FC8 LDR X8, [X23 + 0x78]
	0x03776FCC CBZ X8, 0x3777060
	0x03776FD0 MOV X21, X0
	0x03776FD4 MOV X0, X8
	0x03776FD8 BL 0x3771F68
	0x03776FDC CBZ X0, 0x3777060
	0x03776FE0 CBZ X21, 0x3777060
	0x03776FE4 LDR W8, [X0 + 0x10]
	0x03776FE8 MOV X0, X21
	0x03776FEC MOV X2, X31
	0x03776FF0 ADD W1, W8, 0x1
	0x03776FF4 BL 0x322B484
	0x03776FF8 STR X0, [X20]
	0x03776FFC MOV X0, X19
	0x03777000 LDP X20, X19, [X31 + 0xC0]
	0x03777004 LDP X22, X21, [X31 + 0xB0]
	0x03777008 LDP X24, X23, [X31 + 0xA0]
	0x0377700C LDP X30, X25, [X31 + 0x90]
	0x03777010 ADD X31, X31, 0xD0
	0x03777014 RET
	0x03777018 CBZ X23, 0x3777068
	0x0377701C ADRP X8, 0x9AF000
	0x03777020 LDR X8, [X8 + 0x6D0]
	0x03777024 LDR X1, [X8]
	0x03777028 MOV X0, X23
	0x0377702C MOV X2, X31
	0x03777030 BL 0x32333E0
	0x03777034 MOV X0, X23
	0x03777038 MOV X1, X24
	0x0377703C MOV X2, X31
	0x03777040 BL 0x32333E0
	0x03777044 MOVZ W1, 0x5D
	0x03777048 MOV X0, X23
	0x0377704C MOV X2, X31
	0x03777050 BL 0x3233D30
	0x03777054 B 0x3776EF8
	0x03777058 BL 0x1C16F20
	0x0377705C BL 0x1C16F20
	0x03777060 BL 0x1C16F20
	0x03777064 BL 0x1C16F20
	0x03777068 BL 0x1C16F20
	0x0377706C B 0x37770A8
	0x03777070 B 0x37770A8
	0x03777074 B 0x37770A8
	0x03777078 B 0x37770A8
	0x0377707C B 0x37770A8
	0x03777080 B 0x37770A8
	0x03777084 B 0x37770A8
	0x03777088 B 0x37770A8
	0x0377708C B 0x37770A8
	0x03777090 B 0x37770A8
	0x03777094 B 0x37770A8
	0x03777098 B 0x37770A8
	0x0377709C B 0x37770A8
	0x037770A0 B 0x37770A8
	0x037770A4 B 0x37770A8
	0x037770A8 MOV X19, X0
	0x037770AC CMP W1, 0x1
	0x037770B0 B.NE 0x37770DC
	0x037770B4 MOV X0, X19
	0x037770B8 BL 0x3EB1AD0
	0x037770BC LDR X20, [X0]
	0x037770C0 BL 0x3EB1AE0
	0x037770C4 ADD X0, X31, 0x18
	0x037770C8 MOV X1, X31
	0x037770CC BL 0x38196B4

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+32], X26
	004 Move [X31+40], X25
	005 Move [X31+48], X24
	006 Move [X31+56], X23
	007 Move [X31+64], X22
	008 Move [X31+72], X21
	009 Move [X31+80], X20
	010 Move [X31+88], X19
	011 Move X20, 0xC6B000
	012 Move W8, [X20+3892]
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {32}
	018 Move X0, 0x9D1000
	019 Move X0, [X0+3176]
	020 Call 0x1C17CF4
	021 Move X0, 0x9D1000
	022 Move X0, [X0+3408]
	023 Call 0x1C17CF4
	024 Move X0, 0x9A6000
	025 Move X0, [X0+3352]
	026 Call 0x1C17CF4
	027 Move X0, 0x9D1000
	028 Move X0, [X0+3416]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X20+3892], W8
	032 Add X21, X19, 64
	033 Move X0, X21
	034 Move X1, X31
	035 Move [X31+28], W31
	036 Call InputEventPtr.get_valid, X0
	037 Move TEMP, X0
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfNotEqual {258}
	041 Move X0, X21
	042 Move X1, X31
	043 Call InputEventPtr.get_type, X0
	044 Move W8, 0x5441
	045 Move X20, X0
	046 NotImplemented "Instruction MOVK not yet implemented."
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move W8, 0x4154
	049 NotImplemented "Instruction MOVK not yet implemented."
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move X0, [X19+64]
	052 Move X1, X31
	053 Call StateEvent.FromUnchecked, X0
	054 Move X1, X31
	055 Move X22, X0
	056 Call StateEvent.get_state, X0
	057 Move [X19+88], X0
	058 Move X0, X22
	059 Move X1, X31
	060 Call StateEvent.get_stateSizeInBytes, X0
	061 Move W8, W0
	062 ShiftRight W8, 29
	063 And W8, W8, 0xFFFFFFF
	064 Move [X19+96], W31
	065 Move [X19+100], W8
	066 Compare X22, 0
	067 JumpIfNotEqual {92}
	068 Move X0, [X19+64]
	069 Move X1, X31
	070 Call DeltaStateEvent.FromUnchecked, X0
	071 Move X1, X31
	072 Move X22, X0
	073 Call DeltaStateEvent.get_deltaState, X0
	074 Compare X22, 0
	075 JumpIfEqual {225}
	076 Move W8, [X22+24]
	077 Move X1, X31
	078 Subtract X8, X0, X8
	079 Move [X19+88], X8
	080 Move W23, [X22+24]
	081 Move X0, X22
	082 Move W8, W23
	083 ShiftRight W8, 29
	084 And W8, W8, 0xFFFFFFF
	085 Move [X19+96], W8
	086 Call DeltaStateEvent.get_deltaStateSizeInBytes, X0
	087 Add W8, W0, W23
	088 Move W8, W8
	089 ShiftRight W8, 29
	090 And W8, W8, 0xFFFFFFF
	091 Move [X19+100], W8
	092 Add X8, X22, 20
	093 Move X22, [X19+8]
	094 Move W26, [X8]
	095 Move [X19+72], X31
	096 Move [X19+80], X31
	097 Compare X22, 0
	098 JumpIfEqual {225}
	099 Move X8, 0x9A6000
	100 Move X8, [X8+3352]
	101 Move X0, [X8]
	102 Move W8, [X0+224]
	103 Compare W8, 0
	104 JumpIfNotEqual {106}
	105 Call 0x1C17DFC
	106 Move W8, [X22+16]
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Move [X31+28], W31
	109 Move X25, [X19+8]
	110 Compare X25, 0
	111 JumpIfEqual {225}
	112 Move W8, [X25+220]
	113 Move TEMP, X8
	114 And TEMP, TEMP, 2
	115 Compare TEMP, 2
	116 JumpIfNotEqual {185}
	117 Move X24, 0x9D1000
	118 Move X22, [X19+64]
	119 Move X24, [X24+3176]
	120 Move X0, X25
	121 Move X23, [X24]
	122 Move X1, X23
	123 Call 0x1C17E00
	124 Compare X0, 0
	125 JumpIfEqual {304}
	126 Move X24, [X24]
	127 Move X0, X25
	128 Move X1, X24
	129 Call 0x1C17E00
	130 Compare X0, 0
	131 JumpIfEqual {307}
	132 Move X8, [X0]
	133 Move X23, X0
	134 NotImplemented "Instruction LDRH not yet implemented."
	135 Compare X9, 0
	136 JumpIfEqual {143}
	137 Move X10, [X8+176]
	138 Add X10, X10, 8
	139 NotImplemented "Instruction LDUR not yet implemented."
	140 NotImplemented "Instruction CMP not yet implemented."
	141 Subtract X9, X9, 1
	142 Add X10, X10, 16
	143 Move W2, 2
	144 Move X0, X23
	145 Move X1, X24
	146 Call 0x1C5D788
	147 Move W9, [X10]
	148 Add W9, W9, 2
	149 Add X8, X8, W9
	150 Add X0, X8, 312
	151 Move X8, [X0]
	152 Move X4, [X0+8]
	153 Add X3, X31, 28
	154 Move X0, X23
	155 Move X1, X31
	156 Move X2, X22
	157 NotImplemented "Instruction BLR not yet implemented."
	158 Move TEMP, X0
	159 And TEMP, TEMP, 1
	160 Compare TEMP, 1
	161 JumpIfNotEqual {182}
	162 Move W8, [X31+28]
	163 Move X9, [X19+48]
	164 Move W10, W8
	165 ShiftRight W10, 29
	166 And W10, W10, 0xFFFFFFF
	167 Move [X19+84], W10
	168 Compare X9, 0
	169 JumpIfEqual {172}
	170 Add X9, X9, X8
	171 Move [X19+48], X9
	172 Move X9, [X19+40]
	173 Compare X9, 0
	174 JumpIfEqual {177}
	175 Add X9, X9, X8
	176 Move [X19+40], X9
	177 Move X9, [X19+56]
	178 Compare X9, 0
	179 JumpIfEqual {214}
	180 Add X8, X9, X8
	181 Move [X19+56], X8
	182 Move X25, [X19+8]
	183 Compare X25, 0
	184 JumpIfEqual {226}
	185 Move X8, 0x9D1000
	186 Move X8, [X8+3416]
	187 Move X9, [X25]
	188 Move X8, [X8]
	189 Move W11, [X9+304]
	190 Move W10, [X8+304]
	191 NotImplemented "Instruction CMP not yet implemented."
	192 Move X9, [X9+200]
	193 Add X9, X9, X10
	194 NotImplemented "Instruction LDUR not yet implemented."
	195 NotImplemented "Instruction CMP not yet implemented."
	196 Move X8, 0x9D1000
	197 Move X8, [X8+3408]
	198 Move X0, X21
	199 Move X1, [X8]
	200 Call InputEventPtr.IsA, X0
	201 Move TEMP, X0
	202 And TEMP, TEMP, 1
	203 Compare TEMP, 1
	204 JumpIfNotEqual {226}
	205 Move X0, [X19+64]
	206 Move X1, X31
	207 Call StateEvent.FromUnchecked, X0
	208 Compare X0, 0
	209 JumpIfEqual {225}
	210 Move W21, [X0+20]
	211 Move X0, X31
	212 Call TouchState.get_Format
	213 NotImplemented "Instruction CMP not yet implemented."
	214 Move X20, [X31+80]
	215 Move X19, [X31+88]
	216 Move X22, [X31+64]
	217 Move X21, [X31+72]
	218 Move X24, [X31+48]
	219 Move X23, [X31+56]
	220 Move X26, [X31+32]
	221 Move X25, [X31+40]
	222 Move X30, [X31+16]
	223 Add X31, X31, 96
	224 Return 
	225 Call 0x1C17F20
	226 Move [X31+24], W20
	227 Move X20, 0x9A6000
	228 Move X20, [X20+3368]
	229 Move X0, X20
	230 Call 0x1C17D08
	231 Add X1, X31, 24
	232 Call 0x1C17E04
	233 Move X21, X0
	234 Move X0, X20
	235 Move [X31+8], W26
	236 Call 0x1C17D08
	237 Add X1, X31, 8
	238 Call 0x1C17E04
	239 Move X20, X0
	240 Move X0, 0x9D1000
	241 Move X19, [X19+8]
	242 Move X0, [X0+3424]
	243 Call 0x1C17D08
	244 Move X1, X21
	245 Move X2, X20
	246 Move X3, X19
	247 Move X4, X31
	248 Call String.Format, X0, X1, X2, X3
	249 Move X19, X0
	250 Move X0, 0x97E000
	251 Move X0, [X0+1456]
	252 Call 0x1C17D08
	253 Call 0x1C17F10
	254 Move X1, X19
	255 Move X2, X31
	256 Move X20, X0
	257 Call InvalidOperationException..ctor, X0, X1
	258 Move X0, 0x9A6000
	259 Move X0, [X0+1208]
	260 Call 0x1C17D08
	261 Call 0x1C17F10
	262 Move X19, X0
	263 Move X0, 0x9D0000
	264 Move X0, [X0+3312]
	265 Call 0x1C17D08
	266 Move X1, X0
	267 Move X0, X19
	268 Move X2, X31
	269 Call ObjectDisposedException..ctor, X0, X1
	270 Move X0, 0x9D0000
	271 Move X0, [X0+3432]
	272 Call 0x1C17D08
	273 Move X1, X0
	274 Move X0, X19
	275 Call 0x1C17DEC
	276 Move [X31+24], W20
	277 Move X0, 0x9A5000
	278 Move X0, [X0+3368]
	279 Call 0x1C17D08
	280 Add X1, X31, 24
	281 Call 0x1C17E04
	282 Move X19, X0
	283 Move X0, 0x9D0000
	284 Move X0, [X0+3440]
	285 Call 0x1C17D08
	286 Move X1, X19
	287 Move X2, X31
	288 Call String.Format, X0, X1
	289 Move X19, X0
	290 Move X0, 0x97D000
	291 Move X0, [X0+2880]
	292 Call 0x1C17D08
	293 Call 0x1C17F10
	294 Move X1, X19
	295 Move X2, X31
	296 Move X20, X0
	297 Call NotSupportedException..ctor, X0, X1
	298 Move X0, 0x9D0000
	299 Move X0, [X0+3432]
	300 Call 0x1C17D08
	301 Move X1, X0
	302 Move X0, X20
	303 Call 0x1C17DEC
	304 Move X0, X25
	305 Move X1, X23
	306 Call 0x1C181E0
	307 Move X0, X25
	308 Move X1, X24
	309 Call 0x1C181E0

Method: System.Void Dispose()

Disassembly:
	0x03777130 STR X31, [X31 + 0x18]
	0x03777134 BL 0x32277A8

ISIL:
	001 Move [X0+64], X31
	002 Return 

Method: UnityEngine.InputSystem.InputControl get_Current()

Disassembly:
	0x03777138 TBNZ X0, 0x0, 0x3777188
	0x0377713C CBZ X19, 0x37771A8

ISIL:
	001 Move X0, [X0+72]
	002 Return X0

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x03777140 STR X20, [X31 + 0x8]
	0x03777144 CBZ X20, 0x37771F0

ISIL:
	001 Move X0, [X0+72]
	002 Return X0

