Type: UnityEngine.InputSystem.PressureSensor

Method: UnityEngine.InputSystem.Controls.AxisControl get_atmosphericPressure()

Disassembly:
	0x037C003C ADRP X0, 0x987000
	0x037C0040 LDR X0, [X0 + 0xFB0]

ISIL:
	001 Move X0, [X0+368]
	002 Return X0

Method: System.Void set_atmosphericPressure(UnityEngine.InputSystem.Controls.AxisControl value)

Disassembly:
	0x037C0044 BL 0x1C16CF4
	0x037C0048 ADRP X0, 0x987000

ISIL:
	001 Move [X0+368], X1
	002 Return 

Method: UnityEngine.InputSystem.PressureSensor get_current()

Disassembly:
	0x037C004C LDR X0, [X0 + 0x408]
	0x037C0050 BL 0x1C16CF4
	0x037C0054 ADRP X0, 0x987000
	0x037C0058 LDR X0, [X0 + 0xFB8]
	0x037C005C BL 0x1C16CF4
	0x037C0060 ADRP X0, 0x987000
	0x037C0064 LDR X0, [X0 + 0xFC0]
	0x037C0068 BL 0x1C16CF4
	0x037C006C ADRP X0, 0x986000
	0x037C0070 LDR X0, [X0 + 0xD58]
	0x037C0074 BL 0x1C16CF4
	0x037C0078 MOVZ W8, 0x1
	0x037C007C STRB W8, [X20 + 0x1B1]
	0x037C0080 MOV X0, X19
	0x037C0084 MOV X1, X31
	0x037C0088 BL 0x3772640
	0x037C008C LDR X8, [X21]
	0x037C0090 LDR W21, [X19 + 0x14]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xC22000
	005 Move X20, 0x988000
	006 Move W8, [X19+414]
	007 Move X20, [X20+3928]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x988000
	013 Move X0, [X0+3928]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+414], W8
	017 Move X8, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X8, [X8+184]
	021 Move X0, [X8]
	022 Move X30, [X31+32]
	023 Return X0

Method: System.Void set_current(UnityEngine.InputSystem.PressureSensor value)

Disassembly:
	0x037C0094 STR X0, [X31 + 0x18]
	0x037C0098 LDR W9, [X8 + 0xE0]
	0x037C009C CBNZ W9, 0x37C00A8
	0x037C00A0 MOV X0, X8
	0x037C00A4 BL 0x1C16DFC
	0x037C00A8 ADRP X25, 0x986000
	0x037C00AC ADRP X27, 0x987000
	0x037C00B0 LDR X25, [X25 + 0xD58]
	0x037C00B4 LDR X27, [X27 + 0x408]
	0x037C00B8 LDP X8, X9, [X19 + 0x1A8]
	0x037C00BC ADRP X20, 0x93B000
	0x037C00C0 ADRP X28, 0xC19000
	0x037C00C4 STP X8, X9, [X31]
	0x037C00C8 LDR X20, [X20 + 0xF08]
	0x037C00CC UBFM X10, X9, 0x20, 0x3F
	0x037C00D0 CMP W10, 0x1
	0x037C00D4 B.LT 0x37C01FC
	0x037C00D8 ADRP X26, 0x987000
	0x037C00DC ADRP X10, 0xFFFFFFFFFD329000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xC22000
	006 Move X21, 0x988000
	007 Move W8, [X20+415]
	008 Move X21, [X21+3928]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x988000
	015 Move X0, [X0+3928]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+415], W8
	019 Move X8, [X21]
	020 Move X8, [X8+184]
	021 Move [X8], X19
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X30, [X31+32]
	025 Move X21, [X31+40]
	026 Return 

Method: System.Void MakeCurrent()

Disassembly:
	0x037C00E0 LDR X26, [X26 + 0xFC0]
	0x037C00E4 LDR V8, [X10 + 0xF20]
	0x037C00E8 LDR X10, [X31 + 0x18]
	0x037C00EC MOV W22, W31
	0x037C00F0 ADD X29, X19, 0x1A8
	0x037C00F4 MOVZ W24, 0x1
	0x037C00F8 ADD X10, X10, X21
	0x037C00FC ADD X21, X10, 0x38
	0x037C0100 CBZ X21, 0x37C0310
	0x037C0104 LDP S0, S1, [X21 + 0xC]
	0x037C0108 FMUL S0, S0, S0
	0x037C010C FMUL S1, S1, S1
	0x037C0110 FADD S0, S0, S1
	0x037C0114 FCMP S0, S8
	0x037C0118 B.MI 0x37C016C
	0x037C011C LDR X2, [X26]
	0x037C0120 ADD X0, X31, 0x0
	0x037C0124 MOV W1, W22
	0x037C0128 STP X8, X9, [X31]
	0x037C012C BL 0x24FDB3C
	0x037C0130 CBZ X0, 0x37C0310

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X1, X31
	005 Move X19, X0
	006 Call InputDevice.MakeCurrent, X0
	007 Move X20, 0xC22000
	008 Move W8, [X20+557]
	009 Compare W8, 0
	010 JumpIfNotEqual {16}
	011 Move X0, 0x988000
	012 Move X0, [X0+3928]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+557], W8
	016 Move X8, 0x988000
	017 Move X8, [X8+3928]
	018 Move X8, [X8]
	019 Move X8, [X8+184]
	020 Move [X8], X19
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X30, [X31+32]
	024 Return 

Method: System.Void OnRemoved()

Disassembly:
	0x037C0134 LDRB W8, [X28 + 0x78F]
	0x037C0138 LDR X23, [X0 + 0x190]
	0x037C013C CBNZ W8, 0x37C014C
	0x037C0140 MOV X0, X20
	0x037C0144 BL 0x1C16CF4
	0x037C0148 STRB W24, [X28 + 0x78F]
	0x037C014C LDR X8, [X20]
	0x037C0150 LDR X3, [X27]
	0x037C0154 MOV X0, X23
	0x037C0158 MOV W1, W31
	0x037C015C LDR X8, [X8 + 0xB8]
	0x037C0160 MOV X2, X31
	0x037C0164 LDP S0, S1, [X8]
	0x037C0168 BL 0x2209FB4
	0x037C016C LDRB W8, [X21 + 0x21]
	0x037C0170 CBZ W8, 0x37C01E0
	0x037C0174 MOV X0, X31
	0x037C0178 BL 0x37FC688
	0x037C017C LDR X8, [X25]
	0x037C0180 LDR V2, [X21 + 0x28]
	0x037C0184 LDR X8, [X8 + 0xB8]
	0x037C0188 LDP S1, S3, [X8 + 0x8]
	0x037C018C FCVT S1, S1
	0x037C0190 FADD D1, D2, D1
	0x037C0194 FCVT S2, S3
	0x037C0198 FADD D1, D1, D2
	0x037C019C FCMP D0, D1
	0x037C01A0 B.LT 0x37C01E0
	0x037C01A4 LDR V0, [X29]
	0x037C01A8 LDR X2, [X26]
	0x037C01AC ADD X0, X31, 0x0
	0x037C01B0 MOV W1, W22
	0x037C01B4 STR V0, [X31]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X1, X31
	005 Move X19, X0
	006 Call InputDevice.OnRemoved, X0
	007 Move X20, 0xC22000
	008 Move W8, [X20+558]
	009 Compare W8, 0
	010 JumpIfNotEqual {16}
	011 Move X0, 0x988000
	012 Move X0, [X0+3928]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+558], W8
	016 Move X20, 0x988000
	017 Move X20, [X20+3928]
	018 Move X8, [X20]
	019 Move X8, [X8+184]
	020 Move X9, [X8]
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move X19, 0xC22000
	023 Move W9, [X19+557]
	024 Compare W9, 0
	025 JumpIfNotEqual {32}
	026 Move X0, X20
	027 Call 0x1C17CF4
	028 Move X8, [X20]
	029 Move W9, 1
	030 Move [X19+557], W9
	031 Move X8, [X8+184]
	032 Move [X8], X31
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Return 

Method: System.Void FinishSetup()

Disassembly:
	0x037C01B8 BL 0x24FDB3C
	0x037C01BC CBZ X0, 0x37C0310
	0x037C01C0 ADRP X8, 0x987000
	0x037C01C4 LDR X0, [X0 + 0x1C0]
	0x037C01C8 LDR X8, [X8 + 0xFB0]
	0x037C01CC MOV W1, W31
	0x037C01D0 MOV W2, W31
	0x037C01D4 MOV X3, X31
	0x037C01D8 LDR X4, [X8]
	0x037C01DC BL 0x220916C
	0x037C01E0 LDP X8, X9, [X19 + 0x1A8]
	0x037C01E4 ADD W22, W22, 0x1
	0x037C01E8 ADD X21, X21, 0x38
	0x037C01EC UBFM X10, X9, 0x20, 0x3F
	0x037C01F0 CMP W22, W10
	0x037C01F4 STP X8, X9, [X31]
	0x037C01F8 B.LT 0x37C0100
	0x037C01FC ADRP X8, 0x95B000
	0x037C0200 LDR X8, [X8 + 0xD18]
	0x037C0204 LDR W21, [X19 + 0x14]
	0x037C0208 LDR X0, [X8]
	0x037C020C LDR W8, [X0 + 0xE0]
	0x037C0210 CBNZ W8, 0x37C0218
	0x037C0214 BL 0x1C16DFC
	0x037C0218 LDR X8, [X31 + 0x18]
	0x037C021C ADDS X22, X21, X8
	0x037C0220 B.EQ 0x37C0310
	0x037C0224 LDP S0, S1, [X22 + 0xC]
	0x037C0228 ADRP X8, 0xFFFFFFFFFD329000
	0x037C022C LDR V2, [X8 + 0xF20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xC22000
	007 Move X21, 0x988000
	008 Move X22, 0x985000
	009 Move W8, [X20+416]
	010 Move X21, [X21+3936]
	011 Move X22, [X22+3632]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x985000
	018 Move X0, [X0+3632]
	019 Call 0x1C17CF4
	020 Move X0, 0x988000
	021 Move X0, [X0+3936]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+416], W8
	025 Move X1, [X21]
	026 Move X2, [X22]
	027 Move X0, X19
	028 Call 0x21FD754, X0, X1
	029 Move [X19+368], X0
	030 Move X0, X19
	031 Move X20, [X31+32]
	032 Move X19, [X31+40]
	033 Move X22, [X31+16]
	034 Move X21, [X31+24]
	035 Move X1, X31
	036 Move X30, [X31+48]
	037 Call InputControl.FinishSetup, X0
	038 Return 

Method: System.Void .ctor()

Disassembly:
	0x037C0230 FMUL S0, S0, S0
	0x037C0234 FMUL S1, S1, S1

ISIL:
	001 Move X1, X31
	002 Call InputDevice..ctor, X0
	003 Return 

