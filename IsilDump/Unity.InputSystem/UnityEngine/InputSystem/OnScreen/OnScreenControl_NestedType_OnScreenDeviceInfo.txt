Type: UnityEngine.InputSystem.OnScreen.OnScreenControl/OnScreenDeviceInfo

Method: UnityEngine.InputSystem.OnScreen.OnScreenControl/OnScreenDeviceInfo AddControl(UnityEngine.InputSystem.OnScreen.OnScreenControl control)

Disassembly:
	0x037EFD7C LDR X1, [X8]
	0x037EFD80 ADD X8, X31, 0x8
	0x037EFD84 MOV X5, X31
	0x037EFD88 BL 0x3746870
	0x037EFD8C LDR X0, [X22]
	0x037EFD90 LDR X20, [X19 + 0x50]
	0x037EFD94 BL 0x1C16F10
	0x037EFD98 LDR X2, [X21]
	0x037EFD9C MOV X1, X19
	0x037EFDA0 MOV X3, X31
	0x037EFDA4 MOV X21, X0

ISIL:
	001 Move [X31-16], X30
	002 Compare X1, 0
	003 JumpIfEqual {14}
	004 Move X9, [X0+32]
	005 Move [X1+40], X9
	006 Move V1, [X0]
	007 Move V0, [X0+16]
	008 Move [X0+32], X1
	009 Move [X8+32], X1
	010 Move [X8], V1
	011 Move [X8+8], V0
	012 Move X30, [X31+16]
	013 Return X0
	014 Call 0x1C17F20

Method: UnityEngine.InputSystem.OnScreen.OnScreenControl/OnScreenDeviceInfo RemoveControl(UnityEngine.InputSystem.OnScreen.OnScreenControl control)

Disassembly:
	0x037F00DC ADRP X0, 0x92B000
	0x037F00E0 LDR X0, [X0 + 0x558]
	0x037F00E4 BL 0x1C16CF4
	0x037F00E8 ADRP X0, 0x959000
	0x037F00EC LDR X0, [X0 + 0x760]
	0x037F00F0 BL 0x1C16CF4
	0x037F00F4 ADRP X0, 0x959000
	0x037F00F8 LDR X0, [X0 + 0x330]
	0x037F00FC BL 0x1C16CF4
	0x037F0100 ADRP X0, 0x903000
	0x037F0104 LDR X0, [X0 + 0x598]
	0x037F0108 BL 0x1C16CF4
	0x037F010C ADRP X0, 0x959000
	0x037F0110 LDR X0, [X0 + 0x768]
	0x037F0114 BL 0x1C16CF4
	0x037F0118 ADRP X0, 0x957000
	0x037F011C LDR X0, [X0 + 0x3C0]
	0x037F0120 BL 0x1C16CF4
	0x037F0124 MOVZ W8, 0x1
	0x037F0128 STRB W8, [X20 + 0x366]
	0x037F012C ADRP X20, 0xBE9000
	0x037F0130 LDRB W8, [X20 + 0x78F]
	0x037F0134 MOVI V0.2D, 0x0
	0x037F0138 STP V0, V0, [X31 + 0xA0]
	0x037F013C STP V0, V0, [X31 + 0x80]
	0x037F0140 STP V0, V0, [X31 + 0x60]
	0x037F0144 CBNZ W8, 0x37F015C
	0x037F0148 ADRP X0, 0x90B000
	0x037F014C LDR X0, [X0 + 0xF08]
	0x037F0150 BL 0x1C16CF4
	0x037F0154 MOVZ W8, 0x1
	0x037F0158 STRB W8, [X20 + 0x78F]
	0x037F015C ADRP X8, 0x90B000
	0x037F0160 LDR X8, [X8 + 0xF08]
	0x037F0164 ADD X0, X31, 0xC0
	0x037F0168 MOV X1, X31
	0x037F016C LDR X8, [X8]
	0x037F0170 LDR X8, [X8 + 0xB8]
	0x037F0174 LDP S8, S9, [X8]
	0x037F0178 BL 0x3735E8C
	0x037F017C CBZ X0, 0x37F01DC
	0x037F0180 LDR X8, [X0 + 0x78]
	0x037F0184 CBZ X8, 0x37F01DC
	0x037F0188 ADRP X9, 0x957000
	0x037F018C LDR X9, [X9 + 0x3C0]
	0x037F0190 LDR X10, [X8]
	0x037F0194 LDR X9, [X9]
	0x037F0198 LDRB W12, [X10 + 0x130]
	0x037F019C LDRB W11, [X9 + 0x130]
	0x037F01A0 CMP W12, W11
	0x037F01A4 B.CC 0x37F01DC
	0x037F01A8 LDR X10, [X10 + 0xC8]
	0x037F01AC ADD X10, X10, X11, 0x3, LSL
	0x037F01B0 LDUR X10, [X10 - 0x8]
	0x037F01B4 CMP X10, X9
	0x037F01B8 B.NE 0x37F01DC
	0x037F01BC LDR X0, [X8 + 0x170]
	0x037F01C0 CBZ X0, 0x37F0350
	0x037F01C4 ADRP X8, 0x92B000
	0x037F01C8 LDR X8, [X8 + 0x558]
	0x037F01CC LDR X1, [X8]
	0x037F01D0 BL 0x2E095F8
	0x037F01D4 MOV V8.16B, V0.16B
	0x037F01D8 MOV V9.16B, V1.16B
	0x037F01DC LDR X8, [X19 + 0x80]
	0x037F01E0 CBZ X8, 0x37F0350
	0x037F01E4 ADRP X9, 0x92A000
	0x037F01E8 LDR X9, [X9 + 0xDF8]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0xBF2000
	009 Move X23, 0x904000
	010 Move X19, X8
	011 Move W8, [X22+864]
	012 Move X23, [X23+1432]
	013 Move X21, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0x904000
	020 Move X0, [X0+1432]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+864], W8
	024 Move X0, [X23]
	025 Move X22, [X20+32]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X0, X22
	031 Move X1, X21
	032 Move X2, X31
	033 Call Object.op_Equality, X0, X1
	034 Move TEMP, X0
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfNotEqual {42}
	038 Compare X21, 0
	039 JumpIfEqual {94}
	040 Move X8, [X21+40]
	041 Move [X20+32], X8
	042 Move X22, [X20+32]
	043 Compare X22, 0
	044 JumpIfEqual {94}
	045 Move X0, [X23]
	046 Move X24, X22
	047 Move X22, [X22+40]
	048 Move W8, [X0+224]
	049 Compare W8, 0
	050 JumpIfNotEqual {52}
	051 Call 0x1C17DFC
	052 Move X0, X22
	053 Move X1, X31
	054 Move X2, X31
	055 Call Object.op_Inequality, X0, X1
	056 Move TEMP, X0
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfNotEqual {77}
	060 Move X0, [X23]
	061 Move W8, [X0+224]
	062 Compare W8, 0
	063 JumpIfNotEqual {65}
	064 Call 0x1C17DFC
	065 Move X0, X22
	066 Move X1, X21
	067 Move X2, X31
	068 Call Object.op_Inequality, X0, X1
	069 Compare X22, 0
	070 JumpIfEqual {94}
	071 Move TEMP, X0
	072 And TEMP, TEMP, 1
	073 Compare TEMP, 1
	074 JumpIfEqual {45}
	075 Move X8, [X22+40]
	076 Move [X24+40], X8
	077 Compare X21, 0
	078 JumpIfEqual {94}
	079 Move [X21+40], X31
	080 Move X8, [X20+32]
	081 Move V1, [X20]
	082 Move V0, [X20+16]
	083 Move X22, [X31+32]
	084 Move X21, [X31+40]
	085 Move X24, [X31+16]
	086 Move X23, [X31+24]
	087 Move [X19+32], X8
	088 Move [X19], V1
	089 Move [X19+8], V0
	090 Move X20, [X31+48]
	091 Move X19, [X31+56]
	092 Move X30, [X31+64]
	093 Return X0
	094 Call 0x1C17F20

Method: System.Void Destroy()

Disassembly:
	0x037EFCD8 CBZ X0, 0x37EFCF4
	0x037EFCDC MOV X1, X31
	0x037EFCE0 BL 0x37345CC
	0x037EFCE4 UBFM X8, X1, 0x20, 0x3F
	0x037EFCE8 CBNZ X8, 0x37EFD8C
	0x037EFCEC LDR X20, [X19 + 0x58]
	0x037EFCF0 CBNZ X20, 0x37EFD14
	0x037EFCF4 ADRP X8, 0x908000
	0x037EFCF8 LDR X8, [X8 + 0x3E0]
	0x037EFCFC LDR X0, [X8]
	0x037EFD00 BL 0x1C16F10
	0x037EFD04 MOV X1, X31
	0x037EFD08 MOV X20, X0
	0x037EFD0C BL 0x3734C10
	0x037EFD10 STR X20, [X19 + 0x58]
	0x037EFD14 ADRP X8, 0x95A000
	0x037EFD18 LDR X8, [X8 + 0x730]
	0x037EFD1C MOV X0, X20
	0x037EFD20 MOV X2, X31
	0x037EFD24 MOV X3, X31
	0x037EFD28 LDR X1, [X8]
	0x037EFD2C ADD X8, X31, 0x8
	0x037EFD30 MOV X4, X31
	0x037EFD34 MOV X5, X31
	0x037EFD38 BL 0x3746870
	0x037EFD3C ADRP X8, 0x95A000
	0x037EFD40 LDR X0, [X19 + 0x58]
	0x037EFD44 LDR X8, [X8 + 0x728]
	0x037EFD48 MOV X2, X31
	0x037EFD4C MOV X3, X31
	0x037EFD50 MOV X4, X31
	0x037EFD54 LDR X1, [X8]
	0x037EFD58 ADD X8, X31, 0x8
	0x037EFD5C MOV X5, X31
	0x037EFD60 BL 0x3746870
	0x037EFD64 ADRP X8, 0x956000
	0x037EFD68 LDR X0, [X19 + 0x58]
	0x037EFD6C LDR X8, [X8 + 0x590]
	0x037EFD70 MOV X2, X31
	0x037EFD74 MOV X3, X31
	0x037EFD78 MOV X4, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xBF3000
	005 Move W8, [X19+865]
	006 Move X20, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {22}
	011 Move X0, 0x92D000
	012 Move X0, [X0+624]
	013 Call 0x1C17CF4
	014 Move X0, 0x92D000
	015 Move X0, [X0+3432]
	016 Call 0x1C17CF4
	017 Move X0, 0x95B000
	018 Move X0, [X0+1696]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X19+865], W8
	022 Move X19, X20
	023 Add X19, X19, 8
	024 Move X8, [X19]
	025 Compare X8, 0
	026 JumpIfEqual {32}
	027 Move X8, 0x92D000
	028 Move X8, [X8+3432]
	029 Move X0, X19
	030 Move X1, [X8]
	031 Call NativeArray`1<Byte>.Dispose, X0
	032 Move X20, [X20+24]
	033 Compare X20, 0
	034 JumpIfEqual {45}
	035 Move X8, 0x92D000
	036 Move X8, [X8+624]
	037 Move X0, [X8]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Move X0, X20
	043 Move X1, X31
	044 Call InputSystem.RemoveDevice, X0
	045 Move [X19], X31
	046 Move [X19+8], X31
	047 Move [X19+16], X31
	048 Move X20, [X31+16]
	049 Move X19, [X31+24]
	050 Move X30, [X31+32]
	051 Return 

