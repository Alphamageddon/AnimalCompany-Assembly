Type: UnityEngine.InputSystem.Utilities.InlinedArray`1/Enumerator

Method: System.Boolean MoveNext()

Disassembly:
	0x02BB11F4 BL 0x1C16E04
	0x02BB11F8 LDP X20, X19, [X31 + 0x20]
	0x02BB11FC LDR X30, [X31 + 0x10]
	0x02BB1200 ADD X31, X31, 0x30
	0x02BB1204 RET
	0x02BB1208 BL 0x1C16F20
	0x02BB120C STP X30, X19, [X31 - 0x10]!
	0x02BB1210 LDR X8, [X0]
	0x02BB1214 CBZ X8, 0x2BB1244
	0x02BB1218 LDR W9, [X0 + 0xC]
	0x02BB121C LDR W8, [X8 + 0x1C]

ISIL:
	001 Move W9, [X0+24]
	002 Move W8, [X0]
	003 NotImplemented "Instruction CMP not yet implemented."
	004 Add W9, W9, 1
	005 NotImplemented "Instruction CMP not yet implemented."
	006 Move [X0+24], W9
	007 NotImplemented "Instruction CSET not yet implemented."
	008 Return X0
	009 Move W0, W31
	010 Return X0

Method: System.Void Reset()

Disassembly:
	0x02BB1220 MOV X19, X0
	0x02BB1224 CMP W9, W8
	0x02BB1228 B.EQ 0x2BB1234

ISIL:
	001 Move TEMP, 0
	002 Not TEMP
	003 Move W8, TEMP
	004 Move [X0+24], W8
	005 Return 

Method: TValue get_Current()

Disassembly:
	0x02BB122C MOV X0, X31
	0x02BB1230 BL 0x339E09C
	0x02BB1234 STR W31, [X19 + 0x8]
	0x02BB1238 STP X31, X31, [X19 + 0x10]
	0x02BB123C LDP X30, X19, [X31], #0x10
	0x02BB1240 RET
	0x02BB1244 BL 0x1C16F20
	0x02BB1248 STR X30, [X31 - 0x10]!
	0x02BB124C STR X1, [X0]
	0x02BB1250 STR W31, [X0 + 0x8]
	0x02BB1254 CBZ X1, 0x2BB126C
	0x02BB1258 LDR W8, [X1 + 0x1C]
	0x02BB125C STP X31, X31, [X0 + 0x10]
	0x02BB1260 STR W8, [X0 + 0xC]
	0x02BB1264 LDR X30, [X31], #0x10

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move X0, [X1+32]
	006 Move W20, [X19+24]
	007 Move W8, [X0+309]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {13}
	012 Call 0x1C5D684
	013 Move X8, [X0+192]
	014 Move X0, X19
	015 Move W1, W20
	016 Move X20, [X31+16]
	017 Move X19, [X31+24]
	018 Move X2, [X8+16]
	019 Move X30, [X31+32]
	020 Call 0x2DE5BE4, X0, X1
	021 Return X0

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x02BB1268 RET
	0x02BB126C BL 0x1C16F20
	0x02BB1270 RET
	0x02BB1274 STP X30, X19, [X31 - 0x10]!
	0x02BB1278 LDR X9, [X0]
	0x02BB127C CBZ X9, 0x2BB12F8
	0x02BB1280 LDR W8, [X0 + 0xC]
	0x02BB1284 LDR W10, [X9 + 0x1C]
	0x02BB1288 MOV X19, X0
	0x02BB128C CMP W8, W10
	0x02BB1290 B.NE 0x2BB12D4
	0x02BB1294 LDRSW X8, [X19 + 0x8]
	0x02BB1298 LDR W10, [X9 + 0x18]
	0x02BB129C CMP W8, W10
	0x02BB12A0 B.CS 0x2BB12D4
	0x02BB12A4 LDR X9, [X9 + 0x10]
	0x02BB12A8 CBZ X9, 0x2BB12F8
	0x02BB12AC LDR W10, [X9 + 0x18]
	0x02BB12B0 CMP W8, W10
	0x02BB12B4 B.CS 0x2BB12FC
	0x02BB12B8 ADD X9, X9, X8, 0x4, LSL
	0x02BB12BC LDR V0, [X9 + 0x2]
	0x02BB12C0 ADD W8, W8, 0x1
	0x02BB12C4 STR W8, [X19 + 0x8]
	0x02BB12C8 MOVZ W0, 0x1
	0x02BB12CC STR V0, [X19 + 0x1]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X1+32]
	005 Move X19, X1
	006 Move X20, X0
	007 Move W9, [X8+309]
	008 Move TEMP, X9
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {15}
	012 Move X0, X8
	013 Call 0x1C5D684
	014 Move X8, X0
	015 Move X8, [X8+192]
	016 Move X0, X20
	017 Move X1, [X8+40]
	018 Call 0x2BB122C, X0
	019 Move [X31+8], X0
	020 Move X0, [X19+32]
	021 Move W8, [X0+309]
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {27}
	026 Call 0x1C5D684
	027 Move X8, [X0+192]
	028 Add X1, X31, 8
	029 Move X0, [X8+32]
	030 Call 0x1C17E04
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Return X0

Method: System.Void Dispose()

Disassembly:
	0x02BB12D0 B 0x2BB12F0

ISIL:
	001 Return 

