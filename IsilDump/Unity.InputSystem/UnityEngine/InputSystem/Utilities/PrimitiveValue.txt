Type: UnityEngine.InputSystem.Utilities.PrimitiveValue

Method: System.Byte* get_valuePtr()

Disassembly:
	0x03766810 MOV X0, X31
	0x03766814 BL 0x3338524

ISIL:
	001 Add X0, X0, 4
	002 Return X0

Method: System.TypeCode get_type()

Disassembly:
	0x03766818 CBZ X0, 0x3766A40
	0x0376681C LDR X8, [X0]

ISIL:
	001 Move W0, [X0]
	002 Return X0

Method: System.Boolean get_isEmpty()

Disassembly:
	0x03759800 LDR V14, [X24 + 0x12C]
	0x03759804 FCMP S14, 0x0
	0x03759808 B.GT 0x3759818
	0x0375980C LDR X8, [X22]

ISIL:
	001 Move W8, [X0]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.Void .ctor(System.Boolean value)

Disassembly:
	0x03766820 ADD X19, X19, 0x4
	0x03766824 LDR X9, [X8 + 0x218]
	0x03766828 LDR X1, [X8 + 0x220]
	0x0376682C BLR X9
	0x03766830 MOV X1, X0
	0x03766834 MOV X0, X19
	0x03766838 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 And W8, W1, 1
	002 Move W9, 3
	003 Move [X0+12], W31
	004 Move [X0+5], X31
	005 Move [X0], W9
	006 Move [X0+4], W8
	007 Return 

Method: System.Void .ctor(System.Char value)

Disassembly:
	0x0376683C MOV X2, X31
	0x03766840 LDR X30, [X31], #0x20
	0x03766844 B 0x3398D7C
	0x03766848 ADRP X8, 0x98F000
	0x0376684C LDR X8, [X8 + 0xC48]
	0x03766850 LDR X0, [X8]

ISIL:
	001 Move W8, 4
	002 NotImplemented "Instruction STRH not yet implemented."
	003 Move [X0+6], X31
	004 Move [X0], W8
	005 NotImplemented "Instruction STRH not yet implemented."
	006 Return 

Method: System.Void .ctor(System.Byte value)

Disassembly:
	0x03766854 LDR W8, [X0 + 0xE0]
	0x03766858 CBNZ W8, 0x3766860
	0x0376685C BL 0x1C16DFC
	0x03766860 MOV X0, X31
	0x03766864 BL 0x3338524
	0x03766868 CBZ X0, 0x3766A40

ISIL:
	001 Move W8, 6
	002 Move [X0+12], W31
	003 Move [X0+5], X31
	004 Move [X0], W8
	005 Move [X0+4], W1
	006 Return 

Method: System.Void .ctor(System.SByte value)

Disassembly:
	0x0376686C LDR X8, [X0]
	0x03766870 ADD X19, X19, 0x4
	0x03766874 LDR X9, [X8 + 0x218]
	0x03766878 LDR X1, [X8 + 0x220]
	0x0376687C BLR X9
	0x03766880 MOV X1, X0

ISIL:
	001 Move W8, 5
	002 Move [X0+12], W31
	003 Move [X0+5], X31
	004 Move [X0], W8
	005 Move [X0+4], W1
	006 Return 

Method: System.Void .ctor(System.Int16 value)

Disassembly:
	0x03766884 MOV X0, X19
	0x03766888 LDP X20, X19, [X31 + 0x10]
	0x0376688C MOV X2, X31
	0x03766890 LDR X30, [X31], #0x20
	0x03766894 B 0x337B824
	0x03766898 ADRP X8, 0x98F000

ISIL:
	001 Move W8, 7
	002 NotImplemented "Instruction STRH not yet implemented."
	003 Move [X0+6], X31
	004 Move [X0], W8
	005 NotImplemented "Instruction STRH not yet implemented."
	006 Return 

Method: System.Void .ctor(System.UInt16 value)

Disassembly:
	0x0376689C LDR X8, [X8 + 0xC48]
	0x037668A0 LDR X0, [X8]
	0x037668A4 LDR W8, [X0 + 0xE0]
	0x037668A8 CBNZ W8, 0x37668B0
	0x037668AC BL 0x1C16DFC
	0x037668B0 MOV X0, X31

ISIL:
	001 Move W8, 8
	002 NotImplemented "Instruction STRH not yet implemented."
	003 Move [X0+6], X31
	004 Move [X0], W8
	005 NotImplemented "Instruction STRH not yet implemented."
	006 Return 

Method: System.Void .ctor(System.Int32 value)

Disassembly:
	0x037668B4 BL 0x3338524
	0x037668B8 CBZ X0, 0x3766A40
	0x037668BC LDR X8, [X0]
	0x037668C0 ADD X19, X19, 0x4

ISIL:
	001 Move W8, 9
	002 Move [X0+8], X31
	003 Move [X0], W8
	004 Move [X0+4], W1
	005 Return 

Method: System.Void .ctor(System.UInt32 value)

Disassembly:
	0x037668C4 LDR X9, [X8 + 0x218]
	0x037668C8 LDR X1, [X8 + 0x220]
	0x037668CC BLR X9
	0x037668D0 MOV X1, X0

ISIL:
	001 Move W8, 10
	002 Move [X0+8], X31
	003 Move [X0], W8
	004 Move [X0+4], W1
	005 Return 

Method: System.Void .ctor(System.Int64 value)

Disassembly:
	0x037668D4 MOV X0, X19
	0x037668D8 LDP X20, X19, [X31 + 0x10]
	0x037668DC MOV X2, X31
	0x037668E0 LDR X30, [X31], #0x20
	0x037668E4 B 0x3399B98

ISIL:
	001 Move W8, 11
	002 Move [X0+12], W31
	003 Move [X0], W8
	004 Move [X0+4], X1
	005 Return 

Method: System.Void .ctor(System.UInt64 value)

Disassembly:
	0x037668E8 ADRP X8, 0x98F000
	0x037668EC LDR X8, [X8 + 0xC48]
	0x037668F0 LDR X0, [X8]
	0x037668F4 LDR W8, [X0 + 0xE0]
	0x037668F8 CBNZ W8, 0x3766900

ISIL:
	001 Move W8, 12
	002 Move [X0+12], W31
	003 Move [X0], W8
	004 Move [X0+4], X1
	005 Return 

Method: System.Void .ctor(System.Single value)

Disassembly:
	0x037668FC BL 0x1C16DFC
	0x03766900 MOV X0, X31
	0x03766904 BL 0x3338524
	0x03766908 CBZ X0, 0x3766A40
	0x0376690C LDR X8, [X0]

ISIL:
	001 Move W8, 13
	002 Move [X0+8], X31
	003 Move [X0], W8
	004 Move [X0+4], S0
	005 Return 

Method: System.Void .ctor(System.Double value)

Disassembly:
	0x03766910 ADD X19, X19, 0x4
	0x03766914 LDR X9, [X8 + 0x218]
	0x03766918 LDR X1, [X8 + 0x220]
	0x0376691C BLR X9
	0x03766920 MOV X1, X0

ISIL:
	001 Move W8, 14
	002 Move [X0+12], W31
	003 Move [X0], W8
	004 Move [X0+4], D0
	005 Return 

Method: UnityEngine.InputSystem.Utilities.PrimitiveValue ConvertTo(System.TypeCode type)

Disassembly:
	0x03764C44 CBNZ W8, 0x3764C4C
	0x03764C48 BL 0x1C16DFC
	0x03764C4C FABS D0, D9
	0x03764C50 FABS D1, D8
	0x03764C54 MOV X0, X31
	0x03764C58 FABD D10, D8, D8
	0x03764C5C BL 0x337EDC0
	0x03764C60 ADRP X8, 0xFFFFFFFFFD389000
	0x03764C64 LDR V1, [X8 + 0xBC8]
	0x03764C68 MOVZ X8, 0x8
	0x03764C6C MOV X0, X31
	0x03764C70 FMUL D0, D0, D1
	0x03764C74 FMOV D1, X8
	0x03764C78 BL 0x337EDC0
	0x03764C7C LDP X20, X19, [X31 + 0x20]
	0x03764C80 LDR X30, [X31 + 0x18]
	0x03764C84 LDP D9, D8, [X31 + 0x8]
	0x03764C88 FCMP D10, D0
	0x03764C8C CSET W0, MI
	0x03764C90 LDR V10, [X31], #0x30
	0x03764C94 RET
	0x03764C98 CMP W0, W1
	0x03764C9C FMOV S0, W31
	0x03764CA0 B.LE 0x3764CCC
	0x03764CA4 CMP W0, W2
	0x03764CA8 FMOV S0, 1
	0x03764CAC B.GE 0x3764CCC
	0x03764CB0 SCVTF D0, W0
	0x03764CB4 SCVTF D1, W1
	0x03764CB8 SCVTF D2, W2
	0x03764CBC FSUB D0, D0, D1
	0x03764CC0 FSUB D1, D2, D1
	0x03764CC4 FDIV D0, D0, D1
	0x00000000 INVALID
	0x03764CCC RET
	0x03764CD0 FCMP S0, 0x0
	0x03764CD4 B.LS 0x3764D14
	0x03764CD8 FMOV S1, 1
	0x03764CDC FCMP S0, S1
	0x03764CE0 B.GE 0x3764D18
	0x03764CE4 SCVTF D1, W1
	0x03764CE8 SCVTF D2, W0
	0x03764CEC FCVT S0, S0
	0x03764CF0 FSUB D1, D1, D2
	0x03764CF4 MOVZ X8, 0x7FF00000
	0x03764CF8 FMUL D0, D1, D0
	0x03764CFC FMOV D3, X8
	0x03764D00 FADD D0, D0, D2
	0x03764D04 FCVTZS W8, D0
	0x03764D08 FCMP D0, D3
	0x03764D0C MOVZ W9, 0x80000000
	0x03764D10 CSEL W0, W9, W8, EQ
	0x03764D14 RET
	0x03764D18 MOV W0, W1
	0x03764D1C RET
	0x03764D20 CMP W0, W1
	0x03764D24 FMOV S0, W31
	0x03764D28 B.LS 0x3764D54
	0x03764D2C CMP W0, W2
	0x03764D30 FMOV S0, 1
	0x03764D34 B.CS 0x3764D54
	0x03764D38 UCVTF D0, W0
	0x03764D3C UCVTF D1, W1
	0x03764D40 UCVTF D2, W2
	0x03764D44 FSUB D0, D0, D1
	0x03764D48 FSUB D1, D2, D1
	0x03764D4C FDIV D0, D0, D1
	0x00000000 INVALID
	0x03764D54 RET
	0x03764D58 FCMP S0, 0x0
	0x03764D5C B.LS 0x3764D94
	0x03764D60 FMOV S1, 1
	0x03764D64 FCMP S0, S1
	0x03764D68 B.GE 0x3764D98
	0x03764D6C UCVTF D1, W1
	0x03764D70 UCVTF D2, W0
	0x03764D74 FCVT S0, S0
	0x03764D78 FSUB D1, D1, D2
	0x03764D7C FMUL D0, D1, D0
	0x03764D80 FADD D0, D0, D2
	0x03764D84 FCVTZS W8, D0
	0x03764D88 FCVTZU W9, D0
	0x03764D8C FCMP D0, 0x0
	0x03764D90 CSEL W0, W8, W9, MI
	0x03764D94 RET
	0x03764D98 MOV W0, W1
	0x03764D9C RET
	0x03764DA0 CBZ W0, 0x3764E00
	0x03764DA4 MOVN X10, 0x0
	0x03764DA8 LSLV X9, X10, X1
	0x03764DAC ORN W9, W31, W9, 0x0
	0x03764DB0 LSLV X10, X10, X2
	0x03764DB4 MOV W8, W0
	0x03764DB8 CMP W9, W0
	0x03764DBC ORN W0, W31, W10, 0x0
	0x03764DC0 B.LS 0x3764E00
	0x03764DC4 UCVTF D0, W8
	0x03764DC8 UCVTF D1, W9
	0x03764DCC FDIV D0, D0, D1
	0x00000000 INVALID
	0x03764DD4 FCMP S0, 0x0
	0x03764DD8 B.LS 0x3764E04
	0x03764DDC FMOV S1, 1
	0x03764DE0 FCMP S0, S1
	0x03764DE4 B.GE 0x3764E00
	0x03764DE8 FCVT S0, S0
	0x03764DEC UCVTF D1, W0
	0x03764DF0 FMUL D0, D1, D0
	0x03764DF4 FMOV D1, X31
	0x03764DF8 FADD D0, D0, D1
	0x03764DFC FCVTZU W0, D0
	0x03764E00 RET
	0x03764E04 MOV W0, W31
	0x03764E08 RET
	0x03764E0C STR X30, [X31 - 0x30]!
	0x03764E10 STP X22, X21, [X31 + 0x10]
	0x03764E14 STP X20, X19, [X31 + 0x20]
	0x03764E18 MOV X21, X1
	0x03764E1C MOV X1, X31
	0x03764E20 MOV X19, X3
	0x03764E24 MOV X20, X2
	0x03764E28 MOV X22, X0
	0x03764E2C BL 0x33BDD8C
	0x03764E30 STP X19, X20, [X22 + 0x18]
	0x03764E34 STR X21, [X22 + 0x10]
	0x03764E38 LDP X20, X19, [X31 + 0x20]
	0x03764E3C LDP X22, X21, [X31 + 0x10]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+32], X20
	004 Move [X31+40], X19
	005 Move W9, W1
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Move X11, -45924352
	008 Move W10, W9
	009 Add X11, X11, 2208
	010 NotImplemented "Instruction ADR not yet implemented."
	011 Move W13, [X11]
	012 Add X12, X12, X13
	013 Move X8, X0
	014 Move X0, X31
	015 Move X1, X31
	016 CallNoReturn X12
	017 Move X0, X8
	018 Call PrimitiveValue.ToInt64, X0, X1
	019 Move X8, X0
	020 Move W0, 7
	021 Move X0, X8
	022 Call PrimitiveValue.ToInt64, X0, X1
	023 Move X8, X0
	024 Move W0, 9
	025 Move X0, X8
	026 Call PrimitiveValue.ToBoolean, X0, X1
	027 Move X9, 3
	028 And W31, W0, 1
	029 Move W8, 3
	030 NotImplemented "Instruction MOVK not yet implemented."
	031 Move X1, X31
	032 NotImplemented "Instruction CSEL not yet implemented."
	033 Move W9, [X8]
	034 NotImplemented "Instruction CMP not yet implemented."
	035 NotImplemented "Instruction LDRH not yet implemented."
	036 Move X0, X8
	037 Call PrimitiveValue.ToInt64, X0, X1
	038 Move X8, X0
	039 Move W0, 5
	040 Move X0, X8
	041 Call PrimitiveValue.ToInt64, X0, X1
	042 Move X8, X0
	043 Move W0, 6
	044 Move X1, X31
	045 NotImplemented "Instruction BFM not yet implemented."
	046 Move X0, X8
	047 Call PrimitiveValue.ToInt64, X0, X1
	048 Move W8, 11
	049 Move [X31], X31
	050 Move [X31+8], X31
	051 Move X0, X8
	052 Call PrimitiveValue.ToUInt64, X0, X1
	053 Move [X31], X31
	054 Move [X31+8], X31
	055 Move W8, 12
	056 Move [X31+4], X0
	057 Move X0, X8
	058 Call PrimitiveValue.ToDouble, X0, X1
	059 NotImplemented "Instruction INVALID not yet implemented."
	060 Move W0, 13
	061 Move W8, S0
	062 Move X1, X31
	063 NotImplemented "Instruction BFM not yet implemented."
	064 Move X0, X8
	065 Call PrimitiveValue.ToDouble, X0, X1
	066 Move [X31], X31
	067 Move [X31+8], X31
	068 Move W8, 14
	069 Move [X31+4], D0
	070 Move [X31], W8
	071 Move X0, [X31]
	072 Move X1, [X31+8]
	073 Subtract W9, W9, 7
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move X0, X8
	076 Call PrimitiveValue.ToInt64, X0, X1
	077 Move W0, W31
	078 And W8, W0, 0xFFFF
	079 Move W0, 4
	080 Move X1, X31
	081 NotImplemented "Instruction BFM not yet implemented."
	082 Move X20, [X31+32]
	083 Move X19, [X31+40]
	084 Move X30, [X31+16]
	085 Add X31, X31, 48
	086 Return X0
	087 Move [X31], W9
	088 Move X0, 0x9E3000
	089 Move X0, [X0+1064]
	090 Call 0x1C17D08
	091 Add X1, X31, 0
	092 Call 0x1C17E04
	093 Move X19, X0
	094 Move X0, 0x9E3000
	095 Move X0, [X0+1072]
	096 Call 0x1C17D08
	097 Move X1, X19
	098 Move X2, X31
	099 Call String.Format, X0, X1
	100 Move X19, X0
	101 Move X0, 0x998000
	102 Move X0, [X0+1400]
	103 Call 0x1C17D08
	104 Call 0x1C17F10
	105 Move X20, X0
	106 Move X0, 0x998000
	107 Move X0, [X0+1512]
	108 Call 0x1C17D08
	109 Move X2, X0
	110 Move X0, X20
	111 Move X1, X19
	112 Move X3, X31
	113 Call ArgumentException..ctor, X0, X1, X2
	114 Move X0, 0x9E3000
	115 Move X0, [X0+1080]
	116 Call 0x1C17D08
	117 Move X1, X0
	118 Move X0, X20
	119 Call 0x1C17DEC

Method: System.Boolean Equals(UnityEngine.InputSystem.Utilities.PrimitiveValue other)

Disassembly:
	0x03766D7C FSUB S3, S0, S3
	0x03766D80 FMOV S2, W10
	0x03766D84 FSQRT S3, S3
	0x03766D88 FCVTZS W13, S3
	0x03766D8C FCMP S3, S2
	0x03766D90 CSEL W15, W11, W13, EQ
	0x03766D94 SUBS W14, W15, 0x1
	0x03766D98 SXTW X12, W12
	0x03766D9C B.LT 0x3766DF4
	0x03766DA0 ADD X17, X8, X12
	0x03766DA4 ADD X16, X14, 0x2
	0x03766DA8 SUB X15, X17, W15, UXTW
	0x03766DAC MOV X13, X31
	0x03766DB0 UNIMPLEMENTED
	0x03766DB4 AND X14, X16, 0x0
	0x03766DB8 ADD X15, X23, X15, 0x2, LSL
	0x03766DBC UNIMPLEMENTED
	0x03766DC0 ORR V3.16B, V3.16B, V1.16B
	0x00000000 INVALID

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+8], X2
	003 Move [X31+16], X30
	004 Move [X31], X1
	005 Move W8, [X0]
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Add X8, X31, 0
	008 Add X0, X0, 4
	009 Or X1, X8, 7
	010 Move W2, 8
	011 Move X3, X31
	012 Call UnsafeUtility.MemCmp, X0, X1, X2
	013 NotImplemented "Instruction CMP not yet implemented."
	014 NotImplemented "Instruction CSET not yet implemented."
	015 Move W0, W31
	016 Move X30, [X31+16]
	017 Add X31, X31, 32
	018 Return X0

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x03766DC8 UNIMPLEMENTED
	0x03766DCC FMOV W16, S3
	0x03766DD0 TBZ X16, 0x0, 0x3766DD8
	0x03766DD4 STR X20, [X15]
	0x03766DD8 UNIMPLEMENTED
	0x03766DDC TBZ X16, 0x0, 0x3766DE4
	0x03766DE0 STR X20, [X15 + 0x8]
	0x03766DE4 ADD X13, X13, 0x2
	0x03766DE8 CMP X14, X13
	0x03766DEC ADD X15, X15, 0x10
	0x03766DF0 B.NE 0x3766DBC
	0x03766DF4 ADD X9, X9, 0x1
	0x03766DF8 CMP X9, X8
	0x03766DFC ADD W12, W12, W22
	0x03766E00 B.NE 0x3766D74
	0x03766E04 MOV X0, X21
	0x03766E08 MOV X1, X31
	0x03766E0C BL 0x3C1C540
	0x03766E10 SCVTF S2, W22
	0x03766E14 SCVTF S4, W19
	0x03766E18 MOV X0, X21
	0x03766E1C LDP X20, X19, [X31 + 0x30]
	0x03766E20 LDP X22, X21, [X31 + 0x20]
	0x03766E24 LDP X24, X23, [X31 + 0x10]
	0x03766E28 FMOV S0, W31
	0x03766E2C FMOV S1, W31
	0x03766E30 FMOV S6, 1
	0x03766E34 MOV V3.16B, V2.16B
	0x03766E38 MOV V5.16B, V4.16B
	0x03766E3C MOV W1, W31
	0x03766E40 MOV W2, W31
	0x03766E44 MOV X3, X31
	0x03766E48 LDR X30, [X31], #0x40
	0x03766E4C B 0x3C420B0
	0x03766E50 BL 0x1C16F20
	0x03766E54 STP X30, X25, [X31 - 0x40]!
	0x03766E58 STP X24, X23, [X31 + 0x10]
	0x03766E5C STP X22, X21, [X31 + 0x20]
	0x03766E60 STP X20, X19, [X31 + 0x30]
	0x03766E64 ADRP X22, 0xC7A000
	0x03766E68 LDRB W8, [X22 + 0xE7C]
	0x03766E6C MOV X20, X2
	0x03766E70 MOV X21, X1
	0x03766E74 MOV X19, X0
	0x03766E78 TBNZ X8, 0x0, 0x3766E90
	0x03766E7C ADRP X0, 0x98D000
	0x03766E80 LDR X0, [X0 + 0x8F0]
	0x03766E84 BL 0x1C16CF4
	0x03766E88 MOVZ W8, 0x1
	0x03766E8C STRB W8, [X22 + 0xE7C]
	0x03766E90 CBZ X19, 0x3766EDC
	0x03766E94 LDR W8, [X19 + 0x10]
	0x03766E98 CMP W8, 0x1
	0x03766E9C B.LT 0x3766EDC
	0x03766EA0 MOV W22, W31
	0x03766EA4 MOV X0, X19
	0x03766EA8 MOV W1, W22
	0x03766EAC MOV X2, X31
	0x03766EB0 BL 0x3222A1C
	0x03766EB4 CBZ X21, 0x3766FC4
	0x03766EB8 MOV W1, W0
	0x03766EBC MOV X0, X21
	0x03766EC0 MOV X2, X31
	0x03766EC4 BL 0x322BD74
	0x03766EC8 TBNZ X0, 0x0, 0x3766EF4
	0x03766ECC LDR W8, [X19 + 0x10]
	0x03766ED0 ADD W22, W22, 0x1
	0x03766ED4 CMP W22, W8
	0x03766ED8 B.LT 0x3766EA4
	0x03766EDC MOV X0, X19
	0x03766EE0 LDP X20, X19, [X31 + 0x30]
	0x03766EE4 LDP X22, X21, [X31 + 0x20]
	0x03766EE8 LDP X24, X23, [X31 + 0x10]
	0x03766EEC LDP X30, X25, [X31], #0x40
	0x03766EF0 RET
	0x03766EF4 ADRP X8, 0x98D000
	0x03766EF8 LDR X8, [X8 + 0x8F0]
	0x03766EFC LDR X0, [X8]
	0x03766F00 BL 0x1C16F10
	0x03766F04 MOV X1, X31
	0x03766F08 MOV X22, X0
	0x03766F0C BL 0x3231AC4
	0x03766F10 LDR W8, [X19 + 0x10]
	0x03766F14 CMP W8, 0x1
	0x03766F18 B.LT 0x3766FA0
	0x03766F1C MOV W23, W31
	0x03766F20 MOV X0, X19
	0x03766F24 MOV W1, W23
	0x03766F28 MOV X2, X31
	0x03766F2C BL 0x3222A1C
	0x03766F30 MOV W24, W0
	0x03766F34 MOV X0, X21
	0x03766F38 MOV W1, W24
	0x03766F3C MOV X2, X31
	0x03766F40 BL 0x322BD98
	0x03766F44 CBZ X22, 0x3766FC4
	0x03766F48 MOV W25, W0
	0x03766F4C ADDS W31, W0, 0x1
	0x03766F50 B.EQ 0x3766F7C
	0x03766F54 MOVZ W1, 0x5C
	0x03766F58 MOV X0, X22
	0x03766F5C MOV X2, X31
	0x03766F60 BL 0x3233D30
	0x03766F64 CBZ X20, 0x3766FC4
	0x03766F68 MOV X0, X20
	0x03766F6C MOV W1, W25
	0x03766F70 MOV X2, X31
	0x03766F74 BL 0x3222A1C
	0x03766F78 MOV W24, W0
	0x03766F7C MOV X0, X22
	0x03766F80 MOV W1, W24
	0x03766F84 MOV X2, X31
	0x03766F88 BL 0x3233D30
	0x03766F8C LDR W8, [X19 + 0x10]
	0x03766F90 ADD W23, W23, 0x1
	0x03766F94 CMP W23, W8
	0x03766F98 B.LT 0x3766F20
	0x03766F9C B 0x3766FA4
	0x03766FA0 CBZ X22, 0x3766FC4
	0x03766FA4 LDR X8, [X22]
	0x03766FA8 MOV X0, X22
	0x03766FAC LDP X20, X19, [X31 + 0x30]
	0x03766FB0 LDP X22, X21, [X31 + 0x20]
	0x03766FB4 LDP X2, X1, [X8 + 0x168]
	0x03766FB8 LDP X24, X23, [X31 + 0x10]
	0x03766FBC LDP X30, X25, [X31], #0x40
	0x03766FC0 BR X2
	0x03766FC4 BL 0x1C16F20
	0x03766FC8 STR X30, [X31 - 0x40]!
	0x03766FCC STP X24, X23, [X31 + 0x10]
	0x03766FD0 STP X22, X21, [X31 + 0x20]
	0x03766FD4 STP X20, X19, [X31 + 0x30]
	0x03766FD8 ADRP X22, 0xC7A000
	0x03766FDC LDRB W8, [X22 + 0xE7D]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xC7B000
	006 Move W8, [X21+3701]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {54}
	013 Move X0, 0x98E000
	014 Move X0, [X0+2904]
	015 Call 0x1C17CF4
	016 Move X0, 0x98F000
	017 Move X0, [X0+2520]
	018 Call 0x1C17CF4
	019 Move X0, 0x990000
	020 Move X0, [X0+368]
	021 Call 0x1C17CF4
	022 Move X0, 0x991000
	023 Move X0, [X0+2424]
	024 Call 0x1C17CF4
	025 Move X0, 0x992000
	026 Move X0, [X0+1576]
	027 Call 0x1C17CF4
	028 Move X0, 0x98E000
	029 Move X0, [X0+1880]
	030 Call 0x1C17CF4
	031 Move X0, 0x990000
	032 Move X0, [X0+2656]
	033 Call 0x1C17CF4
	034 Move X0, 0x9E1000
	035 Move X0, [X0+1056]
	036 Call 0x1C17CF4
	037 Move X0, 0x9B7000
	038 Move X0, [X0+1712]
	039 Call 0x1C17CF4
	040 Move X0, 0x98E000
	041 Move X0, [X0+2704]
	042 Call 0x1C17CF4
	043 Move X0, 0x993000
	044 Move X0, [X0+1624]
	045 Call 0x1C17CF4
	046 Move X0, 0x996000
	047 Move X0, [X0+1824]
	048 Call 0x1C17CF4
	049 Move X0, 0x98F000
	050 Move X0, [X0+1880]
	051 Call 0x1C17CF4
	052 Move W8, 1
	053 Move [X21+3701], W8
	054 Compare X20, 0
	055 JumpIfEqual {109}
	056 Move X8, 0x9E1000
	057 Move X8, [X8+1056]
	058 Move X9, [X8]
	059 Move X8, [X20]
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move X9, 0x98E000
	062 Move X9, [X9+2904]
	063 Move X9, [X9]
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move X9, 0x990000
	066 Move X9, [X9+368]
	067 Move X9, [X9]
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move X9, 0x98F000
	070 Move X9, [X9+2520]
	071 Move X9, [X9]
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Move X9, 0x9B7000
	074 Move X9, [X9+1712]
	075 Move X9, [X9]
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Move X9, 0x992000
	078 Move X9, [X9+1576]
	079 Move X9, [X9]
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Move X9, 0x993000
	082 Move X9, [X9+1624]
	083 Move X9, [X9]
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Move X9, 0x98E000
	086 Move X9, [X9+1880]
	087 Move X9, [X9]
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Move X9, 0x996000
	090 Move X9, [X9+1824]
	091 Move X9, [X9]
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Move X9, 0x990000
	094 Move X9, [X9+2656]
	095 Move X9, [X9]
	096 NotImplemented "Instruction CMP not yet implemented."
	097 Move X9, 0x98F000
	098 Move X9, [X9+1880]
	099 Move X9, [X9]
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Move X9, 0x98E000
	102 Move X9, [X9+2704]
	103 Move X9, [X9]
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Move X9, 0x991000
	106 Move X9, [X9+2424]
	107 Move X9, [X9]
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Move X20, [X31+16]
	110 Move X19, [X31+24]
	111 Move W0, W31
	112 Move X30, [X31+32]
	113 Move X21, [X31+40]
	114 Return X0
	115 Move X0, X20
	116 Call 0x1C17E08
	117 Move X1, [X0]
	118 Move X2, [X0+8]
	119 Move X0, X19
	120 Move X0, X20
	121 Call PrimitiveValue.FromObject, X0
	122 Move X2, X0
	123 Move X3, X1
	124 Move X0, X19
	125 Move X1, X2
	126 Move X2, X3
	127 Move X20, [X31+16]
	128 Move X19, [X31+24]
	129 Move X30, [X31+32]
	130 Move X21, [X31+40]
	131 Call PrimitiveValue.Equals, X0, X1
	132 Return X0

Method: System.Boolean op_Equality(UnityEngine.InputSystem.Utilities.PrimitiveValue left, UnityEngine.InputSystem.Utilities.PrimitiveValue right)

Disassembly:
	0x03764E9C LDR X19, [X20 + 0x10]
	0x03764EA0 BL 0x1C16F10
	0x03764EA4 MOV X1, X31
	0x03764EA8 MOV X20, X0
	0x03764EAC BL 0x33BDD8C
	0x03764EB0 STP X24, X23, [X20 + 0x18]
	0x03764EB4 STR X21, [X20 + 0x10]
	0x03764EB8 CBZ X19, 0x3764F30
	0x03764EBC ADRP X10, 0x9E2000
	0x03764EC0 LDR X8, [X19]
	0x03764EC4 LDR X10, [X10 + 0x488]

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+8], X1
	003 Move [X31+16], X30
	004 Move [X31], X0
	005 Add X0, X31, 0
	006 Move X1, X2
	007 Move X2, X3
	008 Call PrimitiveValue.Equals, X0, X1
	009 Move X30, [X31+16]
	010 And W0, W0, 1
	011 Add X31, X31, 32
	012 Return X0

Method: System.Boolean op_Inequality(UnityEngine.InputSystem.Utilities.PrimitiveValue left, UnityEngine.InputSystem.Utilities.PrimitiveValue right)

Disassembly:
	0x037675D4 MOV X0, X21
	0x037675D8 MOV X3, X31
	0x037675DC LDR X1, [X22]
	0x037675E0 BL 0x3226590
	0x037675E4 TBZ X0, 0x0, 0x3767594
	0x037675E8 LDR X8, [X22]
	0x037675EC CBZ X8, 0x3767604
	0x037675F0 LDR W9, [X21 + 0x10]
	0x037675F4 LDR W8, [X8 + 0x10]
	0x037675F8 MOVZ W20, 0x1
	0x037675FC SUB W2, W9, W8
	0x03767600 B 0x3767580

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+8], X1
	003 Move [X31+16], X30
	004 Move [X31], X0
	005 Add X0, X31, 0
	006 Move X1, X2
	007 Move X2, X3
	008 Call PrimitiveValue.Equals, X0, X1
	009 Move X30, [X31+16]
	010 NotImplemented "Instruction ORN not yet implemented."
	011 And W0, W8, 1
	012 Add X31, X31, 32
	013 Return X0

Method: System.Int32 GetHashCode()

Disassembly:
	0x03764FE0 ADRP X20, 0x98F000
	0x03764FE4 LDRB W8, [X21 + 0xE71]
	0x03764FE8 LDR X20, [X20 + 0x6C0]
	0x03764FEC MOV X19, X0
	0x03764FF0 TBNZ X8, 0x0, 0x3765020
	0x03764FF4 ADRP X0, 0x9E2000
	0x03764FF8 LDR X0, [X0 + 0x490]
	0x03764FFC BL 0x1C16CF4
	0x03765000 ADRP X0, 0x9B6000
	0x03765004 LDR X0, [X0 + 0x270]
	0x03765008 BL 0x1C16CF4
	0x0376500C ADRP X0, 0x98E000
	0x03765010 LDR X0, [X0 + 0x6C0]
	0x03765014 BL 0x1C16CF4
	0x03765018 MOVZ W8, 0x1
	0x0376501C STRB W8, [X21 + 0xE71]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X1, X31
	004 Move X19, X0
	005 Call Int32.GetHashCode, X0
	006 NotImplemented "Instruction LDUR not yet implemented."
	007 Move W9, 397
	008 Multiply W9, W0, W9
	009 Subtract X10, X31, X8
	010 And X11, X8, 0x7FFFFFFFFFFFFFFF
	011 And X31, X10, 0x7FFFFFFFFFFFFFFF
	012 NotImplemented "Instruction CSEL not yet implemented."
	013 Move X10, X8
	014 ShiftRight X10, 32
	015 And X10, X10, 0x7FFFFFFF
	016 Xor W8, W10, W8
	017 Xor W0, W9, W8
	018 Move X30, [X31+16]
	019 Move X19, [X31+24]
	020 Return X0

Method: System.String ToString()

Disassembly:
	0x03767604 BL 0x1C16F20
	0x03767608 STR X30, [X31 - 0x30]!
	0x0376760C STP X22, X21, [X31 + 0x10]
	0x03767610 STP X20, X19, [X31 + 0x20]
	0x03767614 CBZ X0, 0x3767660
	0x03767618 LDR W22, [X0 + 0x10]
	0x0376761C MOV X20, X0
	0x03767620 CMP W22, 0x1
	0x03767624 B.LT 0x3767660
	0x03767628 MOV W19, W1
	0x0376762C MOV W2, W31
	0x03767630 MOV W21, W31
	0x03767634 MOV X0, X20
	0x03767638 MOV W1, W19
	0x0376763C MOV X3, X31
	0x03767640 BL 0x322BDA8
	0x03767644 ADDS W31, W0, 0x1
	0x03767648 B.EQ 0x3767664
	0x0376764C ADD W2, W0, 0x1
	0x03767650 CMP W2, W22
	0x03767654 ADD W21, W21, 0x1
	0x03767658 B.LT 0x3767634
	0x0376765C B 0x3767664
	0x03767660 MOV W21, W31
	0x03767664 MOV W0, W21
	0x03767668 LDP X20, X19, [X31 + 0x20]
	0x0376766C LDP X22, X21, [X31 + 0x10]
	0x03767670 LDR X30, [X31], #0x30
	0x03767674 RET
	0x03767678 STP X30, X21, [X31 - 0x20]!
	0x0376767C STP X20, X19, [X31 + 0x10]
	0x03767680 ADRP X20, 0xC79000
	0x03767684 ADRP X21, 0x9DF000
	0x03767688 LDRB W8, [X20 + 0xE81]
	0x0376768C LDR X21, [X21 + 0x590]
	0x03767690 MOV X19, X0
	0x03767694 TBNZ X8, 0x0, 0x37676AC
	0x03767698 ADRP X0, 0x9DF000
	0x0376769C LDR X0, [X0 + 0x590]
	0x037676A0 BL 0x1C16CF4
	0x037676A4 MOVZ W8, 0x1
	0x037676A8 STRB W8, [X20 + 0xE81]
	0x037676AC LDR X0, [X21]
	0x037676B0 BL 0x1C16F10
	0x037676B4 MOV X1, X31
	0x037676B8 MOV X20, X0
	0x037676BC BL 0x33BDD8C
	0x037676C0 MOVN W8, 0x1
	0x037676C4 MOV X0, X31
	0x037676C8 STR W8, [X20 + 0x10]
	0x037676CC BL 0x33C151C
	0x037676D0 STR W0, [X20 + 0x28]
	0x037676D4 STR X19, [X20 + 0x38]
	0x037676D8 MOV X0, X20
	0x037676DC LDP X20, X19, [X31 + 0x10]
	0x037676E0 LDP X30, X21, [X31], #0x20
	0x037676E4 RET
	0x037676E8 STR X30, [X31 - 0x20]!
	0x037676EC STP X20, X19, [X31 + 0x10]
	0x037676F0 MOV W19, W1
	0x037676F4 MOV X1, X31
	0x037676F8 MOV X20, X0
	0x037676FC BL 0x33BDD8C
	0x03767700 MOV X0, X31
	0x03767704 STR W19, [X20 + 0x10]
	0x03767708 BL 0x33C151C
	0x0376770C STR W0, [X20 + 0x28]
	0x03767710 LDP X20, X19, [X31 + 0x10]
	0x03767714 LDR X30, [X31], #0x20
	0x03767718 RET
	0x0376771C STR X30, [X31 - 0x30]!
	0x03767720 STP X22, X21, [X31 + 0x10]
	0x03767724 STP X20, X19, [X31 + 0x20]
	0x03767728 ADRP X21, 0xC79000
	0x0376772C ADRP X22, 0x9DF000
	0x03767730 LDRB W8, [X21 + 0xE82]
	0x03767734 LDR X22, [X22 + 0x598]
	0x03767738 MOV X19, X1
	0x0376773C MOV X20, X0
	0x03767740 TBNZ X8, 0x0, 0x3767758
	0x03767744 ADRP X0, 0x9DF000
	0x03767748 LDR X0, [X0 + 0x598]
	0x0376774C BL 0x1C16CF4
	0x03767750 MOVZ W8, 0x1
	0x03767754 STRB W8, [X21 + 0xE82]
	0x03767758 LDR X0, [X22]
	0x0376775C BL 0x1C16F10
	0x03767760 MOV X1, X31
	0x03767764 MOV X21, X0
	0x03767768 BL 0x33BDD8C
	0x0376776C MOVN W8, 0x1
	0x03767770 MOV X0, X31
	0x03767774 STR W8, [X21 + 0x10]
	0x03767778 BL 0x33C151C
	0x0376777C STR W0, [X21 + 0x20]
	0x03767780 STR X20, [X21 + 0x30]
	0x03767784 STR X19, [X21 + 0x40]
	0x03767788 MOV X0, X21
	0x0376778C LDP X20, X19, [X31 + 0x20]
	0x03767790 LDP X22, X21, [X31 + 0x10]
	0x03767794 LDR X30, [X31], #0x30
	0x03767798 RET
	0x0376779C STR X30, [X31 - 0x20]!
	0x037677A0 STP X20, X19, [X31 + 0x10]
	0x037677A4 MOV W19, W1
	0x037677A8 MOV X1, X31
	0x037677AC MOV X20, X0
	0x037677B0 BL 0x33BDD8C
	0x037677B4 MOV X0, X31
	0x037677B8 STR W19, [X20 + 0x10]
	0x037677BC BL 0x33C151C
	0x037677C0 STR W0, [X20 + 0x20]
	0x037677C4 LDP X20, X19, [X31 + 0x10]
	0x037677C8 LDR X30, [X31], #0x20
	0x037677CC RET
	0x037677D0 SUB X31, X31, 0x80
	0x037677D4 STP X29, X30, [X31 + 0x20]
	0x037677D8 STP X28, X27, [X31 + 0x30]
	0x037677DC STP X26, X25, [X31 + 0x40]
	0x037677E0 STP X24, X23, [X31 + 0x50]
	0x037677E4 STP X22, X21, [X31 + 0x60]
	0x037677E8 STP X20, X19, [X31 + 0x70]
	0x037677EC ADRP X22, 0xC79000
	0x037677F0 LDRB W8, [X22 + 0xE83]
	0x037677F4 MOV W19, W2
	0x037677F8 MOV X20, X1
	0x037677FC MOV X21, X0
	0x03767800 TBNZ X8, 0x0, 0x3767818
	0x03767804 ADRP X0, 0x98E000
	0x03767808 LDR X0, [X0 + 0x170]
	0x0376780C BL 0x1C16CF4
	0x03767810 MOVZ W8, 0x1
	0x03767814 STRB W8, [X22 + 0xE83]
	0x03767818 CBZ X21, 0x37679FC
	0x0376781C CBZ X20, 0x3767A1C
	0x03767820 LDR W23, [X21 + 0x10]
	0x03767824 CMP W23, 0x1
	0x03767828 B.LT 0x37679D0
	0x0376782C LDR W27, [X20 + 0x10]
	0x03767830 MOV W22, W31
	0x03767834 STR W23, [X31 + 0x8]
	0x03767838 MOV X0, X21
	0x0376783C MOV W1, W22
	0x03767840 MOV X2, X31
	0x03767844 BL 0x3222A1C
	0x03767848 AND W9, W0, 0xFFFF
	0x0376784C CMP W9, W19, UXTH
	0x03767850 CSET W9, EQ
	0x03767854 MOV W8, W31
	0x03767858 STP W9, W22, [X31 + 0xC]
	0x0376785C CINC W22, W22, EQ
	0x03767860 MOV W29, W8
	0x03767864 ADD W8, W22, W8
	0x03767868 ADD W1, W8, 0x1
	0x0376786C CMP W1, W23
	0x03767870 B.GE 0x3767890
	0x03767874 MOV X0, X21
	0x03767878 MOV X2, X31
	0x0376787C BL 0x3222A1C
	0x03767880 AND W8, W0, 0xFFFF
	0x03767884 CMP W8, W19, UXTH
	0x03767888 ADD W8, W29, 0x1
	0x0376788C B.NE 0x3767860
	0x03767890 CMP W27, 0x1
	0x03767894 B.LT 0x37679B4
	0x03767898 LDP W9, W8, [X31 + 0xC]
	0x0376789C MOV W23, W31
	0x037678A0 ADD W22, W29, 0x1
	0x037678A4 ADD W8, W8, W9
	0x037678A8 STR W8, [X31 + 0x1C]
	0x037678AC MOV X0, X20
	0x037678B0 MOV W1, W23
	0x037678B4 MOV X2, X31
	0x037678B8 BL 0x3222A1C
	0x037678BC AND W9, W0, 0xFFFF
	0x037678C0 CMP W9, W19, UXTH
	0x037678C4 CSET W9, EQ
	0x037678C8 MOV W8, W31
	0x037678CC STP W9, W23, [X31 + 0x14]
	0x037678D0 CINC W23, W23, EQ
	0x037678D4 MOV W26, W8
	0x037678D8 ADD W8, W23, W8
	0x037678DC ADD W1, W8, 0x1
	0x037678E0 CMP W1, W27
	0x037678E4 B.GE 0x3767904
	0x037678E8 MOV X0, X20
	0x037678EC MOV X2, X31
	0x037678F0 BL 0x3222A1C
	0x037678F4 AND W8, W0, 0xFFFF
	0x037678F8 CMP W8, W19, UXTH
	0x037678FC ADD W8, W26, 0x1
	0x03767900 B.NE 0x37678D4
	0x03767904 CMP W29, W26
	0x03767908 B.NE 0x376799C
	0x0376790C CMP W22, 0x1
	0x03767910 B.LT 0x37679D8
	0x03767914 LDP W9, W8, [X31 + 0x14]
	0x03767918 MOV W23, W31
	0x0376791C ADD W28, W8, W9
	0x03767920 LDR W8, [X31 + 0x1C]
	0x03767924 MOV X0, X21
	0x03767928 MOV X2, X31
	0x0376792C ADD W1, W8, W23
	0x03767930 BL 0x3222A1C
	0x03767934 MOV W24, W0
	0x03767938 ADD W1, W28, W23
	0x0376793C MOV X0, X20
	0x03767940 MOV X2, X31
	0x03767944 BL 0x3222A1C
	0x03767948 ADRP X8, 0x98E000
	0x0376794C LDR X8, [X8 + 0x170]
	0x03767950 MOV W25, W0
	0x03767954 LDR X8, [X8]
	0x03767958 LDR W9, [X8 + 0xE0]
	0x0376795C CBNZ W9, 0x3767968
	0x03767960 MOV X0, X8
	0x03767964 BL 0x1C16DFC
	0x03767968 MOV W0, W24
	0x0376796C MOV X1, X31
	0x03767970 BL 0x331AEAC
	0x03767974 AND W24, W0, 0xFFFF
	0x03767978 MOV W0, W25
	0x0376797C MOV X1, X31
	0x03767980 BL 0x331AEAC
	0x03767984 CMP W24, W0, UXTH
	0x03767988 B.NE 0x376799C
	0x0376798C ADD W23, W23, 0x1
	0x03767990 CMP W22, W23
	0x03767994 B.NE 0x3767920
	0x03767998 B 0x37679D8
	0x0376799C LDP W9, W8, [X31 + 0x14]
	0x037679A0 ADD W8, W8, W9
	0x037679A4 ADD W8, W8, W26
	0x037679A8 ADD W23, W8, 0x2
	0x037679AC CMP W23, W27
	0x037679B0 B.LT 0x37678AC
	0x037679B4 LDP W9, W8, [X31 + 0xC]
	0x037679B8 LDR W23, [X31 + 0x8]
	0x037679BC ADD W8, W8, W9
	0x037679C0 ADD W8, W8, W29
	0x037679C4 ADD W22, W8, 0x2
	0x037679C8 CMP W22, W23
	0x037679CC B.LT 0x3767838
	0x037679D0 MOV W0, W31
	0x037679D4 B 0x37679DC
	0x037679D8 MOVZ W0, 0x1
	0x037679DC LDP X20, X19, [X31 + 0x70]
	0x037679E0 LDP X22, X21, [X31 + 0x60]
	0x037679E4 LDP X24, X23, [X31 + 0x50]
	0x037679E8 LDP X26, X25, [X31 + 0x40]
	0x037679EC LDP X28, X27, [X31 + 0x30]
	0x037679F0 LDP X29, X30, [X31 + 0x20]
	0x037679F4 ADD X31, X31, 0x80
	0x037679F8 RET
	0x037679FC ADRP X0, 0x991000
	0x03767A00 LDR X0, [X0 + 0x528]
	0x03767A04 BL 0x1C16D08
	0x03767A08 BL 0x1C16F10
	0x03767A0C MOV X19, X0
	0x03767A10 ADRP X0, 0x9DF000
	0x03767A14 LDR X0, [X0 + 0x5A0]
	0x03767A18 B 0x3767A38
	0x03767A1C ADRP X0, 0x991000
	0x03767A20 LDR X0, [X0 + 0x528]
	0x03767A24 BL 0x1C16D08
	0x03767A28 BL 0x1C16F10
	0x03767A2C MOV X19, X0
	0x03767A30 ADRP X0, 0x9DF000
	0x03767A34 LDR X0, [X0 + 0x5A8]
	0x03767A38 BL 0x1C16D08
	0x03767A3C MOV X1, X0
	0x03767A40 MOV X0, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xC7A000
	005 Move W8, [X20+3702]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {31}
	011 Move X0, 0x98F000
	012 Move X0, [X0+368]
	013 Call 0x1C17CF4
	014 Move X0, 0x98F000
	015 Move X0, [X0+3144]
	016 Call 0x1C17CF4
	017 Move X0, 0x98F000
	018 Move X0, [X0+632]
	019 Call 0x1C17CF4
	020 Move X0, 0x995000
	021 Move X0, [X0+2480]
	022 Call 0x1C17CF4
	023 Move X0, 0x997000
	024 Move X0, [X0+4088]
	025 Call 0x1C17CF4
	026 Move X0, 0x998000
	027 Move X0, [X0]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X20+3702], W8
	031 Move W8, [X19]
	032 Subtract W8, W8, 3
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X9, -45936640
	035 Add X9, X9, 2291
	036 NotImplemented "Instruction ADR not yet implemented."
	037 Move W11, [X9]
	038 Add X10, X10, X11
	039 CallNoReturn X10
	040 Move W8, [X19+4]
	041 Compare W8, 0
	042 JumpIfEqual {311}
	043 Move X8, 0x998000
	044 Move X8, [X8]
	045 Move X8, 0x98F000
	046 Move X8, [X8+632]
	047 Move X8, [X8]
	048 Move X8, [X8+184]
	049 Move X8, 0x98F000
	050 Move X8, [X8+368]
	051 Add X19, X19, 4
	052 Move X0, [X8]
	053 Move W8, [X0+224]
	054 Compare W8, 0
	055 JumpIfNotEqual {57}
	056 Call 0x1C17DFC
	057 Move X0, X19
	058 Move X1, X31
	059 Call Char.ToString, X0
	060 Move X8, 0x995000
	061 Move X8, [X8+2480]
	062 Move X20, [X31+16]
	063 Move X19, [X31+24]
	064 Move X1, X0
	065 Move X3, X31
	066 Move X2, [X8]
	067 Move X0, X2
	068 Move X30, [X31+32]
	069 Call String.Concat, X0, X1, X2
	070 Return X0
	071 Move X8, 0x98F000
	072 Move X8, [X8+3144]
	073 Move X0, [X8]
	074 Move W8, [X0+224]
	075 Compare W8, 0
	076 JumpIfNotEqual {78}
	077 Call 0x1C17DFC
	078 Move X0, X31
	079 Call CultureInfo.get_InvariantCulture
	080 Compare X0, 0
	081 JumpIfEqual {318}
	082 Move X8, [X0]
	083 Add X19, X19, 4
	084 Move X9, [X8+536]
	085 Move X1, [X8+544]
	086 NotImplemented "Instruction BLR not yet implemented."
	087 Move X1, X0
	088 Move X0, X19
	089 Move X20, [X31+16]
	090 Move X19, [X31+24]
	091 Move X2, X31
	092 Move X30, [X31+32]
	093 Call SByte.ToString, X0, X1
	094 Return X0
	095 Move X8, 0x98F000
	096 Move X8, [X8+3144]
	097 Move X0, [X8]
	098 Move W8, [X0+224]
	099 Compare W8, 0
	100 JumpIfNotEqual {102}
	101 Call 0x1C17DFC
	102 Move X0, X31
	103 Call CultureInfo.get_InvariantCulture
	104 Compare X0, 0
	105 JumpIfEqual {318}
	106 Move X8, [X0]
	107 Add X19, X19, 4
	108 Move X9, [X8+536]
	109 Move X1, [X8+544]
	110 NotImplemented "Instruction BLR not yet implemented."
	111 Move X1, X0
	112 Move X0, X19
	113 Move X20, [X31+16]
	114 Move X19, [X31+24]
	115 Move X2, X31
	116 Move X30, [X31+32]
	117 Call Byte.ToString, X0, X1
	118 Return X0
	119 Move X8, 0x98F000
	120 Move X8, [X8+3144]
	121 Move X0, [X8]
	122 Move W8, [X0+224]
	123 Compare W8, 0
	124 JumpIfNotEqual {126}
	125 Call 0x1C17DFC
	126 Move X0, X31
	127 Call CultureInfo.get_InvariantCulture
	128 Compare X0, 0
	129 JumpIfEqual {318}
	130 Move X8, [X0]
	131 Add X19, X19, 4
	132 Move X9, [X8+536]
	133 Move X1, [X8+544]
	134 NotImplemented "Instruction BLR not yet implemented."
	135 Move X1, X0
	136 Move X0, X19
	137 Move X20, [X31+16]
	138 Move X19, [X31+24]
	139 Move X2, X31
	140 Move X30, [X31+32]
	141 Call Int16.ToString, X0, X1
	142 Return X0
	143 Move X8, 0x98F000
	144 Move X8, [X8+3144]
	145 Move X0, [X8]
	146 Move W8, [X0+224]
	147 Compare W8, 0
	148 JumpIfNotEqual {150}
	149 Call 0x1C17DFC
	150 Move X0, X31
	151 Call CultureInfo.get_InvariantCulture
	152 Compare X0, 0
	153 JumpIfEqual {318}
	154 Move X8, [X0]
	155 Add X19, X19, 4
	156 Move X9, [X8+536]
	157 Move X1, [X8+544]
	158 NotImplemented "Instruction BLR not yet implemented."
	159 Move X1, X0
	160 Move X0, X19
	161 Move X20, [X31+16]
	162 Move X19, [X31+24]
	163 Move X2, X31
	164 Move X30, [X31+32]
	165 Call UInt16.ToString, X0, X1
	166 Return X0
	167 Move X8, 0x98F000
	168 Move X8, [X8+3144]
	169 Move X0, [X8]
	170 Move W8, [X0+224]
	171 Compare W8, 0
	172 JumpIfNotEqual {174}
	173 Call 0x1C17DFC
	174 Move X0, X31
	175 Call CultureInfo.get_InvariantCulture
	176 Compare X0, 0
	177 JumpIfEqual {318}
	178 Move X8, [X0]
	179 Add X19, X19, 4
	180 Move X9, [X8+536]
	181 Move X1, [X8+544]
	182 NotImplemented "Instruction BLR not yet implemented."
	183 Move X1, X0
	184 Move X0, X19
	185 Move X20, [X31+16]
	186 Move X19, [X31+24]
	187 Move X2, X31
	188 Move X30, [X31+32]
	189 Call Int32.ToString, X0, X1
	190 Return X0
	191 Move X8, 0x98F000
	192 Move X8, [X8+3144]
	193 Move X0, [X8]
	194 Move W8, [X0+224]
	195 Compare W8, 0
	196 JumpIfNotEqual {198}
	197 Call 0x1C17DFC
	198 Move X0, X31
	199 Call CultureInfo.get_InvariantCulture
	200 Compare X0, 0
	201 JumpIfEqual {318}
	202 Move X8, [X0]
	203 Add X19, X19, 4
	204 Move X9, [X8+536]
	205 Move X1, [X8+544]
	206 NotImplemented "Instruction BLR not yet implemented."
	207 Move X1, X0
	208 Move X0, X19
	209 Move X20, [X31+16]
	210 Move X19, [X31+24]
	211 Move X2, X31
	212 Move X30, [X31+32]
	213 Call UInt32.ToString, X0, X1
	214 Return X0
	215 Move X8, 0x98F000
	216 Move X8, [X8+3144]
	217 Move X0, [X8]
	218 Move W8, [X0+224]
	219 Compare W8, 0
	220 JumpIfNotEqual {222}
	221 Call 0x1C17DFC
	222 Move X0, X31
	223 Call CultureInfo.get_InvariantCulture
	224 Compare X0, 0
	225 JumpIfEqual {318}
	226 Move X8, [X0]
	227 Add X19, X19, 4
	228 Move X9, [X8+536]
	229 Move X1, [X8+544]
	230 NotImplemented "Instruction BLR not yet implemented."
	231 Move X1, X0
	232 Move X0, X19
	233 Move X20, [X31+16]
	234 Move X19, [X31+24]
	235 Move X2, X31
	236 Move X30, [X31+32]
	237 Call Int64.ToString, X0, X1
	238 Return X0
	239 Move X8, 0x98F000
	240 Move X8, [X8+3144]
	241 Move X0, [X8]
	242 Move W8, [X0+224]
	243 Compare W8, 0
	244 JumpIfNotEqual {246}
	245 Call 0x1C17DFC
	246 Move X0, X31
	247 Call CultureInfo.get_InvariantCulture
	248 Compare X0, 0
	249 JumpIfEqual {318}
	250 Move X8, [X0]
	251 Add X19, X19, 4
	252 Move X9, [X8+536]
	253 Move X1, [X8+544]
	254 NotImplemented "Instruction BLR not yet implemented."
	255 Move X1, X0
	256 Move X0, X19
	257 Move X20, [X31+16]
	258 Move X19, [X31+24]
	259 Move X2, X31
	260 Move X30, [X31+32]
	261 Call UInt64.ToString, X0, X1
	262 Return X0
	263 Move X8, 0x98F000
	264 Move X8, [X8+3144]
	265 Move X0, [X8]
	266 Move W8, [X0+224]
	267 Compare W8, 0
	268 JumpIfNotEqual {270}
	269 Call 0x1C17DFC
	270 Move X0, X31
	271 Call CultureInfo.get_InvariantCulture
	272 Compare X0, 0
	273 JumpIfEqual {318}
	274 Move X8, [X0]
	275 Add X19, X19, 4
	276 Move X9, [X8+536]
	277 Move X1, [X8+544]
	278 NotImplemented "Instruction BLR not yet implemented."
	279 Move X1, X0
	280 Move X0, X19
	281 Move X20, [X31+16]
	282 Move X19, [X31+24]
	283 Move X2, X31
	284 Move X30, [X31+32]
	285 Call Single.ToString, X0, X1
	286 Return X0
	287 Move X8, 0x98F000
	288 Move X8, [X8+3144]
	289 Move X0, [X8]
	290 Move W8, [X0+224]
	291 Compare W8, 0
	292 JumpIfNotEqual {294}
	293 Call 0x1C17DFC
	294 Move X0, X31
	295 Call CultureInfo.get_InvariantCulture
	296 Compare X0, 0
	297 JumpIfEqual {318}
	298 Move X8, [X0]
	299 Add X19, X19, 4
	300 Move X9, [X8+536]
	301 Move X1, [X8+544]
	302 NotImplemented "Instruction BLR not yet implemented."
	303 Move X1, X0
	304 Move X0, X19
	305 Move X20, [X31+16]
	306 Move X19, [X31+24]
	307 Move X2, X31
	308 Move X30, [X31+32]
	309 Call Double.ToString, X0, X1
	310 Return X0
	311 Move X8, 0x997000
	312 Move X8, [X8+4088]
	313 Move X0, [X8]
	314 Move X20, [X31+16]
	315 Move X19, [X31+24]
	316 Move X30, [X31+32]
	317 Return X0
	318 Call 0x1C17F20

Method: UnityEngine.InputSystem.Utilities.PrimitiveValue FromString(System.String value)

Disassembly:
	0x03765454 ADRP X0, 0x9C1000
	0x03765458 LDR X0, [X0 + 0xD90]
	0x0376545C BL 0x1C16CF4
	0x03765460 ADRP X0, 0x9C2000
	0x03765464 LDR X0, [X0 + 0x7E0]
	0x03765468 BL 0x1C16CF4
	0x0376546C MOVZ W8, 0x1
	0x03765470 STRB W8, [X22 + 0xE73]
	0x03765474 LDR W8, [X19]
	0x03765478 CMP W8, W21
	0x0376547C B.CS 0x37654F4
	0x03765480 MOV W9, W8
	0x03765484 SXTW X9, W9
	0x03765488 LDRH W9, [X20, X9, LSL #1]
	0x0376548C CMP W9, 0x22
	0x03765490 B.NE 0x3765570
	0x03765494 ADD W23, W8, 0x1
	0x03765498 CMP W23, W21
	0x0376549C STR W23, [X19]
	0x037654A0 B.CS 0x37654F4
	0x037654A4 ADRP X9, 0x9C1000
	0x037654A8 LDR X9, [X9 + 0xD90]
	0x037654AC MOVZ W10, 0x1
	0x037654B0 SUB W10, W10, W21
	0x037654B4 MOV X22, X31
	0x037654B8 ADD X10, X8, X10
	0x037654BC ADD W11, W8, W22
	0x037654C0 ADD W11, W11, 0x1
	0x037654C4 LDRH W11, [X20, W11, SXTW]
	0x037654C8 ORR W12, W11, 0x20
	0x037654CC SUB W12, W12, 0x61
	0x037654D0 AND W12, W12, 0xFFFF
	0x037654D4 CMP W12, 0x19
	0x037654D8 B.HI 0x37654F8
	0x037654DC ADD W11, W8, W22
	0x037654E0 ADD X22, X22, 0x1
	0x037654E4 ADD W11, W11, 0x2
	0x037654E8 ADDS W31, W10, W22
	0x037654EC STR W11, [X19]
	0x037654F0 B.NE 0x37654BC
	0x037654F4 BL 0x1C16F28
	0x037654F8 CMP W11, 0x22
	0x037654FC B.NE 0x37655B4
	0x03765500 CBZ W22, 0x3765540
	0x03765504 LDR X24, [X9]
	0x03765508 SUB W8, W21, W23
	0x0376550C CMP W8, W22
	0x03765510 B.CS 0x376551C
	0x03765514 MOV X0, X31
	0x03765518 BL 0x339D6EC
	0x0376551C LDR X0, [X24 + 0x20]
	0x03765520 LDRB W8, [X0 + 0x135]
	0x03765524 TBNZ X8, 0x0, 0x376552C
	0x03765528 BL 0x1C5C684
	0x0376552C LDR W8, [X19]
	0x03765530 ADD X0, X20, W23, 0x1, SXTW
	0x03765534 ADD W8, W8, 0x1
	0x03765538 STR W8, [X19]
	0x0376553C B 0x3765554
	0x03765540 ADRP X8, 0x9C2000
	0x03765544 LDR X8, [X8 + 0x7E0]
	0x03765548 LDR X0, [X8]
	0x0376554C BL 0x25BF170
	0x03765550 MOV X22, X1
	0x03765554 MOV X1, X22
	0x03765558 LDP X20, X19, [X31 + 0x40]
	0x0376555C LDP X22, X21, [X31 + 0x30]
	0x03765560 LDP X24, X23, [X31 + 0x20]
	0x03765564 LDR X30, [X31 + 0x10]
	0x03765568 ADD X31, X31, 0x50
	0x0376556C RET
	0x03765570 STR W8, [X31 + 0x1C]
	0x03765574 ADRP X0, 0x98E000
	0x03765578 LDR X0, [X0 + 0x758]
	0x0376557C BL 0x1C16D08
	0x03765580 ADD X1, X31, 0x1C
	0x03765584 BL 0x1C16E04
	0x03765588 MOV X19, X0
	0x0376558C ADRP X0, 0x9C1000
	0x03765590 LDR X0, [X0 + 0xFD8]
	0x03765594 BL 0x1C16D08
	0x03765598 MOV X1, X0
	0x0376559C ADD X0, X31, 0x0
	0x037655A0 BL 0x1BCF66C
	0x037655A4 MOV X20, X0
	0x037655A8 ADRP X0, 0x9E1000
	0x037655AC LDR X0, [X0 + 0x4C0]
	0x037655B0 B 0x37655FC
	0x037655B4 ADD X8, X8, X22
	0x037655B8 ADD X8, X8, 0x1
	0x037655BC STR W8, [X31 + 0x1C]
	0x037655C0 ADRP X0, 0x98E000
	0x037655C4 LDR X0, [X0 + 0x758]
	0x037655C8 BL 0x1C16D08
	0x037655CC ADD X1, X31, 0x1C
	0x037655D0 BL 0x1C16E04
	0x037655D4 MOV X19, X0
	0x037655D8 ADRP X0, 0x9C1000
	0x037655DC LDR X0, [X0 + 0xFD8]
	0x037655E0 BL 0x1C16D08
	0x037655E4 MOV X1, X0
	0x037655E8 ADD X0, X31, 0x0
	0x037655EC BL 0x1BCF66C
	0x037655F0 MOV X20, X0
	0x037655F4 ADRP X0, 0x9E1000
	0x037655F8 LDR X0, [X0 + 0x4C8]
	0x037655FC BL 0x1C16D08
	0x03765600 MOV X1, X19
	0x03765604 MOV X2, X20
	0x03765608 MOV X3, X31
	0x0376560C BL 0x3227BD4
	0x03765610 MOV X19, X0
	0x03765614 ADRP X0, 0x98E000
	0x03765618 LDR X0, [X0 + 0x5B0]
	0x0376561C BL 0x1C16D08
	0x03765620 BL 0x1C16F10
	0x03765624 MOV X1, X19
	0x03765628 MOV X2, X31
	0x0376562C MOV X20, X0
	0x03765630 BL 0x337DF1C
	0x03765634 ADRP X0, 0x9E1000
	0x03765638 LDR X0, [X0 + 0x4D0]
	0x0376563C BL 0x1C16D08
	0x03765640 MOV X1, X0
	0x03765644 MOV X0, X20
	0x03765648 BL 0x1C16DEC
	0x0376564C STR X30, [X31 - 0x10]!
	0x03765650 LDRSW X8, [X0]
	0x03765654 CMP W8, W2
	0x03765658 B.CS 0x3765680
	0x0376565C LDRH W9, [X1, X8, LSL #1]
	0x03765660 CMP W9, W3, UXTH
	0x03765664 B.NE 0x3765670
	0x03765668 ADD W8, W8, 0x1
	0x0376566C STR W8, [X0]
	0x03765670 CMP W9, W3, UXTH
	0x03765674 CSET W0, EQ
	0x03765678 LDR X30, [X31], #0x10
	0x0376567C RET
	0x03765680 BL 0x1C16F28
	0x03765684 STR X30, [X31 - 0x50]!
	0x03765688 STP X26, X25, [X31 + 0x10]
	0x0376568C STP X24, X23, [X31 + 0x20]
	0x03765690 STP X22, X21, [X31 + 0x30]
	0x03765694 STP X20, X19, [X31 + 0x40]
	0x03765698 ADRP X23, 0xC7B000
	0x0376569C LDRB W8, [X23 + 0xE74]
	0x037656A0 MOV X19, X3
	0x037656A4 MOV X22, X2
	0x037656A8 MOV X21, X1
	0x037656AC MOV X20, X0
	0x037656B0 TBNZ X8, 0x0, 0x37656D4
	0x037656B4 ADRP X0, 0x9C1000
	0x037656B8 LDR X0, [X0 + 0xD90]
	0x037656BC BL 0x1C16CF4
	0x037656C0 ADRP X0, 0x9C2000
	0x037656C4 LDR X0, [X0 + 0x7E0]
	0x037656C8 BL 0x1C16CF4
	0x037656CC MOVZ W8, 0x1
	0x037656D0 STRB W8, [X23 + 0xE74]
	0x037656D4 STP X31, X31, [X19]
	0x037656D8 LDRSW X9, [X20]
	0x037656DC CMP W9, W22
	0x037656E0 B.CS 0x3765740
	0x037656E4 LDRH W8, [X21, X9, LSL #1]
	0x037656E8 CMP W8, 0x22
	0x037656EC B.NE 0x3765798
	0x037656F0 AND X23, X9, 0x0
	0x037656F4 ADD W25, W23, 0x1
	0x037656F8 CMP W25, W22
	0x037656FC B.CS 0x3765740
	0x03765700 MOVZ W10, 0x1
	0x03765704 SUB W10, W10, W22
	0x03765708 MOV X24, X31
	0x0376570C AND X8, X9, 0x0
	0x03765710 ADD X9, X10, W9, UXTW
	0x03765714 ADD W10, W8, W24
	0x03765718 ADD W10, W10, 0x1
	0x0376571C LDRH W10, [X21, W10, SXTW]
	0x03765720 ORR W11, W10, 0x20
	0x03765724 SUB W11, W11, 0x61
	0x03765728 AND W11, W11, 0xFFFF
	0x0376572C CMP W11, 0x19
	0x03765730 B.HI 0x3765744
	0x03765734 ADD X24, X24, 0x1
	0x03765738 ADDS W31, W9, W24
	0x0376573C B.NE 0x3765714
	0x03765740 BL 0x1C16F28
	0x03765744 CMP W10, 0x22
	0x03765748 B.NE 0x3765798
	0x0376574C ADRP X8, 0x9C1000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X20, 0xC7C000
	007 Move W8, [X20+3703]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {36}
	013 Move X0, 0x991000
	014 Move X0, [X0+3144]
	015 Call 0x1C17CF4
	016 Move X0, 0x9C6000
	017 Move X0, [X0+416]
	018 Call 0x1C17CF4
	019 Move X0, 0x9D5000
	020 Move X0, [X0+2888]
	021 Call 0x1C17CF4
	022 Move X0, 0x9E2000
	023 Move X0, [X0+1088]
	024 Call 0x1C17CF4
	025 Move X0, 0x999000
	026 Move X0, [X0+4088]
	027 Call 0x1C17CF4
	028 Move X0, 0x9E2000
	029 Move X0, [X0+1096]
	030 Call 0x1C17CF4
	031 Move X0, 0x99A000
	032 Move X0, [X0]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X20+3703], W8
	036 Move X0, X19
	037 Move X1, X31
	038 Move [X31+16], X31
	039 Move [X31+24], X31
	040 Move [X31+8], X31
	041 Call String.IsNullOrEmpty, X0
	042 Move TEMP, X0
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfNotEqual {48}
	046 Move [X31+32], X31
	047 Move [X31+40], X31
	048 Compare X19, 0
	049 JumpIfEqual {224}
	050 Move X8, 0x99A000
	051 Move X8, [X8]
	052 Move W2, 3
	053 Move X0, X19
	054 Move X3, X31
	055 Move X1, [X8]
	056 Move W20, 3
	057 Call String.Equals, X0, X1, X2
	058 Move TEMP, X0
	059 And TEMP, TEMP, 1
	060 Compare TEMP, 1
	061 JumpIfNotEqual {67}
	062 Move W8, 1
	063 Move [X31+32], X31
	064 Move [X31+40], X31
	065 Move [X31+32], W20
	066 Move [X31+36], W8
	067 Move X8, 0x999000
	068 Move X8, [X8+4088]
	069 Move W2, 3
	070 Move X0, X19
	071 Move X3, X31
	072 Move X1, [X8]
	073 Move W20, 3
	074 Call String.Equals, X0, X1, X2
	075 Move TEMP, X0
	076 And TEMP, TEMP, 1
	077 Compare TEMP, 1
	078 JumpIfNotEqual {83}
	079 Move [X31+32], X31
	080 Move [X31+40], X31
	081 Move [X31+32], W20
	082 Move [X31+36], W31
	083 Move W1, 46
	084 Move X0, X19
	085 Move X2, X31
	086 Call String.Contains, X0, X1
	087 Move TEMP, X0
	088 And TEMP, TEMP, 1
	089 Compare TEMP, 1
	090 JumpIfEqual {122}
	091 Move X8, 0x9C6000
	092 Move X8, [X8+416]
	093 Move X0, X19
	094 Move X2, X31
	095 Move X1, [X8]
	096 Call String.Contains, X0, X1
	097 Move TEMP, X0
	098 And TEMP, TEMP, 1
	099 Compare TEMP, 1
	100 JumpIfEqual {122}
	101 Move X8, 0x9D5000
	102 Move X8, [X8+2888]
	103 Move X0, X19
	104 Move X2, X31
	105 Move X1, [X8]
	106 Call String.Contains, X0, X1
	107 Move TEMP, X0
	108 And TEMP, TEMP, 1
	109 Compare TEMP, 1
	110 JumpIfEqual {122}
	111 Move X8, 0x9E2000
	112 Move X8, [X8+1096]
	113 Move W2, 3
	114 Move X0, X19
	115 Move X3, X31
	116 Move X1, [X8]
	117 Call String.Contains, X0, X1, X2
	118 Move TEMP, X0
	119 And TEMP, TEMP, 1
	120 Compare TEMP, 1
	121 JumpIfNotEqual {147}
	122 Move X8, 0x991000
	123 Move X8, [X8+3144]
	124 Move X0, [X8]
	125 Move W8, [X0+224]
	126 Compare W8, 0
	127 JumpIfNotEqual {129}
	128 Call 0x1C17DFC
	129 Move X0, X31
	130 Call CultureInfo.get_InvariantCulture
	131 Move X2, X0
	132 Add X3, X31, 16
	133 Move W1, 167
	134 Move X0, X19
	135 Move X4, X31
	136 Call Double.TryParse, X0, X1, X2, X3
	137 Move TEMP, X0
	138 And TEMP, TEMP, 1
	139 Compare TEMP, 1
	140 JumpIfNotEqual {147}
	141 Move V0, [X31+16]
	142 Move W8, 14
	143 Move [X31+32], X31
	144 Move [X31+40], X31
	145 Move [X31+32], W8
	146 Move [X31+36], D0
	147 Move X20, 0x991000
	148 Move X20, [X20+3144]
	149 Move X0, [X20]
	150 Move W8, [X0+224]
	151 Compare W8, 0
	152 JumpIfNotEqual {154}
	153 Call 0x1C17DFC
	154 Move X0, X31
	155 Call CultureInfo.get_InvariantCulture
	156 Move X2, X0
	157 Add X3, X31, 24
	158 Move W1, 7
	159 Move X0, X19
	160 Move X4, X31
	161 Call Int64.TryParse, X0, X1, X2, X3
	162 Move TEMP, X0
	163 And TEMP, TEMP, 1
	164 Compare TEMP, 1
	165 JumpIfNotEqual {167}
	166 Move X8, [X31+24]
	167 Move X21, 0x9E2000
	168 Move X21, [X21+1088]
	169 Move W2, 3
	170 Move X0, X19
	171 Move X3, X31
	172 Move X1, [X21]
	173 Call String.IndexOf, X0, X1, X2
	174 Add W31, W0, 1
	175 Move X0, X19
	176 Move X1, X31
	177 Call String.TrimStart, X0
	178 Compare X0, 0
	179 JumpIfEqual {224}
	180 Move X1, [X21]
	181 Move X2, X31
	182 Move X19, X0
	183 Call String.StartsWith, X0, X1
	184 Move TEMP, X0
	185 And TEMP, TEMP, 1
	186 Compare TEMP, 1
	187 JumpIfNotEqual {193}
	188 Move W1, 2
	189 Move X0, X19
	190 Move X2, X31
	191 Call String.Substring, X0, X1
	192 Move X19, X0
	193 Move X0, [X20]
	194 Move W8, [X0+224]
	195 Compare W8, 0
	196 JumpIfNotEqual {198}
	197 Call 0x1C17DFC
	198 Move X0, X31
	199 Call CultureInfo.get_InvariantCulture
	200 Move X2, X0
	201 Add X3, X31, 8
	202 Move W1, 515
	203 Move X0, X19
	204 Move X4, X31
	205 Call Int64.TryParse, X0, X1, X2, X3
	206 Move TEMP, X0
	207 And TEMP, TEMP, 1
	208 Compare TEMP, 1
	209 JumpIfNotEqual {225}
	210 Move X8, [X31+8]
	211 Move W9, 11
	212 Move [X31+32], X31
	213 Move [X31+40], X31
	214 Move [X31+32], W9
	215 Move [X31+36], X8
	216 Move X0, [X31+32]
	217 Move X1, [X31+40]
	218 Move X20, [X31+64]
	219 Move X19, [X31+72]
	220 Move X30, [X31+48]
	221 Move X21, [X31+56]
	222 Add X31, X31, 80
	223 Return X0
	224 Call 0x1C17F20
	225 Move X0, 0x998000
	226 Move X0, [X0+1880]
	227 Call 0x1C17D08
	228 Call 0x1C17F10
	229 Move X1, X31
	230 Move X19, X0
	231 Call NotImplementedException..ctor, X0
	232 Move X0, 0x9E2000
	233 Move X0, [X0+1104]
	234 Call 0x1C17D08
	235 Move X1, X0
	236 Move X0, X19
	237 Call 0x1C17DEC

Method: System.TypeCode GetTypeCode()

Disassembly:
	0x03767A44 MOV X2, X31
	0x03767A48 BL 0x330E100

ISIL:
	001 Move W0, [X0]
	002 Return X0

Method: System.Boolean ToBoolean(System.IFormatProvider provider = null)

Disassembly:
	0x03766924 MOV X0, X19
	0x03766928 LDP X20, X19, [X31 + 0x10]
	0x0376692C MOV X2, X31
	0x03766930 LDR X30, [X31], #0x20
	0x03766934 B 0x337CC98
	0x03766938 ADRP X8, 0x98F000
	0x0376693C LDR X8, [X8 + 0xC48]
	0x03766940 LDR X0, [X8]
	0x03766944 LDR W8, [X0 + 0xE0]
	0x03766948 CBNZ W8, 0x3766950
	0x0376694C BL 0x1C16DFC
	0x03766950 MOV X0, X31
	0x03766954 BL 0x3338524
	0x03766958 CBZ X0, 0x3766A40
	0x0376695C LDR X8, [X0]
	0x03766960 ADD X19, X19, 0x4
	0x03766964 LDR X9, [X8 + 0x218]
	0x03766968 LDR X1, [X8 + 0x220]
	0x0376696C BLR X9
	0x03766970 MOV X1, X0
	0x03766974 MOV X0, X19
	0x03766978 LDP X20, X19, [X31 + 0x10]
	0x0376697C MOV X2, X31
	0x03766980 LDR X30, [X31], #0x20
	0x03766984 B 0x339AA00
	0x03766988 ADRP X8, 0x98F000
	0x0376698C LDR X8, [X8 + 0xC48]
	0x03766990 LDR X0, [X8]
	0x03766994 LDR W8, [X0 + 0xE0]
	0x03766998 CBNZ W8, 0x37669A0
	0x0376699C BL 0x1C16DFC
	0x037669A0 MOV X0, X31
	0x037669A4 BL 0x3338524
	0x037669A8 CBZ X0, 0x3766A40
	0x037669AC LDR X8, [X0]
	0x037669B0 ADD X19, X19, 0x4
	0x037669B4 LDR X9, [X8 + 0x218]
	0x037669B8 LDR X1, [X8 + 0x220]
	0x037669BC BLR X9
	0x037669C0 MOV X1, X0
	0x037669C4 MOV X0, X19
	0x037669C8 LDP X20, X19, [X31 + 0x10]
	0x037669CC MOV X2, X31
	0x037669D0 LDR X30, [X31], #0x20
	0x037669D4 B 0x338FEA0
	0x037669D8 ADRP X8, 0x98F000
	0x037669DC LDR X8, [X8 + 0xC48]
	0x037669E0 LDR X0, [X8]
	0x037669E4 LDR W8, [X0 + 0xE0]
	0x037669E8 CBNZ W8, 0x37669F0
	0x037669EC BL 0x1C16DFC
	0x037669F0 MOV X0, X31
	0x037669F4 BL 0x3338524
	0x037669F8 CBZ X0, 0x3766A40
	0x037669FC LDR X8, [X0]
	0x03766A00 ADD X19, X19, 0x4
	0x03766A04 LDR X9, [X8 + 0x218]
	0x03766A08 LDR X1, [X8 + 0x220]
	0x03766A0C BLR X9
	0x03766A10 MOV X1, X0
	0x03766A14 MOV X0, X19
	0x03766A18 LDP X20, X19, [X31 + 0x10]
	0x03766A1C MOV X2, X31
	0x03766A20 LDR X30, [X31], #0x20
	0x03766A24 B 0x33662E0
	0x03766A28 ADRP X8, 0x997000
	0x03766A2C LDR X8, [X8 + 0xFF8]
	0x03766A30 LDR X0, [X8]
	0x03766A34 LDP X20, X19, [X31 + 0x10]
	0x03766A38 LDR X30, [X31], #0x20
	0x03766A3C RET
	0x03766A40 BL 0x1C16F20
	0x03766A44 LDR W0, [X0]
	0x03766A48 RET
	0x03766A4C STP X30, X19, [X31 - 0x10]!
	0x03766A50 ADRP X0, 0x98D000
	0x03766A54 LDR X0, [X0 + 0xB40]
	0x03766A58 BL 0x1C16D08
	0x03766A5C BL 0x1C16F10
	0x03766A60 MOV X19, X0
	0x03766A64 ADRP X0, 0x9E0000
	0x03766A68 LDR X0, [X0 + 0x4E8]
	0x03766A6C BL 0x1C16D08
	0x03766A70 MOV X1, X0
	0x03766A74 MOV X0, X19
	0x03766A78 MOV X2, X31

ISIL:
	001 Move [X31-32], D9
	002 Move [X31-24], D8
	003 Move [X31+16], X30
	004 Move [X31+24], X19
	005 Move W8, [X0]
	006 Subtract W8, W8, 3
	007 NotImplemented "Instruction CMP not yet implemented."
	008 Move X9, -45932544
	009 Add X9, X9, 2235
	010 NotImplemented "Instruction ADR not yet implemented."
	011 Move W11, [X9]
	012 Add X10, X10, X11
	013 CallNoReturn X10
	014 Move W8, [X0+4]
	015 NotImplemented "Instruction LDRH not yet implemented."
	016 Move W8, [X0+4]
	017 NotImplemented "Instruction CMP not yet implemented."
	018 NotImplemented "Instruction CSET not yet implemented."
	019 Move X30, [X31+16]
	020 Move X19, [X31+24]
	021 Move D9, [X31+32]
	022 Move D8, [X31+40]
	023 Return X0
	024 NotImplemented "Instruction LDUR not yet implemented."
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move W0, W31
	027 Move X19, 0xC74000
	028 Move W8, [X19+1450]
	029 Move V8, [X0+4]
	030 Compare W8, 0
	031 JumpIfNotEqual {37}
	032 Move X0, 0x995000
	033 Move X0, [X0+1208]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X19+1450], W8
	037 Move X8, 0x995000
	038 Move X8, [X8+1208]
	039 Move X9, -46641152
	040 Move V0, [X9+576]
	041 NotImplemented "Instruction FABS not yet implemented."
	042 Move X8, [X8]
	043 Move S2, W31
	044 NotImplemented "Instruction FMAXNM not yet implemented."
	045 Multiply S0, S1, S0
	046 Move X8, [X8+184]
	047 Move S1, 8
	048 Move V3, [X8]
	049 Multiply S1, S3, S1
	050 NotImplemented "Instruction FCMP not yet implemented."
	051 NotImplemented "Instruction FCSEL not yet implemented."
	052 NotImplemented "Instruction FABD not yet implemented."
	053 NotImplemented "Instruction FCMP not yet implemented."
	054 NotImplemented "Instruction CSET not yet implemented."
	055 Move X19, 0xC7B000
	056 Move W8, [X19+3706]
	057 NotImplemented "Instruction LDUR not yet implemented."
	058 Compare W8, 0
	059 JumpIfNotEqual {65}
	060 Move X0, 0x98E000
	061 Move X0, [X0+1448]
	062 Call 0x1C17CF4
	063 Move W8, 1
	064 Move [X19+3706], W8
	065 Move X8, 0x98E000
	066 Move X8, [X8+1448]
	067 Move X0, [X8]
	068 Move W8, [X0+224]
	069 Compare W8, 0
	070 JumpIfNotEqual {72}
	071 Call 0x1C17DFC
	072 Move D0, X31
	073 NotImplemented "Instruction FABD not yet implemented."
	074 NotImplemented "Instruction FABS not yet implemented."
	075 Move D1, X31
	076 Move X0, X31
	077 Call Math.Max, V0, V1
	078 Move X8, -46628864
	079 Move V1, [X8+3016]
	080 Move X8, 8
	081 Move X0, X31
	082 Multiply D0, D0, D1
	083 Move D1, X8
	084 Call Math.Max, V0, V1
	085 NotImplemented "Instruction FCMP not yet implemented."
	086 NotImplemented "Instruction CSET not yet implemented."

Method: System.Byte ToByte(System.IFormatProvider provider = null)

Disassembly:
	0x03766AC8 LDR X9, [X31 + 0x18]
	0x03766ACC CMP X8, X9
	0x03766AD0 B.NE 0x3766AE0
	0x03766AD4 LDP X30, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-16], X30
	002 Call PrimitiveValue.ToInt64, X0, X1
	003 Move X30, [X31+16]
	004 Return X0

Method: System.Char ToChar(System.IFormatProvider provider = null)

Disassembly:
	0x03766A7C BL 0x3379A44
	0x03766A80 ADRP X0, 0x9E0000
	0x03766A84 LDR X0, [X0 + 0x4F0]
	0x03766A88 BL 0x1C16D08
	0x03766A8C MOV X1, X0
	0x03766A90 MOV X0, X19
	0x03766A94 BL 0x1C16DEC
	0x03766A98 SUB X31, X31, 0x30
	0x03766A9C STP X30, X19, [X31 + 0x20]
	0x03766AA0 MRS X19, 0xC000
	0x03766AA4 LDR X8, [X19 + 0x28]
	0x03766AA8 STR X8, [X31 + 0x18]
	0x03766AAC BL 0x3765CBC
	0x03766AB0 ADD X0, X31, 0x8

ISIL:
	001 Move [X31-16], X30
	002 Move W8, [X0]
	003 NotImplemented "Instruction CMP not yet implemented."
	004 NotImplemented "Instruction LDRH not yet implemented."
	005 Subtract W8, W8, 7
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Call PrimitiveValue.ToInt64, X0, X1
	008 Move W0, W31
	009 Move X30, [X31+16]
	010 Return X0

Method: System.DateTime ToDateTime(System.IFormatProvider provider = null)

Disassembly:
	0x03767A4C ADRP X0, 0x9DF000
	0x03767A50 LDR X0, [X0 + 0x5B0]
	0x03767A54 BL 0x1C16D08
	0x03767A58 MOV X1, X0
	0x03767A5C MOV X0, X19
	0x03767A60 BL 0x1C16DEC
	0x03767A64 STP X30, X23, [X31 - 0x30]!
	0x03767A68 STP X22, X21, [X31 + 0x10]
	0x03767A6C STP X20, X19, [X31 + 0x20]
	0x03767A70 CBZ X0, 0x3767AEC
	0x03767A74 LDR W22, [X0 + 0x10]
	0x03767A78 MOV W19, W1
	0x03767A7C MOV X20, X0
	0x03767A80 CMP W22, W1
	0x03767A84 B.LE 0x3767AD4
	0x03767A88 MOV W21, W31
	0x03767A8C MOVZ W23, 0x1
	0x03767A90 MOV X0, X20
	0x03767A94 MOV W1, W19

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0x98D000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X19, X0
	008 Move X0, 0x9E0000
	009 Move X0, [X0+1256]
	010 Call 0x1C17D08
	011 Move X1, X0
	012 Move X0, X19
	013 Move X2, X31
	014 Call NotSupportedException..ctor, X0, X1
	015 Move X0, 0x9E0000
	016 Move X0, [X0+1264]
	017 Call 0x1C17D08
	018 Move X1, X0
	019 Move X0, X19
	020 Call 0x1C17DEC

Method: System.Decimal ToDecimal(System.IFormatProvider provider = null)

Disassembly:
	0x03767A98 MOV X2, X31
	0x03767A9C BL 0x3222A1C
	0x03767AA0 SUB W8, W0, 0x30
	0x03767AA4 AND W8, W8, 0xFFFF
	0x03767AA8 CMP W8, 0x9
	0x03767AAC B.HI 0x3767AD8
	0x03767AB0 MUL W8, W23, W21
	0x03767AB4 ADD W9, W23, W23, 0x2, LSL
	0x03767AB8 ADD W19, W19, 0x1
	0x03767ABC ADD W8, W8, W0, UXTH
	0x03767AC0 CMP W22, W19
	0x03767AC4 SUB W21, W8, 0x30
	0x03767AC8 UBFM W23, W9, 0x1F, 0x1E
	0x03767ACC B.NE 0x3767A90
	0x03767AD0 B 0x3767AD8
	0x03767AD4 MOV W21, W31
	0x03767AD8 MOV W0, W21
	0x03767ADC LDP X20, X19, [X31 + 0x20]
	0x03767AE0 LDP X22, X21, [X31 + 0x10]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+32], X30
	003 Move [X31+40], X19
	004 NotImplemented "Instruction MRS not yet implemented."
	005 Move X8, [X19+40]
	006 Move [X31+24], X8
	007 Call PrimitiveValue.ToDouble, X0, X1
	008 Add X0, X31, 8
	009 Move X1, X31
	010 Move [X31+8], X31
	011 Move [X31+16], X31
	012 Call Decimal..ctor, X0, V0
	013 Move X0, [X31+8]
	014 Move X1, [X31+16]
	015 Move X8, [X19+40]
	016 Move X9, [X31+24]
	017 NotImplemented "Instruction CMP not yet implemented."
	018 Move X30, [X31+32]
	019 Move X19, [X31+40]
	020 Add X31, X31, 48
	021 Return X0
	022 Call 0x3EB2B20

Method: System.Double ToDouble(System.IFormatProvider provider = null)

Disassembly:
	0x03766CBC ADRP X0, 0x9E0000
	0x03766CC0 LDR X0, [X0 + 0x510]
	0x03766CC4 BL 0x1C16CF4
	0x03766CC8 MOVZ W8, 0x1
	0x03766CCC STRB W8, [X22 + 0xE7B]
	0x03766CD0 LDR X0, [X21]
	0x03766CD4 UBFM W22, W19, 0x1F, 0x1E
	0x03766CD8 BL 0x1C16F10
	0x03766CDC MOV W1, W22
	0x03766CE0 MOV W2, W22
	0x03766CE4 MOV W3, W31
	0x03766CE8 MOV W4, W31
	0x03766CEC MOV X5, X31
	0x03766CF0 MOV X21, X0
	0x03766CF4 BL 0x3C1BE58
	0x03766CF8 CBZ X21, 0x3766E50
	0x03766CFC ADRP X8, 0x9E0000
	0x03766D00 LDR X8, [X8 + 0x508]
	0x03766D04 ADRP X23, 0x9E0000
	0x03766D08 MOV X0, X21
	0x03766D0C LDR X1, [X8]
	0x03766D10 LDR X23, [X23 + 0x500]
	0x03766D14 BL 0x229C5E0
	0x03766D18 LDR X2, [X23]
	0x03766D1C MOV X24, X1
	0x03766D20 BL 0x222268C
	0x03766D24 UBFM W8, W24, 0x1E, 0x1D
	0x03766D28 SXTW X2, W8
	0x03766D2C MOV W1, W31
	0x03766D30 MOV X3, X31
	0x03766D34 MOV X23, X0
	0x03766D38 BL 0x3C00160
	0x03766D3C SUB W9, W31, W19
	0x03766D40 CMP W9, W19
	0x03766D44 B.GE 0x3766E04
	0x03766D48 ADRP X13, 0xFFFFFFFFFD384000
	0x03766D4C LDR V1, [X13 + 0x79]
	0x03766D50 AND X10, X20, 0x0
	0x03766D54 MUL W11, W19, W19
	0x03766D58 MOV W12, W31
	0x03766D5C SXTW X8, W19
	0x03766D60 BFM X20, X10, 0x20, 0x1F

ISIL:
	001 Move W8, [X0]
	002 Subtract W8, W8, 3
	003 NotImplemented "Instruction CMP not yet implemented."
	004 Move X9, -45932544
	005 Add X9, X9, 2271
	006 NotImplemented "Instruction ADR not yet implemented."
	007 Move W11, [X9]
	008 Add X10, X10, X11
	009 CallNoReturn X10
	010 Move V0, [X0+4]
	011 Move W8, [X0+4]
	012 Move D0, 1
	013 Move D1, X31
	014 NotImplemented "Instruction CMP not yet implemented."
	015 NotImplemented "Instruction FCSEL not yet implemented."
	016 Return V0
	017 NotImplemented "Instruction INVALID not yet implemented."
	018 Move V0, [X0+4]
	019 NotImplemented "Instruction LDRSH not yet implemented."
	020 Move W8, [X0+4]
	021 NotImplemented "Instruction SCVTF not yet implemented."
	022 Return V0
	023 Move V0, [X0+4]
	024 NotImplemented "Instruction LDUR not yet implemented."
	025 NotImplemented "Instruction SCVTF not yet implemented."
	026 Return V0
	027 NotImplemented "Instruction LDUR not yet implemented."
	028 NotImplemented "Instruction UCVTF not yet implemented."
	029 Return V0
	030 Move V0, [X0+4]
	031 NotImplemented "Instruction FCVT not yet implemented."
	032 Return V0
	033 NotImplemented "Instruction LDUR not yet implemented."
	034 Return V0
	035 Move D0, X31
	036 Return V0

Method: System.Int16 ToInt16(System.IFormatProvider provider = null)

Disassembly:
	0x03766B10 BL 0x1C16D08
	0x03766B14 MOV X1, X0
	0x03766B18 MOV X0, X19
	0x03766B1C BL 0x1C16DEC

ISIL:
	001 Move [X31-16], X30
	002 Call PrimitiveValue.ToInt64, X0, X1
	003 Move X30, [X31+16]
	004 Return X0

Method: System.Int32 ToInt32(System.IFormatProvider provider = null)

Disassembly:
	0x03766B34 BL 0x3765C10
	0x03766B38 LDR X30, [X31], #0x10
	0x03766B3C RET
	0x03766B40 AND W8, W0, 0xFFFF

ISIL:
	001 Move [X31-16], X30
	002 Call PrimitiveValue.ToInt64, X0, X1
	003 Move X30, [X31+16]
	004 Return X0

Method: System.Int64 ToInt64(System.IFormatProvider provider = null)

Disassembly:
	0x03766B58 BFM X8, X0, 0x20, 0x1F
	0x03766B5C MOV X0, X8
	0x03766B60 MOV X1, X31
	0x03766B64 RET
	0x03766B68 MOVZ X9, 0x3
	0x03766B6C ANDS W31, W0, 0x1
	0x03766B70 MOVZ W8, 0x3
	0x03766B74 MOVK X9, 0x1
	0x03766B78 CSEL X0, X9, X8, NE
	0x03766B7C MOV X1, X31
	0x03766B80 RET
	0x03766B84 AND W8, W0, 0xFFFF
	0x03766B88 MOVZ W0, 0x4
	0x03766B8C BFM X0, X8, 0x20, 0xF
	0x03766B90 MOV X1, X31
	0x03766B94 RET
	0x03766B98 AND W8, W0, 0xFF
	0x03766B9C MOVZ W0, 0x6
	0x03766BA0 BFM X0, X8, 0x20, 0x7
	0x03766BA4 MOV X1, X31
	0x03766BA8 RET
	0x03766BAC AND W8, W0, 0xFF
	0x03766BB0 MOVZ W0, 0x5
	0x03766BB4 BFM X0, X8, 0x20, 0x7
	0x03766BB8 MOV X1, X31
	0x03766BBC RET
	0x03766BC0 AND W8, W0, 0xFFFF
	0x03766BC4 MOVZ W0, 0x7
	0x03766BC8 BFM X0, X8, 0x20, 0xF
	0x03766BCC MOV X1, X31
	0x03766BD0 RET
	0x03766BD4 AND W8, W0, 0xFFFF
	0x03766BD8 MOVZ W0, 0x8
	0x03766BDC BFM X0, X8, 0x20, 0xF
	0x03766BE0 MOV X1, X31
	0x03766BE4 RET
	0x03766BE8 MOVZ W8, 0x9
	0x03766BEC BFM X8, X0, 0x20, 0x1F
	0x03766BF0 MOV X0, X8
	0x03766BF4 MOV X1, X31

ISIL:
	001 Move W8, [X0]
	002 Subtract W8, W8, 3
	003 NotImplemented "Instruction CMP not yet implemented."
	004 Move X9, -45932544
	005 Add X9, X9, 2247
	006 NotImplemented "Instruction ADR not yet implemented."
	007 Move W11, [X9]
	008 Add X10, X10, X11
	009 CallNoReturn X10
	010 Move W0, [X0+4]
	011 Return X0
	012 NotImplemented "Instruction LDRH not yet implemented."
	013 Return X0
	014 NotImplemented "Instruction LDUR not yet implemented."
	015 Return X0
	016 NotImplemented "Instruction INVALID not yet implemented."
	017 Return X0
	018 NotImplemented "Instruction LDRSH not yet implemented."
	019 Return X0
	020 NotImplemented "Instruction LDRSW not yet implemented."
	021 Return X0
	022 Move W0, [X0+4]
	023 Return X0
	024 Move V0, [X0+4]
	025 Move W8, 0x7F800000
	026 Move S1, W8
	027 NotImplemented "Instruction FCVTZS not yet implemented."
	028 NotImplemented "Instruction FCMP not yet implemented."
	029 NotImplemented "Instruction LDUR not yet implemented."
	030 Move X8, 0x7FF00000
	031 Move D1, X8
	032 NotImplemented "Instruction FCVTZS not yet implemented."
	033 NotImplemented "Instruction FCMP not yet implemented."
	034 Move X9, 0x80000000
	035 NotImplemented "Instruction CSEL not yet implemented."
	036 Return X0
	037 Move X0, X31
	038 Return X0

Method: System.SByte ToSByte(System.IFormatProvider provider = null)

Disassembly:
	0x03766AEC ADRP X0, 0x98D000
	0x03766AF0 LDR X0, [X0 + 0xB40]
	0x03766AF4 BL 0x1C16D08
	0x03766AF8 BL 0x1C16F10

ISIL:
	001 Move [X31-16], X30
	002 Call PrimitiveValue.ToInt64, X0, X1
	003 Move X30, [X31+16]
	004 Return X0

Method: System.Single ToSingle(System.IFormatProvider provider = null)

Disassembly:
	0x03759810 LDR X8, [X8 + 0xB8]
	0x03759814 LDR V14, [X8]
	0x03759818 LDR X0, [X19 + 0x138]
	0x0375981C CBZ X0, 0x37598F4
	0x03759820 LDR X2, [X23]

ISIL:
	001 Move [X31-16], X30
	002 Call PrimitiveValue.ToDouble, X0, X1
	003 NotImplemented "Instruction INVALID not yet implemented."
	004 Move X30, [X31+16]
	005 Return V0

Method: System.String ToString(System.IFormatProvider provider)

Disassembly:
	0x03767AE4 LDP X30, X23, [X31], #0x30

ISIL:
	001 Call PrimitiveValue.ToString, X0
	002 Return X0

Method: System.Object ToType(System.Type conversionType, System.IFormatProvider provider)

Disassembly:
	0x03767AE8 RET
	0x03767AEC BL 0x1C16F20
	0x03767AF0 STR X30, [X31 - 0x10]!
	0x03767AF4 ADD X3, X31, 0xC
	0x03767AF8 STR W31, [X31 + 0xC]
	0x03767AFC BL 0x3767B0C
	0x03767B00 AND W0, W0, 0x1
	0x03767B04 LDR X30, [X31], #0x10
	0x03767B08 RET
	0x03767B0C SUB X31, X31, 0x50
	0x03767B10 STP X30, X25, [X31 + 0x10]
	0x03767B14 STP X24, X23, [X31 + 0x20]
	0x03767B18 STP X22, X21, [X31 + 0x30]
	0x03767B1C STP X20, X19, [X31 + 0x40]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0x98D000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0x9E0000
	011 Move X0, [X0+1272]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.UInt16 ToUInt16(System.IFormatProvider provider = null)

Disassembly:
	0x03767B20 MOV W19, W2
	0x03767B24 MOV X22, X1
	0x03767B28 MOV X21, X0
	0x03767B2C MOV X0, X1

ISIL:
	001 Move [X31-16], X30
	002 Call PrimitiveValue.ToUInt64, X0, X1
	003 Move X30, [X31+16]
	004 Return X0

Method: System.UInt32 ToUInt32(System.IFormatProvider provider = null)

Disassembly:
	0x03767B30 MOV X1, X31
	0x03767B34 MOV X2, X31
	0x03767B38 MOV X20, X3
	0x03767B3C BL 0x33BE5B0

ISIL:
	001 Move [X31-16], X30
	002 Call PrimitiveValue.ToUInt64, X0, X1
	003 Move X30, [X31+16]
	004 Return X0

Method: System.UInt64 ToUInt64(System.IFormatProvider provider = null)

Disassembly:
	0x03766C10 STP X31, X31, [X31 - 0x10]!
	0x03766C14 MOVZ W8, 0xB
	0x03766C18 STUR X0, [X31 + 0x4]
	0x03766C1C STR W8, [X31]
	0x03766C20 LDP X0, X1, [X31], #0x10
	0x03766C24 RET
	0x03766C28 STP X31, X31, [X31 - 0x10]!
	0x03766C2C MOVZ W8, 0xC
	0x03766C30 STUR X0, [X31 + 0x4]
	0x03766C34 STR W8, [X31]
	0x03766C38 LDP X0, X1, [X31], #0x10
	0x03766C3C RET
	0x03766C40 FMOV W8, S0
	0x03766C44 MOVZ W0, 0xD
	0x03766C48 BFM X0, X8, 0x20, 0x1F
	0x03766C4C MOV X1, X31
	0x03766C50 RET
	0x03766C54 STP X31, X31, [X31 - 0x10]!
	0x03766C58 MOVZ W8, 0xE
	0x03766C5C STUR D0, [X31 + 0x4]
	0x03766C60 STR W8, [X31]
	0x03766C64 LDP X0, X1, [X31], #0x10
	0x03766C68 RET
	0x03766C6C STR X30, [X31 - 0x40]!
	0x03766C70 STP X24, X23, [X31 + 0x10]
	0x03766C74 STP X22, X21, [X31 + 0x20]
	0x03766C78 STP X20, X19, [X31 + 0x30]
	0x03766C7C ADRP X22, 0xC7A000
	0x03766C80 ADRP X21, 0x9B7000
	0x03766C84 LDRB W8, [X22 + 0xE7B]
	0x03766C88 LDR X21, [X21 + 0x250]
	0x03766C8C MOV X20, X1
	0x03766C90 MOV W19, W0
	0x03766C94 TBNZ X8, 0x0, 0x3766CD0
	0x03766C98 ADRP X0, 0x9E0000
	0x03766C9C LDR X0, [X0 + 0x500]
	0x03766CA0 BL 0x1C16CF4

ISIL:
	001 Move W8, [X0]
	002 Subtract W8, W8, 3
	003 NotImplemented "Instruction CMP not yet implemented."
	004 Move X9, -45932544
	005 Add X9, X9, 2259
	006 NotImplemented "Instruction ADR not yet implemented."
	007 Move W11, [X9]
	008 Add X10, X10, X11
	009 CallNoReturn X10
	010 Move W0, [X0+4]
	011 Return X0
	012 NotImplemented "Instruction LDRH not yet implemented."
	013 Return X0
	014 NotImplemented "Instruction LDUR not yet implemented."
	015 Return X0
	016 NotImplemented "Instruction INVALID not yet implemented."
	017 Return X0
	018 NotImplemented "Instruction LDRSH not yet implemented."
	019 Return X0
	020 NotImplemented "Instruction LDRSW not yet implemented."
	021 Return X0
	022 Move W0, [X0+4]
	023 Return X0
	024 Move V0, [X0+4]
	025 NotImplemented "Instruction FCVTZS not yet implemented."
	026 NotImplemented "Instruction FCVTZU not yet implemented."
	027 NotImplemented "Instruction FCMP not yet implemented."
	028 NotImplemented "Instruction LDUR not yet implemented."
	029 NotImplemented "Instruction FCVTZS not yet implemented."
	030 NotImplemented "Instruction FCVTZU not yet implemented."
	031 NotImplemented "Instruction FCMP not yet implemented."
	032 NotImplemented "Instruction CSEL not yet implemented."
	033 Return X0
	034 Move X0, X31
	035 Return X0

Method: System.Object ToObject()

Disassembly:
	0x037659CC FMOV S2, W31
	0x037659D0 FMAXNM S1, S1, S2
	0x037659D4 FMUL S0, S1, S0
	0x037659D8 LDR X8, [X8 + 0xB8]
	0x037659DC FMOV S1, 8
	0x037659E0 LDR V3, [X8]
	0x037659E4 FMUL S1, S3, S1
	0x037659E8 FCMP S0, S1
	0x037659EC FCSEL S0, S0, S1, GT
	0x037659F0 FABD S1, S2, S2
	0x037659F4 FCMP S1, S0
	0x037659F8 CSET W0, PL
	0x037659FC B 0x3765970
	0x03765A00 ADRP X19, 0xC7B000
	0x03765A04 LDRB W8, [X19 + 0xE7A]
	0x03765A08 LDUR V8, [X0 + 0x4]
	0x03765A0C CBNZ W8, 0x3765A24
	0x03765A10 ADRP X0, 0x98E000
	0x03765A14 LDR X0, [X0 + 0x5A8]
	0x03765A18 BL 0x1C16CF4
	0x03765A1C MOVZ W8, 0x1
	0x03765A20 STRB W8, [X19 + 0xE7A]
	0x03765A24 ADRP X8, 0x98E000
	0x03765A28 LDR X8, [X8 + 0x5A8]
	0x03765A2C LDR X0, [X8]
	0x03765A30 LDR W8, [X0 + 0xE0]
	0x03765A34 CBNZ W8, 0x3765A3C
	0x03765A38 BL 0x1C16DFC
	0x03765A3C FMOV D0, X31
	0x03765A40 FABD D9, D0, D0
	0x03765A44 FABS D0, D8
	0x03765A48 FMOV D1, X31
	0x03765A4C MOV X0, X31
	0x03765A50 BL 0x337EDC0
	0x03765A54 ADRP X8, 0xFFFFFFFFFD388000
	0x03765A58 LDR V1, [X8 + 0xBC8]
	0x03765A5C MOVZ X8, 0x8
	0x03765A60 MOV X0, X31
	0x03765A64 FMUL D0, D0, D1
	0x03765A68 FMOV D1, X8
	0x03765A6C BL 0x337EDC0
	0x03765A70 FCMP D9, D0
	0x03765A74 CSET W0, MI
	0x03765A78 B 0x3765970
	0x03765A7C STR X30, [X31 - 0x10]!
	0x03765A80 LDR W8, [X0]
	0x03765A84 CMP W8, 0x4
	0x03765A88 B.NE 0x3765A94
	0x03765A8C LDRH W0, [X0 + 0x4]
	0x03765A90 B 0x3765AAC
	0x03765A94 SUB W8, W8, 0x7
	0x03765A98 CMP W8, 0x6
	0x03765A9C B.CS 0x3765AA8
	0x03765AA0 BL 0x3765B58
	0x03765AA4 B 0x3765AAC
	0x03765AA8 MOV W0, W31
	0x03765AAC LDR X30, [X31], #0x10
	0x03765AB0 RET
	0x03765AB4 AND W8, W0, 0xFFFF
	0x03765AB8 MOVZ W0, 0x4
	0x03765ABC BFM X0, X8, 0x20, 0xF
	0x03765AC0 MOV X1, X31
	0x03765AC4 RET
	0x03765AC8 STR X30, [X31 - 0x10]!
	0x03765ACC BL 0x3765B58
	0x03765AD0 LDR X30, [X31], #0x10
	0x03765AD4 RET
	0x03765AD8 AND W8, W0, 0xFF
	0x03765ADC MOVZ W0, 0x6
	0x03765AE0 BFM X0, X8, 0x20, 0x7
	0x03765AE4 MOV X1, X31
	0x03765AE8 RET
	0x03765AEC STR X30, [X31 - 0x10]!
	0x03765AF0 BL 0x3765B58
	0x03765AF4 LDR X30, [X31], #0x10
	0x03765AF8 RET
	0x03765AFC AND W8, W0, 0xFF
	0x03765B00 MOVZ W0, 0x5
	0x03765B04 BFM X0, X8, 0x20, 0x7
	0x03765B08 MOV X1, X31
	0x03765B0C RET
	0x03765B10 STR X30, [X31 - 0x10]!
	0x03765B14 BL 0x3765B58
	0x03765B18 LDR X30, [X31], #0x10
	0x03765B1C RET
	0x03765B20 AND W8, W0, 0xFFFF
	0x03765B24 MOVZ W0, 0x7
	0x03765B28 BFM X0, X8, 0x20, 0xF
	0x03765B2C MOV X1, X31
	0x03765B30 RET
	0x03765B34 STR X30, [X31 - 0x10]!
	0x03765B38 BL 0x3765B58
	0x03765B3C LDR X30, [X31], #0x10
	0x03765B40 RET
	0x03765B44 MOVZ W8, 0x9
	0x03765B48 BFM X8, X0, 0x20, 0x1F
	0x03765B4C MOV X0, X8
	0x03765B50 MOV X1, X31
	0x03765B54 RET
	0x03765B58 LDR W8, [X0]
	0x03765B5C SUB W8, W8, 0x3
	0x03765B60 CMP W8, 0xB
	0x03765B64 B.HI 0x3765BF0
	0x03765B68 ADRP X9, 0xFFFFFFFFFD432000
	0x03765B6C ADD X9, X9, 0x8C7
	0x03765B70 ADR X10, 0x10
	0x03765B74 LDRB W11, [X9, X8, LSL]
	0x03765B78 ADD X10, X10, X11, 0x2, LSL
	0x03765B7C BR X10
	0x03765B80 LDRB W0, [X0 + 0x4]
	0x03765B84 RET
	0x03765B88 LDRH W0, [X0 + 0x4]
	0x03765B8C RET
	0x03765B90 LDUR X0, [X0 + 0x4]
	0x03765B94 RET
	0x00000000 INVALID
	0x03765B9C RET
	0x03765BA0 LDRSH X0, [X0 + 0x4]
	0x03765BA4 RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xC7C000
	005 Move W8, [X20+3704]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {49}
	011 Move X0, 0x98F000
	012 Move X0, [X0+2904]
	013 Call 0x1C17CF4
	014 Move X0, 0x990000
	015 Move X0, [X0+2520]
	016 Call 0x1C17CF4
	017 Move X0, 0x991000
	018 Move X0, [X0+368]
	019 Call 0x1C17CF4
	020 Move X0, 0x992000
	021 Move X0, [X0+2424]
	022 Call 0x1C17CF4
	023 Move X0, 0x993000
	024 Move X0, [X0+1576]
	025 Call 0x1C17CF4
	026 Move X0, 0x98F000
	027 Move X0, [X0+1880]
	028 Call 0x1C17CF4
	029 Move X0, 0x991000
	030 Move X0, [X0+2656]
	031 Call 0x1C17CF4
	032 Move X0, 0x9B8000
	033 Move X0, [X0+1712]
	034 Call 0x1C17CF4
	035 Move X0, 0x98F000
	036 Move X0, [X0+2704]
	037 Call 0x1C17CF4
	038 Move X0, 0x994000
	039 Move X0, [X0+1624]
	040 Call 0x1C17CF4
	041 Move X0, 0x997000
	042 Move X0, [X0+1824]
	043 Call 0x1C17CF4
	044 Move X0, 0x990000
	045 Move X0, [X0+1880]
	046 Call 0x1C17CF4
	047 Move W8, 1
	048 Move [X20+3704], W8
	049 Move W8, [X19]
	050 Subtract W8, W8, 3
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move X9, -45928448
	053 Add X9, X9, 2223
	054 NotImplemented "Instruction ADR not yet implemented."
	055 Move W11, [X9]
	056 Add X10, X10, X11
	057 CallNoReturn X10
	058 Move X9, 0x98F000
	059 Move W8, [X19+4]
	060 Move X9, [X9+2904]
	061 Move X9, 0x991000
	062 NotImplemented "Instruction LDRH not yet implemented."
	063 Move X9, [X9+368]
	064 Move X9, 0x9B8000
	065 Move W8, [X19+4]
	066 Move X9, [X9+1712]
	067 Move X9, 0x990000
	068 Move W8, [X19+4]
	069 Move X9, [X9+2520]
	070 Move X0, [X9]
	071 Move [X31+8], W8
	072 Move X9, 0x993000
	073 NotImplemented "Instruction LDRH not yet implemented."
	074 Move X9, [X9+1576]
	075 Move X9, 0x994000
	076 NotImplemented "Instruction LDRH not yet implemented."
	077 Move X9, [X9+1624]
	078 Move X0, [X9]
	079 NotImplemented "Instruction STRH not yet implemented."
	080 Move X9, 0x98F000
	081 Move W8, [X19+4]
	082 Move X9, [X9+1880]
	083 Move X9, 0x997000
	084 Move W8, [X19+4]
	085 Move X9, [X9+1824]
	086 Move X0, [X9]
	087 Move [X31+8], W8
	088 Move X9, 0x991000
	089 NotImplemented "Instruction LDUR not yet implemented."
	090 Move X9, [X9+2656]
	091 Move X9, 0x990000
	092 NotImplemented "Instruction LDUR not yet implemented."
	093 Move X9, [X9+1880]
	094 Move X0, [X9]
	095 Move [X31+8], X8
	096 Move X8, 0x98F000
	097 Move V0, [X19+4]
	098 Move X8, [X8+2704]
	099 Move [X31+8], S0
	100 Move X8, 0x992000
	101 NotImplemented "Instruction LDUR not yet implemented."
	102 Move X8, [X8+2424]
	103 Move [X31+8], D0
	104 Move X0, [X8]
	105 Add X1, X31, 8
	106 Call 0x1C17E04
	107 Move X20, [X31+16]
	108 Move X19, [X31+24]
	109 Move X30, [X31+32]
	110 Return X0
	111 Move X0, X31

Method: UnityEngine.InputSystem.Utilities.PrimitiveValue From(TValue value)

Disassembly:
	0x0223600C LDR X8, [X21 + 0x38]
	0x02236010 LDR X1, [X20 + 0x38]
	0x02236014 MOV X0, X23
	0x02236018 LDR X2, [X8 + 0x30]
	0x0223601C LDR X8, [X2]
	0x02236020 BLR X8
	0x02236024 ADRP X8, 0x1EBE000
	0x02236028 LDR X8, [X8 + 0xE70]
	0x0223602C LDR X0, [X8]
	0x02236030 BL 0x1C16F10
	0x02236034 LDR X8, [X21 + 0x38]
	0x02236038 MOV X1, X22
	0x0223603C MOV X3, X31
	0x02236040 MOV X23, X0
	0x02236044 LDR X2, [X8 + 0x40]
	0x02236048 BL 0x3314368
	0x0223604C ADRP X8, 0x1EC0000
	0x02236050 LDR X8, [X8 + 0x2C8]
	0x02236054 LDR X0, [X8]
	0x02236058 BL 0x1C16F10
	0x0223605C LDR X8, [X21 + 0x38]
	0x02236060 MOV X1, X22
	0x02236064 MOV X3, X31
	0x02236068 MOV X21, X0
	0x0223606C LDR X2, [X8 + 0x48]
	0x02236070 BL 0x2A6B948
	0x02236074 LDR X1, [X22 + 0x18]
	0x02236078 MOV X0, X20
	0x0223607C MOV X2, X23
	0x02236080 MOV X3, X21
	0x02236084 MOV X4, X31
	0x02236088 BL 0x358F33C
	0x0223608C CBZ X19, 0x22360A4
	0x02236090 MOV X0, X20
	0x02236094 MOV X1, X20
	0x02236098 MOV X2, X19
	0x0223609C MOV X3, X31
	0x022360A0 BL 0x358F3B8
	0x022360A4 LDR X0, [X22 + 0x18]
	0x022360A8 LDP X20, X19, [X31 + 0x30]
	0x022360AC LDP X22, X21, [X31 + 0x20]
	0x022360B0 LDP X24, X23, [X31 + 0x10]
	0x022360B4 LDR X30, [X31], #0x40
	0x022360B8 RET
	0x022360BC BL 0x1C16F20
	0x022360C0 STR X30, [X31 - 0x30]!
	0x022360C4 STP X22, X21, [X31 + 0x10]
	0x022360C8 STP X20, X19, [X31 + 0x20]
	0x022360CC LDR X8, [X2 + 0x38]
	0x022360D0 MOV X19, X2
	0x022360D4 MOV X21, X1
	0x022360D8 MOV X20, X0
	0x022360DC CBNZ X8, 0x22360EC
	0x022360E0 MOV X0, X19
	0x022360E4 BL 0x1C5C6E0
	0x022360E8 LDR X8, [X19 + 0x38]
	0x022360EC LDR X0, [X8]
	0x022360F0 LDRB W8, [X0 + 0x135]
	0x022360F4 TBNZ X8, 0x0, 0x22360FC
	0x022360F8 BL 0x1C5C684
	0x022360FC BL 0x1C16F10
	0x02236100 LDR X8, [X19 + 0x38]
	0x02236104 MOV X22, X0
	0x02236108 LDR X1, [X8 + 0x8]
	0x0223610C LDR X8, [X1]
	0x02236110 BLR X8
	0x02236114 CBZ X22, 0x2236174
	0x02236118 STR X21, [X22 + 0x10]
	0x0223611C LDR X8, [X19 + 0x38]
	0x02236120 LDR X0, [X8 + 0x20]
	0x02236124 LDRB W8, [X0 + 0x135]
	0x02236128 TBNZ X8, 0x0, 0x2236130
	0x0223612C BL 0x1C5C684
	0x02236130 BL 0x1C16F10
	0x02236134 LDR X8, [X19 + 0x38]
	0x02236138 MOV X1, X22
	0x0223613C MOV X21, X0
	0x02236140 LDR X3, [X8 + 0x28]
	0x02236144 LDR X2, [X8 + 0x18]
	0x02236148 LDR X9, [X3]
	0x0223614C BLR X9
	0x02236150 LDR X8, [X19 + 0x38]
	0x02236154 MOV X0, X20
	0x02236158 MOV X1, X21
	0x0223615C LDP X20, X19, [X31 + 0x20]
	0x02236160 LDR X2, [X8 + 0x30]
	0x02236164 LDP X22, X21, [X31 + 0x10]
	0x02236168 LDR X3, [X2]
	0x0223616C LDR X30, [X31], #0x30
	0x02236170 BR X3
	0x02236174 BL 0x1C16F20
	0x02236178 STR X30, [X31 - 0x30]!
	0x0223617C STP X22, X21, [X31 + 0x10]
	0x02236180 STP X20, X19, [X31 + 0x20]
	0x02236184 LDR X8, [X2 + 0x38]
	0x02236188 MOV X19, X2
	0x0223618C MOV X21, X1
	0x02236190 MOV X20, X0
	0x02236194 CBNZ X8, 0x22361A4
	0x02236198 MOV X0, X19
	0x0223619C BL 0x1C5C6E0
	0x022361A0 LDR X8, [X19 + 0x38]
	0x022361A4 LDR X0, [X8]
	0x022361A8 LDRB W8, [X0 + 0x135]
	0x022361AC TBNZ X8, 0x0, 0x22361B4
	0x022361B0 BL 0x1C5C684
	0x022361B4 BL 0x1C16F10
	0x022361B8 LDR X8, [X19 + 0x38]
	0x022361BC MOV X22, X0
	0x022361C0 LDR X1, [X8 + 0x8]
	0x022361C4 LDR X8, [X1]
	0x022361C8 BLR X8
	0x022361CC CBZ X22, 0x223622C
	0x022361D0 STR X21, [X22 + 0x10]
	0x022361D4 LDR X8, [X19 + 0x38]
	0x022361D8 LDR X0, [X8 + 0x20]
	0x022361DC LDRB W8, [X0 + 0x135]
	0x022361E0 TBNZ X8, 0x0, 0x22361E8
	0x022361E4 BL 0x1C5C684
	0x022361E8 BL 0x1C16F10
	0x022361EC LDR X8, [X19 + 0x38]
	0x022361F0 MOV X1, X22
	0x022361F4 MOV X21, X0
	0x022361F8 LDR X3, [X8 + 0x28]
	0x022361FC LDR X2, [X8 + 0x18]
	0x02236200 LDR X9, [X3]
	0x02236204 BLR X9
	0x02236208 LDR X8, [X19 + 0x38]
	0x0223620C MOV X0, X20
	0x02236210 MOV X1, X21
	0x02236214 LDP X20, X19, [X31 + 0x20]
	0x02236218 LDR X2, [X8 + 0x30]
	0x0223621C LDP X22, X21, [X31 + 0x10]
	0x02236220 LDR X3, [X2]
	0x02236224 LDR X30, [X31], #0x30
	0x02236228 BR X3
	0x0223622C BL 0x1C16F20
	0x02236230 STP X30, X25, [X31 - 0x40]!
	0x02236234 STP X24, X23, [X31 + 0x10]
	0x02236238 STP X22, X21, [X31 + 0x20]
	0x0223623C STP X20, X19, [X31 + 0x30]
	0x02236240 LDR X8, [X2 + 0x38]
	0x02236244 MOV X19, X2
	0x02236248 MOV X21, X1
	0x0223624C MOV X22, X0
	0x02236250 CBNZ X8, 0x2236280
	0x02236254 ADRP X0, 0x1EC0000
	0x02236258 LDR X0, [X0 + 0x2C8]
	0x0223625C BL 0x1C16CF4
	0x02236260 ADRP X0, 0x1EE6000
	0x02236264 LDR X0, [X0 + 0x2C0]
	0x02236268 BL 0x1C16CF4
	0x0223626C LDR X8, [X19 + 0x38]
	0x02236270 CBNZ X8, 0x2236280
	0x02236274 MOV X0, X19
	0x02236278 BL 0x1C5C6E0
	0x0223627C LDR X8, [X19 + 0x38]
	0x02236280 LDR X0, [X8]
	0x02236284 LDP X9, X8, [X8 + 0x10]
	0x02236288 LDR W24, [X9 + 0xFC]
	0x0223628C LDRB W9, [X0 + 0x135]
	0x02236290 LDR W23, [X8 + 0xFC]
	0x02236294 TBNZ X9, 0x0, 0x223629C
	0x02236298 BL 0x1C5C684
	0x0223629C BL 0x1C16F10
	0x022362A0 LDR X8, [X19 + 0x38]
	0x022362A4 MOV X20, X0
	0x022362A8 LDR X1, [X8 + 0x8]
	0x022362AC LDR X8, [X1]
	0x022362B0 BLR X8
	0x022362B4 LDR X8, [X19 + 0x38]
	0x022362B8 MOV X0, X20
	0x022362BC LDR X8, [X8]
	0x022362C0 LDR X1, [X8 + 0x80]
	0x022362C4 BL 0x1C16D18
	0x022362C8 MOV W1, W31
	0x022362CC MOV X2, X24
	0x022362D0 BL 0x3EB1B10
	0x022362D4 LDR X8, [X19 + 0x38]
	0x022362D8 MOV X0, X20
	0x022362DC LDR X8, [X8]
	0x022362E0 LDR X8, [X8 + 0x80]
	0x022362E4 ADD X1, X8, 0x60
	0x022362E8 BL 0x1C16D18
	0x022362EC MOV W1, W31
	0x022362F0 MOV X2, X23
	0x022362F4 BL 0x3EB1B10
	0x022362F8 CBZ X20, 0x2236730
	0x022362FC LDR X8, [X19 + 0x38]
	0x02236300 MOVZ W1, 0x4
	0x02236304 LDR X8, [X8]
	0x02236308 LDR X8, [X8 + 0x80]
	0x0223630C ADD X23, X8, 0x20
	0x02236310 MOV X0, X23
	0x02236314 BL 0x1C16D14
	0x02236318 MOV X0, X20
	0x0223631C MOV X1, X23
	0x02236320 BL 0x1C16D18
	0x02236324 MOVZ W8, 0x2
	0x02236328 STR W8, [X0]
	0x0223632C LDR X8, [X19 + 0x38]
	0x02236330 MOVZ W1, 0x1
	0x02236334 LDR X8, [X8]
	0x02236338 LDR X8, [X8 + 0x80]
	0x0223633C ADD X23, X8, 0x80
	0x02236340 MOV X0, X23
	0x02236344 BL 0x1C16D14
	0x02236348 MOV X0, X20
	0x0223634C MOV X1, X23
	0x02236350 BL 0x1C16D18
	0x02236354 STRB W31, [X0]
	0x02236358 LDR X8, [X19 + 0x38]
	0x0223635C LDR X0, [X8 + 0x20]
	0x02236360 LDRB W8, [X0 + 0x135]
	0x02236364 TBNZ X8, 0x0, 0x223636C
	0x02236368 BL 0x1C5C684
	0x0223636C BL 0x1C16F10
	0x02236370 LDR X8, [X19 + 0x38]
	0x02236374 MOV X23, X0
	0x02236378 LDR X1, [X8 + 0x28]
	0x0223637C LDR X8, [X1]
	0x02236380 BLR X8
	0x02236384 LDR X8, [X19 + 0x38]
	0x02236388 MOVZ W1, 0x8
	0x0223638C LDR X8, [X8]
	0x02236390 LDR X8, [X8 + 0x80]
	0x02236394 ADD X24, X8, 0x40
	0x02236398 MOV X0, X24
	0x0223639C BL 0x1C16D14
	0x022363A0 MOV X0, X20
	0x022363A4 MOV X1, X24
	0x022363A8 BL 0x1C16D18
	0x022363AC STR X23, [X0]
	0x022363B0 LDR X8, [X19 + 0x38]
	0x022363B4 LDR X0, [X8 + 0x40]
	0x022363B8 LDRB W8, [X0 + 0x135]
	0x022363BC TBNZ X8, 0x0, 0x22363C4
	0x022363C0 BL 0x1C5C684
	0x022363C4 BL 0x1C16F10
	0x022363C8 LDR X8, [X19 + 0x38]
	0x022363CC MOV X1, X20
	0x022363D0 MOV X23, X0
	0x022363D4 LDR X3, [X8 + 0x48]
	0x022363D8 LDR X2, [X8 + 0x38]
	0x022363DC LDR X9, [X3]
	0x022363E0 BLR X9
	0x022363E4 CBZ X22, 0x2236730
	0x022363E8 LDR X8, [X19 + 0x38]
	0x022363EC LDR X1, [X8 + 0x30]
	0x022363F0 LDRB W8, [X1 + 0x135]
	0x022363F4 TBNZ X8, 0x0, 0x2236404
	0x022363F8 MOV X0, X1
	0x022363FC BL 0x1C5C684
	0x02236400 MOV X1, X0
	0x02236404 LDR X8, [X22]
	0x02236408 LDRH W9, [X8 + 0x12E]
	0x0223640C CBZ X9, 0x2236430
	0x02236410 LDR X10, [X8 + 0xB0]
	0x02236414 ADD X10, X10, 0x8
	0x02236418 LDUR X11, [X10 - 0x8]
	0x0223641C CMP X11, X1
	0x02236420 B.EQ 0x2236440
	0x02236424 SUBS X9, X9, 0x1
	0x02236428 ADD X10, X10, 0x10
	0x0223642C B.NE 0x2236418
	0x02236430 MOVZ W2, 0x9
	0x02236434 MOV X0, X22
	0x02236438 BL 0x1C5C788
	0x0223643C B 0x2236450
	0x02236440 LDR W9, [X10]
	0x02236444 ADD W9, W9, 0x9
	0x02236448 ADD X8, X8, W9, 0x4, SXTW
	0x0223644C ADD X0, X8, 0x138
	0x02236450 LDP X8, X2, [X0]
	0x02236454 MOV X0, X22
	0x02236458 MOV X1, X23
	0x0223645C BLR X8
	0x02236460 ADRP X25, 0x1EC0000
	0x02236464 LDR X25, [X25 + 0x2C8]
	0x02236468 MOV X22, X0
	0x0223646C LDR X8, [X25]
	0x02236470 MOV X0, X8
	0x02236474 BL 0x1C16F10
	0x02236478 LDR X8, [X19 + 0x38]
	0x0223647C MOV X1, X20
	0x02236480 MOV X3, X31
	0x02236484 MOV X23, X0
	0x02236488 LDR X2, [X8 + 0x58]
	0x0223648C BL 0x2A6B948
	0x02236490 CBZ X22, 0x2236730
	0x02236494 ADRP X24, 0x1EE6000
	0x02236498 LDR X8, [X22]
	0x0223649C LDR X24, [X24 + 0x2C0]
	0x022364A0 LDRH W9, [X8 + 0x12E]
	0x022364A4 LDR X1, [X24]
	0x022364A8 CBZ X9, 0x22364CC
	0x022364AC LDR X10, [X8 + 0xB0]
	0x022364B0 ADD X10, X10, 0x8
	0x022364B4 LDUR X11, [X10 - 0x8]
	0x022364B8 CMP X11, X1
	0x022364BC B.EQ 0x22364DC
	0x022364C0 SUBS X9, X9, 0x1
	0x022364C4 ADD X10, X10, 0x10
	0x022364C8 B.NE 0x22364B4
	0x022364CC MOVZ W2, 0x5
	0x022364D0 MOV X0, X22
	0x022364D4 BL 0x1C5C788
	0x022364D8 B 0x22364EC
	0x022364DC LDR W9, [X10]
	0x022364E0 ADD W9, W9, 0x5
	0x022364E4 ADD X8, X8, W9, 0x4, SXTW
	0x022364E8 ADD X0, X8, 0x138
	0x022364EC LDP X8, X2, [X0]
	0x022364F0 MOV X0, X22
	0x022364F4 MOV X1, X23
	0x022364F8 BLR X8
	0x022364FC CBZ X0, 0x2236730
	0x02236500 LDR X8, [X0]
	0x02236504 LDR X1, [X24]
	0x02236508 MOV X22, X0
	0x0223650C LDRH W9, [X8 + 0x12E]
	0x02236510 CBZ X9, 0x2236534
	0x02236514 LDR X10, [X8 + 0xB0]
	0x02236518 ADD X10, X10, 0x8
	0x0223651C LDUR X11, [X10 - 0x8]
	0x02236520 CMP X11, X1
	0x02236524 B.EQ 0x2236544
	0x02236528 SUBS X9, X9, 0x1
	0x0223652C ADD X10, X10, 0x10
	0x02236530 B.NE 0x223651C
	0x02236534 MOVZ W2, 0x4
	0x02236538 MOV X0, X22
	0x0223653C BL 0x1C5C788
	0x02236540 B 0x2236554
	0x02236544 LDR W9, [X10]
	0x02236548 ADD W9, W9, 0x4
	0x0223654C ADD X8, X8, W9, 0x4, SXTW
	0x02236550 ADD X0, X8, 0x138
	0x02236554 LDP X8, X1, [X0]
	0x02236558 MOV X0, X22
	0x0223655C BLR X8
	0x02236560 LDR X8, [X19 + 0x38]
	0x02236564 LDR X0, [X8 + 0x70]
	0x02236568 LDRB W8, [X0 + 0x135]
	0x0223656C TBNZ X8, 0x0, 0x2236574
	0x02236570 BL 0x1C5C684
	0x02236574 BL 0x1C16F10
	0x02236578 LDR X8, [X19 + 0x38]
	0x0223657C MOV X1, X20
	0x02236580 MOV X22, X0
	0x02236584 LDR X3, [X8 + 0x78]
	0x02236588 LDR X2, [X8 + 0x68]
	0x0223658C LDR X9, [X3]
	0x02236590 BLR X9
	0x02236594 CBZ X21, 0x2236730
	0x02236598 LDR X8, [X19 + 0x38]
	0x0223659C LDR X1, [X8 + 0x60]
	0x022365A0 LDRB W8, [X1 + 0x135]
	0x022365A4 TBNZ X8, 0x0, 0x22365B4
	0x022365A8 MOV X0, X1
	0x022365AC BL 0x1C5C684
	0x022365B0 MOV X1, X0
	0x022365B4 LDR X8, [X21]
	0x022365B8 LDRH W9, [X8 + 0x12E]
	0x022365BC CBZ X9, 0x22365E0
	0x022365C0 LDR X10, [X8 + 0xB0]
	0x022365C4 ADD X10, X10, 0x8
	0x022365C8 LDUR X11, [X10 - 0x8]
	0x022365CC CMP X11, X1
	0x022365D0 B.EQ 0x22365F0
	0x022365D4 SUBS X9, X9, 0x1
	0x022365D8 ADD X10, X10, 0x10
	0x022365DC B.NE 0x22365C8
	0x022365E0 MOVZ W2, 0x9
	0x022365E4 MOV X0, X21
	0x022365E8 BL 0x1C5C788
	0x022365EC B 0x2236600
	0x022365F0 LDR W9, [X10]
	0x022365F4 ADD W9, W9, 0x9
	0x022365F8 ADD X8, X8, W9, 0x4, SXTW
	0x022365FC ADD X0, X8, 0x138
	0x02236600 LDP X8, X2, [X0]
	0x02236604 MOV X0, X21
	0x02236608 MOV X1, X22
	0x0223660C BLR X8
	0x02236610 LDR X8, [X25]
	0x02236614 MOV X21, X0
	0x02236618 MOV X0, X8
	0x0223661C BL 0x1C16F10
	0x02236620 LDR X8, [X19 + 0x38]
	0x02236624 MOV X1, X20
	0x02236628 MOV X3, X31
	0x0223662C MOV X22, X0
	0x02236630 LDR X2, [X8 + 0x88]
	0x02236634 BL 0x2A6B948
	0x02236638 CBZ X21, 0x2236730
	0x0223663C LDR X8, [X21]
	0x02236640 LDR X1, [X24]
	0x02236644 LDRH W9, [X8 + 0x12E]
	0x02236648 CBZ X9, 0x223666C
	0x0223664C LDR X10, [X8 + 0xB0]
	0x02236650 ADD X10, X10, 0x8
	0x02236654 LDUR X11, [X10 - 0x8]
	0x02236658 CMP X11, X1
	0x0223665C B.EQ 0x223667C
	0x02236660 SUBS X9, X9, 0x1
	0x02236664 ADD X10, X10, 0x10
	0x02236668 B.NE 0x2236654
	0x0223666C MOVZ W2, 0x5
	0x02236670 MOV X0, X21
	0x02236674 BL 0x1C5C788
	0x02236678 B 0x223668C
	0x0223667C LDR W9, [X10]
	0x02236680 ADD W9, W9, 0x5
	0x02236684 ADD X8, X8, W9, 0x4, SXTW
	0x02236688 ADD X0, X8, 0x138
	0x0223668C LDP X8, X2, [X0]
	0x02236690 MOV X0, X21
	0x02236694 MOV X1, X22
	0x02236698 BLR X8
	0x0223669C CBZ X0, 0x2236730
	0x022366A0 LDR X8, [X0]
	0x022366A4 LDR X1, [X24]
	0x022366A8 MOV X21, X0
	0x022366AC LDRH W9, [X8 + 0x12E]
	0x022366B0 CBZ X9, 0x22366D4
	0x022366B4 LDR X10, [X8 + 0xB0]
	0x022366B8 ADD X10, X10, 0x8
	0x022366BC LDUR X11, [X10 - 0x8]
	0x022366C0 CMP X11, X1

ISIL:
	001 Move [X31-80], X29
	002 Move [X31-72], X30
	003 Move [X31+16], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Add X29, X31, 0
	011 Subtract X31, X31, 32
	012 NotImplemented "Instruction MRS not yet implemented."
	013 Move X8, [X24+40]
	014 Move X19, X1
	015 Move X21, X0
	016 Move [X29-8], X8
	017 Move X8, [X1+56]
	018 Compare X8, 0
	019 JumpIfNotEqual {32}
	020 Move X0, 0x1EC7000
	021 Move X0, [X0+2536]
	022 Call 0x1C17CF4
	023 Move X0, 0x1EBE000
	024 Move X0, [X0+1728]
	025 Call 0x1C17CF4
	026 Move X8, [X19+56]
	027 Compare X8, 0
	028 JumpIfNotEqual {32}
	029 Move X0, X19
	030 Call 0x1C5D6E0
	031 Move X8, [X19+56]
	032 Move X23, [X8]
	033 Move X9, [X8+8]
	034 Move W22, [X9+252]
	035 Add X9, X31, 0
	036 Add X10, X22, 15
	037 And X10, X10, 0x1FFFFFFFF
	038 Subtract X20, X9, X10
	039 Add X31, X20, 0
	040 Move X25, 0x1EBE000
	041 Move X25, [X25+1728]
	042 Move X0, [X25]
	043 Move W9, [X0+224]
	044 Compare W9, 0
	045 JumpIfNotEqual {47}
	046 Call 0x1C17DFC
	047 Move X0, X23
	048 Move X1, X31
	049 Call Type.GetTypeFromHandle, X0
	050 Compare X0, 0
	051 JumpIfEqual {409}
	052 Move X8, [X0]
	053 Move X23, X0
	054 Move X9, [X8+1416]
	055 Move X1, [X8+1424]
	056 NotImplemented "Instruction BLR not yet implemented."
	057 Move TEMP, X0
	058 And TEMP, TEMP, 1
	059 Compare TEMP, 1
	060 JumpIfNotEqual {67}
	061 Move X8, [X23]
	062 Move X0, X23
	063 Move X9, [X8+2184]
	064 Move X1, [X8+2192]
	065 NotImplemented "Instruction BLR not yet implemented."
	066 Move X23, X0
	067 Move X0, [X25]
	068 Move W8, [X0+224]
	069 Compare W8, 0
	070 JumpIfNotEqual {72}
	071 Call 0x1C17DFC
	072 Move X0, X23
	073 Move X1, X31
	074 Call Type.GetTypeCode, X0
	075 Subtract W8, W0, 3
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Move X9, -24150016
	078 Add X9, X9, 3190
	079 NotImplemented "Instruction ADR not yet implemented."
	080 NotImplemented "Instruction LDRH not yet implemented."
	081 Add X10, X10, X11
	082 CallNoReturn X10
	083 Move X0, X20
	084 Move X1, X21
	085 Move X2, X22
	086 Call 0x3EB2AC0
	087 Move X8, [X19+56]
	088 Move X1, X20
	089 Move X0, [X8+8]
	090 Call 0x1C17E04
	091 Move X8, 0x1EC7000
	092 Move X8, [X8+2536]
	093 Move X19, X0
	094 Move X8, [X8]
	095 Move W9, [X8+224]
	096 Compare W9, 0
	097 JumpIfNotEqual {100}
	098 Move X0, X8
	099 Call 0x1C17DFC
	100 Move X0, X19
	101 Move X1, X31
	102 Call Convert.ToBoolean, X0
	103 And W1, W0, 1
	104 Subtract X0, X29, 24
	105 Move X2, X31
	106 Move [X29-24], X31
	107 Move [X29-16], X31
	108 Call PrimitiveValue..ctor, X0, X1
	109 Move X0, X20
	110 Move X1, X21
	111 Move X2, X22
	112 Call 0x3EB2AC0
	113 Move X8, [X19+56]
	114 Move X1, X20
	115 Move X0, [X8+8]
	116 Call 0x1C17E04
	117 Move X8, 0x1EC7000
	118 Move X8, [X8+2536]
	119 Move X19, X0
	120 Move X8, [X8]
	121 Move W9, [X8+224]
	122 Compare W9, 0
	123 JumpIfNotEqual {126}
	124 Move X0, X8
	125 Call 0x1C17DFC
	126 Move X0, X19
	127 Move X1, X31
	128 Call Convert.ToDouble, X0
	129 Subtract X0, X29, 24
	130 Move X1, X31
	131 Move [X29-24], X31
	132 Move [X29-16], X31
	133 Call PrimitiveValue..ctor, X0, V0
	134 Move X0, X20
	135 Move X1, X21
	136 Move X2, X22
	137 Call 0x3EB2AC0
	138 Move X8, [X19+56]
	139 Move X1, X20
	140 Move X0, [X8+8]
	141 Call 0x1C17E04
	142 Move X8, 0x1EC7000
	143 Move X8, [X8+2536]
	144 Move X19, X0
	145 Move X8, [X8]
	146 Move W9, [X8+224]
	147 Compare W9, 0
	148 JumpIfNotEqual {151}
	149 Move X0, X8
	150 Call 0x1C17DFC
	151 Move X0, X19
	152 Move X1, X31
	153 Call Convert.ToInt16, X0
	154 Move W1, W0
	155 Subtract X0, X29, 24
	156 Move X2, X31
	157 Move [X29-24], X31
	158 Move [X29-16], X31
	159 Call PrimitiveValue..ctor, X0, X1
	160 Move X0, X20
	161 Move X1, X21
	162 Move X2, X22
	163 Call 0x3EB2AC0
	164 Move X8, [X19+56]
	165 Move X1, X20
	166 Move X0, [X8+8]
	167 Call 0x1C17E04
	168 Move X8, 0x1EC7000
	169 Move X8, [X8+2536]
	170 Move X19, X0
	171 Move X8, [X8]
	172 Move W9, [X8+224]
	173 Compare W9, 0
	174 JumpIfNotEqual {177}
	175 Move X0, X8
	176 Call 0x1C17DFC
	177 Move X0, X19
	178 Move X1, X31
	179 Call Convert.ToUInt64, X0
	180 Move X1, X0
	181 Subtract X0, X29, 24
	182 Move X2, X31
	183 Move [X29-24], X31
	184 Move [X29-16], X31
	185 Call PrimitiveValue..ctor, X0, X1
	186 Move X0, X20
	187 Move X1, X21
	188 Move X2, X22
	189 Call 0x3EB2AC0
	190 Move X8, [X19+56]
	191 Move X1, X20
	192 Move X0, [X8+8]
	193 Call 0x1C17E04
	194 Move X8, 0x1EC7000
	195 Move X8, [X8+2536]
	196 Move X19, X0
	197 Move X8, [X8]
	198 Move W9, [X8+224]
	199 Compare W9, 0
	200 JumpIfNotEqual {203}
	201 Move X0, X8
	202 Call 0x1C17DFC
	203 Move X0, X19
	204 Move X1, X31
	205 Call Convert.ToSByte, X0
	206 Move W1, W0
	207 Subtract X0, X29, 24
	208 Move X2, X31
	209 Move [X29-24], X31
	210 Move [X29-16], X31
	211 Call PrimitiveValue..ctor, X0, X1
	212 Move X0, X20
	213 Move X1, X21
	214 Move X2, X22
	215 Call 0x3EB2AC0
	216 Move X8, [X19+56]
	217 Move X1, X20
	218 Move X0, [X8+8]
	219 Call 0x1C17E04
	220 Move X8, 0x1EC7000
	221 Move X8, [X8+2536]
	222 Move X19, X0
	223 Move X8, [X8]
	224 Move W9, [X8+224]
	225 Compare W9, 0
	226 JumpIfNotEqual {229}
	227 Move X0, X8
	228 Call 0x1C17DFC
	229 Move X0, X19
	230 Move X1, X31
	231 Call Convert.ToByte, X0
	232 Move W1, W0
	233 Subtract X0, X29, 24
	234 Move X2, X31
	235 Move [X29-24], X31
	236 Move [X29-16], X31
	237 Call PrimitiveValue..ctor, X0, X1
	238 Move X0, X20
	239 Move X1, X21
	240 Move X2, X22
	241 Call 0x3EB2AC0
	242 Move X8, [X19+56]
	243 Move X1, X20
	244 Move X0, [X8+8]
	245 Call 0x1C17E04
	246 Move X8, 0x1EC7000
	247 Move X8, [X8+2536]
	248 Move X19, X0
	249 Move X8, [X8]
	250 Move W9, [X8+224]
	251 Compare W9, 0
	252 JumpIfNotEqual {255}
	253 Move X0, X8
	254 Call 0x1C17DFC
	255 Move X0, X19
	256 Move X1, X31
	257 Call Convert.ToUInt32, X0
	258 Move W1, W0
	259 Subtract X0, X29, 24
	260 Move X2, X31
	261 Move [X29-24], X31
	262 Move [X29-16], X31
	263 Call PrimitiveValue..ctor, X0, X1
	264 Move X0, X20
	265 Move X1, X21
	266 Move X2, X22
	267 Call 0x3EB2AC0
	268 Move X8, [X19+56]
	269 Move X1, X20
	270 Move X0, [X8+8]
	271 Call 0x1C17E04
	272 Move X8, 0x1EC7000
	273 Move X8, [X8+2536]
	274 Move X19, X0
	275 Move X8, [X8]
	276 Move W9, [X8+224]
	277 Compare W9, 0
	278 JumpIfNotEqual {281}
	279 Move X0, X8
	280 Call 0x1C17DFC
	281 Move X0, X19
	282 Move X1, X31
	283 Call Convert.ToChar, X0
	284 Move W1, W0
	285 Subtract X0, X29, 24
	286 Move X2, X31
	287 Move [X29-24], X31
	288 Move [X29-16], X31
	289 Call PrimitiveValue..ctor, X0, X1
	290 Move X0, X20
	291 Move X1, X21
	292 Move X2, X22
	293 Call 0x3EB2AC0
	294 Move X8, [X19+56]
	295 Move X1, X20
	296 Move X0, [X8+8]
	297 Call 0x1C17E04
	298 Move X8, 0x1EC7000
	299 Move X8, [X8+2536]
	300 Move X19, X0
	301 Move X8, [X8]
	302 Move W9, [X8+224]
	303 Compare W9, 0
	304 JumpIfNotEqual {307}
	305 Move X0, X8
	306 Call 0x1C17DFC
	307 Move X0, X19
	308 Move X1, X31
	309 Call Convert.ToUInt16, X0
	310 Move W1, W0
	311 Subtract X0, X29, 24
	312 Move X2, X31
	313 Move [X29-24], X31
	314 Move [X29-16], X31
	315 Call PrimitiveValue..ctor, X0, X1
	316 Move X0, X20
	317 Move X1, X21
	318 Move X2, X22
	319 Call 0x3EB2AC0
	320 Move X8, [X19+56]
	321 Move X1, X20
	322 Move X0, [X8+8]
	323 Call 0x1C17E04
	324 Move X8, 0x1EC7000
	325 Move X8, [X8+2536]
	326 Move X19, X0
	327 Move X8, [X8]
	328 Move W9, [X8+224]
	329 Compare W9, 0
	330 JumpIfNotEqual {333}
	331 Move X0, X8
	332 Call 0x1C17DFC
	333 Move X0, X19
	334 Move X1, X31
	335 Call Convert.ToInt32, X0
	336 Move W1, W0
	337 Subtract X0, X29, 24
	338 Move X2, X31
	339 Move [X29-24], X31
	340 Move [X29-16], X31
	341 Call PrimitiveValue..ctor, X0, X1
	342 Move X0, X20
	343 Move X1, X21
	344 Move X2, X22
	345 Call 0x3EB2AC0
	346 Move X8, [X19+56]
	347 Move X1, X20
	348 Move X0, [X8+8]
	349 Call 0x1C17E04
	350 Move X8, 0x1EC7000
	351 Move X8, [X8+2536]
	352 Move X19, X0
	353 Move X8, [X8]
	354 Move W9, [X8+224]
	355 Compare W9, 0
	356 JumpIfNotEqual {359}
	357 Move X0, X8
	358 Call 0x1C17DFC
	359 Move X0, X19
	360 Move X1, X31
	361 Call Convert.ToInt64, X0
	362 Move X1, X0
	363 Subtract X0, X29, 24
	364 Move X2, X31
	365 Move [X29-24], X31
	366 Move [X29-16], X31
	367 Call PrimitiveValue..ctor, X0, X1
	368 Move X0, X20
	369 Move X1, X21
	370 Move X2, X22
	371 Call 0x3EB2AC0
	372 Move X8, [X19+56]
	373 Move X1, X20
	374 Move X0, [X8+8]
	375 Call 0x1C17E04
	376 Move X8, 0x1EC7000
	377 Move X8, [X8+2536]
	378 Move X19, X0
	379 Move X8, [X8]
	380 Move W9, [X8+224]
	381 Compare W9, 0
	382 JumpIfNotEqual {385}
	383 Move X0, X8
	384 Call 0x1C17DFC
	385 Move X0, X19
	386 Move X1, X31
	387 Call Convert.ToSingle, X0
	388 Subtract X0, X29, 24
	389 Move X1, X31
	390 Move [X29-24], X31
	391 Move [X29-16], X31
	392 Call PrimitiveValue..ctor, X0, V0
	393 Move X0, [X29-24]
	394 Move X1, [X29-16]
	395 Move X8, [X24+40]
	396 NotImplemented "Instruction LDUR not yet implemented."
	397 NotImplemented "Instruction CMP not yet implemented."
	398 Add X31, X29, 0
	399 Move X20, [X31+64]
	400 Move X19, [X31+72]
	401 Move X22, [X31+48]
	402 Move X21, [X31+56]
	403 Move X24, [X31+32]
	404 Move X23, [X31+40]
	405 Move X25, [X31+16]
	406 Move X29, [X31+80]
	407 Move X30, [X31+88]
	408 Return X0
	409 Call 0x1C17F20
	410 Move X0, X20
	411 Move X1, X21
	412 Move X2, X22
	413 Call 0x3EB2AC0
	414 Move X8, [X19+56]
	415 Move X1, X20
	416 Move X0, [X8+8]
	417 Call 0x1C17E04
	418 Move X8, [X19+56]
	419 Move X21, X0
	420 Move X0, 0x1EBE000
	421 Move X20, [X8]
	422 Move X0, [X0+1728]
	423 Call 0x1C17D08
	424 Call 0x19913D0
	425 Move X0, X20
	426 Move X1, X31
	427 Call Type.GetTypeFromHandle, X0
	428 Move X20, X0
	429 Call 0x19913C0
	430 Move X8, [X20]
	431 Move X0, X20
	432 Move X9, [X8+424]
	433 Move X1, [X8+432]
	434 NotImplemented "Instruction BLR not yet implemented."
	435 Move X20, X0
	436 Move X0, 0x1EE7000
	437 Move X0, [X0+688]
	438 Call 0x1C17D08
	439 Move X1, X21
	440 Move X2, X20
	441 Move X3, X31
	442 Call String.Format, X0, X1, X2
	443 Move X20, X0
	444 Move X0, 0x1EC6000
	445 Move X0, [X0+1400]
	446 Call 0x1C17D08
	447 Call 0x1C17F10
	448 Move X21, X0
	449 Move X0, 0x1EC8000
	450 Move X0, [X0+3784]
	451 Call 0x1C17D08
	452 Move X2, X0
	453 Move X0, X21
	454 Move X1, X20
	455 Move X3, X31
	456 Call ArgumentException..ctor, X0, X1, X2
	457 Move X0, X21
	458 Move X1, X19
	459 Call 0x1C17DEC
	460 Call 0x3EB2B20

Method: UnityEngine.InputSystem.Utilities.PrimitiveValue FromObject(System.Object value)

Disassembly:
	0x03766FE0 MOV X20, X2
	0x03766FE4 MOV X21, X1
	0x03766FE8 MOV X19, X0
	0x03766FEC TBNZ X8, 0x0, 0x3767004
	0x03766FF0 ADRP X0, 0x98D000
	0x03766FF4 LDR X0, [X0 + 0x8F0]
	0x03766FF8 BL 0x1C16CF4
	0x03766FFC MOVZ W8, 0x1
	0x03767000 STRB W8, [X22 + 0xE7D]
	0x03767004 CBZ X19, 0x37670F4
	0x03767008 MOVZ W1, 0x5C
	0x0376700C MOV X0, X19
	0x03767010 MOV X2, X31
	0x03767014 BL 0x322BD74
	0x03767018 TBZ X0, 0x0, 0x37670F4
	0x0376701C ADRP X8, 0x98C000
	0x03767020 LDR X8, [X8 + 0x8F0]
	0x03767024 LDR X0, [X8]
	0x03767028 BL 0x1C16F10
	0x0376702C MOV X1, X31
	0x03767030 MOV X22, X0
	0x03767034 BL 0x3231AC4
	0x03767038 LDR W8, [X19 + 0x10]
	0x0376703C CMP W8, 0x1
	0x03767040 B.LT 0x376710C
	0x03767044 MOV W23, W31
	0x03767048 MOV X0, X19
	0x0376704C MOV W1, W23
	0x03767050 MOV X2, X31
	0x03767054 BL 0x3222A1C
	0x03767058 AND W8, W0, 0xFFFF
	0x0376705C MOV W24, W0
	0x03767060 CMP W8, 0x5C
	0x03767064 B.NE 0x37670CC
	0x03767068 LDR W8, [X19 + 0x10]
	0x0376706C SUB W8, W8, 0x2
	0x03767070 CMP W23, W8
	0x03767074 B.GE 0x37670CC
	0x03767078 ADD W23, W23, 0x1
	0x0376707C MOV X0, X19
	0x03767080 MOV W1, W23
	0x03767084 MOV X2, X31
	0x03767088 BL 0x3222A1C
	0x0376708C CBZ X21, 0x3767130
	0x03767090 MOV W24, W0
	0x03767094 MOV X0, X21
	0x03767098 MOV W1, W24
	0x0376709C MOV X2, X31
	0x037670A0 BL 0x322BD98
	0x037670A4 ADDS W31, W0, 0x1
	0x037670A8 B.EQ 0x37670CC
	0x037670AC CBZ X20, 0x3767130
	0x037670B0 MOV W1, W0
	0x037670B4 MOV X0, X20
	0x037670B8 MOV X2, X31
	0x037670BC BL 0x3222A1C
	0x037670C0 CBZ X22, 0x3767130
	0x037670C4 MOV W24, W0
	0x037670C8 B 0x37670D0
	0x037670CC CBZ X22, 0x3767130
	0x037670D0 MOV X0, X22
	0x037670D4 MOV W1, W24
	0x037670D8 MOV X2, X31
	0x037670DC BL 0x3233D30
	0x037670E0 LDR W8, [X19 + 0x10]
	0x037670E4 ADD W23, W23, 0x1
	0x037670E8 CMP W23, W8
	0x037670EC B.LT 0x3767048
	0x037670F0 B 0x3767110
	0x037670F4 MOV X0, X19
	0x037670F8 LDP X20, X19, [X31 + 0x30]
	0x037670FC LDP X22, X21, [X31 + 0x20]
	0x03767100 LDP X24, X23, [X31 + 0x10]
	0x03767104 LDR X30, [X31], #0x40
	0x03767108 RET
	0x0376710C CBZ X22, 0x3767130
	0x03767110 LDR X8, [X22]
	0x03767114 MOV X0, X22
	0x03767118 LDP X20, X19, [X31 + 0x30]
	0x0376711C LDP X22, X21, [X31 + 0x20]
	0x03767120 LDP X2, X1, [X8 + 0x168]
	0x03767124 LDP X24, X23, [X31 + 0x10]
	0x03767128 LDR X30, [X31], #0x40
	0x0376712C BR X2
	0x03767130 BL 0x1C16F20
	0x03767134 CBZ X0, 0x3767150
	0x03767138 STR X30, [X31 - 0x10]!
	0x0376713C MOV X2, X31
	0x03767140 BL 0x322BD98
	0x03767144 ADDS W31, W0, 0x1
	0x03767148 CSET W0, NE
	0x0376714C LDR X30, [X31], #0x10
	0x03767150 RET
	0x03767154 CBZ X0, 0x3767170
	0x03767158 STR X30, [X31 - 0x10]!
	0x0376715C MOV X3, X31
	0x03767160 BL 0x322BD40
	0x03767164 ADDS W31, W0, 0x1
	0x03767168 CSET W0, NE
	0x0376716C LDR X30, [X31], #0x10
	0x03767170 RET
	0x03767174 STR X30, [X31 - 0x20]!
	0x03767178 STP X20, X19, [X31 + 0x10]
	0x0376717C ADRP X20, 0xC79000
	0x03767180 LDRB W8, [X20 + 0xE7E]
	0x03767184 MOV X19, X0
	0x03767188 TBNZ X8, 0x0, 0x3767200
	0x0376718C ADRP X0, 0x9D5000
	0x03767190 LDR X0, [X0 + 0xE88]
	0x03767194 BL 0x1C16CF4
	0x03767198 ADRP X0, 0x9DF000
	0x0376719C LDR X0, [X0 + 0x518]
	0x037671A0 BL 0x1C16CF4
	0x037671A4 ADRP X0, 0x9DF000
	0x037671A8 LDR X0, [X0 + 0x520]
	0x037671AC BL 0x1C16CF4
	0x037671B0 ADRP X0, 0x9DF000
	0x037671B4 LDR X0, [X0 + 0x528]
	0x037671B8 BL 0x1C16CF4
	0x037671BC ADRP X0, 0x9DF000
	0x037671C0 LDR X0, [X0 + 0x530]
	0x037671C4 BL 0x1C16CF4
	0x037671C8 ADRP X0, 0x9B5000
	0x037671CC LDR X0, [X0 + 0xCC0]
	0x037671D0 BL 0x1C16CF4
	0x037671D4 ADRP X0, 0x9DF000
	0x037671D8 LDR X0, [X0 + 0x538]
	0x037671DC BL 0x1C16CF4
	0x037671E0 ADRP X0, 0x9B4000
	0x037671E4 LDR X0, [X0 + 0x518]
	0x037671E8 BL 0x1C16CF4
	0x037671EC ADRP X0, 0x9DF000
	0x037671F0 LDR X0, [X0 + 0x540]
	0x037671F4 BL 0x1C16CF4
	0x037671F8 MOVZ W8, 0x1
	0x037671FC STRB W8, [X20 + 0xE7E]
	0x03767200 CBZ X19, 0x37672D0
	0x03767204 ADRP X8, 0x9D5000
	0x03767208 LDR X8, [X8 + 0xE88]
	0x0376720C MOV X0, X19
	0x03767210 MOV X2, X31
	0x03767214 LDR X1, [X8]
	0x03767218 BL 0x321BA08
	0x0376721C TBZ X0, 0x0, 0x376722C
	0x03767220 ADRP X8, 0x9DF000
	0x03767224 LDR X8, [X8 + 0x520]
	0x03767228 B 0x37672A0
	0x0376722C ADRP X8, 0x9DF000
	0x03767230 LDR X8, [X8 + 0x540]
	0x03767234 MOV X0, X19
	0x03767238 MOV X2, X31
	0x0376723C LDR X1, [X8]
	0x03767240 BL 0x321BA08
	0x03767244 TBZ X0, 0x0, 0x3767254
	0x03767248 ADRP X8, 0x9DF000
	0x0376724C LDR X8, [X8 + 0x518]
	0x03767250 B 0x37672A0
	0x03767254 ADRP X8, 0x9B4000
	0x03767258 LDR X8, [X8 + 0x518]
	0x0376725C MOV X0, X19
	0x03767260 MOV X2, X31
	0x03767264 LDR X1, [X8]
	0x03767268 BL 0x321BA08
	0x0376726C TBZ X0, 0x0, 0x376727C
	0x03767270 ADRP X8, 0x9DF000
	0x03767274 LDR X8, [X8 + 0x538]
	0x03767278 B 0x37672A0
	0x0376727C ADRP X8, 0x9DF000
	0x03767280 LDR X8, [X8 + 0x530]
	0x03767284 MOV X0, X19
	0x03767288 MOV X2, X31
	0x0376728C LDR X1, [X8]
	0x03767290 BL 0x321BA08
	0x03767294 TBZ X0, 0x0, 0x37672B0
	0x03767298 ADRP X8, 0x9DF000
	0x0376729C LDR X8, [X8 + 0x528]
	0x037672A0 LDR X0, [X8]
	0x037672A4 LDP X20, X19, [X31 + 0x10]
	0x037672A8 LDR X30, [X31], #0x20
	0x037672AC RET
	0x037672B0 ADRP X8, 0x9B5000
	0x037672B4 LDR X8, [X8 + 0xCC0]
	0x037672B8 MOV X0, X19
	0x037672BC LDP X20, X19, [X31 + 0x10]
	0x037672C0 MOV X2, X31
	0x037672C4 LDR X1, [X8]
	0x037672C8 LDR X30, [X31], #0x20
	0x037672CC B 0x321B938
	0x037672D0 ADRP X0, 0x991000
	0x037672D4 LDR X0, [X0 + 0x528]
	0x037672D8 BL 0x1C16D08
	0x037672DC BL 0x1C16F10
	0x037672E0 MOV X19, X0
	0x037672E4 ADRP X0, 0x98E000
	0x037672E8 LDR X0, [X0 + 0xC80]
	0x037672EC BL 0x1C16D08
	0x037672F0 MOV X1, X0
	0x037672F4 MOV X0, X19
	0x037672F8 MOV X2, X31
	0x037672FC BL 0x330E100
	0x03767300 ADRP X0, 0x9DF000
	0x03767304 LDR X0, [X0 + 0x548]
	0x03767308 BL 0x1C16D08
	0x0376730C MOV X1, X0
	0x03767310 MOV X0, X19
	0x03767314 BL 0x1C16DEC
	0x03767318 STR X30, [X31 - 0x20]!
	0x0376731C STP X20, X19, [X31 + 0x10]
	0x03767320 ADRP X20, 0xC79000
	0x03767324 LDRB W8, [X20 + 0xE7F]
	0x03767328 MOV X19, X0
	0x0376732C TBNZ X8, 0x0, 0x3767380
	0x03767330 ADRP X0, 0x98E000
	0x03767334 LDR X0, [X0 + 0xA60]
	0x03767338 BL 0x1C16CF4
	0x0376733C ADRP X0, 0x98C000
	0x03767340 LDR X0, [X0 + 0xA90]
	0x03767344 BL 0x1C16CF4
	0x03767348 ADRP X0, 0x9DF000
	0x0376734C LDR X0, [X0 + 0x550]
	0x03767350 BL 0x1C16CF4
	0x03767354 ADRP X0, 0x9DF000
	0x03767358 LDR X0, [X0 + 0x558]
	0x0376735C BL 0x1C16CF4
	0x03767360 ADRP X0, 0x9DF000
	0x03767364 LDR X0, [X0 + 0x560]
	0x03767368 BL 0x1C16CF4
	0x0376736C ADRP X0, 0x9DF000
	0x03767370 LDR X0, [X0 + 0x568]
	0x03767374 BL 0x1C16CF4
	0x03767378 MOVZ W8, 0x1
	0x0376737C STRB W8, [X20 + 0xE7F]
	0x03767380 MOVZ W8, 0x1
	0x03767384 MOVK W8, 0x40000000
	0x03767388 CMP X19, X8
	0x0376738C B.GE 0x37673C4
	0x03767390 CMP X19, 0x100000
	0x03767394 B.GT 0x37673FC
	0x03767398 CMP X19, 0x401
	0x0376739C B.GE 0x3767434
	0x037673A0 ADRP X8, 0x98E000
	0x037673A4 LDR X8, [X8 + 0xA60]
	0x037673A8 ADD X1, X31, 0x8
	0x037673AC STR X19, [X31 + 0x8]
	0x037673B0 LDR X0, [X8]
	0x037673B4 BL 0x1C16E04
	0x037673B8 ADRP X8, 0x9DF000
	0x037673BC LDR X8, [X8 + 0x550]
	0x037673C0 B 0x3767468
	0x037673C4 ADRP X10, 0x98C000
	0x037673C8 LDR X10, [X10 + 0xA90]
	0x037673CC UBFM X8, X19, 0x1E, 0x3F
	0x037673D0 AND X9, X19, 0x3FFFFFFF
	0x037673D4 SCVTF S0, X9
	0x037673D8 LDR X0, [X10]
	0x037673DC SCVTF S1, X8
	0x037673E0 FADD S0, S1, S0
	0x037673E4 ADD X1, X31, 0x8
	0x037673E8 STR S0, [X31 + 0x8]
	0x037673EC BL 0x1C16E04
	0x037673F0 ADRP X8, 0x9DF000
	0x037673F4 LDR X8, [X8 + 0x568]
	0x037673F8 B 0x3767468
	0x037673FC ADRP X10, 0x98C000
	0x03767400 LDR X10, [X10 + 0xA90]
	0x03767404 UBFM X8, X19, 0x14, 0x3F
	0x03767408 AND X9, X19, 0xFFFFF
	0x0376740C SCVTF S0, X9
	0x03767410 LDR X0, [X10]
	0x03767414 SCVTF S1, X8
	0x03767418 FADD S0, S0, S1
	0x0376741C ADD X1, X31, 0x8
	0x03767420 STR S0, [X31 + 0x8]
	0x03767424 BL 0x1C16E04
	0x03767428 ADRP X8, 0x9DF000
	0x0376742C LDR X8, [X8 + 0x560]
	0x03767430 B 0x3767468
	0x03767434 ADRP X10, 0x98C000
	0x03767438 LDR X10, [X10 + 0xA90]
	0x0376743C UBFM X8, X19, 0xA, 0x3F
	0x03767440 AND X9, X19, 0x3FF
	0x03767444 SCVTF S0, X9
	0x03767448 LDR X0, [X10]
	0x0376744C SCVTF S1, X8
	0x03767450 FADD S0, S0, S1
	0x03767454 ADD X1, X31, 0x8
	0x03767458 STR S0, [X31 + 0x8]
	0x0376745C BL 0x1C16E04
	0x03767460 ADRP X8, 0x9DF000
	0x03767464 LDR X8, [X8 + 0x558]
	0x03767468 LDR X8, [X8]
	0x0376746C MOV X1, X0
	0x03767470 MOV X2, X31
	0x03767474 MOV X0, X8
	0x03767478 BL 0x321EFD0
	0x0376747C LDP X20, X19, [X31 + 0x10]
	0x03767480 LDR X30, [X31], #0x20
	0x03767484 RET
	0x03767488 STR X30, [X31 - 0x30]!
	0x0376748C STP X22, X21, [X31 + 0x10]
	0x03767490 STP X20, X19, [X31 + 0x20]
	0x03767494 ADRP X22, 0xC79000
	0x03767498 LDRB W8, [X22 + 0xE80]
	0x0376749C MOV X20, X2
	0x037674A0 MOV X19, X1
	0x037674A4 MOV X21, X0
	0x037674A8 TBNZ X8, 0x0, 0x37674E4
	0x037674AC ADRP X0, 0x9DF000
	0x037674B0 LDR X0, [X0 + 0x570]
	0x037674B4 BL 0x1C16CF4
	0x037674B8 ADRP X0, 0x9DF000
	0x037674BC LDR X0, [X0 + 0x578]
	0x037674C0 BL 0x1C16CF4
	0x037674C4 ADRP X0, 0x9DF000
	0x037674C8 LDR X0, [X0 + 0x580]
	0x037674CC BL 0x1C16CF4
	0x037674D0 ADRP X0, 0x9DF000
	0x037674D4 LDR X0, [X0 + 0x588]
	0x037674D8 BL 0x1C16CF4
	0x037674DC MOVZ W8, 0x1
	0x037674E0 STRB W8, [X22 + 0xE80]
	0x037674E4 STR X31, [X31 + 0x8]
	0x037674E8 CBZ X21, 0x3767604
	0x037674EC MOV X0, X21
	0x037674F0 MOV X1, X31
	0x037674F4 BL 0x322B8DC
	0x037674F8 CBZ X0, 0x3767604
	0x037674FC ADRP X8, 0x9DF000
	0x03767500 LDR X8, [X8 + 0x580]
	0x03767504 MOVZ W2, 0x3
	0x03767508 MOV X3, X31
	0x0376750C MOV X21, X0
	0x03767510 LDR X1, [X8]
	0x03767514 BL 0x3226590
	0x03767518 TBZ X0, 0x0, 0x3767528
	0x0376751C LDR W8, [X21 + 0x10]
	0x03767520 MOVZ W20, 0x100000
	0x03767524 B 0x376757C
	0x03767528 ADRP X8, 0x9DF000
	0x0376752C LDR X8, [X8 + 0x588]
	0x03767530 MOVZ W2, 0x3
	0x03767534 MOV X0, X21
	0x03767538 MOV X3, X31
	0x0376753C LDR X1, [X8]
	0x03767540 BL 0x3226590
	0x03767544 TBZ X0, 0x0, 0x3767554
	0x03767548 LDR W8, [X21 + 0x10]
	0x0376754C MOVZ W20, 0x40000000
	0x03767550 B 0x376757C
	0x03767554 ADRP X8, 0x9DF000
	0x03767558 LDR X8, [X8 + 0x570]
	0x0376755C MOVZ W2, 0x3
	0x03767560 MOV X0, X21
	0x03767564 MOV X3, X31
	0x03767568 LDR X1, [X8]
	0x0376756C BL 0x3226590
	0x03767570 TBZ X0, 0x0, 0x37675C8
	0x03767574 LDR W8, [X21 + 0x10]
	0x03767578 MOVZ W20, 0x400
	0x0376757C SUB W2, W8, 0x2
	0x03767580 MOV X0, X21
	0x03767584 MOV W1, W31
	0x03767588 MOV X3, X31
	0x0376758C BL 0x3228DE4
	0x03767590 MOV X21, X0
	0x03767594 ADD X1, X31, 0x8
	0x03767598 MOV X0, X21
	0x0376759C MOV X2, X31
	0x037675A0 BL 0x337D588
	0x037675A4 LDR X8, [X31 + 0x8]
	0x037675A8 ANDS W0, W0, 0x1
	0x037675AC LDP X22, X21, [X31 + 0x10]
	0x037675B0 MUL X8, X8, X20
	0x037675B4 CSEL X8, X8, X31, NE
	0x037675B8 STR X8, [X19]
	0x037675BC LDP X20, X19, [X31 + 0x20]
	0x037675C0 LDR X30, [X31], #0x30
	0x037675C4 RET
	0x037675C8 ADRP X22, 0x9DF000
	0x037675CC LDR X22, [X22 + 0x578]
	0x037675D0 MOVZ W2, 0x3

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X30
	003 Move [X31+32], X28
	004 Move [X31+40], X27
	005 Move [X31+48], X26
	006 Move [X31+56], X25
	007 Move [X31+64], X24
	008 Move [X31+72], X23
	009 Move [X31+80], X22
	010 Move [X31+88], X21
	011 Move [X31+96], X20
	012 Move [X31+104], X19
	013 Move X20, 0xC7B000
	014 Move W8, [X20+3705]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {67}
	020 Move X0, 0x98D000
	021 Move X0, [X0+2904]
	022 Call 0x1C17CF4
	023 Move X0, 0x98E000
	024 Move X0, [X0+2520]
	025 Call 0x1C17CF4
	026 Move X0, 0x98F000
	027 Move X0, [X0+368]
	028 Call 0x1C17CF4
	029 Move X0, 0x990000
	030 Move X0, [X0+2424]
	031 Call 0x1C17CF4
	032 Move X0, 0x98D000
	033 Move X0, [X0+3576]
	034 Call 0x1C17CF4
	035 Move X0, 0x991000
	036 Move X0, [X0+1576]
	037 Call 0x1C17CF4
	038 Move X0, 0x98D000
	039 Move X0, [X0+1880]
	040 Call 0x1C17CF4
	041 Move X0, 0x98F000
	042 Move X0, [X0+2656]
	043 Call 0x1C17CF4
	044 Move X0, 0x9B6000
	045 Move X0, [X0+1712]
	046 Call 0x1C17CF4
	047 Move X0, 0x98D000
	048 Move X0, [X0+2704]
	049 Call 0x1C17CF4
	050 Move X0, 0x98F000
	051 Move X0, [X0+632]
	052 Call 0x1C17CF4
	053 Move X0, 0x98D000
	054 Move X0, [X0+1728]
	055 Call 0x1C17CF4
	056 Move X0, 0x992000
	057 Move X0, [X0+1624]
	058 Call 0x1C17CF4
	059 Move X0, 0x995000
	060 Move X0, [X0+1824]
	061 Call 0x1C17CF4
	062 Move X0, 0x98E000
	063 Move X0, [X0+1880]
	064 Call 0x1C17CF4
	065 Move W8, 1
	066 Move [X20+3705], W8
	067 Compare X19, 0
	068 JumpIfEqual {173}
	069 Move X8, 0x98F000
	070 Move X8, [X8+632]
	071 Move X9, [X8]
	072 Move X8, [X19]
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move X9, 0x98D000
	075 Move X9, [X9+2904]
	076 Move X9, [X9]
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Move X9, 0x98F000
	079 Move X9, [X9+368]
	080 Move X9, [X9]
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Move X21, 0x98E000
	083 Move X21, [X21+2520]
	084 Move X9, [X21]
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move X22, 0x9B6000
	087 Move X22, [X22+1712]
	088 Move X9, [X22]
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Move X23, 0x991000
	091 Move X23, [X23+1576]
	092 Move X9, [X23]
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Move X24, 0x992000
	095 Move X24, [X24+1624]
	096 Move X9, [X24]
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Move X25, 0x98D000
	099 Move X25, [X25+1880]
	100 Move X9, [X25]
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Move X26, 0x995000
	103 Move X26, [X26+1824]
	104 Move X9, [X26]
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Move X27, 0x98F000
	107 Move X27, [X27+2656]
	108 Move X9, [X27]
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Move X28, 0x98E000
	111 Move X28, [X28+1880]
	112 Move X9, [X28]
	113 NotImplemented "Instruction CMP not yet implemented."
	114 Move X9, 0x98D000
	115 Move X9, [X9+2704]
	116 Move X9, [X9]
	117 NotImplemented "Instruction CMP not yet implemented."
	118 Move X9, 0x990000
	119 Move X9, [X9+2424]
	120 Move X9, [X9]
	121 NotImplemented "Instruction CMP not yet implemented."
	122 Move X9, 0x98D000
	123 Move X9, [X9+3576]
	124 Move W11, [X8+304]
	125 Move X9, [X9]
	126 Move W10, [X9+304]
	127 NotImplemented "Instruction CMP not yet implemented."
	128 Move X8, [X8+200]
	129 Add X8, X8, X10
	130 NotImplemented "Instruction LDUR not yet implemented."
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Move X0, X19
	133 Move X1, X31
	134 Call "il2cpp_vm_object_is_inst", X0
	135 Compare X0, 0
	136 JumpIfEqual {373}
	137 Move X8, [X0]
	138 Move X9, [X8+2184]
	139 Move X1, [X8+2192]
	140 NotImplemented "Instruction BLR not yet implemented."
	141 Move X8, 0x98D000
	142 Move X8, [X8+1728]
	143 Move X20, X0
	144 Move X8, [X8]
	145 Move W9, [X8+224]
	146 Compare W9, 0
	147 JumpIfNotEqual {150}
	148 Move X0, X8
	149 Call 0x1C17DFC
	150 Move X0, X20
	151 Move X1, X31
	152 Call Type.GetTypeCode, X0
	153 Subtract W8, W0, 5
	154 NotImplemented "Instruction CMP not yet implemented."
	155 Move X9, -45936640
	156 Add X9, X9, 2283
	157 NotImplemented "Instruction ADR not yet implemented."
	158 Move W11, [X9]
	159 Add X10, X10, X11
	160 CallNoReturn X10
	161 Move [X31], X31
	162 Move [X31+8], X31
	163 Move X8, [X19]
	164 Move X1, [X22]
	165 Move X8, [X8+64]
	166 Move X9, [X1+64]
	167 NotImplemented "Instruction CMP not yet implemented."
	168 Move X0, X19
	169 Call 0x1C17E08
	170 Move W8, [X0]
	171 Move [X31+5], X31
	172 Move [X31+12], W31
	173 Move [X31], X31
	174 Move [X31+8], X31
	175 Move X0, X19
	176 Call PrimitiveValue.FromString, X0
	177 Move [X31], X0
	178 Move [X31+8], X1
	179 Move X0, X19
	180 Call 0x1C17E08
	181 Move W8, [X0]
	182 Move [X31], X31
	183 Move [X31+8], X31
	184 Move W9, 3
	185 Move X0, X19
	186 Call 0x1C17E08
	187 NotImplemented "Instruction LDRH not yet implemented."
	188 Move [X31], X31
	189 Move [X31+8], X31
	190 Move W9, 4
	191 Move [X31], W9
	192 NotImplemented "Instruction STRH not yet implemented."
	193 Move X0, X19
	194 Call 0x1C17E08
	195 Move W8, [X0]
	196 Move [X31], X31
	197 Move [X31+8], X31
	198 Move W9, 6
	199 Move X0, X19
	200 Call 0x1C17E08
	201 Move W8, [X0]
	202 Move [X31], X31
	203 Move [X31+8], X31
	204 Move W9, 5
	205 Move [X31], W9
	206 Move [X31+4], W8
	207 Move X0, [X31]
	208 Move X1, [X31+8]
	209 Move X20, [X31+96]
	210 Move X19, [X31+104]
	211 Move X22, [X31+80]
	212 Move X21, [X31+88]
	213 Move X24, [X31+64]
	214 Move X23, [X31+72]
	215 Move X26, [X31+48]
	216 Move X25, [X31+56]
	217 Move X28, [X31+32]
	218 Move X27, [X31+40]
	219 Move X30, [X31+16]
	220 Add X31, X31, 112
	221 Return X0
	222 Move X0, X19
	223 Call 0x1C17E08
	224 NotImplemented "Instruction LDRH not yet implemented."
	225 Move [X31], X31
	226 Move [X31+8], X31
	227 Move W9, 7
	228 Move X0, X19
	229 Call 0x1C17E08
	230 NotImplemented "Instruction LDRH not yet implemented."
	231 Move [X31], X31
	232 Move [X31+8], X31
	233 Move W9, 8
	234 Move X0, X19
	235 Call 0x1C17E08
	236 Move X8, [X0]
	237 Move [X31], X31
	238 Move [X31+8], X31
	239 Move W9, 11
	240 Move X0, X19
	241 Call 0x1C17E08
	242 Move X8, [X0]
	243 Move [X31], X31
	244 Move [X31+8], X31
	245 Move W9, 12
	246 Move [X31], W9
	247 Move [X31+4], X8
	248 Move X0, X19
	249 Call 0x1C17E08
	250 Move V0, [X0]
	251 Move W8, 13
	252 Move [X31+8], X31
	253 Move [X31], W8
	254 Move [X31+4], S0
	255 Move X0, X19
	256 Call 0x1C17E08
	257 Move V0, [X0]
	258 Move W8, 14
	259 Move [X31], X31
	260 Move [X31+8], X31
	261 Move [X31], W8
	262 Move [X31+4], D0
	263 Move [X31], X31
	264 Move [X31+8], X31
	265 Move X8, [X19]
	266 Move X1, [X23]
	267 Move X8, [X8+64]
	268 Move X9, [X1+64]
	269 NotImplemented "Instruction CMP not yet implemented."
	270 Move X0, X19
	271 Call 0x1C17E08
	272 NotImplemented "Instruction LDRH not yet implemented."
	273 Move [X31+6], X31
	274 NotImplemented "Instruction STRH not yet implemented."
	275 Move [X31], X31
	276 Move [X31+8], X31
	277 Move X8, [X19]
	278 Move X1, [X24]
	279 Move X8, [X8+64]
	280 Move X9, [X1+64]
	281 NotImplemented "Instruction CMP not yet implemented."
	282 Move X0, X19
	283 Call 0x1C17E08
	284 NotImplemented "Instruction LDRH not yet implemented."
	285 Move [X31+6], X31
	286 NotImplemented "Instruction STRH not yet implemented."
	287 Move [X31], X31
	288 Move [X31+8], X31
	289 Move X8, [X19]
	290 Move X1, [X25]
	291 Move X8, [X8+64]
	292 Move X9, [X1+64]
	293 NotImplemented "Instruction CMP not yet implemented."
	294 Move X0, X19
	295 Call 0x1C17E08
	296 Move W8, [X0]
	297 Move W9, 9
	298 Move [X31+8], X31
	299 Move [X31], X31
	300 Move [X31+8], X31
	301 Move X8, [X19]
	302 Move X1, [X21]
	303 Move X8, [X8+64]
	304 Move X9, [X1+64]
	305 NotImplemented "Instruction CMP not yet implemented."
	306 Move X0, X19
	307 Call 0x1C17E08
	308 Move W8, [X0]
	309 Move [X31+5], X31
	310 Move [X31+12], W31
	311 Move [X31], X31
	312 Move [X31+8], X31
	313 Move X8, [X19]
	314 Move X1, [X26]
	315 Move X8, [X8+64]
	316 Move X9, [X1+64]
	317 NotImplemented "Instruction CMP not yet implemented."
	318 Move X0, X19
	319 Call 0x1C17E08
	320 Move W8, [X0]
	321 Move [X31+8], X31
	322 Move W9, 10
	323 Move [X31], W9
	324 Move [X31+4], W8
	325 Move [X31], X31
	326 Move [X31+8], X31
	327 Move X8, [X19]
	328 Move X1, [X27]
	329 Move X8, [X8+64]
	330 Move X9, [X1+64]
	331 NotImplemented "Instruction CMP not yet implemented."
	332 Move X0, X19
	333 Call 0x1C17E08
	334 Move X8, [X0]
	335 Move [X31+12], W31
	336 Move [X31], X31
	337 Move [X31+8], X31
	338 Move X8, [X19]
	339 Move X1, [X28]
	340 Move X8, [X8+64]
	341 Move X9, [X1+64]
	342 NotImplemented "Instruction CMP not yet implemented."
	343 Move X0, X19
	344 Call 0x1C17E08
	345 Move X8, [X0]
	346 Move [X31+12], W31
	347 Move X0, 0x9E0000
	348 Move X0, [X0+1240]
	349 Call 0x1C17D08
	350 Move X1, X19
	351 Move X2, X31
	352 Call String.Format, X0, X1
	353 Move X19, X0
	354 Move X0, 0x995000
	355 Move X0, [X0+1400]
	356 Call 0x1C17D08
	357 Call 0x1C17F10
	358 Move X20, X0
	359 Move X0, 0x997000
	360 Move X0, [X0+3784]
	361 Call 0x1C17D08
	362 Move X2, X0
	363 Move X0, X20
	364 Move X1, X19
	365 Move X3, X31
	366 Call ArgumentException..ctor, X0, X1, X2
	367 Move X0, 0x9E0000
	368 Move X0, [X0+1248]
	369 Call 0x1C17D08
	370 Move X1, X0
	371 Move X0, X20
	372 Call 0x1C17DEC
	373 Call 0x1C17F20
	374 Move X0, X19
	375 Call 0x1C181E0

Method: UnityEngine.InputSystem.Utilities.PrimitiveValue op_Implicit(System.Boolean value)

Disassembly:
	0x03765438 ADRP X22, 0xC7B000
	0x0376543C LDRB W8, [X22 + 0xE73]
	0x03765440 MOV X21, X2
	0x03765444 MOV X20, X1
	0x03765448 MOV X19, X0
	0x0376544C STR X1, [X31]
	0x03765450 TBNZ X8, 0x0, 0x3765474

ISIL:
	001 Move X9, 3
	002 And W31, W0, 1
	003 Move W8, 3
	004 NotImplemented "Instruction MOVK not yet implemented."
	005 NotImplemented "Instruction CSEL not yet implemented."
	006 Move X1, X31
	007 Return X0

Method: UnityEngine.InputSystem.Utilities.PrimitiveValue op_Implicit(System.Char value)

Disassembly:
	0x03766AB4 MOV X1, X31
	0x03766AB8 STP X31, X31, [X31 + 0x8]
	0x03766ABC BL 0x33D66F0
	0x03766AC0 LDP X0, X1, [X31 + 0x8]
	0x03766AC4 LDR X8, [X19 + 0x28]

ISIL:
	001 And W8, W0, 0xFFFF
	002 Move W0, 4
	003 NotImplemented "Instruction BFM not yet implemented."
	004 Move X1, X31
	005 Return X0

Method: UnityEngine.InputSystem.Utilities.PrimitiveValue op_Implicit(System.Byte value)

Disassembly:
	0x03766AD8 ADD X31, X31, 0x30
	0x03766ADC RET
	0x03766AE0 BL 0x3EB1B20
	0x03766AE4 B 0x3766604
	0x03766AE8 STP X30, X19, [X31 - 0x10]!

ISIL:
	001 And W8, W0, 255
	002 Move W0, 6
	003 NotImplemented "Instruction BFM not yet implemented."
	004 Move X1, X31
	005 Return X0

Method: UnityEngine.InputSystem.Utilities.PrimitiveValue op_Implicit(System.SByte value)

Disassembly:
	0x03766AFC MOV X1, X31
	0x03766B00 MOV X19, X0
	0x03766B04 BL 0x3380310
	0x03766B08 ADRP X0, 0x9E0000
	0x03766B0C LDR X0, [X0 + 0x4F8]

ISIL:
	001 And W8, W0, 255
	002 Move W0, 5
	003 NotImplemented "Instruction BFM not yet implemented."
	004 Move X1, X31
	005 Return X0

Method: UnityEngine.InputSystem.Utilities.PrimitiveValue op_Implicit(System.Int16 value)

Disassembly:
	0x03766B20 STR X30, [X31 - 0x10]!
	0x03766B24 BL 0x3765C10
	0x03766B28 LDR X30, [X31], #0x10
	0x03766B2C RET
	0x03766B30 STR X30, [X31 - 0x10]!

ISIL:
	001 And W8, W0, 0xFFFF
	002 Move W0, 7
	003 NotImplemented "Instruction BFM not yet implemented."
	004 Move X1, X31
	005 Return X0

Method: UnityEngine.InputSystem.Utilities.PrimitiveValue op_Implicit(System.UInt16 value)

Disassembly:
	0x03767B40 TBNZ X0, 0x0, 0x3767BF8
	0x03767B44 MOV X0, X21
	0x03767B48 MOV X1, X31
	0x03767B4C BL 0x32277A8
	0x03767B50 TBZ X0, 0x0, 0x3767B5C

ISIL:
	001 And W8, W0, 0xFFFF
	002 Move W0, 8
	003 NotImplemented "Instruction BFM not yet implemented."
	004 Move X1, X31
	005 Return X0

Method: UnityEngine.InputSystem.Utilities.PrimitiveValue op_Implicit(System.Int32 value)

Disassembly:
	0x03766B44 MOVZ W0, 0x8
	0x03766B48 BFM X0, X8, 0x20, 0xF
	0x03766B4C MOV X1, X31
	0x03766B50 RET
	0x03766B54 MOVZ W8, 0xA

ISIL:
	001 Move W8, 9
	002 NotImplemented "Instruction BFM not yet implemented."
	003 Move X0, X8
	004 Move X1, X31
	005 Return X0

Method: UnityEngine.InputSystem.Utilities.PrimitiveValue op_Implicit(System.UInt32 value)

Disassembly:
	0x03767B54 MOV W23, W31
	0x03767B58 B 0x3767B6C
	0x03767B5C CBZ X21, 0x3767C40
	0x03767B60 LDR W23, [X21 + 0x10]
	0x03767B64 CMP W23, 0x10000

ISIL:
	001 Move W8, 10
	002 NotImplemented "Instruction BFM not yet implemented."
	003 Move X0, X8
	004 Move X1, X31
	005 Return X0

Method: UnityEngine.InputSystem.Utilities.PrimitiveValue op_Implicit(System.Int64 value)

Disassembly:
	0x03766BF8 RET
	0x03766BFC MOVZ W8, 0xA
	0x03766C00 BFM X8, X0, 0x20, 0x1F
	0x03766C04 MOV X0, X8
	0x03766C08 MOV X1, X31
	0x03766C0C RET

ISIL:
	001 Move [X31-16], X31
	002 Move [X31-8], X31
	003 Move W8, 11
	004 Move [X31+4], X0
	005 Move [X31], W8
	006 Move X0, [X31+16]
	007 Move X1, [X31+24]
	008 Return X0

Method: UnityEngine.InputSystem.Utilities.PrimitiveValue op_Implicit(System.UInt64 value)

Disassembly:
	0x03766CA4 ADRP X0, 0x9E0000
	0x03766CA8 LDR X0, [X0 + 0x508]
	0x03766CAC BL 0x1C16CF4
	0x03766CB0 ADRP X0, 0x9B7000
	0x03766CB4 LDR X0, [X0 + 0x250]
	0x03766CB8 BL 0x1C16CF4

ISIL:
	001 Move [X31-16], X31
	002 Move [X31-8], X31
	003 Move W8, 12
	004 Move [X31+4], X0
	005 Move [X31], W8
	006 Move X0, [X31+16]
	007 Move X1, [X31+24]
	008 Return X0

Method: UnityEngine.InputSystem.Utilities.PrimitiveValue op_Implicit(System.Single value)

Disassembly:
	0x037599EC CBZ X9, 0x3759AFC
	0x037599F0 LDR V10, [X9 + 0x12C]
	0x037599F4 FCMP S10, 0x0
	0x037599F8 B.GT 0x3759A08
	0x037599FC LDR X9, [X8]

ISIL:
	001 Move W8, S0
	002 Move W0, 13
	003 NotImplemented "Instruction BFM not yet implemented."
	004 Move X1, X31
	005 Return X0

Method: UnityEngine.InputSystem.Utilities.PrimitiveValue op_Implicit(System.Double value)

Disassembly:
	0x03766D64 SCVTF S0, W11
	0x03766D68 SXTW X9, W9
	0x03766D6C MOVZ W10, 0x7F800000
	0x03766D70 MOVZ W11, 0x80000000
	0x03766D74 MUL W13, W9, W9
	0x03766D78 SCVTF S3, W13

ISIL:
	001 Move [X31-16], X31
	002 Move [X31-8], X31
	003 Move W8, 14
	004 Move [X31+4], D0
	005 Move [X31], W8
	006 Move X0, [X31+16]
	007 Move X1, [X31+24]
	008 Return X0

Method: UnityEngine.InputSystem.Utilities.PrimitiveValue FromBoolean(System.Boolean value)

Disassembly:
	0x03767B68 B.GE 0x3767C44
	0x03767B6C LDR W8, [X20]
	0x03767B70 UBFM W9, W23, 0x1F, 0x1E
	0x03767B74 ADD X8, X8, W9, SXTW
	0x03767B78 ADD X24, X8, 0x4
	0x03767B7C CMP X24, W19, SXTW
	0x03767B80 B.GT 0x3767BD4

ISIL:
	001 Move X9, 3
	002 And W31, W0, 1
	003 Move W8, 3
	004 NotImplemented "Instruction MOVK not yet implemented."
	005 NotImplemented "Instruction CSEL not yet implemented."
	006 Move X1, X31
	007 Return X0

Method: UnityEngine.InputSystem.Utilities.PrimitiveValue FromChar(System.Char value)

Disassembly:
	0x03767B84 MOV X0, X22
	0x03767B88 MOV X1, X31
	0x03767B8C BL 0x33C6948
	0x03767B90 LDRSW X8, [X20]
	0x03767B94 CMP W23, 0x1

ISIL:
	001 And W8, W0, 0xFFFF
	002 Move W0, 4
	003 NotImplemented "Instruction BFM not yet implemented."
	004 Move X1, X31
	005 Return X0

Method: UnityEngine.InputSystem.Utilities.PrimitiveValue FromByte(System.Byte value)

Disassembly:
	0x03767B98 STRH W23, [X8, X0, LSL]
	0x03767B9C B.LT 0x3767BD0
	0x03767BA0 CBZ X21, 0x3767C40
	0x03767BA4 ADD X8, X0, X8
	0x03767BA8 MOV W22, W31

ISIL:
	001 And W8, W0, 255
	002 Move W0, 6
	003 NotImplemented "Instruction BFM not yet implemented."
	004 Move X1, X31
	005 Return X0

Method: UnityEngine.InputSystem.Utilities.PrimitiveValue FromSByte(System.SByte value)

Disassembly:
	0x03767BAC ADD X25, X8, 0x2
	0x03767BB0 MOV X0, X21
	0x03767BB4 MOV W1, W22
	0x03767BB8 MOV X2, X31
	0x03767BBC BL 0x3222A1C

ISIL:
	001 And W8, W0, 255
	002 Move W0, 5
	003 NotImplemented "Instruction BFM not yet implemented."
	004 Move X1, X31
	005 Return X0

Method: UnityEngine.InputSystem.Utilities.PrimitiveValue FromInt16(System.Int16 value)

Disassembly:
	0x03767BC0 ADD W22, W22, 0x1
	0x03767BC4 CMP W23, W22
	0x03767BC8 STRH W0, [X25], #0x2
	0x03767BCC B.NE 0x3767BB0
	0x03767BD0 STR W24, [X20]

ISIL:
	001 And W8, W0, 0xFFFF
	002 Move W0, 7
	003 NotImplemented "Instruction BFM not yet implemented."
	004 Move X1, X31
	005 Return X0

Method: UnityEngine.InputSystem.Utilities.PrimitiveValue FromUInt16(System.UInt16 value)

Disassembly:
	0x03767BD4 SXTW X8, W19
	0x03767BD8 CMP X24, X8
	0x03767BDC LDP X20, X19, [X31 + 0x40]
	0x03767BE0 LDP X22, X21, [X31 + 0x30]
	0x03767BE4 LDP X24, X23, [X31 + 0x20]

ISIL:
	001 And W8, W0, 0xFFFF
	002 Move W0, 8
	003 NotImplemented "Instruction BFM not yet implemented."
	004 Move X1, X31
	005 Return X0

Method: UnityEngine.InputSystem.Utilities.PrimitiveValue FromInt32(System.Int32 value)

Disassembly:
	0x03767BE8 LDP X30, X25, [X31 + 0x10]
	0x03767BEC CSET W0, LE
	0x03767BF0 ADD X31, X31, 0x50
	0x03767BF4 RET
	0x03767BF8 ADRP X0, 0x991000

ISIL:
	001 Move W8, 9
	002 NotImplemented "Instruction BFM not yet implemented."
	003 Move X0, X8
	004 Move X1, X31
	005 Return X0

Method: UnityEngine.InputSystem.Utilities.PrimitiveValue FromUInt32(System.UInt32 value)

Disassembly:
	0x03767BFC LDR X0, [X0 + 0x528]
	0x03767C00 BL 0x1C16D08
	0x03767C04 BL 0x1C16F10
	0x03767C08 MOV X19, X0
	0x03767C0C ADRP X0, 0x9B7000

ISIL:
	001 Move W8, 10
	002 NotImplemented "Instruction BFM not yet implemented."
	003 Move X0, X8
	004 Move X1, X31
	005 Return X0

Method: UnityEngine.InputSystem.Utilities.PrimitiveValue FromInt64(System.Int64 value)

Disassembly:
	0x03767C10 LDR X0, [X0 + 0xF48]
	0x03767C14 BL 0x1C16D08
	0x03767C18 MOV X1, X0
	0x03767C1C MOV X0, X19
	0x03767C20 MOV X2, X31
	0x03767C24 BL 0x330E100

ISIL:
	001 Move [X31-16], X31
	002 Move [X31-8], X31
	003 Move W8, 11
	004 Move [X31+4], X0
	005 Move [X31], W8
	006 Move X0, [X31+16]
	007 Move X1, [X31+24]
	008 Return X0

Method: UnityEngine.InputSystem.Utilities.PrimitiveValue FromUInt64(System.UInt64 value)

Disassembly:
	0x03767C28 ADRP X0, 0x9DF000
	0x03767C2C LDR X0, [X0 + 0x5B8]
	0x03767C30 BL 0x1C16D08
	0x03767C34 MOV X1, X0
	0x03767C38 MOV X0, X19
	0x03767C3C BL 0x1C16DEC

ISIL:
	001 Move [X31-16], X31
	002 Move [X31-8], X31
	003 Move W8, 12
	004 Move [X31+4], X0
	005 Move [X31], W8
	006 Move X0, [X31+16]
	007 Move X1, [X31+24]
	008 Return X0

Method: UnityEngine.InputSystem.Utilities.PrimitiveValue FromSingle(System.Single value)

Disassembly:
	0x03767C40 BL 0x1C16F20
	0x03767C44 MOVZ W8, 0xFFFF
	0x03767C48 STRH W8, [X31 + 0xC]
	0x03767C4C ADRP X0, 0x991000
	0x03767C50 LDR X0, [X0 + 0x658]

ISIL:
	001 Move W8, S0
	002 Move W0, 13
	003 NotImplemented "Instruction BFM not yet implemented."
	004 Move X1, X31
	005 Return X0

Method: UnityEngine.InputSystem.Utilities.PrimitiveValue FromDouble(System.Double value)

Disassembly:
	0x03767C54 BL 0x1C16D08
	0x03767C58 ADD X1, X31, 0xC
	0x03767C5C BL 0x1C16E04
	0x03767C60 MOV X19, X0
	0x03767C64 ADRP X0, 0x9DF000
	0x03767C68 LDR X0, [X0 + 0x5C0]

ISIL:
	001 Move [X31-16], X31
	002 Move [X31-8], X31
	003 Move W8, 14
	004 Move [X31+4], D0
	005 Move [X31], W8
	006 Move X0, [X31+16]
	007 Move X1, [X31+24]
	008 Return X0

