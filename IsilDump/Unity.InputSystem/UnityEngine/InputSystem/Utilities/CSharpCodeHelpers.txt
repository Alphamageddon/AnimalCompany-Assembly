Type: UnityEngine.InputSystem.Utilities.CSharpCodeHelpers

Method: System.Boolean IsProperIdentifier(System.String name)

Disassembly:
	0x0375FA7C CBNZ W8, 0x375FA84
	0x0375FA80 BL 0x1C16DFC
	0x0375FA84 MOV X0, X31
	0x0375FA88 BL 0x3338524
	0x0375FA8C CBZ X20, 0x375FAC8
	0x0375FA90 MOV X1, X0
	0x0375FA94 MOV X0, X20
	0x0375FA98 MOV X2, X31
	0x0375FA9C BL 0x322B660
	0x0375FAA0 MOVZ W2, 0x3
	0x0375FAA4 MOV X1, X19
	0x0375FAA8 MOV X3, X31
	0x0375FAAC BL 0x322590C
	0x0375FAB0 LDP X20, X19, [X31 + 0x20]
	0x0375FAB4 LDP X22, X21, [X31 + 0x10]
	0x0375FAB8 CMP W0, 0x0
	0x0375FABC CSET W0, EQ
	0x0375FAC0 LDR X30, [X31], #0x30
	0x0375FAC4 RET
	0x0375FAC8 BL 0x1C16F20
	0x0375FACC STR X30, [X31 - 0x30]!
	0x0375FAD0 STP X22, X21, [X31 + 0x10]
	0x0375FAD4 STP X20, X19, [X31 + 0x20]
	0x0375FAD8 ADRP X21, 0xC81000
	0x0375FADC ADRP X22, 0x996000
	0x0375FAE0 LDRB W8, [X21 + 0xE4D]
	0x0375FAE4 LDR X22, [X22 + 0xC48]
	0x0375FAE8 MOV X19, X2
	0x0375FAEC MOV X20, X0
	0x0375FAF0 TBNZ X8, 0x0, 0x375FB08
	0x0375FAF4 ADRP X0, 0x996000
	0x0375FAF8 LDR X0, [X0 + 0xC48]
	0x0375FAFC BL 0x1C16CF4
	0x0375FB00 MOVZ W8, 0x1
	0x0375FB04 STRB W8, [X21 + 0xE4D]
	0x0375FB08 LDR X0, [X22]
	0x0375FB0C LDR W8, [X0 + 0xE0]
	0x0375FB10 CBNZ W8, 0x375FB18
	0x0375FB14 BL 0x1C16DFC
	0x0375FB18 MOV X0, X31
	0x0375FB1C BL 0x3338524
	0x0375FB20 CBZ X20, 0x375FB5C
	0x0375FB24 MOV X1, X0
	0x0375FB28 MOV X0, X20
	0x0375FB2C MOV X2, X31
	0x0375FB30 BL 0x322B660
	0x0375FB34 MOVZ W2, 0x3
	0x0375FB38 MOV X1, X19
	0x0375FB3C MOV X3, X31
	0x0375FB40 BL 0x322590C
	0x0375FB44 LDP X20, X19, [X31 + 0x20]
	0x0375FB48 LDP X22, X21, [X31 + 0x10]
	0x0375FB4C CMP W0, 0x0
	0x0375FB50 CSET W0, NE
	0x0375FB54 LDR X30, [X31], #0x30
	0x0375FB58 RET
	0x0375FB5C BL 0x1C16F20
	0x0375FB60 STR X30, [X31 - 0x10]!
	0x0375FB64 MOV X0, X1
	0x0375FB68 MOVZ W2, 0x3
	0x0375FB6C MOV X1, X3
	0x0375FB70 MOV X3, X31
	0x0375FB74 BL 0x322590C
	0x0375FB78 UBFM W0, W0, 0x1F, 0x1F
	0x0375FB7C LDR X30, [X31], #0x10
	0x0375FB80 RET
	0x0375FB84 STR X30, [X31 - 0x10]!
	0x0375FB88 MOV X0, X1
	0x0375FB8C MOVZ W2, 0x3

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xC82000
	007 Move W8, [X20+3647]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x997000
	014 Move X0, [X0+368]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X20+3647], W8
	018 Move X0, X19
	019 Move X1, X31
	020 Call String.IsNullOrEmpty, X0
	021 Move TEMP, X0
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {47}
	025 Compare X19, 0
	026 JumpIfEqual {84}
	027 Move X0, X19
	028 Move W1, W31
	029 Move X2, X31
	030 Call String.get_Chars, X0, X1
	031 Move X22, 0x997000
	032 Move X22, [X22+368]
	033 Move W20, W0
	034 Move X8, [X22]
	035 Move W9, [X8+224]
	036 Compare W9, 0
	037 JumpIfNotEqual {40}
	038 Move X0, X8
	039 Call 0x1C17DFC
	040 Move W0, W20
	041 Move X1, X31
	042 Call Char.IsDigit, X0
	043 Move TEMP, X0
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfNotEqual {55}
	047 Move W8, W31
	048 Move X20, [X31+32]
	049 Move X19, [X31+40]
	050 Move X22, [X31+16]
	051 Move X21, [X31+24]
	052 And W0, W8, 1
	053 Move X30, [X31+48]
	054 Return X0
	055 Move W8, [X19+16]
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move W20, W31
	058 Move X0, X19
	059 Move W1, W20
	060 Move X2, X31
	061 Call String.get_Chars, X0, X1
	062 Move X8, [X22]
	063 Move W21, W0
	064 Move W9, [X8+224]
	065 Compare W9, 0
	066 JumpIfNotEqual {69}
	067 Move X0, X8
	068 Call 0x1C17DFC
	069 Move W0, W21
	070 Move X1, X31
	071 Call Char.IsLetterOrDigit, X0
	072 And W8, W21, 0xFFFF
	073 NotImplemented "Instruction CMP not yet implemented."
	074 NotImplemented "Instruction CSET not yet implemented."
	075 Or W8, W8, W0
	076 Move TEMP, X8
	077 And TEMP, TEMP, 1
	078 Compare TEMP, 1
	079 JumpIfNotEqual {48}
	080 Move W9, [X19+16]
	081 Add W20, W20, 1
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Move W8, 1
	084 Call 0x1C17F20

Method: System.Boolean IsEmptyOrProperIdentifier(System.String name)

Disassembly:
	0x0375FB90 MOV X1, X3
	0x0375FB94 MOV X3, X31
	0x0375FB98 BL 0x322590C
	0x0375FB9C CMP W0, 0x0
	0x0375FBA0 CSET W0, GT
	0x0375FBA4 LDR X30, [X31], #0x10
	0x0375FBA8 RET
	0x0375FBAC STR W31, [X0 + 0xC]
	0x0375FBB0 STRH W31, [X0 + 0x10]
	0x0375FBB4 RET
	0x0375FBB8 SUB X31, X31, 0x40

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X1, X31
	004 Move X19, X0
	005 Call String.IsNullOrEmpty, X0
	006 Move TEMP, X0
	007 And TEMP, TEMP, 1
	008 Compare TEMP, 1
	009 JumpIfNotEqual {14}
	010 Move W0, 1
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 Return X0
	014 Move X0, X19
	015 Move X30, [X31+16]
	016 Move X19, [X31+24]
	017 Call CSharpCodeHelpers.IsProperIdentifier, X0
	018 Return X0

Method: System.Boolean IsEmptyOrProperNamespaceName(System.String name)

Disassembly:
	0x0375FBBC STR X30, [X31 + 0x20]
	0x0375FBC0 STP X20, X19, [X31 + 0x30]
	0x0375FBC4 ADRP X20, 0xC81000
	0x0375FBC8 LDRB W8, [X20 + 0xE4E]
	0x0375FBCC MOV X19, X0
	0x0375FBD0 TBNZ X8, 0x0, 0x375FC00
	0x0375FBD4 ADRP X0, 0x994000
	0x0375FBD8 LDR X0, [X0 + 0x758]
	0x0375FBDC BL 0x1C16CF4
	0x0375FBE0 ADRP X0, 0x9E7000
	0x0375FBE4 LDR X0, [X0 + 0x298]
	0x0375FBE8 BL 0x1C16CF4
	0x0375FBEC ADRP X0, 0x9C4000
	0x0375FBF0 LDR X0, [X0 + 0xB28]
	0x0375FBF4 BL 0x1C16CF4
	0x0375FBF8 MOVZ W8, 0x1
	0x0375FBFC STRB W8, [X20 + 0xE4E]
	0x0375FC00 LDR X8, [X19]
	0x0375FC04 CBZ X8, 0x375FC64
	0x0375FC08 ADRP X8, 0x994000
	0x0375FC0C LDR X8, [X8 + 0x758]
	0x0375FC10 LDR W9, [X19 + 0xC]
	0x0375FC14 ADD X1, X31, 0x0
	0x0375FC18 LDR X0, [X8]
	0x0375FC1C STR W9, [X31]
	0x0375FC20 BL 0x1C16E04
	0x0375FC24 LDR X8, [X19]
	0x0375FC28 CBZ X8, 0x375FCA0
	0x0375FC2C LDR W1, [X19 + 0xC]
	0x0375FC30 ADRP X19, 0x9C4000
	0x0375FC34 LDR X19, [X19 + 0xB28]
	0x0375FC38 MOV X20, X0
	0x0375FC3C MOV X0, X8
	0x0375FC40 MOV X2, X31
	0x0375FC44 BL 0x322B484
	0x0375FC48 LDR X8, [X19]
	0x0375FC4C MOV X2, X0
	0x0375FC50 MOV X1, X20
	0x0375FC54 MOV X3, X31
	0x0375FC58 MOV X0, X8
	0x0375FC5C BL 0x3227BD4
	0x0375FC60 B 0x375FC90
	0x0375FC64 ADRP X9, 0x9E7000
	0x0375FC68 LDR V0, [X19]
	0x0375FC6C LDR X8, [X19 + 0x10]
	0x0375FC70 LDR X9, [X9 + 0x298]
	0x0375FC74 ADD X1, X31, 0x0
	0x0375FC78 STR V0, [X31]
	0x0375FC7C STR X8, [X31 + 0x10]
	0x0375FC80 LDR X0, [X9]
	0x0375FC84 BL 0x1C16E04
	0x0375FC88 MOV X1, X31
	0x0375FC8C BL 0x33D5650

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xC82000
	005 Move W8, [X20+3648]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {22}
	011 Move X0, 0x9E8000
	012 Move X0, [X0+584]
	013 Call 0x1C17CF4
	014 Move X0, 0x9E8000
	015 Move X0, [X0+592]
	016 Call 0x1C17CF4
	017 Move X0, 0x996000
	018 Move X0, [X0+3064]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+3648], W8
	022 Move X0, X19
	023 Move X1, X31
	024 Call String.IsNullOrEmpty, X0
	025 Move TEMP, X0
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfNotEqual {34}
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move W0, 1
	032 Move X30, [X31+32]
	033 Return X0
	034 Compare X19, 0
	035 JumpIfEqual {64}
	036 Move W1, 46
	037 Move X0, X19
	038 Move W2, W31
	039 Move X3, X31
	040 Call String.Split, X0, X1, X2
	041 Move X8, 0x996000
	042 Move X8, [X8+3064]
	043 Move X19, X0
	044 Move X8, [X8]
	045 Move X0, X8
	046 Call 0x1C17F10
	047 Move X8, 0x9E8000
	048 Move X8, [X8+584]
	049 Move X1, X31
	050 Move X3, X31
	051 Move X20, X0
	052 Move X2, [X8]
	053 Call Func`2<Object, Boolean>..ctor, X0, X1, X2
	054 Move X8, 0x9E8000
	055 Move X8, [X8+592]
	056 Move X0, X19
	057 Move X1, X20
	058 Move X20, [X31+16]
	059 Move X19, [X31+24]
	060 Move X2, [X8]
	061 Move X30, [X31+32]
	062 Call Enumerable.All, X0, X1
	063 Return X0
	064 Call 0x1C17F20

Method: System.String MakeIdentifier(System.String name, System.String suffix = )

Disassembly:
	0x0375FC90 LDP X20, X19, [X31 + 0x30]
	0x0375FC94 LDR X30, [X31 + 0x20]
	0x0375FC98 ADD X31, X31, 0x40
	0x0375FC9C RET
	0x0375FCA0 BL 0x1C16F20
	0x0375FCA4 STR X30, [X31 - 0x20]!
	0x0375FCA8 STP X20, X19, [X31 + 0x10]
	0x0375FCAC MOV W20, W1
	0x0375FCB0 MOV X19, X0
	0x0375FCB4 BL 0x375FD18
	0x0375FCB8 LDP W8, W1, [X19 + 0x8]
	0x0375FCBC CMP W1, W8
	0x0375FCC0 B.EQ 0x375FD04
	0x0375FCC4 LDR X0, [X19]
	0x0375FCC8 CBZ X0, 0x375FD14
	0x0375FCCC MOV X2, X31
	0x0375FCD0 BL 0x3222A1C
	0x0375FCD4 AND W8, W0, 0xFFFF
	0x0375FCD8 CMP W8, W20, UXTH
	0x0375FCDC B.NE 0x375FD04
	0x0375FCE0 LDR W8, [X19 + 0xC]
	0x0375FCE4 MOV X0, X19
	0x0375FCE8 ADD W8, W8, 0x1
	0x0375FCEC STR W8, [X19 + 0xC]
	0x0375FCF0 BL 0x375FD18
	0x0375FCF4 LDP W9, W8, [X19 + 0x8]
	0x0375FCF8 CMP W8, W9
	0x0375FCFC CSET W0, LT
	0x0375FD00 B 0x375FD08
	0x0375FD04 MOV W0, W31
	0x0375FD08 LDP X20, X19, [X31 + 0x10]
	0x0375FD0C LDR X30, [X31], #0x20
	0x0375FD10 RET
	0x0375FD14 BL 0x1C16F20
	0x0375FD18 STP X30, X21, [X31 - 0x20]!
	0x0375FD1C STP X20, X19, [X31 + 0x10]
	0x0375FD20 ADRP X20, 0xC81000
	0x0375FD24 LDRB W8, [X20 + 0xE54]
	0x0375FD28 MOV X19, X0
	0x0375FD2C TBNZ X8, 0x0, 0x375FD44
	0x0375FD30 ADRP X0, 0x996000
	0x0375FD34 LDR X0, [X0 + 0x170]
	0x0375FD38 BL 0x1C16CF4
	0x0375FD3C MOVZ W8, 0x1
	0x0375FD40 STRB W8, [X20 + 0xE54]
	0x0375FD44 LDP W8, W1, [X19 + 0x8]
	0x0375FD48 CMP W1, W8
	0x0375FD4C B.GE 0x375FDA4
	0x0375FD50 ADRP X21, 0x996000
	0x0375FD54 LDR X21, [X21 + 0x170]
	0x0375FD58 LDR X0, [X19]
	0x0375FD5C CBZ X0, 0x375FDB0
	0x0375FD60 MOV X2, X31
	0x0375FD64 BL 0x3222A1C
	0x0375FD68 LDR X8, [X21]
	0x0375FD6C MOV W20, W0
	0x0375FD70 LDR W9, [X8 + 0xE0]
	0x0375FD74 CBNZ W9, 0x375FD80
	0x0375FD78 MOV X0, X8
	0x0375FD7C BL 0x1C16DFC
	0x0375FD80 MOV W0, W20
	0x0375FD84 MOV X1, X31
	0x0375FD88 BL 0x3317FCC
	0x0375FD8C TBZ X0, 0x0, 0x375FDA4
	0x0375FD90 LDP W9, W8, [X19 + 0x8]
	0x0375FD94 ADD W1, W8, 0x1
	0x0375FD98 CMP W1, W9
	0x0375FD9C STR W1, [X19 + 0xC]
	0x0375FDA0 B.LT 0x375FD58
	0x0375FDA4 LDP X20, X19, [X31 + 0x10]
	0x0375FDA8 LDP X30, X21, [X31], #0x20
	0x0375FDAC RET
	0x0375FDB0 BL 0x1C16F20
	0x0375FDB4 STP X30, X19, [X31 - 0x10]!
	0x0375FDB8 MOV X19, X0
	0x0375FDBC BL 0x375FD18
	0x0375FDC0 LDP W8, W1, [X19 + 0x8]
	0x0375FDC4 CMP W1, W8
	0x0375FDC8 B.EQ 0x375FE04
	0x0375FDCC LDR X0, [X19]
	0x0375FDD0 CBZ X0, 0x375FE10
	0x0375FDD4 MOV X2, X31
	0x0375FDD8 BL 0x3222A1C
	0x0375FDDC AND W8, W0, 0xFFFF
	0x0375FDE0 CMP W8, 0x3A
	0x0375FDE4 B.NE 0x375FE04
	0x0375FDE8 LDR W8, [X19 + 0xC]
	0x0375FDEC MOV X0, X19
	0x0375FDF0 ADD W8, W8, 0x1
	0x0375FDF4 STR W8, [X19 + 0xC]
	0x0375FDF8 BL 0x375FD18
	0x0375FDFC MOVZ W0, 0x1
	0x0375FE00 B 0x375FE08
	0x0375FE04 MOV W0, W31
	0x0375FE08 LDP X30, X19, [X31], #0x10
	0x0375FE0C RET
	0x0375FE10 BL 0x1C16F20
	0x0375FE14 SUB X31, X31, 0x60
	0x0375FE18 STR X30, [X31 + 0x50]
	0x0375FE1C MOVI V0.2D, 0x0
	0x0375FE20 ADD X1, X31, 0x0
	0x0375FE24 STR X31, [X31 + 0x40]
	0x0375FE28 STP V0, V0, [X31 + 0x20]
	0x0375FE2C STP V0, V0, [X31]
	0x0375FE30 BL 0x375FE44
	0x0375FE34 LDR X30, [X31 + 0x50]
	0x0375FE38 AND W0, W0, 0x1
	0x0375FE3C ADD X31, X31, 0x60
	0x0375FE40 RET
	0x0375FE44 STR X30, [X31 - 0x20]!
	0x0375FE48 STP X20, X19, [X31 + 0x10]
	0x0375FE4C MOVI V0.2D, 0x0
	0x0375FE50 MOV X19, X1
	0x0375FE54 MOV X20, X0
	0x0375FE58 STR X31, [X1 + 0x40]
	0x0375FE5C STP V0, V0, [X1 + 0x20]
	0x0375FE60 STP V0, V0, [X1]
	0x0375FE64 BL 0x375FD18
	0x0375FE68 LDP W8, W1, [X20 + 0x8]
	0x0375FE6C CMP W1, W8
	0x0375FE70 B.NE 0x375FE7C
	0x0375FE74 MOV W0, W31
	0x0375FE78 B 0x375FF44
	0x0375FE7C LDR X0, [X20]
	0x0375FE80 CBZ X0, 0x375FF50
	0x0375FE84 MOV X2, X31
	0x0375FE88 BL 0x3222A1C
	0x0375FE8C AND W8, W0, 0xFFFF
	0x0375FE90 CMP W8, 0x66
	0x0375FE94 B.HI 0x375FEB4
	0x0375FE98 CMP W8, 0x22
	0x0375FE9C B.EQ 0x375FF1C
	0x0375FEA0 CMP W8, 0x5B
	0x0375FEA4 B.EQ 0x375FF08
	0x0375FEA8 CMP W8, 0x66
	0x0375FEAC B.EQ 0x375FEE0
	0x0375FEB0 B 0x375FEF4
	0x0375FEB4 CMP W8, 0x6E
	0x0375FEB8 B.EQ 0x375FF30
	0x0375FEBC CMP W8, 0x74
	0x0375FEC0 B.EQ 0x375FEE0
	0x0375FEC4 CMP W8, 0x7B
	0x0375FEC8 B.NE 0x375FEF4
	0x0375FECC MOV X0, X20
	0x0375FED0 MOV X1, X19

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0xC82000
	009 Move W8, [X21+3649]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {27}
	016 Move X0, 0x997000
	017 Move X0, [X0+368]
	018 Call 0x1C17CF4
	019 Move X0, 0x995000
	020 Move X0, [X0+2288]
	021 Call 0x1C17CF4
	022 Move X0, 0x995000
	023 Move X0, [X0+3552]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+3649], W8
	027 Move X0, X20
	028 Move X1, X31
	029 Call String.IsNullOrEmpty, X0
	030 Move TEMP, X0
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfEqual {151}
	034 Compare X20, 0
	035 JumpIfEqual {150}
	036 Move X24, 0x997000
	037 Move X24, [X24+368]
	038 Move X0, X20
	039 Move W1, W31
	040 Move X2, X31
	041 Call String.get_Chars, X0, X1
	042 Move X8, [X24]
	043 Move W21, W0
	044 Move W9, [X8+224]
	045 Compare W9, 0
	046 JumpIfNotEqual {49}
	047 Move X0, X8
	048 Call 0x1C17DFC
	049 Move W0, W21
	050 Move X1, X31
	051 Call Char.IsDigit, X0
	052 Move TEMP, X0
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfNotEqual {65}
	056 Move X8, 0x995000
	057 Move X8, [X8+3552]
	058 Move X1, X20
	059 Move X2, X31
	060 Move X0, [X8]
	061 Call String.Concat, X0, X1
	062 Move X20, X0
	063 Compare X0, 0
	064 JumpIfEqual {150}
	065 Move W8, [X20+16]
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move W21, W31
	068 Move X0, X20
	069 Move W1, W21
	070 Move X2, X31
	071 Call String.get_Chars, X0, X1
	072 Move X8, [X24]
	073 Move W22, W0
	074 Move W9, [X8+224]
	075 Compare W9, 0
	076 JumpIfNotEqual {79}
	077 Move X0, X8
	078 Call 0x1C17DFC
	079 Move W0, W22
	080 Move X1, X31
	081 Call Char.IsLetterOrDigit, X0
	082 And W8, W22, 0xFFFF
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Move TEMP, X0
	085 And TEMP, TEMP, 1
	086 Compare TEMP, 1
	087 JumpIfNotEqual {91}
	088 Move W8, [X20+16]
	089 Add W21, W21, 1
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Move X8, 0x995000
	092 Move X8, [X8+2288]
	093 Move X0, [X8]
	094 Call 0x1C17F10
	095 Move X1, X31
	096 Move X21, X0
	097 Call StringBuilder..ctor, X0
	098 Move W8, [X20+16]
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Move W22, W31
	101 Move X0, X20
	102 Move W1, W22
	103 Move X2, X31
	104 Call String.get_Chars, X0, X1
	105 Move X8, [X24]
	106 Move W23, W0
	107 Move W9, [X8+224]
	108 Compare W9, 0
	109 JumpIfNotEqual {112}
	110 Move X0, X8
	111 Call 0x1C17DFC
	112 Move W0, W23
	113 Move X1, X31
	114 Call Char.IsLetterOrDigit, X0
	115 And W8, W23, 0xFFFF
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Move TEMP, X0
	118 And TEMP, TEMP, 1
	119 Compare TEMP, 1
	120 JumpIfNotEqual {127}
	121 Compare X21, 0
	122 JumpIfEqual {150}
	123 Move X0, X21
	124 Move W1, W23
	125 Move X2, X31
	126 Call StringBuilder.Append, X0, X1
	127 Move W8, [X20+16]
	128 Add W22, W22, 1
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Compare X21, 0
	131 JumpIfEqual {150}
	132 Move X8, [X21]
	133 Move X0, X21
	134 Move X9, [X8+360]
	135 Move X1, [X8+368]
	136 NotImplemented "Instruction BLR not yet implemented."
	137 Move X20, X0
	138 Move X0, X20
	139 Move X1, X19
	140 Move X20, [X31+48]
	141 Move X19, [X31+56]
	142 Move X22, [X31+32]
	143 Move X21, [X31+40]
	144 Move X24, [X31+16]
	145 Move X23, [X31+24]
	146 Move X2, X31
	147 Move X30, [X31+64]
	148 Call String.Concat, X0, X1
	149 Return X0
	150 Call 0x1C17F20
	151 Move X0, 0x99A000
	152 Move X0, [X0+1320]
	153 Call 0x1C17D08
	154 Call 0x1C17F10
	155 Move X19, X0
	156 Move X0, 0x99D000
	157 Move X0, [X0+1416]
	158 Call 0x1C17D08
	159 Move X1, X0
	160 Move X0, X19
	161 Move X2, X31
	162 Call ArgumentNullException..ctor, X0, X1
	163 Move X0, 0x9E8000
	164 Move X0, [X0+600]
	165 Call 0x1C17D08
	166 Move X1, X0
	167 Move X0, X19
	168 Call 0x1C17DEC

Method: System.String MakeTypeName(System.String name, System.String suffix = )

Disassembly:
	0x0375FED4 BL 0x37603D0
	0x0375FED8 TBZ X0, 0x0, 0x375FE74
	0x0375FEDC B 0x375FF40
	0x0375FEE0 MOV X0, X20
	0x0375FEE4 MOV X1, X19
	0x0375FEE8 BL 0x3760538
	0x0375FEEC TBZ X0, 0x0, 0x375FE74
	0x0375FEF0 B 0x375FF40
	0x0375FEF4 MOV X0, X20
	0x0375FEF8 MOV X1, X19
	0x0375FEFC BL 0x3760674
	0x0375FF00 TBZ X0, 0x0, 0x375FE74
	0x0375FF04 B 0x375FF40
	0x0375FF08 MOV X0, X20
	0x0375FF0C MOV X1, X19
	0x0375FF10 BL 0x3760118
	0x0375FF14 TBZ X0, 0x0, 0x375FE74
	0x0375FF18 B 0x375FF40
	0x0375FF1C MOV X0, X20
	0x0375FF20 MOV X1, X19
	0x0375FF24 BL 0x375FF88
	0x0375FF28 TBZ X0, 0x0, 0x375FE74
	0x0375FF2C B 0x375FF40
	0x0375FF30 MOV X0, X20
	0x0375FF34 MOV X1, X19
	0x0375FF38 BL 0x3760610
	0x0375FF3C TBZ X0, 0x0, 0x375FE74
	0x0375FF40 MOVZ W0, 0x1
	0x0375FF44 LDP X20, X19, [X31 + 0x10]
	0x0375FF48 LDR X30, [X31], #0x20
	0x0375FF4C RET
	0x0375FF50 BL 0x1C16F20
	0x0375FF54 SUB X31, X31, 0x60
	0x0375FF58 STP X30, X19, [X31 + 0x50]
	0x0375FF5C MOV X19, X0
	0x0375FF60 ADD X0, X31, 0x8
	0x0375FF64 MOVZ W2, 0x48
	0x0375FF68 BL 0x3EB1AC0
	0x0375FF6C ADD X1, X31, 0x8
	0x0375FF70 MOV X0, X19
	0x0375FF74 BL 0x37618D0
	0x0375FF78 LDP X30, X19, [X31 + 0x50]
	0x0375FF7C AND W0, W0, 0x1
	0x0375FF80 ADD X31, X31, 0x60
	0x0375FF84 RET
	0x0375FF88 SUB X31, X31, 0xB0
	0x0375FF8C STR X30, [X31 + 0x70]
	0x0375FF90 STP X24, X23, [X31 + 0x80]
	0x0375FF94 STP X22, X21, [X31 + 0x90]
	0x0375FF98 STP X20, X19, [X31 + 0xA0]
	0x0375FF9C MRS X22, 0xC000
	0x0375FFA0 LDR X8, [X22 + 0x28]
	0x0375FFA4 MOVI V0.2D, 0x0
	0x0375FFA8 MOV X19, X1
	0x0375FFAC MOV X20, X0
	0x0375FFB0 STR X8, [X31 + 0x68]
	0x0375FFB4 STR X31, [X1 + 0x40]
	0x0375FFB8 STP V0, V0, [X1 + 0x20]
	0x0375FFBC STP V0, V0, [X1]
	0x0375FFC0 BL 0x375FD18
	0x0375FFC4 LDP W8, W1, [X20 + 0x8]
	0x0375FFC8 CMP W1, W8
	0x0375FFCC B.EQ 0x376005C
	0x0375FFD0 LDR X0, [X20]
	0x0375FFD4 CBZ X0, 0x3760110
	0x0375FFD8 MOV X2, X31

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xC82000
	007 Move W8, [X21+3650]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x997000
	015 Move X0, [X0+368]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3650], W8
	019 Move X0, X20
	020 Move X1, X19
	021 Call CSharpCodeHelpers.MakeIdentifier, X0, X1
	022 Compare X0, 0
	023 JumpIfEqual {79}
	024 Move X21, 0x997000
	025 Move X21, [X21+368]
	026 Move W1, W31
	027 Move X2, X31
	028 Move X19, X0
	029 Call String.get_Chars, X0, X1
	030 Move X8, [X21]
	031 Move W20, W0
	032 Move W9, [X8+224]
	033 Compare W9, 0
	034 JumpIfNotEqual {37}
	035 Move X0, X8
	036 Call 0x1C17DFC
	037 Move W0, W20
	038 Move X1, X31
	039 Call Char.IsLower, X0
	040 Move TEMP, X0
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfNotEqual {72}
	044 Move X0, X19
	045 Move W1, W31
	046 Move X2, X31
	047 Call String.get_Chars, X0, X1
	048 Move X8, [X21]
	049 Move W20, W0
	050 Move W9, [X8+224]
	051 Compare W9, 0
	052 JumpIfNotEqual {55}
	053 Move X0, X8
	054 Call 0x1C17DFC
	055 Move W0, W20
	056 Move X1, X31
	057 Call Char.ToUpper, X0
	058 NotImplemented "Instruction STRH not yet implemented."
	059 Add X0, X31, 12
	060 Move X1, X31
	061 Call Char.ToString, X0
	062 Move X20, X0
	063 Move W1, 1
	064 Move X0, X19
	065 Move X2, X31
	066 Call String.Substring, X0, X1
	067 Move X1, X0
	068 Move X0, X20
	069 Move X2, X31
	070 Call String.Concat, X0, X1
	071 Move X19, X0
	072 Move X0, X19
	073 Move X20, [X31+32]
	074 Move X19, [X31+40]
	075 Move X30, [X31+16]
	076 Move X21, [X31+24]
	077 Add X31, X31, 48
	078 Return X0
	079 Call 0x1C17F20

