Type: UnityEngine.InputSystem.Utilities.TypeHelpers

Method: TObject As(System.Object obj)

Disassembly:
	0x0229FC80 BL 0x1C5C6E0
	0x0229FC84 LDR X8, [X19 + 0x38]
	0x0229FC88 LDR X0, [X8]
	0x0229FC8C LDRB W8, [X0 + 0x135]
	0x0229FC90 TBNZ X8, 0x0, 0x229FC98
	0x0229FC94 BL 0x1C5C684
	0x0229FC98 BL 0x1C16F10
	0x0229FC9C LDR X8, [X19 + 0x38]
	0x0229FCA0 MOV X20, X0
	0x0229FCA4 LDR X1, [X8 + 0x8]
	0x0229FCA8 LDR X8, [X1]
	0x0229FCAC BLR X8
	0x0229FCB0 LDR X8, [X19 + 0x38]
	0x0229FCB4 LDR X0, [X8 + 0x20]
	0x0229FCB8 LDRB W8, [X0 + 0x135]
	0x0229FCBC TBNZ X8, 0x0, 0x229FCC4
	0x0229FCC0 BL 0x1C5C684
	0x0229FCC4 LDR X8, [X0 + 0xB8]
	0x0229FCC8 STR X20, [X8]
	0x0229FCCC LDR X8, [X19 + 0x38]
	0x0229FCD0 LDR X0, [X8 + 0x20]
	0x0229FCD4 LDRB W8, [X0 + 0x135]
	0x0229FCD8 TBNZ X8, 0x0, 0x229FCE0
	0x0229FCDC BL 0x1C5C684
	0x0229FCE0 ADRP X21, 0x1E7C000
	0x0229FCE4 LDR X21, [X21 + 0x6E8]
	0x0229FCE8 LDR X0, [X21]
	0x0229FCEC LDR W8, [X0 + 0xE0]
	0x0229FCF0 CBNZ W8, 0x229FCFC
	0x0229FCF4 BL 0x1C16DFC
	0x0229FCF8 LDR X0, [X21]
	0x0229FCFC ADRP X9, 0x1E54000
	0x0229FD00 LDR X8, [X0 + 0xB8]
	0x0229FD04 LDR X9, [X9 + 0x6C0]
	0x0229FD08 LDR X0, [X9]
	0x0229FD0C LDR X9, [X19 + 0x38]
	0x0229FD10 LDR X19, [X8]
	0x0229FD14 LDR W8, [X0 + 0xE0]
	0x0229FD18 LDR X21, [X9 + 0x28]
	0x0229FD1C CBNZ W8, 0x229FD24
	0x0229FD20 BL 0x1C16DFC
	0x0229FD24 MOV X0, X21
	0x0229FD28 MOV X1, X31
	0x0229FD2C BL 0x338C698
	0x0229FD30 CBZ X19, 0x229FD60
	0x0229FD34 ADRP X8, 0x1E7D000
	0x0229FD38 LDR X8, [X8 + 0x7D0]
	0x0229FD3C MOV X1, X0
	0x0229FD40 MOV X0, X19
	0x0229FD44 MOV X2, X20
	0x0229FD48 LDR X3, [X8]
	0x0229FD4C BL 0x2986C5C
	0x0229FD50 MOV X0, X20
	0x0229FD54 LDP X20, X19, [X31 + 0x10]
	0x0229FD58 LDP X30, X21, [X31], #0x20
	0x0229FD5C RET
	0x0229FD60 BL 0x1C16F20
	0x0229FD64 STP X30, X19, [X31 - 0x10]!
	0x0229FD68 LDR X8, [X0 + 0x38]
	0x0229FD6C MOV X19, X0
	0x0229FD70 CBNZ X8, 0x229FD94
	0x0229FD74 ADRP X0, 0x1E7C000
	0x0229FD78 LDR X0, [X0 + 0x6E8]
	0x0229FD7C BL 0x1C16CF4
	0x0229FD80 LDR X8, [X19 + 0x38]
	0x0229FD84 CBNZ X8, 0x229FD94
	0x0229FD88 MOV X0, X19
	0x0229FD8C BL 0x1C5C6E0
	0x0229FD90 LDR X8, [X19 + 0x38]

ISIL:
	001 Move [X31-80], X29
	002 Move [X31-72], X30
	003 Move [X31+16], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Add X29, X31, 0
	011 Subtract X31, X31, 16
	012 NotImplemented "Instruction MRS not yet implemented."
	013 Move X8, [X25+40]
	014 Move X19, X1
	015 Move X21, X0
	016 Move [X29-8], X8
	017 Move X8, [X2+56]
	018 Compare X8, 0
	019 JumpIfNotEqual {24}
	020 Move X0, X2
	021 Move X20, X2
	022 Call 0x1C5D6E0
	023 Move X8, [X20+56]
	024 Move X23, [X8]
	025 Add X8, X31, 0
	026 Move W20, [X23+252]
	027 Add X9, X20, 15
	028 And X9, X9, 0x1FFFFFFFF
	029 Subtract X22, X8, X9
	030 Add X31, X22, 0
	031 Add X8, X31, 0
	032 Subtract X24, X8, X9
	033 Add X31, X24, 0
	034 Move X0, X24
	035 Move W1, W31
	036 Move X2, X20
	037 Call 0x3EB2B10
	038 Compare X21, 0
	039 JumpIfEqual {54}
	040 Move W8, [X23+309]
	041 Move TEMP, X8
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfEqual {48}
	045 Move X0, X23
	046 Call 0x1C5D684
	047 Move X23, X0
	048 Move X0, X21
	049 Move X1, X23
	050 Move X2, X22
	051 Call 0x1C17E10
	052 Move X1, X0
	053 Move X0, X19
	054 Move X0, X24
	055 Move W1, W31
	056 Move X2, X20
	057 Call 0x3EB2B10
	058 Move X0, X22
	059 Move X1, X24
	060 Move X2, X20
	061 Call 0x3EB2AC0
	062 Move X0, X19
	063 Move X1, X22
	064 Move X2, X20
	065 Call 0x3EB2AC0
	066 Move X8, [X25+40]
	067 NotImplemented "Instruction LDUR not yet implemented."
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Add X31, X29, 0
	070 Move X20, [X31+64]
	071 Move X19, [X31+72]
	072 Move X22, [X31+48]
	073 Move X21, [X31+56]
	074 Move X24, [X31+32]
	075 Move X23, [X31+40]
	076 Move X25, [X31+16]
	077 Move X29, [X31+80]
	078 Move X30, [X31+88]
	079 Return X0
	080 Call 0x3EB2B20

Method: System.Boolean IsInt(System.TypeCode type)

Disassembly:
	0x03769D54 BL 0x3757420
	0x03769D58 LDR X0, [X19]
	0x03769D5C CBZ X0, 0x3769DDC
	0x03769D60 ADRP X8, 0x9DD000

ISIL:
	001 Subtract W8, W0, 5
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.Type GetValueType(System.Reflection.MemberInfo member)

Disassembly:
	0x03769D64 LDP X1, X2, [X31 + 0x10]
	0x03769D68 LDR X8, [X8 + 0x6E0]
	0x03769D6C ADD X3, X31, 0x8
	0x03769D70 LDR X4, [X8]
	0x03769D74 BL 0x2A5C178
	0x03769D78 LDR X8, [X31 + 0x8]
	0x03769D7C ANDS W31, W0, 0x1
	0x03769D80 CSEL X0, X8, X31, NE
	0x03769D84 LDP X20, X19, [X31 + 0x30]
	0x03769D88 LDP X30, X21, [X31 + 0x20]
	0x03769D8C ADD X31, X31, 0x40
	0x03769D90 RET
	0x03769D94 ADRP X0, 0x98A000
	0x03769D98 LDR X0, [X0 + 0x5B0]
	0x03769D9C BL 0x1C16D08
	0x03769DA0 BL 0x1C16F10
	0x03769DA4 MOV X19, X0
	0x03769DA8 ADRP X0, 0x9DD000
	0x03769DAC LDR X0, [X0 + 0x6E8]
	0x03769DB0 BL 0x1C16D08
	0x03769DB4 MOV X1, X0
	0x03769DB8 MOV X0, X19
	0x03769DBC MOV X2, X31
	0x03769DC0 BL 0x337DF1C
	0x03769DC4 ADRP X0, 0x9DD000
	0x03769DC8 LDR X0, [X0 + 0x6F0]
	0x03769DCC BL 0x1C16D08
	0x03769DD0 MOV X1, X0
	0x03769DD4 MOV X0, X19
	0x03769DD8 BL 0x1C16DEC
	0x03769DDC BL 0x1C16F20
	0x03769DE0 STR X30, [X31 - 0x20]!
	0x03769DE4 STP X20, X19, [X31 + 0x10]
	0x03769DE8 ADRP X19, 0xC77000
	0x03769DEC ADRP X20, 0x9DD000
	0x03769DF0 LDRB W8, [X19 + 0xE97]
	0x03769DF4 LDR X20, [X20 + 0x678]
	0x03769DF8 TBNZ X8, 0x0, 0x3769E10
	0x03769DFC ADRP X0, 0x9DD000
	0x03769E00 LDR X0, [X0 + 0x678]
	0x03769E04 BL 0x1C16CF4
	0x03769E08 MOVZ W8, 0x1
	0x03769E0C STRB W8, [X19 + 0xE97]
	0x03769E10 LDR X0, [X20]
	0x03769E14 BL 0x1C16F10
	0x03769E18 MOV X1, X31
	0x03769E1C MOV X19, X0
	0x03769E20 BL 0x33BDD8C
	0x03769E24 LDR X8, [X20]
	0x03769E28 LDR X8, [X8 + 0xB8]
	0x03769E2C STR X19, [X8]
	0x03769E30 LDP X20, X19, [X31 + 0x10]
	0x03769E34 LDR X30, [X31], #0x20
	0x03769E38 RET
	0x03769E3C MOV X1, X31
	0x03769E40 B 0x33BDD8C
	0x03769E44 SUB X31, X31, 0x20
	0x03769E48 STP X2, X30, [X31 + 0x8]
	0x03769E4C STR X1, [X31]
	0x03769E50 ADD X0, X31, 0x0
	0x03769E54 MOV X1, X31
	0x03769E58 BL 0x37565F4
	0x03769E5C LDR X30, [X31 + 0x10]
	0x03769E60 ADD X31, X31, 0x20
	0x03769E64 RET
	0x03769E68 LDP S1, S0, [X0 + 0x18]
	0x03769E6C FADD S0, S0, S1
	0x03769E70 FMOV S1, 0.5
	0x03769E74 FMUL S0, S0, S1
	0x03769E78 RET
	0x03769E7C STR D8, [X31 - 0x40]!
	0x03769E80 STP X30, X23, [X31 + 0x10]
	0x03769E84 STP X22, X21, [X31 + 0x20]
	0x03769E88 STP X20, X19, [X31 + 0x30]
	0x03769E8C ADRP X23, 0xC77000
	0x03769E90 ADRP X22, 0x9DD000
	0x03769E94 ADRP X21, 0x991000
	0x03769E98 LDRB W8, [X23 + 0xE98]
	0x03769E9C LDR X22, [X22 + 0x6F8]
	0x03769EA0 LDR X21, [X21 + 0x4B8]
	0x03769EA4 MOV X20, X1
	0x03769EA8 MOV X19, X0
	0x03769EAC TBNZ X8, 0x0, 0x3769ED0
	0x03769EB0 ADRP X0, 0x9DD000
	0x03769EB4 LDR X0, [X0 + 0x6F8]
	0x03769EB8 BL 0x1C16CF4
	0x03769EBC ADRP X0, 0x991000
	0x03769EC0 LDR X0, [X0 + 0x4B8]
	0x03769EC4 BL 0x1C16CF4
	0x03769EC8 MOVZ W8, 0x1
	0x03769ECC STRB W8, [X23 + 0xE98]
	0x03769ED0 LDR W1, [X19 + 0x10]
	0x03769ED4 LDR X2, [X22]
	0x03769ED8 MOV X0, X20
	0x03769EDC BL 0x21FB0F0
	0x03769EE0 LDR W1, [X19 + 0x14]
	0x03769EE4 LDR X2, [X22]
	0x03769EE8 MOV X0, X20
	0x03769EEC FABS S8, S0
	0x03769EF0 BL 0x21FB0F0
	0x03769EF4 LDR X8, [X21]
	0x03769EF8 FABS S0, S0
	0x03769EFC LDR X8, [X8 + 0xB8]
	0x03769F00 LDR V2, [X8]
	0x03769F04 FCMP S8, S2
	0x03769F08 CSET W8, GT
	0x03769F0C FCMP S0, S2
	0x03769F10 CSET W9, LE
	0x03769F14 CMP W9, W8
	0x03769F18 B.EQ 0x3769F40
	0x03769F1C LDR W8, [X19 + 0x20]
	0x03769F20 CBZ W8, 0x3769F78
	0x03769F24 CMP W8, 0x1
	0x03769F28 B.NE 0x3769F40
	0x03769F2C LDP S2, S1, [X19 + 0x18]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xC78000
	005 Move W8, [X20+3726]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {22}
	011 Move X0, 0x9B4000
	012 Move X0, [X0+936]
	013 Call 0x1C17CF4
	014 Move X0, 0x9BC000
	015 Move X0, [X0+632]
	016 Call 0x1C17CF4
	017 Move X0, 0x9B4000
	018 Move X0, [X0+1008]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+3726], W8
	022 Compare X19, 0
	023 JumpIfEqual {32}
	024 Move X8, 0x9B4000
	025 Move X8, [X8+936]
	026 Move X9, [X19]
	027 Move X8, [X8]
	028 Move W11, [X9+304]
	029 Move W10, [X8+304]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X20, X31
	032 Move X0, X31
	033 Move X1, X31
	034 Move X2, X31
	035 Call FieldInfo.op_Inequality, X0, X1
	036 Move TEMP, X0
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfEqual {132}
	040 Move X0, X31
	041 Move X1, X31
	042 Move X2, X31
	043 Call PropertyInfo.op_Inequality, X0, X1
	044 Move X19, X31
	045 Move TEMP, X0
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfEqual {132}
	049 Move X0, X19
	050 Move X1, X31
	051 Move X2, X31
	052 Call MethodInfo.op_Inequality, X0, X1
	053 Move TEMP, X0
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfNotEqual {89}
	057 Compare X19, 0
	058 JumpIfEqual {132}
	059 Move X8, [X19]
	060 Move X0, X19
	061 Move X2, [X8+952]
	062 Move X1, [X8+960]
	063 Move X9, [X9+200]
	064 Add X9, X9, X10
	065 NotImplemented "Instruction LDUR not yet implemented."
	066 NotImplemented "Instruction CMP not yet implemented."
	067 NotImplemented "Instruction CSEL not yet implemented."
	068 Move X0, X20
	069 Move X1, X31
	070 Move X2, X31
	071 Call FieldInfo.op_Inequality, X0, X1
	072 Move TEMP, X0
	073 And TEMP, TEMP, 1
	074 Compare TEMP, 1
	075 JumpIfNotEqual {81}
	076 Compare X20, 0
	077 JumpIfEqual {132}
	078 Move X8, [X20]
	079 Move X2, [X8+600]
	080 Move X1, [X8+608]
	081 Move X8, 0x9B4000
	082 Move X8, [X8+1008]
	083 Move X9, [X19]
	084 Move X8, [X8]
	085 Move W11, [X9+304]
	086 Move W10, [X8+304]
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Move X20, X31
	089 Move X20, [X31+16]
	090 Move X19, [X31+24]
	091 Move X0, X31
	092 Move X30, [X31+32]
	093 Return X0
	094 Move X9, [X9+200]
	095 Add X9, X9, X10
	096 NotImplemented "Instruction LDUR not yet implemented."
	097 NotImplemented "Instruction CMP not yet implemented."
	098 NotImplemented "Instruction CSEL not yet implemented."
	099 Move X0, X20
	100 Move X1, X31
	101 Move X2, X31
	102 Call PropertyInfo.op_Inequality, X0, X1
	103 Move TEMP, X0
	104 And TEMP, TEMP, 1
	105 Compare TEMP, 1
	106 JumpIfNotEqual {117}
	107 Compare X20, 0
	108 JumpIfEqual {132}
	109 Move X8, [X20]
	110 Move X2, [X8+584]
	111 Move X1, [X8+592]
	112 Move X0, X20
	113 Move X20, [X31+16]
	114 Move X19, [X31+24]
	115 Move X30, [X31+32]
	116 CallNoReturn X2
	117 Compare X19, 0
	118 JumpIfEqual {49}
	119 Move X8, 0x9BC000
	120 Move X8, [X8+632]
	121 Move X9, [X19]
	122 Move X8, [X8]
	123 Move W11, [X9+304]
	124 Move W10, [X8+304]
	125 NotImplemented "Instruction CMP not yet implemented."
	126 Move X19, X31
	127 Move X9, [X9+200]
	128 Add X9, X9, X10
	129 NotImplemented "Instruction LDUR not yet implemented."
	130 NotImplemented "Instruction CMP not yet implemented."
	131 NotImplemented "Instruction CSEL not yet implemented."
	132 Call 0x1C17F20

Method: System.String GetNiceTypeName(System.Type type)

Disassembly:
	0x03769F30 FMOV S3, 0.5
	0x03769F34 FADD S2, S1, S2
	0x03769F38 FMUL S2, S2, S3
	0x03769F3C B 0x3769F68
	0x03769F40 LDP S3, S1, [X19 + 0x18]
	0x03769F44 FMOV S4, 0.5
	0x03769F48 FCMP S8, S2
	0x03769F4C FADD S5, S1, S3
	0x03769F50 FMUL S2, S5, S4
	0x03769F54 B.LE 0x3769F68
	0x03769F58 FSUB S0, S2, S3
	0x03769F5C FMUL S0, S8, S0
	0x03769F60 FSUB S0, S2, S0
	0x03769F64 B 0x3769F88
	0x03769F68 FSUB S1, S1, S2
	0x03769F6C FMUL S0, S0, S1
	0x03769F70 FADD S0, S2, S0
	0x03769F74 B 0x3769F88
	0x03769F78 LDP S1, S0, [X19 + 0x18]
	0x03769F7C FADD S0, S0, S1
	0x03769F80 FMOV S1, 0.5
	0x03769F84 FMUL S0, S0, S1
	0x03769F88 LDP X20, X19, [X31 + 0x30]
	0x03769F8C LDP X22, X21, [X31 + 0x20]
	0x03769F90 LDP X30, X23, [X31 + 0x10]
	0x03769F94 LDR V8, [X31], #0x40
	0x03769F98 RET
	0x03769F9C STP X30, X19, [X31 - 0x10]!
	0x03769FA0 LDR X8, [X0]
	0x03769FA4 MOV X19, X0
	0x03769FA8 LDP X9, X2, [X8 + 0x1D8]
	0x03769FAC BLR X9
	0x03769FB0 LDP S3, S2, [X19 + 0x18]
	0x03769FB4 FMOV S4, 0.5
	0x03769FB8 FMOV S1, W31
	0x03769FBC MOV X0, X31
	0x03769FC0 FADD S5, S2, S3
	0x03769FC4 FMUL S5, S5, S4
	0x03769FC8 FCMP S0, S5
	0x03769FCC FABD S4, S0, S0
	0x03769FD0 FCSEL S0, S3, S2, MI
	0x03769FD4 FABS S2, S0
	0x03769FD8 FMOV S3, W31
	0x03769FDC MOV V0.16B, V4.16B
	0x03769FE0 LDP X30, X19, [X31], #0x10
	0x03769FE4 B 0x380FE18
	0x03769FE8 STP X30, X21, [X31 - 0x20]!
	0x03769FEC STP X20, X19, [X31 + 0x10]
	0x03769FF0 ADRP X21, 0xC77000
	0x03769FF4 ADRP X20, 0x9DD000
	0x03769FF8 LDRB W8, [X21 + 0xE99]
	0x03769FFC LDR X20, [X20 + 0x700]
	0x0376A000 MOV X19, X0
	0x0376A004 TBNZ X8, 0x0, 0x376A01C
	0x0376A008 ADRP X0, 0x9DC000
	0x0376A00C LDR X0, [X0 + 0x700]
	0x0376A010 BL 0x1C16CF4
	0x0376A014 MOVZ W8, 0x1
	0x0376A018 STRB W8, [X21 + 0xE99]
	0x0376A01C ADRP X8, 0xFFFFFFFFFD383000
	0x0376A020 LDR V0, [X8 + 0xB40]
	0x0376A024 MOV X0, X19
	0x0376A028 STR D0, [X19 + 0x18]
	0x0376A02C LDR X1, [X20]
	0x0376A030 LDP X20, X19, [X31 + 0x10]
	0x0376A034 LDP X30, X21, [X31], #0x20
	0x0376A038 B 0x2DF9B48
	0x0376A03C STP X30, X21, [X31 - 0x20]!
	0x0376A040 STP X20, X19, [X31 + 0x10]
	0x0376A044 ADRP X21, 0xC76000
	0x0376A048 LDRB W8, [X21 + 0xE9A]
	0x0376A04C MOV X19, X1
	0x0376A050 MOV X20, X0
	0x0376A054 TBNZ X8, 0x0, 0x376A06C
	0x0376A058 ADRP X0, 0x9DC000
	0x0376A05C LDR X0, [X0 + 0x6F8]
	0x0376A060 BL 0x1C16CF4
	0x0376A064 MOVZ W8, 0x1
	0x0376A068 STRB W8, [X21 + 0xE9A]
	0x0376A06C MOV X0, X20
	0x0376A070 MOV X1, X19
	0x0376A074 BL 0x376A0AC
	0x0376A078 TBZ X0, 0x0, 0x376A09C
	0x0376A07C ADRP X8, 0x9DC000
	0x0376A080 LDR X8, [X8 + 0x6F8]
	0x0376A084 LDR W1, [X20 + 0x14]
	0x0376A088 MOV X0, X19
	0x0376A08C LDP X20, X19, [X31 + 0x10]
	0x0376A090 LDR X2, [X8]
	0x0376A094 LDP X30, X21, [X31], #0x20
	0x0376A098 B 0x21FB0F0
	0x0376A09C LDP X20, X19, [X31 + 0x10]
	0x0376A0A0 FMOV S0, W31
	0x0376A0A4 LDP X30, X21, [X31], #0x20
	0x0376A0A8 RET
	0x0376A0AC STR D8, [X31 - 0x20]!
	0x0376A0B0 STR X30, [X31 + 0x8]
	0x0376A0B4 STP X20, X19, [X31 + 0x10]
	0x0376A0B8 LDR W8, [X0 + 0x10]
	0x0376A0BC MOV X20, X0
	0x0376A0C0 MOV X19, X1
	0x0376A0C4 MOV X0, X1
	0x0376A0C8 MOV W1, W8
	0x0376A0CC MOV X2, X31
	0x0376A0D0 BL 0x3753850
	0x0376A0D4 TBZ X0, 0x0, 0x376A0E8
	0x0376A0D8 LDRB W8, [X20 + 0x18]
	0x0376A0DC CBZ W8, 0x376A0F0
	0x0376A0E0 MOVZ W0, 0x1
	0x0376A0E4 B 0x376A11C
	0x0376A0E8 MOV W0, W31
	0x0376A0EC B 0x376A11C
	0x0376A0F0 LDR W1, [X20 + 0x14]
	0x0376A0F4 MOV X0, X19
	0x0376A0F8 MOV X2, X31
	0x0376A0FC BL 0x375391C
	0x0376A100 LDR W1, [X20 + 0x10]
	0x0376A104 MOV X0, X19
	0x0376A108 MOV X2, X31
	0x0376A10C MOV V8.16B, V0.16B
	0x0376A110 BL 0x375391C
	0x0376A114 FCMP D0, D8
	0x0376A118 CSET W0, LS
	0x0376A11C LDP X20, X19, [X31 + 0x10]
	0x0376A120 LDR X30, [X31 + 0x8]
	0x0376A124 LDR V8, [X31], #0x20
	0x0376A128 RET
	0x0376A12C LDR X8, [X0]
	0x0376A130 LDP X3, X2, [X8 + 0x1D8]
	0x0376A134 BR X3
	0x0376A138 STR X30, [X31 - 0x20]!
	0x0376A13C STP X20, X19, [X31 + 0x10]
	0x0376A140 ADRP X20, 0xC76000
	0x0376A144 LDRB W8, [X20 + 0xE9B]
	0x0376A148 MOV X19, X0
	0x0376A14C TBNZ X8, 0x0, 0x376A164
	0x0376A150 ADRP X0, 0x9B1000
	0x0376A154 LDR X0, [X0 + 0x270]
	0x0376A158 BL 0x1C16CF4
	0x0376A15C MOVZ W8, 0x1
	0x0376A160 STRB W8, [X20 + 0xE9B]
	0x0376A164 LDRB W8, [X19 + 0x18]
	0x0376A168 CBNZ W8, 0x376A19C
	0x0376A16C ADRP X8, 0x9B1000
	0x0376A170 LDR X8, [X8 + 0x270]
	0x0376A174 LDR X0, [X8]
	0x0376A178 LDR W8, [X0 + 0xE0]
	0x0376A17C CBNZ W8, 0x376A184
	0x0376A180 BL 0x1C16DFC
	0x0376A184 MOV X0, X31
	0x0376A188 BL 0x37701B0
	0x0376A18C CBZ X0, 0x376A1A8
	0x0376A190 LDRB W8, [X0 + 0x5D]
	0x0376A194 EOR W8, W8, 0x1
	0x0376A198 STRB W8, [X19 + 0x18]
	0x0376A19C LDP X20, X19, [X31 + 0x10]
	0x0376A1A0 LDR X30, [X31], #0x20
	0x0376A1A4 RET
	0x0376A1A8 BL 0x1C16F20
	0x0376A1AC STP X30, X21, [X31 - 0x20]!
	0x0376A1B0 STP X20, X19, [X31 + 0x10]
	0x0376A1B4 ADRP X20, 0xC76000
	0x0376A1B8 ADRP X21, 0x9DC000
	0x0376A1BC LDRB W8, [X20 + 0xE9C]
	0x0376A1C0 LDR X21, [X21 + 0x700]
	0x0376A1C4 MOV X19, X0
	0x0376A1C8 TBNZ X8, 0x0, 0x376A1E0
	0x0376A1CC ADRP X0, 0x9DC000
	0x0376A1D0 LDR X0, [X0 + 0x700]
	0x0376A1D4 BL 0x1C16CF4
	0x0376A1D8 MOVZ W8, 0x1
	0x0376A1DC STRB W8, [X20 + 0xE9C]
	0x0376A1E0 LDR X1, [X21]
	0x0376A1E4 MOV X0, X19
	0x0376A1E8 LDP X20, X19, [X31 + 0x10]
	0x0376A1EC LDP X30, X21, [X31], #0x20
	0x0376A1F0 B 0x2DF9B48
	0x0376A1F4 STP X30, X21, [X31 - 0x20]!
	0x0376A1F8 STP X20, X19, [X31 + 0x10]
	0x0376A1FC ADRP X21, 0xC76000
	0x0376A200 LDRB W8, [X21 + 0xE9D]
	0x0376A204 MOV X19, X1
	0x0376A208 MOV X20, X0
	0x0376A20C TBNZ X8, 0x0, 0x376A224
	0x0376A210 ADRP X0, 0x9DC000
	0x0376A214 LDR X0, [X0 + 0x6F8]
	0x0376A218 BL 0x1C16CF4
	0x0376A21C MOVZ W8, 0x1
	0x0376A220 STRB W8, [X21 + 0xE9D]
	0x0376A224 MOV X0, X20
	0x0376A228 MOV X1, X19
	0x0376A22C BL 0x376A264
	0x0376A230 TBZ X0, 0x0, 0x376A254
	0x0376A234 ADRP X8, 0x9DC000
	0x0376A238 LDR X8, [X8 + 0x6F8]
	0x0376A23C LDR W1, [X20 + 0x18]
	0x0376A240 MOV X0, X19
	0x0376A244 LDP X20, X19, [X31 + 0x10]
	0x0376A248 LDR X2, [X8]
	0x0376A24C LDP X30, X21, [X31], #0x20
	0x0376A250 B 0x21FB0F0
	0x0376A254 LDP X20, X19, [X31 + 0x10]
	0x0376A258 FMOV S0, W31
	0x0376A25C LDP X30, X21, [X31], #0x20
	0x0376A260 RET
	0x0376A264 STP D9, D8, [X31 - 0x30]!
	0x0376A268 STR X30, [X31 + 0x10]
	0x0376A26C STP X20, X19, [X31 + 0x20]
	0x0376A270 LDR W8, [X0 + 0x10]
	0x0376A274 MOV X20, X0
	0x0376A278 MOV X19, X1
	0x0376A27C MOV X0, X1
	0x0376A280 MOV W1, W8
	0x0376A284 MOV X2, X31
	0x0376A288 BL 0x3753850
	0x0376A28C TBZ X0, 0x0, 0x376A2B4
	0x0376A290 LDR W1, [X20 + 0x14]
	0x0376A294 MOV X0, X19
	0x0376A298 MOV X2, X31
	0x0376A29C BL 0x3753850
	0x0376A2A0 TBZ X0, 0x0, 0x376A2B4
	0x0376A2A4 LDRB W8, [X20 + 0x1C]
	0x0376A2A8 CBZ W8, 0x376A2C8
	0x0376A2AC MOVZ W0, 0x1
	0x0376A2B0 B 0x376A2B8
	0x0376A2B4 MOV W0, W31
	0x0376A2B8 LDP X20, X19, [X31 + 0x20]
	0x0376A2BC LDR X30, [X31 + 0x10]
	0x0376A2C0 LDP D9, D8, [X31], #0x30
	0x0376A2C4 RET
	0x0376A2C8 LDR W1, [X20 + 0x18]
	0x0376A2CC MOV X0, X19
	0x0376A2D0 MOV X2, X31
	0x0376A2D4 BL 0x375391C
	0x0376A2D8 LDR W1, [X20 + 0x10]
	0x0376A2DC MOV X0, X19
	0x0376A2E0 MOV X2, X31
	0x0376A2E4 MOV V8.16B, V0.16B
	0x0376A2E8 BL 0x375391C
	0x0376A2EC LDR W1, [X20 + 0x14]
	0x0376A2F0 MOV X0, X19
	0x0376A2F4 MOV X2, X31
	0x0376A2F8 MOV V9.16B, V0.16B
	0x0376A2FC BL 0x375391C
	0x0376A300 FCMP D9, D8
	0x0376A304 CSET W8, LS
	0x0376A308 FCMP D0, D8
	0x0376A30C CSET W9, LS
	0x0376A310 AND W0, W8, W9, 0x0
	0x0376A314 B 0x376A2B8
	0x0376A318 LDR X8, [X0]
	0x0376A31C LDP X3, X2, [X8 + 0x1D8]
	0x0376A320 BR X3
	0x0376A324 STR X30, [X31 - 0x20]!
	0x0376A328 STP X20, X19, [X31 + 0x10]
	0x0376A32C ADRP X20, 0xC76000
	0x0376A330 LDRB W8, [X20 + 0xE9E]
	0x0376A334 MOV X19, X0
	0x0376A338 TBNZ X8, 0x0, 0x376A350
	0x0376A33C ADRP X0, 0x9B1000
	0x0376A340 LDR X0, [X0 + 0x270]
	0x0376A344 BL 0x1C16CF4
	0x0376A348 MOVZ W8, 0x1
	0x0376A34C STRB W8, [X20 + 0xE9E]
	0x0376A350 LDRB W8, [X19 + 0x1C]
	0x0376A354 CBNZ W8, 0x376A388
	0x0376A358 ADRP X8, 0x9B1000
	0x0376A35C LDR X8, [X8 + 0x270]
	0x0376A360 LDR X0, [X8]
	0x0376A364 LDR W8, [X0 + 0xE0]
	0x0376A368 CBNZ W8, 0x376A370
	0x0376A36C BL 0x1C16DFC
	0x0376A370 MOV X0, X31
	0x0376A374 BL 0x37701B0
	0x0376A378 CBZ X0, 0x376A394
	0x0376A37C LDRB W8, [X0 + 0x5D]
	0x0376A380 EOR W8, W8, 0x1
	0x0376A384 STRB W8, [X19 + 0x1C]
	0x0376A388 LDP X20, X19, [X31 + 0x10]
	0x0376A38C LDR X30, [X31], #0x20
	0x0376A390 RET
	0x0376A394 BL 0x1C16F20
	0x0376A398 STP X30, X21, [X31 - 0x20]!
	0x0376A39C STP X20, X19, [X31 + 0x10]
	0x0376A3A0 ADRP X20, 0xC76000
	0x0376A3A4 ADRP X21, 0x9DC000
	0x0376A3A8 LDRB W8, [X20 + 0xE9F]
	0x0376A3AC LDR X21, [X21 + 0x700]
	0x0376A3B0 MOV X19, X0
	0x0376A3B4 TBNZ X8, 0x0, 0x376A3CC
	0x0376A3B8 ADRP X0, 0x9DC000
	0x0376A3BC LDR X0, [X0 + 0x700]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xC78000
	006 Move W8, [X20+3727]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {83}
	012 Move X0, 0x9B2000
	013 Move X0, [X0+3432]
	014 Call 0x1C17CF4
	015 Move X0, 0x9B2000
	016 Move X0, [X0+3440]
	017 Call 0x1C17CF4
	018 Move X0, 0x9B3000
	019 Move X0, [X0+2680]
	020 Call 0x1C17CF4
	021 Move X0, 0x9B2000
	022 Move X0, [X0+3448]
	023 Call 0x1C17CF4
	024 Move X0, 0x9B2000
	025 Move X0, [X0+3456]
	026 Call 0x1C17CF4
	027 Move X0, 0x9B2000
	028 Move X0, [X0+3464]
	029 Call 0x1C17CF4
	030 Move X0, 0x9B2000
	031 Move X0, [X0+3472]
	032 Call 0x1C17CF4
	033 Move X0, 0x9B3000
	034 Move X0, [X0+2688]
	035 Call 0x1C17CF4
	036 Move X0, 0x98B000
	037 Move X0, [X0+1728]
	038 Call 0x1C17CF4
	039 Move X0, 0x9B2000
	040 Move X0, [X0+3480]
	041 Call 0x1C17CF4
	042 Move X0, 0x9B2000
	043 Move X0, [X0+3488]
	044 Call 0x1C17CF4
	045 Move X0, 0x9B2000
	046 Move X0, [X0+3496]
	047 Call 0x1C17CF4
	048 Move X0, 0x9DE000
	049 Move X0, [X0+1536]
	050 Call 0x1C17CF4
	051 Move X0, 0x9DE000
	052 Move X0, [X0+1544]
	053 Call 0x1C17CF4
	054 Move X0, 0x9B5000
	055 Move X0, [X0+1144]
	056 Call 0x1C17CF4
	057 Move X0, 0x9DE000
	058 Move X0, [X0+1552]
	059 Call 0x1C17CF4
	060 Move X0, 0x9DD000
	061 Move X0, [X0+1560]
	062 Call 0x1C17CF4
	063 Move X0, 0x9DD000
	064 Move X0, [X0+1568]
	065 Call 0x1C17CF4
	066 Move X0, 0x9DD000
	067 Move X0, [X0+1576]
	068 Call 0x1C17CF4
	069 Move X0, 0x9DD000
	070 Move X0, [X0+1584]
	071 Call 0x1C17CF4
	072 Move X0, 0x9DD000
	073 Move X0, [X0+1592]
	074 Call 0x1C17CF4
	075 Move X0, 0x9DD000
	076 Move X0, [X0+1600]
	077 Call 0x1C17CF4
	078 Move X0, 0x9B4000
	079 Move X0, [X0+1168]
	080 Call 0x1C17CF4
	081 Move W8, 1
	082 Move [X20+3727], W8
	083 Compare X19, 0
	084 JumpIfEqual {340}
	085 Move X0, X19
	086 Move X1, X31
	087 Call Type.get_IsPrimitive, X0
	088 Move TEMP, X0
	089 And TEMP, TEMP, 1
	090 Compare TEMP, 1
	091 JumpIfNotEqual {331}
	092 Move X21, 0x98A000
	093 Move X21, [X21+1728]
	094 Move X8, 0x9B1000
	095 Move X0, [X21]
	096 Move X8, [X8+3456]
	097 Move W9, [X0+224]
	098 Move X20, [X8]
	099 Compare W9, 0
	100 JumpIfNotEqual {102}
	101 Call 0x1C17DFC
	102 Move X0, X20
	103 Move X1, X31
	104 Call Type.GetTypeFromHandle, X0
	105 Move X1, X0
	106 Move X0, X19
	107 Move X2, X31
	108 Call Type.op_Equality, X0, X1
	109 Move TEMP, X0
	110 And TEMP, TEMP, 1
	111 Compare TEMP, 1
	112 JumpIfNotEqual {115}
	113 Move X8, 0x9DD000
	114 Move X8, [X8+1544]
	115 Move X8, 0x9B2000
	116 Move X0, [X21]
	117 Move X8, [X8+2688]
	118 Move W9, [X0+224]
	119 Move X20, [X8]
	120 Compare W9, 0
	121 JumpIfNotEqual {123}
	122 Call 0x1C17DFC
	123 Move X0, X20
	124 Move X1, X31
	125 Call Type.GetTypeFromHandle, X0
	126 Move X1, X0
	127 Move X0, X19
	128 Move X2, X31
	129 Call Type.op_Equality, X0, X1
	130 Move TEMP, X0
	131 And TEMP, TEMP, 1
	132 Compare TEMP, 1
	133 JumpIfNotEqual {136}
	134 Move X8, 0x9B4000
	135 Move X8, [X8+1168]
	136 Move X8, 0x9B1000
	137 Move X0, [X21]
	138 Move X8, [X8+3440]
	139 Move W9, [X0+224]
	140 Move X20, [X8]
	141 Compare W9, 0
	142 JumpIfNotEqual {144}
	143 Call 0x1C17DFC
	144 Move X0, X20
	145 Move X1, X31
	146 Call Type.GetTypeFromHandle, X0
	147 Move X1, X0
	148 Move X0, X19
	149 Move X2, X31
	150 Call Type.op_Equality, X0, X1
	151 Move TEMP, X0
	152 And TEMP, TEMP, 1
	153 Compare TEMP, 1
	154 JumpIfNotEqual {157}
	155 Move X8, 0x9DD000
	156 Move X8, [X8+1560]
	157 Move X8, 0x9B1000
	158 Move X0, [X21]
	159 Move X8, [X8+3432]
	160 Move W9, [X0+224]
	161 Move X20, [X8]
	162 Compare W9, 0
	163 JumpIfNotEqual {165}
	164 Call 0x1C17DFC
	165 Move X0, X20
	166 Move X1, X31
	167 Call Type.GetTypeFromHandle, X0
	168 Move X1, X0
	169 Move X0, X19
	170 Move X2, X31
	171 Call Type.op_Equality, X0, X1
	172 Move TEMP, X0
	173 And TEMP, TEMP, 1
	174 Compare TEMP, 1
	175 JumpIfNotEqual {178}
	176 Move X8, 0x9DD000
	177 Move X8, [X8+1584]
	178 Move X8, 0x9B1000
	179 Move X0, [X21]
	180 Move X8, [X8+3448]
	181 Move W9, [X0+224]
	182 Move X20, [X8]
	183 Compare W9, 0
	184 JumpIfNotEqual {186}
	185 Call 0x1C17DFC
	186 Move X0, X20
	187 Move X1, X31
	188 Call Type.GetTypeFromHandle, X0
	189 Move X1, X0
	190 Move X0, X19
	191 Move X2, X31
	192 Call Type.op_Equality, X0, X1
	193 Move TEMP, X0
	194 And TEMP, TEMP, 1
	195 Compare TEMP, 1
	196 JumpIfNotEqual {199}
	197 Move X8, 0x9B4000
	198 Move X8, [X8+1144]
	199 Move X8, 0x9B1000
	200 Move X0, [X21]
	201 Move X8, [X8+3464]
	202 Move W9, [X0+224]
	203 Move X20, [X8]
	204 Compare W9, 0
	205 JumpIfNotEqual {207}
	206 Call 0x1C17DFC
	207 Move X0, X20
	208 Move X1, X31
	209 Call Type.GetTypeFromHandle, X0
	210 Move X1, X0
	211 Move X0, X19
	212 Move X2, X31
	213 Call Type.op_Equality, X0, X1
	214 Move TEMP, X0
	215 And TEMP, TEMP, 1
	216 Compare TEMP, 1
	217 JumpIfNotEqual {220}
	218 Move X8, 0x9DD000
	219 Move X8, [X8+1576]
	220 Move X8, 0x9B2000
	221 Move X0, [X21]
	222 Move X8, [X8+2680]
	223 Move W9, [X0+224]
	224 Move X20, [X8]
	225 Compare W9, 0
	226 JumpIfNotEqual {228}
	227 Call 0x1C17DFC
	228 Move X0, X20
	229 Move X1, X31
	230 Call Type.GetTypeFromHandle, X0
	231 Move X1, X0
	232 Move X0, X19
	233 Move X2, X31
	234 Call Type.op_Equality, X0, X1
	235 Move TEMP, X0
	236 And TEMP, TEMP, 1
	237 Compare TEMP, 1
	238 JumpIfNotEqual {241}
	239 Move X8, 0x9DD000
	240 Move X8, [X8+1536]
	241 Move X8, 0x9B1000
	242 Move X0, [X21]
	243 Move X8, [X8+3488]
	244 Move W9, [X0+224]
	245 Move X20, [X8]
	246 Compare W9, 0
	247 JumpIfNotEqual {249}
	248 Call 0x1C17DFC
	249 Move X0, X20
	250 Move X1, X31
	251 Call Type.GetTypeFromHandle, X0
	252 Move X1, X0
	253 Move X0, X19
	254 Move X2, X31
	255 Call Type.op_Equality, X0, X1
	256 Move TEMP, X0
	257 And TEMP, TEMP, 1
	258 Compare TEMP, 1
	259 JumpIfNotEqual {262}
	260 Move X8, 0x9DD000
	261 Move X8, [X8+1592]
	262 Move X8, 0x9B1000
	263 Move X0, [X21]
	264 Move X8, [X8+3472]
	265 Move W9, [X0+224]
	266 Move X20, [X8]
	267 Compare W9, 0
	268 JumpIfNotEqual {270}
	269 Call 0x1C17DFC
	270 Move X0, X20
	271 Move X1, X31
	272 Call Type.GetTypeFromHandle, X0
	273 Move X1, X0
	274 Move X0, X19
	275 Move X2, X31
	276 Call Type.op_Equality, X0, X1
	277 Move TEMP, X0
	278 And TEMP, TEMP, 1
	279 Compare TEMP, 1
	280 JumpIfNotEqual {283}
	281 Move X8, 0x9DD000
	282 Move X8, [X8+1568]
	283 Move X8, 0x9B1000
	284 Move X0, [X21]
	285 Move X8, [X8+3480]
	286 Move W9, [X0+224]
	287 Move X20, [X8]
	288 Compare W9, 0
	289 JumpIfNotEqual {291}
	290 Call 0x1C17DFC
	291 Move X0, X20
	292 Move X1, X31
	293 Call Type.GetTypeFromHandle, X0
	294 Move X1, X0
	295 Move X0, X19
	296 Move X2, X31
	297 Call Type.op_Equality, X0, X1
	298 Move TEMP, X0
	299 And TEMP, TEMP, 1
	300 Compare TEMP, 1
	301 JumpIfNotEqual {304}
	302 Move X8, 0x9DD000
	303 Move X8, [X8+1552]
	304 Move X8, 0x9B1000
	305 Move X0, [X21]
	306 Move X8, [X8+3496]
	307 Move W9, [X0+224]
	308 Move X20, [X8]
	309 Compare W9, 0
	310 JumpIfNotEqual {312}
	311 Call 0x1C17DFC
	312 Move X0, X20
	313 Move X1, X31
	314 Call Type.GetTypeFromHandle, X0
	315 Move X1, X0
	316 Move X0, X19
	317 Move X2, X31
	318 Call Type.op_Equality, X0, X1
	319 Move TEMP, X0
	320 And TEMP, TEMP, 1
	321 Compare TEMP, 1
	322 JumpIfNotEqual {331}
	323 Move X8, 0x9DD000
	324 Move X8, [X8+1600]
	325 Move X0, [X8]
	326 Move X20, [X31+16]
	327 Move X19, [X31+24]
	328 Move X30, [X31+32]
	329 Move X21, [X31+40]
	330 Return X0
	331 Move X8, [X19]
	332 Move X0, X19
	333 Move X20, [X31+16]
	334 Move X19, [X31+24]
	335 Move X2, [X8+424]
	336 Move X1, [X8+432]
	337 Move X30, [X31+32]
	338 Move X21, [X31+40]
	339 CallNoReturn X2
	340 Call 0x1C17F20

Method: System.Type GetGenericTypeArgumentFromHierarchy(System.Type type, System.Type genericTypeDefinition, System.Int32 argumentIndex)

Disassembly:
	0x0376A3C0 BL 0x1C16CF4
	0x0376A3C4 MOVZ W8, 0x1
	0x0376A3C8 STRB W8, [X20 + 0xE9F]
	0x0376A3CC LDR X1, [X21]
	0x0376A3D0 MOV X0, X19
	0x0376A3D4 LDP X20, X19, [X31 + 0x10]
	0x0376A3D8 LDP X30, X21, [X31], #0x20
	0x0376A3DC B 0x2DF9B48
	0x0376A3E0 LDR X0, [X0 + 0x20]
	0x0376A3E4 RET
	0x0376A3E8 LDR W0, [X0 + 0x1C]
	0x0376A3EC RET
	0x0376A3F0 STR X30, [X31 - 0x20]!
	0x0376A3F4 STP X20, X19, [X31 + 0x10]
	0x0376A3F8 MOV X19, X1
	0x0376A3FC MOV X20, X0
	0x0376A400 BL 0x376A430
	0x0376A404 TBZ X0, 0x0, 0x376A420
	0x0376A408 LDR W1, [X20 + 0x14]
	0x0376A40C MOV X0, X19
	0x0376A410 LDP X20, X19, [X31 + 0x10]
	0x0376A414 MOV X2, X31
	0x0376A418 LDR X30, [X31], #0x20
	0x0376A41C B 0x375382C
	0x0376A420 LDP X20, X19, [X31 + 0x10]
	0x0376A424 FMOV S0, W31
	0x0376A428 LDR X30, [X31], #0x20
	0x0376A42C RET
	0x0376A430 STR D8, [X31 - 0x20]!
	0x0376A434 STR X30, [X31 + 0x8]
	0x0376A438 STP X20, X19, [X31 + 0x10]
	0x0376A43C LDR W8, [X0 + 0x10]
	0x0376A440 MOV X20, X0
	0x0376A444 MOV X19, X1
	0x0376A448 MOV X0, X1
	0x0376A44C MOV W1, W8
	0x0376A450 MOV X2, X31
	0x0376A454 BL 0x3753850
	0x0376A458 TBZ X0, 0x0, 0x376A474
	0x0376A45C LDRB W8, [X20 + 0x28]
	0x0376A460 CBZ W8, 0x376A46C
	0x0376A464 LDRB W8, [X20 + 0x18]
	0x0376A468 CBZ W8, 0x376A47C
	0x0376A46C MOVZ W0, 0x1
	0x0376A470 B 0x376A4A8
	0x0376A474 MOV W0, W31
	0x0376A478 B 0x376A4A8
	0x0376A47C LDR W1, [X20 + 0x14]
	0x0376A480 MOV X0, X19
	0x0376A484 MOV X2, X31
	0x0376A488 BL 0x375391C
	0x0376A48C LDR W1, [X20 + 0x10]
	0x0376A490 MOV X0, X19
	0x0376A494 MOV X2, X31
	0x0376A498 MOV V8.16B, V0.16B
	0x0376A49C BL 0x375391C
	0x0376A4A0 FCMP D0, D8
	0x0376A4A4 CSET W0, LS
	0x0376A4A8 LDP X20, X19, [X31 + 0x10]
	0x0376A4AC LDR X30, [X31 + 0x8]
	0x0376A4B0 LDR V8, [X31], #0x20
	0x0376A4B4 RET
	0x0376A4B8 STR X30, [X31 - 0x30]!
	0x0376A4BC STP X22, X21, [X31 + 0x10]
	0x0376A4C0 STP X20, X19, [X31 + 0x20]
	0x0376A4C4 MOV W20, W3
	0x0376A4C8 MOV X19, X2
	0x0376A4CC MOV X21, X1
	0x0376A4D0 MOV X22, X0
	0x0376A4D4 BL 0x376A430
	0x0376A4D8 TBZ X0, 0x0, 0x376A500
	0x0376A4DC LDR W1, [X22 + 0x14]
	0x0376A4E0 MOV X0, X21
	0x0376A4E4 MOV X2, X19
	0x0376A4E8 MOV W3, W20
	0x0376A4EC LDP X20, X19, [X31 + 0x20]
	0x0376A4F0 LDP X22, X21, [X31 + 0x10]
	0x0376A4F4 MOV X4, X31
	0x0376A4F8 LDR X30, [X31], #0x30
	0x0376A4FC B 0x37538D4
	0x0376A500 LDRSW X1, [X22 + 0x1C]
	0x0376A504 MOV X0, X19
	0x0376A508 LDP X20, X19, [X31 + 0x20]
	0x0376A50C LDP X22, X21, [X31 + 0x10]
	0x0376A510 MOV X2, X31
	0x0376A514 LDR X30, [X31], #0x30
	0x0376A518 B 0x3C001B4
	0x0376A51C STP X30, X21, [X31 - 0x20]!
	0x0376A520 STP X20, X19, [X31 + 0x10]
	0x0376A524 ADRP X21, 0xC76000
	0x0376A528 LDRB W8, [X21 + 0xEA0]
	0x0376A52C MOV X20, X1
	0x0376A530 MOV X19, X0
	0x0376A534 TBNZ X8, 0x0, 0x376A54C
	0x0376A538 ADRP X0, 0x9B1000
	0x0376A53C LDR X0, [X0 + 0x270]
	0x0376A540 BL 0x1C16CF4
	0x0376A544 MOVZ W8, 0x1
	0x0376A548 STRB W8, [X21 + 0xEA0]
	0x0376A54C LDR W1, [X19 + 0x14]
	0x0376A550 ADD X2, X19, 0x20
	0x0376A554 ADD X3, X19, 0x1C
	0x0376A558 ADD X4, X19, 0x28
	0x0376A55C MOV X0, X20
	0x0376A560 BL 0x376A5AC
	0x0376A564 LDRB W8, [X19 + 0x18]
	0x0376A568 CBNZ W8, 0x376A59C
	0x0376A56C ADRP X8, 0x9B1000
	0x0376A570 LDR X8, [X8 + 0x270]
	0x0376A574 LDR X0, [X8]
	0x0376A578 LDR W8, [X0 + 0xE0]
	0x0376A57C CBNZ W8, 0x376A584
	0x0376A580 BL 0x1C16DFC
	0x0376A584 MOV X0, X31
	0x0376A588 BL 0x37701B0
	0x0376A58C CBZ X0, 0x376A5A8
	0x0376A590 LDRB W8, [X0 + 0x5D]
	0x0376A594 EOR W8, W8, 0x1
	0x0376A598 STRB W8, [X19 + 0x18]
	0x0376A59C LDP X20, X19, [X31 + 0x10]
	0x0376A5A0 LDP X30, X21, [X31], #0x20
	0x0376A5A4 RET
	0x0376A5A8 BL 0x1C16F20
	0x0376A5AC SUB X31, X31, 0x70
	0x0376A5B0 STP X29, X30, [X31 + 0x10]
	0x0376A5B4 STP X28, X27, [X31 + 0x20]
	0x0376A5B8 STP X26, X25, [X31 + 0x30]
	0x0376A5BC STP X24, X23, [X31 + 0x40]
	0x0376A5C0 STP X22, X21, [X31 + 0x50]
	0x0376A5C4 STP X20, X19, [X31 + 0x60]
	0x0376A5C8 ADRP X19, 0xC76000
	0x0376A5CC LDRB W8, [X19 + 0xEA1]
	0x0376A5D0 MOV X22, X4
	0x0376A5D4 MOV X23, X3
	0x0376A5D8 MOV X21, X2
	0x0376A5DC MOV W24, W1
	0x0376A5E0 MOV X20, X0
	0x0376A5E4 TBNZ X8, 0x0, 0x376A644
	0x0376A5E8 ADRP X0, 0x989000
	0x0376A5EC LDR X0, [X0 + 0xE00]
	0x0376A5F0 BL 0x1C16CF4
	0x0376A5F4 ADRP X0, 0x9DC000
	0x0376A5F8 LDR X0, [X0 + 0x708]
	0x0376A5FC BL 0x1C16CF4
	0x0376A600 ADRP X0, 0x9DC000
	0x0376A604 LDR X0, [X0 + 0x710]
	0x0376A608 BL 0x1C16CF4
	0x0376A60C ADRP X0, 0x989000
	0x0376A610 LDR X0, [X0 + 0xE18]
	0x0376A614 BL 0x1C16CF4
	0x0376A618 ADRP X0, 0x989000
	0x0376A61C LDR X0, [X0 + 0x5A8]
	0x0376A620 BL 0x1C16CF4
	0x0376A624 ADRP X0, 0x9B1000
	0x0376A628 LDR X0, [X0 + 0x7F8]
	0x0376A62C BL 0x1C16CF4
	0x0376A630 ADRP X0, 0x989000
	0x0376A634 LDR X0, [X0 + 0x6C0]
	0x0376A638 BL 0x1C16CF4
	0x0376A63C MOVZ W8, 0x1
	0x0376A640 STRB W8, [X19 + 0xEA1]
	0x0376A644 MOVZ W8, 0x1
	0x0376A648 MOV X0, X20
	0x0376A64C MOV X1, X31
	0x0376A650 STR W31, [X23]
	0x0376A654 STRB W8, [X22]
	0x0376A658 BL 0x3753784
	0x0376A65C CBZ X0, 0x376A968
	0x0376A660 ADRP X10, 0x9DC000
	0x0376A664 LDR X8, [X0]
	0x0376A668 LDR X10, [X10 + 0x708]
	0x0376A66C MOV X20, X0
	0x0376A670 STR X21, [X31 + 0x8]
	0x0376A674 LDRH W9, [X8 + 0x12E]
	0x0376A678 LDR X1, [X10]
	0x0376A67C CBZ X9, 0x376A6A0
	0x0376A680 LDR X10, [X8 + 0xB0]
	0x0376A684 ADD X10, X10, 0x8
	0x0376A688 LDUR X11, [X10 - 0x8]
	0x0376A68C CMP X11, X1
	0x0376A690 B.EQ 0x376A6B0
	0x0376A694 SUBS X9, X9, 0x1
	0x0376A698 ADD X10, X10, 0x10
	0x0376A69C B.NE 0x376A688
	0x0376A6A0 MOV X0, X20
	0x0376A6A4 MOV W2, W31
	0x0376A6A8 BL 0x1C5C788
	0x0376A6AC B 0x376A6BC
	0x0376A6B0 LDRSW X9, [X10]
	0x0376A6B4 ADD X8, X8, X9, 0x4, LSL
	0x0376A6B8 ADD X0, X8, 0x138
	0x0376A6BC ADRP X29, 0x989000
	0x0376A6C0 ADRP X28, 0x9DC000
	0x0376A6C4 ADRP X19, 0x989000
	0x0376A6C8 LDR X29, [X29 + 0xE18]
	0x0376A6CC LDR X28, [X28 + 0x710]
	0x0376A6D0 LDR X19, [X19 + 0x6C0]
	0x0376A6D4 LDP X8, X1, [X0]
	0x0376A6D8 MOV X0, X20
	0x0376A6DC BLR X8
	0x0376A6E0 MOV X20, X0
	0x0376A6E4 MOV X21, X31
	0x0376A6E8 CBZ X20, 0x376A964
	0x0376A6EC LDR X8, [X20]
	0x0376A6F0 LDR X1, [X29]
	0x0376A6F4 LDRH W9, [X8 + 0x12E]
	0x0376A6F8 CBZ X9, 0x376A71C
	0x0376A6FC LDR X10, [X8 + 0xB0]
	0x0376A700 ADD X10, X10, 0x8
	0x0376A704 LDUR X11, [X10 - 0x8]
	0x0376A708 CMP X11, X1
	0x0376A70C B.EQ 0x376A72C
	0x0376A710 SUBS X9, X9, 0x1
	0x0376A714 ADD X10, X10, 0x10
	0x0376A718 B.NE 0x376A704
	0x0376A71C MOV X0, X20
	0x0376A720 MOV W2, W31
	0x0376A724 BL 0x1C5C788
	0x0376A728 B 0x376A738
	0x0376A72C LDRSW X9, [X10]
	0x0376A730 ADD X8, X8, X9, 0x4, LSL
	0x0376A734 ADD X0, X8, 0x138
	0x0376A738 LDP X8, X1, [X0]
	0x0376A73C MOV X0, X20
	0x0376A740 BLR X8
	0x0376A744 TBZ X0, 0x0, 0x376A8C0
	0x0376A748 LDR X8, [X20]
	0x0376A74C LDR X1, [X28]
	0x0376A750 LDRH W9, [X8 + 0x12E]
	0x0376A754 CBZ X9, 0x376A778
	0x0376A758 LDR X10, [X8 + 0xB0]
	0x0376A75C ADD X10, X10, 0x8
	0x0376A760 LDUR X11, [X10 - 0x8]
	0x0376A764 CMP X11, X1
	0x0376A768 B.EQ 0x376A788
	0x0376A76C SUBS X9, X9, 0x1
	0x0376A770 ADD X10, X10, 0x10
	0x0376A774 B.NE 0x376A760
	0x0376A778 MOV X0, X20
	0x0376A77C MOV W2, W31
	0x0376A780 BL 0x1C5C788
	0x0376A784 B 0x376A794

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X22, 0xC77000
	012 Move X25, 0x98A000
	013 Move W8, [X22+3728]
	014 Move X25, [X25+1728]
	015 Move W19, W2
	016 Move X20, X1
	017 Move X21, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {30}
	022 Move X0, 0x994000
	023 Move X0, [X0+2408]
	024 Call 0x1C17CF4
	025 Move X0, 0x98A000
	026 Move X0, [X0+1728]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X22+3728], W8
	030 Move X0, [X25]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move X0, X21
	036 Move X1, X31
	037 Move X2, X31
	038 Call Type.op_Equality, X0, X1
	039 Move TEMP, X0
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfEqual {261}
	043 Move X0, [X25]
	044 Move W8, [X0+224]
	045 Compare W8, 0
	046 JumpIfNotEqual {48}
	047 Call 0x1C17DFC
	048 Move X0, X20
	049 Move X1, X31
	050 Move X2, X31
	051 Call Type.op_Equality, X0, X1
	052 Move TEMP, X0
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfEqual {268}
	056 Move TEMP, X19
	057 And TEMP, TEMP, -2147483648
	058 Compare TEMP, -2147483648
	059 JumpIfEqual {280}
	060 Compare X20, 0
	061 JumpIfEqual {259}
	062 Move X0, X20
	063 Move X1, X31
	064 Call Type.get_IsInterface, X0
	065 Move TEMP, X0
	066 And TEMP, TEMP, 1
	067 Compare TEMP, 1
	068 JumpIfNotEqual {177}
	069 Move X26, 0x994000
	070 Move X26, [X26+2408]
	071 Compare X21, 0
	072 JumpIfEqual {259}
	073 Move X8, [X21]
	074 Move X0, X21
	075 Move X9, [X8+2136]
	076 Move X1, [X8+2144]
	077 NotImplemented "Instruction BLR not yet implemented."
	078 Compare X0, 0
	079 JumpIfEqual {259}
	080 Move W8, [X0+24]
	081 Move X22, X0
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Move W27, W31
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Add X8, X22, W27
	086 Move X23, [X8+32]
	087 Compare X23, 0
	088 JumpIfEqual {259}
	089 Move X8, [X23]
	090 Move X0, X23
	091 Move X9, [X8+920]
	092 Move X1, [X8+928]
	093 NotImplemented "Instruction BLR not yet implemented."
	094 Move TEMP, X0
	095 And TEMP, TEMP, 1
	096 Compare TEMP, 1
	097 JumpIfNotEqual {118}
	098 Move X8, [X23]
	099 Move X0, X23
	100 Move X9, [X8+1096]
	101 Move X1, [X8+1104]
	102 NotImplemented "Instruction BLR not yet implemented."
	103 Move X8, [X25]
	104 Move X24, X0
	105 Move W9, [X8+224]
	106 Compare W9, 0
	107 JumpIfNotEqual {110}
	108 Move X0, X8
	109 Call 0x1C17DFC
	110 Move X0, X24
	111 Move X1, X20
	112 Move X2, X31
	113 Call Type.op_Equality, X0, X1
	114 Move TEMP, X0
	115 And TEMP, TEMP, 1
	116 Compare TEMP, 1
	117 JumpIfEqual {235}
	118 Move X0, X23
	119 Move X1, X20
	120 Move W2, W19
	121 Call TypeHelpers.GetGenericTypeArgumentFromHierarchy, X0, X1, X2
	122 Move X8, [X25]
	123 Move X23, X0
	124 Move W9, [X8+224]
	125 Compare W9, 0
	126 JumpIfNotEqual {129}
	127 Move X0, X8
	128 Call 0x1C17DFC
	129 Move X0, X23
	130 Move X1, X31
	131 Move X2, X31
	132 Call Type.op_Inequality, X0, X1
	133 Move TEMP, X0
	134 And TEMP, TEMP, 1
	135 Compare TEMP, 1
	136 JumpIfEqual {247}
	137 Move W8, [X22+24]
	138 Add W27, W27, 1
	139 NotImplemented "Instruction CMP not yet implemented."
	140 Move X8, [X21]
	141 Move X0, X21
	142 Move X9, [X8+2072]
	143 Move X1, [X8+2080]
	144 NotImplemented "Instruction BLR not yet implemented."
	145 Move X8, [X25]
	146 Move X21, X0
	147 Move W9, [X8+224]
	148 Compare W9, 0
	149 JumpIfNotEqual {152}
	150 Move X0, X8
	151 Call 0x1C17DFC
	152 Move X0, X21
	153 Move X1, X31
	154 Move X2, X31
	155 Call Type.op_Equality, X0, X1
	156 Move TEMP, X0
	157 And TEMP, TEMP, 1
	158 Compare TEMP, 1
	159 JumpIfEqual {234}
	160 Move X0, [X25]
	161 Move X22, [X26]
	162 Move W8, [X0+224]
	163 Compare W8, 0
	164 JumpIfNotEqual {166}
	165 Call 0x1C17DFC
	166 Move X0, X22
	167 Move X1, X31
	168 Call Type.GetTypeFromHandle, X0
	169 Move X1, X0
	170 Move X0, X21
	171 Move X2, X31
	172 Call Type.op_Equality, X0, X1
	173 Move TEMP, X0
	174 And TEMP, TEMP, 1
	175 Compare TEMP, 1
	176 JumpIfNotEqual {71}
	177 Move X23, 0x994000
	178 Move X23, [X23+2408]
	179 Compare X21, 0
	180 JumpIfEqual {259}
	181 Move X8, [X21]
	182 Move X0, X21
	183 Move X9, [X8+920]
	184 Move X1, [X8+928]
	185 NotImplemented "Instruction BLR not yet implemented."
	186 Move TEMP, X0
	187 And TEMP, TEMP, 1
	188 Compare TEMP, 1
	189 JumpIfNotEqual {210}
	190 Move X8, [X21]
	191 Move X0, X21
	192 Move X9, [X8+1096]
	193 Move X1, [X8+1104]
	194 NotImplemented "Instruction BLR not yet implemented."
	195 Move X8, [X25]
	196 Move X22, X0
	197 Move W9, [X8+224]
	198 Compare W9, 0
	199 JumpIfNotEqual {202}
	200 Move X0, X8
	201 Call 0x1C17DFC
	202 Move X0, X22
	203 Move X1, X20
	204 Move X2, X31
	205 Call Type.op_Inequality, X0, X1
	206 Move TEMP, X0
	207 And TEMP, TEMP, 1
	208 Compare TEMP, 1
	209 JumpIfNotEqual {236}
	210 Move X8, [X21]
	211 Move X0, X21
	212 Move X9, [X8+2072]
	213 Move X1, [X8+2080]
	214 NotImplemented "Instruction BLR not yet implemented."
	215 Move X8, [X25]
	216 Move X22, [X23]
	217 Move X21, X0
	218 Move W9, [X8+224]
	219 Compare W9, 0
	220 JumpIfNotEqual {223}
	221 Move X0, X8
	222 Call 0x1C17DFC
	223 Move X0, X22
	224 Move X1, X31
	225 Call Type.GetTypeFromHandle, X0
	226 Move X1, X0
	227 Move X0, X21
	228 Move X2, X31
	229 Call Type.op_Equality, X0, X1
	230 Move TEMP, X0
	231 And TEMP, TEMP, 1
	232 Compare TEMP, 1
	233 JumpIfNotEqual {179}
	234 Move X23, X31
	235 Move X21, X23
	236 Move X8, [X21]
	237 Move X0, X21
	238 Move X9, [X8+1112]
	239 Move X1, [X8+1120]
	240 NotImplemented "Instruction BLR not yet implemented."
	241 Compare X0, 0
	242 JumpIfEqual {259}
	243 Move W8, [X0+24]
	244 NotImplemented "Instruction CMP not yet implemented."
	245 Add X8, X0, W19
	246 Move X23, [X8+32]
	247 Move X0, X23
	248 Move X20, [X31+64]
	249 Move X19, [X31+72]
	250 Move X22, [X31+48]
	251 Move X21, [X31+56]
	252 Move X24, [X31+32]
	253 Move X23, [X31+40]
	254 Move X26, [X31+16]
	255 Move X25, [X31+24]
	256 Move X30, [X31+80]
	257 Move X27, [X31+88]
	258 Return X0
	259 Call 0x1C17F20
	260 Call 0x1C17F28
	261 Move X0, 0x98F000
	262 Move X0, [X0+1320]
	263 Call 0x1C17D08
	264 Call 0x1C17F10
	265 Move X19, X0
	266 Move X0, 0x992000
	267 Move X0, [X0+1512]
	268 Move X0, 0x98F000
	269 Move X0, [X0+1320]
	270 Call 0x1C17D08
	271 Call 0x1C17F10
	272 Move X19, X0
	273 Move X0, 0x9BC000
	274 Move X0, [X0+3760]
	275 Call 0x1C17D08
	276 Move X1, X0
	277 Move X0, X19
	278 Move X2, X31
	279 Call ArgumentNullException..ctor, X0, X1
	280 Move X0, 0x992000
	281 Move X0, [X0+1888]
	282 Call 0x1C17D08
	283 Call 0x1C17F10
	284 Move X19, X0
	285 Move X0, 0x9DD000
	286 Move X0, [X0+1608]
	287 Call 0x1C17D08
	288 Move X1, X0
	289 Move X0, X19
	290 Move X2, X31
	291 Call ArgumentOutOfRangeException..ctor, X0, X1
	292 Move X0, 0x9DD000
	293 Move X0, [X0+1616]
	294 Call 0x1C17D08
	295 Move X1, X0
	296 Move X0, X19
	297 Call 0x1C17DEC

