Type: UnityEngine.InputSystem.Utilities.SavedStructState`1/TypedRestore

Method: System.Void .ctor(System.Object object, System.IntPtr method)

Disassembly:
	0x027248A0 LDR X0, [X0 + 0x10]
	0x027248A4 MOV W1, W31
	0x027248A8 MOV X3, X31
	0x027248AC BL 0x339FA34
	0x027248B0 LDR X0, [X19 + 0x18]
	0x027248B4 CBZ X0, 0x2724924
	0x027248B8 ADRP X9, 0x19F9000
	0x027248BC LDR X9, [X9 + 0x9F0]
	0x027248C0 LDR W10, [X0 + 0x1C]
	0x027248C4 LDR X8, [X0 + 0x10]
	0x027248C8 LDR X9, [X9]
	0x027248CC ADD W10, W10, 0x1
	0x027248D0 STR W10, [X0 + 0x1C]
	0x027248D4 CBZ X8, 0x2724924
	0x027248D8 LDRSW X10, [X0 + 0x18]
	0x027248DC LDR W11, [X8 + 0x18]
	0x027248E0 CMP W10, W11
	0x027248E4 B.CS 0x2724904
	0x027248E8 ADD W9, W10, 0x1
	0x027248EC ADD X8, X8, X10, 0x4, LSL
	0x027248F0 STR W9, [X0 + 0x18]
	0x027248F4 STP X31, X21, [X8 + 0x20]
	0x027248F8 LDP X20, X19, [X31 + 0x10]
	0x027248FC LDP X30, X21, [X31], #0x20
	0x02724900 RET
	0x02724904 LDR X8, [X9 + 0x20]
	0x02724908 LDP X20, X19, [X31 + 0x10]
	0x0272490C MOV X1, X31
	0x02724910 MOV X2, X21
	0x02724914 LDR X8, [X8 + 0xC0]
	0x02724918 LDR X3, [X8 + 0x70]
	0x0272491C LDP X30, X21, [X31], #0x20
	0x02724920 B 0x304F5B4
	0x02724924 BL 0x1C16F20
	0x02724928 STP X30, X21, [X31 - 0x20]!
	0x0272492C STP X20, X19, [X31 + 0x10]
	0x02724930 ADRP X21, 0x1CB6000
	0x02724934 LDRB W8, [X21 + 0x646]
	0x02724938 MOV X20, X1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+8]
	006 Move [X0+32], X1
	007 Move [X0+40], X2
	008 Move X19, X0
	009 Move X20, X1
	010 Move [X0+16], X8
	011 Move W21, [X2+82]
	012 Move [X0+64], X0
	013 Move X0, X2
	014 Call 0x1C17D84
	015 Move TEMP, X0
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfNotEqual {22}
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move X8, -14053376
	021 Add X8, X8, 3440
	022 Compare W21, 0
	023 JumpIfEqual {30}
	024 Compare X20, 0
	025 JumpIfEqual {41}
	026 Move X8, [X19+16]
	027 Move X9, [X19+32]
	028 Move [X19+24], X8
	029 Move [X19+64], X9
	030 Move X8, -14053376
	031 Add X8, X8, 3424
	032 Move [X19+24], X8
	033 Move X8, -14053376
	034 Add X8, X8, 3352
	035 Move [X19+56], X8
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move X30, [X31+32]
	039 Move X21, [X31+40]
	040 Return 
	041 Move X1, -29392896
	042 Add X1, X1, 3811
	043 Move X0, X31
	044 Call 0x1C17F3C
	045 Move X1, X31
	046 Call 0x1C17DEC

Method: System.Void Invoke(ref T state)

Disassembly:
	0x0272493C MOV X19, X0
	0x02724940 TBNZ X8, 0x0, 0x2724958
	0x02724944 ADRP X0, 0x19F9000
	0x02724948 LDR X0, [X0 + 0xA18]
	0x0272494C BL 0x1C16CF4

ISIL:
	001 Move X8, [X0+64]
	002 Move X3, [X0+24]
	003 Move X2, [X0+40]
	004 Move X0, X8
	005 CallNoReturn X3

Method: System.IAsyncResult BeginInvoke(ref T state, System.AsyncCallback callback, System.Object object)

Disassembly:
	0x02724950 MOVZ W8, 0x1
	0x02724954 STRB W8, [X21 + 0x646]
	0x02724958 LDR X0, [X20 + 0x20]
	0x0272495C LDRB W8, [X0 + 0x135]
	0x02724960 TBNZ X8, 0x0, 0x2724968
	0x02724964 BL 0x1C5C684
	0x02724968 MOV X0, X19
	0x0272496C BL 0x27240BC
	0x02724970 CBZ X0, 0x27249AC
	0x02724974 LDR W8, [X0 + 0x18]
	0x02724978 CBNZ W8, 0x272498C
	0x0272497C LDR W8, [X19 + 0x20]
	0x02724980 CBNZ W8, 0x272498C
	0x02724984 LDR W8, [X19 + 0x24]
	0x02724988 CBZ W8, 0x272499C
	0x0272498C MOV W0, W31
	0x02724990 LDP X20, X19, [X31 + 0x10]
	0x02724994 LDP X30, X21, [X31], #0x20
	0x02724998 RET
	0x0272499C LDR W8, [X19 + 0x28]
	0x027249A0 CMP W8, 0x0
	0x027249A4 CSET W0, EQ
	0x027249A8 B 0x2724990
	0x027249AC BL 0x1C16F20
	0x027249B0 STP X30, X21, [X31 - 0x20]!
	0x027249B4 STP X20, X19, [X31 + 0x10]
	0x027249B8 ADRP X21, 0x1CB6000
	0x027249BC LDRB W8, [X21 + 0x647]
	0x027249C0 MOV X20, X1
	0x027249C4 MOV X19, X0
	0x027249C8 TBNZ X8, 0x0, 0x2724A04
	0x027249CC ADRP X0, 0x19F9000
	0x027249D0 LDR X0, [X0 + 0xA20]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+8], X31
	003 Move [X31+16], X30
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move [X31], X31
	009 Move X8, [X0+40]
	010 Move X21, X0
	011 Move X19, X3
	012 Move X20, X2
	013 Move X8, [X8+48]
	014 Move X22, X1
	015 Move X0, [X8]
	016 Call 0x1C18274
	017 Move W8, [X0+309]
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {23}
	022 Call 0x1C5D684
	023 Move W8, [X0+40]
	024 Move TEMP, X8
	025 And TEMP, TEMP, -2147483648
	026 Compare TEMP, -2147483648
	027 JumpIfEqual {29}
	028 Move X0, [X22]
	029 Move X1, X22
	030 Call 0x1C17E04
	031 Move [X31], X0
	032 Add X1, X31, 0
	033 Move X0, X21
	034 Move X2, X20
	035 Move X3, X19
	036 Call 0x1C17CB0
	037 Move X20, [X31+48]
	038 Move X19, [X31+56]
	039 Move X22, [X31+32]
	040 Move X21, [X31+40]
	041 Move X30, [X31+16]
	042 Add X31, X31, 64
	043 Return X0

Method: System.Void EndInvoke(ref T state, System.IAsyncResult result)

Disassembly:
	0x027249D4 BL 0x1C16CF4
	0x027249D8 ADRP X0, 0x19F9000
	0x027249DC LDR X0, [X0 + 0xA28]
	0x027249E0 BL 0x1C16CF4
	0x027249E4 ADRP X0, 0x19F9000
	0x027249E8 LDR X0, [X0 + 0xA30]
	0x027249EC BL 0x1C16CF4

ISIL:
	001 Move [X31-16], X30
	002 Move X0, X2
	003 Move [X31+8], X1
	004 Add X1, X31, 8
	005 Call 0x1C17CB4
	006 Move X30, [X31+16]
	007 Return 

