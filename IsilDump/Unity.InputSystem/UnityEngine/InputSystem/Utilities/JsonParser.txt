Type: UnityEngine.InputSystem.Utilities.JsonParser

Method: System.Void .ctor(System.String json)

Disassembly:
	0x03757588 MOV W23, W31
	0x0375758C ADD X24, X20, 0x30
	0x03757590 ADD X11, X9, 0x50
	0x03757594 STP X12, X10, [X31]
	0x03757598 ADD X10, X9, 0x28
	0x0375759C ADD X26, X9, 0x18
	0x037575A0 ORR X27, X9, 0xF
	0x037575A4 STP X10, X11, [X31 + 0x10]
	0x037575A8 CMP W23, W8
	0x037575AC B.CS 0x37577D8
	0x037575B0 LDR X0, [X24]
	0x037575B4 CBZ X0, 0x37577DC
	0x037575B8 LDR X8, [X0]
	0x037575BC LDP X29, X22, [X24 - 0x10]
	0x037575C0 LDP X9, X1, [X8 + 0x168]
	0x037575C4 BLR X9
	0x037575C8 LDR X8, [X21]
	0x037575CC MOV X28, X0
	0x037575D0 LDR W9, [X8 + 0xE0]
	0x037575D4 CBNZ W9, 0x37575E4
	0x037575D8 MOV X0, X8
	0x037575DC BL 0x1C16DFC
	0x037575E0 LDR X8, [X21]
	0x037575E4 LDR X9, [X8 + 0xB8]
	0x037575E8 LDR X10, [X9 + 0x8]
	0x037575EC CMP X22, X10
	0x037575F0 B.EQ 0x37576E0

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move [X0], X31
	004 Move [X0+8], X31
	005 Move [X0+16], X31
	006 Compare X1, 0
	007 JumpIfEqual {14}
	008 Move [X0], X1
	009 Move W8, [X1+16]
	010 Move [X0+8], W8
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 Return 
	014 Move X0, 0x9A2000
	015 Move X0, [X0+1320]
	016 Call 0x1C17D08
	017 Call 0x1C17F10
	018 Move X19, X0
	019 Move X0, 0x9EF000
	020 Move X0, [X0+216]
	021 Call 0x1C17D08
	022 Move X1, X0
	023 Move X0, X19
	024 Move X2, X31
	025 Call ArgumentNullException..ctor, X0, X1
	026 Move X0, 0x9EF000
	027 Move X0, [X0+3824]
	028 Call 0x1C17D08
	029 Move X1, X0
	030 Move X0, X19
	031 Call 0x1C17DEC

Method: System.Void Reset()

Disassembly:
	0x03760BAC STR W31, [X8 + 0xC]
	0x03760BB0 STR X0, [X8 + 0x10]
	0x03760BB4 STR W9, [X8]

ISIL:
	001 Move [X0+12], W31
	002 NotImplemented "Instruction STRH not yet implemented."
	003 Return 

Method: System.String ToString()

Disassembly:
	0x03760BB8 STUR V0, [X8 + 0x18]
	0x03760BBC STUR V0, [X8 + 0x28]
	0x03760BC0 STUR V0, [X8 + 0x38]
	0x03760BC4 RET
	0x03760BC8 ADRP X9, 0xFFFFFFFFFD38D000
	0x03760BCC LDR V2, [X9 + 0x898]
	0x03760BD0 MOVI V1.2D, 0x0
	0x03760BD4 STR X31, [X8 + 0x40]
	0x03760BD8 STP V1, V1, [X8 + 0x20]
	0x03760BDC STR V1, [X8 + 0x1]
	0x03760BE0 STP D2, D0, [X8]
	0x03760BE4 RET
	0x03760BE8 STP X30, X23, [X31 - 0x30]!
	0x03760BEC STP X22, X21, [X31 + 0x10]
	0x03760BF0 STP X20, X19, [X31 + 0x20]
	0x03760BF4 MOV X20, X1
	0x03760BF8 MOV X19, X0
	0x03760BFC BL 0x375FD18
	0x03760C00 CBZ X20, 0x3760C8C
	0x03760C04 LDR W22, [X20 + 0x10]
	0x03760C08 LDP W9, W8, [X19 + 0x8]
	0x03760C0C ADD W8, W8, W22
	0x03760C10 CMP W8, W9
	0x03760C14 B.GE 0x3760C78
	0x03760C18 CMP W22, 0x1
	0x03760C1C B.LT 0x3760C6C
	0x03760C20 MOV W21, W31
	0x03760C24 LDR X0, [X19]
	0x03760C28 CBZ X0, 0x3760C8C
	0x03760C2C LDR W8, [X19 + 0xC]
	0x03760C30 MOV X2, X31
	0x03760C34 ADD W1, W21, W8
	0x03760C38 BL 0x3222A1C
	0x03760C3C AND W23, W0, 0xFFFF
	0x03760C40 MOV X0, X20
	0x03760C44 MOV W1, W21
	0x03760C48 MOV X2, X31
	0x03760C4C BL 0x3222A1C
	0x03760C50 CMP W23, W0, UXTH
	0x03760C54 B.NE 0x3760C78
	0x03760C58 ADD W21, W21, 0x1
	0x03760C5C CMP W22, W21
	0x03760C60 B.NE 0x3760C24
	0x03760C64 LDR W8, [X19 + 0xC]
	0x03760C68 ADD W8, W8, W22
	0x03760C6C MOVZ W0, 0x1
	0x03760C70 STR W8, [X19 + 0xC]
	0x03760C74 B 0x3760C7C
	0x03760C78 MOV W0, W31
	0x03760C7C LDP X20, X19, [X31 + 0x20]
	0x03760C80 LDP X22, X21, [X31 + 0x10]
	0x03760C84 LDP X30, X23, [X31], #0x30
	0x03760C88 RET
	0x03760C8C BL 0x1C16F20
	0x03760C90 AND W9, W0, 0x1
	0x03760C94 MOVZ W10, 0x1
	0x03760C98 MOVI V0.2D, 0x0
	0x03760C9C STR W10, [X8]
	0x03760CA0 STRB W9, [X8 + 0x4]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+48], X20
	004 Move [X31+56], X19
	005 Move X20, 0xC81000
	006 Move W8, [X20+3662]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {23}
	012 Move X0, 0x994000
	013 Move X0, [X0+1880]
	014 Call 0x1C17CF4
	015 Move X0, 0x9E7000
	016 Move X0, [X0+664]
	017 Call 0x1C17CF4
	018 Move X0, 0x9C4000
	019 Move X0, [X0+2856]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+3662], W8
	023 Move X8, [X19]
	024 Compare X8, 0
	025 JumpIfEqual {49}
	026 Move X8, 0x994000
	027 Move X8, [X8+1880]
	028 Move W9, [X19+12]
	029 Add X1, X31, 0
	030 Move X0, [X8]
	031 Move [X31], W9
	032 Call 0x1C17E04
	033 Move X8, [X19]
	034 Compare X8, 0
	035 JumpIfEqual {65}
	036 Move W1, [X19+12]
	037 Move X19, 0x9C4000
	038 Move X19, [X19+2856]
	039 Move X20, X0
	040 Move X0, X8
	041 Move X2, X31
	042 Call String.Substring, X0, X1
	043 Move X8, [X19]
	044 Move X2, X0
	045 Move X1, X20
	046 Move X3, X31
	047 Move X0, X8
	048 Call String.Format, X0, X1, X2
	049 Move X9, 0x9E7000
	050 Move V0, [X19]
	051 Move X8, [X19+16]
	052 Move X9, [X9+664]
	053 Add X1, X31, 0
	054 Move [X31], V0
	055 Move [X31+16], X8
	056 Move X0, [X9]
	057 Call 0x1C17E04
	058 Move X1, X31
	059 Call ValueType.ToString, X0
	060 Move X20, [X31+48]
	061 Move X19, [X31+56]
	062 Move X30, [X31+32]
	063 Add X31, X31, 64
	064 Return X0
	065 Call 0x1C17F20

Method: System.Boolean NavigateToProperty(System.String path)

Disassembly:
	0x03757648 BL 0x1C16DFC
	0x0375764C LDR X8, [X21]
	0x03757650 LDR X9, [X8 + 0xB8]
	0x03757654 LDR X10, [X9 + 0x38]
	0x03757658 CMP X22, X10
	0x0375765C B.EQ 0x3757724
	0x03757660 LDR W10, [X8 + 0xE0]
	0x03757664 CBNZ W10, 0x3757678
	0x03757668 MOV X0, X8
	0x0375766C BL 0x1C16DFC
	0x03757670 LDR X8, [X21]
	0x03757674 LDR X9, [X8 + 0xB8]
	0x03757678 LDR X8, [X9 + 0x48]
	0x0375767C CMP X22, X8
	0x03757680 B.EQ 0x3757740
	0x03757684 ADRP X8, 0xC89000
	0x03757688 LDRB W8, [X8 + 0xE49]
	0x0375768C TBNZ X8, 0x0, 0x37576A8
	0x03757690 ADRP X0, 0x99E000
	0x03757694 LDR X0, [X0 + 0x278]
	0x03757698 BL 0x1C16CF4
	0x0375769C ADRP X8, 0xC89000
	0x037576A0 MOVZ W9, 0x1
	0x037576A4 STRB W9, [X8 + 0xE49]
	0x037576A8 CBNZ X29, 0x37576C0
	0x037576AC ADRP X8, 0x99E000
	0x037576B0 LDR X8, [X8 + 0x278]
	0x037576B4 LDR X8, [X8]
	0x037576B8 LDR X8, [X8 + 0xB8]
	0x037576BC LDR X29, [X8]
	0x037576C0 ADRP X8, 0x9EE000
	0x037576C4 LDR X8, [X8 + 0xF48]
	0x037576C8 LDR X0, [X31 + 0x18]
	0x037576CC MOV X1, X29
	0x037576D0 MOV X2, X28
	0x037576D4 LDR X3, [X8]
	0x037576D8 BL 0x217386C
	0x037576DC B 0x3757758
	0x037576E0 LDR X8, [X31 + 0x20]
	0x037576E4 CBZ X8, 0x375771C
	0x037576E8 LDR X2, [X25]
	0x037576EC MOV X0, X27
	0x037576F0 B 0x3757750
	0x037576F4 LDR X8, [X31 + 0x30]
	0x037576F8 CBZ X8, 0x3757738
	0x037576FC LDR X2, [X25]
	0x03757700 MOV X0, X26
	0x03757704 B 0x3757750
	0x03757708 LDR X8, [X31 + 0x40]
	0x0375770C CBZ X8, 0x3757770
	0x03757710 LDR X2, [X25]
	0x03757714 LDR X0, [X31 + 0x10]
	0x03757718 B 0x3757750
	0x0375771C STR X28, [X31 + 0x20]
	0x03757720 B 0x3757758
	0x03757724 LDR X8, [X31 + 0x50]
	0x03757728 CBZ X8, 0x3757778
	0x0375772C LDR X2, [X25]
	0x03757730 LDR X0, [X31 + 0x8]
	0x03757734 B 0x3757750
	0x03757738 STR X28, [X31 + 0x30]
	0x0375773C B 0x3757758
	0x03757740 LDR X8, [X31 + 0x60]
	0x03757744 CBZ X8, 0x3757780
	0x03757748 LDR X2, [X25]
	0x0375774C LDR X0, [X31]
	0x03757750 MOV X1, X28
	0x03757754 BL 0x2172CE4
	0x03757758 LDR W8, [X20 + 0x18]
	0x0375775C ADD W23, W23, 0x1
	0x03757760 ADD X24, X24, 0x18
	0x03757764 CMP W23, W8
	0x03757768 B.LT 0x37575A8
	0x0375776C B 0x3757788
	0x03757770 STR X28, [X31 + 0x40]
	0x03757774 B 0x3757758
	0x03757778 STR X28, [X31 + 0x50]
	0x0375777C B 0x3757758
	0x03757780 STR X28, [X31 + 0x60]
	0x03757784 B 0x3757758
	0x03757788 ADD X1, X31, 0x20
	0x0375778C MOVZ W2, 0x58
	0x03757790 MOV X0, X19
	0x03757794 BL 0x3EB1AC0
	0x03757798 B 0x37577B8
	0x0375779C BL 0x1C16DFC
	0x037577A0 CBNZ X20, 0x3757554
	0x037577A4 MOVI V0.2D, 0x0
	0x037577A8 STR X31, [X19 + 0x50]
	0x037577AC STP V0, V0, [X19 + 0x30]
	0x037577B0 STP V0, V0, [X19 + 0x10]
	0x037577B4 STR V0, [X19]
	0x037577B8 LDP X20, X19, [X31 + 0xD0]
	0x037577BC LDP X22, X21, [X31 + 0xC0]
	0x037577C0 LDP X24, X23, [X31 + 0xB0]
	0x037577C4 LDP X26, X25, [X31 + 0xA0]
	0x037577C8 LDP X28, X27, [X31 + 0x90]
	0x037577CC LDP X29, X30, [X31 + 0x80]
	0x037577D0 ADD X31, X31, 0xE0
	0x037577D4 RET
	0x037577D8 BL 0x1C16F28
	0x037577DC BL 0x1C16F20
	0x037577E0 STR X30, [X31 - 0x20]!
	0x037577E4 STP X20, X19, [X31 + 0x10]
	0x037577E8 ADRP X20, 0xC89000
	0x037577EC LDRB W8, [X20 + 0xE49]
	0x037577F0 MOV X19, X0
	0x037577F4 TBNZ X8, 0x0, 0x375780C
	0x037577F8 ADRP X0, 0x99E000
	0x037577FC LDR X0, [X0 + 0x278]
	0x03757800 BL 0x1C16CF4
	0x03757804 MOVZ W8, 0x1
	0x03757808 STRB W8, [X20 + 0xE49]
	0x0375780C CBNZ X19, 0x3757824
	0x03757810 ADRP X8, 0x99E000
	0x03757814 LDR X8, [X8 + 0x278]
	0x03757818 LDR X8, [X8]
	0x0375781C LDR X8, [X8 + 0xB8]
	0x03757820 LDR X19, [X8]
	0x03757824 MOV X0, X19
	0x03757828 LDP X20, X19, [X31 + 0x10]
	0x0375782C LDR X30, [X31], #0x20
	0x03757830 RET
	0x03757834 SUB X31, X31, 0x50
	0x03757838 STP X30, X25, [X31 + 0x10]
	0x0375783C STP X24, X23, [X31 + 0x20]
	0x03757840 STP X22, X21, [X31 + 0x30]
	0x03757844 STP X20, X19, [X31 + 0x40]
	0x03757848 ADRP X20, 0xC89000
	0x0375784C LDRB W8, [X20 + 0xDDF]
	0x03757850 MOV X19, X0
	0x03757854 TBNZ X8, 0x0, 0x3757878
	0x03757858 ADRP X0, 0x9EE000
	0x0375785C LDR X0, [X0 + 0xF58]
	0x03757860 BL 0x1C16CF4
	0x03757864 ADRP X0, 0x9C4000
	0x03757868 LDR X0, [X0 + 0xEC0]
	0x0375786C BL 0x1C16CF4
	0x03757870 MOVZ W8, 0x1
	0x03757874 STRB W8, [X20 + 0xDDF]
	0x03757878 STR X31, [X31 + 0x8]
	0x0375787C LDR X0, [X19]
	0x03757880 MOV X1, X31
	0x03757884 BL 0x32277A8
	0x03757888 MOV X20, X31
	0x0375788C TBNZ X0, 0x0, 0x37578C4
	0x03757890 ADRP X8, 0x9C4000
	0x03757894 LDR X8, [X8 + 0xEC0]
	0x03757898 LDR X20, [X19]
	0x0375789C LDR X0, [X8]
	0x037578A0 LDR W8, [X0 + 0xE0]
	0x037578A4 CBNZ W8, 0x37578AC
	0x037578A8 BL 0x1C16DFC
	0x037578AC ADD X0, X31, 0x8
	0x037578B0 MOVZ W2, 0x1
	0x037578B4 MOV X1, X20
	0x037578B8 BL 0x3755CF8
	0x037578BC MOV X20, X0
	0x037578C0 STR X0, [X31 + 0x8]
	0x037578C4 LDR X21, [X19 + 0x8]
	0x037578C8 CBZ X21, 0x3757930
	0x037578CC LDR X8, [X21 + 0x18]
	0x037578D0 CMP W8, 0x1
	0x037578D4 B.LT 0x3757930
	0x037578D8 ADRP X24, 0x9C4000
	0x037578DC LDR X24, [X24 + 0xEC0]
	0x037578E0 MOV X22, X31
	0x037578E4 AND X8, X8, 0x0
	0x037578E8 ADD X23, X21, 0x20
	0x037578EC CMP X22, W8, UXTW
	0x037578F0 B.CS 0x3757C88
	0x037578F4 LDR X0, [X24]
	0x037578F8 LDR X20, [X23, X22, LSL #3]
	0x037578FC LDR W8, [X0 + 0xE0]
	0x03757900 CBNZ W8, 0x3757908
	0x03757904 BL 0x1C16DFC
	0x03757908 ADD X0, X31, 0x8
	0x0375790C MOVZ W2, 0x1
	0x03757910 MOV X1, X20
	0x03757914 BL 0x3755CF8
	0x03757918 STR X0, [X31 + 0x8]
	0x0375791C LDR W8, [X21 + 0x18]
	0x03757920 ADD X22, X22, 0x1
	0x03757924 CMP X22, W8, SXTW
	0x03757928 B.LT 0x37578EC
	0x0375792C MOV X20, X0
	0x03757930 LDR X0, [X19 + 0x10]
	0x03757934 MOV X1, X31
	0x03757938 BL 0x32277A8
	0x0375793C TBNZ X0, 0x0, 0x3757974
	0x03757940 ADRP X8, 0x9C4000
	0x03757944 LDR X8, [X8 + 0xEC0]
	0x03757948 LDR X20, [X19 + 0x10]
	0x0375794C LDR X0, [X8]
	0x03757950 LDR W8, [X0 + 0xE0]
	0x03757954 CBNZ W8, 0x375795C
	0x03757958 BL 0x1C16DFC
	0x0375795C ADD X0, X31, 0x8
	0x03757960 MOVZ W2, 0x1
	0x03757964 MOV X1, X20
	0x03757968 BL 0x3755F7C
	0x0375796C MOV X20, X0
	0x03757970 STR X0, [X31 + 0x8]
	0x03757974 LDR X21, [X19 + 0x18]
	0x03757978 CBZ X21, 0x37579E0
	0x0375797C LDR X8, [X21 + 0x18]
	0x03757980 CMP W8, 0x1
	0x03757984 B.LT 0x37579E0
	0x03757988 ADRP X24, 0x9C4000
	0x0375798C LDR X24, [X24 + 0xEC0]
	0x03757990 MOV X22, X31
	0x03757994 AND X8, X8, 0x0
	0x03757998 ADD X23, X21, 0x20
	0x0375799C CMP X22, W8, UXTW
	0x037579A0 B.CS 0x3757C88
	0x037579A4 LDR X0, [X24]
	0x037579A8 LDR X20, [X23, X22, LSL #3]
	0x037579AC LDR W8, [X0 + 0xE0]
	0x037579B0 CBNZ W8, 0x37579B8
	0x037579B4 BL 0x1C16DFC
	0x037579B8 ADD X0, X31, 0x8
	0x037579BC MOVZ W2, 0x1
	0x037579C0 MOV X1, X20
	0x037579C4 BL 0x3755F7C
	0x037579C8 STR X0, [X31 + 0x8]
	0x037579CC LDR W8, [X21 + 0x18]
	0x037579D0 ADD X22, X22, 0x1
	0x037579D4 CMP X22, W8, SXTW
	0x037579D8 B.LT 0x375799C
	0x037579DC MOV X20, X0
	0x037579E0 LDR X0, [X19 + 0x20]
	0x037579E4 MOV X1, X31
	0x037579E8 BL 0x32277A8
	0x037579EC TBNZ X0, 0x0, 0x3757A24
	0x037579F0 ADRP X8, 0x9C4000
	0x037579F4 LDR X8, [X8 + 0xEC0]
	0x037579F8 LDR X20, [X19 + 0x20]
	0x037579FC LDR X0, [X8]
	0x03757A00 LDR W8, [X0 + 0xE0]
	0x03757A04 CBNZ W8, 0x3757A0C
	0x03757A08 BL 0x1C16DFC
	0x03757A0C ADD X0, X31, 0x8
	0x03757A10 MOVZ W2, 0x1
	0x03757A14 MOV X1, X20
	0x03757A18 BL 0x3755FF4
	0x03757A1C MOV X20, X0
	0x03757A20 STR X0, [X31 + 0x8]
	0x03757A24 LDR X21, [X19 + 0x28]
	0x03757A28 CBZ X21, 0x3757A90
	0x03757A2C LDR X8, [X21 + 0x18]
	0x03757A30 CMP W8, 0x1
	0x03757A34 B.LT 0x3757A90
	0x03757A38 ADRP X24, 0x9C4000
	0x03757A3C LDR X24, [X24 + 0xEC0]
	0x03757A40 MOV X22, X31
	0x03757A44 AND X8, X8, 0x0
	0x03757A48 ADD X23, X21, 0x20
	0x03757A4C CMP X22, W8, UXTW
	0x03757A50 B.CS 0x3757C88
	0x03757A54 LDR X0, [X24]
	0x03757A58 LDR X20, [X23, X22, LSL #3]
	0x03757A5C LDR W8, [X0 + 0xE0]
	0x03757A60 CBNZ W8, 0x3757A68
	0x03757A64 BL 0x1C16DFC
	0x03757A68 ADD X0, X31, 0x8
	0x03757A6C MOVZ W2, 0x1
	0x03757A70 MOV X1, X20
	0x03757A74 BL 0x3755FF4
	0x03757A78 STR X0, [X31 + 0x8]
	0x03757A7C LDR W8, [X21 + 0x18]
	0x03757A80 ADD X22, X22, 0x1
	0x03757A84 CMP X22, W8, SXTW
	0x03757A88 B.LT 0x3757A4C
	0x03757A8C MOV X20, X0
	0x03757A90 LDR X0, [X19 + 0x30]
	0x03757A94 MOV X1, X31
	0x03757A98 BL 0x32277A8
	0x03757A9C TBNZ X0, 0x0, 0x3757AD4
	0x03757AA0 ADRP X8, 0x9C4000
	0x03757AA4 LDR X8, [X8 + 0xEC0]
	0x03757AA8 LDR X20, [X19 + 0x30]
	0x03757AAC LDR X0, [X8]
	0x03757AB0 LDR W8, [X0 + 0xE0]
	0x03757AB4 CBNZ W8, 0x3757ABC
	0x03757AB8 BL 0x1C16DFC
	0x03757ABC ADD X0, X31, 0x8
	0x03757AC0 MOVZ W2, 0x1
	0x03757AC4 MOV X1, X20

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+80], X30
	003 Move [X31+88], X25
	004 Move [X31+96], X24
	005 Move [X31+104], X23
	006 Move [X31+112], X22
	007 Move [X31+120], X21
	008 Move [X31+128], X20
	009 Move [X31+136], X19
	010 Move X19, X1
	011 Move X20, X0
	012 Move X0, X1
	013 Move X1, X31
	014 Call String.IsNullOrEmpty, X0
	015 Move TEMP, X0
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {242}
	019 Compare X19, 0
	020 JumpIfEqual {241}
	021 Move W23, [X19+16]
	022 Move W8, 1
	023 Move W1, 123
	024 Move X0, X20
	025 Move [X20+17], W8
	026 Call JsonParser.ParseToken, X0, X1
	027 Move TEMP, X0
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfNotEqual {229}
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move W0, W31
	033 Move W9, [X20+8]
	034 Move W8, [X20+12]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move W24, W31
	037 Move X0, X20
	038 Call JsonParser.SkipWhitespace, X0
	039 Move W8, [X20+8]
	040 Move W1, [X20+12]
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move X0, [X20]
	043 Compare X0, 0
	044 JumpIfEqual {241}
	045 Move X2, X31
	046 Call String.get_Chars, X0, X1
	047 And W8, W0, 0xFFFF
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move W8, [X20+12]
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Add W1, W8, 1
	052 Move [X20+12], W1
	053 Move W25, 1
	054 Move W21, W24
	055 Move X0, X19
	056 Move W1, W21
	057 Move X2, X31
	058 Call String.get_Chars, X0, X1
	059 And W8, W0, 0xFFFF
	060 NotImplemented "Instruction CMP not yet implemented."
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move W22, W0
	063 Move X0, [X20]
	064 Compare X0, 0
	065 JumpIfEqual {241}
	066 Move W1, [X20+12]
	067 Move X2, X31
	068 Call String.get_Chars, X0, X1
	069 And W8, W0, 0xFFFF
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move W8, [X20+12]
	072 Add W21, W21, 1
	073 NotImplemented "Instruction CMP not yet implemented."
	074 NotImplemented "Instruction CSET not yet implemented."
	075 Add W8, W8, 1
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Move [X20+12], W8
	078 Move W21, W23
	079 Move W1, [X20+12]
	080 Move W25, W31
	081 Move W21, W24
	082 Move W8, [X20+8]
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Move X0, [X20]
	085 Compare X0, 0
	086 JumpIfEqual {241}
	087 Move X2, X31
	088 Call String.get_Chars, X0, X1
	089 And W8, W0, 0xFFFF
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Move TEMP, X25
	092 And TEMP, TEMP, 1
	093 Compare TEMP, 1
	094 JumpIfNotEqual {180}
	095 Move X0, X19
	096 Move W1, W21
	097 Move X2, X31
	098 Call String.get_Chars, X0, X1
	099 And W8, W0, 0xFFFF
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Move X0, X19
	102 Move W1, W21
	103 Move X2, X31
	104 Call String.get_Chars, X0, X1
	105 And W8, W0, 0xFFFF
	106 NotImplemented "Instruction CMP not yet implemented."
	107 Move W8, [X20+8]
	108 Move W1, [X20+12]
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Move X0, [X20]
	111 Compare X0, 0
	112 JumpIfEqual {241}
	113 Move X2, X31
	114 Call String.get_Chars, X0, X1
	115 Move W1, [X20+12]
	116 And W8, W0, 0xFFFF
	117 NotImplemented "Instruction CMP not yet implemented."
	118 Move W8, [X20+8]
	119 Add W1, W1, 1
	120 Move [X20+12], W1
	121 NotImplemented "Instruction CMP not yet implemented."
	122 Move W8, [X20+8]
	123 NotImplemented "Instruction CMP not yet implemented."
	124 Move X0, [X20]
	125 Compare X0, 0
	126 JumpIfEqual {241}
	127 Move X2, X31
	128 Call String.get_Chars, X0, X1
	129 And W8, W0, 0xFFFF
	130 NotImplemented "Instruction CMP not yet implemented."
	131 Move W8, [X20+12]
	132 Move X0, X20
	133 Add W8, W8, 1
	134 Move [X20+12], W8
	135 Call JsonParser.SkipToValue, X0
	136 Move TEMP, X0
	137 And TEMP, TEMP, 1
	138 Compare TEMP, 1
	139 JumpIfNotEqual {229}
	140 NotImplemented "Instruction MOVI not yet implemented."
	141 Add X1, X31, 0
	142 Move X0, X20
	143 Move [X31+64], X31
	144 Move [X31+32], V0
	145 Move [X31+40], V0
	146 Move [X31], V0
	147 Move [X31+8], V0
	148 Call JsonParser.ParseValue, X0, X1
	149 Move TEMP, X0
	150 And TEMP, TEMP, 1
	151 Compare TEMP, 1
	152 JumpIfNotEqual {229}
	153 Move X0, X20
	154 Call JsonParser.SkipWhitespace, X0
	155 Move W8, [X20+8]
	156 Move W1, [X20+12]
	157 NotImplemented "Instruction CMP not yet implemented."
	158 Move X0, [X20]
	159 Compare X0, 0
	160 JumpIfEqual {241}
	161 Move X2, X31
	162 Call String.get_Chars, X0, X1
	163 And W8, W0, 0xFFFF
	164 NotImplemented "Instruction CMP not yet implemented."
	165 Move X0, [X20]
	166 Compare X0, 0
	167 JumpIfEqual {241}
	168 Move W1, [X20+12]
	169 Move X2, X31
	170 Call String.get_Chars, X0, X1
	171 And W8, W0, 0xFFFF
	172 NotImplemented "Instruction CMP not yet implemented."
	173 Move W9, [X20+8]
	174 Move W8, [X20+12]
	175 Move W0, W31
	176 Add W8, W8, 1
	177 NotImplemented "Instruction CMP not yet implemented."
	178 Move [X20+12], W8
	179 Move W22, 1
	180 Move W22, W31
	181 Move W8, [X20+12]
	182 Move X0, X20
	183 Add W8, W8, 1
	184 Move [X20+12], W8
	185 Call JsonParser.SkipToValue, X0
	186 Compare W22, 0
	187 JumpIfEqual {230}
	188 Move TEMP, X0
	189 And TEMP, TEMP, 1
	190 Compare TEMP, 1
	191 JumpIfNotEqual {230}
	192 Move X0, X19
	193 Move W1, W21
	194 Move X2, X31
	195 Call String.get_Chars, X0, X1
	196 And W8, W0, 0xFFFF
	197 NotImplemented "Instruction CMP not yet implemented."
	198 Move W1, 123
	199 Move X0, X20
	200 Call JsonParser.ParseToken, X0, X1
	201 Move TEMP, X0
	202 And TEMP, TEMP, 1
	203 Compare TEMP, 1
	204 JumpIfNotEqual {229}
	205 Add W24, W21, 1
	206 Move X0, X19
	207 Move W1, W21
	208 Move X2, X31
	209 Call String.get_Chars, X0, X1
	210 And W8, W0, 0xFFFF
	211 NotImplemented "Instruction CMP not yet implemented."
	212 Add W1, W21, 1
	213 NotImplemented "Instruction CMP not yet implemented."
	214 Move X0, X19
	215 Move X2, X31
	216 Call String.get_Chars, X0, X1
	217 And W8, W0, 0xFFFF
	218 NotImplemented "Instruction CMP not yet implemented."
	219 Add W24, W21, 2
	220 Move W0, 1
	221 NotImplemented "Instruction CMP not yet implemented."
	222 Move [X20+16], W0
	223 Move W24, W21
	224 NotImplemented "Instruction CMP not yet implemented."
	225 Move W0, W31
	226 Move W9, [X20+8]
	227 Move W8, [X20+12]
	228 NotImplemented "Instruction CMP not yet implemented."
	229 Move W0, W31
	230 Move X20, [X31+128]
	231 Move X19, [X31+136]
	232 Move X22, [X31+112]
	233 Move X21, [X31+120]
	234 Move X24, [X31+96]
	235 Move X23, [X31+104]
	236 Move X30, [X31+80]
	237 Move X25, [X31+88]
	238 And W0, W0, 1
	239 Add X31, X31, 144
	240 Return X0
	241 Call 0x1C17F20
	242 Move X0, 0x9A2000
	243 Move X0, [X0+1320]
	244 Call 0x1C17D08
	245 Call 0x1C17F10
	246 Move X19, X0
	247 Move X0, 0x9A8000
	248 Move X0, [X0+288]
	249 Call 0x1C17D08
	250 Move X1, X0
	251 Move X0, X19
	252 Move X2, X31
	253 Call ArgumentNullException..ctor, X0, X1
	254 Move X0, 0x9EF000
	255 Move X0, [X0+3832]
	256 Call 0x1C17D08
	257 Move X1, X0
	258 Move X0, X19
	259 Call 0x1C17DEC
	260 Move X0, 0x9EF000
	261 Move X0, [X0+3840]
	262 Call 0x1C17D08
	263 Move X1, X19
	264 Move X2, X31
	265 Call String.Concat, X0, X1
	266 Move X19, X0
	267 Move X0, 0x9A5000
	268 Move X0, [X0+1400]
	269 Call 0x1C17D08
	270 Call 0x1C17F10
	271 Move X20, X0
	272 Move X0, 0x9A8000
	273 Move X0, [X0+288]
	274 Call 0x1C17D08
	275 Move X2, X0
	276 Move X0, X20
	277 Move X1, X19
	278 Move X3, X31
	279 Call ArgumentException..ctor, X0, X1, X2
	280 Move X0, 0x9EF000
	281 Move X0, [X0+3832]
	282 Call 0x1C17D08
	283 Move X1, X0
	284 Move X0, X20
	285 Call 0x1C17DEC
	286 Move X0, 0x9A6000
	287 Move X0, [X0+1880]
	288 Call 0x1C17D08
	289 Call 0x1C17F10
	290 Move X19, X0
	291 Move X0, 0x9EF000
	292 Move X0, [X0+3848]
	293 Call 0x1C17D08
	294 Move X1, X0
	295 Move X0, X19
	296 Move X2, X31
	297 Call NotImplementedException..ctor, X0, X1

Method: System.Boolean CurrentPropertyHasValueEqualTo(UnityEngine.InputSystem.Utilities.JsonParser/JsonValue expectedValue)

Disassembly:
	0x03757AC8 BL 0x375606C
	0x03757ACC MOV X20, X0
	0x03757AD0 STR X0, [X31 + 0x8]
	0x03757AD4 LDR X21, [X19 + 0x38]
	0x03757AD8 CBZ X21, 0x3757B40
	0x03757ADC LDR X8, [X21 + 0x18]
	0x03757AE0 CMP W8, 0x1
	0x03757AE4 B.LT 0x3757B40
	0x03757AE8 ADRP X24, 0x9C4000
	0x03757AEC LDR X24, [X24 + 0xEC0]
	0x03757AF0 MOV X22, X31
	0x03757AF4 AND X8, X8, 0x0
	0x03757AF8 ADD X23, X21, 0x20
	0x03757AFC CMP X22, W8, UXTW
	0x03757B00 B.CS 0x3757C88
	0x03757B04 LDR X0, [X24]
	0x03757B08 LDR X20, [X23, X22, LSL #3]
	0x03757B0C LDR W8, [X0 + 0xE0]
	0x03757B10 CBNZ W8, 0x3757B18
	0x03757B14 BL 0x1C16DFC
	0x03757B18 ADD X0, X31, 0x8
	0x03757B1C MOVZ W2, 0x1
	0x03757B20 MOV X1, X20
	0x03757B24 BL 0x375606C
	0x03757B28 STR X0, [X31 + 0x8]
	0x03757B2C LDR W8, [X21 + 0x18]
	0x03757B30 ADD X22, X22, 0x1
	0x03757B34 CMP X22, W8, SXTW
	0x03757B38 B.LT 0x3757AFC
	0x03757B3C MOV X20, X0
	0x03757B40 LDR X0, [X19 + 0x40]
	0x03757B44 MOV X1, X31
	0x03757B48 BL 0x32277A8
	0x03757B4C TBNZ X0, 0x0, 0x3757B84
	0x03757B50 ADRP X8, 0x9C4000
	0x03757B54 LDR X8, [X8 + 0xEC0]
	0x03757B58 LDR X20, [X19 + 0x40]
	0x03757B5C LDR X0, [X8]
	0x03757B60 LDR W8, [X0 + 0xE0]
	0x03757B64 CBNZ W8, 0x3757B6C
	0x03757B68 BL 0x1C16DFC
	0x03757B6C ADD X0, X31, 0x8
	0x03757B70 MOVZ W2, 0x1
	0x03757B74 MOV X1, X20
	0x03757B78 BL 0x37560E4
	0x03757B7C MOV X20, X0
	0x03757B80 STR X0, [X31 + 0x8]
	0x03757B84 LDR X21, [X19 + 0x48]
	0x03757B88 CBZ X21, 0x3757BF0
	0x03757B8C LDR X8, [X21 + 0x18]
	0x03757B90 CMP W8, 0x1
	0x03757B94 B.LT 0x3757BF0
	0x03757B98 ADRP X24, 0x9C4000
	0x03757B9C LDR X24, [X24 + 0xEC0]
	0x03757BA0 MOV X22, X31
	0x03757BA4 AND X8, X8, 0x0
	0x03757BA8 ADD X23, X21, 0x20
	0x03757BAC CMP X22, W8, UXTW
	0x03757BB0 B.CS 0x3757C88
	0x03757BB4 LDR X0, [X24]
	0x03757BB8 LDR X20, [X23, X22, LSL #3]
	0x03757BBC LDR W8, [X0 + 0xE0]
	0x03757BC0 CBNZ W8, 0x3757BC8
	0x03757BC4 BL 0x1C16DFC
	0x03757BC8 ADD X0, X31, 0x8
	0x03757BCC MOVZ W2, 0x1
	0x03757BD0 MOV X1, X20
	0x03757BD4 BL 0x37560E4
	0x03757BD8 STR X0, [X31 + 0x8]
	0x03757BDC LDR W8, [X21 + 0x18]
	0x03757BE0 ADD X22, X22, 0x1
	0x03757BE4 CMP X22, W8, SXTW
	0x03757BE8 B.LT 0x3757BAC
	0x03757BEC MOV X20, X0
	0x03757BF0 LDR X21, [X19 + 0x50]
	0x03757BF4 CBZ X21, 0x3757C6C
	0x03757BF8 LDR X8, [X21 + 0x18]
	0x03757BFC CMP W8, 0x1
	0x03757C00 B.LT 0x3757C6C
	0x03757C04 ADRP X24, 0x9C4000
	0x03757C08 ADRP X25, 0x9EE000
	0x03757C0C LDR X24, [X24 + 0xEC0]
	0x03757C10 LDR X25, [X25 + 0xF58]

ISIL:
	001 Subtract X31, X31, 352
	002 Move [X31+288], X29
	003 Move [X31+304], X30
	004 Move [X31+312], X23
	005 Move [X31+320], X22
	006 Move [X31+328], X21
	007 Move [X31+336], X20
	008 Move [X31+344], X19
	009 Move X21, 0xC8A000
	010 Move W8, [X21+3663]
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x9EF000
	018 Move X0, [X0+3856]
	019 Call 0x1C17CF4
	020 Move X0, 0x9EF000
	021 Move X0, [X0+3864]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+3663], W8
	025 NotImplemented "Instruction MOVI not yet implemented."
	026 Move [X31+208], X31
	027 Move [X31+176], V0
	028 Move [X31+184], V0
	029 Move [X31+144], V0
	030 Move [X31+152], V0
	031 Move W21, [X20+12]
	032 Add X1, X31, 144
	033 Move X0, X20
	034 Move [X20+17], W31
	035 Call JsonParser.ParseValue, X0, X1
	036 Move W22, W31
	037 Move [X20+12], W21
	038 Move TEMP, X0
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfNotEqual {89}
	042 Move W8, [X31+144]
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move W8, [X20+16]
	045 Compare W8, 0
	046 JumpIfEqual {77}
	047 Move X20, [X31+192]
	048 Compare X20, 0
	049 JumpIfEqual {99}
	050 Move X23, 0x9EF000
	051 Move X23, [X23+3864]
	052 Move W21, W31
	053 Move W8, [X20+24]
	054 NotImplemented "Instruction CMP not yet implemented."
	055 NotImplemented "Instruction CSET not yet implemented."
	056 Move X2, [X23]
	057 Add X8, X31, 216
	058 Move X0, X20
	059 Move W1, W21
	060 Call List`1<JsonValue>.get_Item, X0, X1
	061 Add X0, X31, 72
	062 Add X1, X31, 216
	063 Move W2, 72
	064 Call 0x3EB2AC0
	065 Add X0, X31, 216
	066 Move W2, 72
	067 Move X1, X19
	068 Call 0x3EB2AC0
	069 Add X0, X31, 72
	070 Add X1, X31, 216
	071 Call JsonValue.Equals, X0, X1
	072 Add W21, W21, 1
	073 Move TEMP, X0
	074 And TEMP, TEMP, 1
	075 Compare TEMP, 1
	076 JumpIfNotEqual {53}
	077 Add X0, X31, 0
	078 Add X1, X31, 144
	079 Move W2, 72
	080 Call 0x3EB2AC0
	081 Add X0, X31, 216
	082 Move W2, 72
	083 Move X1, X19
	084 Call 0x3EB2AC0
	085 Add X0, X31, 0
	086 Add X1, X31, 216
	087 Call JsonValue.Equals, X0, X1
	088 Move W22, W0
	089 And W0, W22, 1
	090 Move X20, [X31+336]
	091 Move X19, [X31+344]
	092 Move X22, [X31+320]
	093 Move X21, [X31+328]
	094 Move X30, [X31+304]
	095 Move X23, [X31+312]
	096 Move X29, [X31+288]
	097 Add X31, X31, 352
	098 Return X0
	099 Call 0x1C17F20

Method: System.Boolean ParseToken(System.Char token)

Disassembly:
	0x03760CA4 STUR V0, [X8 + 0x5]
	0x03760CA8 STUR V0, [X8 + 0x15]
	0x03760CAC STUR V0, [X8 + 0x25]
	0x03760CB0 STUR V0, [X8 + 0x35]
	0x03760CB4 STR W31, [X8 + 0x44]
	0x03760CB8 RET
	0x03760CBC LDP W9, W8, [X0 + 0x8]
	0x03760CC0 CMP W8, W9
	0x03760CC4 CSET W0, GE
	0x03760CC8 RET
	0x03760CCC STR X30, [X31 - 0x30]!
	0x03760CD0 STP X22, X21, [X31 + 0x10]
	0x03760CD4 STP X20, X19, [X31 + 0x20]
	0x03760CD8 ADRP X20, 0xC80000
	0x03760CDC LDRB W8, [X20 + 0xE55]
	0x03760CE0 MOV X19, X0
	0x03760CE4 TBNZ X8, 0x0, 0x3760CFC
	0x03760CE8 ADRP X0, 0x993000
	0x03760CEC LDR X0, [X0 + 0x8F0]
	0x03760CF0 BL 0x1C16CF4
	0x03760CF4 MOVZ W8, 0x1
	0x03760CF8 STRB W8, [X20 + 0xE55]
	0x03760CFC LDRB W8, [X19 + 0x10]
	0x03760D00 CBZ W8, 0x3760D8C
	0x03760D04 ADRP X8, 0x993000
	0x03760D08 LDR X8, [X8 + 0x8F0]
	0x03760D0C LDR X0, [X8]
	0x03760D10 BL 0x1C16F10
	0x03760D14 MOV X1, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W20, W1
	005 Move X19, X0
	006 Call JsonParser.SkipWhitespace, X0
	007 Move W8, [X19+8]
	008 Move W1, [X19+12]
	009 NotImplemented "Instruction CMP not yet implemented."
	010 Move X0, [X19]
	011 Compare X0, 0
	012 JumpIfEqual {31}
	013 Move X2, X31
	014 Call String.get_Chars, X0, X1
	015 And W8, W0, 0xFFFF
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Move W8, [X19+12]
	018 Move X0, X19
	019 Add W8, W8, 1
	020 Move [X19+12], W8
	021 Call JsonParser.SkipWhitespace, X0
	022 Move W9, [X19+8]
	023 Move W8, [X19+12]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 NotImplemented "Instruction CSET not yet implemented."
	026 Move W0, W31
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Return X0
	031 Call 0x1C17F20

Method: System.Boolean ParseValue()

Disassembly:
	0x03760E14 B.NE 0x3760E38
	0x03760E18 LDP X0, X1, [X20]
	0x03760E1C LDP X2, X3, [X19]
	0x03760E20 MOVZ W4, 0x3
	0x03760E24 MOV X5, X31
	0x03760E28 BL 0x3768A00
	0x03760E2C CMP W0, 0x0
	0x03760E30 CSET W0, EQ
	0x03760E34 B 0x3760F58
	0x03760E38 LDR W25, [X19 + 0xC]
	0x03760E3C LDR W26, [X20 + 0xC]
	0x03760E40 MOV W21, W31

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+80], X30
	003 NotImplemented "Instruction MOVI not yet implemented."
	004 Add X1, X31, 0
	005 Move [X31+64], X31
	006 Move [X31+32], V0
	007 Move [X31+40], V0
	008 Move [X31], V0
	009 Move [X31+8], V0
	010 Call JsonParser.ParseValue, X0, X1
	011 Move X30, [X31+80]
	012 And W0, W0, 1
	013 Add X31, X31, 96
	014 Return X0

Method: System.Boolean ParseValue(out UnityEngine.InputSystem.Utilities.JsonParser/JsonValue result)

Disassembly:
	0x03760E44 CMP W25, 0x1
	0x03760E48 B.LT 0x3760F40
	0x03760E4C CMP W26, 0x1
	0x03760E50 MOV W22, W21
	0x03760E54 B.LT 0x3760F44
	0x03760E58 ADRP X27, 0x995000
	0x03760E5C LDR X27, [X27 + 0x170]
	0x03760E60 MOV W22, W31
	0x03760E64 MOV W21, W31
	0x03760E68 MOV X0, X20
	0x03760E6C MOV W1, W22
	0x03760E70 MOV X2, X31
	0x03760E74 BL 0x3768CD4
	0x03760E78 MOV W23, W0
	0x03760E7C AND W24, W0, 0xFFFF
	0x03760E80 MOV X0, X19
	0x03760E84 MOV W1, W21
	0x03760E88 MOV X2, X31
	0x03760E8C BL 0x3768CD4
	0x03760E90 CMP W24, 0x5C
	0x03760E94 MOV W24, W0
	0x03760E98 B.NE 0x3760EBC
	0x03760E9C ADD W22, W22, 0x1
	0x03760EA0 CMP W22, W26
	0x03760EA4 B.EQ 0x3760F38
	0x03760EA8 MOV X0, X20
	0x03760EAC MOV W1, W22
	0x03760EB0 MOV X2, X31
	0x03760EB4 BL 0x3768CD4
	0x03760EB8 MOV W23, W0
	0x03760EBC AND W8, W24, 0xFFFF
	0x03760EC0 CMP W8, 0x5C
	0x03760EC4 B.NE 0x3760EE8
	0x03760EC8 ADD W21, W21, 0x1
	0x03760ECC CMP W21, W25
	0x03760ED0 B.EQ 0x3760F38
	0x03760ED4 MOV X0, X19
	0x03760ED8 MOV W1, W21
	0x03760EDC MOV X2, X31
	0x03760EE0 BL 0x3768CD4
	0x03760EE4 MOV W24, W0
	0x03760EE8 LDR X0, [X27]
	0x03760EEC LDR W8, [X0 + 0xE0]
	0x03760EF0 CBNZ W8, 0x3760EF8
	0x03760EF4 BL 0x1C16DFC
	0x03760EF8 MOV W0, W23
	0x03760EFC MOV X1, X31
	0x03760F00 BL 0x331AD34
	0x03760F04 AND W23, W0, 0xFFFF
	0x03760F08 MOV W0, W24
	0x03760F0C MOV X1, X31
	0x03760F10 BL 0x331AD34
	0x03760F14 CMP W23, W0, UXTH
	0x03760F18 B.NE 0x3760F38
	0x03760F1C ADD W21, W21, 0x1
	0x03760F20 CMP W21, W25
	0x03760F24 ADD W22, W22, 0x1
	0x03760F28 B.GE 0x3760F44
	0x03760F2C CMP W22, W26
	0x03760F30 B.LT 0x3760E68
	0x03760F34 B 0x3760F44
	0x03760F38 MOV W0, W31
	0x03760F3C B 0x3760F58
	0x03760F40 MOV W22, W21
	0x03760F44 CMP W22, W26
	0x03760F48 CSET W8, EQ
	0x03760F4C CMP W21, W25
	0x03760F50 CSET W9, EQ

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 NotImplemented "Instruction MOVI not yet implemented."
	005 Move X19, X1
	006 Move X20, X0
	007 Move [X1+64], X31
	008 Move [X1+32], V0
	009 Move [X1+40], V0
	010 Move [X1], V0
	011 Move [X1+8], V0
	012 Call JsonParser.SkipWhitespace, X0
	013 Move W8, [X20+8]
	014 Move W1, [X20+12]
	015 NotImplemented "Instruction CMP not yet implemented."
	016 Move W0, W31
	017 Move X0, [X20]
	018 Compare X0, 0
	019 JumpIfEqual {77}
	020 Move X2, X31
	021 Call String.get_Chars, X0, X1
	022 And W8, W0, 0xFFFF
	023 NotImplemented "Instruction CMP not yet implemented."
	024 NotImplemented "Instruction CMP not yet implemented."
	025 NotImplemented "Instruction CMP not yet implemented."
	026 NotImplemented "Instruction CMP not yet implemented."
	027 NotImplemented "Instruction CMP not yet implemented."
	028 NotImplemented "Instruction CMP not yet implemented."
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X0, X20
	031 Move X1, X19
	032 Call JsonParser.ParseObjectValue, X0, X1
	033 Move TEMP, X0
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfNotEqual {16}
	037 Move X0, X20
	038 Move X1, X19
	039 Call JsonParser.ParseBooleanValue, X0, X1
	040 Move TEMP, X0
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfNotEqual {16}
	044 Move X0, X20
	045 Move X1, X19
	046 Call JsonParser.ParseNumber, X0, X1
	047 Move TEMP, X0
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfNotEqual {16}
	051 Move X0, X20
	052 Move X1, X19
	053 Call JsonParser.ParseArrayValue, X0, X1
	054 Move TEMP, X0
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfNotEqual {16}
	058 Move X0, X20
	059 Move X1, X19
	060 Call JsonParser.ParseStringValue, X0, X1
	061 Move TEMP, X0
	062 And TEMP, TEMP, 1
	063 Compare TEMP, 1
	064 JumpIfNotEqual {16}
	065 Move X0, X20
	066 Move X1, X19
	067 Call JsonParser.ParseNullValue, X0, X1
	068 Move TEMP, X0
	069 And TEMP, TEMP, 1
	070 Compare TEMP, 1
	071 JumpIfNotEqual {16}
	072 Move W0, 1
	073 Move X20, [X31+16]
	074 Move X19, [X31+24]
	075 Move X30, [X31+32]
	076 Return X0
	077 Call 0x1C17F20

Method: System.Boolean ParseStringValue(out UnityEngine.InputSystem.Utilities.JsonParser/JsonValue result)

Disassembly:
	0x03760F88 MOV X19, X0
	0x03760F8C TBNZ X8, 0x0, 0x3760FA4
	0x03760F90 ADRP X0, 0x9E6000
	0x03760F94 LDR X0, [X0 + 0x2C0]
	0x03760F98 BL 0x1C16CF4
	0x03760F9C MOVZ W8, 0x1
	0x03760FA0 STRB W8, [X21 + 0xE57]
	0x03760FA4 CBZ X20, 0x3760FC0
	0x03760FA8 ADRP X8, 0x9E6000
	0x03760FAC LDR X8, [X8 + 0x2C0]
	0x03760FB0 LDR X9, [X20]
	0x03760FB4 LDR X8, [X8]
	0x03760FB8 CMP X9, X8
	0x03760FBC B.EQ 0x3760FC8
	0x03760FC0 MOV W0, W31
	0x03760FC4 B 0x3760FEC
	0x03760FC8 MOV X0, X20
	0x03760FCC BL 0x1C16E08
	0x03760FD0 LDR V0, [X0]
	0x03760FD4 LDR X8, [X0 + 0x10]
	0x03760FD8 ADD X1, X31, 0x0
	0x03760FDC MOV X0, X19
	0x03760FE0 STR V0, [X31]
	0x03760FE4 STR X8, [X31 + 0x10]
	0x03760FE8 BL 0x3760DC8
	0x03760FEC LDP X20, X19, [X31 + 0x30]
	0x03760FF0 LDP X30, X21, [X31 + 0x20]
	0x03760FF4 AND W0, W0, 0x1
	0x03760FF8 ADD X31, X31, 0x40
	0x03760FFC RET
	0x03761000 STP X30, X21, [X31 - 0x20]!
	0x03761004 STP X20, X19, [X31 + 0x10]
	0x03761008 ADRP X21, 0xC7F000
	0x0376100C ADRP X20, 0x992000
	0x03761010 LDRB W8, [X21 + 0xE58]
	0x03761014 LDR X20, [X20 + 0xB58]
	0x03761018 MOV X19, X0
	0x0376101C TBNZ X8, 0x0, 0x3761034
	0x03761020 ADRP X0, 0x992000
	0x03761024 LDR X0, [X0 + 0xB58]
	0x03761028 BL 0x1C16CF4
	0x0376102C MOVZ W8, 0x1
	0x03761030 STRB W8, [X21 + 0xE58]
	0x03761034 MOV X0, X19
	0x03761038 MOV X1, X31
	0x0376103C BL 0x3768B64
	0x03761040 LDR X8, [X20]
	0x03761044 MOV W20, W0
	0x03761048 LDR W9, [X8 + 0xE0]
	0x0376104C CBNZ W9, 0x3761058
	0x03761050 MOV X0, X8
	0x03761054 BL 0x1C16DFC
	0x03761058 ADD X0, X19, 0x10
	0x0376105C MOV X1, X31
	0x03761060 BL 0x33176B4
	0x03761064 MOVZ W8, 0x18D
	0x03761068 MUL W8, W20, W8
	0x0376106C LDP X20, X19, [X31 + 0x10]
	0x03761070 EOR W0, W0, W8, 0x0
	0x03761074 LDP X30, X21, [X31], #0x20
	0x03761078 RET
	0x0376107C SUB X31, X31, 0x30
	0x03761080 STR X30, [X31 + 0x20]
	0x03761084 LDR X8, [X1 + 0x10]
	0x03761088 LDR V0, [X1]
	0x0376108C ADD X1, X31, 0x0
	0x03761090 STR X8, [X31 + 0x10]
	0x03761094 STR V0, [X31]
	0x03761098 BL 0x3760DC8
	0x0376109C LDR X30, [X31 + 0x20]
	0x037610A0 AND W0, W0, 0x1
	0x037610A4 ADD X31, X31, 0x30
	0x037610A8 RET
	0x037610AC SUB X31, X31, 0x30
	0x037610B0 STR X30, [X31 + 0x20]
	0x037610B4 LDR X8, [X1 + 0x10]
	0x037610B8 LDR V0, [X1]
	0x037610BC ADD X1, X31, 0x0
	0x037610C0 STR X8, [X31 + 0x10]
	0x037610C4 STR V0, [X31]
	0x037610C8 BL 0x3760DC8
	0x037610CC LDR X30, [X31 + 0x20]
	0x037610D0 ORN W8, W31, W0, 0x0
	0x037610D4 AND W0, W8, 0x1
	0x037610D8 ADD X31, X31, 0x30
	0x037610DC RET
	0x037610E0 STP X30, X19, [X31 - 0x10]!
	0x037610E4 MOV X1, X31
	0x037610E8 MOV X19, X8
	0x037610EC BL 0x3768CAC
	0x037610F0 STP X0, X1, [X19]
	0x037610F4 STR X31, [X19 + 0x10]
	0x037610F8 LDP X30, X19, [X31], #0x10
	0x037610FC RET
	0x03761100 STR D8, [X31 - 0x20]!
	0x03761104 STR X30, [X31 + 0x8]
	0x03761108 STP X20, X19, [X31 + 0x10]
	0x0376110C ADRP X20, 0xC7F000
	0x03761110 LDRB W8, [X20 + 0xE59]
	0x03761114 MOV X19, X0

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+112], X30
	003 Move [X31+128], X24
	004 Move [X31+136], X23
	005 Move [X31+144], X22
	006 Move [X31+152], X21
	007 Move [X31+160], X20
	008 Move [X31+168], X19
	009 NotImplemented "Instruction MRS not yet implemented."
	010 Move X8, [X22+40]
	011 NotImplemented "Instruction MOVI not yet implemented."
	012 Move X19, X1
	013 Move X20, X0
	014 Move [X31+104], X8
	015 Move [X1+64], X31
	016 Move [X1+32], V0
	017 Move [X1+40], V0
	018 Move [X1], V0
	019 Move [X1+8], V0
	020 Call JsonParser.SkipWhitespace, X0
	021 Move W8, [X20+8]
	022 Move W1, [X20+12]
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move X0, [X20]
	025 Compare X0, 0
	026 JumpIfEqual {109}
	027 Move X2, X31
	028 Call String.get_Chars, X0, X1
	029 And W8, W0, 0xFFFF
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move W8, [X20+8]
	032 Move W23, [X20+12]
	033 Add W21, W23, 1
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move [X20+12], W21
	036 Move W24, W31
	037 Move W1, W21
	038 Move X0, [X20]
	039 Compare X0, 0
	040 JumpIfEqual {109}
	041 Move X2, X31
	042 Call String.get_Chars, X0, X1
	043 And W8, W0, 0xFFFF
	044 NotImplemented "Instruction CMP not yet implemented."
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move W8, [X20+8]
	047 Move W9, [X20+12]
	048 Move W8, [X20+8]
	049 Move W9, [X20+12]
	050 Add W9, W9, 1
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move [X20+12], W9
	053 Move W24, 1
	054 Add W1, W9, 1
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move [X20+12], W1
	057 Move W0, W31
	058 Move X8, [X22+40]
	059 Move X9, [X31+104]
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move X20, [X31+160]
	062 Move X19, [X31+168]
	063 Move X22, [X31+144]
	064 Move X21, [X31+152]
	065 Move X24, [X31+128]
	066 Move X23, [X31+136]
	067 Move X30, [X31+112]
	068 Add X31, X31, 176
	069 Return X0
	070 Move W8, [X20+12]
	071 Move X1, [X20]
	072 Add X0, X31, 0
	073 Move W2, W21
	074 Add W8, W8, 1
	075 Move [X20+12], W8
	076 Subtract W8, W8, W23
	077 Subtract W3, W8, 2
	078 Move X4, X31
	079 Move [X31], X31
	080 Move [X31+8], X31
	081 Call Substring..ctor, X0, X1, X2, X3
	082 Move V0, [X31]
	083 Move [X31+64], X31
	084 Move [X31+72], X31
	085 Move [X31+80], W31
	086 And W8, W24, 1
	087 Move [X31+84], V0
	088 Move W9, [X31+96]
	089 Move V0, [X31+64]
	090 Move V1, [X31+80]
	091 Move W0, 1
	092 Move [X31+48], W9
	093 Move W9, 4
	094 Move [X31+16], V0
	095 Move [X31+24], V1
	096 Move [X19], W9
	097 Move V0, [X31+16]
	098 Move V1, [X31+32]
	099 Move W9, [X31+48]
	100 Move [X19+40], W8
	101 Move [X19+41], W31
	102 Move [X19+44], W31
	103 Move [X19+56], X31
	104 Move [X19+64], X31
	105 Move [X19+48], X31
	106 Move [X19+36], W9
	107 Move [X19+20], V1
	108 Move [X19+4], V0
	109 Call 0x1C17F20
	110 Call 0x3EB2B20

Method: System.Boolean ParseArrayValue(out UnityEngine.InputSystem.Utilities.JsonParser/JsonValue result)

Disassembly:
	0x03761118 TBNZ X8, 0x0, 0x3761130
	0x0376111C ADRP X0, 0x99B000
	0x03761120 LDR X0, [X0 + 0x9E8]
	0x03761124 BL 0x1C16CF4
	0x03761128 MOVZ W8, 0x1
	0x0376112C STRB W8, [X20 + 0xE59]
	0x03761130 LDR W8, [X19]
	0x03761134 SUB W8, W8, 0x1
	0x03761138 CMP W8, 0x3
	0x0376113C B.HI 0x3761164
	0x03761140 ADRP X9, 0xFFFFFFFFFD436000
	0x03761144 ADD X9, X9, 0x87B
	0x03761148 ADR X10, 0x10
	0x0376114C LDRB W11, [X9, X8, LSL]
	0x03761150 ADD X10, X10, X11, 0x2, LSL
	0x03761154 BR X10
	0x03761158 LDRB W8, [X19 + 0x4]
	0x0376115C CMP W8, 0x0
	0x03761160 B 0x37611EC
	0x03761164 MOV W0, W31
	0x03761168 B 0x37611F0
	0x0376116C ADRP X20, 0xC7F000
	0x03761170 LDRB W8, [X20 + 0xE7A]
	0x03761174 LDR V8, [X19 + 0x8]
	0x03761178 CBNZ W8, 0x3761190
	0x0376117C ADRP X0, 0x992000
	0x03761180 LDR X0, [X0 + 0x5A8]
	0x03761184 BL 0x1C16CF4
	0x03761188 MOVZ W8, 0x1
	0x0376118C STRB W8, [X20 + 0xE7A]
	0x03761190 ADRP X8, 0x992000
	0x03761194 LDR X8, [X8 + 0x5A8]
	0x03761198 LDR X0, [X8]
	0x0376119C LDR W8, [X0 + 0xE0]
	0x037611A0 CBNZ W8, 0x37611A8
	0x037611A4 BL 0x1C16DFC
	0x037611A8 FABS D8, D8
	0x037611AC FMOV D0, X31
	0x037611B0 MOV V1.16B, V8.16B
	0x037611B4 MOV X0, X31
	0x037611B8 BL 0x337EDC0
	0x037611BC ADRP X8, 0xFFFFFFFFFD38C000
	0x037611C0 LDR V1, [X8 + 0xBC8]
	0x037611C4 MOVZ X8, 0x8
	0x037611C8 MOV X0, X31
	0x037611CC FMUL D0, D0, D1
	0x037611D0 FMOV D1, X8
	0x037611D4 BL 0x337EDC0
	0x037611D8 FCMP D8, D0
	0x037611DC CSET W0, MI
	0x037611E0 B 0x37611F0
	0x037611E4 LDR X8, [X19 + 0x10]
	0x037611E8 CMP X8, 0x0
	0x037611EC CSET W0, NE
	0x037611F0 LDP X20, X19, [X31 + 0x10]
	0x037611F4 LDR X30, [X31 + 0x8]
	0x037611F8 LDR V8, [X31], #0x20
	0x037611FC RET
	0x03761200 MOV X0, X19
	0x03761204 BL 0x3761240
	0x03761208 ADRP X8, 0x99B000
	0x0376120C LDR X8, [X8 + 0x9E8]
	0x03761210 MOV X19, X0
	0x03761214 LDR X8, [X8]
	0x03761218 LDR W9, [X8 + 0xE0]
	0x0376121C CBNZ W9, 0x3761228
	0x03761220 MOV X0, X8
	0x03761224 BL 0x1C16DFC
	0x03761228 MOV X0, X19
	0x0376122C LDP X20, X19, [X31 + 0x10]
	0x03761230 LDR X30, [X31 + 0x8]
	0x03761234 MOV X1, X31
	0x03761238 LDR V8, [X31], #0x20
	0x0376123C B 0x331E48C
	0x03761240 SUB X31, X31, 0x90
	0x03761244 STR X30, [X31 + 0x50]
	0x03761248 STP X24, X23, [X31 + 0x60]
	0x0376124C STP X22, X21, [X31 + 0x70]
	0x03761250 STP X20, X19, [X31 + 0x80]
	0x03761254 ADRP X20, 0xC7F000
	0x03761258 LDRB W8, [X20 + 0xE5C]
	0x0376125C MOV X19, X0
	0x03761260 TBNZ X8, 0x0, 0x3761344
	0x03761264 ADRP X0, 0x992000
	0x03761268 LDR X0, [X0 + 0xB58]
	0x0376126C BL 0x1C16CF4
	0x03761270 ADRP X0, 0x994000
	0x03761274 LDR X0, [X0 + 0xC48]
	0x03761278 BL 0x1C16CF4
	0x0376127C ADRP X0, 0x9E5000
	0x03761280 LDR X0, [X0 + 0x2C8]
	0x03761284 BL 0x1C16CF4
	0x03761288 ADRP X0, 0x9E5000
	0x0376128C LDR X0, [X0 + 0x2D0]
	0x03761290 BL 0x1C16CF4
	0x03761294 ADRP X0, 0x9E5000
	0x03761298 LDR X0, [X0 + 0x2D8]
	0x0376129C BL 0x1C16CF4
	0x037612A0 ADRP X0, 0x9E5000
	0x037612A4 LDR X0, [X0 + 0x2E0]
	0x037612A8 BL 0x1C16CF4
	0x037612AC ADRP X0, 0x9BD000
	0x037612B0 LDR X0, [X0 + 0x8B8]
	0x037612B4 BL 0x1C16CF4
	0x037612B8 ADRP X0, 0x9E5000
	0x037612BC LDR X0, [X0 + 0x2E8]
	0x037612C0 BL 0x1C16CF4
	0x037612C4 ADRP X0, 0x9E5000
	0x037612C8 LDR X0, [X0 + 0x2F0]
	0x037612CC BL 0x1C16CF4
	0x037612D0 ADRP X0, 0x9E5000
	0x037612D4 LDR X0, [X0 + 0x2F8]
	0x037612D8 BL 0x1C16CF4
	0x037612DC ADRP X0, 0x9BF000
	0x037612E0 LDR X0, [X0 + 0x360]
	0x037612E4 BL 0x1C16CF4
	0x037612E8 ADRP X0, 0x99D000
	0x037612EC LDR X0, [X0 + 0x6D8]
	0x037612F0 BL 0x1C16CF4
	0x037612F4 ADRP X0, 0x9C3000
	0x037612F8 LDR X0, [X0 + 0xC90]
	0x037612FC BL 0x1C16CF4
	0x03761300 ADRP X0, 0x992000
	0x03761304 LDR X0, [X0 + 0x830]
	0x03761308 BL 0x1C16CF4
	0x0376130C ADRP X0, 0x9B9000
	0x03761310 LDR X0, [X0 + 0x278]
	0x03761314 BL 0x1C16CF4
	0x03761318 ADRP X0, 0x994000
	0x0376131C LDR X0, [X0 + 0x3A0]
	0x03761320 BL 0x1C16CF4
	0x03761324 ADRP X0, 0x992000
	0x03761328 LDR X0, [X0 + 0xEC8]
	0x0376132C BL 0x1C16CF4
	0x03761330 ADRP X0, 0x992000
	0x03761334 LDR X0, [X0 + 0x848]
	0x03761338 BL 0x1C16CF4
	0x0376133C MOVZ W8, 0x1
	0x03761340 STRB W8, [X20 + 0xE5C]
	0x03761344 LDR W8, [X19]
	0x03761348 CMP W8, 0x7
	0x0376134C B.HI 0x3761420
	0x03761350 ADRP X9, 0xFFFFFFFFFD436000
	0x03761354 ADD X9, X9, 0x87F
	0x03761358 ADR X10, 0x10
	0x0376135C LDRB W11, [X9, X8, LSL]
	0x03761360 ADD X10, X10, X11, 0x2, LSL
	0x03761364 BR X10
	0x03761368 ADRP X8, 0x992000
	0x0376136C LDR X8, [X8 + 0x830]
	0x03761370 B 0x3761690
	0x03761374 ADRP X8, 0x994000
	0x03761378 LDR X8, [X8 + 0xC48]
	0x0376137C ADD X19, X19, 0x8
	0x03761380 LDR X0, [X8]
	0x03761384 LDR W8, [X0 + 0xE0]
	0x03761388 CBNZ W8, 0x3761390
	0x0376138C BL 0x1C16DFC
	0x03761390 MOV X0, X31
	0x03761394 BL 0x3338524
	0x03761398 MOV X1, X0
	0x0376139C MOV X0, X19
	0x037613A0 LDP X20, X19, [X31 + 0x80]
	0x037613A4 LDP X22, X21, [X31 + 0x70]
	0x037613A8 LDP X24, X23, [X31 + 0x60]
	0x037613AC LDR X30, [X31 + 0x50]
	0x037613B0 MOV X2, X31
	0x037613B4 ADD X31, X31, 0x90
	0x037613B8 B 0x33662E0
	0x037613BC ADRP X8, 0x994000
	0x037613C0 LDR X8, [X8 + 0xC48]
	0x037613C4 ADD X19, X19, 0x10
	0x037613C8 LDR X0, [X8]
	0x037613CC LDR W8, [X0 + 0xE0]

ISIL:
	001 Subtract X31, X31, 368
	002 Move [X31+304], X29
	003 Move [X31+312], X30
	004 Move [X31+320], X24
	005 Move [X31+328], X23
	006 Move [X31+336], X22
	007 Move [X31+344], X21
	008 Move [X31+352], X20
	009 Move [X31+360], X19
	010 Move X21, 0xC80000
	011 Move W8, [X21+3664]
	012 Move X19, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0x9E6000
	019 Move X0, [X0+672]
	020 Call 0x1C17CF4
	021 Move X0, 0x9E6000
	022 Move X0, [X0+680]
	023 Call 0x1C17CF4
	024 Move X0, 0x9E6000
	025 Move X0, [X0+688]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+3664], W8
	029 NotImplemented "Instruction MOVI not yet implemented."
	030 Move X0, X20
	031 Move [X31+144], X31
	032 Move [X31+112], V0
	033 Move [X31+120], V0
	034 Move [X31+80], V0
	035 Move [X31+88], V0
	036 Move [X19+64], X31
	037 Move [X19+32], V0
	038 Move [X19+40], V0
	039 Move [X19], V0
	040 Move [X19+8], V0
	041 Call JsonParser.SkipWhitespace, X0
	042 Move W8, [X20+8]
	043 Move W1, [X20+12]
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move X0, [X20]
	046 Compare X0, 0
	047 JumpIfEqual {189}
	048 Move X2, X31
	049 Call String.get_Chars, X0, X1
	050 And W8, W0, 0xFFFF
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move W9, [X20+8]
	053 Move W8, [X20+12]
	054 Add W1, W8, 1
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move [X20+12], W1
	057 Move W0, W31
	058 Move X20, [X31+352]
	059 Move X19, [X31+360]
	060 Move X22, [X31+336]
	061 Move X21, [X31+344]
	062 Move X24, [X31+320]
	063 Move X23, [X31+328]
	064 Move X29, [X31+304]
	065 Move X30, [X31+312]
	066 Add X31, X31, 368
	067 Return X0
	068 Move X0, [X20]
	069 Compare X0, 0
	070 JumpIfEqual {189}
	071 Move X2, X31
	072 Call String.get_Chars, X0, X1
	073 And W8, W0, 0xFFFF
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move W8, 5
	076 NotImplemented "Instruction MOVI not yet implemented."
	077 Move [X19+68], W31
	078 Move [X19], W8
	079 Move [X19+4], V0
	080 Move [X19+20], V0
	081 Move [X19+36], V0
	082 Move [X19+52], V0
	083 Move W8, [X20+12]
	084 Add W8, W8, 1
	085 Move [X20+12], W8
	086 Move W0, 1
	087 Move W8, [X20+17]
	088 Compare W8, 0
	089 JumpIfEqual {91}
	090 Move X21, X31
	091 Move X8, 0x9E6000
	092 Move X8, [X8+688]
	093 Move X0, [X8]
	094 Call 0x1C17F10
	095 Move X8, 0x9E6000
	096 Move X8, [X8+680]
	097 Move X21, X0
	098 Move X1, [X8]
	099 Call List`1<JsonValue>..ctor, X0
	100 Move W9, [X20+8]
	101 Move W8, [X20+12]
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Move X24, 0x9E6000
	104 Move X24, [X24+672]
	105 Move W23, 72
	106 Add X1, X31, 80
	107 Move X0, X20
	108 Call JsonParser.ParseValue, X0, X1
	109 Move TEMP, X0
	110 And TEMP, TEMP, 1
	111 Compare TEMP, 1
	112 JumpIfNotEqual {57}
	113 Move W8, [X20+17]
	114 Compare W8, 0
	115 JumpIfNotEqual {154}
	116 Add X0, X31, 8
	117 Add X1, X31, 80
	118 Move W2, 72
	119 Call 0x3EB2AC0
	120 Compare X21, 0
	121 JumpIfEqual {189}
	122 Move X22, [X24]
	123 Add X0, X31, 160
	124 Add X1, X31, 8
	125 Move W2, 72
	126 Call 0x3EB2AC0
	127 Move W9, [X21+28]
	128 Move X8, [X21+16]
	129 Add W9, W9, 1
	130 Move [X21+28], W9
	131 Compare X8, 0
	132 JumpIfEqual {189}
	133 NotImplemented "Instruction LDRSW not yet implemented."
	134 Move W10, [X8+24]
	135 NotImplemented "Instruction CMP not yet implemented."
	136 NotImplemented "Instruction MADD not yet implemented."
	137 Add W10, W9, 1
	138 Add X0, X8, 32
	139 Add X1, X31, 160
	140 Move W2, 72
	141 Move [X21+24], W10
	142 Call 0x3EB2AC0
	143 Move X8, [X22+32]
	144 Add X0, X31, 232
	145 Add X1, X31, 160
	146 Move W2, 72
	147 Move X8, [X8+192]
	148 Move X22, [X8+112]
	149 Call 0x3EB2AC0
	150 Add X1, X31, 232
	151 Move X0, X21
	152 Move X2, X22
	153 Call List`1<JsonValue>.AddWithResize, X0, X1
	154 Move X0, X20
	155 Call JsonParser.SkipWhitespace, X0
	156 Move W8, [X20+8]
	157 Move W1, [X20+12]
	158 NotImplemented "Instruction CMP not yet implemented."
	159 Move X0, [X20]
	160 Compare X0, 0
	161 JumpIfEqual {189}
	162 Move X2, X31
	163 Call String.get_Chars, X0, X1
	164 And W8, W0, 0xFFFF
	165 NotImplemented "Instruction CMP not yet implemented."
	166 NotImplemented "Instruction CMP not yet implemented."
	167 Move W8, [X20+12]
	168 Move W8, [X20+12]
	169 Add W8, W8, 1
	170 Move [X20+12], W8
	171 Move W9, [X20+8]
	172 Move W0, W31
	173 NotImplemented "Instruction CMP not yet implemented."
	174 Move W8, [X20+12]
	175 Move W9, [X20+17]
	176 Add W8, W8, 1
	177 Move [X20+12], W8
	178 Compare W9, 0
	179 JumpIfNotEqual {86}
	180 Move W8, 5
	181 NotImplemented "Instruction MOVI not yet implemented."
	182 Move [X19+56], X31
	183 Move [X19+64], X31
	184 Move [X19+48], X21
	185 Move [X19], W8
	186 Move [X19+4], V0
	187 Move [X19+20], V0
	188 Move [X19+2], V0
	189 Call 0x1C17F20

Method: System.Boolean ParseObjectValue(out UnityEngine.InputSystem.Utilities.JsonParser/JsonValue result)

Disassembly:
	0x037613D0 CBNZ W8, 0x37613D8
	0x037613D4 BL 0x1C16DFC
	0x037613D8 MOV X0, X31
	0x037613DC BL 0x3338524
	0x037613E0 MOV X1, X0
	0x037613E4 MOV X0, X19
	0x037613E8 LDP X20, X19, [X31 + 0x80]
	0x037613EC LDP X22, X21, [X31 + 0x70]
	0x037613F0 LDP X24, X23, [X31 + 0x60]
	0x037613F4 LDR X30, [X31 + 0x50]
	0x037613F8 MOV X2, X31
	0x037613FC ADD X31, X31, 0x90
	0x03761400 B 0x337CC98
	0x03761404 ADD X0, X19, 0x18
	0x03761408 LDP X20, X19, [X31 + 0x80]
	0x0376140C LDP X22, X21, [X31 + 0x70]
	0x03761410 LDP X24, X23, [X31 + 0x60]
	0x03761414 LDR X30, [X31 + 0x50]
	0x03761418 ADD X31, X31, 0x90
	0x0376141C B 0x3760CCC
	0x03761420 ADD X0, X31, 0x8
	0x03761424 MOVZ W2, 0x48
	0x03761428 MOV X1, X19
	0x0376142C BL 0x3EB1AC0
	0x03761430 ADRP X8, 0x9BD000
	0x03761434 LDR X8, [X8 + 0x8B8]
	0x03761438 ADD X1, X31, 0x8
	0x0376143C LDR X0, [X8]
	0x03761440 BL 0x1C16E04
	0x03761444 MOV X1, X31
	0x03761448 BL 0x33D5650
	0x0376144C B 0x3761694
	0x03761450 ADRP X8, 0x992000
	0x03761454 LDR X8, [X8 + 0xB58]
	0x03761458 ADD X19, X19, 0x4
	0x0376145C LDR X0, [X8]
	0x03761460 LDR W8, [X0 + 0xE0]
	0x03761464 CBNZ W8, 0x376146C
	0x03761468 BL 0x1C16DFC
	0x0376146C MOV X0, X19
	0x03761470 LDP X20, X19, [X31 + 0x80]
	0x03761474 LDP X22, X21, [X31 + 0x70]
	0x03761478 LDP X24, X23, [X31 + 0x60]
	0x0376147C LDR X30, [X31 + 0x50]
	0x03761480 MOV X1, X31
	0x03761484 ADD X31, X31, 0x90
	0x03761488 B 0x33176C4
	0x0376148C LDR X19, [X19 + 0x30]
	0x03761490 CBZ X19, 0x376167C
	0x03761494 ADRP X24, 0x9E5000
	0x03761498 LDR X24, [X24 + 0x2F8]
	0x0376149C LDR X0, [X24]
	0x037614A0 LDR W8, [X0 + 0xE0]
	0x037614A4 CBNZ W8, 0x37614B0
	0x037614A8 BL 0x1C16DFC
	0x037614AC LDR X0, [X24]
	0x037614B0 LDR X8, [X0 + 0xB8]
	0x037614B4 ADRP X9, 0x994000
	0x037614B8 LDR X9, [X9 + 0x3A0]
	0x037614BC LDR X22, [X8 + 0x8]
	0x037614C0 ADRP X8, 0x992000
	0x037614C4 LDR X21, [X9]
	0x037614C8 LDR X8, [X8 + 0xEC8]
	0x037614CC LDR X20, [X8]
	0x037614D0 CBNZ X22, 0x3761524
	0x037614D4 LDR W8, [X0 + 0xE0]
	0x037614D8 CBNZ W8, 0x37614E4
	0x037614DC BL 0x1C16DFC
	0x037614E0 LDR X0, [X24]
	0x037614E4 ADRP X9, 0x9E5000
	0x037614E8 LDR X8, [X0 + 0xB8]
	0x037614EC LDR X9, [X9 + 0x2D8]
	0x037614F0 LDR X23, [X8]
	0x037614F4 LDR X0, [X9]
	0x037614F8 BL 0x1C16F10
	0x037614FC ADRP X8, 0x9E5000
	0x03761500 LDR X8, [X8 + 0x2E8]
	0x03761504 MOV X1, X23
	0x03761508 MOV X3, X31
	0x0376150C MOV X22, X0
	0x03761510 LDR X2, [X8]
	0x03761514 BL 0x2D355D0
	0x03761518 LDR X8, [X24]
	0x0376151C LDR X8, [X8 + 0xB8]
	0x03761520 STR X22, [X8 + 0x8]
	0x03761524 ADRP X8, 0x9E5000
	0x03761528 LDR X8, [X8 + 0x2C8]
	0x0376152C MOV X0, X19
	0x03761530 MOV X1, X22
	0x03761534 LDR X2, [X8]

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+160], X30
	003 Move [X31+176], X20
	004 Move [X31+184], X19
	005 NotImplemented "Instruction MOVI not yet implemented."
	006 Move X20, X1
	007 Move [X31+144], X31
	008 Move [X31+64], X31
	009 Move [X31+112], V0
	010 Move [X31+120], V0
	011 Move [X31+80], V0
	012 Move [X31+88], V0
	013 Move [X31+32], V0
	014 Move [X31+40], V0
	015 Move [X31], V0
	016 Move [X31+8], V0
	017 Move [X1+64], X31
	018 Move [X1+32], V0
	019 Move [X1+40], V0
	020 Move [X1], V0
	021 Move [X1+8], V0
	022 Move W1, 123
	023 Move X19, X0
	024 Call JsonParser.ParseToken, X0, X1
	025 Move TEMP, X0
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfNotEqual {51}
	029 Move W8, [X19+8]
	030 Move W1, [X19+12]
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move X0, [X19]
	033 Compare X0, 0
	034 JumpIfEqual {111}
	035 Move X2, X31
	036 Call String.get_Chars, X0, X1
	037 And W8, W0, 0xFFFF
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move W8, 6
	040 NotImplemented "Instruction MOVI not yet implemented."
	041 Move [X20+68], W31
	042 Move [X20], W8
	043 Move [X20+4], V0
	044 Move [X20+20], V0
	045 Move [X20+36], V0
	046 Move [X20+52], V0
	047 Move W8, [X19+12]
	048 Move W0, 1
	049 Add W8, W8, 1
	050 Move [X19+12], W8
	051 Move W0, W31
	052 Move X20, [X31+176]
	053 Move X19, [X31+184]
	054 Move X30, [X31+160]
	055 Add X31, X31, 192
	056 Return X0
	057 Move W8, [X19+8]
	058 Move W1, [X19+12]
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Add X1, X31, 80
	061 Move X0, X19
	062 Call JsonParser.ParseStringValue, X0, X1
	063 Move TEMP, X0
	064 And TEMP, TEMP, 1
	065 Compare TEMP, 1
	066 JumpIfNotEqual {51}
	067 Move X0, X19
	068 Call JsonParser.SkipToValue, X0
	069 Move TEMP, X0
	070 And TEMP, TEMP, 1
	071 Compare TEMP, 1
	072 JumpIfNotEqual {51}
	073 Add X1, X31, 0
	074 Move X0, X19
	075 Call JsonParser.ParseValue, X0, X1
	076 Move TEMP, X0
	077 And TEMP, TEMP, 1
	078 Compare TEMP, 1
	079 JumpIfNotEqual {51}
	080 Move W8, [X19+17]
	081 Compare W8, 0
	082 JumpIfEqual {98}
	083 Move X0, X19
	084 Call JsonParser.SkipWhitespace, X0
	085 Move W8, [X19+8]
	086 Move W1, [X19+12]
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Move X0, [X19]
	089 Compare X0, 0
	090 JumpIfEqual {111}
	091 Move X2, X31
	092 Call String.get_Chars, X0, X1
	093 And W8, W0, 0xFFFF
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Move W8, [X19+17]
	096 Compare W8, 0
	097 JumpIfNotEqual {47}
	098 Move X0, 0x99C000
	099 Move X0, [X0+1880]
	100 Call 0x1C17D08
	101 Call 0x1C17F10
	102 Move X1, X31
	103 Move X19, X0
	104 Call NotImplementedException..ctor, X0
	105 Move X0, 0x9E6000
	106 Move X0, [X0+696]
	107 Call 0x1C17D08
	108 Move X1, X0
	109 Move X0, X19
	110 Call 0x1C17DEC
	111 Call 0x1C17F20

Method: System.Boolean ParseNumber(out UnityEngine.InputSystem.Utilities.JsonParser/JsonValue result)

Disassembly:
	0x03761674 ADD X31, X31, 0x90
	0x03761678 BR X2
	0x0376167C ADRP X8, 0x9C3000
	0x03761680 LDR X8, [X8 + 0xC90]
	0x03761684 B 0x3761690
	0x03761688 ADRP X8, 0x9B9000
	0x0376168C LDR X8, [X8 + 0x278]
	0x03761690 LDR X0, [X8]
	0x03761694 LDP X20, X19, [X31 + 0x80]
	0x03761698 LDP X22, X21, [X31 + 0x70]
	0x0376169C LDP X24, X23, [X31 + 0x60]
	0x037616A0 LDR X30, [X31 + 0x50]
	0x037616A4 ADD X31, X31, 0x90
	0x037616A8 RET
	0x037616AC BL 0x1C16F20
	0x037616B0 STR X30, [X31 - 0x20]!
	0x037616B4 STP X20, X19, [X31 + 0x10]
	0x037616B8 ADRP X20, 0xC7F000
	0x037616BC LDRB W8, [X20 + 0xE5A]
	0x037616C0 MOV X19, X0
	0x037616C4 TBNZ X8, 0x0, 0x37616DC
	0x037616C8 ADRP X0, 0x99B000
	0x037616CC LDR X0, [X0 + 0x9E8]
	0x037616D0 BL 0x1C16CF4
	0x037616D4 MOVZ W8, 0x1
	0x037616D8 STRB W8, [X20 + 0xE5A]
	0x037616DC LDR W8, [X19]
	0x037616E0 SUB W8, W8, 0x1
	0x037616E4 CMP W8, 0x3
	0x037616E8 B.HI 0x376170C
	0x037616EC ADRP X9, 0xFFFFFFFFFD436000
	0x037616F0 ADD X9, X9, 0x887
	0x037616F4 ADR X10, 0x10
	0x037616F8 LDRB W11, [X9, X8, LSL]
	0x037616FC ADD X10, X10, X11, 0x2, LSL
	0x03761700 BR X10
	0x03761704 LDRB W0, [X19 + 0x4]
	0x03761708 B 0x3761738
	0x0376170C MOV X0, X31
	0x03761710 B 0x3761738
	0x03761714 LDR V0, [X19 + 0x8]
	0x03761718 MOVZ X8, 0x7FF00000
	0x0376171C FMOV D1, X8
	0x03761720 MOVZ X9, 0x80000000
	0x03761724 FCVTZS X8, D0
	0x03761728 FCMP D0, D1
	0x0376172C CSEL X0, X9, X8, EQ
	0x03761730 B 0x3761738
	0x03761734 LDR X0, [X19 + 0x10]
	0x03761738 LDP X20, X19, [X31 + 0x10]
	0x0376173C LDR X30, [X31], #0x20
	0x03761740 RET
	0x03761744 MOV X0, X19
	0x03761748 BL 0x3761240
	0x0376174C ADRP X8, 0x99B000
	0x03761750 LDR X8, [X8 + 0x9E8]
	0x03761754 MOV X19, X0
	0x03761758 LDR X8, [X8]
	0x0376175C LDR W9, [X8 + 0xE0]
	0x03761760 CBNZ W9, 0x376176C
	0x03761764 MOV X0, X8
	0x03761768 BL 0x1C16DFC
	0x0376176C MOV X0, X19
	0x03761770 LDP X20, X19, [X31 + 0x10]
	0x03761774 MOV X1, X31
	0x03761778 LDR X30, [X31], #0x20
	0x0376177C B 0x3320F8C
	0x03761780 STR X30, [X31 - 0x20]!
	0x03761784 STP X20, X19, [X31 + 0x10]
	0x03761788 ADRP X20, 0xC7F000
	0x0376178C LDRB W8, [X20 + 0xE5B]
	0x03761790 MOV X19, X0
	0x03761794 TBNZ X8, 0x0, 0x37617AC
	0x03761798 ADRP X0, 0x99B000
	0x0376179C LDR X0, [X0 + 0x9E8]
	0x037617A0 BL 0x1C16CF4
	0x037617A4 MOVZ W8, 0x1
	0x037617A8 STRB W8, [X20 + 0xE5B]
	0x037617AC LDR W8, [X19]
	0x037617B0 SUB W8, W8, 0x1
	0x037617B4 CMP W8, 0x3
	0x037617B8 B.HI 0x37617EC
	0x037617BC ADRP X9, 0xFFFFFFFFFD436000
	0x037617C0 ADD X9, X9, 0x88B
	0x037617C4 ADR X10, 0x10
	0x037617C8 LDRB W11, [X9, X8, LSL]
	0x037617CC ADD X10, X10, X11, 0x2, LSL
	0x037617D0 BR X10
	0x037617D4 LDRB W8, [X19 + 0x4]
	0x037617D8 FMOV D0, 1
	0x037617DC FMOV D1, X31
	0x037617E0 CMP W8, 0x0
	0x037617E4 FCSEL D0, D1, D0, EQ
	0x037617E8 B 0x3761840
	0x037617EC FMOV D0, X31
	0x037617F0 B 0x3761840
	0x037617F4 LDR V0, [X19 + 0x8]
	0x037617F8 B 0x3761840
	0x037617FC LDR V0, [X19 + 0x10]
	0x03761800 SCVTF D0, D0
	0x03761804 B 0x3761840
	0x03761808 MOV X0, X19
	0x0376180C BL 0x3761240
	0x03761810 ADRP X8, 0x99B000
	0x03761814 LDR X8, [X8 + 0x9E8]
	0x03761818 MOV X19, X0
	0x0376181C LDR X8, [X8]
	0x03761820 LDR W9, [X8 + 0xE0]
	0x03761824 CBNZ W9, 0x3761830
	0x03761828 MOV X0, X8
	0x0376182C BL 0x1C16DFC
	0x03761830 MOV X0, X19
	0x03761834 MOV X1, X31
	0x03761838 BL 0x3321808
	0x0376183C FCVT S0, S0
	0x03761840 LDP X20, X19, [X31 + 0x10]
	0x03761844 LDR X30, [X31], #0x20
	0x03761848 RET
	0x0376184C STP X30, X19, [X31 - 0x10]!
	0x03761850 MOV X1, X31
	0x03761854 MOV X19, X8
	0x03761858 BL 0x3768CAC
	0x0376185C MOVZ W8, 0x4
	0x03761860 MOVI V0.2D, 0x0
	0x03761864 STUR X31, [X19 + 0xC]
	0x03761868 STUR X31, [X19 + 0x4]
	0x0376186C STR W31, [X19 + 0x14]
	0x03761870 STP X0, X1, [X19 + 0x18]
	0x03761874 STR W8, [X19]
	0x03761878 STUR V0, [X19 + 0x28]
	0x0376187C STUR V0, [X19 + 0x38]
	0x03761880 LDP X30, X19, [X31], #0x10
	0x03761884 RET
	0x03761888 MOVI V0.2D, 0x0
	0x0376188C MOVZ W9, 0x6
	0x03761890 STR W31, [X8 + 0x34]
	0x03761894 STUR V0, [X8 + 0x24]
	0x03761898 STUR V0, [X8 + 0x14]
	0x0376189C STUR V0, [X8 + 0x4]
	0x037618A0 STR W9, [X8]
	0x037618A4 STP X0, X31, [X8 + 0x38]
	0x037618A8 RET
	0x037618AC MOVI V0.2D, 0x0
	0x037618B0 MOVZ W9, 0x7
	0x037618B4 STR V0, [X8 + 0x3]
	0x037618B8 STUR V0, [X8 + 0x24]
	0x037618BC STUR V0, [X8 + 0x14]
	0x037618C0 STUR V0, [X8 + 0x4]
	0x037618C4 STR W9, [X8]
	0x037618C8 STR X0, [X8 + 0x40]
	0x037618CC RET
	0x037618D0 SUB X31, X31, 0x140
	0x037618D4 STR D10, [X31 + 0x110]
	0x037618D8 STP D9, D8, [X31 + 0x118]
	0x037618DC STR X29, [X31 + 0x128]
	0x037618E0 STP X30, X19, [X31 + 0x130]
	0x037618E4 LDR W9, [X0]
	0x037618E8 LDR W10, [X1]
	0x037618EC MOV X8, X0
	0x037618F0 CMP W9, W10
	0x037618F4 B.NE 0x3761924
	0x037618F8 CMP W9, 0x7
	0x037618FC B.HI 0x3761968
	0x03761900 ADRP X10, 0xFFFFFFFFFD436000
	0x03761904 MOV W9, W9
	0x03761908 ADD X10, X10, 0x88F
	0x0376190C ADR X11, 0x10
	0x03761910 LDRB W12, [X10, X9, LSL]
	0x03761914 ADD X11, X11, X12, 0x2, LSL
	0x03761918 BR X11
	0x0376191C MOVZ W0, 0x1
	0x03761920 B 0x3761A4C
	0x03761924 LDR X19, [X8 + 0x40]
	0x03761928 CBZ X19, 0x3761940
	0x0376192C ADD X0, X31, 0x48
	0x03761930 MOVZ W2, 0x48
	0x03761934 BL 0x3EB1AC0
	0x03761938 ADD X1, X31, 0x48
	0x0376193C B 0x376195C
	0x03761940 LDR X19, [X1 + 0x40]
	0x03761944 CBZ X19, 0x3761968
	0x03761948 ADD X0, X31, 0x0
	0x0376194C MOVZ W2, 0x48
	0x03761950 MOV X1, X8
	0x03761954 BL 0x3EB1AC0
	0x03761958 ADD X1, X31, 0x0
	0x0376195C MOV X0, X19
	0x03761960 BL 0x3761ACC
	0x03761964 B 0x3761A4C
	0x03761968 MOV W0, W31
	0x0376196C B 0x3761A4C
	0x03761970 LDRB W9, [X1 + 0x4]
	0x03761974 LDRB W8, [X8 + 0x4]
	0x03761978 AND W9, W9, 0x1
	0x0376197C CMP W8, W9
	0x03761980 B 0x3761A0C
	0x03761984 ADRP X19, 0xC7F000
	0x03761988 LDR V8, [X8 + 0x8]
	0x0376198C LDRB W8, [X19 + 0xE7A]
	0x03761990 LDR V9, [X1 + 0x8]
	0x03761994 CBNZ W8, 0x37619AC
	0x03761998 ADRP X0, 0x992000
	0x0376199C LDR X0, [X0 + 0x5A8]
	0x037619A0 BL 0x1C16CF4
	0x037619A4 MOVZ W8, 0x1
	0x037619A8 STRB W8, [X19 + 0xE7A]
	0x037619AC ADRP X8, 0x992000
	0x037619B0 LDR X8, [X8 + 0x5A8]
	0x037619B4 LDR X0, [X8]
	0x037619B8 LDR W8, [X0 + 0xE0]
	0x037619BC CBNZ W8, 0x37619C4
	0x037619C0 BL 0x1C16DFC
	0x037619C4 FABS D0, D8
	0x037619C8 FABS D1, D9
	0x037619CC MOV X0, X31
	0x037619D0 FABD D10, D9, D9
	0x037619D4 BL 0x337EDC0
	0x037619D8 ADRP X8, 0xFFFFFFFFFD38C000
	0x037619DC LDR V1, [X8 + 0xBC8]
	0x037619E0 MOVZ X8, 0x8
	0x037619E4 MOV X0, X31
	0x037619E8 FMUL D0, D0, D1
	0x037619EC FMOV D1, X8
	0x037619F0 BL 0x337EDC0
	0x037619F4 FCMP D10, D0
	0x037619F8 CSET W0, MI
	0x037619FC B 0x3761A4C
	0x03761A00 LDR X8, [X8 + 0x10]
	0x03761A04 LDR X9, [X1 + 0x10]
	0x03761A08 CMP X8, X9
	0x03761A0C CSET W0, EQ
	0x03761A10 B 0x3761A4C
	0x03761A14 LDR X9, [X8 + 0x28]
	0x03761A18 LDUR V0, [X8 + 0x18]
	0x03761A1C ADD X0, X31, 0xA8
	0x03761A20 MOVZ W2, 0x48
	0x03761A24 STR X9, [X31 + 0xA0]
	0x03761A28 STR V0, [X31 + 0x9]
	0x03761A2C BL 0x3EB1AC0
	0x03761A30 LDUR V0, [X31 + 0xC0]
	0x03761A34 LDR X8, [X31 + 0xD0]
	0x03761A38 ADD X0, X31, 0x90
	0x03761A3C ADD X1, X31, 0xF0
	0x03761A40 STR V0, [X31 + 0xF]
	0x03761A44 STR X8, [X31 + 0x100]
	0x03761A48 BL 0x3760DC8
	0x03761A4C LDP X30, X19, [X31 + 0x130]
	0x03761A50 LDR X29, [X31 + 0x128]
	0x03761A54 LDP D9, D8, [X31 + 0x118]
	0x03761A58 LDR V10, [X31 + 0x110]
	0x03761A5C AND W0, W0, 0x1
	0x03761A60 ADD X31, X31, 0x140
	0x03761A64 RET
	0x03761A68 LDR X0, [X8 + 0x40]
	0x03761A6C CBZ X0, 0x3761AC8
	0x03761A70 LDR X8, [X0]
	0x03761A74 LDR X1, [X1 + 0x40]
	0x03761A78 LDP X30, X19, [X31 + 0x130]
	0x03761A7C LDR X29, [X31 + 0x128]
	0x03761A80 LDP X3, X2, [X8 + 0x138]
	0x03761A84 LDP D9, D8, [X31 + 0x118]
	0x03761A88 LDR V10, [X31 + 0x110]
	0x03761A8C ADD X31, X31, 0x140
	0x03761A90 BR X3
	0x03761A94 ADRP X0, 0x99B000
	0x03761A98 LDR X0, [X0 + 0x758]
	0x03761A9C BL 0x1C16D08
	0x03761AA0 BL 0x1C16F10
	0x03761AA4 MOV X1, X31
	0x03761AA8 MOV X19, X0
	0x03761AAC BL 0x3380288
	0x03761AB0 ADRP X0, 0x9E5000
	0x03761AB4 LDR X0, [X0 + 0x300]
	0x03761AB8 BL 0x1C16D08
	0x03761ABC MOV X1, X0
	0x03761AC0 MOV X0, X19
	0x03761AC4 BL 0x1C16DEC
	0x03761AC8 BL 0x1C16F20
	0x03761ACC STR D10, [X31 - 0x50]!
	0x03761AD0 STP D9, D8, [X31 + 0x10]
	0x03761AD4 STP X29, X30, [X31 + 0x20]
	0x03761AD8 STP X22, X21, [X31 + 0x30]
	0x03761ADC STP X20, X19, [X31 + 0x40]
	0x03761AE0 SUB X31, X31, 0x1B0
	0x03761AE4 ADRP X21, 0xC7F000
	0x03761AE8 LDRB W8, [X21 + 0xE5D]
	0x03761AEC MOV X19, X1
	0x03761AF0 MOV X20, X0
	0x03761AF4 TBNZ X8, 0x0, 0x3761BB4
	0x03761AF8 ADRP X0, 0x992000
	0x03761AFC LDR X0, [X0 + 0xB58]
	0x03761B00 BL 0x1C16CF4
	0x03761B04 ADRP X0, 0x99B000

ISIL:
	001 Move [X31-112], D10
	002 Move [X31+8], D9
	003 Move [X31+16], D8
	004 Move [X31+24], X30
	005 Move [X31+32], X28
	006 Move [X31+40], X27
	007 Move [X31+48], X26
	008 Move [X31+56], X25
	009 Move [X31+64], X24
	010 Move [X31+72], X23
	011 Move [X31+80], X22
	012 Move [X31+88], X21
	013 Move [X31+96], X20
	014 Move [X31+104], X19
	015 Move X21, 0xC80000
	016 Move W8, [X21+3665]
	017 Move X19, X1
	018 Move X20, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {28}
	023 Move X0, 0x995000
	024 Move X0, [X0+368]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X21+3665], W8
	028 NotImplemented "Instruction MOVI not yet implemented."
	029 Move X0, X20
	030 Move [X19+64], X31
	031 Move [X19+32], V0
	032 Move [X19+40], V0
	033 Move [X19], V0
	034 Move [X19+8], V0
	035 Call JsonParser.SkipWhitespace, X0
	036 Move W8, [X20+8]
	037 Move W1, [X20+12]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move X0, [X20]
	040 Compare X0, 0
	041 JumpIfEqual {320}
	042 Move X2, X31
	043 Call String.get_Chars, X0, X1
	044 Move W1, [X20+12]
	045 And W8, W0, 0xFFFF
	046 Move W21, W0
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Add W1, W1, 1
	049 Move [X20+12], W1
	050 Move W8, [X20+8]
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move X0, [X20]
	053 Compare X0, 0
	054 JumpIfEqual {320}
	055 Move X2, X31
	056 Call String.get_Chars, X0, X1
	057 Move X24, 0x995000
	058 Move X24, [X24+368]
	059 Move W22, W0
	060 Move X8, [X24]
	061 Move W9, [X8+224]
	062 Compare W9, 0
	063 JumpIfNotEqual {66}
	064 Move X0, X8
	065 Call 0x1C17DFC
	066 Move W0, W22
	067 Move X1, X31
	068 Call Char.IsDigit, X0
	069 Move TEMP, X0
	070 And TEMP, TEMP, 1
	071 Compare TEMP, 1
	072 JumpIfNotEqual {156}
	073 Move W8, [X20+8]
	074 Move W1, [X20+12]
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Move X23, X31
	077 Move W22, 10
	078 Move X0, [X20]
	079 Compare X0, 0
	080 JumpIfEqual {320}
	081 Move X2, X31
	082 Call String.get_Chars, X0, X1
	083 Subtract W8, W0, 48
	084 And W8, W8, 0xFFFF
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move W8, [X20+8]
	087 Move W10, [X20+12]
	088 Multiply X9, X23, X22
	089 Add X9, X9, W0
	090 Subtract X23, X9, 48
	091 Add W1, W10, 1
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Move [X20+12], W1
	094 Move X23, X31
	095 Move W8, [X20+8]
	096 Move W1, [X20+12]
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Move D8, X31
	099 Move X0, [X20]
	100 Compare X0, 0
	101 JumpIfEqual {320}
	102 Move X2, X31
	103 Call String.get_Chars, X0, X1
	104 And W8, W0, 0xFFFF
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Move W9, [X20+8]
	107 Move W8, [X20+12]
	108 Add W1, W8, 1
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Move [X20+12], W1
	111 Move X0, [X20]
	112 Compare X0, 0
	113 JumpIfEqual {320}
	114 Move X2, X31
	115 Call String.get_Chars, X0, X1
	116 Move X8, [X24]
	117 Move W22, W0
	118 Move W9, [X8+224]
	119 Compare W9, 0
	120 JumpIfNotEqual {123}
	121 Move X0, X8
	122 Call 0x1C17DFC
	123 Move W0, W22
	124 Move X1, X31
	125 Call Char.IsDigit, X0
	126 Move TEMP, X0
	127 And TEMP, TEMP, 1
	128 Compare TEMP, 1
	129 JumpIfNotEqual {156}
	130 Move W8, [X20+8]
	131 Move W1, [X20+12]
	132 NotImplemented "Instruction CMP not yet implemented."
	133 Move D9, 8.000000000465661
	134 Move D8, X31
	135 Move D10, 8.000000000465661
	136 Move X0, [X20]
	137 Compare X0, 0
	138 JumpIfEqual {320}
	139 Move X2, X31
	140 Call String.get_Chars, X0, X1
	141 Subtract W8, W0, 48
	142 And W8, W8, 0xFFFF
	143 NotImplemented "Instruction CMP not yet implemented."
	144 Move W10, [X20+8]
	145 Move W9, [X20+12]
	146 And W8, W0, 0xFFFF
	147 Subtract W8, W8, 48
	148 NotImplemented "Instruction SCVTF not yet implemented."
	149 NotImplemented "Instruction FDIV not yet implemented."
	150 Add W1, W9, 1
	151 Move W25, W31
	152 Multiply D10, D10, D9
	153 Add D8, D8, D0
	154 NotImplemented "Instruction CMP not yet implemented."
	155 Move [X20+12], W1
	156 Move W0, W31
	157 Move X20, [X31+96]
	158 Move X19, [X31+104]
	159 Move X22, [X31+80]
	160 Move X21, [X31+88]
	161 Move X24, [X31+64]
	162 Move X23, [X31+72]
	163 Move X26, [X31+48]
	164 Move X25, [X31+56]
	165 Move X28, [X31+32]
	166 Move X27, [X31+40]
	167 Move X30, [X31+24]
	168 Move D9, [X31+8]
	169 Move D8, [X31+16]
	170 Move V10, [X31+112]
	171 Return X0
	172 Move W25, 1
	173 Move W8, [X20+8]
	174 Move W1, [X20+12]
	175 NotImplemented "Instruction CMP not yet implemented."
	176 Move X0, [X20]
	177 Compare X0, 0
	178 JumpIfEqual {320}
	179 Move X2, X31
	180 Call String.get_Chars, X0, X1
	181 And W8, W0, 0xFFFF
	182 NotImplemented "Instruction CMP not yet implemented."
	183 Move X0, [X20]
	184 Compare X0, 0
	185 JumpIfEqual {320}
	186 Move W1, [X20+12]
	187 Move X2, X31
	188 Call String.get_Chars, X0, X1
	189 And W8, W0, 0xFFFF
	190 NotImplemented "Instruction CMP not yet implemented."
	191 Move W8, [X20+8]
	192 Move W9, [X20+12]
	193 Add W1, W9, 1
	194 NotImplemented "Instruction CMP not yet implemented."
	195 Move [X20+12], W1
	196 Move X0, [X20]
	197 Compare X0, 0
	198 JumpIfEqual {320}
	199 Move X2, X31
	200 Call String.get_Chars, X0, X1
	201 Move W1, [X20+12]
	202 And W8, W0, 0xFFFF
	203 NotImplemented "Instruction CMP not yet implemented."
	204 Add W1, W1, 1
	205 Move [X20+12], W1
	206 Move W26, 1
	207 Move W8, W31
	208 Move W8, [X20+8]
	209 NotImplemented "Instruction CMP not yet implemented."
	210 Move X0, [X20]
	211 Compare X0, 0
	212 JumpIfEqual {320}
	213 Move X2, X31
	214 Call String.get_Chars, X0, X1
	215 Move W1, [X20+12]
	216 And W8, W0, 0xFFFF
	217 NotImplemented "Instruction CMP not yet implemented."
	218 Move W26, W31
	219 Add W1, W1, 1
	220 Move [X20+12], W1
	221 Move W26, W31
	222 Move W8, [X20+8]
	223 NotImplemented "Instruction CMP not yet implemented."
	224 Move W28, W31
	225 Move W27, 1
	226 Move X0, [X20]
	227 Compare X0, 0
	228 JumpIfEqual {320}
	229 Move X2, X31
	230 Call String.get_Chars, X0, X1
	231 Move X8, [X24]
	232 Move W22, W0
	233 Move W9, [X8+224]
	234 Compare W9, 0
	235 JumpIfNotEqual {238}
	236 Move X0, X8
	237 Call 0x1C17DFC
	238 Move W0, W22
	239 Move X1, X31
	240 Call Char.IsDigit, X0
	241 Move TEMP, X0
	242 And TEMP, TEMP, 1
	243 Compare TEMP, 1
	244 JumpIfNotEqual {264}
	245 Move X0, [X20]
	246 Compare X0, 0
	247 JumpIfEqual {320}
	248 Move W1, [X20+12]
	249 Move X2, X31
	250 Call String.get_Chars, X0, X1
	251 Move W10, [X20+8]
	252 Move W9, [X20+12]
	253 Multiply W8, W28, W27
	254 Add W8, W8, W0
	255 Subtract W28, W8, 48
	256 Add W8, W27, W27
	257 Add W1, W9, 1
	258 Move W27, W8
	259 ShiftRight W27, 31
	260 And W27, W27, 0x3FFFFFFF
	261 NotImplemented "Instruction CMP not yet implemented."
	262 Move [X20+12], W1
	263 Move W28, W31
	264 NotImplemented "Instruction CMP not yet implemented."
	265 NotImplemented "Instruction CSNEG not yet implemented."
	266 Move W9, [X20+17]
	267 Compare W9, 0
	268 JumpIfNotEqual {318}
	269 NotImplemented "Instruction CMP not yet implemented."
	270 NotImplemented "Instruction CSET not yet implemented."
	271 Xor W10, W25, 1
	272 Or W9, W10, W9
	273 Move TEMP, X9
	274 And TEMP, TEMP, 1
	275 Compare TEMP, 1
	276 JumpIfEqual {286}
	277 And W8, W21, 0xFFFF
	278 NotImplemented "Instruction CMP not yet implemented."
	279 Subtract X8, X31, X23
	280 Move W9, 3
	281 Move [X19+4], X31
	282 Move [X19+12], W31
	283 NotImplemented "Instruction MOVI not yet implemented."
	284 Move [X19], W9
	285 Move [X19+16], X8
	286 NotImplemented "Instruction SCVTF not yet implemented."
	287 And W9, W21, 0xFFFF
	288 Add D0, D8, D0
	289 NotImplemented "Instruction FNEG not yet implemented."
	290 NotImplemented "Instruction CMP not yet implemented."
	291 NotImplemented "Instruction FCSEL not yet implemented."
	292 NotImplemented "Instruction INVALID not yet implemented."
	293 Compare W8, 0
	294 JumpIfEqual {299}
	295 NotImplemented "Instruction SCVTF not yet implemented."
	296 Move S0, 10
	297 Call 0x3EB2B50
	298 Multiply S8, S0, S8
	299 Move X8, -46608384
	300 Move V2, [X8+2200]
	301 NotImplemented "Instruction FCVT not yet implemented."
	302 NotImplemented "Instruction MOVI not yet implemented."
	303 Move [X19+64], X31
	304 Move [X19+16], V1
	305 Move [X19+24], V1
	306 Move [X19+3], V1
	307 Move [X19], D2
	308 Move [X19+8], D0
	309 Move W8, 3
	310 NotImplemented "Instruction MOVI not yet implemented."
	311 Move [X19+4], X31
	312 Move [X19+12], W31
	313 Move [X19+16], X23
	314 Move [X19], W8
	315 Move [X19+24], V0
	316 Move [X19+40], V0
	317 Move [X19+56], V0
	318 Move W0, 1
	319 Move W25, W31
	320 Call 0x1C17F20

Method: System.Boolean ParseBooleanValue(out UnityEngine.InputSystem.Utilities.JsonParser/JsonValue result)

Disassembly:
	0x03761538 BL 0x21D0A58
	0x0376153C MOV X1, X0
	0x03761540 MOV X0, X21
	0x03761544 MOV X2, X31
	0x03761548 BL 0x32280D8
	0x0376154C ADRP X8, 0x992000
	0x03761550 LDR X8, [X8 + 0x848]
	0x03761554 MOV X1, X0
	0x03761558 MOV X0, X20
	0x0376155C LDR X2, [X8]
	0x03761560 B 0x3761638
	0x03761564 LDR X19, [X19 + 0x38]
	0x03761568 CBZ X19, 0x3761688
	0x0376156C ADRP X22, 0x9E5000
	0x03761570 LDR X22, [X22 + 0x2F8]
	0x03761574 LDR X0, [X22]
	0x03761578 LDR W8, [X0 + 0xE0]
	0x0376157C CBNZ W8, 0x3761588
	0x03761580 BL 0x1C16DFC
	0x03761584 LDR X0, [X22]
	0x03761588 LDR X8, [X0 + 0xB8]
	0x0376158C LDR X20, [X8 + 0x10]
	0x03761590 CBNZ X20, 0x37615E4
	0x03761594 LDR W8, [X0 + 0xE0]
	0x03761598 CBNZ W8, 0x37615A4
	0x0376159C BL 0x1C16DFC
	0x037615A0 LDR X0, [X22]
	0x037615A4 ADRP X9, 0x9E5000
	0x037615A8 LDR X8, [X0 + 0xB8]
	0x037615AC LDR X9, [X9 + 0x2E0]
	0x037615B0 LDR X21, [X8]
	0x037615B4 LDR X0, [X9]
	0x037615B8 BL 0x1C16F10
	0x037615BC ADRP X8, 0x9E5000
	0x037615C0 LDR X8, [X8 + 0x2F0]
	0x037615C4 MOV X1, X21
	0x037615C8 MOV X3, X31
	0x037615CC MOV X20, X0
	0x037615D0 LDR X2, [X8]
	0x037615D4 BL 0x2D2A864
	0x037615D8 LDR X8, [X22]
	0x037615DC LDR X8, [X8 + 0xB8]
	0x037615E0 STR X20, [X8 + 0x10]
	0x037615E4 ADRP X8, 0x9E5000
	0x037615E8 LDR X8, [X8 + 0x2D0]
	0x037615EC MOV X0, X19
	0x037615F0 MOV X1, X20
	0x037615F4 LDR X2, [X8]
	0x037615F8 BL 0x21CB2EC
	0x037615FC ADRP X8, 0x994000
	0x03761600 LDR X8, [X8 + 0x3A0]
	0x03761604 MOV X1, X0
	0x03761608 MOV X2, X31
	0x0376160C LDR X8, [X8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xC80000
	007 Move X21, 0x99E000
	008 Move W8, [X22+3666]
	009 Move X21, [X21]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x99D000
	017 Move X0, [X0+4088]
	018 Call 0x1C17CF4
	019 Move X0, 0x99E000
	020 Move X0, [X0]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+3666], W8
	024 Move X0, X20
	025 Call JsonParser.SkipWhitespace, X0
	026 Move X1, [X21]
	027 Move X0, X20
	028 Call JsonParser.SkipString, X0, X1
	029 Move TEMP, X0
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfNotEqual {37}
	033 Move W0, 1
	034 NotImplemented "Instruction MOVI not yet implemented."
	035 Move [X19], W0
	036 Move [X19+4], W0
	037 Move X8, 0x99D000
	038 Move X8, [X8+4088]
	039 Move X0, X20
	040 Move X1, [X8]
	041 Call JsonParser.SkipString, X0, X1
	042 Move TEMP, X0
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfNotEqual {55}
	046 Move W0, 1
	047 Move [X19+4], W31
	048 NotImplemented "Instruction MOVI not yet implemented."
	049 Move [X19], W0
	050 Move [X19+5], V0
	051 Move [X19+21], V0
	052 Move [X19+37], V0
	053 Move [X19+53], V0
	054 Move [X19+68], W31
	055 Move W0, W31
	056 NotImplemented "Instruction MOVI not yet implemented."
	057 Move [X19+64], X31
	058 Move [X19+32], V0
	059 Move [X19+40], V0
	060 Move [X19], V0
	061 Move [X19+8], V0
	062 Move X20, [X31+32]
	063 Move X19, [X31+40]
	064 Move X22, [X31+16]
	065 Move X21, [X31+24]
	066 Move X30, [X31+48]
	067 Return X0

Method: System.Boolean ParseNullValue(out UnityEngine.InputSystem.Utilities.JsonParser/JsonValue result)

Disassembly:
	0x03761610 MOV X0, X8
	0x03761614 BL 0x32280D8
	0x03761618 ADRP X8, 0x9BF000
	0x0376161C LDR X8, [X8 + 0x360]
	0x03761620 ADRP X9, 0x99D000
	0x03761624 LDR X9, [X9 + 0x6D8]
	0x03761628 MOV X1, X0
	0x0376162C LDR X8, [X8]
	0x03761630 LDR X2, [X9]
	0x03761634 MOV X0, X8
	0x03761638 LDP X20, X19, [X31 + 0x80]
	0x0376163C LDP X22, X21, [X31 + 0x70]
	0x03761640 LDP X24, X23, [X31 + 0x60]
	0x03761644 LDR X30, [X31 + 0x50]
	0x03761648 MOV X3, X31
	0x0376164C ADD X31, X31, 0x90
	0x03761650 B 0x32274B8
	0x03761654 LDR X0, [X19 + 0x40]
	0x03761658 CBZ X0, 0x37616AC
	0x0376165C LDR X8, [X0]
	0x03761660 LDP X20, X19, [X31 + 0x80]
	0x03761664 LDP X22, X21, [X31 + 0x70]
	0x03761668 LDP X24, X23, [X31 + 0x60]
	0x0376166C LDP X2, X1, [X8 + 0x168]
	0x03761670 LDR X30, [X31 + 0x50]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xC80000
	007 Move X21, 0x993000
	008 Move W8, [X22+3667]
	009 Move X21, [X21+2096]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x993000
	017 Move X0, [X0+2096]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+3667], W8
	021 NotImplemented "Instruction MOVI not yet implemented."
	022 Move [X20+64], X31
	023 Move [X20+32], V0
	024 Move [X20+40], V0
	025 Move [X20], V0
	026 Move [X20+8], V0
	027 Move X1, [X21]
	028 Move X0, X19
	029 Move X20, [X31+32]
	030 Move X19, [X31+40]
	031 Move X22, [X31+16]
	032 Move X21, [X31+24]
	033 Move X30, [X31+48]
	034 Call JsonParser.SkipString, X0, X1
	035 Return X0

Method: System.Boolean SkipToValue()

Disassembly:
	0x03760DB4 LDP X22, X21, [X31 + 0x10]
	0x03760DB8 LDP X2, X1, [X8 + 0x168]
	0x03760DBC LDR X30, [X31], #0x30
	0x03760DC0 BR X2
	0x03760DC4 BL 0x1C16F20
	0x03760DC8 STP X30, X27, [X31 - 0x50]!
	0x03760DCC STP X26, X25, [X31 + 0x10]
	0x03760DD0 STP X24, X23, [X31 + 0x20]
	0x03760DD4 STP X22, X21, [X31 + 0x30]
	0x03760DD8 STP X20, X19, [X31 + 0x40]
	0x03760DDC ADRP X21, 0xC80000
	0x03760DE0 LDRB W8, [X21 + 0xE56]
	0x03760DE4 MOV X19, X1
	0x03760DE8 MOV X20, X0
	0x03760DEC TBNZ X8, 0x0, 0x3760E04
	0x03760DF0 ADRP X0, 0x995000
	0x03760DF4 LDR X0, [X0 + 0x170]
	0x03760DF8 BL 0x1C16CF4
	0x03760DFC MOVZ W8, 0x1
	0x03760E00 STRB W8, [X21 + 0xE56]
	0x03760E04 LDRB W8, [X19 + 0x10]
	0x03760E08 LDRB W9, [X20 + 0x10]
	0x03760E0C AND W8, W8, 0x1
	0x03760E10 CMP W9, W8

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call JsonParser.SkipWhitespace, X0
	005 Move W8, [X19+8]
	006 Move W1, [X19+12]
	007 NotImplemented "Instruction CMP not yet implemented."
	008 Move X0, [X19]
	009 Compare X0, 0
	010 JumpIfEqual {25}
	011 Move X2, X31
	012 Call String.get_Chars, X0, X1
	013 And W8, W0, 0xFFFF
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Move W8, [X19+12]
	016 Move X0, X19
	017 Add W8, W8, 1
	018 Move [X19+12], W8
	019 Call JsonParser.SkipWhitespace, X0
	020 Move W0, 1
	021 Move W0, W31
	022 Move X30, [X31+16]
	023 Move X19, [X31+24]
	024 Return X0
	025 Call 0x1C17F20

Method: System.Boolean SkipString(System.String text)

Disassembly:
	0x03761BE8 B.CC 0x3761C00
	0x03761BEC LDR X11, [X8 + 0xC8]
	0x03761BF0 ADD X10, X11, X10, 0x3, LSL
	0x03761BF4 LDUR X10, [X10 - 0x8]
	0x03761BF8 CMP X10, X9
	0x03761BFC B.EQ 0x3761E0C
	0x03761C00 ADRP X9, 0x994000
	0x03761C04 LDR X9, [X9 + 0x278]
	0x03761C08 ADD X21, X31, 0x120
	0x03761C0C LDR X9, [X9]
	0x03761C10 CMP X8, X9
	0x03761C14 B.EQ 0x3761CF0
	0x03761C18 ADRP X9, 0x992000
	0x03761C1C LDR X9, [X9 + 0xA90]
	0x03761C20 LDR X9, [X9]
	0x03761C24 CMP X8, X9
	0x03761C28 B.EQ 0x3761D64
	0x03761C2C ADRP X9, 0x995000
	0x03761C30 LDR X9, [X9 + 0x978]
	0x03761C34 LDR X9, [X9]
	0x03761C38 CMP X8, X9
	0x03761C3C B.EQ 0x3761E28
	0x03761C40 ADRP X9, 0x992000
	0x03761C44 LDR X9, [X9 + 0x758]
	0x03761C48 LDR X9, [X9]
	0x03761C4C CMP X8, X9
	0x03761C50 B.EQ 0x3761E88
	0x03761C54 ADRP X9, 0x994000
	0x03761C58 LDR X9, [X9 + 0xA60]
	0x03761C5C LDR X9, [X9]
	0x03761C60 CMP X8, X9
	0x03761C64 B.EQ 0x3761ECC
	0x03761C68 ADRP X9, 0x992000
	0x03761C6C LDR X9, [X9 + 0xB58]
	0x03761C70 LDR X9, [X9]
	0x03761C74 CMP X8, X9
	0x03761C78 B.EQ 0x3761F48
	0x03761C7C ADRP X22, 0x992000
	0x03761C80 LDR X22, [X22 + 0xDF8]
	0x03761C84 LDRB W11, [X8 + 0x130]
	0x03761C88 LDR X9, [X22]
	0x03761C8C LDRB W10, [X9 + 0x130]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, X1
	008 Move X19, X0
	009 Call JsonParser.SkipWhitespace, X0
	010 Compare X20, 0
	011 JumpIfEqual {46}
	012 Move W22, [X20+16]
	013 Move W9, [X19+8]
	014 Move W8, [X19+12]
	015 Add W8, W8, W22
	016 NotImplemented "Instruction CMP not yet implemented."
	017 NotImplemented "Instruction CMP not yet implemented."
	018 Move W21, W31
	019 Move X0, [X19]
	020 Compare X0, 0
	021 JumpIfEqual {46}
	022 Move W8, [X19+12]
	023 Move X2, X31
	024 Add W1, W21, W8
	025 Call String.get_Chars, X0, X1
	026 And W23, W0, 0xFFFF
	027 Move X0, X20
	028 Move W1, W21
	029 Move X2, X31
	030 Call String.get_Chars, X0, X1
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Add W21, W21, 1
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move W8, [X19+12]
	035 Add W8, W8, W22
	036 Move W0, 1
	037 Move [X19+12], W8
	038 Move W0, W31
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X22, [X31+16]
	042 Move X21, [X31+24]
	043 Move X30, [X31+48]
	044 Move X23, [X31+56]
	045 Return X0
	046 Call 0x1C17F20

Method: System.Void SkipWhitespace()

Disassembly:
	0x03760D18 MOV X20, X0
	0x03760D1C BL 0x3231AC4
	0x03760D20 LDR W22, [X19 + 0xC]
	0x03760D24 CMP W22, 0x1
	0x03760D28 B.LT 0x3760DA4
	0x03760D2C MOV W21, W31
	0x03760D30 MOV X0, X19
	0x03760D34 MOV W1, W21
	0x03760D38 MOV X2, X31
	0x03760D3C BL 0x3768CD4
	0x03760D40 AND W8, W0, 0xFFFF
	0x03760D44 CMP W8, 0x5C
	0x03760D48 B.NE 0x3760D68
	0x03760D4C ADD W21, W21, 0x1
	0x03760D50 CMP W21, W22
	0x03760D54 B.EQ 0x3760DA4
	0x03760D58 MOV X0, X19
	0x03760D5C MOV W1, W21
	0x03760D60 MOV X2, X31
	0x03760D64 BL 0x3768CD4
	0x03760D68 MOV W1, W0
	0x03760D6C CBZ X20, 0x3760DC4
	0x03760D70 MOV X0, X20
	0x03760D74 MOV X2, X31
	0x03760D78 BL 0x3233D30
	0x03760D7C ADD W21, W21, 0x1
	0x03760D80 CMP W21, W22
	0x03760D84 B.LT 0x3760D30
	0x03760D88 B 0x3760DA8
	0x03760D8C MOV X0, X19
	0x03760D90 LDP X20, X19, [X31 + 0x20]
	0x03760D94 LDP X22, X21, [X31 + 0x10]
	0x03760D98 MOV X1, X31
	0x03760D9C LDR X30, [X31], #0x30
	0x03760DA0 B 0x3768AFC
	0x03760DA4 CBZ X20, 0x3760DC4
	0x03760DA8 LDR X8, [X20]
	0x03760DAC MOV X0, X20
	0x03760DB0 LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xC81000
	006 Move W8, [X20+3668]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x996000
	013 Move X0, [X0+368]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+3668], W8
	017 Move W8, [X19+8]
	018 Move W1, [X19+12]
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move X21, 0x996000
	021 Move X21, [X21+368]
	022 Move X0, [X19]
	023 Compare X0, 0
	024 JumpIfEqual {51}
	025 Move X2, X31
	026 Call String.get_Chars, X0, X1
	027 Move X8, [X21]
	028 Move W20, W0
	029 Move W9, [X8+224]
	030 Compare W9, 0
	031 JumpIfNotEqual {34}
	032 Move X0, X8
	033 Call 0x1C17DFC
	034 Move W0, W20
	035 Move X1, X31
	036 Call Char.IsWhiteSpace, X0
	037 Move TEMP, X0
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfNotEqual {46}
	041 Move W9, [X19+8]
	042 Move W8, [X19+12]
	043 Add W1, W8, 1
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move [X19+12], W1
	046 Move X20, [X31+16]
	047 Move X19, [X31+24]
	048 Move X30, [X31+32]
	049 Move X21, [X31+40]
	050 Return 
	051 Call 0x1C17F20

Method: System.Boolean get_isAtEnd()

Disassembly:
	0x03761CBC B.NE 0x37620FC
	0x03761CC0 ADRP X8, 0x99B000
	0x03761CC4 LDR X8, [X8 + 0x9E8]
	0x03761CC8 LDR X0, [X8]

ISIL:
	001 Move W9, [X0+8]
	002 Move W8, [X0+12]
	003 NotImplemented "Instruction CMP not yet implemented."
	004 NotImplemented "Instruction CSET not yet implemented."
	005 Return X0

