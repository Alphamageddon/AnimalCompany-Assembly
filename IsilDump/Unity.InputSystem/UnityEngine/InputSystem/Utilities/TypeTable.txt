Type: UnityEngine.InputSystem.Utilities.TypeTable

Method: System.Collections.Generic.IEnumerable`1<System.String> get_names()

Disassembly:
	0x0376A788 LDRSW X9, [X10]
	0x0376A78C ADD X8, X8, X9, 0x4, LSL
	0x0376A790 ADD X0, X8, 0x138
	0x0376A794 LDP X8, X1, [X0]
	0x0376A798 MOV X0, X20
	0x0376A79C BLR X8
	0x0376A7A0 CMP W0, W24
	0x0376A7A4 B.NE 0x376A6E8
	0x0376A7A8 MOV X25, X1
	0x0376A7AC CBZ X1, 0x376A974
	0x0376A7B0 LDR X8, [X25]
	0x0376A7B4 LDP X9, X1, [X8 + 0x178]
	0x0376A7B8 MOV X0, X25
	0x0376A7BC BLR X9
	0x0376A7C0 MOV X26, X0
	0x0376A7C4 LDR X0, [X19]
	0x0376A7C8 LDR W8, [X0 + 0xE0]
	0x0376A7CC CBNZ W8, 0x376A7D4
	0x0376A7D0 BL 0x1C16DFC
	0x0376A7D4 MOV X0, X21
	0x0376A7D8 MOV X1, X31
	0x0376A7DC MOV X2, X31
	0x0376A7E0 BL 0x3395194
	0x0376A7E4 TBNZ X0, 0x0, 0x376A808
	0x0376A7E8 CBZ X26, 0x376A978
	0x0376A7EC LDR X8, [X26]
	0x0376A7F0 LDR X9, [X8 + 0x2A8]
	0x0376A7F4 LDR X2, [X8 + 0x2B0]
	0x0376A7F8 MOV X0, X26
	0x0376A7FC MOV X1, X21
	0x0376A800 BLR X9
	0x0376A804 TBZ X0, 0x0, 0x376A870
	0x0376A808 MOV X21, X26
	0x0376A80C LDR X8, [X25]
	0x0376A810 LDP X9, X1, [X8 + 0x188]
	0x0376A814 MOV X0, X25
	0x0376A818 BLR X9
	0x0376A81C ADRP X8, 0x989000
	0x0376A820 LDR X8, [X8 + 0x5A8]
	0x0376A824 MOV W26, W0
	0x0376A828 LDR W27, [X23]
	0x0376A82C LDR X0, [X8]
	0x0376A830 LDR W8, [X0 + 0xE0]
	0x0376A834 CBNZ W8, 0x376A83C
	0x0376A838 BL 0x1C16DFC
	0x0376A83C MOV W0, W26
	0x0376A840 MOV W1, W27
	0x0376A844 MOV X2, X31
	0x0376A848 BL 0x337EDF0
	0x0376A84C STR W0, [X23]
	0x0376A850 LDRB W26, [X22]
	0x0376A854 MOV X0, X25
	0x0376A858 MOV X1, X31
	0x0376A85C BL 0x3773448
	0x0376A860 AND W8, W0, W26, 0x0
	0x0376A864 AND W8, W8, 0x1
	0x0376A868 STRB W8, [X22]
	0x0376A86C B 0x376A6E8
	0x0376A870 CBZ X21, 0x376A97C
	0x0376A874 LDR X8, [X21]
	0x0376A878 LDR X9, [X8 + 0x2A8]
	0x0376A87C LDR X2, [X8 + 0x2B0]
	0x0376A880 MOV X0, X21
	0x0376A884 MOV X1, X26
	0x0376A888 BLR X9
	0x0376A88C TBNZ X0, 0x0, 0x376A80C
	0x0376A890 LDR X0, [X19]
	0x0376A894 ADRP X9, 0x9B1000
	0x0376A898 LDR W8, [X0 + 0xE0]
	0x0376A89C LDR X9, [X9 + 0x7F8]
	0x0376A8A0 LDR X26, [X9]
	0x0376A8A4 CBNZ W8, 0x376A8AC
	0x0376A8A8 BL 0x1C16DFC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0xC77000
	008 Move W8, [X20+3729]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {31}
	014 Move X0, 0x9DD000
	015 Move X0, [X0+1624]
	016 Call 0x1C17CF4
	017 Move X0, 0x9DD000
	018 Move X0, [X0+1632]
	019 Call 0x1C17CF4
	020 Move X0, 0x9DD000
	021 Move X0, [X0+1640]
	022 Call 0x1C17CF4
	023 Move X0, 0x9DD000
	024 Move X0, [X0+1648]
	025 Call 0x1C17CF4
	026 Move X0, 0x9DD000
	027 Move X0, [X0+1656]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X20+3729], W8
	031 Move X0, [X19]
	032 Compare X0, 0
	033 JumpIfEqual {87}
	034 Move X8, 0x9DD000
	035 Move X8, [X8+1624]
	036 Move X22, 0x9DD000
	037 Move X1, [X8]
	038 Move X22, [X22+1656]
	039 Call Dictionary`2<InternedString, Object>.get_Keys, X0
	040 Move X8, [X22]
	041 Move X19, X0
	042 Move W9, [X8+224]
	043 Compare W9, 0
	044 JumpIfNotEqual {48}
	045 Move X0, X8
	046 Call 0x1C17DFC
	047 Move X8, [X22]
	048 Move X9, [X8+184]
	049 Move X23, 0x9DD000
	050 Move X20, [X9+8]
	051 Move X23, [X23+1632]
	052 Compare X20, 0
	053 JumpIfNotEqual {76}
	054 Move W9, [X8+224]
	055 Compare W9, 0
	056 JumpIfNotEqual {60}
	057 Move X0, X8
	058 Call 0x1C17DFC
	059 Move X8, [X22]
	060 Move X9, 0x9DD000
	061 Move X8, [X8+184]
	062 Move X9, [X9+1640]
	063 Move X21, [X8]
	064 Move X0, [X9]
	065 Call 0x1C17F10
	066 Move X8, 0x9DD000
	067 Move X8, [X8+1648]
	068 Move X1, X21
	069 Move X3, X31
	070 Move X20, X0
	071 Move X2, [X8]
	072 Call Func`2<InternedString, Object>..ctor, X0, X1, X2
	073 Move X8, [X22]
	074 Move X8, [X8+184]
	075 Move [X8+8], X20
	076 Move X2, [X23]
	077 Move X0, X19
	078 Move X1, X20
	079 Move X20, [X31+32]
	080 Move X19, [X31+40]
	081 Move X22, [X31+16]
	082 Move X21, [X31+24]
	083 Move X30, [X31+48]
	084 Move X23, [X31+56]
	085 Call Enumerable.Select, X0, X1
	086 Return X0
	087 Call 0x1C17F20

Method: System.Collections.Generic.IEnumerable`1<UnityEngine.InputSystem.Utilities.InternedString> get_internedNames()

Disassembly:
	0x0376A8AC MOV X0, X26
	0x0376A8B0 MOV X1, X31
	0x0376A8B4 BL 0x338C698
	0x0376A8B8 MOV X21, X0
	0x0376A8BC B 0x376A80C
	0x0376A8C0 MOV X23, X31
	0x0376A8C4 MOVZ W19, 0x7
	0x0376A8C8 CBZ X20, 0x376A92C
	0x0376A8CC LDR X8, [X20]
	0x0376A8D0 ADRP X10, 0x989000
	0x0376A8D4 LDRH W9, [X8 + 0x12E]
	0x0376A8D8 LDR X10, [X10 + 0xE00]
	0x0376A8DC LDR X1, [X10]
	0x0376A8E0 CBZ X9, 0x376A904
	0x0376A8E4 LDR X10, [X8 + 0xB0]
	0x0376A8E8 ADD X10, X10, 0x8
	0x0376A8EC LDUR X11, [X10 - 0x8]
	0x0376A8F0 CMP X11, X1
	0x0376A8F4 B.EQ 0x376A914
	0x0376A8F8 SUBS X9, X9, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xC77000
	005 Move W8, [X20+3730]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x9DD000
	012 Move X0, [X0+1624]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3730], W8
	016 Move X0, [X19]
	017 Compare X0, 0
	018 JumpIfEqual {27}
	019 Move X8, 0x9DD000
	020 Move X8, [X8+1624]
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X1, [X8]
	024 Move X30, [X31+32]
	025 Call Dictionary`2<InternedString, Object>.get_Keys, X0
	026 Return X0
	027 Call 0x1C17F20

Method: System.Void Initialize()

Disassembly:
	0x0376A8FC ADD X10, X10, 0x10
	0x0376A900 B.NE 0x376A8EC
	0x0376A904 MOV X0, X20
	0x0376A908 MOV W2, W31
	0x0376A90C BL 0x1C5C788
	0x0376A910 B 0x376A920
	0x0376A914 LDRSW X9, [X10]
	0x0376A918 ADD X8, X8, X9, 0x4, LSL
	0x0376A91C ADD X0, X8, 0x138
	0x0376A920 LDP X8, X1, [X0]
	0x0376A924 MOV X0, X20
	0x0376A928 BLR X8
	0x0376A92C CBNZ X23, 0x376A96C
	0x0376A930 CMP W19, 0x7
	0x0376A934 B.EQ 0x376A93C
	0x0376A938 CBNZ W19, 0x376A944
	0x0376A93C LDR X8, [X31 + 0x8]
	0x0376A940 STR X21, [X8]
	0x0376A944 LDP X20, X19, [X31 + 0x60]
	0x0376A948 LDP X22, X21, [X31 + 0x50]
	0x0376A94C LDP X24, X23, [X31 + 0x40]
	0x0376A950 LDP X26, X25, [X31 + 0x30]
	0x0376A954 LDP X28, X27, [X31 + 0x20]
	0x0376A958 LDP X29, X30, [X31 + 0x10]
	0x0376A95C ADD X31, X31, 0x70
	0x0376A960 RET
	0x0376A964 BL 0x1C16F20
	0x0376A968 BL 0x1C16F20
	0x0376A96C MOV X0, X23

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xC77000
	007 Move X22, 0x9DD000
	008 Move X20, 0x9DD000
	009 Move W8, [X21+3731]
	010 Move X22, [X22+1664]
	011 Move X20, [X20+1672]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x9DD000
	018 Move X0, [X0+1672]
	019 Call 0x1C17CF4
	020 Move X0, 0x9DD000
	021 Move X0, [X0+1664]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+3731], W8
	025 Move X0, [X22]
	026 Call 0x1C17F10
	027 Move X1, [X20]
	028 Move X20, X0
	029 Call Dictionary`2<InternedString, Object>..ctor, X0
	030 Move [X19], X20
	031 Move X20, [X31+32]
	032 Move X19, [X31+40]
	033 Move X22, [X31+16]
	034 Move X21, [X31+24]
	035 Move X30, [X31+48]
	036 Return 

Method: UnityEngine.InputSystem.Utilities.InternedString FindNameForType(System.Type type)

Disassembly:
	0x0376A970 BL 0x1C16F18
	0x0376A974 BL 0x1C16F20
	0x0376A978 BL 0x1C16F20
	0x0376A97C BL 0x1C16F20
	0x0376A980 B 0x376A9C8
	0x0376A984 B 0x376A9C8
	0x0376A988 B 0x376A9B8
	0x0376A98C B 0x376A9C8
	0x0376A990 B 0x376A9C8
	0x0376A994 B 0x376A9C8
	0x0376A998 B 0x376A9C8
	0x0376A99C B 0x376A9C8
	0x0376A9A0 B 0x376A9C8
	0x0376A9A4 B 0x376A9C8
	0x0376A9A8 B 0x376A9C8
	0x0376A9AC B 0x376A9C8
	0x0376A9B0 B 0x376A9C8
	0x0376A9B4 B 0x376A9C8
	0x0376A9B8 MOV X22, X0
	0x0376A9BC MOV X21, X31
	0x0376A9C0 B 0x376A9CC
	0x0376A9C4 B 0x376A9C8
	0x0376A9C8 MOV X22, X0
	0x0376A9CC CMP W1, 0x1
	0x0376A9D0 B.NE 0x376A9F0
	0x0376A9D4 MOV X0, X22
	0x0376A9D8 BL 0x3EB1AD0
	0x0376A9DC LDR X23, [X0]
	0x0376A9E0 BL 0x3EB1AE0
	0x0376A9E4 MOV W19, W31
	0x0376A9E8 CBNZ X20, 0x376A8CC
	0x0376A9EC B 0x376A92C
	0x0376A9F0 MOV X23, X31
	0x0376A9F4 B 0x376A9FC
	0x0376A9F8 MOV X22, X0
	0x0376A9FC CBZ X20, 0x376AA60
	0x0376AA00 LDR X8, [X20]
	0x0376AA04 ADRP X10, 0x989000
	0x0376AA08 LDRH W9, [X8 + 0x12E]
	0x0376AA0C LDR X10, [X10 + 0xE00]
	0x0376AA10 LDR X1, [X10]
	0x0376AA14 CBZ X9, 0x376AA38
	0x0376AA18 LDR X10, [X8 + 0xB0]
	0x0376AA1C ADD X10, X10, 0x8
	0x0376AA20 LDUR X11, [X10 - 0x8]
	0x0376AA24 CMP X11, X1
	0x0376AA28 B.EQ 0x376AA48
	0x0376AA2C SUBS X9, X9, 0x1
	0x0376AA30 ADD X10, X10, 0x10
	0x0376AA34 B.NE 0x376AA20
	0x0376AA38 MOV X0, X20
	0x0376AA3C MOV W2, W31
	0x0376AA40 BL 0x1C5C788
	0x0376AA44 B 0x376AA54
	0x0376AA48 LDRSW X9, [X10]
	0x0376AA4C ADD X8, X8, X9, 0x4, LSL
	0x0376AA50 ADD X0, X8, 0x138
	0x0376AA54 LDP X8, X1, [X0]
	0x0376AA58 MOV X0, X20
	0x0376AA5C BLR X8
	0x0376AA60 CBNZ X23, 0x376AA6C
	0x0376AA64 MOV X0, X22
	0x0376AA68 BL 0x1D2C690
	0x0376AA6C MOV X0, X23
	0x0376AA70 BL 0x1C16F18
	0x0376AA74 BL 0x1990590
	0x0376AA78 STR X30, [X31 - 0x20]!
	0x0376AA7C STP X20, X19, [X31 + 0x10]
	0x0376AA80 LDR W8, [X0 + 0x10]
	0x0376AA84 MOV X20, X0
	0x0376AA88 MOV X19, X1
	0x0376AA8C MOV X0, X1
	0x0376AA90 MOV W1, W8
	0x0376AA94 MOV X2, X31
	0x0376AA98 BL 0x3753850
	0x0376AA9C TBZ X0, 0x0, 0x376AAB8
	0x0376AAA0 LDR W1, [X20 + 0x14]
	0x0376AAA4 MOV X0, X19
	0x0376AAA8 LDP X20, X19, [X31 + 0x10]
	0x0376AAAC MOV X2, X31
	0x0376AAB0 LDR X30, [X31], #0x20
	0x0376AAB4 B 0x37538F8
	0x0376AAB8 LDP X20, X19, [X31 + 0x10]
	0x0376AABC MOV X0, X31
	0x0376AAC0 LDR X30, [X31], #0x20
	0x0376AAC4 RET
	0x0376AAC8 MOV X1, X31
	0x0376AACC B 0x37534C8
	0x0376AAD0 LDR X0, [X0 + 0x28]
	0x0376AAD4 RET
	0x0376AAD8 LDR W0, [X0 + 0x20]
	0x0376AADC RET
	0x0376AAE0 STR X30, [X31 - 0x20]!
	0x0376AAE4 STP X20, X19, [X31 + 0x10]
	0x0376AAE8 MOV X19, X1
	0x0376AAEC MOV X20, X0
	0x0376AAF0 BL 0x376AB20
	0x0376AAF4 TBZ X0, 0x0, 0x376AB10
	0x0376AAF8 LDR W1, [X20 + 0x18]
	0x0376AAFC MOV X0, X19
	0x0376AB00 LDP X20, X19, [X31 + 0x10]
	0x0376AB04 MOV X2, X31
	0x0376AB08 LDR X30, [X31], #0x20
	0x0376AB0C B 0x375382C
	0x0376AB10 LDP X20, X19, [X31 + 0x10]
	0x0376AB14 FMOV S0, W31
	0x0376AB18 LDR X30, [X31], #0x20
	0x0376AB1C RET
	0x0376AB20 STP D9, D8, [X31 - 0x30]!
	0x0376AB24 STR X30, [X31 + 0x10]
	0x0376AB28 STP X20, X19, [X31 + 0x20]
	0x0376AB2C LDR W8, [X0 + 0x10]
	0x0376AB30 MOV X20, X0
	0x0376AB34 MOV X19, X1
	0x0376AB38 MOV X0, X1
	0x0376AB3C MOV W1, W8
	0x0376AB40 MOV X2, X31
	0x0376AB44 BL 0x3753850
	0x0376AB48 TBZ X0, 0x0, 0x376AB78
	0x0376AB4C LDR W1, [X20 + 0x14]
	0x0376AB50 MOV X0, X19
	0x0376AB54 MOV X2, X31
	0x0376AB58 BL 0x3753850
	0x0376AB5C TBZ X0, 0x0, 0x376AB78
	0x0376AB60 LDRB W8, [X20 + 0x30]
	0x0376AB64 CBZ W8, 0x376AB70
	0x0376AB68 LDRB W8, [X20 + 0x1C]
	0x0376AB6C CBZ W8, 0x376AB8C
	0x0376AB70 MOVZ W0, 0x1
	0x0376AB74 B 0x376AB7C
	0x0376AB78 MOV W0, W31
	0x0376AB7C LDP X20, X19, [X31 + 0x20]
	0x0376AB80 LDR X30, [X31 + 0x10]
	0x0376AB84 LDP D9, D8, [X31], #0x30
	0x0376AB88 RET

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+48], X30
	003 Move [X31+56], X25
	004 Move [X31+64], X24
	005 Move [X31+72], X23
	006 Move [X31+80], X22
	007 Move [X31+88], X21
	008 Move [X31+96], X20
	009 Move [X31+104], X19
	010 Move X21, 0xC77000
	011 Move X23, 0x98A000
	012 Move W8, [X21+3732]
	013 Move X23, [X23+1728]
	014 Move X19, X1
	015 Move X20, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {43}
	020 Move X0, 0x9DD000
	021 Move X0, [X0+1680]
	022 Call 0x1C17CF4
	023 Move X0, 0x9DD000
	024 Move X0, [X0+1688]
	025 Call 0x1C17CF4
	026 Move X0, 0x9DD000
	027 Move X0, [X0+1696]
	028 Call 0x1C17CF4
	029 Move X0, 0x9DD000
	030 Move X0, [X0+1704]
	031 Call 0x1C17CF4
	032 Move X0, 0x9DD000
	033 Move X0, [X0+1712]
	034 Call 0x1C17CF4
	035 Move X0, 0x9DD000
	036 Move X0, [X0+1720]
	037 Call 0x1C17CF4
	038 Move X0, 0x98A000
	039 Move X0, [X0+1728]
	040 Call 0x1C17CF4
	041 Move W8, 1
	042 Move [X21+3732], W8
	043 Move X0, [X23]
	044 NotImplemented "Instruction MOVI not yet implemented."
	045 Move [X31+16], V0
	046 Move [X31+24], V0
	047 Move [X31], V0
	048 Move W8, [X0+224]
	049 Compare W8, 0
	050 JumpIfNotEqual {52}
	051 Call 0x1C17DFC
	052 Move X0, X19
	053 Move X1, X31
	054 Move X2, X31
	055 Call Type.op_Equality, X0, X1
	056 Move TEMP, X0
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfEqual {112}
	060 Move X0, [X20]
	061 Compare X0, 0
	062 JumpIfEqual {130}
	063 Move X8, 0x9DD000
	064 Move X8, [X8+1680]
	065 Move X25, 0x9DD000
	066 Move X24, 0x9DD000
	067 Move X1, [X8]
	068 Move X25, [X25+1696]
	069 Move X24, [X24+1688]
	070 Add X8, X31, 0
	071 Call Dictionary`2<InternedString, Object>.GetEnumerator, X0
	072 Move X1, [X25]
	073 Add X0, X31, 0
	074 Call Enumerator<InternedString, Object>.MoveNext, X0
	075 Move TEMP, X0
	076 And TEMP, TEMP, 1
	077 Compare TEMP, 1
	078 JumpIfNotEqual {95}
	079 Move X0, [X23]
	080 Move X20, [X31+16]
	081 Move X21, [X31+24]
	082 Move X22, [X31+32]
	083 Move W8, [X0+224]
	084 Compare W8, 0
	085 JumpIfNotEqual {87}
	086 Call 0x1C17DFC
	087 Move X0, X22
	088 Move X1, X19
	089 Move X2, X31
	090 Call Type.op_Equality, X0, X1
	091 Move TEMP, X0
	092 And TEMP, TEMP, 1
	093 Compare TEMP, 1
	094 JumpIfNotEqual {72}
	095 Move X20, X31
	096 Move X21, X31
	097 Move X1, [X24]
	098 Add X0, X31, 0
	099 Call Enumerator<InternedString, Object>.Dispose, X0
	100 Move X0, X20
	101 Move X1, X21
	102 Move X20, [X31+96]
	103 Move X19, [X31+104]
	104 Move X22, [X31+80]
	105 Move X21, [X31+88]
	106 Move X24, [X31+64]
	107 Move X23, [X31+72]
	108 Move X30, [X31+48]
	109 Move X25, [X31+56]
	110 Add X31, X31, 112
	111 Return X0
	112 Move X0, 0x98F000
	113 Move X0, [X0+1320]
	114 Call 0x1C17D08
	115 Call 0x1C17F10
	116 Move X19, X0
	117 Move X0, 0x992000
	118 Move X0, [X0+1512]
	119 Call 0x1C17D08
	120 Move X1, X0
	121 Move X0, X19
	122 Move X2, X31
	123 Call ArgumentNullException..ctor, X0, X1
	124 Move X0, 0x9DD000
	125 Move X0, [X0+1728]
	126 Call 0x1C17D08
	127 Move X1, X0
	128 Move X0, X19
	129 Call 0x1C17DEC
	130 Call 0x1C17F20
	131 Move X19, X0
	132 NotImplemented "Instruction CMP not yet implemented."
	133 Move X0, X19
	134 Call 0x3EB2AD0
	135 Move X20, [X0]
	136 Call 0x3EB2AE0
	137 Move X1, [X24]
	138 Add X0, X31, 0
	139 Call Enumerator<InternedString, Object>.Dispose, X0
	140 Compare X20, 0
	141 JumpIfNotEqual {144}
	142 Move X21, X31
	143 Move X20, X31
	144 Move X0, X20
	145 Call 0x1C17F18
	146 Move X19, X0
	147 Move X1, [X24]
	148 Add X0, X31, 0
	149 Call Enumerator<InternedString, Object>.Dispose, X0
	150 Compare X20, 0
	151 JumpIfNotEqual {154}
	152 Move X0, X19
	153 Call 0x1D2D690
	154 Move X0, X20
	155 Call 0x1C17F18
	156 Call 0x1991590

Method: System.Void AddTypeRegistration(System.String name, System.Type type)

Disassembly:
	0x0376AB8C LDR W1, [X20 + 0x18]
	0x0376AB90 MOV X0, X19
	0x0376AB94 MOV X2, X31
	0x0376AB98 BL 0x375391C
	0x0376AB9C LDR W1, [X20 + 0x10]
	0x0376ABA0 MOV X0, X19
	0x0376ABA4 MOV X2, X31
	0x0376ABA8 MOV V8.16B, V0.16B
	0x0376ABAC BL 0x375391C
	0x0376ABB0 LDR W1, [X20 + 0x14]
	0x0376ABB4 MOV X0, X19
	0x0376ABB8 MOV X2, X31
	0x0376ABBC MOV V9.16B, V0.16B
	0x0376ABC0 BL 0x375391C
	0x0376ABC4 FCMP D9, D8
	0x0376ABC8 CSET W8, LS
	0x0376ABCC FCMP D0, D8
	0x0376ABD0 CSET W9, LS
	0x0376ABD4 AND W0, W8, W9, 0x0
	0x0376ABD8 B 0x376AB7C
	0x0376ABDC STR X30, [X31 - 0x30]!
	0x0376ABE0 STP X22, X21, [X31 + 0x10]
	0x0376ABE4 STP X20, X19, [X31 + 0x20]
	0x0376ABE8 MOV W20, W3
	0x0376ABEC MOV X19, X2
	0x0376ABF0 MOV X21, X1
	0x0376ABF4 MOV X22, X0
	0x0376ABF8 BL 0x376AB20
	0x0376ABFC TBZ X0, 0x0, 0x376AC24
	0x0376AC00 LDR W1, [X22 + 0x18]
	0x0376AC04 MOV X0, X21
	0x0376AC08 MOV X2, X19
	0x0376AC0C MOV W3, W20
	0x0376AC10 LDP X20, X19, [X31 + 0x20]
	0x0376AC14 LDP X22, X21, [X31 + 0x10]
	0x0376AC18 MOV X4, X31
	0x0376AC1C LDR X30, [X31], #0x30
	0x0376AC20 B 0x37538D4
	0x0376AC24 LDRSW X1, [X22 + 0x20]
	0x0376AC28 MOV X0, X19
	0x0376AC2C LDP X20, X19, [X31 + 0x20]
	0x0376AC30 LDP X22, X21, [X31 + 0x10]
	0x0376AC34 MOV X2, X31
	0x0376AC38 LDR X30, [X31], #0x30
	0x0376AC3C B 0x3C001B4
	0x0376AC40 STP X30, X21, [X31 - 0x20]!
	0x0376AC44 STP X20, X19, [X31 + 0x10]
	0x0376AC48 ADRP X21, 0xC76000
	0x0376AC4C LDRB W8, [X21 + 0xEA2]
	0x0376AC50 MOV X20, X1
	0x0376AC54 MOV X19, X0
	0x0376AC58 TBNZ X8, 0x0, 0x376AC70
	0x0376AC5C ADRP X0, 0x9B1000
	0x0376AC60 LDR X0, [X0 + 0x270]
	0x0376AC64 BL 0x1C16CF4
	0x0376AC68 MOVZ W8, 0x1
	0x0376AC6C STRB W8, [X21 + 0xEA2]
	0x0376AC70 LDR W1, [X19 + 0x18]
	0x0376AC74 ADD X2, X19, 0x28
	0x0376AC78 ADD X3, X19, 0x20
	0x0376AC7C ADD X4, X19, 0x30
	0x0376AC80 MOV X0, X20
	0x0376AC84 BL 0x376A5AC
	0x0376AC88 LDRB W8, [X19 + 0x1C]
	0x0376AC8C CBNZ W8, 0x376ACC0
	0x0376AC90 ADRP X8, 0x9B1000
	0x0376AC94 LDR X8, [X8 + 0x270]
	0x0376AC98 LDR X0, [X8]
	0x0376AC9C LDR W8, [X0 + 0xE0]
	0x0376ACA0 CBNZ W8, 0x376ACA8
	0x0376ACA4 BL 0x1C16DFC
	0x0376ACA8 MOV X0, X31
	0x0376ACAC BL 0x37701B0
	0x0376ACB0 CBZ X0, 0x376ACCC
	0x0376ACB4 LDRB W8, [X0 + 0x5D]
	0x0376ACB8 EOR W8, W8, 0x1
	0x0376ACBC STRB W8, [X19 + 0x1C]
	0x0376ACC0 LDP X20, X19, [X31 + 0x10]
	0x0376ACC4 LDP X30, X21, [X31], #0x20
	0x0376ACC8 RET
	0x0376ACCC BL 0x1C16F20
	0x0376ACD0 STR X30, [X31 - 0x20]!
	0x0376ACD4 STP X20, X19, [X31 + 0x10]
	0x0376ACD8 LDR W8, [X0 + 0x10]
	0x0376ACDC MOV X20, X0
	0x0376ACE0 MOV X19, X1
	0x0376ACE4 MOV X0, X1
	0x0376ACE8 MOV W1, W8

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+32], X22
	004 Move [X31+40], X21
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move X22, 0xC77000
	008 Move W8, [X22+3733]
	009 Move X19, X2
	010 Move X21, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x9DD000
	017 Move X0, [X0+1736]
	018 Call 0x1C17CF4
	019 Move X0, 0x98A000
	020 Move X0, [X0+1728]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+3733], W8
	024 Move X0, X21
	025 Move X1, X31
	026 Move [X31], X31
	027 Move [X31+8], X31
	028 Call String.IsNullOrEmpty, X0
	029 Move TEMP, X0
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {69}
	033 Move X8, 0x98A000
	034 Move X8, [X8+1728]
	035 Move X0, [X8]
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {40}
	039 Call 0x1C17DFC
	040 Move X0, X19
	041 Move X1, X31
	042 Move X2, X31
	043 Call Type.op_Equality, X0, X1
	044 Move TEMP, X0
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfEqual {86}
	048 Add X0, X31, 0
	049 Move X1, X21
	050 Move X2, X31
	051 Call InternedString..ctor, X0, X1
	052 Move X0, [X20]
	053 Compare X0, 0
	054 JumpIfEqual {104}
	055 Move X8, 0x9DD000
	056 Move X8, [X8+1736]
	057 Move X1, [X31]
	058 Move X2, [X31+8]
	059 Move X3, X19
	060 Move X4, [X8]
	061 Call Dictionary`2<InternedString, Object>.set_Item, X0, X1, X2
	062 Move X20, [X31+48]
	063 Move X19, [X31+56]
	064 Move X22, [X31+32]
	065 Move X21, [X31+40]
	066 Move X30, [X31+16]
	067 Add X31, X31, 64
	068 Return 
	069 Move X0, 0x992000
	070 Move X0, [X0+1400]
	071 Call 0x1C17D08
	072 Call 0x1C17F10
	073 Move X19, X0
	074 Move X0, 0x9DD000
	075 Move X0, [X0+1744]
	076 Call 0x1C17D08
	077 Move X20, X0
	078 Move X0, 0x992000
	079 Move X0, [X0+1416]
	080 Call 0x1C17D08
	081 Move X2, X0
	082 Move X0, X19
	083 Move X1, X20
	084 Move X3, X31
	085 Call ArgumentException..ctor, X0, X1, X2
	086 Move X0, 0x98F000
	087 Move X0, [X0+1320]
	088 Call 0x1C17D08
	089 Call 0x1C17F10
	090 Move X19, X0
	091 Move X0, 0x992000
	092 Move X0, [X0+1512]
	093 Call 0x1C17D08
	094 Move X1, X0
	095 Move X0, X19
	096 Move X2, X31
	097 Call ArgumentNullException..ctor, X0, X1
	098 Move X0, 0x9DD000
	099 Move X0, [X0+1752]
	100 Call 0x1C17D08
	101 Move X1, X0
	102 Move X0, X19
	103 Call 0x1C17DEC
	104 Call 0x1C17F20

Method: System.Type LookupTypeRegistration(System.String name)

Disassembly:
	0x0376ACEC MOV X2, X31
	0x0376ACF0 BL 0x3753850
	0x0376ACF4 TBZ X0, 0x0, 0x376AD24
	0x0376ACF8 LDR W1, [X20 + 0x14]
	0x0376ACFC MOV X0, X19
	0x0376AD00 MOV X2, X31
	0x0376AD04 BL 0x3753850
	0x0376AD08 TBZ X0, 0x0, 0x376AD24
	0x0376AD0C LDR W1, [X20 + 0x18]
	0x0376AD10 MOV X0, X19
	0x0376AD14 LDP X20, X19, [X31 + 0x10]
	0x0376AD18 MOV X2, X31
	0x0376AD1C LDR X30, [X31], #0x20
	0x0376AD20 B 0x37538F8
	0x0376AD24 LDP X20, X19, [X31 + 0x10]
	0x0376AD28 MOV X0, X31
	0x0376AD2C LDR X30, [X31], #0x20
	0x0376AD30 RET
	0x0376AD34 MOV X1, X31
	0x0376AD38 B 0x37534C8
	0x0376AD3C STR D10, [X31 - 0x50]!
	0x0376AD40 STP D9, D8, [X31 + 0x8]
	0x0376AD44 STR X30, [X31 + 0x18]
	0x0376AD48 STP X24, X23, [X31 + 0x20]
	0x0376AD4C STP X22, X21, [X31 + 0x30]
	0x0376AD50 STP X20, X19, [X31 + 0x40]
	0x0376AD54 ADRP X21, 0xC76000
	0x0376AD58 LDRB W8, [X21 + 0xEA3]
	0x0376AD5C MOV X19, X1
	0x0376AD60 MOV X20, X0
	0x0376AD64 TBNZ X8, 0x0, 0x376AD7C
	0x0376AD68 ADRP X0, 0x9DC000
	0x0376AD6C LDR X0, [X0 + 0x6F8]
	0x0376AD70 BL 0x1C16CF4
	0x0376AD74 MOVZ W8, 0x1
	0x0376AD78 STRB W8, [X21 + 0xEA3]
	0x0376AD7C LDR W24, [X20 + 0x24]
	0x0376AD80 LDR W1, [X20 + 0x10]
	0x0376AD84 CMP W24, 0x2
	0x0376AD88 B.NE 0x376AE0C
	0x0376AD8C ADRP X21, 0x9DC000
	0x0376AD90 LDR X21, [X21 + 0x6F8]
	0x0376AD94 MOV X0, X19
	0x0376AD98 LDR X2, [X21]
	0x0376AD9C BL 0x21FB0F0
	0x0376ADA0 LDR W1, [X20 + 0x14]
	0x0376ADA4 LDR X2, [X21]
	0x0376ADA8 MOV X0, X19
	0x0376ADAC MOV V8.16B, V0.16B
	0x0376ADB0 BL 0x21FB0F0
	0x0376ADB4 LDR W1, [X20 + 0x18]
	0x0376ADB8 LDR X2, [X21]
	0x0376ADBC MOV X0, X19
	0x0376ADC0 MOV V9.16B, V0.16B
	0x0376ADC4 BL 0x21FB0F0
	0x0376ADC8 LDR W1, [X20 + 0x1C]
	0x0376ADCC LDR X2, [X21]
	0x0376ADD0 MOV X0, X19
	0x0376ADD4 MOV V10.16B, V0.16B
	0x0376ADD8 BL 0x21FB0F0
	0x0376ADDC MOV V3.16B, V0.16B

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+40], X21
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move X21, 0xC77000
	007 Move W8, [X21+3734]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x9DD000
	015 Move X0, [X0+1760]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3734], W8
	019 Move X0, X20
	020 Move X1, X31
	021 Move [X31+16], X31
	022 Move [X31+24], X31
	023 Move [X31+8], X31
	024 Call String.IsNullOrEmpty, X0
	025 Move W8, W0
	026 Move X0, X31
	027 Move TEMP, X8
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {51}
	031 Move X8, [X19]
	032 Compare X8, 0
	033 JumpIfEqual {57}
	034 Add X0, X31, 16
	035 Move X1, X20
	036 Move X2, X31
	037 Call InternedString..ctor, X0, X1
	038 Move X0, [X19]
	039 Compare X0, 0
	040 JumpIfEqual {75}
	041 Move X8, 0x9DD000
	042 Move X1, [X31+16]
	043 Move X2, [X31+24]
	044 Move X8, [X8+1760]
	045 Add X3, X31, 8
	046 Move X4, [X8]
	047 Call Dictionary`2<InternedString, Object>.TryGetValue, X0, X1, X2
	048 Move X8, [X31+8]
	049 And W31, W0, 1
	050 NotImplemented "Instruction CSEL not yet implemented."
	051 Move X20, [X31+48]
	052 Move X19, [X31+56]
	053 Move X30, [X31+32]
	054 Move X21, [X31+40]
	055 Add X31, X31, 64
	056 Return X0
	057 Move X0, 0x98A000
	058 Move X0, [X0+1456]
	059 Call 0x1C17D08
	060 Call 0x1C17F10
	061 Move X19, X0
	062 Move X0, 0x9DD000
	063 Move X0, [X0+1768]
	064 Call 0x1C17D08
	065 Move X1, X0
	066 Move X0, X19
	067 Move X2, X31
	068 Call InvalidOperationException..ctor, X0, X1
	069 Move X0, 0x9DD000
	070 Move X0, [X0+1776]
	071 Call 0x1C17D08
	072 Move X1, X0
	073 Move X0, X19
	074 Call 0x1C17DEC
	075 Call 0x1C17F20

