Type: UnityEngine.InputSystem.Utilities.ReadOnlyArrayExtensions

Method: System.Boolean Contains(UnityEngine.InputSystem.Utilities.ReadOnlyArray`1<TValue> array, TValue value)

Disassembly:
	0x0223D25C MOV W2, W31
	0x0223D260 BL 0x1C5C788
	0x0223D264 B 0x223D274
	0x0223D268 LDRSW X9, [X10]
	0x0223D26C ADD X8, X8, X9, 0x4, LSL
	0x0223D270 ADD X0, X8, 0x138
	0x0223D274 LDP X8, X1, [X0]
	0x0223D278 MOV X0, X25
	0x0223D27C BLR X8
	0x0223D280 SUB W8, W27, W20
	0x0223D284 CMP W8, W0
	0x0223D288 B.LT 0x223D704
	0x0223D28C ADRP X28, 0x1EBD000
	0x0223D290 LDR X28, [X28 + 0x2F0]
	0x0223D294 MOV X0, X25
	0x0223D298 LDR X1, [X28]
	0x0223D29C BL 0x1C16E00
	0x0223D2A0 CBZ X0, 0x223D2E8
	0x0223D2A4 LDR X8, [X0]
	0x0223D2A8 LDR X1, [X28]
	0x0223D2AC MOV X27, X0
	0x0223D2B0 LDRH W9, [X8 + 0x12E]
	0x0223D2B4 CBZ X9, 0x223D2D8
	0x0223D2B8 LDR X10, [X8 + 0xB0]
	0x0223D2BC ADD X10, X10, 0x8
	0x0223D2C0 LDUR X11, [X10 - 0x8]
	0x0223D2C4 CMP X11, X1
	0x0223D2C8 B.EQ 0x223D36C
	0x0223D2CC SUBS X9, X9, 0x1
	0x0223D2D0 ADD X10, X10, 0x10
	0x0223D2D4 B.NE 0x223D2C0
	0x0223D2D8 MOV X0, X27
	0x0223D2DC MOV W2, W31
	0x0223D2E0 BL 0x1C5C788
	0x0223D2E4 B 0x223D378
	0x0223D2E8 LDR X8, [X19 + 0x38]
	0x0223D2EC LDR X1, [X8 + 0x10]
	0x0223D2F0 LDRB W8, [X1 + 0x135]
	0x0223D2F4 TBNZ X8, 0x0, 0x223D304
	0x0223D2F8 MOV X0, X1
	0x0223D2FC BL 0x1C5C684
	0x0223D300 MOV X1, X0
	0x0223D304 MOV X0, X26
	0x0223D308 BL 0x1C16E00
	0x0223D30C CBZ X0, 0x223D388
	0x0223D310 LDR X8, [X19 + 0x38]
	0x0223D314 MOV X27, X0
	0x0223D318 LDR X1, [X8]
	0x0223D31C LDRB W8, [X1 + 0x135]
	0x0223D320 TBNZ X8, 0x0, 0x223D330
	0x0223D324 MOV X0, X1
	0x0223D328 BL 0x1C5C684
	0x0223D32C MOV X1, X0
	0x0223D330 LDR X8, [X25]
	0x0223D334 LDRH W9, [X8 + 0x12E]

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X8, [X4+56]
	014 Move X19, X4
	015 Move X20, X3
	016 Move X21, X2
	017 Move X23, X1
	018 Move X22, X0
	019 Compare X8, 0
	020 JumpIfNotEqual {23}
	021 Move X0, X19
	022 Call 0x1C5D6E0
	023 Move X24, X23
	024 ShiftRight X24, 32
	025 And X24, X24, 0x7FFFFFFF
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Compare X22, 0
	028 JumpIfEqual {70}
	029 NotImplemented "Instruction SBFM not yet implemented."
	030 And X23, X23, 0
	031 Move X25, X31
	032 Move W27, 1
	033 Move X28, X23
	034 ShiftRight X28, 32
	035 And X28, X28, 0x7FFFFFFF
	036 Move X29, 1
	037 Move W8, [X22+24]
	038 Add X9, X23, X25
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move X8, [X19+56]
	041 Move X1, X21
	042 Move X2, X20
	043 Move X3, [X8+32]
	044 Add X8, X22, X28
	045 Add X0, X8, 32
	046 Call InternedString.CompareTo, X0, X1
	047 Compare W0, 0
	048 JumpIfEqual {55}
	049 Add X25, X25, 1
	050 NotImplemented "Instruction CMP not yet implemented."
	051 NotImplemented "Instruction CSET not yet implemented."
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Add X28, X28, X29
	054 Move W27, W31
	055 And W0, W27, 1
	056 Move X20, [X31+80]
	057 Move X19, [X31+88]
	058 Move X22, [X31+64]
	059 Move X21, [X31+72]
	060 Move X24, [X31+48]
	061 Move X23, [X31+56]
	062 Move X26, [X31+32]
	063 Move X25, [X31+40]
	064 Move X28, [X31+16]
	065 Move X27, [X31+24]
	066 Move X29, [X31+96]
	067 Move X30, [X31+104]
	068 Return X0
	069 Call 0x1C17F28
	070 Call 0x1C17F20

Method: System.Boolean ContainsReference(UnityEngine.InputSystem.Utilities.ReadOnlyArray`1<TValue> array, TValue value)

Disassembly:
	0x0223D504 ADD X10, X10, 0x8
	0x0223D508 LDUR X11, [X10 - 0x8]
	0x0223D50C CMP X11, X1
	0x0223D510 B.EQ 0x223D530
	0x0223D514 SUBS X9, X9, 0x1
	0x0223D518 ADD X10, X10, 0x10
	0x0223D51C B.NE 0x223D508
	0x0223D520 MOV X0, X25
	0x0223D524 MOV W2, W31
	0x0223D528 BL 0x1C5C788
	0x0223D52C B 0x223D53C
	0x0223D530 LDRSW X9, [X10]
	0x0223D534 ADD X8, X8, X9, 0x4, LSL
	0x0223D538 ADD X0, X8, 0x138
	0x0223D53C STUR X22, [X29 - 0x10]
	0x0223D540 LDR X1, [X0 + 0x8]
	0x0223D544 LDP X0, X8, [X1 + 0x8]
	0x0223D548 SUB X3, X29, 0x10

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X3+56]
	006 Move X19, X2
	007 Move X20, X1
	008 Move X21, X0
	009 Compare X8, 0
	010 JumpIfNotEqual {13}
	011 Move X0, X3
	012 Call 0x1C5D6E0
	013 Move X0, X21
	014 Move X1, X20
	015 Move X2, X19
	016 Call 0x223D9C8, X0, X1
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 Add W31, W0, 1
	020 NotImplemented "Instruction CSET not yet implemented."
	021 Move X30, [X31+32]
	022 Move X21, [X31+40]
	023 Return X0

Method: System.Int32 IndexOfReference(UnityEngine.InputSystem.Utilities.ReadOnlyArray`1<TValue> array, TValue value)

Disassembly:
	0x0223D9C8 CBNZ X8, 0x223D9D4
	0x0223D9CC MOV X0, X19
	0x0223D9D0 BL 0x1C5C6E0
	0x0223D9D4 CMP W20, W21
	0x0223D9D8 B.GT 0x223D9F4
	0x0223D9DC MOV W0, W20
	0x0223D9E0 LDP X20, X19, [X31 + 0x30]
	0x0223D9E4 LDP X22, X21, [X31 + 0x20]
	0x0223D9E8 LDP X30, X23, [X31 + 0x10]
	0x0223D9EC ADD X31, X31, 0x40
	0x0223D9F0 RET
	0x0223D9F4 LDR X8, [X19 + 0x38]
	0x0223D9F8 ADRP X0, 0x1EB6000
	0x0223D9FC LDR X22, [X8]
	0x0223DA00 LDR X0, [X0 + 0x6C0]
	0x0223DA04 BL 0x1C16D08
	0x0223DA08 BL 0x19903D0
	0x0223DA0C MOV X0, X22
	0x0223DA10 MOV X1, X31
	0x0223DA14 BL 0x338C698
	0x0223DA18 MOV X22, X0
	0x0223DA1C BL 0x19903C0
	0x0223DA20 LDR X8, [X22]

ISIL:
	001 Move [X31-16], X30
	002 Move X9, X1
	003 ShiftRight X9, 32
	004 And X9, X9, 0x7FFFFFFF
	005 NotImplemented "Instruction CMP not yet implemented."
	006 Move X8, X0
	007 Compare X0, 0
	008 JumpIfEqual {24}
	009 Move W10, [X8+24]
	010 Move X0, X31
	011 Add X11, X1, X0
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Add X11, X8, W11
	014 Move X11, [X11+32]
	015 NotImplemented "Instruction CMP not yet implemented."
	016 Add X0, X0, 1
	017 NotImplemented "Instruction CMP not yet implemented."
	018 Move TEMP, 0
	019 Not TEMP
	020 Move W0, TEMP
	021 Move X30, [X31+16]
	022 Return X0
	023 Call 0x1C17F28
	024 Call 0x1C17F20

Method: System.Boolean HaveEqualReferences(UnityEngine.InputSystem.Utilities.ReadOnlyArray`1<TValue> array1, System.Collections.Generic.IReadOnlyList`1<TValue> array2, System.Int32 count = 2147483647)

Disassembly:
	0x0223D54C MOV X2, X25
	0x0223D550 MOV X4, X22
	0x0223D554 BLR X8
	0x0223D558 MOV X0, X24
	0x0223D55C MOV X1, X22
	0x0223D560 MOV X2, X21
	0x0223D564 BL 0x3EB1AC0
	0x0223D568 MOV X0, X23
	0x0223D56C MOV X1, X24
	0x0223D570 MOV X2, X21
	0x0223D574 BL 0x3EB1AC0
	0x0223D578 LDR X8, [X19 + 0x38]
	0x0223D57C LDR X0, [X8 + 0x40]
	0x0223D580 MOV X1, X23
	0x0223D584 BL 0x1C16E04
	0x0223D588 MOV X27, X0
	0x0223D58C CBZ X0, 0x223D5A4
	0x0223D590 LDR X8, [X26]
	0x0223D594 LDR X1, [X8 + 0x40]
	0x0223D598 MOV X0, X27
	0x0223D59C BL 0x1C16E00
	0x0223D5A0 CBZ X0, 0x223D638
	0x0223D5A4 LDR W8, [X26 + 0x18]
	0x0223D5A8 CMP W20, W8
	0x0223D5AC B.CS 0x223D634
	0x0223D5B0 ADD X8, X26, W20, 0x3, SXTW
	0x0223D5B4 ADD W20, W20, 0x1
	0x0223D5B8 STR X27, [X8 + 0x20]
	0x0223D5BC B 0x223D47C
	0x0223D5C0 MOV X20, X31
	0x0223D5C4 CBZ X25, 0x223D628
	0x0223D5C8 ADRP X10, 0x1EB6000
	0x0223D5CC LDR X8, [X25]
	0x0223D5D0 LDR X10, [X10 + 0xE00]
	0x0223D5D4 LDRH W9, [X8 + 0x12E]
	0x0223D5D8 LDR X1, [X10]
	0x0223D5DC CBZ X9, 0x223D600
	0x0223D5E0 LDR X10, [X8 + 0xB0]
	0x0223D5E4 ADD X10, X10, 0x8
	0x0223D5E8 LDUR X11, [X10 - 0x8]
	0x0223D5EC CMP X11, X1
	0x0223D5F0 B.EQ 0x223D610
	0x0223D5F4 SUBS X9, X9, 0x1
	0x0223D5F8 ADD X10, X10, 0x10
	0x0223D5FC B.NE 0x223D5E8
	0x0223D600 MOV X0, X25
	0x0223D604 MOV W2, W31
	0x0223D608 BL 0x1C5C788
	0x0223D60C B 0x223D61C
	0x0223D610 LDRSW X9, [X10]
	0x0223D614 ADD X8, X8, X9, 0x4, LSL
	0x0223D618 ADD X0, X8, 0x138
	0x0223D61C LDP X8, X1, [X0]
	0x0223D620 MOV X0, X25
	0x0223D624 BLR X8
	0x0223D628 CBZ X20, 0x223D420
	0x0223D62C MOV X0, X20
	0x0223D630 BL 0x1C16F18
	0x0223D634 BL 0x1C16F28
	0x0223D638 BL 0x1C16F44
	0x0223D63C MOV X1, X31
	0x0223D640 BL 0x1C16DEC
	0x0223D644 ADRP X0, 0x1EBB000
	0x0223D648 LDR X0, [X0 + 0x528]
	0x0223D64C BL 0x1C16D08
	0x0223D650 BL 0x1C16F10
	0x0223D654 MOV X20, X0
	0x0223D658 ADRP X0, 0x1EDE000
	0x0223D65C LDR X0, [X0 + 0x640]
	0x0223D660 BL 0x1C16D08
	0x0223D664 MOV X1, X0
	0x0223D668 MOV X0, X20
	0x0223D66C MOV X2, X31
	0x0223D670 BL 0x330E100
	0x0223D674 B 0x223D734
	0x0223D678 ADRP X0, 0x1EBE000
	0x0223D67C LDR X0, [X0 + 0x578]
	0x0223D680 BL 0x1C16D08
	0x0223D684 BL 0x1C16F10
	0x0223D688 MOV X20, X0
	0x0223D68C ADRP X0, 0x1EDF000
	0x0223D690 LDR X0, [X0 + 0x308]
	0x0223D694 B 0x223D720
	0x0223D698 ADRP X0, 0x1EBE000
	0x0223D69C LDR X0, [X0 + 0x578]
	0x0223D6A0 BL 0x1C16D08
	0x0223D6A4 BL 0x1C16F10
	0x0223D6A8 MOV X20, X0
	0x0223D6AC ADRP X0, 0x1EDF000
	0x0223D6B0 LDR X0, [X0 + 0x310]
	0x0223D6B4 B 0x223D720
	0x0223D6B8 ADRP X0, 0x1EBE000
	0x0223D6BC LDR X0, [X0 + 0x760]
	0x0223D6C0 BL 0x1C16D08
	0x0223D6C4 BL 0x1C16F10
	0x0223D6C8 MOV X20, X0
	0x0223D6CC ADRP X0, 0x1EC1000
	0x0223D6D0 LDR X0, [X0 + 0x130]
	0x0223D6D4 BL 0x1C16D08
	0x0223D6D8 MOV X21, X0
	0x0223D6DC ADRP X0, 0x1EDE000
	0x0223D6E0 LDR X0, [X0 + 0x670]
	0x0223D6E4 BL 0x1C16D08
	0x0223D6E8 MOV X2, X0
	0x0223D6EC MOV X0, X20
	0x0223D6F0 MOV X1, X21
	0x0223D6F4 MOV X3, X31
	0x0223D6F8 BL 0x3311888
	0x0223D6FC B 0x223D734
	0x0223D700 BL 0x1C16F20
	0x0223D704 ADRP X0, 0x1EBE000
	0x0223D708 LDR X0, [X0 + 0x578]
	0x0223D70C BL 0x1C16D08
	0x0223D710 BL 0x1C16F10
	0x0223D714 MOV X20, X0
	0x0223D718 ADRP X0, 0x1EDF000
	0x0223D71C LDR X0, [X0 + 0x318]
	0x0223D720 BL 0x1C16D08
	0x0223D724 MOV X1, X0

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move [X31], X0
	009 Move [X31+8], X1
	010 Move X8, [X4+56]
	011 Move X19, X4
	012 Move W22, W3
	013 Move X20, X2
	014 Move X21, X1
	015 ShiftRight X21, 32
	016 And X21, X21, 0x7FFFFFFF
	017 Compare X8, 0
	018 JumpIfNotEqual {27}
	019 Move X0, 0x1EB7000
	020 Move X0, [X0+1448]
	021 Call 0x1C17CF4
	022 Move X8, [X19+56]
	023 Compare X8, 0
	024 JumpIfNotEqual {27}
	025 Move X0, X19
	026 Call 0x1C5D6E0
	027 Move X8, 0x1EB7000
	028 Move X8, [X8+1448]
	029 Move X0, [X8]
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move W0, W21
	035 Move W1, W22
	036 Move X2, X31
	037 Call Math.Min, X0, X1
	038 Compare X20, 0
	039 JumpIfEqual {130}
	040 Move X8, [X19+56]
	041 Move W21, W0
	042 Move X1, [X8+32]
	043 Move W8, [X1+309]
	044 Move TEMP, X8
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfEqual {51}
	048 Move X0, X1
	049 Call 0x1C5D684
	050 Move X1, X0
	051 Move X8, [X20]
	052 NotImplemented "Instruction LDRH not yet implemented."
	053 Compare X9, 0
	054 JumpIfEqual {61}
	055 Move X10, [X8+176]
	056 Add X10, X10, 8
	057 NotImplemented "Instruction LDUR not yet implemented."
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Subtract X9, X9, 1
	060 Add X10, X10, 16
	061 Move X0, X20
	062 Move W2, W31
	063 Call 0x1C5D788
	064 NotImplemented "Instruction LDRSW not yet implemented."
	065 Add X8, X8, X9
	066 Add X0, X8, 312
	067 Move X8, [X0]
	068 Move X1, [X0+8]
	069 Move X0, X20
	070 NotImplemented "Instruction BLR not yet implemented."
	071 Move W1, W22
	072 Move X2, X31
	073 Call Math.Min, X0, X1
	074 NotImplemented "Instruction CMP not yet implemented."
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Move W22, W31
	077 Move X8, [X19+56]
	078 Add X0, X31, 0
	079 Move W1, W22
	080 Move X2, [X8+48]
	081 Call ReadOnlyArray`1<Object>.get_Item, X0, X1
	082 Move X8, [X19+56]
	083 Move X23, X0
	084 Move X1, [X8+24]
	085 Move W8, [X1+309]
	086 Move TEMP, X8
	087 And TEMP, TEMP, 1
	088 Compare TEMP, 1
	089 JumpIfEqual {93}
	090 Move X0, X1
	091 Call 0x1C5D684
	092 Move X1, X0
	093 Move X8, [X20]
	094 NotImplemented "Instruction LDRH not yet implemented."
	095 Compare X9, 0
	096 JumpIfEqual {103}
	097 Move X10, [X8+176]
	098 Add X10, X10, 8
	099 NotImplemented "Instruction LDUR not yet implemented."
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Subtract X9, X9, 1
	102 Add X10, X10, 16
	103 Move X0, X20
	104 Move W2, W31
	105 Call 0x1C5D788
	106 NotImplemented "Instruction LDRSW not yet implemented."
	107 Add X8, X8, X9
	108 Add X0, X8, 312
	109 Move X8, [X0]
	110 Move X2, [X0+8]
	111 Move X0, X20
	112 Move W1, W22
	113 NotImplemented "Instruction BLR not yet implemented."
	114 NotImplemented "Instruction CMP not yet implemented."
	115 Add W22, W22, 1
	116 Move X8, X0
	117 NotImplemented "Instruction CSET not yet implemented."
	118 NotImplemented "Instruction CMP not yet implemented."
	119 NotImplemented "Instruction CMP not yet implemented."
	120 Move W0, W31
	121 Move W0, 1
	122 Move X20, [X31+48]
	123 Move X19, [X31+56]
	124 Move X22, [X31+32]
	125 Move X21, [X31+40]
	126 Move X30, [X31+16]
	127 Move X23, [X31+24]
	128 Add X31, X31, 64
	129 Return X0
	130 Call 0x1C17F20

