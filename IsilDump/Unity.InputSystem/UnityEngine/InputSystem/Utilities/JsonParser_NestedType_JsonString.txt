Type: UnityEngine.InputSystem.Utilities.JsonParser/JsonString

Method: System.String ToString()

Disassembly:
	0x03761CCC LDR W8, [X0 + 0xE0]
	0x03761CD0 CBNZ W8, 0x3761CD8
	0x03761CD4 BL 0x1C16DFC
	0x03761CD8 MOV X0, X20
	0x03761CDC MOV X1, X31
	0x03761CE0 BL 0x3320B38
	0x03761CE4 LDR X8, [X19 + 0x10]
	0x03761CE8 CMP X0, X8
	0x03761CEC B 0x37621F4
	0x03761CF0 LDR W9, [X19]
	0x03761CF4 SUB W9, W9, 0x1
	0x03761CF8 CMP W9, 0x3
	0x03761CFC B.HI 0x3761C18
	0x03761D00 ADRP X8, 0xFFFFFFFFFD436000
	0x03761D04 ADD X8, X8, 0x898
	0x03761D08 ADR X10, 0x10
	0x03761D0C LDRH W11, [X8, X9, LSL #1]
	0x03761D10 ADD X10, X10, X11, 0x2, LSL
	0x03761D14 BR X10
	0x03761D18 LDRB W8, [X19 + 0x4]
	0x03761D1C TBNZ X8, 0x0, 0x3762180
	0x03761D20 ADRP X8, 0x9C6000
	0x03761D24 LDR X8, [X8 + 0xFF8]
	0x03761D28 MOV X0, X20
	0x03761D2C MOV X2, X31
	0x03761D30 LDR X1, [X8]
	0x03761D34 BL 0x321BA08
	0x03761D38 TBNZ X0, 0x0, 0x376230C
	0x03761D3C ADRP X8, 0x99C000
	0x03761D40 LDR X8, [X8 + 0xFF8]
	0x03761D44 MOV X0, X20
	0x03761D48 MOV X2, X31
	0x03761D4C LDR X1, [X8]
	0x03761D50 BL 0x321BA08
	0x03761D54 TBNZ X0, 0x0, 0x376230C
	0x03761D58 ADRP X8, 0x994000
	0x03761D5C LDR X8, [X8 + 0x4B0]
	0x03761D60 B 0x37621C0
	0x03761D64 MOV X0, X20
	0x03761D68 BL 0x1C16E08
	0x03761D6C LDR W8, [X19]
	0x03761D70 LDR V8, [X0]
	0x03761D74 CMP W8, 0x2
	0x03761D78 B.EQ 0x3761F0C
	0x03761D7C CMP W8, 0x4
	0x03761D80 B.NE 0x3761F40
	0x03761D84 MOV X0, X19
	0x03761D88 BL 0x3761240
	0x03761D8C ADD X1, X31, 0x184
	0x03761D90 MOV X2, X31
	0x03761D94 BL 0x3390350
	0x03761D98 TBZ X0, 0x0, 0x37620FC
	0x03761D9C ADRP X19, 0xC78000
	0x03761DA0 LDRB W8, [X19 + 0x5AA]
	0x03761DA4 LDR V9, [X31 + 0x184]
	0x03761DA8 CBNZ W8, 0x3761DC0
	0x03761DAC ADRP X0, 0x999000
	0x03761DB0 LDR X0, [X0 + 0x4B8]
	0x03761DB4 BL 0x1C16CF4
	0x03761DB8 MOVZ W8, 0x1
	0x03761DBC STRB W8, [X19 + 0x5AA]
	0x03761DC0 ADRP X8, 0x999000
	0x03761DC4 LDR X8, [X8 + 0x4B8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xC80000
	007 Move W8, [X20+3669]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x993000
	014 Move X0, [X0+2288]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X20+3669], W8
	018 Move W8, [X19+16]
	019 Compare W8, 0
	020 JumpIfEqual {51}
	021 Move X8, 0x993000
	022 Move X8, [X8+2288]
	023 Move X0, [X8]
	024 Call 0x1C17F10
	025 Move X1, X31
	026 Move X20, X0
	027 Call StringBuilder..ctor, X0
	028 Move W22, [X19+12]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move W21, W31
	031 Move X0, X19
	032 Move W1, W21
	033 Move X2, X31
	034 Call Substring.get_Item, X0, X1
	035 And W8, W0, 0xFFFF
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Add W21, W21, 1
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move X0, X19
	040 Move W1, W21
	041 Move X2, X31
	042 Call Substring.get_Item, X0, X1
	043 Move W1, W0
	044 Compare X20, 0
	045 JumpIfEqual {72}
	046 Move X0, X20
	047 Move X2, X31
	048 Call StringBuilder.Append, X0, X1
	049 Add W21, W21, 1
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move X0, X19
	052 Move X20, [X31+32]
	053 Move X19, [X31+40]
	054 Move X22, [X31+16]
	055 Move X21, [X31+24]
	056 Move X1, X31
	057 Move X30, [X31+48]
	058 Call Substring.ToString, X0
	059 Return X0
	060 Compare X20, 0
	061 JumpIfEqual {72}
	062 Move X8, [X20]
	063 Move X0, X20
	064 Move X20, [X31+32]
	065 Move X19, [X31+40]
	066 Move X22, [X31+16]
	067 Move X21, [X31+24]
	068 Move X2, [X8+360]
	069 Move X1, [X8+368]
	070 Move X30, [X31+48]
	071 CallNoReturn X2
	072 Call 0x1C17F20

Method: System.Boolean Equals(UnityEngine.InputSystem.Utilities.JsonParser/JsonString other)

Disassembly:
	0x03761DC8 ADRP X9, 0xFFFFFFFFFD389000
	0x03761DCC LDR V0, [X9 + 0x240]
	0x03761DD0 FABS S1, S8
	0x03761DD4 LDR X8, [X8]
	0x03761DD8 FABS S2, S9
	0x03761DDC FCMP S1, S2
	0x03761DE0 FCSEL S1, S1, S2, GT
	0x03761DE4 LDR X8, [X8 + 0xB8]
	0x03761DE8 FMUL S0, S1, S0
	0x03761DEC FMOV S1, 8
	0x03761DF0 LDR V3, [X8]
	0x03761DF4 FMUL S1, S3, S1
	0x03761DF8 FCMP S0, S1
	0x03761DFC FCSEL S0, S0, S1, GT
	0x03761E00 FABD S1, S9, S9
	0x03761E04 FCMP S1, S0
	0x03761E08 B 0x37620D0
	0x03761E0C MOV X0, X19
	0x03761E10 BL 0x3761240
	0x03761E14 MOV X1, X0
	0x03761E18 MOV X0, X20
	0x03761E1C MOV X2, X31
	0x03761E20 BL 0x3632A38
	0x03761E24 B 0x3762100
	0x03761E28 MOV X0, X20
	0x03761E2C BL 0x1C16E08
	0x03761E30 LDR W8, [X19]
	0x03761E34 LDR V8, [X0]
	0x03761E38 CMP W8, 0x2
	0x03761E3C B.EQ 0x3762060
	0x03761E40 CMP W8, 0x4
	0x03761E44 B.NE 0x3762164
	0x03761E48 MOV X0, X19
	0x03761E4C BL 0x3761240
	0x03761E50 ADD X1, X31, 0x178
	0x03761E54 MOV X2, X31
	0x03761E58 BL 0x3366738
	0x03761E5C TBZ X0, 0x0, 0x37620FC
	0x03761E60 ADRP X19, 0xC7F000
	0x03761E64 LDRB W8, [X19 + 0xE7A]
	0x03761E68 LDR V9, [X31 + 0x178]
	0x03761E6C CBNZ W8, 0x3762084
	0x03761E70 ADRP X0, 0x992000
	0x03761E74 LDR X0, [X0 + 0x5A8]
	0x03761E78 BL 0x1C16CF4
	0x03761E7C MOVZ W8, 0x1
	0x03761E80 STRB W8, [X19 + 0xE7A]
	0x03761E84 B 0x3762084
	0x03761E88 MOV X0, X20
	0x03761E8C BL 0x1C16E08
	0x03761E90 LDR W8, [X19]
	0x03761E94 LDRSW X22, [X0]
	0x03761E98 CMP W8, 0x3
	0x03761E9C B.EQ 0x376216C
	0x03761EA0 CMP W8, 0x4
	0x03761EA4 B.NE 0x3762178
	0x03761EA8 MOV X0, X19
	0x03761EAC BL 0x3761240
	0x03761EB0 ADD X1, X31, 0x174
	0x03761EB4 MOV X2, X31
	0x03761EB8 BL 0x337BDF4
	0x03761EBC TBZ X0, 0x0, 0x37620FC
	0x03761EC0 LDR W8, [X31 + 0x174]
	0x03761EC4 CMP W22, W8
	0x03761EC8 B 0x37621F4
	0x03761ECC MOV X0, X20
	0x03761ED0 BL 0x1C16E08
	0x03761ED4 LDR W8, [X19]
	0x03761ED8 LDR X22, [X0]
	0x03761EDC CMP W8, 0x3
	0x03761EE0 B.EQ 0x37621D4
	0x03761EE4 CMP W8, 0x4
	0x03761EE8 B.NE 0x37621E0
	0x03761EEC MOV X0, X19
	0x03761EF0 BL 0x3761240
	0x03761EF4 ADD X1, X31, 0x168
	0x03761EF8 MOV X2, X31
	0x03761EFC BL 0x337D588
	0x03761F00 TBZ X0, 0x0, 0x37620FC
	0x03761F04 LDR X8, [X31 + 0x168]
	0x03761F08 B 0x37621D8
	0x03761F0C ADRP X20, 0xC7F000
	0x03761F10 LDRB W8, [X20 + 0xE7A]
	0x03761F14 LDR V9, [X19 + 0x8]
	0x03761F18 CBNZ W8, 0x3761F30
	0x03761F1C ADRP X0, 0x992000
	0x03761F20 LDR X0, [X0 + 0x5A8]
	0x03761F24 BL 0x1C16CF4
	0x03761F28 MOVZ W8, 0x1
	0x03761F2C STRB W8, [X20 + 0xE7A]
	0x03761F30 ADRP X8, 0x992000
	0x03761F34 LDR X8, [X8 + 0x5A8]
	0x03761F38 FCVT S8, S8
	0x03761F3C B 0x376208C
	0x03761F40 LDR X8, [X20]
	0x03761F44 B 0x3761C2C
	0x03761F48 MOV X0, X20
	0x03761F4C BL 0x1C16E08
	0x03761F50 LDR W9, [X19]
	0x03761F54 LDRB W8, [X0]
	0x03761F58 CMP W9, 0x1
	0x03761F5C B.EQ 0x37621E8
	0x03761F60 CMP W9, 0x4
	0x03761F64 B.NE 0x37621FC
	0x03761F68 ADD X0, X31, 0x120
	0x03761F6C MOVZ W2, 0x48

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X21, 0xC80000
	012 Move W8, [X21+3670]
	013 Move X19, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0x995000
	020 Move X0, [X0+368]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+3670], W8
	024 Move W8, [X19+16]
	025 Move W9, [X20+16]
	026 And W8, W8, 1
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move X0, [X20]
	029 Move X1, [X20+8]
	030 Move X2, [X19]
	031 Move X3, [X19+8]
	032 Move W4, 3
	033 Move X5, X31
	034 Call Substring.Compare, X0, X1, X2
	035 NotImplemented "Instruction CMP not yet implemented."
	036 NotImplemented "Instruction CSET not yet implemented."
	037 Move W25, [X19+12]
	038 Move W26, [X20+12]
	039 Move W21, W31
	040 NotImplemented "Instruction CMP not yet implemented."
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move W22, W21
	043 Move X27, 0x995000
	044 Move X27, [X27+368]
	045 Move W22, W31
	046 Move W21, W31
	047 Move X0, X20
	048 Move W1, W22
	049 Move X2, X31
	050 Call Substring.get_Item, X0, X1
	051 Move W23, W0
	052 And W24, W0, 0xFFFF
	053 Move X0, X19
	054 Move W1, W21
	055 Move X2, X31
	056 Call Substring.get_Item, X0, X1
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move W24, W0
	059 Add W22, W22, 1
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move X0, X20
	062 Move W1, W22
	063 Move X2, X31
	064 Call Substring.get_Item, X0, X1
	065 Move W23, W0
	066 And W8, W24, 0xFFFF
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Add W21, W21, 1
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move X0, X19
	071 Move W1, W21
	072 Move X2, X31
	073 Call Substring.get_Item, X0, X1
	074 Move W24, W0
	075 Move X0, [X27]
	076 Move W8, [X0+224]
	077 Compare W8, 0
	078 JumpIfNotEqual {80}
	079 Call 0x1C17DFC
	080 Move W0, W23
	081 Move X1, X31
	082 Call Char.ToUpperInvariant, X0
	083 And W23, W0, 0xFFFF
	084 Move W0, W24
	085 Move X1, X31
	086 Call Char.ToUpperInvariant, X0
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Add W21, W21, 1
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Add W22, W22, 1
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Move W0, W31
	093 Move W22, W21
	094 NotImplemented "Instruction CMP not yet implemented."
	095 NotImplemented "Instruction CSET not yet implemented."
	096 NotImplemented "Instruction CMP not yet implemented."
	097 NotImplemented "Instruction CSET not yet implemented."
	098 And W0, W9, W8
	099 Move X20, [X31+64]
	100 Move X19, [X31+72]
	101 Move X22, [X31+48]
	102 Move X21, [X31+56]
	103 Move X24, [X31+32]
	104 Move X23, [X31+40]
	105 Move X26, [X31+16]
	106 Move X25, [X31+24]
	107 Move X30, [X31+80]
	108 Move X27, [X31+88]
	109 Return X0

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x03761F70 MOV X1, X19
	0x03761F74 CBZ W8, 0x3762280
	0x03761F78 BL 0x3EB1AC0
	0x03761F7C ADRP X9, 0x99D000
	0x03761F80 LDUR V0, [X21 + 0x18]
	0x03761F84 LDR X8, [X31 + 0x148]
	0x03761F88 LDR X9, [X9]
	0x03761F8C MOV X1, X31
	0x03761F90 STR V0, [X31 + 0xE]
	0x03761F94 STR X8, [X31 + 0xF0]
	0x03761F98 LDR X0, [X9]
	0x03761F9C BL 0x3768CAC
	0x03761FA0 STP X0, X1, [X31 + 0x198]
	0x03761FA4 ADD X0, X31, 0xE0
	0x03761FA8 ADD X1, X31, 0x198
	0x03761FAC STR X31, [X31 + 0x1A8]
	0x03761FB0 BL 0x3760DC8
	0x03761FB4 TBNZ X0, 0x0, 0x376230C
	0x03761FB8 ADD X0, X31, 0x120
	0x03761FBC MOVZ W2, 0x48
	0x03761FC0 MOV X1, X19
	0x03761FC4 BL 0x3EB1AC0
	0x03761FC8 ADRP X8, 0x9C7000
	0x03761FCC LDR X8, [X8]
	0x03761FD0 MOV X1, X31
	0x03761FD4 LDR X0, [X8]
	0x03761FD8 BL 0x3768CAC
	0x03761FDC LDUR V0, [X21 + 0x18]
	0x03761FE0 LDR X8, [X31 + 0x148]
	0x03761FE4 STP X0, X1, [X31 + 0x198]
	0x03761FE8 ADD X0, X31, 0xC0
	0x03761FEC ADD X1, X31, 0x198
	0x03761FF0 STR V0, [X31 + 0xC]
	0x03761FF4 STR X8, [X31 + 0xD0]
	0x03761FF8 STR X31, [X31 + 0x1A8]
	0x03761FFC BL 0x3760DC8

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+40], X21
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move X21, 0xC80000
	007 Move W8, [X21+3671]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x9E6000
	015 Move X0, [X0+704]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3671], W8
	019 Compare X20, 0
	020 JumpIfEqual {26}
	021 Move X8, 0x9E6000
	022 Move X8, [X8+704]
	023 Move X9, [X20]
	024 Move X8, [X8]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move W0, W31
	027 Move X0, X20
	028 Call 0x1C17E08
	029 Move V0, [X0]
	030 Move X8, [X0+16]
	031 Add X1, X31, 0
	032 Move X0, X19
	033 Move [X31], V0
	034 Move [X31+16], X8
	035 Call JsonString.Equals, X0, X1
	036 Move X20, [X31+48]
	037 Move X19, [X31+56]
	038 Move X30, [X31+32]
	039 Move X21, [X31+40]
	040 And W0, W0, 1
	041 Add X31, X31, 64
	042 Return X0

Method: System.Int32 GetHashCode()

Disassembly:
	0x03762000 TBNZ X0, 0x0, 0x376230C
	0x03762004 ADD X0, X31, 0x120
	0x03762008 MOVZ W2, 0x48
	0x0376200C MOV X1, X19
	0x03762010 BL 0x3EB1AC0
	0x03762014 ADRP X8, 0x9B5000
	0x03762018 LDR X8, [X8 + 0xEC0]
	0x0376201C MOV X1, X31
	0x03762020 LDR X0, [X8]
	0x03762024 BL 0x3768CAC
	0x03762028 LDUR V0, [X21 + 0x18]
	0x0376202C LDR X8, [X31 + 0x148]
	0x03762030 STP X0, X1, [X31 + 0x198]
	0x03762034 STR X31, [X31 + 0x1A8]
	0x03762038 STR V0, [X31 + 0xA]
	0x0376203C STR X8, [X31 + 0xB0]
	0x03762040 ADD X0, X31, 0xA0
	0x03762044 B 0x3762158
	0x03762048 ADD X1, X31, 0x188
	0x0376204C MOV X0, X20
	0x03762050 MOV X2, X31
	0x03762054 BL 0x3366738
	0x03762058 TBZ X0, 0x0, 0x37620FC
	0x0376205C LDR V8, [X31 + 0x188]
	0x03762060 ADRP X20, 0xC7E000
	0x03762064 LDRB W8, [X20 + 0xE7A]
	0x03762068 LDR V9, [X19 + 0x8]
	0x0376206C CBNZ W8, 0x3762084
	0x03762070 ADRP X0, 0x991000
	0x03762074 LDR X0, [X0 + 0x5A8]
	0x03762078 BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xC7F000
	006 Move X20, 0x992000
	007 Move W8, [X21+3672]
	008 Move X20, [X20+2904]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x992000
	015 Move X0, [X0+2904]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3672], W8
	019 Move X0, X19
	020 Move X1, X31
	021 Call Substring.GetHashCode, X0
	022 Move X8, [X20]
	023 Move W20, W0
	024 Move W9, [X8+224]
	025 Compare W9, 0
	026 JumpIfNotEqual {29}
	027 Move X0, X8
	028 Call 0x1C17DFC
	029 Add X0, X19, 16
	030 Move X1, X31
	031 Call Boolean.GetHashCode, X0
	032 Move W8, 397
	033 Multiply W8, W20, W8
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Xor W0, W0, W8
	037 Move X30, [X31+32]
	038 Move X21, [X31+40]
	039 Return X0

Method: System.Boolean op_Equality(UnityEngine.InputSystem.Utilities.JsonParser/JsonString left, UnityEngine.InputSystem.Utilities.JsonParser/JsonString right)

Disassembly:
	0x0376207C MOVZ W8, 0x1
	0x03762080 STRB W8, [X20 + 0xE7A]
	0x03762084 ADRP X8, 0x991000
	0x03762088 LDR X8, [X8 + 0x5A8]
	0x0376208C LDR X0, [X8]
	0x03762090 LDR W8, [X0 + 0xE0]
	0x03762094 CBNZ W8, 0x376209C
	0x03762098 BL 0x1C16DFC
	0x0376209C FABS D0, D8
	0x037620A0 FABS D1, D9
	0x037620A4 MOV X0, X31
	0x037620A8 FABD D10, D9, D9

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+32], X30
	003 Move X8, [X1+16]
	004 Move V0, [X1]
	005 Add X1, X31, 0
	006 Move [X31+16], X8
	007 Move [X31], V0
	008 Call JsonString.Equals, X0, X1
	009 Move X30, [X31+32]
	010 And W0, W0, 1
	011 Add X31, X31, 48
	012 Return X0

Method: System.Boolean op_Inequality(UnityEngine.InputSystem.Utilities.JsonParser/JsonString left, UnityEngine.InputSystem.Utilities.JsonParser/JsonString right)

Disassembly:
	0x037620AC BL 0x337EDC0
	0x037620B0 ADRP X8, 0xFFFFFFFFFD38B000
	0x037620B4 LDR V1, [X8 + 0xBC8]
	0x037620B8 MOVZ X8, 0x8
	0x037620BC MOV X0, X31
	0x037620C0 FMUL D0, D0, D1
	0x037620C4 FMOV D1, X8
	0x037620C8 BL 0x337EDC0
	0x037620CC FCMP D10, D0
	0x037620D0 CSET W0, MI
	0x037620D4 B 0x3762100
	0x037620D8 ADD X1, X31, 0x190
	0x037620DC MOV X0, X20

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+32], X30
	003 Move X8, [X1+16]
	004 Move V0, [X1]
	005 Add X1, X31, 0
	006 Move [X31+16], X8
	007 Move [X31], V0
	008 Call JsonString.Equals, X0, X1
	009 Move X30, [X31+32]
	010 NotImplemented "Instruction ORN not yet implemented."
	011 And W0, W8, 1
	012 Add X31, X31, 48
	013 Return X0

Method: UnityEngine.InputSystem.Utilities.JsonParser/JsonString op_Implicit(System.String str)

Disassembly:
	0x037620E0 MOV X2, X31
	0x037620E4 BL 0x337D588
	0x037620E8 TBZ X0, 0x0, 0x37620FC
	0x037620EC LDR X8, [X31 + 0x190]
	0x037620F0 LDR X9, [X19 + 0x10]
	0x037620F4 CMP X8, X9
	0x037620F8 B 0x37621F4
	0x037620FC MOV W0, W31

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X1, X31
	004 Move X19, X8
	005 Call Substring.op_Implicit, X0
	006 Move [X19], X0
	007 Move [X19+8], X1
	008 Move [X19+16], X31
	009 Move X30, [X31+16]
	010 Move X19, [X31+24]
	011 Return X0

