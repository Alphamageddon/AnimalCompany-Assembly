Type: UnityEngine.InputSystem.Utilities.ReadOnlyArray`1/Enumerator

Method: System.Void .ctor(TValue[] array, System.Int32 index, System.Int32 length)

Disassembly:
	0x02BBDA40 RET
	0x02BBDA44 STR X30, [X31 - 0x10]!
	0x02BBDA48 STR X1, [X0]
	0x02BBDA4C STR W31, [X0 + 0x8]
	0x02BBDA50 CBZ X1, 0x2BBDA64
	0x02BBDA54 LDR W8, [X1 + 0x38]

ISIL:
	001 Subtract W8, W2, 1
	002 Add W9, W3, W2
	003 Move [X0], X1
	004 Move [X0+8], W8
	005 Move [X0+12], W9
	006 Move [X0+16], W8
	007 Return 

Method: System.Void Dispose()

Disassembly:
	0x02BBDA58 STP W8, W31, [X0 + 0xC]

ISIL:
	001 Return 

Method: System.Boolean MoveNext()

Disassembly:
	0x02BBDA5C LDR X30, [X31], #0x10
	0x02BBDA60 RET
	0x02BBDA64 BL 0x1C16F20
	0x02BBDA68 RET
	0x02BBDA6C STR X30, [X31 - 0x20]!
	0x02BBDA70 STP X20, X19, [X31 + 0x10]
	0x02BBDA74 LDR X10, [X0]
	0x02BBDA78 CBZ X10, 0x2BBDB18

ISIL:
	001 Move W9, [X0+12]
	002 Move W8, [X0+16]
	003 NotImplemented "Instruction CMP not yet implemented."
	004 Add W8, W8, 1
	005 Move [X0+16], W8
	006 NotImplemented "Instruction CMP not yet implemented."
	007 NotImplemented "Instruction CSET not yet implemented."
	008 Return X0

Method: System.Void Reset()

Disassembly:
	0x02BBDA7C LDR W8, [X0 + 0xC]
	0x02BBDA80 LDR W9, [X10 + 0x38]
	0x02BBDA84 CMP W8, W9

ISIL:
	001 Move W8, [X0+8]
	002 Move [X0+16], W8
	003 Return 

Method: TValue get_Current()

Disassembly:
	0x02BBDA88 B.NE 0x2BBDB1C
	0x02BBDA8C LDR W8, [X0 + 0x8]
	0x02BBDA90 LDR W9, [X10 + 0x24]
	0x02BBDA94 CMP W8, W9
	0x02BBDA98 B.GE 0x2BBDAD0
	0x02BBDA9C LDR X10, [X10 + 0x18]
	0x02BBDAA0 CBZ X10, 0x2BBDB18
	0x02BBDAA4 LDR W11, [X10 + 0x18]
	0x02BBDAA8 MOVZ W12, 0xC
	0x02BBDAAC CMP W8, W11
	0x02BBDAB0 B.CS 0x2BBDB14
	0x02BBDAB4 SMADDL X13, X8, X12, X10
	0x02BBDAB8 LDR W13, [X13 + 0x20]
	0x02BBDABC TBZ X13, 0x1F, 0x2BBDAE4
	0x02BBDAC0 ADD W8, W8, 0x1
	0x02BBDAC4 CMP W8, W9
	0x02BBDAC8 STR W8, [X0 + 0x8]
	0x02BBDACC B.LT 0x2BBDAAC
	0x02BBDAD0 MOV W8, W31
	0x02BBDAD4 ADD W9, W9, 0x1
	0x02BBDAD8 STR W9, [X0 + 0x8]
	0x02BBDADC STR W31, [X0 + 0x10]
	0x02BBDAE0 B 0x2BBDB04
	0x02BBDAE4 SXTW X9, W8
	0x02BBDAE8 MOVZ W11, 0xC
	0x02BBDAEC MADD X9, X9, X11, X10
	0x02BBDAF0 LDR W9, [X9 + 0x28]
	0x02BBDAF4 ADD W8, W8, 0x1
	0x02BBDAF8 STR W8, [X0 + 0x8]
	0x02BBDAFC MOVZ W8, 0x1
	0x02BBDB00 STR W9, [X0 + 0x10]
	0x02BBDB04 LDP X20, X19, [X31 + 0x10]
	0x02BBDB08 MOV W0, W8
	0x02BBDB0C LDR X30, [X31], #0x20
	0x02BBDB10 RET
	0x02BBDB14 BL 0x1C16F28
	0x02BBDB18 BL 0x1C16F20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W10, [X0+12]
	005 Move W9, [X0+16]
	006 Move X9, W9
	007 NotImplemented "Instruction CMP not yet implemented."
	008 Move X10, [X0]
	009 Compare X10, 0
	010 JumpIfEqual {39}
	011 Move W11, [X10+24]
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Move X20, [X31+16]
	014 Move X19, [X31+24]
	015 Move W11, 88
	016 NotImplemented "Instruction MADD not yet implemented."
	017 Add X1, X9, 32
	018 Move W2, 88
	019 Move X0, X8
	020 Move X30, [X31+32]
	021 Call 0x3EB2AC0
	022 Return X0
	023 Move X0, 0x1537000
	024 Move X0, [X0+1456]
	025 Move X19, X1
	026 Call 0x1C17D08
	027 Call 0x1C17F10
	028 Move X20, X0
	029 Move X0, 0x1562000
	030 Move X0, [X0+3160]
	031 Call 0x1C17D08
	032 Move X1, X0
	033 Move X0, X20
	034 Move X2, X31
	035 Call InvalidOperationException..ctor, X0, X1
	036 Move X0, X20
	037 Move X1, X19
	038 Call 0x1C17DEC
	039 Call 0x1C17F20
	040 Call 0x1C17F28

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x02BBDB1C ADRP X0, 0x1536000
	0x02BBDB20 LDR X0, [X0 + 0x5B0]
	0x02BBDB24 MOV X19, X1
	0x02BBDB28 BL 0x1C16D08
	0x02BBDB2C BL 0x1C16F10
	0x02BBDB30 MOV X20, X0
	0x02BBDB34 ADRP X0, 0x1560000
	0x02BBDB38 LDR X0, [X0 + 0x288]
	0x02BBDB3C BL 0x1C16D08
	0x02BBDB40 MOV X1, X0
	0x02BBDB44 MOV X0, X20
	0x02BBDB48 MOV X2, X31
	0x02BBDB4C BL 0x337DF1C
	0x02BBDB50 MOV X0, X20
	0x02BBDB54 MOV X1, X19
	0x02BBDB58 BL 0x1C16DEC
	0x02BBDB5C LDR W0, [X0 + 0x10]
	0x02BBDB60 RET
	0x02BBDB64 STR X30, [X31 - 0x20]!
	0x02BBDB68 STP X20, X19, [X31 + 0x10]
	0x02BBDB6C LDR W8, [X0 + 0x8]
	0x02BBDB70 MOV X19, X1
	0x02BBDB74 CBZ W8, 0x2BBDBE0
	0x02BBDB78 LDR X9, [X0]
	0x02BBDB7C MOV X20, X0
	0x02BBDB80 CBZ X9, 0x2BBDC1C
	0x02BBDB84 LDR W9, [X9 + 0x24]
	0x02BBDB88 ADD W9, W9, 0x1
	0x02BBDB8C CMP W8, W9
	0x02BBDB90 B.EQ 0x2BBDBE0
	0x02BBDB94 LDR X0, [X19 + 0x20]
	0x02BBDB98 ADD X8, X0, 0x135

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+176], X30
	003 Move [X31+192], X20
	004 Move [X31+200], X19
	005 Move X8, [X1+32]
	006 Move X19, X1
	007 Move X20, X0
	008 Move W9, [X8+309]
	009 Move TEMP, X9
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {16}
	013 Move X0, X8
	014 Call 0x1C5D684
	015 Move X8, X0
	016 Move X8, [X8+192]
	017 Move X0, X20
	018 Move X1, [X8+24]
	019 Add X8, X31, 88
	020 Call 0x2BBDA88, X0
	021 Add X0, X31, 0
	022 Add X1, X31, 88
	023 Move W2, 88
	024 Call 0x3EB2AC0
	025 Move X0, [X19+32]
	026 Move W8, [X0+309]
	027 Move TEMP, X8
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {32}
	031 Call 0x1C5D684
	032 Move X8, [X0+192]
	033 Add X1, X31, 0
	034 Move X0, [X8+16]
	035 Call 0x1C17E04
	036 Move X20, [X31+192]
	037 Move X19, [X31+200]
	038 Move X30, [X31+176]
	039 Add X31, X31, 208
	040 Return X0

