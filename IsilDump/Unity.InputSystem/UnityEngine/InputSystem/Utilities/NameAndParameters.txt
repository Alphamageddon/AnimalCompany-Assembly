Type: UnityEngine.InputSystem.Utilities.NameAndParameters

Method: System.String get_name()

Disassembly:
	0x03764034 STR X8, [X31 + 0x10]
	0x03764038 STR V0, [X31]

ISIL:
	001 Move X0, [X0]
	002 Return X0

Method: System.Void set_name(System.String value)

Disassembly:
	0x0376403C BL 0x3763E40
	0x03764040 LDR X30, [X31 + 0x20]

ISIL:
	001 Move [X0], X1
	002 Return 

Method: UnityEngine.InputSystem.Utilities.ReadOnlyArray`1<UnityEngine.InputSystem.Utilities.NamedValue> get_parameters()

Disassembly:
	0x03764044 AND W0, W0, 0x1
	0x03764048 ADD X31, X31, 0x30
	0x0376404C RET

ISIL:
	001 Move X8, [X0+8]
	002 Move X1, [X0+16]
	003 Move X0, X8
	004 Return X0

Method: System.Void set_parameters(UnityEngine.InputSystem.Utilities.ReadOnlyArray`1<UnityEngine.InputSystem.Utilities.NamedValue> value)

Disassembly:
	0x03764050 SUB X31, X31, 0x30
	0x03764054 STR X30, [X31 + 0x20]

ISIL:
	001 Move [X0+8], X1
	002 Move [X0+16], X2
	003 Return 

Method: System.String ToString()

Disassembly:
	0x03764058 LDR X8, [X1 + 0x10]
	0x0376405C LDR V0, [X1]
	0x03764060 ADD X1, X31, 0x0
	0x03764064 STR X8, [X31 + 0x10]
	0x03764068 STR V0, [X31]
	0x0376406C BL 0x3763E40
	0x03764070 LDR X30, [X31 + 0x20]
	0x03764074 ORN W8, W31, W0, 0x0
	0x03764078 AND W0, W8, 0x1
	0x0376407C ADD X31, X31, 0x30
	0x03764080 RET
	0x03764084 STP X30, X27, [X31 - 0x50]!
	0x03764088 STP X26, X25, [X31 + 0x10]
	0x0376408C STP X24, X23, [X31 + 0x20]
	0x03764090 STP X22, X21, [X31 + 0x30]
	0x03764094 STP X20, X19, [X31 + 0x40]
	0x03764098 ADRP X22, 0xC7C000
	0x0376409C LDRB W9, [X22 + 0xE6C]
	0x037640A0 MOV X20, X1
	0x037640A4 MOV X21, X0
	0x037640A8 MOV X19, X8
	0x037640AC TBNZ X9, 0x0, 0x37640D0
	0x037640B0 ADRP X0, 0x991000
	0x037640B4 LDR X0, [X0 + 0x170]
	0x037640B8 BL 0x1C16CF4
	0x037640BC ADRP X0, 0x991000
	0x037640C0 LDR X0, [X0 + 0x3A0]
	0x037640C4 BL 0x1C16CF4
	0x037640C8 MOVZ W8, 0x1
	0x037640CC STRB W8, [X22 + 0xE6C]
	0x037640D0 CBZ X21, 0x37643FC
	0x037640D4 LDR W25, [X21 + 0x10]
	0x037640D8 LDR W22, [X20]
	0x037640DC CMP W22, W25
	0x037640E0 B.GE 0x3764138
	0x037640E4 ADRP X23, 0x991000
	0x037640E8 LDR X23, [X23 + 0x170]
	0x037640EC MOV X0, X21
	0x037640F0 MOV W1, W22
	0x037640F4 MOV X2, X31
	0x037640F8 BL 0x3222A1C
	0x037640FC LDR X8, [X23]
	0x03764100 MOV W22, W0
	0x03764104 LDR W9, [X8 + 0xE0]
	0x03764108 CBNZ W9, 0x3764114
	0x0376410C MOV X0, X8
	0x03764110 BL 0x1C16DFC
	0x03764114 MOV W0, W22
	0x03764118 MOV X1, X31
	0x0376411C BL 0x3317FCC
	0x03764120 LDR W22, [X20]
	0x03764124 TBZ X0, 0x0, 0x3764138
	0x03764128 ADD W22, W22, 0x1
	0x0376412C CMP W22, W25
	0x03764130 STR W22, [X20]
	0x03764134 B.LT 0x37640EC
	0x03764138 CMP W22, W25
	0x0376413C MOV W8, W22
	0x03764140 B.GE 0x37641CC
	0x03764144 ADRP X24, 0x991000
	0x03764148 ADRP X26, 0x991000
	0x0376414C LDR X24, [X24 + 0x3A0]
	0x03764150 LDR X26, [X26 + 0x170]
	0x03764154 MOV W1, W22
	0x03764158 MOV X0, X21
	0x0376415C MOV X2, X31
	0x03764160 BL 0x3222A1C
	0x03764164 AND W8, W0, 0xFFFF
	0x03764168 CMP W8, 0x3D
	0x0376416C B.EQ 0x37641C8
	0x03764170 MOV W23, W0
	0x03764174 LDR X0, [X24]
	0x03764178 CBZ X0, 0x37643FC
	0x0376417C MOV W1, W31
	0x03764180 MOV X2, X31
	0x03764184 BL 0x3222A1C
	0x03764188 AND W8, W23, 0xFFFF
	0x0376418C CMP W8, W0, UXTH
	0x03764190 B.EQ 0x37641C8
	0x03764194 LDR X0, [X26]
	0x03764198 LDR W8, [X0 + 0xE0]
	0x0376419C CBNZ W8, 0x37641A4
	0x037641A0 BL 0x1C16DFC
	0x037641A4 MOV W0, W23
	0x037641A8 MOV X1, X31
	0x037641AC BL 0x3317FCC
	0x037641B0 TBNZ X0, 0x0, 0x37641C8
	0x037641B4 LDR W8, [X20]
	0x037641B8 ADD W1, W8, 0x1
	0x037641BC CMP W1, W25
	0x037641C0 STR W1, [X20]
	0x037641C4 B.LT 0x3764158
	0x037641C8 LDR W8, [X20]
	0x037641CC SUB W2, W8, W22
	0x037641D0 MOV X0, X21
	0x037641D4 MOV W1, W22
	0x037641D8 MOV X3, X31
	0x037641DC BL 0x3228DE4
	0x037641E0 LDR W1, [X20]
	0x037641E4 MOV X22, X0
	0x037641E8 CMP W1, W25
	0x037641EC B.GE 0x3764240
	0x037641F0 ADRP X24, 0x991000
	0x037641F4 LDR X24, [X24 + 0x170]
	0x037641F8 MOV X0, X21
	0x037641FC MOV X2, X31
	0x03764200 BL 0x3222A1C
	0x03764204 LDR X8, [X24]
	0x03764208 MOV W23, W0
	0x0376420C LDR W9, [X8 + 0xE0]
	0x03764210 CBNZ W9, 0x376421C
	0x03764214 MOV X0, X8
	0x03764218 BL 0x1C16DFC
	0x0376421C MOV W0, W23
	0x03764220 MOV X1, X31
	0x03764224 BL 0x3317FCC
	0x03764228 LDR W1, [X20]
	0x0376422C TBZ X0, 0x0, 0x3764240
	0x03764230 ADD W1, W1, 0x1
	0x03764234 CMP W1, W25

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+32], X24
	004 Move [X31+40], X23
	005 Move [X31+48], X22
	006 Move [X31+56], X21
	007 Move [X31+64], X20
	008 Move [X31+72], X19
	009 Move X20, 0xC7D000
	010 Move W8, [X20+3684]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {48}
	016 Move X0, 0x9E3000
	017 Move X0, [X0+888]
	018 Call 0x1C17CF4
	019 Move X0, 0x990000
	020 Move X0, [X0+3768]
	021 Call 0x1C17CF4
	022 Move X0, 0x9E3000
	023 Move X0, [X0+896]
	024 Call 0x1C17CF4
	025 Move X0, 0x9E3000
	026 Move X0, [X0+904]
	027 Call 0x1C17CF4
	028 Move X0, 0x9E3000
	029 Move X0, [X0+912]
	030 Call 0x1C17CF4
	031 Move X0, 0x9E3000
	032 Move X0, [X0+920]
	033 Call 0x1C17CF4
	034 Move X0, 0x9E3000
	035 Move X0, [X0+928]
	036 Call 0x1C17CF4
	037 Move X0, 0x99B000
	038 Move X0, [X0+784]
	039 Call 0x1C17CF4
	040 Move X0, 0x991000
	041 Move X0, [X0+1544]
	042 Call 0x1C17CF4
	043 Move X0, 0x992000
	044 Move X0, [X0+928]
	045 Call 0x1C17CF4
	046 Move W8, 1
	047 Move [X20+3684], W8
	048 Move X8, [X19+16]
	049 Move X9, X8
	050 ShiftRight X9, 32
	051 And X9, X9, 0x7FFFFFFF
	052 Compare X9, 0
	053 JumpIfNotEqual {55}
	054 Move X0, [X19]
	055 Move X10, 0x9E3000
	056 Move X9, [X19+8]
	057 Move X10, [X10+912]
	058 Add X1, X31, 0
	059 Move [X31], X9
	060 Move [X31+8], X8
	061 Move X0, [X10]
	062 Call 0x1C17E04
	063 Move X24, 0x9E3000
	064 Move X24, [X24+928]
	065 Move X20, X0
	066 Move X8, [X24]
	067 Move W9, [X8+224]
	068 Compare W9, 0
	069 JumpIfNotEqual {73}
	070 Move X0, X8
	071 Call 0x1C17DFC
	072 Move X8, [X24]
	073 Move X9, [X8+184]
	074 Move X22, [X9+8]
	075 Move X9, 0x992000
	076 Move X9, [X9+928]
	077 Move X21, [X9]
	078 Compare X22, 0
	079 JumpIfNotEqual {102}
	080 Move W9, [X8+224]
	081 Compare W9, 0
	082 JumpIfNotEqual {86}
	083 Move X0, X8
	084 Call 0x1C17DFC
	085 Move X8, [X24]
	086 Move X9, 0x9E3000
	087 Move X8, [X8+184]
	088 Move X9, [X9+896]
	089 Move X23, [X8]
	090 Move X0, [X9]
	091 Call 0x1C17F10
	092 Move X8, 0x9E3000
	093 Move X8, [X8+920]
	094 Move X1, X23
	095 Move X3, X31
	096 Move X22, X0
	097 Move X2, [X8]
	098 Call Func`2<NamedValue, Object>..ctor, X0, X1, X2
	099 Move X8, [X24]
	100 Move X8, [X8+184]
	101 Move [X8+8], X22
	102 Move X8, 0x9E3000
	103 Move X8, [X8+888]
	104 Move X0, X20
	105 Move X1, X22
	106 Move X2, [X8]
	107 Call Enumerable.Select, X0, X1
	108 Move X8, 0x990000
	109 Move X8, [X8+3768]
	110 Move X1, [X8]
	111 Call Enumerable.ToArray, X0
	112 Move X1, X0
	113 Move X0, X21
	114 Move X2, X31
	115 Call String.Join, X0, X1
	116 Move X9, 0x99B000
	117 Move X10, 0x991000
	118 Move X8, [X19]
	119 Move X9, [X9+784]
	120 Move X10, [X10+1544]
	121 Move X2, X0
	122 Move X0, X8
	123 Move X1, [X9]
	124 Move X3, [X10]
	125 Move X4, X31
	126 Call String.Concat, X0, X1, X2, X3
	127 Move X20, [X31+64]
	128 Move X19, [X31+72]
	129 Move X22, [X31+48]
	130 Move X21, [X31+56]
	131 Move X24, [X31+32]
	132 Move X23, [X31+40]
	133 Move X30, [X31+16]
	134 Add X31, X31, 80
	135 Return X0

Method: System.Collections.Generic.IEnumerable`1<UnityEngine.InputSystem.Utilities.NameAndParameters> ParseMultiple(System.String text)

Disassembly:
	0x03764238 STR W1, [X20]
	0x0376423C B.LT 0x37641F8
	0x03764240 MOVZ X23, 0x3
	0x03764244 CMP W1, W25
	0x03764248 MOVK X23, 0x1
	0x0376424C B.NE 0x3764258
	0x03764250 MOV X24, X31
	0x03764254 B 0x3764388
	0x03764258 MOV X0, X21
	0x0376425C MOV X2, X31
	0x03764260 BL 0x3222A1C
	0x03764264 AND W8, W0, 0xFFFF
	0x03764268 CMP W8, 0x3D
	0x0376426C MOV X24, X31
	0x03764270 B.NE 0x3764388
	0x03764274 ADRP X26, 0x991000
	0x03764278 LDR X26, [X26 + 0x170]
	0x0376427C LDR W8, [X20]
	0x03764280 ADD W23, W8, 0x1
	0x03764284 CMP W23, W25
	0x03764288 STR W23, [X20]
	0x0376428C B.GE 0x37642CC
	0x03764290 MOV X0, X21
	0x03764294 MOV W1, W23
	0x03764298 MOV X2, X31
	0x0376429C BL 0x3222A1C
	0x037642A0 LDR X8, [X26]
	0x037642A4 MOV W23, W0
	0x037642A8 LDR W9, [X8 + 0xE0]
	0x037642AC CBNZ W9, 0x37642B8
	0x037642B0 MOV X0, X8
	0x037642B4 BL 0x1C16DFC
	0x037642B8 MOV W0, W23
	0x037642BC MOV X1, X31
	0x037642C0 BL 0x3317FCC
	0x037642C4 TBNZ X0, 0x0, 0x376427C
	0x037642C8 LDR W23, [X20]
	0x037642CC CMP W23, W25
	0x037642D0 MOV W8, W23
	0x037642D4 B.GE 0x3764368
	0x037642D8 ADRP X27, 0x991000
	0x037642DC LDR X27, [X27 + 0x3A0]
	0x037642E0 MOV W1, W23

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xC7D000
	005 Move W8, [X20+3685]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x9E3000
	012 Move X0, [X0+936]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3685], W8
	016 Add X1, X31, 8
	017 Move X0, X19
	018 Move [X31+8], X31
	019 Call NameAndParameters.ParseMultiple, X0, X1
	020 Move TEMP, X0
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfNotEqual {25}
	024 Add X8, X31, 8
	025 Move X8, 0x9E3000
	026 Move X8, [X8+936]
	027 Move X19, [X8]
	028 Move X8, [X19+56]
	029 Compare X8, 0
	030 JumpIfNotEqual {34}
	031 Move X0, X19
	032 Call 0x1C5D6E0
	033 Move X8, [X19+56]
	034 Move X0, [X8+16]
	035 Move W8, [X0+309]
	036 Move TEMP, X8
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfEqual {41}
	040 Call 0x1C5D684
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Move X8, [X19+56]
	046 Move X0, [X8+16]
	047 Move W8, [X0+309]
	048 Move TEMP, X8
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfEqual {53}
	052 Call 0x1C5D684
	053 Move X8, [X0+184]
	054 Move X0, [X8]
	055 Move X20, [X31+16]
	056 Move X19, [X31+24]
	057 Move X30, [X31+32]
	058 Return X0

Method: System.Boolean ParseMultiple(System.String text, ref System.Collections.Generic.List`1<UnityEngine.InputSystem.Utilities.NameAndParameters> list)

Disassembly:
	0x037642E4 MOV X0, X21
	0x037642E8 MOV X2, X31
	0x037642EC BL 0x3222A1C
	0x037642F0 LDR X8, [X27]
	0x037642F4 CBZ X8, 0x37643FC
	0x037642F8 MOV W24, W0
	0x037642FC MOV X0, X8
	0x03764300 MOV W1, W31
	0x03764304 MOV X2, X31
	0x03764308 BL 0x3222A1C
	0x0376430C AND W8, W24, 0xFFFF
	0x03764310 CMP W8, W0, UXTH
	0x03764314 B.EQ 0x3764364
	0x03764318 LDR W1, [X20]
	0x0376431C MOV X0, X21
	0x03764320 MOV X2, X31
	0x03764324 BL 0x3222A1C
	0x03764328 LDR X8, [X26]
	0x0376432C MOV W24, W0
	0x03764330 LDR W9, [X8 + 0xE0]
	0x03764334 CBNZ W9, 0x3764340
	0x03764338 MOV X0, X8
	0x0376433C BL 0x1C16DFC
	0x03764340 MOV W0, W24
	0x03764344 MOV X1, X31
	0x03764348 BL 0x3317FCC
	0x0376434C TBNZ X0, 0x0, 0x3764364
	0x03764350 LDR W8, [X20]
	0x03764354 ADD W1, W8, 0x1
	0x03764358 CMP W1, W25
	0x0376435C STR W1, [X20]
	0x03764360 B.LT 0x37642E4
	0x03764364 LDR W8, [X20]
	0x03764368 SUB W2, W8, W23
	0x0376436C MOV X0, X21
	0x03764370 MOV W1, W23
	0x03764374 MOV X3, X31
	0x03764378 BL 0x3228DE4
	0x0376437C BL 0x3764454
	0x03764380 MOV X23, X0
	0x03764384 MOV X24, X1
	0x03764388 LDR W1, [X20]
	0x0376438C CMP W1, W25
	0x03764390 B.GE 0x37643DC
	0x03764394 MOV X0, X21
	0x03764398 MOV X2, X31
	0x0376439C BL 0x3222A1C
	0x037643A0 ADRP X8, 0x991000
	0x037643A4 LDR X8, [X8 + 0x3A0]
	0x037643A8 LDR X8, [X8]
	0x037643AC CBZ X8, 0x37643FC
	0x037643B0 MOV W21, W0
	0x037643B4 MOV X0, X8
	0x037643B8 MOV W1, W31
	0x037643BC MOV X2, X31
	0x037643C0 BL 0x3222A1C
	0x037643C4 AND W8, W21, 0xFFFF
	0x037643C8 CMP W8, W0, UXTH
	0x037643CC B.NE 0x37643DC
	0x037643D0 LDR W8, [X20]
	0x037643D4 ADD W8, W8, 0x1
	0x037643D8 STR W8, [X20]
	0x037643DC STP X22, X23, [X19]
	0x037643E0 STR X24, [X19 + 0x10]
	0x037643E4 LDP X20, X19, [X31 + 0x40]
	0x037643E8 LDP X22, X21, [X31 + 0x30]
	0x037643EC LDP X24, X23, [X31 + 0x20]
	0x037643F0 LDP X26, X25, [X31 + 0x10]
	0x037643F4 LDP X30, X27, [X31], #0x50
	0x037643F8 RET
	0x037643FC BL 0x1C16F20
	0x03764400 SUB X31, X31, 0x30
	0x03764404 STP X30, X19, [X31 + 0x20]
	0x03764408 MOV X19, X8
	0x0376440C ADD X8, X31, 0x0
	0x03764410 ADD X1, X31, 0x1C
	0x03764414 STR W31, [X31 + 0x1C]
	0x03764418 BL 0x3764084
	0x0376441C LDR X8, [X31 + 0x10]
	0x03764420 LDR V0, [X31]
	0x03764424 STR X8, [X19 + 0x10]
	0x03764428 STR V0, [X19]
	0x0376442C LDP X30, X19, [X31 + 0x20]
	0x03764430 ADD X31, X31, 0x30
	0x03764434 RET
	0x03764438 MOVZ X9, 0x3
	0x0376443C ANDS W31, W0, 0x1
	0x03764440 MOVZ W8, 0x3
	0x03764444 MOVK X9, 0x1
	0x03764448 CSEL X0, X9, X8, NE
	0x0376444C MOV X1, X31
	0x03764450 RET
	0x03764454 SUB X31, X31, 0x50
	0x03764458 STP X30, X21, [X31 + 0x30]
	0x0376445C STP X20, X19, [X31 + 0x40]
	0x03764460 ADRP X20, 0xC7C000
	0x03764464 LDRB W8, [X20 + 0xE77]
	0x03764468 MOV X19, X0
	0x0376446C TBNZ X8, 0x0, 0x37644CC
	0x03764470 ADRP X0, 0x991000
	0x03764474 LDR X0, [X0 + 0xC48]
	0x03764478 BL 0x1C16CF4
	0x0376447C ADRP X0, 0x9C6000
	0x03764480 LDR X0, [X0 + 0x1A0]
	0x03764484 BL 0x1C16CF4
	0x03764488 ADRP X0, 0x9D5000
	0x0376448C LDR X0, [X0 + 0xB48]
	0x03764490 BL 0x1C16CF4
	0x03764494 ADRP X0, 0x9E2000
	0x03764498 LDR X0, [X0 + 0x440]
	0x0376449C BL 0x1C16CF4
	0x037644A0 ADRP X0, 0x999000
	0x037644A4 LDR X0, [X0 + 0xFF8]
	0x037644A8 BL 0x1C16CF4
	0x037644AC ADRP X0, 0x9E2000

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+96], X30
	003 Move [X31+104], X25
	004 Move [X31+112], X24
	005 Move [X31+120], X23
	006 Move [X31+128], X22
	007 Move [X31+136], X21
	008 Move [X31+144], X20
	009 Move [X31+152], X19
	010 Move X21, 0xC7D000
	011 Move W8, [X21+3686]
	012 Move X19, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {32}
	018 Move X0, 0x9E3000
	019 Move X0, [X0+944]
	020 Call 0x1C17CF4
	021 Move X0, 0x9E3000
	022 Move X0, [X0+952]
	023 Call 0x1C17CF4
	024 Move X0, 0x9E3000
	025 Move X0, [X0+960]
	026 Call 0x1C17CF4
	027 Move X0, 0x9E3000
	028 Move X0, [X0+968]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X21+3686], W8
	032 Compare X20, 0
	033 JumpIfEqual {130}
	034 Move X0, X20
	035 Move X1, X31
	036 Call String.Trim, X0
	037 Move X1, X31
	038 Move X20, X0
	039 Call String.IsNullOrEmpty, X0
	040 Move W21, W0
	041 Move TEMP, X0
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfEqual {118}
	045 Move X8, [X19]
	046 Compare X8, 0
	047 JumpIfEqual {58}
	048 Move W2, [X8+24]
	049 Move W9, [X8+28]
	050 Add W9, W9, 1
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move [X8+24], W31
	053 Move [X8+28], W9
	054 Move X0, [X8+16]
	055 Move W1, W31
	056 Move X3, X31
	057 Call Array.Clear, X0, X1, X2
	058 Move X8, 0x9E3000
	059 Move X8, [X8+968]
	060 Move X0, [X8]
	061 Call 0x1C17F10
	062 Move X8, 0x9E3000
	063 Move X8, [X8+960]
	064 Move X22, X0
	065 Move X1, [X8]
	066 Call List`1<NameAndParameters>..ctor, X0
	067 Move [X19], X22
	068 Move [X31+28], W31
	069 Compare X20, 0
	070 JumpIfEqual {130}
	071 Move W23, [X20+16]
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Move X24, 0x9E3000
	074 Move X24, [X24+944]
	075 Move W25, 24
	076 Move X22, [X19]
	077 Add X8, X31, 0
	078 Add X1, X31, 28
	079 Move X0, X20
	080 Move W2, W31
	081 Call NameAndParameters.ParseNameAndParameters, X0, X1, X2
	082 Compare X22, 0
	083 JumpIfEqual {130}
	084 Move V0, [X31]
	085 Move X8, [X31+16]
	086 Move X10, [X24]
	087 Move [X31+2], V0
	088 Move [X31+48], X8
	089 Move W9, [X22+28]
	090 Move X8, [X22+16]
	091 Add W9, W9, 1
	092 Move [X22+28], W9
	093 Compare X8, 0
	094 JumpIfEqual {130}
	095 NotImplemented "Instruction LDRSW not yet implemented."
	096 Move W11, [X8+24]
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Add W10, W9, 1
	099 Move [X22+24], W10
	100 Move X10, [X31+48]
	101 Move V0, [X31+2]
	102 NotImplemented "Instruction NOP not yet implemented."
	103 NotImplemented "Instruction MADD not yet implemented."
	104 Move [X8+48], X10
	105 Move [X8+2], V0
	106 Move X8, [X10+32]
	107 Move V0, [X31+2]
	108 Move X9, [X31+48]
	109 Add X1, X31, 64
	110 Move X8, [X8+192]
	111 Move X0, X22
	112 Move X2, [X8+112]
	113 Move [X31+4], V0
	114 Move [X31+80], X9
	115 Call List`1<NameAndParameters>.AddWithResize, X0, X1
	116 Move W8, [X31+28]
	117 NotImplemented "Instruction CMP not yet implemented."
	118 NotImplemented "Instruction ORN not yet implemented."
	119 Move X20, [X31+144]
	120 Move X19, [X31+152]
	121 Move X22, [X31+128]
	122 Move X21, [X31+136]
	123 Move X24, [X31+112]
	124 Move X23, [X31+120]
	125 Move X30, [X31+96]
	126 Move X25, [X31+104]
	127 And W0, W8, 1
	128 Add X31, X31, 160
	129 Return X0
	130 Call 0x1C17F20

Method: System.String ParseName(System.String text)

Disassembly:
	0x03764848 MOV X3, X31
	0x0376484C ADD X31, X31, 0x40
	0x03764850 B 0x32CCF10
	0x03764854 BL 0x1C16F20
	0x03764858 ADRP X0, 0x994000
	0x0376485C LDR X0, [X0 + 0x528]
	0x03764860 BL 0x1C16D08
	0x03764864 BL 0x1C16F10
	0x03764868 MOV X19, X0
	0x0376486C ADRP X0, 0x9E2000
	0x03764870 LDR X0, [X0 + 0x458]
	0x03764874 BL 0x1C16D08
	0x03764878 MOV X1, X0
	0x0376487C MOV X0, X19
	0x03764880 MOV X2, X31
	0x03764884 BL 0x330E100
	0x03764888 ADRP X0, 0x9E2000
	0x0376488C LDR X0, [X0 + 0x460]
	0x03764890 BL 0x1C16D08
	0x03764894 MOV X1, X0
	0x03764898 MOV X0, X19
	0x0376489C BL 0x1C16DEC
	0x037648A0 ADRP X0, 0x98F000
	0x037648A4 LDR X0, [X0 + 0xAC8]
	0x037648A8 BL 0x1C16D08
	0x037648AC MOVZ W1, 0x5
	0x037648B0 BL 0x1C16D6C
	0x037648B4 MOV X20, X0
	0x037648B8 BL 0x19903C0
	0x037648BC ADRP X0, 0x9E2000

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+32], X30
	003 Move [X31+40], X19
	004 Compare X0, 0
	005 JumpIfEqual {16}
	006 Add X8, X31, 0
	007 Add X1, X31, 28
	008 Move W2, 1
	009 Move [X31+28], W31
	010 Call NameAndParameters.ParseNameAndParameters, X0, X1, X2
	011 Move X0, [X31]
	012 Move X30, [X31+32]
	013 Move X19, [X31+40]
	014 Add X31, X31, 48
	015 Return X0
	016 Move X0, 0x995000
	017 Move X0, [X0+1320]
	018 Call 0x1C17D08
	019 Call 0x1C17F10
	020 Move X19, X0
	021 Move X0, 0x9E3000
	022 Move X0, [X0+992]
	023 Call 0x1C17D08
	024 Move X1, X0
	025 Move X0, X19
	026 Move X2, X31
	027 Call ArgumentNullException..ctor, X0, X1
	028 Move X0, 0x9E3000
	029 Move X0, [X0+1016]
	030 Call 0x1C17D08
	031 Move X1, X0
	032 Move X0, X19
	033 Call 0x1C17DEC

Method: UnityEngine.InputSystem.Utilities.NameAndParameters Parse(System.String text)

Disassembly:
	0x037648C0 LDR X0, [X0 + 0x468]
	0x037648C4 BL 0x1C16D08
	0x037648C8 MOV X2, X0
	0x037648CC MOV X0, X20
	0x037648D0 MOV X1, X31
	0x037648D4 BL 0x1993444
	0x037648D8 LDR X19, [X19]
	0x037648DC MOV X0, X20
	0x037648E0 BL 0x19903C0
	0x037648E4 MOVZ W1, 0x1
	0x037648E8 MOV X0, X20
	0x037648EC MOV X2, X19
	0x037648F0 BL 0x1993444
	0x037648F4 MOV X0, X20
	0x037648F8 BL 0x19903C0
	0x037648FC ADRP X0, 0x9E2000
	0x03764900 LDR X0, [X0 + 0x470]
	0x03764904 BL 0x1C16D08
	0x03764908 MOV X2, X0
	0x0376490C MOVZ W1, 0x2
	0x03764910 MOV X0, X20
	0x03764914 BL 0x1993444
	0x03764918 MOV X0, X21
	0x0376491C BL 0x19903C0
	0x03764920 LDR X8, [X21]
	0x03764924 MOV X0, X21
	0x03764928 LDP X9, X1, [X8 + 0x1A8]
	0x0376492C BLR X9
	0x03764930 MOV X19, X0
	0x03764934 MOV X0, X20
	0x03764938 BL 0x19903C0
	0x0376493C MOVZ W1, 0x3
	0x03764940 MOV X0, X20
	0x03764944 MOV X2, X19

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+32], X30
	003 Move [X31+40], X19
	004 Compare X0, 0
	005 JumpIfEqual {20}
	006 Move X19, X8
	007 Add X8, X31, 0
	008 Add X1, X31, 28
	009 Move W2, W31
	010 Move [X31+28], W31
	011 Call NameAndParameters.ParseNameAndParameters, X0, X1, X2
	012 Move X8, [X31+16]
	013 Move V0, [X31]
	014 Move [X19+16], X8
	015 Move [X19], V0
	016 Move X30, [X31+32]
	017 Move X19, [X31+40]
	018 Add X31, X31, 48
	019 Return X0
	020 Move X0, 0x995000
	021 Move X0, [X0+1320]
	022 Call 0x1C17D08
	023 Call 0x1C17F10
	024 Move X19, X0
	025 Move X0, 0x9E3000
	026 Move X0, [X0+992]
	027 Call 0x1C17D08
	028 Move X1, X0
	029 Move X0, X19
	030 Move X2, X31
	031 Call ArgumentNullException..ctor, X0, X1
	032 Move X0, 0x9E3000
	033 Move X0, [X0+1024]
	034 Call 0x1C17D08
	035 Move X1, X0
	036 Move X0, X19
	037 Call 0x1C17DEC

Method: UnityEngine.InputSystem.Utilities.NameAndParameters ParseNameAndParameters(System.String text, ref System.Int32 index, System.Boolean nameOnly = False)

Disassembly:
	0x037644B0 LDR X0, [X0 + 0x448]
	0x037644B4 BL 0x1C16CF4
	0x037644B8 ADRP X0, 0x99A000
	0x037644BC LDR X0, [X0]
	0x037644C0 BL 0x1C16CF4
	0x037644C4 MOVZ W8, 0x1
	0x037644C8 STRB W8, [X20 + 0xE77]
	0x037644CC MOV X0, X19
	0x037644D0 MOV X1, X31
	0x037644D4 STP X31, X31, [X31 + 0x10]
	0x037644D8 STR X31, [X31 + 0x8]
	0x037644DC BL 0x32277A8
	0x037644E0 TBZ X0, 0x0, 0x37644EC
	0x037644E4 STP X31, X31, [X31 + 0x20]
	0x037644E8 B 0x3764704
	0x037644EC CBZ X19, 0x3764718
	0x037644F0 ADRP X8, 0x99A000
	0x037644F4 LDR X8, [X8]
	0x037644F8 MOVZ W2, 0x3
	0x037644FC MOV X0, X19
	0x03764500 MOV X3, X31
	0x03764504 LDR X1, [X8]
	0x03764508 MOVZ W20, 0x3
	0x0376450C BL 0x322697C
	0x03764510 TBZ X0, 0x0, 0x3764528
	0x03764514 MOVZ W8, 0x1
	0x03764518 STP X31, X31, [X31 + 0x20]
	0x0376451C STR W20, [X31 + 0x20]
	0x03764520 STRB W8, [X31 + 0x24]
	0x03764524 B 0x3764704
	0x03764528 ADRP X8, 0x999000
	0x0376452C LDR X8, [X8 + 0xFF8]
	0x03764530 MOVZ W2, 0x3
	0x03764534 MOV X0, X19
	0x03764538 MOV X3, X31
	0x0376453C LDR X1, [X8]
	0x03764540 MOVZ W20, 0x3
	0x03764544 BL 0x322697C
	0x03764548 TBZ X0, 0x0, 0x376455C
	0x0376454C STP X31, X31, [X31 + 0x20]
	0x03764550 STR W20, [X31 + 0x20]
	0x03764554 STRB W31, [X31 + 0x24]
	0x03764558 B 0x3764704
	0x0376455C MOVZ W1, 0x2E
	0x03764560 MOV X0, X19
	0x03764564 MOV X2, X31
	0x03764568 BL 0x322BD74
	0x0376456C TBNZ X0, 0x0, 0x37645C8
	0x03764570 ADRP X8, 0x9C6000
	0x03764574 LDR X8, [X8 + 0x1A0]
	0x03764578 MOV X0, X19
	0x0376457C MOV X2, X31
	0x03764580 LDR X1, [X8]
	0x03764584 BL 0x322BD1C
	0x03764588 TBNZ X0, 0x0, 0x37645C8
	0x0376458C ADRP X8, 0x9D5000
	0x03764590 LDR X8, [X8 + 0xB48]
	0x03764594 MOV X0, X19
	0x03764598 MOV X2, X31
	0x0376459C LDR X1, [X8]
	0x037645A0 BL 0x322BD1C
	0x037645A4 TBNZ X0, 0x0, 0x37645C8
	0x037645A8 ADRP X8, 0x9E2000
	0x037645AC LDR X8, [X8 + 0x448]
	0x037645B0 MOVZ W2, 0x3
	0x037645B4 MOV X0, X19
	0x037645B8 MOV X3, X31
	0x037645BC LDR X1, [X8]
	0x037645C0 BL 0x322BD50
	0x037645C4 TBZ X0, 0x0, 0x376461C
	0x037645C8 ADRP X8, 0x991000
	0x037645CC LDR X8, [X8 + 0xC48]
	0x037645D0 LDR X0, [X8]
	0x037645D4 LDR W8, [X0 + 0xE0]
	0x037645D8 CBNZ W8, 0x37645E0
	0x037645DC BL 0x1C16DFC
	0x037645E0 MOV X0, X31
	0x037645E4 BL 0x3338524
	0x037645E8 MOV X2, X0
	0x037645EC ADD X3, X31, 0x10
	0x037645F0 MOVZ W1, 0xA7
	0x037645F4 MOV X0, X19
	0x037645F8 MOV X4, X31
	0x037645FC BL 0x3366A70
	0x03764600 TBZ X0, 0x0, 0x376461C
	0x03764604 LDR V0, [X31 + 0x10]
	0x03764608 MOVZ W8, 0xE
	0x0376460C STP X31, X31, [X31 + 0x20]
	0x03764610 STR W8, [X31 + 0x20]
	0x03764614 STUR D0, [X31 + 0x24]
	0x03764618 B 0x3764704
	0x0376461C ADRP X20, 0x991000
	0x03764620 LDR X20, [X20 + 0xC48]
	0x03764624 LDR X0, [X20]
	0x03764628 LDR W8, [X0 + 0xE0]
	0x0376462C CBNZ W8, 0x3764634
	0x03764630 BL 0x1C16DFC
	0x03764634 MOV X0, X31
	0x03764638 BL 0x3338524
	0x0376463C MOV X2, X0
	0x03764640 ADD X3, X31, 0x18
	0x03764644 MOVZ W1, 0x7
	0x03764648 MOV X0, X19
	0x0376464C MOV X4, X31
	0x03764650 BL 0x337D7DC
	0x03764654 TBZ X0, 0x0, 0x3764660
	0x03764658 LDR X8, [X31 + 0x18]
	0x0376465C B 0x37646F4
	0x03764660 ADRP X21, 0x9E2000
	0x03764664 LDR X21, [X21 + 0x440]
	0x03764668 MOVZ W2, 0x3
	0x0376466C MOV X0, X19
	0x03764670 MOV X3, X31
	0x03764674 LDR X1, [X21]
	0x03764678 BL 0x322BD40
	0x0376467C ADDS W31, W0, 0x1
	0x03764680 B.EQ 0x376471C
	0x03764684 MOV X0, X19
	0x03764688 MOV X1, X31
	0x0376468C BL 0x322BBD4
	0x03764690 CBZ X0, 0x3764718
	0x03764694 LDR X1, [X21]
	0x03764698 MOV X2, X31
	0x0376469C MOV X19, X0
	0x037646A0 BL 0x3226F64
	0x037646A4 TBZ X0, 0x0, 0x37646BC
	0x037646A8 MOVZ W1, 0x2
	0x037646AC MOV X0, X19
	0x037646B0 MOV X2, X31
	0x037646B4 BL 0x322B484
	0x037646B8 MOV X19, X0
	0x037646BC LDR X0, [X20]
	0x037646C0 LDR W8, [X0 + 0xE0]
	0x037646C4 CBNZ W8, 0x37646CC
	0x037646C8 BL 0x1C16DFC
	0x037646CC MOV X0, X31
	0x037646D0 BL 0x3338524
	0x037646D4 MOV X2, X0
	0x037646D8 ADD X3, X31, 0x8
	0x037646DC MOVZ W1, 0x203
	0x037646E0 MOV X0, X19
	0x037646E4 MOV X4, X31
	0x037646E8 BL 0x337D7DC
	0x037646EC TBZ X0, 0x0, 0x376471C
	0x037646F0 LDR X8, [X31 + 0x8]
	0x037646F4 MOVZ W9, 0xB
	0x037646F8 STP X31, X31, [X31 + 0x20]
	0x037646FC STR W9, [X31 + 0x20]
	0x03764700 STUR X8, [X31 + 0x24]
	0x03764704 LDP X0, X1, [X31 + 0x20]
	0x03764708 LDP X20, X19, [X31 + 0x40]
	0x0376470C LDP X30, X21, [X31 + 0x30]
	0x03764710 ADD X31, X31, 0x50
	0x03764714 RET
	0x03764718 BL 0x1C16F20
	0x0376471C ADRP X0, 0x998000
	0x03764720 LDR X0, [X0 + 0x758]
	0x03764724 BL 0x1C16D08
	0x03764728 BL 0x1C16F10
	0x0376472C MOV X1, X31
	0x03764730 MOV X19, X0
	0x03764734 BL 0x3380288
	0x03764738 ADRP X0, 0x9E2000
	0x0376473C LDR X0, [X0 + 0x450]
	0x03764740 BL 0x1C16D08
	0x03764744 MOV X1, X0
	0x03764748 MOV X0, X19
	0x0376474C BL 0x1C16DEC
	0x03764750 SUB X31, X31, 0x40
	0x03764754 STR X30, [X31 + 0x10]
	0x03764758 STP X22, X21, [X31 + 0x20]
	0x0376475C STP X20, X19, [X31 + 0x30]
	0x03764760 ADRP X21, 0xC7C000
	0x03764764 LDRB W8, [X21 + 0xE6D]
	0x03764768 MOV X20, X1
	0x0376476C MOV X19, X0
	0x03764770 TBNZ X8, 0x0, 0x3764788
	0x03764774 ADRP X0, 0x98F000
	0x03764778 LDR X0, [X0 + 0x6C0]
	0x0376477C BL 0x1C16CF4
	0x03764780 MOVZ W8, 0x1
	0x03764784 STRB W8, [X21 + 0xE6D]
	0x03764788 CBZ X20, 0x3764858
	0x0376478C MOV X0, X20
	0x03764790 MOV X1, X31
	0x03764794 BL 0x33BE520
	0x03764798 CBZ X0, 0x3764854
	0x0376479C LDR X8, [X0]
	0x037647A0 LDR X1, [X19]
	0x037647A4 MOVZ W2, 0x35
	0x037647A8 MOV X21, X0
	0x037647AC LDR X9, [X8 + 0x678]
	0x037647B0 LDR X3, [X8 + 0x680]
	0x037647B4 BLR X9
	0x037647B8 MOV X1, X31
	0x037647BC MOV X2, X31
	0x037647C0 MOV X22, X0
	0x037647C4 BL 0x32CCEA8
	0x037647C8 TBNZ X0, 0x0, 0x37648A0
	0x037647CC CBZ X22, 0x3764854
	0x037647D0 LDR X8, [X22]
	0x037647D4 ADRP X21, 0x98F000
	0x037647D8 MOV X0, X22
	0x037647DC LDR X9, [X8 + 0x258]
	0x037647E0 LDR X1, [X8 + 0x260]
	0x037647E4 LDR X21, [X21 + 0x6C0]
	0x037647E8 BLR X9
	0x037647EC LDR X8, [X21]
	0x037647F0 MOV X21, X0
	0x037647F4 LDR W9, [X8 + 0xE0]
	0x037647F8 CBNZ W9, 0x3764804
	0x037647FC MOV X0, X8
	0x03764800 BL 0x1C16DFC
	0x03764804 MOV X0, X21
	0x03764808 MOV X1, X31
	0x0376480C BL 0x3397AFC
	0x03764810 LDUR V0, [X19 + 0x8]
	0x03764814 MOV W1, W0
	0x03764818 ADD X0, X31, 0x0
	0x0376481C STR V0, [X31]
	0x03764820 BL 0x3763C44
	0x03764824 STP X0, X1, [X31]
	0x03764828 ADD X0, X31, 0x0
	0x0376482C BL 0x37649CC
	0x03764830 MOV X2, X0
	0x03764834 MOV X0, X22
	0x03764838 MOV X1, X20
	0x0376483C LDP X20, X19, [X31 + 0x30]
	0x03764840 LDP X22, X21, [X31 + 0x20]
	0x03764844 LDR X30, [X31 + 0x10]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X22, 0xC7D000
	013 Move W9, [X22+3687]
	014 Move W23, W2
	015 Move X21, X1
	016 Move X19, X0
	017 Move X20, X8
	018 Move TEMP, X9
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {33}
	022 Move X0, 0x992000
	023 Move X0, [X0+368]
	024 Call 0x1C17CF4
	025 Move X0, 0x9E3000
	026 Move X0, [X0+976]
	027 Call 0x1C17CF4
	028 Move X0, 0x992000
	029 Move X0, [X0+928]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X22+3687], W8
	033 Compare X19, 0
	034 JumpIfEqual {201}
	035 Move W25, [X19+16]
	036 Move W22, [X21]
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X24, 0x992000
	039 Move X24, [X24+368]
	040 Move X0, X19
	041 Move W1, W22
	042 Move X2, X31
	043 Call String.get_Chars, X0, X1
	044 Move X8, [X24]
	045 Move W22, W0
	046 Move W9, [X8+224]
	047 Compare W9, 0
	048 JumpIfNotEqual {51}
	049 Move X0, X8
	050 Call 0x1C17DFC
	051 Move W0, W22
	052 Move X1, X31
	053 Call Char.IsWhiteSpace, X0
	054 Move W22, [X21]
	055 Move TEMP, X0
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfNotEqual {62}
	059 Add W22, W22, 1
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move [X21], W22
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move W8, W22
	064 Move X26, 0x992000
	065 Move X27, 0x992000
	066 Move X26, [X26+928]
	067 Move X27, [X27+368]
	068 Move W1, W22
	069 Move X0, X19
	070 Move X2, X31
	071 Call String.get_Chars, X0, X1
	072 And W8, W0, 0xFFFF
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move W24, W0
	075 Move X0, [X26]
	076 Compare X0, 0
	077 JumpIfEqual {201}
	078 Move W1, W31
	079 Move X2, X31
	080 Call String.get_Chars, X0, X1
	081 And W8, W24, 0xFFFF
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Move X0, [X27]
	084 Move W8, [X0+224]
	085 Compare W8, 0
	086 JumpIfNotEqual {88}
	087 Call 0x1C17DFC
	088 Move W0, W24
	089 Move X1, X31
	090 Call Char.IsWhiteSpace, X0
	091 Move TEMP, X0
	092 And TEMP, TEMP, 1
	093 Compare TEMP, 1
	094 JumpIfEqual {99}
	095 Move W8, [X21]
	096 Add W1, W8, 1
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Move [X21], W1
	099 Move W8, [X21]
	100 Subtract W2, W8, W22
	101 Move X0, X19
	102 Move W1, W22
	103 Move X3, X31
	104 Call String.Substring, X0, X1, X2
	105 Move X22, X0
	106 Move TEMP, X23
	107 And TEMP, TEMP, 1
	108 Compare TEMP, 1
	109 JumpIfNotEqual {113}
	110 Move [X20+8], X31
	111 Move [X20+16], X31
	112 Move [X20], X22
	113 Move W1, [X21]
	114 NotImplemented "Instruction CMP not yet implemented."
	115 Move X24, 0x992000
	116 Move X24, [X24+368]
	117 Move X0, X19
	118 Move X2, X31
	119 Call String.get_Chars, X0, X1
	120 Move X8, [X24]
	121 Move W23, W0
	122 Move W9, [X8+224]
	123 Compare W9, 0
	124 JumpIfNotEqual {127}
	125 Move X0, X8
	126 Call 0x1C17DFC
	127 Move W0, W23
	128 Move X1, X31
	129 Call Char.IsWhiteSpace, X0
	130 Move W1, [X21]
	131 Move TEMP, X0
	132 And TEMP, TEMP, 1
	133 Compare TEMP, 1
	134 JumpIfNotEqual {138}
	135 Add W1, W1, 1
	136 NotImplemented "Instruction CMP not yet implemented."
	137 Move [X21], W1
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Move X0, X19
	140 Move X2, X31
	141 Call String.get_Chars, X0, X1
	142 Move W1, [X21]
	143 And W8, W0, 0xFFFF
	144 NotImplemented "Instruction CMP not yet implemented."
	145 Add W2, W1, 1
	146 Move W1, 41
	147 Move X0, X19
	148 Move X3, X31
	149 Move [X21], W2
	150 Call String.IndexOf, X0, X1, X2
	151 Move W1, [X21]
	152 Add W31, W0, 1
	153 Move W24, W0
	154 Subtract W2, W0, W1
	155 Move X0, X19
	156 Move X3, X31
	157 Call String.Substring, X0, X1, X2
	158 Call NamedValue.ParseMultiple, X0
	159 Move X23, X0
	160 Add W1, W24, 1
	161 Move [X21], W1
	162 Move X23, X31
	163 NotImplemented "Instruction CMP not yet implemented."
	164 Move X0, X19
	165 Move X2, X31
	166 Call String.get_Chars, X0, X1
	167 And W8, W0, 0xFFFF
	168 NotImplemented "Instruction CMP not yet implemented."
	169 Move W1, [X21]
	170 Move X0, X19
	171 Move X2, X31
	172 Call String.get_Chars, X0, X1
	173 And W8, W0, 0xFFFF
	174 NotImplemented "Instruction CMP not yet implemented."
	175 Move W8, [X21]
	176 Add W8, W8, 1
	177 Move [X21], W8
	178 Move X8, 0x9E3000
	179 Move X8, [X8+976]
	180 Add X0, X31, 0
	181 Move X1, X23
	182 Move [X31], X31
	183 Move [X31+8], X31
	184 Move X2, [X8]
	185 Call ReadOnlyArray`1<NamedValue>..ctor, X0, X1
	186 Move V0, [X31]
	187 Move [X20], X22
	188 Move [X20+8], V0
	189 Move X20, [X31+80]
	190 Move X19, [X31+88]
	191 Move X22, [X31+64]
	192 Move X21, [X31+72]
	193 Move X24, [X31+48]
	194 Move X23, [X31+56]
	195 Move X26, [X31+32]
	196 Move X25, [X31+40]
	197 Move X30, [X31+16]
	198 Move X27, [X31+24]
	199 Add X31, X31, 96
	200 Return X0
	201 Call 0x1C17F20
	202 Move [X31], W22
	203 Move X0, 0x990000
	204 Move X0, [X0+1880]
	205 Call 0x1C17D08
	206 Add X1, X31, 0
	207 Call 0x1C17E04
	208 Move X20, X0
	209 Move X0, 0x9E3000
	210 Move X0, [X0+984]
	211 Call 0x1C17D08
	212 Move X1, X20
	213 Move X2, X19
	214 Move X3, X31
	215 Call String.Format, X0, X1, X2
	216 Move X19, X0
	217 Move X0, 0x998000
	218 Move X0, [X0+1400]
	219 Call 0x1C17D08
	220 Call 0x1C17F10
	221 Move X20, X0
	222 Move X0, 0x9E3000
	223 Move X0, [X0+992]
	224 Call 0x1C17D08
	225 Move X2, X0
	226 Move X0, X20
	227 Move X1, X19
	228 Move X3, X31
	229 Call ArgumentException..ctor, X0, X1, X2
	230 Move X0, 0x9E3000
	231 Move X0, [X0+1000]
	232 Call 0x1C17D08
	233 Move X1, X0
	234 Move X0, X20
	235 Call 0x1C17DEC
	236 Move [X31], W1
	237 Move X0, 0x990000
	238 Move X0, [X0+1880]
	239 Call 0x1C17D08
	240 Add X1, X31, 0
	241 Call 0x1C17E04
	242 Move X20, X0
	243 Move X0, 0x9E3000
	244 Move X0, [X0+1008]

