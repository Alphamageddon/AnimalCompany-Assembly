Type: UnityEngine.InputSystem.Utilities.StringHelpers

Method: System.String Escape(System.String str, System.String chars = 
	\", System.String replacements = ntr\")

Disassembly:
	0x03767E54 MOV W8, W31
	0x03767E58 B 0x3767E7C
	0x03767E5C LDR X0, [X20]
	0x03767E60 LDR W8, [X0 + 0xE0]
	0x03767E64 CBNZ W8, 0x3767E6C
	0x03767E68 BL 0x1C16DFC
	0x03767E6C MOV W0, W19
	0x03767E70 MOV X1, X31
	0x03767E74 BL 0x3317FCC
	0x03767E78 EOR W8, W0, 0x1
	0x03767E7C LDP X20, X19, [X31 + 0x10]
	0x03767E80 AND W0, W8, 0x1
	0x03767E84 LDP X30, X21, [X31], #0x20
	0x03767E88 RET
	0x03767E8C STP X30, X23, [X31 - 0x30]!
	0x03767E90 STP X22, X21, [X31 + 0x10]
	0x03767E94 STP X20, X19, [X31 + 0x20]
	0x03767E98 ADRP X20, 0xC79000
	0x03767E9C ADRP X21, 0x98C000
	0x03767EA0 LDRB W8, [X20 + 0xE86]
	0x03767EA4 LDR X21, [X21 + 0x8F0]
	0x03767EA8 MOV X19, X0
	0x03767EAC TBNZ X8, 0x0, 0x3767ED0
	0x03767EB0 ADRP X0, 0x98E000
	0x03767EB4 LDR X0, [X0 + 0x170]
	0x03767EB8 BL 0x1C16CF4
	0x03767EBC ADRP X0, 0x98C000
	0x03767EC0 LDR X0, [X0 + 0x8F0]
	0x03767EC4 BL 0x1C16CF4
	0x03767EC8 MOVZ W8, 0x1
	0x03767ECC STRB W8, [X20 + 0xE86]
	0x03767ED0 LDR X0, [X21]
	0x03767ED4 BL 0x1C16F10
	0x03767ED8 MOV X1, X31
	0x03767EDC MOV X20, X0
	0x03767EE0 BL 0x3231AC4
	0x03767EE4 CBZ X19, 0x3767F7C
	0x03767EE8 LDR W8, [X19 + 0x10]
	0x03767EEC CMP W8, 0x1
	0x03767EF0 B.LT 0x3767F5C
	0x03767EF4 ADRP X23, 0x98E000
	0x03767EF8 LDR X23, [X23 + 0x170]
	0x03767EFC MOV W21, W31
	0x03767F00 MOV X0, X19
	0x03767F04 MOV W1, W21
	0x03767F08 MOV X2, X31
	0x03767F0C BL 0x3222A1C
	0x03767F10 LDR X8, [X23]
	0x03767F14 MOV W22, W0
	0x03767F18 LDR W9, [X8 + 0xE0]
	0x03767F1C CBNZ W9, 0x3767F28
	0x03767F20 MOV X0, X8
	0x03767F24 BL 0x1C16DFC
	0x03767F28 MOV W0, W22
	0x03767F2C MOV X1, X31
	0x03767F30 BL 0x3317FCC
	0x03767F34 TBNZ X0, 0x0, 0x3767F4C
	0x03767F38 CBZ X20, 0x3767F7C
	0x03767F3C MOV X0, X20
	0x03767F40 MOV W1, W22
	0x03767F44 MOV X2, X31
	0x03767F48 BL 0x3233D30
	0x03767F4C LDR W8, [X19 + 0x10]
	0x03767F50 ADD W21, W21, 0x1
	0x03767F54 CMP W21, W8
	0x03767F58 B.LT 0x3767F00
	0x03767F5C CBZ X20, 0x3767F7C
	0x03767F60 LDR X8, [X20]
	0x03767F64 MOV X0, X20
	0x03767F68 LDP X20, X19, [X31 + 0x20]
	0x03767F6C LDP X22, X21, [X31 + 0x10]
	0x03767F70 LDP X2, X1, [X8 + 0x168]
	0x03767F74 LDP X30, X23, [X31], #0x30
	0x03767F78 BR X2
	0x03767F7C BL 0x1C16F20
	0x03767F80 STR X30, [X31 - 0x20]!
	0x03767F84 STP X20, X19, [X31 + 0x10]
	0x03767F88 MOV X19, X1
	0x03767F8C MOV X1, X31
	0x03767F90 MOV X20, X0
	0x03767F94 BL 0x32277A8
	0x03767F98 TBZ X0, 0x0, 0x3767FB0
	0x03767F9C MOV X0, X19
	0x03767FA0 LDP X20, X19, [X31 + 0x10]
	0x03767FA4 MOV X1, X31
	0x03767FA8 LDR X30, [X31], #0x20
	0x03767FAC B 0x32277A8
	0x03767FB0 MOV X0, X20
	0x03767FB4 MOV X1, X19
	0x03767FB8 LDP X20, X19, [X31 + 0x10]
	0x03767FBC MOVZ W2, 0x3
	0x03767FC0 MOV X3, X31
	0x03767FC4 LDR X30, [X31], #0x20

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X22, 0xC7A000
	010 Move W8, [X22+3708]
	011 Move X20, X2
	012 Move X21, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x98D000
	019 Move X0, [X0+2288]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+3708], W8
	023 Compare X19, 0
	024 JumpIfEqual {45}
	025 Move W8, [X19+16]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move W22, W31
	028 Move X0, X19
	029 Move W1, W22
	030 Move X2, X31
	031 Call String.get_Chars, X0, X1
	032 Compare X21, 0
	033 JumpIfEqual {111}
	034 Move W1, W0
	035 Move X0, X21
	036 Move X2, X31
	037 Call String.Contains, X0, X1
	038 Move TEMP, X0
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfEqual {55}
	042 Move W8, [X19+16]
	043 Add W22, W22, 1
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move X0, X19
	046 Move X20, [X31+48]
	047 Move X19, [X31+56]
	048 Move X22, [X31+32]
	049 Move X21, [X31+40]
	050 Move X24, [X31+16]
	051 Move X23, [X31+24]
	052 Move X30, [X31+64]
	053 Move X25, [X31+72]
	054 Return X0
	055 Move X8, 0x98D000
	056 Move X8, [X8+2288]
	057 Move X0, [X8]
	058 Call 0x1C17F10
	059 Move X1, X31
	060 Move X22, X0
	061 Call StringBuilder..ctor, X0
	062 Move W8, [X19+16]
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move W23, W31
	065 Move X0, X19
	066 Move W1, W23
	067 Move X2, X31
	068 Call String.get_Chars, X0, X1
	069 Move W24, W0
	070 Move X0, X21
	071 Move W1, W24
	072 Move X2, X31
	073 Call String.IndexOf, X0, X1
	074 Compare X22, 0
	075 JumpIfEqual {111}
	076 Move W25, W0
	077 Add W31, W0, 1
	078 Move W1, 92
	079 Move X0, X22
	080 Move X2, X31
	081 Call StringBuilder.Append, X0, X1
	082 Compare X20, 0
	083 JumpIfEqual {111}
	084 Move X0, X20
	085 Move W1, W25
	086 Move X2, X31
	087 Call String.get_Chars, X0, X1
	088 Move W24, W0
	089 Move X0, X22
	090 Move W1, W24
	091 Move X2, X31
	092 Call StringBuilder.Append, X0, X1
	093 Move W8, [X19+16]
	094 Add W23, W23, 1
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Compare X22, 0
	097 JumpIfEqual {111}
	098 Move X8, [X22]
	099 Move X0, X22
	100 Move X20, [X31+48]
	101 Move X19, [X31+56]
	102 Move X22, [X31+32]
	103 Move X21, [X31+40]
	104 Move X2, [X8+360]
	105 Move X1, [X8+368]
	106 Move X24, [X31+16]
	107 Move X23, [X31+24]
	108 Move X30, [X31+64]
	109 Move X25, [X31+72]
	110 CallNoReturn X2
	111 Call 0x1C17F20

Method: System.String Unescape(System.String str, System.String chars = ntr\", System.String replacements = 
	\")

Disassembly:
	0x03767FC8 B 0x3226C60
	0x03767FCC STR X30, [X31 - 0x40]!
	0x03767FD0 STP X24, X23, [X31 + 0x10]
	0x03767FD4 STP X22, X21, [X31 + 0x20]
	0x03767FD8 STP X20, X19, [X31 + 0x30]
	0x03767FDC ADRP X21, 0xC79000
	0x03767FE0 LDRB W8, [X21 + 0xE87]
	0x03767FE4 MOV X19, X1
	0x03767FE8 MOV X20, X0
	0x03767FEC TBNZ X8, 0x0, 0x3768004
	0x03767FF0 ADRP X0, 0x98C000
	0x03767FF4 LDR X0, [X0 + 0x8F0]
	0x03767FF8 BL 0x1C16CF4
	0x03767FFC MOVZ W8, 0x1
	0x03768000 STRB W8, [X21 + 0xE87]
	0x03768004 MOV X0, X20
	0x03768008 MOV X1, X31
	0x0376800C BL 0x32277A8
	0x03768010 TBNZ X0, 0x0, 0x3768130
	0x03768014 CBZ X19, 0x3768150
	0x03768018 ADRP X8, 0x98B000
	0x0376801C LDR X8, [X8 + 0x8F0]
	0x03768020 LDR X0, [X8]
	0x03768024 BL 0x1C16F10
	0x03768028 MOV X1, X31
	0x0376802C MOV X21, X0
	0x03768030 BL 0x3231AC4
	0x03768034 CBZ X20, 0x376812C
	0x03768038 LDR W24, [X20 + 0x10]
	0x0376803C CMP W24, 0x1
	0x03768040 B.LT 0x3768108
	0x03768044 MOV W22, W31
	0x03768048 MOV X0, X20
	0x0376804C MOV W1, W22
	0x03768050 MOV X2, X31
	0x03768054 BL 0x3222A1C
	0x03768058 AND W8, W0, 0xFFFF
	0x0376805C CMP W8, 0x7B
	0x03768060 B.NE 0x37680E4
	0x03768064 ADD W23, W22, 0x1
	0x03768068 CMP W23, W24
	0x0376806C MOV W22, W23
	0x03768070 B.GE 0x37680A0
	0x03768074 MOV X0, X20
	0x03768078 MOV W1, W22
	0x0376807C MOV X2, X31
	0x03768080 BL 0x3222A1C
	0x03768084 AND W8, W0, 0xFFFF
	0x03768088 CMP W8, 0x7D
	0x0376808C B.EQ 0x37680A0
	0x03768090 ADD W22, W22, 0x1
	0x03768094 CMP W24, W22
	0x03768098 B.NE 0x3768074
	0x0376809C MOV W22, W24
	0x037680A0 SUB W2, W22, W23
	0x037680A4 MOV X0, X20
	0x037680A8 MOV W1, W23
	0x037680AC MOV X3, X31
	0x037680B0 BL 0x3228DE4
	0x037680B4 LDR X8, [X19 + 0x40]
	0x037680B8 LDR X9, [X19 + 0x18]
	0x037680BC LDR X2, [X19 + 0x28]
	0x037680C0 MOV X1, X0
	0x037680C4 MOV X0, X8
	0x037680C8 BLR X9
	0x037680CC CBZ X21, 0x376812C
	0x037680D0 MOV X1, X0
	0x037680D4 MOV X0, X21
	0x037680D8 MOV X2, X31
	0x037680DC BL 0x32333E0
	0x037680E0 B 0x37680F8
	0x037680E4 CBZ X21, 0x376812C
	0x037680E8 MOV W1, W0
	0x037680EC MOV X0, X21
	0x037680F0 MOV X2, X31
	0x037680F4 BL 0x3233D30
	0x037680F8 ADD W22, W22, 0x1
	0x037680FC CMP W22, W24
	0x03768100 B.LT 0x3768048
	0x03768104 B 0x376810C
	0x03768108 CBZ X21, 0x376812C
	0x0376810C LDR X8, [X21]
	0x03768110 MOV X0, X21
	0x03768114 LDP X20, X19, [X31 + 0x30]
	0x03768118 LDP X22, X21, [X31 + 0x20]
	0x0376811C LDP X2, X1, [X8 + 0x168]
	0x03768120 LDP X24, X23, [X31 + 0x10]
	0x03768124 LDR X30, [X31], #0x40
	0x03768128 BR X2
	0x0376812C BL 0x1C16F20
	0x03768130 ADRP X0, 0x990000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0xC7A000
	009 Move W8, [X22+3709]
	010 Move X20, X2
	011 Move X21, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x98D000
	018 Move X0, [X0+2288]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X22+3709], W8
	022 Compare X19, 0
	023 JumpIfEqual {83}
	024 Move W1, 92
	025 Move X0, X19
	026 Move X2, X31
	027 Call String.Contains, X0, X1
	028 Move TEMP, X0
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfNotEqual {83}
	032 Move X8, 0x98C000
	033 Move X8, [X8+2288]
	034 Move X0, [X8]
	035 Call 0x1C17F10
	036 Move X1, X31
	037 Move X22, X0
	038 Call StringBuilder..ctor, X0
	039 Move W8, [X19+16]
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move W23, W31
	042 Move X0, X19
	043 Move W1, W23
	044 Move X2, X31
	045 Call String.get_Chars, X0, X1
	046 And W8, W0, 0xFFFF
	047 Move W24, W0
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move W8, [X19+16]
	050 Subtract W8, W8, 2
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Add W23, W23, 1
	053 Move X0, X19
	054 Move W1, W23
	055 Move X2, X31
	056 Call String.get_Chars, X0, X1
	057 Compare X21, 0
	058 JumpIfEqual {106}
	059 Move W24, W0
	060 Move X0, X21
	061 Move W1, W24
	062 Move X2, X31
	063 Call String.IndexOf, X0, X1
	064 Add W31, W0, 1
	065 Compare X20, 0
	066 JumpIfEqual {106}
	067 Move W1, W0
	068 Move X0, X20
	069 Move X2, X31
	070 Call String.get_Chars, X0, X1
	071 Compare X22, 0
	072 JumpIfEqual {106}
	073 Move W24, W0
	074 Compare X22, 0
	075 JumpIfEqual {106}
	076 Move X0, X22
	077 Move W1, W24
	078 Move X2, X31
	079 Call StringBuilder.Append, X0, X1
	080 Move W8, [X19+16]
	081 Add W23, W23, 1
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Move X0, X19
	084 Move X20, [X31+48]
	085 Move X19, [X31+56]
	086 Move X22, [X31+32]
	087 Move X21, [X31+40]
	088 Move X24, [X31+16]
	089 Move X23, [X31+24]
	090 Move X30, [X31+64]
	091 Return X0
	092 Compare X22, 0
	093 JumpIfEqual {106}
	094 Move X8, [X22]
	095 Move X0, X22
	096 Move X20, [X31+48]
	097 Move X19, [X31+56]
	098 Move X22, [X31+32]
	099 Move X21, [X31+40]
	100 Move X2, [X8+360]
	101 Move X1, [X8+368]
	102 Move X24, [X31+16]
	103 Move X23, [X31+24]
	104 Move X30, [X31+64]
	105 CallNoReturn X2
	106 Call 0x1C17F20

Method: System.Boolean Contains(System.String str, System.Char ch)

Disassembly:
	0x03768134 LDR X0, [X0 + 0x528]
	0x03768138 BL 0x1C16D08
	0x0376813C BL 0x1C16F10
	0x03768140 MOV X19, X0
	0x03768144 ADRP X0, 0x9DE000
	0x03768148 LDR X0, [X0 + 0x5D0]
	0x0376814C B 0x376816C
	0x03768150 ADRP X0, 0x990000

ISIL:
	001 Compare X0, 0
	002 JumpIfEqual {9}
	003 Move [X31-16], X30
	004 Move X2, X31
	005 Call String.IndexOf, X0, X1
	006 Add W31, W0, 1
	007 NotImplemented "Instruction CSET not yet implemented."
	008 Move X30, [X31+16]
	009 Return X0

Method: System.Boolean Contains(System.String str, System.String text, System.StringComparison comparison)

Disassembly:
	0x03768154 LDR X0, [X0 + 0x528]
	0x03768158 BL 0x1C16D08
	0x0376815C BL 0x1C16F10
	0x03768160 MOV X19, X0
	0x03768164 ADRP X0, 0x9DE000
	0x03768168 LDR X0, [X0 + 0x5D8]
	0x0376816C BL 0x1C16D08
	0x03768170 MOV X1, X0

ISIL:
	001 Compare X0, 0
	002 JumpIfEqual {9}
	003 Move [X31-16], X30
	004 Move X3, X31
	005 Call String.IndexOf, X0, X1, X2
	006 Add W31, W0, 1
	007 NotImplemented "Instruction CSET not yet implemented."
	008 Move X30, [X31+16]
	009 Return X0

Method: System.String GetPlural(System.String str)

Disassembly:
	0x03768174 MOV X0, X19
	0x03768178 MOV X2, X31
	0x0376817C BL 0x330E100
	0x03768180 ADRP X0, 0x9DE000
	0x03768184 LDR X0, [X0 + 0x5E0]
	0x03768188 BL 0x1C16D08
	0x0376818C MOV X1, X0
	0x03768190 MOV X0, X19
	0x03768194 BL 0x1C16DEC
	0x03768198 RET
	0x0376819C STR X30, [X31 - 0x20]!
	0x037681A0 STP X20, X19, [X31 + 0x10]
	0x037681A4 LDR W8, [X0 + 0x10]
	0x037681A8 MOV X19, X0
	0x037681AC CMP W8, 0x1
	0x037681B0 B.EQ 0x37681E0
	0x037681B4 CBNZ W8, 0x37681D0
	0x037681B8 LDR X0, [X19 + 0x28]
	0x037681BC MOVN W8, 0x0
	0x037681C0 MOV X1, X31
	0x037681C4 STR W8, [X19 + 0x10]
	0x037681C8 BL 0x32277A8
	0x037681CC TBZ X0, 0x0, 0x37681F0
	0x037681D0 MOV W0, W31
	0x037681D4 LDP X20, X19, [X31 + 0x10]
	0x037681D8 LDR X30, [X31], #0x20
	0x037681DC RET
	0x037681E0 LDP W8, W1, [X19 + 0x48]
	0x037681E4 MOVN W9, 0x0
	0x037681E8 STR W9, [X19 + 0x10]
	0x037681EC B 0x3768204
	0x037681F0 LDR X8, [X19 + 0x28]
	0x037681F4 CBZ X8, 0x37682C0
	0x037681F8 LDR W8, [X8 + 0x10]
	0x037681FC MOV W1, W31
	0x03768200 STP W8, W31, [X19 + 0x48]
	0x03768204 CMP W1, W8
	0x03768208 B.GE 0x37681D0
	0x0376820C LDR X0, [X19 + 0x28]
	0x03768210 CBZ X0, 0x37682C0
	0x03768214 MOV X2, X31
	0x03768218 BL 0x3222A1C
	0x0376821C LDR X8, [X19 + 0x38]
	0x03768220 CBZ X8, 0x37682C0
	0x03768224 MOV W1, W0
	0x03768228 LDR X9, [X8 + 0x18]
	0x0376822C LDR X0, [X8 + 0x40]
	0x03768230 LDR X2, [X8 + 0x28]
	0x03768234 BLR X9
	0x03768238 LDP W8, W20, [X19 + 0x48]
	0x0376823C ADD W1, W20, 0x1
	0x03768240 CMP W1, W8
	0x03768244 STR W1, [X19 + 0x4C]
	0x03768248 TBNZ X0, 0x0, 0x3768208
	0x0376824C B.GE 0x3768294
	0x03768250 LDR X0, [X19 + 0x28]
	0x03768254 CBZ X0, 0x37682C0
	0x03768258 MOV X2, X31
	0x0376825C BL 0x3222A1C
	0x03768260 LDR X8, [X19 + 0x38]
	0x03768264 CBZ X8, 0x37682C0
	0x03768268 MOV W1, W0
	0x0376826C LDR X9, [X8 + 0x18]
	0x03768270 LDR X0, [X8 + 0x40]
	0x03768274 LDR X2, [X8 + 0x28]
	0x03768278 BLR X9
	0x0376827C TBNZ X0, 0x0, 0x3768294
	0x03768280 LDP W9, W8, [X19 + 0x48]
	0x03768284 ADD W1, W8, 0x1
	0x03768288 CMP W1, W9
	0x0376828C STR W1, [X19 + 0x4C]
	0x03768290 B.LT 0x3768250
	0x03768294 LDR X0, [X19 + 0x28]
	0x03768298 CBZ X0, 0x37682C0
	0x0376829C LDR W8, [X19 + 0x4C]
	0x037682A0 MOV W1, W20
	0x037682A4 MOV X3, X31
	0x037682A8 SUB W2, W8, W20
	0x037682AC BL 0x3228DE4
	0x037682B0 STR X0, [X19 + 0x18]
	0x037682B4 MOVZ W0, 0x1
	0x037682B8 STR W0, [X19 + 0x10]
	0x037682BC B 0x37681D4
	0x037682C0 BL 0x1C16F20
	0x037682C4 LDR X0, [X0 + 0x18]
	0x037682C8 RET
	0x037682CC STP X30, X19, [X31 - 0x10]!
	0x037682D0 ADRP X0, 0x98B000
	0x037682D4 LDR X0, [X0 + 0xB40]
	0x037682D8 BL 0x1C16D08
	0x037682DC BL 0x1C16F10
	0x037682E0 MOV X1, X31
	0x037682E4 MOV X19, X0
	0x037682E8 BL 0x3380310
	0x037682EC ADRP X0, 0x9DE000
	0x037682F0 LDR X0, [X0 + 0x5E8]
	0x037682F4 BL 0x1C16D08
	0x037682F8 MOV X1, X0
	0x037682FC MOV X0, X19
	0x03768300 BL 0x1C16DEC
	0x03768304 LDR X0, [X0 + 0x18]
	0x03768308 RET
	0x0376830C STR X30, [X31 - 0x20]!
	0x03768310 STP X20, X19, [X31 + 0x10]
	0x03768314 ADRP X20, 0xC78000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xC79000
	005 Move W8, [X20+3710]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {40}
	011 Move X0, 0x9D5000
	012 Move X0, [X0+3720]
	013 Call 0x1C17CF4
	014 Move X0, 0x9DF000
	015 Move X0, [X0+1304]
	016 Call 0x1C17CF4
	017 Move X0, 0x9DF000
	018 Move X0, [X0+1312]
	019 Call 0x1C17CF4
	020 Move X0, 0x9DF000
	021 Move X0, [X0+1320]
	022 Call 0x1C17CF4
	023 Move X0, 0x9DF000
	024 Move X0, [X0+1328]
	025 Call 0x1C17CF4
	026 Move X0, 0x9B5000
	027 Move X0, [X0+3264]
	028 Call 0x1C17CF4
	029 Move X0, 0x9DF000
	030 Move X0, [X0+1336]
	031 Call 0x1C17CF4
	032 Move X0, 0x9B4000
	033 Move X0, [X0+1304]
	034 Call 0x1C17CF4
	035 Move X0, 0x9DF000
	036 Move X0, [X0+1344]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X20+3710], W8
	040 Compare X19, 0
	041 JumpIfEqual {105}
	042 Move X8, 0x9D5000
	043 Move X8, [X8+3720]
	044 Move X0, X19
	045 Move X2, X31
	046 Move X1, [X8]
	047 Call String.op_Equality, X0, X1
	048 Move TEMP, X0
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfNotEqual {54}
	052 Move X8, 0x9DF000
	053 Move X8, [X8+1312]
	054 Move X8, 0x9DF000
	055 Move X8, [X8+1344]
	056 Move X0, X19
	057 Move X2, X31
	058 Move X1, [X8]
	059 Call String.op_Equality, X0, X1
	060 Move TEMP, X0
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfNotEqual {66}
	064 Move X8, 0x9DF000
	065 Move X8, [X8+1304]
	066 Move X8, 0x9B4000
	067 Move X8, [X8+1304]
	068 Move X0, X19
	069 Move X2, X31
	070 Move X1, [X8]
	071 Call String.op_Equality, X0, X1
	072 Move TEMP, X0
	073 And TEMP, TEMP, 1
	074 Compare TEMP, 1
	075 JumpIfNotEqual {78}
	076 Move X8, 0x9DF000
	077 Move X8, [X8+1336]
	078 Move X8, 0x9DF000
	079 Move X8, [X8+1328]
	080 Move X0, X19
	081 Move X2, X31
	082 Move X1, [X8]
	083 Call String.op_Equality, X0, X1
	084 Move TEMP, X0
	085 And TEMP, TEMP, 1
	086 Compare TEMP, 1
	087 JumpIfNotEqual {95}
	088 Move X8, 0x9DF000
	089 Move X8, [X8+1320]
	090 Move X0, [X8]
	091 Move X20, [X31+16]
	092 Move X19, [X31+24]
	093 Move X30, [X31+32]
	094 Return X0
	095 Move X8, 0x9B5000
	096 Move X8, [X8+3264]
	097 Move X0, X19
	098 Move X20, [X31+16]
	099 Move X19, [X31+24]
	100 Move X2, X31
	101 Move X1, [X8]
	102 Move X30, [X31+32]
	103 Call String.Concat, X0, X1
	104 Return X0
	105 Move X0, 0x991000
	106 Move X0, [X0+1320]
	107 Call 0x1C17D08
	108 Call 0x1C17F10
	109 Move X19, X0
	110 Move X0, 0x98E000
	111 Move X0, [X0+3200]
	112 Call 0x1C17D08
	113 Move X1, X0
	114 Move X0, X19
	115 Move X2, X31
	116 Call ArgumentNullException..ctor, X0, X1
	117 Move X0, 0x9DF000
	118 Move X0, [X0+1352]
	119 Call 0x1C17D08
	120 Move X1, X0
	121 Move X0, X19
	122 Call 0x1C17DEC

Method: System.String NicifyMemorySize(System.Int64 numBytes)

Disassembly:
	0x03768318 LDRB W8, [X20 + 0xE88]
	0x0376831C MOV X19, X0
	0x03768320 TBNZ X8, 0x0, 0x3768338
	0x03768324 ADRP X0, 0x9DE000
	0x03768328 LDR X0, [X0 + 0x598]
	0x0376832C BL 0x1C16CF4
	0x03768330 MOVZ W8, 0x1
	0x03768334 STRB W8, [X20 + 0xE88]
	0x03768338 LDR W8, [X19 + 0x10]
	0x0376833C ADDS W31, W8, 0x2
	0x03768340 B.NE 0x3768364
	0x03768344 LDR W20, [X19 + 0x20]
	0x03768348 MOV X0, X31
	0x0376834C BL 0x33C151C
	0x03768350 CMP W20, W0
	0x03768354 B.NE 0x3768364
	0x03768358 STR W31, [X19 + 0x10]
	0x0376835C MOV X20, X19
	0x03768360 B 0x3768390
	0x03768364 ADRP X8, 0x9DE000
	0x03768368 LDR X8, [X8 + 0x598]
	0x0376836C LDR X0, [X8]
	0x03768370 BL 0x1C16F10
	0x03768374 MOV X1, X31
	0x03768378 MOV X20, X0
	0x0376837C BL 0x33BDD8C
	0x03768380 MOV X0, X31
	0x03768384 STR W31, [X20 + 0x10]
	0x03768388 BL 0x33C151C
	0x0376838C STR W0, [X20 + 0x20]
	0x03768390 LDR X8, [X19 + 0x30]
	0x03768394 MOV X0, X20
	0x03768398 STR X8, [X20 + 0x28]
	0x0376839C LDR X8, [X19 + 0x40]
	0x037683A0 STR X8, [X20 + 0x38]
	0x037683A4 LDP X20, X19, [X31 + 0x10]
	0x037683A8 LDR X30, [X31], #0x20
	0x037683AC RET
	0x037683B0 B 0x376830C
	0x037683B4 RET
	0x037683B8 STR X30, [X31 - 0x30]!
	0x037683BC STP X22, X21, [X31 + 0x10]
	0x037683C0 STP X20, X19, [X31 + 0x20]
	0x037683C4 ADRP X20, 0xC78000
	0x037683C8 LDRB W8, [X20 + 0xE89]
	0x037683CC MOV X19, X0
	0x037683D0 TBNZ X8, 0x0, 0x37683E8
	0x037683D4 ADRP X0, 0x98D000
	0x037683D8 LDR X0, [X0 + 0x170]
	0x037683DC BL 0x1C16CF4
	0x037683E0 MOVZ W8, 0x1
	0x037683E4 STRB W8, [X20 + 0xE89]
	0x037683E8 LDR W8, [X19 + 0x10]
	0x037683EC CMP W8, 0x2
	0x037683F0 B.EQ 0x3768420
	0x037683F4 CMP W8, 0x1
	0x037683F8 B.EQ 0x3768430
	0x037683FC CBNZ W8, 0x37684B0
	0x03768400 LDR X8, [X19 + 0x30]
	0x03768404 MOVN W9, 0x0
	0x03768408 STR W9, [X19 + 0x10]
	0x0376840C CBZ X8, 0x3768610
	0x03768410 LDR W8, [X8 + 0x10]
	0x03768414 MOV W20, W31
	0x03768418 STR W8, [X19 + 0x40]
	0x0376841C B 0x3768440
	0x03768420 LDR W20, [X19 + 0x44]
	0x03768424 MOVN W8, 0x0
	0x03768428 STR W8, [X19 + 0x10]
	0x0376842C B 0x3768440
	0x03768430 LDR W8, [X19 + 0x44]
	0x03768434 MOVN W9, 0x0
	0x03768438 STR W9, [X19 + 0x10]
	0x0376843C ADD W20, W8, 0x1
	0x03768440 LDR W8, [X19 + 0x40]
	0x03768444 CMP W20, W8
	0x03768448 B.GE 0x37684B0
	0x0376844C ADRP X22, 0x98D000
	0x03768450 LDR X22, [X22 + 0x170]
	0x03768454 LDR X0, [X19 + 0x30]
	0x03768458 CBZ X0, 0x3768610
	0x0376845C MOV W1, W20
	0x03768460 MOV X2, X31
	0x03768464 BL 0x3222A1C
	0x03768468 LDR X8, [X22]
	0x0376846C MOV W21, W0
	0x03768470 LDR W9, [X8 + 0xE0]
	0x03768474 CBNZ W9, 0x3768480
	0x03768478 MOV X0, X8
	0x0376847C BL 0x1C16DFC
	0x03768480 MOV W0, W21
	0x03768484 MOV X1, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xC79000
	005 Move W8, [X20+3711]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {31}
	011 Move X0, 0x98E000
	012 Move X0, [X0+2656]
	013 Call 0x1C17CF4
	014 Move X0, 0x98C000
	015 Move X0, [X0+2704]
	016 Call 0x1C17CF4
	017 Move X0, 0x9DF000
	018 Move X0, [X0+1360]
	019 Call 0x1C17CF4
	020 Move X0, 0x9DF000
	021 Move X0, [X0+1368]
	022 Call 0x1C17CF4
	023 Move X0, 0x9DF000
	024 Move X0, [X0+1376]
	025 Call 0x1C17CF4
	026 Move X0, 0x9DF000
	027 Move X0, [X0+1384]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X20+3711], W8
	031 Move W8, 1
	032 NotImplemented "Instruction MOVK not yet implemented."
	033 NotImplemented "Instruction CMP not yet implemented."
	034 NotImplemented "Instruction CMP not yet implemented."
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move X8, 0x98E000
	037 Move X8, [X8+2656]
	038 Add X1, X31, 8
	039 Move [X31+8], X19
	040 Move X0, [X8]
	041 Call 0x1C17E04
	042 Move X8, 0x9DF000
	043 Move X8, [X8+1360]
	044 Move X10, 0x98C000
	045 Move X10, [X10+2704]
	046 Move X8, X19
	047 ShiftRight X8, 30
	048 And X8, X8, 0x7FFFFFFF
	049 And X9, X19, 0x3FFFFFFF
	050 NotImplemented "Instruction SCVTF not yet implemented."
	051 Move X0, [X10]
	052 NotImplemented "Instruction SCVTF not yet implemented."
	053 Add S0, S1, S0
	054 Add X1, X31, 8
	055 Move [X31+8], S0
	056 Call 0x1C17E04
	057 Move X8, 0x9DF000
	058 Move X8, [X8+1384]
	059 Move X10, 0x98C000
	060 Move X10, [X10+2704]
	061 Move X8, X19
	062 ShiftRight X8, 20
	063 And X8, X8, 0x7FFFFFFF
	064 And X9, X19, 0xFFFFF
	065 NotImplemented "Instruction SCVTF not yet implemented."
	066 Move X0, [X10]
	067 NotImplemented "Instruction SCVTF not yet implemented."
	068 Add S0, S0, S1
	069 Add X1, X31, 8
	070 Move [X31+8], S0
	071 Call 0x1C17E04
	072 Move X8, 0x9DF000
	073 Move X8, [X8+1376]
	074 Move X10, 0x98C000
	075 Move X10, [X10+2704]
	076 Move X8, X19
	077 ShiftRight X8, 10
	078 And X8, X8, 0x7FFFFFFF
	079 And X9, X19, 1023
	080 NotImplemented "Instruction SCVTF not yet implemented."
	081 Move X0, [X10]
	082 NotImplemented "Instruction SCVTF not yet implemented."
	083 Add S0, S0, S1
	084 Add X1, X31, 8
	085 Move [X31+8], S0
	086 Call 0x1C17E04
	087 Move X8, 0x9DF000
	088 Move X8, [X8+1368]
	089 Move X8, [X8]
	090 Move X1, X0
	091 Move X2, X31
	092 Move X0, X8
	093 Call String.Format, X0, X1
	094 Move X20, [X31+16]
	095 Move X19, [X31+24]
	096 Move X30, [X31+32]
	097 Return X0

Method: System.Boolean FromNicifiedMemorySize(System.String text, out System.Int64 result, System.Int64 defaultMultiplier = 1)

Disassembly:
	0x03768488 BL 0x3317FCC
	0x0376848C TBZ X0, 0x0, 0x37684A4
	0x03768490 LDR W8, [X19 + 0x40]
	0x03768494 ADD W20, W20, 0x1
	0x03768498 CMP W20, W8
	0x0376849C B.LT 0x3768454
	0x037684A0 B 0x37684A8
	0x037684A4 LDR W8, [X19 + 0x40]
	0x037684A8 CMP W20, W8
	0x037684AC B.NE 0x37684C4
	0x037684B0 MOV W0, W31
	0x037684B4 LDP X20, X19, [X31 + 0x20]
	0x037684B8 LDP X22, X21, [X31 + 0x10]
	0x037684BC LDR X30, [X31], #0x30
	0x037684C0 RET
	0x037684C4 LDR X0, [X19 + 0x30]
	0x037684C8 CBZ X0, 0x3768610
	0x037684CC MOV W1, W20
	0x037684D0 MOV X2, X31
	0x037684D4 BL 0x3222A1C
	0x037684D8 AND W8, W0, 0xFFFF
	0x037684DC CMP W8, 0x22
	0x037684E0 B.NE 0x3768568
	0x037684E4 LDR W8, [X19 + 0x40]
	0x037684E8 ADD W20, W20, 0x1
	0x037684EC MOV W1, W20
	0x037684F0 STR W20, [X19 + 0x44]
	0x037684F4 CMP W20, W8
	0x037684F8 B.GE 0x37685F4
	0x037684FC MOV W1, W20
	0x03768500 LDR X0, [X19 + 0x30]
	0x03768504 CBZ X0, 0x3768610
	0x03768508 MOV X2, X31
	0x0376850C BL 0x3222A1C
	0x03768510 AND W8, W0, 0xFFFF
	0x03768514 CMP W8, 0x22
	0x03768518 B.EQ 0x37685F0
	0x0376851C LDR X0, [X19 + 0x30]
	0x03768520 CBZ X0, 0x3768610
	0x03768524 LDR W1, [X19 + 0x44]
	0x03768528 MOV X2, X31
	0x0376852C BL 0x3222A1C
	0x03768530 LDP W9, W8, [X19 + 0x40]
	0x03768534 AND W10, W0, 0xFFFF
	0x03768538 CMP W10, 0x5C
	0x0376853C CSET W10, EQ
	0x03768540 SUB W11, W9, 0x1
	0x03768544 CMP W8, W11
	0x03768548 CSET W11, LT
	0x0376854C AND W10, W10, W11, 0x0
	0x03768550 ADD W8, W8, W10
	0x03768554 ADD W1, W8, 0x1
	0x03768558 CMP W1, W9
	0x0376855C STR W1, [X19 + 0x44]
	0x03768560 B.LT 0x3768500
	0x03768564 B 0x37685F4
	0x03768568 LDR W8, [X19 + 0x40]
	0x0376856C MOV W1, W20
	0x03768570 STR W20, [X19 + 0x44]
	0x03768574 CMP W20, W8
	0x03768578 B.GE 0x37685D0
	0x0376857C MOV W1, W20
	0x03768580 LDR X0, [X19 + 0x30]
	0x03768584 CBZ X0, 0x3768610
	0x03768588 MOV X2, X31
	0x0376858C BL 0x3222A1C
	0x03768590 LDR X8, [X22]
	0x03768594 MOV W21, W0
	0x03768598 LDR W9, [X8 + 0xE0]
	0x0376859C CBNZ W9, 0x37685A8
	0x037685A0 MOV X0, X8
	0x037685A4 BL 0x1C16DFC
	0x037685A8 MOV W0, W21
	0x037685AC MOV X1, X31
	0x037685B0 BL 0x3317FCC
	0x037685B4 LDR W1, [X19 + 0x44]
	0x037685B8 TBNZ X0, 0x0, 0x37685D0
	0x037685BC LDR W8, [X19 + 0x40]
	0x037685C0 ADD W1, W1, 0x1
	0x037685C4 STR W1, [X19 + 0x44]
	0x037685C8 CMP W1, W8
	0x037685CC B.LT 0x3768580
	0x037685D0 LDR X8, [X19 + 0x30]
	0x037685D4 SUB W9, W1, W20
	0x037685D8 MOVZ W10, 0x2
	0x037685DC MOVZ W0, 0x1
	0x037685E0 STP W20, W9, [X19 + 0x20]
	0x037685E4 STR W10, [X19 + 0x10]
	0x037685E8 STR X8, [X19 + 0x18]
	0x037685EC B 0x37684B4
	0x037685F0 LDR W1, [X19 + 0x44]
	0x037685F4 LDR X8, [X19 + 0x30]
	0x037685F8 SUB W9, W1, W20
	0x037685FC MOVZ W0, 0x1
	0x03768600 STP W20, W9, [X19 + 0x20]
	0x03768604 STR X8, [X19 + 0x18]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xC79000
	007 Move W8, [X22+3712]
	008 Move X20, X2
	009 Move X19, X1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {29}
	015 Move X0, 0x9DF000
	016 Move X0, [X0+1392]
	017 Call 0x1C17CF4
	018 Move X0, 0x9DF000
	019 Move X0, [X0+1400]
	020 Call 0x1C17CF4
	021 Move X0, 0x9DF000
	022 Move X0, [X0+1408]
	023 Call 0x1C17CF4
	024 Move X0, 0x9DF000
	025 Move X0, [X0+1416]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X22+3712], W8
	029 Move [X31+8], X31
	030 Compare X21, 0
	031 JumpIfEqual {115}
	032 Move X0, X21
	033 Move X1, X31
	034 Call String.Trim, X0
	035 Compare X0, 0
	036 JumpIfEqual {115}
	037 Move X8, 0x9DF000
	038 Move X8, [X8+1408]
	039 Move W2, 3
	040 Move X3, X31
	041 Move X21, X0
	042 Move X1, [X8]
	043 Call String.EndsWith, X0, X1, X2
	044 Move TEMP, X0
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfNotEqual {50}
	048 Move W8, [X21+16]
	049 Move W20, 0x100000
	050 Move X8, 0x9DF000
	051 Move X8, [X8+1416]
	052 Move W2, 3
	053 Move X0, X21
	054 Move X3, X31
	055 Move X1, [X8]
	056 Call String.EndsWith, X0, X1, X2
	057 Move TEMP, X0
	058 And TEMP, TEMP, 1
	059 Compare TEMP, 1
	060 JumpIfNotEqual {63}
	061 Move W8, [X21+16]
	062 Move W20, 0x40000000
	063 Move X8, 0x9DF000
	064 Move X8, [X8+1392]
	065 Move W2, 3
	066 Move X0, X21
	067 Move X3, X31
	068 Move X1, [X8]
	069 Call String.EndsWith, X0, X1, X2
	070 Move TEMP, X0
	071 And TEMP, TEMP, 1
	072 Compare TEMP, 1
	073 JumpIfNotEqual {97}
	074 Move W8, [X21+16]
	075 Move W20, 1024
	076 Subtract W2, W8, 2
	077 Move X0, X21
	078 Move W1, W31
	079 Move X3, X31
	080 Call String.Substring, X0, X1, X2
	081 Move X21, X0
	082 Add X1, X31, 8
	083 Move X0, X21
	084 Move X2, X31
	085 Call Int64.TryParse, X0, X1
	086 Move X8, [X31+8]
	087 And W0, W0, 1
	088 Move X22, [X31+16]
	089 Move X21, [X31+24]
	090 Multiply X8, X8, X20
	091 NotImplemented "Instruction CSEL not yet implemented."
	092 Move [X19], X8
	093 Move X20, [X31+32]
	094 Move X19, [X31+40]
	095 Move X30, [X31+48]
	096 Return X0
	097 Move X22, 0x9DF000
	098 Move X22, [X22+1400]
	099 Move W2, 3
	100 Move X0, X21
	101 Move X3, X31
	102 Move X1, [X22]
	103 Call String.EndsWith, X0, X1, X2
	104 Move TEMP, X0
	105 And TEMP, TEMP, 1
	106 Compare TEMP, 1
	107 JumpIfNotEqual {82}
	108 Move X8, [X22]
	109 Compare X8, 0
	110 JumpIfEqual {115}
	111 Move W9, [X21+16]
	112 Move W8, [X8+16]
	113 Move W20, 1
	114 Subtract W2, W9, W8
	115 Call 0x1C17F20

Method: System.Int32 CountOccurrences(System.String str, System.Char ch)

Disassembly:
	0x03768608 STR W0, [X19 + 0x10]
	0x0376860C B 0x37684B4
	0x03768610 BL 0x1C16F20
	0x03768614 STR X1, [X0]
	0x03768618 STP W2, W3, [X0 + 0x8]
	0x0376861C RET
	0x03768620 LDP X8, X1, [X0 + 0x18]
	0x03768624 MOV X0, X8
	0x03768628 RET
	0x0376862C STP X30, X19, [X31 - 0x10]!
	0x03768630 ADRP X0, 0x98B000
	0x03768634 LDR X0, [X0 + 0xB40]
	0x03768638 BL 0x1C16D08
	0x0376863C BL 0x1C16F10
	0x03768640 MOV X1, X31
	0x03768644 MOV X19, X0
	0x03768648 BL 0x3380310
	0x0376864C ADRP X0, 0x9DE000
	0x03768650 LDR X0, [X0 + 0x5F0]
	0x03768654 BL 0x1C16D08
	0x03768658 MOV X1, X0
	0x0376865C MOV X0, X19
	0x03768660 BL 0x1C16DEC
	0x03768664 SUB X31, X31, 0x30
	0x03768668 STP X30, X21, [X31 + 0x10]
	0x0376866C STP X20, X19, [X31 + 0x20]
	0x03768670 ADRP X21, 0xC78000
	0x03768674 ADRP X20, 0x9B6000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Compare X0, 0
	007 JumpIfEqual {22}
	008 Move W22, [X0+16]
	009 Move X20, X0
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Move W19, W1
	012 Move W2, W31
	013 Move W21, W31
	014 Move X0, X20
	015 Move W1, W19
	016 Move X3, X31
	017 Call String.IndexOf, X0, X1, X2
	018 Add W31, W0, 1
	019 Add W2, W0, 1
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Add W21, W21, 1
	022 Move W21, W31
	023 Move W0, W21
	024 Move X20, [X31+32]
	025 Move X19, [X31+40]
	026 Move X22, [X31+16]
	027 Move X21, [X31+24]
	028 Move X30, [X31+48]
	029 Return X0

Method: System.Collections.Generic.IEnumerable`1<UnityEngine.InputSystem.Utilities.Substring> Tokenize(System.String str)

Disassembly:
	0x03768678 LDRB W8, [X21 + 0xE8A]
	0x0376867C LDR X20, [X20 + 0x798]
	0x03768680 MOV X19, X0
	0x03768684 TBNZ X8, 0x0, 0x376869C
	0x03768688 ADRP X0, 0x9B6000
	0x0376868C LDR X0, [X0 + 0x798]
	0x03768690 BL 0x1C16CF4
	0x03768694 MOVZ W8, 0x1
	0x03768698 STRB W8, [X21 + 0xE8A]
	0x0376869C LDUR V0, [X19 + 0x18]
	0x037686A0 LDR X0, [X20]
	0x037686A4 ADD X1, X31, 0x0
	0x037686A8 STR V0, [X31]
	0x037686AC BL 0x1C16E04
	0x037686B0 LDP X20, X19, [X31 + 0x20]
	0x037686B4 LDP X30, X21, [X31 + 0x10]
	0x037686B8 ADD X31, X31, 0x30
	0x037686BC RET
	0x037686C0 STR X30, [X31 - 0x20]!
	0x037686C4 STP X20, X19, [X31 + 0x10]
	0x037686C8 ADRP X20, 0xC78000
	0x037686CC LDRB W8, [X20 + 0xE8B]
	0x037686D0 MOV X19, X0
	0x037686D4 TBNZ X8, 0x0, 0x37686EC
	0x037686D8 ADRP X0, 0x9DE000
	0x037686DC LDR X0, [X0 + 0x590]
	0x037686E0 BL 0x1C16CF4
	0x037686E4 MOVZ W8, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xC79000
	006 Move X21, 0x9DF000
	007 Move W8, [X20+3713]
	008 Move X21, [X21+1424]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x9DF000
	015 Move X0, [X0+1424]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3713], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move X1, X31
	022 Move X20, X0
	023 Call Object..ctor, X0
	024 Move TEMP, 1
	025 Not TEMP
	026 Move W8, TEMP
	027 Move X0, X31
	028 Move [X20+16], W8
	029 Call Environment.get_CurrentManagedThreadId
	030 Move [X20+40], W0
	031 Move [X20+56], X19
	032 Move X0, X20
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Move X21, [X31+40]
	037 Return X0

Method: System.Collections.Generic.IEnumerable`1<System.String> Split(System.String str, System.Func`2<System.Char, System.Boolean> predicate)

Disassembly:
	0x0376871C LDR X8, [X8 + 0x590]
	0x03768720 LDR X0, [X8]
	0x03768724 BL 0x1C16F10
	0x03768728 MOV X1, X31
	0x0376872C MOV X20, X0
	0x03768730 BL 0x33BDD8C
	0x03768734 MOV X0, X31
	0x03768738 STR W31, [X20 + 0x10]
	0x0376873C BL 0x33C151C
	0x03768740 STR W0, [X20 + 0x28]
	0x03768744 LDR X8, [X19 + 0x38]
	0x03768748 MOV X0, X20
	0x0376874C STR X8, [X20 + 0x30]
	0x03768750 LDP X20, X19, [X31 + 0x10]
	0x03768754 LDR X30, [X31], #0x20
	0x03768758 RET
	0x0376875C B 0x37686C0
	0x03768760 LDR W8, [X0 + 0xC]
	0x03768764 CMP W8, 0x0
	0x03768768 CSET W0, EQ
	0x0376876C RET
	0x03768770 STR X1, [X0]
	0x03768774 STR W31, [X0 + 0x8]
	0x03768778 CBZ X1, 0x3768784
	0x0376877C LDR W8, [X1 + 0x10]
	0x03768780 B 0x3768788
	0x03768784 MOV W8, W31
	0x03768788 STR W8, [X0 + 0xC]
	0x0376878C RET
	0x03768790 STR X30, [X31 - 0x10]!
	0x03768794 STR X1, [X0]
	0x03768798 STR W2, [X0 + 0x8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xC79000
	007 Move X22, 0x9DF000
	008 Move W8, [X21+3714]
	009 Move X22, [X22+1432]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x9DF000
	017 Move X0, [X0+1432]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3714], W8
	021 Move X0, [X22]
	022 Call 0x1C17F10
	023 Move X1, X31
	024 Move X21, X0
	025 Call Object..ctor, X0
	026 Move TEMP, 1
	027 Not TEMP
	028 Move W8, TEMP
	029 Move X0, X31
	030 Move [X21+16], W8
	031 Call Environment.get_CurrentManagedThreadId
	032 Move [X21+32], W0
	033 Move [X21+48], X20
	034 Move [X21+64], X19
	035 Move X0, X21
	036 Move X20, [X31+32]
	037 Move X19, [X31+40]
	038 Move X22, [X31+16]
	039 Move X21, [X31+24]
	040 Move X30, [X31+48]
	041 Return X0

Method: System.String Join(System.String separator, TValue[] values)

Disassembly:
	0x0228DFD8 LDP X8, X1, [X0]
	0x0228DFDC MOV X0, X28
	0x0228DFE0 BLR X8
	0x0228DFE4 MOV X12, X21
	0x0228DFE8 MOV X21, X20
	0x0228DFEC LDUR X20, [X29 - 0x38]
	0x0228DFF0 MOV W14, W27
	0x0228DFF4 LDUR X27, [X29 - 0x28]
	0x0228DFF8 CBNZ X12, 0x228E090
	0x0228DFFC LDUR X28, [X29 - 0x30]
	0x0228E000 CMP W14, 0x6
	0x0228E004 B.EQ 0x228E00C
	0x0228E008 CBNZ W14, 0x228DC64
	0x0228E00C TBZ X22, 0x0, 0x228DD10
	0x0228E010 B 0x228DC64
	0x0228E014 BL 0x1C16F20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+56]
	006 Move X19, X1
	007 Move X20, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {14}
	010 Move X0, X2
	011 Move X21, X2
	012 Call 0x1C5D6E0
	013 Move X8, [X21+56]
	014 Move X2, [X8+8]
	015 Move X0, X19
	016 Move X1, X20
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 Move X30, [X31+32]
	020 Move X21, [X31+40]
	021 Call 0x228DB7C, X0, X1
	022 Return X0

Method: System.String Join(System.Collections.Generic.IEnumerable`1<TValue> values, System.String separator)

Disassembly:
	0x0228DB7C BL 0x1C16CF4
	0x0228DB80 LDR X8, [X19 + 0x38]
	0x0228DB84 CBNZ X8, 0x228DB94
	0x0228DB88 MOV X0, X19
	0x0228DB8C BL 0x1C5C6E0
	0x0228DB90 LDR X8, [X19 + 0x38]
	0x0228DB94 LDR X8, [X8 + 0x28]
	0x0228DB98 LDR W23, [X8 + 0xFC]
	0x0228DB9C ADD X8, X31, 0x0
	0x0228DBA0 ADD X9, X23, 0xF
	0x0228DBA4 AND X9, X9, 0x1FFFFFFFF
	0x0228DBA8 SUB X24, X8, X9
	0x0228DBAC ADD X31, X24, 0x0
	0x0228DBB0 ADD X8, X31, 0x0
	0x0228DBB4 SUB X25, X8, X9
	0x0228DBB8 ADD X31, X25, 0x0
	0x0228DBBC ADD X8, X31, 0x0
	0x0228DBC0 SUB X26, X8, X9
	0x0228DBC4 ADD X31, X26, 0x0
	0x0228DBC8 MOV X0, X26
	0x0228DBCC MOV W1, W31
	0x0228DBD0 MOV X2, X23
	0x0228DBD4 BL 0x3EB1B10
	0x0228DBD8 CBZ X20, 0x228E098
	0x0228DBDC STUR X21, [X29 - 0x48]
	0x0228DBE0 CBZ X28, 0x228DC60
	0x0228DBE4 LDUR X21, [X29 - 0x28]
	0x0228DBE8 CBZ X21, 0x228E0D4
	0x0228DBEC MOV X0, X21
	0x0228DBF0 MOV X1, X31
	0x0228DBF4 BL 0x322B5E4
	0x0228DBF8 LDR W22, [X21 + 0x10]
	0x0228DBFC MOV X27, X0
	0x0228DC00 STUR X28, [X29 - 0x30]
	0x0228DC04 CMP W22, 0x1
	0x0228DC08 B.LT 0x228DC9C
	0x0228DC0C ADRP X28, 0x1E68000
	0x0228DC10 LDR X28, [X28 + 0x170]
	0x0228DC14 SUBS W22, W22, 0x1
	0x0228DC18 B.LT 0x228DCAC
	0x0228DC1C MOV X0, X21
	0x0228DC20 MOV W1, W22
	0x0228DC24 MOV X2, X31
	0x0228DC28 BL 0x3222A1C
	0x0228DC2C LDR X8, [X28]
	0x0228DC30 MOV W21, W0
	0x0228DC34 LDR W9, [X8 + 0xE0]
	0x0228DC38 CBNZ W9, 0x228DC44
	0x0228DC3C MOV X0, X8
	0x0228DC40 BL 0x1C16DFC
	0x0228DC44 MOV W0, W21
	0x0228DC48 MOV X1, X31
	0x0228DC4C BL 0x33141B4
	0x0228DC50 LDUR X21, [X29 - 0x28]
	0x0228DC54 TBNZ X0, 0x0, 0x228DC14
	0x0228DC58 ADD W21, W22, 0x1
	0x0228DC5C B 0x228DCB0
	0x0228DC60 LDUR X21, [X29 - 0x28]
	0x0228DC64 LDUR X8, [X29 - 0x48]
	0x0228DC68 LDR X8, [X8 + 0x28]
	0x0228DC6C LDUR X9, [X29 - 0x8]
	0x0228DC70 CMP X8, X9
	0x0228DC74 B.NE 0x228E0E4
	0x0228DC78 MOV X0, X21
	0x0228DC7C ADD X31, X29, 0x0
	0x0228DC80 LDP X20, X19, [X31 + 0x50]
	0x0228DC84 LDP X22, X21, [X31 + 0x40]
	0x0228DC88 LDP X24, X23, [X31 + 0x30]
	0x0228DC8C LDP X26, X25, [X31 + 0x20]
	0x0228DC90 LDP X28, X27, [X31 + 0x10]
	0x0228DC94 LDP X29, X30, [X31], #0x60
	0x0228DC98 RET
	0x0228DC9C MOVZ W8, 0x1
	0x0228DCA0 STUR W8, [X29 - 0x1C]
	0x0228DCA4 STUR X21, [X29 - 0x40]
	0x0228DCA8 B 0x228DD0C
	0x0228DCAC MOV W21, W31
	0x0228DCB0 LDP X28, X22, [X29 - 0x30]
	0x0228DCB4 LDR W8, [X22 + 0x10]
	0x0228DCB8 CMP W21, W8
	0x0228DCBC B.NE 0x228DCD0
	0x0228DCC0 MOVZ W8, 0x1
	0x0228DCC4 STUR W8, [X29 - 0x1C]
	0x0228DCC8 STUR X22, [X29 - 0x40]
	0x0228DCCC B 0x228DD08
	0x0228DCD0 MOV X0, X22
	0x0228DCD4 MOV W1, W21
	0x0228DCD8 MOV X2, X31
	0x0228DCDC BL 0x322B484
	0x0228DCE0 MOV X1, X31
	0x0228DCE4 BL 0x337BA10
	0x0228DCE8 ADD W8, W0, 0x1
	0x0228DCEC MOV X0, X22
	0x0228DCF0 MOV W1, W31
	0x0228DCF4 MOV W2, W21
	0x0228DCF8 MOV X3, X31
	0x0228DCFC STUR W8, [X29 - 0x1C]
	0x0228DD00 BL 0x3228DE4
	0x0228DD04 STUR X0, [X29 - 0x40]
	0x0228DD08 MOV X21, X22
	0x0228DD0C STUR X20, [X29 - 0x38]
	0x0228DD10 LDR X8, [X19 + 0x38]
	0x0228DD14 LDR X1, [X8 + 0x8]
	0x0228DD18 LDRB W8, [X1 + 0x135]
	0x0228DD1C TBNZ X8, 0x0, 0x228DD2C
	0x0228DD20 MOV X0, X1
	0x0228DD24 BL 0x1C5C684
	0x0228DD28 MOV X1, X0
	0x0228DD2C LDR X8, [X28]
	0x0228DD30 LDRH W9, [X8 + 0x12E]
	0x0228DD34 CBZ X9, 0x228DD58
	0x0228DD38 LDR X10, [X8 + 0xB0]
	0x0228DD3C ADD X10, X10, 0x8
	0x0228DD40 LDUR X11, [X10 - 0x8]
	0x0228DD44 CMP X11, X1
	0x0228DD48 B.EQ 0x228DD68
	0x0228DD4C SUBS X9, X9, 0x1
	0x0228DD50 ADD X10, X10, 0x10
	0x0228DD54 B.NE 0x228DD40
	0x0228DD58 MOV X0, X28
	0x0228DD5C MOV W2, W31
	0x0228DD60 BL 0x1C5C788
	0x0228DD64 B 0x228DD74
	0x0228DD68 LDRSW X9, [X10]
	0x0228DD6C ADD X8, X8, X9, 0x4, LSL
	0x0228DD70 ADD X0, X8, 0x138
	0x0228DD74 LDP X8, X1, [X0]
	0x0228DD78 MOV X0, X28
	0x0228DD7C BLR X8
	0x0228DD80 MOV X28, X0
	0x0228DD84 CBZ X0, 0x228E01C
	0x0228DD88 LDR X8, [X28]
	0x0228DD8C ADRP X10, 0x1E66000
	0x0228DD90 LDRH W9, [X8 + 0x12E]
	0x0228DD94 LDR X10, [X10 + 0xE18]
	0x0228DD98 LDR X1, [X10]
	0x0228DD9C CBZ X9, 0x228DDC0
	0x0228DDA0 LDR X10, [X8 + 0xB0]
	0x0228DDA4 ADD X10, X10, 0x8
	0x0228DDA8 LDUR X11, [X10 - 0x8]
	0x0228DDAC CMP X11, X1
	0x0228DDB0 B.EQ 0x228DDD0
	0x0228DDB4 SUBS X9, X9, 0x1
	0x0228DDB8 ADD X10, X10, 0x10
	0x0228DDBC B.NE 0x228DDA8
	0x0228DDC0 MOV X0, X28
	0x0228DDC4 MOV W2, W31
	0x0228DDC8 BL 0x1C5C788
	0x0228DDCC B 0x228DDDC
	0x0228DDD0 LDRSW X9, [X10]
	0x0228DDD4 ADD X8, X8, X9, 0x4, LSL
	0x0228DDD8 ADD X0, X8, 0x138
	0x0228DDDC LDP X8, X1, [X0]
	0x0228DDE0 MOV X0, X28
	0x0228DDE4 BLR X8
	0x0228DDE8 TBZ X0, 0x0, 0x228DF58
	0x0228DDEC LDR X8, [X19 + 0x38]
	0x0228DDF0 LDR X1, [X8 + 0x18]
	0x0228DDF4 LDRB W8, [X1 + 0x135]
	0x0228DDF8 TBNZ X8, 0x0, 0x228DE08
	0x0228DDFC MOV X0, X1
	0x0228DE00 BL 0x1C5C684
	0x0228DE04 MOV X1, X0
	0x0228DE08 LDR X8, [X28]
	0x0228DE0C LDRH W9, [X8 + 0x12E]
	0x0228DE10 CBZ X9, 0x228DE34
	0x0228DE14 LDR X10, [X8 + 0xB0]
	0x0228DE18 ADD X10, X10, 0x8
	0x0228DE1C LDUR X11, [X10 - 0x8]
	0x0228DE20 CMP X11, X1
	0x0228DE24 B.EQ 0x228DE44
	0x0228DE28 SUBS X9, X9, 0x1
	0x0228DE2C ADD X10, X10, 0x10
	0x0228DE30 B.NE 0x228DE1C
	0x0228DE34 MOV X0, X28
	0x0228DE38 MOV W2, W31
	0x0228DE3C BL 0x1C5C788
	0x0228DE40 B 0x228DE50
	0x0228DE44 LDRSW X9, [X10]
	0x0228DE48 ADD X8, X8, X9, 0x4, LSL
	0x0228DE4C ADD X0, X8, 0x138
	0x0228DE50 STUR X24, [X29 - 0x18]
	0x0228DE54 LDR X1, [X0 + 0x8]
	0x0228DE58 LDP X0, X8, [X1 + 0x8]
	0x0228DE5C SUB X3, X29, 0x18
	0x0228DE60 MOV X2, X28
	0x0228DE64 MOV X4, X24
	0x0228DE68 BLR X8
	0x0228DE6C MOV X0, X26
	0x0228DE70 MOV X1, X24
	0x0228DE74 MOV X2, X23
	0x0228DE78 BL 0x3EB1AC0
	0x0228DE7C MOV X0, X25
	0x0228DE80 MOV X1, X26
	0x0228DE84 MOV X2, X23
	0x0228DE88 BL 0x3EB1AC0
	0x0228DE8C LDR X8, [X19 + 0x38]
	0x0228DE90 LDR X9, [X8 + 0x28]
	0x0228DE94 LDR W10, [X9 + 0x28]
	0x0228DE98 MOV X9, X25
	0x0228DE9C TBNZ X10, 0x1F, 0x228DEA4
	0x0228DEA0 LDR X9, [X25]
	0x0228DEA4 LDR X1, [X8 + 0x30]
	0x0228DEA8 LDR X0, [X1]
	0x0228DEAC STUR X9, [X29 - 0x18]
	0x0228DEB0 LDR X8, [X1 + 0x10]
	0x0228DEB4 SUB X3, X29, 0x18
	0x0228DEB8 SUB X4, X29, 0x10
	0x0228DEBC MOV X2, X20
	0x0228DEC0 BLR X8
	0x0228DEC4 LDUR X0, [X29 - 0x10]
	0x0228DEC8 CBZ X0, 0x228E014
	0x0228DECC MOV X1, X31
	0x0228DED0 BL 0x322B5E4
	0x0228DED4 MOV X1, X27
	0x0228DED8 MOV X2, X31
	0x0228DEDC BL 0x321BA08
	0x0228DEE0 TBZ X0, 0x0, 0x228DD88
	0x0228DEE4 ADRP X8, 0x1E66000
	0x0228DEE8 LDR X8, [X8 + 0x758]
	0x0228DEEC MOV X22, X21
	0x0228DEF0 LDR X0, [X8]
	0x0228DEF4 LDUR W8, [X29 - 0x1C]
	0x0228DEF8 STUR W8, [X29 - 0x10]
	0x0228DEFC SUB X1, X29, 0x10
	0x0228DF00 BL 0x1C16E04
	0x0228DF04 ADRP X8, 0x1E8E000
	0x0228DF08 LDR X8, [X8 + 0xA98]
	0x0228DF0C MOV X2, X0
	0x0228DF10 LDR X0, [X8]
	0x0228DF14 LDUR X1, [X29 - 0x40]
	0x0228DF18 MOV X3, X31
	0x0228DF1C BL 0x3227BD4
	0x0228DF20 MOV X21, X0
	0x0228DF24 CBZ X0, 0x228E024
	0x0228DF28 MOV X0, X21
	0x0228DF2C MOV X1, X31
	0x0228DF30 BL 0x322B5E4
	0x0228DF34 LDUR W8, [X29 - 0x1C]
	0x0228DF38 MOV X12, X31
	0x0228DF3C MOV W22, W31
	0x0228DF40 MOVZ W14, 0x6
	0x0228DF44 ADD W8, W8, 0x1
	0x0228DF48 STUR W8, [X29 - 0x1C]
	0x0228DF4C MOV X27, X0
	0x0228DF50 CBNZ X28, 0x228DF68
	0x0228DF54 B 0x228DFF8
	0x0228DF58 MOV X12, X31
	0x0228DF5C MOVZ W22, 0x1
	0x0228DF60 MOVZ W14, 0x6
	0x0228DF64 CBZ X28, 0x228DFF8
	0x0228DF68 LDR X8, [X28]
	0x0228DF6C ADRP X10, 0x1E66000
	0x0228DF70 LDRH W9, [X8 + 0x12E]
	0x0228DF74 LDR X10, [X10 + 0xE00]
	0x0228DF78 STUR X27, [X29 - 0x28]
	0x0228DF7C LDR X1, [X10]
	0x0228DF80 CBZ X9, 0x228DFA4
	0x0228DF84 LDR X10, [X8 + 0xB0]
	0x0228DF88 ADD X10, X10, 0x8
	0x0228DF8C LDUR X11, [X10 - 0x8]
	0x0228DF90 CMP X11, X1
	0x0228DF94 B.EQ 0x228DFC0
	0x0228DF98 SUBS X9, X9, 0x1
	0x0228DF9C ADD X10, X10, 0x10
	0x0228DFA0 B.NE 0x228DF8C
	0x0228DFA4 MOV X0, X28
	0x0228DFA8 MOV W2, W31
	0x0228DFAC MOV W27, W14
	0x0228DFB0 MOV X20, X21
	0x0228DFB4 MOV X21, X12
	0x0228DFB8 BL 0x1C5C788
	0x0228DFBC B 0x228DFD8
	0x0228DFC0 LDRSW X9, [X10]
	0x0228DFC4 MOV W27, W14
	0x0228DFC8 MOV X20, X21
	0x0228DFCC MOV X21, X12
	0x0228DFD0 ADD X8, X8, X9, 0x4, LSL
	0x0228DFD4 ADD X0, X8, 0x138

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X8, [X2+56]
	013 Move X22, X2
	014 Move X23, X1
	015 Move X19, X0
	016 Compare X8, 0
	017 JumpIfNotEqual {32}
	018 Move X0, 0x1E67000
	019 Move X0, [X0+3584]
	020 Call 0x1C17CF4
	021 Move X0, 0x1E67000
	022 Move X0, [X0+3608]
	023 Call 0x1C17CF4
	024 Move X0, 0x1E67000
	025 Move X0, [X0+2288]
	026 Call 0x1C17CF4
	027 Move X8, [X22+56]
	028 Compare X8, 0
	029 JumpIfNotEqual {32}
	030 Move X0, X22
	031 Call 0x1C5D6E0
	032 Compare X19, 0
	033 JumpIfEqual {240}
	034 Move X8, [X22+56]
	035 Move X1, [X8]
	036 Move W8, [X1+309]
	037 Move TEMP, X8
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfEqual {44}
	041 Move X0, X1
	042 Call 0x1C5D684
	043 Move X1, X0
	044 Move X8, [X19]
	045 NotImplemented "Instruction LDRH not yet implemented."
	046 Compare X9, 0
	047 JumpIfEqual {54}
	048 Move X10, [X8+176]
	049 Add X10, X10, 8
	050 NotImplemented "Instruction LDUR not yet implemented."
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Subtract X9, X9, 1
	053 Add X10, X10, 16
	054 Move X0, X19
	055 Move W2, W31
	056 Call 0x1C5D788
	057 NotImplemented "Instruction LDRSW not yet implemented."
	058 Add X8, X8, X9
	059 Add X0, X8, 312
	060 Move X8, [X0]
	061 Move X1, [X0+8]
	062 Move X0, X19
	063 NotImplemented "Instruction BLR not yet implemented."
	064 Move X27, 0x1E67000
	065 Move X28, 0x1E67000
	066 Move X27, [X27+3608]
	067 Move X28, [X28+2288]
	068 Move X19, X0
	069 Move X21, X31
	070 Move W25, W31
	071 Move X20, X31
	072 Move X24, X20
	073 Move X20, X24
	074 Move W26, W25
	075 Compare X19, 0
	076 JumpIfEqual {239}
	077 Move X8, [X19]
	078 Move X1, [X27]
	079 NotImplemented "Instruction LDRH not yet implemented."
	080 Compare X9, 0
	081 JumpIfEqual {88}
	082 Move X10, [X8+176]
	083 Add X10, X10, 8
	084 NotImplemented "Instruction LDUR not yet implemented."
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Subtract X9, X9, 1
	087 Add X10, X10, 16
	088 Move X0, X19
	089 Move W2, W31
	090 Call 0x1C5D788
	091 NotImplemented "Instruction LDRSW not yet implemented."
	092 Add X8, X8, X9
	093 Add X0, X8, 312
	094 Move X8, [X0]
	095 Move X1, [X0+8]
	096 Move X0, X19
	097 NotImplemented "Instruction BLR not yet implemented."
	098 Move TEMP, X0
	099 And TEMP, TEMP, 1
	100 Compare TEMP, 1
	101 JumpIfNotEqual {172}
	102 Move X8, [X22+56]
	103 Move X1, [X8+16]
	104 Move W8, [X1+309]
	105 Move TEMP, X8
	106 And TEMP, TEMP, 1
	107 Compare TEMP, 1
	108 JumpIfEqual {112}
	109 Move X0, X1
	110 Call 0x1C5D684
	111 Move X1, X0
	112 Move X8, [X19]
	113 NotImplemented "Instruction LDRH not yet implemented."
	114 Compare X9, 0
	115 JumpIfEqual {122}
	116 Move X10, [X8+176]
	117 Add X10, X10, 8
	118 NotImplemented "Instruction LDUR not yet implemented."
	119 NotImplemented "Instruction CMP not yet implemented."
	120 Subtract X9, X9, 1
	121 Add X10, X10, 16
	122 Move X0, X19
	123 Move W2, W31
	124 Call 0x1C5D788
	125 NotImplemented "Instruction LDRSW not yet implemented."
	126 Add X8, X8, X9
	127 Add X0, X8, 312
	128 Move X8, [X0]
	129 Move X1, [X0+8]
	130 Move X0, X19
	131 NotImplemented "Instruction BLR not yet implemented."
	132 Compare X0, 0
	133 JumpIfEqual {77}
	134 Move X8, [X0]
	135 Move X9, [X8+360]
	136 Move X1, [X8+368]
	137 NotImplemented "Instruction BLR not yet implemented."
	138 Move X24, X0
	139 Move X1, X31
	140 Call String.IsNullOrEmpty, X0
	141 Move TEMP, X0
	142 And TEMP, TEMP, 1
	143 Compare TEMP, 1
	144 JumpIfEqual {77}
	145 Move W25, 1
	146 Compare W26, 0
	147 JumpIfEqual {73}
	148 NotImplemented "Instruction CMP not yet implemented."
	149 Move X0, [X28]
	150 Call 0x1C17F10
	151 Move X25, X0
	152 Move X1, X31
	153 Call StringBuilder..ctor, X0
	154 Compare X25, 0
	155 JumpIfEqual {244}
	156 Move X0, X25
	157 Move X1, X20
	158 Move X2, X31
	159 Call StringBuilder.Append, X0, X1
	160 Move X21, X25
	161 Add W25, W26, 1
	162 Compare X21, 0
	163 JumpIfEqual {243}
	164 Move X0, X21
	165 Move X1, X23
	166 Move X2, X31
	167 Call StringBuilder.Append, X0, X1
	168 Move X0, X21
	169 Move X1, X24
	170 Move X2, X31
	171 Call StringBuilder.Append, X0, X1
	172 Move X23, X31
	173 Move W22, 6
	174 Compare X19, 0
	175 JumpIfEqual {199}
	176 Move X10, 0x1E67000
	177 Move X8, [X19]
	178 Move X10, [X10+3584]
	179 NotImplemented "Instruction LDRH not yet implemented."
	180 Move X1, [X10]
	181 Compare X9, 0
	182 JumpIfEqual {189}
	183 Move X10, [X8+176]
	184 Add X10, X10, 8
	185 NotImplemented "Instruction LDUR not yet implemented."
	186 NotImplemented "Instruction CMP not yet implemented."
	187 Subtract X9, X9, 1
	188 Add X10, X10, 16
	189 Move X0, X19
	190 Move W2, W31
	191 Call 0x1C5D788
	192 NotImplemented "Instruction LDRSW not yet implemented."
	193 Add X8, X8, X9
	194 Add X0, X8, 312
	195 Move X8, [X0]
	196 Move X1, [X0+8]
	197 Move X0, X19
	198 NotImplemented "Instruction BLR not yet implemented."
	199 Compare X23, 0
	200 JumpIfNotEqual {241}
	201 NotImplemented "Instruction CMP not yet implemented."
	202 Compare W22, 0
	203 JumpIfNotEqual {226}
	204 Compare W26, 0
	205 JumpIfEqual {225}
	206 NotImplemented "Instruction CMP not yet implemented."
	207 Compare X21, 0
	208 JumpIfEqual {240}
	209 Move X8, [X21]
	210 Move X0, X21
	211 Move X20, [X31+80]
	212 Move X19, [X31+88]
	213 Move X22, [X31+64]
	214 Move X21, [X31+72]
	215 Move X2, [X8+360]
	216 Move X1, [X8+368]
	217 Move X24, [X31+48]
	218 Move X23, [X31+56]
	219 Move X26, [X31+32]
	220 Move X25, [X31+40]
	221 Move X28, [X31+16]
	222 Move X27, [X31+24]
	223 Move X30, [X31+96]
	224 CallNoReturn X2
	225 Move X20, X31
	226 Move X0, X20
	227 Move X20, [X31+80]
	228 Move X19, [X31+88]
	229 Move X22, [X31+64]
	230 Move X21, [X31+72]
	231 Move X24, [X31+48]
	232 Move X23, [X31+56]
	233 Move X26, [X31+32]
	234 Move X25, [X31+40]
	235 Move X28, [X31+16]
	236 Move X27, [X31+24]
	237 Move X30, [X31+96]
	238 Return X0
	239 Call 0x1C17F20
	240 Call 0x1C17F20
	241 Move X0, X23
	242 Call 0x1C17F18
	243 Call 0x1C17F20
	244 Call 0x1C17F20
	245 Move X22, X0
	246 Move X21, X31
	247 Move X22, X0
	248 Move W26, 2
	249 Move X21, X25
	250 Move X22, X0
	251 Move W26, 2
	252 Move X22, X0
	253 Move X21, X31
	254 Move X22, X0
	255 Move W26, W25
	256 Move X22, X0
	257 Move X20, X31
	258 Move X21, X31
	259 Move W26, W31
	260 Move X22, X0
	261 NotImplemented "Instruction CMP not yet implemented."
	262 Move X0, X22
	263 Call 0x3EB2AD0
	264 Move X23, [X0]
	265 Call 0x3EB2AE0
	266 Move W22, W31
	267 Compare X19, 0
	268 JumpIfNotEqual {176}
	269 Move X23, X31
	270 Move X22, X0
	271 Compare X19, 0
	272 JumpIfEqual {296}
	273 Move X10, 0x1E67000
	274 Move X8, [X19]
	275 Move X10, [X10+3584]
	276 NotImplemented "Instruction LDRH not yet implemented."
	277 Move X1, [X10]
	278 Compare X9, 0
	279 JumpIfEqual {286}
	280 Move X10, [X8+176]
	281 Add X10, X10, 8
	282 NotImplemented "Instruction LDUR not yet implemented."
	283 NotImplemented "Instruction CMP not yet implemented."
	284 Subtract X9, X9, 1
	285 Add X10, X10, 16
	286 Move X0, X19
	287 Move W2, W31
	288 Call 0x1C5D788
	289 NotImplemented "Instruction LDRSW not yet implemented."
	290 Add X8, X8, X9
	291 Add X0, X8, 312
	292 Move X8, [X0]
	293 Move X1, [X0+8]
	294 Move X0, X19
	295 NotImplemented "Instruction BLR not yet implemented."
	296 Compare X23, 0
	297 JumpIfNotEqual {300}
	298 Move X0, X22
	299 Call 0x1D2D690
	300 Move X0, X23
	301 Call 0x1C17F18
	302 Call 0x1991590

Method: System.String MakeUniqueName(System.String baseName, System.Collections.Generic.IEnumerable`1<TExisting> existingSet, System.Func`2<TExisting, System.String> getNameFunc)

Disassembly:
	0x0228E5E8 BL 0x1C16D08
	0x0228E5EC BL 0x1C16F10
	0x0228E5F0 MOV X20, X0
	0x0228E5F4 ADRP X0, 0x1E8E000
	0x0228E5F8 LDR X0, [X0 + 0x6D0]
	0x0228E5FC BL 0x1C16D08
	0x0228E600 MOV X1, X0
	0x0228E604 MOV X0, X20
	0x0228E608 MOV X2, X31
	0x0228E60C BL 0x330E100
	0x0228E610 MOV X0, X20
	0x0228E614 MOV X1, X19
	0x0228E618 BL 0x1C16DEC
	0x0228E61C BL 0x1C16F20
	0x0228E620 MOV X19, X0
	0x0228E624 MOV X26, X31
	0x0228E628 B 0x228E630
	0x0228E62C MOV X19, X0
	0x0228E630 CBZ X25, 0x228E694
	0x0228E634 LDR X8, [X25]
	0x0228E638 ADRP X10, 0x1E65000
	0x0228E63C LDRH W9, [X8 + 0x12E]
	0x0228E640 LDR X10, [X10 + 0xE00]
	0x0228E644 LDR X1, [X10]
	0x0228E648 CBZ X9, 0x228E66C
	0x0228E64C LDR X10, [X8 + 0xB0]
	0x0228E650 ADD X10, X10, 0x8
	0x0228E654 LDUR X11, [X10 - 0x8]
	0x0228E658 CMP X11, X1
	0x0228E65C B.EQ 0x228E67C
	0x0228E660 SUBS X9, X9, 0x1
	0x0228E664 ADD X10, X10, 0x10
	0x0228E668 B.NE 0x228E654
	0x0228E66C MOV X0, X25
	0x0228E670 MOV W2, W31
	0x0228E674 BL 0x1C5C788
	0x0228E678 B 0x228E688
	0x0228E67C LDRSW X9, [X10]
	0x0228E680 ADD X8, X8, X9, 0x4, LSL
	0x0228E684 ADD X0, X8, 0x138
	0x0228E688 LDP X8, X1, [X0]
	0x0228E68C MOV X0, X25
	0x0228E690 BLR X8
	0x0228E694 CBNZ X26, 0x228E6A0
	0x0228E698 MOV X0, X19
	0x0228E69C BL 0x1D2C690
	0x0228E6A0 MOV X0, X26
	0x0228E6A4 BL 0x1C16F18
	0x0228E6A8 BL 0x1990590
	0x0228E6AC STR D8, [X31 - 0x20]!
	0x0228E6B0 STR X30, [X31 + 0x8]
	0x0228E6B4 STP X20, X19, [X31 + 0x10]
	0x0228E6B8 LDR X8, [X1 + 0x38]
	0x0228E6BC MOV X20, X1
	0x0228E6C0 MOV V8.16B, V0.16B
	0x0228E6C4 MOV X19, X0
	0x0228E6C8 CBNZ X8, 0x228E6EC
	0x0228E6CC ADRP X0, 0x1E8E000
	0x0228E6D0 LDR X0, [X0 + 0x6D8]
	0x0228E6D4 BL 0x1C16CF4
	0x0228E6D8 LDR X8, [X20 + 0x38]
	0x0228E6DC CBNZ X8, 0x228E6EC
	0x0228E6E0 MOV X0, X20
	0x0228E6E4 BL 0x1C5C6E0
	0x0228E6E8 LDR X8, [X20 + 0x38]
	0x0228E6EC LDR X1, [X8]
	0x0228E6F0 MOV X0, X19
	0x0228E6F4 BL 0x228EC74
	0x0228E6F8 CBZ X0, 0x228E788
	0x0228E6FC LDR X8, [X20 + 0x38]
	0x0228E700 MOV V0.16B, V8.16B
	0x0228E704 LDR X1, [X8 + 0x18]
	0x0228E708 BL 0x26660D0
	0x0228E70C LDR X8, [X19 + 0x18]
	0x0228E710 CBZ X8, 0x228E788
	0x0228E714 ADRP X10, 0x1E8E000
	0x0228E718 LDR X10, [X10 + 0x6D8]
	0x0228E71C LDR W11, [X8 + 0x1C]
	0x0228E720 LDR X9, [X8 + 0x10]
	0x0228E724 LDR X10, [X10]
	0x0228E728 ADD W11, W11, 0x1
	0x0228E72C STR W11, [X8 + 0x1C]
	0x0228E730 CBZ X9, 0x228E788
	0x0228E734 LDRSW X11, [X8 + 0x18]
	0x0228E738 LDR W12, [X9 + 0x18]
	0x0228E73C MOV X19, X0
	0x0228E740 CMP W11, W12
	0x0228E744 B.CS 0x228E75C
	0x0228E748 ADD W10, W11, 0x1
	0x0228E74C ADD X9, X9, X11, 0x3, LSL
	0x0228E750 STR W10, [X8 + 0x18]
	0x0228E754 STR X19, [X9 + 0x20]
	0x0228E758 B 0x228E774
	0x0228E75C LDR X9, [X10 + 0x20]
	0x0228E760 MOV X0, X8
	0x0228E764 MOV X1, X19
	0x0228E768 LDR X9, [X9 + 0xC0]
	0x0228E76C LDR X2, [X9 + 0x70]
	0x0228E770 BL 0x301BF90
	0x0228E774 MOV X0, X19
	0x0228E778 LDP X20, X19, [X31 + 0x10]
	0x0228E77C LDR X30, [X31 + 0x8]
	0x0228E780 LDR V8, [X31], #0x20
	0x0228E784 RET
	0x0228E788 BL 0x1C16F20
	0x0228E78C STP X30, X21, [X31 - 0x20]!
	0x0228E790 STP X20, X19, [X31 + 0x10]
	0x0228E794 LDR X8, [X2 + 0x38]
	0x0228E798 MOV X21, X2
	0x0228E79C MOV W20, W1
	0x0228E7A0 MOV X19, X0
	0x0228E7A4 CBNZ X8, 0x228E7C8
	0x0228E7A8 ADRP X0, 0x1E8E000
	0x0228E7AC LDR X0, [X0 + 0x6D8]
	0x0228E7B0 BL 0x1C16CF4
	0x0228E7B4 LDR X8, [X21 + 0x38]
	0x0228E7B8 CBNZ X8, 0x228E7C8
	0x0228E7BC MOV X0, X21
	0x0228E7C0 BL 0x1C5C6E0
	0x0228E7C4 LDR X8, [X21 + 0x38]
	0x0228E7C8 LDR X1, [X8]
	0x0228E7CC MOV X0, X19
	0x0228E7D0 BL 0x228EE00
	0x0228E7D4 CBZ X0, 0x228E860
	0x0228E7D8 LDR X8, [X21 + 0x38]
	0x0228E7DC MOV W1, W20
	0x0228E7E0 LDR X2, [X8 + 0x18]
	0x0228E7E4 BL 0x2666324
	0x0228E7E8 LDR X8, [X19 + 0x18]
	0x0228E7EC CBZ X8, 0x228E860
	0x0228E7F0 ADRP X10, 0x1E8E000
	0x0228E7F4 LDR X10, [X10 + 0x6D8]
	0x0228E7F8 LDR W11, [X8 + 0x1C]
	0x0228E7FC LDR X9, [X8 + 0x10]
	0x0228E800 LDR X10, [X10]
	0x0228E804 ADD W11, W11, 0x1
	0x0228E808 STR W11, [X8 + 0x1C]
	0x0228E80C CBZ X9, 0x228E860
	0x0228E810 LDRSW X11, [X8 + 0x18]
	0x0228E814 LDR W12, [X9 + 0x18]
	0x0228E818 MOV X19, X0
	0x0228E81C CMP W11, W12
	0x0228E820 B.CS 0x228E838
	0x0228E824 ADD W10, W11, 0x1
	0x0228E828 ADD X9, X9, X11, 0x3, LSL
	0x0228E82C STR W10, [X8 + 0x18]
	0x0228E830 STR X19, [X9 + 0x20]
	0x0228E834 B 0x228E850
	0x0228E838 LDR X9, [X10 + 0x20]
	0x0228E83C MOV X0, X8
	0x0228E840 MOV X1, X19
	0x0228E844 LDR X9, [X9 + 0xC0]
	0x0228E848 LDR X2, [X9 + 0x70]
	0x0228E84C BL 0x301BF90
	0x0228E850 MOV X0, X19
	0x0228E854 LDP X20, X19, [X31 + 0x10]
	0x0228E858 LDP X30, X21, [X31], #0x20
	0x0228E85C RET
	0x0228E860 BL 0x1C16F20
	0x0228E864 STP X30, X21, [X31 - 0x20]!
	0x0228E868 STP X20, X19, [X31 + 0x10]
	0x0228E86C LDR X8, [X2 + 0x38]
	0x0228E870 MOV X21, X2
	0x0228E874 MOV W20, W1
	0x0228E878 MOV X19, X0
	0x0228E87C CBNZ X8, 0x228E8A0
	0x0228E880 ADRP X0, 0x1E8E000
	0x0228E884 LDR X0, [X0 + 0x6D8]
	0x0228E888 BL 0x1C16CF4
	0x0228E88C LDR X8, [X21 + 0x38]
	0x0228E890 CBNZ X8, 0x228E8A0
	0x0228E894 MOV X0, X21
	0x0228E898 BL 0x1C5C6E0
	0x0228E89C LDR X8, [X21 + 0x38]
	0x0228E8A0 LDR X1, [X8]
	0x0228E8A4 MOV X0, X19
	0x0228E8A8 BL 0x228EF8C
	0x0228E8AC CBZ X0, 0x228E938
	0x0228E8B0 LDR X8, [X21 + 0x38]
	0x0228E8B4 MOV W1, W20
	0x0228E8B8 LDR X2, [X8 + 0x18]
	0x0228E8BC BL 0x2666570
	0x0228E8C0 LDR X8, [X19 + 0x18]
	0x0228E8C4 CBZ X8, 0x228E938
	0x0228E8C8 ADRP X10, 0x1E8E000
	0x0228E8CC LDR X10, [X10 + 0x6D8]
	0x0228E8D0 LDR W11, [X8 + 0x1C]
	0x0228E8D4 LDR X9, [X8 + 0x10]
	0x0228E8D8 LDR X10, [X10]
	0x0228E8DC ADD W11, W11, 0x1
	0x0228E8E0 STR W11, [X8 + 0x1C]
	0x0228E8E4 CBZ X9, 0x228E938
	0x0228E8E8 LDRSW X11, [X8 + 0x18]
	0x0228E8EC LDR W12, [X9 + 0x18]
	0x0228E8F0 MOV X19, X0
	0x0228E8F4 CMP W11, W12
	0x0228E8F8 B.CS 0x228E910
	0x0228E8FC ADD W10, W11, 0x1
	0x0228E900 ADD X9, X9, X11, 0x3, LSL
	0x0228E904 STR W10, [X8 + 0x18]
	0x0228E908 STR X19, [X9 + 0x20]
	0x0228E90C B 0x228E928
	0x0228E910 LDR X9, [X10 + 0x20]
	0x0228E914 MOV X0, X8
	0x0228E918 MOV X1, X19
	0x0228E91C LDR X9, [X9 + 0xC0]
	0x0228E920 LDR X2, [X9 + 0x70]
	0x0228E924 BL 0x301BF90
	0x0228E928 MOV X0, X19
	0x0228E92C LDP X20, X19, [X31 + 0x10]
	0x0228E930 LDP X30, X21, [X31], #0x20
	0x0228E934 RET
	0x0228E938 BL 0x1C16F20
	0x0228E93C STP X30, X21, [X31 - 0x20]!
	0x0228E940 STP X20, X19, [X31 + 0x10]
	0x0228E944 LDR X8, [X2 + 0x38]
	0x0228E948 MOV X21, X2
	0x0228E94C MOV X20, X1
	0x0228E950 MOV X19, X0
	0x0228E954 CBNZ X8, 0x228E978
	0x0228E958 ADRP X0, 0x1E8E000
	0x0228E95C LDR X0, [X0 + 0x6D8]
	0x0228E960 BL 0x1C16CF4
	0x0228E964 LDR X8, [X21 + 0x38]
	0x0228E968 CBNZ X8, 0x228E978
	0x0228E96C MOV X0, X21
	0x0228E970 BL 0x1C5C6E0
	0x0228E974 LDR X8, [X21 + 0x38]
	0x0228E978 LDR X1, [X8]
	0x0228E97C MOV X0, X19
	0x0228E980 BL 0x228F118
	0x0228E984 CBZ X0, 0x228EA10
	0x0228E988 LDR X8, [X21 + 0x38]
	0x0228E98C MOV X1, X20
	0x0228E990 LDR X2, [X8 + 0x18]
	0x0228E994 BL 0x26667BC
	0x0228E998 LDR X8, [X19 + 0x18]
	0x0228E99C CBZ X8, 0x228EA10
	0x0228E9A0 ADRP X10, 0x1E8E000
	0x0228E9A4 LDR X10, [X10 + 0x6D8]
	0x0228E9A8 LDR W11, [X8 + 0x1C]
	0x0228E9AC LDR X9, [X8 + 0x10]
	0x0228E9B0 LDR X10, [X10]
	0x0228E9B4 ADD W11, W11, 0x1
	0x0228E9B8 STR W11, [X8 + 0x1C]
	0x0228E9BC CBZ X9, 0x228EA10
	0x0228E9C0 LDRSW X11, [X8 + 0x18]
	0x0228E9C4 LDR W12, [X9 + 0x18]
	0x0228E9C8 MOV X19, X0
	0x0228E9CC CMP W11, W12
	0x0228E9D0 B.CS 0x228E9E8
	0x0228E9D4 ADD W10, W11, 0x1
	0x0228E9D8 ADD X9, X9, X11, 0x3, LSL
	0x0228E9DC STR W10, [X8 + 0x18]
	0x0228E9E0 STR X19, [X9 + 0x20]
	0x0228E9E4 B 0x228EA00
	0x0228E9E8 LDR X9, [X10 + 0x20]
	0x0228E9EC MOV X0, X8
	0x0228E9F0 MOV X1, X19
	0x0228E9F4 LDR X9, [X9 + 0xC0]
	0x0228E9F8 LDR X2, [X9 + 0x70]
	0x0228E9FC BL 0x301BF90
	0x0228EA00 MOV X0, X19
	0x0228EA04 LDP X20, X19, [X31 + 0x10]
	0x0228EA08 LDP X30, X21, [X31], #0x20
	0x0228EA0C RET
	0x0228EA10 BL 0x1C16F20
	0x0228EA14 STR D8, [X31 - 0x20]!
	0x0228EA18 STR X30, [X31 + 0x8]
	0x0228EA1C STP X20, X19, [X31 + 0x10]
	0x0228EA20 LDR X8, [X1 + 0x38]
	0x0228EA24 MOV X20, X1
	0x0228EA28 MOV V8.16B, V0.16B
	0x0228EA2C MOV X19, X0
	0x0228EA30 CBNZ X8, 0x228EA54
	0x0228EA34 ADRP X0, 0x1E8E000
	0x0228EA38 LDR X0, [X0 + 0x6D8]
	0x0228EA3C BL 0x1C16CF4
	0x0228EA40 LDR X8, [X20 + 0x38]
	0x0228EA44 CBNZ X8, 0x228EA54
	0x0228EA48 MOV X0, X20
	0x0228EA4C BL 0x1C5C6E0
	0x0228EA50 LDR X8, [X20 + 0x38]
	0x0228EA54 LDR X1, [X8]
	0x0228EA58 MOV X0, X19
	0x0228EA5C BL 0x228F2A4
	0x0228EA60 CBZ X0, 0x228EAF0
	0x0228EA64 LDR X8, [X20 + 0x38]
	0x0228EA68 MOV V0.16B, V8.16B
	0x0228EA6C LDR X1, [X8 + 0x18]
	0x0228EA70 BL 0x2666EC0
	0x0228EA74 LDR X8, [X19 + 0x18]
	0x0228EA78 CBZ X8, 0x228EAF0
	0x0228EA7C ADRP X10, 0x1E8E000
	0x0228EA80 LDR X10, [X10 + 0x6D8]
	0x0228EA84 LDR W11, [X8 + 0x1C]
	0x0228EA88 LDR X9, [X8 + 0x10]
	0x0228EA8C LDR X10, [X10]
	0x0228EA90 ADD W11, W11, 0x1
	0x0228EA94 STR W11, [X8 + 0x1C]
	0x0228EA98 CBZ X9, 0x228EAF0
	0x0228EA9C LDRSW X11, [X8 + 0x18]
	0x0228EAA0 LDR W12, [X9 + 0x18]
	0x0228EAA4 MOV X19, X0
	0x0228EAA8 CMP W11, W12
	0x0228EAAC B.CS 0x228EAC4
	0x0228EAB0 ADD W10, W11, 0x1
	0x0228EAB4 ADD X9, X9, X11, 0x3, LSL
	0x0228EAB8 STR W10, [X8 + 0x18]
	0x0228EABC STR X19, [X9 + 0x20]
	0x0228EAC0 B 0x228EADC
	0x0228EAC4 LDR X9, [X10 + 0x20]
	0x0228EAC8 MOV X0, X8
	0x0228EACC MOV X1, X19
	0x0228EAD0 LDR X9, [X9 + 0xC0]
	0x0228EAD4 LDR X2, [X9 + 0x70]
	0x0228EAD8 BL 0x301BF90
	0x0228EADC MOV X0, X19
	0x0228EAE0 LDP X20, X19, [X31 + 0x10]
	0x0228EAE4 LDR X30, [X31 + 0x8]
	0x0228EAE8 LDR V8, [X31], #0x20
	0x0228EAEC RET
	0x0228EAF0 BL 0x1C16F20
	0x0228EAF4 STP X29, X30, [X31 - 0x50]!
	0x0228EAF8 STR X25, [X31 + 0x10]
	0x0228EAFC STP X24, X23, [X31 + 0x20]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X8, [X3+56]
	015 Move X19, X3
	016 Move X20, X2
	017 Move X21, X1
	018 Move X27, X0
	019 Compare X8, 0
	020 JumpIfNotEqual {41}
	021 Move X0, 0x1E68000
	022 Move X0, [X0+368]
	023 Call 0x1C17CF4
	024 Move X0, 0x1E66000
	025 Move X0, [X0+3584]
	026 Call 0x1C17CF4
	027 Move X0, 0x1E66000
	028 Move X0, [X0+3608]
	029 Call 0x1C17CF4
	030 Move X0, 0x1E66000
	031 Move X0, [X0+1880]
	032 Call 0x1C17CF4
	033 Move X0, 0x1E8E000
	034 Move X0, [X0+2712]
	035 Call 0x1C17CF4
	036 Move X8, [X19+56]
	037 Compare X8, 0
	038 JumpIfNotEqual {41}
	039 Move X0, X19
	040 Call 0x1C5D6E0
	041 Compare X20, 0
	042 JumpIfEqual {293}
	043 Compare X21, 0
	044 JumpIfEqual {276}
	045 Compare X27, 0
	046 JumpIfEqual {308}
	047 Move X0, X27
	048 Move X1, X31
	049 Call String.ToLower, X0
	050 Move W24, [X27+16]
	051 Move X23, X0
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move X22, 0x1E68000
	054 Move X22, [X22+368]
	055 Subtract W24, W24, 1
	056 Move X0, X27
	057 Move W1, W24
	058 Move X2, X31
	059 Call String.get_Chars, X0, X1
	060 Move X8, [X22]
	061 Move W25, W0
	062 Move W9, [X8+224]
	063 Compare W9, 0
	064 JumpIfNotEqual {67}
	065 Move X0, X8
	066 Call 0x1C17DFC
	067 Move W0, W25
	068 Move X1, X31
	069 Call Char.IsDigit, X0
	070 Move TEMP, X0
	071 And TEMP, TEMP, 1
	072 Compare TEMP, 1
	073 JumpIfEqual {55}
	074 Add W24, W24, 1
	075 Move W24, W31
	076 Move W8, [X27+16]
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Move W28, 1
	079 Move [X31], X27
	080 Move X0, X27
	081 Move W1, W24
	082 Move X2, X31
	083 Call String.Substring, X0, X1
	084 Move X1, X31
	085 Call Int32.Parse, X0
	086 Add W28, W0, 1
	087 Move X0, X27
	088 Move W1, W31
	089 Move W2, W24
	090 Move X3, X31
	091 Call String.Substring, X0, X1, X2
	092 Move [X31], X0
	093 Move X29, 0x1E66000
	094 Move X29, [X29+3608]
	095 Move X8, [X19+56]
	096 Move X1, [X8+8]
	097 Move W8, [X1+309]
	098 Move TEMP, X8
	099 And TEMP, TEMP, 1
	100 Compare TEMP, 1
	101 JumpIfEqual {105}
	102 Move X0, X1
	103 Call 0x1C5D684
	104 Move X1, X0
	105 Move X8, [X21]
	106 NotImplemented "Instruction LDRH not yet implemented."
	107 Compare X9, 0
	108 JumpIfEqual {115}
	109 Move X10, [X8+176]
	110 Add X10, X10, 8
	111 NotImplemented "Instruction LDUR not yet implemented."
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Subtract X9, X9, 1
	114 Add X10, X10, 16
	115 Move X0, X21
	116 Move W2, W31
	117 Call 0x1C5D788
	118 NotImplemented "Instruction LDRSW not yet implemented."
	119 Add X8, X8, X9
	120 Add X0, X8, 312
	121 Move X8, [X0]
	122 Move X1, [X0+8]
	123 Move X0, X21
	124 NotImplemented "Instruction BLR not yet implemented."
	125 Move X25, X0
	126 Compare X0, 0
	127 JumpIfEqual {264}
	128 Move X8, [X25]
	129 Move X1, [X29]
	130 NotImplemented "Instruction LDRH not yet implemented."
	131 Compare X9, 0
	132 JumpIfEqual {139}
	133 Move X10, [X8+176]
	134 Add X10, X10, 8
	135 NotImplemented "Instruction LDUR not yet implemented."
	136 NotImplemented "Instruction CMP not yet implemented."
	137 Subtract X9, X9, 1
	138 Add X10, X10, 16
	139 Move X0, X25
	140 Move W2, W31
	141 Call 0x1C5D788
	142 NotImplemented "Instruction LDRSW not yet implemented."
	143 Add X8, X8, X9
	144 Add X0, X8, 312
	145 Move X8, [X0]
	146 Move X1, [X0+8]
	147 Move X0, X25
	148 NotImplemented "Instruction BLR not yet implemented."
	149 Move TEMP, X0
	150 And TEMP, TEMP, 1
	151 Compare TEMP, 1
	152 JumpIfNotEqual {226}
	153 Move X8, [X19+56]
	154 Move X1, [X8+24]
	155 Move W8, [X1+309]
	156 Move TEMP, X8
	157 And TEMP, TEMP, 1
	158 Compare TEMP, 1
	159 JumpIfEqual {163}
	160 Move X0, X1
	161 Call 0x1C5D684
	162 Move X1, X0
	163 Move X8, [X25]
	164 NotImplemented "Instruction LDRH not yet implemented."
	165 Compare X9, 0
	166 JumpIfEqual {173}
	167 Move X10, [X8+176]
	168 Add X10, X10, 8
	169 NotImplemented "Instruction LDUR not yet implemented."
	170 NotImplemented "Instruction CMP not yet implemented."
	171 Subtract X9, X9, 1
	172 Add X10, X10, 16
	173 Move X0, X25
	174 Move W2, W31
	175 Call 0x1C5D788
	176 NotImplemented "Instruction LDRSW not yet implemented."
	177 Add X8, X8, X9
	178 Add X0, X8, 312
	179 Move X8, [X0]
	180 Move X1, [X0+8]
	181 Move X0, X25
	182 NotImplemented "Instruction BLR not yet implemented."
	183 Move X1, X0
	184 Move X0, [X20+64]
	185 Move X8, [X20+24]
	186 Move X2, [X20+40]
	187 NotImplemented "Instruction BLR not yet implemented."
	188 Compare X0, 0
	189 JumpIfEqual {263}
	190 Move X1, X31
	191 Call String.ToLower, X0
	192 Move X1, X23
	193 Move X2, X31
	194 Call String.op_Equality, X0, X1
	195 Move TEMP, X0
	196 And TEMP, TEMP, 1
	197 Compare TEMP, 1
	198 JumpIfNotEqual {128}
	199 Move X8, 0x1E66000
	200 Move X8, [X8+1880]
	201 Move X22, X27
	202 Move [X31+12], W28
	203 Move X0, [X8]
	204 Add X1, X31, 12
	205 Call 0x1C17E04
	206 Move X8, 0x1E8E000
	207 Move X8, [X8+2712]
	208 Move X2, X0
	209 Move X0, [X8]
	210 Move X1, [X31]
	211 Move X3, X31
	212 Call String.Format, X0, X1, X2
	213 Move X27, X0
	214 Compare X0, 0
	215 JumpIfEqual {265}
	216 Move X0, X27
	217 Move X1, X31
	218 Call String.ToLower, X0
	219 Move X26, X31
	220 Move W24, W31
	221 Add W28, W28, 1
	222 Move W22, 6
	223 Move X23, X0
	224 Compare X25, 0
	225 JumpIfNotEqual {231}
	226 Move X26, X31
	227 Move W24, 1
	228 Move W22, 6
	229 Compare X25, 0
	230 JumpIfEqual {254}
	231 Move X8, [X25]
	232 Move X10, 0x1E66000
	233 NotImplemented "Instruction LDRH not yet implemented."
	234 Move X10, [X10+3584]
	235 Move X1, [X10]
	236 Compare X9, 0
	237 JumpIfEqual {244}
	238 Move X10, [X8+176]
	239 Add X10, X10, 8
	240 NotImplemented "Instruction LDUR not yet implemented."
	241 NotImplemented "Instruction CMP not yet implemented."
	242 Subtract X9, X9, 1
	243 Add X10, X10, 16
	244 Move X0, X25
	245 Move W2, W31
	246 Call 0x1C5D788
	247 NotImplemented "Instruction LDRSW not yet implemented."
	248 Add X8, X8, X9
	249 Add X0, X8, 312
	250 Move X8, [X0]
	251 Move X1, [X0+8]
	252 Move X0, X25
	253 NotImplemented "Instruction BLR not yet implemented."
	254 Compare X26, 0
	255 JumpIfNotEqual {291}
	256 NotImplemented "Instruction CMP not yet implemented."
	257 Compare W22, 0
	258 JumpIfNotEqual {276}
	259 Move TEMP, X24
	260 And TEMP, TEMP, 1
	261 Compare TEMP, 1
	262 JumpIfNotEqual {95}
	263 Call 0x1C17F20
	264 Call 0x1C17F20
	265 Call 0x1C17F20
	266 Move X27, X31
	267 Move X27, X22
	268 NotImplemented "Instruction CMP not yet implemented."
	269 Call 0x3EB2AD0
	270 Move X26, [X0]
	271 Call 0x3EB2AE0
	272 Move W22, W31
	273 Move W24, 1
	274 Compare X25, 0
	275 JumpIfNotEqual {231}
	276 Move X0, X27
	277 Move X20, [X31+96]
	278 Move X19, [X31+104]
	279 Move X22, [X31+80]
	280 Move X21, [X31+88]
	281 Move X24, [X31+64]
	282 Move X23, [X31+72]
	283 Move X26, [X31+48]
	284 Move X25, [X31+56]
	285 Move X28, [X31+32]
	286 Move X27, [X31+40]
	287 Move X29, [X31+16]
	288 Move X30, [X31+24]
	289 Add X31, X31, 112
	290 Return X0
	291 Move X0, X26
	292 Call 0x1C17F18
	293 Move X0, 0x1E6B000
	294 Move X0, [X0+1320]
	295 Call 0x1C17D08
	296 Call 0x1C17F10
	297 Move X20, X0
	298 Move X0, 0x1E8F000
	299 Move X0, [X0+1744]
	300 Call 0x1C17D08
	301 Move X1, X0
	302 Move X0, X20
	303 Move X2, X31
	304 Call ArgumentNullException..ctor, X0, X1
	305 Move X0, X20
	306 Move X1, X19
	307 Call 0x1C17DEC
	308 Call 0x1C17F20
	309 Move X19, X0
	310 Move X26, X31
	311 Move X19, X0
	312 Compare X25, 0
	313 JumpIfEqual {337}
	314 Move X8, [X25]
	315 Move X10, 0x1E66000
	316 NotImplemented "Instruction LDRH not yet implemented."
	317 Move X10, [X10+3584]
	318 Move X1, [X10]
	319 Compare X9, 0
	320 JumpIfEqual {327}
	321 Move X10, [X8+176]
	322 Add X10, X10, 8
	323 NotImplemented "Instruction LDUR not yet implemented."
	324 NotImplemented "Instruction CMP not yet implemented."
	325 Subtract X9, X9, 1
	326 Add X10, X10, 16
	327 Move X0, X25
	328 Move W2, W31
	329 Call 0x1C5D788
	330 NotImplemented "Instruction LDRSW not yet implemented."
	331 Add X8, X8, X9
	332 Add X0, X8, 312
	333 Move X8, [X0]
	334 Move X1, [X0+8]
	335 Move X0, X25
	336 NotImplemented "Instruction BLR not yet implemented."
	337 Compare X26, 0
	338 JumpIfNotEqual {341}
	339 Move X0, X19
	340 Call 0x1D2D690
	341 Move X0, X26
	342 Call 0x1C17F18
	343 Call 0x1991590

Method: System.Boolean CharacterSeparatedListsHaveAtLeastOneCommonElement(System.String firstList, System.String secondList, System.Char separator)

Disassembly:
	0x037687D0 TBNZ X8, 0x0, 0x37687F4
	0x037687D4 ADRP X0, 0x98D000
	0x037687D8 LDR X0, [X0 + 0x278]
	0x037687DC BL 0x1C16CF4
	0x037687E0 ADRP X0, 0x9B6000
	0x037687E4 LDR X0, [X0 + 0x798]
	0x037687E8 BL 0x1C16CF4
	0x037687EC MOVZ W8, 0x1
	0x037687F0 STRB W8, [X21 + 0xE8C]
	0x037687F4 CBZ X20, 0x3768824
	0x037687F8 ADRP X8, 0x9B6000
	0x037687FC LDR X8, [X8 + 0x798]
	0x03768800 LDR X9, [X8]
	0x03768804 LDR X8, [X20]
	0x03768808 CMP X8, X9
	0x0376880C B.EQ 0x376882C
	0x03768810 ADRP X9, 0x98D000
	0x03768814 LDR X9, [X9 + 0x278]
	0x03768818 LDR X9, [X9]
	0x0376881C CMP X8, X9
	0x03768820 B.EQ 0x3768858
	0x03768824 MOV W0, W31
	0x03768828 B 0x376884C
	0x0376882C MOV X0, X20
	0x03768830 BL 0x1C16E08
	0x03768834 LDP X2, X3, [X0]
	0x03768838 LDP X0, X1, [X19]
	0x0376883C MOV W4, W31
	0x03768840 BL 0x3768A00
	0x03768844 CMP W0, 0x0
	0x03768848 CSET W0, EQ
	0x0376884C LDP X20, X19, [X31 + 0x10]
	0x03768850 LDP X30, X21, [X31], #0x20
	0x03768854 RET
	0x03768858 MOV X0, X19
	0x0376885C MOV X1, X20
	0x03768860 LDP X20, X19, [X31 + 0x10]
	0x03768864 LDP X30, X21, [X31], #0x20
	0x03768868 B 0x376889C
	0x0376886C STR X30, [X31 - 0x10]!
	0x03768870 LDP X8, X9, [X0]
	0x03768874 MOV X3, X2
	0x03768878 MOV X2, X1
	0x0376887C MOV W4, W31
	0x03768880 MOV X0, X8
	0x03768884 MOV X1, X9
	0x03768888 BL 0x3768A00
	0x0376888C CMP W0, 0x0
	0x03768890 CSET W0, EQ
	0x03768894 LDR X30, [X31], #0x10
	0x03768898 RET
	0x0376889C STR X30, [X31 - 0x30]!
	0x037688A0 STP X22, X21, [X31 + 0x10]
	0x037688A4 STP X20, X19, [X31 + 0x20]
	0x037688A8 MOV X20, X1
	0x037688AC MOV X19, X0
	0x037688B0 MOV X0, X1
	0x037688B4 MOV X1, X31
	0x037688B8 BL 0x32277A8
	0x037688BC TBZ X0, 0x0, 0x37688D0
	0x037688C0 LDR W8, [X19 + 0xC]
	0x037688C4 CMP W8, 0x0
	0x037688C8 CSET W0, EQ
	0x037688CC B 0x3768950
	0x037688D0 CBZ X20, 0x3768960
	0x037688D4 LDR W8, [X20 + 0x10]
	0x037688D8 LDR W9, [X19 + 0xC]
	0x037688DC CMP W8, W9
	0x037688E0 B.NE 0x3768944
	0x037688E4 CMP W8, 0x1
	0x037688E8 B.LT 0x376894C
	0x037688EC MOV W21, W31
	0x037688F0 MOV X0, X20
	0x037688F4 MOV W1, W21
	0x037688F8 MOV X2, X31
	0x037688FC BL 0x3222A1C
	0x03768900 LDR X8, [X19]
	0x03768904 CBZ X8, 0x3768960
	0x03768908 LDR W9, [X19 + 0x8]
	0x0376890C MOV W22, W0
	0x03768910 MOV X0, X8
	0x03768914 MOV X2, X31
	0x03768918 ADD W1, W21, W9
	0x0376891C BL 0x3222A1C
	0x03768920 AND W8, W22, 0xFFFF
	0x03768924 CMP W8, W0, UXTH
	0x03768928 CSET W0, EQ
	0x0376892C B.NE 0x3768950
	0x03768930 LDR W8, [X19 + 0xC]
	0x03768934 ADD W21, W21, 0x1
	0x03768938 CMP W21, W8
	0x0376893C B.LT 0x37688F0
	0x03768940 B 0x3768950
	0x03768944 MOV W0, W31
	0x03768948 B 0x3768950
	0x0376894C MOVZ W0, 0x1
	0x03768950 LDP X20, X19, [X31 + 0x20]
	0x03768954 LDP X22, X21, [X31 + 0x10]
	0x03768958 LDR X30, [X31], #0x30
	0x0376895C RET
	0x03768960 BL 0x1C16F20
	0x03768964 LDP X8, X9, [X0]
	0x03768968 MOV X3, X2
	0x0376896C MOV X2, X1
	0x03768970 MOV W4, W31
	0x03768974 MOV X0, X8
	0x03768978 MOV X1, X9
	0x0376897C B 0x3768A00
	0x03768980 SUB X31, X31, 0x30
	0x03768984 STP X30, X21, [X31 + 0x10]
	0x03768988 STP X20, X19, [X31 + 0x20]
	0x0376898C STP X1, X2, [X31]
	0x03768990 LDR W20, [X0 + 0xC]
	0x03768994 MOV X19, X0
	0x03768998 ADD X0, X31, 0x0
	0x0376899C MOV X1, X31
	0x037689A0 BL 0x375F788
	0x037689A4 CMP W20, W0
	0x037689A8 B.NE 0x37689EC
	0x037689AC LDR X20, [X19]
	0x037689B0 LDR W21, [X19 + 0x8]
	0x037689B4 ADD X0, X31, 0x0
	0x037689B8 MOV X1, X31
	0x037689BC BL 0x37565F4
	0x037689C0 LDR W4, [X19 + 0xC]
	0x037689C4 MOV X2, X0
	0x037689C8 MOVZ W5, 0x5
	0x037689CC MOV X0, X20
	0x037689D0 MOV W1, W21
	0x037689D4 MOV W3, W31
	0x037689D8 MOV X6, X31
	0x037689DC BL 0x3225DC8
	0x037689E0 CMP W0, 0x0
	0x037689E4 CSET W0, EQ
	0x037689E8 B 0x37689F0
	0x037689EC MOV W0, W31
	0x037689F0 LDP X20, X19, [X31 + 0x20]
	0x037689F4 LDP X30, X21, [X31 + 0x10]
	0x037689F8 ADD X31, X31, 0x30
	0x037689FC RET
	0x03768A00 MOV W5, W4
	0x03768A04 UBFM X4, X1, 0x20, 0x3F
	0x03768A08 UBFM X8, X3, 0x20, 0x3F
	0x03768A0C CMP W4, W8
	0x03768A10 B.NE 0x3768A1C
	0x03768A14 MOV X6, X31
	0x03768A18 B 0x3225DC8
	0x03768A1C MOVN W8, 0x0
	0x03768A20 CSNEG W0, W8, W8, LT
	0x03768A24 RET
	0x03768A28 STR X30, [X31 - 0x30]!
	0x03768A2C STP X22, X21, [X31 + 0x10]
	0x03768A30 STP X20, X19, [X31 + 0x20]
	0x03768A34 CBZ X1, 0x3768AC4
	0x03768A38 LDR W8, [X1 + 0x10]
	0x03768A3C LDR W9, [X0 + 0xC]
	0x03768A40 MOV X19, X1
	0x03768A44 MOV X20, X0
	0x03768A48 CMP W8, W9
	0x03768A4C B.LE 0x3768A58
	0x03768A50 MOV W0, W31
	0x03768A54 B 0x3768AB4
	0x03768A58 CMP W8, 0x1
	0x03768A5C B.LT 0x3768AB0
	0x03768A60 MOV W21, W31

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X29
	003 Move [X31+40], X30
	004 Move [X31+48], X28
	005 Move [X31+56], X27
	006 Move [X31+64], X26
	007 Move [X31+72], X25
	008 Move [X31+80], X24
	009 Move [X31+88], X23
	010 Move [X31+96], X22
	011 Move [X31+104], X21
	012 Move [X31+112], X20
	013 Move [X31+120], X19
	014 Move X22, 0xC79000
	015 Move W8, [X22+3715]
	016 Move W19, W2
	017 Move X20, X1
	018 Move X21, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {28}
	023 Move X0, 0x98E000
	024 Move X0, [X0+368]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X22+3715], W8
	028 Compare X21, 0
	029 JumpIfEqual {150}
	030 Compare X20, 0
	031 JumpIfEqual {157}
	032 Move W23, [X21+16]
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move W27, [X20+16]
	035 Move W22, W31
	036 Move [X31+8], W23
	037 Move X0, X21
	038 Move W1, W22
	039 Move X2, X31
	040 Call String.get_Chars, X0, X1
	041 And W9, W0, 0xFFFF
	042 NotImplemented "Instruction CMP not yet implemented."
	043 NotImplemented "Instruction CSET not yet implemented."
	044 Move W8, W31
	045 Move [X31+12], W9
	046 Move [X31+16], W22
	047 NotImplemented "Instruction CINC not yet implemented."
	048 Move W29, W8
	049 Add W8, W22, W8
	050 Add W1, W8, 1
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move X0, X21
	053 Move X2, X31
	054 Call String.get_Chars, X0, X1
	055 And W8, W0, 0xFFFF
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Add W8, W29, 1
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move W9, [X31+12]
	060 Move W8, [X31+16]
	061 Move W23, W31
	062 Add W22, W29, 1
	063 Add W8, W8, W9
	064 Move [X31+28], W8
	065 Move X0, X20
	066 Move W1, W23
	067 Move X2, X31
	068 Call String.get_Chars, X0, X1
	069 And W9, W0, 0xFFFF
	070 NotImplemented "Instruction CMP not yet implemented."
	071 NotImplemented "Instruction CSET not yet implemented."
	072 Move W8, W31
	073 Move [X31+20], W9
	074 Move [X31+24], W23
	075 NotImplemented "Instruction CINC not yet implemented."
	076 Move W26, W8
	077 Add W8, W23, W8
	078 Add W1, W8, 1
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Move X0, X20
	081 Move X2, X31
	082 Call String.get_Chars, X0, X1
	083 And W8, W0, 0xFFFF
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Add W8, W26, 1
	086 NotImplemented "Instruction CMP not yet implemented."
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Move W9, [X31+20]
	089 Move W8, [X31+24]
	090 Move W23, W31
	091 Add W28, W8, W9
	092 Move W8, [X31+28]
	093 Move X0, X21
	094 Move X2, X31
	095 Add W1, W8, W23
	096 Call String.get_Chars, X0, X1
	097 Move W24, W0
	098 Add W1, W28, W23
	099 Move X0, X20
	100 Move X2, X31
	101 Call String.get_Chars, X0, X1
	102 Move X8, 0x98E000
	103 Move X8, [X8+368]
	104 Move W25, W0
	105 Move X8, [X8]
	106 Move W9, [X8+224]
	107 Compare W9, 0
	108 JumpIfNotEqual {111}
	109 Move X0, X8
	110 Call 0x1C17DFC
	111 Move W0, W24
	112 Move X1, X31
	113 Call Char.ToLowerInvariant, X0
	114 And W24, W0, 0xFFFF
	115 Move W0, W25
	116 Move X1, X31
	117 Call Char.ToLowerInvariant, X0
	118 NotImplemented "Instruction CMP not yet implemented."
	119 Add W23, W23, 1
	120 NotImplemented "Instruction CMP not yet implemented."
	121 Move W9, [X31+20]
	122 Move W8, [X31+24]
	123 Add W8, W8, W9
	124 Add W8, W8, W26
	125 Add W23, W8, 2
	126 NotImplemented "Instruction CMP not yet implemented."
	127 Move W9, [X31+12]
	128 Move W8, [X31+16]
	129 Move W23, [X31+8]
	130 Add W8, W8, W9
	131 Add W8, W8, W29
	132 Add W22, W8, 2
	133 NotImplemented "Instruction CMP not yet implemented."
	134 Move W0, W31
	135 Move W0, 1
	136 Move X20, [X31+112]
	137 Move X19, [X31+120]
	138 Move X22, [X31+96]
	139 Move X21, [X31+104]
	140 Move X24, [X31+80]
	141 Move X23, [X31+88]
	142 Move X26, [X31+64]
	143 Move X25, [X31+72]
	144 Move X28, [X31+48]
	145 Move X27, [X31+56]
	146 Move X29, [X31+32]
	147 Move X30, [X31+40]
	148 Add X31, X31, 128
	149 Return X0
	150 Move X0, 0x991000
	151 Move X0, [X0+1320]
	152 Call 0x1C17D08
	153 Call 0x1C17F10
	154 Move X19, X0
	155 Move X0, 0x9DF000
	156 Move X0, [X0+1440]
	157 Move X0, 0x991000
	158 Move X0, [X0+1320]
	159 Call 0x1C17D08
	160 Call 0x1C17F10
	161 Move X19, X0
	162 Move X0, 0x9DF000
	163 Move X0, [X0+1448]
	164 Call 0x1C17D08
	165 Move X1, X0
	166 Move X0, X19
	167 Move X2, X31
	168 Call ArgumentNullException..ctor, X0, X1
	169 Move X0, 0x9DF000
	170 Move X0, [X0+1456]
	171 Call 0x1C17D08
	172 Move X1, X0
	173 Move X0, X19
	174 Call 0x1C17DEC

Method: System.Int32 ParseInt(System.String str, System.Int32 pos)

Disassembly:
	0x03768A64 LDR X0, [X20]
	0x03768A68 CBZ X0, 0x3768AC4
	0x03768A6C LDR W8, [X20 + 0x8]
	0x03768A70 MOV X2, X31
	0x03768A74 ADD W1, W21, W8
	0x03768A78 BL 0x3222A1C
	0x03768A7C AND W22, W0, 0xFFFF
	0x03768A80 MOV X0, X19
	0x03768A84 MOV W1, W21
	0x03768A88 MOV X2, X31
	0x03768A8C BL 0x3222A1C
	0x03768A90 CMP W22, W0, UXTH
	0x03768A94 CSET W0, EQ
	0x03768A98 B.NE 0x3768AB4
	0x03768A9C LDR W8, [X19 + 0x10]
	0x03768AA0 ADD W21, W21, 0x1
	0x03768AA4 CMP W21, W8
	0x03768AA8 B.LT 0x3768A64
	0x03768AAC B 0x3768AB4
	0x03768AB0 MOVZ W0, 0x1
	0x03768AB4 LDP X20, X19, [X31 + 0x20]
	0x03768AB8 LDP X22, X21, [X31 + 0x10]
	0x03768ABC LDR X30, [X31], #0x30
	0x03768AC0 RET
	0x03768AC4 BL 0x1C16F20
	0x03768AC8 STR X30, [X31 - 0x10]!
	0x03768ACC TBZ X2, 0x1F, 0x3768AD8
	0x03768AD0 LDR W8, [X0 + 0xC]
	0x03768AD4 SUB W2, W8, W1
	0x03768AD8 LDR X8, [X0]
	0x03768ADC CBZ X8, 0x3768AF8
	0x03768AE0 LDR W9, [X0 + 0x8]
	0x03768AE4 MOV X0, X8
	0x03768AE8 MOV X3, X31
	0x03768AEC ADD W1, W9, W1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Compare X0, 0
	008 JumpIfEqual {40}
	009 Move W22, [X0+16]
	010 Move W19, W1
	011 Move X20, X0
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Move W21, W31
	014 Move W23, 1
	015 Move X0, X20
	016 Move W1, W19
	017 Move X2, X31
	018 Call String.get_Chars, X0, X1
	019 Subtract W8, W0, 48
	020 And W8, W8, 0xFFFF
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Multiply W8, W23, W21
	023 Add W9, W23, W23
	024 Add W19, W19, 1
	025 Add W8, W8, W0
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Subtract W21, W8, 48
	028 Move W23, W9
	029 ShiftRight W23, 31
	030 And W23, W23, 0x3FFFFFFF
	031 Move W21, W31
	032 Move W0, W21
	033 Move X20, [X31+32]
	034 Move X19, [X31+40]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move X30, [X31+48]
	038 Move X23, [X31+56]
	039 Return X0
	040 Call 0x1C17F20

Method: System.Boolean WriteStringToBuffer(System.String text, System.IntPtr buffer, System.Int32 bufferSizeInCharacters)

Disassembly:
	0x03768AF0 LDR X30, [X31], #0x10
	0x03768AF4 B 0x3228DE4
	0x03768AF8 BL 0x1C16F20
	0x03768AFC STR X30, [X31 - 0x20]!
	0x03768B00 STP X20, X19, [X31 + 0x10]
	0x03768B04 ADRP X20, 0xC78000
	0x03768B08 LDRB W8, [X20 + 0xE8D]

ISIL:
	001 Move [X31-16], X30
	002 Add X3, X31, 12
	003 Move [X31+12], W31
	004 Call StringHelpers.WriteStringToBuffer, X0, X1, X2, X3
	005 And W0, W0, 1
	006 Move X30, [X31+16]
	007 Return X0

Method: System.Boolean WriteStringToBuffer(System.String text, System.IntPtr buffer, System.Int32 bufferSizeInCharacters, ref System.UInt32 offset)

Disassembly:
	0x03768B0C MOV X19, X0
	0x03768B10 TBNZ X8, 0x0, 0x3768B28
	0x03768B14 ADRP X0, 0x98D000
	0x03768B18 LDR X0, [X0 + 0x278]
	0x03768B1C BL 0x1C16CF4
	0x03768B20 MOVZ W8, 0x1
	0x03768B24 STRB W8, [X20 + 0xE8D]
	0x03768B28 LDR X0, [X19]
	0x03768B2C CBZ X0, 0x3768B44
	0x03768B30 LDP W1, W2, [X19 + 0x8]
	0x03768B34 LDP X20, X19, [X31 + 0x10]
	0x03768B38 MOV X3, X31
	0x03768B3C LDR X30, [X31], #0x20
	0x03768B40 B 0x3228DE4
	0x03768B44 ADRP X8, 0x98D000
	0x03768B48 LDR X8, [X8 + 0x278]
	0x03768B4C LDP X20, X19, [X31 + 0x10]
	0x03768B50 LDR X8, [X8]
	0x03768B54 LDR X8, [X8 + 0xB8]
	0x03768B58 LDR X0, [X8]
	0x03768B5C LDR X30, [X31], #0x20
	0x03768B60 RET
	0x03768B64 STR X30, [X31 - 0x10]!
	0x03768B68 MOV X8, X0
	0x03768B6C LDR X0, [X0]
	0x03768B70 CBZ X0, 0x3768BA8
	0x03768B74 LDR W9, [X8 + 0x8]
	0x03768B78 CBNZ W9, 0x3768B8C
	0x03768B7C LDR W9, [X8 + 0xC]
	0x03768B80 LDR W10, [X0 + 0x10]
	0x03768B84 CMP W9, W10
	0x03768B88 B.EQ 0x3768B98
	0x03768B8C MOV X0, X8
	0x03768B90 BL 0x3768AFC
	0x03768B94 CBZ X0, 0x3768BB0
	0x03768B98 LDR X8, [X0]
	0x03768B9C LDP X2, X1, [X8 + 0x158]
	0x03768BA0 LDR X30, [X31], #0x10
	0x03768BA4 BR X2
	0x03768BA8 LDR X30, [X31], #0x10
	0x03768BAC RET
	0x03768BB0 BL 0x1C16F20
	0x03768BB4 STR X30, [X31 - 0x10]!
	0x03768BB8 MOV W4, W31
	0x03768BBC BL 0x3768A00
	0x03768BC0 CMP W0, 0x0
	0x03768BC4 CSET W0, EQ
	0x03768BC8 LDR X30, [X31], #0x10
	0x03768BCC RET
	0x03768BD0 STR X30, [X31 - 0x10]!
	0x03768BD4 MOV W4, W31
	0x03768BD8 BL 0x3768A00
	0x03768BDC CMP W0, 0x0
	0x03768BE0 CSET W0, NE
	0x03768BE4 LDR X30, [X31], #0x10
	0x03768BE8 RET
	0x03768BEC SUB X31, X31, 0x20
	0x03768BF0 STP X1, X30, [X31 + 0x8]
	0x03768BF4 STR X0, [X31]
	0x03768BF8 ADD X0, X31, 0x0
	0x03768BFC MOV X1, X2
	0x03768C00 MOV X2, X3
	0x03768C04 BL 0x3768980
	0x03768C08 LDR X30, [X31 + 0x10]
	0x03768C0C AND W0, W0, 0x1
	0x03768C10 ADD X31, X31, 0x20
	0x03768C14 RET
	0x03768C18 SUB X31, X31, 0x20
	0x03768C1C STP X1, X30, [X31 + 0x8]
	0x03768C20 STR X0, [X31]
	0x03768C24 ADD X0, X31, 0x0
	0x03768C28 MOV X1, X2
	0x03768C2C MOV X2, X3
	0x03768C30 BL 0x3768980
	0x03768C34 LDR X30, [X31 + 0x10]
	0x03768C38 ORN W8, W31, W0, 0x0
	0x03768C3C AND W0, W8, 0x1
	0x03768C40 ADD X31, X31, 0x20
	0x03768C44 RET
	0x03768C48 SUB X31, X31, 0x20
	0x03768C4C STP X3, X30, [X31 + 0x8]
	0x03768C50 MOV X8, X1
	0x03768C54 MOV X1, X0
	0x03768C58 STR X2, [X31]
	0x03768C5C ADD X0, X31, 0x0
	0x03768C60 MOV X2, X8
	0x03768C64 BL 0x3768980
	0x03768C68 LDR X30, [X31 + 0x10]
	0x03768C6C AND W0, W0, 0x1
	0x03768C70 ADD X31, X31, 0x20
	0x03768C74 RET
	0x03768C78 SUB X31, X31, 0x20
	0x03768C7C STP X3, X30, [X31 + 0x8]
	0x03768C80 MOV X8, X1
	0x03768C84 MOV X1, X0
	0x03768C88 STR X2, [X31]
	0x03768C8C ADD X0, X31, 0x0
	0x03768C90 MOV X2, X8
	0x03768C94 BL 0x3768980
	0x03768C98 LDR X30, [X31 + 0x10]
	0x03768C9C ORN W8, W31, W0, 0x0
	0x03768CA0 AND W0, W8, 0x1
	0x03768CA4 ADD X31, X31, 0x20
	0x03768CA8 RET
	0x03768CAC CBZ X0, 0x3768CBC
	0x03768CB0 LDR W8, [X0 + 0x10]
	0x03768CB4 UBFM X1, X8, 0x20, 0x1F
	0x03768CB8 RET
	0x03768CBC MOV X1, X31
	0x03768CC0 RET
	0x03768CC4 LDR W0, [X0 + 0xC]
	0x03768CC8 RET

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move W19, W2
	011 Move X22, X1
	012 Move X21, X0
	013 Move X0, X1
	014 Move X1, X31
	015 Move X2, X31
	016 Move X20, X3
	017 Call IntPtr.op_Equality, X0, X1
	018 Move TEMP, X0
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {73}
	022 Move X0, X21
	023 Move X1, X31
	024 Call String.IsNullOrEmpty, X0
	025 Move TEMP, X0
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfNotEqual {30}
	029 Move W23, W31
	030 Compare X21, 0
	031 JumpIfEqual {91}
	032 Move W23, [X21+16]
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move W8, [X20]
	035 Move W9, W23
	036 ShiftRight W9, 31
	037 And W9, W9, 0x3FFFFFFF
	038 Add X8, X8, W9
	039 Add X24, X8, 4
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move X0, X22
	042 Move X1, X31
	043 Call IntPtr.op_Explicit, X0
	044 NotImplemented "Instruction LDRSW not yet implemented."
	045 NotImplemented "Instruction CMP not yet implemented."
	046 NotImplemented "Instruction STRH not yet implemented."
	047 Compare X21, 0
	048 JumpIfEqual {91}
	049 Add X8, X0, X8
	050 Move W22, W31
	051 Add X25, X8, 2
	052 Move X0, X21
	053 Move W1, W22
	054 Move X2, X31
	055 Call String.get_Chars, X0, X1
	056 Add W22, W22, 1
	057 NotImplemented "Instruction CMP not yet implemented."
	058 NotImplemented "Instruction STRH not yet implemented."
	059 Move [X20], W24
	060 Move X8, W19
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move X20, [X31+64]
	063 Move X19, [X31+72]
	064 Move X22, [X31+48]
	065 Move X21, [X31+56]
	066 Move X24, [X31+32]
	067 Move X23, [X31+40]
	068 Move X30, [X31+16]
	069 Move X25, [X31+24]
	070 NotImplemented "Instruction CSET not yet implemented."
	071 Add X31, X31, 80
	072 Return X0
	073 Move X0, 0x991000
	074 Move X0, [X0+1320]
	075 Call 0x1C17D08
	076 Call 0x1C17F10
	077 Move X19, X0
	078 Move X0, 0x9B7000
	079 Move X0, [X0+3912]
	080 Call 0x1C17D08
	081 Move X1, X0
	082 Move X0, X19
	083 Move X2, X31
	084 Call ArgumentNullException..ctor, X0, X1
	085 Move X0, 0x9DF000
	086 Move X0, [X0+1464]
	087 Call 0x1C17D08
	088 Move X1, X0
	089 Move X0, X19
	090 Call 0x1C17DEC
	091 Call 0x1C17F20
	092 Move W8, 0xFFFF
	093 NotImplemented "Instruction STRH not yet implemented."
	094 Move X0, 0x991000
	095 Move X0, [X0+1624]
	096 Call 0x1C17D08
	097 Add X1, X31, 12
	098 Call 0x1C17E04
	099 Move X19, X0
	100 Move X0, 0x9DF000
	101 Move X0, [X0+1472]
	102 Call 0x1C17D08
	103 Move X1, X19
	104 Move X2, X31
	105 Call String.Format, X0, X1
	106 Move X19, X0
	107 Move X0, 0x994000
	108 Move X0, [X0+1400]
	109 Call 0x1C17D08
	110 Call 0x1C17F10
	111 Move X20, X0
	112 Move X0, 0x9DF000
	113 Move X0, [X0+992]
	114 Call 0x1C17D08
	115 Move X2, X0
	116 Move X0, X20
	117 Move X1, X19
	118 Move X3, X31
	119 Call ArgumentException..ctor, X0, X1, X2
	120 Move X0, 0x9DF000
	121 Move X0, [X0+1464]
	122 Call 0x1C17D08
	123 Move X1, X0
	124 Move X0, X20
	125 Call 0x1C17DEC

Method: System.String ReadStringFromBuffer(System.IntPtr buffer, System.Int32 bufferSize)

Disassembly:
	0x03768CCC LDR W0, [X0 + 0x8]
	0x03768CD0 RET
	0x03768CD4 STP X30, X19, [X31 - 0x10]!
	0x03768CD8 TBNZ X1, 0x1F, 0x3768D08
	0x03768CDC LDR W8, [X0 + 0xC]
	0x03768CE0 CMP W8, W1

ISIL:
	001 Move [X31-16], X30
	002 Add X2, X31, 12
	003 Move [X31+12], W31
	004 Call StringHelpers.ReadStringFromBuffer, X0, X1, X2
	005 Move X30, [X31+16]
	006 Return X0

Method: System.String ReadStringFromBuffer(System.IntPtr buffer, System.Int32 bufferSize, ref System.UInt32 offset)

Disassembly:
	0x03768CE4 B.LE 0x3768D08
	0x03768CE8 LDR X8, [X0]
	0x03768CEC CBZ X8, 0x3768D50
	0x03768CF0 LDR W9, [X0 + 0x8]
	0x03768CF4 MOV X0, X8
	0x03768CF8 MOV X2, X31
	0x03768CFC ADD W1, W9, W1
	0x03768D00 LDP X30, X19, [X31], #0x10
	0x03768D04 B 0x3222A1C
	0x03768D08 ADRP X0, 0x993000
	0x03768D0C LDR X0, [X0 + 0x760]
	0x03768D10 BL 0x1C16D08
	0x03768D14 BL 0x1C16F10
	0x03768D18 MOV X19, X0
	0x03768D1C ADRP X0, 0x996000
	0x03768D20 LDR X0, [X0 + 0x130]
	0x03768D24 BL 0x1C16D08
	0x03768D28 MOV X1, X0
	0x03768D2C MOV X0, X19
	0x03768D30 MOV X2, X31
	0x03768D34 BL 0x3316014
	0x03768D38 ADRP X0, 0x9DE000
	0x03768D3C LDR X0, [X0 + 0x5F8]
	0x03768D40 BL 0x1C16D08
	0x03768D44 MOV X1, X0
	0x03768D48 MOV X0, X19
	0x03768D4C BL 0x1C16DEC
	0x03768D50 BL 0x1C16F20
	0x03768D54 SUB W8, W0, 0x5
	0x03768D58 CMP W8, 0x8
	0x03768D5C CSET W0, CC
	0x03768D60 RET
	0x03768D64 STR X30, [X31 - 0x20]!
	0x03768D68 STP X20, X19, [X31 + 0x10]
	0x03768D6C ADRP X20, 0xC78000
	0x03768D70 LDRB W8, [X20 + 0xE8E]
	0x03768D74 MOV X19, X0
	0x03768D78 TBNZ X8, 0x0, 0x3768DA8
	0x03768D7C ADRP X0, 0x9B4000
	0x03768D80 LDR X0, [X0 + 0x3A8]
	0x03768D84 BL 0x1C16CF4
	0x03768D88 ADRP X0, 0x9BC000
	0x03768D8C LDR X0, [X0 + 0x278]
	0x03768D90 BL 0x1C16CF4
	0x03768D94 ADRP X0, 0x9B4000
	0x03768D98 LDR X0, [X0 + 0x3F0]
	0x03768D9C BL 0x1C16CF4
	0x03768DA0 MOVZ W8, 0x1
	0x03768DA4 STRB W8, [X20 + 0xE8E]
	0x03768DA8 CBZ X19, 0x3768DD4
	0x03768DAC ADRP X8, 0x9B4000
	0x03768DB0 LDR X8, [X8 + 0x3A8]
	0x03768DB4 LDR X9, [X19]
	0x03768DB8 LDR X8, [X8]
	0x03768DBC LDRB W11, [X9 + 0x130]
	0x03768DC0 LDRB W10, [X8 + 0x130]
	0x03768DC4 CMP W11, W10
	0x03768DC8 B.CS 0x3768E2C
	0x03768DCC MOV X20, X31
	0x03768DD0 B 0x3768E40
	0x03768DD4 MOV X0, X31
	0x03768DD8 MOV X1, X31
	0x03768DDC MOV X2, X31
	0x03768DE0 BL 0x32CCED4
	0x03768DE4 TBNZ X0, 0x0, 0x3768F2C
	0x03768DE8 MOV X0, X31
	0x03768DEC MOV X1, X31
	0x03768DF0 MOV X2, X31
	0x03768DF4 BL 0x32CE2E0
	0x03768DF8 MOV X19, X31
	0x03768DFC TBNZ X0, 0x0, 0x3768F2C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xC79000
	007 Move W8, [X22+3716]
	008 Move X19, X2
	009 Move W20, W1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x9B4000
	016 Move X0, [X0+2128]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+3716], W8
	020 Move X0, X21
	021 Move X1, X31
	022 Move X2, X31
	023 Call IntPtr.op_Equality, X0, X1
	024 Move TEMP, X0
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {63}
	028 Move W8, [X19]
	029 Add W8, W8, 4
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X0, X21
	032 Move X1, X31
	033 Call IntPtr.op_Explicit, X0
	034 NotImplemented "Instruction LDRSW not yet implemented."
	035 Add X21, X8, X0
	036 NotImplemented "Instruction LDRH not yet implemented."
	037 Compare W22, 0
	038 JumpIfEqual {44}
	039 And X8, X8, 0
	040 Add X8, X8, X22
	041 Move X9, W20
	042 Add X20, X8, 4
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move X0, X31
	045 Move X20, [X31+32]
	046 Move X19, [X31+40]
	047 Move X22, [X31+16]
	048 Move X21, [X31+24]
	049 Move X30, [X31+48]
	050 Return X0
	051 Move X8, 0x9B4000
	052 Move X8, [X8+2128]
	053 Move X0, [X8]
	054 Move W8, [X0+224]
	055 Compare W8, 0
	056 JumpIfNotEqual {58}
	057 Call 0x1C17DFC
	058 Move X0, X21
	059 Move W1, W22
	060 Move X2, X31
	061 Call Marshal.PtrToStringUni, X0, X1
	062 Move [X19], W20
	063 Move X0, 0x991000
	064 Move X0, [X0+1320]
	065 Call 0x1C17D08
	066 Call 0x1C17F10
	067 Move X19, X0
	068 Move X0, 0x9B7000
	069 Move X0, [X0+3912]
	070 Call 0x1C17D08
	071 Move X1, X0
	072 Move X0, X19
	073 Move X2, X31
	074 Call ArgumentNullException..ctor, X0, X1
	075 Move X0, 0x9DF000
	076 Move X0, [X0+1480]
	077 Call 0x1C17D08
	078 Move X1, X0
	079 Move X0, X19
	080 Call 0x1C17DEC

Method: System.Boolean IsPrintable(System.Char ch)

Disassembly:
	0x03768E00 MOV X0, X19
	0x03768E04 MOV X1, X31
	0x03768E08 MOV X2, X31
	0x03768E0C BL 0x32CE528
	0x03768E10 TBZ X0, 0x0, 0x3768E90
	0x03768E14 CBZ X19, 0x3768F2C
	0x03768E18 LDR X8, [X19]
	0x03768E1C MOV X0, X19
	0x03768E20 LDR X2, [X8 + 0x3B8]
	0x03768E24 LDR X1, [X8 + 0x3C0]
	0x03768E28 B 0x3768EDC
	0x03768E2C LDR X9, [X9 + 0xC8]
	0x03768E30 ADD X9, X9, X10, 0x3, LSL
	0x03768E34 LDUR X9, [X9 - 0x8]
	0x03768E38 CMP X9, X8
	0x03768E3C CSEL X20, X19, X31, EQ
	0x03768E40 MOV X0, X20
	0x03768E44 MOV X1, X31
	0x03768E48 MOV X2, X31
	0x03768E4C BL 0x32CCED4
	0x03768E50 TBZ X0, 0x0, 0x3768E68
	0x03768E54 CBZ X20, 0x3768F2C
	0x03768E58 LDR X8, [X20]
	0x03768E5C LDR X2, [X8 + 0x258]
	0x03768E60 LDR X1, [X8 + 0x260]
	0x03768E64 B 0x3768ED8
	0x03768E68 ADRP X8, 0x9B4000
	0x03768E6C LDR X8, [X8 + 0x3F0]
	0x03768E70 LDR X9, [X19]
	0x03768E74 LDR X8, [X8]
	0x03768E78 LDRB W11, [X9 + 0x130]
	0x03768E7C LDRB W10, [X8 + 0x130]
	0x03768E80 CMP W11, W10
	0x03768E84 B.CS 0x3768EA0
	0x03768E88 MOV X20, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xC79000
	006 Move X20, 0x98E000
	007 Move W8, [X21+3717]
	008 Move X20, [X20+368]
	009 Move W19, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x98E000
	015 Move X0, [X0+368]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3717], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move W0, W19
	025 Move X1, X31
	026 Call Char.IsControl, X0
	027 Move TEMP, X0
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfNotEqual {32}
	031 Move W8, W31
	032 Move X0, [X20]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Move W0, W19
	038 Move X1, X31
	039 Call Char.IsWhiteSpace, X0
	040 Xor W8, W0, 1
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 And W0, W8, 1
	044 Move X30, [X31+32]
	045 Move X21, [X31+40]
	046 Return X0

Method: System.String WithAllWhitespaceStripped(System.String str)

Disassembly:
	0x03768E8C B 0x3768EB4
	0x03768E90 LDP X20, X19, [X31 + 0x10]
	0x03768E94 MOV X0, X31
	0x03768E98 LDR X30, [X31], #0x20
	0x03768E9C RET
	0x03768EA0 LDR X9, [X9 + 0xC8]
	0x03768EA4 ADD X9, X9, X10, 0x3, LSL
	0x03768EA8 LDUR X9, [X9 - 0x8]
	0x03768EAC CMP X9, X8
	0x03768EB0 CSEL X20, X19, X31, EQ
	0x03768EB4 MOV X0, X20
	0x03768EB8 MOV X1, X31
	0x03768EBC MOV X2, X31
	0x03768EC0 BL 0x32CE2E0
	0x03768EC4 TBZ X0, 0x0, 0x3768EE8
	0x03768EC8 CBZ X20, 0x3768F2C
	0x03768ECC LDR X8, [X20]
	0x03768ED0 LDR X2, [X8 + 0x248]
	0x03768ED4 LDR X1, [X8 + 0x250]
	0x03768ED8 MOV X0, X20
	0x03768EDC LDP X20, X19, [X31 + 0x10]
	0x03768EE0 LDR X30, [X31], #0x20
	0x03768EE4 BR X2
	0x03768EE8 CBZ X19, 0x3768E00
	0x03768EEC ADRP X8, 0x9BC000
	0x03768EF0 LDR X8, [X8 + 0x278]
	0x03768EF4 LDR X9, [X19]
	0x03768EF8 LDR X8, [X8]
	0x03768EFC LDRB W11, [X9 + 0x130]
	0x03768F00 LDRB W10, [X8 + 0x130]
	0x03768F04 CMP W11, W10
	0x03768F08 B.CS 0x3768F14
	0x03768F0C MOV X19, X31
	0x03768F10 B 0x3768E00
	0x03768F14 LDR X9, [X9 + 0xC8]
	0x03768F18 ADD X9, X9, X10, 0x3, LSL
	0x03768F1C LDUR X9, [X9 - 0x8]
	0x03768F20 CMP X9, X8
	0x03768F24 CSEL X19, X19, X31, EQ
	0x03768F28 B 0x3768E00
	0x03768F2C BL 0x1C16F20
	0x03768F30 STP X30, X21, [X31 - 0x20]!
	0x03768F34 STP X20, X19, [X31 + 0x10]
	0x03768F38 ADRP X20, 0xC78000
	0x03768F3C LDRB W8, [X20 + 0xE8F]
	0x03768F40 MOV X19, X0
	0x03768F44 TBNZ X8, 0x0, 0x3769064
	0x03768F48 ADRP X0, 0x9B2000
	0x03768F4C LDR X0, [X0 + 0xD68]
	0x03768F50 BL 0x1C16CF4
	0x03768F54 ADRP X0, 0x9B2000
	0x03768F58 LDR X0, [X0 + 0xD70]
	0x03768F5C BL 0x1C16CF4
	0x03768F60 ADRP X0, 0x9B3000
	0x03768F64 LDR X0, [X0 + 0xA78]
	0x03768F68 BL 0x1C16CF4
	0x03768F6C ADRP X0, 0x9B2000
	0x03768F70 LDR X0, [X0 + 0xD78]
	0x03768F74 BL 0x1C16CF4
	0x03768F78 ADRP X0, 0x9B2000
	0x03768F7C LDR X0, [X0 + 0xD80]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0xC79000
	008 Move X21, 0x98C000
	009 Move W8, [X20+3718]
	010 Move X21, [X21+2288]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x98E000
	017 Move X0, [X0+368]
	018 Call 0x1C17CF4
	019 Move X0, 0x98C000
	020 Move X0, [X0+2288]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X20+3718], W8
	024 Move X0, [X21]
	025 Call 0x1C17F10
	026 Move X1, X31
	027 Move X20, X0
	028 Call StringBuilder..ctor, X0
	029 Compare X19, 0
	030 JumpIfEqual {76}
	031 Move W8, [X19+16]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X23, 0x98E000
	034 Move X23, [X23+368]
	035 Move W21, W31
	036 Move X0, X19
	037 Move W1, W21
	038 Move X2, X31
	039 Call String.get_Chars, X0, X1
	040 Move X8, [X23]
	041 Move W22, W0
	042 Move W9, [X8+224]
	043 Compare W9, 0
	044 JumpIfNotEqual {47}
	045 Move X0, X8
	046 Call 0x1C17DFC
	047 Move W0, W22
	048 Move X1, X31
	049 Call Char.IsWhiteSpace, X0
	050 Move TEMP, X0
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfEqual {60}
	054 Compare X20, 0
	055 JumpIfEqual {76}
	056 Move X0, X20
	057 Move W1, W22
	058 Move X2, X31
	059 Call StringBuilder.Append, X0, X1
	060 Move W8, [X19+16]
	061 Add W21, W21, 1
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Compare X20, 0
	064 JumpIfEqual {76}
	065 Move X8, [X20]
	066 Move X0, X20
	067 Move X20, [X31+32]
	068 Move X19, [X31+40]
	069 Move X22, [X31+16]
	070 Move X21, [X31+24]
	071 Move X2, [X8+360]
	072 Move X1, [X8+368]
	073 Move X30, [X31+48]
	074 Move X23, [X31+56]
	075 CallNoReturn X2
	076 Call 0x1C17F20

Method: System.Boolean InvariantEqualsIgnoreCase(System.String left, System.String right)

Disassembly:
	0x03768F80 BL 0x1C16CF4
	0x03768F84 ADRP X0, 0x9B2000
	0x03768F88 LDR X0, [X0 + 0xD88]
	0x03768F8C BL 0x1C16CF4
	0x03768F90 ADRP X0, 0x9B2000
	0x03768F94 LDR X0, [X0 + 0xD90]
	0x03768F98 BL 0x1C16CF4
	0x03768F9C ADRP X0, 0x9B3000
	0x03768FA0 LDR X0, [X0 + 0xA80]
	0x03768FA4 BL 0x1C16CF4
	0x03768FA8 ADRP X0, 0x98B000
	0x03768FAC LDR X0, [X0 + 0x6C0]
	0x03768FB0 BL 0x1C16CF4
	0x03768FB4 ADRP X0, 0x9B2000
	0x03768FB8 LDR X0, [X0 + 0xD98]
	0x03768FBC BL 0x1C16CF4
	0x03768FC0 ADRP X0, 0x9B2000
	0x03768FC4 LDR X0, [X0 + 0xDA0]
	0x03768FC8 BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X1
	005 Move X1, X31
	006 Move X20, X0
	007 Call String.IsNullOrEmpty, X0
	008 Move TEMP, X0
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfNotEqual {19}
	012 Move X0, X19
	013 Move X20, [X31+16]
	014 Move X19, [X31+24]
	015 Move X1, X31
	016 Move X30, [X31+32]
	017 Call String.IsNullOrEmpty, X0
	018 Return X0
	019 Move X0, X20
	020 Move X1, X19
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move W2, 3
	024 Move X3, X31
	025 Move X30, [X31+32]
	026 Call String.Equals, X0, X1, X2
	027 Return X0

Method: System.String ExpandTemplateString(System.String template, System.Func`2<System.String, System.String> mapFunc)

Disassembly:
	0x03768FCC ADRP X0, 0x9B2000
	0x03768FD0 LDR X0, [X0 + 0xDA8]
	0x03768FD4 BL 0x1C16CF4
	0x03768FD8 ADRP X0, 0x9DE000
	0x03768FDC LDR X0, [X0 + 0x600]
	0x03768FE0 BL 0x1C16CF4
	0x03768FE4 ADRP X0, 0x9DE000
	0x03768FE8 LDR X0, [X0 + 0x608]
	0x03768FEC BL 0x1C16CF4
	0x03768FF0 ADRP X0, 0x9B5000
	0x03768FF4 LDR X0, [X0 + 0x478]
	0x03768FF8 BL 0x1C16CF4
	0x03768FFC ADRP X0, 0x9DE000
	0x03769000 LDR X0, [X0 + 0x610]
	0x03769004 BL 0x1C16CF4
	0x03769008 ADRP X0, 0x9DD000
	0x0376900C LDR X0, [X0 + 0x618]
	0x03769010 BL 0x1C16CF4
	0x03769014 ADRP X0, 0x9DD000
	0x03769018 LDR X0, [X0 + 0x620]
	0x0376901C BL 0x1C16CF4
	0x03769020 ADRP X0, 0x9DD000
	0x03769024 LDR X0, [X0 + 0x628]
	0x03769028 BL 0x1C16CF4
	0x0376902C ADRP X0, 0x9DD000
	0x03769030 LDR X0, [X0 + 0x630]
	0x03769034 BL 0x1C16CF4
	0x03769038 ADRP X0, 0x9DD000
	0x0376903C LDR X0, [X0 + 0x638]
	0x03769040 BL 0x1C16CF4
	0x03769044 ADRP X0, 0x9DD000
	0x03769048 LDR X0, [X0 + 0x640]
	0x0376904C BL 0x1C16CF4
	0x03769050 ADRP X0, 0x9B4000
	0x03769054 LDR X0, [X0 + 0x490]
	0x03769058 BL 0x1C16CF4
	0x0376905C MOVZ W8, 0x1
	0x03769060 STRB W8, [X20 + 0xE8F]
	0x03769064 CBZ X19, 0x37693BC
	0x03769068 MOV X0, X19
	0x0376906C MOV X1, X31
	0x03769070 BL 0x3397374
	0x03769074 TBZ X0, 0x0, 0x37693A4
	0x03769078 ADRP X21, 0x98A000
	0x0376907C LDR X21, [X21 + 0x6C0]
	0x03769080 ADRP X8, 0x9B1000
	0x03769084 LDR X0, [X21]
	0x03769088 LDR X8, [X8 + 0xD80]
	0x0376908C LDR W9, [X0 + 0xE0]
	0x03769090 LDR X20, [X8]
	0x03769094 CBNZ W9, 0x376909C
	0x03769098 BL 0x1C16DFC
	0x0376909C MOV X0, X20
	0x037690A0 MOV X1, X31
	0x037690A4 BL 0x338C698
	0x037690A8 MOV X1, X0
	0x037690AC MOV X0, X19
	0x037690B0 MOV X2, X31
	0x037690B4 BL 0x3395194
	0x037690B8 TBZ X0, 0x0, 0x37690C8
	0x037690BC ADRP X8, 0x9DD000
	0x037690C0 LDR X8, [X8 + 0x608]
	0x037690C4 B 0x3769394
	0x037690C8 ADRP X8, 0x9B2000
	0x037690CC LDR X0, [X21]
	0x037690D0 LDR X8, [X8 + 0xA80]
	0x037690D4 LDR W9, [X0 + 0xE0]
	0x037690D8 LDR X20, [X8]
	0x037690DC CBNZ W9, 0x37690E4
	0x037690E0 BL 0x1C16DFC
	0x037690E4 MOV X0, X20
	0x037690E8 MOV X1, X31
	0x037690EC BL 0x338C698
	0x037690F0 MOV X1, X0
	0x037690F4 MOV X0, X19
	0x037690F8 MOV X2, X31
	0x037690FC BL 0x3395194
	0x03769100 TBZ X0, 0x0, 0x3769110
	0x03769104 ADRP X8, 0x9B4000
	0x03769108 LDR X8, [X8 + 0x490]
	0x0376910C B 0x3769394
	0x03769110 ADRP X8, 0x9B1000
	0x03769114 LDR X0, [X21]
	0x03769118 LDR X8, [X8 + 0xD70]
	0x0376911C LDR W9, [X0 + 0xE0]
	0x03769120 LDR X20, [X8]
	0x03769124 CBNZ W9, 0x376912C
	0x03769128 BL 0x1C16DFC
	0x0376912C MOV X0, X20
	0x03769130 MOV X1, X31
	0x03769134 BL 0x338C698
	0x03769138 MOV X1, X0
	0x0376913C MOV X0, X19
	0x03769140 MOV X2, X31
	0x03769144 BL 0x3395194
	0x03769148 TBZ X0, 0x0, 0x3769158
	0x0376914C ADRP X8, 0x9DD000
	0x03769150 LDR X8, [X8 + 0x618]
	0x03769154 B 0x3769394
	0x03769158 ADRP X8, 0x9B1000
	0x0376915C LDR X0, [X21]
	0x03769160 LDR X8, [X8 + 0xD68]
	0x03769164 LDR W9, [X0 + 0xE0]
	0x03769168 LDR X20, [X8]
	0x0376916C CBNZ W9, 0x3769174
	0x03769170 BL 0x1C16DFC
	0x03769174 MOV X0, X20
	0x03769178 MOV X1, X31
	0x0376917C BL 0x338C698
	0x03769180 MOV X1, X0
	0x03769184 MOV X0, X19
	0x03769188 MOV X2, X31
	0x0376918C BL 0x3395194
	0x03769190 TBZ X0, 0x0, 0x37691A0
	0x03769194 ADRP X8, 0x9DD000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0xC79000
	009 Move W8, [X21+3719]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x98C000
	017 Move X0, [X0+2288]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3719], W8
	021 Move X0, X20
	022 Move X1, X31
	023 Call String.IsNullOrEmpty, X0
	024 Move TEMP, X0
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {100}
	028 Compare X19, 0
	029 JumpIfEqual {107}
	030 Move X8, 0x98B000
	031 Move X8, [X8+2288]
	032 Move X0, [X8]
	033 Call 0x1C17F10
	034 Move X1, X31
	035 Move X21, X0
	036 Call StringBuilder..ctor, X0
	037 Compare X20, 0
	038 JumpIfEqual {99}
	039 Move W24, [X20+16]
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move W22, W31
	042 Move X0, X20
	043 Move W1, W22
	044 Move X2, X31
	045 Call String.get_Chars, X0, X1
	046 And W8, W0, 0xFFFF
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Add W23, W22, 1
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move W22, W23
	051 Move X0, X20
	052 Move W1, W22
	053 Move X2, X31
	054 Call String.get_Chars, X0, X1
	055 And W8, W0, 0xFFFF
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Add W22, W22, 1
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move W22, W24
	060 Subtract W2, W22, W23
	061 Move X0, X20
	062 Move W1, W23
	063 Move X3, X31
	064 Call String.Substring, X0, X1, X2
	065 Move X8, [X19+64]
	066 Move X9, [X19+24]
	067 Move X2, [X19+40]
	068 Move X1, X0
	069 Move X0, X8
	070 NotImplemented "Instruction BLR not yet implemented."
	071 Compare X21, 0
	072 JumpIfEqual {99}
	073 Move X1, X0
	074 Move X0, X21
	075 Move X2, X31
	076 Call StringBuilder.Append, X0, X1
	077 Compare X21, 0
	078 JumpIfEqual {99}
	079 Move W1, W0
	080 Move X0, X21
	081 Move X2, X31
	082 Call StringBuilder.Append, X0, X1
	083 Add W22, W22, 1
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Compare X21, 0
	086 JumpIfEqual {99}
	087 Move X8, [X21]
	088 Move X0, X21
	089 Move X20, [X31+48]
	090 Move X19, [X31+56]
	091 Move X22, [X31+32]
	092 Move X21, [X31+40]
	093 Move X2, [X8+360]
	094 Move X1, [X8+368]
	095 Move X24, [X31+16]
	096 Move X23, [X31+24]
	097 Move X30, [X31+64]
	098 CallNoReturn X2
	099 Call 0x1C17F20
	100 Move X0, 0x990000
	101 Move X0, [X0+1320]
	102 Call 0x1C17D08
	103 Call 0x1C17F10
	104 Move X19, X0
	105 Move X0, 0x9DE000
	106 Move X0, [X0+1488]
	107 Move X0, 0x990000
	108 Move X0, [X0+1320]
	109 Call 0x1C17D08
	110 Call 0x1C17F10
	111 Move X19, X0
	112 Move X0, 0x9DE000
	113 Move X0, [X0+1496]
	114 Call 0x1C17D08
	115 Move X1, X0
	116 Move X0, X19
	117 Move X2, X31
	118 Call ArgumentNullException..ctor, X0, X1
	119 Move X0, 0x9DE000
	120 Move X0, [X0+1504]
	121 Call 0x1C17D08
	122 Move X1, X0
	123 Move X0, X19
	124 Call 0x1C17DEC

