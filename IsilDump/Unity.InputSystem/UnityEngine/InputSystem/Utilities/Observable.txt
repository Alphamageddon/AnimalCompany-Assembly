Type: UnityEngine.InputSystem.Utilities.Observable

Method: System.IObservable`1<TValue> Where(System.IObservable`1<TValue> source, System.Func`2<TValue, System.Boolean> predicate)

Disassembly:
	0x0222EF14 CMP X8, X0
	0x0222EF18 B.NE 0x222F040
	0x0222EF1C ADRP X8, 0x1EED000
	0x0222EF20 LDR X8, [X8 + 0xEC8]
	0x0222EF24 LDR X8, [X8]
	0x0222EF28 LDR X8, [X8 + 0xB8]
	0x0222EF2C LDR X24, [X8]
	0x0222EF30 CBZ X24, 0x222F1DC
	0x0222EF34 ADRP X10, 0x1EED000
	0x0222EF38 LDR X8, [X24]
	0x0222EF3C LDR X10, [X10 + 0xED0]
	0x0222EF40 ADD X25, X20, 0x30
	0x0222EF44 LDRH W9, [X8 + 0x12E]
	0x0222EF48 LDR X1, [X10]
	0x0222EF4C CBZ X9, 0x222EF70
	0x0222EF50 LDR X10, [X8 + 0xB0]
	0x0222EF54 ADD X10, X10, 0x8
	0x0222EF58 LDUR X11, [X10 - 0x8]
	0x0222EF5C CMP X11, X1
	0x0222EF60 B.EQ 0x222EF80
	0x0222EF64 SUBS X9, X9, 0x1
	0x0222EF68 ADD X10, X10, 0x10
	0x0222EF6C B.NE 0x222EF58
	0x0222EF70 MOVZ W2, 0x13
	0x0222EF74 MOV X0, X24
	0x0222EF78 BL 0x1C5C788
	0x0222EF7C B 0x222EF90
	0x0222EF80 LDR W9, [X10]
	0x0222EF84 ADD W9, W9, 0x13
	0x0222EF88 ADD X8, X8, W9, 0x4, SXTW
	0x0222EF8C ADD X0, X8, 0x138
	0x0222EF90 LDP X8, X1, [X0]
	0x0222EF94 MOV X0, X24
	0x0222EF98 BLR X8
	0x0222EF9C MOV X0, X25
	0x0222EFA0 MOV X1, X31
	0x0222EFA4 BL 0x380289C
	0x0222EFA8 MOV X0, X22
	0x0222EFAC MOV X1, X21
	0x0222EFB0 MOV X2, X23
	0x0222EFB4 BL 0x3EB1AC0
	0x0222EFB8 LDR X8, [X19 + 0x38]
	0x0222EFBC SUB X9, X29, 0x10
	0x0222EFC0 SUB X3, X29, 0x28
	0x0222EFC4 SUB X4, X29, 0x10
	0x0222EFC8 LDR X1, [X8 + 0x18]
	0x0222EFCC LDR X8, [X20 + 0x30]
	0x0222EFD0 MOV X2, X31
	0x0222EFD4 LDR X0, [X1]
	0x0222EFD8 STP X9, X8, [X29 - 0x18]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+56]
	006 Move X19, X2
	007 Move X20, X1
	008 Move X21, X0
	009 Compare X8, 0
	010 JumpIfNotEqual {13}
	011 Move X0, X19
	012 Call 0x1C5D6E0
	013 Compare X21, 0
	014 JumpIfEqual {38}
	015 Compare X20, 0
	016 JumpIfEqual {45}
	017 Move X8, [X19+56]
	018 Move X0, [X8+16]
	019 Move W8, [X0+309]
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {25}
	024 Call 0x1C5D684
	025 Call 0x1C17F10
	026 Move X8, [X19+56]
	027 Move X1, X21
	028 Move X2, X20
	029 Move X19, X0
	030 Move X3, [X8+24]
	031 Call 0x285D8F0, X0, X1, X2
	032 Move X0, X19
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Move X21, [X31+40]
	037 Return X0
	038 Move X0, 0x1ECB000
	039 Move X0, [X0+1320]
	040 Call 0x1C17D08
	041 Call 0x1C17F10
	042 Move X20, X0
	043 Move X0, 0x1ED1000
	044 Move X0, [X0+1408]
	045 Move X0, 0x1ECB000
	046 Move X0, [X0+1320]
	047 Call 0x1C17D08
	048 Call 0x1C17F10
	049 Move X20, X0
	050 Move X0, 0x1EEE000
	051 Move X0, [X0+2288]
	052 Call 0x1C17D08
	053 Move X1, X0
	054 Move X0, X20
	055 Move X2, X31
	056 Call ArgumentNullException..ctor, X0, X1
	057 Move X0, X20
	058 Move X1, X19
	059 Call 0x1C17DEC

Method: System.IObservable`1<TResult> Select(System.IObservable`1<TSource> source, System.Func`2<TSource, TResult> filter)

Disassembly:
	0x0222EBD4 LDR X10, [X10 + 0xED0]
	0x0222EBD8 ADD X23, X20, 0x30
	0x0222EBDC LDRH W9, [X8 + 0x12E]
	0x0222EBE0 LDR X1, [X10]
	0x0222EBE4 CBZ X9, 0x222EC08
	0x0222EBE8 LDR X10, [X8 + 0xB0]
	0x0222EBEC ADD X10, X10, 0x8
	0x0222EBF0 LDUR X11, [X10 - 0x8]
	0x0222EBF4 CMP X11, X1
	0x0222EBF8 B.EQ 0x222EC2C
	0x0222EBFC SUBS X9, X9, 0x1
	0x0222EC00 ADD X10, X10, 0x10
	0x0222EC04 B.NE 0x222EBF0
	0x0222EC08 MOVZ W2, 0x13
	0x0222EC0C MOV X0, X22
	0x0222EC10 BL 0x1C5C788
	0x0222EC14 B 0x222EC3C
	0x0222EC18 LDP X20, X19, [X31 + 0x30]
	0x0222EC1C LDP X22, X21, [X31 + 0x20]
	0x0222EC20 LDP X30, X23, [X31 + 0x10]
	0x0222EC24 LDP D9, D8, [X31], #0x40
	0x0222EC28 RET
	0x0222EC2C LDR W9, [X10]
	0x0222EC30 ADD W9, W9, 0x13
	0x0222EC34 ADD X8, X8, W9, 0x4, SXTW
	0x0222EC38 ADD X0, X8, 0x138
	0x0222EC3C LDP X8, X1, [X0]
	0x0222EC40 MOV X0, X22
	0x0222EC44 BLR X8
	0x0222EC48 MOV X0, X23
	0x0222EC4C MOV X1, X31
	0x0222EC50 BL 0x380289C
	0x0222EC54 LDR X8, [X19 + 0x38]
	0x0222EC58 LDR X1, [X20 + 0x30]
	0x0222EC5C MOV X0, X21
	0x0222EC60 MOV V0.16B, V9.16B
	0x0222EC64 LDR X2, [X8 + 0x18]
	0x0222EC68 MOV V1.16B, V8.16B
	0x0222EC6C BL 0x21FDFF4
	0x0222EC70 ADRP X8, 0x1EED000
	0x0222EC74 LDR X8, [X8 + 0x270]
	0x0222EC78 LDR X19, [X20 + 0x30]
	0x0222EC7C LDR X0, [X8]
	0x0222EC80 LDR W8, [X0 + 0xE0]
	0x0222EC84 CBNZ W8, 0x222EC8C
	0x0222EC88 BL 0x1C16DFC
	0x0222EC8C MOV X0, X19
	0x0222EC90 LDP X20, X19, [X31 + 0x30]
	0x0222EC94 LDP X22, X21, [X31 + 0x20]
	0x0222EC98 LDP X30, X23, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+56]
	006 Move X19, X2
	007 Move X20, X1
	008 Move X21, X0
	009 Compare X8, 0
	010 JumpIfNotEqual {13}
	011 Move X0, X19
	012 Call 0x1C5D6E0
	013 Compare X21, 0
	014 JumpIfEqual {38}
	015 Compare X20, 0
	016 JumpIfEqual {45}
	017 Move X8, [X19+56]
	018 Move X0, [X8+16]
	019 Move W8, [X0+309]
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {25}
	024 Call 0x1C5D684
	025 Call 0x1C17F10
	026 Move X8, [X19+56]
	027 Move X1, X21
	028 Move X2, X20
	029 Move X19, X0
	030 Move X3, [X8+24]
	031 Call 0x25DAACC, X0, X1, X2
	032 Move X0, X19
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Move X21, [X31+40]
	037 Return X0
	038 Move X0, 0x1ECB000
	039 Move X0, [X0+1320]
	040 Call 0x1C17D08
	041 Call 0x1C17F10
	042 Move X20, X0
	043 Move X0, 0x1ED1000
	044 Move X0, [X0+1408]
	045 Move X0, 0x1ECB000
	046 Move X0, [X0+1320]
	047 Call 0x1C17D08
	048 Call 0x1C17F10
	049 Move X20, X0
	050 Move X0, 0x1EEF000
	051 Move X0, [X0+488]
	052 Call 0x1C17D08
	053 Move X1, X0
	054 Move X0, X20
	055 Move X2, X31
	056 Call ArgumentNullException..ctor, X0, X1
	057 Move X0, X20
	058 Move X1, X19
	059 Call 0x1C17DEC

Method: System.IObservable`1<TResult> SelectMany(System.IObservable`1<TSource> source, System.Func`2<TSource, System.Collections.Generic.IEnumerable`1<TResult>> filter)

Disassembly:
	0x0222ED68 MOVZ W1, 0x3
	0x0222ED6C MOV X0, X21
	0x0222ED70 MOV X2, X20
	0x0222ED74 BL 0x1993444
	0x0222ED78 MOV X0, X21
	0x0222ED7C BL 0x19903C0
	0x0222ED80 ADRP X0, 0x1EEE000
	0x0222ED84 LDR X0, [X0 + 0x200]
	0x0222ED88 BL 0x1C16D08
	0x0222ED8C MOV X2, X0
	0x0222ED90 MOVZ W1, 0x4
	0x0222ED94 MOV X0, X21
	0x0222ED98 BL 0x1993444
	0x0222ED9C LDR X8, [X19 + 0x38]
	0x0222EDA0 ADRP X0, 0x1EC5000
	0x0222EDA4 LDR X20, [X8 + 0x8]
	0x0222EDA8 LDR X0, [X0 + 0x6C0]
	0x0222EDAC BL 0x1C16D08
	0x0222EDB0 BL 0x19903D0
	0x0222EDB4 MOV X0, X20
	0x0222EDB8 MOV X1, X31
	0x0222EDBC BL 0x338C698
	0x0222EDC0 MOV X20, X0
	0x0222EDC4 BL 0x19903C0
	0x0222EDC8 LDR X8, [X20]
	0x0222EDCC MOV X0, X20
	0x0222EDD0 LDP X9, X1, [X8 + 0x1A8]
	0x0222EDD4 BLR X9
	0x0222EDD8 MOV X20, X0
	0x0222EDDC MOV X0, X21
	0x0222EDE0 BL 0x19903C0
	0x0222EDE4 MOVZ W1, 0x5
	0x0222EDE8 MOV X0, X21
	0x0222EDEC MOV X2, X20
	0x0222EDF0 BL 0x1993444
	0x0222EDF4 MOV X0, X21
	0x0222EDF8 MOV X1, X31
	0x0222EDFC BL 0x32278CC
	0x0222EE00 MOV X20, X0
	0x0222EE04 ADRP X0, 0x1ECD000
	0x0222EE08 LDR X0, [X0 + 0x578]
	0x0222EE0C BL 0x1C16D08
	0x0222EE10 BL 0x1C16F10
	0x0222EE14 MOV X21, X0
	0x0222EE18 ADRP X0, 0x1ECF000
	0x0222EE1C LDR X0, [X0 + 0xEC8]
	0x0222EE20 BL 0x1C16D08
	0x0222EE24 MOV X2, X0
	0x0222EE28 MOV X0, X21
	0x0222EE2C MOV X1, X20
	0x0222EE30 MOV X3, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+56]
	006 Move X19, X2
	007 Move X20, X1
	008 Move X21, X0
	009 Compare X8, 0
	010 JumpIfNotEqual {13}
	011 Move X0, X19
	012 Call 0x1C5D6E0
	013 Compare X21, 0
	014 JumpIfEqual {39}
	015 Compare X20, 0
	016 JumpIfEqual {46}
	017 Move X8, [X19+56]
	018 Move X0, [X8+16]
	019 Move W8, [X0+309]
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {25}
	024 Call 0x1C5D684
	025 Call 0x1C17F10
	026 Move X8, [X19+56]
	027 Move X1, X21
	028 Move X2, X20
	029 Move X19, X0
	030 Move X3, [X8+24]
	031 Move X8, [X3]
	032 NotImplemented "Instruction BLR not yet implemented."
	033 Move X0, X19
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X30, [X31+32]
	037 Move X21, [X31+40]
	038 Return X0
	039 Move X0, 0x1ECB000
	040 Move X0, [X0+1320]
	041 Call 0x1C17D08
	042 Call 0x1C17F10
	043 Move X20, X0
	044 Move X0, 0x1ED1000
	045 Move X0, [X0+1408]
	046 Move X0, 0x1ECB000
	047 Move X0, [X0+1320]
	048 Call 0x1C17D08
	049 Call 0x1C17F10
	050 Move X20, X0
	051 Move X0, 0x1EEF000
	052 Move X0, [X0+488]
	053 Call 0x1C17D08
	054 Move X1, X0
	055 Move X0, X20
	056 Move X2, X31
	057 Call ArgumentNullException..ctor, X0, X1
	058 Move X0, X20
	059 Move X1, X19
	060 Call 0x1C17DEC

Method: System.IObservable`1<TValue> Take(System.IObservable`1<TValue> source, System.Int32 count)

Disassembly:
	0x0222EE34 BL 0x330E16C
	0x0222EE38 MOV X0, X21
	0x0222EE3C MOV X1, X19
	0x0222EE40 BL 0x1C16DEC
	0x0222EE44 BL 0x1C16F20
	0x0222EE48 STP X29, X30, [X31 - 0x60]!
	0x0222EE4C STR X27, [X31 + 0x10]
	0x0222EE50 STP X26, X25, [X31 + 0x20]
	0x0222EE54 STP X24, X23, [X31 + 0x30]
	0x0222EE58 STP X22, X21, [X31 + 0x40]
	0x0222EE5C STP X20, X19, [X31 + 0x50]
	0x0222EE60 ADD X29, X31, 0x0
	0x0222EE64 SUB X31, X31, 0x30
	0x0222EE68 MRS X26, 0xC000
	0x0222EE6C LDR X8, [X26 + 0x28]
	0x0222EE70 MOV X19, X2
	0x0222EE74 MOV X21, X1
	0x0222EE78 MOV X20, X0
	0x0222EE7C STUR X8, [X29 - 0x8]
	0x0222EE80 LDR X8, [X2 + 0x38]
	0x0222EE84 CBNZ X8, 0x222EEC0
	0x0222EE88 ADRP X0, 0x1EED000
	0x0222EE8C LDR X0, [X0 + 0xED0]
	0x0222EE90 BL 0x1C16CF4
	0x0222EE94 ADRP X0, 0x1EED000
	0x0222EE98 LDR X0, [X0 + 0xEC8]
	0x0222EE9C BL 0x1C16CF4
	0x0222EEA0 ADRP X0, 0x1EED000
	0x0222EEA4 LDR X0, [X0 + 0x270]
	0x0222EEA8 BL 0x1C16CF4
	0x0222EEAC LDR X8, [X19 + 0x38]
	0x0222EEB0 CBNZ X8, 0x222EEC0
	0x0222EEB4 MOV X0, X19
	0x0222EEB8 BL 0x1C5C6E0
	0x0222EEBC LDR X8, [X19 + 0x38]
	0x0222EEC0 LDR X9, [X8 + 0x10]
	0x0222EEC4 LDR W23, [X9 + 0xFC]
	0x0222EEC8 ADD X9, X31, 0x0
	0x0222EECC ADD X10, X23, 0xF
	0x0222EED0 AND X10, X10, 0x1FFFFFFFF
	0x0222EED4 SUB X22, X9, X10
	0x0222EED8 ADD X31, X22, 0x0
	0x0222EEDC LDR X27, [X20 + 0x20]
	0x0222EEE0 CBZ X27, 0x222F010
	0x0222EEE4 LDR X0, [X8]
	0x0222EEE8 LDRB W8, [X0 + 0x135]
	0x0222EEEC TBNZ X8, 0x0, 0x222EEF4
	0x0222EEF0 BL 0x1C5C684
	0x0222EEF4 LDR X8, [X27]
	0x0222EEF8 LDRB W9, [X0 + 0x130]
	0x0222EEFC LDRB W10, [X8 + 0x130]
	0x0222EF00 CMP W10, W9
	0x0222EF04 B.CC 0x222F040
	0x0222EF08 LDR X8, [X8 + 0xC8]
	0x0222EF0C ADD X8, X8, X9, 0x3, LSL
	0x0222EF10 LDUR X8, [X8 - 0x8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+56]
	006 Move X19, X2
	007 Move W20, W1
	008 Move X21, X0
	009 Compare X8, 0
	010 JumpIfNotEqual {13}
	011 Move X0, X19
	012 Call 0x1C5D6E0
	013 Compare X21, 0
	014 JumpIfEqual {41}
	015 Move TEMP, X20
	016 And TEMP, TEMP, -2147483648
	017 Compare TEMP, -2147483648
	018 JumpIfEqual {53}
	019 Move X8, [X19+56]
	020 Move X0, [X8+8]
	021 Move W8, [X0+309]
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {27}
	026 Call 0x1C5D684
	027 Call 0x1C17F10
	028 Move X8, [X19+56]
	029 Move X1, X21
	030 Move W2, W20
	031 Move X19, X0
	032 Move X3, [X8+16]
	033 Move X8, [X3]
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move X0, X19
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move X30, [X31+32]
	039 Move X21, [X31+40]
	040 Return X0
	041 Move X0, 0x1ECB000
	042 Move X0, [X0+1320]
	043 Call 0x1C17D08
	044 Call 0x1C17F10
	045 Move X20, X0
	046 Move X0, 0x1ED1000
	047 Move X0, [X0+1408]
	048 Call 0x1C17D08
	049 Move X1, X0
	050 Move X0, X20
	051 Move X2, X31
	052 Call ArgumentNullException..ctor, X0, X1
	053 Move X0, 0x1ECE000
	054 Move X0, [X0+1888]
	055 Call 0x1C17D08
	056 Call 0x1C17F10
	057 Move X20, X0
	058 Move X0, 0x1EEE000
	059 Move X0, [X0+1608]
	060 Call 0x1C17D08
	061 Move X1, X0
	062 Move X0, X20
	063 Move X2, X31
	064 Call ArgumentOutOfRangeException..ctor, X0, X1
	065 Move X0, X20
	066 Move X1, X19
	067 Call 0x1C17DEC

Method: System.IObservable`1<UnityEngine.InputSystem.LowLevel.InputEventPtr> ForDevice(System.IObservable`1<UnityEngine.InputSystem.LowLevel.InputEventPtr> source, UnityEngine.InputSystem.InputDevice device)

Disassembly:
	0x03766150 LDR X9, [X24]
	0x03766154 CMP X8, X9
	0x03766158 B.EQ 0x3766368
	0x0376615C ADRP X25, 0x98D000
	0x03766160 LDR X25, [X25 + 0x758]
	0x03766164 LDR X9, [X25]
	0x03766168 CMP X8, X9
	0x0376616C B.EQ 0x376647C
	0x03766170 ADRP X26, 0x995000
	0x03766174 LDR X26, [X26 + 0x720]
	0x03766178 LDR X9, [X26]
	0x0376617C CMP X8, X9
	0x03766180 B.EQ 0x37664E4
	0x03766184 ADRP X27, 0x98F000
	0x03766188 LDR X27, [X27 + 0xA60]
	0x0376618C LDR X9, [X27]
	0x03766190 CMP X8, X9
	0x03766194 B.EQ 0x3766380
	0x03766198 ADRP X28, 0x98E000
	0x0376619C LDR X28, [X28 + 0x758]
	0x037661A0 LDR X9, [X28]
	0x037661A4 CMP X8, X9
	0x037661A8 B.EQ 0x3766398
	0x037661AC ADRP X9, 0x98D000
	0x037661B0 LDR X9, [X9 + 0xA90]
	0x037661B4 LDR X9, [X9]
	0x037661B8 CMP X8, X9
	0x037661BC B.EQ 0x37663B8
	0x037661C0 ADRP X9, 0x990000
	0x037661C4 LDR X9, [X9 + 0x978]
	0x037661C8 LDR X9, [X9]
	0x037661CC CMP X8, X9
	0x037661D0 B.EQ 0x37663D8
	0x037661D4 ADRP X9, 0x98D000
	0x037661D8 LDR X9, [X9 + 0xDF8]
	0x037661DC LDRB W11, [X8 + 0x130]
	0x037661E0 LDR X9, [X9]
	0x037661E4 LDRB W10, [X9 + 0x130]
	0x037661E8 CMP W11, W10
	0x037661EC B.CC 0x3766560
	0x037661F0 LDR X8, [X8 + 0xC8]
	0x037661F4 ADD X8, X8, X10, 0x3, LSL
	0x037661F8 LDUR X8, [X8 - 0x8]
	0x037661FC CMP X8, X9

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xC7B000
	006 Move W8, [X21+3698]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x9B7000
	014 Move X0, [X0+480]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+3698], W8
	018 Compare X20, 0
	019 JumpIfEqual {36}
	020 Move X8, 0x9B7000
	021 Move X8, [X8+480]
	022 Move X0, [X8]
	023 Call 0x1C17F10
	024 Move X1, X31
	025 Move X21, X0
	026 Call Object..ctor, X0
	027 Move [X21+24], X19
	028 Move [X21+32], X31
	029 Move [X21+16], X20
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X0, X21
	033 Move X30, [X31+32]
	034 Move X21, [X31+40]
	035 Return X0
	036 Move X0, 0x993000
	037 Move X0, [X0+1320]
	038 Call 0x1C17D08
	039 Call 0x1C17F10
	040 Move X19, X0
	041 Move X0, 0x999000
	042 Move X0, [X0+1408]
	043 Call 0x1C17D08
	044 Move X1, X0
	045 Move X0, X19
	046 Move X2, X31
	047 Call ArgumentNullException..ctor, X0, X1
	048 Move X0, 0x9E1000
	049 Move X0, [X0+1176]
	050 Call 0x1C17D08
	051 Move X1, X0
	052 Move X0, X19
	053 Call 0x1C17DEC

Method: System.IObservable`1<UnityEngine.InputSystem.LowLevel.InputEventPtr> ForDevice(System.IObservable`1<UnityEngine.InputSystem.LowLevel.InputEventPtr> source)

Disassembly:
	0x0222EAE8 LDR X0, [X0 + 0xEC8]
	0x0222EAEC BL 0x1C16D08
	0x0222EAF0 MOV X2, X0
	0x0222EAF4 MOV X0, X21
	0x0222EAF8 MOV X1, X20
	0x0222EAFC MOV X3, X31
	0x0222EB00 BL 0x330E16C
	0x0222EB04 MOV X0, X21
	0x0222EB08 MOV X1, X19
	0x0222EB0C BL 0x1C16DEC
	0x0222EB10 BL 0x1C16F20
	0x0222EB14 STP D9, D8, [X31 - 0x40]!
	0x0222EB18 STP X30, X23, [X31 + 0x10]
	0x0222EB1C STP X22, X21, [X31 + 0x20]
	0x0222EB20 STP X20, X19, [X31 + 0x30]
	0x0222EB24 LDR X8, [X1 + 0x38]
	0x0222EB28 MOV X19, X1
	0x0222EB2C MOV V8.16B, V1.16B
	0x0222EB30 MOV V9.16B, V0.16B
	0x0222EB34 MOV X20, X0
	0x0222EB38 CBNZ X8, 0x222EB70
	0x0222EB3C ADRP X0, 0x1EED000
	0x0222EB40 LDR X0, [X0 + 0xED0]
	0x0222EB44 BL 0x1C16CF4
	0x0222EB48 ADRP X0, 0x1EED000
	0x0222EB4C LDR X0, [X0 + 0xEC8]
	0x0222EB50 BL 0x1C16CF4
	0x0222EB54 ADRP X0, 0x1EED000
	0x0222EB58 LDR X0, [X0 + 0x270]
	0x0222EB5C BL 0x1C16CF4
	0x0222EB60 LDR X8, [X19 + 0x38]
	0x0222EB64 CBNZ X8, 0x222EB70
	0x0222EB68 MOV X0, X19
	0x0222EB6C BL 0x1C5C6E0
	0x0222EB70 LDR X21, [X20 + 0x20]
	0x0222EB74 CBZ X21, 0x222EC18
	0x0222EB78 LDR X8, [X19 + 0x38]
	0x0222EB7C LDR X0, [X8]
	0x0222EB80 LDRB W8, [X0 + 0x135]
	0x0222EB84 TBNZ X8, 0x0, 0x222EB8C
	0x0222EB88 BL 0x1C5C684
	0x0222EB8C LDR X8, [X21]
	0x0222EB90 LDRB W9, [X0 + 0x130]
	0x0222EB94 LDRB W10, [X8 + 0x130]
	0x0222EB98 CMP W10, W9
	0x0222EB9C B.CC 0x222ECA8
	0x0222EBA0 LDR X8, [X8 + 0xC8]
	0x0222EBA4 ADD X8, X8, X9, 0x3, LSL
	0x0222EBA8 LDUR X8, [X8 - 0x8]
	0x0222EBAC CMP X8, X0
	0x0222EBB0 B.NE 0x222ECA8
	0x0222EBB4 ADRP X8, 0x1EED000
	0x0222EBB8 LDR X8, [X8 + 0xEC8]
	0x0222EBBC LDR X8, [X8]
	0x0222EBC0 LDR X8, [X8 + 0xB8]
	0x0222EBC4 LDR X22, [X8]
	0x0222EBC8 CBZ X22, 0x222EE44
	0x0222EBCC ADRP X10, 0x1EED000
	0x0222EBD0 LDR X8, [X22]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X1+56]
	006 Move X19, X1
	007 Move X20, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {21}
	010 Move X0, 0x1EEF000
	011 Move X0, [X0+480]
	012 Call 0x1C17CF4
	013 Move X0, 0x1EC6000
	014 Move X0, [X0+1728]
	015 Call 0x1C17CF4
	016 Move X8, [X19+56]
	017 Compare X8, 0
	018 JumpIfNotEqual {21}
	019 Move X0, X19
	020 Call 0x1C5D6E0
	021 Compare X20, 0
	022 JumpIfEqual {53}
	023 Move X8, 0x1EC6000
	024 Move X8, [X8+1728]
	025 Move X0, [X8]
	026 Move X8, [X19+56]
	027 Move W9, [X0+224]
	028 Move X19, [X8]
	029 Compare W9, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Move X0, X19
	033 Move X1, X31
	034 Call Type.GetTypeFromHandle, X0
	035 Move X8, 0x1EEF000
	036 Move X8, [X8+480]
	037 Move X19, X0
	038 Move X8, [X8]
	039 Move X0, X8
	040 Call 0x1C17F10
	041 Move X1, X20
	042 Move X2, X19
	043 Move X3, X31
	044 Move X4, X31
	045 Move X21, X0
	046 Call ForDeviceEventObservable..ctor, X0, X1, X2, X3
	047 Move X20, [X31+16]
	048 Move X19, [X31+24]
	049 Move X0, X21
	050 Move X30, [X31+32]
	051 Move X21, [X31+40]
	052 Return X0
	053 Move X0, 0x1ECB000
	054 Move X0, [X0+1320]
	055 Call 0x1C17D08
	056 Call 0x1C17F10
	057 Move X20, X0
	058 Move X0, 0x1ED1000
	059 Move X0, [X0+1408]
	060 Call 0x1C17D08
	061 Move X1, X0
	062 Move X0, X20
	063 Move X2, X31
	064 Call ArgumentNullException..ctor, X0, X1
	065 Move X0, X20
	066 Move X1, X19
	067 Call 0x1C17DEC

Method: System.IDisposable CallOnce(System.IObservable`1<TValue> source, System.Action`1<TValue> action)

Disassembly:
	0x0222E900 ADD W9, W9, 0x13
	0x0222E904 ADD X8, X8, W9, 0x4, SXTW
	0x0222E908 ADD X0, X8, 0x138
	0x0222E90C LDP X8, X1, [X0]
	0x0222E910 MOV X0, X22
	0x0222E914 BLR X8
	0x0222E918 MOV X0, X23
	0x0222E91C MOV X1, X31
	0x0222E920 BL 0x380289C
	0x0222E924 LDR X8, [X19 + 0x38]
	0x0222E928 LDR X1, [X20 + 0x30]
	0x0222E92C MOV X0, X21
	0x0222E930 MOV V0.16B, V8.16B
	0x0222E934 LDR X2, [X8 + 0x18]
	0x0222E938 BL 0x21FDF20
	0x0222E93C ADRP X8, 0x1EED000
	0x0222E940 LDR X8, [X8 + 0x270]
	0x0222E944 LDR X19, [X20 + 0x30]
	0x0222E948 LDR X0, [X8]
	0x0222E94C LDR W8, [X0 + 0xE0]
	0x0222E950 CBNZ W8, 0x222E958
	0x0222E954 BL 0x1C16DFC
	0x0222E958 MOV X0, X19
	0x0222E95C LDP X20, X19, [X31 + 0x30]
	0x0222E960 LDP X22, X21, [X31 + 0x20]
	0x0222E964 LDP X30, X23, [X31 + 0x10]
	0x0222E968 MOV X1, X31
	0x0222E96C LDR V8, [X31], #0x40
	0x0222E970 B 0x376FAF0
	0x0222E974 ADRP X0, 0x1EC5000
	0x0222E978 LDR X0, [X0 + 0xAC8]
	0x0222E97C BL 0x1C16D08
	0x0222E980 MOVZ W1, 0x6
	0x0222E984 BL 0x1C16D6C
	0x0222E988 MOV X21, X0
	0x0222E98C BL 0x19903C0
	0x0222E990 ADRP X0, 0x1EEE000
	0x0222E994 LDR X0, [X0 + 0x1F0]
	0x0222E998 BL 0x1C16D08
	0x0222E99C MOV X2, X0
	0x0222E9A0 MOV X0, X21
	0x0222E9A4 MOV X1, X31
	0x0222E9A8 BL 0x1993444
	0x0222E9AC MOV X0, X20
	0x0222E9B0 MOV X1, X31
	0x0222E9B4 BL 0x37EE574
	0x0222E9B8 MOV X22, X0
	0x0222E9BC MOV X0, X21
	0x0222E9C0 BL 0x19903C0
	0x0222E9C4 MOVZ W1, 0x1
	0x0222E9C8 MOV X0, X21
	0x0222E9CC MOV X2, X22
	0x0222E9D0 BL 0x1993444
	0x0222E9D4 MOV X0, X21
	0x0222E9D8 BL 0x19903C0
	0x0222E9DC ADRP X0, 0x1EEE000
	0x0222E9E0 LDR X0, [X0 + 0x1F8]
	0x0222E9E4 BL 0x1C16D08
	0x0222E9E8 MOV X2, X0
	0x0222E9EC MOVZ W1, 0x2
	0x0222E9F0 MOV X0, X21
	0x0222E9F4 BL 0x1993444
	0x0222E9F8 LDR X20, [X20 + 0x20]
	0x0222E9FC MOV X0, X20
	0x0222EA00 BL 0x19903C0
	0x0222EA04 MOV X0, X20
	0x0222EA08 MOV X1, X31
	0x0222EA0C BL 0x33BE520
	0x0222EA10 MOV X20, X0
	0x0222EA14 BL 0x19903C0
	0x0222EA18 LDR X8, [X20]
	0x0222EA1C MOV X0, X20
	0x0222EA20 LDP X9, X1, [X8 + 0x1A8]
	0x0222EA24 BLR X9
	0x0222EA28 MOV X20, X0
	0x0222EA2C MOV X0, X21
	0x0222EA30 BL 0x19903C0
	0x0222EA34 MOVZ W1, 0x3
	0x0222EA38 MOV X0, X21
	0x0222EA3C MOV X2, X20
	0x0222EA40 BL 0x1993444
	0x0222EA44 MOV X0, X21
	0x0222EA48 BL 0x19903C0
	0x0222EA4C ADRP X0, 0x1EEE000
	0x0222EA50 LDR X0, [X0 + 0x200]
	0x0222EA54 BL 0x1C16D08
	0x0222EA58 MOV X2, X0
	0x0222EA5C MOVZ W1, 0x4
	0x0222EA60 MOV X0, X21
	0x0222EA64 BL 0x1993444
	0x0222EA68 LDR X8, [X19 + 0x38]
	0x0222EA6C ADRP X0, 0x1EC5000
	0x0222EA70 LDR X20, [X8 + 0x8]
	0x0222EA74 LDR X0, [X0 + 0x6C0]
	0x0222EA78 BL 0x1C16D08
	0x0222EA7C BL 0x19903D0
	0x0222EA80 MOV X0, X20
	0x0222EA84 MOV X1, X31
	0x0222EA88 BL 0x338C698
	0x0222EA8C MOV X20, X0
	0x0222EA90 BL 0x19903C0
	0x0222EA94 LDR X8, [X20]
	0x0222EA98 MOV X0, X20
	0x0222EA9C LDP X9, X1, [X8 + 0x1A8]
	0x0222EAA0 BLR X9
	0x0222EAA4 MOV X20, X0
	0x0222EAA8 MOV X0, X21
	0x0222EAAC BL 0x19903C0
	0x0222EAB0 MOVZ W1, 0x5
	0x0222EAB4 MOV X0, X21
	0x0222EAB8 MOV X2, X20
	0x0222EABC BL 0x1993444
	0x0222EAC0 MOV X0, X21
	0x0222EAC4 MOV X1, X31
	0x0222EAC8 BL 0x32278CC
	0x0222EACC MOV X20, X0
	0x0222EAD0 ADRP X0, 0x1ECD000
	0x0222EAD4 LDR X0, [X0 + 0x578]
	0x0222EAD8 BL 0x1C16D08
	0x0222EADC BL 0x1C16F10
	0x0222EAE0 MOV X21, X0
	0x0222EAE4 ADRP X0, 0x1ECF000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X8, [X2+56]
	009 Move X19, X2
	010 Move X21, X1
	011 Move X22, X0
	012 Compare X8, 0
	013 JumpIfNotEqual {23}
	014 Move X0, 0x1EC7000
	015 Move X0, [X0+3696]
	016 Call 0x1C17CF4
	017 Move X8, [X19+56]
	018 Compare X8, 0
	019 JumpIfNotEqual {23}
	020 Move X0, X19
	021 Call 0x1C5D6E0
	022 Move X8, [X19+56]
	023 Move X0, [X8]
	024 Move W8, [X0+309]
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {30}
	029 Call 0x1C5D684
	030 Call 0x1C17F10
	031 Move X8, [X19+56]
	032 Move X20, X0
	033 Move X1, [X8+8]
	034 Move X8, [X1]
	035 NotImplemented "Instruction BLR not yet implemented."
	036 Compare X22, 0
	037 JumpIfEqual {120}
	038 Compare X21, 0
	039 JumpIfEqual {127}
	040 Compare X20, 0
	041 JumpIfEqual {119}
	042 Move [X20+16], X31
	043 Move X8, [X19+56]
	044 Move W1, 1
	045 Move X0, X22
	046 Move X2, [X8+32]
	047 Move X8, [X2]
	048 NotImplemented "Instruction BLR not yet implemented."
	049 Move X8, 0x1EC7000
	050 Move X8, [X8+3696]
	051 Move X22, X0
	052 Move X8, [X8]
	053 Move X0, X8
	054 Call 0x1C17F10
	055 Move X8, [X19+56]
	056 Move X1, X20
	057 Move X3, X31
	058 Move X24, X0
	059 Move X2, [X8+40]
	060 Call Action..ctor, X0, X1, X2
	061 Move X8, [X19+56]
	062 Move X0, [X8+48]
	063 Move W8, [X0+309]
	064 Move TEMP, X8
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfEqual {69}
	068 Call 0x1C5D684
	069 Call 0x1C17F10
	070 Move X8, [X19+56]
	071 Move X1, X21
	072 Move X2, X24
	073 Move X23, X0
	074 Move X3, [X8+56]
	075 Move X8, [X3]
	076 NotImplemented "Instruction BLR not yet implemented."
	077 Compare X22, 0
	078 JumpIfEqual {119}
	079 Move X8, [X19+56]
	080 Move X1, [X8+16]
	081 Move W8, [X1+309]
	082 Move TEMP, X8
	083 And TEMP, TEMP, 1
	084 Compare TEMP, 1
	085 JumpIfEqual {89}
	086 Move X0, X1
	087 Call 0x1C5D684
	088 Move X1, X0
	089 Move X8, [X22]
	090 NotImplemented "Instruction LDRH not yet implemented."
	091 Compare X9, 0
	092 JumpIfEqual {99}
	093 Move X10, [X8+176]
	094 Add X10, X10, 8
	095 NotImplemented "Instruction LDUR not yet implemented."
	096 NotImplemented "Instruction CMP not yet implemented."
	097 Subtract X9, X9, 1
	098 Add X10, X10, 16
	099 Move X0, X22
	100 Move W2, W31
	101 Call 0x1C5D788
	102 NotImplemented "Instruction LDRSW not yet implemented."
	103 Add X8, X8, X9
	104 Add X0, X8, 312
	105 Move X8, [X0]
	106 Move X2, [X0+8]
	107 Move X0, X22
	108 Move X1, X23
	109 NotImplemented "Instruction BLR not yet implemented."
	110 Move [X20+16], X0
	111 Move X20, [X31+48]
	112 Move X19, [X31+56]
	113 Move X22, [X31+32]
	114 Move X21, [X31+40]
	115 Move X24, [X31+16]
	116 Move X23, [X31+24]
	117 Move X30, [X31+64]
	118 Return X0
	119 Call 0x1C17F20
	120 Move X0, 0x1ECB000
	121 Move X0, [X0+1320]
	122 Call 0x1C17D08
	123 Call 0x1C17F10
	124 Move X20, X0
	125 Move X0, 0x1ED1000
	126 Move X0, [X0+1408]
	127 Move X0, 0x1ECB000
	128 Move X0, [X0+1320]
	129 Call 0x1C17D08
	130 Call 0x1C17F10
	131 Move X20, X0
	132 Move X0, 0x1EEE000
	133 Move X0, [X0+3064]
	134 Call 0x1C17D08
	135 Move X1, X0
	136 Move X0, X20
	137 Move X2, X31
	138 Call ArgumentNullException..ctor, X0, X1
	139 Move X0, X20
	140 Move X1, X19
	141 Call 0x1C17DEC

Method: System.IDisposable Call(System.IObservable`1<TValue> source, System.Action`1<TValue> action)

Disassembly:
	0x0222E7C0 LDP X20, X19, [X31 + 0x50]
	0x0222E7C4 LDP X22, X21, [X31 + 0x40]
	0x0222E7C8 LDP X24, X23, [X31 + 0x30]
	0x0222E7CC LDP X26, X25, [X31 + 0x20]
	0x0222E7D0 LDR X27, [X31 + 0x10]
	0x0222E7D4 LDP X29, X30, [X31], #0x60
	0x0222E7D8 RET
	0x0222E7DC BL 0x1C16F20
	0x0222E7E0 BL 0x1C16F28
	0x0222E7E4 BL 0x3EB1B20
	0x0222E7E8 STR D8, [X31 - 0x40]!
	0x0222E7EC STP X30, X23, [X31 + 0x10]
	0x0222E7F0 STP X22, X21, [X31 + 0x20]
	0x0222E7F4 STP X20, X19, [X31 + 0x30]
	0x0222E7F8 LDR X8, [X1 + 0x38]
	0x0222E7FC MOV X19, X1
	0x0222E800 MOV V8.16B, V0.16B
	0x0222E804 MOV X20, X0
	0x0222E808 CBNZ X8, 0x222E840
	0x0222E80C ADRP X0, 0x1EED000
	0x0222E810 LDR X0, [X0 + 0xED0]
	0x0222E814 BL 0x1C16CF4
	0x0222E818 ADRP X0, 0x1EED000
	0x0222E81C LDR X0, [X0 + 0xEC8]
	0x0222E820 BL 0x1C16CF4
	0x0222E824 ADRP X0, 0x1EED000
	0x0222E828 LDR X0, [X0 + 0x270]
	0x0222E82C BL 0x1C16CF4
	0x0222E830 LDR X8, [X19 + 0x38]
	0x0222E834 CBNZ X8, 0x222E840
	0x0222E838 MOV X0, X19
	0x0222E83C BL 0x1C5C6E0
	0x0222E840 LDR X21, [X20 + 0x20]
	0x0222E844 CBZ X21, 0x222E8E8
	0x0222E848 LDR X8, [X19 + 0x38]
	0x0222E84C LDR X0, [X8]
	0x0222E850 LDRB W8, [X0 + 0x135]
	0x0222E854 TBNZ X8, 0x0, 0x222E85C
	0x0222E858 BL 0x1C5C684
	0x0222E85C LDR X8, [X21]
	0x0222E860 LDRB W9, [X0 + 0x130]
	0x0222E864 LDRB W10, [X8 + 0x130]
	0x0222E868 CMP W10, W9
	0x0222E86C B.CC 0x222E974
	0x0222E870 LDR X8, [X8 + 0xC8]
	0x0222E874 ADD X8, X8, X9, 0x3, LSL
	0x0222E878 LDUR X8, [X8 - 0x8]
	0x0222E87C CMP X8, X0
	0x0222E880 B.NE 0x222E974
	0x0222E884 ADRP X8, 0x1EED000
	0x0222E888 LDR X8, [X8 + 0xEC8]
	0x0222E88C LDR X8, [X8]
	0x0222E890 LDR X8, [X8 + 0xB8]
	0x0222E894 LDR X22, [X8]
	0x0222E898 CBZ X22, 0x222EB10
	0x0222E89C ADRP X10, 0x1EED000
	0x0222E8A0 LDR X8, [X22]
	0x0222E8A4 LDR X10, [X10 + 0xED0]
	0x0222E8A8 ADD X23, X20, 0x30
	0x0222E8AC LDRH W9, [X8 + 0x12E]
	0x0222E8B0 LDR X1, [X10]
	0x0222E8B4 CBZ X9, 0x222E8D8
	0x0222E8B8 LDR X10, [X8 + 0xB0]
	0x0222E8BC ADD X10, X10, 0x8
	0x0222E8C0 LDUR X11, [X10 - 0x8]
	0x0222E8C4 CMP X11, X1
	0x0222E8C8 B.EQ 0x222E8FC
	0x0222E8CC SUBS X9, X9, 0x1
	0x0222E8D0 ADD X10, X10, 0x10
	0x0222E8D4 B.NE 0x222E8C0
	0x0222E8D8 MOVZ W2, 0x13
	0x0222E8DC MOV X0, X22
	0x0222E8E0 BL 0x1C5C788
	0x0222E8E4 B 0x222E90C
	0x0222E8E8 LDP X20, X19, [X31 + 0x30]
	0x0222E8EC LDP X22, X21, [X31 + 0x20]
	0x0222E8F0 LDP X30, X23, [X31 + 0x10]
	0x0222E8F4 LDR V8, [X31], #0x40
	0x0222E8F8 RET
	0x0222E8FC LDR W9, [X10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X2+56]
	007 Move X20, X2
	008 Move X22, X1
	009 Move X19, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {14}
	012 Move X0, X20
	013 Call 0x1C5D6E0
	014 Compare X19, 0
	015 JumpIfEqual {70}
	016 Compare X22, 0
	017 JumpIfEqual {77}
	018 Move X8, [X20+56]
	019 Move X0, [X8+16]
	020 Move W8, [X0+309]
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {26}
	025 Call 0x1C5D684
	026 Call 0x1C17F10
	027 Move X8, [X20+56]
	028 Move X1, X22
	029 Move X2, X31
	030 Move X21, X0
	031 Move X3, [X8+24]
	032 Move X8, [X3]
	033 NotImplemented "Instruction BLR not yet implemented."
	034 Move X8, [X20+56]
	035 Move X1, [X8]
	036 Move W8, [X1+309]
	037 Move TEMP, X8
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfEqual {44}
	041 Move X0, X1
	042 Call 0x1C5D684
	043 Move X1, X0
	044 Move X8, [X19]
	045 NotImplemented "Instruction LDRH not yet implemented."
	046 Compare X9, 0
	047 JumpIfEqual {54}
	048 Move X10, [X8+176]
	049 Add X10, X10, 8
	050 NotImplemented "Instruction LDUR not yet implemented."
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Subtract X9, X9, 1
	053 Add X10, X10, 16
	054 Move X0, X19
	055 Move W2, W31
	056 Call 0x1C5D788
	057 NotImplemented "Instruction LDRSW not yet implemented."
	058 Add X8, X8, X9
	059 Add X0, X8, 312
	060 Move X3, [X0]
	061 Move X2, [X0+8]
	062 Move X0, X19
	063 Move X1, X21
	064 Move X20, [X31+32]
	065 Move X19, [X31+40]
	066 Move X22, [X31+16]
	067 Move X21, [X31+24]
	068 Move X30, [X31+48]
	069 CallNoReturn X3
	070 Move X0, 0x1ECB000
	071 Move X0, [X0+1320]
	072 Call 0x1C17D08
	073 Call 0x1C17F10
	074 Move X19, X0
	075 Move X0, 0x1ED1000
	076 Move X0, [X0+1408]
	077 Move X0, 0x1ECB000
	078 Move X0, [X0+1320]
	079 Call 0x1C17D08
	080 Call 0x1C17F10
	081 Move X19, X0
	082 Move X0, 0x1EEE000
	083 Move X0, [X0+3064]
	084 Call 0x1C17D08
	085 Move X1, X0
	086 Move X0, X19
	087 Move X2, X31
	088 Call ArgumentNullException..ctor, X0, X1
	089 Move X0, X19
	090 Move X1, X20
	091 Call 0x1C17DEC

