Type: UnityEngine.InputSystem.Utilities.NamedValue

Method: System.String get_name()

Disassembly:
	0x03764BDC RET
	0x03764BE0 UDIV W8, W0, W1

ISIL:
	001 Move X0, [X0]
	002 Return X0

Method: System.Void set_name(System.String value)

Disassembly:
	0x03764BE4 ADD W9, W1, W0
	0x03764BE8 MSUB W8, W8, W1, W0

ISIL:
	001 Move [X0], X1
	002 Return 

Method: UnityEngine.InputSystem.Utilities.PrimitiveValue get_value()

Disassembly:
	0x03764BEC SUB W9, W9, W8
	0x03764BF0 CMP W8, 0x0
	0x03764BF4 CSEL W0, W0, W9, EQ

ISIL:
	001 Move X8, [X0+8]
	002 Move X1, [X0+16]
	003 Move X0, X8
	004 Return X0

Method: System.Void set_value(UnityEngine.InputSystem.Utilities.PrimitiveValue value)

Disassembly:
	0x03764BF8 RET
	0x03764BFC STR D10, [X31 - 0x30]!

ISIL:
	001 Move [X0+8], X1
	002 Move [X0+16], X2
	003 Return 

Method: System.TypeCode get_type()

Disassembly:
	0x03764C00 STP D9, D8, [X31 + 0x8]
	0x03764C04 STR X30, [X31 + 0x18]

ISIL:
	001 Move W0, [X0+8]
	002 Return X0

Method: UnityEngine.InputSystem.Utilities.NamedValue ConvertTo(System.TypeCode type)

Disassembly:
	0x03764C08 STP X20, X19, [X31 + 0x20]
	0x03764C0C ADRP X19, 0xC7C000
	0x03764C10 ADRP X20, 0x98F000
	0x03764C14 LDRB W8, [X19 + 0xE6E]
	0x03764C18 LDR X20, [X20 + 0x5A8]
	0x03764C1C MOV V8.16B, V1.16B
	0x03764C20 MOV V9.16B, V0.16B
	0x03764C24 TBNZ X8, 0x0, 0x3764C3C
	0x03764C28 ADRP X0, 0x98F000
	0x03764C2C LDR X0, [X0 + 0x5A8]
	0x03764C30 BL 0x1C16CF4
	0x03764C34 MOVZ W8, 0x1
	0x03764C38 STRB W8, [X19 + 0xE6E]
	0x03764C3C LDR X0, [X20]
	0x03764C40 LDR W8, [X0 + 0xE0]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+32], X20
	004 Move [X31+40], X19
	005 NotImplemented "Instruction LDUR not yet implemented."
	006 Move X20, [X0]
	007 Add X0, X31, 0
	008 Move X19, X8
	009 Move [X31], V0
	010 Call PrimitiveValue.ConvertTo, X0, X1
	011 Move [X19], X20
	012 Move [X19+8], X0
	013 Move [X19+16], X1
	014 Move X20, [X31+32]
	015 Move X19, [X31+40]
	016 Move X30, [X31+16]
	017 Add X31, X31, 48
	018 Return X0

Method: UnityEngine.InputSystem.Utilities.NamedValue From(System.String name, TValue value)

Disassembly:
	0x022227B8 STP X22, X21, [X31 + 0x20]
	0x022227BC STP X20, X19, [X31 + 0x30]
	0x022227C0 LDR X8, [X4 + 0x38]
	0x022227C4 MOV W19, W3
	0x022227C8 MOV W20, W2
	0x022227CC MOV X21, X1
	0x022227D0 MOV X22, X0
	0x022227D4 CBNZ X8, 0x22227E8
	0x022227D8 MOV X0, X4
	0x022227DC MOV X23, X4
	0x022227E0 BL 0x1C5C6E0
	0x022227E4 LDR X8, [X23 + 0x38]
	0x022227E8 STP X31, X31, [X31]
	0x022227EC LDR X5, [X8 + 0x10]
	0x022227F0 ADD X0, X31, 0x0
	0x022227F4 MOV X1, X22
	0x022227F8 MOV X2, X21
	0x022227FC MOV W3, W20
	0x02222800 MOV W4, W19
	0x02222804 BL 0x2404054
	0x02222808 LDP X0, X1, [X31]
	0x0222280C LDP X20, X19, [X31 + 0x30]
	0x02222810 LDP X22, X21, [X31 + 0x20]
	0x02222814 LDP X30, X23, [X31 + 0x10]
	0x02222818 ADD X31, X31, 0x40
	0x0222281C RET
	0x02222820 SUB X31, X31, 0x40
	0x02222824 STP X30, X23, [X31 + 0x10]
	0x02222828 STP X22, X21, [X31 + 0x20]
	0x0222282C STP X20, X19, [X31 + 0x30]
	0x02222830 LDR X8, [X4 + 0x38]
	0x02222834 MOV W19, W3
	0x02222838 MOV W20, W2
	0x0222283C MOV X21, X1
	0x02222840 MOV X22, X0
	0x02222844 CBNZ X8, 0x2222858
	0x02222848 MOV X0, X4
	0x0222284C MOV X23, X4
	0x02222850 BL 0x1C5C6E0
	0x02222854 LDR X8, [X23 + 0x38]
	0x02222858 STP X31, X31, [X31]
	0x0222285C LDR X5, [X8 + 0x10]
	0x02222860 ADD X0, X31, 0x0
	0x02222864 MOV X1, X22
	0x02222868 MOV X2, X21
	0x0222286C MOV W3, W20
	0x02222870 MOV W4, W19
	0x02222874 BL 0x2404728
	0x02222878 LDP X0, X1, [X31]
	0x0222287C LDP X20, X19, [X31 + 0x30]

ISIL:
	001 Move [X31-64], X29
	002 Move [X31-56], X30
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Add X29, X31, 0
	010 Subtract X31, X31, 32
	011 NotImplemented "Instruction MRS not yet implemented."
	012 Move X9, [X23+40]
	013 Move X21, X1
	014 Move X19, X0
	015 Move X20, X8
	016 Move [X29-8], X9
	017 Move X24, [X2+56]
	018 Compare X24, 0
	019 JumpIfNotEqual {24}
	020 Move X0, X2
	021 Move X22, X2
	022 Call 0x1C5D6E0
	023 Move X24, [X22+56]
	024 Move X8, [X24]
	025 Move W2, [X8+252]
	026 Add X8, X31, 0
	027 Add X9, X2, 15
	028 And X9, X9, 0x1FFFFFFFF
	029 Subtract X22, X8, X9
	030 Add X31, X22, 0
	031 Move X0, X22
	032 Move X1, X21
	033 Call 0x3EB2AC0
	034 Move X1, [X24+8]
	035 Subtract X3, X29, 32
	036 Subtract X4, X29, 24
	037 Move X2, X31
	038 Move X0, [X1]
	039 Move [X29-32], X22
	040 Move X8, [X1+16]
	041 NotImplemented "Instruction BLR not yet implemented."
	042 Move X8, [X29-24]
	043 Move X9, [X29-16]
	044 Move [X20], X19
	045 Move [X20+8], X8
	046 Move [X20+16], X9
	047 Move X8, [X23+40]
	048 NotImplemented "Instruction LDUR not yet implemented."
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Add X31, X29, 0
	051 Move X20, [X31+48]
	052 Move X19, [X31+56]
	053 Move X22, [X31+32]
	054 Move X21, [X31+40]
	055 Move X24, [X31+16]
	056 Move X23, [X31+24]
	057 Move X29, [X31+64]
	058 Move X30, [X31+72]
	059 Return X0
	060 Call 0x3EB2B20

Method: System.String ToString()

Disassembly:
	0x03764B48 B 0x3764B58
	0x03764B4C ADRP X9, 0x990000
	0x03764B50 LDUR X8, [X19 + 0x4]
	0x03764B54 LDR X9, [X9 + 0x758]
	0x03764B58 LDR X0, [X9]
	0x03764B5C STR X8, [X31 + 0x8]
	0x03764B60 B 0x3764B8C
	0x03764B64 ADRP X8, 0x98F000
	0x03764B68 LDR V0, [X19 + 0x4]
	0x03764B6C LDR X8, [X8 + 0xA90]
	0x03764B70 STR S0, [X31 + 0x8]
	0x03764B74 B 0x3764B88
	0x03764B78 ADRP X8, 0x992000
	0x03764B7C LDUR V0, [X19 + 0x4]
	0x03764B80 LDR X8, [X8 + 0x978]
	0x03764B84 STR D0, [X31 + 0x8]
	0x03764B88 LDR X0, [X8]
	0x03764B8C ADD X1, X31, 0x8
	0x03764B90 BL 0x1C16E04
	0x03764B94 LDP X20, X19, [X31 + 0x10]
	0x03764B98 LDR X30, [X31], #0x20
	0x03764B9C RET
	0x03764BA0 MOV X0, X31
	0x03764BA4 B 0x3764B94
	0x03764BA8 SDIV W8, W0, W1
	0x03764BAC ADD W9, W1, W0
	0x03764BB0 MSUB W8, W8, W1, W0
	0x03764BB4 SUB W9, W9, W8
	0x03764BB8 CMP W8, 0x0
	0x03764BBC CSEL W0, W0, W9, EQ
	0x03764BC0 RET
	0x03764BC4 SDIV X8, X0, X1
	0x03764BC8 ADD X9, X1, X0
	0x03764BCC MSUB X8, X8, X1, X0
	0x03764BD0 SUB X9, X9, X8
	0x03764BD4 CMP X8, 0x0
	0x03764BD8 CSEL X0, X0, X9, EQ

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+32], X22
	004 Move [X31+40], X21
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move X20, 0xC7D000
	008 Move X22, 0x9E3000
	009 Move X21, 0x990000
	010 Move W8, [X20+3689]
	011 Move X22, [X22+1056]
	012 Move X21, [X21+3832]
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x9E3000
	019 Move X0, [X0+1056]
	020 Call 0x1C17CF4
	021 Move X0, 0x990000
	022 Move X0, [X0+3832]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X20+3689], W8
	026 Move X20, [X19]
	027 Move X8, [X19+8]
	028 Move X9, [X19+16]
	029 Move X0, [X22]
	030 Add X1, X31, 0
	031 Move [X31], X8
	032 Move [X31+8], X9
	033 Call 0x1C17E04
	034 Move X8, [X21]
	035 Move X2, X0
	036 Move X1, X20
	037 Move X3, X31
	038 Move X0, X8
	039 Call String.Format, X0, X1, X2
	040 Move X20, [X31+48]
	041 Move X19, [X31+56]
	042 Move X22, [X31+32]
	043 Move X21, [X31+40]
	044 Move X30, [X31+16]
	045 Add X31, X31, 64
	046 Return X0

Method: System.Boolean Equals(UnityEngine.InputSystem.Utilities.NamedValue other)

Disassembly:
	0x03764E40 LDR X30, [X31], #0x30
	0x03764E44 RET
	0x03764E48 STR X30, [X31 - 0x40]!
	0x03764E4C STP X24, X23, [X31 + 0x10]
	0x03764E50 STP X22, X21, [X31 + 0x20]
	0x03764E54 STP X20, X19, [X31 + 0x30]
	0x03764E58 ADRP X19, 0xC7C000
	0x03764E5C ADRP X22, 0x9E2000
	0x03764E60 LDRB W8, [X19 + 0xE6F]
	0x03764E64 LDR X22, [X22 + 0x480]
	0x03764E68 MOV X21, X1
	0x03764E6C MOV X20, X0
	0x03764E70 TBNZ X8, 0x0, 0x3764E94
	0x03764E74 ADRP X0, 0x9E2000
	0x03764E78 LDR X0, [X0 + 0x480]
	0x03764E7C BL 0x1C16CF4
	0x03764E80 ADRP X0, 0x9E2000
	0x03764E84 LDR X0, [X0 + 0x488]
	0x03764E88 BL 0x1C16CF4
	0x03764E8C MOVZ W8, 0x1
	0x03764E90 STRB W8, [X19 + 0xE6F]
	0x03764E94 LDR X0, [X22]
	0x03764E98 LDP X24, X23, [X20 + 0x18]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+32], X20
	004 Move [X31+40], X19
	005 Move X19, X1
	006 Move X20, X0
	007 Move X0, [X0]
	008 Move X1, [X1]
	009 Move W2, 3
	010 Move X3, X31
	011 Call String.Equals, X0, X1, X2
	012 Move TEMP, X0
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfNotEqual {24}
	016 Move X8, [X20+8]
	017 Move X9, [X20+16]
	018 Move X1, [X19+8]
	019 Move X2, [X19+16]
	020 Add X0, X31, 0
	021 Move [X31], X8
	022 Move [X31+8], X9
	023 Call PrimitiveValue.Equals, X0, X1
	024 Move W0, W31
	025 Move X20, [X31+32]
	026 Move X19, [X31+40]
	027 Move X30, [X31+16]
	028 And W0, W0, 1
	029 Add X31, X31, 48
	030 Return X0

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x03764EC8 LDRH W9, [X8 + 0x12E]
	0x03764ECC LDR X1, [X10]
	0x03764ED0 CBZ X9, 0x3764EF4
	0x03764ED4 LDR X10, [X8 + 0xB0]
	0x03764ED8 ADD X10, X10, 0x8
	0x03764EDC LDUR X11, [X10 - 0x8]
	0x03764EE0 CMP X11, X1
	0x03764EE4 B.EQ 0x3764F04
	0x03764EE8 SUBS X9, X9, 0x1
	0x03764EEC ADD X10, X10, 0x10
	0x03764EF0 B.NE 0x3764EDC
	0x03764EF4 MOV X0, X19
	0x03764EF8 MOV W2, W31
	0x03764EFC BL 0x1C5C788
	0x03764F00 B 0x3764F10
	0x03764F04 LDRSW X9, [X10]
	0x03764F08 ADD X8, X8, X9, 0x4, LSL
	0x03764F0C ADD X0, X8, 0x138
	0x03764F10 LDP X3, X2, [X0]
	0x03764F14 MOV X0, X19
	0x03764F18 MOV X1, X20
	0x03764F1C LDP X20, X19, [X31 + 0x30]
	0x03764F20 LDP X22, X21, [X31 + 0x20]
	0x03764F24 LDP X24, X23, [X31 + 0x10]
	0x03764F28 LDR X30, [X31], #0x40
	0x03764F2C BR X3
	0x03764F30 BL 0x1C16F20
	0x03764F34 STR X30, [X31 - 0x30]!
	0x03764F38 STP X22, X21, [X31 + 0x10]
	0x03764F3C STP X20, X19, [X31 + 0x20]
	0x03764F40 MOV X21, X1
	0x03764F44 MOV X1, X31
	0x03764F48 MOV X19, X3
	0x03764F4C MOV X20, X2
	0x03764F50 MOV X22, X0
	0x03764F54 BL 0x33BDD8C

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+40], X21
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move X21, 0xC7D000
	007 Move W8, [X21+3690]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x9BB000
	015 Move X0, [X0+1688]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3690], W8
	019 Compare X20, 0
	020 JumpIfEqual {26}
	021 Move X8, 0x9BB000
	022 Move X8, [X8+1688]
	023 Move X9, [X20]
	024 Move X8, [X8]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move W0, W31
	027 Move X0, X20
	028 Call 0x1C17E08
	029 Move V0, [X0]
	030 Move X8, [X0+16]
	031 Add X1, X31, 0
	032 Move X0, X19
	033 Move [X31], V0
	034 Move [X31+16], X8
	035 Call NamedValue.Equals, X0, X1
	036 Move X20, [X31+48]
	037 Move X19, [X31+56]
	038 Move X30, [X31+32]
	039 Move X21, [X31+40]
	040 And W0, W0, 1
	041 Add X31, X31, 64
	042 Return X0

Method: System.Int32 GetHashCode()

Disassembly:
	0x03764F58 STP X20, X21, [X22 + 0x18]
	0x03764F5C STR X19, [X22 + 0x10]
	0x03764F60 LDP X20, X19, [X31 + 0x20]
	0x03764F64 LDP X22, X21, [X31 + 0x10]
	0x03764F68 LDR X30, [X31], #0x30
	0x03764F6C RET
	0x03764F70 RET
	0x03764F74 STP X30, X21, [X31 - 0x20]!
	0x03764F78 STP X20, X19, [X31 + 0x10]
	0x03764F7C ADRP X20, 0xC7C000
	0x03764F80 ADRP X21, 0x98F000
	0x03764F84 LDRB W8, [X20 + 0xE70]
	0x03764F88 LDR X21, [X21 + 0xA28]
	0x03764F8C MOV X19, X1
	0x03764F90 TBNZ X8, 0x0, 0x3764FA8
	0x03764F94 ADRP X0, 0x98F000
	0x03764F98 LDR X0, [X0 + 0xA28]
	0x03764F9C BL 0x1C16CF4
	0x03764FA0 MOVZ W8, 0x1
	0x03764FA4 STRB W8, [X20 + 0xE70]
	0x03764FA8 LDR X0, [X21]
	0x03764FAC LDR W8, [X0 + 0xE0]
	0x03764FB0 CBNZ W8, 0x3764FB8
	0x03764FB4 BL 0x1C16DFC
	0x03764FB8 MOV X0, X19
	0x03764FBC LDP X20, X19, [X31 + 0x10]
	0x03764FC0 MOV X1, X31
	0x03764FC4 LDP X30, X21, [X31], #0x20
	0x03764FC8 B 0x3C02C84
	0x03764FCC SUB X31, X31, 0x30
	0x03764FD0 STP X30, X21, [X31 + 0x10]
	0x03764FD4 STP X20, X19, [X31 + 0x20]
	0x03764FD8 ADRP X21, 0xC7C000
	0x03764FDC STR X1, [X31 + 0x8]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+8], X31
	003 Move [X31+16], X30
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move [X31], X31
	007 Move X19, X0
	008 Move X0, [X0]
	009 Compare X0, 0
	010 JumpIfEqual {17}
	011 Move X8, [X0]
	012 Move X9, [X8+344]
	013 Move X1, [X8+352]
	014 NotImplemented "Instruction BLR not yet implemented."
	015 Move W8, 397
	016 Multiply W20, W0, W8
	017 Move W20, W31
	018 NotImplemented "Instruction LDUR not yet implemented."
	019 Add X0, X31, 0
	020 Move X1, X31
	021 Move [X31], V0
	022 Call Int32.GetHashCode, X0
	023 NotImplemented "Instruction LDUR not yet implemented."
	024 Move W9, 397
	025 Multiply W9, W0, W9
	026 Xor W9, W9, W20
	027 Subtract X10, X31, X8
	028 And X11, X8, 0x7FFFFFFFFFFFFFFF
	029 And X31, X10, 0x7FFFFFFFFFFFFFFF
	030 NotImplemented "Instruction CSEL not yet implemented."
	031 Move X20, [X31+32]
	032 Move X19, [X31+40]
	033 Move X30, [X31+16]
	034 Move X10, X8
	035 ShiftRight X10, 32
	036 And X10, X10, 0x7FFFFFFF
	037 Xor W8, W10, W8
	038 Xor W0, W9, W8
	039 Add X31, X31, 48
	040 Return X0

Method: System.Boolean op_Equality(UnityEngine.InputSystem.Utilities.NamedValue left, UnityEngine.InputSystem.Utilities.NamedValue right)

Disassembly:
	0x03765020 LDR X0, [X20]
	0x03765024 LDR X20, [X19 + 0x20]
	0x03765028 LDR W8, [X0 + 0xE0]
	0x0376502C CBNZ W8, 0x3765034
	0x03765030 BL 0x1C16DFC
	0x03765034 MOV X0, X20
	0x03765038 MOV X1, X31
	0x0376503C MOV X2, X31
	0x03765040 BL 0x3395F0C
	0x03765044 TBZ X0, 0x0, 0x37650A4
	0x03765048 ADD X0, X31, 0x8
	0x0376504C MOV X1, X31

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+32], X30
	003 Move X8, [X1+16]
	004 Move V0, [X1]
	005 Add X1, X31, 0
	006 Move [X31+16], X8
	007 Move [X31], V0
	008 Call NamedValue.Equals, X0, X1
	009 Move X30, [X31+32]
	010 And W0, W0, 1
	011 Add X31, X31, 48
	012 Return X0

Method: System.Boolean op_Inequality(UnityEngine.InputSystem.Utilities.NamedValue left, UnityEngine.InputSystem.Utilities.NamedValue right)

Disassembly:
	0x03765050 BL 0x3802760
	0x03765054 ADRP X8, 0x9B6000
	0x03765058 LDR X8, [X8 + 0x270]
	0x0376505C MOV W20, W0
	0x03765060 LDR X8, [X8]
	0x03765064 LDR W9, [X8 + 0xE0]
	0x03765068 CBNZ W9, 0x3765074
	0x0376506C MOV X0, X8
	0x03765070 BL 0x1C16DFC
	0x03765074 MOV W0, W20
	0x03765078 MOV X1, X31
	0x0376507C BL 0x376EAD0
	0x03765080 CBZ X0, 0x376513C

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+32], X30
	003 Move X8, [X1+16]
	004 Move V0, [X1]
	005 Add X1, X31, 0
	006 Move [X31+16], X8
	007 Move [X31], V0
	008 Call NamedValue.Equals, X0, X1
	009 Move X30, [X31+32]
	010 NotImplemented "Instruction ORN not yet implemented."
	011 And W0, W8, 1
	012 Add X31, X31, 48
	013 Return X0

Method: UnityEngine.InputSystem.Utilities.NamedValue[] ParseMultiple(System.String parameterString)

Disassembly:
	0x03764948 BL 0x1993444
	0x0376494C MOV X0, X20
	0x03764950 BL 0x19903C0
	0x03764954 ADRP X0, 0x9E2000
	0x03764958 LDR X0, [X0 + 0x478]
	0x0376495C BL 0x1C16D08
	0x03764960 MOV X2, X0
	0x03764964 MOVZ W1, 0x4
	0x03764968 MOV X0, X20
	0x0376496C BL 0x1993444
	0x03764970 MOV X0, X20
	0x03764974 MOV X1, X31
	0x03764978 BL 0x32278CC
	0x0376497C MOV X19, X0
	0x03764980 ADRP X0, 0x997000
	0x03764984 LDR X0, [X0 + 0x578]
	0x03764988 BL 0x1C16D08
	0x0376498C BL 0x1C16F10
	0x03764990 MOV X20, X0
	0x03764994 ADRP X0, 0x9E2000
	0x03764998 LDR X0, [X0 + 0x458]
	0x0376499C BL 0x1C16D08
	0x037649A0 MOV X2, X0
	0x037649A4 MOV X0, X20
	0x037649A8 MOV X1, X19
	0x037649AC MOV X3, X31
	0x037649B0 BL 0x330E16C
	0x037649B4 ADRP X0, 0x9E2000
	0x037649B8 LDR X0, [X0 + 0x460]
	0x037649BC BL 0x1C16D08
	0x037649C0 MOV X1, X0
	0x037649C4 MOV X0, X20
	0x037649C8 BL 0x1C16DEC
	0x037649CC STR X30, [X31 - 0x20]!
	0x037649D0 STP X20, X19, [X31 + 0x10]
	0x037649D4 ADRP X20, 0xC7C000
	0x037649D8 LDRB W8, [X20 + 0xE78]
	0x037649DC MOV X19, X0
	0x037649E0 TBNZ X8, 0x0, 0x3764A7C
	0x037649E4 ADRP X0, 0x98F000
	0x037649E8 LDR X0, [X0 + 0xB58]
	0x037649EC BL 0x1C16CF4
	0x037649F0 ADRP X0, 0x990000
	0x037649F4 LDR X0, [X0 + 0x9D8]
	0x037649F8 BL 0x1C16CF4
	0x037649FC ADRP X0, 0x991000
	0x03764A00 LDR X0, [X0 + 0x170]
	0x03764A04 BL 0x1C16CF4
	0x03764A08 ADRP X0, 0x992000
	0x03764A0C LDR X0, [X0 + 0x978]
	0x03764A10 BL 0x1C16CF4
	0x03764A14 ADRP X0, 0x993000
	0x03764A18 LDR X0, [X0 + 0x628]
	0x03764A1C BL 0x1C16CF4
	0x03764A20 ADRP X0, 0x98F000
	0x03764A24 LDR X0, [X0 + 0x758]
	0x03764A28 BL 0x1C16CF4
	0x03764A2C ADRP X0, 0x991000
	0x03764A30 LDR X0, [X0 + 0xA60]
	0x03764A34 BL 0x1C16CF4
	0x03764A38 ADRP X0, 0x9B8000
	0x03764A3C LDR X0, [X0 + 0x6B0]
	0x03764A40 BL 0x1C16CF4
	0x03764A44 ADRP X0, 0x98F000
	0x03764A48 LDR X0, [X0 + 0xA90]
	0x03764A4C BL 0x1C16CF4
	0x03764A50 ADRP X0, 0x994000
	0x03764A54 LDR X0, [X0 + 0x658]
	0x03764A58 BL 0x1C16CF4
	0x03764A5C ADRP X0, 0x997000
	0x03764A60 LDR X0, [X0 + 0x720]
	0x03764A64 BL 0x1C16CF4
	0x03764A68 ADRP X0, 0x990000
	0x03764A6C LDR X0, [X0 + 0x758]
	0x03764A70 BL 0x1C16CF4
	0x03764A74 MOVZ W8, 0x1
	0x03764A78 STRB W8, [X20 + 0xE78]
	0x03764A7C LDR W8, [X19]
	0x03764A80 SUB W8, W8, 0x3
	0x03764A84 CMP W8, 0xB
	0x03764A88 B.HI 0x3764BA0
	0x03764A8C ADRP X9, 0xFFFFFFFFFD433000
	0x03764A90 ADD X9, X9, 0x8AF
	0x03764A94 ADR X10, 0x10
	0x03764A98 LDRB W11, [X9, X8, LSL]
	0x03764A9C ADD X10, X10, X11, 0x2, LSL
	0x03764AA0 BR X10
	0x03764AA4 ADRP X9, 0x98F000
	0x03764AA8 LDRB W8, [X19 + 0x4]
	0x03764AAC LDR X9, [X9 + 0xB58]
	0x03764AB0 B 0x3764AE0
	0x03764AB4 ADRP X9, 0x991000
	0x03764AB8 LDRH W8, [X19 + 0x4]
	0x03764ABC LDR X9, [X9 + 0x170]
	0x03764AC0 B 0x3764B08
	0x03764AC4 ADRP X9, 0x9B8000
	0x03764AC8 LDRB W8, [X19 + 0x4]
	0x03764ACC LDR X9, [X9 + 0x6B0]
	0x03764AD0 B 0x3764AE0
	0x03764AD4 ADRP X9, 0x990000
	0x03764AD8 LDRB W8, [X19 + 0x4]

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+96], X30
	003 Move [X31+104], X23
	004 Move [X31+112], X22
	005 Move [X31+120], X21
	006 Move [X31+128], X20
	007 Move [X31+136], X19
	008 Move X20, 0xC7D000
	009 Move W8, [X20+3691]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x9E3000
	016 Move X0, [X0+1032]
	017 Call 0x1C17CF4
	018 Move X0, 0x992000
	019 Move X0, [X0+928]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+3691], W8
	023 Move [X31+64], X31
	024 Move [X31+72], X31
	025 Move [X31+80], X31
	026 Compare X19, 0
	027 JumpIfEqual {97}
	028 Move X0, X19
	029 Move X1, X31
	030 Call String.Trim, X0
	031 Move X1, X31
	032 Move X19, X0
	033 Call String.IsNullOrEmpty, X0
	034 Move X20, X31
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {86}
	039 Move X8, 0x992000
	040 Move X8, [X8+928]
	041 Move X0, [X8]
	042 Compare X0, 0
	043 JumpIfEqual {95}
	044 Move W1, W31
	045 Move X2, X31
	046 Call String.get_Chars, X0, X1
	047 Move W1, W0
	048 Move X0, X19
	049 Move X2, X31
	050 Call StringHelpers.CountOccurrences, X0, X1
	051 Move X8, 0x9E3000
	052 Move X8, [X8+1032]
	053 Add W21, W0, 1
	054 Move W1, W21
	055 Move X8, [X8]
	056 Move X0, X8
	057 Call 0x1C17D6C
	058 Move X20, X0
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move [X31+92], W31
	061 Move X22, X31
	062 Move W21, W21
	063 Add X23, X20, 32
	064 Add X8, X31, 64
	065 Add X1, X31, 92
	066 Move X0, X19
	067 Call NamedValue.ParseParameter, X0, X1
	068 Move V0, [X31+4]
	069 Move X8, [X31+80]
	070 Move [X31+2], V0
	071 Move [X31+48], X8
	072 Compare X20, 0
	073 JumpIfEqual {95}
	074 Move V0, [X31+2]
	075 Move X8, [X31+48]
	076 Move [X31], V0
	077 Move [X31+16], X8
	078 Move W8, [X20+24]
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Move X8, [X31+16]
	081 Move V0, [X31]
	082 Add X22, X22, 1
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Move [X23+16], X8
	085 Move [X23+24], V0
	086 Move X0, X20
	087 Move X20, [X31+128]
	088 Move X19, [X31+136]
	089 Move X22, [X31+112]
	090 Move X21, [X31+120]
	091 Move X30, [X31+96]
	092 Move X23, [X31+104]
	093 Add X31, X31, 144
	094 Return X0
	095 Call 0x1C17F20
	096 Call 0x1C17F28
	097 Move X0, 0x995000
	098 Move X0, [X0+1320]
	099 Call 0x1C17D08
	100 Call 0x1C17F10
	101 Move X19, X0
	102 Move X0, 0x9E3000
	103 Move X0, [X0+1040]
	104 Call 0x1C17D08
	105 Move X1, X0
	106 Move X0, X19
	107 Move X2, X31
	108 Call ArgumentNullException..ctor, X0, X1
	109 Move X0, 0x9E3000
	110 Move X0, [X0+1048]
	111 Call 0x1C17D08
	112 Move X1, X0
	113 Move X0, X19
	114 Call 0x1C17DEC

Method: UnityEngine.InputSystem.Utilities.NamedValue Parse(System.String str)

Disassembly:
	0x03765400 MOV X2, X31
	0x03765404 MOV X20, X0
	0x03765408 BL 0x337DF1C
	0x0376540C ADRP X0, 0x9E1000
	0x03765410 LDR X0, [X0 + 0x4B8]
	0x03765414 BL 0x1C16D08
	0x03765418 MOV X1, X0
	0x0376541C MOV X0, X20
	0x03765420 BL 0x1C16DEC
	0x03765424 SUB X31, X31, 0x50
	0x03765428 STP X2, X30, [X31 + 0x8]
	0x0376542C STP X24, X23, [X31 + 0x20]
	0x03765430 STP X22, X21, [X31 + 0x30]
	0x03765434 STP X20, X19, [X31 + 0x40]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+32], X30
	003 Move [X31+40], X19
	004 Move X19, X8
	005 Add X8, X31, 0
	006 Add X1, X31, 28
	007 Move [X31+28], W31
	008 Call NamedValue.ParseParameter, X0, X1
	009 Move X8, [X31+16]
	010 Move V0, [X31]
	011 Move [X19+16], X8
	012 Move [X19], V0
	013 Move X30, [X31+32]
	014 Move X19, [X31+40]
	015 Add X31, X31, 48
	016 Return X0

Method: UnityEngine.InputSystem.Utilities.NamedValue ParseParameter(System.String parameterString, ref System.Int32 index)

Disassembly:
	0x03765084 MOV X1, X0
	0x03765088 LDR X0, [X19 + 0x20]
	0x0376508C CBZ X0, 0x376514C
	0x03765090 LDR X8, [X0]
	0x03765094 LDR X9, [X8 + 0x868]
	0x03765098 LDR X2, [X8 + 0x870]
	0x0376509C BLR X9
	0x037650A0 TBZ X0, 0x0, 0x376513C
	0x037650A4 LDR X8, [X19 + 0x18]
	0x037650A8 CBZ X8, 0x37650CC
	0x037650AC ADD X0, X31, 0x8
	0x037650B0 MOV X1, X31
	0x037650B4 BL 0x3802760
	0x037650B8 LDR X8, [X19 + 0x18]
	0x037650BC CBZ X8, 0x376514C
	0x037650C0 LDR W8, [X8 + 0xE0]
	0x037650C4 CMP W0, W8
	0x037650C8 B.NE 0x376513C
	0x037650CC LDR X19, [X19 + 0x10]
	0x037650D0 CBZ X19, 0x376514C
	0x037650D4 ADRP X10, 0x9E1000
	0x037650D8 LDR X8, [X19]
	0x037650DC LDR X20, [X31 + 0x8]
	0x037650E0 LDR X10, [X10 + 0x490]
	0x037650E4 LDRH W9, [X8 + 0x12E]
	0x037650E8 LDR X1, [X10]
	0x037650EC CBZ X9, 0x3765110
	0x037650F0 LDR X10, [X8 + 0xB0]
	0x037650F4 ADD X10, X10, 0x8
	0x037650F8 LDUR X11, [X10 - 0x8]
	0x037650FC CMP X11, X1
	0x03765100 B.EQ 0x3765120
	0x03765104 SUBS X9, X9, 0x1
	0x03765108 ADD X10, X10, 0x10
	0x0376510C B.NE 0x37650F8
	0x03765110 MOV X0, X19
	0x03765114 MOV W2, W31
	0x03765118 BL 0x1C5C788
	0x0376511C B 0x376512C
	0x03765120 LDRSW X9, [X10]
	0x03765124 ADD X8, X8, X9, 0x4, LSL
	0x03765128 ADD X0, X8, 0x138
	0x0376512C LDP X8, X2, [X0]
	0x03765130 MOV X0, X19
	0x03765134 MOV X1, X20
	0x03765138 BLR X8
	0x0376513C LDP X20, X19, [X31 + 0x20]
	0x03765140 LDP X30, X21, [X31 + 0x10]
	0x03765144 ADD X31, X31, 0x30
	0x03765148 RET
	0x0376514C BL 0x1C16F20
	0x03765150 STP X30, X21, [X31 - 0x20]!
	0x03765154 STP X20, X19, [X31 + 0x10]
	0x03765158 ADRP X21, 0xC7B000
	0x0376515C LDRB W8, [X21 + 0xE72]
	0x03765160 MOV X19, X1
	0x03765164 MOV X20, X0
	0x03765168 TBNZ X8, 0x0, 0x3765180
	0x0376516C ADRP X0, 0x9B7000
	0x03765170 LDR X0, [X0 + 0x1E0]
	0x03765174 BL 0x1C16CF4
	0x03765178 MOVZ W8, 0x1
	0x0376517C STRB W8, [X21 + 0xE72]
	0x03765180 CBZ X20, 0x37651B8
	0x03765184 ADRP X8, 0x9B7000
	0x03765188 LDR X8, [X8 + 0x1E0]
	0x0376518C LDR X0, [X8]
	0x03765190 BL 0x1C16F10
	0x03765194 MOV X1, X31
	0x03765198 MOV X21, X0
	0x0376519C BL 0x33BDD8C
	0x037651A0 STP X19, X31, [X21 + 0x18]
	0x037651A4 STR X20, [X21 + 0x10]
	0x037651A8 LDP X20, X19, [X31 + 0x10]
	0x037651AC MOV X0, X21
	0x037651B0 LDP X30, X21, [X31], #0x20
	0x037651B4 RET
	0x037651B8 ADRP X0, 0x993000
	0x037651BC LDR X0, [X0 + 0x528]
	0x037651C0 BL 0x1C16D08
	0x037651C4 BL 0x1C16F10
	0x037651C8 MOV X19, X0
	0x037651CC ADRP X0, 0x999000
	0x037651D0 LDR X0, [X0 + 0x580]
	0x037651D4 BL 0x1C16D08
	0x037651D8 MOV X1, X0
	0x037651DC MOV X0, X19
	0x037651E0 MOV X2, X31
	0x037651E4 BL 0x330E100
	0x037651E8 ADRP X0, 0x9E1000
	0x037651EC LDR X0, [X0 + 0x498]
	0x037651F0 BL 0x1C16D08
	0x037651F4 MOV X1, X0
	0x037651F8 MOV X0, X19
	0x037651FC BL 0x1C16DEC
	0x03765200 SUB X31, X31, 0x40
	0x03765204 STP X30, X21, [X31 + 0x20]
	0x03765208 STP X20, X19, [X31 + 0x30]
	0x0376520C STP X1, X2, [X31 + 0x10]
	0x03765210 LDRSW X8, [X0]
	0x03765214 CMP W8, W2
	0x03765218 B.CS 0x3765240
	0x0376521C LDRH W9, [X1, X8, LSL #1]
	0x03765220 CMP W9, W3, UXTH
	0x03765224 B.NE 0x3765244
	0x03765228 LDP X20, X19, [X31 + 0x30]
	0x0376522C LDP X30, X21, [X31 + 0x20]
	0x03765230 ADD W8, W8, 0x1
	0x03765234 STR W8, [X0]
	0x03765238 ADD X31, X31, 0x40
	0x0376523C RET
	0x03765240 BL 0x1C16F28
	0x03765244 STRH W3, [X31 + 0xC]
	0x03765248 ADRP X8, 0x990000
	0x0376524C LDR X8, [X8 + 0x170]
	0x03765250 MOV X20, X0
	0x03765254 MOV X0, X8
	0x03765258 BL 0x1C16D08
	0x0376525C ADD X1, X31, 0xC
	0x03765260 BL 0x1C16E04
	0x03765264 LDR W8, [X20]
	0x03765268 MOV X19, X0
	0x0376526C ADRP X0, 0x98E000
	0x03765270 STR W8, [X31 + 0x8]
	0x03765274 LDR X0, [X0 + 0x758]
	0x03765278 BL 0x1C16D08
	0x0376527C ADD X1, X31, 0x8
	0x03765280 BL 0x1C16E04
	0x03765284 MOV X20, X0
	0x03765288 ADRP X0, 0x9C1000
	0x0376528C LDR X0, [X0 + 0xFD8]
	0x03765290 BL 0x1C16D08
	0x03765294 MOV X1, X0
	0x03765298 ADD X0, X31, 0x10
	0x0376529C BL 0x1BCF66C
	0x037652A0 MOV X21, X0
	0x037652A4 ADRP X0, 0x9E1000
	0x037652A8 LDR X0, [X0 + 0x4A0]
	0x037652AC BL 0x1C16D08
	0x037652B0 MOV X1, X19
	0x037652B4 MOV X2, X20
	0x037652B8 MOV X3, X21
	0x037652BC MOV X4, X31
	0x037652C0 BL 0x3227C18
	0x037652C4 MOV X19, X0
	0x037652C8 ADRP X0, 0x98E000
	0x037652CC LDR X0, [X0 + 0x5B0]
	0x037652D0 BL 0x1C16D08
	0x037652D4 BL 0x1C16F10
	0x037652D8 MOV X1, X19
	0x037652DC MOV X2, X31
	0x037652E0 MOV X20, X0
	0x037652E4 BL 0x337DF1C
	0x037652E8 ADRP X0, 0x9E1000
	0x037652EC LDR X0, [X0 + 0x4A8]
	0x037652F0 BL 0x1C16D08
	0x037652F4 MOV X1, X0
	0x037652F8 MOV X0, X20
	0x037652FC BL 0x1C16DEC
	0x03765300 SUB X31, X31, 0x30
	0x03765304 STP X2, X30, [X31 + 0x8]
	0x03765308 STP X20, X19, [X31 + 0x20]
	0x0376530C STR X1, [X31]
	0x03765310 LDR W8, [X0]
	0x03765314 CMP W8, W2
	0x03765318 B.CS 0x376536C
	0x0376531C SXTW X9, W8
	0x03765320 LDRH W9, [X1, X9, LSL #1]
	0x03765324 CMP W9, 0x2D
	0x03765328 CINC W11, W8, EQ
	0x0376532C CSET W10, EQ
	0x03765330 CMP W11, W2
	0x03765334 B.CS 0x376536C
	0x03765338 MOV W11, W31
	0x0376533C MOVZ W12, 0xA
	0x03765340 ADD W13, W8, W10
	0x03765344 LDRH W14, [X1, W13, SXTW]
	0x03765348 SUB W15, W14, 0x30
	0x0376534C CMP W15, 0x9
	0x03765350 B.HI 0x3765370
	0x03765354 ADD W10, W10, 0x1
	0x03765358 MADD W11, W11, W12, W14
	0x0376535C ADD W13, W8, W10
	0x03765360 CMP W13, W2
	0x03765364 SUB W11, W11, 0x30
	0x03765368 B.CC 0x3765340
	0x0376536C BL 0x1C16F28
	0x03765370 CBZ W10, 0x3765394
	0x03765374 LDP X20, X19, [X31 + 0x20]
	0x03765378 LDR X30, [X31 + 0x10]
	0x0376537C CMP W9, 0x2D
	0x03765380 CSNEG W8, W11, W11, NE
	0x03765384 STR W13, [X0]
	0x03765388 MOV W0, W8
	0x0376538C ADD X31, X31, 0x30
	0x03765390 RET
	0x03765394 STR W8, [X31 + 0x1C]
	0x03765398 ADRP X0, 0x98E000
	0x0376539C LDR X0, [X0 + 0x758]
	0x037653A0 BL 0x1C16D08
	0x037653A4 ADD X1, X31, 0x1C
	0x037653A8 BL 0x1C16E04
	0x037653AC MOV X19, X0
	0x037653B0 ADRP X0, 0x9C1000
	0x037653B4 LDR X0, [X0 + 0xFD8]
	0x037653B8 BL 0x1C16D08
	0x037653BC MOV X1, X0
	0x037653C0 ADD X0, X31, 0x0
	0x037653C4 BL 0x1BCF66C
	0x037653C8 MOV X20, X0
	0x037653CC ADRP X0, 0x9E1000
	0x037653D0 LDR X0, [X0 + 0x4B0]
	0x037653D4 BL 0x1C16D08
	0x037653D8 MOV X1, X19
	0x037653DC MOV X2, X20
	0x037653E0 MOV X3, X31
	0x037653E4 BL 0x3227BD4
	0x037653E8 MOV X19, X0
	0x037653EC ADRP X0, 0x98E000
	0x037653F0 LDR X0, [X0 + 0x5B0]
	0x037653F4 BL 0x1C16D08
	0x037653F8 BL 0x1C16F10
	0x037653FC MOV X1, X19

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X22, 0xC7C000
	012 Move W9, [X22+3692]
	013 Move X20, X1
	014 Move X21, X0
	015 Move X19, X8
	016 Move TEMP, X9
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {28}
	020 Move X0, 0x991000
	021 Move X0, [X0+368]
	022 Call 0x1C17CF4
	023 Move X0, 0x991000
	024 Move X0, [X0+928]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X22+3692], W8
	028 Compare X21, 0
	029 JumpIfEqual {244}
	030 Move W25, [X21+16]
	031 Move W22, [X20]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X23, 0x991000
	034 Move X23, [X23+368]
	035 Move X0, X21
	036 Move W1, W22
	037 Move X2, X31
	038 Call String.get_Chars, X0, X1
	039 Move X8, [X23]
	040 Move W22, W0
	041 Move W9, [X8+224]
	042 Compare W9, 0
	043 JumpIfNotEqual {46}
	044 Move X0, X8
	045 Call 0x1C17DFC
	046 Move W0, W22
	047 Move X1, X31
	048 Call Char.IsWhiteSpace, X0
	049 Move W22, [X20]
	050 Move TEMP, X0
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfNotEqual {57}
	054 Add W22, W22, 1
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move [X20], W22
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move W8, W22
	059 Move X24, 0x991000
	060 Move X26, 0x991000
	061 Move X24, [X24+928]
	062 Move X26, [X26+368]
	063 Move W1, W22
	064 Move X0, X21
	065 Move X2, X31
	066 Call String.get_Chars, X0, X1
	067 And W8, W0, 0xFFFF
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move W23, W0
	070 Move X0, [X24]
	071 Compare X0, 0
	072 JumpIfEqual {244}
	073 Move W1, W31
	074 Move X2, X31
	075 Call String.get_Chars, X0, X1
	076 And W8, W23, 0xFFFF
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Move X0, [X26]
	079 Move W8, [X0+224]
	080 Compare W8, 0
	081 JumpIfNotEqual {83}
	082 Call 0x1C17DFC
	083 Move W0, W23
	084 Move X1, X31
	085 Call Char.IsWhiteSpace, X0
	086 Move TEMP, X0
	087 And TEMP, TEMP, 1
	088 Compare TEMP, 1
	089 JumpIfEqual {94}
	090 Move W8, [X20]
	091 Add W1, W8, 1
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Move [X20], W1
	094 Move W8, [X20]
	095 Subtract W2, W8, W22
	096 Move X0, X21
	097 Move W1, W22
	098 Move X3, X31
	099 Call String.Substring, X0, X1, X2
	100 Move W1, [X20]
	101 Move X22, X0
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Move X24, 0x991000
	104 Move X24, [X24+368]
	105 Move X0, X21
	106 Move X2, X31
	107 Call String.get_Chars, X0, X1
	108 Move X8, [X24]
	109 Move W23, W0
	110 Move W9, [X8+224]
	111 Compare W9, 0
	112 JumpIfNotEqual {115}
	113 Move X0, X8
	114 Call 0x1C17DFC
	115 Move W0, W23
	116 Move X1, X31
	117 Call Char.IsWhiteSpace, X0
	118 Move W1, [X20]
	119 Move TEMP, X0
	120 And TEMP, TEMP, 1
	121 Compare TEMP, 1
	122 JumpIfNotEqual {126}
	123 Add W1, W1, 1
	124 NotImplemented "Instruction CMP not yet implemented."
	125 Move [X20], W1
	126 Move X23, 3
	127 NotImplemented "Instruction CMP not yet implemented."
	128 NotImplemented "Instruction MOVK not yet implemented."
	129 Move X24, X31
	130 Move X0, X21
	131 Move X2, X31
	132 Call String.get_Chars, X0, X1
	133 And W8, W0, 0xFFFF
	134 NotImplemented "Instruction CMP not yet implemented."
	135 Move X24, X31
	136 Move X26, 0x991000
	137 Move X26, [X26+368]
	138 Move W8, [X20]
	139 Add W23, W8, 1
	140 NotImplemented "Instruction CMP not yet implemented."
	141 Move [X20], W23
	142 Move X0, X21
	143 Move W1, W23
	144 Move X2, X31
	145 Call String.get_Chars, X0, X1
	146 Move X8, [X26]
	147 Move W23, W0
	148 Move W9, [X8+224]
	149 Compare W9, 0
	150 JumpIfNotEqual {153}
	151 Move X0, X8
	152 Call 0x1C17DFC
	153 Move W0, W23
	154 Move X1, X31
	155 Call Char.IsWhiteSpace, X0
	156 Move TEMP, X0
	157 And TEMP, TEMP, 1
	158 Compare TEMP, 1
	159 JumpIfEqual {138}
	160 Move W23, [X20]
	161 NotImplemented "Instruction CMP not yet implemented."
	162 Move W8, W23
	163 Move X27, 0x991000
	164 Move X27, [X27+928]
	165 Move W1, W23
	166 Move X0, X21
	167 Move X2, X31
	168 Call String.get_Chars, X0, X1
	169 Move X8, [X27]
	170 Compare X8, 0
	171 JumpIfEqual {244}
	172 Move W24, W0
	173 Move X0, X8
	174 Move W1, W31
	175 Move X2, X31
	176 Call String.get_Chars, X0, X1
	177 And W8, W24, 0xFFFF
	178 NotImplemented "Instruction CMP not yet implemented."
	179 Move W1, [X20]
	180 Move X0, X21
	181 Move X2, X31
	182 Call String.get_Chars, X0, X1
	183 Move X8, [X26]
	184 Move W24, W0
	185 Move W9, [X8+224]
	186 Compare W9, 0
	187 JumpIfNotEqual {190}
	188 Move X0, X8
	189 Call 0x1C17DFC
	190 Move W0, W24
	191 Move X1, X31
	192 Call Char.IsWhiteSpace, X0
	193 Move TEMP, X0
	194 And TEMP, TEMP, 1
	195 Compare TEMP, 1
	196 JumpIfEqual {201}
	197 Move W8, [X20]
	198 Add W1, W8, 1
	199 NotImplemented "Instruction CMP not yet implemented."
	200 Move [X20], W1
	201 Move W8, [X20]
	202 Subtract W2, W8, W23
	203 Move X0, X21
	204 Move W1, W23
	205 Move X3, X31
	206 Call String.Substring, X0, X1, X2
	207 Call PrimitiveValue.FromString, X0
	208 Move X23, X0
	209 Move X24, X1
	210 Move W1, [X20]
	211 NotImplemented "Instruction CMP not yet implemented."
	212 Move X0, X21
	213 Move X2, X31
	214 Call String.get_Chars, X0, X1
	215 Move X8, 0x991000
	216 Move X8, [X8+928]
	217 Move X8, [X8]
	218 Compare X8, 0
	219 JumpIfEqual {244}
	220 Move W21, W0
	221 Move X0, X8
	222 Move W1, W31
	223 Move X2, X31
	224 Call String.get_Chars, X0, X1
	225 And W8, W21, 0xFFFF
	226 NotImplemented "Instruction CMP not yet implemented."
	227 Move W8, [X20]
	228 Add W8, W8, 1
	229 Move [X20], W8
	230 Move [X19], X22
	231 Move [X19+8], X23
	232 Move [X19+16], X24
	233 Move X20, [X31+64]
	234 Move X19, [X31+72]
	235 Move X22, [X31+48]
	236 Move X21, [X31+56]
	237 Move X24, [X31+32]
	238 Move X23, [X31+40]
	239 Move X26, [X31+16]
	240 Move X25, [X31+24]
	241 Move X30, [X31+80]
	242 Move X27, [X31+88]
	243 Return X0
	244 Call 0x1C17F20

Method: System.Void ApplyToObject(System.Object instance)

Disassembly:
	0x03765750 LDR X8, [X8 + 0xD90]
	0x03765754 LDR X26, [X8]
	0x03765758 SUB W8, W22, W25
	0x0376575C CMP W8, W24
	0x03765760 B.CS 0x376576C
	0x03765764 MOV X0, X31
	0x03765768 BL 0x339D6EC
	0x0376576C LDR X0, [X26 + 0x20]
	0x03765770 LDRB W8, [X0 + 0x135]
	0x03765774 TBNZ X8, 0x0, 0x376577C
	0x03765778 BL 0x1C5C684
	0x0376577C ADD X8, X21, W25, 0x1, SXTW
	0x03765780 ADD W9, W23, W24
	0x03765784 STP X8, X24, [X19]
	0x03765788 ADD W8, W9, 0x2
	0x0376578C MOVZ W0, 0x1
	0x03765790 STR W8, [X20]
	0x03765794 B 0x376579C
	0x03765798 MOV W0, W31
	0x0376579C LDP X20, X19, [X31 + 0x40]
	0x037657A0 LDP X22, X21, [X31 + 0x30]
	0x037657A4 LDP X24, X23, [X31 + 0x20]
	0x037657A8 LDP X26, X25, [X31 + 0x10]
	0x037657AC LDR X30, [X31], #0x50
	0x037657B0 RET
	0x037657B4 STR X30, [X31 - 0x10]!
	0x037657B8 LDR W8, [X0]
	0x037657BC CMP W8, W2
	0x037657C0 B.CS 0x3765804
	0x037657C4 SXTW X9, W8
	0x037657C8 LDRH W9, [X1, X9, LSL #1]
	0x037657CC CMP W9, 0x2D
	0x037657D0 B.NE 0x37657DC
	0x037657D4 ADD W8, W8, 0x1
	0x037657D8 STR W8, [X0]
	0x037657DC CMP W8, W2
	0x037657E0 B.CS 0x3765804
	0x037657E4 LDRH W9, [X1, W8, SXTW]
	0x037657E8 SUB W9, W9, 0x30
	0x037657EC CMP W9, 0x9
	0x037657F0 B.HI 0x3765808
	0x037657F4 ADD W8, W8, 0x1
	0x037657F8 CMP W2, W8
	0x037657FC STR W8, [X0]
	0x03765800 B.NE 0x37657E4
	0x03765804 BL 0x1C16F28
	0x03765808 LDR X30, [X31], #0x10
	0x0376580C RET
	0x03765810 ADD X0, X0, 0x4
	0x03765814 RET
	0x03765818 LDR W0, [X0]
	0x0376581C RET
	0x03765820 AND W8, W1, 0x1
	0x03765824 MOVZ W9, 0x3
	0x03765828 STR W31, [X0 + 0xC]
	0x0376582C STUR X31, [X0 + 0x5]
	0x03765830 STR W9, [X0]
	0x03765834 STRB W8, [X0 + 0x4]
	0x03765838 RET
	0x0376583C MOVZ W8, 0x4
	0x03765840 STRH W31, [X0 + 0xE]
	0x03765844 STUR X31, [X0 + 0x6]
	0x03765848 STR W8, [X0]
	0x0376584C STRH W1, [X0 + 0x4]
	0x03765850 RET
	0x03765854 MOVZ W8, 0x6
	0x03765858 STR W31, [X0 + 0xC]
	0x0376585C STUR X31, [X0 + 0x5]
	0x03765860 STR W8, [X0]
	0x03765864 STRB W1, [X0 + 0x4]
	0x03765868 RET
	0x0376586C MOVZ W8, 0x5
	0x03765870 STR W31, [X0 + 0xC]
	0x03765874 STUR X31, [X0 + 0x5]
	0x03765878 STR W8, [X0]
	0x0376587C STRB W1, [X0 + 0x4]
	0x03765880 RET
	0x03765884 MOVZ W8, 0x7
	0x03765888 STRH W31, [X0 + 0xE]
	0x0376588C STUR X31, [X0 + 0x6]
	0x03765890 STR W8, [X0]
	0x03765894 STRH W1, [X0 + 0x4]
	0x03765898 RET
	0x0376589C MOVZ W8, 0x8
	0x037658A0 STRH W31, [X0 + 0xE]
	0x037658A4 STUR X31, [X0 + 0x6]
	0x037658A8 STR W8, [X0]
	0x037658AC STRH W1, [X0 + 0x4]
	0x037658B0 RET
	0x037658B4 MOVZ W8, 0x9
	0x037658B8 STR X31, [X0 + 0x8]
	0x037658BC STP W8, W1, [X0]
	0x037658C0 RET
	0x037658C4 MOVZ W8, 0xA
	0x037658C8 STR X31, [X0 + 0x8]
	0x037658CC STP W8, W1, [X0]
	0x037658D0 RET
	0x037658D4 MOVZ W8, 0xB
	0x037658D8 STR W31, [X0 + 0xC]
	0x037658DC STR W8, [X0]
	0x037658E0 STUR X1, [X0 + 0x4]
	0x037658E4 RET
	0x037658E8 MOVZ W8, 0xC
	0x037658EC STR W31, [X0 + 0xC]
	0x037658F0 STR W8, [X0]
	0x037658F4 STUR X1, [X0 + 0x4]
	0x037658F8 RET
	0x037658FC MOVZ W8, 0xD
	0x03765900 STR X31, [X0 + 0x8]
	0x03765904 STR W8, [X0]
	0x03765908 STR S0, [X0 + 0x4]
	0x0376590C RET
	0x03765910 MOVZ W8, 0xE
	0x03765914 STR W31, [X0 + 0xC]
	0x03765918 STR W8, [X0]
	0x0376591C STUR D0, [X0 + 0x4]
	0x03765920 RET
	0x03765924 STP D9, D8, [X31 - 0x20]!
	0x03765928 STP X30, X19, [X31 + 0x10]
	0x0376592C LDR W8, [X0]
	0x03765930 SUB W8, W8, 0x3
	0x03765934 CMP W8, 0xB
	0x03765938 B.HI 0x3765988
	0x0376593C ADRP X9, 0xFFFFFFFFFD432000
	0x03765940 ADD X9, X9, 0x8BB
	0x03765944 ADR X10, 0x10
	0x03765948 LDRB W11, [X9, X8, LSL]
	0x0376594C ADD X10, X10, X11, 0x2, LSL
	0x03765950 BR X10
	0x03765954 LDRB W8, [X0 + 0x4]
	0x03765958 B 0x3765968
	0x0376595C LDRH W8, [X0 + 0x4]
	0x03765960 B 0x3765968
	0x03765964 LDR W8, [X0 + 0x4]
	0x03765968 CMP W8, 0x0
	0x0376596C CSET W0, NE
	0x03765970 LDP X30, X19, [X31 + 0x10]
	0x03765974 LDP D9, D8, [X31], #0x20
	0x03765978 RET
	0x0376597C LDUR X8, [X0 + 0x4]
	0x03765980 CMP X8, 0x0
	0x03765984 B 0x376596C
	0x03765988 MOV W0, W31
	0x0376598C B 0x3765970
	0x03765990 ADRP X19, 0xC74000
	0x03765994 LDRB W8, [X19 + 0x5AA]
	0x03765998 LDR V8, [X0 + 0x4]
	0x0376599C CBNZ W8, 0x37659B4
	0x037659A0 ADRP X0, 0x995000
	0x037659A4 LDR X0, [X0 + 0x4B8]
	0x037659A8 BL 0x1C16CF4
	0x037659AC MOVZ W8, 0x1
	0x037659B0 STRB W8, [X19 + 0x5AA]
	0x037659B4 ADRP X8, 0x995000
	0x037659B8 LDR X8, [X8 + 0x4B8]
	0x037659BC ADRP X9, 0xFFFFFFFFFD385000
	0x037659C0 LDR V0, [X9 + 0x240]
	0x037659C4 FABS S1, S8
	0x037659C8 LDR X8, [X8]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+32], X22
	004 Move [X31+40], X21
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move X21, 0xC7C000
	008 Move W8, [X21+3693]
	009 Move X20, X1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x98F000
	016 Move X0, [X0+1728]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+3693], W8
	020 Compare X20, 0
	021 JumpIfEqual {83}
	022 Move X0, X20
	023 Move X1, X31
	024 Call "il2cpp_vm_object_is_inst", X0
	025 Compare X0, 0
	026 JumpIfEqual {82}
	027 Move X8, [X0]
	028 Move X1, [X19]
	029 Move W2, 53
	030 Move X21, X0
	031 Move X9, [X8+1656]
	032 Move X3, [X8+1664]
	033 NotImplemented "Instruction BLR not yet implemented."
	034 Move X1, X31
	035 Move X2, X31
	036 Move X22, X0
	037 Call FieldInfo.op_Equality, X0, X1
	038 Move TEMP, X0
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfEqual {101}
	042 Compare X22, 0
	043 JumpIfEqual {82}
	044 Move X8, [X22]
	045 Move X21, 0x98F000
	046 Move X0, X22
	047 Move X9, [X8+600]
	048 Move X1, [X8+608]
	049 Move X21, [X21+1728]
	050 NotImplemented "Instruction BLR not yet implemented."
	051 Move X8, [X21]
	052 Move X21, X0
	053 Move W9, [X8+224]
	054 Compare W9, 0
	055 JumpIfNotEqual {58}
	056 Move X0, X8
	057 Call 0x1C17DFC
	058 Move X0, X21
	059 Move X1, X31
	060 Call Type.GetTypeCode, X0
	061 NotImplemented "Instruction LDUR not yet implemented."
	062 Move W1, W0
	063 Add X0, X31, 0
	064 Move [X31], V0
	065 Call PrimitiveValue.ConvertTo, X0, X1
	066 Move [X31], X0
	067 Move [X31+8], X1
	068 Add X0, X31, 0
	069 Call PrimitiveValue.ToObject, X0
	070 Move X2, X0
	071 Move X0, X22
	072 Move X1, X20
	073 Move X20, [X31+48]
	074 Move X19, [X31+56]
	075 Move X22, [X31+32]
	076 Move X21, [X31+40]
	077 Move X30, [X31+16]
	078 Move X3, X31
	079 Add X31, X31, 64
	080 Call FieldInfo.SetValue, X0, X1, X2
	081 Return 
	082 Call 0x1C17F20
	083 Move X0, 0x994000
	084 Move X0, [X0+1320]
	085 Call 0x1C17D08
	086 Call 0x1C17F10
	087 Move X19, X0
	088 Move X0, 0x9E2000
	089 Move X0, [X0+1112]
	090 Call 0x1C17D08
	091 Move X1, X0
	092 Move X0, X19
	093 Move X2, X31
	094 Call ArgumentNullException..ctor, X0, X1
	095 Move X0, 0x9E2000
	096 Move X0, [X0+1120]
	097 Call 0x1C17D08
	098 Move X1, X0
	099 Move X0, X19
	100 Call 0x1C17DEC
	101 Move X0, 0x98F000
	102 Move X0, [X0+2760]
	103 Call 0x1C17D08
	104 Move W1, 5
	105 Call 0x1C17D6C
	106 Move X20, X0
	107 Call 0x19913C0
	108 Move X0, 0x9E2000
	109 Move X0, [X0+1128]
	110 Call 0x1C17D08
	111 Move X2, X0
	112 Move X0, X20
	113 Move X1, X31
	114 Call 0x1994444
	115 Move X19, [X19]
	116 Move X0, X20
	117 Call 0x19913C0
	118 Move W1, 1
	119 Move X0, X20
	120 Move X2, X19
	121 Call 0x1994444
	122 Move X0, X20
	123 Call 0x19913C0
	124 Move X0, 0x9E2000
	125 Move X0, [X0+1136]
	126 Call 0x1C17D08
	127 Move X2, X0
	128 Move W1, 2
	129 Move X0, X20
	130 Call 0x1994444
	131 Move X0, X21
	132 Call 0x19913C0
	133 Move X8, [X21]
	134 Move X0, X21
	135 Move X9, [X8+424]
	136 Move X1, [X8+432]
	137 NotImplemented "Instruction BLR not yet implemented."
	138 Move X19, X0
	139 Move X0, X20
	140 Call 0x19913C0
	141 Move W1, 3
	142 Move X0, X20
	143 Move X2, X19
	144 Call 0x1994444
	145 Move X0, X20
	146 Call 0x19913C0
	147 Move X0, 0x9E2000
	148 Move X0, [X0+1144]
	149 Call 0x1C17D08
	150 Move X2, X0
	151 Move W1, 4
	152 Move X0, X20
	153 Call 0x1994444
	154 Move X0, X20
	155 Move X1, X31
	156 Call String.Concat, X0
	157 Move X19, X0
	158 Move X0, 0x997000
	159 Move X0, [X0+1400]
	160 Call 0x1C17D08
	161 Call 0x1C17F10
	162 Move X20, X0
	163 Move X0, 0x9E2000
	164 Move X0, [X0+1112]
	165 Call 0x1C17D08
	166 Move X2, X0
	167 Move X0, X20
	168 Move X1, X19
	169 Move X3, X31
	170 Call ArgumentException..ctor, X0, X1, X2
	171 Move X0, 0x9E2000
	172 Move X0, [X0+1120]
	173 Call 0x1C17D08
	174 Move X1, X0
	175 Move X0, X20
	176 Call 0x1C17DEC

Method: System.Void ApplyAllToObject(System.Object instance, TParameterList parameters)

Disassembly:
	0x022221EC LDR X0, [X8]
	0x022221F0 LDR W8, [X0 + 0xE0]
	0x022221F4 CBNZ W8, 0x22221FC
	0x022221F8 BL 0x1C16DFC
	0x022221FC MOVZ W0, 0x1
	0x02222200 MOV W1, W20
	0x02222204 MOV X2, X31
	0x02222208 BL 0x337EDF0
	0x0222220C LDR X8, [X19 + 0x38]
	0x02222210 LDP X20, X19, [X31 + 0x10]
	0x02222214 LDR X1, [X8]
	0x02222218 LDR X2, [X1]
	0x0222221C LDR X30, [X31], #0x20
	0x02222220 BR X2
	0x02222224 RET
	0x02222228 STR X30, [X31 - 0x20]!
	0x0222222C STP X20, X19, [X31 + 0x10]
	0x02222230 LDR X8, [X3 + 0x38]
	0x02222234 MOV W19, W2
	0x02222238 MOV X20, X0
	0x0222223C CBNZ X8, 0x2222248
	0x02222240 MOV X0, X3
	0x02222244 BL 0x1C5C6E0
	0x02222248 MOVZ W8, 0x74
	0x0222224C SMADDL X0, X19, X8, X20
	0x02222250 LDP X20, X19, [X31 + 0x10]
	0x02222254 LDR X30, [X31], #0x20
	0x02222258 RET
	0x0222225C STR X30, [X31 - 0x30]!
	0x02222260 STP X22, X21, [X31 + 0x10]
	0x02222264 STP X20, X19, [X31 + 0x20]
	0x02222268 LDR X8, [X3 + 0x38]
	0x0222226C MOV X20, X3
	0x02222270 MOV W19, W2
	0x02222274 MOV X21, X1
	0x02222278 MOV X22, X0
	0x0222227C CBNZ X8, 0x222228C
	0x02222280 MOV X0, X20
	0x02222284 BL 0x1C5C6E0
	0x02222288 LDR X8, [X20 + 0x38]
	0x0222228C LDR X2, [X8 + 0x8]
	0x02222290 MOV X0, X22
	0x02222294 MOV X1, X21
	0x02222298 LDR X8, [X2]
	0x0222229C BLR X8
	0x022222A0 LDR X8, [X20 + 0x38]
	0x022222A4 MOV W1, W19
	0x022222A8 LDP X20, X19, [X31 + 0x20]
	0x022222AC LDP X22, X21, [X31 + 0x10]
	0x022222B0 LDR X2, [X8 + 0x10]
	0x022222B4 LDR X3, [X2]
	0x022222B8 LDR X30, [X31], #0x30
	0x022222BC BR X3
	0x022222C0 STR X30, [X31 - 0x20]!
	0x022222C4 STP X20, X19, [X31 + 0x10]
	0x022222C8 LDR X8, [X3 + 0x38]
	0x022222CC MOV W19, W2
	0x022222D0 MOV X20, X0
	0x022222D4 CBNZ X8, 0x22222E0
	0x022222D8 MOV X0, X3
	0x022222DC BL 0x1C5C6E0
	0x022222E0 MOVZ W8, 0x74
	0x022222E4 SMADDL X0, X19, X8, X20
	0x022222E8 LDP X20, X19, [X31 + 0x10]
	0x022222EC LDR X30, [X31], #0x20
	0x022222F0 RET
	0x022222F4 STR X30, [X31 - 0x30]!
	0x022222F8 STP X22, X21, [X31 + 0x10]
	0x022222FC STP X20, X19, [X31 + 0x20]
	0x02222300 LDR X8, [X3 + 0x38]
	0x02222304 MOV X20, X3
	0x02222308 MOV W19, W2
	0x0222230C MOV X21, X1
	0x02222310 MOV X22, X0
	0x02222314 CBNZ X8, 0x2222324
	0x02222318 MOV X0, X20
	0x0222231C BL 0x1C5C6E0
	0x02222320 LDR X8, [X20 + 0x38]
	0x02222324 LDR X2, [X8 + 0x8]
	0x02222328 MOV X0, X22
	0x0222232C MOV X1, X21
	0x02222330 LDR X8, [X2]
	0x02222334 BLR X8
	0x02222338 LDR X8, [X20 + 0x38]
	0x0222233C MOV W1, W19
	0x02222340 LDP X20, X19, [X31 + 0x20]
	0x02222344 LDP X22, X21, [X31 + 0x10]
	0x02222348 LDR X2, [X8 + 0x10]
	0x0222234C LDR X3, [X2]
	0x02222350 LDR X30, [X31], #0x30
	0x02222354 BR X3
	0x02222358 MOV W1, W1
	0x0222235C BFM X1, X2, 0x20, 0x1F
	0x02222360 RET
	0x02222364 MOV W1, W1
	0x02222368 BFM X1, X2, 0x20, 0x1F
	0x0222236C RET
	0x02222370 MOV W1, W1
	0x02222374 BFM X1, X2, 0x20, 0x1F
	0x02222378 RET
	0x0222237C MOV W1, W1
	0x02222380 BFM X1, X2, 0x20, 0x1F
	0x02222384 RET
	0x02222388 MOV W1, W1
	0x0222238C BFM X1, X2, 0x20, 0x1F
	0x02222390 RET
	0x02222394 MOV W1, W1
	0x02222398 BFM X1, X2, 0x20, 0x1F
	0x0222239C RET
	0x022223A0 MOV W1, W1
	0x022223A4 BFM X1, X2, 0x20, 0x1F
	0x022223A8 RET
	0x022223AC MOV W1, W1
	0x022223B0 BFM X1, X2, 0x20, 0x1F
	0x022223B4 RET
	0x022223B8 MOV W1, W1
	0x022223BC BFM X1, X2, 0x20, 0x1F
	0x022223C0 RET
	0x022223C4 MOV W1, W1
	0x022223C8 BFM X1, X2, 0x20, 0x1F
	0x022223CC RET
	0x022223D0 MOV W1, W1
	0x022223D4 BFM X1, X2, 0x20, 0x1F
	0x022223D8 RET
	0x022223DC MOV W1, W1
	0x022223E0 BFM X1, X2, 0x20, 0x1F
	0x022223E4 RET
	0x022223E8 MOV W1, W1
	0x022223EC BFM X1, X2, 0x20, 0x1F
	0x022223F0 RET
	0x022223F4 MOV W1, W1
	0x022223F8 BFM X1, X2, 0x20, 0x1F
	0x022223FC RET
	0x02222400 MOV W1, W1
	0x02222404 BFM X1, X2, 0x20, 0x1F
	0x02222408 RET
	0x0222240C MOV W1, W1
	0x02222410 BFM X1, X2, 0x20, 0x1F
	0x02222414 RET
	0x02222418 MOV W1, W1
	0x0222241C BFM X1, X2, 0x20, 0x1F
	0x02222420 RET
	0x02222424 MOV W1, W1
	0x02222428 BFM X1, X2, 0x20, 0x1F
	0x0222242C RET
	0x02222430 MOV W1, W1
	0x02222434 BFM X1, X2, 0x20, 0x1F
	0x02222438 RET
	0x0222243C MOV W1, W1
	0x02222440 BFM X1, X2, 0x20, 0x1F
	0x02222444 RET
	0x02222448 MOV W1, W1
	0x0222244C BFM X1, X2, 0x20, 0x1F
	0x02222450 RET
	0x02222454 MOV W1, W1
	0x02222458 BFM X1, X2, 0x20, 0x1F
	0x0222245C RET
	0x02222460 MOV W1, W1
	0x02222464 BFM X1, X2, 0x20, 0x1F
	0x02222468 RET
	0x0222246C MOV W1, W1
	0x02222470 BFM X1, X2, 0x20, 0x1F
	0x02222474 RET
	0x02222478 MOV W1, W1
	0x0222247C BFM X1, X2, 0x20, 0x1F
	0x02222480 RET
	0x02222484 MOV W1, W1
	0x02222488 BFM X1, X2, 0x20, 0x1F

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+72], X2
	003 Move [X31+80], X30
	004 Move [X31+96], X22
	005 Move [X31+104], X21
	006 Move [X31+112], X20
	007 Move [X31+120], X19
	008 Move [X31+64], X1
	009 Move X8, [X3+56]
	010 Move X20, X0
	011 Compare X8, 0
	012 JumpIfNotEqual {29}
	013 Move X0, 0x1ED2000
	014 Move X0, [X0+3584]
	015 Move X19, X3
	016 Call 0x1C17CF4
	017 Move X0, 0x1EFB000
	018 Move X0, [X0+312]
	019 Call 0x1C17CF4
	020 Move X0, 0x1ED2000
	021 Move X0, [X0+3608]
	022 Call 0x1C17CF4
	023 Move X8, [X19+56]
	024 Compare X8, 0
	025 JumpIfNotEqual {29}
	026 Move X0, X19
	027 Call 0x1C5D6E0
	028 Move X8, [X19+56]
	029 Move [X31+32], X31
	030 Move [X31+40], X31
	031 Move [X31+48], X31
	032 Move X1, [X8+8]
	033 Add X0, X31, 64
	034 Call ReadOnlyArray`1<NamedValue>.System.Collections.Generic.IEnumerable<TValue>.GetEnumerator, X0
	035 Move X19, X0
	036 Compare X0, 0
	037 JumpIfEqual {132}
	038 Move X21, 0x1ED2000
	039 Move X22, 0x1EFB000
	040 Move X21, [X21+3608]
	041 Move X22, [X22+312]
	042 Move X8, [X19]
	043 Move X1, [X21]
	044 NotImplemented "Instruction LDRH not yet implemented."
	045 Compare X9, 0
	046 JumpIfEqual {53}
	047 Move X10, [X8+176]
	048 Add X10, X10, 8
	049 NotImplemented "Instruction LDUR not yet implemented."
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Subtract X9, X9, 1
	052 Add X10, X10, 16
	053 Move X0, X19
	054 Move W2, W31
	055 Call 0x1C5D788
	056 NotImplemented "Instruction LDRSW not yet implemented."
	057 Add X8, X8, X9
	058 Add X0, X8, 312
	059 Move X8, [X0]
	060 Move X1, [X0+8]
	061 Move X0, X19
	062 NotImplemented "Instruction BLR not yet implemented."
	063 Move TEMP, X0
	064 And TEMP, TEMP, 1
	065 Compare TEMP, 1
	066 JumpIfNotEqual {97}
	067 Move X8, [X19]
	068 Move X1, [X22]
	069 NotImplemented "Instruction LDRH not yet implemented."
	070 Compare X9, 0
	071 JumpIfEqual {78}
	072 Move X10, [X8+176]
	073 Add X10, X10, 8
	074 NotImplemented "Instruction LDUR not yet implemented."
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Subtract X9, X9, 1
	077 Add X10, X10, 16
	078 Move X0, X19
	079 Move W2, W31
	080 Call 0x1C5D788
	081 NotImplemented "Instruction LDRSW not yet implemented."
	082 Add X8, X8, X9
	083 Add X0, X8, 312
	084 Move X9, [X0]
	085 Move X1, [X0+8]
	086 Add X8, X31, 8
	087 Move X0, X19
	088 NotImplemented "Instruction BLR not yet implemented."
	089 NotImplemented "Instruction LDUR not yet implemented."
	090 Move X8, [X31+24]
	091 Move [X31+2], V0
	092 Move [X31+48], X8
	093 Add X0, X31, 32
	094 Move X1, X20
	095 Move X2, X31
	096 Call NamedValue.ApplyToObject, X0, X1
	097 Move X20, X31
	098 Compare X19, 0
	099 JumpIfEqual {123}
	100 Move X10, 0x1ED2000
	101 Move X8, [X19]
	102 Move X10, [X10+3584]
	103 NotImplemented "Instruction LDRH not yet implemented."
	104 Move X1, [X10]
	105 Compare X9, 0
	106 JumpIfEqual {113}
	107 Move X10, [X8+176]
	108 Add X10, X10, 8
	109 NotImplemented "Instruction LDUR not yet implemented."
	110 NotImplemented "Instruction CMP not yet implemented."
	111 Subtract X9, X9, 1
	112 Add X10, X10, 16
	113 Move X0, X19
	114 Move W2, W31
	115 Call 0x1C5D788
	116 NotImplemented "Instruction LDRSW not yet implemented."
	117 Add X8, X8, X9
	118 Add X0, X8, 312
	119 Move X8, [X0]
	120 Move X1, [X0+8]
	121 Move X0, X19
	122 NotImplemented "Instruction BLR not yet implemented."
	123 Compare X20, 0
	124 JumpIfNotEqual {133}
	125 Move X20, [X31+112]
	126 Move X19, [X31+120]
	127 Move X22, [X31+96]
	128 Move X21, [X31+104]
	129 Move X30, [X31+80]
	130 Add X31, X31, 128
	131 Return 
	132 Call 0x1C17F20
	133 Move X0, X20
	134 Call 0x1C17F18
	135 NotImplemented "Instruction CMP not yet implemented."
	136 Call 0x3EB2AD0
	137 Move X20, [X0]
	138 Call 0x3EB2AE0
	139 Move [X31+88], X0
	140 Move X20, X31
	141 Move [X31+88], X0
	142 Compare X19, 0
	143 JumpIfEqual {167}
	144 Move X10, 0x1ED2000
	145 Move X8, [X19]
	146 Move X10, [X10+3584]
	147 NotImplemented "Instruction LDRH not yet implemented."
	148 Move X1, [X10]
	149 Compare X9, 0
	150 JumpIfEqual {157}
	151 Move X10, [X8+176]
	152 Add X10, X10, 8
	153 NotImplemented "Instruction LDUR not yet implemented."
	154 NotImplemented "Instruction CMP not yet implemented."
	155 Subtract X9, X9, 1
	156 Add X10, X10, 16
	157 Move X0, X19
	158 Move W2, W31
	159 Call 0x1C5D788
	160 NotImplemented "Instruction LDRSW not yet implemented."
	161 Add X8, X8, X9
	162 Add X0, X8, 312
	163 Move X8, [X0]
	164 Move X1, [X0+8]
	165 Move X0, X19
	166 NotImplemented "Instruction BLR not yet implemented."
	167 Compare X20, 0
	168 JumpIfNotEqual {171}
	169 Move X0, [X31+88]
	170 Call 0x1D2D690
	171 Move X0, X20
	172 Call 0x1C17F18
	173 Call 0x1991590

