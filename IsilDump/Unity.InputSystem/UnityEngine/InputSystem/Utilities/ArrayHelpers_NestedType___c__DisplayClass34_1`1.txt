Type: UnityEngine.InputSystem.Utilities.ArrayHelpers/<>c__DisplayClass34_1`1

Method: System.Void .ctor()

Disassembly:
	0x023761CC LDP X22, X21, [X31 + 0x10]
	0x023761D0 MOVZ W4, 0x1

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Boolean <Merge>b__0(TValue x)

Disassembly:
	0x023761D4 LDR X5, [X8 + 0x18]
	0x023761D8 LDR X30, [X31], #0x30
	0x023761DC B 0x2686F5C
	0x023761E0 BL 0x1C16F20
	0x023761E4 MOV X1, X31
	0x023761E8 B 0x33BDD8C
	0x023761EC STR X30, [X31 - 0x30]!
	0x023761F0 STP X22, X21, [X31 + 0x10]
	0x023761F4 STP X20, X19, [X31 + 0x20]
	0x023761F8 ADRP X22, 0x2063000
	0x023761FC LDRB W8, [X22 + 0x8EA]
	0x02376200 MOV X20, X2
	0x02376204 MOV X19, X1
	0x02376208 MOV X21, X0
	0x0237620C TBNZ X8, 0x0, 0x2376224
	0x02376210 ADRP X0, 0x1DA5000
	0x02376214 LDR X0, [X0 + 0x718]
	0x02376218 BL 0x1C16CF4
	0x0237621C MOVZ W8, 0x1
	0x02376220 STRB W8, [X22 + 0x8EA]
	0x02376224 CBZ X19, 0x23762CC
	0x02376228 ADRP X10, 0x1DA5000
	0x0237622C LDR X8, [X19]
	0x02376230 LDR X10, [X10 + 0x718]
	0x02376234 LDRH W9, [X8 + 0x12E]
	0x02376238 LDR X1, [X10]
	0x0237623C CBZ X9, 0x2376260
	0x02376240 LDR X10, [X8 + 0xB0]
	0x02376244 ADD X10, X10, 0x8
	0x02376248 LDUR X11, [X10 - 0x8]
	0x0237624C CMP X11, X1
	0x02376250 B.EQ 0x2376270
	0x02376254 SUBS X9, X9, 0x1
	0x02376258 ADD X10, X10, 0x10
	0x0237625C B.NE 0x2376248
	0x02376260 MOVZ W2, 0x3
	0x02376264 MOV X0, X19
	0x02376268 BL 0x1C5C788
	0x0237626C B 0x2376280
	0x02376270 LDR W9, [X10]
	0x02376274 ADD W9, W9, 0x3
	0x02376278 ADD X8, X8, W9, 0x4, SXTW
	0x0237627C ADD X0, X8, 0x138
	0x02376280 LDP X8, X1, [X0]
	0x02376284 MOV X0, X19
	0x02376288 BLR X8
	0x0237628C TBZ X0, 0x0, 0x23762A0
	0x02376290 LDP X20, X19, [X31 + 0x20]
	0x02376294 LDP X22, X21, [X31 + 0x10]
	0x02376298 LDR X30, [X31], #0x30
	0x0237629C RET
	0x023762A0 LDR X8, [X20 + 0x20]
	0x023762A4 LDP X1, X2, [X21 + 0x10]
	0x023762A8 LDR X3, [X21 + 0x20]
	0x023762AC MOV X0, X19
	0x023762B0 LDR X8, [X8 + 0xC0]
	0x023762B4 LDP X20, X19, [X31 + 0x20]
	0x023762B8 LDP X22, X21, [X31 + 0x10]
	0x023762BC MOVZ W4, 0x1
	0x023762C0 LDR X5, [X8 + 0x18]
	0x023762C4 LDR X30, [X31], #0x30

ISIL:
	001 Move [X31-64], X29
	002 Move [X31-56], X30
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Add X29, X31, 0
	010 Subtract X31, X31, 16
	011 NotImplemented "Instruction MRS not yet implemented."
	012 Move X8, [X24+40]
	013 Move X19, X2
	014 Move X23, X0
	015 Move [X29-8], X8
	016 Move X8, [X2+32]
	017 Move X8, [X8+192]
	018 Move X9, [X8+24]
	019 Move W21, [X9+252]
	020 Add X9, X31, 0
	021 Add X10, X21, 15
	022 And X10, X10, 0x1FFFFFFFF
	023 Subtract X20, X9, X10
	024 Add X31, X20, 0
	025 Move X8, [X8]
	026 Move X8, [X8+128]
	027 Add X1, X8, 32
	028 Call 0x1C17D18
	029 Move X8, [X0]
	030 Compare X8, 0
	031 JumpIfEqual {70}
	032 Move X9, [X19+32]
	033 Move X22, [X8+16]
	034 Move X0, X23
	035 Move X9, [X9+192]
	036 Move X9, [X9]
	037 Move X1, [X9+128]
	038 Call 0x1C17D18
	039 Move X1, X0
	040 Move X0, X20
	041 Move X2, X21
	042 Call 0x3EB2AC0
	043 Move X8, [X19+32]
	044 Move X1, X20
	045 Move X8, [X8+192]
	046 Move X0, [X8+24]
	047 Call 0x1C17E04
	048 Compare X22, 0
	049 JumpIfEqual {70}
	050 Move X8, [X22]
	051 Move X1, X0
	052 Move X0, X22
	053 Move X9, [X8+312]
	054 Move X2, [X8+320]
	055 NotImplemented "Instruction BLR not yet implemented."
	056 Move X8, [X24+40]
	057 NotImplemented "Instruction LDUR not yet implemented."
	058 NotImplemented "Instruction CMP not yet implemented."
	059 And W0, W0, 1
	060 Add X31, X29, 0
	061 Move X20, [X31+48]
	062 Move X19, [X31+56]
	063 Move X22, [X31+32]
	064 Move X21, [X31+40]
	065 Move X24, [X31+16]
	066 Move X23, [X31+24]
	067 Move X29, [X31+64]
	068 Move X30, [X31+72]
	069 Return X0
	070 Call 0x1C17F20
	071 Call 0x3EB2B20

