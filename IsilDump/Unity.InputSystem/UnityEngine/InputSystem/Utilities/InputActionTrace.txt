Type: UnityEngine.InputSystem.Utilities.InputActionTrace

Method: UnityEngine.InputSystem.LowLevel.InputEventBuffer get_buffer()

Disassembly:
	0x0375DDEC LDR X0, [X0 + 0x1F8]
	0x0375DDF0 BL 0x1C16CF4
	0x0375DDF4 ADRP X0, 0x997000
	0x0375DDF8 LDR X0, [X0 + 0xEC8]

ISIL:
	001 NotImplemented "Instruction LDUR not yet implemented."
	002 NotImplemented "Instruction LDUR not yet implemented."
	003 Move [X8], V1
	004 Move [X8+8], V0
	005 Return X0

Method: System.Int32 get_count()

Disassembly:
	0x0375DDFC BL 0x1C16CF4
	0x0375DE00 ADRP X0, 0x99D000

ISIL:
	001 Move W0, [X0+96]
	002 Return X0

Method: System.Void .ctor()

Disassembly:
	0x0375DE04 LDR X0, [X0 + 0xD58]
	0x0375DE08 BL 0x1C16CF4

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Void .ctor(UnityEngine.InputSystem.InputAction action)

Disassembly:
	0x0375DE0C MOVZ W8, 0x1
	0x0375DE10 STRB W8, [X20 + 0xE3C]
	0x0375DE14 LDR X8, [X19 + 0x8]
	0x0375DE18 CBZ X8, 0x375DE84
	0x0375DE1C MOV X0, X19
	0x0375DE20 BL 0x375E468
	0x0375DE24 CBZ X0, 0x375E088
	0x0375DE28 MOV X1, X31
	0x0375DE2C BL 0x37342D8
	0x0375DE30 MOV X20, X0
	0x0375DE34 MOV X0, X19
	0x0375DE38 BL 0x375E468
	0x0375DE3C CBZ X0, 0x375E088
	0x0375DE40 CBZ X20, 0x375DE94
	0x0375DE44 MOV X1, X31
	0x0375DE48 BL 0x37342D8
	0x0375DE4C CBZ X0, 0x375E088
	0x0375DE50 LDR X20, [X0 + 0x10]
	0x0375DE54 MOV X0, X19
	0x0375DE58 BL 0x375E468
	0x0375DE5C CBZ X0, 0x375E088
	0x0375DE60 ADRP X8, 0x997000
	0x0375DE64 LDR X2, [X0 + 0x10]
	0x0375DE68 LDR X8, [X8 + 0xEC8]
	0x0375DE6C MOV X0, X20
	0x0375DE70 MOV X3, X31
	0x0375DE74 LDR X1, [X8]
	0x0375DE78 BL 0x32274B8
	0x0375DE7C MOV X21, X0
	0x0375DE80 B 0x375DE98

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Compare X19, 0
	009 JumpIfEqual {15}
	010 Move X0, X20
	011 Move X1, X19
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move X30, [X31+32]
	015 Move X0, 0x99C000
	016 Move X0, [X0+1320]
	017 Call 0x1C17D08
	018 Call 0x1C17F10
	019 Move X19, X0
	020 Move X0, 0x9BF000
	021 Move X0, [X0+3064]
	022 Call 0x1C17D08
	023 Move X1, X0
	024 Move X0, X19
	025 Move X2, X31
	026 Call ArgumentNullException..ctor, X0, X1
	027 Move X0, 0x9EA000
	028 Move X0, [X0+304]
	029 Call 0x1C17D08
	030 Move X1, X0
	031 Move X0, X19
	032 Call 0x1C17DEC

Method: System.Void .ctor(UnityEngine.InputSystem.InputActionMap actionMap)

Disassembly:
	0x0375DFAC STR X21, [X20 + 0x38]
	0x0375DFB0 BL 0x375E598
	0x0375DFB4 MOV X21, X0
	0x0375DFB8 CBZ X0, 0x375DFD0
	0x0375DFBC LDR X8, [X20]
	0x0375DFC0 MOV X0, X21
	0x0375DFC4 LDR X1, [X8 + 0x40]
	0x0375DFC8 BL 0x1C16E00
	0x0375DFCC CBZ X0, 0x375E08C
	0x0375DFD0 LDR W8, [X20 + 0x18]
	0x0375DFD4 CMP W8, 0x4
	0x0375DFD8 B.LS 0x375E084
	0x0375DFDC MOV X0, X19
	0x0375DFE0 STR X21, [X20 + 0x40]
	0x0375DFE4 BL 0x375E4DC
	0x0375DFE8 MOV X21, X0
	0x0375DFEC CBZ X0, 0x375E004
	0x0375DFF0 LDR X8, [X20]
	0x0375DFF4 MOV X0, X21
	0x0375DFF8 LDR X1, [X8 + 0x40]
	0x0375DFFC BL 0x1C16E00
	0x0375E000 CBZ X0, 0x375E08C
	0x0375E004 LDR W8, [X20 + 0x18]
	0x0375E008 CMP W8, 0x5
	0x0375E00C B.LS 0x375E084
	0x0375E010 MOV X0, X19
	0x0375E014 STR X21, [X20 + 0x48]
	0x0375E018 BL 0x375E55C
	0x0375E01C LDR X0, [X22]
	0x0375E020 ADD X1, X31, 0x0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Compare X19, 0
	009 JumpIfEqual {15}
	010 Move X0, X20
	011 Move X1, X19
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move X30, [X31+32]
	015 Move X0, 0x99C000
	016 Move X0, [X0+1320]
	017 Call 0x1C17D08
	018 Call 0x1C17F10
	019 Move X19, X0
	020 Move X0, 0x9BF000
	021 Move X0, [X0+3088]
	022 Call 0x1C17D08
	023 Move X1, X0
	024 Move X0, X19
	025 Move X2, X31
	026 Call ArgumentNullException..ctor, X0, X1
	027 Move X0, 0x9E9000
	028 Move X0, [X0+336]
	029 Call 0x1C17D08
	030 Move X1, X0
	031 Move X0, X19
	032 Call 0x1C17DEC

Method: System.Void SubscribeToAll()

Disassembly:
	0x0375E12C BL 0x1C16CF4
	0x0375E130 ADRP X0, 0x9E7000
	0x0375E134 LDR X0, [X0 + 0x20]
	0x0375E138 BL 0x1C16CF4
	0x0375E13C ADRP X0, 0x9E7000
	0x0375E140 LDR X0, [X0 + 0x28]
	0x0375E144 BL 0x1C16CF4
	0x0375E148 ADRP X0, 0x9E8000
	0x0375E14C LDR X0, [X0 + 0x200]
	0x0375E150 BL 0x1C16CF4
	0x0375E154 ADRP X0, 0x9E6000
	0x0375E158 LDR X0, [X0 + 0xF68]
	0x0375E15C BL 0x1C16CF4
	0x0375E160 ADRP X0, 0x999000
	0x0375E164 LDR X0, [X0 + 0x3E0]
	0x0375E168 BL 0x1C16CF4
	0x0375E16C ADRP X0, 0x9E7000
	0x0375E170 LDR X0, [X0 + 0x10]
	0x0375E174 BL 0x1C16CF4
	0x0375E178 MOVZ W8, 0x1
	0x0375E17C STRB W8, [X22 + 0xE39]
	0x0375E180 SUB W8, W21, 0x4
	0x0375E184 CMP W8, 0x2
	0x0375E188 STP X31, X31, [X31 + 0x18]
	0x0375E18C STR X31, [X31 + 0x28]
	0x0375E190 STP X31, X31, [X31 + 0x8]
	0x0375E194 B.HI 0x375E1D8
	0x0375E198 LDRB W8, [X19 + 0x10]
	0x0375E19C CBZ W8, 0x375E1D8
	0x0375E1A0 CBZ X20, 0x375E2F0
	0x0375E1A4 ADRP X8, 0x999000
	0x0375E1A8 LDR X8, [X8 + 0x3E0]
	0x0375E1AC LDR X1, [X8]
	0x0375E1B0 LDR X8, [X20]
	0x0375E1B4 CMP X8, X1
	0x0375E1B8 B.NE 0x375E2F4
	0x0375E1BC LDR X8, [X20 + 0xC8]
	0x0375E1C0 CBZ X8, 0x375E2F0
	0x0375E1C4 LDR W2, [X20 + 0xC0]
	0x0375E1C8 LDR X1, [X8 + 0x60]
	0x0375E1CC MOV X0, X19
	0x0375E1D0 BL 0x375D618
	0x0375E1D4 B 0x375E2C4
	0x0375E1D8 CBZ X20, 0x375E2C4
	0x0375E1DC CMP W21, 0x7
	0x0375E1E0 B.NE 0x375E2C4
	0x0375E1E4 ADRP X8, 0x999000
	0x0375E1E8 LDR X8, [X8 + 0x3E0]
	0x0375E1EC LDR X9, [X8]
	0x0375E1F0 LDR X8, [X20]
	0x0375E1F4 CMP X8, X9
	0x0375E1F8 B.EQ 0x375E2AC
	0x0375E1FC ADRP X9, 0x9E6000
	0x0375E200 LDR X9, [X9 + 0xF68]
	0x0375E204 LDR X9, [X9]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xC83000
	006 Move W8, [X20+3628]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x9E9000
	013 Move X0, [X0+360]
	014 Call 0x1C17CF4
	015 Move X0, 0x9E9000
	016 Move X0, [X0+368]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+3628], W8
	020 Move W8, [X19+16]
	021 Compare W8, 0
	022 JumpIfNotEqual {57}
	023 Move X0, X19
	024 Call InputActionTrace.HookOnActionChange, X0
	025 Move X20, X19
	026 Add X20, X20, 24
	027 Move W8, [X20]
	028 Move W9, 1
	029 NotImplemented "Instruction CMP not yet implemented."
	030 NotImplemented "Instruction STURB not yet implemented."
	031 Move X21, 0x9E9000
	032 Move X21, [X21+368]
	033 Move X2, [X21]
	034 Subtract W1, W8, 1
	035 Move X0, X20
	036 Call InlinedArray`1<Object>.get_Item, X0, X1
	037 Move X1, X0
	038 Move X0, X19
	039 Call InputActionTrace.UnsubscribeFrom, X0, X1
	040 Move W8, [X19+24]
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move X20, X19
	043 Add X20, X20, 48
	044 Move W8, [X20]
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move X21, 0x9E9000
	047 Move X21, [X21+360]
	048 Move X2, [X21]
	049 Subtract W1, W8, 1
	050 Move X0, X20
	051 Call InlinedArray`1<Object>.get_Item, X0, X1
	052 Move X1, X0
	053 Move X0, X19
	054 Call InputActionTrace.UnsubscribeFrom, X0, X1
	055 Move W8, [X19+48]
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move X20, [X31+16]
	058 Move X19, [X31+24]
	059 Move X30, [X31+32]
	060 Move X21, [X31+40]
	061 Return 

Method: System.Void UnsubscribeFromAll()

Disassembly:
	0x0375E4D4 BL 0x1C16F20
	0x0375E4D8 BL 0x1C16F28
	0x0375E4DC STP X30, X19, [X31 - 0x10]!
	0x0375E4E0 MOV X19, X0
	0x0375E4E4 LDR X0, [X0 + 0x8]
	0x0375E4E8 MOV X1, X31
	0x0375E4EC BL 0x38004D8
	0x0375E4F0 ADDS W31, W0, 0x1
	0x0375E4F4 B.EQ 0x375E520
	0x0375E4F8 LDR X8, [X19]
	0x0375E4FC CBZ X8, 0x375E52C
	0x0375E500 LDR X8, [X8 + 0x20]
	0x0375E504 CBZ X8, 0x375E52C
	0x0375E508 LDR W9, [X8 + 0x18]
	0x0375E50C CMP W0, W9
	0x0375E510 B.CS 0x375E530
	0x0375E514 ADD X8, X8, W0, 0x3, SXTW
	0x0375E518 LDR X0, [X8 + 0x20]
	0x0375E51C B 0x375E524
	0x0375E520 MOV X0, X31
	0x0375E524 LDP X30, X19, [X31], #0x10
	0x0375E528 RET
	0x0375E52C BL 0x1C16F20
	0x0375E530 BL 0x1C16F28
	0x0375E534 STR X30, [X31 - 0x10]!
	0x0375E538 LDR X0, [X0 + 0x8]
	0x0375E53C CBZ X0, 0x375E54C
	0x0375E540 MOV X1, X31
	0x0375E544 LDR X30, [X31], #0x10
	0x0375E548 B 0x3801278
	0x0375E54C BL 0x1C16F20
	0x0375E550 LDR X8, [X0 + 0x8]
	0x0375E554 LDUR V0, [X8 + 0x1C]
	0x0375E558 RET
	0x0375E55C STP X30, X19, [X31 - 0x10]!
	0x0375E560 MOV X19, X0
	0x0375E564 LDR X0, [X0 + 0x8]
	0x0375E568 CBZ X0, 0x375E588
	0x0375E56C MOV X1, X31
	0x0375E570 BL 0x3801278
	0x0375E574 LDR X8, [X19 + 0x8]
	0x0375E578 LDUR V1, [X8 + 0x1C]
	0x0375E57C FSUB D0, D0, D1
	0x0375E580 LDP X30, X19, [X31], #0x10
	0x0375E584 RET
	0x0375E588 BL 0x1C16F20
	0x0375E58C LDR X0, [X0 + 0x8]
	0x0375E590 MOV X1, X31
	0x0375E594 B 0x380038C
	0x0375E598 STP X30, X21, [X31 - 0x20]!
	0x0375E59C STP X20, X19, [X31 + 0x10]
	0x0375E5A0 ADRP X19, 0xC82000
	0x0375E5A4 LDRB W8, [X19 + 0xE3B]
	0x0375E5A8 MOV X20, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xC83000
	006 Move W8, [X20+3629]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x9E9000
	013 Move X0, [X0+360]
	014 Call 0x1C17CF4
	015 Move X0, 0x9E9000
	016 Move X0, [X0+368]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+3629], W8
	020 Move W8, [X19+96]
	021 Compare W8, 0
	022 JumpIfNotEqual {25}
	023 Move X0, X19
	024 Call InputActionTrace.UnhookOnActionChange, X0
	025 Move X20, X19
	026 Add X20, X20, 24
	027 Move W8, [X20]
	028 NotImplemented "Instruction CMP not yet implemented."
	029 NotImplemented "Instruction STURB not yet implemented."
	030 Move X21, 0x9E9000
	031 Move X21, [X21+368]
	032 Move X2, [X21]
	033 Subtract W1, W8, 1
	034 Move X0, X20
	035 Call InlinedArray`1<Object>.get_Item, X0, X1
	036 Move X1, X0
	037 Move X0, X19
	038 Call InputActionTrace.UnsubscribeFrom, X0, X1
	039 Move W8, [X19+24]
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move X20, X19
	042 Add X20, X20, 48
	043 Move W8, [X20]
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move X21, 0x9E9000
	046 Move X21, [X21+360]
	047 Move X2, [X21]
	048 Subtract W1, W8, 1
	049 Move X0, X20
	050 Call InlinedArray`1<Object>.get_Item, X0, X1
	051 Move X1, X0
	052 Move X0, X19
	053 Call InputActionTrace.UnsubscribeFrom, X0, X1
	054 Move W8, [X19+48]
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move X20, [X31+16]
	057 Move X19, [X31+24]
	058 Move X30, [X31+32]
	059 Move X21, [X31+40]
	060 Return 

Method: System.Void SubscribeTo(UnityEngine.InputSystem.InputAction action)

Disassembly:
	0x0375DE84 ADRP X8, 0x99D000
	0x0375DE88 LDR X8, [X8 + 0xD58]
	0x0375DE8C LDR X0, [X8]
	0x0375DE90 B 0x375E070
	0x0375DE94 LDR X21, [X0 + 0x10]
	0x0375DE98 ADRP X8, 0x996000
	0x0375DE9C LDR X8, [X8 + 0x9D0]
	0x0375DEA0 MOVZ W1, 0x7
	0x0375DEA4 LDR X0, [X8]
	0x0375DEA8 BL 0x1C16D6C
	0x0375DEAC CBZ X0, 0x375E088
	0x0375DEB0 MOV X20, X0
	0x0375DEB4 CBZ X21, 0x375DECC
	0x0375DEB8 LDR X8, [X20]
	0x0375DEBC MOV X0, X21
	0x0375DEC0 LDR X1, [X8 + 0x40]
	0x0375DEC4 BL 0x1C16E00
	0x0375DEC8 CBZ X0, 0x375E08C
	0x0375DECC LDR W8, [X20 + 0x18]
	0x0375DED0 CBZ W8, 0x375E084
	0x0375DED4 STR X21, [X20 + 0x20]
	0x0375DED8 ADRP X9, 0x9E8000
	0x0375DEDC LDR X8, [X19 + 0x8]
	0x0375DEE0 LDR X9, [X9]
	0x0375DEE4 ADD X1, X31, 0x1C
	0x0375DEE8 LDRB W8, [X8 + 0x1B]
	0x0375DEEC LDR X0, [X9]
	0x0375DEF0 STR W8, [X31 + 0x1C]
	0x0375DEF4 BL 0x1C16E04
	0x0375DEF8 MOV X21, X0
	0x0375DEFC CBZ X0, 0x375DF14
	0x0375DF00 LDR X8, [X20]
	0x0375DF04 MOV X0, X21
	0x0375DF08 LDR X1, [X8 + 0x40]
	0x0375DF0C BL 0x1C16E00
	0x0375DF10 CBZ X0, 0x375E08C
	0x0375DF14 LDR W8, [X20 + 0x18]
	0x0375DF18 CMP W8, 0x1
	0x0375DF1C B.LS 0x375E084
	0x0375DF20 STR X21, [X20 + 0x28]
	0x0375DF24 LDR X0, [X19 + 0x8]
	0x0375DF28 CBZ X0, 0x375E088
	0x0375DF2C ADRP X22, 0x999000
	0x0375DF30 LDR X22, [X22 + 0x978]
	0x0375DF34 MOV X1, X31
	0x0375DF38 BL 0x3801278
	0x0375DF3C LDR X0, [X22]
	0x0375DF40 ADD X1, X31, 0x8
	0x0375DF44 STR D0, [X31 + 0x8]
	0x0375DF48 BL 0x1C16E04
	0x0375DF4C MOV X21, X0
	0x0375DF50 CBZ X0, 0x375DF68
	0x0375DF54 LDR X8, [X20]
	0x0375DF58 MOV X0, X21
	0x0375DF5C LDR X1, [X8 + 0x40]
	0x0375DF60 BL 0x1C16E00
	0x0375DF64 CBZ X0, 0x375E08C
	0x0375DF68 LDR W8, [X20 + 0x18]
	0x0375DF6C CMP W8, 0x2
	0x0375DF70 B.LS 0x375E084
	0x0375DF74 MOV X0, X19
	0x0375DF78 STR X21, [X20 + 0x30]
	0x0375DF7C BL 0x375E49C
	0x0375DF80 MOV X21, X0
	0x0375DF84 CBZ X0, 0x375DF9C
	0x0375DF88 LDR X8, [X20]
	0x0375DF8C MOV X0, X21
	0x0375DF90 LDR X1, [X8 + 0x40]
	0x0375DF94 BL 0x1C16E00
	0x0375DF98 CBZ X0, 0x375E08C
	0x0375DF9C LDR W8, [X20 + 0x18]
	0x0375DFA0 CMP W8, 0x3
	0x0375DFA4 B.LS 0x375E084
	0x0375DFA8 MOV X0, X19

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xC84000
	007 Move W8, [X21+3630]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0x99B000
	015 Move X0, [X0+984]
	016 Call 0x1C17CF4
	017 Move X0, 0x9EA000
	018 Move X0, [X0+312]
	019 Call 0x1C17CF4
	020 Move X0, 0x9EA000
	021 Move X0, [X0+320]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+3630], W8
	025 Compare X19, 0
	026 JumpIfEqual {67}
	027 Move X22, 0x9EA000
	028 Move X21, [X20+152]
	029 Move X22, [X22+312]
	030 Compare X21, 0
	031 JumpIfNotEqual {44}
	032 Move X8, 0x99B000
	033 Move X8, [X8+984]
	034 Move X0, [X8]
	035 Call 0x1C17F10
	036 Move X8, 0x9EA000
	037 Move X8, [X8+320]
	038 Move X1, X20
	039 Move X3, X31
	040 Move X21, X0
	041 Move X2, [X8]
	042 Call Action`1<CallbackContext>..ctor, X0, X1, X2
	043 Move [X20+152], X21
	044 Move X0, X19
	045 Move X1, X21
	046 Move X2, X31
	047 Call InputAction.add_performed, X0, X1
	048 Move X1, [X20+152]
	049 Move X0, X19
	050 Move X2, X31
	051 Call InputAction.add_started, X0, X1
	052 Move X1, [X20+152]
	053 Move X0, X19
	054 Move X2, X31
	055 Call InputAction.add_canceled, X0, X1
	056 Move X3, [X22]
	057 Add X0, X20, 24
	058 Move X1, X19
	059 Move X20, [X31+32]
	060 Move X19, [X31+40]
	061 Move X22, [X31+16]
	062 Move X21, [X31+24]
	063 Move W2, 10
	064 Move X30, [X31+48]
	065 Call InlinedArray`1<Object>.AppendWithCapacity, X0, X1, X2
	066 Return 
	067 Move X0, 0x99C000
	068 Move X0, [X0+1320]
	069 Call 0x1C17D08
	070 Call 0x1C17F10
	071 Move X19, X0
	072 Move X0, 0x9BF000
	073 Move X0, [X0+3064]
	074 Call 0x1C17D08
	075 Move X1, X0
	076 Move X0, X19
	077 Move X2, X31
	078 Call ArgumentNullException..ctor, X0, X1
	079 Move X0, 0x9EA000
	080 Move X0, [X0+328]
	081 Call 0x1C17D08
	082 Move X1, X0
	083 Move X0, X19
	084 Call 0x1C17DEC

Method: System.Void SubscribeTo(UnityEngine.InputSystem.InputActionMap actionMap)

Disassembly:
	0x0375E024 STR D0, [X31]
	0x0375E028 BL 0x1C16E04
	0x0375E02C MOV X19, X0
	0x0375E030 CBZ X0, 0x375E048
	0x0375E034 LDR X8, [X20]
	0x0375E038 MOV X0, X19
	0x0375E03C LDR X1, [X8 + 0x40]
	0x0375E040 BL 0x1C16E00
	0x0375E044 CBZ X0, 0x375E08C
	0x0375E048 LDR W8, [X20 + 0x18]
	0x0375E04C CMP W8, 0x6
	0x0375E050 B.LS 0x375E084
	0x0375E054 ADRP X8, 0x9E8000
	0x0375E058 LDR X8, [X8 + 0x1F8]
	0x0375E05C STR X19, [X20 + 0x50]
	0x0375E060 MOV X1, X20
	0x0375E064 MOV X2, X31
	0x0375E068 LDR X0, [X8]
	0x0375E06C BL 0x3227C5C
	0x0375E070 LDP X20, X19, [X31 + 0x30]
	0x0375E074 LDP X22, X21, [X31 + 0x20]
	0x0375E078 LDR X30, [X31 + 0x10]
	0x0375E07C ADD X31, X31, 0x40
	0x0375E080 RET
	0x0375E084 BL 0x1C16F28
	0x0375E088 BL 0x1C16F20
	0x0375E08C BL 0x1C16F44
	0x0375E090 MOV X1, X31
	0x0375E094 BL 0x1C16DEC
	0x0375E098 STP X30, X19, [X31 - 0x10]!
	0x0375E09C MOV X19, X0
	0x0375E0A0 BL 0x375D4D4
	0x0375E0A4 MOV X0, X19
	0x0375E0A8 LDP X30, X19, [X31], #0x10
	0x0375E0AC B 0x375D8D0
	0x0375E0B0 STR X30, [X31 - 0x20]!
	0x0375E0B4 STP X20, X19, [X31 + 0x10]
	0x0375E0B8 STR X1, [X0]
	0x0375E0BC CBZ X1, 0x375E0F4
	0x0375E0C0 MOV X20, X1
	0x0375E0C4 MOV X19, X0
	0x0375E0C8 ADD X0, X1, 0x48
	0x0375E0CC MOV X1, X31
	0x0375E0D0 BL 0x380180C
	0x0375E0D4 STR X0, [X19 + 0x8]
	0x0375E0D8 LDR W8, [X20 + 0x60]
	0x0375E0DC STR X31, [X19 + 0x18]
	0x0375E0E0 STR W31, [X19 + 0x20]
	0x0375E0E4 STR W8, [X19 + 0x10]
	0x0375E0E8 LDP X20, X19, [X31 + 0x10]
	0x0375E0EC LDR X30, [X31], #0x20
	0x0375E0F0 RET
	0x0375E0F4 BL 0x1C16F20
	0x0375E0F8 B 0x375DD2C
	0x0375E0FC SUB X31, X31, 0x60
	0x0375E100 STR X30, [X31 + 0x30]
	0x0375E104 STP X22, X21, [X31 + 0x40]
	0x0375E108 STP X20, X19, [X31 + 0x50]
	0x0375E10C ADRP X22, 0xC82000
	0x0375E110 LDRB W8, [X22 + 0xE39]
	0x0375E114 MOV W21, W2
	0x0375E118 MOV X20, X1
	0x0375E11C MOV X19, X0
	0x0375E120 TBNZ X8, 0x0, 0x375E180
	0x0375E124 ADRP X0, 0x9E7000
	0x0375E128 LDR X0, [X0 + 0x18]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xC83000
	007 Move W8, [X21+3631]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0x99A000
	015 Move X0, [X0+984]
	016 Call 0x1C17CF4
	017 Move X0, 0x9E9000
	018 Move X0, [X0+344]
	019 Call 0x1C17CF4
	020 Move X0, 0x9E9000
	021 Move X0, [X0+320]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+3631], W8
	025 Compare X19, 0
	026 JumpIfEqual {59}
	027 Move X22, 0x9E9000
	028 Move X21, [X20+152]
	029 Move X22, [X22+344]
	030 Compare X21, 0
	031 JumpIfNotEqual {44}
	032 Move X8, 0x99A000
	033 Move X8, [X8+984]
	034 Move X0, [X8]
	035 Call 0x1C17F10
	036 Move X8, 0x9E9000
	037 Move X8, [X8+320]
	038 Move X1, X20
	039 Move X3, X31
	040 Move X21, X0
	041 Move X2, [X8]
	042 Call Action`1<CallbackContext>..ctor, X0, X1, X2
	043 Move [X20+152], X21
	044 Move X0, X19
	045 Move X1, X21
	046 Move X2, X31
	047 Call InputActionMap.add_actionTriggered, X0, X1
	048 Move X3, [X22]
	049 Add X0, X20, 48
	050 Move X1, X19
	051 Move X20, [X31+32]
	052 Move X19, [X31+40]
	053 Move X22, [X31+16]
	054 Move X21, [X31+24]
	055 Move W2, 10
	056 Move X30, [X31+48]
	057 Call InlinedArray`1<Object>.AppendWithCapacity, X0, X1, X2
	058 Return 
	059 Move X0, 0x99B000
	060 Move X0, [X0+1320]
	061 Call 0x1C17D08
	062 Call 0x1C17F10
	063 Move X19, X0
	064 Move X0, 0x9BE000
	065 Move X0, [X0+3088]
	066 Call 0x1C17D08
	067 Move X1, X0
	068 Move X0, X19
	069 Move X2, X31
	070 Call ArgumentNullException..ctor, X0, X1
	071 Move X0, 0x9E9000
	072 Move X0, [X0+352]
	073 Call 0x1C17D08
	074 Move X1, X0
	075 Move X0, X19
	076 Call 0x1C17DEC

Method: System.Void UnsubscribeFrom(UnityEngine.InputSystem.InputAction action)

Disassembly:
	0x0375E2C4 LDP X20, X19, [X31 + 0x50]
	0x0375E2C8 LDP X22, X21, [X31 + 0x40]
	0x0375E2CC LDR X30, [X31 + 0x30]
	0x0375E2D0 ADD X31, X31, 0x60
	0x0375E2D4 RET
	0x0375E2D8 ADRP X8, 0x9E7000
	0x0375E2DC LDR X8, [X8 + 0x18]
	0x0375E2E0 ADD X0, X31, 0x18
	0x0375E2E4 LDR X1, [X8]
	0x0375E2E8 BL 0x2BC4968
	0x0375E2EC B 0x375E2C4
	0x0375E2F0 BL 0x1C16F20
	0x0375E2F4 MOV X0, X20
	0x0375E2F8 BL 0x1C171E0
	0x0375E2FC B 0x375E304
	0x0375E300 B 0x375E304
	0x0375E304 MOV X19, X0
	0x0375E308 CMP W1, 0x1
	0x0375E30C B.NE 0x375E340
	0x0375E310 MOV X0, X19
	0x0375E314 BL 0x3EB1AD0
	0x0375E318 LDR X20, [X0]
	0x0375E31C BL 0x3EB1AE0
	0x0375E320 ADRP X8, 0x9E7000
	0x0375E324 LDR X8, [X8 + 0x18]
	0x0375E328 ADD X0, X31, 0x18
	0x0375E32C LDR X1, [X8]
	0x0375E330 BL 0x2BC4968
	0x0375E334 CBZ X20, 0x375E2C4
	0x0375E338 MOV X0, X20
	0x0375E33C BL 0x1C16F18
	0x0375E340 MOV X20, X31
	0x0375E344 B 0x375E34C
	0x0375E348 MOV X19, X0
	0x0375E34C ADRP X8, 0x9E7000
	0x0375E350 LDR X8, [X8 + 0x18]
	0x0375E354 LDR X1, [X8]
	0x0375E358 ADD X0, X31, 0x18
	0x0375E35C BL 0x2BC4968
	0x0375E360 CBNZ X20, 0x375E36C
	0x0375E364 MOV X0, X19
	0x0375E368 BL 0x1D2C690
	0x0375E36C MOV X0, X20
	0x0375E370 BL 0x1C16F18
	0x0375E374 BL 0x1990590
	0x0375E378 SUB X31, X31, 0x50
	0x0375E37C STR X30, [X31 + 0x20]
	0x0375E380 STP X22, X21, [X31 + 0x30]
	0x0375E384 STP X20, X19, [X31 + 0x40]
	0x0375E388 ADRP X21, 0xC82000
	0x0375E38C LDRB W8, [X21 + 0xE3A]
	0x0375E390 MOV X20, X1
	0x0375E394 MOV X19, X0
	0x0375E398 TBNZ X8, 0x0, 0x375E3C8
	0x0375E39C ADRP X0, 0x9E8000
	0x0375E3A0 LDR X0, [X0 + 0x208]
	0x0375E3A4 BL 0x1C16CF4
	0x0375E3A8 ADRP X0, 0x9E8000
	0x0375E3AC LDR X0, [X0 + 0x210]
	0x0375E3B0 BL 0x1C16CF4
	0x0375E3B4 ADRP X0, 0x9E8000
	0x0375E3B8 LDR X0, [X0 + 0x1B8]
	0x0375E3BC BL 0x1C16CF4
	0x0375E3C0 MOVZ W8, 0x1
	0x0375E3C4 STRB W8, [X21 + 0xE3A]
	0x0375E3C8 CBZ X20, 0x375E464
	0x0375E3CC LDR X20, [X20 + 0x60]
	0x0375E3D0 CBZ X20, 0x375E450
	0x0375E3D4 ADRP X8, 0x9E8000
	0x0375E3D8 LDR X8, [X8 + 0x1B8]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+40], X21
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move X21, 0xC83000
	007 Move W8, [X21+3632]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x9E9000
	015 Move X0, [X0+392]
	016 Call 0x1C17CF4
	017 Move X0, 0x9E9000
	018 Move X0, [X0+400]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+3632], W8
	022 Compare X20, 0
	023 JumpIfEqual {61}
	024 Move X1, [X19+152]
	025 Compare X1, 0
	026 JumpIfEqual {55}
	027 Move X21, 0x9E9000
	028 Move X21, [X21+400]
	029 Move X0, X20
	030 Move X2, X31
	031 Call InputAction.remove_performed, X0, X1
	032 Move X1, [X19+152]
	033 Move X0, X20
	034 Move X2, X31
	035 Call InputAction.remove_started, X0, X1
	036 Move X1, [X19+152]
	037 Move X0, X20
	038 Move X2, X31
	039 Call InputAction.remove_canceled, X0, X1
	040 Move X8, [X19+40]
	041 NotImplemented "Instruction LDUR not yet implemented."
	042 Move X2, [X21]
	043 Add X0, X31, 0
	044 Move X1, X20
	045 Move [X31+16], X8
	046 Move [X31], V0
	047 Call 0x21FC010, X0, X1
	048 Add W31, W0, 1
	049 Move X8, 0x9E9000
	050 Move X8, [X8+392]
	051 Move W1, W0
	052 Add X0, X19, 24
	053 Move X2, [X8]
	054 Call InlinedArray`1<Object>.RemoveAtWithCapacity, X0, X1
	055 Move X20, [X31+48]
	056 Move X19, [X31+56]
	057 Move X30, [X31+32]
	058 Move X21, [X31+40]
	059 Add X31, X31, 64
	060 Return 
	061 Move X0, 0x99B000
	062 Move X0, [X0+1320]
	063 Call 0x1C17D08
	064 Call 0x1C17F10
	065 Move X19, X0
	066 Move X0, 0x9BE000
	067 Move X0, [X0+3064]
	068 Call 0x1C17D08
	069 Move X1, X0
	070 Move X0, X19
	071 Move X2, X31
	072 Call ArgumentNullException..ctor, X0, X1
	073 Move X0, 0x9E9000
	074 Move X0, [X0+408]
	075 Call 0x1C17D08
	076 Move X1, X0
	077 Move X0, X19
	078 Call 0x1C17DEC

Method: System.Void UnsubscribeFrom(UnityEngine.InputSystem.InputActionMap actionMap)

Disassembly:
	0x0375E3DC LDR X9, [X19 + 0x78]
	0x0375E3E0 LDUR V0, [X19 + 0x68]
	0x0375E3E4 ADD X0, X31, 0x0
	0x0375E3E8 LDR X2, [X8]
	0x0375E3EC MOV X1, X20
	0x0375E3F0 STR X9, [X31 + 0x10]
	0x0375E3F4 STR V0, [X31]
	0x0375E3F8 BL 0x21FB010
	0x0375E3FC ADDS W31, W0, 0x1
	0x0375E400 B.EQ 0x375E450
	0x0375E404 MOV W21, W0
	0x0375E408 MOV X0, X20
	0x0375E40C MOV X1, X31
	0x0375E410 ADD X22, X19, 0x68
	0x0375E414 BL 0x374B0A0
	0x0375E418 ADRP X8, 0x9E8000
	0x0375E41C LDR X8, [X8 + 0x208]
	0x0375E420 MOV X20, X0
	0x0375E424 ADD X0, X19, 0x80
	0x0375E428 MOV X1, X20
	0x0375E42C LDR X2, [X8]
	0x0375E430 BL 0x2DEA7E8
	0x0375E434 ADRP X8, 0x9E8000
	0x0375E438 LDR X8, [X8 + 0x210]
	0x0375E43C MOV X0, X22
	0x0375E440 MOV W1, W21
	0x0375E444 MOV X2, X20
	0x0375E448 LDR X3, [X8]
	0x0375E44C BL 0x2DEA488
	0x0375E450 LDP X20, X19, [X31 + 0x40]
	0x0375E454 LDP X22, X21, [X31 + 0x30]
	0x0375E458 LDR X30, [X31 + 0x20]
	0x0375E45C ADD X31, X31, 0x50
	0x0375E460 RET
	0x0375E464 BL 0x1C16F20
	0x0375E468 STR X30, [X31 - 0x10]!
	0x0375E46C MOV X8, X0
	0x0375E470 LDR X0, [X0]
	0x0375E474 CBZ X0, 0x375E48C
	0x0375E478 LDR X8, [X8 + 0x8]
	0x0375E47C MOV X2, X31
	0x0375E480 LDRH W1, [X8 + 0x16]
	0x0375E484 LDR X30, [X31], #0x10
	0x0375E488 B 0x374FCD8
	0x0375E48C BL 0x1C16F20
	0x0375E490 LDR X8, [X0 + 0x8]
	0x0375E494 LDRB W0, [X8 + 0x1B]
	0x0375E498 RET
	0x0375E49C STR X30, [X31 - 0x10]!
	0x0375E4A0 LDR X8, [X0]
	0x0375E4A4 CBZ X8, 0x375E4D4
	0x0375E4A8 LDR X8, [X8 + 0x18]
	0x0375E4AC CBZ X8, 0x375E4D4
	0x0375E4B0 LDR X9, [X0 + 0x8]
	0x0375E4B4 LDR W10, [X8 + 0x18]
	0x0375E4B8 LDRH W9, [X9 + 0x14]
	0x0375E4BC CMP W9, W10
	0x0375E4C0 B.CS 0x375E4D8
	0x0375E4C4 ADD X8, X8, W9, 0x3, UXTW
	0x0375E4C8 LDR X0, [X8 + 0x20]
	0x0375E4CC LDR X30, [X31], #0x10
	0x0375E4D0 RET

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+40], X21
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move X21, 0xC83000
	007 Move W8, [X21+3633]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x9E9000
	015 Move X0, [X0+416]
	016 Call 0x1C17CF4
	017 Move X0, 0x9E9000
	018 Move X0, [X0+424]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+3633], W8
	022 Compare X20, 0
	023 JumpIfEqual {53}
	024 Move X1, [X19+152]
	025 Compare X1, 0
	026 JumpIfEqual {47}
	027 Move X21, 0x9E9000
	028 Move X21, [X21+424]
	029 Move X0, X20
	030 Move X2, X31
	031 Call InputActionMap.remove_actionTriggered, X0, X1
	032 Move X8, [X19+64]
	033 Move V0, [X19+3]
	034 Move X2, [X21]
	035 Add X0, X31, 0
	036 Move X1, X20
	037 Move [X31+16], X8
	038 Move [X31], V0
	039 Call 0x21FC010, X0, X1
	040 Add W31, W0, 1
	041 Move X8, 0x9E9000
	042 Move X8, [X8+416]
	043 Move W1, W0
	044 Add X0, X19, 48
	045 Move X2, [X8]
	046 Call InlinedArray`1<Object>.RemoveAtWithCapacity, X0, X1
	047 Move X20, [X31+48]
	048 Move X19, [X31+56]
	049 Move X30, [X31+32]
	050 Move X21, [X31+40]
	051 Add X31, X31, 64
	052 Return 
	053 Move X0, 0x99B000
	054 Move X0, [X0+1320]
	055 Call 0x1C17D08
	056 Call 0x1C17F10
	057 Move X19, X0
	058 Move X0, 0x9BE000
	059 Move X0, [X0+3088]
	060 Call 0x1C17D08
	061 Move X1, X0
	062 Move X0, X19
	063 Move X2, X31
	064 Call ArgumentNullException..ctor, X0, X1
	065 Move X0, 0x9E9000
	066 Move X0, [X0+432]
	067 Call 0x1C17D08
	068 Move X1, X0
	069 Move X0, X19
	070 Call 0x1C17DEC

Method: System.Void RecordAction(UnityEngine.InputSystem.InputAction/CallbackContext context)

Disassembly:
	0x0375E618 MOV X1, X31
	0x0375E61C UBFM X21, X21, 0x3B, 0x3A
	0x0375E620 BL 0x374A7E8
	0x0375E624 ADD X0, X21, X0
	0x0375E628 MOV X1, X31
	0x0375E62C BL 0x374AB68
	0x0375E630 LDR X8, [X20]
	0x0375E634 CBZ X8, 0x375E72C
	0x0375E638 MOV W21, W0
	0x0375E63C MOV X0, X8
	0x0375E640 MOV X1, X31
	0x0375E644 BL 0x374A7E8
	0x0375E648 SXTW X8, W21
	0x0375E64C ADD X0, X0, X8, 0x5, LSL
	0x0375E650 MOV X1, X31
	0x0375E654 BL 0x374AB68
	0x0375E658 LDR X8, [X20]
	0x0375E65C CBZ X8, 0x375E72C
	0x0375E660 LDR X8, [X8 + 0x30]
	0x0375E664 CBZ X8, 0x375E72C
	0x0375E668 LDR W9, [X8 + 0x18]
	0x0375E66C CMP W0, W9
	0x0375E670 B.CS 0x375E778
	0x0375E674 ADD X8, X8, W0, 0x3, SXTW
	0x0375E678 LDR X20, [X8 + 0x20]
	0x0375E67C CBZ X20, 0x375E72C
	0x0375E680 LDR X8, [X20]
	0x0375E684 MOV X0, X20
	0x0375E688 LDP X9, X1, [X8 + 0x178]
	0x0375E68C BLR X9
	0x0375E690 ADRP X8, 0x995000
	0x0375E694 LDR X8, [X8 + 0x6C0]
	0x0375E698 MOV X21, X0
	0x0375E69C LDR X8, [X8]
	0x0375E6A0 LDR W9, [X8 + 0xE0]
	0x0375E6A4 CBNZ W9, 0x375E6B0
	0x0375E6A8 MOV X0, X8
	0x0375E6AC BL 0x1C16DFC
	0x0375E6B0 MOV X0, X21
	0x0375E6B4 MOV X1, X31
	0x0375E6B8 MOV X2, X31
	0x0375E6BC BL 0x3395194
	0x0375E6C0 TBNZ X0, 0x0, 0x375E77C
	0x0375E6C4 ADRP X8, 0x9BD000
	0x0375E6C8 LDR X8, [X8 + 0x850]
	0x0375E6CC LDR X0, [X8]
	0x0375E6D0 LDR W8, [X0 + 0xE0]
	0x0375E6D4 CBNZ W8, 0x375E6DC
	0x0375E6D8 BL 0x1C16DFC
	0x0375E6DC MOV X0, X19
	0x0375E6E0 LDP X20, X19, [X31 + 0x10]
	0x0375E6E4 MOV X1, X21
	0x0375E6E8 MOV X2, X31
	0x0375E6EC LDP X30, X21, [X31], #0x20
	0x0375E6F0 B 0x32C1338
	0x0375E6F4 LDR X0, [X20 + 0x8]
	0x0375E6F8 MOV X1, X31
	0x0375E6FC BL 0x380038C
	0x0375E700 MOV W21, W0
	0x0375E704 MOV X0, X20
	0x0375E708 BL 0x375E49C
	0x0375E70C CBZ X0, 0x375E72C
	0x0375E710 LDR X8, [X0]
	0x0375E714 MOV X1, X19
	0x0375E718 LDP X20, X19, [X31 + 0x10]
	0x0375E71C MOV W2, W21
	0x0375E720 LDP X4, X3, [X8 + 0x1A8]
	0x0375E724 LDP X30, X21, [X31], #0x20
	0x0375E728 BR X4
	0x0375E72C BL 0x1C16F20
	0x0375E730 ADRP X0, 0x995000
	0x0375E734 LDR X0, [X0 + 0x5B0]
	0x0375E738 BL 0x1C16D08
	0x0375E73C BL 0x1C16F10
	0x0375E740 MOV X19, X0
	0x0375E744 ADRP X0, 0x9E8000
	0x0375E748 LDR X0, [X0 + 0x218]
	0x0375E74C BL 0x1C16D08
	0x0375E750 MOV X1, X0
	0x0375E754 MOV X0, X19
	0x0375E758 MOV X2, X31
	0x0375E75C BL 0x337DF1C
	0x0375E760 ADRP X0, 0x9E8000
	0x0375E764 LDR X0, [X0 + 0x220]
	0x0375E768 BL 0x1C16D08
	0x0375E76C MOV X1, X0
	0x0375E770 MOV X0, X19
	0x0375E774 BL 0x1C16DEC
	0x0375E778 BL 0x1C16F28
	0x0375E77C ADRP X0, 0x9E8000
	0x0375E780 LDR X0, [X0 + 0x228]
	0x0375E784 BL 0x1C16D08
	0x0375E788 MOV X1, X20
	0x0375E78C MOV X2, X31
	0x0375E790 BL 0x321EFD0
	0x0375E794 MOV X19, X0
	0x0375E798 ADRP X0, 0x995000
	0x0375E79C LDR X0, [X0 + 0x5B0]
	0x0375E7A0 BL 0x1C16D08
	0x0375E7A4 BL 0x1C16F10
	0x0375E7A8 MOV X1, X19
	0x0375E7AC MOV X2, X31
	0x0375E7B0 MOV X20, X0
	0x0375E7B4 BL 0x337DF1C
	0x0375E7B8 ADRP X0, 0x9E8000
	0x0375E7BC LDR X0, [X0 + 0x220]
	0x0375E7C0 BL 0x1C16D08
	0x0375E7C4 MOV X1, X0
	0x0375E7C8 MOV X0, X20
	0x0375E7CC BL 0x1C16DEC
	0x0375E7D0 STR X30, [X31 - 0x30]!
	0x0375E7D4 STP X22, X21, [X31 + 0x10]
	0x0375E7D8 STP X20, X19, [X31 + 0x20]
	0x0375E7DC MOV X22, X0
	0x0375E7E0 LDR X0, [X0 + 0x8]
	0x0375E7E4 MOV X20, X1

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+64], X22
	004 Move [X31+72], X21
	005 Move [X31+80], X20
	006 Move [X31+88], X19
	007 Move X22, 0xC83000
	008 Move [X31], X1
	009 Move [X31+8], X2
	010 Move X21, 0x9E9000
	011 Move W8, [X22+3634]
	012 Move X21, [X21+440]
	013 Move X19, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0x9E9000
	020 Move X0, [X0+448]
	021 Call 0x1C17CF4
	022 Move X0, 0x9E9000
	023 Move X0, [X0+440]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X22+3634], W8
	027 Move X8, [X20+120]
	028 NotImplemented "Instruction LDUR not yet implemented."
	029 Move X2, [X21]
	030 Add X0, X31, 16
	031 Move X1, X19
	032 Move [X31+32], X8
	033 Move [X31+1], V0
	034 Call 0x21FC010, X0, X1
	035 Move W21, W0
	036 Add W31, W0, 1
	037 Move X8, 0x9E9000
	038 Move X8, [X8+448]
	039 Add X0, X20, 104
	040 Move W2, 10
	041 Move X1, X19
	042 Move X3, [X8]
	043 Call InlinedArray`1<Object>.AppendWithCapacity, X0, X1, X2
	044 Move W21, W0
	045 Move X0, X20
	046 Call InputActionTrace.HookOnActionChange, X0
	047 Add X0, X31, 0
	048 Move X1, X31
	049 Call CallbackContext.get_valueSizeInBytes, X0
	050 Move X1, X31
	051 Move W19, W0
	052 Add X20, X20, 72
	053 Call ActionEvent.GetEventSizeWithValueSize, X0
	054 Move W1, W0
	055 Move W2, 2048
	056 Move W3, 4
	057 Move X0, X20
	058 Move X4, X31
	059 Call InputEventBuffer.AllocateEvent, X0, X1, X2, X3
	060 Move X8, [X31]
	061 Compare X8, 0
	062 JumpIfEqual {125}
	063 Move X20, X0
	064 Move X0, X8
	065 Move X1, X31
	066 Call InputActionState.get_actionStates, X0
	067 Compare X20, 0
	068 JumpIfEqual {125}
	069 NotImplemented "Instruction LDRSW not yet implemented."
	070 Move W9, 48
	071 NotImplemented "Instruction MADD not yet implemented."
	072 Move X0, X31
	073 Call ActionEvent.get_Type
	074 And X1, X0, 0
	075 Move X0, X20
	076 Move X2, X31
	077 Call InputEvent.set_type, X0, X1
	078 Move V0, [X22+8]
	079 Move X0, X20
	080 Move X1, X31
	081 Call InputEvent.set_time, X0, V0
	082 Move X0, X20
	083 Move W1, W21
	084 Move X2, X31
	085 Call ActionEvent.set_stateIndex, X0, X1
	086 Move X0, X22
	087 Move X1, X31
	088 Call TriggerState.get_controlIndex, X0
	089 Move W1, W0
	090 Move X0, X20
	091 Move X2, X31
	092 Call ActionEvent.set_controlIndex, X0, X1
	093 NotImplemented "Instruction LDRH not yet implemented."
	094 Move X0, X20
	095 Move X2, X31
	096 Call ActionEvent.set_bindingIndex, X0, X1
	097 Move X0, X22
	098 Move X1, X31
	099 Call TriggerState.get_interactionIndex, X0
	100 Move W1, W0
	101 Move X0, X20
	102 Move X2, X31
	103 Call ActionEvent.set_interactionIndex, X0, X1
	104 Move V0, [X22+16]
	105 Move X0, X20
	106 Move X2, X31
	107 Move [X20+28], D0
	108 Move W1, [X22]
	109 Call ActionEvent.set_phase, X0, X1
	110 Move X0, X20
	111 Move X1, X31
	112 Call ActionEvent.get_valueData, X0
	113 Move X1, X0
	114 Add X0, X31, 0
	115 Move W2, W19
	116 Move X3, X31
	117 Call CallbackContext.ReadValue, X0, X1, X2
	118 Move X20, [X31+80]
	119 Move X19, [X31+88]
	120 Move X22, [X31+64]
	121 Move X21, [X31+72]
	122 Move X30, [X31+48]
	123 Add X31, X31, 96
	124 Return 
	125 Call 0x1C17F20

Method: System.Void Clear()

Disassembly:
	0x0375E7E8 MOV X1, X31
	0x0375E7EC MOV W19, W2
	0x0375E7F0 BL 0x380038C
	0x0375E7F4 MOV W21, W0
	0x0375E7F8 CMP W0, W19
	0x0375E7FC B.GT 0x375E82C
	0x0375E800 LDR X0, [X22 + 0x8]
	0x0375E804 MOV X1, X31
	0x0375E808 BL 0x3800384
	0x0375E80C SXTW X2, W21
	0x0375E810 MOV X1, X0
	0x0375E814 MOV X0, X20
	0x0375E818 LDP X20, X19, [X31 + 0x20]
	0x0375E81C LDP X22, X21, [X31 + 0x10]
	0x0375E820 MOV X3, X31
	0x0375E824 LDR X30, [X31], #0x30
	0x0375E828 B 0x3BFF954
	0x0375E82C STR W21, [X31 + 0xC]
	0x0375E830 ADRP X20, 0x995000
	0x0375E834 LDR X20, [X20 + 0x758]
	0x0375E838 MOV X0, X20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xC83000
	006 Move X20, 0x9E9000
	007 Move W8, [X21+3635]
	008 Move X20, [X20+456]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x9E9000
	015 Move X0, [X0+456]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3635], W8
	019 Add X0, X19, 72
	020 Move X1, X31
	021 Call InputEventBuffer.Reset, X0
	022 Move X1, [X20]
	023 Add X0, X19, 104
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X30, [X31+32]
	027 Move X21, [X31+40]
	028 Call InlinedArray`1<Object>.ClearWithCapacity, X0
	029 Return 

Method: System.Void Finalize()

Disassembly:
	0x0375E83C BL 0x1C16D08
	0x0375E840 ADD X1, X31, 0xC
	0x0375E844 BL 0x1C16E04
	0x0375E848 MOV X21, X0
	0x0375E84C MOV X0, X20
	0x0375E850 STR W19, [X31 + 0x8]
	0x0375E854 BL 0x1C16D08
	0x0375E858 ADD X1, X31, 0x8
	0x0375E85C BL 0x1C16E04
	0x0375E860 MOV X19, X0
	0x0375E864 ADRP X0, 0x9E8000
	0x0375E868 LDR X0, [X0 + 0x230]
	0x0375E86C BL 0x1C16D08
	0x0375E870 MOV X1, X21
	0x0375E874 MOV X2, X19
	0x0375E878 MOV X3, X31
	0x0375E87C BL 0x3227BD4
	0x0375E880 MOV X19, X0
	0x0375E884 ADRP X0, 0x99D000
	0x0375E888 LDR X0, [X0 + 0x578]
	0x0375E88C BL 0x1C16D08
	0x0375E890 BL 0x1C16F10
	0x0375E894 MOV X20, X0
	0x0375E898 ADRP X0, 0x9C0000
	0x0375E89C LDR X0, [X0 + 0xF58]
	0x0375E8A0 BL 0x1C16D08
	0x0375E8A4 MOV X2, X0
	0x0375E8A8 MOV X0, X20
	0x0375E8AC MOV X1, X19
	0x0375E8B0 MOV X3, X31
	0x0375E8B4 BL 0x330E16C
	0x0375E8B8 ADRP X0, 0x9E8000
	0x0375E8BC LDR X0, [X0 + 0x238]
	0x0375E8C0 BL 0x1C16D08
	0x0375E8C4 MOV X1, X0
	0x0375E8C8 MOV X0, X20
	0x0375E8CC BL 0x1C16DEC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, X0
	006 Call InputActionTrace.DisposeInternal, X0
	007 Move X0, X19
	008 Move X20, [X31+16]
	009 Move X19, [X31+24]
	010 Move X1, X31
	011 Move X30, [X31+32]
	012 Move X21, [X31+40]
	013 Call Object.Finalize, X0
	014 Return 
	015 NotImplemented "Instruction CMP not yet implemented."
	016 Move X21, X0
	017 Move X0, X21
	018 Call 0x3EB2AD0
	019 Move X20, [X0]
	020 Call 0x3EB2AE0
	021 Move X0, X19
	022 Move X1, X31
	023 Call Object.Finalize, X0
	024 Compare X20, 0
	025 JumpIfNotEqual {32}
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Return 
	031 Move X20, X31
	032 Move X0, X20
	033 Call 0x1C17F18
	034 Move X21, X0
	035 Move X0, X19
	036 Move X1, X31
	037 Call Object.Finalize, X0
	038 Compare X20, 0
	039 JumpIfNotEqual {42}
	040 Move X0, X21
	041 Call 0x1D2D690
	042 Move X0, X20
	043 Call 0x1C17F18
	044 Call 0x1991590

Method: System.String ToString()

Disassembly:
	0x0375E9D0 LDR X0, [X0 + 0x240]
	0x0375E9D4 BL 0x1C16CF4
	0x0375E9D8 MOVZ W8, 0x1
	0x0375E9DC STRB W8, [X21 + 0xE3E]
	0x0375E9E0 MOV X0, X19
	0x0375E9E4 BL 0x375E944
	0x0375E9E8 LDR X8, [X20]
	0x0375E9EC STP X0, X1, [X31]
	0x0375E9F0 ADD X1, X31, 0x0
	0x0375E9F4 MOV X0, X8
	0x0375E9F8 BL 0x1C16E04
	0x0375E9FC LDP X20, X19, [X31 + 0x20]
	0x0375EA00 LDP X30, X21, [X31 + 0x10]
	0x0375EA04 ADD X31, X31, 0x30
	0x0375EA08 RET
	0x0375EA0C FMUL S0, S0, S0
	0x0375EA10 FMUL S1, S1, S1
	0x0375EA14 FMUL S2, S2, S2
	0x0375EA18 FMUL S3, S3, S3
	0x0375EA1C FADD S0, S0, S1
	0x0375EA20 FADD S1, S2, S3
	0x0375EA24 FCMP S0, S1
	0x0375EA28 B.MI 0x375EA34
	0x0375EA2C CSET W0, GT
	0x0375EA30 RET
	0x0375EA34 MOVN W0, 0x0
	0x0375EA38 RET
	0x0375EA3C FMUL S0, S0, S0
	0x0375EA40 FMUL S1, S1, S1
	0x0375EA44 FMUL S3, S3, S3
	0x0375EA48 FMUL S4, S4, S4
	0x0375EA4C FMUL S2, S2, S2
	0x0375EA50 FMUL S5, S5, S5
	0x0375EA54 FADD S0, S0, S1
	0x0375EA58 FADD S1, S3, S4
	0x0375EA5C FADD S0, S2, S0
	0x0375EA60 FADD S1, S5, S1
	0x0375EA64 FCMP S0, S1
	0x0375EA68 B.MI 0x375EA74
	0x0375EA6C CSET W0, GT
	0x0375EA70 RET
	0x0375EA74 MOVN W0, 0x0
	0x0375EA78 RET
	0x0375EA7C STR X30, [X31 - 0x30]!
	0x0375EA80 STP X22, X21, [X31 + 0x10]
	0x0375EA84 STP X20, X19, [X31 + 0x20]
	0x0375EA88 ADRP X20, 0xC82000
	0x0375EA8C LDRB W8, [X20 + 0xE3F]
	0x0375EA90 MOV X19, X0
	0x0375EA94 TBNZ X8, 0x0, 0x375EAAC
	0x0375EA98 ADRP X0, 0x997000
	0x0375EA9C LDR X0, [X0 + 0x170]
	0x0375EAA0 BL 0x1C16CF4
	0x0375EAA4 MOVZ W8, 0x1
	0x0375EAA8 STRB W8, [X20 + 0xE3F]
	0x0375EAAC MOV X0, X19
	0x0375EAB0 MOV X1, X31
	0x0375EAB4 BL 0x32277A8
	0x0375EAB8 TBNZ X0, 0x0, 0x375EB00
	0x0375EABC CBZ X19, 0x375EB8C
	0x0375EAC0 MOV X0, X19
	0x0375EAC4 MOV W1, W31
	0x0375EAC8 MOV X2, X31
	0x0375EACC BL 0x3222A1C
	0x0375EAD0 ADRP X22, 0x997000
	0x0375EAD4 LDR X22, [X22 + 0x170]
	0x0375EAD8 MOV W20, W0
	0x0375EADC LDR X8, [X22]
	0x0375EAE0 LDR W9, [X8 + 0xE0]
	0x0375EAE4 CBNZ W9, 0x375EAF0
	0x0375EAE8 MOV X0, X8
	0x0375EAEC BL 0x1C16DFC
	0x0375EAF0 MOV W0, W20
	0x0375EAF4 MOV X1, X31
	0x0375EAF8 BL 0x33141B4
	0x0375EAFC TBZ X0, 0x0, 0x375EB18
	0x0375EB00 MOV W8, W31
	0x0375EB04 LDP X20, X19, [X31 + 0x20]
	0x0375EB08 LDP X22, X21, [X31 + 0x10]
	0x0375EB0C AND W0, W8, 0x1
	0x0375EB10 LDR X30, [X31], #0x30
	0x0375EB14 RET
	0x0375EB18 LDR W8, [X19 + 0x10]
	0x0375EB1C CMP W8, 0x1
	0x0375EB20 B.LT 0x375EB84
	0x0375EB24 MOV W20, W31
	0x0375EB28 MOV X0, X19
	0x0375EB2C MOV W1, W20
	0x0375EB30 MOV X2, X31
	0x0375EB34 BL 0x3222A1C
	0x0375EB38 LDR X8, [X22]
	0x0375EB3C MOV W21, W0
	0x0375EB40 LDR W9, [X8 + 0xE0]
	0x0375EB44 CBNZ W9, 0x375EB50
	0x0375EB48 MOV X0, X8
	0x0375EB4C BL 0x1C16DFC
	0x0375EB50 MOV W0, W21
	0x0375EB54 MOV X1, X31
	0x0375EB58 BL 0x331ABF0
	0x0375EB5C AND W8, W21, 0xFFFF
	0x0375EB60 CMP W8, 0x5F
	0x0375EB64 CSET W8, EQ
	0x0375EB68 ORR W8, W8, W0, 0x0
	0x0375EB6C TBZ X8, 0x0, 0x375EB04
	0x0375EB70 LDR W9, [X19 + 0x10]
	0x0375EB74 ADD W20, W20, 0x1
	0x0375EB78 CMP W20, W9
	0x0375EB7C B.LT 0x375EB28
	0x0375EB80 B 0x375EB04
	0x0375EB84 MOVZ W8, 0x1
	0x0375EB88 B 0x375EB04
	0x0375EB8C BL 0x1C16F20
	0x0375EB90 STP X30, X19, [X31 - 0x10]!
	0x0375EB94 MOV X1, X31
	0x0375EB98 MOV X19, X0
	0x0375EB9C BL 0x32277A8
	0x0375EBA0 TBZ X0, 0x0, 0x375EBB0
	0x0375EBA4 MOVZ W0, 0x1
	0x0375EBA8 LDP X30, X19, [X31], #0x10
	0x0375EBAC RET
	0x0375EBB0 MOV X0, X19
	0x0375EBB4 LDP X30, X19, [X31], #0x10
	0x0375EBB8 B 0x375EA7C
	0x0375EBBC STR X30, [X31 - 0x20]!
	0x0375EBC0 STP X20, X19, [X31 + 0x10]
	0x0375EBC4 ADRP X20, 0xC82000
	0x0375EBC8 LDRB W8, [X20 + 0xE40]
	0x0375EBCC MOV X19, X0
	0x0375EBD0 TBNZ X8, 0x0, 0x375EC00
	0x0375EBD4 ADRP X0, 0x9E8000
	0x0375EBD8 LDR X0, [X0 + 0x248]
	0x0375EBDC BL 0x1C16CF4
	0x0375EBE0 ADRP X0, 0x9E8000
	0x0375EBE4 LDR X0, [X0 + 0x250]
	0x0375EBE8 BL 0x1C16CF4
	0x0375EBEC ADRP X0, 0x996000
	0x0375EBF0 LDR X0, [X0 + 0xBF8]
	0x0375EBF4 BL 0x1C16CF4
	0x0375EBF8 MOVZ W8, 0x1
	0x0375EBFC STRB W8, [X20 + 0xE40]
	0x0375EC00 MOV X0, X19
	0x0375EC04 MOV X1, X31
	0x0375EC08 BL 0x32277A8
	0x0375EC0C TBZ X0, 0x0, 0x375EC20
	0x0375EC10 LDP X20, X19, [X31 + 0x10]
	0x0375EC14 MOVZ W0, 0x1
	0x0375EC18 LDR X30, [X31], #0x20
	0x0375EC1C RET
	0x0375EC20 CBZ X19, 0x375EC8C
	0x0375EC24 MOVZ W1, 0x2E
	0x0375EC28 MOV X0, X19
	0x0375EC2C MOV W2, W31
	0x0375EC30 MOV X3, X31
	0x0375EC34 BL 0x3229AE8
	0x0375EC38 ADRP X8, 0x996000
	0x0375EC3C LDR X8, [X8 + 0xBF8]
	0x0375EC40 MOV X19, X0
	0x0375EC44 LDR X8, [X8]
	0x0375EC48 MOV X0, X8
	0x0375EC4C BL 0x1C16F10
	0x0375EC50 ADRP X8, 0x9E8000
	0x0375EC54 LDR X8, [X8 + 0x248]
	0x0375EC58 MOV X1, X31
	0x0375EC5C MOV X3, X31
	0x0375EC60 MOV X20, X0
	0x0375EC64 LDR X2, [X8]
	0x0375EC68 BL 0x2D2F428
	0x0375EC6C ADRP X8, 0x9E8000
	0x0375EC70 LDR X8, [X8 + 0x250]
	0x0375EC74 MOV X0, X19
	0x0375EC78 MOV X1, X20
	0x0375EC7C LDP X20, X19, [X31 + 0x10]
	0x0375EC80 LDR X2, [X8]
	0x0375EC84 LDR X30, [X31], #0x20
	0x0375EC88 B 0x21B1A10
	0x0375EC8C BL 0x1C16F20
	0x0375EC90 STR X30, [X31 - 0x40]!
	0x0375EC94 STP X24, X23, [X31 + 0x10]
	0x0375EC98 STP X22, X21, [X31 + 0x20]
	0x0375EC9C STP X20, X19, [X31 + 0x30]
	0x0375ECA0 ADRP X21, 0xC82000
	0x0375ECA4 LDRB W8, [X21 + 0xE41]
	0x0375ECA8 MOV X19, X1
	0x0375ECAC MOV X20, X0
	0x0375ECB0 TBNZ X8, 0x0, 0x375ECE0
	0x0375ECB4 ADRP X0, 0x997000
	0x0375ECB8 LDR X0, [X0 + 0x170]
	0x0375ECBC BL 0x1C16CF4
	0x0375ECC0 ADRP X0, 0x995000
	0x0375ECC4 LDR X0, [X0 + 0x8F0]
	0x0375ECC8 BL 0x1C16CF4
	0x0375ECCC ADRP X0, 0x995000
	0x0375ECD0 LDR X0, [X0 + 0xDE0]
	0x0375ECD4 BL 0x1C16CF4
	0x0375ECD8 MOVZ W8, 0x1
	0x0375ECDC STRB W8, [X21 + 0xE41]
	0x0375ECE0 MOV X0, X20
	0x0375ECE4 MOV X1, X31
	0x0375ECE8 BL 0x32277A8
	0x0375ECEC TBNZ X0, 0x0, 0x375EE8C
	0x0375ECF0 CBZ X20, 0x375EE88
	0x0375ECF4 ADRP X24, 0x997000
	0x0375ECF8 LDR X24, [X24 + 0x170]
	0x0375ECFC MOV X0, X20
	0x0375ED00 MOV W1, W31
	0x0375ED04 MOV X2, X31
	0x0375ED08 BL 0x3222A1C
	0x0375ED0C LDR X8, [X24]
	0x0375ED10 MOV W21, W0
	0x0375ED14 LDR W9, [X8 + 0xE0]
	0x0375ED18 CBNZ W9, 0x375ED24
	0x0375ED1C MOV X0, X8
	0x0375ED20 BL 0x1C16DFC
	0x0375ED24 MOV W0, W21
	0x0375ED28 MOV X1, X31

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+32], X24
	004 Move [X31+40], X23
	005 Move [X31+48], X22
	006 Move [X31+56], X21
	007 Move [X31+64], X20
	008 Move [X31+72], X19
	009 Move X20, 0xC83000
	010 Move W8, [X20+3636]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {36}
	016 Move X0, 0x996000
	017 Move X0, [X0+3584]
	018 Call 0x1C17CF4
	019 Move X0, 0x9E9000
	020 Move X0, [X0+480]
	021 Call 0x1C17CF4
	022 Move X0, 0x996000
	023 Move X0, [X0+3608]
	024 Call 0x1C17CF4
	025 Move X0, 0x996000
	026 Move X0, [X0+2288]
	027 Call 0x1C17CF4
	028 Move X0, 0x9C7000
	029 Move X0, [X0+3216]
	030 Call 0x1C17CF4
	031 Move X0, 0x9E9000
	032 Move X0, [X0+488]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X20+3636], W8
	036 Move W8, [X19+96]
	037 Compare W8, 0
	038 JumpIfEqual {147}
	039 Move X8, 0x996000
	040 Move X8, [X8+2288]
	041 Move X0, [X8]
	042 Call 0x1C17F10
	043 Move X1, X31
	044 Move X20, X0
	045 Call StringBuilder..ctor, X0
	046 Compare X20, 0
	047 JumpIfEqual {180}
	048 Move W1, 91
	049 Move X0, X20
	050 Move X2, X31
	051 Call StringBuilder.Append, X0, X1
	052 Move X0, X19
	053 Call InputActionTrace.GetEnumerator, X0
	054 Move X19, X0
	055 Compare X0, 0
	056 JumpIfEqual {181}
	057 Move X21, 0x996000
	058 Move X22, 0x9E9000
	059 Move X23, 0x9E9000
	060 Move X21, [X21+3608]
	061 Move X22, [X22+480]
	062 Move X23, [X23+488]
	063 Move W24, 1
	064 Move X8, [X19]
	065 Move X1, [X21]
	066 NotImplemented "Instruction LDRH not yet implemented."
	067 Compare X9, 0
	068 JumpIfEqual {75}
	069 Move X10, [X8+176]
	070 Add X10, X10, 8
	071 NotImplemented "Instruction LDUR not yet implemented."
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Subtract X9, X9, 1
	074 Add X10, X10, 16
	075 Move X0, X19
	076 Move W2, W31
	077 Call 0x1C5D788
	078 NotImplemented "Instruction LDRSW not yet implemented."
	079 Add X8, X8, X9
	080 Add X0, X8, 312
	081 Move X8, [X0]
	082 Move X1, [X0+8]
	083 Move X0, X19
	084 NotImplemented "Instruction BLR not yet implemented."
	085 Move TEMP, X0
	086 And TEMP, TEMP, 1
	087 Compare TEMP, 1
	088 JumpIfNotEqual {127}
	089 Move X8, [X19]
	090 Move X1, [X22]
	091 NotImplemented "Instruction LDRH not yet implemented."
	092 Compare X9, 0
	093 JumpIfEqual {100}
	094 Move X10, [X8+176]
	095 Add X10, X10, 8
	096 NotImplemented "Instruction LDUR not yet implemented."
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Subtract X9, X9, 1
	099 Add X10, X10, 16
	100 Move X0, X19
	101 Move W2, W31
	102 Call 0x1C5D788
	103 NotImplemented "Instruction LDRSW not yet implemented."
	104 Add X8, X8, X9
	105 Add X0, X8, 312
	106 Move X8, [X0]
	107 Move X1, [X0+8]
	108 Move X0, X19
	109 NotImplemented "Instruction BLR not yet implemented."
	110 Move [X31], X0
	111 Move [X31+8], X1
	112 Move TEMP, X24
	113 And TEMP, TEMP, 1
	114 Compare TEMP, 1
	115 JumpIfEqual {120}
	116 Move X1, [X23]
	117 Move X0, X20
	118 Move X2, X31
	119 Call StringBuilder.Append, X0, X1
	120 Add X0, X31, 0
	121 Call ActionEventPtr.ToString, X0
	122 Move X1, X0
	123 Move X0, X20
	124 Move X2, X31
	125 Call StringBuilder.Append, X0, X1
	126 Move W24, W31
	127 Move X21, X31
	128 Move W22, 6
	129 Compare X19, 0
	130 JumpIfEqual {157}
	131 Move X10, 0x996000
	132 Move X8, [X19]
	133 Move X10, [X10+3584]
	134 NotImplemented "Instruction LDRH not yet implemented."
	135 Move X1, [X10]
	136 Compare X9, 0
	137 JumpIfEqual {144}
	138 Move X10, [X8+176]
	139 Add X10, X10, 8
	140 NotImplemented "Instruction LDUR not yet implemented."
	141 NotImplemented "Instruction CMP not yet implemented."
	142 Subtract X9, X9, 1
	143 Add X10, X10, 16
	144 Move X0, X19
	145 Move W2, W31
	146 Call 0x1C5D788
	147 Move X8, 0x9C7000
	148 Move X8, [X8+3216]
	149 Move X0, [X8]
	150 NotImplemented "Instruction LDRSW not yet implemented."
	151 Add X8, X8, X9
	152 Add X0, X8, 312
	153 Move X8, [X0]
	154 Move X1, [X0+8]
	155 Move X0, X19
	156 NotImplemented "Instruction BLR not yet implemented."
	157 Compare X21, 0
	158 JumpIfNotEqual {182}
	159 NotImplemented "Instruction CMP not yet implemented."
	160 Compare W22, 0
	161 JumpIfNotEqual {171}
	162 Move W1, 93
	163 Move X0, X20
	164 Move X2, X31
	165 Call StringBuilder.Append, X0, X1
	166 Move X8, [X20]
	167 Move X0, X20
	168 Move X9, [X8+360]
	169 Move X1, [X8+368]
	170 NotImplemented "Instruction BLR not yet implemented."
	171 Move X20, [X31+64]
	172 Move X19, [X31+72]
	173 Move X22, [X31+48]
	174 Move X21, [X31+56]
	175 Move X24, [X31+32]
	176 Move X23, [X31+40]
	177 Move X30, [X31+16]
	178 Add X31, X31, 80
	179 Return X0
	180 Call 0x1C17F20
	181 Call 0x1C17F20
	182 Move X0, X21
	183 Call 0x1C17F18
	184 Move X22, X0
	185 NotImplemented "Instruction CMP not yet implemented."
	186 Move X0, X22
	187 Call 0x3EB2AD0
	188 Move X21, [X0]
	189 Call 0x3EB2AE0
	190 Move W22, W31
	191 Compare X19, 0
	192 JumpIfNotEqual {131}
	193 Move X21, X31
	194 Move X22, X0
	195 Compare X19, 0
	196 JumpIfEqual {220}
	197 Move X10, 0x996000
	198 Move X8, [X19]
	199 Move X10, [X10+3584]
	200 NotImplemented "Instruction LDRH not yet implemented."
	201 Move X1, [X10]
	202 Compare X9, 0
	203 JumpIfEqual {210}
	204 Move X10, [X8+176]
	205 Add X10, X10, 8
	206 NotImplemented "Instruction LDUR not yet implemented."
	207 NotImplemented "Instruction CMP not yet implemented."
	208 Subtract X9, X9, 1
	209 Add X10, X10, 16
	210 Move X0, X19
	211 Move W2, W31
	212 Call 0x1C5D788
	213 NotImplemented "Instruction LDRSW not yet implemented."
	214 Add X8, X8, X9
	215 Add X0, X8, 312
	216 Move X8, [X0]
	217 Move X1, [X0+8]
	218 Move X0, X19
	219 NotImplemented "Instruction BLR not yet implemented."
	220 Compare X21, 0
	221 JumpIfNotEqual {224}
	222 Move X0, X22
	223 Call 0x1D2D690
	224 Move X0, X21
	225 Call 0x1C17F18
	226 Call 0x1991590

Method: System.Void Dispose()

Disassembly:
	0x0375F098 ADRP X26, 0x9BC000
	0x0375F09C ADRP X27, 0x9BC000
	0x0375F0A0 LDR X28, [X28 + 0x278]
	0x0375F0A4 LDR X23, [X23 + 0x7D0]
	0x0375F0A8 LDR X24, [X24 + 0xA28]
	0x0375F0AC LDR X25, [X25 + 0x978]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call InputActionTrace.UnsubscribeFromAll, X0
	005 Move X0, X19
	006 Move X30, [X31+16]
	007 Move X19, [X31+24]
	008 Call InputActionTrace.DisposeInternal, X0
	009 Return 

Method: System.Void DisposeInternal()

Disassembly:
	0x0375E8D0 STP X30, X19, [X31 - 0x10]!
	0x0375E8D4 LDR W9, [X0 + 0x20]
	0x0375E8D8 LDR W8, [X0 + 0x10]
	0x0375E8DC CMP W9, W8
	0x0375E8E0 B.EQ 0x375E900
	0x0375E8E4 MOV X19, X0
	0x0375E8E8 LDR X0, [X0 + 0x18]
	0x0375E8EC CBZ X0, 0x375E908
	0x0375E8F0 ADD W9, W9, 0x1
	0x0375E8F4 CMP W9, W8
	0x0375E8F8 STR W9, [X19 + 0x20]
	0x0375E8FC B.NE 0x375E91C
	0x0375E900 MOV W0, W31
	0x0375E904 B 0x375E92C
	0x0375E908 LDR X8, [X19 + 0x8]
	0x0375E90C CMP X8, 0x0
	0x0375E910 STR X8, [X19 + 0x18]
	0x0375E914 CSET W0, NE
	0x0375E918 B 0x375E92C
	0x0375E91C MOV X1, X31
	0x0375E920 BL 0x38015C8
	0x0375E924 STR X0, [X19 + 0x18]
	0x0375E928 MOVZ W0, 0x1
	0x0375E92C LDP X30, X19, [X31], #0x10
	0x0375E930 RET
	0x0375E934 STR X31, [X0 + 0x18]
	0x0375E938 STR W31, [X0 + 0x20]
	0x0375E93C RET
	0x0375E940 RET
	0x0375E944 STR X30, [X31 - 0x20]!
	0x0375E948 STP X20, X19, [X31 + 0x10]
	0x0375E94C ADRP X20, 0xC82000
	0x0375E950 LDRB W8, [X20 + 0xE3D]
	0x0375E954 MOV X19, X0
	0x0375E958 TBNZ X8, 0x0, 0x375E970
	0x0375E95C ADRP X0, 0x9E8000
	0x0375E960 LDR X0, [X0 + 0x1D8]
	0x0375E964 BL 0x1C16CF4
	0x0375E968 MOVZ W8, 0x1
	0x0375E96C STRB W8, [X20 + 0xE3D]
	0x0375E970 LDR X8, [X19]
	0x0375E974 CBZ X8, 0x375E9A4
	0x0375E978 ADRP X10, 0x9E8000
	0x0375E97C LDR X9, [X19 + 0x18]
	0x0375E980 LDR X10, [X10 + 0x1D8]
	0x0375E984 ADD X0, X8, 0x68
	0x0375E988 LDRB W1, [X9 + 0x1A]
	0x0375E98C LDR X2, [X10]
	0x0375E990 BL 0x2DEA3EC
	0x0375E994 LDR X1, [X19 + 0x18]
	0x0375E998 LDP X20, X19, [X31 + 0x10]
	0x0375E99C LDR X30, [X31], #0x20
	0x0375E9A0 RET
	0x0375E9A4 BL 0x1C16F20
	0x0375E9A8 SUB X31, X31, 0x30
	0x0375E9AC STP X30, X21, [X31 + 0x10]
	0x0375E9B0 STP X20, X19, [X31 + 0x20]
	0x0375E9B4 ADRP X21, 0xC82000
	0x0375E9B8 ADRP X20, 0x9E8000
	0x0375E9BC LDRB W8, [X21 + 0xE3E]
	0x0375E9C0 LDR X20, [X20 + 0x240]
	0x0375E9C4 MOV X19, X0
	0x0375E9C8 TBNZ X8, 0x0, 0x375E9E0
	0x0375E9CC ADRP X0, 0x9E8000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xC83000
	007 Move W8, [X20+3637]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {24}
	013 Move X0, 0x9E9000
	014 Move X0, [X0+464]
	015 Call 0x1C17CF4
	016 Move X0, 0x9E9000
	017 Move X0, [X0+472]
	018 Call 0x1C17CF4
	019 Move X0, 0x9BE000
	020 Move X0, [X0+624]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X20+3637], W8
	024 Move X20, X19
	025 Add X20, X20, 128
	026 Move W8, [X20]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move X22, 0x9E9000
	029 Move X22, [X22+472]
	030 Move W21, W31
	031 Move X2, [X22]
	032 Move X0, X20
	033 Move W1, W21
	034 Call InlinedArray`1<Object>.get_Item, X0, X1
	035 Compare X0, 0
	036 JumpIfEqual {73}
	037 Move X1, X31
	038 Call InputActionState.Dispose, X0
	039 Move W8, [X20]
	040 Add W21, W21, 1
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move X21, 0x9E9000
	043 Move X21, [X21+464]
	044 Add X0, X19, 72
	045 Move X1, X31
	046 Call InputEventBuffer.Dispose, X0
	047 Move X1, [X21]
	048 Add X0, X19, 104
	049 Call InlinedArray`1<Object>.Clear, X0
	050 Move X1, [X21]
	051 Move X0, X20
	052 Call InlinedArray`1<Object>.Clear, X0
	053 Move X20, [X19+160]
	054 Compare X20, 0
	055 JumpIfEqual {67}
	056 Move X8, 0x9BE000
	057 Move X8, [X8+624]
	058 Move X0, [X8]
	059 Move W8, [X0+224]
	060 Compare W8, 0
	061 JumpIfNotEqual {63}
	062 Call 0x1C17DFC
	063 Move X0, X20
	064 Move X1, X31
	065 Call InputSystem.remove_onActionChange, X0
	066 Move [X19+160], X31
	067 Move X20, [X31+32]
	068 Move X19, [X31+40]
	069 Move X22, [X31+16]
	070 Move X21, [X31+24]
	071 Move X30, [X31+48]
	072 Return 
	073 Call 0x1C17F20

Method: System.Collections.Generic.IEnumerator`1<UnityEngine.InputSystem.Utilities.InputActionTrace/ActionEventPtr> GetEnumerator()

Disassembly:
	0x0375ED2C BL 0x33141B4
	0x0375ED30 TBZ X0, 0x0, 0x375ED54
	0x0375ED34 ADRP X8, 0x995000
	0x0375ED38 LDR X8, [X8 + 0xDE0]
	0x0375ED3C MOV X1, X20
	0x0375ED40 MOV X2, X31
	0x0375ED44 LDR X0, [X8]
	0x0375ED48 BL 0x321B938
	0x0375ED4C MOV X20, X0
	0x0375ED50 CBZ X0, 0x375EE88
	0x0375ED54 LDR W8, [X20 + 0x10]
	0x0375ED58 CMP W8, 0x1
	0x0375ED5C B.LT 0x375EE68
	0x0375ED60 MOV W21, W31
	0x0375ED64 MOV X0, X20
	0x0375ED68 MOV W1, W21
	0x0375ED6C MOV X2, X31
	0x0375ED70 BL 0x3222A1C
	0x0375ED74 LDR X8, [X24]
	0x0375ED78 MOV W22, W0
	0x0375ED7C LDR W9, [X8 + 0xE0]
	0x0375ED80 CBNZ W9, 0x375ED8C
	0x0375ED84 MOV X0, X8
	0x0375ED88 BL 0x1C16DFC
	0x0375ED8C MOV W0, W22
	0x0375ED90 MOV X1, X31
	0x0375ED94 BL 0x331ABF0
	0x0375ED98 AND W8, W22, 0xFFFF
	0x0375ED9C CMP W8, 0x5F
	0x0375EDA0 B.EQ 0x375EDA8

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xC83000
	006 Move W8, [X20+3638]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x9E9000
	013 Move X0, [X0+496]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+3638], W8
	017 Compare X19, 0
	018 JumpIfEqual {39}
	019 Move X20, 0x9E9000
	020 Move X20, [X20+496]
	021 Add X0, X19, 72
	022 Move X1, X31
	023 Call InputEventBuffer.get_bufferPtr, X0
	024 Move W8, [X19+96]
	025 Move [X31+8], X19
	026 Move [X31+16], X0
	027 Move X0, [X20]
	028 Add X1, X31, 8
	029 Move [X31+32], X31
	030 Move [X31+40], X31
	031 Move [X31+24], W8
	032 Move [X31+28], W31
	033 Call 0x1C17E04
	034 Move X20, [X31+64]
	035 Move X19, [X31+72]
	036 Move X30, [X31+48]
	037 Add X31, X31, 80
	038 Return X0
	039 Call 0x1C17F20

Method: System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()

Disassembly:
	0x0375F0F8 B.LT 0x375F0BC

ISIL:
	001 Call InputActionTrace.GetEnumerator, X0
	002 Return X0

Method: System.Void HookOnActionChange()

Disassembly:
	0x0375E208 CMP X8, X9
	0x0375E20C B.EQ 0x375E2B8
	0x0375E210 ADRP X9, 0x9E8000
	0x0375E214 LDR X9, [X9 + 0x200]
	0x0375E218 LDRB W11, [X8 + 0x130]
	0x0375E21C LDR X9, [X9]
	0x0375E220 LDRB W10, [X9 + 0x130]
	0x0375E224 CMP W11, W10
	0x0375E228 B.CC 0x375E2C4
	0x0375E22C LDR X8, [X8 + 0xC8]
	0x0375E230 ADD X8, X8, X10, 0x3, LSL
	0x0375E234 LDUR X8, [X8 - 0x8]
	0x0375E238 CMP X8, X9
	0x0375E23C CSEL X0, X20, X31, EQ
	0x0375E240 B.NE 0x375E2C4
	0x0375E244 CBZ X0, 0x375E2F0
	0x0375E248 MOV X1, X31
	0x0375E24C BL 0x3736750
	0x0375E250 ADRP X8, 0x9E7000
	0x0375E254 LDR X8, [X8 + 0x10]
	0x0375E258 STP X0, X1, [X31 + 0x8]
	0x0375E25C ADD X0, X31, 0x8
	0x0375E260 LDR X9, [X8]
	0x0375E264 ADD X8, X31, 0x18
	0x0375E268 MOV X1, X9
	0x0375E26C BL 0x24FD990
	0x0375E270 ADRP X20, 0x9E7000
	0x0375E274 ADRP X21, 0x9E7000
	0x0375E278 LDR X20, [X20 + 0x20]
	0x0375E27C LDR X21, [X21 + 0x28]
	0x0375E280 LDR X1, [X20]
	0x0375E284 ADD X0, X31, 0x18
	0x0375E288 BL 0x2BC496C
	0x0375E28C TBZ X0, 0x0, 0x375E2D8
	0x0375E290 LDR X1, [X21]
	0x0375E294 ADD X0, X31, 0x18
	0x0375E298 BL 0x2BC4998
	0x0375E29C MOV X1, X0
	0x0375E2A0 MOV X0, X19
	0x0375E2A4 BL 0x375E378
	0x0375E2A8 B 0x375E280
	0x0375E2AC LDR X1, [X20 + 0xC8]
	0x0375E2B0 MOV X0, X19
	0x0375E2B4 B 0x375E2C0
	0x0375E2B8 MOV X0, X19
	0x0375E2BC MOV X1, X20
	0x0375E2C0 BL 0x375E378

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xC83000
	005 Move W8, [X20+3639]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {22}
	011 Move X0, 0x9E9000
	012 Move X0, [X0+376]
	013 Call 0x1C17CF4
	014 Move X0, 0x9E9000
	015 Move X0, [X0+384]
	016 Call 0x1C17CF4
	017 Move X0, 0x9BE000
	018 Move X0, [X0+624]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+3639], W8
	022 Move W8, [X19+17]
	023 Compare W8, 0
	024 JumpIfNotEqual {52}
	025 Move X20, [X19+160]
	026 Compare X20, 0
	027 JumpIfNotEqual {40}
	028 Move X8, 0x9E9000
	029 Move X8, [X8+376]
	030 Move X0, [X8]
	031 Call 0x1C17F10
	032 Move X8, 0x9E9000
	033 Move X8, [X8+384]
	034 Move X1, X19
	035 Move X3, X31
	036 Move X20, X0
	037 Move X2, [X8]
	038 Call Action`2<Object, Int32Enum>..ctor, X0, X1, X2
	039 Move [X19+160], X20
	040 Move X8, 0x9BE000
	041 Move X8, [X8+624]
	042 Move X0, [X8]
	043 Move W8, [X0+224]
	044 Compare W8, 0
	045 JumpIfNotEqual {47}
	046 Call 0x1C17DFC
	047 Move X0, X20
	048 Move X1, X31
	049 Call InputSystem.add_onActionChange, X0
	050 Move W8, 1
	051 Move [X19+17], W8
	052 Move X20, [X31+16]
	053 Move X19, [X31+24]
	054 Move X30, [X31+32]
	055 Return 

Method: System.Void UnhookOnActionChange()

Disassembly:
	0x0375E5AC TBNZ X8, 0x0, 0x375E5D0
	0x0375E5B0 ADRP X0, 0x9BD000
	0x0375E5B4 LDR X0, [X0 + 0x850]
	0x0375E5B8 BL 0x1C16CF4
	0x0375E5BC ADRP X0, 0x995000
	0x0375E5C0 LDR X0, [X0 + 0x6C0]
	0x0375E5C4 BL 0x1C16CF4
	0x0375E5C8 MOVZ W8, 0x1
	0x0375E5CC STRB W8, [X19 + 0xE3B]
	0x0375E5D0 LDR X0, [X20 + 0x8]
	0x0375E5D4 CBZ X0, 0x375E730
	0x0375E5D8 MOV X1, X31
	0x0375E5DC BL 0x3800384
	0x0375E5E0 LDR X8, [X20]
	0x0375E5E4 CBZ X8, 0x375E72C
	0x0375E5E8 LDR X9, [X20 + 0x8]
	0x0375E5EC MOV X19, X0
	0x0375E5F0 MOV X0, X8
	0x0375E5F4 MOV X1, X31
	0x0375E5F8 LDRH W21, [X9 + 0x16]
	0x0375E5FC BL 0x374A7E8
	0x0375E600 ADD X0, X0, X21, 0x5, LSL
	0x0375E604 MOV X1, X31
	0x0375E608 BL 0x374AB5C
	0x0375E60C TBZ X0, 0x0, 0x375E6F4
	0x0375E610 LDR X0, [X20]
	0x0375E614 CBZ X0, 0x375E72C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xC83000
	005 Move W8, [X20+3640]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x9BE000
	012 Move X0, [X0+624]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3640], W8
	016 Move W8, [X19+17]
	017 Compare W8, 0
	018 JumpIfEqual {31}
	019 Move X8, 0x9BE000
	020 Move X8, [X8+624]
	021 Move X20, [X19+160]
	022 Move X0, [X8]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X0, X20
	028 Move X1, X31
	029 Call InputSystem.remove_onActionChange, X0
	030 Move [X19+17], W31
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Return 

Method: System.Void OnActionChange(System.Object actionOrMapOrAsset, UnityEngine.InputSystem.InputActionChange change)

Disassembly:
	0x0375F0FC B 0x375F208
	0x0375F100 BL 0x1C16F20
	0x0375F104 B 0x375F27C
	0x0375F108 CMP W1, 0x1
	0x0375F10C STR X0, [X31 + 0x8]
	0x0375F110 B.NE 0x375F28C
	0x0375F114 LDR X0, [X31 + 0x8]
	0x0375F118 BL 0x3EB1AD0
	0x0375F11C STR X0, [X31 + 0x8]
	0x0375F120 MOV X0, X23
	0x0375F124 BL 0x1C16D08
	0x0375F128 LDR X8, [X31 + 0x8]
	0x0375F12C LDR X8, [X8]
	0x0375F130 LDR X1, [X8]
	0x0375F134 BL 0x1C17270
	0x0375F138 TBZ X0, 0x0, 0x375F258
	0x0375F13C LDR X8, [X31 + 0x8]
	0x0375F140 LDR X8, [X8]
	0x0375F144 STR X8, [X31 + 0x8]
	0x0375F148 BL 0x3EB1AE0
	0x0375F14C MOV X0, X24
	0x0375F150 BL 0x1C16D08
	0x0375F154 LDR W8, [X0 + 0xE0]
	0x0375F158 CBNZ W8, 0x375F160
	0x0375F15C BL 0x1C16DFC
	0x0375F160 LDR X0, [X31 + 0x8]
	0x0375F164 MOV X1, X31
	0x0375F168 BL 0x3C02C84
	0x0375F16C LDR X8, [X31 + 0x8]
	0x0375F170 CBZ X8, 0x375F27C
	0x0375F174 LDR X0, [X31 + 0x8]
	0x0375F178 MOV X1, X31
	0x0375F17C BL 0x33B32AC
	0x0375F180 CBZ X0, 0x375F27C
	0x0375F184 LDR X8, [X0]
	0x0375F188 LDP X9, X1, [X8 + 0x1A8]
	0x0375F18C BLR X9
	0x0375F190 STR X0, [X31 + 0x8]
	0x0375F194 CBZ X20, 0x375F1B8
	0x0375F198 MOV X0, X27
	0x0375F19C BL 0x1C16D08
	0x0375F1A0 LDR X1, [X31 + 0x8]
	0x0375F1A4 MOV X2, X21
	0x0375F1A8 MOV X3, X20
	0x0375F1AC MOV X4, X31
	0x0375F1B0 BL 0x3227C18
	0x0375F1B4 B 0x375F1E0
	0x0375F1B8 MOV X0, X25
	0x0375F1BC BL 0x1C16D08
	0x0375F1C0 STR X0, [X31]
	0x0375F1C4 MOV X0, X26
	0x0375F1C8 BL 0x1C16D08
	0x0375F1CC MOV X3, X0
	0x0375F1D0 LDP X1, X0, [X31]
	0x0375F1D4 MOV X2, X21
	0x0375F1D8 MOV X4, X31
	0x0375F1DC BL 0x32277C4
	0x0375F1E0 STR X0, [X31 + 0x8]
	0x0375F1E4 MOV X0, X24
	0x0375F1E8 BL 0x1C16D08
	0x0375F1EC LDR W8, [X0 + 0xE0]
	0x0375F1F0 CBNZ W8, 0x375F1F8
	0x0375F1F4 BL 0x1C16DFC
	0x0375F1F8 LDR X0, [X31 + 0x8]
	0x0375F1FC MOV X1, X31
	0x0375F200 BL 0x3C0649C
	0x0375F204 B 0x375F0E4
	0x0375F208 ADRP X8, 0x9E7000
	0x0375F20C LDR X8, [X8 + 0x270]
	0x0375F210 MOV X0, X19
	0x0375F214 LDP X20, X19, [X31 + 0x60]
	0x0375F218 LDP X22, X21, [X31 + 0x50]
	0x0375F21C LDR X1, [X8]
	0x0375F220 LDP X24, X23, [X31 + 0x40]
	0x0375F224 LDP X26, X25, [X31 + 0x30]
	0x0375F228 LDP X28, X27, [X31 + 0x20]
	0x0375F22C LDP X29, X30, [X31 + 0x10]
	0x0375F230 ADD X31, X31, 0x70
	0x0375F234 B 0x28F17C8
	0x0375F238 LDP X20, X19, [X31 + 0x60]
	0x0375F23C LDP X22, X21, [X31 + 0x50]
	0x0375F240 LDP X24, X23, [X31 + 0x40]
	0x0375F244 LDP X26, X25, [X31 + 0x30]
	0x0375F248 LDP X28, X27, [X31 + 0x20]
	0x0375F24C LDP X29, X30, [X31 + 0x10]
	0x0375F250 ADD X31, X31, 0x70
	0x0375F254 RET
	0x0375F258 MOVZ W0, 0x8
	0x0375F25C BL 0x3EB1AF0
	0x0375F260 LDR X8, [X31 + 0x8]
	0x0375F264 LDR X8, [X8]
	0x0375F268 STR X8, [X0]
	0x0375F26C ADRP X1, 0x755000
	0x0375F270 ADD X1, X1, 0xE58
	0x0375F274 MOV X2, X31
	0x0375F278 BL 0x3EB1B00
	0x0375F27C BL 0x1C16F20
	0x0375F280 B 0x375F284
	0x0375F284 STR X0, [X31 + 0x8]
	0x0375F288 BL 0x3EB1AE0
	0x0375F28C LDR X0, [X31 + 0x8]
	0x0375F290 BL 0x1D2C690
	0x0375F294 BL 0x1990590
	0x0375F298 LDR X0, [X0 + 0x10]
	0x0375F29C RET
	0x0375F2A0 STR X1, [X0 + 0x10]
	0x0375F2A4 RET
	0x0375F2A8 STR X30, [X31 - 0x20]!
	0x0375F2AC STP X20, X19, [X31 + 0x10]
	0x0375F2B0 MOV X19, X1
	0x0375F2B4 MOV X1, X31
	0x0375F2B8 MOV X20, X0
	0x0375F2BC BL 0x33A51F0
	0x0375F2C0 STR X19, [X20 + 0x10]
	0x0375F2C4 LDP X20, X19, [X31 + 0x10]
	0x0375F2C8 LDR X30, [X31], #0x20
	0x0375F2CC RET
	0x0375F2D0 STR X30, [X31 - 0x20]!
	0x0375F2D4 STP X20, X19, [X31 + 0x10]
	0x0375F2D8 ADRP X20, 0xC81000
	0x0375F2DC LDRB W8, [X20 + 0xE44]
	0x0375F2E0 MOV X19, X0
	0x0375F2E4 TBNZ X8, 0x0, 0x375F314
	0x0375F2E8 ADRP X0, 0x99C000
	0x0375F2EC LDR X0, [X0 + 0x578]
	0x0375F2F0 BL 0x1C16CF4
	0x0375F2F4 ADRP X0, 0x99E000
	0x0375F2F8 LDR X0, [X0 + 0xF78]
	0x0375F2FC BL 0x1C16CF4
	0x0375F300 ADRP X0, 0x99F000
	0x0375F304 LDR X0, [X0 + 0xA18]
	0x0375F308 BL 0x1C16CF4
	0x0375F30C MOVZ W8, 0x1
	0x0375F310 STRB W8, [X20 + 0xE44]
	0x0375F314 CBZ X19, 0x375F378
	0x0375F318 ADRP X9, 0x99F000
	0x0375F31C LDR X9, [X9 + 0xA18]
	0x0375F320 LDR X8, [X19]
	0x0375F324 LDR X10, [X9]
	0x0375F328 LDRB W9, [X8 + 0x130]
	0x0375F32C LDRB W11, [X10 + 0x130]
	0x0375F330 CMP W9, W11
	0x0375F334 B.CC 0x375F34C
	0x0375F338 LDR X12, [X8 + 0xC8]
	0x0375F33C ADD X11, X12, X11, 0x3, LSL
	0x0375F340 LDUR X11, [X11 - 0x8]
	0x0375F344 CMP X11, X10
	0x0375F348 B.EQ 0x375F380
	0x0375F34C ADRP X10, 0x99E000
	0x0375F350 LDR X10, [X10 + 0xF78]
	0x0375F354 LDR X10, [X10]
	0x0375F358 CMP X8, X10
	0x0375F35C B.EQ 0x375F380
	0x0375F360 ADRP X10, 0x99C000
	0x0375F364 LDR X10, [X10 + 0x578]
	0x0375F368 LDR X10, [X10]
	0x0375F36C LDRB W11, [X10 + 0x130]
	0x0375F370 CMP W9, W11
	0x0375F374 B.CS 0x375F388

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+64], X22
	004 Move [X31+72], X21
	005 Move [X31+80], X20
	006 Move [X31+88], X19
	007 Move X22, 0xC82000
	008 Move W8, [X22+3641]
	009 Move W21, W2
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {39}
	016 Move X0, 0x9E7000
	017 Move X0, [X0+24]
	018 Call 0x1C17CF4
	019 Move X0, 0x9E7000
	020 Move X0, [X0+32]
	021 Call 0x1C17CF4
	022 Move X0, 0x9E7000
	023 Move X0, [X0+40]
	024 Call 0x1C17CF4
	025 Move X0, 0x9E8000
	026 Move X0, [X0+512]
	027 Call 0x1C17CF4
	028 Move X0, 0x9E6000
	029 Move X0, [X0+3944]
	030 Call 0x1C17CF4
	031 Move X0, 0x999000
	032 Move X0, [X0+992]
	033 Call 0x1C17CF4
	034 Move X0, 0x9E7000
	035 Move X0, [X0+16]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X22+3641], W8
	039 Subtract W8, W21, 4
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move [X31+24], X31
	042 Move [X31+32], X31
	043 Move [X31+40], X31
	044 Move [X31+8], X31
	045 Move [X31+16], X31
	046 Move W8, [X19+16]
	047 Compare W8, 0
	048 JumpIfEqual {63}
	049 Compare X20, 0
	050 JumpIfEqual {133}
	051 Move X8, 0x999000
	052 Move X8, [X8+992]
	053 Move X1, [X8]
	054 Move X8, [X20]
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move X8, [X20+200]
	057 Compare X8, 0
	058 JumpIfEqual {133}
	059 Move W2, [X20+192]
	060 Move X1, [X8+96]
	061 Move X0, X19
	062 Call InputActionTrace.RecordAction, X0, X1
	063 Compare X20, 0
	064 JumpIfEqual {121}
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Move X8, 0x999000
	067 Move X8, [X8+992]
	068 Move X9, [X8]
	069 Move X8, [X20]
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move X9, 0x9E6000
	072 Move X9, [X9+3944]
	073 Move X9, [X9]
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move X9, 0x9E8000
	076 Move X9, [X9+512]
	077 Move W11, [X8+304]
	078 Move X9, [X9]
	079 Move W10, [X9+304]
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Move X8, [X8+200]
	082 Add X8, X8, X10
	083 NotImplemented "Instruction LDUR not yet implemented."
	084 NotImplemented "Instruction CMP not yet implemented."
	085 NotImplemented "Instruction CSEL not yet implemented."
	086 Compare X0, 0
	087 JumpIfEqual {133}
	088 Move X1, X31
	089 Call InputActionAsset.get_actionMaps, X0
	090 Move X8, 0x9E7000
	091 Move X8, [X8+16]
	092 Move [X31+8], X0
	093 Move [X31+16], X1
	094 Add X0, X31, 8
	095 Move X9, [X8]
	096 Add X8, X31, 24
	097 Move X1, X9
	098 Call ReadOnlyArray`1<Object>.GetEnumerator, X0
	099 Move X20, 0x9E7000
	100 Move X21, 0x9E7000
	101 Move X20, [X20+32]
	102 Move X21, [X21+40]
	103 Move X1, [X20]
	104 Add X0, X31, 24
	105 Call Enumerator<Object>.MoveNext, X0
	106 Move TEMP, X0
	107 And TEMP, TEMP, 1
	108 Compare TEMP, 1
	109 JumpIfNotEqual {128}
	110 Move X1, [X21]
	111 Add X0, X31, 24
	112 Call Enumerator<Object>.get_Current, X0
	113 Move X1, X0
	114 Move X0, X19
	115 Call InputActionTrace.CloneActionStateBeforeBindingsChange, X0, X1
	116 Move X1, [X20+200]
	117 Move X0, X19
	118 Move X0, X19
	119 Move X1, X20
	120 Call InputActionTrace.CloneActionStateBeforeBindingsChange, X0, X1
	121 Move X20, [X31+80]
	122 Move X19, [X31+88]
	123 Move X22, [X31+64]
	124 Move X21, [X31+72]
	125 Move X30, [X31+48]
	126 Add X31, X31, 96
	127 Return 
	128 Move X8, 0x9E7000
	129 Move X8, [X8+24]
	130 Add X0, X31, 24
	131 Move X1, [X8]
	132 Call Enumerator<Object>.Dispose, X0
	133 Call 0x1C17F20
	134 Move X0, X20
	135 Call 0x1C181E0
	136 Move X19, X0
	137 NotImplemented "Instruction CMP not yet implemented."
	138 Move X0, X19
	139 Call 0x3EB2AD0
	140 Move X20, [X0]
	141 Call 0x3EB2AE0
	142 Move X8, 0x9E7000
	143 Move X8, [X8+24]
	144 Add X0, X31, 24
	145 Move X1, [X8]
	146 Call Enumerator<Object>.Dispose, X0
	147 Compare X20, 0
	148 JumpIfEqual {121}
	149 Move X0, X20
	150 Call 0x1C17F18
	151 Move X20, X31
	152 Move X19, X0
	153 Move X8, 0x9E7000
	154 Move X8, [X8+24]
	155 Move X1, [X8]
	156 Add X0, X31, 24
	157 Call Enumerator<Object>.Dispose, X0
	158 Compare X20, 0
	159 JumpIfNotEqual {162}
	160 Move X0, X19
	161 Call 0x1D2D690
	162 Move X0, X20
	163 Call 0x1C17F18
	164 Call 0x1991590

Method: System.Void CloneActionStateBeforeBindingsChange(UnityEngine.InputSystem.InputActionMap actionMap)

Disassembly:
	0x0375F378 MOV W0, W31
	0x0375F37C B 0x375F39C
	0x0375F380 MOVZ W0, 0x1
	0x0375F384 B 0x375F39C
	0x0375F388 LDR X8, [X8 + 0xC8]
	0x0375F38C ADD X8, X8, X11, 0x3, LSL
	0x0375F390 LDUR X8, [X8 - 0x8]
	0x0375F394 CMP X8, X10
	0x0375F398 CSET W0, EQ
	0x0375F39C LDP X20, X19, [X31 + 0x10]
	0x0375F3A0 LDR X30, [X31], #0x20
	0x0375F3A4 RET
	0x0375F3A8 STR W1, [X0]
	0x0375F3AC RET
	0x0375F3B0 STP X30, X23, [X31 - 0x30]!
	0x0375F3B4 STP X22, X21, [X31 + 0x10]
	0x0375F3B8 STP X20, X19, [X31 + 0x20]
	0x0375F3BC STR W31, [X0]
	0x0375F3C0 CBZ X1, 0x375F488
	0x0375F3C4 LDR W23, [X1 + 0x10]
	0x0375F3C8 MOV X21, X1
	0x0375F3CC SUB W8, W23, 0x1
	0x0375F3D0 CMP W8, 0x4
	0x0375F3D4 B.CS 0x375F4BC
	0x0375F3D8 MOV X19, X0
	0x0375F3DC MOV X0, X21
	0x0375F3E0 MOV W1, W31
	0x0375F3E4 MOV X2, X31
	0x0375F3E8 BL 0x3222A1C
	0x0375F3EC CMP W23, 0x2
	0x0375F3F0 MOV W20, W0
	0x0375F3F4 B.LT 0x375F41C
	0x0375F3F8 MOVZ W1, 0x1
	0x0375F3FC MOV X0, X21
	0x0375F400 MOV X2, X31
	0x0375F404 BL 0x3222A1C
	0x0375F408 CMP W23, 0x2
	0x0375F40C UBFM W22, W0, 0x10, 0xF
	0x0375F410 B.NE 0x375F448
	0x0375F414 MOVZ W8, 0x20
	0x0375F418 B 0x375F424
	0x0375F41C MOVZ W8, 0x20
	0x0375F420 MOVZ W22, 0x200000
	0x0375F424 MOVZ W23, 0x2000
	0x0375F428 BFM W23, W20, 0x8, 0x7
	0x0375F42C ORR W9, W23, W22, 0x0
	0x0375F430 ORR W8, W9, W8, 0x0
	0x0375F434 STR W8, [X19]
	0x0375F438 LDP X20, X19, [X31 + 0x20]
	0x0375F43C LDP X22, X21, [X31 + 0x10]
	0x0375F440 LDP X30, X23, [X31], #0x30
	0x0375F444 RET
	0x0375F448 MOVZ W1, 0x2
	0x0375F44C MOV X0, X21
	0x0375F450 MOV X2, X31
	0x0375F454 BL 0x3222A1C
	0x0375F458 AND W8, W0, 0xFFFF
	0x0375F45C CMP W23, 0x4
	0x0375F460 UBFM W23, W8, 0x18, 0x17
	0x0375F464 B.LT 0x375F480

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+48], X22
	004 Move [X31+56], X21
	005 Move [X31+64], X20
	006 Move [X31+72], X19
	007 Move X21, 0xC82000
	008 Move W8, [X21+3642]
	009 Move X20, X1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0x9E8000
	016 Move X0, [X0+520]
	017 Call 0x1C17CF4
	018 Move X0, 0x9E8000
	019 Move X0, [X0+528]
	020 Call 0x1C17CF4
	021 Move X0, 0x9E8000
	022 Move X0, [X0+440]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+3642], W8
	026 Compare X20, 0
	027 JumpIfEqual {68}
	028 Move X20, [X20+96]
	029 Compare X20, 0
	030 JumpIfEqual {61}
	031 Move X8, 0x9E8000
	032 Move X8, [X8+440]
	033 Move X9, [X19+120]
	034 NotImplemented "Instruction LDUR not yet implemented."
	035 Add X0, X31, 0
	036 Move X2, [X8]
	037 Move X1, X20
	038 Move [X31+16], X9
	039 Move [X31], V0
	040 Call 0x21FC010, X0, X1
	041 Add W31, W0, 1
	042 Move W21, W0
	043 Move X0, X20
	044 Move X1, X31
	045 Add X22, X19, 104
	046 Call InputActionState.Clone, X0
	047 Move X8, 0x9E8000
	048 Move X8, [X8+520]
	049 Move X20, X0
	050 Add X0, X19, 128
	051 Move X1, X20
	052 Move X2, [X8]
	053 Call InlinedArray`1<Object>.Append, X0, X1
	054 Move X8, 0x9E8000
	055 Move X8, [X8+528]
	056 Move X0, X22
	057 Move W1, W21
	058 Move X2, X20
	059 Move X3, [X8]
	060 Call InlinedArray`1<Object>.set_Item, X0, X1, X2
	061 Move X20, [X31+64]
	062 Move X19, [X31+72]
	063 Move X22, [X31+48]
	064 Move X21, [X31+56]
	065 Move X30, [X31+32]
	066 Add X31, X31, 80
	067 Return 
	068 Call 0x1C17F20

