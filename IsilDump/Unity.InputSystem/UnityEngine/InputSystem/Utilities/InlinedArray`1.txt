Type: UnityEngine.InputSystem.Utilities.InlinedArray`1

Method: System.Int32 get_Capacity()

Disassembly:
	0x02DE57E8 CBZ W8, 0x2DE596C
	0x02DE57EC LDR X8, [X0 + 0x20]
	0x02DE57F0 STUR X8, [X19 + 0x4]
	0x02DE57F4 LDR W8, [X0 + 0x18]
	0x02DE57F8 SUBS W4, W8, 0x1
	0x02DE57FC B.NE 0x2DE5880
	0x02DE5800 STR X31, [X20]

ISIL:
	001 Move X8, [X0+16]
	002 Compare X8, 0
	003 JumpIfEqual {7}
	004 Move W8, [X8+24]
	005 Add W0, W8, 1
	006 Return X0
	007 Move W0, 1
	008 Return X0

Method: System.Void .ctor(TValue value)

Disassembly:
	0x02DE5804 B 0x2DE5914
	0x02DE5808 CMP W8, W20
	0x02DE580C B.NE 0x2DE5838
	0x02DE5810 LDR X0, [X21 + 0x20]
	0x02DE5814 ADD X21, X19, 0x10

ISIL:
	001 Move W8, 1
	002 Move [X0+4], X1
	003 Move [X0], W8
	004 Move [X0+16], X31
	005 Return 

Method: System.Void .ctor(TValue firstValue, TValue[] additionalValues)

Disassembly:
	0x02DE5818 SUB W20, W22, 0x2
	0x02DE581C LDRB W8, [X0 + 0x135]
	0x02DE5820 TBNZ X8, 0x0, 0x2DE5828
	0x02DE5824 BL 0x1C5C684
	0x02DE5828 LDR X8, [X0 + 0xC0]
	0x02DE582C MOV X0, X21
	0x02DE5830 MOV W1, W20
	0x02DE5834 B 0x2DE58C0
	0x02DE5838 LDR X0, [X21 + 0x20]
	0x02DE583C LDRB W8, [X0 + 0x135]

ISIL:
	001 Move [X31-16], X30
	002 Compare X2, 0
	003 JumpIfEqual {11}
	004 Move W8, [X2+24]
	005 Move [X0+4], X1
	006 Move [X0+16], X2
	007 Add W8, W8, 1
	008 Move [X0], W8
	009 Move X30, [X31+16]
	010 Return 
	011 Call 0x1C17F20

Method: System.Void .ctor(System.Collections.Generic.IEnumerable`1<TValue> values)

Disassembly:
	0x02DE5840 TBNZ X8, 0x0, 0x2DE5848
	0x02DE5844 BL 0x1C5C684
	0x02DE5848 LDR X8, [X0 + 0xC0]
	0x02DE584C LDR X0, [X8 + 0x28]
	0x02DE5850 LDRB W8, [X0 + 0x135]
	0x02DE5854 TBNZ X8, 0x0, 0x2DE585C
	0x02DE5858 BL 0x1C5C684
	0x02DE585C SUB W1, W22, 0x2
	0x02DE5860 BL 0x1C16D6C
	0x02DE5864 CMP W20, 0x2
	0x02DE5868 MOV X21, X0
	0x02DE586C B.GE 0x2DE58CC
	0x02DE5870 MOV W22, W31
	0x02DE5874 B 0x2DE58EC
	0x02DE5878 STUR X31, [X19 + 0x4]
	0x02DE587C B 0x2DE5914
	0x02DE5880 MOVZ W1, 0x1
	0x02DE5884 MOV X2, X0
	0x02DE5888 MOV W3, W31
	0x02DE588C MOV X5, X31
	0x02DE5890 BL 0x339FCE8
	0x02DE5894 LDR X8, [X20]
	0x02DE5898 CBZ X8, 0x2DE5970
	0x02DE589C LDR X0, [X21 + 0x20]
	0x02DE58A0 LDR W8, [X8 + 0x18]
	0x02DE58A4 LDRB W9, [X0 + 0x135]
	0x02DE58A8 SUB W21, W8, 0x1
	0x02DE58AC TBNZ X9, 0x0, 0x2DE58B4
	0x02DE58B0 BL 0x1C5C684
	0x02DE58B4 LDR X8, [X0 + 0xC0]
	0x02DE58B8 MOV X0, X20
	0x02DE58BC MOV W1, W21
	0x02DE58C0 LDR X2, [X8 + 0x60]
	0x02DE58C4 BL 0x2112E3C
	0x02DE58C8 B 0x2DE5914
	0x02DE58CC LDR X0, [X19 + 0x10]
	0x02DE58D0 SUB W22, W20, 0x1
	0x02DE58D4 MOV W1, W31
	0x02DE58D8 MOV X2, X21
	0x02DE58DC MOV W3, W31
	0x02DE58E0 MOV W4, W22
	0x02DE58E4 MOV X5, X31
	0x02DE58E8 BL 0x339FCE8
	0x02DE58EC LDR W8, [X19]
	0x02DE58F0 LDR X0, [X19 + 0x10]
	0x02DE58F4 ORN W9, W31, W20, 0x0
	0x02DE58F8 MOV W1, W20
	0x02DE58FC ADD W4, W8, W9
	0x02DE5900 MOV X2, X21
	0x02DE5904 MOV W3, W22
	0x02DE5908 MOV X5, X31
	0x02DE590C BL 0x339FCE8
	0x02DE5910 STR X21, [X19 + 0x10]
	0x02DE5914 LDR W8, [X19]
	0x02DE5918 LDP X22, X21, [X31 + 0x10]
	0x02DE591C SUB W8, W8, 0x1
	0x02DE5920 STR W8, [X19]
	0x02DE5924 LDP X20, X19, [X31 + 0x20]
	0x02DE5928 LDR X30, [X31], #0x30
	0x02DE592C RET
	0x02DE5930 ADRP X0, 0x1316000
	0x02DE5934 LDR X0, [X0 + 0x760]
	0x02DE5938 BL 0x1C16D08
	0x02DE593C BL 0x1C16F10
	0x02DE5940 MOV X19, X0
	0x02DE5944 ADRP X0, 0x1319000
	0x02DE5948 LDR X0, [X0 + 0x130]
	0x02DE594C BL 0x1C16D08
	0x02DE5950 MOV X1, X0
	0x02DE5954 MOV X0, X19
	0x02DE5958 MOV X2, X31
	0x02DE595C BL 0x3316014
	0x02DE5960 MOV X0, X19
	0x02DE5964 MOV X1, X21
	0x02DE5968 BL 0x1C16DEC
	0x02DE596C BL 0x1C16F28
	0x02DE5970 BL 0x1C16F20
	0x02DE5974 SUB X31, X31, 0x30
	0x02DE5978 STP X30, X21, [X31 + 0x10]
	0x02DE597C STP X20, X19, [X31 + 0x20]
	0x02DE5980 TBNZ X1, 0x1F, 0x2DE5A30
	0x02DE5984 LDR W8, [X0]
	0x02DE5988 MOV X19, X0
	0x02DE598C CMP W8, W1
	0x02DE5990 B.LE 0x2DE5A30
	0x02DE5994 SUB W9, W8, 0x1
	0x02DE5998 STR W9, [X31 + 0xC]
	0x02DE599C CBZ W1, 0x2DE59D4
	0x02DE59A0 LDR X0, [X2 + 0x20]
	0x02DE59A4 LDR X21, [X19 + 0x10]
	0x02DE59A8 SUB W20, W1, 0x1
	0x02DE59AC LDRB W8, [X0 + 0x135]
	0x02DE59B0 TBNZ X8, 0x0, 0x2DE59B8
	0x02DE59B4 BL 0x1C5C684
	0x02DE59B8 LDR X8, [X0 + 0xC0]
	0x02DE59BC ADD X1, X31, 0xC
	0x02DE59C0 MOV X0, X21
	0x02DE59C4 MOV W2, W20
	0x02DE59C8 LDR X3, [X8 + 0xC8]
	0x02DE59CC BL 0x2177428
	0x02DE59D0 B 0x2DE5A14
	0x02DE59D4 SUBS W8, W8, 0x2
	0x02DE59D8 B.GE 0x2DE59E4
	0x02DE59DC STUR X31, [X19 + 0x4]
	0x02DE59E0 B 0x2DE5A14
	0x02DE59E4 LDR X9, [X19 + 0x10]
	0x02DE59E8 CBZ X9, 0x2DE5A74
	0x02DE59EC LDR W10, [X9 + 0x18]
	0x02DE59F0 CMP W8, W10
	0x02DE59F4 B.CS 0x2DE5A70
	0x02DE59F8 ADD X10, X9, W8, 0x3, UXTW
	0x02DE59FC LDR X11, [X10 + 0x20]!
	0x02DE5A00 STUR X11, [X19 + 0x4]
	0x02DE5A04 LDR W9, [X9 + 0x18]
	0x02DE5A08 CMP W8, W9
	0x02DE5A0C B.CS 0x2DE5A70
	0x02DE5A10 STR X31, [X10]
	0x02DE5A14 LDR W8, [X19]
	0x02DE5A18 LDP X30, X21, [X31 + 0x10]
	0x02DE5A1C SUB W8, W8, 0x1
	0x02DE5A20 STR W8, [X19]
	0x02DE5A24 LDP X20, X19, [X31 + 0x20]
	0x02DE5A28 ADD X31, X31, 0x30
	0x02DE5A2C RET
	0x02DE5A30 ADRP X0, 0x1316000
	0x02DE5A34 LDR X0, [X0 + 0x760]
	0x02DE5A38 MOV X19, X2
	0x02DE5A3C BL 0x1C16D08
	0x02DE5A40 BL 0x1C16F10
	0x02DE5A44 MOV X20, X0
	0x02DE5A48 ADRP X0, 0x1319000
	0x02DE5A4C LDR X0, [X0 + 0x130]
	0x02DE5A50 BL 0x1C16D08
	0x02DE5A54 MOV X1, X0
	0x02DE5A58 MOV X0, X20
	0x02DE5A5C MOV X2, X31
	0x02DE5A60 BL 0x3316014
	0x02DE5A64 MOV X0, X20
	0x02DE5A68 MOV X1, X19
	0x02DE5A6C BL 0x1C16DEC
	0x02DE5A70 BL 0x1C16F28
	0x02DE5A74 BL 0x1C16F20
	0x02DE5A78 STP X30, X21, [X31 - 0x20]!
	0x02DE5A7C STP X20, X19, [X31 + 0x10]
	0x02DE5A80 LDR X8, [X2 + 0x20]
	0x02DE5A84 MOV X20, X2
	0x02DE5A88 MOV X21, X1
	0x02DE5A8C MOV X19, X0
	0x02DE5A90 LDRB W9, [X8 + 0x135]
	0x02DE5A94 TBNZ X9, 0x0, 0x2DE5AA4
	0x02DE5A98 MOV X0, X8
	0x02DE5A9C BL 0x1C5C684
	0x02DE5AA0 MOV X8, X0
	0x02DE5AA4 LDR X8, [X8 + 0xC0]
	0x02DE5AA8 MOV X0, X19
	0x02DE5AAC MOV X1, X21
	0x02DE5AB0 LDR X2, [X8 + 0xD0]
	0x02DE5AB4 BL 0x2DE4F04
	0x02DE5AB8 MOV W21, W0
	0x02DE5ABC ADDS W31, W0, 0x1
	0x02DE5AC0 B.EQ 0x2DE5AE8
	0x02DE5AC4 LDR X0, [X20 + 0x20]
	0x02DE5AC8 LDRB W8, [X0 + 0x135]
	0x02DE5ACC TBNZ X8, 0x0, 0x2DE5AD4
	0x02DE5AD0 BL 0x1C5C684
	0x02DE5AD4 LDR X8, [X0 + 0xC0]
	0x02DE5AD8 MOV X0, X19
	0x02DE5ADC MOV W1, W21
	0x02DE5AE0 LDR X2, [X8 + 0xD8]
	0x02DE5AE4 BL 0x2DE5974
	0x02DE5AE8 LDP X20, X19, [X31 + 0x10]
	0x02DE5AEC ADDS W31, W21, 0x1
	0x02DE5AF0 CSET W0, NE
	0x02DE5AF4 LDP X30, X21, [X31], #0x20
	0x02DE5AF8 RET
	0x02DE5AFC STR X30, [X31 - 0x40]!
	0x02DE5B00 STP X24, X23, [X31 + 0x10]
	0x02DE5B04 STP X22, X21, [X31 + 0x20]
	0x02DE5B08 STP X20, X19, [X31 + 0x30]
	0x02DE5B0C LDR W8, [X0]
	0x02DE5B10 CMP W8, 0x1
	0x02DE5B14 B.LT 0x2DE5BF8
	0x02DE5B18 MOV X19, X3
	0x02DE5B1C MOV X20, X2
	0x02DE5B20 MOV X21, X0
	0x02DE5B24 MOV X22, X1
	0x02DE5B28 MOV W23, W31
	0x02DE5B2C LDR X0, [X19 + 0x20]
	0x02DE5B30 LDRB W8, [X0 + 0x135]
	0x02DE5B34 TBNZ X8, 0x0, 0x2DE5B3C
	0x02DE5B38 BL 0x1C5C684
	0x02DE5B3C LDR X8, [X0 + 0xC0]
	0x02DE5B40 MOV X0, X21
	0x02DE5B44 MOV W1, W23
	0x02DE5B48 LDR X2, [X8 + 0x78]
	0x02DE5B4C BL 0x2DE4BE4
	0x02DE5B50 CBZ X20, 0x2DE5C14
	0x02DE5B54 MOV X24, X0
	0x02DE5B58 LDR X0, [X19 + 0x20]
	0x02DE5B5C LDRB W8, [X0 + 0x135]
	0x02DE5B60 TBNZ X8, 0x0, 0x2DE5B68
	0x02DE5B64 BL 0x1C5C684
	0x02DE5B68 LDR X8, [X0 + 0xC0]
	0x02DE5B6C LDR X1, [X8 + 0xE0]
	0x02DE5B70 LDRB W8, [X1 + 0x135]
	0x02DE5B74 TBNZ X8, 0x0, 0x2DE5B84
	0x02DE5B78 MOV X0, X1
	0x02DE5B7C BL 0x1C5C684
	0x02DE5B80 MOV X1, X0
	0x02DE5B84 LDR X8, [X20]
	0x02DE5B88 LDRH W9, [X8 + 0x12E]
	0x02DE5B8C CBZ X9, 0x2DE5BB0
	0x02DE5B90 LDR X10, [X8 + 0xB0]
	0x02DE5B94 ADD X10, X10, 0x8
	0x02DE5B98 LDUR X11, [X10 - 0x8]
	0x02DE5B9C CMP X11, X1
	0x02DE5BA0 B.EQ 0x2DE5BC0
	0x02DE5BA4 SUBS X9, X9, 0x1
	0x02DE5BA8 ADD X10, X10, 0x10
	0x02DE5BAC B.NE 0x2DE5B98
	0x02DE5BB0 MOV X0, X20
	0x02DE5BB4 MOV W2, W31
	0x02DE5BB8 BL 0x1C5C788
	0x02DE5BBC B 0x2DE5BCC
	0x02DE5BC0 LDRSW X9, [X10]
	0x02DE5BC4 ADD X8, X8, X9, 0x4, LSL
	0x02DE5BC8 ADD X0, X8, 0x138
	0x02DE5BCC LDP X8, X3, [X0]
	0x02DE5BD0 MOV X0, X20
	0x02DE5BD4 MOV X1, X24
	0x02DE5BD8 MOV X2, X22
	0x02DE5BDC BLR X8
	0x02DE5BE0 TBNZ X0, 0x0, 0x2DE5BFC

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x15F7000
	009 Move W8, [X22+2489]
	010 Move X20, X2
	011 Move X19, X1
	012 Move X21, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x130F000
	018 Move X0, [X0+3584]
	019 Call 0x1C17CF4
	020 Move X0, 0x130F000
	021 Move X0, [X0+3608]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+2489], W8
	025 Move [X21], X31
	026 Move [X21+8], X31
	027 Move [X21+16], X31
	028 Move X0, [X20+32]
	029 Move W8, [X0+309]
	030 Move TEMP, X8
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfEqual {35}
	034 Call 0x1C5D684
	035 Move X8, [X0+192]
	036 Move X0, X19
	037 Move X1, [X8+32]
	038 Call 0x21BD594, X0
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move [X21], W0
	041 Move [X21+16], X31
	042 Move W22, W0
	043 Move X0, [X20+32]
	044 Move W8, [X0+309]
	045 Move TEMP, X8
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfEqual {50}
	049 Call 0x1C5D684
	050 Move X8, [X0+192]
	051 Move X0, [X8+40]
	052 Move W8, [X0+309]
	053 Move TEMP, X8
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfEqual {58}
	057 Call 0x1C5D684
	058 Subtract W1, W22, 1
	059 Call 0x1C17D6C
	060 Move [X21+16], X0
	061 Compare X19, 0
	062 JumpIfEqual {218}
	063 Move X0, [X20+32]
	064 Move W8, [X0+309]
	065 Move TEMP, X8
	066 And TEMP, TEMP, 1
	067 Compare TEMP, 1
	068 JumpIfEqual {70}
	069 Call 0x1C5D684
	070 Move X8, [X0+192]
	071 Move X1, [X8+24]
	072 Move W8, [X1+309]
	073 Move TEMP, X8
	074 And TEMP, TEMP, 1
	075 Compare TEMP, 1
	076 JumpIfEqual {80}
	077 Move X0, X1
	078 Call 0x1C5D684
	079 Move X1, X0
	080 Move X8, [X19]
	081 NotImplemented "Instruction LDRH not yet implemented."
	082 Compare X9, 0
	083 JumpIfEqual {90}
	084 Move X10, [X8+176]
	085 Add X10, X10, 8
	086 NotImplemented "Instruction LDUR not yet implemented."
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Subtract X9, X9, 1
	089 Add X10, X10, 16
	090 Move X0, X19
	091 Move W2, W31
	092 Call 0x1C5D788
	093 NotImplemented "Instruction LDRSW not yet implemented."
	094 Add X8, X8, X9
	095 Add X0, X8, 312
	096 Move X8, [X0]
	097 Move X1, [X0+8]
	098 Move X22, 0x130F000
	099 Move X22, [X22+3584]
	100 Move X0, X19
	101 NotImplemented "Instruction BLR not yet implemented."
	102 Move X19, X0
	103 Compare X0, 0
	104 JumpIfEqual {219}
	105 Move X24, 0x130F000
	106 Move X24, [X24+3608]
	107 Move W23, W31
	108 Move X8, [X19]
	109 Move X1, [X24]
	110 NotImplemented "Instruction LDRH not yet implemented."
	111 Compare X9, 0
	112 JumpIfEqual {119}
	113 Move X10, [X8+176]
	114 Add X10, X10, 8
	115 NotImplemented "Instruction LDUR not yet implemented."
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Subtract X9, X9, 1
	118 Add X10, X10, 16
	119 Move X0, X19
	120 Move W2, W31
	121 Call 0x1C5D788
	122 NotImplemented "Instruction LDRSW not yet implemented."
	123 Add X8, X8, X9
	124 Add X0, X8, 312
	125 Move X8, [X0]
	126 Move X1, [X0+8]
	127 Move X0, X19
	128 NotImplemented "Instruction BLR not yet implemented."
	129 Move TEMP, X0
	130 And TEMP, TEMP, 1
	131 Compare TEMP, 1
	132 JumpIfNotEqual {182}
	133 Move X0, [X20+32]
	134 Move W8, [X0+309]
	135 Move TEMP, X8
	136 And TEMP, TEMP, 1
	137 Compare TEMP, 1
	138 JumpIfEqual {140}
	139 Call 0x1C5D684
	140 Move X8, [X0+192]
	141 Move X1, [X8+56]
	142 Move W8, [X1+309]
	143 Move TEMP, X8
	144 And TEMP, TEMP, 1
	145 Compare TEMP, 1
	146 JumpIfEqual {150}
	147 Move X0, X1
	148 Call 0x1C5D684
	149 Move X1, X0
	150 Move X8, [X19]
	151 NotImplemented "Instruction LDRH not yet implemented."
	152 Compare X9, 0
	153 JumpIfEqual {160}
	154 Move X10, [X8+176]
	155 Add X10, X10, 8
	156 NotImplemented "Instruction LDUR not yet implemented."
	157 NotImplemented "Instruction CMP not yet implemented."
	158 Subtract X9, X9, 1
	159 Add X10, X10, 16
	160 Move X0, X19
	161 Move W2, W31
	162 Call 0x1C5D788
	163 NotImplemented "Instruction LDRSW not yet implemented."
	164 Add X8, X8, X9
	165 Add X0, X8, 312
	166 Move X8, [X0]
	167 Move X1, [X0+8]
	168 Move X0, X19
	169 NotImplemented "Instruction BLR not yet implemented."
	170 Compare W23, 0
	171 JumpIfEqual {180}
	172 Move X8, [X21+16]
	173 Compare X8, 0
	174 JumpIfEqual {216}
	175 Move W10, [X8+24]
	176 Subtract W9, W23, 1
	177 NotImplemented "Instruction CMP not yet implemented."
	178 Add X8, X8, W9
	179 Move [X8+32], X0
	180 Move [X21+4], X0
	181 Add W23, W23, 1
	182 Move X20, X31
	183 Compare X19, 0
	184 JumpIfEqual {206}
	185 Move X8, [X19]
	186 Move X1, [X22]
	187 NotImplemented "Instruction LDRH not yet implemented."
	188 Compare X9, 0
	189 JumpIfEqual {196}
	190 Move X10, [X8+176]
	191 Add X10, X10, 8
	192 NotImplemented "Instruction LDUR not yet implemented."
	193 NotImplemented "Instruction CMP not yet implemented."
	194 Subtract X9, X9, 1
	195 Add X10, X10, 16
	196 Move X0, X19
	197 Move W2, W31
	198 Call 0x1C5D788
	199 NotImplemented "Instruction LDRSW not yet implemented."
	200 Add X8, X8, X9
	201 Add X0, X8, 312
	202 Move X8, [X0]
	203 Move X1, [X0+8]
	204 Move X0, X19
	205 NotImplemented "Instruction BLR not yet implemented."
	206 Compare X20, 0
	207 JumpIfNotEqual {220}
	208 Move X20, [X31+48]
	209 Move X19, [X31+56]
	210 Move X22, [X31+32]
	211 Move X21, [X31+40]
	212 Move X24, [X31+16]
	213 Move X23, [X31+24]
	214 Move X30, [X31+64]
	215 Return 
	216 Call 0x1C17F20
	217 Call 0x1C17F28
	218 Call 0x1C17F20
	219 Call 0x1C17F20
	220 Move X0, X20
	221 Call 0x1C17F18
	222 Move X21, X0
	223 NotImplemented "Instruction CMP not yet implemented."
	224 Move X0, X21
	225 Call 0x3EB2AD0
	226 Move X20, [X0]
	227 Call 0x3EB2AE0
	228 Move X20, X31
	229 Move X21, X0
	230 Compare X19, 0
	231 JumpIfEqual {253}
	232 Move X8, [X19]
	233 Move X1, [X22]
	234 NotImplemented "Instruction LDRH not yet implemented."
	235 Compare X9, 0
	236 JumpIfEqual {243}
	237 Move X10, [X8+176]
	238 Add X10, X10, 8
	239 NotImplemented "Instruction LDUR not yet implemented."
	240 NotImplemented "Instruction CMP not yet implemented."
	241 Subtract X9, X9, 1
	242 Add X10, X10, 16
	243 Move X0, X19
	244 Move W2, W31
	245 Call 0x1C5D788
	246 NotImplemented "Instruction LDRSW not yet implemented."
	247 Add X8, X8, X9
	248 Add X0, X8, 312
	249 Move X8, [X0]
	250 Move X1, [X0+8]
	251 Move X0, X19
	252 NotImplemented "Instruction BLR not yet implemented."
	253 Compare X20, 0
	254 JumpIfNotEqual {257}
	255 Move X0, X21
	256 Call 0x1D2D690
	257 Move X0, X20
	258 Call 0x1C17F18
	259 Call 0x1991590

Method: TValue get_Item(System.Int32 index)

Disassembly:
	0x02DE5BE4 LDR W8, [X21]
	0x02DE5BE8 ADD W23, W23, 0x1
	0x02DE5BEC CMP W23, W8
	0x02DE5BF0 B.LT 0x2DE5B2C
	0x02DE5BF4 B 0x2DE5BFC
	0x02DE5BF8 MOV W0, W31
	0x02DE5BFC LDP X20, X19, [X31 + 0x30]
	0x02DE5C00 LDP X22, X21, [X31 + 0x20]
	0x02DE5C04 LDP X24, X23, [X31 + 0x10]
	0x02DE5C08 AND W0, W0, 0x1
	0x02DE5C0C LDR X30, [X31], #0x40
	0x02DE5C10 RET
	0x02DE5C14 BL 0x1C16F20
	0x02DE5C18 STR X30, [X31 - 0x40]!
	0x02DE5C1C STP X24, X23, [X31 + 0x10]
	0x02DE5C20 STP X22, X21, [X31 + 0x20]
	0x02DE5C24 STP X20, X19, [X31 + 0x30]
	0x02DE5C28 LDR X8, [X2 + 0x20]
	0x02DE5C2C MOV X19, X2
	0x02DE5C30 MOV X20, X1
	0x02DE5C34 MOV X21, X0
	0x02DE5C38 LDRB W9, [X8 + 0x135]
	0x02DE5C3C TBNZ X9, 0x0, 0x2DE5C4C
	0x02DE5C40 MOV X0, X8
	0x02DE5C44 BL 0x1C5C684
	0x02DE5C48 MOV X8, X0
	0x02DE5C4C LDR X8, [X8 + 0xC0]
	0x02DE5C50 LDR X0, [X8 + 0x80]
	0x02DE5C54 BL 0x2116F10
	0x02DE5C58 LDR W8, [X20]
	0x02DE5C5C CMP W8, 0x1
	0x02DE5C60 B.LT 0x2DE5CFC
	0x02DE5C64 MOV X22, X0
	0x02DE5C68 MOV W23, W31
	0x02DE5C6C LDR X0, [X19 + 0x20]
	0x02DE5C70 LDRB W8, [X0 + 0x135]
	0x02DE5C74 TBNZ X8, 0x0, 0x2DE5C7C
	0x02DE5C78 BL 0x1C5C684
	0x02DE5C7C LDR X8, [X0 + 0xC0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move TEMP, X1
	005 And TEMP, TEMP, -2147483648
	006 Compare TEMP, -2147483648
	007 JumpIfEqual {26}
	008 Move W8, [X0]
	009 NotImplemented "Instruction CMP not yet implemented."
	010 Compare W1, 0
	011 JumpIfEqual {20}
	012 Move X8, [X0+16]
	013 Compare X8, 0
	014 JumpIfEqual {42}
	015 Move W10, [X8+24]
	016 Subtract W9, W1, 1
	017 NotImplemented "Instruction CMP not yet implemented."
	018 Add X8, X8, W9
	019 Add X8, X8, 32
	020 Add X8, X0, 4
	021 Move X0, [X8]
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X30, [X31+32]
	025 Return X0
	026 Move X0, 0x1317000
	027 Move X0, [X0+1888]
	028 Move X19, X2
	029 Call 0x1C17D08
	030 Call 0x1C17F10
	031 Move X20, X0
	032 Move X0, 0x131A000
	033 Move X0, [X0+304]
	034 Call 0x1C17D08
	035 Move X1, X0
	036 Move X0, X20
	037 Move X2, X31
	038 Call ArgumentOutOfRangeException..ctor, X0, X1
	039 Move X0, X20
	040 Move X1, X19
	041 Call 0x1C17DEC
	042 Call 0x1C17F20
	043 Call 0x1C17F28

Method: System.Void set_Item(System.Int32 index, TValue value)

Disassembly:
	0x02DE5C80 MOV X0, X20
	0x02DE5C84 MOV W1, W23
	0x02DE5C88 LDR X2, [X8 + 0x78]
	0x02DE5C8C BL 0x2DE4BE4
	0x02DE5C90 LDR X8, [X19 + 0x20]
	0x02DE5C94 MOV X24, X0
	0x02DE5C98 LDRB W9, [X8 + 0x135]
	0x02DE5C9C TBNZ X9, 0x0, 0x2DE5CAC
	0x02DE5CA0 MOV X0, X8
	0x02DE5CA4 BL 0x1C5C684
	0x02DE5CA8 MOV X8, X0
	0x02DE5CAC LDR X8, [X8 + 0xC0]
	0x02DE5CB0 MOV X0, X21
	0x02DE5CB4 MOV X1, X24
	0x02DE5CB8 MOV X2, X22
	0x02DE5CBC LDR X3, [X8 + 0xF0]
	0x02DE5CC0 BL 0x2DE5AFC
	0x02DE5CC4 TBNZ X0, 0x0, 0x2DE5CEC
	0x02DE5CC8 LDR X0, [X19 + 0x20]
	0x02DE5CCC LDRB W8, [X0 + 0x135]
	0x02DE5CD0 TBNZ X8, 0x0, 0x2DE5CD8
	0x02DE5CD4 BL 0x1C5C684
	0x02DE5CD8 LDR X8, [X0 + 0xC0]
	0x02DE5CDC MOV X0, X21
	0x02DE5CE0 MOV X1, X24
	0x02DE5CE4 LDR X2, [X8 + 0xB0]
	0x02DE5CE8 BL 0x2DE4FEC
	0x02DE5CEC LDR W8, [X20]
	0x02DE5CF0 ADD W23, W23, 0x1
	0x02DE5CF4 CMP W23, W8
	0x02DE5CF8 B.LT 0x2DE5C6C
	0x02DE5CFC LDP X20, X19, [X31 + 0x30]
	0x02DE5D00 LDP X22, X21, [X31 + 0x20]
	0x02DE5D04 LDP X24, X23, [X31 + 0x10]
	0x02DE5D08 LDR X30, [X31], #0x40
	0x02DE5D0C RET
	0x02DE5D10 SUB X31, X31, 0x30
	0x02DE5D14 STR X30, [X31 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move TEMP, X1
	005 And TEMP, TEMP, -2147483648
	006 Compare TEMP, -2147483648
	007 JumpIfEqual {25}
	008 Move W8, [X0]
	009 NotImplemented "Instruction CMP not yet implemented."
	010 Compare W1, 0
	011 JumpIfEqual {20}
	012 Move X8, [X0+16]
	013 Compare X8, 0
	014 JumpIfEqual {41}
	015 Move W10, [X8+24]
	016 Subtract W9, W1, 1
	017 NotImplemented "Instruction CMP not yet implemented."
	018 Add X8, X8, W9
	019 Move [X8+32], X2
	020 Move [X0+4], X2
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X30, [X31+32]
	024 Return 
	025 Move X0, 0x1317000
	026 Move X0, [X0+1888]
	027 Move X19, X3
	028 Call 0x1C17D08
	029 Call 0x1C17F10
	030 Move X20, X0
	031 Move X0, 0x131A000
	032 Move X0, [X0+304]
	033 Call 0x1C17D08
	034 Move X1, X0
	035 Move X0, X20
	036 Move X2, X31
	037 Call ArgumentOutOfRangeException..ctor, X0, X1
	038 Move X0, X20
	039 Move X1, X19
	040 Call 0x1C17DEC
	041 Call 0x1C17F20
	042 Call 0x1C17F28

Method: System.Void Clear()

Disassembly:
	0x02DE5D18 LDR X8, [X0 + 0x10]
	0x02DE5D1C LDR V0, [X0]
	0x02DE5D20 MOVI D1, 0xFFFFFFFF
	0x02DE5D24 STR D1, [X31 + 0x18]

ISIL:
	001 Move [X0], W31
	002 Move [X0+4], X31
	003 Move [X0+16], X31
	004 Return 

Method: System.Void ClearWithCapacity()

Disassembly:
	0x02DE5D28 STR X8, [X31 + 0x10]
	0x02DE5D2C STR V0, [X31]
	0x02DE5D30 LDR X0, [X1 + 0x20]
	0x02DE5D34 LDRB W8, [X0 + 0x135]
	0x02DE5D38 TBNZ X8, 0x0, 0x2DE5D40
	0x02DE5D3C BL 0x1C5C684
	0x02DE5D40 LDR X8, [X0 + 0xC0]
	0x02DE5D44 ADD X1, X31, 0x0
	0x02DE5D48 LDR X0, [X8 + 0xF8]
	0x02DE5D4C BL 0x1C16E04
	0x02DE5D50 LDR X30, [X31 + 0x20]
	0x02DE5D54 ADD X31, X31, 0x30
	0x02DE5D58 RET
	0x02DE5D5C STP X30, X19, [X31 - 0x10]!
	0x02DE5D60 LDR X8, [X1 + 0x20]
	0x02DE5D64 MOV X19, X0
	0x02DE5D68 LDRB W9, [X8 + 0x135]
	0x02DE5D6C TBNZ X9, 0x0, 0x2DE5D7C
	0x02DE5D70 MOV X0, X8
	0x02DE5D74 BL 0x1C5C684
	0x02DE5D78 MOV X8, X0
	0x02DE5D7C LDR X8, [X8 + 0xC0]
	0x02DE5D80 MOV X0, X19
	0x02DE5D84 LDR X1, [X8 + 0x100]

ISIL:
	001 Move [X31-16], X30
	002 Move W8, [X0]
	003 Move [X0+4], X31
	004 Subtract W8, W8, 1
	005 NotImplemented "Instruction CMP not yet implemented."
	006 Move X8, X31
	007 Move X9, [X0+16]
	008 Compare X9, 0
	009 JumpIfEqual {21}
	010 Move W10, [X9+24]
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Add X9, X9, X8
	013 Move [X9+32], X31
	014 Move W9, [X0]
	015 Add X8, X8, 1
	016 Subtract W9, W9, 1
	017 NotImplemented "Instruction CMP not yet implemented."
	018 Move [X0], W31
	019 Move X30, [X31+16]
	020 Return 
	021 Call 0x1C17F20
	022 Call 0x1C17F28

Method: UnityEngine.InputSystem.Utilities.InlinedArray`1<TValue> Clone()

Disassembly:
	0x02DE5D88 LDP X30, X19, [X31], #0x10
	0x02DE5D8C B 0x2DE5D10
	0x02DE5D90 LDR X8, [X0 + 0x10]
	0x02DE5D94 CBZ X8, 0x2DE5DA4
	0x02DE5D98 LDR W8, [X8 + 0x18]
	0x02DE5D9C ADD W0, W8, 0x1
	0x02DE5DA0 RET
	0x02DE5DA4 MOVZ W0, 0x1
	0x02DE5DA8 RET
	0x02DE5DAC MOVZ W8, 0x1
	0x02DE5DB0 STR W8, [X0]
	0x02DE5DB4 STP X1, X31, [X0 + 0x8]
	0x02DE5DB8 RET
	0x02DE5DBC STR X30, [X31 - 0x10]!
	0x02DE5DC0 CBZ X2, 0x2DE5DDC
	0x02DE5DC4 LDR W8, [X2 + 0x18]
	0x02DE5DC8 STP X1, X2, [X0 + 0x8]
	0x02DE5DCC ADD W8, W8, 0x1
	0x02DE5DD0 STR W8, [X0]
	0x02DE5DD4 LDR X30, [X31], #0x10
	0x02DE5DD8 RET
	0x02DE5DDC BL 0x1C16F20
	0x02DE5DE0 STP X30, X25, [X31 - 0x40]!
	0x02DE5DE4 STP X24, X23, [X31 + 0x10]
	0x02DE5DE8 STP X22, X21, [X31 + 0x20]
	0x02DE5DEC STP X20, X19, [X31 + 0x30]
	0x02DE5DF0 ADRP X22, 0x15F6000
	0x02DE5DF4 LDRB W8, [X22 + 0x9BB]
	0x02DE5DF8 MOV X20, X2

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+48], X20
	004 Move [X31+56], X19
	005 Move [X31+8], X31
	006 Move [X31+16], X31
	007 Move W9, [X0]
	008 Move X19, X8
	009 Move [X31+8], W9
	010 NotImplemented "Instruction LDUR not yet implemented."
	011 Move [X31+12], X9
	012 Move X20, [X0+16]
	013 Compare X20, 0
	014 JumpIfEqual {26}
	015 Move X0, [X1+32]
	016 Move W8, [X0+309]
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {22}
	021 Call 0x1C5D684
	022 Move X8, [X0+192]
	023 Move X0, X20
	024 Move X1, [X8+72]
	025 Call 0x217726C, X0
	026 Move X0, X31
	027 NotImplemented "Instruction LDUR not yet implemented."
	028 Move [X19+16], X0
	029 Move X30, [X31+32]
	030 Move [X31+24], X0
	031 Move [X19], V0
	032 Move X20, [X31+48]
	033 Move X19, [X31+56]
	034 Add X31, X31, 64
	035 Return X0

Method: System.Void SetLength(System.Int32 size)

Disassembly:
	0x02DE5DFC MOV X19, X1
	0x02DE5E00 MOV X21, X0
	0x02DE5E04 TBNZ X8, 0x0, 0x2DE5E28
	0x02DE5E08 ADRP X0, 0x130E000
	0x02DE5E0C LDR X0, [X0 + 0xE00]
	0x02DE5E10 BL 0x1C16CF4
	0x02DE5E14 ADRP X0, 0x130E000
	0x02DE5E18 LDR X0, [X0 + 0xE18]
	0x02DE5E1C BL 0x1C16CF4
	0x02DE5E20 MOVZ W8, 0x1
	0x02DE5E24 STRB W8, [X22 + 0x9BB]
	0x02DE5E28 STP X31, X31, [X21]
	0x02DE5E2C STR X31, [X21 + 0x10]
	0x02DE5E30 LDR X0, [X20 + 0x20]
	0x02DE5E34 LDRB W8, [X0 + 0x135]
	0x02DE5E38 TBNZ X8, 0x0, 0x2DE5E40
	0x02DE5E3C BL 0x1C5C684
	0x02DE5E40 LDR X8, [X0 + 0xC0]
	0x02DE5E44 MOV X0, X19
	0x02DE5E48 LDR X1, [X8 + 0x20]
	0x02DE5E4C BL 0x21BC960
	0x02DE5E50 CMP W0, 0x2
	0x02DE5E54 STR W0, [X21]
	0x02DE5E58 B.GE 0x2DE5E64
	0x02DE5E5C STR X31, [X21 + 0x10]
	0x02DE5E60 B 0x2DE5E98
	0x02DE5E64 MOV W22, W0
	0x02DE5E68 LDR X0, [X20 + 0x20]
	0x02DE5E6C LDRB W8, [X0 + 0x135]
	0x02DE5E70 TBNZ X8, 0x0, 0x2DE5E78
	0x02DE5E74 BL 0x1C5C684
	0x02DE5E78 LDR X8, [X0 + 0xC0]
	0x02DE5E7C LDR X0, [X8 + 0x28]
	0x02DE5E80 LDRB W8, [X0 + 0x135]
	0x02DE5E84 TBNZ X8, 0x0, 0x2DE5E8C
	0x02DE5E88 BL 0x1C5C684
	0x02DE5E8C SUB W1, W22, 0x1
	0x02DE5E90 BL 0x1C16D6C
	0x02DE5E94 STR X0, [X21 + 0x10]
	0x02DE5E98 CBZ X19, 0x2DE60CC
	0x02DE5E9C LDR X0, [X20 + 0x20]
	0x02DE5EA0 LDRB W8, [X0 + 0x135]
	0x02DE5EA4 TBNZ X8, 0x0, 0x2DE5EAC
	0x02DE5EA8 BL 0x1C5C684
	0x02DE5EAC LDR X8, [X0 + 0xC0]
	0x02DE5EB0 LDR X1, [X8 + 0x18]
	0x02DE5EB4 LDRB W8, [X1 + 0x135]
	0x02DE5EB8 TBNZ X8, 0x0, 0x2DE5EC8
	0x02DE5EBC MOV X0, X1
	0x02DE5EC0 BL 0x1C5C684

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move W8, [X0]
	007 Move X19, X0
	008 Move W21, W1
	009 Move X20, X2
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Move W22, W21
	012 Move X0, [X20+32]
	013 Move W8, [X0+309]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {19}
	018 Call 0x1C5D684
	019 Move X8, [X0+192]
	020 Move X0, X19
	021 Move W1, W22
	022 Move X2, X31
	023 Move X3, [X8+80]
	024 Call 0x2DE5C80, X0, X1, X2
	025 Move W8, [X19]
	026 Add W22, W22, 1
	027 NotImplemented "Instruction CMP not yet implemented."
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move [X19], W21
	030 Add X19, X19, 16
	031 Move X8, [X19]
	032 Compare X8, 0
	033 JumpIfEqual {43}
	034 Move W8, [X8+24]
	035 Subtract W21, W21, 1
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X20, [X31+32]
	038 Move X19, [X31+40]
	039 Move X22, [X31+16]
	040 Move X21, [X31+24]
	041 Move X30, [X31+48]
	042 Return 
	043 Subtract W21, W21, 1
	044 Move X0, [X20+32]
	045 Move W8, [X0+309]
	046 Move TEMP, X8
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfEqual {51}
	050 Call 0x1C5D684
	051 Move X8, [X0+192]
	052 Move X0, X19
	053 Move W1, W21
	054 Move X20, [X31+32]
	055 Move X19, [X31+40]
	056 Move X2, [X8+96]
	057 Move X22, [X31+16]
	058 Move X21, [X31+24]
	059 Move X30, [X31+48]
	060 Call Array.Resize, X0, X1
	061 Return 

Method: TValue[] ToArray()

Disassembly:
	0x02DE5EC4 MOV X1, X0
	0x02DE5EC8 LDR X8, [X19]
	0x02DE5ECC LDRH W9, [X8 + 0x12E]
	0x02DE5ED0 CBZ X9, 0x2DE5EF4
	0x02DE5ED4 LDR X10, [X8 + 0xB0]
	0x02DE5ED8 ADD X10, X10, 0x8
	0x02DE5EDC LDUR X11, [X10 - 0x8]
	0x02DE5EE0 CMP X11, X1
	0x02DE5EE4 B.EQ 0x2DE5F04
	0x02DE5EE8 SUBS X9, X9, 0x1
	0x02DE5EEC ADD X10, X10, 0x10
	0x02DE5EF0 B.NE 0x2DE5EDC
	0x02DE5EF4 MOV X0, X19
	0x02DE5EF8 MOV W2, W31
	0x02DE5EFC BL 0x1C5C788
	0x02DE5F00 B 0x2DE5F10

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, X0
	005 Move X0, [X1+32]
	006 NotImplemented "Instruction LDUR not yet implemented."
	007 Move X20, [X8+16]
	008 Move W9, [X0+309]
	009 Move TEMP, X9
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {14}
	013 Call 0x1C5D684
	014 Move X8, [X0+192]
	015 Move X0, X19
	016 Move X1, X20
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 Move X2, [X8+112]
	020 Move X30, [X31+32]
	021 Call 0x217B804, X0, X1
	022 Return X0

Method: TOther[] ToArray(System.Func`2<TValue, TOther> mapFunction)

Disassembly:
	0x021305C8 CMP W22, 0x2
	0x021305CC B.GE 0x2130528
	0x021305D0 ADD W25, W25, 0x1
	0x021305D4 CMP W25, W20
	0x021305D8 ADD W26, W26, 0x1
	0x021305DC B.NE 0x2130524
	0x021305E0 LDP X20, X19, [X31 + 0x50]
	0x021305E4 LDP X22, X21, [X31 + 0x40]
	0x021305E8 LDP X24, X23, [X31 + 0x30]
	0x021305EC LDP X26, X25, [X31 + 0x20]
	0x021305F0 LDR X30, [X31 + 0x10]
	0x021305F4 ADD X31, X31, 0x60
	0x021305F8 RET
	0x021305FC ADRP X0, 0x1FCB000
	0x02130600 LDR X0, [X0 + 0x760]
	0x02130604 BL 0x1C16D08
	0x02130608 BL 0x1C16F10
	0x0213060C MOV X20, X0
	0x02130610 ADRP X0, 0x1FEB000
	0x02130614 LDR X0, [X0 + 0x658]
	0x02130618 B 0x2130638
	0x0213061C ADRP X0, 0x1FCB000
	0x02130620 LDR X0, [X0 + 0x760]
	0x02130624 BL 0x1C16D08
	0x02130628 BL 0x1C16F10
	0x0213062C MOV X20, X0
	0x02130630 ADRP X0, 0x1FEB000
	0x02130634 LDR X0, [X0 + 0x648]
	0x02130638 BL 0x1C16D08
	0x0213063C MOV X1, X0
	0x02130640 MOV X0, X20
	0x02130644 MOV X2, X31
	0x02130648 BL 0x3316014
	0x0213064C MOV X0, X20
	0x02130650 MOV X1, X19
	0x02130654 BL 0x1C16DEC
	0x02130658 STP X30, X23, [X31 - 0x30]!
	0x0213065C STP X22, X21, [X31 + 0x10]
	0x02130660 STP X20, X19, [X31 + 0x20]
	0x02130664 LDR X8, [X1 + 0x38]
	0x02130668 MOV X19, X1
	0x0213066C MOV X20, X0
	0x02130670 CBNZ X8, 0x213067C
	0x02130674 MOV X0, X19
	0x02130678 BL 0x1C5C6E0
	0x0213067C LDR X8, [X19 + 0x20]
	0x02130680 MOV X0, X20
	0x02130684 LDR X8, [X8 + 0xC0]
	0x02130688 LDR X8, [X8 + 0x10]
	0x0213068C LDR X1, [X8 + 0x80]
	0x02130690 BL 0x1C16D18
	0x02130694 LDR W8, [X0]
	0x02130698 CMP W8, 0x1
	0x0213069C B.LT 0x2130814
	0x021306A0 LDR X8, [X19 + 0x20]
	0x021306A4 MOV X0, X20
	0x021306A8 LDR X8, [X8 + 0xC0]
	0x021306AC LDR X8, [X8 + 0x10]
	0x021306B0 LDR X1, [X8 + 0x80]
	0x021306B4 BL 0x1C16D18
	0x021306B8 LDR X8, [X19 + 0x38]
	0x021306BC LDR X21, [X0 + 0x8]
	0x021306C0 LDR X1, [X8]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X8, [X2+56]
	009 Move X19, X2
	010 Move X20, X1
	011 Move X21, X0
	012 Compare X8, 0
	013 JumpIfNotEqual {16}
	014 Move X0, X19
	015 Call 0x1C5D6E0
	016 Move W22, [X21]
	017 Compare W22, 0
	018 JumpIfEqual {64}
	019 Move X8, [X19+56]
	020 Move X0, [X8]
	021 Move W8, [X0+309]
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {27}
	026 Call 0x1C5D684
	027 Move W1, W22
	028 Call 0x1C17D6C
	029 Move W8, [X21]
	030 Move X22, X0
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move X23, X31
	033 Add X24, X22, 32
	034 Move X0, [X19+32]
	035 Move W8, [X0+309]
	036 Move TEMP, X8
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfEqual {41}
	040 Call 0x1C5D684
	041 Move X8, [X0+192]
	042 Move X0, X21
	043 Move W1, W23
	044 Move X2, [X8+120]
	045 Call InlinedArray`1<InternedString>.get_Item, X0, X1
	046 Compare X20, 0
	047 JumpIfEqual {74}
	048 Move X2, X0
	049 Move X8, [X20+24]
	050 Move X0, [X20+64]
	051 Move X3, [X20+40]
	052 Move X4, X1
	053 Move X1, X2
	054 Move X2, X4
	055 NotImplemented "Instruction BLR not yet implemented."
	056 Compare X22, 0
	057 JumpIfEqual {74}
	058 Move W8, [X22+24]
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move [X24], X0
	061 NotImplemented "Instruction LDRSW not yet implemented."
	062 Add X23, X23, 1
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move X22, X31
	065 Move X0, X22
	066 Move X20, [X31+48]
	067 Move X19, [X31+56]
	068 Move X22, [X31+32]
	069 Move X21, [X31+40]
	070 Move X24, [X31+16]
	071 Move X23, [X31+24]
	072 Move X30, [X31+64]
	073 Return X0
	074 Call 0x1C17F20
	075 Call 0x1C17F28

Method: System.Int32 IndexOf(TValue value)

Disassembly:
	0x02DE5F04 LDRSW X9, [X10]
	0x02DE5F08 ADD X8, X8, X9, 0x4, LSL
	0x02DE5F0C ADD X0, X8, 0x138
	0x02DE5F10 LDP X8, X1, [X0]
	0x02DE5F14 ADRP X22, 0x130E000
	0x02DE5F18 LDR X22, [X22 + 0xE00]
	0x02DE5F1C MOV X0, X19
	0x02DE5F20 BLR X8
	0x02DE5F24 MOV X19, X0
	0x02DE5F28 CBZ X0, 0x2DE60D0
	0x02DE5F2C ADRP X24, 0x130E000
	0x02DE5F30 LDR X24, [X24 + 0xE18]
	0x02DE5F34 MOV W23, W31
	0x02DE5F38 ADD X25, X21, 0x8
	0x02DE5F3C LDR X8, [X19]
	0x02DE5F40 LDR X1, [X24]
	0x02DE5F44 LDRH W9, [X8 + 0x12E]
	0x02DE5F48 CBZ X9, 0x2DE5F6C
	0x02DE5F4C LDR X10, [X8 + 0xB0]
	0x02DE5F50 ADD X10, X10, 0x8
	0x02DE5F54 LDUR X11, [X10 - 0x8]
	0x02DE5F58 CMP X11, X1
	0x02DE5F5C B.EQ 0x2DE5F7C
	0x02DE5F60 SUBS X9, X9, 0x1
	0x02DE5F64 ADD X10, X10, 0x10
	0x02DE5F68 B.NE 0x2DE5F54
	0x02DE5F6C MOV X0, X19
	0x02DE5F70 MOV W2, W31
	0x02DE5F74 BL 0x1C5C788
	0x02DE5F78 B 0x2DE5F88
	0x02DE5F7C LDRSW X9, [X10]
	0x02DE5F80 ADD X8, X8, X9, 0x4, LSL
	0x02DE5F84 ADD X0, X8, 0x138
	0x02DE5F88 LDP X8, X1, [X0]
	0x02DE5F8C MOV X0, X19
	0x02DE5F90 BLR X8
	0x02DE5F94 TBZ X0, 0x0, 0x2DE604C
	0x02DE5F98 LDR X0, [X20 + 0x20]
	0x02DE5F9C LDRB W8, [X0 + 0x135]
	0x02DE5FA0 TBNZ X8, 0x0, 0x2DE5FA8
	0x02DE5FA4 BL 0x1C5C684
	0x02DE5FA8 LDR X8, [X0 + 0xC0]
	0x02DE5FAC LDR X1, [X8 + 0x38]
	0x02DE5FB0 LDRB W8, [X1 + 0x135]
	0x02DE5FB4 TBNZ X8, 0x0, 0x2DE5FC4
	0x02DE5FB8 MOV X0, X1
	0x02DE5FBC BL 0x1C5C684
	0x02DE5FC0 MOV X1, X0
	0x02DE5FC4 LDR X8, [X19]
	0x02DE5FC8 LDRH W9, [X8 + 0x12E]
	0x02DE5FCC CBZ X9, 0x2DE5FF0
	0x02DE5FD0 LDR X10, [X8 + 0xB0]
	0x02DE5FD4 ADD X10, X10, 0x8
	0x02DE5FD8 LDUR X11, [X10 - 0x8]
	0x02DE5FDC CMP X11, X1
	0x02DE5FE0 B.EQ 0x2DE6000
	0x02DE5FE4 SUBS X9, X9, 0x1
	0x02DE5FE8 ADD X10, X10, 0x10

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X2+32]
	007 Move X19, X1
	008 Move X20, X0
	009 Move W9, [X8+309]
	010 Move TEMP, X9
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {17}
	014 Move X0, X8
	015 Call 0x1C5D684
	016 Move X8, X0
	017 Move X8, [X8+192]
	018 Move X0, [X8+128]
	019 Call 0x2117F10
	020 Move W8, [X20]
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move X21, X0
	023 Compare X0, 0
	024 JumpIfEqual {72}
	025 Move X8, [X21]
	026 NotImplemented "Instruction LDUR not yet implemented."
	027 Move X0, X21
	028 Move X2, X19
	029 Move X9, [X8+440]
	030 Move X3, [X8+448]
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {37}
	036 Move W22, W31
	037 Move X8, [X20+16]
	038 Compare X8, 0
	039 JumpIfEqual {62}
	040 Move X22, X31
	041 Move W8, [X20]
	042 Subtract W8, W8, 1
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move X8, [X20+16]
	045 Compare X8, 0
	046 JumpIfEqual {72}
	047 Move W9, [X8+24]
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X9, [X21]
	050 Add X8, X8, X22
	051 Move X1, [X8+32]
	052 Move X0, X21
	053 Move X8, [X9+440]
	054 Move X3, [X9+448]
	055 Move X2, X19
	056 NotImplemented "Instruction BLR not yet implemented."
	057 Add X22, X22, 1
	058 Move TEMP, X0
	059 And TEMP, TEMP, 1
	060 Compare TEMP, 1
	061 JumpIfNotEqual {41}
	062 Move TEMP, 0
	063 Not TEMP
	064 Move W22, TEMP
	065 Move W0, W22
	066 Move X20, [X31+32]
	067 Move X19, [X31+40]
	068 Move X22, [X31+16]
	069 Move X21, [X31+24]
	070 Move X30, [X31+48]
	071 Return X0
	072 Call 0x1C17F20
	073 Call 0x1C17F28

Method: System.Int32 Append(TValue value)

Disassembly:
	0x02DE5FEC B.NE 0x2DE5FD8
	0x02DE5FF0 MOV X0, X19
	0x02DE5FF4 MOV W2, W31
	0x02DE5FF8 BL 0x1C5C788
	0x02DE5FFC B 0x2DE600C
	0x02DE6000 LDRSW X9, [X10]
	0x02DE6004 ADD X8, X8, X9, 0x4, LSL
	0x02DE6008 ADD X0, X8, 0x138
	0x02DE600C LDP X8, X1, [X0]
	0x02DE6010 MOV X0, X19
	0x02DE6014 BLR X8
	0x02DE6018 MOV X8, X25
	0x02DE601C CBZ W23, 0x2DE6040
	0x02DE6020 LDR X8, [X21 + 0x10]
	0x02DE6024 CBZ X8, 0x2DE60C4
	0x02DE6028 LDR W10, [X8 + 0x18]
	0x02DE602C SUB W9, W23, 0x1
	0x02DE6030 CMP W9, W10
	0x02DE6034 B.CS 0x2DE60C8
	0x02DE6038 ADD X8, X8, W9, 0x3, SXTW
	0x02DE603C ADD X8, X8, 0x20
	0x02DE6040 STR X0, [X8]
	0x02DE6044 ADD W23, W23, 0x1
	0x02DE6048 B 0x2DE5F3C
	0x02DE604C MOV X20, X31
	0x02DE6050 CBZ X19, 0x2DE60AC
	0x02DE6054 LDR X8, [X19]
	0x02DE6058 LDR X1, [X22]
	0x02DE605C LDRH W9, [X8 + 0x12E]
	0x02DE6060 CBZ X9, 0x2DE6084
	0x02DE6064 LDR X10, [X8 + 0xB0]
	0x02DE6068 ADD X10, X10, 0x8
	0x02DE606C LDUR X11, [X10 - 0x8]
	0x02DE6070 CMP X11, X1
	0x02DE6074 B.EQ 0x2DE6094
	0x02DE6078 SUBS X9, X9, 0x1
	0x02DE607C ADD X10, X10, 0x10
	0x02DE6080 B.NE 0x2DE606C
	0x02DE6084 MOV X0, X19
	0x02DE6088 MOV W2, W31
	0x02DE608C BL 0x1C5C788
	0x02DE6090 B 0x2DE60A0
	0x02DE6094 LDRSW X9, [X10]
	0x02DE6098 ADD X8, X8, X9, 0x4, LSL
	0x02DE609C ADD X0, X8, 0x138
	0x02DE60A0 LDP X8, X1, [X0]
	0x02DE60A4 MOV X0, X19
	0x02DE60A8 BLR X8
	0x02DE60AC CBNZ X20, 0x2DE60D4
	0x02DE60B0 LDP X20, X19, [X31 + 0x30]
	0x02DE60B4 LDP X22, X21, [X31 + 0x20]
	0x02DE60B8 LDP X24, X23, [X31 + 0x10]
	0x02DE60BC LDP X30, X25, [X31], #0x40
	0x02DE60C0 RET
	0x02DE60C4 BL 0x1C16F20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move W22, [X0]
	007 Move X19, X0
	008 Move X20, X1
	009 Compare W22, 0
	010 JumpIfEqual {38}
	011 Move X21, X19
	012 Add X21, X21, 16
	013 Move X9, [X21]
	014 Move X0, [X2+32]
	015 Add X8, X0, 309
	016 NotImplemented "Instruction LDRH not yet implemented."
	017 Compare X9, 0
	018 JumpIfEqual {39}
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {24}
	023 Call 0x1C5D684
	024 Move X8, [X0+192]
	025 Move X0, X21
	026 Move W1, W22
	027 Move X2, [X8+96]
	028 Call Array.Resize, X0, X1
	029 Move X8, [X21]
	030 Compare X8, 0
	031 JumpIfEqual {70}
	032 Move W9, [X19]
	033 Move W10, [X8+24]
	034 Subtract W9, W9, 1
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Add X8, X8, W9
	037 Move [X8+32], X20
	038 Move [X19+4], X20
	039 Move TEMP, X8
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfEqual {44}
	043 Call 0x1C5D684
	044 Move X8, [X0+192]
	045 Move X0, [X8+40]
	046 Move W8, [X0+309]
	047 Move TEMP, X8
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfEqual {52}
	051 Call 0x1C5D684
	052 Move W1, 1
	053 Call 0x1C17D6C
	054 Move [X21], X0
	055 Compare X0, 0
	056 JumpIfEqual {70}
	057 Move W8, [X0+24]
	058 Compare W8, 0
	059 JumpIfEqual {71}
	060 Move [X0+32], X20
	061 Move W0, [X19]
	062 Move X22, [X31+16]
	063 Move X21, [X31+24]
	064 Add W8, W0, 1
	065 Move [X19], W8
	066 Move X20, [X31+32]
	067 Move X19, [X31+40]
	068 Move X30, [X31+48]
	069 Return X0
	070 Call 0x1C17F20
	071 Call 0x1C17F28

Method: System.Int32 AppendWithCapacity(TValue value, System.Int32 capacityIncrement = 10)

Disassembly:
	0x02DE60C8 BL 0x1C16F28
	0x02DE60CC BL 0x1C16F20
	0x02DE60D0 BL 0x1C16F20
	0x02DE60D4 MOV X0, X20
	0x02DE60D8 BL 0x1C16F18
	0x02DE60DC B 0x2DE60E8
	0x02DE60E0 B 0x2DE60E8
	0x02DE60E4 B 0x2DE60E8
	0x02DE60E8 MOV X21, X0
	0x02DE60EC CMP W1, 0x1
	0x02DE60F0 B.NE 0x2DE6108
	0x02DE60F4 MOV X0, X21
	0x02DE60F8 BL 0x3EB1AD0
	0x02DE60FC LDR X20, [X0]
	0x02DE6100 BL 0x3EB1AE0
	0x02DE6104 B 0x2DE6050
	0x02DE6108 MOV X20, X31
	0x02DE610C B 0x2DE6114
	0x02DE6110 MOV X21, X0
	0x02DE6114 CBZ X19, 0x2DE6170
	0x02DE6118 LDR X8, [X19]
	0x02DE611C LDR X1, [X22]
	0x02DE6120 LDRH W9, [X8 + 0x12E]
	0x02DE6124 CBZ X9, 0x2DE6148
	0x02DE6128 LDR X10, [X8 + 0xB0]
	0x02DE612C ADD X10, X10, 0x8
	0x02DE6130 LDUR X11, [X10 - 0x8]
	0x02DE6134 CMP X11, X1
	0x02DE6138 B.EQ 0x2DE6158
	0x02DE613C SUBS X9, X9, 0x1
	0x02DE6140 ADD X10, X10, 0x10
	0x02DE6144 B.NE 0x2DE6130

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move W8, [X0]
	007 Move X19, X0
	008 Move X21, X1
	009 Compare W8, 0
	010 JumpIfEqual {30}
	011 Subtract W8, W8, 1
	012 Move [X31+12], W8
	013 Move X0, [X3+32]
	014 Move W20, W2
	015 Add X22, X19, 16
	016 Move W8, [X0+309]
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {22}
	021 Call 0x1C5D684
	022 Move X8, [X0+192]
	023 Add X1, X31, 12
	024 Move X0, X22
	025 Move X2, X21
	026 Move X4, [X8+160]
	027 Move W3, W20
	028 Call 0x21752E0, X0, X1, X2, X3
	029 Move W0, [X19]
	030 Move W0, W31
	031 Move [X19+4], X21
	032 Add W8, W0, 1
	033 Move [X19], W8
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Return X0

Method: System.Void AssignWithCapacity(UnityEngine.InputSystem.Utilities.InlinedArray`1<TValue> values)

Disassembly:
	0x02DE6148 MOV X0, X19
	0x02DE614C MOV W2, W31
	0x02DE6150 BL 0x1C5C788
	0x02DE6154 B 0x2DE6164
	0x02DE6158 LDRSW X9, [X10]
	0x02DE615C ADD X8, X8, X9, 0x4, LSL
	0x02DE6160 ADD X0, X8, 0x138
	0x02DE6164 LDP X8, X1, [X0]
	0x02DE6168 MOV X0, X19
	0x02DE616C BLR X8
	0x02DE6170 CBNZ X20, 0x2DE617C
	0x02DE6174 MOV X0, X21
	0x02DE6178 BL 0x1D2C690
	0x02DE617C MOV X0, X20
	0x02DE6180 BL 0x1C16F18
	0x02DE6184 BL 0x1990590
	0x02DE6188 STR X30, [X31 - 0x20]!
	0x02DE618C STP X20, X19, [X31 + 0x10]
	0x02DE6190 TBNZ X1, 0x1F, 0x2DE61DC
	0x02DE6194 LDR W8, [X0]
	0x02DE6198 CMP W8, W1
	0x02DE619C B.LE 0x2DE61DC
	0x02DE61A0 CBZ W1, 0x2DE61C8
	0x02DE61A4 LDR X8, [X0 + 0x10]
	0x02DE61A8 CBZ X8, 0x2DE621C
	0x02DE61AC LDR W10, [X8 + 0x18]
	0x02DE61B0 SUB W9, W1, 0x1
	0x02DE61B4 CMP W9, W10
	0x02DE61B8 B.CS 0x2DE6220
	0x02DE61BC ADD X8, X8, W9, 0x3, UXTW
	0x02DE61C0 ADD X8, X8, 0x20
	0x02DE61C4 B 0x2DE61CC
	0x02DE61C8 ADD X8, X0, 0x8
	0x02DE61CC LDR X0, [X8]
	0x02DE61D0 LDP X20, X19, [X31 + 0x10]
	0x02DE61D4 LDR X30, [X31], #0x20
	0x02DE61D8 RET
	0x02DE61DC ADRP X0, 0x1315000
	0x02DE61E0 LDR X0, [X0 + 0x760]
	0x02DE61E4 MOV X19, X2
	0x02DE61E8 BL 0x1C16D08
	0x02DE61EC BL 0x1C16F10
	0x02DE61F0 MOV X20, X0
	0x02DE61F4 ADRP X0, 0x1318000
	0x02DE61F8 LDR X0, [X0 + 0x130]
	0x02DE61FC BL 0x1C16D08
	0x02DE6200 MOV X1, X0
	0x02DE6204 MOV X0, X20
	0x02DE6208 MOV X2, X31
	0x02DE620C BL 0x3316014
	0x02DE6210 MOV X0, X20
	0x02DE6214 MOV X1, X19

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X2+32]
	007 Move X22, X2
	008 Move X19, X1
	009 Move X20, X0
	010 Move W9, [X8+309]
	011 Move TEMP, X9
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {17}
	015 Move X0, X8
	016 Call 0x1C5D684
	017 Move X1, [X20+16]
	018 Compare X1, 0
	019 JumpIfEqual {22}
	020 Move W8, [X1+24]
	021 Add W9, W8, 1
	022 Move W9, 1
	023 Move W8, [X19]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Subtract W21, W8, 1
	026 Move X0, [X22+32]
	027 Move W8, [X0+309]
	028 Move TEMP, X8
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {33}
	032 Call 0x1C5D684
	033 Move X8, [X0+192]
	034 Move X0, [X8+40]
	035 Move W8, [X0+309]
	036 Move TEMP, X8
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfEqual {41}
	040 Call 0x1C5D684
	041 Move W1, W21
	042 Call 0x1C17D6C
	043 Move [X20+16], X0
	044 Move W8, [X19]
	045 Move X1, X0
	046 Subtract W2, W8, 1
	047 Move [X20], W8
	048 NotImplemented "Instruction LDUR not yet implemented."
	049 Move [X20+4], X8
	050 Move X20, [X31+32]
	051 Move X19, [X31+40]
	052 Move X22, [X31+16]
	053 Move X21, [X31+24]
	054 Move X30, [X31+48]
	055 Return 
	056 Move X0, [X19+16]
	057 Move X20, [X31+32]
	058 Move X19, [X31+40]
	059 Move X22, [X31+16]
	060 Move X21, [X31+24]
	061 Move X3, X31
	062 Move X30, [X31+48]
	063 Call Array.Copy, X0, X1, X2
	064 Return 

Method: System.Void Append(System.Collections.Generic.IEnumerable`1<TValue> values)

Disassembly:
	0x02DE6218 BL 0x1C16DEC
	0x02DE621C BL 0x1C16F20
	0x02DE6220 BL 0x1C16F28
	0x02DE6224 STR X30, [X31 - 0x20]!
	0x02DE6228 STP X20, X19, [X31 + 0x10]
	0x02DE622C TBNZ X1, 0x1F, 0x2DE6278
	0x02DE6230 LDR W8, [X0]
	0x02DE6234 CMP W8, W1
	0x02DE6238 B.LE 0x2DE6278
	0x02DE623C CBZ W1, 0x2DE6264
	0x02DE6240 LDR X8, [X0 + 0x10]
	0x02DE6244 CBZ X8, 0x2DE62B8
	0x02DE6248 LDR W10, [X8 + 0x18]
	0x02DE624C SUB W9, W1, 0x1
	0x02DE6250 CMP W9, W10
	0x02DE6254 B.CS 0x2DE62BC
	0x02DE6258 ADD X8, X8, W9, 0x3, UXTW
	0x02DE625C ADD X8, X8, 0x20
	0x02DE6260 B 0x2DE6268
	0x02DE6264 ADD X8, X0, 0x8
	0x02DE6268 LDP X20, X19, [X31 + 0x10]
	0x02DE626C STR X2, [X8]
	0x02DE6270 LDR X30, [X31], #0x20
	0x02DE6274 RET
	0x02DE6278 ADRP X0, 0x1315000
	0x02DE627C LDR X0, [X0 + 0x760]
	0x02DE6280 MOV X19, X3
	0x02DE6284 BL 0x1C16D08
	0x02DE6288 BL 0x1C16F10
	0x02DE628C MOV X20, X0
	0x02DE6290 ADRP X0, 0x1318000
	0x02DE6294 LDR X0, [X0 + 0x130]
	0x02DE6298 BL 0x1C16D08
	0x02DE629C MOV X1, X0
	0x02DE62A0 MOV X0, X20
	0x02DE62A4 MOV X2, X31
	0x02DE62A8 BL 0x3316014
	0x02DE62AC MOV X0, X20
	0x02DE62B0 MOV X1, X19
	0x02DE62B4 BL 0x1C16DEC
	0x02DE62B8 BL 0x1C16F20
	0x02DE62BC BL 0x1C16F28
	0x02DE62C0 STR W31, [X0]
	0x02DE62C4 STP X31, X31, [X0 + 0x8]
	0x02DE62C8 RET
	0x02DE62CC STR X30, [X31 - 0x10]!
	0x02DE62D0 LDR W8, [X0]
	0x02DE62D4 STR X31, [X0 + 0x8]
	0x02DE62D8 SUB W8, W8, 0x1
	0x02DE62DC CMP W8, 0x1
	0x02DE62E0 B.LT 0x2DE6318
	0x02DE62E4 MOV X8, X31
	0x02DE62E8 LDR X9, [X0 + 0x10]
	0x02DE62EC CBZ X9, 0x2DE6324
	0x02DE62F0 LDR W10, [X9 + 0x18]
	0x02DE62F4 CMP X8, X10
	0x02DE62F8 B.CS 0x2DE6328
	0x02DE62FC ADD X9, X9, X8, 0x3, LSL
	0x02DE6300 STR X31, [X9 + 0x20]
	0x02DE6304 LDR W9, [X0]
	0x02DE6308 ADD X8, X8, 0x1
	0x02DE630C SUB W9, W9, 0x1
	0x02DE6310 CMP X8, W9, SXTW
	0x02DE6314 B.LT 0x2DE62E8
	0x02DE6318 STR W31, [X0]
	0x02DE631C LDR X30, [X31], #0x10
	0x02DE6320 RET
	0x02DE6324 BL 0x1C16F20
	0x02DE6328 BL 0x1C16F28
	0x02DE632C SUB X31, X31, 0x40
	0x02DE6330 STR X30, [X31 + 0x20]
	0x02DE6334 STP X20, X19, [X31 + 0x30]
	0x02DE6338 STR X31, [X31 + 0x8]
	0x02DE633C LDR W9, [X0]
	0x02DE6340 MOV X19, X8
	0x02DE6344 STR W9, [X31 + 0x8]
	0x02DE6348 LDP X9, X20, [X0 + 0x8]
	0x02DE634C STR X9, [X31 + 0x10]
	0x02DE6350 CBZ X20, 0x2DE6378
	0x02DE6354 LDR X0, [X1 + 0x20]
	0x02DE6358 LDRB W8, [X0 + 0x135]
	0x02DE635C TBNZ X8, 0x0, 0x2DE6364
	0x02DE6360 BL 0x1C5C684
	0x02DE6364 LDR X8, [X0 + 0xC0]
	0x02DE6368 MOV X0, X20
	0x02DE636C LDR X1, [X8 + 0x48]
	0x02DE6370 BL 0x21762E4
	0x02DE6374 B 0x2DE637C
	0x02DE6378 MOV X0, X31
	0x02DE637C LDUR V0, [X31 + 0x8]
	0x02DE6380 STR X0, [X19 + 0x10]
	0x02DE6384 LDR X30, [X31 + 0x20]
	0x02DE6388 STR X0, [X31 + 0x18]
	0x02DE638C STR V0, [X19]
	0x02DE6390 LDP X20, X19, [X31 + 0x30]
	0x02DE6394 ADD X31, X31, 0x40
	0x02DE6398 RET
	0x02DE639C STR X30, [X31 - 0x30]!
	0x02DE63A0 STP X22, X21, [X31 + 0x10]
	0x02DE63A4 STP X20, X19, [X31 + 0x20]
	0x02DE63A8 LDR W8, [X0]
	0x02DE63AC MOV X19, X0
	0x02DE63B0 MOV W21, W1
	0x02DE63B4 MOV X20, X2
	0x02DE63B8 CMP W8, W1
	0x02DE63BC B.LE 0x2DE63FC
	0x02DE63C0 MOV W22, W21
	0x02DE63C4 LDR X0, [X20 + 0x20]
	0x02DE63C8 LDRB W8, [X0 + 0x135]
	0x02DE63CC TBNZ X8, 0x0, 0x2DE63D4
	0x02DE63D0 BL 0x1C5C684
	0x02DE63D4 LDR X8, [X0 + 0xC0]
	0x02DE63D8 MOV X0, X19
	0x02DE63DC MOV W1, W22
	0x02DE63E0 MOV X2, X31
	0x02DE63E4 LDR X3, [X8 + 0x50]
	0x02DE63E8 BL 0x2DE6224
	0x02DE63EC LDR W8, [X19]
	0x02DE63F0 ADD W22, W22, 0x1
	0x02DE63F4 CMP W22, W8
	0x02DE63F8 B.LT 0x2DE63C4
	0x02DE63FC CMP W21, 0x2
	0x02DE6400 STR W21, [X19]
	0x02DE6404 B.LT 0x2DE6420
	0x02DE6408 LDR X8, [X19 + 0x10]!
	0x02DE640C CBZ X8, 0x2DE6430
	0x02DE6410 LDR W8, [X8 + 0x18]
	0x02DE6414 SUB W21, W21, 0x1
	0x02DE6418 CMP W21, W8
	0x02DE641C B.GT 0x2DE6434
	0x02DE6420 LDP X20, X19, [X31 + 0x20]
	0x02DE6424 LDP X22, X21, [X31 + 0x10]
	0x02DE6428 LDR X30, [X31], #0x30
	0x02DE642C RET
	0x02DE6430 SUB W21, W21, 0x1
	0x02DE6434 LDR X0, [X20 + 0x20]
	0x02DE6438 LDRB W8, [X0 + 0x135]
	0x02DE643C TBNZ X8, 0x0, 0x2DE6444
	0x02DE6440 BL 0x1C5C684
	0x02DE6444 LDR X8, [X0 + 0xC0]
	0x02DE6448 MOV X0, X19
	0x02DE644C MOV W1, W21
	0x02DE6450 LDP X20, X19, [X31 + 0x20]
	0x02DE6454 LDR X2, [X8 + 0x60]
	0x02DE6458 LDP X22, X21, [X31 + 0x10]
	0x02DE645C LDR X30, [X31], #0x30
	0x02DE6460 B 0x2115A34
	0x02DE6464 STR X30, [X31 - 0x20]!
	0x02DE6468 STP X20, X19, [X31 + 0x10]
	0x02DE646C MOV X8, X0
	0x02DE6470 LDR X0, [X1 + 0x20]
	0x02DE6474 LDP X20, X19, [X8 + 0x8]
	0x02DE6478 LDRB W9, [X0 + 0x135]
	0x02DE647C TBNZ X9, 0x0, 0x2DE6484
	0x02DE6480 BL 0x1C5C684
	0x02DE6484 LDR X8, [X0 + 0xC0]
	0x02DE6488 MOV X0, X20
	0x02DE648C MOV X1, X19
	0x02DE6490 LDP X20, X19, [X31 + 0x10]
	0x02DE6494 LDR X2, [X8 + 0x70]
	0x02DE6498 LDR X30, [X31], #0x20
	0x02DE649C B 0x217A8B8
	0x02DE64A0 STR X30, [X31 - 0x30]!
	0x02DE64A4 STP X22, X21, [X31 + 0x10]
	0x02DE64A8 STP X20, X19, [X31 + 0x20]
	0x02DE64AC LDR X8, [X2 + 0x20]
	0x02DE64B0 MOV X19, X1
	0x02DE64B4 MOV X20, X0
	0x02DE64B8 LDRB W9, [X8 + 0x135]
	0x02DE64BC TBNZ X9, 0x0, 0x2DE64CC
	0x02DE64C0 MOV X0, X8
	0x02DE64C4 BL 0x1C5C684
	0x02DE64C8 MOV X8, X0
	0x02DE64CC LDR X8, [X8 + 0xC0]
	0x02DE64D0 LDR X0, [X8 + 0x80]
	0x02DE64D4 BL 0x2DE7330
	0x02DE64D8 LDR W8, [X20]
	0x02DE64DC CMP W8, 0x1
	0x02DE64E0 B.LT 0x2DE6568
	0x02DE64E4 MOV X21, X0
	0x02DE64E8 CBZ X0, 0x2DE6580
	0x02DE64EC LDR X8, [X21]
	0x02DE64F0 LDR X1, [X20 + 0x8]
	0x02DE64F4 MOV X0, X21
	0x02DE64F8 MOV X2, X19
	0x02DE64FC LDP X9, X3, [X8 + 0x1B8]
	0x02DE6500 BLR X9
	0x02DE6504 TBZ X0, 0x0, 0x2DE6510
	0x02DE6508 MOV W22, W31
	0x02DE650C B 0x2DE656C
	0x02DE6510 LDR X8, [X20 + 0x10]
	0x02DE6514 CBZ X8, 0x2DE6568
	0x02DE6518 MOV X22, X31
	0x02DE651C LDR W8, [X20]
	0x02DE6520 SUB W8, W8, 0x1
	0x02DE6524 CMP X22, W8, SXTW
	0x02DE6528 B.GE 0x2DE6568
	0x02DE652C LDR X8, [X20 + 0x10]
	0x02DE6530 CBZ X8, 0x2DE6580
	0x02DE6534 LDR W9, [X8 + 0x18]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x15F6000
	009 Move W8, [X22+2490]
	010 Move X20, X2
	011 Move X19, X1
	012 Move X21, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x130E000
	018 Move X0, [X0+3584]
	019 Call 0x1C17CF4
	020 Move X0, 0x130E000
	021 Move X0, [X0+3608]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+2490], W8
	025 Compare X19, 0
	026 JumpIfEqual {180}
	027 Move X0, [X20+32]
	028 Move W8, [X0+309]
	029 Move TEMP, X8
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {34}
	033 Call 0x1C5D684
	034 Move X8, [X0+192]
	035 Move X1, [X8+24]
	036 Move W8, [X1+309]
	037 Move TEMP, X8
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfEqual {44}
	041 Move X0, X1
	042 Call 0x1C5D684
	043 Move X1, X0
	044 Move X8, [X19]
	045 NotImplemented "Instruction LDRH not yet implemented."
	046 Compare X9, 0
	047 JumpIfEqual {54}
	048 Move X10, [X8+176]
	049 Add X10, X10, 8
	050 NotImplemented "Instruction LDUR not yet implemented."
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Subtract X9, X9, 1
	053 Add X10, X10, 16
	054 Move X0, X19
	055 Move W2, W31
	056 Call 0x1C5D788
	057 NotImplemented "Instruction LDRSW not yet implemented."
	058 Add X8, X8, X9
	059 Add X0, X8, 312
	060 Move X8, [X0]
	061 Move X1, [X0+8]
	062 Move X23, 0x130E000
	063 Move X23, [X23+3584]
	064 Move X0, X19
	065 NotImplemented "Instruction BLR not yet implemented."
	066 Move X19, X0
	067 Compare X0, 0
	068 JumpIfEqual {181}
	069 Move X24, 0x130E000
	070 Move X24, [X24+3608]
	071 Move X8, [X19]
	072 Move X1, [X24]
	073 NotImplemented "Instruction LDRH not yet implemented."
	074 Compare X9, 0
	075 JumpIfEqual {82}
	076 Move X10, [X8+176]
	077 Add X10, X10, 8
	078 NotImplemented "Instruction LDUR not yet implemented."
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Subtract X9, X9, 1
	081 Add X10, X10, 16
	082 Move X0, X19
	083 Move W2, W31
	084 Call 0x1C5D788
	085 NotImplemented "Instruction LDRSW not yet implemented."
	086 Add X8, X8, X9
	087 Add X0, X8, 312
	088 Move X8, [X0]
	089 Move X1, [X0+8]
	090 Move X0, X19
	091 NotImplemented "Instruction BLR not yet implemented."
	092 Move TEMP, X0
	093 And TEMP, TEMP, 1
	094 Compare TEMP, 1
	095 JumpIfNotEqual {146}
	096 Move X0, [X20+32]
	097 Move W8, [X0+309]
	098 Move TEMP, X8
	099 And TEMP, TEMP, 1
	100 Compare TEMP, 1
	101 JumpIfEqual {103}
	102 Call 0x1C5D684
	103 Move X8, [X0+192]
	104 Move X1, [X8+56]
	105 Move W8, [X1+309]
	106 Move TEMP, X8
	107 And TEMP, TEMP, 1
	108 Compare TEMP, 1
	109 JumpIfEqual {113}
	110 Move X0, X1
	111 Call 0x1C5D684
	112 Move X1, X0
	113 Move X8, [X19]
	114 NotImplemented "Instruction LDRH not yet implemented."
	115 Compare X9, 0
	116 JumpIfEqual {123}
	117 Move X10, [X8+176]
	118 Add X10, X10, 8
	119 NotImplemented "Instruction LDUR not yet implemented."
	120 NotImplemented "Instruction CMP not yet implemented."
	121 Subtract X9, X9, 1
	122 Add X10, X10, 16
	123 Move X0, X19
	124 Move W2, W31
	125 Call 0x1C5D788
	126 NotImplemented "Instruction LDRSW not yet implemented."
	127 Add X8, X8, X9
	128 Add X0, X8, 312
	129 Move X8, [X0]
	130 Move X1, [X0+8]
	131 Move X0, X19
	132 NotImplemented "Instruction BLR not yet implemented."
	133 Move X22, X0
	134 Move X0, [X20+32]
	135 Move W8, [X0+309]
	136 Move TEMP, X8
	137 And TEMP, TEMP, 1
	138 Compare TEMP, 1
	139 JumpIfEqual {141}
	140 Call 0x1C5D684
	141 Move X8, [X0+192]
	142 Move X2, [X8+176]
	143 Move X0, X21
	144 Move X1, X22
	145 Call 0x2DE5FEC, X0, X1
	146 Move X20, X31
	147 Compare X19, 0
	148 JumpIfEqual {170}
	149 Move X8, [X19]
	150 Move X1, [X23]
	151 NotImplemented "Instruction LDRH not yet implemented."
	152 Compare X9, 0
	153 JumpIfEqual {160}
	154 Move X10, [X8+176]
	155 Add X10, X10, 8
	156 NotImplemented "Instruction LDUR not yet implemented."
	157 NotImplemented "Instruction CMP not yet implemented."
	158 Subtract X9, X9, 1
	159 Add X10, X10, 16
	160 Move X0, X19
	161 Move W2, W31
	162 Call 0x1C5D788
	163 NotImplemented "Instruction LDRSW not yet implemented."
	164 Add X8, X8, X9
	165 Add X0, X8, 312
	166 Move X8, [X0]
	167 Move X1, [X0+8]
	168 Move X0, X19
	169 NotImplemented "Instruction BLR not yet implemented."
	170 Compare X20, 0
	171 JumpIfNotEqual {182}
	172 Move X20, [X31+48]
	173 Move X19, [X31+56]
	174 Move X22, [X31+32]
	175 Move X21, [X31+40]
	176 Move X24, [X31+16]
	177 Move X23, [X31+24]
	178 Move X30, [X31+64]
	179 Return 
	180 Call 0x1C17F20
	181 Call 0x1C17F20
	182 Move X0, X20
	183 Call 0x1C17F18
	184 Move X21, X0
	185 NotImplemented "Instruction CMP not yet implemented."
	186 Move X0, X21
	187 Call 0x3EB2AD0
	188 Move X20, [X0]
	189 Call 0x3EB2AE0
	190 Move X20, X31
	191 Move X21, X0
	192 Compare X19, 0
	193 JumpIfEqual {215}
	194 Move X8, [X19]
	195 Move X1, [X23]
	196 NotImplemented "Instruction LDRH not yet implemented."
	197 Compare X9, 0
	198 JumpIfEqual {205}
	199 Move X10, [X8+176]
	200 Add X10, X10, 8
	201 NotImplemented "Instruction LDUR not yet implemented."
	202 NotImplemented "Instruction CMP not yet implemented."
	203 Subtract X9, X9, 1
	204 Add X10, X10, 16
	205 Move X0, X19
	206 Move W2, W31
	207 Call 0x1C5D788
	208 NotImplemented "Instruction LDRSW not yet implemented."
	209 Add X8, X8, X9
	210 Add X0, X8, 312
	211 Move X8, [X0]
	212 Move X1, [X0+8]
	213 Move X0, X19
	214 NotImplemented "Instruction BLR not yet implemented."
	215 Compare X20, 0
	216 JumpIfNotEqual {219}
	217 Move X0, X21
	218 Call 0x1D2D690
	219 Move X0, X20
	220 Call 0x1C17F18
	221 Call 0x1991590

Method: System.Void Remove(TValue value)

Disassembly:
	0x02DE6538 CMP X22, X9
	0x02DE653C B.CS 0x2DE6584
	0x02DE6540 LDR X9, [X21]
	0x02DE6544 ADD X8, X8, X22, 0x3, LSL
	0x02DE6548 LDR X1, [X8 + 0x20]
	0x02DE654C MOV X0, X21
	0x02DE6550 LDP X8, X3, [X9 + 0x1B8]
	0x02DE6554 MOV X2, X19
	0x02DE6558 BLR X8
	0x02DE655C ADD X22, X22, 0x1
	0x02DE6560 TBZ X0, 0x0, 0x2DE651C
	0x02DE6564 B 0x2DE656C
	0x02DE6568 MOVN W22, 0x0
	0x02DE656C MOV W0, W22
	0x02DE6570 LDP X20, X19, [X31 + 0x20]
	0x02DE6574 LDP X22, X21, [X31 + 0x10]
	0x02DE6578 LDR X30, [X31], #0x30
	0x02DE657C RET
	0x02DE6580 BL 0x1C16F20
	0x02DE6584 BL 0x1C16F28
	0x02DE6588 STR X30, [X31 - 0x30]!
	0x02DE658C STP X22, X21, [X31 + 0x10]
	0x02DE6590 STP X20, X19, [X31 + 0x20]
	0x02DE6594 LDR W22, [X0]
	0x02DE6598 MOV X19, X0
	0x02DE659C MOV X20, X1
	0x02DE65A0 CBZ W22, 0x2DE6600
	0x02DE65A4 MOV X21, X19
	0x02DE65A8 LDR X9, [X21 + 0x10]!
	0x02DE65AC LDR X0, [X2 + 0x20]
	0x02DE65B0 ADD X8, X0, 0x135
	0x02DE65B4 LDRH W8, [X8]
	0x02DE65B8 CBZ X9, 0x2DE6608
	0x02DE65BC TBNZ X8, 0x0, 0x2DE65C4
	0x02DE65C0 BL 0x1C5C684
	0x02DE65C4 LDR X8, [X0 + 0xC0]
	0x02DE65C8 MOV X0, X21
	0x02DE65CC MOV W1, W22
	0x02DE65D0 LDR X2, [X8 + 0x60]
	0x02DE65D4 BL 0x2115A34
	0x02DE65D8 LDR X8, [X21]
	0x02DE65DC CBZ X8, 0x2DE6660
	0x02DE65E0 LDR W9, [X19]
	0x02DE65E4 LDR W10, [X8 + 0x18]
	0x02DE65E8 SUB W9, W9, 0x1
	0x02DE65EC CMP W9, W10
	0x02DE65F0 B.CS 0x2DE6664
	0x02DE65F4 ADD X8, X8, W9, 0x3, SXTW
	0x02DE65F8 ADD X8, X8, 0x20
	0x02DE65FC B 0x2DE6640
	0x02DE6600 ADD X8, X19, 0x8
	0x02DE6604 B 0x2DE6640
	0x02DE6608 TBNZ X8, 0x0, 0x2DE6610
	0x02DE660C BL 0x1C5C684
	0x02DE6610 LDR X8, [X0 + 0xC0]
	0x02DE6614 LDR X0, [X8 + 0x28]
	0x02DE6618 LDRB W8, [X0 + 0x135]
	0x02DE661C TBNZ X8, 0x0, 0x2DE6624
	0x02DE6620 BL 0x1C5C684
	0x02DE6624 MOVZ W1, 0x1
	0x02DE6628 BL 0x1C16D6C
	0x02DE662C STR X0, [X21]
	0x02DE6630 CBZ X0, 0x2DE6660
	0x02DE6634 LDR W8, [X0 + 0x18]
	0x02DE6638 CBZ W8, 0x2DE6664
	0x02DE663C ADD X8, X0, 0x20
	0x02DE6640 STR X20, [X8]
	0x02DE6644 LDR W0, [X19]
	0x02DE6648 LDP X22, X21, [X31 + 0x10]
	0x02DE664C ADD W8, W0, 0x1
	0x02DE6650 STR W8, [X19]
	0x02DE6654 LDP X20, X19, [X31 + 0x20]
	0x02DE6658 LDR X30, [X31], #0x30
	0x02DE665C RET
	0x02DE6660 BL 0x1C16F20
	0x02DE6664 BL 0x1C16F28
	0x02DE6668 STR X30, [X31 - 0x30]!

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move W8, [X0]
	007 NotImplemented "Instruction CMP not yet implemented."
	008 Move X19, X0
	009 Move X0, [X2+32]
	010 Move X20, X2
	011 Move X21, X1
	012 Move W8, [X0+309]
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {18}
	017 Call 0x1C5D684
	018 Move X8, [X0+192]
	019 Move X0, [X8+128]
	020 Call 0x2117F10
	021 Compare X0, 0
	022 JumpIfEqual {103}
	023 Move X8, [X0]
	024 NotImplemented "Instruction LDUR not yet implemented."
	025 Move X2, X21
	026 Move X9, [X8+440]
	027 Move X3, [X8+448]
	028 NotImplemented "Instruction BLR not yet implemented."
	029 Move TEMP, X0
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfNotEqual {43}
	033 Move X0, [X20+32]
	034 Move W8, [X0+309]
	035 Move TEMP, X8
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {40}
	039 Call 0x1C5D684
	040 Move X8, [X0+192]
	041 Move X0, X19
	042 Move W1, W31
	043 Move X8, [X19+16]
	044 Compare X8, 0
	045 JumpIfEqual {97}
	046 Move X22, X31
	047 Move W8, [X19]
	048 Subtract W8, W8, 1
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move X0, [X20+32]
	051 Move W8, [X0+309]
	052 Move TEMP, X8
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfEqual {57}
	056 Call 0x1C5D684
	057 Move X8, [X0+192]
	058 Move X0, [X8+128]
	059 Call 0x2117F10
	060 Move X8, [X19+16]
	061 Compare X8, 0
	062 JumpIfEqual {103}
	063 Move W9, [X8+24]
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Compare X0, 0
	066 JumpIfEqual {103}
	067 Move X9, [X0]
	068 Add X8, X8, X22
	069 Move X1, [X8+32]
	070 Move X2, X21
	071 Move X8, [X9+440]
	072 Move X3, [X9+448]
	073 NotImplemented "Instruction BLR not yet implemented."
	074 Add X22, X22, 1
	075 Move TEMP, X0
	076 And TEMP, TEMP, 1
	077 Compare TEMP, 1
	078 JumpIfNotEqual {47}
	079 Move X0, [X20+32]
	080 Move W8, [X0+309]
	081 Move TEMP, X8
	082 And TEMP, TEMP, 1
	083 Compare TEMP, 1
	084 JumpIfEqual {86}
	085 Call 0x1C5D684
	086 Move X8, [X0+192]
	087 Move X0, X19
	088 Move W1, W22
	089 Move X2, [X8+184]
	090 Move X20, [X31+32]
	091 Move X19, [X31+40]
	092 Move X22, [X31+16]
	093 Move X21, [X31+24]
	094 Move X30, [X31+48]
	095 Call 0x2DE6798, X0, X1
	096 Return 
	097 Move X20, [X31+32]
	098 Move X19, [X31+40]
	099 Move X22, [X31+16]
	100 Move X21, [X31+24]
	101 Move X30, [X31+48]
	102 Return 
	103 Call 0x1C17F20
	104 Call 0x1C17F28

Method: System.Void RemoveAtWithCapacity(System.Int32 index)

Disassembly:
	0x02DE666C STP X22, X21, [X31 + 0x10]
	0x02DE6670 STP X20, X19, [X31 + 0x20]
	0x02DE6674 LDR W8, [X0]
	0x02DE6678 MOV X19, X0
	0x02DE667C MOV X21, X1
	0x02DE6680 CBZ W8, 0x2DE66C8
	0x02DE6684 SUB W8, W8, 0x1
	0x02DE6688 STR W8, [X31 + 0xC]
	0x02DE668C LDR X0, [X3 + 0x20]
	0x02DE6690 MOV W20, W2
	0x02DE6694 ADD X22, X19, 0x10
	0x02DE6698 LDRB W8, [X0 + 0x135]
	0x02DE669C TBNZ X8, 0x0, 0x2DE66A4
	0x02DE66A0 BL 0x1C5C684
	0x02DE66A4 LDR X8, [X0 + 0xC0]
	0x02DE66A8 ADD X1, X31, 0xC
	0x02DE66AC MOV X0, X22
	0x02DE66B0 MOV X2, X21
	0x02DE66B4 LDR X4, [X8 + 0xA0]
	0x02DE66B8 MOV W3, W20
	0x02DE66BC BL 0x21743B8
	0x02DE66C0 LDR W0, [X19]
	0x02DE66C4 B 0x2DE66D0
	0x02DE66C8 MOV W0, W31
	0x02DE66CC STR X21, [X19 + 0x8]
	0x02DE66D0 ADD W8, W0, 0x1
	0x02DE66D4 STR W8, [X19]
	0x02DE66D8 LDP X20, X19, [X31 + 0x20]
	0x02DE66DC LDP X22, X21, [X31 + 0x10]
	0x02DE66E0 LDR X30, [X31], #0x30
	0x02DE66E4 RET
	0x02DE66E8 STR X30, [X31 - 0x30]!
	0x02DE66EC STP X22, X21, [X31 + 0x10]
	0x02DE66F0 STP X20, X19, [X31 + 0x20]
	0x02DE66F4 LDR X8, [X2 + 0x20]
	0x02DE66F8 MOV X22, X2
	0x02DE66FC MOV X19, X1
	0x02DE6700 MOV X20, X0
	0x02DE6704 LDRB W9, [X8 + 0x135]
	0x02DE6708 TBNZ X9, 0x0, 0x2DE6714
	0x02DE670C MOV X0, X8
	0x02DE6710 BL 0x1C5C684
	0x02DE6714 LDR X1, [X20 + 0x10]
	0x02DE6718 CBZ X1, 0x2DE6728
	0x02DE671C LDR W8, [X1 + 0x18]
	0x02DE6720 ADD W9, W8, 0x1
	0x02DE6724 B 0x2DE672C
	0x02DE6728 MOVZ W9, 0x1
	0x02DE672C LDR W8, [X19]
	0x02DE6730 CMP W9, W8
	0x02DE6734 B.GE 0x2DE6778
	0x02DE6738 SUBS W21, W8, 0x1
	0x02DE673C B.LE 0x2DE6778
	0x02DE6740 LDR X0, [X22 + 0x20]
	0x02DE6744 LDRB W8, [X0 + 0x135]
	0x02DE6748 TBNZ X8, 0x0, 0x2DE6750
	0x02DE674C BL 0x1C5C684
	0x02DE6750 LDR X8, [X0 + 0xC0]
	0x02DE6754 LDR X0, [X8 + 0x28]
	0x02DE6758 LDRB W8, [X0 + 0x135]
	0x02DE675C TBNZ X8, 0x0, 0x2DE6764
	0x02DE6760 BL 0x1C5C684
	0x02DE6764 MOV W1, W21
	0x02DE6768 BL 0x1C16D6C
	0x02DE676C STR X0, [X20 + 0x10]
	0x02DE6770 LDR W8, [X19]
	0x02DE6774 MOV X1, X0
	0x02DE6778 SUBS W2, W8, 0x1
	0x02DE677C STR W8, [X20]
	0x02DE6780 B.LT 0x2DE6790
	0x02DE6784 LDR X8, [X19 + 0x8]
	0x02DE6788 STR X8, [X20 + 0x8]
	0x02DE678C B.NE 0x2DE67A0
	0x02DE6790 LDP X20, X19, [X31 + 0x20]
	0x02DE6794 LDP X22, X21, [X31 + 0x10]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move [X31+8], X31
	007 Move TEMP, X1
	008 And TEMP, TEMP, -2147483648
	009 Compare TEMP, -2147483648
	010 JumpIfEqual {69}
	011 Move W8, [X0]
	012 Move X19, X0
	013 NotImplemented "Instruction CMP not yet implemented."
	014 Compare W1, 0
	015 JumpIfEqual {33}
	016 Subtract W8, W8, 1
	017 Move [X31+8], W8
	018 Move X0, [X2+32]
	019 Move X21, [X19+16]
	020 Subtract W20, W1, 1
	021 Move W8, [X0+309]
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {27}
	026 Call 0x1C5D684
	027 Move X8, [X0+192]
	028 Add X1, X31, 8
	029 Move X0, X21
	030 Move W2, W20
	031 Move X3, [X8+192]
	032 Call 0x2178C40, X0, X1, X2
	033 Subtract W9, W8, 1
	034 Move [X19+4], X31
	035 Move X20, [X19+16]
	036 Compare X20, 0
	037 JumpIfEqual {86}
	038 Move W10, [X20+24]
	039 Compare W10, 0
	040 JumpIfEqual {85}
	041 Move X10, [X20+32]
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move [X19+4], X10
	044 Move W8, [X20+24]
	045 Compare W8, 0
	046 JumpIfEqual {85}
	047 Move [X20+32], X31
	048 Move W8, [X19]
	049 Move X30, [X31+16]
	050 Move X21, [X31+24]
	051 Subtract W8, W8, 1
	052 Move [X19], W8
	053 Move X20, [X31+32]
	054 Move X19, [X31+40]
	055 Add X31, X31, 48
	056 Return 
	057 Move [X31+12], W9
	058 Move X0, [X2+32]
	059 Move W8, [X0+309]
	060 Move TEMP, X8
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfEqual {65}
	064 Call 0x1C5D684
	065 Move X8, [X0+192]
	066 Add X1, X31, 12
	067 Move X0, X20
	068 Move W2, W31
	069 Move X0, 0x1316000
	070 Move X0, [X0+1888]
	071 Move X19, X2
	072 Call 0x1C17D08
	073 Call 0x1C17F10
	074 Move X20, X0
	075 Move X0, 0x1319000
	076 Move X0, [X0+304]
	077 Call 0x1C17D08
	078 Move X1, X0
	079 Move X0, X20
	080 Move X2, X31
	081 Call ArgumentOutOfRangeException..ctor, X0, X1
	082 Move X0, X20
	083 Move X1, X19
	084 Call 0x1C17DEC
	085 Call 0x1C17F28
	086 Call 0x1C17F20

Method: System.Void RemoveAt(System.Int32 index)

Disassembly:
	0x02DE6798 LDR X30, [X31], #0x30
	0x02DE679C RET
	0x02DE67A0 LDR X0, [X19 + 0x10]
	0x02DE67A4 LDP X20, X19, [X31 + 0x20]
	0x02DE67A8 LDP X22, X21, [X31 + 0x10]
	0x02DE67AC MOV X3, X31
	0x02DE67B0 LDR X30, [X31], #0x30
	0x02DE67B4 B 0x33A0C7C
	0x02DE67B8 STR X30, [X31 - 0x40]!
	0x02DE67BC STP X24, X23, [X31 + 0x10]
	0x02DE67C0 STP X22, X21, [X31 + 0x20]
	0x02DE67C4 STP X20, X19, [X31 + 0x30]
	0x02DE67C8 ADRP X22, 0x15F5000
	0x02DE67CC LDRB W8, [X22 + 0x9BC]
	0x02DE67D0 MOV X20, X2
	0x02DE67D4 MOV X19, X1
	0x02DE67D8 MOV X21, X0
	0x02DE67DC TBNZ X8, 0x0, 0x2DE6800
	0x02DE67E0 ADRP X0, 0x130D000
	0x02DE67E4 LDR X0, [X0 + 0xE00]
	0x02DE67E8 BL 0x1C16CF4
	0x02DE67EC ADRP X0, 0x130D000
	0x02DE67F0 LDR X0, [X0 + 0xE18]
	0x02DE67F4 BL 0x1C16CF4
	0x02DE67F8 MOVZ W8, 0x1
	0x02DE67FC STRB W8, [X22 + 0x9BC]
	0x02DE6800 CBZ X19, 0x2DE6A1C
	0x02DE6804 LDR X0, [X20 + 0x20]
	0x02DE6808 LDRB W8, [X0 + 0x135]
	0x02DE680C TBNZ X8, 0x0, 0x2DE6814
	0x02DE6810 BL 0x1C5C684
	0x02DE6814 LDR X8, [X0 + 0xC0]
	0x02DE6818 LDR X1, [X8 + 0x18]
	0x02DE681C LDRB W8, [X1 + 0x135]
	0x02DE6820 TBNZ X8, 0x0, 0x2DE6830
	0x02DE6824 MOV X0, X1
	0x02DE6828 BL 0x1C5C684
	0x02DE682C MOV X1, X0
	0x02DE6830 LDR X8, [X19]
	0x02DE6834 LDRH W9, [X8 + 0x12E]
	0x02DE6838 CBZ X9, 0x2DE685C
	0x02DE683C LDR X10, [X8 + 0xB0]
	0x02DE6840 ADD X10, X10, 0x8
	0x02DE6844 LDUR X11, [X10 - 0x8]
	0x02DE6848 CMP X11, X1
	0x02DE684C B.EQ 0x2DE686C
	0x02DE6850 SUBS X9, X9, 0x1
	0x02DE6854 ADD X10, X10, 0x10
	0x02DE6858 B.NE 0x2DE6844
	0x02DE685C MOV X0, X19
	0x02DE6860 MOV W2, W31
	0x02DE6864 BL 0x1C5C788
	0x02DE6868 B 0x2DE6878
	0x02DE686C LDRSW X9, [X10]
	0x02DE6870 ADD X8, X8, X9, 0x4, LSL
	0x02DE6874 ADD X0, X8, 0x138
	0x02DE6878 LDP X8, X1, [X0]
	0x02DE687C ADRP X23, 0x130D000
	0x02DE6880 LDR X23, [X23 + 0xE00]
	0x02DE6884 MOV X0, X19
	0x02DE6888 BLR X8
	0x02DE688C MOV X19, X0
	0x02DE6890 CBZ X0, 0x2DE6A20
	0x02DE6894 ADRP X24, 0x130D000
	0x02DE6898 LDR X24, [X24 + 0xE18]
	0x02DE689C LDR X8, [X19]
	0x02DE68A0 LDR X1, [X24]
	0x02DE68A4 LDRH W9, [X8 + 0x12E]
	0x02DE68A8 CBZ X9, 0x2DE68CC
	0x02DE68AC LDR X10, [X8 + 0xB0]
	0x02DE68B0 ADD X10, X10, 0x8
	0x02DE68B4 LDUR X11, [X10 - 0x8]
	0x02DE68B8 CMP X11, X1
	0x02DE68BC B.EQ 0x2DE68DC
	0x02DE68C0 SUBS X9, X9, 0x1
	0x02DE68C4 ADD X10, X10, 0x10
	0x02DE68C8 B.NE 0x2DE68B4
	0x02DE68CC MOV X0, X19
	0x02DE68D0 MOV W2, W31
	0x02DE68D4 BL 0x1C5C788
	0x02DE68D8 B 0x2DE68E8
	0x02DE68DC LDRSW X9, [X10]
	0x02DE68E0 ADD X8, X8, X9, 0x4, LSL
	0x02DE68E4 ADD X0, X8, 0x138
	0x02DE68E8 LDP X8, X1, [X0]
	0x02DE68EC MOV X0, X19
	0x02DE68F0 BLR X8
	0x02DE68F4 TBZ X0, 0x0, 0x2DE69A4
	0x02DE68F8 LDR X0, [X20 + 0x20]
	0x02DE68FC LDRB W8, [X0 + 0x135]
	0x02DE6900 TBNZ X8, 0x0, 0x2DE6908
	0x02DE6904 BL 0x1C5C684
	0x02DE6908 LDR X8, [X0 + 0xC0]
	0x02DE690C LDR X1, [X8 + 0x38]
	0x02DE6910 LDRB W8, [X1 + 0x135]
	0x02DE6914 TBNZ X8, 0x0, 0x2DE6924
	0x02DE6918 MOV X0, X1
	0x02DE691C BL 0x1C5C684
	0x02DE6920 MOV X1, X0
	0x02DE6924 LDR X8, [X19]
	0x02DE6928 LDRH W9, [X8 + 0x12E]
	0x02DE692C CBZ X9, 0x2DE6950
	0x02DE6930 LDR X10, [X8 + 0xB0]
	0x02DE6934 ADD X10, X10, 0x8
	0x02DE6938 LDUR X11, [X10 - 0x8]
	0x02DE693C CMP X11, X1
	0x02DE6940 B.EQ 0x2DE6960
	0x02DE6944 SUBS X9, X9, 0x1
	0x02DE6948 ADD X10, X10, 0x10
	0x02DE694C B.NE 0x2DE6938
	0x02DE6950 MOV X0, X19
	0x02DE6954 MOV W2, W31
	0x02DE6958 BL 0x1C5C788
	0x02DE695C B 0x2DE696C
	0x02DE6960 LDRSW X9, [X10]
	0x02DE6964 ADD X8, X8, X9, 0x4, LSL
	0x02DE6968 ADD X0, X8, 0x138
	0x02DE696C LDP X8, X1, [X0]
	0x02DE6970 MOV X0, X19

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, X2
	007 Move TEMP, X1
	008 And TEMP, TEMP, -2147483648
	009 Compare TEMP, -2147483648
	010 JumpIfEqual {116}
	011 Move W22, [X0]
	012 Move W20, W1
	013 Move X19, X0
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Compare W20, 0
	016 JumpIfEqual {20}
	017 Subtract W8, W22, 1
	018 NotImplemented "Instruction CMP not yet implemented."
	019 Move [X19+16], X31
	020 Move X20, X19
	021 Add X20, X20, 16
	022 Move X0, [X20]
	023 Compare X0, 0
	024 JumpIfEqual {66}
	025 Move W8, [X0+24]
	026 Compare W8, 0
	027 JumpIfEqual {131}
	028 Move X8, [X0+32]
	029 Move [X19+4], X8
	030 Move W8, [X0+24]
	031 Subtract W4, W8, 1
	032 Move [X20], X31
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X0, [X21+32]
	035 Add X21, X19, 16
	036 Subtract W20, W22, 2
	037 Move W8, [X0+309]
	038 Move TEMP, X8
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfEqual {43}
	042 Call 0x1C5D684
	043 Move X8, [X0+192]
	044 Move X0, X21
	045 Move W1, W20
	046 Move X0, [X21+32]
	047 Move W8, [X0+309]
	048 Move TEMP, X8
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfEqual {53}
	052 Call 0x1C5D684
	053 Move X8, [X0+192]
	054 Move X0, [X8+40]
	055 Move W8, [X0+309]
	056 Move TEMP, X8
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfEqual {61}
	060 Call 0x1C5D684
	061 Subtract W1, W22, 2
	062 Call 0x1C17D6C
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move X21, X0
	065 Move W22, W31
	066 Move [X19+4], X31
	067 Move W1, 1
	068 Move X2, X0
	069 Move W3, W31
	070 Move X5, X31
	071 Call Array.Copy, X0, X1, X2, X3, X4
	072 Move X8, [X20]
	073 Compare X8, 0
	074 JumpIfEqual {132}
	075 Move X0, [X21+32]
	076 Move W8, [X8+24]
	077 Move W9, [X0+309]
	078 Subtract W21, W8, 1
	079 Move TEMP, X9
	080 And TEMP, TEMP, 1
	081 Compare TEMP, 1
	082 JumpIfEqual {84}
	083 Call 0x1C5D684
	084 Move X8, [X0+192]
	085 Move X0, X20
	086 Move W1, W21
	087 Move X2, [X8+96]
	088 Call Array.Resize, X0, X1
	089 Move X0, [X19+16]
	090 Subtract W22, W20, 1
	091 Move W1, W31
	092 Move X2, X21
	093 Move W3, W31
	094 Move W4, W22
	095 Move X5, X31
	096 Call Array.Copy, X0, X1, X2, X3, X4
	097 Move W8, [X19]
	098 Move X0, [X19+16]
	099 NotImplemented "Instruction ORN not yet implemented."
	100 Move W1, W20
	101 Add W4, W8, W9
	102 Move X2, X21
	103 Move W3, W22
	104 Move X5, X31
	105 Call Array.Copy, X0, X1, X2, X3, X4
	106 Move [X19+16], X21
	107 Move W8, [X19]
	108 Move X22, [X31+16]
	109 Move X21, [X31+24]
	110 Subtract W8, W8, 1
	111 Move [X19], W8
	112 Move X20, [X31+32]
	113 Move X19, [X31+40]
	114 Move X30, [X31+48]
	115 Return 
	116 Move X0, 0x1316000
	117 Move X0, [X0+1888]
	118 Call 0x1C17D08
	119 Call 0x1C17F10
	120 Move X19, X0
	121 Move X0, 0x1319000
	122 Move X0, [X0+304]
	123 Call 0x1C17D08
	124 Move X1, X0
	125 Move X0, X19
	126 Move X2, X31
	127 Call ArgumentOutOfRangeException..ctor, X0, X1
	128 Move X0, X19
	129 Move X1, X21
	130 Call 0x1C17DEC
	131 Call 0x1C17F28
	132 Call 0x1C17F20

Method: System.Void RemoveAtByMovingTailWithCapacity(System.Int32 index)

Disassembly:
	0x02DE6974 BLR X8
	0x02DE6978 MOV X22, X0
	0x02DE697C LDR X0, [X20 + 0x20]
	0x02DE6980 LDRB W8, [X0 + 0x135]
	0x02DE6984 TBNZ X8, 0x0, 0x2DE698C
	0x02DE6988 BL 0x1C5C684
	0x02DE698C LDR X8, [X0 + 0xC0]
	0x02DE6990 LDR X2, [X8 + 0xB0]
	0x02DE6994 MOV X0, X21
	0x02DE6998 MOV X1, X22
	0x02DE699C BL 0x2DE6588
	0x02DE69A0 B 0x2DE689C
	0x02DE69A4 MOV X20, X31
	0x02DE69A8 CBZ X19, 0x2DE6A04
	0x02DE69AC LDR X8, [X19]
	0x02DE69B0 LDR X1, [X23]
	0x02DE69B4 LDRH W9, [X8 + 0x12E]
	0x02DE69B8 CBZ X9, 0x2DE69DC
	0x02DE69BC LDR X10, [X8 + 0xB0]
	0x02DE69C0 ADD X10, X10, 0x8
	0x02DE69C4 LDUR X11, [X10 - 0x8]
	0x02DE69C8 CMP X11, X1
	0x02DE69CC B.EQ 0x2DE69EC
	0x02DE69D0 SUBS X9, X9, 0x1
	0x02DE69D4 ADD X10, X10, 0x10
	0x02DE69D8 B.NE 0x2DE69C4
	0x02DE69DC MOV X0, X19
	0x02DE69E0 MOV W2, W31
	0x02DE69E4 BL 0x1C5C788
	0x02DE69E8 B 0x2DE69F8
	0x02DE69EC LDRSW X9, [X10]
	0x02DE69F0 ADD X8, X8, X9, 0x4, LSL
	0x02DE69F4 ADD X0, X8, 0x138
	0x02DE69F8 LDP X8, X1, [X0]
	0x02DE69FC MOV X0, X19
	0x02DE6A00 BLR X8
	0x02DE6A04 CBNZ X20, 0x2DE6A24
	0x02DE6A08 LDP X20, X19, [X31 + 0x30]
	0x02DE6A0C LDP X22, X21, [X31 + 0x20]
	0x02DE6A10 LDP X24, X23, [X31 + 0x10]
	0x02DE6A14 LDR X30, [X31], #0x40
	0x02DE6A18 RET
	0x02DE6A1C BL 0x1C16F20
	0x02DE6A20 BL 0x1C16F20
	0x02DE6A24 MOV X0, X20
	0x02DE6A28 BL 0x1C16F18
	0x02DE6A2C B 0x2DE6A38
	0x02DE6A30 B 0x2DE6A38
	0x02DE6A34 B 0x2DE6A38
	0x02DE6A38 MOV X21, X0
	0x02DE6A3C CMP W1, 0x1
	0x02DE6A40 B.NE 0x2DE6A58
	0x02DE6A44 MOV X0, X21
	0x02DE6A48 BL 0x3EB1AD0
	0x02DE6A4C LDR X20, [X0]
	0x02DE6A50 BL 0x3EB1AE0
	0x02DE6A54 B 0x2DE69A8
	0x02DE6A58 MOV X20, X31
	0x02DE6A5C B 0x2DE6A64
	0x02DE6A60 MOV X21, X0
	0x02DE6A64 CBZ X19, 0x2DE6AC0
	0x02DE6A68 LDR X8, [X19]
	0x02DE6A6C LDR X1, [X23]
	0x02DE6A70 LDRH W9, [X8 + 0x12E]
	0x02DE6A74 CBZ X9, 0x2DE6A98

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move TEMP, X1
	007 And TEMP, TEMP, -2147483648
	008 Compare TEMP, -2147483648
	009 JumpIfEqual {55}
	010 Move W8, [X0]
	011 Move X19, X0
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Subtract W9, W8, 1
	014 Move [X31+12], W9
	015 Compare W1, 0
	016 JumpIfEqual {32}
	017 Move X0, [X2+32]
	018 Move X21, [X19+16]
	019 Subtract W20, W1, 1
	020 Move W8, [X0+309]
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {26}
	025 Call 0x1C5D684
	026 Move X8, [X0+192]
	027 Add X1, X31, 12
	028 Move X0, X21
	029 Move W2, W20
	030 Move X3, [X8+200]
	031 Call 0x2178428, X0, X1, X2
	032 Subtract W8, W8, 2
	033 Move [X19+4], X31
	034 Move X9, [X19+16]
	035 Compare X9, 0
	036 JumpIfEqual {72}
	037 Move W10, [X9+24]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Add X10, X9, W8
	040 Add X10, X10, 32
	041 Move X11, [X10]
	042 Move [X19+4], X11
	043 Move W9, [X9+24]
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move [X10], X31
	046 Move W8, [X19]
	047 Move X30, [X31+16]
	048 Move X21, [X31+24]
	049 Subtract W8, W8, 1
	050 Move [X19], W8
	051 Move X20, [X31+32]
	052 Move X19, [X31+40]
	053 Add X31, X31, 48
	054 Return 
	055 Move X0, 0x1316000
	056 Move X0, [X0+1888]
	057 Move X19, X2
	058 Call 0x1C17D08
	059 Call 0x1C17F10
	060 Move X20, X0
	061 Move X0, 0x1319000
	062 Move X0, [X0+304]
	063 Call 0x1C17D08
	064 Move X1, X0
	065 Move X0, X20
	066 Move X2, X31
	067 Call ArgumentOutOfRangeException..ctor, X0, X1
	068 Move X0, X20
	069 Move X1, X19
	070 Call 0x1C17DEC
	071 Call 0x1C17F28
	072 Call 0x1C17F20

Method: System.Boolean RemoveByMovingTailWithCapacity(TValue value)

Disassembly:
	0x02DE6A78 LDR X10, [X8 + 0xB0]
	0x02DE6A7C ADD X10, X10, 0x8
	0x02DE6A80 LDUR X11, [X10 - 0x8]
	0x02DE6A84 CMP X11, X1
	0x02DE6A88 B.EQ 0x2DE6AA8
	0x02DE6A8C SUBS X9, X9, 0x1
	0x02DE6A90 ADD X10, X10, 0x10
	0x02DE6A94 B.NE 0x2DE6A80
	0x02DE6A98 MOV X0, X19
	0x02DE6A9C MOV W2, W31
	0x02DE6AA0 BL 0x1C5C788
	0x02DE6AA4 B 0x2DE6AB4
	0x02DE6AA8 LDRSW X9, [X10]
	0x02DE6AAC ADD X8, X8, X9, 0x4, LSL
	0x02DE6AB0 ADD X0, X8, 0x138
	0x02DE6AB4 LDP X8, X1, [X0]
	0x02DE6AB8 MOV X0, X19
	0x02DE6ABC BLR X8
	0x02DE6AC0 CBNZ X20, 0x2DE6ACC
	0x02DE6AC4 MOV X0, X21
	0x02DE6AC8 BL 0x1D2C690
	0x02DE6ACC MOV X0, X20
	0x02DE6AD0 BL 0x1C16F18
	0x02DE6AD4 BL 0x1990590
	0x02DE6AD8 STR X30, [X31 - 0x30]!
	0x02DE6ADC STP X22, X21, [X31 + 0x10]
	0x02DE6AE0 STP X20, X19, [X31 + 0x20]
	0x02DE6AE4 LDR W8, [X0]
	0x02DE6AE8 CMP W8, 0x1
	0x02DE6AEC B.LT 0x2DE6BF4
	0x02DE6AF0 MOV X19, X0
	0x02DE6AF4 LDR X0, [X2 + 0x20]
	0x02DE6AF8 MOV X20, X2

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+32]
	006 Move X20, X2
	007 Move X21, X1
	008 Move X19, X0
	009 Move W9, [X8+309]
	010 Move TEMP, X9
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {17}
	014 Move X0, X8
	015 Call 0x1C5D684
	016 Move X8, X0
	017 Move X8, [X8+192]
	018 Move X0, X19
	019 Move X1, X21
	020 Move X2, [X8+208]
	021 Call 0x2DE5F04, X0, X1
	022 Move W21, W0
	023 Add W31, W0, 1
	024 Move X0, [X20+32]
	025 Move W8, [X0+309]
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {31}
	030 Call 0x1C5D684
	031 Move X8, [X0+192]
	032 Move X0, X19
	033 Move W1, W21
	034 Move X2, [X8+216]
	035 Call 0x2DE6974, X0, X1
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Add W31, W21, 1
	039 NotImplemented "Instruction CSET not yet implemented."
	040 Move X30, [X31+32]
	041 Move X21, [X31+40]
	042 Return X0

Method: System.Boolean Contains(TValue value, System.Collections.Generic.IEqualityComparer`1<TValue> comparer)

Disassembly:
	0x02DE6AFC MOV X21, X1
	0x02DE6B00 LDRB W8, [X0 + 0x135]
	0x02DE6B04 TBNZ X8, 0x0, 0x2DE6B0C
	0x02DE6B08 BL 0x1C5C684
	0x02DE6B0C LDR X8, [X0 + 0xC0]
	0x02DE6B10 LDR X0, [X8 + 0x80]
	0x02DE6B14 BL 0x2DE7330
	0x02DE6B18 CBZ X0, 0x2DE6C04
	0x02DE6B1C LDR X8, [X0]
	0x02DE6B20 LDR X1, [X19 + 0x8]
	0x02DE6B24 MOV X2, X21
	0x02DE6B28 LDP X9, X3, [X8 + 0x1B8]
	0x02DE6B2C BLR X9
	0x02DE6B30 TBZ X0, 0x0, 0x2DE6B54
	0x02DE6B34 LDR X0, [X20 + 0x20]
	0x02DE6B38 LDRB W8, [X0 + 0x135]
	0x02DE6B3C TBNZ X8, 0x0, 0x2DE6B44
	0x02DE6B40 BL 0x1C5C684
	0x02DE6B44 LDR X8, [X0 + 0xC0]
	0x02DE6B48 MOV X0, X19
	0x02DE6B4C MOV W1, W31
	0x02DE6B50 B 0x2DE6BE0
	0x02DE6B54 LDR X8, [X19 + 0x10]
	0x02DE6B58 CBZ X8, 0x2DE6BF4
	0x02DE6B5C MOV X22, X31
	0x02DE6B60 LDR W8, [X19]
	0x02DE6B64 SUB W8, W8, 0x1
	0x02DE6B68 CMP X22, W8, SXTW
	0x02DE6B6C B.GE 0x2DE6BF4
	0x02DE6B70 LDR X0, [X20 + 0x20]
	0x02DE6B74 LDRB W8, [X0 + 0x135]
	0x02DE6B78 TBNZ X8, 0x0, 0x2DE6B80
	0x02DE6B7C BL 0x1C5C684
	0x02DE6B80 LDR X8, [X0 + 0xC0]
	0x02DE6B84 LDR X0, [X8 + 0x80]
	0x02DE6B88 BL 0x2DE7330
	0x02DE6B8C LDR X8, [X19 + 0x10]
	0x02DE6B90 CBZ X8, 0x2DE6C04
	0x02DE6B94 LDR W9, [X8 + 0x18]
	0x02DE6B98 CMP X22, X9
	0x02DE6B9C B.CS 0x2DE6C08
	0x02DE6BA0 CBZ X0, 0x2DE6C04
	0x02DE6BA4 LDR X9, [X0]
	0x02DE6BA8 ADD X8, X8, X22, 0x3, LSL
	0x02DE6BAC LDR X1, [X8 + 0x20]
	0x02DE6BB0 MOV X2, X21
	0x02DE6BB4 LDP X8, X3, [X9 + 0x1B8]
	0x02DE6BB8 BLR X8
	0x02DE6BBC ADD X22, X22, 0x1
	0x02DE6BC0 TBZ X0, 0x0, 0x2DE6B60
	0x02DE6BC4 LDR X0, [X20 + 0x20]
	0x02DE6BC8 LDRB W8, [X0 + 0x135]
	0x02DE6BCC TBNZ X8, 0x0, 0x2DE6BD4
	0x02DE6BD0 BL 0x1C5C684
	0x02DE6BD4 LDR X8, [X0 + 0xC0]
	0x02DE6BD8 MOV X0, X19
	0x02DE6BDC MOV W1, W22
	0x02DE6BE0 LDR X2, [X8 + 0xB8]
	0x02DE6BE4 LDP X20, X19, [X31 + 0x20]
	0x02DE6BE8 LDP X22, X21, [X31 + 0x10]
	0x02DE6BEC LDR X30, [X31], #0x30
	0x02DE6BF0 B 0x2DE6D38
	0x02DE6BF4 LDP X20, X19, [X31 + 0x20]
	0x02DE6BF8 LDP X22, X21, [X31 + 0x10]
	0x02DE6BFC LDR X30, [X31], #0x30
	0x02DE6C00 RET
	0x02DE6C04 BL 0x1C16F20
	0x02DE6C08 BL 0x1C16F28
	0x02DE6C0C SUB X31, X31, 0x30
	0x02DE6C10 STP X30, X21, [X31 + 0x10]
	0x02DE6C14 STP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move W8, [X0]
	009 NotImplemented "Instruction CMP not yet implemented."
	010 Move X19, X3
	011 Move X20, X2
	012 Move X21, X0
	013 Move X22, X1
	014 Move W23, W31
	015 Move X0, [X19+32]
	016 Move W8, [X0+309]
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {22}
	021 Call 0x1C5D684
	022 Move X8, [X0+192]
	023 Move X0, X21
	024 Move W1, W23
	025 Move X2, [X8+120]
	026 Call 0x2DE5BE4, X0, X1
	027 Compare X20, 0
	028 JumpIfEqual {86}
	029 Move X24, X0
	030 Move X0, [X19+32]
	031 Move W8, [X0+309]
	032 Move TEMP, X8
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfEqual {37}
	036 Call 0x1C5D684
	037 Move X8, [X0+192]
	038 Move X1, [X8+224]
	039 Move W8, [X1+309]
	040 Move TEMP, X8
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfEqual {47}
	044 Move X0, X1
	045 Call 0x1C5D684
	046 Move X1, X0
	047 Move X8, [X20]
	048 NotImplemented "Instruction LDRH not yet implemented."
	049 Compare X9, 0
	050 JumpIfEqual {57}
	051 Move X10, [X8+176]
	052 Add X10, X10, 8
	053 NotImplemented "Instruction LDUR not yet implemented."
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Subtract X9, X9, 1
	056 Add X10, X10, 16
	057 Move X0, X20
	058 Move W2, W31
	059 Call 0x1C5D788
	060 NotImplemented "Instruction LDRSW not yet implemented."
	061 Add X8, X8, X9
	062 Add X0, X8, 312
	063 Move X8, [X0]
	064 Move X3, [X0+8]
	065 Move X0, X20
	066 Move X1, X24
	067 Move X2, X22
	068 NotImplemented "Instruction BLR not yet implemented."
	069 Move TEMP, X0
	070 And TEMP, TEMP, 1
	071 Compare TEMP, 1
	072 JumpIfEqual {77}
	073 Move W8, [X21]
	074 Add W23, W23, 1
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Move W0, W31
	077 Move X20, [X31+48]
	078 Move X19, [X31+56]
	079 Move X22, [X31+32]
	080 Move X21, [X31+40]
	081 Move X24, [X31+16]
	082 Move X23, [X31+24]
	083 And W0, W0, 1
	084 Move X30, [X31+64]
	085 Return X0
	086 Call 0x1C17F20

Method: System.Void Merge(UnityEngine.InputSystem.Utilities.InlinedArray`1<TValue> other)

Disassembly:
	0x02DE6C18 STR X31, [X31 + 0x8]
	0x02DE6C1C TBNZ X1, 0x1F, 0x2DE6CF0
	0x02DE6C20 LDR W8, [X0]
	0x02DE6C24 MOV X19, X0
	0x02DE6C28 CMP W8, W1
	0x02DE6C2C B.LE 0x2DE6CF0
	0x02DE6C30 CBZ W1, 0x2DE6C70
	0x02DE6C34 SUB W8, W8, 0x1
	0x02DE6C38 STR W8, [X31 + 0x8]
	0x02DE6C3C LDR X0, [X2 + 0x20]
	0x02DE6C40 LDR X21, [X19 + 0x10]
	0x02DE6C44 SUB W20, W1, 0x1
	0x02DE6C48 LDRB W8, [X0 + 0x135]
	0x02DE6C4C TBNZ X8, 0x0, 0x2DE6C54
	0x02DE6C50 BL 0x1C5C684
	0x02DE6C54 LDR X8, [X0 + 0xC0]
	0x02DE6C58 ADD X1, X31, 0x8
	0x02DE6C5C MOV X0, X21
	0x02DE6C60 MOV W2, W20
	0x02DE6C64 LDR X3, [X8 + 0xC0]
	0x02DE6C68 BL 0x2177CC0
	0x02DE6C6C B 0x2DE6CAC
	0x02DE6C70 SUBS W9, W8, 0x1
	0x02DE6C74 B.NE 0x2DE6C80
	0x02DE6C78 STR X31, [X19 + 0x8]
	0x02DE6C7C B 0x2DE6CAC
	0x02DE6C80 LDR X20, [X19 + 0x10]
	0x02DE6C84 CBZ X20, 0x2DE6D34
	0x02DE6C88 LDR W10, [X20 + 0x18]
	0x02DE6C8C CBZ W10, 0x2DE6D30
	0x02DE6C90 LDR X10, [X20 + 0x20]
	0x02DE6C94 CMP W8, 0x2
	0x02DE6C98 STR X10, [X19 + 0x8]
	0x02DE6C9C B.NE 0x2DE6CC8
	0x02DE6CA0 LDR W8, [X20 + 0x18]
	0x02DE6CA4 CBZ W8, 0x2DE6D30
	0x02DE6CA8 STR X31, [X20 + 0x20]
	0x02DE6CAC LDR W8, [X19]
	0x02DE6CB0 LDP X30, X21, [X31 + 0x10]
	0x02DE6CB4 SUB W8, W8, 0x1
	0x02DE6CB8 STR W8, [X19]
	0x02DE6CBC LDP X20, X19, [X31 + 0x20]
	0x02DE6CC0 ADD X31, X31, 0x30
	0x02DE6CC4 RET
	0x02DE6CC8 STR W9, [X31 + 0xC]
	0x02DE6CCC LDR X0, [X2 + 0x20]
	0x02DE6CD0 LDRB W8, [X0 + 0x135]
	0x02DE6CD4 TBNZ X8, 0x0, 0x2DE6CDC
	0x02DE6CD8 BL 0x1C5C684
	0x02DE6CDC LDR X8, [X0 + 0xC0]
	0x02DE6CE0 ADD X1, X31, 0xC
	0x02DE6CE4 MOV X0, X20
	0x02DE6CE8 MOV W2, W31
	0x02DE6CEC B 0x2DE6C64
	0x02DE6CF0 ADRP X0, 0x1315000
	0x02DE6CF4 LDR X0, [X0 + 0x760]
	0x02DE6CF8 MOV X19, X2
	0x02DE6CFC BL 0x1C16D08
	0x02DE6D00 BL 0x1C16F10
	0x02DE6D04 MOV X20, X0
	0x02DE6D08 ADRP X0, 0x1318000
	0x02DE6D0C LDR X0, [X0 + 0x130]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X8, [X2+32]
	009 Move X19, X2
	010 Move X20, X1
	011 Move X21, X0
	012 Move W9, [X8+309]
	013 Move TEMP, X9
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {20}
	017 Move X0, X8
	018 Call 0x1C5D684
	019 Move X8, X0
	020 Move X8, [X8+192]
	021 Move X0, [X8+128]
	022 Call 0x2117F10
	023 Move W8, [X20]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X22, X0
	026 Move W23, W31
	027 Move X0, [X19+32]
	028 Move W8, [X0+309]
	029 Move TEMP, X8
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {34}
	033 Call 0x1C5D684
	034 Move X8, [X0+192]
	035 Move X0, X20
	036 Move W1, W23
	037 Move X2, [X8+120]
	038 Call 0x2DE5BE4, X0, X1
	039 Move X8, [X19+32]
	040 Move X24, X0
	041 Move W9, [X8+309]
	042 Move TEMP, X9
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfEqual {49}
	046 Move X0, X8
	047 Call 0x1C5D684
	048 Move X8, X0
	049 Move X8, [X8+192]
	050 Move X0, X21
	051 Move X1, X24
	052 Move X2, X22
	053 Move X3, [X8+240]
	054 Call 0x2DE6AFC, X0, X1, X2
	055 Move TEMP, X0
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfEqual {71}
	059 Move X0, [X19+32]
	060 Move W8, [X0+309]
	061 Move TEMP, X8
	062 And TEMP, TEMP, 1
	063 Compare TEMP, 1
	064 JumpIfEqual {66}
	065 Call 0x1C5D684
	066 Move X8, [X0+192]
	067 Move X0, X21
	068 Move X1, X24
	069 Move X2, [X8+176]
	070 Call 0x2DE5FEC, X0, X1
	071 Move W8, [X20]
	072 Add W23, W23, 1
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move X20, [X31+48]
	075 Move X19, [X31+56]
	076 Move X22, [X31+32]
	077 Move X21, [X31+40]
	078 Move X24, [X31+16]
	079 Move X23, [X31+24]
	080 Move X30, [X31+64]
	081 Return 

Method: System.Collections.Generic.IEnumerator`1<TValue> GetEnumerator()

Disassembly:
	0x02DE6D10 BL 0x1C16D08
	0x02DE6D14 MOV X1, X0
	0x02DE6D18 MOV X0, X20
	0x02DE6D1C MOV X2, X31
	0x02DE6D20 BL 0x3316014
	0x02DE6D24 MOV X0, X20
	0x02DE6D28 MOV X1, X19
	0x02DE6D2C BL 0x1C16DEC
	0x02DE6D30 BL 0x1C16F28
	0x02DE6D34 BL 0x1C16F20
	0x02DE6D38 STR X30, [X31 - 0x30]!
	0x02DE6D3C STP X22, X21, [X31 + 0x10]
	0x02DE6D40 STP X20, X19, [X31 + 0x20]
	0x02DE6D44 MOV X21, X2
	0x02DE6D48 TBNZ X1, 0x1F, 0x2DE6ED0
	0x02DE6D4C LDR W22, [X0]
	0x02DE6D50 MOV W20, W1
	0x02DE6D54 MOV X19, X0
	0x02DE6D58 CMP W22, W1

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+32], X30
	003 Move X8, [X0+16]
	004 Move V0, [X0]
	005 NotImplemented "Instruction MOVI not yet implemented."
	006 Move [X31+24], D1
	007 Move [X31+16], X8
	008 Move [X31], V0
	009 Move X0, [X1+32]
	010 Move W8, [X0+309]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {16}
	015 Call 0x1C5D684
	016 Move X8, [X0+192]
	017 Add X1, X31, 0
	018 Move X0, [X8+248]
	019 Call 0x1C17E04
	020 Move X30, [X31+32]
	021 Add X31, X31, 48
	022 Return X0

Method: System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()

Disassembly:
	0x02DE6D5C B.LE 0x2DE6ED0
	0x02DE6D60 CBZ W20, 0x2DE6D78
	0x02DE6D64 SUB W8, W22, 0x1
	0x02DE6D68 CMP W8, 0x1
	0x02DE6D6C B.NE 0x2DE6DA8
	0x02DE6D70 STR X31, [X19 + 0x10]
	0x02DE6D74 B 0x2DE6EB4
	0x02DE6D78 MOV X20, X19
	0x02DE6D7C LDR X0, [X20 + 0x10]!
	0x02DE6D80 CBZ X0, 0x2DE6E18
	0x02DE6D84 LDR W8, [X0 + 0x18]
	0x02DE6D88 CBZ W8, 0x2DE6F0C
	0x02DE6D8C LDR X8, [X0 + 0x20]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X1+32]
	004 Move X19, X0
	005 Move W9, [X8+309]
	006 Move TEMP, X9
	007 And TEMP, TEMP, 1
	008 Compare TEMP, 1
	009 JumpIfEqual {13}
	010 Move X0, X8
	011 Call 0x1C5D684
	012 Move X8, X0
	013 Move X8, [X8+192]
	014 Move X0, X19
	015 Move X1, [X8+256]
	016 Move X30, [X31+16]
	017 Move X19, [X31+24]
	018 Call 0x2DE6D10, X0
	019 Return X0

