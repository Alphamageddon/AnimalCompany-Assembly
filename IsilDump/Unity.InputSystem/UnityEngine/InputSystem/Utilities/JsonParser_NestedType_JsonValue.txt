Type: UnityEngine.InputSystem.Utilities.JsonParser/JsonValue

Method: System.Boolean ToBoolean()

Disassembly:
	0x03762100 AND W0, W0, 0x1
	0x03762104 ADD X31, X31, 0x1B0
	0x03762108 LDP X20, X19, [X31 + 0x40]
	0x0376210C LDP X22, X21, [X31 + 0x30]
	0x03762110 LDP X29, X30, [X31 + 0x20]
	0x03762114 LDP D9, D8, [X31 + 0x10]
	0x03762118 LDR V10, [X31], #0x50
	0x0376211C RET
	0x03762120 ADD X0, X31, 0x120
	0x03762124 MOVZ W2, 0x48
	0x03762128 MOV X1, X19
	0x0376212C BL 0x3EB1AC0
	0x03762130 LDUR V0, [X21 + 0x18]
	0x03762134 LDR X8, [X31 + 0x148]
	0x03762138 MOV X0, X20
	0x0376213C MOV X1, X31
	0x03762140 STR V0, [X31 + 0x10]
	0x03762144 STR X8, [X31 + 0x110]
	0x03762148 BL 0x3768CAC
	0x0376214C STP X0, X1, [X31 + 0x198]
	0x03762150 STR X31, [X31 + 0x1A8]
	0x03762154 ADD X0, X31, 0x100
	0x03762158 ADD X1, X31, 0x198
	0x0376215C BL 0x3760DC8
	0x03762160 B 0x3762100
	0x03762164 LDR X8, [X20]
	0x03762168 B 0x3761C40
	0x0376216C LDR X8, [X19 + 0x10]
	0x03762170 CMP X8, X22
	0x03762174 B 0x37621F4
	0x03762178 LDR X8, [X20]
	0x0376217C B 0x3761C54
	0x03762180 ADRP X8, 0x9C6000
	0x03762184 LDR X8, [X8]
	0x03762188 MOV X0, X20
	0x0376218C MOV X2, X31
	0x03762190 LDR X1, [X8]
	0x03762194 BL 0x321BA08
	0x03762198 TBNZ X0, 0x0, 0x376230C
	0x0376219C ADRP X8, 0x99C000
	0x037621A0 LDR X8, [X8]
	0x037621A4 MOV X0, X20
	0x037621A8 MOV X2, X31
	0x037621AC LDR X1, [X8]
	0x037621B0 BL 0x321BA08
	0x037621B4 TBNZ X0, 0x0, 0x376230C
	0x037621B8 ADRP X8, 0x9B5000
	0x037621BC LDR X8, [X8 + 0xEC0]
	0x037621C0 LDR X1, [X8]
	0x037621C4 MOV X0, X20
	0x037621C8 MOV X2, X31
	0x037621CC BL 0x321BA08
	0x037621D0 B 0x3762100
	0x037621D4 LDR X8, [X19 + 0x10]
	0x037621D8 CMP X22, X8
	0x037621DC B 0x37621F4
	0x037621E0 LDR X8, [X20]
	0x037621E4 B 0x3761C68
	0x037621E8 LDRB W9, [X19 + 0x4]
	0x037621EC AND W9, W9, 0x1
	0x037621F0 CMP W8, W9
	0x037621F4 CSET W0, EQ
	0x037621F8 B 0x3762100
	0x037621FC LDR X8, [X20]
	0x03762200 B 0x3761C7C
	0x03762204 ADD X0, X31, 0x120
	0x03762208 MOVZ W2, 0x48
	0x0376220C MOV X1, X19
	0x03762210 BL 0x3EB1AC0
	0x03762214 LDUR V0, [X21 + 0x18]
	0x03762218 LDR X8, [X31 + 0x148]
	0x0376221C MOV X0, X20
	0x03762220 MOV X1, X31
	0x03762224 STR V0, [X31 + 0x2]
	0x03762228 STR X8, [X31 + 0x30]
	0x0376222C BL 0x33BE520
	0x03762230 LDR X8, [X22]
	0x03762234 MOV X19, X0
	0x03762238 LDR W9, [X8 + 0xE0]
	0x0376223C CBNZ W9, 0x3762248

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xC7F000
	006 Move W8, [X20+3673]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x99B000
	013 Move X0, [X0+2536]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+3673], W8
	017 Move W8, [X19]
	018 Subtract W8, W8, 1
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move X9, -45916160
	021 Add X9, X9, 2171
	022 NotImplemented "Instruction ADR not yet implemented."
	023 Move W11, [X9]
	024 Add X10, X10, X11
	025 CallNoReturn X10
	026 Move W8, [X19+4]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move W0, W31
	029 Move X20, 0xC7F000
	030 Move W8, [X20+3706]
	031 Move V8, [X19+8]
	032 Compare W8, 0
	033 JumpIfNotEqual {39}
	034 Move X0, 0x992000
	035 Move X0, [X0+1448]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X20+3706], W8
	039 Move X8, 0x992000
	040 Move X8, [X8+1448]
	041 Move X0, [X8]
	042 Move W8, [X0+224]
	043 Compare W8, 0
	044 JumpIfNotEqual {46}
	045 Call 0x1C17DFC
	046 NotImplemented "Instruction FABS not yet implemented."
	047 Move D0, X31
	048 Move V1, V8
	049 Move X0, X31
	050 Call Math.Max, V0, V1
	051 Move X8, -46612480
	052 Move V1, [X8+3016]
	053 Move X8, 8
	054 Move X0, X31
	055 Multiply D0, D0, D1
	056 Move D1, X8
	057 Call Math.Max, V0, V1
	058 NotImplemented "Instruction FCMP not yet implemented."
	059 NotImplemented "Instruction CSET not yet implemented."
	060 Move X8, [X19+16]
	061 NotImplemented "Instruction CMP not yet implemented."
	062 NotImplemented "Instruction CSET not yet implemented."
	063 Move X20, [X31+16]
	064 Move X19, [X31+24]
	065 Move X30, [X31+8]
	066 Move V8, [X31+32]
	067 Return X0
	068 Move X0, X19
	069 Call JsonValue.ToString, X0
	070 Move X8, 0x99B000
	071 Move X8, [X8+2536]
	072 Move X19, X0
	073 Move X8, [X8]
	074 Move W9, [X8+224]
	075 Compare W9, 0
	076 JumpIfNotEqual {79}
	077 Move X0, X8
	078 Call 0x1C17DFC
	079 Move X0, X19
	080 Move X20, [X31+16]
	081 Move X19, [X31+24]
	082 Move X30, [X31+8]
	083 Move X1, X31
	084 Move V8, [X31+32]
	085 Call Convert.ToBoolean, X0
	086 Return X0

Method: System.Int64 ToInteger()

Disassembly:
	0x037626B0 ANDS W31, W8, W10, 0x0
	0x037626B4 CSET W10, EQ
	0x037626B8 ANDS W31, W8, W9, 0x0
	0x037626BC CSET W8, NE
	0x037626C0 EOR W0, W10, W8, 0x0
	0x037626C4 RET
	0x037626C8 MOV X4, X31
	0x037626CC B 0x37626EC
	0x037626D0 MOV W8, W1
	0x037626D4 UBFM X8, X8, 0x3, 0x3F
	0x037626D8 LDRB W8, [X8, X0, LSL]
	0x037626DC AND W9, W1, 0x7
	0x037626E0 LSRV W8, W8, W9
	0x037626E4 AND W0, W8, 0x1
	0x037626E8 RET
	0x037626EC STP X30, X23, [X31 - 0x30]!
	0x037626F0 STP X22, X21, [X31 + 0x10]
	0x037626F4 STP X20, X19, [X31 + 0x20]
	0x037626F8 MOV X21, X4
	0x037626FC MOV W22, W3
	0x03762700 MOV X19, X1
	0x03762704 CMP W2, 0x8
	0x03762708 MOV X20, X0
	0x0376270C B.CC 0x376272C
	0x03762710 UBFM W8, W2, 0x3, 0x1F
	0x03762714 CMP X21, 0x0
	0x03762718 ADD X20, X8, X20
	0x0376271C ADD X19, X8, X19
	0x03762720 ADD X8, X21, X8
	0x03762724 CSEL X21, X31, X8, EQ
	0x03762728 AND W2, W2, 0x7
	0x0376272C CBZ W2, 0x3762784
	0x03762730 ADD W8, W2, W22
	0x03762734 MOVZ W10, 0x8
	0x03762738 MOVZ W9, 0xFF
	0x0376273C SUB W10, W10, W8
	0x03762740 LSLV W11, W9, W2
	0x03762744 LSRV W9, W9, W10
	0x03762748 SUBS W22, W8, 0x8
	0x0376274C CSINV W9, W9, W31, CC
	0x03762750 AND W9, W9, W11, 0x0
	0x03762754 CBZ X21, 0x3762760
	0x03762758 LDRB W10, [X21], #0x1
	0x0376275C AND W9, W9, W10, 0x0
	0x03762760 LDRB W10, [X20]
	0x03762764 LDRB W11, [X19]
	0x03762768 EOR W10, W11, W10, 0x0
	0x0376276C ANDS W31, W9, W10, 0x0
	0x03762770 B.NE 0x3762818
	0x03762774 CMP W8, 0x9
	0x03762778 B.CC 0x3762820
	0x0376277C ADD X20, X20, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xC7F000
	005 Move W8, [X20+3674]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x99B000
	012 Move X0, [X0+2536]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3674], W8
	016 Move W8, [X19]
	017 Subtract W8, W8, 1
	018 NotImplemented "Instruction CMP not yet implemented."
	019 Move X9, -45916160
	020 Add X9, X9, 2183
	021 NotImplemented "Instruction ADR not yet implemented."
	022 Move W11, [X9]
	023 Add X10, X10, X11
	024 CallNoReturn X10
	025 Move W0, [X19+4]
	026 Move X0, X31
	027 Move V0, [X19+8]
	028 Move X8, 0x7FF00000
	029 Move D1, X8
	030 Move X9, 0x80000000
	031 NotImplemented "Instruction FCVTZS not yet implemented."
	032 NotImplemented "Instruction FCMP not yet implemented."
	033 NotImplemented "Instruction CSEL not yet implemented."
	034 Move X0, [X19+16]
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X30, [X31+32]
	038 Return X0
	039 Move X0, X19
	040 Call JsonValue.ToString, X0
	041 Move X8, 0x99B000
	042 Move X8, [X8+2536]
	043 Move X19, X0
	044 Move X8, [X8]
	045 Move W9, [X8+224]
	046 Compare W9, 0
	047 JumpIfNotEqual {50}
	048 Move X0, X8
	049 Call 0x1C17DFC
	050 Move X0, X19
	051 Move X20, [X31+16]
	052 Move X19, [X31+24]
	053 Move X1, X31
	054 Move X30, [X31+32]
	055 Call Convert.ToInt64, X0
	056 Return X0

Method: System.Double ToDouble()

Disassembly:
	0x03762780 ADD X19, X19, 0x1
	0x03762784 MOV W8, W22
	0x03762788 UBFM X23, X8, 0x3, 0x3F
	0x0376278C CBZ W23, 0x37627E0
	0x03762790 MOV W2, W23
	0x03762794 CBZ X21, 0x37627CC
	0x03762798 MOV X9, X31
	0x0376279C MOVZ W8, 0x1
	0x037627A0 LDRB W10, [X9, X20, LSL]
	0x037627A4 LDRB W11, [X9, X19, LSL]
	0x037627A8 LDRB W9, [X9, X21, LSL]
	0x037627AC EOR W10, W11, W10, 0x0
	0x037627B0 ANDS W31, W10, W9, 0x0
	0x037627B4 B.NE 0x3762818
	0x037627B8 SXTW X9, W8
	0x037627BC CMP X9, X2
	0x037627C0 ADD W8, W8, 0x1
	0x037627C4 B.LT 0x37627A0
	0x037627C8 B 0x37627E0
	0x037627CC MOV X0, X20
	0x037627D0 MOV X1, X19
	0x037627D4 MOV X3, X31
	0x037627D8 BL 0x3C001FC
	0x037627DC CBNZ W0, 0x3762818
	0x037627E0 ANDS W8, W22, 0x7
	0x037627E4 B.EQ 0x3762820
	0x037627E8 MOVZ W9, 0x8
	0x037627EC SUB W8, W9, W8
	0x037627F0 MOVZ W9, 0xFF
	0x037627F4 LSRV W8, W9, W8
	0x037627F8 CBZ X21, 0x3762804
	0x037627FC LDRB W9, [X23, X21, LSL]
	0x03762800 AND W8, W8, W9, 0x0
	0x03762804 LDRB W9, [X20, X23, LSL]
	0x03762808 LDRB W10, [X19, X23, LSL]
	0x0376280C EOR W9, W10, W9, 0x0
	0x03762810 ANDS W31, W8, W9, 0x0
	0x03762814 B.EQ 0x3762820
	0x03762818 MOV W0, W31
	0x0376281C B 0x3762824
	0x03762820 MOVZ W0, 0x1
	0x03762824 LDP X20, X19, [X31 + 0x20]
	0x03762828 LDP X22, X21, [X31 + 0x10]
	0x0376282C LDP X30, X23, [X31], #0x30
	0x03762830 RET
	0x03762834 ANDS W31, W1, 0x7
	0x03762838 ADD W8, W0, W1, 0x3, LSR
	0x0376283C CINC W0, W8, NE
	0x03762840 RET
	0x03762844 MOV W8, W1
	0x03762848 UBFM X8, X8, 0x3, 0x3F

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xC7F000
	005 Move W8, [X20+3675]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x99B000
	012 Move X0, [X0+2536]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3675], W8
	016 Move W8, [X19]
	017 Subtract W8, W8, 1
	018 NotImplemented "Instruction CMP not yet implemented."
	019 Move X9, -45916160
	020 Add X9, X9, 2187
	021 NotImplemented "Instruction ADR not yet implemented."
	022 Move W11, [X9]
	023 Add X10, X10, X11
	024 CallNoReturn X10
	025 Move W8, [X19+4]
	026 Move D0, 1
	027 Move D1, X31
	028 NotImplemented "Instruction CMP not yet implemented."
	029 NotImplemented "Instruction FCSEL not yet implemented."
	030 Move D0, X31
	031 Move V0, [X19+8]
	032 Move V0, [X19+16]
	033 NotImplemented "Instruction SCVTF not yet implemented."
	034 Move X0, X19
	035 Call JsonValue.ToString, X0
	036 Move X8, 0x99B000
	037 Move X8, [X8+2536]
	038 Move X19, X0
	039 Move X8, [X8]
	040 Move W9, [X8+224]
	041 Compare W9, 0
	042 JumpIfNotEqual {45}
	043 Move X0, X8
	044 Call 0x1C17DFC
	045 Move X0, X19
	046 Move X1, X31
	047 Call Convert.ToSingle, X0
	048 NotImplemented "Instruction FCVT not yet implemented."
	049 Move X20, [X31+16]
	050 Move X19, [X31+24]
	051 Move X30, [X31+32]
	052 Return V0

Method: System.String ToString()

Disassembly:
	0x03762240 MOV X0, X8
	0x03762244 BL 0x1C16DFC
	0x03762248 MOV X0, X19
	0x0376224C MOV X1, X20
	0x03762250 MOV X2, X31
	0x03762254 BL 0x33AED00
	0x03762258 MOV X1, X31
	0x0376225C BL 0x3768CAC
	0x03762260 LDR V0, [X31 + 0x2]
	0x03762264 LDR X8, [X31 + 0x30]
	0x03762268 STP X0, X1, [X31 + 0x198]
	0x0376226C ADD X0, X31, 0x0
	0x03762270 STR V0, [X31]
	0x03762274 STR X8, [X31 + 0x10]
	0x03762278 STR X31, [X31 + 0x1A8]
	0x0376227C B 0x3762158
	0x03762280 BL 0x3EB1AC0
	0x03762284 ADRP X9, 0x99B000
	0x03762288 LDUR V0, [X21 + 0x18]
	0x0376228C LDR X8, [X31 + 0x148]
	0x03762290 LDR X9, [X9 + 0xFF8]
	0x03762294 MOV X1, X31
	0x03762298 STR V0, [X31 + 0x8]
	0x0376229C STR X8, [X31 + 0x90]
	0x037622A0 LDR X0, [X9]
	0x037622A4 BL 0x3768CAC
	0x037622A8 STP X0, X1, [X31 + 0x198]
	0x037622AC ADD X0, X31, 0x80
	0x037622B0 ADD X1, X31, 0x198
	0x037622B4 STR X31, [X31 + 0x1A8]
	0x037622B8 BL 0x3760DC8
	0x037622BC TBNZ X0, 0x0, 0x376230C
	0x037622C0 ADD X0, X31, 0x120
	0x037622C4 MOVZ W2, 0x48
	0x037622C8 MOV X1, X19
	0x037622CC BL 0x3EB1AC0
	0x037622D0 ADRP X8, 0x9C5000
	0x037622D4 LDR X8, [X8 + 0xFF8]
	0x037622D8 MOV X1, X31
	0x037622DC LDR X0, [X8]
	0x037622E0 BL 0x3768CAC
	0x037622E4 LDUR V0, [X21 + 0x18]
	0x037622E8 LDR X8, [X31 + 0x148]
	0x037622EC STP X0, X1, [X31 + 0x198]
	0x037622F0 ADD X0, X31, 0x60
	0x037622F4 ADD X1, X31, 0x198
	0x037622F8 STR V0, [X31 + 0x6]
	0x037622FC STR X8, [X31 + 0x70]
	0x03762300 STR X31, [X31 + 0x1A8]
	0x03762304 BL 0x3760DC8
	0x03762308 TBZ X0, 0x0, 0x3762314
	0x0376230C MOVZ W0, 0x1
	0x03762310 B 0x3762100
	0x03762314 ADD X0, X31, 0x120
	0x03762318 MOVZ W2, 0x48
	0x0376231C MOV X1, X19
	0x03762320 BL 0x3EB1AC0
	0x03762324 ADRP X8, 0x993000
	0x03762328 LDR X8, [X8 + 0x4B0]
	0x0376232C MOV X1, X31
	0x03762330 LDR X0, [X8]
	0x03762334 BL 0x3768CAC
	0x03762338 LDUR V0, [X21 + 0x18]
	0x0376233C LDR X8, [X31 + 0x148]
	0x03762340 STP X0, X1, [X31 + 0x198]
	0x03762344 STR X31, [X31 + 0x1A8]
	0x03762348 STR V0, [X31 + 0x4]
	0x0376234C STR X8, [X31 + 0x50]
	0x03762350 ADD X0, X31, 0x40
	0x03762354 B 0x3762158
	0x03762358 SUB X31, X31, 0x70
	0x0376235C STP X30, X21, [X31 + 0x50]
	0x03762360 STP X20, X19, [X31 + 0x60]
	0x03762364 ADRP X21, 0xC7E000
	0x03762368 LDRB W8, [X21 + 0xE5E]
	0x0376236C MOV X20, X1
	0x03762370 MOV X19, X0
	0x03762374 TBNZ X8, 0x0, 0x376238C
	0x03762378 ADRP X0, 0x9BC000
	0x0376237C LDR X0, [X0 + 0x8B8]
	0x03762380 BL 0x1C16CF4
	0x03762384 MOVZ W8, 0x1
	0x03762388 STRB W8, [X21 + 0xE5E]
	0x0376238C CBZ X20, 0x37623A8
	0x03762390 ADRP X8, 0x9BC000
	0x03762394 LDR X8, [X8 + 0x8B8]
	0x03762398 LDR X9, [X20]
	0x0376239C LDR X8, [X8]
	0x037623A0 CMP X9, X8
	0x037623A4 B.EQ 0x37623B0
	0x037623A8 MOV W0, W31
	0x037623AC B 0x37623D4
	0x037623B0 MOV X0, X20
	0x037623B4 BL 0x1C16E08
	0x037623B8 MOV X1, X0
	0x037623BC ADD X0, X31, 0x8
	0x037623C0 MOVZ W2, 0x48
	0x037623C4 BL 0x3EB1AC0
	0x037623C8 ADD X1, X31, 0x8
	0x037623CC MOV X0, X19
	0x037623D0 BL 0x37618D0
	0x037623D4 LDP X20, X19, [X31 + 0x60]
	0x037623D8 LDP X30, X21, [X31 + 0x50]
	0x037623DC AND W0, W0, 0x1
	0x037623E0 ADD X31, X31, 0x70
	0x037623E4 RET
	0x037623E8 STR X30, [X31 - 0x50]!
	0x037623EC STP X26, X25, [X31 + 0x10]
	0x037623F0 STP X24, X23, [X31 + 0x20]
	0x037623F4 STP X22, X21, [X31 + 0x30]
	0x037623F8 STP X20, X19, [X31 + 0x40]
	0x037623FC ADRP X20, 0xC7E000
	0x03762400 ADRP X21, 0x991000
	0x03762404 LDRB W8, [X20 + 0xE5F]
	0x03762408 LDR X21, [X21 + 0xB58]
	0x0376240C MOV X19, X0
	0x03762410 TBNZ X8, 0x0, 0x3762428
	0x03762414 ADRP X0, 0x991000
	0x03762418 LDR X0, [X0 + 0xB58]
	0x0376241C BL 0x1C16CF4
	0x03762420 MOVZ W8, 0x1
	0x03762424 STRB W8, [X20 + 0xE5F]
	0x03762428 MOV X20, X19
	0x0376242C LDR W25, [X20], #0x4
	0x03762430 LDR X0, [X21]
	0x03762434 LDR W8, [X0 + 0xE0]
	0x03762438 CBNZ W8, 0x3762440
	0x0376243C BL 0x1C16DFC
	0x03762440 MOV X0, X20
	0x03762444 MOV X1, X31
	0x03762448 BL 0x33176B4
	0x0376244C LDR X8, [X19 + 0x8]
	0x03762450 MOV W20, W0
	0x03762454 ADD X0, X19, 0x10
	0x03762458 MOV X1, X31
	0x0376245C SUB X9, X31, X8
	0x03762460 AND X10, X8, 0x7FFFFFFFFFFFFFFF
	0x03762464 ANDS X31, X9, 0x7FFFFFFFFFFFFFFF
	0x03762468 CSEL X26, X10, X8, EQ
	0x0376246C BL 0x337C960
	0x03762470 MOV W21, W0
	0x03762474 ADD X0, X19, 0x18
	0x03762478 BL 0x3761000
	0x0376247C LDR X8, [X19 + 0x30]
	0x03762480 MOV W22, W0
	0x03762484 CBZ X8, 0x37624A0
	0x03762488 LDR X9, [X8]
	0x0376248C MOV X0, X8
	0x03762490 LDP X10, X1, [X9 + 0x158]
	0x03762494 BLR X10
	0x03762498 MOV W23, W0
	0x0376249C B 0x37624A4
	0x037624A0 MOV W23, W31
	0x037624A4 LDR X0, [X19 + 0x38]
	0x037624A8 CBZ X0, 0x37624C0
	0x037624AC LDR X8, [X0]
	0x037624B0 LDP X9, X1, [X8 + 0x158]
	0x037624B4 BLR X9
	0x037624B8 MOV W24, W0
	0x037624BC B 0x37624C4
	0x037624C0 MOV W24, W31
	0x037624C4 LDR X0, [X19 + 0x40]
	0x037624C8 CBZ X0, 0x37624D8
	0x037624CC LDR X8, [X0]
	0x037624D0 LDP X9, X1, [X8 + 0x158]
	0x037624D4 BLR X9
	0x037624D8 MOVZ W8, 0x18D
	0x037624DC MUL W9, W25, W8
	0x037624E0 EOR W9, W20, W9, 0x0
	0x037624E4 UBFM X10, X26, 0x20, 0x3F
	0x037624E8 MUL W9, W9, W8
	0x037624EC EOR W10, W10, W26, 0x0
	0x037624F0 EOR W9, W9, W10, 0x0
	0x037624F4 MUL W9, W9, W8
	0x037624F8 EOR W9, W9, W21, 0x0
	0x037624FC MUL W9, W9, W8
	0x03762500 EOR W9, W9, W22, 0x0
	0x03762504 MUL W9, W9, W8
	0x03762508 EOR W9, W23, W9, 0x0
	0x0376250C MUL W9, W9, W8
	0x03762510 EOR W9, W24, W9, 0x0
	0x03762514 LDP X20, X19, [X31 + 0x40]
	0x03762518 LDP X22, X21, [X31 + 0x30]
	0x0376251C LDP X24, X23, [X31 + 0x20]
	0x03762520 LDP X26, X25, [X31 + 0x10]
	0x03762524 MUL W8, W9, W8
	0x03762528 EOR W0, W0, W8, 0x0
	0x0376252C LDR X30, [X31], #0x50
	0x03762530 RET
	0x03762534 SUB X31, X31, 0x60
	0x03762538 STP X30, X19, [X31 + 0x50]
	0x0376253C MOV X19, X0
	0x03762540 ADD X0, X31, 0x8
	0x03762544 MOVZ W2, 0x48
	0x03762548 BL 0x3EB1AC0
	0x0376254C ADD X1, X31, 0x8
	0x03762550 MOV X0, X19
	0x03762554 BL 0x37618D0
	0x03762558 LDP X30, X19, [X31 + 0x50]
	0x0376255C ORN W8, W31, W0, 0x0
	0x03762560 AND W0, W8, 0x1
	0x03762564 ADD X31, X31, 0x60
	0x03762568 RET
	0x0376256C STR X30, [X31 - 0x20]!
	0x03762570 STP X20, X19, [X31 + 0x10]
	0x03762574 ADRP X19, 0xC7E000
	0x03762578 ADRP X20, 0x9E4000
	0x0376257C LDRB W8, [X19 + 0xE60]
	0x03762580 LDR X20, [X20 + 0x2F8]
	0x03762584 TBNZ X8, 0x0, 0x376259C
	0x03762588 ADRP X0, 0x9E4000
	0x0376258C LDR X0, [X0 + 0x2F8]
	0x03762590 BL 0x1C16CF4
	0x03762594 MOVZ W8, 0x1
	0x03762598 STRB W8, [X19 + 0xE60]
	0x0376259C LDR X0, [X20]
	0x037625A0 BL 0x1C16F10
	0x037625A4 MOV X1, X31
	0x037625A8 MOV X19, X0
	0x037625AC BL 0x33BDD8C
	0x037625B0 LDR X8, [X20]
	0x037625B4 LDR X8, [X8 + 0xB8]
	0x037625B8 STR X19, [X8]
	0x037625BC LDP X20, X19, [X31 + 0x10]
	0x037625C0 LDR X30, [X31], #0x20
	0x037625C4 RET
	0x037625C8 MOV X1, X31
	0x037625CC B 0x33BDD8C
	0x037625D0 MOV X0, X1
	0x037625D4 B 0x3761240
	0x037625D8 SUB X31, X31, 0x80
	0x037625DC STR X30, [X31 + 0x50]
	0x037625E0 STP X22, X21, [X31 + 0x60]
	0x037625E4 STP X20, X19, [X31 + 0x70]
	0x037625E8 ADRP X20, 0xC7E000
	0x037625EC ADRP X22, 0x9BC000
	0x037625F0 ADRP X21, 0x9E4000
	0x037625F4 LDRB W8, [X20 + 0xE61]
	0x037625F8 LDR X22, [X22 + 0x8B8]
	0x037625FC LDR X21, [X21 + 0x308]
	0x03762600 MOV X19, X1
	0x03762604 TBNZ X8, 0x0, 0x3762640
	0x03762608 ADRP X0, 0x9BC000
	0x0376260C LDR X0, [X0 + 0x8B8]
	0x03762610 BL 0x1C16CF4
	0x03762614 ADRP X0, 0x9E4000
	0x03762618 LDR X0, [X0 + 0x310]
	0x0376261C BL 0x1C16CF4
	0x03762620 ADRP X0, 0x9E4000
	0x03762624 LDR X0, [X0 + 0x318]
	0x03762628 BL 0x1C16CF4
	0x0376262C ADRP X0, 0x9E4000
	0x03762630 LDR X0, [X0 + 0x308]
	0x03762634 BL 0x1C16CF4
	0x03762638 MOVZ W8, 0x1
	0x0376263C STRB W8, [X20 + 0xE61]
	0x03762640 LDR X20, [X19], #0x8
	0x03762644 ADD X0, X31, 0x8
	0x03762648 MOVZ W2, 0x48
	0x0376264C MOV X1, X19
	0x03762650 BL 0x3EB1AC0
	0x03762654 LDR X0, [X22]
	0x03762658 ADD X1, X31, 0x8
	0x0376265C BL 0x1C16E04
	0x03762660 LDR X8, [X21]
	0x03762664 MOV X2, X0
	0x03762668 MOV X1, X20
	0x0376266C MOV X3, X31
	0x03762670 MOV X0, X8
	0x03762674 BL 0x3227BD4
	0x03762678 LDP X20, X19, [X31 + 0x70]
	0x0376267C LDP X22, X21, [X31 + 0x60]
	0x03762680 LDR X30, [X31 + 0x50]
	0x03762684 ADD X31, X31, 0x80
	0x03762688 RET
	0x0376268C UBFM X3, X2, 0x20, 0x3F
	0x03762690 CMP W3, 0x1
	0x03762694 B.NE 0x37626C8
	0x03762698 UBFM X9, X2, 0x3, 0x1F
	0x0376269C LDRB W10, [X9, X0, LSL]
	0x037626A0 LDRB W9, [X9, X1, LSL]
	0x037626A4 AND W8, W2, 0x7
	0x037626A8 MOVZ W11, 0x1
	0x037626AC LSLV W8, W11, W8

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+80], X30
	003 Move [X31+96], X24
	004 Move [X31+104], X23
	005 Move [X31+112], X22
	006 Move [X31+120], X21
	007 Move [X31+128], X20
	008 Move [X31+136], X19
	009 Move X20, 0xC7F000
	010 Move W8, [X20+3676]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {72}
	016 Move X0, 0x992000
	017 Move X0, [X0+2904]
	018 Call 0x1C17CF4
	019 Move X0, 0x994000
	020 Move X0, [X0+3144]
	021 Call 0x1C17CF4
	022 Move X0, 0x9E5000
	023 Move X0, [X0+712]
	024 Call 0x1C17CF4
	025 Move X0, 0x9E5000
	026 Move X0, [X0+720]
	027 Call 0x1C17CF4
	028 Move X0, 0x9E5000
	029 Move X0, [X0+728]
	030 Call 0x1C17CF4
	031 Move X0, 0x9E5000
	032 Move X0, [X0+736]
	033 Call 0x1C17CF4
	034 Move X0, 0x9BD000
	035 Move X0, [X0+2232]
	036 Call 0x1C17CF4
	037 Move X0, 0x9E5000
	038 Move X0, [X0+744]
	039 Call 0x1C17CF4
	040 Move X0, 0x9E5000
	041 Move X0, [X0+752]
	042 Call 0x1C17CF4
	043 Move X0, 0x9E5000
	044 Move X0, [X0+760]
	045 Call 0x1C17CF4
	046 Move X0, 0x9BF000
	047 Move X0, [X0+864]
	048 Call 0x1C17CF4
	049 Move X0, 0x99D000
	050 Move X0, [X0+1752]
	051 Call 0x1C17CF4
	052 Move X0, 0x9C3000
	053 Move X0, [X0+3216]
	054 Call 0x1C17CF4
	055 Move X0, 0x992000
	056 Move X0, [X0+2096]
	057 Call 0x1C17CF4
	058 Move X0, 0x9B9000
	059 Move X0, [X0+632]
	060 Call 0x1C17CF4
	061 Move X0, 0x994000
	062 Move X0, [X0+928]
	063 Call 0x1C17CF4
	064 Move X0, 0x992000
	065 Move X0, [X0+3784]
	066 Call 0x1C17CF4
	067 Move X0, 0x992000
	068 Move X0, [X0+2120]
	069 Call 0x1C17CF4
	070 Move W8, 1
	071 Move [X20+3676], W8
	072 Move W8, [X19]
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move X9, -45916160
	075 Add X9, X9, 2175
	076 NotImplemented "Instruction ADR not yet implemented."
	077 Move W11, [X9]
	078 Add X10, X10, X11
	079 CallNoReturn X10
	080 Move X8, 0x992000
	081 Move X8, [X8+2096]
	082 Move X8, 0x994000
	083 Move X8, [X8+3144]
	084 Add X19, X19, 8
	085 Move X0, [X8]
	086 Move W8, [X0+224]
	087 Compare W8, 0
	088 JumpIfNotEqual {90}
	089 Call 0x1C17DFC
	090 Move X0, X31
	091 Call CultureInfo.get_InvariantCulture
	092 Move X1, X0
	093 Move X0, X19
	094 Move X20, [X31+128]
	095 Move X19, [X31+136]
	096 Move X22, [X31+112]
	097 Move X21, [X31+120]
	098 Move X24, [X31+96]
	099 Move X23, [X31+104]
	100 Move X30, [X31+80]
	101 Move X2, X31
	102 Add X31, X31, 144
	103 Call Double.ToString, X0, X1
	104 Return X0
	105 Move X8, 0x994000
	106 Move X8, [X8+3144]
	107 Add X19, X19, 16
	108 Move X0, [X8]
	109 Move W8, [X0+224]
	110 Compare W8, 0
	111 JumpIfNotEqual {113}
	112 Call 0x1C17DFC
	113 Move X0, X31
	114 Call CultureInfo.get_InvariantCulture
	115 Move X1, X0
	116 Move X0, X19
	117 Move X20, [X31+128]
	118 Move X19, [X31+136]
	119 Move X22, [X31+112]
	120 Move X21, [X31+120]
	121 Move X24, [X31+96]
	122 Move X23, [X31+104]
	123 Move X30, [X31+80]
	124 Move X2, X31
	125 Add X31, X31, 144
	126 Call Int64.ToString, X0, X1
	127 Return X0
	128 Add X0, X19, 24
	129 Move X20, [X31+128]
	130 Move X19, [X31+136]
	131 Move X22, [X31+112]
	132 Move X21, [X31+120]
	133 Move X24, [X31+96]
	134 Move X23, [X31+104]
	135 Move X30, [X31+80]
	136 Add X31, X31, 144
	137 Call JsonString.ToString, X0
	138 Return X0
	139 Add X0, X31, 8
	140 Move W2, 72
	141 Move X1, X19
	142 Call 0x3EB2AC0
	143 Move X8, 0x9BD000
	144 Move X8, [X8+2232]
	145 Add X1, X31, 8
	146 Move X0, [X8]
	147 Call 0x1C17E04
	148 Move X1, X31
	149 Call ValueType.ToString, X0
	150 Move X8, 0x992000
	151 Move X8, [X8+2904]
	152 Add X19, X19, 4
	153 Move X0, [X8]
	154 Move W8, [X0+224]
	155 Compare W8, 0
	156 JumpIfNotEqual {158}
	157 Call 0x1C17DFC
	158 Move X0, X19
	159 Move X20, [X31+128]
	160 Move X19, [X31+136]
	161 Move X22, [X31+112]
	162 Move X21, [X31+120]
	163 Move X24, [X31+96]
	164 Move X23, [X31+104]
	165 Move X30, [X31+80]
	166 Move X1, X31
	167 Add X31, X31, 144
	168 Call Boolean.ToString, X0
	169 Return X0
	170 Move X19, [X19+48]
	171 Compare X19, 0
	172 JumpIfEqual {310}
	173 Move X24, 0x9E5000
	174 Move X24, [X24+760]
	175 Move X0, [X24]
	176 Move W8, [X0+224]
	177 Compare W8, 0
	178 JumpIfNotEqual {181}
	179 Call 0x1C17DFC
	180 Move X0, [X24]
	181 Move X8, [X0+184]
	182 Move X9, 0x994000
	183 Move X9, [X9+928]
	184 Move X22, [X8+8]
	185 Move X8, 0x992000
	186 Move X21, [X9]
	187 Move X8, [X8+3784]
	188 Move X20, [X8]
	189 Compare X22, 0
	190 JumpIfNotEqual {212}
	191 Move W8, [X0+224]
	192 Compare W8, 0
	193 JumpIfNotEqual {196}
	194 Call 0x1C17DFC
	195 Move X0, [X24]
	196 Move X9, 0x9E5000
	197 Move X8, [X0+184]
	198 Move X9, [X9+728]
	199 Move X23, [X8]
	200 Move X0, [X9]
	201 Call 0x1C17F10
	202 Move X8, 0x9E5000
	203 Move X8, [X8+744]
	204 Move X1, X23
	205 Move X3, X31
	206 Move X22, X0
	207 Move X2, [X8]
	208 Call Func`2<JsonValue, Object>..ctor, X0, X1, X2
	209 Move X8, [X24]
	210 Move X8, [X8+184]
	211 Move [X8+8], X22
	212 Move X8, 0x9E5000
	213 Move X8, [X8+712]
	214 Move X0, X19
	215 Move X1, X22
	216 Move X2, [X8]
	217 Call Enumerable.Select, X0, X1
	218 Move X1, X0
	219 Move X0, X21
	220 Move X2, X31
	221 Call String.Join, X0, X1
	222 Move X8, 0x992000
	223 Move X8, [X8+2120]
	224 Move X1, X0
	225 Move X0, X20
	226 Move X2, [X8]
	227 Move X19, [X19+56]
	228 Compare X19, 0
	229 JumpIfEqual {312}
	230 Move X22, 0x9E5000
	231 Move X22, [X22+760]
	232 Move X0, [X22]
	233 Move W8, [X0+224]
	234 Compare W8, 0
	235 JumpIfNotEqual {238}
	236 Call 0x1C17DFC
	237 Move X0, [X22]
	238 Move X8, [X0+184]
	239 Move X20, [X8+16]
	240 Compare X20, 0
	241 JumpIfNotEqual {263}
	242 Move W8, [X0+224]
	243 Compare W8, 0
	244 JumpIfNotEqual {247}
	245 Call 0x1C17DFC
	246 Move X0, [X22]
	247 Move X9, 0x9E5000
	248 Move X8, [X0+184]
	249 Move X9, [X9+736]
	250 Move X21, [X8]
	251 Move X0, [X9]
	252 Call 0x1C17F10
	253 Move X8, 0x9E5000
	254 Move X8, [X8+752]
	255 Move X1, X21
	256 Move X3, X31
	257 Move X20, X0
	258 Move X2, [X8]
	259 Call Func`2<KeyValuePair`2<Object, JsonValue>, Object>..ctor, X0, X1, X2
	260 Move X8, [X22]
	261 Move X8, [X8+184]
	262 Move [X8+16], X20
	263 Move X8, 0x9E5000
	264 Move X8, [X8+720]
	265 Move X0, X19
	266 Move X1, X20
	267 Move X2, [X8]
	268 Call Enumerable.Select, X0, X1
	269 Move X8, 0x994000
	270 Move X8, [X8+928]
	271 Move X1, X0
	272 Move X2, X31
	273 Move X8, [X8]
	274 Move X0, X8
	275 Call String.Join, X0, X1
	276 Move X8, 0x9BF000
	277 Move X8, [X8+864]
	278 Move X9, 0x99D000
	279 Move X9, [X9+1752]
	280 Move X1, X0
	281 Move X8, [X8]
	282 Move X2, [X9]
	283 Move X0, X8
	284 Move X20, [X31+128]
	285 Move X19, [X31+136]
	286 Move X22, [X31+112]
	287 Move X21, [X31+120]
	288 Move X24, [X31+96]
	289 Move X23, [X31+104]
	290 Move X30, [X31+80]
	291 Move X3, X31
	292 Add X31, X31, 144
	293 Call String.Concat, X0, X1, X2
	294 Return X0
	295 Move X0, [X19+64]
	296 Compare X0, 0
	297 JumpIfEqual {324}
	298 Move X8, [X0]
	299 Move X20, [X31+128]
	300 Move X19, [X31+136]
	301 Move X22, [X31+112]
	302 Move X21, [X31+120]
	303 Move X24, [X31+96]
	304 Move X23, [X31+104]
	305 Move X2, [X8+360]
	306 Move X1, [X8+368]
	307 Move X30, [X31+80]
	308 Add X31, X31, 144
	309 CallNoReturn X2
	310 Move X8, 0x9C3000
	311 Move X8, [X8+3216]
	312 Move X8, 0x9B9000
	313 Move X8, [X8+632]
	314 Move X0, [X8]
	315 Move X20, [X31+128]
	316 Move X19, [X31+136]
	317 Move X22, [X31+112]
	318 Move X21, [X31+120]
	319 Move X24, [X31+96]
	320 Move X23, [X31+104]
	321 Move X30, [X31+80]
	322 Add X31, X31, 144
	323 Return X0
	324 Call 0x1C17F20

Method: UnityEngine.InputSystem.Utilities.JsonParser/JsonValue op_Implicit(System.Boolean val)

Disassembly:
	0x03761C90 CMP W11, W10
	0x03761C94 B.CC 0x37620FC
	0x03761C98 LDR X8, [X8 + 0xC8]
	0x03761C9C ADD X8, X8, X10, 0x3, LSL
	0x03761CA0 LDUR X8, [X8 - 0x8]
	0x03761CA4 CMP X8, X9
	0x03761CA8 B.NE 0x37620FC
	0x03761CAC LDR W8, [X19]
	0x03761CB0 CMP W8, 0x4
	0x03761CB4 B.EQ 0x3762204
	0x03761CB8 CMP W8, 0x3

ISIL:
	001 And W9, W0, 1
	002 Move W10, 1
	003 NotImplemented "Instruction MOVI not yet implemented."
	004 Move [X8], W10
	005 Move [X8+4], W9
	006 Move [X8+5], V0
	007 Move [X8+21], V0
	008 Move [X8+37], V0
	009 Move [X8+53], V0
	010 Move [X8+68], W31
	011 Return X0

Method: UnityEngine.InputSystem.Utilities.JsonParser/JsonValue op_Implicit(System.Int64 val)

Disassembly:
	0x03761BA0 ADRP X0, 0x994000
	0x03761BA4 LDR X0, [X0 + 0x4B0]
	0x03761BA8 BL 0x1C16CF4
	0x03761BAC MOVZ W8, 0x1
	0x03761BB0 STRB W8, [X21 + 0xE5D]
	0x03761BB4 STP X31, X31, [X31 + 0x188]
	0x03761BB8 STR W31, [X31 + 0x184]
	0x03761BBC STR X31, [X31 + 0x178]
	0x03761BC0 STR W31, [X31 + 0x174]
	0x03761BC4 STR X31, [X31 + 0x168]

ISIL:
	001 Move W9, 3
	002 NotImplemented "Instruction MOVI not yet implemented."
	003 Move [X8+4], X31
	004 Move [X8+12], W31
	005 Move [X8+16], X0
	006 Move [X8], W9
	007 Move [X8+24], V0
	008 Move [X8+40], V0
	009 Move [X8+56], V0
	010 Return X0

Method: UnityEngine.InputSystem.Utilities.JsonParser/JsonValue op_Implicit(System.Double val)

Disassembly:
	0x03761BC8 CBZ X20, 0x37620FC
	0x03761BCC ADRP X9, 0x99A000
	0x03761BD0 LDR X9, [X9 + 0x600]
	0x03761BD4 LDR X8, [X20]
	0x03761BD8 LDR X9, [X9]
	0x03761BDC LDRB W11, [X8 + 0x130]
	0x03761BE0 LDRB W10, [X9 + 0x130]
	0x03761BE4 CMP W11, W10

ISIL:
	001 Move X9, -46608384
	002 Move V2, [X9+2200]
	003 NotImplemented "Instruction MOVI not yet implemented."
	004 Move [X8+64], X31
	005 Move [X8+32], V1
	006 Move [X8+40], V1
	007 Move [X8+1], V1
	008 Move [X8], D2
	009 Move [X8+8], D0
	010 Return X0

Method: UnityEngine.InputSystem.Utilities.JsonParser/JsonValue op_Implicit(System.String str)

Disassembly:
	0x0376284C LDRB W9, [X8, X0, LSL]
	0x03762850 AND W10, W1, 0x7
	0x03762854 MOVZ W11, 0x1
	0x03762858 LSLV W10, W11, W10
	0x0376285C BIC W11, W9, W10, 0x0
	0x03762860 ORR W9, W9, W10, 0x0
	0x03762864 ANDS W31, W2, 0x1
	0x03762868 CSEL W9, W9, W11, NE
	0x0376286C STRB W9, [X8, X0, LSL]
	0x03762870 RET
	0x03762874 STR X30, [X31 - 0x30]!
	0x03762878 STP X22, X21, [X31 + 0x10]
	0x0376287C STP X20, X19, [X31 + 0x20]
	0x03762880 UBFM W9, W2, 0x3, 0x1F
	0x03762884 CMP W2, 0x7

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X1, X31
	004 Move X19, X8
	005 Call Substring.op_Implicit, X0
	006 Move W8, 4
	007 NotImplemented "Instruction MOVI not yet implemented."
	008 Move [X19+12], X31
	009 Move [X19+4], X31
	010 Move [X19+20], W31
	011 Move [X19+24], X0
	012 Move [X19+32], X1
	013 Move [X19], W8
	014 Move [X19+40], V0
	015 Move [X19+56], V0
	016 Move X30, [X31+16]
	017 Move X19, [X31+24]
	018 Return X0

Method: UnityEngine.InputSystem.Utilities.JsonParser/JsonValue op_Implicit(UnityEngine.InputSystem.Utilities.JsonParser/JsonString str)

Disassembly:
	0x03761B08 LDR X0, [X0 + 0x9E8]
	0x03761B0C BL 0x1C16CF4
	0x03761B10 ADRP X0, 0x995000
	0x03761B14 LDR X0, [X0 + 0x978]
	0x03761B18 BL 0x1C16CF4
	0x03761B1C ADRP X0, 0x992000
	0x03761B20 LDR X0, [X0 + 0xDF8]
	0x03761B24 BL 0x1C16CF4
	0x03761B28 ADRP X0, 0x992000
	0x03761B2C LDR X0, [X0 + 0x758]
	0x03761B30 BL 0x1C16CF4
	0x03761B34 ADRP X0, 0x994000
	0x03761B38 LDR X0, [X0 + 0xA60]
	0x03761B3C BL 0x1C16CF4
	0x03761B40 ADRP X0, 0x99A000
	0x03761B44 LDR X0, [X0 + 0x600]
	0x03761B48 BL 0x1C16CF4
	0x03761B4C ADRP X0, 0x992000
	0x03761B50 LDR X0, [X0 + 0xA90]
	0x03761B54 BL 0x1C16CF4
	0x03761B58 ADRP X0, 0x994000
	0x03761B5C LDR X0, [X0 + 0x278]
	0x03761B60 BL 0x1C16CF4
	0x03761B64 ADRP X0, 0x99C000
	0x03761B68 LDR X0, [X0 + 0xFF8]
	0x03761B6C BL 0x1C16CF4
	0x03761B70 ADRP X0, 0x99D000
	0x03761B74 LDR X0, [X0]
	0x03761B78 BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+64], X30
	003 NotImplemented "Instruction MRS not yet implemented."
	004 Move X10, [X9+40]
	005 Move W11, 4
	006 Move [X31+56], X10
	007 Move [X31+8], X31
	008 Move [X31+16], X31
	009 Move [X31+24], W31
	010 Move V0, [X0]
	011 Move X10, [X0+16]
	012 Move [X8], W11
	013 Move [X8+56], X31
	014 Move [X8+64], X31
	015 Move [X31+28], V0
	016 Move [X31+44], X10
	017 NotImplemented "Instruction LDUR not yet implemented."
	018 NotImplemented "Instruction LDUR not yet implemented."
	019 NotImplemented "Instruction LDUR not yet implemented."
	020 Move [X8+48], X31
	021 Move [X8+4], V0
	022 Move [X8+2], V2
	023 Move [X8+20], V1
	024 Move X8, [X9+40]
	025 Move X9, [X31+56]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X30, [X31+64]
	028 Add X31, X31, 80
	029 Return X0
	030 Call 0x3EB2B20

Method: UnityEngine.InputSystem.Utilities.JsonParser/JsonValue op_Implicit(System.Collections.Generic.List`1<UnityEngine.InputSystem.Utilities.JsonParser/JsonValue> array)

Disassembly:
	0x03761B7C ADRP X0, 0x9C6000
	0x03761B80 LDR X0, [X0 + 0xFF8]
	0x03761B84 BL 0x1C16CF4
	0x03761B88 ADRP X0, 0x9B6000
	0x03761B8C LDR X0, [X0 + 0xEC0]
	0x03761B90 BL 0x1C16CF4
	0x03761B94 ADRP X0, 0x9C7000
	0x03761B98 LDR X0, [X0]
	0x03761B9C BL 0x1C16CF4

ISIL:
	001 Move W9, 5
	002 NotImplemented "Instruction MOVI not yet implemented."
	003 Move [X8+56], X31
	004 Move [X8+64], X31
	005 Move [X8], W9
	006 Move [X8+4], V0
	007 Move [X8+20], V0
	008 Move [X8+2], V0
	009 Move [X8+48], X0
	010 Return X0

Method: UnityEngine.InputSystem.Utilities.JsonParser/JsonValue op_Implicit(System.Collections.Generic.Dictionary`2<System.String, UnityEngine.InputSystem.Utilities.JsonParser/JsonValue> obj)

Disassembly:
	0x03762888 ADD X10, X9, X0
	0x0376288C ADD X9, X9, X1
	0x03762890 MOV W21, W3
	0x03762894 AND W8, W2, 0x7
	0x03762898 CSEL X20, X9, X1, HI
	0x0376289C CSEL X19, X10, X0, HI
	0x037628A0 CBZ W8, 0x37628FC
	0x037628A4 ADD W10, W8, W21
	0x037628A8 MOVZ W11, 0x8

ISIL:
	001 NotImplemented "Instruction MOVI not yet implemented."
	002 Move W9, 6
	003 Move [X8+52], W31
	004 Move [X8+36], V0
	005 Move [X8+20], V0
	006 Move [X8+4], V0
	007 Move [X8], W9
	008 Move [X8+56], X0
	009 Move [X8+64], X31
	010 Return X0

Method: UnityEngine.InputSystem.Utilities.JsonParser/JsonValue op_Implicit(System.Enum val)

Disassembly:
	0x037628AC MOVZ W9, 0xFF
	0x037628B0 SUB W11, W11, W10
	0x037628B4 LDRB W13, [X19]
	0x037628B8 LSLV W8, W9, W8
	0x037628BC LSRV W9, W9, W11
	0x037628C0 LDRB W11, [X20]
	0x037628C4 MOVZ W12, 0x7FFE
	0x037628C8 CMP W10, 0x8
	0x037628CC CSEL W9, W9, W12, CC

ISIL:
	001 NotImplemented "Instruction MOVI not yet implemented."
	002 Move W9, 7
	003 Move [X8+3], V0
	004 Move [X8+36], V0
	005 Move [X8+20], V0
	006 Move [X8+4], V0
	007 Move [X8], W9
	008 Move [X8+64], X0
	009 Return X0

Method: System.Boolean Equals(UnityEngine.InputSystem.Utilities.JsonParser/JsonValue other)

Disassembly:
	0x037628D0 AND W8, W9, W8, 0x0
	0x037628D4 BIC W9, W13, W8, 0x0
	0x037628D8 AND W8, W8, W11, 0x0
	0x037628DC ORR W8, W8, W9, 0x0
	0x037628E0 CMP W10, 0x9
	0x037628E4 STRB W8, [X19]
	0x037628E8 B.CC 0x3762954
	0x037628EC ORR W8, W2, 0xFFFFFFF8
	0x037628F0 ADD X19, X19, 0x1
	0x037628F4 ADD X20, X20, 0x1
	0x037628F8 ADD W21, W8, W21
	0x037628FC MOV W8, W21
	0x03762900 UBFM X22, X8, 0x3, 0x3F
	0x03762904 CBZ W22, 0x376291C
	0x03762908 MOV W2, W22
	0x0376290C MOV X0, X19
	0x03762910 MOV X1, X20
	0x03762914 MOV X3, X31
	0x03762918 BL 0x3BFF954
	0x0376291C ANDS W8, W21, 0x7
	0x03762920 B.EQ 0x3762954
	0x03762924 LDRB W11, [X22, X19, LSL]
	0x03762928 LDRB W12, [X22, X20, LSL]
	0x0376292C MOVZ W9, 0x8
	0x03762930 MOVZ W10, 0xFF
	0x03762934 MOVN W13, 0xFF
	0x03762938 SUB W8, W9, W8
	0x0376293C LSRV W9, W10, W8
	0x03762940 ASRV W8, W13, W8
	0x03762944 AND W8, W8, W11, 0x0
	0x03762948 AND W9, W9, W12, 0x0
	0x0376294C ORR W8, W9, W8, 0x0
	0x03762950 STRB W8, [X22, X19, LSL]
	0x03762954 LDP X20, X19, [X31 + 0x20]
	0x03762958 LDP X22, X21, [X31 + 0x10]
	0x0376295C LDR X30, [X31], #0x30
	0x03762960 RET
	0x03762964 CMP W1, 0x4
	0x03762968 B.LT 0x376299C
	0x0376296C AND W10, W2, 0xFF
	0x03762970 MOV W9, W10
	0x03762974 BFM W9, W10, 0x10, 0x7
	0x03762978 BFM W9, W10, 0x8, 0x7
	0x0376297C MOV X8, X31
	0x03762980 BFM W9, W10, 0x18, 0x7
	0x03762984 STR W9, [X0, X8, LSL]
	0x03762988 CMP W1, 0x7
	0x0376298C SUB W1, W1, 0x4
	0x03762990 ADD X8, X8, 0x4
	0x03762994 B.GT 0x3762984
	0x03762998 B 0x37629A0
	0x0376299C MOV W8, W31
	0x037629A0 SUBS W11, W1, 0x1
	0x037629A4 B.LT 0x37629FC
	0x037629A8 ADRP X10, 0xFFFFFFFFFD38B000
	0x037629AC LDR V0, [X10 + 0x640]
	0x037629B0 ADD W10, W1, 0x1
	0x037629B4 MOV W9, W31
	0x037629B8 AND W10, W10, 0xFFFFFFFE
	0x037629BC UNIMPLEMENTED
	0x037629C0 UNIMPLEMENTED
	0x037629C4 ORR V2.8B, V2.8B, V0.8B
	0x00000000 INVALID
	0x037629CC FMOV W11, S2
	0x037629D0 TBZ X11, 0x0, 0x37629DC
	0x037629D4 ADD W11, W8, W9
	0x037629D8 STRB W2, [X0, W11, SXTW]
	0x037629DC UNIMPLEMENTED
	0x037629E0 TBZ X11, 0x0, 0x37629F0
	0x037629E4 ADD W11, W8, W9
	0x037629E8 ADD W11, W11, 0x1
	0x037629EC STRB W2, [X0, W11, SXTW]
	0x037629F0 ADD W9, W9, 0x2
	0x037629F4 CMP W10, W9
	0x037629F8 B.NE 0x37629C0
	0x037629FC RET
	0x03762A00 CMP W2, 0x4
	0x03762A04 B.LT 0x3762A44
	0x03762A08 MOV X8, X31
	0x03762A0C LDR W9, [X0, X8, LSL]
	0x03762A10 LDR W10, [X3, X8, LSL]
	0x03762A14 CMP W2, 0x7
	0x03762A18 SUB W2, W2, 0x4
	0x03762A1C BIC W9, W9, W10, 0x0
	0x03762A20 STR W9, [X0, X8, LSL]
	0x03762A24 LDR W10, [X1, X8, LSL]
	0x03762A28 LDR W11, [X3, X8, LSL]
	0x03762A2C AND W10, W11, W10, 0x0
	0x03762A30 ORR W9, W10, W9, 0x0
	0x03762A34 STR W9, [X0, X8, LSL]
	0x03762A38 ADD X8, X8, 0x4
	0x03762A3C B.GT 0x3762A0C
	0x03762A40 B 0x3762A48
	0x03762A44 MOV W8, W31
	0x03762A48 CMP W2, 0x1
	0x03762A4C B.LT 0x3762A80
	0x03762A50 LDRB W9, [X0, W8, SXTW]
	0x03762A54 LDRB W10, [X3, W8, SXTW]
	0x03762A58 SUBS W2, W2, 0x1
	0x03762A5C BIC W9, W9, W10, 0x0
	0x03762A60 STRB W9, [X0, W8, SXTW]
	0x03762A64 LDRB W10, [X1, W8, SXTW]
	0x03762A68 LDRB W11, [X3, W8, SXTW]
	0x03762A6C AND W10, W11, W10, 0x0
	0x03762A70 ORR W9, W10, W9, 0x0
	0x03762A74 STRB W9, [X0, W8, SXTW]
	0x03762A78 ADD W8, W8, 0x1
	0x03762A7C B.NE 0x3762A50
	0x03762A80 RET
	0x03762A84 STR X30, [X31 - 0x20]!
	0x03762A88 STP X20, X19, [X31 + 0x10]
	0x03762A8C CBZ X0, 0x3762B6C
	0x03762A90 CMP W2, 0x21
	0x03762A94 B.CS 0x3762BA0
	0x03762A98 CMP W1, 0x21
	0x03762A9C B.CC 0x3762AC0
	0x03762AA0 ADD W8, W1, 0x1F
	0x03762AA4 CMP W1, 0x0
	0x03762AA8 CSEL W8, W8, W1, LT
	0x03762AAC SBFM W9, W8, 0x5, 0x1F
	0x03762AB0 AND W8, W8, 0xFFFFFFE0
	0x03762AB4 SUB W1, W1, W8
	0x03762AB8 UBFM W8, W9, 0x1E, 0x1D
	0x03762ABC ADD X0, X0, W8, SXTW
	0x03762AC0 ADD W8, W1, W2
	0x03762AC4 CMP W8, 0x8
	0x03762AC8 B.HI 0x3762AFC

ISIL:
	001 Subtract X31, X31, 320
	002 Move [X31+272], D10
	003 Move [X31+280], D9
	004 Move [X31+288], D8
	005 Move [X31+296], X29
	006 Move [X31+304], X30
	007 Move [X31+312], X19
	008 Move W9, [X0]
	009 Move W10, [X1]
	010 Move X8, X0
	011 NotImplemented "Instruction CMP not yet implemented."
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Move X10, -45916160
	014 Move W9, W9
	015 Add X10, X10, 2191
	016 NotImplemented "Instruction ADR not yet implemented."
	017 Move W12, [X10]
	018 Add X11, X11, X12
	019 CallNoReturn X11
	020 Move W0, 1
	021 Move X19, [X8+64]
	022 Compare X19, 0
	023 JumpIfEqual {28}
	024 Add X0, X31, 72
	025 Move W2, 72
	026 Call 0x3EB2AC0
	027 Add X1, X31, 72
	028 Move X19, [X1+64]
	029 Compare X19, 0
	030 JumpIfEqual {38}
	031 Add X0, X31, 0
	032 Move W2, 72
	033 Move X1, X8
	034 Call 0x3EB2AC0
	035 Add X1, X31, 0
	036 Move X0, X19
	037 Call JsonValue.Equals, X0, X1
	038 Move W0, W31
	039 Move W9, [X1+4]
	040 Move W8, [X8+4]
	041 And W9, W9, 1
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X19, 0xC7F000
	044 Move V8, [X8+8]
	045 Move W8, [X19+3706]
	046 Move V9, [X1+8]
	047 Compare W8, 0
	048 JumpIfNotEqual {54}
	049 Move X0, 0x992000
	050 Move X0, [X0+1448]
	051 Call 0x1C17CF4
	052 Move W8, 1
	053 Move [X19+3706], W8
	054 Move X8, 0x992000
	055 Move X8, [X8+1448]
	056 Move X0, [X8]
	057 Move W8, [X0+224]
	058 Compare W8, 0
	059 JumpIfNotEqual {61}
	060 Call 0x1C17DFC
	061 NotImplemented "Instruction FABS not yet implemented."
	062 NotImplemented "Instruction FABS not yet implemented."
	063 Move X0, X31
	064 NotImplemented "Instruction FABD not yet implemented."
	065 Call Math.Max, V0, V1
	066 Move X8, -46612480
	067 Move V1, [X8+3016]
	068 Move X8, 8
	069 Move X0, X31
	070 Multiply D0, D0, D1
	071 Move D1, X8
	072 Call Math.Max, V0, V1
	073 NotImplemented "Instruction FCMP not yet implemented."
	074 NotImplemented "Instruction CSET not yet implemented."
	075 Move X8, [X8+16]
	076 Move X9, [X1+16]
	077 NotImplemented "Instruction CMP not yet implemented."
	078 NotImplemented "Instruction CSET not yet implemented."
	079 Move X9, [X8+40]
	080 NotImplemented "Instruction LDUR not yet implemented."
	081 Add X0, X31, 168
	082 Move W2, 72
	083 Move [X31+160], X9
	084 Move [X31+9], V0
	085 Call 0x3EB2AC0
	086 NotImplemented "Instruction LDUR not yet implemented."
	087 Move X8, [X31+208]
	088 Add X0, X31, 144
	089 Add X1, X31, 240
	090 Move [X31+15], V0
	091 Move [X31+256], X8
	092 Call JsonString.Equals, X0, X1
	093 Move X30, [X31+304]
	094 Move X19, [X31+312]
	095 Move X29, [X31+296]
	096 Move D9, [X31+280]
	097 Move D8, [X31+288]
	098 Move V10, [X31+272]
	099 And W0, W0, 1
	100 Add X31, X31, 320
	101 Return X0
	102 Move X0, [X8+64]
	103 Compare X0, 0
	104 JumpIfEqual {130}
	105 Move X8, [X0]
	106 Move X1, [X1+64]
	107 Move X30, [X31+304]
	108 Move X19, [X31+312]
	109 Move X29, [X31+296]
	110 Move X3, [X8+312]
	111 Move X2, [X8+320]
	112 Move D9, [X31+280]
	113 Move D8, [X31+288]
	114 Move V10, [X31+272]
	115 Add X31, X31, 320
	116 CallNoReturn X3
	117 Move X0, 0x99B000
	118 Move X0, [X0+1880]
	119 Call 0x1C17D08
	120 Call 0x1C17F10
	121 Move X1, X31
	122 Move X19, X0
	123 Call NotImplementedException..ctor, X0
	124 Move X0, 0x9E5000
	125 Move X0, [X0+768]
	126 Call 0x1C17D08
	127 Move X1, X0
	128 Move X0, X19
	129 Call 0x1C17DEC
	130 Call 0x1C17F20

Method: System.Boolean Equals(System.Object obj, UnityEngine.InputSystem.Utilities.JsonParser/JsonValue value)

Disassembly:
	0x03762ACC MOVZ W9, 0x8
	0x03762AD0 LDRB W10, [X0]
	0x03762AD4 SUB W9, W9, W2
	0x03762AD8 MOVZ W11, 0xFF
	0x03762ADC LSRV W9, W11, W9
	0x03762AE0 AND W8, W3, 0xFF
	0x03762AE4 LSLV W9, W9, W1
	0x03762AE8 LSLV W8, W8, W1
	0x03762AEC BIC W9, W10, W9, 0x0
	0x03762AF0 ORR W8, W9, W8, 0x0
	0x03762AF4 STRB W8, [X0]
	0x03762AF8 B 0x3762B60
	0x03762AFC CMP W8, 0x10
	0x03762B00 B.HI 0x3762B34
	0x03762B04 MOVZ W9, 0x10
	0x03762B08 LDRH W10, [X0]
	0x03762B0C SUB W9, W9, W2
	0x03762B10 MOVZ W11, 0xFFFF
	0x03762B14 LSRV W9, W11, W9
	0x03762B18 AND W8, W3, 0xFFFF
	0x03762B1C LSLV W9, W9, W1
	0x03762B20 LSLV W8, W8, W1
	0x03762B24 BIC W9, W10, W9, 0x0
	0x03762B28 ORR W8, W9, W8, 0x0
	0x03762B2C STRH W8, [X0]
	0x03762B30 B 0x3762B60
	0x03762B34 CMP W8, 0x20
	0x03762B38 B.HI 0x3762BE8
	0x03762B3C LDR W10, [X0]
	0x03762B40 SUB W9, W31, W2
	0x03762B44 MOVN W11, 0x0
	0x03762B48 LSRV W9, W11, W9
	0x03762B4C LSLV W9, W9, W1
	0x03762B50 LSLV W8, W3, W1
	0x03762B54 BIC W9, W10, W9, 0x0
	0x03762B58 ORR W8, W9, W8, 0x0
	0x03762B5C STR W8, [X0]
	0x03762B60 LDP X20, X19, [X31 + 0x10]
	0x03762B64 LDR X30, [X31], #0x20
	0x03762B68 RET
	0x03762B6C ADRP X0, 0x996000
	0x03762B70 LDR X0, [X0 + 0x528]
	0x03762B74 BL 0x1C16D08
	0x03762B78 BL 0x1C16F10
	0x03762B7C MOV X19, X0
	0x03762B80 ADRP X0, 0x9C0000
	0x03762B84 LDR X0, [X0 + 0x240]
	0x03762B88 BL 0x1C16D08
	0x03762B8C MOV X1, X0
	0x03762B90 MOV X0, X19
	0x03762B94 MOV X2, X31
	0x03762B98 BL 0x330E100
	0x03762B9C B 0x3762C18
	0x03762BA0 ADRP X0, 0x999000
	0x03762BA4 LDR X0, [X0 + 0x578]
	0x03762BA8 BL 0x1C16D08
	0x03762BAC BL 0x1C16F10
	0x03762BB0 MOV X19, X0
	0x03762BB4 ADRP X0, 0x9E4000
	0x03762BB8 LDR X0, [X0 + 0x320]
	0x03762BBC BL 0x1C16D08
	0x03762BC0 MOV X20, X0
	0x03762BC4 ADRP X0, 0x9E4000
	0x03762BC8 LDR X0, [X0 + 0xF0]
	0x03762BCC BL 0x1C16D08
	0x03762BD0 MOV X2, X0
	0x03762BD4 MOV X0, X19
	0x03762BD8 MOV X1, X20
	0x03762BDC MOV X3, X31
	0x03762BE0 BL 0x330E16C
	0x03762BE4 B 0x3762C18
	0x03762BE8 ADRP X0, 0x99A000
	0x03762BEC LDR X0, [X0 + 0x758]
	0x03762BF0 BL 0x1C16D08
	0x03762BF4 BL 0x1C16F10
	0x03762BF8 MOV X19, X0
	0x03762BFC ADRP X0, 0x9E4000
	0x03762C00 LDR X0, [X0 + 0x328]
	0x03762C04 BL 0x1C16D08
	0x03762C08 MOV X1, X0
	0x03762C0C MOV X0, X19
	0x03762C10 MOV X2, X31
	0x03762C14 BL 0x33802E4
	0x03762C18 ADRP X0, 0x9E4000
	0x03762C1C LDR X0, [X0 + 0x330]
	0x03762C20 BL 0x1C16D08
	0x03762C24 MOV X1, X0
	0x03762C28 MOV X0, X19
	0x03762C2C BL 0x1C16DEC
	0x03762C30 STP X30, X19, [X31 - 0x10]!
	0x03762C34 MOV W19, W2
	0x03762C38 BL 0x375B20C
	0x03762C3C MOVZ W8, 0x1
	0x03762C40 LSLV X8, X8, X19
	0x03762C44 UBFM X8, X8, 0x1, 0x3F
	0x03762C48 SUB W0, W0, W8
	0x03762C4C LDP X30, X19, [X31], #0x10
	0x03762C50 RET
	0x03762C54 MOVZ W8, 0x1
	0x03762C58 LSLV X8, X8, X2
	0x03762C5C UBFM X8, X8, 0x1, 0x3F
	0x03762C60 ADD W3, W8, W3
	0x03762C64 B 0x3762A84
	0x03762C68 STP X30, X19, [X31 - 0x10]!
	0x03762C6C MOV W19, W2
	0x03762C70 BL 0x375B20C
	0x03762C74 CBZ W0, 0x3762CA4
	0x03762C78 MOVN X8, 0x0
	0x03762C7C LSLV X8, X8, X19
	0x03762C80 ORN W8, W31, W8, 0x0
	0x03762C84 CMP W0, W8
	0x03762C88 FMOV S0, 1
	0x03762C8C B.CS 0x3762CA8
	0x03762C90 UCVTF D0, W0
	0x03762C94 UCVTF D1, W8
	0x03762C98 FDIV D0, D0, D1
	0x00000000 INVALID
	0x03762CA0 B 0x3762CA8
	0x03762CA4 FMOV S0, W31
	0x03762CA8 LDP X30, X19, [X31], #0x10
	0x03762CAC RET
	0x03762CB0 FCMP S0, 0x0
	0x03762CB4 B.LS 0x3762CF8
	0x03762CB8 MOVN X8, 0x0
	0x03762CBC FMOV S1, 1
	0x03762CC0 LSLV X8, X8, X2
	0x03762CC4 FCMP S0, S1
	0x03762CC8 ORN W3, W31, W8, 0x0
	0x03762CCC B.GE 0x3762CF4
	0x03762CD0 FCVT S0, S0
	0x03762CD4 UCVTF D1, W3
	0x03762CD8 FMOV D2, X31
	0x03762CDC FMUL D0, D0, D1
	0x03762CE0 FADD D0, D0, D2
	0x03762CE4 FCVTZS W8, D0
	0x03762CE8 FCVTZU W9, D0
	0x03762CEC FCMP D0, 0x0
	0x03762CF0 CSEL W3, W8, W9, MI
	0x03762CF4 B 0x3762A84
	0x03762CF8 MOV W3, W31
	0x03762CFC B 0x3762A84
	0x03762D00 STR X30, [X31 - 0x20]!
	0x03762D04 STP X20, X19, [X31 + 0x10]
	0x03762D08 CBZ X0, 0x3762DD8
	0x03762D0C TBNZ X3, 0x1F, 0x3762E08
	0x03762D10 TBNZ X2, 0x1F, 0x3762E38
	0x03762D14 TBNZ X1, 0x1F, 0x3762E68
	0x03762D18 UBFM W8, W2, 0x3, 0x1F
	0x03762D1C CMP W2, 0x8
	0x03762D20 CSEL W8, W31, W8, LT
	0x03762D24 AND W9, W2, 0x7
	0x03762D28 ADD W8, W8, W1
	0x03762D2C CSEL W9, W2, W9, LT
	0x03762D30 ADD X8, X0, W8, SXTW
	0x03762D34 CBZ W9, 0x3762D78
	0x03762D38 ADD W11, W9, W3
	0x03762D3C MOVZ W12, 0x8
	0x03762D40 MOVZ W10, 0xFF
	0x03762D44 LDRB W13, [X8]
	0x03762D48 SUB W12, W12, W11
	0x03762D4C CMP W11, 0x7
	0x03762D50 LSRV W12, W10, W12
	0x03762D54 LSLV W9, W10, W9
	0x03762D58 CSEL W10, W10, W12, GT
	0x03762D5C AND W9, W10, W9, 0x0
	0x03762D60 ANDS W31, W4, 0x1
	0x03762D64 BIC W10, W13, W9, 0x0
	0x03762D68 ORR W9, W13, W9, 0x0
	0x03762D6C CSEL W9, W9, W10, NE
	0x03762D70 STRB W9, [X8], #0x1
	0x03762D74 SUB W3, W11, 0x8
	0x03762D78 CMP W3, 0x8
	0x03762D7C B.LT 0x3762D94
	0x03762D80 SBFM W9, W4, 0x0, 0x0
	0x03762D84 STRB W9, [X8], #0x1
	0x03762D88 CMP W3, 0xF
	0x03762D8C SUB W3, W3, 0x8
	0x03762D90 B.GT 0x3762D84
	0x03762D94 CMP W3, 0x1
	0x03762D98 B.LT 0x3762DCC
	0x03762D9C LDRB W10, [X8]
	0x03762DA0 MOVZ W9, 0x8
	0x03762DA4 MOVN W11, 0xFF
	0x03762DA8 MOVZ W12, 0xFF
	0x03762DAC SUB W9, W9, W3
	0x03762DB0 ASRV W11, W11, W9
	0x03762DB4 LSRV W9, W12, W9
	0x03762DB8 AND W11, W10, W11, 0x0
	0x03762DBC ORR W9, W10, W9, 0x0
	0x03762DC0 ANDS W31, W4, 0x1
	0x03762DC4 CSEL W9, W9, W11, NE
	0x03762DC8 STRB W9, [X8]
	0x03762DCC LDP X20, X19, [X31 + 0x10]
	0x03762DD0 LDR X30, [X31], #0x20
	0x03762DD4 RET
	0x03762DD8 ADRP X0, 0x999000
	0x03762DDC LDR X0, [X0 + 0x578]
	0x03762DE0 BL 0x1C16D08
	0x03762DE4 BL 0x1C16F10
	0x03762DE8 MOV X19, X0
	0x03762DEC ADRP X0, 0x9E4000
	0x03762DF0 LDR X0, [X0 + 0x338]
	0x03762DF4 BL 0x1C16D08
	0x03762DF8 MOV X20, X0
	0x03762DFC ADRP X0, 0x9BC000
	0x03762E00 LDR X0, [X0 + 0xF48]
	0x03762E04 B 0x3762E94
	0x03762E08 ADRP X0, 0x999000
	0x03762E0C LDR X0, [X0 + 0x578]
	0x03762E10 BL 0x1C16D08
	0x03762E14 BL 0x1C16F10
	0x03762E18 MOV X19, X0
	0x03762E1C ADRP X0, 0x9E4000
	0x03762E20 LDR X0, [X0 + 0x340]
	0x03762E24 BL 0x1C16D08
	0x03762E28 MOV X20, X0
	0x03762E2C ADRP X0, 0x9E4000
	0x03762E30 LDR X0, [X0 + 0x348]
	0x03762E34 B 0x3762E94
	0x03762E38 ADRP X0, 0x999000
	0x03762E3C LDR X0, [X0 + 0x578]
	0x03762E40 BL 0x1C16D08
	0x03762E44 BL 0x1C16F10
	0x03762E48 MOV X19, X0
	0x03762E4C ADRP X0, 0x9E4000
	0x03762E50 LDR X0, [X0 + 0x350]
	0x03762E54 BL 0x1C16D08
	0x03762E58 MOV X20, X0
	0x03762E5C ADRP X0, 0x9E4000
	0x03762E60 LDR X0, [X0 + 0x358]
	0x03762E64 B 0x3762E94
	0x03762E68 ADRP X0, 0x999000
	0x03762E6C LDR X0, [X0 + 0x578]
	0x03762E70 BL 0x1C16D08
	0x03762E74 BL 0x1C16F10
	0x03762E78 MOV X19, X0
	0x03762E7C ADRP X0, 0x9E4000
	0x03762E80 LDR X0, [X0 + 0x360]
	0x03762E84 BL 0x1C16D08
	0x03762E88 MOV X20, X0
	0x03762E8C ADRP X0, 0x9E4000
	0x03762E90 LDR X0, [X0 + 0x368]
	0x03762E94 BL 0x1C16D08
	0x03762E98 MOV X2, X0
	0x03762E9C MOV X0, X19
	0x03762EA0 MOV X1, X20
	0x03762EA4 MOV X3, X31
	0x03762EA8 BL 0x330E16C
	0x03762EAC ADRP X0, 0x9E4000
	0x03762EB0 LDR X0, [X0 + 0x370]
	0x03762EB4 BL 0x1C16D08
	0x03762EB8 MOV X1, X0
	0x03762EBC MOV X0, X19
	0x03762EC0 BL 0x1C16DEC
	0x03762EC4 STR X30, [X31 - 0x30]!
	0x03762EC8 STP X22, X21, [X31 + 0x10]
	0x03762ECC STP X20, X19, [X31 + 0x20]
	0x03762ED0 ADRP X21, 0xC7E000
	0x03762ED4 ADRP X22, 0x991000
	0x03762ED8 LDRB W8, [X21 + 0xE62]
	0x03762EDC LDR X22, [X22 + 0x5A8]
	0x03762EE0 MOV W20, W1
	0x03762EE4 MOV W19, W0
	0x03762EE8 TBNZ X8, 0x0, 0x3762F00
	0x03762EEC ADRP X0, 0x991000
	0x03762EF0 LDR X0, [X0 + 0x5A8]
	0x03762EF4 BL 0x1C16CF4
	0x03762EF8 MOVZ W8, 0x1
	0x03762EFC STRB W8, [X21 + 0xE62]
	0x03762F00 LDR X0, [X22]
	0x03762F04 LDR W8, [X0 + 0xE0]
	0x03762F08 CBNZ W8, 0x3762F10
	0x03762F0C BL 0x1C16DFC
	0x03762F10 MOVZ W0, 0x8
	0x03762F14 MOV W1, W20
	0x03762F18 MOV X2, X31
	0x03762F1C BL 0x337EEEC
	0x03762F20 UDIV W8, W19, W0
	0x03762F24 ADD W9, W0, W19
	0x03762F28 MSUB W8, W8, W0, W19
	0x03762F2C SUB W9, W9, W8
	0x03762F30 CMP W8, 0x0
	0x03762F34 CSEL W0, W19, W9, EQ
	0x03762F38 LDP X20, X19, [X31 + 0x20]
	0x03762F3C LDP X22, X21, [X31 + 0x10]
	0x03762F40 LDR X30, [X31], #0x30
	0x03762F44 RET
	0x03762F48 LDR W8, [X0 + 0x4]
	0x03762F4C CMP W8, 0x0
	0x03762F50 CSET W0, EQ
	0x03762F54 RET
	0x03762F58 STP W1, W2, [X0]
	0x03762F5C RET
	0x03762F60 ADD W8, W2, W1, 0x3, LSL
	0x03762F64 STP W8, W3, [X0]
	0x03762F68 RET
	0x03762F6C STR X30, [X31 - 0x30]!
	0x03762F70 STP X22, X21, [X31 + 0x10]
	0x03762F74 STP X20, X19, [X31 + 0x20]
	0x03762F78 ADRP X22, 0xC7E000
	0x03762F7C LDRB W8, [X22 + 0xE63]
	0x03762F80 MOV X19, X1
	0x03762F84 MOV X20, X0
	0x03762F88 UBFM X21, X1, 0x20, 0x3F
	0x03762F8C TBNZ X8, 0x0, 0x3762FA4
	0x03762F90 ADRP X0, 0x991000
	0x03762F94 LDR X0, [X0 + 0x5A8]
	0x03762F98 BL 0x1C16CF4
	0x03762F9C MOVZ W8, 0x1
	0x03762FA0 STRB W8, [X22 + 0xE63]
	0x03762FA4 LDR W9, [X20]
	0x03762FA8 ADD W21, W21, W19
	0x03762FAC MOV X8, X31
	0x03762FB0 CMP W21, W9
	0x03762FB4 B.LS 0x376301C
	0x03762FB8 LDR W10, [X20 + 0x4]
	0x03762FBC ADD W22, W10, W9
	0x03762FC0 CMP W22, W19
	0x03762FC4 MOV X9, X8
	0x03762FC8 B.LS 0x3763020
	0x03762FCC ADRP X8, 0x991000
	0x03762FD0 LDR X8, [X8 + 0x5A8]
	0x03762FD4 LDR X0, [X8]
	0x03762FD8 LDR W8, [X0 + 0xE0]
	0x03762FDC CBNZ W8, 0x3762FE4
	0x03762FE0 BL 0x1C16DFC
	0x03762FE4 MOV W0, W22
	0x03762FE8 MOV W1, W21
	0x03762FEC MOV X2, X31
	0x03762FF0 BL 0x337EEEC
	0x03762FF4 LDR W8, [X20]
	0x03762FF8 MOV W20, W0
	0x03762FFC MOV W1, W19
	0x03763000 MOV X2, X31
	0x03763004 MOV W0, W8
	0x03763008 BL 0x337EE48
	0x0376300C SUB W8, W20, W0
	0x03763010 UBFM X8, X8, 0x20, 0x1F
	0x03763014 MOV W9, W0
	0x03763018 B 0x3763020
	0x0376301C MOV X9, X8
	0x03763020 LDP X20, X19, [X31 + 0x20]
	0x03763024 LDP X22, X21, [X31 + 0x10]
	0x03763028 ORR X0, X9, X8, 0x0
	0x0376302C LDR X30, [X31], #0x30
	0x03763030 RET
	0x03763034 LDR X0, [X0]
	0x03763038 RET
	0x0376303C STR X1, [X0]
	0x03763040 RET
	0x03763044 LDP X8, X1, [X0 + 0x8]
	0x03763048 MOV X0, X8
	0x0376304C RET
	0x03763050 STP X1, X2, [X0 + 0x8]
	0x03763054 RET
	0x03763058 SUB X31, X31, 0x50
	0x0376305C STR X30, [X31 + 0x10]
	0x03763060 STP X24, X23, [X31 + 0x20]
	0x03763064 STP X22, X21, [X31 + 0x30]
	0x03763068 STP X20, X19, [X31 + 0x40]
	0x0376306C ADRP X20, 0xC7D000
	0x03763070 LDRB W8, [X20 + 0xE64]
	0x03763074 MOV X19, X0
	0x03763078 TBNZ X8, 0x0, 0x37630FC
	0x0376307C ADRP X0, 0x9E3000
	0x03763080 LDR X0, [X0 + 0x378]
	0x03763084 BL 0x1C16CF4
	0x03763088 ADRP X0, 0x990000
	0x0376308C LDR X0, [X0 + 0xEB8]
	0x03763090 BL 0x1C16CF4
	0x03763094 ADRP X0, 0x9E3000
	0x03763098 LDR X0, [X0 + 0x380]
	0x0376309C BL 0x1C16CF4
	0x037630A0 ADRP X0, 0x9E3000
	0x037630A4 LDR X0, [X0 + 0x388]
	0x037630A8 BL 0x1C16CF4
	0x037630AC ADRP X0, 0x9E3000
	0x037630B0 LDR X0, [X0 + 0x390]
	0x037630B4 BL 0x1C16CF4
	0x037630B8 ADRP X0, 0x9E3000
	0x037630BC LDR X0, [X0 + 0x398]
	0x037630C0 BL 0x1C16CF4
	0x037630C4 ADRP X0, 0x9E3000
	0x037630C8 LDR X0, [X0 + 0x3A0]
	0x037630CC BL 0x1C16CF4
	0x037630D0 ADRP X0, 0x99B000
	0x037630D4 LDR X0, [X0 + 0x310]
	0x037630D8 BL 0x1C16CF4
	0x037630DC ADRP X0, 0x991000
	0x037630E0 LDR X0, [X0 + 0x608]
	0x037630E4 BL 0x1C16CF4
	0x037630E8 ADRP X0, 0x992000
	0x037630EC LDR X0, [X0 + 0x3A0]
	0x037630F0 BL 0x1C16CF4
	0x037630F4 MOVZ W8, 0x1
	0x037630F8 STRB W8, [X20 + 0xE64]
	0x037630FC LDR X8, [X19 + 0x10]
	0x03763100 UBFM X9, X8, 0x20, 0x3F
	0x03763104 CBNZ X9, 0x3763110
	0x03763108 LDR X0, [X19]
	0x0376310C B 0x3763220
	0x03763110 ADRP X10, 0x9E3000
	0x03763114 LDR X9, [X19 + 0x8]
	0x03763118 LDR X10, [X10 + 0x390]
	0x0376311C ADD X1, X31, 0x0
	0x03763120 STP X9, X8, [X31]
	0x03763124 LDR X0, [X10]
	0x03763128 BL 0x1C16E04
	0x0376312C ADRP X24, 0x9E3000
	0x03763130 LDR X24, [X24 + 0x3A0]
	0x03763134 MOV X20, X0
	0x03763138 LDR X8, [X24]
	0x0376313C LDR W9, [X8 + 0xE0]
	0x03763140 CBNZ W9, 0x3763150
	0x03763144 MOV X0, X8
	0x03763148 BL 0x1C16DFC
	0x0376314C LDR X8, [X24]
	0x03763150 LDR X9, [X8 + 0xB8]
	0x03763154 LDR X22, [X9 + 0x8]
	0x03763158 ADRP X9, 0x992000
	0x0376315C LDR X9, [X9 + 0x3A0]
	0x03763160 LDR X21, [X9]
	0x03763164 CBNZ X22, 0x37631BC
	0x03763168 LDR W9, [X8 + 0xE0]
	0x0376316C CBNZ W9, 0x376317C
	0x03763170 MOV X0, X8
	0x03763174 BL 0x1C16DFC
	0x03763178 LDR X8, [X24]
	0x0376317C ADRP X9, 0x9E3000
	0x03763180 LDR X8, [X8 + 0xB8]
	0x03763184 LDR X9, [X9 + 0x380]
	0x03763188 LDR X23, [X8]
	0x0376318C LDR X0, [X9]
	0x03763190 BL 0x1C16F10
	0x03763194 ADRP X8, 0x9E3000
	0x03763198 LDR X8, [X8 + 0x398]
	0x0376319C MOV X1, X23
	0x037631A0 MOV X3, X31
	0x037631A4 MOV X22, X0
	0x037631A8 LDR X2, [X8]
	0x037631AC BL 0x2D2EA34
	0x037631B0 LDR X8, [X24]
	0x037631B4 LDR X8, [X8 + 0xB8]
	0x037631B8 STR X22, [X8 + 0x8]
	0x037631BC ADRP X8, 0x9E3000
	0x037631C0 LDR X8, [X8 + 0x378]
	0x037631C4 MOV X0, X20
	0x037631C8 MOV X1, X22
	0x037631CC LDR X2, [X8]
	0x037631D0 BL 0x21CE360
	0x037631D4 ADRP X8, 0x990000
	0x037631D8 LDR X8, [X8 + 0xEB8]
	0x037631DC LDR X1, [X8]
	0x037631E0 BL 0x21D577C
	0x037631E4 MOV X1, X0
	0x037631E8 MOV X0, X21
	0x037631EC MOV X2, X31
	0x037631F0 BL 0x3227FF8
	0x037631F4 ADRP X9, 0x99B000
	0x037631F8 ADRP X10, 0x991000
	0x037631FC LDR X8, [X19]
	0x03763200 LDR X9, [X9 + 0x310]
	0x03763204 LDR X10, [X10 + 0x608]
	0x03763208 MOV X2, X0
	0x0376320C MOV X0, X8
	0x03763210 LDR X1, [X9]
	0x03763214 LDR X3, [X10]
	0x03763218 MOV X4, X31
	0x0376321C BL 0x32277C4
	0x03763220 LDP X20, X19, [X31 + 0x40]
	0x03763224 LDP X22, X21, [X31 + 0x30]
	0x03763228 LDP X24, X23, [X31 + 0x20]
	0x0376322C LDR X30, [X31 + 0x10]
	0x03763230 ADD X31, X31, 0x50
	0x03763234 RET
	0x03763238 STR X30, [X31 - 0x20]!
	0x0376323C STP X20, X19, [X31 + 0x10]
	0x03763240 ADRP X20, 0xC7D000
	0x03763244 LDRB W8, [X20 + 0xE65]
	0x03763248 MOV X19, X0
	0x0376324C TBNZ X8, 0x0, 0x3763264
	0x03763250 ADRP X0, 0x9E3000
	0x03763254 LDR X0, [X0 + 0x3A8]
	0x03763258 BL 0x1C16CF4
	0x0376325C MOVZ W8, 0x1
	0x03763260 STRB W8, [X20 + 0xE65]
	0x03763264 ADD X1, X31, 0x8
	0x03763268 MOV X0, X19
	0x0376326C STR X31, [X31 + 0x8]
	0x03763270 BL 0x37632E4
	0x03763274 TBZ X0, 0x0, 0x3763280
	0x03763278 ADD X8, X31, 0x8
	0x0376327C B 0x37632D4
	0x03763280 ADRP X8, 0x9E3000
	0x03763284 LDR X8, [X8 + 0x3A8]
	0x03763288 LDR X19, [X8]
	0x0376328C LDR X8, [X19 + 0x38]
	0x03763290 CBNZ X8, 0x37632A0
	0x03763294 MOV X0, X19
	0x03763298 BL 0x1C5C6E0
	0x0376329C LDR X8, [X19 + 0x38]
	0x037632A0 LDR X0, [X8 + 0x10]
	0x037632A4 LDRB W8, [X0 + 0x135]
	0x037632A8 TBNZ X8, 0x0, 0x37632B0
	0x037632AC BL 0x1C5C684
	0x037632B0 LDR W8, [X0 + 0xE0]
	0x037632B4 CBNZ W8, 0x37632BC
	0x037632B8 BL 0x1C16DFC
	0x037632BC LDR X8, [X19 + 0x38]
	0x037632C0 LDR X0, [X8 + 0x10]
	0x037632C4 LDRB W8, [X0 + 0x135]
	0x037632C8 TBNZ X8, 0x0, 0x37632D0
	0x037632CC BL 0x1C5C684
	0x037632D0 LDR X8, [X0 + 0xB8]
	0x037632D4 LDR X0, [X8]
	0x037632D8 LDP X20, X19, [X31 + 0x10]
	0x037632DC LDR X30, [X31], #0x20
	0x037632E0 RET
	0x037632E4 SUB X31, X31, 0xA0
	0x037632E8 STP X30, X25, [X31 + 0x60]
	0x037632EC STP X24, X23, [X31 + 0x70]
	0x037632F0 STP X22, X21, [X31 + 0x80]
	0x037632F4 STP X20, X19, [X31 + 0x90]
	0x037632F8 ADRP X21, 0xC7D000
	0x037632FC LDRB W8, [X21 + 0xE66]
	0x03763300 MOV X19, X1
	0x03763304 MOV X20, X0
	0x03763308 TBNZ X8, 0x0, 0x3763344
	0x0376330C ADRP X0, 0x9E3000
	0x03763310 LDR X0, [X0 + 0x3B0]
	0x03763314 BL 0x1C16CF4
	0x03763318 ADRP X0, 0x9E3000
	0x0376331C LDR X0, [X0 + 0x3B8]
	0x03763320 BL 0x1C16CF4
	0x03763324 ADRP X0, 0x9E3000
	0x03763328 LDR X0, [X0 + 0x3C0]
	0x0376332C BL 0x1C16CF4
	0x03763330 ADRP X0, 0x9E3000
	0x03763334 LDR X0, [X0 + 0x3C8]
	0x03763338 BL 0x1C16CF4
	0x0376333C MOVZ W8, 0x1
	0x03763340 STRB W8, [X21 + 0xE66]
	0x03763344 CBZ X20, 0x37634AC
	0x03763348 MOV X0, X20
	0x0376334C MOV X1, X31
	0x03763350 BL 0x322B8DC
	0x03763354 MOV X1, X31

ISIL:
	001 Move [X31-80], D10
	002 Move [X31+16], D9
	003 Move [X31+24], D8
	004 Move [X31+32], X29
	005 Move [X31+40], X30
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Subtract X31, X31, 432
	011 Move X21, 0xC7F000
	012 Move W8, [X21+3677]
	013 Move X19, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {66}
	019 Move X0, 0x992000
	020 Move X0, [X0+2904]
	021 Call 0x1C17CF4
	022 Move X0, 0x99B000
	023 Move X0, [X0+2536]
	024 Call 0x1C17CF4
	025 Move X0, 0x995000
	026 Move X0, [X0+2424]
	027 Call 0x1C17CF4
	028 Move X0, 0x992000
	029 Move X0, [X0+3576]
	030 Call 0x1C17CF4
	031 Move X0, 0x992000
	032 Move X0, [X0+1880]
	033 Call 0x1C17CF4
	034 Move X0, 0x994000
	035 Move X0, [X0+2656]
	036 Call 0x1C17CF4
	037 Move X0, 0x99A000
	038 Move X0, [X0+1536]
	039 Call 0x1C17CF4
	040 Move X0, 0x992000
	041 Move X0, [X0+2704]
	042 Call 0x1C17CF4
	043 Move X0, 0x994000
	044 Move X0, [X0+632]
	045 Call 0x1C17CF4
	046 Move X0, 0x99C000
	047 Move X0, [X0+4088]
	048 Call 0x1C17CF4
	049 Move X0, 0x99D000
	050 Move X0, [X0]
	051 Call 0x1C17CF4
	052 Move X0, 0x9C6000
	053 Move X0, [X0+4088]
	054 Call 0x1C17CF4
	055 Move X0, 0x9B6000
	056 Move X0, [X0+3776]
	057 Call 0x1C17CF4
	058 Move X0, 0x9C7000
	059 Move X0, [X0]
	060 Call 0x1C17CF4
	061 Move X0, 0x994000
	062 Move X0, [X0+1200]
	063 Call 0x1C17CF4
	064 Move W8, 1
	065 Move [X21+3677], W8
	066 Move [X31+392], X31
	067 Move [X31+400], X31
	068 Move [X31+388], W31
	069 Move [X31+376], X31
	070 Move [X31+372], W31
	071 Move [X31+360], X31
	072 Compare X20, 0
	073 JumpIfEqual {414}
	074 Move X9, 0x99A000
	075 Move X9, [X9+1536]
	076 Move X8, [X20]
	077 Move X9, [X9]
	078 Move W11, [X8+304]
	079 Move W10, [X9+304]
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Move X11, [X8+200]
	082 Add X10, X11, X10
	083 NotImplemented "Instruction LDUR not yet implemented."
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Move X9, 0x994000
	086 Move X9, [X9+632]
	087 Add X21, X31, 288
	088 Move X9, [X9]
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Move X9, 0x992000
	091 Move X9, [X9+2704]
	092 Move X9, [X9]
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Move X9, 0x995000
	095 Move X9, [X9+2424]
	096 Move X9, [X9]
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Move X9, 0x992000
	099 Move X9, [X9+1880]
	100 Move X9, [X9]
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Move X9, 0x994000
	103 Move X9, [X9+2656]
	104 Move X9, [X9]
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Move X9, 0x992000
	107 Move X9, [X9+2904]
	108 Move X9, [X9]
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Move X22, 0x992000
	111 Move X22, [X22+3576]
	112 Move W11, [X8+304]
	113 Move X9, [X22]
	114 Move W10, [X9+304]
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Move X8, [X8+200]
	117 Add X8, X8, X10
	118 NotImplemented "Instruction LDUR not yet implemented."
	119 NotImplemented "Instruction CMP not yet implemented."
	120 Move W8, [X19]
	121 NotImplemented "Instruction CMP not yet implemented."
	122 NotImplemented "Instruction CMP not yet implemented."
	123 Move X8, 0x99B000
	124 Move X8, [X8+2536]
	125 Move X0, [X8]
	126 Move W8, [X0+224]
	127 Compare W8, 0
	128 JumpIfNotEqual {130}
	129 Call 0x1C17DFC
	130 Move X0, X20
	131 Move X1, X31
	132 Call Convert.ToInt64, X0
	133 Move X8, [X19+16]
	134 NotImplemented "Instruction CMP not yet implemented."
	135 Move W9, [X19]
	136 Subtract W9, W9, 1
	137 NotImplemented "Instruction CMP not yet implemented."
	138 Move X8, -45916160
	139 Add X8, X8, 2200
	140 NotImplemented "Instruction ADR not yet implemented."
	141 NotImplemented "Instruction LDRH not yet implemented."
	142 Add X10, X10, X11
	143 CallNoReturn X10
	144 Move W8, [X19+4]
	145 Move TEMP, X8
	146 And TEMP, TEMP, 1
	147 Compare TEMP, 1
	148 JumpIfEqual {448}
	149 Move X8, 0x9C6000
	150 Move X8, [X8+4088]
	151 Move X0, X20
	152 Move X2, X31
	153 Move X1, [X8]
	154 Call String.op_Equality, X0, X1
	155 Move TEMP, X0
	156 And TEMP, TEMP, 1
	157 Compare TEMP, 1
	158 JumpIfEqual {557}
	159 Move X8, 0x99C000
	160 Move X8, [X8+4088]
	161 Move X0, X20
	162 Move X2, X31
	163 Move X1, [X8]
	164 Call String.op_Equality, X0, X1
	165 Move TEMP, X0
	166 And TEMP, TEMP, 1
	167 Compare TEMP, 1
	168 JumpIfEqual {557}
	169 Move X8, 0x994000
	170 Move X8, [X8+1200]
	171 Move X0, X20
	172 Call 0x1C17E08
	173 Move W8, [X19]
	174 Move V8, [X0]
	175 NotImplemented "Instruction CMP not yet implemented."
	176 NotImplemented "Instruction CMP not yet implemented."
	177 Move X0, X19
	178 Call JsonValue.ToString, X0
	179 Add X1, X31, 388
	180 Move X2, X31
	181 Call Single.TryParse, X0, X1
	182 Move TEMP, X0
	183 And TEMP, TEMP, 1
	184 Compare TEMP, 1
	185 JumpIfNotEqual {414}
	186 Move X19, 0xC78000
	187 Move W8, [X19+1450]
	188 Move V9, [X31+388]
	189 Compare W8, 0
	190 JumpIfNotEqual {196}
	191 Move X0, 0x999000
	192 Move X0, [X0+1208]
	193 Call 0x1C17CF4
	194 Move W8, 1
	195 Move [X19+1450], W8
	196 Move X8, 0x999000
	197 Move X8, [X8+1208]
	198 Move X9, -46624768
	199 Move V0, [X9+576]
	200 NotImplemented "Instruction FABS not yet implemented."
	201 Move X8, [X8]
	202 NotImplemented "Instruction FABS not yet implemented."
	203 NotImplemented "Instruction FCMP not yet implemented."
	204 NotImplemented "Instruction FCSEL not yet implemented."
	205 Move X8, [X8+184]
	206 Multiply S0, S1, S0
	207 Move S1, 8
	208 Move V3, [X8]
	209 Multiply S1, S3, S1
	210 NotImplemented "Instruction FCMP not yet implemented."
	211 NotImplemented "Instruction FCSEL not yet implemented."
	212 NotImplemented "Instruction FABD not yet implemented."
	213 NotImplemented "Instruction FCMP not yet implemented."
	214 Move X0, X19
	215 Call JsonValue.ToString, X0
	216 Move X1, X0
	217 Move X0, X20
	218 Move X2, X31
	219 Call Regex.IsMatch, X0, X1
	220 Move X0, X20
	221 Call 0x1C17E08
	222 Move W8, [X19]
	223 Move V8, [X0]
	224 NotImplemented "Instruction CMP not yet implemented."
	225 NotImplemented "Instruction CMP not yet implemented."
	226 Move X0, X19
	227 Call JsonValue.ToString, X0
	228 Add X1, X31, 376
	229 Move X2, X31
	230 Call Double.TryParse, X0, X1
	231 Move TEMP, X0
	232 And TEMP, TEMP, 1
	233 Compare TEMP, 1
	234 JumpIfNotEqual {414}
	235 Move X19, 0xC7F000
	236 Move W8, [X19+3706]
	237 Move V9, [X31+376]
	238 Compare W8, 0
	239 JumpIfNotEqual {382}
	240 Move X0, 0x992000
	241 Move X0, [X0+1448]
	242 Call 0x1C17CF4
	243 Move W8, 1
	244 Move [X19+3706], W8
	245 Move X0, X20
	246 Call 0x1C17E08
	247 Move W8, [X19]
	248 NotImplemented "Instruction LDRSW not yet implemented."
	249 NotImplemented "Instruction CMP not yet implemented."
	250 NotImplemented "Instruction CMP not yet implemented."
	251 Move X0, X19
	252 Call JsonValue.ToString, X0
	253 Add X1, X31, 372
	254 Move X2, X31
	255 Call Int32.TryParse, X0, X1
	256 Move TEMP, X0
	257 And TEMP, TEMP, 1
	258 Compare TEMP, 1
	259 JumpIfNotEqual {414}
	260 Move W8, [X31+372]
	261 NotImplemented "Instruction CMP not yet implemented."
	262 Move X0, X20
	263 Call 0x1C17E08
	264 Move W8, [X19]
	265 Move X22, [X0]
	266 NotImplemented "Instruction CMP not yet implemented."
	267 NotImplemented "Instruction CMP not yet implemented."
	268 Move X0, X19
	269 Call JsonValue.ToString, X0
	270 Add X1, X31, 360
	271 Move X2, X31
	272 Call Int64.TryParse, X0, X1
	273 Move TEMP, X0
	274 And TEMP, TEMP, 1
	275 Compare TEMP, 1
	276 JumpIfNotEqual {414}
	277 Move X8, [X31+360]
	278 Move X20, 0xC7F000
	279 Move W8, [X20+3706]
	280 Move V9, [X19+8]
	281 Compare W8, 0
	282 JumpIfNotEqual {288}
	283 Move X0, 0x992000
	284 Move X0, [X0+1448]
	285 Call 0x1C17CF4
	286 Move W8, 1
	287 Move [X20+3706], W8
	288 Move X8, 0x992000
	289 Move X8, [X8+1448]
	290 NotImplemented "Instruction FCVT not yet implemented."
	291 Move X8, [X20]
	292 Move X0, X20
	293 Call 0x1C17E08
	294 Move W9, [X19]
	295 Move W8, [X0]
	296 NotImplemented "Instruction CMP not yet implemented."
	297 NotImplemented "Instruction CMP not yet implemented."
	298 Add X0, X31, 288
	299 Move W2, 72
	300 Move X1, X19
	301 Compare W8, 0
	302 JumpIfEqual {514}
	303 Call 0x3EB2AC0
	304 Move X9, 0x99D000
	305 NotImplemented "Instruction LDUR not yet implemented."
	306 Move X8, [X31+328]
	307 Move X9, [X9]
	308 Move X1, X31
	309 Move [X31+14], V0
	310 Move [X31+240], X8
	311 Move X0, [X9]
	312 Call Substring.op_Implicit, X0
	313 Move [X31+408], X0
	314 Move [X31+416], X1
	315 Add X0, X31, 224
	316 Add X1, X31, 408
	317 Move [X31+424], X31
	318 Call JsonString.Equals, X0, X1
	319 Move TEMP, X0
	320 And TEMP, TEMP, 1
	321 Compare TEMP, 1
	322 JumpIfEqual {557}
	323 Add X0, X31, 288
	324 Move W2, 72
	325 Move X1, X19
	326 Call 0x3EB2AC0
	327 Move X8, 0x9C7000
	328 Move X8, [X8]
	329 Move X1, X31
	330 Move X0, [X8]
	331 Call Substring.op_Implicit, X0
	332 NotImplemented "Instruction LDUR not yet implemented."
	333 Move X8, [X31+328]
	334 Move [X31+408], X0
	335 Move [X31+416], X1
	336 Add X0, X31, 192
	337 Add X1, X31, 408
	338 Move [X31+12], V0
	339 Move [X31+208], X8
	340 Move [X31+424], X31
	341 Call JsonString.Equals, X0, X1
	342 Move TEMP, X0
	343 And TEMP, TEMP, 1
	344 Compare TEMP, 1
	345 JumpIfEqual {557}
	346 Add X0, X31, 288
	347 Move W2, 72
	348 Move X1, X19
	349 Call 0x3EB2AC0
	350 Move X8, 0x9B5000
	351 Move X8, [X8+3776]
	352 Move X1, X31
	353 Move X0, [X8]
	354 Call Substring.op_Implicit, X0
	355 NotImplemented "Instruction LDUR not yet implemented."
	356 Move X8, [X31+328]
	357 Move [X31+408], X0
	358 Move [X31+416], X1
	359 Move [X31+424], X31
	360 Move [X31+10], V0
	361 Move [X31+176], X8
	362 Add X0, X31, 160
	363 Add X1, X31, 392
	364 Move X0, X20
	365 Move X2, X31
	366 Call Double.TryParse, X0, X1
	367 Move TEMP, X0
	368 And TEMP, TEMP, 1
	369 Compare TEMP, 1
	370 JumpIfNotEqual {414}
	371 Move V8, [X31+392]
	372 Move X20, 0xC7E000
	373 Move W8, [X20+3706]
	374 Move V9, [X19+8]
	375 Compare W8, 0
	376 JumpIfNotEqual {382}
	377 Move X0, 0x991000
	378 Move X0, [X0+1448]
	379 Call 0x1C17CF4
	380 Move W8, 1
	381 Move [X20+3706], W8
	382 Move X8, 0x991000
	383 Move X8, [X8+1448]
	384 Move X0, [X8]
	385 Move W8, [X0+224]
	386 Compare W8, 0
	387 JumpIfNotEqual {389}
	388 Call 0x1C17DFC
	389 NotImplemented "Instruction FABS not yet implemented."
	390 NotImplemented "Instruction FABS not yet implemented."
	391 Move X0, X31
	392 NotImplemented "Instruction FABD not yet implemented."
	393 Call Math.Max, V0, V1
	394 Move X8, -46616576
	395 Move V1, [X8+3016]
	396 Move X8, 8
	397 Move X0, X31
	398 Multiply D0, D0, D1
	399 Move D1, X8
	400 Call Math.Max, V0, V1
	401 NotImplemented "Instruction FCMP not yet implemented."
	402 NotImplemented "Instruction CSET not yet implemented."
	403 Add X1, X31, 400
	404 Move X0, X20
	405 Move X2, X31
	406 Call Int64.TryParse, X0, X1
	407 Move TEMP, X0
	408 And TEMP, TEMP, 1
	409 Compare TEMP, 1
	410 JumpIfNotEqual {414}
	411 Move X8, [X31+400]
	412 Move X9, [X19+16]
	413 NotImplemented "Instruction CMP not yet implemented."
	414 Move W0, W31
	415 And W0, W0, 1
	416 Add X31, X31, 432
	417 Move X20, [X31+64]
	418 Move X19, [X31+72]
	419 Move X22, [X31+48]
	420 Move X21, [X31+56]
	421 Move X29, [X31+32]
	422 Move X30, [X31+40]
	423 Move D9, [X31+16]
	424 Move D8, [X31+24]
	425 Move V10, [X31+80]
	426 Return X0
	427 Add X0, X31, 288
	428 Move W2, 72
	429 Move X1, X19
	430 Call 0x3EB2AC0
	431 NotImplemented "Instruction LDUR not yet implemented."
	432 Move X8, [X31+328]
	433 Move X0, X20
	434 Move X1, X31
	435 Move [X31+16], V0
	436 Move [X31+272], X8
	437 Call Substring.op_Implicit, X0
	438 Move [X31+408], X0
	439 Move [X31+416], X1
	440 Move [X31+424], X31
	441 Add X0, X31, 256
	442 Add X1, X31, 408
	443 Call JsonString.Equals, X0, X1
	444 Move X8, [X20]
	445 Move X8, [X19+16]
	446 NotImplemented "Instruction CMP not yet implemented."
	447 Move X8, [X20]
	448 Move X8, 0x9C6000
	449 Move X8, [X8]
	450 Move X0, X20
	451 Move X2, X31
	452 Move X1, [X8]
	453 Call String.op_Equality, X0, X1
	454 Move TEMP, X0
	455 And TEMP, TEMP, 1
	456 Compare TEMP, 1
	457 JumpIfEqual {557}
	458 Move X8, 0x99C000
	459 Move X8, [X8]
	460 Move X0, X20
	461 Move X2, X31
	462 Move X1, [X8]
	463 Call String.op_Equality, X0, X1
	464 Move TEMP, X0
	465 And TEMP, TEMP, 1
	466 Compare TEMP, 1
	467 JumpIfEqual {557}
	468 Move X8, 0x9B5000
	469 Move X8, [X8+3776]
	470 Move X1, [X8]
	471 Move X0, X20
	472 Move X2, X31
	473 Call String.op_Equality, X0, X1
	474 Move X8, [X19+16]
	475 NotImplemented "Instruction CMP not yet implemented."
	476 Move X8, [X20]
	477 Move W9, [X19+4]
	478 And W9, W9, 1
	479 NotImplemented "Instruction CMP not yet implemented."
	480 NotImplemented "Instruction CSET not yet implemented."
	481 Move X8, [X20]
	482 Add X0, X31, 288
	483 Move W2, 72
	484 Move X1, X19
	485 Call 0x3EB2AC0
	486 NotImplemented "Instruction LDUR not yet implemented."
	487 Move X8, [X31+328]
	488 Move X0, X20
	489 Move X1, X31
	490 Move [X31+2], V0
	491 Move [X31+48], X8
	492 Call "il2cpp_vm_object_is_inst", X0
	493 Move X8, [X22]
	494 Move X19, X0
	495 Move W9, [X8+224]
	496 Compare W9, 0
	497 JumpIfNotEqual {500}
	498 Move X0, X8
	499 Call 0x1C17DFC
	500 Move X0, X19
	501 Move X1, X20
	502 Move X2, X31
	503 Call Enum.GetName, X0, X1
	504 Move X1, X31
	505 Call Substring.op_Implicit, X0
	506 Move V0, [X31+2]
	507 Move X8, [X31+48]
	508 Move [X31+408], X0
	509 Move [X31+416], X1
	510 Add X0, X31, 0
	511 Move [X31], V0
	512 Move [X31+16], X8
	513 Move [X31+424], X31
	514 Call 0x3EB2AC0
	515 Move X9, 0x99B000
	516 NotImplemented "Instruction LDUR not yet implemented."
	517 Move X8, [X31+328]
	518 Move X9, [X9+4088]
	519 Move X1, X31
	520 Move [X31+8], V0
	521 Move [X31+144], X8
	522 Move X0, [X9]
	523 Call Substring.op_Implicit, X0
	524 Move [X31+408], X0
	525 Move [X31+416], X1
	526 Add X0, X31, 128
	527 Add X1, X31, 408
	528 Move [X31+424], X31
	529 Call JsonString.Equals, X0, X1
	530 Move TEMP, X0
	531 And TEMP, TEMP, 1
	532 Compare TEMP, 1
	533 JumpIfEqual {557}
	534 Add X0, X31, 288
	535 Move W2, 72
	536 Move X1, X19
	537 Call 0x3EB2AC0
	538 Move X8, 0x9C5000
	539 Move X8, [X8+4088]
	540 Move X1, X31
	541 Move X0, [X8]
	542 Call Substring.op_Implicit, X0
	543 NotImplemented "Instruction LDUR not yet implemented."
	544 Move X8, [X31+328]
	545 Move [X31+408], X0
	546 Move [X31+416], X1
	547 Add X0, X31, 96
	548 Add X1, X31, 408
	549 Move [X31+6], V0
	550 Move [X31+112], X8
	551 Move [X31+424], X31
	552 Call JsonString.Equals, X0, X1
	553 Move TEMP, X0
	554 And TEMP, TEMP, 1
	555 Compare TEMP, 1
	556 JumpIfNotEqual {558}
	557 Move W0, 1
	558 Add X0, X31, 288
	559 Move W2, 72
	560 Move X1, X19
	561 Call 0x3EB2AC0
	562 Move X8, 0x993000
	563 Move X8, [X8+1200]
	564 Move X1, X31
	565 Move X0, [X8]
	566 Call Substring.op_Implicit, X0
	567 NotImplemented "Instruction LDUR not yet implemented."
	568 Move X8, [X31+328]
	569 Move [X31+408], X0
	570 Move [X31+416], X1
	571 Move [X31+424], X31
	572 Move [X31+4], V0
	573 Move [X31+80], X8
	574 Add X0, X31, 64

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x03763358 MOV X20, X0
	0x0376335C BL 0x32277A8
	0x03763360 MOV W21, W0
	0x03763364 TBNZ X0, 0x0, 0x376348C
	0x03763368 LDR X8, [X19]
	0x0376336C CBZ X8, 0x3763398
	0x03763370 LDP W2, W9, [X8 + 0x18]
	0x03763374 ADD W9, W9, 0x1
	0x03763378 CMP W2, 0x1
	0x0376337C STP W31, W9, [X8 + 0x18]
	0x03763380 B.LT 0x37633C0
	0x03763384 LDR X0, [X8 + 0x10]
	0x03763388 MOV W1, W31
	0x0376338C MOV X3, X31
	0x03763390 BL 0x339FA34
	0x03763394 B 0x37633C0
	0x03763398 ADRP X8, 0x9E3000
	0x0376339C LDR X8, [X8 + 0x3C8]
	0x037633A0 LDR X0, [X8]
	0x037633A4 BL 0x1C16F10
	0x037633A8 ADRP X8, 0x9E3000
	0x037633AC LDR X8, [X8 + 0x3C0]
	0x037633B0 MOV X22, X0
	0x037633B4 LDR X1, [X8]
	0x037633B8 BL 0x3003908
	0x037633BC STR X22, [X19]
	0x037633C0 STR W31, [X31 + 0x1C]
	0x037633C4 CBZ X20, 0x37634AC
	0x037633C8 LDR W23, [X20 + 0x10]
	0x037633CC CMP W23, 0x1
	0x037633D0 B.LT 0x376348C
	0x037633D4 ADRP X24, 0x9E3000
	0x037633D8 LDR X24, [X24 + 0x3B0]
	0x037633DC MOVZ W25, 0x18
	0x037633E0 LDR X22, [X19]
	0x037633E4 ADD X8, X31, 0x0

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+80], X30
	003 Move [X31+88], X21
	004 Move [X31+96], X20
	005 Move [X31+104], X19
	006 Move X21, 0xC7E000
	007 Move W8, [X21+3678]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x9BC000
	015 Move X0, [X0+2232]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3678], W8
	019 Compare X20, 0
	020 JumpIfEqual {26}
	021 Move X8, 0x9BC000
	022 Move X8, [X8+2232]
	023 Move X9, [X20]
	024 Move X8, [X8]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move W0, W31
	027 Move X0, X20
	028 Call 0x1C17E08
	029 Move X1, X0
	030 Add X0, X31, 8
	031 Move W2, 72
	032 Call 0x3EB2AC0
	033 Add X1, X31, 8
	034 Move X0, X19
	035 Call JsonValue.Equals, X0, X1
	036 Move X20, [X31+96]
	037 Move X19, [X31+104]
	038 Move X30, [X31+80]
	039 Move X21, [X31+88]
	040 And W0, W0, 1
	041 Add X31, X31, 112
	042 Return X0

Method: System.Int32 GetHashCode()

Disassembly:
	0x037633E8 ADD X1, X31, 0x1C
	0x037633EC MOV X0, X20
	0x037633F0 MOV W2, W31
	0x037633F4 BL 0x37634B0
	0x037633F8 CBZ X22, 0x37634AC
	0x037633FC LDR V0, [X31]
	0x03763400 LDR X8, [X31 + 0x10]
	0x03763404 LDR X10, [X24]
	0x03763408 STR V0, [X31 + 0x2]
	0x0376340C STR X8, [X31 + 0x30]
	0x03763410 LDR W9, [X22 + 0x1C]
	0x03763414 LDR X8, [X22 + 0x10]
	0x03763418 ADD W9, W9, 0x1
	0x0376341C STR W9, [X22 + 0x1C]
	0x03763420 CBZ X8, 0x37634AC
	0x03763424 LDRSW X9, [X22 + 0x18]
	0x03763428 LDR W11, [X8 + 0x18]
	0x0376342C CMP W9, W11
	0x03763430 B.CS 0x3763458
	0x03763434 ADD W10, W9, 0x1
	0x03763438 STR W10, [X22 + 0x18]
	0x0376343C LDR X10, [X31 + 0x30]
	0x03763440 LDR V0, [X31 + 0x2]
	0x03763444 NOP
	0x03763448 MADD X8, X9, X25, X8
	0x0376344C STR X10, [X8 + 0x30]
	0x03763450 STR V0, [X8 + 0x2]
	0x03763454 B 0x3763480
	0x03763458 LDR X8, [X10 + 0x20]
	0x0376345C LDR V0, [X31 + 0x2]
	0x03763460 LDR X9, [X31 + 0x30]
	0x03763464 ADD X1, X31, 0x40
	0x03763468 LDR X8, [X8 + 0xC0]
	0x0376346C MOV X0, X22
	0x03763470 LDR X2, [X8 + 0x70]
	0x03763474 STR V0, [X31 + 0x4]
	0x03763478 STR X9, [X31 + 0x50]
	0x0376347C BL 0x30041AC
	0x03763480 LDR W8, [X31 + 0x1C]
	0x03763484 CMP W8, W23
	0x03763488 B.LT 0x37633E0
	0x0376348C ORN W8, W31, W21, 0x0
	0x03763490 LDP X20, X19, [X31 + 0x90]
	0x03763494 LDP X22, X21, [X31 + 0x80]
	0x03763498 LDP X24, X23, [X31 + 0x70]
	0x0376349C LDP X30, X25, [X31 + 0x60]
	0x037634A0 AND W0, W8, 0x1
	0x037634A4 ADD X31, X31, 0xA0
	0x037634A8 RET
	0x037634AC BL 0x1C16F20
	0x037634B0 SUB X31, X31, 0x60
	0x037634B4 STP X30, X27, [X31 + 0x10]
	0x037634B8 STP X26, X25, [X31 + 0x20]
	0x037634BC STP X24, X23, [X31 + 0x30]
	0x037634C0 STP X22, X21, [X31 + 0x40]
	0x037634C4 STP X20, X19, [X31 + 0x50]
	0x037634C8 ADRP X22, 0xC7D000
	0x037634CC LDRB W9, [X22 + 0xE67]
	0x037634D0 MOV W23, W2
	0x037634D4 MOV X21, X1
	0x037634D8 MOV X19, X0
	0x037634DC MOV X20, X8
	0x037634E0 TBNZ X9, 0x0, 0x3763510
	0x037634E4 ADRP X0, 0x992000
	0x037634E8 LDR X0, [X0 + 0x170]
	0x037634EC BL 0x1C16CF4
	0x037634F0 ADRP X0, 0x9E3000
	0x037634F4 LDR X0, [X0 + 0x3D0]
	0x037634F8 BL 0x1C16CF4
	0x037634FC ADRP X0, 0x992000
	0x03763500 LDR X0, [X0 + 0x3A0]
	0x03763504 BL 0x1C16CF4
	0x03763508 MOVZ W8, 0x1
	0x0376350C STRB W8, [X22 + 0xE67]
	0x03763510 CBZ X19, 0x3763794
	0x03763514 LDR W25, [X19 + 0x10]
	0x03763518 LDR W22, [X21]
	0x0376351C CMP W22, W25
	0x03763520 B.GE 0x3763578
	0x03763524 ADRP X24, 0x992000
	0x03763528 LDR X24, [X24 + 0x170]
	0x0376352C MOV X0, X19
	0x03763530 MOV W1, W22

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0xC7E000
	011 Move X21, 0x991000
	012 Move W8, [X20+3679]
	013 Move X21, [X21+2904]
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0x991000
	020 Move X0, [X0+2904]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X20+3679], W8
	024 Move X20, X19
	025 Move W25, [X20+4]
	026 Move X0, [X21]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X0, X20
	032 Move X1, X31
	033 Call Boolean.GetHashCode, X0
	034 Move X8, [X19+8]
	035 Move W20, W0
	036 Add X0, X19, 16
	037 Move X1, X31
	038 Subtract X9, X31, X8
	039 And X10, X8, 0x7FFFFFFFFFFFFFFF
	040 And X31, X9, 0x7FFFFFFFFFFFFFFF
	041 NotImplemented "Instruction CSEL not yet implemented."
	042 Call Int64.GetHashCode, X0
	043 Move W21, W0
	044 Add X0, X19, 24
	045 Call JsonString.GetHashCode, X0
	046 Move X8, [X19+48]
	047 Move W22, W0
	048 Compare X8, 0
	049 JumpIfEqual {56}
	050 Move X9, [X8]
	051 Move X0, X8
	052 Move X10, [X9+344]
	053 Move X1, [X9+352]
	054 NotImplemented "Instruction BLR not yet implemented."
	055 Move W23, W0
	056 Move W23, W31
	057 Move X0, [X19+56]
	058 Compare X0, 0
	059 JumpIfEqual {65}
	060 Move X8, [X0]
	061 Move X9, [X8+344]
	062 Move X1, [X8+352]
	063 NotImplemented "Instruction BLR not yet implemented."
	064 Move W24, W0
	065 Move W24, W31
	066 Move X0, [X19+64]
	067 Compare X0, 0
	068 JumpIfEqual {73}
	069 Move X8, [X0]
	070 Move X9, [X8+344]
	071 Move X1, [X8+352]
	072 NotImplemented "Instruction BLR not yet implemented."
	073 Move W8, 397
	074 Multiply W9, W25, W8
	075 Xor W9, W20, W9
	076 Move X10, X26
	077 ShiftRight X10, 32
	078 And X10, X10, 0x7FFFFFFF
	079 Multiply W9, W9, W8
	080 Xor W10, W10, W26
	081 Xor W9, W9, W10
	082 Multiply W9, W9, W8
	083 Xor W9, W9, W21
	084 Multiply W9, W9, W8
	085 Xor W9, W9, W22
	086 Multiply W9, W9, W8
	087 Xor W9, W23, W9
	088 Multiply W9, W9, W8
	089 Xor W9, W24, W9
	090 Move X20, [X31+64]
	091 Move X19, [X31+72]
	092 Move X22, [X31+48]
	093 Move X21, [X31+56]
	094 Move X24, [X31+32]
	095 Move X23, [X31+40]
	096 Move X26, [X31+16]
	097 Move X25, [X31+24]
	098 Multiply W8, W9, W8
	099 Xor W0, W0, W8
	100 Move X30, [X31+80]
	101 Return X0

Method: System.Boolean op_Equality(UnityEngine.InputSystem.Utilities.JsonParser/JsonValue left, UnityEngine.InputSystem.Utilities.JsonParser/JsonValue right)

Disassembly:
	0x03760F54 AND W0, W9, W8, 0x0
	0x03760F58 LDP X20, X19, [X31 + 0x40]
	0x03760F5C LDP X22, X21, [X31 + 0x30]
	0x03760F60 LDP X24, X23, [X31 + 0x20]
	0x03760F64 LDP X26, X25, [X31 + 0x10]
	0x03760F68 LDP X30, X27, [X31], #0x50
	0x03760F6C RET
	0x03760F70 SUB X31, X31, 0x40
	0x03760F74 STP X30, X21, [X31 + 0x20]
	0x03760F78 STP X20, X19, [X31 + 0x30]
	0x03760F7C ADRP X21, 0xC80000
	0x03760F80 LDRB W8, [X21 + 0xE57]
	0x03760F84 MOV X20, X1

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+80], X30
	003 Move [X31+88], X19
	004 Move X19, X0
	005 Add X0, X31, 8
	006 Move W2, 72
	007 Call 0x3EB2AC0
	008 Add X1, X31, 8
	009 Move X0, X19
	010 Call JsonValue.Equals, X0, X1
	011 Move X30, [X31+80]
	012 Move X19, [X31+88]
	013 And W0, W0, 1
	014 Add X31, X31, 96
	015 Return X0

Method: System.Boolean op_Inequality(UnityEngine.InputSystem.Utilities.JsonParser/JsonValue left, UnityEngine.InputSystem.Utilities.JsonParser/JsonValue right)

Disassembly:
	0x03763534 MOV X2, X31
	0x03763538 BL 0x3222A1C
	0x0376353C LDR X8, [X24]
	0x03763540 MOV W22, W0
	0x03763544 LDR W9, [X8 + 0xE0]
	0x03763548 CBNZ W9, 0x3763554
	0x0376354C MOV X0, X8
	0x03763550 BL 0x1C16DFC
	0x03763554 MOV W0, W22
	0x03763558 MOV X1, X31
	0x0376355C BL 0x3317FCC
	0x03763560 LDR W22, [X21]
	0x03763564 TBZ X0, 0x0, 0x3763578
	0x03763568 ADD W22, W22, 0x1

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+80], X30
	003 Move [X31+88], X19
	004 Move X19, X0
	005 Add X0, X31, 8
	006 Move W2, 72
	007 Call 0x3EB2AC0
	008 Add X1, X31, 8
	009 Move X0, X19
	010 Call JsonValue.Equals, X0, X1
	011 Move X30, [X31+80]
	012 Move X19, [X31+88]
	013 NotImplemented "Instruction ORN not yet implemented."
	014 And W0, W8, 1
	015 Add X31, X31, 96
	016 Return X0

