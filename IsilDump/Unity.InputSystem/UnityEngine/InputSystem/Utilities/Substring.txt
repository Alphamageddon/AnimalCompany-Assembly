Type: UnityEngine.InputSystem.Utilities.Substring

Method: System.Boolean get_isEmpty()

Disassembly:
	0x03769760 MOV X1, X0
	0x03769764 MOV X0, X19
	0x03769768 MOV X2, X31
	0x0376976C BL 0x3316014

ISIL:
	001 Move W8, [X0+12]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.Void .ctor(System.String str)

Disassembly:
	0x03769770 ADRP X0, 0x9DD000
	0x03769774 LDR X0, [X0 + 0x650]
	0x03769778 BL 0x1C16D08
	0x0376977C MOV X1, X0
	0x03769780 MOV X0, X19
	0x03769784 BL 0x1C16DEC
	0x03769788 STP X30, X23, [X31 - 0x30]!
	0x0376978C STP X22, X21, [X31 + 0x10]

ISIL:
	001 Move [X0], X1
	002 Move [X0+8], W31
	003 Compare X1, 0
	004 JumpIfEqual {6}
	005 Move W8, [X1+16]
	006 Move W8, W31
	007 Move [X0+12], W8
	008 Return 

Method: System.Void .ctor(System.String str, System.Int32 index, System.Int32 length)

Disassembly:
	0x03769614 LDR X8, [X25]
	0x03769618 MOV X22, X0
	0x0376961C LDR W9, [X8 + 0xE0]

ISIL:
	001 Move [X0], X1
	002 Move [X0+8], W2
	003 Move [X0+12], W3
	004 Return 

Method: System.Void .ctor(System.String str, System.Int32 index)

Disassembly:
	0x03769790 STP X20, X19, [X31 + 0x20]
	0x03769794 ADRP X20, 0xC77000
	0x03769798 LDRB W8, [X20 + 0xE91]
	0x0376979C MOV X19, X0
	0x037697A0 TBNZ X8, 0x0, 0x37697E8
	0x037697A4 ADRP X0, 0x9DD000
	0x037697A8 LDR X0, [X0 + 0x658]
	0x037697AC BL 0x1C16CF4
	0x037697B0 ADRP X0, 0x9DD000
	0x037697B4 LDR X0, [X0 + 0x660]

ISIL:
	001 Move [X31-16], X30
	002 Move [X0], X1
	003 Move [X0+8], W2
	004 Compare X1, 0
	005 JumpIfEqual {11}
	006 Move W8, [X1+16]
	007 Subtract W8, W8, W2
	008 Move [X0+12], W8
	009 Move X30, [X31+16]
	010 Return 
	011 Call 0x1C17F20

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x037697B8 BL 0x1C16CF4
	0x037697BC ADRP X0, 0x9DD000
	0x037697C0 LDR X0, [X0 + 0x668]
	0x037697C4 BL 0x1C16CF4
	0x037697C8 ADRP X0, 0x9DD000
	0x037697CC LDR X0, [X0 + 0x670]
	0x037697D0 BL 0x1C16CF4
	0x037697D4 ADRP X0, 0x9DD000
	0x037697D8 LDR X0, [X0 + 0x678]
	0x037697DC BL 0x1C16CF4
	0x037697E0 MOVZ W8, 0x1
	0x037697E4 STRB W8, [X20 + 0xE91]
	0x037697E8 LDR X0, [X19]
	0x037697EC CBZ X0, 0x37698A8
	0x037697F0 ADRP X8, 0x9DD000
	0x037697F4 LDR X8, [X8 + 0x658]
	0x037697F8 ADRP X22, 0x9DD000
	0x037697FC LDR X1, [X8]
	0x03769800 LDR X22, [X22 + 0x678]
	0x03769804 BL 0x2A5A538
	0x03769808 LDR X8, [X22]
	0x0376980C MOV X19, X0
	0x03769810 LDR W9, [X8 + 0xE0]
	0x03769814 CBNZ W9, 0x3769824
	0x03769818 MOV X0, X8
	0x0376981C BL 0x1C16DFC
	0x03769820 LDR X8, [X22]
	0x03769824 LDR X9, [X8 + 0xB8]
	0x03769828 ADRP X23, 0x9DD000
	0x0376982C LDR X20, [X9 + 0x8]
	0x03769830 LDR X23, [X23 + 0x660]
	0x03769834 CBNZ X20, 0x376988C
	0x03769838 LDR W9, [X8 + 0xE0]
	0x0376983C CBNZ W9, 0x376984C
	0x03769840 MOV X0, X8
	0x03769844 BL 0x1C16DFC
	0x03769848 LDR X8, [X22]
	0x0376984C ADRP X9, 0x9DD000
	0x03769850 LDR X8, [X8 + 0xB8]
	0x03769854 LDR X9, [X9 + 0x668]
	0x03769858 LDR X21, [X8]
	0x0376985C LDR X0, [X9]
	0x03769860 BL 0x1C16F10
	0x03769864 ADRP X8, 0x9DD000
	0x03769868 LDR X8, [X8 + 0x670]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xC78000
	006 Move W8, [X21+3724]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x98D000
	014 Move X0, [X0+632]
	015 Call 0x1C17CF4
	016 Move X0, 0x9B6000
	017 Move X0, [X0+1944]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3724], W8
	021 Compare X20, 0
	022 JumpIfEqual {32}
	023 Move X8, 0x9B6000
	024 Move X8, [X8+1944]
	025 Move X9, [X8]
	026 Move X8, [X20]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move X9, 0x98D000
	029 Move X9, [X9+632]
	030 Move X9, [X9]
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move W0, W31
	033 Move X0, X20
	034 Call 0x1C17E08
	035 Move X2, [X0]
	036 Move X3, [X0+8]
	037 Move X0, [X19]
	038 Move X1, [X19+8]
	039 Move W4, W31
	040 Call Substring.Compare, X0, X1, X2
	041 NotImplemented "Instruction CMP not yet implemented."
	042 NotImplemented "Instruction CSET not yet implemented."
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move X30, [X31+32]
	046 Move X21, [X31+40]
	047 Return X0
	048 Move X0, X19
	049 Move X1, X20
	050 Move X20, [X31+16]
	051 Move X19, [X31+24]
	052 Move X30, [X31+32]
	053 Move X21, [X31+40]
	054 Call Substring.Equals, X0, X1
	055 Return X0

Method: System.Boolean Equals(System.String other)

Disassembly:
	0x0376989C LDP X22, X21, [X31 + 0x10]
	0x037698A0 LDP X30, X23, [X31], #0x30
	0x037698A4 B 0x21CDD78
	0x037698A8 BL 0x1C16F20
	0x037698AC STR X30, [X31 - 0x20]!
	0x037698B0 STP X20, X19, [X31 + 0x10]
	0x037698B4 ADRP X20, 0xC77000
	0x037698B8 LDRB W8, [X20 + 0xE92]
	0x037698BC MOV X19, X0
	0x037698C0 TBNZ X8, 0x0, 0x37698D8
	0x037698C4 ADRP X0, 0x9DD000
	0x037698C8 LDR X0, [X0 + 0x658]
	0x037698CC BL 0x1C16CF4
	0x037698D0 MOVZ W8, 0x1
	0x037698D4 STRB W8, [X20 + 0xE92]
	0x037698D8 LDR X0, [X19]
	0x037698DC CBZ X0, 0x37698F8
	0x037698E0 ADRP X8, 0x9DD000
	0x037698E4 LDR X8, [X8 + 0x658]
	0x037698E8 LDP X20, X19, [X31 + 0x10]
	0x037698EC LDR X1, [X8]
	0x037698F0 LDR X30, [X31], #0x20
	0x037698F4 B 0x2A5A538
	0x037698F8 BL 0x1C16F20
	0x037698FC STR X30, [X31 - 0x30]!
	0x03769900 STP X22, X21, [X31 + 0x10]
	0x03769904 STP X20, X19, [X31 + 0x20]
	0x03769908 ADRP X21, 0xC77000
	0x0376990C ADRP X22, 0x9DD000
	0x03769910 ADRP X20, 0x9DD000
	0x03769914 LDRB W8, [X21 + 0xE93]
	0x03769918 LDR X22, [X22 + 0x680]
	0x0376991C LDR X20, [X20 + 0x688]
	0x03769920 MOV X19, X0
	0x03769924 TBNZ X8, 0x0, 0x3769948
	0x03769928 ADRP X0, 0x9DD000
	0x0376992C LDR X0, [X0 + 0x688]
	0x03769930 BL 0x1C16CF4
	0x03769934 ADRP X0, 0x9DD000
	0x03769938 LDR X0, [X0 + 0x680]
	0x0376993C BL 0x1C16CF4
	0x03769940 MOVZ W8, 0x1
	0x03769944 STRB W8, [X21 + 0xE93]
	0x03769948 LDR X0, [X22]
	0x0376994C BL 0x1C16F10
	0x03769950 LDR X1, [X20]
	0x03769954 MOV X20, X0
	0x03769958 BL 0x2A59E9C
	0x0376995C STR X20, [X19]
	0x03769960 LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, X1
	007 Move X19, X0
	008 Move X0, X1
	009 Move X1, X31
	010 Call String.IsNullOrEmpty, X0
	011 Move TEMP, X0
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfNotEqual {18}
	015 Move W8, [X19+12]
	016 NotImplemented "Instruction CMP not yet implemented."
	017 NotImplemented "Instruction CSET not yet implemented."
	018 Compare X20, 0
	019 JumpIfEqual {52}
	020 Move W8, [X20+16]
	021 Move W9, [X19+12]
	022 NotImplemented "Instruction CMP not yet implemented."
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move W21, W31
	025 Move X0, X20
	026 Move W1, W21
	027 Move X2, X31
	028 Call String.get_Chars, X0, X1
	029 Move X8, [X19]
	030 Compare X8, 0
	031 JumpIfEqual {52}
	032 Move W9, [X19+8]
	033 Move W22, W0
	034 Move X0, X8
	035 Move X2, X31
	036 Add W1, W21, W9
	037 Call String.get_Chars, X0, X1
	038 And W8, W22, 0xFFFF
	039 NotImplemented "Instruction CMP not yet implemented."
	040 NotImplemented "Instruction CSET not yet implemented."
	041 Move W8, [X19+12]
	042 Add W21, W21, 1
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move W0, W31
	045 Move W0, 1
	046 Move X20, [X31+32]
	047 Move X19, [X31+40]
	048 Move X22, [X31+16]
	049 Move X21, [X31+24]
	050 Move X30, [X31+48]
	051 Return X0
	052 Call 0x1C17F20

Method: System.Boolean Equals(UnityEngine.InputSystem.Utilities.Substring other)

Disassembly:
	0x0376986C MOV X1, X21
	0x03769870 MOV X3, X31
	0x03769874 MOV X20, X0
	0x03769878 LDR X2, [X8]
	0x0376987C BL 0x2D2DC94
	0x03769880 LDR X8, [X22]
	0x03769884 LDR X8, [X8 + 0xB8]
	0x03769888 STR X20, [X8 + 0x8]
	0x0376988C LDR X2, [X23]
	0x03769890 MOV X0, X19
	0x03769894 MOV X1, X20
	0x03769898 LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0]
	003 Move X9, [X0+8]
	004 Move X3, X2
	005 Move X2, X1
	006 Move W4, W31
	007 Move X0, X8
	008 Move X1, X9
	009 Call Substring.Compare, X0, X1, X2
	010 NotImplemented "Instruction CMP not yet implemented."
	011 NotImplemented "Instruction CSET not yet implemented."
	012 Move X30, [X31+16]
	013 Return X0

Method: System.Boolean Equals(UnityEngine.InputSystem.Utilities.InternedString other)

Disassembly:
	0x03769980 STP X20, X19, [X31 + 0x60]
	0x03769984 ADRP X21, 0xC77000
	0x03769988 ADRP X23, 0x98A000
	0x0376998C LDRB W8, [X21 + 0xE94]
	0x03769990 LDR X23, [X23 + 0x6C0]
	0x03769994 MOV X19, X1
	0x03769998 MOV X20, X0
	0x0376999C TBNZ X8, 0x0, 0x37699FC
	0x037699A0 ADRP X0, 0x9DD000
	0x037699A4 LDR X0, [X0 + 0x690]
	0x037699A8 BL 0x1C16CF4
	0x037699AC ADRP X0, 0x9DD000
	0x037699B0 LDR X0, [X0 + 0x698]
	0x037699B4 BL 0x1C16CF4
	0x037699B8 ADRP X0, 0x9DD000
	0x037699BC LDR X0, [X0 + 0x6A0]
	0x037699C0 BL 0x1C16CF4
	0x037699C4 ADRP X0, 0x9DD000
	0x037699C8 LDR X0, [X0 + 0x6A8]
	0x037699CC BL 0x1C16CF4
	0x037699D0 ADRP X0, 0x9DD000
	0x037699D4 LDR X0, [X0 + 0x6B0]
	0x037699D8 BL 0x1C16CF4
	0x037699DC ADRP X0, 0x9DD000
	0x037699E0 LDR X0, [X0 + 0x6B8]
	0x037699E4 BL 0x1C16CF4
	0x037699E8 ADRP X0, 0x98A000
	0x037699EC LDR X0, [X0 + 0x6C0]
	0x037699F0 BL 0x1C16CF4
	0x037699F4 MOVZ W8, 0x1
	0x037699F8 STRB W8, [X21 + 0xE94]
	0x037699FC LDR X0, [X23]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move [X31], X1
	007 Move [X31+8], X2
	008 Move W20, [X0+12]
	009 Move X19, X0
	010 Add X0, X31, 0
	011 Move X1, X31
	012 Call InternedString.get_length, X0
	013 NotImplemented "Instruction CMP not yet implemented."
	014 Move X20, [X19]
	015 Move W21, [X19+8]
	016 Add X0, X31, 0
	017 Move X1, X31
	018 Call InternedString.ToString, X0
	019 Move W4, [X19+12]
	020 Move X2, X0
	021 Move W5, 5
	022 Move X0, X20
	023 Move W1, W21
	024 Move W3, W31
	025 Move X6, X31
	026 Call String.Compare, X0, X1, X2, X3, X4, X5
	027 NotImplemented "Instruction CMP not yet implemented."
	028 NotImplemented "Instruction CSET not yet implemented."
	029 Move W0, W31
	030 Move X20, [X31+32]
	031 Move X19, [X31+40]
	032 Move X30, [X31+16]
	033 Move X21, [X31+24]
	034 Add X31, X31, 48
	035 Return X0

Method: System.Int32 CompareTo(UnityEngine.InputSystem.Utilities.Substring other)

Disassembly:
	0x03769964 LDP X22, X21, [X31 + 0x10]
	0x03769968 LDR X30, [X31], #0x30
	0x0376996C RET
	0x03769970 SUB X31, X31, 0x70
	0x03769974 STP X30, X25, [X31 + 0x30]
	0x03769978 STP X24, X23, [X31 + 0x40]
	0x0376997C STP X22, X21, [X31 + 0x50]

ISIL:
	001 Move X8, [X0]
	002 Move X9, [X0+8]
	003 Move X3, X2
	004 Move X2, X1
	005 Move W4, W31
	006 Move X0, X8
	007 Move X1, X9
	008 Call Substring.Compare, X0, X1, X2
	009 Return X0

Method: System.Int32 Compare(UnityEngine.InputSystem.Utilities.Substring left, UnityEngine.InputSystem.Utilities.Substring right, System.StringComparison comparison)

Disassembly:
	0x03769A00 MOVI V0.2D, 0x0
	0x03769A04 STP V0, V0, [X31 + 0x10]
	0x03769A08 STR V0, [X31]
	0x03769A0C LDR W8, [X0 + 0xE0]
	0x03769A10 CBNZ W8, 0x3769A18
	0x03769A14 BL 0x1C16DFC
	0x03769A18 MOV X0, X19
	0x03769A1C MOV X1, X31
	0x03769A20 MOV X2, X31
	0x03769A24 BL 0x3395194

ISIL:
	001 Move W5, W4
	002 Move X4, X1
	003 ShiftRight X4, 32
	004 And X4, X4, 0x7FFFFFFF
	005 Move X8, X3
	006 ShiftRight X8, 32
	007 And X8, X8, 0x7FFFFFFF
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Move X6, X31
	010 Call String.Compare, X0, X1, X2, X3, X4, X5
	011 Return X0
	012 Move TEMP, 0
	013 Not TEMP
	014 Move W8, TEMP
	015 NotImplemented "Instruction CSNEG not yet implemented."
	016 Return X0

Method: System.Boolean StartsWith(System.String str)

Disassembly:
	0x03769A28 TBNZ X0, 0x0, 0x3769ACC
	0x03769A2C LDR X0, [X20]
	0x03769A30 CBZ X0, 0x3769B14
	0x03769A34 ADRP X8, 0x9DD000
	0x03769A38 LDR X8, [X8 + 0x690]
	0x03769A3C ADRP X25, 0x9DD000
	0x03769A40 ADRP X24, 0x9DD000
	0x03769A44 LDR X1, [X8]
	0x03769A48 LDR X25, [X25 + 0x6A0]
	0x03769A4C LDR X24, [X24 + 0x698]
	0x03769A50 ADD X8, X31, 0x0
	0x03769A54 BL 0x2A5ABD0
	0x03769A58 LDR X1, [X25]
	0x03769A5C ADD X0, X31, 0x0
	0x03769A60 BL 0x2C01CA0
	0x03769A64 TBZ X0, 0x0, 0x3769A98
	0x03769A68 LDR X0, [X23]
	0x03769A6C LDP X20, X21, [X31 + 0x10]
	0x03769A70 LDR X22, [X31 + 0x20]
	0x03769A74 LDR W8, [X0 + 0xE0]
	0x03769A78 CBNZ W8, 0x3769A80
	0x03769A7C BL 0x1C16DFC
	0x03769A80 MOV X0, X22
	0x03769A84 MOV X1, X19
	0x03769A88 MOV X2, X31
	0x03769A8C BL 0x3395194
	0x03769A90 TBZ X0, 0x0, 0x3769A58
	0x03769A94 B 0x3769AA0
	0x03769A98 MOV X20, X31
	0x03769A9C MOV X21, X31
	0x03769AA0 LDR X1, [X24]
	0x03769AA4 ADD X0, X31, 0x0
	0x03769AA8 BL 0x2C01DC8
	0x03769AAC MOV X0, X20
	0x03769AB0 MOV X1, X21
	0x03769AB4 LDP X20, X19, [X31 + 0x60]
	0x03769AB8 LDP X22, X21, [X31 + 0x50]
	0x03769ABC LDP X24, X23, [X31 + 0x40]
	0x03769AC0 LDP X30, X25, [X31 + 0x30]
	0x03769AC4 ADD X31, X31, 0x70

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Compare X1, 0
	007 JumpIfEqual {40}
	008 Move W8, [X1+16]
	009 Move W9, [X0+12]
	010 Move X19, X1
	011 Move X20, X0
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Move W0, W31
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Move W21, W31
	016 Move X0, [X20]
	017 Compare X0, 0
	018 JumpIfEqual {40}
	019 Move W8, [X20+8]
	020 Move X2, X31
	021 Add W1, W21, W8
	022 Call String.get_Chars, X0, X1
	023 And W22, W0, 0xFFFF
	024 Move X0, X19
	025 Move W1, W21
	026 Move X2, X31
	027 Call String.get_Chars, X0, X1
	028 NotImplemented "Instruction CMP not yet implemented."
	029 NotImplemented "Instruction CSET not yet implemented."
	030 Move W8, [X19+16]
	031 Add W21, W21, 1
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move W0, 1
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Return X0
	040 Call 0x1C17F20

Method: System.String Substr(System.Int32 index = 0, System.Int32 length = -1)

Disassembly:
	0x03769AC8 RET
	0x03769ACC ADRP X0, 0x98F000
	0x03769AD0 LDR X0, [X0 + 0x528]
	0x03769AD4 BL 0x1C16D08
	0x03769AD8 BL 0x1C16F10
	0x03769ADC MOV X19, X0
	0x03769AE0 ADRP X0, 0x992000
	0x03769AE4 LDR X0, [X0 + 0x5E8]
	0x03769AE8 BL 0x1C16D08
	0x03769AEC MOV X1, X0
	0x03769AF0 MOV X0, X19
	0x03769AF4 MOV X2, X31
	0x03769AF8 BL 0x330E100

ISIL:
	001 Move [X31-16], X30
	002 Move TEMP, X2
	003 And TEMP, TEMP, -2147483648
	004 Compare TEMP, -2147483648
	005 JumpIfNotEqual {8}
	006 Move W8, [X0+12]
	007 Subtract W2, W8, W1
	008 Move X8, [X0]
	009 Compare X8, 0
	010 JumpIfEqual {18}
	011 Move W9, [X0+8]
	012 Move X0, X8
	013 Move X3, X31
	014 Add W1, W9, W1
	015 Move X30, [X31+16]
	016 Call String.Substring, X0, X1, X2
	017 Return X0
	018 Call 0x1C17F20

Method: System.String ToString()

Disassembly:
	0x03769AFC ADRP X0, 0x9DD000
	0x03769B00 LDR X0, [X0 + 0x6C0]
	0x03769B04 BL 0x1C16D08
	0x03769B08 MOV X1, X0
	0x03769B0C MOV X0, X19
	0x03769B10 BL 0x1C16DEC
	0x03769B14 BL 0x1C16F20
	0x03769B18 B 0x3769B20
	0x03769B1C B 0x3769B20
	0x03769B20 MOV X19, X0
	0x03769B24 CMP W1, 0x1
	0x03769B28 B.NE 0x3769B54
	0x03769B2C MOV X0, X19
	0x03769B30 BL 0x3EB1AD0
	0x03769B34 LDR X20, [X0]
	0x03769B38 BL 0x3EB1AE0
	0x03769B3C LDR X1, [X24]
	0x03769B40 ADD X0, X31, 0x0
	0x03769B44 BL 0x2C01DC8
	0x03769B48 CBNZ X20, 0x3769B5C
	0x03769B4C MOV X21, X31
	0x03769B50 B 0x3769AAC
	0x03769B54 MOV X20, X31
	0x03769B58 B 0x3769B68
	0x03769B5C MOV X0, X20
	0x03769B60 BL 0x1C16F18

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xC78000
	005 Move W8, [X20+3725]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x98D000
	012 Move X0, [X0+632]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3725], W8
	016 Move X0, [X19]
	017 Compare X0, 0
	018 JumpIfEqual {27}
	019 Move W1, [X19+8]
	020 Move W2, [X19+12]
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X3, X31
	024 Move X30, [X31+32]
	025 Call String.Substring, X0, X1, X2
	026 Return X0
	027 Move X8, 0x98D000
	028 Move X8, [X8+632]
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X8, [X8]
	032 Move X8, [X8+184]
	033 Move X0, [X8]
	034 Move X30, [X31+32]
	035 Return X0

Method: System.Int32 GetHashCode()

Disassembly:
	0x03769B64 MOV X19, X0
	0x03769B68 LDR X1, [X24]
	0x03769B6C ADD X0, X31, 0x0
	0x03769B70 BL 0x2C01DC8
	0x03769B74 CBNZ X20, 0x3769B80
	0x03769B78 MOV X0, X19
	0x03769B7C BL 0x1D2C690
	0x03769B80 MOV X0, X20
	0x03769B84 BL 0x1C16F18
	0x03769B88 BL 0x1990590
	0x03769B8C SUB X31, X31, 0x40
	0x03769B90 STR X30, [X31 + 0x10]
	0x03769B94 STP X22, X21, [X31 + 0x20]
	0x03769B98 STP X20, X19, [X31 + 0x30]
	0x03769B9C ADRP X22, 0xC77000
	0x03769BA0 LDRB W8, [X22 + 0xE95]
	0x03769BA4 MOV X19, X2
	0x03769BA8 MOV X21, X1
	0x03769BAC MOV X20, X0
	0x03769BB0 TBNZ X8, 0x0, 0x3769BD4

ISIL:
	001 Move [X31-16], X30
	002 Move X8, X0
	003 Move X0, [X0]
	004 Compare X0, 0
	005 JumpIfEqual {21}
	006 Move W9, [X8+8]
	007 Compare W9, 0
	008 JumpIfNotEqual {12}
	009 Move W9, [X8+12]
	010 Move W10, [X0+16]
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Move X0, X8
	013 Call Substring.ToString, X0
	014 Compare X0, 0
	015 JumpIfEqual {23}
	016 Move X8, [X0]
	017 Move X2, [X8+344]
	018 Move X1, [X8+352]
	019 Move X30, [X31+16]
	020 CallNoReturn X2
	021 Move X30, [X31+16]
	022 Return X0
	023 Call 0x1C17F20

Method: System.Boolean op_Equality(UnityEngine.InputSystem.Utilities.Substring a, UnityEngine.InputSystem.Utilities.Substring b)

Disassembly:
	0x03769BB4 ADRP X0, 0x9DD000
	0x03769BB8 LDR X0, [X0 + 0x6C8]
	0x03769BBC BL 0x1C16CF4
	0x03769BC0 ADRP X0, 0x98A000
	0x03769BC4 LDR X0, [X0 + 0x6C0]
	0x03769BC8 BL 0x1C16CF4
	0x03769BCC MOVZ W8, 0x1

ISIL:
	001 Move [X31-16], X30
	002 Move W4, W31
	003 Call Substring.Compare, X0, X1, X2
	004 NotImplemented "Instruction CMP not yet implemented."
	005 NotImplemented "Instruction CSET not yet implemented."
	006 Move X30, [X31+16]
	007 Return X0

Method: System.Boolean op_Inequality(UnityEngine.InputSystem.Utilities.Substring a, UnityEngine.InputSystem.Utilities.Substring b)

Disassembly:
	0x03769BD0 STRB W8, [X22 + 0xE95]
	0x03769BD4 MOV X0, X21
	0x03769BD8 MOV X1, X31
	0x03769BDC STP X31, X31, [X31]
	0x03769BE0 BL 0x32277A8
	0x03769BE4 TBNZ X0, 0x0, 0x3769C58
	0x03769BE8 ADRP X8, 0x98A000

ISIL:
	001 Move [X31-16], X30
	002 Move W4, W31
	003 Call Substring.Compare, X0, X1, X2
	004 NotImplemented "Instruction CMP not yet implemented."
	005 NotImplemented "Instruction CSET not yet implemented."
	006 Move X30, [X31+16]
	007 Return X0

Method: System.Boolean op_Equality(UnityEngine.InputSystem.Utilities.Substring a, UnityEngine.InputSystem.Utilities.InternedString b)

Disassembly:
	0x03769BEC LDR X8, [X8 + 0x6C0]
	0x03769BF0 LDR X0, [X8]
	0x03769BF4 LDR W8, [X0 + 0xE0]
	0x03769BF8 CBNZ W8, 0x3769C00
	0x03769BFC BL 0x1C16DFC
	0x03769C00 MOV X0, X19
	0x03769C04 MOV X1, X31
	0x03769C08 MOV X2, X31
	0x03769C0C BL 0x3395194
	0x03769C10 TBNZ X0, 0x0, 0x3769CA0
	0x03769C14 ADD X0, X31, 0x0

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+8], X1
	003 Move [X31+16], X30
	004 Move [X31], X0
	005 Add X0, X31, 0
	006 Move X1, X2
	007 Move X2, X3
	008 Call Substring.Equals, X0, X1
	009 Move X30, [X31+16]
	010 And W0, W0, 1
	011 Add X31, X31, 32
	012 Return X0

Method: System.Boolean op_Inequality(UnityEngine.InputSystem.Utilities.Substring a, UnityEngine.InputSystem.Utilities.InternedString b)

Disassembly:
	0x03769C18 MOV X1, X21
	0x03769C1C MOV X2, X31
	0x03769C20 BL 0x3757420
	0x03769C24 LDR X0, [X20]
	0x03769C28 CBZ X0, 0x3769CE8
	0x03769C2C ADRP X8, 0x9DD000
	0x03769C30 LDR X8, [X8 + 0x6C8]
	0x03769C34 LDP X1, X2, [X31]
	0x03769C38 MOV X3, X19
	0x03769C3C LDR X4, [X8]
	0x03769C40 BL 0x2A5A750
	0x03769C44 LDP X20, X19, [X31 + 0x30]

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+8], X1
	003 Move [X31+16], X30
	004 Move [X31], X0
	005 Add X0, X31, 0
	006 Move X1, X2
	007 Move X2, X3
	008 Call Substring.Equals, X0, X1
	009 Move X30, [X31+16]
	010 NotImplemented "Instruction ORN not yet implemented."
	011 And W0, W8, 1
	012 Add X31, X31, 32
	013 Return X0

Method: System.Boolean op_Equality(UnityEngine.InputSystem.Utilities.InternedString a, UnityEngine.InputSystem.Utilities.Substring b)

Disassembly:
	0x03769C48 LDP X22, X21, [X31 + 0x20]
	0x03769C4C LDR X30, [X31 + 0x10]
	0x03769C50 ADD X31, X31, 0x40
	0x03769C54 RET
	0x03769C58 ADRP X0, 0x992000
	0x03769C5C LDR X0, [X0 + 0x578]
	0x03769C60 BL 0x1C16D08
	0x03769C64 BL 0x1C16F10
	0x03769C68 MOV X19, X0
	0x03769C6C ADRP X0, 0x9DD000
	0x03769C70 LDR X0, [X0 + 0x6D0]
	0x03769C74 BL 0x1C16D08

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+8], X3
	003 Move [X31+16], X30
	004 Move X8, X1
	005 Move X1, X0
	006 Move [X31], X2
	007 Add X0, X31, 0
	008 Move X2, X8
	009 Call Substring.Equals, X0, X1
	010 Move X30, [X31+16]
	011 And W0, W0, 1
	012 Add X31, X31, 32
	013 Return X0

Method: System.Boolean op_Inequality(UnityEngine.InputSystem.Utilities.InternedString a, UnityEngine.InputSystem.Utilities.Substring b)

Disassembly:
	0x03769C78 MOV X20, X0
	0x03769C7C ADRP X0, 0x992000
	0x03769C80 LDR X0, [X0 + 0x588]
	0x03769C84 BL 0x1C16D08
	0x03769C88 MOV X2, X0
	0x03769C8C MOV X0, X19
	0x03769C90 MOV X1, X20
	0x03769C94 MOV X3, X31
	0x03769C98 BL 0x330E16C
	0x03769C9C B 0x3769CD0
	0x03769CA0 ADRP X0, 0x98F000
	0x03769CA4 LDR X0, [X0 + 0x528]
	0x03769CA8 BL 0x1C16D08

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+8], X3
	003 Move [X31+16], X30
	004 Move X8, X1
	005 Move X1, X0
	006 Move [X31], X2
	007 Add X0, X31, 0
	008 Move X2, X8
	009 Call Substring.Equals, X0, X1
	010 Move X30, [X31+16]
	011 NotImplemented "Instruction ORN not yet implemented."
	012 And W0, W8, 1
	013 Add X31, X31, 32
	014 Return X0

Method: UnityEngine.InputSystem.Utilities.Substring op_Implicit(System.String s)

Disassembly:
	0x03769CAC BL 0x1C16F10
	0x03769CB0 MOV X19, X0
	0x03769CB4 ADRP X0, 0x992000
	0x03769CB8 LDR X0, [X0 + 0x5E8]
	0x03769CBC BL 0x1C16D08
	0x03769CC0 MOV X1, X0

ISIL:
	001 Compare X0, 0
	002 JumpIfEqual {8}
	003 Move W8, [X0+16]
	004 Move X1, X8
	005 ShiftRight X1, 32
	006 And X1, X1, 0x7FFFFFFF
	007 Return X0
	008 Move X1, X31
	009 Return X0

Method: System.Int32 get_length()

Disassembly:
	0x03769CC4 MOV X0, X19
	0x03769CC8 MOV X2, X31

ISIL:
	001 Move W0, [X0+12]
	002 Return X0

Method: System.Int32 get_index()

Disassembly:
	0x03769CCC BL 0x330E100
	0x03769CD0 ADRP X0, 0x9DD000

ISIL:
	001 Move W0, [X0+8]
	002 Return X0

Method: System.Char get_Item(System.Int32 index)

Disassembly:
	0x03769CD4 LDR X0, [X0 + 0x6D8]
	0x03769CD8 BL 0x1C16D08
	0x03769CDC MOV X1, X0
	0x03769CE0 MOV X0, X19
	0x03769CE4 BL 0x1C16DEC
	0x03769CE8 BL 0x1C16F20
	0x03769CEC SUB X31, X31, 0x40
	0x03769CF0 STP X30, X21, [X31 + 0x20]
	0x03769CF4 STP X20, X19, [X31 + 0x30]
	0x03769CF8 ADRP X21, 0xC77000
	0x03769CFC LDRB W8, [X21 + 0xE96]
	0x03769D00 MOV X20, X1
	0x03769D04 MOV X19, X0
	0x03769D08 TBNZ X8, 0x0, 0x3769D20
	0x03769D0C ADRP X0, 0x9DD000
	0x03769D10 LDR X0, [X0 + 0x6E0]
	0x03769D14 BL 0x1C16CF4
	0x03769D18 MOVZ W8, 0x1
	0x03769D1C STRB W8, [X21 + 0xE96]
	0x03769D20 MOV X0, X20
	0x03769D24 MOV X1, X31
	0x03769D28 STP X31, X31, [X31 + 0x10]
	0x03769D2C STR X31, [X31 + 0x8]
	0x03769D30 BL 0x32277A8
	0x03769D34 MOV W8, W0
	0x03769D38 MOV X0, X31
	0x03769D3C TBNZ X8, 0x0, 0x3769D84
	0x03769D40 LDR X8, [X19]
	0x03769D44 CBZ X8, 0x3769D94
	0x03769D48 ADD X0, X31, 0x10
	0x03769D4C MOV X1, X20
	0x03769D50 MOV X2, X31

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move TEMP, X1
	004 And TEMP, TEMP, -2147483648
	005 Compare TEMP, -2147483648
	006 JumpIfEqual {20}
	007 Move W8, [X0+12]
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Move X8, [X0]
	010 Compare X8, 0
	011 JumpIfEqual {38}
	012 Move W9, [X0+8]
	013 Move X0, X8
	014 Move X2, X31
	015 Add W1, W9, W1
	016 Move X30, [X31+16]
	017 Move X19, [X31+24]
	018 Call String.get_Chars, X0, X1
	019 Return X0
	020 Move X0, 0x993000
	021 Move X0, [X0+1888]
	022 Call 0x1C17D08
	023 Call 0x1C17F10
	024 Move X19, X0
	025 Move X0, 0x996000
	026 Move X0, [X0+304]
	027 Call 0x1C17D08
	028 Move X1, X0
	029 Move X0, X19
	030 Move X2, X31
	031 Call ArgumentOutOfRangeException..ctor, X0, X1
	032 Move X0, 0x9DE000
	033 Move X0, [X0+1528]
	034 Call 0x1C17D08
	035 Move X1, X0
	036 Move X0, X19
	037 Call 0x1C17DEC
	038 Call 0x1C17F20

