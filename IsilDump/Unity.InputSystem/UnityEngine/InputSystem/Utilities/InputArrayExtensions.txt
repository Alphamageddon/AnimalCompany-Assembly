Type: UnityEngine.InputSystem.Utilities.InputArrayExtensions

Method: System.Int32 IndexOfReference(UnityEngine.InputSystem.Utilities.InlinedArray`1<TValue> array, TValue value)

Disassembly:
	0x021FC010 LDR X8, [X19 + 0x38]
	0x021FC014 LDR W9, [X0 + 0xE0]
	0x021FC018 LDR X20, [X8]
	0x021FC01C CBNZ W9, 0x21FC024
	0x021FC020 BL 0x1C16DFC
	0x021FC024 MOV X0, X20
	0x021FC028 MOV X1, X31
	0x021FC02C BL 0x338C698
	0x021FC030 CBZ X0, 0x21FC0F0
	0x021FC034 LDR X8, [X0]
	0x021FC038 LDP X9, X1, [X8 + 0x1A8]
	0x021FC03C BLR X9
	0x021FC040 LDR W8, [X27 + 0x18]
	0x021FC044 CMP W8, 0x7
	0x021FC048 B.LS 0x21FC120
	0x021FC04C STR X0, [X27 + 0x58]
	0x021FC050 MOV X0, X27
	0x021FC054 MOV X1, X31
	0x021FC058 BL 0x32278CC
	0x021FC05C ADRP X8, 0x1EF7000
	0x021FC060 LDR X8, [X8 + 0xA28]
	0x021FC064 MOV X20, X0
	0x021FC068 LDR X8, [X8]
	0x021FC06C LDR W9, [X8 + 0xE0]
	0x021FC070 CBNZ W9, 0x21FC07C
	0x021FC074 MOV X0, X8
	0x021FC078 BL 0x1C16DFC
	0x021FC07C MOV X0, X20
	0x021FC080 MOV X1, X31
	0x021FC084 BL 0x3C0649C
	0x021FC088 B 0x21FC0E0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X2+56]
	007 Move X19, X2
	008 Move X20, X1
	009 Move X21, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {14}
	012 Move X0, X19
	013 Call 0x1C5D6E0
	014 Move W8, [X21]
	015 NotImplemented "Instruction CMP not yet implemented."
	016 Move W22, W31
	017 Move X8, [X19+56]
	018 Move X0, X21
	019 Move W1, W22
	020 Move X2, [X8+8]
	021 Call InlinedArray`1<Object>.get_Item, X0, X1
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move W8, [X21]
	024 Add W22, W22, 1
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move TEMP, 0
	027 Not TEMP
	028 Move W22, TEMP
	029 Move W0, W22
	030 Move X20, [X31+32]
	031 Move X19, [X31+40]
	032 Move X22, [X31+16]
	033 Move X21, [X31+24]
	034 Move X30, [X31+48]
	035 Return X0

Method: System.Boolean Contains(UnityEngine.InputSystem.Utilities.InlinedArray`1<TValue> array, TValue value)

Disassembly:
	0x021FBCBC LDR X0, [X0 + 0xCC0]
	0x021FBCC0 BL 0x1C16CF4
	0x021FBCC4 ADRP X0, 0x1F20000
	0x021FBCC8 LDR X0, [X0 + 0xCC8]
	0x021FBCCC BL 0x1C16CF4
	0x021FBCD0 ADRP X0, 0x1F20000
	0x021FBCD4 LDR X0, [X0 + 0xCD0]
	0x021FBCD8 BL 0x1C16CF4
	0x021FBCDC ADRP X0, 0x1F20000
	0x021FBCE0 LDR X0, [X0 + 0xCD8]
	0x021FBCE4 BL 0x1C16CF4
	0x021FBCE8 ADRP X0, 0x1F20000
	0x021FBCEC LDR X0, [X0 + 0xCE0]
	0x021FBCF0 BL 0x1C16CF4
	0x021FBCF4 ADRP X0, 0x1F20000
	0x021FBCF8 LDR X0, [X0 + 0xCE8]
	0x021FBCFC BL 0x1C16CF4
	0x021FBD00 ADRP X0, 0x1F20000
	0x021FBD04 LDR X0, [X0 + 0xCF0]
	0x021FBD08 BL 0x1C16CF4
	0x021FBD0C LDR X8, [X19 + 0x38]
	0x021FBD10 CBNZ X8, 0x21FBD1C
	0x021FBD14 MOV X0, X19
	0x021FBD18 BL 0x1C5C6E0
	0x021FBD1C ADD X26, X27, 0x120
	0x021FBD20 MOV X0, X24
	0x021FBD24 MOV X1, X26
	0x021FBD28 MOV X2, X31
	0x021FBD2C BL 0x37632E4
	0x021FBD30 TBZ X0, 0x0, 0x21FC0F4
	0x021FBD34 LDR X0, [X26]
	0x021FBD38 CBZ X0, 0x21FC0F0
	0x021FBD3C LDR W8, [X22]
	0x021FBD40 ADRP X23, 0x1F20000
	0x021FBD44 ADRP X25, 0x1EF8000
	0x021FBD48 MOV W28, W31
	0x021FBD4C STR W8, [X31 + 0xC]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X2+56]
	007 Move X19, X2
	008 Move X20, X1
	009 Move X21, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {14}
	012 Move X0, X19
	013 Call 0x1C5D6E0
	014 Move W8, [X21]
	015 NotImplemented "Instruction CMP not yet implemented."
	016 Move W22, W31
	017 Move X8, [X19+56]
	018 Move X0, X21
	019 Move W1, W22
	020 Move X2, [X8+8]
	021 Call InlinedArray`1<Object>.get_Item, X0, X1
	022 Compare X0, 0
	023 JumpIfEqual {44}
	024 Move X8, [X0]
	025 Move X1, X20
	026 Move X9, [X8+312]
	027 Move X2, [X8+320]
	028 NotImplemented "Instruction BLR not yet implemented."
	029 Move TEMP, X0
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {37}
	033 Move W8, [X21]
	034 Add W22, W22, 1
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move W0, W31
	037 Move X20, [X31+32]
	038 Move X19, [X31+40]
	039 Move X22, [X31+16]
	040 Move X21, [X31+24]
	041 And W0, W0, 1
	042 Move X30, [X31+48]
	043 Return X0
	044 Call 0x1C17F20

Method: System.Boolean ContainsReference(UnityEngine.InputSystem.Utilities.InlinedArray`1<TValue> array, TValue value)

Disassembly:
	0x021FBFA4 B.LS 0x21FC120
	0x021FBFA8 CMP W8, 0x2
	0x021FBFAC STR X0, [X27 + 0x28]
	0x021FBFB0 B.EQ 0x21FC120
	0x021FBFB4 ADRP X9, 0x1F20000
	0x021FBFB8 LDR X9, [X9 + 0xCD8]
	0x021FBFBC CMP W8, 0x3
	0x021FBFC0 LDR X9, [X9]
	0x021FBFC4 STR X9, [X27 + 0x30]
	0x021FBFC8 B.LS 0x21FC120
	0x021FBFCC CMP W8, 0x4
	0x021FBFD0 STR X29, [X27 + 0x38]
	0x021FBFD4 B.EQ 0x21FC120
	0x021FBFD8 ADRP X9, 0x1F20000
	0x021FBFDC LDR X9, [X9 + 0xCC8]
	0x021FBFE0 CMP W8, 0x5
	0x021FBFE4 LDR X9, [X9]
	0x021FBFE8 STR X9, [X27 + 0x40]
	0x021FBFEC B.LS 0x21FC120
	0x021FBFF0 CMP W8, 0x6
	0x021FBFF4 STR X24, [X27 + 0x48]
	0x021FBFF8 B.EQ 0x21FC120
	0x021FBFFC ADRP X8, 0x1F20000
	0x021FC000 LDR X8, [X8 + 0xCC0]
	0x021FC004 LDR X8, [X8]
	0x021FC008 STR X8, [X27 + 0x50]
	0x021FC00C LDR X0, [X25]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+64], X30
	003 Move [X31+72], X21
	004 Move [X31+80], X20
	005 Move [X31+88], X19
	006 Move X8, [X2+56]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X8, 0
	010 JumpIfNotEqual {15}
	011 Move X0, X2
	012 Move X21, X2
	013 Call 0x1C5D6E0
	014 Move X8, [X21+56]
	015 Move X9, [X20+16]
	016 Move V0, [X20]
	017 Add X0, X31, 32
	018 Move X1, X19
	019 Move [X31+16], X9
	020 Move [X31], V0
	021 Move X2, [X8+16]
	022 Move [X31+2], V0
	023 Move [X31+48], X9
	024 Call 0x21FC010, X0, X1
	025 Move X20, [X31+80]
	026 Move X19, [X31+88]
	027 Move X30, [X31+64]
	028 Move X21, [X31+72]
	029 Add W31, W0, 1
	030 NotImplemented "Instruction CSET not yet implemented."
	031 Add X31, X31, 96
	032 Return X0

