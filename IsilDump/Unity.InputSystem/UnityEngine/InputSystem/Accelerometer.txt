Type: UnityEngine.InputSystem.Accelerometer

Method: UnityEngine.InputSystem.Controls.Vector3Control get_acceleration()

Disassembly:
	0x037BF258 LDRB W8, [X19 + 0x1A1]
	0x037BF25C LDR X20, [X20 + 0xF68]

ISIL:
	001 Move X0, [X0+368]
	002 Return X0

Method: System.Void set_acceleration(UnityEngine.InputSystem.Controls.Vector3Control value)

Disassembly:
	0x037BF260 TBNZ X8, 0x0, 0x37BF278
	0x037BF264 ADRP X0, 0x988000

ISIL:
	001 Move [X0+368], X1
	002 Return 

Method: UnityEngine.InputSystem.Accelerometer get_current()

Disassembly:
	0x037BF268 LDR X0, [X0 + 0xF68]
	0x037BF26C BL 0x1C16CF4
	0x037BF270 MOVZ W8, 0x1
	0x037BF274 STRB W8, [X19 + 0x1A1]
	0x037BF278 LDR X8, [X20]
	0x037BF27C LDP X20, X19, [X31 + 0x10]
	0x037BF280 LDR X8, [X8 + 0xB8]
	0x037BF284 LDR X0, [X8]
	0x037BF288 LDR X30, [X31], #0x20
	0x037BF28C RET
	0x037BF290 STP X30, X21, [X31 - 0x20]!
	0x037BF294 STP X20, X19, [X31 + 0x10]
	0x037BF298 ADRP X20, 0xC22000
	0x037BF29C ADRP X21, 0x988000
	0x037BF2A0 LDRB W8, [X20 + 0x1A2]
	0x037BF2A4 LDR X21, [X21 + 0xF68]
	0x037BF2A8 MOV X19, X0
	0x037BF2AC TBNZ X8, 0x0, 0x37BF2C4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xC23000
	005 Move X20, 0x989000
	006 Move W8, [X19+393]
	007 Move X20, [X20+3824]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x989000
	013 Move X0, [X0+3824]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+393], W8
	017 Move X8, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X8, [X8+184]
	021 Move X0, [X8]
	022 Move X30, [X31+32]
	023 Return X0

Method: System.Void set_current(UnityEngine.InputSystem.Accelerometer value)

Disassembly:
	0x037BF2B0 ADRP X0, 0x988000
	0x037BF2B4 LDR X0, [X0 + 0xF68]
	0x037BF2B8 BL 0x1C16CF4
	0x037BF2BC MOVZ W8, 0x1
	0x037BF2C0 STRB W8, [X20 + 0x1A2]
	0x037BF2C4 LDR X8, [X21]
	0x037BF2C8 LDR X8, [X8 + 0xB8]
	0x037BF2CC STR X19, [X8]
	0x037BF2D0 LDP X20, X19, [X31 + 0x10]
	0x037BF2D4 LDP X30, X21, [X31], #0x20
	0x037BF2D8 RET
	0x037BF2DC STR X30, [X31 - 0x20]!
	0x037BF2E0 STP X20, X19, [X31 + 0x10]
	0x037BF2E4 MOV X1, X31
	0x037BF2E8 MOV X19, X0
	0x037BF2EC BL 0x377A674
	0x037BF2F0 ADRP X20, 0xC22000
	0x037BF2F4 LDRB W8, [X20 + 0x22F]
	0x037BF2F8 CBNZ W8, 0x37BF310

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xC23000
	006 Move X21, 0x989000
	007 Move W8, [X20+394]
	008 Move X21, [X21+3824]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x989000
	015 Move X0, [X0+3824]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+394], W8
	019 Move X8, [X21]
	020 Move X8, [X8+184]
	021 Move [X8], X19
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X30, [X31+32]
	025 Move X21, [X31+40]
	026 Return 

Method: System.Void MakeCurrent()

Disassembly:
	0x037BF2FC ADRP X0, 0x988000
	0x037BF300 LDR X0, [X0 + 0xF68]
	0x037BF304 BL 0x1C16CF4
	0x037BF308 MOVZ W8, 0x1
	0x037BF30C STRB W8, [X20 + 0x22F]
	0x037BF310 ADRP X8, 0x988000
	0x037BF314 LDR X8, [X8 + 0xF68]
	0x037BF318 LDR X8, [X8]
	0x037BF31C LDR X8, [X8 + 0xB8]
	0x037BF320 STR X19, [X8]
	0x037BF324 LDP X20, X19, [X31 + 0x10]
	0x037BF328 LDR X30, [X31], #0x20
	0x037BF32C RET
	0x037BF330 STR X30, [X31 - 0x20]!
	0x037BF334 STP X20, X19, [X31 + 0x10]
	0x037BF338 MOV X1, X31
	0x037BF33C MOV X19, X0
	0x037BF340 BL 0x377B0CC
	0x037BF344 ADRP X20, 0xC22000
	0x037BF348 LDRB W8, [X20 + 0x230]
	0x037BF34C CBNZ W8, 0x37BF364

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X1, X31
	005 Move X19, X0
	006 Call InputDevice.MakeCurrent, X0
	007 Move X20, 0xC23000
	008 Move W8, [X20+543]
	009 Compare W8, 0
	010 JumpIfNotEqual {16}
	011 Move X0, 0x989000
	012 Move X0, [X0+3824]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+543], W8
	016 Move X8, 0x989000
	017 Move X8, [X8+3824]
	018 Move X8, [X8]
	019 Move X8, [X8+184]
	020 Move [X8], X19
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X30, [X31+32]
	024 Return 

Method: System.Void OnRemoved()

Disassembly:
	0x037BF350 ADRP X0, 0x988000
	0x037BF354 LDR X0, [X0 + 0xF68]
	0x037BF358 BL 0x1C16CF4
	0x037BF35C MOVZ W8, 0x1
	0x037BF360 STRB W8, [X20 + 0x230]
	0x037BF364 ADRP X20, 0x988000
	0x037BF368 LDR X20, [X20 + 0xF68]
	0x037BF36C LDR X8, [X20]
	0x037BF370 LDR X8, [X8 + 0xB8]
	0x037BF374 LDR X9, [X8]
	0x037BF378 CMP X9, X19
	0x037BF37C B.NE 0x37BF3A8
	0x037BF380 ADRP X19, 0xC22000
	0x037BF384 LDRB W9, [X19 + 0x22F]
	0x037BF388 CBNZ W9, 0x37BF3A4
	0x037BF38C MOV X0, X20
	0x037BF390 BL 0x1C16CF4
	0x037BF394 LDR X8, [X20]
	0x037BF398 MOVZ W9, 0x1
	0x037BF39C STRB W9, [X19 + 0x22F]
	0x037BF3A0 LDR X8, [X8 + 0xB8]
	0x037BF3A4 STR X31, [X8]
	0x037BF3A8 LDP X20, X19, [X31 + 0x10]
	0x037BF3AC LDR X30, [X31], #0x20
	0x037BF3B0 RET
	0x037BF3B4 STR X30, [X31 - 0x30]!
	0x037BF3B8 STP X22, X21, [X31 + 0x10]
	0x037BF3BC STP X20, X19, [X31 + 0x20]
	0x037BF3C0 ADRP X20, 0xC22000
	0x037BF3C4 ADRP X21, 0x960000
	0x037BF3C8 ADRP X22, 0x985000
	0x037BF3CC LDRB W8, [X20 + 0x1A3]
	0x037BF3D0 LDR X21, [X21 + 0xDC0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X1, X31
	005 Move X19, X0
	006 Call InputDevice.OnRemoved, X0
	007 Move X20, 0xC23000
	008 Move W8, [X20+544]
	009 Compare W8, 0
	010 JumpIfNotEqual {16}
	011 Move X0, 0x989000
	012 Move X0, [X0+3824]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+544], W8
	016 Move X20, 0x989000
	017 Move X20, [X20+3824]
	018 Move X8, [X20]
	019 Move X8, [X8+184]
	020 Move X9, [X8]
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move X19, 0xC23000
	023 Move W9, [X19+543]
	024 Compare W9, 0
	025 JumpIfNotEqual {32}
	026 Move X0, X20
	027 Call 0x1C17CF4
	028 Move X8, [X20]
	029 Move W9, 1
	030 Move [X19+543], W9
	031 Move X8, [X8+184]
	032 Move [X8], X31
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Return 

Method: System.Void FinishSetup()

Disassembly:
	0x037BF3D4 LDR X22, [X22 + 0xE30]
	0x037BF3D8 MOV X19, X0
	0x037BF3DC TBNZ X8, 0x0, 0x37BF400
	0x037BF3E0 ADRP X0, 0x985000
	0x037BF3E4 LDR X0, [X0 + 0xE30]
	0x037BF3E8 BL 0x1C16CF4
	0x037BF3EC ADRP X0, 0x960000
	0x037BF3F0 LDR X0, [X0 + 0xDC0]
	0x037BF3F4 BL 0x1C16CF4
	0x037BF3F8 MOVZ W8, 0x1
	0x037BF3FC STRB W8, [X20 + 0x1A3]
	0x037BF400 LDR X1, [X21]
	0x037BF404 LDR X2, [X22]
	0x037BF408 MOV X0, X19
	0x037BF40C BL 0x21FC754
	0x037BF410 STR X0, [X19 + 0x170]
	0x037BF414 MOV X0, X19
	0x037BF418 LDP X20, X19, [X31 + 0x20]
	0x037BF41C LDP X22, X21, [X31 + 0x10]
	0x037BF420 MOV X1, X31
	0x037BF424 LDR X30, [X31], #0x30
	0x037BF428 B 0x37729C8
	0x037BF42C MOV X1, X31
	0x037BF430 B 0x377A868
	0x037BF434 LDR X0, [X0 + 0x170]
	0x037BF438 RET
	0x037BF43C STR X1, [X0 + 0x170]
	0x037BF440 RET
	0x037BF444 STR X30, [X31 - 0x20]!
	0x037BF448 STP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xC23000
	007 Move X21, 0x989000
	008 Move X22, 0x986000
	009 Move W8, [X20+395]
	010 Move X21, [X21+3832]
	011 Move X22, [X22+3536]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x986000
	018 Move X0, [X0+3536]
	019 Call 0x1C17CF4
	020 Move X0, 0x989000
	021 Move X0, [X0+3832]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+395], W8
	025 Move X1, [X21]
	026 Move X2, [X22]
	027 Move X0, X19
	028 Call 0x21FD754, X0, X1
	029 Move [X19+368], X0
	030 Move X0, X19
	031 Move X20, [X31+32]
	032 Move X19, [X31+40]
	033 Move X22, [X31+16]
	034 Move X21, [X31+24]
	035 Move X1, X31
	036 Move X30, [X31+48]
	037 Call InputControl.FinishSetup, X0
	038 Return 

Method: System.Void .ctor()

Disassembly:
	0x037BF44C ADRP X19, 0xC22000
	0x037BF450 ADRP X20, 0x988000

ISIL:
	001 Move X1, X31
	002 Call InputDevice..ctor, X0
	003 Return 

