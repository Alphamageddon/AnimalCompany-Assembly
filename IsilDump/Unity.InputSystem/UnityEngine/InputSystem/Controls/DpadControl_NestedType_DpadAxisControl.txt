Type: UnityEngine.InputSystem.Controls.DpadControl/DpadAxisControl

Method: System.Int32 get_component()

Disassembly:
	0x0375AB10 LDR X0, [X0 + 0x48]
	0x0375AB14 BL 0x1C16CF4

ISIL:
	001 Move W0, [X0+300]
	002 Return X0

Method: System.Void set_component(System.Int32 value)

Disassembly:
	0x0375AB18 ADRP X0, 0x9EA000
	0x0375AB1C LDR X0, [X0 + 0xE38]

ISIL:
	001 Move [X0+300], W1
	002 Return 

Method: System.Void FinishSetup()

Disassembly:
	0x0375AB20 BL 0x1C16CF4
	0x0375AB24 ADRP X0, 0x9EC000
	0x0375AB28 LDR X0, [X0 + 0x88]
	0x0375AB2C BL 0x1C16CF4
	0x0375AB30 ADRP X0, 0x9EC000
	0x0375AB34 LDR X0, [X0 + 0x40]
	0x0375AB38 BL 0x1C16CF4
	0x0375AB3C ADRP X0, 0x9EC000
	0x0375AB40 LDR X0, [X0 + 0x90]
	0x0375AB44 BL 0x1C16CF4
	0x0375AB48 ADRP X0, 0x9EC000
	0x0375AB4C LDR X0, [X0 + 0x98]
	0x0375AB50 BL 0x1C16CF4
	0x0375AB54 ADRP X0, 0x9EC000
	0x0375AB58 LDR X0, [X0 + 0xA0]
	0x0375AB5C BL 0x1C16CF4
	0x0375AB60 ADRP X0, 0x9A4000
	0x0375AB64 LDR X0, [X0 + 0x2B8]
	0x0375AB68 BL 0x1C16CF4
	0x0375AB6C ADRP X0, 0x9EC000
	0x0375AB70 LDR X0, [X0 + 0xA8]
	0x0375AB74 BL 0x1C16CF4
	0x0375AB78 ADRP X0, 0x9EC000
	0x0375AB7C LDR X0, [X0 + 0x50]
	0x0375AB80 BL 0x1C16CF4
	0x0375AB84 ADRP X0, 0x9C1000
	0x0375AB88 LDR X0, [X0 + 0xF68]
	0x0375AB8C BL 0x1C16CF4
	0x0375AB90 ADRP X0, 0x9EC000
	0x0375AB94 LDR X0, [X0 + 0x60]
	0x0375AB98 BL 0x1C16CF4
	0x0375AB9C ADRP X0, 0x9EC000
	0x0375ABA0 LDR X0, [X0 + 0xB0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xC87000
	006 Move X20, 0x9C2000
	007 Move W8, [X21+3580]
	008 Move X20, [X20+1920]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x9C2000
	015 Move X0, [X0+1920]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3580], W8
	019 Move X0, X19
	020 Call AxisControl.FinishSetup, X0
	021 Move X0, X19
	022 Move X1, X31
	023 Call InputControl.get_name, X0
	024 Move X1, [X20]
	025 Move X2, X31
	026 Call String.op_Equality, X0, X1
	027 Compare X19, 0
	028 JumpIfEqual {42}
	029 Move X8, [X19+128]
	030 NotImplemented "Instruction ORN not yet implemented."
	031 And W9, W9, 1
	032 Move [X19+300], W9
	033 Compare X8, 0
	034 JumpIfEqual {42}
	035 Move V0, [X8+1]
	036 Move [X19+1], V0
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X30, [X31+32]
	040 Move X21, [X31+40]
	041 Return 
	042 Call 0x1C17F20

Method: System.Single ReadUnprocessedValueFromState(System.Void* statePtr)

Disassembly:
	0x0375ABA4 BL 0x1C16CF4
	0x0375ABA8 ADRP X0, 0x9EC000
	0x0375ABAC LDR X0, [X0 + 0xB8]
	0x0375ABB0 BL 0x1C16CF4
	0x0375ABB4 ADRP X0, 0x9EC000
	0x0375ABB8 LDR X0, [X0 + 0xC0]
	0x0375ABBC BL 0x1C16CF4
	0x0375ABC0 MOVZ W8, 0x1
	0x0375ABC4 STRB W8, [X25 + 0xE0B]
	0x0375ABC8 LDR X1, [X26]
	0x0375ABCC LDR X2, [X28]
	0x0375ABD0 MOV X0, X19
	0x0375ABD4 BL 0x21FC754
	0x0375ABD8 STR X0, [X19 + 0x170]
	0x0375ABDC LDR X1, [X24]
	0x0375ABE0 LDR X2, [X23]
	0x0375ABE4 MOV X0, X19
	0x0375ABE8 BL 0x21FC754
	0x0375ABEC STR X0, [X19 + 0x178]
	0x0375ABF0 LDR X1, [X22]
	0x0375ABF4 LDR X2, [X23]
	0x0375ABF8 MOV X0, X19
	0x0375ABFC BL 0x21FC754
	0x0375AC00 STR X0, [X19 + 0x180]
	0x0375AC04 LDR X1, [X21]
	0x0375AC08 LDR X2, [X20]
	0x0375AC0C MOV X0, X19
	0x0375AC10 BL 0x21FC754
	0x0375AC14 STR X0, [X19 + 0x188]
	0x0375AC18 ADRP X8, 0x9C1000
	0x0375AC1C LDR X8, [X8 + 0xF68]
	0x0375AC20 LDR X2, [X29]
	0x0375AC24 MOV X0, X19
	0x0375AC28 LDR X1, [X8]
	0x0375AC2C BL 0x21FC754
	0x0375AC30 STR X0, [X19 + 0x190]
	0x0375AC34 ADRP X8, 0x9EC000
	0x0375AC38 LDR X8, [X8 + 0xA0]
	0x0375AC3C MOV X0, X19
	0x0375AC40 LDR X1, [X8]
	0x0375AC44 ADRP X8, 0x9EA000
	0x0375AC48 LDR X8, [X8 + 0xE30]
	0x0375AC4C LDR X2, [X8]
	0x0375AC50 BL 0x21FC754
	0x0375AC54 STR X0, [X19 + 0x198]
	0x0375AC58 ADRP X8, 0x9EC000
	0x0375AC5C LDR X8, [X8 + 0xA8]
	0x0375AC60 LDR X2, [X20]
	0x0375AC64 MOV X0, X19
	0x0375AC68 LDR X1, [X8]
	0x0375AC6C BL 0x21FC754
	0x0375AC70 STR X0, [X19 + 0x1A0]
	0x0375AC74 ADRP X8, 0x9EC000
	0x0375AC78 LDR X8, [X8 + 0x98]
	0x0375AC7C MOV X0, X19
	0x0375AC80 LDR X1, [X8]
	0x0375AC84 ADRP X8, 0x9EC000
	0x0375AC88 LDR X8, [X8 + 0x80]
	0x0375AC8C LDR X2, [X8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xC87000
	006 Move W8, [X21+3581]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x9EC000
	014 Move X0, [X0+4080]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+3581], W8
	018 Move X0, [X19+128]
	019 Compare X0, 0
	020 JumpIfEqual {47}
	021 Move X9, 0x9EC000
	022 Move X9, [X9+4080]
	023 Move X8, [X0]
	024 Move X1, [X9]
	025 Move W10, [X8+304]
	026 Move W9, [X1+304]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move X10, [X8+200]
	029 Add X9, X10, X9
	030 NotImplemented "Instruction LDUR not yet implemented."
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move X9, [X8+584]
	033 Move X2, [X8+592]
	034 Move X1, X20
	035 NotImplemented "Instruction BLR not yet implemented."
	036 Move W8, [X19+300]
	037 Compare W8, 0
	038 JumpIfEqual {41}
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move V0, V1
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move X30, [X31+32]
	044 Move X21, [X31+40]
	045 Return V0
	046 Call 0x1C181E0
	047 Call 0x1C17F20
	048 Move X0, 0x9A4000
	049 Move X0, [X0+3960]
	050 Call 0x1C17D08
	051 Call 0x1C17F10
	052 Move X19, X0
	053 Move X0, 0x9EC000
	054 Move X0, [X0+4088]
	055 Call 0x1C17D08
	056 Move X1, X0
	057 Move X0, X19
	058 Move X2, X31
	059 Call IndexOutOfRangeException..ctor, X0, X1
	060 Move X0, 0x9ED000
	061 Move X0, [X0]
	062 Call 0x1C17D08
	063 Move X1, X0
	064 Move X0, X19
	065 Call 0x1C17DEC

Method: System.Void .ctor()

Disassembly:
	0x0375AC90 BL 0x21FC754

ISIL:
	001 Call AxisControl..ctor, X0
	002 Return 

