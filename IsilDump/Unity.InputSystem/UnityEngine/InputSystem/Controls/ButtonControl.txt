Type: UnityEngine.InputSystem.Controls.ButtonControl

Method: System.Single get_pressPointOrDefault()

Disassembly:
	0x03759994 ADRP X0, 0x9C2000
	0x03759998 LDR X0, [X0 + 0xC90]
	0x0375999C BL 0x1C16CF4
	0x037599A0 MOVZ W8, 0x1
	0x037599A4 STRB W8, [X22 + 0xDED]
	0x037599A8 LDR V11, [X21 + 0x12C]
	0x037599AC ADRP X8, 0x9C2000
	0x037599B0 LDR X8, [X8 + 0xC90]
	0x037599B4 FCMP S11, 0x0
	0x037599B8 B.GT 0x37599C8
	0x037599BC LDR X9, [X8]
	0x037599C0 LDR X9, [X9 + 0xB8]
	0x037599C4 LDR V11, [X9]
	0x037599C8 LDR X9, [X20 + 0x128]
	0x037599CC CBZ X9, 0x3759AFC
	0x037599D0 LDR V13, [X9 + 0x12C]
	0x037599D4 FCMP S13, 0x0
	0x037599D8 B.GT 0x37599E8
	0x037599DC LDR X9, [X8]
	0x037599E0 LDR X9, [X9 + 0xB8]
	0x037599E4 LDR V13, [X9]
	0x037599E8 LDR X9, [X20 + 0x130]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xC88000
	005 Move W8, [X20+3565]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x9C3000
	012 Move X0, [X0+3216]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3565], W8
	016 Move V0, [X19+300]
	017 NotImplemented "Instruction FCMP not yet implemented."
	018 Move X8, 0x9C3000
	019 Move X8, [X8+3216]
	020 Move X8, [X8]
	021 Move X8, [X8+184]
	022 Move V0, [X8]
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 Return V0

Method: System.Void .ctor()

Disassembly:
	0x03759088 BL 0x1C16D08
	0x0375908C MOV X1, X20
	0x03759090 MOV X2, X19
	0x03759094 MOV X3, X31
	0x03759098 BL 0x3227BD4
	0x0375909C MOV X19, X0
	0x037590A0 ADRP X0, 0x99A000
	0x037590A4 LDR X0, [X0 + 0xB40]
	0x037590A8 BL 0x1C16D08
	0x037590AC BL 0x1C16F10
	0x037590B0 MOV X1, X19
	0x037590B4 MOV X2, X31
	0x037590B8 MOV X20, X0
	0x037590BC BL 0x3379A44
	0x037590C0 ADRP X0, 0x9EC000
	0x037590C4 LDR X0, [X0 + 0xFD0]
	0x037590C8 BL 0x1C16D08
	0x037590CC MOV X1, X0
	0x037590D0 MOV X0, X20
	0x037590D4 BL 0x1C16DEC
	0x037590D8 STR X30, [X31 - 0x30]!
	0x037590DC STP X22, X21, [X31 + 0x10]
	0x037590E0 STP X20, X19, [X31 + 0x20]
	0x037590E4 ADRP X21, 0xC87000
	0x037590E8 ADRP X22, 0x9C2000
	0x037590EC LDRB W8, [X21 + 0xDF4]
	0x037590F0 LDR X22, [X22 + 0xD18]
	0x037590F4 MOV X20, X1
	0x037590F8 MOV X19, X0
	0x037590FC TBNZ X8, 0x0, 0x3759114
	0x03759100 ADRP X0, 0x9C2000
	0x03759104 LDR X0, [X0 + 0xD18]
	0x03759108 BL 0x1C16CF4
	0x0375910C MOVZ W8, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xC88000
	006 Move X20, 0x9C3000
	007 Move W8, [X21+3566]
	008 Move X20, [X20+3352]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x9C3000
	015 Move X0, [X0+3352]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3566], W8
	019 Move W8, 0xBF800000
	020 Move X0, X19
	021 Move [X19+300], W8
	022 Call AxisControl..ctor, X0
	023 Move X0, [X20]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {29}
	027 Call 0x1C17DFC
	028 Move X0, [X20]
	029 Move X8, [X0+184]
	030 Move X9, -46583808
	031 Move X10, -46587904
	032 Move V0, [X9+193]
	033 Move W8, [X8+4]
	034 Move V1, [X10+73]
	035 Move [X19+184], V0
	036 Move [X19+16], W8
	037 Move [X19+200], V1
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move X30, [X31+32]
	041 Move X21, [X31+40]
	042 Return 

Method: System.Boolean IsValueConsideredPressed(System.Single value)

Disassembly:
	0x03759A00 LDR X9, [X9 + 0xB8]
	0x03759A04 LDR V10, [X9]
	0x03759A08 LDR X9, [X20 + 0x138]
	0x03759A0C CBZ X9, 0x3759AFC
	0x03759A10 LDR V12, [X9 + 0x12C]
	0x03759A14 FCMP S12, 0x0
	0x03759A18 B.GT 0x3759A28
	0x03759A1C LDR X8, [X8]
	0x03759A20 LDR X8, [X8 + 0xB8]
	0x03759A24 LDR V12, [X8]
	0x03759A28 LDR X0, [X20 + 0x120]
	0x03759A2C CBZ X0, 0x3759AFC
	0x03759A30 LDR X8, [X0]
	0x03759A34 FNEG S14, S9
	0x03759A38 FMOV S15, W31
	0x03759A3C FCMP S13, S14
	0x03759A40 LDR X9, [X8 + 0x258]
	0x03759A44 LDR X2, [X8 + 0x260]
	0x03759A48 FCSEL S0, S15, S9, LS
	0x03759A4C FCMP S11, S9
	0x03759A50 FCSEL S0, S0, S15, LS
	0x03759A54 MOV X1, X19
	0x03759A58 BLR X9
	0x03759A5C LDR X0, [X20 + 0x128]
	0x03759A60 CBZ X0, 0x3759AFC
	0x03759A64 LDR X8, [X0]
	0x03759A68 FCMP S13, S14

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xC88000
	006 Move W8, [X20+3565]
	007 Move V8, V0
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x9C3000
	014 Move X0, [X0+3216]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X20+3565], W8
	018 Move V0, [X19+300]
	019 NotImplemented "Instruction FCMP not yet implemented."
	020 Move X8, 0x9C3000
	021 Move X8, [X8+3216]
	022 Move X8, [X8]
	023 Move X8, [X8+184]
	024 Move V0, [X8]
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+8]
	028 NotImplemented "Instruction FCMP not yet implemented."
	029 NotImplemented "Instruction CSET not yet implemented."
	030 Move V8, [X31+32]
	031 Return X0

Method: System.Boolean get_isPressed()

Disassembly:
	0x03759A6C FCCMP S11, S9, 0x0, LS
	0x03759A70 FCSEL S0, S15, S14, LS
	0x03759A74 LDR X9, [X8 + 0x258]
	0x03759A78 LDR X2, [X8 + 0x260]
	0x03759A7C MOV X1, X19
	0x03759A80 BLR X9
	0x03759A84 LDR X0, [X20 + 0x130]
	0x03759A88 CBZ X0, 0x3759AFC
	0x03759A8C LDR X8, [X0]
	0x03759A90 FNEG S11, S8
	0x03759A94 FCMP S10, S11
	0x03759A98 FCCMP S12, S8, 0x0, LS
	0x03759A9C LDR X9, [X8 + 0x258]
	0x03759AA0 LDR X2, [X8 + 0x260]
	0x03759AA4 FMOV S9, W31
	0x03759AA8 FCSEL S0, S9, S11, LS
	0x03759AAC MOV X1, X19
	0x03759AB0 BLR X9
	0x03759AB4 LDR X0, [X20 + 0x138]
	0x03759AB8 CBZ X0, 0x3759AFC
	0x03759ABC LDR X8, [X0]
	0x03759AC0 FCMP S10, S11
	0x03759AC4 FCSEL S0, S9, S8, LS
	0x03759AC8 FCMP S12, S8
	0x03759ACC LDR X3, [X8 + 0x258]
	0x03759AD0 LDR X2, [X8 + 0x260]
	0x03759AD4 FCSEL S0, S0, S9, LS
	0x03759AD8 MOV X1, X19
	0x03759ADC LDP X20, X19, [X31 + 0x60]
	0x03759AE0 LDP X22, X21, [X31 + 0x50]
	0x03759AE4 LDR X30, [X31 + 0x40]
	0x03759AE8 LDP D9, D8, [X31 + 0x30]
	0x03759AEC LDP D11, D10, [X31 + 0x20]
	0x03759AF0 LDP D13, D12, [X31 + 0x10]
	0x03759AF4 LDP D15, D14, [X31], #0x70
	0x03759AF8 BR X3
	0x03759AFC BL 0x1C16F20
	0x03759B00 FSUB S2, S3, S2
	0x03759B04 FSUB S1, S0, S1
	0x03759B08 MOV V0.16B, V2.16B

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xC88000
	007 Move X21, 0x9ED000
	008 Move W8, [X20+3567]
	009 Move X21, [X21+3992]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x9ED000
	016 Move X0, [X0+3992]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+3567], W8
	020 Move X1, [X21]
	021 Move X0, X19
	022 Call InputControl`1<Single>.get_value, X0
	023 Move X20, 0xC88000
	024 Move W8, [X20+3565]
	025 Move V8, [X0]
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {35}
	030 Move X0, 0x9C3000
	031 Move X0, [X0+3216]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X20+3565], W8
	035 Move V0, [X19+300]
	036 NotImplemented "Instruction FCMP not yet implemented."
	037 Move X8, 0x9C3000
	038 Move X8, [X8+3216]
	039 Move X8, [X8]
	040 Move X8, [X8+184]
	041 Move V0, [X8]
	042 Move X20, [X31+32]
	043 Move X19, [X31+40]
	044 Move X30, [X31+16]
	045 Move X21, [X31+24]
	046 NotImplemented "Instruction FCMP not yet implemented."
	047 NotImplemented "Instruction CSET not yet implemented."
	048 Move V8, [X31+48]
	049 Return X0

Method: System.Boolean get_wasPressedThisFrame()

Disassembly:
	0x03759B0C RET
	0x03759B10 LDR W0, [X0 + 0x12C]
	0x03759B14 RET
	0x03759B18 STR W1, [X0 + 0x12C]
	0x03759B1C RET
	0x03759B20 STP X30, X21, [X31 - 0x20]!
	0x03759B24 STP X20, X19, [X31 + 0x10]
	0x03759B28 ADRP X21, 0xC87000
	0x03759B2C ADRP X20, 0x9C2000
	0x03759B30 LDRB W8, [X21 + 0xDFC]
	0x03759B34 LDR X20, [X20 + 0x780]
	0x03759B38 MOV X19, X0
	0x03759B3C TBNZ X8, 0x0, 0x3759B54
	0x03759B40 ADRP X0, 0x9C2000
	0x03759B44 LDR X0, [X0 + 0x780]
	0x03759B48 BL 0x1C16CF4
	0x03759B4C MOVZ W8, 0x1
	0x03759B50 STRB W8, [X21 + 0xDFC]
	0x03759B54 MOV X0, X19
	0x03759B58 BL 0x37582E0
	0x03759B5C MOV X0, X19
	0x03759B60 MOV X1, X31
	0x03759B64 BL 0x3771E78
	0x03759B68 LDR X1, [X20]
	0x03759B6C MOV X2, X31
	0x03759B70 BL 0x321BA08
	0x03759B74 CBZ X19, 0x3759BA0
	0x03759B78 LDR X8, [X19 + 0x80]
	0x03759B7C ORN W9, W31, W0, 0x0
	0x03759B80 AND W9, W9, 0x1
	0x03759B84 STR W9, [X19 + 0x12C]
	0x03759B88 CBZ X8, 0x3759BA0
	0x03759B8C LDR V0, [X8 + 0x1]
	0x03759B90 STR V0, [X19 + 0x1]
	0x03759B94 LDP X20, X19, [X31 + 0x10]
	0x03759B98 LDP X30, X21, [X31], #0x20
	0x03759B9C RET
	0x03759BA0 BL 0x1C16F20
	0x03759BA4 STP X30, X21, [X31 - 0x20]!
	0x03759BA8 STP X20, X19, [X31 + 0x10]
	0x03759BAC ADRP X21, 0xC87000
	0x03759BB0 LDRB W8, [X21 + 0xDFD]
	0x03759BB4 MOV X20, X1
	0x03759BB8 MOV X19, X0
	0x03759BBC TBNZ X8, 0x0, 0x3759BD4
	0x03759BC0 ADRP X0, 0x9EC000
	0x03759BC4 LDR X0, [X0 + 0xFF0]
	0x03759BC8 BL 0x1C16CF4
	0x03759BCC MOVZ W8, 0x1
	0x03759BD0 STRB W8, [X21 + 0xDFD]
	0x03759BD4 LDR X0, [X19 + 0x80]
	0x03759BD8 CBZ X0, 0x3759C44
	0x03759BDC ADRP X9, 0x9EC000
	0x03759BE0 LDR X9, [X9 + 0xFF0]
	0x03759BE4 LDR X8, [X0]
	0x03759BE8 LDR X1, [X9]
	0x03759BEC LDRB W10, [X8 + 0x130]
	0x03759BF0 LDRB W9, [X1 + 0x130]
	0x03759BF4 CMP W10, W9
	0x03759BF8 B.CC 0x3759C40
	0x03759BFC LDR X10, [X8 + 0xC8]
	0x03759C00 ADD X9, X10, X9, 0x3, LSL
	0x03759C04 LDUR X9, [X9 - 0x8]
	0x03759C08 CMP X9, X1
	0x03759C0C B.NE 0x3759C40
	0x03759C10 LDR X9, [X8 + 0x248]
	0x03759C14 LDR X2, [X8 + 0x250]
	0x03759C18 MOV X1, X20
	0x03759C1C BLR X9
	0x03759C20 LDR W8, [X19 + 0x12C]
	0x03759C24 CBZ W8, 0x3759C34
	0x03759C28 CMP W8, 0x1
	0x03759C2C B.NE 0x3759C48
	0x03759C30 MOV V0.16B, V1.16B

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xC88000
	006 Move W8, [X20+3568]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x9ED000
	013 Move X0, [X0+4000]
	014 Call 0x1C17CF4
	015 Move X0, 0x9ED000
	016 Move X0, [X0+3992]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+3568], W8
	020 Move X0, [X19+120]
	021 Compare X0, 0
	022 JumpIfEqual {85}
	023 Move X1, X31
	024 Call InputDevice.get_wasUpdatedThisFrame, X0
	025 Move TEMP, X0
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfNotEqual {54}
	029 Move X8, 0x9ED000
	030 Move X8, [X8+3992]
	031 Move X0, X19
	032 Move X1, [X8]
	033 Call InputControl`1<Single>.get_value, X0
	034 Move X20, 0xC88000
	035 Move W8, [X20+3565]
	036 Move V8, [X0]
	037 Move TEMP, X8
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfEqual {46}
	041 Move X0, 0x9C3000
	042 Move X0, [X0+3216]
	043 Call 0x1C17CF4
	044 Move W8, 1
	045 Move [X20+3565], W8
	046 Move V0, [X19+300]
	047 NotImplemented "Instruction FCMP not yet implemented."
	048 Move X8, 0x9C3000
	049 Move X8, [X8+3216]
	050 Move X8, [X8]
	051 Move X8, [X8+184]
	052 Move V0, [X8]
	053 NotImplemented "Instruction FCMP not yet implemented."
	054 Move W0, W31
	055 Move X8, 0x9ED000
	056 Move X8, [X8+4000]
	057 Move X0, X19
	058 Move X1, [X8]
	059 Call InputControl`1<Single>.ReadValueFromPreviousFrame, X0
	060 Move W8, [X20+3565]
	061 Move V8, V0
	062 Move TEMP, X8
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfEqual {71}
	066 Move X0, 0x9C3000
	067 Move X0, [X0+3216]
	068 Call 0x1C17CF4
	069 Move W8, 1
	070 Move [X20+3565], W8
	071 Move V0, [X19+300]
	072 NotImplemented "Instruction FCMP not yet implemented."
	073 Move X8, 0x9C3000
	074 Move X8, [X8+3216]
	075 Move X8, [X8]
	076 Move X8, [X8+184]
	077 Move V0, [X8]
	078 NotImplemented "Instruction FCMP not yet implemented."
	079 NotImplemented "Instruction CSET not yet implemented."
	080 Move X20, [X31+16]
	081 Move X19, [X31+24]
	082 Move X30, [X31+8]
	083 Move V8, [X31+32]
	084 Return X0
	085 Call 0x1C17F20

Method: System.Boolean get_wasReleasedThisFrame()

Disassembly:
	0x03759C34 LDP X20, X19, [X31 + 0x10]
	0x03759C38 LDP X30, X21, [X31], #0x20
	0x03759C3C RET
	0x03759C40 BL 0x1C171E0
	0x03759C44 BL 0x1C16F20
	0x03759C48 ADRP X0, 0x9A4000
	0x03759C4C LDR X0, [X0 + 0xF78]
	0x03759C50 BL 0x1C16D08
	0x03759C54 BL 0x1C16F10
	0x03759C58 MOV X19, X0
	0x03759C5C ADRP X0, 0x9EC000
	0x03759C60 LDR X0, [X0 + 0xFF8]
	0x03759C64 BL 0x1C16D08
	0x03759C68 MOV X1, X0
	0x03759C6C MOV X0, X19
	0x03759C70 MOV X2, X31
	0x03759C74 BL 0x3379B6C
	0x03759C78 ADRP X0, 0x9ED000
	0x03759C7C LDR X0, [X0]
	0x03759C80 BL 0x1C16D08
	0x03759C84 MOV X1, X0
	0x03759C88 MOV X0, X19
	0x03759C8C BL 0x1C16DEC
	0x03759C90 B 0x3758258
	0x03759C94 STR X30, [X31 - 0x30]!
	0x03759C98 STP X22, X21, [X31 + 0x10]
	0x03759C9C STP X20, X19, [X31 + 0x20]
	0x03759CA0 ADRP X21, 0xC87000
	0x03759CA4 ADRP X22, 0x9ED000
	0x03759CA8 ADRP X20, 0x9C2000
	0x03759CAC LDRB W8, [X21 + 0xDFE]
	0x03759CB0 LDR X22, [X22 + 0x8]
	0x03759CB4 LDR X20, [X20 + 0xD18]
	0x03759CB8 MOV X19, X0
	0x03759CBC TBNZ X8, 0x0, 0x3759CE0
	0x03759CC0 ADRP X0, 0x9ED000
	0x03759CC4 LDR X0, [X0 + 0x8]
	0x03759CC8 BL 0x1C16CF4
	0x03759CCC ADRP X0, 0x9C2000
	0x03759CD0 LDR X0, [X0 + 0xD18]
	0x03759CD4 BL 0x1C16CF4
	0x03759CD8 MOVZ W8, 0x1
	0x03759CDC STRB W8, [X21 + 0xDFE]
	0x03759CE0 LDR X1, [X22]
	0x03759CE4 MOV X0, X19
	0x03759CE8 BL 0x2E01A24
	0x03759CEC LDR X0, [X20]
	0x03759CF0 LDR W8, [X0 + 0xE0]
	0x03759CF4 CBNZ W8, 0x3759D00
	0x03759CF8 BL 0x1C16DFC
	0x03759CFC LDR X0, [X20]
	0x03759D00 LDR X8, [X0 + 0xB8]
	0x03759D04 LDP X22, X21, [X31 + 0x10]
	0x03759D08 LDR W8, [X8 + 0xC]
	0x03759D0C STR W8, [X19 + 0x10]
	0x03759D10 LDP X20, X19, [X31 + 0x20]
	0x03759D14 LDR X30, [X31], #0x30
	0x03759D18 RET
	0x03759D1C STR X30, [X31 - 0x30]!
	0x03759D20 STP X22, X21, [X31 + 0x10]
	0x03759D24 STP X20, X19, [X31 + 0x20]
	0x03759D28 ADRP X22, 0xC87000
	0x03759D2C ADRP X21, 0x9C2000
	0x03759D30 LDRB W8, [X22 + 0xDFF]
	0x03759D34 LDR X21, [X21 + 0xD18]
	0x03759D38 MOV X19, X1
	0x03759D3C MOV X20, X0
	0x03759D40 TBNZ X8, 0x0, 0x3759D58
	0x03759D44 ADRP X0, 0x9C2000
	0x03759D48 LDR X0, [X0 + 0xD18]
	0x03759D4C BL 0x1C16CF4
	0x03759D50 MOVZ W8, 0x1
	0x03759D54 STRB W8, [X22 + 0xDFF]
	0x03759D58 LDR X0, [X21]

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xC88000
	006 Move W8, [X20+3569]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x9ED000
	013 Move X0, [X0+4000]
	014 Call 0x1C17CF4
	015 Move X0, 0x9ED000
	016 Move X0, [X0+3992]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+3569], W8
	020 Move X0, [X19+120]
	021 Compare X0, 0
	022 JumpIfEqual {85}
	023 Move X1, X31
	024 Call InputDevice.get_wasUpdatedThisFrame, X0
	025 Move TEMP, X0
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfNotEqual {79}
	029 Move X8, 0x9ED000
	030 Move X8, [X8+3992]
	031 Move X0, X19
	032 Move X1, [X8]
	033 Call InputControl`1<Single>.get_value, X0
	034 Move X20, 0xC88000
	035 Move W8, [X20+3565]
	036 Move V8, [X0]
	037 Move TEMP, X8
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfEqual {46}
	041 Move X0, 0x9C3000
	042 Move X0, [X0+3216]
	043 Call 0x1C17CF4
	044 Move W8, 1
	045 Move [X20+3565], W8
	046 Move V0, [X19+300]
	047 NotImplemented "Instruction FCMP not yet implemented."
	048 Move X8, 0x9C3000
	049 Move X8, [X8+3216]
	050 Move X8, [X8]
	051 Move X8, [X8+184]
	052 Move V0, [X8]
	053 NotImplemented "Instruction FCMP not yet implemented."
	054 Move X8, 0x9ED000
	055 Move X8, [X8+4000]
	056 Move X0, X19
	057 Move X1, [X8]
	058 Call InputControl`1<Single>.ReadValueFromPreviousFrame, X0
	059 Move W8, [X20+3565]
	060 Move V8, V0
	061 Move TEMP, X8
	062 And TEMP, TEMP, 1
	063 Compare TEMP, 1
	064 JumpIfEqual {70}
	065 Move X0, 0x9C3000
	066 Move X0, [X0+3216]
	067 Call 0x1C17CF4
	068 Move W8, 1
	069 Move [X20+3565], W8
	070 Move V0, [X19+300]
	071 NotImplemented "Instruction FCMP not yet implemented."
	072 Move X8, 0x9C3000
	073 Move X8, [X8+3216]
	074 Move X8, [X8]
	075 Move X8, [X8+184]
	076 Move V0, [X8]
	077 NotImplemented "Instruction FCMP not yet implemented."
	078 NotImplemented "Instruction CSET not yet implemented."
	079 Move W0, W31
	080 Move X20, [X31+16]
	081 Move X19, [X31+24]
	082 Move X30, [X31+8]
	083 Move V8, [X31+32]
	084 Return X0
	085 Call 0x1C17F20

