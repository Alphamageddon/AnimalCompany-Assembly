Type: UnityEngine.InputSystem.Controls.KeyControl

Method: UnityEngine.InputSystem.Key get_keyCode()

Disassembly:
	0x0375AF20 LDR V0, [X20 + 0x1]
	0x0375AF24 LDR X0, [X21]

ISIL:
	001 Move W0, [X0+304]
	002 Return X0

Method: System.Void set_keyCode(UnityEngine.InputSystem.Key value)

Disassembly:
	0x0375AF28 STR V0, [X31]
	0x0375AF2C LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X0+304], W1
	002 Return 

Method: System.Int32 get_scanCode()

Disassembly:
	0x0375AF30 CBNZ W8, 0x375AF38
	0x0375AF34 BL 0x1C16DFC
	0x0375AF38 ADD X0, X31, 0x0
	0x0375AF3C MOV X1, X19
	0x0375AF40 MOV X2, X31
	0x0375AF44 BL 0x3809E28
	0x0375AF48 LDP X20, X19, [X31 + 0x30]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X1, X31
	004 Move X19, X0
	005 Call InputControl.RefreshConfigurationIfNeeded, X0
	006 Move W0, [X19+308]
	007 Move X30, [X31+16]
	008 Move X19, [X31+24]
	009 Return X0

Method: System.Void RefreshConfiguration()

Disassembly:
	0x0375AF4C LDP X22, X21, [X31 + 0x20]
	0x0375AF50 LDR X30, [X31 + 0x10]
	0x0375AF54 ADD X31, X31, 0x40
	0x0375AF58 RET
	0x0375AF5C STP X30, X23, [X31 - 0x30]!
	0x0375AF60 STP X22, X21, [X31 + 0x10]
	0x0375AF64 STP X20, X19, [X31 + 0x20]
	0x0375AF68 ADRP X22, 0xC86000
	0x0375AF6C ADRP X23, 0x9C1000
	0x0375AF70 LDRB W8, [X22 + 0xE10]
	0x0375AF74 LDR X23, [X23 + 0xD18]
	0x0375AF78 MOV X19, X2
	0x0375AF7C MOV W20, W1
	0x0375AF80 MOV X21, X0
	0x0375AF84 TBNZ X8, 0x0, 0x375AF9C
	0x0375AF88 ADRP X0, 0x9C1000
	0x0375AF8C LDR X0, [X0 + 0xD18]
	0x0375AF90 BL 0x1C16CF4
	0x0375AF94 MOVZ W8, 0x1
	0x0375AF98 STRB W8, [X22 + 0xE10]
	0x0375AF9C LDR X0, [X23]
	0x0375AFA0 LDR W8, [X0 + 0xE0]
	0x0375AFA4 CBNZ W8, 0x375AFAC
	0x0375AFA8 BL 0x1C16DFC
	0x0375AFAC LDRSW X8, [X21 + 0x14]
	0x0375AFB0 LDP X22, X21, [X31 + 0x10]
	0x0375AFB4 STR W20, [X8, X19, LSL]
	0x0375AFB8 LDP X20, X19, [X31 + 0x20]
	0x0375AFBC LDP X30, X23, [X31], #0x30
	0x0375AFC0 RET
	0x0375AFC4 SUB X31, X31, 0x30
	0x0375AFC8 STP X30, X21, [X31 + 0x10]
	0x0375AFCC STP X20, X19, [X31 + 0x20]
	0x0375AFD0 ADRP X21, 0xC86000
	0x0375AFD4 ADRP X20, 0x9C1000
	0x0375AFD8 LDRB W8, [X21 + 0xE11]
	0x0375AFDC LDR X20, [X20 + 0xD18]
	0x0375AFE0 MOV X19, X0
	0x0375AFE4 TBNZ X8, 0x0, 0x375AFFC
	0x0375AFE8 ADRP X0, 0x9C1000
	0x0375AFEC LDR X0, [X0 + 0xD18]
	0x0375AFF0 BL 0x1C16CF4
	0x0375AFF4 MOVZ W8, 0x1
	0x0375AFF8 STRB W8, [X21 + 0xE11]
	0x0375AFFC MOV X0, X19
	0x0375B000 BL 0x37582E0
	0x0375B004 LDR X0, [X20]
	0x0375B008 LDR W20, [X19 + 0x10]
	0x0375B00C LDR W8, [X0 + 0xE0]
	0x0375B010 CBNZ W8, 0x375B018
	0x0375B014 BL 0x1C16DFC
	0x0375B018 MOV X0, X20
	0x0375B01C MOV X1, X31
	0x0375B020 BL 0x3808E78
	0x0375B024 TBZ X0, 0x0, 0x375B038
	0x0375B028 LDP X20, X19, [X31 + 0x20]
	0x0375B02C LDP X30, X21, [X31 + 0x10]
	0x0375B030 ADD X31, X31, 0x30
	0x0375B034 RET
	0x0375B038 ADRP X0, 0x9C0000
	0x0375B03C LDR X20, [X19 + 0x10]
	0x0375B040 LDR X0, [X0 + 0xD18]
	0x0375B044 BL 0x1C16D08
	0x0375B048 BL 0x19903D0
	0x0375B04C STR W20, [X31 + 0x8]
	0x0375B050 ADRP X0, 0x9C0000
	0x0375B054 LDR X0, [X0 + 0xD28]
	0x0375B058 BL 0x1C16D08
	0x0375B05C ADD X1, X31, 0x8
	0x0375B060 BL 0x1C16E04
	0x0375B064 MOV X20, X0
	0x0375B068 ADRP X0, 0x9EB000
	0x0375B06C LDR X0, [X0 + 0xD8]
	0x0375B070 BL 0x1C16D08
	0x0375B074 MOV X1, X20
	0x0375B078 MOV X2, X19
	0x0375B07C MOV X3, X31
	0x0375B080 BL 0x3227BD4
	0x0375B084 MOV X19, X0
	0x0375B088 ADRP X0, 0x998000
	0x0375B08C LDR X0, [X0 + 0xB40]
	0x0375B090 BL 0x1C16D08
	0x0375B094 BL 0x1C16F10
	0x0375B098 MOV X1, X19
	0x0375B09C MOV X2, X31
	0x0375B0A0 MOV X20, X0
	0x0375B0A4 BL 0x3379A44
	0x0375B0A8 ADRP X0, 0x9EB000
	0x0375B0AC LDR X0, [X0 + 0xE0]
	0x0375B0B0 BL 0x1C16D08
	0x0375B0B4 MOV X1, X0
	0x0375B0B8 MOV X0, X20

ISIL:
	001 Move [X31-64], X29
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Subtract X31, X31, 560
	009 NotImplemented "Instruction MRS not yet implemented."
	010 Move X8, [X23+40]
	011 Move X20, 0xC87000
	012 Move X19, X0
	013 Move [X31+552], X8
	014 Move W8, [X20+3586]
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0x99C000
	020 Move X0, [X0+3144]
	021 Call 0x1C17CF4
	022 Move X0, 0x9ED000
	023 Move X0, [X0+16]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X20+3586], W8
	027 Add X0, X31, 280
	028 Move W2, 268
	029 Move W1, W31
	030 Call 0x3EB2B10
	031 Move W0, [X19+304]
	032 Add X8, X31, 8
	033 Move X1, X31
	034 Move [X19+56], X31
	035 Move [X19+308], W31
	036 Call QueryKeyNameCommand.Create, X0
	037 Add X0, X31, 280
	038 Add X1, X31, 8
	039 Move W2, 268
	040 Call 0x3EB2AC0
	041 Move X0, [X19+120]
	042 Compare X0, 0
	043 JumpIfEqual {110}
	044 Move X8, 0x9ED000
	045 Move X8, [X8+16]
	046 Add X1, X31, 280
	047 Move X2, [X8]
	048 Call InputDevice.ExecuteCommand, X0, X1
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move W8, [X31+288]
	051 Add X0, X31, 280
	052 Move X1, X31
	053 Move [X19+308], W8
	054 Call QueryKeyNameCommand.ReadKeyName, X0
	055 Move X1, X31
	056 Move X20, X0
	057 Call String.IsNullOrEmpty, X0
	058 Move TEMP, X0
	059 And TEMP, TEMP, 1
	060 Compare TEMP, 1
	061 JumpIfEqual {97}
	062 Move X8, 0x99B000
	063 Move X8, [X8+3144]
	064 Move X0, [X8]
	065 Move W8, [X0+224]
	066 Compare W8, 0
	067 JumpIfNotEqual {69}
	068 Call 0x1C17DFC
	069 Move X0, X31
	070 Call CultureInfo.get_InvariantCulture
	071 Compare X0, 0
	072 JumpIfEqual {110}
	073 Move X8, [X0]
	074 Move X9, [X8+472]
	075 Move X1, [X8+480]
	076 NotImplemented "Instruction BLR not yet implemented."
	077 Compare X0, 0
	078 JumpIfEqual {110}
	079 Move X8, [X0]
	080 Move X1, X20
	081 Move X21, X0
	082 Move X9, [X8+440]
	083 Move X2, [X8+448]
	084 NotImplemented "Instruction BLR not yet implemented."
	085 Move X1, X31
	086 Move X22, X0
	087 Call String.IsNullOrEmpty, X0
	088 Move TEMP, X0
	089 And TEMP, TEMP, 1
	090 Compare TEMP, 1
	091 JumpIfEqual {97}
	092 Move X0, X21
	093 Move X1, X22
	094 Move X2, X31
	095 Call TextInfo.ToTitleCase, X0, X1
	096 Move X20, X0
	097 Move [X19+56], X20
	098 Move X8, [X23+40]
	099 Move X9, [X31+552]
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Add X31, X31, 560
	102 Move X20, [X31+48]
	103 Move X19, [X31+56]
	104 Move X22, [X31+32]
	105 Move X21, [X31+40]
	106 Move X30, [X31+16]
	107 Move X23, [X31+24]
	108 Move X29, [X31+64]
	109 Return 
	110 Call 0x1C17F20
	111 Call 0x3EB2B20

Method: System.Void .ctor()

Disassembly:
	0x0375B0BC BL 0x1C16DEC

ISIL:
	001 Call ButtonControl..ctor, X0
	002 Return 

