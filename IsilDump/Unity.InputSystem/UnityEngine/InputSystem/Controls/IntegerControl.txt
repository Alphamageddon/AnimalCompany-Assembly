Type: UnityEngine.InputSystem.Controls.IntegerControl

Method: System.Void .ctor()

Disassembly:
	0x0375AC94 STR X0, [X19 + 0x1A8]
	0x0375AC98 ADRP X8, 0x9EC000
	0x0375AC9C LDR X8, [X8 + 0x90]
	0x0375ACA0 LDR X2, [X27]
	0x0375ACA4 MOV X0, X19
	0x0375ACA8 LDR X1, [X8]
	0x0375ACAC BL 0x21FC754
	0x0375ACB0 STR X0, [X19 + 0x1B0]
	0x0375ACB4 ADRP X8, 0x9EC000
	0x0375ACB8 LDR X8, [X8 + 0xB0]
	0x0375ACBC LDR X2, [X27]
	0x0375ACC0 MOV X0, X19
	0x0375ACC4 LDR X1, [X8]
	0x0375ACC8 BL 0x21FC754
	0x0375ACCC STR X0, [X19 + 0x1B8]
	0x0375ACD0 ADRP X8, 0x9EC000
	0x0375ACD4 LDR X8, [X8 + 0xB8]
	0x0375ACD8 LDR X2, [X23]
	0x0375ACDC MOV X0, X19
	0x0375ACE0 LDR X1, [X8]
	0x0375ACE4 BL 0x21FC754
	0x0375ACE8 STR X0, [X19 + 0x1C0]
	0x0375ACEC ADRP X8, 0x9EC000
	0x0375ACF0 LDR X8, [X8 + 0x88]
	0x0375ACF4 MOV X0, X19
	0x0375ACF8 LDR X1, [X8]
	0x0375ACFC ADRP X8, 0x9EC000
	0x0375AD00 LDR X8, [X8 + 0x78]
	0x0375AD04 LDR X2, [X8]
	0x0375AD08 BL 0x21FC754
	0x0375AD0C STR X0, [X19 + 0x1C8]
	0x0375AD10 ADRP X8, 0x9EC000
	0x0375AD14 LDR X8, [X8 + 0xC0]
	0x0375AD18 LDR X2, [X20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xC87000
	007 Move X22, 0x9ED000
	008 Move X20, 0x9C2000
	009 Move W8, [X21+3582]
	010 Move X22, [X22+8]
	011 Move X20, [X20+3352]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x9ED000
	018 Move X0, [X0+8]
	019 Call 0x1C17CF4
	020 Move X0, 0x9C2000
	021 Move X0, [X0+3352]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+3582], W8
	025 Move X1, [X22]
	026 Move X0, X19
	027 Call InputControl`1<Int32>..ctor, X0
	028 Move X0, [X20]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {34}
	032 Call 0x1C17DFC
	033 Move X0, [X20]
	034 Move X8, [X0+184]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move W8, [X8+12]
	038 Move [X19+16], W8
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X30, [X31+48]
	042 Return 

Method: System.Int32 ReadUnprocessedValueFromState(System.Void* statePtr)

Disassembly:
	0x0375AD1C MOV X0, X19
	0x0375AD20 LDR X1, [X8]
	0x0375AD24 BL 0x21FC754
	0x0375AD28 STR X0, [X19 + 0x1D0]
	0x0375AD2C ADRP X8, 0x9EC000
	0x0375AD30 LDR X8, [X8 + 0x70]
	0x0375AD34 MOV X0, X19
	0x0375AD38 LDP X20, X19, [X31 + 0x50]
	0x0375AD3C LDP X22, X21, [X31 + 0x40]
	0x0375AD40 LDR X1, [X8]
	0x0375AD44 LDP X24, X23, [X31 + 0x30]
	0x0375AD48 LDP X26, X25, [X31 + 0x20]
	0x0375AD4C LDP X28, X27, [X31 + 0x10]
	0x0375AD50 LDP X29, X30, [X31], #0x60
	0x0375AD54 B 0x2E07F60
	0x0375AD58 STP X30, X23, [X31 - 0x30]!
	0x0375AD5C STP X22, X21, [X31 + 0x10]
	0x0375AD60 STP X20, X19, [X31 + 0x20]
	0x0375AD64 ADRP X22, 0xC86000
	0x0375AD68 ADRP X23, 0x9C1000
	0x0375AD6C MOV X19, X8
	0x0375AD70 LDRB W8, [X22 + 0xE0C]
	0x0375AD74 LDR X23, [X23 + 0xD18]
	0x0375AD78 MOV X20, X1
	0x0375AD7C MOV X21, X0
	0x0375AD80 TBNZ X8, 0x0, 0x375AD98
	0x0375AD84 ADRP X0, 0x9C1000
	0x0375AD88 LDR X0, [X0 + 0xD18]
	0x0375AD8C BL 0x1C16CF4
	0x0375AD90 MOVZ W8, 0x1
	0x0375AD94 STRB W8, [X22 + 0xE0C]
	0x0375AD98 LDR X0, [X23]
	0x0375AD9C LDR W8, [X0 + 0xE0]
	0x0375ADA0 CBNZ W8, 0x375ADA8
	0x0375ADA4 BL 0x1C16DFC
	0x0375ADA8 LDRSW X8, [X21 + 0x14]
	0x0375ADAC LDP X22, X21, [X31 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xC87000
	007 Move X21, 0x9C2000
	008 Move W8, [X22+3583]
	009 Move X21, [X21+3352]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x9C2000
	017 Move X0, [X0+3352]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+3583], W8
	021 Move X0, [X21]
	022 Move W21, [X20+216]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move W8, 0x5420
	028 NotImplemented "Instruction MOVK not yet implemented."
	029 NotImplemented "Instruction CMP not yet implemented."
	030 NotImplemented "Instruction LDRSW not yet implemented."
	031 Move X22, [X31+16]
	032 Move X21, [X31+24]
	033 Move W0, [X8]
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X30, [X31+48]
	037 Return X0
	038 Add X0, X20, 16
	039 Move X1, X19
	040 Move X20, [X31+32]
	041 Move X19, [X31+40]
	042 Move X22, [X31+16]
	043 Move X21, [X31+24]
	044 Move X2, X31
	045 Move X30, [X31+48]
	046 Call InputStateBlock.ReadInt, X0, X1
	047 Return X0

Method: System.Void WriteValueIntoState(System.Int32 value, System.Void* statePtr)

Disassembly:
	0x0375ADB0 ADD X8, X8, X20
	0x0375ADB4 LDR X9, [X8 + 0x30]
	0x0375ADB8 LDP V1, V0, [X8 + 0x10]
	0x0375ADBC LDR V2, [X8]
	0x0375ADC0 STR X9, [X19 + 0x30]
	0x0375ADC4 STP V1, V0, [X19 + 0x10]
	0x0375ADC8 STR V2, [X19]
	0x0375ADCC LDP X20, X19, [X31 + 0x20]
	0x0375ADD0 LDP X30, X23, [X31], #0x30
	0x0375ADD4 RET
	0x0375ADD8 STP X30, X23, [X31 - 0x30]!
	0x0375ADDC STP X22, X21, [X31 + 0x10]
	0x0375ADE0 STP X20, X19, [X31 + 0x20]
	0x0375ADE4 ADRP X22, 0xC86000
	0x0375ADE8 ADRP X23, 0x9C1000
	0x0375ADEC LDRB W8, [X22 + 0xE0D]
	0x0375ADF0 LDR X23, [X23 + 0xD18]
	0x0375ADF4 MOV X20, X2
	0x0375ADF8 MOV X19, X1
	0x0375ADFC MOV X21, X0
	0x0375AE00 TBNZ X8, 0x0, 0x375AE24
	0x0375AE04 ADRP X0, 0x9C1000
	0x0375AE08 LDR X0, [X0 + 0xD18]
	0x0375AE0C BL 0x1C16CF4
	0x0375AE10 ADRP X0, 0x9EC000
	0x0375AE14 LDR X0, [X0 + 0xC8]
	0x0375AE18 BL 0x1C16CF4
	0x0375AE1C MOVZ W8, 0x1
	0x0375AE20 STRB W8, [X22 + 0xE0D]
	0x0375AE24 LDR X0, [X23]
	0x0375AE28 LDR W8, [X0 + 0xE0]
	0x0375AE2C CBNZ W8, 0x375AE34
	0x0375AE30 BL 0x1C16DFC
	0x0375AE34 LDRSW X8, [X21 + 0x14]
	0x0375AE38 MOV X1, X19
	0x0375AE3C LDP X22, X21, [X31 + 0x10]
	0x0375AE40 MOVZ W2, 0x38
	0x0375AE44 ADD X0, X8, X20
	0x0375AE48 LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0xC87000
	008 Move X22, 0x9C2000
	009 Move W8, [X23+3584]
	010 Move X22, [X22+3352]
	011 Move X20, X2
	012 Move W19, W1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x9C2000
	019 Move X0, [X0+3352]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X23+3584], W8
	023 Move X0, [X22]
	024 Move W22, [X21+216]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move W8, 0x5420
	030 NotImplemented "Instruction MOVK not yet implemented."
	031 NotImplemented "Instruction CMP not yet implemented."
	032 NotImplemented "Instruction LDRSW not yet implemented."
	033 Move X22, [X31+16]
	034 Move X21, [X31+24]
	035 Move [X8], W19
	036 Move X20, [X31+32]
	037 Move X19, [X31+40]
	038 Move X30, [X31+48]
	039 Move X23, [X31+56]
	040 Return 
	041 Add X0, X21, 16
	042 Move X1, X20
	043 Move W2, W19
	044 Move X20, [X31+32]
	045 Move X19, [X31+40]
	046 Move X22, [X31+16]
	047 Move X21, [X31+24]
	048 Move X3, X31
	049 Move X30, [X31+48]
	050 Move X23, [X31+56]
	051 Call InputStateBlock.WriteInt, X0, X1, X2
	052 Return 

Method: UnityEngine.InputSystem.Utilities.FourCC CalculateOptimizedControlDataType()

Disassembly:
	0x0375AE4C MOV X3, X31
	0x0375AE50 LDP X30, X23, [X31], #0x30
	0x0375AE54 B 0x3BFF954
	0x0375AE58 STR X30, [X31 - 0x30]!
	0x0375AE5C STP X22, X21, [X31 + 0x10]
	0x0375AE60 STP X20, X19, [X31 + 0x20]
	0x0375AE64 ADRP X21, 0xC86000
	0x0375AE68 ADRP X22, 0x9EC000
	0x0375AE6C ADRP X20, 0x9C1000
	0x0375AE70 LDRB W8, [X21 + 0xE0E]
	0x0375AE74 LDR X22, [X22 + 0xD0]
	0x0375AE78 LDR X20, [X20 + 0xD18]
	0x0375AE7C MOV X19, X0
	0x0375AE80 TBNZ X8, 0x0, 0x375AEA4
	0x0375AE84 ADRP X0, 0x9EC000
	0x0375AE88 LDR X0, [X0 + 0xD0]
	0x0375AE8C BL 0x1C16CF4
	0x0375AE90 ADRP X0, 0x9C1000
	0x0375AE94 LDR X0, [X0 + 0xD18]
	0x0375AE98 BL 0x1C16CF4
	0x0375AE9C MOVZ W8, 0x1
	0x0375AEA0 STRB W8, [X21 + 0xE0E]
	0x0375AEA4 LDR X1, [X22]
	0x0375AEA8 MOV X0, X19
	0x0375AEAC BL 0x2E02C44
	0x0375AEB0 LDR X0, [X20]
	0x0375AEB4 LDR W8, [X0 + 0xE0]
	0x0375AEB8 CBNZ W8, 0x375AEC4
	0x0375AEBC BL 0x1C16DFC
	0x0375AEC0 LDR X0, [X20]
	0x0375AEC4 LDR X8, [X0 + 0xB8]
	0x0375AEC8 LDP X22, X21, [X31 + 0x10]
	0x0375AECC LDR W8, [X8 + 0xC]
	0x0375AED0 STR W8, [X19 + 0x10]
	0x0375AED4 LDP X20, X19, [X31 + 0x20]
	0x0375AED8 LDR X30, [X31], #0x30
	0x0375AEDC RET
	0x0375AEE0 SUB X31, X31, 0x40
	0x0375AEE4 STR X30, [X31 + 0x10]
	0x0375AEE8 STP X22, X21, [X31 + 0x20]
	0x0375AEEC STP X20, X19, [X31 + 0x30]
	0x0375AEF0 ADRP X22, 0xC86000
	0x0375AEF4 ADRP X21, 0x9C1000
	0x0375AEF8 LDRB W8, [X22 + 0xE0F]
	0x0375AEFC LDR X21, [X21 + 0xD18]
	0x0375AF00 MOV X19, X1
	0x0375AF04 MOV X20, X0
	0x0375AF08 TBNZ X8, 0x0, 0x375AF20
	0x0375AF0C ADRP X0, 0x9C1000
	0x0375AF10 LDR X0, [X0 + 0xD18]
	0x0375AF14 BL 0x1C16CF4
	0x0375AF18 MOVZ W8, 0x1
	0x0375AF1C STRB W8, [X22 + 0xE0F]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xC87000
	006 Move X20, 0x9C2000
	007 Move W8, [X21+3585]
	008 Move X20, [X20+3352]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x9C2000
	015 Move X0, [X0+3352]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3585], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {25}
	023 Call 0x1C17DFC
	024 Move X0, [X20]
	025 Move X8, [X0+184]
	026 Move W9, [X19+16]
	027 Move W8, [X8+12]
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1C17DFC
	033 Move W8, [X19+28]
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move X0, [X20]
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {40}
	039 Call 0x1C17DFC
	040 Move W8, [X19+24]
	041 Compare W8, 0
	042 JumpIfEqual {56}
	043 Move X0, [X20]
	044 Move W8, [X0+224]
	045 Compare W8, 0
	046 JumpIfNotEqual {49}
	047 Call 0x1C17DFC
	048 Move X0, [X20]
	049 Move X8, [X0+184]
	050 Move W0, [X8]
	051 Move X20, [X31+16]
	052 Move X19, [X31+24]
	053 Move X30, [X31+32]
	054 Move X21, [X31+40]
	055 Return X0
	056 Move X0, [X20]
	057 Move W8, [X0+224]
	058 Compare W8, 0
	059 JumpIfNotEqual {62}
	060 Call 0x1C17DFC
	061 Move X0, [X20]
	062 Move X8, [X0+184]
	063 Add X8, X8, 12

