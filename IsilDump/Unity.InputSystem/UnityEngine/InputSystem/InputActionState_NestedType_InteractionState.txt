Type: UnityEngine.InputSystem.InputActionState/InteractionState

Method: System.Int32 get_triggerControlIndex()

Disassembly:
	0x0374CDC4 LDR X9, [X19 + 0xA8]
	0x0374CDC8 ADD X8, X8, X25, 0x3, LSL
	0x0374CDCC CSINV W21, W11, W31, NE
	0x0374CDD0 LDR X22, [X8 + 0x20]
	0x0374CDD4 ADD W8, W21, W21, 0x1, LSL

ISIL:
	001 NotImplemented "Instruction LDRH not yet implemented."
	002 Move W9, 0xFFFF
	003 NotImplemented "Instruction CMP not yet implemented."
	004 NotImplemented "Instruction CSINV not yet implemented."
	005 Return X0

Method: System.Void set_triggerControlIndex(System.Int32 value)

Disassembly:
	0x0374DBE4 ADRP X0, 0x9CE000
	0x0374DBE8 LDR X0, [X0 + 0x270]
	0x0374DBEC BL 0x1C16CF4
	0x0374DBF0 MOVZ W8, 0x1
	0x0374DBF4 STRB W8, [X20 + 0xD9E]
	0x0374DBF8 LDRB W8, [X19 + 0xC0]
	0x0374DBFC CBZ W8, 0x374DC38
	0x0374DC00 ADRP X20, 0x9CE000
	0x0374DC04 LDR X20, [X20 + 0x270]
	0x0374DC08 LDR X0, [X20]
	0x0374DC0C LDR W8, [X0 + 0xE0]
	0x0374DC10 CBNZ W8, 0x374DC1C
	0x0374DC14 BL 0x1C16DFC
	0x0374DC18 LDR X0, [X20]
	0x0374DC1C LDR X8, [X0 + 0xB8]
	0x0374DC20 LDR X0, [X8]
	0x0374DC24 CBZ X0, 0x374DC44
	0x0374DC28 LDR X1, [X19 + 0xD0]
	0x0374DC2C MOV X2, X31
	0x0374DC30 BL 0x37C2524
	0x0374DC34 STRB W31, [X19 + 0xC0]
	0x0374DC38 LDP X20, X19, [X31 + 0x10]
	0x0374DC3C LDR X30, [X31], #0x20
	0x0374DC40 RET
	0x0374DC44 BL 0x1C16F20
	0x0374DC48 STR D8, [X31 - 0x60]!
	0x0374DC4C STP X30, X27, [X31 + 0x10]
	0x0374DC50 STP X26, X25, [X31 + 0x20]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Add W31, W1, 1
	004 Move W8, 0xFFFF
	005 NotImplemented "Instruction CMP not yet implemented."
	006 Move W8, W1
	007 NotImplemented "Instruction STRH not yet implemented."
	008 Move X30, [X31+16]
	009 Move X19, [X31+24]
	010 Return 
	011 Move X0, 0x9A7000
	012 Move X0, [X0+2880]
	013 Call 0x1C17D08
	014 Call 0x1C17F10
	015 Move X19, X0
	016 Move X0, 0x9F9000
	017 Move X0, [X0+2984]
	018 Call 0x1C17D08
	019 Move X1, X0
	020 Move X0, X19
	021 Move X2, X31
	022 Call NotSupportedException..ctor, X0, X1
	023 Move X0, 0x9F9000
	024 Move X0, [X0+3016]
	025 Call 0x1C17D08
	026 Move X1, X0
	027 Move X0, X19
	028 Call 0x1C17DEC

Method: System.Double get_startTime()

Disassembly:
	0x03752760 BL 0x1C16E08
	0x03752764 MOV X1, X0

ISIL:
	001 Move V0, [X0+8]
	002 Return V0

Method: System.Void set_startTime(System.Double value)

Disassembly:
	0x03752768 ADD X0, X31, 0x8
	0x0375276C MOVZ W2, 0x58

ISIL:
	001 Move [X0+8], D0
	002 Return 

Method: System.Double get_performedTime()

Disassembly:
	0x03752770 BL 0x3EB1AC0
	0x03752774 ADD X1, X31, 0x8

ISIL:
	001 Move V0, [X0+24]
	002 Return V0

Method: System.Void set_performedTime(System.Double value)

Disassembly:
	0x03752778 MOV X0, X19
	0x0375277C BL 0x3752638

ISIL:
	001 Move [X0+24], D0
	002 Return 

Method: System.Double get_timerStartTime()

Disassembly:
	0x03752780 LDP X20, X19, [X31 + 0x70]
	0x03752784 LDP X30, X21, [X31 + 0x60]

ISIL:
	001 Move V0, [X0+16]
	002 Return V0

Method: System.Void set_timerStartTime(System.Double value)

Disassembly:
	0x03752788 AND W0, W0, 0x1
	0x0375278C ADD X31, X31, 0x80

ISIL:
	001 Move [X0+16], D0
	002 Return 

Method: System.Single get_timerDuration()

Disassembly:
	0x03752790 RET
	0x03752794 SUB X31, X31, 0xC0

ISIL:
	001 Move V0, [X0+4]
	002 Return V0

Method: System.Void set_timerDuration(System.Single value)

Disassembly:
	0x03752798 STP X30, X19, [X31 + 0xB0]
	0x0375279C MOV X19, X1

ISIL:
	001 Move [X0+4], S0
	002 Return 

Method: System.Single get_totalTimeoutCompletionDone()

Disassembly:
	0x037527A0 MOV X1, X0
	0x037527A4 ADD X0, X31, 0x0

ISIL:
	001 Move V0, [X0+32]
	002 Return V0

Method: System.Void set_totalTimeoutCompletionDone(System.Single value)

Disassembly:
	0x037527A8 MOVZ W2, 0x58
	0x037527AC BL 0x3EB1AC0

ISIL:
	001 Move [X0+32], S0
	002 Return 

Method: System.Single get_totalTimeoutCompletionTimeRemaining()

Disassembly:
	0x037527B0 ADD X0, X31, 0x58
	0x037527B4 MOVZ W2, 0x58

ISIL:
	001 Move V0, [X0+36]
	002 Return V0

Method: System.Void set_totalTimeoutCompletionTimeRemaining(System.Single value)

Disassembly:
	0x037527B8 MOV X1, X19
	0x037527BC BL 0x3EB1AC0

ISIL:
	001 Move [X0+36], S0
	002 Return 

Method: System.Int64 get_timerMonitorIndex()

Disassembly:
	0x037527C0 ADD X0, X31, 0x0
	0x037527C4 ADD X1, X31, 0x58

ISIL:
	001 Move X0, [X0+40]
	002 Return X0

Method: System.Void set_timerMonitorIndex(System.Int64 value)

Disassembly:
	0x037527C8 BL 0x3752638
	0x037527CC LDP X30, X19, [X31 + 0xB0]

ISIL:
	001 Move [X0+40], X1
	002 Return 

Method: System.Boolean get_isTimerRunning()

Disassembly:
	0x0374DC54 STP X24, X23, [X31 + 0x30]
	0x0374DC58 STP X22, X21, [X31 + 0x40]
	0x0374DC5C STP X20, X19, [X31 + 0x50]

ISIL:
	001 Move W8, [X0+3]
	002 And W0, W8, 1
	003 Return X0

Method: System.Void set_isTimerRunning(System.Boolean value)

Disassembly:
	0x0375028C LDP X20, X19, [X31 + 0x30]
	0x03750290 LDP X22, X21, [X31 + 0x20]
	0x03750294 LDP X30, X23, [X31 + 0x10]
	0x03750298 MOV V0.16B, V8.16B

ISIL:
	001 Move W8, [X0+3]
	002 NotImplemented "Instruction BFM not yet implemented."
	003 Move [X0+3], W8
	004 Return 

Method: UnityEngine.InputSystem.InputActionPhase get_phase()

Disassembly:
	0x037527D0 ORN W8, W31, W0, 0x0
	0x037527D4 AND W0, W8, 0x1

ISIL:
	001 Move W0, [X0+2]
	002 Return X0

Method: System.Void set_phase(UnityEngine.InputSystem.InputActionPhase value)

Disassembly:
	0x0374DBDC MOV X19, X0
	0x0374DBE0 TBNZ X8, 0x0, 0x374DBF8

ISIL:
	001 Move [X0+2], W1
	002 Return 

