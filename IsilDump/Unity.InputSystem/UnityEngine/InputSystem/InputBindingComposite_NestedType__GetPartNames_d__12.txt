Type: UnityEngine.InputSystem.InputBindingComposite/<GetPartNames>d__12

Method: System.Void .ctor(System.Int32 <>1__state)

Disassembly:
	0x03754378 ADRP X8, 0x9C7000
	0x0375437C LDR X8, [X8 + 0x270]
	0x03754380 LDR X0, [X8]
	0x03754384 LDR W8, [X0 + 0xE0]
	0x03754388 CBNZ W8, 0x3754390
	0x0375438C BL 0x1C16DFC
	0x03754390 ADRP X8, 0x9F1000
	0x03754394 LDR X8, [X8 + 0xE10]
	0x03754398 LDR X2, [X8]
	0x0375439C ADD X1, X31, 0x360
	0x037543A0 MOV X0, X20
	0x037543A4 BL 0x220B578
	0x037543A8 MOV W26, W0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move X0, X31
	009 Move [X20+16], W19
	010 Call Environment.get_CurrentManagedThreadId
	011 Move [X20+32], W0
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move X30, [X31+32]
	015 Return 

Method: System.Void System.IDisposable.Dispose()

Disassembly:
	0x037544D0 B.EQ 0x37544EC

ISIL:
	001 Return 

Method: System.Boolean MoveNext()

Disassembly:
	0x037544D4 LDR X8, [X31 + 0xD0]
	0x037544D8 ADDS W31, W27, 0x1
	0x037544DC SUB W9, W21, W0
	0x037544E0 CSEL W27, W0, W27, EQ
	0x037544E4 LDR W8, [X8]
	0x037544E8 ADD W21, W9, W8
	0x037544EC LDR X8, [X31 + 0xE0]
	0x037544F0 MOVZ W9, 0x58
	0x037544F4 MADD X8, X19, X9, X8
	0x037544F8 LDR X20, [X8 + 0x68]
	0x037544FC CBNZ X20, 0x3754510
	0x03754500 LDR X8, [X31 + 0xE0]
	0x03754504 MOVZ W9, 0x58
	0x03754508 MADD X8, X19, X9, X8
	0x0375450C LDR X20, [X8 + 0x38]
	0x03754510 MOV X0, X20
	0x03754514 MOV X1, X31
	0x03754518 BL 0x32277A8
	0x0375451C TBZ X0, 0x0, 0x375452C
	0x03754520 MOV W28, W31
	0x03754524 MOVN W20, 0x0
	0x03754528 B 0x3754598
	0x0375452C ADRP X8, 0x9C7000
	0x03754530 LDR X8, [X8 + 0xC30]
	0x03754534 LDR X8, [X8]
	0x03754538 LDR X8, [X8 + 0xB8]
	0x0375453C LDR X1, [X8]
	0x03754540 ADRP X8, 0x9F1000
	0x03754544 LDR X8, [X8 + 0xDF8]
	0x03754548 LDR X7, [X8]
	0x0375454C LDR X0, [X31 + 0xD0]
	0x03754550 LDR X3, [X31 + 0x30]
	0x03754554 LDR X4, [X31 + 0x48]
	0x03754558 LDR X5, [X31 + 0xB0]
	0x0375455C MOV X2, X20
	0x03754560 MOV X6, X28
	0x03754564 BL 0x21FBC3C
	0x03754568 MOV W20, W0
	0x0375456C ADDS W31, W0, 0x1
	0x03754570 B.EQ 0x3754594
	0x03754574 LDR X8, [X31 + 0x48]
	0x03754578 LDR W8, [X8]
	0x0375457C SUB W28, W8, W20
	0x03754580 B 0x3754598
	0x03754584 MOV W21, W31
	0x03754588 CBNZ X29, 0x3754480
	0x0375458C BL 0x1C16F20
	0x03754590 B 0x37550BC
	0x03754594 MOV W28, W31
	0x03754598 LDR X0, [X29 + 0x38]
	0x0375459C MOV X1, X31
	0x037545A0 BL 0x32277A8
	0x037545A4 TBNZ X0, 0x0, 0x3754600
	0x037545A8 ADRP X8, 0x9C7000
	0x037545AC LDR X8, [X8 + 0xC30]
	0x037545B0 LDR X2, [X29 + 0x38]
	0x037545B4 LDR X8, [X8]
	0x037545B8 LDR X8, [X8 + 0xB8]
	0x037545BC LDR X1, [X8]
	0x037545C0 ADRP X8, 0x9F1000
	0x037545C4 LDR X8, [X8 + 0xDF8]
	0x037545C8 LDR X7, [X8]
	0x037545CC LDR X0, [X31 + 0xD0]
	0x037545D0 LDR X3, [X31 + 0x30]
	0x037545D4 LDR X4, [X31 + 0x48]
	0x037545D8 LDP X6, X5, [X31 + 0xA8]
	0x037545DC BL 0x21FBC3C
	0x037545E0 ADDS W31, W0, 0x1
	0x037545E4 B.EQ 0x3754600
	0x037545E8 LDR X8, [X31 + 0x48]
	0x037545EC ADDS W31, W20, 0x1
	0x037545F0 SUB W9, W28, W0
	0x037545F4 CSEL W20, W0, W20, EQ
	0x037545F8 LDR W8, [X8]
	0x037545FC ADD W28, W9, W8
	0x03754600 CBZ W23, 0x3754704
	0x03754604 LDP X0, X1, [X31 + 0xA8]
	0x03754608 BL 0x3755294
	0x0375460C ADRP X8, 0x9F1000
	0x03754610 LDR X8, [X8 + 0xDF0]
	0x03754614 MOV X2, X0
	0x03754618 LDR X4, [X8]
	0x0375461C LDR X0, [X31 + 0x40]
	0x03754620 LDR X1, [X31 + 0x28]
	0x03754624 MOVZ W3, 0xA
	0x03754628 BL 0x2174728
	0x0375462C LDR X8, [X31 + 0xD0]
	0x03754630 LDR W9, [X31 + 0x360]
	0x03754634 STR X29, [X31 + 0xF0]
	0x03754638 STR W24, [X31 + 0xEC]
	0x0375463C LDR W8, [X8 + 0x38]
	0x03754640 STR W0, [X31 + 0x98]
	0x03754644 ADD W8, W9, W8
	0x03754648 STR W8, [X31 + 0xD8]
	0x0375464C LDR X8, [X31 + 0xC0]
	0x03754650 STR X8, [X31 + 0xF8]
	0x03754654 CMP W26, 0x1
	0x03754658 B.LT 0x37546F4
	0x0375465C LDR W8, [X31 + 0x74]
	0x03754660 CMP W8, 0x8
	0x03754664 B.NE 0x37546F4
	0x03754668 LDR X8, [X31 + 0xF8]
	0x0375466C ADDS W31, W8, 0x1
	0x03754670 B.EQ 0x37546F4
	0x03754674 LDR X8, [X31 + 0xA8]
	0x03754678 LDR X0, [X8]
	0x0375467C MOV X1, X31
	0x03754680 BL 0x32277A8
	0x03754684 TBNZ X0, 0x0, 0x37548FC
	0x03754688 LDR X8, [X31 + 0x40]
	0x0375468C LDR X8, [X8]
	0x03754690 CBZ X8, 0x3754934
	0x03754694 LDR W9, [X8 + 0x18]
	0x03754698 LDR W10, [X31 + 0x98]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xC8D000
	005 Move W8, [X20+3523]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {22}
	011 Move X0, 0x9F2000
	012 Move X0, [X0+3496]
	013 Call 0x1C17CF4
	014 Move X0, 0x9C8000
	015 Move X0, [X0+3112]
	016 Call 0x1C17CF4
	017 Move X0, 0x9A0000
	018 Move X0, [X0+1728]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+3523], W8
	022 Move W8, [X19+16]
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Compare W8, 0
	025 JumpIfNotEqual {61}
	026 Move X0, [X19+40]
	027 Move TEMP, 0
	028 Not TEMP
	029 Move W8, TEMP
	030 Move X1, X31
	031 Move [X19+16], W8
	032 Call String.IsNullOrEmpty, X0
	033 Move TEMP, X0
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfEqual {77}
	037 Move X8, 0x9C8000
	038 Move X8, [X8+3112]
	039 Move X1, [X19+40]
	040 Move X2, X31
	041 Move X8, [X8]
	042 Move X0, [X8+184]
	043 Call TypeTable.LookupTypeRegistration, X0, X1
	044 Move X8, 0x9A0000
	045 Move X8, [X8+1728]
	046 Move X20, X0
	047 Move X8, [X8]
	048 Move W9, [X8+224]
	049 Compare W9, 0
	050 JumpIfNotEqual {53}
	051 Move X0, X8
	052 Call 0x1C17DFC
	053 Move X0, X20
	054 Move X1, X31
	055 Move X2, X31
	056 Call Type.op_Equality, X0, X1
	057 Move TEMP, X0
	058 And TEMP, TEMP, 1
	059 Compare TEMP, 1
	060 JumpIfNotEqual {66}
	061 Move W0, W31
	062 Move TEMP, 0
	063 Not TEMP
	064 Move W8, TEMP
	065 Move [X19+16], W8
	066 Compare X20, 0
	067 JumpIfEqual {128}
	068 Move X8, [X20]
	069 Move W1, 20
	070 Move X0, X20
	071 Move X9, [X8+1672]
	072 Move X2, [X8+1680]
	073 NotImplemented "Instruction BLR not yet implemented."
	074 Move W8, W31
	075 Move [X19+56], X0
	076 Move [X19+64], W31
	077 Move X0, 0x9A5000
	078 Move X0, [X0+1320]
	079 Call 0x1C17D08
	080 Call 0x1C17F10
	081 Move X19, X0
	082 Move X0, 0x9F2000
	083 Move X0, [X0+2368]
	084 Call 0x1C17D08
	085 Move X1, X0
	086 Move X0, X19
	087 Move X2, X31
	088 Call ArgumentNullException..ctor, X0, X1
	089 Move X0, 0x9F2000
	090 Move X0, [X0+3504]
	091 Call 0x1C17D08
	092 Move X1, X0
	093 Move X0, X19
	094 Call 0x1C17DEC
	095 Move X9, 0x9F2000
	096 Move X9, [X9+3496]
	097 Add X8, X0, W8
	098 Move X20, [X8+32]
	099 Move X1, [X9]
	100 Move X0, X20
	101 Call 0x21A991C, X0
	102 Compare X0, 0
	103 JumpIfNotEqual {114}
	104 Move W8, [X19+64]
	105 Move X0, [X19+56]
	106 Add W8, W8, 1
	107 Move [X19+64], W8
	108 Compare X0, 0
	109 JumpIfEqual {128}
	110 Move W9, [X0+24]
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Move W0, W31
	113 Move [X19+56], X31
	114 Compare X20, 0
	115 JumpIfEqual {128}
	116 Move X8, [X20]
	117 Move X0, X20
	118 Move X9, [X8+424]
	119 Move X1, [X8+432]
	120 NotImplemented "Instruction BLR not yet implemented."
	121 Move [X19+24], X0
	122 Move W0, 1
	123 Move [X19+16], W0
	124 Move X20, [X31+16]
	125 Move X19, [X31+24]
	126 Move X30, [X31+32]
	127 Return X0
	128 Call 0x1C17F20
	129 Call 0x1C17F28

Method: System.String System.Collections.Generic.IEnumerator<System.String>.get_Current()

Disassembly:
	0x0375469C CMP W10, W9
	0x037546A0 B.CS 0x375493C

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void System.Collections.IEnumerator.Reset()

Disassembly:
	0x037546A4 ADD X8, X8, W10, 0x3, SXTW
	0x037546A8 LDR X0, [X8 + 0x20]
	0x037546AC LDR X8, [X31 + 0xA8]
	0x037546B0 LDR X1, [X8]
	0x037546B4 ADD X2, X31, 0x40C
	0x037546B8 BL 0x3755520
	0x037546BC LDR X8, [X31 + 0xF8]
	0x037546C0 LDR X9, [X31 + 0xC8]
	0x037546C4 MOV W24, W0
	0x037546C8 SXTW X8, W8
	0x037546CC ADD X22, X9, X8, 0x5, LSL
	0x037546D0 LDRB W8, [X22]
	0x037546D4 ADD W1, W26, W8
	0x037546D8 MOV X0, X22

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0x9A0000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0x9F2000
	011 Move X0, [X0+3512]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x037546DC BL 0x3751874
	0x037546E0 LDRH W8, [X22 + 0x6]

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Collections.Generic.IEnumerator`1<System.String> System.Collections.Generic.IEnumerable<System.String>.GetEnumerator()

Disassembly:
	0x037546E4 MOVZ W9, 0xFFFF
	0x037546E8 CMP W8, W9
	0x037546EC CSINV W22, W8, W31, NE
	0x037546F0 B 0x3754754
	0x037546F4 LDP X11, X8, [X31 + 0xF0]
	0x037546F8 LDR W10, [X31 + 0xEC]
	0x037546FC MOV W9, W8
	0x03754700 B 0x3754734
	0x03754704 LDR W8, [X31 + 0x70]
	0x03754708 LDR W9, [X31 + 0x84]
	0x0375470C ADDS W31, W8, 0x1
	0x03754710 CSET W8, EQ
	0x03754714 ORR W8, W8, W9, 0x0
	0x03754718 TBNZ X8, 0x0, 0x3754654
	0x0375471C MOV X11, X31
	0x03754720 MOVN W9, 0x0
	0x03754724 MOVN W8, 0x0
	0x03754728 MOVN W10, 0x0
	0x0375472C STR W31, [X31 + 0x40C]
	0x03754730 STR W8, [X31 + 0x98]
	0x03754734 LDR W8, [X31 + 0xBC]
	0x03754738 ADDS W31, W24, 0x1
	0x0375473C STR W10, [X31 + 0xEC]
	0x03754740 ADD W8, W24, W8
	0x03754744 CSINV W22, W8, W31, NE
	0x03754748 MOV W8, W9
	0x0375474C MOVN W24, 0x0
	0x03754750 STP X11, X8, [X31 + 0xF0]
	0x03754754 MOVI V0.2D, 0x0
	0x03754758 STR V0, [X31 + 0x4D]
	0x0375475C STR V0, [X31 + 0x4C]
	0x03754760 LDR W1, [X31 + 0xD8]
	0x03754764 ADD X0, X31, 0x4C0
	0x03754768 BL 0x37517E0
	0x0375476C ADD X0, X31, 0x4C0
	0x03754770 MOV W1, W26
	0x03754774 BL 0x3751874
	0x03754778 ADD X0, X31, 0x4C0
	0x0375477C MOV W1, W20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xC8D000
	005 Move W8, [X20+3524]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x9F2000
	012 Move X0, [X0+3472]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3524], W8
	016 Move W8, [X19+16]
	017 Add W31, W8, 2
	018 Move W20, [X19+32]
	019 Move X0, X31
	020 Call Environment.get_CurrentManagedThreadId
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move [X19+16], W31
	023 Move X20, X19
	024 Move X8, 0x9F2000
	025 Move X8, [X8+3472]
	026 Move X0, [X8]
	027 Call 0x1C17F10
	028 Move X1, X31
	029 Move X20, X0
	030 Call Object..ctor, X0
	031 Move X0, X31
	032 Move [X20+16], W31
	033 Call Environment.get_CurrentManagedThreadId
	034 Move [X20+32], W0
	035 Move X8, [X19+48]
	036 Move X0, X20
	037 Move [X20+40], X8
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move X30, [X31+32]
	041 Return X0

Method: System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()

Disassembly:
	0x03754780 BL 0x3751900

ISIL:
	001 Call <GetPartNames>d__12.System.Collections.Generic.IEnumerable<System.String>.GetEnumerator, X0
	002 Return X0

