Type: UnityEngine.InputSystem.InputInteractionContext

Method: UnityEngine.InputSystem.InputAction get_action()

Disassembly:
	0x0376D5DC MOV X19, X0
	0x0376D5E0 TBNZ X8, 0x0, 0x376D67C
	0x0376D5E4 ADRP X0, 0x9D9000
	0x0376D5E8 LDR X0, [X0 + 0x840]
	0x0376D5EC BL 0x1C16CF4
	0x0376D5F0 ADRP X0, 0x9D9000
	0x0376D5F4 LDR X0, [X0 + 0x848]
	0x0376D5F8 BL 0x1C16CF4
	0x0376D5FC ADRP X0, 0x9D9000

ISIL:
	001 Move [X31-16], X30
	002 Move X8, X0
	003 Move X0, [X0]
	004 Compare X0, 0
	005 JumpIfEqual {11}
	006 Add X1, X8, 12
	007 Move X2, X31
	008 Move X30, [X31+16]
	009 Call InputActionState.GetActionOrNull, X0, X1
	010 Return X0
	011 Call 0x1C17F20

Method: UnityEngine.InputSystem.InputControl get_control()

Disassembly:
	0x0376D600 LDR X0, [X0 + 0x850]
	0x0376D604 BL 0x1C16CF4
	0x0376D608 ADRP X0, 0x9D9000
	0x0376D60C LDR X0, [X0 + 0x858]
	0x0376D610 BL 0x1C16CF4
	0x0376D614 ADRP X0, 0x9D9000
	0x0376D618 LDR X0, [X0 + 0x860]
	0x0376D61C BL 0x1C16CF4
	0x0376D620 ADRP X0, 0x9D9000

ISIL:
	001 Move [X31-16], X30
	002 Move X8, X0
	003 Move X0, [X0]
	004 Compare X0, 0
	005 JumpIfEqual {11}
	006 Add X1, X8, 12
	007 Move X2, X31
	008 Move X30, [X31+16]
	009 Call InputActionState.GetControl, X0, X1
	010 Return X0
	011 Call 0x1C17F20

Method: UnityEngine.InputSystem.InputActionPhase get_phase()

Disassembly:
	0x0376D624 LDR X0, [X0 + 0x868]
	0x0376D628 BL 0x1C16CF4

ISIL:
	001 Move W0, [X0+12]
	002 Return X0

Method: System.Double get_time()

Disassembly:
	0x0376D62C ADRP X0, 0x9AE000
	0x0376D630 LDR X0, [X0 + 0x270]

ISIL:
	001 NotImplemented "Instruction LDUR not yet implemented."
	002 Return V0

Method: System.Double get_startTime()

Disassembly:
	0x0376D634 BL 0x1C16CF4
	0x0376D638 ADRP X0, 0x9D9000

ISIL:
	001 NotImplemented "Instruction LDUR not yet implemented."
	002 Return V0

Method: System.Boolean get_timerHasExpired()

Disassembly:
	0x0376D63C LDR X0, [X0 + 0x870]
	0x0376D640 BL 0x1C16CF4
	0x0376D644 ADRP X0, 0x9D9000

ISIL:
	001 Move W8, [X0+8]
	002 Move W0, W8
	003 ShiftRight W0, 1
	004 And W0, W0, 1
	005 Return X0

Method: System.Void set_timerHasExpired(System.Boolean value)

Disassembly:
	0x0376D648 LDR X0, [X0 + 0x878]
	0x0376D64C BL 0x1C16CF4
	0x0376D650 ADRP X0, 0x9D9000
	0x0376D654 LDR X0, [X0 + 0x880]
	0x0376D658 BL 0x1C16CF4
	0x0376D65C ADRP X0, 0x986000
	0x0376D660 LDR X0, [X0 + 0x6C0]
	0x0376D664 BL 0x1C16CF4

ISIL:
	001 Move W8, [X0+8]
	002 And W31, W1, 1
	003 Move W9, 2
	004 NotImplemented "Instruction CSEL not yet implemented."
	005 And W8, W8, 0xFFFFFFFD
	006 Or W8, W8, W9
	007 Move [X0+8], W8
	008 Return 

Method: System.Boolean get_isWaiting()

Disassembly:
	0x0376D668 ADRP X0, 0x9D9000
	0x0376D66C LDR X0, [X0 + 0x888]
	0x0376D670 BL 0x1C16CF4
	0x0376D674 MOVZ W8, 0x1

ISIL:
	001 Move W8, [X0+12]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.Boolean get_isStarted()

Disassembly:
	0x0376D678 STRB W8, [X22 + 0xECB]
	0x0376D67C LDR X0, [X21]
	0x0376D680 MOVI V0.2D, 0x0
	0x0376D684 STP V0, V0, [X31 + 0x20]

ISIL:
	001 Move W8, [X0+12]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.Single ComputeMagnitude()

Disassembly:
	0x0376D688 STR X31, [X31 + 0x48]
	0x0376D68C LDR W8, [X0 + 0xE0]

ISIL:
	001 Move V0, [X0+40]
	002 Return V0

Method: System.Boolean ControlIsActuated(System.Single threshold = 0)

Disassembly:
	0x0376D690 CBNZ W8, 0x376D698
	0x0376D694 BL 0x1C16DFC
	0x0376D698 MOV X0, X19

ISIL:
	001 Add X0, X0, 12
	002 Move X1, X31
	003 Call InputActionState.IsActuated, X0, V0
	004 Return X0

Method: System.Void Started()

Disassembly:
	0x0376D69C MOV X1, X31
	0x0376D6A0 MOV X2, X31
	0x0376D6A4 BL 0x3395194
	0x0376D6A8 TBNZ X0, 0x0, 0x376D8C0
	0x0376D6AC MOV X0, X20
	0x0376D6B0 MOV X1, X31
	0x0376D6B4 BL 0x32277A8
	0x0376D6B8 TBZ X0, 0x0, 0x376D718
	0x0376D6BC CBZ X19, 0x376D8BC
	0x0376D6C0 LDR X8, [X19]
	0x0376D6C4 MOV X0, X19
	0x0376D6C8 LDP X9, X1, [X8 + 0x1A8]
	0x0376D6CC BLR X9
	0x0376D6D0 CBZ X0, 0x376D8BC

ISIL:
	001 Move [X31-16], X30
	002 Move X8, X0
	003 NotImplemented "Instruction LDUR not yet implemented."
	004 Move X0, [X0]
	005 Move [X8+28], D0
	006 Compare X0, 0
	007 JumpIfEqual {16}
	008 Add X2, X8, 12
	009 Move W1, 2
	010 Move W3, 1
	011 Move W4, 1
	012 Move X5, X31
	013 Move X30, [X31+16]
	014 Call InputActionState.ChangePhaseOfInteraction, X0, X1, X2, X3, X4
	015 Return 
	016 Call 0x1C17F20

Method: System.Void Performed()

Disassembly:
	0x0376D6D4 ADRP X21, 0x9D9000
	0x0376D6D8 LDR X21, [X21 + 0x888]
	0x0376D6DC MOV X2, X31
	0x0376D6E0 MOV X20, X0
	0x0376D6E4 LDR X1, [X21]
	0x0376D6E8 BL 0x3226588
	0x0376D6EC TBZ X0, 0x0, 0x376D718
	0x0376D6F0 LDR X8, [X21]
	0x0376D6F4 CBZ X8, 0x376D8BC
	0x0376D6F8 LDR W9, [X20 + 0x10]
	0x0376D6FC LDR W8, [X8 + 0x10]
	0x0376D700 MOV X0, X20
	0x0376D704 MOV W1, W31
	0x0376D708 MOV X3, X31
	0x0376D70C SUB W2, W9, W8
	0x0376D710 BL 0x3228DE4

ISIL:
	001 Move [X31-16], X30
	002 Move X2, X0
	003 Add X2, X2, 12
	004 Move W8, [X2]
	005 NotImplemented "Instruction CMP not yet implemented."
	006 NotImplemented "Instruction LDUR not yet implemented."
	007 Move [X0+28], D0
	008 Move X0, [X0]
	009 Compare X0, 0
	010 JumpIfEqual {18}
	011 Move W1, 3
	012 Move W3, 1
	013 Move W4, 1
	014 Move X5, X31
	015 Move X30, [X31+16]
	016 Call InputActionState.ChangePhaseOfInteraction, X0, X1, X2, X3, X4
	017 Return 
	018 Call 0x1C17F20

Method: System.Void PerformedAndStayStarted()

Disassembly:
	0x0376D714 MOV X20, X0
	0x0376D718 ADRP X24, 0x9AE000
	0x0376D71C LDR X24, [X24 + 0x270]
	0x0376D720 LDR X0, [X24]
	0x0376D724 LDR W8, [X0 + 0xE0]
	0x0376D728 CBNZ W8, 0x376D734
	0x0376D72C BL 0x1C16DFC
	0x0376D730 LDR X0, [X24]
	0x0376D734 LDR X8, [X0 + 0xB8]
	0x0376D738 LDR X8, [X8]
	0x0376D73C CBZ X8, 0x376D8BC
	0x0376D740 LDR X21, [X8 + 0x48]
	0x0376D744 CBZ X21, 0x376D8BC
	0x0376D748 ADRP X8, 0x9D9000
	0x0376D74C LDR X8, [X8 + 0x850]
	0x0376D750 ADRP X22, 0x9D9000

ISIL:
	001 Move [X31-16], X30
	002 Move X2, X0
	003 Add X2, X2, 12
	004 Move W8, [X2]
	005 NotImplemented "Instruction CMP not yet implemented."
	006 NotImplemented "Instruction LDUR not yet implemented."
	007 Move [X0+28], D0
	008 Move X0, [X0]
	009 Compare X0, 0
	010 JumpIfEqual {18}
	011 Move W1, 3
	012 Move W3, 2
	013 Move W4, 1
	014 Move X5, X31
	015 Move X30, [X31+16]
	016 Call InputActionState.ChangePhaseOfInteraction, X0, X1, X2, X3, X4
	017 Return 
	018 Call 0x1C17F20

Method: System.Void PerformedAndStayPerformed()

Disassembly:
	0x0376D754 ADRP X25, 0x9D9000
	0x0376D758 MOV X0, X21
	0x0376D75C LDR X1, [X8]
	0x0376D760 LDR X22, [X22 + 0x880]
	0x0376D764 LDR X25, [X25 + 0x878]
	0x0376D768 BL 0x2A5D590
	0x0376D76C LDR X8, [X22]
	0x0376D770 MOV X23, X0
	0x0376D774 MOV X0, X8
	0x0376D778 BL 0x1C16F10
	0x0376D77C LDR X2, [X25]
	0x0376D780 MOV X1, X23
	0x0376D784 MOV X22, X0
	0x0376D788 BL 0x2FE7018
	0x0376D78C CBZ X22, 0x376D8BC
	0x0376D790 ADRP X8, 0x9D9000

ISIL:
	001 Move [X31-16], X30
	002 Move X2, X0
	003 Add X2, X2, 12
	004 Move W8, [X2]
	005 NotImplemented "Instruction CMP not yet implemented."
	006 NotImplemented "Instruction LDUR not yet implemented."
	007 Move [X0+28], D0
	008 Move X0, [X0]
	009 Compare X0, 0
	010 JumpIfEqual {18}
	011 Move W1, 3
	012 Move W3, 3
	013 Move W4, 1
	014 Move X5, X31
	015 Move X30, [X31+16]
	016 Call InputActionState.ChangePhaseOfInteraction, X0, X1, X2, X3, X4
	017 Return 
	018 Call 0x1C17F20

Method: System.Void Canceled()

Disassembly:
	0x0376D794 LDR X8, [X8 + 0x870]
	0x0376D798 ADRP X26, 0x9D9000
	0x0376D79C LDR X26, [X26 + 0x860]
	0x0376D7A0 ADRP X27, 0x9D9000
	0x0376D7A4 LDR X1, [X8]
	0x0376D7A8 ADRP X28, 0x9D9000
	0x0376D7AC ADRP X25, 0x9D9000
	0x0376D7B0 LDR X27, [X27 + 0x848]
	0x0376D7B4 LDR X28, [X28 + 0x840]
	0x0376D7B8 LDR X25, [X25 + 0x858]
	0x0376D7BC ADD X8, X31, 0x0
	0x0376D7C0 MOV X0, X22
	0x0376D7C4 BL 0x2FE8320
	0x0376D7C8 LDP V0, V1, [X31]
	0x0376D7CC STP V0, V1, [X31 + 0x20]
	0x0376D7D0 LDR X1, [X26]

ISIL:
	001 Move [X31-16], X30
	002 Move X2, X0
	003 Add X2, X2, 12
	004 Move W8, [X2]
	005 NotImplemented "Instruction CMP not yet implemented."
	006 Move X30, [X31+16]
	007 Return 
	008 Move X0, [X0]
	009 Compare X0, 0
	010 JumpIfEqual {18}
	011 Move W1, 4
	012 Move W3, 1
	013 Move W4, 1
	014 Move X5, X31
	015 Move X30, [X31+16]
	016 Call InputActionState.ChangePhaseOfInteraction, X0, X1, X2, X3, X4
	017 Return 
	018 Call 0x1C17F20

Method: System.Void Waiting()

Disassembly:
	0x0376D7D4 ADD X0, X31, 0x20
	0x0376D7D8 BL 0x2BBF6C0
	0x0376D7DC TBZ X0, 0x0, 0x376D84C
	0x0376D7E0 LDP X22, X23, [X31 + 0x30]
	0x0376D7E4 LDR X3, [X27]
	0x0376D7E8 MOV X0, X21
	0x0376D7EC MOV X1, X22
	0x0376D7F0 MOV X2, X23
	0x0376D7F4 BL 0x2A5D710
	0x0376D7F8 MOVZ W2, 0x3B
	0x0376D7FC MOV X0, X1
	0x0376D800 MOV X1, X20
	0x0376D804 MOV X3, X31
	0x0376D808 BL 0x37677D0
	0x0376D80C TBZ X0, 0x0, 0x376D7D0
	0x0376D810 LDR X0, [X24]

ISIL:
	001 Move [X31-16], X30
	002 Move X2, X0
	003 Add X2, X2, 12
	004 Move W8, [X2]
	005 NotImplemented "Instruction CMP not yet implemented."
	006 Move X30, [X31+16]
	007 Return 
	008 Move X0, [X0]
	009 Compare X0, 0
	010 JumpIfEqual {18}
	011 Move W1, 1
	012 Move W3, 1
	013 Move W4, 1
	014 Move X5, X31
	015 Move X30, [X31+16]
	016 Call InputActionState.ChangePhaseOfInteraction, X0, X1, X2, X3, X4
	017 Return 
	018 Call 0x1C17F20

Method: System.Void SetTimeout(System.Single seconds)

Disassembly:
	0x0376D814 LDR W8, [X0 + 0xE0]
	0x0376D818 CBNZ W8, 0x376D824
	0x0376D81C BL 0x1C16DFC
	0x0376D820 LDR X0, [X24]
	0x0376D824 LDR X8, [X0 + 0xB8]
	0x0376D828 LDR X8, [X8]
	0x0376D82C CBZ X8, 0x376D8B4
	0x0376D830 LDR X0, [X8 + 0x48]
	0x0376D834 CBZ X0, 0x376D8B8

ISIL:
	001 Move [X31-16], X30
	002 Move X8, X0
	003 Move X0, [X0]
	004 Compare X0, 0
	005 JumpIfEqual {11}
	006 Add X1, X8, 12
	007 Move X2, X31
	008 Move X30, [X31+16]
	009 Call InputActionState.StartTimeout, X0, V0, X1
	010 Return 
	011 Call 0x1C17F20

Method: System.Void SetTotalTimeoutCompletionTime(System.Single seconds)

Disassembly:
	0x0376D838 LDR X3, [X28]
	0x0376D83C MOV X1, X22
	0x0376D840 MOV X2, X23
	0x0376D844 BL 0x2A5EC30
	0x0376D848 B 0x376D7D0
	0x0376D84C LDR X1, [X25]
	0x0376D850 ADD X0, X31, 0x20
	0x0376D854 BL 0x2BBF6BC
	0x0376D858 LDR X0, [X24]
	0x0376D85C LDR W8, [X0 + 0xE0]
	0x0376D860 CBNZ W8, 0x376D86C
	0x0376D864 BL 0x1C16DFC
	0x0376D868 LDR X0, [X24]
	0x0376D86C LDR X8, [X0 + 0xB8]
	0x0376D870 LDR X8, [X8]
	0x0376D874 CBZ X8, 0x376D8BC
	0x0376D878 LDR X8, [X8 + 0x58]
	0x0376D87C ADD X0, X31, 0x48
	0x0376D880 MOV X1, X20
	0x0376D884 MOV X2, X19
	0x0376D888 MOV X3, X31
	0x0376D88C STR X8, [X31 + 0x48]
	0x0376D890 BL 0x3769B8C
	0x0376D894 LDP X20, X19, [X31 + 0x90]
	0x0376D898 LDP X22, X21, [X31 + 0x80]
	0x0376D89C LDP X24, X23, [X31 + 0x70]
	0x0376D8A0 LDP X26, X25, [X31 + 0x60]
	0x0376D8A4 LDP X28, X27, [X31 + 0x50]
	0x0376D8A8 LDR X30, [X31 + 0x40]
	0x0376D8AC ADD X31, X31, 0xA0
	0x0376D8B0 RET
	0x0376D8B4 BL 0x1C16F20
	0x0376D8B8 BL 0x1C16F20
	0x0376D8BC BL 0x1C16F20
	0x0376D8C0 ADRP X0, 0x98B000
	0x0376D8C4 LDR X0, [X0 + 0x528]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 NotImplemented "Instruction FCMP not yet implemented."
	005 Move X8, [X0]
	006 Compare X8, 0
	007 JumpIfEqual {39}
	008 Move X20, [X31+16]
	009 Move X19, [X31+24]
	010 Add X1, X0, 12
	011 Move X0, X8
	012 Move X2, X31
	013 Move X30, [X31+32]
	014 Call InputActionState.SetTotalTimeoutCompletionTime, X0, V0, X1
	015 Return 
	016 Move X0, 0x98F000
	017 Move X0, [X0+1400]
	018 Call 0x1C17D08
	019 Call 0x1C17F10
	020 Move X19, X0
	021 Move X0, 0x9DA000
	022 Move X0, [X0+1992]
	023 Call 0x1C17D08
	024 Move X20, X0
	025 Move X0, 0x9BE000
	026 Move X0, [X0+2784]
	027 Call 0x1C17D08
	028 Move X2, X0
	029 Move X0, X19
	030 Move X1, X20
	031 Move X3, X31
	032 Call ArgumentException..ctor, X0, X1, X2
	033 Move X0, 0x9DA000
	034 Move X0, [X0+2000]
	035 Call 0x1C17D08
	036 Move X1, X0
	037 Move X0, X19
	038 Call 0x1C17DEC
	039 Call 0x1C17F20

Method: TValue ReadValue()

Disassembly:
	0x022092A0 BL 0x1C16DFC
	0x022092A4 MOV X0, X23
	0x022092A8 MOV X1, X31
	0x022092AC BL 0x3800B6C
	0x022092B0 ADRP X8, 0x1EEA000
	0x022092B4 LDR X8, [X8 + 0x5A8]
	0x022092B8 MOV W22, W0
	0x022092BC LDR X8, [X8]
	0x022092C0 LDR W9, [X8 + 0xE0]
	0x022092C4 CBNZ W9, 0x22092D0
	0x022092C8 MOV X0, X8
	0x022092CC BL 0x1C16DFC
	0x022092D0 MOV W1, W22
	0x022092D4 MOVZ W0, 0x1
	0x022092D8 MOV X2, X31
	0x022092DC BL 0x337EEA0
	0x022092E0 CBZ X21, 0x2209468
	0x022092E4 ADRP X26, 0x1F12000
	0x022092E8 LDR X26, [X26 + 0x270]
	0x022092EC MOV X22, X0
	0x022092F0 LDR W23, [X23 + 0x4]
	0x022092F4 LDR W25, [X21 + 0x14]
	0x022092F8 LDR X0, [X26]
	0x022092FC LDR W8, [X0 + 0xE0]
	0x02209300 CBNZ W8, 0x220930C
	0x02209304 BL 0x1C16DFC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X1+56]
	007 Move X19, X1
	008 Move X22, X0
	009 Compare X8, 0
	010 JumpIfNotEqual {13}
	011 Move X0, X19
	012 Call 0x1C5D6E0
	013 Move X20, [X22]
	014 NotImplemented "Instruction LDRH not yet implemented."
	015 Add X0, X22, 12
	016 Move X1, X31
	017 Call TriggerState.get_controlIndex, X0
	018 Compare X20, 0
	019 JumpIfEqual {33}
	020 Move X8, [X19+56]
	021 Move W2, W0
	022 Move X0, X20
	023 Move W1, W21
	024 Move X4, [X8]
	025 Move X20, [X31+32]
	026 Move X19, [X31+40]
	027 Move X22, [X31+16]
	028 Move X21, [X31+24]
	029 Move W3, W31
	030 Move X30, [X31+48]
	031 Call InputActionState.ReadValue, X0, X1, X2, X3
	032 Return X0
	033 Call 0x1C17F20

Method: System.Int32 get_mapIndex()

Disassembly:
	0x0376D8C8 BL 0x1C16D08
	0x0376D8CC BL 0x1C16F10

ISIL:
	001 Move W0, [X0+14]
	002 Return X0

Method: System.Int32 get_controlIndex()

Disassembly:
	0x0376D8D0 MOV X19, X0
	0x0376D8D4 ADRP X0, 0x98E000
	0x0376D8D8 LDR X0, [X0 + 0x5E8]

ISIL:
	001 Add X0, X0, 12
	002 Move X1, X31
	003 Call TriggerState.get_controlIndex, X0
	004 Return X0

Method: System.Int32 get_bindingIndex()

Disassembly:
	0x0376D8DC BL 0x1C16D08
	0x0376D8E0 MOV X1, X0

ISIL:
	001 NotImplemented "Instruction LDRH not yet implemented."
	002 Return X0

Method: System.Int32 get_interactionIndex()

Disassembly:
	0x0376D8E4 MOV X0, X19
	0x0376D8E8 MOV X2, X31
	0x0376D8EC BL 0x330E100

ISIL:
	001 Add X0, X0, 12
	002 Move X1, X31
	003 Call TriggerState.get_interactionIndex, X0
	004 Return X0

