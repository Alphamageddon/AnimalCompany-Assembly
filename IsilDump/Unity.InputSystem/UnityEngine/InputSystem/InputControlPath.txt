Type: UnityEngine.InputSystem.InputControlPath

Method: System.String CleanSlashes(System.String pathComponent)

Disassembly:
	0x03777C70 LDR X0, [X0 + 0xDF0]
	0x03777C74 BL 0x1C16CF4
	0x03777C78 ADRP X0, 0x9CF000
	0x03777C7C LDR X0, [X0 + 0xDF8]
	0x03777C80 BL 0x1C16CF4
	0x03777C84 ADRP X0, 0x9CF000
	0x03777C88 LDR X0, [X0 + 0xE00]

ISIL:
	001 Compare X0, 0
	002 JumpIfEqual {8}
	003 Move W1, 47
	004 Move W2, 32
	005 Move X3, X31
	006 Call String.Replace, X0, X1, X2
	007 Return X0
	008 Move [X31-16], X30
	009 Call 0x1C17F20

Method: System.String Combine(UnityEngine.InputSystem.InputControl parent, System.String path)

Disassembly:
	0x03772FA8 CBZ X0, 0x3773034
	0x03772FAC MOV X1, X31
	0x03772FB0 BL 0x377F584
	0x03772FB4 B 0x3772F8C
	0x03772FB8 LDR X1, [X20]
	0x03772FBC ADD X0, X31, 0x18
	0x03772FC0 BL 0x2BC4968
	0x03772FC4 ADRP X20, 0xC6E000
	0x03772FC8 LDRB W8, [X20 + 0xF94]
	0x03772FCC CBNZ W8, 0x3772FE4
	0x03772FD0 ADRP X0, 0x9AC000
	0x03772FD4 LDR X0, [X0 + 0xFE0]
	0x03772FD8 BL 0x1C16CF4
	0x03772FDC MOVZ W8, 0x1
	0x03772FE0 STRB W8, [X20 + 0xF94]
	0x03772FE4 ADRP X8, 0x9AC000
	0x03772FE8 LDR X8, [X8 + 0xFE0]
	0x03772FEC LDR X8, [X8]
	0x03772FF0 LDR X8, [X8 + 0xB8]
	0x03772FF4 LDRB W8, [X8]
	0x03772FF8 CBZ W8, 0x3773014
	0x03772FFC LDR X8, [X19]
	0x03773000 MOV X0, X19
	0x03773004 LDR X9, [X8 + 0x228]
	0x03773008 LDR X1, [X8 + 0x230]
	0x0377300C BLR X9
	0x03773010 B 0x377301C
	0x03773014 CBZ X19, 0x3773038
	0x03773018 MOV W0, W31
	0x0377301C STR W0, [X19 + 0xD8]
	0x03773020 LDP X20, X19, [X31 + 0x50]
	0x03773024 LDP X22, X21, [X31 + 0x40]
	0x03773028 LDP X30, X23, [X31 + 0x30]
	0x0377302C ADD X31, X31, 0x60
	0x03773030 RET
	0x03773034 BL 0x1C16F20
	0x03773038 BL 0x1C16F20
	0x0377303C B 0x3773044
	0x03773040 B 0x3773044
	0x03773044 MOV X20, X0
	0x03773048 CMP W1, 0x1
	0x0377304C B.NE 0x3773080
	0x03773050 MOV X0, X20
	0x03773054 BL 0x3EB1AD0
	0x03773058 LDR X21, [X0]
	0x0377305C BL 0x3EB1AE0
	0x03773060 ADRP X8, 0x9AC000
	0x03773064 LDR X8, [X8 + 0x48]
	0x03773068 ADD X0, X31, 0x18
	0x0377306C LDR X1, [X8]
	0x03773070 BL 0x2BC4968
	0x03773074 CBZ X21, 0x3772FC4
	0x03773078 MOV X0, X21
	0x0377307C BL 0x1C16F18
	0x03773080 MOV X21, X31
	0x03773084 B 0x377308C
	0x03773088 MOV X20, X0
	0x0377308C ADRP X8, 0x9AC000
	0x03773090 LDR X8, [X8 + 0x48]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xC6F000
	006 Move W8, [X21+3896]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x984000
	014 Move X0, [X0+632]
	015 Call 0x1C17CF4
	016 Move X0, 0x983000
	017 Move X0, [X0+3784]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3896], W8
	021 Move X0, X19
	022 Move X1, X31
	023 Call String.IsNullOrEmpty, X0
	024 Move W21, W0
	025 Compare X20, 0
	026 JumpIfEqual {44}
	027 Move X0, X20
	028 Call InputControl.get_path, X0
	029 Move TEMP, X21
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {62}
	033 Move X8, 0x982000
	034 Move X8, [X8+3784]
	035 Move X2, X19
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move X3, X31
	039 Move X1, [X8]
	040 Move X30, [X31+32]
	041 Move X21, [X31+40]
	042 Call String.Concat, X0, X1, X2
	043 Return X0
	044 Move TEMP, X21
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfNotEqual {53}
	048 Move X8, 0x983000
	049 Move X8, [X8+632]
	050 Move X8, [X8]
	051 Move X8, [X8+184]
	052 Move X0, [X8]
	053 Compare X19, 0
	054 JumpIfEqual {78}
	055 Move X0, X19
	056 Move W1, W31
	057 Move X2, X31
	058 Call String.get_Chars, X0, X1
	059 And W8, W0, 0xFFFF
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move X0, X19
	062 Move X20, [X31+16]
	063 Move X19, [X31+24]
	064 Move X30, [X31+32]
	065 Move X21, [X31+40]
	066 Return X0
	067 Move X8, 0x982000
	068 Move X8, [X8+3784]
	069 Move X1, X19
	070 Move X20, [X31+16]
	071 Move X19, [X31+24]
	072 Move X2, X31
	073 Move X0, [X8]
	074 Move X30, [X31+32]
	075 Move X21, [X31+40]
	076 Call String.Concat, X0, X1
	077 Return X0
	078 Call 0x1C17F20

Method: System.String ToHumanReadableString(System.String path, UnityEngine.InputSystem.InputControlPath/HumanReadableStringOptions options = 0, UnityEngine.InputSystem.InputControl control = null)

Disassembly:
	0x03777C8C BL 0x1C16CF4
	0x03777C90 MOVZ W8, 0x1
	0x03777C94 STRB W8, [X20 + 0xF3A]
	0x03777C98 STP X31, X31, [X31 + 0x8]
	0x03777C9C STR X31, [X31 + 0x18]
	0x03777CA0 CBZ X19, 0x3777D90
	0x03777CA4 STR X19, [X31 + 0x8]
	0x03777CA8 LDR W8, [X19 + 0x10]
	0x03777CAC MOVI V0.2D, 0x0
	0x03777CB0 ADD X0, X31, 0x8
	0x03777CB4 STP W31, W31, [X31 + 0x14]

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+16], X30
	003 Move [X31+24], X31
	004 Move X4, X2
	005 Move W3, W1
	006 Add X1, X31, 24
	007 Add X2, X31, 8
	008 Move [X31+8], X31
	009 Call InputControlPath.ToHumanReadableString, X0, X1, X2, X3, X4
	010 Move X30, [X31+16]
	011 Add X31, X31, 32
	012 Return X0

Method: System.String ToHumanReadableString(System.String path, out System.String deviceLayoutName, out System.String controlPath, UnityEngine.InputSystem.InputControlPath/HumanReadableStringOptions options = 0, UnityEngine.InputSystem.InputControl control = null)

Disassembly:
	0x03777CB8 STP V0, V0, [X31 + 0x20]
	0x03777CBC STP V0, V0, [X31 + 0x40]
	0x03777CC0 STR W8, [X31 + 0x10]
	0x03777CC4 STUR V0, [X31 + 0x60]
	0x03777CC8 BL 0x3777230
	0x03777CCC TBZ X0, 0x0, 0x3777D78
	0x03777CD0 LDR W8, [X31 + 0x30]
	0x03777CD4 CMP W8, 0x1
	0x03777CD8 B.LT 0x3777D78
	0x03777CDC ADRP X22, 0x9CF000
	0x03777CE0 LDR X22, [X22 + 0xE00]
	0x03777CE4 ADD X9, X31, 0x8
	0x03777CE8 ADD X19, X9, 0x28
	0x03777CEC LDR X0, [X22]
	0x03777CF0 LDR W8, [X0 + 0xE0]
	0x03777CF4 CBNZ W8, 0x3777D00
	0x03777CF8 BL 0x1C16DFC
	0x03777CFC LDR X0, [X22]
	0x03777D00 LDR X8, [X0 + 0xB8]
	0x03777D04 LDR X20, [X8 + 0x8]
	0x03777D08 CBNZ X20, 0x3777D5C
	0x03777D0C LDR W8, [X0 + 0xE0]
	0x03777D10 CBNZ W8, 0x3777D1C
	0x03777D14 BL 0x1C16DFC
	0x03777D18 LDR X0, [X22]
	0x03777D1C ADRP X9, 0x9CF000
	0x03777D20 LDR X8, [X0 + 0xB8]
	0x03777D24 LDR X9, [X9 + 0xDE8]
	0x03777D28 LDR X21, [X8]
	0x03777D2C LDR X0, [X9]
	0x03777D30 BL 0x1C16F10
	0x03777D34 ADRP X8, 0x9CF000
	0x03777D38 LDR X8, [X8 + 0xDF8]
	0x03777D3C MOV X1, X21
	0x03777D40 MOV X3, X31
	0x03777D44 MOV X20, X0
	0x03777D48 LDR X2, [X8]
	0x03777D4C BL 0x2D336C8
	0x03777D50 LDR X8, [X22]
	0x03777D54 LDR X8, [X8 + 0xB8]
	0x03777D58 STR X20, [X8 + 0x8]
	0x03777D5C ADRP X8, 0x9CF000
	0x03777D60 LDR X8, [X8 + 0xDF0]
	0x03777D64 MOV X0, X19
	0x03777D68 MOV X1, X20
	0x03777D6C LDR X2, [X8]
	0x03777D70 BL 0x212F6C4
	0x03777D74 B 0x3777D7C
	0x03777D78 MOV X0, X31
	0x03777D7C LDP X20, X19, [X31 + 0x90]
	0x03777D80 LDP X22, X21, [X31 + 0x80]
	0x03777D84 LDR X30, [X31 + 0x70]
	0x03777D88 ADD X31, X31, 0xA0
	0x03777D8C RET
	0x03777D90 ADRP X0, 0x981000
	0x03777D94 LDR X0, [X0 + 0x528]
	0x03777D98 BL 0x1C16D08
	0x03777D9C BL 0x1C16F10
	0x03777DA0 MOV X19, X0
	0x03777DA4 ADRP X0, 0x987000
	0x03777DA8 LDR X0, [X0 + 0x120]
	0x03777DAC BL 0x1C16D08
	0x03777DB0 MOV X1, X0
	0x03777DB4 MOV X0, X19
	0x03777DB8 MOV X2, X31
	0x03777DBC BL 0x330E100
	0x03777DC0 ADRP X0, 0x9CF000
	0x03777DC4 LDR X0, [X0 + 0xE08]
	0x03777DC8 BL 0x1C16D08
	0x03777DCC MOV X1, X0
	0x03777DD0 MOV X0, X19
	0x03777DD4 BL 0x1C16DEC
	0x03777DD8 SUB X31, X31, 0x90
	0x03777DDC STR X30, [X31 + 0x70]
	0x03777DE0 STP X20, X19, [X31 + 0x80]
	0x03777DE4 ADRP X20, 0xC69000
	0x03777DE8 LDRB W8, [X20 + 0xF3B]
	0x03777DEC MOV X19, X0
	0x03777DF0 TBNZ X8, 0x0, 0x3777E20
	0x03777DF4 ADRP X0, 0x9CF000
	0x03777DF8 LDR X0, [X0 + 0xE10]
	0x03777DFC BL 0x1C16CF4
	0x03777E00 ADRP X0, 0x9CF000
	0x03777E04 LDR X0, [X0 + 0xE18]
	0x03777E08 BL 0x1C16CF4
	0x03777E0C ADRP X0, 0x9AE000
	0x03777E10 LDR X0, [X0 + 0xEF0]
	0x03777E14 BL 0x1C16CF4
	0x03777E18 MOVZ W8, 0x1
	0x03777E1C STRB W8, [X20 + 0xF3B]
	0x03777E20 STP X31, X31, [X31 + 0x8]
	0x03777E24 STR X31, [X31 + 0x18]
	0x03777E28 CBZ X19, 0x3777EC8
	0x03777E2C STR X19, [X31 + 0x8]
	0x03777E30 LDR W8, [X19 + 0x10]
	0x03777E34 MOVI V0.2D, 0x0
	0x03777E38 ADD X0, X31, 0x8
	0x03777E3C ADD X20, X31, 0x8
	0x03777E40 STP W31, W31, [X31 + 0x14]
	0x03777E44 STP V0, V0, [X31 + 0x20]
	0x03777E48 STP V0, V0, [X31 + 0x40]
	0x03777E4C STR W8, [X31 + 0x10]
	0x03777E50 STUR V0, [X31 + 0x60]
	0x03777E54 BL 0x3777230
	0x03777E58 TBZ X0, 0x0, 0x3777E98
	0x03777E5C LDR W8, [X31 + 0x2C]
	0x03777E60 ADD X0, X20, 0x18
	0x03777E64 CMP W8, 0x1
	0x03777E68 B.LT 0x3777EA0
	0x03777E6C MOV X1, X31
	0x03777E70 BL 0x3768AFC
	0x03777E74 ADRP X8, 0x9CF000
	0x03777E78 ADRP X9, 0x9CF000
	0x03777E7C LDR X8, [X8 + 0xE10]
	0x03777E80 LDR X9, [X9 + 0xE18]
	0x03777E84 MOV X3, X31
	0x03777E88 LDR X1, [X8]
	0x03777E8C LDR X2, [X9]
	0x03777E90 BL 0x3766FC8
	0x03777E94 B 0x3777EB8
	0x03777E98 MOV X0, X31
	0x03777E9C B 0x3777EB8
	0x03777EA0 BL 0x3777F10
	0x03777EA4 ADRP X8, 0x9AE000
	0x03777EA8 LDR X8, [X8 + 0xEF0]
	0x03777EAC ANDS W31, W0, 0x1
	0x03777EB0 LDR X8, [X8]
	0x03777EB4 CSEL X0, X8, X31, NE
	0x03777EB8 LDP X20, X19, [X31 + 0x80]
	0x03777EBC LDR X30, [X31 + 0x70]
	0x03777EC0 ADD X31, X31, 0x90
	0x03777EC4 RET
	0x03777EC8 ADRP X0, 0x981000
	0x03777ECC LDR X0, [X0 + 0x528]
	0x03777ED0 BL 0x1C16D08
	0x03777ED4 BL 0x1C16F10
	0x03777ED8 MOV X19, X0
	0x03777EDC ADRP X0, 0x987000
	0x03777EE0 LDR X0, [X0 + 0x120]
	0x03777EE4 BL 0x1C16D08
	0x03777EE8 MOV X1, X0
	0x03777EEC MOV X0, X19
	0x03777EF0 MOV X2, X31
	0x03777EF4 BL 0x330E100
	0x03777EF8 ADRP X0, 0x9CF000
	0x03777EFC LDR X0, [X0 + 0xE20]
	0x03777F00 BL 0x1C16D08
	0x03777F04 MOV X1, X0
	0x03777F08 MOV X0, X19
	0x03777F0C BL 0x1C16DEC
	0x03777F10 STP X30, X21, [X31 - 0x20]!
	0x03777F14 STP X20, X19, [X31 + 0x10]
	0x03777F18 ADRP X20, 0xC69000
	0x03777F1C ADRP X21, 0x9AE000
	0x03777F20 LDRB W8, [X20 + 0xF49]
	0x03777F24 LDR X21, [X21 + 0xEF0]
	0x03777F28 MOV X19, X0
	0x03777F2C TBNZ X8, 0x0, 0x3777F44
	0x03777F30 ADRP X0, 0x9AE000
	0x03777F34 LDR X0, [X0 + 0xEF0]
	0x03777F38 BL 0x1C16CF4
	0x03777F3C MOVZ W8, 0x1
	0x03777F40 STRB W8, [X20 + 0xF49]
	0x03777F44 LDR X0, [X21]
	0x03777F48 LDP X20, X19, [X19 + 0x30]
	0x03777F4C MOV X1, X31
	0x03777F50 BL 0x3768CAC
	0x03777F54 MOV X2, X0
	0x03777F58 MOV X3, X1
	0x03777F5C MOV X0, X20
	0x03777F60 MOV X1, X19
	0x03777F64 LDP X20, X19, [X31 + 0x10]
	0x03777F68 MOV X4, X31
	0x03777F6C LDP X30, X21, [X31], #0x20
	0x03777F70 B 0x3768BB4
	0x03777F74 SUB X31, X31, 0xA0
	0x03777F78 STR X30, [X31 + 0x70]
	0x03777F7C STP X22, X21, [X31 + 0x80]
	0x03777F80 STP X20, X19, [X31 + 0x90]
	0x03777F84 ADRP X20, 0xC69000
	0x03777F88 LDRB W8, [X20 + 0xF3C]
	0x03777F8C MOV X19, X0
	0x03777F90 TBNZ X8, 0x0, 0x3777FC0
	0x03777F94 ADRP X0, 0x9CF000
	0x03777F98 LDR X0, [X0 + 0xE10]
	0x03777F9C BL 0x1C16CF4
	0x03777FA0 ADRP X0, 0x9CF000
	0x03777FA4 LDR X0, [X0 + 0xE18]
	0x03777FA8 BL 0x1C16CF4
	0x03777FAC ADRP X0, 0x9AE000
	0x03777FB0 LDR X0, [X0 + 0xEF0]
	0x03777FB4 BL 0x1C16CF4
	0x03777FB8 MOVZ W8, 0x1
	0x03777FBC STRB W8, [X20 + 0xF3C]
	0x03777FC0 STP X31, X31, [X31 + 0x8]
	0x03777FC4 STR X31, [X31 + 0x18]
	0x03777FC8 CBZ X19, 0x3778128
	0x03777FCC LDR W22, [X19 + 0x10]
	0x03777FD0 MOVZ W1, 0x2F
	0x03777FD4 MOV X0, X19
	0x03777FD8 MOV X2, X31
	0x03777FDC BL 0x322C668
	0x03777FE0 ADD W8, W0, 0x1
	0x03777FE4 MOV W20, W0
	0x03777FE8 CMP W8, 0x2
	0x03777FEC MOV X0, X31
	0x03777FF0 B.CC 0x37780E0
	0x03777FF4 ADD W21, W20, 0x2
	0x03777FF8 CMP W22, W21
	0x03777FFC B.LE 0x3778054
	0x03778000 ADD W1, W20, 0x1
	0x03778004 MOV X0, X19
	0x03778008 MOV X2, X31
	0x0377800C BL 0x3222A1C
	0x03778010 AND W8, W0, 0xFFFF
	0x03778014 CMP W8, 0x3C
	0x03778018 B.NE 0x3778054
	0x0377801C SUB W1, W22, 0x1
	0x03778020 MOV X0, X19
	0x03778024 MOV X2, X31
	0x03778028 BL 0x3222A1C
	0x0377802C AND W8, W0, 0xFFFF
	0x03778030 CMP W8, 0x3E
	0x03778034 B.NE 0x3778054
	0x03778038 SUB W8, W22, W20
	0x0377803C SUB W2, W8, 0x3
	0x03778040 MOV X0, X19
	0x03778044 MOV W1, W21
	0x03778048 MOV X3, X31
	0x0377804C BL 0x3228DE4
	0x03778050 B 0x37780E0
	0x03778054 STR X19, [X31 + 0x8]
	0x03778058 LDR W8, [X19 + 0x10]
	0x0377805C MOVI V0.2D, 0x0
	0x03778060 ADD X0, X31, 0x8
	0x03778064 ADD X20, X31, 0x8
	0x03778068 STP W31, W31, [X31 + 0x14]
	0x0377806C STP V0, V0, [X31 + 0x20]
	0x03778070 STP V0, V0, [X31 + 0x40]
	0x03778074 STR W8, [X31 + 0x10]
	0x03778078 STUR V0, [X31 + 0x60]
	0x0377807C BL 0x3777230
	0x03778080 TBZ X0, 0x0, 0x37780DC
	0x03778084 ADD X19, X20, 0x18
	0x03778088 MOV X0, X19
	0x0377808C BL 0x3777F10
	0x03778090 TBNZ X0, 0x0, 0x3778170
	0x03778094 LDR W8, [X31 + 0x2C]
	0x03778098 CBZ W8, 0x37780DC
	0x0377809C MOV X0, X19
	0x037780A0 MOV X1, X31
	0x037780A4 BL 0x3768AFC
	0x037780A8 MOV X20, X0
	0x037780AC ADD X0, X31, 0x8
	0x037780B0 BL 0x3777230
	0x037780B4 MOV W8, W0
	0x037780B8 MOV X0, X31
	0x037780BC TBZ X8, 0x0, 0x37780E0
	0x037780C0 MOV X0, X19
	0x037780C4 BL 0x3777F10
	0x037780C8 TBZ X0, 0x0, 0x37780F4
	0x037780CC ADRP X8, 0x9AD000
	0x037780D0 LDR X8, [X8 + 0xEF0]
	0x037780D4 LDR X0, [X8]
	0x037780D8 B 0x37780E0
	0x037780DC MOV X0, X31
	0x037780E0 LDP X20, X19, [X31 + 0x90]
	0x037780E4 LDP X22, X21, [X31 + 0x80]
	0x037780E8 LDR X30, [X31 + 0x70]
	0x037780EC ADD X31, X31, 0xA0
	0x037780F0 RET
	0x037780F4 ADRP X8, 0x9CE000
	0x037780F8 ADRP X9, 0x9CE000
	0x037780FC LDR X8, [X8 + 0xE10]
	0x03778100 LDR X9, [X9 + 0xE18]
	0x03778104 MOV X0, X20
	0x03778108 MOV X3, X31
	0x0377810C LDR X1, [X8]
	0x03778110 LDR X2, [X9]

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+144], X30
	003 Move [X31+152], X25
	004 Move [X31+160], X24
	005 Move [X31+168], X23
	006 Move [X31+176], X22
	007 Move [X31+184], X21
	008 Move [X31+192], X20
	009 Move [X31+200], X19
	010 Move X23, 0xC6A000
	011 Move W8, [X23+3897]
	012 Move X24, X4
	013 Move W21, W3
	014 Move X20, X2
	015 Move X22, X1
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {41}
	021 Move X0, 0x9A5000
	022 Move X0, [X0+3520]
	023 Call 0x1C17CF4
	024 Move X0, 0x9D0000
	025 Move X0, [X0+2952]
	026 Call 0x1C17CF4
	027 Move X0, 0x97D000
	028 Move X0, [X0+2288]
	029 Call 0x1C17CF4
	030 Move X0, 0x97F000
	031 Move X0, [X0+632]
	032 Call 0x1C17CF4
	033 Move X0, 0x9B0000
	034 Move X0, [X0+1744]
	035 Call 0x1C17CF4
	036 Move X0, 0x97D000
	037 Move X0, [X0+2120]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X23+3897], W8
	041 NotImplemented "Instruction MOVI not yet implemented."
	042 Move X0, X19
	043 Move X1, X31
	044 Move [X31+128], X31
	045 Move [X31+8], X31
	046 Move [X31+16], X31
	047 Move [X31+96], V0
	048 Move [X31+104], V0
	049 Move [X31+64], V0
	050 Move [X31+72], V0
	051 Move [X31+32], V0
	052 Move [X31+40], V0
	053 Move [X22], X31
	054 Move [X20], X31
	055 Call String.IsNullOrEmpty, X0
	056 Move TEMP, X0
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfNotEqual {65}
	060 Move X8, 0x97F000
	061 Move X8, [X8+632]
	062 Move X8, [X8]
	063 Move X8, [X8+184]
	064 Move X19, [X8]
	065 Compare X24, 0
	066 JumpIfEqual {96}
	067 Move X0, X24
	068 Move X1, X19
	069 Move W2, W31
	070 Call InputControlPath.TryFindControl, X0, X1, X2
	071 Move X23, X0
	072 Compare X0, 0
	073 JumpIfNotEqual {82}
	074 Move X0, X19
	075 Move X1, X24
	076 Call InputControlPath.Matches, X0, X1
	077 Move X23, X24
	078 Move TEMP, X0
	079 And TEMP, TEMP, 1
	080 Compare TEMP, 1
	081 JumpIfNotEqual {96}
	082 Move TEMP, X21
	083 And TEMP, TEMP, 4
	084 Compare TEMP, 4
	085 JumpIfNotEqual {94}
	086 Move X0, X23
	087 Call InputControl.get_shortDisplayName, X0
	088 Move X1, X31
	089 Call String.IsNullOrEmpty, X0
	090 Move TEMP, X0
	091 And TEMP, TEMP, 1
	092 Compare TEMP, 1
	093 JumpIfNotEqual {202}
	094 Move X0, X23
	095 Call InputControl.get_displayName, X0
	096 Move X8, 0x97D000
	097 Move X8, [X8+2288]
	098 Move X0, [X8]
	099 Call 0x1C17F10
	100 Move X1, X31
	101 Move X23, X0
	102 Call StringBuilder..ctor, X0
	103 Move [X31+32], X19
	104 Compare X19, 0
	105 JumpIfEqual {290}
	106 Move W8, [X19+16]
	107 Move [X31+48], W31
	108 Move X9, 0x9A5000
	109 Move X9, [X9+3520]
	110 NotImplemented "Instruction MOVI not yet implemented."
	111 Move [X31+56], V0
	112 Move [X31+72], V0
	113 Move X0, [X9]
	114 Move [X31+88], V0
	115 Move [X31+104], V0
	116 Move [X31+40], W8
	117 Move [X31+44], W31
	118 Move [X31+120], V0
	119 Move W8, [X0+224]
	120 Compare W8, 0
	121 JumpIfNotEqual {123}
	122 Call 0x1C17DFC
	123 Move X0, X31
	124 Call InputControlLayout.CacheRef
	125 Move [X31+24], W0
	126 Add X0, X31, 32
	127 Call PathParser.MoveToNextComponent, X0
	128 Move TEMP, X0
	129 And TEMP, TEMP, 1
	130 Compare TEMP, 1
	131 JumpIfNotEqual {186}
	132 Add X8, X31, 32
	133 Add X25, X8, 24
	134 Add X3, X31, 16
	135 Add X4, X31, 8
	136 Move X0, X25
	137 Move X1, X31
	138 Move X2, X31
	139 Move W5, W21
	140 Call ParsedPathComponent.ToHumanReadableString, X0, X1, X2, X3, X4, X5
	141 Move X8, [X31+16]
	142 Move X24, X0
	143 Move [X22], X8
	144 Move W22, 1
	145 Add X0, X31, 32
	146 Call PathParser.MoveToNextComponent, X0
	147 Move TEMP, X0
	148 And TEMP, TEMP, 1
	149 Compare TEMP, 1
	150 JumpIfNotEqual {175}
	151 Move TEMP, X22
	152 And TEMP, TEMP, 1
	153 Compare TEMP, 1
	154 JumpIfEqual {161}
	155 Compare X23, 0
	156 JumpIfEqual {289}
	157 Move W1, 47
	158 Move X0, X23
	159 Move X2, X31
	160 Call StringBuilder.Append, X0, X1
	161 Move X1, [X31+16]
	162 Move X2, [X20]
	163 Add X3, X31, 16
	164 Move X0, X25
	165 Move X4, X20
	166 Move W5, W21
	167 Call ParsedPathComponent.ToHumanReadableString, X0, X1, X2, X3, X4, X5
	168 Move X1, X0
	169 Compare X23, 0
	170 JumpIfEqual {288}
	171 Move X0, X23
	172 Move X2, X31
	173 Call StringBuilder.Append, X0, X1
	174 Move W22, W31
	175 Move TEMP, X21
	176 And TEMP, TEMP, 2
	177 Compare TEMP, 2
	178 JumpIfEqual {186}
	179 Move X0, X24
	180 Move X1, X31
	181 Call String.IsNullOrEmpty, X0
	182 Move TEMP, X0
	183 And TEMP, TEMP, 1
	184 Compare TEMP, 1
	185 JumpIfNotEqual {272}
	186 Compare X23, 0
	187 JumpIfEqual {291}
	188 Move X0, X23
	189 Move X1, X31
	190 Call StringBuilder.get_Length, X0
	191 Compare W0, 0
	192 JumpIfEqual {199}
	193 Move X8, [X23]
	194 Move X9, [X8+360]
	195 Move X1, [X8+368]
	196 Move X0, X23
	197 NotImplemented "Instruction BLR not yet implemented."
	198 Move X19, X0
	199 Add X0, X31, 24
	200 Move X1, X31
	201 Call CacheRefInstance.Dispose, X0
	202 Move X0, X23
	203 Call InputControl.get_shortDisplayName, X0
	204 Move X19, X0
	205 Move TEMP, X21
	206 And TEMP, TEMP, 2
	207 Compare TEMP, 2
	208 JumpIfEqual {224}
	209 Move X0, [X23+120]
	210 Compare X0, 0
	211 JumpIfEqual {290}
	212 Call InputControl.get_displayName, X0
	213 Move X8, 0x9B0000
	214 Move X9, 0x97D000
	215 Move X8, [X8+1744]
	216 Move X9, [X9+2120]
	217 Move X2, X0
	218 Move X0, X19
	219 Move X1, [X8]
	220 Move X3, [X9]
	221 Move X4, X31
	222 Call String.Concat, X0, X1, X2, X3
	223 Move X19, X0
	224 Move X8, [X23+120]
	225 Compare X8, 0
	226 JumpIfEqual {290}
	227 Move X0, [X8+88]
	228 Move X1, [X8+96]
	229 Move X2, X31
	230 Call InternedString.op_Implicit, X0
	231 Move [X22], X0
	232 Move X8, 0x9D0000
	233 Move X8, [X8+2952]
	234 Move X9, [X23]
	235 Move X8, [X8]
	236 Move W11, [X9+304]
	237 Move W10, [X8+304]
	238 NotImplemented "Instruction CMP not yet implemented."
	239 Move X9, [X9+200]
	240 Add X9, X9, X10
	241 NotImplemented "Instruction LDUR not yet implemented."
	242 NotImplemented "Instruction CMP not yet implemented."
	243 Move X0, X23
	244 Call InputControl.get_path, X0
	245 Move X8, [X23+120]
	246 Compare X8, 0
	247 JumpIfEqual {290}
	248 Move X21, X0
	249 Move X0, X8
	250 Call InputControl.get_path, X0
	251 Compare X0, 0
	252 JumpIfEqual {290}
	253 Compare X21, 0
	254 JumpIfEqual {290}
	255 Move W8, [X0+16]
	256 Move X0, X21
	257 Move X2, X31
	258 Add W1, W8, 1
	259 Call String.Substring, X0, X1
	260 Move [X20], X0
	261 Move X0, X19
	262 Move X20, [X31+192]
	263 Move X19, [X31+200]
	264 Move X22, [X31+176]
	265 Move X21, [X31+184]
	266 Move X24, [X31+160]
	267 Move X23, [X31+168]
	268 Move X30, [X31+144]
	269 Move X25, [X31+152]
	270 Add X31, X31, 208
	271 Return X0
	272 Compare X23, 0
	273 JumpIfEqual {292}
	274 Move X8, 0x9AF000
	275 Move X8, [X8+1744]
	276 Move X1, [X8]
	277 Move X0, X23
	278 Move X2, X31
	279 Call StringBuilder.Append, X0, X1
	280 Move X0, X23
	281 Move X1, X24
	282 Move X2, X31
	283 Call StringBuilder.Append, X0, X1
	284 Move W1, 93
	285 Move X0, X23
	286 Move X2, X31
	287 Call StringBuilder.Append, X0, X1
	288 Call 0x1C17F20
	289 Call 0x1C17F20
	290 Call 0x1C17F20
	291 Call 0x1C17F20
	292 Call 0x1C17F20
	293 Move X19, X0
	294 NotImplemented "Instruction CMP not yet implemented."
	295 Move X0, X19
	296 Call 0x3EB2AD0
	297 Move X20, [X0]
	298 Call 0x3EB2AE0
	299 Add X0, X31, 24
	300 Move X1, X31
	301 Call CacheRefInstance.Dispose, X0
	302 Compare X20, 0
	303 JumpIfNotEqual {306}
	304 Move X19, [X31+8]
	305 Move X20, X31
	306 Move X0, X20
	307 Call 0x1C17F18
	308 Move X19, X0
	309 Add X0, X31, 24
	310 Move X1, X31
	311 Call CacheRefInstance.Dispose, X0
	312 Compare X20, 0
	313 JumpIfNotEqual {316}
	314 Move X0, X19
	315 Call 0x1D2D690
	316 Move X0, X20
	317 Call 0x1C17F18
	318 Call 0x1991590

Method: System.String[] TryGetDeviceUsages(System.String path)

Disassembly:
	0x03778C40 LDR X8, [X19]
	0x03778C44 LDR X1, [X29]
	0x03778C48 LDRH W9, [X8 + 0x12E]
	0x03778C4C CBZ X9, 0x3778C70
	0x03778C50 LDR X10, [X8 + 0xB0]
	0x03778C54 ADD X10, X10, 0x8
	0x03778C58 LDUR X11, [X10 - 0x8]
	0x03778C5C CMP X11, X1
	0x03778C60 B.EQ 0x3778C80
	0x03778C64 SUBS X9, X9, 0x1
	0x03778C68 ADD X10, X10, 0x10
	0x03778C6C B.NE 0x3778C58
	0x03778C70 MOV X0, X19
	0x03778C74 MOV W2, W31
	0x03778C78 BL 0x1C5C788
	0x03778C7C B 0x3778C8C
	0x03778C80 LDRSW X9, [X10]
	0x03778C84 ADD X8, X8, X9, 0x4, LSL
	0x03778C88 ADD X0, X8, 0x138
	0x03778C8C LDP X8, X1, [X0]
	0x03778C90 MOV X0, X19
	0x03778C94 BLR X8
	0x03778C98 STP X0, X1, [X31 + 0x20]
	0x03778C9C ADD X0, X31, 0x20
	0x03778CA0 MOV X1, X31
	0x03778CA4 BL 0x3768760
	0x03778CA8 TBNZ X0, 0x0, 0x3778BE0
	0x03778CAC LDP X8, X9, [X20 + 0x48]
	0x03778CB0 UBFM X10, X9, 0x20, 0x3F
	0x03778CB4 CMP W10, 0x1
	0x03778CB8 STP X8, X9, [X31 + 0x10]
	0x03778CBC B.LT 0x3778BE0
	0x03778CC0 STR W26, [X31 + 0x8]
	0x03778CC4 MOV W21, W31
	0x03778CC8 SUB W26, W10, 0x1
	0x03778CCC LDP X22, X23, [X31 + 0x20]
	0x03778CD0 LDR X2, [X27]
	0x03778CD4 STP X8, X9, [X31 + 0x10]
	0x03778CD8 ADD X0, X31, 0x10
	0x03778CDC MOV W1, W21
	0x03778CE0 BL 0x24FCF28
	0x03778CE4 MOV X2, X0
	0x03778CE8 MOV X3, X1
	0x03778CEC MOV X0, X22
	0x03778CF0 MOV X1, X23
	0x03778CF4 BL 0x377864C
	0x03778CF8 TBNZ X0, 0x0, 0x3778D10
	0x03778CFC CMP W26, W21
	0x03778D00 ADD W21, W21, 0x1
	0x03778D04 B.EQ 0x3778D18
	0x03778D08 LDP X8, X9, [X20 + 0x48]
	0x03778D0C B 0x3778CCC
	0x03778D10 MOVZ W26, 0x1
	0x03778D14 B 0x3778BE0
	0x03778D18 LDR W26, [X31 + 0x8]
	0x03778D1C B 0x3778BE0
	0x03778D20 MOV X20, X31
	0x03778D24 MOVZ W21, 0xD
	0x03778D28 CBZ X19, 0x3778DE0
	0x03778D2C LDR X8, [X19]
	0x03778D30 LDR X1, [X24]
	0x03778D34 LDRH W9, [X8 + 0x12E]
	0x03778D38 CBZ X9, 0x3778D5C
	0x03778D3C LDR X10, [X8 + 0xB0]
	0x03778D40 ADD X10, X10, 0x8
	0x03778D44 LDUR X11, [X10 - 0x8]
	0x03778D48 CMP X11, X1
	0x03778D4C B.EQ 0x3778DC8
	0x03778D50 SUBS X9, X9, 0x1
	0x03778D54 ADD X10, X10, 0x10
	0x03778D58 B.NE 0x3778D44
	0x03778D5C MOV X0, X19
	0x03778D60 MOV W2, W31
	0x03778D64 BL 0x1C5C788
	0x03778D68 B 0x3778DD4
	0x03778D6C TBZ X21, 0x0, 0x3778E24
	0x03778D70 LDP X9, X8, [X20 + 0x58]
	0x03778D74 UBFM X10, X8, 0x20, 0x3F
	0x03778D78 CMP W10, 0x1
	0x03778D7C STP X9, X8, [X31 + 0x30]
	0x03778D80 B.LT 0x3778B90
	0x03778D84 MOV W21, W31
	0x03778D88 LDR X2, [X27]
	0x03778D8C LDP X22, X23, [X19 + 0x30]
	0x03778D90 ADD X0, X31, 0x30
	0x03778D94 MOV W1, W21
	0x03778D98 BL 0x24FCF28
	0x03778D9C MOV X2, X0
	0x03778DA0 MOV X3, X1
	0x03778DA4 MOV X0, X22
	0x03778DA8 MOV X1, X23
	0x03778DAC BL 0x377864C
	0x03778DB0 TBNZ X0, 0x0, 0x3778BA8
	0x03778DB4 LDR W8, [X31 + 0x3C]
	0x03778DB8 ADD W21, W21, 0x1
	0x03778DBC CMP W21, W8
	0x03778DC0 B.LT 0x3778D88
	0x03778DC4 B 0x3778B90
	0x03778DC8 LDRSW X9, [X10]
	0x03778DCC ADD X8, X8, X9, 0x4, LSL
	0x03778DD0 ADD X0, X8, 0x138
	0x03778DD4 LDP X8, X1, [X0]

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+112], X30
	003 Move [X31+128], X22
	004 Move [X31+136], X21
	005 Move [X31+144], X20
	006 Move [X31+152], X19
	007 Move X20, 0xC69000
	008 Move W8, [X20+3898]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {28}
	014 Move X0, 0x9CF000
	015 Move X0, [X0+3560]
	016 Call 0x1C17CF4
	017 Move X0, 0x9CF000
	018 Move X0, [X0+3568]
	019 Call 0x1C17CF4
	020 Move X0, 0x9CF000
	021 Move X0, [X0+3576]
	022 Call 0x1C17CF4
	023 Move X0, 0x9CF000
	024 Move X0, [X0+3584]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X20+3898], W8
	028 Move [X31+8], X31
	029 Move [X31+16], X31
	030 Move [X31+24], X31
	031 Compare X19, 0
	032 JumpIfEqual {101}
	033 Move [X31+8], X19
	034 Move W8, [X19+16]
	035 NotImplemented "Instruction MOVI not yet implemented."
	036 Add X0, X31, 8
	037 Move [X31+20], W31
	038 Move [X31+24], W31
	039 Move [X31+32], V0
	040 Move [X31+40], V0
	041 Move [X31+64], V0
	042 Move [X31+72], V0
	043 Move [X31+16], W8
	044 Move [X31+96], V0
	045 Call PathParser.MoveToNextComponent, X0
	046 Move TEMP, X0
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfNotEqual {93}
	050 Move W8, [X31+48]
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move X22, 0x9CF000
	053 Move X22, [X22+3584]
	054 Add X9, X31, 8
	055 Add X19, X9, 40
	056 Move X0, [X22]
	057 Move W8, [X0+224]
	058 Compare W8, 0
	059 JumpIfNotEqual {62}
	060 Call 0x1C17DFC
	061 Move X0, [X22]
	062 Move X8, [X0+184]
	063 Move X20, [X8+8]
	064 Compare X20, 0
	065 JumpIfNotEqual {87}
	066 Move W8, [X0+224]
	067 Compare W8, 0
	068 JumpIfNotEqual {71}
	069 Call 0x1C17DFC
	070 Move X0, [X22]
	071 Move X9, 0x9CF000
	072 Move X8, [X0+184]
	073 Move X9, [X9+3560]
	074 Move X21, [X8]
	075 Move X0, [X9]
	076 Call 0x1C17F10
	077 Move X8, 0x9CF000
	078 Move X8, [X8+3576]
	079 Move X1, X21
	080 Move X3, X31
	081 Move X20, X0
	082 Move X2, [X8]
	083 Call Func`2<Substring, Object>..ctor, X0, X1, X2
	084 Move X8, [X22]
	085 Move X8, [X8+184]
	086 Move [X8+8], X20
	087 Move X8, 0x9CF000
	088 Move X8, [X8+3568]
	089 Move X0, X19
	090 Move X1, X20
	091 Move X2, [X8]
	092 Call InlinedArray`1<Substring>.ToArray, X0, X1
	093 Move X0, X31
	094 Move X20, [X31+144]
	095 Move X19, [X31+152]
	096 Move X22, [X31+128]
	097 Move X21, [X31+136]
	098 Move X30, [X31+112]
	099 Add X31, X31, 160
	100 Return X0
	101 Move X0, 0x981000
	102 Move X0, [X0+1320]
	103 Call 0x1C17D08
	104 Call 0x1C17F10
	105 Move X19, X0
	106 Move X0, 0x987000
	107 Move X0, [X0+288]
	108 Call 0x1C17D08
	109 Move X1, X0
	110 Move X0, X19
	111 Move X2, X31
	112 Call ArgumentNullException..ctor, X0, X1
	113 Move X0, 0x9CF000
	114 Move X0, [X0+3592]
	115 Call 0x1C17D08
	116 Move X1, X0
	117 Move X0, X19
	118 Call 0x1C17DEC

Method: System.String TryGetDeviceLayout(System.String path)

Disassembly:
	0x03778DD8 MOV X0, X19
	0x03778DDC BLR X8
	0x03778DE0 CBNZ X20, 0x3778E30
	0x03778DE4 CMP W21, 0xD
	0x03778DE8 B.EQ 0x3778DF0
	0x03778DEC CBNZ W21, 0x3778E00
	0x03778DF0 AND W8, W26, 0x1
	0x03778DF4 ORR W8, W25, W8, 0x0
	0x03778DF8 CMP W8, 0x0
	0x03778DFC CSET W8, NE
	0x03778E00 LDP X20, X19, [X31 + 0x90]
	0x03778E04 LDP X22, X21, [X31 + 0x80]
	0x03778E08 LDP X24, X23, [X31 + 0x70]
	0x03778E0C LDP X26, X25, [X31 + 0x60]
	0x03778E10 LDP X28, X27, [X31 + 0x50]
	0x03778E14 LDP X29, X30, [X31 + 0x40]
	0x03778E18 AND W0, W8, 0x1
	0x03778E1C ADD X31, X31, 0xA0
	0x03778E20 RET
	0x03778E24 MOV W8, W31
	0x03778E28 B 0x3778E00
	0x03778E2C BL 0x1C16F20
	0x03778E30 MOV X0, X20
	0x03778E34 BL 0x1C16F18
	0x03778E38 B 0x3778E3C
	0x03778E3C LDR W26, [X31 + 0x8]
	0x03778E40 B 0x3778E54
	0x03778E44 B 0x3778E54
	0x03778E48 MOV W26, W31
	0x03778E4C B 0x3778E54
	0x03778E50 B 0x3778E54
	0x03778E54 CMP W1, 0x1
	0x03778E58 B.NE 0x3778E74
	0x03778E5C BL 0x3EB1AD0
	0x03778E60 LDR X20, [X0]
	0x03778E64 BL 0x3EB1AE0
	0x03778E68 MOV W21, W31
	0x03778E6C CBNZ X19, 0x3778D2C
	0x03778E70 B 0x3778DE0
	0x03778E74 STR X0, [X31 + 0x8]
	0x03778E78 MOV X20, X31
	0x03778E7C B 0x3778E84
	0x03778E80 STR X0, [X31 + 0x8]
	0x03778E84 CBZ X19, 0x3778EE0
	0x03778E88 LDR X8, [X19]
	0x03778E8C LDR X1, [X24]
	0x03778E90 LDRH W9, [X8 + 0x12E]
	0x03778E94 CBZ X9, 0x3778EB8
	0x03778E98 LDR X10, [X8 + 0xB0]
	0x03778E9C ADD X10, X10, 0x8
	0x03778EA0 LDUR X11, [X10 - 0x8]
	0x03778EA4 CMP X11, X1
	0x03778EA8 B.EQ 0x3778EC8
	0x03778EAC SUBS X9, X9, 0x1
	0x03778EB0 ADD X10, X10, 0x10
	0x03778EB4 B.NE 0x3778EA0
	0x03778EB8 MOV X0, X19
	0x03778EBC MOV W2, W31
	0x03778EC0 BL 0x1C5C788
	0x03778EC4 B 0x3778ED4
	0x03778EC8 LDRSW X9, [X10]
	0x03778ECC ADD X8, X8, X9, 0x4, LSL
	0x03778ED0 ADD X0, X8, 0x138
	0x03778ED4 LDP X8, X1, [X0]
	0x03778ED8 MOV X0, X19
	0x03778EDC BLR X8
	0x03778EE0 CBNZ X20, 0x3778EEC
	0x03778EE4 LDR X0, [X31 + 0x8]
	0x03778EE8 BL 0x1D2C690
	0x03778EEC MOV X0, X20
	0x03778EF0 BL 0x1C16F18
	0x03778EF4 BL 0x1990590
	0x03778EF8 SUB X31, X31, 0x90
	0x03778EFC STR X30, [X31 + 0x70]
	0x03778F00 STP X20, X19, [X31 + 0x80]
	0x03778F04 MOV X19, X1
	0x03778F08 MOV X1, X31
	0x03778F0C MOV X20, X0

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+112], X30
	003 Move [X31+128], X20
	004 Move [X31+136], X19
	005 Move X20, 0xC69000
	006 Move W8, [X20+3899]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {23}
	012 Move X0, 0x9CF000
	013 Move X0, [X0+3600]
	014 Call 0x1C17CF4
	015 Move X0, 0x9CF000
	016 Move X0, [X0+3608]
	017 Call 0x1C17CF4
	018 Move X0, 0x9AE000
	019 Move X0, [X0+3824]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+3899], W8
	023 Move [X31+8], X31
	024 Move [X31+16], X31
	025 Move [X31+24], X31
	026 Compare X19, 0
	027 JumpIfEqual {71}
	028 Move [X31+8], X19
	029 Move W8, [X19+16]
	030 NotImplemented "Instruction MOVI not yet implemented."
	031 Add X0, X31, 8
	032 Add X20, X31, 8
	033 Move [X31+20], W31
	034 Move [X31+24], W31
	035 Move [X31+32], V0
	036 Move [X31+40], V0
	037 Move [X31+64], V0
	038 Move [X31+72], V0
	039 Move [X31+16], W8
	040 Move [X31+96], V0
	041 Call PathParser.MoveToNextComponent, X0
	042 Move TEMP, X0
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfNotEqual {59}
	046 Move W8, [X31+44]
	047 Add X0, X20, 24
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X1, X31
	050 Call Substring.ToString, X0
	051 Move X8, 0x9CF000
	052 Move X9, 0x9CF000
	053 Move X8, [X8+3600]
	054 Move X9, [X9+3608]
	055 Move X3, X31
	056 Move X1, [X8]
	057 Move X2, [X9]
	058 Call StringHelpers.Unescape, X0, X1, X2
	059 Move X0, X31
	060 Call ParsedPathComponent.get_isWildcard, X0
	061 Move X8, 0x9AE000
	062 Move X8, [X8+3824]
	063 And W31, W0, 1
	064 Move X8, [X8]
	065 NotImplemented "Instruction CSEL not yet implemented."
	066 Move X20, [X31+128]
	067 Move X19, [X31+136]
	068 Move X30, [X31+112]
	069 Add X31, X31, 144
	070 Return X0
	071 Move X0, 0x981000
	072 Move X0, [X0+1320]
	073 Call 0x1C17D08
	074 Call 0x1C17F10
	075 Move X19, X0
	076 Move X0, 0x987000
	077 Move X0, [X0+288]
	078 Call 0x1C17D08
	079 Move X1, X0
	080 Move X0, X19
	081 Move X2, X31
	082 Call ArgumentNullException..ctor, X0, X1
	083 Move X0, 0x9CF000
	084 Move X0, [X0+3616]
	085 Call 0x1C17D08
	086 Move X1, X0
	087 Move X0, X19
	088 Call 0x1C17DEC

Method: System.String TryGetControlLayout(System.String path)

Disassembly:
	0x03778F74 MOV W0, W31
	0x03778F78 LDP X20, X19, [X31 + 0x80]
	0x03778F7C LDR X30, [X31 + 0x70]
	0x03778F80 ADD X31, X31, 0x90
	0x03778F84 RET
	0x03778F88 ADRP X0, 0x980000
	0x03778F8C LDR X0, [X0 + 0x528]
	0x03778F90 BL 0x1C16D08
	0x03778F94 BL 0x1C16F10
	0x03778F98 MOV X19, X0
	0x03778F9C ADRP X0, 0x9CE000
	0x03778FA0 LDR X0, [X0 + 0xD90]
	0x03778FA4 B 0x3778FC4
	0x03778FA8 ADRP X0, 0x980000
	0x03778FAC LDR X0, [X0 + 0x528]
	0x03778FB0 BL 0x1C16D08
	0x03778FB4 BL 0x1C16F10
	0x03778FB8 MOV X19, X0
	0x03778FBC ADRP X0, 0x9A3000
	0x03778FC0 LDR X0, [X0 + 0xD60]
	0x03778FC4 BL 0x1C16D08
	0x03778FC8 MOV X1, X0
	0x03778FCC MOV X0, X19
	0x03778FD0 MOV X2, X31
	0x03778FD4 BL 0x330E100
	0x03778FD8 ADRP X0, 0x9CE000
	0x03778FDC LDR X0, [X0 + 0xE50]
	0x03778FE0 BL 0x1C16D08
	0x03778FE4 MOV X1, X0
	0x03778FE8 MOV X0, X19
	0x03778FEC BL 0x1C16DEC
	0x03778FF0 BL 0x1C16F20
	0x03778FF4 SUB X31, X31, 0x80
	0x03778FF8 STP X30, X27, [X31 + 0x30]
	0x03778FFC STP X26, X25, [X31 + 0x40]
	0x03779000 STP X24, X23, [X31 + 0x50]
	0x03779004 STP X22, X21, [X31 + 0x60]
	0x03779008 STP X20, X19, [X31 + 0x70]
	0x0377900C ADRP X21, 0xC67000
	0x03779010 LDRB W8, [X21 + 0xF4D]
	0x03779014 MOV X19, X1
	0x03779018 MOV X20, X0
	0x0377901C TBNZ X8, 0x0, 0x3779064
	0x03779020 ADRP X0, 0x9A2000
	0x03779024 LDR X0, [X0 + 0xDB8]
	0x03779028 BL 0x1C16CF4
	0x0377902C ADRP X0, 0x9CD000
	0x03779030 LDR X0, [X0 + 0xDA8]
	0x03779034 BL 0x1C16CF4
	0x03779038 ADRP X0, 0x9A2000
	0x0377903C LDR X0, [X0 + 0xDC0]
	0x03779040 BL 0x1C16CF4
	0x03779044 ADRP X0, 0x9A2000
	0x03779048 LDR X0, [X0 + 0xDC8]
	0x0377904C BL 0x1C16CF4
	0x03779050 ADRP X0, 0x9A2000
	0x03779054 LDR X0, [X0 + 0xDD0]
	0x03779058 BL 0x1C16CF4
	0x0377905C MOVZ W8, 0x1
	0x03779060 STRB W8, [X21 + 0xF4D]
	0x03779064 MOV X0, X20
	0x03779068 MOV X1, X31
	0x0377906C STP X31, X31, [X31 + 0x20]
	0x03779070 STP X31, X31, [X31 + 0x10]
	0x03779074 STP X31, X31, [X31]
	0x03779078 BL 0x3768760
	0x0377907C TBNZ X0, 0x0, 0x3779130
	0x03779080 CBZ X19, 0x37792A0
	0x03779084 MOV X23, X19
	0x03779088 LDP X22, X21, [X20]
	0x0377908C LDR X0, [X23 + 0x58]!
	0x03779090 MOV X2, X31
	0x03779094 LDR X1, [X23 + 0x8]
	0x03779098 BL 0x37577E0
	0x0377909C MOV X2, X0
	0x037790A0 MOV X0, X22
	0x037790A4 MOV X1, X21
	0x037790A8 BL 0x37798AC
	0x037790AC TBNZ X0, 0x0, 0x3779130
	0x037790B0 LDR V0, [X23]
	0x037790B4 ADRP X23, 0x9A2000
	0x037790B8 LDR X23, [X23 + 0xDC0]
	0x037790BC ADRP X24, 0x9A2000
	0x037790C0 STR V0, [X31 + 0x2]
	0x037790C4 LDR X24, [X24 + 0xDB8]
	0x037790C8 MOV W21, W31
	0x037790CC LDR X0, [X23]
	0x037790D0 LDR W8, [X0 + 0xE0]
	0x037790D4 CBNZ W8, 0x37790E0
	0x037790D8 BL 0x1C16DFC
	0x037790DC LDR X0, [X23]
	0x037790E0 LDR X8, [X0 + 0xB8]
	0x037790E4 LDR X0, [X8 + 0x28]
	0x037790E8 CBZ X0, 0x37792A0
	0x037790EC LDP X1, X2, [X31 + 0x20]
	0x037790F0 LDR X4, [X24]
	0x037790F4 ADD X3, X31, 0x20
	0x037790F8 BL 0x2A590C0
	0x037790FC ORN W8, W21, W0, 0x0
	0x03779100 TBNZ X8, 0x0, 0x377912C
	0x03779104 LDP X21, X22, [X20]
	0x03779108 ADD X0, X31, 0x20
	0x0377910C MOV X1, X31
	0x03779110 BL 0x37565F4
	0x03779114 MOV X2, X0
	0x03779118 MOV X0, X21
	0x0377911C MOV X1, X22
	0x03779120 BL 0x37798AC
	0x03779124 MOV W21, W0
	0x03779128 B 0x37790CC
	0x0377912C TBZ X21, 0x0, 0x3779200
	0x03779130 MOV X21, X20
	0x03779134 LDR W8, [X21 + 0x10]!
	0x03779138 CMP W8, 0x1
	0x0377913C B.LT 0x3779208
	0x03779140 ADRP X26, 0x9CD000
	0x03779144 ADRP X27, 0x9A2000
	0x03779148 LDR X26, [X26 + 0xDA8]
	0x0377914C LDR X27, [X27 + 0xDD0]
	0x03779150 MOV W22, W31
	0x03779154 LDR X2, [X26]
	0x03779158 MOV X0, X21
	0x0377915C MOV W1, W22
	0x03779160 BL 0x2DED518
	0x03779164 STP X0, X1, [X31 + 0x10]
	0x03779168 ADD X0, X31, 0x10
	0x0377916C MOV X1, X31
	0x03779170 BL 0x3768760
	0x03779174 TBZ X0, 0x0, 0x377918C
	0x03779178 LDR W8, [X21]
	0x0377917C ADD W22, W22, 0x1
	0x03779180 CMP W22, W8
	0x03779184 B.LT 0x3779154
	0x03779188 B 0x3779208
	0x0377918C CBZ X19, 0x37792A0

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+112], X30
	003 Move [X31+128], X22
	004 Move [X31+136], X21
	005 Move [X31+144], X20
	006 Move [X31+152], X19
	007 Move X20, 0xC69000
	008 Move W8, [X20+3900]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0x9CF000
	015 Move X0, [X0+3600]
	016 Call 0x1C17CF4
	017 Move X0, 0x9CF000
	018 Move X0, [X0+3608]
	019 Call 0x1C17CF4
	020 Move X0, 0x9AE000
	021 Move X0, [X0+3824]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+3900], W8
	025 Move [X31+8], X31
	026 Move [X31+16], X31
	027 Move [X31+24], X31
	028 Compare X19, 0
	029 JumpIfEqual {128}
	030 Move W22, [X19+16]
	031 Move W1, 47
	032 Move X0, X19
	033 Move X2, X31
	034 Call String.LastIndexOf, X0, X1
	035 Add W8, W0, 1
	036 Move W20, W0
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X0, X31
	039 Add W21, W20, 2
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Add W1, W20, 1
	042 Move X0, X19
	043 Move X2, X31
	044 Call String.get_Chars, X0, X1
	045 And W8, W0, 0xFFFF
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Subtract W1, W22, 1
	048 Move X0, X19
	049 Move X2, X31
	050 Call String.get_Chars, X0, X1
	051 And W8, W0, 0xFFFF
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Subtract W8, W22, W20
	054 Subtract W2, W8, 3
	055 Move X0, X19
	056 Move W1, W21
	057 Move X3, X31
	058 Call String.Substring, X0, X1, X2
	059 Move [X31+8], X19
	060 Move W8, [X19+16]
	061 NotImplemented "Instruction MOVI not yet implemented."
	062 Add X0, X31, 8
	063 Add X20, X31, 8
	064 Move [X31+20], W31
	065 Move [X31+24], W31
	066 Move [X31+32], V0
	067 Move [X31+40], V0
	068 Move [X31+64], V0
	069 Move [X31+72], V0
	070 Move [X31+16], W8
	071 Move [X31+96], V0
	072 Call PathParser.MoveToNextComponent, X0
	073 Move TEMP, X0
	074 And TEMP, TEMP, 1
	075 Compare TEMP, 1
	076 JumpIfNotEqual {108}
	077 Add X19, X20, 24
	078 Move X0, X19
	079 Call ParsedPathComponent.get_isWildcard, X0
	080 Move TEMP, X0
	081 And TEMP, TEMP, 1
	082 Compare TEMP, 1
	083 JumpIfEqual {146}
	084 Move W8, [X31+44]
	085 Compare W8, 0
	086 JumpIfEqual {108}
	087 Move X0, X19
	088 Move X1, X31
	089 Call Substring.ToString, X0
	090 Move X20, X0
	091 Add X0, X31, 8
	092 Call PathParser.MoveToNextComponent, X0
	093 Move W8, W0
	094 Move X0, X31
	095 Move TEMP, X8
	096 And TEMP, TEMP, 1
	097 Compare TEMP, 1
	098 JumpIfNotEqual {109}
	099 Move X0, X19
	100 Call ParsedPathComponent.get_isWildcard, X0
	101 Move TEMP, X0
	102 And TEMP, TEMP, 1
	103 Compare TEMP, 1
	104 JumpIfNotEqual {116}
	105 Move X8, 0x9AD000
	106 Move X8, [X8+3824]
	107 Move X0, [X8]
	108 Move X0, X31
	109 Move X20, [X31+144]
	110 Move X19, [X31+152]
	111 Move X22, [X31+128]
	112 Move X21, [X31+136]
	113 Move X30, [X31+112]
	114 Add X31, X31, 160
	115 Return X0
	116 Move X8, 0x9CE000
	117 Move X9, 0x9CE000
	118 Move X8, [X8+3600]
	119 Move X9, [X9+3608]
	120 Move X0, X20
	121 Move X3, X31
	122 Move X1, [X8]
	123 Move X2, [X9]
	124 Call StringHelpers.Unescape, X0, X1, X2
	125 Move X1, X0
	126 Add X0, X31, 8
	127 Call InputControlPath.FindControlLayoutRecursive, X0, X1
	128 Move X0, 0x980000
	129 Move X0, [X0+1320]
	130 Call 0x1C17D08
	131 Call 0x1C17F10
	132 Move X19, X0
	133 Move X0, 0x986000
	134 Move X0, [X0+288]
	135 Call 0x1C17D08
	136 Move X1, X0
	137 Move X0, X19
	138 Move X2, X31
	139 Call ArgumentNullException..ctor, X0, X1
	140 Move X0, 0x9CE000
	141 Move X0, [X0+3624]
	142 Call 0x1C17D08
	143 Move X1, X0
	144 Move X0, X19
	145 Call 0x1C17DEC
	146 Move X0, 0x984000
	147 Move X0, [X0+1880]
	148 Call 0x1C17D08
	149 Call 0x1C17F10
	150 Move X1, X31
	151 Move X19, X0
	152 Call NotImplementedException..ctor, X0

Method: System.String FindControlLayoutRecursive(ref UnityEngine.InputSystem.InputControlPath/PathParser parser, System.String layoutName)

Disassembly:
	0x03779190 MOV X0, X19
	0x03779194 BL 0x3772134
	0x03779198 UBFM X8, X1, 0x20, 0x3F
	0x0377919C CMP W8, 0x1
	0x037791A0 STP X0, X1, [X31]
	0x037791A4 B.LT 0x3779200
	0x037791A8 MOV W23, W31
	0x037791AC LDR X2, [X26]
	0x037791B0 MOV X0, X21
	0x037791B4 MOV W1, W22
	0x037791B8 BL 0x2DED518
	0x037791BC LDR X2, [X27]
	0x037791C0 MOV X24, X0
	0x037791C4 MOV X25, X1
	0x037791C8 ADD X0, X31, 0x0
	0x037791CC MOV W1, W23
	0x037791D0 BL 0x24FCF28
	0x037791D4 MOV X2, X31
	0x037791D8 BL 0x37577E0
	0x037791DC MOV X2, X0
	0x037791E0 MOV X0, X24
	0x037791E4 MOV X1, X25
	0x037791E8 BL 0x37798AC
	0x037791EC TBNZ X0, 0x0, 0x3779178
	0x037791F0 LDR W8, [X31 + 0xC]
	0x037791F4 ADD W23, W23, 0x1
	0x037791F8 CMP W23, W8
	0x037791FC B.LT 0x37791AC
	0x03779200 MOV W0, W31
	0x03779204 B 0x3779284
	0x03779208 ADD X0, X20, 0x30
	0x0377920C MOV X1, X31
	0x03779210 BL 0x3768760
	0x03779214 TBNZ X0, 0x0, 0x377924C
	0x03779218 MOV X0, X20
	0x0377921C BL 0x3777F10
	0x03779220 TBNZ X0, 0x0, 0x377924C
	0x03779224 CBZ X19, 0x37792A0
	0x03779228 LDP X0, X1, [X19 + 0x20]
	0x0377922C LDP X22, X21, [X20 + 0x30]
	0x03779230 MOV X2, X31
	0x03779234 BL 0x37577E0
	0x03779238 MOV X2, X0
	0x0377923C MOV X0, X22
	0x03779240 MOV X1, X21
	0x03779244 BL 0x37798AC
	0x03779248 TBZ X0, 0x0, 0x3779200
	0x0377924C ADD X0, X20, 0x40
	0x03779250 MOV X1, X31
	0x03779254 BL 0x3768760
	0x03779258 TBNZ X0, 0x0, 0x3779280
	0x0377925C CBZ X19, 0x37792A0
	0x03779260 LDP X20, X21, [X20 + 0x40]
	0x03779264 MOV X0, X19
	0x03779268 BL 0x3771E88
	0x0377926C MOV X2, X0
	0x03779270 MOV X0, X20
	0x03779274 MOV X1, X21
	0x03779278 BL 0x37798AC
	0x0377927C TBZ X0, 0x0, 0x3779200
	0x03779280 MOVZ W0, 0x1
	0x03779284 LDP X20, X19, [X31 + 0x70]
	0x03779288 LDP X22, X21, [X31 + 0x60]
	0x0377928C LDP X24, X23, [X31 + 0x50]
	0x03779290 LDP X26, X25, [X31 + 0x40]
	0x03779294 LDP X30, X27, [X31 + 0x30]
	0x03779298 ADD X31, X31, 0x80
	0x0377929C RET
	0x037792A0 BL 0x1C16F20
	0x037792A4 SUB X31, X31, 0x70
	0x037792A8 STP X29, X30, [X31 + 0x10]
	0x037792AC STP X28, X27, [X31 + 0x20]
	0x037792B0 STP X26, X25, [X31 + 0x30]
	0x037792B4 STP X24, X23, [X31 + 0x40]
	0x037792B8 STP X22, X21, [X31 + 0x50]
	0x037792BC STP X20, X19, [X31 + 0x60]
	0x037792C0 ADRP X24, 0xC67000
	0x037792C4 LDRB W8, [X24 + 0xF46]
	0x037792C8 MOV W20, W4
	0x037792CC MOV W21, W3
	0x037792D0 MOV X19, X2
	0x037792D4 MOV X22, X1
	0x037792D8 MOV X23, X0
	0x037792DC TBNZ X8, 0x0, 0x3779300
	0x037792E0 ADRP X0, 0x97C000
	0x037792E4 LDR X0, [X0 + 0x170]
	0x037792E8 BL 0x1C16CF4
	0x037792EC ADRP X0, 0x97C000
	0x037792F0 LDR X0, [X0 + 0xC48]
	0x037792F4 BL 0x1C16CF4
	0x037792F8 MOVZ W8, 0x1

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+32], X22
	004 Move [X31+40], X21
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move X22, 0xC68000
	008 Move X21, 0x9A3000
	009 Move W8, [X22+3901]
	010 Move X21, [X21+3520]
	011 Move X20, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x9A3000
	018 Move X0, [X0+3520]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X22+3901], W8
	022 Move X0, [X21]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X0, X31
	028 Call InputControlLayout.CacheRef
	029 Move X8, [X21]
	030 Move [X31+24], W0
	031 Move W9, [X8+224]
	032 Compare W9, 0
	033 JumpIfNotEqual {36}
	034 Move X0, X8
	035 Call 0x1C17DFC
	036 Move X0, X31
	037 Call InputControlLayout.get_cache
	038 Move X21, X0
	039 Move [X31], X31
	040 Move [X31+8], X31
	041 Add X0, X31, 0
	042 Move X1, X20
	043 Move X2, X31
	044 Call InternedString..ctor, X0, X1
	045 Move X0, [X31]
	046 Move X1, [X31+8]
	047 Move X2, X31
	048 Call InternedString.op_Implicit, X0
	049 Move X1, X0
	050 Move X0, X21
	051 Move W2, W31
	052 Move X3, X31
	053 Call Cache.FindOrLoadLayout, X0, X1, X2
	054 Move X1, X0
	055 Compare X1, 0
	056 JumpIfEqual {60}
	057 Move X0, X19
	058 Call InputControlPath.FindControlLayoutRecursive, X0, X1
	059 Move X19, X0
	060 Move X19, X31
	061 Add X0, X31, 24
	062 Move X1, X31
	063 Call CacheRefInstance.Dispose, X0
	064 Move X0, X19
	065 Move X20, [X31+48]
	066 Move X19, [X31+56]
	067 Move X22, [X31+32]
	068 Move X21, [X31+40]
	069 Move X30, [X31+16]
	070 Add X31, X31, 64
	071 Return X0
	072 Move X19, X0
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move X0, X19
	075 Call 0x3EB2AD0
	076 Move X20, [X0]
	077 Call 0x3EB2AE0
	078 Add X0, X31, 24
	079 Move X1, X31
	080 Call CacheRefInstance.Dispose, X0
	081 Move X19, X31
	082 Compare X20, 0
	083 JumpIfEqual {64}
	084 Move X0, X20
	085 Call 0x1C17F18
	086 Move X20, X31
	087 Move X19, X0
	088 Add X0, X31, 24
	089 Move X1, X31
	090 Call CacheRefInstance.Dispose, X0
	091 Compare X20, 0
	092 JumpIfNotEqual {95}
	093 Move X0, X19
	094 Call 0x1D2D690
	095 Move X0, X20
	096 Call 0x1C17F18
	097 Call 0x1991590

Method: System.String FindControlLayoutRecursive(ref UnityEngine.InputSystem.InputControlPath/PathParser parser, UnityEngine.InputSystem.Layouts.InputControlLayout layout)

Disassembly:
	0x037792FC STRB W8, [X24 + 0xF46]
	0x03779300 CBZ X23, 0x3779530
	0x03779304 CBZ X22, 0x3779530
	0x03779308 LDR W29, [X22 + 0x10]
	0x0377930C LDR W27, [X19]
	0x03779310 LDR W28, [X23 + 0x10]
	0x03779314 CMP W27, W29
	0x03779318 B.GE 0x37794EC
	0x0377931C SUB W8, W29, 0x1
	0x03779320 MOV W1, W27
	0x03779324 STR W8, [X31 + 0x8]
	0x03779328 MOV X0, X22
	0x0377932C MOV X2, X31
	0x03779330 BL 0x3222A1C
	0x03779334 AND W8, W0, 0xFFFF
	0x03779338 MOV W24, W0
	0x0377933C CMP W8, 0x3D
	0x03779340 B.GT 0x3779368
	0x03779344 CMP W8, 0x29
	0x03779348 B.EQ 0x37793A8
	0x0377934C CMP W8, 0x2A
	0x03779350 B.EQ 0x37793B8
	0x03779354 CMP W8, 0x2F
	0x03779358 B.NE 0x3779428
	0x0377935C CBZ W21, 0x37794EC
	0x03779360 MOVZ W24, 0x2F
	0x03779364 B 0x3779428
	0x03779368 CMP W8, 0x3E
	0x0377936C B.EQ 0x3779404
	0x03779370 CMP W8, 0x7D
	0x03779374 B.EQ 0x3779414
	0x03779378 CMP W8, 0x5C
	0x0377937C B.NE 0x3779428
	0x03779380 LDR W8, [X19]
	0x03779384 ADD W1, W8, 0x1
	0x03779388 CMP W1, W29
	0x0377938C B.GE 0x3779424
	0x03779390 MOV X0, X22
	0x03779394 MOV X2, X31
	0x03779398 STR W1, [X19]
	0x0377939C BL 0x3222A1C
	0x037793A0 MOV W24, W0
	0x037793A4 B 0x3779428
	0x037793A8 CMP W21, 0x1
	0x037793AC B.EQ 0x37794E0
	0x037793B0 MOVZ W24, 0x29
	0x037793B4 B 0x3779428
	0x037793B8 LDR W8, [X19]
	0x037793BC CMP W20, W28
	0x037793C0 ADD W9, W8, 0x1
	0x037793C4 STR W9, [X31 + 0xC]
	0x037793C8 B.GE 0x37793F4
	0x037793CC LDR W9, [X31 + 0x8]
	0x037793D0 CMP W8, W9
	0x037793D4 B.GE 0x37793F4
	0x037793D8 ADD X2, X31, 0xC
	0x037793DC MOV X0, X23
	0x037793E0 MOV X1, X22
	0x037793E4 MOV W3, W21
	0x037793E8 MOV W4, W20
	0x037793EC BL 0x37792A4
	0x037793F0 TBNZ X0, 0x0, 0x3779524
	0x037793F4 CMP W20, W28
	0x037793F8 B.GE 0x37794F4
	0x037793FC LDR W1, [X19]
	0x03779400 B 0x37794D0
	0x03779404 CMP W21, 0x3
	0x03779408 B.EQ 0x37794E0
	0x0377940C MOVZ W24, 0x3E
	0x03779410 B 0x3779428
	0x03779414 CMP W21, 0x2
	0x03779418 B.EQ 0x37794E0
	0x0377941C MOVZ W24, 0x7D
	0x03779420 B 0x3779428
	0x03779424 MOVZ W24, 0x5C
	0x03779428 CMP W28, W20
	0x0377942C B.EQ 0x37794FC
	0x03779430 MOV X0, X23
	0x03779434 MOV W1, W20
	0x03779438 MOV X2, X31
	0x0377943C BL 0x3222A1C
	0x03779440 AND W8, W0, 0xFFFF
	0x03779444 CMP W8, W24, UXTH
	0x03779448 B.EQ 0x37794C4
	0x0377944C ADRP X8, 0x97C000
	0x03779450 LDR X8, [X8 + 0xC48]
	0x03779454 MOV W25, W0
	0x03779458 LDR X0, [X8]
	0x0377945C LDR W8, [X0 + 0xE0]
	0x03779460 CBNZ W8, 0x3779468
	0x03779464 BL 0x1C16DFC
	0x03779468 MOV X0, X31
	0x0377946C BL 0x3338524
	0x03779470 ADRP X8, 0x97C000
	0x03779474 LDR X8, [X8 + 0x170]
	0x03779478 MOV X26, X0
	0x0377947C LDR X8, [X8]
	0x03779480 LDR W9, [X8 + 0xE0]
	0x03779484 CBNZ W9, 0x3779490
	0x03779488 MOV X0, X8
	0x0377948C BL 0x1C16DFC
	0x03779490 MOV W0, W25

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+128], X30
	003 Move [X31+136], X25
	004 Move [X31+144], X24
	005 Move [X31+152], X23
	006 Move [X31+160], X22
	007 Move [X31+168], X21
	008 Move [X31+176], X20
	009 Move [X31+184], X19
	010 Move X21, 0xC68000
	011 Move W8, [X21+3902]
	012 Move X19, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x9CE000
	019 Move X0, [X0+3632]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+3902], W8
	023 NotImplemented "Instruction MOVI not yet implemented."
	024 Move [X31+112], X31
	025 Move [X31+120], X31
	026 Move [X31+96], X31
	027 Move [X31+64], V0
	028 Move [X31+72], V0
	029 Move [X31+32], V0
	030 Move [X31+40], V0
	031 Move [X31], V0
	032 Move [X31+8], V0
	033 Compare X19, 0
	034 JumpIfEqual {131}
	035 Move X0, X19
	036 Move X1, X31
	037 Call InputControlLayout.get_controls, X0
	038 Move X23, X1
	039 ShiftRight X23, 32
	040 And X23, X23, 0x7FFFFFFF
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move X24, X31
	043 Move X21, X31
	044 Move W25, 56
	045 Move X8, [X19+144]
	046 Compare X8, 0
	047 JumpIfEqual {131}
	048 Move W9, [X8+24]
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Add X8, X8, X25
	051 Subtract X0, X8, 24
	052 Move X1, X20
	053 Call InputControlPath.ControlLayoutMatchesPathComponent, X0, X1
	054 Move TEMP, X0
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfNotEqual {114}
	058 Move X8, [X19+144]
	059 Compare X8, 0
	060 JumpIfEqual {131}
	061 Move W9, [X8+24]
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Add X8, X8, X25
	064 Move X0, [X8-8]
	065 Move X1, [X8]
	066 Move [X31+112], X0
	067 Move [X31+120], X1
	068 Move W8, [X20+16]
	069 Move W9, [X20+8]
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Compare X21, 0
	072 JumpIfEqual {80}
	073 Move X2, X21
	074 Move X3, X31
	075 Call InternedString.op_Inequality, X0, X1
	076 Move TEMP, X0
	077 And TEMP, TEMP, 1
	078 Compare TEMP, 1
	079 JumpIfEqual {119}
	080 Add X0, X31, 112
	081 Move X1, X31
	082 Call InternedString.ToString, X0
	083 Move X22, X0
	084 Add X0, X31, 0
	085 Move W2, 104
	086 Move X1, X20
	087 Call 0x3EB2AC0
	088 Add X0, X31, 0
	089 Call PathParser.MoveToNextComponent, X0
	090 Move TEMP, X0
	091 And TEMP, TEMP, 1
	092 Compare TEMP, 1
	093 JumpIfNotEqual {114}
	094 Move X0, [X31+112]
	095 Move X1, [X31+120]
	096 Move X2, X31
	097 Call InternedString.op_Implicit, X0
	098 Move X1, X0
	099 Add X0, X31, 0
	100 Call InputControlPath.FindControlLayoutRecursive, X0, X1
	101 Compare X0, 0
	102 JumpIfEqual {114}
	103 Move X22, X0
	104 Compare X21, 0
	105 JumpIfEqual {115}
	106 Move X0, X22
	107 Move X1, X21
	108 Move X2, X31
	109 Call String.op_Inequality, X0, X1
	110 Move TEMP, X0
	111 And TEMP, TEMP, 1
	112 Compare TEMP, 1
	113 JumpIfNotEqual {115}
	114 Move X22, X21
	115 Add X24, X24, 1
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Add X25, X25, 208
	118 Move X21, X22
	119 Move X22, X31
	120 Move X0, X22
	121 Move X20, [X31+176]
	122 Move X19, [X31+184]
	123 Move X22, [X31+160]
	124 Move X21, [X31+168]
	125 Move X24, [X31+144]
	126 Move X23, [X31+152]
	127 Move X30, [X31+128]
	128 Move X25, [X31+136]
	129 Add X31, X31, 192
	130 Return X0
	131 Call 0x1C17F20
	132 Call 0x1C17F28

Method: System.Boolean ControlLayoutMatchesPathComponent(ref UnityEngine.InputSystem.Layouts.InputControlLayout/ControlItem controlItem, ref UnityEngine.InputSystem.InputControlPath/PathParser parser)

Disassembly:
	0x03779494 MOV X1, X26
	0x03779498 MOV X2, X31
	0x0377949C BL 0x331ADB0
	0x037794A0 AND W25, W0, 0xFFFF
	0x037794A4 MOV X0, X31
	0x037794A8 BL 0x3338524
	0x037794AC MOV X1, X0
	0x037794B0 MOV W0, W24
	0x037794B4 MOV X2, X31
	0x037794B8 BL 0x331ADB0
	0x037794BC CMP W25, W0, UXTH
	0x037794C0 B.NE 0x37794FC
	0x037794C4 LDR W8, [X19]
	0x037794C8 ADD W1, W8, 0x1
	0x037794CC STR W1, [X19]
	0x037794D0 CMP W1, W29
	0x037794D4 ADD W20, W20, 0x1
	0x037794D8 B.LT 0x3779328
	0x037794DC B 0x37794EC
	0x037794E0 LDR W8, [X19]
	0x037794E4 ADD W8, W8, 0x1
	0x037794E8 STR W8, [X19]
	0x037794EC CMP W20, W28
	0x037794F0 B.NE 0x37794FC
	0x037794F4 MOVZ W0, 0x1
	0x037794F8 B 0x3779504
	0x037794FC MOV W0, W31
	0x03779500 STR W27, [X19]
	0x03779504 LDP X20, X19, [X31 + 0x60]
	0x03779508 LDP X22, X21, [X31 + 0x50]
	0x0377950C LDP X24, X23, [X31 + 0x40]
	0x03779510 LDP X26, X25, [X31 + 0x30]
	0x03779514 LDP X28, X27, [X31 + 0x20]
	0x03779518 LDP X29, X30, [X31 + 0x10]
	0x0377951C ADD X31, X31, 0x70
	0x03779520 RET
	0x03779524 LDR W8, [X31 + 0xC]
	0x03779528 STR W8, [X19]
	0x0377952C B 0x37794F4
	0x03779530 BL 0x1C16F20
	0x03779534 STP X30, X21, [X31 - 0x20]!
	0x03779538 STP X20, X19, [X31 + 0x10]
	0x0377953C CBZ X0, 0x37795EC
	0x03779540 MOV W19, W1
	0x03779544 MOVZ W1, 0x2F
	0x03779548 MOV W2, W19
	0x0377954C MOV X3, X31
	0x03779550 MOV X20, X0
	0x03779554 BL 0x322BDA8
	0x03779558 ADDS W31, W0, 0x1
	0x0377955C B.EQ 0x37795A0
	0x03779560 SUB W21, W0, W19
	0x03779564 MOVZ W1, 0x2A
	0x03779568 MOV X0, X20
	0x0377956C MOV W2, W19
	0x03779570 MOV W3, W21
	0x03779574 MOV X4, X31
	0x03779578 BL 0x322BDB4
	0x0377957C ADDS W31, W0, 0x1
	0x03779580 B.NE 0x37795BC
	0x03779584 MOVZ W1, 0x3C
	0x03779588 MOV X0, X20
	0x0377958C MOV W2, W19
	0x03779590 MOV W3, W21
	0x03779594 MOV X4, X31
	0x03779598 BL 0x322BDB4
	0x0377959C B 0x37795D8
	0x037795A0 MOVZ W1, 0x2A
	0x037795A4 MOV X0, X20
	0x037795A8 MOV W2, W19
	0x037795AC MOV X3, X31
	0x037795B0 BL 0x322BDA8
	0x037795B4 ADDS W31, W0, 0x1
	0x037795B8 B.EQ 0x37795C4
	0x037795BC MOVZ W0, 0x1
	0x037795C0 B 0x37795E0
	0x037795C4 MOVZ W1, 0x3C
	0x037795C8 MOV X0, X20
	0x037795CC MOV W2, W19
	0x037795D0 MOV X3, X31
	0x037795D4 BL 0x322BDA8
	0x037795D8 ADDS W31, W0, 0x1
	0x037795DC CSET W0, NE
	0x037795E0 LDP X20, X19, [X31 + 0x10]
	0x037795E4 LDP X30, X21, [X31], #0x20
	0x037795E8 RET
	0x037795EC BL 0x1C16F20
	0x037795F0 STP X30, X21, [X31 - 0x20]!
	0x037795F4 STP X20, X19, [X31 + 0x10]
	0x037795F8 ADRP X20, 0xC67000
	0x037795FC ADRP X21, 0x9CD000
	0x03779600 LDRB W8, [X20 + 0xF47]
	0x03779604 LDR X21, [X21 + 0xE58]
	0x03779608 MOV X19, X0
	0x0377960C TBNZ X8, 0x0, 0x3779624
	0x03779610 ADRP X0, 0x9CD000
	0x03779614 LDR X0, [X0 + 0xE58]
	0x03779618 BL 0x1C16CF4
	0x0377961C MOVZ W8, 0x1
	0x03779620 STRB W8, [X20 + 0xF47]
	0x03779624 LDR X0, [X21]
	0x03779628 BL 0x1C16F10
	0x0377962C MOV X1, X31
	0x03779630 MOV X20, X0
	0x03779634 BL 0x33BDD8C

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X30
	003 Move [X31+32], X28
	004 Move [X31+40], X27
	005 Move [X31+48], X26
	006 Move [X31+56], X25
	007 Move [X31+64], X24
	008 Move [X31+72], X23
	009 Move [X31+80], X22
	010 Move [X31+88], X21
	011 Move [X31+96], X20
	012 Move [X31+104], X19
	013 Move X21, 0xC68000
	014 Move W8, [X21+3903]
	015 Move X19, X1
	016 Move X20, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {32}
	021 Move X0, 0x9CE000
	022 Move X0, [X0+3496]
	023 Call 0x1C17CF4
	024 Move X0, 0x9A3000
	025 Move X0, [X0+3528]
	026 Call 0x1C17CF4
	027 Move X0, 0x9A3000
	028 Move X0, [X0+3536]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X21+3903], W8
	032 Move [X31], X31
	033 Move [X31+8], X31
	034 Move X1, [X19+32]
	035 Move X8, X1
	036 ShiftRight X8, 32
	037 And X8, X8, 0x7FFFFFFF
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move X0, [X19+24]
	040 Move X2, [X20+16]
	041 Move X3, [X20+24]
	042 Call InputControlPath.StringMatches, X0, X1
	043 Move TEMP, X0
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfNotEqual {122}
	047 Move X21, X19
	048 Add X21, X21, 40
	049 Move W8, [X21]
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move X26, 0x9CE000
	052 Move X27, 0x9A3000
	053 Move X26, [X26+3496]
	054 Move X27, [X27+3536]
	055 Move W22, W31
	056 Move X2, [X26]
	057 Move X0, X21
	058 Move W1, W22
	059 Call InlinedArray`1<Substring>.get_Item, X0, X1
	060 Move X8, X1
	061 ShiftRight X8, 32
	062 And X8, X8, 0x7FFFFFFF
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move X8, [X20+80]
	065 Move X28, X8
	066 ShiftRight X28, 32
	067 And X28, X28, 0x7FFFFFFF
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move X9, [X20+72]
	070 Move X2, [X27]
	071 Move X23, X1
	072 Move X24, X0
	073 Add X0, X31, 0
	074 Move W1, W31
	075 Move [X31], X9
	076 Move [X31+8], X8
	077 Call ReadOnlyArray`1<InternedString>.get_Item, X0, X1
	078 Move X2, X0
	079 Move X3, X1
	080 Move X0, X24
	081 Move X1, X23
	082 Call InputControlPath.StringMatches, X0, X1
	083 Move TEMP, X0
	084 And TEMP, TEMP, 1
	085 Compare TEMP, 1
	086 JumpIfEqual {105}
	087 Move W25, 1
	088 NotImplemented "Instruction CMP not yet implemented."
	089 NotImplemented "Instruction LDUR not yet implemented."
	090 Move X2, [X27]
	091 Add X0, X31, 0
	092 Move W1, W25
	093 Move [X31], V0
	094 Call ReadOnlyArray`1<InternedString>.get_Item, X0, X1
	095 Move X2, X0
	096 Move X3, X1
	097 Move X0, X24
	098 Move X1, X23
	099 Call InputControlPath.StringMatches, X0, X1
	100 Add W25, W25, 1
	101 Move TEMP, X0
	102 And TEMP, TEMP, 1
	103 Compare TEMP, 1
	104 JumpIfNotEqual {88}
	105 Move W8, [X21]
	106 Add W22, W22, 1
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Move X1, [X19+80]
	109 Move X8, X1
	110 ShiftRight X8, 32
	111 And X8, X8, 0x7FFFFFFF
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Move X0, [X19+72]
	114 Move X2, [X20]
	115 Move X3, [X20+8]
	116 Call InputControlPath.StringMatches, X0, X1
	117 Move TEMP, X0
	118 And TEMP, TEMP, 1
	119 Compare TEMP, 1
	120 JumpIfNotEqual {122}
	121 Move W0, 1
	122 Move W0, W31
	123 Move X20, [X31+96]
	124 Move X19, [X31+104]
	125 Move X22, [X31+80]
	126 Move X21, [X31+88]
	127 Move X24, [X31+64]
	128 Move X23, [X31+72]
	129 Move X26, [X31+48]
	130 Move X25, [X31+56]
	131 Move X28, [X31+32]
	132 Move X27, [X31+40]
	133 Move X30, [X31+16]
	134 Add X31, X31, 112
	135 Return X0

Method: System.Boolean StringMatches(UnityEngine.InputSystem.Utilities.Substring str, UnityEngine.InputSystem.Utilities.InternedString matchTo)

Disassembly:
	0x0377964C STR X19, [X20 + 0x78]
	0x03779650 MOV X0, X20
	0x03779654 LDP X20, X19, [X31 + 0x10]
	0x03779658 LDP X30, X21, [X31], #0x20
	0x0377965C RET
	0x03779660 STR X30, [X31 - 0x20]!
	0x03779664 STP X20, X19, [X31 + 0x10]
	0x03779668 MOV W19, W1
	0x0377966C MOV X1, X31
	0x03779670 MOV X20, X0
	0x03779674 BL 0x33BDD8C
	0x03779678 MOV X0, X31
	0x0377967C STR W19, [X20 + 0x10]
	0x03779680 BL 0x33C151C
	0x03779684 STR W0, [X20 + 0x68]
	0x03779688 LDP X20, X19, [X31 + 0x10]
	0x0377968C LDR X30, [X31], #0x20
	0x03779690 RET
	0x03779694 MOV X1, X31
	0x03779698 B 0x3768AFC
	0x0377969C SUB X31, X31, 0x50
	0x037796A0 STP X30, X23, [X31 + 0x20]
	0x037796A4 STP X22, X21, [X31 + 0x30]
	0x037796A8 STP X20, X19, [X31 + 0x40]
	0x037796AC ADRP X21, 0xC67000
	0x037796B0 ADRP X20, 0x9CD000
	0x037796B4 ADRP X22, 0x9CD000
	0x037796B8 LDRB W8, [X21 + 0xF48]
	0x037796BC LDR X20, [X20 + 0xE60]
	0x037796C0 LDR X22, [X22 + 0xE68]
	0x037796C4 MOV X19, X0
	0x037796C8 TBNZ X8, 0x0, 0x3779710
	0x037796CC ADRP X0, 0x9CD000
	0x037796D0 LDR X0, [X0 + 0xE70]
	0x037796D4 BL 0x1C16CF4
	0x037796D8 ADRP X0, 0x9CD000
	0x037796DC LDR X0, [X0 + 0xDE8]
	0x037796E0 BL 0x1C16CF4
	0x037796E4 ADRP X0, 0x9CD000
	0x037796E8 LDR X0, [X0 + 0xE60]
	0x037796EC BL 0x1C16CF4
	0x037796F0 ADRP X0, 0x9CD000
	0x037796F4 LDR X0, [X0 + 0xE78]
	0x037796F8 BL 0x1C16CF4
	0x037796FC ADRP X0, 0x9CD000
	0x03779700 LDR X0, [X0 + 0xE68]
	0x03779704 BL 0x1C16CF4
	0x03779708 MOVZ W8, 0x1
	0x0377970C STRB W8, [X21 + 0xF48]
	0x03779710 LDP V1, V0, [X19 + 0x10]
	0x03779714 LDR X0, [X20]
	0x03779718 ADD X1, X31, 0x0
	0x0377971C STP V1, V0, [X31]
	0x03779720 BL 0x1C16E04
	0x03779724 LDR X8, [X22]
	0x03779728 MOV X19, X0
	0x0377972C LDR W9, [X8 + 0xE0]
	0x03779730 CBNZ W9, 0x3779740
	0x03779734 MOV X0, X8
	0x03779738 BL 0x1C16DFC
	0x0377973C LDR X8, [X22]
	0x03779740 LDR X9, [X8 + 0xB8]
	0x03779744 ADRP X23, 0x9CD000
	0x03779748 LDR X20, [X9 + 0x8]
	0x0377974C LDR X23, [X23 + 0xE70]
	0x03779750 CBNZ X20, 0x37797A8
	0x03779754 LDR W9, [X8 + 0xE0]
	0x03779758 CBNZ W9, 0x3779768
	0x0377975C MOV X0, X8
	0x03779760 BL 0x1C16DFC
	0x03779764 LDR X8, [X22]
	0x03779768 ADRP X9, 0x9CD000
	0x0377976C LDR X8, [X8 + 0xB8]
	0x03779770 LDR X9, [X9 + 0xDE8]
	0x03779774 LDR X21, [X8]
	0x03779778 LDR X0, [X9]
	0x0377977C BL 0x1C16F10
	0x03779780 ADRP X8, 0x9CD000
	0x03779784 LDR X8, [X8 + 0xE78]
	0x03779788 MOV X1, X21
	0x0377978C MOV X3, X31
	0x03779790 MOV X20, X0
	0x03779794 LDR X2, [X8]
	0x03779798 BL 0x2D336C8
	0x0377979C LDR X8, [X22]
	0x037797A0 LDR X8, [X8 + 0xB8]
	0x037797A4 STR X20, [X8 + 0x8]
	0x037797A8 LDR X2, [X23]
	0x037797AC MOV X0, X19
	0x037797B0 MOV X1, X20
	0x037797B4 BL 0x21CFDF4
	0x037797B8 LDP X20, X19, [X31 + 0x40]
	0x037797BC LDP X22, X21, [X31 + 0x30]
	0x037797C0 LDP X30, X23, [X31 + 0x20]
	0x037797C4 ADD X31, X31, 0x50
	0x037797C8 RET
	0x037797CC ADD X0, X0, 0x30
	0x037797D0 MOV X1, X31
	0x037797D4 B 0x3768AFC
	0x037797D8 ADD X0, X0, 0x40
	0x037797DC MOV X1, X31
	0x037797E0 B 0x3768AFC
	0x037797E4 STP X30, X21, [X31 - 0x20]!
	0x037797E8 STP X20, X19, [X31 + 0x10]
	0x037797EC ADRP X20, 0xC67000
	0x037797F0 ADRP X21, 0x9CD000
	0x037797F4 LDRB W8, [X20 + 0xF4A]
	0x037797F8 LDR X21, [X21 + 0xE80]
	0x037797FC MOV X19, X0
	0x03779800 TBNZ X8, 0x0, 0x3779818
	0x03779804 ADRP X0, 0x9CD000
	0x03779808 LDR X0, [X0 + 0xE80]
	0x0377980C BL 0x1C16CF4
	0x03779810 MOVZ W8, 0x1
	0x03779814 STRB W8, [X20 + 0xF4A]
	0x03779818 LDR X0, [X21]
	0x0377981C LDP X20, X19, [X19 + 0x30]
	0x03779820 MOV X1, X31
	0x03779824 BL 0x3768CAC
	0x03779828 MOV X2, X0
	0x0377982C MOV X3, X1
	0x03779830 MOV X0, X20
	0x03779834 MOV X1, X19
	0x03779838 LDP X20, X19, [X31 + 0x10]
	0x0377983C MOV X4, X31
	0x03779840 LDP X30, X21, [X31], #0x20
	0x03779844 B 0x3768BB4
	0x03779848 SUB X31, X31, 0x30
	0x0377984C STP X1, X30, [X31 + 0x8]
	0x03779850 STP X20, X19, [X31 + 0x20]
	0x03779854 ADRP X20, 0xC67000
	0x03779858 STR X0, [X31]
	0x0377985C ADRP X19, 0x9CD000
	0x03779860 LDRB W8, [X20 + 0xF4C]
	0x03779864 LDR X19, [X19 + 0xE88]
	0x03779868 TBNZ X8, 0x0, 0x3779880
	0x0377986C ADRP X0, 0x9CD000
	0x03779870 LDR X0, [X0 + 0xE88]
	0x03779874 BL 0x1C16CF4
	0x03779878 MOVZ W8, 0x1
	0x0377987C STRB W8, [X20 + 0xF4C]
	0x03779880 ADD X0, X31, 0x0
	0x03779884 MOV X1, X31
	0x03779888 BL 0x3768AFC
	0x0377988C LDR X1, [X19]
	0x03779890 MOV X3, X31
	0x03779894 MOV X2, X1
	0x03779898 BL 0x3766FC8
	0x0377989C LDP X20, X19, [X31 + 0x20]
	0x037798A0 LDR X30, [X31 + 0x10]
	0x037798A4 ADD X31, X31, 0x30
	0x037798A8 RET
	0x037798AC SUB X31, X31, 0x60
	0x037798B0 STP X1, X30, [X31 + 0x8]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+24], X1
	003 Move [X31+32], X30
	004 Move [X31+48], X28
	005 Move [X31+56], X27
	006 Move [X31+64], X26
	007 Move [X31+72], X25
	008 Move [X31+80], X24
	009 Move [X31+88], X23
	010 Move [X31+96], X22
	011 Move [X31+104], X21
	012 Move [X31+112], X20
	013 Move [X31+120], X19
	014 Move X19, 0xC68000
	015 Move W8, [X19+3904]
	016 Move X25, X1
	017 ShiftRight X25, 32
	018 And X25, X25, 0x7FFFFFFF
	019 Move [X31+8], X3
	020 Move [X31+16], X0
	021 Move [X31], X2
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {34}
	026 Move X0, 0x97D000
	027 Move X0, [X0+368]
	028 Call 0x1C17CF4
	029 Move X0, 0x97D000
	030 Move X0, [X0+3144]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X19+3904], W8
	034 Add X0, X31, 0
	035 Move X1, X31
	036 Call InternedString.get_length, X0
	037 Move W19, W0
	038 Subtract W26, W25, 1
	039 Move W21, W31
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move W20, W21
	042 Move X27, 0x97D000
	043 Move X28, 0x97D000
	044 Move X22, [X31+8]
	045 Move X27, [X27+3144]
	046 Move X28, [X28+368]
	047 Move W20, W31
	048 Move W21, W31
	049 Add X0, X31, 16
	050 Move W1, W21
	051 Move X2, X31
	052 Call Substring.get_Item, X0, X1
	053 And W8, W0, 0xFFFF
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Add W24, W21, 1
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Add X0, X31, 16
	058 Move W1, W24
	059 Move X2, X31
	060 Call Substring.get_Item, X0, X1
	061 Move W23, W0
	062 Move W21, W24
	063 Move W23, W0
	064 And W8, W23, 0xFFFF
	065 NotImplemented "Instruction CMP not yet implemented."
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Add W21, W21, 1
	068 Add X0, X31, 16
	069 Move W1, W21
	070 Move X2, X31
	071 Call Substring.get_Item, X0, X1
	072 Move X8, [X27]
	073 Move W23, W0
	074 Move W9, [X8+224]
	075 Compare W9, 0
	076 JumpIfNotEqual {79}
	077 Move X0, X8
	078 Call 0x1C17DFC
	079 Move X0, X31
	080 Call CultureInfo.get_InvariantCulture
	081 Move X8, [X28]
	082 Move X24, X0
	083 Move W9, [X8+224]
	084 Compare W9, 0
	085 JumpIfNotEqual {88}
	086 Move X0, X8
	087 Call 0x1C17DFC
	088 Move W0, W23
	089 Move X1, X24
	090 Move X2, X31
	091 Call Char.ToLower, X0, X1
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Move W23, W0
	094 Compare X22, 0
	095 JumpIfEqual {158}
	096 Move X0, X22
	097 Move W1, W20
	098 Move X2, X31
	099 Call String.get_Chars, X0, X1
	100 And W8, W0, 0xFFFF
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Add W20, W20, 1
	103 NotImplemented "Instruction CMP not yet implemented."
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Move W23, 92
	106 Move X0, [X27]
	107 Move W8, [X0+224]
	108 Compare W8, 0
	109 JumpIfNotEqual {111}
	110 Call 0x1C17DFC
	111 Move X0, X31
	112 Call CultureInfo.get_InvariantCulture
	113 Move X8, [X28]
	114 Move X24, X0
	115 Move W9, [X8+224]
	116 Compare W9, 0
	117 JumpIfNotEqual {120}
	118 Move X0, X8
	119 Call 0x1C17DFC
	120 Move W0, W23
	121 Move X1, X24
	122 Move X2, X31
	123 Call Char.ToLower, X0, X1
	124 Compare X22, 0
	125 JumpIfEqual {158}
	126 Move W23, W0
	127 Move X0, X22
	128 Move W1, W20
	129 Move X2, X31
	130 Call String.get_Chars, X0, X1
	131 And W8, W23, 0xFFFF
	132 NotImplemented "Instruction CMP not yet implemented."
	133 Add W21, W21, 1
	134 NotImplemented "Instruction CMP not yet implemented."
	135 Add W20, W20, 1
	136 NotImplemented "Instruction CMP not yet implemented."
	137 Move W0, W31
	138 Move W20, W21
	139 NotImplemented "Instruction CMP not yet implemented."
	140 NotImplemented "Instruction CSET not yet implemented."
	141 NotImplemented "Instruction CMP not yet implemented."
	142 NotImplemented "Instruction CSET not yet implemented."
	143 And W0, W9, W8
	144 Move X20, [X31+112]
	145 Move X19, [X31+120]
	146 Move X22, [X31+96]
	147 Move X21, [X31+104]
	148 Move X24, [X31+80]
	149 Move X23, [X31+88]
	150 Move X26, [X31+64]
	151 Move X25, [X31+72]
	152 Move X28, [X31+48]
	153 Move X27, [X31+56]
	154 Move X30, [X31+32]
	155 Add X31, X31, 128
	156 Return X0
	157 Move W0, 1
	158 Call 0x1C17F20

Method: UnityEngine.InputSystem.InputControl TryFindControl(UnityEngine.InputSystem.InputControl control, System.String path, System.Int32 indexInPath = 0)

Disassembly:
	0x0376C4E8 STR X30, [X31 + 0x30]
	0x0376C4EC STP X24, X23, [X31 + 0x40]
	0x0376C4F0 STP X22, X21, [X31 + 0x50]
	0x0376C4F4 STP X20, X19, [X31 + 0x60]
	0x0376C4F8 ADRP X20, 0xC74000
	0x0376C4FC LDRB W8, [X20 + 0xEBC]
	0x0376C500 MOV X19, X0
	0x0376C504 TBNZ X8, 0x0, 0x376C51C
	0x0376C508 ADRP X0, 0x9DA000
	0x0376C50C LDR X0, [X0 + 0x7C0]
	0x0376C510 BL 0x1C16CF4
	0x0376C514 MOVZ W8, 0x1
	0x0376C518 STRB W8, [X20 + 0xEBC]
	0x0376C51C CBZ X19, 0x376C5B4
	0x0376C520 LDR X21, [X19 + 0x18]
	0x0376C524 CBZ X21, 0x376C5B4
	0x0376C528 ADRP X8, 0x9DA000
	0x0376C52C LDR X8, [X8 + 0x7C0]
	0x0376C530 MOV W1, W21
	0x0376C534 LDR X0, [X8]
	0x0376C538 BL 0x1C16D6C
	0x0376C53C CMP W21, 0x1
	0x0376C540 MOV X20, X0
	0x0376C544 B.LT 0x376C5B8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0xC75000
	008 Move X23, 0x9DB000
	009 Move W8, [X22+3905]
	010 Move X23, [X23+1872]
	011 Move W19, W2
	012 Move X20, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x9DB000
	019 Move X0, [X0+1872]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+3905], W8
	023 Move X3, [X23]
	024 Move X0, X21
	025 Move X1, X20
	026 Move W2, W19
	027 Move X20, [X31+32]
	028 Move X19, [X31+40]
	029 Move X22, [X31+16]
	030 Move X21, [X31+24]
	031 Move X30, [X31+48]
	032 Move X23, [X31+56]
	033 Call 0x2200B84, X0, X1, X2
	034 Return X0

Method: UnityEngine.InputSystem.InputControl[] TryFindControls(UnityEngine.InputSystem.InputControl control, System.String path, System.Int32 indexInPath = 0)

Disassembly:
	0x037798B4 STP X26, X25, [X31 + 0x20]
	0x037798B8 STP X24, X23, [X31 + 0x30]
	0x037798BC STP X22, X21, [X31 + 0x40]
	0x037798C0 STP X20, X19, [X31 + 0x50]
	0x037798C4 ADRP X21, 0xC67000
	0x037798C8 LDRB W8, [X21 + 0xF4E]
	0x037798CC MOV X19, X2
	0x037798D0 MOV X20, X1
	0x037798D4 STR X0, [X31]
	0x037798D8 TBNZ X8, 0x0, 0x37798F0
	0x037798DC ADRP X0, 0x97C000
	0x037798E0 LDR X0, [X0 + 0x170]
	0x037798E4 BL 0x1C16CF4
	0x037798E8 MOVZ W8, 0x1
	0x037798EC STRB W8, [X21 + 0xF4E]
	0x037798F0 CBZ X19, 0x3779A08
	0x037798F4 LDR W10, [X19 + 0x10]
	0x037798F8 UBFM X24, X20, 0x20, 0x3F
	0x037798FC CMP W24, 0x0
	0x03779900 CSET W8, EQ
	0x03779904 CMP W10, 0x0
	0x03779908 CSET W9, EQ
	0x0377990C CBZ W10, 0x37799DC
	0x03779910 CBZ W24, 0x37799DC
	0x03779914 ADRP X26, 0x97C000
	0x03779918 LDR X26, [X26 + 0x170]
	0x0377991C MOV W21, W31
	0x03779920 MOV W20, W31
	0x03779924 SUB W25, W10, 0x1
	0x03779928 ADD X0, X31, 0x0
	0x0377992C MOV W1, W21
	0x03779930 MOV X2, X31
	0x03779934 BL 0x3768CD4
	0x03779938 AND W8, W0, 0xFFFF
	0x0377993C CMP W8, 0x5C
	0x03779940 B.NE 0x377996C
	0x03779944 ADD W23, W21, 0x1
	0x03779948 CMP W23, W24
	0x0377994C B.GE 0x3779974
	0x03779950 ADD X0, X31, 0x0
	0x03779954 MOV W1, W23
	0x03779958 MOV X2, X31
	0x0377995C BL 0x3768CD4
	0x03779960 MOV W22, W0
	0x03779964 MOV W21, W23
	0x03779968 B 0x3779978
	0x0377996C MOV W22, W0
	0x03779970 B 0x3779978
	0x03779974 MOVZ W22, 0x5C
	0x03779978 LDR X0, [X26]
	0x0377997C LDR W8, [X0 + 0xE0]
	0x03779980 CBNZ W8, 0x3779988
	0x03779984 BL 0x1C16DFC
	0x03779988 MOV W0, W22
	0x0377998C MOV X1, X31
	0x03779990 BL 0x331AEAC
	0x03779994 AND W22, W0, 0xFFFF
	0x03779998 MOV X0, X19
	0x0377999C MOV W1, W20
	0x037799A0 MOV X2, X31
	0x037799A4 BL 0x3222A1C
	0x037799A8 MOV X1, X31
	0x037799AC BL 0x331AEAC
	0x037799B0 CMP W22, W0, UXTH
	0x037799B4 B.NE 0x37799E8
	0x037799B8 ADD W21, W21, 0x1
	0x037799BC CMP W21, W24
	0x037799C0 CSET W8, EQ
	0x037799C4 CMP W25, W20
	0x037799C8 CSET W9, EQ
	0x037799CC B.EQ 0x37799DC
	0x037799D0 CMP W21, W24
	0x037799D4 ADD W20, W20, 0x1
	0x037799D8 B.NE 0x3779928
	0x037799DC EOR W8, W9, W8, 0x0
	0x037799E0 EOR W0, W8, 0x1
	0x037799E4 B 0x37799EC
	0x037799E8 MOV W0, W31
	0x037799EC LDP X20, X19, [X31 + 0x50]
	0x037799F0 LDP X22, X21, [X31 + 0x40]
	0x037799F4 LDP X24, X23, [X31 + 0x30]
	0x037799F8 LDP X26, X25, [X31 + 0x20]
	0x037799FC LDR X30, [X31 + 0x10]
	0x03779A00 ADD X31, X31, 0x60
	0x03779A04 RET
	0x03779A08 BL 0x1C16F20
	0x03779A0C STR X30, [X31 - 0x20]!

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+32], X30
	003 Move [X31+48], X24
	004 Move [X31+56], X23
	005 Move [X31+64], X22
	006 Move [X31+72], X21
	007 Move [X31+80], X20
	008 Move [X31+88], X19
	009 Move X22, 0xC68000
	010 Move X24, 0x9A3000
	011 Move X23, 0x9CD000
	012 Move W8, [X22+3906]
	013 Move X24, [X24+3664]
	014 Move X23, [X23+3592]
	015 Move W19, W2
	016 Move X20, X1
	017 Move X21, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {36}
	022 Move X0, 0x9A3000
	023 Move X0, [X0+3672]
	024 Call 0x1C17CF4
	025 Move X0, 0x9CE000
	026 Move X0, [X0+3640]
	027 Call 0x1C17CF4
	028 Move X0, 0x9A3000
	029 Move X0, [X0+3664]
	030 Call 0x1C17CF4
	031 Move X0, 0x9CD000
	032 Move X0, [X0+3592]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X22+3906], W8
	036 Move X22, 0x9A3000
	037 Move X22, [X22+3672]
	038 Move X3, [X24]
	039 NotImplemented "Instruction MOVI not yet implemented."
	040 Add X0, X31, 0
	041 Move W1, 2
	042 Move W2, W31
	043 Move [X31], V0
	044 Move [X31+8], V0
	045 Call 0x2DFB684, X0, X1, X2
	046 Move X4, [X23]
	047 Add X3, X31, 0
	048 Move X0, X21
	049 Move X1, X20
	050 Move W2, W19
	051 Call 0x2200C70, X0, X1, X2, X3
	052 Move X8, 0x9CE000
	053 Move X8, [X8+3640]
	054 Move X2, [X8]
	055 Add X0, X31, 0
	056 Move W1, W31
	057 Call 0x2DFC7F4, X0, X1
	058 Move X1, [X22]
	059 Move X19, X0
	060 Add X0, X31, 0
	061 Call 0x2DFC98C, X0
	062 Move X0, X19
	063 Move X20, [X31+80]
	064 Move X19, [X31+88]
	065 Move X22, [X31+64]
	066 Move X21, [X31+72]
	067 Move X24, [X31+48]
	068 Move X23, [X31+56]
	069 Move X30, [X31+32]
	070 Add X31, X31, 96
	071 Return X0
	072 Move X20, X0
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move X0, X20
	075 Call 0x3EB2AD0
	076 Move X19, [X0]
	077 Call 0x3EB2AE0
	078 Move X1, [X22]
	079 Add X0, X31, 0
	080 Call 0x2DFC98C, X0
	081 Compare X19, 0
	082 JumpIfEqual {62}
	083 Move X0, X19
	084 Call 0x1C17F18
	085 Move X19, X31
	086 Move X20, X0
	087 Move X1, [X22]
	088 Add X0, X31, 0
	089 Call 0x2DFC98C, X0
	090 Compare X19, 0
	091 JumpIfNotEqual {94}
	092 Move X0, X20
	093 Call 0x1D2D690
	094 Move X0, X19
	095 Call 0x1C17F18
	096 Call 0x1991590

Method: System.Int32 TryFindControls(UnityEngine.InputSystem.InputControl control, System.String path, ref UnityEngine.InputSystem.InputControlList`1<UnityEngine.InputSystem.InputControl> matches, System.Int32 indexInPath = 0)

Disassembly:
	0x03779A10 STP X20, X19, [X31 + 0x10]
	0x03779A14 ADRP X19, 0xC67000
	0x03779A18 ADRP X20, 0x9CD000
	0x03779A1C LDRB W8, [X19 + 0xF4F]
	0x03779A20 LDR X20, [X20 + 0xE68]
	0x03779A24 TBNZ X8, 0x0, 0x3779A3C
	0x03779A28 ADRP X0, 0x9CD000
	0x03779A2C LDR X0, [X0 + 0xE68]
	0x03779A30 BL 0x1C16CF4
	0x03779A34 MOVZ W8, 0x1
	0x03779A38 STRB W8, [X19 + 0xF4F]
	0x03779A3C LDR X0, [X20]
	0x03779A40 BL 0x1C16F10
	0x03779A44 MOV X1, X31
	0x03779A48 MOV X19, X0
	0x03779A4C BL 0x33BDD8C
	0x03779A50 LDR X8, [X20]
	0x03779A54 LDR X8, [X8 + 0xB8]
	0x03779A58 STR X19, [X8]
	0x03779A5C LDP X20, X19, [X31 + 0x10]
	0x03779A60 LDR X30, [X31], #0x20
	0x03779A64 RET
	0x03779A68 MOV X1, X31
	0x03779A6C B 0x33BDD8C
	0x03779A70 SUB X31, X31, 0x20
	0x03779A74 STP X2, X30, [X31 + 0x8]
	0x03779A78 STR X1, [X31]
	0x03779A7C ADD X0, X31, 0x0

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0xC68000
	009 Move X24, 0x9CD000
	010 Move W8, [X23+3907]
	011 Move X24, [X24+3592]
	012 Move W20, W3
	013 Move X19, X2
	014 Move X21, X1
	015 Move X22, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0x9CD000
	021 Move X0, [X0+3592]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X23+3907], W8
	025 Move X4, [X24]
	026 Move X0, X22
	027 Move X1, X21
	028 Move W2, W20
	029 Move X3, X19
	030 Move X20, [X31+48]
	031 Move X19, [X31+56]
	032 Move X22, [X31+32]
	033 Move X21, [X31+40]
	034 Move X24, [X31+16]
	035 Move X23, [X31+24]
	036 Move X30, [X31+64]
	037 Call 0x2200C70, X0, X1, X2, X3
	038 Return X0

Method: TControl TryFindControl(UnityEngine.InputSystem.InputControl control, System.String path, System.Int32 indexInPath = 0)

Disassembly:
	0x02200B84 STP V0, V0, [X31 + 0x1B0]
	0x02200B88 STP V0, V0, [X31 + 0x190]
	0x02200B8C STP V0, V0, [X31 + 0x170]
	0x02200B90 STR V0, [X31 + 0x16]
	0x02200B94 LDR X1, [X8 + 0x10]
	0x02200B98 ADD X0, X31, 0x1E0
	0x02200B9C BL 0x24FC5F4
	0x02200BA0 MOV X21, X0
	0x02200BA4 CBZ X0, 0x2200F0C
	0x02200BA8 ADD X8, X31, 0x180
	0x02200BAC ADRP X29, 0x1EF3000
	0x02200BB0 ADRP X20, 0x1F1B000
	0x02200BB4 ADRP X27, 0x1F1B000
	0x02200BB8 ORR X8, X8, 0xF
	0x02200BBC LDR X29, [X29 + 0xE18]
	0x02200BC0 LDR X20, [X20 + 0xDF8]
	0x02200BC4 LDR X27, [X27 + 0xDE8]
	0x02200BC8 STR X8, [X31 + 0x18]
	0x02200BCC ADRP X19, 0x1F1B000
	0x02200BD0 LDR X19, [X19 + 0xE00]
	0x02200BD4 LDR X8, [X21]
	0x02200BD8 LDR X1, [X29]
	0x02200BDC LDRH W9, [X8 + 0x12E]
	0x02200BE0 CBZ X9, 0x2200C04
	0x02200BE4 LDR X10, [X8 + 0xB0]
	0x02200BE8 ADD X10, X10, 0x8
	0x02200BEC LDUR X11, [X10 - 0x8]
	0x02200BF0 CMP X11, X1
	0x02200BF4 B.EQ 0x2200C14
	0x02200BF8 SUBS X9, X9, 0x1
	0x02200BFC ADD X10, X10, 0x10
	0x02200C00 B.NE 0x2200BEC
	0x02200C04 MOV X0, X21
	0x02200C08 MOV W2, W31
	0x02200C0C BL 0x1C5C788
	0x02200C10 B 0x2200C20
	0x02200C14 LDRSW X9, [X10]
	0x02200C18 ADD X8, X8, X9, 0x4, LSL
	0x02200C1C ADD X0, X8, 0x138
	0x02200C20 LDP X8, X1, [X0]
	0x02200C24 MOV X0, X21
	0x02200C28 BLR X8
	0x02200C2C TBZ X0, 0x0, 0x2200E34
	0x02200C30 LDR X8, [X21]
	0x02200C34 LDR X1, [X20]
	0x02200C38 LDRH W9, [X8 + 0x12E]
	0x02200C3C CBZ X9, 0x2200C60
	0x02200C40 LDR X10, [X8 + 0xB0]
	0x02200C44 ADD X10, X10, 0x8
	0x02200C48 LDUR X11, [X10 - 0x8]
	0x02200C4C CMP X11, X1
	0x02200C50 B.EQ 0x2200C70
	0x02200C54 SUBS X9, X9, 0x1
	0x02200C58 ADD X10, X10, 0x10
	0x02200C5C B.NE 0x2200C48
	0x02200C60 MOV X0, X21
	0x02200C64 MOV W2, W31
	0x02200C68 BL 0x1C5C788
	0x02200C6C B 0x2200C7C

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+48], X22
	004 Move [X31+56], X21
	005 Move [X31+64], X20
	006 Move [X31+72], X19
	007 Move X8, [X3+56]
	008 Move X19, X3
	009 Move W22, W2
	010 Move X20, X1
	011 Move X21, X0
	012 Compare X8, 0
	013 JumpIfNotEqual {16}
	014 Move X0, X19
	015 Call 0x1C5D6E0
	016 Compare X21, 0
	017 JumpIfEqual {56}
	018 Move X0, X20
	019 Move X1, X31
	020 Call String.IsNullOrEmpty, X0
	021 Move W8, W0
	022 Move X0, X31
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {49}
	027 Compare W22, 0
	028 JumpIfNotEqual {38}
	029 Compare X20, 0
	030 JumpIfEqual {71}
	031 Move X0, X20
	032 Move W1, W31
	033 Move X2, X31
	034 Call String.get_Chars, X0, X1
	035 And W8, W0, 0xFFFF
	036 NotImplemented "Instruction CMP not yet implemented."
	037 NotImplemented "Instruction CSET not yet implemented."
	038 NotImplemented "Instruction MOVI not yet implemented."
	039 Move [X31], V0
	040 Move [X31+8], V0
	041 Move X8, [X19+56]
	042 Add X3, X31, 0
	043 Move X0, X21
	044 Move X1, X20
	045 Move X5, [X8+16]
	046 Move W2, W22
	047 Move W4, W31
	048 Call 0x2200534, X0, X1, X2, X3, X4
	049 Move X20, [X31+64]
	050 Move X19, [X31+72]
	051 Move X22, [X31+48]
	052 Move X21, [X31+56]
	053 Move X30, [X31+32]
	054 Add X31, X31, 80
	055 Return X0
	056 Move X0, 0x1EF9000
	057 Move X0, [X0+1320]
	058 Call 0x1C17D08
	059 Call 0x1C17F10
	060 Move X20, X0
	061 Move X0, 0x1F1C000
	062 Move X0, [X0+3424]
	063 Call 0x1C17D08
	064 Move X1, X0
	065 Move X0, X20
	066 Move X2, X31
	067 Call ArgumentNullException..ctor, X0, X1
	068 Move X0, X20
	069 Move X1, X19
	070 Call 0x1C17DEC
	071 Call 0x1C17F20

Method: System.Int32 TryFindControls(UnityEngine.InputSystem.InputControl control, System.String path, System.Int32 indexInPath, ref UnityEngine.InputSystem.InputControlList`1<TControl> matches)

Disassembly:
	0x02200C70 LDRSW X9, [X10]
	0x02200C74 ADD X8, X8, X9, 0x4, LSL
	0x02200C78 ADD X0, X8, 0x138
	0x02200C7C LDP X9, X1, [X0]
	0x02200C80 ADD X8, X31, 0x20
	0x02200C84 MOV X0, X21
	0x02200C88 BLR X9
	0x02200C8C LDR V0, [X31 + 0x2]
	0x02200C90 LDR X8, [X31 + 0x30]
	0x02200C94 STR V0, [X31 + 0x14]
	0x02200C98 STR X8, [X31 + 0x150]
	0x02200C9C LDR X8, [X25 + 0x38]
	0x02200CA0 LDR X4, [X8 + 0x18]
	0x02200CA4 ADD X8, X31, 0x20
	0x02200CA8 ADD X0, X31, 0x140
	0x02200CAC MOV X1, X26
	0x02200CB0 MOV X2, X24
	0x02200CB4 MOV X3, X23
	0x02200CB8 BL 0x2202520
	0x02200CBC ADD X0, X31, 0xF0
	0x02200CC0 ADD X1, X31, 0x20
	0x02200CC4 MOVZ W2, 0x50
	0x02200CC8 BL 0x3EB1AC0
	0x02200CCC ADD X0, X31, 0xF0
	0x02200CD0 MOV X1, X31
	0x02200CD4 BL 0x376B9BC
	0x02200CD8 TBNZ X0, 0x0, 0x2200CEC
	0x02200CDC LDR V0, [X31 + 0xF4]
	0x02200CE0 FCMP S0, 0x0
	0x02200CE4 B.LS 0x2200E04
	0x02200CE8 TBZ X22, 0x0, 0x2200E04
	0x02200CEC CBZ X23, 0x2200D1C
	0x02200CF0 ADD X8, X31, 0x20
	0x02200CF4 ADD X0, X31, 0xF0
	0x02200CF8 MOV X1, X31
	0x02200CFC BL 0x376B9EC
	0x02200D00 LDP V0, V1, [X31 + 0x20]
	0x02200D04 LDR X2, [X19]
	0x02200D08 STP V0, V1, [X31 + 0xD0]
	0x02200D0C ADD X0, X31, 0xD0
	0x02200D10 MOV X1, X23
	0x02200D14 BL 0x2DFB648
	0x02200D18 TBZ X0, 0x0, 0x2200E14
	0x02200D1C LDRB W8, [X31 + 0x180]
	0x02200D20 CBZ W8, 0x2200D80
	0x02200D24 ADRP X8, 0x1F1B000
	0x02200D28 LDR X8, [X8 + 0xE28]
	0x02200D2C LDR X1, [X8]
	0x02200D30 ADD X8, X31, 0x20
	0x02200D34 ADD X0, X31, 0x180
	0x02200D38 BL 0x243E768
	0x02200D3C ADD X0, X31, 0x80
	0x02200D40 ADD X1, X31, 0x20
	0x02200D44 MOVZ W2, 0x50
	0x02200D48 BL 0x3EB1AC0
	0x02200D4C LDR V0, [X31 + 0x84]
	0x02200D50 LDR V1, [X31 + 0xF4]
	0x02200D54 FCMP S0, S1
	0x02200D58 B.GE 0x2200E24
	0x02200D5C LDRB W8, [X31 + 0x180]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X8, [X4+56]
	008 Move X19, X4
	009 Move X20, X3
	010 Move W23, W2
	011 Move X21, X1
	012 Move X22, X0
	013 Compare X8, 0
	014 JumpIfNotEqual {17}
	015 Move X0, X19
	016 Call 0x1C5D6E0
	017 Compare X22, 0
	018 JumpIfEqual {48}
	019 Compare X21, 0
	020 JumpIfEqual {55}
	021 Compare W23, 0
	022 JumpIfNotEqual {30}
	023 Move X0, X21
	024 Move W1, W31
	025 Move X2, X31
	026 Call String.get_Chars, X0, X1
	027 And W8, W0, 0xFFFF
	028 NotImplemented "Instruction CMP not yet implemented."
	029 NotImplemented "Instruction CSET not yet implemented."
	030 Move X8, [X19+56]
	031 Move W19, [X20]
	032 Move W4, 1
	033 Move X0, X22
	034 Move X5, [X8+24]
	035 Move X1, X21
	036 Move W2, W23
	037 Move X3, X20
	038 Call 0x2200534, X0, X1, X2, X3, X4
	039 Move W8, [X20]
	040 Move X22, [X31+16]
	041 Move X21, [X31+24]
	042 Subtract W0, W8, W19
	043 Move X20, [X31+32]
	044 Move X19, [X31+40]
	045 Move X30, [X31+48]
	046 Move X23, [X31+56]
	047 Return X0
	048 Move X0, 0x1EF9000
	049 Move X0, [X0+1320]
	050 Call 0x1C17D08
	051 Call 0x1C17F10
	052 Move X20, X0
	053 Move X0, 0x1F1C000
	054 Move X0, [X0+3424]
	055 Move X0, 0x1EF9000
	056 Move X0, [X0+1320]
	057 Call 0x1C17D08
	058 Call 0x1C17F10
	059 Move X20, X0
	060 Move X0, 0x1EFF000
	061 Move X0, [X0+288]
	062 Call 0x1C17D08
	063 Move X1, X0
	064 Move X0, X20
	065 Move X2, X31
	066 Call ArgumentNullException..ctor, X0, X1
	067 Move X0, X20
	068 Move X1, X19
	069 Call 0x1C17DEC

Method: UnityEngine.InputSystem.InputControl TryFindChild(UnityEngine.InputSystem.InputControl control, System.String path, System.Int32 indexInPath = 0)

Disassembly:
	0x037733AC CMP W1, 0x1
	0x037733B0 B.NE 0x37733E4
	0x037733B4 MOV X0, X20
	0x037733B8 BL 0x3EB1AD0
	0x037733BC LDR X19, [X0]
	0x037733C0 BL 0x3EB1AE0
	0x037733C4 ADRP X8, 0x9AC000
	0x037733C8 LDR X8, [X8 + 0x48]
	0x037733CC ADD X0, X31, 0x28
	0x037733D0 LDR X1, [X8]
	0x037733D4 BL 0x2BC4968
	0x037733D8 CBZ X19, 0x3773388
	0x037733DC MOV X0, X19
	0x037733E0 BL 0x1C16F18
	0x037733E4 MOV X19, X31
	0x037733E8 B 0x37733F0
	0x037733EC MOV X20, X0
	0x037733F0 ADRP X8, 0x9AC000
	0x037733F4 LDR X8, [X8 + 0x48]
	0x037733F8 LDR X1, [X8]
	0x037733FC ADD X0, X31, 0x28
	0x03773400 BL 0x2BC4968
	0x03773404 CBNZ X19, 0x3773410
	0x03773408 MOV X0, X20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0xC6E000
	008 Move X23, 0x9D4000
	009 Move W8, [X22+3908]
	010 Move X23, [X23+2888]
	011 Move W19, W2
	012 Move X20, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x9D4000
	019 Move X0, [X0+2888]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+3908], W8
	023 Move X3, [X23]
	024 Move X0, X21
	025 Move X1, X20
	026 Move W2, W19
	027 Move X20, [X31+32]
	028 Move X19, [X31+40]
	029 Move X22, [X31+16]
	030 Move X21, [X31+24]
	031 Move X30, [X31+48]
	032 Move X23, [X31+56]
	033 Call 0x2200A54, X0, X1, X2
	034 Return X0

Method: TControl TryFindChild(UnityEngine.InputSystem.InputControl control, System.String path, System.Int32 indexInPath = 0)

Disassembly:
	0x02200A54 MOV W2, W31
	0x02200A58 BL 0x1C5C788
	0x02200A5C B 0x2200A6C
	0x02200A60 LDRSW X9, [X10]
	0x02200A64 ADD X8, X8, X9, 0x4, LSL
	0x02200A68 ADD X0, X8, 0x138
	0x02200A6C LDP X8, X1, [X0]
	0x02200A70 MOV X0, X21
	0x02200A74 BLR X8
	0x02200A78 CBNZ X22, 0x2200A84
	0x02200A7C MOV X0, X23
	0x02200A80 BL 0x1D2C690
	0x02200A84 MOV X0, X22
	0x02200A88 BL 0x1C16F18
	0x02200A8C BL 0x1990590
	0x02200A90 STP X29, X30, [X31 - 0x60]!
	0x02200A94 STP X28, X27, [X31 + 0x10]
	0x02200A98 STP X26, X25, [X31 + 0x20]
	0x02200A9C STP X24, X23, [X31 + 0x30]
	0x02200AA0 STP X22, X21, [X31 + 0x40]
	0x02200AA4 STP X20, X19, [X31 + 0x50]
	0x02200AA8 SUB X31, X31, 0x260
	0x02200AAC LDR X25, [X31 + 0x2C0]
	0x02200AB0 STP X2, X3, [X31 + 0x1E0]
	0x02200AB4 MOV W22, W7
	0x02200AB8 MOV X23, X6
	0x02200ABC LDR X8, [X25 + 0x38]
	0x02200AC0 MOV X24, X1
	0x02200AC4 MOV X26, X0
	0x02200AC8 STP X5, X4, [X31 + 0x8]
	0x02200ACC CBNZ X8, 0x2200B5C
	0x02200AD0 ADRP X0, 0x1EF3000
	0x02200AD4 LDR X0, [X0 + 0xE00]
	0x02200AD8 BL 0x1C16CF4
	0x02200ADC ADRP X0, 0x1F1B000
	0x02200AE0 LDR X0, [X0 + 0xDF8]
	0x02200AE4 BL 0x1C16CF4
	0x02200AE8 ADRP X0, 0x1EF3000
	0x02200AEC LDR X0, [X0 + 0xE18]
	0x02200AF0 BL 0x1C16CF4
	0x02200AF4 ADRP X0, 0x1F1B000
	0x02200AF8 LDR X0, [X0 + 0xE00]
	0x02200AFC BL 0x1C16CF4
	0x02200B00 ADRP X0, 0x1F1B000
	0x02200B04 LDR X0, [X0 + 0xE08]
	0x02200B08 BL 0x1C16CF4
	0x02200B0C ADRP X0, 0x1F1B000
	0x02200B10 LDR X0, [X0 + 0xE10]
	0x02200B14 BL 0x1C16CF4
	0x02200B18 ADRP X0, 0x1F1B000
	0x02200B1C LDR X0, [X0 + 0xDE8]
	0x02200B20 BL 0x1C16CF4
	0x02200B24 ADRP X0, 0x1F1B000
	0x02200B28 LDR X0, [X0 + 0xE18]
	0x02200B2C BL 0x1C16CF4
	0x02200B30 ADRP X0, 0x1F1B000
	0x02200B34 LDR X0, [X0 + 0xE20]
	0x02200B38 BL 0x1C16CF4
	0x02200B3C ADRP X0, 0x1F1B000
	0x02200B40 LDR X0, [X0 + 0xE28]
	0x02200B44 BL 0x1C16CF4
	0x02200B48 LDR X8, [X25 + 0x38]
	0x02200B4C CBNZ X8, 0x2200B5C
	0x02200B50 MOV X0, X25
	0x02200B54 BL 0x1C5C6E0
	0x02200B58 LDR X8, [X25 + 0x38]
	0x02200B5C MOVI V0.2D, 0x0
	0x02200B60 STP X31, X31, [X31 + 0x140]
	0x02200B64 STR X31, [X31 + 0x150]
	0x02200B68 STR X31, [X31 + 0x1D0]
	0x02200B6C STP V0, V0, [X31 + 0x120]
	0x02200B70 STP V0, V0, [X31 + 0x100]
	0x02200B74 STP V0, V0, [X31 + 0xE0]
	0x02200B78 STP V0, V0, [X31 + 0xC0]
	0x02200B7C STP V0, V0, [X31 + 0xA0]
	0x02200B80 STP V0, V0, [X31 + 0x80]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+32], X24
	004 Move [X31+40], X23
	005 Move [X31+48], X22
	006 Move [X31+56], X21
	007 Move [X31+64], X20
	008 Move [X31+72], X19
	009 Move X8, [X3+56]
	010 Move X19, X3
	011 Move W20, W2
	012 Move X21, X1
	013 Move X22, X0
	014 Compare X8, 0
	015 JumpIfNotEqual {27}
	016 Move X0, 0x1F1C000
	017 Move X0, [X0+3392]
	018 Call 0x1C17CF4
	019 Move X0, 0x1F1C000
	020 Move X0, [X0+3400]
	021 Call 0x1C17CF4
	022 Move X8, [X19+56]
	023 Compare X8, 0
	024 JumpIfNotEqual {27}
	025 Move X0, X19
	026 Call 0x1C5D6E0
	027 Compare X22, 0
	028 JumpIfEqual {66}
	029 Compare X21, 0
	030 JumpIfEqual {73}
	031 Move X0, X22
	032 Move X1, X31
	033 Call InputControl.get_children, X0
	034 Move X23, X1
	035 ShiftRight X23, 32
	036 And X23, X23, 0x7FFFFFFF
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move [X31], X0
	039 Move [X31+8], X1
	040 Move X24, 0x1F1C000
	041 Move X24, [X24+3400]
	042 Move W22, W31
	043 Move X2, [X24]
	044 Add X0, X31, 0
	045 Move W1, W22
	046 Call ReadOnlyArray`1<Object>.get_Item, X0, X1
	047 Move X8, [X19+56]
	048 Move X1, X21
	049 Move W2, W20
	050 Move X3, [X8]
	051 Call 0x2200B84, X0, X1, X2
	052 Compare X0, 0
	053 JumpIfNotEqual {57}
	054 Add W22, W22, 1
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move X0, X31
	057 Move X20, [X31+64]
	058 Move X19, [X31+72]
	059 Move X22, [X31+48]
	060 Move X21, [X31+56]
	061 Move X24, [X31+32]
	062 Move X23, [X31+40]
	063 Move X30, [X31+16]
	064 Add X31, X31, 80
	065 Return X0
	066 Move X0, 0x1EF9000
	067 Move X0, [X0+1320]
	068 Call 0x1C17D08
	069 Call 0x1C17F10
	070 Move X20, X0
	071 Move X0, 0x1F1C000
	072 Move X0, [X0+3424]
	073 Move X0, 0x1EF9000
	074 Move X0, [X0+1320]
	075 Call 0x1C17D08
	076 Call 0x1C17F10
	077 Move X20, X0
	078 Move X0, 0x1EFF000
	079 Move X0, [X0+288]
	080 Call 0x1C17D08
	081 Move X1, X0
	082 Move X0, X20
	083 Move X2, X31
	084 Call ArgumentNullException..ctor, X0, X1
	085 Move X0, X20
	086 Move X1, X19
	087 Call 0x1C17DEC

Method: System.Boolean Matches(System.String expected, UnityEngine.InputSystem.InputControl control)

Disassembly:
	0x03778114 BL 0x3766FC8
	0x03778118 MOV X1, X0
	0x0377811C ADD X0, X31, 0x8
	0x03778120 BL 0x3778190
	0x03778124 B 0x37780E0
	0x03778128 ADRP X0, 0x980000
	0x0377812C LDR X0, [X0 + 0x528]
	0x03778130 BL 0x1C16D08
	0x03778134 BL 0x1C16F10
	0x03778138 MOV X19, X0
	0x0377813C ADRP X0, 0x986000
	0x03778140 LDR X0, [X0 + 0x120]
	0x03778144 BL 0x1C16D08
	0x03778148 MOV X1, X0
	0x0377814C MOV X0, X19
	0x03778150 MOV X2, X31
	0x03778154 BL 0x330E100
	0x03778158 ADRP X0, 0x9CE000
	0x0377815C LDR X0, [X0 + 0xE28]
	0x03778160 BL 0x1C16D08
	0x03778164 MOV X1, X0
	0x03778168 MOV X0, X19
	0x0377816C BL 0x1C16DEC
	0x03778170 ADRP X0, 0x984000
	0x03778174 LDR X0, [X0 + 0x758]
	0x03778178 BL 0x1C16D08
	0x0377817C BL 0x1C16F10
	0x03778180 MOV X1, X31
	0x03778184 MOV X19, X0
	0x03778188 BL 0x3380288
	0x0377818C B 0x3778158
	0x03778190 SUB X31, X31, 0x40
	0x03778194 STR X30, [X31 + 0x10]
	0x03778198 STP X22, X21, [X31 + 0x20]
	0x0377819C STP X20, X19, [X31 + 0x30]
	0x037781A0 ADRP X22, 0xC68000
	0x037781A4 ADRP X21, 0x9A3000
	0x037781A8 LDRB W8, [X22 + 0xF3D]
	0x037781AC LDR X21, [X21 + 0xDC0]
	0x037781B0 MOV X20, X1
	0x037781B4 MOV X19, X0
	0x037781B8 TBNZ X8, 0x0, 0x37781D0
	0x037781BC ADRP X0, 0x9A3000
	0x037781C0 LDR X0, [X0 + 0xDC0]
	0x037781C4 BL 0x1C16CF4
	0x037781C8 MOVZ W8, 0x1
	0x037781CC STRB W8, [X22 + 0xF3D]
	0x037781D0 LDR X0, [X21]
	0x037781D4 LDR W8, [X0 + 0xE0]
	0x037781D8 CBNZ W8, 0x37781E0
	0x037781DC BL 0x1C16DFC
	0x037781E0 MOV X0, X31
	0x037781E4 BL 0x3815C88
	0x037781E8 LDR X8, [X21]
	0x037781EC STRB W0, [X31 + 0x18]
	0x037781F0 LDR W9, [X8 + 0xE0]

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+112], X30
	003 Move [X31+128], X20
	004 Move [X31+136], X19
	005 Move X19, X1
	006 Move X1, X31
	007 Move X20, X0
	008 Move [X31+8], X31
	009 Move [X31+16], X31
	010 Move [X31+24], X31
	011 Call String.IsNullOrEmpty, X0
	012 Move TEMP, X0
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {41}
	016 Compare X19, 0
	017 JumpIfEqual {48}
	018 Move [X31+8], X20
	019 Compare X20, 0
	020 JumpIfEqual {66}
	021 Move W8, [X20+16]
	022 NotImplemented "Instruction MOVI not yet implemented."
	023 Add X0, X31, 8
	024 Move X1, X19
	025 Move W2, W31
	026 Move [X31+20], W31
	027 Move [X31+24], W31
	028 Move [X31+32], V0
	029 Move [X31+40], V0
	030 Move [X31+64], V0
	031 Move [X31+72], V0
	032 Move [X31+16], W8
	033 Move [X31+96], V0
	034 Call InputControlPath.MatchesRecursive, X0, X1, X2
	035 Move X20, [X31+128]
	036 Move X19, [X31+136]
	037 Move X30, [X31+112]
	038 And W0, W0, 1
	039 Add X31, X31, 144
	040 Return X0
	041 Move X0, 0x981000
	042 Move X0, [X0+1320]
	043 Call 0x1C17D08
	044 Call 0x1C17F10
	045 Move X19, X0
	046 Move X0, 0x9CF000
	047 Move X0, [X0+3472]
	048 Move X0, 0x981000
	049 Move X0, [X0+1320]
	050 Call 0x1C17D08
	051 Call 0x1C17F10
	052 Move X19, X0
	053 Move X0, 0x9A4000
	054 Move X0, [X0+3424]
	055 Call 0x1C17D08
	056 Move X1, X0
	057 Move X0, X19
	058 Move X2, X31
	059 Call ArgumentNullException..ctor, X0, X1
	060 Move X0, 0x9CF000
	061 Move X0, [X0+3480]
	062 Call 0x1C17D08
	063 Move X1, X0
	064 Move X0, X19
	065 Call 0x1C17DEC
	066 Call 0x1C17F20

Method: System.Boolean MatchControlComponent(ref UnityEngine.InputSystem.InputControlPath/ParsedPathComponent expectedControlComponent, ref UnityEngine.InputSystem.Layouts.InputControlLayout/ControlItem controlItem, System.Boolean matchAlias = False)

Disassembly:
	0x03779AE8 BL 0x3222A1C
	0x03779AEC AND W8, W0, 0xFFFF
	0x03779AF0 CMP W8, W21, UXTH
	0x03779AF4 B.EQ 0x3779B3C
	0x03779AF8 LDR X0, [X20]
	0x03779AFC CBZ X0, 0x3779B98
	0x03779B00 LDR W1, [X20 + 0x10]
	0x03779B04 MOV X2, X31
	0x03779B08 BL 0x3222A1C
	0x03779B0C LDR W9, [X20 + 0x10]
	0x03779B10 LDR W8, [X20 + 0x8]
	0x03779B14 AND W10, W0, 0xFFFF
	0x03779B18 ADD W11, W9, 0x1
	0x03779B1C CMP W11, W8
	0x03779B20 CCMP W10, W22, 0x0, LT
	0x03779B24 CINC W9, W9, EQ
	0x03779B28 ADD W1, W9, 0x1
	0x03779B2C CMP W1, W8
	0x03779B30 STR W1, [X20 + 0x10]
	0x03779B34 B.LT 0x3779ADC
	0x03779B38 B 0x3779B44
	0x03779B3C LDR W1, [X20 + 0x10]
	0x03779B40 LDR W8, [X20 + 0x8]
	0x03779B44 AND W9, W21, 0xFFFF
	0x03779B48 CMP W9, 0x2F
	0x03779B4C B.EQ 0x3779B60
	0x03779B50 CMP W1, W8
	0x03779B54 B.GE 0x3779B60
	0x03779B58 ADD W8, W1, 0x1
	0x03779B5C STR W8, [X20 + 0x10]
	0x03779B60 LDR X8, [X20]
	0x03779B64 SUB W3, W1, W19
	0x03779B68 ADD X0, X31, 0x0
	0x03779B6C MOV W2, W19
	0x03779B70 MOV X1, X8
	0x03779B74 MOV X4, X31
	0x03779B78 STP X31, X31, [X31]
	0x03779B7C BL 0x3768614
	0x03779B80 LDP X0, X1, [X31]
	0x03779B84 LDP X20, X19, [X31 + 0x30]
	0x03779B88 LDP X22, X21, [X31 + 0x20]
	0x03779B8C LDR X30, [X31 + 0x10]
	0x03779B90 ADD X31, X31, 0x40
	0x03779B94 RET
	0x03779B98 BL 0x1C16F20
	0x03779B9C STR X30, [X31 - 0x20]!
	0x03779BA0 STP X20, X19, [X31 + 0x10]
	0x03779BA4 ADRP X19, 0xC67000
	0x03779BA8 ADRP X20, 0x9CD000
	0x03779BAC LDRB W8, [X19 + 0xF51]
	0x03779BB0 LDR X20, [X20 + 0xE00]
	0x03779BB4 TBNZ X8, 0x0, 0x3779BCC
	0x03779BB8 ADRP X0, 0x9CD000
	0x03779BBC LDR X0, [X0 + 0xE00]
	0x03779BC0 BL 0x1C16CF4
	0x03779BC4 MOVZ W8, 0x1
	0x03779BC8 STRB W8, [X19 + 0xF51]
	0x03779BCC LDR X0, [X20]
	0x03779BD0 BL 0x1C16F10
	0x03779BD4 MOV X1, X31
	0x03779BD8 MOV X19, X0
	0x03779BDC BL 0x33BDD8C
	0x03779BE0 LDR X8, [X20]
	0x03779BE4 LDR X8, [X8 + 0xB8]
	0x03779BE8 STR X19, [X8]
	0x03779BEC LDP X20, X19, [X31 + 0x10]
	0x03779BF0 LDR X30, [X31], #0x20
	0x03779BF4 RET
	0x03779BF8 MOV X1, X31
	0x03779BFC B 0x33BDD8C
	0x03779C00 SUB X31, X31, 0x20
	0x03779C04 STP X2, X30, [X31 + 0x8]
	0x03779C08 STR X1, [X31]
	0x03779C0C ADD X0, X31, 0x0
	0x03779C10 MOV X1, X31
	0x03779C14 BL 0x3768AFC
	0x03779C18 LDR X30, [X31 + 0x10]
	0x03779C1C ADD X31, X31, 0x20
	0x03779C20 RET
	0x03779C24 RET
	0x03779C28 SUB X31, X31, 0x80
	0x03779C2C STR X30, [X31 + 0x60]
	0x03779C30 STP X20, X19, [X31 + 0x70]
	0x03779C34 MRS X20, 0xC000
	0x03779C38 LDR X8, [X20 + 0x28]
	0x03779C3C MOV X19, X0
	0x03779C40 STR X8, [X31 + 0x58]
	0x03779C44 LDR W8, [X0 + 0x10]
	0x03779C48 CMP W8, 0x1
	0x03779C4C B.EQ 0x3779CB4
	0x03779C50 CBNZ W8, 0x3779CE4
	0x03779C54 LDR X0, [X19 + 0x70]
	0x03779C58 MOVN W8, 0x0
	0x03779C5C MOV X1, X31
	0x03779C60 STR W8, [X19 + 0x10]
	0x03779C64 BL 0x32277A8
	0x03779C68 TBNZ X0, 0x0, 0x3779D08
	0x03779C6C LDR X8, [X19 + 0x70]
	0x03779C70 STR W31, [X31 + 0x4]
	0x03779C74 CBZ X8, 0x3779D50
	0x03779C78 LDR W9, [X8 + 0x10]
	0x03779C7C MOVI V0.2D, 0x0
	0x03779C80 ADD X0, X19, 0x94
	0x03779C84 ADD X1, X31, 0x4
	0x03779C88 MOVZ W2, 0x54
	0x03779C8C STUR V0, [X31 + 0x48]
	0x03779C90 STUR V0, [X31 + 0x38]
	0x03779C94 STUR V0, [X31 + 0x28]
	0x03779C98 STUR V0, [X31 + 0x18]
	0x03779C9C STUR V0, [X31 + 0x8]
	0x03779CA0 STR X8, [X19 + 0x80]
	0x03779CA4 STP W31, W31, [X19 + 0x8C]
	0x03779CA8 STR W9, [X19 + 0x88]
	0x03779CAC BL 0x3EB1AC0
	0x03779CB0 B 0x3779CBC
	0x03779CB4 MOVN W8, 0x0
	0x03779CB8 STR W8, [X19 + 0x10]
	0x03779CBC ADD X0, X19, 0x80
	0x03779CC0 BL 0x3777230
	0x03779CC4 TBZ X0, 0x0, 0x3779CE4
	0x03779CC8 ADD X1, X19, 0x98
	0x03779CCC ADD X0, X19, 0x18
	0x03779CD0 MOVZ W2, 0x50
	0x03779CD4 BL 0x3EB1AC0
	0x03779CD8 MOVZ W0, 0x1
	0x03779CDC STR W0, [X19 + 0x10]
	0x03779CE0 B 0x3779CE8
	0x03779CE4 MOV W0, W31
	0x03779CE8 LDR X8, [X20 + 0x28]
	0x03779CEC LDR X9, [X31 + 0x58]
	0x03779CF0 CMP X8, X9
	0x03779CF4 B.NE 0x3779D54
	0x03779CF8 LDP X20, X19, [X31 + 0x70]
	0x03779CFC LDR X30, [X31 + 0x60]
	0x03779D00 ADD X31, X31, 0x80
	0x03779D04 RET
	0x03779D08 ADRP X0, 0x97F000
	0x03779D0C LDR X0, [X0 + 0x528]
	0x03779D10 BL 0x1C16D08
	0x03779D14 BL 0x1C16F10
	0x03779D18 MOV X19, X0
	0x03779D1C ADRP X0, 0x985000
	0x03779D20 LDR X0, [X0 + 0x120]
	0x03779D24 BL 0x1C16D08
	0x03779D28 MOV X1, X0
	0x03779D2C MOV X0, X19
	0x03779D30 MOV X2, X31
	0x03779D34 BL 0x330E100
	0x03779D38 ADRP X0, 0x9CD000
	0x03779D3C LDR X0, [X0 + 0xE90]
	0x03779D40 BL 0x1C16D08
	0x03779D44 MOV X1, X0
	0x03779D48 MOV X0, X19
	0x03779D4C BL 0x1C16DEC
	0x03779D50 BL 0x1C16F20
	0x03779D54 BL 0x3EB1B20
	0x03779D58 ADD X1, X0, 0x18
	0x03779D5C MOVZ W2, 0x50
	0x03779D60 MOV X0, X8
	0x03779D64 B 0x3EB1AC0
	0x03779D68 STP X30, X19, [X31 - 0x10]!
	0x03779D6C ADRP X0, 0x97A000
	0x03779D70 LDR X0, [X0 + 0xB40]
	0x03779D74 BL 0x1C16D08
	0x03779D78 BL 0x1C16F10
	0x03779D7C MOV X1, X31
	0x03779D80 MOV X19, X0
	0x03779D84 BL 0x3380310
	0x03779D88 ADRP X0, 0x9CD000
	0x03779D8C LDR X0, [X0 + 0xE98]
	0x03779D90 BL 0x1C16D08
	0x03779D94 MOV X1, X0
	0x03779D98 MOV X0, X19
	0x03779D9C BL 0x1C16DEC
	0x03779DA0 SUB X31, X31, 0x70
	0x03779DA4 STP X30, X21, [X31 + 0x50]
	0x03779DA8 STP X20, X19, [X31 + 0x60]
	0x03779DAC ADRP X21, 0xC67000
	0x03779DB0 ADRP X20, 0x9CD000
	0x03779DB4 LDRB W8, [X21 + 0xF52]
	0x03779DB8 LDR X20, [X20 + 0xEA0]
	0x03779DBC MOV X19, X0
	0x03779DC0 TBNZ X8, 0x0, 0x3779DD8
	0x03779DC4 ADRP X0, 0x9CD000
	0x03779DC8 LDR X0, [X0 + 0xEA0]
	0x03779DCC BL 0x1C16CF4
	0x03779DD0 MOVZ W8, 0x1
	0x03779DD4 STRB W8, [X21 + 0xF52]
	0x03779DD8 ADD X1, X19, 0x18
	0x03779DDC ADD X0, X31, 0x0
	0x03779DE0 MOVZ W2, 0x50
	0x03779DE4 BL 0x3EB1AC0
	0x03779DE8 LDR X0, [X20]
	0x03779DEC ADD X1, X31, 0x0
	0x03779DF0 BL 0x1C16E04
	0x03779DF4 LDP X20, X19, [X31 + 0x60]
	0x03779DF8 LDP X30, X21, [X31 + 0x50]
	0x03779DFC ADD X31, X31, 0x70
	0x03779E00 RET
	0x03779E04 STR X30, [X31 - 0x20]!
	0x03779E08 STP X20, X19, [X31 + 0x10]
	0x03779E0C ADRP X20, 0xC67000
	0x03779E10 LDRB W8, [X20 + 0xF53]
	0x03779E14 MOV X19, X0
	0x03779E18 TBNZ X8, 0x0, 0x3779E30
	0x03779E1C ADRP X0, 0x9CD000
	0x03779E20 LDR X0, [X0 + 0xE58]
	0x03779E24 BL 0x1C16CF4
	0x03779E28 MOVZ W8, 0x1
	0x03779E2C STRB W8, [X20 + 0xF53]
	0x03779E30 LDR W8, [X19 + 0x10]
	0x03779E34 ADDS W31, W8, 0x2
	0x03779E38 B.NE 0x3779E5C
	0x03779E3C LDR W20, [X19 + 0x68]
	0x03779E40 MOV X0, X31
	0x03779E44 BL 0x33C151C
	0x03779E48 CMP W20, W0
	0x03779E4C B.NE 0x3779E5C
	0x03779E50 STR W31, [X19 + 0x10]
	0x03779E54 MOV X20, X19
	0x03779E58 B 0x3779E88
	0x03779E5C ADRP X8, 0x9CD000
	0x03779E60 LDR X8, [X8 + 0xE58]
	0x03779E64 LDR X0, [X8]
	0x03779E68 BL 0x1C16F10
	0x03779E6C MOV X1, X31
	0x03779E70 MOV X20, X0
	0x03779E74 BL 0x33BDD8C
	0x03779E78 MOV X0, X31
	0x03779E7C STR W31, [X20 + 0x10]
	0x03779E80 BL 0x33C151C
	0x03779E84 STR W0, [X20 + 0x68]
	0x03779E88 LDR X8, [X19 + 0x78]
	0x03779E8C MOV X0, X20
	0x03779E90 STR X8, [X20 + 0x70]
	0x03779E94 LDP X20, X19, [X31 + 0x10]
	0x03779E98 LDR X30, [X31], #0x20
	0x03779E9C RET
	0x03779EA0 B 0x3779E04
	0x03779EA4 STP X30, X21, [X31 - 0x20]!
	0x03779EA8 STP X20, X19, [X31 + 0x10]
	0x03779EAC ADRP X21, 0xC67000
	0x03779EB0 ADRP X20, 0x97A000
	0x03779EB4 LDRB W8, [X21 + 0xF54]
	0x03779EB8 LDR X20, [X20 + 0x6C0]
	0x03779EBC MOV X19, X0
	0x03779EC0 TBNZ X8, 0x0, 0x3779EE4
	0x03779EC4 ADRP X0, 0x9CD000
	0x03779EC8 LDR X0, [X0 + 0xEA8]
	0x03779ECC BL 0x1C16CF4
	0x03779ED0 ADRP X0, 0x97A000
	0x03779ED4 LDR X0, [X0 + 0x6C0]
	0x03779ED8 BL 0x1C16CF4
	0x03779EDC MOVZ W8, 0x1
	0x03779EE0 STRB W8, [X21 + 0xF54]
	0x03779EE4 LDR X0, [X20]
	0x03779EE8 LDR W8, [X0 + 0xE0]
	0x03779EEC CBNZ W8, 0x3779EF4
	0x03779EF0 BL 0x1C16DFC
	0x03779EF4 MOV X0, X19

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+64], X29
	003 Move [X31+72], X30
	004 Move [X31+80], X28
	005 Move [X31+88], X27
	006 Move [X31+96], X26
	007 Move [X31+104], X25
	008 Move [X31+112], X24
	009 Move [X31+120], X23
	010 Move [X31+128], X22
	011 Move [X31+136], X21
	012 Move [X31+144], X20
	013 Move [X31+152], X19
	014 Move X22, 0xC68000
	015 Move W8, [X22+3909]
	016 Move W21, W2
	017 Move X20, X1
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {43}
	023 Move X0, 0x97B000
	024 Move X0, [X0+3584]
	025 Call 0x1C17CF4
	026 Move X0, 0x9CE000
	027 Move X0, [X0+3648]
	028 Call 0x1C17CF4
	029 Move X0, 0x97B000
	030 Move X0, [X0+3608]
	031 Call 0x1C17CF4
	032 Move X0, 0x9CE000
	033 Move X0, [X0+3656]
	034 Call 0x1C17CF4
	035 Move X0, 0x9A3000
	036 Move X0, [X0+3528]
	037 Call 0x1C17CF4
	038 Move X0, 0x9A3000
	039 Move X0, [X0+3536]
	040 Call 0x1C17CF4
	041 Move W8, 1
	042 Move [X22+3909], W8
	043 Move X27, 0x9A3000
	044 Move X27, [X27+3536]
	045 Add X0, X19, 48
	046 Move X1, X31
	047 Move [X31+48], X31
	048 Move [X31+56], X31
	049 Move [X31+32], X31
	050 Move [X31+40], X31
	051 Move [X31+16], X31
	052 Move [X31+24], X31
	053 Call Substring.get_isEmpty, X0
	054 Move TEMP, X0
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfNotEqual {59}
	058 Move W25, W31
	059 Move X0, [X19+48]
	060 Move X1, [X19+56]
	061 Move X2, [X20]
	062 Move X3, [X20+8]
	063 Call InputControlPath.StringMatches, X0, X1
	064 Move TEMP, X0
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfNotEqual {191}
	068 Move W25, 1
	069 Move X8, 0x9CE000
	070 Move X8, [X8+3656]
	071 Move X28, 0x97B000
	072 Move X28, [X28+3608]
	073 Move X29, 0x9CE000
	074 Move X1, [X8]
	075 Move X24, 0x97B000
	076 Move X29, [X29+3648]
	077 Move X24, [X24+3584]
	078 Add X0, X19, 16
	079 Call InlinedArray`1<Substring>.GetEnumerator, X0
	080 Move X19, X0
	081 Move W26, W31
	082 Compare X19, 0
	083 JumpIfEqual {254}
	084 Move X8, [X19]
	085 Move X1, [X28]
	086 NotImplemented "Instruction LDRH not yet implemented."
	087 Compare X9, 0
	088 JumpIfEqual {95}
	089 Move X10, [X8+176]
	090 Add X10, X10, 8
	091 NotImplemented "Instruction LDUR not yet implemented."
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Subtract X9, X9, 1
	094 Add X10, X10, 16
	095 Move X0, X19
	096 Move W2, W31
	097 Call 0x1C5D788
	098 NotImplemented "Instruction LDRSW not yet implemented."
	099 Add X8, X8, X9
	100 Add X0, X8, 312
	101 Move X8, [X0]
	102 Move X1, [X0+8]
	103 Move X0, X19
	104 NotImplemented "Instruction BLR not yet implemented."
	105 Move TEMP, X0
	106 And TEMP, TEMP, 1
	107 Compare TEMP, 1
	108 JumpIfNotEqual {173}
	109 Move X8, [X19]
	110 Move X1, [X29]
	111 NotImplemented "Instruction LDRH not yet implemented."
	112 Compare X9, 0
	113 JumpIfEqual {120}
	114 Move X10, [X8+176]
	115 Add X10, X10, 8
	116 NotImplemented "Instruction LDUR not yet implemented."
	117 NotImplemented "Instruction CMP not yet implemented."
	118 Subtract X9, X9, 1
	119 Add X10, X10, 16
	120 Move X0, X19
	121 Move W2, W31
	122 Call 0x1C5D788
	123 NotImplemented "Instruction LDRSW not yet implemented."
	124 Add X8, X8, X9
	125 Add X0, X8, 312
	126 Move X8, [X0]
	127 Move X1, [X0+8]
	128 Move X0, X19
	129 NotImplemented "Instruction BLR not yet implemented."
	130 Move [X31+32], X0
	131 Move [X31+40], X1
	132 Add X0, X31, 32
	133 Move X1, X31
	134 Call Substring.get_isEmpty, X0
	135 Move TEMP, X0
	136 And TEMP, TEMP, 1
	137 Compare TEMP, 1
	138 JumpIfEqual {82}
	139 Move X8, [X20+72]
	140 Move X9, [X20+80]
	141 Move X10, X9
	142 ShiftRight X10, 32
	143 And X10, X10, 0x7FFFFFFF
	144 NotImplemented "Instruction CMP not yet implemented."
	145 Move [X31+16], X8
	146 Move [X31+24], X9
	147 Move [X31+8], W26
	148 Move W21, W31
	149 Subtract W26, W10, 1
	150 Move X22, [X31+32]
	151 Move X23, [X31+40]
	152 Move X2, [X27]
	153 Move [X31+16], X8
	154 Move [X31+24], X9
	155 Add X0, X31, 16
	156 Move W1, W21
	157 Call ReadOnlyArray`1<InternedString>.get_Item, X0, X1
	158 Move X2, X0
	159 Move X3, X1
	160 Move X0, X22
	161 Move X1, X23
	162 Call InputControlPath.StringMatches, X0, X1
	163 Move TEMP, X0
	164 And TEMP, TEMP, 1
	165 Compare TEMP, 1
	166 JumpIfEqual {171}
	167 NotImplemented "Instruction CMP not yet implemented."
	168 Add W21, W21, 1
	169 Move X8, [X20+72]
	170 Move X9, [X20+80]
	171 Move W26, 1
	172 Move W26, [X31+8]
	173 Move X20, X31
	174 Move W21, 13
	175 Compare X19, 0
	176 JumpIfEqual {229}
	177 Move X8, [X19]
	178 Move X1, [X24]
	179 NotImplemented "Instruction LDRH not yet implemented."
	180 Compare X9, 0
	181 JumpIfEqual {188}
	182 Move X10, [X8+176]
	183 Add X10, X10, 8
	184 NotImplemented "Instruction LDUR not yet implemented."
	185 NotImplemented "Instruction CMP not yet implemented."
	186 Subtract X9, X9, 1
	187 Add X10, X10, 16
	188 Move X0, X19
	189 Move W2, W31
	190 Call 0x1C5D788
	191 Move TEMP, X21
	192 And TEMP, TEMP, 1
	193 Compare TEMP, 1
	194 JumpIfNotEqual {253}
	195 Move X9, [X20+88]
	196 Move X8, [X20+96]
	197 Move X10, X8
	198 ShiftRight X10, 32
	199 And X10, X10, 0x7FFFFFFF
	200 NotImplemented "Instruction CMP not yet implemented."
	201 Move [X31+48], X9
	202 Move [X31+56], X8
	203 Move W21, W31
	204 Move X2, [X27]
	205 Move X22, [X19+48]
	206 Move X23, [X19+56]
	207 Add X0, X31, 48
	208 Move W1, W21
	209 Call ReadOnlyArray`1<InternedString>.get_Item, X0, X1
	210 Move X2, X0
	211 Move X3, X1
	212 Move X0, X22
	213 Move X1, X23
	214 Call InputControlPath.StringMatches, X0, X1
	215 Move TEMP, X0
	216 And TEMP, TEMP, 1
	217 Compare TEMP, 1
	218 JumpIfEqual {68}
	219 Move W8, [X31+60]
	220 Add W21, W21, 1
	221 NotImplemented "Instruction CMP not yet implemented."
	222 NotImplemented "Instruction LDRSW not yet implemented."
	223 Add X8, X8, X9
	224 Add X0, X8, 312
	225 Move X8, [X0]
	226 Move X1, [X0+8]
	227 Move X0, X19
	228 NotImplemented "Instruction BLR not yet implemented."
	229 Compare X20, 0
	230 JumpIfNotEqual {255}
	231 NotImplemented "Instruction CMP not yet implemented."
	232 Compare W21, 0
	233 JumpIfNotEqual {238}
	234 And W8, W26, 1
	235 Or W8, W25, W8
	236 NotImplemented "Instruction CMP not yet implemented."
	237 NotImplemented "Instruction CSET not yet implemented."
	238 Move X20, [X31+144]
	239 Move X19, [X31+152]
	240 Move X22, [X31+128]
	241 Move X21, [X31+136]
	242 Move X24, [X31+112]
	243 Move X23, [X31+120]
	244 Move X26, [X31+96]
	245 Move X25, [X31+104]
	246 Move X28, [X31+80]
	247 Move X27, [X31+88]
	248 Move X29, [X31+64]
	249 Move X30, [X31+72]
	250 And W0, W8, 1
	251 Add X31, X31, 160
	252 Return X0
	253 Move W8, W31
	254 Call 0x1C17F20
	255 Move X0, X20
	256 Call 0x1C17F18
	257 Move W26, [X31+8]
	258 Move W26, W31
	259 NotImplemented "Instruction CMP not yet implemented."
	260 Call 0x3EB2AD0
	261 Move X20, [X0]
	262 Call 0x3EB2AE0
	263 Move W21, W31
	264 Compare X19, 0
	265 JumpIfNotEqual {177}
	266 Move [X31+8], X0
	267 Move X20, X31
	268 Move [X31+8], X0
	269 Compare X19, 0
	270 JumpIfEqual {292}
	271 Move X8, [X19]
	272 Move X1, [X24]
	273 NotImplemented "Instruction LDRH not yet implemented."
	274 Compare X9, 0
	275 JumpIfEqual {282}
	276 Move X10, [X8+176]
	277 Add X10, X10, 8
	278 NotImplemented "Instruction LDUR not yet implemented."
	279 NotImplemented "Instruction CMP not yet implemented."
	280 Subtract X9, X9, 1
	281 Add X10, X10, 16
	282 Move X0, X19
	283 Move W2, W31
	284 Call 0x1C5D788
	285 NotImplemented "Instruction LDRSW not yet implemented."
	286 Add X8, X8, X9
	287 Add X0, X8, 312
	288 Move X8, [X0]
	289 Move X1, [X0+8]
	290 Move X0, X19
	291 NotImplemented "Instruction BLR not yet implemented."
	292 Compare X20, 0
	293 JumpIfNotEqual {296}
	294 Move X0, [X31+8]
	295 Call 0x1D2D690
	296 Move X0, X20
	297 Call 0x1C17F18
	298 Call 0x1991590

Method: System.Boolean MatchesPrefix(System.String expected, UnityEngine.InputSystem.InputControl control)

Disassembly:
	0x03779EF8 MOV X1, X31
	0x03779EFC MOV X2, X31
	0x03779F00 BL 0x3395194
	0x03779F04 TBNZ X0, 0x0, 0x3779F4C
	0x03779F08 ADRP X8, 0x9CD000
	0x03779F0C LDR X0, [X20]
	0x03779F10 LDR X8, [X8 + 0xEA8]
	0x03779F14 LDR W9, [X0 + 0xE0]
	0x03779F18 LDR X20, [X8]
	0x03779F1C CBNZ W9, 0x3779F24
	0x03779F20 BL 0x1C16DFC
	0x03779F24 MOV X0, X20
	0x03779F28 MOV X1, X31
	0x03779F2C BL 0x338C698
	0x03779F30 MOV X1, X0
	0x03779F34 MOV X0, X19
	0x03779F38 LDP X20, X19, [X31 + 0x10]
	0x03779F3C MOV W2, W31
	0x03779F40 MOV X3, X31
	0x03779F44 LDP X30, X21, [X31], #0x20
	0x03779F48 B 0x37693C0
	0x03779F4C ADRP X0, 0x97F000
	0x03779F50 LDR X0, [X0 + 0x528]
	0x03779F54 BL 0x1C16D08
	0x03779F58 BL 0x1C16F10
	0x03779F5C MOV X19, X0
	0x03779F60 ADRP X0, 0x9CD000
	0x03779F64 LDR X0, [X0 + 0xEB0]
	0x03779F68 BL 0x1C16D08
	0x03779F6C MOV X1, X0
	0x03779F70 MOV X0, X19
	0x03779F74 MOV X2, X31
	0x03779F78 BL 0x330E100
	0x03779F7C ADRP X0, 0x9CD000
	0x03779F80 LDR X0, [X0 + 0xEB8]
	0x03779F84 BL 0x1C16D08
	0x03779F88 MOV X1, X0
	0x03779F8C MOV X0, X19
	0x03779F90 BL 0x1C16DEC
	0x03779F94 MOV W0, W31
	0x03779F98 RET
	0x03779F9C MOV X1, X31
	0x03779FA0 B 0x33BDD8C
	0x03779FA4 LDR X0, [X0 + 0x170]
	0x03779FA8 RET
	0x03779FAC STR X1, [X0 + 0x170]
	0x03779FB0 RET
	0x03779FB4 LDR X0, [X0 + 0x178]
	0x03779FB8 RET
	0x03779FBC STR X1, [X0 + 0x178]
	0x03779FC0 RET
	0x03779FC4 LDR X0, [X0 + 0x180]
	0x03779FC8 RET
	0x03779FCC STR X1, [X0 + 0x180]
	0x03779FD0 RET
	0x03779FD4 LDR X0, [X0 + 0x188]
	0x03779FD8 RET
	0x03779FDC STR X1, [X0 + 0x188]
	0x03779FE0 RET
	0x03779FE4 LDR X0, [X0 + 0x190]
	0x03779FE8 RET
	0x03779FEC STR X1, [X0 + 0x190]
	0x03779FF0 RET

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+112], X30
	003 Move [X31+128], X20
	004 Move [X31+136], X19
	005 Move X19, X1
	006 Move X1, X31
	007 Move X20, X0
	008 Move [X31+8], X31
	009 Move [X31+16], X31
	010 Move [X31+24], X31
	011 Call String.IsNullOrEmpty, X0
	012 Move TEMP, X0
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {49}
	016 Compare X19, 0
	017 JumpIfEqual {56}
	018 Move [X31+8], X20
	019 Compare X20, 0
	020 JumpIfEqual {74}
	021 Move W8, [X20+16]
	022 NotImplemented "Instruction MOVI not yet implemented."
	023 Add X0, X31, 8
	024 Move W2, 1
	025 Move X1, X19
	026 Move [X31+20], W31
	027 Move [X31+24], W31
	028 Move [X31+32], V0
	029 Move [X31+40], V0
	030 Move [X31+64], V0
	031 Move [X31+72], V0
	032 Move [X31+16], W8
	033 Move [X31+96], V0
	034 Call InputControlPath.MatchesRecursive, X0, X1, X2
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfNotEqual {43}
	039 Move W8, [X31+24]
	040 Move W9, [X31+16]
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move W0, 1
	043 Move W0, W31
	044 Move X20, [X31+128]
	045 Move X19, [X31+136]
	046 Move X30, [X31+112]
	047 Add X31, X31, 144
	048 Return X0
	049 Move X0, 0x980000
	050 Move X0, [X0+1320]
	051 Call 0x1C17D08
	052 Call 0x1C17F10
	053 Move X19, X0
	054 Move X0, 0x9CE000
	055 Move X0, [X0+3472]
	056 Move X0, 0x980000
	057 Move X0, [X0+1320]
	058 Call 0x1C17D08
	059 Call 0x1C17F10
	060 Move X19, X0
	061 Move X0, 0x9A3000
	062 Move X0, [X0+3424]
	063 Call 0x1C17D08
	064 Move X1, X0
	065 Move X0, X19
	066 Move X2, X31
	067 Call ArgumentNullException..ctor, X0, X1
	068 Move X0, 0x9CE000
	069 Move X0, [X0+3664]
	070 Call 0x1C17D08
	071 Move X1, X0
	072 Move X0, X19
	073 Call 0x1C17DEC
	074 Call 0x1C17F20

Method: System.Boolean MatchesRecursive(ref UnityEngine.InputSystem.InputControlPath/PathParser parser, UnityEngine.InputSystem.InputControl currentControl, System.Boolean prefixOnly = False)

Disassembly:
	0x03779A80 MOV X1, X31
	0x03779A84 BL 0x3768AFC
	0x03779A88 LDR X30, [X31 + 0x10]
	0x03779A8C ADD X31, X31, 0x20
	0x03779A90 RET
	0x03779A94 SUB X31, X31, 0x40
	0x03779A98 STR X30, [X31 + 0x10]
	0x03779A9C STP X22, X21, [X31 + 0x20]
	0x03779AA0 STP X20, X19, [X31 + 0x30]
	0x03779AA4 LDR W19, [X0 + 0x10]
	0x03779AA8 AND W8, W1, 0xFFFF
	0x03779AAC MOV W21, W1
	0x03779AB0 MOV X20, X0
	0x03779AB4 CMP W8, 0x2F
	0x03779AB8 B.EQ 0x3779AC4
	0x03779ABC ADD W19, W19, 0x1
	0x03779AC0 STR W19, [X20 + 0x10]
	0x03779AC4 LDR W8, [X20 + 0x8]
	0x03779AC8 MOV W1, W19
	0x03779ACC CMP W19, W8
	0x03779AD0 B.GE 0x3779B44
	0x03779AD4 MOVZ W22, 0x5C
	0x03779AD8 MOV W1, W19
	0x03779ADC LDR X0, [X20]
	0x03779AE0 CBZ X0, 0x3779B98
	0x03779AE4 MOV X2, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Compare X1, 0
	006 JumpIfEqual {41}
	007 Move X20, X1
	008 Move X1, [X1+128]
	009 Move W19, W2
	010 Move X21, X0
	011 Compare X1, 0
	012 JumpIfEqual {20}
	013 And W2, W19, 1
	014 Move X0, X21
	015 Call InputControlPath.MatchesRecursive, X0, X1, X2
	016 Move TEMP, X0
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfNotEqual {34}
	020 Move X0, X21
	021 Call PathParser.MoveToNextComponent, X0
	022 Move TEMP, X0
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfNotEqual {35}
	026 Move X1, X20
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Add X0, X21, 24
	030 Move X30, [X31+32]
	031 Move X21, [X31+40]
	032 Call ParsedPathComponent.Matches, X0, X1
	033 Return X0
	034 Move W19, W31
	035 And W0, W19, 1
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move X30, [X31+32]
	039 Move X21, [X31+40]
	040 Return X0
	041 Call 0x1C17F20

Method: TControl MatchControlsRecursive(UnityEngine.InputSystem.InputControl control, System.String path, System.Int32 indexInPath, ref UnityEngine.InputSystem.InputControlList`1<TControl> matches, System.Boolean matchMultiple)

Disassembly:
	0x02200534 STP X22, X21, [X31 + 0x40]
	0x02200538 STP X20, X19, [X31 + 0x50]
	0x0220053C SUB X31, X31, 0x280
	0x02200540 STR X1, [X31 + 0x200]
	0x02200544 STR X2, [X31 + 0x208]
	0x02200548 LDR X8, [X7 + 0x38]
	0x0220054C MOV X22, X7
	0x02200550 MOV W23, W6
	0x02200554 MOV X24, X5
	0x02200558 MOV X25, X0
	0x0220055C STP X4, X3, [X31 + 0x8]
	0x02200560 CBNZ X8, 0x22005F0
	0x02200564 ADRP X0, 0x1EF3000
	0x02200568 LDR X0, [X0 + 0xE00]
	0x0220056C BL 0x1C16CF4
	0x02200570 ADRP X0, 0x1F1B000
	0x02200574 LDR X0, [X0 + 0xDF8]
	0x02200578 BL 0x1C16CF4
	0x0220057C ADRP X0, 0x1EF3000
	0x02200580 LDR X0, [X0 + 0xE18]
	0x02200584 BL 0x1C16CF4
	0x02200588 ADRP X0, 0x1F1B000
	0x0220058C LDR X0, [X0 + 0xE00]
	0x02200590 BL 0x1C16CF4
	0x02200594 ADRP X0, 0x1F1B000
	0x02200598 LDR X0, [X0 + 0xE08]
	0x0220059C BL 0x1C16CF4
	0x022005A0 ADRP X0, 0x1F1B000
	0x022005A4 LDR X0, [X0 + 0xE10]
	0x022005A8 BL 0x1C16CF4
	0x022005AC ADRP X0, 0x1F1B000
	0x022005B0 LDR X0, [X0 + 0xDE8]
	0x022005B4 BL 0x1C16CF4
	0x022005B8 ADRP X0, 0x1F1B000
	0x022005BC LDR X0, [X0 + 0xE18]
	0x022005C0 BL 0x1C16CF4
	0x022005C4 ADRP X0, 0x1F1B000
	0x022005C8 LDR X0, [X0 + 0xE20]
	0x022005CC BL 0x1C16CF4
	0x022005D0 ADRP X0, 0x1F1B000
	0x022005D4 LDR X0, [X0 + 0xE28]
	0x022005D8 BL 0x1C16CF4
	0x022005DC LDR X8, [X22 + 0x38]
	0x022005E0 CBNZ X8, 0x22005F0
	0x022005E4 MOV X0, X22
	0x022005E8 BL 0x1C5C6E0
	0x022005EC LDR X8, [X22 + 0x38]
	0x022005F0 MOVI V0.2D, 0x0
	0x022005F4 STP X31, X31, [X31 + 0x160]
	0x022005F8 STR X31, [X31 + 0x170]
	0x022005FC STR X31, [X31 + 0x1F0]
	0x02200600 STP V0, V0, [X31 + 0x140]
	0x02200604 STP V0, V0, [X31 + 0x120]
	0x02200608 STP V0, V0, [X31 + 0x100]
	0x0220060C STP V0, V0, [X31 + 0xE0]
	0x02200610 STP V0, V0, [X31 + 0xC0]
	0x02200614 STP V0, V0, [X31 + 0xA0]
	0x02200618 STP V0, V0, [X31 + 0x1D0]
	0x0220061C STP V0, V0, [X31 + 0x1B0]
	0x02200620 STP V0, V0, [X31 + 0x190]
	0x02200624 STR V0, [X31 + 0x18]
	0x02200628 LDR X1, [X8 + 0x10]
	0x0220062C ADD X0, X31, 0x200
	0x02200630 BL 0x24FC5F4
	0x02200634 MOV X21, X0
	0x02200638 CBZ X0, 0x22009A8
	0x0220063C ADD X8, X31, 0x1A0
	0x02200640 ADRP X28, 0x1EF3000
	0x02200644 ADRP X29, 0x1F1B000
	0x02200648 ADRP X20, 0x1F1B000
	0x0220064C ADRP X19, 0x1F1B000
	0x02200650 ORR X8, X8, 0xF
	0x02200654 LDR X28, [X28 + 0xE18]
	0x02200658 LDR X29, [X29 + 0xDF8]
	0x0220065C LDR X20, [X20 + 0xE18]
	0x02200660 LDR X19, [X19 + 0xDE8]
	0x02200664 STR X8, [X31 + 0x18]
	0x02200668 ADRP X26, 0x1F1B000
	0x0220066C LDR X26, [X26 + 0xE00]
	0x02200670 LDR X8, [X21]
	0x02200674 LDR X1, [X28]
	0x02200678 LDRH W9, [X8 + 0x12E]
	0x0220067C CBZ X9, 0x22006A0
	0x02200680 LDR X10, [X8 + 0xB0]
	0x02200684 ADD X10, X10, 0x8
	0x02200688 LDUR X11, [X10 - 0x8]
	0x0220068C CMP X11, X1
	0x02200690 B.EQ 0x22006B0
	0x02200694 SUBS X9, X9, 0x1
	0x02200698 ADD X10, X10, 0x10
	0x0220069C B.NE 0x2200688
	0x022006A0 MOV X0, X21
	0x022006A4 MOV W2, W31
	0x022006A8 BL 0x1C5C788
	0x022006AC B 0x22006BC
	0x022006B0 LDRSW X9, [X10]
	0x022006B4 ADD X8, X8, X9, 0x4, LSL
	0x022006B8 ADD X0, X8, 0x138
	0x022006BC LDP X8, X1, [X0]
	0x022006C0 MOV X0, X21
	0x022006C4 BLR X8
	0x022006C8 TBZ X0, 0x0, 0x22008D0
	0x022006CC LDR X8, [X21]
	0x022006D0 LDR X1, [X29]
	0x022006D4 LDRH W9, [X8 + 0x12E]
	0x022006D8 CBZ X9, 0x22006FC
	0x022006DC LDR X10, [X8 + 0xB0]
	0x022006E0 ADD X10, X10, 0x8
	0x022006E4 LDUR X11, [X10 - 0x8]
	0x022006E8 CMP X11, X1
	0x022006EC B.EQ 0x220070C
	0x022006F0 SUBS X9, X9, 0x1
	0x022006F4 ADD X10, X10, 0x10
	0x022006F8 B.NE 0x22006E4
	0x022006FC MOV X0, X21
	0x02200700 MOV W2, W31
	0x02200704 BL 0x1C5C788
	0x02200708 B 0x2200718
	0x0220070C LDRSW X9, [X10]
	0x02200710 ADD X8, X8, X9, 0x4, LSL
	0x02200714 ADD X0, X8, 0x138
	0x02200718 LDP X9, X1, [X0]
	0x0220071C ADD X8, X31, 0x20
	0x02200720 MOV X0, X21
	0x02200724 BLR X9
	0x02200728 LDR V0, [X31 + 0x2]
	0x0220072C LDR X8, [X31 + 0x30]
	0x02200730 STR V0, [X31 + 0x16]
	0x02200734 STR X8, [X31 + 0x170]
	0x02200738 LDP V1, V0, [X25]
	0x0220073C STP V1, V0, [X31 + 0x80]
	0x02200740 LDR X8, [X22 + 0x38]
	0x02200744 LDR X3, [X8 + 0x18]
	0x02200748 STP V1, V0, [X31 + 0x230]
	0x0220074C ADD X8, X31, 0x20
	0x02200750 ADD X0, X31, 0x160
	0x02200754 ADD X1, X31, 0x230
	0x02200758 MOV X2, X24
	0x0220075C BL 0x2201CE4
	0x02200760 ADD X0, X31, 0x110
	0x02200764 ADD X1, X31, 0x20
	0x02200768 MOVZ W2, 0x50
	0x0220076C BL 0x3EB1AC0
	0x02200770 ADD X0, X31, 0x110
	0x02200774 MOV X1, X31
	0x02200778 BL 0x376B9BC
	0x0220077C TBNZ X0, 0x0, 0x2200790
	0x02200780 LDR V0, [X31 + 0x114]
	0x02200784 FCMP S0, 0x0
	0x02200788 B.LS 0x22008A0
	0x0220078C TBZ X23, 0x0, 0x22008A0
	0x02200790 CBZ X24, 0x22007C0
	0x02200794 ADD X8, X31, 0x20
	0x02200798 ADD X0, X31, 0x110
	0x0220079C MOV X1, X31
	0x022007A0 BL 0x376B9EC
	0x022007A4 LDP V0, V1, [X31 + 0x20]
	0x022007A8 LDR X2, [X26]
	0x022007AC STP V0, V1, [X31 + 0xF0]
	0x022007B0 ADD X0, X31, 0xF0
	0x022007B4 MOV X1, X24
	0x022007B8 BL 0x2DFB648
	0x022007BC TBZ X0, 0x0, 0x22008B0
	0x022007C0 LDRB W8, [X31 + 0x1A0]
	0x022007C4 CBZ W8, 0x2200824
	0x022007C8 ADRP X8, 0x1F1B000
	0x022007CC LDR X8, [X8 + 0xE28]
	0x022007D0 LDR X1, [X8]
	0x022007D4 ADD X8, X31, 0x20
	0x022007D8 ADD X0, X31, 0x1A0
	0x022007DC BL 0x243E768
	0x022007E0 ADD X0, X31, 0xA0
	0x022007E4 ADD X1, X31, 0x20
	0x022007E8 MOVZ W2, 0x50
	0x022007EC BL 0x3EB1AC0
	0x022007F0 LDR V0, [X31 + 0xA4]
	0x022007F4 LDR V1, [X31 + 0x114]
	0x022007F8 FCMP S0, S1
	0x022007FC B.GE 0x22008C0
	0x02200800 LDRB W8, [X31 + 0x1A0]
	0x02200804 CBZ W8, 0x2200824
	0x02200808 LDR X1, [X31 + 0x18]
	0x0220080C ADD X0, X31, 0xA0
	0x02200810 MOVZ W2, 0x50
	0x02200814 BL 0x3EB1AC0
	0x02200818 ADD X0, X31, 0xA0
	0x0220081C MOV X1, X31
	0x02200820 BL 0x376BC1C
	0x02200824 LDR X27, [X20]
	0x02200828 MOVI V0.2D, 0x0
	0x0220082C ADD X0, X31, 0x230
	0x02200830 ADD X1, X31, 0x110
	0x02200834 MOVZ W2, 0x50
	0x02200838 STR X31, [X31 + 0x70]
	0x0220083C STP V0, V0, [X31 + 0x50]
	0x02200840 STP V0, V0, [X31 + 0x30]
	0x02200844 STR V0, [X31 + 0x2]
	0x02200848 BL 0x3EB1AC0
	0x0220084C ADD X0, X31, 0x20
	0x02200850 ADD X1, X31, 0x230
	0x02200854 MOV X2, X27
	0x02200858 BL 0x243E73C
	0x0220085C ADD X0, X31, 0x1A0
	0x02200860 ADD X1, X31, 0x20
	0x02200864 MOVZ W2, 0x58
	0x02200868 BL 0x3EB1AC0
	0x0220086C LDR V0, [X31 + 0x16]
	0x02200870 LDR X8, [X31 + 0x170]
	0x02200874 LDR X2, [X19]
	0x02200878 MOVI V1.2D, 0x0
	0x0220087C STP V1, V1, [X31 + 0x230]
	0x02200880 STR V0, [X31 + 0x21]
	0x02200884 STR X8, [X31 + 0x220]
	0x02200888 ADD X0, X31, 0x230
	0x0220088C ADD X1, X31, 0x210
	0x02200890 BL 0x2432978
	0x02200894 LDP V0, V1, [X31 + 0x230]
	0x02200898 STP V0, V1, [X31 + 0x180]
	0x0220089C B 0x2200670
	0x022008A0 ADD X0, X31, 0x110
	0x022008A4 MOV X1, X31
	0x022008A8 BL 0x376BC1C
	0x022008AC B 0x2200670
	0x022008B0 ADD X0, X31, 0x110
	0x022008B4 MOV X1, X31
	0x022008B8 BL 0x376BC1C
	0x022008BC B 0x2200670
	0x022008C0 ADD X0, X31, 0x110
	0x022008C4 MOV X1, X31
	0x022008C8 BL 0x376BC1C
	0x022008CC B 0x2200670
	0x022008D0 MOV X22, X31
	0x022008D4 MOVZ W19, 0xB
	0x022008D8 CBZ X21, 0x220093C
	0x022008DC ADRP X10, 0x1EF3000
	0x022008E0 LDR X8, [X21]
	0x022008E4 LDR X10, [X10 + 0xE00]
	0x022008E8 LDRH W9, [X8 + 0x12E]
	0x022008EC LDR X1, [X10]
	0x022008F0 CBZ X9, 0x2200914
	0x022008F4 LDR X10, [X8 + 0xB0]
	0x022008F8 ADD X10, X10, 0x8
	0x022008FC LDUR X11, [X10 - 0x8]
	0x02200900 CMP X11, X1
	0x02200904 B.EQ 0x2200924
	0x02200908 SUBS X9, X9, 0x1
	0x0220090C ADD X10, X10, 0x10
	0x02200910 B.NE 0x22008FC
	0x02200914 MOV X0, X21
	0x02200918 MOV W2, W31
	0x0220091C BL 0x1C5C788
	0x02200920 B 0x2200930
	0x02200924 LDRSW X9, [X10]
	0x02200928 ADD X8, X8, X9, 0x4, LSL
	0x0220092C ADD X0, X8, 0x138
	0x02200930 LDP X8, X1, [X0]
	0x02200934 MOV X0, X21
	0x02200938 BLR X8
	0x0220093C CBNZ X22, 0x22009AC
	0x02200940 CMP W19, 0xB
	0x02200944 B.EQ 0x220094C
	0x02200948 CBNZ W19, 0x2200984
	0x0220094C LDR X0, [X31 + 0x8]
	0x02200950 ADD X8, X31, 0x1A0
	0x02200954 ORR X1, X8, 0xF
	0x02200958 MOVZ W2, 0x50
	0x0220095C BL 0x3EB1AC0
	0x02200960 ADD X9, X31, 0x89
	0x02200964 LDR X8, [X31 + 0x198]
	0x02200968 LDUR V0, [X9 + 0xFF]
	0x0220096C LDR X9, [X31 + 0x10]
	0x02200970 STR X8, [X9 + 0x10]
	0x02200974 STR V0, [X9]
	0x02200978 LDRB W8, [X31 + 0x1A0]
	0x0220097C CMP W8, 0x0
	0x02200980 CSET W8, NE
	0x02200984 AND W0, W8, 0x1
	0x02200988 ADD X31, X31, 0x280
	0x0220098C LDP X20, X19, [X31 + 0x50]
	0x02200990 LDP X22, X21, [X31 + 0x40]
	0x02200994 LDP X24, X23, [X31 + 0x30]
	0x02200998 LDP X26, X25, [X31 + 0x20]
	0x0220099C LDP X28, X27, [X31 + 0x10]
	0x022009A0 LDP X29, X30, [X31], #0x60
	0x022009A4 RET
	0x022009A8 BL 0x1C16F20
	0x022009AC MOV X0, X22
	0x022009B0 BL 0x1C16F18
	0x022009B4 B 0x22009E0
	0x022009B8 B 0x22009E0
	0x022009BC B 0x22009E0
	0x022009C0 B 0x22009E0
	0x022009C4 B 0x22009E0
	0x022009C8 B 0x22009E0
	0x022009CC B 0x22009E0
	0x022009D0 B 0x22009E0
	0x022009D4 B 0x22009E0
	0x022009D8 B 0x22009E0
	0x022009DC B 0x22009E0
	0x022009E0 MOV X23, X0
	0x022009E4 CMP W1, 0x1
	0x022009E8 B.NE 0x2200A08
	0x022009EC MOV X0, X23
	0x022009F0 BL 0x3EB1AD0
	0x022009F4 LDR X22, [X0]
	0x022009F8 BL 0x3EB1AE0
	0x022009FC MOV W19, W31
	0x02200A00 CBNZ X21, 0x22008DC
	0x02200A04 B 0x220093C
	0x02200A08 MOV X22, X31
	0x02200A0C B 0x2200A14
	0x02200A10 MOV X23, X0
	0x02200A14 CBZ X21, 0x2200A78
	0x02200A18 ADRP X10, 0x1EF3000
	0x02200A1C LDR X8, [X21]
	0x02200A20 LDR X10, [X10 + 0xE00]
	0x02200A24 LDRH W9, [X8 + 0x12E]
	0x02200A28 LDR X1, [X10]
	0x02200A2C CBZ X9, 0x2200A50
	0x02200A30 LDR X10, [X8 + 0xB0]
	0x02200A34 ADD X10, X10, 0x8
	0x02200A38 LDUR X11, [X10 - 0x8]
	0x02200A3C CMP X11, X1
	0x02200A40 B.EQ 0x2200A60
	0x02200A44 SUBS X9, X9, 0x1
	0x02200A48 ADD X10, X10, 0x10
	0x02200A4C B.NE 0x2200A38
	0x02200A50 MOV X0, X21

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+48], X30
	003 Move [X31+56], X27
	004 Move [X31+64], X26
	005 Move [X31+72], X25
	006 Move [X31+80], X24
	007 Move [X31+88], X23
	008 Move [X31+96], X22
	009 Move [X31+104], X21
	010 Move [X31+112], X20
	011 Move [X31+120], X19
	012 Move [X31+44], W2
	013 Move X8, [X5+56]
	014 Move X21, X5
	015 Move W20, W4
	016 Move X19, X3
	017 Move W24, W2
	018 Move X23, X1
	019 Move X22, X0
	020 Compare X8, 0
	021 JumpIfNotEqual {39}
	022 Move X0, 0x1F1C000
	023 Move X0, [X0+3512]
	024 Call 0x1C17CF4
	025 Move X0, 0x1F1C000
	026 Move X0, [X0+3520]
	027 Call 0x1C17CF4
	028 Move X0, 0x1F1C000
	029 Move X0, [X0+3528]
	030 Call 0x1C17CF4
	031 Move X0, 0x1F1C000
	032 Move X0, [X0+3536]
	033 Call 0x1C17CF4
	034 Move X8, [X21+56]
	035 Compare X8, 0
	036 JumpIfNotEqual {39}
	037 Move X0, X21
	038 Call 0x1C5D6E0
	039 Move [X31+16], X31
	040 Move [X31+24], X31
	041 Move [X31], X31
	042 Move [X31+8], X31
	043 Compare X23, 0
	044 JumpIfEqual {377}
	045 Move W26, [X23+16]
	046 Move X0, X23
	047 Move W1, W24
	048 Move X2, X31
	049 Call String.get_Chars, X0, X1
	050 And W8, W0, 0xFFFF
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Add W8, W24, 1
	053 Move [X31+44], W8
	054 Compare X22, 0
	055 JumpIfEqual {377}
	056 Move X0, X22
	057 Move X1, X31
	058 Call InputControl.get_layout, X0
	059 Add X2, X31, 44
	060 Move W3, 3
	061 Move X1, X23
	062 Move W4, W31
	063 Move X5, X31
	064 Call InputControlPath.MatchPathComponent, X0, X1, X2, X3, X4
	065 Move TEMP, X0
	066 And TEMP, TEMP, 1
	067 Compare TEMP, 1
	068 JumpIfNotEqual {315}
	069 Move W24, 1
	070 Move X27, 0x1F1C000
	071 Move X27, [X27+3536]
	072 And W25, W24, 1
	073 Move W1, [X31+44]
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move X0, X23
	076 Move X2, X31
	077 Call String.get_Chars, X0, X1
	078 Move W1, [X31+44]
	079 And W8, W0, 0xFFFF
	080 NotImplemented "Instruction CMP not yet implemented."
	081 NotImplemented "Instruction CSET not yet implemented."
	082 Move W8, W31
	083 And W31, W8, W25
	084 Add W8, W1, 1
	085 Move [X31+44], W8
	086 Compare X22, 0
	087 JumpIfEqual {377}
	088 Move X0, X22
	089 Move X1, X31
	090 Call InputControl.get_usages, X0
	091 Move X8, X1
	092 ShiftRight X8, 32
	093 And X8, X8, 0x7FFFFFFF
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Move [X31], X0
	096 Move [X31+8], X1
	097 Move W25, W31
	098 Move X0, X22
	099 Move X1, X31
	100 Call InputControl.get_usages, X0
	101 Move X2, [X27]
	102 Move [X31], X0
	103 Move [X31+8], X1
	104 Add X0, X31, 0
	105 Move W1, W25
	106 Call ReadOnlyArray`1<InternedString>.get_Item, X0, X1
	107 Move X2, X31
	108 Call InternedString.op_Implicit, X0
	109 Add X2, X31, 44
	110 Move W3, 2
	111 Move X1, X23
	112 Move W4, W31
	113 Move X5, X31
	114 Call InputControlPath.MatchPathComponent, X0, X1, X2, X3, X4
	115 Move W24, W0
	116 Add W25, W25, 1
	117 Move TEMP, X0
	118 And TEMP, TEMP, 1
	119 Compare TEMP, 1
	120 JumpIfEqual {72}
	121 Move X0, X22
	122 Move X1, X31
	123 Call InputControl.get_usages, X0
	124 Move X8, X1
	125 ShiftRight X8, 32
	126 And X8, X8, 0x7FFFFFFF
	127 NotImplemented "Instruction CMP not yet implemented."
	128 Move [X31], X0
	129 Move [X31+8], X1
	130 Subtract W8, W26, 1
	131 NotImplemented "Instruction CMP not yet implemented."
	132 NotImplemented "Instruction CSET not yet implemented."
	133 NotImplemented "Instruction ORN not yet implemented."
	134 Move TEMP, X8
	135 And TEMP, TEMP, 1
	136 Compare TEMP, 1
	137 JumpIfEqual {166}
	138 Move X0, X23
	139 Move X2, X31
	140 Call String.get_Chars, X0, X1
	141 And W8, W0, 0xFFFF
	142 NotImplemented "Instruction CMP not yet implemented."
	143 Move W8, [X31+44]
	144 Move X0, X23
	145 Move X2, X31
	146 Add W1, W8, 1
	147 Call String.get_Chars, X0, X1
	148 And W8, W0, 0xFFFF
	149 NotImplemented "Instruction CMP not yet implemented."
	150 Move W8, [X31+44]
	151 Add W8, W8, 2
	152 Move [X31+44], W8
	153 Compare X22, 0
	154 JumpIfEqual {377}
	155 Move X0, X22
	156 Move X1, X31
	157 Call InputControl.get_displayName, X0
	158 Add X2, X31, 44
	159 Move W3, 1
	160 Move X1, X23
	161 Move W4, W31
	162 Move X5, X31
	163 Call InputControlPath.MatchPathComponent, X0, X1, X2, X3, X4
	164 Move W24, W0
	165 Move W24, 1
	166 Move TEMP, X24
	167 And TEMP, TEMP, 1
	168 Compare TEMP, 1
	169 JumpIfNotEqual {234}
	170 Move W1, [X31+44]
	171 NotImplemented "Instruction CMP not yet implemented."
	172 Move X0, X23
	173 Move X2, X31
	174 Call String.get_Chars, X0, X1
	175 And W8, W0, 0xFFFF
	176 NotImplemented "Instruction CMP not yet implemented."
	177 Compare X22, 0
	178 JumpIfEqual {377}
	179 Move X0, X22
	180 Move X1, X31
	181 Call InputControl.get_name, X0
	182 Add X2, X31, 44
	183 Move X1, X23
	184 Move W3, W31
	185 Move W4, W31
	186 Move X5, X31
	187 Call InputControlPath.MatchPathComponent, X0, X1, X2, X3, X4
	188 Move TEMP, X0
	189 And TEMP, TEMP, 1
	190 Compare TEMP, 1
	191 JumpIfEqual {238}
	192 Move X0, X22
	193 Move X1, X31
	194 Call InputControl.get_aliases, X0
	195 Move X8, X1
	196 ShiftRight X8, 32
	197 And X8, X8, 0x7FFFFFFF
	198 NotImplemented "Instruction CMP not yet implemented."
	199 Move [X31], X0
	200 Move [X31+8], X1
	201 Move W25, W31
	202 Move X0, X22
	203 Move X1, X31
	204 Call InputControl.get_aliases, X0
	205 Move X2, [X27]
	206 Move [X31], X0
	207 Move [X31+8], X1
	208 Add X0, X31, 0
	209 Move W1, W25
	210 Call ReadOnlyArray`1<InternedString>.get_Item, X0, X1
	211 Move X2, X31
	212 Call InternedString.op_Implicit, X0
	213 Add X2, X31, 44
	214 Move X1, X23
	215 Move W3, W31
	216 Move W4, W31
	217 Move X5, X31
	218 Call InputControlPath.MatchPathComponent, X0, X1, X2, X3, X4
	219 Move W24, W0
	220 Move X0, X22
	221 Move X1, X31
	222 Call InputControl.get_aliases, X0
	223 Move [X31], X0
	224 Move [X31+8], X1
	225 Move TEMP, X24
	226 And TEMP, TEMP, 1
	227 Compare TEMP, 1
	228 JumpIfEqual {234}
	229 Add W25, W25, 1
	230 Move X8, X1
	231 ShiftRight X8, 32
	232 And X8, X8, 0x7FFFFFFF
	233 NotImplemented "Instruction CMP not yet implemented."
	234 Move TEMP, X24
	235 And TEMP, TEMP, 1
	236 Compare TEMP, 1
	237 JumpIfNotEqual {289}
	238 Move W1, [X31+44]
	239 NotImplemented "Instruction CMP not yet implemented."
	240 Move X0, X23
	241 Move X2, X31
	242 Call String.get_Chars, X0, X1
	243 Move W1, [X31+44]
	244 And W8, W0, 0xFFFF
	245 NotImplemented "Instruction CMP not yet implemented."
	246 Add W1, W1, 1
	247 Move [X31+44], W1
	248 NotImplemented "Instruction CMP not yet implemented."
	249 Move X8, [X21+56]
	250 Move X1, [X8]
	251 Move W8, [X1+309]
	252 Move TEMP, X8
	253 And TEMP, TEMP, 1
	254 Compare TEMP, 1
	255 JumpIfEqual {259}
	256 Move X0, X1
	257 Call 0x1C5D684
	258 Move X1, X0
	259 Move X0, X22
	260 Call 0x1C17E00
	261 Move X8, [X21+56]
	262 Move X23, X0
	263 Move X22, [X8]
	264 Move W8, [X22+309]
	265 Move TEMP, X8
	266 And TEMP, TEMP, 1
	267 Compare TEMP, 1
	268 JumpIfEqual {272}
	269 Move X0, X22
	270 Call 0x1C5D684
	271 Move X22, X0
	272 Compare X23, 0
	273 JumpIfEqual {289}
	274 Move X0, X23
	275 Move X1, X22
	276 Call 0x1C17E00
	277 Compare X0, 0
	278 JumpIfEqual {378}
	279 Move X24, X0
	280 Move TEMP, X20
	281 And TEMP, TEMP, 1
	282 Compare TEMP, 1
	283 JumpIfNotEqual {364}
	284 Move X8, [X21+56]
	285 Move X0, X19
	286 Move X1, X24
	287 Move X2, [X8+16]
	288 Call 0x2DFBCEC, X0, X1
	289 Move X24, X31
	290 Move X0, X23
	291 Move X2, X31
	292 Call String.get_Chars, X0, X1
	293 And W8, W0, 0xFFFF
	294 NotImplemented "Instruction CMP not yet implemented."
	295 Move X24, X31
	296 Move W8, [X31+44]
	297 Add W1, W8, 1
	298 NotImplemented "Instruction CMP not yet implemented."
	299 Move [X31+44], W1
	300 Move X0, X23
	301 Move X2, X31
	302 Call String.get_Chars, X0, X1
	303 And W8, W0, 0xFFFF
	304 NotImplemented "Instruction CMP not yet implemented."
	305 Compare X22, 0
	306 JumpIfEqual {377}
	307 Move X8, [X21+56]
	308 Move X0, [X22+120]
	309 Move W2, [X31+44]
	310 And W4, W20, 1
	311 Move X5, [X8+32]
	312 Move X1, X23
	313 Move X3, X19
	314 Call 0x220013C, X0, X1, X2, X3, X4
	315 NotImplemented "Instruction LDUR not yet implemented."
	316 Move X25, 0x1F1C000
	317 Move X25, [X25+3520]
	318 Move X27, 0x1F1C000
	319 Move [X31+1], V0
	320 Move X27, [X27+3512]
	321 Move X0, [X25]
	322 Move W8, [X0+224]
	323 Compare W8, 0
	324 JumpIfNotEqual {327}
	325 Call 0x1C17DFC
	326 Move X0, [X25]
	327 Move X8, [X0+184]
	328 Move X0, [X8+40]
	329 Compare X0, 0
	330 JumpIfEqual {377}
	331 Move X1, [X31+16]
	332 Move X2, [X31+24]
	333 Move X4, [X27]
	334 Add X3, X31, 16
	335 Call Dictionary`2<InternedString, InternedString>.TryGetValue, X0, X1, X2
	336 Move W24, W0
	337 Move TEMP, X0
	338 And TEMP, TEMP, 1
	339 Compare TEMP, 1
	340 JumpIfNotEqual {70}
	341 Move X0, [X31+16]
	342 Move X1, [X31+24]
	343 Move X2, X31
	344 Call InternedString.op_Implicit, X0
	345 Add X2, X31, 44
	346 Move W3, 3
	347 Move X1, X23
	348 Move W4, W31
	349 Move X5, X31
	350 Call InputControlPath.MatchPathComponent, X0, X1, X2, X3, X4
	351 Move TEMP, X0
	352 And TEMP, TEMP, 1
	353 Compare TEMP, 1
	354 JumpIfNotEqual {321}
	355 Move X8, [X21+56]
	356 Move W2, [X31+44]
	357 And W4, W20, 1
	358 Move X0, X22
	359 Move X5, [X8+40]
	360 Move X1, X23
	361 Move X3, X19
	362 Call 0x2200408, X0, X1, X2, X3, X4
	363 Move X24, X0
	364 Move X0, X24
	365 Move X20, [X31+112]
	366 Move X19, [X31+120]
	367 Move X22, [X31+96]
	368 Move X21, [X31+104]
	369 Move X24, [X31+80]
	370 Move X23, [X31+88]
	371 Move X26, [X31+64]
	372 Move X25, [X31+72]
	373 Move X30, [X31+48]
	374 Move X27, [X31+56]
	375 Add X31, X31, 128
	376 Return X0
	377 Call 0x1C17F20
	378 Move X0, X23
	379 Move X1, X22
	380 Call 0x1C181E0

Method: TControl MatchByUsageAtDeviceRootRecursive(UnityEngine.InputSystem.InputDevice device, System.String path, System.Int32 indexInPath, ref UnityEngine.InputSystem.InputControlList`1<TControl> matches, System.Boolean matchMultiple)

Disassembly:
	0x0220013C ADD X31, X31, 0xF0
	0x02200140 RET
	0x02200144 SUB X31, X31, 0xD0
	0x02200148 STP X30, X25, [X31 + 0x90]
	0x0220014C STP X24, X23, [X31 + 0xA0]
	0x02200150 STP X22, X21, [X31 + 0xB0]
	0x02200154 STP X20, X19, [X31 + 0xC0]
	0x02200158 LDR X9, [X5 + 0x38]
	0x0220015C MOV X20, X5
	0x02200160 MOV W25, W4
	0x02200164 MOV X21, X3
	0x02200168 MOV X22, X2
	0x0220016C MOV X23, X1
	0x02200170 MOV X24, X0
	0x02200174 MOV X19, X8
	0x02200178 CBNZ X9, 0x2200198
	0x0220017C ADRP X0, 0x1F1B000
	0x02200180 LDR X0, [X0 + 0xDE8]
	0x02200184 BL 0x1C16CF4
	0x02200188 LDR X8, [X20 + 0x38]
	0x0220018C CBNZ X8, 0x2200198
	0x02200190 MOV X0, X20
	0x02200194 BL 0x1C5C6E0
	0x02200198 MOVI V0.2D, 0x0
	0x0220019C STP X31, X31, [X31 + 0x58]
	0x022001A0 STR X31, [X31 + 0x68]
	0x022001A4 STP V0, V0, [X31 + 0x30]
	0x022001A8 STP V0, V0, [X31 + 0x10]
	0x022001AC STR V0, [X31]
	0x022001B0 CBZ X24, 0x2200240
	0x022001B4 LDR X8, [X20 + 0x38]
	0x022001B8 AND W6, W25, 0x1
	0x022001BC ADD X3, X31, 0x58
	0x022001C0 ADD X4, X31, 0x0
	0x022001C4 LDR X7, [X8 + 0x10]
	0x022001C8 MOV X0, X24
	0x022001CC MOV X1, X23
	0x022001D0 MOV X2, X22
	0x022001D4 MOV X5, X21
	0x022001D8 BL 0x2200FF4
	0x022001DC TBZ X0, 0x0, 0x2200220
	0x022001E0 ADD X0, X31, 0x0
	0x022001E4 MOV X1, X31
	0x022001E8 BL 0x376BC1C
	0x022001EC ADRP X8, 0x1F1B000
	0x022001F0 LDR X8, [X8 + 0xDE8]
	0x022001F4 LDUR V1, [X31 + 0x58]
	0x022001F8 LDR X9, [X31 + 0x68]
	0x022001FC MOVI V0.2D, 0x0
	0x02200200 LDR X2, [X8]
	0x02200204 ADD X1, X31, 0x70
	0x02200208 MOV X0, X19
	0x0220020C STP V0, V0, [X19]
	0x02200210 STR V1, [X31 + 0x7]
	0x02200214 STR X9, [X31 + 0x80]
	0x02200218 BL 0x2432978
	0x0220021C B 0x2200228
	0x02200220 MOVI V0.2D, 0x0
	0x02200224 STP V0, V0, [X19]
	0x02200228 LDP X20, X19, [X31 + 0xC0]
	0x0220022C LDP X22, X21, [X31 + 0xB0]
	0x02200230 LDP X24, X23, [X31 + 0xA0]
	0x02200234 LDP X30, X25, [X31 + 0x90]
	0x02200238 ADD X31, X31, 0xD0
	0x0220023C RET
	0x02200240 ADRP X0, 0x1EF8000
	0x02200244 LDR X0, [X0 + 0x528]
	0x02200248 BL 0x1C16D08
	0x0220024C BL 0x1C16F10
	0x02200250 MOV X19, X0
	0x02200254 ADRP X0, 0x1F1B000
	0x02200258 LDR X0, [X0 + 0xDF0]
	0x0220025C BL 0x1C16D08
	0x02200260 MOV X1, X0
	0x02200264 MOV X0, X19
	0x02200268 MOV X2, X31
	0x0220026C BL 0x330E100
	0x02200270 MOV X0, X19
	0x02200274 MOV X1, X20
	0x02200278 BL 0x1C16DEC
	0x0220027C STP X29, X30, [X31 - 0x60]!
	0x02200280 STP X28, X27, [X31 + 0x10]
	0x02200284 STP X26, X25, [X31 + 0x20]
	0x02200288 STP X24, X23, [X31 + 0x30]
	0x0220028C STP X22, X21, [X31 + 0x40]
	0x02200290 STP X20, X19, [X31 + 0x50]
	0x02200294 ADD X29, X31, 0x0
	0x02200298 SUB X31, X31, 0xF0
	0x0220029C STUR W3, [X29 - 0xE4]
	0x022002A0 STUR X2, [X29 - 0xE0]
	0x022002A4 MRS X20, 0xC000
	0x022002A8 LDR X9, [X20 + 0x28]
	0x022002AC MOV X21, X4
	0x022002B0 MOV X23, X1
	0x022002B4 MOV X25, X0
	0x022002B8 STUR X9, [X29 - 0x10]
	0x022002BC STP X1, X0, [X29 - 0x60]
	0x022002C0 LDR X22, [X4 + 0x38]
	0x022002C4 MOV X19, X8
	0x022002C8 CBNZ X22, 0x22002EC
	0x022002CC ADRP X0, 0x1F1B000
	0x022002D0 LDR X0, [X0 + 0xDE8]
	0x022002D4 BL 0x1C16CF4
	0x022002D8 LDR X22, [X21 + 0x38]
	0x022002DC CBNZ X22, 0x22002EC
	0x022002E0 MOV X0, X21
	0x022002E4 BL 0x1C5C6E0
	0x022002E8 LDR X22, [X21 + 0x38]
	0x022002EC LDP X8, X9, [X22]
	0x022002F0 STUR X20, [X29 - 0xD8]
	0x022002F4 LDR W28, [X8 + 0xFC]
	0x022002F8 LDR W27, [X9 + 0xFC]
	0x022002FC ADD X8, X31, 0x0
	0x02200300 ADD X9, X28, 0xF
	0x02200304 AND X9, X9, 0x1FFFFFFFF
	0x02200308 SUB X24, X8, X9
	0x0220030C ADD X31, X24, 0x0
	0x02200310 ADD X9, X27, 0xF
	0x02200314 ADD X8, X31, 0x0
	0x02200318 AND X9, X9, 0x1FFFFFFFF
	0x0220031C SUB X26, X8, X9
	0x02200320 ADD X31, X26, 0x0
	0x02200324 MOVI V0.2D, 0x0
	0x02200328 STP X31, X31, [X29 - 0x78]
	0x0220032C STUR X31, [X29 - 0x68]
	0x02200330 STP V0, V0, [X29 - 0xA0]
	0x02200334 STP V0, V0, [X29 - 0xC0]
	0x02200338 STUR V0, [X29 - 0xD0]
	0x0220033C LDR X8, [X22]
	0x02200340 MOV X0, X24
	0x02200344 MOV X2, X28
	0x02200348 LDR W8, [X8 + 0x28]
	0x0220034C CMP W8, 0x0
	0x02200350 SUB X8, X29, 0x58
	0x02200354 CSEL X1, X25, X8, LT
	0x02200358 BL 0x3EB1AC0
	0x0220035C LDR X0, [X22]
	0x02200360 MOV X1, X24
	0x02200364 BL 0x1C16ED4
	0x02200368 TBZ X0, 0x0, 0x22004C4
	0x0220036C LDR X20, [X21 + 0x38]
	0x02200370 SUB X22, X29, 0x60
	0x02200374 MOV X0, X26
	0x02200378 MOV X2, X27
	0x0220037C LDR X8, [X20 + 0x8]
	0x02200380 LDR W8, [X8 + 0x28]
	0x02200384 CMP W8, 0x0
	0x02200388 CSEL X1, X23, X22, LT
	0x0220038C BL 0x3EB1AC0
	0x02200390 LDR X0, [X20 + 0x8]
	0x02200394 MOV X1, X26
	0x02200398 BL 0x1C16ED4
	0x0220039C TBZ X0, 0x0, 0x22004E4
	0x022003A0 LDR X21, [X21 + 0x38]
	0x022003A4 MOV X0, X24
	0x022003A8 MOV X2, X28
	0x022003AC LDR X8, [X21]
	0x022003B0 LDR W8, [X8 + 0x28]
	0x022003B4 CMP W8, 0x0
	0x022003B8 SUB X8, X29, 0x58
	0x022003BC CSEL X1, X25, X8, LT
	0x022003C0 BL 0x3EB1AC0
	0x022003C4 LDR X8, [X21 + 0x8]
	0x022003C8 MOV X0, X26
	0x022003CC MOV X2, X27
	0x022003D0 LDR W8, [X8 + 0x28]
	0x022003D4 CMP W8, 0x0
	0x022003D8 CSEL X1, X23, X22, LT
	0x022003DC BL 0x3EB1AC0
	0x022003E0 LDR X8, [X21]
	0x022003E4 LDR X1, [X21 + 0x10]
	0x022003E8 LDR W8, [X8 + 0x28]
	0x022003EC LDR X0, [X1]
	0x022003F0 TBNZ X8, 0x1F, 0x22003F8
	0x022003F4 LDR X24, [X24]
	0x022003F8 LDR X8, [X21 + 0x8]
	0x022003FC LDP X12, X20, [X29 - 0xE0]
	0x02200400 LDUR W9, [X29 - 0xE4]
	0x02200404 LDR W8, [X8 + 0x28]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X29
	003 Move [X31+40], X30
	004 Move [X31+48], X28
	005 Move [X31+56], X27
	006 Move [X31+64], X26
	007 Move [X31+72], X25
	008 Move [X31+80], X24
	009 Move [X31+88], X23
	010 Move [X31+96], X22
	011 Move [X31+104], X21
	012 Move [X31+112], X20
	013 Move [X31+120], X19
	014 Move X8, [X5+56]
	015 Move X19, X5
	016 Move W24, W2
	017 Move X20, X1
	018 Move X23, X0
	019 Move [X31+20], W4
	020 Move [X31+8], X3
	021 Compare X8, 0
	022 JumpIfNotEqual {31}
	023 Move X0, 0x1F1C000
	024 Move X0, [X0+3488]
	025 Call 0x1C17CF4
	026 Move X8, [X19+56]
	027 Compare X8, 0
	028 JumpIfNotEqual {31}
	029 Move X0, X19
	030 Call 0x1C5D6E0
	031 Compare X23, 0
	032 JumpIfEqual {174}
	033 Move X27, [X23+320]
	034 Compare X27, 0
	035 JumpIfEqual {157}
	036 Move X8, 0x1F1C000
	037 Move X0, [X23+328]
	038 Move X8, [X8+3488]
	039 Move X1, [X8]
	040 Call ArrayHelpers.LengthSafe, X0
	041 Move W25, W0
	042 Move X0, X20
	043 Move W1, W24
	044 Move X2, X31
	045 Call InputControlPath.PathComponentCanYieldMultipleMatches, X0, X1
	046 Compare X20, 0
	047 JumpIfEqual {174}
	048 Move W8, [X20+16]
	049 Add W29, W24, 1
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move [X31+24], W8
	052 Move [X31+28], W29
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move W8, [X31+20]
	055 Move X22, X31
	056 Move X24, X31
	057 Move W21, W25
	058 And W8, W0, W8
	059 Add X28, X27, 40
	060 Move [X31+4], W8
	061 Move W8, [X27+24]
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move X0, [X28-8]
	064 Move X1, [X28]
	065 Move X2, X31
	066 Call InternedString.op_Implicit, X0
	067 Add X2, X31, 28
	068 Move W3, 2
	069 Move X1, X20
	070 Move W4, W31
	071 Move X5, X31
	072 Call InputControlPath.MatchPathComponent, X0, X1, X2, X3, X4
	073 Move TEMP, X0
	074 And TEMP, TEMP, 1
	075 Compare TEMP, 1
	076 JumpIfNotEqual {111}
	077 Move X8, [X23+328]
	078 Compare X8, 0
	079 JumpIfEqual {174}
	080 Move W9, [X8+24]
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Add X8, X8, X22
	083 Move X24, [X8+32]
	084 Move W8, [X31+24]
	085 Move W1, [X31+28]
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Move X0, X20
	088 Move X2, X31
	089 Call String.get_Chars, X0, X1
	090 And W8, W0, 0xFFFF
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Move X8, [X19+56]
	093 Move W9, [X31+28]
	094 Move X3, [X31+8]
	095 Move X0, X24
	096 Move X5, [X8+16]
	097 Move W8, [X31+20]
	098 Add W2, W9, 1
	099 Move X1, X20
	100 And W4, W8, 1
	101 Call 0x2200408, X0, X1, X2, X3, X4
	102 Move W9, [X31+4]
	103 NotImplemented "Instruction CMP not yet implemented."
	104 NotImplemented "Instruction CSET not yet implemented."
	105 Move X24, X0
	106 Or W8, W9, W8
	107 Move TEMP, X8
	108 And TEMP, TEMP, 1
	109 Compare TEMP, 1
	110 JumpIfEqual {154}
	111 Move [X31+28], W29
	112 Move X8, [X19+56]
	113 Move X1, [X8]
	114 Move W8, [X1+309]
	115 Move TEMP, X8
	116 And TEMP, TEMP, 1
	117 Compare TEMP, 1
	118 JumpIfEqual {122}
	119 Move X0, X1
	120 Call 0x1C5D684
	121 Move X1, X0
	122 Move X0, X24
	123 Call 0x1C17E00
	124 Move X8, [X19+56]
	125 Move X26, X0
	126 Move X25, [X8]
	127 Move W8, [X25+309]
	128 Move TEMP, X8
	129 And TEMP, TEMP, 1
	130 Compare TEMP, 1
	131 JumpIfEqual {135}
	132 Move X0, X25
	133 Call 0x1C5D684
	134 Move X25, X0
	135 Compare X26, 0
	136 JumpIfEqual {153}
	137 Move X0, X26
	138 Move X1, X25
	139 Call 0x1C17E00
	140 Compare X0, 0
	141 JumpIfEqual {175}
	142 Move W8, [X31+20]
	143 Move X24, X0
	144 Move TEMP, X8
	145 And TEMP, TEMP, 1
	146 Compare TEMP, 1
	147 JumpIfNotEqual {158}
	148 Move X8, [X19+56]
	149 Move X0, [X31+8]
	150 Move X1, X24
	151 Move X2, [X8+24]
	152 Call 0x2DFBCEC, X0, X1
	153 Move X24, X31
	154 Add X22, X22, 1
	155 NotImplemented "Instruction CMP not yet implemented."
	156 Add X28, X28, 16
	157 Move X24, X31
	158 Move X0, X24
	159 Move X20, [X31+112]
	160 Move X19, [X31+120]
	161 Move X22, [X31+96]
	162 Move X21, [X31+104]
	163 Move X24, [X31+80]
	164 Move X23, [X31+88]
	165 Move X26, [X31+64]
	166 Move X25, [X31+72]
	167 Move X28, [X31+48]
	168 Move X27, [X31+56]
	169 Move X29, [X31+32]
	170 Move X30, [X31+40]
	171 Add X31, X31, 128
	172 Return X0
	173 Call 0x1C17F28
	174 Call 0x1C17F20
	175 Move X0, X26
	176 Move X1, X25
	177 Call 0x1C181E0
	178 Move X0, 0x1F1C000
	179 Move X0, [X0+3496]
	180 Call 0x1C17D08
	181 Move X21, X0
	182 Move X0, 0x1F1C000
	183 Move X0, [X0+3504]
	184 Call 0x1C17D08
	185 Move X2, X0
	186 Move X0, X21
	187 Move X1, X20
	188 Move X3, X31
	189 Call String.Concat, X0, X1, X2
	190 Move X20, X0
	191 Move X0, 0x1EFC000
	192 Move X0, [X0+1400]
	193 Call 0x1C17D08
	194 Call 0x1C17F10
	195 Move X21, X0
	196 Move X0, 0x1EFF000
	197 Move X0, [X0+288]
	198 Call 0x1C17D08
	199 Move X2, X0
	200 Move X0, X21
	201 Move X1, X20
	202 Move X3, X31
	203 Call ArgumentException..ctor, X0, X1, X2
	204 Move X0, X21
	205 Move X1, X19
	206 Call 0x1C17DEC

Method: TControl MatchChildrenRecursive(UnityEngine.InputSystem.InputControl control, System.String path, System.Int32 indexInPath, ref UnityEngine.InputSystem.InputControlList`1<TControl> matches, System.Boolean matchMultiple)

Disassembly:
	0x02200408 TBNZ X8, 0x1F, 0x2200410
	0x0220040C LDR X26, [X26]
	0x02200410 AND W8, W9, 0x1
	0x02200414 SUB X9, X29, 0x78
	0x02200418 SUB X10, X29, 0xD0
	0x0220041C SUB X11, X29, 0x14
	0x02200420 STP X24, X26, [X29 - 0x50]
	0x02200424 STURB W8, [X29 - 0x14]
	0x02200428 STP X9, X10, [X29 - 0x40]
	0x0220042C STP X12, X11, [X29 - 0x30]
	0x02200430 LDR X8, [X1 + 0x10]
	0x02200434 SUB X3, X29, 0x50
	0x02200438 SUB X4, X29, 0x18
	0x0220043C MOV X2, X31
	0x02200440 BLR X8
	0x02200444 LDURB W8, [X29 - 0x18]
	0x02200448 CBZ W8, 0x220048C
	0x0220044C SUB X0, X29, 0xD0
	0x02200450 MOV X1, X31
	0x02200454 BL 0x376BC1C
	0x02200458 ADRP X8, 0x1F1B000
	0x0220045C LDR X8, [X8 + 0xDE8]
	0x02200460 LDUR V1, [X29 - 0x78]
	0x02200464 LDUR X9, [X29 - 0x68]
	0x02200468 MOVI V0.2D, 0x0
	0x0220046C LDR X2, [X8]
	0x02200470 SUB X1, X29, 0x50
	0x02200474 MOV X0, X19
	0x02200478 STP V0, V0, [X19]
	0x0220047C STUR V1, [X29 - 0x50]
	0x02200480 STUR X9, [X29 - 0x40]
	0x02200484 BL 0x2432978
	0x02200488 B 0x2200494
	0x0220048C MOVI V0.2D, 0x0
	0x02200490 STP V0, V0, [X19]
	0x02200494 LDR X8, [X20 + 0x28]
	0x02200498 LDUR X9, [X29 - 0x10]
	0x0220049C CMP X8, X9
	0x022004A0 B.NE 0x2200520
	0x022004A4 ADD X31, X29, 0x0
	0x022004A8 LDP X20, X19, [X31 + 0x50]
	0x022004AC LDP X22, X21, [X31 + 0x40]
	0x022004B0 LDP X24, X23, [X31 + 0x30]
	0x022004B4 LDP X26, X25, [X31 + 0x20]
	0x022004B8 LDP X28, X27, [X31 + 0x10]
	0x022004BC LDP X29, X30, [X31], #0x60
	0x022004C0 RET
	0x022004C4 ADRP X0, 0x1EF8000
	0x022004C8 LDR X0, [X0 + 0x528]
	0x022004CC BL 0x1C16D08
	0x022004D0 BL 0x1C16F10
	0x022004D4 MOV X19, X0
	0x022004D8 ADRP X0, 0x1F1B000
	0x022004DC LDR X0, [X0 + 0xDF0]
	0x022004E0 B 0x2200500
	0x022004E4 ADRP X0, 0x1EF8000
	0x022004E8 LDR X0, [X0 + 0x528]
	0x022004EC BL 0x1C16D08
	0x022004F0 BL 0x1C16F10
	0x022004F4 MOV X19, X0
	0x022004F8 ADRP X0, 0x1F1B000
	0x022004FC LDR X0, [X0 + 0xDE0]
	0x02200500 BL 0x1C16D08
	0x02200504 MOV X1, X0
	0x02200508 MOV X0, X19
	0x0220050C MOV X2, X31
	0x02200510 BL 0x330E100
	0x02200514 MOV X0, X19
	0x02200518 MOV X1, X21
	0x0220051C BL 0x1C16DEC
	0x02200520 BL 0x3EB1B20
	0x02200524 STP X29, X30, [X31 - 0x60]!
	0x02200528 STP X28, X27, [X31 + 0x10]
	0x0220052C STP X26, X25, [X31 + 0x20]
	0x02200530 STP X24, X23, [X31 + 0x30]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X30
	003 Move [X31+32], X28
	004 Move [X31+40], X27
	005 Move [X31+48], X26
	006 Move [X31+56], X25
	007 Move [X31+64], X24
	008 Move [X31+72], X23
	009 Move [X31+80], X22
	010 Move [X31+88], X21
	011 Move [X31+96], X20
	012 Move [X31+104], X19
	013 Move X8, [X5+56]
	014 Move X19, X5
	015 Move W20, W4
	016 Move X21, X3
	017 Move W22, W2
	018 Move X23, X1
	019 Move X24, X0
	020 Compare X8, 0
	021 JumpIfNotEqual {33}
	022 Move X0, 0x1F1C000
	023 Move X0, [X0+3392]
	024 Call 0x1C17CF4
	025 Move X0, 0x1F1C000
	026 Move X0, [X0+3400]
	027 Call 0x1C17CF4
	028 Move X8, [X19+56]
	029 Compare X8, 0
	030 JumpIfNotEqual {33}
	031 Move X0, X19
	032 Call 0x1C5D6E0
	033 Compare X24, 0
	034 JumpIfEqual {90}
	035 Move X0, X24
	036 Move X1, X31
	037 Call InputControl.get_children, X0
	038 Move [X31], X0
	039 Move [X31+8], X1
	040 Move X26, X1
	041 ShiftRight X26, 32
	042 And X26, X26, 0x7FFFFFFF
	043 Move X0, X23
	044 Move W1, W22
	045 Move X2, X31
	046 Call InputControlPath.PathComponentCanYieldMultipleMatches, X0, X1
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move X28, 0x1F1C000
	049 Move X28, [X28+3400]
	050 Move W25, W31
	051 Move X24, X31
	052 And W27, W0, W20
	053 Move X2, [X28]
	054 Add X0, X31, 0
	055 Move W1, W25
	056 Call ReadOnlyArray`1<Object>.get_Item, X0, X1
	057 Move X8, [X19+56]
	058 And W4, W20, 1
	059 Move X1, X23
	060 Move W2, W22
	061 Move X5, [X8+16]
	062 Move X3, X21
	063 Call 0x2200534, X0, X1, X2, X3, X4
	064 NotImplemented "Instruction CMP not yet implemented."
	065 NotImplemented "Instruction CSET not yet implemented."
	066 Or W8, W8, W27
	067 NotImplemented "Instruction CSEL not yet implemented."
	068 Move TEMP, X8
	069 And TEMP, TEMP, 1
	070 Compare TEMP, 1
	071 JumpIfNotEqual {75}
	072 Add W25, W25, 1
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move X24, X31
	075 Move X24, X0
	076 Move X0, X24
	077 Move X20, [X31+96]
	078 Move X19, [X31+104]
	079 Move X22, [X31+80]
	080 Move X21, [X31+88]
	081 Move X24, [X31+64]
	082 Move X23, [X31+72]
	083 Move X26, [X31+48]
	084 Move X25, [X31+56]
	085 Move X28, [X31+32]
	086 Move X27, [X31+40]
	087 Move X30, [X31+16]
	088 Add X31, X31, 112
	089 Return X0
	090 Call 0x1C17F20

Method: System.Boolean MatchPathComponent(System.String component, System.String path, ref System.Int32 indexInPath, UnityEngine.InputSystem.InputControlPath/PathComponentType componentType, System.Int32 startIndexInComponent = 0)

Disassembly:
	0x0377A2A4 BL 0x1C16CF4
	0x0377A2A8 MOVZ W8, 0x1
	0x0377A2AC STRB W8, [X20 + 0xF56]
	0x0377A2B0 LDR X8, [X21]
	0x0377A2B4 LDR X8, [X8 + 0xB8]
	0x0377A2B8 STR X19, [X8]
	0x0377A2BC LDP X20, X19, [X31 + 0x10]
	0x0377A2C0 LDP X30, X21, [X31], #0x20
	0x0377A2C4 RET
	0x0377A2C8 SUB X31, X31, 0x30
	0x0377A2CC STP X30, X21, [X31 + 0x10]
	0x0377A2D0 STP X20, X19, [X31 + 0x20]
	0x0377A2D4 ADRP X20, 0xC66000
	0x0377A2D8 ADRP X21, 0x9CC000
	0x0377A2DC ADRP X19, 0x9CC000
	0x0377A2E0 LDRB W8, [X20 + 0xF57]
	0x0377A2E4 LDR X21, [X21 + 0xEE0]
	0x0377A2E8 LDR X19, [X19 + 0xEE8]
	0x0377A2EC TBNZ X8, 0x0, 0x377A310
	0x0377A2F0 ADRP X0, 0x9CC000
	0x0377A2F4 LDR X0, [X0 + 0xEE0]
	0x0377A2F8 BL 0x1C16CF4
	0x0377A2FC ADRP X0, 0x9CC000
	0x0377A300 LDR X0, [X0 + 0xEE8]
	0x0377A304 BL 0x1C16CF4
	0x0377A308 MOVZ W8, 0x1
	0x0377A30C STRB W8, [X20 + 0xF57]
	0x0377A310 LDR X8, [X21]
	0x0377A314 LDR X4, [X19]
	0x0377A318 ADD X0, X31, 0x0
	0x0377A31C MOV W2, W31
	0x0377A320 LDR X8, [X8 + 0xB8]
	0x0377A324 LDR X1, [X8 + 0x10]
	0x0377A328 LDR W3, [X8 + 0x8]
	0x0377A32C STP X31, X31, [X31]
	0x0377A330 BL 0x24FD82C
	0x0377A334 LDP X0, X1, [X31]
	0x0377A338 LDP X20, X19, [X31 + 0x20]
	0x0377A33C LDP X30, X21, [X31 + 0x10]
	0x0377A340 ADD X31, X31, 0x30
	0x0377A344 RET
	0x0377A348 STP X29, X30, [X31 - 0x60]!
	0x0377A34C STP X28, X27, [X31 + 0x10]
	0x0377A350 STP X26, X25, [X31 + 0x20]
	0x0377A354 STP X24, X23, [X31 + 0x30]
	0x0377A358 STP X22, X21, [X31 + 0x40]
	0x0377A35C STP X20, X19, [X31 + 0x50]
	0x0377A360 ADRP X29, 0xC66000
	0x0377A364 ADRP X21, 0x9CC000
	0x0377A368 ADRP X20, 0x9CA000
	0x0377A36C ADRP X28, 0x9CC000
	0x0377A370 ADRP X27, 0x9CC000
	0x0377A374 ADRP X26, 0x9CC000
	0x0377A378 ADRP X25, 0x9B3000
	0x0377A37C ADRP X24, 0x9CC000
	0x0377A380 ADRP X22, 0x9CC000
	0x0377A384 ADRP X23, 0x9CC000
	0x0377A388 LDR X21, [X21 + 0xEF0]
	0x0377A38C LDR X20, [X20 + 0xE18]
	0x0377A390 LDR X28, [X28 + 0xEF8]
	0x0377A394 LDR X27, [X27 + 0xF00]
	0x0377A398 LDR X26, [X26 + 0xF08]
	0x0377A39C LDR X25, [X25 + 0x3D0]
	0x0377A3A0 LDR X24, [X24 + 0xF10]
	0x0377A3A4 LDR X22, [X22 + 0xF18]
	0x0377A3A8 LDRB W8, [X29 + 0xF58]
	0x0377A3AC LDR X23, [X23 + 0xF20]
	0x0377A3B0 MOV X19, X0
	0x0377A3B4 TBNZ X8, 0x0, 0x377A498
	0x0377A3B8 ADRP X0, 0x9CA000
	0x0377A3BC LDR X0, [X0 + 0xE18]
	0x0377A3C0 BL 0x1C16CF4
	0x0377A3C4 ADRP X0, 0x9CC000
	0x0377A3C8 LDR X0, [X0 + 0xF28]
	0x0377A3CC BL 0x1C16CF4
	0x0377A3D0 ADRP X0, 0x9CC000
	0x0377A3D4 LDR X0, [X0 + 0xF20]
	0x0377A3D8 BL 0x1C16CF4
	0x0377A3DC ADRP X0, 0x9CC000
	0x0377A3E0 LDR X0, [X0 + 0xF10]
	0x0377A3E4 BL 0x1C16CF4
	0x0377A3E8 ADRP X0, 0x9CC000
	0x0377A3EC LDR X0, [X0 + 0xF18]
	0x0377A3F0 BL 0x1C16CF4
	0x0377A3F4 ADRP X0, 0x9CC000
	0x0377A3F8 LDR X0, [X0 + 0xEF0]
	0x0377A3FC BL 0x1C16CF4
	0x0377A400 ADRP X0, 0x9CC000
	0x0377A404 LDR X0, [X0 + 0xF30]
	0x0377A408 BL 0x1C16CF4
	0x0377A40C ADRP X0, 0x9CC000
	0x0377A410 LDR X0, [X0 + 0xF38]
	0x0377A414 BL 0x1C16CF4
	0x0377A418 ADRP X0, 0x9B3000
	0x0377A41C LDR X0, [X0 + 0x3D0]
	0x0377A420 BL 0x1C16CF4
	0x0377A424 ADRP X0, 0x9CC000
	0x0377A428 LDR X0, [X0 + 0xF40]
	0x0377A42C BL 0x1C16CF4
	0x0377A430 ADRP X0, 0x9CC000
	0x0377A434 LDR X0, [X0 + 0xF48]
	0x0377A438 BL 0x1C16CF4
	0x0377A43C ADRP X0, 0x9CC000
	0x0377A440 LDR X0, [X0 + 0xEF8]
	0x0377A444 BL 0x1C16CF4
	0x0377A448 ADRP X0, 0x9CC000
	0x0377A44C LDR X0, [X0 + 0xF08]
	0x0377A450 BL 0x1C16CF4
	0x0377A454 ADRP X0, 0x9CC000
	0x0377A458 LDR X0, [X0 + 0xF50]
	0x0377A45C BL 0x1C16CF4
	0x0377A460 ADRP X0, 0x9CC000
	0x0377A464 LDR X0, [X0 + 0xF00]
	0x0377A468 BL 0x1C16CF4
	0x0377A46C ADRP X0, 0x9CC000
	0x0377A470 LDR X0, [X0 + 0xF58]
	0x0377A474 BL 0x1C16CF4
	0x0377A478 ADRP X0, 0x9CC000
	0x0377A47C LDR X0, [X0 + 0xF60]
	0x0377A480 BL 0x1C16CF4
	0x0377A484 ADRP X0, 0x9CC000
	0x0377A488 LDR X0, [X0 + 0xF68]
	0x0377A48C BL 0x1C16CF4
	0x0377A490 MOVZ W8, 0x1
	0x0377A494 STRB W8, [X29 + 0xF58]
	0x0377A498 LDR X1, [X21]
	0x0377A49C LDR X2, [X20]
	0x0377A4A0 MOV X0, X19
	0x0377A4A4 BL 0x21FC754
	0x0377A4A8 STR X0, [X19 + 0x170]
	0x0377A4AC LDR X1, [X28]
	0x0377A4B0 LDR X2, [X20]
	0x0377A4B4 MOV X0, X19
	0x0377A4B8 BL 0x21FC754
	0x0377A4BC STR X0, [X19 + 0x178]
	0x0377A4C0 LDR X1, [X27]
	0x0377A4C4 LDR X2, [X20]
	0x0377A4C8 MOV X0, X19
	0x0377A4CC BL 0x21FC754
	0x0377A4D0 STR X0, [X19 + 0x180]
	0x0377A4D4 LDR X1, [X26]
	0x0377A4D8 LDR X2, [X20]
	0x0377A4DC MOV X0, X19
	0x0377A4E0 BL 0x21FC754
	0x0377A4E4 STR X0, [X19 + 0x188]
	0x0377A4E8 LDR X1, [X25]
	0x0377A4EC LDR X2, [X20]
	0x0377A4F0 MOV X0, X19
	0x0377A4F4 BL 0x21FC754
	0x0377A4F8 STR X0, [X19 + 0x1A0]
	0x0377A4FC LDR X1, [X24]
	0x0377A500 LDR X2, [X20]
	0x0377A504 MOV X0, X19
	0x0377A508 BL 0x21FC754
	0x0377A50C STR X0, [X19 + 0x1A8]
	0x0377A510 LDR X1, [X22]
	0x0377A514 LDR X2, [X20]
	0x0377A518 MOV X0, X19
	0x0377A51C BL 0x21FC754
	0x0377A520 STR X0, [X19 + 0x190]
	0x0377A524 ADRP X8, 0x9CC000
	0x0377A528 LDR X8, [X8 + 0xF48]
	0x0377A52C LDR X2, [X20]
	0x0377A530 MOV X0, X19

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X24, 0xC67000
	015 Move W8, [X24+3910]
	016 Move W20, W4
	017 Move W21, W3
	018 Move X19, X2
	019 Move X22, X1
	020 Move X23, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {33}
	025 Move X0, 0x97C000
	026 Move X0, [X0+368]
	027 Call 0x1C17CF4
	028 Move X0, 0x97C000
	029 Move X0, [X0+3144]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X24+3910], W8
	033 Compare X23, 0
	034 JumpIfEqual {158}
	035 Compare X22, 0
	036 JumpIfEqual {158}
	037 Move W29, [X22+16]
	038 Move W27, [X19]
	039 Move W28, [X23+16]
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Subtract W8, W29, 1
	042 Move W1, W27
	043 Move [X31+8], W8
	044 Move X0, X22
	045 Move X2, X31
	046 Call String.get_Chars, X0, X1
	047 And W8, W0, 0xFFFF
	048 Move W24, W0
	049 NotImplemented "Instruction CMP not yet implemented."
	050 NotImplemented "Instruction CMP not yet implemented."
	051 NotImplemented "Instruction CMP not yet implemented."
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Compare W21, 0
	054 JumpIfEqual {138}
	055 Move W24, 47
	056 NotImplemented "Instruction CMP not yet implemented."
	057 NotImplemented "Instruction CMP not yet implemented."
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move W8, [X19]
	060 Add W1, W8, 1
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move X0, X22
	063 Move X2, X31
	064 Move [X19], W1
	065 Call String.get_Chars, X0, X1
	066 Move W24, W0
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Move W24, 41
	069 Move W8, [X19]
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Add W9, W8, 1
	072 Move [X31+12], W9
	073 Move W9, [X31+8]
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Add X2, X31, 12
	076 Move X0, X23
	077 Move X1, X22
	078 Move W3, W21
	079 Move W4, W20
	080 Call InputControlPath.MatchPathComponent, X0, X1, X2, X3, X4
	081 Move TEMP, X0
	082 And TEMP, TEMP, 1
	083 Compare TEMP, 1
	084 JumpIfEqual {156}
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move W1, [X19]
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Move W24, 62
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Move W24, 125
	091 Move W24, 92
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Move X0, X23
	094 Move W1, W20
	095 Move X2, X31
	096 Call String.get_Chars, X0, X1
	097 And W8, W0, 0xFFFF
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Move X8, 0x97C000
	100 Move X8, [X8+3144]
	101 Move W25, W0
	102 Move X0, [X8]
	103 Move W8, [X0+224]
	104 Compare W8, 0
	105 JumpIfNotEqual {107}
	106 Call 0x1C17DFC
	107 Move X0, X31
	108 Call CultureInfo.get_InvariantCulture
	109 Move X8, 0x97C000
	110 Move X8, [X8+368]
	111 Move X26, X0
	112 Move X8, [X8]
	113 Move W9, [X8+224]
	114 Compare W9, 0
	115 JumpIfNotEqual {118}
	116 Move X0, X8
	117 Call 0x1C17DFC
	118 Move W0, W25
	119 Move X1, X26
	120 Move X2, X31
	121 Call Char.ToLower, X0, X1
	122 And W25, W0, 0xFFFF
	123 Move X0, X31
	124 Call CultureInfo.get_InvariantCulture
	125 Move X1, X0
	126 Move W0, W24
	127 Move X2, X31
	128 Call Char.ToLower, X0, X1
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Move W8, [X19]
	131 Add W1, W8, 1
	132 Move [X19], W1
	133 NotImplemented "Instruction CMP not yet implemented."
	134 Add W20, W20, 1
	135 Move W8, [X19]
	136 Add W8, W8, 1
	137 Move [X19], W8
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Move W0, 1
	140 Move W0, W31
	141 Move [X19], W27
	142 Move X20, [X31+96]
	143 Move X19, [X31+104]
	144 Move X22, [X31+80]
	145 Move X21, [X31+88]
	146 Move X24, [X31+64]
	147 Move X23, [X31+72]
	148 Move X26, [X31+48]
	149 Move X25, [X31+56]
	150 Move X28, [X31+32]
	151 Move X27, [X31+40]
	152 Move X29, [X31+16]
	153 Move X30, [X31+24]
	154 Add X31, X31, 112
	155 Return X0
	156 Move W8, [X31+12]
	157 Move [X19], W8
	158 Call 0x1C17F20

Method: System.Boolean PathComponentCanYieldMultipleMatches(System.String path, System.Int32 indexInPath)

Disassembly:
	0x0377A534 LDR X1, [X8]
	0x0377A538 BL 0x21FC754
	0x0377A53C STR X0, [X19 + 0x198]
	0x0377A540 ADRP X8, 0x9CC000
	0x0377A544 LDR X8, [X8 + 0xF38]
	0x0377A548 MOV X0, X19
	0x0377A54C LDR X1, [X8]
	0x0377A550 ADRP X8, 0x9CC000
	0x0377A554 LDR X8, [X8 + 0xF28]
	0x0377A558 LDR X2, [X8]
	0x0377A55C BL 0x21FC754
	0x0377A560 STR X0, [X19 + 0x1B0]
	0x0377A564 ADRP X8, 0x9CC000
	0x0377A568 LDR X8, [X8 + 0xF68]
	0x0377A56C LDR X2, [X20]
	0x0377A570 MOV X0, X19
	0x0377A574 LDR X1, [X8]
	0x0377A578 BL 0x21FC754
	0x0377A57C STR X0, [X19 + 0x1B8]
	0x0377A580 ADRP X8, 0x9CC000
	0x0377A584 LDR X8, [X8 + 0xF50]
	0x0377A588 LDR X2, [X20]
	0x0377A58C MOV X0, X19
	0x0377A590 LDR X1, [X8]
	0x0377A594 BL 0x21FC754
	0x0377A598 STR X0, [X19 + 0x1C0]
	0x0377A59C ADRP X8, 0x9CC000
	0x0377A5A0 LDR X8, [X8 + 0xF58]
	0x0377A5A4 LDR X2, [X23]
	0x0377A5A8 MOV X0, X19
	0x0377A5AC LDR X1, [X8]
	0x0377A5B0 BL 0x21FC754
	0x0377A5B4 STR X0, [X19 + 0x1C8]
	0x0377A5B8 ADRP X8, 0x9CC000
	0x0377A5BC LDR X8, [X8 + 0xF30]
	0x0377A5C0 LDR X2, [X23]
	0x0377A5C4 MOV X0, X19
	0x0377A5C8 LDR X1, [X8]
	0x0377A5CC BL 0x21FC754
	0x0377A5D0 STR X0, [X19 + 0x1D0]
	0x0377A5D4 ADRP X8, 0x9CC000
	0x0377A5D8 LDR X8, [X8 + 0xF60]
	0x0377A5DC LDR X2, [X20]
	0x0377A5E0 MOV X0, X19
	0x0377A5E4 LDR X1, [X8]
	0x0377A5E8 BL 0x21FC754
	0x0377A5EC STR X0, [X19 + 0x1D8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Compare X0, 0
	006 JumpIfEqual {47}
	007 Move W19, W1
	008 Move W1, 47
	009 Move W2, W19
	010 Move X3, X31
	011 Move X20, X0
	012 Call String.IndexOf, X0, X1, X2
	013 Add W31, W0, 1
	014 Subtract W21, W0, W19
	015 Move W1, 42
	016 Move X0, X20
	017 Move W2, W19
	018 Move W3, W21
	019 Move X4, X31
	020 Call String.IndexOf, X0, X1, X2, X3
	021 Add W31, W0, 1
	022 Move W1, 60
	023 Move X0, X20
	024 Move W2, W19
	025 Move W3, W21
	026 Move X4, X31
	027 Call String.IndexOf, X0, X1, X2, X3
	028 Move W1, 42
	029 Move X0, X20
	030 Move W2, W19
	031 Move X3, X31
	032 Call String.IndexOf, X0, X1, X2
	033 Add W31, W0, 1
	034 Move W0, 1
	035 Move W1, 60
	036 Move X0, X20
	037 Move W2, W19
	038 Move X3, X31
	039 Call String.IndexOf, X0, X1, X2
	040 Add W31, W0, 1
	041 NotImplemented "Instruction CSET not yet implemented."
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X30, [X31+32]
	045 Move X21, [X31+40]
	046 Return X0
	047 Call 0x1C17F20

Method: System.Collections.Generic.IEnumerable`1<UnityEngine.InputSystem.InputControlPath/ParsedPathComponent> Parse(System.String path)

Disassembly:
	0x0377A5F0 ADRP X8, 0x9CC000
	0x0377A5F4 LDR X8, [X8 + 0xF40]
	0x0377A5F8 LDR X2, [X20]
	0x0377A5FC MOV X0, X19
	0x0377A600 LDR X1, [X8]
	0x0377A604 BL 0x21FC754
	0x0377A608 STR X0, [X19 + 0x1E0]
	0x0377A60C LDP X20, X19, [X31 + 0x50]
	0x0377A610 LDP X22, X21, [X31 + 0x40]
	0x0377A614 LDP X24, X23, [X31 + 0x30]
	0x0377A618 LDP X26, X25, [X31 + 0x20]
	0x0377A61C LDP X28, X27, [X31 + 0x10]
	0x0377A620 LDP X29, X30, [X31], #0x60
	0x0377A624 RET
	0x0377A628 STR X30, [X31 - 0x20]!
	0x0377A62C STP X20, X19, [X31 + 0x10]
	0x0377A630 ADRP X20, 0xC66000
	0x0377A634 LDRB W8, [X20 + 0xF97]
	0x0377A638 MOV X19, X0
	0x0377A63C CBNZ W8, 0x377A654
	0x0377A640 ADRP X0, 0x9CC000
	0x0377A644 LDR X0, [X0 + 0xEE0]
	0x0377A648 BL 0x1C16CF4
	0x0377A64C MOVZ W8, 0x1
	0x0377A650 STRB W8, [X20 + 0xF97]
	0x0377A654 ADRP X8, 0x9CC000
	0x0377A658 LDR X8, [X8 + 0xEE0]
	0x0377A65C LDR X8, [X8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xC67000
	006 Move X21, 0x9CD000
	007 Move W8, [X20+3911]
	008 Move X21, [X21+3672]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x9CD000
	015 Move X0, [X0+3672]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3911], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move X1, X31
	022 Move X20, X0
	023 Call Object..ctor, X0
	024 Move TEMP, 1
	025 Not TEMP
	026 Move W8, TEMP
	027 Move X0, X31
	028 Move [X20+16], W8
	029 Call Environment.get_CurrentManagedThreadId
	030 Move [X20+104], W0
	031 Move [X20+120], X19
	032 Move X0, X20
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Move X21, [X31+40]
	037 Return X0

