Type: UnityEngine.InputSystem.ProximitySensor

Method: UnityEngine.InputSystem.Controls.AxisControl get_distance()

Disassembly:
	0x037C0238 FADD S0, S0, S1
	0x037C023C FCMP S0, S2

ISIL:
	001 Move X0, [X0+368]
	002 Return X0

Method: System.Void set_distance(UnityEngine.InputSystem.Controls.AxisControl value)

Disassembly:
	0x037C0240 B.MI 0x37C028C
	0x037C0244 LDR X8, [X19 + 0x1A0]

ISIL:
	001 Move [X0+368], X1
	002 Return 

Method: UnityEngine.InputSystem.ProximitySensor get_current()

Disassembly:
	0x037C0248 CBZ X8, 0x37C0310
	0x037C024C LDRB W9, [X28 + 0x78F]
	0x037C0250 LDR X21, [X8 + 0x190]
	0x037C0254 CBNZ W9, 0x37C026C
	0x037C0258 ADRP X0, 0x93B000
	0x037C025C LDR X0, [X0 + 0xF08]
	0x037C0260 BL 0x1C16CF4
	0x037C0264 MOVZ W8, 0x1
	0x037C0268 STRB W8, [X28 + 0x78F]
	0x037C026C LDR X8, [X20]
	0x037C0270 LDR X3, [X27]
	0x037C0274 MOV X0, X21
	0x037C0278 MOV W1, W31
	0x037C027C LDR X8, [X8 + 0xB8]
	0x037C0280 MOV X2, X31
	0x037C0284 LDP S0, S1, [X8]
	0x037C0288 BL 0x2209FB4
	0x037C028C LDRB W8, [X22 + 0x21]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xC22000
	005 Move X20, 0x988000
	006 Move W8, [X19+417]
	007 Move X20, [X20+3944]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x988000
	013 Move X0, [X0+3944]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+417], W8
	017 Move X8, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X8, [X8+184]
	021 Move X0, [X8]
	022 Move X30, [X31+32]
	023 Return X0

Method: System.Void set_current(UnityEngine.InputSystem.ProximitySensor value)

Disassembly:
	0x037C0290 CBZ W8, 0x37C02EC
	0x037C0294 MOV X0, X31
	0x037C0298 BL 0x37FC688
	0x037C029C LDR X8, [X25]
	0x037C02A0 LDR V2, [X22 + 0x28]
	0x037C02A4 LDR X8, [X8 + 0xB8]
	0x037C02A8 LDP S1, S3, [X8 + 0x8]
	0x037C02AC FCVT S1, S1
	0x037C02B0 FADD D1, D2, D1
	0x037C02B4 FCVT S2, S3
	0x037C02B8 FADD D1, D1, D2
	0x037C02BC FCMP D0, D1
	0x037C02C0 B.LT 0x37C02EC
	0x037C02C4 LDR X8, [X19 + 0x1A0]
	0x037C02C8 CBZ X8, 0x37C0310
	0x037C02CC LDR X0, [X8 + 0x1C0]
	0x037C02D0 ADRP X8, 0x987000
	0x037C02D4 LDR X8, [X8 + 0xFB0]
	0x037C02D8 MOV W1, W31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xC22000
	006 Move X21, 0x988000
	007 Move W8, [X20+418]
	008 Move X21, [X21+3944]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x988000
	015 Move X0, [X0+3944]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+418], W8
	019 Move X8, [X21]
	020 Move X8, [X8+184]
	021 Move [X8], X19
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X30, [X31+32]
	025 Move X21, [X31+40]
	026 Return 

Method: System.Void MakeCurrent()

Disassembly:
	0x037C02DC MOV W2, W31
	0x037C02E0 MOV X3, X31
	0x037C02E4 LDR X4, [X8]
	0x037C02E8 BL 0x220916C
	0x037C02EC LDP X20, X19, [X31 + 0x70]
	0x037C02F0 LDP X22, X21, [X31 + 0x60]
	0x037C02F4 LDP X24, X23, [X31 + 0x50]
	0x037C02F8 LDP X26, X25, [X31 + 0x40]
	0x037C02FC LDP X28, X27, [X31 + 0x30]
	0x037C0300 LDP X29, X30, [X31 + 0x20]
	0x037C0304 LDR V8, [X31 + 0x10]
	0x037C0308 ADD X31, X31, 0x80
	0x037C030C RET
	0x037C0310 BL 0x1C16F20
	0x037C0314 SUB X31, X31, 0x100
	0x037C0318 STR X30, [X31 + 0xA0]
	0x037C031C STP X28, X27, [X31 + 0xB0]
	0x037C0320 STP X26, X25, [X31 + 0xC0]
	0x037C0324 STP X24, X23, [X31 + 0xD0]
	0x037C0328 STP X22, X21, [X31 + 0xE0]
	0x037C032C STP X20, X19, [X31 + 0xF0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X1, X31
	005 Move X19, X0
	006 Call InputDevice.MakeCurrent, X0
	007 Move X20, 0xC22000
	008 Move W8, [X20+559]
	009 Compare W8, 0
	010 JumpIfNotEqual {16}
	011 Move X0, 0x988000
	012 Move X0, [X0+3944]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+559], W8
	016 Move X8, 0x988000
	017 Move X8, [X8+3944]
	018 Move X8, [X8]
	019 Move X8, [X8+184]
	020 Move [X8], X19
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X30, [X31+32]
	024 Return 

Method: System.Void OnRemoved()

Disassembly:
	0x037C0330 MRS X25, 0xC000
	0x037C0334 LDR X8, [X25 + 0x28]
	0x037C0338 ADRP X20, 0xC21000
	0x037C033C MOV X19, X0
	0x037C0340 STR X8, [X31 + 0x98]
	0x037C0344 LDRB W8, [X20 + 0x1B2]
	0x037C0348 STR X1, [X31 + 0x18]
	0x037C034C TBNZ X8, 0x0, 0x37C03AC
	0x037C0350 ADRP X0, 0x95B000
	0x037C0354 LDR X0, [X0 + 0xD18]
	0x037C0358 BL 0x1C16CF4
	0x037C035C ADRP X0, 0x987000
	0x037C0360 LDR X0, [X0 + 0xFB0]
	0x037C0364 BL 0x1C16CF4
	0x037C0368 ADRP X0, 0x987000
	0x037C036C LDR X0, [X0 + 0xFC8]
	0x037C0370 BL 0x1C16CF4
	0x037C0374 ADRP X0, 0x984000
	0x037C0378 LDR X0, [X0 + 0xF90]
	0x037C037C BL 0x1C16CF4
	0x037C0380 ADRP X0, 0x987000
	0x037C0384 LDR X0, [X0 + 0xFB8]
	0x037C0388 BL 0x1C16CF4
	0x037C038C ADRP X0, 0x987000
	0x037C0390 LDR X0, [X0 + 0xFC0]
	0x037C0394 BL 0x1C16CF4
	0x037C0398 ADRP X0, 0x986000
	0x037C039C LDR X0, [X0 + 0xD58]
	0x037C03A0 BL 0x1C16CF4
	0x037C03A4 MOVZ W8, 0x1
	0x037C03A8 STRB W8, [X20 + 0x1B2]
	0x037C03AC MOVI V0.2D, 0x0
	0x037C03B0 ADD X0, X31, 0x18

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X1, X31
	005 Move X19, X0
	006 Call InputDevice.OnRemoved, X0
	007 Move X20, 0xC22000
	008 Move W8, [X20+560]
	009 Compare W8, 0
	010 JumpIfNotEqual {16}
	011 Move X0, 0x988000
	012 Move X0, [X0+3944]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+560], W8
	016 Move X20, 0x988000
	017 Move X20, [X20+3944]
	018 Move X8, [X20]
	019 Move X8, [X8+184]
	020 Move X9, [X8]
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move X19, 0xC22000
	023 Move W9, [X19+559]
	024 Compare W9, 0
	025 JumpIfNotEqual {32}
	026 Move X0, X20
	027 Call 0x1C17CF4
	028 Move X8, [X20]
	029 Move W9, 1
	030 Move [X19+559], W9
	031 Move X8, [X8+184]
	032 Move [X8], X31
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Return 

Method: System.Void FinishSetup()

Disassembly:
	0x037C03B4 MOV X1, X31
	0x037C03B8 STR X31, [X31 + 0x90]
	0x037C03BC STP X31, X31, [X31]
	0x037C03C0 STR X31, [X31 + 0x50]
	0x037C03C4 STP V0, V0, [X31 + 0x70]
	0x037C03C8 STR V0, [X31 + 0x6]
	0x037C03CC STP V0, V0, [X31 + 0x30]
	0x037C03D0 STR V0, [X31 + 0x2]
	0x037C03D4 BL 0x37F80B4
	0x037C03D8 MOVZ W8, 0x5441
	0x037C03DC MOVK W8, 0x444C0000
	0x037C03E0 CMP W0, W8
	0x037C03E4 B.EQ 0x37C04D8
	0x037C03E8 LDR X0, [X31 + 0x18]
	0x037C03EC MOV X1, X31
	0x037C03F0 BL 0x38029AC
	0x037C03F4 CBZ X0, 0x37C0968
	0x037C03F8 LDR W20, [X0 + 0x14]
	0x037C03FC MOV X22, X0
	0x037C0400 MOV X0, X31
	0x037C0404 BL 0x37FFEC0
	0x037C0408 CMP W20, W0
	0x037C040C B.NE 0x37C04C4
	0x037C0410 MOV X0, X19
	0x037C0414 MOV X1, X31
	0x037C0418 BL 0x3772640
	0x037C041C ADD X27, X19, 0x1A8
	0x037C0420 ADRP X26, 0x987000
	0x037C0424 LDR V0, [X27]
	0x037C0428 LDR X26, [X26 + 0xFC0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xC22000
	007 Move X21, 0x960000
	008 Move X22, 0x985000
	009 Move W8, [X20+419]
	010 Move X21, [X21+3520]
	011 Move X22, [X22+3632]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x985000
	018 Move X0, [X0+3632]
	019 Call 0x1C17CF4
	020 Move X0, 0x960000
	021 Move X0, [X0+3520]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+419], W8
	025 Move X1, [X21]
	026 Move X2, [X22]
	027 Move X0, X19
	028 Call 0x21FD754, X0, X1
	029 Move [X19+368], X0
	030 Move X0, X19
	031 Move X20, [X31+32]
	032 Move X19, [X31+40]
	033 Move X22, [X31+16]
	034 Move X21, [X31+24]
	035 Move X1, X31
	036 Move X30, [X31+48]
	037 Call InputControl.FinishSetup, X0
	038 Return 

Method: System.Void .ctor()

Disassembly:
	0x037C042C MOV X21, X0
	0x037C0430 ADD X0, X31, 0x0

ISIL:
	001 Move X1, X31
	002 Call InputDevice..ctor, X0
	003 Return 

