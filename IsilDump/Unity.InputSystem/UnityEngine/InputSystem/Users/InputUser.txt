Type: UnityEngine.InputSystem.Users.InputUser

Method: System.Boolean get_valid()

Disassembly:
	0x037D3BD0 ADRP X0, 0x975000
	0x037D3BD4 LDR X0, [X0 + 0x9F8]
	0x037D3BD8 BL 0x1C16CF4
	0x037D3BDC MOVZ W8, 0x1
	0x037D3BE0 STRB W8, [X20 + 0x30B]
	0x037D3BE4 LDR X8, [X21]
	0x037D3BE8 LDR X8, [X8 + 0xB8]
	0x037D3BEC LDR X8, [X8]
	0x037D3BF0 CBZ X8, 0x37D3C0C
	0x037D3BF4 LDRB W8, [X8 + 0x28]
	0x037D3BF8 CMP W8, 0x0
	0x037D3BFC CSET W0, EQ
	0x037D3C00 LDP X20, X19, [X31 + 0x10]
	0x037D3C04 LDP X30, X21, [X31], #0x20
	0x037D3C08 RET
	0x037D3C0C BL 0x1C16F20
	0x037D3C10 STP X30, X21, [X31 - 0x20]!
	0x037D3C14 STP X20, X19, [X31 + 0x10]
	0x037D3C18 ADRP X21, 0xC0E000
	0x037D3C1C LDRB W8, [X21 + 0x25D]
	0x037D3C20 MOV X20, X1
	0x037D3C24 MOV X19, X0
	0x037D3C28 TBNZ X8, 0x0, 0x37D3C7C
	0x037D3C2C ADRP X0, 0x920000
	0x037D3C30 LDR X0, [X0 + 0xA28]
	0x037D3C34 BL 0x1C16CF4
	0x037D3C38 ADRP X0, 0x920000
	0x037D3C3C LDR X0, [X0 + 0x598]
	0x037D3C40 BL 0x1C16CF4
	0x037D3C44 ADRP X0, 0x975000
	0x037D3C48 LDR X0, [X0 + 0xA00]
	0x037D3C4C BL 0x1C16CF4
	0x037D3C50 ADRP X0, 0x975000
	0x037D3C54 LDR X0, [X0 + 0xA08]
	0x037D3C58 BL 0x1C16CF4
	0x037D3C5C ADRP X0, 0x975000
	0x037D3C60 LDR X0, [X0 + 0xA10]
	0x037D3C64 BL 0x1C16CF4
	0x037D3C68 ADRP X0, 0x975000
	0x037D3C6C LDR X0, [X0 + 0xA18]
	0x037D3C70 BL 0x1C16CF4
	0x037D3C74 MOVZ W8, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xC0F000
	005 Move W8, [X20+720]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x976000
	012 Move X0, [X0+2376]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+720], W8
	016 Move W8, [X19]
	017 Compare W8, 0
	018 JumpIfEqual {38}
	019 Move X9, 0x976000
	020 Move X9, [X9+2376]
	021 Move X9, [X9]
	022 Move X11, [X9+184]
	023 Move W9, [X11+8]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X11, [X11+24]
	026 Move X10, X31
	027 Add X12, X11, 32
	028 Compare X11, 0
	029 JumpIfEqual {43}
	030 Move W13, [X11+24]
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move W13, [X12]
	033 Add X10, X10, 1
	034 NotImplemented "Instruction CMP not yet implemented."
	035 NotImplemented "Instruction CSET not yet implemented."
	036 NotImplemented "Instruction CMP not yet implemented."
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move W0, W31
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move X30, [X31+32]
	042 Return X0
	043 Call 0x1C17F20
	044 Call 0x1C17F28

Method: System.Int32 get_index()

Disassembly:
	0x037E0F1C ADD X1, X31, 0x20
	0x037E0F20 BL 0x1C16E04
	0x037E0F24 MOV X20, X0
	0x037E0F28 ADRP X0, 0x969000
	0x037E0F2C LDR X0, [X0 + 0xA8]
	0x037E0F30 BL 0x1C16D08
	0x037E0F34 MOV X1, X19
	0x037E0F38 MOV X2, X20
	0x037E0F3C MOV X3, X31
	0x037E0F40 BL 0x3227BD4
	0x037E0F44 MOV X19, X0
	0x037E0F48 ADRP X0, 0x913000
	0x037E0F4C LDR X0, [X0 + 0x5B0]
	0x037E0F50 BL 0x1C16D08
	0x037E0F54 BL 0x1C16F10
	0x037E0F58 MOV X1, X19
	0x037E0F5C MOV X2, X31
	0x037E0F60 MOV X20, X0
	0x037E0F64 BL 0x337DF1C
	0x037E0F68 ADRP X0, 0x969000
	0x037E0F6C LDR X0, [X0 + 0xB0]
	0x037E0F70 BL 0x1C16D08
	0x037E0F74 MOV X1, X0
	0x037E0F78 MOV X0, X20
	0x037E0F7C BL 0x1C16DEC
	0x037E0F80 SUB X31, X31, 0x70
	0x037E0F84 STP X29, X30, [X31 + 0x10]
	0x037E0F88 STP X28, X27, [X31 + 0x20]
	0x037E0F8C STP X26, X25, [X31 + 0x30]
	0x037E0F90 STP X24, X23, [X31 + 0x40]
	0x037E0F94 STP X22, X21, [X31 + 0x50]
	0x037E0F98 STP X20, X19, [X31 + 0x60]
	0x037E0F9C ADRP X22, 0xC01000
	0x037E0FA0 ADRP X26, 0x968000
	0x037E0FA4 ADRP X27, 0x969000
	0x037E0FA8 LDRB W8, [X22 + 0x2F5]
	0x037E0FAC LDR X26, [X26 + 0x948]
	0x037E0FB0 LDR X27, [X27 + 0xB8]
	0x037E0FB4 MOV X19, X2
	0x037E0FB8 MOV W20, W1
	0x037E0FBC MOV W21, W0
	0x037E0FC0 TBNZ X8, 0x0, 0x37E1008
	0x037E0FC4 ADRP X0, 0x969000
	0x037E0FC8 LDR X0, [X0 + 0xC0]
	0x037E0FCC BL 0x1C16CF4
	0x037E0FD0 ADRP X0, 0x969000
	0x037E0FD4 LDR X0, [X0 + 0xC8]
	0x037E0FD8 BL 0x1C16CF4
	0x037E0FDC ADRP X0, 0x969000
	0x037E0FE0 LDR X0, [X0 + 0xD0]
	0x037E0FE4 BL 0x1C16CF4
	0x037E0FE8 ADRP X0, 0x969000
	0x037E0FEC LDR X0, [X0 + 0xB8]
	0x037E0FF0 BL 0x1C16CF4
	0x037E0FF4 ADRP X0, 0x968000
	0x037E0FF8 LDR X0, [X0 + 0x948]
	0x037E0FFC BL 0x1C16CF4
	0x037E1000 MOVZ W8, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move W0, [X0]
	006 Compare W0, 0
	007 JumpIfEqual {14}
	008 Call InputUser.TryFindUserIndex, X0
	009 Add W31, W0, 1
	010 Move X20, [X31+16]
	011 Move X19, [X31+24]
	012 Move X30, [X31+32]
	013 Return X0
	014 Move X0, 0x914000
	015 Move X0, [X0+1456]
	016 Call 0x1C17D08
	017 Call 0x1C17F10
	018 Move X19, X0
	019 Move X0, 0x969000
	020 Move X0, [X0+2728]
	021 Call 0x1C17D08
	022 Move X1, X0
	023 Move X0, X19
	024 Move X2, X31
	025 Call InvalidOperationException..ctor, X0, X1
	026 Move X0, 0x96A000
	027 Move X0, [X0+104]
	028 Call 0x1C17D08
	029 Move X1, X0
	030 Move X0, X19
	031 Call 0x1C17DEC
	032 Move W8, [X19]
	033 Move X0, 0x91C000
	034 Move [X31+12], W8
	035 Move X0, [X0+1824]
	036 Call 0x1C17D08
	037 Add X1, X31, 12
	038 Call 0x1C17E04
	039 Move X19, X0
	040 Move X0, 0x96A000
	041 Move X0, [X0+112]
	042 Call 0x1C17D08
	043 Move X1, X19
	044 Move X2, X31
	045 Call String.Format, X0, X1
	046 Move X19, X0
	047 Move X0, 0x914000
	048 Move X0, [X0+1456]
	049 Call 0x1C17D08
	050 Call 0x1C17F10
	051 Move X1, X19
	052 Move X2, X31
	053 Move X20, X0
	054 Call InvalidOperationException..ctor, X0, X1
	055 Move X0, 0x96A000
	056 Move X0, [X0+104]
	057 Call 0x1C17D08
	058 Move X1, X0
	059 Move X0, X20
	060 Call 0x1C17DEC

Method: System.UInt32 get_id()

Disassembly:
	0x037E1098 LDR X8, [X26]
	0x037E109C LDR X8, [X8 + 0xB8]

ISIL:
	001 Move W0, [X0]
	002 Return X0

Method: System.Nullable`1<UnityEngine.InputSystem.Users.InputUserAccountHandle> get_platformUserAccountHandle()

Disassembly:
	0x037E10A0 LDR X8, [X8 + 0x18]
	0x037E10A4 CBZ X8, 0x37E110C
	0x037E10A8 LDR W9, [X8 + 0x18]
	0x037E10AC CMP W9, W21
	0x037E10B0 B.LS 0x37E1118
	0x037E10B4 CBZ X0, 0x37E1124
	0x037E10B8 ADD X9, X8, X28, 0x2, LSL
	0x037E10BC LDR W1, [X9 + 0x20]
	0x037E10C0 LDR X10, [X0 + 0x18]
	0x037E10C4 LDR X8, [X0 + 0x40]
	0x037E10C8 LDR X4, [X0 + 0x28]
	0x037E10CC MOV X0, X8
	0x037E10D0 MOV W2, W20
	0x037E10D4 MOV X3, X19
	0x037E10D8 BLR X10
	0x037E10DC LDR X8, [X26]
	0x037E10E0 LDR X1, [X27]
	0x037E10E4 ADD W22, W22, 0x1
	0x037E10E8 LDR X8, [X8 + 0xB8]
	0x037E10EC ADD X0, X8, 0x58
	0x037E10F0 BL 0x28F140C
	0x037E10F4 LDR X8, [X26]
	0x037E10F8 CMP W22, W0
	0x037E10FC LDR X8, [X8 + 0xB8]
	0x037E1100 ADD X0, X8, 0x58
	0x037E1104 B.LT 0x37E108C
	0x037E1108 B 0x37E1200
	0x037E110C STR X28, [X31 + 0x8]
	0x037E1110 BL 0x1C16F20
	0x037E1114 B 0x37E126C
	0x037E1118 STR X28, [X31 + 0x8]
	0x037E111C BL 0x1C16F28
	0x037E1120 B 0x37E124C
	0x037E1124 BL 0x1C16F20
	0x037E1128 B 0x37E124C
	0x037E112C B 0x37E113C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xC01000
	007 Move X22, 0x968000
	008 Move X19, X8
	009 Move W8, [X21+721]
	010 Move X22, [X22+2376]
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x968000
	017 Move X0, [X0+2376]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+721], W8
	021 Move X8, [X22]
	022 Move X0, X20
	023 Move X8, [X8+184]
	024 Move X21, [X8+32]
	025 Call InputUser.get_index, X0
	026 Compare X21, 0
	027 JumpIfEqual {42}
	028 Move W8, [X21+24]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move W8, 184
	031 NotImplemented "Instruction SMADDL not yet implemented."
	032 Move X9, [X8+48]
	033 Move V0, [X8+2]
	034 Move X22, [X31+16]
	035 Move X21, [X31+24]
	036 Move [X19+16], X9
	037 Move [X19], V0
	038 Move X20, [X31+32]
	039 Move X19, [X31+40]
	040 Move X30, [X31+48]
	041 Return X0
	042 Call 0x1C17F20
	043 Call 0x1C17F28

Method: System.String get_platformUserAccountName()

Disassembly:
	0x037E1130 B 0x37E113C
	0x037E1134 B 0x37E1138
	0x037E1138 STR X28, [X31 + 0x8]
	0x037E113C MOV X26, X0
	0x037E1140 CMP W1, 0x1
	0x037E1144 B.NE 0x37E127C
	0x037E1148 MOV X0, X26
	0x037E114C BL 0x3EB1AD0
	0x037E1150 MOV X26, X0
	0x037E1154 MOV X0, X23
	0x037E1158 BL 0x1C16D08
	0x037E115C LDR X8, [X26]
	0x037E1160 LDR X1, [X8]
	0x037E1164 BL 0x1C17270
	0x037E1168 TBZ X0, 0x0, 0x37E124C
	0x037E116C LDR X26, [X26]
	0x037E1170 BL 0x3EB1AE0
	0x037E1174 CBZ X26, 0x37E126C
	0x037E1178 MOV X0, X26
	0x037E117C MOV X1, X31
	0x037E1180 BL 0x33B32AC
	0x037E1184 CBZ X0, 0x37E126C
	0x037E1188 LDR X8, [X0]
	0x037E118C LDP X9, X1, [X8 + 0x1A8]
	0x037E1190 BLR X9
	0x037E1194 MOV X27, X0
	0x037E1198 MOV X0, X24
	0x037E119C BL 0x1C16D08
	0x037E11A0 MOV X1, X0
	0x037E11A4 MOV X0, X27

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xC01000
	006 Move X21, 0x968000
	007 Move W8, [X20+722]
	008 Move X21, [X21+2376]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x968000
	015 Move X0, [X0+2376]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+722], W8
	019 Move X8, [X21]
	020 Move X0, X19
	021 Move X8, [X8+184]
	022 Move X20, [X8+32]
	023 Call InputUser.get_index, X0
	024 Compare X20, 0
	025 JumpIfEqual {36}
	026 Move W8, [X20+24]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move W8, 184
	029 NotImplemented "Instruction SMADDL not yet implemented."
	030 Move X0, [X8+56]
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Move X21, [X31+40]
	035 Return X0
	036 Call 0x1C17F20
	037 Call 0x1C17F28

Method: System.String get_platformUserAccountId()

Disassembly:
	0x037E11A8 MOV X2, X31
	0x037E11AC BL 0x321B938
	0x037E11B0 MOV X27, X0
	0x037E11B4 MOV X0, X25
	0x037E11B8 BL 0x1C16D08
	0x037E11BC LDR W8, [X0 + 0xE0]
	0x037E11C0 CBNZ W8, 0x37E11C8
	0x037E11C4 BL 0x1C16DFC
	0x037E11C8 MOV X0, X27
	0x037E11CC MOV X1, X31
	0x037E11D0 BL 0x3C0649C
	0x037E11D4 MOV X0, X26
	0x037E11D8 MOV X1, X31
	0x037E11DC BL 0x3C02C84
	0x037E11E0 ADRP X26, 0x967000
	0x037E11E4 ADRP X27, 0x968000
	0x037E11E8 ADRP X29, 0x968000
	0x037E11EC LDR X26, [X26 + 0x948]
	0x037E11F0 LDR X27, [X27 + 0xB8]
	0x037E11F4 LDR X28, [X31 + 0x8]
	0x037E11F8 LDR X29, [X29 + 0xD0]
	0x037E11FC B 0x37E10DC
	0x037E1200 ADRP X8, 0x968000
	0x037E1204 LDR X8, [X8 + 0xC8]
	0x037E1208 LDP X20, X19, [X31 + 0x60]
	0x037E120C LDP X22, X21, [X31 + 0x50]
	0x037E1210 LDP X24, X23, [X31 + 0x40]
	0x037E1214 LDR X1, [X8]
	0x037E1218 LDP X26, X25, [X31 + 0x30]
	0x037E121C LDP X28, X27, [X31 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xC01000
	006 Move X21, 0x968000
	007 Move W8, [X20+723]
	008 Move X21, [X21+2376]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x968000
	015 Move X0, [X0+2376]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+723], W8
	019 Move X8, [X21]
	020 Move X0, X19
	021 Move X8, [X8+184]
	022 Move X20, [X8+32]
	023 Call InputUser.get_index, X0
	024 Compare X20, 0
	025 JumpIfEqual {36}
	026 Move W8, [X20+24]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move W8, 184
	029 NotImplemented "Instruction SMADDL not yet implemented."
	030 Move X0, [X8+64]
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Move X21, [X31+40]
	035 Return X0
	036 Call 0x1C17F20
	037 Call 0x1C17F28

Method: UnityEngine.InputSystem.Utilities.ReadOnlyArray`1<UnityEngine.InputSystem.InputDevice> get_pairedDevices()

Disassembly:
	0x037D48F8 ADRP X0, 0x91F000
	0x037D48FC LDR X0, [X0 + 0xD78]
	0x037D4900 BL 0x1C16CF4
	0x037D4904 ADRP X0, 0x91F000
	0x037D4908 LDR X0, [X0 + 0x598]
	0x037D490C BL 0x1C16CF4
	0x037D4910 ADRP X0, 0x974000
	0x037D4914 LDR X0, [X0 + 0x8F8]
	0x037D4918 BL 0x1C16CF4
	0x037D491C ADRP X0, 0x974000
	0x037D4920 LDR X0, [X0 + 0xA70]
	0x037D4924 BL 0x1C16CF4
	0x037D4928 MOVZ W8, 0x1
	0x037D492C STRB W8, [X20 + 0x262]
	0x037D4930 LDR X0, [X23]
	0x037D4934 STR W31, [X31 + 0x8]
	0x037D4938 ADRP X24, 0x91F000
	0x037D493C LDR W8, [X0 + 0xE0]
	0x037D4940 LDR X24, [X24 + 0x598]
	0x037D4944 CBNZ W8, 0x37D4950
	0x037D4948 BL 0x1C16DFC
	0x037D494C LDR X0, [X23]
	0x037D4950 LDR X8, [X24]
	0x037D4954 LDR X9, [X0 + 0xB8]
	0x037D4958 LDR W10, [X8 + 0xE0]
	0x037D495C LDRB W25, [X9 + 0x38]
	0x037D4960 CBNZ W10, 0x37D496C
	0x037D4964 MOV X0, X8
	0x037D4968 BL 0x1C16DFC
	0x037D496C ADRP X8, 0x91F000
	0x037D4970 LDR X8, [X8 + 0xD78]
	0x037D4974 LDR X1, [X8]
	0x037D4978 MOV X0, X19
	0x037D497C BL 0x222D35C
	0x037D4980 MOV X20, X0
	0x037D4984 CBZ X0, 0x37D4B20
	0x037D4988 MOVZ W1, 0x1
	0x037D498C MOV X0, X20
	0x037D4990 MOV X2, X31
	0x037D4994 BL 0x3C357B4
	0x037D4998 MOV X21, X31
	0x037D499C LDR X0, [X23]
	0x037D49A0 LDR W8, [X0 + 0xE0]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xC0E000
	007 Move X20, 0x975000
	008 Move W8, [X21+724]
	009 Move X20, [X20+2376]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x975000
	016 Move X0, [X0+2376]
	017 Call 0x1C17CF4
	018 Move X0, 0x972000
	019 Move X0, [X0+80]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+724], W8
	023 Move X0, X19
	024 Call InputUser.get_index, X0
	025 Move X8, [X20]
	026 Move X9, [X8+184]
	027 Move X8, [X9+32]
	028 Compare X8, 0
	029 JumpIfEqual {52}
	030 Move W10, [X8+24]
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move X10, 0x972000
	033 Move X10, [X10+80]
	034 Move X1, [X9+40]
	035 Move W9, 184
	036 NotImplemented "Instruction SMADDL not yet implemented."
	037 Move W3, [X8+72]
	038 Move W2, [X8+76]
	039 Move X4, [X10]
	040 Add X0, X31, 0
	041 Move [X31], X31
	042 Move [X31+8], X31
	043 Call ReadOnlyArray`1<Object>..ctor, X0, X1, X2, X3
	044 Move X0, [X31]
	045 Move X1, [X31+8]
	046 Move X20, [X31+32]
	047 Move X19, [X31+40]
	048 Move X30, [X31+16]
	049 Move X21, [X31+24]
	050 Add X31, X31, 48
	051 Return X0
	052 Call 0x1C17F20
	053 Call 0x1C17F28

Method: UnityEngine.InputSystem.Utilities.ReadOnlyArray`1<UnityEngine.InputSystem.InputDevice> get_lostDevices()

Disassembly:
	0x037E1220 LDP X29, X30, [X31 + 0x10]
	0x037E1224 ADD X31, X31, 0x70
	0x037E1228 B 0x28F17C8
	0x037E122C LDP X20, X19, [X31 + 0x60]
	0x037E1230 LDP X22, X21, [X31 + 0x50]
	0x037E1234 LDP X24, X23, [X31 + 0x40]
	0x037E1238 LDP X26, X25, [X31 + 0x30]
	0x037E123C LDP X28, X27, [X31 + 0x20]
	0x037E1240 LDP X29, X30, [X31 + 0x10]
	0x037E1244 ADD X31, X31, 0x70
	0x037E1248 RET
	0x037E124C MOVZ W0, 0x8
	0x037E1250 BL 0x3EB1AF0
	0x037E1254 LDR X8, [X26]
	0x037E1258 STR X8, [X0]
	0x037E125C ADRP X1, 0x6D3000
	0x037E1260 ADD X1, X1, 0xE58
	0x037E1264 MOV X2, X31
	0x037E1268 BL 0x3EB1B00
	0x037E126C BL 0x1C16F20
	0x037E1270 B 0x37E1274
	0x037E1274 MOV X26, X0
	0x037E1278 BL 0x3EB1AE0
	0x037E127C MOV X0, X26
	0x037E1280 BL 0x1D2C690
	0x037E1284 BL 0x1990590
	0x037E1288 SUB X31, X31, 0x170
	0x037E128C STP X29, X30, [X31 + 0x120]
	0x037E1290 STP X26, X25, [X31 + 0x130]
	0x037E1294 STP X24, X23, [X31 + 0x140]
	0x037E1298 STP X22, X21, [X31 + 0x150]
	0x037E129C STP X20, X19, [X31 + 0x160]
	0x037E12A0 ADRP X21, 0xC00000
	0x037E12A4 ADRP X24, 0x967000
	0x037E12A8 LDRB W8, [X21 + 0x2FB]
	0x037E12AC LDR X24, [X24 + 0x948]
	0x037E12B0 MOV W20, W1
	0x037E12B4 MOV W19, W0
	0x037E12B8 TBNZ X8, 0x0, 0x37E1390
	0x037E12BC ADRP X0, 0x912000
	0x037E12C0 LDR X0, [X0 + 0xE00]
	0x037E12C4 BL 0x1C16CF4
	0x037E12C8 ADRP X0, 0x968000

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xC01000
	007 Move X20, 0x968000
	008 Move W8, [X21+725]
	009 Move X20, [X20+2376]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x968000
	016 Move X0, [X0+2376]
	017 Call 0x1C17CF4
	018 Move X0, 0x965000
	019 Move X0, [X0+80]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+725], W8
	023 Move X0, X19
	024 Call InputUser.get_index, X0
	025 Move X8, [X20]
	026 Move X9, [X8+184]
	027 Move X8, [X9+32]
	028 Compare X8, 0
	029 JumpIfEqual {52}
	030 Move W10, [X8+24]
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move X10, 0x965000
	033 Move X10, [X10+80]
	034 Move X1, [X9+48]
	035 Move W9, 184
	036 NotImplemented "Instruction SMADDL not yet implemented."
	037 Move W3, [X8+200]
	038 Move W2, [X8+204]
	039 Move X4, [X10]
	040 Add X0, X31, 0
	041 Move [X31], X31
	042 Move [X31+8], X31
	043 Call ReadOnlyArray`1<Object>..ctor, X0, X1, X2, X3
	044 Move X0, [X31]
	045 Move X1, [X31+8]
	046 Move X20, [X31+32]
	047 Move X19, [X31+40]
	048 Move X30, [X31+16]
	049 Move X21, [X31+24]
	050 Add X31, X31, 48
	051 Return X0
	052 Call 0x1C17F20
	053 Call 0x1C17F28

Method: UnityEngine.InputSystem.IInputActionCollection get_actions()

Disassembly:
	0x037E12CC LDR X0, [X0 + 0xE0]
	0x037E12D0 BL 0x1C16CF4
	0x037E12D4 ADRP X0, 0x912000
	0x037E12D8 LDR X0, [X0 + 0xE18]
	0x037E12DC BL 0x1C16CF4
	0x037E12E0 ADRP X0, 0x968000
	0x037E12E4 LDR X0, [X0 + 0xE8]
	0x037E12E8 BL 0x1C16CF4
	0x037E12EC ADRP X0, 0x965000
	0x037E12F0 LDR X0, [X0 + 0x788]
	0x037E12F4 BL 0x1C16CF4
	0x037E12F8 ADRP X0, 0x968000
	0x037E12FC LDR X0, [X0 + 0xF0]
	0x037E1300 BL 0x1C16CF4
	0x037E1304 ADRP X0, 0x968000
	0x037E1308 LDR X0, [X0 + 0xF8]
	0x037E130C BL 0x1C16CF4
	0x037E1310 ADRP X0, 0x967000
	0x037E1314 LDR X0, [X0 + 0xAC0]
	0x037E1318 BL 0x1C16CF4
	0x037E131C ADRP X0, 0x965000
	0x037E1320 LDR X0, [X0 + 0x768]
	0x037E1324 BL 0x1C16CF4
	0x037E1328 ADRP X0, 0x968000
	0x037E132C LDR X0, [X0 + 0x100]
	0x037E1330 BL 0x1C16CF4
	0x037E1334 ADRP X0, 0x967000
	0x037E1338 LDR X0, [X0 + 0x948]
	0x037E133C BL 0x1C16CF4
	0x037E1340 ADRP X0, 0x964000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xC01000
	006 Move X21, 0x968000
	007 Move W8, [X20+726]
	008 Move X21, [X21+2376]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x968000
	015 Move X0, [X0+2376]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+726], W8
	019 Move X8, [X21]
	020 Move X0, X19
	021 Move X8, [X8+184]
	022 Move X20, [X8+32]
	023 Call InputUser.get_index, X0
	024 Compare X20, 0
	025 JumpIfEqual {36}
	026 Move W8, [X20+24]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move W8, 184
	029 NotImplemented "Instruction SMADDL not yet implemented."
	030 Move X0, [X8+80]
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Move X21, [X31+40]
	035 Return X0
	036 Call 0x1C17F20
	037 Call 0x1C17F28

Method: System.Nullable`1<UnityEngine.InputSystem.InputControlScheme> get_controlScheme()

Disassembly:
	0x037D3C78 STRB W8, [X21 + 0x25D]
	0x037D3C7C LDRB W8, [X19 + 0x95]
	0x037D3C80 CBZ W8, 0x37D3CC8
	0x037D3C84 ADRP X8, 0x920000
	0x037D3C88 LDR X8, [X8 + 0x598]
	0x037D3C8C LDR X21, [X19 + 0x20]
	0x037D3C90 LDR X0, [X8]
	0x037D3C94 LDR W8, [X0 + 0xE0]
	0x037D3C98 CBNZ W8, 0x37D3CA0
	0x037D3C9C BL 0x1C16DFC
	0x037D3CA0 MOV X0, X21
	0x037D3CA4 MOV X1, X31
	0x037D3CA8 MOV X2, X31
	0x037D3CAC BL 0x3C3883C
	0x037D3CB0 TBZ X0, 0x0, 0x37D3D24
	0x037D3CB4 ADRP X8, 0x975000
	0x037D3CB8 ADRP X9, 0x975000
	0x037D3CBC LDR X8, [X8 + 0xA10]
	0x037D3CC0 LDR X9, [X9 + 0xA00]
	0x037D3CC4 B 0x37D3CD8
	0x037D3CC8 ADRP X8, 0x975000
	0x037D3CCC ADRP X9, 0x975000
	0x037D3CD0 LDR X8, [X8 + 0xA10]
	0x037D3CD4 LDR X9, [X9 + 0xA18]
	0x037D3CD8 LDR X0, [X8]
	0x037D3CDC LDR X2, [X9]
	0x037D3CE0 MOV X1, X20
	0x037D3CE4 MOV X3, X31
	0x037D3CE8 BL 0x32274B8
	0x037D3CEC ADRP X8, 0x920000
	0x037D3CF0 LDR X8, [X8 + 0xA28]
	0x037D3CF4 MOV X20, X0
	0x037D3CF8 LDR X8, [X8]
	0x037D3CFC LDR W9, [X8 + 0xE0]
	0x037D3D00 CBNZ W9, 0x37D3D0C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xC0F000
	007 Move X22, 0x976000
	008 Move X19, X8
	009 Move W8, [X21+727]
	010 Move X22, [X22+2376]
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x976000
	017 Move X0, [X0+2376]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+727], W8
	021 Move X8, [X22]
	022 Move X0, X20
	023 Move X8, [X8+184]
	024 Move X21, [X8+32]
	025 Call InputUser.get_index, X0
	026 Compare X21, 0
	027 JumpIfEqual {42}
	028 Move W8, [X21+24]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move W8, 184
	031 NotImplemented "Instruction SMADDL not yet implemented."
	032 NotImplemented "Instruction LDUR not yet implemented."
	033 NotImplemented "Instruction LDUR not yet implemented."
	034 Move X22, [X31+16]
	035 Move X21, [X31+24]
	036 Move [X19], V1
	037 Move [X19+8], V0
	038 Move X20, [X31+32]
	039 Move X19, [X31+40]
	040 Move X30, [X31+48]
	041 Return X0
	042 Call 0x1C17F20
	043 Call 0x1C17F28

Method: UnityEngine.InputSystem.InputControlScheme/MatchResult get_controlSchemeMatch()

Disassembly:
	0x037E1344 LDR X0, [X0 + 0x9B8]
	0x037E1348 BL 0x1C16CF4
	0x037E134C ADRP X0, 0x968000
	0x037E1350 LDR X0, [X0 + 0x108]
	0x037E1354 BL 0x1C16CF4
	0x037E1358 ADRP X0, 0x968000
	0x037E135C LDR X0, [X0 + 0x110]
	0x037E1360 BL 0x1C16CF4
	0x037E1364 ADRP X0, 0x967000
	0x037E1368 LDR X0, [X0 + 0x930]
	0x037E136C BL 0x1C16CF4
	0x037E1370 ADRP X0, 0x963000
	0x037E1374 LDR X0, [X0 + 0xFC8]
	0x037E1378 BL 0x1C16CF4
	0x037E137C ADRP X0, 0x968000
	0x037E1380 LDR X0, [X0 + 0x118]
	0x037E1384 BL 0x1C16CF4
	0x037E1388 MOVZ W8, 0x1
	0x037E138C STRB W8, [X21 + 0x2FB]
	0x037E1390 LDR X8, [X24]
	0x037E1394 MOVI V0.2D, 0x0
	0x037E1398 STP X31, X31, [X31 + 0x90]
	0x037E139C STR X31, [X31 + 0xA0]
	0x037E13A0 STP V0, V0, [X31 + 0xE0]
	0x037E13A4 STP V0, V0, [X31 + 0xC0]
	0x037E13A8 STR V0, [X31 + 0xB]
	0x037E13AC STP V0, V0, [X31 + 0x70]
	0x037E13B0 STP V0, V0, [X31 + 0x50]
	0x037E13B4 LDR X8, [X8 + 0xB8]
	0x037E13B8 LDR X8, [X8 + 0x20]
	0x037E13BC CBZ X8, 0x37E184C
	0x037E13C0 LDR W9, [X8 + 0x18]
	0x037E13C4 CMP W9, W19
	0x037E13C8 B.LS 0x37E1850
	0x037E13CC SXTW X25, W19

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xC01000
	007 Move X22, 0x968000
	008 Move X19, X8
	009 Move W8, [X21+728]
	010 Move X22, [X22+2376]
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x968000
	017 Move X0, [X0+2376]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+728], W8
	021 Move X8, [X22]
	022 Move X0, X20
	023 Move X8, [X8+184]
	024 Move X21, [X8+32]
	025 Call InputUser.get_index, X0
	026 Compare X21, 0
	027 JumpIfEqual {42}
	028 Move W8, [X21+24]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move W8, 184
	031 NotImplemented "Instruction SMADDL not yet implemented."
	032 Move X0, X19
	033 Move X20, [X31+32]
	034 Move X19, [X31+40]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Add X1, X8, 120
	038 Move W2, 80
	039 Move X30, [X31+48]
	040 Call 0x3EB2AC0
	041 Return X0
	042 Call 0x1C17F20
	043 Call 0x1C17F28

Method: System.Boolean get_hasMissingRequiredDevices()

Disassembly:
	0x037D49EC BL 0x339FA34
	0x037D49F0 LDR X0, [X23]
	0x037D49F4 LDR W8, [X0 + 0xE0]
	0x037D49F8 CBNZ W8, 0x37D4A04
	0x037D49FC BL 0x1C16DFC
	0x037D4A00 LDR X0, [X23]
	0x037D4A04 LDR X8, [X0 + 0xB8]
	0x037D4A08 MOVI V0.2D, 0xFFFFFFFFFFFFFFFF
	0x037D4A0C STR X31, [X8 + 0x30]
	0x037D4A10 STR D0, [X8 + 0x28]
	0x037D4A14 STRB W31, [X8 + 0x38]
	0x037D4A18 CBNZ X21, 0x37D4B18
	0x037D4A1C CBZ X20, 0x37D4B14
	0x037D4A20 ADRP X8, 0x974000
	0x037D4A24 LDR X8, [X8 + 0xA68]
	0x037D4A28 MOV X0, X20
	0x037D4A2C LDR X1, [X8]
	0x037D4A30 BL 0x21E5548
	0x037D4A34 LDR X8, [X24]
	0x037D4A38 MOV X21, X0
	0x037D4A3C LDR W9, [X8 + 0xE0]
	0x037D4A40 CBNZ W9, 0x37D4A4C
	0x037D4A44 MOV X0, X8
	0x037D4A48 BL 0x1C16DFC
	0x037D4A4C MOV X0, X21
	0x037D4A50 MOV X1, X31
	0x037D4A54 MOV X2, X31
	0x037D4A58 BL 0x3C3883C
	0x037D4A5C TBZ X0, 0x0, 0x37D4AB0
	0x037D4A60 LDR X0, [X24]
	0x037D4A64 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xC0E000
	006 Move X21, 0x975000
	007 Move W8, [X20+729]
	008 Move X21, [X21+2376]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x975000
	015 Move X0, [X0+2376]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+729], W8
	019 Move X8, [X21]
	020 Move X0, X19
	021 Move X8, [X8+184]
	022 Move X20, [X8+32]
	023 Call InputUser.get_index, X0
	024 Compare X20, 0
	025 JumpIfEqual {38}
	026 Move W8, [X20+24]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move W8, 184
	029 NotImplemented "Instruction SMADDL not yet implemented."
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Add X0, X8, 120
	033 Move X1, X31
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Call MatchResult.get_hasMissingRequiredDevices, X0
	037 Return X0
	038 Call 0x1C17F20
	039 Call 0x1C17F28

Method: UnityEngine.InputSystem.Utilities.ReadOnlyArray`1<UnityEngine.InputSystem.Users.InputUser> get_all()

Disassembly:
	0x037E13D0 MOVZ W9, 0xB8
	0x037E13D4 MADD X9, X25, X9, X8
	0x037E13D8 LDRB W9, [X9 + 0x58]
	0x037E13DC CBZ W9, 0x37E1820
	0x037E13E0 MOVZ W9, 0xB8
	0x037E13E4 MADD X8, X25, X9, X8
	0x037E13E8 ADD X0, X8, 0x78
	0x037E13EC MOV X1, X31
	0x037E13F0 BL 0x376BC1C
	0x037E13F4 LDR X8, [X24]
	0x037E13F8 MOVI V0.2D, 0x0
	0x037E13FC STP V0, V0, [X31 + 0xE0]
	0x037E1400 STP V0, V0, [X31 + 0xC0]
	0x037E1404 STR V0, [X31 + 0xB]
	0x037E1408 LDR X8, [X8 + 0xB8]
	0x037E140C LDR X8, [X8 + 0x20]
	0x037E1410 CBZ X8, 0x37E1854
	0x037E1414 LDR W9, [X8 + 0x18]
	0x037E1418 CMP W9, W19
	0x037E141C B.LS 0x37E1858
	0x037E1420 ADRP X9, 0x967000
	0x037E1424 LDR X9, [X9 + 0x930]
	0x037E1428 LDR X1, [X9]
	0x037E142C MOVZ W9, 0xB8
	0x037E1430 MADD X8, X25, X9, X8
	0x037E1434 ADD X0, X8, 0x58
	0x037E1438 ADD X8, X31, 0x0
	0x037E143C BL 0x243299C
	0x037E1440 LDR V0, [X31]
	0x037E1444 LDR X8, [X31 + 0x10]
	0x037E1448 STR V0, [X31 + 0x9]
	0x037E144C STR X8, [X31 + 0xA0]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xC01000
	007 Move X21, 0x968000
	008 Move X19, 0x969000
	009 Move W8, [X20+730]
	010 Move X21, [X21+2376]
	011 Move X19, [X19+120]
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x968000
	017 Move X0, [X0+2376]
	018 Call 0x1C17CF4
	019 Move X0, 0x969000
	020 Move X0, [X0+120]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X20+730], W8
	024 Move X8, [X21]
	025 Move X4, [X19]
	026 Add X0, X31, 0
	027 Move W2, W31
	028 Move X8, [X8+184]
	029 Move X1, [X8+24]
	030 Move W3, [X8+8]
	031 Move [X31], X31
	032 Move [X31+8], X31
	033 Call ReadOnlyArray`1<InputUser>..ctor, X0, X1, X2, X3
	034 Move X0, [X31]
	035 Move X1, [X31+8]
	036 Move X20, [X31+32]
	037 Move X19, [X31+40]
	038 Move X30, [X31+16]
	039 Move X21, [X31+24]
	040 Add X31, X31, 48
	041 Return X0

Method: System.Void add_onChange(System.Action`3<UnityEngine.InputSystem.Users.InputUser, UnityEngine.InputSystem.Users.InputUserChange, UnityEngine.InputSystem.InputDevice> value)

Disassembly:
	0x037D7B74 LDR X8, [X8 + 0xBD8]
	0x037D7B78 LDR X9, [X9 + 0xB08]
	0x037D7B7C ADD X0, X19, 0x100
	0x037D7B80 MOV X1, X19
	0x037D7B84 LDR X2, [X8]
	0x037D7B88 LDR X4, [X9]
	0x037D7B8C LDP X20, X19, [X31 + 0x10]
	0x037D7B90 MOV X3, X31
	0x037D7B94 LDR X30, [X31], #0x20
	0x037D7B98 B 0x21AD310
	0x037D7B9C STR X30, [X31 - 0x30]!
	0x037D7BA0 STP X22, X21, [X31 + 0x10]
	0x037D7BA4 STP X20, X19, [X31 + 0x20]
	0x037D7BA8 ADRP X21, 0xC0A000
	0x037D7BAC LDRB W8, [X21 + 0x277]
	0x037D7BB0 MOV W20, W1
	0x037D7BB4 MOV X19, X0
	0x037D7BB8 TBNZ X8, 0x0, 0x37D7BD0
	0x037D7BBC ADRP X0, 0x971000
	0x037D7BC0 LDR X0, [X0 + 0x8F8]
	0x037D7BC4 BL 0x1C16CF4
	0x037D7BC8 MOVZ W8, 0x1
	0x037D7BCC STRB W8, [X21 + 0x277]
	0x037D7BD0 AND W8, W20, 0xFFFFFFFE
	0x037D7BD4 CMP W8, 0x4
	0x037D7BD8 B.NE 0x37D7C70
	0x037D7BDC ADRP X22, 0x971000
	0x037D7BE0 LDR X22, [X22 + 0x8F8]
	0x037D7BE4 MOV W21, W31
	0x037D7BE8 LDR X0, [X22]
	0x037D7BEC LDR W8, [X0 + 0xE0]
	0x037D7BF0 CBNZ W8, 0x37D7BFC
	0x037D7BF4 BL 0x1C16DFC
	0x037D7BF8 LDR X0, [X22]
	0x037D7BFC LDR X8, [X0 + 0xB8]
	0x037D7C00 LDR W9, [X8]
	0x037D7C04 CMP W21, W9
	0x037D7C08 B.GE 0x37D7CF4
	0x037D7C0C LDR W9, [X0 + 0xE0]
	0x037D7C10 CBNZ W9, 0x37D7C20
	0x037D7C14 BL 0x1C16DFC
	0x037D7C18 LDR X8, [X22]
	0x037D7C1C LDR X8, [X8 + 0xB8]
	0x037D7C20 LDR X8, [X8 + 0x8]
	0x037D7C24 CBZ X8, 0x37D7D04

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xC0B000
	005 Move W8, [X20+731]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0x972000
	012 Move X0, [X0+2800]
	013 Call 0x1C17CF4
	014 Move X0, 0x972000
	015 Move X0, [X0+2376]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+731], W8
	019 Compare X19, 0
	020 JumpIfEqual {35}
	021 Move X8, 0x972000
	022 Move X8, [X8+2376]
	023 Move X9, 0x972000
	024 Move X1, X19
	025 Move X8, [X8]
	026 Move X9, [X9+2800]
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X8, [X8+184]
	030 Move X2, [X9]
	031 Add X0, X8, 88
	032 Move X30, [X31+32]
	033 Call 0x28F24E0, X0, X1
	034 Return 
	035 Move X0, 0x922000
	036 Move X0, [X0+1320]
	037 Call 0x1C17D08
	038 Call 0x1C17F10
	039 Move X19, X0
	040 Move X0, 0x927000
	041 Move X0, [X0+3784]
	042 Call 0x1C17D08
	043 Move X1, X0
	044 Move X0, X19
	045 Move X2, X31
	046 Call ArgumentNullException..ctor, X0, X1
	047 Move X0, 0x972000
	048 Move X0, [X0+2808]
	049 Call 0x1C17D08
	050 Move X1, X0
	051 Move X0, X19
	052 Call 0x1C17DEC

Method: System.Void remove_onChange(System.Action`3<UnityEngine.InputSystem.Users.InputUser, UnityEngine.InputSystem.Users.InputUserChange, UnityEngine.InputSystem.InputDevice> value)

Disassembly:
	0x037D86F8 MOV X0, X20
	0x037D86FC BL 0x272BD20
	0x037D8700 CBZ X19, 0x37D87C0
	0x037D8704 MOV X0, X19
	0x037D8708 MOV X1, X31
	0x037D870C BL 0x37342F8
	0x037D8710 TBNZ X0, 0x0, 0x37D8808
	0x037D8714 MOV X0, X19
	0x037D8718 MOV X1, X31
	0x037D871C BL 0x37342D8
	0x037D8720 CBZ X0, 0x37D87BC
	0x037D8724 ADRP X8, 0x91B000
	0x037D8728 LDR X8, [X8 + 0x598]
	0x037D872C LDR X21, [X0 + 0x20]
	0x037D8730 LDR X8, [X8]
	0x037D8734 LDR W9, [X8 + 0xE0]
	0x037D8738 CBNZ W9, 0x37D8744
	0x037D873C MOV X0, X8
	0x037D8740 BL 0x1C16DFC
	0x037D8744 MOV X0, X21
	0x037D8748 MOV X1, X31
	0x037D874C MOV X2, X31
	0x037D8750 BL 0x3C3883C
	0x037D8754 TBNZ X0, 0x0, 0x37D8814
	0x037D8758 MOV X0, X19
	0x037D875C MOV X1, X31
	0x037D8760 BL 0x37341F0
	0x037D8764 STP X0, X1, [X31]
	0x037D8768 ADD X0, X31, 0x0
	0x037D876C MOV X1, X31
	0x037D8770 BL 0x337866C
	0x037D8774 STR X0, [X20 + 0x30]
	0x037D8778 MOV X0, X19
	0x037D877C MOV X1, X31
	0x037D8780 BL 0x37342D8
	0x037D8784 CBZ X0, 0x37D87BC
	0x037D8788 ADRP X8, 0x91C000
	0x037D878C LDR X8, [X8 + 0xEC8]
	0x037D8790 LDR X0, [X0 + 0x10]
	0x037D8794 LDR X2, [X19 + 0x10]
	0x037D8798 MOV X3, X31
	0x037D879C LDR X1, [X8]
	0x037D87A0 BL 0x32274B8
	0x037D87A4 STR X0, [X20 + 0x38]
	0x037D87A8 LDP X20, X19, [X31 + 0x30]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xC0A000
	005 Move W8, [X20+732]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0x971000
	012 Move X0, [X0+2976]
	013 Call 0x1C17CF4
	014 Move X0, 0x971000
	015 Move X0, [X0+2376]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+732], W8
	019 Compare X19, 0
	020 JumpIfEqual {35}
	021 Move X8, 0x971000
	022 Move X8, [X8+2376]
	023 Move X9, 0x971000
	024 Move X1, X19
	025 Move X8, [X8]
	026 Move X9, [X9+2976]
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X8, [X8+184]
	030 Move X2, [X9]
	031 Add X0, X8, 88
	032 Move X30, [X31+32]
	033 Call 0x28F2650, X0, X1
	034 Return 
	035 Move X0, 0x921000
	036 Move X0, [X0+1320]
	037 Call 0x1C17D08
	038 Call 0x1C17F10
	039 Move X19, X0
	040 Move X0, 0x926000
	041 Move X0, [X0+3784]
	042 Call 0x1C17D08
	043 Move X1, X0
	044 Move X0, X19
	045 Move X2, X31
	046 Call ArgumentNullException..ctor, X0, X1
	047 Move X0, 0x971000
	048 Move X0, [X0+2984]
	049 Call 0x1C17D08
	050 Move X1, X0
	051 Move X0, X19
	052 Call 0x1C17DEC

Method: System.Void add_onUnpairedDeviceUsed(System.Action`2<UnityEngine.InputSystem.InputControl, UnityEngine.InputSystem.LowLevel.InputEventPtr> value)

Disassembly:
	0x037D7F38 ADRP X8, 0x971000
	0x037D7F3C LDR X8, [X8 + 0xBE0]
	0x037D7F40 STP X0, X1, [X31 + 0x110]
	0x037D7F44 ADD X0, X31, 0x110
	0x037D7F48 MOV W1, W31
	0x037D7F4C LDR X2, [X8]
	0x037D7F50 BL 0x24FDB3C
	0x037D7F54 CBZ X0, 0x37D825C
	0x037D7F58 ADRP X25, 0x91C000
	0x037D7F5C LDR X25, [X25 + 0x598]
	0x037D7F60 MOV X20, X0
	0x037D7F64 LDR X21, [X20 + 0x20]
	0x037D7F68 LDR X0, [X25]
	0x037D7F6C LDR W8, [X0 + 0xE0]
	0x037D7F70 CBNZ W8, 0x37D7F78
	0x037D7F74 BL 0x1C16DFC
	0x037D7F78 MOV X0, X21
	0x037D7F7C MOV X1, X31
	0x037D7F80 MOV X2, X31
	0x037D7F84 BL 0x3C3883C
	0x037D7F88 TBNZ X0, 0x0, 0x37D8240
	0x037D7F8C CBZ X19, 0x37D825C
	0x037D7F90 LDR X21, [X19 + 0x78]
	0x037D7F94 MOV X0, X31
	0x037D7F98 BL 0x373BF80
	0x037D7F9C MOV X19, X0
	0x037D7FA0 ADD X8, X31, 0x120
	0x037D7FA4 BL 0x37D5C9C
	0x037D7FA8 LDP V0, V1, [X31 + 0x120]
	0x037D7FAC STP V0, V1, [X31 + 0xF0]
	0x037D7FB0 LDR W8, [X31 + 0xF0]
	0x037D7FB4 CMP W8, 0x2
	0x037D7FB8 B.LT 0x37D7FF0
	0x037D7FBC ADRP X8, 0x971000
	0x037D7FC0 LDR X8, [X8 + 0xBE8]
	0x037D7FC4 LDR X2, [X8]
	0x037D7FC8 ADD X0, X31, 0xF0
	0x037D7FCC MOV X1, X21
	0x037D7FD0 BL 0x2DFB45C
	0x037D7FD4 ADRP X8, 0x971000
	0x037D7FD8 LDR X8, [X8 + 0xBF0]
	0x037D7FDC MOV W2, W0
	0x037D7FE0 LDR X3, [X8]
	0x037D7FE4 ADD X0, X31, 0xF0
	0x037D7FE8 MOV W1, W31
	0x037D7FEC BL 0x2DFB700
	0x037D7FF0 MOV X0, X20
	0x037D7FF4 BL 0x37D38C8
	0x037D7FF8 UBFM X8, X1, 0x20, 0x3F
	0x037D7FFC CMP W8, 0x1
	0x037D8000 STP X0, X1, [X31 + 0xE0]
	0x037D8004 B.LT 0x37D804C
	0x037D8008 ADRP X23, 0x96D000
	0x037D800C ADRP X24, 0x96E000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xC0B000
	005 Move W8, [X20+733]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0x972000
	012 Move X0, [X0+2872]
	013 Call 0x1C17CF4
	014 Move X0, 0x972000
	015 Move X0, [X0+2376]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+733], W8
	019 Compare X19, 0
	020 JumpIfEqual {44}
	021 Move X20, 0x972000
	022 Move X20, [X20+2376]
	023 Move X9, 0x972000
	024 Move X1, X19
	025 Move X8, [X20]
	026 Move X9, [X9+2872]
	027 Move X8, [X8+184]
	028 Move X2, [X9]
	029 Add X0, X8, 168
	030 Call 0x28F24E0, X0, X1
	031 Move X8, [X20]
	032 Move X8, [X8+184]
	033 Move W8, [X8+356]
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X30, [X31+32]
	038 Call InputUser.HookIntoEvents
	039 Return 
	040 Move X20, [X31+16]
	041 Move X19, [X31+24]
	042 Move X30, [X31+32]
	043 Return 
	044 Move X0, 0x922000
	045 Move X0, [X0+1320]
	046 Call 0x1C17D08
	047 Call 0x1C17F10
	048 Move X19, X0
	049 Move X0, 0x927000
	050 Move X0, [X0+3784]
	051 Call 0x1C17D08
	052 Move X1, X0
	053 Move X0, X19
	054 Move X2, X31
	055 Call ArgumentNullException..ctor, X0, X1
	056 Move X0, 0x972000
	057 Move X0, [X0+2880]
	058 Call 0x1C17D08
	059 Move X1, X0
	060 Move X0, X19
	061 Call 0x1C17DEC

Method: System.Void remove_onUnpairedDeviceUsed(System.Action`2<UnityEngine.InputSystem.InputControl, UnityEngine.InputSystem.LowLevel.InputEventPtr> value)

Disassembly:
	0x037D81F8 ADD X10, X10, 0x8
	0x037D81FC LDUR X11, [X10 - 0x8]
	0x037D8200 CMP X11, X1
	0x037D8204 B.EQ 0x37D8224
	0x037D8208 SUBS X9, X9, 0x1
	0x037D820C ADD X10, X10, 0x10
	0x037D8210 B.NE 0x37D81FC
	0x037D8214 MOV X0, X19
	0x037D8218 MOV W2, W31
	0x037D821C BL 0x1C5C788
	0x037D8220 B 0x37D8230
	0x037D8224 LDRSW X9, [X10]
	0x037D8228 ADD X8, X8, X9, 0x4, LSL
	0x037D822C ADD X0, X8, 0x138
	0x037D8230 LDP X8, X1, [X0]
	0x037D8234 MOV X0, X19
	0x037D8238 BLR X8
	0x037D823C CBNZ X21, 0x37D8260
	0x037D8240 LDP X20, X19, [X31 + 0x180]
	0x037D8244 LDP X22, X21, [X31 + 0x170]
	0x037D8248 LDP X24, X23, [X31 + 0x160]
	0x037D824C LDP X26, X25, [X31 + 0x150]
	0x037D8250 LDP X29, X30, [X31 + 0x140]
	0x037D8254 ADD X31, X31, 0x190
	0x037D8258 RET
	0x037D825C BL 0x1C16F20
	0x037D8260 MOV X0, X21
	0x037D8264 BL 0x1C16F18
	0x037D8268 MOV X0, X22
	0x037D826C BL 0x1C16F18
	0x037D8270 BL 0x1C16F20
	0x037D8274 B 0x37D82C0
	0x037D8278 B 0x37D82C0
	0x037D827C B 0x37D82C0
	0x037D8280 B 0x37D82C0
	0x037D8284 B 0x37D830C
	0x037D8288 B 0x37D830C
	0x037D828C B 0x37D830C
	0x037D8290 B 0x37D830C
	0x037D8294 B 0x37D830C
	0x037D8298 B 0x37D830C
	0x037D829C B 0x37D830C
	0x037D82A0 B 0x37D82A4
	0x037D82A4 MOV X21, X1
	0x037D82A8 MOV X20, X0
	0x037D82AC B 0x37D834C
	0x037D82B0 B 0x37D82C0
	0x037D82B4 B 0x37D82C0
	0x037D82B8 B 0x37D82C0
	0x037D82BC B 0x37D82C0
	0x037D82C0 MOV X21, X1
	0x037D82C4 MOV X20, X0
	0x037D82C8 CMP W21, 0x1
	0x037D82CC B.NE 0x37D82E4
	0x037D82D0 MOV X0, X20
	0x037D82D4 BL 0x3EB1AD0
	0x037D82D8 LDR X22, [X0]
	0x037D82DC BL 0x3EB1AE0
	0x037D82E0 B 0x37D81A0
	0x037D82E4 MOV X22, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xC0A000
	006 Move W8, [X20+734]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {23}
	012 Move X0, 0x971000
	013 Move X0, [X0+2928]
	014 Call 0x1C17CF4
	015 Move X0, 0x971000
	016 Move X0, [X0+2904]
	017 Call 0x1C17CF4
	018 Move X0, 0x971000
	019 Move X0, [X0+2376]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+734], W8
	023 Compare X19, 0
	024 JumpIfEqual {55}
	025 Move X20, 0x971000
	026 Move X20, [X20+2376]
	027 Move X9, 0x971000
	028 Move X21, 0x971000
	029 Move X1, X19
	030 Move X8, [X20]
	031 Move X9, [X9+2928]
	032 Move X8, [X8+184]
	033 Move X2, [X9]
	034 Move X21, [X21+2904]
	035 Add X0, X8, 168
	036 Call 0x28F2650, X0, X1
	037 Move X8, [X20]
	038 Move X1, [X21]
	039 Move X8, [X8+184]
	040 Add X0, X8, 168
	041 Call 0x28F240C, X0
	042 Compare W0, 0
	043 JumpIfEqual {49}
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X30, [X31+32]
	047 Move X21, [X31+40]
	048 Return 
	049 Move X20, [X31+16]
	050 Move X19, [X31+24]
	051 Move X30, [X31+32]
	052 Move X21, [X31+40]
	053 Call InputUser.UnhookFromDeviceStateChange
	054 Return 
	055 Move X0, 0x921000
	056 Move X0, [X0+1320]
	057 Call 0x1C17D08
	058 Call 0x1C17F10
	059 Move X19, X0
	060 Move X0, 0x926000
	061 Move X0, [X0+3784]
	062 Call 0x1C17D08
	063 Move X1, X0
	064 Move X0, X19
	065 Move X2, X31
	066 Call ArgumentNullException..ctor, X0, X1
	067 Move X0, 0x971000
	068 Move X0, [X0+2936]
	069 Call 0x1C17D08
	070 Move X1, X0
	071 Move X0, X19
	072 Call 0x1C17DEC

Method: System.Void add_onPrefilterUnpairedDeviceActivity(System.Func`3<UnityEngine.InputSystem.InputDevice, UnityEngine.InputSystem.LowLevel.InputEventPtr, System.Boolean> value)

Disassembly:
	0x037D8010 LDR X23, [X23 + 0xE18]
	0x037D8014 LDR X24, [X24 + 0x760]
	0x037D8018 MOV W22, W31
	0x037D801C LDR X2, [X23]
	0x037D8020 ADD X0, X31, 0xE0
	0x037D8024 MOV W1, W22
	0x037D8028 BL 0x24FDB3C
	0x037D802C MOV X1, X0
	0x037D8030 LDR X2, [X24]
	0x037D8034 ADD X0, X31, 0xF0
	0x037D8038 BL 0x2DFACEC
	0x037D803C LDR W8, [X31 + 0xEC]
	0x037D8040 ADD W22, W22, 0x1
	0x037D8044 CMP W22, W8
	0x037D8048 B.LT 0x37D801C
	0x037D804C LDP V0, V1, [X31 + 0xF0]
	0x037D8050 STP V0, V1, [X31 + 0x20]
	0x037D8054 LDR X0, [X20 + 0x20]
	0x037D8058 CBZ X0, 0x37D8270
	0x037D805C MOV X1, X31
	0x037D8060 BL 0x37367C0
	0x037D8064 ADRP X8, 0x970000
	0x037D8068 LDR X8, [X8 + 0xBF8]
	0x037D806C LDP V0, V1, [X31 + 0x20]
	0x037D8070 MOV X2, X0
	0x037D8074 MOV X5, X1
	0x037D8078 LDR X7, [X8]
	0x037D807C STP V0, V1, [X31 + 0x120]
	0x037D8080 ADD X0, X31, 0x120
	0x037D8084 ADD X3, X31, 0xC8
	0x037D8088 ADD X4, X31, 0x70
	0x037D808C MOV X1, X2
	0x037D8090 MOV X2, X5
	0x037D8094 MOV X5, X21
	0x037D8098 MOV W6, W31
	0x037D809C BL 0x2200524
	0x037D80A0 TBZ X0, 0x0, 0x37D81B8
	0x037D80A4 MOV X21, X20
	0x037D80A8 LDR W8, [X21 + 0xA0]!
	0x037D80AC STR W8, [X31 + 0x48]
	0x037D80B0 ADD X0, X31, 0x48
	0x037D80B4 BL 0x37D2BD0
	0x037D80B8 MOV W22, W0
	0x037D80BC TBZ X0, 0x0, 0x37D80D0
	0x037D80C0 LDR W8, [X21]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xC0A000
	005 Move W8, [X20+735]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0x971000
	012 Move X0, [X0+2888]
	013 Call 0x1C17CF4
	014 Move X0, 0x971000
	015 Move X0, [X0+2376]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+735], W8
	019 Compare X19, 0
	020 JumpIfEqual {35}
	021 Move X8, 0x971000
	022 Move X8, [X8+2376]
	023 Move X9, 0x971000
	024 Move X1, X19
	025 Move X8, [X8]
	026 Move X9, [X9+2888]
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X8, [X8+184]
	030 Move X2, [X9]
	031 Add X0, X8, 248
	032 Move X30, [X31+32]
	033 Call 0x28F24E0, X0, X1
	034 Return 
	035 Move X0, 0x921000
	036 Move X0, [X0+1320]
	037 Call 0x1C17D08
	038 Call 0x1C17F10
	039 Move X19, X0
	040 Move X0, 0x926000
	041 Move X0, [X0+3784]
	042 Call 0x1C17D08
	043 Move X1, X0
	044 Move X0, X19
	045 Move X2, X31
	046 Call ArgumentNullException..ctor, X0, X1
	047 Move X0, 0x971000
	048 Move X0, [X0+2896]
	049 Call 0x1C17D08
	050 Move X1, X0
	051 Move X0, X19
	052 Call 0x1C17DEC

Method: System.Void remove_onPrefilterUnpairedDeviceActivity(System.Func`3<UnityEngine.InputSystem.InputDevice, UnityEngine.InputSystem.LowLevel.InputEventPtr, System.Boolean> value)

Disassembly:
	0x037D82E8 ADD X0, X31, 0x70
	0x037D82EC MOV X1, X31
	0x037D82F0 BL 0x376BC1C
	0x037D82F4 CBZ X22, 0x37D8314
	0x037D82F8 MOV X0, X22
	0x037D82FC BL 0x1C16F18
	0x037D8300 MOV X21, X1
	0x037D8304 MOV X20, X0
	0x037D8308 B 0x37D82E8
	0x037D830C MOV X21, X1
	0x037D8310 MOV X20, X0
	0x037D8314 CMP W21, 0x1
	0x037D8318 B.NE 0x37D8330
	0x037D831C MOV X0, X20
	0x037D8320 BL 0x3EB1AD0
	0x037D8324 LDR X22, [X0]
	0x037D8328 BL 0x3EB1AE0
	0x037D832C B 0x37D81BC
	0x037D8330 MOV X22, X31
	0x037D8334 ADRP X8, 0x96E000
	0x037D8338 LDR X8, [X8 + 0x788]
	0x037D833C LDR X1, [X8]
	0x037D8340 ADD X0, X31, 0xF0
	0x037D8344 BL 0x2DFB98C
	0x037D8348 CBNZ X22, 0x37D8370
	0x037D834C CMP W21, 0x1
	0x037D8350 B.NE 0x37D8368
	0x037D8354 MOV X0, X20
	0x037D8358 BL 0x3EB1AD0
	0x037D835C LDR X21, [X0]
	0x037D8360 BL 0x3EB1AE0
	0x037D8364 B 0x37D81D8
	0x037D8368 MOV X21, X31
	0x037D836C B 0x37D8388
	0x037D8370 MOV X0, X22
	0x037D8374 BL 0x1C16F18
	0x037D8378 MOV X21, X1
	0x037D837C MOV X20, X0
	0x037D8380 B 0x37D8334
	0x037D8384 MOV X20, X0
	0x037D8388 CBZ X19, 0x37D83EC
	0x037D838C ADRP X10, 0x91B000
	0x037D8390 LDR X8, [X19]
	0x037D8394 LDR X10, [X10 + 0xE00]
	0x037D8398 LDRH W9, [X8 + 0x12E]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xC0A000
	005 Move W8, [X20+736]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0x971000
	012 Move X0, [X0+2944]
	013 Call 0x1C17CF4
	014 Move X0, 0x971000
	015 Move X0, [X0+2376]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+736], W8
	019 Compare X19, 0
	020 JumpIfEqual {35}
	021 Move X8, 0x971000
	022 Move X8, [X8+2376]
	023 Move X9, 0x971000
	024 Move X1, X19
	025 Move X8, [X8]
	026 Move X9, [X9+2944]
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X8, [X8+184]
	030 Move X2, [X9]
	031 Add X0, X8, 248
	032 Move X30, [X31+32]
	033 Call 0x28F2650, X0, X1
	034 Return 
	035 Move X0, 0x921000
	036 Move X0, [X0+1320]
	037 Call 0x1C17D08
	038 Call 0x1C17F10
	039 Move X19, X0
	040 Move X0, 0x926000
	041 Move X0, [X0+3784]
	042 Call 0x1C17D08
	043 Move X1, X0
	044 Move X0, X19
	045 Move X2, X31
	046 Call ArgumentNullException..ctor, X0, X1
	047 Move X0, 0x971000
	048 Move X0, [X0+2952]
	049 Call 0x1C17D08
	050 Move X1, X0
	051 Move X0, X19
	052 Call 0x1C17DEC

Method: System.Int32 get_listenForUnpairedDeviceActivity()

Disassembly:
	0x037D80C4 STR W8, [X31 + 0x48]
	0x037D80C8 ADD X0, X31, 0x48
	0x037D80CC BL 0x37D5694
	0x037D80D0 ADD X8, X31, 0x120
	0x037D80D4 ADD X0, X31, 0x70
	0x037D80D8 MOV X1, X31
	0x037D80DC BL 0x376B9EC
	0x037D80E0 LDP V0, V1, [X31 + 0x120]
	0x037D80E4 STP V0, V1, [X31 + 0x50]
	0x037D80E8 LDR W8, [X31 + 0x50]
	0x037D80EC CMP W8, 0x1
	0x037D80F0 B.LT 0x37D8178
	0x037D80F4 ADRP X26, 0x970000
	0x037D80F8 LDR X26, [X26 + 0x918]
	0x037D80FC MOV W23, W31
	0x037D8100 LDR X2, [X26]
	0x037D8104 ADD X0, X31, 0x50
	0x037D8108 MOV W1, W23

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xC0A000
	005 Move X20, 0x971000
	006 Move W8, [X19+737]
	007 Move X20, [X20+2376]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x971000
	013 Move X0, [X0+2376]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+737], W8
	017 Move X8, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X8, [X8+184]
	021 Move W0, [X8+356]
	022 Move X30, [X31+32]
	023 Return X0

Method: System.Void set_listenForUnpairedDeviceActivity(System.Int32 value)

Disassembly:
	0x037D810C BL 0x2DFA48C
	0x037D8110 LDR W1, [X21]
	0x037D8114 MOV W2, W31
	0x037D8118 BL 0x37D5904
	0x037D811C STR W0, [X21]
	0x037D8120 TBNZ X22, 0x0, 0x37D8168
	0x037D8124 MOV X0, X20
	0x037D8128 BL 0x37D1AD4
	0x037D812C MOV X24, X0
	0x037D8130 LDR X0, [X25]
	0x037D8134 LDR W8, [X0 + 0xE0]
	0x037D8138 CBNZ W8, 0x37D8140
	0x037D813C BL 0x1C16DFC
	0x037D8140 MOV X0, X24
	0x037D8144 MOV X1, X31
	0x037D8148 MOV X2, X31
	0x037D814C BL 0x3C354F8
	0x037D8150 TBZ X0, 0x0, 0x37D8168
	0x037D8154 MOV X0, X20
	0x037D8158 BL 0x37D1AD4
	0x037D815C MOV X1, X0
	0x037D8160 MOV X0, X21
	0x037D8164 BL 0x37D5E14
	0x037D8168 LDR W8, [X31 + 0x50]
	0x037D816C ADD W23, W23, 0x1
	0x037D8170 CMP W23, W8
	0x037D8174 B.LT 0x37D8100
	0x037D8178 LDR W8, [X21]
	0x037D817C LDUR V0, [X31 + 0xC8]
	0x037D8180 LDR X9, [X31 + 0xD8]
	0x037D8184 STR W8, [X31 + 0x48]
	0x037D8188 STR V0, [X31]
	0x037D818C STR X9, [X31 + 0x10]
	0x037D8190 ADD X0, X31, 0x48
	0x037D8194 ADD X1, X31, 0x0
	0x037D8198 BL 0x37D6294
	0x037D819C MOV X22, X31
	0x037D81A0 ADD X0, X31, 0x70
	0x037D81A4 MOV X1, X31
	0x037D81A8 BL 0x376BC1C
	0x037D81AC CBZ X22, 0x37D81BC
	0x037D81B0 MOV X0, X22
	0x037D81B4 BL 0x1C16F18
	0x037D81B8 MOV X22, X31
	0x037D81BC ADRP X8, 0x96E000
	0x037D81C0 LDR X8, [X8 + 0x788]
	0x037D81C4 LDR X1, [X8]
	0x037D81C8 ADD X0, X31, 0xF0
	0x037D81CC BL 0x2DFB98C
	0x037D81D0 CBNZ X22, 0x37D8268
	0x037D81D4 MOV X21, X31
	0x037D81D8 CBZ X19, 0x37D823C
	0x037D81DC ADRP X10, 0x91B000
	0x037D81E0 LDR X8, [X19]
	0x037D81E4 LDR X10, [X10 + 0xE00]
	0x037D81E8 LDRH W9, [X8 + 0x12E]
	0x037D81EC LDR X1, [X10]
	0x037D81F0 CBZ X9, 0x37D8214
	0x037D81F4 LDR X10, [X8 + 0xB0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xC0A000
	005 Move W8, [X20+738]
	006 Move W19, W0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0x971000
	012 Move X0, [X0+2904]
	013 Call 0x1C17CF4
	014 Move X0, 0x971000
	015 Move X0, [X0+2376]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+738], W8
	019 Move TEMP, X19
	020 And TEMP, TEMP, -2147483648
	021 Compare TEMP, -2147483648
	022 JumpIfEqual {44}
	023 Move X20, 0x971000
	024 Move X20, [X20+2376]
	025 Compare W19, 0
	026 JumpIfEqual {36}
	027 Move X8, [X20]
	028 Move X9, 0x971000
	029 Move X9, [X9+2904]
	030 Move X8, [X8+184]
	031 Move X1, [X9]
	032 Add X0, X8, 168
	033 Call 0x28F240C, X0
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Call InputUser.HookIntoEvents
	036 Call InputUser.UnhookFromDeviceStateChange
	037 Move X8, [X20]
	038 Move X8, [X8+184]
	039 Move [X8+356], W19
	040 Move X20, [X31+16]
	041 Move X19, [X31+24]
	042 Move X30, [X31+32]
	043 Return 
	044 Move X0, 0x924000
	045 Move X0, [X0+1888]
	046 Call 0x1C17D08
	047 Call 0x1C17F10
	048 Move X19, X0
	049 Move X0, 0x926000
	050 Move X0, [X0+3784]
	051 Call 0x1C17D08
	052 Move X20, X0
	053 Move X0, 0x971000
	054 Move X0, [X0+2912]
	055 Call 0x1C17D08
	056 Move X2, X0
	057 Move X0, X19
	058 Move X1, X20
	059 Move X3, X31
	060 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	061 Move X0, 0x971000
	062 Move X0, [X0+2920]
	063 Call 0x1C17D08
	064 Move X1, X0
	065 Move X0, X19
	066 Call 0x1C17DEC

Method: System.String ToString()

Disassembly:
	0x037E15FC STP V0, V1, [X31 + 0x50]
	0x037E1600 LDR X1, [X8]
	0x037E1604 ADD X0, X31, 0x50
	0x037E1608 BL 0x2DFB9F4
	0x037E160C MOV X20, X0
	0x037E1610 CBZ X0, 0x37E1884
	0x037E1614 ADRP X22, 0x912000
	0x037E1618 ADRP X23, 0x968000
	0x037E161C ADRP X26, 0x963000
	0x037E1620 LDR X22, [X22 + 0xE18]
	0x037E1624 LDR X23, [X23 + 0xE0]
	0x037E1628 LDR X26, [X26 + 0xFC8]
	0x037E162C LDR X8, [X20]
	0x037E1630 LDR X1, [X22]
	0x037E1634 LDRH W9, [X8 + 0x12E]
	0x037E1638 CBZ X9, 0x37E165C
	0x037E163C LDR X10, [X8 + 0xB0]
	0x037E1640 ADD X10, X10, 0x8
	0x037E1644 LDUR X11, [X10 - 0x8]
	0x037E1648 CMP X11, X1
	0x037E164C B.EQ 0x37E166C
	0x037E1650 SUBS X9, X9, 0x1
	0x037E1654 ADD X10, X10, 0x10
	0x037E1658 B.NE 0x37E1644
	0x037E165C MOV X0, X20
	0x037E1660 MOV W2, W31
	0x037E1664 BL 0x1C5C788
	0x037E1668 B 0x37E1678
	0x037E166C LDRSW X9, [X10]
	0x037E1670 ADD X8, X8, X9, 0x4, LSL
	0x037E1674 ADD X0, X8, 0x138
	0x037E1678 LDP X8, X1, [X0]
	0x037E167C MOV X0, X20
	0x037E1680 BLR X8
	0x037E1684 TBZ X0, 0x0, 0x37E1734
	0x037E1688 LDR X8, [X20]
	0x037E168C LDR X1, [X23]
	0x037E1690 LDRH W9, [X8 + 0x12E]
	0x037E1694 CBZ X9, 0x37E16B8
	0x037E1698 LDR X10, [X8 + 0xB0]
	0x037E169C ADD X10, X10, 0x8
	0x037E16A0 LDUR X11, [X10 - 0x8]
	0x037E16A4 CMP X11, X1
	0x037E16A8 B.EQ 0x37E16C8
	0x037E16AC SUBS X9, X9, 0x1
	0x037E16B0 ADD X10, X10, 0x10
	0x037E16B4 B.NE 0x37E16A0
	0x037E16B8 MOV X0, X20
	0x037E16BC MOV W2, W31
	0x037E16C0 BL 0x1C5C788
	0x037E16C4 B 0x37E16D4
	0x037E16C8 LDRSW X9, [X10]
	0x037E16CC ADD X8, X8, X9, 0x4, LSL
	0x037E16D0 ADD X0, X8, 0x138
	0x037E16D4 LDP X8, X1, [X0]
	0x037E16D8 MOV X0, X20
	0x037E16DC BLR X8
	0x037E16E0 LDR X8, [X24]
	0x037E16E4 LDR X8, [X8 + 0xB8]
	0x037E16E8 LDR X8, [X8 + 0x18]
	0x037E16EC CBZ X8, 0x37E1844
	0x037E16F0 LDR W9, [X8 + 0x18]
	0x037E16F4 CMP W9, W19
	0x037E16F8 B.LS 0x37E1848
	0x037E16FC ADD X8, X8, X25, 0x2, LSL
	0x037E1700 MOV X21, X0
	0x037E1704 ADD X0, X8, 0x20
	0x037E1708 BL 0x37D38F8
	0x037E170C LDR X3, [X26]
	0x037E1710 MOV X2, X21
	0x037E1714 BL 0x223C504
	0x037E1718 TBNZ X0, 0x0, 0x37E162C
	0x037E171C MOVZ W3, 0x1
	0x037E1720 MOV W0, W19
	0x037E1724 MOV X1, X21
	0x037E1728 MOV W2, W31
	0x037E172C BL 0x37E2B20
	0x037E1730 B 0x37E162C
	0x037E1734 MOV X22, X31
	0x037E1738 MOVZ W21, 0x5
	0x037E173C CBZ X20, 0x37E17A0
	0x037E1740 ADRP X10, 0x912000
	0x037E1744 LDR X8, [X20]
	0x037E1748 LDR X10, [X10 + 0xE00]
	0x037E174C LDRH W9, [X8 + 0x12E]
	0x037E1750 LDR X1, [X10]
	0x037E1754 CBZ X9, 0x37E1778
	0x037E1758 LDR X10, [X8 + 0xB0]
	0x037E175C ADD X10, X10, 0x8
	0x037E1760 LDUR X11, [X10 - 0x8]
	0x037E1764 CMP X11, X1
	0x037E1768 B.EQ 0x37E1788
	0x037E176C SUBS X9, X9, 0x1
	0x037E1770 ADD X10, X10, 0x10
	0x037E1774 B.NE 0x37E1760
	0x037E1778 MOV X0, X20
	0x037E177C MOV W2, W31
	0x037E1780 BL 0x1C5C788
	0x037E1784 B 0x37E1794
	0x037E1788 LDRSW X9, [X10]
	0x037E178C ADD X8, X8, X9, 0x4, LSL
	0x037E1790 ADD X0, X8, 0x138
	0x037E1794 LDP X8, X1, [X0]
	0x037E1798 MOV X0, X20
	0x037E179C BLR X8
	0x037E17A0 CBNZ X22, 0x37E1888
	0x037E17A4 CMP W21, 0x5
	0x037E17A8 B.EQ 0x37E17B0
	0x037E17AC CBNZ W21, 0x37E183C
	0x037E17B0 MOV X20, X31
	0x037E17B4 MOVZ W21, 0x3
	0x037E17B8 ADRP X8, 0x965000
	0x037E17BC LDR X8, [X8 + 0x788]
	0x037E17C0 LDR X1, [X8]
	0x037E17C4 ADD X0, X31, 0x70
	0x037E17C8 BL 0x2DFB98C
	0x037E17CC CBNZ X20, 0x37E186C
	0x037E17D0 CMP W21, 0x3
	0x037E17D4 B.EQ 0x37E17DC
	0x037E17D8 CBNZ W21, 0x37E1820
	0x037E17DC LDR X8, [X24]
	0x037E17E0 LDR X8, [X8 + 0xB8]
	0x037E17E4 LDR X20, [X8 + 0x20]
	0x037E17E8 CBZ X20, 0x37E185C
	0x037E17EC ADD X0, X31, 0x0
	0x037E17F0 ADD X1, X31, 0xB0
	0x037E17F4 MOVZ W2, 0x50
	0x037E17F8 BL 0x3EB1AC0
	0x037E17FC LDR W8, [X20 + 0x18]
	0x037E1800 CMP W8, W19
	0x037E1804 B.LS 0x37E1860
	0x037E1808 MOVZ W8, 0xB8
	0x037E180C MADD X8, X25, X8, X20
	0x037E1810 ADD X0, X8, 0x78
	0x037E1814 ADD X1, X31, 0x0
	0x037E1818 MOVZ W2, 0x50
	0x037E181C BL 0x3EB1AC0
	0x037E1820 LDP X20, X19, [X31 + 0x160]
	0x037E1824 LDP X22, X21, [X31 + 0x150]
	0x037E1828 LDP X24, X23, [X31 + 0x140]
	0x037E182C LDP X26, X25, [X31 + 0x130]
	0x037E1830 LDP X29, X30, [X31 + 0x120]
	0x037E1834 ADD X31, X31, 0x170
	0x037E1838 RET
	0x037E183C MOV X20, X31
	0x037E1840 B 0x37E17B8
	0x037E1844 BL 0x1C16F20
	0x037E1848 BL 0x1C16F28
	0x037E184C BL 0x1C16F20
	0x037E1850 BL 0x1C16F28
	0x037E1854 BL 0x1C16F20
	0x037E1858 BL 0x1C16F28
	0x037E185C BL 0x1C16F20
	0x037E1860 BL 0x1C16F28
	0x037E1864 BL 0x1C16F20

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+32], X30
	003 Move [X31+40], X25
	004 Move [X31+48], X24
	005 Move [X31+56], X23
	006 Move [X31+64], X22
	007 Move [X31+72], X21
	008 Move [X31+80], X20
	009 Move [X31+88], X19
	010 Move X20, 0xC01000
	011 Move W8, [X20+739]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {43}
	017 Move X0, 0x913000
	018 Move X0, [X0+1880]
	019 Call 0x1C17CF4
	020 Move X0, 0x913000
	021 Move X0, [X0+2512]
	022 Call 0x1C17CF4
	023 Move X0, 0x965000
	024 Move X0, [X0+2912]
	025 Call 0x1C17CF4
	026 Move X0, 0x969000
	027 Move X0, [X0+136]
	028 Call 0x1C17CF4
	029 Move X0, 0x91B000
	030 Move X0, [X0+1824]
	031 Call 0x1C17CF4
	032 Move X0, 0x969000
	033 Move X0, [X0+144]
	034 Call 0x1C17CF4
	035 Move X0, 0x969000
	036 Move X0, [X0+152]
	037 Call 0x1C17CF4
	038 Move X0, 0x915000
	039 Move X0, [X0+928]
	040 Call 0x1C17CF4
	041 Move W8, 1
	042 Move [X20+739], W8
	043 Move X23, 0x91B000
	044 Move X23, [X23+1824]
	045 Move X0, X19
	046 Call InputUser.get_valid, X0
	047 Move TEMP, X0
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfNotEqual {150}
	051 Move X20, 0x965000
	052 Move X21, 0x915000
	053 Move X22, 0x969000
	054 Move X24, 0x913000
	055 Move X25, 0x913000
	056 Move X20, [X20+2912]
	057 Move X21, [X21+928]
	058 Move X22, [X22+136]
	059 Move X24, [X24+2512]
	060 Move X25, [X25+1880]
	061 Move X0, X19
	062 Call InputUser.get_pairedDevices, X0
	063 Move X8, [X20]
	064 Move [X31+16], X0
	065 Move [X31+24], X1
	066 Add X1, X31, 16
	067 Move X0, X8
	068 Call 0x1C17E04
	069 Move X8, [X21]
	070 Move X2, [X22]
	071 Move X1, X0
	072 Move X0, X8
	073 Call String.Join, X0, X1
	074 Move X8, [X24]
	075 Move X21, X0
	076 Move W1, 4
	077 Move X0, X8
	078 Call 0x1C17D6C
	079 Move X20, X0
	080 Move X0, X19
	081 Call InputUser.get_index, X0
	082 Move X8, [X25]
	083 Move [X31+12], W0
	084 Add X1, X31, 12
	085 Move X0, X8
	086 Call 0x1C17E04
	087 Compare X20, 0
	088 JumpIfEqual {176}
	089 Move X22, X0
	090 Compare X0, 0
	091 JumpIfEqual {98}
	092 Move X8, [X20]
	093 Move X0, X22
	094 Move X1, [X8+64]
	095 Call 0x1C17E00
	096 Compare X0, 0
	097 JumpIfEqual {173}
	098 Move W8, [X20+24]
	099 Compare W8, 0
	100 JumpIfEqual {172}
	101 Move [X20+32], X22
	102 Move W8, [X19]
	103 Move X0, [X23]
	104 Add X1, X31, 8
	105 Move [X31+8], W8
	106 Call 0x1C17E04
	107 Move X22, X0
	108 Compare X0, 0
	109 JumpIfEqual {116}
	110 Move X8, [X20]
	111 Move X0, X22
	112 Move X1, [X8+64]
	113 Call 0x1C17E00
	114 Compare X0, 0
	115 JumpIfEqual {173}
	116 Move W8, [X20+24]
	117 NotImplemented "Instruction CMP not yet implemented."
	118 Move [X20+40], X22
	119 Compare X21, 0
	120 JumpIfEqual {128}
	121 Move X8, [X20]
	122 Move X0, X21
	123 Move X1, [X8+64]
	124 Call 0x1C17E00
	125 Compare X0, 0
	126 JumpIfEqual {173}
	127 Move W8, [X20+24]
	128 NotImplemented "Instruction CMP not yet implemented."
	129 Move X0, X19
	130 Move [X20+48], X21
	131 Call InputUser.get_actions, X0
	132 Move X19, X0
	133 Compare X0, 0
	134 JumpIfEqual {141}
	135 Move X8, [X20]
	136 Move X0, X19
	137 Move X1, [X8+64]
	138 Call 0x1C17E00
	139 Compare X0, 0
	140 JumpIfEqual {173}
	141 Move W8, [X20+24]
	142 NotImplemented "Instruction CMP not yet implemented."
	143 Move [X20+56], X19
	144 Move X8, 0x969000
	145 Move X8, [X8+144]
	146 Move X1, X20
	147 Move X2, X31
	148 Move X0, [X8]
	149 Call String.Format, X0, X1
	150 Move W8, [X19]
	151 Move X0, [X23]
	152 Move X19, 0x969000
	153 Move X19, [X19+152]
	154 Add X1, X31, 16
	155 Move [X31+16], W8
	156 Call 0x1C17E04
	157 Move X8, [X19]
	158 Move X1, X0
	159 Move X2, X31
	160 Move X0, X8
	161 Call String.Format, X0, X1
	162 Move X20, [X31+80]
	163 Move X19, [X31+88]
	164 Move X22, [X31+64]
	165 Move X21, [X31+72]
	166 Move X24, [X31+48]
	167 Move X23, [X31+56]
	168 Move X30, [X31+32]
	169 Move X25, [X31+40]
	170 Add X31, X31, 96
	171 Return X0
	172 Call 0x1C17F28
	173 Call 0x1C17F44
	174 Move X1, X31
	175 Call 0x1C17DEC
	176 Call 0x1C17F20

Method: System.Void AssociateActionsWithUser(UnityEngine.InputSystem.IInputActionCollection actions)

Disassembly:
	0x037D6E14 LDRB W8, [X21 + 0x298]
	0x037D6E18 MOV X19, X1
	0x037D6E1C MOV X20, X0
	0x037D6E20 TBNZ X8, 0x0, 0x37D6E5C
	0x037D6E24 ADRP X0, 0x972000
	0x037D6E28 LDR X0, [X0 + 0xB08]
	0x037D6E2C BL 0x1C16CF4
	0x037D6E30 ADRP X0, 0x972000
	0x037D6E34 LDR X0, [X0 + 0xB10]
	0x037D6E38 BL 0x1C16CF4
	0x037D6E3C ADRP X0, 0x972000
	0x037D6E40 LDR X0, [X0 + 0xB28]
	0x037D6E44 BL 0x1C16CF4
	0x037D6E48 ADRP X0, 0x972000
	0x037D6E4C LDR X0, [X0 + 0xB30]
	0x037D6E50 BL 0x1C16CF4
	0x037D6E54 MOVZ W8, 0x1
	0x037D6E58 STRB W8, [X21 + 0x298]
	0x037D6E5C MOV X0, X20
	0x037D6E60 BL 0x37D8B18
	0x037D6E64 LDR W8, [X20 + 0x20]
	0x037D6E68 CMP W8, 0x3
	0x037D6E6C B.HI 0x37D6EFC
	0x037D6E70 ADRP X9, 0xFFFFFFFFFD3C1000
	0x037D6E74 ADD X9, X9, 0x97C
	0x037D6E78 ADR X10, 0x10
	0x037D6E7C LDRB W11, [X9, X8, LSL]
	0x037D6E80 ADD X10, X10, X11, 0x2, LSL
	0x037D6E84 BR X10
	0x037D6E88 ADRP X8, 0x972000
	0x037D6E8C LDR X8, [X8 + 0xB30]
	0x037D6E90 MOV X0, X20
	0x037D6E94 MOV X2, X19
	0x037D6E98 LDP X20, X19, [X31 + 0x10]
	0x037D6E9C LDR X1, [X8]
	0x037D6EA0 MOVZ W3, 0x1
	0x037D6EA4 MOV X4, X31
	0x037D6EA8 LDP X30, X21, [X31], #0x20
	0x037D6EAC B 0x3C334DC
	0x037D6EB0 ADRP X8, 0x972000
	0x037D6EB4 LDR X8, [X8 + 0xB30]
	0x037D6EB8 MOV X0, X20
	0x037D6EBC MOV X2, X19
	0x037D6EC0 LDP X20, X19, [X31 + 0x10]
	0x037D6EC4 LDR X1, [X8]
	0x037D6EC8 MOVZ W3, 0x1
	0x037D6ECC MOV X4, X31
	0x037D6ED0 LDP X30, X21, [X31], #0x20
	0x037D6ED4 B 0x3C33538
	0x037D6ED8 LDR X0, [X20 + 0x30]
	0x037D6EDC CBZ X0, 0x37D6EFC
	0x037D6EE0 ADRP X8, 0x972000
	0x037D6EE4 LDR X8, [X8 + 0xB10]
	0x037D6EE8 MOV X1, X19
	0x037D6EEC LDP X20, X19, [X31 + 0x10]
	0x037D6EF0 LDR X2, [X8]
	0x037D6EF4 LDP X30, X21, [X31], #0x20
	0x037D6EF8 B 0x2729DBC
	0x037D6EFC LDP X20, X19, [X31 + 0x10]
	0x037D6F00 LDP X30, X21, [X31], #0x20
	0x037D6F04 RET
	0x037D6F08 ADRP X8, 0x972000
	0x037D6F0C ADRP X9, 0x972000
	0x037D6F10 LDR X8, [X8 + 0xB28]
	0x037D6F14 LDR X9, [X9 + 0xB08]
	0x037D6F18 ADD X0, X20, 0x90
	0x037D6F1C MOV X1, X19
	0x037D6F20 LDR X2, [X8]
	0x037D6F24 LDR X4, [X9]
	0x037D6F28 LDP X20, X19, [X31 + 0x10]
	0x037D6F2C MOV X3, X31
	0x037D6F30 LDP X30, X21, [X31], #0x20
	0x037D6F34 B 0x21AD310
	0x037D6F38 STR X30, [X31 - 0x20]!
	0x037D6F3C STP X20, X19, [X31 + 0x10]
	0x037D6F40 ADRP X20, 0xC0B000
	0x037D6F44 LDRB W8, [X20 + 0x2DD]
	0x037D6F48 MOV X19, X0
	0x037D6F4C TBNZ X8, 0x0, 0x37D6F70
	0x037D6F50 ADRP X0, 0x972000
	0x037D6F54 LDR X0, [X0 + 0xB38]
	0x037D6F58 BL 0x1C16CF4
	0x037D6F5C ADRP X0, 0x972000
	0x037D6F60 LDR X0, [X0 + 0x948]
	0x037D6F64 BL 0x1C16CF4
	0x037D6F68 MOVZ W8, 0x1
	0x037D6F6C STRB W8, [X20 + 0x2DD]
	0x037D6F70 CBZ X19, 0x37D6FC8
	0x037D6F74 ADRP X20, 0x972000
	0x037D6F78 LDR X20, [X20 + 0x948]
	0x037D6F7C ADRP X9, 0x972000
	0x037D6F80 MOV X1, X19
	0x037D6F84 LDR X8, [X20]
	0x037D6F88 LDR X9, [X9 + 0xB38]
	0x037D6F8C LDR X8, [X8 + 0xB8]
	0x037D6F90 LDR X2, [X9]
	0x037D6F94 ADD X0, X8, 0xA8
	0x037D6F98 BL 0x28F14E0
	0x037D6F9C LDR X8, [X20]
	0x037D6FA0 LDR X8, [X8 + 0xB8]
	0x037D6FA4 LDR W8, [X8 + 0x164]
	0x037D6FA8 CMP W8, 0x1
	0x037D6FAC B.LT 0x37D6FBC
	0x037D6FB0 LDP X20, X19, [X31 + 0x10]
	0x037D6FB4 LDR X30, [X31], #0x20
	0x037D6FB8 B 0x37E0450
	0x037D6FBC LDP X20, X19, [X31 + 0x10]
	0x037D6FC0 LDR X30, [X31], #0x20
	0x037D6FC4 RET
	0x037D6FC8 ADRP X0, 0x922000
	0x037D6FCC LDR X0, [X0 + 0x528]
	0x037D6FD0 BL 0x1C16D08
	0x037D6FD4 BL 0x1C16F10
	0x037D6FD8 MOV X19, X0
	0x037D6FDC ADRP X0, 0x927000
	0x037D6FE0 LDR X0, [X0 + 0xEC8]
	0x037D6FE4 BL 0x1C16D08
	0x037D6FE8 MOV X1, X0
	0x037D6FEC MOV X0, X19
	0x037D6FF0 MOV X2, X31
	0x037D6FF4 BL 0x330E100
	0x037D6FF8 ADRP X0, 0x972000
	0x037D6FFC LDR X0, [X0 + 0xB40]
	0x037D7000 BL 0x1C16D08
	0x037D7004 MOV X1, X0
	0x037D7008 MOV X0, X19
	0x037D700C BL 0x1C16DEC
	0x037D7010 STR X30, [X31 - 0x20]!
	0x037D7014 STP X20, X19, [X31 + 0x10]
	0x037D7018 ADRP X20, 0xC0A000
	0x037D701C LDRB W8, [X20 + 0x2DF]
	0x037D7020 MOV X19, X0
	0x037D7024 TBNZ X8, 0x0, 0x37D7048
	0x037D7028 ADRP X0, 0x971000
	0x037D702C LDR X0, [X0 + 0xB48]
	0x037D7030 BL 0x1C16CF4
	0x037D7034 ADRP X0, 0x971000
	0x037D7038 LDR X0, [X0 + 0x948]
	0x037D703C BL 0x1C16CF4
	0x037D7040 MOVZ W8, 0x1
	0x037D7044 STRB W8, [X20 + 0x2DF]
	0x037D7048 CBZ X19, 0x37D707C
	0x037D704C ADRP X8, 0x971000
	0x037D7050 LDR X8, [X8 + 0x948]
	0x037D7054 ADRP X9, 0x971000
	0x037D7058 MOV X1, X19
	0x037D705C LDR X8, [X8]
	0x037D7060 LDR X9, [X9 + 0xB48]
	0x037D7064 LDP X20, X19, [X31 + 0x10]
	0x037D7068 LDR X8, [X8 + 0xB8]
	0x037D706C LDR X2, [X9]
	0x037D7070 ADD X0, X8, 0xF8
	0x037D7074 LDR X30, [X31], #0x20
	0x037D7078 B 0x28F14E0
	0x037D707C ADRP X0, 0x921000
	0x037D7080 LDR X0, [X0 + 0x528]
	0x037D7084 BL 0x1C16D08
	0x037D7088 BL 0x1C16F10
	0x037D708C MOV X19, X0
	0x037D7090 ADRP X0, 0x926000
	0x037D7094 LDR X0, [X0 + 0xEC8]
	0x037D7098 BL 0x1C16D08
	0x037D709C MOV X1, X0
	0x037D70A0 MOV X0, X19
	0x037D70A4 MOV X2, X31
	0x037D70A8 BL 0x330E100
	0x037D70AC ADRP X0, 0x971000
	0x037D70B0 LDR X0, [X0 + 0xB50]
	0x037D70B4 BL 0x1C16D08
	0x037D70B8 MOV X1, X0
	0x037D70BC MOV X0, X19
	0x037D70C0 BL 0x1C16DEC
	0x037D70C4 STR X30, [X31 - 0x20]!
	0x037D70C8 STP X20, X19, [X31 + 0x10]
	0x037D70CC ADRP X19, 0xC0A000
	0x037D70D0 ADRP X20, 0x971000
	0x037D70D4 LDRB W8, [X19 + 0x2E1]
	0x037D70D8 LDR X20, [X20 + 0x948]
	0x037D70DC TBNZ X8, 0x0, 0x37D70F4
	0x037D70E0 ADRP X0, 0x971000
	0x037D70E4 LDR X0, [X0 + 0x948]
	0x037D70E8 BL 0x1C16CF4
	0x037D70EC MOVZ W8, 0x1
	0x037D70F0 STRB W8, [X19 + 0x2E1]
	0x037D70F4 LDR X8, [X20]
	0x037D70F8 LDP X20, X19, [X31 + 0x10]
	0x037D70FC LDR X8, [X8 + 0xB8]
	0x037D7100 LDR W0, [X8 + 0x164]
	0x037D7104 LDR X30, [X31], #0x20
	0x037D7108 RET
	0x037D710C STR X30, [X31 - 0x20]!
	0x037D7110 STP X20, X19, [X31 + 0x10]
	0x037D7114 ADRP X20, 0xC0A000
	0x037D7118 LDRB W8, [X20 + 0x2E2]
	0x037D711C MOV W19, W0
	0x037D7120 TBNZ X8, 0x0, 0x37D7144
	0x037D7124 ADRP X0, 0x971000
	0x037D7128 LDR X0, [X0 + 0xB58]
	0x037D712C BL 0x1C16CF4
	0x037D7130 ADRP X0, 0x971000
	0x037D7134 LDR X0, [X0 + 0x948]
	0x037D7138 BL 0x1C16CF4
	0x037D713C MOVZ W8, 0x1
	0x037D7140 STRB W8, [X20 + 0x2E2]
	0x037D7144 TBNZ X19, 0x1F, 0x37D719C
	0x037D7148 ADRP X20, 0x971000

ISIL:
	001 Subtract X31, X31, 384
	002 Move [X31+304], X29
	003 Move [X31+312], X30
	004 Move [X31+320], X26
	005 Move [X31+328], X25
	006 Move [X31+336], X24
	007 Move [X31+344], X23
	008 Move [X31+352], X22
	009 Move [X31+360], X21
	010 Move [X31+368], X20
	011 Move [X31+376], X19
	012 Move X20, 0xC0C000
	013 Move X24, 0x973000
	014 Move W8, [X20+740]
	015 Move X24, [X24+2376]
	016 Move X19, X1
	017 Move X21, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {39}
	022 Move X0, 0x973000
	023 Move X0, [X0+2760]
	024 Call 0x1C17CF4
	025 Move X0, 0x973000
	026 Move X0, [X0+2376]
	027 Call 0x1C17CF4
	028 Move X0, 0x970000
	029 Move X0, [X0+72]
	030 Call 0x1C17CF4
	031 Move X0, 0x970000
	032 Move X0, [X0+2488]
	033 Call 0x1C17CF4
	034 Move X0, 0x973000
	035 Move X0, [X0+2352]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X20+740], W8
	039 Move X0, X21
	040 Call InputUser.get_index, X0
	041 Move X8, [X24]
	042 Move X8, [X8+184]
	043 Move X8, [X8+32]
	044 Compare X8, 0
	045 JumpIfEqual {221}
	046 Move W9, [X8+24]
	047 Move W20, W0
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X25, W20
	050 Move W9, 184
	051 NotImplemented "Instruction MADD not yet implemented."
	052 Move X22, [X9+80]
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Compare X22, 0
	055 JumpIfEqual {128}
	056 Move [X31+184], X31
	057 Move [X31+192], X31
	058 Move [X31+200], X31
	059 Move X23, 0x973000
	060 Move X8, [X22]
	061 Move X23, [X23+2760]
	062 NotImplemented "Instruction LDRH not yet implemented."
	063 Move X1, [X23]
	064 Compare X9, 0
	065 JumpIfEqual {72}
	066 Move X10, [X8+176]
	067 Add X10, X10, 8
	068 NotImplemented "Instruction LDUR not yet implemented."
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Subtract X9, X9, 1
	071 Add X10, X10, 16
	072 Move W2, 3
	073 Move X0, X22
	074 Call 0x1C5D788
	075 Move W9, [X10]
	076 Add W9, W9, 3
	077 Add X8, X8, W9
	078 Add X0, X8, 312
	079 NotImplemented "Instruction LDUR not yet implemented."
	080 Move X8, [X31+200]
	081 Move X9, [X0]
	082 Add X1, X31, 208
	083 Move [X31+13], V0
	084 Move [X31+224], X8
	085 Move X2, [X0+8]
	086 Move X0, X22
	087 NotImplemented "Instruction BLR not yet implemented."
	088 NotImplemented "Instruction MOVI not yet implemented."
	089 Move [X31+80], V0
	090 Move [X31+88], V0
	091 Move [X31+112], V0
	092 Move [X31+120], V0
	093 Move [X31+144], V0
	094 Move [X31+152], V0
	095 Move X8, [X22]
	096 Move X1, [X23]
	097 NotImplemented "Instruction LDRH not yet implemented."
	098 Compare X9, 0
	099 JumpIfEqual {106}
	100 Move X10, [X8+176]
	101 Add X10, X10, 8
	102 NotImplemented "Instruction LDUR not yet implemented."
	103 NotImplemented "Instruction CMP not yet implemented."
	104 Subtract X9, X9, 1
	105 Add X10, X10, 16
	106 Move W2, 1
	107 Move X0, X22
	108 Call 0x1C5D788
	109 Move X23, X0
	110 Move W9, [X10]
	111 Add W9, W9, 1
	112 Add X8, X8, W9
	113 Add X23, X8, 312
	114 Move X26, [X23]
	115 Add X0, X31, 208
	116 Add X1, X31, 80
	117 Move W2, 96
	118 Call 0x3EB2AC0
	119 Move X2, [X23+8]
	120 Add X1, X31, 208
	121 Move X0, X22
	122 NotImplemented "Instruction BLR not yet implemented."
	123 Move X8, [X24]
	124 Move X8, [X8+184]
	125 Move X8, [X8+32]
	126 Compare X8, 0
	127 JumpIfEqual {221}
	128 Move W9, [X8+24]
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Move W9, 184
	131 NotImplemented "Instruction MADD not yet implemented."
	132 Move [X8+80], X19
	133 Compare X19, 0
	134 JumpIfEqual {208}
	135 Call InputUser.HookIntoActionChange
	136 Move X0, X21
	137 Call InputUser.get_pairedDevices, X0
	138 Move X8, 0x96F000
	139 Move X8, [X8+72]
	140 Move X2, X0
	141 Move X4, X1
	142 Add X0, X31, 56
	143 Move X3, [X8]
	144 Move X1, X2
	145 Move X2, X4
	146 Move [X31+56], X31
	147 Move [X31+64], X31
	148 Move [X31+72], X31
	149 Call Nullable`1<ReadOnlyArray`1<Object>>..ctor, X0, X1
	150 NotImplemented "Instruction LDUR not yet implemented."
	151 Move X8, [X31+72]
	152 Move X10, 0x972000
	153 Move [X31+2], V0
	154 Move [X31+48], X8
	155 Move X8, [X19]
	156 Move X10, [X10+2760]
	157 NotImplemented "Instruction LDRH not yet implemented."
	158 Move X1, [X10]
	159 Compare X9, 0
	160 JumpIfEqual {167}
	161 Move X10, [X8+176]
	162 Add X10, X10, 8
	163 NotImplemented "Instruction LDUR not yet implemented."
	164 NotImplemented "Instruction CMP not yet implemented."
	165 Subtract X9, X9, 1
	166 Add X10, X10, 16
	167 Move W2, 3
	168 Move X0, X19
	169 Call 0x1C5D788
	170 Move W9, [X10]
	171 Add W9, W9, 3
	172 Add X8, X8, W9
	173 Add X0, X8, 312
	174 Move V0, [X31+2]
	175 Move X8, [X31+48]
	176 Move X9, [X0]
	177 Add X1, X31, 208
	178 Move [X31+13], V0
	179 Move [X31+224], X8
	180 Move X2, [X0+8]
	181 Move X0, X19
	182 NotImplemented "Instruction BLR not yet implemented."
	183 Move X8, [X24]
	184 Move X8, [X8+184]
	185 Move X8, [X8+32]
	186 Compare X8, 0
	187 JumpIfEqual {221}
	188 Move W9, [X8+24]
	189 NotImplemented "Instruction CMP not yet implemented."
	190 Move W9, 184
	191 NotImplemented "Instruction MADD not yet implemented."
	192 Add X0, X0, 88
	193 Move W8, [X0]
	194 Compare W8, 0
	195 JumpIfEqual {208}
	196 Move X8, 0x972000
	197 Move X8, [X8+2352]
	198 Move X1, [X8]
	199 Add X8, X31, 208
	200 Call Nullable`1<InputControlScheme>.get_Value, X0
	201 Move V0, [X31+13]
	202 Move X8, [X31+224]
	203 Add X2, X31, 0
	204 Move W1, W20
	205 Move [X31], V0
	206 Move [X31+16], X8
	207 Call InputUser.ActivateControlSchemeInternal, X0, X1, X2
	208 Move X20, [X31+368]
	209 Move X19, [X31+376]
	210 Move X22, [X31+352]
	211 Move X21, [X31+360]
	212 Move X24, [X31+336]
	213 Move X23, [X31+344]
	214 Move X26, [X31+320]
	215 Move X25, [X31+328]
	216 Move X29, [X31+304]
	217 Move X30, [X31+312]
	218 Add X31, X31, 384
	219 Return 
	220 Call 0x1C17F28
	221 Call 0x1C17F20

Method: UnityEngine.InputSystem.Users.InputUser/ControlSchemeChangeSyntax ActivateControlScheme(System.String schemeName)

Disassembly:
	0x037D744C BL 0x1C16CF4
	0x037D7450 ADRP X0, 0x971000
	0x037D7454 LDR X0, [X0 + 0x8F8]
	0x037D7458 BL 0x1C16CF4
	0x037D745C MOVZ W8, 0x1
	0x037D7460 STRB W8, [X20 + 0x272]
	0x037D7464 STRB W31, [X19 + 0x95]
	0x037D7468 LDR X0, [X21]
	0x037D746C ADRP X20, 0x971000
	0x037D7470 LDR W8, [X0 + 0xE0]
	0x037D7474 LDR X20, [X20 + 0xB98]
	0x037D7478 CBNZ W8, 0x37D7484
	0x037D747C BL 0x1C16DFC
	0x037D7480 LDR X0, [X21]
	0x037D7484 LDR X8, [X0 + 0xB8]
	0x037D7488 LDR X3, [X20]
	0x037D748C MOV X1, X19
	0x037D7490 LDR X0, [X8 + 0x8]
	0x037D7494 LDR W2, [X8]
	0x037D7498 BL 0x2179B8C
	0x037D749C ADDS W31, W0, 0x1
	0x037D74A0 B.EQ 0x37D74D8
	0x037D74A4 MOV W20, W0
	0x037D74A8 LDR X0, [X21]
	0x037D74AC ADRP X22, 0x971000
	0x037D74B0 LDR W8, [X0 + 0xE0]
	0x037D74B4 LDR X22, [X22 + 0xB90]
	0x037D74B8 CBNZ W8, 0x37D74C4
	0x037D74BC BL 0x1C16DFC
	0x037D74C0 LDR X0, [X21]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+72], X31
	003 Move [X31+80], X30
	004 Move [X31+96], X20
	005 Move [X31+104], X19
	006 Move X20, X1
	007 Move X19, X0
	008 Move X0, X1
	009 Move X1, X31
	010 Move [X31+56], X31
	011 Move [X31+64], X31
	012 Call String.IsNullOrEmpty, X0
	013 Move TEMP, X0
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfNotEqual {21}
	017 Add X1, X31, 8
	018 Move [X31+8], X31
	019 Move [X31+16], X31
	020 Move [X31+24], X31
	021 Add X2, X31, 56
	022 Move X0, X19
	023 Move X1, X20
	024 Call InputUser.FindControlScheme, X0, X1, X2
	025 NotImplemented "Instruction LDUR not yet implemented."
	026 Move X8, [X31+72]
	027 Add X1, X31, 32
	028 Move [X31+2], V0
	029 Move [X31+48], X8
	030 Move X0, X19
	031 Call InputUser.ActivateControlScheme, X0, X1
	032 Move X20, [X31+96]
	033 Move X19, [X31+104]
	034 Move X30, [X31+80]
	035 And X0, X0, 0
	036 Add X31, X31, 112
	037 Return X0

Method: System.Boolean TryFindControlScheme(System.String schemeName, out UnityEngine.InputSystem.InputControlScheme scheme)

Disassembly:
	0x037E1D08 LDR X10, [X10 + 0x128]
	0x037E1D0C MOVZ W8, 0xB8
	0x037E1D10 SMADDL X8, X20, X8, X9
	0x037E1D14 LDP W3, W2, [X8 + 0x48]
	0x037E1D18 LDR X4, [X10]
	0x037E1D1C MOV X1, X19
	0x037E1D20 BL 0x2179C24
	0x037E1D24 ADDS W31, W0, 0x1
	0x037E1D28 B.EQ 0x37E2020
	0x037E1D2C LDR X8, [X23]
	0x037E1D30 MOV W22, W0
	0x037E1D34 MOV W2, W22
	0x037E1D38 LDR X8, [X8 + 0xB8]
	0x037E1D3C LDR W9, [X8]
	0x037E1D40 LDR X0, [X8 + 0x28]
	0x037E1D44 ADD X1, X8, 0xC
	0x037E1D48 ADD W9, W9, 0x1
	0x037E1D4C STR W9, [X8]
	0x037E1D50 ADRP X9, 0x964000
	0x037E1D54 LDR X9, [X9 + 0x338]
	0x037E1D58 LDR X3, [X9]
	0x037E1D5C BL 0x2177EC0
	0x037E1D60 LDR X8, [X23]
	0x037E1D64 LDR X8, [X8 + 0xB8]
	0x037E1D68 LDR X9, [X8 + 0x20]
	0x037E1D6C CBZ X9, 0x37E2038
	0x037E1D70 LDR W10, [X9 + 0x18]
	0x037E1D74 CMP W10, W20
	0x037E1D78 B.LS 0x37E203C
	0x037E1D7C MOV W10, W20
	0x037E1D80 SXTW X10, W10
	0x037E1D84 MOVZ W11, 0xB8
	0x037E1D88 MADD X9, X10, X11, X9
	0x037E1D8C ADD X9, X9, 0x48
	0x037E1D90 LDR W10, [X9]
	0x037E1D94 SUB W10, W10, 0x1
	0x037E1D98 STR W10, [X9]
	0x037E1D9C LDR W9, [X8 + 0x8]
	0x037E1DA0 CMP W9, 0x1
	0x037E1DA4 B.LT 0x37E1E10
	0x037E1DA8 LDR X10, [X23]
	0x037E1DAC MOV X9, X31
	0x037E1DB0 MOVZ W11, 0xCC
	0x037E1DB4 LDR X8, [X8 + 0x20]
	0x037E1DB8 CBZ X8, 0x37E2038
	0x037E1DBC LDR W12, [X8 + 0x18]
	0x037E1DC0 CMP X9, X12
	0x037E1DC4 B.CS 0x37E203C
	0x037E1DC8 ADD X8, X8, X11
	0x037E1DCC SUB X12, X8, 0x80
	0x037E1DD0 ANDS W31, W21, 0x1
	0x037E1DD4 CSEL X13, X8, X12, NE
	0x037E1DD8 LDR W13, [X13]
	0x037E1DDC CMP W13, W22
	0x037E1DE0 B.LE 0x37E1DF8
	0x037E1DE4 ANDS W31, W21, 0x1
	0x037E1DE8 CSEL X8, X8, X12, NE
	0x037E1DEC LDR W12, [X8]
	0x037E1DF0 SUB W12, W12, 0x1
	0x037E1DF4 STR W12, [X8]
	0x037E1DF8 LDR X8, [X10 + 0xB8]
	0x037E1DFC ADD X9, X9, 0x1
	0x037E1E00 ADD X11, X11, 0xB8
	0x037E1E04 LDRSW X12, [X8 + 0x8]
	0x037E1E08 CMP X9, X12
	0x037E1E0C B.LT 0x37E1DB4
	0x037E1E10 TBNZ X21, 0x0, 0x37E2020
	0x037E1E14 LDR X8, [X23]
	0x037E1E18 LDR X8, [X8 + 0xB8]
	0x037E1E1C MOV X0, X8
	0x037E1E20 LDR W9, [X0 + 0x38]!
	0x037E1E24 CMP W9, 0x1
	0x037E1E28 B.LT 0x37E1ED0
	0x037E1E2C ADRP X24, 0x968000
	0x037E1E30 ADRP X25, 0x968000
	0x037E1E34 LDR X24, [X24 + 0x138]
	0x037E1E38 LDR X25, [X25 + 0x130]
	0x037E1E3C MOV W8, W20
	0x037E1E40 MOV W21, W31
	0x037E1E44 SXTW X22, W8
	0x037E1E48 LDR X2, [X24]
	0x037E1E4C MOV W1, W21
	0x037E1E50 BL 0x2DF67E0
	0x037E1E54 LDR X8, [X23]
	0x037E1E58 LDR X8, [X8 + 0xB8]
	0x037E1E5C LDR X9, [X8 + 0x18]
	0x037E1E60 CBZ X9, 0x37E2038
	0x037E1E64 LDR W10, [X9 + 0x18]
	0x037E1E68 CMP W10, W20
	0x037E1E6C B.LS 0x37E203C
	0x037E1E70 ADD X9, X9, X22, 0x2, LSL
	0x037E1E74 LDR W9, [X9 + 0x20]
	0x037E1E78 CMP W9, W1
	0x037E1E7C B.NE 0x37E1EB4
	0x037E1E80 LDR X2, [X24]
	0x037E1E84 ADD X0, X8, 0x38
	0x037E1E88 MOV W1, W21
	0x037E1E8C BL 0x2DF67E0
	0x037E1E90 CMP X0, X19
	0x037E1E94 B.NE 0x37E1EB4
	0x037E1E98 LDR X8, [X23]
	0x037E1E9C LDR X2, [X25]
	0x037E1EA0 MOV W1, W21
	0x037E1EA4 LDR X8, [X8 + 0xB8]
	0x037E1EA8 ADD X0, X8, 0x38
	0x037E1EAC BL 0x2DF7624
	0x037E1EB0 SUB W21, W21, 0x1
	0x037E1EB4 LDR X8, [X23]
	0x037E1EB8 ADD W21, W21, 0x1
	0x037E1EBC LDR X8, [X8 + 0xB8]
	0x037E1EC0 MOV X0, X8
	0x037E1EC4 LDR W9, [X0 + 0x38]!
	0x037E1EC8 CMP W21, W9
	0x037E1ECC B.LT 0x37E1E48
	0x037E1ED0 LDR X9, [X8 + 0x20]
	0x037E1ED4 CBZ X9, 0x37E2038
	0x037E1ED8 LDR W10, [X9 + 0x18]
	0x037E1EDC CMP W10, W20
	0x037E1EE0 B.LS 0x37E203C
	0x037E1EE4 SXTW X22, W20
	0x037E1EE8 MOVZ W10, 0xB8
	0x037E1EEC MADD X9, X22, X10, X9
	0x037E1EF0 LDR X21, [X9 + 0x50]
	0x037E1EF4 CBZ X21, 0x37E2010
	0x037E1EF8 LDR X8, [X8 + 0x18]
	0x037E1EFC CBZ X8, 0x37E2038
	0x037E1F00 LDR W9, [X8 + 0x18]
	0x037E1F04 CMP W9, W20
	0x037E1F08 B.LS 0x37E203C
	0x037E1F0C ADD X8, X8, X22, 0x2, LSL
	0x037E1F10 ADD X0, X8, 0x20
	0x037E1F14 BL 0x37D38F8
	0x037E1F18 ADRP X8, 0x964000
	0x037E1F1C LDR X8, [X8 + 0x48]
	0x037E1F20 MOV X2, X0
	0x037E1F24 MOV X4, X1
	0x037E1F28 ADD X0, X31, 0x38
	0x037E1F2C LDR X3, [X8]
	0x037E1F30 MOV X1, X2
	0x037E1F34 MOV X2, X4
	0x037E1F38 STP X31, X31, [X31 + 0x38]
	0x037E1F3C STR X31, [X31 + 0x48]
	0x037E1F40 BL 0x242CC30
	0x037E1F44 LDUR V0, [X31 + 0x38]
	0x037E1F48 LDR X8, [X31 + 0x48]
	0x037E1F4C ADRP X10, 0x967000
	0x037E1F50 STR V0, [X31 + 0x2]
	0x037E1F54 STR X8, [X31 + 0x30]
	0x037E1F58 LDR X8, [X21]
	0x037E1F5C LDR X10, [X10 + 0xAC8]
	0x037E1F60 LDRH W9, [X8 + 0x12E]
	0x037E1F64 LDR X1, [X10]
	0x037E1F68 CBZ X9, 0x37E1F8C
	0x037E1F6C LDR X10, [X8 + 0xB0]
	0x037E1F70 ADD X10, X10, 0x8
	0x037E1F74 LDUR X11, [X10 - 0x8]
	0x037E1F78 CMP X11, X1
	0x037E1F7C B.EQ 0x37E1F9C

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+80], X30
	003 Move [X31+88], X23
	004 Move [X31+96], X22
	005 Move [X31+104], X21
	006 Move [X31+112], X20
	007 Move [X31+120], X19
	008 Move X22, 0xC01000
	009 Move W8, [X22+741]
	010 Move X20, X2
	011 Move X19, X1
	012 Move X21, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {31}
	017 Move X0, 0x968000
	018 Move X0, [X0+2760]
	019 Call 0x1C17CF4
	020 Move X0, 0x968000
	021 Move X0, [X0+2376]
	022 Call 0x1C17CF4
	023 Move X0, 0x965000
	024 Move X0, [X0+2536]
	025 Call 0x1C17CF4
	026 Move X0, 0x965000
	027 Move X0, [X0+1592]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X22+741], W8
	031 Move X0, X19
	032 Move X1, X31
	033 Move [X31+64], X31
	034 Move [X31+72], X31
	035 Call String.IsNullOrEmpty, X0
	036 Move TEMP, X0
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfEqual {118}
	040 Move X22, 0x968000
	041 Move X22, [X22+2376]
	042 Move X0, X21
	043 Move X8, [X22]
	044 Move X8, [X8+184]
	045 Move X23, [X8+32]
	046 Call InputUser.get_index, X0
	047 Compare X23, 0
	048 JumpIfEqual {142}
	049 Move W8, [X23+24]
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move W8, 184
	052 NotImplemented "Instruction SMADDL not yet implemented."
	053 Move X8, [X8+80]
	054 Compare X8, 0
	055 JumpIfEqual {144}
	056 Move X8, [X22]
	057 Move X0, X21
	058 Move X8, [X8+184]
	059 Move X22, [X8+32]
	060 Call InputUser.get_index, X0
	061 Compare X22, 0
	062 JumpIfEqual {142}
	063 Move W8, [X22+24]
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move W8, 184
	066 NotImplemented "Instruction SMADDL not yet implemented."
	067 Move X21, [X8+80]
	068 Compare X21, 0
	069 JumpIfEqual {142}
	070 Move X10, 0x968000
	071 Move X8, [X21]
	072 Move X10, [X10+2760]
	073 NotImplemented "Instruction LDRH not yet implemented."
	074 Move X1, [X10]
	075 Compare X9, 0
	076 JumpIfEqual {83}
	077 Move X10, [X8+176]
	078 Add X10, X10, 8
	079 NotImplemented "Instruction LDUR not yet implemented."
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Subtract X9, X9, 1
	082 Add X10, X10, 16
	083 Move W2, 4
	084 Move X0, X21
	085 Call 0x1C5D788
	086 Move W9, [X10]
	087 Add W9, W9, 4
	088 Add X8, X8, W9
	089 Add X0, X8, 312
	090 Move X8, [X0]
	091 Move X1, [X0+8]
	092 Move X0, X21
	093 NotImplemented "Instruction BLR not yet implemented."
	094 Move X8, X1
	095 ShiftRight X8, 32
	096 And X8, X8, 0x7FFFFFFF
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Move [X31+64], X0
	099 Move [X31+72], X1
	100 Move X22, 0x965000
	101 Move X22, [X22+1592]
	102 Move W21, W31
	103 Move X2, [X22]
	104 Add X8, X31, 32
	105 Add X0, X31, 64
	106 Move W1, W21
	107 Call ReadOnlyArray`1<InputControlScheme>.get_Item, X0, X1
	108 Move X0, [X31+32]
	109 Move W2, 3
	110 Move X1, X19
	111 Move X3, X31
	112 Call String.Compare, X0, X1, X2
	113 Compare W0, 0
	114 JumpIfEqual {130}
	115 Move W8, [X31+76]
	116 Add W21, W21, 1
	117 NotImplemented "Instruction CMP not yet implemented."
	118 Move W0, W31
	119 Move [X20], X31
	120 Move [X20+8], X31
	121 Move [X20+16], X31
	122 Move X20, [X31+112]
	123 Move X19, [X31+120]
	124 Move X22, [X31+96]
	125 Move X21, [X31+104]
	126 Move X30, [X31+80]
	127 Move X23, [X31+88]
	128 Add X31, X31, 128
	129 Return X0
	130 Move X2, [X22]
	131 Add X8, X31, 8
	132 Add X0, X31, 64
	133 Move W1, W21
	134 Call ReadOnlyArray`1<InputControlScheme>.get_Item, X0, X1
	135 Move X8, [X31+24]
	136 NotImplemented "Instruction LDUR not yet implemented."
	137 Move W0, 1
	138 Move [X31+48], X8
	139 Move [X31+2], V0
	140 Move [X20+16], X8
	141 Move [X20], V0
	142 Call 0x1C17F20
	143 Call 0x1C17F28
	144 Move X0, X21
	145 Call InputUser.get_index, X0
	146 Move [X31+32], W0
	147 Move X0, 0x913000
	148 Move X0, [X0+1880]
	149 Call 0x1C17D08
	150 Add X1, X31, 32
	151 Call 0x1C17E04
	152 Move X20, X0
	153 Move X0, 0x969000
	154 Move X0, [X0+168]
	155 Call 0x1C17D08
	156 Move X1, X19
	157 Move X2, X20
	158 Move X3, X31
	159 Call String.Format, X0, X1, X2
	160 Move X19, X0
	161 Move X0, 0x913000
	162 Move X0, [X0+1456]
	163 Call 0x1C17D08
	164 Call 0x1C17F10
	165 Move X1, X19
	166 Move X2, X31
	167 Move X20, X0
	168 Call InvalidOperationException..ctor, X0, X1
	169 Move X0, 0x969000
	170 Move X0, [X0+176]
	171 Call 0x1C17D08
	172 Move X1, X0
	173 Move X0, X20
	174 Call 0x1C17DEC

Method: System.Void FindControlScheme(System.String schemeName, out UnityEngine.InputSystem.InputControlScheme scheme)

Disassembly:
	0x037D5444 LDR X20, [X0]
	0x037D5448 BL 0x3EB1AE0
	0x037D544C ADRP X8, 0x970000
	0x037D5450 LDR X8, [X8 + 0x18]
	0x037D5454 ADD X0, X31, 0x18
	0x037D5458 LDR X1, [X8]
	0x037D545C BL 0x2BC4968
	0x037D5460 CBZ X20, 0x37D5408
	0x037D5464 MOV X0, X20
	0x037D5468 BL 0x1C16F18
	0x037D546C MOV X20, X31
	0x037D5470 B 0x37D5478
	0x037D5474 MOV X19, X0
	0x037D5478 ADRP X8, 0x970000
	0x037D547C LDR X8, [X8 + 0x18]
	0x037D5480 LDR X1, [X8]
	0x037D5484 ADD X0, X31, 0x18
	0x037D5488 BL 0x2BC4968
	0x037D548C CBNZ X20, 0x37D5498
	0x037D5490 MOV X0, X19
	0x037D5494 BL 0x1D2C690
	0x037D5498 MOV X0, X20
	0x037D549C BL 0x1C16F18
	0x037D54A0 BL 0x1990590
	0x037D54A4 SUB X31, X31, 0x60
	0x037D54A8 STP X2, X30, [X31 + 0x28]
	0x037D54AC STP X22, X21, [X31 + 0x40]
	0x037D54B0 STP X20, X19, [X31 + 0x50]
	0x037D54B4 ADRP X22, 0xC0C000
	0x037D54B8 LDRB W8, [X22 + 0x267]
	0x037D54BC MOV X20, X2
	0x037D54C0 MOV X21, X1
	0x037D54C4 MOV X19, X0
	0x037D54C8 STR X1, [X31 + 0x20]
	0x037D54CC TBNZ X8, 0x0, 0x37D5514
	0x037D54D0 ADRP X0, 0x970000
	0x037D54D4 LDR X0, [X0 + 0xC38]
	0x037D54D8 BL 0x1C16CF4
	0x037D54DC ADRP X0, 0x94E000
	0x037D54E0 LDR X0, [X0 + 0xAF0]
	0x037D54E4 BL 0x1C16CF4
	0x037D54E8 ADRP X0, 0x973000
	0x037D54EC LDR X0, [X0 + 0xA90]
	0x037D54F0 BL 0x1C16CF4
	0x037D54F4 ADRP X0, 0x973000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, X1
	006 Move X20, X0
	007 Call InputUser.TryFindControlScheme, X0, X1, X2
	008 Move TEMP, X0
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfNotEqual {17}
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move X30, [X31+32]
	015 Move X21, [X31+40]
	016 Return 
	017 Move X0, 0x974000
	018 Move X0, [X0+2376]
	019 Call 0x1C17D08
	020 Move X8, [X0+184]
	021 Move X0, X20
	022 Move X21, [X8+32]
	023 Call InputUser.get_index, X0
	024 Move W20, W0
	025 Move X0, X21
	026 Call 0x19913C0
	027 Move X1, W20
	028 Move X0, X21
	029 Call 0x1BD3138
	030 Move X20, [X0+48]
	031 Move X0, 0x974000
	032 Move X0, [X0+2632]
	033 Call 0x1C17D08
	034 Move X1, X19
	035 Move X2, X20
	036 Move X3, X31
	037 Call String.Format, X0, X1, X2
	038 Move X19, X0
	039 Move X0, 0x927000
	040 Move X0, [X0+1400]
	041 Call 0x1C17D08
	042 Call 0x1C17F10
	043 Move X1, X19
	044 Move X2, X31
	045 Move X20, X0
	046 Call ArgumentException..ctor, X0, X1
	047 Move X0, 0x974000
	048 Move X0, [X0+2640]
	049 Call 0x1C17D08
	050 Move X1, X0
	051 Move X0, X20
	052 Call 0x1C17DEC

Method: UnityEngine.InputSystem.Users.InputUser/ControlSchemeChangeSyntax ActivateControlScheme(UnityEngine.InputSystem.InputControlScheme scheme)

Disassembly:
	0x037D7294 LDP X20, X19, [X31 + 0x10]
	0x037D7298 LDP X30, X21, [X31], #0x20
	0x037D729C B 0x37E0554
	0x037D72A0 ADRP X0, 0x921000
	0x037D72A4 LDR X0, [X0 + 0x528]
	0x037D72A8 BL 0x1C16D08
	0x037D72AC BL 0x1C16F10
	0x037D72B0 MOV X19, X0
	0x037D72B4 ADRP X0, 0x926000
	0x037D72B8 LDR X0, [X0 + 0xEC8]
	0x037D72BC BL 0x1C16D08
	0x037D72C0 MOV X1, X0
	0x037D72C4 MOV X0, X19
	0x037D72C8 MOV X2, X31
	0x037D72CC BL 0x330E100
	0x037D72D0 ADRP X0, 0x971000
	0x037D72D4 LDR X0, [X0 + 0xB78]
	0x037D72D8 BL 0x1C16D08
	0x037D72DC MOV X1, X0
	0x037D72E0 MOV X0, X19
	0x037D72E4 BL 0x1C16DEC
	0x037D72E8 STR X30, [X31 - 0x20]!
	0x037D72EC STP X20, X19, [X31 + 0x10]
	0x037D72F0 ADRP X20, 0xC0A000
	0x037D72F4 LDRB W8, [X20 + 0x2E0]
	0x037D72F8 MOV X19, X0
	0x037D72FC TBNZ X8, 0x0, 0x37D7320
	0x037D7300 ADRP X0, 0x971000
	0x037D7304 LDR X0, [X0 + 0xB80]
	0x037D7308 BL 0x1C16CF4
	0x037D730C ADRP X0, 0x971000
	0x037D7310 LDR X0, [X0 + 0x948]
	0x037D7314 BL 0x1C16CF4
	0x037D7318 MOVZ W8, 0x1
	0x037D731C STRB W8, [X20 + 0x2E0]
	0x037D7320 CBZ X19, 0x37D7354
	0x037D7324 ADRP X8, 0x971000
	0x037D7328 LDR X8, [X8 + 0x948]
	0x037D732C ADRP X9, 0x971000
	0x037D7330 MOV X1, X19
	0x037D7334 LDR X8, [X8]
	0x037D7338 LDR X9, [X9 + 0xB80]
	0x037D733C LDP X20, X19, [X31 + 0x10]
	0x037D7340 LDR X8, [X8 + 0xB8]
	0x037D7344 LDR X2, [X9]
	0x037D7348 ADD X0, X8, 0xF8
	0x037D734C LDR X30, [X31], #0x20
	0x037D7350 B 0x28F1650
	0x037D7354 ADRP X0, 0x921000
	0x037D7358 LDR X0, [X0 + 0x528]
	0x037D735C BL 0x1C16D08
	0x037D7360 BL 0x1C16F10
	0x037D7364 MOV X19, X0
	0x037D7368 ADRP X0, 0x926000
	0x037D736C LDR X0, [X0 + 0xEC8]
	0x037D7370 BL 0x1C16D08
	0x037D7374 MOV X1, X0
	0x037D7378 MOV X0, X19
	0x037D737C MOV X2, X31
	0x037D7380 BL 0x330E100
	0x037D7384 ADRP X0, 0x971000
	0x037D7388 LDR X0, [X0 + 0xB88]
	0x037D738C BL 0x1C16D08
	0x037D7390 MOV X1, X0
	0x037D7394 MOV X0, X19
	0x037D7398 BL 0x1C16DEC
	0x037D739C STR X30, [X31 - 0x20]!
	0x037D73A0 STP X20, X19, [X31 + 0x10]
	0x037D73A4 ADRP X20, 0xC0A000
	0x037D73A8 LDRB W8, [X20 + 0x271]
	0x037D73AC MOV X19, X0
	0x037D73B0 TBNZ X8, 0x0, 0x37D73C8
	0x037D73B4 ADRP X0, 0x944000
	0x037D73B8 LDR X0, [X0 + 0x270]
	0x037D73BC BL 0x1C16CF4
	0x037D73C0 MOVZ W8, 0x1
	0x037D73C4 STRB W8, [X20 + 0x271]
	0x037D73C8 LDRB W8, [X19 + 0x210]
	0x037D73CC CBZ W8, 0x37D73FC
	0x037D73D0 ADRP X8, 0x944000
	0x037D73D4 LDR X8, [X8 + 0x270]
	0x037D73D8 LDR X20, [X19 + 0x208]
	0x037D73DC LDR X0, [X8]
	0x037D73E0 LDR W8, [X0 + 0xE0]
	0x037D73E4 CBNZ W8, 0x37D73EC
	0x037D73E8 BL 0x1C16DFC
	0x037D73EC MOV X0, X20
	0x037D73F0 MOV X1, X31
	0x037D73F4 BL 0x376DD48
	0x037D73F8 STRB W31, [X19 + 0x210]
	0x037D73FC LDP X20, X19, [X31 + 0x10]
	0x037D7400 LDR X30, [X31], #0x20
	0x037D7404 RET
	0x037D7408 STP X30, X23, [X31 - 0x30]!
	0x037D740C STP X22, X21, [X31 + 0x10]
	0x037D7410 STP X20, X19, [X31 + 0x20]
	0x037D7414 ADRP X20, 0xC0A000
	0x037D7418 ADRP X21, 0x971000
	0x037D741C LDRB W8, [X20 + 0x272]
	0x037D7420 LDR X21, [X21 + 0x8F8]
	0x037D7424 MOV X19, X0
	0x037D7428 TBNZ X8, 0x0, 0x37D7464
	0x037D742C ADRP X0, 0x971000
	0x037D7430 LDR X0, [X0 + 0xB90]
	0x037D7434 BL 0x1C16CF4
	0x037D7438 ADRP X0, 0x971000
	0x037D743C LDR X0, [X0 + 0xB98]
	0x037D7440 BL 0x1C16CF4
	0x037D7444 ADRP X0, 0x91C000
	0x037D7448 LDR X0, [X0 + 0xE00]

ISIL:
	001 Subtract X31, X31, 288
	002 Move [X31+224], X29
	003 Move [X31+240], X30
	004 Move [X31+248], X23
	005 Move [X31+256], X22
	006 Move [X31+264], X21
	007 Move [X31+272], X20
	008 Move [X31+280], X19
	009 NotImplemented "Instruction MRS not yet implemented."
	010 Move X8, [X21+40]
	011 Move X23, 0xC0B000
	012 Move X22, 0x972000
	013 Move X19, X1
	014 Move [X31+216], X8
	015 Move W8, [X23+742]
	016 Move X22, [X22+2376]
	017 Move X20, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {33}
	022 Move X0, 0x972000
	023 Move X0, [X0+2376]
	024 Call 0x1C17CF4
	025 Move X0, 0x945000
	026 Move X0, [X0+3600]
	027 Call 0x1C17CF4
	028 Move X0, 0x96F000
	029 Move X0, [X0+2488]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X23+742], W8
	033 Move X0, X20
	034 Call InputUser.get_index, X0
	035 Move X8, [X22]
	036 Move X8, [X8+184]
	037 Move X8, [X8+32]
	038 Compare X8, 0
	039 JumpIfEqual {125}
	040 Move W9, [X8+24]
	041 Move W20, W0
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X23, W20
	044 Move W9, 184
	045 NotImplemented "Instruction MADD not yet implemented."
	046 NotImplemented "Instruction LDUR not yet implemented."
	047 NotImplemented "Instruction LDUR not yet implemented."
	048 Add X8, X31, 176
	049 Move W9, [X9+88]
	050 Move [X8+15], V0
	051 Move [X31+11], V1
	052 Move X10, [X19+16]
	053 Move V0, [X19]
	054 Move [X31+160], X10
	055 Move [X31+9], V0
	056 Compare W9, 0
	057 JumpIfEqual {101}
	058 NotImplemented "Instruction LDUR not yet implemented."
	059 NotImplemented "Instruction LDUR not yet implemented."
	060 Move V1, [X31+9]
	061 Move X9, [X31+160]
	062 Add X0, X31, 112
	063 Add X1, X31, 80
	064 Move X2, X31
	065 Move [X31+7], V0
	066 Move [X31+128], X8
	067 Move [X31+5], V1
	068 Move [X31+96], X9
	069 Call InputControlScheme.op_Inequality, X0, X1
	070 Move TEMP, X0
	071 And TEMP, TEMP, 1
	072 Compare TEMP, 1
	073 JumpIfEqual {101}
	074 Move X8, [X19+16]
	075 Move V0, [X19]
	076 Add X0, X31, 48
	077 Add X1, X31, 24
	078 Move X2, X31
	079 Move [X31+32], X31
	080 Move [X31+40], X31
	081 Move [X31+64], X8
	082 Move [X31+3], V0
	083 Move [X31+24], X31
	084 Call InputControlScheme.op_Equality, X0, X1
	085 Move TEMP, X0
	086 And TEMP, TEMP, 1
	087 Compare TEMP, 1
	088 JumpIfNotEqual {112}
	089 Move X8, [X22]
	090 Move X8, [X8+184]
	091 Move X8, [X8+32]
	092 Compare X8, 0
	093 JumpIfEqual {125}
	094 Move W9, [X8+24]
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Move W9, 184
	097 NotImplemented "Instruction MADD not yet implemented."
	098 Move W8, [X8+88]
	099 Compare W8, 0
	100 JumpIfEqual {112}
	101 Move X8, [X19+16]
	102 Move V0, [X19]
	103 Add X2, X31, 0
	104 Move W1, W20
	105 Move [X31+16], X8
	106 Move [X31], V0
	107 Call InputUser.ActivateControlSchemeInternal, X0, X1, X2
	108 Move W1, 11
	109 Move W0, W20
	110 Move X2, X31
	111 Call InputUser.Notify, X0, X1, X2
	112 Move X8, [X21+40]
	113 Move X9, [X31+216]
	114 NotImplemented "Instruction CMP not yet implemented."
	115 Move W0, W20
	116 Move X20, [X31+272]
	117 Move X19, [X31+280]
	118 Move X22, [X31+256]
	119 Move X21, [X31+264]
	120 Move X30, [X31+240]
	121 Move X23, [X31+248]
	122 Move X29, [X31+224]
	123 Add X31, X31, 288
	124 Return X0
	125 Call 0x1C17F20
	126 Call 0x1C17F28
	127 Call 0x3EB2B20

Method: System.Void ActivateControlSchemeInternal(System.Int32 userIndex, UnityEngine.InputSystem.InputControlScheme scheme)

Disassembly:
	0x037E1978 B 0x37E1990
	0x037E197C B 0x37E1990
	0x037E1980 B 0x37E1990
	0x037E1984 B 0x37E1990
	0x037E1988 B 0x37E1990
	0x037E198C B 0x37E1990
	0x037E1990 MOV X21, X1
	0x037E1994 MOV X23, X0
	0x037E1998 CMP W21, 0x1
	0x037E199C B.NE 0x37E19BC
	0x037E19A0 MOV X0, X23
	0x037E19A4 BL 0x3EB1AD0
	0x037E19A8 LDR X22, [X0]
	0x037E19AC BL 0x3EB1AE0
	0x037E19B0 MOV W21, W31
	0x037E19B4 CBNZ X20, 0x37E1740
	0x037E19B8 B 0x37E17A0
	0x037E19BC MOV X22, X31
	0x037E19C0 CBZ X20, 0x37E1A24
	0x037E19C4 ADRP X10, 0x912000
	0x037E19C8 LDR X8, [X20]
	0x037E19CC LDR X10, [X10 + 0xE00]
	0x037E19D0 LDRH W9, [X8 + 0x12E]
	0x037E19D4 LDR X1, [X10]
	0x037E19D8 CBZ X9, 0x37E19FC
	0x037E19DC LDR X10, [X8 + 0xB0]
	0x037E19E0 ADD X10, X10, 0x8
	0x037E19E4 LDUR X11, [X10 - 0x8]
	0x037E19E8 CMP X11, X1
	0x037E19EC B.EQ 0x37E1A0C
	0x037E19F0 SUBS X9, X9, 0x1
	0x037E19F4 ADD X10, X10, 0x10
	0x037E19F8 B.NE 0x37E19E4
	0x037E19FC MOV X0, X20
	0x037E1A00 MOV W2, W31
	0x037E1A04 BL 0x1C5C788
	0x037E1A08 B 0x37E1A18
	0x037E1A0C LDRSW X9, [X10]
	0x037E1A10 ADD X8, X8, X9, 0x4, LSL
	0x037E1A14 ADD X0, X8, 0x138
	0x037E1A18 LDP X8, X1, [X0]
	0x037E1A1C MOV X0, X20
	0x037E1A20 BLR X8
	0x037E1A24 CBNZ X22, 0x37E1A50
	0x037E1A28 CMP W21, 0x1
	0x037E1A2C B.NE 0x37E1A48
	0x037E1A30 MOV X0, X23
	0x037E1A34 BL 0x3EB1AD0
	0x037E1A38 LDR X20, [X0]
	0x037E1A3C BL 0x3EB1AE0
	0x037E1A40 MOV W21, W31
	0x037E1A44 B 0x37E17B8
	0x037E1A48 MOV X20, X31
	0x037E1A4C B 0x37E1A70
	0x037E1A50 MOV X0, X22
	0x037E1A54 BL 0x1C16F18
	0x037E1A58 MOV X21, X1
	0x037E1A5C MOV X23, X0
	0x037E1A60 CBNZ X20, 0x37E19C4
	0x037E1A64 B 0x37E1A24
	0x037E1A68 MOV X21, X1
	0x037E1A6C MOV X23, X0
	0x037E1A70 ADRP X8, 0x965000
	0x037E1A74 LDR X8, [X8 + 0x788]
	0x037E1A78 LDR X1, [X8]
	0x037E1A7C ADD X0, X31, 0x70
	0x037E1A80 BL 0x2DFB98C
	0x037E1A84 CBZ X20, 0x37E18FC
	0x037E1A88 MOV X0, X20
	0x037E1A8C BL 0x1C16F18
	0x037E1A90 BL 0x1990590
	0x037E1A94 STP X30, X23, [X31 - 0x30]!
	0x037E1A98 STP X22, X21, [X31 + 0x10]
	0x037E1A9C STP X20, X19, [X31 + 0x20]
	0x037E1AA0 ADRP X19, 0xC00000
	0x037E1AA4 ADRP X22, 0x967000
	0x037E1AA8 LDRB W8, [X19 + 0x2EA]
	0x037E1AAC LDR X22, [X22 + 0x948]
	0x037E1AB0 MOV W21, W0
	0x037E1AB4 TBNZ X8, 0x0, 0x37E1AD8
	0x037E1AB8 ADRP X0, 0x968000
	0x037E1ABC LDR X0, [X0 + 0x120]
	0x037E1AC0 BL 0x1C16CF4
	0x037E1AC4 ADRP X0, 0x967000
	0x037E1AC8 LDR X0, [X0 + 0x948]
	0x037E1ACC BL 0x1C16CF4
	0x037E1AD0 MOVZ W8, 0x1
	0x037E1AD4 STRB W8, [X19 + 0x2EA]
	0x037E1AD8 LDR X8, [X22]
	0x037E1ADC LDR X8, [X8 + 0xB8]
	0x037E1AE0 LDR X9, [X8 + 0x20]
	0x037E1AE4 CBZ X9, 0x37E1BBC
	0x037E1AE8 LDR W10, [X9 + 0x18]
	0x037E1AEC CMP W10, W21
	0x037E1AF0 B.LS 0x37E1BB8
	0x037E1AF4 SXTW X23, W21
	0x037E1AF8 MOVZ W10, 0xB8
	0x037E1AFC MADD X10, X23, X10, X9
	0x037E1B00 LDR W19, [X10 + 0xC8]
	0x037E1B04 CMP W19, 0x1
	0x037E1B08 B.LT 0x37E1BA8
	0x037E1B0C ADRP X10, 0x968000
	0x037E1B10 LDR X10, [X10 + 0x120]
	0x037E1B14 MOVZ W11, 0xB8
	0x037E1B18 MADD X9, X23, X11, X9
	0x037E1B1C LDR W20, [X9 + 0xCC]
	0x037E1B20 LDR X4, [X10]
	0x037E1B24 ADD X0, X8, 0x30
	0x037E1B28 ADD X1, X8, 0x10
	0x037E1B2C MOV W2, W20
	0x037E1B30 MOV W3, W19
	0x037E1B34 BL 0x2178984
	0x037E1B38 LDR X8, [X22]
	0x037E1B3C LDR X8, [X8 + 0xB8]
	0x037E1B40 LDR X12, [X8 + 0x20]
	0x037E1B44 CBZ X12, 0x37E1BBC
	0x037E1B48 LDR X11, [X12 + 0x18]
	0x037E1B4C CMP W11, W21
	0x037E1B50 B.LS 0x37E1BB8
	0x037E1B54 MOVZ W9, 0xB8
	0x037E1B58 MADD X9, X23, X9, X12
	0x037E1B5C STR X31, [X9 + 0xC8]
	0x037E1B60 LDR W9, [X8 + 0x8]
	0x037E1B64 CMP W9, 0x1
	0x037E1B68 B.LT 0x37E1BA8
	0x037E1B6C MOV X10, X31
	0x037E1B70 AND X11, X11, 0x0
	0x037E1B74 ADD X12, X12, 0xCC
	0x037E1B78 CMP X11, X10
	0x037E1B7C B.EQ 0x37E1BB8
	0x037E1B80 LDR W13, [X12]
	0x037E1B84 CMP W13, W20
	0x037E1B88 B.LE 0x37E1B98
	0x037E1B8C SUB W9, W13, W19
	0x037E1B90 STR W9, [X12]
	0x037E1B94 LDR W9, [X8 + 0x8]
	0x037E1B98 ADD X10, X10, 0x1
	0x037E1B9C CMP X10, W9, SXTW
	0x037E1BA0 ADD X12, X12, 0xB8
	0x037E1BA4 B.LT 0x37E1B78
	0x037E1BA8 LDP X20, X19, [X31 + 0x20]
	0x037E1BAC LDP X22, X21, [X31 + 0x10]
	0x037E1BB0 LDP X30, X23, [X31], #0x30
	0x037E1BB4 RET
	0x037E1BB8 BL 0x1C16F28
	0x037E1BBC BL 0x1C16F20
	0x037E1BC0 SUB X31, X31, 0x90
	0x037E1BC4 STP X30, X25, [X31 + 0x50]
	0x037E1BC8 STP X24, X23, [X31 + 0x60]
	0x037E1BCC STP X22, X21, [X31 + 0x70]
	0x037E1BD0 STP X20, X19, [X31 + 0x80]
	0x037E1BD4 ADRP X22, 0xC00000
	0x037E1BD8 ADRP X23, 0x967000
	0x037E1BDC LDRB W8, [X22 + 0x2FA]
	0x037E1BE0 LDR X23, [X23 + 0x948]
	0x037E1BE4 MOV W21, W2
	0x037E1BE8 MOV X19, X1
	0x037E1BEC MOV W20, W0
	0x037E1BF0 TBNZ X8, 0x0, 0x37E1C68
	0x037E1BF4 ADRP X0, 0x964000
	0x037E1BF8 LDR X0, [X0 + 0x338]
	0x037E1BFC BL 0x1C16CF4
	0x037E1C00 ADRP X0, 0x964000
	0x037E1C04 LDR X0, [X0 + 0x330]
	0x037E1C08 BL 0x1C16CF4
	0x037E1C0C ADRP X0, 0x968000
	0x037E1C10 LDR X0, [X0 + 0x128]
	0x037E1C14 BL 0x1C16CF4
	0x037E1C18 ADRP X0, 0x967000
	0x037E1C1C LDR X0, [X0 + 0xAC8]
	0x037E1C20 BL 0x1C16CF4
	0x037E1C24 ADRP X0, 0x968000
	0x037E1C28 LDR X0, [X0 + 0x130]
	0x037E1C2C BL 0x1C16CF4
	0x037E1C30 ADRP X0, 0x968000
	0x037E1C34 LDR X0, [X0 + 0x138]
	0x037E1C38 BL 0x1C16CF4
	0x037E1C3C ADRP X0, 0x967000
	0x037E1C40 LDR X0, [X0 + 0x948]
	0x037E1C44 BL 0x1C16CF4
	0x037E1C48 ADRP X0, 0x964000
	0x037E1C4C LDR X0, [X0 + 0x48]
	0x037E1C50 BL 0x1C16CF4
	0x037E1C54 ADRP X0, 0x964000
	0x037E1C58 LDR X0, [X0 + 0x9B8]
	0x037E1C5C BL 0x1C16CF4
	0x037E1C60 MOVZ W8, 0x1
	0x037E1C64 STRB W8, [X22 + 0x2FA]
	0x037E1C68 LDR X8, [X23]
	0x037E1C6C LDR X8, [X8 + 0xB8]
	0x037E1C70 TBZ X21, 0x0, 0x37E1CEC
	0x037E1C74 LDR X0, [X8 + 0x30]
	0x037E1C78 LDR W2, [X8 + 0x10]
	0x037E1C7C ADRP X8, 0x964000
	0x037E1C80 LDR X8, [X8 + 0x330]
	0x037E1C84 MOV X1, X19
	0x037E1C88 LDR X3, [X8]
	0x037E1C8C BL 0x2179B8C
	0x037E1C90 ADDS W31, W0, 0x1
	0x037E1C94 B.EQ 0x37E2020
	0x037E1C98 LDR X8, [X23]
	0x037E1C9C ADRP X9, 0x964000
	0x037E1CA0 MOV W22, W0
	0x037E1CA4 MOV W2, W22
	0x037E1CA8 LDR X8, [X8 + 0xB8]
	0x037E1CAC LDR X9, [X9 + 0x338]
	0x037E1CB0 LDR X0, [X8 + 0x30]
	0x037E1CB4 LDR X3, [X9]
	0x037E1CB8 ADD X1, X8, 0x10
	0x037E1CBC BL 0x2177EC0
	0x037E1CC0 LDR X8, [X23]
	0x037E1CC4 LDR X8, [X8 + 0xB8]
	0x037E1CC8 LDR X9, [X8 + 0x20]
	0x037E1CCC CBZ X9, 0x37E2038
	0x037E1CD0 LDR W10, [X9 + 0x18]
	0x037E1CD4 CMP W10, W20
	0x037E1CD8 B.LS 0x37E203C
	0x037E1CDC MOVZ W10, 0xB8
	0x037E1CE0 SMADDL X9, X20, X10, X9
	0x037E1CE4 ADD X9, X9, 0xC8
	0x037E1CE8 B 0x37E1D90
	0x037E1CEC LDR X9, [X8 + 0x20]
	0x037E1CF0 CBZ X9, 0x37E2038
	0x037E1CF4 LDR W10, [X9 + 0x18]
	0x037E1CF8 CMP W10, W20
	0x037E1CFC B.LS 0x37E203C
	0x037E1D00 ADRP X10, 0x968000
	0x037E1D04 LDR X0, [X8 + 0x28]

ISIL:
	001 Move [X31-64], X29
	002 Move [X31-56], X30
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Subtract X31, X31, 464
	010 Move X20, 0xC01000
	011 Move X23, 0x968000
	012 Move W8, [X20+743]
	013 Move X23, [X23+2376]
	014 Move X21, X2
	015 Move W19, W1
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {34}
	020 Move X0, 0x968000
	021 Move X0, [X0+2760]
	022 Call 0x1C17CF4
	023 Move X0, 0x968000
	024 Move X0, [X0+2376]
	025 Call 0x1C17CF4
	026 Move X0, 0x964000
	027 Move X0, [X0+3920]
	028 Call 0x1C17CF4
	029 Move X0, 0x93B000
	030 Move X0, [X0+3560]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X20+743], W8
	034 Move X8, [X21+16]
	035 Move V0, [X21]
	036 Add X0, X31, 336
	037 Add X1, X31, 312
	038 Move X2, X31
	039 Move [X31+320], X31
	040 Move [X31+328], X31
	041 Move [X31+352], X8
	042 Move [X31+21], V0
	043 Move [X31+312], X31
	044 Call InputControlScheme.op_Equality, X0, X1
	045 Move X8, [X23]
	046 Move X8, [X8+184]
	047 Move X20, [X8+32]
	048 Compare X20, 0
	049 JumpIfEqual {253}
	050 Move W22, W0
	051 Move TEMP, X0
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfNotEqual {62}
	055 Move W8, [X20+24]
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move W8, 184
	058 NotImplemented "Instruction MOVI not yet implemented."
	059 NotImplemented "Instruction SMADDL not yet implemented."
	060 Move [X8+104], V0
	061 Move [X8+88], V0
	062 Move X9, 0x93B000
	063 Move V0, [X21]
	064 Move X8, [X21+16]
	065 Move X9, [X9+3560]
	066 NotImplemented "Instruction MOVI not yet implemented."
	067 Add X0, X31, 368
	068 Add X1, X31, 96
	069 Move X2, [X9]
	070 Move [X31+368], V1
	071 Move [X31+376], V1
	072 Move [X31+304], X8
	073 Move [X31+18], V0
	074 Move [X31+6], V0
	075 Move [X31+112], X8
	076 Call Nullable`1<InputControlScheme>..ctor, X0, X1
	077 Move W8, [X20+24]
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Move V1, [X31+368]
	080 Move V0, [X31+384]
	081 Move W8, 184
	082 NotImplemented "Instruction SMADDL not yet implemented."
	083 Move [X8+104], V0
	084 Move [X8+88], V1
	085 Move X8, [X23]
	086 Move X8, [X8+184]
	087 Move X8, [X8+32]
	088 Compare X8, 0
	089 JumpIfEqual {253}
	090 Move W9, [X8+24]
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Move X24, W19
	093 Move W9, 184
	094 NotImplemented "Instruction MADD not yet implemented."
	095 Move X20, [X8+80]
	096 Compare X20, 0
	097 JumpIfEqual {243}
	098 Move TEMP, X22
	099 And TEMP, TEMP, 1
	100 Compare TEMP, 1
	101 JumpIfNotEqual {126}
	102 NotImplemented "Instruction MOVI not yet implemented."
	103 Move [X31+256], V0
	104 Move [X31+264], V0
	105 Move [X31+224], V0
	106 Move [X31+232], V0
	107 Move [X31+192], V0
	108 Move [X31+200], V0
	109 Move X10, 0x968000
	110 Move X8, [X20]
	111 Move X10, [X10+2760]
	112 NotImplemented "Instruction LDRH not yet implemented."
	113 Move X1, [X10]
	114 Compare X9, 0
	115 JumpIfEqual {122}
	116 Move X10, [X8+176]
	117 Add X10, X10, 8
	118 NotImplemented "Instruction LDUR not yet implemented."
	119 NotImplemented "Instruction CMP not yet implemented."
	120 Subtract X9, X9, 1
	121 Add X10, X10, 16
	122 Move W2, 1
	123 Move X0, X20
	124 Call 0x1C5D788
	125 Move X21, X0
	126 Move X9, 0x964000
	127 Move X8, [X21+8]
	128 Move X9, [X9+3920]
	129 NotImplemented "Instruction MOVI not yet implemented."
	130 Add X0, X31, 96
	131 Add X1, X31, 368
	132 Move X2, [X9]
	133 Move [X31+160], V0
	134 Move [X31+168], V0
	135 Move [X31+128], V0
	136 Move [X31+136], V0
	137 Move [X31+96], V0
	138 Move [X31+104], V0
	139 Move [X31+368], V0
	140 Move [X31+376], V0
	141 Move [X31+416], V0
	142 Move [X31+424], V0
	143 Move [X31+400], X31
	144 Move [X31+408], X8
	145 Move [X31+448], X31
	146 Call Nullable`1<InputBinding>..ctor, X0, X1
	147 Move X8, 0x968000
	148 Move X8, [X8+2760]
	149 Add X0, X31, 0
	150 Add X1, X31, 96
	151 Move W2, 96
	152 Move X21, [X8]
	153 Call 0x3EB2AC0
	154 Move X8, [X20]
	155 NotImplemented "Instruction LDRH not yet implemented."
	156 Compare X9, 0
	157 JumpIfEqual {164}
	158 Move X10, [X8+176]
	159 Add X10, X10, 8
	160 NotImplemented "Instruction LDUR not yet implemented."
	161 NotImplemented "Instruction CMP not yet implemented."
	162 Subtract X9, X9, 1
	163 Add X10, X10, 16
	164 Move W2, 1
	165 Move X0, X20
	166 Move X1, X21
	167 Call 0x1C5D788
	168 Move X21, X0
	169 Move W9, [X10]
	170 Add W9, W9, 1
	171 Add X8, X8, W9
	172 Add X21, X8, 312
	173 Move X22, [X21]
	174 Add X0, X31, 368
	175 Add X1, X31, 192
	176 Move W2, 96
	177 Call 0x3EB2AC0
	178 Move X2, [X21+8]
	179 Add X1, X31, 368
	180 Move X0, X20
	181 NotImplemented "Instruction BLR not yet implemented."
	182 Move X8, [X23]
	183 Move X8, [X8+184]
	184 Move X8, [X8+32]
	185 Compare X8, 0
	186 JumpIfEqual {253}
	187 Move W9, [X8+24]
	188 NotImplemented "Instruction CMP not yet implemented."
	189 Move W9, 184
	190 NotImplemented "Instruction MADD not yet implemented."
	191 Add X0, X8, 120
	192 Move X1, X31
	193 Call MatchResult.Dispose, X0
	194 Move X8, [X23]
	195 Move X8, [X8+184]
	196 Move X8, [X8+32]
	197 Compare X8, 0
	198 JumpIfEqual {253}
	199 Move W9, [X8+24]
	200 NotImplemented "Instruction CMP not yet implemented."
	201 Move W9, 184
	202 NotImplemented "Instruction MOVI not yet implemented."
	203 NotImplemented "Instruction MADD not yet implemented."
	204 Move [X8+184], V0
	205 Move [X8+168], V0
	206 Move [X8+152], V0
	207 Move [X8+136], V0
	208 Move [X8+120], V0
	209 Move W9, [X10]
	210 Add W9, W9, 1
	211 Add X8, X8, W9
	212 Add X21, X8, 312
	213 Move X22, [X21]
	214 Add X0, X31, 368
	215 Add X1, X31, 0
	216 Move W2, 96
	217 Call 0x3EB2AC0
	218 Move X2, [X21+8]
	219 Add X1, X31, 368
	220 Move X0, X20
	221 NotImplemented "Instruction BLR not yet implemented."
	222 Move W0, W19
	223 Move W1, W31
	224 Call InputUser.UpdateControlSchemeMatch, X0, X1
	225 Move X8, [X23]
	226 Move X8, [X8+184]
	227 Move X8, [X8+32]
	228 Compare X8, 0
	229 JumpIfEqual {253}
	230 Move W9, [X8+24]
	231 NotImplemented "Instruction CMP not yet implemented."
	232 Move W9, 184
	233 NotImplemented "Instruction MADD not yet implemented."
	234 Add X0, X8, 120
	235 Move X1, X31
	236 Call MatchResult.get_isSuccessfulMatch, X0
	237 Move TEMP, X0
	238 And TEMP, TEMP, 1
	239 Compare TEMP, 1
	240 JumpIfNotEqual {243}
	241 Move W0, W19
	242 Call InputUser.RemoveLostDevicesForUser, X0
	243 Add X31, X31, 464
	244 Move X20, [X31+48]
	245 Move X19, [X31+56]
	246 Move X22, [X31+32]
	247 Move X21, [X31+40]
	248 Move X24, [X31+16]
	249 Move X23, [X31+24]
	250 Move X29, [X31+64]
	251 Move X30, [X31+72]
	252 Return 
	253 Call 0x1C17F20
	254 Call 0x1C17F28

Method: System.Void UnpairDevice(UnityEngine.InputSystem.InputDevice device)

Disassembly:
	0x037D950C LDR X20, [X19 + 0x30]
	0x037D9510 CBNZ X20, 0x37D9530
	0x037D9514 ADRP X8, 0x96F000
	0x037D9518 LDR X8, [X8 + 0xC78]
	0x037D951C LDR X0, [X8]
	0x037D9520 BL 0x1C16F10
	0x037D9524 MOV X20, X0
	0x037D9528 BL 0x37D9540
	0x037D952C STR X20, [X19 + 0x30]
	0x037D9530 MOV X0, X20
	0x037D9534 LDP X20, X19, [X31 + 0x10]
	0x037D9538 LDR X30, [X31], #0x20
	0x037D953C RET
	0x037D9540 STP X30, X21, [X31 - 0x20]!
	0x037D9544 STP X20, X19, [X31 + 0x10]
	0x037D9548 ADRP X20, 0xC08000
	0x037D954C ADRP X21, 0x96F000
	0x037D9550 LDRB W8, [X20 + 0x29A]
	0x037D9554 LDR X21, [X21 + 0x988]
	0x037D9558 MOV X19, X0
	0x037D955C TBNZ X8, 0x0, 0x37D9574
	0x037D9560 ADRP X0, 0x96F000
	0x037D9564 LDR X0, [X0 + 0x988]
	0x037D9568 BL 0x1C16CF4
	0x037D956C MOVZ W8, 0x1
	0x037D9570 STRB W8, [X20 + 0x29A]
	0x037D9574 LDR X1, [X21]
	0x037D9578 MOV X0, X19
	0x037D957C LDP X20, X19, [X31 + 0x10]
	0x037D9580 LDP X30, X21, [X31], #0x20
	0x037D9584 B 0x2729B5C
	0x037D9588 STR X30, [X31 - 0x20]!
	0x037D958C STP X20, X19, [X31 + 0x10]
	0x037D9590 ADRP X20, 0xC08000
	0x037D9594 LDRB W8, [X20 + 0x286]
	0x037D9598 MOV X19, X0
	0x037D959C TBNZ X8, 0x0, 0x37D95B4
	0x037D95A0 ADRP X0, 0x96F000
	0x037D95A4 LDR X0, [X0 + 0xC80]
	0x037D95A8 BL 0x1C16CF4
	0x037D95AC MOVZ W8, 0x1
	0x037D95B0 STRB W8, [X20 + 0x286]
	0x037D95B4 LDR X20, [X19 + 0x38]
	0x037D95B8 CBNZ X20, 0x37D95D8
	0x037D95BC ADRP X8, 0x96F000
	0x037D95C0 LDR X8, [X8 + 0xC80]
	0x037D95C4 LDR X0, [X8]
	0x037D95C8 BL 0x1C16F10
	0x037D95CC MOV X20, X0
	0x037D95D0 BL 0x37D95E8
	0x037D95D4 STR X20, [X19 + 0x38]
	0x037D95D8 MOV X0, X20
	0x037D95DC LDP X20, X19, [X31 + 0x10]
	0x037D95E0 LDR X30, [X31], #0x20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xC09000
	007 Move W8, [X21+744]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x96C000
	015 Move X0, [X0+4040]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+744], W8
	019 Compare X19, 0
	020 JumpIfEqual {51}
	021 Move X22, 0x96C000
	022 Move X22, [X22+4040]
	023 Move X0, X20
	024 Call InputUser.get_index, X0
	025 Move W21, W0
	026 Move X0, X20
	027 Call InputUser.get_pairedDevices, X0
	028 Move X3, [X22]
	029 Move X2, X19
	030 Call 0x223D504, X0, X1
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfNotEqual {45}
	035 Move W0, W21
	036 Move X1, X19
	037 Move X20, [X31+32]
	038 Move X19, [X31+40]
	039 Move X22, [X31+16]
	040 Move X21, [X31+24]
	041 Move W2, W31
	042 Move X30, [X31+48]
	043 Call InputUser.RemoveDeviceFromUser, X0, X1, X2
	044 Return 
	045 Move X20, [X31+32]
	046 Move X19, [X31+40]
	047 Move X22, [X31+16]
	048 Move X21, [X31+24]
	049 Move X30, [X31+48]
	050 Return 
	051 Move X0, 0x920000
	052 Move X0, [X0+1320]
	053 Call 0x1C17D08
	054 Call 0x1C17F10
	055 Move X19, X0
	056 Move X0, 0x943000
	057 Move X0, [X0+3360]
	058 Call 0x1C17D08
	059 Move X1, X0
	060 Move X0, X19
	061 Move X2, X31
	062 Call ArgumentNullException..ctor, X0, X1
	063 Move X0, 0x970000
	064 Move X0, [X0+3072]
	065 Call 0x1C17D08
	066 Move X1, X0
	067 Move X0, X19
	068 Call 0x1C17DEC

Method: System.Void UnpairDevices()

Disassembly:
	0x037D6694 ADD W8, W21, 0x1
	0x037D6698 B 0x37D66A0
	0x037D669C MOV W8, W20
	0x037D66A0 STR W8, [X19 + 0x90]
	0x037D66A4 LDP X20, X19, [X31 + 0x30]
	0x037D66A8 LDP X22, X21, [X31 + 0x20]
	0x037D66AC LDP X24, X23, [X31 + 0x10]
	0x037D66B0 LDP X30, X25, [X31], #0x40
	0x037D66B4 RET
	0x037D66B8 BL 0x1C16F20
	0x037D66BC BL 0x1C16F28
	0x037D66C0 STR X30, [X31 - 0x50]!
	0x037D66C4 STP X26, X25, [X31 + 0x10]
	0x037D66C8 STP X24, X23, [X31 + 0x20]
	0x037D66CC STP X22, X21, [X31 + 0x30]
	0x037D66D0 STP X20, X19, [X31 + 0x40]
	0x037D66D4 ADRP X20, 0xC0B000
	0x037D66D8 LDRB W8, [X20 + 0x26E]
	0x037D66DC MOV X19, X0
	0x037D66E0 TBNZ X8, 0x0, 0x37D674C
	0x037D66E4 ADRP X0, 0x972000
	0x037D66E8 LDR X0, [X0 + 0xAD0]
	0x037D66EC BL 0x1C16CF4
	0x037D66F0 ADRP X0, 0x972000
	0x037D66F4 LDR X0, [X0 + 0xAD8]
	0x037D66F8 BL 0x1C16CF4
	0x037D66FC ADRP X0, 0x972000
	0x037D6700 LDR X0, [X0 + 0xAE0]
	0x037D6704 BL 0x1C16CF4
	0x037D6708 ADRP X0, 0x91D000
	0x037D670C LDR X0, [X0 + 0xE00]
	0x037D6710 BL 0x1C16CF4
	0x037D6714 ADRP X0, 0x91D000
	0x037D6718 LDR X0, [X0 + 0x598]
	0x037D671C BL 0x1C16CF4
	0x037D6720 ADRP X0, 0x972000
	0x037D6724 LDR X0, [X0 + 0xAE8]
	0x037D6728 BL 0x1C16CF4
	0x037D672C ADRP X0, 0x972000
	0x037D6730 LDR X0, [X0 + 0x8F8]
	0x037D6734 BL 0x1C16CF4
	0x037D6738 ADRP X0, 0x96F000
	0x037D673C LDR X0, [X0 + 0x9E8]
	0x037D6740 BL 0x1C16CF4
	0x037D6744 MOVZ W8, 0x1
	0x037D6748 STRB W8, [X20 + 0x26E]
	0x037D674C ADRP X23, 0x91D000
	0x037D6750 LDR X23, [X23 + 0xE00]
	0x037D6754 MOVZ W8, 0x1
	0x037D6758 MOV X0, X31
	0x037D675C STRB W8, [X19 + 0x95]
	0x037D6760 BL 0x373BF80
	0x037D6764 MOV X20, X0
	0x037D6768 MOV X0, X19
	0x037D676C BL 0x37D64C4
	0x037D6770 MOV X0, X19
	0x037D6774 BL 0x37D1B18
	0x037D6778 MOV X0, X19
	0x037D677C BL 0x37D22DC
	0x037D6780 MOV X0, X19
	0x037D6784 BL 0x37D2A9C
	0x037D6788 MOV X21, X31
	0x037D678C CBZ X20, 0x37D67E8
	0x037D6790 LDR X8, [X20]
	0x037D6794 LDR X1, [X23]
	0x037D6798 LDRH W9, [X8 + 0x12E]
	0x037D679C CBZ X9, 0x37D67C0
	0x037D67A0 LDR X10, [X8 + 0xB0]
	0x037D67A4 ADD X10, X10, 0x8
	0x037D67A8 LDUR X11, [X10 - 0x8]
	0x037D67AC CMP X11, X1
	0x037D67B0 B.EQ 0x37D67D0
	0x037D67B4 SUBS X9, X9, 0x1
	0x037D67B8 ADD X10, X10, 0x10
	0x037D67BC B.NE 0x37D67A8
	0x037D67C0 MOV X0, X20
	0x037D67C4 MOV W2, W31
	0x037D67C8 BL 0x1C5C788
	0x037D67CC B 0x37D67DC
	0x037D67D0 LDRSW X9, [X10]
	0x037D67D4 ADD X8, X8, X9, 0x4, LSL
	0x037D67D8 ADD X0, X8, 0x138
	0x037D67DC LDP X8, X1, [X0]
	0x037D67E0 MOV X0, X20
	0x037D67E4 BLR X8
	0x037D67E8 CBNZ X21, 0x37D6ACC
	0x037D67EC ADRP X22, 0x972000
	0x037D67F0 LDR X22, [X22 + 0x8F8]
	0x037D67F4 LDR X8, [X22]
	0x037D67F8 LDR W9, [X8 + 0xE0]
	0x037D67FC CBNZ W9, 0x37D680C
	0x037D6800 MOV X0, X8
	0x037D6804 BL 0x1C16DFC
	0x037D6808 LDR X8, [X22]
	0x037D680C LDR X1, [X8 + 0xB8]
	0x037D6810 LDR W9, [X1 + 0x2C]
	0x037D6814 TBZ X9, 0x1F, 0x37D6820
	0x037D6818 LDR W9, [X19 + 0x90]
	0x037D681C STR W9, [X19 + 0x70]
	0x037D6820 ADRP X20, 0x972000
	0x037D6824 LDR W9, [X8 + 0xE0]
	0x037D6828 LDR X20, [X20 + 0xAD8]
	0x037D682C CBNZ W9, 0x37D6840
	0x037D6830 MOV X0, X8
	0x037D6834 BL 0x1C16DFC
	0x037D6838 LDR X8, [X22]
	0x037D683C LDR X1, [X8 + 0xB8]
	0x037D6840 LDR X4, [X20]
	0x037D6844 ADRP X23, 0x972000
	0x037D6848 LDR X23, [X23 + 0xAE0]
	0x037D684C ADD X0, X1, 0x8
	0x037D6850 MOVZ W3, 0xA
	0x037D6854 MOV X2, X19
	0x037D6858 BL 0x2174728
	0x037D685C MOV X24, X31
	0x037D6860 MOVZ W25, 0x1
	0x037D6864 LDR X0, [X22]
	0x037D6868 LDR W8, [X0 + 0xE0]
	0x037D686C CBNZ W8, 0x37D6878
	0x037D6870 BL 0x1C16DFC
	0x037D6874 LDR X0, [X22]
	0x037D6878 LDR X8, [X0 + 0xB8]
	0x037D687C LDR W9, [X8]
	0x037D6880 CMP W25, W9
	0x037D6884 B.GE 0x37D6934
	0x037D6888 MOV X20, X24
	0x037D688C LDR W8, [X0 + 0xE0]
	0x037D6890 CBNZ W8, 0x37D689C
	0x037D6894 BL 0x1C16DFC
	0x037D6898 LDR X0, [X22]
	0x037D689C LDR X8, [X0 + 0xB8]
	0x037D68A0 LDR X9, [X8 + 0x8]
	0x037D68A4 CBZ X9, 0x37D6AC4
	0x037D68A8 LDR W11, [X9 + 0x18]
	0x037D68AC CMP W20, W11
	0x037D68B0 B.CS 0x37D6AC8
	0x037D68B4 ADD X10, X9, X20, 0x3, LSL
	0x037D68B8 LDR X10, [X10 + 0x20]
	0x037D68BC CBZ X10, 0x37D6AC4
	0x037D68C0 ADD X21, X20, 0x1
	0x037D68C4 CMP W21, W11
	0x037D68C8 B.CS 0x37D6AC8
	0x037D68CC ADD X26, X20, 0x1
	0x037D68D0 ADD X9, X9, W26, 0x3, UXTW
	0x037D68D4 LDR X9, [X9 + 0x20]
	0x037D68D8 CBZ X9, 0x37D6AC4
	0x037D68DC LDR W10, [X10 + 0x90]
	0x037D68E0 LDR W9, [X9 + 0x90]
	0x037D68E4 CMP W10, W9
	0x037D68E8 B.LE 0x37D6928
	0x037D68EC LDR W9, [X0 + 0xE0]
	0x037D68F0 CBNZ W9, 0x37D6900
	0x037D68F4 BL 0x1C16DFC
	0x037D68F8 LDR X8, [X22]
	0x037D68FC LDR X8, [X8 + 0xB8]
	0x037D6900 LDR X0, [X8 + 0x8]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X19, 0xC0C000
	009 Move W8, [X19+745]
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0x91E000
	016 Move X0, [X0+3584]
	017 Call 0x1C17CF4
	018 Move X0, 0x973000
	019 Move X0, [X0+2376]
	020 Call 0x1C17CF4
	021 Move X0, 0x970000
	022 Move X0, [X0+2488]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X19+745], W8
	026 Move X22, 0x973000
	027 Move X23, 0x91E000
	028 Move X22, [X22+2376]
	029 Move X23, [X23+3584]
	030 Move X0, X21
	031 Call InputUser.get_index, X0
	032 Move W20, W0
	033 Call InputUser.RemoveLostDevicesForUser, X0
	034 Move X0, X31
	035 Call InputActionRebindingExtensions.DeferBindingResolution
	036 Move X19, X0
	037 Move X20, W20
	038 Move W24, 184
	039 Move X8, [X22]
	040 Move X9, [X8+184]
	041 Move X8, [X9+32]
	042 Compare X8, 0
	043 JumpIfEqual {119}
	044 Move W10, [X8+24]
	045 NotImplemented "Instruction CMP not yet implemented."
	046 NotImplemented "Instruction MADD not yet implemented."
	047 Move W10, [X10+72]
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X9, [X9+40]
	050 Compare X9, 0
	051 JumpIfEqual {122}
	052 NotImplemented "Instruction MADD not yet implemented."
	053 Move W8, [X8+76]
	054 Move W11, [X9+24]
	055 Add W8, W10, W8
	056 Subtract W8, W8, 1
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Add X8, X9, W8
	059 Move X1, [X8+32]
	060 Move X0, X21
	061 Call InputUser.UnpairDevice, X0, X1
	062 Move X21, X31
	063 Compare X19, 0
	064 JumpIfEqual {86}
	065 Move X8, [X19]
	066 Move X1, [X23]
	067 NotImplemented "Instruction LDRH not yet implemented."
	068 Compare X9, 0
	069 JumpIfEqual {76}
	070 Move X10, [X8+176]
	071 Add X10, X10, 8
	072 NotImplemented "Instruction LDUR not yet implemented."
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Subtract X9, X9, 1
	075 Add X10, X10, 16
	076 Move X0, X19
	077 Move W2, W31
	078 Call 0x1C5D788
	079 NotImplemented "Instruction LDRSW not yet implemented."
	080 Add X8, X8, X9
	081 Add X0, X8, 312
	082 Move X8, [X0]
	083 Move X1, [X0+8]
	084 Move X0, X19
	085 NotImplemented "Instruction BLR not yet implemented."
	086 Compare X21, 0
	087 JumpIfNotEqual {123}
	088 Move X8, [X22]
	089 Move X8, [X8+184]
	090 Move X8, [X8+32]
	091 Compare X8, 0
	092 JumpIfEqual {125}
	093 Move W9, [X8+24]
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Move W9, 184
	096 NotImplemented "Instruction MADD not yet implemented."
	097 Move W8, [X8+88]
	098 Compare W8, 0
	099 JumpIfEqual {111}
	100 Move W0, W20
	101 Move X20, [X31+48]
	102 Move X19, [X31+56]
	103 Move X22, [X31+32]
	104 Move X21, [X31+40]
	105 Move X24, [X31+16]
	106 Move X23, [X31+24]
	107 Move W1, W31
	108 Move X30, [X31+64]
	109 Call InputUser.UpdateControlSchemeMatch, X0, X1
	110 Return 
	111 Move X20, [X31+48]
	112 Move X19, [X31+56]
	113 Move X22, [X31+32]
	114 Move X21, [X31+40]
	115 Move X24, [X31+16]
	116 Move X23, [X31+24]
	117 Move X30, [X31+64]
	118 Return 
	119 Call 0x1C17F20
	120 Call 0x1C17F28
	121 Call 0x1C17F28
	122 Call 0x1C17F20
	123 Move X0, X21
	124 Call 0x1C17F18
	125 Call 0x1C17F20
	126 Call 0x1C17F28
	127 NotImplemented "Instruction CMP not yet implemented."
	128 Call 0x3EB2AD0
	129 Move X21, [X0]
	130 Call 0x3EB2AE0
	131 Move X20, X0
	132 Move X21, X31
	133 Move X20, X0
	134 Compare X19, 0
	135 JumpIfEqual {157}
	136 Move X8, [X19]
	137 Move X1, [X23]
	138 NotImplemented "Instruction LDRH not yet implemented."
	139 Compare X9, 0
	140 JumpIfEqual {147}
	141 Move X10, [X8+176]
	142 Add X10, X10, 8
	143 NotImplemented "Instruction LDUR not yet implemented."
	144 NotImplemented "Instruction CMP not yet implemented."
	145 Subtract X9, X9, 1
	146 Add X10, X10, 16
	147 Move X0, X19
	148 Move W2, W31
	149 Call 0x1C5D788
	150 NotImplemented "Instruction LDRSW not yet implemented."
	151 Add X8, X8, X9
	152 Add X0, X8, 312
	153 Move X8, [X0]
	154 Move X1, [X0+8]
	155 Move X0, X19
	156 NotImplemented "Instruction BLR not yet implemented."
	157 Compare X21, 0
	158 JumpIfNotEqual {161}
	159 Move X0, X20
	160 Call 0x1D2D690
	161 Move X0, X21
	162 Call 0x1C17F18
	163 Call 0x1991590

Method: System.Void RemoveLostDevicesForUser(System.Int32 userIndex)

Disassembly:
	0x037E2A94 CMP W9, W20
	0x037E2A98 B.LS 0x37E2B1C
	0x037E2A9C SXTW X9, W20
	0x037E2AA0 MOVZ W11, 0xB8
	0x037E2AA4 MADD X10, X9, X11, X10
	0x037E2AA8 LDR W11, [X10 + 0xD0]
	0x037E2AAC ORR W11, W11, 0x2
	0x037E2AB0 STR W11, [X10 + 0xD0]
	0x037E2AB4 LDR X10, [X8 + 0x18]
	0x037E2AB8 CBZ X10, 0x37E2B18
	0x037E2ABC LDR W11, [X10 + 0x18]
	0x037E2AC0 CMP W11, W20
	0x037E2AC4 B.LS 0x37E2B1C
	0x037E2AC8 ADD X9, X10, X9, 0x2, LSL
	0x037E2ACC ADRP X10, 0x967000
	0x037E2AD0 LDR X10, [X10 + 0x198]
	0x037E2AD4 LDR W2, [X9 + 0x20]
	0x037E2AD8 ADD X0, X8, 0x38
	0x037E2ADC MOV X1, X19
	0x037E2AE0 LDR X3, [X10]
	0x037E2AE4 BL 0x2DF6C30
	0x037E2AE8 BL 0x37E3340
	0x037E2AEC MOVZ W1, 0x8
	0x037E2AF0 MOV W0, W20
	0x037E2AF4 MOV X2, X19
	0x037E2AF8 BL 0x37E0F80
	0x037E2AFC MOVZ W0, 0x1
	0x037E2B00 B 0x37E2B08
	0x037E2B04 MOV W0, W31
	0x037E2B08 LDP X20, X19, [X31 + 0x20]
	0x037E2B0C LDP X22, X21, [X31 + 0x10]
	0x037E2B10 LDR X30, [X31], #0x30
	0x037E2B14 RET
	0x037E2B18 BL 0x1C16F20
	0x037E2B1C BL 0x1C16F28
	0x037E2B20 SUB X31, X31, 0xA0
	0x037E2B24 STR X30, [X31 + 0x50]
	0x037E2B28 STP X26, X25, [X31 + 0x60]
	0x037E2B2C STP X24, X23, [X31 + 0x70]
	0x037E2B30 STP X22, X21, [X31 + 0x80]
	0x037E2B34 STP X20, X19, [X31 + 0x90]
	0x037E2B38 ADRP X23, 0xBFF000
	0x037E2B3C ADRP X25, 0x966000
	0x037E2B40 LDRB W8, [X23 + 0x2F9]
	0x037E2B44 LDR X25, [X25 + 0x948]
	0x037E2B48 MOV W21, W3
	0x037E2B4C MOV W22, W2
	0x037E2B50 MOV X19, X1
	0x037E2B54 MOV W20, W0
	0x037E2B58 TBNZ X8, 0x0, 0x37E2BAC
	0x037E2B5C ADRP X0, 0x966000
	0x037E2B60 LDR X0, [X0 + 0x1E8]
	0x037E2B64 BL 0x1C16CF4
	0x037E2B68 ADRP X0, 0x967000
	0x037E2B6C LDR X0, [X0 + 0x1A0]
	0x037E2B70 BL 0x1C16CF4
	0x037E2B74 ADRP X0, 0x966000
	0x037E2B78 LDR X0, [X0 + 0xAC8]
	0x037E2B7C BL 0x1C16CF4
	0x037E2B80 ADRP X0, 0x966000
	0x037E2B84 LDR X0, [X0 + 0x948]
	0x037E2B88 BL 0x1C16CF4
	0x037E2B8C ADRP X0, 0x963000
	0x037E2B90 LDR X0, [X0 + 0x48]
	0x037E2B94 BL 0x1C16CF4
	0x037E2B98 ADRP X0, 0x963000
	0x037E2B9C LDR X0, [X0 + 0x9B8]
	0x037E2BA0 BL 0x1C16CF4
	0x037E2BA4 MOVZ W8, 0x1
	0x037E2BA8 STRB W8, [X23 + 0x2F9]
	0x037E2BAC LDR X8, [X25]
	0x037E2BB0 LDR X8, [X8 + 0xB8]
	0x037E2BB4 LDR X9, [X8 + 0x20]
	0x037E2BB8 CBZ X9, 0x37E2F28
	0x037E2BBC LDR W10, [X9 + 0x18]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X19, 0xC00000
	008 Move X22, 0x967000
	009 Move W8, [X19+746]
	010 Move X22, [X22+2376]
	011 Move W21, W0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x968000
	017 Move X0, [X0+288]
	018 Call 0x1C17CF4
	019 Move X0, 0x967000
	020 Move X0, [X0+2376]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X19+746], W8
	024 Move X8, [X22]
	025 Move X8, [X8+184]
	026 Move X9, [X8+32]
	027 Compare X9, 0
	028 JumpIfEqual {79}
	029 Move W10, [X9+24]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X23, W21
	032 Move W10, 184
	033 NotImplemented "Instruction MADD not yet implemented."
	034 Move W19, [X10+200]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move X10, 0x968000
	037 Move X10, [X10+288]
	038 Move W11, 184
	039 NotImplemented "Instruction MADD not yet implemented."
	040 Move W20, [X9+204]
	041 Move X4, [X10]
	042 Add X0, X8, 48
	043 Add X1, X8, 16
	044 Move W2, W20
	045 Move W3, W19
	046 Call 0x2179984, X0, X1, X2, X3
	047 Move X8, [X22]
	048 Move X8, [X8+184]
	049 Move X12, [X8+32]
	050 Compare X12, 0
	051 JumpIfEqual {79}
	052 Move X11, [X12+24]
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move W9, 184
	055 NotImplemented "Instruction MADD not yet implemented."
	056 Move [X9+200], X31
	057 Move W9, [X8+8]
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move X10, X31
	060 And X11, X11, 0
	061 Add X12, X12, 204
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move W13, [X12]
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Subtract W9, W13, W19
	066 Move [X12], W9
	067 Move W9, [X8+8]
	068 Add X10, X10, 1
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Add X12, X12, 184
	071 Move X20, [X31+32]
	072 Move X19, [X31+40]
	073 Move X22, [X31+16]
	074 Move X21, [X31+24]
	075 Move X30, [X31+48]
	076 Move X23, [X31+56]
	077 Return 
	078 Call 0x1C17F28
	079 Call 0x1C17F20

Method: System.Void UnpairDevicesAndRemoveUser()

Disassembly:
	0x037D7204 LDRB W8, [X20 + 0x2DE]
	0x037D7208 MOV X19, X0
	0x037D720C TBNZ X8, 0x0, 0x37D723C
	0x037D7210 ADRP X0, 0x971000
	0x037D7214 LDR X0, [X0 + 0xB70]
	0x037D7218 BL 0x1C16CF4
	0x037D721C ADRP X0, 0x971000
	0x037D7220 LDR X0, [X0 + 0xB58]
	0x037D7224 BL 0x1C16CF4

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call InputUser.UnpairDevices, X0
	005 Move X0, X19
	006 Call InputUser.get_index, X0
	007 Call InputUser.RemoveUser, X0
	008 Move [X19], W31
	009 Move X30, [X31+16]
	010 Move X19, [X31+24]
	011 Return 

Method: UnityEngine.InputSystem.InputControlList`1<UnityEngine.InputSystem.InputDevice> GetUnpairedInputDevices()

Disassembly:
	0x037D6C9C MOV X20, X0
	0x037D6CA0 LDR X2, [X8]
	0x037D6CA4 BL 0x2A769B4
	0x037D6CA8 STR X20, [X19 + 0x208]
	0x037D6CAC ADRP X8, 0x945000
	0x037D6CB0 LDR X8, [X8 + 0x270]
	0x037D6CB4 LDR X0, [X8]
	0x037D6CB8 LDR W8, [X0 + 0xE0]
	0x037D6CBC CBNZ W8, 0x37D6CC4
	0x037D6CC0 BL 0x1C16DFC
	0x037D6CC4 MOV X0, X20
	0x037D6CC8 MOV X1, X31
	0x037D6CCC BL 0x376DBD4
	0x037D6CD0 MOVZ W8, 0x1
	0x037D6CD4 STRB W8, [X19 + 0x210]
	0x037D6CD8 LDP X20, X19, [X31 + 0x10]
	0x037D6CDC LDR X30, [X31], #0x20
	0x037D6CE0 RET
	0x037D6CE4 STR X30, [X31 - 0x20]!
	0x037D6CE8 STP X20, X19, [X31 + 0x10]
	0x037D6CEC ADRP X20, 0xC0B000
	0x037D6CF0 LDRB W8, [X20 + 0x276]
	0x037D6CF4 MOV X19, X0
	0x037D6CF8 TBNZ X8, 0x0, 0x37D6D34
	0x037D6CFC ADRP X0, 0x972000
	0x037D6D00 LDR X0, [X0 + 0xB08]
	0x037D6D04 BL 0x1C16CF4
	0x037D6D08 ADRP X0, 0x972000
	0x037D6D0C LDR X0, [X0 + 0xB10]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+40], X21
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move X21, 0xC0C000
	007 Move X20, 0x973000
	008 Move X19, X8
	009 Move W8, [X21+747]
	010 Move X20, [X20+2752]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x973000
	016 Move X0, [X0+2752]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+747], W8
	020 Move X3, [X20]
	021 NotImplemented "Instruction MOVI not yet implemented."
	022 Add X0, X31, 0
	023 Move W1, 2
	024 Move W2, W31
	025 Move [X31], V0
	026 Move [X31+8], V0
	027 Call 0x2DFB684, X0, X1, X2
	028 Add X0, X31, 0
	029 Call InputUser.GetUnpairedInputDevices, X0
	030 Move V0, [X31]
	031 Move V1, [X31+16]
	032 Move X30, [X31+32]
	033 Move X21, [X31+40]
	034 Move [X19], V0
	035 Move [X19+8], V1
	036 Move X20, [X31+48]
	037 Move X19, [X31+56]
	038 Add X31, X31, 64
	039 Return X0

Method: System.Int32 GetUnpairedInputDevices(ref UnityEngine.InputSystem.InputControlList`1<UnityEngine.InputSystem.InputDevice> list)

Disassembly:
	0x037E32F8 ADRP X0, 0x910000
	0x037E32FC LDR X0, [X0 + 0x5B0]
	0x037E3300 BL 0x1C16D08
	0x037E3304 BL 0x1C16F10
	0x037E3308 MOV X19, X0
	0x037E330C ADRP X0, 0x966000
	0x037E3310 LDR X0, [X0 + 0x1B0]
	0x037E3314 BL 0x1C16D08
	0x037E3318 MOV X1, X0
	0x037E331C MOV X0, X19
	0x037E3320 MOV X2, X31
	0x037E3324 BL 0x337DF1C
	0x037E3328 ADRP X0, 0x966000
	0x037E332C LDR X0, [X0 + 0x1B8]
	0x037E3330 BL 0x1C16D08
	0x037E3334 MOV X1, X0
	0x037E3338 MOV X0, X19
	0x037E333C BL 0x1C16DEC
	0x037E3340 STR X30, [X31 - 0x20]!
	0x037E3344 STP X20, X19, [X31 + 0x10]
	0x037E3348 ADRP X19, 0xBFE000
	0x037E334C ADRP X20, 0x965000
	0x037E3350 LDRB W8, [X19 + 0x306]
	0x037E3354 LDR X20, [X20 + 0x948]
	0x037E3358 TBNZ X8, 0x0, 0x37E3394
	0x037E335C ADRP X0, 0x964000
	0x037E3360 LDR X0, [X0 + 0xB88]
	0x037E3364 BL 0x1C16CF4
	0x037E3368 ADRP X0, 0x938000
	0x037E336C LDR X0, [X0 + 0x270]
	0x037E3370 BL 0x1C16CF4
	0x037E3374 ADRP X0, 0x966000
	0x037E3378 LDR X0, [X0 + 0x1C0]
	0x037E337C BL 0x1C16CF4
	0x037E3380 ADRP X0, 0x965000
	0x037E3384 LDR X0, [X0 + 0x948]
	0x037E3388 BL 0x1C16CF4
	0x037E338C MOVZ W8, 0x1
	0x037E3390 STRB W8, [X19 + 0x306]
	0x037E3394 LDR X8, [X20]
	0x037E3398 LDR X8, [X8 + 0xB8]
	0x037E339C LDRB W9, [X8 + 0x161]
	0x037E33A0 CBNZ W9, 0x37E3418
	0x037E33A4 LDR X19, [X8 + 0x150]
	0x037E33A8 CBNZ X19, 0x37E33E4
	0x037E33AC ADRP X8, 0x964000
	0x037E33B0 LDR X8, [X8 + 0xB88]
	0x037E33B4 LDR X0, [X8]
	0x037E33B8 BL 0x1C16F10
	0x037E33BC ADRP X8, 0x966000
	0x037E33C0 LDR X8, [X8 + 0x1C0]
	0x037E33C4 MOV X1, X31
	0x037E33C8 MOV X3, X31
	0x037E33CC MOV X19, X0
	0x037E33D0 LDR X2, [X8]
	0x037E33D4 BL 0x2A769B4
	0x037E33D8 LDR X8, [X20]
	0x037E33DC LDR X8, [X8 + 0xB8]
	0x037E33E0 STR X19, [X8 + 0x150]
	0x037E33E4 ADRP X8, 0x938000
	0x037E33E8 LDR X8, [X8 + 0x270]
	0x037E33EC LDR X0, [X8]
	0x037E33F0 LDR W8, [X0 + 0xE0]
	0x037E33F4 CBNZ W8, 0x37E33FC
	0x037E33F8 BL 0x1C16DFC
	0x037E33FC MOV X0, X19
	0x037E3400 MOV X1, X31
	0x037E3404 BL 0x376DBD4
	0x037E3408 LDR X8, [X20]
	0x037E340C MOVZ W9, 0x1
	0x037E3410 LDR X8, [X8 + 0xB8]
	0x037E3414 STRB W9, [X8 + 0x161]
	0x037E3418 LDP X20, X19, [X31 + 0x10]
	0x037E341C LDR X30, [X31], #0x20
	0x037E3420 RET
	0x037E3424 LDR W8, [X0]
	0x037E3428 CMP W8, W1
	0x037E342C CSET W0, EQ
	0x037E3430 RET
	0x037E3434 STP X30, X21, [X31 - 0x20]!
	0x037E3438 STP X20, X19, [X31 + 0x10]
	0x037E343C ADRP X21, 0xBFE000
	0x037E3440 LDRB W8, [X21 + 0x2F2]
	0x037E3444 MOV X20, X1
	0x037E3448 MOV X19, X0
	0x037E344C TBNZ X8, 0x0, 0x37E3464
	0x037E3450 ADRP X0, 0x965000
	0x037E3454 LDR X0, [X0 + 0x948]
	0x037E3458 BL 0x1C16CF4
	0x037E345C MOVZ W8, 0x1
	0x037E3460 STRB W8, [X21 + 0x2F2]
	0x037E3464 CBZ X20, 0x37E3480
	0x037E3468 ADRP X8, 0x965000
	0x037E346C LDR X8, [X8 + 0x948]
	0x037E3470 LDR X9, [X20]
	0x037E3474 LDR X8, [X8]
	0x037E3478 CMP X9, X8
	0x037E347C B.EQ 0x37E3488
	0x037E3480 MOV W0, W31
	0x037E3484 B 0x37E34A0
	0x037E3488 MOV X0, X20
	0x037E348C BL 0x1C16E08
	0x037E3490 LDR W8, [X0]
	0x037E3494 LDR W9, [X19]
	0x037E3498 CMP W9, W8
	0x037E349C CSET W0, EQ
	0x037E34A0 LDP X20, X19, [X31 + 0x10]
	0x037E34A4 LDP X30, X21, [X31], #0x20
	0x037E34A8 RET
	0x037E34AC LDR W0, [X0]
	0x037E34B0 RET
	0x037E34B4 STR X30, [X31 - 0x20]!
	0x037E34B8 STP X20, X19, [X31 + 0x10]
	0x037E34BC ADRP X19, 0xBFE000
	0x037E34C0 ADRP X20, 0x965000
	0x037E34C4 LDRB W8, [X19 + 0x307]
	0x037E34C8 LDR X20, [X20 + 0x948]
	0x037E34CC TBNZ X8, 0x0, 0x37E34F0
	0x037E34D0 ADRP X0, 0x938000
	0x037E34D4 LDR X0, [X0 + 0x270]
	0x037E34D8 BL 0x1C16CF4
	0x037E34DC ADRP X0, 0x965000
	0x037E34E0 LDR X0, [X0 + 0x948]
	0x037E34E4 BL 0x1C16CF4
	0x037E34E8 MOVZ W8, 0x1
	0x037E34EC STRB W8, [X19 + 0x307]
	0x037E34F0 LDR X8, [X20]
	0x037E34F4 LDR X8, [X8 + 0xB8]
	0x037E34F8 LDRB W9, [X8 + 0x161]
	0x037E34FC CBZ W9, 0x37E3534
	0x037E3500 ADRP X9, 0x938000
	0x037E3504 LDR X9, [X9 + 0x270]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+48], X30
	003 Move [X31+56], X27
	004 Move [X31+64], X26
	005 Move [X31+72], X25
	006 Move [X31+80], X24
	007 Move [X31+88], X23
	008 Move [X31+96], X22
	009 Move [X31+104], X21
	010 Move [X31+112], X20
	011 Move [X31+120], X19
	012 Move X21, 0xBFF000
	013 Move X20, 0x939000
	014 Move W8, [X21+748]
	015 Move X20, [X20+624]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {50}
	021 Move X0, 0x967000
	022 Move X0, [X0+336]
	023 Call 0x1C17CF4
	024 Move X0, 0x939000
	025 Move X0, [X0+3856]
	026 Call 0x1C17CF4
	027 Move X0, 0x939000
	028 Move X0, [X0+3864]
	029 Call 0x1C17CF4
	030 Move X0, 0x939000
	031 Move X0, [X0+3872]
	032 Call 0x1C17CF4
	033 Move X0, 0x964000
	034 Move X0, [X0+1888]
	035 Call 0x1C17CF4
	036 Move X0, 0x964000
	037 Move X0, [X0+1896]
	038 Call 0x1C17CF4
	039 Move X0, 0x939000
	040 Move X0, [X0+624]
	041 Call 0x1C17CF4
	042 Move X0, 0x966000
	043 Move X0, [X0+2376]
	044 Call 0x1C17CF4
	045 Move X0, 0x939000
	046 Move X0, [X0+3888]
	047 Call 0x1C17CF4
	048 Move W8, 1
	049 Move [X21+748], W8
	050 Move X0, [X20]
	051 Move [X31+24], X31
	052 Move [X31+32], X31
	053 Move [X31+40], X31
	054 Move X20, 0x939000
	055 Move W8, [X0+224]
	056 Move W22, [X19]
	057 Move X20, [X20+3888]
	058 Compare W8, 0
	059 JumpIfNotEqual {61}
	060 Call 0x1C17DFC
	061 Move X23, 0x939000
	062 Move X24, 0x939000
	063 Move X25, 0x966000
	064 Move X26, 0x967000
	065 Move X27, 0x964000
	066 Move X21, 0x939000
	067 Move X23, [X23+3864]
	068 Move X24, [X24+3872]
	069 Move X25, [X25+2376]
	070 Move X26, [X26+336]
	071 Move X27, [X27+1888]
	072 Move X21, [X21+3856]
	073 Move X0, X31
	074 Call InputSystem.get_devices
	075 Move X9, [X20]
	076 Move [X31+8], X0
	077 Move [X31+16], X1
	078 Add X8, X31, 24
	079 Add X0, X31, 8
	080 Move X1, X9
	081 Call ReadOnlyArray`1<Object>.GetEnumerator, X0
	082 Move X1, [X23]
	083 Add X0, X31, 24
	084 Call Enumerator<Object>.MoveNext, X0
	085 Move TEMP, X0
	086 And TEMP, TEMP, 1
	087 Compare TEMP, 1
	088 JumpIfNotEqual {108}
	089 Move X1, [X24]
	090 Add X0, X31, 24
	091 Call Enumerator<Object>.get_Current, X0
	092 Move X8, [X25]
	093 Move X20, X0
	094 Move X3, [X26]
	095 Move X8, [X8+184]
	096 Move X0, [X8+40]
	097 Move W1, [X8+12]
	098 Move X2, X20
	099 Call 0x21770F0, X0, X1, X2
	100 Move TEMP, X0
	101 And TEMP, TEMP, 1
	102 Compare TEMP, 1
	103 JumpIfEqual {82}
	104 Move X2, [X27]
	105 Move X0, X19
	106 Move X1, X20
	107 Call 0x2DFBCEC, X0, X1
	108 Move X1, [X21]
	109 Add X0, X31, 24
	110 Call Enumerator<Object>.Dispose, X0
	111 Move W8, [X19]
	112 Move X20, [X31+112]
	113 Move X19, [X31+120]
	114 Move X24, [X31+80]
	115 Move X23, [X31+88]
	116 Move X26, [X31+64]
	117 Move X25, [X31+72]
	118 Subtract W0, W8, W22
	119 Move X22, [X31+96]
	120 Move X21, [X31+104]
	121 Move X30, [X31+48]
	122 Move X27, [X31+56]
	123 Add X31, X31, 128
	124 Return X0
	125 Move X23, X21
	126 Move X20, X0
	127 NotImplemented "Instruction CMP not yet implemented."
	128 Move X0, X20
	129 Call 0x3EB2AD0
	130 Move X21, [X0]
	131 Call 0x3EB2AE0
	132 Move X1, [X23]
	133 Add X0, X31, 24
	134 Call Enumerator<Object>.Dispose, X0
	135 Compare X21, 0
	136 JumpIfEqual {111}
	137 Move X0, X21
	138 Call 0x1C17F18
	139 Move X21, X31
	140 Move X20, X0
	141 Move X1, [X23]
	142 Add X0, X31, 24
	143 Call Enumerator<Object>.Dispose, X0
	144 Compare X21, 0
	145 JumpIfNotEqual {148}
	146 Move X0, X20
	147 Call 0x1D2D690
	148 Move X0, X21
	149 Call 0x1C17F18
	150 Call 0x1991590

Method: System.Nullable`1<UnityEngine.InputSystem.Users.InputUser> FindUserPairedToDevice(UnityEngine.InputSystem.InputDevice device)

Disassembly:
	0x037E3508 LDR X19, [X8 + 0x150]
	0x037E350C LDR X0, [X9]
	0x037E3510 LDR W9, [X0 + 0xE0]
	0x037E3514 CBNZ W9, 0x37E351C
	0x037E3518 BL 0x1C16DFC
	0x037E351C MOV X0, X19
	0x037E3520 MOV X1, X31
	0x037E3524 BL 0x376DD48
	0x037E3528 LDR X8, [X20]
	0x037E352C LDR X8, [X8 + 0xB8]
	0x037E3530 STRB W31, [X8 + 0x161]
	0x037E3534 LDP X20, X19, [X31 + 0x10]
	0x037E3538 LDR X30, [X31], #0x20
	0x037E353C RET
	0x037E3540 STP X30, X21, [X31 - 0x20]!
	0x037E3544 STP X20, X19, [X31 + 0x10]
	0x037E3548 ADRP X19, 0xBFE000
	0x037E354C ADRP X20, 0x965000
	0x037E3550 LDRB W8, [X19 + 0x305]
	0x037E3554 LDR X20, [X20 + 0x948]
	0x037E3558 TBNZ X8, 0x0, 0x37E3594
	0x037E355C ADRP X0, 0x963000
	0x037E3560 LDR X0, [X0 + 0x178]
	0x037E3564 BL 0x1C16CF4
	0x037E3568 ADRP X0, 0x938000
	0x037E356C LDR X0, [X0 + 0x270]
	0x037E3570 BL 0x1C16CF4
	0x037E3574 ADRP X0, 0x966000
	0x037E3578 LDR X0, [X0 + 0xA0]
	0x037E357C BL 0x1C16CF4
	0x037E3580 ADRP X0, 0x965000
	0x037E3584 LDR X0, [X0 + 0x948]
	0x037E3588 BL 0x1C16CF4
	0x037E358C MOVZ W8, 0x1
	0x037E3590 STRB W8, [X19 + 0x305]
	0x037E3594 LDR X8, [X20]
	0x037E3598 LDR X8, [X8 + 0xB8]
	0x037E359C LDRB W8, [X8 + 0x160]
	0x037E35A0 CBZ W8, 0x37E3600
	0x037E35A4 ADRP X8, 0x963000
	0x037E35A8 LDR X8, [X8 + 0x178]
	0x037E35AC ADRP X19, 0x966000
	0x037E35B0 ADRP X21, 0x938000
	0x037E35B4 LDR X0, [X8]
	0x037E35B8 LDR X19, [X19 + 0xA0]
	0x037E35BC LDR X21, [X21 + 0x270]
	0x037E35C0 BL 0x1C16F10
	0x037E35C4 LDR X2, [X19]
	0x037E35C8 MOV X1, X31
	0x037E35CC MOV X3, X31
	0x037E35D0 MOV X19, X0
	0x037E35D4 BL 0x2A769B4
	0x037E35D8 LDR X0, [X21]
	0x037E35DC LDR W8, [X0 + 0xE0]
	0x037E35E0 CBNZ W8, 0x37E35E8
	0x037E35E4 BL 0x1C16DFC
	0x037E35E8 MOV X0, X19
	0x037E35EC MOV X1, X31
	0x037E35F0 BL 0x3770980
	0x037E35F4 LDR X8, [X20]
	0x037E35F8 LDR X8, [X8 + 0xB8]
	0x037E35FC STRB W31, [X8 + 0x160]
	0x037E3600 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xBFF000
	005 Move W8, [X20+749]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0x966000
	012 Move X0, [X0+2376]
	013 Call 0x1C17CF4
	014 Move X0, 0x967000
	015 Move X0, [X0+344]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+749], W8
	019 Compare X19, 0
	020 JumpIfEqual {48}
	021 Move X0, X19
	022 Call InputUser.TryFindUserIndex, X0
	023 Add W31, W0, 1
	024 Move X8, 0x966000
	025 Move X8, [X8+2376]
	026 Move X8, [X8]
	027 Move X8, [X8+184]
	028 Move X8, [X8+24]
	029 Compare X8, 0
	030 JumpIfEqual {66}
	031 Move W9, [X8+24]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X9, 0x967000
	034 Move X9, [X9+344]
	035 Add X8, X8, W0
	036 Move W1, [X8+32]
	037 Add X0, X31, 8
	038 Move X2, [X9]
	039 Move [X31+8], X31
	040 Call Nullable`1<InputUser>..ctor, X0, X1
	041 Move X0, [X31+8]
	042 Move X0, X31
	043 Move [X31+8], X31
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X30, [X31+32]
	047 Return X0
	048 Move X0, 0x916000
	049 Move X0, [X0+1320]
	050 Call 0x1C17D08
	051 Call 0x1C17F10
	052 Move X19, X0
	053 Move X0, 0x939000
	054 Move X0, [X0+3360]
	055 Call 0x1C17D08
	056 Move X1, X0
	057 Move X0, X19
	058 Move X2, X31
	059 Call ArgumentNullException..ctor, X0, X1
	060 Move X0, 0x967000
	061 Move X0, [X0+352]
	062 Call 0x1C17D08
	063 Move X1, X0
	064 Move X0, X19
	065 Call 0x1C17DEC
	066 Call 0x1C17F20
	067 Call 0x1C17F28

Method: System.Nullable`1<UnityEngine.InputSystem.Users.InputUser> FindUserByAccount(UnityEngine.InputSystem.Users.InputUserAccountHandle platformUserAccountHandle)

Disassembly:
	0x037E36F0 ADD X0, X31, 0x8
	0x037E36F4 CMP X8, 0x0
	0x037E36F8 LDR X9, [X9]
	0x037E36FC MOV X3, X31
	0x037E3700 STP X31, X31, [X31 + 0x8]
	0x037E3704 CSEL X1, X9, X8, EQ
	0x037E3708 BL 0x37E4664
	0x037E370C ADRP X8, 0x966000
	0x037E3710 LDP X1, X2, [X31 + 0x8]
	0x037E3714 LDR X8, [X8 + 0x1D0]
	0x037E3718 ADD X0, X31, 0x18
	0x037E371C STP X31, X31, [X31 + 0x18]
	0x037E3720 STR X31, [X31 + 0x28]
	0x037E3724 LDR X3, [X8]
	0x037E3728 BL 0x2433A20
	0x037E372C LDR X8, [X31 + 0x28]
	0x037E3730 LDUR V0, [X31 + 0x18]
	0x037E3734 ADD X0, X31, 0x428
	0x037E3738 MOV X1, X31
	0x037E373C STR X8, [X21 + 0x10]
	0x037E3740 STR V0, [X21]
	0x037E3744 BL 0x37FF120
	0x037E3748 STR X0, [X20]
	0x037E374C ADD X0, X31, 0x428
	0x037E3750 MOV X1, X31
	0x037E3754 BL 0x37FF000
	0x037E3758 STR X0, [X19]
	0x037E375C LDR X8, [X24 + 0x28]
	0x037E3760 LDR X9, [X31 + 0x838]
	0x037E3764 CMP X8, X9
	0x037E3768 B.NE 0x37E378C
	0x037E376C MOV X0, X22
	0x037E3770 ADD X31, X31, 0x840
	0x037E3774 LDP X20, X19, [X31 + 0x30]
	0x037E3778 LDP X22, X21, [X31 + 0x20]
	0x037E377C LDP X24, X23, [X31 + 0x10]
	0x037E3780 LDP X29, X30, [X31], #0x40
	0x037E3784 RET
	0x037E3788 BL 0x1C16F20
	0x037E378C BL 0x3EB1B20
	0x037E3790 STR X30, [X31 - 0x30]!
	0x037E3794 STP X22, X21, [X31 + 0x10]
	0x037E3798 STP X20, X19, [X31 + 0x20]
	0x037E379C ADRP X21, 0xBFE000
	0x037E37A0 LDRB W8, [X21 + 0x2FF]
	0x037E37A4 MOV W20, W1
	0x037E37A8 MOV X19, X0
	0x037E37AC TBNZ X8, 0x0, 0x37E37C4
	0x037E37B0 ADRP X0, 0x965000
	0x037E37B4 LDR X0, [X0 + 0x948]
	0x037E37B8 BL 0x1C16CF4
	0x037E37BC MOVZ W8, 0x1
	0x037E37C0 STRB W8, [X21 + 0x2FF]
	0x037E37C4 CMP W20, 0x8
	0x037E37C8 B.NE 0x37E3840
	0x037E37CC ADRP X21, 0x965000
	0x037E37D0 LDR X21, [X21 + 0x948]
	0x037E37D4 LDR X8, [X21]
	0x037E37D8 LDR X8, [X8 + 0xB8]
	0x037E37DC LDR W9, [X8 + 0x8]
	0x037E37E0 CMP W9, 0x1
	0x037E37E4 B.LT 0x37E3840
	0x037E37E8 MOV X20, X31
	0x037E37EC MOVZ W22, 0x20
	0x037E37F0 LDR X8, [X8 + 0x18]
	0x037E37F4 CBZ X8, 0x37E3850
	0x037E37F8 LDR W9, [X8 + 0x18]
	0x037E37FC CMP X20, X9
	0x037E3800 B.CS 0x37E3854
	0x037E3804 ADD X0, X8, X22
	0x037E3808 BL 0x37E02CC
	0x037E380C CMP X0, X19
	0x037E3810 B.NE 0x37E3824
	0x037E3814 MOVZ W1, 0xC
	0x037E3818 MOV W0, W20
	0x037E381C MOV X2, X31
	0x037E3820 BL 0x37E0F80
	0x037E3824 LDR X8, [X21]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xBFF000
	007 Move W8, [X21+750]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x966000
	015 Move X0, [X0+2376]
	016 Call 0x1C17CF4
	017 Move X0, 0x967000
	018 Move X0, [X0+344]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+750], W8
	022 Move X0, X20
	023 Move X1, X19
	024 Move X2, X31
	025 Move X3, X31
	026 Move X4, X31
	027 Call InputUserAccountHandle.op_Equality, X0, X1
	028 Move TEMP, X0
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {62}
	032 Move X0, X20
	033 Move X1, X19
	034 Call InputUser.TryFindUserIndex, X0
	035 Add W31, W0, 1
	036 Move X8, 0x966000
	037 Move X8, [X8+2376]
	038 Move X8, [X8]
	039 Move X8, [X8+184]
	040 Move X8, [X8+24]
	041 Compare X8, 0
	042 JumpIfEqual {85}
	043 Move W9, [X8+24]
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move X9, 0x967000
	046 Move X9, [X9+344]
	047 Add X8, X8, W0
	048 Move W1, [X8+32]
	049 Add X0, X31, 8
	050 Move X2, [X9]
	051 Move [X31+8], X31
	052 Call Nullable`1<InputUser>..ctor, X0, X1
	053 Move X0, [X31+8]
	054 Move X0, X31
	055 Move [X31+8], X31
	056 Move X20, [X31+32]
	057 Move X19, [X31+40]
	058 Move X30, [X31+16]
	059 Move X21, [X31+24]
	060 Add X31, X31, 48
	061 Return X0
	062 Move X0, 0x919000
	063 Move X0, [X0+1400]
	064 Call 0x1C17D08
	065 Call 0x1C17F10
	066 Move X19, X0
	067 Move X0, 0x967000
	068 Move X0, [X0+360]
	069 Call 0x1C17D08
	070 Move X20, X0
	071 Move X0, 0x967000
	072 Move X0, [X0+368]
	073 Call 0x1C17D08
	074 Move X2, X0
	075 Move X0, X19
	076 Move X1, X20
	077 Move X3, X31
	078 Call ArgumentException..ctor, X0, X1, X2
	079 Move X0, 0x967000
	080 Move X0, [X0+376]
	081 Call 0x1C17D08
	082 Move X1, X0
	083 Move X0, X19
	084 Call 0x1C17DEC
	085 Call 0x1C17F20
	086 Call 0x1C17F28

Method: UnityEngine.InputSystem.Users.InputUser CreateUserWithoutPairedDevices()

Disassembly:
	0x037D7228 ADRP X0, 0x971000
	0x037D722C LDR X0, [X0 + 0x948]
	0x037D7230 BL 0x1C16CF4
	0x037D7234 MOVZ W8, 0x1
	0x037D7238 STRB W8, [X20 + 0x2DE]
	0x037D723C CBZ X19, 0x37D72A0
	0x037D7240 ADRP X20, 0x971000
	0x037D7244 LDR X20, [X20 + 0x948]
	0x037D7248 ADRP X9, 0x971000
	0x037D724C ADRP X21, 0x971000
	0x037D7250 MOV X1, X19
	0x037D7254 LDR X8, [X20]
	0x037D7258 LDR X9, [X9 + 0xB70]
	0x037D725C LDR X8, [X8 + 0xB8]
	0x037D7260 LDR X2, [X9]
	0x037D7264 LDR X21, [X21 + 0xB58]
	0x037D7268 ADD X0, X8, 0xA8
	0x037D726C BL 0x28F1650
	0x037D7270 LDR X8, [X20]
	0x037D7274 LDR X1, [X21]
	0x037D7278 LDR X8, [X8 + 0xB8]
	0x037D727C ADD X0, X8, 0xA8
	0x037D7280 BL 0x28F140C
	0x037D7284 CBZ W0, 0x37D7294
	0x037D7288 LDP X20, X19, [X31 + 0x10]
	0x037D728C LDP X30, X21, [X31], #0x20
	0x037D7290 RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xC0B000
	005 Move X19, 0x972000
	006 Move W8, [X20+751]
	007 Move X19, [X19+2376]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x972000
	013 Move X0, [X0+2376]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+751], W8
	017 Call InputUser.AddUser
	018 Move X8, [X19]
	019 Move X8, [X8+184]
	020 Move X8, [X8+24]
	021 Compare X8, 0
	022 JumpIfEqual {31}
	023 Move W9, [X8+24]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Add X8, X8, W0
	026 Move W0, [X8+32]
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Return X0
	031 Call 0x1C17F20
	032 Call 0x1C17F28

Method: UnityEngine.InputSystem.Users.InputUser PerformPairingWithDevice(UnityEngine.InputSystem.InputDevice device, UnityEngine.InputSystem.Users.InputUser user = null, UnityEngine.InputSystem.Users.InputUserPairingOptions options = 0)

Disassembly:
	0x037D6904 LDR X3, [X23]
	0x037D6908 MOV W1, W21
	0x037D690C MOV W2, W20
	0x037D6910 BL 0x217C63C
	0x037D6914 CMP X26, 0x2
	0x037D6918 B.LT 0x37D6928
	0x037D691C LDR X0, [X22]
	0x037D6920 SUB X20, X20, 0x1
	0x037D6924 B 0x37D688C
	0x037D6928 ADD W25, W25, 0x1
	0x037D692C ADD X24, X24, 0x1
	0x037D6930 B 0x37D6864
	0x037D6934 LDR W10, [X0 + 0xE0]
	0x037D6938 CBNZ W10, 0x37D694C
	0x037D693C BL 0x1C16DFC
	0x037D6940 LDR X0, [X22]
	0x037D6944 LDR X8, [X0 + 0xB8]
	0x037D6948 LDR W9, [X8]
	0x037D694C CMP W9, 0x1
	0x037D6950 B.NE 0x37D69D8
	0x037D6954 LDR W9, [X0 + 0xE0]
	0x037D6958 CBNZ W9, 0x37D6968
	0x037D695C BL 0x1C16DFC
	0x037D6960 LDR X0, [X22]
	0x037D6964 LDR X8, [X0 + 0xB8]
	0x037D6968 LDR X8, [X8 + 0x10]
	0x037D696C CBNZ X8, 0x37D69B8
	0x037D6970 ADRP X8, 0x972000
	0x037D6974 LDR X8, [X8 + 0xAD0]
	0x037D6978 LDR X0, [X8]
	0x037D697C BL 0x1C16F10
	0x037D6980 ADRP X8, 0x972000
	0x037D6984 LDR X8, [X8 + 0xAE8]
	0x037D6988 MOV X1, X31
	0x037D698C MOV X3, X31
	0x037D6990 MOV X20, X0
	0x037D6994 LDR X2, [X8]
	0x037D6998 BL 0x2A77E60
	0x037D699C LDR X0, [X22]
	0x037D69A0 LDR W8, [X0 + 0xE0]
	0x037D69A4 CBNZ W8, 0x37D69B0
	0x037D69A8 BL 0x1C16DFC
	0x037D69AC LDR X0, [X22]
	0x037D69B0 LDR X8, [X0 + 0xB8]
	0x037D69B4 STR X20, [X8 + 0x10]
	0x037D69B8 LDR W8, [X0 + 0xE0]
	0x037D69BC CBNZ W8, 0x37D69C8
	0x037D69C0 BL 0x1C16DFC
	0x037D69C4 LDR X0, [X22]
	0x037D69C8 LDR X8, [X0 + 0xB8]
	0x037D69CC LDR X0, [X8 + 0x10]
	0x037D69D0 BL 0x37D6B74
	0x037D69D4 LDR X0, [X22]
	0x037D69D8 LDR W8, [X0 + 0xE0]
	0x037D69DC CBNZ W8, 0x37D69E4
	0x037D69E0 BL 0x1C16DFC
	0x037D69E4 BL 0x37D3AF8
	0x037D69E8 TBZ X0, 0x0, 0x37D6A50
	0x037D69EC ADRP X8, 0x91D000
	0x037D69F0 LDR X8, [X8 + 0x598]
	0x037D69F4 LDR X20, [X19 + 0x20]
	0x037D69F8 LDR X0, [X8]
	0x037D69FC LDR W8, [X0 + 0xE0]
	0x037D6A00 CBNZ W8, 0x37D6A08
	0x037D6A04 BL 0x1C16DFC
	0x037D6A08 MOV X0, X20
	0x037D6A0C MOV X1, X31
	0x037D6A10 MOV X2, X31
	0x037D6A14 BL 0x3C354F8
	0x037D6A18 TBZ X0, 0x0, 0x37D6A40
	0x037D6A1C LDR X0, [X19 + 0x20]
	0x037D6A20 CBZ X0, 0x37D6AC4
	0x037D6A24 MOV X1, X31
	0x037D6A28 BL 0x37367C0
	0x037D6A2C UBFM X8, X1, 0x20, 0x3F
	0x037D6A30 CBNZ X8, 0x37D6A40
	0x037D6A34 MOV X0, X19
	0x037D6A38 BL 0x37D6C28
	0x037D6A3C B 0x37D6A50
	0x037D6A40 LDRB W8, [X19 + 0x58]
	0x037D6A44 CBNZ W8, 0x37D6A50
	0x037D6A48 MOV X0, X19
	0x037D6A4C BL 0x37D2D54
	0x037D6A50 MOV X0, X19
	0x037D6A54 BL 0x37D6CE4
	0x037D6A58 ADRP X20, 0xC0B000
	0x037D6A5C LDRB W8, [X20 + 0x30B]
	0x037D6A60 CBNZ W8, 0x37D6A78
	0x037D6A64 ADRP X0, 0x972000
	0x037D6A68 LDR X0, [X0 + 0x9F8]
	0x037D6A6C BL 0x1C16CF4
	0x037D6A70 MOVZ W8, 0x1
	0x037D6A74 STRB W8, [X20 + 0x30B]
	0x037D6A78 ADRP X8, 0x972000
	0x037D6A7C LDR X8, [X8 + 0x9F8]
	0x037D6A80 LDR X8, [X8]
	0x037D6A84 LDR X8, [X8 + 0xB8]
	0x037D6A88 LDR X0, [X8]
	0x037D6A8C CBZ X0, 0x37D6AAC
	0x037D6A90 MOV X1, X19
	0x037D6A94 LDP X20, X19, [X31 + 0x40]
	0x037D6A98 LDP X22, X21, [X31 + 0x30]
	0x037D6A9C LDP X24, X23, [X31 + 0x20]
	0x037D6AA0 LDP X26, X25, [X31 + 0x10]
	0x037D6AA4 LDR X30, [X31], #0x50
	0x037D6AA8 B 0x37D6E08
	0x037D6AAC LDP X20, X19, [X31 + 0x40]
	0x037D6AB0 LDP X22, X21, [X31 + 0x30]
	0x037D6AB4 LDP X24, X23, [X31 + 0x20]
	0x037D6AB8 LDP X26, X25, [X31 + 0x10]
	0x037D6ABC LDR X30, [X31], #0x50

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0xC0C000
	009 Move W8, [X22+752]
	010 Move W20, W2
	011 Move X21, X1
	012 Move X19, X0
	013 Move [X31+8], W21
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x973000
	019 Move X0, [X0+2376]
	020 Call 0x1C17CF4
	021 Move X0, 0x96F000
	022 Move X0, [X0+4040]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X22+752], W8
	026 Compare X19, 0
	027 JumpIfEqual {99}
	028 Compare W21, 0
	029 JumpIfEqual {64}
	030 Add X0, X31, 8
	031 Call InputUser.get_valid, X0
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {111}
	036 Move X23, 0x96F000
	037 Move X23, [X23+4040]
	038 Add X0, X31, 8
	039 Call InputUser.get_index, X0
	040 Move W22, W0
	041 Move TEMP, X20
	042 And TEMP, TEMP, 8
	043 Compare TEMP, 8
	044 JumpIfNotEqual {47}
	045 Add X0, X31, 8
	046 Call InputUser.UnpairDevices, X0
	047 Add X0, X31, 8
	048 Call InputUser.get_pairedDevices, X0
	049 Move X3, [X23]
	050 Move X2, X19
	051 Call 0x223D504, X0, X1
	052 Move TEMP, X0
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfNotEqual {66}
	056 Move TEMP, X20
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfNotEqual {90}
	060 Move W0, W22
	061 Move X1, X19
	062 Move W2, W20
	063 Call InputUser.InitiateUserAccountSelection, X0, X1, X2
	064 Call InputUser.AddUser
	065 Move W22, W0
	066 Move X21, 0x973000
	067 Move X21, [X21+2376]
	068 Move W0, W22
	069 Move X1, X19
	070 Move W2, W20
	071 Call InputUser.InitiateUserAccountSelection, X0, X1, X2
	072 Move TEMP, X0
	073 And TEMP, TEMP, 1
	074 Compare TEMP, 1
	075 JumpIfEqual {81}
	076 Move W0, W22
	077 Move X1, X19
	078 Move W2, W31
	079 Move W3, W31
	080 Call InputUser.AddDeviceToUser, X0, X1, X2, X3
	081 Move X8, [X21]
	082 Move X8, [X8+184]
	083 Move X8, [X8+24]
	084 Compare X8, 0
	085 JumpIfEqual {134}
	086 Move W9, [X8+24]
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Add X8, X8, W22
	089 Move W21, [X8+32]
	090 Move W0, W21
	091 Move X20, [X31+48]
	092 Move X19, [X31+56]
	093 Move X22, [X31+32]
	094 Move X21, [X31+40]
	095 Move X30, [X31+16]
	096 Move X23, [X31+24]
	097 Add X31, X31, 64
	098 Return X0
	099 Move X0, 0x923000
	100 Move X0, [X0+1320]
	101 Call 0x1C17D08
	102 Call 0x1C17F10
	103 Move X19, X0
	104 Move X0, 0x946000
	105 Move X0, [X0+3360]
	106 Call 0x1C17D08
	107 Move X1, X0
	108 Move X0, X19
	109 Move X2, X31
	110 Call ArgumentNullException..ctor, X0, X1
	111 Move X0, 0x926000
	112 Move X0, [X0+1400]
	113 Call 0x1C17D08
	114 Call 0x1C17F10
	115 Move X19, X0
	116 Move X0, 0x973000
	117 Move X0, [X0+2728]
	118 Call 0x1C17D08
	119 Move X20, X0
	120 Move X0, 0x973000
	121 Move X0, [X0+2736]
	122 Call 0x1C17D08
	123 Move X2, X0
	124 Move X0, X19
	125 Move X1, X20
	126 Move X3, X31
	127 Call ArgumentException..ctor, X0, X1, X2
	128 Move X0, 0x973000
	129 Move X0, [X0+2744]
	130 Call 0x1C17D08
	131 Move X1, X0
	132 Move X0, X19
	133 Call 0x1C17DEC
	134 Call 0x1C17F20
	135 Call 0x1C17F28

Method: System.Boolean InitiateUserAccountSelection(System.Int32 userIndex, UnityEngine.InputSystem.InputDevice device, UnityEngine.InputSystem.Users.InputUserPairingOptions options)

Disassembly:
	0x037E3A08 LDR W2, [X8 + 0xC]
	0x037E3A0C ADRP X8, 0x962000
	0x037E3A10 LDR X8, [X8 + 0x330]
	0x037E3A14 MOV X1, X19
	0x037E3A18 LDR X3, [X8]
	0x037E3A1C BL 0x2179B8C
	0x037E3A20 ADDS W31, W0, 0x1
	0x037E3A24 B.EQ 0x37E3C10
	0x037E3A28 ADRP X24, 0x910000
	0x037E3A2C ADRP X25, 0x966000
	0x037E3A30 LDR X24, [X24 + 0x5A8]
	0x037E3A34 LDR X25, [X25 + 0x128]
	0x037E3A38 MOV W20, W0
	0x037E3A3C MOVZ W23, 0xB8
	0x037E3A40 LDR X8, [X22]
	0x037E3A44 LDR X9, [X8 + 0xB8]
	0x037E3A48 LDRSW X8, [X9 + 0x8]
	0x037E3A4C CMP W8, 0x1
	0x037E3A50 B.LT 0x37E3A9C
	0x037E3A54 LDR X9, [X9 + 0x20]
	0x037E3A58 MOV X21, X31
	0x037E3A5C ADD X10, X9, 0x4C
	0x037E3A60 CBZ X9, 0x37E3CF0
	0x037E3A64 LDR W11, [X9 + 0x18]
	0x037E3A68 CMP X21, X11
	0x037E3A6C B.CS 0x37E3CEC
	0x037E3A70 LDR W11, [X10]
	0x037E3A74 CMP W11, W20
	0x037E3A78 B.GT 0x37E3A8C
	0x037E3A7C LDUR W12, [X10 - 0x4]
	0x037E3A80 ADD W11, W12, W11
	0x037E3A84 CMP W20, W11
	0x037E3A88 B.LT 0x37E3AA0
	0x037E3A8C ADD X21, X21, 0x1
	0x037E3A90 CMP X21, X8
	0x037E3A94 ADD X10, X10, 0xB8
	0x037E3A98 B.LT 0x37E3A60
	0x037E3A9C MOVN W21, 0x0
	0x037E3AA0 MOV W0, W21
	0x037E3AA4 MOV X1, X19
	0x037E3AA8 BL 0x37E2F30
	0x037E3AAC LDR X8, [X22]
	0x037E3AB0 LDR X8, [X8 + 0xB8]
	0x037E3AB4 LDR X8, [X8 + 0x20]
	0x037E3AB8 CBZ X8, 0x37E3CF0
	0x037E3ABC LDR W9, [X8 + 0x18]
	0x037E3AC0 CMP W21, W9
	0x037E3AC4 B.CS 0x37E3CEC
	0x037E3AC8 LDR X0, [X24]
	0x037E3ACC NOP
	0x037E3AD0 SMADDL X8, X21, X23, X8
	0x037E3AD4 LDR W21, [X8 + 0x48]
	0x037E3AD8 LDR W9, [X0 + 0xE0]
	0x037E3ADC CBNZ W9, 0x37E3AE4
	0x037E3AE0 BL 0x1C16DFC
	0x037E3AE4 MOVZ W0, 0x1
	0x037E3AE8 MOV W1, W21
	0x037E3AEC MOV X2, X31
	0x037E3AF0 BL 0x337EDF0
	0x037E3AF4 LDR X8, [X22]
	0x037E3AF8 LDR X4, [X25]
	0x037E3AFC ADD W2, W0, W20
	0x037E3B00 MOV X1, X19
	0x037E3B04 LDR X9, [X8 + 0xB8]
	0x037E3B08 LDR X8, [X9 + 0x28]
	0x037E3B0C LDR W9, [X9 + 0xC]
	0x037E3B10 MOV X0, X8
	0x037E3B14 SUB W3, W9, W2
	0x037E3B18 BL 0x2179C24
	0x037E3B1C MOV W20, W0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xBFF000
	007 Move W8, [X22+753]
	008 Move W21, W2
	009 Move X19, X1
	010 Move W20, W0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x967000
	016 Move X0, [X0+408]
	017 Call 0x1C17CF4
	018 Move X0, 0x966000
	019 Move X0, [X0+2376]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+753], W8
	023 Move TEMP, X21
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {40}
	027 Move W0, W20
	028 Move X1, X19
	029 Call InputUser.UpdatePlatformUserAccount, X0, X1
	030 Move X8, X0
	031 Move W0, W31
	032 Move TEMP, X21
	033 And TEMP, TEMP, 2
	034 Compare TEMP, 2
	035 JumpIfEqual {81}
	036 Move TEMP, X8
	037 And TEMP, TEMP, 2
	038 Compare TEMP, 2
	039 JumpIfEqual {81}
	040 Move X0, X19
	041 Call InputUser.InitiateUserAccountSelectionAtPlatformLevel, X0
	042 Move TEMP, X0
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfNotEqual {80}
	046 Move X8, 0x966000
	047 Move X8, [X8+2376]
	048 Move X8, [X8]
	049 Move X8, [X8+184]
	050 Move X10, [X8+32]
	051 Compare X10, 0
	052 JumpIfEqual {87}
	053 Move W9, [X10+24]
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move X9, W20
	056 Move W11, 184
	057 NotImplemented "Instruction MADD not yet implemented."
	058 Move W11, [X10+208]
	059 Or W11, W11, 2
	060 Move [X10+208], W11
	061 Move X10, [X8+24]
	062 Compare X10, 0
	063 JumpIfEqual {87}
	064 Move W11, [X10+24]
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Add X9, X10, X9
	067 Move X10, 0x967000
	068 Move X10, [X10+408]
	069 Move W2, [X9+32]
	070 Add X0, X8, 56
	071 Move X1, X19
	072 Move X3, [X10]
	073 Call InlinedArray`1<OngoingAccountSelection>.Append, X0, X1
	074 Call InputUser.HookIntoDeviceChange
	075 Move W1, 8
	076 Move W0, W20
	077 Move X2, X19
	078 Call InputUser.Notify, X0, X1, X2
	079 Move W0, 1
	080 Move W0, W31
	081 Move X20, [X31+32]
	082 Move X19, [X31+40]
	083 Move X22, [X31+16]
	084 Move X21, [X31+24]
	085 Move X30, [X31+48]
	086 Return X0
	087 Call 0x1C17F20
	088 Call 0x1C17F28

Method: System.Boolean Equals(UnityEngine.InputSystem.Users.InputUser other)

Disassembly:
	0x037E4424 TBNZ X8, 0x0, 0x37E443C
	0x037E4428 ADRP X0, 0x964000
	0x037E442C LDR X0, [X0 + 0x948]
	0x037E4430 BL 0x1C16CF4

ISIL:
	001 Move W8, [X0]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x037E4434 MOVZ W8, 0x1
	0x037E4438 STRB W8, [X20 + 0x30A]
	0x037E443C LDR X8, [X19]
	0x037E4440 LDR X0, [X8 + 0xB8]
	0x037E4444 LDR W8, [X0 + 0x8]
	0x037E4448 CMP W8, 0x1
	0x037E444C B.LT 0x37E4494
	0x037E4450 MOV X20, X31
	0x037E4454 MOVZ W21, 0x78
	0x037E4458 LDR X8, [X0 + 0x20]
	0x037E445C CBZ X8, 0x37E44BC
	0x037E4460 LDR W9, [X8 + 0x18]
	0x037E4464 CMP X20, X9
	0x037E4468 B.CS 0x37E44C0
	0x037E446C ADD X0, X8, X21
	0x037E4470 MOV X1, X31
	0x037E4474 BL 0x376BC1C
	0x037E4478 LDR X8, [X19]
	0x037E447C ADD X20, X20, 0x1
	0x037E4480 ADD X21, X21, 0xB8
	0x037E4484 LDR X0, [X8 + 0xB8]
	0x037E4488 LDRSW X8, [X0 + 0x8]
	0x037E448C CMP X20, X8
	0x037E4490 B.LT 0x37E4458
	0x037E4494 LDR W20, [X0 + 0x4]
	0x037E4498 MOVZ W2, 0x168
	0x037E449C MOV W1, W31
	0x037E44A0 BL 0x3EB1B10
	0x037E44A4 LDR X8, [X19]
	0x037E44A8 LDR X8, [X8 + 0xB8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xBFE000
	006 Move W8, [X21+754]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x965000
	014 Move X0, [X0+2376]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+754], W8
	018 Compare X20, 0
	019 JumpIfEqual {25}
	020 Move X8, 0x965000
	021 Move X8, [X8+2376]
	022 Move X9, [X20]
	023 Move X8, [X8]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move W0, W31
	026 Move X0, X20
	027 Call 0x1C17E08
	028 Move W8, [X0]
	029 Move W9, [X19]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 NotImplemented "Instruction CSET not yet implemented."
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Return X0

Method: System.Int32 GetHashCode()

Disassembly:
	0x037E44AC STR W20, [X8 + 0x4]
	0x037E44B0 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move W0, [X0]
	002 Return X0

Method: System.Boolean op_Equality(UnityEngine.InputSystem.Users.InputUser left, UnityEngine.InputSystem.Users.InputUser right)

Disassembly:
	0x037D8D0C MOV X0, X8
	0x037D8D10 BL 0x1C16DFC
	0x037D8D14 MOV X0, X20

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 NotImplemented "Instruction CSET not yet implemented."
	003 Return X0

Method: System.Boolean op_Inequality(UnityEngine.InputSystem.Users.InputUser left, UnityEngine.InputSystem.Users.InputUser right)

Disassembly:
	0x037E39FC B.LT 0x37E3930
	0x037E3A00 TBNZ X26, 0x0, 0x37E3C10
	0x037E3A04 LDR X0, [X8 + 0x28]

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 NotImplemented "Instruction CSET not yet implemented."
	003 Return X0

Method: System.Int32 AddUser()

Disassembly:
	0x037E390C B.LT 0x37E3A04
	0x037E3910 ADRP X23, 0x966000
	0x037E3914 ADRP X24, 0x966000
	0x037E3918 ADRP X25, 0x961000
	0x037E391C LDR X23, [X23 + 0x138]
	0x037E3920 LDR X24, [X24 + 0x130]
	0x037E3924 LDR X25, [X25 + 0xFC8]
	0x037E3928 MOV W26, W31
	0x037E392C MOV W20, W31
	0x037E3930 LDR X2, [X23]
	0x037E3934 MOV W1, W20
	0x037E3938 BL 0x2DF67E0
	0x037E393C CMP X0, X19
	0x037E3940 B.NE 0x37E39E4
	0x037E3944 LDR X8, [X22]
	0x037E3948 LDR X2, [X23]
	0x037E394C MOV W1, W20
	0x037E3950 LDR X8, [X8 + 0xB8]
	0x037E3954 ADD X0, X8, 0x38
	0x037E3958 BL 0x2DF67E0
	0x037E395C ADD X0, X31, 0x8
	0x037E3960 STR W1, [X31 + 0x8]
	0x037E3964 BL 0x37DFF1C
	0x037E3968 MOV X1, X19
	0x037E396C MOV W21, W0
	0x037E3970 BL 0x37E2F30
	0x037E3974 TBNZ X0, 0x2, 0x37E39E4
	0x037E3978 LDR X8, [X22]
	0x037E397C LDR X2, [X24]
	0x037E3980 MOV W1, W20
	0x037E3984 LDR X8, [X8 + 0xB8]
	0x037E3988 ADD X0, X8, 0x38
	0x037E398C BL 0x2DF7624
	0x037E3990 LDR X8, [X22]
	0x037E3994 LDR X8, [X8 + 0xB8]
	0x037E3998 LDR X8, [X8 + 0x18]
	0x037E399C CBZ X8, 0x37E3CF0
	0x037E39A0 LDR W9, [X8 + 0x18]
	0x037E39A4 CMP W21, W9
	0x037E39A8 B.CS 0x37E3CEC
	0x037E39AC ADD X8, X8, W21, 0x2, SXTW
	0x037E39B0 ADD X0, X8, 0x20
	0x037E39B4 SUB W20, W20, 0x1
	0x037E39B8 BL 0x37D38F8
	0x037E39BC LDR X3, [X25]
	0x037E39C0 MOV X2, X19
	0x037E39C4 BL 0x223C504
	0x037E39C8 TBNZ X0, 0x0, 0x37E39E0
	0x037E39CC MOV W0, W21
	0x037E39D0 MOV X1, X19
	0x037E39D4 MOV W2, W31
	0x037E39D8 MOV W3, W31
	0x037E39DC BL 0x37E2B20
	0x037E39E0 MOVZ W26, 0x1
	0x037E39E4 LDR X8, [X22]
	0x037E39E8 ADD W20, W20, 0x1
	0x037E39EC LDR X8, [X8 + 0xB8]
	0x037E39F0 MOV X0, X8
	0x037E39F4 LDR W9, [X0 + 0x38]!
	0x037E39F8 CMP W20, W9

ISIL:
	001 Subtract X31, X31, 240
	002 Move [X31+192], X30
	003 Move [X31+208], X22
	004 Move [X31+216], X21
	005 Move [X31+224], X20
	006 Move [X31+232], X19
	007 Move X22, 0xBFF000
	008 Move X20, 0x966000
	009 Move X21, 0x967000
	010 Move X19, 0x967000
	011 Move W8, [X22+755]
	012 Move X20, [X20+2376]
	013 Move X21, [X21+392]
	014 Move X19, [X19+400]
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {30}
	019 Move X0, 0x967000
	020 Move X0, [X0+392]
	021 Call 0x1C17CF4
	022 Move X0, 0x967000
	023 Move X0, [X0+400]
	024 Call 0x1C17CF4
	025 Move X0, 0x966000
	026 Move X0, [X0+2376]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X22+755], W8
	030 Move X8, [X20]
	031 Add X1, X31, 204
	032 Move W3, 10
	033 Move X8, [X8+184]
	034 Move W9, [X8+4]
	035 Move W10, [X8+8]
	036 Add X0, X8, 24
	037 Add W2, W9, 1
	038 Move [X8+4], W2
	039 Move X4, [X21]
	040 Move [X31+204], W10
	041 Call ArrayHelpers.AppendWithCapacity, X0, X1, X2, X3
	042 Move X8, [X20]
	043 Move X19, [X19]
	044 Add X0, X31, 8
	045 Move W2, 184
	046 Move X8, [X8+184]
	047 Move W1, W31
	048 Add X20, X8, 32
	049 Add X21, X8, 8
	050 Call 0x3EB2B10
	051 Add X2, X31, 8
	052 Move W3, 10
	053 Move X0, X20
	054 Move X1, X21
	055 Move X4, X19
	056 Call ArrayHelpers.AppendWithCapacity, X0, X1, X2, X3
	057 Move W1, W31
	058 Move X2, X31
	059 Move W19, W0
	060 Call InputUser.Notify, X0, X1, X2
	061 Move W0, W19
	062 Move X20, [X31+224]
	063 Move X19, [X31+232]
	064 Move X22, [X31+208]
	065 Move X21, [X31+216]
	066 Move X30, [X31+192]
	067 Add X31, X31, 240
	068 Return X0

Method: System.Void RemoveUser(System.Int32 userIndex)

Disassembly:
	0x037E3040 B.LS 0x37E3280
	0x037E3044 MOVZ W9, 0xB8
	0x037E3048 MADD X8, X22, X9, X8
	0x037E304C LDR X0, [X8 + 0x40]
	0x037E3050 LDR X1, [X31 + 0x18]
	0x037E3054 MOV X2, X31
	0x037E3058 BL 0x3226EF8
	0x037E305C TBZ X0, 0x0, 0x37E323C
	0x037E3060 LDR X8, [X23]
	0x037E3064 LDR X8, [X8 + 0xB8]
	0x037E3068 LDR X8, [X8 + 0x20]
	0x037E306C CBZ X8, 0x37E327C
	0x037E3070 LDUR V0, [X31 + 0x28]
	0x037E3074 LDR X9, [X31 + 0x38]
	0x037E3078 STR V0, [X31]
	0x037E307C STR X9, [X31 + 0x10]
	0x037E3080 LDR W9, [X8 + 0x18]
	0x037E3084 CMP W9, W19
	0x037E3088 B.LS 0x37E3280
	0x037E308C LDR X9, [X31 + 0x10]
	0x037E3090 LDR V0, [X31]
	0x037E3094 MOVZ W10, 0xB8
	0x037E3098 MADD X8, X22, X10, X8
	0x037E309C STR X9, [X8 + 0x30]
	0x037E30A0 STR V0, [X8 + 0x2]
	0x037E30A4 LDR X8, [X23]
	0x037E30A8 LDR X8, [X8 + 0xB8]
	0x037E30AC LDR X8, [X8 + 0x20]
	0x037E30B0 CBZ X8, 0x37E327C
	0x037E30B4 LDR W9, [X8 + 0x18]
	0x037E30B8 CMP W9, W19
	0x037E30BC B.LS 0x37E3280
	0x037E30C0 LDR X9, [X31 + 0x20]
	0x037E30C4 MOVZ W10, 0xB8
	0x037E30C8 MADD X8, X22, X10, X8
	0x037E30CC STR X9, [X8 + 0x38]
	0x037E30D0 LDR X8, [X23]
	0x037E30D4 LDR X8, [X8 + 0xB8]
	0x037E30D8 LDR X8, [X8 + 0x20]
	0x037E30DC CBZ X8, 0x37E327C
	0x037E30E0 LDR W9, [X8 + 0x18]
	0x037E30E4 CMP W9, W19
	0x037E30E8 B.LS 0x37E3280
	0x037E30EC LDR X9, [X31 + 0x18]
	0x037E30F0 MOVZ W10, 0xB8
	0x037E30F4 MADD X8, X22, X10, X8
	0x037E30F8 MOVZ W1, 0x6
	0x037E30FC B 0x37E320C
	0x037E3100 TBZ X10, 0x1, 0x37E3124
	0x037E3104 MOVZ W1, 0x9
	0x037E3108 MOV W0, W19
	0x037E310C MOV X2, X31
	0x037E3110 BL 0x37E0F80
	0x037E3114 LDR X8, [X23]
	0x037E3118 LDR X8, [X8 + 0xB8]
	0x037E311C LDR X8, [X8 + 0x20]
	0x037E3120 CBZ X8, 0x37E327C
	0x037E3124 LDR W9, [X8 + 0x18]
	0x037E3128 CMP W9, W19
	0x037E312C B.LS 0x37E3280
	0x037E3130 MOVZ W9, 0xB8
	0x037E3134 MADD X8, X22, X9, X8
	0x037E3138 STP X31, X31, [X8 + 0x20]
	0x037E313C STR X31, [X8 + 0x30]
	0x037E3140 LDR X8, [X23]
	0x037E3144 LDR X8, [X8 + 0xB8]
	0x037E3148 LDR X8, [X8 + 0x20]
	0x037E314C CBZ X8, 0x37E327C
	0x037E3150 LDR W9, [X8 + 0x18]
	0x037E3154 CMP W9, W19
	0x037E3158 B.LS 0x37E3280
	0x037E315C MOVZ W9, 0xB8
	0x037E3160 MADD X8, X22, X9, X8
	0x037E3164 STR X31, [X8 + 0x38]
	0x037E3168 LDR X8, [X23]
	0x037E316C LDR X8, [X8 + 0xB8]
	0x037E3170 LDR X8, [X8 + 0x20]
	0x037E3174 CBZ X8, 0x37E327C
	0x037E3178 LDR W9, [X8 + 0x18]
	0x037E317C CMP W9, W19
	0x037E3180 B.LS 0x37E3280
	0x037E3184 MOVZ W9, 0xB8
	0x037E3188 MADD X8, X22, X9, X8
	0x037E318C STR X31, [X8 + 0x40]
	0x037E3190 B 0x37E321C
	0x037E3194 TBNZ X20, 0x2, 0x37E321C
	0x037E3198 TBNZ X20, 0x4, 0x37E3234
	0x037E319C AND W8, W10, 0xFFFFFFFD
	0x037E31A0 STR W8, [X9]
	0x037E31A4 LDR X8, [X31 + 0x38]
	0x037E31A8 LDUR V0, [X31 + 0x28]
	0x037E31AC STR X8, [X11 + 0x10]
	0x037E31B0 STR V0, [X11]
	0x037E31B4 LDR X8, [X23]
	0x037E31B8 LDR X8, [X8 + 0xB8]
	0x037E31BC LDR X8, [X8 + 0x20]
	0x037E31C0 CBZ X8, 0x37E327C
	0x037E31C4 LDR W9, [X8 + 0x18]
	0x037E31C8 CMP W9, W19
	0x037E31CC B.LS 0x37E3280
	0x037E31D0 LDR X9, [X31 + 0x20]
	0x037E31D4 MOVZ W10, 0xB8
	0x037E31D8 MADD X8, X22, X10, X8
	0x037E31DC STR X9, [X8 + 0x38]
	0x037E31E0 LDR X8, [X23]
	0x037E31E4 LDR X8, [X8 + 0xB8]
	0x037E31E8 LDR X8, [X8 + 0x20]
	0x037E31EC CBZ X8, 0x37E327C
	0x037E31F0 LDR W9, [X8 + 0x18]
	0x037E31F4 CMP W9, W19
	0x037E31F8 B.LS 0x37E3280
	0x037E31FC LDR X9, [X31 + 0x18]
	0x037E3200 MOVZ W10, 0xB8
	0x037E3204 MADD X8, X22, X10, X8
	0x037E3208 MOVZ W1, 0xA
	0x037E320C STR X9, [X8 + 0x40]
	0x037E3210 MOV W0, W19
	0x037E3214 MOV X2, X21
	0x037E3218 BL 0x37E0F80
	0x037E321C MOV X0, X20
	0x037E3220 LDP X20, X19, [X31 + 0x60]
	0x037E3224 LDP X22, X21, [X31 + 0x50]
	0x037E3228 LDP X30, X23, [X31 + 0x40]
	0x037E322C ADD X31, X31, 0x70
	0x037E3230 RET
	0x037E3234 MOVZ W1, 0x9
	0x037E3238 B 0x37E3210
	0x037E323C LDR X8, [X23]
	0x037E3240 LDR X8, [X8 + 0xB8]
	0x037E3244 LDR X8, [X8 + 0x20]
	0x037E3248 CBZ X8, 0x37E327C
	0x037E324C LDR W9, [X8 + 0x18]
	0x037E3250 CMP W9, W19
	0x037E3254 B.LS 0x37E3280
	0x037E3258 MOVZ W9, 0xB8
	0x037E325C MADD X8, X22, X9, X8
	0x037E3260 LDR X0, [X8 + 0x38]
	0x037E3264 LDR X1, [X31 + 0x20]
	0x037E3268 MOV X2, X31
	0x037E326C BL 0x3226EF8
	0x037E3270 TBZ X0, 0x0, 0x37E321C
	0x037E3274 MOVZ W1, 0x7
	0x037E3278 B 0x37E3210
	0x037E327C BL 0x1C16F20
	0x037E3280 BL 0x1C16F28
	0x037E3284 STR X30, [X31 - 0x20]!
	0x037E3288 STP X20, X19, [X31 + 0x10]
	0x037E328C ADRP X20, 0xBFE000
	0x037E3290 LDRB W8, [X20 + 0x2FE]
	0x037E3294 MOV X19, X0
	0x037E3298 TBNZ X8, 0x0, 0x37E32B0
	0x037E329C ADRP X0, 0x966000
	0x037E32A0 LDR X0, [X0 + 0x1A8]
	0x037E32A4 BL 0x1C16CF4
	0x037E32A8 MOVZ W8, 0x1
	0x037E32AC STRB W8, [X20 + 0x2FE]
	0x037E32B0 MOV X0, X31
	0x037E32B4 BL 0x37FE870
	0x037E32B8 STR X0, [X31 + 0x8]
	0x037E32BC CBZ X19, 0x37E32F4
	0x037E32C0 ADRP X8, 0x966000
	0x037E32C4 LDR X8, [X8 + 0x1A8]
	0x037E32C8 ADD X1, X31, 0x8
	0x037E32CC MOV X0, X19
	0x037E32D0 LDR X2, [X8]
	0x037E32D4 BL 0x22050CC
	0x037E32D8 ADDS X31, X0, 0x2
	0x037E32DC B.EQ 0x37E32F8
	0x037E32E0 LDP X20, X19, [X31 + 0x10]
	0x037E32E4 CMP X0, 0x1
	0x037E32E8 CSET W0, EQ
	0x037E32EC LDR X30, [X31], #0x20
	0x037E32F0 RET
	0x037E32F4 BL 0x1C16F20

ISIL:
	001 Subtract X31, X31, 272
	002 Move [X31+208], X29
	003 Move [X31+216], X30
	004 Move [X31+224], X24
	005 Move [X31+232], X23
	006 Move [X31+240], X22
	007 Move [X31+248], X21
	008 Move [X31+256], X20
	009 Move [X31+264], X19
	010 Move X20, 0xBFF000
	011 Move X22, 0x966000
	012 Move W8, [X20+756]
	013 Move X22, [X22+2376]
	014 Move W19, W0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {42}
	019 Move X0, 0x967000
	020 Move X0, [X0+320]
	021 Call 0x1C17CF4
	022 Move X0, 0x967000
	023 Move X0, [X0+328]
	024 Call 0x1C17CF4
	025 Move X0, 0x966000
	026 Move X0, [X0+2760]
	027 Call 0x1C17CF4
	028 Move X0, 0x967000
	029 Move X0, [X0+304]
	030 Call 0x1C17CF4
	031 Move X0, 0x967000
	032 Move X0, [X0+312]
	033 Call 0x1C17CF4
	034 Move X0, 0x966000
	035 Move X0, [X0+2376]
	036 Call 0x1C17CF4
	037 Move X0, 0x963000
	038 Move X0, [X0+2488]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X20+756], W8
	042 Move X8, [X22]
	043 Move [X31+108], W31
	044 Move X8, [X8+184]
	045 Move X8, [X8+32]
	046 Compare X8, 0
	047 JumpIfEqual {187}
	048 Move W9, [X8+24]
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move X23, W19
	051 Move W9, 184
	052 NotImplemented "Instruction MADD not yet implemented."
	053 Move W9, [X9+88]
	054 Compare W9, 0
	055 JumpIfEqual {103}
	056 Move W9, 184
	057 NotImplemented "Instruction MADD not yet implemented."
	058 Move X20, [X9+80]
	059 Compare X20, 0
	060 JumpIfEqual {103}
	061 NotImplemented "Instruction MOVI not yet implemented."
	062 Move [X31+64], V0
	063 Move [X31+72], V0
	064 Move [X31+32], V0
	065 Move [X31+40], V0
	066 Move [X31], V0
	067 Move [X31+8], V0
	068 Move X10, 0x966000
	069 Move X8, [X20]
	070 Move X10, [X10+2760]
	071 NotImplemented "Instruction LDRH not yet implemented."
	072 Move X1, [X10]
	073 Compare X9, 0
	074 JumpIfEqual {81}
	075 Move X10, [X8+176]
	076 Add X10, X10, 8
	077 NotImplemented "Instruction LDUR not yet implemented."
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Subtract X9, X9, 1
	080 Add X10, X10, 16
	081 Move W2, 1
	082 Move X0, X20
	083 Call 0x1C5D788
	084 Move X21, X0
	085 Move W9, [X10]
	086 Add W9, W9, 1
	087 Add X8, X8, W9
	088 Add X21, X8, 312
	089 Move X24, [X21]
	090 Add X0, X31, 112
	091 Add X1, X31, 0
	092 Move W2, 96
	093 Call 0x3EB2AC0
	094 Move X2, [X21+8]
	095 Add X1, X31, 112
	096 Move X0, X20
	097 NotImplemented "Instruction BLR not yet implemented."
	098 Move X8, [X22]
	099 Move X8, [X8+184]
	100 Move X8, [X8+32]
	101 Compare X8, 0
	102 JumpIfEqual {187}
	103 Move W9, [X8+24]
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Move W9, 184
	106 NotImplemented "Instruction MADD not yet implemented."
	107 Add X0, X8, 120
	108 Move X1, X31
	109 Call MatchResult.Dispose, X0
	110 Move W0, W19
	111 Call InputUser.RemoveLostDevicesForUser, X0
	112 Move X8, [X22]
	113 Move X0, [X8+184]
	114 Add X0, X0, 56
	115 Move W8, [X0]
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Move X21, 0x967000
	118 Move X24, 0x967000
	119 Move X21, [X21+312]
	120 Move X24, [X24+304]
	121 Move W20, W31
	122 Move X2, [X21]
	123 Move W1, W20
	124 Call InlinedArray`1<OngoingAccountSelection>.get_Item, X0, X1
	125 Move X8, [X22]
	126 Move X0, [X8+184]
	127 Move X8, [X0+24]
	128 Compare X8, 0
	129 JumpIfEqual {187}
	130 Move W9, [X8+24]
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Add X8, X8, X23
	133 Move W8, [X8+32]
	134 NotImplemented "Instruction CMP not yet implemented."
	135 Move X2, [X24]
	136 Add X0, X0, 56
	137 Move W1, W20
	138 Call InlinedArray`1<OngoingAccountSelection>.RemoveAtByMovingTailWithCapacity, X0, X1
	139 Move X8, [X22]
	140 Subtract W20, W20, 1
	141 Move X0, [X8+184]
	142 Add X0, X0, 56
	143 Move W8, [X0]
	144 Add W20, W20, 1
	145 NotImplemented "Instruction CMP not yet implemented."
	146 Move X20, 0x967000
	147 Move X21, 0x967000
	148 Move X20, [X20+320]
	149 Move X21, [X21+328]
	150 Move W1, 1
	151 Move W0, W19
	152 Move X2, X31
	153 Call InputUser.Notify, X0, X1, X2
	154 Move X8, [X22]
	155 Move X3, [X20]
	156 Add X1, X31, 108
	157 Move W2, W19
	158 Move X8, [X8+184]
	159 Move W9, [X8+8]
	160 Move [X31+108], W9
	161 Move X0, [X8+24]
	162 Call ArrayHelpers.EraseAtWithCapacity, X0, X1, X2
	163 Move X8, [X22]
	164 Move X3, [X21]
	165 Move W2, W19
	166 Move X8, [X8+184]
	167 Move X0, [X8+32]
	168 Add X1, X8, 8
	169 Call ArrayHelpers.EraseAtWithCapacity, X0, X1, X2
	170 Move X8, [X22]
	171 Move X8, [X8+184]
	172 Move W8, [X8+8]
	173 Compare W8, 0
	174 JumpIfNotEqual {177}
	175 Call InputUser.UnhookFromDeviceChange
	176 Call InputUser.UnhookFromActionChange
	177 Move X20, [X31+256]
	178 Move X19, [X31+264]
	179 Move X22, [X31+240]
	180 Move X21, [X31+248]
	181 Move X24, [X31+224]
	182 Move X23, [X31+232]
	183 Move X29, [X31+208]
	184 Move X30, [X31+216]
	185 Add X31, X31, 272
	186 Return 
	187 Call 0x1C17F20
	188 Call 0x1C17F28

Method: System.Void Notify(System.Int32 userIndex, UnityEngine.InputSystem.Users.InputUserChange change, UnityEngine.InputSystem.InputDevice device)

Disassembly:
	0x037E1F80 SUBS X9, X9, 0x1
	0x037E1F84 ADD X10, X10, 0x10
	0x037E1F88 B.NE 0x37E1F74
	0x037E1F8C MOVZ W2, 0x3
	0x037E1F90 MOV X0, X21
	0x037E1F94 BL 0x1C5C788
	0x037E1F98 B 0x37E1FAC
	0x037E1F9C LDR W9, [X10]
	0x037E1FA0 ADD W9, W9, 0x3
	0x037E1FA4 ADD X8, X8, W9, 0x4, SXTW
	0x037E1FA8 ADD X0, X8, 0x138
	0x037E1FAC LDR V0, [X31 + 0x2]
	0x037E1FB0 LDR X8, [X31 + 0x30]
	0x037E1FB4 LDR X9, [X0]
	0x037E1FB8 ADD X1, X31, 0x0
	0x037E1FBC STR V0, [X31]
	0x037E1FC0 STR X8, [X31 + 0x10]
	0x037E1FC4 LDR X2, [X0 + 0x8]
	0x037E1FC8 MOV X0, X21
	0x037E1FCC BLR X9
	0x037E1FD0 LDR X8, [X23]
	0x037E1FD4 LDR X8, [X8 + 0xB8]
	0x037E1FD8 LDR X8, [X8 + 0x18]
	0x037E1FDC CBZ X8, 0x37E2038
	0x037E1FE0 LDR W9, [X8 + 0x18]
	0x037E1FE4 CMP W9, W20
	0x037E1FE8 B.LS 0x37E203C
	0x037E1FEC ADD X8, X8, X22, 0x2, LSL
	0x037E1FF0 ADD X0, X8, 0x20
	0x037E1FF4 ADD X8, X31, 0x0
	0x037E1FF8 BL 0x37D2C78
	0x037E1FFC LDRB W8, [X31]
	0x037E2000 CBZ W8, 0x37E2010
	0x037E2004 MOV W0, W20
	0x037E2008 MOV W1, W31
	0x037E200C BL 0x37E1288
	0x037E2010 MOVZ W1, 0x3
	0x037E2014 MOV W0, W20
	0x037E2018 MOV X2, X19
	0x037E201C BL 0x37E0F80
	0x037E2020 LDP X20, X19, [X31 + 0x80]
	0x037E2024 LDP X22, X21, [X31 + 0x70]
	0x037E2028 LDP X24, X23, [X31 + 0x60]
	0x037E202C LDP X30, X25, [X31 + 0x50]
	0x037E2030 ADD X31, X31, 0x90
	0x037E2034 RET
	0x037E2038 BL 0x1C16F20
	0x037E203C BL 0x1C16F28
	0x037E2040 SUB X31, X31, 0x110
	0x037E2044 STP X29, X30, [X31 + 0xD0]
	0x037E2048 STP X24, X23, [X31 + 0xE0]
	0x037E204C STP X22, X21, [X31 + 0xF0]
	0x037E2050 STP X20, X19, [X31 + 0x100]
	0x037E2054 ADRP X20, 0xBFF000
	0x037E2058 ADRP X22, 0x966000
	0x037E205C LDRB W8, [X20 + 0x2F4]
	0x037E2060 LDR X22, [X22 + 0x948]
	0x037E2064 MOV W19, W0
	0x037E2068 TBNZ X8, 0x0, 0x37E20C8
	0x037E206C ADRP X0, 0x967000
	0x037E2070 LDR X0, [X0 + 0x140]
	0x037E2074 BL 0x1C16CF4
	0x037E2078 ADRP X0, 0x967000
	0x037E207C LDR X0, [X0 + 0x148]
	0x037E2080 BL 0x1C16CF4
	0x037E2084 ADRP X0, 0x966000
	0x037E2088 LDR X0, [X0 + 0xAC8]
	0x037E208C BL 0x1C16CF4
	0x037E2090 ADRP X0, 0x967000
	0x037E2094 LDR X0, [X0 + 0x130]
	0x037E2098 BL 0x1C16CF4
	0x037E209C ADRP X0, 0x967000
	0x037E20A0 LDR X0, [X0 + 0x138]
	0x037E20A4 BL 0x1C16CF4
	0x037E20A8 ADRP X0, 0x966000
	0x037E20AC LDR X0, [X0 + 0x948]
	0x037E20B0 BL 0x1C16CF4
	0x037E20B4 ADRP X0, 0x963000
	0x037E20B8 LDR X0, [X0 + 0x9B8]
	0x037E20BC BL 0x1C16CF4
	0x037E20C0 MOVZ W8, 0x1
	0x037E20C4 STRB W8, [X20 + 0x2F4]
	0x037E20C8 LDR X8, [X22]
	0x037E20CC STR W31, [X31 + 0x6C]
	0x037E20D0 LDR X8, [X8 + 0xB8]
	0x037E20D4 LDR X8, [X8 + 0x20]
	0x037E20D8 CBZ X8, 0x37E22F0
	0x037E20DC LDR W9, [X8 + 0x18]
	0x037E20E0 CMP W9, W19
	0x037E20E4 B.LS 0x37E22F4
	0x037E20E8 SXTW X23, W19
	0x037E20EC MOVZ W9, 0xB8
	0x037E20F0 MADD X9, X23, X9, X8
	0x037E20F4 LDRB W9, [X9 + 0x58]
	0x037E20F8 CBZ W9, 0x37E21AC
	0x037E20FC MOVZ W9, 0xB8
	0x037E2100 MADD X9, X23, X9, X8
	0x037E2104 LDR X20, [X9 + 0x50]
	0x037E2108 CBZ X20, 0x37E21AC
	0x037E210C MOVI V0.2D, 0x0
	0x037E2110 STP V0, V0, [X31 + 0x40]
	0x037E2114 STP V0, V0, [X31 + 0x20]
	0x037E2118 STP V0, V0, [X31]
	0x037E211C ADRP X10, 0x966000
	0x037E2120 LDR X8, [X20]
	0x037E2124 LDR X10, [X10 + 0xAC8]
	0x037E2128 LDRH W9, [X8 + 0x12E]
	0x037E212C LDR X1, [X10]
	0x037E2130 CBZ X9, 0x37E2154
	0x037E2134 LDR X10, [X8 + 0xB0]
	0x037E2138 ADD X10, X10, 0x8
	0x037E213C LDUR X11, [X10 - 0x8]
	0x037E2140 CMP X11, X1
	0x037E2144 B.EQ 0x37E2168
	0x037E2148 SUBS X9, X9, 0x1
	0x037E214C ADD X10, X10, 0x10
	0x037E2150 B.NE 0x37E213C
	0x037E2154 MOVZ W2, 0x1
	0x037E2158 MOV X0, X20
	0x037E215C BL 0x1C5C788
	0x037E2160 MOV X21, X0
	0x037E2164 B 0x37E2178
	0x037E2168 LDR W9, [X10]
	0x037E216C ADD W9, W9, 0x1
	0x037E2170 ADD X8, X8, W9, 0x4, SXTW
	0x037E2174 ADD X21, X8, 0x138
	0x037E2178 LDR X24, [X21]
	0x037E217C ADD X0, X31, 0x70
	0x037E2180 ADD X1, X31, 0x0
	0x037E2184 MOVZ W2, 0x60
	0x037E2188 BL 0x3EB1AC0
	0x037E218C LDR X2, [X21 + 0x8]
	0x037E2190 ADD X1, X31, 0x70
	0x037E2194 MOV X0, X20
	0x037E2198 BLR X24
	0x037E219C LDR X8, [X22]
	0x037E21A0 LDR X8, [X8 + 0xB8]
	0x037E21A4 LDR X8, [X8 + 0x20]
	0x037E21A8 CBZ X8, 0x37E22F0
	0x037E21AC LDR W9, [X8 + 0x18]
	0x037E21B0 CMP W9, W19
	0x037E21B4 B.LS 0x37E22F4
	0x037E21B8 MOVZ W9, 0xB8
	0x037E21BC MADD X8, X23, X9, X8
	0x037E21C0 ADD X0, X8, 0x78
	0x037E21C4 MOV X1, X31
	0x037E21C8 BL 0x376BC1C
	0x037E21CC MOV W0, W19
	0x037E21D0 BL 0x37E1A94
	0x037E21D4 LDR X8, [X22]
	0x037E21D8 LDR X0, [X8 + 0xB8]
	0x037E21DC LDR W8, [X0 + 0x38]!
	0x037E21E0 CMP W8, 0x1
	0x037E21E4 B.LT 0x37E2260
	0x037E21E8 ADRP X21, 0x967000
	0x037E21EC ADRP X24, 0x967000
	0x037E21F0 LDR X21, [X21 + 0x138]
	0x037E21F4 LDR X24, [X24 + 0x130]
	0x037E21F8 MOV W20, W31
	0x037E21FC LDR X2, [X21]
	0x037E2200 MOV W1, W20
	0x037E2204 BL 0x2DF67E0
	0x037E2208 LDR X8, [X22]
	0x037E220C LDR X0, [X8 + 0xB8]
	0x037E2210 LDR X8, [X0 + 0x18]
	0x037E2214 CBZ X8, 0x37E22F0
	0x037E2218 LDR W9, [X8 + 0x18]
	0x037E221C CMP W9, W19
	0x037E2220 B.LS 0x37E22F4
	0x037E2224 ADD X8, X8, X23, 0x2, LSL
	0x037E2228 LDR W8, [X8 + 0x20]
	0x037E222C CMP W8, W1
	0x037E2230 B.NE 0x37E2250
	0x037E2234 LDR X2, [X24]
	0x037E2238 ADD X0, X0, 0x38
	0x037E223C MOV W1, W20
	0x037E2240 BL 0x2DF7624
	0x037E2244 LDR X8, [X22]
	0x037E2248 SUB W20, W20, 0x1
	0x037E224C LDR X0, [X8 + 0xB8]
	0x037E2250 LDR W8, [X0 + 0x38]!
	0x037E2254 ADD W20, W20, 0x1
	0x037E2258 CMP W20, W8
	0x037E225C B.LT 0x37E21FC
	0x037E2260 ADRP X20, 0x967000
	0x037E2264 ADRP X21, 0x967000
	0x037E2268 LDR X20, [X20 + 0x140]
	0x037E226C LDR X21, [X21 + 0x148]
	0x037E2270 MOVZ W1, 0x1
	0x037E2274 MOV W0, W19
	0x037E2278 MOV X2, X31
	0x037E227C BL 0x37E0F80
	0x037E2280 LDR X8, [X22]
	0x037E2284 LDR X3, [X20]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X22, 0xC01000
	015 Move X26, 0x968000
	016 Move X27, 0x969000
	017 Move W8, [X22+757]
	018 Move X26, [X26+2376]
	019 Move X27, [X27+184]
	020 Move X19, X2
	021 Move W20, W1
	022 Move W21, W0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {44}
	027 Move X0, 0x969000
	028 Move X0, [X0+192]
	029 Call 0x1C17CF4
	030 Move X0, 0x969000
	031 Move X0, [X0+200]
	032 Call 0x1C17CF4
	033 Move X0, 0x969000
	034 Move X0, [X0+208]
	035 Call 0x1C17CF4
	036 Move X0, 0x969000
	037 Move X0, [X0+184]
	038 Call 0x1C17CF4
	039 Move X0, 0x968000
	040 Move X0, [X0+2376]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X22+757], W8
	044 Move X8, [X26]
	045 Move X1, [X27]
	046 Move X8, [X8+184]
	047 Add X0, X8, 88
	048 Call 0x28F240C, X0
	049 Compare W0, 0
	050 JumpIfEqual {186}
	051 Move X8, [X26]
	052 Move X9, 0x968000
	053 Move X9, [X9+192]
	054 Move X8, [X8+184]
	055 Move X1, [X9]
	056 Add X0, X8, 88
	057 Call 0x28F27BC, X0
	058 Move X8, [X26]
	059 Move X1, [X27]
	060 Move X8, [X8+184]
	061 Add X0, X8, 88
	062 Call 0x28F240C, X0
	063 Move X8, [X26]
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move X8, [X8+184]
	066 Add X0, X8, 88
	067 Move X29, 0x968000
	068 Move X23, 0x912000
	069 Move X24, 0x968000
	070 Move X25, 0x912000
	071 Move X29, [X29+208]
	072 Move X23, [X23+2000]
	073 Move X24, [X24+216]
	074 Move X25, [X25+2600]
	075 Move W22, W31
	076 Move X28, W21
	077 Move X2, [X29]
	078 Move W1, W22
	079 Call 0x28F2414, X0, X1
	080 Move X8, [X26]
	081 Move X8, [X8+184]
	082 Move X8, [X8+24]
	083 Compare X8, 0
	084 JumpIfEqual {108}
	085 Move W9, [X8+24]
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Compare X0, 0
	088 JumpIfEqual {112}
	089 Add X9, X8, X28
	090 Move W1, [X9+32]
	091 Move X10, [X0+24]
	092 Move X8, [X0+64]
	093 Move X4, [X0+40]
	094 Move X0, X8
	095 Move W2, W20
	096 Move X3, X19
	097 NotImplemented "Instruction BLR not yet implemented."
	098 Move X8, [X26]
	099 Move X1, [X27]
	100 Add W22, W22, 1
	101 Move X8, [X8+184]
	102 Add X0, X8, 88
	103 Call 0x28F240C, X0
	104 Move X8, [X26]
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Move X8, [X8+184]
	107 Add X0, X8, 88
	108 Move [X31+8], X28
	109 Call 0x1C17F20
	110 Move [X31+8], X28
	111 Call 0x1C17F28
	112 Call 0x1C17F20
	113 Move [X31+8], X28
	114 Move X26, X0
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Move X0, X26
	117 Call 0x3EB2AD0
	118 Move X26, X0
	119 Move X0, X23
	120 Call 0x1C17D08
	121 Move X8, [X26]
	122 Move X1, [X8]
	123 Call 0x1C18270
	124 Move TEMP, X0
	125 And TEMP, TEMP, 1
	126 Compare TEMP, 1
	127 JumpIfNotEqual {200}
	128 Move X26, [X26]
	129 Call 0x3EB2AE0
	130 Compare X26, 0
	131 JumpIfEqual {208}
	132 Move X0, X26
	133 Move X1, X31
	134 Call Exception.GetType, X0
	135 Compare X0, 0
	136 JumpIfEqual {208}
	137 Move X8, [X0]
	138 Move X9, [X8+424]
	139 Move X1, [X8+432]
	140 NotImplemented "Instruction BLR not yet implemented."
	141 Move X27, X0
	142 Move X0, X24
	143 Call 0x1C17D08
	144 Move X1, X0
	145 Move X0, X27
	146 Move X2, X31
	147 Call String.Concat, X0, X1
	148 Move X27, X0
	149 Move X0, X25
	150 Call 0x1C17D08
	151 Move W8, [X0+224]
	152 Compare W8, 0
	153 JumpIfNotEqual {155}
	154 Call 0x1C17DFC
	155 Move X0, X27
	156 Move X1, X31
	157 Call Debug.LogError, X0
	158 Move X0, X26
	159 Move X1, X31
	160 Call Debug.LogException, X0
	161 Move X26, 0x967000
	162 Move X27, 0x968000
	163 Move X29, 0x968000
	164 Move X26, [X26+2376]
	165 Move X27, [X27+184]
	166 Move X28, [X31+8]
	167 Move X29, [X29+208]
	168 Move X8, 0x968000
	169 Move X8, [X8+200]
	170 Move X20, [X31+96]
	171 Move X19, [X31+104]
	172 Move X22, [X31+80]
	173 Move X21, [X31+88]
	174 Move X24, [X31+64]
	175 Move X23, [X31+72]
	176 Move X1, [X8]
	177 Move X26, [X31+48]
	178 Move X25, [X31+56]
	179 Move X28, [X31+32]
	180 Move X27, [X31+40]
	181 Move X29, [X31+16]
	182 Move X30, [X31+24]
	183 Add X31, X31, 112
	184 Call 0x28F27C8, X0
	185 Return 
	186 Move X20, [X31+96]
	187 Move X19, [X31+104]
	188 Move X22, [X31+80]
	189 Move X21, [X31+88]
	190 Move X24, [X31+64]
	191 Move X23, [X31+72]
	192 Move X26, [X31+48]
	193 Move X25, [X31+56]
	194 Move X28, [X31+32]
	195 Move X27, [X31+40]
	196 Move X29, [X31+16]
	197 Move X30, [X31+24]
	198 Add X31, X31, 112
	199 Return 
	200 Move W0, 8
	201 Call 0x3EB2AF0
	202 Move X8, [X26]
	203 Move [X0], X8
	204 Move X1, 0x6D3000
	205 Add X1, X1, 3672
	206 Move X2, X31
	207 Call 0x3EB2B00
	208 Call 0x1C17F20
	209 Move X26, X0
	210 Call 0x3EB2AE0
	211 Move X0, X26
	212 Call 0x1D2D690
	213 Call 0x1991590

Method: System.Int32 TryFindUserIndex(System.UInt32 userId)

Disassembly:
	0x037E1004 STRB W8, [X22 + 0x2F5]
	0x037E1008 LDR X8, [X26]
	0x037E100C LDR X1, [X27]
	0x037E1010 LDR X8, [X8 + 0xB8]
	0x037E1014 ADD X0, X8, 0x58
	0x037E1018 BL 0x28F140C
	0x037E101C CBZ W0, 0x37E122C
	0x037E1020 LDR X8, [X26]
	0x037E1024 ADRP X9, 0x968000
	0x037E1028 LDR X9, [X9 + 0xC0]
	0x037E102C LDR X8, [X8 + 0xB8]
	0x037E1030 LDR X1, [X9]
	0x037E1034 ADD X0, X8, 0x58
	0x037E1038 BL 0x28F17BC
	0x037E103C LDR X8, [X26]
	0x037E1040 LDR X1, [X27]
	0x037E1044 LDR X8, [X8 + 0xB8]
	0x037E1048 ADD X0, X8, 0x58
	0x037E104C BL 0x28F140C
	0x037E1050 LDR X8, [X26]
	0x037E1054 CMP W0, 0x1
	0x037E1058 LDR X8, [X8 + 0xB8]
	0x037E105C ADD X0, X8, 0x58
	0x037E1060 B.LT 0x37E1200
	0x037E1064 ADRP X29, 0x968000
	0x037E1068 ADRP X23, 0x912000
	0x037E106C ADRP X24, 0x968000
	0x037E1070 ADRP X25, 0x912000
	0x037E1074 LDR X29, [X29 + 0xD0]
	0x037E1078 LDR X23, [X23 + 0x7D0]
	0x037E107C LDR X24, [X24 + 0xD8]
	0x037E1080 LDR X25, [X25 + 0xA28]
	0x037E1084 MOV W22, W31
	0x037E1088 SXTW X28, W21
	0x037E108C LDR X2, [X29]
	0x037E1090 MOV W1, W22
	0x037E1094 BL 0x28F1414

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xC01000
	006 Move X21, 0x968000
	007 Move W8, [X20+758]
	008 Move X21, [X21+2376]
	009 Move W19, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x968000
	015 Move X0, [X0+2376]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+758], W8
	019 Move X8, [X21]
	020 Move X9, [X8+184]
	021 Move W8, [X9+8]
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move X9, [X9+24]
	024 Move X0, X31
	025 Add X10, X9, 32
	026 Compare X9, 0
	027 JumpIfEqual {42}
	028 Move W11, [X9+24]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move W11, [X10]
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Add X0, X0, 1
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move TEMP, 0
	035 Not TEMP
	036 Move W0, TEMP
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X30, [X31+32]
	040 Move X21, [X31+40]
	041 Return X0
	042 Call 0x1C17F20
	043 Call 0x1C17F28

Method: System.Int32 TryFindUserIndex(UnityEngine.InputSystem.Users.InputUserAccountHandle platformHandle)

Disassembly:
	0x037E3828 ADD X20, X20, 0x1
	0x037E382C ADD X22, X22, 0x4
	0x037E3830 LDR X8, [X8 + 0xB8]
	0x037E3834 LDRSW X9, [X8 + 0x8]
	0x037E3838 CMP X20, X9
	0x037E383C B.LT 0x37E37F0
	0x037E3840 LDP X20, X19, [X31 + 0x20]
	0x037E3844 LDP X22, X21, [X31 + 0x10]
	0x037E3848 LDR X30, [X31], #0x30
	0x037E384C RET
	0x037E3850 BL 0x1C16F20
	0x037E3854 BL 0x1C16F28
	0x037E3858 STR X30, [X31 - 0x50]!
	0x037E385C STP X26, X25, [X31 + 0x10]
	0x037E3860 STP X24, X23, [X31 + 0x20]
	0x037E3864 STP X22, X21, [X31 + 0x30]
	0x037E3868 STP X20, X19, [X31 + 0x40]
	0x037E386C ADRP X21, 0xBFE000
	0x037E3870 LDRB W8, [X21 + 0x300]
	0x037E3874 MOV W20, W1
	0x037E3878 MOV X19, X0
	0x037E387C TBNZ X8, 0x0, 0x37E38DC
	0x037E3880 ADRP X0, 0x962000
	0x037E3884 LDR X0, [X0 + 0x330]
	0x037E3888 BL 0x1C16CF4
	0x037E388C ADRP X0, 0x966000
	0x037E3890 LDR X0, [X0 + 0x128]
	0x037E3894 BL 0x1C16CF4
	0x037E3898 ADRP X0, 0x966000
	0x037E389C LDR X0, [X0 + 0x130]
	0x037E38A0 BL 0x1C16CF4
	0x037E38A4 ADRP X0, 0x966000
	0x037E38A8 LDR X0, [X0 + 0x138]
	0x037E38AC BL 0x1C16CF4
	0x037E38B0 ADRP X0, 0x965000
	0x037E38B4 LDR X0, [X0 + 0x948]
	0x037E38B8 BL 0x1C16CF4
	0x037E38BC ADRP X0, 0x910000
	0x037E38C0 LDR X0, [X0 + 0x5A8]
	0x037E38C4 BL 0x1C16CF4
	0x037E38C8 ADRP X0, 0x961000
	0x037E38CC LDR X0, [X0 + 0xFC8]
	0x037E38D0 BL 0x1C16CF4
	0x037E38D4 MOVZ W8, 0x1
	0x037E38D8 STRB W8, [X21 + 0x300]
	0x037E38DC CBZ W20, 0x37E3B2C
	0x037E38E0 CMP W20, 0x1
	0x037E38E4 B.EQ 0x37E3C28
	0x037E38E8 CMP W20, 0x7
	0x037E38EC B.NE 0x37E3C10
	0x037E38F0 ADRP X22, 0x965000
	0x037E38F4 LDR X22, [X22 + 0x948]
	0x037E38F8 LDR X8, [X22]
	0x037E38FC LDR X8, [X8 + 0xB8]
	0x037E3900 MOV X0, X8
	0x037E3904 LDR W9, [X0 + 0x38]!
	0x037E3908 CMP W9, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0xBFF000
	008 Move X22, 0x966000
	009 Move W8, [X21+759]
	010 Move X22, [X22+2376]
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {28}
	017 Move X0, 0x966000
	018 Move X0, [X0+2376]
	019 Call 0x1C17CF4
	020 Move X0, 0x967000
	021 Move X0, [X0+384]
	022 Call 0x1C17CF4
	023 Move X0, 0x967000
	024 Move X0, [X0+264]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X21+759], W8
	028 Move X8, [X22]
	029 Move X9, [X8+184]
	030 Move W10, [X9+8]
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move X23, X31
	033 Move X21, X31
	034 Move X9, [X9+32]
	035 Compare X9, 0
	036 JumpIfEqual {70}
	037 Move W10, [X9+24]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Add X9, X9, X23
	040 Move W10, [X9+32]
	041 Compare W10, 0
	042 JumpIfEqual {54}
	043 Move X0, [X9+40]
	044 Move X1, [X9+48]
	045 Move X2, X20
	046 Move X3, X19
	047 Move X4, X31
	048 Call InputUserAccountHandle.op_Equality, X0, X1
	049 Move TEMP, X0
	050 And TEMP, TEMP, 1
	051 Compare TEMP, 1
	052 JumpIfEqual {62}
	053 Move X8, [X22]
	054 Move X9, [X8+184]
	055 Add X21, X21, 1
	056 Add X23, X23, 184
	057 NotImplemented "Instruction LDRSW not yet implemented."
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move TEMP, 0
	060 Not TEMP
	061 Move W21, TEMP
	062 Move W0, W21
	063 Move X20, [X31+32]
	064 Move X19, [X31+40]
	065 Move X22, [X31+16]
	066 Move X21, [X31+24]
	067 Move X30, [X31+48]
	068 Move X23, [X31+56]
	069 Return X0
	070 Call 0x1C17F20
	071 Call 0x1C17F28

Method: System.Int32 TryFindUserIndex(UnityEngine.InputSystem.InputDevice device)

Disassembly:
	0x037E3604 LDP X30, X21, [X31], #0x20
	0x037E3608 RET
	0x037E360C STP X29, X30, [X31 - 0x40]!
	0x037E3610 STP X24, X23, [X31 + 0x10]
	0x037E3614 STP X22, X21, [X31 + 0x20]
	0x037E3618 STP X20, X19, [X31 + 0x30]
	0x037E361C SUB X31, X31, 0x840
	0x037E3620 MRS X24, 0xC000
	0x037E3624 LDR X8, [X24 + 0x28]
	0x037E3628 ADRP X22, 0xBFE000
	0x037E362C MOV X19, X3
	0x037E3630 MOV X20, X2
	0x037E3634 STR X8, [X31 + 0x838]
	0x037E3638 LDRB W8, [X22 + 0x2FD]
	0x037E363C MOV X21, X1
	0x037E3640 MOV X23, X0
	0x037E3644 TBNZ X8, 0x0, 0x37E3674
	0x037E3648 ADRP X0, 0x966000
	0x037E364C LDR X0, [X0 + 0x1C8]
	0x037E3650 BL 0x1C16CF4
	0x037E3654 ADRP X0, 0x966000
	0x037E3658 LDR X0, [X0 + 0x1D0]
	0x037E365C BL 0x1C16CF4
	0x037E3660 ADRP X0, 0x966000
	0x037E3664 LDR X0, [X0 + 0x1D8]
	0x037E3668 BL 0x1C16CF4
	0x037E366C MOVZ W8, 0x1
	0x037E3670 STRB W8, [X22 + 0x2FD]
	0x037E3674 ADD X0, X31, 0x428
	0x037E3678 MOVZ W2, 0x410
	0x037E367C MOV W1, W31
	0x037E3680 BL 0x3EB1B10
	0x037E3684 ADD X8, X31, 0x18
	0x037E3688 MOV X0, X31
	0x037E368C BL 0x37FF270
	0x037E3690 ADD X0, X31, 0x428
	0x037E3694 ADD X1, X31, 0x18
	0x037E3698 MOVZ W2, 0x410
	0x037E369C BL 0x3EB1AC0
	0x037E36A0 CBZ X23, 0x37E3788
	0x037E36A4 ADRP X8, 0x966000
	0x037E36A8 LDR X8, [X8 + 0x1C8]
	0x037E36AC ADD X1, X31, 0x428
	0x037E36B0 MOV X0, X23
	0x037E36B4 LDR X2, [X8]
	0x037E36B8 BL 0x2205EF0
	0x037E36BC MOV X22, X0
	0x037E36C0 ADDS X31, X0, 0x1
	0x037E36C4 B.EQ 0x37E36CC
	0x037E36C8 TBNZ X22, 0x1, 0x37E36E0
	0x037E36CC STP X31, X31, [X21]
	0x037E36D0 STR X31, [X21 + 0x10]
	0x037E36D4 STR X31, [X20]
	0x037E36D8 STR X31, [X19]
	0x037E36DC B 0x37E375C
	0x037E36E0 ADRP X9, 0x966000
	0x037E36E4 LDR X8, [X23 + 0xF0]
	0x037E36E8 LDR X9, [X9 + 0x1D8]
	0x037E36EC LDR X2, [X31 + 0x430]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xBFF000
	007 Move X20, 0x966000
	008 Move X21, 0x963000
	009 Move W8, [X22+760]
	010 Move X20, [X20+2376]
	011 Move X21, [X21+816]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x963000
	018 Move X0, [X0+816]
	019 Call 0x1C17CF4
	020 Move X0, 0x966000
	021 Move X0, [X0+2376]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+760], W8
	025 Move X8, [X20]
	026 Move X3, [X21]
	027 Move X1, X19
	028 Move X8, [X8+184]
	029 Move X0, [X8+40]
	030 Move W2, [X8+12]
	031 Call 0x217AB8C, X0, X1, X2
	032 Add W31, W0, 1
	033 Move X9, [X20]
	034 Move X10, [X9+184]
	035 NotImplemented "Instruction LDRSW not yet implemented."
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X10, [X10+32]
	038 Move W8, W0
	039 Move X0, X31
	040 Add X11, X10, 76
	041 Compare X10, 0
	042 JumpIfEqual {62}
	043 Move W12, [X10+24]
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move W12, [X11]
	046 NotImplemented "Instruction CMP not yet implemented."
	047 NotImplemented "Instruction LDUR not yet implemented."
	048 Add W12, W13, W12
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Add X0, X0, 1
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Add X11, X11, 184
	053 Move TEMP, 0
	054 Not TEMP
	055 Move W0, TEMP
	056 Move X20, [X31+32]
	057 Move X19, [X31+40]
	058 Move X22, [X31+16]
	059 Move X21, [X31+24]
	060 Move X30, [X31+48]
	061 Return X0
	062 Call 0x1C17F20
	063 Call 0x1C17F28

Method: System.Void AddDeviceToUser(System.Int32 userIndex, UnityEngine.InputSystem.InputDevice device, System.Boolean asLostDevice = False, System.Boolean dontUpdateControlScheme = False)

Disassembly:
	0x037E3B20 ADDS W31, W0, 0x1
	0x037E3B24 B.NE 0x37E3A40
	0x037E3B28 B 0x37E3C10
	0x037E3B2C MOV X0, X19
	0x037E3B30 MOV W1, W31
	0x037E3B34 BL 0x37E3CF4
	0x037E3B38 ADDS W31, W0, 0x1
	0x037E3B3C B.EQ 0x37E3C10
	0x037E3B40 ADRP X22, 0x965000
	0x037E3B44 LDR X22, [X22 + 0x948]
	0x037E3B48 MOV W20, W0
	0x037E3B4C LDR X8, [X22]
	0x037E3B50 LDR X8, [X8 + 0xB8]
	0x037E3B54 LDRSW X9, [X8 + 0x8]
	0x037E3B58 CMP W9, 0x1
	0x037E3B5C B.LT 0x37E3BA8
	0x037E3B60 LDR X10, [X8 + 0x20]
	0x037E3B64 MOV X21, X31
	0x037E3B68 ADD X11, X10, 0xCC
	0x037E3B6C CBZ X10, 0x37E3CF0
	0x037E3B70 LDR W12, [X10 + 0x18]
	0x037E3B74 CMP X21, X12
	0x037E3B78 B.CS 0x37E3CEC
	0x037E3B7C LDR W12, [X11]
	0x037E3B80 CMP W12, W20
	0x037E3B84 B.GT 0x37E3B98
	0x037E3B88 LDUR W13, [X11 - 0x4]
	0x037E3B8C ADD W12, W13, W12
	0x037E3B90 CMP W20, W12
	0x037E3B94 B.LT 0x37E3BAC
	0x037E3B98 ADD X21, X21, 0x1
	0x037E3B9C CMP X21, X9
	0x037E3BA0 ADD X11, X11, 0xB8
	0x037E3BA4 B.LT 0x37E3B6C
	0x037E3BA8 MOVN W21, 0x0
	0x037E3BAC LDR X8, [X8 + 0x30]
	0x037E3BB0 CBZ X8, 0x37E3CF0
	0x037E3BB4 LDR W9, [X8 + 0x18]
	0x037E3BB8 CMP W20, W9
	0x037E3BBC B.CS 0x37E3CEC
	0x037E3BC0 ADD X8, X8, W20, 0x3, SXTW
	0x037E3BC4 LDR X1, [X8 + 0x20]
	0x037E3BC8 MOVZ W2, 0x1
	0x037E3BCC MOV W0, W21
	0x037E3BD0 BL 0x37E1BC0
	0x037E3BD4 MOVZ W1, 0x5
	0x037E3BD8 MOV W0, W21
	0x037E3BDC MOV X2, X19
	0x037E3BE0 BL 0x37E0F80
	0x037E3BE4 MOV W0, W21
	0x037E3BE8 MOV X1, X19
	0x037E3BEC MOV W2, W31
	0x037E3BF0 MOV W3, W31
	0x037E3BF4 BL 0x37E2B20
	0x037E3BF8 MOV X0, X19
	0x037E3BFC MOV W1, W20
	0x037E3C00 BL 0x37E3CF4
	0x037E3C04 MOV W20, W0
	0x037E3C08 ADDS W31, W0, 0x1
	0x037E3C0C B.NE 0x37E3B4C
	0x037E3C10 LDP X20, X19, [X31 + 0x40]
	0x037E3C14 LDP X22, X21, [X31 + 0x30]
	0x037E3C18 LDP X24, X23, [X31 + 0x20]
	0x037E3C1C LDP X26, X25, [X31 + 0x10]
	0x037E3C20 LDR X30, [X31], #0x50
	0x037E3C24 RET
	0x037E3C28 ADRP X21, 0x965000
	0x037E3C2C LDR X21, [X21 + 0x948]
	0x037E3C30 ADRP X22, 0x962000
	0x037E3C34 LDR X8, [X21]
	0x037E3C38 LDR X8, [X8 + 0xB8]
	0x037E3C3C LDR X22, [X22 + 0x330]
	0x037E3C40 LDR X0, [X8 + 0x28]
	0x037E3C44 LDR W2, [X8 + 0xC]
	0x037E3C48 LDR X3, [X22]
	0x037E3C4C MOV X1, X19
	0x037E3C50 BL 0x2179B8C
	0x037E3C54 ADDS W31, W0, 0x1
	0x037E3C58 B.EQ 0x37E3C10
	0x037E3C5C LDR X8, [X21]
	0x037E3C60 LDR X9, [X8 + 0xB8]
	0x037E3C64 LDRSW X8, [X9 + 0x8]
	0x037E3C68 CMP W8, 0x1
	0x037E3C6C B.LT 0x37E3CB8
	0x037E3C70 LDR X9, [X9 + 0x20]
	0x037E3C74 MOV X20, X31
	0x037E3C78 ADD X10, X9, 0x4C
	0x037E3C7C CBZ X9, 0x37E3CF0
	0x037E3C80 LDR W11, [X9 + 0x18]
	0x037E3C84 CMP X20, X11
	0x037E3C88 B.CS 0x37E3CEC
	0x037E3C8C LDR W11, [X10]
	0x037E3C90 CMP W11, W0
	0x037E3C94 B.GT 0x37E3CA8
	0x037E3C98 LDUR W12, [X10 - 0x4]
	0x037E3C9C ADD W11, W12, W11
	0x037E3CA0 CMP W0, W11
	0x037E3CA4 B.LT 0x37E3CBC
	0x037E3CA8 ADD X20, X20, 0x1
	0x037E3CAC CMP X20, X8
	0x037E3CB0 ADD X10, X10, 0xB8
	0x037E3CB4 B.LT 0x37E3C7C
	0x037E3CB8 MOVN W20, 0x0
	0x037E3CBC MOVZ W2, 0x1
	0x037E3CC0 MOV W0, W20
	0x037E3CC4 MOV X1, X19
	0x037E3CC8 MOV W3, W31
	0x037E3CCC BL 0x37E2B20
	0x037E3CD0 MOV W0, W20
	0x037E3CD4 MOV X1, X19
	0x037E3CD8 MOV W2, W31
	0x037E3CDC BL 0x37E1BC0
	0x037E3CE0 LDR X8, [X21]
	0x037E3CE4 LDR X8, [X8 + 0xB8]
	0x037E3CE8 B 0x37E3C40
	0x037E3CEC BL 0x1C16F28
	0x037E3CF0 BL 0x1C16F20
	0x037E3CF4 STP X30, X21, [X31 - 0x20]!
	0x037E3CF8 STP X20, X19, [X31 + 0x10]
	0x037E3CFC ADRP X21, 0xBFE000
	0x037E3D00 LDRB W8, [X21 + 0x301]
	0x037E3D04 MOV W19, W1
	0x037E3D08 MOV X20, X0
	0x037E3D0C TBNZ X8, 0x0, 0x37E3D24
	0x037E3D10 ADRP X0, 0x965000
	0x037E3D14 LDR X0, [X0 + 0x948]
	0x037E3D18 BL 0x1C16CF4
	0x037E3D1C MOVZ W8, 0x1
	0x037E3D20 STRB W8, [X21 + 0x301]
	0x037E3D24 CBZ X20, 0x37E3DA4
	0x037E3D28 ADRP X8, 0x965000
	0x037E3D2C LDR X8, [X8 + 0x948]
	0x037E3D30 LDR X8, [X8]
	0x037E3D34 LDR X9, [X8 + 0xB8]
	0x037E3D38 LDR W8, [X9 + 0x10]
	0x037E3D3C CMP W8, W19
	0x037E3D40 B.LE 0x37E3D90
	0x037E3D44 LDR X9, [X9 + 0x30]
	0x037E3D48 LDR W10, [X20 + 0xE0]
	0x037E3D4C ADD X11, X9, W19, 0x3, SXTW
	0x037E3D50 ADD X11, X11, 0x20
	0x037E3D54 CBZ X9, 0x37E3DA4
	0x037E3D58 LDR W12, [X9 + 0x18]
	0x037E3D5C CMP W19, W12
	0x037E3D60 B.CS 0x37E3DA8
	0x037E3D64 LDR X12, [X11]
	0x037E3D68 CMP X12, X20
	0x037E3D6C B.EQ 0x37E3D94
	0x037E3D70 CBZ X12, 0x37E3DA4
	0x037E3D74 LDR W12, [X12 + 0xE0]
	0x037E3D78 CMP W12, W10
	0x037E3D7C B.EQ 0x37E3D94
	0x037E3D80 ADD W19, W19, 0x1
	0x037E3D84 CMP W19, W8
	0x037E3D88 ADD X11, X11, 0x8
	0x037E3D8C B.LT 0x37E3D54
	0x037E3D90 MOVN W19, 0x0
	0x037E3D94 MOV W0, W19
	0x037E3D98 LDP X20, X19, [X31 + 0x10]
	0x037E3D9C LDP X30, X21, [X31], #0x20
	0x037E3DA0 RET
	0x037E3DA4 BL 0x1C16F20
	0x037E3DA8 BL 0x1C16F28
	0x037E3DAC SUB X31, X31, 0x190
	0x037E3DB0 STP X29, X30, [X31 + 0x130]
	0x037E3DB4 STP X28, X27, [X31 + 0x140]
	0x037E3DB8 STP X26, X25, [X31 + 0x150]
	0x037E3DBC STP X24, X23, [X31 + 0x160]
	0x037E3DC0 STP X22, X21, [X31 + 0x170]
	0x037E3DC4 STP X20, X19, [X31 + 0x180]
	0x037E3DC8 ADRP X20, 0xBFE000
	0x037E3DCC STR X0, [X31 + 0x128]
	0x037E3DD0 ADRP X28, 0x965000
	0x037E3DD4 LDRB W8, [X20 + 0x302]
	0x037E3DD8 LDR X28, [X28 + 0x948]
	0x037E3DDC MOV X19, X1
	0x037E3DE0 TBNZ X8, 0x0, 0x37E3E58
	0x037E3DE4 ADRP X0, 0x966000
	0x037E3DE8 LDR X0, [X0 + 0x150]
	0x037E3DEC BL 0x1C16CF4
	0x037E3DF0 ADRP X0, 0x966000
	0x037E3DF4 LDR X0, [X0 + 0x1E0]
	0x037E3DF8 BL 0x1C16CF4
	0x037E3DFC ADRP X0, 0x966000
	0x037E3E00 LDR X0, [X0 + 0x1E8]
	0x037E3E04 BL 0x1C16CF4
	0x037E3E08 ADRP X0, 0x966000
	0x037E3E0C LDR X0, [X0 + 0x1F0]
	0x037E3E10 BL 0x1C16CF4
	0x037E3E14 ADRP X0, 0x965000
	0x037E3E18 LDR X0, [X0 + 0xB58]
	0x037E3E1C BL 0x1C16CF4
	0x037E3E20 ADRP X0, 0x966000
	0x037E3E24 LDR X0, [X0 + 0x1F8]
	0x037E3E28 BL 0x1C16CF4
	0x037E3E2C ADRP X0, 0x965000
	0x037E3E30 LDR X0, [X0 + 0x948]
	0x037E3E34 BL 0x1C16CF4
	0x037E3E38 ADRP X0, 0x966000
	0x037E3E3C LDR X0, [X0 + 0x200]
	0x037E3E40 BL 0x1C16CF4
	0x037E3E44 ADRP X0, 0x966000
	0x037E3E48 LDR X0, [X0 + 0x208]
	0x037E3E4C BL 0x1C16CF4
	0x037E3E50 MOVZ W8, 0x1
	0x037E3E54 STRB W8, [X20 + 0x302]
	0x037E3E58 LDR X8, [X28]
	0x037E3E5C MOVI V0.2D, 0x0
	0x037E3E60 STP V0, V0, [X31 + 0x100]
	0x037E3E64 STP V0, V0, [X31 + 0xE0]
	0x037E3E68 STP V0, V0, [X31 + 0xC0]
	0x037E3E6C STR V0, [X31 + 0xB]
	0x037E3E70 STP X31, X31, [X31 + 0x90]
	0x037E3E74 STR X31, [X31 + 0xA0]
	0x037E3E78 LDR X8, [X8 + 0xB8]
	0x037E3E7C LDR W8, [X8 + 0x164]
	0x037E3E80 CBZ W8, 0x37E4140
	0x037E3E84 ADD X0, X31, 0x128
	0x037E3E88 MOV X1, X31
	0x037E3E8C BL 0x37F80B4
	0x037E3E90 MOVZ W8, 0x4154
	0x037E3E94 MOVK W8, 0x53540000
	0x037E3E98 CMP W0, W8
	0x037E3E9C B.EQ 0x37E3EB0
	0x037E3EA0 MOVZ W8, 0x5441
	0x037E3EA4 MOVK W8, 0x444C0000
	0x037E3EA8 CMP W0, W8
	0x037E3EAC B.NE 0x37E4140
	0x037E3EB0 CBZ X19, 0x37E4160
	0x037E3EB4 MOV X0, X19
	0x037E3EB8 MOV X1, X31
	0x037E3EBC BL 0x377A8A4
	0x037E3EC0 TBZ X0, 0x0, 0x37E4140
	0x037E3EC4 LDR X8, [X28]
	0x037E3EC8 ADRP X9, 0x966000
	0x037E3ECC MOV X2, X19
	0x037E3ED0 LDR X8, [X8 + 0xB8]
	0x037E3ED4 LDR X9, [X9 + 0x150]
	0x037E3ED8 LDR X0, [X8 + 0x28]
	0x037E3EDC LDR W1, [X8 + 0xC]
	0x037E3EE0 LDR X3, [X9]
	0x037E3EE4 BL 0x21760F0
	0x037E3EE8 TBNZ X0, 0x0, 0x37E4140
	0x037E3EEC ADRP X9, 0x966000
	0x037E3EF0 LDR X8, [X28]
	0x037E3EF4 LDR X2, [X31 + 0x128]
	0x037E3EF8 LDR X9, [X9 + 0x208]
	0x037E3EFC MOV X1, X19
	0x037E3F00 LDR X8, [X8 + 0xB8]
	0x037E3F04 MOV X4, X31
	0x037E3F08 LDR X3, [X9]
	0x037E3F0C ADRP X9, 0x966000
	0x037E3F10 LDR X9, [X9 + 0x1F8]
	0x037E3F14 ADD X0, X8, 0xF8
	0x037E3F18 LDR X5, [X9]
	0x037E3F1C BL 0x21AECB4
	0x037E3F20 TBZ X0, 0x0, 0x37E4140
	0x037E3F24 ADRP X8, 0xFFFFFFFFFD306000
	0x037E3F28 LDR X0, [X31 + 0x128]
	0x037E3F2C LDR V0, [X8 + 0xF28]

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+80], X30
	003 Move [X31+96], X26
	004 Move [X31+104], X25
	005 Move [X31+112], X24
	006 Move [X31+120], X23
	007 Move [X31+128], X22
	008 Move [X31+136], X21
	009 Move [X31+144], X20
	010 Move [X31+152], X19
	011 Move X23, 0xBFF000
	012 Move X25, 0x966000
	013 Move W8, [X23+761]
	014 Move X25, [X25+2376]
	015 Move W21, W3
	016 Move W22, W2
	017 Move X19, X1
	018 Move W20, W0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {43}
	023 Move X0, 0x966000
	024 Move X0, [X0+488]
	025 Call 0x1C17CF4
	026 Move X0, 0x967000
	027 Move X0, [X0+416]
	028 Call 0x1C17CF4
	029 Move X0, 0x966000
	030 Move X0, [X0+2760]
	031 Call 0x1C17CF4
	032 Move X0, 0x966000
	033 Move X0, [X0+2376]
	034 Call 0x1C17CF4
	035 Move X0, 0x963000
	036 Move X0, [X0+72]
	037 Call 0x1C17CF4
	038 Move X0, 0x963000
	039 Move X0, [X0+2488]
	040 Call 0x1C17CF4
	041 Move W8, 1
	042 Move [X23+761], W8
	043 Move X8, [X25]
	044 Move X8, [X8+184]
	045 Move X9, [X8+32]
	046 Compare X9, 0
	047 JumpIfEqual {272}
	048 Move W10, [X9+24]
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move X26, W20
	051 Move W10, 184
	052 NotImplemented "Instruction MADD not yet implemented."
	053 And W31, W22, 1
	054 Add X10, X9, 200
	055 Add X12, X9, 72
	056 NotImplemented "Instruction CSEL not yet implemented."
	057 Add X12, X9, 204
	058 Add X9, X9, 76
	059 Move W11, [X8]
	060 Move W23, [X10]
	061 NotImplemented "Instruction CSEL not yet implemented."
	062 Move W24, [X9]
	063 Add W9, W11, 1
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move [X8], W9
	066 Move X9, 0x967000
	067 Move X9, [X9+416]
	068 And W31, W22, 1
	069 Move W10, 40
	070 Move W11, 48
	071 Move W12, 12
	072 Move W13, 16
	073 NotImplemented "Instruction CSEL not yet implemented."
	074 NotImplemented "Instruction CSEL not yet implemented."
	075 Move X0, [X8]
	076 Move W8, [X8]
	077 Move X4, [X9]
	078 Move W1, W24
	079 Move W3, W23
	080 Subtract W2, W8, W23
	081 Call 0x217C95C, X0, X1, X2, X3
	082 Move X8, [X25]
	083 Move X8, [X8+184]
	084 Move W9, [X8+8]
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move X9, X31
	087 Move X10, X31
	088 Move W11, W20
	089 Move W12, 76
	090 Move W13, 204
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Move X14, [X8+32]
	093 Compare X14, 0
	094 JumpIfEqual {272}
	095 Move W15, [X14+24]
	096 NotImplemented "Instruction CMP not yet implemented."
	097 And W31, W22, 1
	098 Add X14, X14, X9
	099 NotImplemented "Instruction CSEL not yet implemented."
	100 Move W15, [X14]
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Move TEMP, X22
	103 And TEMP, TEMP, 1
	104 Compare TEMP, 1
	105 JumpIfNotEqual {109}
	106 Move W15, [X14+204]
	107 Subtract W15, W15, W23
	108 Move [X14+204], W15
	109 Move W15, [X14+76]
	110 Subtract W15, W15, W23
	111 Move [X14+76], W15
	112 NotImplemented "Instruction LDRSW not yet implemented."
	113 Add X10, X10, 1
	114 Add X9, X9, 184
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Move X8, [X25]
	117 Move X8, [X8+184]
	118 Move X9, [X8+32]
	119 Compare X9, 0
	120 JumpIfEqual {272}
	121 Move TEMP, X22
	122 And TEMP, TEMP, 1
	123 Compare TEMP, 1
	124 JumpIfNotEqual {153}
	125 Move W10, [X9+24]
	126 NotImplemented "Instruction CMP not yet implemented."
	127 Move W10, [X8+16]
	128 Move W11, 184
	129 NotImplemented "Instruction MADD not yet implemented."
	130 Add X1, X8, 16
	131 Subtract W10, W10, W23
	132 Move [X9+204], W10
	133 Move X9, 0x966000
	134 Move X9, [X9+488]
	135 Add X0, X8, 48
	136 Move W3, 10
	137 Move X2, X19
	138 Move X4, [X9]
	139 Call ArrayHelpers.AppendWithCapacity, X0, X1, X2, X3
	140 Move X8, [X25]
	141 Move X8, [X8+184]
	142 Move X8, [X8+32]
	143 Compare X8, 0
	144 JumpIfEqual {272}
	145 Move W9, [X8+24]
	146 NotImplemented "Instruction CMP not yet implemented."
	147 Move W9, 184
	148 NotImplemented "Instruction MADD not yet implemented."
	149 Move W9, [X8+200]
	150 Move W21, 4
	151 Add W9, W9, 1
	152 Move [X8+200], W9
	153 Move W10, [X9+24]
	154 NotImplemented "Instruction CMP not yet implemented."
	155 Move W10, [X8+12]
	156 Move W11, 184
	157 NotImplemented "Instruction MADD not yet implemented."
	158 Add X1, X8, 12
	159 Subtract W10, W10, W23
	160 Move [X9+76], W10
	161 Move X9, 0x966000
	162 Move X9, [X9+488]
	163 Add X0, X8, 40
	164 Move W3, 10
	165 Move X2, X19
	166 Move X4, [X9]
	167 Call ArrayHelpers.AppendWithCapacity, X0, X1, X2, X3
	168 Move X8, [X25]
	169 Move X8, [X8+184]
	170 Move X9, [X8+32]
	171 Compare X9, 0
	172 JumpIfEqual {272}
	173 Move W10, [X9+24]
	174 NotImplemented "Instruction CMP not yet implemented."
	175 Move W10, 184
	176 NotImplemented "Instruction MADD not yet implemented."
	177 Move W10, [X9+72]
	178 Move X22, [X9+80]
	179 Add W10, W10, 1
	180 Move [X9+72], W10
	181 Compare X22, 0
	182 JumpIfEqual {255}
	183 Move X8, [X8+24]
	184 Compare X8, 0
	185 JumpIfEqual {272}
	186 Move W9, [X8+24]
	187 NotImplemented "Instruction CMP not yet implemented."
	188 Add X8, X8, X26
	189 Add X0, X8, 32
	190 Call InputUser.get_pairedDevices, X0
	191 Move X8, 0x963000
	192 Move X8, [X8+72]
	193 Move X2, X0
	194 Move X4, X1
	195 Add X0, X31, 24
	196 Move X3, [X8]
	197 Move X1, X2
	198 Move X2, X4
	199 Move [X31+24], X31
	200 Move [X31+32], X31
	201 Move [X31+40], X31
	202 Call Nullable`1<ReadOnlyArray`1<Object>>..ctor, X0, X1
	203 NotImplemented "Instruction LDUR not yet implemented."
	204 Move X8, [X31+40]
	205 Move X10, 0x966000
	206 Move [X31], V0
	207 Move [X31+16], X8
	208 Move X8, [X22]
	209 Move X10, [X10+2760]
	210 NotImplemented "Instruction LDRH not yet implemented."
	211 Move X1, [X10]
	212 Compare X9, 0
	213 JumpIfEqual {220}
	214 Move X10, [X8+176]
	215 Add X10, X10, 8
	216 NotImplemented "Instruction LDUR not yet implemented."
	217 NotImplemented "Instruction CMP not yet implemented."
	218 Subtract X9, X9, 1
	219 Add X10, X10, 16
	220 Move W2, 3
	221 Move X0, X22
	222 Call 0x1C5D788
	223 Move W9, [X10]
	224 Add W9, W9, 3
	225 Add X8, X8, W9
	226 Add X0, X8, 312
	227 Move V0, [X31]
	228 Move X8, [X31+16]
	229 Move X9, [X0]
	230 Add X1, X31, 48
	231 Move [X31+3], V0
	232 Move [X31+64], X8
	233 Move X2, [X0+8]
	234 Move X0, X22
	235 NotImplemented "Instruction BLR not yet implemented."
	236 Move TEMP, X21
	237 And TEMP, TEMP, 1
	238 Compare TEMP, 1
	239 JumpIfEqual {255}
	240 Move X8, [X25]
	241 Move X8, [X8+184]
	242 Move X8, [X8+32]
	243 Compare X8, 0
	244 JumpIfEqual {272}
	245 Move W9, [X8+24]
	246 NotImplemented "Instruction CMP not yet implemented."
	247 Move W9, 184
	248 NotImplemented "Instruction MADD not yet implemented."
	249 Move W8, [X8+88]
	250 Compare W8, 0
	251 JumpIfEqual {255}
	252 Move W0, W20
	253 Move W1, W31
	254 Call InputUser.UpdateControlSchemeMatch, X0, X1
	255 Move W21, 2
	256 Call InputUser.HookIntoDeviceChange
	257 Move W0, W20
	258 Move W1, W21
	259 Move X2, X19
	260 Call InputUser.Notify, X0, X1, X2
	261 Move X20, [X31+144]
	262 Move X19, [X31+152]
	263 Move X22, [X31+128]
	264 Move X21, [X31+136]
	265 Move X24, [X31+112]
	266 Move X23, [X31+120]
	267 Move X26, [X31+96]
	268 Move X25, [X31+104]
	269 Move X30, [X31+80]
	270 Add X31, X31, 160
	271 Return 
	272 Call 0x1C17F20
	273 Call 0x1C17F28

Method: System.Void RemoveDeviceFromUser(System.Int32 userIndex, UnityEngine.InputSystem.InputDevice device, System.Boolean asLostDevice = False)

Disassembly:
	0x037E2BC0 CMP W10, W20
	0x037E2BC4 B.LS 0x37E2F2C
	0x037E2BC8 SXTW X26, W20
	0x037E2BCC MOVZ W10, 0xB8
	0x037E2BD0 MADD X9, X26, X10, X9
	0x037E2BD4 ANDS W31, W22, 0x1
	0x037E2BD8 ADD X10, X9, 0xC8
	0x037E2BDC ADD X12, X9, 0x48
	0x037E2BE0 CSEL X10, X10, X12, NE
	0x037E2BE4 ADD X12, X9, 0xCC
	0x037E2BE8 ADD X9, X9, 0x4C
	0x037E2BEC LDR W11, [X8]
	0x037E2BF0 LDR W23, [X10]
	0x037E2BF4 CSEL X9, X12, X9, NE
	0x037E2BF8 LDR W24, [X9]
	0x037E2BFC ADD W9, W11, 0x1
	0x037E2C00 CMP W23, 0x1
	0x037E2C04 STR W9, [X8]
	0x037E2C08 B.LT 0x37E2CDC
	0x037E2C0C ADRP X9, 0x967000
	0x037E2C10 LDR X9, [X9 + 0x1A0]
	0x037E2C14 ANDS W31, W22, 0x1
	0x037E2C18 MOVZ W10, 0x28
	0x037E2C1C MOVZ W11, 0x30
	0x037E2C20 MOVZ W12, 0xC
	0x037E2C24 MOVZ W13, 0x10
	0x037E2C28 CSEL X10, X11, X10, NE
	0x037E2C2C CSEL X11, X13, X12, NE
	0x037E2C30 LDR X0, [X8, X10, LSL]
	0x037E2C34 LDR W8, [X8, X11, LSL]
	0x037E2C38 LDR X4, [X9]
	0x037E2C3C MOV W1, W24
	0x037E2C40 MOV W3, W23
	0x037E2C44 SUB W2, W8, W23
	0x037E2C48 BL 0x217B95C
	0x037E2C4C LDR X8, [X25]
	0x037E2C50 LDR X8, [X8 + 0xB8]
	0x037E2C54 LDR W9, [X8 + 0x8]
	0x037E2C58 CMP W9, 0x1
	0x037E2C5C B.LT 0x37E2CDC
	0x037E2C60 MOV X9, X31
	0x037E2C64 MOV X10, X31
	0x037E2C68 MOV W11, W20
	0x037E2C6C MOVZ W12, 0x4C
	0x037E2C70 MOVZ W13, 0xCC
	0x037E2C74 CMP X11, X10
	0x037E2C78 B.EQ 0x37E2CC8
	0x037E2C7C LDR X14, [X8 + 0x20]
	0x037E2C80 CBZ X14, 0x37E2F28
	0x037E2C84 LDR W15, [X14 + 0x18]
	0x037E2C88 CMP X10, X15
	0x037E2C8C B.CS 0x37E2F2C
	0x037E2C90 ANDS W31, W22, 0x1
	0x037E2C94 ADD X14, X14, X9
	0x037E2C98 CSEL X15, X13, X12, NE
	0x037E2C9C LDR W15, [X14, X15, LSL]
	0x037E2CA0 CMP W15, W24
	0x037E2CA4 B.LE 0x37E2CC8
	0x037E2CA8 TBZ X22, 0x0, 0x37E2CBC
	0x037E2CAC LDR W15, [X14 + 0xCC]
	0x037E2CB0 SUB W15, W15, W23
	0x037E2CB4 STR W15, [X14 + 0xCC]
	0x037E2CB8 B 0x37E2CC8
	0x037E2CBC LDR W15, [X14 + 0x4C]
	0x037E2CC0 SUB W15, W15, W23
	0x037E2CC4 STR W15, [X14 + 0x4C]
	0x037E2CC8 LDRSW X14, [X8 + 0x8]
	0x037E2CCC ADD X10, X10, 0x1
	0x037E2CD0 ADD X9, X9, 0xB8
	0x037E2CD4 CMP X10, X14
	0x037E2CD8 B.LT 0x37E2C74
	0x037E2CDC LDR X8, [X25]
	0x037E2CE0 LDR X8, [X8 + 0xB8]
	0x037E2CE4 LDR X9, [X8 + 0x20]
	0x037E2CE8 CBZ X9, 0x37E2F28
	0x037E2CEC TBZ X22, 0x0, 0x37E2D68
	0x037E2CF0 LDR W10, [X9 + 0x18]
	0x037E2CF4 CMP W10, W20
	0x037E2CF8 B.LS 0x37E2F2C
	0x037E2CFC LDR W10, [X8 + 0x10]
	0x037E2D00 MOVZ W11, 0xB8
	0x037E2D04 MADD X9, X26, X11, X9
	0x037E2D08 ADD X1, X8, 0x10
	0x037E2D0C SUB W10, W10, W23
	0x037E2D10 STR W10, [X9 + 0xCC]
	0x037E2D14 ADRP X9, 0x966000
	0x037E2D18 LDR X9, [X9 + 0x1E8]
	0x037E2D1C ADD X0, X8, 0x30
	0x037E2D20 MOVZ W3, 0xA
	0x037E2D24 MOV X2, X19
	0x037E2D28 LDR X4, [X9]
	0x037E2D2C BL 0x2174728
	0x037E2D30 LDR X8, [X25]
	0x037E2D34 LDR X8, [X8 + 0xB8]
	0x037E2D38 LDR X8, [X8 + 0x20]
	0x037E2D3C CBZ X8, 0x37E2F28
	0x037E2D40 LDR W9, [X8 + 0x18]
	0x037E2D44 CMP W9, W20
	0x037E2D48 B.LS 0x37E2F2C
	0x037E2D4C MOVZ W9, 0xB8
	0x037E2D50 MADD X8, X26, X9, X8
	0x037E2D54 LDR W9, [X8 + 0xC8]
	0x037E2D58 MOVZ W21, 0x4
	0x037E2D5C ADD W9, W9, 0x1
	0x037E2D60 STR W9, [X8 + 0xC8]
	0x037E2D64 B 0x37E2EF8
	0x037E2D68 LDR W10, [X9 + 0x18]
	0x037E2D6C CMP W10, W20
	0x037E2D70 B.LS 0x37E2F2C
	0x037E2D74 LDR W10, [X8 + 0xC]
	0x037E2D78 MOVZ W11, 0xB8
	0x037E2D7C MADD X9, X26, X11, X9
	0x037E2D80 ADD X1, X8, 0xC
	0x037E2D84 SUB W10, W10, W23
	0x037E2D88 STR W10, [X9 + 0x4C]
	0x037E2D8C ADRP X9, 0x966000
	0x037E2D90 LDR X9, [X9 + 0x1E8]
	0x037E2D94 ADD X0, X8, 0x28
	0x037E2D98 MOVZ W3, 0xA
	0x037E2D9C MOV X2, X19
	0x037E2DA0 LDR X4, [X9]
	0x037E2DA4 BL 0x2174728
	0x037E2DA8 LDR X8, [X25]
	0x037E2DAC LDR X8, [X8 + 0xB8]
	0x037E2DB0 LDR X9, [X8 + 0x20]
	0x037E2DB4 CBZ X9, 0x37E2F28
	0x037E2DB8 LDR W10, [X9 + 0x18]
	0x037E2DBC CMP W10, W20
	0x037E2DC0 B.LS 0x37E2F2C
	0x037E2DC4 MOVZ W10, 0xB8
	0x037E2DC8 MADD X9, X26, X10, X9
	0x037E2DCC LDR W10, [X9 + 0x48]
	0x037E2DD0 LDR X22, [X9 + 0x50]
	0x037E2DD4 ADD W10, W10, 0x1
	0x037E2DD8 STR W10, [X9 + 0x48]
	0x037E2DDC CBZ X22, 0x37E2EF4
	0x037E2DE0 LDR X8, [X8 + 0x18]
	0x037E2DE4 CBZ X8, 0x37E2F28
	0x037E2DE8 LDR W9, [X8 + 0x18]
	0x037E2DEC CMP W9, W20
	0x037E2DF0 B.LS 0x37E2F2C
	0x037E2DF4 ADD X8, X8, X26, 0x2, LSL
	0x037E2DF8 ADD X0, X8, 0x20
	0x037E2DFC BL 0x37D38F8
	0x037E2E00 ADRP X8, 0x963000
	0x037E2E04 LDR X8, [X8 + 0x48]
	0x037E2E08 MOV X2, X0
	0x037E2E0C MOV X4, X1
	0x037E2E10 ADD X0, X31, 0x18
	0x037E2E14 LDR X3, [X8]
	0x037E2E18 MOV X1, X2
	0x037E2E1C MOV X2, X4
	0x037E2E20 STP X31, X31, [X31 + 0x18]
	0x037E2E24 STR X31, [X31 + 0x28]
	0x037E2E28 BL 0x242CC30
	0x037E2E2C LDUR V0, [X31 + 0x18]
	0x037E2E30 LDR X8, [X31 + 0x28]
	0x037E2E34 ADRP X10, 0x966000
	0x037E2E38 STR V0, [X31]
	0x037E2E3C STR X8, [X31 + 0x10]
	0x037E2E40 LDR X8, [X22]
	0x037E2E44 LDR X10, [X10 + 0xAC8]
	0x037E2E48 LDRH W9, [X8 + 0x12E]
	0x037E2E4C LDR X1, [X10]
	0x037E2E50 CBZ X9, 0x37E2E74
	0x037E2E54 LDR X10, [X8 + 0xB0]
	0x037E2E58 ADD X10, X10, 0x8
	0x037E2E5C LDUR X11, [X10 - 0x8]
	0x037E2E60 CMP X11, X1
	0x037E2E64 B.EQ 0x37E2E84
	0x037E2E68 SUBS X9, X9, 0x1
	0x037E2E6C ADD X10, X10, 0x10
	0x037E2E70 B.NE 0x37E2E5C
	0x037E2E74 MOVZ W2, 0x3
	0x037E2E78 MOV X0, X22
	0x037E2E7C BL 0x1C5C788
	0x037E2E80 B 0x37E2E94
	0x037E2E84 LDR W9, [X10]
	0x037E2E88 ADD W9, W9, 0x3
	0x037E2E8C ADD X8, X8, W9, 0x4, SXTW
	0x037E2E90 ADD X0, X8, 0x138
	0x037E2E94 LDR V0, [X31]
	0x037E2E98 LDR X8, [X31 + 0x10]
	0x037E2E9C LDR X9, [X0]
	0x037E2EA0 ADD X1, X31, 0x30
	0x037E2EA4 STR V0, [X31 + 0x3]
	0x037E2EA8 STR X8, [X31 + 0x40]
	0x037E2EAC LDR X2, [X0 + 0x8]
	0x037E2EB0 MOV X0, X22
	0x037E2EB4 BLR X9
	0x037E2EB8 TBNZ X21, 0x0, 0x37E2EF4
	0x037E2EBC LDR X8, [X25]
	0x037E2EC0 LDR X8, [X8 + 0xB8]
	0x037E2EC4 LDR X8, [X8 + 0x20]
	0x037E2EC8 CBZ X8, 0x37E2F28
	0x037E2ECC LDR W9, [X8 + 0x18]
	0x037E2ED0 CMP W9, W20
	0x037E2ED4 B.LS 0x37E2F2C
	0x037E2ED8 MOVZ W9, 0xB8
	0x037E2EDC MADD X8, X26, X9, X8
	0x037E2EE0 LDRB W8, [X8 + 0x58]
	0x037E2EE4 CBZ W8, 0x37E2EF4
	0x037E2EE8 MOV W0, W20
	0x037E2EEC MOV W1, W31
	0x037E2EF0 BL 0x37E1288
	0x037E2EF4 MOVZ W21, 0x2
	0x037E2EF8 BL 0x37E3340
	0x037E2EFC MOV W0, W20
	0x037E2F00 MOV W1, W21
	0x037E2F04 MOV X2, X19
	0x037E2F08 BL 0x37E0F80
	0x037E2F0C LDP X20, X19, [X31 + 0x90]
	0x037E2F10 LDP X22, X21, [X31 + 0x80]
	0x037E2F14 LDP X24, X23, [X31 + 0x70]
	0x037E2F18 LDP X26, X25, [X31 + 0x60]
	0x037E2F1C LDR X30, [X31 + 0x50]
	0x037E2F20 ADD X31, X31, 0xA0
	0x037E2F24 RET
	0x037E2F28 BL 0x1C16F20
	0x037E2F2C BL 0x1C16F28
	0x037E2F30 SUB X31, X31, 0x70
	0x037E2F34 STP X30, X23, [X31 + 0x40]
	0x037E2F38 STP X22, X21, [X31 + 0x50]
	0x037E2F3C STP X20, X19, [X31 + 0x60]
	0x037E2F40 ADRP X20, 0xBFF000
	0x037E2F44 ADRP X23, 0x966000
	0x037E2F48 LDRB W8, [X20 + 0x2FC]
	0x037E2F4C LDR X23, [X23 + 0x948]
	0x037E2F50 MOV X21, X1
	0x037E2F54 MOV W19, W0
	0x037E2F58 TBNZ X8, 0x0, 0x37E2F88
	0x037E2F5C ADRP X0, 0x966000
	0x037E2F60 LDR X0, [X0 + 0x948]
	0x037E2F64 BL 0x1C16CF4
	0x037E2F68 ADRP X0, 0x967000
	0x037E2F6C LDR X0, [X0 + 0x180]
	0x037E2F70 BL 0x1C16CF4
	0x037E2F74 ADRP X0, 0x967000
	0x037E2F78 LDR X0, [X0 + 0x108]
	0x037E2F7C BL 0x1C16CF4
	0x037E2F80 MOVZ W8, 0x1
	0x037E2F84 STRB W8, [X20 + 0x2FC]
	0x037E2F88 ADD X1, X31, 0x28
	0x037E2F8C ADD X2, X31, 0x20
	0x037E2F90 ADD X3, X31, 0x18
	0x037E2F94 MOV X0, X21
	0x037E2F98 STP X31, X31, [X31 + 0x28]
	0x037E2F9C STR X31, [X31 + 0x38]
	0x037E2FA0 STP X31, X31, [X31 + 0x18]
	0x037E2FA4 BL 0x37E360C
	0x037E2FA8 LDR X8, [X23]
	0x037E2FAC LDR X8, [X8 + 0xB8]
	0x037E2FB0 LDR X8, [X8 + 0x20]
	0x037E2FB4 CBZ X8, 0x37E327C
	0x037E2FB8 LDR W9, [X8 + 0x18]
	0x037E2FBC CMP W9, W19
	0x037E2FC0 B.LS 0x37E3280
	0x037E2FC4 SXTW X22, W19
	0x037E2FC8 MOVZ W9, 0xB8
	0x037E2FCC MADD X9, X22, X9, X8
	0x037E2FD0 LDR W10, [X9 + 0xD0]!
	0x037E2FD4 MOV X20, X0
	0x037E2FD8 ADDS X31, X0, 0x1
	0x037E2FDC B.EQ 0x37E3100
	0x037E2FE0 SUB X11, X9, 0xB0
	0x037E2FE4 TBNZ X10, 0x1, 0x37E3194
	0x037E2FE8 LDRB W9, [X11]
	0x037E2FEC LDRB W10, [X31 + 0x28]
	0x037E2FF0 CMP W9, 0x0
	0x037E2FF4 CSET W11, NE
	0x037E2FF8 CMP W10, 0x0
	0x037E2FFC CSET W10, NE
	0x037E3000 EOR W10, W11, W10, 0x0
	0x037E3004 TBNZ X10, 0x0, 0x37E3060
	0x037E3008 CBZ W9, 0x37E3038
	0x037E300C MOVZ W9, 0xB8
	0x037E3010 MADD X8, X22, X9, X8
	0x037E3014 LDP X0, X1, [X8 + 0x28]
	0x037E3018 LDP X2, X3, [X31 + 0x30]
	0x037E301C MOV X4, X31
	0x037E3020 BL 0x37E48CC
	0x037E3024 TBNZ X0, 0x0, 0x37E3060
	0x037E3028 LDR X8, [X23]
	0x037E302C LDR X8, [X8 + 0xB8]
	0x037E3030 LDR X8, [X8 + 0x20]
	0x037E3034 CBZ X8, 0x37E327C
	0x037E3038 LDR W9, [X8 + 0x18]
	0x037E303C CMP W9, W19

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+80], X30
	003 Move [X31+88], X25
	004 Move [X31+96], X24
	005 Move [X31+104], X23
	006 Move [X31+112], X22
	007 Move [X31+120], X21
	008 Move [X31+128], X20
	009 Move [X31+136], X19
	010 Move X22, 0xC00000
	011 Move X23, 0x967000
	012 Move W8, [X22+762]
	013 Move X23, [X23+2376]
	014 Move W21, W2
	015 Move X19, X1
	016 Move W20, W0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {50}
	021 Move X0, 0x964000
	022 Move X0, [X0+824]
	023 Call 0x1C17CF4
	024 Move X0, 0x964000
	025 Move X0, [X0+816]
	026 Call 0x1C17CF4
	027 Move X0, 0x968000
	028 Move X0, [X0+296]
	029 Call 0x1C17CF4
	030 Move X0, 0x967000
	031 Move X0, [X0+2760]
	032 Call 0x1C17CF4
	033 Move X0, 0x968000
	034 Move X0, [X0+304]
	035 Call 0x1C17CF4
	036 Move X0, 0x968000
	037 Move X0, [X0+312]
	038 Call 0x1C17CF4
	039 Move X0, 0x967000
	040 Move X0, [X0+2376]
	041 Call 0x1C17CF4
	042 Move X0, 0x964000
	043 Move X0, [X0+72]
	044 Call 0x1C17CF4
	045 Move X0, 0x964000
	046 Move X0, [X0+2488]
	047 Call 0x1C17CF4
	048 Move W8, 1
	049 Move [X22+762], W8
	050 Move X8, [X23]
	051 Move X8, [X8+184]
	052 Move TEMP, X21
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfNotEqual {84}
	056 Move X0, [X8+48]
	057 Move W2, [X8+16]
	058 Move X8, 0x964000
	059 Move X8, [X8+816]
	060 Move X1, X19
	061 Move X3, [X8]
	062 Call 0x217AB8C, X0, X1, X2
	063 Add W31, W0, 1
	064 Move X8, [X23]
	065 Move X9, 0x964000
	066 Move W22, W0
	067 Move W2, W22
	068 Move X8, [X8+184]
	069 Move X9, [X9+824]
	070 Move X0, [X8+48]
	071 Move X3, [X9]
	072 Add X1, X8, 16
	073 Call ArrayHelpers.EraseAtWithCapacity, X0, X1, X2
	074 Move X8, [X23]
	075 Move X8, [X8+184]
	076 Move X9, [X8+32]
	077 Compare X9, 0
	078 JumpIfEqual {298}
	079 Move W10, [X9+24]
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Move W10, 184
	082 NotImplemented "Instruction SMADDL not yet implemented."
	083 Add X9, X9, 200
	084 Move X9, [X8+32]
	085 Compare X9, 0
	086 JumpIfEqual {298}
	087 Move W10, [X9+24]
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Move X10, 0x968000
	090 Move X0, [X8+40]
	091 Move X10, [X10+296]
	092 Move W8, 184
	093 NotImplemented "Instruction SMADDL not yet implemented."
	094 Move W3, [X8+72]
	095 Move W2, [X8+76]
	096 Move X4, [X10]
	097 Move X1, X19
	098 Call 0x217AC24, X0, X1, X2, X3
	099 Add W31, W0, 1
	100 Move X8, [X23]
	101 Move W22, W0
	102 Move W2, W22
	103 Move X8, [X8+184]
	104 Move W9, [X8]
	105 Move X0, [X8+40]
	106 Add X1, X8, 12
	107 Add W9, W9, 1
	108 Move [X8], W9
	109 Move X9, 0x964000
	110 Move X9, [X9+824]
	111 Move X3, [X9]
	112 Call ArrayHelpers.EraseAtWithCapacity, X0, X1, X2
	113 Move X8, [X23]
	114 Move X8, [X8+184]
	115 Move X9, [X8+32]
	116 Compare X9, 0
	117 JumpIfEqual {298}
	118 Move W10, [X9+24]
	119 NotImplemented "Instruction CMP not yet implemented."
	120 Move W10, W20
	121 Move X10, W10
	122 Move W11, 184
	123 NotImplemented "Instruction MADD not yet implemented."
	124 Add X9, X9, 72
	125 Move W10, [X9]
	126 Subtract W10, W10, 1
	127 Move [X9], W10
	128 Move W9, [X8+8]
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Move X10, [X23]
	131 Move X9, X31
	132 Move W11, 204
	133 Move X8, [X8+32]
	134 Compare X8, 0
	135 JumpIfEqual {298}
	136 Move W12, [X8+24]
	137 NotImplemented "Instruction CMP not yet implemented."
	138 Add X8, X8, X11
	139 Subtract X12, X8, 128
	140 And W31, W21, 1
	141 NotImplemented "Instruction CSEL not yet implemented."
	142 Move W13, [X13]
	143 NotImplemented "Instruction CMP not yet implemented."
	144 And W31, W21, 1
	145 NotImplemented "Instruction CSEL not yet implemented."
	146 Move W12, [X8]
	147 Subtract W12, W12, 1
	148 Move [X8], W12
	149 Move X8, [X10+184]
	150 Add X9, X9, 1
	151 Add X11, X11, 184
	152 NotImplemented "Instruction LDRSW not yet implemented."
	153 NotImplemented "Instruction CMP not yet implemented."
	154 Move TEMP, X21
	155 And TEMP, TEMP, 1
	156 Compare TEMP, 1
	157 JumpIfEqual {288}
	158 Move X8, [X23]
	159 Move X8, [X8+184]
	160 Move X0, X8
	161 Add X0, X0, 56
	162 Move W9, [X0]
	163 NotImplemented "Instruction CMP not yet implemented."
	164 Move X24, 0x968000
	165 Move X25, 0x968000
	166 Move X24, [X24+312]
	167 Move X25, [X25+304]
	168 Move W8, W20
	169 Move W21, W31
	170 Move X22, W8
	171 Move X2, [X24]
	172 Move W1, W21
	173 Call InlinedArray`1<OngoingAccountSelection>.get_Item, X0, X1
	174 Move X8, [X23]
	175 Move X8, [X8+184]
	176 Move X9, [X8+24]
	177 Compare X9, 0
	178 JumpIfEqual {298}
	179 Move W10, [X9+24]
	180 NotImplemented "Instruction CMP not yet implemented."
	181 Add X9, X9, X22
	182 Move W9, [X9+32]
	183 NotImplemented "Instruction CMP not yet implemented."
	184 Move X2, [X24]
	185 Add X0, X8, 56
	186 Move W1, W21
	187 Call InlinedArray`1<OngoingAccountSelection>.get_Item, X0, X1
	188 NotImplemented "Instruction CMP not yet implemented."
	189 Move X8, [X23]
	190 Move X2, [X25]
	191 Move W1, W21
	192 Move X8, [X8+184]
	193 Add X0, X8, 56
	194 Call InlinedArray`1<OngoingAccountSelection>.RemoveAtByMovingTailWithCapacity, X0, X1
	195 Subtract W21, W21, 1
	196 Move X8, [X23]
	197 Add W21, W21, 1
	198 Move X8, [X8+184]
	199 Move X0, X8
	200 Add X0, X0, 56
	201 Move W9, [X0]
	202 NotImplemented "Instruction CMP not yet implemented."
	203 Move X9, [X8+32]
	204 Compare X9, 0
	205 JumpIfEqual {298}
	206 Move W10, [X9+24]
	207 NotImplemented "Instruction CMP not yet implemented."
	208 Move X22, W20
	209 Move W10, 184
	210 NotImplemented "Instruction MADD not yet implemented."
	211 Move X21, [X9+80]
	212 Compare X21, 0
	213 JumpIfEqual {284}
	214 Move X8, [X8+24]
	215 Compare X8, 0
	216 JumpIfEqual {298}
	217 Move W9, [X8+24]
	218 NotImplemented "Instruction CMP not yet implemented."
	219 Add X8, X8, X22
	220 Add X0, X8, 32
	221 Call InputUser.get_pairedDevices, X0
	222 Move X8, 0x964000
	223 Move X8, [X8+72]
	224 Move X2, X0
	225 Move X4, X1
	226 Add X0, X31, 56
	227 Move X3, [X8]
	228 Move X1, X2
	229 Move X2, X4
	230 Move [X31+56], X31
	231 Move [X31+64], X31
	232 Move [X31+72], X31
	233 Call Nullable`1<ReadOnlyArray`1<Object>>..ctor, X0, X1
	234 NotImplemented "Instruction LDUR not yet implemented."
	235 Move X8, [X31+72]
	236 Move X10, 0x967000
	237 Move [X31+2], V0
	238 Move [X31+48], X8
	239 Move X8, [X21]
	240 Move X10, [X10+2760]
	241 NotImplemented "Instruction LDRH not yet implemented."
	242 Move X1, [X10]
	243 Compare X9, 0
	244 JumpIfEqual {251}
	245 Move X10, [X8+176]
	246 Add X10, X10, 8
	247 NotImplemented "Instruction LDUR not yet implemented."
	248 NotImplemented "Instruction CMP not yet implemented."
	249 Subtract X9, X9, 1
	250 Add X10, X10, 16
	251 Move W2, 3
	252 Move X0, X21
	253 Call 0x1C5D788
	254 Move W9, [X10]
	255 Add W9, W9, 3
	256 Add X8, X8, W9
	257 Add X0, X8, 312
	258 Move V0, [X31+2]
	259 Move X8, [X31+48]
	260 Move X9, [X0]
	261 Add X1, X31, 0
	262 Move [X31], V0
	263 Move [X31+16], X8
	264 Move X2, [X0+8]
	265 Move X0, X21
	266 NotImplemented "Instruction BLR not yet implemented."
	267 Move X8, [X23]
	268 Move X8, [X8+184]
	269 Move X8, [X8+24]
	270 Compare X8, 0
	271 JumpIfEqual {298}
	272 Move W9, [X8+24]
	273 NotImplemented "Instruction CMP not yet implemented."
	274 Add X8, X8, X22
	275 Add X0, X8, 32
	276 Add X8, X31, 0
	277 Call InputUser.get_controlScheme, X0
	278 Move W8, [X31]
	279 Compare W8, 0
	280 JumpIfEqual {284}
	281 Move W0, W20
	282 Move W1, W31
	283 Call InputUser.UpdateControlSchemeMatch, X0, X1
	284 Move W1, 3
	285 Move W0, W20
	286 Move X2, X19
	287 Call InputUser.Notify, X0, X1, X2
	288 Move X20, [X31+128]
	289 Move X19, [X31+136]
	290 Move X22, [X31+112]
	291 Move X21, [X31+120]
	292 Move X24, [X31+96]
	293 Move X23, [X31+104]
	294 Move X30, [X31+80]
	295 Move X25, [X31+88]
	296 Add X31, X31, 144
	297 Return 
	298 Call 0x1C17F20
	299 Call 0x1C17F28

Method: System.Void UpdateControlSchemeMatch(System.Int32 userIndex, System.Boolean autoPairMissing = False)

Disassembly:
	0x037E2288 ADD X1, X31, 0x6C
	0x037E228C MOV W2, W19
	0x037E2290 LDR X8, [X8 + 0xB8]
	0x037E2294 LDR W9, [X8 + 0x8]
	0x037E2298 STR W9, [X31 + 0x6C]
	0x037E229C LDR X0, [X8 + 0x18]
	0x037E22A0 BL 0x2177D40
	0x037E22A4 LDR X8, [X22]
	0x037E22A8 LDR X3, [X21]
	0x037E22AC MOV W2, W19
	0x037E22B0 LDR X8, [X8 + 0xB8]
	0x037E22B4 LDR X0, [X8 + 0x20]
	0x037E22B8 ADD X1, X8, 0x8
	0x037E22BC BL 0x2178790
	0x037E22C0 LDR X8, [X22]
	0x037E22C4 LDR X8, [X8 + 0xB8]
	0x037E22C8 LDR W8, [X8 + 0x8]
	0x037E22CC CBNZ W8, 0x37E22D8
	0x037E22D0 BL 0x37E34B4
	0x037E22D4 BL 0x37E3540
	0x037E22D8 LDP X20, X19, [X31 + 0x100]
	0x037E22DC LDP X22, X21, [X31 + 0xF0]
	0x037E22E0 LDP X24, X23, [X31 + 0xE0]
	0x037E22E4 LDP X29, X30, [X31 + 0xD0]
	0x037E22E8 ADD X31, X31, 0x110
	0x037E22EC RET
	0x037E22F0 BL 0x1C16F20
	0x037E22F4 BL 0x1C16F28
	0x037E22F8 SUB X31, X31, 0x80
	0x037E22FC STP X30, X27, [X31 + 0x30]
	0x037E2300 STP X26, X25, [X31 + 0x40]
	0x037E2304 STP X24, X23, [X31 + 0x50]
	0x037E2308 STP X22, X21, [X31 + 0x60]
	0x037E230C STP X20, X19, [X31 + 0x70]
	0x037E2310 ADRP X21, 0xBFF000
	0x037E2314 ADRP X20, 0x939000
	0x037E2318 LDRB W8, [X21 + 0x2EC]
	0x037E231C LDR X20, [X20 + 0x270]
	0x037E2320 MOV X19, X0
	0x037E2324 TBNZ X8, 0x0, 0x37E239C
	0x037E2328 ADRP X0, 0x967000
	0x037E232C LDR X0, [X0 + 0x150]
	0x037E2330 BL 0x1C16CF4
	0x037E2334 ADRP X0, 0x939000
	0x037E2338 LDR X0, [X0 + 0xF10]
	0x037E233C BL 0x1C16CF4
	0x037E2340 ADRP X0, 0x939000
	0x037E2344 LDR X0, [X0 + 0xF18]
	0x037E2348 BL 0x1C16CF4
	0x037E234C ADRP X0, 0x939000
	0x037E2350 LDR X0, [X0 + 0xF20]
	0x037E2354 BL 0x1C16CF4
	0x037E2358 ADRP X0, 0x964000
	0x037E235C LDR X0, [X0 + 0x760]
	0x037E2360 BL 0x1C16CF4
	0x037E2364 ADRP X0, 0x964000
	0x037E2368 LDR X0, [X0 + 0x768]
	0x037E236C BL 0x1C16CF4
	0x037E2370 ADRP X0, 0x939000
	0x037E2374 LDR X0, [X0 + 0x270]
	0x037E2378 BL 0x1C16CF4
	0x037E237C ADRP X0, 0x966000
	0x037E2380 LDR X0, [X0 + 0x948]
	0x037E2384 BL 0x1C16CF4
	0x037E2388 ADRP X0, 0x939000
	0x037E238C LDR X0, [X0 + 0xF30]
	0x037E2390 BL 0x1C16CF4
	0x037E2394 MOVZ W8, 0x1
	0x037E2398 STRB W8, [X21 + 0x2EC]
	0x037E239C LDR X0, [X20]
	0x037E23A0 STP X31, X31, [X31 + 0x18]
	0x037E23A4 STR X31, [X31 + 0x28]
	0x037E23A8 ADRP X20, 0x939000
	0x037E23AC LDR W8, [X0 + 0xE0]
	0x037E23B0 LDR W22, [X19]
	0x037E23B4 LDR X20, [X20 + 0xF30]
	0x037E23B8 CBNZ W8, 0x37E23C0
	0x037E23BC BL 0x1C16DFC
	0x037E23C0 ADRP X23, 0x939000
	0x037E23C4 ADRP X24, 0x939000
	0x037E23C8 ADRP X25, 0x966000
	0x037E23CC ADRP X26, 0x967000
	0x037E23D0 ADRP X27, 0x964000
	0x037E23D4 ADRP X21, 0x939000
	0x037E23D8 LDR X23, [X23 + 0xF18]
	0x037E23DC LDR X24, [X24 + 0xF20]
	0x037E23E0 LDR X25, [X25 + 0x948]
	0x037E23E4 LDR X26, [X26 + 0x150]
	0x037E23E8 LDR X27, [X27 + 0x760]
	0x037E23EC LDR X21, [X21 + 0xF10]
	0x037E23F0 MOV X0, X31
	0x037E23F4 BL 0x376DAD4
	0x037E23F8 LDR X9, [X20]
	0x037E23FC STP X0, X1, [X31 + 0x8]
	0x037E2400 ADD X8, X31, 0x18
	0x037E2404 ADD X0, X31, 0x8
	0x037E2408 MOV X1, X9
	0x037E240C BL 0x24FD990
	0x037E2410 LDR X1, [X23]
	0x037E2414 ADD X0, X31, 0x18
	0x037E2418 BL 0x2BC496C
	0x037E241C TBZ X0, 0x0, 0x37E2464
	0x037E2420 LDR X1, [X24]
	0x037E2424 ADD X0, X31, 0x18
	0x037E2428 BL 0x2BC4998
	0x037E242C LDR X8, [X25]
	0x037E2430 MOV X20, X0
	0x037E2434 LDR X3, [X26]
	0x037E2438 LDR X8, [X8 + 0xB8]
	0x037E243C LDR X0, [X8 + 0x28]
	0x037E2440 LDR W1, [X8 + 0xC]
	0x037E2444 MOV X2, X20
	0x037E2448 BL 0x21760F0
	0x037E244C TBNZ X0, 0x0, 0x37E2410
	0x037E2450 LDR X2, [X27]
	0x037E2454 MOV X0, X19
	0x037E2458 MOV X1, X20
	0x037E245C BL 0x2DFACEC
	0x037E2460 B 0x37E2410
	0x037E2464 LDR X1, [X21]
	0x037E2468 ADD X0, X31, 0x18
	0x037E246C BL 0x2BC4968
	0x037E2470 LDR W8, [X19]
	0x037E2474 LDP X20, X19, [X31 + 0x70]
	0x037E2478 LDP X24, X23, [X31 + 0x50]
	0x037E247C LDP X26, X25, [X31 + 0x40]
	0x037E2480 SUB W0, W8, W22
	0x037E2484 LDP X22, X21, [X31 + 0x60]
	0x037E2488 LDP X30, X27, [X31 + 0x30]
	0x037E248C ADD X31, X31, 0x80
	0x037E2490 RET
	0x037E2494 B 0x37E24A0
	0x037E2498 B 0x37E24A0
	0x037E249C B 0x37E24A0
	0x037E24A0 MOV X23, X21
	0x037E24A4 MOV X20, X0
	0x037E24A8 CMP W1, 0x1
	0x037E24AC B.NE 0x37E24D8
	0x037E24B0 MOV X0, X20
	0x037E24B4 BL 0x3EB1AD0
	0x037E24B8 LDR X21, [X0]
	0x037E24BC BL 0x3EB1AE0
	0x037E24C0 LDR X1, [X23]
	0x037E24C4 ADD X0, X31, 0x18
	0x037E24C8 BL 0x2BC4968
	0x037E24CC CBZ X21, 0x37E2470
	0x037E24D0 MOV X0, X21
	0x037E24D4 BL 0x1C16F18
	0x037E24D8 MOV X21, X31
	0x037E24DC B 0x37E24E4
	0x037E24E0 MOV X20, X0
	0x037E24E4 LDR X1, [X23]
	0x037E24E8 ADD X0, X31, 0x18
	0x037E24EC BL 0x2BC4968
	0x037E24F0 CBNZ X21, 0x37E24FC
	0x037E24F4 MOV X0, X20
	0x037E24F8 BL 0x1D2C690
	0x037E24FC MOV X0, X21
	0x037E2500 BL 0x1C16F18
	0x037E2504 BL 0x1990590
	0x037E2508 STR X30, [X31 - 0x20]!
	0x037E250C STP X20, X19, [X31 + 0x10]
	0x037E2510 ADRP X20, 0xBFF000
	0x037E2514 LDRB W8, [X20 + 0x2ED]
	0x037E2518 MOV X19, X0
	0x037E251C TBNZ X8, 0x0, 0x37E2540
	0x037E2520 ADRP X0, 0x966000
	0x037E2524 LDR X0, [X0 + 0x948]
	0x037E2528 BL 0x1C16CF4
	0x037E252C ADRP X0, 0x967000
	0x037E2530 LDR X0, [X0 + 0x158]
	0x037E2534 BL 0x1C16CF4
	0x037E2538 MOVZ W8, 0x1
	0x037E253C STRB W8, [X20 + 0x2ED]
	0x037E2540 CBZ X19, 0x37E25B4
	0x037E2544 MOV X0, X19
	0x037E2548 BL 0x37E2604
	0x037E254C ADDS W31, W0, 0x1
	0x037E2550 B.EQ 0x37E25A0
	0x037E2554 ADRP X8, 0x966000
	0x037E2558 LDR X8, [X8 + 0x948]
	0x037E255C LDR X8, [X8]
	0x037E2560 LDR X8, [X8 + 0xB8]
	0x037E2564 LDR X8, [X8 + 0x18]
	0x037E2568 CBZ X8, 0x37E25FC
	0x037E256C LDR W9, [X8 + 0x18]
	0x037E2570 CMP W0, W9
	0x037E2574 B.CS 0x37E2600
	0x037E2578 ADRP X9, 0x967000
	0x037E257C LDR X9, [X9 + 0x158]
	0x037E2580 ADD X8, X8, W0, 0x2, SXTW
	0x037E2584 LDR W1, [X8 + 0x20]
	0x037E2588 ADD X0, X31, 0x8
	0x037E258C LDR X2, [X9]
	0x037E2590 STR X31, [X31 + 0x8]
	0x037E2594 BL 0x2433678
	0x037E2598 LDR X0, [X31 + 0x8]
	0x037E259C B 0x37E25A8
	0x037E25A0 MOV X0, X31
	0x037E25A4 STR X31, [X31 + 0x8]
	0x037E25A8 LDP X20, X19, [X31 + 0x10]
	0x037E25AC LDR X30, [X31], #0x20
	0x037E25B0 RET
	0x037E25B4 ADRP X0, 0x916000
	0x037E25B8 LDR X0, [X0 + 0x528]
	0x037E25BC BL 0x1C16D08
	0x037E25C0 BL 0x1C16F10
	0x037E25C4 MOV X19, X0
	0x037E25C8 ADRP X0, 0x939000
	0x037E25CC LDR X0, [X0 + 0xD20]
	0x037E25D0 BL 0x1C16D08
	0x037E25D4 MOV X1, X0
	0x037E25D8 MOV X0, X19
	0x037E25DC MOV X2, X31
	0x037E25E0 BL 0x330E100
	0x037E25E4 ADRP X0, 0x967000
	0x037E25E8 LDR X0, [X0 + 0x160]
	0x037E25EC BL 0x1C16D08
	0x037E25F0 MOV X1, X0
	0x037E25F4 MOV X0, X19
	0x037E25F8 BL 0x1C16DEC
	0x037E25FC BL 0x1C16F20
	0x037E2600 BL 0x1C16F28
	0x037E2604 STR X30, [X31 - 0x30]!
	0x037E2608 STP X22, X21, [X31 + 0x10]
	0x037E260C STP X20, X19, [X31 + 0x20]
	0x037E2610 ADRP X22, 0xBFF000
	0x037E2614 ADRP X20, 0x966000
	0x037E2618 ADRP X21, 0x963000
	0x037E261C LDRB W8, [X22 + 0x2F8]
	0x037E2620 LDR X20, [X20 + 0x948]
	0x037E2624 LDR X21, [X21 + 0x330]
	0x037E2628 MOV X19, X0
	0x037E262C TBNZ X8, 0x0, 0x37E2650
	0x037E2630 ADRP X0, 0x963000
	0x037E2634 LDR X0, [X0 + 0x330]
	0x037E2638 BL 0x1C16CF4
	0x037E263C ADRP X0, 0x966000
	0x037E2640 LDR X0, [X0 + 0x948]
	0x037E2644 BL 0x1C16CF4
	0x037E2648 MOVZ W8, 0x1
	0x037E264C STRB W8, [X22 + 0x2F8]
	0x037E2650 LDR X8, [X20]
	0x037E2654 LDR X3, [X21]
	0x037E2658 MOV X1, X19
	0x037E265C LDR X8, [X8 + 0xB8]
	0x037E2660 LDR X0, [X8 + 0x28]
	0x037E2664 LDR W2, [X8 + 0xC]
	0x037E2668 BL 0x2179B8C
	0x037E266C ADDS W31, W0, 0x1
	0x037E2670 B.EQ 0x37E26D4
	0x037E2674 LDR X9, [X20]
	0x037E2678 LDR X10, [X9 + 0xB8]
	0x037E267C LDRSW X9, [X10 + 0x8]
	0x037E2680 CMP W9, 0x1
	0x037E2684 B.LT 0x37E26D4
	0x037E2688 LDR X10, [X10 + 0x20]
	0x037E268C MOV W8, W0
	0x037E2690 MOV X0, X31
	0x037E2694 ADD X11, X10, 0x4C
	0x037E2698 CBZ X10, 0x37E26E8
	0x037E269C LDR W12, [X10 + 0x18]
	0x037E26A0 CMP X0, X12
	0x037E26A4 B.CS 0x37E26EC
	0x037E26A8 LDR W12, [X11]
	0x037E26AC CMP W12, W8
	0x037E26B0 B.GT 0x37E26C4
	0x037E26B4 LDUR W13, [X11 - 0x4]
	0x037E26B8 ADD W12, W13, W12
	0x037E26BC CMP W8, W12
	0x037E26C0 B.LT 0x37E26D8
	0x037E26C4 ADD X0, X0, 0x1
	0x037E26C8 CMP X0, X9
	0x037E26CC ADD X11, X11, 0xB8
	0x037E26D0 B.LT 0x37E2698
	0x037E26D4 MOVN W0, 0x0
	0x037E26D8 LDP X20, X19, [X31 + 0x20]
	0x037E26DC LDP X22, X21, [X31 + 0x10]
	0x037E26E0 LDR X30, [X31], #0x30
	0x037E26E4 RET
	0x037E26E8 BL 0x1C16F20
	0x037E26EC BL 0x1C16F28
	0x037E26F0 SUB X31, X31, 0x30
	0x037E26F4 STP X30, X21, [X31 + 0x10]
	0x037E26F8 STP X20, X19, [X31 + 0x20]
	0x037E26FC ADRP X21, 0xBFF000
	0x037E2700 LDRB W8, [X21 + 0x2EE]
	0x037E2704 MOV X19, X1
	0x037E2708 MOV X20, X0
	0x037E270C TBNZ X8, 0x0, 0x37E2730
	0x037E2710 ADRP X0, 0x966000
	0x037E2714 LDR X0, [X0 + 0x948]
	0x037E2718 BL 0x1C16CF4
	0x037E271C ADRP X0, 0x967000
	0x037E2720 LDR X0, [X0 + 0x158]
	0x037E2724 BL 0x1C16CF4
	0x037E2728 MOVZ W8, 0x1
	0x037E272C STRB W8, [X21 + 0x2EE]
	0x037E2730 MOV X0, X20
	0x037E2734 MOV X1, X19
	0x037E2738 MOV X2, X31
	0x037E273C MOV X3, X31
	0x037E2740 MOV X4, X31
	0x037E2744 BL 0x37E4548
	0x037E2748 TBNZ X0, 0x0, 0x37E27C4
	0x037E274C MOV X0, X20
	0x037E2750 MOV X1, X19
	0x037E2754 BL 0x37E2828
	0x037E2758 ADDS W31, W0, 0x1
	0x037E275C B.EQ 0x37E27AC
	0x037E2760 ADRP X8, 0x966000
	0x037E2764 LDR X8, [X8 + 0x948]
	0x037E2768 LDR X8, [X8]
	0x037E276C LDR X8, [X8 + 0xB8]
	0x037E2770 LDR X8, [X8 + 0x18]
	0x037E2774 CBZ X8, 0x37E2820
	0x037E2778 LDR W9, [X8 + 0x18]
	0x037E277C CMP W0, W9
	0x037E2780 B.CS 0x37E2824
	0x037E2784 ADRP X9, 0x967000
	0x037E2788 LDR X9, [X9 + 0x158]
	0x037E278C ADD X8, X8, W0, 0x2, SXTW
	0x037E2790 LDR W1, [X8 + 0x20]
	0x037E2794 ADD X0, X31, 0x8
	0x037E2798 LDR X2, [X9]
	0x037E279C STR X31, [X31 + 0x8]
	0x037E27A0 BL 0x2433678
	0x037E27A4 LDR X0, [X31 + 0x8]
	0x037E27A8 B 0x37E27B4
	0x037E27AC MOV X0, X31
	0x037E27B0 STR X31, [X31 + 0x8]
	0x037E27B4 LDP X20, X19, [X31 + 0x20]
	0x037E27B8 LDP X30, X21, [X31 + 0x10]
	0x037E27BC ADD X31, X31, 0x30
	0x037E27C0 RET
	0x037E27C4 ADRP X0, 0x919000
	0x037E27C8 LDR X0, [X0 + 0x578]
	0x037E27CC BL 0x1C16D08
	0x037E27D0 BL 0x1C16F10
	0x037E27D4 MOV X19, X0
	0x037E27D8 ADRP X0, 0x967000
	0x037E27DC LDR X0, [X0 + 0x168]
	0x037E27E0 BL 0x1C16D08
	0x037E27E4 MOV X20, X0
	0x037E27E8 ADRP X0, 0x967000
	0x037E27EC LDR X0, [X0 + 0x170]
	0x037E27F0 BL 0x1C16D08
	0x037E27F4 MOV X2, X0
	0x037E27F8 MOV X0, X19
	0x037E27FC MOV X1, X20
	0x037E2800 MOV X3, X31
	0x037E2804 BL 0x330E16C
	0x037E2808 ADRP X0, 0x967000
	0x037E280C LDR X0, [X0 + 0x178]
	0x037E2810 BL 0x1C16D08
	0x037E2814 MOV X1, X0
	0x037E2818 MOV X0, X19
	0x037E281C BL 0x1C16DEC
	0x037E2820 BL 0x1C16F20
	0x037E2824 BL 0x1C16F28
	0x037E2828 STP X30, X23, [X31 - 0x30]!
	0x037E282C STP X22, X21, [X31 + 0x10]
	0x037E2830 STP X20, X19, [X31 + 0x20]
	0x037E2834 ADRP X21, 0xBFF000
	0x037E2838 ADRP X22, 0x966000
	0x037E283C LDRB W8, [X21 + 0x2F7]
	0x037E2840 LDR X22, [X22 + 0x948]
	0x037E2844 MOV X19, X1
	0x037E2848 MOV X20, X0
	0x037E284C TBNZ X8, 0x0, 0x37E287C
	0x037E2850 ADRP X0, 0x966000
	0x037E2854 LDR X0, [X0 + 0x948]
	0x037E2858 BL 0x1C16CF4
	0x037E285C ADRP X0, 0x967000
	0x037E2860 LDR X0, [X0 + 0x180]
	0x037E2864 BL 0x1C16CF4
	0x037E2868 ADRP X0, 0x967000
	0x037E286C LDR X0, [X0 + 0x108]
	0x037E2870 BL 0x1C16CF4
	0x037E2874 MOVZ W8, 0x1
	0x037E2878 STRB W8, [X21 + 0x2F7]
	0x037E287C LDR X8, [X22]
	0x037E2880 LDR X9, [X8 + 0xB8]
	0x037E2884 LDR W10, [X9 + 0x8]
	0x037E2888 CMP W10, 0x1
	0x037E288C B.LT 0x37E28EC
	0x037E2890 MOV X23, X31
	0x037E2894 MOV X21, X31
	0x037E2898 LDR X9, [X9 + 0x20]
	0x037E289C CBZ X9, 0x37E2904
	0x037E28A0 LDR W10, [X9 + 0x18]
	0x037E28A4 CMP X21, X10
	0x037E28A8 B.CS 0x37E2908
	0x037E28AC ADD X9, X9, X23
	0x037E28B0 LDRB W10, [X9 + 0x20]
	0x037E28B4 CBZ W10, 0x37E28D4
	0x037E28B8 LDP X0, X1, [X9 + 0x28]
	0x037E28BC MOV X2, X20
	0x037E28C0 MOV X3, X19
	0x037E28C4 MOV X4, X31
	0x037E28C8 BL 0x37E4548
	0x037E28CC TBNZ X0, 0x0, 0x37E28F0
	0x037E28D0 LDR X8, [X22]
	0x037E28D4 LDR X9, [X8 + 0xB8]
	0x037E28D8 ADD X21, X21, 0x1
	0x037E28DC ADD X23, X23, 0xB8
	0x037E28E0 LDRSW X10, [X9 + 0x8]
	0x037E28E4 CMP X21, X10
	0x037E28E8 B.LT 0x37E2898
	0x037E28EC MOVN W21, 0x0
	0x037E28F0 MOV W0, W21
	0x037E28F4 LDP X20, X19, [X31 + 0x20]
	0x037E28F8 LDP X22, X21, [X31 + 0x10]
	0x037E28FC LDP X30, X23, [X31], #0x30
	0x037E2900 RET
	0x037E2904 BL 0x1C16F20
	0x037E2908 BL 0x1C16F28
	0x037E290C SUB X31, X31, 0xF0
	0x037E2910 STR X30, [X31 + 0xC0]
	0x037E2914 STP X22, X21, [X31 + 0xD0]
	0x037E2918 STP X20, X19, [X31 + 0xE0]
	0x037E291C ADRP X22, 0xBFF000
	0x037E2920 ADRP X20, 0x966000
	0x037E2924 ADRP X21, 0x967000
	0x037E2928 ADRP X19, 0x967000
	0x037E292C LDRB W8, [X22 + 0x2F3]
	0x037E2930 LDR X20, [X20 + 0x948]
	0x037E2934 LDR X21, [X21 + 0x188]
	0x037E2938 LDR X19, [X19 + 0x190]
	0x037E293C TBNZ X8, 0x0, 0x37E296C
	0x037E2940 ADRP X0, 0x967000
	0x037E2944 LDR X0, [X0 + 0x188]
	0x037E2948 BL 0x1C16CF4
	0x037E294C ADRP X0, 0x967000
	0x037E2950 LDR X0, [X0 + 0x190]
	0x037E2954 BL 0x1C16CF4
	0x037E2958 ADRP X0, 0x966000
	0x037E295C LDR X0, [X0 + 0x948]
	0x037E2960 BL 0x1C16CF4
	0x037E2964 MOVZ W8, 0x1
	0x037E2968 STRB W8, [X22 + 0x2F3]
	0x037E296C LDR X8, [X20]
	0x037E2970 ADD X1, X31, 0xCC
	0x037E2974 MOVZ W3, 0xA
	0x037E2978 LDR X8, [X8 + 0xB8]
	0x037E297C LDP W9, W10, [X8 + 0x4]
	0x037E2980 ADD X0, X8, 0x18
	0x037E2984 ADD W2, W9, 0x1
	0x037E2988 STR W2, [X8 + 0x4]
	0x037E298C LDR X4, [X21]
	0x037E2990 STR W10, [X31 + 0xCC]
	0x037E2994 BL 0x2174490
	0x037E2998 LDR X8, [X20]
	0x037E299C LDR X19, [X19]
	0x037E29A0 ADD X0, X31, 0x8
	0x037E29A4 MOVZ W2, 0xB8
	0x037E29A8 LDR X8, [X8 + 0xB8]
	0x037E29AC MOV W1, W31
	0x037E29B0 ADD X20, X8, 0x20
	0x037E29B4 ADD X21, X8, 0x8
	0x037E29B8 BL 0x3EB1B10
	0x037E29BC ADD X2, X31, 0x8
	0x037E29C0 MOVZ W3, 0xA
	0x037E29C4 MOV X0, X20
	0x037E29C8 MOV X1, X21
	0x037E29CC MOV X4, X19
	0x037E29D0 BL 0x2175590
	0x037E29D4 MOV W1, W31
	0x037E29D8 MOV X2, X31
	0x037E29DC MOV W19, W0
	0x037E29E0 BL 0x37E0F80
	0x037E29E4 MOV W0, W19
	0x037E29E8 LDP X20, X19, [X31 + 0xE0]
	0x037E29EC LDP X22, X21, [X31 + 0xD0]
	0x037E29F0 LDR X30, [X31 + 0xC0]
	0x037E29F4 ADD X31, X31, 0xF0
	0x037E29F8 RET
	0x037E29FC CMP W0, W1
	0x037E2A00 CSET W0, NE
	0x037E2A04 RET
	0x037E2A08 STR X30, [X31 - 0x30]!
	0x037E2A0C STP X22, X21, [X31 + 0x10]
	0x037E2A10 STP X20, X19, [X31 + 0x20]
	0x037E2A14 ADRP X22, 0xBFF000
	0x037E2A18 LDRB W8, [X22 + 0x2F1]
	0x037E2A1C MOV W21, W2
	0x037E2A20 MOV X19, X1
	0x037E2A24 MOV W20, W0
	0x037E2A28 TBNZ X8, 0x0, 0x37E2A4C
	0x037E2A2C ADRP X0, 0x967000
	0x037E2A30 LDR X0, [X0 + 0x198]
	0x037E2A34 BL 0x1C16CF4
	0x037E2A38 ADRP X0, 0x966000
	0x037E2A3C LDR X0, [X0 + 0x948]
	0x037E2A40 BL 0x1C16CF4
	0x037E2A44 MOVZ W8, 0x1
	0x037E2A48 STRB W8, [X22 + 0x2F1]
	0x037E2A4C TBNZ X21, 0x0, 0x37E2A6C
	0x037E2A50 MOV W0, W20
	0x037E2A54 MOV X1, X19
	0x037E2A58 BL 0x37E2F30
	0x037E2A5C MOV X8, X0
	0x037E2A60 MOV W0, W31
	0x037E2A64 TBNZ X21, 0x1, 0x37E2B08
	0x037E2A68 TBNZ X8, 0x1, 0x37E2B08
	0x037E2A6C MOV X0, X19
	0x037E2A70 BL 0x37E3284
	0x037E2A74 TBZ X0, 0x0, 0x37E2B04
	0x037E2A78 ADRP X8, 0x966000
	0x037E2A7C LDR X8, [X8 + 0x948]
	0x037E2A80 LDR X8, [X8]
	0x037E2A84 LDR X8, [X8 + 0xB8]
	0x037E2A88 LDR X10, [X8 + 0x20]
	0x037E2A8C CBZ X10, 0x37E2B18
	0x037E2A90 LDR W9, [X10 + 0x18]

ISIL:
	001 Subtract X31, X31, 368
	002 Move [X31+288], X29
	003 Move [X31+296], X30
	004 Move [X31+304], X26
	005 Move [X31+312], X25
	006 Move [X31+320], X24
	007 Move [X31+328], X23
	008 Move [X31+336], X22
	009 Move [X31+344], X21
	010 Move [X31+352], X20
	011 Move [X31+360], X19
	012 Move X21, 0xC00000
	013 Move X24, 0x967000
	014 Move W8, [X21+763]
	015 Move X24, [X24+2376]
	016 Move W20, W1
	017 Move W19, W0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {75}
	022 Move X0, 0x912000
	023 Move X0, [X0+3584]
	024 Call 0x1C17CF4
	025 Move X0, 0x968000
	026 Move X0, [X0+224]
	027 Call 0x1C17CF4
	028 Move X0, 0x912000
	029 Move X0, [X0+3608]
	030 Call 0x1C17CF4
	031 Move X0, 0x968000
	032 Move X0, [X0+232]
	033 Call 0x1C17CF4
	034 Move X0, 0x965000
	035 Move X0, [X0+1928]
	036 Call 0x1C17CF4
	037 Move X0, 0x968000
	038 Move X0, [X0+240]
	039 Call 0x1C17CF4
	040 Move X0, 0x968000
	041 Move X0, [X0+248]
	042 Call 0x1C17CF4
	043 Move X0, 0x967000
	044 Move X0, [X0+2752]
	045 Call 0x1C17CF4
	046 Move X0, 0x965000
	047 Move X0, [X0+1896]
	048 Call 0x1C17CF4
	049 Move X0, 0x968000
	050 Move X0, [X0+256]
	051 Call 0x1C17CF4
	052 Move X0, 0x967000
	053 Move X0, [X0+2376]
	054 Call 0x1C17CF4
	055 Move X0, 0x964000
	056 Move X0, [X0+2488]
	057 Call 0x1C17CF4
	058 Move X0, 0x968000
	059 Move X0, [X0+264]
	060 Call 0x1C17CF4
	061 Move X0, 0x968000
	062 Move X0, [X0+272]
	063 Call 0x1C17CF4
	064 Move X0, 0x967000
	065 Move X0, [X0+2352]
	066 Call 0x1C17CF4
	067 Move X0, 0x963000
	068 Move X0, [X0+4040]
	069 Call 0x1C17CF4
	070 Move X0, 0x968000
	071 Move X0, [X0+280]
	072 Call 0x1C17CF4
	073 Move W8, 1
	074 Move [X21+763], W8
	075 Move X8, [X24]
	076 NotImplemented "Instruction MOVI not yet implemented."
	077 Move [X31+144], X31
	078 Move [X31+152], X31
	079 Move [X31+160], X31
	080 Move [X31+224], V0
	081 Move [X31+232], V0
	082 Move [X31+192], V0
	083 Move [X31+200], V0
	084 Move [X31+11], V0
	085 Move [X31+112], V0
	086 Move [X31+120], V0
	087 Move [X31+80], V0
	088 Move [X31+88], V0
	089 Move X8, [X8+184]
	090 Move X8, [X8+32]
	091 Compare X8, 0
	092 JumpIfEqual {413}
	093 Move W9, [X8+24]
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Move X25, W19
	096 Move W9, 184
	097 NotImplemented "Instruction MADD not yet implemented."
	098 Move W9, [X9+88]
	099 Compare W9, 0
	100 JumpIfEqual {398}
	101 Move W9, 184
	102 NotImplemented "Instruction MADD not yet implemented."
	103 Add X0, X8, 120
	104 Move X1, X31
	105 Call MatchResult.Dispose, X0
	106 Move X8, [X24]
	107 NotImplemented "Instruction MOVI not yet implemented."
	108 Move [X31+224], V0
	109 Move [X31+232], V0
	110 Move [X31+192], V0
	111 Move [X31+200], V0
	112 Move [X31+11], V0
	113 Move X8, [X8+184]
	114 Move X8, [X8+32]
	115 Compare X8, 0
	116 JumpIfEqual {415}
	117 Move W9, [X8+24]
	118 NotImplemented "Instruction CMP not yet implemented."
	119 Move X9, 0x967000
	120 Move X9, [X9+2352]
	121 Move X1, [X9]
	122 Move W9, 184
	123 NotImplemented "Instruction MADD not yet implemented."
	124 Add X0, X8, 88
	125 Add X8, X31, 0
	126 Call Nullable`1<InputControlScheme>.get_Value, X0
	127 Move V0, [X31]
	128 Move X8, [X31+16]
	129 Move [X31+9], V0
	130 Move [X31+160], X8
	131 Add X0, X31, 144
	132 Move X1, X31
	133 Call InputControlScheme.get_deviceRequirements, X0
	134 Move X8, X1
	135 ShiftRight X8, 32
	136 And X8, X8, 0x7FFFFFFF
	137 NotImplemented "Instruction CMP not yet implemented."
	138 Move X8, 0x967000
	139 Move X8, [X8+2752]
	140 Move X3, [X8]
	141 Add X0, X31, 112
	142 Move W1, 2
	143 Move W2, W31
	144 Call 0x2DFB684, X0, X1, X2
	145 Move X8, [X24]
	146 Move X8, [X8+184]
	147 Move X8, [X8+24]
	148 Compare X8, 0
	149 JumpIfEqual {419}
	150 Move W9, [X8+24]
	151 NotImplemented "Instruction CMP not yet implemented."
	152 Add X8, X8, X25
	153 Add X0, X8, 32
	154 Call InputUser.get_pairedDevices, X0
	155 Move X8, 0x968000
	156 Move X8, [X8+232]
	157 Move X2, X0
	158 Move X5, X1
	159 Move X6, [X8]
	160 Add X0, X31, 112
	161 Move TEMP, 0
	162 Not TEMP
	163 Move W3, TEMP
	164 Move TEMP, 0
	165 Not TEMP
	166 Move W4, TEMP
	167 Move X1, X2
	168 Move X2, X5
	169 Move W5, W31
	170 Call 0x2130A90, X0, X1, X2, X3, X4
	171 Move TEMP, X20
	172 And TEMP, TEMP, 1
	173 Compare TEMP, 1
	174 JumpIfNotEqual {205}
	175 Move W21, [X31+112]
	176 Add X0, X31, 112
	177 Call InputUser.GetUnpairedInputDevices, X0
	178 Move X8, [X24]
	179 Move X8, [X8+184]
	180 Move X8, [X8+32]
	181 Compare X8, 0
	182 JumpIfEqual {423}
	183 Move W9, [X8+24]
	184 NotImplemented "Instruction CMP not yet implemented."
	185 Move W9, 184
	186 Move W22, W0
	187 NotImplemented "Instruction MADD not yet implemented."
	188 Add X0, X0, 32
	189 Move W8, [X0]
	190 Compare W8, 0
	191 JumpIfEqual {205}
	192 Move X8, 0x968000
	193 Move X8, [X8+272]
	194 Move X1, [X8]
	195 Call Nullable`1<InputUserAccountHandle>.get_Value, X0
	196 Move X8, 0x968000
	197 Move X8, [X8+248]
	198 Move X3, X0
	199 Move X4, X1
	200 Move X5, [X8]
	201 Add X0, X31, 112
	202 Move W1, W21
	203 Move W2, W22
	204 Call InputControlList`1<Object>.Sort, X0, X1, X2, X3
	205 Move X8, 0x968000
	206 Move X8, [X8+256]
	207 Move V0, [X31+112]
	208 Move V1, [X31+128]
	209 Move X3, [X8]
	210 Move [X31+256], V0
	211 Move [X31+264], V1
	212 Add X8, X31, 0
	213 Add X0, X31, 144
	214 Add X1, X31, 256
	215 Move X2, X31
	216 Call 0x2202CE4, X0, X1, X2
	217 Add X0, X31, 176
	218 Add X1, X31, 0
	219 Move W2, 80
	220 Call 0x3EB2AC0
	221 Add X0, X31, 176
	222 Move X1, X31
	223 Call MatchResult.get_isSuccessfulMatch, X0
	224 And W8, W0, W20
	225 Move TEMP, X8
	226 And TEMP, TEMP, 1
	227 Compare TEMP, 1
	228 JumpIfNotEqual {369}
	229 Move X8, [X24]
	230 Move X8, [X8+184]
	231 Move X20, [X8+32]
	232 Compare X20, 0
	233 JumpIfEqual {425}
	234 Add X0, X31, 0
	235 Add X1, X31, 176
	236 Move W2, 80
	237 Call 0x3EB2AC0
	238 Move W8, [X20+24]
	239 NotImplemented "Instruction CMP not yet implemented."
	240 Move W8, 184
	241 NotImplemented "Instruction MADD not yet implemented."
	242 Add X0, X8, 120
	243 Add X1, X31, 0
	244 Move W2, 80
	245 Call 0x3EB2AC0
	246 Add X8, X31, 256
	247 Add X0, X31, 176
	248 Move X1, X31
	249 Call MatchResult.get_devices, X0
	250 Move X8, 0x968000
	251 Move V0, [X31+256]
	252 Move V1, [X31+272]
	253 Move X8, [X8+240]
	254 Move [X31+80], V0
	255 Move [X31+88], V1
	256 Move X1, [X8]
	257 Add X0, X31, 80
	258 Call 0x2DFC9F4, X0
	259 Move X20, X0
	260 Compare X0, 0
	261 JumpIfEqual {427}
	262 Move X22, 0x912000
	263 Move X23, 0x968000
	264 Move X26, 0x963000
	265 Move X22, [X22+3608]
	266 Move X23, [X23+224]
	267 Move X26, [X26+4040]
	268 Move X8, [X20]
	269 Move X1, [X22]
	270 NotImplemented "Instruction LDRH not yet implemented."
	271 Compare X9, 0
	272 JumpIfEqual {279}
	273 Move X10, [X8+176]
	274 Add X10, X10, 8
	275 NotImplemented "Instruction LDUR not yet implemented."
	276 NotImplemented "Instruction CMP not yet implemented."
	277 Subtract X9, X9, 1
	278 Add X10, X10, 16
	279 Move X0, X20
	280 Move W2, W31
	281 Call 0x1C5D788
	282 NotImplemented "Instruction LDRSW not yet implemented."
	283 Add X8, X8, X9
	284 Add X0, X8, 312
	285 Move X8, [X0]
	286 Move X1, [X0+8]
	287 Move X0, X20
	288 NotImplemented "Instruction BLR not yet implemented."
	289 Move TEMP, X0
	290 And TEMP, TEMP, 1
	291 Compare TEMP, 1
	292 JumpIfNotEqual {337}
	293 Move X8, [X20]
	294 Move X1, [X23]
	295 NotImplemented "Instruction LDRH not yet implemented."
	296 Compare X9, 0
	297 JumpIfEqual {304}
	298 Move X10, [X8+176]
	299 Add X10, X10, 8
	300 NotImplemented "Instruction LDUR not yet implemented."
	301 NotImplemented "Instruction CMP not yet implemented."
	302 Subtract X9, X9, 1
	303 Add X10, X10, 16
	304 Move X0, X20
	305 Move W2, W31
	306 Call 0x1C5D788
	307 NotImplemented "Instruction LDRSW not yet implemented."
	308 Add X8, X8, X9
	309 Add X0, X8, 312
	310 Move X8, [X0]
	311 Move X1, [X0+8]
	312 Move X0, X20
	313 NotImplemented "Instruction BLR not yet implemented."
	314 Move X8, [X24]
	315 Move X8, [X8+184]
	316 Move X8, [X8+24]
	317 Compare X8, 0
	318 JumpIfEqual {411}
	319 Move W9, [X8+24]
	320 NotImplemented "Instruction CMP not yet implemented."
	321 Add X8, X8, X25
	322 Move X21, X0
	323 Add X0, X8, 32
	324 Call InputUser.get_pairedDevices, X0
	325 Move X3, [X26]
	326 Move X2, X21
	327 Call 0x223D504, X0, X1
	328 Move TEMP, X0
	329 And TEMP, TEMP, 1
	330 Compare TEMP, 1
	331 JumpIfEqual {268}
	332 Move W3, 1
	333 Move W0, W19
	334 Move X1, X21
	335 Move W2, W31
	336 Call InputUser.AddDeviceToUser, X0, X1, X2, X3
	337 Move X22, X31
	338 Move W21, 5
	339 Compare X20, 0
	340 JumpIfEqual {364}
	341 Move X10, 0x912000
	342 Move X8, [X20]
	343 Move X10, [X10+3584]
	344 NotImplemented "Instruction LDRH not yet implemented."
	345 Move X1, [X10]
	346 Compare X9, 0
	347 JumpIfEqual {354}
	348 Move X10, [X8+176]
	349 Add X10, X10, 8
	350 NotImplemented "Instruction LDUR not yet implemented."
	351 NotImplemented "Instruction CMP not yet implemented."
	352 Subtract X9, X9, 1
	353 Add X10, X10, 16
	354 Move X0, X20
	355 Move W2, W31
	356 Call 0x1C5D788
	357 NotImplemented "Instruction LDRSW not yet implemented."
	358 Add X8, X8, X9
	359 Add X0, X8, 312
	360 Move X8, [X0]
	361 Move X1, [X0+8]
	362 Move X0, X20
	363 NotImplemented "Instruction BLR not yet implemented."
	364 Compare X22, 0
	365 JumpIfNotEqual {428}
	366 NotImplemented "Instruction CMP not yet implemented."
	367 Compare W21, 0
	368 JumpIfNotEqual {410}
	369 Move X20, X31
	370 Move W21, 3
	371 Move X8, 0x965000
	372 Move X8, [X8+1928]
	373 Move X1, [X8]
	374 Add X0, X31, 112
	375 Call 0x2DFC98C, X0
	376 Compare X20, 0
	377 JumpIfNotEqual {421}
	378 NotImplemented "Instruction CMP not yet implemented."
	379 Compare W21, 0
	380 JumpIfNotEqual {398}
	381 Move X8, [X24]
	382 Move X8, [X8+184]
	383 Move X20, [X8+32]
	384 Compare X20, 0
	385 JumpIfEqual {417}
	386 Add X0, X31, 0
	387 Add X1, X31, 176
	388 Move W2, 80
	389 Call 0x3EB2AC0
	390 Move W8, [X20+24]
	391 NotImplemented "Instruction CMP not yet implemented."
	392 Move W8, 184
	393 NotImplemented "Instruction MADD not yet implemented."
	394 Add X0, X8, 120
	395 Add X1, X31, 0
	396 Move W2, 80
	397 Call 0x3EB2AC0
	398 Move X20, [X31+352]
	399 Move X19, [X31+360]
	400 Move X22, [X31+336]
	401 Move X21, [X31+344]
	402 Move X24, [X31+320]
	403 Move X23, [X31+328]
	404 Move X26, [X31+304]
	405 Move X25, [X31+312]
	406 Move X29, [X31+288]
	407 Move X30, [X31+296]
	408 Add X31, X31, 368
	409 Return 
	410 Move X20, X31
	411 Call 0x1C17F20
	412 Call 0x1C17F28
	413 Call 0x1C17F20
	414 Call 0x1C17F28
	415 Call 0x1C17F20
	416 Call 0x1C17F28
	417 Call 0x1C17F20
	418 Call 0x1C17F28
	419 Call 0x1C17F20
	420 Call 0x1C17F28
	421 Move X0, X20
	422 Call 0x1C17F18
	423 Call 0x1C17F20
	424 Call 0x1C17F28
	425 Call 0x1C17F20
	426 Call 0x1C17F28
	427 Call 0x1C17F20
	428 Move X0, X22
	429 Call 0x1C17F18
	430 Move X21, X1
	431 Move X23, X0
	432 Move X21, X1
	433 Move X23, X0
	434 NotImplemented "Instruction CMP not yet implemented."
	435 Move X0, X23
	436 Call 0x3EB2AD0
	437 Move X19, X0
	438 Move X0, 0x912000
	439 Move X0, [X0+2000]
	440 Call 0x1C17D08
	441 Move X8, [X19]
	442 Move X1, [X8]
	443 Call 0x1C18270
	444 Move TEMP, X0
	445 And TEMP, TEMP, 1
	446 Compare TEMP, 1
	447 JumpIfNotEqual {455}
	448 Move X19, [X19]
	449 Call 0x3EB2AE0
	450 Add X0, X31, 176
	451 Move X1, X31
	452 Call MatchResult.Dispose, X0
	453 Move X0, X19
	454 Call 0x1C17F18
	455 Move W0, 8
	456 Call 0x3EB2AF0
	457 Move X8, [X19]
	458 Move [X0], X8
	459 Move X1, 0x6D3000
	460 Add X1, X1, 3672
	461 Move X2, X31
	462 Call 0x3EB2B00
	463 Move X23, X0
	464 Call 0x3EB2AE0
	465 Move X0, X23
	466 Call 0x1D2D690
	467 Move X21, X1
	468 Move X23, X0
	469 NotImplemented "Instruction CMP not yet implemented."
	470 Move X0, X23
	471 Call 0x3EB2AD0
	472 Move X22, [X0]
	473 Call 0x3EB2AE0
	474 Move W21, W31
	475 Compare X20, 0
	476 JumpIfNotEqual {341}
	477 Move X22, X31
	478 Compare X20, 0
	479 JumpIfEqual {503}
	480 Move X10, 0x912000
	481 Move X8, [X20]
	482 Move X10, [X10+3584]
	483 NotImplemented "Instruction LDRH not yet implemented."
	484 Move X1, [X10]
	485 Compare X9, 0
	486 JumpIfEqual {493}
	487 Move X10, [X8+176]
	488 Add X10, X10, 8
	489 NotImplemented "Instruction LDUR not yet implemented."
	490 NotImplemented "Instruction CMP not yet implemented."
	491 Subtract X9, X9, 1
	492 Add X10, X10, 16
	493 Move X0, X20
	494 Move W2, W31
	495 Call 0x1C5D788
	496 NotImplemented "Instruction LDRSW not yet implemented."
	497 Add X8, X8, X9
	498 Add X0, X8, 312
	499 Move X8, [X0]
	500 Move X1, [X0+8]
	501 Move X0, X20
	502 NotImplemented "Instruction BLR not yet implemented."
	503 Compare X22, 0
	504 JumpIfNotEqual {512}
	505 NotImplemented "Instruction CMP not yet implemented."
	506 Move X0, X23
	507 Call 0x3EB2AD0
	508 Move X20, [X0]
	509 Call 0x3EB2AE0
	510 Move W21, W31
	511 Move X20, X31
	512 Move X0, X22
	513 Call 0x1C17F18
	514 Move X21, X1
	515 Move X23, X0
	516 Compare X20, 0
	517 JumpIfNotEqual {480}
	518 Move X21, X1
	519 Move X23, X0
	520 Move X8, 0x965000
	521 Move X8, [X8+1928]
	522 Move X1, [X8]
	523 Add X0, X31, 112
	524 Call 0x2DFC98C, X0
	525 Compare X20, 0
	526 JumpIfEqual {434}
	527 Move X0, X20
	528 Call 0x1C17F18
	529 Call 0x1991590

Method: System.Int64 UpdatePlatformUserAccount(System.Int32 userIndex, UnityEngine.InputSystem.InputDevice device)

Disassembly:
	0x037E3F30 ADD X8, X31, 0x20
	0x037E3F34 MOV X1, X19
	0x037E3F38 MOV X2, X31
	0x037E3F3C BL 0x37751F8
	0x037E3F40 LDR X8, [X31 + 0x30]
	0x037E3F44 LDR V0, [X31 + 0x2]
	0x037E3F48 ADD X0, X31, 0x90
	0x037E3F4C MOV X1, X31
	0x037E3F50 STR X8, [X31 + 0xA0]
	0x037E3F54 ADD X8, X31, 0x20
	0x037E3F58 STR V0, [X31 + 0x9]
	0x037E3F5C BL 0x377524C
	0x037E3F60 ADD X0, X31, 0xB0
	0x037E3F64 ADD X1, X31, 0x20
	0x037E3F68 MOVZ W2, 0x70
	0x037E3F6C BL 0x3EB1AC0
	0x037E3F70 ADRP X29, 0x966000
	0x037E3F74 ADRP X26, 0x965000
	0x037E3F78 ADRP X27, 0x966000
	0x037E3F7C ADRP X22, 0x910000
	0x037E3F80 ADRP X20, 0x966000
	0x037E3F84 LDR X29, [X29 + 0x1E0]
	0x037E3F88 LDR X26, [X26 + 0xB58]
	0x037E3F8C LDR X27, [X27 + 0x1F0]
	0x037E3F90 LDR X22, [X22 + 0xA28]
	0x037E3F94 LDR X20, [X20 + 0x1E8]
	0x037E3F98 ADD X0, X31, 0xB0
	0x037E3F9C MOV X1, X31
	0x037E3FA0 BL 0x3775274
	0x037E3FA4 TBZ X0, 0x0, 0x37E4134
	0x037E3FA8 LDR X8, [X28]
	0x037E3FAC LDR X23, [X31 + 0xF8]
	0x037E3FB0 LDR X1, [X29]
	0x037E3FB4 LDR X8, [X8 + 0xB8]
	0x037E3FB8 ADD X0, X8, 0xA8
	0x037E3FBC BL 0x28F17BC
	0x037E3FC0 MOV W24, W31
	0x037E3FC4 LDR X8, [X28]
	0x037E3FC8 LDR X1, [X26]
	0x037E3FCC LDR X8, [X8 + 0xB8]
	0x037E3FD0 ADD X0, X8, 0xA8
	0x037E3FD4 BL 0x28F140C
	0x037E3FD8 MOV W25, W0
	0x037E3FDC CMP W24, W0
	0x037E3FE0 B.GE 0x37E4118
	0x037E3FE4 LDR X8, [X28]
	0x037E3FE8 LDR X0, [X8 + 0xB8]
	0x037E3FEC LDR W21, [X0], #0xA8
	0x037E3FF0 LDR X2, [X27]
	0x037E3FF4 MOV W1, W24
	0x037E3FF8 BL 0x28F1414
	0x037E3FFC CBZ X0, 0x37E4048
	0x037E4000 LDR X2, [X31 + 0x128]
	0x037E4004 LDR X9, [X0 + 0x18]
	0x037E4008 LDR X8, [X0 + 0x40]
	0x037E400C LDR X3, [X0 + 0x28]
	0x037E4010 MOV X0, X8
	0x037E4014 MOV X1, X23
	0x037E4018 BLR X9
	0x037E401C LDR X8, [X28]
	0x037E4020 LDR X8, [X8 + 0xB8]
	0x037E4024 LDR W8, [X8]
	0x037E4028 CMP W21, W8
	0x037E402C B.EQ 0x37E4040
	0x037E4030 MOV X0, X19
	0x037E4034 BL 0x37E2508
	0x037E4038 ANDS W31, W0, 0xFF
	0x037E403C B.NE 0x37E4118
	0x037E4040 ADD W24, W24, 0x1
	0x037E4044 B 0x37E3FC4
	0x037E4048 BL 0x1C16F20
	0x037E404C B 0x37E4164
	0x037E4050 B 0x37E4054
	0x037E4054 MOV X8, X1
	0x037E4058 CMP W8, 0x1
	0x037E405C STP X0, X1, [X31 + 0x10]
	0x037E4060 B.NE 0x37E41CC
	0x037E4064 LDR X0, [X31 + 0x10]
	0x037E4068 BL 0x3EB1AD0
	0x037E406C STR X0, [X31 + 0x18]
	0x037E4070 ADRP X0, 0x90F000
	0x037E4074 LDR X0, [X0 + 0x7D0]
	0x037E4078 BL 0x1C16D08
	0x037E407C LDR X8, [X31 + 0x18]
	0x037E4080 LDR X8, [X8]
	0x037E4084 LDR X1, [X8]
	0x037E4088 BL 0x1C17270
	0x037E408C TBZ X0, 0x0, 0x37E416C
	0x037E4090 LDR X8, [X31 + 0x18]
	0x037E4094 LDR X8, [X8]
	0x037E4098 STR X8, [X31 + 0x18]
	0x037E409C BL 0x3EB1AE0
	0x037E40A0 LDR X8, [X31 + 0x18]
	0x037E40A4 CBZ X8, 0x37E4164
	0x037E40A8 LDR X0, [X31 + 0x18]
	0x037E40AC MOV X1, X31
	0x037E40B0 BL 0x33B32AC
	0x037E40B4 CBZ X0, 0x37E4168
	0x037E40B8 LDR X8, [X0]
	0x037E40BC LDP X9, X1, [X8 + 0x1A8]
	0x037E40C0 BLR X9
	0x037E40C4 STR X0, [X31 + 0x10]
	0x037E40C8 ADRP X0, 0x965000
	0x037E40CC LDR X0, [X0 + 0x210]
	0x037E40D0 BL 0x1C16D08
	0x037E40D4 MOV X1, X0
	0x037E40D8 LDR X0, [X31 + 0x10]
	0x037E40DC MOV X2, X31
	0x037E40E0 BL 0x321B938
	0x037E40E4 STR X0, [X31 + 0x10]
	0x037E40E8 MOV X0, X22
	0x037E40EC BL 0x1C16D08
	0x037E40F0 LDR W8, [X0 + 0xE0]
	0x037E40F4 CBNZ W8, 0x37E40FC
	0x037E40F8 BL 0x1C16DFC
	0x037E40FC LDR X0, [X31 + 0x10]
	0x037E4100 MOV X1, X31
	0x037E4104 BL 0x3C0649C
	0x037E4108 LDR X0, [X31 + 0x18]
	0x037E410C MOV X1, X31
	0x037E4110 BL 0x3C02C84
	0x037E4114 B 0x37E401C
	0x037E4118 LDR X8, [X28]
	0x037E411C LDR X1, [X20]
	0x037E4120 LDR X8, [X8 + 0xB8]
	0x037E4124 ADD X0, X8, 0xA8
	0x037E4128 BL 0x28F17C8
	0x037E412C CMP W24, W25
	0x037E4130 B.GE 0x37E3F98
	0x037E4134 ADD X0, X31, 0xB0
	0x037E4138 MOV X1, X31
	0x037E413C BL 0x3776130
	0x037E4140 LDP X20, X19, [X31 + 0x180]
	0x037E4144 LDP X22, X21, [X31 + 0x170]
	0x037E4148 LDP X24, X23, [X31 + 0x160]
	0x037E414C LDP X26, X25, [X31 + 0x150]
	0x037E4150 LDP X28, X27, [X31 + 0x140]
	0x037E4154 LDP X29, X30, [X31 + 0x130]
	0x037E4158 ADD X31, X31, 0x190
	0x037E415C RET
	0x037E4160 BL 0x1C16F20
	0x037E4164 BL 0x1C16F20
	0x037E4168 BL 0x1C16F20
	0x037E416C MOVZ W0, 0x8
	0x037E4170 BL 0x3EB1AF0
	0x037E4174 LDR X8, [X31 + 0x18]
	0x037E4178 LDR X8, [X8]
	0x037E417C STR X8, [X0]
	0x037E4180 ADRP X1, 0x6D0000
	0x037E4184 ADD X1, X1, 0xE58
	0x037E4188 MOV X2, X31
	0x037E418C BL 0x3EB1B00
	0x037E4190 B 0x37E41C8
	0x037E4194 B 0x37E41C8
	0x037E4198 B 0x37E41C8
	0x037E419C B 0x37E41C8
	0x037E41A0 B 0x37E41A4
	0x037E41A4 STP X0, X1, [X31 + 0x10]
	0x037E41A8 BL 0x3EB1AE0
	0x037E41AC B 0x37E41CC
	0x037E41B0 B 0x37E41C8
	0x037E41B4 B 0x37E41C8
	0x037E41B8 B 0x37E41C8
	0x037E41BC B 0x37E41C8
	0x037E41C0 B 0x37E41C8
	0x037E41C4 B 0x37E41C8
	0x037E41C8 STP X0, X1, [X31 + 0x10]
	0x037E41CC LDR X8, [X31 + 0x18]
	0x037E41D0 CMP W8, 0x1
	0x037E41D4 B.NE 0x37E4200
	0x037E41D8 LDR X0, [X31 + 0x10]
	0x037E41DC BL 0x3EB1AD0
	0x037E41E0 LDR X19, [X0]
	0x037E41E4 BL 0x3EB1AE0
	0x037E41E8 ADD X0, X31, 0xB0
	0x037E41EC MOV X1, X31
	0x037E41F0 BL 0x3776130
	0x037E41F4 CBZ X19, 0x37E4140
	0x037E41F8 MOV X0, X19
	0x037E41FC BL 0x1C16F18
	0x037E4200 MOV X19, X31
	0x037E4204 B 0x37E420C
	0x037E4208 STR X0, [X31 + 0x10]
	0x037E420C ADD X0, X31, 0xB0
	0x037E4210 MOV X1, X31
	0x037E4214 BL 0x3776130
	0x037E4218 CBNZ X19, 0x37E4224
	0x037E421C LDR X0, [X31 + 0x10]
	0x037E4220 BL 0x1D2C690
	0x037E4224 MOV X0, X19
	0x037E4228 BL 0x1C16F18
	0x037E422C BL 0x1990590
	0x037E4230 STR X30, [X31 - 0x50]!
	0x037E4234 STP X26, X25, [X31 + 0x10]
	0x037E4238 STP X24, X23, [X31 + 0x20]
	0x037E423C STP X22, X21, [X31 + 0x30]
	0x037E4240 STP X20, X19, [X31 + 0x40]
	0x037E4244 ADRP X19, 0xBFD000
	0x037E4248 ADRP X23, 0x965000
	0x037E424C LDRB W8, [X19 + 0x303]
	0x037E4250 LDR X23, [X23 + 0x218]
	0x037E4254 TBNZ X8, 0x0, 0x37E42C0
	0x037E4258 ADRP X0, 0x910000
	0x037E425C LDR X0, [X0 + 0xE70]
	0x037E4260 BL 0x1C16CF4
	0x037E4264 ADRP X0, 0x964000
	0x037E4268 LDR X0, [X0 + 0x948]
	0x037E426C BL 0x1C16CF4
	0x037E4270 ADRP X0, 0x965000
	0x037E4274 LDR X0, [X0 + 0x220]
	0x037E4278 BL 0x1C16CF4
	0x037E427C ADRP X0, 0x965000
	0x037E4280 LDR X0, [X0 + 0x228]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+64], X30
	003 Move [X31+72], X23
	004 Move [X31+80], X22
	005 Move [X31+88], X21
	006 Move [X31+96], X20
	007 Move [X31+104], X19
	008 Move X20, 0xBFF000
	009 Move X23, 0x966000
	010 Move W8, [X20+764]
	011 Move X23, [X23+2376]
	012 Move X21, X1
	013 Move W19, W0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0x966000
	019 Move X0, [X0+2376]
	020 Call 0x1C17CF4
	021 Move X0, 0x967000
	022 Move X0, [X0+384]
	023 Call 0x1C17CF4
	024 Move X0, 0x967000
	025 Move X0, [X0+264]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X20+764], W8
	029 Add X1, X31, 40
	030 Add X2, X31, 32
	031 Add X3, X31, 24
	032 Move X0, X21
	033 Move [X31+40], X31
	034 Move [X31+48], X31
	035 Move [X31+56], X31
	036 Move [X31+24], X31
	037 Move [X31+32], X31
	038 Call InputUser.QueryPairedPlatformUserAccount, X0, X1, X2, X3
	039 Move X8, [X23]
	040 Move X8, [X8+184]
	041 Move X8, [X8+32]
	042 Compare X8, 0
	043 JumpIfEqual {247}
	044 Move W9, [X8+24]
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move X22, W19
	047 Move W9, 184
	048 NotImplemented "Instruction MADD not yet implemented."
	049 Add X9, X9, 208
	050 Move W10, [X9]
	051 Move X20, X0
	052 Add X31, X0, 1
	053 Subtract X11, X9, 176
	054 Move TEMP, X10
	055 And TEMP, TEMP, 2
	056 Compare TEMP, 2
	057 JumpIfEqual {179}
	058 Move W9, [X11]
	059 Move W10, [X31+40]
	060 NotImplemented "Instruction CMP not yet implemented."
	061 NotImplemented "Instruction CSET not yet implemented."
	062 NotImplemented "Instruction CMP not yet implemented."
	063 NotImplemented "Instruction CSET not yet implemented."
	064 Xor W10, W11, W10
	065 Move TEMP, X10
	066 And TEMP, TEMP, 1
	067 Compare TEMP, 1
	068 JumpIfEqual {100}
	069 Compare W9, 0
	070 JumpIfEqual {88}
	071 Move W9, 184
	072 NotImplemented "Instruction MADD not yet implemented."
	073 Move X0, [X8+40]
	074 Move X1, [X8+48]
	075 Move X2, [X31+48]
	076 Move X3, [X31+56]
	077 Move X4, X31
	078 Call InputUserAccountHandle.op_Inequality, X0, X1
	079 Move TEMP, X0
	080 And TEMP, TEMP, 1
	081 Compare TEMP, 1
	082 JumpIfEqual {100}
	083 Move X8, [X23]
	084 Move X8, [X8+184]
	085 Move X8, [X8+32]
	086 Compare X8, 0
	087 JumpIfEqual {247}
	088 Move W9, [X8+24]
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Move W9, 184
	091 NotImplemented "Instruction MADD not yet implemented."
	092 Move X0, [X8+64]
	093 Move X1, [X31+24]
	094 Move X2, X31
	095 Call String.op_Inequality, X0, X1
	096 Move TEMP, X0
	097 And TEMP, TEMP, 1
	098 Compare TEMP, 1
	099 JumpIfNotEqual {229}
	100 Move X8, [X23]
	101 Move X8, [X8+184]
	102 Move X8, [X8+32]
	103 Compare X8, 0
	104 JumpIfEqual {247}
	105 NotImplemented "Instruction LDUR not yet implemented."
	106 Move X9, [X31+56]
	107 Move [X31], V0
	108 Move [X31+16], X9
	109 Move W9, [X8+24]
	110 NotImplemented "Instruction CMP not yet implemented."
	111 Move X9, [X31+16]
	112 Move V0, [X31]
	113 Move W10, 184
	114 NotImplemented "Instruction MADD not yet implemented."
	115 Move [X8+48], X9
	116 Move [X8+2], V0
	117 Move X8, [X23]
	118 Move X8, [X8+184]
	119 Move X8, [X8+32]
	120 Compare X8, 0
	121 JumpIfEqual {247}
	122 Move W9, [X8+24]
	123 NotImplemented "Instruction CMP not yet implemented."
	124 Move X9, [X31+32]
	125 Move W10, 184
	126 NotImplemented "Instruction MADD not yet implemented."
	127 Move [X8+56], X9
	128 Move X8, [X23]
	129 Move X8, [X8+184]
	130 Move X8, [X8+32]
	131 Compare X8, 0
	132 JumpIfEqual {247}
	133 Move W9, [X8+24]
	134 NotImplemented "Instruction CMP not yet implemented."
	135 Move X9, [X31+24]
	136 Move W10, 184
	137 NotImplemented "Instruction MADD not yet implemented."
	138 Move W1, 6
	139 Move TEMP, X10
	140 And TEMP, TEMP, 2
	141 Compare TEMP, 2
	142 JumpIfNotEqual {152}
	143 Move W1, 9
	144 Move W0, W19
	145 Move X2, X31
	146 Call InputUser.Notify, X0, X1, X2
	147 Move X8, [X23]
	148 Move X8, [X8+184]
	149 Move X8, [X8+32]
	150 Compare X8, 0
	151 JumpIfEqual {247}
	152 Move W9, [X8+24]
	153 NotImplemented "Instruction CMP not yet implemented."
	154 Move W9, 184
	155 NotImplemented "Instruction MADD not yet implemented."
	156 Move [X8+32], X31
	157 Move [X8+40], X31
	158 Move [X8+48], X31
	159 Move X8, [X23]
	160 Move X8, [X8+184]
	161 Move X8, [X8+32]
	162 Compare X8, 0
	163 JumpIfEqual {247}
	164 Move W9, [X8+24]
	165 NotImplemented "Instruction CMP not yet implemented."
	166 Move W9, 184
	167 NotImplemented "Instruction MADD not yet implemented."
	168 Move [X8+56], X31
	169 Move X8, [X23]
	170 Move X8, [X8+184]
	171 Move X8, [X8+32]
	172 Compare X8, 0
	173 JumpIfEqual {247}
	174 Move W9, [X8+24]
	175 NotImplemented "Instruction CMP not yet implemented."
	176 Move W9, 184
	177 NotImplemented "Instruction MADD not yet implemented."
	178 Move [X8+64], X31
	179 Move TEMP, X20
	180 And TEMP, TEMP, 4
	181 Compare TEMP, 4
	182 JumpIfEqual {219}
	183 Move TEMP, X20
	184 And TEMP, TEMP, 16
	185 Compare TEMP, 16
	186 JumpIfEqual {228}
	187 And W8, W10, 0xFFFFFFFD
	188 Move [X9], W8
	189 Move X8, [X31+56]
	190 NotImplemented "Instruction LDUR not yet implemented."
	191 Move [X11+16], X8
	192 Move [X11], V0
	193 Move X8, [X23]
	194 Move X8, [X8+184]
	195 Move X8, [X8+32]
	196 Compare X8, 0
	197 JumpIfEqual {247}
	198 Move W9, [X8+24]
	199 NotImplemented "Instruction CMP not yet implemented."
	200 Move X9, [X31+32]
	201 Move W10, 184
	202 NotImplemented "Instruction MADD not yet implemented."
	203 Move [X8+56], X9
	204 Move X8, [X23]
	205 Move X8, [X8+184]
	206 Move X8, [X8+32]
	207 Compare X8, 0
	208 JumpIfEqual {247}
	209 Move W9, [X8+24]
	210 NotImplemented "Instruction CMP not yet implemented."
	211 Move X9, [X31+24]
	212 Move W10, 184
	213 NotImplemented "Instruction MADD not yet implemented."
	214 Move W1, 10
	215 Move [X8+64], X9
	216 Move W0, W19
	217 Move X2, X21
	218 Call InputUser.Notify, X0, X1, X2
	219 Move X0, X20
	220 Move X20, [X31+96]
	221 Move X19, [X31+104]
	222 Move X22, [X31+80]
	223 Move X21, [X31+88]
	224 Move X30, [X31+64]
	225 Move X23, [X31+72]
	226 Add X31, X31, 112
	227 Return X0
	228 Move W1, 9
	229 Move X8, [X23]
	230 Move X8, [X8+184]
	231 Move X8, [X8+32]
	232 Compare X8, 0
	233 JumpIfEqual {247}
	234 Move W9, [X8+24]
	235 NotImplemented "Instruction CMP not yet implemented."
	236 Move W9, 184
	237 NotImplemented "Instruction MADD not yet implemented."
	238 Move X0, [X8+56]
	239 Move X1, [X31+32]
	240 Move X2, X31
	241 Call String.op_Inequality, X0, X1
	242 Move TEMP, X0
	243 And TEMP, TEMP, 1
	244 Compare TEMP, 1
	245 JumpIfNotEqual {219}
	246 Move W1, 7
	247 Call 0x1C17F20
	248 Call 0x1C17F28

Method: System.Int64 QueryPairedPlatformUserAccount(UnityEngine.InputSystem.InputDevice device, out System.Nullable`1<UnityEngine.InputSystem.Users.InputUserAccountHandle> platformAccountHandle, out System.String platformAccountName, out System.String platformAccountId)

Disassembly:
	0x037E460C MOVZ W8, 0x1
	0x037E4610 STRB W8, [X21 + 0x311]
	0x037E4614 ADD X0, X31, 0x8
	0x037E4618 MOVZ W2, 0x168
	0x037E461C MOV X1, X19
	0x037E4620 BL 0x3EB1AC0
	0x037E4624 LDR X8, [X20]
	0x037E4628 ADD X1, X31, 0x8
	0x037E462C MOVZ W2, 0x168
	0x037E4630 LDR X0, [X8 + 0xB8]
	0x037E4634 BL 0x3EB1AC0
	0x037E4638 LDP X20, X19, [X31 + 0x190]
	0x037E463C LDP X30, X21, [X31 + 0x180]
	0x037E4640 LDR X29, [X31 + 0x170]
	0x037E4644 ADD X31, X31, 0x1A0
	0x037E4648 RET
	0x037E464C MOV X0, X31
	0x037E4650 B 0x37E440C
	0x037E4654 LDR X0, [X0]
	0x037E4658 RET
	0x037E465C LDR X0, [X0 + 0x8]
	0x037E4660 RET
	0x037E4664 STP X30, X21, [X31 - 0x20]!
	0x037E4668 STP X20, X19, [X31 + 0x10]
	0x037E466C MOV X21, X1
	0x037E4670 MOV X20, X0
	0x037E4674 MOV X0, X1
	0x037E4678 MOV X1, X31
	0x037E467C MOV X19, X2
	0x037E4680 BL 0x32277A8
	0x037E4684 TBNZ X0, 0x0, 0x37E4698
	0x037E4688 STP X21, X19, [X20]
	0x037E468C LDP X20, X19, [X31 + 0x10]
	0x037E4690 LDP X30, X21, [X31], #0x20
	0x037E4694 RET
	0x037E4698 ADRP X0, 0x914000
	0x037E469C LDR X0, [X0 + 0x528]
	0x037E46A0 BL 0x1C16D08
	0x037E46A4 BL 0x1C16F10
	0x037E46A8 MOV X19, X0
	0x037E46AC ADRP X0, 0x965000
	0x037E46B0 LDR X0, [X0 + 0x248]
	0x037E46B4 BL 0x1C16D08
	0x037E46B8 MOV X1, X0
	0x037E46BC MOV X0, X19
	0x037E46C0 MOV X2, X31
	0x037E46C4 BL 0x330E100
	0x037E46C8 ADRP X0, 0x965000
	0x037E46CC LDR X0, [X0 + 0x250]
	0x037E46D0 BL 0x1C16D08
	0x037E46D4 MOV X1, X0
	0x037E46D8 MOV X0, X19
	0x037E46DC BL 0x1C16DEC
	0x037E46E0 SUB X31, X31, 0x30
	0x037E46E4 STR X30, [X31 + 0x10]
	0x037E46E8 STP X20, X19, [X31 + 0x20]
	0x037E46EC ADRP X20, 0xBFD000
	0x037E46F0 LDRB W8, [X20 + 0x312]
	0x037E46F4 MOV X19, X0
	0x037E46F8 TBNZ X8, 0x0, 0x37E4728
	0x037E46FC ADRP X0, 0x965000
	0x037E4700 LDR X0, [X0 + 0x258]
	0x037E4704 BL 0x1C16CF4
	0x037E4708 ADRP X0, 0x910000
	0x037E470C LDR X0, [X0 + 0x758]
	0x037E4710 BL 0x1C16CF4
	0x037E4714 ADRP X0, 0x959000
	0x037E4718 LDR X0, [X0 + 0x708]
	0x037E471C BL 0x1C16CF4
	0x037E4720 MOVZ W8, 0x1
	0x037E4724 STRB W8, [X20 + 0x312]
	0x037E4728 LDR X20, [X19]
	0x037E472C CBZ X20, 0x37E4770
	0x037E4730 ADRP X8, 0x910000
	0x037E4734 LDR X8, [X8 + 0x758]
	0x037E4738 LDR X9, [X19 + 0x8]
	0x037E473C ADRP X19, 0x959000
	0x037E4740 ADD X1, X31, 0x0
	0x037E4744 LDR X0, [X8]
	0x037E4748 LDR X19, [X19 + 0x708]
	0x037E474C STR X9, [X31]
	0x037E4750 BL 0x1C16E04
	0x037E4754 LDR X8, [X19]
	0x037E4758 MOV X2, X0
	0x037E475C MOV X1, X20
	0x037E4760 MOV X3, X31
	0x037E4764 MOV X0, X8
	0x037E4768 BL 0x3227BD4
	0x037E476C B 0x37E4794
	0x037E4770 ADRP X8, 0x965000
	0x037E4774 LDR V0, [X19]
	0x037E4778 LDR X8, [X8 + 0x258]
	0x037E477C ADD X1, X31, 0x0
	0x037E4780 STR V0, [X31]
	0x037E4784 LDR X0, [X8]
	0x037E4788 BL 0x1C16E04
	0x037E478C MOV X1, X31

ISIL:
	001 Move [X31-64], X29
	002 Move [X31-56], X30
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Subtract X31, X31, 2112
	010 NotImplemented "Instruction MRS not yet implemented."
	011 Move X8, [X24+40]
	012 Move X22, 0xBFE000
	013 Move X19, X3
	014 Move X20, X2
	015 Move [X31+2104], X8
	016 Move W8, [X22+765]
	017 Move X21, X1
	018 Move X23, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {34}
	023 Move X0, 0x966000
	024 Move X0, [X0+456]
	025 Call 0x1C17CF4
	026 Move X0, 0x966000
	027 Move X0, [X0+464]
	028 Call 0x1C17CF4
	029 Move X0, 0x966000
	030 Move X0, [X0+472]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X22+765], W8
	034 Add X0, X31, 1064
	035 Move W2, 1040
	036 Move W1, W31
	037 Call 0x3EB2B10
	038 Add X8, X31, 24
	039 Move X0, X31
	040 Call QueryPairedUserAccountCommand.Create
	041 Add X0, X31, 1064
	042 Add X1, X31, 24
	043 Move W2, 1040
	044 Call 0x3EB2AC0
	045 Compare X23, 0
	046 JumpIfEqual {112}
	047 Move X8, 0x966000
	048 Move X8, [X8+456]
	049 Add X1, X31, 1064
	050 Move X0, X23
	051 Move X2, [X8]
	052 Call InputDevice.ExecuteCommand, X0, X1
	053 Move X22, X0
	054 Add X31, X0, 1
	055 Move TEMP, X22
	056 And TEMP, TEMP, 2
	057 Compare TEMP, 2
	058 JumpIfEqual {64}
	059 Move [X21], X31
	060 Move [X21+8], X31
	061 Move [X21+16], X31
	062 Move [X20], X31
	063 Move [X19], X31
	064 Move X9, 0x966000
	065 Move X8, [X23+240]
	066 Move X9, [X9+472]
	067 Move X2, [X31+1072]
	068 Add X0, X31, 8
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move X9, [X9]
	071 Move X3, X31
	072 Move [X31+8], X31
	073 Move [X31+16], X31
	074 NotImplemented "Instruction CSEL not yet implemented."
	075 Call InputUserAccountHandle..ctor, X0, X1, X2
	076 Move X8, 0x966000
	077 Move X1, [X31+8]
	078 Move X2, [X31+16]
	079 Move X8, [X8+464]
	080 Add X0, X31, 24
	081 Move [X31+24], X31
	082 Move [X31+32], X31
	083 Move [X31+40], X31
	084 Move X3, [X8]
	085 Call Nullable`1<InputUserAccountHandle>..ctor, X0, X1
	086 Move X8, [X31+40]
	087 NotImplemented "Instruction LDUR not yet implemented."
	088 Add X0, X31, 1064
	089 Move X1, X31
	090 Move [X21+16], X8
	091 Move [X21], V0
	092 Call QueryPairedUserAccountCommand.get_name, X0
	093 Move [X20], X0
	094 Add X0, X31, 1064
	095 Move X1, X31
	096 Call QueryPairedUserAccountCommand.get_id, X0
	097 Move [X19], X0
	098 Move X8, [X24+40]
	099 Move X9, [X31+2104]
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Move X0, X22
	102 Add X31, X31, 2112
	103 Move X20, [X31+48]
	104 Move X19, [X31+56]
	105 Move X22, [X31+32]
	106 Move X21, [X31+40]
	107 Move X24, [X31+16]
	108 Move X23, [X31+24]
	109 Move X29, [X31+64]
	110 Move X30, [X31+72]
	111 Return X0
	112 Call 0x1C17F20
	113 Call 0x3EB2B20

Method: System.Boolean InitiateUserAccountSelectionAtPlatformLevel(UnityEngine.InputSystem.InputDevice device)

Disassembly:
	0x037E4284 BL 0x1C16CF4
	0x037E4288 ADRP X0, 0x965000
	0x037E428C LDR X0, [X0 + 0x230]
	0x037E4290 BL 0x1C16CF4
	0x037E4294 ADRP X0, 0x965000
	0x037E4298 LDR X0, [X0 + 0x238]
	0x037E429C BL 0x1C16CF4
	0x037E42A0 ADRP X0, 0x965000
	0x037E42A4 LDR X0, [X0 + 0x240]
	0x037E42A8 BL 0x1C16CF4
	0x037E42AC ADRP X0, 0x965000
	0x037E42B0 LDR X0, [X0 + 0x218]
	0x037E42B4 BL 0x1C16CF4
	0x037E42B8 MOVZ W8, 0x1
	0x037E42BC STRB W8, [X19 + 0x303]
	0x037E42C0 LDR X0, [X23]
	0x037E42C4 ADRP X24, 0x964000
	0x037E42C8 LDR W8, [X0 + 0xE0]
	0x037E42CC LDR X24, [X24 + 0x948]
	0x037E42D0 CBNZ W8, 0x37E42DC
	0x037E42D4 BL 0x1C16DFC
	0x037E42D8 LDR X0, [X23]
	0x037E42DC LDR X8, [X0 + 0xB8]
	0x037E42E0 LDR X9, [X24]
	0x037E42E4 LDR X20, [X8 + 0x8]
	0x037E42E8 LDR X19, [X9 + 0xB8]
	0x037E42EC CBNZ X20, 0x37E4340
	0x037E42F0 LDR W8, [X0 + 0xE0]
	0x037E42F4 CBNZ W8, 0x37E4300
	0x037E42F8 BL 0x1C16DFC
	0x037E42FC LDR X0, [X23]
	0x037E4300 ADRP X9, 0x965000
	0x037E4304 LDR X8, [X0 + 0xB8]
	0x037E4308 LDR X9, [X9 + 0x230]
	0x037E430C LDR X21, [X8]
	0x037E4310 LDR X0, [X9]
	0x037E4314 BL 0x1C16F10
	0x037E4318 ADRP X8, 0x965000
	0x037E431C LDR X8, [X8 + 0x238]
	0x037E4320 MOV X1, X21
	0x037E4324 MOV X3, X31
	0x037E4328 MOV X20, X0
	0x037E432C LDR X2, [X8]
	0x037E4330 BL 0x2723B48
	0x037E4334 LDR X0, [X23]
	0x037E4338 LDR X8, [X0 + 0xB8]
	0x037E433C STR X20, [X8 + 0x8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xBFE000
	005 Move W8, [X20+766]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x966000
	012 Move X0, [X0+424]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+766], W8
	016 Move X0, X31
	017 Call InitiateUserAccountPairingCommand.Create
	018 Move [X31+8], X0
	019 Compare X19, 0
	020 JumpIfEqual {34}
	021 Move X8, 0x966000
	022 Move X8, [X8+424]
	023 Add X1, X31, 8
	024 Move X0, X19
	025 Move X2, [X8]
	026 Call InputDevice.ExecuteCommand, X0, X1
	027 Add X31, X0, 2
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 NotImplemented "Instruction CSET not yet implemented."
	032 Move X30, [X31+32]
	033 Return X0
	034 Call 0x1C17F20
	035 Move X0, 0x910000
	036 Move X0, [X0+1456]
	037 Call 0x1C17D08
	038 Call 0x1C17F10
	039 Move X19, X0
	040 Move X0, 0x966000
	041 Move X0, [X0+432]
	042 Call 0x1C17D08
	043 Move X1, X0
	044 Move X0, X19
	045 Move X2, X31
	046 Call InvalidOperationException..ctor, X0, X1
	047 Move X0, 0x966000
	048 Move X0, [X0+440]
	049 Call 0x1C17D08
	050 Move X1, X0
	051 Move X0, X19
	052 Call 0x1C17DEC

Method: System.Void OnActionChange(System.Object obj, UnityEngine.InputSystem.InputActionChange change)

Disassembly:
	0x037E4790 BL 0x33D5650
	0x037E4794 LDP X20, X19, [X31 + 0x20]
	0x037E4798 LDR X30, [X31 + 0x10]
	0x037E479C ADD X31, X31, 0x30
	0x037E47A0 RET
	0x037E47A4 SUB X31, X31, 0x40
	0x037E47A8 STR X30, [X31 + 0x10]
	0x037E47AC STP X22, X21, [X31 + 0x20]
	0x037E47B0 STP X20, X19, [X31 + 0x30]
	0x037E47B4 ADRP X22, 0xBFD000
	0x037E47B8 LDRB W8, [X22 + 0x313]
	0x037E47BC MOV X19, X2
	0x037E47C0 MOV X21, X1
	0x037E47C4 MOV X20, X0
	0x037E47C8 TBNZ X8, 0x0, 0x37E47E0
	0x037E47CC ADRP X0, 0x910000
	0x037E47D0 LDR X0, [X0 + 0x758]
	0x037E47D4 BL 0x1C16CF4
	0x037E47D8 MOVZ W8, 0x1
	0x037E47DC STRB W8, [X22 + 0x313]
	0x037E47E0 LDR X0, [X20]
	0x037E47E4 MOV X1, X21
	0x037E47E8 MOV X2, X31
	0x037E47EC BL 0x3226C14
	0x037E47F0 TBZ X0, 0x0, 0x37E4838
	0x037E47F4 ADRP X21, 0x910000
	0x037E47F8 LDR X21, [X21 + 0x758]
	0x037E47FC LDR X8, [X20 + 0x8]
	0x037E4800 ADD X1, X31, 0x18
	0x037E4804 LDR X0, [X21]
	0x037E4808 STR X8, [X31 + 0x18]
	0x037E480C BL 0x1C16E04
	0x037E4810 MOV X20, X0
	0x037E4814 LDR X0, [X21]
	0x037E4818 ADD X1, X31, 0x8
	0x037E481C STR X19, [X31 + 0x8]
	0x037E4820 BL 0x1C16E04
	0x037E4824 MOV X1, X0
	0x037E4828 MOV X0, X20
	0x037E482C MOV X2, X31
	0x037E4830 BL 0x33CB4B0
	0x037E4834 B 0x37E483C
	0x037E4838 MOV W0, W31
	0x037E483C LDP X20, X19, [X31 + 0x30]
	0x037E4840 LDP X22, X21, [X31 + 0x20]
	0x037E4844 LDR X30, [X31 + 0x10]
	0x037E4848 AND W0, W0, 0x1
	0x037E484C ADD X31, X31, 0x40
	0x037E4850 RET
	0x037E4854 STP X30, X21, [X31 - 0x20]!

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xBFE000
	007 Move W8, [X21+767]
	008 Move W20, W1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x965000
	015 Move X0, [X0+2376]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+767], W8
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move X21, 0x965000
	021 Move X21, [X21+2376]
	022 Move X8, [X21]
	023 Move X8, [X8+184]
	024 Move W9, [X8+8]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X20, X31
	027 Move W22, 32
	028 Move X8, [X8+24]
	029 Compare X8, 0
	030 JumpIfEqual {52}
	031 Move W9, [X8+24]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Add X0, X8, X22
	034 Call InputUser.get_actions, X0
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move W1, 12
	037 Move W0, W20
	038 Move X2, X31
	039 Call InputUser.Notify, X0, X1, X2
	040 Move X8, [X21]
	041 Add X20, X20, 1
	042 Add X22, X22, 4
	043 Move X8, [X8+184]
	044 NotImplemented "Instruction LDRSW not yet implemented."
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move X20, [X31+32]
	047 Move X19, [X31+40]
	048 Move X22, [X31+16]
	049 Move X21, [X31+24]
	050 Move X30, [X31+48]
	051 Return 
	052 Call 0x1C17F20
	053 Call 0x1C17F28

Method: System.Void OnDeviceChange(UnityEngine.InputSystem.InputDevice device, UnityEngine.InputSystem.InputDeviceChange change)

Disassembly:
	0x037E4858 STP X20, X19, [X31 + 0x10]
	0x037E485C ADRP X21, 0xBFD000
	0x037E4860 LDRB W8, [X21 + 0x314]
	0x037E4864 MOV X20, X1
	0x037E4868 MOV X19, X0
	0x037E486C TBNZ X8, 0x0, 0x37E4884
	0x037E4870 ADRP X0, 0x965000
	0x037E4874 LDR X0, [X0 + 0x258]
	0x037E4878 BL 0x1C16CF4
	0x037E487C MOVZ W8, 0x1
	0x037E4880 STRB W8, [X21 + 0x314]
	0x037E4884 CBZ X20, 0x37E48A0
	0x037E4888 ADRP X8, 0x965000
	0x037E488C LDR X8, [X8 + 0x258]
	0x037E4890 LDR X9, [X20]
	0x037E4894 LDR X8, [X8]
	0x037E4898 CMP X9, X8
	0x037E489C B.EQ 0x37E48B0
	0x037E48A0 LDP X20, X19, [X31 + 0x10]
	0x037E48A4 MOV W0, W31
	0x037E48A8 LDP X30, X21, [X31], #0x20
	0x037E48AC RET
	0x037E48B0 MOV X0, X20
	0x037E48B4 BL 0x1C16E08
	0x037E48B8 LDP X1, X2, [X0]
	0x037E48BC MOV X0, X19
	0x037E48C0 LDP X20, X19, [X31 + 0x10]
	0x037E48C4 LDP X30, X21, [X31], #0x20
	0x037E48C8 B 0x37E47A4
	0x037E48CC SUB X31, X31, 0x20
	0x037E48D0 STP X1, X30, [X31 + 0x8]
	0x037E48D4 STR X0, [X31]
	0x037E48D8 ADD X0, X31, 0x0
	0x037E48DC MOV X1, X2
	0x037E48E0 MOV X2, X3
	0x037E48E4 BL 0x37E47A4
	0x037E48E8 LDR X30, [X31 + 0x10]
	0x037E48EC ORN W8, W31, W0, 0x0
	0x037E48F0 AND W0, W8, 0x1
	0x037E48F4 ADD X31, X31, 0x20
	0x037E48F8 RET
	0x037E48FC STR X30, [X31 - 0x20]!
	0x037E4900 STP X20, X19, [X31 + 0x10]
	0x037E4904 STR X31, [X31 + 0x8]
	0x037E4908 MOV X19, X0
	0x037E490C LDR X0, [X0]
	0x037E4910 CBZ X0, 0x37E492C
	0x037E4914 LDR X8, [X0]
	0x037E4918 LDP X9, X1, [X8 + 0x158]
	0x037E491C BLR X9
	0x037E4920 MOVZ W8, 0x18D
	0x037E4924 MUL W20, W0, W8
	0x037E4928 B 0x37E4930
	0x037E492C MOV W20, W31
	0x037E4930 LDR X8, [X19 + 0x8]
	0x037E4934 ADD X0, X31, 0x8
	0x037E4938 MOV X1, X31
	0x037E493C STR X8, [X31 + 0x8]
	0x037E4940 BL 0x339A95C
	0x037E4944 EOR W0, W0, W20, 0x0
	0x037E4948 LDP X20, X19, [X31 + 0x10]
	0x037E494C LDR X30, [X31], #0x20
	0x037E4950 RET
	0x037E4954 LDR X0, [X0 + 0x10]
	0x037E4958 RET
	0x037E495C STR X1, [X0 + 0x10]
	0x037E4960 RET
	0x037E4964 LDRB W0, [X0 + 0x18]
	0x037E4968 RET
	0x037E496C AND W8, W1, 0x1
	0x037E4970 STRB W8, [X0 + 0x18]
	0x037E4974 RET
	0x037E4978 LDRB W0, [X0 + 0x19]
	0x037E497C RET
	0x037E4980 AND W8, W1, 0x1
	0x037E4984 STRB W8, [X0 + 0x19]
	0x037E4988 RET
	0x037E498C LDUR X0, [X0 + 0x1C]
	0x037E4990 RET
	0x037E4994 STUR X1, [X0 + 0x1C]
	0x037E4998 RET
	0x037E499C LDUR X0, [X0 + 0x24]
	0x037E49A0 RET
	0x037E49A4 STUR X1, [X0 + 0x24]
	0x037E49A8 RET
	0x037E49AC LDRB W0, [X0 + 0x2C]
	0x037E49B0 RET
	0x037E49B4 AND W8, W1, 0x1
	0x037E49B8 STRB W8, [X0 + 0x2C]
	0x037E49BC RET
	0x037E49C0 LDRB W0, [X0 + 0x2D]
	0x037E49C4 RET
	0x037E49C8 AND W8, W1, 0x1
	0x037E49CC STRB W8, [X0 + 0x2D]
	0x037E49D0 RET
	0x037E49D4 LDRB W0, [X0 + 0x2E]
	0x037E49D8 RET
	0x037E49DC AND W8, W1, 0x1
	0x037E49E0 STRB W8, [X0 + 0x2E]
	0x037E49E4 RET
	0x037E49E8 LDRB W0, [X0 + 0x2F]
	0x037E49EC RET
	0x037E49F0 AND W8, W1, 0x1
	0x037E49F4 STRB W8, [X0 + 0x2F]
	0x037E49F8 RET
	0x037E49FC LDRB W0, [X0 + 0x30]
	0x037E4A00 RET
	0x037E4A04 AND W8, W1, 0x1
	0x037E4A08 STRB W8, [X0 + 0x30]
	0x037E4A0C RET
	0x037E4A10 LDRB W0, [X0 + 0x31]
	0x037E4A14 RET
	0x037E4A18 AND W8, W1, 0x1
	0x037E4A1C STRB W8, [X0 + 0x31]
	0x037E4A20 RET
	0x037E4A24 LDR V0, [X0 + 0x34]
	0x037E4A28 RET
	0x037E4A2C STR S0, [X0 + 0x34]
	0x037E4A30 RET
	0x037E4A34 RET
	0x037E4A38 MOV X1, X31
	0x037E4A3C B 0x33BDD8C
	0x037E4A40 LDR X0, [X0 + 0x20]
	0x037E4A44 RET
	0x037E4A48 MOV X1, X31
	0x037E4A4C B 0x3E53F3C
	0x037E4A50 MOV X2, X31
	0x037E4A54 B 0x3E4EB50
	0x037E4A58 SUB X31, X31, 0x40
	0x037E4A5C STP X30, X23, [X31 + 0x10]
	0x037E4A60 STP X22, X21, [X31 + 0x20]
	0x037E4A64 STP X20, X19, [X31 + 0x30]
	0x037E4A68 ADRP X23, 0xBFD000
	0x037E4A6C ADRP X20, 0x965000
	0x037E4A70 ADRP X22, 0x917000
	0x037E4A74 ADRP X21, 0x965000
	0x037E4A78 LDRB W8, [X23 + 0x315]
	0x037E4A7C LDR X20, [X20 + 0x260]
	0x037E4A80 LDR X22, [X22 + 0xF08]
	0x037E4A84 LDR X21, [X21 + 0x268]
	0x037E4A88 MOV X19, X0
	0x037E4A8C TBNZ X8, 0x0, 0x37E4ABC
	0x037E4A90 ADRP X0, 0x965000
	0x037E4A94 LDR X0, [X0 + 0x260]
	0x037E4A98 BL 0x1C16CF4
	0x037E4A9C ADRP X0, 0x917000
	0x037E4AA0 LDR X0, [X0 + 0xF08]
	0x037E4AA4 BL 0x1C16CF4
	0x037E4AA8 ADRP X0, 0x965000
	0x037E4AAC LDR X0, [X0 + 0x268]
	0x037E4AB0 BL 0x1C16CF4
	0x037E4AB4 MOVZ W8, 0x1
	0x037E4AB8 STRB W8, [X23 + 0x315]
	0x037E4ABC LDR W8, [X19 + 0x28]
	0x037E4AC0 LDR X0, [X20]
	0x037E4AC4 ADD X1, X31, 0xC
	0x037E4AC8 STR W8, [X31 + 0xC]
	0x037E4ACC BL 0x1C16E04
	0x037E4AD0 MOV X20, X0
	0x037E4AD4 LDR V0, [X19 + 0x20]
	0x037E4AD8 LDR X0, [X22]
	0x037E4ADC ADD X1, X31, 0x0
	0x037E4AE0 STR D0, [X31]
	0x037E4AE4 BL 0x1C16E04
	0x037E4AE8 LDR X8, [X21]
	0x037E4AEC MOV X2, X0
	0x037E4AF0 MOV X1, X20
	0x037E4AF4 MOV X3, X31
	0x037E4AF8 MOV X0, X8
	0x037E4AFC BL 0x3227BD4
	0x037E4B00 LDP X20, X19, [X31 + 0x30]
	0x037E4B04 LDP X22, X21, [X31 + 0x20]
	0x037E4B08 LDP X30, X23, [X31 + 0x10]
	0x037E4B0C ADD X31, X31, 0x40
	0x037E4B10 RET
	0x037E4B14 MOV X2, X31
	0x037E4B18 B 0x3E4F118
	0x037E4B1C LDR X0, [X0 + 0x180]
	0x037E4B20 RET
	0x037E4B24 STR X1, [X0 + 0x180]
	0x037E4B28 RET
	0x037E4B2C LDR X0, [X0 + 0x188]
	0x037E4B30 RET
	0x037E4B34 STR X1, [X0 + 0x188]
	0x037E4B38 RET
	0x037E4B3C LDR W0, [X0 + 0x190]
	0x037E4B40 RET
	0x037E4B44 STR W1, [X0 + 0x190]
	0x037E4B48 RET
	0x037E4B4C LDR W0, [X0 + 0x194]
	0x037E4B50 RET
	0x037E4B54 STR W1, [X0 + 0x194]
	0x037E4B58 RET
	0x037E4B5C LDR W0, [X0 + 0x198]
	0x037E4B60 RET
	0x037E4B64 STR W1, [X0 + 0x198]
	0x037E4B68 RET
	0x037E4B6C LDR V0, [X0 + 0x19C]
	0x037E4B70 LDR V1, [X0 + 0x1A0]
	0x037E4B74 LDR V2, [X0 + 0x1A4]
	0x037E4B78 RET
	0x037E4B7C STR S0, [X0 + 0x19C]
	0x037E4B80 STR S1, [X0 + 0x1A0]
	0x037E4B84 STR S2, [X0 + 0x1A4]
	0x037E4B88 RET
	0x037E4B8C LDR V0, [X0 + 0x1A8]
	0x037E4B90 LDR V1, [X0 + 0x1AC]
	0x037E4B94 LDR V2, [X0 + 0x1B0]
	0x037E4B98 LDR V3, [X0 + 0x1B4]
	0x037E4B9C RET
	0x037E4BA0 STR S0, [X0 + 0x1A8]
	0x037E4BA4 STR S1, [X0 + 0x1AC]
	0x037E4BA8 STR S2, [X0 + 0x1B0]
	0x037E4BAC STR S3, [X0 + 0x1B4]
	0x037E4BB0 RET
	0x037E4BB4 SUB X31, X31, 0xB0
	0x037E4BB8 STP X29, X30, [X31 + 0x50]
	0x037E4BBC STP X28, X27, [X31 + 0x60]
	0x037E4BC0 STP X26, X25, [X31 + 0x70]
	0x037E4BC4 STP X24, X23, [X31 + 0x80]
	0x037E4BC8 STP X22, X21, [X31 + 0x90]
	0x037E4BCC STP X20, X19, [X31 + 0xA0]
	0x037E4BD0 ADRP X21, 0xBFD000
	0x037E4BD4 ADRP X20, 0x90F000
	0x037E4BD8 LDRB W8, [X21 + 0x316]
	0x037E4BDC LDR X20, [X20 + 0x8F0]
	0x037E4BE0 MOV X19, X0
	0x037E4BE4 TBNZ X8, 0x0, 0x37E4CC8
	0x037E4BE8 ADRP X0, 0x965000
	0x037E4BEC LDR X0, [X0 + 0x270]
	0x037E4BF0 BL 0x1C16CF4
	0x037E4BF4 ADRP X0, 0x90F000
	0x037E4BF8 LDR X0, [X0 + 0x8F0]
	0x037E4BFC BL 0x1C16CF4
	0x037E4C00 ADRP X0, 0x965000
	0x037E4C04 LDR X0, [X0 + 0x278]
	0x037E4C08 BL 0x1C16CF4
	0x037E4C0C ADRP X0, 0x965000
	0x037E4C10 LDR X0, [X0 + 0x280]
	0x037E4C14 BL 0x1C16CF4
	0x037E4C18 ADRP X0, 0x965000
	0x037E4C1C LDR X0, [X0 + 0x288]
	0x037E4C20 BL 0x1C16CF4
	0x037E4C24 ADRP X0, 0x965000
	0x037E4C28 LDR X0, [X0 + 0x290]
	0x037E4C2C BL 0x1C16CF4
	0x037E4C30 ADRP X0, 0x965000
	0x037E4C34 LDR X0, [X0 + 0x298]
	0x037E4C38 BL 0x1C16CF4
	0x037E4C3C ADRP X0, 0x965000
	0x037E4C40 LDR X0, [X0 + 0x2A0]
	0x037E4C44 BL 0x1C16CF4
	0x037E4C48 ADRP X0, 0x965000
	0x037E4C4C LDR X0, [X0 + 0x2A8]
	0x037E4C50 BL 0x1C16CF4
	0x037E4C54 ADRP X0, 0x965000
	0x037E4C58 LDR X0, [X0 + 0x2B0]
	0x037E4C5C BL 0x1C16CF4
	0x037E4C60 ADRP X0, 0x965000
	0x037E4C64 LDR X0, [X0 + 0x2B8]
	0x037E4C68 BL 0x1C16CF4
	0x037E4C6C ADRP X0, 0x965000
	0x037E4C70 LDR X0, [X0 + 0x2C0]
	0x037E4C74 BL 0x1C16CF4
	0x037E4C78 ADRP X0, 0x965000
	0x037E4C7C LDR X0, [X0 + 0x2C8]
	0x037E4C80 BL 0x1C16CF4
	0x037E4C84 ADRP X0, 0x962000
	0x037E4C88 LDR X0, [X0 + 0xA0]
	0x037E4C8C BL 0x1C16CF4
	0x037E4C90 ADRP X0, 0x965000
	0x037E4C94 LDR X0, [X0 + 0x2D0]
	0x037E4C98 BL 0x1C16CF4
	0x037E4C9C ADRP X0, 0x965000
	0x037E4CA0 LDR X0, [X0 + 0x2D8]
	0x037E4CA4 BL 0x1C16CF4
	0x037E4CA8 ADRP X0, 0x965000
	0x037E4CAC LDR X0, [X0 + 0x2E0]
	0x037E4CB0 BL 0x1C16CF4
	0x037E4CB4 ADRP X0, 0x965000
	0x037E4CB8 LDR X0, [X0 + 0x2E8]
	0x037E4CBC BL 0x1C16CF4
	0x037E4CC0 MOVZ W8, 0x1
	0x037E4CC4 STRB W8, [X21 + 0x316]
	0x037E4CC8 LDR X0, [X20]
	0x037E4CCC STP X31, X31, [X31 + 0x40]
	0x037E4CD0 STR W31, [X31 + 0x38]
	0x037E4CD4 STP X31, X31, [X31 + 0x28]
	0x037E4CD8 STR X31, [X31 + 0x20]
	0x037E4CDC BL 0x1C16F10
	0x037E4CE0 MOV X1, X31
	0x037E4CE4 MOV X20, X0
	0x037E4CE8 BL 0x3231AC4
	0x037E4CEC MOV X0, X19
	0x037E4CF0 MOV X1, X31

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X21, 0xBFE000
	011 Move W8, [X21+768]
	012 Move W20, W1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {41}
	018 Move X0, 0x962000
	019 Move X0, [X0+816]
	020 Call 0x1C17CF4
	021 Move X0, 0x966000
	022 Move X0, [X0+296]
	023 Call 0x1C17CF4
	024 Move X0, 0x966000
	025 Move X0, [X0+304]
	026 Call 0x1C17CF4
	027 Move X0, 0x966000
	028 Move X0, [X0+312]
	029 Call 0x1C17CF4
	030 Move X0, 0x965000
	031 Move X0, [X0+2376]
	032 Call 0x1C17CF4
	033 Move X0, 0x910000
	034 Move X0, [X0+1448]
	035 Call 0x1C17CF4
	036 Move X0, 0x961000
	037 Move X0, [X0+4040]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X21+768], W8
	041 Compare W20, 0
	042 JumpIfEqual {192}
	043 NotImplemented "Instruction CMP not yet implemented."
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move X22, 0x965000
	046 Move X22, [X22+2376]
	047 Move X8, [X22]
	048 Move X8, [X8+184]
	049 Move X0, X8
	050 Add X0, X0, 56
	051 Move W9, [X0]
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move X23, 0x966000
	054 Move X24, 0x966000
	055 Move X25, 0x961000
	056 Move X23, [X23+312]
	057 Move X24, [X24+304]
	058 Move X25, [X25+4040]
	059 Move W26, W31
	060 Move W20, W31
	061 Move X2, [X23]
	062 Move W1, W20
	063 Call InlinedArray`1<OngoingAccountSelection>.get_Item, X0, X1
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move X8, [X22]
	066 Move X2, [X23]
	067 Move W1, W20
	068 Move X8, [X8+184]
	069 Add X0, X8, 56
	070 Call InlinedArray`1<OngoingAccountSelection>.get_Item, X0, X1
	071 Add X0, X31, 8
	072 Move [X31+8], W1
	073 Call InputUser.get_index, X0
	074 Move X1, X19
	075 Move W21, W0
	076 Call InputUser.UpdatePlatformUserAccount, X0, X1
	077 Move TEMP, X0
	078 And TEMP, TEMP, 4
	079 Compare TEMP, 4
	080 JumpIfEqual {111}
	081 Move X8, [X22]
	082 Move X2, [X24]
	083 Move W1, W20
	084 Move X8, [X8+184]
	085 Add X0, X8, 56
	086 Call InlinedArray`1<OngoingAccountSelection>.RemoveAtByMovingTailWithCapacity, X0, X1
	087 Move X8, [X22]
	088 Move X8, [X8+184]
	089 Move X8, [X8+24]
	090 Compare X8, 0
	091 JumpIfEqual {301}
	092 Move W9, [X8+24]
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Add X8, X8, W21
	095 Add X0, X8, 32
	096 Subtract W20, W20, 1
	097 Call InputUser.get_pairedDevices, X0
	098 Move X3, [X25]
	099 Move X2, X19
	100 Call 0x223D504, X0, X1
	101 Move TEMP, X0
	102 And TEMP, TEMP, 1
	103 Compare TEMP, 1
	104 JumpIfEqual {110}
	105 Move W0, W21
	106 Move X1, X19
	107 Move W2, W31
	108 Move W3, W31
	109 Call InputUser.AddDeviceToUser, X0, X1, X2, X3
	110 Move W26, 1
	111 Move X8, [X22]
	112 Add W20, W20, 1
	113 Move X8, [X8+184]
	114 Move X0, X8
	115 Add X0, X0, 56
	116 Move W9, [X0]
	117 NotImplemented "Instruction CMP not yet implemented."
	118 Move TEMP, X26
	119 And TEMP, TEMP, 1
	120 Compare TEMP, 1
	121 JumpIfEqual {245}
	122 Move X0, [X8+40]
	123 Move W2, [X8+12]
	124 Move X8, 0x962000
	125 Move X8, [X8+816]
	126 Move X1, X19
	127 Move X3, [X8]
	128 Call 0x217AB8C, X0, X1, X2
	129 Add W31, W0, 1
	130 Move X24, 0x910000
	131 Move X25, 0x966000
	132 Move X24, [X24+1448]
	133 Move X25, [X25+296]
	134 Move W20, W0
	135 Move W23, 184
	136 Move X8, [X22]
	137 Move X9, [X8+184]
	138 NotImplemented "Instruction LDRSW not yet implemented."
	139 NotImplemented "Instruction CMP not yet implemented."
	140 Move X9, [X9+32]
	141 Move X21, X31
	142 Add X10, X9, 76
	143 Compare X9, 0
	144 JumpIfEqual {301}
	145 Move W11, [X9+24]
	146 NotImplemented "Instruction CMP not yet implemented."
	147 Move W11, [X10]
	148 NotImplemented "Instruction CMP not yet implemented."
	149 NotImplemented "Instruction LDUR not yet implemented."
	150 Add W11, W12, W11
	151 NotImplemented "Instruction CMP not yet implemented."
	152 Add X21, X21, 1
	153 NotImplemented "Instruction CMP not yet implemented."
	154 Add X10, X10, 184
	155 Move TEMP, 0
	156 Not TEMP
	157 Move W21, TEMP
	158 Move W0, W21
	159 Move X1, X19
	160 Call InputUser.UpdatePlatformUserAccount, X0, X1
	161 Move X8, [X22]
	162 Move X8, [X8+184]
	163 Move X8, [X8+32]
	164 Compare X8, 0
	165 JumpIfEqual {301}
	166 Move W9, [X8+24]
	167 NotImplemented "Instruction CMP not yet implemented."
	168 Move X0, [X24]
	169 NotImplemented "Instruction NOP not yet implemented."
	170 NotImplemented "Instruction SMADDL not yet implemented."
	171 Move W21, [X8+72]
	172 Move W9, [X0+224]
	173 Compare W9, 0
	174 JumpIfNotEqual {176}
	175 Call 0x1C17DFC
	176 Move W0, 1
	177 Move W1, W21
	178 Move X2, X31
	179 Call Math.Max, X0, X1
	180 Move X8, [X22]
	181 Move X4, [X25]
	182 Add W2, W0, W20
	183 Move X1, X19
	184 Move X9, [X8+184]
	185 Move X8, [X9+40]
	186 Move W9, [X9+12]
	187 Move X0, X8
	188 Subtract W3, W9, W2
	189 Call 0x217AC24, X0, X1, X2, X3
	190 Move W20, W0
	191 Add W31, W0, 1
	192 Move X0, X19
	193 Move W1, W31
	194 Call InputUser.FindLostDevice, X0, X1
	195 Add W31, W0, 1
	196 Move X22, 0x965000
	197 Move X22, [X22+2376]
	198 Move W20, W0
	199 Move X8, [X22]
	200 Move X8, [X8+184]
	201 NotImplemented "Instruction LDRSW not yet implemented."
	202 NotImplemented "Instruction CMP not yet implemented."
	203 Move X10, [X8+32]
	204 Move X21, X31
	205 Add X11, X10, 204
	206 Compare X10, 0
	207 JumpIfEqual {301}
	208 Move W12, [X10+24]
	209 NotImplemented "Instruction CMP not yet implemented."
	210 Move W12, [X11]
	211 NotImplemented "Instruction CMP not yet implemented."
	212 NotImplemented "Instruction LDUR not yet implemented."
	213 Add W12, W13, W12
	214 NotImplemented "Instruction CMP not yet implemented."
	215 Add X21, X21, 1
	216 NotImplemented "Instruction CMP not yet implemented."
	217 Add X11, X11, 184
	218 Move TEMP, 0
	219 Not TEMP
	220 Move W21, TEMP
	221 Move X8, [X8+48]
	222 Compare X8, 0
	223 JumpIfEqual {301}
	224 Move W9, [X8+24]
	225 NotImplemented "Instruction CMP not yet implemented."
	226 Add X8, X8, W20
	227 Move X1, [X8+32]
	228 Move W2, 1
	229 Move W0, W21
	230 Call InputUser.RemoveDeviceFromUser, X0, X1, X2
	231 Move W1, 5
	232 Move W0, W21
	233 Move X2, X19
	234 Call InputUser.Notify, X0, X1, X2
	235 Move W0, W21
	236 Move X1, X19
	237 Move W2, W31
	238 Move W3, W31
	239 Call InputUser.AddDeviceToUser, X0, X1, X2, X3
	240 Move X0, X19
	241 Move W1, W20
	242 Call InputUser.FindLostDevice, X0, X1
	243 Move W20, W0
	244 Add W31, W0, 1
	245 Move X20, [X31+64]
	246 Move X19, [X31+72]
	247 Move X22, [X31+48]
	248 Move X21, [X31+56]
	249 Move X24, [X31+32]
	250 Move X23, [X31+40]
	251 Move X26, [X31+16]
	252 Move X25, [X31+24]
	253 Move X30, [X31+80]
	254 Return 
	255 Move X21, 0x965000
	256 Move X21, [X21+2376]
	257 Move X22, 0x962000
	258 Move X8, [X21]
	259 Move X8, [X8+184]
	260 Move X22, [X22+816]
	261 Move X0, [X8+40]
	262 Move W2, [X8+12]
	263 Move X3, [X22]
	264 Move X1, X19
	265 Call 0x217AB8C, X0, X1, X2
	266 Add W31, W0, 1
	267 Move X8, [X21]
	268 Move X9, [X8+184]
	269 NotImplemented "Instruction LDRSW not yet implemented."
	270 NotImplemented "Instruction CMP not yet implemented."
	271 Move X9, [X9+32]
	272 Move X20, X31
	273 Add X10, X9, 76
	274 Compare X9, 0
	275 JumpIfEqual {301}
	276 Move W11, [X9+24]
	277 NotImplemented "Instruction CMP not yet implemented."
	278 Move W11, [X10]
	279 NotImplemented "Instruction CMP not yet implemented."
	280 NotImplemented "Instruction LDUR not yet implemented."
	281 Add W11, W12, W11
	282 NotImplemented "Instruction CMP not yet implemented."
	283 Add X20, X20, 1
	284 NotImplemented "Instruction CMP not yet implemented."
	285 Add X10, X10, 184
	286 Move TEMP, 0
	287 Not TEMP
	288 Move W20, TEMP
	289 Move W2, 1
	290 Move W0, W20
	291 Move X1, X19
	292 Move W3, W31
	293 Call InputUser.AddDeviceToUser, X0, X1, X2, X3
	294 Move W0, W20
	295 Move X1, X19
	296 Move W2, W31
	297 Call InputUser.RemoveDeviceFromUser, X0, X1, X2
	298 Move X8, [X21]
	299 Move X8, [X8+184]
	300 Call 0x1C17F28
	301 Call 0x1C17F20

Method: System.Int32 FindLostDevice(UnityEngine.InputSystem.InputDevice device, System.Int32 startIndex = 0)

Disassembly:
	0x037E4CF4 BL 0x3E4F428
	0x037E4CF8 CBZ X20, 0x37E5154
	0x037E4CFC ADRP X28, 0x965000
	0x037E4D00 ADRP X22, 0x965000
	0x037E4D04 ADRP X23, 0x965000
	0x037E4D08 ADRP X29, 0x965000
	0x037E4D0C ADRP X21, 0x965000
	0x037E4D10 ADRP X27, 0x965000
	0x037E4D14 ADRP X25, 0x965000
	0x037E4D18 ADRP X24, 0x965000
	0x037E4D1C LDR X28, [X28 + 0x270]
	0x037E4D20 LDR X22, [X22 + 0x2E0]
	0x037E4D24 LDR X23, [X23 + 0x2B0]
	0x037E4D28 LDR X29, [X29 + 0x2D8]
	0x037E4D2C LDR X21, [X21 + 0x2D0]
	0x037E4D30 LDR X27, [X27 + 0x278]
	0x037E4D34 LDR X25, [X25 + 0x2E8]
	0x037E4D38 LDR X24, [X24 + 0x2A8]
	0x037E4D3C MOV X1, X0
	0x037E4D40 MOV X0, X20
	0x037E4D44 MOV X2, X31
	0x037E4D48 ADD X26, X19, 0x114
	0x037E4D4C BL 0x32333E0
	0x037E4D50 LDR X8, [X28]
	0x037E4D54 LDR W9, [X19 + 0x148]
	0x037E4D58 MOVN X28, 0x0
	0x037E4D5C ADD X0, X31, 0x8
	0x037E4D60 MOV X1, X31
	0x037E4D64 STP X8, X28, [X31 + 0x8]
	0x037E4D68 STR W9, [X31 + 0x18]
	0x037E4D6C BL 0x33B162C
	0x037E4D70 LDR X8, [X22]
	0x037E4D74 MOV X1, X0
	0x037E4D78 MOV X2, X31
	0x037E4D7C MOV X0, X8
	0x037E4D80 BL 0x321B938
	0x037E4D84 MOV X1, X0
	0x037E4D88 MOV X0, X20
	0x037E4D8C MOV X2, X31
	0x037E4D90 BL 0x32338A8
	0x037E4D94 LDR V0, [X19 + 0x134]
	0x037E4D98 ADD X0, X31, 0x4C
	0x037E4D9C MOV X1, X31
	0x037E4DA0 STR S0, [X31 + 0x4C]
	0x037E4DA4 BL 0x338FE24
	0x037E4DA8 LDR X8, [X23]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xBFE000
	006 Move W8, [X21+769]
	007 Move W19, W1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x965000
	014 Move X0, [X0+2376]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+769], W8
	018 Compare X20, 0
	019 JumpIfEqual {52}
	020 Move X8, 0x965000
	021 Move X8, [X8+2376]
	022 Move X8, [X8]
	023 Move X9, [X8+184]
	024 Move W8, [X9+16]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X9, [X9+48]
	027 Move W10, [X20+224]
	028 Add X11, X9, W19
	029 Add X11, X11, 32
	030 Compare X9, 0
	031 JumpIfEqual {52}
	032 Move W12, [X9+24]
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X12, [X11]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Compare X12, 0
	037 JumpIfEqual {52}
	038 Move W12, [X12+224]
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Add W19, W19, 1
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Add X11, X11, 8
	043 Move TEMP, 0
	044 Not TEMP
	045 Move W19, TEMP
	046 Move W0, W19
	047 Move X20, [X31+16]
	048 Move X19, [X31+24]
	049 Move X30, [X31+32]
	050 Move X21, [X31+40]
	051 Return X0
	052 Call 0x1C17F20
	053 Call 0x1C17F28

Method: System.Void OnEvent(UnityEngine.InputSystem.LowLevel.InputEventPtr eventPtr, UnityEngine.InputSystem.InputDevice device)

Disassembly:
	0x037E4DAC MOV X1, X0
	0x037E4DB0 MOV X2, X31
	0x037E4DB4 MOV X0, X8
	0x037E4DB8 BL 0x321B938
	0x037E4DBC MOV X1, X0
	0x037E4DC0 MOV X0, X20
	0x037E4DC4 MOV X2, X31
	0x037E4DC8 BL 0x32338A8
	0x037E4DCC LDR W8, [X19 + 0x138]
	0x037E4DD0 ADD X0, X31, 0x48
	0x037E4DD4 MOV X1, X31
	0x037E4DD8 STR W8, [X31 + 0x48]
	0x037E4DDC BL 0x337B6E0
	0x037E4DE0 LDR X8, [X29]
	0x037E4DE4 MOV X1, X0
	0x037E4DE8 MOV X2, X31
	0x037E4DEC MOV X0, X8
	0x037E4DF0 BL 0x321B938
	0x037E4DF4 MOV X1, X0
	0x037E4DF8 MOV X0, X20
	0x037E4DFC MOV X2, X31
	0x037E4E00 BL 0x32338A8
	0x037E4E04 LDR X0, [X19 + 0x188]
	0x037E4E08 LDR X21, [X21]
	0x037E4E0C CBZ X0, 0x37E4E24
	0x037E4E10 LDR X8, [X0]
	0x037E4E14 LDP X9, X1, [X8 + 0x168]
	0x037E4E18 BLR X9
	0x037E4E1C MOV X1, X0
	0x037E4E20 B 0x37E4E28
	0x037E4E24 MOV X1, X31
	0x037E4E28 MOV X0, X21
	0x037E4E2C MOV X2, X31
	0x037E4E30 BL 0x321B938
	0x037E4E34 MOV X1, X0
	0x037E4E38 MOV X0, X20
	0x037E4E3C MOV X2, X31
	0x037E4E40 BL 0x32338A8
	0x037E4E44 LDR X8, [X27]
	0x037E4E48 LDR W9, [X19 + 0x194]
	0x037E4E4C ADD X0, X31, 0x8
	0x037E4E50 MOV X1, X31
	0x037E4E54 STP X8, X28, [X31 + 0x8]
	0x037E4E58 STR W9, [X31 + 0x18]
	0x037E4E5C BL 0x33B162C
	0x037E4E60 LDR X8, [X25]
	0x037E4E64 MOV X1, X0
	0x037E4E68 MOV X2, X31
	0x037E4E6C MOV X0, X8
	0x037E4E70 BL 0x321B938
	0x037E4E74 MOV X1, X0
	0x037E4E78 MOV X0, X20
	0x037E4E7C MOV X2, X31
	0x037E4E80 BL 0x32338A8
	0x037E4E84 LDR W8, [X19 + 0x190]
	0x037E4E88 ADD X0, X31, 0x48
	0x037E4E8C MOV X1, X31
	0x037E4E90 STR W8, [X31 + 0x48]
	0x037E4E94 BL 0x337B6E0
	0x037E4E98 LDR X8, [X24]
	0x037E4E9C MOV X1, X0
	0x037E4EA0 MOV X2, X31
	0x037E4EA4 MOV X0, X8
	0x037E4EA8 BL 0x321B938
	0x037E4EAC MOV X1, X0
	0x037E4EB0 MOV X0, X20
	0x037E4EB4 MOV X2, X31
	0x037E4EB8 BL 0x32338A8
	0x037E4EBC LDR V0, [X26]
	0x037E4EC0 ADD X0, X31, 0x40
	0x037E4EC4 MOV X1, X31
	0x037E4EC8 MOV X2, X31
	0x037E4ECC MOV X3, X31
	0x037E4ED0 STR D0, [X31 + 0x40]
	0x037E4ED4 BL 0x25F34C4
	0x037E4ED8 ADRP X8, 0x965000
	0x037E4EDC LDR X8, [X8 + 0x298]
	0x037E4EE0 MOV X1, X0
	0x037E4EE4 MOV X2, X31
	0x037E4EE8 LDR X8, [X8]
	0x037E4EEC MOV X0, X8
	0x037E4EF0 BL 0x321B938
	0x037E4EF4 MOV X1, X0
	0x037E4EF8 MOV X0, X20
	0x037E4EFC MOV X2, X31
	0x037E4F00 BL 0x32338A8
	0x037E4F04 LDR V0, [X26 + 0x88]
	0x037E4F08 LDR V1, [X19 + 0x1A4]
	0x037E4F0C ADD X0, X31, 0x30
	0x037E4F10 MOV X1, X31
	0x037E4F14 MOV X2, X31
	0x037E4F18 MOV X3, X31
	0x037E4F1C STR D0, [X31 + 0x30]
	0x037E4F20 STR S1, [X31 + 0x38]
	0x037E4F24 BL 0x2430694
	0x037E4F28 ADRP X8, 0x965000
	0x037E4F2C LDR X8, [X8 + 0x2C8]
	0x037E4F30 MOV X1, X0
	0x037E4F34 MOV X2, X31
	0x037E4F38 LDR X8, [X8]
	0x037E4F3C MOV X0, X8
	0x037E4F40 BL 0x321B938
	0x037E4F44 MOV X1, X0
	0x037E4F48 MOV X0, X20
	0x037E4F4C MOV X2, X31
	0x037E4F50 BL 0x32338A8
	0x037E4F54 LDUR V0, [X26 + 0x94]
	0x037E4F58 ADD X0, X31, 0x20
	0x037E4F5C MOV X1, X31
	0x037E4F60 MOV X2, X31
	0x037E4F64 MOV X3, X31
	0x037E4F68 STR V0, [X31 + 0x2]
	0x037E4F6C BL 0x2454360
	0x037E4F70 ADRP X8, 0x965000
	0x037E4F74 LDR X8, [X8 + 0x280]
	0x037E4F78 MOV X1, X0
	0x037E4F7C MOV X2, X31
	0x037E4F80 LDR X8, [X8]
	0x037E4F84 MOV X0, X8
	0x037E4F88 BL 0x321B938
	0x037E4F8C MOV X1, X0
	0x037E4F90 MOV X0, X20
	0x037E4F94 MOV X2, X31
	0x037E4F98 BL 0x32338A8
	0x037E4F9C LDR V0, [X19 + 0x14C]
	0x037E4FA0 ADD X0, X31, 0x4C
	0x037E4FA4 MOV X1, X31
	0x037E4FA8 STR S0, [X31 + 0x4C]
	0x037E4FAC BL 0x338FE24
	0x037E4FB0 ADRP X8, 0x962000
	0x037E4FB4 LDR X8, [X8 + 0xA0]
	0x037E4FB8 MOV X1, X0
	0x037E4FBC MOV X2, X31
	0x037E4FC0 LDR X8, [X8]
	0x037E4FC4 MOV X0, X8
	0x037E4FC8 BL 0x321B938
	0x037E4FCC MOV X1, X0
	0x037E4FD0 MOV X0, X20
	0x037E4FD4 MOV X2, X31
	0x037E4FD8 BL 0x32338A8
	0x037E4FDC LDR V0, [X26 + 0x58]
	0x037E4FE0 ADD X0, X31, 0x40
	0x037E4FE4 MOV X1, X31
	0x037E4FE8 MOV X2, X31
	0x037E4FEC MOV X3, X31
	0x037E4FF0 STR D0, [X31 + 0x40]
	0x037E4FF4 BL 0x25F34C4
	0x037E4FF8 ADRP X8, 0x965000
	0x037E4FFC LDR X8, [X8 + 0x290]
	0x037E5000 MOV X1, X0
	0x037E5004 MOV X2, X31
	0x037E5008 LDR X8, [X8]
	0x037E500C MOV X0, X8
	0x037E5010 BL 0x321B938
	0x037E5014 MOV X1, X0
	0x037E5018 MOV X0, X20
	0x037E501C MOV X2, X31
	0x037E5020 BL 0x32338A8
	0x037E5024 LDR V0, [X19 + 0x158]
	0x037E5028 ADD X0, X31, 0x4C
	0x037E502C MOV X1, X31
	0x037E5030 STR S0, [X31 + 0x4C]
	0x037E5034 BL 0x338FE24
	0x037E5038 ADRP X8, 0x964000
	0x037E503C LDR X8, [X8 + 0x2A0]
	0x037E5040 MOV X1, X0
	0x037E5044 MOV X2, X31
	0x037E5048 LDR X8, [X8]
	0x037E504C MOV X0, X8
	0x037E5050 BL 0x321B938
	0x037E5054 MOV X1, X0
	0x037E5058 MOV X0, X20
	0x037E505C MOV X2, X31
	0x037E5060 BL 0x32338A8
	0x037E5064 LDR V0, [X19 + 0x154]
	0x037E5068 ADD X0, X31, 0x4C
	0x037E506C MOV X1, X31
	0x037E5070 STR S0, [X31 + 0x4C]
	0x037E5074 BL 0x338FE24
	0x037E5078 ADRP X8, 0x964000
	0x037E507C LDR X8, [X8 + 0x2C0]
	0x037E5080 MOV X1, X0
	0x037E5084 MOV X2, X31
	0x037E5088 LDR X8, [X8]
	0x037E508C MOV X0, X8
	0x037E5090 BL 0x321B938
	0x037E5094 MOV X1, X0
	0x037E5098 MOV X0, X20
	0x037E509C MOV X2, X31
	0x037E50A0 BL 0x32338A8
	0x037E50A4 LDR V0, [X19 + 0x15C]
	0x037E50A8 ADD X0, X31, 0x4C
	0x037E50AC MOV X1, X31
	0x037E50B0 STR S0, [X31 + 0x4C]
	0x037E50B4 BL 0x338FE24
	0x037E50B8 ADRP X8, 0x964000
	0x037E50BC LDR X8, [X8 + 0x288]
	0x037E50C0 MOV X1, X0
	0x037E50C4 MOV X2, X31
	0x037E50C8 LDR X8, [X8]
	0x037E50CC MOV X0, X8
	0x037E50D0 BL 0x321B938
	0x037E50D4 MOV X1, X0
	0x037E50D8 MOV X0, X20
	0x037E50DC MOV X2, X31
	0x037E50E0 BL 0x32338A8
	0x037E50E4 LDR W8, [X19 + 0xFC]
	0x037E50E8 ADD X0, X31, 0x48
	0x037E50EC MOV X1, X31
	0x037E50F0 STR W8, [X31 + 0x48]
	0x037E50F4 BL 0x337B6E0
	0x037E50F8 ADRP X8, 0x964000
	0x037E50FC LDR X8, [X8 + 0x2B8]
	0x037E5100 MOV X1, X0
	0x037E5104 MOV X2, X31
	0x037E5108 LDR X8, [X8]
	0x037E510C MOV X0, X8
	0x037E5110 BL 0x321B938
	0x037E5114 MOV X1, X0
	0x037E5118 MOV X0, X20
	0x037E511C MOV X2, X31
	0x037E5120 BL 0x32338A8
	0x037E5124 LDR X8, [X20]
	0x037E5128 MOV X0, X20
	0x037E512C LDP X9, X1, [X8 + 0x168]
	0x037E5130 BLR X9
	0x037E5134 LDP X20, X19, [X31 + 0xA0]
	0x037E5138 LDP X22, X21, [X31 + 0x90]
	0x037E513C LDP X24, X23, [X31 + 0x80]
	0x037E5140 LDP X26, X25, [X31 + 0x70]
	0x037E5144 LDP X28, X27, [X31 + 0x60]
	0x037E5148 LDP X29, X30, [X31 + 0x50]
	0x037E514C ADD X31, X31, 0xB0
	0x037E5150 RET
	0x037E5154 BL 0x1C16F20
	0x037E5158 ADD W0, W1, W0, 0x18, LSL
	0x037E515C RET
	0x037E5160 AND W0, W0, 0xFF
	0x037E5164 RET
	0x037E5168 STR D10, [X31 - 0x40]!
	0x037E516C STP D9, D8, [X31 + 0x10]
	0x037E5170 STP X30, X21, [X31 + 0x20]
	0x037E5174 STP X20, X19, [X31 + 0x30]
	0x037E5178 ADRP X20, 0xBFC000
	0x037E517C LDRB W8, [X20 + 0x317]
	0x037E5180 MOV X19, X0
	0x037E5184 TBNZ X8, 0x0, 0x37E51E4
	0x037E5188 ADRP X0, 0x964000
	0x037E518C LDR X0, [X0 + 0x2F0]
	0x037E5190 BL 0x1C16CF4
	0x037E5194 ADRP X0, 0x964000
	0x037E5198 LDR X0, [X0 + 0x2F8]
	0x037E519C BL 0x1C16CF4
	0x037E51A0 ADRP X0, 0x960000
	0x037E51A4 LDR X0, [X0 + 0xF98]
	0x037E51A8 BL 0x1C16CF4
	0x037E51AC ADRP X0, 0x962000
	0x037E51B0 LDR X0, [X0 + 0x410]
	0x037E51B4 BL 0x1C16CF4
	0x037E51B8 ADRP X0, 0x937000
	0x037E51BC LDR X0, [X0 + 0xE50]
	0x037E51C0 BL 0x1C16CF4
	0x037E51C4 ADRP X0, 0x962000
	0x037E51C8 LDR X0, [X0 + 0x960]
	0x037E51CC BL 0x1C16CF4
	0x037E51D0 ADRP X0, 0x961000
	0x037E51D4 LDR X0, [X0 + 0xD58]
	0x037E51D8 BL 0x1C16CF4
	0x037E51DC MOVZ W8, 0x1
	0x037E51E0 STRB W8, [X20 + 0x317]
	0x037E51E4 LDR X8, [X19 + 0x180]
	0x037E51E8 CBZ X8, 0x37E541C
	0x037E51EC LDR X20, [X8 + 0x80]
	0x037E51F0 CBZ X20, 0x37E5280
	0x037E51F4 ADRP X9, 0x962000
	0x037E51F8 LDR X9, [X9 + 0x410]
	0x037E51FC LDR X8, [X20]
	0x037E5200 LDR X10, [X9]
	0x037E5204 LDRB W9, [X8 + 0x130]
	0x037E5208 LDRB W11, [X10 + 0x130]
	0x037E520C CMP W9, W11
	0x037E5210 B.CC 0x37E5228
	0x037E5214 LDR X12, [X8 + 0xC8]
	0x037E5218 ADD X11, X12, X11, 0x3, LSL
	0x037E521C LDUR X11, [X11 - 0x8]
	0x037E5220 CMP X11, X10
	0x037E5224 B.EQ 0x37E52AC
	0x037E5228 ADRP X10, 0x962000
	0x037E522C LDR X10, [X10 + 0x960]

ISIL:
	001 Subtract X31, X31, 400
	002 Move [X31+304], X29
	003 Move [X31+312], X30
	004 Move [X31+320], X28
	005 Move [X31+328], X27
	006 Move [X31+336], X26
	007 Move [X31+344], X25
	008 Move [X31+352], X24
	009 Move [X31+360], X23
	010 Move [X31+368], X22
	011 Move [X31+376], X21
	012 Move [X31+384], X20
	013 Move [X31+392], X19
	014 Move X20, 0xBFE000
	015 Move [X31+296], X0
	016 Move X28, 0x965000
	017 Move W8, [X20+770]
	018 Move X28, [X28+2376]
	019 Move X19, X1
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {53}
	024 Move X0, 0x966000
	025 Move X0, [X0+336]
	026 Call 0x1C17CF4
	027 Move X0, 0x966000
	028 Move X0, [X0+480]
	029 Call 0x1C17CF4
	030 Move X0, 0x966000
	031 Move X0, [X0+488]
	032 Call 0x1C17CF4
	033 Move X0, 0x966000
	034 Move X0, [X0+496]
	035 Call 0x1C17CF4
	036 Move X0, 0x965000
	037 Move X0, [X0+2904]
	038 Call 0x1C17CF4
	039 Move X0, 0x966000
	040 Move X0, [X0+504]
	041 Call 0x1C17CF4
	042 Move X0, 0x965000
	043 Move X0, [X0+2376]
	044 Call 0x1C17CF4
	045 Move X0, 0x966000
	046 Move X0, [X0+512]
	047 Call 0x1C17CF4
	048 Move X0, 0x966000
	049 Move X0, [X0+520]
	050 Call 0x1C17CF4
	051 Move W8, 1
	052 Move [X20+770], W8
	053 Move X8, [X28]
	054 NotImplemented "Instruction MOVI not yet implemented."
	055 Move [X31+256], V0
	056 Move [X31+264], V0
	057 Move [X31+224], V0
	058 Move [X31+232], V0
	059 Move [X31+192], V0
	060 Move [X31+200], V0
	061 Move [X31+11], V0
	062 Move [X31+144], X31
	063 Move [X31+152], X31
	064 Move [X31+160], X31
	065 Move X8, [X8+184]
	066 Move W8, [X8+356]
	067 Compare W8, 0
	068 JumpIfEqual {255}
	069 Add X0, X31, 296
	070 Move X1, X31
	071 Call InputEventPtr.get_type, X0
	072 Move W8, 0x4154
	073 NotImplemented "Instruction MOVK not yet implemented."
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move W8, 0x5441
	076 NotImplemented "Instruction MOVK not yet implemented."
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Compare X19, 0
	079 JumpIfEqual {269}
	080 Move X0, X19
	081 Move X1, X31
	082 Call InputDevice.get_enabled, X0
	083 Move TEMP, X0
	084 And TEMP, TEMP, 1
	085 Compare TEMP, 1
	086 JumpIfNotEqual {255}
	087 Move X8, [X28]
	088 Move X9, 0x966000
	089 Move X2, X19
	090 Move X8, [X8+184]
	091 Move X9, [X9+336]
	092 Move X0, [X8+40]
	093 Move W1, [X8+12]
	094 Move X3, [X9]
	095 Call 0x21770F0, X0, X1, X2
	096 Move TEMP, X0
	097 And TEMP, TEMP, 1
	098 Compare TEMP, 1
	099 JumpIfEqual {255}
	100 Move X9, 0x966000
	101 Move X8, [X28]
	102 Move X2, [X31+296]
	103 Move X9, [X9+520]
	104 Move X1, X19
	105 Move X8, [X8+184]
	106 Move X4, X31
	107 Move X3, [X9]
	108 Move X9, 0x966000
	109 Move X9, [X9+504]
	110 Add X0, X8, 248
	111 Move X5, [X9]
	112 Call 0x21AFCB4, X0, X1, X2, X3, X4
	113 Move TEMP, X0
	114 And TEMP, TEMP, 1
	115 Compare TEMP, 1
	116 JumpIfNotEqual {255}
	117 Move X8, -47161344
	118 Move X0, [X31+296]
	119 Move V0, [X8+3880]
	120 Add X8, X31, 32
	121 Move X1, X19
	122 Move X2, X31
	123 Call InputControlExtensions.EnumerateChangedControls, X0, X1, V0
	124 Move X8, [X31+48]
	125 Move V0, [X31+2]
	126 Add X0, X31, 144
	127 Move X1, X31
	128 Move [X31+160], X8
	129 Add X8, X31, 32
	130 Move [X31+9], V0
	131 Call InputEventControlCollection.GetEnumerator, X0
	132 Add X0, X31, 176
	133 Add X1, X31, 32
	134 Move W2, 112
	135 Call 0x3EB2AC0
	136 Move X29, 0x966000
	137 Move X26, 0x965000
	138 Move X27, 0x966000
	139 Move X22, 0x910000
	140 Move X20, 0x966000
	141 Move X29, [X29+480]
	142 Move X26, [X26+2904]
	143 Move X27, [X27+496]
	144 Move X22, [X22+2600]
	145 Move X20, [X20+488]
	146 Add X0, X31, 176
	147 Move X1, X31
	148 Call InputEventControlEnumerator.MoveNext, X0
	149 Move TEMP, X0
	150 And TEMP, TEMP, 1
	151 Compare TEMP, 1
	152 JumpIfNotEqual {252}
	153 Move X8, [X28]
	154 Move X23, [X31+248]
	155 Move X1, [X29]
	156 Move X8, [X8+184]
	157 Add X0, X8, 168
	158 Call 0x28F27BC, X0
	159 Move W24, W31
	160 Move X8, [X28]
	161 Move X1, [X26]
	162 Move X8, [X8+184]
	163 Add X0, X8, 168
	164 Call 0x28F240C, X0
	165 Move W25, W0
	166 NotImplemented "Instruction CMP not yet implemented."
	167 Move X8, [X28]
	168 Move X0, [X8+184]
	169 Move W21, [X0+168]
	170 Move X2, [X27]
	171 Move W1, W24
	172 Call 0x28F2414, X0, X1
	173 Compare X0, 0
	174 JumpIfEqual {190}
	175 Move X2, [X31+296]
	176 Move X9, [X0+24]
	177 Move X8, [X0+64]
	178 Move X3, [X0+40]
	179 Move X0, X8
	180 Move X1, X23
	181 NotImplemented "Instruction BLR not yet implemented."
	182 Move X8, [X28]
	183 Move X8, [X8+184]
	184 Move W8, [X8]
	185 NotImplemented "Instruction CMP not yet implemented."
	186 Move X0, X19
	187 Call InputUser.FindUserPairedToDevice, X0
	188 And W31, W0, 255
	189 Add W24, W24, 1
	190 Call 0x1C17F20
	191 Move X8, X1
	192 NotImplemented "Instruction CMP not yet implemented."
	193 Move [X31+16], X0
	194 Move [X31+24], X1
	195 Move X0, [X31+16]
	196 Call 0x3EB2AD0
	197 Move [X31+24], X0
	198 Move X0, 0x90F000
	199 Move X0, [X0+2000]
	200 Call 0x1C17D08
	201 Move X8, [X31+24]
	202 Move X8, [X8]
	203 Move X1, [X8]
	204 Call 0x1C18270
	205 Move TEMP, X0
	206 And TEMP, TEMP, 1
	207 Compare TEMP, 1
	208 JumpIfNotEqual {272}
	209 Move X8, [X31+24]
	210 Move X8, [X8]
	211 Move [X31+24], X8
	212 Call 0x3EB2AE0
	213 Move X8, [X31+24]
	214 Compare X8, 0
	215 JumpIfEqual {270}
	216 Move X0, [X31+24]
	217 Move X1, X31
	218 Call Exception.GetType, X0
	219 Compare X0, 0
	220 JumpIfEqual {271}
	221 Move X8, [X0]
	222 Move X9, [X8+424]
	223 Move X1, [X8+432]
	224 NotImplemented "Instruction BLR not yet implemented."
	225 Move [X31+16], X0
	226 Move X0, 0x965000
	227 Move X0, [X0+528]
	228 Call 0x1C17D08
	229 Move X1, X0
	230 Move X0, [X31+16]
	231 Move X2, X31
	232 Call String.Concat, X0, X1
	233 Move [X31+16], X0
	234 Move X0, X22
	235 Call 0x1C17D08
	236 Move W8, [X0+224]
	237 Compare W8, 0
	238 JumpIfNotEqual {240}
	239 Call 0x1C17DFC
	240 Move X0, [X31+16]
	241 Move X1, X31
	242 Call Debug.LogError, X0
	243 Move X0, [X31+24]
	244 Move X1, X31
	245 Call Debug.LogException, X0
	246 Move X8, [X28]
	247 Move X1, [X20]
	248 Move X8, [X8+184]
	249 Add X0, X8, 168
	250 Call 0x28F27C8, X0
	251 NotImplemented "Instruction CMP not yet implemented."
	252 Add X0, X31, 176
	253 Move X1, X31
	254 Call InputEventControlEnumerator.Dispose, X0
	255 Move X20, [X31+384]
	256 Move X19, [X31+392]
	257 Move X22, [X31+368]
	258 Move X21, [X31+376]
	259 Move X24, [X31+352]
	260 Move X23, [X31+360]
	261 Move X26, [X31+336]
	262 Move X25, [X31+344]
	263 Move X28, [X31+320]
	264 Move X27, [X31+328]
	265 Move X29, [X31+304]
	266 Move X30, [X31+312]
	267 Add X31, X31, 400
	268 Return 
	269 Call 0x1C17F20
	270 Call 0x1C17F20
	271 Call 0x1C17F20
	272 Move W0, 8
	273 Call 0x3EB2AF0
	274 Move X8, [X31+24]
	275 Move X8, [X8]
	276 Move [X0], X8
	277 Move X1, 0x6D0000
	278 Add X1, X1, 3672
	279 Move X2, X31
	280 Call 0x3EB2B00
	281 Move [X31+16], X0
	282 Move [X31+24], X1
	283 Call 0x3EB2AE0
	284 Move [X31+16], X0
	285 Move [X31+24], X1
	286 Move X8, [X31+24]
	287 NotImplemented "Instruction CMP not yet implemented."
	288 Move X0, [X31+16]
	289 Call 0x3EB2AD0
	290 Move X19, [X0]
	291 Call 0x3EB2AE0
	292 Add X0, X31, 176
	293 Move X1, X31
	294 Call InputEventControlEnumerator.Dispose, X0
	295 Compare X19, 0
	296 JumpIfEqual {255}
	297 Move X0, X19
	298 Call 0x1C17F18
	299 Move X19, X31
	300 Move [X31+16], X0
	301 Add X0, X31, 176
	302 Move X1, X31
	303 Call InputEventControlEnumerator.Dispose, X0
	304 Compare X19, 0
	305 JumpIfNotEqual {308}
	306 Move X0, [X31+16]
	307 Call 0x1D2D690
	308 Move X0, X19
	309 Call 0x1C17F18
	310 Call 0x1991590

Method: UnityEngine.InputSystem.Utilities.ISavedState SaveAndResetState()

Disassembly:
	0x037E5230 LDR X10, [X10]
	0x037E5234 LDRB W11, [X10 + 0x130]
	0x037E5238 CMP W9, W11
	0x037E523C B.CC 0x37E5254
	0x037E5240 LDR X12, [X8 + 0xC8]
	0x037E5244 ADD X11, X12, X11, 0x3, LSL
	0x037E5248 LDUR X11, [X11 - 0x8]
	0x037E524C CMP X11, X10
	0x037E5250 B.EQ 0x37E5358
	0x037E5254 ADRP X10, 0x961000
	0x037E5258 LDR X10, [X10 + 0xD58]
	0x037E525C LDR X10, [X10]
	0x037E5260 LDRB W11, [X10 + 0x130]
	0x037E5264 CMP W9, W11
	0x037E5268 B.CC 0x37E5280
	0x037E526C LDR X8, [X8 + 0xC8]
	0x037E5270 ADD X8, X8, X11, 0x3, LSL
	0x037E5274 LDUR X8, [X8 - 0x8]
	0x037E5278 CMP X8, X10
	0x037E527C B.EQ 0x37E53A8
	0x037E5280 ADRP X20, 0x937000
	0x037E5284 LDR X20, [X20 + 0xE50]
	0x037E5288 LDR X0, [X20]
	0x037E528C LDR W8, [X0 + 0xE0]
	0x037E5290 CBNZ W8, 0x37E529C
	0x037E5294 BL 0x1C16DFC
	0x037E5298 LDR X0, [X20]
	0x037E529C LDR X8, [X0 + 0xB8]
	0x037E52A0 LDR W8, [X8 + 0x8]
	0x037E52A4 STR W8, [X19 + 0x198]
	0x037E52A8 B 0x37E5408
	0x037E52AC MOV X0, X20
	0x037E52B0 BL 0x37E5420
	0x037E52B4 STR W0, [X19 + 0x198]
	0x037E52B8 LDR X0, [X20 + 0x188]
	0x037E52BC CBZ X0, 0x37E541C
	0x037E52C0 MOV X1, X31
	0x037E52C4 BL 0x377240C
	0x037E52C8 STR S0, [X19 + 0x14C]
	0x037E52CC LDR X0, [X20 + 0x1D8]
	0x037E52D0 CBZ X0, 0x37E541C
	0x037E52D4 ADRP X21, 0x964000
	0x037E52D8 LDR X21, [X21 + 0x2F8]
	0x037E52DC LDR X1, [X21]
	0x037E52E0 BL 0x2E094B0
	0x037E52E4 LDR V0, [X0]
	0x037E52E8 ADRP X8, 0xFFFFFFFFFD304000
	0x037E52EC LDR V8, [X8 + 0xF4C]
	0x037E52F0 FMOV S10, 1
	0x037E52F4 FADD S0, S0, S10
	0x037E52F8 FMOV S9, 0.5
	0x037E52FC FMUL S0, S0, S8
	0x037E5300 FMUL S0, S0, S9
	0x037E5304 STR S0, [X19 + 0x158]
	0x037E5308 LDR X0, [X20 + 0x1D8]
	0x037E530C CBZ X0, 0x37E541C
	0x037E5310 LDR X1, [X21]
	0x037E5314 BL 0x2E094B0
	0x037E5318 LDR V0, [X0 + 0x4]
	0x037E531C FADD S0, S0, S10
	0x037E5320 FMUL S0, S0, S8
	0x037E5324 FMUL S0, S0, S9
	0x037E5328 STR S0, [X19 + 0x154]
	0x037E532C LDR X0, [X20 + 0x1E0]
	0x037E5330 CBZ X0, 0x37E541C
	0x037E5334 ADRP X8, 0x960000
	0x037E5338 LDR X8, [X8 + 0xF98]
	0x037E533C LDR X1, [X8]
	0x037E5340 BL 0x2E05A28
	0x037E5344 LDR V0, [X0]
	0x037E5348 FMUL S0, S0, S8
	0x037E534C FADD S0, S0, S0
	0x037E5350 STR S0, [X19 + 0x15C]
	0x037E5354 B 0x37E53EC
	0x037E5358 MOV X0, X20
	0x037E535C BL 0x37E5670
	0x037E5360 STR W0, [X19 + 0x198]
	0x037E5364 LDR X0, [X20 + 0x198]
	0x037E5368 CBZ X0, 0x37E541C
	0x037E536C MOV X1, X31
	0x037E5370 BL 0x377240C
	0x037E5374 STR S0, [X19 + 0x14C]
	0x037E5378 LDR X0, [X20 + 0x1A0]
	0x037E537C CBZ X0, 0x37E541C
	0x037E5380 ADRP X8, 0x964000
	0x037E5384 LDR X8, [X8 + 0x2F8]
	0x037E5388 LDR X1, [X8]
	0x037E538C BL 0x2E094B0
	0x037E5390 LDR V0, [X0]
	0x037E5394 ADD X8, X19, 0x16C
	0x037E5398 STR D0, [X8]
	0x037E539C LDR X0, [X20 + 0x178]
	0x037E53A0 CBNZ X0, 0x37E53F4
	0x037E53A4 B 0x37E541C
	0x037E53A8 LDR X0, [X20 + 0x1A0]
	0x037E53AC BL 0x37E5670
	0x037E53B0 STR W0, [X19 + 0x198]
	0x037E53B4 LDR X0, [X20 + 0x188]
	0x037E53B8 CBZ X0, 0x37E541C
	0x037E53BC MOV X1, X31
	0x037E53C0 BL 0x377240C
	0x037E53C4 STR S0, [X19 + 0x14C]
	0x037E53C8 LDR X0, [X20 + 0x180]
	0x037E53CC CBZ X0, 0x37E541C
	0x037E53D0 ADRP X8, 0x964000
	0x037E53D4 LDR X8, [X8 + 0x2F8]
	0x037E53D8 LDR X1, [X8]
	0x037E53DC BL 0x2E094B0
	0x037E53E0 LDR V0, [X0]
	0x037E53E4 ADD X8, X19, 0x16C
	0x037E53E8 STR D0, [X8]
	0x037E53EC LDR X0, [X20 + 0x198]
	0x037E53F0 CBZ X0, 0x37E541C
	0x037E53F4 ADRP X8, 0x964000
	0x037E53F8 LDR X8, [X8 + 0x2F0]
	0x037E53FC LDR X1, [X8]
	0x037E5400 BL 0x2E00A18
	0x037E5404 STR W0, [X19 + 0xFC]
	0x037E5408 LDP X20, X19, [X31 + 0x30]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X19, 0xBFD000
	011 Move X23, 0x965000
	012 Move W8, [X19+771]
	013 Move X23, [X23+536]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {44}
	018 Move X0, 0x910000
	019 Move X0, [X0+3696]
	020 Call 0x1C17CF4
	021 Move X0, 0x964000
	022 Move X0, [X0+2376]
	023 Call 0x1C17CF4
	024 Move X0, 0x965000
	025 Move X0, [X0+544]
	026 Call 0x1C17CF4
	027 Move X0, 0x965000
	028 Move X0, [X0+552]
	029 Call 0x1C17CF4
	030 Move X0, 0x965000
	031 Move X0, [X0+560]
	032 Call 0x1C17CF4
	033 Move X0, 0x965000
	034 Move X0, [X0+568]
	035 Call 0x1C17CF4
	036 Move X0, 0x965000
	037 Move X0, [X0+576]
	038 Call 0x1C17CF4
	039 Move X0, 0x965000
	040 Move X0, [X0+536]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X19+771], W8
	044 Move X0, [X23]
	045 Move X24, 0x964000
	046 Move W8, [X0+224]
	047 Move X24, [X24+2376]
	048 Compare W8, 0
	049 JumpIfNotEqual {52}
	050 Call 0x1C17DFC
	051 Move X0, [X23]
	052 Move X8, [X0+184]
	053 Move X9, [X24]
	054 Move X20, [X8+8]
	055 Move X19, [X9+184]
	056 Compare X20, 0
	057 JumpIfNotEqual {79}
	058 Move W8, [X0+224]
	059 Compare W8, 0
	060 JumpIfNotEqual {63}
	061 Call 0x1C17DFC
	062 Move X0, [X23]
	063 Move X9, 0x965000
	064 Move X8, [X0+184]
	065 Move X9, [X9+560]
	066 Move X21, [X8]
	067 Move X0, [X9]
	068 Call 0x1C17F10
	069 Move X8, 0x965000
	070 Move X8, [X8+568]
	071 Move X1, X21
	072 Move X3, X31
	073 Move X20, X0
	074 Move X2, [X8]
	075 Call TypedRestore<GlobalState>..ctor, X0, X1, X2
	076 Move X0, [X23]
	077 Move X8, [X0+184]
	078 Move [X8+8], X20
	079 Move W8, [X0+224]
	080 Compare W8, 0
	081 JumpIfNotEqual {84}
	082 Call 0x1C17DFC
	083 Move X0, [X23]
	084 Move X8, [X0+184]
	085 Move X26, 0x965000
	086 Move X25, 0x965000
	087 Move X21, [X8+16]
	088 Move X26, [X26+552]
	089 Move X25, [X25+544]
	090 Compare X21, 0
	091 JumpIfNotEqual {113}
	092 Move W8, [X0+224]
	093 Compare W8, 0
	094 JumpIfNotEqual {97}
	095 Call 0x1C17DFC
	096 Move X0, [X23]
	097 Move X9, 0x910000
	098 Move X8, [X0+184]
	099 Move X9, [X9+3696]
	100 Move X22, [X8]
	101 Move X0, [X9]
	102 Call 0x1C17F10
	103 Move X8, 0x965000
	104 Move X8, [X8+576]
	105 Move X1, X22
	106 Move X3, X31
	107 Move X21, X0
	108 Move X2, [X8]
	109 Call Action..ctor, X0, X1, X2
	110 Move X8, [X23]
	111 Move X8, [X8+184]
	112 Move [X8+16], X21
	113 Move X0, [X26]
	114 Call 0x1C17F10
	115 Move X4, [X25]
	116 Move X1, X19
	117 Move X2, X20
	118 Move X3, X21
	119 Move X22, X0
	120 Call SavedStructState`1<GlobalState>..ctor, X0, X1, X2, X3
	121 Move X8, [X24]
	122 Move W2, 360
	123 Move W1, W31
	124 Move X0, [X8+184]
	125 Call 0x3EB2B10
	126 Move X0, X22
	127 Move X20, [X31+64]
	128 Move X19, [X31+72]
	129 Move X22, [X31+48]
	130 Move X21, [X31+56]
	131 Move X24, [X31+32]
	132 Move X23, [X31+40]
	133 Move X26, [X31+16]
	134 Move X25, [X31+24]
	135 Move X30, [X31+80]
	136 Return X0

Method: System.Void HookIntoActionChange()

Disassembly:
	0x037E1868 BL 0x1C16F28
	0x037E186C MOV X0, X20
	0x037E1870 BL 0x1C16F18
	0x037E1874 BL 0x1C16F20
	0x037E1878 BL 0x1C16F28
	0x037E187C BL 0x1C16F20
	0x037E1880 BL 0x1C16F28
	0x037E1884 BL 0x1C16F20
	0x037E1888 MOV X0, X22
	0x037E188C BL 0x1C16F18
	0x037E1890 B 0x37E18E8
	0x037E1894 B 0x37E18E8
	0x037E1898 B 0x37E1990
	0x037E189C B 0x37E18E8
	0x037E18A0 B 0x37E18E8
	0x037E18A4 B 0x37E18E8
	0x037E18A8 B 0x37E18E8
	0x037E18AC B 0x37E18E8
	0x037E18B0 B 0x37E18E8
	0x037E18B4 B 0x37E18E8
	0x037E18B8 B 0x37E18E8
	0x037E18BC B 0x37E18E8
	0x037E18C0 B 0x37E18E8
	0x037E18C4 B 0x37E18E8
	0x037E18C8 B 0x37E18F4
	0x037E18CC B 0x37E18E8
	0x037E18D0 B 0x37E18F4
	0x037E18D4 B 0x37E18F4
	0x037E18D8 B 0x37E18F4
	0x037E18DC B 0x37E18F4
	0x037E18E0 B 0x37E18F4
	0x037E18E4 B 0x37E18F4
	0x037E18E8 MOV X21, X1
	0x037E18EC MOV X23, X0
	0x037E18F0 B 0x37E1A28
	0x037E18F4 MOV X21, X1
	0x037E18F8 MOV X23, X0
	0x037E18FC CMP W21, 0x1
	0x037E1900 B.NE 0x37E1970
	0x037E1904 MOV X0, X23
	0x037E1908 BL 0x3EB1AD0
	0x037E190C MOV X19, X0
	0x037E1910 ADRP X0, 0x912000
	0x037E1914 LDR X0, [X0 + 0x7D0]
	0x037E1918 BL 0x1C16D08
	0x037E191C LDR X8, [X19]
	0x037E1920 LDR X1, [X8]
	0x037E1924 BL 0x1C17270
	0x037E1928 TBZ X0, 0x0, 0x37E1948
	0x037E192C LDR X19, [X19]
	0x037E1930 BL 0x3EB1AE0
	0x037E1934 ADD X0, X31, 0xB0
	0x037E1938 MOV X1, X31
	0x037E193C BL 0x376BC1C
	0x037E1940 MOV X0, X19
	0x037E1944 BL 0x1C16F18
	0x037E1948 MOVZ W0, 0x8
	0x037E194C BL 0x3EB1AF0
	0x037E1950 LDR X8, [X19]
	0x037E1954 STR X8, [X0]
	0x037E1958 ADRP X1, 0x6D3000
	0x037E195C ADD X1, X1, 0xE58
	0x037E1960 MOV X2, X31
	0x037E1964 BL 0x3EB1B00
	0x037E1968 MOV X23, X0
	0x037E196C BL 0x3EB1AE0
	0x037E1970 MOV X0, X23
	0x037E1974 BL 0x1D2C690

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xC01000
	005 Move X20, 0x968000
	006 Move W8, [X19+772]
	007 Move X20, [X20+2376]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {26}
	012 Move X0, 0x966000
	013 Move X0, [X0+376]
	014 Call 0x1C17CF4
	015 Move X0, 0x93B000
	016 Move X0, [X0+624]
	017 Call 0x1C17CF4
	018 Move X0, 0x969000
	019 Move X0, [X0+160]
	020 Call 0x1C17CF4
	021 Move X0, 0x968000
	022 Move X0, [X0+2376]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X19+772], W8
	026 Move X8, [X20]
	027 Move X8, [X8+184]
	028 Move W9, [X8+352]
	029 Compare W9, 0
	030 JumpIfNotEqual {73}
	031 Move X8, [X8+328]
	032 Compare X8, 0
	033 JumpIfNotEqual {48}
	034 Move X8, 0x966000
	035 Move X8, [X8+376]
	036 Move X0, [X8]
	037 Call 0x1C17F10
	038 Move X8, 0x969000
	039 Move X8, [X8+160]
	040 Move X1, X31
	041 Move X3, X31
	042 Move X19, X0
	043 Move X2, [X8]
	044 Call Action`2<Object, Int32Enum>..ctor, X0, X1, X2
	045 Move X8, [X20]
	046 Move X8, [X8+184]
	047 Move [X8+328], X19
	048 Move X8, 0x966000
	049 Move X8, [X8+376]
	050 Move X0, [X8]
	051 Call 0x1C17F10
	052 Move X8, 0x969000
	053 Move X8, [X8+160]
	054 Move X1, X31
	055 Move X3, X31
	056 Move X19, X0
	057 Move X2, [X8]
	058 Call Action`2<Object, Int32Enum>..ctor, X0, X1, X2
	059 Move X8, 0x93B000
	060 Move X8, [X8+624]
	061 Move X0, [X8]
	062 Move W8, [X0+224]
	063 Compare W8, 0
	064 JumpIfNotEqual {66}
	065 Call 0x1C17DFC
	066 Move X0, X19
	067 Move X1, X31
	068 Call InputSystem.add_onActionChange, X0
	069 Move X8, [X20]
	070 Move W9, 1
	071 Move X8, [X8+184]
	072 Move [X8+352], W9
	073 Move X20, [X31+16]
	074 Move X19, [X31+24]
	075 Move X30, [X31+32]
	076 Return 

Method: System.Void UnhookFromActionChange()

Disassembly:
	0x037E4540 STR X31, [X8 + 0x10]
	0x037E4544 RET
	0x037E4548 SUB X31, X31, 0x20
	0x037E454C STP X1, X30, [X31 + 0x8]
	0x037E4550 STR X0, [X31]
	0x037E4554 ADD X0, X31, 0x0
	0x037E4558 MOV X1, X2
	0x037E455C MOV X2, X3
	0x037E4560 BL 0x37E47A4
	0x037E4564 LDR X30, [X31 + 0x10]
	0x037E4568 AND W0, W0, 0x1
	0x037E456C ADD X31, X31, 0x20
	0x037E4570 RET
	0x037E4574 STR X30, [X31 - 0x20]!
	0x037E4578 STP X20, X19, [X31 + 0x10]
	0x037E457C ADRP X19, 0xBFD000
	0x037E4580 ADRP X20, 0x965000
	0x037E4584 LDRB W8, [X19 + 0x310]
	0x037E4588 LDR X20, [X20 + 0x218]
	0x037E458C TBNZ X8, 0x0, 0x37E45A4
	0x037E4590 ADRP X0, 0x965000
	0x037E4594 LDR X0, [X0 + 0x218]
	0x037E4598 BL 0x1C16CF4
	0x037E459C MOVZ W8, 0x1
	0x037E45A0 STRB W8, [X19 + 0x310]
	0x037E45A4 LDR X0, [X20]
	0x037E45A8 BL 0x1C16F10
	0x037E45AC MOV X1, X31
	0x037E45B0 MOV X19, X0
	0x037E45B4 BL 0x33BDD8C
	0x037E45B8 LDR X8, [X20]
	0x037E45BC LDR X8, [X8 + 0xB8]
	0x037E45C0 STR X19, [X8]
	0x037E45C4 LDP X20, X19, [X31 + 0x10]
	0x037E45C8 LDR X30, [X31], #0x20
	0x037E45CC RET
	0x037E45D0 MOV X1, X31
	0x037E45D4 B 0x33BDD8C
	0x037E45D8 SUB X31, X31, 0x1A0
	0x037E45DC STR X29, [X31 + 0x170]
	0x037E45E0 STP X30, X21, [X31 + 0x180]
	0x037E45E4 STP X20, X19, [X31 + 0x190]
	0x037E45E8 ADRP X21, 0xBFD000
	0x037E45EC ADRP X20, 0x964000
	0x037E45F0 LDRB W8, [X21 + 0x311]
	0x037E45F4 LDR X20, [X20 + 0x948]
	0x037E45F8 MOV X19, X1
	0x037E45FC TBNZ X8, 0x0, 0x37E4614
	0x037E4600 ADRP X0, 0x964000
	0x037E4604 LDR X0, [X0 + 0x948]
	0x037E4608 BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0xBFE000
	006 Move X20, 0x965000
	007 Move W8, [X19+773]
	008 Move X20, [X20+2376]
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {27}
	013 Move X0, 0x963000
	014 Move X0, [X0+376]
	015 Call 0x1C17CF4
	016 Move X0, 0x938000
	017 Move X0, [X0+624]
	018 Call 0x1C17CF4
	019 Move X0, 0x966000
	020 Move X0, [X0+160]
	021 Call 0x1C17CF4
	022 Move X0, 0x965000
	023 Move X0, [X0+2376]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X19+773], W8
	027 Move X8, [X20]
	028 Move X8, [X8+184]
	029 Move W8, [X8+352]
	030 Compare W8, 0
	031 JumpIfEqual {56}
	032 Move X8, 0x963000
	033 Move X8, [X8+376]
	034 Move X19, 0x966000
	035 Move X21, 0x938000
	036 Move X0, [X8]
	037 Move X19, [X19+160]
	038 Move X21, [X21+624]
	039 Call 0x1C17F10
	040 Move X2, [X19]
	041 Move X1, X31
	042 Move X3, X31
	043 Move X19, X0
	044 Call Action`2<Object, Int32Enum>..ctor, X0, X1, X2
	045 Move X0, [X21]
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1C17DFC
	050 Move X0, X19
	051 Move X1, X31
	052 Call InputSystem.remove_onActionChange, X0
	053 Move X8, [X20]
	054 Move X8, [X8+184]
	055 Move [X8+352], W31
	056 Move X20, [X31+16]
	057 Move X19, [X31+24]
	058 Move X30, [X31+32]
	059 Move X21, [X31+40]
	060 Return 

Method: System.Void HookIntoDeviceChange()

Disassembly:
	0x037E4340 LDR W8, [X0 + 0xE0]
	0x037E4344 CBNZ W8, 0x37E4350
	0x037E4348 BL 0x1C16DFC
	0x037E434C LDR X0, [X23]
	0x037E4350 LDR X8, [X0 + 0xB8]
	0x037E4354 ADRP X26, 0x965000
	0x037E4358 ADRP X25, 0x965000
	0x037E435C LDR X21, [X8 + 0x10]
	0x037E4360 LDR X26, [X26 + 0x228]
	0x037E4364 LDR X25, [X25 + 0x220]
	0x037E4368 CBNZ X21, 0x37E43BC
	0x037E436C LDR W8, [X0 + 0xE0]
	0x037E4370 CBNZ W8, 0x37E437C
	0x037E4374 BL 0x1C16DFC
	0x037E4378 LDR X0, [X23]
	0x037E437C ADRP X9, 0x910000
	0x037E4380 LDR X8, [X0 + 0xB8]
	0x037E4384 LDR X9, [X9 + 0xE70]
	0x037E4388 LDR X22, [X8]
	0x037E438C LDR X0, [X9]
	0x037E4390 BL 0x1C16F10
	0x037E4394 ADRP X8, 0x965000
	0x037E4398 LDR X8, [X8 + 0x240]
	0x037E439C MOV X1, X22
	0x037E43A0 MOV X3, X31
	0x037E43A4 MOV X21, X0
	0x037E43A8 LDR X2, [X8]
	0x037E43AC BL 0x3314368
	0x037E43B0 LDR X8, [X23]
	0x037E43B4 LDR X8, [X8 + 0xB8]
	0x037E43B8 STR X21, [X8 + 0x10]
	0x037E43BC LDR X0, [X26]
	0x037E43C0 BL 0x1C16F10
	0x037E43C4 LDR X4, [X25]
	0x037E43C8 MOV X1, X19
	0x037E43CC MOV X2, X20
	0x037E43D0 MOV X3, X21
	0x037E43D4 MOV X22, X0
	0x037E43D8 BL 0x25D66E8
	0x037E43DC LDR X8, [X24]
	0x037E43E0 MOVZ W2, 0x168
	0x037E43E4 MOV W1, W31
	0x037E43E8 LDR X0, [X8 + 0xB8]
	0x037E43EC BL 0x3EB1B10
	0x037E43F0 MOV X0, X22
	0x037E43F4 LDP X20, X19, [X31 + 0x40]
	0x037E43F8 LDP X22, X21, [X31 + 0x30]
	0x037E43FC LDP X24, X23, [X31 + 0x20]
	0x037E4400 LDP X26, X25, [X31 + 0x10]
	0x037E4404 LDR X30, [X31], #0x50
	0x037E4408 RET
	0x037E440C STP X30, X21, [X31 - 0x20]!
	0x037E4410 STP X20, X19, [X31 + 0x10]
	0x037E4414 ADRP X20, 0xBFD000
	0x037E4418 ADRP X19, 0x964000
	0x037E441C LDRB W8, [X20 + 0x30A]
	0x037E4420 LDR X19, [X19 + 0x948]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xBFE000
	005 Move X20, 0x965000
	006 Move W8, [X19+774]
	007 Move X20, [X20+2376]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {26}
	012 Move X0, 0x964000
	013 Move X0, [X0+2952]
	014 Call 0x1C17CF4
	015 Move X0, 0x938000
	016 Move X0, [X0+624]
	017 Call 0x1C17CF4
	018 Move X0, 0x966000
	019 Move X0, [X0+448]
	020 Call 0x1C17CF4
	021 Move X0, 0x965000
	022 Move X0, [X0+2376]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X19+774], W8
	026 Move X8, [X20]
	027 Move X8, [X8+184]
	028 Move W9, [X8+353]
	029 Compare W9, 0
	030 JumpIfNotEqual {62}
	031 Move X19, [X8+336]
	032 Compare X19, 0
	033 JumpIfNotEqual {48}
	034 Move X8, 0x964000
	035 Move X8, [X8+2952]
	036 Move X0, [X8]
	037 Call 0x1C17F10
	038 Move X8, 0x966000
	039 Move X8, [X8+448]
	040 Move X1, X31
	041 Move X3, X31
	042 Move X19, X0
	043 Move X2, [X8]
	044 Call Action`2<Object, Int32Enum>..ctor, X0, X1, X2
	045 Move X8, [X20]
	046 Move X8, [X8+184]
	047 Move [X8+336], X19
	048 Move X8, 0x938000
	049 Move X8, [X8+624]
	050 Move X0, [X8]
	051 Move W8, [X0+224]
	052 Compare W8, 0
	053 JumpIfNotEqual {55}
	054 Call 0x1C17DFC
	055 Move X0, X19
	056 Move X1, X31
	057 Call InputSystem.add_onDeviceChange, X0
	058 Move X8, [X20]
	059 Move W9, 1
	060 Move X8, [X8+184]
	061 Move [X8+353], W9
	062 Move X20, [X31+16]
	063 Move X19, [X31+24]
	064 Move X30, [X31+32]
	065 Return 

Method: System.Void UnhookFromDeviceChange()

Disassembly:
	0x037E44B4 LDP X30, X21, [X31], #0x20
	0x037E44B8 RET
	0x037E44BC BL 0x1C16F20
	0x037E44C0 BL 0x1C16F28
	0x037E44C4 STR X30, [X31 - 0x10]!
	0x037E44C8 BL 0x37E3540
	0x037E44CC BL 0x37E34B4
	0x037E44D0 BL 0x37E0554
	0x037E44D4 LDR X30, [X31], #0x10
	0x037E44D8 B 0x37E440C
	0x037E44DC STP X30, X19, [X31 - 0x10]!
	0x037E44E0 MOV X19, X0
	0x037E44E4 LDR W0, [X0]
	0x037E44E8 MOVZ W1, 0x1
	0x037E44EC MOV X2, X31
	0x037E44F0 BL 0x37E1288
	0x037E44F4 LDR W0, [X19]
	0x037E44F8 LDP X30, X19, [X31], #0x10
	0x037E44FC RET
	0x037E4500 STP X30, X19, [X31 - 0x10]!
	0x037E4504 ADRP X19, 0xBFD000
	0x037E4508 LDRB W8, [X19 + 0x30F]
	0x037E450C TBNZ X8, 0x0, 0x37E4530
	0x037E4510 ADRP X0, 0x965000
	0x037E4514 LDR X0, [X0 + 0x180]
	0x037E4518 BL 0x1C16CF4
	0x037E451C ADRP X0, 0x965000
	0x037E4520 LDR X0, [X0 + 0x108]
	0x037E4524 BL 0x1C16CF4
	0x037E4528 MOVZ W8, 0x1
	0x037E452C STRB W8, [X19 + 0x30F]
	0x037E4530 MOV W0, W31
	0x037E4534 LDP X30, X19, [X31], #0x10
	0x037E4538 RET
	0x037E453C STP X31, X31, [X8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xBFE000
	005 Move X20, 0x965000
	006 Move W8, [X19+775]
	007 Move X20, [X20+2376]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x938000
	013 Move X0, [X0+624]
	014 Call 0x1C17CF4
	015 Move X0, 0x965000
	016 Move X0, [X0+2376]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X19+775], W8
	020 Move X8, [X20]
	021 Move X8, [X8+184]
	022 Move W9, [X8+353]
	023 Compare W9, 0
	024 JumpIfEqual {39}
	025 Move X9, 0x938000
	026 Move X9, [X9+624]
	027 Move X19, [X8+336]
	028 Move X0, [X9]
	029 Move W9, [X0+224]
	030 Compare W9, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1C17DFC
	033 Move X0, X19
	034 Move X1, X31
	035 Call InputSystem.remove_onDeviceChange, X0
	036 Move X8, [X20]
	037 Move X8, [X8+184]
	038 Move [X8+353], W31
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move X30, [X31+32]
	042 Return 

Method: System.Void HookIntoEvents()

Disassembly:
	0x037E1450 ADD X0, X31, 0x90
	0x037E1454 MOV X1, X31
	0x037E1458 BL 0x376B214
	0x037E145C UBFM X8, X1, 0x20, 0x3F
	0x037E1460 CMP W8, 0x1
	0x037E1464 B.LT 0x37E17DC
	0x037E1468 ADRP X8, 0x967000
	0x037E146C LDR X8, [X8 + 0xAC0]
	0x037E1470 LDR X3, [X8]
	0x037E1474 ADD X0, X31, 0x70
	0x037E1478 MOVZ W1, 0x2
	0x037E147C MOV W2, W31
	0x037E1480 BL 0x2DFA684
	0x037E1484 LDR X8, [X24]
	0x037E1488 LDR X8, [X8 + 0xB8]
	0x037E148C LDR X8, [X8 + 0x18]
	0x037E1490 CBZ X8, 0x37E1864
	0x037E1494 LDR W9, [X8 + 0x18]
	0x037E1498 CMP W9, W19
	0x037E149C B.LS 0x37E1868
	0x037E14A0 ADD X8, X8, X25, 0x2, LSL
	0x037E14A4 ADD X0, X8, 0x20
	0x037E14A8 BL 0x37D38F8
	0x037E14AC ADRP X8, 0x968000
	0x037E14B0 LDR X8, [X8 + 0xE8]
	0x037E14B4 MOV X2, X0
	0x037E14B8 MOV X5, X1
	0x037E14BC LDR X6, [X8]
	0x037E14C0 ADD X0, X31, 0x70
	0x037E14C4 MOVN W3, 0x0
	0x037E14C8 MOVN W4, 0x0
	0x037E14CC MOV X1, X2
	0x037E14D0 MOV X2, X5
	0x037E14D4 MOV W5, W31
	0x037E14D8 BL 0x212FA90
	0x037E14DC TBZ X20, 0x0, 0x37E1550
	0x037E14E0 LDR W21, [X31 + 0x70]
	0x037E14E4 ADD X0, X31, 0x70
	0x037E14E8 BL 0x37E22F8
	0x037E14EC LDR X8, [X24]
	0x037E14F0 LDR X8, [X8 + 0xB8]
	0x037E14F4 LDR X8, [X8 + 0x20]
	0x037E14F8 CBZ X8, 0x37E1874
	0x037E14FC LDR W9, [X8 + 0x18]
	0x037E1500 CMP W9, W19
	0x037E1504 B.LS 0x37E1878
	0x037E1508 MOVZ W9, 0xB8
	0x037E150C MOV W22, W0
	0x037E1510 MADD X0, X25, X9, X8
	0x037E1514 LDRB W8, [X0 + 0x20]!
	0x037E1518 CBZ W8, 0x37E1550
	0x037E151C ADRP X8, 0x968000
	0x037E1520 LDR X8, [X8 + 0x110]
	0x037E1524 LDR X1, [X8]
	0x037E1528 BL 0x2433A38
	0x037E152C ADRP X8, 0x968000
	0x037E1530 LDR X8, [X8 + 0xF8]
	0x037E1534 MOV X3, X0
	0x037E1538 MOV X4, X1
	0x037E153C LDR X5, [X8]
	0x037E1540 ADD X0, X31, 0x70
	0x037E1544 MOV W1, W21
	0x037E1548 MOV W2, W22
	0x037E154C BL 0x2130498
	0x037E1550 ADRP X8, 0x968000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xC01000
	005 Move X20, 0x968000
	006 Move W8, [X19+776]
	007 Move X20, [X20+2376]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {26}
	012 Move X0, 0x965000
	013 Move X0, [X0+1784]
	014 Call 0x1C17CF4
	015 Move X0, 0x93B000
	016 Move X0, [X0+624]
	017 Call 0x1C17CF4
	018 Move X0, 0x969000
	019 Move X0, [X0+128]
	020 Call 0x1C17CF4
	021 Move X0, 0x968000
	022 Move X0, [X0+2376]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X19+776], W8
	026 Move X8, [X20]
	027 Move X8, [X8+184]
	028 Move W9, [X8+354]
	029 Compare W9, 0
	030 JumpIfNotEqual {70}
	031 Move X8, [X8+344]
	032 Compare X8, 0
	033 JumpIfNotEqual {48}
	034 Move X8, 0x965000
	035 Move X8, [X8+1784]
	036 Move X0, [X8]
	037 Call 0x1C17F10
	038 Move X8, 0x969000
	039 Move X8, [X8+128]
	040 Move X1, X31
	041 Move X3, X31
	042 Move X19, X0
	043 Move X2, [X8]
	044 Call Action`2<InputEventPtr, Object>..ctor, X0, X1, X2
	045 Move X8, [X20]
	046 Move X8, [X8+184]
	047 Move [X8+344], X19
	048 Move X8, 0x93B000
	049 Move X8, [X8+624]
	050 Move X0, [X8]
	051 Move W8, [X0+224]
	052 Compare W8, 0
	053 JumpIfNotEqual {55}
	054 Call 0x1C17DFC
	055 Move X0, X31
	056 Call InputSystem.get_onEvent
	057 Move X8, [X20]
	058 And X0, X0, 255
	059 Move X2, X31
	060 Move X8, [X8+184]
	061 Move X1, [X8+344]
	062 Call InputEventListener.op_Addition, X0, X1
	063 And X0, X0, 255
	064 Move X1, X31
	065 Call InputSystem.set_onEvent, X0
	066 Move X8, [X20]
	067 Move W9, 1
	068 Move X8, [X8+184]
	069 Move [X8+354], W9
	070 Move X20, [X31+16]
	071 Move X19, [X31+24]
	072 Move X30, [X31+32]
	073 Return 

Method: System.Void UnhookFromDeviceStateChange()

Disassembly:
	0x037E1554 LDR X8, [X8 + 0x100]
	0x037E1558 LDP V0, V1, [X31 + 0x70]
	0x037E155C LDR X3, [X8]
	0x037E1560 STP V0, V1, [X31 + 0x100]
	0x037E1564 ADD X8, X31, 0x0
	0x037E1568 ADD X0, X31, 0x90
	0x037E156C ADD X1, X31, 0x100
	0x037E1570 MOV X2, X31
	0x037E1574 BL 0x2201CE4
	0x037E1578 ADD X0, X31, 0xB0
	0x037E157C ADD X1, X31, 0x0
	0x037E1580 MOVZ W2, 0x50
	0x037E1584 BL 0x3EB1AC0
	0x037E1588 ADD X0, X31, 0xB0
	0x037E158C MOV X1, X31
	0x037E1590 BL 0x376B9BC
	0x037E1594 AND W8, W0, W20, 0x0
	0x037E1598 TBZ X8, 0x0, 0x37E17B0
	0x037E159C LDR X8, [X24]
	0x037E15A0 LDR X8, [X8 + 0xB8]
	0x037E15A4 LDR X20, [X8 + 0x20]
	0x037E15A8 CBZ X20, 0x37E187C
	0x037E15AC ADD X0, X31, 0x0
	0x037E15B0 ADD X1, X31, 0xB0
	0x037E15B4 MOVZ W2, 0x50
	0x037E15B8 BL 0x3EB1AC0
	0x037E15BC LDR W8, [X20 + 0x18]
	0x037E15C0 CMP W8, W19
	0x037E15C4 B.LS 0x37E1880
	0x037E15C8 MOVZ W8, 0xB8
	0x037E15CC MADD X8, X25, X8, X20
	0x037E15D0 ADD X0, X8, 0x78
	0x037E15D4 ADD X1, X31, 0x0
	0x037E15D8 MOVZ W2, 0x50
	0x037E15DC BL 0x3EB1AC0
	0x037E15E0 ADD X8, X31, 0x100
	0x037E15E4 ADD X0, X31, 0xB0
	0x037E15E8 MOV X1, X31
	0x037E15EC BL 0x376B9EC
	0x037E15F0 ADRP X8, 0x968000
	0x037E15F4 LDP V0, V1, [X31 + 0x100]
	0x037E15F8 LDR X8, [X8 + 0xF0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xC01000
	005 Move X19, 0x968000
	006 Move W8, [X20+777]
	007 Move X19, [X19+2376]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x93B000
	013 Move X0, [X0+624]
	014 Call 0x1C17CF4
	015 Move X0, 0x968000
	016 Move X0, [X0+2376]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+777], W8
	020 Move X8, [X19]
	021 Move X8, [X8+184]
	022 Move W8, [X8+354]
	023 Compare W8, 0
	024 JumpIfEqual {46}
	025 Move X8, 0x93B000
	026 Move X8, [X8+624]
	027 Move X0, [X8]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Move X0, X31
	033 Call InputSystem.get_onEvent
	034 Move X8, [X19]
	035 And X0, X0, 255
	036 Move X2, X31
	037 Move X8, [X8+184]
	038 Move X1, [X8+344]
	039 Call InputEventListener.op_Subtraction, X0, X1
	040 And X0, X0, 255
	041 Move X1, X31
	042 Call InputSystem.set_onEvent, X0
	043 Move X8, [X19]
	044 Move X8, [X8+184]
	045 Move [X8+354], W31
	046 Move X20, [X31+16]
	047 Move X19, [X31+24]
	048 Move X30, [X31+32]
	049 Return 

Method: System.Void DisposeAndResetGlobalState()

Disassembly:
	0x037E540C LDP X30, X21, [X31 + 0x20]
	0x037E5410 LDP D9, D8, [X31 + 0x10]
	0x037E5414 LDR V10, [X31], #0x40
	0x037E5418 RET
	0x037E541C BL 0x1C16F20
	0x037E5420 SUB X31, X31, 0x90
	0x037E5424 STP X30, X25, [X31 + 0x50]
	0x037E5428 STP X24, X23, [X31 + 0x60]
	0x037E542C STP X22, X21, [X31 + 0x70]
	0x037E5430 STP X20, X19, [X31 + 0x80]
	0x037E5434 ADRP X21, 0xBFC000
	0x037E5438 ADRP X20, 0x936000
	0x037E543C LDRB W8, [X21 + 0x318]
	0x037E5440 LDR X20, [X20 + 0x270]
	0x037E5444 MOV X19, X0
	0x037E5448 TBNZ X8, 0x0, 0x37E54A8
	0x037E544C ADRP X0, 0x936000
	0x037E5450 LDR X0, [X0 + 0xF10]
	0x037E5454 BL 0x1C16CF4
	0x037E5458 ADRP X0, 0x936000
	0x037E545C LDR X0, [X0 + 0xF18]
	0x037E5460 BL 0x1C16CF4
	0x037E5464 ADRP X0, 0x936000
	0x037E5468 LDR X0, [X0 + 0xF20]
	0x037E546C BL 0x1C16CF4
	0x037E5470 ADRP X0, 0x936000
	0x037E5474 LDR X0, [X0 + 0x270]
	0x037E5478 BL 0x1C16CF4
	0x037E547C ADRP X0, 0x962000
	0x037E5480 LDR X0, [X0 + 0x410]
	0x037E5484 BL 0x1C16CF4
	0x037E5488 ADRP X0, 0x937000
	0x037E548C LDR X0, [X0 + 0xE50]
	0x037E5490 BL 0x1C16CF4
	0x037E5494 ADRP X0, 0x936000
	0x037E5498 LDR X0, [X0 + 0xF30]
	0x037E549C BL 0x1C16CF4
	0x037E54A0 MOVZ W8, 0x1
	0x037E54A4 STRB W8, [X21 + 0x318]
	0x037E54A8 LDR X0, [X20]
	0x037E54AC STP X31, X31, [X31 + 0x30]
	0x037E54B0 STR X31, [X31 + 0x40]
	0x037E54B4 ADRP X22, 0x936000
	0x037E54B8 LDR W8, [X0 + 0xE0]
	0x037E54BC LDR X22, [X22 + 0xF30]
	0x037E54C0 CBNZ W8, 0x37E54C8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xBFD000
	006 Move X19, 0x964000
	007 Move W8, [X20+778]
	008 Move X19, [X19+2376]
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x964000
	014 Move X0, [X0+2376]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X20+778], W8
	018 Move X8, [X19]
	019 Move X0, [X8+184]
	020 Move W8, [X0+8]
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move X20, X31
	023 Move W21, 120
	024 Move X8, [X0+32]
	025 Compare X8, 0
	026 JumpIfEqual {50}
	027 Move W9, [X8+24]
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Add X0, X8, X21
	030 Move X1, X31
	031 Call MatchResult.Dispose, X0
	032 Move X8, [X19]
	033 Add X20, X20, 1
	034 Add X21, X21, 184
	035 Move X0, [X8+184]
	036 NotImplemented "Instruction LDRSW not yet implemented."
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move W20, [X0+4]
	039 Move W2, 360
	040 Move W1, W31
	041 Call 0x3EB2B10
	042 Move X8, [X19]
	043 Move X8, [X8+184]
	044 Move [X8+4], W20
	045 Move X20, [X31+16]
	046 Move X19, [X31+24]
	047 Move X30, [X31+32]
	048 Move X21, [X31+40]
	049 Return 
	050 Call 0x1C17F20
	051 Call 0x1C17F28

Method: System.Void ResetGlobals()

Disassembly:
	0x037E54C4 BL 0x1C16DFC
	0x037E54C8 ADRP X23, 0x936000
	0x037E54CC ADRP X24, 0x936000
	0x037E54D0 ADRP X25, 0x962000
	0x037E54D4 ADRP X21, 0x937000
	0x037E54D8 ADRP X20, 0x936000

ISIL:
	001 Move [X31-16], X30
	002 Call InputUser.UnhookFromActionChange
	003 Call InputUser.UnhookFromDeviceChange
	004 Call InputUser.UnhookFromDeviceStateChange
	005 Move X30, [X31+16]
	006 Call InputUser.DisposeAndResetGlobalState
	007 Return 

