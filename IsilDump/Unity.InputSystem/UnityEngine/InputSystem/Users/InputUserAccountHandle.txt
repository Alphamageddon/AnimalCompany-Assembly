Type: UnityEngine.InputSystem.Users.InputUserAccountHandle

Method: System.String get_apiName()

Disassembly:
	0x037E5654 BL 0x2BC4968
	0x037E5658 CBNZ X20, 0x37E5664

ISIL:
	001 Move X0, [X0]
	002 Return X0

Method: System.UInt64 get_handle()

Disassembly:
	0x037E565C MOV X0, X19
	0x037E5660 BL 0x1D2C690

ISIL:
	001 Move X0, [X0+8]
	002 Return X0

Method: System.Void .ctor(System.String apiName, System.UInt64 handle)

Disassembly:
	0x037E5664 MOV X0, X20
	0x037E5668 BL 0x1C16F18
	0x037E566C BL 0x1990590
	0x037E5670 STR X30, [X31 - 0x20]!
	0x037E5674 STP X20, X19, [X31 + 0x10]
	0x037E5678 ADRP X20, 0xBFC000
	0x037E567C LDRB W8, [X20 + 0x319]
	0x037E5680 MOV X19, X0
	0x037E5684 TBNZ X8, 0x0, 0x37E56B4
	0x037E5688 ADRP X0, 0x937000
	0x037E568C LDR X0, [X0 + 0xE50]
	0x037E5690 BL 0x1C16CF4
	0x037E5694 ADRP X0, 0x964000
	0x037E5698 LDR X0, [X0 + 0x300]
	0x037E569C BL 0x1C16CF4
	0x037E56A0 ADRP X0, 0x961000
	0x037E56A4 LDR X0, [X0 + 0xD58]
	0x037E56A8 BL 0x1C16CF4
	0x037E56AC MOVZ W8, 0x1
	0x037E56B0 STRB W8, [X20 + 0x319]
	0x037E56B4 CBZ X19, 0x37E5760
	0x037E56B8 LDR X0, [X19 + 0x78]
	0x037E56BC CBZ X0, 0x37E5760
	0x037E56C0 ADRP X9, 0x961000
	0x037E56C4 LDR X9, [X9 + 0xD58]
	0x037E56C8 LDR X8, [X0]
	0x037E56CC LDR X1, [X9]
	0x037E56D0 LDRB W10, [X8 + 0x130]
	0x037E56D4 LDRB W9, [X1 + 0x130]
	0x037E56D8 CMP W10, W9
	0x037E56DC B.CC 0x37E5764

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, X1
	006 Move X20, X0
	007 Move X0, X1
	008 Move X1, X31
	009 Move X19, X2
	010 Call String.IsNullOrEmpty, X0
	011 Move TEMP, X0
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {22}
	015 Move [X20], X21
	016 Move [X20+8], X19
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 Move X30, [X31+32]
	020 Move X21, [X31+40]
	021 Return 
	022 Move X0, 0x914000
	023 Move X0, [X0+1320]
	024 Call 0x1C17D08
	025 Call 0x1C17F10
	026 Move X19, X0
	027 Move X0, 0x965000
	028 Move X0, [X0+584]
	029 Call 0x1C17D08
	030 Move X1, X0
	031 Move X0, X19
	032 Move X2, X31
	033 Call ArgumentNullException..ctor, X0, X1
	034 Move X0, 0x965000
	035 Move X0, [X0+592]
	036 Call 0x1C17D08
	037 Move X1, X0
	038 Move X0, X19
	039 Call 0x1C17DEC

Method: System.String ToString()

Disassembly:
	0x037E56E0 LDR X8, [X8 + 0xC8]
	0x037E56E4 ADD X8, X8, X9, 0x3, LSL
	0x037E56E8 LDUR X8, [X8 - 0x8]
	0x037E56EC CMP X8, X1
	0x037E56F0 B.NE 0x37E5764
	0x037E56F4 ADRP X9, 0x964000
	0x037E56F8 LDR X9, [X9 + 0x300]
	0x037E56FC LDP X8, X1, [X0 + 0x1A8]
	0x037E5700 ADRP X20, 0x937000
	0x037E5704 MOV X2, X19
	0x037E5708 LDR X3, [X9]
	0x037E570C LDR X20, [X20 + 0xE50]
	0x037E5710 MOV X0, X8
	0x037E5714 BL 0x223C9C8
	0x037E5718 LDR X8, [X20]
	0x037E571C MOV W19, W0
	0x037E5720 LDR W9, [X8 + 0xE0]
	0x037E5724 CBNZ W9, 0x37E5734
	0x037E5728 MOV X0, X8
	0x037E572C BL 0x1C16DFC
	0x037E5730 LDR X8, [X20]
	0x037E5734 LDR X8, [X8 + 0xB8]
	0x037E5738 LDP W8, W9, [X8 + 0xC]
	0x037E573C SUB W9, W9, 0x1
	0x037E5740 CMP W19, W9
	0x037E5744 CSEL W9, W9, W19, GT
	0x037E5748 CMP W19, 0x0
	0x037E574C LDP X20, X19, [X31 + 0x10]
	0x037E5750 CSEL W9, W31, W9, LT
	0x037E5754 ADD W0, W9, W8
	0x037E5758 LDR X30, [X31], #0x20
	0x037E575C RET
	0x037E5760 BL 0x1C16F20
	0x037E5764 BL 0x1C171E0
	0x037E5768 LDRB W0, [X0 + 0xC8]
	0x037E576C RET
	0x037E5770 AND W8, W1, 0x1
	0x037E5774 STRB W8, [X0 + 0xC8]
	0x037E5778 RET
	0x037E577C LDR W0, [X0 + 0xCC]
	0x037E5780 RET
	0x037E5784 STR W1, [X0 + 0xCC]
	0x037E5788 RET
	0x037E578C LDR W0, [X0 + 0xD0]
	0x037E5790 RET
	0x037E5794 STR W1, [X0 + 0xD0]
	0x037E5798 RET
	0x037E579C LDR X0, [X0 + 0x3A8]
	0x037E57A0 RET

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+32], X20
	004 Move [X31+40], X19
	005 Move X20, 0xBFD000
	006 Move W8, [X20+786]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {23}
	012 Move X0, 0x965000
	013 Move X0, [X0+600]
	014 Call 0x1C17CF4
	015 Move X0, 0x910000
	016 Move X0, [X0+1880]
	017 Call 0x1C17CF4
	018 Move X0, 0x959000
	019 Move X0, [X0+1800]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+786], W8
	023 Move X20, [X19]
	024 Compare X20, 0
	025 JumpIfEqual {41}
	026 Move X8, 0x910000
	027 Move X8, [X8+1880]
	028 Move X9, [X19+8]
	029 Move X19, 0x959000
	030 Add X1, X31, 0
	031 Move X0, [X8]
	032 Move X19, [X19+1800]
	033 Move [X31], X9
	034 Call 0x1C17E04
	035 Move X8, [X19]
	036 Move X2, X0
	037 Move X1, X20
	038 Move X3, X31
	039 Move X0, X8
	040 Call String.Format, X0, X1, X2
	041 Move X8, 0x965000
	042 Move V0, [X19]
	043 Move X8, [X8+600]
	044 Add X1, X31, 0
	045 Move [X31], V0
	046 Move X0, [X8]
	047 Call 0x1C17E04
	048 Move X1, X31
	049 Call ValueType.ToString, X0
	050 Move X20, [X31+32]
	051 Move X19, [X31+40]
	052 Move X30, [X31+16]
	053 Add X31, X31, 48
	054 Return X0

Method: System.Boolean Equals(UnityEngine.InputSystem.Users.InputUserAccountHandle other)

Disassembly:
	0x037E57A4 STR X1, [X0 + 0x3A8]
	0x037E57A8 RET
	0x037E57AC STP X30, X21, [X31 - 0x20]!
	0x037E57B0 STP X20, X19, [X31 + 0x10]
	0x037E57B4 ADRP X20, 0xBFC000
	0x037E57B8 LDRB W8, [X20 + 0x31A]
	0x037E57BC MOV X19, X0
	0x037E57C0 TBNZ X8, 0x0, 0x37E57D8
	0x037E57C4 ADRP X0, 0x90E000
	0x037E57C8 LDR X0, [X0 + 0x598]
	0x037E57CC BL 0x1C16CF4
	0x037E57D0 MOVZ W8, 0x1
	0x037E57D4 STRB W8, [X20 + 0x31A]
	0x037E57D8 MOV X0, X19
	0x037E57DC MOV X1, X31
	0x037E57E0 BL 0x3E55170
	0x037E57E4 LDR X8, [X19 + 0x38]
	0x037E57E8 CBZ X8, 0x37E585C
	0x037E57EC ADRP X9, 0x90E000
	0x037E57F0 LDR X9, [X9 + 0x598]
	0x037E57F4 LDR X20, [X8 + 0x40]
	0x037E57F8 LDR X0, [X9]
	0x037E57FC LDR W9, [X0 + 0xE0]
	0x037E5800 CBNZ W9, 0x37E5808
	0x037E5804 BL 0x1C16DFC
	0x037E5808 MOV X0, X20
	0x037E580C MOV X1, X31
	0x037E5810 MOV X2, X31
	0x037E5814 BL 0x3C3883C
	0x037E5818 LDR X21, [X19 + 0x38]
	0x037E581C TBZ X0, 0x0, 0x37E5828
	0x037E5820 CBZ X21, 0x37E585C
	0x037E5824 LDR X20, [X21 + 0x30]
	0x037E5828 LDR X8, [X19]
	0x037E582C MOV X0, X19
	0x037E5830 LDR X9, [X8 + 0x268]
	0x037E5834 LDR X1, [X8 + 0x270]
	0x037E5838 BLR X9
	0x037E583C CBZ X21, 0x37E585C
	0x037E5840 MOV X1, X20
	0x037E5844 LDP X20, X19, [X31 + 0x10]
	0x037E5848 MOV X2, X0
	0x037E584C MOV X0, X21
	0x037E5850 MOV X3, X31

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+32], X22
	004 Move [X31+40], X21
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move X22, 0xBFD000
	008 Move W8, [X22+787]
	009 Move X19, X2
	010 Move X21, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x910000
	017 Move X0, [X0+1880]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+787], W8
	021 Move X0, [X20]
	022 Move X1, X21
	023 Move X2, X31
	024 Call String.Equals, X0, X1
	025 Move TEMP, X0
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfNotEqual {45}
	029 Move X21, 0x910000
	030 Move X21, [X21+1880]
	031 Move X8, [X20+8]
	032 Add X1, X31, 24
	033 Move X0, [X21]
	034 Move [X31+24], X8
	035 Call 0x1C17E04
	036 Move X20, X0
	037 Move X0, [X21]
	038 Add X1, X31, 8
	039 Move [X31+8], X19
	040 Call 0x1C17E04
	041 Move X1, X0
	042 Move X0, X20
	043 Move X2, X31
	044 Call Object.Equals, X0, X1
	045 Move W0, W31
	046 Move X20, [X31+48]
	047 Move X19, [X31+56]
	048 Move X22, [X31+32]
	049 Move X21, [X31+40]
	050 Move X30, [X31+16]
	051 And W0, W0, 1
	052 Add X31, X31, 64
	053 Return X0

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x037E5854 LDP X30, X21, [X31], #0x20
	0x037E5858 B 0x3E4EC58
	0x037E585C BL 0x1C16F20
	0x037E5860 STP X29, X30, [X31 - 0x30]!
	0x037E5864 STP X22, X21, [X31 + 0x10]
	0x037E5868 STP X20, X19, [X31 + 0x20]
	0x037E586C SUB X31, X31, 0x220
	0x037E5870 ADRP X21, 0xBFC000
	0x037E5874 ADRP X22, 0x936000
	0x037E5878 LDRB W8, [X21 + 0x31B]
	0x037E587C LDR X22, [X22 + 0x270]
	0x037E5880 MOV W20, W1
	0x037E5884 MOV X19, X0
	0x037E5888 TBNZ X8, 0x0, 0x37E58D0
	0x037E588C ADRP X0, 0x90E000
	0x037E5890 LDR X0, [X0 + 0xA28]
	0x037E5894 BL 0x1C16CF4
	0x037E5898 ADRP X0, 0x964000
	0x037E589C LDR X0, [X0 + 0x308]
	0x037E58A0 BL 0x1C16CF4
	0x037E58A4 ADRP X0, 0x936000
	0x037E58A8 LDR X0, [X0 + 0x270]
	0x037E58AC BL 0x1C16CF4
	0x037E58B0 ADRP X0, 0x90E000
	0x037E58B4 LDR X0, [X0 + 0x598]
	0x037E58B8 BL 0x1C16CF4
	0x037E58BC ADRP X0, 0x964000
	0x037E58C0 LDR X0, [X0 + 0x310]
	0x037E58C4 BL 0x1C16CF4
	0x037E58C8 MOVZ W8, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xBFD000
	006 Move W8, [X21+788]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x965000
	014 Move X0, [X0+600]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+788], W8
	018 Compare X20, 0
	019 JumpIfEqual {25}
	020 Move X8, 0x965000
	021 Move X8, [X8+600]
	022 Move X9, [X20]
	023 Move X8, [X8]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move W0, W31
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Return X0
	031 Move X0, X20
	032 Call 0x1C17E08
	033 Move X1, [X0]
	034 Move X2, [X0+8]
	035 Move X0, X19
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move X30, [X31+32]
	039 Move X21, [X31+40]
	040 Call InputUserAccountHandle.Equals, X0, X1
	041 Return X0

Method: System.Boolean op_Equality(UnityEngine.InputSystem.Users.InputUserAccountHandle left, UnityEngine.InputSystem.Users.InputUserAccountHandle right)

Disassembly:
	0x037E5548 LDR X8, [X25]
	0x037E554C LDRB W11, [X9 + 0x130]
	0x037E5550 LDRB W10, [X8 + 0x130]
	0x037E5554 CMP W11, W10
	0x037E5558 B.CC 0x37E5524
	0x037E555C LDR X9, [X9 + 0xC8]
	0x037E5560 ADD X9, X9, X10, 0x3, LSL
	0x037E5564 LDUR X9, [X9 - 0x8]
	0x037E5568 CMP X9, X8
	0x037E556C B.NE 0x37E5524
	0x037E5570 CMP X19, X0

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+8], X1
	003 Move [X31+16], X30
	004 Move [X31], X0
	005 Add X0, X31, 0
	006 Move X1, X2
	007 Move X2, X3
	008 Call InputUserAccountHandle.Equals, X0, X1
	009 Move X30, [X31+16]
	010 And W0, W0, 1
	011 Add X31, X31, 32
	012 Return X0

Method: System.Boolean op_Inequality(UnityEngine.InputSystem.Users.InputUserAccountHandle left, UnityEngine.InputSystem.Users.InputUserAccountHandle right)

Disassembly:
	0x037E58CC STRB W8, [X21 + 0x31B]
	0x037E58D0 LDR X0, [X22]
	0x037E58D4 LDR W8, [X0 + 0xE0]
	0x037E58D8 CBNZ W8, 0x37E58E0
	0x037E58DC BL 0x1C16DFC
	0x037E58E0 MOV X0, X31
	0x037E58E4 BL 0x376F87C
	0x037E58E8 TBZ X0, 0x0, 0x37E5918
	0x037E58EC ADRP X8, 0x90E000
	0x037E58F0 LDR X8, [X8 + 0xA28]
	0x037E58F4 ADRP X21, 0x964000
	0x037E58F8 LDR X0, [X8]

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+8], X1
	003 Move [X31+16], X30
	004 Move [X31], X0
	005 Add X0, X31, 0
	006 Move X1, X2
	007 Move X2, X3
	008 Call InputUserAccountHandle.Equals, X0, X1
	009 Move X30, [X31+16]
	010 NotImplemented "Instruction ORN not yet implemented."
	011 And W0, W8, 1
	012 Add X31, X31, 32
	013 Return X0

Method: System.Int32 GetHashCode()

Disassembly:
	0x037E58FC LDR W8, [X0 + 0xE0]
	0x037E5900 LDR X21, [X21 + 0x310]
	0x037E5904 CBNZ W8, 0x37E590C
	0x037E5908 BL 0x1C16DFC
	0x037E590C LDR X0, [X21]
	0x037E5910 MOV X1, X31
	0x037E5914 BL 0x3C06A04
	0x037E5918 TBNZ X20, 0x1F, 0x37E5930
	0x037E591C MOV X0, X19
	0x037E5920 MOV W1, W20
	0x037E5924 BL 0x37E59C8
	0x037E5928 MOV W1, W0
	0x037E592C B 0x37E5950
	0x037E5930 LDR W8, [X19 + 0x120]
	0x037E5934 ADDS W31, W8, 0x1
	0x037E5938 B.EQ 0x37E5944
	0x037E593C LDR W1, [X19 + 0x124]
	0x037E5940 B 0x37E5950
	0x037E5944 LDR W8, [X19 + 0x158]
	0x037E5948 CMP W8, 0x1
	0x037E594C CSINV W1, W31, W31, GE
	0x037E5950 ADDS W31, W1, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move [X31+8], X31
	005 Move X19, X0
	006 Move X0, [X0]
	007 Compare X0, 0
	008 JumpIfEqual {15}
	009 Move X8, [X0]
	010 Move X9, [X8+344]
	011 Move X1, [X8+352]
	012 NotImplemented "Instruction BLR not yet implemented."
	013 Move W8, 397
	014 Multiply W20, W0, W8
	015 Move W20, W31
	016 Move X8, [X19+8]
	017 Add X0, X31, 8
	018 Move X1, X31
	019 Move [X31+8], X8
	020 Call UInt64.GetHashCode, X0
	021 Xor W0, W0, W20
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X30, [X31+32]
	025 Return X0

