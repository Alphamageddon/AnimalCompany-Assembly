Type: UnityEngine.InputSystem.InputManager/<>c

Method: System.Void .cctor()

Disassembly:
	0x037CDD4C ADRP X8, 0x951000
	0x037CDD50 LDR X8, [X8 + 0xFE0]
	0x037CDD54 LDR X8, [X8]
	0x037CDD58 LDR X8, [X8 + 0xB8]
	0x037CDD5C STRB W22, [X8]
	0x037CDD60 B 0x37CDE44
	0x037CDD64 ADRP X8, 0x97B000
	0x037CDD68 LDR X8, [X8 + 0x838]
	0x037CDD6C MOV X0, X21
	0x037CDD70 MOV X2, X31
	0x037CDD74 LDR X1, [X8]
	0x037CDD78 BL 0x321BA08
	0x037CDD7C TBZ X0, 0x0, 0x37CDD98
	0x037CDD80 ADRP X8, 0x951000
	0x037CDD84 LDR X8, [X8 + 0xFE0]
	0x037CDD88 LDR X8, [X8]
	0x037CDD8C LDR X8, [X8 + 0xB8]
	0x037CDD90 STRB W22, [X8 + 0x1]
	0x037CDD94 B 0x37CDE44
	0x037CDD98 ADRP X8, 0x97B000
	0x037CDD9C LDR X8, [X8 + 0x840]
	0x037CDDA0 MOV X0, X21
	0x037CDDA4 MOV X2, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xC15000
	005 Move X20, 0x97C000
	006 Move W8, [X19+533]
	007 Move X20, [X20+648]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x97C000
	013 Move X0, [X0+648]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+533], W8
	017 Move X0, [X20]
	018 Call 0x1C17F10
	019 Move X1, X31
	020 Move X19, X0
	021 Call Object..ctor, X0
	022 Move X8, [X20]
	023 Move X8, [X8+184]
	024 Move [X8], X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Return 

Method: System.Void .ctor()

Disassembly:
	0x037CDDA8 LDR X1, [X8]
	0x037CDDAC BL 0x321BA08

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.String <MakeDeviceNameUnique>b__144_0(UnityEngine.InputSystem.InputDevice x)

Disassembly:
	0x037CDDB0 TBZ X0, 0x0, 0x37CDDCC
	0x037CDDB4 ADRP X8, 0x951000
	0x037CDDB8 LDR X8, [X8 + 0xFE0]
	0x037CDDBC LDR X8, [X8]
	0x037CDDC0 LDR X8, [X8 + 0xB8]
	0x037CDDC4 STRB W22, [X8 + 0x2]
	0x037CDDC8 B 0x37CDE44
	0x037CDDCC LDR X22, [X19 + 0x60]
	0x037CDDD0 CBNZ X22, 0x37CDDFC
	0x037CDDD4 ADRP X8, 0x927000
	0x037CDDD8 LDR X8, [X8 + 0xC30]
	0x037CDDDC LDR X0, [X8]
	0x037CDDE0 BL 0x1C16F10
	0x037CDDE4 ADRP X8, 0x927000
	0x037CDDE8 LDR X8, [X8 + 0xC28]
	0x037CDDEC MOV X22, X0
	0x037CDDF0 LDR X1, [X8]
	0x037CDDF4 BL 0x2DBDE08
	0x037CDDF8 STR X22, [X19 + 0x60]
	0x037CDDFC CBZ X21, 0x37CDEA0
	0x037CDE00 MOV X0, X21
	0x037CDE04 MOV X1, X31
	0x037CDE08 BL 0x322B860
	0x037CDE0C CBZ X22, 0x37CDEA0
	0x037CDE10 MOV X1, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xC15000
	005 Move W8, [X20+534]
	006 Move X19, X1
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x929000
	012 Move X0, [X0+632]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+534], W8
	016 Compare X19, 0
	017 JumpIfEqual {25}
	018 Move X0, X19
	019 Move X20, [X31+16]
	020 Move X19, [X31+24]
	021 Move X1, X31
	022 Move X30, [X31+32]
	023 Call InputControl.get_name, X0
	024 Return X0
	025 Move X8, 0x929000
	026 Move X8, [X8+632]
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X8, [X8]
	030 Move X8, [X8+184]
	031 Move X0, [X8]
	032 Move X30, [X31+32]
	033 Return X0

