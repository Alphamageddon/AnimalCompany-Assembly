Type: UnityEngine.InputSystem.InputValue

Method: System.Object Get()

Disassembly:
	0x037D29CC MOV X0, X20
	0x037D29D0 BL 0x37D5E14
	0x037D29D4 LDP X20, X19, [X31 + 0x1D0]
	0x037D29D8 LDP X22, X21, [X31 + 0x1C0]
	0x037D29DC LDP X30, X23, [X31 + 0x1B0]
	0x037D29E0 LDR X29, [X31 + 0x1A0]
	0x037D29E4 ADD X31, X31, 0x1E0
	0x037D29E8 RET
	0x037D29EC BL 0x1C16F20
	0x037D29F0 BL 0x1C16F28
	0x037D29F4 MOV X22, X31
	0x037D29F8 B 0x37D2A00
	0x037D29FC MOV X21, X0
	0x037D2A00 ADRP X8, 0x974000
	0x037D2A04 LDR X8, [X8 + 0x788]
	0x037D2A08 LDR X1, [X8]
	0x037D2A0C ADD X0, X31, 0x100
	0x037D2A10 BL 0x2DFB98C
	0x037D2A14 CBZ X22, 0x37D2A88
	0x037D2A18 MOV X0, X22
	0x037D2A1C BL 0x1C16F18
	0x037D2A20 B 0x37D2A28
	0x037D2A24 B 0x37D2A28
	0x037D2A28 MOV X21, X0
	0x037D2A2C CMP W1, 0x1

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xC10000
	007 Move X20, 0x94A000
	008 Move W8, [X21+583]
	009 Move X20, [X20+3992]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x94A000
	016 Move X0, [X0+3992]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+583], W8
	020 Move X1, [X20]
	021 Add X0, X19, 16
	022 Call Nullable`1<CallbackContext>.get_Value, X0
	023 Move [X31], X0
	024 Move [X31+8], X1
	025 Add X0, X31, 0
	026 Move X1, X31
	027 Call CallbackContext.ReadValueAsObject, X0
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X30, [X31+16]
	031 Move X21, [X31+24]
	032 Add X31, X31, 48
	033 Return X0

Method: TValue Get()

Disassembly:
	0x0220DA68 MOV X0, X22
	0x0220DA6C BLR X9
	0x0220DA70 MOV X23, X0
	0x0220DA74 LDR X0, [X27]
	0x0220DA78 LDR X24, [X28]
	0x0220DA7C LDR W8, [X0 + 0xE0]
	0x0220DA80 CBNZ W8, 0x220DA88
	0x0220DA84 BL 0x1C16DFC
	0x0220DA88 MOV X0, X24
	0x0220DA8C MOV X1, X31
	0x0220DA90 BL 0x338C698
	0x0220DA94 MOV X1, X0
	0x0220DA98 LDR X8, [X22]
	0x0220DA9C LDP X9, X3, [X8 + 0x1E8]
	0x0220DAA0 MOVZ W2, 0x1
	0x0220DAA4 MOV X0, X22
	0x0220DAA8 BLR X9
	0x0220DAAC TBZ X0, 0x0, 0x220DB10
	0x0220DAB0 LDR X0, [X27]
	0x0220DAB4 LDR X24, [X28]
	0x0220DAB8 LDR W8, [X0 + 0xE0]
	0x0220DABC CBNZ W8, 0x220DAC4
	0x0220DAC0 BL 0x1C16DFC
	0x0220DAC4 MOV X0, X24
	0x0220DAC8 MOV X1, X31
	0x0220DACC BL 0x338C698
	0x0220DAD0 MOV X1, X0
	0x0220DAD4 MOVZ W2, 0x1
	0x0220DAD8 MOV X0, X22
	0x0220DADC MOV X3, X31
	0x0220DAE0 BL 0x33A7D50
	0x0220DAE4 MOV X24, X0
	0x0220DAE8 CBZ X0, 0x220DBC4
	0x0220DAEC LDR X1, [X29]
	0x0220DAF0 LDR X8, [X24]
	0x0220DAF4 CMP X8, X1
	0x0220DAF8 B.NE 0x220DBC8
	0x0220DAFC LDR X0, [X24 + 0x10]
	0x0220DB00 MOV X1, X31
	0x0220DB04 BL 0x32277A8
	0x0220DB08 TBNZ X0, 0x0, 0x220DB10
	0x0220DB0C LDR X23, [X24 + 0x10]
	0x0220DB10 CBZ X19, 0x220DBC0
	0x0220DB14 LDR X8, [X21 + 0x38]
	0x0220DB18 LDR X3, [X8 + 0x38]
	0x0220DB1C MOV X0, X19
	0x0220DB20 MOV X1, X23
	0x0220DB24 MOV X2, X22

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+32], X20
	004 Move [X31+40], X19
	005 Move X8, [X1+56]
	006 Move X19, X1
	007 Move X20, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {21}
	010 Move X0, 0x1F0F000
	011 Move X0, [X0+3984]
	012 Call 0x1C17CF4
	013 Move X0, 0x1F0F000
	014 Move X0, [X0+3992]
	015 Call 0x1C17CF4
	016 Move X8, [X19+56]
	017 Compare X8, 0
	018 JumpIfNotEqual {21}
	019 Move X0, X19
	020 Call 0x1C5D6E0
	021 Add X20, X20, 16
	022 Move W8, [X20]
	023 Compare W8, 0
	024 JumpIfEqual {41}
	025 Move X8, 0x1F0F000
	026 Move X8, [X8+3992]
	027 Move X0, X20
	028 Move X1, [X8]
	029 Call Nullable`1<CallbackContext>.get_Value, X0
	030 Move [X31], X0
	031 Move [X31+8], X1
	032 Move X8, [X19+56]
	033 Add X0, X31, 0
	034 Move X1, [X8]
	035 Call CallbackContext.ReadValue, X0
	036 Move X20, [X31+32]
	037 Move X19, [X31+40]
	038 Move X30, [X31+16]
	039 Add X31, X31, 48
	040 Return X0
	041 Move X0, 0x1EE7000
	042 Move X0, [X0+1456]
	043 Call 0x1C17D08
	044 Call 0x1C17F10
	045 Move X20, X0
	046 Move X0, 0x1F0F000
	047 Move X0, [X0+4000]
	048 Call 0x1C17D08
	049 Move X1, X0
	050 Move X0, X20
	051 Move X2, X31
	052 Call InvalidOperationException..ctor, X0, X1
	053 Move X0, X20
	054 Move X1, X19
	055 Call 0x1C17DEC

Method: System.Boolean get_isPressed()

Disassembly:
	0x037D2A30 B.NE 0x37D2A64
	0x037D2A34 MOV X0, X21
	0x037D2A38 BL 0x3EB1AD0
	0x037D2A3C LDR X22, [X0]
	0x037D2A40 BL 0x3EB1AE0
	0x037D2A44 ADRP X8, 0x974000
	0x037D2A48 LDR X8, [X8 + 0x788]
	0x037D2A4C ADD X0, X31, 0xC0
	0x037D2A50 LDR X1, [X8]
	0x037D2A54 BL 0x2DFB98C
	0x037D2A58 CBZ X22, 0x37D29BC
	0x037D2A5C MOV X0, X22
	0x037D2A60 BL 0x1C16F18
	0x037D2A64 MOV X22, X31
	0x037D2A68 B 0x37D2A70
	0x037D2A6C MOV X21, X0
	0x037D2A70 ADRP X8, 0x974000
	0x037D2A74 LDR X8, [X8 + 0x788]
	0x037D2A78 LDR X1, [X8]
	0x037D2A7C ADD X0, X31, 0xC0
	0x037D2A80 BL 0x2DFB98C
	0x037D2A84 CBNZ X22, 0x37D2A90
	0x037D2A88 MOV X0, X21
	0x037D2A8C BL 0x1D2C690
	0x037D2A90 MOV X0, X22
	0x037D2A94 BL 0x1C16F18
	0x037D2A98 BL 0x1990590
	0x037D2A9C STR X30, [X31 - 0x20]!
	0x037D2AA0 STP X20, X19, [X31 + 0x10]
	0x037D2AA4 ADRP X20, 0xC0F000
	0x037D2AA8 LDRB W8, [X20 + 0x25B]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xC10000
	007 Move X22, 0x977000
	008 Move X20, 0x94A000
	009 Move W8, [X21+584]
	010 Move X22, [X22+2280]
	011 Move X20, [X20+3216]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x94A000
	018 Move X0, [X0+3216]
	019 Call 0x1C17CF4
	020 Move X0, 0x977000
	021 Move X0, [X0+2280]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+584], W8
	025 Move X1, [X22]
	026 Move X0, X19
	027 Call 0x220DA68, X0
	028 Move X8, [X20]
	029 Move X20, [X31+32]
	030 Move X19, [X31+40]
	031 Move X22, [X31+16]
	032 Move X21, [X31+24]
	033 Move X8, [X8+184]
	034 Move V1, [X8]
	035 NotImplemented "Instruction FCMP not yet implemented."
	036 NotImplemented "Instruction CSET not yet implemented."
	037 Move X30, [X31+48]
	038 Return X0

Method: System.Void .ctor()

Disassembly:
	0x037D2AAC MOV X19, X0
	0x037D2AB0 TBNZ X8, 0x0, 0x37D2AC8

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

