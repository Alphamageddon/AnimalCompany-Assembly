Type: UnityEngine.InputSystem.PlayerInput

Method: System.Boolean get_inputIsActive()

Disassembly:
	0x037D2AB4 ADRP X0, 0x921000
	0x037D2AB8 LDR X0, [X0 + 0x598]

ISIL:
	001 Move W0, [X0+148]
	002 Return X0

Method: System.Boolean get_active()

Disassembly:
	0x037D2ABC BL 0x1C16CF4
	0x037D2AC0 MOVZ W8, 0x1

ISIL:
	001 Move W0, [X0+148]
	002 Return X0

Method: System.Int32 get_playerIndex()

Disassembly:
	0x037D2AC4 STRB W8, [X20 + 0x25B]
	0x037D2AC8 LDR X0, [X19 + 0x88]

ISIL:
	001 Move W0, [X0+144]
	002 Return X0

Method: System.Int32 get_splitScreenIndex()

Disassembly:
	0x037D2ACC MOVZ W8, 0x1
	0x037D2AD0 STRB W8, [X19 + 0x94]

ISIL:
	001 Move W0, [X0+112]
	002 Return X0

Method: UnityEngine.InputSystem.InputActionAsset get_actions()

Disassembly:
	0x037D2AD4 CBNZ X0, 0x37D2B20
	0x037D2AD8 ADRP X8, 0x921000
	0x037D2ADC LDR X8, [X8 + 0x598]
	0x037D2AE0 LDR X20, [X19 + 0x20]
	0x037D2AE4 LDR X0, [X8]
	0x037D2AE8 LDR W8, [X0 + 0xE0]
	0x037D2AEC CBNZ W8, 0x37D2AF4
	0x037D2AF0 BL 0x1C16DFC
	0x037D2AF4 MOV X0, X20
	0x037D2AF8 MOV X1, X31
	0x037D2AFC MOV X2, X31
	0x037D2B00 BL 0x3C354F8
	0x037D2B04 TBZ X0, 0x0, 0x37D2B18
	0x037D2B08 LDR X0, [X19 + 0x68]
	0x037D2B0C MOV X1, X31
	0x037D2B10 BL 0x32277A8
	0x037D2B14 TBZ X0, 0x0, 0x37D2B3C

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W8, [X0+150]
	004 Move X19, X0
	005 Compare W8, 0
	006 JumpIfNotEqual {20}
	007 Move X0, X19
	008 Move X1, X31
	009 Call Component.get_gameObject, X0
	010 Compare X0, 0
	011 JumpIfEqual {24}
	012 Move X1, X31
	013 Call GameObject.get_activeInHierarchy, X0
	014 Move TEMP, X0
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfNotEqual {20}
	018 Move X0, X19
	019 Call PlayerInput.InitializeActions, X0
	020 Move X0, [X19+32]
	021 Move X30, [X31+16]
	022 Move X19, [X31+24]
	023 Return X0
	024 Call 0x1C17F20

Method: System.Void set_actions(UnityEngine.InputSystem.InputActionAsset value)

Disassembly:
	0x037D3018 TBNZ X8, 0x0, 0x37D3030
	0x037D301C ADRP X0, 0x975000
	0x037D3020 LDR X0, [X0 + 0x978]
	0x037D3024 BL 0x1C16CF4
	0x037D3028 MOVZ W8, 0x1
	0x037D302C STRB W8, [X20 + 0x24C]
	0x037D3030 ADRP X20, 0x975000
	0x037D3034 LDRB W8, [X19 + 0x95]
	0x037D3038 LDR X20, [X20 + 0x978]
	0x037D303C CBZ W8, 0x37D3048
	0x037D3040 MOV X0, X19
	0x037D3044 BL 0x37D2110
	0x037D3048 LDR X1, [X20]
	0x037D304C ADD X0, X31, 0x0
	0x037D3050 BL 0x24FD838
	0x037D3054 LDRB W8, [X19 + 0x95]
	0x037D3058 STR X0, [X19 + 0x50]
	0x037D305C CBZ W8, 0x37D3068
	0x037D3060 MOV X0, X19
	0x037D3064 BL 0x37D1B18
	0x037D3068 LDP X20, X19, [X31 + 0x20]
	0x037D306C LDR X30, [X31 + 0x10]
	0x037D3070 ADD X31, X31, 0x30
	0x037D3074 RET
	0x037D3078 STR X30, [X31 - 0x20]!
	0x037D307C STP X20, X19, [X31 + 0x10]
	0x037D3080 ADRP X20, 0xC0E000
	0x037D3084 LDRB W8, [X20 + 0x24D]
	0x037D3088 MOV X19, X0
	0x037D308C TBNZ X8, 0x0, 0x37D30A4
	0x037D3090 ADRP X0, 0x975000
	0x037D3094 LDR X0, [X0 + 0x980]
	0x037D3098 BL 0x1C16CF4
	0x037D309C MOVZ W8, 0x1
	0x037D30A0 STRB W8, [X20 + 0x24D]
	0x037D30A4 LDR X20, [X19 + 0x38]
	0x037D30A8 CBNZ X20, 0x37D30C8
	0x037D30AC ADRP X8, 0x975000
	0x037D30B0 LDR X8, [X8 + 0x980]
	0x037D30B4 LDR X0, [X8]
	0x037D30B8 BL 0x1C16F10
	0x037D30BC MOV X20, X0
	0x037D30C0 BL 0x37D30D8
	0x037D30C4 STR X20, [X19 + 0x38]
	0x037D30C8 MOV X0, X20
	0x037D30CC LDP X20, X19, [X31 + 0x10]
	0x037D30D0 LDR X30, [X31], #0x20
	0x037D30D4 RET
	0x037D30D8 STP X30, X21, [X31 - 0x20]!
	0x037D30DC STP X20, X19, [X31 + 0x10]
	0x037D30E0 ADRP X20, 0xC0E000
	0x037D30E4 ADRP X21, 0x975000
	0x037D30E8 LDRB W8, [X20 + 0x280]
	0x037D30EC LDR X21, [X21 + 0x988]
	0x037D30F0 MOV X19, X0
	0x037D30F4 TBNZ X8, 0x0, 0x37D310C
	0x037D30F8 ADRP X0, 0x975000
	0x037D30FC LDR X0, [X0 + 0x988]
	0x037D3100 BL 0x1C16CF4
	0x037D3104 MOVZ W8, 0x1
	0x037D3108 STRB W8, [X20 + 0x280]
	0x037D310C LDR X1, [X21]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xC0F000
	007 Move X22, 0x921000
	008 Move W8, [X21+585]
	009 Move X22, [X22+1432]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x921000
	017 Move X0, [X0+1432]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+585], W8
	021 Move X0, [X22]
	022 Move X21, [X19+32]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X0, X21
	028 Move X1, X20
	029 Move X2, X31
	030 Call Object.op_Equality, X0, X1
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {78}
	035 Move X0, [X22]
	036 Move X21, [X19+32]
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {41}
	040 Call 0x1C17DFC
	041 Move X0, X21
	042 Move X1, X31
	043 Move X2, X31
	044 Call Object.op_Inequality, X0, X1
	045 Move TEMP, X0
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfNotEqual {59}
	049 Move X0, [X19+32]
	050 Compare X0, 0
	051 JumpIfEqual {84}
	052 Move X1, X31
	053 Call InputActionAsset.Disable, X0
	054 Move W8, [X19+150]
	055 Compare W8, 0
	056 JumpIfEqual {59}
	057 Move X0, X19
	058 Call PlayerInput.UninitializeActions, X0
	059 Move W8, [X19+149]
	060 Move [X19+32], X20
	061 Compare W8, 0
	062 JumpIfEqual {78}
	063 Move X0, X19
	064 Call PlayerInput.AssignUserAndDevices, X0
	065 Move X0, X19
	066 Call PlayerInput.InitializeActions, X0
	067 Move W8, [X19+148]
	068 Compare W8, 0
	069 JumpIfEqual {78}
	070 Move X0, X19
	071 Move X20, [X31+32]
	072 Move X19, [X31+40]
	073 Move X22, [X31+16]
	074 Move X21, [X31+24]
	075 Move X30, [X31+48]
	076 Call PlayerInput.ActivateInput, X0
	077 Return 
	078 Move X20, [X31+32]
	079 Move X19, [X31+40]
	080 Move X22, [X31+16]
	081 Move X21, [X31+24]
	082 Move X30, [X31+48]
	083 Return 
	084 Call 0x1C17F20

Method: System.String get_currentControlScheme()

Disassembly:
	0x037D3B50 CMP W8, 0x1
	0x037D3B54 B.LE 0x37D3B60
	0x037D3B58 MOV W0, W31
	0x037D3B5C B 0x37D3C00
	0x037D3B60 ADRP X20, 0xC0E000
	0x037D3B64 LDRB W8, [X20 + 0x30B]
	0x037D3B68 CBNZ W8, 0x37D3B80
	0x037D3B6C ADRP X0, 0x975000
	0x037D3B70 LDR X0, [X0 + 0x9F8]
	0x037D3B74 BL 0x1C16CF4
	0x037D3B78 MOVZ W8, 0x1
	0x037D3B7C STRB W8, [X20 + 0x30B]
	0x037D3B80 ADRP X21, 0x975000
	0x037D3B84 LDR X21, [X21 + 0x9F8]
	0x037D3B88 ADRP X9, 0x920000
	0x037D3B8C LDR X8, [X21]
	0x037D3B90 LDR X9, [X9 + 0x598]
	0x037D3B94 LDR X8, [X8 + 0xB8]
	0x037D3B98 LDR X0, [X9]
	0x037D3B9C LDR X19, [X8]
	0x037D3BA0 LDR W9, [X0 + 0xE0]
	0x037D3BA4 CBNZ W9, 0x37D3BAC
	0x037D3BA8 BL 0x1C16DFC
	0x037D3BAC MOV X0, X19
	0x037D3BB0 MOV X1, X31
	0x037D3BB4 MOV X2, X31
	0x037D3BB8 BL 0x3C3883C
	0x037D3BBC TBZ X0, 0x0, 0x37D3BC8
	0x037D3BC0 MOVZ W0, 0x1
	0x037D3BC4 B 0x37D3C00
	0x037D3BC8 LDRB W8, [X20 + 0x30B]
	0x037D3BCC CBNZ W8, 0x37D3BE4

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+48], X20
	004 Move [X31+56], X19
	005 Move X20, 0xC0F000
	006 Move W8, [X20+586]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x949000
	013 Move X0, [X0+3600]
	014 Call 0x1C17CF4
	015 Move X0, 0x973000
	016 Move X0, [X0+2488]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+586], W8
	020 Add X19, X19, 160
	021 Move X0, X19
	022 Call InputUser.get_valid, X0
	023 Move TEMP, X0
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfNotEqual {34}
	027 Add X8, X31, 0
	028 Move X0, X19
	029 Call InputUser.get_controlScheme, X0
	030 Move W8, [X31]
	031 Move X9, [X31+8]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 NotImplemented "Instruction CSEL not yet implemented."
	034 Move X0, X31
	035 Move X20, [X31+48]
	036 Move X19, [X31+56]
	037 Move X30, [X31+32]
	038 Add X31, X31, 64
	039 Return X0

Method: System.String get_defaultControlScheme()

Disassembly:
	0x037D3D04 MOV X0, X8
	0x037D3D08 BL 0x1C16DFC

ISIL:
	001 Move X0, [X0+96]
	002 Return X0

Method: System.Void set_defaultControlScheme(System.String value)

Disassembly:
	0x037D3D0C MOV X0, X20
	0x037D3D10 MOV X1, X19

ISIL:
	001 Move [X0+96], X1
	002 Return 

Method: System.Boolean get_neverAutoSwitchControlSchemes()

Disassembly:
	0x037D3D14 LDP X20, X19, [X31 + 0x10]
	0x037D3D18 MOV X2, X31

ISIL:
	001 Move W0, [X0+88]
	002 Return X0

Method: System.Void set_neverAutoSwitchControlSchemes(System.Boolean value)

Disassembly:
	0x037D3D1C LDP X30, X21, [X31], #0x20
	0x037D3D20 B 0x3C065A4
	0x037D3D24 LDR X0, [X19 + 0x20]
	0x037D3D28 CBZ X0, 0x37D3D74
	0x037D3D2C MOV X1, X20
	0x037D3D30 MOV W2, W31
	0x037D3D34 MOV X3, X31
	0x037D3D38 BL 0x373798C
	0x037D3D3C CBZ X0, 0x37D3D54
	0x037D3D40 MOV X1, X0
	0x037D3D44 MOV X0, X19
	0x037D3D48 LDP X20, X19, [X31 + 0x10]
	0x037D3D4C LDP X30, X21, [X31], #0x20
	0x037D3D50 B 0x37D2EF8

ISIL:
	001 Move W9, [X0+88]
	002 And W8, W1, 1
	003 NotImplemented "Instruction CMP not yet implemented."
	004 Move W9, [X0+149]
	005 Move [X0+88], W8
	006 Compare W9, 0
	007 JumpIfEqual {19}
	008 Move W8, [X0+512]
	009 Move TEMP, X1
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfNotEqual {17}
	013 Compare W8, 0
	014 JumpIfEqual {19}
	015 Call PlayerInput.StopListeningForUnpairedDeviceActivity, X0
	016 Return 
	017 Compare W8, 0
	018 Invalid "Jump target not found in method."
	019 Return 

Method: UnityEngine.InputSystem.InputActionMap get_currentActionMap()

Disassembly:
	0x037D3EF0 LDP X20, X19, [X31 + 0x70]
	0x037D3EF4 LDP X30, X21, [X31 + 0x60]

ISIL:
	001 Move X0, [X0+136]
	002 Return X0

Method: System.Void set_currentActionMap(UnityEngine.InputSystem.InputActionMap value)

Disassembly:
	0x037D3EF8 CSET W0, NE
	0x037D3EFC ADD X31, X31, 0x80
	0x037D3F00 RET
	0x037D3F04 ADRP X0, 0x925000
	0x037D3F08 LDR X0, [X0 + 0x528]
	0x037D3F0C BL 0x1C16D08
	0x037D3F10 BL 0x1C16F10
	0x037D3F14 MOV X19, X0
	0x037D3F18 ADRP X0, 0x948000
	0x037D3F1C LDR X0, [X0 + 0xDF0]
	0x037D3F20 BL 0x1C16D08
	0x037D3F24 MOV X1, X0
	0x037D3F28 MOV X0, X19
	0x037D3F2C MOV X2, X31
	0x037D3F30 BL 0x330E100
	0x037D3F34 B 0x37D3F68
	0x037D3F38 ADRP X0, 0x920000
	0x037D3F3C LDR X0, [X0 + 0x5B0]
	0x037D3F40 BL 0x1C16D08

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, X0
	005 Move X0, [X0+136]
	006 Move X19, X1
	007 Move [X20+136], X31
	008 Compare X0, 0
	009 JumpIfEqual {12}
	010 Move X1, X31
	011 Call InputActionMap.Disable, X0
	012 Move [X20+136], X19
	013 Compare X19, 0
	014 JumpIfEqual {22}
	015 Move X0, X19
	016 Move X20, [X31+16]
	017 Move X19, [X31+24]
	018 Move X1, X31
	019 Move X30, [X31+32]
	020 Call InputActionMap.Enable, X0
	021 Return 
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X30, [X31+32]
	025 Return 

Method: System.String get_defaultActionMap()

Disassembly:
	0x037D3F44 BL 0x1C16F10
	0x037D3F48 MOV X19, X0

ISIL:
	001 Move X0, [X0+104]
	002 Return X0

Method: System.Void set_defaultActionMap(System.String value)

Disassembly:
	0x037D3F4C ADRP X0, 0x975000
	0x037D3F50 LDR X0, [X0 + 0xA28]

ISIL:
	001 Move [X0+104], X1
	002 Return 

Method: UnityEngine.InputSystem.PlayerNotifications get_notificationBehavior()

Disassembly:
	0x037D3F54 BL 0x1C16D08
	0x037D3F58 MOV X1, X0

ISIL:
	001 Move W0, [X0+40]
	002 Return X0

Method: System.Void set_notificationBehavior(UnityEngine.InputSystem.PlayerNotifications value)

Disassembly:
	0x037D3F5C MOV X0, X19
	0x037D3F60 MOV X2, X31
	0x037D3F64 BL 0x337DF1C
	0x037D3F68 ADRP X0, 0x975000
	0x037D3F6C LDR X0, [X0 + 0xA30]
	0x037D3F70 BL 0x1C16D08
	0x037D3F74 MOV X1, X0
	0x037D3F78 MOV X0, X19
	0x037D3F7C BL 0x1C16DEC
	0x037D3F80 BL 0x1C16F20
	0x037D3F84 SUB X31, X31, 0x120
	0x037D3F88 STR X29, [X31 + 0xC0]
	0x037D3F8C STP X30, X27, [X31 + 0xD0]
	0x037D3F90 STP X26, X25, [X31 + 0xE0]
	0x037D3F94 STP X24, X23, [X31 + 0xF0]
	0x037D3F98 STP X22, X21, [X31 + 0x100]
	0x037D3F9C STP X20, X19, [X31 + 0x110]
	0x037D3FA0 ADRP X19, 0xC0E000
	0x037D3FA4 LDRB W8, [X19 + 0x27B]
	0x037D3FA8 MOV X22, X2
	0x037D3FAC MOV X20, X1
	0x037D3FB0 MOV X21, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W8, [X0+40]
	005 NotImplemented "Instruction CMP not yet implemented."
	006 Move W8, [X0+149]
	007 Move X19, X0
	008 Move W20, W1
	009 Compare W8, 0
	010 JumpIfEqual {23}
	011 Move X0, X19
	012 Call PlayerInput.UninitializeActions, X0
	013 Move W8, [X19+149]
	014 Move [X19+40], W20
	015 Compare W8, 0
	016 JumpIfEqual {24}
	017 Move X0, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Call PlayerInput.InitializeActions, X0
	022 Return 
	023 Move [X19+40], W20
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X30, [X31+32]
	027 Return 

Method: UnityEngine.InputSystem.Utilities.ReadOnlyArray`1<UnityEngine.InputSystem.PlayerInput/ActionEvent> get_actionEvents()

Disassembly:
	0x037D3FB4 TBNZ X8, 0x0, 0x37D4014
	0x037D3FB8 ADRP X0, 0x975000
	0x037D3FBC LDR X0, [X0 + 0xA38]
	0x037D3FC0 BL 0x1C16CF4
	0x037D3FC4 ADRP X0, 0x920000
	0x037D3FC8 LDR X0, [X0 + 0xE00]
	0x037D3FCC BL 0x1C16CF4
	0x037D3FD0 ADRP X0, 0x972000
	0x037D3FD4 LDR X0, [X0 + 0x9B8]
	0x037D3FD8 BL 0x1C16CF4
	0x037D3FDC ADRP X0, 0x975000
	0x037D3FE0 LDR X0, [X0 + 0x930]
	0x037D3FE4 BL 0x1C16CF4
	0x037D3FE8 ADRP X0, 0x971000
	0x037D3FEC LDR X0, [X0 + 0xFC8]
	0x037D3FF0 BL 0x1C16CF4
	0x037D3FF4 ADRP X0, 0x972000
	0x037D3FF8 LDR X0, [X0 + 0x70]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xC0F000
	006 Move X20, 0x976000
	007 Move W8, [X21+587]
	008 Move X20, [X20+2416]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x976000
	015 Move X0, [X0+2416]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+587], W8
	019 Move X0, [X19+80]
	020 Move X1, [X20]
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X30, [X31+32]
	024 Move X21, [X31+40]
	025 Call ReadOnlyArray`1<Object>.op_Implicit, X0
	026 Return X0

Method: System.Void set_actionEvents(UnityEngine.InputSystem.Utilities.ReadOnlyArray`1<UnityEngine.InputSystem.PlayerInput/ActionEvent> value)

Disassembly:
	0x037D3FFC BL 0x1C16CF4
	0x037D4000 ADRP X0, 0x971000
	0x037D4004 LDR X0, [X0 + 0xE18]
	0x037D4008 BL 0x1C16CF4
	0x037D400C MOVZ W8, 0x1
	0x037D4010 STRB W8, [X19 + 0x27B]
	0x037D4014 ADRP X24, 0x91F000
	0x037D4018 LDR X24, [X24 + 0xE00]
	0x037D401C MOVI V0.2D, 0x0
	0x037D4020 MOV X0, X31
	0x037D4024 STP X31, X31, [X31 + 0xB0]
	0x037D4028 STP X31, X31, [X31 + 0x60]
	0x037D402C STP V0, V0, [X31 + 0x80]
	0x037D4030 STR X31, [X31 + 0x70]
	0x037D4034 BL 0x373BF80
	0x037D4038 LDR W8, [X21 + 0xA0]
	0x037D403C MOV X19, X0
	0x037D4040 STR W8, [X31 + 0xC8]
	0x037D4044 ADD X0, X31, 0xC8
	0x037D4048 BL 0x37D38F8
	0x037D404C UBFM X8, X1, 0x20, 0x3F
	0x037D4050 SUBS W23, W8, 0x1
	0x037D4054 STP X0, X1, [X31 + 0xB0]
	0x037D4058 B.MI 0x37D40E0
	0x037D405C ADRP X25, 0x971000
	0x037D4060 ADRP X26, 0x974000
	0x037D4064 LDR X25, [X25 + 0xE18]
	0x037D4068 LDR X26, [X26 + 0xA38]
	0x037D406C LDR W8, [X21 + 0xA0]
	0x037D4070 STR W8, [X31 + 0xC8]
	0x037D4074 ADD X0, X31, 0xC8

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+8], X2
	003 Move [X31+16], X30
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xC0E000
	007 Move W8, [X20+588]
	008 Move X19, X0
	009 Move [X31], X1
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x975000
	015 Move X0, [X0+2424]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+588], W8
	019 Move X20, 0x975000
	020 Move W8, [X19+149]
	021 Move X20, [X20+2424]
	022 Compare W8, 0
	023 JumpIfEqual {26}
	024 Move X0, X19
	025 Call PlayerInput.UninitializeActions, X0
	026 Move X1, [X20]
	027 Add X0, X31, 0
	028 Call ReadOnlyArray`1<Object>.ToArray, X0
	029 Move W8, [X19+149]
	030 Move [X19+80], X0
	031 Compare W8, 0
	032 JumpIfEqual {35}
	033 Move X0, X19
	034 Call PlayerInput.InitializeActions, X0
	035 Move X20, [X31+32]
	036 Move X19, [X31+40]
	037 Move X30, [X31+16]
	038 Add X31, X31, 48
	039 Return 

Method: UnityEngine.InputSystem.PlayerInput/DeviceLostEvent get_deviceLostEvent()

Disassembly:
	0x037D4078 BL 0x37D38F8
	0x037D407C LDR X2, [X25]
	0x037D4080 STP X0, X1, [X31 + 0xB0]
	0x037D4084 ADD X0, X31, 0xB0
	0x037D4088 MOV W1, W23
	0x037D408C BL 0x24FDB3C
	0x037D4090 MOV X1, X0
	0x037D4094 LDR X2, [X26]
	0x037D4098 MOV X0, X22
	0x037D409C BL 0x2176094
	0x037D40A0 TBNZ X0, 0x0, 0x37D40D8
	0x037D40A4 LDR W8, [X21 + 0xA0]
	0x037D40A8 STR W8, [X31 + 0xC8]
	0x037D40AC STR W8, [X31 + 0xA8]
	0x037D40B0 ADD X0, X31, 0xA8
	0x037D40B4 BL 0x37D38F8
	0x037D40B8 LDR X2, [X25]
	0x037D40BC STP X0, X1, [X31 + 0xB0]
	0x037D40C0 ADD X0, X31, 0xB0
	0x037D40C4 MOV W1, W23
	0x037D40C8 BL 0x24FDB3C
	0x037D40CC MOV X1, X0
	0x037D40D0 ADD X0, X31, 0xC8
	0x037D40D4 BL 0x37D850C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xC0E000
	005 Move W8, [X20+589]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x975000
	012 Move X0, [X0+2432]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+589], W8
	016 Move X20, [X19+56]
	017 Compare X20, 0
	018 JumpIfNotEqual {26}
	019 Move X8, 0x975000
	020 Move X8, [X8+2432]
	021 Move X0, [X8]
	022 Call 0x1C17F10
	023 Move X20, X0
	024 Call DeviceLostEvent..ctor, X0
	025 Move [X19+56], X20
	026 Move X0, X20
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Return X0

Method: UnityEngine.InputSystem.PlayerInput/DeviceRegainedEvent get_deviceRegainedEvent()

Disassembly:
	0x037D4120 LDR X3, [X26]
	0x037D4124 MOV X2, X23
	0x037D4128 BL 0x223C504
	0x037D412C TBNZ X0, 0x0, 0x37D4140
	0x037D4130 LDR W1, [X21 + 0xA0]
	0x037D4134 MOV X0, X23
	0x037D4138 MOV W2, W31
	0x037D413C BL 0x37D5904
	0x037D4140 LDR W8, [X22 + 0x18]
	0x037D4144 ADD X25, X25, 0x1
	0x037D4148 CMP X25, W8, SXTW
	0x037D414C B.LT 0x37D4104
	0x037D4150 LDR W8, [X21 + 0xA0]
	0x037D4154 STR W8, [X31 + 0xC8]
	0x037D4158 ADD X8, X31, 0x40
	0x037D415C ADD X0, X31, 0xC8
	0x037D4160 BL 0x37D2C78
	0x037D4164 LDP V0, V1, [X31 + 0x40]
	0x037D4168 STP V0, V1, [X31 + 0x80]
	0x037D416C LDRB W8, [X31 + 0x80]
	0x037D4170 CBZ W8, 0x37D41DC
	0x037D4174 LDR W8, [X21 + 0xA0]
	0x037D4178 STR W8, [X31 + 0xC8]
	0x037D417C ADD X8, X31, 0x40

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xC0E000
	005 Move W8, [X20+590]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x975000
	012 Move X0, [X0+2448]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+590], W8
	016 Move X20, [X19+64]
	017 Compare X20, 0
	018 JumpIfNotEqual {26}
	019 Move X8, 0x975000
	020 Move X8, [X8+2448]
	021 Move X0, [X8]
	022 Call 0x1C17F10
	023 Move X20, X0
	024 Call DeviceRegainedEvent..ctor, X0
	025 Move [X19+64], X20
	026 Move X0, X20
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Return X0

Method: UnityEngine.InputSystem.PlayerInput/ControlsChangedEvent get_controlsChangedEvent()

Disassembly:
	0x037D41C8 ADD X0, X31, 0x60
	0x037D41CC ADD X1, X31, 0x20
	0x037D41D0 MOV X2, X31
	0x037D41D4 BL 0x376B548
	0x037D41D8 TBNZ X0, 0x0, 0x37D4200
	0x037D41DC LDR W8, [X21 + 0xA0]
	0x037D41E0 STR W8, [X31 + 0xC8]
	0x037D41E4 LDR X8, [X20 + 0x10]
	0x037D41E8 LDR V0, [X20]
	0x037D41EC STR X8, [X31 + 0x10]
	0x037D41F0 STR V0, [X31]
	0x037D41F4 ADD X0, X31, 0xC8
	0x037D41F8 ADD X1, X31, 0x0
	0x037D41FC BL 0x37D6294
	0x037D4200 MOV X21, X31
	0x037D4204 CBZ X19, 0x37D4260
	0x037D4208 LDR X8, [X19]
	0x037D420C LDR X1, [X24]
	0x037D4210 LDRH W9, [X8 + 0x12E]
	0x037D4214 CBZ X9, 0x37D4238
	0x037D4218 LDR X10, [X8 + 0xB0]
	0x037D421C ADD X10, X10, 0x8
	0x037D4220 LDUR X11, [X10 - 0x8]
	0x037D4224 CMP X11, X1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xC0E000
	005 Move W8, [X20+591]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x975000
	012 Move X0, [X0+2456]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+591], W8
	016 Move X20, [X19+72]
	017 Compare X20, 0
	018 JumpIfNotEqual {26}
	019 Move X8, 0x975000
	020 Move X8, [X8+2456]
	021 Move X0, [X8]
	022 Call 0x1C17F10
	023 Move X20, X0
	024 Call ControlsChangedEvent..ctor, X0
	025 Move [X19+72], X20
	026 Move X0, X20
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Return X0

Method: System.Void add_onActionTriggered(System.Action`1<UnityEngine.InputSystem.InputAction/CallbackContext> value)

Disassembly:
	0x037D4270 LDP X26, X25, [X31 + 0xE0]
	0x037D4274 LDP X30, X27, [X31 + 0xD0]
	0x037D4278 LDR X29, [X31 + 0xC0]
	0x037D427C ADD X31, X31, 0x120
	0x037D4280 RET
	0x037D4284 BL 0x1C16F28
	0x037D4288 MOV X0, X21
	0x037D428C BL 0x1C16F18
	0x037D4290 BL 0x1C16F20
	0x037D4294 B 0x37D42D0
	0x037D4298 B 0x37D42D0
	0x037D429C B 0x37D42D0
	0x037D42A0 B 0x37D42D0
	0x037D42A4 B 0x37D42D0
	0x037D42A8 B 0x37D42D0
	0x037D42AC B 0x37D42D0
	0x037D42B0 B 0x37D42D0
	0x037D42B4 B 0x37D42D0
	0x037D42B8 B 0x37D42D0
	0x037D42BC B 0x37D42D0
	0x037D42C0 B 0x37D42D0
	0x037D42C4 B 0x37D42D0
	0x037D42C8 B 0x37D42D0
	0x037D42CC B 0x37D42D0
	0x037D42D0 MOV X20, X0
	0x037D42D4 CMP W1, 0x1
	0x037D42D8 B.NE 0x37D42F0
	0x037D42DC MOV X0, X20
	0x037D42E0 BL 0x3EB1AD0
	0x037D42E4 LDR X21, [X0]
	0x037D42E8 BL 0x3EB1AE0
	0x037D42EC B 0x37D4204
	0x037D42F0 MOV X21, X31
	0x037D42F4 B 0x37D42FC
	0x037D42F8 MOV X20, X0
	0x037D42FC CBZ X19, 0x37D4358
	0x037D4300 LDR X8, [X19]
	0x037D4304 LDR X1, [X24]
	0x037D4308 LDRH W9, [X8 + 0x12E]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xC0E000
	006 Move W8, [X21+592]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x971000
	014 Move X0, [X0+3968]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+592], W8
	018 Compare X19, 0
	019 JumpIfEqual {31}
	020 Move X8, 0x971000
	021 Move X8, [X8+3968]
	022 Add X0, X20, 416
	023 Move X1, X19
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X2, [X8]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Call 0x28F24E0, X0, X1
	030 Return 
	031 Move X0, 0x925000
	032 Move X0, [X0+1320]
	033 Call 0x1C17D08
	034 Call 0x1C17F10
	035 Move X19, X0
	036 Move X0, 0x92A000
	037 Move X0, [X0+3784]
	038 Call 0x1C17D08
	039 Move X1, X0
	040 Move X0, X19
	041 Move X2, X31
	042 Call ArgumentNullException..ctor, X0, X1
	043 Move X0, 0x975000
	044 Move X0, [X0+2464]
	045 Call 0x1C17D08
	046 Move X1, X0
	047 Move X0, X19
	048 Call 0x1C17DEC

Method: System.Void remove_onActionTriggered(System.Action`1<UnityEngine.InputSystem.InputAction/CallbackContext> value)

Disassembly:
	0x037D430C CBZ X9, 0x37D4330
	0x037D4310 LDR X10, [X8 + 0xB0]
	0x037D4314 ADD X10, X10, 0x8
	0x037D4318 LDUR X11, [X10 - 0x8]
	0x037D431C CMP X11, X1
	0x037D4320 B.EQ 0x37D4340
	0x037D4324 SUBS X9, X9, 0x1
	0x037D4328 ADD X10, X10, 0x10
	0x037D432C B.NE 0x37D4318
	0x037D4330 MOV X0, X19
	0x037D4334 MOV W2, W31
	0x037D4338 BL 0x1C5C788
	0x037D433C B 0x37D434C
	0x037D4340 LDRSW X9, [X10]
	0x037D4344 ADD X8, X8, X9, 0x4, LSL
	0x037D4348 ADD X0, X8, 0x138
	0x037D434C LDP X8, X1, [X0]
	0x037D4350 MOV X0, X19
	0x037D4354 BLR X8
	0x037D4358 CBNZ X21, 0x37D4364
	0x037D435C MOV X0, X20
	0x037D4360 BL 0x1D2C690
	0x037D4364 MOV X0, X21
	0x037D4368 BL 0x1C16F18
	0x037D436C BL 0x1990590
	0x037D4370 SUB X31, X31, 0x40
	0x037D4374 STP X30, X21, [X31 + 0x20]
	0x037D4378 STP X20, X19, [X31 + 0x30]
	0x037D437C MOV X21, X1
	0x037D4380 MOV X20, X0
	0x037D4384 MOV X0, X1
	0x037D4388 MOV X1, X31
	0x037D438C MOV X19, X2
	0x037D4390 STP X31, X31, [X31 + 0x8]
	0x037D4394 STR X31, [X31 + 0x18]
	0x037D4398 BL 0x32277A8
	0x037D439C TBNZ X0, 0x0, 0x37D43DC
	0x037D43A0 CBZ X19, 0x37D43FC
	0x037D43A4 LDR W8, [X20 + 0xA0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xC0E000
	006 Move W8, [X21+593]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x971000
	014 Move X0, [X0+3976]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+593], W8
	018 Compare X19, 0
	019 JumpIfEqual {31}
	020 Move X8, 0x971000
	021 Move X8, [X8+3976]
	022 Add X0, X20, 416
	023 Move X1, X19
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X2, [X8]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Call 0x28F2650, X0, X1
	030 Return 
	031 Move X0, 0x925000
	032 Move X0, [X0+1320]
	033 Call 0x1C17D08
	034 Call 0x1C17F10
	035 Move X19, X0
	036 Move X0, 0x92A000
	037 Move X0, [X0+3784]
	038 Call 0x1C17D08
	039 Move X1, X0
	040 Move X0, X19
	041 Move X2, X31
	042 Call ArgumentNullException..ctor, X0, X1
	043 Move X0, 0x975000
	044 Move X0, [X0+2472]
	045 Call 0x1C17D08
	046 Move X1, X0
	047 Move X0, X19
	048 Call 0x1C17DEC

Method: System.Void add_onDeviceLost(System.Action`1<UnityEngine.InputSystem.PlayerInput> value)

Disassembly:
	0x037D43A8 ADD X0, X31, 0x0
	0x037D43AC ADD X2, X31, 0x8
	0x037D43B0 MOV X1, X21
	0x037D43B4 STR W8, [X31]
	0x037D43B8 BL 0x37D4444
	0x037D43BC ADD X1, X31, 0x8
	0x037D43C0 MOV X0, X20
	0x037D43C4 MOV X2, X19
	0x037D43C8 BL 0x37D3F84
	0x037D43CC LDP X20, X19, [X31 + 0x30]
	0x037D43D0 LDP X30, X21, [X31 + 0x20]
	0x037D43D4 ADD X31, X31, 0x40
	0x037D43D8 RET
	0x037D43DC ADRP X0, 0x924000
	0x037D43E0 LDR X0, [X0 + 0x528]
	0x037D43E4 BL 0x1C16D08
	0x037D43E8 BL 0x1C16F10
	0x037D43EC MOV X19, X0
	0x037D43F0 ADRP X0, 0x971000
	0x037D43F4 LDR X0, [X0 + 0x9D0]
	0x037D43F8 B 0x37D4418
	0x037D43FC ADRP X0, 0x924000
	0x037D4400 LDR X0, [X0 + 0x528]
	0x037D4404 BL 0x1C16D08
	0x037D4408 BL 0x1C16F10
	0x037D440C MOV X19, X0
	0x037D4410 ADRP X0, 0x947000
	0x037D4414 LDR X0, [X0 + 0xDF0]
	0x037D4418 BL 0x1C16D08
	0x037D441C MOV X1, X0
	0x037D4420 MOV X0, X19
	0x037D4424 MOV X2, X31
	0x037D4428 BL 0x330E100
	0x037D442C ADRP X0, 0x974000
	0x037D4430 LDR X0, [X0 + 0xA40]
	0x037D4434 BL 0x1C16D08
	0x037D4438 MOV X1, X0
	0x037D443C MOV X0, X19
	0x037D4440 BL 0x1C16DEC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xC0E000
	006 Move W8, [X21+594]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x975000
	014 Move X0, [X0+2480]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+594], W8
	018 Compare X19, 0
	019 JumpIfEqual {31}
	020 Move X8, 0x975000
	021 Move X8, [X8+2480]
	022 Add X0, X20, 176
	023 Move X1, X19
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X2, [X8]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Call 0x28F24E0, X0, X1
	030 Return 
	031 Move X0, 0x925000
	032 Move X0, [X0+1320]
	033 Call 0x1C17D08
	034 Call 0x1C17F10
	035 Move X19, X0
	036 Move X0, 0x92A000
	037 Move X0, [X0+3784]
	038 Call 0x1C17D08
	039 Move X1, X0
	040 Move X0, X19
	041 Move X2, X31
	042 Call ArgumentNullException..ctor, X0, X1
	043 Move X0, 0x975000
	044 Move X0, [X0+2488]
	045 Call 0x1C17D08
	046 Move X1, X0
	047 Move X0, X19
	048 Call 0x1C17DEC

Method: System.Void remove_onDeviceLost(System.Action`1<UnityEngine.InputSystem.PlayerInput> value)

Disassembly:
	0x037D4444 STP X30, X21, [X31 - 0x20]!
	0x037D4448 STP X20, X19, [X31 + 0x10]
	0x037D444C MOV X19, X1
	0x037D4450 MOV X20, X0
	0x037D4454 BL 0x37E0D08
	0x037D4458 TBZ X0, 0x0, 0x37D4468
	0x037D445C LDP X20, X19, [X31 + 0x10]
	0x037D4460 LDP X30, X21, [X31], #0x20
	0x037D4464 RET
	0x037D4468 ADRP X0, 0x974000
	0x037D446C LDR X0, [X0 + 0x948]
	0x037D4470 BL 0x1C16D08
	0x037D4474 LDR X8, [X0 + 0xB8]
	0x037D4478 MOV X0, X20
	0x037D447C LDR X21, [X8 + 0x20]
	0x037D4480 BL 0x37DFF1C
	0x037D4484 MOV W20, W0
	0x037D4488 MOV X0, X21
	0x037D448C BL 0x19903C0
	0x037D4490 SXTW X1, W20
	0x037D4494 MOV X0, X21
	0x037D4498 BL 0x1BD2138
	0x037D449C LDR X20, [X0 + 0x30]
	0x037D44A0 ADRP X0, 0x974000
	0x037D44A4 LDR X0, [X0 + 0xA48]
	0x037D44A8 BL 0x1C16D08
	0x037D44AC MOV X1, X19
	0x037D44B0 MOV X2, X20
	0x037D44B4 MOV X3, X31
	0x037D44B8 BL 0x3227BD4
	0x037D44BC MOV X19, X0
	0x037D44C0 ADRP X0, 0x927000
	0x037D44C4 LDR X0, [X0 + 0x578]
	0x037D44C8 BL 0x1C16D08
	0x037D44CC BL 0x1C16F10
	0x037D44D0 MOV X1, X19
	0x037D44D4 MOV X2, X31
	0x037D44D8 MOV X20, X0
	0x037D44DC BL 0x3314A68

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xC0E000
	006 Move W8, [X21+595]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x975000
	014 Move X0, [X0+2496]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+595], W8
	018 Compare X19, 0
	019 JumpIfEqual {31}
	020 Move X8, 0x975000
	021 Move X8, [X8+2496]
	022 Add X0, X20, 176
	023 Move X1, X19
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X2, [X8]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Call 0x28F2650, X0, X1
	030 Return 
	031 Move X0, 0x925000
	032 Move X0, [X0+1320]
	033 Call 0x1C17D08
	034 Call 0x1C17F10
	035 Move X19, X0
	036 Move X0, 0x92A000
	037 Move X0, [X0+3784]
	038 Call 0x1C17D08
	039 Move X1, X0
	040 Move X0, X19
	041 Move X2, X31
	042 Call ArgumentNullException..ctor, X0, X1
	043 Move X0, 0x975000
	044 Move X0, [X0+2504]
	045 Call 0x1C17D08
	046 Move X1, X0
	047 Move X0, X19
	048 Call 0x1C17DEC

Method: System.Void add_onDeviceRegained(System.Action`1<UnityEngine.InputSystem.PlayerInput> value)

Disassembly:
	0x037D44E0 ADRP X0, 0x974000
	0x037D44E4 LDR X0, [X0 + 0xA50]
	0x037D44E8 BL 0x1C16D08
	0x037D44EC MOV X1, X0
	0x037D44F0 MOV X0, X20
	0x037D44F4 BL 0x1C16DEC
	0x037D44F8 STR X30, [X31 - 0x30]!
	0x037D44FC STP X22, X21, [X31 + 0x10]
	0x037D4500 STP X20, X19, [X31 + 0x20]
	0x037D4504 ADRP X21, 0xC0D000
	0x037D4508 ADRP X20, 0x974000
	0x037D450C LDRB W8, [X21 + 0x25E]
	0x037D4510 LDR X20, [X20 + 0x8F8]
	0x037D4514 MOV W19, W0
	0x037D4518 TBNZ X8, 0x0, 0x37D4530
	0x037D451C ADRP X0, 0x974000
	0x037D4520 LDR X0, [X0 + 0x8F8]
	0x037D4524 BL 0x1C16CF4
	0x037D4528 MOVZ W8, 0x1
	0x037D452C STRB W8, [X21 + 0x25E]
	0x037D4530 LDR X0, [X20]
	0x037D4534 MOV W21, W31
	0x037D4538 LDR W8, [X0 + 0xE0]
	0x037D453C CBNZ W8, 0x37D4548
	0x037D4540 BL 0x1C16DFC
	0x037D4544 LDR X0, [X20]
	0x037D4548 LDR X8, [X0 + 0xB8]
	0x037D454C LDR W8, [X8]
	0x037D4550 CMP W21, W8
	0x037D4554 B.GE 0x37D45A4
	0x037D4558 LDR W8, [X0 + 0xE0]
	0x037D455C CBNZ W8, 0x37D4568
	0x037D4560 BL 0x1C16DFC
	0x037D4564 LDR X0, [X20]
	0x037D4568 LDR X8, [X0 + 0xB8]
	0x037D456C LDR X8, [X8 + 0x8]
	0x037D4570 CBZ X8, 0x37D45EC
	0x037D4574 LDR W9, [X8 + 0x18]
	0x037D4578 CMP W21, W9

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xC0E000
	006 Move W8, [X21+596]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x975000
	014 Move X0, [X0+2480]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+596], W8
	018 Compare X19, 0
	019 JumpIfEqual {31}
	020 Move X8, 0x975000
	021 Move X8, [X8+2480]
	022 Add X0, X20, 256
	023 Move X1, X19
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X2, [X8]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Call 0x28F24E0, X0, X1
	030 Return 
	031 Move X0, 0x925000
	032 Move X0, [X0+1320]
	033 Call 0x1C17D08
	034 Call 0x1C17F10
	035 Move X19, X0
	036 Move X0, 0x92A000
	037 Move X0, [X0+3784]
	038 Call 0x1C17D08
	039 Move X1, X0
	040 Move X0, X19
	041 Move X2, X31
	042 Call ArgumentNullException..ctor, X0, X1
	043 Move X0, 0x975000
	044 Move X0, [X0+2512]
	045 Call 0x1C17D08
	046 Move X1, X0
	047 Move X0, X19
	048 Call 0x1C17DEC

Method: System.Void remove_onDeviceRegained(System.Action`1<UnityEngine.InputSystem.PlayerInput> value)

Disassembly:
	0x037D457C B.CS 0x37D45F0
	0x037D4580 SXTW X22, W21
	0x037D4584 ADD X9, X8, X22, 0x3, LSL
	0x037D4588 LDR X9, [X9 + 0x20]
	0x037D458C CBZ X9, 0x37D45EC
	0x037D4590 LDR W9, [X9 + 0x90]
	0x037D4594 CMP W9, W19
	0x037D4598 B.EQ 0x37D45AC
	0x037D459C ADD W21, W21, 0x1
	0x037D45A0 B 0x37D4538
	0x037D45A4 MOV X0, X31
	0x037D45A8 B 0x37D45DC
	0x037D45AC LDR W9, [X0 + 0xE0]
	0x037D45B0 CBNZ W9, 0x37D45C8
	0x037D45B4 BL 0x1C16DFC
	0x037D45B8 LDR X8, [X20]
	0x037D45BC LDR X8, [X8 + 0xB8]
	0x037D45C0 LDR X8, [X8 + 0x8]
	0x037D45C4 CBZ X8, 0x37D45EC
	0x037D45C8 LDR W9, [X8 + 0x18]
	0x037D45CC CMP W21, W9
	0x037D45D0 B.CS 0x37D45F0
	0x037D45D4 ADD X8, X8, X22, 0x3, LSL
	0x037D45D8 LDR X0, [X8 + 0x20]
	0x037D45DC LDP X20, X19, [X31 + 0x20]
	0x037D45E0 LDP X22, X21, [X31 + 0x10]
	0x037D45E4 LDR X30, [X31], #0x30
	0x037D45E8 RET
	0x037D45EC BL 0x1C16F20
	0x037D45F0 BL 0x1C16F28
	0x037D45F4 STP X30, X23, [X31 - 0x30]!
	0x037D45F8 STP X22, X21, [X31 + 0x10]
	0x037D45FC STP X20, X19, [X31 + 0x20]
	0x037D4600 ADRP X20, 0xC0D000
	0x037D4604 LDRB W8, [X20 + 0x25F]
	0x037D4608 MOV X19, X0
	0x037D460C TBNZ X8, 0x0, 0x37D4630
	0x037D4610 ADRP X0, 0x974000
	0x037D4614 LDR X0, [X0 + 0x8F8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xC0E000
	006 Move W8, [X21+597]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x975000
	014 Move X0, [X0+2496]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+597], W8
	018 Compare X19, 0
	019 JumpIfEqual {31}
	020 Move X8, 0x975000
	021 Move X8, [X8+2496]
	022 Add X0, X20, 256
	023 Move X1, X19
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X2, [X8]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Call 0x28F2650, X0, X1
	030 Return 
	031 Move X0, 0x925000
	032 Move X0, [X0+1320]
	033 Call 0x1C17D08
	034 Call 0x1C17F10
	035 Move X19, X0
	036 Move X0, 0x92A000
	037 Move X0, [X0+3784]
	038 Call 0x1C17D08
	039 Move X1, X0
	040 Move X0, X19
	041 Move X2, X31
	042 Call ArgumentNullException..ctor, X0, X1
	043 Move X0, 0x975000
	044 Move X0, [X0+2520]
	045 Call 0x1C17D08
	046 Move X1, X0
	047 Move X0, X19
	048 Call 0x1C17DEC

Method: System.Void add_onControlsChanged(System.Action`1<UnityEngine.InputSystem.PlayerInput> value)

Disassembly:
	0x037D4618 BL 0x1C16CF4
	0x037D461C ADRP X0, 0x970000
	0x037D4620 LDR X0, [X0 + 0xFC8]
	0x037D4624 BL 0x1C16CF4
	0x037D4628 MOVZ W8, 0x1
	0x037D462C STRB W8, [X20 + 0x25F]
	0x037D4630 CBZ X19, 0x37D4714
	0x037D4634 ADRP X21, 0x974000
	0x037D4638 ADRP X22, 0x970000
	0x037D463C LDR X21, [X21 + 0x8F8]
	0x037D4640 LDR X22, [X22 + 0xFC8]
	0x037D4644 MOV W20, W31
	0x037D4648 LDR X0, [X21]
	0x037D464C LDR W8, [X0 + 0xE0]
	0x037D4650 CBNZ W8, 0x37D465C
	0x037D4654 BL 0x1C16DFC
	0x037D4658 LDR X0, [X21]
	0x037D465C LDR X8, [X0 + 0xB8]
	0x037D4660 LDR W9, [X8]
	0x037D4664 CMP W20, W9
	0x037D4668 B.GE 0x37D46C0
	0x037D466C LDR W9, [X0 + 0xE0]
	0x037D4670 CBNZ W9, 0x37D4680
	0x037D4674 BL 0x1C16DFC
	0x037D4678 LDR X8, [X21]
	0x037D467C LDR X8, [X8 + 0xB8]
	0x037D4680 LDR X8, [X8 + 0x8]
	0x037D4684 CBZ X8, 0x37D470C
	0x037D4688 LDR W9, [X8 + 0x18]
	0x037D468C CMP W20, W9
	0x037D4690 B.CS 0x37D4710
	0x037D4694 SXTW X23, W20
	0x037D4698 ADD X8, X8, X23, 0x3, LSL
	0x037D469C LDR X0, [X8 + 0x20]
	0x037D46A0 CBZ X0, 0x37D470C
	0x037D46A4 BL 0x37D38C8
	0x037D46A8 LDR X3, [X22]
	0x037D46AC MOV X2, X19
	0x037D46B0 BL 0x223C504

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xC0E000
	006 Move W8, [X21+598]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x975000
	014 Move X0, [X0+2480]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+598], W8
	018 Compare X19, 0
	019 JumpIfEqual {31}
	020 Move X8, 0x975000
	021 Move X8, [X8+2480]
	022 Add X0, X20, 336
	023 Move X1, X19
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X2, [X8]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Call 0x28F24E0, X0, X1
	030 Return 
	031 Move X0, 0x925000
	032 Move X0, [X0+1320]
	033 Call 0x1C17D08
	034 Call 0x1C17F10
	035 Move X19, X0
	036 Move X0, 0x92A000
	037 Move X0, [X0+3784]
	038 Call 0x1C17D08
	039 Move X1, X0
	040 Move X0, X19
	041 Move X2, X31
	042 Call ArgumentNullException..ctor, X0, X1
	043 Move X0, 0x975000
	044 Move X0, [X0+2528]
	045 Call 0x1C17D08
	046 Move X1, X0
	047 Move X0, X19
	048 Call 0x1C17DEC

Method: System.Void remove_onControlsChanged(System.Action`1<UnityEngine.InputSystem.PlayerInput> value)

Disassembly:
	0x037D46B4 TBNZ X0, 0x0, 0x37D46C8
	0x037D46B8 ADD W20, W20, 0x1
	0x037D46BC B 0x37D4648
	0x037D46C0 MOV X0, X31
	0x037D46C4 B 0x37D46FC
	0x037D46C8 LDR X0, [X21]
	0x037D46CC LDR W8, [X0 + 0xE0]
	0x037D46D0 CBNZ W8, 0x37D46DC
	0x037D46D4 BL 0x1C16DFC
	0x037D46D8 LDR X0, [X21]
	0x037D46DC LDR X8, [X0 + 0xB8]
	0x037D46E0 LDR X8, [X8 + 0x8]
	0x037D46E4 CBZ X8, 0x37D470C
	0x037D46E8 LDR W9, [X8 + 0x18]
	0x037D46EC CMP W20, W9
	0x037D46F0 B.CS 0x37D4710
	0x037D46F4 ADD X8, X8, X23, 0x3, LSL
	0x037D46F8 LDR X0, [X8 + 0x20]
	0x037D46FC LDP X20, X19, [X31 + 0x20]
	0x037D4700 LDP X22, X21, [X31 + 0x10]
	0x037D4704 LDP X30, X23, [X31], #0x30
	0x037D4708 RET
	0x037D470C BL 0x1C16F20
	0x037D4710 BL 0x1C16F28
	0x037D4714 ADRP X0, 0x924000
	0x037D4718 LDR X0, [X0 + 0x528]
	0x037D471C BL 0x1C16D08
	0x037D4720 BL 0x1C16F10
	0x037D4724 MOV X19, X0
	0x037D4728 ADRP X0, 0x947000
	0x037D472C LDR X0, [X0 + 0xD20]
	0x037D4730 BL 0x1C16D08
	0x037D4734 MOV X1, X0
	0x037D4738 MOV X0, X19
	0x037D473C MOV X2, X31
	0x037D4740 BL 0x330E100
	0x037D4744 ADRP X0, 0x974000
	0x037D4748 LDR X0, [X0 + 0xA58]
	0x037D474C BL 0x1C16D08

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xC0E000
	006 Move W8, [X21+599]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x975000
	014 Move X0, [X0+2496]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+599], W8
	018 Compare X19, 0
	019 JumpIfEqual {31}
	020 Move X8, 0x975000
	021 Move X8, [X8+2496]
	022 Add X0, X20, 336
	023 Move X1, X19
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X2, [X8]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Call 0x28F2650, X0, X1
	030 Return 
	031 Move X0, 0x925000
	032 Move X0, [X0+1320]
	033 Call 0x1C17D08
	034 Call 0x1C17F10
	035 Move X19, X0
	036 Move X0, 0x92A000
	037 Move X0, [X0+3784]
	038 Call 0x1C17D08
	039 Move X1, X0
	040 Move X0, X19
	041 Move X2, X31
	042 Call ArgumentNullException..ctor, X0, X1
	043 Move X0, 0x975000
	044 Move X0, [X0+2536]
	045 Call 0x1C17D08
	046 Move X1, X0
	047 Move X0, X19
	048 Call 0x1C17DEC

Method: UnityEngine.Camera get_camera()

Disassembly:
	0x037D4750 MOV X1, X0
	0x037D4754 MOV X0, X19

ISIL:
	001 Move X0, [X0+120]
	002 Return X0

Method: System.Void set_camera(UnityEngine.Camera value)

Disassembly:
	0x037D4758 BL 0x1C16DEC
	0x037D475C STP X30, X25, [X31 - 0x40]!

ISIL:
	001 Move [X0+120], X1
	002 Return 

Method: UnityEngine.InputSystem.UI.InputSystemUIInputModule get_uiInputModule()

Disassembly:
	0x037D4760 STP X24, X23, [X31 + 0x10]
	0x037D4764 STP X22, X21, [X31 + 0x20]

ISIL:
	001 Move X0, [X0+48]
	002 Return X0

Method: System.Void set_uiInputModule(UnityEngine.InputSystem.UI.InputSystemUIInputModule value)

Disassembly:
	0x037D4768 STP X20, X19, [X31 + 0x30]
	0x037D476C ADRP X24, 0xC0D000
	0x037D4770 ADRP X25, 0x91F000
	0x037D4774 LDRB W8, [X24 + 0x260]
	0x037D4778 LDR X25, [X25 + 0x598]
	0x037D477C MOV X20, X4
	0x037D4780 MOV W22, W3
	0x037D4784 MOV X21, X2
	0x037D4788 MOV W23, W1
	0x037D478C MOV X19, X0
	0x037D4790 TBNZ X8, 0x0, 0x37D47C0
	0x037D4794 ADRP X0, 0x974000
	0x037D4798 LDR X0, [X0 + 0x1E8]
	0x037D479C BL 0x1C16CF4
	0x037D47A0 ADRP X0, 0x91F000
	0x037D47A4 LDR X0, [X0 + 0x598]
	0x037D47A8 BL 0x1C16CF4
	0x037D47AC ADRP X0, 0x974000
	0x037D47B0 LDR X0, [X0 + 0x8F8]
	0x037D47B4 BL 0x1C16CF4
	0x037D47B8 MOVZ W8, 0x1
	0x037D47BC STRB W8, [X24 + 0x260]
	0x037D47C0 LDR X0, [X25]
	0x037D47C4 LDR W8, [X0 + 0xE0]
	0x037D47C8 CBNZ W8, 0x37D47D0
	0x037D47CC BL 0x1C16DFC
	0x037D47D0 MOV X0, X19
	0x037D47D4 MOV X1, X31
	0x037D47D8 MOV X2, X31
	0x037D47DC BL 0x3C3883C
	0x037D47E0 TBNZ X0, 0x0, 0x37D486C
	0x037D47E4 ADRP X24, 0x974000
	0x037D47E8 LDR X24, [X24 + 0x8F8]
	0x037D47EC LDR X0, [X24]
	0x037D47F0 LDR W8, [X0 + 0xE0]
	0x037D47F4 CBNZ W8, 0x37D4800
	0x037D47F8 BL 0x1C16DFC
	0x037D47FC LDR X0, [X24]
	0x037D4800 LDR X8, [X0 + 0xB8]
	0x037D4804 STP W23, W22, [X8 + 0x28]
	0x037D4808 STR X21, [X8 + 0x30]
	0x037D480C CBZ X20, 0x37D4848
	0x037D4810 ADRP X21, 0x974000
	0x037D4814 LDR W9, [X0 + 0xE0]
	0x037D4818 LDR X21, [X21 + 0x1E8]
	0x037D481C CBNZ W9, 0x37D482C
	0x037D4820 BL 0x1C16DFC
	0x037D4824 LDR X8, [X24]
	0x037D4828 LDR X8, [X8 + 0xB8]
	0x037D482C LDR X4, [X21]
	0x037D4830 ADD X0, X8, 0x20
	0x037D4834 ADD X1, X8, 0x18
	0x037D4838 MOVZ W3, 0xA
	0x037D483C MOV X2, X20
	0x037D4840 BL 0x2174728
	0x037D4844 LDR X0, [X24]
	0x037D4848 LDR W8, [X0 + 0xE0]
	0x037D484C CBNZ W8, 0x37D4854
	0x037D4850 BL 0x1C16DFC
	0x037D4854 MOV X0, X19
	0x037D4858 LDP X20, X19, [X31 + 0x30]
	0x037D485C LDP X22, X21, [X31 + 0x20]
	0x037D4860 LDP X24, X23, [X31 + 0x10]
	0x037D4864 LDP X30, X25, [X31], #0x40
	0x037D4868 B 0x37D48B4
	0x037D486C ADRP X0, 0x924000
	0x037D4870 LDR X0, [X0 + 0x528]
	0x037D4874 BL 0x1C16D08
	0x037D4878 BL 0x1C16F10
	0x037D487C MOV X19, X0
	0x037D4880 ADRP X0, 0x92A000
	0x037D4884 LDR X0, [X0 + 0xF10]
	0x037D4888 BL 0x1C16D08
	0x037D488C MOV X1, X0
	0x037D4890 MOV X0, X19
	0x037D4894 MOV X2, X31
	0x037D4898 BL 0x330E100
	0x037D489C ADRP X0, 0x974000
	0x037D48A0 LDR X0, [X0 + 0xA60]
	0x037D48A4 BL 0x1C16D08
	0x037D48A8 MOV X1, X0
	0x037D48AC MOV X0, X19
	0x037D48B0 BL 0x1C16DEC
	0x037D48B4 SUB X31, X31, 0x50
	0x037D48B8 STP X30, X25, [X31 + 0x10]
	0x037D48BC STP X24, X23, [X31 + 0x20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0xC0E000
	008 Move X23, 0x920000
	009 Move W8, [X21+600]
	010 Move X23, [X23+1432]
	011 Move X20, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x920000
	018 Move X0, [X0+1432]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+600], W8
	022 Move X0, [X23]
	023 Move X21, [X19+48]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, X21
	029 Move X1, X20
	030 Move X2, X31
	031 Call Object.op_Equality, X0, X1
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfEqual {115}
	036 Move X0, [X23]
	037 Move X21, [X19+48]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Move X0, X21
	043 Move X1, X31
	044 Move X2, X31
	045 Call Object.op_Inequality, X0, X1
	046 Move TEMP, X0
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfNotEqual {74}
	050 Move X8, [X19+48]
	051 Compare X8, 0
	052 JumpIfEqual {122}
	053 Move X0, [X23]
	054 Move X21, [X8+112]
	055 Move X22, [X19+32]
	056 Move W8, [X0+224]
	057 Compare W8, 0
	058 JumpIfNotEqual {60}
	059 Call 0x1C17DFC
	060 Move X0, X21
	061 Move X1, X22
	062 Move X2, X31
	063 Call Object.op_Equality, X0, X1
	064 Move TEMP, X0
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfNotEqual {74}
	068 Move X0, [X19+48]
	069 Compare X0, 0
	070 JumpIfEqual {122}
	071 Move X1, X31
	072 Move X2, X31
	073 Call InputSystemUIInputModule.set_actionsAsset, X0, X1
	074 Move [X19+48], X20
	075 Move X0, [X23]
	076 Move W8, [X0+224]
	077 Compare W8, 0
	078 JumpIfNotEqual {80}
	079 Call 0x1C17DFC
	080 Move X0, X20
	081 Move X1, X31
	082 Move X2, X31
	083 Call Object.op_Inequality, X0, X1
	084 Move TEMP, X0
	085 And TEMP, TEMP, 1
	086 Compare TEMP, 1
	087 JumpIfNotEqual {115}
	088 Move X0, [X23]
	089 Move X20, [X19+32]
	090 Move W8, [X0+224]
	091 Compare W8, 0
	092 JumpIfNotEqual {94}
	093 Call 0x1C17DFC
	094 Move X0, X20
	095 Move X1, X31
	096 Move X2, X31
	097 Call Object.op_Inequality, X0, X1
	098 Move TEMP, X0
	099 And TEMP, TEMP, 1
	100 Compare TEMP, 1
	101 JumpIfNotEqual {115}
	102 Move X0, [X19+48]
	103 Compare X0, 0
	104 JumpIfEqual {122}
	105 Move X1, [X19+32]
	106 Move X20, [X31+32]
	107 Move X19, [X31+40]
	108 Move X22, [X31+16]
	109 Move X21, [X31+24]
	110 Move X2, X31
	111 Move X30, [X31+48]
	112 Move X23, [X31+56]
	113 Call InputSystemUIInputModule.set_actionsAsset, X0, X1
	114 Return 
	115 Move X20, [X31+32]
	116 Move X19, [X31+40]
	117 Move X22, [X31+16]
	118 Move X21, [X31+24]
	119 Move X30, [X31+48]
	120 Move X23, [X31+56]
	121 Return 
	122 Call 0x1C17F20

Method: UnityEngine.InputSystem.Users.InputUser get_user()

Disassembly:
	0x037D48C0 STP X22, X21, [X31 + 0x30]
	0x037D48C4 STP X20, X19, [X31 + 0x40]

ISIL:
	001 Move W0, [X0+160]
	002 Return X0

Method: UnityEngine.InputSystem.Utilities.ReadOnlyArray`1<UnityEngine.InputSystem.InputDevice> get_devices()

Disassembly:
	0x037D48C8 ADRP X20, 0xC0D000
	0x037D48CC ADRP X23, 0x974000
	0x037D48D0 LDRB W8, [X20 + 0x262]
	0x037D48D4 LDR X23, [X23 + 0x8F8]
	0x037D48D8 MOV X19, X0
	0x037D48DC TBNZ X8, 0x0, 0x37D4930
	0x037D48E0 ADRP X0, 0x91F000
	0x037D48E4 LDR X0, [X0 + 0xA28]
	0x037D48E8 BL 0x1C16CF4
	0x037D48EC ADRP X0, 0x974000
	0x037D48F0 LDR X0, [X0 + 0xA68]
	0x037D48F4 BL 0x1C16CF4

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Add X19, X0, 160
	004 Move X0, X19
	005 Call InputUser.get_valid, X0
	006 Move TEMP, X0
	007 And TEMP, TEMP, 1
	008 Compare TEMP, 1
	009 JumpIfNotEqual {12}
	010 Move X0, X19
	011 Call InputUser.get_pairedDevices, X0
	012 Move X0, X31
	013 Move X1, X31
	014 Move X30, [X31+16]
	015 Move X19, [X31+24]
	016 Return X0

Method: System.Boolean get_hasMissingRequiredDevices()

Disassembly:
	0x037D49A4 CBNZ W8, 0x37D49B0
	0x037D49A8 BL 0x1C16DFC
	0x037D49AC LDR X0, [X23]
	0x037D49B0 LDR X8, [X0 + 0xB8]
	0x037D49B4 LDR X9, [X8 + 0x20]
	0x037D49B8 STR W31, [X8 + 0x18]
	0x037D49BC CBZ X9, 0x37D49F4
	0x037D49C0 LDR W9, [X0 + 0xE0]
	0x037D49C4 CBZ W9, 0x37D49D0
	0x037D49C8 MOV W2, W31
	0x037D49CC B 0x37D49E0
	0x037D49D0 BL 0x1C16DFC
	0x037D49D4 LDR X8, [X23]
	0x037D49D8 LDR X8, [X8 + 0xB8]
	0x037D49DC LDR W2, [X8 + 0x18]
	0x037D49E0 LDR X0, [X8 + 0x20]
	0x037D49E4 MOV W1, W31
	0x037D49E8 MOV X3, X31

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+16], X30
	003 Move [X31+24], X19
	004 Move W8, [X0+160]
	005 Move X19, X0
	006 Add X0, X31, 8
	007 Move [X31+8], W8
	008 Call InputUser.get_valid, X0
	009 Move TEMP, X0
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfNotEqual {17}
	013 Move W8, [X19+160]
	014 Add X0, X31, 8
	015 Move [X31+8], W8
	016 Call InputUser.get_hasMissingRequiredDevices, X0
	017 Move W0, W31
	018 Move X30, [X31+16]
	019 Move X19, [X31+24]
	020 And W0, W0, 1
	021 Add X31, X31, 32
	022 Return X0

Method: UnityEngine.InputSystem.Utilities.ReadOnlyArray`1<UnityEngine.InputSystem.PlayerInput> get_all()

Disassembly:
	0x037D4A68 CBNZ W8, 0x37D4A70
	0x037D4A6C BL 0x1C16DFC
	0x037D4A70 MOV X0, X20
	0x037D4A74 MOV X1, X31
	0x037D4A78 BL 0x3C39564
	0x037D4A7C ADRP X8, 0x91F000
	0x037D4A80 LDR X8, [X8 + 0xA28]
	0x037D4A84 LDR X0, [X8]
	0x037D4A88 LDR W8, [X0 + 0xE0]
	0x037D4A8C CBNZ W8, 0x37D4A94
	0x037D4A90 BL 0x1C16DFC
	0x037D4A94 ADRP X8, 0x974000
	0x037D4A98 LDR X8, [X8 + 0xA70]
	0x037D4A9C MOV X1, X19
	0x037D4AA0 MOV X2, X31
	0x037D4AA4 LDR X0, [X8]
	0x037D4AA8 BL 0x3C065A4
	0x037D4AAC B 0x37D4AF4
	0x037D4AB0 CBZ W25, 0x37D4AF8
	0x037D4AB4 CBZ X21, 0x37D4B14
	0x037D4AB8 LDR W8, [X21 + 0xA0]
	0x037D4ABC ADD X0, X31, 0x8
	0x037D4AC0 STR W8, [X31 + 0x8]
	0x037D4AC4 BL 0x37D2BD0
	0x037D4AC8 TBZ X0, 0x0, 0x37D4AD8
	0x037D4ACC MOV X0, X21
	0x037D4AD0 BL 0x37D39A4
	0x037D4AD4 TBZ X0, 0x0, 0x37D4AF8
	0x037D4AD8 LDR X0, [X24]
	0x037D4ADC LDR W8, [X0 + 0xE0]
	0x037D4AE0 CBNZ W8, 0x37D4AE8
	0x037D4AE4 BL 0x1C16DFC
	0x037D4AE8 MOV X0, X20
	0x037D4AEC MOV X1, X31
	0x037D4AF0 BL 0x3C39564
	0x037D4AF4 MOV X21, X31

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+32], X20
	004 Move [X31+40], X19
	005 Move X20, 0xC0E000
	006 Move X19, 0x975000
	007 Move W8, [X20+601]
	008 Move X19, [X19+2296]
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x975000
	014 Move X0, [X0+2296]
	015 Call 0x1C17CF4
	016 Move X0, 0x975000
	017 Move X0, [X0+2544]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+601], W8
	021 Move X0, [X19]
	022 Move X20, 0x975000
	023 Move W8, [X0+224]
	024 Move X20, [X20+2544]
	025 Compare W8, 0
	026 JumpIfNotEqual {29}
	027 Call 0x1C17DFC
	028 Move X0, [X19]
	029 Move X8, [X0+184]
	030 Move X4, [X20]
	031 Add X0, X31, 0
	032 Move W2, W31
	033 Move X1, [X8+8]
	034 Move W3, [X8]
	035 Move [X31], X31
	036 Move [X31+8], X31
	037 Call ReadOnlyArray`1<Object>..ctor, X0, X1, X2, X3
	038 Move X0, [X31]
	039 Move X1, [X31+8]
	040 Move X20, [X31+32]
	041 Move X19, [X31+40]
	042 Move X30, [X31+16]
	043 Add X31, X31, 48
	044 Return X0

Method: System.Boolean get_isSinglePlayer()

Disassembly:
	0x037D4AF8 MOV X0, X21
	0x037D4AFC LDP X20, X19, [X31 + 0x40]
	0x037D4B00 LDP X22, X21, [X31 + 0x30]
	0x037D4B04 LDP X24, X23, [X31 + 0x20]
	0x037D4B08 LDP X30, X25, [X31 + 0x10]
	0x037D4B0C ADD X31, X31, 0x50
	0x037D4B10 RET
	0x037D4B14 BL 0x1C16F20
	0x037D4B18 MOV X0, X21
	0x037D4B1C BL 0x1C16F18
	0x037D4B20 BL 0x1C16F20
	0x037D4B24 B 0x37D4B28
	0x037D4B28 MOV X22, X0
	0x037D4B2C MOV X20, X31
	0x037D4B30 B 0x37D4B38
	0x037D4B34 MOV X22, X0
	0x037D4B38 CMP W1, 0x1
	0x037D4B3C B.NE 0x37D4B54
	0x037D4B40 MOV X0, X22
	0x037D4B44 BL 0x3EB1AD0
	0x037D4B48 LDR X21, [X0]
	0x037D4B4C BL 0x3EB1AE0
	0x037D4B50 B 0x37D499C
	0x037D4B54 MOV X21, X31
	0x037D4B58 B 0x37D4B60
	0x037D4B5C MOV X22, X0
	0x037D4B60 LDR X0, [X23]
	0x037D4B64 LDR W8, [X0 + 0xE0]
	0x037D4B68 CBNZ W8, 0x37D4B74
	0x037D4B6C BL 0x1C16DFC
	0x037D4B70 LDR X0, [X23]
	0x037D4B74 LDR X8, [X0 + 0xB8]
	0x037D4B78 LDR X9, [X8 + 0x20]
	0x037D4B7C STR W31, [X8 + 0x18]
	0x037D4B80 CBZ X9, 0x37D4BB8
	0x037D4B84 LDR W9, [X0 + 0xE0]
	0x037D4B88 CBNZ W9, 0x37D4BA0
	0x037D4B8C BL 0x1C16DFC
	0x037D4B90 LDR X8, [X23]
	0x037D4B94 LDR X8, [X8 + 0xB8]
	0x037D4B98 LDR W2, [X8 + 0x18]
	0x037D4B9C B 0x37D4BA4
	0x037D4BA0 MOV W2, W31
	0x037D4BA4 LDR X0, [X8 + 0x20]
	0x037D4BA8 MOV W1, W31
	0x037D4BAC MOV X3, X31
	0x037D4BB0 BL 0x339FA34
	0x037D4BB4 LDR X0, [X23]
	0x037D4BB8 LDR W8, [X0 + 0xE0]
	0x037D4BBC CBNZ W8, 0x37D4BC8
	0x037D4BC0 BL 0x1C16DFC
	0x037D4BC4 LDR X0, [X23]
	0x037D4BC8 LDR X8, [X0 + 0xB8]
	0x037D4BCC MOVI V0.2D, 0xFFFFFFFFFFFFFFFF
	0x037D4BD0 STR X31, [X8 + 0x30]
	0x037D4BD4 STR D0, [X8 + 0x28]
	0x037D4BD8 STRB W31, [X8 + 0x38]
	0x037D4BDC CBNZ X21, 0x37D4BE8
	0x037D4BE0 MOV X0, X22
	0x037D4BE4 BL 0x1D2C690
	0x037D4BE8 MOV X0, X21
	0x037D4BEC BL 0x1C16F18
	0x037D4BF0 BL 0x1990590
	0x037D4BF4 STP X30, X25, [X31 - 0x40]!
	0x037D4BF8 STP X24, X23, [X31 + 0x10]
	0x037D4BFC STP X22, X21, [X31 + 0x20]
	0x037D4C00 STP X20, X19, [X31 + 0x30]
	0x037D4C04 ADRP X24, 0xC0D000
	0x037D4C08 ADRP X25, 0x91F000
	0x037D4C0C LDRB W8, [X24 + 0x261]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xC0E000
	006 Move X19, 0x975000
	007 Move W8, [X20+602]
	008 Move X19, [X19+2296]
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x920000
	014 Move X0, [X0+1432]
	015 Call 0x1C17CF4
	016 Move X0, 0x975000
	017 Move X0, [X0+2296]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+602], W8
	021 Move X0, [X19]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {27}
	025 Call 0x1C17DFC
	026 Move X0, [X19]
	027 Move X8, [X0+184]
	028 Move W8, [X8]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move W0, W31
	031 Move X20, 0xC0E000
	032 Move W8, [X20+779]
	033 Compare W8, 0
	034 JumpIfNotEqual {40}
	035 Move X0, 0x975000
	036 Move X0, [X0+2552]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X20+779], W8
	040 Move X21, 0x975000
	041 Move X21, [X21+2552]
	042 Move X9, 0x920000
	043 Move X8, [X21]
	044 Move X9, [X9+1432]
	045 Move X8, [X8+184]
	046 Move X0, [X9]
	047 Move X19, [X8]
	048 Move W9, [X0+224]
	049 Compare W9, 0
	050 JumpIfNotEqual {52}
	051 Call 0x1C17DFC
	052 Move X0, X19
	053 Move X1, X31
	054 Move X2, X31
	055 Call Object.op_Equality, X0, X1
	056 Move TEMP, X0
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfNotEqual {61}
	060 Move W0, 1
	061 Move W8, [X20+779]
	062 Compare W8, 0
	063 JumpIfNotEqual {69}
	064 Move X0, 0x975000
	065 Move X0, [X0+2552]
	066 Call 0x1C17CF4
	067 Move W8, 1
	068 Move [X20+779], W8
	069 Move X8, [X21]
	070 Move X8, [X8+184]
	071 Move X8, [X8]
	072 Compare X8, 0
	073 JumpIfEqual {82}
	074 Move W8, [X8+40]
	075 NotImplemented "Instruction CMP not yet implemented."
	076 NotImplemented "Instruction CSET not yet implemented."
	077 Move X20, [X31+16]
	078 Move X19, [X31+24]
	079 Move X30, [X31+32]
	080 Move X21, [X31+40]
	081 Return X0
	082 Call 0x1C17F20

Method: TDevice GetDevice()

Disassembly:
	0x022325C8 LDR X8, [X8 + 0xB60]
	0x022325CC LDR W9, [X0 + 0xE0]
	0x022325D0 LDR X27, [X8]
	0x022325D4 CBNZ W9, 0x22325DC
	0x022325D8 BL 0x1C16DFC
	0x022325DC MOV X0, X27
	0x022325E0 MOV X1, X31
	0x022325E4 BL 0x338C698
	0x022325E8 MOV X1, X0
	0x022325EC MOV X0, X26
	0x022325F0 MOV X2, X31
	0x022325F4 BL 0x3395194
	0x022325F8 TBZ X0, 0x0, 0x223263C
	0x022325FC LDR X0, [X25 + 0x30]
	0x02232600 CBZ X0, 0x223283C
	0x02232604 ADRP X8, 0x1EC6000
	0x02232608 LDR X8, [X8 + 0xB8]
	0x0223260C MOV X1, X23
	0x02232610 LDR X2, [X8]
	0x02232614 BL 0x2AA528C
	0x02232618 MOV X27, X28
	0x0223261C LDUR X28, [X29 - 0x28]
	0x02232620 TBZ X0, 0x0, 0x22327D8
	0x02232624 MOV X0, X25
	0x02232628 MOV X1, X23
	0x0223262C MOV X2, X31
	0x02232630 MOV X3, X31
	0x02232634 BL 0x39150B4
	0x02232638 B 0x22324FC
	0x0223263C ADRP X8, 0x1EEA000
	0x02232640 LDR X0, [X19]
	0x02232644 LDR X8, [X8 + 0x250]
	0x02232648 LDR W9, [X0 + 0xE0]
	0x0223264C LDR X27, [X8]
	0x02232650 CBNZ W9, 0x2232658
	0x02232654 BL 0x1C16DFC
	0x02232658 MOV X0, X27
	0x0223265C MOV X1, X31
	0x02232660 BL 0x338C698
	0x02232664 MOV X1, X0
	0x02232668 MOV X0, X26
	0x0223266C MOV X2, X31
	0x02232670 BL 0x3395194
	0x02232674 TBZ X0, 0x0, 0x22326D4
	0x02232678 LDR X0, [X25 + 0x38]
	0x0223267C CBZ X0, 0x223283C
	0x02232680 ADRP X8, 0x1EEA000
	0x02232684 LDR X8, [X8 + 0x260]
	0x02232688 MOV X1, X23
	0x0223268C LDR X2, [X8]
	0x02232690 BL 0x2A96034
	0x02232694 MOV X27, X28
	0x02232698 LDUR X28, [X29 - 0x28]
	0x0223269C TBZ X0, 0x0, 0x22327D8
	0x022326A0 FMOV S0, W31
	0x022326A4 FMOV S1, W31
	0x022326A8 FMOV S2, W31
	0x022326AC FMOV S3, W31
	0x022326B0 MOV X0, X25
	0x022326B4 MOV X1, X23
	0x022326B8 MOV X2, X31
	0x022326BC BL 0x3915130
	0x022326C0 ADRP X8, 0x1EE9000
	0x022326C4 LDR X8, [X8 + 0x5E0]
	0x022326C8 STP S0, S1, [X29 - 0x20]
	0x022326CC STP S2, S3, [X29 - 0x18]
	0x022326D0 B 0x22324F0
	0x022326D4 ADRP X8, 0x1EEA000
	0x022326D8 LDR X0, [X19]
	0x022326DC LDR X8, [X8 + 0x278]
	0x022326E0 LDR W9, [X0 + 0xE0]
	0x022326E4 LDR X27, [X8]
	0x022326E8 CBNZ W9, 0x22326F0
	0x022326EC BL 0x1C16DFC
	0x022326F0 MOV X0, X27
	0x022326F4 MOV X1, X31
	0x022326F8 BL 0x338C698
	0x022326FC MOV X1, X0
	0x02232700 MOV X0, X26
	0x02232704 MOV X2, X31
	0x02232708 BL 0x3395194
	0x0223270C TBZ X0, 0x0, 0x2232750
	0x02232710 LDR X0, [X25 + 0x40]
	0x02232714 CBZ X0, 0x223283C
	0x02232718 ADRP X8, 0x1EEA000
	0x0223271C LDR X8, [X8 + 0x268]
	0x02232720 MOV X1, X23
	0x02232724 MOV X27, X28
	0x02232728 LDR X2, [X8]
	0x0223272C BL 0x2AA528C
	0x02232730 LDUR X28, [X29 - 0x28]
	0x02232734 TBZ X0, 0x0, 0x22327D8
	0x02232738 MOV X0, X25
	0x0223273C MOV X1, X23
	0x02232740 MOV X2, X31
	0x02232744 MOV X3, X31
	0x02232748 BL 0x39151D8
	0x0223274C B 0x22324FC
	0x02232750 LDR X0, [X19]
	0x02232754 LDR X8, [X22 + 0x38]
	0x02232758 MOV X27, X28
	0x0223275C LDR W9, [X0 + 0xE0]
	0x02232760 LDR X25, [X8]
	0x02232764 CBNZ W9, 0x223276C
	0x02232768 BL 0x1C16DFC
	0x0223276C MOV X0, X25
	0x02232770 MOV X1, X31
	0x02232774 BL 0x338C698
	0x02232778 LDUR X28, [X29 - 0x28]
	0x0223277C CBZ X0, 0x223283C
	0x02232780 LDR X8, [X0]
	0x02232784 LDP X9, X1, [X8 + 0x168]
	0x02232788 BLR X9
	0x0223278C ADRP X8, 0x1EEA000
	0x02232790 LDR X8, [X8 + 0x280]
	0x02232794 MOV X1, X0
	0x02232798 MOV X2, X23
	0x0223279C MOV X3, X31
	0x022327A0 LDR X8, [X8]
	0x022327A4 MOV X0, X8

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+56], X23
	004 Move [X31+64], X22
	005 Move [X31+72], X21
	006 Move [X31+80], X20
	007 Move [X31+88], X19
	008 Move X8, [X1+56]
	009 Move X19, X1
	010 Move X20, X0
	011 Compare X8, 0
	012 JumpIfNotEqual {30}
	013 Move X0, 0x1EEA000
	014 Move X0, [X0+3856]
	015 Call 0x1C17CF4
	016 Move X0, 0x1EEA000
	017 Move X0, [X0+3864]
	018 Call 0x1C17CF4
	019 Move X0, 0x1EEA000
	020 Move X0, [X0+3872]
	021 Call 0x1C17CF4
	022 Move X0, 0x1EEA000
	023 Move X0, [X0+3888]
	024 Call 0x1C17CF4
	025 Move X8, [X19+56]
	026 Compare X8, 0
	027 JumpIfNotEqual {30}
	028 Move X0, X19
	029 Call 0x1C5D6E0
	030 Move X0, X20
	031 Move X1, X31
	032 Move [X31+24], X31
	033 Move [X31+32], X31
	034 Move [X31+40], X31
	035 Call PlayerInput.get_devices, X0
	036 Move X8, 0x1EEA000
	037 Move X8, [X8+3888]
	038 Move [X31+8], X0
	039 Move [X31+16], X1
	040 Add X0, X31, 8
	041 Move X9, [X8]
	042 Add X8, X31, 24
	043 Move X1, X9
	044 Call ReadOnlyArray`1<Object>.GetEnumerator, X0
	045 Move X22, 0x1EEA000
	046 Move X23, 0x1EEA000
	047 Move X22, [X22+3864]
	048 Move X23, [X23+3872]
	049 Move X1, [X22]
	050 Add X0, X31, 24
	051 Call Enumerator<Object>.MoveNext, X0
	052 Move TEMP, X0
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfNotEqual {94}
	056 Move X1, [X23]
	057 Add X0, X31, 24
	058 Call Enumerator<Object>.get_Current, X0
	059 Move X8, [X19+56]
	060 Move X20, X0
	061 Move X1, [X8]
	062 Move W8, [X1+309]
	063 Move TEMP, X8
	064 And TEMP, TEMP, 1
	065 Compare TEMP, 1
	066 JumpIfEqual {70}
	067 Move X0, X1
	068 Call 0x1C5D684
	069 Move X1, X0
	070 Move X0, X20
	071 Call 0x1C17E00
	072 Move X8, [X19+56]
	073 Move X20, X0
	074 Move X21, [X8]
	075 Move W8, [X21+309]
	076 Move TEMP, X8
	077 And TEMP, TEMP, 1
	078 Compare TEMP, 1
	079 JumpIfEqual {83}
	080 Move X0, X21
	081 Call 0x1C5D684
	082 Move X21, X0
	083 Compare X20, 0
	084 JumpIfEqual {49}
	085 Move X0, X20
	086 Move X1, X21
	087 Call 0x1C17E00
	088 Move X19, X0
	089 Compare X0, 0
	090 JumpIfNotEqual {95}
	091 Move X0, X20
	092 Move X1, X21
	093 Call 0x1C181E0
	094 Move X19, X31
	095 Move X8, 0x1EEA000
	096 Move X8, [X8+3856]
	097 Add X0, X31, 24
	098 Move X1, [X8]
	099 Call Enumerator<Object>.Dispose, X0
	100 Move X0, X19
	101 Move X20, [X31+80]
	102 Move X19, [X31+88]
	103 Move X22, [X31+64]
	104 Move X21, [X31+72]
	105 Move X30, [X31+48]
	106 Move X23, [X31+56]
	107 Add X31, X31, 96
	108 Return X0
	109 Move X19, X0
	110 NotImplemented "Instruction CMP not yet implemented."
	111 Move X0, X19
	112 Call 0x3EB2AD0
	113 Move X20, [X0]
	114 Call 0x3EB2AE0
	115 Move X8, 0x1EEA000
	116 Move X8, [X8+3856]
	117 Add X0, X31, 24
	118 Move X1, [X8]
	119 Call Enumerator<Object>.Dispose, X0
	120 Compare X20, 0
	121 JumpIfNotEqual {124}
	122 Move X19, X31
	123 Move X20, X31
	124 Move X0, X20
	125 Call 0x1C17F18
	126 Move X19, X0
	127 Move X8, 0x1EEA000
	128 Move X8, [X8+3856]
	129 Move X1, [X8]
	130 Add X0, X31, 24
	131 Call Enumerator<Object>.Dispose, X0
	132 Compare X20, 0
	133 JumpIfNotEqual {136}
	134 Move X0, X19
	135 Call 0x1D2D690
	136 Move X0, X20
	137 Call 0x1C17F18
	138 Call 0x1991590

Method: System.Void ActivateInput()

Disassembly:
	0x037D3A9C BL 0x1C16CF4
	0x037D3AA0 MOVZ W8, 0x1
	0x037D3AA4 STRB W8, [X20 + 0x259]
	0x037D3AA8 LDR X0, [X19]
	0x037D3AAC ADRP X20, 0x975000
	0x037D3AB0 LDR W8, [X0 + 0xE0]
	0x037D3AB4 LDR X20, [X20 + 0x9F0]
	0x037D3AB8 CBNZ W8, 0x37D3AC4
	0x037D3ABC BL 0x1C16DFC
	0x037D3AC0 LDR X0, [X19]
	0x037D3AC4 LDR X8, [X0 + 0xB8]
	0x037D3AC8 LDR X4, [X20]
	0x037D3ACC ADD X0, X31, 0x0
	0x037D3AD0 MOV W2, W31
	0x037D3AD4 LDR X1, [X8 + 0x8]
	0x037D3AD8 LDR W3, [X8]
	0x037D3ADC STP X31, X31, [X31]
	0x037D3AE0 BL 0x24FD82C
	0x037D3AE4 LDP X0, X1, [X31]
	0x037D3AE8 LDP X20, X19, [X31 + 0x20]
	0x037D3AEC LDR X30, [X31 + 0x10]
	0x037D3AF0 ADD X31, X31, 0x30
	0x037D3AF4 RET
	0x037D3AF8 STP X30, X21, [X31 - 0x20]!
	0x037D3AFC STP X20, X19, [X31 + 0x10]
	0x037D3B00 ADRP X20, 0xC0E000
	0x037D3B04 ADRP X19, 0x975000
	0x037D3B08 LDRB W8, [X20 + 0x25A]
	0x037D3B0C LDR X19, [X19 + 0x8F8]
	0x037D3B10 TBNZ X8, 0x0, 0x37D3B34
	0x037D3B14 ADRP X0, 0x920000
	0x037D3B18 LDR X0, [X0 + 0x598]
	0x037D3B1C BL 0x1C16CF4
	0x037D3B20 ADRP X0, 0x975000
	0x037D3B24 LDR X0, [X0 + 0x8F8]
	0x037D3B28 BL 0x1C16CF4
	0x037D3B2C MOVZ W8, 0x1
	0x037D3B30 STRB W8, [X20 + 0x25A]
	0x037D3B34 LDR X0, [X19]
	0x037D3B38 LDR W8, [X0 + 0xE0]
	0x037D3B3C CBNZ W8, 0x37D3B48
	0x037D3B40 BL 0x1C16DFC
	0x037D3B44 LDR X0, [X19]
	0x037D3B48 LDR X8, [X0 + 0xB8]
	0x037D3B4C LDR W8, [X8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xC0F000
	005 Move W8, [X20+603]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x921000
	012 Move X0, [X0+1432]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+603], W8
	016 Move X0, [X19+136]
	017 Move W8, 1
	018 Move [X19+148], W8
	019 Compare X0, 0
	020 JumpIfNotEqual {47}
	021 Move X8, 0x921000
	022 Move X8, [X8+1432]
	023 Move X20, [X19+32]
	024 Move X0, [X8]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X0, X20
	030 Move X1, X31
	031 Move X2, X31
	032 Call Object.op_Inequality, X0, X1
	033 Move TEMP, X0
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfNotEqual {44}
	037 Move X0, [X19+104]
	038 Move X1, X31
	039 Call String.IsNullOrEmpty, X0
	040 Move TEMP, X0
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfNotEqual {57}
	044 Move X0, [X19+136]
	045 Compare X0, 0
	046 JumpIfEqual {53}
	047 Move X20, [X31+16]
	048 Move X19, [X31+24]
	049 Move X1, X31
	050 Move X30, [X31+32]
	051 Call InputActionMap.Enable, X0
	052 Return 
	053 Move X20, [X31+16]
	054 Move X19, [X31+24]
	055 Move X30, [X31+32]
	056 Return 
	057 Move X1, [X19+104]
	058 Move X0, X19
	059 Move X20, [X31+16]
	060 Move X19, [X31+24]
	061 Move X30, [X31+32]
	062 Call PlayerInput.SwitchCurrentActionMap, X0, X1
	063 Return 

Method: System.Void DeactivateInput()

Disassembly:
	0x037D4D78 MOV X1, X0
	0x037D4D7C MOV X0, X19
	0x037D4D80 BL 0x1C16DEC
	0x037D4D84 SUB X31, X31, 0x60
	0x037D4D88 STP X30, X23, [X31 + 0x30]
	0x037D4D8C STP X22, X21, [X31 + 0x40]
	0x037D4D90 STP X20, X19, [X31 + 0x50]
	0x037D4D94 ADRP X20, 0xC0D000
	0x037D4D98 LDRB W8, [X20 + 0x265]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+136]
	005 Compare X0, 0
	006 JumpIfEqual {9}
	007 Move X1, X31
	008 Call InputActionMap.Disable, X0
	009 Move [X19+148], W31
	010 Move X30, [X31+16]
	011 Move X19, [X31+24]
	012 Return 

Method: System.Void PassivateInput()

Disassembly:
	0x037D4D9C MOV X19, X0
	0x037D4DA0 TBNZ X8, 0x0, 0x37D4DF4
	0x037D4DA4 ADRP X0, 0x923000
	0x037D4DA8 LDR X0, [X0 + 0x3D8]
	0x037D4DAC BL 0x1C16CF4
	0x037D4DB0 ADRP X0, 0x971000
	0x037D4DB4 LDR X0, [X0 + 0x18]
	0x037D4DB8 BL 0x1C16CF4
	0x037D4DBC ADRP X0, 0x971000

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+136]
	005 Compare X0, 0
	006 JumpIfEqual {9}
	007 Move X1, X31
	008 Call InputActionMap.Disable, X0
	009 Move [X19+148], W31
	010 Move X30, [X31+16]
	011 Move X19, [X31+24]
	012 Return 

Method: System.Boolean SwitchCurrentControlScheme(UnityEngine.InputSystem.InputDevice[] devices)

Disassembly:
	0x037D4DC0 LDR X0, [X0 + 0x20]
	0x037D4DC4 BL 0x1C16CF4
	0x037D4DC8 ADRP X0, 0x971000
	0x037D4DCC LDR X0, [X0 + 0x28]
	0x037D4DD0 BL 0x1C16CF4
	0x037D4DD4 ADRP X0, 0x974000
	0x037D4DD8 LDR X0, [X0 + 0xA80]
	0x037D4DDC BL 0x1C16CF4
	0x037D4DE0 ADRP X0, 0x971000
	0x037D4DE4 LDR X0, [X0 + 0x10]
	0x037D4DE8 BL 0x1C16CF4
	0x037D4DEC MOVZ W8, 0x1
	0x037D4DF0 STRB W8, [X20 + 0x265]
	0x037D4DF4 STP X31, X31, [X31 + 0x18]
	0x037D4DF8 STR X31, [X31 + 0x28]
	0x037D4DFC LDR X8, [X19 + 0xA8]
	0x037D4E00 CBNZ X8, 0x37D4E34
	0x037D4E04 ADRP X8, 0x923000
	0x037D4E08 LDR X8, [X8 + 0x3D8]
	0x037D4E0C LDR X0, [X8]
	0x037D4E10 BL 0x1C16F10
	0x037D4E14 ADRP X8, 0x974000
	0x037D4E18 LDR X8, [X8 + 0xA80]
	0x037D4E1C MOV X1, X19
	0x037D4E20 MOV X3, X31
	0x037D4E24 MOV X20, X0
	0x037D4E28 LDR X2, [X8]
	0x037D4E2C BL 0x2A719B8
	0x037D4E30 STR X20, [X19 + 0xA8]
	0x037D4E34 LDR X0, [X19 + 0x20]
	0x037D4E38 CBZ X0, 0x37D4ED0
	0x037D4E3C ADRP X23, 0x971000
	0x037D4E40 ADRP X21, 0x971000
	0x037D4E44 ADRP X22, 0x971000
	0x037D4E48 ADRP X20, 0x971000
	0x037D4E4C LDR X23, [X23 + 0x10]
	0x037D4E50 LDR X21, [X21 + 0x20]
	0x037D4E54 LDR X22, [X22 + 0x28]
	0x037D4E58 LDR X20, [X20 + 0x18]
	0x037D4E5C MOV X1, X31
	0x037D4E60 BL 0x3736750
	0x037D4E64 LDR X9, [X23]
	0x037D4E68 STP X0, X1, [X31 + 0x8]
	0x037D4E6C ADD X8, X31, 0x18
	0x037D4E70 ADD X0, X31, 0x8
	0x037D4E74 MOV X1, X9
	0x037D4E78 BL 0x24FD990
	0x037D4E7C LDR X1, [X21]
	0x037D4E80 ADD X0, X31, 0x18
	0x037D4E84 BL 0x2BC496C
	0x037D4E88 TBZ X0, 0x0, 0x37D4EAC
	0x037D4E8C LDR X1, [X22]
	0x037D4E90 ADD X0, X31, 0x18
	0x037D4E94 BL 0x2BC4998
	0x037D4E98 CBZ X0, 0x37D4ECC
	0x037D4E9C LDR X1, [X19 + 0xA8]
	0x037D4EA0 MOV X2, X31
	0x037D4EA4 BL 0x373A448
	0x037D4EA8 B 0x37D4E7C
	0x037D4EAC LDR X1, [X20]
	0x037D4EB0 ADD X0, X31, 0x18
	0x037D4EB4 BL 0x2BC4968
	0x037D4EB8 LDP X20, X19, [X31 + 0x50]
	0x037D4EBC LDP X22, X21, [X31 + 0x40]
	0x037D4EC0 LDP X30, X23, [X31 + 0x30]
	0x037D4EC4 ADD X31, X31, 0x60
	0x037D4EC8 RET
	0x037D4ECC BL 0x1C16F20
	0x037D4ED0 BL 0x1C16F20
	0x037D4ED4 B 0x37D4EE0
	0x037D4ED8 B 0x37D4EE0
	0x037D4EDC B 0x37D4EE0
	0x037D4EE0 MOV X19, X0
	0x037D4EE4 CMP W1, 0x1
	0x037D4EE8 B.NE 0x37D4F1C
	0x037D4EEC MOV X0, X19
	0x037D4EF0 BL 0x3EB1AD0
	0x037D4EF4 LDR X20, [X0]
	0x037D4EF8 BL 0x3EB1AE0
	0x037D4EFC ADRP X8, 0x971000
	0x037D4F00 LDR X8, [X8 + 0x18]
	0x037D4F04 ADD X0, X31, 0x18
	0x037D4F08 LDR X1, [X8]
	0x037D4F0C BL 0x2BC4968
	0x037D4F10 CBZ X20, 0x37D4EB8
	0x037D4F14 MOV X0, X20
	0x037D4F18 BL 0x1C16F18
	0x037D4F1C MOV X20, X31
	0x037D4F20 B 0x37D4F28
	0x037D4F24 MOV X19, X0
	0x037D4F28 ADRP X8, 0x971000
	0x037D4F2C LDR X8, [X8 + 0x18]
	0x037D4F30 LDR X1, [X8]
	0x037D4F34 ADD X0, X31, 0x18
	0x037D4F38 BL 0x2BC4968
	0x037D4F3C CBNZ X20, 0x37D4F48
	0x037D4F40 MOV X0, X19
	0x037D4F44 BL 0x1D2C690
	0x037D4F48 MOV X0, X20
	0x037D4F4C BL 0x1C16F18
	0x037D4F50 BL 0x1990590
	0x037D4F54 SUB X31, X31, 0x60
	0x037D4F58 STP X30, X27, [X31 + 0x10]
	0x037D4F5C STP X26, X25, [X31 + 0x20]
	0x037D4F60 STP X24, X23, [X31 + 0x30]
	0x037D4F64 STP X22, X21, [X31 + 0x40]
	0x037D4F68 STP X20, X19, [X31 + 0x50]
	0x037D4F6C ADRP X21, 0xC0D000
	0x037D4F70 ADRP X19, 0x91F000
	0x037D4F74 LDRB W8, [X21 + 0x268]
	0x037D4F78 LDR X19, [X19 + 0x598]
	0x037D4F7C MOV X20, X0
	0x037D4F80 TBNZ X8, 0x0, 0x37D5004

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+96], X30
	003 Move [X31+104], X21
	004 Move [X31+112], X20
	005 Move [X31+120], X19
	006 Move X21, 0xC0E000
	007 Move W8, [X21+604]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {28}
	014 Move X0, 0x975000
	015 Move X0, [X0+2592]
	016 Call 0x1C17CF4
	017 Move X0, 0x972000
	018 Move X0, [X0+2488]
	019 Call 0x1C17CF4
	020 Move X0, 0x975000
	021 Move X0, [X0+2352]
	022 Call 0x1C17CF4
	023 Move X0, 0x920000
	024 Move X0, [X0+1432]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X21+604], W8
	028 NotImplemented "Instruction MOVI not yet implemented."
	029 Move [X31+64], V0
	030 Move [X31+72], V0
	031 Compare X19, 0
	032 JumpIfEqual {99}
	033 Move X21, 0x920000
	034 Move X21, [X21+1432]
	035 Move X0, X20
	036 Call PlayerInput.get_actions, X0
	037 Move X8, [X21]
	038 Move X21, X0
	039 Move W9, [X8+224]
	040 Compare W9, 0
	041 JumpIfNotEqual {44}
	042 Move X0, X8
	043 Call 0x1C17DFC
	044 Move X0, X21
	045 Move X1, X31
	046 Move X2, X31
	047 Call Object.op_Equality, X0, X1
	048 Move TEMP, X0
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfEqual {111}
	052 Move X0, X20
	053 Call PlayerInput.get_actions, X0
	054 Compare X0, 0
	055 JumpIfEqual {129}
	056 Move X21, 0x975000
	057 Move X21, [X21+2592]
	058 Move X1, X31
	059 Call InputActionAsset.get_controlSchemes, X0
	060 Move X5, [X21]
	061 Move X2, X0
	062 Move X3, X1
	063 Add X8, X31, 32
	064 Move X0, X19
	065 Move X1, X2
	066 Move X2, X3
	067 Move X3, X31
	068 Move W4, W31
	069 Call InputControlScheme.FindControlSchemeForDevices, X0, X1, X2, X3
	070 Move V0, [X31+32]
	071 Move V1, [X31+48]
	072 Move [X31+64], V0
	073 Move [X31+72], V1
	074 Move W21, [X31+64]
	075 Compare W21, 0
	076 JumpIfEqual {91}
	077 Move X8, 0x975000
	078 Move X8, [X8+2352]
	079 Add X0, X31, 64
	080 Move X1, [X8]
	081 Add X8, X31, 8
	082 Call Nullable`1<InputControlScheme>.get_Value, X0
	083 NotImplemented "Instruction LDUR not yet implemented."
	084 Move X8, [X31+24]
	085 Add X1, X31, 32
	086 Move X0, X20
	087 Move X2, X19
	088 Move [X31+2], V0
	089 Move [X31+48], X8
	090 Call PlayerInput.SwitchControlSchemeInternal, X0, X1, X2
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Move X20, [X31+112]
	093 Move X19, [X31+120]
	094 Move X30, [X31+96]
	095 Move X21, [X31+104]
	096 NotImplemented "Instruction CSET not yet implemented."
	097 Add X31, X31, 128
	098 Return X0
	099 Move X0, 0x925000
	100 Move X0, [X0+1320]
	101 Call 0x1C17D08
	102 Call 0x1C17F10
	103 Move X19, X0
	104 Move X0, 0x948000
	105 Move X0, [X0+3568]
	106 Call 0x1C17D08
	107 Move X1, X0
	108 Move X0, X19
	109 Move X2, X31
	110 Call ArgumentNullException..ctor, X0, X1
	111 Move X0, 0x920000
	112 Move X0, [X0+1456]
	113 Call 0x1C17D08
	114 Call 0x1C17F10
	115 Move X19, X0
	116 Move X0, 0x975000
	117 Move X0, [X0+2600]
	118 Call 0x1C17D08
	119 Move X1, X0
	120 Move X0, X19
	121 Move X2, X31
	122 Call InvalidOperationException..ctor, X0, X1
	123 Move X0, 0x975000
	124 Move X0, [X0+2608]
	125 Call 0x1C17D08
	126 Move X1, X0
	127 Move X0, X19
	128 Call 0x1C17DEC
	129 Call 0x1C17F20

Method: System.Void SwitchCurrentControlScheme(System.String controlScheme, UnityEngine.InputSystem.InputDevice[] devices)

Disassembly:
	0x037D5370 STRB W8, [X20 + 0x266]
	0x037D5374 STP X31, X31, [X31 + 0x18]
	0x037D5378 STR X31, [X31 + 0x28]
	0x037D537C LDR X8, [X19 + 0xA8]
	0x037D5380 CBZ X8, 0x37D5408
	0x037D5384 LDR X0, [X19 + 0x20]
	0x037D5388 CBZ X0, 0x37D5420
	0x037D538C ADRP X23, 0x970000
	0x037D5390 ADRP X21, 0x970000
	0x037D5394 ADRP X22, 0x970000
	0x037D5398 ADRP X20, 0x970000
	0x037D539C LDR X23, [X23 + 0x10]
	0x037D53A0 LDR X21, [X21 + 0x20]
	0x037D53A4 LDR X22, [X22 + 0x28]
	0x037D53A8 LDR X20, [X20 + 0x18]
	0x037D53AC MOV X1, X31
	0x037D53B0 BL 0x3736750
	0x037D53B4 LDR X9, [X23]
	0x037D53B8 STP X0, X1, [X31 + 0x8]
	0x037D53BC ADD X8, X31, 0x18
	0x037D53C0 ADD X0, X31, 0x8
	0x037D53C4 MOV X1, X9
	0x037D53C8 BL 0x24FD990
	0x037D53CC LDR X1, [X21]
	0x037D53D0 ADD X0, X31, 0x18
	0x037D53D4 BL 0x2BC496C
	0x037D53D8 TBZ X0, 0x0, 0x37D53FC
	0x037D53DC LDR X1, [X22]
	0x037D53E0 ADD X0, X31, 0x18
	0x037D53E4 BL 0x2BC4998
	0x037D53E8 CBZ X0, 0x37D541C
	0x037D53EC LDR X1, [X19 + 0xA8]
	0x037D53F0 MOV X2, X31
	0x037D53F4 BL 0x373A4A0
	0x037D53F8 B 0x37D53CC
	0x037D53FC LDR X1, [X20]
	0x037D5400 ADD X0, X31, 0x18
	0x037D5404 BL 0x2BC4968
	0x037D5408 LDP X20, X19, [X31 + 0x50]
	0x037D540C LDP X22, X21, [X31 + 0x40]
	0x037D5410 LDP X30, X23, [X31 + 0x30]
	0x037D5414 ADD X31, X31, 0x60
	0x037D5418 RET
	0x037D541C BL 0x1C16F20
	0x037D5420 BL 0x1C16F20
	0x037D5424 B 0x37D5430
	0x037D5428 B 0x37D5430
	0x037D542C B 0x37D5430
	0x037D5430 MOV X19, X0
	0x037D5434 CMP W1, 0x1
	0x037D5438 B.NE 0x37D546C
	0x037D543C MOV X0, X19
	0x037D5440 BL 0x3EB1AD0

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+40], X21
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move X21, X1
	007 Move X20, X0
	008 Move X0, X1
	009 Move X1, X31
	010 Move X19, X2
	011 Move [X31+8], X31
	012 Move [X31+16], X31
	013 Move [X31+24], X31
	014 Call String.IsNullOrEmpty, X0
	015 Move TEMP, X0
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {37}
	019 Compare X19, 0
	020 JumpIfEqual {44}
	021 Move W8, [X20+160]
	022 Add X0, X31, 0
	023 Add X2, X31, 8
	024 Move X1, X21
	025 Move [X31], W8
	026 Call InputUser.FindControlScheme, X0, X1, X2
	027 Add X1, X31, 8
	028 Move X0, X20
	029 Move X2, X19
	030 Call PlayerInput.SwitchControlSchemeInternal, X0, X1, X2
	031 Move X20, [X31+48]
	032 Move X19, [X31+56]
	033 Move X30, [X31+32]
	034 Move X21, [X31+40]
	035 Add X31, X31, 64
	036 Return 
	037 Move X0, 0x924000
	038 Move X0, [X0+1320]
	039 Call 0x1C17D08
	040 Call 0x1C17F10
	041 Move X19, X0
	042 Move X0, 0x971000
	043 Move X0, [X0+2512]
	044 Move X0, 0x924000
	045 Move X0, [X0+1320]
	046 Call 0x1C17D08
	047 Call 0x1C17F10
	048 Move X19, X0
	049 Move X0, 0x947000
	050 Move X0, [X0+3568]
	051 Call 0x1C17D08
	052 Move X1, X0
	053 Move X0, X19
	054 Move X2, X31
	055 Call ArgumentNullException..ctor, X0, X1
	056 Move X0, 0x974000
	057 Move X0, [X0+2624]
	058 Call 0x1C17D08
	059 Move X1, X0
	060 Move X0, X19
	061 Call 0x1C17DEC

Method: System.Void SwitchCurrentActionMap(System.String mapNameOrId)

Disassembly:
	0x037D4C10 LDR X25, [X25 + 0x598]
	0x037D4C14 MOV X20, X4
	0x037D4C18 MOV W22, W3
	0x037D4C1C MOV X21, X2
	0x037D4C20 MOV W23, W1
	0x037D4C24 MOV X19, X0
	0x037D4C28 TBNZ X8, 0x0, 0x37D4C58
	0x037D4C2C ADRP X0, 0x974000
	0x037D4C30 LDR X0, [X0 + 0x1E8]
	0x037D4C34 BL 0x1C16CF4
	0x037D4C38 ADRP X0, 0x91F000
	0x037D4C3C LDR X0, [X0 + 0x598]
	0x037D4C40 BL 0x1C16CF4
	0x037D4C44 ADRP X0, 0x974000
	0x037D4C48 LDR X0, [X0 + 0x8F8]
	0x037D4C4C BL 0x1C16CF4
	0x037D4C50 MOVZ W8, 0x1
	0x037D4C54 STRB W8, [X24 + 0x261]
	0x037D4C58 LDR X0, [X25]
	0x037D4C5C LDR W8, [X0 + 0xE0]
	0x037D4C60 CBNZ W8, 0x37D4C68
	0x037D4C64 BL 0x1C16DFC
	0x037D4C68 MOV X0, X19
	0x037D4C6C MOV X1, X31
	0x037D4C70 MOV X2, X31
	0x037D4C74 BL 0x3C3883C
	0x037D4C78 TBNZ X0, 0x0, 0x37D4D3C
	0x037D4C7C ADRP X24, 0x974000
	0x037D4C80 LDR X24, [X24 + 0x8F8]
	0x037D4C84 LDR X0, [X24]
	0x037D4C88 LDR W8, [X0 + 0xE0]
	0x037D4C8C CBNZ W8, 0x37D4C98
	0x037D4C90 BL 0x1C16DFC
	0x037D4C94 LDR X0, [X24]
	0x037D4C98 LDR X8, [X0 + 0xB8]
	0x037D4C9C STP W23, W22, [X8 + 0x28]
	0x037D4CA0 STR X21, [X8 + 0x30]
	0x037D4CA4 CBZ X20, 0x37D4D14
	0x037D4CA8 LDR X8, [X20 + 0x18]
	0x037D4CAC CMP W8, 0x1
	0x037D4CB0 B.LT 0x37D4D14
	0x037D4CB4 ADRP X23, 0x974000
	0x037D4CB8 LDR X23, [X23 + 0x1E8]
	0x037D4CBC MOV X21, X31
	0x037D4CC0 AND X8, X8, 0x0
	0x037D4CC4 ADD X22, X20, 0x20
	0x037D4CC8 LDR W9, [X0 + 0xE0]
	0x037D4CCC CBNZ W9, 0x37D4CD8
	0x037D4CD0 BL 0x1C16DFC
	0x037D4CD4 LDR W8, [X20 + 0x18]
	0x037D4CD8 CMP X21, W8, UXTW
	0x037D4CDC B.CS 0x37D4D38
	0x037D4CE0 LDR X8, [X24]
	0x037D4CE4 LDR X2, [X22, X21, LSL #3]
	0x037D4CE8 LDR X4, [X23]
	0x037D4CEC MOVZ W3, 0xA
	0x037D4CF0 LDR X8, [X8 + 0xB8]
	0x037D4CF4 ADD X0, X8, 0x20
	0x037D4CF8 ADD X1, X8, 0x18
	0x037D4CFC BL 0x2174728
	0x037D4D00 LDR W8, [X20 + 0x18]
	0x037D4D04 LDR X0, [X24]
	0x037D4D08 ADD X21, X21, 0x1
	0x037D4D0C CMP X21, W8, SXTW
	0x037D4D10 B.LT 0x37D4CC8
	0x037D4D14 LDR W8, [X0 + 0xE0]
	0x037D4D18 CBNZ W8, 0x37D4D20
	0x037D4D1C BL 0x1C16DFC
	0x037D4D20 MOV X0, X19
	0x037D4D24 LDP X20, X19, [X31 + 0x30]
	0x037D4D28 LDP X22, X21, [X31 + 0x20]
	0x037D4D2C LDP X24, X23, [X31 + 0x10]
	0x037D4D30 LDP X30, X25, [X31], #0x40
	0x037D4D34 B 0x37D48B4
	0x037D4D38 BL 0x1C16F28
	0x037D4D3C ADRP X0, 0x924000
	0x037D4D40 LDR X0, [X0 + 0x528]
	0x037D4D44 BL 0x1C16D08
	0x037D4D48 BL 0x1C16F10
	0x037D4D4C MOV X19, X0
	0x037D4D50 ADRP X0, 0x92A000
	0x037D4D54 LDR X0, [X0 + 0xF10]
	0x037D4D58 BL 0x1C16D08
	0x037D4D5C MOV X1, X0
	0x037D4D60 MOV X0, X19
	0x037D4D64 MOV X2, X31
	0x037D4D68 BL 0x330E100
	0x037D4D6C ADRP X0, 0x974000
	0x037D4D70 LDR X0, [X0 + 0xA78]
	0x037D4D74 BL 0x1C16D08

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xC0E000
	006 Move W8, [X21+605]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {33}
	013 Move X0, 0x920000
	014 Move X0, [X0+2600]
	015 Call 0x1C17CF4
	016 Move X0, 0x920000
	017 Move X0, [X0+1432]
	018 Call 0x1C17CF4
	019 Move X0, 0x975000
	020 Move X0, [X0+2560]
	021 Call 0x1C17CF4
	022 Move X0, 0x975000
	023 Move X0, [X0+2568]
	024 Call 0x1C17CF4
	025 Move X0, 0x975000
	026 Move X0, [X0+2576]
	027 Call 0x1C17CF4
	028 Move X0, 0x975000
	029 Move X0, [X0+2584]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X21+605], W8
	033 Move W8, [X19+149]
	034 Compare W8, 0
	035 JumpIfEqual {56}
	036 Move X8, 0x920000
	037 Move X8, [X8+1432]
	038 Move X21, [X19+32]
	039 Move X0, [X8]
	040 Move W8, [X0+224]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Move X0, X21
	045 Move X1, X31
	046 Move X2, X31
	047 Call Object.op_Equality, X0, X1
	048 Move TEMP, X0
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfNotEqual {83}
	052 Move X8, 0x975000
	053 Move X9, 0x975000
	054 Move X8, [X8+2576]
	055 Move X9, [X9+2560]
	056 Move X8, 0x975000
	057 Move X9, 0x975000
	058 Move X8, [X8+2576]
	059 Move X9, [X9+2584]
	060 Move X0, [X8]
	061 Move X2, [X9]
	062 Move X1, X20
	063 Move X3, X31
	064 Call String.Concat, X0, X1, X2
	065 Move X8, 0x920000
	066 Move X8, [X8+2600]
	067 Move X20, X0
	068 Move X8, [X8]
	069 Move W9, [X8+224]
	070 Compare W9, 0
	071 JumpIfNotEqual {74}
	072 Move X0, X8
	073 Call 0x1C17DFC
	074 Move X0, X20
	075 Move X1, X19
	076 Move X20, [X31+16]
	077 Move X19, [X31+24]
	078 Move X2, X31
	079 Move X30, [X31+32]
	080 Move X21, [X31+40]
	081 Call Debug.LogError, X0, X1
	082 Return 
	083 Move X0, [X19+32]
	084 Compare X0, 0
	085 JumpIfEqual {107}
	086 Move X1, X20
	087 Move W2, W31
	088 Move X3, X31
	089 Call InputActionAsset.FindActionMap, X0, X1, X2
	090 Compare X0, 0
	091 JumpIfEqual {100}
	092 Move X1, X0
	093 Move X0, X19
	094 Move X20, [X31+16]
	095 Move X19, [X31+24]
	096 Move X30, [X31+32]
	097 Move X21, [X31+40]
	098 Call PlayerInput.set_currentActionMap, X0, X1
	099 Return 
	100 Move X8, 0x975000
	101 Move X2, [X19+32]
	102 Move X8, [X8+2568]
	103 Move X1, X20
	104 Move X3, X31
	105 Move X0, [X8]
	106 Call String.Format, X0, X1, X2
	107 Call 0x1C17F20

Method: UnityEngine.InputSystem.PlayerInput GetPlayerByIndex(System.Int32 playerIndex)

Disassembly:
	0x037D54F8 LDR X0, [X0 + 0xA98]
	0x037D54FC BL 0x1C16CF4
	0x037D5500 ADRP X0, 0x973000
	0x037D5504 LDR X0, [X0 + 0xAA0]
	0x037D5508 BL 0x1C16CF4
	0x037D550C MOVZ W8, 0x1
	0x037D5510 STRB W8, [X22 + 0x267]
	0x037D5514 LDRB W8, [X19 + 0x94]
	0x037D5518 CBZ W8, 0x37D567C
	0x037D551C LDR W8, [X19 + 0x28]
	0x037D5520 CMP W8, 0x2
	0x037D5524 B.CC 0x37D556C
	0x037D5528 CMP W8, 0x3
	0x037D552C B.NE 0x37D567C
	0x037D5530 ADRP X8, 0x973000
	0x037D5534 ADRP X9, 0x970000
	0x037D5538 LDR X8, [X8 + 0xAA0]
	0x037D553C LDR X9, [X9 + 0xC38]
	0x037D5540 ADD X0, X19, 0x1A0
	0x037D5544 MOV X1, X21
	0x037D5548 LDR X3, [X8]
	0x037D554C LDR X5, [X9]
	0x037D5550 MOV X2, X20
	0x037D5554 LDP X20, X19, [X31 + 0x50]
	0x037D5558 LDP X22, X21, [X31 + 0x40]
	0x037D555C LDR X30, [X31 + 0x30]
	0x037D5560 MOV X4, X31
	0x037D5564 ADD X31, X31, 0x60
	0x037D5568 B 0x21AD890
	0x037D556C ADD X0, X31, 0x20
	0x037D5570 MOV X1, X31
	0x037D5574 BL 0x3735E5C
	0x037D5578 MOV X20, X0
	0x037D557C ADD X0, X31, 0x20
	0x037D5580 MOV X1, X31
	0x037D5584 BL 0x3735DEC
	0x037D5588 TBZ X0, 0x0, 0x37D5644
	0x037D558C LDR X0, [X19 + 0x98]
	0x037D5590 CBNZ X0, 0x37D55A0
	0x037D5594 MOV X0, X19
	0x037D5598 BL 0x37D4F54
	0x037D559C LDR X0, [X19 + 0x98]
	0x037D55A0 CBZ X20, 0x37D5690
	0x037D55A4 CBZ X0, 0x37D5690
	0x037D55A8 ADRP X8, 0x94E000
	0x037D55AC LDR X1, [X20 + 0x28]
	0x037D55B0 LDR X8, [X8 + 0xAF0]
	0x037D55B4 LDR X2, [X8]
	0x037D55B8 BL 0x2AA5018
	0x037D55BC LDR X21, [X19 + 0x80]
	0x037D55C0 MOV X20, X0
	0x037D55C4 CBNZ X21, 0x37D55E8
	0x037D55C8 ADRP X8, 0x973000
	0x037D55CC LDR X8, [X8 + 0xA90]
	0x037D55D0 LDR X0, [X8]
	0x037D55D4 BL 0x1C16F10
	0x037D55D8 MOV X1, X31
	0x037D55DC MOV X21, X0
	0x037D55E0 BL 0x33BDD8C
	0x037D55E4 STR X21, [X19 + 0x80]
	0x037D55E8 ADRP X8, 0x973000
	0x037D55EC LDP X1, X2, [X31 + 0x20]
	0x037D55F0 LDR X8, [X8 + 0xA98]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xC0D000
	007 Move X20, 0x974000
	008 Move W8, [X21+606]
	009 Move X20, [X20+2296]
	010 Move W19, W0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x974000
	016 Move X0, [X0+2296]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+606], W8
	020 Move X0, [X20]
	021 Move W21, W31
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {27}
	025 Call 0x1C17DFC
	026 Move X0, [X20]
	027 Move X8, [X0+184]
	028 Move W8, [X8]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {35}
	033 Call 0x1C17DFC
	034 Move X0, [X20]
	035 Move X8, [X0+184]
	036 Move X8, [X8+8]
	037 Compare X8, 0
	038 JumpIfEqual {69}
	039 Move W9, [X8+24]
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move X22, W21
	042 Add X9, X8, X22
	043 Move X9, [X9+32]
	044 Compare X9, 0
	045 JumpIfEqual {69}
	046 Move W9, [X9+144]
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Add W21, W21, 1
	049 Move X0, X31
	050 Move W9, [X0+224]
	051 Compare W9, 0
	052 JumpIfNotEqual {59}
	053 Call 0x1C17DFC
	054 Move X8, [X20]
	055 Move X8, [X8+184]
	056 Move X8, [X8+8]
	057 Compare X8, 0
	058 JumpIfEqual {69}
	059 Move W9, [X8+24]
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Add X8, X8, X22
	062 Move X0, [X8+32]
	063 Move X20, [X31+32]
	064 Move X19, [X31+40]
	065 Move X22, [X31+16]
	066 Move X21, [X31+24]
	067 Move X30, [X31+48]
	068 Return X0
	069 Call 0x1C17F20
	070 Call 0x1C17F28

Method: UnityEngine.InputSystem.PlayerInput FindFirstPairedToDevice(UnityEngine.InputSystem.InputDevice device)

Disassembly:
	0x037D55F4 ADD X0, X31, 0x8
	0x037D55F8 STP X31, X31, [X31 + 0x8]
	0x037D55FC STR X31, [X31 + 0x18]
	0x037D5600 LDR X3, [X8]
	0x037D5604 BL 0x243D85C
	0x037D5608 CBZ X21, 0x37D5690
	0x037D560C LDR X8, [X31 + 0x18]
	0x037D5610 LDUR V0, [X31 + 0x8]
	0x037D5614 MOVZ W3, 0x1
	0x037D5618 MOV X0, X19
	0x037D561C STR X8, [X21 + 0x20]
	0x037D5620 STR V0, [X21 + 0x1]
	0x037D5624 LDR W8, [X19 + 0x28]
	0x037D5628 LDR X2, [X19 + 0x80]
	0x037D562C MOV X1, X20
	0x037D5630 CMP W8, 0x1
	0x037D5634 B.NE 0x37D5664
	0x037D5638 MOV X4, X31
	0x037D563C BL 0x3C33538
	0x037D5640 B 0x37D566C
	0x037D5644 ADD X0, X31, 0x20
	0x037D5648 MOV X1, X31
	0x037D564C BL 0x3735E24
	0x037D5650 TBZ X0, 0x0, 0x37D567C
	0x037D5654 CBZ X20, 0x37D5690
	0x037D5658 LDR W8, [X20 + 0x18]
	0x037D565C CBNZ W8, 0x37D567C
	0x037D5660 B 0x37D558C
	0x037D5664 MOV X4, X31
	0x037D5668 BL 0x3C334DC
	0x037D566C LDR X8, [X19 + 0x80]
	0x037D5670 CBZ X8, 0x37D5690
	0x037D5674 STP X31, X31, [X8 + 0x10]
	0x037D5678 STR X31, [X8 + 0x20]
	0x037D567C LDP X20, X19, [X31 + 0x50]
	0x037D5680 LDP X22, X21, [X31 + 0x40]
	0x037D5684 LDR X30, [X31 + 0x30]
	0x037D5688 ADD X31, X31, 0x60
	0x037D568C RET
	0x037D5690 BL 0x1C16F20
	0x037D5694 STR X30, [X31 - 0x40]!
	0x037D5698 STP X24, X23, [X31 + 0x10]
	0x037D569C STP X22, X21, [X31 + 0x20]
	0x037D56A0 STP X20, X19, [X31 + 0x30]
	0x037D56A4 ADRP X19, 0xC0C000
	0x037D56A8 LDRB W8, [X19 + 0x2E9]
	0x037D56AC MOV X21, X0
	0x037D56B0 TBNZ X8, 0x0, 0x37D56E0
	0x037D56B4 ADRP X0, 0x91E000
	0x037D56B8 LDR X0, [X0 + 0xE00]
	0x037D56BC BL 0x1C16CF4
	0x037D56C0 ADRP X0, 0x973000
	0x037D56C4 LDR X0, [X0 + 0x948]
	0x037D56C8 BL 0x1C16CF4
	0x037D56CC ADRP X0, 0x970000
	0x037D56D0 LDR X0, [X0 + 0x9B8]
	0x037D56D4 BL 0x1C16CF4
	0x037D56D8 MOVZ W8, 0x1
	0x037D56DC STRB W8, [X19 + 0x2E9]
	0x037D56E0 ADRP X22, 0x973000
	0x037D56E4 ADRP X23, 0x91E000
	0x037D56E8 LDR X22, [X22 + 0x948]
	0x037D56EC LDR X23, [X23 + 0xE00]
	0x037D56F0 MOV X0, X21
	0x037D56F4 BL 0x37DFF1C
	0x037D56F8 MOV W20, W0
	0x037D56FC BL 0x37E1A94
	0x037D5700 MOV X0, X31
	0x037D5704 BL 0x373BF80
	0x037D5708 MOV X19, X0
	0x037D570C SXTW X20, W20
	0x037D5710 MOVZ W24, 0xB8
	0x037D5714 LDR X8, [X22]
	0x037D5718 LDR X9, [X8 + 0xB8]
	0x037D571C LDR X8, [X9 + 0x20]
	0x037D5720 CBZ X8, 0x37D5838
	0x037D5724 LDR W10, [X8 + 0x18]
	0x037D5728 CMP W20, W10
	0x037D572C B.CS 0x37D583C
	0x037D5730 MADD X10, X20, X24, X8
	0x037D5734 LDR W10, [X10 + 0x48]
	0x037D5738 CMP W10, 0x0
	0x037D573C B.LE 0x37D5778
	0x037D5740 LDR X9, [X9 + 0x28]
	0x037D5744 CBZ X9, 0x37D5844
	0x037D5748 MADD X8, X20, X24, X8
	0x037D574C LDR W8, [X8 + 0x4C]
	0x037D5750 LDR W11, [X9 + 0x18]
	0x037D5754 ADD W8, W10, W8
	0x037D5758 SUB W8, W8, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0xC0D000
	008 Move W8, [X20+607]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x974000
	015 Move X0, [X0+2296]
	016 Call 0x1C17CF4
	017 Move X0, 0x970000
	018 Move X0, [X0+4040]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+607], W8
	022 Compare X19, 0
	023 JumpIfEqual {87}
	024 Move X21, 0x974000
	025 Move X22, 0x970000
	026 Move X21, [X21+2296]
	027 Move X22, [X22+4040]
	028 Move W20, W31
	029 Move X0, [X21]
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {35}
	033 Call 0x1C17DFC
	034 Move X0, [X21]
	035 Move X8, [X0+184]
	036 Move W9, [X8]
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move W9, [X0+224]
	039 Compare W9, 0
	040 JumpIfNotEqual {44}
	041 Call 0x1C17DFC
	042 Move X8, [X21]
	043 Move X8, [X8+184]
	044 Move X8, [X8+8]
	045 Compare X8, 0
	046 JumpIfEqual {85}
	047 Move W9, [X8+24]
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X23, W20
	050 Add X8, X8, X23
	051 Move X0, [X8+32]
	052 Compare X0, 0
	053 JumpIfEqual {85}
	054 Call PlayerInput.get_devices, X0
	055 Move X3, [X22]
	056 Move X2, X19
	057 Call 0x223D504, X0, X1
	058 Move TEMP, X0
	059 And TEMP, TEMP, 1
	060 Compare TEMP, 1
	061 JumpIfEqual {64}
	062 Add W20, W20, 1
	063 Move X0, X31
	064 Move X0, [X21]
	065 Move W8, [X0+224]
	066 Compare W8, 0
	067 JumpIfNotEqual {70}
	068 Call 0x1C17DFC
	069 Move X0, [X21]
	070 Move X8, [X0+184]
	071 Move X8, [X8+8]
	072 Compare X8, 0
	073 JumpIfEqual {85}
	074 Move W9, [X8+24]
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Add X8, X8, X23
	077 Move X0, [X8+32]
	078 Move X20, [X31+32]
	079 Move X19, [X31+40]
	080 Move X22, [X31+16]
	081 Move X21, [X31+24]
	082 Move X30, [X31+48]
	083 Move X23, [X31+56]
	084 Return X0
	085 Call 0x1C17F20
	086 Call 0x1C17F28
	087 Move X0, 0x924000
	088 Move X0, [X0+1320]
	089 Call 0x1C17D08
	090 Call 0x1C17F10
	091 Move X19, X0
	092 Move X0, 0x947000
	093 Move X0, [X0+3360]
	094 Call 0x1C17D08
	095 Move X1, X0
	096 Move X0, X19
	097 Move X2, X31
	098 Call ArgumentNullException..ctor, X0, X1
	099 Move X0, 0x974000
	100 Move X0, [X0+2648]
	101 Call 0x1C17D08
	102 Move X1, X0
	103 Move X0, X19
	104 Call 0x1C17DEC

Method: UnityEngine.InputSystem.PlayerInput Instantiate(UnityEngine.GameObject prefab, System.Int32 playerIndex = -1, System.String controlScheme = null, System.Int32 splitScreenIndex = -1, UnityEngine.InputSystem.InputDevice pairWithDevice = null)

Disassembly:
	0x037D575C CMP W8, W11
	0x037D5760 B.CS 0x37D5840
	0x037D5764 ADD X8, X9, W8, 0x3, SXTW
	0x037D5768 LDR X1, [X8 + 0x20]
	0x037D576C MOV X0, X21
	0x037D5770 BL 0x37D850C
	0x037D5774 B 0x37D5714
	0x037D5778 MOV X21, X31
	0x037D577C CBZ X19, 0x37D57D8
	0x037D5780 LDR X8, [X19]
	0x037D5784 LDR X1, [X23]
	0x037D5788 LDRH W9, [X8 + 0x12E]
	0x037D578C CBZ X9, 0x37D57B0
	0x037D5790 LDR X10, [X8 + 0xB0]
	0x037D5794 ADD X10, X10, 0x8
	0x037D5798 LDUR X11, [X10 - 0x8]
	0x037D579C CMP X11, X1
	0x037D57A0 B.EQ 0x37D57C0
	0x037D57A4 SUBS X9, X9, 0x1
	0x037D57A8 ADD X10, X10, 0x10
	0x037D57AC B.NE 0x37D5798
	0x037D57B0 MOV X0, X19
	0x037D57B4 MOV W2, W31
	0x037D57B8 BL 0x1C5C788
	0x037D57BC B 0x37D57CC
	0x037D57C0 LDRSW X9, [X10]
	0x037D57C4 ADD X8, X8, X9, 0x4, LSL
	0x037D57C8 ADD X0, X8, 0x138
	0x037D57CC LDP X8, X1, [X0]
	0x037D57D0 MOV X0, X19
	0x037D57D4 BLR X8
	0x037D57D8 CBNZ X21, 0x37D5848
	0x037D57DC LDR X8, [X22]
	0x037D57E0 LDR X8, [X8 + 0xB8]
	0x037D57E4 LDR X8, [X8 + 0x20]
	0x037D57E8 CBZ X8, 0x37D5850
	0x037D57EC LDR W9, [X8 + 0x18]
	0x037D57F0 CMP W20, W9
	0x037D57F4 B.CS 0x37D5854
	0x037D57F8 MOVZ W9, 0xB8
	0x037D57FC MADD X8, X20, X9, X8
	0x037D5800 LDRB W8, [X8 + 0x58]
	0x037D5804 CBZ W8, 0x37D5824
	0x037D5808 MOV W0, W20
	0x037D580C LDP X20, X19, [X31 + 0x30]
	0x037D5810 LDP X22, X21, [X31 + 0x20]
	0x037D5814 LDP X24, X23, [X31 + 0x10]
	0x037D5818 MOV W1, W31
	0x037D581C LDR X30, [X31], #0x40
	0x037D5820 B 0x37E1288
	0x037D5824 LDP X20, X19, [X31 + 0x30]
	0x037D5828 LDP X22, X21, [X31 + 0x20]
	0x037D582C LDP X24, X23, [X31 + 0x10]
	0x037D5830 LDR X30, [X31], #0x40
	0x037D5834 RET
	0x037D5838 BL 0x1C16F20
	0x037D583C BL 0x1C16F28
	0x037D5840 BL 0x1C16F28
	0x037D5844 BL 0x1C16F20
	0x037D5848 MOV X0, X21
	0x037D584C BL 0x1C16F18
	0x037D5850 BL 0x1C16F20
	0x037D5854 BL 0x1C16F28
	0x037D5858 B 0x37D5868
	0x037D585C B 0x37D5868
	0x037D5860 B 0x37D5868
	0x037D5864 B 0x37D5868
	0x037D5868 CMP W1, 0x1
	0x037D586C B.NE 0x37D5880
	0x037D5870 BL 0x3EB1AD0
	0x037D5874 LDR X21, [X0]
	0x037D5878 BL 0x3EB1AE0
	0x037D587C B 0x37D577C
	0x037D5880 MOV X20, X0
	0x037D5884 MOV X21, X31
	0x037D5888 B 0x37D5890
	0x037D588C MOV X20, X0
	0x037D5890 CBZ X19, 0x37D58EC
	0x037D5894 LDR X8, [X19]
	0x037D5898 LDR X1, [X23]
	0x037D589C LDRH W9, [X8 + 0x12E]
	0x037D58A0 CBZ X9, 0x37D58C4
	0x037D58A4 LDR X10, [X8 + 0xB0]
	0x037D58A8 ADD X10, X10, 0x8
	0x037D58AC LDUR X11, [X10 - 0x8]
	0x037D58B0 CMP X11, X1

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X24, 0xC0D000
	010 Move X25, 0x91F000
	011 Move W8, [X24+608]
	012 Move X25, [X25+1432]
	013 Move X20, X4
	014 Move W22, W3
	015 Move X21, X2
	016 Move W23, W1
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {33}
	022 Move X0, 0x974000
	023 Move X0, [X0+488]
	024 Call 0x1C17CF4
	025 Move X0, 0x91F000
	026 Move X0, [X0+1432]
	027 Call 0x1C17CF4
	028 Move X0, 0x974000
	029 Move X0, [X0+2296]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X24+608], W8
	033 Move X0, [X25]
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {38}
	037 Call 0x1C17DFC
	038 Move X0, X19
	039 Move X1, X31
	040 Move X2, X31
	041 Call Object.op_Equality, X0, X1
	042 Move TEMP, X0
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfEqual {88}
	046 Move X24, 0x974000
	047 Move X24, [X24+2296]
	048 Move X0, [X24]
	049 Move W8, [X0+224]
	050 Compare W8, 0
	051 JumpIfNotEqual {54}
	052 Call 0x1C17DFC
	053 Move X0, [X24]
	054 Move X8, [X0+184]
	055 Move [X8+40], W23
	056 Move [X8+44], W22
	057 Move [X8+48], X21
	058 Compare X20, 0
	059 JumpIfEqual {75}
	060 Move X21, 0x974000
	061 Move W9, [X0+224]
	062 Move X21, [X21+488]
	063 Compare W9, 0
	064 JumpIfNotEqual {68}
	065 Call 0x1C17DFC
	066 Move X8, [X24]
	067 Move X8, [X8+184]
	068 Move X4, [X21]
	069 Add X0, X8, 32
	070 Add X1, X8, 24
	071 Move W3, 10
	072 Move X2, X20
	073 Call ArrayHelpers.AppendWithCapacity, X0, X1, X2, X3
	074 Move X0, [X24]
	075 Move W8, [X0+224]
	076 Compare W8, 0
	077 JumpIfNotEqual {79}
	078 Call 0x1C17DFC
	079 Move X0, X19
	080 Move X20, [X31+48]
	081 Move X19, [X31+56]
	082 Move X22, [X31+32]
	083 Move X21, [X31+40]
	084 Move X24, [X31+16]
	085 Move X23, [X31+24]
	086 Move X30, [X31+64]
	087 Move X25, [X31+72]
	088 Move X0, 0x924000
	089 Move X0, [X0+1320]
	090 Call 0x1C17D08
	091 Call 0x1C17F10
	092 Move X19, X0
	093 Move X0, 0x92A000
	094 Move X0, [X0+3856]
	095 Call 0x1C17D08
	096 Move X1, X0
	097 Move X0, X19
	098 Move X2, X31
	099 Call ArgumentNullException..ctor, X0, X1
	100 Move X0, 0x974000
	101 Move X0, [X0+2656]
	102 Call 0x1C17D08
	103 Move X1, X0
	104 Move X0, X19
	105 Call 0x1C17DEC

Method: UnityEngine.InputSystem.PlayerInput Instantiate(UnityEngine.GameObject prefab, System.Int32 playerIndex = -1, System.String controlScheme = null, System.Int32 splitScreenIndex = -1, UnityEngine.InputSystem.InputDevice[] pairWithDevices)

Disassembly:
	0x037D5BF4 BL 0x37D5904
	0x037D5BF8 STR W0, [X19 + 0xA0]
	0x037D5BFC LDR X0, [X21]
	0x037D5C00 ADD X22, X22, 0x1
	0x037D5C04 B 0x37D5B9C
	0x037D5C08 ADD X21, X19, 0xA0
	0x037D5C0C MOV X0, X21
	0x037D5C10 BL 0x37D2BD0
	0x037D5C14 TBNZ X0, 0x0, 0x37D5C20
	0x037D5C18 BL 0x37D6228
	0x037D5C1C STR W0, [X19 + 0xA0]
	0x037D5C20 LDR X8, [X20 + 0x10]
	0x037D5C24 LDR V0, [X20]
	0x037D5C28 ADD X1, X31, 0x0
	0x037D5C2C MOV X0, X21
	0x037D5C30 STR X8, [X31 + 0x10]
	0x037D5C34 STR V0, [X31]
	0x037D5C38 BL 0x37D6294
	0x037D5C3C STR W0, [X31 + 0x28]
	0x037D5C40 ADD X0, X31, 0x28
	0x037D5C44 MOV X1, X31
	0x037D5C48 BL 0x37E44DC
	0x037D5C4C LDR W8, [X19 + 0xA0]
	0x037D5C50 ADD X0, X31, 0x18
	0x037D5C54 STR W8, [X31 + 0x18]
	0x037D5C58 BL 0x37D39EC
	0x037D5C5C TBZ X0, 0x0, 0x37D5C7C
	0x037D5C60 MOV X0, X21
	0x037D5C64 MOV X1, X31
	0x037D5C68 BL 0x37D644C
	0x037D5C6C MOV X0, X21
	0x037D5C70 BL 0x37D5694
	0x037D5C74 MOV W0, W31
	0x037D5C78 B 0x37D5C80
	0x037D5C7C MOVZ W0, 0x1
	0x037D5C80 LDP X20, X19, [X31 + 0x40]
	0x037D5C84 LDP X22, X21, [X31 + 0x30]
	0x037D5C88 LDR X30, [X31 + 0x20]
	0x037D5C8C ADD X31, X31, 0x50
	0x037D5C90 RET
	0x037D5C94 BL 0x1C16F20
	0x037D5C98 BL 0x1C16F28
	0x037D5C9C SUB X31, X31, 0x40
	0x037D5CA0 STP X30, X21, [X31 + 0x20]
	0x037D5CA4 STP X20, X19, [X31 + 0x30]
	0x037D5CA8 ADRP X21, 0xC0C000
	0x037D5CAC ADRP X20, 0x973000
	0x037D5CB0 MOV X19, X8
	0x037D5CB4 LDRB W8, [X21 + 0x2EB]
	0x037D5CB8 LDR X20, [X20 + 0xAC0]
	0x037D5CBC TBNZ X8, 0x0, 0x37D5CD4
	0x037D5CC0 ADRP X0, 0x973000
	0x037D5CC4 LDR X0, [X0 + 0xAC0]
	0x037D5CC8 BL 0x1C16CF4
	0x037D5CCC MOVZ W8, 0x1
	0x037D5CD0 STRB W8, [X21 + 0x2EB]
	0x037D5CD4 LDR X3, [X20]
	0x037D5CD8 MOVI V0.2D, 0x0
	0x037D5CDC ADD X0, X31, 0x0
	0x037D5CE0 MOVZ W1, 0x2
	0x037D5CE4 MOV W2, W31
	0x037D5CE8 STP V0, V0, [X31]
	0x037D5CEC BL 0x2DFA684
	0x037D5CF0 ADD X0, X31, 0x0
	0x037D5CF4 BL 0x37E22F8
	0x037D5CF8 LDP V0, V1, [X31]
	0x037D5CFC LDP X30, X21, [X31 + 0x20]
	0x037D5D00 STP V0, V1, [X19]
	0x037D5D04 LDP X20, X19, [X31 + 0x30]
	0x037D5D08 ADD X31, X31, 0x40
	0x037D5D0C RET
	0x037D5D10 SUB X31, X31, 0x40
	0x037D5D14 STR X30, [X31 + 0x10]
	0x037D5D18 STP X22, X21, [X31 + 0x20]
	0x037D5D1C STP X20, X19, [X31 + 0x30]
	0x037D5D20 ADRP X22, 0xC0C000
	0x037D5D24 ADRP X21, 0x91E000
	0x037D5D28 LDRB W8, [X22 + 0x26A]
	0x037D5D2C LDR X21, [X21 + 0x598]
	0x037D5D30 MOV X19, X1
	0x037D5D34 MOV X20, X0
	0x037D5D38 TBNZ X8, 0x0, 0x37D5D68
	0x037D5D3C ADRP X0, 0x91E000
	0x037D5D40 LDR X0, [X0 + 0x598]
	0x037D5D44 BL 0x1C16CF4
	0x037D5D48 ADRP X0, 0x973000
	0x037D5D4C LDR X0, [X0 + 0x900]
	0x037D5D50 BL 0x1C16CF4
	0x037D5D54 ADRP X0, 0x973000
	0x037D5D58 LDR X0, [X0 + 0x908]
	0x037D5D5C BL 0x1C16CF4
	0x037D5D60 MOVZ W8, 0x1
	0x037D5D64 STRB W8, [X22 + 0x26A]
	0x037D5D68 LDR X0, [X21]
	0x037D5D6C LDR X21, [X20 + 0x20]
	0x037D5D70 LDR W8, [X0 + 0xE0]
	0x037D5D74 CBNZ W8, 0x37D5D7C
	0x037D5D78 BL 0x1C16DFC
	0x037D5D7C MOV X0, X21
	0x037D5D80 MOV X1, X31

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X24, 0xC0D000
	010 Move X25, 0x91F000
	011 Move W8, [X24+609]
	012 Move X25, [X25+1432]
	013 Move X20, X4
	014 Move W22, W3
	015 Move X21, X2
	016 Move W23, W1
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {33}
	022 Move X0, 0x974000
	023 Move X0, [X0+488]
	024 Call 0x1C17CF4
	025 Move X0, 0x91F000
	026 Move X0, [X0+1432]
	027 Call 0x1C17CF4
	028 Move X0, 0x974000
	029 Move X0, [X0+2296]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X24+609], W8
	033 Move X0, [X25]
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {38}
	037 Call 0x1C17DFC
	038 Move X0, X19
	039 Move X1, X31
	040 Move X2, X31
	041 Call Object.op_Equality, X0, X1
	042 Move TEMP, X0
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfEqual {101}
	046 Move X24, 0x974000
	047 Move X24, [X24+2296]
	048 Move X0, [X24]
	049 Move W8, [X0+224]
	050 Compare W8, 0
	051 JumpIfNotEqual {54}
	052 Call 0x1C17DFC
	053 Move X0, [X24]
	054 Move X8, [X0+184]
	055 Move [X8+40], W23
	056 Move [X8+44], W22
	057 Move [X8+48], X21
	058 Compare X20, 0
	059 JumpIfEqual {85}
	060 Move X8, [X20+24]
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move X23, 0x974000
	063 Move X23, [X23+488]
	064 Move X21, X31
	065 And X8, X8, 0
	066 Add X22, X20, 32
	067 Move W9, [X0+224]
	068 Compare W9, 0
	069 JumpIfNotEqual {72}
	070 Call 0x1C17DFC
	071 Move W8, [X20+24]
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Move X8, [X24]
	074 Move X2, [X22]
	075 Move X4, [X23]
	076 Move W3, 10
	077 Move X8, [X8+184]
	078 Add X0, X8, 32
	079 Add X1, X8, 24
	080 Call ArrayHelpers.AppendWithCapacity, X0, X1, X2, X3
	081 Move W8, [X20+24]
	082 Move X0, [X24]
	083 Add X21, X21, 1
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Move W8, [X0+224]
	086 Compare W8, 0
	087 JumpIfNotEqual {89}
	088 Call 0x1C17DFC
	089 Move X0, X19
	090 Move X20, [X31+48]
	091 Move X19, [X31+56]
	092 Move X22, [X31+32]
	093 Move X21, [X31+40]
	094 Move X24, [X31+16]
	095 Move X23, [X31+24]
	096 Move X30, [X31+64]
	097 Move X25, [X31+72]
	098 Call PlayerInput.DoInstantiate, X0
	099 Return X0
	100 Call 0x1C17F28
	101 Move X0, 0x924000
	102 Move X0, [X0+1320]
	103 Call 0x1C17D08
	104 Call 0x1C17F10
	105 Move X19, X0
	106 Move X0, 0x92A000
	107 Move X0, [X0+3856]
	108 Call 0x1C17D08
	109 Move X1, X0
	110 Move X0, X19
	111 Move X2, X31
	112 Call ArgumentNullException..ctor, X0, X1
	113 Move X0, 0x974000
	114 Move X0, [X0+2680]
	115 Call 0x1C17D08
	116 Move X1, X0
	117 Move X0, X19
	118 Call 0x1C17DEC

Method: UnityEngine.InputSystem.PlayerInput DoInstantiate(UnityEngine.GameObject prefab)

Disassembly:
	0x037D58B4 B.EQ 0x37D58D4
	0x037D58B8 SUBS X9, X9, 0x1
	0x037D58BC ADD X10, X10, 0x10
	0x037D58C0 B.NE 0x37D58AC
	0x037D58C4 MOV X0, X19
	0x037D58C8 MOV W2, W31
	0x037D58CC BL 0x1C5C788
	0x037D58D0 B 0x37D58E0
	0x037D58D4 LDRSW X9, [X10]
	0x037D58D8 ADD X8, X8, X9, 0x4, LSL
	0x037D58DC ADD X0, X8, 0x138
	0x037D58E0 LDP X8, X1, [X0]
	0x037D58E4 MOV X0, X19
	0x037D58E8 BLR X8
	0x037D58EC CBNZ X21, 0x37D58F8
	0x037D58F0 MOV X0, X20
	0x037D58F4 BL 0x1D2C690
	0x037D58F8 MOV X0, X21
	0x037D58FC BL 0x1C16F18
	0x037D5900 BL 0x1990590
	0x037D5904 SUB X31, X31, 0x40
	0x037D5908 STP X30, X23, [X31 + 0x10]
	0x037D590C STP X22, X21, [X31 + 0x20]
	0x037D5910 STP X20, X19, [X31 + 0x30]
	0x037D5914 ADRP X22, 0xC0C000
	0x037D5918 LDRB W8, [X22 + 0x2F0]
	0x037D591C MOV W20, W2
	0x037D5920 MOV X21, X1
	0x037D5924 MOV X19, X0
	0x037D5928 STR W21, [X31 + 0x8]
	0x037D592C TBNZ X8, 0x0, 0x37D5950
	0x037D5930 ADRP X0, 0x973000
	0x037D5934 LDR X0, [X0 + 0x948]
	0x037D5938 BL 0x1C16CF4
	0x037D593C ADRP X0, 0x96F000
	0x037D5940 LDR X0, [X0 + 0xFC8]
	0x037D5944 BL 0x1C16CF4
	0x037D5948 MOVZ W8, 0x1
	0x037D594C STRB W8, [X22 + 0x2F0]
	0x037D5950 CBZ X19, 0x37D5A28
	0x037D5954 CBZ W21, 0x37D59B4
	0x037D5958 ADD X0, X31, 0x8
	0x037D595C BL 0x37D2BD0
	0x037D5960 TBZ X0, 0x0, 0x37D5A5C
	0x037D5964 ADRP X23, 0x96F000
	0x037D5968 LDR X23, [X23 + 0xFC8]
	0x037D596C ADD X0, X31, 0x8
	0x037D5970 BL 0x37DFF1C
	0x037D5974 MOV W22, W0
	0x037D5978 TBZ X20, 0x3, 0x37D5984
	0x037D597C ADD X0, X31, 0x8
	0x037D5980 BL 0x37D5694
	0x037D5984 ADD X0, X31, 0x8
	0x037D5988 BL 0x37D38F8
	0x037D598C LDR X3, [X23]
	0x037D5990 MOV X2, X19
	0x037D5994 BL 0x223C504
	0x037D5998 TBZ X0, 0x0, 0x37D59BC
	0x037D599C TBZ X20, 0x0, 0x37D5A10
	0x037D59A0 MOV W0, W22
	0x037D59A4 MOV X1, X19
	0x037D59A8 MOV W2, W20
	0x037D59AC BL 0x37E2A08
	0x037D59B0 B 0x37D5A10
	0x037D59B4 BL 0x37E290C
	0x037D59B8 MOV W22, W0
	0x037D59BC ADRP X21, 0x973000
	0x037D59C0 LDR X21, [X21 + 0x948]
	0x037D59C4 MOV W0, W22
	0x037D59C8 MOV X1, X19
	0x037D59CC MOV W2, W20
	0x037D59D0 BL 0x37E2A08
	0x037D59D4 TBNZ X0, 0x0, 0x37D59EC
	0x037D59D8 MOV W0, W22
	0x037D59DC MOV X1, X19
	0x037D59E0 MOV W2, W31
	0x037D59E4 MOV W3, W31
	0x037D59E8 BL 0x37E2B20
	0x037D59EC LDR X8, [X21]
	0x037D59F0 LDR X8, [X8 + 0xB8]
	0x037D59F4 LDR X8, [X8 + 0x18]
	0x037D59F8 CBZ X8, 0x37D5AB8
	0x037D59FC LDR W9, [X8 + 0x18]
	0x037D5A00 CMP W22, W9
	0x037D5A04 B.CS 0x37D5ABC
	0x037D5A08 ADD X8, X8, W22, 0x2, SXTW
	0x037D5A0C LDR W21, [X8 + 0x20]
	0x037D5A10 MOV W0, W21
	0x037D5A14 LDP X20, X19, [X31 + 0x30]
	0x037D5A18 LDP X22, X21, [X31 + 0x20]
	0x037D5A1C LDP X30, X23, [X31 + 0x10]
	0x037D5A20 ADD X31, X31, 0x40
	0x037D5A24 RET
	0x037D5A28 ADRP X0, 0x923000
	0x037D5A2C LDR X0, [X0 + 0x528]
	0x037D5A30 BL 0x1C16D08
	0x037D5A34 BL 0x1C16F10
	0x037D5A38 MOV X19, X0
	0x037D5A3C ADRP X0, 0x946000
	0x037D5A40 LDR X0, [X0 + 0xD20]
	0x037D5A44 BL 0x1C16D08
	0x037D5A48 MOV X1, X0
	0x037D5A4C MOV X0, X19
	0x037D5A50 MOV X2, X31
	0x037D5A54 BL 0x330E100
	0x037D5A58 B 0x37D5AA0
	0x037D5A5C ADRP X0, 0x926000
	0x037D5A60 LDR X0, [X0 + 0x578]
	0x037D5A64 BL 0x1C16D08
	0x037D5A68 BL 0x1C16F10
	0x037D5A6C MOV X19, X0
	0x037D5A70 ADRP X0, 0x973000
	0x037D5A74 LDR X0, [X0 + 0xAA8]
	0x037D5A78 BL 0x1C16D08
	0x037D5A7C MOV X20, X0
	0x037D5A80 ADRP X0, 0x973000
	0x037D5A84 LDR X0, [X0 + 0xAB0]
	0x037D5A88 BL 0x1C16D08
	0x037D5A8C MOV X2, X0
	0x037D5A90 MOV X0, X19
	0x037D5A94 MOV X1, X20
	0x037D5A98 MOV X3, X31
	0x037D5A9C BL 0x330E16C
	0x037D5AA0 ADRP X0, 0x973000
	0x037D5AA4 LDR X0, [X0 + 0xAB8]
	0x037D5AA8 BL 0x1C16D08
	0x037D5AAC MOV X1, X0
	0x037D5AB0 MOV X0, X19
	0x037D5AB4 BL 0x1C16DEC
	0x037D5AB8 BL 0x1C16F20
	0x037D5ABC BL 0x1C16F28
	0x037D5AC0 SUB X31, X31, 0x50
	0x037D5AC4 STR X30, [X31 + 0x20]
	0x037D5AC8 STP X22, X21, [X31 + 0x30]
	0x037D5ACC STP X20, X19, [X31 + 0x40]
	0x037D5AD0 ADRP X22, 0xC0C000
	0x037D5AD4 ADRP X21, 0x973000
	0x037D5AD8 LDRB W8, [X22 + 0x26C]
	0x037D5ADC LDR X21, [X21 + 0x8F8]
	0x037D5AE0 MOV X20, X1
	0x037D5AE4 MOV X19, X0
	0x037D5AE8 TBNZ X8, 0x0, 0x37D5B00
	0x037D5AEC ADRP X0, 0x973000
	0x037D5AF0 LDR X0, [X0 + 0x8F8]
	0x037D5AF4 BL 0x1C16CF4
	0x037D5AF8 MOVZ W8, 0x1
	0x037D5AFC STRB W8, [X22 + 0x26C]
	0x037D5B00 LDR X0, [X21]
	0x037D5B04 STR W31, [X31 + 0x28]
	0x037D5B08 LDR W8, [X0 + 0xE0]
	0x037D5B0C CBNZ W8, 0x37D5B18
	0x037D5B10 BL 0x1C16DFC
	0x037D5B14 LDR X0, [X21]
	0x037D5B18 LDR X8, [X0 + 0xB8]
	0x037D5B1C LDR W8, [X8 + 0x18]
	0x037D5B20 CMP W8, 0x1
	0x037D5B24 B.LT 0x37D5C08
	0x037D5B28 MOV X22, X31
	0x037D5B2C LDR W8, [X0 + 0xE0]
	0x037D5B30 CBNZ W8, 0x37D5B3C
	0x037D5B34 BL 0x1C16DFC
	0x037D5B38 LDR X0, [X21]
	0x037D5B3C LDR X8, [X0 + 0xB8]
	0x037D5B40 LDRSW X9, [X8 + 0x18]
	0x037D5B44 CMP X22, X9
	0x037D5B48 B.GE 0x37D5B98
	0x037D5B4C LDR W9, [X0 + 0xE0]
	0x037D5B50 CBNZ W9, 0x37D5B60
	0x037D5B54 BL 0x1C16DFC
	0x037D5B58 LDR X8, [X21]
	0x037D5B5C LDR X8, [X8 + 0xB8]
	0x037D5B60 LDR X8, [X8 + 0x20]
	0x037D5B64 CBZ X8, 0x37D5C94
	0x037D5B68 LDR W9, [X8 + 0x18]
	0x037D5B6C CMP X22, X9
	0x037D5B70 B.CS 0x37D5C98
	0x037D5B74 ADD X8, X8, X22, 0x3, LSL
	0x037D5B78 LDR X1, [X8 + 0x20]
	0x037D5B7C MOV X0, X20
	0x037D5B80 MOV X2, X31
	0x037D5B84 BL 0x376B41C
	0x037D5B88 TBZ X0, 0x0, 0x37D5C74
	0x037D5B8C LDR X0, [X21]
	0x037D5B90 ADD X22, X22, 0x1
	0x037D5B94 B 0x37D5B2C
	0x037D5B98 MOV X22, X31
	0x037D5B9C LDR W8, [X0 + 0xE0]
	0x037D5BA0 CBNZ W8, 0x37D5BAC
	0x037D5BA4 BL 0x1C16DFC
	0x037D5BA8 LDR X0, [X21]
	0x037D5BAC LDR X8, [X0 + 0xB8]
	0x037D5BB0 LDRSW X9, [X8 + 0x18]
	0x037D5BB4 CMP X22, X9
	0x037D5BB8 B.GE 0x37D5C08
	0x037D5BBC LDR W9, [X0 + 0xE0]
	0x037D5BC0 CBNZ W9, 0x37D5BD0
	0x037D5BC4 BL 0x1C16DFC
	0x037D5BC8 LDR X8, [X21]
	0x037D5BCC LDR X8, [X8 + 0xB8]
	0x037D5BD0 LDR X8, [X8 + 0x20]
	0x037D5BD4 CBZ X8, 0x37D5C94
	0x037D5BD8 LDR W9, [X8 + 0x18]
	0x037D5BDC CMP X22, X9
	0x037D5BE0 B.CS 0x37D5C98
	0x037D5BE4 ADD X8, X8, X22, 0x3, LSL
	0x037D5BE8 LDR X0, [X8 + 0x20]
	0x037D5BEC LDR W1, [X19 + 0xA0]
	0x037D5BF0 MOV W2, W31

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0xC0D000
	011 Move X23, 0x974000
	012 Move W8, [X20+610]
	013 Move X23, [X23+2296]
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {39}
	019 Move X0, 0x91F000
	020 Move X0, [X0+2600]
	021 Call 0x1C17CF4
	022 Move X0, 0x974000
	023 Move X0, [X0+2664]
	024 Call 0x1C17CF4
	025 Move X0, 0x91F000
	026 Move X0, [X0+3448]
	027 Call 0x1C17CF4
	028 Move X0, 0x91F000
	029 Move X0, [X0+1432]
	030 Call 0x1C17CF4
	031 Move X0, 0x974000
	032 Move X0, [X0+2296]
	033 Call 0x1C17CF4
	034 Move X0, 0x974000
	035 Move X0, [X0+2672]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X20+610], W8
	039 Move X0, [X23]
	040 Move [X31+8], W31
	041 Move X24, 0x91F000
	042 Move W8, [X0+224]
	043 Move X24, [X24+1432]
	044 Compare W8, 0
	045 JumpIfNotEqual {48}
	046 Call 0x1C17DFC
	047 Move X0, [X23]
	048 Move X8, [X24]
	049 Move X9, [X0+184]
	050 Move W10, [X8+224]
	051 Move W25, [X9+56]
	052 Compare W10, 0
	053 JumpIfNotEqual {56}
	054 Move X0, X8
	055 Call 0x1C17DFC
	056 Move X8, 0x91F000
	057 Move X8, [X8+3448]
	058 Move X1, [X8]
	059 Move X0, X19
	060 Call 0x222E35C, X0
	061 Move X20, X0
	062 Compare X0, 0
	063 JumpIfEqual {189}
	064 Move W1, 1
	065 Move X0, X20
	066 Move X2, X31
	067 Call GameObject.SetActive, X0, X1
	068 Move X21, X31
	069 Move X0, [X23]
	070 Move W8, [X0+224]
	071 Compare W8, 0
	072 JumpIfNotEqual {75}
	073 Call 0x1C17DFC
	074 Move X0, [X23]
	075 Move X8, [X0+184]
	076 Move X9, [X8+32]
	077 Move [X8+24], W31
	078 Compare X9, 0
	079 JumpIfEqual {93}
	080 Move W9, [X0+224]
	081 Compare W9, 0
	082 JumpIfEqual {84}
	083 Move W2, W31
	084 Call 0x1C17DFC
	085 Move X8, [X23]
	086 Move X8, [X8+184]
	087 Move W2, [X8+24]
	088 Move X0, [X8+32]
	089 Move W1, W31
	090 Move X3, X31
	091 Call Array.Clear, X0, X1, X2
	092 Move X0, [X23]
	093 Move W8, [X0+224]
	094 Compare W8, 0
	095 JumpIfNotEqual {98}
	096 Call 0x1C17DFC
	097 Move X0, [X23]
	098 Move X8, [X0+184]
	099 NotImplemented "Instruction MOVI not yet implemented."
	100 Move [X8+48], X31
	101 Move [X8+40], D0
	102 Move [X8+56], W31
	103 Compare X21, 0
	104 JumpIfNotEqual {187}
	105 Compare X20, 0
	106 JumpIfEqual {186}
	107 Move X8, 0x974000
	108 Move X8, [X8+2664]
	109 Move X0, X20
	110 Move X1, [X8]
	111 Call 0x21E6548, X0
	112 Move X8, [X24]
	113 Move X21, X0
	114 Move W9, [X8+224]
	115 Compare W9, 0
	116 JumpIfNotEqual {119}
	117 Move X0, X8
	118 Call 0x1C17DFC
	119 Move X0, X21
	120 Move X1, X31
	121 Move X2, X31
	122 Call Object.op_Equality, X0, X1
	123 Move TEMP, X0
	124 And TEMP, TEMP, 1
	125 Compare TEMP, 1
	126 JumpIfNotEqual {148}
	127 Move X0, [X24]
	128 Move W8, [X0+224]
	129 Compare W8, 0
	130 JumpIfNotEqual {132}
	131 Call 0x1C17DFC
	132 Move X0, X20
	133 Move X1, X31
	134 Call Object.DestroyImmediate, X0
	135 Move X8, 0x91F000
	136 Move X8, [X8+2600]
	137 Move X0, [X8]
	138 Move W8, [X0+224]
	139 Compare W8, 0
	140 JumpIfNotEqual {142}
	141 Call 0x1C17DFC
	142 Move X8, 0x974000
	143 Move X8, [X8+2672]
	144 Move X1, X19
	145 Move X2, X31
	146 Move X0, [X8]
	147 Call Debug.LogError, X0, X1
	148 Compare W25, 0
	149 JumpIfEqual {175}
	150 Compare X21, 0
	151 JumpIfEqual {186}
	152 Move W8, [X21+160]
	153 Add X0, X31, 8
	154 Move [X31+8], W8
	155 Call InputUser.get_valid, X0
	156 Move TEMP, X0
	157 And TEMP, TEMP, 1
	158 Compare TEMP, 1
	159 JumpIfNotEqual {166}
	160 Move X0, X21
	161 Call PlayerInput.get_hasMissingRequiredDevices, X0
	162 Move TEMP, X0
	163 And TEMP, TEMP, 1
	164 Compare TEMP, 1
	165 JumpIfNotEqual {175}
	166 Move X0, [X24]
	167 Move W8, [X0+224]
	168 Compare W8, 0
	169 JumpIfNotEqual {171}
	170 Call 0x1C17DFC
	171 Move X0, X20
	172 Move X1, X31
	173 Call Object.DestroyImmediate, X0
	174 Move X21, X31
	175 Move X0, X21
	176 Move X20, [X31+64]
	177 Move X19, [X31+72]
	178 Move X22, [X31+48]
	179 Move X21, [X31+56]
	180 Move X24, [X31+32]
	181 Move X23, [X31+40]
	182 Move X30, [X31+16]
	183 Move X25, [X31+24]
	184 Add X31, X31, 80
	185 Return X0
	186 Call 0x1C17F20
	187 Move X0, X21
	188 Call 0x1C17F18
	189 Call 0x1C17F20
	190 Move X22, X0
	191 Move X20, X31
	192 Move X22, X0
	193 NotImplemented "Instruction CMP not yet implemented."
	194 Move X0, X22
	195 Call 0x3EB2AD0
	196 Move X21, [X0]
	197 Call 0x3EB2AE0
	198 Move X21, X31
	199 Move X22, X0
	200 Move X0, [X23]
	201 Move W8, [X0+224]
	202 Compare W8, 0
	203 JumpIfNotEqual {206}
	204 Call 0x1C17DFC
	205 Move X0, [X23]
	206 Move X8, [X0+184]
	207 Move X9, [X8+32]
	208 Move [X8+24], W31
	209 Compare X9, 0
	210 JumpIfEqual {224}
	211 Move W9, [X0+224]
	212 Compare W9, 0
	213 JumpIfNotEqual {218}
	214 Call 0x1C17DFC
	215 Move X8, [X23]
	216 Move X8, [X8+184]
	217 Move W2, [X8+24]
	218 Move W2, W31
	219 Move X0, [X8+32]
	220 Move W1, W31
	221 Move X3, X31
	222 Call Array.Clear, X0, X1, X2
	223 Move X0, [X23]
	224 Move W8, [X0+224]
	225 Compare W8, 0
	226 JumpIfNotEqual {229}
	227 Call 0x1C17DFC
	228 Move X0, [X23]
	229 Move X8, [X0+184]
	230 NotImplemented "Instruction MOVI not yet implemented."
	231 Move [X8+48], X31
	232 Move [X8+40], D0
	233 Move [X8+56], W31
	234 Compare X21, 0
	235 JumpIfNotEqual {238}
	236 Move X0, X22
	237 Call 0x1D2D690
	238 Move X0, X21
	239 Call 0x1C17F18
	240 Call 0x1991590

Method: System.Void InitializeActions()

Disassembly:
	0x037D2B18 LDR X0, [X19 + 0x88]
	0x037D2B1C CBZ X0, 0x37D2B30
	0x037D2B20 LDP X20, X19, [X31 + 0x10]
	0x037D2B24 MOV X1, X31
	0x037D2B28 LDR X30, [X31], #0x20
	0x037D2B2C B 0x37382CC
	0x037D2B30 LDP X20, X19, [X31 + 0x10]
	0x037D2B34 LDR X30, [X31], #0x20
	0x037D2B38 RET
	0x037D2B3C LDR X1, [X19 + 0x68]
	0x037D2B40 MOV X0, X19
	0x037D2B44 LDP X20, X19, [X31 + 0x10]
	0x037D2B48 LDR X30, [X31], #0x20
	0x037D2B4C B 0x37D3C10
	0x037D2B50 SUB X31, X31, 0x40
	0x037D2B54 STR X30, [X31 + 0x20]
	0x037D2B58 STP X20, X19, [X31 + 0x30]
	0x037D2B5C ADRP X20, 0xC0F000
	0x037D2B60 LDRB W8, [X20 + 0x24A]
	0x037D2B64 MOV X19, X0
	0x037D2B68 TBNZ X8, 0x0, 0x37D2B8C
	0x037D2B6C ADRP X0, 0x949000
	0x037D2B70 LDR X0, [X0 + 0xE10]
	0x037D2B74 BL 0x1C16CF4
	0x037D2B78 ADRP X0, 0x973000
	0x037D2B7C LDR X0, [X0 + 0x9B8]
	0x037D2B80 BL 0x1C16CF4
	0x037D2B84 MOVZ W8, 0x1
	0x037D2B88 STRB W8, [X20 + 0x24A]
	0x037D2B8C ADD X19, X19, 0xA0
	0x037D2B90 MOV X0, X19
	0x037D2B94 BL 0x37D2BD0
	0x037D2B98 TBZ X0, 0x0, 0x37D2BBC
	0x037D2B9C ADD X8, X31, 0x0
	0x037D2BA0 MOV X0, X19
	0x037D2BA4 BL 0x37D2C78
	0x037D2BA8 LDRB W8, [X31]
	0x037D2BAC LDR X9, [X31 + 0x8]
	0x037D2BB0 CMP W8, 0x0
	0x037D2BB4 CSEL X0, X31, X9, EQ
	0x037D2BB8 B 0x37D2BC0
	0x037D2BBC MOV X0, X31
	0x037D2BC0 LDP X20, X19, [X31 + 0x30]
	0x037D2BC4 LDR X30, [X31 + 0x20]
	0x037D2BC8 ADD X31, X31, 0x40
	0x037D2BCC RET
	0x037D2BD0 STR X30, [X31 - 0x20]!
	0x037D2BD4 STP X20, X19, [X31 + 0x10]
	0x037D2BD8 ADRP X20, 0xC0F000
	0x037D2BDC LDRB W8, [X20 + 0x2D0]
	0x037D2BE0 MOV X19, X0
	0x037D2BE4 TBNZ X8, 0x0, 0x37D2BFC
	0x037D2BE8 ADRP X0, 0x976000
	0x037D2BEC LDR X0, [X0 + 0x948]
	0x037D2BF0 BL 0x1C16CF4
	0x037D2BF4 MOVZ W8, 0x1
	0x037D2BF8 STRB W8, [X20 + 0x2D0]
	0x037D2BFC LDR W8, [X19]
	0x037D2C00 CBZ W8, 0x37D2C60
	0x037D2C04 ADRP X9, 0x976000
	0x037D2C08 LDR X9, [X9 + 0x948]
	0x037D2C0C LDR X9, [X9]
	0x037D2C10 LDR X11, [X9 + 0xB8]
	0x037D2C14 LDR W9, [X11 + 0x8]
	0x037D2C18 CMP W9, 0x1
	0x037D2C1C B.LT 0x37D2C60
	0x037D2C20 LDR X11, [X11 + 0x18]
	0x037D2C24 MOV X10, X31
	0x037D2C28 ADD X12, X11, 0x20
	0x037D2C2C CBZ X11, 0x37D2C70
	0x037D2C30 LDR W13, [X11 + 0x18]
	0x037D2C34 CMP W10, W13
	0x037D2C38 B.CS 0x37D2C74
	0x037D2C3C LDR W13, [X12, X10, LSL #2]
	0x037D2C40 ADD X10, X10, 0x1
	0x037D2C44 CMP W13, W8
	0x037D2C48 CSET W0, EQ
	0x037D2C4C CMP W10, W9
	0x037D2C50 B.GE 0x37D2C64
	0x037D2C54 CMP W13, W8
	0x037D2C58 B.NE 0x37D2C2C
	0x037D2C5C B 0x37D2C64
	0x037D2C60 MOV W0, W31
	0x037D2C64 LDP X20, X19, [X31 + 0x10]
	0x037D2C68 LDR X30, [X31], #0x20
	0x037D2C6C RET
	0x037D2C70 BL 0x1C16F20
	0x037D2C74 BL 0x1C16F28
	0x037D2C78 STR X30, [X31 - 0x30]!
	0x037D2C7C STP X22, X21, [X31 + 0x10]
	0x037D2C80 STP X20, X19, [X31 + 0x20]
	0x037D2C84 ADRP X21, 0xC0F000
	0x037D2C88 ADRP X22, 0x976000
	0x037D2C8C MOV X19, X8
	0x037D2C90 LDRB W8, [X21 + 0x2D7]
	0x037D2C94 LDR X22, [X22 + 0x948]
	0x037D2C98 MOV X20, X0
	0x037D2C9C TBNZ X8, 0x0, 0x37D2CB4
	0x037D2CA0 ADRP X0, 0x976000
	0x037D2CA4 LDR X0, [X0 + 0x948]
	0x037D2CA8 BL 0x1C16CF4
	0x037D2CAC MOVZ W8, 0x1
	0x037D2CB0 STRB W8, [X21 + 0x2D7]
	0x037D2CB4 LDR X8, [X22]
	0x037D2CB8 MOV X0, X20
	0x037D2CBC LDR X8, [X8 + 0xB8]
	0x037D2CC0 LDR X21, [X8 + 0x20]
	0x037D2CC4 BL 0x37DFF1C
	0x037D2CC8 CBZ X21, 0x37D2CFC
	0x037D2CCC LDR W8, [X21 + 0x18]
	0x037D2CD0 CMP W0, W8
	0x037D2CD4 B.CS 0x37D2D00
	0x037D2CD8 MOVZ W8, 0xB8
	0x037D2CDC SMADDL X8, X0, X8, X21
	0x037D2CE0 LDUR V0, [X8 + 0x68]
	0x037D2CE4 LDUR V1, [X8 + 0x58]
	0x037D2CE8 LDP X22, X21, [X31 + 0x10]
	0x037D2CEC STP V1, V0, [X19]
	0x037D2CF0 LDP X20, X19, [X31 + 0x20]
	0x037D2CF4 LDR X30, [X31], #0x30
	0x037D2CF8 RET
	0x037D2CFC BL 0x1C16F20
	0x037D2D00 BL 0x1C16F28
	0x037D2D04 LDR X0, [X0 + 0x60]
	0x037D2D08 RET
	0x037D2D0C STR X1, [X0 + 0x60]
	0x037D2D10 RET
	0x037D2D14 LDRB W0, [X0 + 0x58]
	0x037D2D18 RET
	0x037D2D1C LDRB W9, [X0 + 0x58]
	0x037D2D20 AND W8, W1, 0x1
	0x037D2D24 CMP W9, W8
	0x037D2D28 B.EQ 0x37D2D4C
	0x037D2D2C LDRB W9, [X0 + 0x95]
	0x037D2D30 STRB W8, [X0 + 0x58]
	0x037D2D34 CBZ W9, 0x37D2D4C
	0x037D2D38 LDRB W8, [X0 + 0x200]
	0x037D2D3C TBZ X1, 0x0, 0x37D2D48
	0x037D2D40 CBZ W8, 0x37D2D4C
	0x037D2D44 B 0x37D2E80
	0x037D2D48 CBZ W8, 0x37D2D50
	0x037D2D4C RET
	0x037D2D50 B 0x37D2D54
	0x037D2D54 STP X30, X21, [X31 - 0x20]!
	0x037D2D58 STP X20, X19, [X31 + 0x10]
	0x037D2D5C ADRP X20, 0xC0F000
	0x037D2D60 LDRB W8, [X20 + 0x26F]
	0x037D2D64 MOV X19, X0
	0x037D2D68 TBNZ X8, 0x0, 0x37D2DA4
	0x037D2D6C ADRP X0, 0x976000
	0x037D2D70 LDR X0, [X0 + 0x950]
	0x037D2D74 BL 0x1C16CF4
	0x037D2D78 ADRP X0, 0x976000
	0x037D2D7C LDR X0, [X0 + 0x958]
	0x037D2D80 BL 0x1C16CF4
	0x037D2D84 ADRP X0, 0x976000
	0x037D2D88 LDR X0, [X0 + 0x960]
	0x037D2D8C BL 0x1C16CF4
	0x037D2D90 ADRP X0, 0x976000
	0x037D2D94 LDR X0, [X0 + 0x968]
	0x037D2D98 BL 0x1C16CF4
	0x037D2D9C MOVZ W8, 0x1
	0x037D2DA0 STRB W8, [X20 + 0x26F]
	0x037D2DA4 LDRB W8, [X19 + 0x200]
	0x037D2DA8 CBNZ W8, 0x37D2E74
	0x037D2DAC LDR X20, [X19 + 0x1F0]
	0x037D2DB0 CBNZ X20, 0x37D2DE4
	0x037D2DB4 ADRP X8, 0x976000
	0x037D2DB8 LDR X8, [X8 + 0x950]
	0x037D2DBC LDR X0, [X8]
	0x037D2DC0 BL 0x1C16F10
	0x037D2DC4 ADRP X8, 0x976000
	0x037D2DC8 LDR X8, [X8 + 0x968]
	0x037D2DCC MOV X1, X19
	0x037D2DD0 MOV X3, X31
	0x037D2DD4 MOV X20, X0
	0x037D2DD8 LDR X2, [X8]
	0x037D2DDC BL 0x2A76784
	0x037D2DE0 STR X20, [X19 + 0x1F0]
	0x037D2DE4 LDR X8, [X19 + 0x1F8]
	0x037D2DE8 CBNZ X8, 0x37D2E20
	0x037D2DEC ADRP X8, 0x976000
	0x037D2DF0 LDR X8, [X8 + 0x958]
	0x037D2DF4 LDR X0, [X8]
	0x037D2DF8 BL 0x1C16F10
	0x037D2DFC ADRP X8, 0x976000
	0x037D2E00 LDR X8, [X8 + 0x960]
	0x037D2E04 MOV X1, X31
	0x037D2E08 MOV X3, X31
	0x037D2E0C MOV X21, X0
	0x037D2E10 LDR X2, [X8]
	0x037D2E14 BL 0x2D39498
	0x037D2E18 LDR X20, [X19 + 0x1F0]
	0x037D2E1C STR X21, [X19 + 0x1F8]
	0x037D2E20 MOV X0, X20
	0x037D2E24 BL 0x37D6F38
	0x037D2E28 LDR X0, [X19 + 0x1F8]
	0x037D2E2C BL 0x37D7010
	0x037D2E30 ADRP X20, 0xC0F000
	0x037D2E34 ADRP X21, 0x976000
	0x037D2E38 LDRB W8, [X20 + 0x2E1]
	0x037D2E3C LDR X21, [X21 + 0x948]
	0x037D2E40 TBNZ X8, 0x0, 0x37D2E58
	0x037D2E44 ADRP X0, 0x976000
	0x037D2E48 LDR X0, [X0 + 0x948]
	0x037D2E4C BL 0x1C16CF4
	0x037D2E50 MOVZ W8, 0x1
	0x037D2E54 STRB W8, [X20 + 0x2E1]
	0x037D2E58 LDR X8, [X21]
	0x037D2E5C LDR X8, [X8 + 0xB8]
	0x037D2E60 LDR W8, [X8 + 0x164]
	0x037D2E64 ADD W0, W8, 0x1
	0x037D2E68 BL 0x37D710C
	0x037D2E6C MOVZ W8, 0x1
	0x037D2E70 STRB W8, [X19 + 0x200]
	0x037D2E74 LDP X20, X19, [X31 + 0x10]
	0x037D2E78 LDP X30, X21, [X31], #0x20
	0x037D2E7C RET
	0x037D2E80 STP X30, X21, [X31 - 0x20]!
	0x037D2E84 STP X20, X19, [X31 + 0x10]
	0x037D2E88 LDRB W8, [X0 + 0x200]
	0x037D2E8C CBZ W8, 0x37D2EE4
	0x037D2E90 MOV X19, X0
	0x037D2E94 LDR X0, [X0 + 0x1F0]
	0x037D2E98 BL 0x37D71F8
	0x037D2E9C LDR X0, [X19 + 0x1F8]
	0x037D2EA0 BL 0x37D72E8
	0x037D2EA4 ADRP X20, 0xC0F000
	0x037D2EA8 ADRP X21, 0x976000
	0x037D2EAC LDRB W8, [X20 + 0x2E1]
	0x037D2EB0 LDR X21, [X21 + 0x948]
	0x037D2EB4 TBNZ X8, 0x0, 0x37D2ECC
	0x037D2EB8 ADRP X0, 0x976000
	0x037D2EBC LDR X0, [X0 + 0x948]
	0x037D2EC0 BL 0x1C16CF4
	0x037D2EC4 MOVZ W8, 0x1
	0x037D2EC8 STRB W8, [X20 + 0x2E1]
	0x037D2ECC LDR X8, [X21]
	0x037D2ED0 LDR X8, [X8 + 0xB8]
	0x037D2ED4 LDR W8, [X8 + 0x164]
	0x037D2ED8 SUB W0, W8, 0x1
	0x037D2EDC BL 0x37D710C
	0x037D2EE0 STRB W31, [X19 + 0x200]
	0x037D2EE4 LDP X20, X19, [X31 + 0x10]
	0x037D2EE8 LDP X30, X21, [X31], #0x20
	0x037D2EEC RET
	0x037D2EF0 LDR X0, [X0 + 0x88]
	0x037D2EF4 RET
	0x037D2EF8 STR X30, [X31 - 0x20]!
	0x037D2EFC STP X20, X19, [X31 + 0x10]
	0x037D2F00 MOV X20, X0
	0x037D2F04 LDR X0, [X0 + 0x88]
	0x037D2F08 MOV X19, X1
	0x037D2F0C STR X31, [X20 + 0x88]
	0x037D2F10 CBZ X0, 0x37D2F1C
	0x037D2F14 MOV X1, X31
	0x037D2F18 BL 0x3738478
	0x037D2F1C STR X19, [X20 + 0x88]
	0x037D2F20 CBZ X19, 0x37D2F38
	0x037D2F24 MOV X0, X19
	0x037D2F28 LDP X20, X19, [X31 + 0x10]
	0x037D2F2C MOV X1, X31
	0x037D2F30 LDR X30, [X31], #0x20
	0x037D2F34 B 0x37382CC
	0x037D2F38 LDP X20, X19, [X31 + 0x10]
	0x037D2F3C LDR X30, [X31], #0x20
	0x037D2F40 RET
	0x037D2F44 LDR X0, [X0 + 0x68]
	0x037D2F48 RET
	0x037D2F4C STR X1, [X0 + 0x68]
	0x037D2F50 RET
	0x037D2F54 LDR W0, [X0 + 0x28]
	0x037D2F58 RET
	0x037D2F5C STR X30, [X31 - 0x20]!
	0x037D2F60 STP X20, X19, [X31 + 0x10]
	0x037D2F64 LDR W8, [X0 + 0x28]
	0x037D2F68 CMP W8, W1
	0x037D2F6C B.EQ 0x37D2FA8
	0x037D2F70 LDRB W8, [X0 + 0x95]
	0x037D2F74 MOV X19, X0
	0x037D2F78 MOV W20, W1
	0x037D2F7C CBZ W8, 0x37D2FA4
	0x037D2F80 MOV X0, X19
	0x037D2F84 BL 0x37D2110
	0x037D2F88 LDRB W8, [X19 + 0x95]
	0x037D2F8C STR W20, [X19 + 0x28]
	0x037D2F90 CBZ W8, 0x37D2FA8
	0x037D2F94 MOV X0, X19
	0x037D2F98 LDP X20, X19, [X31 + 0x10]
	0x037D2F9C LDR X30, [X31], #0x20
	0x037D2FA0 B 0x37D1B18
	0x037D2FA4 STR W20, [X19 + 0x28]
	0x037D2FA8 LDP X20, X19, [X31 + 0x10]
	0x037D2FAC LDR X30, [X31], #0x20
	0x037D2FB0 RET
	0x037D2FB4 STP X30, X21, [X31 - 0x20]!
	0x037D2FB8 STP X20, X19, [X31 + 0x10]
	0x037D2FBC ADRP X21, 0xC0F000
	0x037D2FC0 ADRP X20, 0x976000
	0x037D2FC4 LDRB W8, [X21 + 0x24B]
	0x037D2FC8 LDR X20, [X20 + 0x970]
	0x037D2FCC MOV X19, X0
	0x037D2FD0 TBNZ X8, 0x0, 0x37D2FE8
	0x037D2FD4 ADRP X0, 0x976000
	0x037D2FD8 LDR X0, [X0 + 0x970]
	0x037D2FDC BL 0x1C16CF4
	0x037D2FE0 MOVZ W8, 0x1
	0x037D2FE4 STRB W8, [X21 + 0x24B]
	0x037D2FE8 LDR X0, [X19 + 0x50]
	0x037D2FEC LDR X1, [X20]
	0x037D2FF0 LDP X20, X19, [X31 + 0x10]
	0x037D2FF4 LDP X30, X21, [X31], #0x20
	0x037D2FF8 B 0x24FDAF8
	0x037D2FFC SUB X31, X31, 0x30
	0x037D3000 STP X2, X30, [X31 + 0x8]
	0x037D3004 STP X20, X19, [X31 + 0x20]
	0x037D3008 ADRP X20, 0xC0E000
	0x037D300C LDRB W8, [X20 + 0x24C]
	0x037D3010 MOV X19, X0
	0x037D3014 STR X1, [X31]

ISIL:
	001 Subtract X31, X31, 304
	002 Move [X31+208], X29
	003 Move [X31+224], X30
	004 Move [X31+232], X27
	005 Move [X31+240], X26
	006 Move [X31+248], X25
	007 Move [X31+256], X24
	008 Move [X31+264], X23
	009 Move [X31+272], X22
	010 Move [X31+280], X21
	011 Move [X31+288], X20
	012 Move [X31+296], X19
	013 Move X20, 0xC10000
	014 Move W8, [X20+611]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {49}
	020 Move X0, 0x926000
	021 Move X0, [X0+984]
	022 Call 0x1C17CF4
	023 Move X0, 0x977000
	024 Move X0, [X0+2288]
	025 Call 0x1C17CF4
	026 Move X0, 0x922000
	027 Move X0, [X0+1432]
	028 Call 0x1C17CF4
	029 Move X0, 0x977000
	030 Move X0, [X0+2296]
	031 Call 0x1C17CF4
	032 Move X0, 0x977000
	033 Move X0, [X0+2304]
	034 Call 0x1C17CF4
	035 Move X0, 0x949000
	036 Move X0, [X0+4072]
	037 Call 0x1C17CF4
	038 Move X0, 0x977000
	039 Move X0, [X0+2312]
	040 Call 0x1C17CF4
	041 Move X0, 0x974000
	042 Move X0, [X0+264]
	043 Call 0x1C17CF4
	044 Move X0, 0x977000
	045 Move X0, [X0+2320]
	046 Call 0x1C17CF4
	047 Move W8, 1
	048 Move [X20+611], W8
	049 Move [X31+192], X31
	050 Move [X31+200], X31
	051 Move [X31+176], X31
	052 Move [X31+184], X31
	053 Move W8, [X19+150]
	054 Compare W8, 0
	055 JumpIfNotEqual {357}
	056 Move X24, 0x922000
	057 Move X24, [X24+1432]
	058 Move X20, [X19+32]
	059 Move X0, [X24]
	060 Move W8, [X0+224]
	061 Compare W8, 0
	062 JumpIfNotEqual {64}
	063 Call 0x1C17DFC
	064 Move X0, X20
	065 Move X1, X31
	066 Move X2, X31
	067 Call Object.op_Equality, X0, X1
	068 Move TEMP, X0
	069 And TEMP, TEMP, 1
	070 Compare TEMP, 1
	071 JumpIfEqual {357}
	072 Move X23, 0x977000
	073 Move X23, [X23+2296]
	074 Move W22, W31
	075 Move X0, [X23]
	076 Move W8, [X0+224]
	077 Compare W8, 0
	078 JumpIfNotEqual {81}
	079 Call 0x1C17DFC
	080 Move X0, [X23]
	081 Move X8, [X0+184]
	082 Move W9, [X8]
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Move W9, [X0+224]
	085 Compare W9, 0
	086 JumpIfNotEqual {90}
	087 Call 0x1C17DFC
	088 Move X8, [X23]
	089 Move X8, [X8+184]
	090 Move X8, [X8+8]
	091 Compare X8, 0
	092 JumpIfEqual {370}
	093 Move W9, [X8+24]
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Move X25, W22
	096 Add X8, X8, X25
	097 Move X8, [X8+32]
	098 Compare X8, 0
	099 JumpIfEqual {370}
	100 Move X0, [X24]
	101 Move X20, [X8+32]
	102 Move X21, [X19+32]
	103 Move W8, [X0+224]
	104 Compare W8, 0
	105 JumpIfNotEqual {107}
	106 Call 0x1C17DFC
	107 Move X0, X20
	108 Move X1, X21
	109 Move X2, X31
	110 Call Object.op_Equality, X0, X1
	111 Move TEMP, X0
	112 And TEMP, TEMP, 1
	113 Compare TEMP, 1
	114 JumpIfNotEqual {142}
	115 Move X0, [X23]
	116 Move W8, [X0+224]
	117 Compare W8, 0
	118 JumpIfNotEqual {121}
	119 Call 0x1C17DFC
	120 Move X0, [X23]
	121 Move X8, [X0+184]
	122 Move X8, [X8+8]
	123 Compare X8, 0
	124 JumpIfEqual {370}
	125 Move W9, [X8+24]
	126 NotImplemented "Instruction CMP not yet implemented."
	127 Move X0, [X24]
	128 Add X8, X8, X25
	129 Move X20, [X8+32]
	130 Move W9, [X0+224]
	131 Compare W9, 0
	132 JumpIfNotEqual {134}
	133 Call 0x1C17DFC
	134 Move X0, X20
	135 Move X1, X19
	136 Move X2, X31
	137 Call Object.op_Inequality, X0, X1
	138 Move TEMP, X0
	139 And TEMP, TEMP, 1
	140 Compare TEMP, 1
	141 JumpIfEqual {143}
	142 Add W22, W22, 1
	143 Move X0, [X24]
	144 Move X20, [X19+32]
	145 Move W8, [X0+224]
	146 Compare W8, 0
	147 JumpIfNotEqual {149}
	148 Call 0x1C17DFC
	149 Move X8, 0x977000
	150 Move X8, [X8+2288]
	151 Move X0, X20
	152 Move X1, [X8]
	153 Call 0x222E35C, X0
	154 Move [X19+32], X0
	155 Compare X20, 0
	156 JumpIfEqual {370}
	157 Move X0, X20
	158 Move X1, X31
	159 Call InputActionAsset.get_actionMaps, X0
	160 Move X8, X1
	161 ShiftRight X8, 32
	162 And X8, X8, 0x7FFFFFFF
	163 NotImplemented "Instruction CMP not yet implemented."
	164 Move [X31+192], X0
	165 Move [X31+200], X1
	166 Move X25, 0x977000
	167 Move X26, 0x974000
	168 Move X25, [X25+2312]
	169 Move X26, [X26+264]
	170 Move W21, W31
	171 Move X0, X20
	172 Move X1, X31
	173 Call InputActionAsset.get_actionMaps, X0
	174 Move X2, [X25]
	175 Move [X31+192], X0
	176 Move [X31+200], X1
	177 Add X0, X31, 192
	178 Move W1, W21
	179 Call ReadOnlyArray`1<Object>.get_Item, X0, X1
	180 Compare X0, 0
	181 JumpIfEqual {370}
	182 Move W22, W31
	183 Move X1, X31
	184 Call InputActionMap.get_bindings, X0
	185 Move X8, X1
	186 ShiftRight X8, 32
	187 And X8, X8, 0x7FFFFFFF
	188 NotImplemented "Instruction CMP not yet implemented."
	189 Move [X31+176], X0
	190 Move [X31+184], X1
	191 Move X0, [X19+32]
	192 Compare X0, 0
	193 JumpIfEqual {370}
	194 Move X1, X31
	195 Call InputActionAsset.get_actionMaps, X0
	196 Move X2, [X25]
	197 Move [X31+192], X0
	198 Move [X31+200], X1
	199 Add X0, X31, 192
	200 Move W1, W21
	201 Call ReadOnlyArray`1<Object>.get_Item, X0, X1
	202 Move X23, X0
	203 Move X0, X20
	204 Move X1, X31
	205 Call InputActionAsset.get_actionMaps, X0
	206 Move X2, [X25]
	207 Move [X31+192], X0
	208 Move [X31+200], X1
	209 Add X0, X31, 192
	210 Move W1, W21
	211 Call ReadOnlyArray`1<Object>.get_Item, X0, X1
	212 Compare X0, 0
	213 JumpIfEqual {370}
	214 Move X1, X31
	215 Call InputActionMap.get_bindings, X0
	216 Move X2, [X26]
	217 Move [X31+176], X0
	218 Move [X31+184], X1
	219 Add X8, X31, 88
	220 Add X0, X31, 176
	221 Move W1, W22
	222 Call 0x24FD334, X0, X1
	223 Add X0, X31, 0
	224 Add X1, X31, 88
	225 Move W2, 88
	226 Call 0x3EB2AC0
	227 Add X2, X31, 0
	228 Move X0, X23
	229 Move W1, W22
	230 Move X3, X31
	231 Call InputActionRebindingExtensions.ApplyBindingOverride, X0, X1, X2
	232 Move X0, X20
	233 Move X1, X31
	234 Add W22, W22, 1
	235 Call InputActionAsset.get_actionMaps, X0
	236 Move X2, [X25]
	237 Move [X31+192], X0
	238 Move [X31+200], X1
	239 Add X0, X31, 192
	240 Move W1, W21
	241 Call ReadOnlyArray`1<Object>.get_Item, X0, X1
	242 Compare X0, 0
	243 JumpIfNotEqual {183}
	244 Move X0, X20
	245 Move X1, X31
	246 Add W21, W21, 1
	247 Call InputActionAsset.get_actionMaps, X0
	248 Move X8, X1
	249 ShiftRight X8, 32
	250 And X8, X8, 0x7FFFFFFF
	251 NotImplemented "Instruction CMP not yet implemented."
	252 Move [X31+192], X0
	253 Move [X31+200], X1
	254 Move X0, [X24]
	255 Move X20, [X19+48]
	256 Move W8, [X0+224]
	257 Compare W8, 0
	258 JumpIfNotEqual {260}
	259 Call 0x1C17DFC
	260 Move X0, X20
	261 Move X1, X31
	262 Move X2, X31
	263 Call Object.op_Inequality, X0, X1
	264 Move TEMP, X0
	265 And TEMP, TEMP, 1
	266 Compare TEMP, 1
	267 JumpIfNotEqual {274}
	268 Move X0, [X19+48]
	269 Compare X0, 0
	270 JumpIfEqual {370}
	271 Move X1, [X19+32]
	272 Move X2, X31
	273 Call InputSystemUIInputModule.set_actionsAsset, X0, X1
	274 Move W8, [X19+40]
	275 NotImplemented "Instruction CMP not yet implemented."
	276 NotImplemented "Instruction CMP not yet implemented."
	277 Move X0, X19
	278 Call PlayerInput.InstallOnActionTriggeredHook, X0
	279 Move X0, X19
	280 Call PlayerInput.InstallOnActionTriggeredHook, X0
	281 Move X8, [X19+152]
	282 Compare X8, 0
	283 JumpIfNotEqual {355}
	284 Move X0, X19
	285 Call PlayerInput.CacheMessageNames, X0
	286 Move X23, [X19+80]
	287 Compare X23, 0
	288 JumpIfEqual {355}
	289 Move W8, [X23+24]
	290 NotImplemented "Instruction CMP not yet implemented."
	291 Move X26, 0x926000
	292 Move X27, 0x977000
	293 Move X26, [X26+984]
	294 Move X27, [X27+2320]
	295 Move X24, X31
	296 Add X25, X23, 32
	297 NotImplemented "Instruction CMP not yet implemented."
	298 Move X20, [X25]
	299 Compare X20, 0
	300 JumpIfEqual {370}
	301 Move X21, [X20+48]
	302 Move X1, X31
	303 Move X0, X21
	304 Call String.IsNullOrEmpty, X0
	305 Move TEMP, X0
	306 And TEMP, TEMP, 1
	307 Compare TEMP, 1
	308 JumpIfEqual {352}
	309 Move X0, [X19+32]
	310 Compare X0, 0
	311 JumpIfEqual {370}
	312 Move X1, X21
	313 Move W2, W31
	314 Move X3, X31
	315 Call InputActionAsset.FindAction, X0, X1, X2
	316 Compare X0, 0
	317 JumpIfEqual {352}
	318 Move X21, X0
	319 Move X0, [X26]
	320 Call 0x1C17F10
	321 Move X2, [X27]
	322 Move X1, X20
	323 Move X3, X31
	324 Move X22, X0
	325 Call Action`1<CallbackContext>..ctor, X0, X1, X2
	326 Move X0, X21
	327 Move X1, X22
	328 Move X2, X31
	329 Call InputAction.add_performed, X0, X1
	330 Move X0, [X26]
	331 Call 0x1C17F10
	332 Move X2, [X27]
	333 Move X1, X20
	334 Move X3, X31
	335 Move X22, X0
	336 Call Action`1<CallbackContext>..ctor, X0, X1, X2
	337 Move X0, X21
	338 Move X1, X22
	339 Move X2, X31
	340 Call InputAction.add_canceled, X0, X1
	341 Move X0, [X26]
	342 Call 0x1C17F10
	343 Move X2, [X27]
	344 Move X1, X20
	345 Move X3, X31
	346 Move X22, X0
	347 Call Action`1<CallbackContext>..ctor, X0, X1, X2
	348 Move X0, X21
	349 Move X1, X22
	350 Move X2, X31
	351 Call InputAction.add_started, X0, X1
	352 Move W8, [X23+24]
	353 Add X24, X24, 1
	354 NotImplemented "Instruction CMP not yet implemented."
	355 Move W8, 1
	356 Move [X19+150], W8
	357 Move X20, [X31+288]
	358 Move X19, [X31+296]
	359 Move X22, [X31+272]
	360 Move X21, [X31+280]
	361 Move X24, [X31+256]
	362 Move X23, [X31+264]
	363 Move X26, [X31+240]
	364 Move X25, [X31+248]
	365 Move X30, [X31+224]
	366 Move X27, [X31+232]
	367 Move X29, [X31+208]
	368 Add X31, X31, 304
	369 Return 
	370 Call 0x1C17F20
	371 Call 0x1C17F28

Method: System.Void UninitializeActions()

Disassembly:
	0x037D3110 MOV X0, X19
	0x037D3114 LDP X20, X19, [X31 + 0x10]
	0x037D3118 LDP X30, X21, [X31], #0x20
	0x037D311C B 0x2729B5C
	0x037D3120 STR X30, [X31 - 0x20]!
	0x037D3124 STP X20, X19, [X31 + 0x10]
	0x037D3128 ADRP X20, 0xC0E000
	0x037D312C LDRB W8, [X20 + 0x24E]
	0x037D3130 MOV X19, X0
	0x037D3134 TBNZ X8, 0x0, 0x37D314C
	0x037D3138 ADRP X0, 0x975000
	0x037D313C LDR X0, [X0 + 0x990]
	0x037D3140 BL 0x1C16CF4
	0x037D3144 MOVZ W8, 0x1
	0x037D3148 STRB W8, [X20 + 0x24E]
	0x037D314C LDR X20, [X19 + 0x40]
	0x037D3150 CBNZ X20, 0x37D3170
	0x037D3154 ADRP X8, 0x975000
	0x037D3158 LDR X8, [X8 + 0x990]
	0x037D315C LDR X0, [X8]
	0x037D3160 BL 0x1C16F10
	0x037D3164 MOV X20, X0
	0x037D3168 BL 0x37D3180
	0x037D316C STR X20, [X19 + 0x40]
	0x037D3170 MOV X0, X20
	0x037D3174 LDP X20, X19, [X31 + 0x10]
	0x037D3178 LDR X30, [X31], #0x20
	0x037D317C RET
	0x037D3180 STP X30, X21, [X31 - 0x20]!
	0x037D3184 STP X20, X19, [X31 + 0x10]
	0x037D3188 ADRP X20, 0xC0E000
	0x037D318C ADRP X21, 0x975000
	0x037D3190 LDRB W8, [X20 + 0x281]
	0x037D3194 LDR X21, [X21 + 0x988]
	0x037D3198 MOV X19, X0
	0x037D319C TBNZ X8, 0x0, 0x37D31B4
	0x037D31A0 ADRP X0, 0x975000
	0x037D31A4 LDR X0, [X0 + 0x988]
	0x037D31A8 BL 0x1C16CF4
	0x037D31AC MOVZ W8, 0x1
	0x037D31B0 STRB W8, [X20 + 0x281]
	0x037D31B4 LDR X1, [X21]
	0x037D31B8 MOV X0, X19
	0x037D31BC LDP X20, X19, [X31 + 0x10]
	0x037D31C0 LDP X30, X21, [X31], #0x20
	0x037D31C4 B 0x2729B5C
	0x037D31C8 STR X30, [X31 - 0x20]!
	0x037D31CC STP X20, X19, [X31 + 0x10]
	0x037D31D0 ADRP X20, 0xC0E000
	0x037D31D4 LDRB W8, [X20 + 0x24F]
	0x037D31D8 MOV X19, X0
	0x037D31DC TBNZ X8, 0x0, 0x37D31F4
	0x037D31E0 ADRP X0, 0x975000
	0x037D31E4 LDR X0, [X0 + 0x998]
	0x037D31E8 BL 0x1C16CF4
	0x037D31EC MOVZ W8, 0x1
	0x037D31F0 STRB W8, [X20 + 0x24F]
	0x037D31F4 LDR X20, [X19 + 0x48]
	0x037D31F8 CBNZ X20, 0x37D3218
	0x037D31FC ADRP X8, 0x975000
	0x037D3200 LDR X8, [X8 + 0x998]
	0x037D3204 LDR X0, [X8]
	0x037D3208 BL 0x1C16F10
	0x037D320C MOV X20, X0
	0x037D3210 BL 0x37D3228
	0x037D3214 STR X20, [X19 + 0x48]
	0x037D3218 MOV X0, X20
	0x037D321C LDP X20, X19, [X31 + 0x10]
	0x037D3220 LDR X30, [X31], #0x20
	0x037D3224 RET
	0x037D3228 STP X30, X21, [X31 - 0x20]!
	0x037D322C STP X20, X19, [X31 + 0x10]
	0x037D3230 ADRP X20, 0xC0E000
	0x037D3234 ADRP X21, 0x975000
	0x037D3238 LDRB W8, [X20 + 0x282]
	0x037D323C LDR X21, [X21 + 0x988]
	0x037D3240 MOV X19, X0
	0x037D3244 TBNZ X8, 0x0, 0x37D325C
	0x037D3248 ADRP X0, 0x975000
	0x037D324C LDR X0, [X0 + 0x988]
	0x037D3250 BL 0x1C16CF4
	0x037D3254 MOVZ W8, 0x1
	0x037D3258 STRB W8, [X20 + 0x282]
	0x037D325C LDR X1, [X21]
	0x037D3260 MOV X0, X19
	0x037D3264 LDP X20, X19, [X31 + 0x10]
	0x037D3268 LDP X30, X21, [X31], #0x20
	0x037D326C B 0x2729B5C
	0x037D3270 STP X30, X21, [X31 - 0x20]!
	0x037D3274 STP X20, X19, [X31 + 0x10]
	0x037D3278 ADRP X21, 0xC0E000
	0x037D327C LDRB W8, [X21 + 0x250]
	0x037D3280 MOV X19, X1
	0x037D3284 MOV X20, X0
	0x037D3288 TBNZ X8, 0x0, 0x37D32A0
	0x037D328C ADRP X0, 0x971000
	0x037D3290 LDR X0, [X0 + 0xF80]
	0x037D3294 BL 0x1C16CF4
	0x037D3298 MOVZ W8, 0x1
	0x037D329C STRB W8, [X21 + 0x250]
	0x037D32A0 CBZ X19, 0x37D32C4
	0x037D32A4 ADRP X8, 0x971000
	0x037D32A8 LDR X8, [X8 + 0xF80]
	0x037D32AC ADD X0, X20, 0x1A0
	0x037D32B0 MOV X1, X19
	0x037D32B4 LDP X20, X19, [X31 + 0x10]
	0x037D32B8 LDR X2, [X8]
	0x037D32BC LDP X30, X21, [X31], #0x20
	0x037D32C0 B 0x28F14E0
	0x037D32C4 ADRP X0, 0x925000
	0x037D32C8 LDR X0, [X0 + 0x528]
	0x037D32CC BL 0x1C16D08
	0x037D32D0 BL 0x1C16F10
	0x037D32D4 MOV X19, X0

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X20, 0xC0F000
	012 Move W8, [X20+612]
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0x925000
	019 Move X0, [X0+984]
	020 Call 0x1C17CF4
	021 Move X0, 0x921000
	022 Move X0, [X0+1432]
	023 Call 0x1C17CF4
	024 Move X0, 0x976000
	025 Move X0, [X0+2320]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X20+612], W8
	029 Move W8, [X19+150]
	030 Compare W8, 0
	031 JumpIfEqual {123}
	032 Move X8, 0x921000
	033 Move X8, [X8+1432]
	034 Move X20, [X19+32]
	035 Move X0, [X8]
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {40}
	039 Call 0x1C17DFC
	040 Move X0, X20
	041 Move X1, X31
	042 Move X2, X31
	043 Call Object.op_Equality, X0, X1
	044 Move TEMP, X0
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfEqual {123}
	048 Move X0, X19
	049 Call PlayerInput.UninstallOnActionTriggeredHook, X0
	050 Move W8, [X19+40]
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move X23, [X19+80]
	053 Compare X23, 0
	054 JumpIfEqual {121}
	055 Move W8, [X23+24]
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move X26, 0x925000
	058 Move X27, 0x976000
	059 Move X26, [X26+984]
	060 Move X27, [X27+2320]
	061 Move X24, X31
	062 Add X25, X23, 32
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move X20, [X25]
	065 Compare X20, 0
	066 JumpIfEqual {134}
	067 Move X21, [X20+48]
	068 Move X1, X31
	069 Move X0, X21
	070 Call String.IsNullOrEmpty, X0
	071 Move TEMP, X0
	072 And TEMP, TEMP, 1
	073 Compare TEMP, 1
	074 JumpIfEqual {118}
	075 Move X0, [X19+32]
	076 Compare X0, 0
	077 JumpIfEqual {134}
	078 Move X1, X21
	079 Move W2, W31
	080 Move X3, X31
	081 Call InputActionAsset.FindAction, X0, X1, X2
	082 Compare X0, 0
	083 JumpIfEqual {118}
	084 Move X21, X0
	085 Move X0, [X26]
	086 Call 0x1C17F10
	087 Move X2, [X27]
	088 Move X1, X20
	089 Move X3, X31
	090 Move X22, X0
	091 Call Action`1<CallbackContext>..ctor, X0, X1, X2
	092 Move X0, X21
	093 Move X1, X22
	094 Move X2, X31
	095 Call InputAction.remove_performed, X0, X1
	096 Move X0, [X26]
	097 Call 0x1C17F10
	098 Move X2, [X27]
	099 Move X1, X20
	100 Move X3, X31
	101 Move X22, X0
	102 Call Action`1<CallbackContext>..ctor, X0, X1, X2
	103 Move X0, X21
	104 Move X1, X22
	105 Move X2, X31
	106 Call InputAction.remove_canceled, X0, X1
	107 Move X0, [X26]
	108 Call 0x1C17F10
	109 Move X2, [X27]
	110 Move X1, X20
	111 Move X3, X31
	112 Move X22, X0
	113 Call Action`1<CallbackContext>..ctor, X0, X1, X2
	114 Move X0, X21
	115 Move X1, X22
	116 Move X2, X31
	117 Call InputAction.remove_started, X0, X1
	118 Move W8, [X23+24]
	119 Add X24, X24, 1
	120 NotImplemented "Instruction CMP not yet implemented."
	121 Move [X19+136], X31
	122 Move [X19+150], W31
	123 Move X20, [X31+64]
	124 Move X19, [X31+72]
	125 Move X22, [X31+48]
	126 Move X21, [X31+56]
	127 Move X24, [X31+32]
	128 Move X23, [X31+40]
	129 Move X26, [X31+16]
	130 Move X25, [X31+24]
	131 Move X30, [X31+80]
	132 Move X27, [X31+88]
	133 Return 
	134 Call 0x1C17F20
	135 Call 0x1C17F28

Method: System.Void InstallOnActionTriggeredHook()

Disassembly:
	0x037D5D84 MOV X2, X31
	0x037D5D88 BL 0x3C3883C
	0x037D5D8C TBNZ X0, 0x0, 0x37D5DF4
	0x037D5D90 LDR X0, [X20 + 0x20]
	0x037D5D94 CBZ X0, 0x37D5E10
	0x037D5D98 MOV X1, X31
	0x037D5D9C BL 0x3736750
	0x037D5DA0 UBFM X8, X1, 0x20, 0x3F
	0x037D5DA4 CMP W8, 0x1
	0x037D5DA8 STP X0, X1, [X31]
	0x037D5DAC B.LT 0x37D5DF4
	0x037D5DB0 ADRP X21, 0x973000
	0x037D5DB4 LDR X21, [X21 + 0x908]
	0x037D5DB8 MOV W20, W31
	0x037D5DBC LDR X2, [X21]
	0x037D5DC0 ADD X0, X31, 0x0
	0x037D5DC4 MOV W1, W20
	0x037D5DC8 BL 0x24FDB3C
	0x037D5DCC CBZ X0, 0x37D5E10
	0x037D5DD0 MOV X1, X19
	0x037D5DD4 MOV X2, X31
	0x037D5DD8 BL 0x3738058
	0x037D5DDC LDR W8, [X31 + 0xC]
	0x037D5DE0 ADD W20, W20, 0x1
	0x037D5DE4 CMP W20, W8
	0x037D5DE8 B.GE 0x37D5DF8
	0x037D5DEC TBZ X0, 0x0, 0x37D5DBC
	0x037D5DF0 B 0x37D5DF8
	0x037D5DF4 MOV W0, W31
	0x037D5DF8 LDP X20, X19, [X31 + 0x30]
	0x037D5DFC LDP X22, X21, [X31 + 0x20]
	0x037D5E00 LDR X30, [X31 + 0x10]
	0x037D5E04 AND W0, W0, 0x1
	0x037D5E08 ADD X31, X31, 0x40
	0x037D5E0C RET
	0x037D5E10 BL 0x1C16F20
	0x037D5E14 SUB X31, X31, 0x180
	0x037D5E18 STP X29, X30, [X31 + 0x130]
	0x037D5E1C STP X26, X25, [X31 + 0x140]
	0x037D5E20 STP X24, X23, [X31 + 0x150]
	0x037D5E24 STP X22, X21, [X31 + 0x160]
	0x037D5E28 STP X20, X19, [X31 + 0x170]
	0x037D5E2C ADRP X20, 0xC0C000
	0x037D5E30 ADRP X24, 0x973000
	0x037D5E34 LDRB W8, [X20 + 0x2E4]
	0x037D5E38 LDR X24, [X24 + 0x948]
	0x037D5E3C MOV X19, X1
	0x037D5E40 MOV X21, X0
	0x037D5E44 TBNZ X8, 0x0, 0x37D5E8C
	0x037D5E48 ADRP X0, 0x973000
	0x037D5E4C LDR X0, [X0 + 0xAC8]
	0x037D5E50 BL 0x1C16CF4
	0x037D5E54 ADRP X0, 0x973000
	0x037D5E58 LDR X0, [X0 + 0x948]
	0x037D5E5C BL 0x1C16CF4
	0x037D5E60 ADRP X0, 0x970000
	0x037D5E64 LDR X0, [X0 + 0x48]
	0x037D5E68 BL 0x1C16CF4
	0x037D5E6C ADRP X0, 0x970000
	0x037D5E70 LDR X0, [X0 + 0x9B8]
	0x037D5E74 BL 0x1C16CF4
	0x037D5E78 ADRP X0, 0x973000
	0x037D5E7C LDR X0, [X0 + 0x930]
	0x037D5E80 BL 0x1C16CF4
	0x037D5E84 MOVZ W8, 0x1
	0x037D5E88 STRB W8, [X20 + 0x2E4]
	0x037D5E8C MOV X0, X21
	0x037D5E90 BL 0x37DFF1C
	0x037D5E94 LDR X8, [X24]
	0x037D5E98 LDR X8, [X8 + 0xB8]
	0x037D5E9C LDR X8, [X8 + 0x20]
	0x037D5EA0 CBZ X8, 0x37D6148
	0x037D5EA4 LDR W9, [X8 + 0x18]
	0x037D5EA8 MOV W20, W0
	0x037D5EAC CMP W0, W9
	0x037D5EB0 B.CS 0x37D6144
	0x037D5EB4 SXTW X25, W20
	0x037D5EB8 MOVZ W9, 0xB8
	0x037D5EBC MADD X9, X25, X9, X8
	0x037D5EC0 LDR X22, [X9 + 0x50]
	0x037D5EC4 CMP X22, X19
	0x037D5EC8 B.EQ 0x37D6128
	0x037D5ECC CBZ X22, 0x37D5FEC
	0x037D5ED0 STP X31, X31, [X31 + 0xB8]
	0x037D5ED4 STR X31, [X31 + 0xC8]
	0x037D5ED8 ADRP X23, 0x973000
	0x037D5EDC LDR X8, [X22]
	0x037D5EE0 LDR X23, [X23 + 0xAC8]
	0x037D5EE4 LDRH W9, [X8 + 0x12E]
	0x037D5EE8 LDR X1, [X23]
	0x037D5EEC CBZ X9, 0x37D5F10
	0x037D5EF0 LDR X10, [X8 + 0xB0]
	0x037D5EF4 ADD X10, X10, 0x8
	0x037D5EF8 LDUR X11, [X10 - 0x8]
	0x037D5EFC CMP X11, X1
	0x037D5F00 B.EQ 0x37D5F20
	0x037D5F04 SUBS X9, X9, 0x1
	0x037D5F08 ADD X10, X10, 0x10
	0x037D5F0C B.NE 0x37D5EF8
	0x037D5F10 MOVZ W2, 0x3
	0x037D5F14 MOV X0, X22
	0x037D5F18 BL 0x1C5C788
	0x037D5F1C B 0x37D5F30
	0x037D5F20 LDR W9, [X10]
	0x037D5F24 ADD W9, W9, 0x3
	0x037D5F28 ADD X8, X8, W9, 0x4, SXTW
	0x037D5F2C ADD X0, X8, 0x138
	0x037D5F30 LDUR V0, [X31 + 0xB8]
	0x037D5F34 LDR X8, [X31 + 0xC8]
	0x037D5F38 LDR X9, [X0]
	0x037D5F3C ADD X1, X31, 0xD0
	0x037D5F40 STR V0, [X31 + 0xD]
	0x037D5F44 STR X8, [X31 + 0xE0]
	0x037D5F48 LDR X2, [X0 + 0x8]
	0x037D5F4C MOV X0, X22
	0x037D5F50 BLR X9

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+56], X23
	004 Move [X31+64], X22
	005 Move [X31+72], X21
	006 Move [X31+80], X20
	007 Move [X31+88], X19
	008 Move X20, 0xC0D000
	009 Move W8, [X20+613]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {35}
	015 Move X0, 0x923000
	016 Move X0, [X0+984]
	017 Call 0x1C17CF4
	018 Move X0, 0x971000
	019 Move X0, [X0+24]
	020 Call 0x1C17CF4
	021 Move X0, 0x971000
	022 Move X0, [X0+32]
	023 Call 0x1C17CF4
	024 Move X0, 0x971000
	025 Move X0, [X0+40]
	026 Call 0x1C17CF4
	027 Move X0, 0x974000
	028 Move X0, [X0+2688]
	029 Call 0x1C17CF4
	030 Move X0, 0x971000
	031 Move X0, [X0+16]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X20+613], W8
	035 Move [X31+24], X31
	036 Move [X31+32], X31
	037 Move [X31+40], X31
	038 Move X8, [X19+168]
	039 Compare X8, 0
	040 JumpIfNotEqual {53}
	041 Move X8, 0x923000
	042 Move X8, [X8+984]
	043 Move X0, [X8]
	044 Call 0x1C17F10
	045 Move X8, 0x974000
	046 Move X8, [X8+2688]
	047 Move X1, X19
	048 Move X3, X31
	049 Move X20, X0
	050 Move X2, [X8]
	051 Call Action`1<CallbackContext>..ctor, X0, X1, X2
	052 Move [X19+168], X20
	053 Move X0, [X19+32]
	054 Compare X0, 0
	055 JumpIfEqual {100}
	056 Move X23, 0x971000
	057 Move X21, 0x971000
	058 Move X22, 0x971000
	059 Move X20, 0x971000
	060 Move X23, [X23+16]
	061 Move X21, [X21+32]
	062 Move X22, [X22+40]
	063 Move X20, [X20+24]
	064 Move X1, X31
	065 Call InputActionAsset.get_actionMaps, X0
	066 Move X9, [X23]
	067 Move [X31+8], X0
	068 Move [X31+16], X1
	069 Add X8, X31, 24
	070 Add X0, X31, 8
	071 Move X1, X9
	072 Call ReadOnlyArray`1<Object>.GetEnumerator, X0
	073 Move X1, [X21]
	074 Add X0, X31, 24
	075 Call Enumerator<Object>.MoveNext, X0
	076 Move TEMP, X0
	077 And TEMP, TEMP, 1
	078 Compare TEMP, 1
	079 JumpIfNotEqual {88}
	080 Move X1, [X22]
	081 Add X0, X31, 24
	082 Call Enumerator<Object>.get_Current, X0
	083 Compare X0, 0
	084 JumpIfEqual {99}
	085 Move X1, [X19+168]
	086 Move X2, X31
	087 Call InputActionMap.add_actionTriggered, X0, X1
	088 Move X1, [X20]
	089 Add X0, X31, 24
	090 Call Enumerator<Object>.Dispose, X0
	091 Move X20, [X31+80]
	092 Move X19, [X31+88]
	093 Move X22, [X31+64]
	094 Move X21, [X31+72]
	095 Move X30, [X31+48]
	096 Move X23, [X31+56]
	097 Add X31, X31, 96
	098 Return 
	099 Call 0x1C17F20
	100 Call 0x1C17F20
	101 Move X19, X0
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Move X0, X19
	104 Call 0x3EB2AD0
	105 Move X20, [X0]
	106 Call 0x3EB2AE0
	107 Move X8, 0x971000
	108 Move X8, [X8+24]
	109 Add X0, X31, 24
	110 Move X1, [X8]
	111 Call Enumerator<Object>.Dispose, X0
	112 Compare X20, 0
	113 JumpIfEqual {91}
	114 Move X0, X20
	115 Call 0x1C17F18
	116 Move X20, X31
	117 Move X19, X0
	118 Move X8, 0x971000
	119 Move X8, [X8+24]
	120 Move X1, [X8]
	121 Add X0, X31, 24
	122 Call Enumerator<Object>.Dispose, X0
	123 Compare X20, 0
	124 JumpIfNotEqual {127}
	125 Move X0, X19
	126 Call 0x1D2D690
	127 Move X0, X20
	128 Call 0x1C17F18
	129 Call 0x1991590

Method: System.Void UninstallOnActionTriggeredHook()

Disassembly:
	0x037D631C CMP W0, W9
	0x037D6320 B.CS 0x37D6444
	0x037D6324 SXTW X23, W20
	0x037D6328 MOVZ W9, 0xB8
	0x037D632C MADD X9, X23, X9, X8
	0x037D6330 LDUR V0, [X9 + 0x68]
	0x037D6334 LDUR V1, [X9 + 0x59]
	0x037D6338 ADD X8, X31, 0xB0
	0x037D633C LDRB W9, [X9 + 0x58]
	0x037D6340 STUR V0, [X8 + 0xF]
	0x037D6344 STR V1, [X31 + 0xB]
	0x037D6348 LDR X10, [X19 + 0x10]
	0x037D634C LDR V0, [X19]
	0x037D6350 STR X10, [X31 + 0xA0]
	0x037D6354 STR V0, [X31 + 0x9]
	0x037D6358 CBZ W9, 0x37D63E8
	0x037D635C LDUR V0, [X8 + 0x7]
	0x037D6360 LDUR X8, [X8 + 0x17]
	0x037D6364 LDR V1, [X31 + 0x9]
	0x037D6368 LDR X9, [X31 + 0xA0]
	0x037D636C ADD X0, X31, 0x70
	0x037D6370 ADD X1, X31, 0x50
	0x037D6374 MOV X2, X31
	0x037D6378 STR V0, [X31 + 0x7]
	0x037D637C STR X8, [X31 + 0x80]
	0x037D6380 STR V1, [X31 + 0x5]
	0x037D6384 STR X9, [X31 + 0x60]
	0x037D6388 BL 0x376B980
	0x037D638C TBNZ X0, 0x0, 0x37D63E8
	0x037D6390 LDR X8, [X19 + 0x10]
	0x037D6394 LDR V0, [X19]
	0x037D6398 ADD X0, X31, 0x30
	0x037D639C ADD X1, X31, 0x18
	0x037D63A0 MOV X2, X31
	0x037D63A4 STP X31, X31, [X31 + 0x20]
	0x037D63A8 STR X8, [X31 + 0x40]
	0x037D63AC STR V0, [X31 + 0x3]
	0x037D63B0 STR X31, [X31 + 0x18]
	0x037D63B4 BL 0x376B950
	0x037D63B8 TBZ X0, 0x0, 0x37D6414
	0x037D63BC LDR X8, [X22]
	0x037D63C0 LDR X8, [X8 + 0xB8]
	0x037D63C4 LDR X8, [X8 + 0x20]
	0x037D63C8 CBZ X8, 0x37D6440
	0x037D63CC LDR W9, [X8 + 0x18]
	0x037D63D0 CMP W20, W9
	0x037D63D4 B.CS 0x37D6444
	0x037D63D8 MOVZ W9, 0xB8
	0x037D63DC MADD X8, X23, X9, X8
	0x037D63E0 LDRB W8, [X8 + 0x58]
	0x037D63E4 CBZ W8, 0x37D6414
	0x037D63E8 LDR X8, [X19 + 0x10]
	0x037D63EC LDR V0, [X19]
	0x037D63F0 ADD X2, X31, 0x0
	0x037D63F4 MOV W1, W20
	0x037D63F8 STR X8, [X31 + 0x10]
	0x037D63FC STR V0, [X31]
	0x037D6400 BL 0x37E0978
	0x037D6404 MOVZ W1, 0xB
	0x037D6408 MOV W0, W20
	0x037D640C MOV X2, X31
	0x037D6410 BL 0x37E0F80
	0x037D6414 LDR X8, [X21 + 0x28]
	0x037D6418 LDR X9, [X31 + 0xD8]
	0x037D641C CMP X8, X9
	0x037D6420 B.NE 0x37D6448
	0x037D6424 MOV W0, W20
	0x037D6428 LDP X20, X19, [X31 + 0x110]
	0x037D642C LDP X22, X21, [X31 + 0x100]
	0x037D6430 LDP X30, X23, [X31 + 0xF0]
	0x037D6434 LDR X29, [X31 + 0xE0]
	0x037D6438 ADD X31, X31, 0x120
	0x037D643C RET
	0x037D6440 BL 0x1C16F20
	0x037D6444 BL 0x1C16F28
	0x037D6448 BL 0x3EB1B20
	0x037D644C SUB X31, X31, 0x70
	0x037D6450 STP X31, X30, [X31 + 0x48]
	0x037D6454 STP X20, X19, [X31 + 0x60]
	0x037D6458 MOV X20, X1
	0x037D645C MOV X19, X0
	0x037D6460 MOV X0, X1
	0x037D6464 MOV X1, X31
	0x037D6468 STP X31, X31, [X31 + 0x38]
	0x037D646C BL 0x32277A8
	0x037D6470 TBZ X0, 0x0, 0x37D6484
	0x037D6474 ADD X1, X31, 0x8
	0x037D6478 STP X31, X31, [X31 + 0x8]
	0x037D647C STR X31, [X31 + 0x18]
	0x037D6480 B 0x37D64A8
	0x037D6484 ADD X2, X31, 0x38
	0x037D6488 MOV X0, X19
	0x037D648C MOV X1, X20
	0x037D6490 BL 0x37D4444
	0x037D6494 LDUR V0, [X31 + 0x38]
	0x037D6498 LDR X8, [X31 + 0x48]
	0x037D649C ADD X1, X31, 0x20
	0x037D64A0 STR V0, [X31 + 0x2]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+56], X23
	004 Move [X31+64], X22
	005 Move [X31+72], X21
	006 Move [X31+80], X20
	007 Move [X31+88], X19
	008 Move X20, 0xC0C000
	009 Move W8, [X20+614]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {29}
	015 Move X0, 0x970000
	016 Move X0, [X0+24]
	017 Call 0x1C17CF4
	018 Move X0, 0x970000
	019 Move X0, [X0+32]
	020 Call 0x1C17CF4
	021 Move X0, 0x970000
	022 Move X0, [X0+40]
	023 Call 0x1C17CF4
	024 Move X0, 0x970000
	025 Move X0, [X0+16]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X20+614], W8
	029 Move [X31+24], X31
	030 Move [X31+32], X31
	031 Move [X31+40], X31
	032 Move X8, [X19+168]
	033 Compare X8, 0
	034 JumpIfEqual {73}
	035 Move X0, [X19+32]
	036 Compare X0, 0
	037 JumpIfEqual {82}
	038 Move X23, 0x970000
	039 Move X21, 0x970000
	040 Move X22, 0x970000
	041 Move X20, 0x970000
	042 Move X23, [X23+16]
	043 Move X21, [X21+32]
	044 Move X22, [X22+40]
	045 Move X20, [X20+24]
	046 Move X1, X31
	047 Call InputActionAsset.get_actionMaps, X0
	048 Move X9, [X23]
	049 Move [X31+8], X0
	050 Move [X31+16], X1
	051 Add X8, X31, 24
	052 Add X0, X31, 8
	053 Move X1, X9
	054 Call ReadOnlyArray`1<Object>.GetEnumerator, X0
	055 Move X1, [X21]
	056 Add X0, X31, 24
	057 Call Enumerator<Object>.MoveNext, X0
	058 Move TEMP, X0
	059 And TEMP, TEMP, 1
	060 Compare TEMP, 1
	061 JumpIfNotEqual {70}
	062 Move X1, [X22]
	063 Add X0, X31, 24
	064 Call Enumerator<Object>.get_Current, X0
	065 Compare X0, 0
	066 JumpIfEqual {81}
	067 Move X1, [X19+168]
	068 Move X2, X31
	069 Call InputActionMap.remove_actionTriggered, X0, X1
	070 Move X1, [X20]
	071 Add X0, X31, 24
	072 Call Enumerator<Object>.Dispose, X0
	073 Move X20, [X31+80]
	074 Move X19, [X31+88]
	075 Move X22, [X31+64]
	076 Move X21, [X31+72]
	077 Move X30, [X31+48]
	078 Move X23, [X31+56]
	079 Add X31, X31, 96
	080 Return 
	081 Call 0x1C17F20
	082 Call 0x1C17F20
	083 Move X19, X0
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Move X0, X19
	086 Call 0x3EB2AD0
	087 Move X20, [X0]
	088 Call 0x3EB2AE0
	089 Move X8, 0x970000
	090 Move X8, [X8+24]
	091 Add X0, X31, 24
	092 Move X1, [X8]
	093 Call Enumerator<Object>.Dispose, X0
	094 Compare X20, 0
	095 JumpIfEqual {73}
	096 Move X0, X20
	097 Call 0x1C17F18
	098 Move X20, X31
	099 Move X19, X0
	100 Move X8, 0x970000
	101 Move X8, [X8+24]
	102 Move X1, [X8]
	103 Add X0, X31, 24
	104 Call Enumerator<Object>.Dispose, X0
	105 Compare X20, 0
	106 JumpIfNotEqual {109}
	107 Move X0, X19
	108 Call 0x1D2D690
	109 Move X0, X20
	110 Call 0x1C17F18
	111 Call 0x1991590

Method: System.Void OnActionTriggered(UnityEngine.InputSystem.InputAction/CallbackContext context)

Disassembly:
	0x037D64A4 STR X8, [X31 + 0x30]
	0x037D64A8 MOV X0, X19
	0x037D64AC BL 0x37D6294
	0x037D64B0 LDP X20, X19, [X31 + 0x60]
	0x037D64B4 LDR X30, [X31 + 0x50]
	0x037D64B8 AND X0, X0, 0x0
	0x037D64BC ADD X31, X31, 0x70
	0x037D64C0 RET
	0x037D64C4 STP X30, X25, [X31 - 0x40]!
	0x037D64C8 STP X24, X23, [X31 + 0x10]
	0x037D64CC STP X22, X21, [X31 + 0x20]
	0x037D64D0 STP X20, X19, [X31 + 0x30]
	0x037D64D4 ADRP X20, 0xC0B000
	0x037D64D8 ADRP X23, 0x972000
	0x037D64DC LDRB W8, [X20 + 0x26D]
	0x037D64E0 LDR X23, [X23 + 0x8F8]
	0x037D64E4 MOV X19, X0
	0x037D64E8 TBNZ X8, 0x0, 0x37D6518
	0x037D64EC ADRP X0, 0x91D000
	0x037D64F0 LDR X0, [X0 + 0x5A8]
	0x037D64F4 BL 0x1C16CF4
	0x037D64F8 ADRP X0, 0x91D000
	0x037D64FC LDR X0, [X0 + 0x598]
	0x037D6500 BL 0x1C16CF4
	0x037D6504 ADRP X0, 0x972000
	0x037D6508 LDR X0, [X0 + 0x8F8]
	0x037D650C BL 0x1C16CF4
	0x037D6510 MOVZ W8, 0x1
	0x037D6514 STRB W8, [X20 + 0x26D]
	0x037D6518 LDR X0, [X23]
	0x037D651C LDR W8, [X0 + 0xE0]
	0x037D6520 CBNZ W8, 0x37D652C
	0x037D6524 BL 0x1C16DFC
	0x037D6528 LDR X0, [X23]
	0x037D652C LDR X8, [X0 + 0xB8]
	0x037D6530 LDR W8, [X8 + 0x28]
	0x037D6534 ADDS W31, W8, 0x1
	0x037D6538 B.EQ 0x37D6558
	0x037D653C LDR W9, [X0 + 0xE0]
	0x037D6540 CBNZ W9, 0x37D66A0
	0x037D6544 BL 0x1C16DFC
	0x037D6548 LDR X8, [X23]
	0x037D654C LDR X8, [X8 + 0xB8]
	0x037D6550 LDR W8, [X8 + 0x28]
	0x037D6554 B 0x37D66A0
	0x037D6558 ADRP X25, 0x91D000
	0x037D655C LDR X25, [X25 + 0x5A8]
	0x037D6560 MOV W24, W31
	0x037D6564 MOVN W20, 0x80000000
	0x037D6568 MOVZ W21, 0x80000000
	0x037D656C LDR W8, [X0 + 0xE0]
	0x037D6570 CBNZ W8, 0x37D657C
	0x037D6574 BL 0x1C16DFC
	0x037D6578 LDR X0, [X23]
	0x037D657C LDR X8, [X0 + 0xB8]
	0x037D6580 LDR W9, [X8]
	0x037D6584 CMP W24, W9
	0x037D6588 B.GE 0x37D6608
	0x037D658C LDR W9, [X0 + 0xE0]
	0x037D6590 CBNZ W9, 0x37D65A0
	0x037D6594 BL 0x1C16DFC
	0x037D6598 LDR X8, [X23]
	0x037D659C LDR X8, [X8 + 0xB8]
	0x037D65A0 LDR X8, [X8 + 0x8]
	0x037D65A4 CBZ X8, 0x37D66B8
	0x037D65A8 LDR W9, [X8 + 0x18]
	0x037D65AC CMP W24, W9
	0x037D65B0 B.CS 0x37D66BC
	0x037D65B4 ADD X8, X8, W24, 0x3, SXTW
	0x037D65B8 LDR X8, [X8 + 0x20]
	0x037D65BC CBZ X8, 0x37D66B8
	0x037D65C0 LDR X0, [X25]
	0x037D65C4 LDR W22, [X8 + 0x90]
	0x037D65C8 LDR W9, [X0 + 0xE0]
	0x037D65CC CBNZ W9, 0x37D65D4
	0x037D65D0 BL 0x1C16DFC
	0x037D65D4 MOV W0, W20
	0x037D65D8 MOV W1, W22
	0x037D65DC MOV X2, X31
	0x037D65E0 BL 0x337EE94
	0x037D65E4 MOV W20, W0
	0x037D65E8 MOV W0, W21
	0x037D65EC MOV W1, W22
	0x037D65F0 MOV X2, X31
	0x037D65F4 BL 0x337EDF0
	0x037D65F8 MOV W21, W0
	0x037D65FC LDR X0, [X23]
	0x037D6600 ADD W24, W24, 0x1
	0x037D6604 B 0x37D656C
	0x037D6608 SUB W8, W20, 0x1
	0x037D660C ORR W9, W31, 0x7FFFFFFE
	0x037D6610 CMP W8, W9
	0x037D6614 B.CC 0x37D66A0
	0x037D6618 MOVZ W8, 0x80000000
	0x037D661C CMP W21, W8
	0x037D6620 B.NE 0x37D662C
	0x037D6624 MOV W8, W31
	0x037D6628 B 0x37D66A0
	0x037D662C CMP W20, W21
	0x037D6630 B.GE 0x37D6694
	0x037D6634 ADRP X25, 0x91D000
	0x037D6638 LDR X25, [X25 + 0x598]
	0x037D663C SUB W24, W21, 0x1
	0x037D6640 LDR W8, [X0 + 0xE0]
	0x037D6644 CBNZ W8, 0x37D664C
	0x037D6648 BL 0x1C16DFC
	0x037D664C MOV W0, W20
	0x037D6650 BL 0x37D44F8
	0x037D6654 LDR X8, [X25]
	0x037D6658 MOV X22, X0
	0x037D665C LDR W9, [X8 + 0xE0]
	0x037D6660 CBNZ W9, 0x37D666C
	0x037D6664 MOV X0, X8
	0x037D6668 BL 0x1C16DFC
	0x037D666C MOV X0, X22
	0x037D6670 MOV X1, X31
	0x037D6674 MOV X2, X31
	0x037D6678 BL 0x3C3883C
	0x037D667C TBNZ X0, 0x0, 0x37D669C
	0x037D6680 CMP W24, W20
	0x037D6684 B.EQ 0x37D6694
	0x037D6688 LDR X0, [X23]
	0x037D668C ADD W20, W20, 0x1
	0x037D6690 B 0x37D6640

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+40], X2
	003 Move [X31+48], X30
	004 Move [X31+64], X22
	005 Move [X31+72], X21
	006 Move [X31+80], X20
	007 Move [X31+88], X19
	008 Move X22, 0xC0C000
	009 Move W8, [X22+615]
	010 Move X20, X2
	011 Move X21, X1
	012 Move X19, X0
	013 Move [X31+32], X1
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {35}
	018 Move X0, 0x970000
	019 Move X0, [X0+3128]
	020 Call 0x1C17CF4
	021 Move X0, 0x94E000
	022 Move X0, [X0+2800]
	023 Call 0x1C17CF4
	024 Move X0, 0x973000
	025 Move X0, [X0+2704]
	026 Call 0x1C17CF4
	027 Move X0, 0x973000
	028 Move X0, [X0+2712]
	029 Call 0x1C17CF4
	030 Move X0, 0x973000
	031 Move X0, [X0+2720]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X22+615], W8
	035 Move W8, [X19+148]
	036 Compare W8, 0
	037 JumpIfEqual {141}
	038 Move W8, [X19+40]
	039 NotImplemented "Instruction CMP not yet implemented."
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move X8, 0x973000
	042 Move X9, 0x970000
	043 Move X8, [X8+2720]
	044 Move X9, [X9+3128]
	045 Add X0, X19, 416
	046 Move X1, X21
	047 Move X3, [X8]
	048 Move X5, [X9]
	049 Move X2, X20
	050 Move X20, [X31+80]
	051 Move X19, [X31+88]
	052 Move X22, [X31+64]
	053 Move X21, [X31+72]
	054 Move X30, [X31+48]
	055 Move X4, X31
	056 Add X31, X31, 96
	057 Call DelegateHelpers.InvokeCallbacksSafe, X0, X1, X2, X3
	058 Return 
	059 Add X0, X31, 32
	060 Move X1, X31
	061 Call CallbackContext.get_action, X0
	062 Move X20, X0
	063 Add X0, X31, 32
	064 Move X1, X31
	065 Call CallbackContext.get_performed, X0
	066 Move TEMP, X0
	067 And TEMP, TEMP, 1
	068 Compare TEMP, 1
	069 JumpIfNotEqual {121}
	070 Move X0, [X19+152]
	071 Compare X0, 0
	072 JumpIfNotEqual {76}
	073 Move X0, X19
	074 Call PlayerInput.CacheMessageNames, X0
	075 Move X0, [X19+152]
	076 Compare X20, 0
	077 JumpIfEqual {148}
	078 Compare X0, 0
	079 JumpIfEqual {148}
	080 Move X8, 0x94E000
	081 Move X1, [X20+40]
	082 Move X8, [X8+2800]
	083 Move X2, [X8]
	084 Call Dictionary`2<Object, Object>.get_Item, X0, X1
	085 Move X21, [X19+128]
	086 Move X20, X0
	087 Compare X21, 0
	088 JumpIfNotEqual {97}
	089 Move X8, 0x973000
	090 Move X8, [X8+2704]
	091 Move X0, [X8]
	092 Call 0x1C17F10
	093 Move X1, X31
	094 Move X21, X0
	095 Call Object..ctor, X0
	096 Move [X19+128], X21
	097 Move X8, 0x973000
	098 Move X1, [X31+32]
	099 Move X2, [X31+40]
	100 Move X8, [X8+2712]
	101 Add X0, X31, 8
	102 Move [X31+8], X31
	103 Move [X31+16], X31
	104 Move [X31+24], X31
	105 Move X3, [X8]
	106 Call Nullable`1<CallbackContext>..ctor, X0, X1
	107 Compare X21, 0
	108 JumpIfEqual {148}
	109 Move X8, [X31+24]
	110 NotImplemented "Instruction LDUR not yet implemented."
	111 Move W3, 1
	112 Move X0, X19
	113 Move [X21+32], X8
	114 Move [X21+1], V0
	115 Move W8, [X19+40]
	116 Move X2, [X19+128]
	117 Move X1, X20
	118 NotImplemented "Instruction CMP not yet implemented."
	119 Move X4, X31
	120 Call Component.BroadcastMessage, X0, X1, X2, X3
	121 Add X0, X31, 32
	122 Move X1, X31
	123 Call CallbackContext.get_canceled, X0
	124 Move TEMP, X0
	125 And TEMP, TEMP, 1
	126 Compare TEMP, 1
	127 JumpIfNotEqual {141}
	128 Compare X20, 0
	129 JumpIfEqual {148}
	130 Move W8, [X20+24]
	131 Compare W8, 0
	132 JumpIfNotEqual {141}
	133 Move X4, X31
	134 Call Component.SendMessage, X0, X1, X2, X3
	135 Move X8, [X19+128]
	136 Compare X8, 0
	137 JumpIfEqual {148}
	138 Move [X8+16], X31
	139 Move [X8+24], X31
	140 Move [X8+32], X31
	141 Move X20, [X31+80]
	142 Move X19, [X31+88]
	143 Move X22, [X31+64]
	144 Move X21, [X31+72]
	145 Move X30, [X31+48]
	146 Add X31, X31, 96
	147 Return 
	148 Call 0x1C17F20

Method: System.Void CacheMessageNames()

Disassembly:
	0x037D5F54 MOVI V0.2D, 0x0
	0x037D5F58 STP V0, V0, [X31 + 0x50]
	0x037D5F5C STP V0, V0, [X31 + 0x70]
	0x037D5F60 STP V0, V0, [X31 + 0x90]
	0x037D5F64 LDR X8, [X22]
	0x037D5F68 LDR X1, [X23]
	0x037D5F6C LDRH W9, [X8 + 0x12E]
	0x037D5F70 CBZ X9, 0x37D5F94
	0x037D5F74 LDR X10, [X8 + 0xB0]
	0x037D5F78 ADD X10, X10, 0x8
	0x037D5F7C LDUR X11, [X10 - 0x8]
	0x037D5F80 CMP X11, X1
	0x037D5F84 B.EQ 0x37D5FA8
	0x037D5F88 SUBS X9, X9, 0x1
	0x037D5F8C ADD X10, X10, 0x10
	0x037D5F90 B.NE 0x37D5F7C
	0x037D5F94 MOVZ W2, 0x1
	0x037D5F98 MOV X0, X22
	0x037D5F9C BL 0x1C5C788
	0x037D5FA0 MOV X23, X0
	0x037D5FA4 B 0x37D5FB8
	0x037D5FA8 LDR W9, [X10]
	0x037D5FAC ADD W9, W9, 0x1
	0x037D5FB0 ADD X8, X8, W9, 0x4, SXTW
	0x037D5FB4 ADD X23, X8, 0x138
	0x037D5FB8 LDR X26, [X23]
	0x037D5FBC ADD X0, X31, 0xD0
	0x037D5FC0 ADD X1, X31, 0x50
	0x037D5FC4 MOVZ W2, 0x60
	0x037D5FC8 BL 0x3EB1AC0
	0x037D5FCC LDR X2, [X23 + 0x8]
	0x037D5FD0 ADD X1, X31, 0xD0
	0x037D5FD4 MOV X0, X22
	0x037D5FD8 BLR X26
	0x037D5FDC LDR X8, [X24]
	0x037D5FE0 LDR X8, [X8 + 0xB8]
	0x037D5FE4 LDR X8, [X8 + 0x20]
	0x037D5FE8 CBZ X8, 0x37D6148
	0x037D5FEC LDR W9, [X8 + 0x18]
	0x037D5FF0 CMP W20, W9
	0x037D5FF4 B.CS 0x37D6144
	0x037D5FF8 MOVZ W9, 0xB8
	0x037D5FFC MADD X8, X25, X9, X8
	0x037D6000 STR X19, [X8 + 0x50]
	0x037D6004 CBZ X19, 0x37D6128
	0x037D6008 BL 0x37E0868
	0x037D600C MOV X0, X21
	0x037D6010 BL 0x37D38F8
	0x037D6014 ADRP X8, 0x96F000
	0x037D6018 LDR X8, [X8 + 0x48]
	0x037D601C MOV X2, X0
	0x037D6020 MOV X4, X1
	0x037D6024 ADD X0, X31, 0x38
	0x037D6028 LDR X3, [X8]
	0x037D602C MOV X1, X2
	0x037D6030 MOV X2, X4
	0x037D6034 STP X31, X31, [X31 + 0x38]
	0x037D6038 STR X31, [X31 + 0x48]
	0x037D603C BL 0x242CC30
	0x037D6040 LDUR V0, [X31 + 0x38]
	0x037D6044 LDR X8, [X31 + 0x48]
	0x037D6048 ADRP X10, 0x972000
	0x037D604C STR V0, [X31 + 0x2]
	0x037D6050 STR X8, [X31 + 0x30]
	0x037D6054 LDR X8, [X19]
	0x037D6058 LDR X10, [X10 + 0xAC8]
	0x037D605C LDRH W9, [X8 + 0x12E]
	0x037D6060 LDR X1, [X10]
	0x037D6064 CBZ X9, 0x37D6088
	0x037D6068 LDR X10, [X8 + 0xB0]
	0x037D606C ADD X10, X10, 0x8
	0x037D6070 LDUR X11, [X10 - 0x8]
	0x037D6074 CMP X11, X1
	0x037D6078 B.EQ 0x37D6098
	0x037D607C SUBS X9, X9, 0x1
	0x037D6080 ADD X10, X10, 0x10
	0x037D6084 B.NE 0x37D6070
	0x037D6088 MOVZ W2, 0x3
	0x037D608C MOV X0, X19
	0x037D6090 BL 0x1C5C788
	0x037D6094 B 0x37D60A8
	0x037D6098 LDR W9, [X10]
	0x037D609C ADD W9, W9, 0x3
	0x037D60A0 ADD X8, X8, W9, 0x4, SXTW
	0x037D60A4 ADD X0, X8, 0x138
	0x037D60A8 LDR V0, [X31 + 0x2]
	0x037D60AC LDR X8, [X31 + 0x30]
	0x037D60B0 LDR X9, [X0]
	0x037D60B4 ADD X1, X31, 0xD0
	0x037D60B8 STR V0, [X31 + 0xD]
	0x037D60BC STR X8, [X31 + 0xE0]
	0x037D60C0 LDR X2, [X0 + 0x8]
	0x037D60C4 MOV X0, X19
	0x037D60C8 BLR X9
	0x037D60CC LDR X8, [X24]
	0x037D60D0 LDR X8, [X8 + 0xB8]
	0x037D60D4 LDR X8, [X8 + 0x20]
	0x037D60D8 CBZ X8, 0x37D6148
	0x037D60DC LDR W9, [X8 + 0x18]
	0x037D60E0 CMP W20, W9
	0x037D60E4 B.CS 0x37D6144
	0x037D60E8 MOVZ W9, 0xB8
	0x037D60EC MADD X0, X25, X9, X8
	0x037D60F0 LDRB W8, [X0 + 0x58]!
	0x037D60F4 CBZ W8, 0x37D6128
	0x037D60F8 ADRP X8, 0x972000
	0x037D60FC LDR X8, [X8 + 0x930]
	0x037D6100 LDR X1, [X8]
	0x037D6104 ADD X8, X31, 0xD0
	0x037D6108 BL 0x243299C
	0x037D610C LDR V0, [X31 + 0xD]
	0x037D6110 LDR X8, [X31 + 0xE0]
	0x037D6114 ADD X2, X31, 0x0
	0x037D6118 MOV W1, W20
	0x037D611C STR V0, [X31]
	0x037D6120 STR X8, [X31 + 0x10]
	0x037D6124 BL 0x37E0978
	0x037D6128 LDP X20, X19, [X31 + 0x170]
	0x037D612C LDP X22, X21, [X31 + 0x160]
	0x037D6130 LDP X24, X23, [X31 + 0x150]
	0x037D6134 LDP X26, X25, [X31 + 0x140]
	0x037D6138 LDP X29, X30, [X31 + 0x130]
	0x037D613C ADD X31, X31, 0x180
	0x037D6140 RET
	0x037D6144 BL 0x1C16F28
	0x037D6148 BL 0x1C16F20
	0x037D614C SUB X31, X31, 0x50
	0x037D6150 STP X30, X21, [X31 + 0x30]
	0x037D6154 STP X20, X19, [X31 + 0x40]
	0x037D6158 ADRP X20, 0xC0B000
	0x037D615C LDRB W8, [X20 + 0x26B]
	0x037D6160 MOV X19, X0
	0x037D6164 TBNZ X8, 0x0, 0x37D617C
	0x037D6168 ADRP X0, 0x91D000
	0x037D616C LDR X0, [X0 + 0x598]
	0x037D6170 BL 0x1C16CF4
	0x037D6174 MOVZ W8, 0x1
	0x037D6178 STRB W8, [X20 + 0x26B]
	0x037D617C ADRP X21, 0x91D000
	0x037D6180 LDR X21, [X21 + 0x598]
	0x037D6184 ADD X20, X19, 0xA0
	0x037D6188 MOV X0, X20
	0x037D618C BL 0x37D2BD0
	0x037D6190 TBZ X0, 0x0, 0x37D619C
	0x037D6194 MOV X0, X20
	0x037D6198 BL 0x37D6204
	0x037D619C LDR X0, [X21]
	0x037D61A0 LDR X20, [X19 + 0x20]
	0x037D61A4 LDR W8, [X0 + 0xE0]
	0x037D61A8 CBNZ W8, 0x37D61B0
	0x037D61AC BL 0x1C16DFC
	0x037D61B0 MOV X0, X20
	0x037D61B4 MOV X1, X31
	0x037D61B8 MOV X2, X31
	0x037D61BC BL 0x3C354F8
	0x037D61C0 TBZ X0, 0x0, 0x37D61F0
	0x037D61C4 LDR X0, [X19 + 0x20]
	0x037D61C8 STP X31, X31, [X31 + 0x18]
	0x037D61CC STR X31, [X31 + 0x28]
	0x037D61D0 CBZ X0, 0x37D6200
	0x037D61D4 LDUR V0, [X31 + 0x18]
	0x037D61D8 LDR X8, [X31 + 0x28]
	0x037D61DC ADD X1, X31, 0x0
	0x037D61E0 MOV X2, X31
	0x037D61E4 STR V0, [X31]
	0x037D61E8 STR X8, [X31 + 0x10]
	0x037D61EC BL 0x3736B18
	0x037D61F0 LDP X20, X19, [X31 + 0x40]
	0x037D61F4 LDP X30, X21, [X31 + 0x30]
	0x037D61F8 ADD X31, X31, 0x50
	0x037D61FC RET
	0x037D6200 BL 0x1C16F20
	0x037D6204 STP X30, X19, [X31 - 0x10]!
	0x037D6208 MOV X19, X0
	0x037D620C BL 0x37D5694
	0x037D6210 MOV X0, X19
	0x037D6214 BL 0x37DFF1C
	0x037D6218 BL 0x37E2040
	0x037D621C STR W31, [X19]
	0x037D6220 LDP X30, X19, [X31], #0x10
	0x037D6224 RET
	0x037D6228 STR X30, [X31 - 0x20]!
	0x037D622C STP X20, X19, [X31 + 0x10]
	0x037D6230 ADRP X20, 0xC0B000
	0x037D6234 ADRP X19, 0x972000
	0x037D6238 LDRB W8, [X20 + 0x2EF]
	0x037D623C LDR X19, [X19 + 0x948]
	0x037D6240 TBNZ X8, 0x0, 0x37D6258
	0x037D6244 ADRP X0, 0x972000
	0x037D6248 LDR X0, [X0 + 0x948]
	0x037D624C BL 0x1C16CF4
	0x037D6250 MOVZ W8, 0x1
	0x037D6254 STRB W8, [X20 + 0x2EF]
	0x037D6258 BL 0x37E290C
	0x037D625C LDR X8, [X19]
	0x037D6260 LDR X8, [X8 + 0xB8]
	0x037D6264 LDR X8, [X8 + 0x18]
	0x037D6268 CBZ X8, 0x37D628C
	0x037D626C LDR W9, [X8 + 0x18]
	0x037D6270 CMP W0, W9
	0x037D6274 B.CS 0x37D6290
	0x037D6278 ADD X8, X8, W0, 0x2, SXTW
	0x037D627C LDR W0, [X8 + 0x20]
	0x037D6280 LDP X20, X19, [X31 + 0x10]
	0x037D6284 LDR X30, [X31], #0x20
	0x037D6288 RET
	0x037D628C BL 0x1C16F20
	0x037D6290 BL 0x1C16F28
	0x037D6294 SUB X31, X31, 0x120
	0x037D6298 STR X29, [X31 + 0xE0]
	0x037D629C STP X30, X23, [X31 + 0xF0]
	0x037D62A0 STP X22, X21, [X31 + 0x100]
	0x037D62A4 STP X20, X19, [X31 + 0x110]
	0x037D62A8 MRS X21, 0xC000
	0x037D62AC LDR X8, [X21 + 0x28]
	0x037D62B0 ADRP X23, 0xC0B000
	0x037D62B4 ADRP X22, 0x972000
	0x037D62B8 MOV X19, X1
	0x037D62BC STR X8, [X31 + 0xD8]
	0x037D62C0 LDRB W8, [X23 + 0x2E6]
	0x037D62C4 LDR X22, [X22 + 0x948]
	0x037D62C8 MOV X20, X0
	0x037D62CC TBNZ X8, 0x0, 0x37D62FC
	0x037D62D0 ADRP X0, 0x972000
	0x037D62D4 LDR X0, [X0 + 0x948]
	0x037D62D8 BL 0x1C16CF4
	0x037D62DC ADRP X0, 0x945000
	0x037D62E0 LDR X0, [X0 + 0xE10]
	0x037D62E4 BL 0x1C16CF4
	0x037D62E8 ADRP X0, 0x96F000
	0x037D62EC LDR X0, [X0 + 0x9B8]
	0x037D62F0 BL 0x1C16CF4
	0x037D62F4 MOVZ W8, 0x1
	0x037D62F8 STRB W8, [X23 + 0x2E6]
	0x037D62FC MOV X0, X20
	0x037D6300 BL 0x37DFF1C
	0x037D6304 LDR X8, [X22]
	0x037D6308 LDR X8, [X8 + 0xB8]
	0x037D630C LDR X8, [X8 + 0x20]
	0x037D6310 CBZ X8, 0x37D6440
	0x037D6314 LDR W9, [X8 + 0x18]
	0x037D6318 MOV W20, W0

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X21, 0xC0D000
	013 Move X19, 0x91F000
	014 Move W8, [X21+616]
	015 Move X19, [X19+1432]
	016 Move X20, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {53}
	021 Move X0, 0x962000
	022 Move X0, [X0+2808]
	023 Call 0x1C17CF4
	024 Move X0, 0x920000
	025 Move X0, [X0+1728]
	026 Call 0x1C17CF4
	027 Move X0, 0x920000
	028 Move X0, [X0+1736]
	029 Call 0x1C17CF4
	030 Move X0, 0x920000
	031 Move X0, [X0+1744]
	032 Call 0x1C17CF4
	033 Move X0, 0x91F000
	034 Move X0, [X0+3584]
	035 Call 0x1C17CF4
	036 Move X0, 0x971000
	037 Move X0, [X0+1168]
	038 Call 0x1C17CF4
	039 Move X0, 0x91F000
	040 Move X0, [X0+3608]
	041 Call 0x1C17CF4
	042 Move X0, 0x91F000
	043 Move X0, [X0+1432]
	044 Call 0x1C17CF4
	045 Move X0, 0x974000
	046 Move X0, [X0+2696]
	047 Call 0x1C17CF4
	048 Move X0, 0x91F000
	049 Move X0, [X0+2440]
	050 Call 0x1C17CF4
	051 Move W8, 1
	052 Move [X21+616], W8
	053 Move X0, [X19]
	054 Move X19, [X20+32]
	055 Move W8, [X0+224]
	056 Compare W8, 0
	057 JumpIfNotEqual {59}
	058 Call 0x1C17DFC
	059 Move X0, X19
	060 Move X1, X31
	061 Move X2, X31
	062 Call Object.op_Equality, X0, X1
	063 Move TEMP, X0
	064 And TEMP, TEMP, 1
	065 Compare TEMP, 1
	066 JumpIfEqual {199}
	067 Move X0, [X20+152]
	068 Compare X0, 0
	069 JumpIfEqual {74}
	070 Move X8, 0x961000
	071 Move X8, [X8+2808]
	072 Move X1, [X8]
	073 Call Dictionary`2<Object, Object>.Clear, X0
	074 Move X8, 0x91F000
	075 Move X8, [X8+1744]
	076 Move X0, [X8]
	077 Call 0x1C17F10
	078 Move X8, 0x91F000
	079 Move X8, [X8+1728]
	080 Move X19, X0
	081 Move X1, [X8]
	082 Call Dictionary`2<Object, Object>..ctor, X0
	083 Move [X20+152], X19
	084 Move X0, [X20+32]
	085 Compare X0, 0
	086 JumpIfEqual {213}
	087 Move X1, X31
	088 Call InputActionAsset.GetEnumerator, X0
	089 Move X19, X0
	090 Compare X0, 0
	091 JumpIfEqual {214}
	092 Move X23, 0x91E000
	093 Move X24, 0x970000
	094 Move X25, 0x91E000
	095 Move X26, 0x973000
	096 Move X27, 0x91F000
	097 Move X23, [X23+3608]
	098 Move X24, [X24+1168]
	099 Move X25, [X25+2440]
	100 Move X26, [X26+2696]
	101 Move X27, [X27+1736]
	102 Move X8, [X19]
	103 Move X1, [X23]
	104 NotImplemented "Instruction LDRH not yet implemented."
	105 Compare X9, 0
	106 JumpIfEqual {113}
	107 Move X10, [X8+176]
	108 Add X10, X10, 8
	109 NotImplemented "Instruction LDUR not yet implemented."
	110 NotImplemented "Instruction CMP not yet implemented."
	111 Subtract X9, X9, 1
	112 Add X10, X10, 16
	113 Move X0, X19
	114 Move W2, W31
	115 Call 0x1C5D788
	116 NotImplemented "Instruction LDRSW not yet implemented."
	117 Add X8, X8, X9
	118 Add X0, X8, 312
	119 Move X8, [X0]
	120 Move X1, [X0+8]
	121 Move X0, X19
	122 NotImplemented "Instruction BLR not yet implemented."
	123 Move TEMP, X0
	124 And TEMP, TEMP, 1
	125 Compare TEMP, 1
	126 JumpIfNotEqual {171}
	127 Move X8, [X19]
	128 Move X1, [X24]
	129 NotImplemented "Instruction LDRH not yet implemented."
	130 Compare X9, 0
	131 JumpIfEqual {138}
	132 Move X10, [X8+176]
	133 Add X10, X10, 8
	134 NotImplemented "Instruction LDUR not yet implemented."
	135 NotImplemented "Instruction CMP not yet implemented."
	136 Subtract X9, X9, 1
	137 Add X10, X10, 16
	138 Move X0, X19
	139 Move W2, W31
	140 Call 0x1C5D788
	141 NotImplemented "Instruction LDRSW not yet implemented."
	142 Add X8, X8, X9
	143 Add X0, X8, 312
	144 Move X8, [X0]
	145 Move X1, [X0+8]
	146 Move X0, X19
	147 NotImplemented "Instruction BLR not yet implemented."
	148 Move X21, X0
	149 Compare X0, 0
	150 JumpIfEqual {211}
	151 Move X0, X21
	152 Move X1, X31
	153 Call InputAction.MakeSureIdIsInPlace, X0
	154 Move X0, [X21+16]
	155 Move X1, [X25]
	156 Move X2, X31
	157 Call CSharpCodeHelpers.MakeTypeName, X0, X1
	158 Move X1, X0
	159 Move X22, [X20+152]
	160 Move X21, [X21+40]
	161 Move X0, [X26]
	162 Move X2, X31
	163 Call String.Concat, X0, X1
	164 Compare X22, 0
	165 JumpIfEqual {212}
	166 Move X3, [X27]
	167 Move X2, X0
	168 Move X0, X22
	169 Move X1, X21
	170 Call Dictionary`2<Object, Object>.set_Item, X0, X1, X2
	171 Move X20, X31
	172 Compare X19, 0
	173 JumpIfEqual {197}
	174 Move X10, 0x91E000
	175 Move X8, [X19]
	176 Move X10, [X10+3584]
	177 NotImplemented "Instruction LDRH not yet implemented."
	178 Move X1, [X10]
	179 Compare X9, 0
	180 JumpIfEqual {187}
	181 Move X10, [X8+176]
	182 Add X10, X10, 8
	183 NotImplemented "Instruction LDUR not yet implemented."
	184 NotImplemented "Instruction CMP not yet implemented."
	185 Subtract X9, X9, 1
	186 Add X10, X10, 16
	187 Move X0, X19
	188 Move W2, W31
	189 Call 0x1C5D788
	190 NotImplemented "Instruction LDRSW not yet implemented."
	191 Add X8, X8, X9
	192 Add X0, X8, 312
	193 Move X8, [X0]
	194 Move X1, [X0+8]
	195 Move X0, X19
	196 NotImplemented "Instruction BLR not yet implemented."
	197 Compare X20, 0
	198 JumpIfNotEqual {215}
	199 Move X20, [X31+80]
	200 Move X19, [X31+88]
	201 Move X22, [X31+64]
	202 Move X21, [X31+72]
	203 Move X24, [X31+48]
	204 Move X23, [X31+56]
	205 Move X26, [X31+32]
	206 Move X25, [X31+40]
	207 Move X30, [X31+16]
	208 Move X27, [X31+24]
	209 Add X31, X31, 96
	210 Return 
	211 Call 0x1C17F20
	212 Call 0x1C17F20
	213 Call 0x1C17F20
	214 Call 0x1C17F20
	215 Move X0, X20
	216 Call 0x1C17F18
	217 NotImplemented "Instruction CMP not yet implemented."
	218 Call 0x3EB2AD0
	219 Move X20, [X0]
	220 Call 0x3EB2AE0
	221 Move [X31+8], X0
	222 Move X20, X31
	223 Move [X31+8], X0
	224 Compare X19, 0
	225 JumpIfEqual {249}
	226 Move X10, 0x91E000
	227 Move X8, [X19]
	228 Move X10, [X10+3584]
	229 NotImplemented "Instruction LDRH not yet implemented."
	230 Move X1, [X10]
	231 Compare X9, 0
	232 JumpIfEqual {239}
	233 Move X10, [X8+176]
	234 Add X10, X10, 8
	235 NotImplemented "Instruction LDUR not yet implemented."
	236 NotImplemented "Instruction CMP not yet implemented."
	237 Subtract X9, X9, 1
	238 Add X10, X10, 16
	239 Move X0, X19
	240 Move W2, W31
	241 Call 0x1C5D788
	242 NotImplemented "Instruction LDRSW not yet implemented."
	243 Add X8, X8, X9
	244 Add X0, X8, 312
	245 Move X8, [X0]
	246 Move X1, [X0+8]
	247 Move X0, X19
	248 NotImplemented "Instruction BLR not yet implemented."
	249 Compare X20, 0
	250 JumpIfNotEqual {253}
	251 Move X0, [X31+8]
	252 Call 0x1D2D690
	253 Move X0, X20
	254 Call 0x1C17F18
	255 Call 0x1991590

Method: System.Void ClearCaches()

Disassembly:
	0x037D32D8 ADRP X0, 0x92A000

ISIL:
	001 Return 

Method: System.Void AssignUserAndDevices()

Disassembly:
	0x037D32DC LDR X0, [X0 + 0xEC8]
	0x037D32E0 BL 0x1C16D08
	0x037D32E4 MOV X1, X0
	0x037D32E8 MOV X0, X19
	0x037D32EC MOV X2, X31
	0x037D32F0 BL 0x330E100
	0x037D32F4 ADRP X0, 0x975000
	0x037D32F8 LDR X0, [X0 + 0x9A0]
	0x037D32FC BL 0x1C16D08
	0x037D3300 MOV X1, X0
	0x037D3304 MOV X0, X19
	0x037D3308 BL 0x1C16DEC
	0x037D330C STP X30, X21, [X31 - 0x20]!
	0x037D3310 STP X20, X19, [X31 + 0x10]
	0x037D3314 ADRP X21, 0xC0E000
	0x037D3318 LDRB W8, [X21 + 0x251]
	0x037D331C MOV X19, X1
	0x037D3320 MOV X20, X0
	0x037D3324 TBNZ X8, 0x0, 0x37D333C
	0x037D3328 ADRP X0, 0x971000
	0x037D332C LDR X0, [X0 + 0xF88]
	0x037D3330 BL 0x1C16CF4
	0x037D3334 MOVZ W8, 0x1
	0x037D3338 STRB W8, [X21 + 0x251]
	0x037D333C CBZ X19, 0x37D3360
	0x037D3340 ADRP X8, 0x971000
	0x037D3344 LDR X8, [X8 + 0xF88]
	0x037D3348 ADD X0, X20, 0x1A0
	0x037D334C MOV X1, X19
	0x037D3350 LDP X20, X19, [X31 + 0x10]
	0x037D3354 LDR X2, [X8]
	0x037D3358 LDP X30, X21, [X31], #0x20
	0x037D335C B 0x28F1650
	0x037D3360 ADRP X0, 0x925000
	0x037D3364 LDR X0, [X0 + 0x528]
	0x037D3368 BL 0x1C16D08
	0x037D336C BL 0x1C16F10
	0x037D3370 MOV X19, X0
	0x037D3374 ADRP X0, 0x92A000
	0x037D3378 LDR X0, [X0 + 0xEC8]
	0x037D337C BL 0x1C16D08
	0x037D3380 MOV X1, X0
	0x037D3384 MOV X0, X19
	0x037D3388 MOV X2, X31
	0x037D338C BL 0x330E100
	0x037D3390 ADRP X0, 0x975000
	0x037D3394 LDR X0, [X0 + 0x9A8]
	0x037D3398 BL 0x1C16D08
	0x037D339C MOV X1, X0
	0x037D33A0 MOV X0, X19
	0x037D33A4 BL 0x1C16DEC
	0x037D33A8 STP X30, X21, [X31 - 0x20]!
	0x037D33AC STP X20, X19, [X31 + 0x10]
	0x037D33B0 ADRP X21, 0xC0E000
	0x037D33B4 LDRB W8, [X21 + 0x252]
	0x037D33B8 MOV X19, X1
	0x037D33BC MOV X20, X0
	0x037D33C0 TBNZ X8, 0x0, 0x37D33D8
	0x037D33C4 ADRP X0, 0x975000
	0x037D33C8 LDR X0, [X0 + 0x9B0]
	0x037D33CC BL 0x1C16CF4
	0x037D33D0 MOVZ W8, 0x1
	0x037D33D4 STRB W8, [X21 + 0x252]
	0x037D33D8 CBZ X19, 0x37D33FC
	0x037D33DC ADRP X8, 0x975000
	0x037D33E0 LDR X8, [X8 + 0x9B0]
	0x037D33E4 ADD X0, X20, 0xB0
	0x037D33E8 MOV X1, X19
	0x037D33EC LDP X20, X19, [X31 + 0x10]
	0x037D33F0 LDR X2, [X8]
	0x037D33F4 LDP X30, X21, [X31], #0x20
	0x037D33F8 B 0x28F14E0
	0x037D33FC ADRP X0, 0x925000
	0x037D3400 LDR X0, [X0 + 0x528]
	0x037D3404 BL 0x1C16D08
	0x037D3408 BL 0x1C16F10
	0x037D340C MOV X19, X0
	0x037D3410 ADRP X0, 0x92A000
	0x037D3414 LDR X0, [X0 + 0xEC8]
	0x037D3418 BL 0x1C16D08
	0x037D341C MOV X1, X0
	0x037D3420 MOV X0, X19
	0x037D3424 MOV X2, X31
	0x037D3428 BL 0x330E100
	0x037D342C ADRP X0, 0x975000
	0x037D3430 LDR X0, [X0 + 0x9B8]
	0x037D3434 BL 0x1C16D08
	0x037D3438 MOV X1, X0
	0x037D343C MOV X0, X19
	0x037D3440 BL 0x1C16DEC
	0x037D3444 STP X30, X21, [X31 - 0x20]!
	0x037D3448 STP X20, X19, [X31 + 0x10]
	0x037D344C ADRP X21, 0xC0E000
	0x037D3450 LDRB W8, [X21 + 0x253]
	0x037D3454 MOV X19, X1
	0x037D3458 MOV X20, X0
	0x037D345C TBNZ X8, 0x0, 0x37D3474
	0x037D3460 ADRP X0, 0x975000
	0x037D3464 LDR X0, [X0 + 0x9C0]
	0x037D3468 BL 0x1C16CF4
	0x037D346C MOVZ W8, 0x1
	0x037D3470 STRB W8, [X21 + 0x253]
	0x037D3474 CBZ X19, 0x37D3498
	0x037D3478 ADRP X8, 0x975000
	0x037D347C LDR X8, [X8 + 0x9C0]
	0x037D3480 ADD X0, X20, 0xB0
	0x037D3484 MOV X1, X19
	0x037D3488 LDP X20, X19, [X31 + 0x10]
	0x037D348C LDR X2, [X8]
	0x037D3490 LDP X30, X21, [X31], #0x20
	0x037D3494 B 0x28F1650
	0x037D3498 ADRP X0, 0x925000
	0x037D349C LDR X0, [X0 + 0x528]
	0x037D34A0 BL 0x1C16D08
	0x037D34A4 BL 0x1C16F10
	0x037D34A8 MOV X19, X0
	0x037D34AC ADRP X0, 0x92A000
	0x037D34B0 LDR X0, [X0 + 0xEC8]
	0x037D34B4 BL 0x1C16D08
	0x037D34B8 MOV X1, X0
	0x037D34BC MOV X0, X19
	0x037D34C0 MOV X2, X31
	0x037D34C4 BL 0x330E100
	0x037D34C8 ADRP X0, 0x975000
	0x037D34CC LDR X0, [X0 + 0x9C8]
	0x037D34D0 BL 0x1C16D08
	0x037D34D4 MOV X1, X0
	0x037D34D8 MOV X0, X19
	0x037D34DC BL 0x1C16DEC
	0x037D34E0 STP X30, X21, [X31 - 0x20]!
	0x037D34E4 STP X20, X19, [X31 + 0x10]
	0x037D34E8 ADRP X21, 0xC0E000
	0x037D34EC LDRB W8, [X21 + 0x254]
	0x037D34F0 MOV X19, X1
	0x037D34F4 MOV X20, X0
	0x037D34F8 TBNZ X8, 0x0, 0x37D3510
	0x037D34FC ADRP X0, 0x975000
	0x037D3500 LDR X0, [X0 + 0x9B0]
	0x037D3504 BL 0x1C16CF4
	0x037D3508 MOVZ W8, 0x1
	0x037D350C STRB W8, [X21 + 0x254]
	0x037D3510 CBZ X19, 0x37D3534
	0x037D3514 ADRP X8, 0x975000
	0x037D3518 LDR X8, [X8 + 0x9B0]
	0x037D351C ADD X0, X20, 0x100
	0x037D3520 MOV X1, X19
	0x037D3524 LDP X20, X19, [X31 + 0x10]
	0x037D3528 LDR X2, [X8]
	0x037D352C LDP X30, X21, [X31], #0x20
	0x037D3530 B 0x28F14E0
	0x037D3534 ADRP X0, 0x925000
	0x037D3538 LDR X0, [X0 + 0x528]
	0x037D353C BL 0x1C16D08
	0x037D3540 BL 0x1C16F10
	0x037D3544 MOV X19, X0
	0x037D3548 ADRP X0, 0x92A000
	0x037D354C LDR X0, [X0 + 0xEC8]
	0x037D3550 BL 0x1C16D08
	0x037D3554 MOV X1, X0
	0x037D3558 MOV X0, X19
	0x037D355C MOV X2, X31
	0x037D3560 BL 0x330E100
	0x037D3564 ADRP X0, 0x975000
	0x037D3568 LDR X0, [X0 + 0x9D0]
	0x037D356C BL 0x1C16D08
	0x037D3570 MOV X1, X0
	0x037D3574 MOV X0, X19
	0x037D3578 BL 0x1C16DEC
	0x037D357C STP X30, X21, [X31 - 0x20]!
	0x037D3580 STP X20, X19, [X31 + 0x10]
	0x037D3584 ADRP X21, 0xC0E000
	0x037D3588 LDRB W8, [X21 + 0x255]
	0x037D358C MOV X19, X1
	0x037D3590 MOV X20, X0
	0x037D3594 TBNZ X8, 0x0, 0x37D35AC
	0x037D3598 ADRP X0, 0x975000
	0x037D359C LDR X0, [X0 + 0x9C0]
	0x037D35A0 BL 0x1C16CF4
	0x037D35A4 MOVZ W8, 0x1
	0x037D35A8 STRB W8, [X21 + 0x255]
	0x037D35AC CBZ X19, 0x37D35D0
	0x037D35B0 ADRP X8, 0x975000
	0x037D35B4 LDR X8, [X8 + 0x9C0]
	0x037D35B8 ADD X0, X20, 0x100
	0x037D35BC MOV X1, X19
	0x037D35C0 LDP X20, X19, [X31 + 0x10]
	0x037D35C4 LDR X2, [X8]
	0x037D35C8 LDP X30, X21, [X31], #0x20
	0x037D35CC B 0x28F1650
	0x037D35D0 ADRP X0, 0x925000
	0x037D35D4 LDR X0, [X0 + 0x528]
	0x037D35D8 BL 0x1C16D08
	0x037D35DC BL 0x1C16F10
	0x037D35E0 MOV X19, X0
	0x037D35E4 ADRP X0, 0x92A000
	0x037D35E8 LDR X0, [X0 + 0xEC8]
	0x037D35EC BL 0x1C16D08
	0x037D35F0 MOV X1, X0
	0x037D35F4 MOV X0, X19
	0x037D35F8 MOV X2, X31
	0x037D35FC BL 0x330E100
	0x037D3600 ADRP X0, 0x975000
	0x037D3604 LDR X0, [X0 + 0x9D8]
	0x037D3608 BL 0x1C16D08
	0x037D360C MOV X1, X0
	0x037D3610 MOV X0, X19
	0x037D3614 BL 0x1C16DEC
	0x037D3618 STP X30, X21, [X31 - 0x20]!
	0x037D361C STP X20, X19, [X31 + 0x10]
	0x037D3620 ADRP X21, 0xC0E000
	0x037D3624 LDRB W8, [X21 + 0x256]
	0x037D3628 MOV X19, X1
	0x037D362C MOV X20, X0
	0x037D3630 TBNZ X8, 0x0, 0x37D3648
	0x037D3634 ADRP X0, 0x975000
	0x037D3638 LDR X0, [X0 + 0x9B0]
	0x037D363C BL 0x1C16CF4
	0x037D3640 MOVZ W8, 0x1
	0x037D3644 STRB W8, [X21 + 0x256]
	0x037D3648 CBZ X19, 0x37D366C
	0x037D364C ADRP X8, 0x975000
	0x037D3650 LDR X8, [X8 + 0x9B0]
	0x037D3654 ADD X0, X20, 0x150
	0x037D3658 MOV X1, X19
	0x037D365C LDP X20, X19, [X31 + 0x10]
	0x037D3660 LDR X2, [X8]
	0x037D3664 LDP X30, X21, [X31], #0x20
	0x037D3668 B 0x28F14E0
	0x037D366C ADRP X0, 0x925000
	0x037D3670 LDR X0, [X0 + 0x528]
	0x037D3674 BL 0x1C16D08
	0x037D3678 BL 0x1C16F10
	0x037D367C MOV X19, X0
	0x037D3680 ADRP X0, 0x92A000
	0x037D3684 LDR X0, [X0 + 0xEC8]
	0x037D3688 BL 0x1C16D08
	0x037D368C MOV X1, X0
	0x037D3690 MOV X0, X19
	0x037D3694 MOV X2, X31
	0x037D3698 BL 0x330E100
	0x037D369C ADRP X0, 0x975000
	0x037D36A0 LDR X0, [X0 + 0x9E0]
	0x037D36A4 BL 0x1C16D08
	0x037D36A8 MOV X1, X0
	0x037D36AC MOV X0, X19
	0x037D36B0 BL 0x1C16DEC
	0x037D36B4 STP X30, X21, [X31 - 0x20]!
	0x037D36B8 STP X20, X19, [X31 + 0x10]
	0x037D36BC ADRP X21, 0xC0E000
	0x037D36C0 LDRB W8, [X21 + 0x257]
	0x037D36C4 MOV X19, X1
	0x037D36C8 MOV X20, X0
	0x037D36CC TBNZ X8, 0x0, 0x37D36E4
	0x037D36D0 ADRP X0, 0x975000
	0x037D36D4 LDR X0, [X0 + 0x9C0]
	0x037D36D8 BL 0x1C16CF4
	0x037D36DC MOVZ W8, 0x1
	0x037D36E0 STRB W8, [X21 + 0x257]
	0x037D36E4 CBZ X19, 0x37D3708
	0x037D36E8 ADRP X8, 0x975000
	0x037D36EC LDR X8, [X8 + 0x9C0]
	0x037D36F0 ADD X0, X20, 0x150
	0x037D36F4 MOV X1, X19
	0x037D36F8 LDP X20, X19, [X31 + 0x10]
	0x037D36FC LDR X2, [X8]
	0x037D3700 LDP X30, X21, [X31], #0x20
	0x037D3704 B 0x28F1650
	0x037D3708 ADRP X0, 0x925000
	0x037D370C LDR X0, [X0 + 0x528]
	0x037D3710 BL 0x1C16D08
	0x037D3714 BL 0x1C16F10
	0x037D3718 MOV X19, X0
	0x037D371C ADRP X0, 0x92A000
	0x037D3720 LDR X0, [X0 + 0xEC8]
	0x037D3724 BL 0x1C16D08
	0x037D3728 MOV X1, X0
	0x037D372C MOV X0, X19
	0x037D3730 MOV X2, X31
	0x037D3734 BL 0x330E100
	0x037D3738 ADRP X0, 0x975000
	0x037D373C LDR X0, [X0 + 0x9E8]
	0x037D3740 BL 0x1C16D08
	0x037D3744 MOV X1, X0
	0x037D3748 MOV X0, X19
	0x037D374C BL 0x1C16DEC
	0x037D3750 LDR X0, [X0 + 0x78]
	0x037D3754 RET
	0x037D3758 STR X1, [X0 + 0x78]
	0x037D375C RET
	0x037D3760 LDR X0, [X0 + 0x30]
	0x037D3764 RET
	0x037D3768 STP X30, X23, [X31 - 0x30]!
	0x037D376C STP X22, X21, [X31 + 0x10]
	0x037D3770 STP X20, X19, [X31 + 0x20]
	0x037D3774 ADRP X21, 0xC0E000
	0x037D3778 ADRP X23, 0x920000
	0x037D377C LDRB W8, [X21 + 0x258]
	0x037D3780 LDR X23, [X23 + 0x598]
	0x037D3784 MOV X20, X1
	0x037D3788 MOV X19, X0
	0x037D378C TBNZ X8, 0x0, 0x37D37A4
	0x037D3790 ADRP X0, 0x920000
	0x037D3794 LDR X0, [X0 + 0x598]
	0x037D3798 BL 0x1C16CF4
	0x037D379C MOVZ W8, 0x1
	0x037D37A0 STRB W8, [X21 + 0x258]
	0x037D37A4 LDR X0, [X23]
	0x037D37A8 LDR X21, [X19 + 0x30]
	0x037D37AC LDR W8, [X0 + 0xE0]
	0x037D37B0 CBNZ W8, 0x37D37B8
	0x037D37B4 BL 0x1C16DFC
	0x037D37B8 MOV X0, X21
	0x037D37BC MOV X1, X20
	0x037D37C0 MOV X2, X31
	0x037D37C4 BL 0x3C3883C
	0x037D37C8 TBNZ X0, 0x0, 0x37D38AC
	0x037D37CC LDR X0, [X23]
	0x037D37D0 LDR X21, [X19 + 0x30]
	0x037D37D4 LDR W8, [X0 + 0xE0]
	0x037D37D8 CBNZ W8, 0x37D37E0
	0x037D37DC BL 0x1C16DFC
	0x037D37E0 MOV X0, X21
	0x037D37E4 MOV X1, X31
	0x037D37E8 MOV X2, X31
	0x037D37EC BL 0x3C354F8
	0x037D37F0 TBZ X0, 0x0, 0x37D383C
	0x037D37F4 LDR X8, [X19 + 0x30]
	0x037D37F8 CBZ X8, 0x37D38BC
	0x037D37FC LDR X0, [X23]
	0x037D3800 LDR X21, [X8 + 0x70]
	0x037D3804 LDR X22, [X19 + 0x20]
	0x037D3808 LDR W8, [X0 + 0xE0]
	0x037D380C CBNZ W8, 0x37D3814
	0x037D3810 BL 0x1C16DFC
	0x037D3814 MOV X0, X21
	0x037D3818 MOV X1, X22
	0x037D381C MOV X2, X31
	0x037D3820 BL 0x3C3883C
	0x037D3824 TBZ X0, 0x0, 0x37D383C
	0x037D3828 LDR X0, [X19 + 0x30]
	0x037D382C CBZ X0, 0x37D38BC
	0x037D3830 MOV X1, X31
	0x037D3834 MOV X2, X31
	0x037D3838 BL 0x37E91A0
	0x037D383C STR X20, [X19 + 0x30]
	0x037D3840 LDR X0, [X23]
	0x037D3844 LDR W8, [X0 + 0xE0]
	0x037D3848 CBNZ W8, 0x37D3850
	0x037D384C BL 0x1C16DFC
	0x037D3850 MOV X0, X20
	0x037D3854 MOV X1, X31
	0x037D3858 MOV X2, X31
	0x037D385C BL 0x3C354F8
	0x037D3860 TBZ X0, 0x0, 0x37D38AC
	0x037D3864 LDR X0, [X23]
	0x037D3868 LDR X20, [X19 + 0x20]
	0x037D386C LDR W8, [X0 + 0xE0]
	0x037D3870 CBNZ W8, 0x37D3878
	0x037D3874 BL 0x1C16DFC
	0x037D3878 MOV X0, X20
	0x037D387C MOV X1, X31
	0x037D3880 MOV X2, X31
	0x037D3884 BL 0x3C354F8
	0x037D3888 TBZ X0, 0x0, 0x37D38AC
	0x037D388C LDR X0, [X19 + 0x30]
	0x037D3890 CBZ X0, 0x37D38BC
	0x037D3894 LDR X1, [X19 + 0x20]
	0x037D3898 LDP X20, X19, [X31 + 0x20]
	0x037D389C LDP X22, X21, [X31 + 0x10]
	0x037D38A0 MOV X2, X31
	0x037D38A4 LDP X30, X23, [X31], #0x30
	0x037D38A8 B 0x37E91A0
	0x037D38AC LDP X20, X19, [X31 + 0x20]
	0x037D38B0 LDP X22, X21, [X31 + 0x10]
	0x037D38B4 LDP X30, X23, [X31], #0x30
	0x037D38B8 RET
	0x037D38BC BL 0x1C16F20
	0x037D38C0 LDR W0, [X0 + 0xA0]
	0x037D38C4 RET
	0x037D38C8 STP X30, X19, [X31 - 0x10]!
	0x037D38CC ADD X19, X0, 0xA0
	0x037D38D0 MOV X0, X19
	0x037D38D4 BL 0x37D2BD0
	0x037D38D8 TBZ X0, 0x0, 0x37D38E8
	0x037D38DC MOV X0, X19
	0x037D38E0 BL 0x37D38F8
	0x037D38E4 B 0x37D38F0
	0x037D38E8 MOV X0, X31
	0x037D38EC MOV X1, X31
	0x037D38F0 LDP X30, X19, [X31], #0x10
	0x037D38F4 RET
	0x037D38F8 SUB X31, X31, 0x30
	0x037D38FC STP X30, X21, [X31 + 0x10]
	0x037D3900 STP X20, X19, [X31 + 0x20]
	0x037D3904 ADRP X21, 0xC0E000
	0x037D3908 ADRP X20, 0x975000
	0x037D390C LDRB W8, [X21 + 0x2D4]
	0x037D3910 LDR X20, [X20 + 0x948]
	0x037D3914 MOV X19, X0
	0x037D3918 TBNZ X8, 0x0, 0x37D393C
	0x037D391C ADRP X0, 0x975000
	0x037D3920 LDR X0, [X0 + 0x948]
	0x037D3924 BL 0x1C16CF4
	0x037D3928 ADRP X0, 0x972000
	0x037D392C LDR X0, [X0 + 0x50]
	0x037D3930 BL 0x1C16CF4
	0x037D3934 MOVZ W8, 0x1
	0x037D3938 STRB W8, [X21 + 0x2D4]
	0x037D393C MOV X0, X19
	0x037D3940 BL 0x37DFF1C
	0x037D3944 LDR X8, [X20]
	0x037D3948 LDR X9, [X8 + 0xB8]
	0x037D394C LDR X8, [X9 + 0x20]
	0x037D3950 CBZ X8, 0x37D399C
	0x037D3954 LDR W10, [X8 + 0x18]
	0x037D3958 CMP W0, W10
	0x037D395C B.CS 0x37D39A0
	0x037D3960 ADRP X10, 0x972000
	0x037D3964 LDR X10, [X10 + 0x50]
	0x037D3968 LDR X1, [X9 + 0x28]
	0x037D396C MOVZ W9, 0xB8
	0x037D3970 SMADDL X8, X0, X9, X8
	0x037D3974 LDP W3, W2, [X8 + 0x48]
	0x037D3978 LDR X4, [X10]
	0x037D397C ADD X0, X31, 0x0
	0x037D3980 STP X31, X31, [X31]
	0x037D3984 BL 0x24FD82C
	0x037D3988 LDP X0, X1, [X31]
	0x037D398C LDP X20, X19, [X31 + 0x20]
	0x037D3990 LDP X30, X21, [X31 + 0x10]
	0x037D3994 ADD X31, X31, 0x30
	0x037D3998 RET
	0x037D399C BL 0x1C16F20
	0x037D39A0 BL 0x1C16F28
	0x037D39A4 SUB X31, X31, 0x20
	0x037D39A8 STP X30, X19, [X31 + 0x10]
	0x037D39AC LDR W8, [X0 + 0xA0]
	0x037D39B0 MOV X19, X0
	0x037D39B4 ADD X0, X31, 0x8
	0x037D39B8 STR W8, [X31 + 0x8]
	0x037D39BC BL 0x37D2BD0
	0x037D39C0 TBZ X0, 0x0, 0x37D39D8
	0x037D39C4 LDR W8, [X19 + 0xA0]
	0x037D39C8 ADD X0, X31, 0x8
	0x037D39CC STR W8, [X31 + 0x8]
	0x037D39D0 BL 0x37D39EC
	0x037D39D4 B 0x37D39DC
	0x037D39D8 MOV W0, W31
	0x037D39DC LDP X30, X19, [X31 + 0x10]
	0x037D39E0 AND W0, W0, 0x1
	0x037D39E4 ADD X31, X31, 0x20
	0x037D39E8 RET
	0x037D39EC STP X30, X21, [X31 - 0x20]!
	0x037D39F0 STP X20, X19, [X31 + 0x10]
	0x037D39F4 ADRP X20, 0xC0E000
	0x037D39F8 ADRP X21, 0x975000
	0x037D39FC LDRB W8, [X20 + 0x2D9]
	0x037D3A00 LDR X21, [X21 + 0x948]
	0x037D3A04 MOV X19, X0
	0x037D3A08 TBNZ X8, 0x0, 0x37D3A20
	0x037D3A0C ADRP X0, 0x975000
	0x037D3A10 LDR X0, [X0 + 0x948]
	0x037D3A14 BL 0x1C16CF4
	0x037D3A18 MOVZ W8, 0x1
	0x037D3A1C STRB W8, [X20 + 0x2D9]
	0x037D3A20 LDR X8, [X21]
	0x037D3A24 MOV X0, X19
	0x037D3A28 LDR X8, [X8 + 0xB8]
	0x037D3A2C LDR X20, [X8 + 0x20]
	0x037D3A30 BL 0x37DFF1C
	0x037D3A34 CBZ X20, 0x37D3A60
	0x037D3A38 LDR W8, [X20 + 0x18]
	0x037D3A3C CMP W0, W8
	0x037D3A40 B.CS 0x37D3A64
	0x037D3A44 MOVZ W8, 0xB8
	0x037D3A48 SMADDL X8, X0, X8, X20
	0x037D3A4C LDP X20, X19, [X31 + 0x10]
	0x037D3A50 ADD X0, X8, 0x78
	0x037D3A54 MOV X1, X31
	0x037D3A58 LDP X30, X21, [X31], #0x20
	0x037D3A5C B 0x376B9CC
	0x037D3A60 BL 0x1C16F20
	0x037D3A64 BL 0x1C16F28
	0x037D3A68 SUB X31, X31, 0x30
	0x037D3A6C STR X30, [X31 + 0x10]
	0x037D3A70 STP X20, X19, [X31 + 0x20]
	0x037D3A74 ADRP X20, 0xC0E000
	0x037D3A78 ADRP X19, 0x975000
	0x037D3A7C LDRB W8, [X20 + 0x259]
	0x037D3A80 LDR X19, [X19 + 0x8F8]
	0x037D3A84 TBNZ X8, 0x0, 0x37D3AA8
	0x037D3A88 ADRP X0, 0x975000
	0x037D3A8C LDR X0, [X0 + 0x8F8]
	0x037D3A90 BL 0x1C16CF4
	0x037D3A94 ADRP X0, 0x975000
	0x037D3A98 LDR X0, [X0 + 0x9F0]

ISIL:
	001 Subtract X31, X31, 480
	002 Move [X31+416], X29
	003 Move [X31+432], X30
	004 Move [X31+440], X23
	005 Move [X31+448], X22
	006 Move [X31+456], X21
	007 Move [X31+464], X20
	008 Move [X31+472], X19
	009 Move X20, 0xC0F000
	010 Move W8, [X20+617]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {60}
	016 Move X0, 0x921000
	017 Move X0, [X0+2600]
	018 Call 0x1C17CF4
	019 Move X0, 0x974000
	020 Move X0, [X0+1928]
	021 Call 0x1C17CF4
	022 Move X0, 0x974000
	023 Move X0, [X0+1896]
	024 Call 0x1C17CF4
	025 Move X0, 0x976000
	026 Move X0, [X0+2328]
	027 Call 0x1C17CF4
	028 Move X0, 0x976000
	029 Move X0, [X0+2336]
	030 Call 0x1C17CF4
	031 Move X0, 0x976000
	032 Move X0, [X0+2344]
	033 Call 0x1C17CF4
	034 Move X0, 0x973000
	035 Move X0, [X0+2488]
	036 Call 0x1C17CF4
	037 Move X0, 0x976000
	038 Move X0, [X0+2352]
	039 Call 0x1C17CF4
	040 Move X0, 0x921000
	041 Move X0, [X0+1432]
	042 Call 0x1C17CF4
	043 Move X0, 0x976000
	044 Move X0, [X0+2296]
	045 Call 0x1C17CF4
	046 Move X0, 0x973000
	047 Move X0, [X0+80]
	048 Call 0x1C17CF4
	049 Move X0, 0x973000
	050 Move X0, [X0+2536]
	051 Call 0x1C17CF4
	052 Move X0, 0x976000
	053 Move X0, [X0+2360]
	054 Call 0x1C17CF4
	055 Move X0, 0x976000
	056 Move X0, [X0+2368]
	057 Call 0x1C17CF4
	058 Move W8, 1
	059 Move [X20+617], W8
	060 Move X21, 0x921000
	061 Move X21, [X21+1432]
	062 Add X20, X19, 160
	063 NotImplemented "Instruction MOVI not yet implemented."
	064 Move X0, X20
	065 Move [X31+352], V0
	066 Move [X31+360], V0
	067 Move [X31+320], V0
	068 Move [X31+328], V0
	069 Move [X31+288], V0
	070 Move [X31+296], V0
	071 Move [X31+256], V0
	072 Move [X31+264], V0
	073 Move [X31+224], V0
	074 Move [X31+232], V0
	075 Move [X31+192], V0
	076 Move [X31+200], V0
	077 Call InputUser.get_valid, X0
	078 Move TEMP, X0
	079 And TEMP, TEMP, 1
	080 Compare TEMP, 1
	081 JumpIfNotEqual {84}
	082 Move X0, X20
	083 Call InputUser.UnpairDevices, X0
	084 Move X0, [X21]
	085 Move X21, [X19+32]
	086 Move W8, [X0+224]
	087 Compare W8, 0
	088 JumpIfNotEqual {90}
	089 Call 0x1C17DFC
	090 Move X23, 0x976000
	091 Move X23, [X23+2296]
	092 Move X0, X21
	093 Move X1, X31
	094 Move X2, X31
	095 Call Object.op_Equality, X0, X1
	096 Move TEMP, X0
	097 And TEMP, TEMP, 1
	098 Compare TEMP, 1
	099 JumpIfNotEqual {137}
	100 Move X0, [X23]
	101 Move W8, [X0+224]
	102 Compare W8, 0
	103 JumpIfNotEqual {106}
	104 Call 0x1C17DFC
	105 Move X0, [X23]
	106 Move X8, [X0+184]
	107 Move W8, [X8+24]
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Move X20, X31
	110 Move W8, [X0+224]
	111 Compare W8, 0
	112 JumpIfNotEqual {115}
	113 Call 0x1C17DFC
	114 Move X0, [X23]
	115 Move X8, [X0+184]
	116 NotImplemented "Instruction LDRSW not yet implemented."
	117 NotImplemented "Instruction CMP not yet implemented."
	118 Move W9, [X0+224]
	119 Compare W9, 0
	120 JumpIfNotEqual {124}
	121 Call 0x1C17DFC
	122 Move X8, [X23]
	123 Move X8, [X8+184]
	124 Move X8, [X8+32]
	125 Compare X8, 0
	126 JumpIfEqual {517}
	127 Move W9, [X8+24]
	128 NotImplemented "Instruction CMP not yet implemented."
	129 Add X8, X8, X20
	130 Move X0, [X8+32]
	131 Move W1, [X19+160]
	132 Move W2, W31
	133 Call InputUser.PerformPairingWithDevice, X0, X1, X2
	134 Move [X19+160], W0
	135 Move X0, [X23]
	136 Add X20, X20, 1
	137 Move X0, [X19+32]
	138 Compare X0, 0
	139 JumpIfEqual {517}
	140 Move X1, X31
	141 Call InputActionAsset.get_controlSchemes, X0
	142 Move X8, X1
	143 ShiftRight X8, 32
	144 And X8, X8, 0x7FFFFFFF
	145 NotImplemented "Instruction CMP not yet implemented."
	146 Move X0, [X23]
	147 Move W8, [X0+224]
	148 Compare W8, 0
	149 JumpIfNotEqual {152}
	150 Call 0x1C17DFC
	151 Move X0, [X23]
	152 Move X8, [X0+184]
	153 Move X1, X31
	154 Move X0, [X8+48]
	155 Call String.IsNullOrEmpty, X0
	156 Move TEMP, X0
	157 And TEMP, TEMP, 1
	158 Compare TEMP, 1
	159 JumpIfNotEqual {193}
	160 Move X0, [X19+96]
	161 Move X1, X31
	162 Call String.IsNullOrEmpty, X0
	163 Move TEMP, X0
	164 And TEMP, TEMP, 1
	165 Compare TEMP, 1
	166 JumpIfEqual {260}
	167 Move X0, [X19+32]
	168 Compare X0, 0
	169 JumpIfEqual {517}
	170 Move X1, [X19+96]
	171 Add X8, X31, 384
	172 Move X2, X31
	173 Call InputActionAsset.FindControlScheme, X0, X1
	174 Move V0, [X31+384]
	175 Move V1, [X31+400]
	176 Move [X31+320], V0
	177 Move [X31+328], V1
	178 Move W8, [X31+320]
	179 Compare W8, 0
	180 JumpIfEqual {240}
	181 Move X8, 0x976000
	182 Move X8, [X8+2352]
	183 Add X0, X31, 320
	184 Move X1, [X8]
	185 Add X8, X31, 384
	186 Call Nullable`1<InputControlScheme>.get_Value, X0
	187 Move V0, [X31+24]
	188 Move X8, [X31+400]
	189 Add X1, X31, 128
	190 Move [X31+8], V0
	191 Move [X31+144], X8
	192 Move [X20], W31
	193 Move X0, [X23]
	194 Move X21, [X19+32]
	195 Move W8, [X0+224]
	196 Compare W8, 0
	197 JumpIfNotEqual {199}
	198 Call 0x1C17DFC
	199 Compare X21, 0
	200 JumpIfEqual {517}
	201 Move X8, [X23]
	202 Move X0, X21
	203 Move X2, X31
	204 Move X8, [X8+184]
	205 Move X1, [X8+48]
	206 Add X8, X31, 384
	207 Call InputActionAsset.FindControlScheme, X0, X1
	208 Move V0, [X31+384]
	209 Move V1, [X31+400]
	210 Move [X31+352], V0
	211 Move [X31+360], V1
	212 Move W8, [X31+352]
	213 Compare W8, 0
	214 JumpIfEqual {228}
	215 Move X8, 0x976000
	216 Move X8, [X8+2352]
	217 Add X0, X31, 352
	218 Move X1, [X8]
	219 Add X8, X31, 384
	220 Call Nullable`1<InputControlScheme>.get_Value, X0
	221 Move V0, [X31+24]
	222 Move X8, [X31+400]
	223 Add X1, X31, 160
	224 Move [X31+10], V0
	225 Move [X31+176], X8
	226 Move X0, X19
	227 Call PlayerInput.TryToActivateControlScheme, X0, X1
	228 Move X0, [X23]
	229 Move W8, [X0+224]
	230 Compare W8, 0
	231 JumpIfNotEqual {234}
	232 Call 0x1C17DFC
	233 Move X0, [X23]
	234 Move X9, 0x976000
	235 Move X8, [X0+184]
	236 Move X2, [X19+32]
	237 Move X9, [X9+2368]
	238 Move X1, [X8+48]
	239 Move X0, [X9]
	240 Move X8, 0x976000
	241 Move X1, [X19+96]
	242 Move X2, [X19+32]
	243 Move X8, [X8+2360]
	244 Move X0, [X8]
	245 Move X3, X31
	246 Call String.Format, X0, X1, X2
	247 Move X8, 0x921000
	248 Move X8, [X8+2600]
	249 Move X21, X0
	250 Move X8, [X8]
	251 Move W9, [X8+224]
	252 Compare W9, 0
	253 JumpIfNotEqual {256}
	254 Move X0, X8
	255 Call 0x1C17DFC
	256 Move X0, X21
	257 Move X1, X19
	258 Move X2, X31
	259 Call Debug.LogError, X0, X1
	260 Move X0, [X23]
	261 Move W8, [X0+224]
	262 Compare W8, 0
	263 JumpIfNotEqual {266}
	264 Call 0x1C17DFC
	265 Move X0, [X23]
	266 Move X8, [X0+184]
	267 Move W8, [X8+24]
	268 NotImplemented "Instruction CMP not yet implemented."
	269 Move X0, X20
	270 Call InputUser.get_valid, X0
	271 Move TEMP, X0
	272 And TEMP, TEMP, 1
	273 Compare TEMP, 1
	274 JumpIfNotEqual {359}
	275 Add X8, X31, 384
	276 Move X0, X20
	277 Call InputUser.get_controlScheme, X0
	278 Move W8, [X31+384]
	279 Compare W8, 0
	280 JumpIfEqual {359}
	281 Move X0, X20
	282 Call InputUser.get_valid, X0
	283 Move TEMP, X0
	284 And TEMP, TEMP, 1
	285 Compare TEMP, 1
	286 JumpIfNotEqual {293}
	287 Add X8, X31, 384
	288 Move X0, X20
	289 Call InputUser.get_controlScheme, X0
	290 Move W8, [X31+384]
	291 Compare W8, 0
	292 JumpIfNotEqual {499}
	293 Move X0, [X23]
	294 Move W8, [X0+224]
	295 Compare W8, 0
	296 JumpIfNotEqual {299}
	297 Call 0x1C17DFC
	298 Move X0, [X23]
	299 Move X8, [X0+184]
	300 Move X1, X31
	301 Move X0, [X8+48]
	302 Call String.IsNullOrEmpty, X0
	303 Move TEMP, X0
	304 And TEMP, TEMP, 1
	305 Compare TEMP, 1
	306 JumpIfNotEqual {499}
	307 Add X8, X31, 384
	308 Call InputUser.GetUnpairedInputDevices
	309 Move V1, [X31+384]
	310 Move V0, [X31+400]
	311 Move [X31+256], V1
	312 Move [X31+264], V0
	313 Move [X31+64], V1
	314 Move [X31+72], V0
	315 Move X0, [X19+32]
	316 Compare X0, 0
	317 JumpIfEqual {413}
	318 Move X1, X31
	319 Call InputActionAsset.get_controlSchemes, X0
	320 Move X8, 0x976000
	321 Move X8, [X8+2336]
	322 Move V0, [X31+64]
	323 Move V1, [X31+80]
	324 Move X2, X0
	325 Move X3, X1
	326 Move X5, [X8]
	327 Move [X31+384], V0
	328 Move [X31+392], V1
	329 Add X8, X31, 32
	330 Add X0, X31, 384
	331 Move X1, X2
	332 Move X2, X3
	333 Move X3, X31
	334 Move W4, W31
	335 Call 0x2200F30, X0, X1, X2, X3
	336 Move V0, [X31+32]
	337 Move V1, [X31+48]
	338 Move [X31+224], V0
	339 Move [X31+232], V1
	340 Move W8, [X31+224]
	341 Compare W8, 0
	342 JumpIfEqual {356}
	343 Move X8, 0x976000
	344 Move X8, [X8+2352]
	345 Move X1, [X8]
	346 Add X8, X31, 384
	347 Add X0, X31, 224
	348 Call Nullable`1<InputControlScheme>.get_Value, X0
	349 Move V0, [X31+24]
	350 Move X8, [X31+400]
	351 Move [X31], V0
	352 Move [X31+16], X8
	353 Add X1, X31, 0
	354 Move X0, X19
	355 Call PlayerInput.TryToActivateControlScheme, X0, X1
	356 Move X8, 0x974000
	357 Move X8, [X8+1928]
	358 Add X0, X31, 256
	359 Move X0, [X23]
	360 Move W8, [X0+224]
	361 Compare W8, 0
	362 JumpIfNotEqual {365}
	363 Call 0x1C17DFC
	364 Move X0, [X23]
	365 Move X9, 0x973000
	366 Move X8, [X0+184]
	367 Move X9, [X9+80]
	368 Add X0, X31, 64
	369 Move W2, W31
	370 Move X1, [X8+32]
	371 Move W3, [X8+24]
	372 Move X4, [X9]
	373 Move [X31+64], X31
	374 Move [X31+72], X31
	375 Call ReadOnlyArray`1<Object>..ctor, X0, X1, X2, X3
	376 Move X0, [X19+32]
	377 Compare X0, 0
	378 JumpIfEqual {517}
	379 Move X1, X31
	380 Call InputActionAsset.get_controlSchemes, X0
	381 Move X8, 0x976000
	382 Move X2, X0
	383 Move X0, [X31+64]
	384 Move X9, [X31+72]
	385 Move X8, [X8+2344]
	386 Move X3, X1
	387 Move W5, 1
	388 Move X1, X9
	389 Move X6, [X8]
	390 Add X8, X31, 384
	391 Move X4, X31
	392 Call InputControlScheme.FindControlSchemeForDevices, X0, X1, X2, X3
	393 Move V0, [X31+384]
	394 Move V1, [X31+400]
	395 Move [X31+288], V0
	396 Move [X31+296], V1
	397 Move W8, [X31+288]
	398 Compare W8, 0
	399 JumpIfEqual {499}
	400 Move X8, 0x976000
	401 Move X8, [X8+2352]
	402 Add X0, X31, 288
	403 Move X1, [X8]
	404 Add X8, X31, 384
	405 Call Nullable`1<InputControlScheme>.get_Value, X0
	406 Move V0, [X31+24]
	407 Move X8, [X31+400]
	408 Add X1, X31, 96
	409 Move X0, X19
	410 Move [X31+6], V0
	411 Move [X31+112], X8
	412 Call PlayerInput.TryToActivateControlScheme, X0, X1
	413 Call 0x1C17F20
	414 Move X21, X0
	415 NotImplemented "Instruction CMP not yet implemented."
	416 Move X0, X21
	417 Call 0x3EB2AD0
	418 Move X22, [X0]
	419 Call 0x3EB2AE0
	420 Move X8, 0x974000
	421 Move X8, [X8+1928]
	422 Add X0, X31, 256
	423 Move X1, [X8]
	424 Call 0x2DFC98C, X0
	425 Compare X22, 0
	426 JumpIfNotEqual {543}
	427 Move X8, [X23]
	428 Move W9, [X8+224]
	429 Compare W9, 0
	430 JumpIfNotEqual {434}
	431 Move X0, X8
	432 Call 0x1C17DFC
	433 Move X8, [X23]
	434 Move X9, [X8+184]
	435 Move W9, [X9+24]
	436 NotImplemented "Instruction CMP not yet implemented."
	437 Move X21, X31
	438 Move W9, [X8+224]
	439 Compare W9, 0
	440 JumpIfNotEqual {444}
	441 Move X0, X8
	442 Call 0x1C17DFC
	443 Move X8, [X23]
	444 Move X9, [X8+184]
	445 NotImplemented "Instruction LDRSW not yet implemented."
	446 NotImplemented "Instruction CMP not yet implemented."
	447 Move W10, [X8+224]
	448 Compare W10, 0
	449 JumpIfNotEqual {454}
	450 Move X0, X8
	451 Call 0x1C17DFC
	452 Move X8, [X23]
	453 Move X9, [X8+184]
	454 Move X8, [X9+32]
	455 Compare X8, 0
	456 JumpIfEqual {517}
	457 Move W9, [X8+24]
	458 NotImplemented "Instruction CMP not yet implemented."
	459 Add X8, X8, X21
	460 Move X0, [X8+32]
	461 Move W1, [X19+160]
	462 Move W2, W31
	463 Call InputUser.PerformPairingWithDevice, X0, X1, X2
	464 Move [X19+160], W0
	465 Move X8, [X23]
	466 Add X21, X21, 1
	467 Add X8, X31, 192
	468 Call InputUser.GetUnpairedInputDevices
	469 Move W8, [X31+192]
	470 NotImplemented "Instruction CMP not yet implemented."
	471 Move X23, 0x976000
	472 Move X23, [X23+2328]
	473 Move W21, W31
	474 Move X2, [X23]
	475 Add X0, X31, 192
	476 Move W1, W21
	477 Call 0x2DFB48C, X0, X1
	478 Move X22, X0
	479 Move X0, X19
	480 Move X1, X22
	481 Call PlayerInput.HaveBindingForDevice, X0, X1
	482 Move TEMP, X0
	483 And TEMP, TEMP, 1
	484 Compare TEMP, 1
	485 JumpIfNotEqual {491}
	486 Move W1, [X19+160]
	487 Move X0, X22
	488 Move W2, W31
	489 Call InputUser.PerformPairingWithDevice, X0, X1, X2
	490 Move [X19+160], W0
	491 Move W8, [X31+192]
	492 Add W21, W21, 1
	493 NotImplemented "Instruction CMP not yet implemented."
	494 Move X8, 0x974000
	495 Move X8, [X8+1928]
	496 Add X0, X31, 192
	497 Move X1, [X8]
	498 Call 0x2DFC98C, X0
	499 Move X0, X20
	500 Call InputUser.get_valid, X0
	501 Move TEMP, X0
	502 And TEMP, TEMP, 1
	503 Compare TEMP, 1
	504 JumpIfNotEqual {508}
	505 Move X1, [X19+32]
	506 Move X0, X20
	507 Call InputUser.AssociateActionsWithUser, X0, X1
	508 Move X20, [X31+464]
	509 Move X19, [X31+472]
	510 Move X22, [X31+448]
	511 Move X21, [X31+456]
	512 Move X30, [X31+432]
	513 Move X23, [X31+440]
	514 Move X29, [X31+416]
	515 Add X31, X31, 480
	516 Return 
	517 Call 0x1C17F20
	518 Call 0x1C17F28
	519 Move X22, X31
	520 Move X21, X0
	521 Move X8, 0x974000
	522 Move X8, [X8+1928]
	523 Move X1, [X8]
	524 Add X0, X31, 256
	525 Call 0x2DFC98C, X0
	526 Compare X22, 0
	527 JumpIfEqual {554}
	528 Move X0, X22
	529 Call 0x1C17F18
	530 Move X21, X0
	531 NotImplemented "Instruction CMP not yet implemented."
	532 Move X0, X21
	533 Call 0x3EB2AD0
	534 Move X22, [X0]
	535 Call 0x3EB2AE0
	536 Move X8, 0x974000
	537 Move X8, [X8+1928]
	538 Add X0, X31, 192
	539 Move X1, [X8]
	540 Call 0x2DFC98C, X0
	541 Compare X22, 0
	542 JumpIfEqual {499}
	543 Move X0, X22
	544 Call 0x1C17F18
	545 Move X22, X31
	546 Move X21, X0
	547 Move X8, 0x974000
	548 Move X8, [X8+1928]
	549 Move X1, [X8]
	550 Add X0, X31, 192
	551 Call 0x2DFC98C, X0
	552 Compare X22, 0
	553 JumpIfNotEqual {556}
	554 Move X0, X21
	555 Call 0x1D2D690
	556 Move X0, X22
	557 Call 0x1C17F18
	558 Call 0x1991590

Method: System.Boolean HaveBindingForDevice(UnityEngine.InputSystem.InputDevice device)

Disassembly:
	0x037D6D10 BL 0x1C16CF4
	0x037D6D14 ADRP X0, 0x972000
	0x037D6D18 LDR X0, [X0 + 0xB18]
	0x037D6D1C BL 0x1C16CF4
	0x037D6D20 ADRP X0, 0x972000
	0x037D6D24 LDR X0, [X0 + 0xB20]
	0x037D6D28 BL 0x1C16CF4
	0x037D6D2C MOVZ W8, 0x1
	0x037D6D30 STRB W8, [X20 + 0x276]
	0x037D6D34 LDR W8, [X19 + 0x28]
	0x037D6D38 CMP W8, 0x3
	0x037D6D3C B.HI 0x37D6DCC
	0x037D6D40 ADRP X9, 0xFFFFFFFFFD3C1000
	0x037D6D44 ADD X9, X9, 0x97C
	0x037D6D48 ADR X10, 0x10
	0x037D6D4C LDRB W11, [X9, X8, LSL]
	0x037D6D50 ADD X10, X10, X11, 0x2, LSL
	0x037D6D54 BR X10
	0x037D6D58 ADRP X8, 0x972000
	0x037D6D5C LDR X8, [X8 + 0xB20]
	0x037D6D60 MOV X0, X19
	0x037D6D64 MOV X2, X19
	0x037D6D68 LDP X20, X19, [X31 + 0x10]
	0x037D6D6C LDR X1, [X8]
	0x037D6D70 MOVZ W3, 0x1
	0x037D6D74 MOV X4, X31
	0x037D6D78 LDR X30, [X31], #0x20
	0x037D6D7C B 0x3C334DC
	0x037D6D80 ADRP X8, 0x972000
	0x037D6D84 LDR X8, [X8 + 0xB20]
	0x037D6D88 MOV X0, X19
	0x037D6D8C MOV X2, X19
	0x037D6D90 LDP X20, X19, [X31 + 0x10]
	0x037D6D94 LDR X1, [X8]
	0x037D6D98 MOVZ W3, 0x1
	0x037D6D9C MOV X4, X31
	0x037D6DA0 LDR X30, [X31], #0x20
	0x037D6DA4 B 0x3C33538
	0x037D6DA8 LDR X0, [X19 + 0x48]
	0x037D6DAC CBZ X0, 0x37D6DCC
	0x037D6DB0 ADRP X8, 0x972000
	0x037D6DB4 LDR X8, [X8 + 0xB10]
	0x037D6DB8 MOV X1, X19
	0x037D6DBC LDP X20, X19, [X31 + 0x10]
	0x037D6DC0 LDR X2, [X8]
	0x037D6DC4 LDR X30, [X31], #0x20
	0x037D6DC8 B 0x2729DBC
	0x037D6DCC LDP X20, X19, [X31 + 0x10]
	0x037D6DD0 LDR X30, [X31], #0x20
	0x037D6DD4 RET
	0x037D6DD8 ADRP X8, 0x972000
	0x037D6DDC ADRP X9, 0x972000
	0x037D6DE0 LDR X8, [X8 + 0xB18]
	0x037D6DE4 LDR X9, [X9 + 0xB08]
	0x037D6DE8 ADD X0, X19, 0x150
	0x037D6DEC MOV X1, X19
	0x037D6DF0 LDR X2, [X8]
	0x037D6DF4 LDR X4, [X9]
	0x037D6DF8 LDP X20, X19, [X31 + 0x10]
	0x037D6DFC MOV X3, X31
	0x037D6E00 LDR X30, [X31], #0x20
	0x037D6E04 B 0x21AD310
	0x037D6E08 STP X30, X21, [X31 - 0x20]!
	0x037D6E0C STP X20, X19, [X31 + 0x10]
	0x037D6E10 ADRP X21, 0xC0B000

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+32], X22
	004 Move [X31+40], X21
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move X22, 0xC0C000
	008 Move X21, 0x91E000
	009 Move W8, [X22+618]
	010 Move X21, [X21+1432]
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {28}
	017 Move X0, 0x91E000
	018 Move X0, [X0+1432]
	019 Call 0x1C17CF4
	020 Move X0, 0x973000
	021 Move X0, [X0+2304]
	022 Call 0x1C17CF4
	023 Move X0, 0x973000
	024 Move X0, [X0+2312]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X22+618], W8
	028 Move X0, [X21]
	029 Move X21, [X20+32]
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move X0, X21
	035 Move X1, X31
	036 Move X2, X31
	037 Call Object.op_Equality, X0, X1
	038 Move TEMP, X0
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfEqual {72}
	042 Move X0, [X20+32]
	043 Compare X0, 0
	044 JumpIfEqual {81}
	045 Move X1, X31
	046 Call InputActionAsset.get_actionMaps, X0
	047 Move X8, X1
	048 ShiftRight X8, 32
	049 And X8, X8, 0x7FFFFFFF
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move [X31], X0
	052 Move [X31+8], X1
	053 Move X21, 0x973000
	054 Move X21, [X21+2312]
	055 Move W20, W31
	056 Move X2, [X21]
	057 Add X0, X31, 0
	058 Move W1, W20
	059 Call ReadOnlyArray`1<Object>.get_Item, X0, X1
	060 Compare X0, 0
	061 JumpIfEqual {81}
	062 Move X1, X19
	063 Move X2, X31
	064 Call InputActionMap.IsUsableWithDevice, X0, X1
	065 Move W8, [X31+12]
	066 Add W20, W20, 1
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Move TEMP, X0
	069 And TEMP, TEMP, 1
	070 Compare TEMP, 1
	071 JumpIfNotEqual {56}
	072 Move W0, W31
	073 Move X20, [X31+48]
	074 Move X19, [X31+56]
	075 Move X22, [X31+32]
	076 Move X21, [X31+40]
	077 Move X30, [X31+16]
	078 And W0, W0, 1
	079 Add X31, X31, 64
	080 Return X0
	081 Call 0x1C17F20

Method: System.Void UnassignUserAndDevices()

Disassembly:
	0x037D714C LDR X20, [X20 + 0x948]
	0x037D7150 CBZ W19, 0x37D7180
	0x037D7154 LDR X8, [X20]
	0x037D7158 ADRP X9, 0x971000
	0x037D715C LDR X9, [X9 + 0xB58]
	0x037D7160 LDR X8, [X8 + 0xB8]
	0x037D7164 LDR X1, [X9]
	0x037D7168 ADD X0, X8, 0xA8
	0x037D716C BL 0x28F140C
	0x037D7170 CMP W0, 0x1
	0x037D7174 B.LT 0x37D7184
	0x037D7178 BL 0x37E0450
	0x037D717C B 0x37D7184
	0x037D7180 BL 0x37E0554
	0x037D7184 LDR X8, [X20]
	0x037D7188 LDR X8, [X8 + 0xB8]
	0x037D718C STR W19, [X8 + 0x164]
	0x037D7190 LDP X20, X19, [X31 + 0x10]
	0x037D7194 LDR X30, [X31], #0x20
	0x037D7198 RET
	0x037D719C ADRP X0, 0x924000
	0x037D71A0 LDR X0, [X0 + 0x760]
	0x037D71A4 BL 0x1C16D08
	0x037D71A8 BL 0x1C16F10
	0x037D71AC MOV X19, X0
	0x037D71B0 ADRP X0, 0x926000
	0x037D71B4 LDR X0, [X0 + 0xEC8]
	0x037D71B8 BL 0x1C16D08
	0x037D71BC MOV X20, X0
	0x037D71C0 ADRP X0, 0x971000
	0x037D71C4 LDR X0, [X0 + 0xB60]
	0x037D71C8 BL 0x1C16D08
	0x037D71CC MOV X2, X0
	0x037D71D0 MOV X0, X19
	0x037D71D4 MOV X1, X20
	0x037D71D8 MOV X3, X31
	0x037D71DC BL 0x3311888
	0x037D71E0 ADRP X0, 0x971000
	0x037D71E4 LDR X0, [X0 + 0xB68]
	0x037D71E8 BL 0x1C16D08
	0x037D71EC MOV X1, X0
	0x037D71F0 MOV X0, X19
	0x037D71F4 BL 0x1C16DEC
	0x037D71F8 STP X30, X21, [X31 - 0x20]!
	0x037D71FC STP X20, X19, [X31 + 0x10]
	0x037D7200 ADRP X20, 0xC0A000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X20, 0xC0B000
	007 Move W8, [X20+619]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x91D000
	014 Move X0, [X0+1432]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X20+619], W8
	018 Move X21, 0x91D000
	019 Move X21, [X21+1432]
	020 Add X20, X19, 160
	021 Move X0, X20
	022 Call InputUser.get_valid, X0
	023 Move TEMP, X0
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfNotEqual {29}
	027 Move X0, X20
	028 Call InputUser.UnpairDevicesAndRemoveUser, X0
	029 Move X0, [X21]
	030 Move X20, [X19+32]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move X0, X20
	036 Move X1, X31
	037 Move X2, X31
	038 Call Object.op_Inequality, X0, X1
	039 Move TEMP, X0
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfNotEqual {56}
	043 Move X0, [X19+32]
	044 Move [X31+24], X31
	045 Move [X31+32], X31
	046 Move [X31+40], X31
	047 Compare X0, 0
	048 JumpIfEqual {62}
	049 NotImplemented "Instruction LDUR not yet implemented."
	050 Move X8, [X31+40]
	051 Add X1, X31, 0
	052 Move X2, X31
	053 Move [X31], V0
	054 Move [X31+16], X8
	055 Call InputActionAsset.set_devices, X0, X1
	056 Move X20, [X31+64]
	057 Move X19, [X31+72]
	058 Move X30, [X31+48]
	059 Move X21, [X31+56]
	060 Add X31, X31, 80
	061 Return 
	062 Call 0x1C17F20

Method: System.Boolean TryToActivateControlScheme(UnityEngine.InputSystem.InputControlScheme controlScheme)

Disassembly:
	0x037D6AC0 RET
	0x037D6AC4 BL 0x1C16F20
	0x037D6AC8 BL 0x1C16F28
	0x037D6ACC MOV X0, X21
	0x037D6AD0 BL 0x1C16F18
	0x037D6AD4 CMP W1, 0x1
	0x037D6AD8 MOV X22, X0
	0x037D6ADC B.NE 0x37D6AF4
	0x037D6AE0 MOV X0, X22
	0x037D6AE4 BL 0x3EB1AD0
	0x037D6AE8 LDR X21, [X0]
	0x037D6AEC BL 0x3EB1AE0
	0x037D6AF0 B 0x37D678C
	0x037D6AF4 MOV X21, X31
	0x037D6AF8 B 0x37D6B00
	0x037D6AFC MOV X22, X0
	0x037D6B00 CBZ X20, 0x37D6B5C
	0x037D6B04 LDR X8, [X20]
	0x037D6B08 LDR X1, [X23]
	0x037D6B0C LDRH W9, [X8 + 0x12E]
	0x037D6B10 CBZ X9, 0x37D6B34
	0x037D6B14 LDR X10, [X8 + 0xB0]
	0x037D6B18 ADD X10, X10, 0x8
	0x037D6B1C LDUR X11, [X10 - 0x8]
	0x037D6B20 CMP X11, X1
	0x037D6B24 B.EQ 0x37D6B44
	0x037D6B28 SUBS X9, X9, 0x1
	0x037D6B2C ADD X10, X10, 0x10
	0x037D6B30 B.NE 0x37D6B1C
	0x037D6B34 MOV X0, X20
	0x037D6B38 MOV W2, W31
	0x037D6B3C BL 0x1C5C788
	0x037D6B40 B 0x37D6B50
	0x037D6B44 LDRSW X9, [X10]
	0x037D6B48 ADD X8, X8, X9, 0x4, LSL
	0x037D6B4C ADD X0, X8, 0x138
	0x037D6B50 LDP X8, X1, [X0]
	0x037D6B54 MOV X0, X20
	0x037D6B58 BLR X8
	0x037D6B5C CBNZ X21, 0x37D6B68
	0x037D6B60 MOV X0, X22
	0x037D6B64 BL 0x1D2C690
	0x037D6B68 MOV X0, X21
	0x037D6B6C BL 0x1C16F18
	0x037D6B70 BL 0x1990590
	0x037D6B74 STR X30, [X31 - 0x20]!
	0x037D6B78 STP X20, X19, [X31 + 0x10]
	0x037D6B7C ADRP X20, 0xC0B000
	0x037D6B80 LDRB W8, [X20 + 0x2DB]
	0x037D6B84 MOV X19, X0
	0x037D6B88 TBNZ X8, 0x0, 0x37D6BAC
	0x037D6B8C ADRP X0, 0x972000
	0x037D6B90 LDR X0, [X0 + 0xAF0]
	0x037D6B94 BL 0x1C16CF4
	0x037D6B98 ADRP X0, 0x972000
	0x037D6B9C LDR X0, [X0 + 0x948]
	0x037D6BA0 BL 0x1C16CF4
	0x037D6BA4 MOVZ W8, 0x1
	0x037D6BA8 STRB W8, [X20 + 0x2DB]
	0x037D6BAC CBZ X19, 0x37D6BE0
	0x037D6BB0 ADRP X8, 0x972000
	0x037D6BB4 LDR X8, [X8 + 0x948]
	0x037D6BB8 ADRP X9, 0x972000
	0x037D6BBC MOV X1, X19
	0x037D6BC0 LDR X8, [X8]
	0x037D6BC4 LDR X9, [X9 + 0xAF0]
	0x037D6BC8 LDP X20, X19, [X31 + 0x10]
	0x037D6BCC LDR X8, [X8 + 0xB8]
	0x037D6BD0 LDR X2, [X9]
	0x037D6BD4 ADD X0, X8, 0x58
	0x037D6BD8 LDR X30, [X31], #0x20
	0x037D6BDC B 0x28F14E0
	0x037D6BE0 ADRP X0, 0x922000
	0x037D6BE4 LDR X0, [X0 + 0x528]
	0x037D6BE8 BL 0x1C16D08
	0x037D6BEC BL 0x1C16F10
	0x037D6BF0 MOV X19, X0
	0x037D6BF4 ADRP X0, 0x927000
	0x037D6BF8 LDR X0, [X0 + 0xEC8]
	0x037D6BFC BL 0x1C16D08
	0x037D6C00 MOV X1, X0
	0x037D6C04 MOV X0, X19
	0x037D6C08 MOV X2, X31
	0x037D6C0C BL 0x330E100
	0x037D6C10 ADRP X0, 0x972000
	0x037D6C14 LDR X0, [X0 + 0xAF8]
	0x037D6C18 BL 0x1C16D08
	0x037D6C1C MOV X1, X0
	0x037D6C20 MOV X0, X19
	0x037D6C24 BL 0x1C16DEC
	0x037D6C28 STR X30, [X31 - 0x20]!
	0x037D6C2C STP X20, X19, [X31 + 0x10]
	0x037D6C30 ADRP X20, 0xC0B000
	0x037D6C34 LDRB W8, [X20 + 0x270]
	0x037D6C38 MOV X19, X0
	0x037D6C3C TBNZ X8, 0x0, 0x37D6C6C
	0x037D6C40 ADRP X0, 0x971000
	0x037D6C44 LDR X0, [X0 + 0xB88]
	0x037D6C48 BL 0x1C16CF4
	0x037D6C4C ADRP X0, 0x945000
	0x037D6C50 LDR X0, [X0 + 0x270]
	0x037D6C54 BL 0x1C16CF4
	0x037D6C58 ADRP X0, 0x972000
	0x037D6C5C LDR X0, [X0 + 0xB00]
	0x037D6C60 BL 0x1C16CF4
	0x037D6C64 MOVZ W8, 0x1
	0x037D6C68 STRB W8, [X20 + 0x270]
	0x037D6C6C LDRB W8, [X19 + 0x210]
	0x037D6C70 CBNZ W8, 0x37D6CD8
	0x037D6C74 LDR X20, [X19 + 0x208]
	0x037D6C78 CBNZ X20, 0x37D6CAC
	0x037D6C7C ADRP X8, 0x971000
	0x037D6C80 LDR X8, [X8 + 0xB88]
	0x037D6C84 LDR X0, [X8]
	0x037D6C88 BL 0x1C16F10
	0x037D6C8C ADRP X8, 0x972000
	0x037D6C90 LDR X8, [X8 + 0xB00]
	0x037D6C94 MOV X1, X19
	0x037D6C98 MOV X3, X31

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+48], X22
	004 Move [X31+56], X21
	005 Move [X31+64], X20
	006 Move [X31+72], X19
	007 Move X22, 0xC0C000
	008 Move X21, 0x973000
	009 Move W8, [X22+620]
	010 Move X21, [X21+2296]
	011 Move X20, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x973000
	018 Move X0, [X0+2296]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X22+620], W8
	022 Move X0, [X21]
	023 Move [X31+40], W31
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {29}
	027 Call 0x1C17DFC
	028 Move X0, [X21]
	029 Move X8, [X0+184]
	030 Move W8, [X8+24]
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move X22, X31
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {38}
	036 Call 0x1C17DFC
	037 Move X0, [X21]
	038 Move X8, [X0+184]
	039 NotImplemented "Instruction LDRSW not yet implemented."
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move W9, [X0+224]
	042 Compare W9, 0
	043 JumpIfNotEqual {47}
	044 Call 0x1C17DFC
	045 Move X8, [X21]
	046 Move X8, [X8+184]
	047 Move X8, [X8+32]
	048 Compare X8, 0
	049 JumpIfEqual {133}
	050 Move W9, [X8+24]
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Add X8, X8, X22
	053 Move X1, [X8+32]
	054 Move X0, X20
	055 Move X2, X31
	056 Call InputControlScheme.SupportsDevice, X0, X1
	057 Move TEMP, X0
	058 And TEMP, TEMP, 1
	059 Compare TEMP, 1
	060 JumpIfNotEqual {124}
	061 Move X0, [X21]
	062 Add X22, X22, 1
	063 Move X22, X31
	064 Move W8, [X0+224]
	065 Compare W8, 0
	066 JumpIfNotEqual {69}
	067 Call 0x1C17DFC
	068 Move X0, [X21]
	069 Move X8, [X0+184]
	070 NotImplemented "Instruction LDRSW not yet implemented."
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move W9, [X0+224]
	073 Compare W9, 0
	074 JumpIfNotEqual {78}
	075 Call 0x1C17DFC
	076 Move X8, [X21]
	077 Move X8, [X8+184]
	078 Move X8, [X8+32]
	079 Compare X8, 0
	080 JumpIfEqual {133}
	081 Move W9, [X8+24]
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Add X8, X8, X22
	084 Move X0, [X8+32]
	085 Move W1, [X19+160]
	086 Move W2, W31
	087 Call InputUser.PerformPairingWithDevice, X0, X1, X2
	088 Move [X19+160], W0
	089 Move X0, [X21]
	090 Add X22, X22, 1
	091 Add X21, X19, 160
	092 Move X0, X21
	093 Call InputUser.get_valid, X0
	094 Move TEMP, X0
	095 And TEMP, TEMP, 1
	096 Compare TEMP, 1
	097 JumpIfEqual {100}
	098 Call InputUser.CreateUserWithoutPairedDevices
	099 Move [X19+160], W0
	100 Move X8, [X20+16]
	101 Move V0, [X20]
	102 Add X1, X31, 0
	103 Move X0, X21
	104 Move [X31+16], X8
	105 Move [X31], V0
	106 Call InputUser.ActivateControlScheme, X0, X1
	107 Move [X31+40], W0
	108 Add X0, X31, 40
	109 Move X1, X31
	110 Call ControlSchemeChangeSyntax.AndPairRemainingDevices, X0
	111 Move W8, [X19+160]
	112 Add X0, X31, 24
	113 Move [X31+24], W8
	114 Call InputUser.get_hasMissingRequiredDevices, X0
	115 Move TEMP, X0
	116 And TEMP, TEMP, 1
	117 Compare TEMP, 1
	118 JumpIfNotEqual {125}
	119 Move X0, X21
	120 Move X1, X31
	121 Call InputUser.ActivateControlScheme, X0, X1
	122 Move X0, X21
	123 Call InputUser.UnpairDevices, X0
	124 Move W0, W31
	125 Move W0, 1
	126 Move X20, [X31+64]
	127 Move X19, [X31+72]
	128 Move X22, [X31+48]
	129 Move X21, [X31+56]
	130 Move X30, [X31+32]
	131 Add X31, X31, 80
	132 Return X0
	133 Call 0x1C17F20
	134 Call 0x1C17F28

Method: System.Void AssignPlayerIndex()

Disassembly:
	0x037D74C4 LDR X1, [X0 + 0xB8]
	0x037D74C8 LDR X3, [X22]
	0x037D74CC MOV W2, W20
	0x037D74D0 LDR X0, [X1 + 0x8]
	0x037D74D4 BL 0x2177EC0
	0x037D74D8 LDR X0, [X21]
	0x037D74DC LDR W8, [X0 + 0xE0]
	0x037D74E0 CBNZ W8, 0x37D74EC
	0x037D74E4 BL 0x1C16DFC
	0x037D74E8 LDR X0, [X21]
	0x037D74EC LDR X8, [X0 + 0xB8]
	0x037D74F0 LDR W9, [X8]
	0x037D74F4 CBNZ W9, 0x37D7530
	0x037D74F8 LDR W9, [X0 + 0xE0]
	0x037D74FC CBNZ W9, 0x37D750C
	0x037D7500 BL 0x1C16DFC
	0x037D7504 LDR X0, [X21]
	0x037D7508 LDR X8, [X0 + 0xB8]
	0x037D750C LDR X9, [X8 + 0x10]
	0x037D7510 CBZ X9, 0x37D7530
	0x037D7514 LDR W9, [X0 + 0xE0]
	0x037D7518 CBNZ W9, 0x37D7528
	0x037D751C BL 0x1C16DFC
	0x037D7520 LDR X8, [X21]
	0x037D7524 LDR X8, [X8 + 0xB8]
	0x037D7528 LDR X0, [X8 + 0x10]
	0x037D752C BL 0x37D76F8
	0x037D7530 MOV X0, X19
	0x037D7534 BL 0x37D2E80
	0x037D7538 MOV X0, X19
	0x037D753C BL 0x37D739C
	0x037D7540 ADRP X20, 0xC0A000
	0x037D7544 LDRB W8, [X20 + 0x30B]
	0x037D7548 CBNZ W8, 0x37D7560
	0x037D754C ADRP X0, 0x971000
	0x037D7550 LDR X0, [X0 + 0x9F8]
	0x037D7554 BL 0x1C16CF4
	0x037D7558 MOVZ W8, 0x1
	0x037D755C STRB W8, [X20 + 0x30B]
	0x037D7560 ADRP X8, 0x971000
	0x037D7564 LDR X8, [X8 + 0x9F8]
	0x037D7568 LDR X8, [X8]
	0x037D756C LDR X8, [X8 + 0xB8]
	0x037D7570 LDR X0, [X8]
	0x037D7574 CBZ X0, 0x37D7580
	0x037D7578 MOV X1, X19
	0x037D757C BL 0x37D77AC
	0x037D7580 ADRP X23, 0x91C000
	0x037D7584 LDR X23, [X23 + 0xE00]
	0x037D7588 MOV X0, X31
	0x037D758C BL 0x373BF80
	0x037D7590 LDR X8, [X19 + 0x88]
	0x037D7594 MOV X20, X0
	0x037D7598 CBZ X8, 0x37D75A8
	0x037D759C MOV X0, X8
	0x037D75A0 MOV X1, X31
	0x037D75A4 BL 0x3738478
	0x037D75A8 STRB W31, [X19 + 0x94]
	0x037D75AC MOV X0, X19
	0x037D75B0 BL 0x37D614C
	0x037D75B4 MOV X0, X19
	0x037D75B8 BL 0x37D2110
	0x037D75BC MOV X21, X31
	0x037D75C0 MOVZ W22, 0x6
	0x037D75C4 CBZ X20, 0x37D7620
	0x037D75C8 LDR X8, [X20]
	0x037D75CC LDR X1, [X23]
	0x037D75D0 LDRH W9, [X8 + 0x12E]
	0x037D75D4 CBZ X9, 0x37D75F8
	0x037D75D8 LDR X10, [X8 + 0xB0]
	0x037D75DC ADD X10, X10, 0x8
	0x037D75E0 LDUR X11, [X10 - 0x8]
	0x037D75E4 CMP X11, X1
	0x037D75E8 B.EQ 0x37D7608
	0x037D75EC SUBS X9, X9, 0x1
	0x037D75F0 ADD X10, X10, 0x10
	0x037D75F4 B.NE 0x37D75E0
	0x037D75F8 MOV X0, X20
	0x037D75FC MOV W2, W31
	0x037D7600 BL 0x1C5C788
	0x037D7604 B 0x37D7614
	0x037D7608 LDRSW X9, [X10]
	0x037D760C ADD X8, X8, X9, 0x4, LSL
	0x037D7610 ADD X0, X8, 0x138
	0x037D7614 LDP X8, X1, [X0]
	0x037D7618 MOV X0, X20
	0x037D761C BLR X8
	0x037D7620 CBNZ X21, 0x37D7648
	0x037D7624 CMP W22, 0x6
	0x037D7628 B.EQ 0x37D7630
	0x037D762C CBNZ W22, 0x37D7638
	0x037D7630 MOVN W8, 0x0
	0x037D7634 STR W8, [X19 + 0x90]
	0x037D7638 LDP X20, X19, [X31 + 0x20]
	0x037D763C LDP X22, X21, [X31 + 0x10]
	0x037D7640 LDP X30, X23, [X31], #0x30
	0x037D7644 RET
	0x037D7648 MOV X0, X21
	0x037D764C BL 0x1C16F18
	0x037D7650 CMP W1, 0x1
	0x037D7654 MOV X22, X0
	0x037D7658 B.NE 0x37D7678
	0x037D765C MOV X0, X22
	0x037D7660 BL 0x3EB1AD0
	0x037D7664 LDR X21, [X0]
	0x037D7668 BL 0x3EB1AE0
	0x037D766C MOV W22, W31
	0x037D7670 CBNZ X20, 0x37D75C8
	0x037D7674 B 0x37D7620
	0x037D7678 MOV X21, X31
	0x037D767C B 0x37D7684
	0x037D7680 MOV X22, X0
	0x037D7684 CBZ X20, 0x37D76E0
	0x037D7688 LDR X8, [X20]
	0x037D768C LDR X1, [X23]
	0x037D7690 LDRH W9, [X8 + 0x12E]
	0x037D7694 CBZ X9, 0x37D76B8
	0x037D7698 LDR X10, [X8 + 0xB0]
	0x037D769C ADD X10, X10, 0x8
	0x037D76A0 LDUR X11, [X10 - 0x8]
	0x037D76A4 CMP X11, X1
	0x037D76A8 B.EQ 0x37D76C8
	0x037D76AC SUBS X9, X9, 0x1
	0x037D76B0 ADD X10, X10, 0x10
	0x037D76B4 B.NE 0x37D76A0
	0x037D76B8 MOV X0, X20
	0x037D76BC MOV W2, W31

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X20, 0xC0B000
	010 Move X23, 0x972000
	011 Move W8, [X20+621]
	012 Move X23, [X23+2296]
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0x91D000
	019 Move X0, [X0+1448]
	020 Call 0x1C17CF4
	021 Move X0, 0x91D000
	022 Move X0, [X0+1432]
	023 Call 0x1C17CF4
	024 Move X0, 0x972000
	025 Move X0, [X0+2296]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X20+621], W8
	029 Move X0, [X23]
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {35}
	033 Call 0x1C17DFC
	034 Move X0, [X23]
	035 Move X8, [X0+184]
	036 Move W8, [X8+40]
	037 Add W31, W8, 1
	038 Move W9, [X0+224]
	039 Compare W9, 0
	040 JumpIfNotEqual {129}
	041 Call 0x1C17DFC
	042 Move X8, [X23]
	043 Move X8, [X8+184]
	044 Move W8, [X8+40]
	045 Move X25, 0x91D000
	046 Move X25, [X25+1448]
	047 Move W24, W31
	048 Move TEMP, 0x80000000
	049 Not TEMP
	050 Move W20, TEMP
	051 Move W21, 0x80000000
	052 Move W8, [X0+224]
	053 Compare W8, 0
	054 JumpIfNotEqual {57}
	055 Call 0x1C17DFC
	056 Move X0, [X23]
	057 Move X8, [X0+184]
	058 Move W9, [X8]
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move W9, [X0+224]
	061 Compare W9, 0
	062 JumpIfNotEqual {66}
	063 Call 0x1C17DFC
	064 Move X8, [X23]
	065 Move X8, [X8+184]
	066 Move X8, [X8+8]
	067 Compare X8, 0
	068 JumpIfEqual {139}
	069 Move W9, [X8+24]
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Add X8, X8, W24
	072 Move X8, [X8+32]
	073 Compare X8, 0
	074 JumpIfEqual {139}
	075 Move X0, [X25]
	076 Move W22, [X8+144]
	077 Move W9, [X0+224]
	078 Compare W9, 0
	079 JumpIfNotEqual {81}
	080 Call 0x1C17DFC
	081 Move W0, W20
	082 Move W1, W22
	083 Move X2, X31
	084 Call Math.Min, X0, X1
	085 Move W20, W0
	086 Move W0, W21
	087 Move W1, W22
	088 Move X2, X31
	089 Call Math.Max, X0, X1
	090 Move W21, W0
	091 Move X0, [X23]
	092 Add W24, W24, 1
	093 Subtract W8, W20, 1
	094 Or W9, W31, 0x7FFFFFFE
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Move W8, 0x80000000
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Move W8, W31
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Move X25, 0x91D000
	101 Move X25, [X25+1432]
	102 Subtract W24, W21, 1
	103 Move W8, [X0+224]
	104 Compare W8, 0
	105 JumpIfNotEqual {107}
	106 Call 0x1C17DFC
	107 Move W0, W20
	108 Call PlayerInput.GetPlayerByIndex, X0
	109 Move X8, [X25]
	110 Move X22, X0
	111 Move W9, [X8+224]
	112 Compare W9, 0
	113 JumpIfNotEqual {116}
	114 Move X0, X8
	115 Call 0x1C17DFC
	116 Move X0, X22
	117 Move X1, X31
	118 Move X2, X31
	119 Call Object.op_Equality, X0, X1
	120 Move TEMP, X0
	121 And TEMP, TEMP, 1
	122 Compare TEMP, 1
	123 JumpIfEqual {128}
	124 NotImplemented "Instruction CMP not yet implemented."
	125 Move X0, [X23]
	126 Add W20, W20, 1
	127 Add W8, W21, 1
	128 Move W8, W20
	129 Move [X19+144], W8
	130 Move X20, [X31+48]
	131 Move X19, [X31+56]
	132 Move X22, [X31+32]
	133 Move X21, [X31+40]
	134 Move X24, [X31+16]
	135 Move X23, [X31+24]
	136 Move X30, [X31+64]
	137 Move X25, [X31+72]
	138 Return 
	139 Call 0x1C17F20
	140 Call 0x1C17F28

Method: System.Void OnEnable()

Disassembly:
	0x037D76C0 BL 0x1C5C788
	0x037D76C4 B 0x37D76D4
	0x037D76C8 LDRSW X9, [X10]
	0x037D76CC ADD X8, X8, X9, 0x4, LSL
	0x037D76D0 ADD X0, X8, 0x138
	0x037D76D4 LDP X8, X1, [X0]
	0x037D76D8 MOV X0, X20
	0x037D76DC BLR X8
	0x037D76E0 CBNZ X21, 0x37D76EC
	0x037D76E4 MOV X0, X22
	0x037D76E8 BL 0x1D2C690
	0x037D76EC MOV X0, X21
	0x037D76F0 BL 0x1C16F18
	0x037D76F4 BL 0x1990590
	0x037D76F8 STR X30, [X31 - 0x20]!
	0x037D76FC STP X20, X19, [X31 + 0x10]
	0x037D7700 ADRP X20, 0xC0A000
	0x037D7704 LDRB W8, [X20 + 0x2DC]
	0x037D7708 MOV X19, X0
	0x037D770C TBNZ X8, 0x0, 0x37D7730
	0x037D7710 ADRP X0, 0x971000
	0x037D7714 LDR X0, [X0 + 0xBA0]
	0x037D7718 BL 0x1C16CF4
	0x037D771C ADRP X0, 0x971000
	0x037D7720 LDR X0, [X0 + 0x948]
	0x037D7724 BL 0x1C16CF4
	0x037D7728 MOVZ W8, 0x1
	0x037D772C STRB W8, [X20 + 0x2DC]
	0x037D7730 CBZ X19, 0x37D7764
	0x037D7734 ADRP X8, 0x971000
	0x037D7738 LDR X8, [X8 + 0x948]
	0x037D773C ADRP X9, 0x971000
	0x037D7740 MOV X1, X19
	0x037D7744 LDR X8, [X8]
	0x037D7748 LDR X9, [X9 + 0xBA0]
	0x037D774C LDP X20, X19, [X31 + 0x10]
	0x037D7750 LDR X8, [X8 + 0xB8]
	0x037D7754 LDR X2, [X9]
	0x037D7758 ADD X0, X8, 0x58
	0x037D775C LDR X30, [X31], #0x20
	0x037D7760 B 0x28F1650
	0x037D7764 ADRP X0, 0x921000
	0x037D7768 LDR X0, [X0 + 0x528]
	0x037D776C BL 0x1C16D08
	0x037D7770 BL 0x1C16F10
	0x037D7774 MOV X19, X0
	0x037D7778 ADRP X0, 0x926000
	0x037D777C LDR X0, [X0 + 0xEC8]
	0x037D7780 BL 0x1C16D08
	0x037D7784 MOV X1, X0
	0x037D7788 MOV X0, X19
	0x037D778C MOV X2, X31
	0x037D7790 BL 0x330E100
	0x037D7794 ADRP X0, 0x971000
	0x037D7798 LDR X0, [X0 + 0xBA8]
	0x037D779C BL 0x1C16D08
	0x037D77A0 MOV X1, X0
	0x037D77A4 MOV X0, X19
	0x037D77A8 BL 0x1C16DEC
	0x037D77AC STP X30, X21, [X31 - 0x20]!
	0x037D77B0 STP X20, X19, [X31 + 0x10]
	0x037D77B4 ADRP X21, 0xC0A000
	0x037D77B8 LDRB W8, [X21 + 0x299]
	0x037D77BC MOV X19, X1
	0x037D77C0 MOV X20, X0
	0x037D77C4 TBNZ X8, 0x0, 0x37D7800
	0x037D77C8 ADRP X0, 0x971000
	0x037D77CC LDR X0, [X0 + 0xB08]
	0x037D77D0 BL 0x1C16CF4
	0x037D77D4 ADRP X0, 0x971000
	0x037D77D8 LDR X0, [X0 + 0xB10]
	0x037D77DC BL 0x1C16CF4
	0x037D77E0 ADRP X0, 0x971000
	0x037D77E4 LDR X0, [X0 + 0xBB0]
	0x037D77E8 BL 0x1C16CF4
	0x037D77EC ADRP X0, 0x971000
	0x037D77F0 LDR X0, [X0 + 0xBB8]
	0x037D77F4 BL 0x1C16CF4
	0x037D77F8 MOVZ W8, 0x1
	0x037D77FC STRB W8, [X21 + 0x299]
	0x037D7800 MOV X0, X20
	0x037D7804 BL 0x37D8B18
	0x037D7808 LDR W8, [X20 + 0x20]
	0x037D780C CMP W8, 0x3
	0x037D7810 B.HI 0x37D78A0
	0x037D7814 ADRP X9, 0xFFFFFFFFFD3C0000
	0x037D7818 ADD X9, X9, 0x97C
	0x037D781C ADR X10, 0x10
	0x037D7820 LDRB W11, [X9, X8, LSL]
	0x037D7824 ADD X10, X10, X11, 0x2, LSL
	0x037D7828 BR X10
	0x037D782C ADRP X8, 0x971000
	0x037D7830 LDR X8, [X8 + 0xBB0]
	0x037D7834 MOV X0, X20
	0x037D7838 MOV X2, X19
	0x037D783C LDP X20, X19, [X31 + 0x10]
	0x037D7840 LDR X1, [X8]
	0x037D7844 MOVZ W3, 0x1
	0x037D7848 MOV X4, X31
	0x037D784C LDP X30, X21, [X31], #0x20
	0x037D7850 B 0x3C334DC
	0x037D7854 ADRP X8, 0x971000
	0x037D7858 LDR X8, [X8 + 0xBB0]
	0x037D785C MOV X0, X20
	0x037D7860 MOV X2, X19
	0x037D7864 LDP X20, X19, [X31 + 0x10]
	0x037D7868 LDR X1, [X8]
	0x037D786C MOVZ W3, 0x1
	0x037D7870 MOV X4, X31
	0x037D7874 LDP X30, X21, [X31], #0x20
	0x037D7878 B 0x3C33538
	0x037D787C LDR X0, [X20 + 0x38]
	0x037D7880 CBZ X0, 0x37D78A0
	0x037D7884 ADRP X8, 0x971000
	0x037D7888 LDR X8, [X8 + 0xB10]
	0x037D788C MOV X1, X19
	0x037D7890 LDP X20, X19, [X31 + 0x10]
	0x037D7894 LDR X2, [X8]
	0x037D7898 LDP X30, X21, [X31], #0x20
	0x037D789C B 0x2729DBC
	0x037D78A0 LDP X20, X19, [X31 + 0x10]
	0x037D78A4 LDP X30, X21, [X31], #0x20
	0x037D78A8 RET
	0x037D78AC ADRP X8, 0x971000
	0x037D78B0 ADRP X9, 0x971000
	0x037D78B4 LDR X8, [X8 + 0xBB8]
	0x037D78B8 LDR X9, [X9 + 0xB08]
	0x037D78BC ADD X0, X20, 0xE0
	0x037D78C0 MOV X1, X19
	0x037D78C4 LDR X2, [X8]
	0x037D78C8 LDR X4, [X9]
	0x037D78CC LDP X20, X19, [X31 + 0x10]
	0x037D78D0 MOV X3, X31
	0x037D78D4 LDP X30, X21, [X31], #0x20
	0x037D78D8 B 0x21AD310
	0x037D78DC SUB X31, X31, 0x30
	0x037D78E0 STP X2, X30, [X31 + 0x8]
	0x037D78E4 STP X20, X19, [X31 + 0x20]
	0x037D78E8 ADRP X20, 0xC0A000
	0x037D78EC STR X1, [X31]
	0x037D78F0 ADRP X19, 0x91C000
	0x037D78F4 LDRB W8, [X20 + 0x273]
	0x037D78F8 LDR X19, [X19 + 0xA28]
	0x037D78FC TBNZ X8, 0x0, 0x37D7914
	0x037D7900 ADRP X0, 0x91C000
	0x037D7904 LDR X0, [X0 + 0xA28]
	0x037D7908 BL 0x1C16CF4
	0x037D790C MOVZ W8, 0x1
	0x037D7910 STRB W8, [X20 + 0x273]
	0x037D7914 ADD X0, X31, 0x0
	0x037D7918 MOV X1, X31
	0x037D791C BL 0x373636C
	0x037D7920 LDR X8, [X19]
	0x037D7924 MOV X19, X0
	0x037D7928 LDR W9, [X8 + 0xE0]
	0x037D792C CBNZ W9, 0x37D7938
	0x037D7930 MOV X0, X8
	0x037D7934 BL 0x1C16DFC
	0x037D7938 MOV X0, X19
	0x037D793C MOV X1, X31
	0x037D7940 BL 0x3C06048
	0x037D7944 LDP X20, X19, [X31 + 0x20]
	0x037D7948 LDR X30, [X31 + 0x10]
	0x037D794C ADD X31, X31, 0x30
	0x037D7950 RET
	0x037D7954 STR X30, [X31 - 0x20]!
	0x037D7958 STP X20, X19, [X31 + 0x10]
	0x037D795C ADRP X20, 0xC0A000
	0x037D7960 LDRB W8, [X20 + 0x274]
	0x037D7964 MOV X19, X0
	0x037D7968 TBNZ X8, 0x0, 0x37D79A4
	0x037D796C ADRP X0, 0x971000
	0x037D7970 LDR X0, [X0 + 0xB08]
	0x037D7974 BL 0x1C16CF4
	0x037D7978 ADRP X0, 0x971000
	0x037D797C LDR X0, [X0 + 0xB10]
	0x037D7980 BL 0x1C16CF4
	0x037D7984 ADRP X0, 0x971000
	0x037D7988 LDR X0, [X0 + 0xBC0]
	0x037D798C BL 0x1C16CF4
	0x037D7990 ADRP X0, 0x971000
	0x037D7994 LDR X0, [X0 + 0xBC8]
	0x037D7998 BL 0x1C16CF4
	0x037D799C MOVZ W8, 0x1
	0x037D79A0 STRB W8, [X20 + 0x274]
	0x037D79A4 LDR W8, [X19 + 0x28]
	0x037D79A8 CMP W8, 0x3
	0x037D79AC B.HI 0x37D7A3C
	0x037D79B0 ADRP X9, 0xFFFFFFFFFD3C0000
	0x037D79B4 ADD X9, X9, 0x97C
	0x037D79B8 ADR X10, 0x10
	0x037D79BC LDRB W11, [X9, X8, LSL]
	0x037D79C0 ADD X10, X10, X11, 0x2, LSL
	0x037D79C4 BR X10
	0x037D79C8 ADRP X8, 0x971000
	0x037D79CC LDR X8, [X8 + 0xBC8]
	0x037D79D0 MOV X0, X19
	0x037D79D4 MOV X2, X19
	0x037D79D8 LDP X20, X19, [X31 + 0x10]
	0x037D79DC LDR X1, [X8]
	0x037D79E0 MOVZ W3, 0x1
	0x037D79E4 MOV X4, X31
	0x037D79E8 LDR X30, [X31], #0x20
	0x037D79EC B 0x3C334DC
	0x037D79F0 ADRP X8, 0x971000
	0x037D79F4 LDR X8, [X8 + 0xBC8]
	0x037D79F8 MOV X0, X19
	0x037D79FC MOV X2, X19
	0x037D7A00 LDP X20, X19, [X31 + 0x10]
	0x037D7A04 LDR X1, [X8]
	0x037D7A08 MOVZ W3, 0x1
	0x037D7A0C MOV X4, X31
	0x037D7A10 LDR X30, [X31], #0x20
	0x037D7A14 B 0x3C33538
	0x037D7A18 LDR X0, [X19 + 0x38]
	0x037D7A1C CBZ X0, 0x37D7A3C
	0x037D7A20 ADRP X8, 0x971000
	0x037D7A24 LDR X8, [X8 + 0xB10]
	0x037D7A28 MOV X1, X19
	0x037D7A2C LDP X20, X19, [X31 + 0x10]
	0x037D7A30 LDR X2, [X8]
	0x037D7A34 LDR X30, [X31], #0x20
	0x037D7A38 B 0x2729DBC
	0x037D7A3C LDP X20, X19, [X31 + 0x10]
	0x037D7A40 LDR X30, [X31], #0x20
	0x037D7A44 RET
	0x037D7A48 ADRP X8, 0x971000
	0x037D7A4C ADRP X9, 0x971000
	0x037D7A50 LDR X8, [X8 + 0xBC0]
	0x037D7A54 LDR X9, [X9 + 0xB08]
	0x037D7A58 ADD X0, X19, 0xB0
	0x037D7A5C MOV X1, X19
	0x037D7A60 LDR X2, [X8]
	0x037D7A64 LDR X4, [X9]
	0x037D7A68 LDP X20, X19, [X31 + 0x10]
	0x037D7A6C MOV X3, X31
	0x037D7A70 LDR X30, [X31], #0x20
	0x037D7A74 B 0x21AD310
	0x037D7A78 STR X30, [X31 - 0x20]!
	0x037D7A7C STP X20, X19, [X31 + 0x10]
	0x037D7A80 ADRP X20, 0xC0A000
	0x037D7A84 LDRB W8, [X20 + 0x275]
	0x037D7A88 MOV X19, X0
	0x037D7A8C TBNZ X8, 0x0, 0x37D7AC8
	0x037D7A90 ADRP X0, 0x971000
	0x037D7A94 LDR X0, [X0 + 0xB08]
	0x037D7A98 BL 0x1C16CF4
	0x037D7A9C ADRP X0, 0x971000
	0x037D7AA0 LDR X0, [X0 + 0xB10]
	0x037D7AA4 BL 0x1C16CF4
	0x037D7AA8 ADRP X0, 0x971000
	0x037D7AAC LDR X0, [X0 + 0xBD0]
	0x037D7AB0 BL 0x1C16CF4
	0x037D7AB4 ADRP X0, 0x971000
	0x037D7AB8 LDR X0, [X0 + 0xBD8]
	0x037D7ABC BL 0x1C16CF4
	0x037D7AC0 MOVZ W8, 0x1
	0x037D7AC4 STRB W8, [X20 + 0x275]
	0x037D7AC8 LDR W8, [X19 + 0x28]
	0x037D7ACC CMP W8, 0x3
	0x037D7AD0 B.HI 0x37D7B60
	0x037D7AD4 ADRP X9, 0xFFFFFFFFFD3C0000
	0x037D7AD8 ADD X9, X9, 0x97C
	0x037D7ADC ADR X10, 0x10
	0x037D7AE0 LDRB W11, [X9, X8, LSL]
	0x037D7AE4 ADD X10, X10, X11, 0x2, LSL
	0x037D7AE8 BR X10
	0x037D7AEC ADRP X8, 0x971000
	0x037D7AF0 LDR X8, [X8 + 0xBD0]
	0x037D7AF4 MOV X0, X19
	0x037D7AF8 MOV X2, X19
	0x037D7AFC LDP X20, X19, [X31 + 0x10]
	0x037D7B00 LDR X1, [X8]
	0x037D7B04 MOVZ W3, 0x1
	0x037D7B08 MOV X4, X31
	0x037D7B0C LDR X30, [X31], #0x20
	0x037D7B10 B 0x3C334DC
	0x037D7B14 ADRP X8, 0x971000
	0x037D7B18 LDR X8, [X8 + 0xBD0]
	0x037D7B1C MOV X0, X19
	0x037D7B20 MOV X2, X19
	0x037D7B24 LDP X20, X19, [X31 + 0x10]
	0x037D7B28 LDR X1, [X8]
	0x037D7B2C MOVZ W3, 0x1
	0x037D7B30 MOV X4, X31
	0x037D7B34 LDR X30, [X31], #0x20
	0x037D7B38 B 0x3C33538
	0x037D7B3C LDR X0, [X19 + 0x40]
	0x037D7B40 CBZ X0, 0x37D7B60
	0x037D7B44 ADRP X8, 0x971000
	0x037D7B48 LDR X8, [X8 + 0xB10]
	0x037D7B4C MOV X1, X19
	0x037D7B50 LDP X20, X19, [X31 + 0x10]
	0x037D7B54 LDR X2, [X8]
	0x037D7B58 LDR X30, [X31], #0x20
	0x037D7B5C B 0x2729DBC
	0x037D7B60 LDP X20, X19, [X31 + 0x10]
	0x037D7B64 LDR X30, [X31], #0x20
	0x037D7B68 RET
	0x037D7B6C ADRP X8, 0x971000
	0x037D7B70 ADRP X9, 0x971000

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0xC0B000
	011 Move W8, [X20+622]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {43}
	017 Move X0, 0x972000
	018 Move X0, [X0+2768]
	019 Call 0x1C17CF4
	020 Move X0, 0x972000
	021 Move X0, [X0+2776]
	022 Call 0x1C17CF4
	023 Move X0, 0x972000
	024 Move X0, [X0+2784]
	025 Call 0x1C17CF4
	026 Move X0, 0x91D000
	027 Move X0, [X0+3584]
	028 Call 0x1C17CF4
	029 Move X0, 0x91D000
	030 Move X0, [X0+1432]
	031 Call 0x1C17CF4
	032 Move X0, 0x972000
	033 Move X0, [X0+2792]
	034 Call 0x1C17CF4
	035 Move X0, 0x972000
	036 Move X0, [X0+2296]
	037 Call 0x1C17CF4
	038 Move X0, 0x96F000
	039 Move X0, [X0+2536]
	040 Call 0x1C17CF4
	041 Move W8, 1
	042 Move [X20+622], W8
	043 Move X23, 0x91D000
	044 Move X23, [X23+3584]
	045 Move W8, 1
	046 Move X0, X31
	047 Move [X19+149], W8
	048 Call InputActionRebindingExtensions.DeferBindingResolution
	049 Move X20, X0
	050 Move X0, X19
	051 Call PlayerInput.AssignPlayerIndex, X0
	052 Move X0, X19
	053 Call PlayerInput.InitializeActions, X0
	054 Move X0, X19
	055 Call PlayerInput.AssignUserAndDevices, X0
	056 Move X0, X19
	057 Call PlayerInput.ActivateInput, X0
	058 Move X21, X31
	059 Compare X20, 0
	060 JumpIfEqual {82}
	061 Move X8, [X20]
	062 Move X1, [X23]
	063 NotImplemented "Instruction LDRH not yet implemented."
	064 Compare X9, 0
	065 JumpIfEqual {72}
	066 Move X10, [X8+176]
	067 Add X10, X10, 8
	068 NotImplemented "Instruction LDUR not yet implemented."
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Subtract X9, X9, 1
	071 Add X10, X10, 16
	072 Move X0, X20
	073 Move W2, W31
	074 Call 0x1C5D788
	075 NotImplemented "Instruction LDRSW not yet implemented."
	076 Add X8, X8, X9
	077 Add X0, X8, 312
	078 Move X8, [X0]
	079 Move X1, [X0+8]
	080 Move X0, X20
	081 NotImplemented "Instruction BLR not yet implemented."
	082 Compare X21, 0
	083 JumpIfNotEqual {299}
	084 Move X22, 0x972000
	085 Move X22, [X22+2296]
	086 Move X8, [X22]
	087 Move W9, [X8+224]
	088 Compare W9, 0
	089 JumpIfNotEqual {93}
	090 Move X0, X8
	091 Call 0x1C17DFC
	092 Move X8, [X22]
	093 Move X1, [X8+184]
	094 Move W9, [X1+44]
	095 Move TEMP, X9
	096 And TEMP, TEMP, -2147483648
	097 Compare TEMP, -2147483648
	098 JumpIfNotEqual {101}
	099 Move W9, [X19+144]
	100 Move [X19+112], W9
	101 Move X20, 0x972000
	102 Move W9, [X8+224]
	103 Move X20, [X20+2776]
	104 Compare W9, 0
	105 JumpIfNotEqual {110}
	106 Move X0, X8
	107 Call 0x1C17DFC
	108 Move X8, [X22]
	109 Move X1, [X8+184]
	110 Move X4, [X20]
	111 Move X23, 0x972000
	112 Move X23, [X23+2784]
	113 Add X0, X1, 8
	114 Move W3, 10
	115 Move X2, X19
	116 Call ArrayHelpers.AppendWithCapacity, X0, X1, X2, X3
	117 Move X24, X31
	118 Move W25, 1
	119 Move X0, [X22]
	120 Move W8, [X0+224]
	121 Compare W8, 0
	122 JumpIfNotEqual {125}
	123 Call 0x1C17DFC
	124 Move X0, [X22]
	125 Move X8, [X0+184]
	126 Move W9, [X8]
	127 NotImplemented "Instruction CMP not yet implemented."
	128 Move X20, X24
	129 Move W8, [X0+224]
	130 Compare W8, 0
	131 JumpIfNotEqual {134}
	132 Call 0x1C17DFC
	133 Move X0, [X22]
	134 Move X8, [X0+184]
	135 Move X9, [X8+8]
	136 Compare X9, 0
	137 JumpIfEqual {297}
	138 Move W11, [X9+24]
	139 NotImplemented "Instruction CMP not yet implemented."
	140 Add X10, X9, X20
	141 Move X10, [X10+32]
	142 Compare X10, 0
	143 JumpIfEqual {297}
	144 Add X21, X20, 1
	145 NotImplemented "Instruction CMP not yet implemented."
	146 Add X26, X20, 1
	147 Add X9, X9, W26
	148 Move X9, [X9+32]
	149 Compare X9, 0
	150 JumpIfEqual {297}
	151 Move W10, [X10+144]
	152 Move W9, [X9+144]
	153 NotImplemented "Instruction CMP not yet implemented."
	154 Move W9, [X0+224]
	155 Compare W9, 0
	156 JumpIfNotEqual {160}
	157 Call 0x1C17DFC
	158 Move X8, [X22]
	159 Move X8, [X8+184]
	160 Move X0, [X8+8]
	161 Move X3, [X23]
	162 Move W1, W21
	163 Move W2, W20
	164 Call 0x217D63C, X0, X1, X2
	165 NotImplemented "Instruction CMP not yet implemented."
	166 Move X0, [X22]
	167 Subtract X20, X20, 1
	168 Add W25, W25, 1
	169 Add X24, X24, 1
	170 Move W10, [X0+224]
	171 Compare W10, 0
	172 JumpIfNotEqual {177}
	173 Call 0x1C17DFC
	174 Move X0, [X22]
	175 Move X8, [X0+184]
	176 Move W9, [X8]
	177 NotImplemented "Instruction CMP not yet implemented."
	178 Move W9, [X0+224]
	179 Compare W9, 0
	180 JumpIfNotEqual {184}
	181 Call 0x1C17DFC
	182 Move X0, [X22]
	183 Move X8, [X0+184]
	184 Move X8, [X8+16]
	185 Compare X8, 0
	186 JumpIfNotEqual {206}
	187 Move X8, 0x972000
	188 Move X8, [X8+2768]
	189 Move X0, [X8]
	190 Call 0x1C17F10
	191 Move X8, 0x972000
	192 Move X8, [X8+2792]
	193 Move X1, X31
	194 Move X3, X31
	195 Move X20, X0
	196 Move X2, [X8]
	197 Call 0x2A78E60, X0, X1, X2
	198 Move X0, [X22]
	199 Move W8, [X0+224]
	200 Compare W8, 0
	201 JumpIfNotEqual {204}
	202 Call 0x1C17DFC
	203 Move X0, [X22]
	204 Move X8, [X0+184]
	205 Move [X8+16], X20
	206 Move W8, [X0+224]
	207 Compare W8, 0
	208 JumpIfNotEqual {211}
	209 Call 0x1C17DFC
	210 Move X0, [X22]
	211 Move X8, [X0+184]
	212 Move X0, [X8+16]
	213 Call InputUser.add_onChange, X0
	214 Move X0, [X22]
	215 Move W8, [X0+224]
	216 Compare W8, 0
	217 JumpIfNotEqual {219}
	218 Call 0x1C17DFC
	219 Call PlayerInput.get_isSinglePlayer
	220 Move TEMP, X0
	221 And TEMP, TEMP, 1
	222 Compare TEMP, 1
	223 JumpIfNotEqual {257}
	224 Move X8, 0x91D000
	225 Move X8, [X8+1432]
	226 Move X20, [X19+32]
	227 Move X0, [X8]
	228 Move W8, [X0+224]
	229 Compare W8, 0
	230 JumpIfNotEqual {232}
	231 Call 0x1C17DFC
	232 Move X0, X20
	233 Move X1, X31
	234 Move X2, X31
	235 Call Object.op_Inequality, X0, X1
	236 Move TEMP, X0
	237 And TEMP, TEMP, 1
	238 Compare TEMP, 1
	239 JumpIfNotEqual {252}
	240 Move X0, [X19+32]
	241 Compare X0, 0
	242 JumpIfEqual {297}
	243 Move X1, X31
	244 Call InputActionAsset.get_controlSchemes, X0
	245 Move X8, X1
	246 ShiftRight X8, 32
	247 And X8, X8, 0x7FFFFFFF
	248 Compare X8, 0
	249 JumpIfNotEqual {252}
	250 Move X0, X19
	251 Call PlayerInput.StartListeningForDeviceChanges, X0
	252 Move W8, [X19+88]
	253 Compare W8, 0
	254 JumpIfNotEqual {257}
	255 Move X0, X19
	256 Call PlayerInput.StartListeningForUnpairedDeviceActivity, X0
	257 Move X0, X19
	258 Call PlayerInput.HandleControlsChanged, X0
	259 Move X20, 0xC0B000
	260 Move W8, [X20+779]
	261 Compare W8, 0
	262 JumpIfNotEqual {268}
	263 Move X0, 0x972000
	264 Move X0, [X0+2552]
	265 Call 0x1C17CF4
	266 Move W8, 1
	267 Move [X20+779], W8
	268 Move X8, 0x972000
	269 Move X8, [X8+2552]
	270 Move X8, [X8]
	271 Move X8, [X8+184]
	272 Move X0, [X8]
	273 Compare X0, 0
	274 JumpIfEqual {287}
	275 Move X1, X19
	276 Move X20, [X31+64]
	277 Move X19, [X31+72]
	278 Move X22, [X31+48]
	279 Move X21, [X31+56]
	280 Move X24, [X31+32]
	281 Move X23, [X31+40]
	282 Move X26, [X31+16]
	283 Move X25, [X31+24]
	284 Move X30, [X31+80]
	285 Call PlayerInputManager.NotifyPlayerJoined, X0, X1
	286 Return 
	287 Move X20, [X31+64]
	288 Move X19, [X31+72]
	289 Move X22, [X31+48]
	290 Move X21, [X31+56]
	291 Move X24, [X31+32]
	292 Move X23, [X31+40]
	293 Move X26, [X31+16]
	294 Move X25, [X31+24]
	295 Move X30, [X31+80]
	296 Return 
	297 Call 0x1C17F20
	298 Call 0x1C17F28
	299 Move X0, X21
	300 Call 0x1C17F18
	301 NotImplemented "Instruction CMP not yet implemented."
	302 Move X22, X0
	303 Move X0, X22
	304 Call 0x3EB2AD0
	305 Move X21, [X0]
	306 Call 0x3EB2AE0
	307 Move X21, X31
	308 Move X22, X0
	309 Compare X20, 0
	310 JumpIfEqual {332}
	311 Move X8, [X20]
	312 Move X1, [X23]
	313 NotImplemented "Instruction LDRH not yet implemented."
	314 Compare X9, 0
	315 JumpIfEqual {322}
	316 Move X10, [X8+176]
	317 Add X10, X10, 8
	318 NotImplemented "Instruction LDUR not yet implemented."
	319 NotImplemented "Instruction CMP not yet implemented."
	320 Subtract X9, X9, 1
	321 Add X10, X10, 16
	322 Move X0, X20
	323 Move W2, W31
	324 Call 0x1C5D788
	325 NotImplemented "Instruction LDRSW not yet implemented."
	326 Add X8, X8, X9
	327 Add X0, X8, 312
	328 Move X8, [X0]
	329 Move X1, [X0+8]
	330 Move X0, X20
	331 NotImplemented "Instruction BLR not yet implemented."
	332 Compare X21, 0
	333 JumpIfNotEqual {336}
	334 Move X0, X22
	335 Call 0x1D2D690
	336 Move X0, X21
	337 Call 0x1C17F18
	338 Call 0x1991590

Method: System.Void StartListeningForUnpairedDeviceActivity()

Disassembly:
	0x037D3D54 ADRP X8, 0x975000
	0x037D3D58 LDR X2, [X19 + 0x20]
	0x037D3D5C LDR X8, [X8 + 0xA08]
	0x037D3D60 MOV X1, X20
	0x037D3D64 MOV X3, X31
	0x037D3D68 LDR X0, [X8]
	0x037D3D6C BL 0x3227BD4
	0x037D3D70 B 0x37D3CEC
	0x037D3D74 BL 0x1C16F20
	0x037D3D78 STP X30, X19, [X31 - 0x10]!
	0x037D3D7C MOV X19, X0
	0x037D3D80 LDR X0, [X0 + 0x88]
	0x037D3D84 CBZ X0, 0x37D3D90
	0x037D3D88 MOV X1, X31
	0x037D3D8C BL 0x3738478
	0x037D3D90 STRB W31, [X19 + 0x94]
	0x037D3D94 LDP X30, X19, [X31], #0x10
	0x037D3D98 RET
	0x037D3D9C STP X30, X19, [X31 - 0x10]!
	0x037D3DA0 MOV X19, X0
	0x037D3DA4 LDR X0, [X0 + 0x88]
	0x037D3DA8 CBZ X0, 0x37D3DB4
	0x037D3DAC MOV X1, X31
	0x037D3DB0 BL 0x3738478
	0x037D3DB4 STRB W31, [X19 + 0x94]
	0x037D3DB8 LDP X30, X19, [X31], #0x10
	0x037D3DBC RET
	0x037D3DC0 SUB X31, X31, 0x80
	0x037D3DC4 STP X30, X21, [X31 + 0x60]
	0x037D3DC8 STP X20, X19, [X31 + 0x70]
	0x037D3DCC ADRP X21, 0xC0E000
	0x037D3DD0 LDRB W8, [X21 + 0x25C]
	0x037D3DD4 MOV X19, X1
	0x037D3DD8 MOV X20, X0
	0x037D3DDC TBNZ X8, 0x0, 0x37D3E18
	0x037D3DE0 ADRP X0, 0x975000
	0x037D3DE4 LDR X0, [X0 + 0xA20]
	0x037D3DE8 BL 0x1C16CF4
	0x037D3DEC ADRP X0, 0x972000
	0x037D3DF0 LDR X0, [X0 + 0x9B8]
	0x037D3DF4 BL 0x1C16CF4
	0x037D3DF8 ADRP X0, 0x975000
	0x037D3DFC LDR X0, [X0 + 0x930]
	0x037D3E00 BL 0x1C16CF4
	0x037D3E04 ADRP X0, 0x920000
	0x037D3E08 LDR X0, [X0 + 0x598]
	0x037D3E0C BL 0x1C16CF4
	0x037D3E10 MOVZ W8, 0x1
	0x037D3E14 STRB W8, [X21 + 0x25C]
	0x037D3E18 MOVI V0.2D, 0x0
	0x037D3E1C STP V0, V0, [X31 + 0x40]
	0x037D3E20 CBZ X19, 0x37D3F04
	0x037D3E24 ADRP X21, 0x920000
	0x037D3E28 LDR X21, [X21 + 0x598]
	0x037D3E2C MOV X0, X20
	0x037D3E30 BL 0x37D1AD4
	0x037D3E34 LDR X8, [X21]
	0x037D3E38 MOV X21, X0
	0x037D3E3C LDR W9, [X8 + 0xE0]
	0x037D3E40 CBNZ W9, 0x37D3E4C
	0x037D3E44 MOV X0, X8
	0x037D3E48 BL 0x1C16DFC
	0x037D3E4C MOV X0, X21
	0x037D3E50 MOV X1, X31
	0x037D3E54 MOV X2, X31
	0x037D3E58 BL 0x3C3883C
	0x037D3E5C TBNZ X0, 0x0, 0x37D3F38
	0x037D3E60 MOV X0, X20
	0x037D3E64 BL 0x37D1AD4
	0x037D3E68 CBZ X0, 0x37D3F80
	0x037D3E6C ADRP X21, 0x975000
	0x037D3E70 LDR X21, [X21 + 0xA20]
	0x037D3E74 MOV X1, X31
	0x037D3E78 BL 0x37367C0
	0x037D3E7C LDR X5, [X21]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xC0F000
	006 Move W8, [X20+623]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {26}
	012 Move X0, 0x976000
	013 Move X0, [X0+2384]
	014 Call 0x1C17CF4
	015 Move X0, 0x976000
	016 Move X0, [X0+2392]
	017 Call 0x1C17CF4
	018 Move X0, 0x976000
	019 Move X0, [X0+2400]
	020 Call 0x1C17CF4
	021 Move X0, 0x976000
	022 Move X0, [X0+2408]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X20+623], W8
	026 Move W8, [X19+512]
	027 Compare W8, 0
	028 JumpIfNotEqual {84}
	029 Move X20, [X19+496]
	030 Compare X20, 0
	031 JumpIfNotEqual {44}
	032 Move X8, 0x976000
	033 Move X8, [X8+2384]
	034 Move X0, [X8]
	035 Call 0x1C17F10
	036 Move X8, 0x976000
	037 Move X8, [X8+2408]
	038 Move X1, X19
	039 Move X3, X31
	040 Move X20, X0
	041 Move X2, [X8]
	042 Call Action`2<Object, InputEventPtr>..ctor, X0, X1, X2
	043 Move [X19+496], X20
	044 Move X8, [X19+504]
	045 Compare X8, 0
	046 JumpIfNotEqual {60}
	047 Move X8, 0x976000
	048 Move X8, [X8+2392]
	049 Move X0, [X8]
	050 Call 0x1C17F10
	051 Move X8, 0x976000
	052 Move X8, [X8+2400]
	053 Move X1, X31
	054 Move X3, X31
	055 Move X21, X0
	056 Move X2, [X8]
	057 Call Func`3<Object, InputEventPtr, Boolean>..ctor, X0, X1, X2
	058 Move X20, [X19+496]
	059 Move [X19+504], X21
	060 Move X0, X20
	061 Call InputUser.add_onUnpairedDeviceUsed, X0
	062 Move X0, [X19+504]
	063 Call InputUser.add_onPrefilterUnpairedDeviceActivity, X0
	064 Move X20, 0xC0F000
	065 Move X21, 0x976000
	066 Move W8, [X20+737]
	067 Move X21, [X21+2376]
	068 Move TEMP, X8
	069 And TEMP, TEMP, 1
	070 Compare TEMP, 1
	071 JumpIfEqual {77}
	072 Move X0, 0x976000
	073 Move X0, [X0+2376]
	074 Call 0x1C17CF4
	075 Move W8, 1
	076 Move [X20+737], W8
	077 Move X8, [X21]
	078 Move X8, [X8+184]
	079 Move W8, [X8+356]
	080 Add W0, W8, 1
	081 Call InputUser.set_listenForUnpairedDeviceActivity, X0
	082 Move W8, 1
	083 Move [X19+512], W8
	084 Move X20, [X31+16]
	085 Move X19, [X31+24]
	086 Move X30, [X31+32]
	087 Move X21, [X31+40]
	088 Return 

Method: System.Void StopListeningForUnpairedDeviceActivity()

Disassembly:
	0x037D3E80 MOV X2, X0
	0x037D3E84 MOV X3, X1
	0x037D3E88 ADD X8, X31, 0x20
	0x037D3E8C MOV X0, X19
	0x037D3E90 MOV X1, X2
	0x037D3E94 MOV X2, X3
	0x037D3E98 MOV X3, X31
	0x037D3E9C MOV W4, W31
	0x037D3EA0 BL 0x2200144
	0x037D3EA4 LDP V0, V1, [X31 + 0x20]
	0x037D3EA8 STP V0, V1, [X31 + 0x40]
	0x037D3EAC LDRB W21, [X31 + 0x40]
	0x037D3EB0 CBZ W21, 0x37D3EEC
	0x037D3EB4 ADRP X8, 0x975000
	0x037D3EB8 LDR X8, [X8 + 0x930]
	0x037D3EBC ADD X0, X31, 0x40
	0x037D3EC0 LDR X1, [X8]
	0x037D3EC4 ADD X8, X31, 0x8
	0x037D3EC8 BL 0x243299C
	0x037D3ECC LDUR V0, [X31 + 0x8]
	0x037D3ED0 LDR X8, [X31 + 0x18]
	0x037D3ED4 ADD X1, X31, 0x20
	0x037D3ED8 MOV X0, X20
	0x037D3EDC MOV X2, X19
	0x037D3EE0 STR V0, [X31 + 0x2]
	0x037D3EE4 STR X8, [X31 + 0x30]
	0x037D3EE8 BL 0x37D3F84
	0x037D3EEC CMP W21, 0x0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W8, [X0+512]
	006 Compare W8, 0
	007 JumpIfEqual {32}
	008 Move X19, X0
	009 Move X0, [X0+496]
	010 Call InputUser.remove_onUnpairedDeviceUsed, X0
	011 Move X0, [X19+504]
	012 Call InputUser.remove_onPrefilterUnpairedDeviceActivity, X0
	013 Move X20, 0xC0F000
	014 Move X21, 0x976000
	015 Move W8, [X20+737]
	016 Move X21, [X21+2376]
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {26}
	021 Move X0, 0x976000
	022 Move X0, [X0+2376]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X20+737], W8
	026 Move X8, [X21]
	027 Move X8, [X8+184]
	028 Move W8, [X8+356]
	029 Subtract W0, W8, 1
	030 Call InputUser.set_listenForUnpairedDeviceActivity, X0
	031 Move [X19+512], W31
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Return 

Method: System.Void StartListeningForDeviceChanges()

Disassembly:
	0x037D7C28 LDR W9, [X8 + 0x18]
	0x037D7C2C CMP W21, W9
	0x037D7C30 B.CS 0x37D7D08
	0x037D7C34 ADD X8, X8, W21, 0x3, SXTW
	0x037D7C38 LDR X0, [X8 + 0x20]
	0x037D7C3C CBZ X0, 0x37D7D04
	0x037D7C40 LDR W8, [X0 + 0xA0]
	0x037D7C44 CMP W8, W19
	0x037D7C48 B.NE 0x37D7C68
	0x037D7C4C CMP W20, 0x5
	0x037D7C50 B.EQ 0x37D7C64
	0x037D7C54 CMP W20, 0x4
	0x037D7C58 B.NE 0x37D7C68
	0x037D7C5C BL 0x37D7954
	0x037D7C60 B 0x37D7C68
	0x037D7C64 BL 0x37D7A78
	0x037D7C68 ADD W21, W21, 0x1
	0x037D7C6C B 0x37D7BE8
	0x037D7C70 CMP W20, 0xC
	0x037D7C74 B.NE 0x37D7CF4
	0x037D7C78 ADRP X21, 0x971000
	0x037D7C7C LDR X21, [X21 + 0x8F8]
	0x037D7C80 MOV W20, W31
	0x037D7C84 LDR X0, [X21]
	0x037D7C88 LDR W8, [X0 + 0xE0]
	0x037D7C8C CBNZ W8, 0x37D7C98
	0x037D7C90 BL 0x1C16DFC
	0x037D7C94 LDR X0, [X21]
	0x037D7C98 LDR X8, [X0 + 0xB8]
	0x037D7C9C LDR W9, [X8]
	0x037D7CA0 CMP W20, W9
	0x037D7CA4 B.GE 0x37D7CF4
	0x037D7CA8 LDR W9, [X0 + 0xE0]
	0x037D7CAC CBNZ W9, 0x37D7CBC
	0x037D7CB0 BL 0x1C16DFC
	0x037D7CB4 LDR X8, [X21]
	0x037D7CB8 LDR X8, [X8 + 0xB8]
	0x037D7CBC LDR X8, [X8 + 0x8]
	0x037D7CC0 CBZ X8, 0x37D7D04
	0x037D7CC4 LDR W9, [X8 + 0x18]
	0x037D7CC8 CMP W20, W9
	0x037D7CCC B.CS 0x37D7D08
	0x037D7CD0 ADD X8, X8, W20, 0x3, SXTW
	0x037D7CD4 LDR X0, [X8 + 0x20]
	0x037D7CD8 CBZ X0, 0x37D7D04
	0x037D7CDC LDR W8, [X0 + 0xA0]
	0x037D7CE0 CMP W8, W19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xC0B000
	005 Move W8, [X20+624]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {22}
	011 Move X0, 0x971000
	012 Move X0, [X0+2952]
	013 Call 0x1C17CF4
	014 Move X0, 0x945000
	015 Move X0, [X0+624]
	016 Call 0x1C17CF4
	017 Move X0, 0x972000
	018 Move X0, [X0+2816]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+624], W8
	022 Move W8, [X19+528]
	023 Compare W8, 0
	024 JumpIfNotEqual {52}
	025 Move X20, [X19+520]
	026 Compare X20, 0
	027 JumpIfNotEqual {40}
	028 Move X8, 0x971000
	029 Move X8, [X8+2952]
	030 Move X0, [X8]
	031 Call 0x1C17F10
	032 Move X8, 0x972000
	033 Move X8, [X8+2816]
	034 Move X1, X19
	035 Move X3, X31
	036 Move X20, X0
	037 Move X2, [X8]
	038 Call Action`2<Object, Int32Enum>..ctor, X0, X1, X2
	039 Move [X19+520], X20
	040 Move X8, 0x945000
	041 Move X8, [X8+624]
	042 Move X0, [X8]
	043 Move W8, [X0+224]
	044 Compare W8, 0
	045 JumpIfNotEqual {47}
	046 Call 0x1C17DFC
	047 Move X0, X20
	048 Move X1, X31
	049 Call InputSystem.add_onDeviceChange, X0
	050 Move W8, 1
	051 Move [X19+528], W8
	052 Move X20, [X31+16]
	053 Move X19, [X31+24]
	054 Move X30, [X31+32]
	055 Return 

Method: System.Void StopListeningForDeviceChanges()

Disassembly:
	0x037D839C LDR X1, [X10]
	0x037D83A0 CBZ X9, 0x37D83C4
	0x037D83A4 LDR X10, [X8 + 0xB0]
	0x037D83A8 ADD X10, X10, 0x8
	0x037D83AC LDUR X11, [X10 - 0x8]
	0x037D83B0 CMP X11, X1
	0x037D83B4 B.EQ 0x37D83D4
	0x037D83B8 SUBS X9, X9, 0x1
	0x037D83BC ADD X10, X10, 0x10
	0x037D83C0 B.NE 0x37D83AC
	0x037D83C4 MOV X0, X19
	0x037D83C8 MOV W2, W31
	0x037D83CC BL 0x1C5C788
	0x037D83D0 B 0x37D83E0
	0x037D83D4 LDRSW X9, [X10]
	0x037D83D8 ADD X8, X8, X9, 0x4, LSL
	0x037D83DC ADD X0, X8, 0x138
	0x037D83E0 LDP X8, X1, [X0]
	0x037D83E4 MOV X0, X19
	0x037D83E8 BLR X8
	0x037D83EC CBNZ X21, 0x37D83F8
	0x037D83F0 MOV X0, X20
	0x037D83F4 BL 0x1D2C690
	0x037D83F8 MOV X0, X21
	0x037D83FC BL 0x1C16F18
	0x037D8400 BL 0x1990590
	0x037D8404 STR X30, [X31 - 0x30]!

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xC0A000
	005 Move W8, [X20+625]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x944000
	012 Move X0, [X0+624]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+625], W8
	016 Move W8, [X19+528]
	017 Compare W8, 0
	018 JumpIfEqual {31}
	019 Move X8, 0x944000
	020 Move X8, [X8+624]
	021 Move X20, [X19+520]
	022 Move X0, [X8]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X0, X20
	028 Move X1, X31
	029 Call InputSystem.remove_onDeviceChange, X0
	030 Move [X19+528], W31
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Return 

Method: System.Void OnDisable()

Disassembly:
	0x037D8408 STP X22, X21, [X31 + 0x10]
	0x037D840C STP X20, X19, [X31 + 0x20]
	0x037D8410 ADRP X22, 0xC09000
	0x037D8414 LDRB W8, [X22 + 0x27A]
	0x037D8418 MOV W21, W2
	0x037D841C MOV X19, X1
	0x037D8420 MOV X20, X0
	0x037D8424 TBNZ X8, 0x0, 0x37D8454
	0x037D8428 ADRP X0, 0x91B000
	0x037D842C LDR X0, [X0 + 0x598]
	0x037D8430 BL 0x1C16CF4
	0x037D8434 ADRP X0, 0x970000
	0x037D8438 LDR X0, [X0 + 0x8F8]
	0x037D843C BL 0x1C16CF4
	0x037D8440 ADRP X0, 0x96D000
	0x037D8444 LDR X0, [X0 + 0x9E8]
	0x037D8448 BL 0x1C16CF4
	0x037D844C MOVZ W8, 0x1
	0x037D8450 STRB W8, [X22 + 0x27A]
	0x037D8454 CBNZ W21, 0x37D84F8
	0x037D8458 ADRP X8, 0x970000
	0x037D845C LDR X8, [X8 + 0x8F8]
	0x037D8460 LDR X0, [X8]
	0x037D8464 LDR W8, [X0 + 0xE0]
	0x037D8468 CBNZ W8, 0x37D8470
	0x037D846C BL 0x1C16DFC
	0x037D8470 BL 0x37D3AF8
	0x037D8474 TBZ X0, 0x0, 0x37D84F8
	0x037D8478 ADRP X8, 0x91B000
	0x037D847C LDR X8, [X8 + 0x598]
	0x037D8480 LDR X21, [X20 + 0x20]
	0x037D8484 LDR X0, [X8]
	0x037D8488 LDR W8, [X0 + 0xE0]
	0x037D848C CBNZ W8, 0x37D8494
	0x037D8490 BL 0x1C16DFC
	0x037D8494 MOV X0, X21
	0x037D8498 MOV X1, X31
	0x037D849C MOV X2, X31
	0x037D84A0 BL 0x3C354F8
	0x037D84A4 TBZ X0, 0x0, 0x37D84F8
	0x037D84A8 LDR X0, [X20 + 0x20]
	0x037D84AC CBZ X0, 0x37D8508
	0x037D84B0 MOV X1, X31
	0x037D84B4 BL 0x37367C0
	0x037D84B8 UBFM X8, X1, 0x20, 0x3F
	0x037D84BC CBNZ X8, 0x37D84F8
	0x037D84C0 MOV X0, X20
	0x037D84C4 MOV X1, X19
	0x037D84C8 BL 0x37D5D10
	0x037D84CC TBZ X0, 0x0, 0x37D84F8
	0x037D84D0 ADD X0, X20, 0xA0
	0x037D84D4 BL 0x37D2BD0
	0x037D84D8 TBZ X0, 0x0, 0x37D84F8
	0x037D84DC LDR W1, [X20 + 0xA0]
	0x037D84E0 MOV X0, X19
	0x037D84E4 LDP X20, X19, [X31 + 0x20]
	0x037D84E8 LDP X22, X21, [X31 + 0x10]
	0x037D84EC MOV W2, W31
	0x037D84F0 LDR X30, [X31], #0x30
	0x037D84F4 B 0x37D5904
	0x037D84F8 LDP X20, X19, [X31 + 0x20]
	0x037D84FC LDP X22, X21, [X31 + 0x10]
	0x037D8500 LDR X30, [X31], #0x30
	0x037D8504 RET
	0x037D8508 BL 0x1C16F20
	0x037D850C STR X30, [X31 - 0x30]!
	0x037D8510 STP X22, X21, [X31 + 0x10]
	0x037D8514 STP X20, X19, [X31 + 0x20]
	0x037D8518 ADRP X21, 0xC09000
	0x037D851C LDRB W8, [X21 + 0x2E8]
	0x037D8520 MOV X19, X1
	0x037D8524 MOV X20, X0
	0x037D8528 TBNZ X8, 0x0, 0x37D8540
	0x037D852C ADRP X0, 0x96C000
	0x037D8530 LDR X0, [X0 + 0xFC8]
	0x037D8534 BL 0x1C16CF4
	0x037D8538 MOVZ W8, 0x1
	0x037D853C STRB W8, [X21 + 0x2E8]
	0x037D8540 CBZ X19, 0x37D859C
	0x037D8544 ADRP X22, 0x96C000
	0x037D8548 LDR X22, [X22 + 0xFC8]
	0x037D854C MOV X0, X20
	0x037D8550 BL 0x37DFF1C
	0x037D8554 MOV W21, W0
	0x037D8558 MOV X0, X20
	0x037D855C BL 0x37D38F8
	0x037D8560 LDR X3, [X22]
	0x037D8564 MOV X2, X19
	0x037D8568 BL 0x223C504
	0x037D856C TBZ X0, 0x0, 0x37D858C
	0x037D8570 MOV W0, W21
	0x037D8574 MOV X1, X19
	0x037D8578 LDP X20, X19, [X31 + 0x20]
	0x037D857C LDP X22, X21, [X31 + 0x10]
	0x037D8580 MOV W2, W31
	0x037D8584 LDR X30, [X31], #0x30
	0x037D8588 B 0x37E1BC0
	0x037D858C LDP X20, X19, [X31 + 0x20]
	0x037D8590 LDP X22, X21, [X31 + 0x10]
	0x037D8594 LDR X30, [X31], #0x30
	0x037D8598 RET
	0x037D859C ADRP X0, 0x920000
	0x037D85A0 LDR X0, [X0 + 0x528]
	0x037D85A4 BL 0x1C16D08
	0x037D85A8 BL 0x1C16F10
	0x037D85AC MOV X19, X0
	0x037D85B0 ADRP X0, 0x943000
	0x037D85B4 LDR X0, [X0 + 0xD20]
	0x037D85B8 BL 0x1C16D08
	0x037D85BC MOV X1, X0
	0x037D85C0 MOV X0, X19
	0x037D85C4 MOV X2, X31
	0x037D85C8 BL 0x330E100
	0x037D85CC ADRP X0, 0x970000
	0x037D85D0 LDR X0, [X0 + 0xC00]
	0x037D85D4 BL 0x1C16D08
	0x037D85D8 MOV X1, X0
	0x037D85DC MOV X0, X19
	0x037D85E0 BL 0x1C16DEC
	0x037D85E4 MOVN W8, 0x0
	0x037D85E8 MOV X1, X31
	0x037D85EC STR W8, [X0 + 0x70]
	0x037D85F0 STR W8, [X0 + 0x90]
	0x037D85F4 B 0x3C36C30
	0x037D85F8 STR X30, [X31 - 0x20]!
	0x037D85FC STP X20, X19, [X31 + 0x10]
	0x037D8600 ADRP X19, 0xC09000
	0x037D8604 ADRP X20, 0x970000
	0x037D8608 LDRB W8, [X19 + 0x27C]
	0x037D860C LDR X20, [X20 + 0x8F8]
	0x037D8610 TBNZ X8, 0x0, 0x37D8628
	0x037D8614 ADRP X0, 0x970000
	0x037D8618 LDR X0, [X0 + 0x8F8]
	0x037D861C BL 0x1C16CF4
	0x037D8620 MOVZ W8, 0x1
	0x037D8624 STRB W8, [X19 + 0x27C]
	0x037D8628 LDR X8, [X20]
	0x037D862C LDP X20, X19, [X31 + 0x10]
	0x037D8630 MOVI V0.2D, 0xFFFFFFFFFFFFFFFF
	0x037D8634 LDR X8, [X8 + 0xB8]
	0x037D8638 STR D0, [X8 + 0x28]
	0x037D863C LDR X30, [X31], #0x20
	0x037D8640 RET
	0x037D8644 LDR X0, [X0 + 0x30]
	0x037D8648 RET
	0x037D864C LDR X0, [X0 + 0x38]
	0x037D8650 RET
	0x037D8654 STP X30, X21, [X31 - 0x20]!
	0x037D8658 STP X20, X19, [X31 + 0x10]
	0x037D865C ADRP X20, 0xC09000
	0x037D8660 ADRP X21, 0x970000
	0x037D8664 LDRB W8, [X20 + 0x27D]
	0x037D8668 LDR X21, [X21 + 0xC08]
	0x037D866C MOV X19, X0
	0x037D8670 TBNZ X8, 0x0, 0x37D8688
	0x037D8674 ADRP X0, 0x970000
	0x037D8678 LDR X0, [X0 + 0xC08]
	0x037D867C BL 0x1C16CF4
	0x037D8680 MOVZ W8, 0x1
	0x037D8684 STRB W8, [X20 + 0x27D]
	0x037D8688 LDR X1, [X21]
	0x037D868C MOV X0, X19
	0x037D8690 LDP X20, X19, [X31 + 0x10]
	0x037D8694 LDP X30, X21, [X31], #0x20
	0x037D8698 B 0x272BD20
	0x037D869C SUB X31, X31, 0x40
	0x037D86A0 STR X30, [X31 + 0x10]
	0x037D86A4 STP X22, X21, [X31 + 0x20]
	0x037D86A8 STP X20, X19, [X31 + 0x30]
	0x037D86AC ADRP X21, 0xC09000
	0x037D86B0 ADRP X22, 0x970000
	0x037D86B4 LDRB W8, [X21 + 0x27E]
	0x037D86B8 LDR X22, [X22 + 0xC08]
	0x037D86BC MOV X19, X1
	0x037D86C0 MOV X20, X0
	0x037D86C4 TBNZ X8, 0x0, 0x37D86F4
	0x037D86C8 ADRP X0, 0x91B000
	0x037D86CC LDR X0, [X0 + 0x598]
	0x037D86D0 BL 0x1C16CF4
	0x037D86D4 ADRP X0, 0x970000
	0x037D86D8 LDR X0, [X0 + 0xC08]
	0x037D86DC BL 0x1C16CF4
	0x037D86E0 ADRP X0, 0x91C000
	0x037D86E4 LDR X0, [X0 + 0xEC8]
	0x037D86E8 BL 0x1C16CF4
	0x037D86EC MOVZ W8, 0x1
	0x037D86F0 STRB W8, [X21 + 0x27E]
	0x037D86F4 LDR X1, [X22]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0xC0A000
	008 Move X21, 0x971000
	009 Move W8, [X20+626]
	010 Move X21, [X21+2296]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0x971000
	017 Move X0, [X0+2960]
	018 Call 0x1C17CF4
	019 Move X0, 0x971000
	020 Move X0, [X0+2968]
	021 Call 0x1C17CF4
	022 Move X0, 0x91C000
	023 Move X0, [X0+3584]
	024 Call 0x1C17CF4
	025 Move X0, 0x971000
	026 Move X0, [X0+2296]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X20+626], W8
	030 Move [X19+149], W31
	031 Move X0, [X21]
	032 Move X20, 0x971000
	033 Move W8, [X0+224]
	034 Move X20, [X20+2968]
	035 Compare W8, 0
	036 JumpIfNotEqual {39}
	037 Call 0x1C17DFC
	038 Move X0, [X21]
	039 Move X8, [X0+184]
	040 Move X3, [X20]
	041 Move X1, X19
	042 Move X0, [X8+8]
	043 Move W2, [X8]
	044 Call 0x217AB8C, X0, X1, X2
	045 Add W31, W0, 1
	046 Move W20, W0
	047 Move X0, [X21]
	048 Move X22, 0x971000
	049 Move W8, [X0+224]
	050 Move X22, [X22+2960]
	051 Compare W8, 0
	052 JumpIfNotEqual {55}
	053 Call 0x1C17DFC
	054 Move X0, [X21]
	055 Move X1, [X0+184]
	056 Move X3, [X22]
	057 Move W2, W20
	058 Move X0, [X1+8]
	059 Call ArrayHelpers.EraseAtWithCapacity, X0, X1, X2
	060 Move X0, [X21]
	061 Move W8, [X0+224]
	062 Compare W8, 0
	063 JumpIfNotEqual {66}
	064 Call 0x1C17DFC
	065 Move X0, [X21]
	066 Move X8, [X0+184]
	067 Move W9, [X8]
	068 Compare W9, 0
	069 JumpIfNotEqual {87}
	070 Move W9, [X0+224]
	071 Compare W9, 0
	072 JumpIfNotEqual {76}
	073 Call 0x1C17DFC
	074 Move X0, [X21]
	075 Move X8, [X0+184]
	076 Move X9, [X8+16]
	077 Compare X9, 0
	078 JumpIfEqual {87}
	079 Move W9, [X0+224]
	080 Compare W9, 0
	081 JumpIfNotEqual {85}
	082 Call 0x1C17DFC
	083 Move X8, [X21]
	084 Move X8, [X8+184]
	085 Move X0, [X8+16]
	086 Call InputUser.remove_onChange, X0
	087 Move X0, X19
	088 Call PlayerInput.StopListeningForUnpairedDeviceActivity, X0
	089 Move X0, X19
	090 Call PlayerInput.StopListeningForDeviceChanges, X0
	091 Move X20, 0xC0A000
	092 Move W8, [X20+779]
	093 Compare W8, 0
	094 JumpIfNotEqual {100}
	095 Move X0, 0x971000
	096 Move X0, [X0+2552]
	097 Call 0x1C17CF4
	098 Move W8, 1
	099 Move [X20+779], W8
	100 Move X8, 0x971000
	101 Move X8, [X8+2552]
	102 Move X8, [X8]
	103 Move X8, [X8+184]
	104 Move X0, [X8]
	105 Compare X0, 0
	106 JumpIfEqual {109}
	107 Move X1, X19
	108 Call PlayerInputManager.NotifyPlayerLeft, X0, X1
	109 Move X23, 0x91C000
	110 Move X23, [X23+3584]
	111 Move X0, X31
	112 Call InputActionRebindingExtensions.DeferBindingResolution
	113 Move X8, [X19+136]
	114 Move X20, X0
	115 Compare X8, 0
	116 JumpIfEqual {120}
	117 Move X0, X8
	118 Move X1, X31
	119 Call InputActionMap.Disable, X0
	120 Move [X19+148], W31
	121 Move X0, X19
	122 Call PlayerInput.UnassignUserAndDevices, X0
	123 Move X0, X19
	124 Call PlayerInput.UninitializeActions, X0
	125 Move X21, X31
	126 Move W22, 6
	127 Compare X20, 0
	128 JumpIfEqual {150}
	129 Move X8, [X20]
	130 Move X1, [X23]
	131 NotImplemented "Instruction LDRH not yet implemented."
	132 Compare X9, 0
	133 JumpIfEqual {140}
	134 Move X10, [X8+176]
	135 Add X10, X10, 8
	136 NotImplemented "Instruction LDUR not yet implemented."
	137 NotImplemented "Instruction CMP not yet implemented."
	138 Subtract X9, X9, 1
	139 Add X10, X10, 16
	140 Move X0, X20
	141 Move W2, W31
	142 Call 0x1C5D788
	143 NotImplemented "Instruction LDRSW not yet implemented."
	144 Add X8, X8, X9
	145 Add X0, X8, 312
	146 Move X8, [X0]
	147 Move X1, [X0+8]
	148 Move X0, X20
	149 NotImplemented "Instruction BLR not yet implemented."
	150 Compare X21, 0
	151 JumpIfNotEqual {166}
	152 NotImplemented "Instruction CMP not yet implemented."
	153 Compare W22, 0
	154 JumpIfNotEqual {159}
	155 Move TEMP, 0
	156 Not TEMP
	157 Move W8, TEMP
	158 Move [X19+144], W8
	159 Move X20, [X31+32]
	160 Move X19, [X31+40]
	161 Move X22, [X31+16]
	162 Move X21, [X31+24]
	163 Move X30, [X31+48]
	164 Move X23, [X31+56]
	165 Return 
	166 Move X0, X21
	167 Call 0x1C17F18
	168 NotImplemented "Instruction CMP not yet implemented."
	169 Move X22, X0
	170 Move X0, X22
	171 Call 0x3EB2AD0
	172 Move X21, [X0]
	173 Call 0x3EB2AE0
	174 Move W22, W31
	175 Compare X20, 0
	176 JumpIfNotEqual {129}
	177 Move X21, X31
	178 Move X22, X0
	179 Compare X20, 0
	180 JumpIfEqual {202}
	181 Move X8, [X20]
	182 Move X1, [X23]
	183 NotImplemented "Instruction LDRH not yet implemented."
	184 Compare X9, 0
	185 JumpIfEqual {192}
	186 Move X10, [X8+176]
	187 Add X10, X10, 8
	188 NotImplemented "Instruction LDUR not yet implemented."
	189 NotImplemented "Instruction CMP not yet implemented."
	190 Subtract X9, X9, 1
	191 Add X10, X10, 16
	192 Move X0, X20
	193 Move W2, W31
	194 Call 0x1C5D788
	195 NotImplemented "Instruction LDRSW not yet implemented."
	196 Add X8, X8, X9
	197 Add X0, X8, 312
	198 Move X8, [X0]
	199 Move X1, [X0+8]
	200 Move X0, X20
	201 NotImplemented "Instruction BLR not yet implemented."
	202 Compare X21, 0
	203 JumpIfNotEqual {206}
	204 Move X0, X22
	205 Call 0x1D2D690
	206 Move X0, X21
	207 Call 0x1C17F18
	208 Call 0x1991590

Method: System.Void DebugLogAction(UnityEngine.InputSystem.InputAction/CallbackContext context)

Disassembly:
	0x037D88DC LDRB W0, [X0 + 0x60]
	0x037D88E0 RET
	0x037D88E4 SUB X31, X31, 0x80
	0x037D88E8 STP X30, X23, [X31 + 0x50]
	0x037D88EC STP X22, X21, [X31 + 0x60]
	0x037D88F0 STP X20, X19, [X31 + 0x70]
	0x037D88F4 ADRP X22, 0xC09000
	0x037D88F8 LDRB W8, [X22 + 0x283]
	0x037D88FC MOV W20, W1
	0x037D8900 MOV X19, X0
	0x037D8904 AND W21, W1, 0x1
	0x037D8908 TBNZ X8, 0x0, 0x37D895C
	0x037D890C ADRP X0, 0x970000
	0x037D8910 LDR X0, [X0 + 0xC28]
	0x037D8914 BL 0x1C16CF4
	0x037D8918 ADRP X0, 0x970000
	0x037D891C LDR X0, [X0 + 0xC30]
	0x037D8920 BL 0x1C16CF4
	0x037D8924 ADRP X0, 0x970000
	0x037D8928 LDR X0, [X0 + 0xC38]
	0x037D892C BL 0x1C16CF4
	0x037D8930 ADRP X0, 0x91B000
	0x037D8934 LDR X0, [X0 + 0x598]
	0x037D8938 BL 0x1C16CF4
	0x037D893C ADRP X0, 0x970000
	0x037D8940 LDR X0, [X0 + 0x8F8]
	0x037D8944 BL 0x1C16CF4
	0x037D8948 ADRP X0, 0x970000
	0x037D894C LDR X0, [X0 + 0xC40]
	0x037D8950 BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+8], X2
	003 Move [X31+16], X30
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xC0A000
	007 Move [X31], X1
	008 Move X19, 0x91C000
	009 Move W8, [X20+627]
	010 Move X19, [X19+2600]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x91C000
	016 Move X0, [X0+2600]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+627], W8
	020 Add X0, X31, 0
	021 Move X1, X31
	022 Call CallbackContext.ToString, X0
	023 Move X8, [X19]
	024 Move X19, X0
	025 Move W9, [X8+224]
	026 Compare W9, 0
	027 JumpIfNotEqual {30}
	028 Move X0, X8
	029 Call 0x1C17DFC
	030 Move X0, X19
	031 Move X1, X31
	032 Call Debug.Log, X0
	033 Move X20, [X31+32]
	034 Move X19, [X31+40]
	035 Move X30, [X31+16]
	036 Add X31, X31, 48
	037 Return 

Method: System.Void HandleDeviceLost()

Disassembly:
	0x037D8954 MOVZ W8, 0x1
	0x037D8958 STRB W8, [X22 + 0x283]
	0x037D895C STP X31, X31, [X31 + 0x30]
	0x037D8960 STR X31, [X31 + 0x40]
	0x037D8964 STP X31, X31, [X31 + 0x20]
	0x037D8968 LDRB W8, [X19 + 0x60]
	0x037D896C CMP W8, W21
	0x037D8970 B.EQ 0x37D8A70
	0x037D8974 STRB W21, [X19 + 0x60]
	0x037D8978 TBZ X20, 0x0, 0x37D8988
	0x037D897C MOV X0, X19
	0x037D8980 BL 0x37D8B18
	0x037D8984 B 0x37D8A70
	0x037D8988 ADRP X8, 0x970000
	0x037D898C LDR X8, [X8 + 0x8F8]
	0x037D8990 LDR X0, [X8]
	0x037D8994 LDR W8, [X0 + 0xE0]
	0x037D8998 CBNZ W8, 0x37D89A0
	0x037D899C BL 0x1C16DFC
	0x037D89A0 BL 0x37D3A68
	0x037D89A4 ADRP X8, 0x970000
	0x037D89A8 LDR X8, [X8 + 0xC40]
	0x037D89AC STP X0, X1, [X31 + 0x20]
	0x037D89B0 ADD X0, X31, 0x20
	0x037D89B4 LDR X9, [X8]
	0x037D89B8 ADD X8, X31, 0x8
	0x037D89BC MOV X1, X9
	0x037D89C0 BL 0x24FD990
	0x037D89C4 LDUR V0, [X31 + 0x8]
	0x037D89C8 LDR X8, [X31 + 0x18]
	0x037D89CC ADRP X21, 0x970000
	0x037D89D0 ADRP X22, 0x970000
	0x037D89D4 LDR X21, [X21 + 0xC30]
	0x037D89D8 LDR X22, [X22 + 0xC38]
	0x037D89DC STR V0, [X31 + 0x3]
	0x037D89E0 STR X8, [X31 + 0x40]
	0x037D89E4 ADRP X23, 0x91B000
	0x037D89E8 LDR X23, [X23 + 0x598]
	0x037D89EC LDR X1, [X21]
	0x037D89F0 ADD X0, X31, 0x30
	0x037D89F4 BL 0x2BC496C
	0x037D89F8 TBZ X0, 0x0, 0x37D8A5C
	0x037D89FC LDR X1, [X22]
	0x037D8A00 ADD X0, X31, 0x30
	0x037D8A04 BL 0x2BC4998
	0x037D8A08 CBZ X0, 0x37D8A84
	0x037D8A0C LDR X8, [X23]
	0x037D8A10 LDR X20, [X0 + 0x78]
	0x037D8A14 LDR W9, [X8 + 0xE0]
	0x037D8A18 CBNZ W9, 0x37D8A24
	0x037D8A1C MOV X0, X8
	0x037D8A20 BL 0x1C16DFC
	0x037D8A24 MOV X0, X20
	0x037D8A28 MOV X1, X31
	0x037D8A2C MOV X2, X31
	0x037D8A30 BL 0x3C354F8
	0x037D8A34 TBZ X0, 0x0, 0x37D89EC
	0x037D8A38 CBZ X20, 0x37D8A88
	0x037D8A3C FMOV S0, W31
	0x037D8A40 FMOV S1, W31
	0x037D8A44 FMOV S2, 1
	0x037D8A48 FMOV S3, 1
	0x037D8A4C MOV X0, X20
	0x037D8A50 MOV X1, X31
	0x037D8A54 BL 0x3C03E70
	0x037D8A58 B 0x37D89EC
	0x037D8A5C ADRP X8, 0x970000
	0x037D8A60 LDR X8, [X8 + 0xC28]
	0x037D8A64 ADD X0, X31, 0x30
	0x037D8A68 LDR X1, [X8]
	0x037D8A6C BL 0x2BC4968
	0x037D8A70 LDP X20, X19, [X31 + 0x70]
	0x037D8A74 LDP X22, X21, [X31 + 0x60]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xC0A000
	005 Move W8, [X20+628]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {25}
	011 Move X0, 0x971000
	012 Move X0, [X0+2824]
	013 Call 0x1C17CF4
	014 Move X0, 0x971000
	015 Move X0, [X0+2832]
	016 Call 0x1C17CF4
	017 Move X0, 0x971000
	018 Move X0, [X0+3008]
	019 Call 0x1C17CF4
	020 Move X0, 0x971000
	021 Move X0, [X0+3016]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+628], W8
	025 Move W8, [X19+40]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X9, -46399488
	028 Add X9, X9, 2428
	029 NotImplemented "Instruction ADR not yet implemented."
	030 Move W11, [X9]
	031 Add X10, X10, X11
	032 CallNoReturn X10
	033 Move X8, 0x971000
	034 Move X8, [X8+3016]
	035 Move X0, X19
	036 Move X2, X19
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X1, [X8]
	040 Move W3, 1
	041 Move X4, X31
	042 Move X30, [X31+32]
	043 Call Component.SendMessage, X0, X1, X2, X3
	044 Return 
	045 Move X8, 0x971000
	046 Move X8, [X8+3016]
	047 Move X0, X19
	048 Move X2, X19
	049 Move X20, [X31+16]
	050 Move X19, [X31+24]
	051 Move X1, [X8]
	052 Move W3, 1
	053 Move X4, X31
	054 Move X30, [X31+32]
	055 Call Component.BroadcastMessage, X0, X1, X2, X3
	056 Return 
	057 Move X0, [X19+56]
	058 Compare X0, 0
	059 JumpIfEqual {69}
	060 Move X8, 0x971000
	061 Move X8, [X8+2832]
	062 Move X1, X19
	063 Move X20, [X31+16]
	064 Move X19, [X31+24]
	065 Move X2, [X8]
	066 Move X30, [X31+32]
	067 Call UnityEvent`1<Object>.Invoke, X0, X1
	068 Return 
	069 Move X20, [X31+16]
	070 Move X19, [X31+24]
	071 Move X30, [X31+32]
	072 Return 
	073 Move X8, 0x971000
	074 Move X9, 0x971000
	075 Move X8, [X8+3008]
	076 Move X9, [X9+2824]
	077 Add X0, X19, 176
	078 Move X1, X19
	079 Move X2, [X8]
	080 Move X4, [X9]
	081 Move X20, [X31+16]
	082 Move X19, [X31+24]
	083 Move X3, X31
	084 Move X30, [X31+32]
	085 Call DelegateHelpers.InvokeCallbacksSafe, X0, X1, X2, X3
	086 Return 

Method: System.Void HandleDeviceRegained()

Disassembly:
	0x037D8A78 LDP X30, X23, [X31 + 0x50]
	0x037D8A7C ADD X31, X31, 0x80
	0x037D8A80 RET
	0x037D8A84 BL 0x1C16F20
	0x037D8A88 BL 0x1C16F20
	0x037D8A8C B 0x37D8AA4
	0x037D8A90 B 0x37D8AA4
	0x037D8A94 B 0x37D8AA4
	0x037D8A98 B 0x37D8AA4
	0x037D8A9C B 0x37D8AA4
	0x037D8AA0 B 0x37D8AA4
	0x037D8AA4 MOV X20, X0
	0x037D8AA8 CMP W1, 0x1
	0x037D8AAC B.NE 0x37D8AE0
	0x037D8AB0 MOV X0, X20
	0x037D8AB4 BL 0x3EB1AD0
	0x037D8AB8 LDR X21, [X0]
	0x037D8ABC BL 0x3EB1AE0
	0x037D8AC0 ADRP X8, 0x970000
	0x037D8AC4 LDR X8, [X8 + 0xC28]
	0x037D8AC8 ADD X0, X31, 0x30
	0x037D8ACC LDR X1, [X8]
	0x037D8AD0 BL 0x2BC4968
	0x037D8AD4 CBZ X21, 0x37D897C
	0x037D8AD8 MOV X0, X21
	0x037D8ADC BL 0x1C16F18
	0x037D8AE0 MOV X21, X31
	0x037D8AE4 B 0x37D8AEC
	0x037D8AE8 MOV X20, X0
	0x037D8AEC ADRP X8, 0x970000
	0x037D8AF0 LDR X8, [X8 + 0xC28]
	0x037D8AF4 LDR X1, [X8]
	0x037D8AF8 ADD X0, X31, 0x30
	0x037D8AFC BL 0x2BC4968
	0x037D8B00 CBNZ X21, 0x37D8B0C
	0x037D8B04 MOV X0, X20
	0x037D8B08 BL 0x1D2C690
	0x037D8B0C MOV X0, X21
	0x037D8B10 BL 0x1C16F18
	0x037D8B14 BL 0x1990590
	0x037D8B18 SUB X31, X31, 0xD0
	0x037D8B1C STP D9, D8, [X31 + 0x60]
	0x037D8B20 STP X29, X30, [X31 + 0x70]
	0x037D8B24 STP X28, X27, [X31 + 0x80]
	0x037D8B28 STP X26, X25, [X31 + 0x90]
	0x037D8B2C STP X24, X23, [X31 + 0xA0]
	0x037D8B30 STP X22, X21, [X31 + 0xB0]
	0x037D8B34 STP X20, X19, [X31 + 0xC0]
	0x037D8B38 ADRP X20, 0xC09000
	0x037D8B3C LDRB W8, [X20 + 0x296]
	0x037D8B40 MOV X19, X0
	0x037D8B44 TBNZ X8, 0x0, 0x37D8BD4
	0x037D8B48 ADRP X0, 0x91B000
	0x037D8B4C LDR X0, [X0 + 0xA28]
	0x037D8B50 BL 0x1C16CF4
	0x037D8B54 ADRP X0, 0x970000
	0x037D8B58 LDR X0, [X0 + 0xC28]
	0x037D8B5C BL 0x1C16CF4
	0x037D8B60 ADRP X0, 0x970000
	0x037D8B64 LDR X0, [X0 + 0xC30]
	0x037D8B68 BL 0x1C16CF4
	0x037D8B6C ADRP X0, 0x970000
	0x037D8B70 LDR X0, [X0 + 0xC38]
	0x037D8B74 BL 0x1C16CF4
	0x037D8B78 ADRP X0, 0x91B000
	0x037D8B7C LDR X0, [X0 + 0x758]
	0x037D8B80 BL 0x1C16CF4
	0x037D8B84 ADRP X0, 0x91B000
	0x037D8B88 LDR X0, [X0 + 0x598]
	0x037D8B8C BL 0x1C16CF4
	0x037D8B90 ADRP X0, 0x970000
	0x037D8B94 LDR X0, [X0 + 0x8F8]
	0x037D8B98 BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xC0A000
	005 Move W8, [X20+629]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {25}
	011 Move X0, 0x971000
	012 Move X0, [X0+2824]
	013 Call 0x1C17CF4
	014 Move X0, 0x971000
	015 Move X0, [X0+2832]
	016 Call 0x1C17CF4
	017 Move X0, 0x971000
	018 Move X0, [X0+3024]
	019 Call 0x1C17CF4
	020 Move X0, 0x971000
	021 Move X0, [X0+3032]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+629], W8
	025 Move W8, [X19+40]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X9, -46399488
	028 Add X9, X9, 2428
	029 NotImplemented "Instruction ADR not yet implemented."
	030 Move W11, [X9]
	031 Add X10, X10, X11
	032 CallNoReturn X10
	033 Move X8, 0x971000
	034 Move X8, [X8+3024]
	035 Move X0, X19
	036 Move X2, X19
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X1, [X8]
	040 Move W3, 1
	041 Move X4, X31
	042 Move X30, [X31+32]
	043 Call Component.SendMessage, X0, X1, X2, X3
	044 Return 
	045 Move X8, 0x971000
	046 Move X8, [X8+3024]
	047 Move X0, X19
	048 Move X2, X19
	049 Move X20, [X31+16]
	050 Move X19, [X31+24]
	051 Move X1, [X8]
	052 Move W3, 1
	053 Move X4, X31
	054 Move X30, [X31+32]
	055 Call Component.BroadcastMessage, X0, X1, X2, X3
	056 Return 
	057 Move X0, [X19+64]
	058 Compare X0, 0
	059 JumpIfEqual {69}
	060 Move X8, 0x971000
	061 Move X8, [X8+2832]
	062 Move X1, X19
	063 Move X20, [X31+16]
	064 Move X19, [X31+24]
	065 Move X2, [X8]
	066 Move X30, [X31+32]
	067 Call UnityEvent`1<Object>.Invoke, X0, X1
	068 Return 
	069 Move X20, [X31+16]
	070 Move X19, [X31+24]
	071 Move X30, [X31+32]
	072 Return 
	073 Move X8, 0x971000
	074 Move X9, 0x971000
	075 Move X8, [X8+3032]
	076 Move X9, [X9+2824]
	077 Add X0, X19, 256
	078 Move X1, X19
	079 Move X2, [X8]
	080 Move X4, [X9]
	081 Move X20, [X31+16]
	082 Move X19, [X31+24]
	083 Move X3, X31
	084 Move X30, [X31+32]
	085 Call DelegateHelpers.InvokeCallbacksSafe, X0, X1, X2, X3
	086 Return 

Method: System.Void HandleControlsChanged()

Disassembly:
	0x037D7CE4 B.NE 0x37D7CEC
	0x037D7CE8 BL 0x37D6CE4
	0x037D7CEC ADD W20, W20, 0x1
	0x037D7CF0 B 0x37D7C84
	0x037D7CF4 LDP X20, X19, [X31 + 0x20]
	0x037D7CF8 LDP X22, X21, [X31 + 0x10]
	0x037D7CFC LDR X30, [X31], #0x30
	0x037D7D00 RET
	0x037D7D04 BL 0x1C16F20
	0x037D7D08 BL 0x1C16F28
	0x037D7D0C CMP W0, W1
	0x037D7D10 CSET W0, EQ
	0x037D7D14 RET
	0x037D7D18 SUB X31, X31, 0x30
	0x037D7D1C STP X30, X21, [X31 + 0x10]
	0x037D7D20 STP X20, X19, [X31 + 0x20]
	0x037D7D24 ADRP X21, 0xC0A000
	0x037D7D28 ADRP X20, 0x971000
	0x037D7D2C LDRB W8, [X21 + 0x278]
	0x037D7D30 LDR X20, [X20 + 0x8F8]
	0x037D7D34 MOV X19, X0
	0x037D7D38 TBNZ X8, 0x0, 0x37D7D68
	0x037D7D3C ADRP X0, 0x91C000
	0x037D7D40 LDR X0, [X0 + 0x598]
	0x037D7D44 BL 0x1C16CF4
	0x037D7D48 ADRP X0, 0x971000
	0x037D7D4C LDR X0, [X0 + 0x8F8]
	0x037D7D50 BL 0x1C16CF4
	0x037D7D54 ADRP X0, 0x971000
	0x037D7D58 LDR X0, [X0 + 0xBE0]
	0x037D7D5C BL 0x1C16CF4
	0x037D7D60 MOVZ W8, 0x1
	0x037D7D64 STRB W8, [X21 + 0x278]
	0x037D7D68 LDR X0, [X20]
	0x037D7D6C ADRP X20, 0x971000
	0x037D7D70 LDR W8, [X0 + 0xE0]
	0x037D7D74 LDR X20, [X20 + 0xBE0]
	0x037D7D78 CBNZ W8, 0x37D7D80
	0x037D7D7C BL 0x1C16DFC
	0x037D7D80 BL 0x37D3A68
	0x037D7D84 LDR X2, [X20]
	0x037D7D88 STP X0, X1, [X31]
	0x037D7D8C ADD X0, X31, 0x0
	0x037D7D90 MOV W1, W31
	0x037D7D94 BL 0x24FDB3C
	0x037D7D98 CBZ X0, 0x37D7E04
	0x037D7D9C ADRP X20, 0x91C000
	0x037D7DA0 LDR X20, [X20 + 0x598]
	0x037D7DA4 BL 0x37D1AD4
	0x037D7DA8 LDR X8, [X20]
	0x037D7DAC MOV X20, X0
	0x037D7DB0 LDR W9, [X8 + 0xE0]
	0x037D7DB4 CBNZ W9, 0x37D7DC0
	0x037D7DB8 MOV X0, X8
	0x037D7DBC BL 0x1C16DFC
	0x037D7DC0 MOV X0, X20
	0x037D7DC4 MOV X1, X31
	0x037D7DC8 MOV X2, X31
	0x037D7DCC BL 0x3C354F8
	0x037D7DD0 TBZ X0, 0x0, 0x37D7DEC
	0x037D7DD4 CBZ X20, 0x37D7E04
	0x037D7DD8 MOV X0, X20
	0x037D7DDC MOV X1, X19
	0x037D7DE0 MOV X2, X31
	0x037D7DE4 BL 0x3737EE8
	0x037D7DE8 B 0x37D7DF0
	0x037D7DEC MOV W0, W31
	0x037D7DF0 LDP X20, X19, [X31 + 0x20]
	0x037D7DF4 LDP X30, X21, [X31 + 0x10]
	0x037D7DF8 AND W0, W0, 0x1
	0x037D7DFC ADD X31, X31, 0x30
	0x037D7E00 RET
	0x037D7E04 BL 0x1C16F20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xC0B000
	005 Move W8, [X20+630]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {25}
	011 Move X0, 0x972000
	012 Move X0, [X0+2824]
	013 Call 0x1C17CF4
	014 Move X0, 0x972000
	015 Move X0, [X0+2832]
	016 Call 0x1C17CF4
	017 Move X0, 0x972000
	018 Move X0, [X0+2840]
	019 Call 0x1C17CF4
	020 Move X0, 0x972000
	021 Move X0, [X0+2848]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+630], W8
	025 Move W8, [X19+40]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X9, -46395392
	028 Add X9, X9, 2428
	029 NotImplemented "Instruction ADR not yet implemented."
	030 Move W11, [X9]
	031 Add X10, X10, X11
	032 CallNoReturn X10
	033 Move X8, 0x972000
	034 Move X8, [X8+2848]
	035 Move X0, X19
	036 Move X2, X19
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X1, [X8]
	040 Move W3, 1
	041 Move X4, X31
	042 Move X30, [X31+32]
	043 Call Component.SendMessage, X0, X1, X2, X3
	044 Return 
	045 Move X8, 0x972000
	046 Move X8, [X8+2848]
	047 Move X0, X19
	048 Move X2, X19
	049 Move X20, [X31+16]
	050 Move X19, [X31+24]
	051 Move X1, [X8]
	052 Move W3, 1
	053 Move X4, X31
	054 Move X30, [X31+32]
	055 Call Component.BroadcastMessage, X0, X1, X2, X3
	056 Return 
	057 Move X0, [X19+72]
	058 Compare X0, 0
	059 JumpIfEqual {69}
	060 Move X8, 0x972000
	061 Move X8, [X8+2832]
	062 Move X1, X19
	063 Move X20, [X31+16]
	064 Move X19, [X31+24]
	065 Move X2, [X8]
	066 Move X30, [X31+32]
	067 Call UnityEvent`1<Object>.Invoke, X0, X1
	068 Return 
	069 Move X20, [X31+16]
	070 Move X19, [X31+24]
	071 Move X30, [X31+32]
	072 Return 
	073 Move X8, 0x972000
	074 Move X9, 0x972000
	075 Move X8, [X8+2840]
	076 Move X9, [X9+2824]
	077 Add X0, X19, 336
	078 Move X1, X19
	079 Move X2, [X8]
	080 Move X4, [X9]
	081 Move X20, [X31+16]
	082 Move X19, [X31+24]
	083 Move X3, X31
	084 Move X30, [X31+32]
	085 Call DelegateHelpers.InvokeCallbacksSafe, X0, X1, X2, X3
	086 Return 

Method: System.Void OnUserChange(UnityEngine.InputSystem.Users.InputUser user, UnityEngine.InputSystem.Users.InputUserChange change, UnityEngine.InputSystem.InputDevice device)

Disassembly:
	0x037D8B9C ADRP X0, 0x970000
	0x037D8BA0 LDR X0, [X0 + 0xC40]
	0x037D8BA4 BL 0x1C16CF4
	0x037D8BA8 ADRP X0, 0x970000
	0x037D8BAC LDR X0, [X0 + 0xC48]
	0x037D8BB0 BL 0x1C16CF4
	0x037D8BB4 ADRP X0, 0x970000
	0x037D8BB8 LDR X0, [X0 + 0xC50]
	0x037D8BBC BL 0x1C16CF4
	0x037D8BC0 ADRP X0, 0x970000
	0x037D8BC4 LDR X0, [X0 + 0xC58]
	0x037D8BC8 BL 0x1C16CF4
	0x037D8BCC MOVZ W8, 0x1
	0x037D8BD0 STRB W8, [X20 + 0x296]
	0x037D8BD4 STP X31, X31, [X31 + 0x40]
	0x037D8BD8 STR X31, [X31 + 0x50]
	0x037D8BDC LDRB W8, [X19 + 0x60]
	0x037D8BE0 CBZ W8, 0x37D8F40
	0x037D8BE4 ADRP X22, 0x970000
	0x037D8BE8 LDR X22, [X22 + 0x8F8]
	0x037D8BEC ADRP X21, 0x970000
	0x037D8BF0 LDR X0, [X22]
	0x037D8BF4 LDR W8, [X0 + 0xE0]
	0x037D8BF8 LDR X21, [X21 + 0xC40]
	0x037D8BFC CBNZ W8, 0x37D8C04
	0x037D8C00 BL 0x1C16DFC
	0x037D8C04 ADRP X23, 0x970000
	0x037D8C08 ADRP X24, 0x970000
	0x037D8C0C ADRP X25, 0x91B000
	0x037D8C10 ADRP X26, 0x91B000
	0x037D8C14 ADRP X28, 0x91B000
	0x037D8C18 LDR X23, [X23 + 0xC30]
	0x037D8C1C LDR X24, [X24 + 0xC38]
	0x037D8C20 LDR X25, [X25 + 0x598]
	0x037D8C24 LDR X26, [X26 + 0xA28]
	0x037D8C28 LDR X28, [X28 + 0x758]
	0x037D8C2C BL 0x37D3A68
	0x037D8C30 LDR X9, [X21]
	0x037D8C34 STP X0, X1, [X31 + 0x30]
	0x037D8C38 ADD X8, X31, 0x18
	0x037D8C3C ADD X0, X31, 0x30
	0x037D8C40 MOV X1, X9
	0x037D8C44 BL 0x24FD990
	0x037D8C48 LDUR V0, [X31 + 0x18]
	0x037D8C4C LDR X8, [X31 + 0x28]
	0x037D8C50 MOV W27, W31
	0x037D8C54 STR V0, [X31 + 0x4]
	0x037D8C58 STR X8, [X31 + 0x50]
	0x037D8C5C LDR X1, [X23]
	0x037D8C60 ADD X0, X31, 0x40
	0x037D8C64 BL 0x2BC496C
	0x037D8C68 TBZ X0, 0x0, 0x37D8C8C
	0x037D8C6C LDR X1, [X24]
	0x037D8C70 ADD X0, X31, 0x40
	0x037D8C74 BL 0x2BC4998
	0x037D8C78 CBZ X0, 0x37D8F64
	0x037D8C7C LDR W8, [X0 + 0x90]
	0x037D8C80 CMP W8, W27
	0x037D8C84 CSINC W27, W27, W8, LT
	0x037D8C88 B 0x37D8C5C
	0x037D8C8C ADRP X8, 0x970000
	0x037D8C90 LDR X8, [X8 + 0xC28]
	0x037D8C94 ADD X0, X31, 0x40
	0x037D8C98 LDR X1, [X8]
	0x037D8C9C BL 0x2BC4968
	0x037D8CA0 LDR W20, [X19 + 0x64]
	0x037D8CA4 CMP W20, 0x1
	0x037D8CA8 B.LT 0x37D8D2C
	0x037D8CAC CMP W20, W27
	0x037D8CB0 B.GE 0x37D8D30
	0x037D8CB4 LDR X0, [X28]
	0x037D8CB8 ADD X1, X31, 0x18
	0x037D8CBC STR W27, [X31 + 0x18]
	0x037D8CC0 BL 0x1C16E04
	0x037D8CC4 MOV X20, X0
	0x037D8CC8 LDR W8, [X19 + 0x64]
	0x037D8CCC LDR X0, [X28]
	0x037D8CD0 ADD X1, X31, 0x14
	0x037D8CD4 STR W8, [X31 + 0x14]
	0x037D8CD8 BL 0x1C16E04
	0x037D8CDC ADRP X8, 0x970000
	0x037D8CE0 LDR X8, [X8 + 0xC58]
	0x037D8CE4 MOV X2, X0
	0x037D8CE8 MOV X1, X20
	0x037D8CEC MOV X3, X31
	0x037D8CF0 LDR X8, [X8]
	0x037D8CF4 MOV X0, X8
	0x037D8CF8 BL 0x3227BD4
	0x037D8CFC LDR X8, [X26]
	0x037D8D00 MOV X20, X0
	0x037D8D04 LDR W9, [X8 + 0xE0]
	0x037D8D08 CBNZ W9, 0x37D8D14

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xC0A000
	007 Move W8, [X21+631]
	008 Move W20, W1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x971000
	015 Move X0, [X0+2296]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+631], W8
	019 And W8, W20, 0xFFFFFFFE
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Move X22, 0x971000
	022 Move X22, [X22+2296]
	023 Move W21, W31
	024 Move X0, [X22]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {30}
	028 Call 0x1C17DFC
	029 Move X0, [X22]
	030 Move X8, [X0+184]
	031 Move W9, [X8]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move W9, [X0+224]
	034 Compare W9, 0
	035 JumpIfNotEqual {39}
	036 Call 0x1C17DFC
	037 Move X8, [X22]
	038 Move X8, [X8+184]
	039 Move X8, [X8+8]
	040 Compare X8, 0
	041 JumpIfEqual {93}
	042 Move W9, [X8+24]
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Add X8, X8, W21
	045 Move X0, [X8+32]
	046 Compare X0, 0
	047 JumpIfEqual {93}
	048 Move W8, [X0+160]
	049 NotImplemented "Instruction CMP not yet implemented."
	050 NotImplemented "Instruction CMP not yet implemented."
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Call PlayerInput.HandleDeviceLost, X0
	053 Call PlayerInput.HandleDeviceRegained, X0
	054 Add W21, W21, 1
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move X21, 0x971000
	057 Move X21, [X21+2296]
	058 Move W20, W31
	059 Move X0, [X21]
	060 Move W8, [X0+224]
	061 Compare W8, 0
	062 JumpIfNotEqual {65}
	063 Call 0x1C17DFC
	064 Move X0, [X21]
	065 Move X8, [X0+184]
	066 Move W9, [X8]
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Move W9, [X0+224]
	069 Compare W9, 0
	070 JumpIfNotEqual {74}
	071 Call 0x1C17DFC
	072 Move X8, [X21]
	073 Move X8, [X8+184]
	074 Move X8, [X8+8]
	075 Compare X8, 0
	076 JumpIfEqual {93}
	077 Move W9, [X8+24]
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Add X8, X8, W20
	080 Move X0, [X8+32]
	081 Compare X0, 0
	082 JumpIfEqual {93}
	083 Move W8, [X0+160]
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Call PlayerInput.HandleControlsChanged, X0
	086 Add W20, W20, 1
	087 Move X20, [X31+32]
	088 Move X19, [X31+40]
	089 Move X22, [X31+16]
	090 Move X21, [X31+24]
	091 Move X30, [X31+48]
	092 Return 
	093 Call 0x1C17F20
	094 Call 0x1C17F28

Method: System.Boolean OnPreFilterUnpairedDeviceUsed(UnityEngine.InputSystem.InputDevice device, UnityEngine.InputSystem.LowLevel.InputEventPtr eventPtr)

Disassembly:
	0x037D8D18 MOV X1, X19
	0x037D8D1C MOV X2, X31
	0x037D8D20 BL 0x3C06B0C
	0x037D8D24 LDR W20, [X19 + 0x64]
	0x037D8D28 B 0x37D8D30
	0x037D8D2C MOV W20, W27
	0x037D8D30 ADRP X27, 0xC00000
	0x037D8D34 LDRB W8, [X27 + 0xABE]
	0x037D8D38 SCVTF S8, W20
	0x037D8D3C CBNZ W8, 0x37D8D54
	0x037D8D40 ADRP X0, 0x91B000
	0x037D8D44 LDR X0, [X0 + 0x5A8]
	0x037D8D48 BL 0x1C16CF4
	0x037D8D4C MOVZ W8, 0x1
	0x037D8D50 STRB W8, [X27 + 0xABE]
	0x037D8D54 ADRP X8, 0x91B000
	0x037D8D58 LDR X8, [X8 + 0x5A8]
	0x037D8D5C FSQRT S8, S8
	0x037D8D60 LDR X0, [X8]
	0x037D8D64 LDR W8, [X0 + 0xE0]
	0x037D8D68 CBNZ W8, 0x37D8D70
	0x037D8D6C BL 0x1C16DFC
	0x037D8D70 MOVZ W9, 0x7F800000
	0x037D8D74 FRINTP S0, S8
	0x037D8D78 LDR X0, [X22]
	0x037D8D7C FMOV S1, W9
	0x037D8D80 FCVTPS W8, S8
	0x037D8D84 MOVZ W10, 0x80000000
	0x037D8D88 FCMP S0, S1
	0x037D8D8C LDRB W11, [X19 + 0x61]
	0x037D8D90 CSEL W22, W10, W8, EQ
	0x037D8D94 SUB W8, W22, 0x1
	0x037D8D98 MUL W9, W8, W22
	0x037D8D9C LDR W10, [X0 + 0xE0]
	0x037D8DA0 CMP W9, W20
	0x037D8DA4 CSEL W8, W22, W8, LT
	0x037D8DA8 CMP W11, 0x0
	0x037D8DAC CSEL W20, W8, W22, EQ
	0x037D8DB0 CBNZ W10, 0x37D8DB8
	0x037D8DB4 BL 0x1C16DFC
	0x037D8DB8 BL 0x37D3A68
	0x037D8DBC LDR X9, [X21]
	0x037D8DC0 STP X0, X1, [X31 + 0x30]
	0x037D8DC4 ADD X8, X31, 0x18
	0x037D8DC8 ADD X0, X31, 0x30
	0x037D8DCC MOV X1, X9
	0x037D8DD0 BL 0x24FD990
	0x037D8DD4 LDUR V0, [X31 + 0x18]
	0x037D8DD8 LDR X8, [X31 + 0x28]
	0x037D8DDC MUL W27, W20, W22
	0x037D8DE0 SCVTF S8, W22
	0x037D8DE4 STR V0, [X31 + 0x4]
	0x037D8DE8 STR X8, [X31 + 0x50]
	0x037D8DEC SCVTF S9, W20
	0x037D8DF0 LDR X1, [X23]
	0x037D8DF4 ADD X0, X31, 0x40
	0x037D8DF8 BL 0x2BC496C
	0x037D8DFC TBZ X0, 0x0, 0x37D8F2C
	0x037D8E00 LDR X1, [X24]
	0x037D8E04 ADD X0, X31, 0x40

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xC0A000
	007 Move X20, 0x971000
	008 Move W8, [X21+632]
	009 Move X20, [X20+2296]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0x91C000
	016 Move X0, [X0+1432]
	017 Call 0x1C17CF4
	018 Move X0, 0x971000
	019 Move X0, [X0+2296]
	020 Call 0x1C17CF4
	021 Move X0, 0x971000
	022 Move X0, [X0+3040]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+632], W8
	026 Move X0, [X20]
	027 Move X20, 0x971000
	028 Move W8, [X0+224]
	029 Move X20, [X20+3040]
	030 Compare W8, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1C17DFC
	033 Call PlayerInput.get_all
	034 Move X2, [X20]
	035 Move [X31], X0
	036 Move [X31+8], X1
	037 Add X0, X31, 0
	038 Move W1, W31
	039 Call ReadOnlyArray`1<Object>.get_Item, X0, X1
	040 Compare X0, 0
	041 JumpIfEqual {74}
	042 Move X20, 0x91C000
	043 Move X20, [X20+1432]
	044 Call PlayerInput.get_actions, X0
	045 Move X8, [X20]
	046 Move X20, X0
	047 Move W9, [X8+224]
	048 Compare W9, 0
	049 JumpIfNotEqual {52}
	050 Move X0, X8
	051 Call 0x1C17DFC
	052 Move X0, X20
	053 Move X1, X31
	054 Move X2, X31
	055 Call Object.op_Inequality, X0, X1
	056 Move TEMP, X0
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfNotEqual {66}
	060 Compare X20, 0
	061 JumpIfEqual {74}
	062 Move X0, X20
	063 Move X1, X19
	064 Move X2, X31
	065 Call InputActionAsset.IsUsableWithDevice, X0, X1
	066 Move W0, W31
	067 Move X20, [X31+32]
	068 Move X19, [X31+40]
	069 Move X30, [X31+16]
	070 Move X21, [X31+24]
	071 And W0, W0, 1
	072 Add X31, X31, 48
	073 Return X0
	074 Call 0x1C17F20

Method: System.Void OnUnpairedDeviceUsed(UnityEngine.InputSystem.InputControl control, UnityEngine.InputSystem.LowLevel.InputEventPtr eventPtr)

Disassembly:
	0x037D8E08 BL 0x2BC4998
	0x037D8E0C MOV X20, X0
	0x037D8E10 CBZ X0, 0x37D8F68
	0x037D8E14 LDR W29, [X20 + 0x70]
	0x037D8E18 CMP W29, W27
	0x037D8E1C B.LT 0x37D8E8C
	0x037D8E20 LDR X0, [X28]
	0x037D8E24 STR W29, [X31 + 0x18]
	0x037D8E28 ADD X1, X31, 0x18
	0x037D8E2C BL 0x1C16E04
	0x037D8E30 MOV X21, X0
	0x037D8E34 LDR X0, [X28]
	0x037D8E38 STR W27, [X31 + 0x14]
	0x037D8E3C ADD X1, X31, 0x14
	0x037D8E40 BL 0x1C16E04
	0x037D8E44 ADRP X8, 0x970000
	0x037D8E48 LDR X8, [X8 + 0xC48]
	0x037D8E4C MOV X2, X0
	0x037D8E50 LDR X0, [X8]
	0x037D8E54 MOV X1, X21
	0x037D8E58 MOV X3, X31
	0x037D8E5C BL 0x3227BD4
	0x037D8E60 MOV X21, X0
	0x037D8E64 LDR X0, [X26]
	0x037D8E68 LDR W8, [X0 + 0xE0]
	0x037D8E6C CBNZ W8, 0x37D8E74
	0x037D8E70 BL 0x1C16DFC
	0x037D8E74 MOV X0, X21
	0x037D8E78 MOV X1, X20
	0x037D8E7C MOV X2, X31
	0x037D8E80 BL 0x3C065A4
	0x037D8E84 LDR W8, [X20 + 0x90]
	0x037D8E88 STR W8, [X20 + 0x70]
	0x037D8E8C LDR X0, [X25]
	0x037D8E90 LDR X21, [X20 + 0x78]
	0x037D8E94 LDR W8, [X0 + 0xE0]
	0x037D8E98 CBNZ W8, 0x37D8EA0
	0x037D8E9C BL 0x1C16DFC
	0x037D8EA0 MOV X0, X21
	0x037D8EA4 MOV X1, X31
	0x037D8EA8 MOV X2, X31
	0x037D8EAC BL 0x3C3883C
	0x037D8EB0 TBZ X0, 0x0, 0x37D8EE0
	0x037D8EB4 LDR X0, [X26]
	0x037D8EB8 LDR W8, [X0 + 0xE0]
	0x037D8EBC CBNZ W8, 0x37D8EC4
	0x037D8EC0 BL 0x1C16DFC
	0x037D8EC4 ADRP X8, 0x970000
	0x037D8EC8 LDR X8, [X8 + 0xC50]
	0x037D8ECC LDR X0, [X8]
	0x037D8ED0 MOV X1, X20
	0x037D8ED4 MOV X2, X31
	0x037D8ED8 BL 0x3C065A4
	0x037D8EDC B 0x37D8DF0
	0x037D8EE0 CBZ X21, 0x37D8F6C
	0x037D8EE4 LDP S0, S1, [X19 + 0x70]
	0x037D8EE8 LDP S4, S2, [X19 + 0x68]
	0x037D8EEC SDIV W8, W29, W22
	0x037D8EF0 ADD W9, W8, 0x1
	0x037D8EF4 SCVTF S5, W9
	0x037D8EF8 FDIV S3, S1, S9
	0x037D8EFC MSUB W8, W8, W22, W29
	0x037D8F00 FADD S2, S1, S2
	0x037D8F04 FMUL S1, S3, S5
	0x037D8F08 FSUB S1, S2, S1
	0x037D8F0C SCVTF S5, W8
	0x037D8F10 FDIV S2, S0, S8
	0x037D8F14 FMUL S0, S2, S5
	0x037D8F18 FADD S0, S4, S0
	0x037D8F1C MOV X0, X21
	0x037D8F20 MOV X1, X31
	0x037D8F24 BL 0x3C03E70
	0x037D8F28 B 0x37D8DF0
	0x037D8F2C ADRP X8, 0x970000
	0x037D8F30 LDR X8, [X8 + 0xC28]
	0x037D8F34 ADD X0, X31, 0x40
	0x037D8F38 LDR X1, [X8]
	0x037D8F3C BL 0x2BC4968
	0x037D8F40 LDP X20, X19, [X31 + 0xC0]
	0x037D8F44 LDP X22, X21, [X31 + 0xB0]
	0x037D8F48 LDP X24, X23, [X31 + 0xA0]
	0x037D8F4C LDP X26, X25, [X31 + 0x90]
	0x037D8F50 LDP X28, X27, [X31 + 0x80]
	0x037D8F54 LDP X29, X30, [X31 + 0x70]
	0x037D8F58 LDP D9, D8, [X31 + 0x60]
	0x037D8F5C ADD X31, X31, 0xD0
	0x037D8F60 RET
	0x037D8F64 BL 0x1C16F20
	0x037D8F68 BL 0x1C16F20
	0x037D8F6C BL 0x1C16F20
	0x037D8F70 B 0x37D8FA4
	0x037D8F74 B 0x37D8FA4
	0x037D8F78 B 0x37D8FA4
	0x037D8F7C B 0x37D8FA4
	0x037D8F80 B 0x37D8FA4
	0x037D8F84 B 0x37D8FA4
	0x037D8F88 B 0x37D8FA4
	0x037D8F8C B 0x37D8FA4
	0x037D8F90 B 0x37D8FA4
	0x037D8F94 B 0x37D8FA4
	0x037D8F98 B 0x37D8FA4
	0x037D8F9C B 0x37D9008
	0x037D8FA0 B 0x37D9008
	0x037D8FA4 CMP W1, 0x1
	0x037D8FA8 B.NE 0x37D8FD8
	0x037D8FAC BL 0x3EB1AD0
	0x037D8FB0 LDR X19, [X0]
	0x037D8FB4 BL 0x3EB1AE0
	0x037D8FB8 ADRP X8, 0x970000
	0x037D8FBC LDR X8, [X8 + 0xC28]
	0x037D8FC0 ADD X0, X31, 0x40
	0x037D8FC4 LDR X1, [X8]
	0x037D8FC8 BL 0x2BC4968
	0x037D8FCC CBZ X19, 0x37D8F40
	0x037D8FD0 MOV X0, X19
	0x037D8FD4 BL 0x1C16F18
	0x037D8FD8 STR X0, [X31 + 0x8]
	0x037D8FDC MOV X19, X31
	0x037D8FE0 B 0x37D8FE8
	0x037D8FE4 STR X0, [X31 + 0x8]
	0x037D8FE8 ADRP X8, 0x970000
	0x037D8FEC LDR X8, [X8 + 0xC28]
	0x037D8FF0 LDR X1, [X8]
	0x037D8FF4 ADD X0, X31, 0x40
	0x037D8FF8 BL 0x2BC4968
	0x037D8FFC CBZ X19, 0x37D9068
	0x037D9000 MOV X0, X19
	0x037D9004 BL 0x1C16F18
	0x037D9008 CMP W1, 0x1
	0x037D900C STR X0, [X31 + 0x8]
	0x037D9010 B.NE 0x37D9044
	0x037D9014 LDR X0, [X31 + 0x8]
	0x037D9018 BL 0x3EB1AD0
	0x037D901C LDR X20, [X0]
	0x037D9020 BL 0x3EB1AE0
	0x037D9024 ADRP X8, 0x96F000
	0x037D9028 LDR X8, [X8 + 0xC28]
	0x037D902C ADD X0, X31, 0x40
	0x037D9030 LDR X1, [X8]
	0x037D9034 BL 0x2BC4968
	0x037D9038 CBZ X20, 0x37D8CA0
	0x037D903C MOV X0, X20
	0x037D9040 BL 0x1C16F18
	0x037D9044 MOV X20, X31
	0x037D9048 B 0x37D9050
	0x037D904C STR X0, [X31 + 0x8]
	0x037D9050 ADRP X8, 0x96F000
	0x037D9054 LDR X8, [X8 + 0xC28]
	0x037D9058 LDR X1, [X8]
	0x037D905C ADD X0, X31, 0x40
	0x037D9060 BL 0x2BC4968
	0x037D9064 CBNZ X20, 0x37D9070
	0x037D9068 LDR X0, [X31 + 0x8]
	0x037D906C BL 0x1D2C690
	0x037D9070 MOV X0, X20
	0x037D9074 BL 0x1C16F18
	0x037D9078 BL 0x1990590
	0x037D907C LDRB W0, [X0 + 0x61]
	0x037D9080 RET
	0x037D9084 LDR W0, [X0 + 0x64]
	0x037D9088 RET
	0x037D908C LDP S0, S1, [X0 + 0x68]
	0x037D9090 LDP S2, S3, [X0 + 0x70]
	0x037D9094 RET
	0x037D9098 STR X30, [X31 - 0x20]!
	0x037D909C STP X20, X19, [X31 + 0x10]
	0x037D90A0 ADRP X20, 0xC08000
	0x037D90A4 ADRP X19, 0x96F000
	0x037D90A8 LDRB W8, [X20 + 0x284]
	0x037D90AC LDR X19, [X19 + 0x8F8]
	0x037D90B0 TBNZ X8, 0x0, 0x37D90C8
	0x037D90B4 ADRP X0, 0x96F000
	0x037D90B8 LDR X0, [X0 + 0x8F8]
	0x037D90BC BL 0x1C16CF4
	0x037D90C0 MOVZ W8, 0x1
	0x037D90C4 STRB W8, [X20 + 0x284]
	0x037D90C8 LDR X0, [X19]
	0x037D90CC LDR W8, [X0 + 0xE0]
	0x037D90D0 CBNZ W8, 0x37D90DC
	0x037D90D4 BL 0x1C16DFC
	0x037D90D8 LDR X0, [X19]
	0x037D90DC LDR X8, [X0 + 0xB8]
	0x037D90E0 LDP X20, X19, [X31 + 0x10]
	0x037D90E4 LDR W0, [X8]
	0x037D90E8 LDR X30, [X31], #0x20
	0x037D90EC RET
	0x037D90F0 LDR W0, [X0 + 0x24]
	0x037D90F4 RET
	0x037D90F8 LDRB W0, [X0 + 0x28]
	0x037D90FC RET
	0x037D9100 LDR W0, [X0 + 0x2C]
	0x037D9104 RET
	0x037D9108 STR X30, [X31 - 0x20]!
	0x037D910C STP X20, X19, [X31 + 0x10]
	0x037D9110 LDR W8, [X0 + 0x2C]
	0x037D9114 CMP W8, W1
	0x037D9118 B.EQ 0x37D914C
	0x037D911C LDRB W8, [X0 + 0x28]
	0x037D9120 MOV X19, X0
	0x037D9124 MOV W20, W1
	0x037D9128 CBZ W8, 0x37D9148
	0x037D912C MOV X0, X19
	0x037D9130 BL 0x37D9158
	0x037D9134 STR W20, [X19 + 0x2C]
	0x037D9138 MOV X0, X19
	0x037D913C LDP X20, X19, [X31 + 0x10]
	0x037D9140 LDR X30, [X31], #0x20
	0x037D9144 B 0x37D9230
	0x037D9148 STR W20, [X19 + 0x2C]
	0x037D914C LDP X20, X19, [X31 + 0x10]
	0x037D9150 LDR X30, [X31], #0x20
	0x037D9154 RET
	0x037D9158 STP X30, X21, [X31 - 0x20]!
	0x037D915C STP X20, X19, [X31 + 0x10]
	0x037D9160 LDR W8, [X0 + 0x2C]
	0x037D9164 MOV X19, X0
	0x037D9168 CMP W8, 0x1
	0x037D916C B.EQ 0x37D91C8
	0x037D9170 CBNZ W8, 0x37D921C
	0x037D9174 LDRB W8, [X19 + 0x79]
	0x037D9178 CBZ W8, 0x37D921C
	0x037D917C LDR X0, [X19 + 0x88]
	0x037D9180 BL 0x37D71F8
	0x037D9184 STRB W31, [X19 + 0x79]
	0x037D9188 ADRP X20, 0xC08000
	0x037D918C ADRP X21, 0x96F000
	0x037D9190 LDRB W8, [X20 + 0x2E1]
	0x037D9194 LDR X21, [X21 + 0x948]
	0x037D9198 TBNZ X8, 0x0, 0x37D91B0
	0x037D919C ADRP X0, 0x96F000
	0x037D91A0 LDR X0, [X0 + 0x948]
	0x037D91A4 BL 0x1C16CF4
	0x037D91A8 MOVZ W8, 0x1
	0x037D91AC STRB W8, [X20 + 0x2E1]
	0x037D91B0 LDR X8, [X21]
	0x037D91B4 LDR X8, [X8 + 0xB8]
	0x037D91B8 LDR W8, [X8 + 0x164]
	0x037D91BC SUB W0, W8, 0x1
	0x037D91C0 BL 0x37D710C
	0x037D91C4 B 0x37D921C
	0x037D91C8 LDRB W8, [X19 + 0x78]
	0x037D91CC CBZ W8, 0x37D9204
	0x037D91D0 ADD X20, X19, 0x40
	0x037D91D4 MOV X0, X20
	0x037D91D8 MOV X1, X31
	0x037D91DC BL 0x3745120
	0x037D91E0 CBZ X0, 0x37D9200
	0x037D91E4 MOV X0, X20
	0x037D91E8 MOV X1, X31
	0x037D91EC BL 0x3745120
	0x037D91F0 CBZ X0, 0x37D922C
	0x037D91F4 LDR X1, [X19 + 0x80]
	0x037D91F8 MOV X2, X31
	0x037D91FC BL 0x3734A5C
	0x037D9200 STRB W31, [X19 + 0x78]
	0x037D9204 ADD X0, X19, 0x40
	0x037D9208 MOV X1, X31
	0x037D920C BL 0x3745120
	0x037D9210 CBZ X0, 0x37D921C
	0x037D9214 MOV X1, X31
	0x037D9218 BL 0x3735150
	0x037D921C STRB W31, [X19 + 0x28]
	0x037D9220 LDP X20, X19, [X31 + 0x10]
	0x037D9224 LDP X30, X21, [X31], #0x20
	0x037D9228 RET
	0x037D922C BL 0x1C16F20
	0x037D9230 STR X30, [X31 - 0x30]!
	0x037D9234 STP X22, X21, [X31 + 0x10]
	0x037D9238 STP X20, X19, [X31 + 0x20]
	0x037D923C ADRP X20, 0xC08000
	0x037D9240 LDRB W8, [X20 + 0x28D]
	0x037D9244 MOV X19, X0
	0x037D9248 TBNZ X8, 0x0, 0x37D929C
	0x037D924C ADRP X0, 0x91E000
	0x037D9250 LDR X0, [X0 + 0x3D8]
	0x037D9254 BL 0x1C16CF4
	0x037D9258 ADRP X0, 0x96F000
	0x037D925C LDR X0, [X0 + 0x950]
	0x037D9260 BL 0x1C16CF4
	0x037D9264 ADRP X0, 0x91A000
	0x037D9268 LDR X0, [X0 + 0xA28]
	0x037D926C BL 0x1C16CF4
	0x037D9270 ADRP X0, 0x96F000
	0x037D9274 LDR X0, [X0 + 0xC60]
	0x037D9278 BL 0x1C16CF4
	0x037D927C ADRP X0, 0x96F000
	0x037D9280 LDR X0, [X0 + 0xC68]
	0x037D9284 BL 0x1C16CF4
	0x037D9288 ADRP X0, 0x96F000
	0x037D928C LDR X0, [X0 + 0xC70]
	0x037D9290 BL 0x1C16CF4
	0x037D9294 MOVZ W8, 0x1
	0x037D9298 STRB W8, [X20 + 0x28D]
	0x037D929C LDR W8, [X19 + 0x2C]
	0x037D92A0 CMP W8, 0x1
	0x037D92A4 B.EQ 0x37D9338
	0x037D92A8 CBNZ W8, 0x37D93FC
	0x037D92AC LDRB W8, [X19 + 0x79]
	0x037D92B0 CBNZ W8, 0x37D93FC
	0x037D92B4 LDR X20, [X19 + 0x88]
	0x037D92B8 CBNZ X20, 0x37D92EC
	0x037D92BC ADRP X8, 0x96F000
	0x037D92C0 LDR X8, [X8 + 0x950]
	0x037D92C4 LDR X0, [X8]
	0x037D92C8 BL 0x1C16F10
	0x037D92CC ADRP X8, 0x96F000
	0x037D92D0 LDR X8, [X8 + 0xC68]
	0x037D92D4 MOV X1, X19
	0x037D92D8 MOV X3, X31
	0x037D92DC MOV X20, X0
	0x037D92E0 LDR X2, [X8]
	0x037D92E4 BL 0x2A76784
	0x037D92E8 STR X20, [X19 + 0x88]
	0x037D92EC MOV X0, X20
	0x037D92F0 BL 0x37D6F38
	0x037D92F4 MOVZ W20, 0x1
	0x037D92F8 STRB W20, [X19 + 0x79]
	0x037D92FC ADRP X21, 0xC08000
	0x037D9300 ADRP X22, 0x96F000
	0x037D9304 LDRB W8, [X21 + 0x2E1]
	0x037D9308 LDR X22, [X22 + 0x948]
	0x037D930C TBNZ X8, 0x0, 0x37D9320
	0x037D9310 ADRP X0, 0x96F000
	0x037D9314 LDR X0, [X0 + 0x948]
	0x037D9318 BL 0x1C16CF4
	0x037D931C STRB W20, [X21 + 0x2E1]
	0x037D9320 LDR X8, [X22]
	0x037D9324 LDR X8, [X8 + 0xB8]
	0x037D9328 LDR W8, [X8 + 0x164]
	0x037D932C ADD W0, W8, 0x1
	0x037D9330 BL 0x37D710C
	0x037D9334 B 0x37D93FC
	0x037D9338 ADD X20, X19, 0x40
	0x037D933C MOV X0, X20
	0x037D9340 MOV X1, X31
	0x037D9344 BL 0x3745120
	0x037D9348 CBZ X0, 0x37D93CC
	0x037D934C LDRB W8, [X19 + 0x78]
	0x037D9350 CBNZ W8, 0x37D93B0
	0x037D9354 LDR X8, [X19 + 0x80]
	0x037D9358 CBNZ X8, 0x37D938C
	0x037D935C ADRP X8, 0x91E000
	0x037D9360 LDR X8, [X8 + 0x3D8]
	0x037D9364 LDR X0, [X8]
	0x037D9368 BL 0x1C16F10
	0x037D936C ADRP X8, 0x96F000
	0x037D9370 LDR X8, [X8 + 0xC60]
	0x037D9374 MOV X1, X19
	0x037D9378 MOV X3, X31
	0x037D937C MOV X21, X0
	0x037D9380 LDR X2, [X8]
	0x037D9384 BL 0x2A719B8
	0x037D9388 STR X21, [X19 + 0x80]
	0x037D938C MOV X0, X20
	0x037D9390 MOV X1, X31
	0x037D9394 BL 0x3745120
	0x037D9398 CBZ X0, 0x37D9414
	0x037D939C LDR X1, [X19 + 0x80]
	0x037D93A0 MOV X2, X31
	0x037D93A4 BL 0x3734A04
	0x037D93A8 MOVZ W8, 0x1
	0x037D93AC STRB W8, [X19 + 0x78]
	0x037D93B0 MOV X0, X20
	0x037D93B4 MOV X1, X31
	0x037D93B8 BL 0x3745120
	0x037D93BC CBZ X0, 0x37D9414
	0x037D93C0 MOV X1, X31
	0x037D93C4 BL 0x37350C8
	0x037D93C8 B 0x37D93FC
	0x037D93CC ADRP X8, 0x91A000
	0x037D93D0 LDR X8, [X8 + 0xA28]
	0x037D93D4 LDR X0, [X8]
	0x037D93D8 LDR W8, [X0 + 0xE0]
	0x037D93DC CBNZ W8, 0x37D93E4
	0x037D93E0 BL 0x1C16DFC
	0x037D93E4 ADRP X8, 0x96F000
	0x037D93E8 LDR X8, [X8 + 0xC70]
	0x037D93EC MOV X1, X19
	0x037D93F0 MOV X2, X31
	0x037D93F4 LDR X0, [X8]
	0x037D93F8 BL 0x3C065A4
	0x037D93FC MOVZ W8, 0x1
	0x037D9400 STRB W8, [X19 + 0x28]

ISIL:
	001 Subtract X31, X31, 400
	002 Move [X31+320], X29
	003 Move [X31+328], X30
	004 Move [X31+336], X26
	005 Move [X31+344], X25
	006 Move [X31+352], X24
	007 Move [X31+360], X23
	008 Move [X31+368], X22
	009 Move [X31+376], X21
	010 Move [X31+384], X20
	011 Move [X31+392], X19
	012 Move X22, 0xC0A000
	013 Move X21, 0x971000
	014 Move W8, [X22+633]
	015 Move X21, [X21+2296]
	016 Move X19, X1
	017 Move X20, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {63}
	022 Move X0, 0x91C000
	023 Move X0, [X0+3584]
	024 Call 0x1C17CF4
	025 Move X0, 0x96F000
	026 Move X0, [X0+1888]
	027 Call 0x1C17CF4
	028 Move X0, 0x96F000
	029 Move X0, [X0+1928]
	030 Call 0x1C17CF4
	031 Move X0, 0x971000
	032 Move X0, [X0+3048]
	033 Call 0x1C17CF4
	034 Move X0, 0x971000
	035 Move X0, [X0+3056]
	036 Call 0x1C17CF4
	037 Move X0, 0x96F000
	038 Move X0, [X0+1896]
	039 Call 0x1C17CF4
	040 Move X0, 0x971000
	041 Move X0, [X0+2328]
	042 Call 0x1C17CF4
	043 Move X0, 0x971000
	044 Move X0, [X0+3064]
	045 Call 0x1C17CF4
	046 Move X0, 0x91C000
	047 Move X0, [X0+1432]
	048 Call 0x1C17CF4
	049 Move X0, 0x971000
	050 Move X0, [X0+2296]
	051 Call 0x1C17CF4
	052 Move X0, 0x96E000
	053 Move X0, [X0+112]
	054 Call 0x1C17CF4
	055 Move X0, 0x971000
	056 Move X0, [X0+3040]
	057 Call 0x1C17CF4
	058 Move X0, 0x96E000
	059 Move X0, [X0+3608]
	060 Call 0x1C17CF4
	061 Move W8, 1
	062 Move [X22+633], W8
	063 Move X0, [X21]
	064 NotImplemented "Instruction MOVI not yet implemented."
	065 Move [X31+224], X31
	066 Move [X31+232], X31
	067 Move [X31+200], X31
	068 Move [X31+208], X31
	069 Move [X31+216], X31
	070 Move [X31+240], V0
	071 Move [X31+248], V0
	072 Move [X31+160], V0
	073 Move [X31+168], V0
	074 Move [X31+128], V0
	075 Move [X31+136], V0
	076 Move [X31+96], V0
	077 Move [X31+104], V0
	078 Move [X31+5], V0
	079 Move W8, [X0+224]
	080 Compare W8, 0
	081 JumpIfNotEqual {83}
	082 Call 0x1C17DFC
	083 Call PlayerInput.get_isSinglePlayer
	084 Move TEMP, X0
	085 And TEMP, TEMP, 1
	086 Compare TEMP, 1
	087 JumpIfNotEqual {322}
	088 Move W8, [X20+88]
	089 Compare W8, 0
	090 JumpIfNotEqual {322}
	091 Move X0, [X21]
	092 Move W8, [X0+224]
	093 Compare W8, 0
	094 JumpIfNotEqual {96}
	095 Call 0x1C17DFC
	096 Call PlayerInput.get_all
	097 Move X8, 0x971000
	098 Move X8, [X8+3040]
	099 Move [X31+272], X0
	100 Move [X31+280], X1
	101 Add X0, X31, 272
	102 Move W1, W31
	103 Move X2, [X8]
	104 Call ReadOnlyArray`1<Object>.get_Item, X0, X1
	105 Compare X0, 0
	106 JumpIfEqual {334}
	107 Move X25, 0x91C000
	108 Move X25, [X25+1432]
	109 Move X20, X0
	110 Move X21, [X20+32]
	111 Move X0, [X25]
	112 Move W8, [X0+224]
	113 Compare W8, 0
	114 JumpIfNotEqual {116}
	115 Call 0x1C17DFC
	116 Move X0, X21
	117 Move X1, X31
	118 Move X2, X31
	119 Call Object.op_Equality, X0, X1
	120 Move TEMP, X0
	121 And TEMP, TEMP, 1
	122 Compare TEMP, 1
	123 JumpIfEqual {322}
	124 Compare X19, 0
	125 JumpIfEqual {334}
	126 Move X21, [X19+120]
	127 Move X0, X31
	128 Call InputActionRebindingExtensions.DeferBindingResolution
	129 Move X19, X0
	130 Add X8, X31, 288
	131 Call InputUser.GetUnpairedInputDevices
	132 Move V0, [X31+288]
	133 Move V1, [X31+304]
	134 Move [X31+240], V0
	135 Move [X31+248], V1
	136 Move W8, [X31+240]
	137 NotImplemented "Instruction CMP not yet implemented."
	138 Move X8, 0x971000
	139 Move X8, [X8+3048]
	140 Move X2, [X8]
	141 Add X0, X31, 240
	142 Move X1, X21
	143 Call 0x2DFC45C, X0, X1
	144 Move X8, 0x971000
	145 Move X8, [X8+3056]
	146 Move W2, W0
	147 Move X3, [X8]
	148 Add X0, X31, 240
	149 Move W1, W31
	150 Call 0x2DFC700, X0, X1, X2
	151 Move X0, X20
	152 Call PlayerInput.get_devices, X0
	153 Move X8, X1
	154 ShiftRight X8, 32
	155 And X8, X8, 0x7FFFFFFF
	156 NotImplemented "Instruction CMP not yet implemented."
	157 Move [X31+224], X0
	158 Move [X31+232], X1
	159 Move X23, 0x96D000
	160 Move X24, 0x96E000
	161 Move X23, [X23+3608]
	162 Move X24, [X24+1888]
	163 Move W22, W31
	164 Move X2, [X23]
	165 Add X0, X31, 224
	166 Move W1, W22
	167 Call ReadOnlyArray`1<Object>.get_Item, X0, X1
	168 Move X1, X0
	169 Move X2, [X24]
	170 Add X0, X31, 240
	171 Call 0x2DFBCEC, X0, X1
	172 Move W8, [X31+236]
	173 Add W22, W22, 1
	174 NotImplemented "Instruction CMP not yet implemented."
	175 Move V0, [X31+240]
	176 Move V1, [X31+256]
	177 Move [X31+32], V0
	178 Move [X31+40], V1
	179 Move X0, [X20+32]
	180 Compare X0, 0
	181 JumpIfEqual {339}
	182 Move X1, X31
	183 Call InputActionAsset.get_controlSchemes, X0
	184 Move X8, 0x970000
	185 Move X8, [X8+3064]
	186 Move V0, [X31+32]
	187 Move V1, [X31+48]
	188 Move X2, X0
	189 Move X5, X1
	190 Move X7, [X8]
	191 Move [X31+288], V0
	192 Move [X31+296], V1
	193 Add X0, X31, 288
	194 Add X3, X31, 200
	195 Add X4, X31, 112
	196 Move X1, X2
	197 Move X2, X5
	198 Move X5, X21
	199 Move W6, W31
	200 Call 0x2201524, X0, X1, X2, X3, X4, X5
	201 Move TEMP, X0
	202 And TEMP, TEMP, 1
	203 Compare TEMP, 1
	204 JumpIfNotEqual {286}
	205 Move X21, X20
	206 Add X21, X21, 160
	207 Move W8, [X21]
	208 Move [X31+72], W8
	209 Add X0, X31, 72
	210 Call InputUser.get_valid, X0
	211 Move W22, W0
	212 Move TEMP, X0
	213 And TEMP, TEMP, 1
	214 Compare TEMP, 1
	215 JumpIfNotEqual {220}
	216 Move W8, [X21]
	217 Move [X31+72], W8
	218 Add X0, X31, 72
	219 Call InputUser.UnpairDevices, X0
	220 Add X8, X31, 288
	221 Add X0, X31, 112
	222 Move X1, X31
	223 Call MatchResult.get_devices, X0
	224 Move V0, [X31+288]
	225 Move V1, [X31+304]
	226 Move [X31+80], V0
	227 Move [X31+88], V1
	228 Move W8, [X31+80]
	229 NotImplemented "Instruction CMP not yet implemented."
	230 Move X26, 0x970000
	231 Move X26, [X26+2328]
	232 Move W23, W31
	233 Move X2, [X26]
	234 Add X0, X31, 80
	235 Move W1, W23
	236 Call 0x2DFB48C, X0, X1
	237 Move W1, [X21]
	238 Move W2, W31
	239 Call InputUser.PerformPairingWithDevice, X0, X1, X2
	240 Move [X21], W0
	241 Move TEMP, X22
	242 And TEMP, TEMP, 1
	243 Compare TEMP, 1
	244 JumpIfEqual {266}
	245 Move X0, X20
	246 Call PlayerInput.get_actions, X0
	247 Move X24, X0
	248 Move X0, [X25]
	249 Move W8, [X0+224]
	250 Compare W8, 0
	251 JumpIfNotEqual {253}
	252 Call 0x1C17DFC
	253 Move X0, X24
	254 Move X1, X31
	255 Move X2, X31
	256 Call Object.op_Inequality, X0, X1
	257 Move TEMP, X0
	258 And TEMP, TEMP, 1
	259 Compare TEMP, 1
	260 JumpIfNotEqual {266}
	261 Move X0, X20
	262 Call PlayerInput.get_actions, X0
	263 Move X1, X0
	264 Move X0, X21
	265 Call InputUser.AssociateActionsWithUser, X0, X1
	266 Move W8, [X31+80]
	267 Add W23, W23, 1
	268 NotImplemented "Instruction CMP not yet implemented."
	269 Move W8, [X21]
	270 NotImplemented "Instruction LDUR not yet implemented."
	271 Move X9, [X31+216]
	272 Move [X31+72], W8
	273 Move [X31], V0
	274 Move [X31+16], X9
	275 Add X0, X31, 72
	276 Add X1, X31, 0
	277 Call InputUser.ActivateControlScheme, X0, X1
	278 Move X22, X31
	279 Add X0, X31, 112
	280 Move X1, X31
	281 Call MatchResult.Dispose, X0
	282 Compare X22, 0
	283 JumpIfEqual {287}
	284 Move X0, X22
	285 Call 0x1C17F18
	286 Move X22, X31
	287 Move X8, 0x96E000
	288 Move X8, [X8+1928]
	289 Move X1, [X8]
	290 Add X0, X31, 240
	291 Call 0x2DFC98C, X0
	292 Compare X22, 0
	293 JumpIfNotEqual {337}
	294 Move X21, X31
	295 Compare X19, 0
	296 JumpIfEqual {320}
	297 Move X10, 0x91B000
	298 Move X8, [X19]
	299 Move X10, [X10+3584]
	300 NotImplemented "Instruction LDRH not yet implemented."
	301 Move X1, [X10]
	302 Compare X9, 0
	303 JumpIfEqual {310}
	304 Move X10, [X8+176]
	305 Add X10, X10, 8
	306 NotImplemented "Instruction LDUR not yet implemented."
	307 NotImplemented "Instruction CMP not yet implemented."
	308 Subtract X9, X9, 1
	309 Add X10, X10, 16
	310 Move X0, X19
	311 Move W2, W31
	312 Call 0x1C5D788
	313 NotImplemented "Instruction LDRSW not yet implemented."
	314 Add X8, X8, X9
	315 Add X0, X8, 312
	316 Move X8, [X0]
	317 Move X1, [X0+8]
	318 Move X0, X19
	319 NotImplemented "Instruction BLR not yet implemented."
	320 Compare X21, 0
	321 JumpIfNotEqual {335}
	322 Move X20, [X31+384]
	323 Move X19, [X31+392]
	324 Move X22, [X31+368]
	325 Move X21, [X31+376]
	326 Move X24, [X31+352]
	327 Move X23, [X31+360]
	328 Move X26, [X31+336]
	329 Move X25, [X31+344]
	330 Move X29, [X31+320]
	331 Move X30, [X31+328]
	332 Add X31, X31, 400
	333 Return 
	334 Call 0x1C17F20
	335 Move X0, X21
	336 Call 0x1C17F18
	337 Move X0, X22
	338 Call 0x1C17F18
	339 Call 0x1C17F20
	340 Move X21, X1
	341 Move X20, X0
	342 Move X21, X1
	343 Move X20, X0
	344 NotImplemented "Instruction CMP not yet implemented."
	345 Move X0, X20
	346 Call 0x3EB2AD0
	347 Move X22, [X0]
	348 Call 0x3EB2AE0
	349 Move X22, X31
	350 Add X0, X31, 112
	351 Move X1, X31
	352 Call MatchResult.Dispose, X0
	353 Compare X22, 0
	354 JumpIfEqual {361}
	355 Move X0, X22
	356 Call 0x1C17F18
	357 Move X21, X1
	358 Move X20, X0
	359 Move X21, X1
	360 Move X20, X0
	361 NotImplemented "Instruction CMP not yet implemented."
	362 Move X0, X20
	363 Call 0x3EB2AD0
	364 Move X22, [X0]
	365 Call 0x3EB2AE0
	366 Move X22, X31
	367 Move X8, 0x96E000
	368 Move X8, [X8+1928]
	369 Move X1, [X8]
	370 Add X0, X31, 240
	371 Call 0x2DFC98C, X0
	372 Compare X22, 0
	373 JumpIfNotEqual {380}
	374 NotImplemented "Instruction CMP not yet implemented."
	375 Move X0, X20
	376 Call 0x3EB2AD0
	377 Move X21, [X0]
	378 Call 0x3EB2AE0
	379 Move X21, X31
	380 Move X0, X22
	381 Call 0x1C17F18
	382 Move X21, X1
	383 Move X20, X0
	384 Move X20, X0
	385 Compare X19, 0
	386 JumpIfEqual {410}
	387 Move X10, 0x91B000
	388 Move X8, [X19]
	389 Move X10, [X10+3584]
	390 NotImplemented "Instruction LDRH not yet implemented."
	391 Move X1, [X10]
	392 Compare X9, 0
	393 JumpIfEqual {400}
	394 Move X10, [X8+176]
	395 Add X10, X10, 8
	396 NotImplemented "Instruction LDUR not yet implemented."
	397 NotImplemented "Instruction CMP not yet implemented."
	398 Subtract X9, X9, 1
	399 Add X10, X10, 16
	400 Move X0, X19
	401 Move W2, W31
	402 Call 0x1C5D788
	403 NotImplemented "Instruction LDRSW not yet implemented."
	404 Add X8, X8, X9
	405 Add X0, X8, 312
	406 Move X8, [X0]
	407 Move X1, [X0+8]
	408 Move X0, X19
	409 NotImplemented "Instruction BLR not yet implemented."
	410 Compare X21, 0
	411 JumpIfNotEqual {414}
	412 Move X0, X20
	413 Call 0x1D2D690
	414 Move X0, X21
	415 Call 0x1C17F18
	416 Call 0x1991590

Method: System.Void OnDeviceChange(UnityEngine.InputSystem.InputDevice device, UnityEngine.InputSystem.InputDeviceChange change)

Disassembly:
	0x037D9404 LDP X20, X19, [X31 + 0x20]
	0x037D9408 LDP X22, X21, [X31 + 0x10]
	0x037D940C LDR X30, [X31], #0x30
	0x037D9410 RET
	0x037D9414 BL 0x1C16F20
	0x037D9418 LDR X9, [X0 + 0x50]
	0x037D941C LDR V0, [X0 + 0x4]
	0x037D9420 STR X9, [X8 + 0x10]
	0x037D9424 STR V0, [X8]
	0x037D9428 RET
	0x037D942C SUB X31, X31, 0x60
	0x037D9430 STP X30, X21, [X31 + 0x40]
	0x037D9434 STP X20, X19, [X31 + 0x50]
	0x037D9438 LDR X8, [X0 + 0x50]
	0x037D943C LDR V0, [X0 + 0x4]
	0x037D9440 MOV X19, X1
	0x037D9444 MOV X20, X0
	0x037D9448 STR X8, [X31 + 0x30]
	0x037D944C STR V0, [X31 + 0x2]
	0x037D9450 LDR X8, [X1 + 0x10]
	0x037D9454 LDR V0, [X1]
	0x037D9458 ADD X0, X31, 0x20
	0x037D945C ADD X1, X31, 0x0
	0x037D9460 MOV X2, X31
	0x037D9464 STR X8, [X31 + 0x10]
	0x037D9468 STR V0, [X31]
	0x037D946C BL 0x3745538
	0x037D9470 TBNZ X0, 0x0, 0x37D94C0
	0x037D9474 LDRB W8, [X20 + 0x28]
	0x037D9478 ADD X21, X20, 0x40
	0x037D947C CBZ W8, 0x37D94B0
	0x037D9480 LDR W8, [X20 + 0x2C]
	0x037D9484 CMP W8, 0x1
	0x037D9488 B.NE 0x37D94B0
	0x037D948C MOV X0, X20
	0x037D9490 BL 0x37D9158
	0x037D9494 LDR X8, [X19 + 0x10]
	0x037D9498 LDR V0, [X19]
	0x037D949C MOV X0, X20
	0x037D94A0 STR X8, [X21 + 0x10]
	0x037D94A4 STR V0, [X21]
	0x037D94A8 BL 0x37D9230
	0x037D94AC B 0x37D94C0
	0x037D94B0 LDR X8, [X19 + 0x10]
	0x037D94B4 LDR V0, [X19]
	0x037D94B8 STR X8, [X21 + 0x10]
	0x037D94BC STR V0, [X21]
	0x037D94C0 LDP X20, X19, [X31 + 0x50]
	0x037D94C4 LDP X30, X21, [X31 + 0x40]
	0x037D94C8 ADD X31, X31, 0x60
	0x037D94CC RET
	0x037D94D0 LDR W0, [X0 + 0x20]
	0x037D94D4 RET
	0x037D94D8 STR W1, [X0 + 0x20]
	0x037D94DC RET
	0x037D94E0 STR X30, [X31 - 0x20]!
	0x037D94E4 STP X20, X19, [X31 + 0x10]
	0x037D94E8 ADRP X20, 0xC08000
	0x037D94EC LDRB W8, [X20 + 0x285]
	0x037D94F0 MOV X19, X0
	0x037D94F4 TBNZ X8, 0x0, 0x37D950C
	0x037D94F8 ADRP X0, 0x96F000
	0x037D94FC LDR X0, [X0 + 0xC78]
	0x037D9500 BL 0x1C16CF4
	0x037D9504 MOVZ W8, 0x1
	0x037D9508 STRB W8, [X20 + 0x285]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xC09000
	007 Move W8, [X22+634]
	008 Move W21, W2
	009 Move X19, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0x91B000
	016 Move X0, [X0+1432]
	017 Call 0x1C17CF4
	018 Move X0, 0x970000
	019 Move X0, [X0+2296]
	020 Call 0x1C17CF4
	021 Move X0, 0x96D000
	022 Move X0, [X0+2536]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X22+634], W8
	026 Compare W21, 0
	027 JumpIfNotEqual {89}
	028 Move X8, 0x970000
	029 Move X8, [X8+2296]
	030 Move X0, [X8]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Call PlayerInput.get_isSinglePlayer
	036 Move TEMP, X0
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfNotEqual {89}
	040 Move X8, 0x91B000
	041 Move X8, [X8+1432]
	042 Move X21, [X20+32]
	043 Move X0, [X8]
	044 Move W8, [X0+224]
	045 Compare W8, 0
	046 JumpIfNotEqual {48}
	047 Call 0x1C17DFC
	048 Move X0, X21
	049 Move X1, X31
	050 Move X2, X31
	051 Call Object.op_Inequality, X0, X1
	052 Move TEMP, X0
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfNotEqual {89}
	056 Move X0, [X20+32]
	057 Compare X0, 0
	058 JumpIfEqual {95}
	059 Move X1, X31
	060 Call InputActionAsset.get_controlSchemes, X0
	061 Move X8, X1
	062 ShiftRight X8, 32
	063 And X8, X8, 0x7FFFFFFF
	064 Compare X8, 0
	065 JumpIfNotEqual {89}
	066 Move X0, X20
	067 Move X1, X19
	068 Call PlayerInput.HaveBindingForDevice, X0, X1
	069 Move TEMP, X0
	070 And TEMP, TEMP, 1
	071 Compare TEMP, 1
	072 JumpIfNotEqual {89}
	073 Add X0, X20, 160
	074 Call InputUser.get_valid, X0
	075 Move TEMP, X0
	076 And TEMP, TEMP, 1
	077 Compare TEMP, 1
	078 JumpIfNotEqual {89}
	079 Move W1, [X20+160]
	080 Move X0, X19
	081 Move X20, [X31+32]
	082 Move X19, [X31+40]
	083 Move X22, [X31+16]
	084 Move X21, [X31+24]
	085 Move W2, W31
	086 Move X30, [X31+48]
	087 Call InputUser.PerformPairingWithDevice, X0, X1, X2
	088 Return 
	089 Move X20, [X31+32]
	090 Move X19, [X31+40]
	091 Move X22, [X31+16]
	092 Move X21, [X31+24]
	093 Move X30, [X31+48]
	094 Return 
	095 Call 0x1C17F20

Method: System.Void SwitchControlSchemeInternal(ref UnityEngine.InputSystem.InputControlScheme controlScheme, UnityEngine.InputSystem.InputDevice[] devices)

Disassembly:
	0x037D4F84 ADRP X0, 0x962000
	0x037D4F88 LDR X0, [X0 + 0xAF8]
	0x037D4F8C BL 0x1C16CF4
	0x037D4F90 ADRP X0, 0x920000
	0x037D4F94 LDR X0, [X0 + 0x6C0]
	0x037D4F98 BL 0x1C16CF4
	0x037D4F9C ADRP X0, 0x920000
	0x037D4FA0 LDR X0, [X0 + 0x6C8]
	0x037D4FA4 BL 0x1C16CF4
	0x037D4FA8 ADRP X0, 0x920000
	0x037D4FAC LDR X0, [X0 + 0x6D0]
	0x037D4FB0 BL 0x1C16CF4
	0x037D4FB4 ADRP X0, 0x91F000
	0x037D4FB8 LDR X0, [X0 + 0xE00]
	0x037D4FBC BL 0x1C16CF4
	0x037D4FC0 ADRP X0, 0x971000
	0x037D4FC4 LDR X0, [X0 + 0x490]
	0x037D4FC8 BL 0x1C16CF4
	0x037D4FCC ADRP X0, 0x91F000
	0x037D4FD0 LDR X0, [X0 + 0xE18]
	0x037D4FD4 BL 0x1C16CF4
	0x037D4FD8 ADRP X0, 0x91F000
	0x037D4FDC LDR X0, [X0 + 0x598]
	0x037D4FE0 BL 0x1C16CF4
	0x037D4FE4 ADRP X0, 0x974000
	0x037D4FE8 LDR X0, [X0 + 0xA88]
	0x037D4FEC BL 0x1C16CF4
	0x037D4FF0 ADRP X0, 0x91F000
	0x037D4FF4 LDR X0, [X0 + 0x988]
	0x037D4FF8 BL 0x1C16CF4
	0x037D4FFC MOVZ W8, 0x1
	0x037D5000 STRB W8, [X21 + 0x268]
	0x037D5004 LDR X0, [X19]
	0x037D5008 LDR X19, [X20 + 0x20]
	0x037D500C LDR W8, [X0 + 0xE0]
	0x037D5010 CBNZ W8, 0x37D5018
	0x037D5014 BL 0x1C16DFC
	0x037D5018 MOV X0, X19
	0x037D501C MOV X1, X31
	0x037D5020 MOV X2, X31
	0x037D5024 BL 0x3C3883C
	0x037D5028 TBNZ X0, 0x0, 0x37D5228
	0x037D502C LDR X0, [X20 + 0x98]
	0x037D5030 CBZ X0, 0x37D5048
	0x037D5034 ADRP X8, 0x961000
	0x037D5038 LDR X8, [X8 + 0xAF8]
	0x037D503C LDR X1, [X8]
	0x037D5040 BL 0x2AA5220
	0x037D5044 B 0x37D5070
	0x037D5048 ADRP X8, 0x91F000
	0x037D504C LDR X8, [X8 + 0x6D0]
	0x037D5050 LDR X0, [X8]
	0x037D5054 BL 0x1C16F10
	0x037D5058 ADRP X8, 0x91F000
	0x037D505C LDR X8, [X8 + 0x6C0]
	0x037D5060 MOV X19, X0
	0x037D5064 LDR X1, [X8]
	0x037D5068 BL 0x2AA4804
	0x037D506C STR X19, [X20 + 0x98]
	0x037D5070 LDR X0, [X20 + 0x20]
	0x037D5074 CBZ X0, 0x37D524C
	0x037D5078 MOV X1, X31
	0x037D507C BL 0x3738538
	0x037D5080 MOV X19, X0
	0x037D5084 CBZ X0, 0x37D5250
	0x037D5088 ADRP X23, 0x91E000
	0x037D508C ADRP X24, 0x970000
	0x037D5090 ADRP X25, 0x91E000
	0x037D5094 ADRP X26, 0x973000
	0x037D5098 ADRP X27, 0x91F000
	0x037D509C LDR X23, [X23 + 0xE18]
	0x037D50A0 LDR X24, [X24 + 0x490]
	0x037D50A4 LDR X25, [X25 + 0x988]
	0x037D50A8 LDR X26, [X26 + 0xA88]
	0x037D50AC LDR X27, [X27 + 0x6C8]
	0x037D50B0 LDR X8, [X19]
	0x037D50B4 LDR X1, [X23]
	0x037D50B8 LDRH W9, [X8 + 0x12E]
	0x037D50BC CBZ X9, 0x37D50E0
	0x037D50C0 LDR X10, [X8 + 0xB0]
	0x037D50C4 ADD X10, X10, 0x8
	0x037D50C8 LDUR X11, [X10 - 0x8]
	0x037D50CC CMP X11, X1
	0x037D50D0 B.EQ 0x37D50F0
	0x037D50D4 SUBS X9, X9, 0x1
	0x037D50D8 ADD X10, X10, 0x10
	0x037D50DC B.NE 0x37D50C8
	0x037D50E0 MOV X0, X19
	0x037D50E4 MOV W2, W31
	0x037D50E8 BL 0x1C5C788
	0x037D50EC B 0x37D50FC
	0x037D50F0 LDRSW X9, [X10]
	0x037D50F4 ADD X8, X8, X9, 0x4, LSL
	0x037D50F8 ADD X0, X8, 0x138
	0x037D50FC LDP X8, X1, [X0]
	0x037D5100 MOV X0, X19
	0x037D5104 BLR X8
	0x037D5108 TBZ X0, 0x0, 0x37D51BC
	0x037D510C LDR X8, [X19]
	0x037D5110 LDR X1, [X24]
	0x037D5114 LDRH W9, [X8 + 0x12E]
	0x037D5118 CBZ X9, 0x37D513C
	0x037D511C LDR X10, [X8 + 0xB0]
	0x037D5120 ADD X10, X10, 0x8
	0x037D5124 LDUR X11, [X10 - 0x8]
	0x037D5128 CMP X11, X1
	0x037D512C B.EQ 0x37D514C
	0x037D5130 SUBS X9, X9, 0x1
	0x037D5134 ADD X10, X10, 0x10
	0x037D5138 B.NE 0x37D5124
	0x037D513C MOV X0, X19
	0x037D5140 MOV W2, W31
	0x037D5144 BL 0x1C5C788
	0x037D5148 B 0x37D5158
	0x037D514C LDRSW X9, [X10]
	0x037D5150 ADD X8, X8, X9, 0x4, LSL
	0x037D5154 ADD X0, X8, 0x138
	0x037D5158 LDP X8, X1, [X0]
	0x037D515C MOV X0, X19
	0x037D5160 BLR X8
	0x037D5164 MOV X21, X0
	0x037D5168 CBZ X0, 0x37D5244
	0x037D516C MOV X0, X21
	0x037D5170 MOV X1, X31
	0x037D5174 BL 0x3734224
	0x037D5178 LDR X0, [X21 + 0x10]
	0x037D517C LDR X1, [X25]
	0x037D5180 MOV X2, X31
	0x037D5184 BL 0x375EED4
	0x037D5188 MOV X1, X0
	0x037D518C LDR X22, [X20 + 0x98]
	0x037D5190 LDR X21, [X21 + 0x28]
	0x037D5194 LDR X0, [X26]
	0x037D5198 MOV X2, X31
	0x037D519C BL 0x321B938
	0x037D51A0 CBZ X22, 0x37D5248
	0x037D51A4 LDR X3, [X27]
	0x037D51A8 MOV X2, X0
	0x037D51AC MOV X0, X22
	0x037D51B0 MOV X1, X21
	0x037D51B4 BL 0x2AA5084
	0x037D51B8 B 0x37D50B0
	0x037D51BC MOV X20, X31
	0x037D51C0 CBZ X19, 0x37D5224
	0x037D51C4 ADRP X10, 0x91E000
	0x037D51C8 LDR X8, [X19]
	0x037D51CC LDR X10, [X10 + 0xE00]
	0x037D51D0 LDRH W9, [X8 + 0x12E]
	0x037D51D4 LDR X1, [X10]
	0x037D51D8 CBZ X9, 0x37D51FC
	0x037D51DC LDR X10, [X8 + 0xB0]
	0x037D51E0 ADD X10, X10, 0x8
	0x037D51E4 LDUR X11, [X10 - 0x8]
	0x037D51E8 CMP X11, X1
	0x037D51EC B.EQ 0x37D520C
	0x037D51F0 SUBS X9, X9, 0x1
	0x037D51F4 ADD X10, X10, 0x10
	0x037D51F8 B.NE 0x37D51E4
	0x037D51FC MOV X0, X19
	0x037D5200 MOV W2, W31
	0x037D5204 BL 0x1C5C788
	0x037D5208 B 0x37D5218
	0x037D520C LDRSW X9, [X10]
	0x037D5210 ADD X8, X8, X9, 0x4, LSL
	0x037D5214 ADD X0, X8, 0x138
	0x037D5218 LDP X8, X1, [X0]
	0x037D521C MOV X0, X19
	0x037D5220 BLR X8
	0x037D5224 CBNZ X20, 0x37D5254
	0x037D5228 LDP X20, X19, [X31 + 0x50]
	0x037D522C LDP X22, X21, [X31 + 0x40]
	0x037D5230 LDP X24, X23, [X31 + 0x30]
	0x037D5234 LDP X26, X25, [X31 + 0x20]
	0x037D5238 LDP X30, X27, [X31 + 0x10]
	0x037D523C ADD X31, X31, 0x60
	0x037D5240 RET
	0x037D5244 BL 0x1C16F20
	0x037D5248 BL 0x1C16F20
	0x037D524C BL 0x1C16F20
	0x037D5250 BL 0x1C16F20
	0x037D5254 MOV X0, X20
	0x037D5258 BL 0x1C16F18
	0x037D525C B 0x37D5278
	0x037D5260 B 0x37D5278
	0x037D5264 B 0x37D5278
	0x037D5268 B 0x37D5278
	0x037D526C B 0x37D5278
	0x037D5270 B 0x37D5278
	0x037D5274 B 0x37D5278
	0x037D5278 CMP W1, 0x1
	0x037D527C B.NE 0x37D5290
	0x037D5280 BL 0x3EB1AD0
	0x037D5284 LDR X20, [X0]
	0x037D5288 BL 0x3EB1AE0
	0x037D528C B 0x37D51C0
	0x037D5290 STR X0, [X31 + 0x8]
	0x037D5294 MOV X20, X31
	0x037D5298 B 0x37D52A0
	0x037D529C STR X0, [X31 + 0x8]
	0x037D52A0 CBZ X19, 0x37D5304
	0x037D52A4 ADRP X10, 0x91E000
	0x037D52A8 LDR X8, [X19]
	0x037D52AC LDR X10, [X10 + 0xE00]
	0x037D52B0 LDRH W9, [X8 + 0x12E]
	0x037D52B4 LDR X1, [X10]
	0x037D52B8 CBZ X9, 0x37D52DC
	0x037D52BC LDR X10, [X8 + 0xB0]
	0x037D52C0 ADD X10, X10, 0x8
	0x037D52C4 LDUR X11, [X10 - 0x8]
	0x037D52C8 CMP X11, X1
	0x037D52CC B.EQ 0x37D52EC
	0x037D52D0 SUBS X9, X9, 0x1
	0x037D52D4 ADD X10, X10, 0x10
	0x037D52D8 B.NE 0x37D52C4
	0x037D52DC MOV X0, X19
	0x037D52E0 MOV W2, W31
	0x037D52E4 BL 0x1C5C788
	0x037D52E8 B 0x37D52F8
	0x037D52EC LDRSW X9, [X10]
	0x037D52F0 ADD X8, X8, X9, 0x4, LSL
	0x037D52F4 ADD X0, X8, 0x138
	0x037D52F8 LDP X8, X1, [X0]
	0x037D52FC MOV X0, X19
	0x037D5300 BLR X8
	0x037D5304 CBNZ X20, 0x37D5310
	0x037D5308 LDR X0, [X31 + 0x8]
	0x037D530C BL 0x1D2C690
	0x037D5310 MOV X0, X20
	0x037D5314 BL 0x1C16F18
	0x037D5318 BL 0x1990590
	0x037D531C SUB X31, X31, 0x60
	0x037D5320 STP X30, X23, [X31 + 0x30]
	0x037D5324 STP X22, X21, [X31 + 0x40]
	0x037D5328 STP X20, X19, [X31 + 0x50]
	0x037D532C ADRP X20, 0xC0C000
	0x037D5330 LDRB W8, [X20 + 0x266]
	0x037D5334 MOV X19, X0
	0x037D5338 TBNZ X8, 0x0, 0x37D5374
	0x037D533C ADRP X0, 0x970000
	0x037D5340 LDR X0, [X0 + 0x18]
	0x037D5344 BL 0x1C16CF4
	0x037D5348 ADRP X0, 0x970000
	0x037D534C LDR X0, [X0 + 0x20]
	0x037D5350 BL 0x1C16CF4
	0x037D5354 ADRP X0, 0x970000
	0x037D5358 LDR X0, [X0 + 0x28]
	0x037D535C BL 0x1C16CF4
	0x037D5360 ADRP X0, 0x970000
	0x037D5364 LDR X0, [X0 + 0x10]
	0x037D5368 BL 0x1C16CF4
	0x037D536C MOVZ W8, 0x1

ISIL:
	001 Subtract X31, X31, 288
	002 Move [X31+192], X29
	003 Move [X31+208], X30
	004 Move [X31+216], X27
	005 Move [X31+224], X26
	006 Move [X31+232], X25
	007 Move [X31+240], X24
	008 Move [X31+248], X23
	009 Move [X31+256], X22
	010 Move [X31+264], X21
	011 Move [X31+272], X20
	012 Move [X31+280], X19
	013 Move X19, 0xC0E000
	014 Move W8, [X19+635]
	015 Move X22, X2
	016 Move X20, X1
	017 Move X21, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {45}
	022 Move X0, 0x975000
	023 Move X0, [X0+2616]
	024 Call 0x1C17CF4
	025 Move X0, 0x920000
	026 Move X0, [X0+3584]
	027 Call 0x1C17CF4
	028 Move X0, 0x972000
	029 Move X0, [X0+2488]
	030 Call 0x1C17CF4
	031 Move X0, 0x975000
	032 Move X0, [X0+2352]
	033 Call 0x1C17CF4
	034 Move X0, 0x971000
	035 Move X0, [X0+4040]
	036 Call 0x1C17CF4
	037 Move X0, 0x972000
	038 Move X0, [X0+112]
	039 Call 0x1C17CF4
	040 Move X0, 0x971000
	041 Move X0, [X0+3608]
	042 Call 0x1C17CF4
	043 Move W8, 1
	044 Move [X19+635], W8
	045 Move X24, 0x91F000
	046 Move X24, [X24+3584]
	047 NotImplemented "Instruction MOVI not yet implemented."
	048 Move X0, X31
	049 Move [X31+176], X31
	050 Move [X31+184], X31
	051 Move [X31+96], X31
	052 Move [X31+104], X31
	053 Move [X31+128], V0
	054 Move [X31+136], V0
	055 Move [X31+112], X31
	056 Call InputActionRebindingExtensions.DeferBindingResolution
	057 Move W8, [X21+160]
	058 Move X19, X0
	059 Move [X31+200], W8
	060 Add X0, X31, 200
	061 Call InputUser.get_pairedDevices, X0
	062 Move X8, X1
	063 ShiftRight X8, 32
	064 And X8, X8, 0x7FFFFFFF
	065 Subtract W23, W8, 1
	066 Move [X31+176], X0
	067 Move [X31+184], X1
	068 Move X25, 0x971000
	069 Move X26, 0x974000
	070 Move X25, [X25+3608]
	071 Move X26, [X26+2616]
	072 Move W8, [X21+160]
	073 Move [X31+200], W8
	074 Add X0, X31, 200
	075 Call InputUser.get_pairedDevices, X0
	076 Move X2, [X25]
	077 Move [X31+176], X0
	078 Move [X31+184], X1
	079 Add X0, X31, 176
	080 Move W1, W23
	081 Call ReadOnlyArray`1<Object>.get_Item, X0, X1
	082 Move X1, X0
	083 Move X2, [X26]
	084 Move X0, X22
	085 Call 0x2177094, X0, X1
	086 Move TEMP, X0
	087 And TEMP, TEMP, 1
	088 Compare TEMP, 1
	089 JumpIfEqual {104}
	090 Move W8, [X21+160]
	091 Move [X31+200], W8
	092 Move [X31+168], W8
	093 Add X0, X31, 168
	094 Call InputUser.get_pairedDevices, X0
	095 Move X2, [X25]
	096 Move [X31+176], X0
	097 Move [X31+184], X1
	098 Add X0, X31, 176
	099 Move W1, W23
	100 Call ReadOnlyArray`1<Object>.get_Item, X0, X1
	101 Move X1, X0
	102 Add X0, X31, 200
	103 Call InputUser.UnpairDevice, X0, X1
	104 Subtract W23, W23, 1
	105 Compare X22, 0
	106 JumpIfEqual {228}
	107 Move X8, [X22+24]
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Move X26, 0x970000
	110 Move X26, [X26+4040]
	111 Move X25, X31
	112 And X8, X8, 0
	113 Add X27, X22, 32
	114 NotImplemented "Instruction CMP not yet implemented."
	115 Move W8, [X21+160]
	116 Move X23, [X27]
	117 Move [X31+200], W8
	118 Add X0, X31, 200
	119 Call InputUser.get_pairedDevices, X0
	120 Move X3, [X26]
	121 Move X2, X23
	122 Call 0x223D504, X0, X1
	123 Move TEMP, X0
	124 And TEMP, TEMP, 1
	125 Compare TEMP, 1
	126 JumpIfEqual {131}
	127 Move W1, [X21+160]
	128 Move X0, X23
	129 Move W2, W31
	130 Call InputUser.PerformPairingWithDevice, X0, X1, X2
	131 Move W8, [X22+24]
	132 Add X25, X25, 1
	133 NotImplemented "Instruction CMP not yet implemented."
	134 Move W8, [X21+160]
	135 Move [X31+200], W8
	136 Add X8, X31, 64
	137 Add X0, X31, 200
	138 Call InputUser.get_controlScheme, X0
	139 Move V0, [X31+64]
	140 Move V1, [X31+80]
	141 Move [X31+128], V0
	142 Move [X31+136], V1
	143 Move W8, [X31+128]
	144 Compare W8, 0
	145 JumpIfEqual {177}
	146 Move W8, [X21+160]
	147 Move [X31+200], W8
	148 Add X8, X31, 64
	149 Add X0, X31, 200
	150 Call InputUser.get_controlScheme, X0
	151 Move X8, 0x974000
	152 Move X8, [X8+2352]
	153 Move V0, [X31+64]
	154 Move V1, [X31+80]
	155 Move X1, [X8]
	156 Move [X31+128], V0
	157 Move [X31+136], V1
	158 Add X8, X31, 64
	159 Add X0, X31, 128
	160 Call Nullable`1<InputControlScheme>.get_Value, X0
	161 Move V0, [X31+4]
	162 Move X8, [X31+80]
	163 Move [X31+6], V0
	164 Move [X31+112], X8
	165 Move X8, [X20+16]
	166 Move V0, [X20]
	167 Move [X31+48], X8
	168 Move [X31+2], V0
	169 Add X0, X31, 96
	170 Add X1, X31, 32
	171 Move X2, X31
	172 Call InputControlScheme.Equals, X0, X1
	173 Move TEMP, X0
	174 And TEMP, TEMP, 1
	175 Compare TEMP, 1
	176 JumpIfEqual {186}
	177 Move W8, [X21+160]
	178 Move [X31+200], W8
	179 Move X8, [X20+16]
	180 Move V0, [X20]
	181 Move [X31+16], X8
	182 Move [X31], V0
	183 Add X0, X31, 200
	184 Add X1, X31, 0
	185 Call InputUser.ActivateControlScheme, X0, X1
	186 Move X21, X31
	187 Compare X19, 0
	188 JumpIfEqual {210}
	189 Move X8, [X19]
	190 Move X1, [X24]
	191 NotImplemented "Instruction LDRH not yet implemented."
	192 Compare X9, 0
	193 JumpIfEqual {200}
	194 Move X10, [X8+176]
	195 Add X10, X10, 8
	196 NotImplemented "Instruction LDUR not yet implemented."
	197 NotImplemented "Instruction CMP not yet implemented."
	198 Subtract X9, X9, 1
	199 Add X10, X10, 16
	200 Move X0, X19
	201 Move W2, W31
	202 Call 0x1C5D788
	203 NotImplemented "Instruction LDRSW not yet implemented."
	204 Add X8, X8, X9
	205 Add X0, X8, 312
	206 Move X8, [X0]
	207 Move X1, [X0+8]
	208 Move X0, X19
	209 NotImplemented "Instruction BLR not yet implemented."
	210 Compare X21, 0
	211 JumpIfNotEqual {226}
	212 Move X20, [X31+272]
	213 Move X19, [X31+280]
	214 Move X22, [X31+256]
	215 Move X21, [X31+264]
	216 Move X24, [X31+240]
	217 Move X23, [X31+248]
	218 Move X26, [X31+224]
	219 Move X25, [X31+232]
	220 Move X30, [X31+208]
	221 Move X27, [X31+216]
	222 Move X29, [X31+192]
	223 Add X31, X31, 288
	224 Return 
	225 Call 0x1C17F28
	226 Move X0, X21
	227 Call 0x1C17F18
	228 Call 0x1C17F20
	229 Move X20, X0
	230 NotImplemented "Instruction CMP not yet implemented."
	231 Move X0, X20
	232 Call 0x3EB2AD0
	233 Move X21, [X0]
	234 Call 0x3EB2AE0
	235 Move X21, X31
	236 Move X20, X0
	237 Compare X19, 0
	238 JumpIfEqual {260}
	239 Move X8, [X19]
	240 Move X1, [X24]
	241 NotImplemented "Instruction LDRH not yet implemented."
	242 Compare X9, 0
	243 JumpIfEqual {250}
	244 Move X10, [X8+176]
	245 Add X10, X10, 8
	246 NotImplemented "Instruction LDUR not yet implemented."
	247 NotImplemented "Instruction CMP not yet implemented."
	248 Subtract X9, X9, 1
	249 Add X10, X10, 16
	250 Move X0, X19
	251 Move W2, W31
	252 Call 0x1C5D788
	253 NotImplemented "Instruction LDRSW not yet implemented."
	254 Add X8, X8, X9
	255 Add X0, X8, 312
	256 Move X8, [X0]
	257 Move X1, [X0+8]
	258 Move X0, X19
	259 NotImplemented "Instruction BLR not yet implemented."
	260 Compare X21, 0
	261 JumpIfNotEqual {264}
	262 Move X0, X20
	263 Call 0x1D2D690
	264 Move X0, X21
	265 Call 0x1C17F18
	266 Call 0x1991590

Method: System.Void .ctor()

Disassembly:
	0x037D95E4 RET
	0x037D95E8 STP X30, X21, [X31 - 0x20]!
	0x037D95EC STP X20, X19, [X31 + 0x10]
	0x037D95F0 ADRP X20, 0xC08000
	0x037D95F4 ADRP X21, 0x96F000

ISIL:
	001 Move TEMP, 0
	002 Not TEMP
	003 Move W8, TEMP
	004 Move X1, X31
	005 Move [X0+112], W8
	006 Move [X0+144], W8
	007 Call MonoBehaviour..ctor, X0
	008 Return 

Method: System.Void .cctor()

Disassembly:
	0x037D95F8 LDRB W8, [X20 + 0x29B]
	0x037D95FC LDR X21, [X21 + 0x988]
	0x037D9600 MOV X19, X0
	0x037D9604 TBNZ X8, 0x0, 0x37D961C
	0x037D9608 ADRP X0, 0x96F000
	0x037D960C LDR X0, [X0 + 0x988]
	0x037D9610 BL 0x1C16CF4
	0x037D9614 MOVZ W8, 0x1
	0x037D9618 STRB W8, [X20 + 0x29B]
	0x037D961C LDR X1, [X21]
	0x037D9620 MOV X0, X19
	0x037D9624 LDP X20, X19, [X31 + 0x10]
	0x037D9628 LDP X30, X21, [X31], #0x20
	0x037D962C B 0x2729B5C
	0x037D9630 STP X30, X21, [X31 - 0x20]!
	0x037D9634 STP X20, X19, [X31 + 0x10]
	0x037D9638 ADRP X21, 0xC08000
	0x037D963C LDRB W8, [X21 + 0x287]
	0x037D9640 MOV X19, X1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xC09000
	005 Move X20, 0x970000
	006 Move W8, [X19+636]
	007 Move X20, [X20+2296]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x970000
	013 Move X0, [X0+2296]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+636], W8
	017 Move X8, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 NotImplemented "Instruction MOVI not yet implemented."
	021 Move X8, [X8+184]
	022 Move [X8+40], D0
	023 Move X30, [X31+32]
	024 Return 

