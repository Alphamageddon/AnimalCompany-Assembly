Type: UnityEngine.InputSystem.InputActionRebindingExtensions

Method: System.Nullable`1<UnityEngine.InputSystem.Utilities.PrimitiveValue> GetParameterValue(UnityEngine.InputSystem.InputAction action, System.String name, UnityEngine.InputSystem.InputBinding bindingMask = null)

Disassembly:
	0x0373DD0C MOV X1, X21
	0x0373DD10 MOV X2, X20
	0x0373DD14 MOV X3, X19
	0x0373DD18 BL 0x373DA88
	0x0373DD1C LDP X20, X19, [X31 + 0x1B0]
	0x0373DD20 LDP X22, X21, [X31 + 0x1A0]
	0x0373DD24 LDP X24, X23, [X31 + 0x190]
	0x0373DD28 LDP X29, X30, [X31 + 0x180]
	0x0373DD2C ADD X31, X31, 0x1C0
	0x0373DD30 RET
	0x0373DD34 ADRP X0, 0x9BB000
	0x0373DD38 LDR X0, [X0 + 0x528]
	0x0373DD3C BL 0x1C16D08
	0x0373DD40 BL 0x1C16F10
	0x0373DD44 MOV X19, X0
	0x0373DD48 ADRP X0, 0x9DE000
	0x0373DD4C LDR X0, [X0 + 0xBF8]
	0x0373DD50 B 0x373DD70
	0x0373DD54 ADRP X0, 0x9BB000
	0x0373DD58 LDR X0, [X0 + 0x528]
	0x0373DD5C BL 0x1C16D08
	0x0373DD60 BL 0x1C16F10
	0x0373DD64 MOV X19, X0
	0x0373DD68 ADRP X0, 0x9BE000
	0x0373DD6C LDR X0, [X0 + 0x588]
	0x0373DD70 BL 0x1C16D08
	0x0373DD74 MOV X1, X0
	0x0373DD78 MOV X0, X19
	0x0373DD7C MOV X2, X31
	0x0373DD80 BL 0x330E100
	0x0373DD84 B 0x373DDB8
	0x0373DD88 ADRP X0, 0x9BE000
	0x0373DD8C LDR X0, [X0 + 0x760]
	0x0373DD90 BL 0x1C16D08
	0x0373DD94 BL 0x1C16F10
	0x0373DD98 MOV X19, X0
	0x0373DD9C ADRP X0, 0xA08000
	0x0373DDA0 LDR X0, [X0 + 0x378]
	0x0373DDA4 BL 0x1C16D08
	0x0373DDA8 MOV X1, X0
	0x0373DDAC MOV X0, X19
	0x0373DDB0 MOV X2, X31
	0x0373DDB4 BL 0x3316014
	0x0373DDB8 ADRP X0, 0xA08000
	0x0373DDBC LDR X0, [X0 + 0x3B8]
	0x0373DDC0 BL 0x1C16D08
	0x0373DDC4 MOV X1, X0
	0x0373DDC8 MOV X0, X19
	0x0373DDCC BL 0x1C16DEC
	0x0373DDD0 BL 0x1C16F20
	0x0373DDD4 STP X29, X30, [X31 - 0x40]!
	0x0373DDD8 STP X24, X23, [X31 + 0x10]
	0x0373DDDC STP X22, X21, [X31 + 0x20]
	0x0373DDE0 STP X20, X19, [X31 + 0x30]
	0x0373DDE4 SUB X31, X31, 0x300
	0x0373DDE8 ADRP X24, 0xCA3000
	0x0373DDEC LDRB W9, [X24 + 0xD4F]
	0x0373DDF0 MOV X20, X3
	0x0373DDF4 MOV X21, X2
	0x0373DDF8 MOV X22, X1
	0x0373DDFC MOV X23, X0
	0x0373DE00 MOV X19, X8
	0x0373DE04 TBNZ X9, 0x0, 0x373DE1C
	0x0373DE08 ADRP X0, 0x9B6000
	0x0373DE0C LDR X0, [X0 + 0x598]
	0x0373DE10 BL 0x1C16CF4
	0x0373DE14 MOVZ W8, 0x1
	0x0373DE18 STRB W8, [X24 + 0xD4F]
	0x0373DE1C MOVI V0.2D, 0x0
	0x0373DE20 STP V0, V0, [X31 + 0x260]
	0x0373DE24 STP V0, V0, [X31 + 0x240]
	0x0373DE28 STP V0, V0, [X31 + 0x220]
	0x0373DE2C STP V0, V0, [X31 + 0x200]
	0x0373DE30 CBZ X23, 0x373DF48
	0x0373DE34 LDR X0, [X23 + 0xD0]

ISIL:
	001 Subtract X31, X31, 432
	002 Move [X31+368], X29
	003 Move [X31+384], X30
	004 Move [X31+392], X23
	005 Move [X31+400], X22
	006 Move [X31+408], X21
	007 Move [X31+416], X20
	008 Move [X31+424], X19
	009 Compare X0, 0
	010 JumpIfEqual {63}
	011 Move X21, X1
	012 Move X20, X0
	013 Move X0, X1
	014 Move X1, X31
	015 Move X22, X2
	016 Move X19, X8
	017 Call String.IsNullOrEmpty, X0
	018 Move TEMP, X0
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {70}
	022 Add X0, X31, 152
	023 Move W2, 88
	024 Move X1, X22
	025 Add X23, X31, 240
	026 Call 0x3EB2AC0
	027 NotImplemented "Instruction MOVI not yet implemented."
	028 Add X0, X31, 240
	029 Add X2, X31, 152
	030 Move X1, X21
	031 Move X3, X31
	032 Move X4, X31
	033 Move [X31+352], X31
	034 Move [X23+80], V0
	035 Move [X23+88], V0
	036 Move [X23+48], V0
	037 Move [X23+56], V0
	038 Move [X23+16], V0
	039 Move [X23+24], V0
	040 Move [X23], V0
	041 Call ParameterOverride..ctor, X0, X1, X2, X3
	042 Add X0, X31, 8
	043 Add X1, X31, 240
	044 Move W2, 120
	045 Call 0x3EB2AC0
	046 Add X8, X31, 128
	047 Add X1, X31, 8
	048 Move X0, X20
	049 Call InputActionRebindingExtensions.GetParameterValue, X0, X1
	050 Move X8, [X31+144]
	051 Move V0, [X31+8]
	052 Move X22, [X31+400]
	053 Move X21, [X31+408]
	054 Move X30, [X31+384]
	055 Move X23, [X31+392]
	056 Move [X19+16], X8
	057 Move [X19], V0
	058 Move X20, [X31+416]
	059 Move X19, [X31+424]
	060 Move X29, [X31+368]
	061 Add X31, X31, 432
	062 Return X0
	063 Move X0, 0x9BC000
	064 Move X0, [X0+1320]
	065 Call 0x1C17D08
	066 Call 0x1C17F10
	067 Move X19, X0
	068 Move X0, 0x9DF000
	069 Move X0, [X0+3064]
	070 Move X0, 0x9BC000
	071 Move X0, [X0+1320]
	072 Call 0x1C17D08
	073 Call 0x1C17F10
	074 Move X19, X0
	075 Move X0, 0x9BF000
	076 Move X0, [X0+1416]
	077 Call 0x1C17D08
	078 Move X1, X0
	079 Move X0, X19
	080 Move X2, X31
	081 Call ArgumentNullException..ctor, X0, X1
	082 Move X0, 0xA09000
	083 Move X0, [X0+872]
	084 Call 0x1C17D08
	085 Move X1, X0
	086 Move X0, X19
	087 Call 0x1C17DEC

Method: System.Nullable`1<UnityEngine.InputSystem.Utilities.PrimitiveValue> GetParameterValue(UnityEngine.InputSystem.InputAction action, UnityEngine.InputSystem.InputActionRebindingExtensions/ParameterOverride parameterOverride)

Disassembly:
	0x0373DEDC STP V0, V0, [X31 + 0x260]
	0x0373DEE0 ADD X0, X31, 0x180
	0x0373DEE4 MOVZ W2, 0x80
	0x0373DEE8 MOV X1, X23
	0x0373DEEC BL 0x3EB1AC0
	0x0373DEF0 ADD X0, X31, 0x0
	0x0373DEF4 ADD X1, X31, 0x200
	0x0373DEF8 MOVZ W2, 0x80
	0x0373DEFC BL 0x3EB1AC0
	0x0373DF00 ADD X0, X31, 0x80
	0x0373DF04 ADD X1, X31, 0x180
	0x0373DF08 MOVZ W2, 0x80
	0x0373DF0C BL 0x3EB1AC0
	0x0373DF10 ADD X8, X31, 0x100
	0x0373DF14 ADD X0, X31, 0x80
	0x0373DF18 ADD X1, X31, 0x0
	0x0373DF1C BL 0x3742E8C
	0x0373DF20 ADD X1, X31, 0x100
	0x0373DF24 MOVZ W2, 0x80
	0x0373DF28 MOV X0, X19
	0x0373DF2C BL 0x3EB1AC0
	0x0373DF30 ADD X31, X31, 0x300
	0x0373DF34 LDP X20, X19, [X31 + 0x30]
	0x0373DF38 LDP X22, X21, [X31 + 0x20]
	0x0373DF3C LDP X24, X23, [X31 + 0x10]
	0x0373DF40 LDP X29, X30, [X31], #0x40
	0x0373DF44 RET
	0x0373DF48 BL 0x1C16F20
	0x0373DF4C SUB X31, X31, 0xE0
	0x0373DF50 STP X30, X21, [X31 + 0xC0]
	0x0373DF54 STP X20, X19, [X31 + 0xD0]
	0x0373DF58 ADRP X21, 0xCA3000
	0x0373DF5C LDRB W8, [X21 + 0xD36]
	0x0373DF60 MOV X19, X1
	0x0373DF64 MOV X20, X0
	0x0373DF68 TBNZ X8, 0x0, 0x373DF8C
	0x0373DF6C ADRP X0, 0x9DD000
	0x0373DF70 LDR X0, [X0 + 0xFE8]
	0x0373DF74 BL 0x1C16CF4
	0x0373DF78 ADRP X0, 0xA08000
	0x0373DF7C LDR X0, [X0 + 0x108]
	0x0373DF80 BL 0x1C16CF4
	0x0373DF84 MOVZ W8, 0x1
	0x0373DF88 STRB W8, [X21 + 0xD36]
	0x0373DF8C CBZ X20, 0x373E014
	0x0373DF90 MOV X0, X20
	0x0373DF94 BL 0x37345CC
	0x0373DF98 UBFM X8, X1, 0x20, 0x3F
	0x0373DF9C CMP W8, 0x1
	0x0373DFA0 STP X0, X1, [X31 + 0xB0]
	0x0373DFA4 B.LT 0x373DFFC
	0x0373DFA8 ADRP X21, 0xA08000
	0x0373DFAC LDR X21, [X21 + 0x108]
	0x0373DFB0 MOV W20, W31
	0x0373DFB4 LDR X2, [X21]
	0x0373DFB8 ADD X8, X31, 0x58
	0x0373DFBC ADD X0, X31, 0xB0
	0x0373DFC0 MOV W1, W20
	0x0373DFC4 BL 0x24FC334
	0x0373DFC8 ADD X0, X31, 0x0
	0x0373DFCC ADD X1, X31, 0x58
	0x0373DFD0 MOVZ W2, 0x58
	0x0373DFD4 BL 0x3EB1AC0
	0x0373DFD8 ADD X1, X31, 0x0
	0x0373DFDC MOV X0, X19
	0x0373DFE0 MOV X2, X31
	0x0373DFE4 BL 0x3752E94
	0x0373DFE8 TBNZ X0, 0x0, 0x373E000
	0x0373DFEC LDR W8, [X31 + 0xBC]
	0x0373DFF0 ADD W20, W20, 0x1
	0x0373DFF4 CMP W20, W8
	0x0373DFF8 B.LT 0x373DFB4
	0x0373DFFC MOVN W20, 0x0
	0x0373E000 MOV W0, W20
	0x0373E004 LDP X20, X19, [X31 + 0xD0]
	0x0373E008 LDP X30, X21, [X31 + 0xC0]
	0x0373E00C ADD X31, X31, 0xE0
	0x0373E010 RET
	0x0373E014 ADRP X0, 0x9BA000
	0x0373E018 LDR X0, [X0 + 0x528]
	0x0373E01C BL 0x1C16D08
	0x0373E020 BL 0x1C16F10
	0x0373E024 MOV X19, X0
	0x0373E028 ADRP X0, 0x9DD000
	0x0373E02C LDR X0, [X0 + 0xBF8]
	0x0373E030 BL 0x1C16D08
	0x0373E034 MOV X1, X0
	0x0373E038 MOV X0, X19
	0x0373E03C MOV X2, X31
	0x0373E040 BL 0x330E100
	0x0373E044 ADRP X0, 0xA07000
	0x0373E048 LDR X0, [X0 + 0x3C0]
	0x0373E04C BL 0x1C16D08
	0x0373E050 MOV X1, X0
	0x0373E054 MOV X0, X19
	0x0373E058 BL 0x1C16DEC
	0x0373E05C SUB X31, X31, 0xE0
	0x0373E060 STP X30, X21, [X31 + 0xC0]
	0x0373E064 STP X20, X19, [X31 + 0xD0]
	0x0373E068 ADRP X21, 0xCA2000
	0x0373E06C LDRB W8, [X21 + 0xD37]
	0x0373E070 MOV X19, X1
	0x0373E074 MOV X20, X0
	0x0373E078 TBNZ X8, 0x0, 0x373E09C
	0x0373E07C ADRP X0, 0x9DC000
	0x0373E080 LDR X0, [X0 + 0xFE8]
	0x0373E084 BL 0x1C16CF4
	0x0373E088 ADRP X0, 0xA07000
	0x0373E08C LDR X0, [X0 + 0x108]
	0x0373E090 BL 0x1C16CF4
	0x0373E094 MOVZ W8, 0x1

ISIL:
	001 Move [X31-48], X29
	002 Move [X31-40], X30
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Subtract X31, X31, 608
	008 Move X22, 0xCA4000
	009 Move W9, [X22+3377]
	010 Move X20, X1
	011 Move X21, X0
	012 Move X19, X8
	013 Move TEMP, X9
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0xA09000
	018 Move X0, [X0+880]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X22+3377], W8
	022 Add X0, X31, 320
	023 Move W2, 168
	024 Move W1, W31
	025 Call 0x3EB2B10
	026 Move [X31+288], X31
	027 Move [X31+296], X31
	028 Move [X31+304], X31
	029 Compare X21, 0
	030 JumpIfEqual {100}
	031 Move X8, [X21+16]
	032 Move [X20+64], X8
	033 Move X22, [X21+200]
	034 Compare X22, 0
	035 JumpIfNotEqual {41}
	036 Move X0, X21
	037 Call InputAction.CreateInternalActionMapForSingletonAction, X0
	038 Move X22, [X21+200]
	039 Compare X22, 0
	040 JumpIfEqual {100}
	041 Move X0, X22
	042 Call InputActionMap.ResolveBindingsIfNecessary, X0
	043 Move X21, [X22+96]
	044 Add X0, X31, 168
	045 Move W2, 120
	046 Move X1, X20
	047 Call 0x3EB2AC0
	048 Move W20, [X22+88]
	049 Add X0, X31, 488
	050 Add X1, X31, 168
	051 Move W2, 120
	052 Call 0x3EB2AC0
	053 Add X0, X31, 0
	054 Move W2, 168
	055 Move W1, W31
	056 Call 0x3EB2B10
	057 Add X0, X31, 0
	058 Add X2, X31, 488
	059 Move X1, X21
	060 Move W3, W20
	061 Call ParameterEnumerator..ctor, X0, X1, X2, X3
	062 Add X0, X31, 320
	063 Add X1, X31, 0
	064 Move W2, 168
	065 Call 0x3EB2AC0
	066 Add X0, X31, 320
	067 Call ParameterEnumerator.MoveNext, X0
	068 Move TEMP, X0
	069 And TEMP, TEMP, 1
	070 Compare TEMP, 1
	071 JumpIfNotEqual {108}
	072 Move X0, [X31+480]
	073 Compare X0, 0
	074 JumpIfEqual {101}
	075 Move X8, [X0]
	076 Move X1, [X31+472]
	077 Move X9, [X8+712]
	078 Move X2, [X8+720]
	079 NotImplemented "Instruction BLR not yet implemented."
	080 Move X1, X31
	081 Call PrimitiveValue.FromObject, X0
	082 Move X8, 0xA09000
	083 Move X8, [X8+880]
	084 Move X2, X0
	085 Move X4, X1
	086 Move [X31], X31
	087 Move [X31+8], X31
	088 Move X3, [X8]
	089 Move [X31+16], X31
	090 Add X0, X31, 0
	091 Move X1, X2
	092 Move X2, X4
	093 Call Nullable`1<PrimitiveValue>..ctor, X0, X1
	094 Move V0, [X31]
	095 Move X8, [X31+16]
	096 Move [X31+18], V0
	097 Move [X31+304], X8
	098 Move [X19+16], X8
	099 Move [X19], V0
	100 Call 0x1C17F20
	101 Call 0x1C17F20
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Call 0x3EB2AD0
	104 Move X20, [X0]
	105 Call 0x3EB2AE0
	106 Compare X20, 0
	107 JumpIfNotEqual {119}
	108 Move [X19], X31
	109 Move [X19+8], X31
	110 Move [X19+16], X31
	111 Add X31, X31, 608
	112 Move X20, [X31+32]
	113 Move X19, [X31+40]
	114 Move X22, [X31+16]
	115 Move X21, [X31+24]
	116 Move X29, [X31+48]
	117 Move X30, [X31+56]
	118 Return X0
	119 Move X0, X20
	120 Call 0x1C17F18
	121 Compare X20, 0
	122 JumpIfNotEqual {124}
	123 Call 0x1D2D690
	124 Move X0, X20
	125 Call 0x1C17F18
	126 Call 0x1991590

Method: System.Nullable`1<UnityEngine.InputSystem.Utilities.PrimitiveValue> GetParameterValue(UnityEngine.InputSystem.InputAction action, System.String name, System.Int32 bindingIndex)

Disassembly:
	0x0373E1F4 ADRP X0, 0x9DD000
	0x0373E1F8 LDR X0, [X0 + 0xBF8]
	0x0373E1FC BL 0x1C16D08
	0x0373E200 MOV X1, X0
	0x0373E204 MOV X0, X19
	0x0373E208 MOV X2, X31
	0x0373E20C BL 0x330E100
	0x0373E210 ADRP X0, 0xA07000
	0x0373E214 LDR X0, [X0 + 0x3D0]
	0x0373E218 BL 0x1C16D08
	0x0373E21C MOV X1, X0
	0x0373E220 MOV X0, X19
	0x0373E224 BL 0x1C16DEC
	0x0373E228 SUB X31, X31, 0xF0
	0x0373E22C STP X30, X23, [X31 + 0xC0]
	0x0373E230 STP X22, X21, [X31 + 0xD0]
	0x0373E234 STP X20, X19, [X31 + 0xE0]
	0x0373E238 ADRP X22, 0xCA2000
	0x0373E23C LDRB W9, [X22 + 0xD38]
	0x0373E240 MOV X21, X1
	0x0373E244 MOV X20, X0
	0x0373E248 MOV X19, X8
	0x0373E24C TBNZ X9, 0x0, 0x373E270
	0x0373E250 ADRP X0, 0xA06000
	0x0373E254 LDR X0, [X0 + 0xF50]
	0x0373E258 BL 0x1C16CF4
	0x0373E25C ADRP X0, 0xA07000
	0x0373E260 LDR X0, [X0 + 0x108]
	0x0373E264 BL 0x1C16CF4
	0x0373E268 MOVZ W8, 0x1
	0x0373E26C STRB W8, [X22 + 0xD38]
	0x0373E270 CBZ X20, 0x373E32C
	0x0373E274 CBZ X21, 0x373E34C
	0x0373E278 MOV X0, X20
	0x0373E27C MOV X1, X21
	0x0373E280 BL 0x373E394
	0x0373E284 ADDS W31, W0, 0x1
	0x0373E288 B.EQ 0x373E308
	0x0373E28C ADRP X22, 0xA07000
	0x0373E290 ADRP X23, 0xA06000
	0x0373E294 LDR X22, [X22 + 0x108]
	0x0373E298 LDR X23, [X23 + 0xF50]
	0x0373E29C MOV W21, W0
	0x0373E2A0 MOV X0, X20
	0x0373E2A4 BL 0x37345CC
	0x0373E2A8 LDR X2, [X22]
	0x0373E2AC STP X0, X1, [X31 + 0x58]
	0x0373E2B0 ADD X8, X31, 0x68
	0x0373E2B4 ADD X0, X31, 0x58
	0x0373E2B8 MOV W1, W21
	0x0373E2BC BL 0x24FC334
	0x0373E2C0 ADD X0, X31, 0x0
	0x0373E2C4 ADD X1, X31, 0x68
	0x0373E2C8 MOVZ W2, 0x58
	0x0373E2CC BL 0x3EB1AC0
	0x0373E2D0 LDR X20, [X23]
	0x0373E2D4 MOVI V0.2D, 0x0
	0x0373E2D8 ADD X0, X31, 0x68
	0x0373E2DC ADD X1, X31, 0x0
	0x0373E2E0 MOVZ W2, 0x58
	0x0373E2E4 STP V0, V0, [X19 + 0x40]
	0x0373E2E8 STP V0, V0, [X19 + 0x20]
	0x0373E2EC STP V0, V0, [X19]
	0x0373E2F0 BL 0x3EB1AC0
	0x0373E2F4 ADD X1, X31, 0x68
	0x0373E2F8 MOV X0, X19
	0x0373E2FC MOV X2, X20
	0x0373E300 BL 0x24324E4
	0x0373E304 B 0x373E318
	0x0373E308 MOVI V0.2D, 0x0
	0x0373E30C STP V0, V0, [X19 + 0x40]
	0x0373E310 STP V0, V0, [X19 + 0x20]
	0x0373E314 STP V0, V0, [X19]
	0x0373E318 LDP X20, X19, [X31 + 0xE0]
	0x0373E31C LDP X22, X21, [X31 + 0xD0]
	0x0373E320 LDP X30, X23, [X31 + 0xC0]
	0x0373E324 ADD X31, X31, 0xF0
	0x0373E328 RET
	0x0373E32C ADRP X0, 0x9BA000
	0x0373E330 LDR X0, [X0 + 0x528]
	0x0373E334 BL 0x1C16D08
	0x0373E338 BL 0x1C16F10
	0x0373E33C MOV X19, X0
	0x0373E340 ADRP X0, 0x9DD000
	0x0373E344 LDR X0, [X0 + 0xBF8]
	0x0373E348 B 0x373E368
	0x0373E34C ADRP X0, 0x9BA000
	0x0373E350 LDR X0, [X0 + 0x528]
	0x0373E354 BL 0x1C16D08
	0x0373E358 BL 0x1C16F10
	0x0373E35C MOV X19, X0
	0x0373E360 ADRP X0, 0x9DD000
	0x0373E364 LDR X0, [X0 + 0xD60]
	0x0373E368 BL 0x1C16D08
	0x0373E36C MOV X1, X0
	0x0373E370 MOV X0, X19
	0x0373E374 MOV X2, X31
	0x0373E378 BL 0x330E100
	0x0373E37C ADRP X0, 0xA07000
	0x0373E380 LDR X0, [X0 + 0x3D8]
	0x0373E384 BL 0x1C16D08
	0x0373E388 MOV X1, X0
	0x0373E38C MOV X0, X19
	0x0373E390 BL 0x1C16DEC
	0x0373E394 STP X29, X30, [X31 - 0x60]!
	0x0373E398 STP X28, X27, [X31 + 0x10]
	0x0373E39C STP X26, X25, [X31 + 0x20]
	0x0373E3A0 STP X24, X23, [X31 + 0x30]
	0x0373E3A4 STP X22, X21, [X31 + 0x40]
	0x0373E3A8 STP X20, X19, [X31 + 0x50]
	0x0373E3AC CBZ X0, 0x373E4D0
	0x0373E3B0 MOV X20, X1
	0x0373E3B4 CBZ X1, 0x373E4F0
	0x0373E3B8 LDR X21, [X0 + 0xC8]
	0x0373E3BC MOV X19, X0
	0x0373E3C0 CBNZ X21, 0x373E3D4
	0x0373E3C4 MOV X0, X19
	0x0373E3C8 BL 0x373572C
	0x0373E3CC LDR X21, [X19 + 0xC8]
	0x0373E3D0 CBZ X21, 0x373E4CC
	0x0373E3D4 MOV X0, X21
	0x0373E3D8 BL 0x37346C0
	0x0373E3DC LDR X21, [X21 + 0x60]
	0x0373E3E0 CBZ X21, 0x373E4CC
	0x0373E3E4 LDR X25, [X21 + 0x18]
	0x0373E3E8 MOV X0, X21

ISIL:
	001 Subtract X31, X31, 448
	002 Move [X31+384], X29
	003 Move [X31+400], X30
	004 Move [X31+408], X23
	005 Move [X31+416], X22
	006 Move [X31+424], X21
	007 Move [X31+432], X20
	008 Move [X31+440], X19
	009 Move X23, 0xCA3000
	010 Move W9, [X23+3378]
	011 Move W22, W2
	012 Move X20, X1
	013 Move X21, X0
	014 Move X19, X8
	015 Move TEMP, X9
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0xA08000
	020 Move X0, [X0+264]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X23+3378], W8
	024 NotImplemented "Instruction MOVI not yet implemented."
	025 Move [X31+256], X31
	026 Move [X31+224], V0
	027 Move [X31+232], V0
	028 Move [X31+192], V0
	029 Move [X31+200], V0
	030 Move [X31+11], V0
	031 Compare X21, 0
	032 JumpIfEqual {110}
	033 Move X0, X20
	034 Move X1, X31
	035 Call String.IsNullOrEmpty, X0
	036 Move TEMP, X0
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfEqual {117}
	040 Move TEMP, X22
	041 And TEMP, TEMP, -2147483648
	042 Compare TEMP, -2147483648
	043 JumpIfEqual {129}
	044 Move X0, X21
	045 Move W1, W22
	046 Call InputAction.BindingIndexOnActionToBindingIndexOnMap, X0, X1
	047 NotImplemented "Instruction MOVI not yet implemented."
	048 Move [X31+288], V0
	049 Move [X31+296], V0
	050 Move [X31+320], V0
	051 Move [X31+328], V0
	052 Move [X31+22], V0
	053 Move [X31+368], X31
	054 Move X8, [X21+200]
	055 Move W22, W0
	056 Compare X8, 0
	057 JumpIfNotEqual {63}
	058 Move X0, X21
	059 Call InputAction.CreateInternalActionMapForSingletonAction, X0
	060 Move X8, [X21+200]
	061 Compare X8, 0
	062 JumpIfEqual {147}
	063 Move X23, 0xA08000
	064 Move X23, [X23+264]
	065 Move X0, X8
	066 Call InputActionMap.get_bindings, X0
	067 Move X2, [X23]
	068 Move [X31+272], X0
	069 Move [X31+280], X1
	070 Add X8, X31, 88
	071 Add X0, X31, 272
	072 Move W1, W22
	073 Call 0x24FD334, X0, X1
	074 Add X0, X31, 176
	075 Add X1, X31, 88
	076 Move W2, 88
	077 Call 0x3EB2AC0
	078 Add X0, X31, 176
	079 Move X1, X31
	080 Call InputBinding.get_id, X0
	081 Move X2, X0
	082 Move X3, X1
	083 Add X0, X31, 288
	084 Move X1, X2
	085 Move X2, X3
	086 Move X3, X31
	087 Call InputBinding.set_id, X0, X1
	088 Add X0, X31, 0
	089 Add X1, X31, 288
	090 Move W2, 88
	091 Call 0x3EB2AC0
	092 Add X8, X31, 88
	093 Add X2, X31, 0
	094 Move X0, X21
	095 Move X1, X20
	096 Call InputActionRebindingExtensions.GetParameterValue, X0, X1, X2
	097 Move X8, [X31+104]
	098 NotImplemented "Instruction LDUR not yet implemented."
	099 Move X22, [X31+416]
	100 Move X21, [X31+424]
	101 Move X30, [X31+400]
	102 Move X23, [X31+408]
	103 Move [X19+16], X8
	104 Move [X19], V0
	105 Move X20, [X31+432]
	106 Move X19, [X31+440]
	107 Move X29, [X31+384]
	108 Add X31, X31, 448
	109 Return X0
	110 Move X0, 0x9BB000
	111 Move X0, [X0+1320]
	112 Call 0x1C17D08
	113 Call 0x1C17F10
	114 Move X19, X0
	115 Move X0, 0x9DE000
	116 Move X0, [X0+3064]
	117 Move X0, 0x9BB000
	118 Move X0, [X0+1320]
	119 Call 0x1C17D08
	120 Call 0x1C17F10
	121 Move X19, X0
	122 Move X0, 0x9BE000
	123 Move X0, [X0+1416]
	124 Call 0x1C17D08
	125 Move X1, X0
	126 Move X0, X19
	127 Move X2, X31
	128 Call ArgumentNullException..ctor, X0, X1
	129 Move X0, 0x9BE000
	130 Move X0, [X0+1888]
	131 Call 0x1C17D08
	132 Call 0x1C17F10
	133 Move X19, X0
	134 Move X0, 0xA08000
	135 Move X0, [X0+888]
	136 Call 0x1C17D08
	137 Move X1, X0
	138 Move X0, X19
	139 Move X2, X31
	140 Call ArgumentOutOfRangeException..ctor, X0, X1
	141 Move X0, 0xA08000
	142 Move X0, [X0+896]
	143 Call 0x1C17D08
	144 Move X1, X0
	145 Move X0, X19
	146 Call 0x1C17DEC
	147 Call 0x1C17F20

Method: System.Nullable`1<TValue> GetParameterValue(UnityEngine.InputSystem.InputAction action, System.Linq.Expressions.Expression`1<System.Func`2<TObject, TValue>> expr, UnityEngine.InputSystem.InputBinding bindingMask = null)

Disassembly:
	0x021F7D08 MOV X0, X23
	0x021F7D0C MOV X1, X31
	0x021F7D10 BL 0x374A7E8
	0x021F7D14 ADD X0, X0, X24, 0x5, LSL
	0x021F7D18 MOV X1, X31
	0x021F7D1C BL 0x374AB5C
	0x021F7D20 TBZ X0, 0x0, 0x21F7ED4
	0x021F7D24 MOV X0, X23
	0x021F7D28 MOV X1, X31
	0x021F7D2C UBFM X25, X24, 0x3B, 0x3A
	0x021F7D30 BL 0x374A7E8
	0x021F7D34 ADD X8, X25, X0
	0x021F7D38 LDRB W8, [X8 + 0x5]
	0x021F7D3C LDR W9, [X31 + 0x4]
	0x021F7D40 CMP W8, W9
	0x021F7D44 B.NE 0x21F7EB0
	0x021F7D48 MOV X0, X23
	0x021F7D4C MOV X1, X31
	0x021F7D50 BL 0x374A7E8
	0x021F7D54 LDRB W29, [X25, X0, LSL]
	0x021F7D58 MOV X0, X23
	0x021F7D5C MOV X1, X31
	0x021F7D60 BL 0x374A7E8
	0x021F7D64 CBZ X29, 0x21F7EB0
	0x021F7D68 ADD X8, X25, X0
	0x021F7D6C LDRH W25, [X8 + 0xE]
	0x021F7D70 LDR X8, [X19 + 0x38]
	0x021F7D74 MOVZ W3, 0x1
	0x021F7D78 MOV X0, X23
	0x021F7D7C MOV W1, W24
	0x021F7D80 LDR X4, [X8 + 0x8]
	0x021F7D84 MOV W2, W25
	0x021F7D88 BL 0x21F8E60
	0x021F7D8C MOV V12.16B, V0.16B
	0x021F7D90 MOV V13.16B, V1.16B
	0x021F7D94 MOV V14.16B, V2.16B
	0x021F7D98 MOV V15.16B, V3.16B
	0x021F7D9C TBNZ X22, 0x0, 0x21F7DD8
	0x021F7DA0 LDR X8, [X19 + 0x38]
	0x021F7DA4 ADD X0, X31, 0x8
	0x021F7DA8 MOV V0.16B, V12.16B
	0x021F7DAC MOV V1.16B, V13.16B
	0x021F7DB0 LDR X1, [X8 + 0x20]
	0x021F7DB4 MOV V2.16B, V14.16B
	0x021F7DB8 MOV V3.16B, V15.16B
	0x021F7DBC MOV V4.16B, V8.16B
	0x021F7DC0 MOV V5.16B, V11.16B
	0x021F7DC4 MOV V6.16B, V10.16B
	0x021F7DC8 MOV V7.16B, V9.16B
	0x021F7DCC BL 0x24EE960
	0x021F7DD0 CMP W0, 0x1
	0x021F7DD4 B.LT 0x21F7DEC
	0x021F7DD8 MOV V9.16B, V15.16B
	0x021F7DDC MOV V10.16B, V14.16B
	0x021F7DE0 MOV V11.16B, V13.16B
	0x021F7DE4 MOV V8.16B, V12.16B
	0x021F7DE8 STR W25, [X20]
	0x021F7DEC CBZ X21, 0x21F7E98
	0x021F7DF0 LDR W8, [X20]
	0x021F7DF4 CMP X25, X8
	0x021F7DF8 B.NE 0x21F7E98
	0x021F7DFC LDR X8, [X23 + 0x18]
	0x021F7E00 CBZ X8, 0x21F7F14
	0x021F7E04 LDR W9, [X8 + 0x18]
	0x021F7E08 CMP X25, X9
	0x021F7E0C B.CS 0x21F7F18
	0x021F7E10 ADD X8, X8, X25, 0x3, LSL
	0x021F7E14 LDR X0, [X8 + 0x20]
	0x021F7E18 CBZ X0, 0x21F7E98
	0x021F7E1C LDR X9, [X0]
	0x021F7E20 LDR X8, [X27]
	0x021F7E24 LDRB W10, [X9 + 0x130]
	0x021F7E28 LDRB W11, [X8 + 0x130]
	0x021F7E2C CMP W10, W11
	0x021F7E30 B.CC 0x21F7E48
	0x021F7E34 LDR X12, [X9 + 0xC8]
	0x021F7E38 ADD X11, X12, X11, 0x3, LSL
	0x021F7E3C LDUR X11, [X11 - 0x8]
	0x021F7E40 CMP X11, X8
	0x021F7E44 B.EQ 0x21F7E88
	0x021F7E48 ADRP X11, 0x1F24000
	0x021F7E4C LDR X11, [X11 + 0xC98]
	0x021F7E50 LDR X11, [X11]
	0x021F7E54 LDRB W12, [X11 + 0x130]
	0x021F7E58 CMP W10, W12
	0x021F7E5C B.CC 0x21F7E98
	0x021F7E60 LDR X9, [X9 + 0xC8]
	0x021F7E64 ADD X9, X9, X12, 0x3, LSL
	0x021F7E68 LDUR X9, [X9 - 0x8]
	0x021F7E6C CMP X9, X11
	0x021F7E70 B.NE 0x21F7E98
	0x021F7E74 LDR X8, [X8 + 0xB8]
	0x021F7E78 LDR V0, [X8]
	0x021F7E7C FCMP S12, S0
	0x021F7E80 CSET W8, GE
	0x021F7E84 B 0x21F7E94
	0x021F7E88 MOV X1, X31
	0x021F7E8C BL 0x3758A6C
	0x021F7E90 AND W8, W0, 0x1
	0x021F7E94 STRB W8, [X21]
	0x021F7E98 MOV W22, W31
	0x021F7E9C MOV W28, W31
	0x021F7EA0 SUBS X29, X29, 0x1
	0x021F7EA4 ADD X25, X25, 0x1
	0x021F7EA8 B.NE 0x21F7D70
	0x021F7EAC B 0x21F7EB4
	0x021F7EB0 MOV W28, W22
	0x021F7EB4 MOV X0, X23
	0x021F7EB8 MOV X1, X31
	0x021F7EBC ADD W26, W26, 0x1
	0x021F7EC0 BL 0x374A7C0
	0x021F7EC4 CMP W26, W0
	0x021F7EC8 ADD X24, X24, 0x1
	0x021F7ECC MOV W22, W28
	0x021F7ED0 B.LT 0x21F7D08
	0x021F7ED4 MOV V0.16B, V8.16B
	0x021F7ED8 MOV V1.16B, V11.16B
	0x021F7EDC MOV V2.16B, V10.16B
	0x021F7EE0 MOV V3.16B, V9.16B
	0x021F7EE4 LDP X20, X19, [X31 + 0xA0]
	0x021F7EE8 LDP X22, X21, [X31 + 0x90]
	0x021F7EEC LDP X24, X23, [X31 + 0x80]
	0x021F7EF0 LDP X26, X25, [X31 + 0x70]
	0x021F7EF4 LDP X28, X27, [X31 + 0x60]
	0x021F7EF8 LDP X29, X30, [X31 + 0x50]
	0x021F7EFC LDP D9, D8, [X31 + 0x40]
	0x021F7F00 LDP D11, D10, [X31 + 0x30]
	0x021F7F04 LDP D13, D12, [X31 + 0x20]
	0x021F7F08 LDP D15, D14, [X31 + 0x10]
	0x021F7F0C ADD X31, X31, 0xB0
	0x021F7F10 RET
	0x021F7F14 BL 0x1C16F20
	0x021F7F18 BL 0x1C16F28
	0x021F7F1C SUB X31, X31, 0x80
	0x021F7F20 STP D9, D8, [X31 + 0x10]
	0x021F7F24 STP X29, X30, [X31 + 0x20]
	0x021F7F28 STP X28, X27, [X31 + 0x30]
	0x021F7F2C STP X26, X25, [X31 + 0x40]
	0x021F7F30 STP X24, X23, [X31 + 0x50]
	0x021F7F34 STP X22, X21, [X31 + 0x60]
	0x021F7F38 STP X20, X19, [X31 + 0x70]
	0x021F7F3C STRB W5, [X31 + 0x8]
	0x021F7F40 LDR X8, [X6 + 0x38]
	0x021F7F44 MOV X19, X6
	0x021F7F48 MOV X20, X4
	0x021F7F4C MOV X21, X3
	0x021F7F50 MOV W24, W1
	0x021F7F54 MOV X23, X0
	0x021F7F58 STR W2, [X31 + 0x4]
	0x021F7F5C CBNZ X8, 0x21F7F88
	0x021F7F60 ADRP X0, 0x1F24000
	0x021F7F64 LDR X0, [X0 + 0xC90]
	0x021F7F68 BL 0x1C16CF4
	0x021F7F6C ADRP X0, 0x1F24000
	0x021F7F70 LDR X0, [X0 + 0xC98]
	0x021F7F74 BL 0x1C16CF4
	0x021F7F78 LDR X8, [X19 + 0x38]
	0x021F7F7C CBNZ X8, 0x21F7F88
	0x021F7F80 MOV X0, X19
	0x021F7F84 BL 0x1C5C6E0
	0x021F7F88 MOVN W8, 0x0
	0x021F7F8C MOV X0, X23
	0x021F7F90 MOV X1, X31
	0x021F7F94 STR W8, [X20]
	0x021F7F98 ADD W26, W24, 0x1
	0x021F7F9C BL 0x374A7C0
	0x021F7FA0 CMP W26, W0
	0x021F7FA4 FMOV S8, W31
	0x021F7FA8 B.GE 0x21F815C
	0x021F7FAC ADRP X27, 0x1F24000
	0x021F7FB0 LDR X27, [X27 + 0xC90]
	0x021F7FB4 SXTW X24, W26
	0x021F7FB8 FMOV S8, W31
	0x021F7FBC MOVZ W22, 0x1
	0x021F7FC0 MOV X0, X23
	0x021F7FC4 MOV X1, X31
	0x021F7FC8 BL 0x374A7E8
	0x021F7FCC ADD X0, X0, X24, 0x5, LSL
	0x021F7FD0 MOV X1, X31
	0x021F7FD4 BL 0x374AB5C
	0x021F7FD8 TBZ X0, 0x0, 0x21F815C
	0x021F7FDC MOV X0, X23
	0x021F7FE0 MOV X1, X31
	0x021F7FE4 UBFM X25, X24, 0x3B, 0x3A
	0x021F7FE8 BL 0x374A7E8
	0x021F7FEC ADD X8, X25, X0
	0x021F7FF0 LDRB W8, [X8 + 0x5]
	0x021F7FF4 LDR W9, [X31 + 0x4]
	0x021F7FF8 CMP W8, W9
	0x021F7FFC B.NE 0x21F8138
	0x021F8000 MOV X0, X23
	0x021F8004 MOV X1, X31
	0x021F8008 BL 0x374A7E8
	0x021F800C LDRB W29, [X25, X0, LSL]
	0x021F8010 MOV X0, X23
	0x021F8014 MOV X1, X31
	0x021F8018 BL 0x374A7E8
	0x021F801C CBZ X29, 0x21F8138
	0x021F8020 ADD X8, X25, X0
	0x021F8024 LDRH W25, [X8 + 0xE]
	0x021F8028 LDR X8, [X19 + 0x38]
	0x021F802C MOVZ W3, 0x1
	0x021F8030 MOV X0, X23
	0x021F8034 MOV W1, W24
	0x021F8038 LDR X4, [X8 + 0x8]
	0x021F803C MOV W2, W25
	0x021F8040 BL 0x21F9434
	0x021F8044 MOV V9.16B, V0.16B
	0x021F8048 TBNZ X22, 0x0, 0x21F806C
	0x021F804C LDR X8, [X19 + 0x38]
	0x021F8050 ADD X0, X31, 0x8
	0x021F8054 MOV V0.16B, V9.16B
	0x021F8058 MOV V1.16B, V8.16B
	0x021F805C LDR X1, [X8 + 0x20]
	0x021F8060 BL 0x29B2554
	0x021F8064 CMP W0, 0x1
	0x021F8068 B.LT 0x21F8074
	0x021F806C MOV V8.16B, V9.16B
	0x021F8070 STR W25, [X20]
	0x021F8074 CBZ X21, 0x21F8120
	0x021F8078 LDR W8, [X20]
	0x021F807C CMP X25, X8
	0x021F8080 B.NE 0x21F8120
	0x021F8084 LDR X8, [X23 + 0x18]
	0x021F8088 CBZ X8, 0x21F8184
	0x021F808C LDR W9, [X8 + 0x18]
	0x021F8090 CMP X25, X9
	0x021F8094 B.CS 0x21F8188
	0x021F8098 ADD X8, X8, X25, 0x3, LSL
	0x021F809C LDR X0, [X8 + 0x20]
	0x021F80A0 CBZ X0, 0x21F8120
	0x021F80A4 LDR X9, [X0]
	0x021F80A8 LDR X8, [X27]
	0x021F80AC LDRB W10, [X9 + 0x130]
	0x021F80B0 LDRB W11, [X8 + 0x130]
	0x021F80B4 CMP W10, W11
	0x021F80B8 B.CC 0x21F80D0
	0x021F80BC LDR X12, [X9 + 0xC8]
	0x021F80C0 ADD X11, X12, X11, 0x3, LSL
	0x021F80C4 LDUR X11, [X11 - 0x8]
	0x021F80C8 CMP X11, X8
	0x021F80CC B.EQ 0x21F8110
	0x021F80D0 ADRP X11, 0x1F23000
	0x021F80D4 LDR X11, [X11 + 0xC98]
	0x021F80D8 LDR X11, [X11]
	0x021F80DC LDRB W12, [X11 + 0x130]
	0x021F80E0 CMP W10, W12
	0x021F80E4 B.CC 0x21F8120
	0x021F80E8 LDR X9, [X9 + 0xC8]
	0x021F80EC ADD X9, X9, X12, 0x3, LSL
	0x021F80F0 LDUR X9, [X9 - 0x8]
	0x021F80F4 CMP X9, X11
	0x021F80F8 B.NE 0x21F8120
	0x021F80FC LDR X8, [X8 + 0xB8]
	0x021F8100 LDR V0, [X8]
	0x021F8104 FCMP S9, S0
	0x021F8108 CSET W8, GE
	0x021F810C B 0x21F811C
	0x021F8110 MOV X1, X31
	0x021F8114 BL 0x3758A6C
	0x021F8118 AND W8, W0, 0x1
	0x021F811C STRB W8, [X21]
	0x021F8120 MOV W22, W31
	0x021F8124 MOV W28, W31
	0x021F8128 SUBS X29, X29, 0x1
	0x021F812C ADD X25, X25, 0x1
	0x021F8130 B.NE 0x21F8028
	0x021F8134 B 0x21F813C
	0x021F8138 MOV W28, W22
	0x021F813C MOV X0, X23
	0x021F8140 MOV X1, X31
	0x021F8144 ADD W26, W26, 0x1
	0x021F8148 BL 0x374A7C0
	0x021F814C CMP W26, W0
	0x021F8150 ADD X24, X24, 0x1
	0x021F8154 MOV W22, W28
	0x021F8158 B.LT 0x21F7FC0
	0x021F815C MOV V0.16B, V8.16B
	0x021F8160 LDP X20, X19, [X31 + 0x70]
	0x021F8164 LDP X22, X21, [X31 + 0x60]
	0x021F8168 LDP X24, X23, [X31 + 0x50]
	0x021F816C LDP X26, X25, [X31 + 0x40]
	0x021F8170 LDP X28, X27, [X31 + 0x30]
	0x021F8174 LDP X29, X30, [X31 + 0x20]
	0x021F8178 LDP D9, D8, [X31 + 0x10]
	0x021F817C ADD X31, X31, 0x80
	0x021F8180 RET
	0x021F8184 BL 0x1C16F20
	0x021F8188 BL 0x1C16F28
	0x021F818C SUB X31, X31, 0xA0
	0x021F8190 STP D13, D12, [X31 + 0x10]
	0x021F8194 STP D11, D10, [X31 + 0x20]

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Add X29, X31, 0
	014 Subtract X31, X31, 656
	015 Add X19, X31, 0
	016 NotImplemented "Instruction MRS not yet implemented."
	017 Move [X19+32], X3
	018 Move [X19+40], X8
	019 Move X8, [X8+40]
	020 Move X22, X4
	021 Move X25, X2
	022 Move X21, X1
	023 Move [X29-16], X8
	024 Move X20, [X4+56]
	025 Move X28, X0
	026 Compare X20, 0
	027 JumpIfNotEqual {46}
	028 Move X0, 0x1F06000
	029 Move X0, [X0+2536]
	030 Call 0x1C17CF4
	031 Move X0, 0x1F25000
	032 Move X0, [X0+3200]
	033 Call 0x1C17CF4
	034 Move X0, 0x1F25000
	035 Move X0, [X0+3208]
	036 Call 0x1C17CF4
	037 Move X0, 0x1EFD000
	038 Move X0, [X0+1728]
	039 Call 0x1C17CF4
	040 Move X20, [X22+56]
	041 Compare X20, 0
	042 JumpIfNotEqual {46}
	043 Move X0, X22
	044 Call 0x1C5D6E0
	045 Move X20, [X22+56]
	046 Move X9, [X20+32]
	047 Move X8, [X20+16]
	048 Move [X19+24], X22
	049 Move W24, [X9+252]
	050 Move W22, [X8+252]
	051 Add X8, X31, 0
	052 Add X9, X24, 15
	053 And X27, X9, 0x1FFFFFFFF
	054 Subtract X8, X8, X27
	055 Move [X19+16], X8
	056 Add X31, X8, 0
	057 Add X8, X31, 0
	058 Subtract X8, X8, X27
	059 Move [X19+8], X8
	060 Add X31, X8, 0
	061 Add X9, X22, 15
	062 Add X8, X31, 0
	063 And X9, X9, 0x1FFFFFFFF
	064 Subtract X23, X8, X9
	065 Add X31, X23, 0
	066 Add X8, X31, 0
	067 Subtract X26, X8, X9
	068 Move [X29-160], X31
	069 Move [X29-152], X31
	070 Move [X29-144], X31
	071 Add X31, X26, 0
	072 Move X0, X26
	073 Move W1, W31
	074 Move X2, X22
	075 Call 0x3EB2B10
	076 Add X8, X31, 0
	077 Subtract X27, X8, X27
	078 Move [X29-192], X31
	079 Move [X29-184], X31
	080 Add X31, X27, 0
	081 Move X0, X27
	082 Move W1, W31
	083 Move X2, X24
	084 Call 0x3EB2B10
	085 Compare X28, 0
	086 JumpIfEqual {293}
	087 Compare X21, 0
	088 JumpIfEqual {300}
	089 Add X0, X19, 376
	090 Move W2, 88
	091 Move X1, X25
	092 Call 0x3EB2AC0
	093 Move [X29-176], X31
	094 Move [X29-168], X31
	095 Move X8, [X20+8]
	096 Add X0, X19, 168
	097 Add X1, X19, 376
	098 Move W2, 88
	099 Move X25, [X8]
	100 Call 0x3EB2AC0
	101 Move X4, [X20+8]
	102 Add X8, X19, 256
	103 Add X1, X19, 168
	104 Move X0, X21
	105 Move X2, X31
	106 Move X3, X31
	107 NotImplemented "Instruction BLR not yet implemented."
	108 Subtract X0, X29, 136
	109 Add X1, X19, 256
	110 Move W2, 120
	111 Call 0x3EB2AC0
	112 Add X0, X19, 48
	113 Subtract X1, X29, 136
	114 Move W2, 120
	115 Call 0x3EB2AC0
	116 Add X8, X19, 256
	117 Add X1, X19, 48
	118 Move X0, X28
	119 Move X2, X31
	120 Call InputActionRebindingExtensions.GetParameterValue, X0, X1
	121 Move V0, [X19+16]
	122 Move X8, [X19+272]
	123 Move [X29-160], V0
	124 NotImplemented "Instruction LDURB not yet implemented."
	125 Move [X29-144], X8
	126 Compare W9, 0
	127 JumpIfEqual {200}
	128 Move X20, 0x1EFD000
	129 Move X20, [X20+1728]
	130 Move X28, [X19+24]
	131 Move X0, [X20]
	132 Move X8, [X28+56]
	133 Move W9, [X0+224]
	134 Move X21, [X8+24]
	135 Compare W9, 0
	136 JumpIfNotEqual {138}
	137 Call 0x1C17DFC
	138 Move X0, X21
	139 Move X1, X31
	140 Call Type.GetTypeFromHandle, X0
	141 Move X1, X31
	142 Call Type.GetTypeCode, X0
	143 Move X26, 0x1F25000
	144 Move X26, [X26+3208]
	145 Move W21, W0
	146 Subtract X0, X29, 160
	147 Move X1, [X26]
	148 Call Nullable`1<PrimitiveValue>.get_Value, X0
	149 Move X8, [X26]
	150 Move X25, X0
	151 Move [X29-176], X0
	152 Move [X29-168], X1
	153 Subtract X0, X29, 160
	154 Move X1, X8
	155 Call Nullable`1<PrimitiveValue>.get_Value, X0
	156 NotImplemented "Instruction CMP not yet implemented."
	157 Move [X29-192], X0
	158 Move [X29-184], X1
	159 Move X0, X27
	160 Move W1, W31
	161 Move X2, X24
	162 Call 0x3EB2B10
	163 Move X8, [X28+56]
	164 Move X0, X27
	165 Move X1, [X8+40]
	166 Move X8, [X1]
	167 NotImplemented "Instruction BLR not yet implemented."
	168 Move X21, X0
	169 Subtract X0, X29, 192
	170 Move X1, X31
	171 Call PrimitiveValue.get_valuePtr, X0
	172 Move X8, [X28+56]
	173 Move X25, X0
	174 Move X8, [X8+56]
	175 Move X9, [X8]
	176 Move X0, X8
	177 NotImplemented "Instruction BLR not yet implemented."
	178 Move X2, W0
	179 Move X0, X21
	180 Move X1, X25
	181 Move X3, X31
	182 Call UnsafeUtility.MemCpy, X0, X1, X2
	183 Move X20, [X19+16]
	184 Move X1, X27
	185 Move X2, X24
	186 Move X0, X20
	187 Call 0x3EB2AC0
	188 Move X0, X23
	189 Move W1, W31
	190 Move X2, X22
	191 Call 0x3EB2B10
	192 Move X21, [X19+8]
	193 Move X1, X20
	194 Move X2, X24
	195 Move X0, X21
	196 Call 0x3EB2AC0
	197 Move X8, [X28+56]
	198 Move X0, X23
	199 Move X1, X21
	200 Move X0, X26
	201 Move W1, W31
	202 Move X2, X22
	203 Call 0x3EB2B10
	204 Move X0, X23
	205 Move X1, X26
	206 Move X2, X22
	207 Call 0x3EB2AC0
	208 Move [X29-176], X0
	209 Move [X29-168], X1
	210 Subtract X0, X29, 176
	211 Move X1, X31
	212 Call PrimitiveValue.ToObject, X0
	213 Move X8, [X20]
	214 Move X9, [X28+56]
	215 Move X21, X0
	216 Move W10, [X8+224]
	217 Move X25, [X9+24]
	218 Compare W10, 0
	219 JumpIfNotEqual {222}
	220 Move X0, X8
	221 Call 0x1C17DFC
	222 Move X0, X25
	223 Move X1, X31
	224 Call Type.GetTypeFromHandle, X0
	225 Move X8, 0x1F05000
	226 Move X8, [X8+2536]
	227 Move X25, X0
	228 Move X8, [X8]
	229 Move W9, [X8+224]
	230 Compare W9, 0
	231 JumpIfNotEqual {234}
	232 Move X0, X8
	233 Call 0x1C17DFC
	234 Move X0, X21
	235 Move X1, X25
	236 Move X2, X31
	237 Call Convert.ChangeType, X0, X1
	238 Move X21, X0
	239 Move X0, X23
	240 Move W1, W31
	241 Move X2, X22
	242 Call 0x3EB2B10
	243 Move X8, [X28+56]
	244 Move X1, [X8+32]
	245 Move W8, [X1+309]
	246 Move TEMP, X8
	247 And TEMP, TEMP, 1
	248 Compare TEMP, 1
	249 JumpIfEqual {253}
	250 Move X0, X1
	251 Call 0x1C5D684
	252 Move X1, X0
	253 Compare X21, 0
	254 JumpIfEqual {315}
	255 Move X8, [X21]
	256 Move X9, [X1+64]
	257 Move X0, X21
	258 Move X8, [X8+64]
	259 NotImplemented "Instruction CMP not yet implemented."
	260 Call 0x1C17E08
	261 Move X20, [X19+16]
	262 Move X1, X0
	263 Move X2, X24
	264 Move X0, X20
	265 Call 0x3EB2AC0
	266 Move X8, [X28+56]
	267 Move X0, X23
	268 Move X1, X20
	269 Move X2, [X8+64]
	270 Call Nullable`1<__Il2CppFullySharedGenericStructType>..ctor, X0, X1
	271 Move X0, [X19+32]
	272 Move X1, X23
	273 Move X2, X22
	274 Call 0x3EB2AC0
	275 Move X8, [X19+40]
	276 Move X8, [X8+40]
	277 NotImplemented "Instruction LDUR not yet implemented."
	278 NotImplemented "Instruction CMP not yet implemented."
	279 Add X31, X29, 0
	280 Move X20, [X31+80]
	281 Move X19, [X31+88]
	282 Move X22, [X31+64]
	283 Move X21, [X31+72]
	284 Move X24, [X31+48]
	285 Move X23, [X31+56]
	286 Move X26, [X31+32]
	287 Move X25, [X31+40]
	288 Move X28, [X31+16]
	289 Move X27, [X31+24]
	290 Move X29, [X31+96]
	291 Move X30, [X31+104]
	292 Return X0
	293 Move X0, 0x1F01000
	294 Move X0, [X0+1320]
	295 Call 0x1C17D08
	296 Call 0x1C17F10
	297 Move X21, X0
	298 Move X0, 0x1F24000
	299 Move X0, [X0+3064]
	300 Move X0, 0x1F01000
	301 Move X0, [X0+1320]
	302 Call 0x1C17D08
	303 Call 0x1C17F10
	304 Move X21, X0
	305 Move X0, 0x1F24000
	306 Move X0, [X0+3072]
	307 Call 0x1C17D08
	308 Move X1, X0
	309 Move X0, X21
	310 Move X2, X31
	311 Call ArgumentNullException..ctor, X0, X1
	312 Move X1, [X19+24]
	313 Move X0, X21
	314 Call 0x1C17DEC
	315 Call 0x1C17F20
	316 Call 0x1C181E0
	317 Call 0x3EB2B20

Method: System.Void ApplyParameterOverride(UnityEngine.InputSystem.InputAction action, System.Linq.Expressions.Expression`1<System.Func`2<TObject, TValue>> expr, TValue value, UnityEngine.InputSystem.InputBinding bindingMask = null)

Disassembly:
	0x021F71FC ADD X0, X23, X0
	0x021F7200 MOV X1, X31
	0x021F7204 BL 0x37501C4
	0x021F7208 MOV W25, W0
	0x021F720C UBFM X26, X25, 0x20, 0x1F
	0x021F7210 MOVZ X27, 0x1
	0x021F7214 LDR X8, [X22 + 0x28]
	0x021F7218 CBZ X8, 0x21F72B4
	0x021F721C LDR W9, [X8 + 0x18]
	0x021F7220 CMP X25, X9
	0x021F7224 B.CS 0x21F72B8
	0x021F7228 LDR X9, [X19 + 0x38]
	0x021F722C ADD X8, X8, X26, 0x1D, ASR
	0x021F7230 LDR X23, [X8 + 0x20]
	0x021F7234 LDR X0, [X9]
	0x021F7238 LDRB W9, [X0 + 0x135]
	0x021F723C TBNZ X9, 0x0, 0x21F7244
	0x021F7240 BL 0x1C5C684
	0x021F7244 CBZ X23, 0x21F7288
	0x021F7248 LDR X8, [X23]
	0x021F724C LDRB W9, [X0 + 0x130]
	0x021F7250 LDRB W10, [X8 + 0x130]
	0x021F7254 CMP W10, W9
	0x021F7258 B.CC 0x21F7288
	0x021F725C LDR X10, [X8 + 0xC8]
	0x021F7260 ADD X9, X10, X9, 0x3, LSL
	0x021F7264 LDUR X9, [X9 - 0x8]
	0x021F7268 CMP X9, X0
	0x021F726C B.NE 0x21F7288
	0x021F7270 LDP X9, X3, [X8 + 0x1A8]
	0x021F7274 MOV X0, X23
	0x021F7278 MOV W1, W21
	0x021F727C MOV X2, X20
	0x021F7280 BLR X9
	0x021F7284 MOV W21, W0
	0x021F7288 ADD X26, X26, X27
	0x021F728C SUBS X24, X24, 0x1
	0x021F7290 ADD X25, X25, 0x1
	0x021F7294 B.NE 0x21F7214
	0x021F7298 MOV W0, W21
	0x021F729C LDP X20, X19, [X31 + 0x40]
	0x021F72A0 LDP X22, X21, [X31 + 0x30]
	0x021F72A4 LDP X24, X23, [X31 + 0x20]
	0x021F72A8 LDP X26, X25, [X31 + 0x10]
	0x021F72AC LDP X30, X27, [X31], #0x50
	0x021F72B0 RET
	0x021F72B4 BL 0x1C16F20
	0x021F72B8 BL 0x1C16F28
	0x021F72BC STP D11, D10, [X31 - 0x70]!
	0x021F72C0 STP D9, D8, [X31 + 0x10]
	0x021F72C4 STR X30, [X31 + 0x20]
	0x021F72C8 STP X26, X25, [X31 + 0x30]
	0x021F72CC STP X24, X23, [X31 + 0x40]
	0x021F72D0 STP X22, X21, [X31 + 0x50]
	0x021F72D4 STP X20, X19, [X31 + 0x60]
	0x021F72D8 LDR X8, [X3 + 0x38]
	0x021F72DC MOV X19, X3
	0x021F72E0 MOV X20, X2
	0x021F72E4 MOV V8.16B, V3.16B
	0x021F72E8 MOV V9.16B, V2.16B
	0x021F72EC MOV V10.16B, V1.16B
	0x021F72F0 MOV V11.16B, V0.16B
	0x021F72F4 MOV W22, W1
	0x021F72F8 MOV X21, X0
	0x021F72FC CBNZ X8, 0x21F7308
	0x021F7300 MOV X0, X19
	0x021F7304 BL 0x1C5C6E0
	0x021F7308 MOV X0, X21
	0x021F730C MOV X1, X31
	0x021F7310 BL 0x374A7E8
	0x021F7314 SXTW X8, W22
	0x021F7318 ADD X8, X0, X8, 0x5, LSL
	0x021F731C LDRB W23, [X8 + 0x2]
	0x021F7320 CBZ X23, 0x21F73E8
	0x021F7324 MOV X0, X21
	0x021F7328 MOV X1, X31
	0x021F732C SBFM X22, X22, 0x3B, 0x1F
	0x021F7330 BL 0x374A7E8
	0x021F7334 ADD X0, X22, X0
	0x021F7338 MOV X1, X31
	0x021F733C BL 0x37501C4
	0x021F7340 MOV W24, W0
	0x021F7344 UBFM X25, X24, 0x20, 0x1F
	0x021F7348 MOVZ X26, 0x1
	0x021F734C LDR X8, [X21 + 0x28]
	0x021F7350 CBZ X8, 0x21F7418
	0x021F7354 LDR W9, [X8 + 0x18]
	0x021F7358 CMP X24, X9
	0x021F735C B.CS 0x21F741C
	0x021F7360 LDR X9, [X19 + 0x38]
	0x021F7364 ADD X8, X8, X25, 0x1D, ASR
	0x021F7368 LDR X22, [X8 + 0x20]
	0x021F736C LDR X0, [X9]
	0x021F7370 LDRB W9, [X0 + 0x135]
	0x021F7374 TBNZ X9, 0x0, 0x21F737C
	0x021F7378 BL 0x1C5C684
	0x021F737C CBZ X22, 0x21F73D8
	0x021F7380 LDR X8, [X22]
	0x021F7384 LDRB W9, [X0 + 0x130]
	0x021F7388 LDRB W10, [X8 + 0x130]
	0x021F738C CMP W10, W9
	0x021F7390 B.CC 0x21F73D8
	0x021F7394 LDR X10, [X8 + 0xC8]
	0x021F7398 ADD X9, X10, X9, 0x3, LSL
	0x021F739C LDUR X9, [X9 - 0x8]
	0x021F73A0 CMP X9, X0
	0x021F73A4 B.NE 0x21F73D8
	0x021F73A8 LDP X9, X2, [X8 + 0x1A8]
	0x021F73AC MOV X0, X22
	0x021F73B0 MOV V0.16B, V11.16B
	0x021F73B4 MOV V1.16B, V10.16B
	0x021F73B8 MOV V2.16B, V9.16B
	0x021F73BC MOV V3.16B, V8.16B
	0x021F73C0 MOV X1, X20
	0x021F73C4 BLR X9
	0x021F73C8 MOV V11.16B, V0.16B
	0x021F73CC MOV V10.16B, V1.16B
	0x021F73D0 MOV V9.16B, V2.16B
	0x021F73D4 MOV V8.16B, V3.16B
	0x021F73D8 ADD X25, X25, X26
	0x021F73DC SUBS X23, X23, 0x1
	0x021F73E0 ADD X24, X24, 0x1
	0x021F73E4 B.NE 0x21F734C
	0x021F73E8 MOV V2.16B, V9.16B
	0x021F73EC MOV V3.16B, V8.16B
	0x021F73F0 LDP X20, X19, [X31 + 0x60]
	0x021F73F4 LDP X22, X21, [X31 + 0x50]
	0x021F73F8 LDP X24, X23, [X31 + 0x40]

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Add X29, X31, 0
	014 Subtract X31, X31, 560
	015 Add X19, X31, 0
	016 NotImplemented "Instruction MRS not yet implemented."
	017 Move X8, [X28+40]
	018 Move X20, X4
	019 Move X24, X3
	020 Move X23, X2
	021 Move [X29-16], X8
	022 Move X8, [X4+56]
	023 Move X21, X1
	024 Move X25, X0
	025 Compare X8, 0
	026 JumpIfNotEqual {30}
	027 Move X0, X20
	028 Call 0x1C5D6E0
	029 Move X8, [X20+56]
	030 Move X8, [X8+8]
	031 Move W26, [X8+252]
	032 Add X8, X31, 0
	033 Add X9, X26, 15
	034 And X9, X9, 0x1FFFFFFFF
	035 Subtract X27, X8, X9
	036 Add X31, X27, 0
	037 Compare X25, 0
	038 JumpIfEqual {120}
	039 Compare X21, 0
	040 JumpIfEqual {127}
	041 Move X0, X25
	042 Move X1, X31
	043 Call InputAction.GetOrCreateActionMap, X0
	044 Compare X0, 0
	045 JumpIfEqual {142}
	046 Move X1, X31
	047 Move X22, X0
	048 Call InputActionMap.ResolveBindingsIfNecessary, X0
	049 Move X8, [X25+16]
	050 Subtract X0, X29, 224
	051 Move W2, 88
	052 Move X1, X24
	053 Move [X24+48], X8
	054 Call 0x3EB2AC0
	055 Move X0, X27
	056 Move X1, X23
	057 Move X2, X26
	058 Call 0x3EB2AC0
	059 Move X8, [X20+56]
	060 Add X3, X19, 216
	061 Subtract X4, X29, 136
	062 Move X2, X31
	063 Move X1, [X8+16]
	064 Move X0, [X1]
	065 Move [X19+216], X27
	066 Move X8, [X1+16]
	067 NotImplemented "Instruction BLR not yet implemented."
	068 Move X24, [X20+56]
	069 Move X20, [X29-136]
	070 Move X23, [X29-128]
	071 Add X0, X19, 128
	072 Subtract X1, X29, 224
	073 Move X8, [X24+24]
	074 Move W2, 88
	075 Move X25, [X8]
	076 Call 0x3EB2AC0
	077 Move X4, [X24+24]
	078 Add X8, X19, 216
	079 Add X1, X19, 128
	080 Move X0, X21
	081 Move X2, X20
	082 Move X3, X23
	083 NotImplemented "Instruction BLR not yet implemented."
	084 Subtract X0, X29, 136
	085 Add X1, X19, 216
	086 Move W2, 120
	087 Call 0x3EB2AC0
	088 Move X20, [X22+96]
	089 Move W21, [X22+88]
	090 Add X0, X19, 8
	091 Subtract X1, X29, 136
	092 Move W2, 120
	093 Add X23, X22, 208
	094 Add X22, X22, 204
	095 Call 0x3EB2AC0
	096 Add X4, X19, 8
	097 Move X0, X20
	098 Move W1, W21
	099 Move X2, X23
	100 Move X3, X22
	101 Move X5, X31
	102 Call InputActionRebindingExtensions.ApplyParameterOverride, X0, X1, X2, X3, X4
	103 Move X8, [X28+40]
	104 NotImplemented "Instruction LDUR not yet implemented."
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Add X31, X29, 0
	107 Move X20, [X31+80]
	108 Move X19, [X31+88]
	109 Move X22, [X31+64]
	110 Move X21, [X31+72]
	111 Move X24, [X31+48]
	112 Move X23, [X31+56]
	113 Move X26, [X31+32]
	114 Move X25, [X31+40]
	115 Move X28, [X31+16]
	116 Move X27, [X31+24]
	117 Move X29, [X31+96]
	118 Move X30, [X31+104]
	119 Return 
	120 Move X0, 0x1F02000
	121 Move X0, [X0+1320]
	122 Call 0x1C17D08
	123 Call 0x1C17F10
	124 Move X21, X0
	125 Move X0, 0x1F25000
	126 Move X0, [X0+3064]
	127 Move X0, 0x1F02000
	128 Move X0, [X0+1320]
	129 Call 0x1C17D08
	130 Call 0x1C17F10
	131 Move X21, X0
	132 Move X0, 0x1F25000
	133 Move X0, [X0+3072]
	134 Call 0x1C17D08
	135 Move X1, X0
	136 Move X0, X21
	137 Move X2, X31
	138 Call ArgumentNullException..ctor, X0, X1
	139 Move X0, X21
	140 Move X1, X20
	141 Call 0x1C17DEC
	142 Call 0x1C17F20
	143 Call 0x3EB2B20

Method: System.Void ApplyParameterOverride(UnityEngine.InputSystem.InputActionMap actionMap, System.Linq.Expressions.Expression`1<System.Func`2<TObject, TValue>> expr, TValue value, UnityEngine.InputSystem.InputBinding bindingMask = null)

Disassembly:
	0x021F7620 LDUR X9, [X9 - 0x8]
	0x021F7624 CMP X9, X0
	0x021F7628 B.NE 0x21F764C
	0x021F762C LDP X9, X2, [X8 + 0x1A8]
	0x021F7630 MOV X0, X22
	0x021F7634 MOV V0.16B, V9.16B
	0x021F7638 MOV V1.16B, V8.16B
	0x021F763C MOV X1, X20
	0x021F7640 BLR X9
	0x021F7644 MOV V9.16B, V0.16B
	0x021F7648 MOV V8.16B, V1.16B
	0x021F764C ADD X25, X25, X26
	0x021F7650 SUBS X23, X23, 0x1
	0x021F7654 ADD X24, X24, 0x1
	0x021F7658 B.NE 0x21F75D0
	0x021F765C LDP X20, X19, [X31 + 0x50]
	0x021F7660 LDP X22, X21, [X31 + 0x40]
	0x021F7664 LDP X24, X23, [X31 + 0x30]
	0x021F7668 LDP X26, X25, [X31 + 0x20]
	0x021F766C LDR X30, [X31 + 0x10]
	0x021F7670 MOV V0.16B, V9.16B
	0x021F7674 MOV V1.16B, V8.16B
	0x021F7678 LDP D9, D8, [X31], #0x60
	0x021F767C RET
	0x021F7680 BL 0x1C16F20
	0x021F7684 BL 0x1C16F28
	0x021F7688 STR D10, [X31 - 0x60]!
	0x021F768C STP D9, D8, [X31 + 0x8]
	0x021F7690 STR X30, [X31 + 0x18]
	0x021F7694 STP X26, X25, [X31 + 0x20]
	0x021F7698 STP X24, X23, [X31 + 0x30]
	0x021F769C STP X22, X21, [X31 + 0x40]
	0x021F76A0 STP X20, X19, [X31 + 0x50]
	0x021F76A4 LDR X8, [X3 + 0x38]
	0x021F76A8 MOV X19, X3
	0x021F76AC MOV X20, X2
	0x021F76B0 MOV V8.16B, V2.16B
	0x021F76B4 MOV V9.16B, V1.16B
	0x021F76B8 MOV V10.16B, V0.16B
	0x021F76BC MOV W22, W1
	0x021F76C0 MOV X21, X0
	0x021F76C4 CBNZ X8, 0x21F76D0
	0x021F76C8 MOV X0, X19
	0x021F76CC BL 0x1C5C6E0
	0x021F76D0 MOV X0, X21
	0x021F76D4 MOV X1, X31
	0x021F76D8 BL 0x374A7E8
	0x021F76DC SXTW X8, W22
	0x021F76E0 ADD X8, X0, X8, 0x5, LSL
	0x021F76E4 LDRB W23, [X8 + 0x2]
	0x021F76E8 CBZ X23, 0x21F77A8
	0x021F76EC MOV X0, X21
	0x021F76F0 MOV X1, X31
	0x021F76F4 SBFM X22, X22, 0x3B, 0x1F
	0x021F76F8 BL 0x374A7E8
	0x021F76FC ADD X0, X22, X0
	0x021F7700 MOV X1, X31
	0x021F7704 BL 0x37501C4
	0x021F7708 MOV W24, W0
	0x021F770C UBFM X25, X24, 0x20, 0x1F
	0x021F7710 MOVZ X26, 0x1
	0x021F7714 LDR X8, [X21 + 0x28]
	0x021F7718 CBZ X8, 0x21F77D4
	0x021F771C LDR W9, [X8 + 0x18]
	0x021F7720 CMP X24, X9
	0x021F7724 B.CS 0x21F77D8
	0x021F7728 LDR X9, [X19 + 0x38]
	0x021F772C ADD X8, X8, X25, 0x1D, ASR
	0x021F7730 LDR X22, [X8 + 0x20]
	0x021F7734 LDR X0, [X9]
	0x021F7738 LDRB W9, [X0 + 0x135]
	0x021F773C TBNZ X9, 0x0, 0x21F7744
	0x021F7740 BL 0x1C5C684
	0x021F7744 CBZ X22, 0x21F7798
	0x021F7748 LDR X8, [X22]
	0x021F774C LDRB W9, [X0 + 0x130]
	0x021F7750 LDRB W10, [X8 + 0x130]
	0x021F7754 CMP W10, W9
	0x021F7758 B.CC 0x21F7798
	0x021F775C LDR X10, [X8 + 0xC8]
	0x021F7760 ADD X9, X10, X9, 0x3, LSL
	0x021F7764 LDUR X9, [X9 - 0x8]
	0x021F7768 CMP X9, X0
	0x021F776C B.NE 0x21F7798
	0x021F7770 LDP X9, X2, [X8 + 0x1A8]
	0x021F7774 MOV X0, X22
	0x021F7778 MOV V0.16B, V10.16B
	0x021F777C MOV V1.16B, V9.16B
	0x021F7780 MOV V2.16B, V8.16B
	0x021F7784 MOV X1, X20
	0x021F7788 BLR X9
	0x021F778C MOV V10.16B, V0.16B
	0x021F7790 MOV V9.16B, V1.16B
	0x021F7794 MOV V8.16B, V2.16B
	0x021F7798 ADD X25, X25, X26
	0x021F779C SUBS X23, X23, 0x1
	0x021F77A0 ADD X24, X24, 0x1
	0x021F77A4 B.NE 0x21F7714
	0x021F77A8 MOV V1.16B, V9.16B
	0x021F77AC MOV V2.16B, V8.16B
	0x021F77B0 LDP X20, X19, [X31 + 0x50]
	0x021F77B4 LDP X22, X21, [X31 + 0x40]
	0x021F77B8 LDP X24, X23, [X31 + 0x30]
	0x021F77BC LDP X26, X25, [X31 + 0x20]
	0x021F77C0 LDR X30, [X31 + 0x18]
	0x021F77C4 LDP D9, D8, [X31 + 0x8]
	0x021F77C8 MOV V0.16B, V10.16B
	0x021F77CC LDR V10, [X31], #0x60
	0x021F77D0 RET
	0x021F77D4 BL 0x1C16F20
	0x021F77D8 BL 0x1C16F28
	0x021F77DC STP X29, X30, [X31 - 0x60]!
	0x021F77E0 STP X28, X27, [X31 + 0x10]
	0x021F77E4 STP X26, X25, [X31 + 0x20]
	0x021F77E8 STP X24, X23, [X31 + 0x30]
	0x021F77EC STP X22, X21, [X31 + 0x40]
	0x021F77F0 STP X20, X19, [X31 + 0x50]
	0x021F77F4 ADD X29, X31, 0x0
	0x021F77F8 SUB X31, X31, 0x60
	0x021F77FC STUR X3, [X29 - 0x40]
	0x021F7800 STUR X2, [X29 - 0x28]

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Add X29, X31, 0
	014 Subtract X31, X31, 544
	015 Add X19, X31, 0
	016 NotImplemented "Instruction MRS not yet implemented."
	017 Move X8, [X27+40]
	018 Move X20, X4
	019 Move X24, X3
	020 Move X23, X2
	021 Move [X29-8], X8
	022 Move X8, [X4+56]
	023 Move X22, X1
	024 Move X21, X0
	025 Compare X8, 0
	026 JumpIfNotEqual {30}
	027 Move X0, X20
	028 Call 0x1C5D6E0
	029 Move X8, [X20+56]
	030 Move X8, [X8+8]
	031 Move W25, [X8+252]
	032 Add X8, X31, 0
	033 Add X9, X25, 15
	034 And X9, X9, 0x1FFFFFFFF
	035 Subtract X26, X8, X9
	036 Add X31, X26, 0
	037 Compare X21, 0
	038 JumpIfEqual {113}
	039 Compare X22, 0
	040 JumpIfEqual {120}
	041 Move X0, X21
	042 Move X1, X31
	043 Call InputActionMap.ResolveBindingsIfNecessary, X0
	044 Subtract X0, X29, 216
	045 Move W2, 88
	046 Move X1, X24
	047 Call 0x3EB2AC0
	048 Move X0, X26
	049 Move X1, X23
	050 Move X2, X25
	051 Call 0x3EB2AC0
	052 Move X8, [X20+56]
	053 Add X3, X19, 208
	054 Subtract X4, X29, 128
	055 Move X2, X31
	056 Move X1, [X8+16]
	057 Move X0, [X1]
	058 Move [X19+208], X26
	059 Move X8, [X1+16]
	060 NotImplemented "Instruction BLR not yet implemented."
	061 Move X24, [X20+56]
	062 Move X20, [X29-128]
	063 Move X23, [X29-120]
	064 Add X0, X19, 120
	065 Subtract X1, X29, 216
	066 Move X8, [X24+24]
	067 Move W2, 88
	068 Move X25, [X8]
	069 Call 0x3EB2AC0
	070 Move X4, [X24+24]
	071 Add X8, X19, 208
	072 Add X1, X19, 120
	073 Move X0, X22
	074 Move X2, X20
	075 Move X3, X23
	076 NotImplemented "Instruction BLR not yet implemented."
	077 Subtract X0, X29, 128
	078 Add X1, X19, 208
	079 Move W2, 120
	080 Call 0x3EB2AC0
	081 Move X20, [X21+96]
	082 Move W22, [X21+88]
	083 Add X0, X19, 0
	084 Subtract X1, X29, 128
	085 Move W2, 120
	086 Add X23, X21, 208
	087 Add X21, X21, 204
	088 Call 0x3EB2AC0
	089 Add X4, X19, 0
	090 Move X0, X20
	091 Move W1, W22
	092 Move X2, X23
	093 Move X3, X21
	094 Move X5, X31
	095 Call InputActionRebindingExtensions.ApplyParameterOverride, X0, X1, X2, X3, X4
	096 Move X8, [X27+40]
	097 NotImplemented "Instruction LDUR not yet implemented."
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Add X31, X29, 0
	100 Move X20, [X31+80]
	101 Move X19, [X31+88]
	102 Move X22, [X31+64]
	103 Move X21, [X31+72]
	104 Move X24, [X31+48]
	105 Move X23, [X31+56]
	106 Move X26, [X31+32]
	107 Move X25, [X31+40]
	108 Move X28, [X31+16]
	109 Move X27, [X31+24]
	110 Move X29, [X31+96]
	111 Move X30, [X31+104]
	112 Return 
	113 Move X0, 0x1F02000
	114 Move X0, [X0+1320]
	115 Call 0x1C17D08
	116 Call 0x1C17F10
	117 Move X21, X0
	118 Move X0, 0x1F25000
	119 Move X0, [X0+3088]
	120 Move X0, 0x1F02000
	121 Move X0, [X0+1320]
	122 Call 0x1C17D08
	123 Call 0x1C17F10
	124 Move X21, X0
	125 Move X0, 0x1F25000
	126 Move X0, [X0+3072]
	127 Call 0x1C17D08
	128 Move X1, X0
	129 Move X0, X21
	130 Move X2, X31
	131 Call ArgumentNullException..ctor, X0, X1
	132 Move X0, X21
	133 Move X1, X20
	134 Call 0x1C17DEC
	135 Call 0x3EB2B20

Method: System.Void ApplyParameterOverride(UnityEngine.InputSystem.InputActionAsset asset, System.Linq.Expressions.Expression`1<System.Func`2<TObject, TValue>> expr, TValue value, UnityEngine.InputSystem.InputBinding bindingMask = null)

Disassembly:
	0x021F73FC LDP X26, X25, [X31 + 0x30]
	0x021F7400 LDR X30, [X31 + 0x20]
	0x021F7404 LDP D9, D8, [X31 + 0x10]
	0x021F7408 MOV V0.16B, V11.16B
	0x021F740C MOV V1.16B, V10.16B
	0x021F7410 LDP D11, D10, [X31], #0x70
	0x021F7414 RET
	0x021F7418 BL 0x1C16F20
	0x021F741C BL 0x1C16F28
	0x021F7420 STR D8, [X31 - 0x50]!
	0x021F7424 STR X30, [X31 + 0x8]
	0x021F7428 STP X26, X25, [X31 + 0x10]
	0x021F742C STP X24, X23, [X31 + 0x20]
	0x021F7430 STP X22, X21, [X31 + 0x30]
	0x021F7434 STP X20, X19, [X31 + 0x40]
	0x021F7438 LDR X8, [X3 + 0x38]
	0x021F743C MOV X19, X3
	0x021F7440 MOV X20, X2
	0x021F7444 MOV V8.16B, V0.16B
	0x021F7448 MOV W22, W1
	0x021F744C MOV X21, X0
	0x021F7450 CBNZ X8, 0x21F745C
	0x021F7454 MOV X0, X19
	0x021F7458 BL 0x1C5C6E0
	0x021F745C MOV X0, X21
	0x021F7460 MOV X1, X31
	0x021F7464 BL 0x374A7E8
	0x021F7468 SXTW X8, W22
	0x021F746C ADD X8, X0, X8, 0x5, LSL
	0x021F7470 LDRB W23, [X8 + 0x2]
	0x021F7474 CBZ X23, 0x21F7524
	0x021F7478 MOV X0, X21
	0x021F747C MOV X1, X31
	0x021F7480 SBFM X22, X22, 0x3B, 0x1F
	0x021F7484 BL 0x374A7E8
	0x021F7488 ADD X0, X22, X0
	0x021F748C MOV X1, X31
	0x021F7490 BL 0x37501C4
	0x021F7494 MOV W24, W0
	0x021F7498 UBFM X25, X24, 0x20, 0x1F
	0x021F749C MOVZ X26, 0x1
	0x021F74A0 LDR X8, [X21 + 0x28]
	0x021F74A4 CBZ X8, 0x21F7544
	0x021F74A8 LDR W9, [X8 + 0x18]
	0x021F74AC CMP X24, X9
	0x021F74B0 B.CS 0x21F7548
	0x021F74B4 LDR X9, [X19 + 0x38]
	0x021F74B8 ADD X8, X8, X25, 0x1D, ASR
	0x021F74BC LDR X22, [X8 + 0x20]
	0x021F74C0 LDR X0, [X9]
	0x021F74C4 LDRB W9, [X0 + 0x135]
	0x021F74C8 TBNZ X9, 0x0, 0x21F74D0
	0x021F74CC BL 0x1C5C684
	0x021F74D0 CBZ X22, 0x21F7514
	0x021F74D4 LDR X8, [X22]
	0x021F74D8 LDRB W9, [X0 + 0x130]
	0x021F74DC LDRB W10, [X8 + 0x130]
	0x021F74E0 CMP W10, W9
	0x021F74E4 B.CC 0x21F7514
	0x021F74E8 LDR X10, [X8 + 0xC8]
	0x021F74EC ADD X9, X10, X9, 0x3, LSL
	0x021F74F0 LDUR X9, [X9 - 0x8]
	0x021F74F4 CMP X9, X0
	0x021F74F8 B.NE 0x21F7514
	0x021F74FC LDP X9, X2, [X8 + 0x1A8]
	0x021F7500 MOV X0, X22
	0x021F7504 MOV V0.16B, V8.16B
	0x021F7508 MOV X1, X20
	0x021F750C BLR X9
	0x021F7510 MOV V8.16B, V0.16B
	0x021F7514 ADD X25, X25, X26
	0x021F7518 SUBS X23, X23, 0x1
	0x021F751C ADD X24, X24, 0x1
	0x021F7520 B.NE 0x21F74A0
	0x021F7524 LDP X20, X19, [X31 + 0x40]
	0x021F7528 LDP X22, X21, [X31 + 0x30]
	0x021F752C LDP X24, X23, [X31 + 0x20]
	0x021F7530 LDP X26, X25, [X31 + 0x10]
	0x021F7534 LDR X30, [X31 + 0x8]
	0x021F7538 MOV V0.16B, V8.16B
	0x021F753C LDR V8, [X31], #0x50
	0x021F7540 RET
	0x021F7544 BL 0x1C16F20
	0x021F7548 BL 0x1C16F28
	0x021F754C STP D9, D8, [X31 - 0x60]!
	0x021F7550 STR X30, [X31 + 0x10]
	0x021F7554 STP X26, X25, [X31 + 0x20]
	0x021F7558 STP X24, X23, [X31 + 0x30]
	0x021F755C STP X22, X21, [X31 + 0x40]
	0x021F7560 STP X20, X19, [X31 + 0x50]
	0x021F7564 LDR X8, [X3 + 0x38]
	0x021F7568 MOV X19, X3
	0x021F756C MOV X20, X2
	0x021F7570 MOV V8.16B, V1.16B
	0x021F7574 MOV V9.16B, V0.16B
	0x021F7578 MOV W22, W1
	0x021F757C MOV X21, X0
	0x021F7580 CBNZ X8, 0x21F758C
	0x021F7584 MOV X0, X19
	0x021F7588 BL 0x1C5C6E0
	0x021F758C MOV X0, X21
	0x021F7590 MOV X1, X31
	0x021F7594 BL 0x374A7E8
	0x021F7598 SXTW X8, W22
	0x021F759C ADD X8, X0, X8, 0x5, LSL
	0x021F75A0 LDRB W23, [X8 + 0x2]
	0x021F75A4 CBZ X23, 0x21F765C
	0x021F75A8 MOV X0, X21
	0x021F75AC MOV X1, X31
	0x021F75B0 SBFM X22, X22, 0x3B, 0x1F
	0x021F75B4 BL 0x374A7E8
	0x021F75B8 ADD X0, X22, X0
	0x021F75BC MOV X1, X31
	0x021F75C0 BL 0x37501C4
	0x021F75C4 MOV W24, W0
	0x021F75C8 UBFM X25, X24, 0x20, 0x1F
	0x021F75CC MOVZ X26, 0x1
	0x021F75D0 LDR X8, [X21 + 0x28]
	0x021F75D4 CBZ X8, 0x21F7680
	0x021F75D8 LDR W9, [X8 + 0x18]
	0x021F75DC CMP X24, X9
	0x021F75E0 B.CS 0x21F7684
	0x021F75E4 LDR X9, [X19 + 0x38]
	0x021F75E8 ADD X8, X8, X25, 0x1D, ASR
	0x021F75EC LDR X22, [X8 + 0x20]
	0x021F75F0 LDR X0, [X9]
	0x021F75F4 LDRB W9, [X0 + 0x135]
	0x021F75F8 TBNZ X9, 0x0, 0x21F7600
	0x021F75FC BL 0x1C5C684
	0x021F7600 CBZ X22, 0x21F764C
	0x021F7604 LDR X8, [X22]
	0x021F7608 LDRB W9, [X0 + 0x130]
	0x021F760C LDRB W10, [X8 + 0x130]
	0x021F7610 CMP W10, W9
	0x021F7614 B.CC 0x21F764C
	0x021F7618 LDR X10, [X8 + 0xC8]
	0x021F761C ADD X9, X10, X9, 0x3, LSL

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Add X29, X31, 0
	014 Subtract X31, X31, 544
	015 Add X19, X31, 0
	016 NotImplemented "Instruction MRS not yet implemented."
	017 Move X8, [X27+40]
	018 Move X20, X4
	019 Move X24, X3
	020 Move X23, X2
	021 Move [X29-8], X8
	022 Move X8, [X4+56]
	023 Move X22, X1
	024 Move X21, X0
	025 Compare X8, 0
	026 JumpIfNotEqual {36}
	027 Move X0, 0x1EFD000
	028 Move X0, [X0+1432]
	029 Call 0x1C17CF4
	030 Move X8, [X20+56]
	031 Compare X8, 0
	032 JumpIfNotEqual {36}
	033 Move X0, X20
	034 Call 0x1C5D6E0
	035 Move X8, [X20+56]
	036 Move X8, [X8+8]
	037 Move W25, [X8+252]
	038 Add X8, X31, 0
	039 Add X9, X25, 15
	040 And X9, X9, 0x1FFFFFFFF
	041 Subtract X26, X8, X9
	042 Add X31, X26, 0
	043 Move X8, 0x1EFD000
	044 Move X8, [X8+1432]
	045 Move X0, [X8]
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1C17DFC
	050 Move X0, X21
	051 Move X1, X31
	052 Move X2, X31
	053 Call Object.op_Equality, X0, X1
	054 Move TEMP, X0
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfEqual {135}
	058 Compare X22, 0
	059 JumpIfEqual {142}
	060 Compare X21, 0
	061 JumpIfEqual {157}
	062 Move X0, X21
	063 Move X1, X31
	064 Call InputActionAsset.ResolveBindingsIfNecessary, X0
	065 Subtract X0, X29, 216
	066 Move W2, 88
	067 Move X1, X24
	068 Call 0x3EB2AC0
	069 Move X0, X26
	070 Move X1, X23
	071 Move X2, X25
	072 Call 0x3EB2AC0
	073 Move X8, [X20+56]
	074 Add X3, X19, 208
	075 Subtract X4, X29, 128
	076 Move X2, X31
	077 Move X1, [X8+16]
	078 Move X0, [X1]
	079 Move [X19+208], X26
	080 Move X8, [X1+16]
	081 NotImplemented "Instruction BLR not yet implemented."
	082 Move X24, [X20+56]
	083 Move X20, [X29-128]
	084 Move X23, [X29-120]
	085 Add X0, X19, 120
	086 Subtract X1, X29, 216
	087 Move X8, [X24+24]
	088 Move W2, 88
	089 Move X25, [X8]
	090 Call 0x3EB2AC0
	091 Move X4, [X24+24]
	092 Add X8, X19, 208
	093 Add X1, X19, 120
	094 Move X0, X22
	095 Move X2, X20
	096 Move X3, X23
	097 NotImplemented "Instruction BLR not yet implemented."
	098 Subtract X0, X29, 128
	099 Add X1, X19, 208
	100 Move W2, 120
	101 Call 0x3EB2AC0
	102 Move X20, [X21+40]
	103 Add X0, X19, 0
	104 Subtract X1, X29, 128
	105 Move W2, 120
	106 Add X22, X21, 152
	107 Add X21, X21, 144
	108 Call 0x3EB2AC0
	109 Add X4, X19, 0
	110 Move TEMP, 0
	111 Not TEMP
	112 Move W1, TEMP
	113 Move X0, X20
	114 Move X2, X22
	115 Move X3, X21
	116 Move X5, X31
	117 Call InputActionRebindingExtensions.ApplyParameterOverride, X0, X1, X2, X3, X4
	118 Move X8, [X27+40]
	119 NotImplemented "Instruction LDUR not yet implemented."
	120 NotImplemented "Instruction CMP not yet implemented."
	121 Add X31, X29, 0
	122 Move X20, [X31+80]
	123 Move X19, [X31+88]
	124 Move X22, [X31+64]
	125 Move X21, [X31+72]
	126 Move X24, [X31+48]
	127 Move X23, [X31+56]
	128 Move X26, [X31+32]
	129 Move X25, [X31+40]
	130 Move X28, [X31+16]
	131 Move X27, [X31+24]
	132 Move X29, [X31+96]
	133 Move X30, [X31+104]
	134 Return 
	135 Move X0, 0x1F02000
	136 Move X0, [X0+1320]
	137 Call 0x1C17D08
	138 Call 0x1C17F10
	139 Move X21, X0
	140 Move X0, 0x1F25000
	141 Move X0, [X0+3080]
	142 Move X0, 0x1F02000
	143 Move X0, [X0+1320]
	144 Call 0x1C17D08
	145 Call 0x1C17F10
	146 Move X21, X0
	147 Move X0, 0x1F25000
	148 Move X0, [X0+3072]
	149 Call 0x1C17D08
	150 Move X1, X0
	151 Move X0, X21
	152 Move X2, X31
	153 Call ArgumentNullException..ctor, X0, X1
	154 Move X0, X21
	155 Move X1, X20
	156 Call 0x1C17DEC
	157 Call 0x1C17F20
	158 Call 0x3EB2B20

Method: UnityEngine.InputSystem.InputActionRebindingExtensions/ParameterOverride ExtractParameterOverride(System.Linq.Expressions.Expression`1<System.Func`2<TObject, TValue>> expr, UnityEngine.InputSystem.InputBinding bindingMask = null, UnityEngine.InputSystem.Utilities.PrimitiveValue value = null)

Disassembly:
	0x021F7804 MRS X8, 0xC000
	0x021F7808 STP X8, X4, [X29 - 0x58]
	0x021F780C LDR X8, [X8 + 0x28]
	0x021F7810 MOV X21, X5
	0x021F7814 MOV W27, W1
	0x021F7818 MOV X23, X0
	0x021F781C STUR X8, [X29 - 0x8]
	0x021F7820 LDR X8, [X5 + 0x38]
	0x021F7824 CBNZ X8, 0x21F7834
	0x021F7828 MOV X0, X21
	0x021F782C BL 0x1C5C6E0
	0x021F7830 LDR X8, [X21 + 0x38]
	0x021F7834 LDR X8, [X8 + 0x8]
	0x021F7838 LDR W9, [X8 + 0xFC]
	0x021F783C ADD X8, X31, 0x0
	0x021F7840 STUR X9, [X29 - 0x30]
	0x021F7844 ADD X9, X9, 0xF
	0x021F7848 AND X9, X9, 0x1FFFFFFFF
	0x021F784C SUB X8, X8, X9
	0x021F7850 STUR X8, [X29 - 0x38]
	0x021F7854 ADD X31, X8, 0x0
	0x021F7858 ADD X8, X31, 0x0
	0x021F785C SUB X8, X8, X9
	0x021F7860 STUR X8, [X29 - 0x48]
	0x021F7864 ADD X31, X8, 0x0
	0x021F7868 MOV X0, X23
	0x021F786C MOV X1, X31
	0x021F7870 BL 0x374A7E8
	0x021F7874 SXTW X8, W27
	0x021F7878 ADD X8, X0, X8, 0x5, LSL
	0x021F787C LDRB W19, [X8 + 0x2]
	0x021F7880 CBZ X19, 0x21F796C
	0x021F7884 MOV X0, X23
	0x021F7888 MOV X1, X31
	0x021F788C SBFM X20, X27, 0x3B, 0x1F
	0x021F7890 BL 0x374A7E8
	0x021F7894 ADD X0, X20, X0
	0x021F7898 MOV X1, X31
	0x021F789C BL 0x37501C4
	0x021F78A0 LDP X25, X24, [X29 - 0x30]
	0x021F78A4 MOV W28, W0
	0x021F78A8 UBFM X22, X28, 0x20, 0x1F
	0x021F78AC MOVZ X20, 0x1
	0x021F78B0 LDR X8, [X23 + 0x28]
	0x021F78B4 CBZ X8, 0x21F79C4
	0x021F78B8 LDR W9, [X8 + 0x18]
	0x021F78BC CMP X28, X9
	0x021F78C0 B.CS 0x21F79C8
	0x021F78C4 LDR X9, [X21 + 0x38]
	0x021F78C8 ADD X8, X8, X22, 0x1D, ASR
	0x021F78CC LDR X27, [X8 + 0x20]
	0x021F78D0 LDR X0, [X9]
	0x021F78D4 LDRB W9, [X0 + 0x135]
	0x021F78D8 TBNZ X9, 0x0, 0x21F78E0
	0x021F78DC BL 0x1C5C684
	0x021F78E0 CBZ X27, 0x21F795C
	0x021F78E4 LDR X8, [X27]
	0x021F78E8 LDRB W9, [X0 + 0x130]
	0x021F78EC LDRB W10, [X8 + 0x130]
	0x021F78F0 CMP W10, W9
	0x021F78F4 B.CC 0x21F795C
	0x021F78F8 LDR X8, [X8 + 0xC8]
	0x021F78FC ADD X8, X8, X9, 0x3, LSL
	0x021F7900 LDUR X8, [X8 - 0x8]
	0x021F7904 CMP X8, X0
	0x021F7908 B.NE 0x21F795C
	0x021F790C LDUR X26, [X29 - 0x38]
	0x021F7910 MOV X1, X24
	0x021F7914 MOV X2, X25
	0x021F7918 MOV X0, X26
	0x021F791C BL 0x3EB1AC0
	0x021F7920 LDUR X9, [X29 - 0x40]
	0x021F7924 LDR X8, [X27]
	0x021F7928 SUB X3, X29, 0x20
	0x021F792C MOV X2, X27
	0x021F7930 STP X26, X9, [X29 - 0x20]
	0x021F7934 LDUR X26, [X29 - 0x48]
	0x021F7938 STUR X26, [X29 - 0x10]
	0x021F793C LDR X1, [X8 + 0x1B0]
	0x021F7940 MOV X4, X26
	0x021F7944 LDP X0, X8, [X1 + 0x8]
	0x021F7948 BLR X8
	0x021F794C MOV X0, X24
	0x021F7950 MOV X1, X26
	0x021F7954 MOV X2, X25
	0x021F7958 BL 0x3EB1AC0
	0x021F795C ADD X22, X22, X20
	0x021F7960 SUBS X19, X19, 0x1
	0x021F7964 ADD X28, X28, 0x1
	0x021F7968 B.NE 0x21F78B0
	0x021F796C LDP X20, X19, [X29 - 0x38]
	0x021F7970 LDUR X1, [X29 - 0x28]
	0x021F7974 MOV X0, X20
	0x021F7978 MOV X2, X19
	0x021F797C BL 0x3EB1AC0
	0x021F7980 LDUR X0, [X29 - 0x50]
	0x021F7984 MOV X1, X20
	0x021F7988 MOV X2, X19
	0x021F798C BL 0x3EB1AC0
	0x021F7990 LDUR X8, [X29 - 0x58]
	0x021F7994 LDR X8, [X8 + 0x28]
	0x021F7998 LDUR X9, [X29 - 0x8]
	0x021F799C CMP X8, X9
	0x021F79A0 B.NE 0x21F79CC
	0x021F79A4 ADD X31, X29, 0x0
	0x021F79A8 LDP X20, X19, [X31 + 0x50]
	0x021F79AC LDP X22, X21, [X31 + 0x40]
	0x021F79B0 LDP X24, X23, [X31 + 0x30]
	0x021F79B4 LDP X26, X25, [X31 + 0x20]
	0x021F79B8 LDP X28, X27, [X31 + 0x10]
	0x021F79BC LDP X29, X30, [X31], #0x60
	0x021F79C0 RET
	0x021F79C4 BL 0x1C16F20
	0x021F79C8 BL 0x1C16F28
	0x021F79CC BL 0x3EB1B20
	0x021F79D0 SUB X31, X31, 0x70
	0x021F79D4 STP X29, X30, [X31 + 0x10]
	0x021F79D8 STP X28, X27, [X31 + 0x20]
	0x021F79DC STP X26, X25, [X31 + 0x30]
	0x021F79E0 STP X24, X23, [X31 + 0x40]
	0x021F79E4 STP X22, X21, [X31 + 0x50]
	0x021F79E8 STP X20, X19, [X31 + 0x60]
	0x021F79EC STRB W5, [X31 + 0x8]
	0x021F79F0 LDR X8, [X6 + 0x38]
	0x021F79F4 MOV X19, X6
	0x021F79F8 MOV X20, X4
	0x021F79FC MOV X21, X3
	0x021F7A00 MOV W24, W1
	0x021F7A04 MOV X23, X0
	0x021F7A08 STR W2, [X31 + 0x4]
	0x021F7A0C CBNZ X8, 0x21F7A38
	0x021F7A10 ADRP X0, 0x1F24000
	0x021F7A14 LDR X0, [X0 + 0xC90]
	0x021F7A18 BL 0x1C16CF4
	0x021F7A1C ADRP X0, 0x1F24000
	0x021F7A20 LDR X0, [X0 + 0xC98]
	0x021F7A24 BL 0x1C16CF4
	0x021F7A28 LDR X8, [X19 + 0x38]
	0x021F7A2C CBNZ X8, 0x21F7A38
	0x021F7A30 MOV X0, X19
	0x021F7A34 BL 0x1C5C6E0
	0x021F7A38 MOVN W8, 0x0
	0x021F7A3C MOV X0, X23
	0x021F7A40 MOV X1, X31
	0x021F7A44 STR W8, [X20]
	0x021F7A48 ADD W28, W24, 0x1
	0x021F7A4C BL 0x374A7C0
	0x021F7A50 CMP W28, W0
	0x021F7A54 B.GE 0x21F7C10
	0x021F7A58 MOV W24, W31
	0x021F7A5C SXTW X25, W28
	0x021F7A60 MOVZ W29, 0x1
	0x021F7A64 MOV X0, X23
	0x021F7A68 MOV X1, X31
	0x021F7A6C BL 0x374A7E8
	0x021F7A70 ADD X0, X0, X25, 0x5, LSL
	0x021F7A74 MOV X1, X31
	0x021F7A78 BL 0x374AB5C
	0x021F7A7C TBZ X0, 0x0, 0x21F7C14
	0x021F7A80 MOV X0, X23
	0x021F7A84 MOV X1, X31
	0x021F7A88 UBFM X26, X25, 0x3B, 0x3A
	0x021F7A8C BL 0x374A7E8
	0x021F7A90 ADD X8, X26, X0
	0x021F7A94 LDRB W8, [X8 + 0x5]
	0x021F7A98 LDR W9, [X31 + 0x4]
	0x021F7A9C CMP W8, W9
	0x021F7AA0 B.NE 0x21F7BE8
	0x021F7AA4 MOV X0, X23
	0x021F7AA8 MOV X1, X31
	0x021F7AAC BL 0x374A7E8
	0x021F7AB0 LDRB W22, [X26, X0, LSL]
	0x021F7AB4 MOV X0, X23
	0x021F7AB8 MOV X1, X31
	0x021F7ABC BL 0x374A7E8
	0x021F7AC0 CBZ X22, 0x21F7BE8
	0x021F7AC4 ADD X8, X26, X0
	0x021F7AC8 LDRH W26, [X8 + 0xE]
	0x021F7ACC LDR X8, [X19 + 0x38]
	0x021F7AD0 MOVZ W3, 0x1
	0x021F7AD4 MOV X0, X23
	0x021F7AD8 MOV W1, W25
	0x021F7ADC LDR X4, [X8 + 0x8]
	0x021F7AE0 MOV W2, W26
	0x021F7AE4 BL 0x21F888C
	0x021F7AE8 MOV W27, W0
	0x021F7AEC TBNZ X29, 0x0, 0x21F7B10
	0x021F7AF0 LDR X8, [X19 + 0x38]
	0x021F7AF4 ADD X0, X31, 0x8
	0x021F7AF8 MOV W1, W27
	0x021F7AFC MOV W2, W24
	0x021F7B00 LDR X3, [X8 + 0x20]
	0x021F7B04 BL 0x29B2514
	0x021F7B08 CMP W0, 0x1
	0x021F7B0C B.LT 0x21F7B18
	0x021F7B10 MOV W24, W27
	0x021F7B14 STR W26, [X20]
	0x021F7B18 CBZ X21, 0x21F7BD0
	0x021F7B1C LDR W8, [X20]
	0x021F7B20 CMP X26, X8
	0x021F7B24 B.NE 0x21F7BD0
	0x021F7B28 LDR X8, [X23 + 0x18]
	0x021F7B2C CBZ X8, 0x21F7C38
	0x021F7B30 LDR W9, [X8 + 0x18]
	0x021F7B34 CMP X26, X9
	0x021F7B38 B.CS 0x21F7C3C
	0x021F7B3C ADD X8, X8, X26, 0x3, LSL
	0x021F7B40 LDR X0, [X8 + 0x20]
	0x021F7B44 CBZ X0, 0x21F7BD0
	0x021F7B48 ADRP X8, 0x1F24000
	0x021F7B4C LDR X9, [X0]
	0x021F7B50 LDR X8, [X8 + 0xC90]
	0x021F7B54 LDRB W10, [X9 + 0x130]
	0x021F7B58 LDR X8, [X8]
	0x021F7B5C LDRB W11, [X8 + 0x130]
	0x021F7B60 CMP W10, W11
	0x021F7B64 B.CC 0x21F7B7C
	0x021F7B68 LDR X12, [X9 + 0xC8]
	0x021F7B6C ADD X11, X12, X11, 0x3, LSL
	0x021F7B70 LDUR X11, [X11 - 0x8]
	0x021F7B74 CMP X11, X8
	0x021F7B78 B.EQ 0x21F7BC0
	0x021F7B7C ADRP X11, 0x1F24000
	0x021F7B80 LDR X11, [X11 + 0xC98]
	0x021F7B84 LDR X11, [X11]
	0x021F7B88 LDRB W12, [X11 + 0x130]
	0x021F7B8C CMP W10, W12
	0x021F7B90 B.CC 0x21F7BD0
	0x021F7B94 LDR X9, [X9 + 0xC8]
	0x021F7B98 ADD X9, X9, X12, 0x3, LSL
	0x021F7B9C LDUR X9, [X9 - 0x8]
	0x021F7BA0 CMP X9, X11
	0x021F7BA4 B.NE 0x21F7BD0
	0x021F7BA8 LDR X8, [X8 + 0xB8]
	0x021F7BAC FMOV S1, W27
	0x021F7BB0 LDR V0, [X8]
	0x021F7BB4 FCMP S0, S1
	0x021F7BB8 CSET W8, LS
	0x021F7BBC B 0x21F7BCC
	0x021F7BC0 MOV X1, X31
	0x021F7BC4 BL 0x3758A6C
	0x021F7BC8 AND W8, W0, 0x1
	0x021F7BCC STRB W8, [X21]
	0x021F7BD0 MOV W29, W31
	0x021F7BD4 MOV W27, W31
	0x021F7BD8 SUBS X22, X22, 0x1
	0x021F7BDC ADD X26, X26, 0x1
	0x021F7BE0 B.NE 0x21F7ACC
	0x021F7BE4 B 0x21F7BEC
	0x021F7BE8 MOV W27, W29
	0x021F7BEC MOV X0, X23
	0x021F7BF0 MOV X1, X31
	0x021F7BF4 ADD W28, W28, 0x1
	0x021F7BF8 BL 0x374A7C0
	0x021F7BFC CMP W28, W0
	0x021F7C00 ADD X25, X25, 0x1
	0x021F7C04 MOV W29, W27
	0x021F7C08 B.LT 0x21F7A64
	0x021F7C0C B 0x21F7C14
	0x021F7C10 MOV W24, W31
	0x021F7C14 MOV W0, W24
	0x021F7C18 LDP X20, X19, [X31 + 0x60]
	0x021F7C1C LDP X22, X21, [X31 + 0x50]
	0x021F7C20 LDP X24, X23, [X31 + 0x40]
	0x021F7C24 LDP X26, X25, [X31 + 0x30]
	0x021F7C28 LDP X28, X27, [X31 + 0x20]
	0x021F7C2C LDP X29, X30, [X31 + 0x10]
	0x021F7C30 ADD X31, X31, 0x70
	0x021F7C34 RET
	0x021F7C38 BL 0x1C16F20
	0x021F7C3C BL 0x1C16F28
	0x021F7C40 SUB X31, X31, 0xB0
	0x021F7C44 STP D15, D14, [X31 + 0x10]
	0x021F7C48 STP D13, D12, [X31 + 0x20]
	0x021F7C4C STP D11, D10, [X31 + 0x30]
	0x021F7C50 STP D9, D8, [X31 + 0x40]
	0x021F7C54 STP X29, X30, [X31 + 0x50]
	0x021F7C58 STP X28, X27, [X31 + 0x60]
	0x021F7C5C STP X26, X25, [X31 + 0x70]
	0x021F7C60 STP X24, X23, [X31 + 0x80]
	0x021F7C64 STP X22, X21, [X31 + 0x90]
	0x021F7C68 STP X20, X19, [X31 + 0xA0]
	0x021F7C6C STRB W5, [X31 + 0x8]
	0x021F7C70 LDR X8, [X6 + 0x38]
	0x021F7C74 MOV X19, X6
	0x021F7C78 MOV X20, X4
	0x021F7C7C MOV X21, X3
	0x021F7C80 MOV W24, W1
	0x021F7C84 MOV X23, X0
	0x021F7C88 STR W2, [X31 + 0x4]
	0x021F7C8C CBNZ X8, 0x21F7CB8
	0x021F7C90 ADRP X0, 0x1F24000
	0x021F7C94 LDR X0, [X0 + 0xC90]
	0x021F7C98 BL 0x1C16CF4
	0x021F7C9C ADRP X0, 0x1F24000
	0x021F7CA0 LDR X0, [X0 + 0xC98]
	0x021F7CA4 BL 0x1C16CF4
	0x021F7CA8 LDR X8, [X19 + 0x38]
	0x021F7CAC CBNZ X8, 0x21F7CB8
	0x021F7CB0 MOV X0, X19
	0x021F7CB4 BL 0x1C5C6E0
	0x021F7CB8 MOVN W8, 0x0
	0x021F7CBC MOV X0, X23
	0x021F7CC0 MOV X1, X31
	0x021F7CC4 STR W8, [X20]
	0x021F7CC8 ADD W26, W24, 0x1
	0x021F7CCC BL 0x374A7C0
	0x021F7CD0 FMOV S9, W31
	0x021F7CD4 CMP W26, W0
	0x021F7CD8 FMOV S10, W31
	0x021F7CDC FMOV S11, W31
	0x021F7CE0 FMOV S8, W31
	0x021F7CE4 B.GE 0x21F7ED4
	0x021F7CE8 ADRP X27, 0x1F24000
	0x021F7CEC LDR X27, [X27 + 0xC90]
	0x021F7CF0 SXTW X24, W26
	0x021F7CF4 FMOV S8, W31
	0x021F7CF8 MOVZ W22, 0x1
	0x021F7CFC FMOV S11, W31
	0x021F7D00 FMOV S10, W31
	0x021F7D04 FMOV S9, W31

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+96], X30
	003 Move [X31+112], X26
	004 Move [X31+120], X25
	005 Move [X31+128], X24
	006 Move [X31+136], X23
	007 Move [X31+144], X22
	008 Move [X31+152], X21
	009 Move [X31+160], X20
	010 Move [X31+168], X19
	011 Move X9, [X4+56]
	012 Move X19, X4
	013 Move X20, X3
	014 Move X21, X2
	015 Move X23, X1
	016 Move X25, X0
	017 Move X22, X8
	018 Compare X9, 0
	019 JumpIfNotEqual {52}
	020 Move X0, 0x1F25000
	021 Move X0, [X0+3096]
	022 Call 0x1C17CF4
	023 Move X0, 0x1F25000
	024 Move X0, [X0+3104]
	025 Call 0x1C17CF4
	026 Move X0, 0x1F25000
	027 Move X0, [X0+3112]
	028 Call 0x1C17CF4
	029 Move X0, 0x1F25000
	030 Move X0, [X0+3120]
	031 Call 0x1C17CF4
	032 Move X0, 0x1F25000
	033 Move X0, [X0+3128]
	034 Call 0x1C17CF4
	035 Move X0, 0x1F25000
	036 Move X0, [X0+3136]
	037 Call 0x1C17CF4
	038 Move X0, 0x1F25000
	039 Move X0, [X0+3144]
	040 Call 0x1C17CF4
	041 Move X0, 0x1EFD000
	042 Move X0, [X0+1728]
	043 Call 0x1C17CF4
	044 Move X0, 0x1F25000
	045 Move X0, [X0+3152]
	046 Call 0x1C17CF4
	047 Move X8, [X19+56]
	048 Compare X8, 0
	049 JumpIfNotEqual {52}
	050 Move X0, X19
	051 Call 0x1C5D6E0
	052 Compare X25, 0
	053 JumpIfEqual {302}
	054 Move X24, [X25+16]
	055 Compare X24, 0
	056 JumpIfEqual {259}
	057 Move X26, 0x1F25000
	058 Move X26, [X26+3144]
	059 Move X8, [X24]
	060 Move X9, [X26]
	061 Move W11, [X8+304]
	062 Move W10, [X9+304]
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move X11, [X8+200]
	065 Add X10, X11, X10
	066 NotImplemented "Instruction LDUR not yet implemented."
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Move X9, 0x1F25000
	069 Move X9, [X9+3152]
	070 Move X9, [X9]
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move X9, [X8+376]
	073 Move X1, [X8+384]
	074 Move X0, X24
	075 NotImplemented "Instruction BLR not yet implemented."
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Move X24, [X24+16]
	078 Compare X24, 0
	079 JumpIfEqual {259}
	080 Move X9, [X24]
	081 Move X8, [X26]
	082 Move W11, [X9+304]
	083 Move W10, [X8+304]
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Move X9, [X9+200]
	086 Add X9, X9, X10
	087 NotImplemented "Instruction LDUR not yet implemented."
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Move X26, 0x1EFD000
	090 Move X26, [X26+1728]
	091 Move X8, 0x1F25000
	092 Move X0, [X26]
	093 Move X8, [X8+3128]
	094 Move W9, [X0+224]
	095 Move X25, [X8]
	096 Compare W9, 0
	097 JumpIfNotEqual {99}
	098 Call 0x1C17DFC
	099 Move X0, X25
	100 Move X1, X31
	101 Call Type.GetTypeFromHandle, X0
	102 Move X8, [X19+56]
	103 Move X25, X0
	104 Move X1, X31
	105 Move X8, [X8+8]
	106 Move X0, X8
	107 Call Type.GetTypeFromHandle, X0
	108 Compare X25, 0
	109 JumpIfEqual {301}
	110 Move X8, [X25]
	111 Move X1, X0
	112 Move X0, X25
	113 Move X9, [X8+680]
	114 Move X2, [X8+688]
	115 NotImplemented "Instruction BLR not yet implemented."
	116 Move TEMP, X0
	117 And TEMP, TEMP, 1
	118 Compare TEMP, 1
	119 JumpIfNotEqual {129}
	120 Move X0, [X26]
	121 Move X8, [X19+56]
	122 Move W9, [X0+224]
	123 Move X25, [X8+8]
	124 Compare W9, 0
	125 JumpIfNotEqual {127}
	126 Call 0x1C17DFC
	127 Move X19, 0x1F25000
	128 Move X19, [X19+3136]
	129 Move X8, 0x1F25000
	130 Move X0, [X26]
	131 Move X8, [X8+3096]
	132 Move W9, [X0+224]
	133 Move X25, [X8]
	134 Compare W9, 0
	135 JumpIfNotEqual {137}
	136 Call 0x1C17DFC
	137 Move X0, X25
	138 Move X1, X31
	139 Call Type.GetTypeFromHandle, X0
	140 Move X8, [X19+56]
	141 Move X25, X0
	142 Move X1, X31
	143 Move X8, [X8+8]
	144 Move X0, X8
	145 Call Type.GetTypeFromHandle, X0
	146 Compare X25, 0
	147 JumpIfEqual {301}
	148 Move X8, [X25]
	149 Move X1, X0
	150 Move X0, X25
	151 Move X9, [X8+680]
	152 Move X2, [X8+688]
	153 NotImplemented "Instruction BLR not yet implemented."
	154 Move TEMP, X0
	155 And TEMP, TEMP, 1
	156 Compare TEMP, 1
	157 JumpIfNotEqual {167}
	158 Move X0, [X26]
	159 Move X8, [X19+56]
	160 Move W9, [X0+224]
	161 Move X25, [X8+8]
	162 Compare W9, 0
	163 JumpIfNotEqual {165}
	164 Call 0x1C17DFC
	165 Move X19, 0x1F25000
	166 Move X19, [X19+3120]
	167 Move X8, 0x1F25000
	168 Move X0, [X26]
	169 Move X8, [X8+3104]
	170 Move W9, [X0+224]
	171 Move X25, [X8]
	172 Compare W9, 0
	173 JumpIfNotEqual {175}
	174 Call 0x1C17DFC
	175 Move X0, X25
	176 Move X1, X31
	177 Call Type.GetTypeFromHandle, X0
	178 Move X8, [X19+56]
	179 Move X25, X0
	180 Move X1, X31
	181 Move X8, [X8+8]
	182 Move X0, X8
	183 Call Type.GetTypeFromHandle, X0
	184 Compare X25, 0
	185 JumpIfEqual {301}
	186 Move X8, [X25]
	187 Move X1, X0
	188 Move X0, X25
	189 Move X9, [X8+680]
	190 Move X2, [X8+688]
	191 NotImplemented "Instruction BLR not yet implemented."
	192 Move X8, [X19+56]
	193 Move X25, [X8+8]
	194 Move TEMP, X0
	195 And TEMP, TEMP, 1
	196 Compare TEMP, 1
	197 JumpIfNotEqual {317}
	198 Move X0, [X26]
	199 Move W8, [X0+224]
	200 Compare W8, 0
	201 JumpIfNotEqual {203}
	202 Call 0x1C17DFC
	203 Move X19, 0x1F25000
	204 Move X19, [X19+3112]
	205 Move X0, X25
	206 Move X1, X31
	207 Call Type.GetTypeFromHandle, X0
	208 Move X8, [X19]
	209 Move X1, X0
	210 Move X2, X31
	211 Move X8, [X8+184]
	212 Move X0, X8
	213 Call TypeTable.FindNameForType, X0, X1
	214 Move X2, X31
	215 Call InternedString.op_Implicit, X0
	216 Move X19, X0
	217 Move X0, X24
	218 Move X1, X31
	219 Call MemberExpression.get_Member, X0
	220 Compare X0, 0
	221 JumpIfEqual {301}
	222 Move X8, [X0]
	223 Move X9, [X8+424]
	224 Move X1, [X8+432]
	225 NotImplemented "Instruction BLR not yet implemented."
	226 Move X24, X0
	227 Add X0, X31, 8
	228 Move W2, 88
	229 Move X1, X23
	230 Call 0x3EB2AC0
	231 NotImplemented "Instruction MOVI not yet implemented."
	232 Add X3, X31, 8
	233 Move X0, X22
	234 Move X1, X19
	235 Move X2, X24
	236 Move X4, X21
	237 Move X5, X20
	238 Move X6, X31
	239 Move [X22], V0
	240 Move [X22+8], V0
	241 Move [X22+32], V0
	242 Move [X22+40], V0
	243 Move [X22+64], V0
	244 Move [X22+72], V0
	245 Move [X22+6], V0
	246 Move [X22+112], X31
	247 Call ParameterOverride..ctor, X0, X1, X2, X3, X4
	248 Move X20, [X31+160]
	249 Move X19, [X31+168]
	250 Move X22, [X31+144]
	251 Move X21, [X31+152]
	252 Move X24, [X31+128]
	253 Move X23, [X31+136]
	254 Move X26, [X31+112]
	255 Move X25, [X31+120]
	256 Move X30, [X31+96]
	257 Add X31, X31, 176
	258 Return X0
	259 Move X0, X25
	260 Call 0x19913C0
	261 Move X0, X25
	262 Move X1, X31
	263 Call "il2cpp_vm_object_is_inst", X0
	264 Move X20, X0
	265 Call 0x19913C0
	266 Move X8, [X20]
	267 Move X0, X20
	268 Move X9, [X8+424]
	269 Move X1, [X8+432]
	270 NotImplemented "Instruction BLR not yet implemented."
	271 Move X20, X0
	272 Move X0, 0x1F25000
	273 Move X0, [X0+3160]
	274 Call 0x1C17D08
	275 Move X21, X0
	276 Move X0, 0x1F25000
	277 Move X0, [X0+3168]
	278 Call 0x1C17D08
	279 Move X2, X0
	280 Move X0, X21
	281 Move X1, X20
	282 Move X3, X31
	283 Call String.Concat, X0, X1, X2
	284 Move X20, X0
	285 Move X0, 0x1F05000
	286 Move X0, [X0+1400]
	287 Call 0x1C17D08
	288 Call 0x1C17F10
	289 Move X21, X0
	290 Move X0, 0x1F25000
	291 Move X0, [X0+3072]
	292 Call 0x1C17D08
	293 Move X2, X0
	294 Move X0, X21
	295 Move X1, X20
	296 Move X3, X31
	297 Call ArgumentException..ctor, X0, X1, X2
	298 Move X0, X21
	299 Move X1, X19
	300 Call 0x1C17DEC
	301 Call 0x1C17F20
	302 Move X0, X31
	303 Call 0x19913C0
	304 Move X0, X31
	305 Move X1, X31
	306 Call "il2cpp_vm_object_is_inst", X0
	307 Move X20, X0
	308 Call 0x19913C0
	309 Move X8, [X20]
	310 Move X0, X20
	311 Move X9, [X8+424]
	312 Move X1, [X8+432]
	313 NotImplemented "Instruction BLR not yet implemented."
	314 Move X20, X0
	315 Move X0, 0x1F25000
	316 Move X0, [X0+3176]
	317 Move X0, 0x1EFD000
	318 Move X0, [X0+1728]
	319 Call 0x1C17D08
	320 Call 0x19913D0
	321 Move X0, X25
	322 Move X1, X31
	323 Call Type.GetTypeFromHandle, X0
	324 Move X20, X0
	325 Call 0x19913C0
	326 Move X8, [X20]
	327 Move X0, X20
	328 Move X9, [X8+424]
	329 Move X1, [X8+432]
	330 NotImplemented "Instruction BLR not yet implemented."
	331 Move X20, X0
	332 Move X0, 0x1F25000
	333 Move X0, [X0+3184]
	334 Call 0x1C17D08
	335 Move X21, X0
	336 Move X0, 0x1EFE000
	337 Move X0, [X0+1544]
	338 Call 0x1C17D08
	339 Move X2, X0
	340 Move X0, X21
	341 Move X1, X20
	342 Move X3, X31
	343 Call String.Concat, X0, X1, X2
	344 Move X20, X0
	345 Move X0, 0x1F05000
	346 Move X0, [X0+1400]
	347 Call 0x1C17D08
	348 Call 0x1C17F10
	349 Move X21, X0
	350 Move X0, 0x1F25000
	351 Move X0, [X0+3192]

Method: System.Void ApplyParameterOverride(UnityEngine.InputSystem.InputActionMap actionMap, System.String name, UnityEngine.InputSystem.Utilities.PrimitiveValue value, UnityEngine.InputSystem.InputBinding bindingMask = null)

Disassembly:
	0x0373E3EC MOV X1, X31
	0x0373E3F0 BL 0x374A7D0
	0x0373E3F4 MOV W24, W0
	0x0373E3F8 MOV X0, X21
	0x0373E3FC MOV X1, X31
	0x0373E400 BL 0x374A7E8
	0x0373E404 MOV X22, X0
	0x0373E408 MOV X0, X21
	0x0373E40C MOV X1, X31
	0x0373E410 BL 0x374A7F8
	0x0373E414 CMP W24, 0x1
	0x0373E418 B.LT 0x373E474
	0x0373E41C CBZ X25, 0x373E4CC
	0x0373E420 LDR W27, [X19 + 0xC0]
	0x0373E424 MOV X23, X0
	0x0373E428 MOV X26, X31
	0x0373E42C MOV W28, W24
	0x0373E430 ADD X29, X25, 0x20
	0x0373E434 LDR W8, [X25 + 0x18]
	0x0373E438 CMP X26, X8
	0x0373E43C B.CS 0x373E4C8
	0x0373E440 LDR X8, [X29, X26, LSL #3]
	0x0373E444 CMP X8, X20
	0x0373E448 B.NE 0x373E464
	0x0373E44C LDRSW X24, [X23]
	0x0373E450 MOV X1, X31
	0x0373E454 ADD X0, X22, X24, 0x5, LSL
	0x0373E458 BL 0x374C89C
	0x0373E45C CMP W0, W27
	0x0373E460 B.EQ 0x373E494
	0x0373E464 ADD X26, X26, 0x1
	0x0373E468 CMP X28, X26
	0x0373E46C ADD X23, X23, 0x4
	0x0373E470 B.NE 0x373E434
	0x0373E474 LDP X20, X19, [X31 + 0x50]
	0x0373E478 LDP X22, X21, [X31 + 0x40]
	0x0373E47C LDP X24, X23, [X31 + 0x30]
	0x0373E480 LDP X26, X25, [X31 + 0x20]
	0x0373E484 LDP X28, X27, [X31 + 0x10]
	0x0373E488 MOVN W0, 0x0
	0x0373E48C LDP X29, X30, [X31], #0x60
	0x0373E490 RET
	0x0373E494 MOV X0, X21
	0x0373E498 MOV W1, W24
	0x0373E49C MOV X2, X31
	0x0373E4A0 BL 0x374FDF4
	0x0373E4A4 MOV W1, W0
	0x0373E4A8 MOV X0, X19
	0x0373E4AC LDP X20, X19, [X31 + 0x50]
	0x0373E4B0 LDP X22, X21, [X31 + 0x40]
	0x0373E4B4 LDP X24, X23, [X31 + 0x30]
	0x0373E4B8 LDP X26, X25, [X31 + 0x20]
	0x0373E4BC LDP X28, X27, [X31 + 0x10]
	0x0373E4C0 LDP X29, X30, [X31], #0x60
	0x0373E4C4 B 0x3735C24
	0x0373E4C8 BL 0x1C16F28
	0x0373E4CC BL 0x1C16F20
	0x0373E4D0 ADRP X0, 0x9BA000
	0x0373E4D4 LDR X0, [X0 + 0x528]
	0x0373E4D8 BL 0x1C16D08
	0x0373E4DC BL 0x1C16F10
	0x0373E4E0 MOV X19, X0
	0x0373E4E4 ADRP X0, 0x9DD000
	0x0373E4E8 LDR X0, [X0 + 0xBF8]
	0x0373E4EC B 0x373E50C
	0x0373E4F0 ADRP X0, 0x9BA000
	0x0373E4F4 LDR X0, [X0 + 0x528]
	0x0373E4F8 BL 0x1C16D08
	0x0373E4FC BL 0x1C16F10
	0x0373E500 MOV X19, X0
	0x0373E504 ADRP X0, 0x9DD000
	0x0373E508 LDR X0, [X0 + 0xD60]
	0x0373E50C BL 0x1C16D08
	0x0373E510 MOV X1, X0
	0x0373E514 MOV X0, X19
	0x0373E518 MOV X2, X31
	0x0373E51C BL 0x330E100
	0x0373E520 ADRP X0, 0xA07000
	0x0373E524 LDR X0, [X0 + 0x3E0]
	0x0373E528 BL 0x1C16D08
	0x0373E52C MOV X1, X0

ISIL:
	001 Subtract X31, X31, 416
	002 Move [X31+336], X29
	003 Move [X31+344], X30
	004 Move [X31+352], X26
	005 Move [X31+360], X25
	006 Move [X31+368], X24
	007 Move [X31+376], X23
	008 Move [X31+384], X22
	009 Move [X31+392], X21
	010 Move [X31+400], X20
	011 Move [X31+408], X19
	012 Compare X0, 0
	013 JumpIfEqual {73}
	014 Move X21, X1
	015 Move X23, X0
	016 Move X0, X1
	017 Move X1, X31
	018 Move X22, X4
	019 Move X19, X3
	020 Move X20, X2
	021 Call String.IsNullOrEmpty, X0
	022 Move TEMP, X0
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {80}
	026 Move X0, X23
	027 Call InputActionMap.ResolveBindingsIfNecessary, X0
	028 Move X24, [X23+96]
	029 Move W25, [X23+88]
	030 Add X0, X31, 120
	031 Move W2, 88
	032 Move X1, X22
	033 Add X26, X23, 208
	034 Add X23, X23, 204
	035 Call 0x3EB2AC0
	036 NotImplemented "Instruction MOVI not yet implemented."
	037 Add X0, X31, 208
	038 Add X2, X31, 120
	039 Move X1, X21
	040 Move X3, X20
	041 Move X4, X19
	042 Move [X31+320], X31
	043 Move [X31+288], V0
	044 Move [X31+296], V0
	045 Move [X31+256], V0
	046 Move [X31+264], V0
	047 Move [X31+224], V0
	048 Move [X31+232], V0
	049 Move [X31+13], V0
	050 Call ParameterOverride..ctor, X0, X1, X2, X3
	051 Add X0, X31, 0
	052 Add X1, X31, 208
	053 Move W2, 120
	054 Call 0x3EB2AC0
	055 Add X4, X31, 0
	056 Move X0, X24
	057 Move W1, W25
	058 Move X2, X26
	059 Move X3, X23
	060 Call InputActionRebindingExtensions.ApplyParameterOverride, X0, X1, X2, X3, X4
	061 Move X20, [X31+400]
	062 Move X19, [X31+408]
	063 Move X22, [X31+384]
	064 Move X21, [X31+392]
	065 Move X24, [X31+368]
	066 Move X23, [X31+376]
	067 Move X26, [X31+352]
	068 Move X25, [X31+360]
	069 Move X29, [X31+336]
	070 Move X30, [X31+344]
	071 Add X31, X31, 416
	072 Return 
	073 Move X0, 0x9BB000
	074 Move X0, [X0+1320]
	075 Call 0x1C17D08
	076 Call 0x1C17F10
	077 Move X19, X0
	078 Move X0, 0x9DE000
	079 Move X0, [X0+3088]
	080 Move X0, 0x9BB000
	081 Move X0, [X0+1320]
	082 Call 0x1C17D08
	083 Call 0x1C17F10
	084 Move X19, X0
	085 Move X0, 0x9BE000
	086 Move X0, [X0+1416]
	087 Call 0x1C17D08
	088 Move X1, X0
	089 Move X0, X19
	090 Move X2, X31
	091 Call ArgumentNullException..ctor, X0, X1
	092 Move X0, 0xA08000
	093 Move X0, [X0+904]
	094 Call 0x1C17D08
	095 Move X1, X0
	096 Move X0, X19
	097 Call 0x1C17DEC

Method: System.Void ApplyParameterOverride(UnityEngine.InputSystem.InputActionAsset asset, System.String name, UnityEngine.InputSystem.Utilities.PrimitiveValue value, UnityEngine.InputSystem.InputBinding bindingMask = null)

Disassembly:
	0x0373E8F8 BL 0x1C16D08
	0x0373E8FC MOV X1, X0
	0x0373E900 MOV X0, X19
	0x0373E904 BL 0x1C16DEC
	0x0373E908 SUB X31, X31, 0x180
	0x0373E90C STR X29, [X31 + 0x120]
	0x0373E910 STP X30, X27, [X31 + 0x130]
	0x0373E914 STP X26, X25, [X31 + 0x140]
	0x0373E918 STP X24, X23, [X31 + 0x150]
	0x0373E91C STP X22, X21, [X31 + 0x160]
	0x0373E920 STP X20, X19, [X31 + 0x170]
	0x0373E924 ADRP X25, 0xCA2000
	0x0373E928 ADRP X23, 0xA07000
	0x0373E92C LDRB W8, [X25 + 0xD3B]
	0x0373E930 LDR X23, [X23 + 0x400]
	0x0373E934 MOV W19, W4
	0x0373E938 MOV X21, X3
	0x0373E93C MOV X22, X2
	0x0373E940 MOV W24, W1
	0x0373E944 MOV X20, X0
	0x0373E948 TBNZ X8, 0x0, 0x373E9CC
	0x0373E94C ADRP X0, 0x9C2000
	0x0373E950 LDR X0, [X0 + 0xDB0]
	0x0373E954 BL 0x1C16CF4
	0x0373E958 ADRP X0, 0x9DC000
	0x0373E95C LDR X0, [X0 + 0xFE8]
	0x0373E960 BL 0x1C16CF4
	0x0373E964 ADRP X0, 0xA07000
	0x0373E968 LDR X0, [X0 + 0x108]
	0x0373E96C BL 0x1C16CF4
	0x0373E970 ADRP X0, 0xA07000
	0x0373E974 LDR X0, [X0 + 0x408]
	0x0373E978 BL 0x1C16CF4
	0x0373E97C ADRP X0, 0x9B5000
	0x0373E980 LDR X0, [X0 + 0xAC8]
	0x0373E984 BL 0x1C16CF4
	0x0373E988 ADRP X0, 0xA07000
	0x0373E98C LDR X0, [X0 + 0x410]
	0x0373E990 BL 0x1C16CF4
	0x0373E994 ADRP X0, 0xA07000
	0x0373E998 LDR X0, [X0 + 0x400]
	0x0373E99C BL 0x1C16CF4
	0x0373E9A0 ADRP X0, 0x9B5000
	0x0373E9A4 LDR X0, [X0 + 0xDD8]
	0x0373E9A8 BL 0x1C16CF4
	0x0373E9AC ADRP X0, 0x9B6000
	0x0373E9B0 LDR X0, [X0 + 0xEC8]
	0x0373E9B4 BL 0x1C16CF4
	0x0373E9B8 ADRP X0, 0xA07000
	0x0373E9BC LDR X0, [X0 + 0x418]
	0x0373E9C0 BL 0x1C16CF4
	0x0373E9C4 MOVZ W8, 0x1
	0x0373E9C8 STRB W8, [X25 + 0xD3B]
	0x0373E9CC LDR X0, [X23]
	0x0373E9D0 MOVI V0.2D, 0x0
	0x0373E9D4 STR X31, [X31 + 0x110]
	0x0373E9D8 STR X31, [X31 + 0xB0]
	0x0373E9DC STP V0, V0, [X31 + 0xF0]
	0x0373E9E0 STP V0, V0, [X31 + 0xD0]
	0x0373E9E4 STR V0, [X31 + 0xC]
	0x0373E9E8 STP V0, V0, [X31 + 0x90]
	0x0373E9EC STP V0, V0, [X31 + 0x70]
	0x0373E9F0 STR V0, [X31 + 0x6]
	0x0373E9F4 BL 0x1C16F10
	0x0373E9F8 MOV X1, X31
	0x0373E9FC MOV X23, X0
	0x0373EA00 BL 0x33BDD8C
	0x0373EA04 CBZ X20, 0x373ED70
	0x0373EA08 MOV X0, X20
	0x0373EA0C STR X31, [X22]
	0x0373EA10 STR X31, [X21]
	0x0373EA14 BL 0x37345CC
	0x0373EA18 CBZ X23, 0x373ED68
	0x0373EA1C MOV X25, X23
	0x0373EA20 STR X0, [X25 + 0x10]!
	0x0373EA24 STR X1, [X25 + 0x8]
	0x0373EA28 TBNZ X24, 0x1F, 0x373EDB8
	0x0373EA2C UBFM X26, X1, 0x20, 0x3F
	0x0373EA30 CMP W26, W24
	0x0373EA34 B.LE 0x373EDB8
	0x0373EA38 ADRP X27, 0xA07000
	0x0373EA3C LDR X27, [X27 + 0x108]
	0x0373EA40 ADD X8, X31, 0x8
	0x0373EA44 MOV X0, X25
	0x0373EA48 MOV W1, W24
	0x0373EA4C LDR X2, [X27]
	0x0373EA50 BL 0x24FC334
	0x0373EA54 ADD X0, X31, 0x60
	0x0373EA58 ADD X1, X31, 0x8
	0x0373EA5C MOVZ W2, 0x58
	0x0373EA60 BL 0x3EB1AC0
	0x0373EA64 ADD X0, X31, 0x60
	0x0373EA68 MOV X1, X31
	0x0373EA6C BL 0x3747CF4
	0x0373EA70 TBZ X0, 0x0, 0x373EB14
	0x0373EA74 LDR X2, [X27]
	0x0373EA78 ADD X8, X31, 0x8
	0x0373EA7C MOV X0, X25
	0x0373EA80 MOV W1, W24
	0x0373EA84 BL 0x24FC334

ISIL:
	001 Subtract X31, X31, 416
	002 Move [X31+336], X29
	003 Move [X31+352], X30
	004 Move [X31+360], X25
	005 Move [X31+368], X24
	006 Move [X31+376], X23
	007 Move [X31+384], X22
	008 Move [X31+392], X21
	009 Move [X31+400], X20
	010 Move [X31+408], X19
	011 Move X24, 0xCA3000
	012 Move X25, 0x9B6000
	013 Move W8, [X24+3379]
	014 Move X25, [X25+1432]
	015 Move X22, X4
	016 Move X19, X3
	017 Move X20, X2
	018 Move X21, X1
	019 Move X23, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {29}
	024 Move X0, 0x9B6000
	025 Move X0, [X0+1432]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X24+3379], W8
	029 Move X0, [X25]
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move X0, X23
	035 Move X1, X31
	036 Move X2, X31
	037 Call Object.op_Equality, X0, X1
	038 Move TEMP, X0
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfEqual {98}
	042 Move X0, X21
	043 Move X1, X31
	044 Call String.IsNullOrEmpty, X0
	045 Move TEMP, X0
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfEqual {105}
	049 Compare X23, 0
	050 JumpIfEqual {123}
	051 Move X0, X23
	052 Call InputActionAsset.ResolveBindingsIfNecessary, X0
	053 Move X24, [X23+40]
	054 Add X0, X31, 120
	055 Move W2, 88
	056 Move X1, X22
	057 Add X25, X23, 152
	058 Add X23, X23, 144
	059 Call 0x3EB2AC0
	060 NotImplemented "Instruction MOVI not yet implemented."
	061 Add X0, X31, 208
	062 Add X2, X31, 120
	063 Move X1, X21
	064 Move X3, X20
	065 Move X4, X19
	066 Move [X31+320], X31
	067 Move [X31+288], V0
	068 Move [X31+296], V0
	069 Move [X31+256], V0
	070 Move [X31+264], V0
	071 Move [X31+224], V0
	072 Move [X31+232], V0
	073 Move [X31+13], V0
	074 Call ParameterOverride..ctor, X0, X1, X2, X3
	075 Add X0, X31, 0
	076 Add X1, X31, 208
	077 Move W2, 120
	078 Call 0x3EB2AC0
	079 Add X4, X31, 0
	080 Move TEMP, 0
	081 Not TEMP
	082 Move W1, TEMP
	083 Move X0, X24
	084 Move X2, X25
	085 Move X3, X23
	086 Call InputActionRebindingExtensions.ApplyParameterOverride, X0, X1, X2, X3, X4
	087 Move X20, [X31+400]
	088 Move X19, [X31+408]
	089 Move X22, [X31+384]
	090 Move X21, [X31+392]
	091 Move X24, [X31+368]
	092 Move X23, [X31+376]
	093 Move X30, [X31+352]
	094 Move X25, [X31+360]
	095 Move X29, [X31+336]
	096 Add X31, X31, 416
	097 Return 
	098 Move X0, 0x9BB000
	099 Move X0, [X0+1320]
	100 Call 0x1C17D08
	101 Call 0x1C17F10
	102 Move X19, X0
	103 Move X0, 0x9DE000
	104 Move X0, [X0+3080]
	105 Move X0, 0x9BB000
	106 Move X0, [X0+1320]
	107 Call 0x1C17D08
	108 Call 0x1C17F10
	109 Move X19, X0
	110 Move X0, 0x9BE000
	111 Move X0, [X0+1416]
	112 Call 0x1C17D08
	113 Move X1, X0
	114 Move X0, X19
	115 Move X2, X31
	116 Call ArgumentNullException..ctor, X0, X1
	117 Move X0, 0xA08000
	118 Move X0, [X0+936]
	119 Call 0x1C17D08
	120 Move X1, X0
	121 Move X0, X19
	122 Call 0x1C17DEC
	123 Call 0x1C17F20

Method: System.Void ApplyParameterOverride(UnityEngine.InputSystem.InputAction action, System.String name, UnityEngine.InputSystem.Utilities.PrimitiveValue value, UnityEngine.InputSystem.InputBinding bindingMask = null)

Disassembly:
	0x0373EA88 ADD X0, X31, 0x60
	0x0373EA8C ADD X1, X31, 0x8
	0x0373EA90 MOVZ W2, 0x58
	0x0373EA94 BL 0x3EB1AC0
	0x0373EA98 ADD X0, X31, 0x60
	0x0373EA9C MOV X1, X31
	0x0373EAA0 BL 0x374B644
	0x0373EAA4 ADD X8, X31, 0x8
	0x0373EAA8 MOV X1, X31
	0x0373EAAC BL 0x37638C0
	0x0373EAB0 LDR X21, [X31 + 0x8]
	0x0373EAB4 ADD W22, W24, 0x1
	0x0373EAB8 CMP W22, W26
	0x0373EABC STR W22, [X23 + 0x20]
	0x0373EAC0 B.GE 0x373EBA0
	0x0373EAC4 LDR X2, [X27]
	0x0373EAC8 ADD X8, X31, 0x8
	0x0373EACC MOV X0, X25
	0x0373EAD0 MOV W1, W22
	0x0373EAD4 BL 0x24FC334
	0x0373EAD8 ADD X0, X31, 0x60
	0x0373EADC ADD X1, X31, 0x8
	0x0373EAE0 MOVZ W2, 0x58
	0x0373EAE4 BL 0x3EB1AC0
	0x0373EAE8 ADD X0, X31, 0x60
	0x0373EAEC MOV X1, X31
	0x0373EAF0 BL 0x3749FA8
	0x0373EAF4 TBZ X0, 0x0, 0x373EB08
	0x0373EAF8 ADD W22, W22, 0x1
	0x0373EAFC CMP W26, W22
	0x0373EB00 B.NE 0x373EAC4
	0x0373EB04 MOV W22, W26
	0x0373EB08 MOV W8, W22
	0x0373EB0C LDR W22, [X23 + 0x20]
	0x0373EB10 B 0x373EBA4
	0x0373EB14 LDR X26, [X20 + 0xC8]
	0x0373EB18 CBNZ X26, 0x373EB2C
	0x0373EB1C MOV X0, X20
	0x0373EB20 BL 0x373572C
	0x0373EB24 LDR X26, [X20 + 0xC8]
	0x0373EB28 CBZ X26, 0x373ED68
	0x0373EB2C MOV X0, X26
	0x0373EB30 BL 0x37346C0
	0x0373EB34 LDR X23, [X26 + 0x60]
	0x0373EB38 MOV X0, X20
	0x0373EB3C MOV W1, W24
	0x0373EB40 BL 0x3735A88
	0x0373EB44 CBZ X23, 0x373ED68
	0x0373EB48 LDR W1, [X26 + 0x58]
	0x0373EB4C MOV W2, W0
	0x0373EB50 MOV X0, X23
	0x0373EB54 MOV X3, X31
	0x0373EB58 BL 0x374FE30
	0x0373EB5C MOV W26, W0
	0x0373EB60 MOV X0, X23
	0x0373EB64 MOV X1, X31
	0x0373EB68 BL 0x374A7E8
	0x0373EB6C SXTW X8, W26
	0x0373EB70 ADD X9, X0, X8, 0x5, LSL
	0x0373EB74 LDRB W8, [X9]
	0x0373EB78 CBZ W8, 0x373ECB0
	0x0373EB7C LDR X8, [X23 + 0x18]
	0x0373EB80 CBZ X8, 0x373ED68
	0x0373EB84 LDRH W9, [X9 + 0xE]
	0x0373EB88 LDR W10, [X8 + 0x18]
	0x0373EB8C CMP W9, W10
	0x0373EB90 B.CS 0x373ED6C
	0x0373EB94 ADD X8, X8, W9, 0x3, UXTW
	0x0373EB98 LDR X23, [X8 + 0x20]
	0x0373EB9C B 0x373ECB4
	0x0373EBA0 MOV W8, W22
	0x0373EBA4 SUB W1, W8, W22
	0x0373EBA8 STR W1, [X23 + 0x30]
	0x0373EBAC ADRP X8, 0x9B5000
	0x0373EBB0 LDR X8, [X8 + 0xAC8]
	0x0373EBB4 LDR X0, [X8]
	0x0373EBB8 BL 0x1C16D6C
	0x0373EBBC LDR W8, [X23 + 0x30]
	0x0373EBC0 STR X0, [X23 + 0x28]
	0x0373EBC4 CMP W8, 0x1
	0x0373EBC8 B.LT 0x373EC30
	0x0373EBCC ADRP X25, 0x9B5000
	0x0373EBD0 LDR X25, [X25 + 0xDD8]
	0x0373EBD4 MOV X24, X31
	0x0373EBD8 LDR W8, [X23 + 0x20]
	0x0373EBDC MOV X0, X20
	0x0373EBE0 MOV W2, W19

ISIL:
	001 Subtract X31, X31, 416
	002 Move [X31+336], X29
	003 Move [X31+344], X30
	004 Move [X31+352], X26
	005 Move [X31+360], X25
	006 Move [X31+368], X24
	007 Move [X31+376], X23
	008 Move [X31+384], X22
	009 Move [X31+392], X21
	010 Move [X31+400], X20
	011 Move [X31+408], X19
	012 Compare X0, 0
	013 JumpIfEqual {78}
	014 Move X21, X1
	015 Compare X1, 0
	016 JumpIfEqual {85}
	017 Move X24, [X0+200]
	018 Move X22, X4
	019 Move X19, X3
	020 Move X20, X2
	021 Move X23, X0
	022 Compare X24, 0
	023 JumpIfNotEqual {29}
	024 Move X0, X23
	025 Call InputAction.CreateInternalActionMapForSingletonAction, X0
	026 Move X24, [X23+200]
	027 Compare X24, 0
	028 JumpIfEqual {103}
	029 Move X0, X24
	030 Call InputActionMap.ResolveBindingsIfNecessary, X0
	031 Move X8, [X23+16]
	032 Add X0, X31, 120
	033 Move W2, 88
	034 Move X1, X22
	035 Move [X22+48], X8
	036 Move X23, [X24+96]
	037 Move W25, [X24+88]
	038 Add X26, X24, 208
	039 Add X24, X24, 204
	040 Call 0x3EB2AC0
	041 NotImplemented "Instruction MOVI not yet implemented."
	042 Add X0, X31, 208
	043 Add X2, X31, 120
	044 Move X1, X21
	045 Move X3, X20
	046 Move X4, X19
	047 Move [X31+320], X31
	048 Move [X31+288], V0
	049 Move [X31+296], V0
	050 Move [X31+256], V0
	051 Move [X31+264], V0
	052 Move [X31+224], V0
	053 Move [X31+232], V0
	054 Move [X31+13], V0
	055 Call ParameterOverride..ctor, X0, X1, X2, X3
	056 Add X0, X31, 0
	057 Add X1, X31, 208
	058 Move W2, 120
	059 Call 0x3EB2AC0
	060 Add X4, X31, 0
	061 Move X0, X23
	062 Move W1, W25
	063 Move X2, X26
	064 Move X3, X24
	065 Call InputActionRebindingExtensions.ApplyParameterOverride, X0, X1, X2, X3, X4
	066 Move X20, [X31+400]
	067 Move X19, [X31+408]
	068 Move X22, [X31+384]
	069 Move X21, [X31+392]
	070 Move X24, [X31+368]
	071 Move X23, [X31+376]
	072 Move X26, [X31+352]
	073 Move X25, [X31+360]
	074 Move X29, [X31+336]
	075 Move X30, [X31+344]
	076 Add X31, X31, 416
	077 Return 
	078 Move X0, 0x9BB000
	079 Move X0, [X0+1320]
	080 Call 0x1C17D08
	081 Call 0x1C17F10
	082 Move X19, X0
	083 Move X0, 0x9DE000
	084 Move X0, [X0+3064]
	085 Move X0, 0x9BB000
	086 Move X0, [X0+1320]
	087 Call 0x1C17D08
	088 Call 0x1C17F10
	089 Move X19, X0
	090 Move X0, 0x9BE000
	091 Move X0, [X0+1416]
	092 Call 0x1C17D08
	093 Move X1, X0
	094 Move X0, X19
	095 Move X2, X31
	096 Call ArgumentNullException..ctor, X0, X1
	097 Move X0, 0xA08000
	098 Move X0, [X0+944]
	099 Call 0x1C17D08
	100 Move X1, X0
	101 Move X0, X19
	102 Call 0x1C17DEC
	103 Call 0x1C17F20

Method: System.Void ApplyParameterOverride(UnityEngine.InputSystem.InputAction action, System.String name, UnityEngine.InputSystem.Utilities.PrimitiveValue value, System.Int32 bindingIndex)

Disassembly:
	0x0373EBE4 ADD W1, W24, W8
	0x0373EBE8 BL 0x373E894
	0x0373EBEC MOV X1, X31
	0x0373EBF0 MOV X22, X0
	0x0373EBF4 BL 0x32277A8
	0x0373EBF8 LDR X9, [X25]
	0x0373EBFC LDR X8, [X23 + 0x28]
	0x0373EC00 ANDS W31, W0, 0x1
	0x0373EC04 CSEL X9, X9, X22, NE
	0x0373EC08 CBZ X8, 0x373ED68
	0x0373EC0C LDR W10, [X8 + 0x18]
	0x0373EC10 CMP X24, X10
	0x0373EC14 B.CS 0x373ED6C
	0x0373EC18 ADD X8, X8, X24, 0x3, LSL
	0x0373EC1C STR X9, [X8 + 0x20]
	0x0373EC20 LDRSW X8, [X23 + 0x30]
	0x0373EC24 ADD X24, X24, 0x1
	0x0373EC28 CMP X24, X8
	0x0373EC2C B.LT 0x373EBD8
	0x0373EC30 MOV X0, X21
	0x0373EC34 MOV X1, X31
	0x0373EC38 BL 0x37533AC
	0x0373EC3C MOV X1, X31
	0x0373EC40 MOV X19, X0
	0x0373EC44 BL 0x32277A8
	0x0373EC48 TBZ X0, 0x0, 0x373EC70
	0x0373EC4C ADRP X8, 0x9B6000
	0x0373EC50 ADRP X9, 0xA07000
	0x0373EC54 LDR X1, [X23 + 0x28]
	0x0373EC58 LDR X8, [X8 + 0xEC8]
	0x0373EC5C LDR X9, [X9 + 0x408]
	0x0373EC60 LDR X0, [X8]
	0x0373EC64 LDR X2, [X9]
	0x0373EC68 BL 0x228CFD8
	0x0373EC6C B 0x373ED48
	0x0373EC70 ADRP X8, 0x9C2000
	0x0373EC74 LDR X8, [X8 + 0xDB0]
	0x0373EC78 LDR X0, [X8]
	0x0373EC7C BL 0x1C16F10
	0x0373EC80 ADRP X8, 0xA07000
	0x0373EC84 LDR X8, [X8 + 0x410]
	0x0373EC88 MOV X1, X23
	0x0373EC8C MOV X3, X31
	0x0373EC90 MOV X20, X0
	0x0373EC94 LDR X2, [X8]
	0x0373EC98 BL 0x2D30578
	0x0373EC9C MOV X0, X19
	0x0373ECA0 MOV X1, X20
	0x0373ECA4 MOV X2, X31
	0x0373ECA8 BL 0x3767FCC
	0x0373ECAC B 0x373ED48
	0x0373ECB0 MOV X23, X31
	0x0373ECB4 LDR X2, [X27]
	0x0373ECB8 ADD X8, X31, 0x8
	0x0373ECBC MOV X0, X25
	0x0373ECC0 MOV W1, W24
	0x0373ECC4 BL 0x24FC334
	0x0373ECC8 ADD X0, X31, 0xC0
	0x0373ECCC ADD X1, X31, 0x8
	0x0373ECD0 MOVZ W2, 0x58
	0x0373ECD4 BL 0x3EB1AC0
	0x0373ECD8 ADD X0, X31, 0xC0
	0x0373ECDC MOV X1, X31
	0x0373ECE0 BL 0x37525BC
	0x0373ECE4 MOV X1, X31
	0x0373ECE8 BL 0x32277A8
	0x0373ECEC LDR X8, [X20 + 0x38]
	0x0373ECF0 TBNZ X0, 0x0, 0x373ED28
	0x0373ECF4 MOV X0, X8
	0x0373ECF8 MOV X1, X31
	0x0373ECFC BL 0x32277A8
	0x0373ED00 TBNZ X0, 0x0, 0x373ED2C
	0x0373ED04 ADD X0, X31, 0xC0
	0x0373ED08 MOV X1, X31
	0x0373ED0C BL 0x37525BC
	0x0373ED10 ADRP X8, 0xA07000
	0x0373ED14 LDR X8, [X8 + 0x418]
	0x0373ED18 MOV X2, X31
	0x0373ED1C LDR X1, [X8]
	0x0373ED20 BL 0x321B938
	0x0373ED24 MOV X8, X0
	0x0373ED28 STR X8, [X31 + 0x108]
	0x0373ED2C ADD X0, X31, 0xC0
	0x0373ED30 MOV X1, X22
	0x0373ED34 MOV X2, X21
	0x0373ED38 MOV W3, W19
	0x0373ED3C MOV X4, X23
	0x0373ED40 MOV X5, X31
	0x0373ED44 BL 0x3752A24
	0x0373ED48 LDP X20, X19, [X31 + 0x170]
	0x0373ED4C LDP X22, X21, [X31 + 0x160]
	0x0373ED50 LDP X24, X23, [X31 + 0x150]
	0x0373ED54 LDP X26, X25, [X31 + 0x140]
	0x0373ED58 LDP X30, X27, [X31 + 0x130]
	0x0373ED5C LDR X29, [X31 + 0x120]
	0x0373ED60 ADD X31, X31, 0x180
	0x0373ED64 RET
	0x0373ED68 BL 0x1C16F20
	0x0373ED6C BL 0x1C16F28
	0x0373ED70 ADRP X0, 0x9BA000
	0x0373ED74 LDR X0, [X0 + 0x528]
	0x0373ED78 BL 0x1C16D08
	0x0373ED7C BL 0x1C16F10
	0x0373ED80 MOV X19, X0
	0x0373ED84 ADRP X0, 0x9DD000
	0x0373ED88 LDR X0, [X0 + 0xBF8]
	0x0373ED8C BL 0x1C16D08
	0x0373ED90 MOV X1, X0
	0x0373ED94 MOV X0, X19
	0x0373ED98 MOV X2, X31
	0x0373ED9C BL 0x330E100
	0x0373EDA0 ADRP X0, 0xA07000
	0x0373EDA4 LDR X0, [X0 + 0x420]
	0x0373EDA8 BL 0x1C16D08
	0x0373EDAC MOV X1, X0
	0x0373EDB0 MOV X0, X19
	0x0373EDB4 BL 0x1C16DEC
	0x0373EDB8 STR W24, [X31 + 0x8]
	0x0373EDBC ADRP X19, 0x9B5000
	0x0373EDC0 LDR X19, [X19 + 0x758]
	0x0373EDC4 MOV X0, X19
	0x0373EDC8 BL 0x1C16D08
	0x0373EDCC ADD X1, X31, 0x8
	0x0373EDD0 BL 0x1C16E04

ISIL:
	001 Subtract X31, X31, 448
	002 Move [X31+384], X29
	003 Move [X31+392], X30
	004 Move [X31+400], X24
	005 Move [X31+408], X23
	006 Move [X31+416], X22
	007 Move [X31+424], X21
	008 Move [X31+432], X20
	009 Move [X31+440], X19
	010 Move X24, 0xCA3000
	011 Move W8, [X24+3380]
	012 Move W23, W4
	013 Move X19, X3
	014 Move X20, X2
	015 Move X21, X1
	016 Move X22, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {26}
	021 Move X0, 0xA08000
	022 Move X0, [X0+264]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X24+3380], W8
	026 NotImplemented "Instruction MOVI not yet implemented."
	027 Move [X31+256], X31
	028 Move [X31+224], V0
	029 Move [X31+232], V0
	030 Move [X31+192], V0
	031 Move [X31+200], V0
	032 Move [X31+11], V0
	033 Compare X22, 0
	034 JumpIfEqual {110}
	035 Move X0, X21
	036 Move X1, X31
	037 Call String.IsNullOrEmpty, X0
	038 Move TEMP, X0
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfEqual {117}
	042 Move TEMP, X23
	043 And TEMP, TEMP, -2147483648
	044 Compare TEMP, -2147483648
	045 JumpIfEqual {129}
	046 Move X0, X22
	047 Move W1, W23
	048 Call InputAction.BindingIndexOnActionToBindingIndexOnMap, X0, X1
	049 NotImplemented "Instruction MOVI not yet implemented."
	050 Move [X31+288], V0
	051 Move [X31+296], V0
	052 Move [X31+320], V0
	053 Move [X31+328], V0
	054 Move [X31+22], V0
	055 Move [X31+368], X31
	056 Move X8, [X22+200]
	057 Move W23, W0
	058 Compare X8, 0
	059 JumpIfNotEqual {65}
	060 Move X0, X22
	061 Call InputAction.CreateInternalActionMapForSingletonAction, X0
	062 Move X8, [X22+200]
	063 Compare X8, 0
	064 JumpIfEqual {147}
	065 Move X24, 0xA08000
	066 Move X24, [X24+264]
	067 Move X0, X8
	068 Call InputActionMap.get_bindings, X0
	069 Move X2, [X24]
	070 Move [X31+272], X0
	071 Move [X31+280], X1
	072 Add X8, X31, 88
	073 Add X0, X31, 272
	074 Move W1, W23
	075 Call 0x24FD334, X0, X1
	076 Add X0, X31, 176
	077 Add X1, X31, 88
	078 Move W2, 88
	079 Call 0x3EB2AC0
	080 Add X0, X31, 176
	081 Move X1, X31
	082 Call InputBinding.get_id, X0
	083 Move X2, X0
	084 Move X3, X1
	085 Add X0, X31, 288
	086 Move X1, X2
	087 Move X2, X3
	088 Move X3, X31
	089 Call InputBinding.set_id, X0, X1
	090 Add X0, X31, 0
	091 Add X1, X31, 288
	092 Move W2, 88
	093 Call 0x3EB2AC0
	094 Add X4, X31, 0
	095 Move X0, X22
	096 Move X1, X21
	097 Move X2, X20
	098 Move X3, X19
	099 Call InputActionRebindingExtensions.ApplyParameterOverride, X0, X1, X2, X3
	100 Move X20, [X31+432]
	101 Move X19, [X31+440]
	102 Move X22, [X31+416]
	103 Move X21, [X31+424]
	104 Move X24, [X31+400]
	105 Move X23, [X31+408]
	106 Move X29, [X31+384]
	107 Move X30, [X31+392]
	108 Add X31, X31, 448
	109 Return 
	110 Move X0, 0x9BB000
	111 Move X0, [X0+1320]
	112 Call 0x1C17D08
	113 Call 0x1C17F10
	114 Move X19, X0
	115 Move X0, 0x9DE000
	116 Move X0, [X0+3064]
	117 Move X0, 0x9BB000
	118 Move X0, [X0+1320]
	119 Call 0x1C17D08
	120 Call 0x1C17F10
	121 Move X19, X0
	122 Move X0, 0x9BE000
	123 Move X0, [X0+1416]
	124 Call 0x1C17D08
	125 Move X1, X0
	126 Move X0, X19
	127 Move X2, X31
	128 Call ArgumentNullException..ctor, X0, X1
	129 Move X0, 0x9BE000
	130 Move X0, [X0+1888]
	131 Call 0x1C17D08
	132 Call 0x1C17F10
	133 Move X19, X0
	134 Move X0, 0xA08000
	135 Move X0, [X0+888]
	136 Call 0x1C17D08
	137 Move X1, X0
	138 Move X0, X19
	139 Move X2, X31
	140 Call ArgumentOutOfRangeException..ctor, X0, X1
	141 Move X0, 0xA08000
	142 Move X0, [X0+952]
	143 Call 0x1C17D08
	144 Move X1, X0
	145 Move X0, X19
	146 Call 0x1C17DEC
	147 Call 0x1C17F20

Method: System.Void ApplyParameterOverride(UnityEngine.InputSystem.InputActionState state, System.Int32 mapIndex, ref UnityEngine.InputSystem.InputActionRebindingExtensions/ParameterOverride[] parameterOverrides, ref System.Int32 parameterOverridesCount, UnityEngine.InputSystem.InputActionRebindingExtensions/ParameterOverride parameterOverride)

Disassembly:
	0x0373E530 MOV X0, X19
	0x0373E534 BL 0x1C16DEC
	0x0373E538 SUB X31, X31, 0x1A0
	0x0373E53C STP X29, X30, [X31 + 0x170]
	0x0373E540 STP X22, X21, [X31 + 0x180]
	0x0373E544 STP X20, X19, [X31 + 0x190]
	0x0373E548 ADRP X22, 0xCA2000
	0x0373E54C LDRB W8, [X22 + 0xD39]
	0x0373E550 MOV X21, X2
	0x0373E554 MOV W19, W1
	0x0373E558 MOV X20, X0
	0x0373E55C TBNZ X8, 0x0, 0x373E580
	0x0373E560 ADRP X0, 0xA06000
	0x0373E564 LDR X0, [X0 + 0xF58]
	0x0373E568 BL 0x1C16CF4
	0x0373E56C ADRP X0, 0xA06000
	0x0373E570 LDR X0, [X0 + 0xF60]
	0x0373E574 BL 0x1C16CF4
	0x0373E578 MOVZ W8, 0x1
	0x0373E57C STRB W8, [X22 + 0xD39]
	0x0373E580 MOVI V0.2D, 0x0
	0x0373E584 STP V0, V0, [X31 + 0xF0]
	0x0373E588 STP V0, V0, [X31 + 0xD0]
	0x0373E58C STP V0, V0, [X31 + 0xB0]
	0x0373E590 CBZ X20, 0x373E640
	0x0373E594 MOV X0, X21
	0x0373E598 MOV X1, X31
	0x0373E59C BL 0x32277A8
	0x0373E5A0 TBZ X0, 0x0, 0x373E5D4
	0x0373E5A4 ADD X8, X31, 0xB0
	0x0373E5A8 MOV X0, X20
	0x0373E5AC BL 0x37359F8
	0x0373E5B0 LDRB W8, [X31 + 0xB0]
	0x0373E5B4 CBZ W8, 0x373E628
	0x0373E5B8 ADRP X8, 0xA06000
	0x0373E5BC LDR X8, [X8 + 0xF60]
	0x0373E5C0 ADD X0, X31, 0xB0
	0x0373E5C4 LDR X1, [X8]
	0x0373E5C8 ADD X8, X31, 0x58
	0x0373E5CC BL 0x2432510
	0x0373E5D0 B 0x373E5E4
	0x0373E5D4 ADD X8, X31, 0x58
	0x0373E5D8 MOV X0, X21
	0x0373E5DC MOV X1, X31
	0x0373E5E0 BL 0x375244C
	0x0373E5E4 ADD X0, X31, 0x110
	0x0373E5E8 ADD X1, X31, 0x58
	0x0373E5EC MOVZ W2, 0x58
	0x0373E5F0 BL 0x3EB1AC0
	0x0373E5F4 ADD X0, X31, 0x0
	0x0373E5F8 ADD X1, X31, 0x110
	0x0373E5FC MOVZ W2, 0x58
	0x0373E600 BL 0x3EB1AC0
	0x0373E604 ADD X1, X31, 0x0
	0x0373E608 MOV X0, X20
	0x0373E60C MOV W2, W19
	0x0373E610 BL 0x373E688
	0x0373E614 LDP X20, X19, [X31 + 0x190]
	0x0373E618 LDP X22, X21, [X31 + 0x180]
	0x0373E61C LDP X29, X30, [X31 + 0x170]
	0x0373E620 ADD X31, X31, 0x1A0
	0x0373E624 RET
	0x0373E628 MOVI V0.2D, 0x0
	0x0373E62C STR X31, [X31 + 0x160]
	0x0373E630 STP V0, V0, [X31 + 0x140]
	0x0373E634 STP V0, V0, [X31 + 0x120]
	0x0373E638 STR V0, [X31 + 0x11]
	0x0373E63C B 0x373E5F4
	0x0373E640 ADRP X0, 0x9BA000
	0x0373E644 LDR X0, [X0 + 0x528]
	0x0373E648 BL 0x1C16D08
	0x0373E64C BL 0x1C16F10
	0x0373E650 MOV X19, X0
	0x0373E654 ADRP X0, 0x9DD000
	0x0373E658 LDR X0, [X0 + 0xBF8]
	0x0373E65C BL 0x1C16D08
	0x0373E660 MOV X1, X0
	0x0373E664 MOV X0, X19
	0x0373E668 MOV X2, X31
	0x0373E66C BL 0x330E100
	0x0373E670 ADRP X0, 0xA07000
	0x0373E674 LDR X0, [X0 + 0x3E8]
	0x0373E678 BL 0x1C16D08
	0x0373E67C MOV X1, X0
	0x0373E680 MOV X0, X19
	0x0373E684 BL 0x1C16DEC
	0x0373E688 SUB X31, X31, 0x180
	0x0373E68C STR X29, [X31 + 0x120]
	0x0373E690 STP X30, X27, [X31 + 0x130]
	0x0373E694 STP X26, X25, [X31 + 0x140]
	0x0373E698 STP X24, X23, [X31 + 0x150]
	0x0373E69C STP X22, X21, [X31 + 0x160]
	0x0373E6A0 STP X20, X19, [X31 + 0x170]
	0x0373E6A4 ADRP X22, 0xCA2000
	0x0373E6A8 LDRB W8, [X22 + 0xD3A]
	0x0373E6AC MOV W19, W2
	0x0373E6B0 MOV X20, X1
	0x0373E6B4 MOV X21, X0
	0x0373E6B8 TBNZ X8, 0x0, 0x373E700
	0x0373E6BC ADRP X0, 0x9DC000
	0x0373E6C0 LDR X0, [X0 + 0xFE8]
	0x0373E6C4 BL 0x1C16CF4
	0x0373E6C8 ADRP X0, 0xA07000
	0x0373E6CC LDR X0, [X0 + 0x108]
	0x0373E6D0 BL 0x1C16CF4
	0x0373E6D4 ADRP X0, 0x9B7000
	0x0373E6D8 LDR X0, [X0 + 0x278]
	0x0373E6DC BL 0x1C16CF4
	0x0373E6E0 ADRP X0, 0x9DF000
	0x0373E6E4 LDR X0, [X0 + 0xAE8]
	0x0373E6E8 BL 0x1C16CF4
	0x0373E6EC ADRP X0, 0x9B5000
	0x0373E6F0 LDR X0, [X0 + 0x988]
	0x0373E6F4 BL 0x1C16CF4
	0x0373E6F8 MOVZ W8, 0x1
	0x0373E6FC STRB W8, [X22 + 0xD3A]
	0x0373E700 MOVI V0.2D, 0x0
	0x0373E704 STP X31, X31, [X31 + 0x110]
	0x0373E708 STR X31, [X31 + 0x100]
	0x0373E70C STP V0, V0, [X31 + 0xE0]
	0x0373E710 STP V0, V0, [X31 + 0xC0]
	0x0373E714 STR V0, [X31 + 0xB]
	0x0373E718 CBZ X21, 0x373E84C
	0x0373E71C ADRP X8, 0x9B7000
	0x0373E720 LDR X8, [X8 + 0x278]
	0x0373E724 MOV X0, X21
	0x0373E728 LDR X8, [X8]
	0x0373E72C LDR X8, [X8 + 0xB8]
	0x0373E730 LDR X22, [X8]
	0x0373E734 BL 0x37345CC
	0x0373E738 UBFM X8, X1, 0x20, 0x3F
	0x0373E73C CMP W8, 0x1
	0x0373E740 STP X0, X1, [X31 + 0x110]
	0x0373E744 B.LT 0x373E828
	0x0373E748 ADRP X25, 0xA07000
	0x0373E74C ADRP X26, 0x9B5000
	0x0373E750 ADRP X27, 0x9DF000
	0x0373E754 LDR X25, [X25 + 0x108]
	0x0373E758 LDR X26, [X26 + 0x988]
	0x0373E75C LDR X27, [X27 + 0xAE8]
	0x0373E760 MOV W23, W31
	0x0373E764 LDR X2, [X25]
	0x0373E768 ADD X8, X31, 0x58
	0x0373E76C ADD X0, X31, 0x110
	0x0373E770 MOV W1, W23
	0x0373E774 BL 0x24FC334
	0x0373E778 ADD X0, X31, 0xB0
	0x0373E77C ADD X1, X31, 0x58
	0x0373E780 MOVZ W2, 0x58
	0x0373E784 BL 0x3EB1AC0
	0x0373E788 ADD X0, X31, 0xB0
	0x0373E78C MOV X1, X31
	0x0373E790 BL 0x3749FA8
	0x0373E794 TBNZ X0, 0x0, 0x373E818
	0x0373E798 LDR X2, [X25]
	0x0373E79C ADD X8, X31, 0x58
	0x0373E7A0 ADD X0, X31, 0x110
	0x0373E7A4 MOV W1, W23
	0x0373E7A8 BL 0x24FC334
	0x0373E7AC ADD X0, X31, 0x0
	0x0373E7B0 ADD X1, X31, 0x58
	0x0373E7B4 MOVZ W2, 0x58
	0x0373E7B8 BL 0x3EB1AC0
	0x0373E7BC ADD X1, X31, 0x0
	0x0373E7C0 MOV X0, X20
	0x0373E7C4 MOV X2, X31
	0x0373E7C8 BL 0x3752E94
	0x0373E7CC TBZ X0, 0x0, 0x373E818
	0x0373E7D0 MOV X0, X21
	0x0373E7D4 MOV W1, W23
	0x0373E7D8 MOV W2, W19
	0x0373E7DC BL 0x373E894
	0x0373E7E0 LDR X1, [X26]
	0x0373E7E4 MOV X24, X0
	0x0373E7E8 MOV X0, X22
	0x0373E7EC MOV X2, X31
	0x0373E7F0 BL 0x3226EF8
	0x0373E7F4 TBZ X0, 0x0, 0x373E814
	0x0373E7F8 LDR X1, [X27]
	0x0373E7FC MOV X0, X22
	0x0373E800 MOV X2, X24
	0x0373E804 MOV X3, X31
	0x0373E808 BL 0x32274B8
	0x0373E80C MOV X22, X0
	0x0373E810 B 0x373E818
	0x0373E814 MOV X22, X24
	0x0373E818 LDR W8, [X31 + 0x11C]
	0x0373E81C ADD W23, W23, 0x1
	0x0373E820 CMP W23, W8
	0x0373E824 B.LT 0x373E764
	0x0373E828 MOV X0, X22
	0x0373E82C LDP X20, X19, [X31 + 0x170]
	0x0373E830 LDP X22, X21, [X31 + 0x160]
	0x0373E834 LDP X24, X23, [X31 + 0x150]
	0x0373E838 LDP X26, X25, [X31 + 0x140]
	0x0373E83C LDP X30, X27, [X31 + 0x130]
	0x0373E840 LDR X29, [X31 + 0x120]
	0x0373E844 ADD X31, X31, 0x180
	0x0373E848 RET
	0x0373E84C ADRP X0, 0x9BA000
	0x0373E850 LDR X0, [X0 + 0x528]
	0x0373E854 BL 0x1C16D08
	0x0373E858 BL 0x1C16F10
	0x0373E85C MOV X19, X0
	0x0373E860 ADRP X0, 0x9DD000
	0x0373E864 LDR X0, [X0 + 0xBF8]
	0x0373E868 BL 0x1C16D08
	0x0373E86C MOV X1, X0
	0x0373E870 MOV X0, X19
	0x0373E874 MOV X2, X31
	0x0373E878 BL 0x330E100
	0x0373E87C ADRP X0, 0xA07000
	0x0373E880 LDR X0, [X0 + 0x3F0]
	0x0373E884 BL 0x1C16D08
	0x0373E888 MOV X1, X0
	0x0373E88C MOV X0, X19
	0x0373E890 BL 0x1C16DEC
	0x0373E894 SUB X31, X31, 0x20
	0x0373E898 STP X30, X19, [X31 + 0x10]
	0x0373E89C STP X31, X31, [X31]
	0x0373E8A0 CBZ X0, 0x373E8C0
	0x0373E8A4 MOV W4, W2
	0x0373E8A8 ADD X2, X31, 0x8
	0x0373E8AC ADD X3, X31, 0x0
	0x0373E8B0 BL 0x373E908
	0x0373E8B4 LDP X30, X19, [X31 + 0x10]
	0x0373E8B8 ADD X31, X31, 0x20
	0x0373E8BC RET
	0x0373E8C0 ADRP X0, 0x9BA000
	0x0373E8C4 LDR X0, [X0 + 0x528]
	0x0373E8C8 BL 0x1C16D08
	0x0373E8CC BL 0x1C16F10
	0x0373E8D0 MOV X19, X0
	0x0373E8D4 ADRP X0, 0x9DD000
	0x0373E8D8 LDR X0, [X0 + 0xBF8]
	0x0373E8DC BL 0x1C16D08
	0x0373E8E0 MOV X1, X0
	0x0373E8E4 MOV X0, X19
	0x0373E8E8 MOV X2, X31
	0x0373E8EC BL 0x330E100
	0x0373E8F0 ADRP X0, 0xA07000
	0x0373E8F4 LDR X0, [X0 + 0x3F8]

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Subtract X31, X31, 1024
	014 Move X24, 0xCA3000
	015 Move W8, [X24+3381]
	016 Move X19, X4
	017 Move X22, X3
	018 Move X23, X2
	019 Move W21, W1
	020 Move X20, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {39}
	025 Move X0, 0xA08000
	026 Move X0, [X0+912]
	027 Call 0x1C17CF4
	028 Move X0, 0xA08000
	029 Move X0, [X0+920]
	030 Call 0x1C17CF4
	031 Move X0, 0xA08000
	032 Move X0, [X0+928]
	033 Call 0x1C17CF4
	034 Move X0, 0x9B6000
	035 Move X0, [X0+1728]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X24+3381], W8
	039 Add X0, X31, 736
	040 Move W2, 168
	041 Move W1, W31
	042 Call 0x3EB2B10
	043 NotImplemented "Instruction MOVI not yet implemented."
	044 Move [X31+592], X31
	045 Move [X31+704], V0
	046 Move [X31+712], V0
	047 Move [X31+672], V0
	048 Move [X31+680], V0
	049 Move [X31+640], V0
	050 Move [X31+648], V0
	051 Move [X31+608], V0
	052 Move [X31+616], V0
	053 Move [X31+560], V0
	054 Move [X31+568], V0
	055 Move [X31+528], V0
	056 Move [X31+536], V0
	057 Move [X31+496], V0
	058 Move [X31+504], V0
	059 Move [X31+30], V0
	060 Move [X31+464], X31
	061 Move [X31+472], X31
	062 Move X27, [X23]
	063 Compare X27, 0
	064 JumpIfEqual {125}
	065 Move W8, [X22]
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Add X8, X31, 0
	068 Move X25, X31
	069 Move X26, X31
	070 Add X24, X8, 16
	071 Move W8, [X27+24]
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Add X28, X27, X25
	074 Move X0, [X28+32]
	075 Move X1, [X19]
	076 Move W2, 5
	077 Move X3, X31
	078 Call String.Equals, X0, X1, X2
	079 Move TEMP, X0
	080 And TEMP, TEMP, 1
	081 Compare TEMP, 1
	082 JumpIfNotEqual {117}
	083 Move X0, [X28+40]
	084 Move X1, [X19+8]
	085 Move W2, 5
	086 Move X3, X31
	087 Call String.Equals, X0, X1, X2
	088 Move TEMP, X0
	089 And TEMP, TEMP, 1
	090 Compare TEMP, 1
	091 JumpIfNotEqual {117}
	092 Add X27, X27, X25
	093 Add X1, X27, 48
	094 Add X0, X31, 904
	095 Move W2, 88
	096 Call 0x3EB2AC0
	097 Add X0, X31, 0
	098 Move W2, 120
	099 Move X1, X19
	100 Call 0x3EB2AC0
	101 Add X0, X31, 288
	102 Move W2, 88
	103 Move X1, X24
	104 Call 0x3EB2AC0
	105 Add X0, X31, 376
	106 Add X1, X31, 904
	107 Move W2, 88
	108 Call 0x3EB2AC0
	109 Add X0, X31, 376
	110 Add X1, X31, 288
	111 Move X2, X31
	112 Call InputBinding.op_Equality, X0, X1
	113 Move TEMP, X0
	114 And TEMP, TEMP, 1
	115 Compare TEMP, 1
	116 JumpIfEqual {237}
	117 NotImplemented "Instruction LDRSW not yet implemented."
	118 Add X26, X26, 1
	119 NotImplemented "Instruction CMP not yet implemented."
	120 Move X27, [X23]
	121 Add X25, X25, 120
	122 Compare X27, 0
	123 JumpIfNotEqual {71}
	124 Call 0x1C17F20
	125 Move X24, 0xA08000
	126 Move X24, [X24+912]
	127 Add X0, X31, 168
	128 Move W2, 120
	129 Move X1, X19
	130 Call 0x3EB2AC0
	131 Move X24, [X24]
	132 Add X0, X31, 0
	133 Add X1, X31, 168
	134 Move W2, 120
	135 Call 0x3EB2AC0
	136 Add X2, X31, 0
	137 Move W3, 10
	138 Move X0, X23
	139 Move X1, X22
	140 Move X4, X24
	141 Call ArrayHelpers.AppendWithCapacity, X0, X1, X2, X3
	142 Move X26, 0x9B6000
	143 Move X27, 0xA08000
	144 Move X26, [X26+1728]
	145 Move X27, [X27+928]
	146 Add X0, X31, 904
	147 Move W2, 120
	148 Move X1, X19
	149 Call 0x3EB2AC0
	150 Add X0, X31, 0
	151 Move W2, 168
	152 Move W1, W31
	153 Call 0x3EB2B10
	154 Add X0, X31, 0
	155 Add X2, X31, 904
	156 Move X1, X20
	157 Move W3, W21
	158 Call ParameterEnumerator..ctor, X0, X1, X2, X3
	159 Add X0, X31, 736
	160 Add X1, X31, 0
	161 Move W2, 168
	162 Call 0x3EB2AC0
	163 Add X8, X31, 480
	164 Add X21, X8, 104
	165 Add X0, X31, 736
	166 Call ParameterEnumerator.MoveNext, X0
	167 Move TEMP, X0
	168 And TEMP, TEMP, 1
	169 Compare TEMP, 1
	170 JumpIfNotEqual {250}
	171 Compare X20, 0
	172 JumpIfEqual {241}
	173 Move X22, [X31+888]
	174 Move X23, [X31+896]
	175 Move W25, [X31+748]
	176 Move X0, X20
	177 Move W1, W25
	178 Move X2, X31
	179 Call InputActionState.GetActionMap, X0, X1
	180 Move X24, X0
	181 Move X0, X20
	182 Move W1, W25
	183 Move X2, X31
	184 Call InputActionState.GetBinding, X0, X1
	185 Move X1, X0
	186 Move X3, [X19]
	187 Move X2, [X19+8]
	188 Add X8, X31, 0
	189 Move X0, X24
	190 Call ParameterOverride.Find, X0, X1, X2, X3
	191 Add X0, X31, 608
	192 Add X1, X31, 0
	193 Move W2, 128
	194 Call 0x3EB2AC0
	195 Move W8, [X31+608]
	196 Compare W8, 0
	197 JumpIfEqual {165}
	198 Compare X23, 0
	199 JumpIfEqual {242}
	200 Move X8, [X23]
	201 Move X1, [X8+608]
	202 Move X9, [X8+600]
	203 Move X0, X23
	204 NotImplemented "Instruction BLR not yet implemented."
	205 Move X24, X0
	206 Move X0, [X26]
	207 Move W8, [X0+224]
	208 Compare W8, 0
	209 JumpIfNotEqual {211}
	210 Call 0x1C17DFC
	211 Move X0, X24
	212 Move X1, X31
	213 Call Type.GetTypeCode, X0
	214 Move X1, [X27]
	215 Move W24, W0
	216 Add X8, X31, 0
	217 Add X0, X31, 608
	218 Call Nullable`1<ParameterOverride>.get_Value, X0
	219 Add X0, X31, 480
	220 Add X1, X31, 0
	221 Move W2, 120
	222 Call 0x3EB2AC0
	223 Move X0, X21
	224 Move W1, W24
	225 Move X2, X31
	226 Call PrimitiveValue.ConvertTo, X0, X1
	227 Move [X31+464], X0
	228 Move [X31+472], X1
	229 Add X0, X31, 464
	230 Move X1, X31
	231 Call PrimitiveValue.ToObject, X0
	232 Move X2, X0
	233 Move X0, X23
	234 Move X1, X22
	235 Move X3, X31
	236 Call FieldInfo.SetValue, X0, X1, X2
	237 Add X0, X27, 32
	238 Move W2, 120
	239 Move X1, X19
	240 Call 0x3EB2B30
	241 Call 0x1C17F20
	242 Call 0x1C17F20
	243 Call 0x1C17F28
	244 NotImplemented "Instruction CMP not yet implemented."
	245 Call 0x3EB2AD0
	246 Move X19, [X0]
	247 Call 0x3EB2AE0
	248 Compare X19, 0
	249 JumpIfNotEqual {264}
	250 Add X31, X31, 1024
	251 Move X20, [X31+80]
	252 Move X19, [X31+88]
	253 Move X22, [X31+64]
	254 Move X21, [X31+72]
	255 Move X24, [X31+48]
	256 Move X23, [X31+56]
	257 Move X26, [X31+32]
	258 Move X25, [X31+40]
	259 Move X28, [X31+16]
	260 Move X27, [X31+24]
	261 Move X29, [X31+96]
	262 Move X30, [X31+104]
	263 Return 
	264 Move X0, X19
	265 Call 0x1C17F18
	266 Compare X19, 0
	267 JumpIfNotEqual {269}
	268 Call 0x1D2D690
	269 Move X0, X19
	270 Call 0x1C17F18
	271 Call 0x1991590

Method: System.Int32 GetBindingIndex(UnityEngine.InputSystem.InputAction action, UnityEngine.InputSystem.InputBinding bindingMask)

Disassembly:
	0x0373EF4C CBNZ X21, 0x373EF5C
	0x0373EF50 MOV X0, X19
	0x0373EF54 BL 0x373572C
	0x0373EF58 LDR X21, [X19 + 0xC8]
	0x0373EF5C ADD X0, X31, 0x0
	0x0373EF60 MOVZ W2, 0x58
	0x0373EF64 MOV X1, X20
	0x0373EF68 BL 0x3EB1AC0
	0x0373EF6C ADD X1, X31, 0x0
	0x0373EF70 MOV X0, X21
	0x0373EF74 BL 0x373EFFC
	0x0373EF78 CBZ W23, 0x373EF8C
	0x0373EF7C MOV X0, X19
	0x0373EF80 BL 0x37350C8
	0x0373EF84 MOV X0, X19
	0x0373EF88 BL 0x37357EC
	0x0373EF8C LDR X8, [X22 + 0x28]
	0x0373EF90 LDR X9, [X31 + 0x88]
	0x0373EF94 CMP X8, X9
	0x0373EF98 B.NE 0x373EFF8
	0x0373EF9C LDP X20, X19, [X31 + 0xB0]
	0x0373EFA0 LDP X22, X21, [X31 + 0xA0]
	0x0373EFA4 LDP X30, X23, [X31 + 0x90]
	0x0373EFA8 ADD X31, X31, 0xC0
	0x0373EFAC RET
	0x0373EFB0 ADRP X0, 0x9BA000
	0x0373EFB4 LDR X0, [X0 + 0x528]
	0x0373EFB8 BL 0x1C16D08
	0x0373EFBC BL 0x1C16F10
	0x0373EFC0 MOV X19, X0
	0x0373EFC4 ADRP X0, 0x9DD000
	0x0373EFC8 LDR X0, [X0 + 0xBF8]
	0x0373EFCC BL 0x1C16D08
	0x0373EFD0 MOV X1, X0
	0x0373EFD4 MOV X0, X19
	0x0373EFD8 MOV X2, X31
	0x0373EFDC BL 0x330E100
	0x0373EFE0 ADRP X0, 0xA07000
	0x0373EFE4 LDR X0, [X0 + 0x438]
	0x0373EFE8 BL 0x1C16D08
	0x0373EFEC MOV X1, X0
	0x0373EFF0 MOV X0, X19
	0x0373EFF4 BL 0x1C16DEC
	0x0373EFF8 BL 0x3EB1B20
	0x0373EFFC STP X30, X25, [X31 - 0x40]!
	0x0373F000 STP X24, X23, [X31 + 0x10]
	0x0373F004 STP X22, X21, [X31 + 0x20]
	0x0373F008 STP X20, X19, [X31 + 0x30]
	0x0373F00C CBZ X0, 0x373F0E4
	0x0373F010 LDR X22, [X0 + 0x30]
	0x0373F014 MOV X19, X0
	0x0373F018 CBZ X22, 0x373F09C
	0x0373F01C LDR X8, [X22 + 0x18]
	0x0373F020 CMP W8, 0x1
	0x0373F024 B.LT 0x373F09C
	0x0373F028 AND X8, X8, 0x0
	0x0373F02C CBZ X8, 0x373F098
	0x0373F030 MOV X21, X1
	0x0373F034 MOV W20, W31
	0x0373F038 MOV X23, X31
	0x0373F03C SUB X24, X8, 0x1
	0x0373F040 ADD X25, X22, 0x70
	0x0373F044 SUB X1, X25, 0x50
	0x0373F048 MOV X0, X21
	0x0373F04C MOV W2, W31
	0x0373F050 MOV X3, X31
	0x0373F054 BL 0x3752E9C
	0x0373F058 TBZ X0, 0x0, 0x373F07C

ISIL:
	001 Subtract X31, X31, 224
	002 Move [X31+192], X30
	003 Move [X31+200], X21
	004 Move [X31+208], X20
	005 Move [X31+216], X19
	006 Move X21, 0xCA3000
	007 Move W8, [X21+3382]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x9DD000
	015 Move X0, [X0+4072]
	016 Call 0x1C17CF4
	017 Move X0, 0xA08000
	018 Move X0, [X0+264]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+3382], W8
	022 Compare X20, 0
	023 JumpIfEqual {65}
	024 Move X0, X20
	025 Call InputAction.get_bindings, X0
	026 Move X8, X1
	027 ShiftRight X8, 32
	028 And X8, X8, 0x7FFFFFFF
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move [X31+176], X0
	031 Move [X31+184], X1
	032 Move X21, 0xA08000
	033 Move X21, [X21+264]
	034 Move W20, W31
	035 Move X2, [X21]
	036 Add X8, X31, 88
	037 Add X0, X31, 176
	038 Move W1, W20
	039 Call 0x24FD334, X0, X1
	040 Add X0, X31, 0
	041 Add X1, X31, 88
	042 Move W2, 88
	043 Call 0x3EB2AC0
	044 Add X1, X31, 0
	045 Move X0, X19
	046 Move X2, X31
	047 Call InputBinding.Matches, X0, X1
	048 Move TEMP, X0
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfEqual {58}
	052 Move W8, [X31+188]
	053 Add W20, W20, 1
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move TEMP, 0
	056 Not TEMP
	057 Move W20, TEMP
	058 Move W0, W20
	059 Move X20, [X31+208]
	060 Move X19, [X31+216]
	061 Move X30, [X31+192]
	062 Move X21, [X31+200]
	063 Add X31, X31, 224
	064 Return X0
	065 Move X0, 0x9BA000
	066 Move X0, [X0+1320]
	067 Call 0x1C17D08
	068 Call 0x1C17F10
	069 Move X19, X0
	070 Move X0, 0x9DD000
	071 Move X0, [X0+3064]
	072 Call 0x1C17D08
	073 Move X1, X0
	074 Move X0, X19
	075 Move X2, X31
	076 Call ArgumentNullException..ctor, X0, X1
	077 Move X0, 0xA07000
	078 Move X0, [X0+960]
	079 Call 0x1C17D08
	080 Move X1, X0
	081 Move X0, X19
	082 Call 0x1C17DEC

Method: System.Int32 GetBindingIndex(UnityEngine.InputSystem.InputActionMap actionMap, UnityEngine.InputSystem.InputBinding bindingMask)

Disassembly:
	0x0373F05C LDR W8, [X22 + 0x18]
	0x0373F060 CMP X23, X8
	0x0373F064 B.CS 0x373F098
	0x0373F068 LDR V0, [X21 + 0x4]
	0x0373F06C ADD W20, W20, 0x1
	0x0373F070 STUR V0, [X25 - 0x10]
	0x0373F074 LDR X8, [X21 + 0x50]
	0x0373F078 STR X8, [X25]
	0x0373F07C CMP X24, X23
	0x0373F080 B.EQ 0x373F0A4
	0x0373F084 LDR W8, [X22 + 0x18]
	0x0373F088 ADD X23, X23, 0x1
	0x0373F08C ADD X25, X25, 0x58
	0x0373F090 CMP X23, X8
	0x0373F094 B.CC 0x373F044
	0x0373F098 BL 0x1C16F28
	0x0373F09C MOV W20, W31
	0x0373F0A0 B 0x373F0CC
	0x0373F0A4 CMP W20, 0x1
	0x0373F0A8 B.LT 0x373F0CC
	0x0373F0AC LDR W8, [X19 + 0xC8]
	0x0373F0B0 MOVZ W1, 0x1
	0x0373F0B4 MOV X0, X19
	0x0373F0B8 STP X31, X31, [X19 + 0x38]
	0x0373F0BC AND W8, W8, 0xFFFFFFF3
	0x0373F0C0 STR X31, [X19 + 0x138]
	0x0373F0C4 STR W8, [X19 + 0xC8]
	0x0373F0C8 BL 0x3734520
	0x0373F0CC MOV W0, W20
	0x0373F0D0 LDP X20, X19, [X31 + 0x30]
	0x0373F0D4 LDP X22, X21, [X31 + 0x20]
	0x0373F0D8 LDP X24, X23, [X31 + 0x10]
	0x0373F0DC LDP X30, X25, [X31], #0x40
	0x0373F0E0 RET
	0x0373F0E4 ADRP X0, 0x9B9000
	0x0373F0E8 LDR X0, [X0 + 0x528]
	0x0373F0EC BL 0x1C16D08
	0x0373F0F0 BL 0x1C16F10
	0x0373F0F4 MOV X19, X0
	0x0373F0F8 ADRP X0, 0x9DC000
	0x0373F0FC LDR X0, [X0 + 0xC10]
	0x0373F100 BL 0x1C16D08
	0x0373F104 MOV X1, X0
	0x0373F108 MOV X0, X19
	0x0373F10C MOV X2, X31
	0x0373F110 BL 0x330E100
	0x0373F114 ADRP X0, 0xA06000
	0x0373F118 LDR X0, [X0 + 0x440]
	0x0373F11C BL 0x1C16D08
	0x0373F120 MOV X1, X0
	0x0373F124 MOV X0, X19
	0x0373F128 BL 0x1C16DEC
	0x0373F12C SUB X31, X31, 0x90
	0x0373F130 STR X30, [X31 + 0x60]
	0x0373F134 STP X22, X21, [X31 + 0x70]
	0x0373F138 STP X20, X19, [X31 + 0x80]
	0x0373F13C CBZ X0, 0x373F1A0
	0x0373F140 MOV X19, X2
	0x0373F144 MOV X21, X0
	0x0373F148 BL 0x3735A88
	0x0373F14C LDR X8, [X21 + 0x10]
	0x0373F150 MOV W20, W0
	0x0373F154 STR X8, [X19 + 0x30]
	0x0373F158 LDR X22, [X21 + 0xC8]
	0x0373F15C CBNZ X22, 0x373F16C
	0x0373F160 MOV X0, X21
	0x0373F164 BL 0x373572C
	0x0373F168 LDR X22, [X21 + 0xC8]

ISIL:
	001 Subtract X31, X31, 224
	002 Move [X31+192], X30
	003 Move [X31+200], X21
	004 Move [X31+208], X20
	005 Move [X31+216], X19
	006 Move X21, 0xCA2000
	007 Move W8, [X21+3383]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x9DC000
	015 Move X0, [X0+4072]
	016 Call 0x1C17CF4
	017 Move X0, 0xA07000
	018 Move X0, [X0+264]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+3383], W8
	022 Compare X20, 0
	023 JumpIfEqual {65}
	024 Move X0, X20
	025 Call InputActionMap.get_bindings, X0
	026 Move X8, X1
	027 ShiftRight X8, 32
	028 And X8, X8, 0x7FFFFFFF
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move [X31+176], X0
	031 Move [X31+184], X1
	032 Move X21, 0xA07000
	033 Move X21, [X21+264]
	034 Move W20, W31
	035 Move X2, [X21]
	036 Add X8, X31, 88
	037 Add X0, X31, 176
	038 Move W1, W20
	039 Call 0x24FD334, X0, X1
	040 Add X0, X31, 0
	041 Add X1, X31, 88
	042 Move W2, 88
	043 Call 0x3EB2AC0
	044 Add X1, X31, 0
	045 Move X0, X19
	046 Move X2, X31
	047 Call InputBinding.Matches, X0, X1
	048 Move TEMP, X0
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfEqual {58}
	052 Move W8, [X31+188]
	053 Add W20, W20, 1
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move TEMP, 0
	056 Not TEMP
	057 Move W20, TEMP
	058 Move W0, W20
	059 Move X20, [X31+208]
	060 Move X19, [X31+216]
	061 Move X30, [X31+192]
	062 Move X21, [X31+200]
	063 Add X31, X31, 224
	064 Return X0
	065 Move X0, 0x9BA000
	066 Move X0, [X0+1320]
	067 Call 0x1C17D08
	068 Call 0x1C17F10
	069 Move X19, X0
	070 Move X0, 0x9DD000
	071 Move X0, [X0+3088]
	072 Call 0x1C17D08
	073 Move X1, X0
	074 Move X0, X19
	075 Move X2, X31
	076 Call ArgumentNullException..ctor, X0, X1
	077 Move X0, 0xA07000
	078 Move X0, [X0+968]
	079 Call 0x1C17D08
	080 Move X1, X0
	081 Move X0, X19
	082 Call 0x1C17DEC

Method: System.Int32 GetBindingIndex(UnityEngine.InputSystem.InputAction action, System.String group = null, System.String path = null)

Disassembly:
	0x0373F16C ADD X0, X31, 0x8
	0x0373F170 MOVZ W2, 0x58
	0x0373F174 MOV X1, X19
	0x0373F178 BL 0x3EB1AC0
	0x0373F17C ADD X2, X31, 0x8
	0x0373F180 MOV X0, X22
	0x0373F184 MOV W1, W20
	0x0373F188 BL 0x373F1E8
	0x0373F18C LDP X20, X19, [X31 + 0x80]
	0x0373F190 LDP X22, X21, [X31 + 0x70]
	0x0373F194 LDR X30, [X31 + 0x60]
	0x0373F198 ADD X31, X31, 0x90
	0x0373F19C RET
	0x0373F1A0 ADRP X0, 0x9B9000
	0x0373F1A4 LDR X0, [X0 + 0x528]
	0x0373F1A8 BL 0x1C16D08
	0x0373F1AC BL 0x1C16F10
	0x0373F1B0 MOV X19, X0
	0x0373F1B4 ADRP X0, 0x9DC000
	0x0373F1B8 LDR X0, [X0 + 0xBF8]
	0x0373F1BC BL 0x1C16D08
	0x0373F1C0 MOV X1, X0
	0x0373F1C4 MOV X0, X19
	0x0373F1C8 MOV X2, X31
	0x0373F1CC BL 0x330E100
	0x0373F1D0 ADRP X0, 0xA06000
	0x0373F1D4 LDR X0, [X0 + 0x448]
	0x0373F1D8 BL 0x1C16D08
	0x0373F1DC MOV X1, X0
	0x0373F1E0 MOV X0, X19
	0x0373F1E4 BL 0x1C16DEC
	0x0373F1E8 STR X30, [X31 - 0x30]!
	0x0373F1EC STP X22, X21, [X31 + 0x10]
	0x0373F1F0 STP X20, X19, [X31 + 0x20]
	0x0373F1F4 CBZ X0, 0x373F25C
	0x0373F1F8 LDR X8, [X0 + 0x30]
	0x0373F1FC CBZ X8, 0x373F2A4
	0x0373F200 LDR W9, [X8 + 0x18]
	0x0373F204 TBNZ X1, 0x1F, 0x373F2A8
	0x0373F208 CMP W9, W1
	0x0373F20C B.LE 0x373F2A8
	0x0373F210 LDR W9, [X8 + 0x18]
	0x0373F214 CMP W9, W1
	0x0373F218 B.LS 0x373F358
	0x0373F21C LDR V0, [X2 + 0x4]
	0x0373F220 MOVZ W9, 0x58
	0x0373F224 UMADDL X8, X1, X9, X8

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+192], X30
	003 Move [X31+200], X19
	004 Compare X0, 0
	005 JumpIfEqual {35}
	006 Move X3, X1
	007 Move X19, X0
	008 Add X8, X31, 96
	009 NotImplemented "Instruction MOVI not yet implemented."
	010 Add X0, X31, 96
	011 Move X1, X2
	012 Move X2, X31
	013 Move X4, X31
	014 Move X5, X31
	015 Move X6, X31
	016 Move X7, X31
	017 Move [X31+176], X31
	018 Move [X8+48], V0
	019 Move [X8+56], V0
	020 Move [X31+112], V0
	021 Move [X31+120], V0
	022 Move [X31+6], V0
	023 Call InputBinding..ctor, X0, X1, X2, X3, X4, X5, X6
	024 Add X0, X31, 8
	025 Add X1, X31, 96
	026 Move W2, 88
	027 Call 0x3EB2AC0
	028 Add X1, X31, 8
	029 Move X0, X19
	030 Call InputActionRebindingExtensions.GetBindingIndex, X0, X1
	031 Move X30, [X31+192]
	032 Move X19, [X31+200]
	033 Add X31, X31, 208
	034 Return X0
	035 Move X0, 0x9BA000
	036 Move X0, [X0+1320]
	037 Call 0x1C17D08
	038 Call 0x1C17F10
	039 Move X19, X0
	040 Move X0, 0x9DD000
	041 Move X0, [X0+3064]
	042 Call 0x1C17D08
	043 Move X1, X0
	044 Move X0, X19
	045 Move X2, X31
	046 Call ArgumentNullException..ctor, X0, X1
	047 Move X0, 0xA07000
	048 Move X0, [X0+976]
	049 Call 0x1C17D08
	050 Move X1, X0
	051 Move X0, X19
	052 Call 0x1C17DEC

Method: System.Nullable`1<UnityEngine.InputSystem.InputBinding> GetBindingForControl(UnityEngine.InputSystem.InputAction action, UnityEngine.InputSystem.InputControl control)

Disassembly:
	0x0373F228 LDP X20, X19, [X31 + 0x20]
	0x0373F22C STR V0, [X8 + 0x6]
	0x0373F230 LDR X9, [X2 + 0x50]
	0x0373F234 LDP X22, X21, [X31 + 0x10]
	0x0373F238 MOVZ W1, 0x1
	0x0373F23C STR X9, [X8 + 0x70]
	0x0373F240 LDR W8, [X0 + 0xC8]
	0x0373F244 STP X31, X31, [X0 + 0x38]
	0x0373F248 STR X31, [X0 + 0x138]
	0x0373F24C AND W8, W8, 0xFFFFFFF3
	0x0373F250 STR W8, [X0 + 0xC8]
	0x0373F254 LDR X30, [X31], #0x30
	0x0373F258 B 0x3734520
	0x0373F25C ADRP X0, 0x9B9000
	0x0373F260 LDR X0, [X0 + 0x528]
	0x0373F264 BL 0x1C16D08
	0x0373F268 BL 0x1C16F10
	0x0373F26C MOV X19, X0
	0x0373F270 ADRP X0, 0x9DC000
	0x0373F274 LDR X0, [X0 + 0xC10]
	0x0373F278 BL 0x1C16D08
	0x0373F27C MOV X1, X0
	0x0373F280 MOV X0, X19
	0x0373F284 MOV X2, X31
	0x0373F288 BL 0x330E100
	0x0373F28C ADRP X0, 0xA06000
	0x0373F290 LDR X0, [X0 + 0x450]
	0x0373F294 BL 0x1C16D08
	0x0373F298 MOV X1, X0
	0x0373F29C MOV X0, X19
	0x0373F2A0 BL 0x1C16DEC
	0x0373F2A4 MOV W9, W31
	0x0373F2A8 STR W1, [X31 + 0xC]
	0x0373F2AC ADRP X19, 0x9B4000
	0x0373F2B0 LDR X19, [X19 + 0x758]
	0x0373F2B4 MOV X20, X0
	0x0373F2B8 MOV W22, W9
	0x0373F2BC MOV X0, X19
	0x0373F2C0 BL 0x1C16D08
	0x0373F2C4 ADD X1, X31, 0xC
	0x0373F2C8 BL 0x1C16E04
	0x0373F2CC MOV X21, X0
	0x0373F2D0 MOV X0, X19
	0x0373F2D4 STR W22, [X31 + 0x8]
	0x0373F2D8 BL 0x1C16D08
	0x0373F2DC ADD X1, X31, 0x8
	0x0373F2E0 BL 0x1C16E04
	0x0373F2E4 MOV X19, X0
	0x0373F2E8 ADRP X0, 0xA06000
	0x0373F2EC LDR X0, [X0 + 0x458]
	0x0373F2F0 BL 0x1C16D08
	0x0373F2F4 MOV X1, X21
	0x0373F2F8 MOV X2, X20
	0x0373F2FC MOV X3, X19
	0x0373F300 MOV X4, X31
	0x0373F304 BL 0x3227C18
	0x0373F308 MOV X19, X0
	0x0373F30C ADRP X0, 0x9BC000
	0x0373F310 LDR X0, [X0 + 0x760]
	0x0373F314 BL 0x1C16D08
	0x0373F318 BL 0x1C16F10
	0x0373F31C MOV X20, X0
	0x0373F320 ADRP X0, 0xA06000
	0x0373F324 LDR X0, [X0 + 0x378]
	0x0373F328 BL 0x1C16D08
	0x0373F32C MOV X1, X0
	0x0373F330 MOV X0, X20
	0x0373F334 MOV X2, X19
	0x0373F338 MOV X3, X31
	0x0373F33C BL 0x3311888
	0x0373F340 ADRP X0, 0xA06000
	0x0373F344 LDR X0, [X0 + 0x450]
	0x0373F348 BL 0x1C16D08
	0x0373F34C MOV X1, X0
	0x0373F350 MOV X0, X20
	0x0373F354 BL 0x1C16DEC
	0x0373F358 BL 0x1C16F28
	0x0373F35C SUB X31, X31, 0x80
	0x0373F360 STR X30, [X31 + 0x60]
	0x0373F364 STP X20, X19, [X31 + 0x70]
	0x0373F368 CBZ X2, 0x373F398
	0x0373F36C MOVI V0.2D, 0x0
	0x0373F370 STR X2, [X31 + 0x40]
	0x0373F374 ADD X2, X31, 0x0
	0x0373F378 STP X31, X31, [X31 + 0x48]
	0x0373F37C STP V0, V0, [X31 + 0x20]
	0x0373F380 STP V0, V0, [X31]
	0x0373F384 BL 0x373F12C
	0x0373F388 LDP X20, X19, [X31 + 0x70]
	0x0373F38C LDR X30, [X31 + 0x60]
	0x0373F390 ADD X31, X31, 0x80

ISIL:
	001 Subtract X31, X31, 240
	002 Move [X31+192], X30
	003 Move [X31+200], X23
	004 Move [X31+208], X22
	005 Move [X31+216], X21
	006 Move [X31+224], X20
	007 Move [X31+232], X19
	008 Move X22, 0xCA2000
	009 Move W9, [X22+3384]
	010 Move X21, X1
	011 Move X20, X0
	012 Move X19, X8
	013 Move TEMP, X9
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0xA06000
	018 Move X0, [X0+3920]
	019 Call 0x1C17CF4
	020 Move X0, 0xA07000
	021 Move X0, [X0+264]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+3384], W8
	025 Compare X20, 0
	026 JumpIfEqual {82}
	027 Compare X21, 0
	028 JumpIfEqual {89}
	029 Move X0, X20
	030 Move X1, X21
	031 Call InputActionRebindingExtensions.GetBindingIndexForControl, X0, X1
	032 Add W31, W0, 1
	033 Move X22, 0xA07000
	034 Move X23, 0xA06000
	035 Move X22, [X22+264]
	036 Move X23, [X23+3920]
	037 Move W21, W0
	038 Move X0, X20
	039 Call InputAction.get_bindings, X0
	040 Move X2, [X22]
	041 Move [X31+88], X0
	042 Move [X31+96], X1
	043 Add X8, X31, 104
	044 Add X0, X31, 88
	045 Move W1, W21
	046 Call 0x24FD334, X0, X1
	047 Add X0, X31, 0
	048 Add X1, X31, 104
	049 Move W2, 88
	050 Call 0x3EB2AC0
	051 Move X20, [X23]
	052 NotImplemented "Instruction MOVI not yet implemented."
	053 Add X0, X31, 104
	054 Add X1, X31, 0
	055 Move W2, 88
	056 Move [X19+64], V0
	057 Move [X19+72], V0
	058 Move [X19+32], V0
	059 Move [X19+40], V0
	060 Move [X19], V0
	061 Move [X19+8], V0
	062 Call 0x3EB2AC0
	063 Add X1, X31, 104
	064 Move X0, X19
	065 Move X2, X20
	066 Call Nullable`1<InputBinding>..ctor, X0, X1
	067 NotImplemented "Instruction MOVI not yet implemented."
	068 Move [X19+64], V0
	069 Move [X19+72], V0
	070 Move [X19+32], V0
	071 Move [X19+40], V0
	072 Move [X19], V0
	073 Move [X19+8], V0
	074 Move X20, [X31+224]
	075 Move X19, [X31+232]
	076 Move X22, [X31+208]
	077 Move X21, [X31+216]
	078 Move X30, [X31+192]
	079 Move X23, [X31+200]
	080 Add X31, X31, 240
	081 Return X0
	082 Move X0, 0x9BA000
	083 Move X0, [X0+1320]
	084 Call 0x1C17D08
	085 Call 0x1C17F10
	086 Move X19, X0
	087 Move X0, 0x9DD000
	088 Move X0, [X0+3064]
	089 Move X0, 0x9BA000
	090 Move X0, [X0+1320]
	091 Call 0x1C17D08
	092 Call 0x1C17F10
	093 Move X19, X0
	094 Move X0, 0x9DD000
	095 Move X0, [X0+3424]
	096 Call 0x1C17D08
	097 Move X1, X0
	098 Move X0, X19
	099 Move X2, X31
	100 Call ArgumentNullException..ctor, X0, X1
	101 Move X0, 0xA07000
	102 Move X0, [X0+984]
	103 Call 0x1C17D08
	104 Move X1, X0
	105 Move X0, X19
	106 Call 0x1C17DEC

Method: System.Int32 GetBindingIndexForControl(UnityEngine.InputSystem.InputAction action, UnityEngine.InputSystem.InputControl control)

Disassembly:
	0x0373F394 RET
	0x0373F398 ADRP X0, 0x9BC000
	0x0373F39C LDR X0, [X0 + 0x578]
	0x0373F3A0 BL 0x1C16D08
	0x0373F3A4 BL 0x1C16F10
	0x0373F3A8 MOV X19, X0
	0x0373F3AC ADRP X0, 0xA06000
	0x0373F3B0 LDR X0, [X0 + 0x460]
	0x0373F3B4 BL 0x1C16D08
	0x0373F3B8 MOV X20, X0
	0x0373F3BC ADRP X0, 0x9BF000
	0x0373F3C0 LDR X0, [X0 + 0x120]
	0x0373F3C4 BL 0x1C16D08
	0x0373F3C8 MOV X2, X0
	0x0373F3CC MOV X0, X19
	0x0373F3D0 MOV X1, X20
	0x0373F3D4 MOV X3, X31
	0x0373F3D8 BL 0x330E16C
	0x0373F3DC ADRP X0, 0xA06000
	0x0373F3E0 LDR X0, [X0 + 0x468]
	0x0373F3E4 BL 0x1C16D08
	0x0373F3E8 MOV X1, X0
	0x0373F3EC MOV X0, X19
	0x0373F3F0 BL 0x1C16DEC
	0x0373F3F4 SUB X31, X31, 0x70
	0x0373F3F8 STP X30, X19, [X31 + 0x60]
	0x0373F3FC CBZ X0, 0x373F428
	0x0373F400 MOVI V0.2D, 0x0
	0x0373F404 ADD X2, X31, 0x0
	0x0373F408 STR X31, [X31 + 0x50]
	0x0373F40C STP V0, V0, [X31 + 0x30]
	0x0373F410 STP V0, V0, [X31 + 0x10]
	0x0373F414 STR V0, [X31]
	0x0373F418 BL 0x373F12C
	0x0373F41C LDP X30, X19, [X31 + 0x60]
	0x0373F420 ADD X31, X31, 0x70
	0x0373F424 RET
	0x0373F428 ADRP X0, 0x9B9000
	0x0373F42C LDR X0, [X0 + 0x528]
	0x0373F430 BL 0x1C16D08
	0x0373F434 BL 0x1C16F10
	0x0373F438 MOV X19, X0
	0x0373F43C ADRP X0, 0x9DC000
	0x0373F440 LDR X0, [X0 + 0xBF8]
	0x0373F444 BL 0x1C16D08
	0x0373F448 MOV X1, X0
	0x0373F44C MOV X0, X19
	0x0373F450 MOV X2, X31
	0x0373F454 BL 0x330E100
	0x0373F458 ADRP X0, 0xA06000
	0x0373F45C LDR X0, [X0 + 0x470]
	0x0373F460 BL 0x1C16D08
	0x0373F464 MOV X1, X0
	0x0373F468 MOV X0, X19
	0x0373F46C BL 0x1C16DEC
	0x0373F470 SUB X31, X31, 0x70
	0x0373F474 STP X30, X19, [X31 + 0x60]
	0x0373F478 CBZ X0, 0x373F4AC
	0x0373F47C MOV X19, X0
	0x0373F480 ADD X0, X31, 0x8
	0x0373F484 MOVZ W2, 0x58
	0x0373F488 STP X31, X31, [X1 + 0x40]
	0x0373F48C STR X31, [X1 + 0x50]
	0x0373F490 BL 0x3EB1AC0
	0x0373F494 ADD X1, X31, 0x8
	0x0373F498 MOV X0, X19
	0x0373F49C BL 0x373EF00
	0x0373F4A0 LDP X30, X19, [X31 + 0x60]
	0x0373F4A4 ADD X31, X31, 0x70
	0x0373F4A8 RET
	0x0373F4AC ADRP X0, 0x9B9000
	0x0373F4B0 LDR X0, [X0 + 0x528]
	0x0373F4B4 BL 0x1C16D08
	0x0373F4B8 BL 0x1C16F10
	0x0373F4BC MOV X19, X0
	0x0373F4C0 ADRP X0, 0x9DC000
	0x0373F4C4 LDR X0, [X0 + 0xBF8]
	0x0373F4C8 BL 0x1C16D08
	0x0373F4CC MOV X1, X0
	0x0373F4D0 MOV X0, X19
	0x0373F4D4 MOV X2, X31
	0x0373F4D8 BL 0x330E100
	0x0373F4DC ADRP X0, 0xA06000
	0x0373F4E0 LDR X0, [X0 + 0x478]
	0x0373F4E4 BL 0x1C16D08
	0x0373F4E8 MOV X1, X0
	0x0373F4EC MOV X0, X19
	0x0373F4F0 BL 0x1C16DEC
	0x0373F4F4 SUB X31, X31, 0x70
	0x0373F4F8 STP X30, X19, [X31 + 0x60]
	0x0373F4FC CBZ X0, 0x373F530
	0x0373F500 MOV X19, X0
	0x0373F504 ADD X0, X31, 0x8
	0x0373F508 MOVZ W2, 0x58
	0x0373F50C STP X31, X31, [X1 + 0x40]
	0x0373F510 STR X31, [X1 + 0x50]
	0x0373F514 BL 0x3EB1AC0
	0x0373F518 ADD X1, X31, 0x8
	0x0373F51C MOV X0, X19
	0x0373F520 BL 0x373EFFC
	0x0373F524 LDP X30, X19, [X31 + 0x60]
	0x0373F528 ADD X31, X31, 0x70
	0x0373F52C RET
	0x0373F530 ADRP X0, 0x9B9000
	0x0373F534 LDR X0, [X0 + 0x528]

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Compare X0, 0
	014 JumpIfEqual {102}
	015 Move X20, X1
	016 Compare X1, 0
	017 JumpIfEqual {109}
	018 Move X21, [X0+200]
	019 Move X19, X0
	020 Compare X21, 0
	021 JumpIfNotEqual {27}
	022 Move X0, X19
	023 Call InputAction.CreateInternalActionMapForSingletonAction, X0
	024 Move X21, [X19+200]
	025 Compare X21, 0
	026 JumpIfEqual {101}
	027 Move X0, X21
	028 Call InputActionMap.ResolveBindingsIfNecessary, X0
	029 Move X21, [X21+96]
	030 Compare X21, 0
	031 JumpIfEqual {101}
	032 Move X25, [X21+24]
	033 Move X0, X21
	034 Move X1, X31
	035 Call InputActionState.get_totalControlCount, X0
	036 Move W24, W0
	037 Move X0, X21
	038 Move X1, X31
	039 Call InputActionState.get_bindingStates, X0
	040 Move X22, X0
	041 Move X0, X21
	042 Move X1, X31
	043 Call InputActionState.get_controlIndexToBindingIndex, X0
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Compare X25, 0
	046 JumpIfEqual {101}
	047 Move W27, [X19+192]
	048 Move X23, X0
	049 Move X26, X31
	050 Move W28, W24
	051 Add X29, X25, 32
	052 Move W8, [X25+24]
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move X8, [X29]
	055 NotImplemented "Instruction CMP not yet implemented."
	056 NotImplemented "Instruction LDRSW not yet implemented."
	057 Move X1, X31
	058 Add X0, X22, X24
	059 Call BindingState.get_actionIndex, X0
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Add X26, X26, 1
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Add X23, X23, 4
	064 Move X20, [X31+80]
	065 Move X19, [X31+88]
	066 Move X22, [X31+64]
	067 Move X21, [X31+72]
	068 Move X24, [X31+48]
	069 Move X23, [X31+56]
	070 Move X26, [X31+32]
	071 Move X25, [X31+40]
	072 Move X28, [X31+16]
	073 Move X27, [X31+24]
	074 Move TEMP, 0
	075 Not TEMP
	076 Move W0, TEMP
	077 Move X29, [X31+96]
	078 Move X30, [X31+104]
	079 Return X0
	080 Move X0, X21
	081 Move W1, W24
	082 Move X2, X31
	083 Call InputActionState.GetBindingIndexInMap, X0, X1
	084 Move W1, W0
	085 Move X0, X19
	086 Move X20, [X31+80]
	087 Move X19, [X31+88]
	088 Move X22, [X31+64]
	089 Move X21, [X31+72]
	090 Move X24, [X31+48]
	091 Move X23, [X31+56]
	092 Move X26, [X31+32]
	093 Move X25, [X31+40]
	094 Move X28, [X31+16]
	095 Move X27, [X31+24]
	096 Move X29, [X31+96]
	097 Move X30, [X31+104]
	098 Call InputAction.BindingIndexOnMapToBindingIndexOnAction, X0, X1
	099 Return X0
	100 Call 0x1C17F28
	101 Call 0x1C17F20
	102 Move X0, 0x9BA000
	103 Move X0, [X0+1320]
	104 Call 0x1C17D08
	105 Call 0x1C17F10
	106 Move X19, X0
	107 Move X0, 0x9DD000
	108 Move X0, [X0+3064]
	109 Move X0, 0x9BA000
	110 Move X0, [X0+1320]
	111 Call 0x1C17D08
	112 Call 0x1C17F10
	113 Move X19, X0
	114 Move X0, 0x9DD000
	115 Move X0, [X0+3424]
	116 Call 0x1C17D08
	117 Move X1, X0
	118 Move X0, X19
	119 Move X2, X31
	120 Call ArgumentNullException..ctor, X0, X1
	121 Move X0, 0xA07000
	122 Move X0, [X0+992]
	123 Call 0x1C17D08
	124 Move X1, X0
	125 Move X0, X19
	126 Call 0x1C17DEC

Method: System.String GetBindingDisplayString(UnityEngine.InputSystem.InputAction action, UnityEngine.InputSystem.InputBinding/DisplayStringOptions options = 0, System.String group = null)

Disassembly:
	0x0373F538 BL 0x1C16D08
	0x0373F53C BL 0x1C16F10
	0x0373F540 MOV X19, X0
	0x0373F544 ADRP X0, 0x9DC000
	0x0373F548 LDR X0, [X0 + 0xC10]
	0x0373F54C BL 0x1C16D08
	0x0373F550 MOV X1, X0
	0x0373F554 MOV X0, X19
	0x0373F558 MOV X2, X31
	0x0373F55C BL 0x330E100
	0x0373F560 ADRP X0, 0xA06000
	0x0373F564 LDR X0, [X0 + 0x480]
	0x0373F568 BL 0x1C16D08
	0x0373F56C MOV X1, X0
	0x0373F570 MOV X0, X19
	0x0373F574 BL 0x1C16DEC
	0x0373F578 STP X29, X30, [X31 - 0x60]!
	0x0373F57C STP X28, X27, [X31 + 0x10]
	0x0373F580 STP X26, X25, [X31 + 0x20]
	0x0373F584 STP X24, X23, [X31 + 0x30]
	0x0373F588 STP X22, X21, [X31 + 0x40]
	0x0373F58C STP X20, X19, [X31 + 0x50]
	0x0373F590 ADRP X19, 0xCA1000
	0x0373F594 LDRB W8, [X19 + 0xD3C]
	0x0373F598 MOV X20, X0
	0x0373F59C TBNZ X8, 0x0, 0x373F5E4
	0x0373F5A0 ADRP X0, 0xA05000
	0x0373F5A4 LDR X0, [X0 + 0xFD0]
	0x0373F5A8 BL 0x1C16CF4
	0x0373F5AC ADRP X0, 0x9B4000
	0x0373F5B0 LDR X0, [X0 + 0xE00]
	0x0373F5B4 BL 0x1C16CF4
	0x0373F5B8 ADRP X0, 0xA06000
	0x0373F5BC LDR X0, [X0 + 0x488]
	0x0373F5C0 BL 0x1C16CF4
	0x0373F5C4 ADRP X0, 0xA06000
	0x0373F5C8 LDR X0, [X0 + 0x490]
	0x0373F5CC BL 0x1C16CF4
	0x0373F5D0 ADRP X0, 0x9B4000
	0x0373F5D4 LDR X0, [X0 + 0xE18]
	0x0373F5D8 BL 0x1C16CF4
	0x0373F5DC MOVZ W8, 0x1
	0x0373F5E0 STRB W8, [X19 + 0xD3C]
	0x0373F5E4 CBZ X20, 0x373F8D0
	0x0373F5E8 ADRP X19, 0xA06000
	0x0373F5EC LDR X19, [X19 + 0x488]
	0x0373F5F0 BL 0x373BF80
	0x0373F5F4 LDR X8, [X20]
	0x0373F5F8 LDR X1, [X19]
	0x0373F5FC MOV X19, X0
	0x0373F600 LDRH W9, [X8 + 0x12E]
	0x0373F604 CBZ X9, 0x373F628
	0x0373F608 LDR X10, [X8 + 0xB0]
	0x0373F60C ADD X10, X10, 0x8
	0x0373F610 LDUR X11, [X10 - 0x8]
	0x0373F614 CMP X11, X1
	0x0373F618 B.EQ 0x373F638
	0x0373F61C SUBS X9, X9, 0x1
	0x0373F620 ADD X10, X10, 0x10
	0x0373F624 B.NE 0x373F610
	0x0373F628 MOV X0, X20
	0x0373F62C MOV W2, W31
	0x0373F630 BL 0x1C5C788
	0x0373F634 B 0x373F644
	0x0373F638 LDRSW X9, [X10]
	0x0373F63C ADD X8, X8, X9, 0x4, LSL
	0x0373F640 ADD X0, X8, 0x138
	0x0373F644 LDP X8, X1, [X0]
	0x0373F648 MOV X0, X20
	0x0373F64C BLR X8
	0x0373F650 MOV X20, X0
	0x0373F654 CBZ X0, 0x373F920
	0x0373F658 ADRP X26, 0x9B4000
	0x0373F65C ADRP X27, 0xA06000
	0x0373F660 ADRP X28, 0xA05000
	0x0373F664 LDR X26, [X26 + 0xE18]
	0x0373F668 LDR X27, [X27 + 0x490]
	0x0373F66C LDR X28, [X28 + 0xFD0]
	0x0373F670 LDR X8, [X20]
	0x0373F674 LDR X1, [X26]
	0x0373F678 LDRH W9, [X8 + 0x12E]
	0x0373F67C CBZ X9, 0x373F6A0
	0x0373F680 LDR X10, [X8 + 0xB0]
	0x0373F684 ADD X10, X10, 0x8

ISIL:
	001 Subtract X31, X31, 416
	002 Move [X31+368], X29
	003 Move [X31+376], X30
	004 Move [X31+384], X22
	005 Move [X31+392], X21
	006 Move [X31+400], X20
	007 Move [X31+408], X19
	008 Move X22, 0xCA2000
	009 Move W8, [X22+3385]
	010 Move X21, X2
	011 Move W19, W1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0xA06000
	018 Move X0, [X0+3928]
	019 Call 0x1C17CF4
	020 Move X0, 0xA06000
	021 Move X0, [X0+3936]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+3385], W8
	025 NotImplemented "Instruction MOVI not yet implemented."
	026 Move [X31+240], V0
	027 Move [X31+248], V0
	028 Move [X31+208], V0
	029 Move [X31+216], V0
	030 Move [X31+176], V0
	031 Move [X31+184], V0
	032 Compare X20, 0
	033 JumpIfEqual {84}
	034 Move X0, X21
	035 Move X1, X31
	036 Call String.IsNullOrEmpty, X0
	037 Move TEMP, X0
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfNotEqual {53}
	041 Add X8, X31, 176
	042 Move X0, X20
	043 Call InputAction.FindEffectiveBindingMask, X0
	044 Move W8, [X31+176]
	045 Compare W8, 0
	046 JumpIfEqual {77}
	047 Move X8, 0xA06000
	048 Move X8, [X8+3936]
	049 Add X0, X31, 176
	050 Move X1, [X8]
	051 Add X8, X31, 88
	052 Call Nullable`1<InputBinding>.get_Value, X0
	053 Add X8, X31, 88
	054 Move X0, X21
	055 Move X1, X31
	056 Call InputBinding.MaskByGroup, X0
	057 Add X0, X31, 272
	058 Add X1, X31, 88
	059 Move W2, 88
	060 Call 0x3EB2AC0
	061 Add X0, X31, 0
	062 Add X1, X31, 272
	063 Move W2, 88
	064 Call 0x3EB2AC0
	065 Add X1, X31, 0
	066 Move X0, X20
	067 Move W2, W19
	068 Call InputActionRebindingExtensions.GetBindingDisplayString, X0, X1, X2
	069 Move X20, [X31+400]
	070 Move X19, [X31+408]
	071 Move X22, [X31+384]
	072 Move X21, [X31+392]
	073 Move X29, [X31+368]
	074 Move X30, [X31+376]
	075 Add X31, X31, 416
	076 Return X0
	077 NotImplemented "Instruction MOVI not yet implemented."
	078 Move [X31+352], X31
	079 Move [X31+320], V0
	080 Move [X31+328], V0
	081 Move [X31+288], V0
	082 Move [X31+296], V0
	083 Move [X31+17], V0
	084 Move X0, 0x9BA000
	085 Move X0, [X0+1320]
	086 Call 0x1C17D08
	087 Call 0x1C17F10
	088 Move X19, X0
	089 Move X0, 0x9DD000
	090 Move X0, [X0+3064]
	091 Call 0x1C17D08
	092 Move X1, X0
	093 Move X0, X19
	094 Move X2, X31
	095 Call ArgumentNullException..ctor, X0, X1
	096 Move X0, 0xA07000
	097 Move X0, [X0+1000]
	098 Call 0x1C17D08
	099 Move X1, X0
	100 Move X0, X19
	101 Call 0x1C17DEC

Method: System.String GetBindingDisplayString(UnityEngine.InputSystem.InputAction action, UnityEngine.InputSystem.InputBinding bindingMask, UnityEngine.InputSystem.InputBinding/DisplayStringOptions options = 0)

Disassembly:
	0x0373F688 LDUR X11, [X10 - 0x8]
	0x0373F68C CMP X11, X1
	0x0373F690 B.EQ 0x373F6B0
	0x0373F694 SUBS X9, X9, 0x1
	0x0373F698 ADD X10, X10, 0x10
	0x0373F69C B.NE 0x373F688
	0x0373F6A0 MOV X0, X20
	0x0373F6A4 MOV W2, W31
	0x0373F6A8 BL 0x1C5C788
	0x0373F6AC B 0x373F6BC
	0x0373F6B0 LDRSW X9, [X10]
	0x0373F6B4 ADD X8, X8, X9, 0x4, LSL
	0x0373F6B8 ADD X0, X8, 0x138
	0x0373F6BC LDP X8, X1, [X0]
	0x0373F6C0 MOV X0, X20
	0x0373F6C4 BLR X8
	0x0373F6C8 TBZ X0, 0x0, 0x373F7CC
	0x0373F6CC LDR X8, [X20]
	0x0373F6D0 LDR X1, [X27]
	0x0373F6D4 LDRH W9, [X8 + 0x12E]
	0x0373F6D8 CBZ X9, 0x373F6FC
	0x0373F6DC LDR X10, [X8 + 0xB0]
	0x0373F6E0 ADD X10, X10, 0x8
	0x0373F6E4 LDUR X11, [X10 - 0x8]
	0x0373F6E8 CMP X11, X1
	0x0373F6EC B.EQ 0x373F70C
	0x0373F6F0 SUBS X9, X9, 0x1
	0x0373F6F4 ADD X10, X10, 0x10
	0x0373F6F8 B.NE 0x373F6E4
	0x0373F6FC MOV X0, X20
	0x0373F700 MOV W2, W31
	0x0373F704 BL 0x1C5C788
	0x0373F708 B 0x373F718
	0x0373F70C LDRSW X9, [X10]
	0x0373F710 ADD X8, X8, X9, 0x4, LSL
	0x0373F714 ADD X0, X8, 0x138
	0x0373F718 LDP X8, X1, [X0]
	0x0373F71C MOV X0, X20
	0x0373F720 BLR X8
	0x0373F724 MOV X21, X0
	0x0373F728 CBZ X0, 0x373F8C4
	0x0373F72C LDR X22, [X21 + 0xC8]
	0x0373F730 CBNZ X22, 0x373F744
	0x0373F734 MOV X0, X21
	0x0373F738 BL 0x373572C
	0x0373F73C LDR X22, [X21 + 0xC8]
	0x0373F740 CBZ X22, 0x373F8CC
	0x0373F744 LDR X23, [X22 + 0x30]
	0x0373F748 LDR X1, [X28]
	0x0373F74C MOV X0, X23
	0x0373F750 BL 0x217B240
	0x0373F754 CMP W0, 0x1
	0x0373F758 B.LT 0x373F7A8
	0x0373F75C CBZ X23, 0x373F8C8
	0x0373F760 MOV X29, X31
	0x0373F764 MOV W25, W0
	0x0373F768 ADD X24, X23, 0x20
	0x0373F76C LDR W8, [X23 + 0x18]
	0x0373F770 CMP X29, X8
	0x0373F774 B.CS 0x373F8C0
	0x0373F778 MOV X0, X24
	0x0373F77C MOV X1, X21
	0x0373F780 MOV X2, X31
	0x0373F784 BL 0x3747D00
	0x0373F788 TBZ X0, 0x0, 0x373F798
	0x0373F78C MOV X0, X24
	0x0373F790 MOV X1, X31
	0x0373F794 BL 0x3752440
	0x0373F798 ADD X29, X29, 0x1
	0x0373F79C CMP X25, X29
	0x0373F7A0 ADD X24, X24, 0x58
	0x0373F7A4 B.NE 0x373F76C
	0x0373F7A8 LDR W8, [X22 + 0xC8]
	0x0373F7AC STP X31, X31, [X22 + 0x38]
	0x0373F7B0 STR X31, [X22 + 0x138]
	0x0373F7B4 AND W8, W8, 0xFFFFFFF3
	0x0373F7B8 STR W8, [X22 + 0xC8]
	0x0373F7BC MOVZ W1, 0x1
	0x0373F7C0 MOV X0, X22
	0x0373F7C4 BL 0x3734520
	0x0373F7C8 B 0x373F670
	0x0373F7CC MOV X23, X31
	0x0373F7D0 CBZ X20, 0x373F834
	0x0373F7D4 LDR X8, [X20]
	0x0373F7D8 ADRP X10, 0x9B4000
	0x0373F7DC LDRH W9, [X8 + 0x12E]
	0x0373F7E0 LDR X10, [X10 + 0xE00]
	0x0373F7E4 LDR X1, [X10]
	0x0373F7E8 CBZ X9, 0x373F80C
	0x0373F7EC LDR X10, [X8 + 0xB0]
	0x0373F7F0 ADD X10, X10, 0x8
	0x0373F7F4 LDUR X11, [X10 - 0x8]
	0x0373F7F8 CMP X11, X1
	0x0373F7FC B.EQ 0x373F81C
	0x0373F800 SUBS X9, X9, 0x1
	0x0373F804 ADD X10, X10, 0x10
	0x0373F808 B.NE 0x373F7F4
	0x0373F80C MOV X0, X20
	0x0373F810 MOV W2, W31
	0x0373F814 BL 0x1C5C788
	0x0373F818 B 0x373F828
	0x0373F81C LDRSW X9, [X10]
	0x0373F820 ADD X8, X8, X9, 0x4, LSL
	0x0373F824 ADD X0, X8, 0x138
	0x0373F828 LDP X8, X1, [X0]
	0x0373F82C MOV X0, X20
	0x0373F830 BLR X8
	0x0373F834 CBNZ X23, 0x373F924
	0x0373F838 MOV X20, X31
	0x0373F83C CBZ X19, 0x373F8A0
	0x0373F840 LDR X8, [X19]
	0x0373F844 ADRP X10, 0x9B4000
	0x0373F848 LDRH W9, [X8 + 0x12E]
	0x0373F84C LDR X10, [X10 + 0xE00]
	0x0373F850 LDR X1, [X10]
	0x0373F854 CBZ X9, 0x373F878
	0x0373F858 LDR X10, [X8 + 0xB0]
	0x0373F85C ADD X10, X10, 0x8
	0x0373F860 LDUR X11, [X10 - 0x8]
	0x0373F864 CMP X11, X1
	0x0373F868 B.EQ 0x373F888
	0x0373F86C SUBS X9, X9, 0x1
	0x0373F870 ADD X10, X10, 0x10
	0x0373F874 B.NE 0x373F860
	0x0373F878 MOV X0, X19
	0x0373F87C MOV W2, W31
	0x0373F880 BL 0x1C5C788
	0x0373F884 B 0x373F894
	0x0373F888 LDRSW X9, [X10]
	0x0373F88C ADD X8, X8, X9, 0x4, LSL
	0x0373F890 ADD X0, X8, 0x138

ISIL:
	001 Subtract X31, X31, 384
	002 Move [X31+288], X29
	003 Move [X31+304], X30
	004 Move [X31+312], X27
	005 Move [X31+320], X26
	006 Move [X31+328], X25
	007 Move [X31+336], X24
	008 Move [X31+344], X23
	009 Move [X31+352], X22
	010 Move [X31+360], X21
	011 Move [X31+368], X20
	012 Move [X31+376], X19
	013 Move X22, 0xCA2000
	014 Move W8, [X22+3386]
	015 Move W19, W2
	016 Move X20, X1
	017 Move X21, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {39}
	022 Move X0, 0x9DC000
	023 Move X0, [X0+4072]
	024 Call 0x1C17CF4
	025 Move X0, 0xA07000
	026 Move X0, [X0+264]
	027 Call 0x1C17CF4
	028 Move X0, 0x9B7000
	029 Move X0, [X0+632]
	030 Call 0x1C17CF4
	031 Move X0, 0x9DF000
	032 Move X0, [X0+2792]
	033 Call 0x1C17CF4
	034 Move X0, 0x9B5000
	035 Move X0, [X0+2440]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X22+3386], W8
	039 NotImplemented "Instruction MOVI not yet implemented."
	040 Move [X31+272], X31
	041 Move [X31+280], X31
	042 Move [X31+256], X31
	043 Move [X31+224], V0
	044 Move [X31+232], V0
	045 Move [X31+192], V0
	046 Move [X31+200], V0
	047 Move [X31+11], V0
	048 Compare X21, 0
	049 JumpIfEqual {140}
	050 Move X8, 0x9B7000
	051 Move X8, [X8+632]
	052 Move X0, X21
	053 Move X8, [X8]
	054 Move X8, [X8+184]
	055 Move X22, [X8]
	056 Call InputAction.get_bindings, X0
	057 Move X8, X1
	058 ShiftRight X8, 32
	059 And X8, X8, 0x7FFFFFFF
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move [X31+272], X0
	062 Move [X31+280], X1
	063 Move X25, 0xA07000
	064 Move X26, 0x9B5000
	065 Move X27, 0x9DF000
	066 Move X25, [X25+264]
	067 Move X26, [X26+2440]
	068 Move X27, [X27+2792]
	069 Move W23, W31
	070 Move X2, [X25]
	071 Add X8, X31, 88
	072 Add X0, X31, 272
	073 Move W1, W23
	074 Call 0x24FD334, X0, X1
	075 Add X0, X31, 176
	076 Add X1, X31, 88
	077 Move W2, 88
	078 Call 0x3EB2AC0
	079 Add X0, X31, 176
	080 Move X1, X31
	081 Call InputBinding.get_isPartOfComposite, X0
	082 Move TEMP, X0
	083 And TEMP, TEMP, 1
	084 Compare TEMP, 1
	085 JumpIfEqual {123}
	086 Move X2, [X25]
	087 Add X8, X31, 88
	088 Add X0, X31, 272
	089 Move W1, W23
	090 Call 0x24FD334, X0, X1
	091 Add X0, X31, 0
	092 Add X1, X31, 88
	093 Move W2, 88
	094 Call 0x3EB2AC0
	095 Add X1, X31, 0
	096 Move X0, X20
	097 Move X2, X31
	098 Call InputBinding.Matches, X0, X1
	099 Move TEMP, X0
	100 And TEMP, TEMP, 1
	101 Compare TEMP, 1
	102 JumpIfNotEqual {123}
	103 Move X0, X21
	104 Move W1, W23
	105 Move W2, W19
	106 Call InputActionRebindingExtensions.GetBindingDisplayString, X0, X1, X2
	107 Move X1, [X26]
	108 Move X24, X0
	109 Move X0, X22
	110 Move X2, X31
	111 Call String.op_Inequality, X0, X1
	112 Move TEMP, X0
	113 And TEMP, TEMP, 1
	114 Compare TEMP, 1
	115 JumpIfNotEqual {122}
	116 Move X1, [X27]
	117 Move X0, X22
	118 Move X2, X24
	119 Move X3, X31
	120 Call String.Concat, X0, X1, X2
	121 Move X22, X0
	122 Move X22, X24
	123 Move W8, [X31+284]
	124 Add W23, W23, 1
	125 NotImplemented "Instruction CMP not yet implemented."
	126 Move X0, X22
	127 Move X20, [X31+368]
	128 Move X19, [X31+376]
	129 Move X22, [X31+352]
	130 Move X21, [X31+360]
	131 Move X24, [X31+336]
	132 Move X23, [X31+344]
	133 Move X26, [X31+320]
	134 Move X25, [X31+328]
	135 Move X30, [X31+304]
	136 Move X27, [X31+312]
	137 Move X29, [X31+288]
	138 Add X31, X31, 384
	139 Return X0
	140 Move X0, 0x9BA000
	141 Move X0, [X0+1320]
	142 Call 0x1C17D08
	143 Call 0x1C17F10
	144 Move X19, X0
	145 Move X0, 0x9DD000
	146 Move X0, [X0+3064]
	147 Call 0x1C17D08
	148 Move X1, X0
	149 Move X0, X19
	150 Move X2, X31
	151 Call ArgumentNullException..ctor, X0, X1
	152 Move X0, 0xA07000
	153 Move X0, [X0+1008]
	154 Call 0x1C17D08
	155 Move X1, X0
	156 Move X0, X19
	157 Call 0x1C17DEC

Method: System.String GetBindingDisplayString(UnityEngine.InputSystem.InputAction action, System.Int32 bindingIndex, UnityEngine.InputSystem.InputBinding/DisplayStringOptions options = 0)

Disassembly:
	0x0373F894 LDP X8, X1, [X0]
	0x0373F898 MOV X0, X19
	0x0373F89C BLR X8
	0x0373F8A0 CBNZ X20, 0x373F918
	0x0373F8A4 LDP X20, X19, [X31 + 0x50]
	0x0373F8A8 LDP X22, X21, [X31 + 0x40]
	0x0373F8AC LDP X24, X23, [X31 + 0x30]
	0x0373F8B0 LDP X26, X25, [X31 + 0x20]
	0x0373F8B4 LDP X28, X27, [X31 + 0x10]
	0x0373F8B8 LDP X29, X30, [X31], #0x60
	0x0373F8BC RET
	0x0373F8C0 BL 0x1C16F28
	0x0373F8C4 BL 0x1C16F20
	0x0373F8C8 BL 0x1C16F20
	0x0373F8CC BL 0x1C16F20
	0x0373F8D0 ADRP X0, 0x9B9000
	0x0373F8D4 LDR X0, [X0 + 0x528]
	0x0373F8D8 BL 0x1C16D08
	0x0373F8DC BL 0x1C16F10
	0x0373F8E0 MOV X19, X0
	0x0373F8E4 ADRP X0, 0xA06000
	0x0373F8E8 LDR X0, [X0 + 0x498]
	0x0373F8EC BL 0x1C16D08
	0x0373F8F0 MOV X1, X0
	0x0373F8F4 MOV X0, X19
	0x0373F8F8 MOV X2, X31
	0x0373F8FC BL 0x330E100
	0x0373F900 ADRP X0, 0xA06000
	0x0373F904 LDR X0, [X0 + 0x4A0]

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+16], X30
	003 Move [X31+24], X19
	004 Move [X31], X31
	005 Move [X31+8], X31
	006 Compare X0, 0
	007 JumpIfEqual {16}
	008 Move W4, W2
	009 Add X2, X31, 8
	010 Add X3, X31, 0
	011 Call InputActionRebindingExtensions.GetBindingDisplayString, X0, X1, X2, X3, X4
	012 Move X30, [X31+16]
	013 Move X19, [X31+24]
	014 Add X31, X31, 32
	015 Return X0
	016 Move X0, 0x9BA000
	017 Move X0, [X0+1320]
	018 Call 0x1C17D08
	019 Call 0x1C17F10
	020 Move X19, X0
	021 Move X0, 0x9DD000
	022 Move X0, [X0+3064]
	023 Call 0x1C17D08
	024 Move X1, X0
	025 Move X0, X19
	026 Move X2, X31
	027 Call ArgumentNullException..ctor, X0, X1
	028 Move X0, 0xA07000
	029 Move X0, [X0+1016]
	030 Call 0x1C17D08
	031 Move X1, X0
	032 Move X0, X19
	033 Call 0x1C17DEC

Method: System.String GetBindingDisplayString(UnityEngine.InputSystem.InputAction action, System.Int32 bindingIndex, out System.String deviceLayoutName, out System.String controlPath, UnityEngine.InputSystem.InputBinding/DisplayStringOptions options = 0)

Disassembly:
	0x0373F908 BL 0x1C16D08
	0x0373F90C MOV X1, X0
	0x0373F910 MOV X0, X19
	0x0373F914 BL 0x1C16DEC
	0x0373F918 MOV X0, X20
	0x0373F91C BL 0x1C16F18
	0x0373F920 BL 0x1C16F20
	0x0373F924 MOV X0, X23
	0x0373F928 BL 0x1C16F18
	0x0373F92C B 0x373F964
	0x0373F930 B 0x373F934
	0x0373F934 MOV X22, X1
	0x0373F938 MOV X21, X0
	0x0373F93C B 0x373F9F4
	0x0373F940 B 0x373F964
	0x0373F944 B 0x373F964
	0x0373F948 B 0x373F964
	0x0373F94C B 0x373F964
	0x0373F950 B 0x373F964
	0x0373F954 B 0x373F964
	0x0373F958 B 0x373F964
	0x0373F95C B 0x373F964
	0x0373F960 B 0x373F964
	0x0373F964 MOV X22, X1
	0x0373F968 MOV X21, X0
	0x0373F96C CMP W22, 0x1
	0x0373F970 B.NE 0x373F988
	0x0373F974 MOV X0, X21
	0x0373F978 BL 0x3EB1AD0
	0x0373F97C LDR X23, [X0]
	0x0373F980 BL 0x3EB1AE0
	0x0373F984 B 0x373F7D0
	0x0373F988 MOV X23, X31
	0x0373F98C CBZ X20, 0x373F9F0
	0x0373F990 LDR X8, [X20]
	0x0373F994 ADRP X10, 0x9B4000
	0x0373F998 LDRH W9, [X8 + 0x12E]
	0x0373F99C LDR X10, [X10 + 0xE00]
	0x0373F9A0 LDR X1, [X10]
	0x0373F9A4 CBZ X9, 0x373F9C8
	0x0373F9A8 LDR X10, [X8 + 0xB0]
	0x0373F9AC ADD X10, X10, 0x8
	0x0373F9B0 LDUR X11, [X10 - 0x8]
	0x0373F9B4 CMP X11, X1
	0x0373F9B8 B.EQ 0x373F9D8
	0x0373F9BC SUBS X9, X9, 0x1
	0x0373F9C0 ADD X10, X10, 0x10
	0x0373F9C4 B.NE 0x373F9B0
	0x0373F9C8 MOV X0, X20
	0x0373F9CC MOV W2, W31
	0x0373F9D0 BL 0x1C5C788
	0x0373F9D4 B 0x373F9E4
	0x0373F9D8 LDRSW X9, [X10]
	0x0373F9DC ADD X8, X8, X9, 0x4, LSL
	0x0373F9E0 ADD X0, X8, 0x138
	0x0373F9E4 LDP X8, X1, [X0]
	0x0373F9E8 MOV X0, X20
	0x0373F9EC BLR X8
	0x0373F9F0 CBNZ X23, 0x373FA18
	0x0373F9F4 CMP W22, 0x1
	0x0373F9F8 B.NE 0x373FA10
	0x0373F9FC MOV X0, X21
	0x0373FA00 BL 0x3EB1AD0
	0x0373FA04 LDR X20, [X0]
	0x0373FA08 BL 0x3EB1AE0
	0x0373FA0C B 0x373F83C
	0x0373FA10 MOV X20, X31
	0x0373FA14 B 0x373FA34
	0x0373FA18 MOV X0, X23
	0x0373FA1C BL 0x1C16F18
	0x0373FA20 MOV X22, X1
	0x0373FA24 MOV X21, X0
	0x0373FA28 CBNZ X20, 0x373F990
	0x0373FA2C B 0x373F9F0
	0x0373FA30 MOV X21, X0
	0x0373FA34 CBZ X19, 0x373FA98
	0x0373FA38 LDR X8, [X19]
	0x0373FA3C ADRP X10, 0x9B4000
	0x0373FA40 LDRH W9, [X8 + 0x12E]
	0x0373FA44 LDR X10, [X10 + 0xE00]
	0x0373FA48 LDR X1, [X10]
	0x0373FA4C CBZ X9, 0x373FA70
	0x0373FA50 LDR X10, [X8 + 0xB0]
	0x0373FA54 ADD X10, X10, 0x8
	0x0373FA58 LDUR X11, [X10 - 0x8]
	0x0373FA5C CMP X11, X1
	0x0373FA60 B.EQ 0x373FA80
	0x0373FA64 SUBS X9, X9, 0x1
	0x0373FA68 ADD X10, X10, 0x10
	0x0373FA6C B.NE 0x373FA58
	0x0373FA70 MOV X0, X19
	0x0373FA74 MOV W2, W31
	0x0373FA78 BL 0x1C5C788
	0x0373FA7C B 0x373FA8C
	0x0373FA80 LDRSW X9, [X10]
	0x0373FA84 ADD X8, X8, X9, 0x4, LSL
	0x0373FA88 ADD X0, X8, 0x138
	0x0373FA8C LDP X8, X1, [X0]
	0x0373FA90 MOV X0, X19
	0x0373FA94 BLR X8
	0x0373FA98 CBNZ X20, 0x373FAA4
	0x0373FA9C MOV X0, X21
	0x0373FAA0 BL 0x1D2C690
	0x0373FAA4 MOV X0, X20
	0x0373FAA8 BL 0x1C16F18
	0x0373FAAC BL 0x1990590
	0x0373FAB0 STR X30, [X31 - 0x40]!
	0x0373FAB4 STP X24, X23, [X31 + 0x10]
	0x0373FAB8 STP X22, X21, [X31 + 0x20]
	0x0373FABC STP X20, X19, [X31 + 0x30]
	0x0373FAC0 CBZ X0, 0x373FB9C
	0x0373FAC4 LDR X19, [X0 + 0xC8]
	0x0373FAC8 LDR X20, [X0 + 0x10]
	0x0373FACC MOV X21, X0
	0x0373FAD0 CBNZ X19, 0x373FAE4
	0x0373FAD4 MOV X0, X21
	0x0373FAD8 BL 0x373572C
	0x0373FADC LDR X19, [X21 + 0xC8]
	0x0373FAE0 CBZ X19, 0x373FBE4
	0x0373FAE4 LDR X21, [X19 + 0x30]
	0x0373FAE8 CBZ X21, 0x373FB88
	0x0373FAEC LDR X8, [X21 + 0x18]
	0x0373FAF0 CMP W8, 0x1
	0x0373FAF4 B.LT 0x373FB58
	0x0373FAF8 AND X8, X8, 0x0
	0x0373FAFC CBZ X8, 0x373FB54
	0x0373FB00 MOV X22, X31
	0x0373FB04 SUB X23, X8, 0x1
	0x0373FB08 ADD X24, X21, 0x60
	0x0373FB0C LDUR X0, [X24 - 0x10]
	0x0373FB10 MOVZ W2, 0x3
	0x0373FB14 MOV X1, X20
	0x0373FB18 MOV X3, X31
	0x0373FB1C BL 0x322590C
	0x0373FB20 CBNZ W0, 0x373FB38
	0x0373FB24 LDR W8, [X21 + 0x18]
	0x0373FB28 CMP X22, X8
	0x0373FB2C B.CS 0x373FB54
	0x0373FB30 STP X31, X31, [X24]
	0x0373FB34 STR X31, [X24 + 0x10]
	0x0373FB38 CMP X23, X22
	0x0373FB3C B.EQ 0x373FB58
	0x0373FB40 LDR W8, [X21 + 0x18]
	0x0373FB44 ADD X22, X22, 0x1
	0x0373FB48 ADD X24, X24, 0x58
	0x0373FB4C CMP X22, X8
	0x0373FB50 B.CC 0x373FB0C
	0x0373FB54 BL 0x1C16F28
	0x0373FB58 LDR W8, [X19 + 0xC8]
	0x0373FB5C STP X31, X31, [X19 + 0x38]
	0x0373FB60 STR X31, [X19 + 0x138]
	0x0373FB64 MOV X0, X19
	0x0373FB68 AND W8, W8, 0xFFFFFFF3
	0x0373FB6C STR W8, [X19 + 0xC8]
	0x0373FB70 LDP X20, X19, [X31 + 0x30]
	0x0373FB74 LDP X22, X21, [X31 + 0x20]
	0x0373FB78 LDP X24, X23, [X31 + 0x10]
	0x0373FB7C MOVZ W1, 0x1
	0x0373FB80 LDR X30, [X31], #0x40
	0x0373FB84 B 0x3734520
	0x0373FB88 LDP X20, X19, [X31 + 0x30]
	0x0373FB8C LDP X22, X21, [X31 + 0x20]
	0x0373FB90 LDP X24, X23, [X31 + 0x10]
	0x0373FB94 LDR X30, [X31], #0x40
	0x0373FB98 RET
	0x0373FB9C ADRP X0, 0x9B9000
	0x0373FBA0 LDR X0, [X0 + 0x528]
	0x0373FBA4 BL 0x1C16D08
	0x0373FBA8 BL 0x1C16F10
	0x0373FBAC MOV X19, X0
	0x0373FBB0 ADRP X0, 0x9DC000
	0x0373FBB4 LDR X0, [X0 + 0xBF8]
	0x0373FBB8 BL 0x1C16D08
	0x0373FBBC MOV X1, X0
	0x0373FBC0 MOV X0, X19
	0x0373FBC4 MOV X2, X31
	0x0373FBC8 BL 0x330E100
	0x0373FBCC ADRP X0, 0xA06000
	0x0373FBD0 LDR X0, [X0 + 0x4A8]
	0x0373FBD4 BL 0x1C16D08
	0x0373FBD8 MOV X1, X0
	0x0373FBDC MOV X0, X19
	0x0373FBE0 BL 0x1C16DEC
	0x0373FBE4 BL 0x1C16F20
	0x0373FBE8 SUB X31, X31, 0x150
	0x0373FBEC STR X29, [X31 + 0x110]
	0x0373FBF0 STP X30, X23, [X31 + 0x120]
	0x0373FBF4 STP X22, X21, [X31 + 0x130]
	0x0373FBF8 STP X20, X19, [X31 + 0x140]
	0x0373FBFC ADRP X21, 0xCA1000
	0x0373FC00 LDRB W8, [X21 + 0xD3D]
	0x0373FC04 MOV X19, X1
	0x0373FC08 MOV X20, X0
	0x0373FC0C TBNZ X8, 0x0, 0x373FC48
	0x0373FC10 ADRP X0, 0x9B4000
	0x0373FC14 LDR X0, [X0 + 0xE00]
	0x0373FC18 BL 0x1C16CF4
	0x0373FC1C ADRP X0, 0xA06000
	0x0373FC20 LDR X0, [X0 + 0x4B0]
	0x0373FC24 BL 0x1C16CF4
	0x0373FC28 ADRP X0, 0xA06000
	0x0373FC2C LDR X0, [X0 + 0x4B8]
	0x0373FC30 BL 0x1C16CF4
	0x0373FC34 ADRP X0, 0x9B4000
	0x0373FC38 LDR X0, [X0 + 0xE18]
	0x0373FC3C BL 0x1C16CF4
	0x0373FC40 MOVZ W8, 0x1
	0x0373FC44 STRB W8, [X21 + 0xD3D]
	0x0373FC48 CBZ X20, 0x373FE34
	0x0373FC4C CBZ X19, 0x373FE54
	0x0373FC50 ADRP X10, 0xA06000
	0x0373FC54 LDR X8, [X19]
	0x0373FC58 LDR X10, [X10 + 0x4B0]
	0x0373FC5C LDRH W9, [X8 + 0x12E]
	0x0373FC60 LDR X1, [X10]
	0x0373FC64 CBZ X9, 0x373FC88
	0x0373FC68 LDR X10, [X8 + 0xB0]
	0x0373FC6C ADD X10, X10, 0x8
	0x0373FC70 LDUR X11, [X10 - 0x8]
	0x0373FC74 CMP X11, X1
	0x0373FC78 B.EQ 0x373FC98
	0x0373FC7C SUBS X9, X9, 0x1
	0x0373FC80 ADD X10, X10, 0x10
	0x0373FC84 B.NE 0x373FC70
	0x0373FC88 MOV X0, X19
	0x0373FC8C MOV W2, W31
	0x0373FC90 BL 0x1C5C788
	0x0373FC94 B 0x373FCA4
	0x0373FC98 LDRSW X9, [X10]
	0x0373FC9C ADD X8, X8, X9, 0x4, LSL
	0x0373FCA0 ADD X0, X8, 0x138
	0x0373FCA4 LDP X8, X1, [X0]
	0x0373FCA8 ADRP X21, 0x9B4000
	0x0373FCAC LDR X21, [X21 + 0xE00]
	0x0373FCB0 MOV X0, X19
	0x0373FCB4 BLR X8
	0x0373FCB8 MOV X19, X0
	0x0373FCBC CBZ X0, 0x373FE9C
	0x0373FCC0 ADRP X22, 0x9B4000
	0x0373FCC4 ADRP X23, 0xA06000
	0x0373FCC8 LDR X22, [X22 + 0xE18]
	0x0373FCCC LDR X23, [X23 + 0x4B8]
	0x0373FCD0 LDR X8, [X19]
	0x0373FCD4 LDR X1, [X22]
	0x0373FCD8 LDRH W9, [X8 + 0x12E]
	0x0373FCDC CBZ X9, 0x373FD00
	0x0373FCE0 LDR X10, [X8 + 0xB0]
	0x0373FCE4 ADD X10, X10, 0x8
	0x0373FCE8 LDUR X11, [X10 - 0x8]
	0x0373FCEC CMP X11, X1
	0x0373FCF0 B.EQ 0x373FD10
	0x0373FCF4 SUBS X9, X9, 0x1
	0x0373FCF8 ADD X10, X10, 0x10
	0x0373FCFC B.NE 0x373FCE8
	0x0373FD00 MOV X0, X19
	0x0373FD04 MOV W2, W31
	0x0373FD08 BL 0x1C5C788
	0x0373FD0C B 0x373FD1C
	0x0373FD10 LDRSW X9, [X10]
	0x0373FD14 ADD X8, X8, X9, 0x4, LSL
	0x0373FD18 ADD X0, X8, 0x138
	0x0373FD1C LDP X8, X1, [X0]
	0x0373FD20 MOV X0, X19
	0x0373FD24 BLR X8
	0x0373FD28 TBZ X0, 0x0, 0x373FDB8
	0x0373FD2C LDR X8, [X19]
	0x0373FD30 LDR X1, [X23]
	0x0373FD34 LDRH W9, [X8 + 0x12E]
	0x0373FD38 CBZ X9, 0x373FD5C
	0x0373FD3C LDR X10, [X8 + 0xB0]
	0x0373FD40 ADD X10, X10, 0x8
	0x0373FD44 LDUR X11, [X10 - 0x8]
	0x0373FD48 CMP X11, X1
	0x0373FD4C B.EQ 0x373FD6C
	0x0373FD50 SUBS X9, X9, 0x1
	0x0373FD54 ADD X10, X10, 0x10
	0x0373FD58 B.NE 0x373FD44
	0x0373FD5C MOV X0, X19
	0x0373FD60 MOV W2, W31
	0x0373FD64 BL 0x1C5C788
	0x0373FD68 B 0x373FD78
	0x0373FD6C LDRSW X9, [X10]
	0x0373FD70 ADD X8, X8, X9, 0x4, LSL
	0x0373FD74 ADD X0, X8, 0x138
	0x0373FD78 LDP X9, X1, [X0]
	0x0373FD7C ADD X8, X31, 0x60
	0x0373FD80 MOV X0, X19
	0x0373FD84 BLR X9
	0x0373FD88 ADD X0, X31, 0xB8
	0x0373FD8C ADD X1, X31, 0x60
	0x0373FD90 MOVZ W2, 0x58
	0x0373FD94 BL 0x3EB1AC0
	0x0373FD98 ADD X0, X31, 0x8
	0x0373FD9C ADD X1, X31, 0xB8
	0x0373FDA0 MOVZ W2, 0x58
	0x0373FDA4 BL 0x3EB1AC0
	0x0373FDA8 ADD X1, X31, 0x8
	0x0373FDAC MOV X0, X20
	0x0373FDB0 BL 0x373EFFC
	0x0373FDB4 B 0x373FCD0
	0x0373FDB8 MOV X20, X31
	0x0373FDBC CBZ X19, 0x373FE18
	0x0373FDC0 LDR X8, [X19]
	0x0373FDC4 LDR X1, [X21]
	0x0373FDC8 LDRH W9, [X8 + 0x12E]
	0x0373FDCC CBZ X9, 0x373FDF0
	0x0373FDD0 LDR X10, [X8 + 0xB0]
	0x0373FDD4 ADD X10, X10, 0x8
	0x0373FDD8 LDUR X11, [X10 - 0x8]
	0x0373FDDC CMP X11, X1
	0x0373FDE0 B.EQ 0x373FE00
	0x0373FDE4 SUBS X9, X9, 0x1
	0x0373FDE8 ADD X10, X10, 0x10
	0x0373FDEC B.NE 0x373FDD8
	0x0373FDF0 MOV X0, X19
	0x0373FDF4 MOV W2, W31
	0x0373FDF8 BL 0x1C5C788
	0x0373FDFC B 0x373FE0C
	0x0373FE00 LDRSW X9, [X10]
	0x0373FE04 ADD X8, X8, X9, 0x4, LSL
	0x0373FE08 ADD X0, X8, 0x138
	0x0373FE0C LDP X8, X1, [X0]
	0x0373FE10 MOV X0, X19
	0x0373FE14 BLR X8
	0x0373FE18 CBNZ X20, 0x373FEA0
	0x0373FE1C LDP X20, X19, [X31 + 0x140]
	0x0373FE20 LDP X22, X21, [X31 + 0x130]
	0x0373FE24 LDP X30, X23, [X31 + 0x120]
	0x0373FE28 LDR X29, [X31 + 0x110]
	0x0373FE2C ADD X31, X31, 0x150
	0x0373FE30 RET
	0x0373FE34 ADRP X0, 0x9B9000
	0x0373FE38 LDR X0, [X0 + 0x528]
	0x0373FE3C BL 0x1C16D08
	0x0373FE40 BL 0x1C16F10
	0x0373FE44 MOV X19, X0
	0x0373FE48 ADRP X0, 0x9DC000
	0x0373FE4C LDR X0, [X0 + 0xC10]
	0x0373FE50 B 0x373FE70
	0x0373FE54 ADRP X0, 0x9B9000
	0x0373FE58 LDR X0, [X0 + 0x528]
	0x0373FE5C BL 0x1C16D08
	0x0373FE60 BL 0x1C16F10
	0x0373FE64 MOV X19, X0
	0x0373FE68 ADRP X0, 0xA06000
	0x0373FE6C LDR X0, [X0 + 0x4C0]
	0x0373FE70 BL 0x1C16D08
	0x0373FE74 MOV X1, X0

ISIL:
	001 Subtract X31, X31, 384
	002 Move [X31+288], X29
	003 Move [X31+304], X30
	004 Move [X31+312], X27
	005 Move [X31+320], X26
	006 Move [X31+328], X25
	007 Move [X31+336], X24
	008 Move [X31+344], X23
	009 Move [X31+352], X22
	010 Move [X31+360], X21
	011 Move [X31+368], X20
	012 Move [X31+376], X19
	013 Move X25, 0xCA2000
	014 Move X23, 0xA07000
	015 Move W8, [X25+3387]
	016 Move X23, [X23+1024]
	017 Move W19, W4
	018 Move X21, X3
	019 Move X22, X2
	020 Move W24, W1
	021 Move X20, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {58}
	026 Move X0, 0x9C2000
	027 Move X0, [X0+3504]
	028 Call 0x1C17CF4
	029 Move X0, 0x9DC000
	030 Move X0, [X0+4072]
	031 Call 0x1C17CF4
	032 Move X0, 0xA07000
	033 Move X0, [X0+264]
	034 Call 0x1C17CF4
	035 Move X0, 0xA07000
	036 Move X0, [X0+1032]
	037 Call 0x1C17CF4
	038 Move X0, 0x9B5000
	039 Move X0, [X0+2760]
	040 Call 0x1C17CF4
	041 Move X0, 0xA07000
	042 Move X0, [X0+1040]
	043 Call 0x1C17CF4
	044 Move X0, 0xA07000
	045 Move X0, [X0+1024]
	046 Call 0x1C17CF4
	047 Move X0, 0x9B5000
	048 Move X0, [X0+3544]
	049 Call 0x1C17CF4
	050 Move X0, 0x9B6000
	051 Move X0, [X0+3784]
	052 Call 0x1C17CF4
	053 Move X0, 0xA07000
	054 Move X0, [X0+1048]
	055 Call 0x1C17CF4
	056 Move W8, 1
	057 Move [X25+3387], W8
	058 Move X0, [X23]
	059 NotImplemented "Instruction MOVI not yet implemented."
	060 Move [X31+272], X31
	061 Move [X31+176], X31
	062 Move [X31+240], V0
	063 Move [X31+248], V0
	064 Move [X31+208], V0
	065 Move [X31+216], V0
	066 Move [X31+12], V0
	067 Move [X31+144], V0
	068 Move [X31+152], V0
	069 Move [X31+112], V0
	070 Move [X31+120], V0
	071 Move [X31+6], V0
	072 Call 0x1C17F10
	073 Move X1, X31
	074 Move X23, X0
	075 Call Object..ctor, X0
	076 Compare X20, 0
	077 JumpIfEqual {317}
	078 Move X0, X20
	079 Move [X22], X31
	080 Move [X21], X31
	081 Call InputAction.get_bindings, X0
	082 Compare X23, 0
	083 JumpIfEqual {315}
	084 Move X25, X23
	085 Move [X25+16], X0
	086 Move [X25+8], X1
	087 Move TEMP, X24
	088 And TEMP, TEMP, -2147483648
	089 Compare TEMP, -2147483648
	090 JumpIfEqual {335}
	091 Move X26, X1
	092 ShiftRight X26, 32
	093 And X26, X26, 0x7FFFFFFF
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Move X27, 0xA07000
	096 Move X27, [X27+264]
	097 Add X8, X31, 8
	098 Move X0, X25
	099 Move W1, W24
	100 Move X2, [X27]
	101 Call 0x24FD334, X0, X1
	102 Add X0, X31, 96
	103 Add X1, X31, 8
	104 Move W2, 88
	105 Call 0x3EB2AC0
	106 Add X0, X31, 96
	107 Move X1, X31
	108 Call InputBinding.get_isComposite, X0
	109 Move TEMP, X0
	110 And TEMP, TEMP, 1
	111 Compare TEMP, 1
	112 JumpIfNotEqual {153}
	113 Move X2, [X27]
	114 Add X8, X31, 8
	115 Move X0, X25
	116 Move W1, W24
	117 Call 0x24FD334, X0, X1
	118 Add X0, X31, 96
	119 Add X1, X31, 8
	120 Move W2, 88
	121 Call 0x3EB2AC0
	122 Add X0, X31, 96
	123 Move X1, X31
	124 Call InputBinding.get_effectivePath, X0
	125 Add X8, X31, 8
	126 Move X1, X31
	127 Call NameAndParameters.Parse, X0
	128 Move X21, [X31+8]
	129 Add W22, W24, 1
	130 NotImplemented "Instruction CMP not yet implemented."
	131 Move [X23+32], W22
	132 Move X2, [X27]
	133 Add X8, X31, 8
	134 Move X0, X25
	135 Move W1, W22
	136 Call 0x24FD334, X0, X1
	137 Add X0, X31, 96
	138 Add X1, X31, 8
	139 Move W2, 88
	140 Call 0x3EB2AC0
	141 Add X0, X31, 96
	142 Move X1, X31
	143 Call InputBinding.get_isPartOfComposite, X0
	144 Move TEMP, X0
	145 And TEMP, TEMP, 1
	146 Compare TEMP, 1
	147 JumpIfNotEqual {151}
	148 Add W22, W22, 1
	149 NotImplemented "Instruction CMP not yet implemented."
	150 Move W22, W26
	151 Move W8, W22
	152 Move W22, [X23+32]
	153 Move X26, [X20+200]
	154 Compare X26, 0
	155 JumpIfNotEqual {161}
	156 Move X0, X20
	157 Call InputAction.CreateInternalActionMapForSingletonAction, X0
	158 Move X26, [X20+200]
	159 Compare X26, 0
	160 JumpIfEqual {315}
	161 Move X0, X26
	162 Call InputActionMap.ResolveBindingsIfNecessary, X0
	163 Move X23, [X26+96]
	164 Move X0, X20
	165 Move W1, W24
	166 Call InputAction.BindingIndexOnActionToBindingIndexOnMap, X0, X1
	167 Compare X23, 0
	168 JumpIfEqual {315}
	169 Move W1, [X26+88]
	170 Move W2, W0
	171 Move X0, X23
	172 Move X3, X31
	173 Call InputActionState.GetBindingIndexInState, X0, X1, X2
	174 Move W26, W0
	175 Move X0, X23
	176 Move X1, X31
	177 Call InputActionState.get_bindingStates, X0
	178 Move X8, W26
	179 Add X9, X0, X8
	180 Move W8, [X9]
	181 Compare W8, 0
	182 JumpIfEqual {258}
	183 Move X8, [X23+24]
	184 Compare X8, 0
	185 JumpIfEqual {315}
	186 NotImplemented "Instruction LDRH not yet implemented."
	187 Move W10, [X8+24]
	188 NotImplemented "Instruction CMP not yet implemented."
	189 Add X8, X8, W9
	190 Move X23, [X8+32]
	191 Move W8, W22
	192 Subtract W1, W8, W22
	193 Move [X23+48], W1
	194 Move X8, 0x9B5000
	195 Move X8, [X8+2760]
	196 Move X0, [X8]
	197 Call 0x1C17D6C
	198 Move W8, [X23+48]
	199 Move [X23+40], X0
	200 NotImplemented "Instruction CMP not yet implemented."
	201 Move X25, 0x9B5000
	202 Move X25, [X25+3544]
	203 Move X24, X31
	204 Move W8, [X23+32]
	205 Move X0, X20
	206 Move W2, W19
	207 Add W1, W24, W8
	208 Call InputActionRebindingExtensions.GetBindingDisplayString, X0, X1, X2
	209 Move X1, X31
	210 Move X22, X0
	211 Call String.IsNullOrEmpty, X0
	212 Move X9, [X25]
	213 Move X8, [X23+40]
	214 And W31, W0, 1
	215 NotImplemented "Instruction CSEL not yet implemented."
	216 Compare X8, 0
	217 JumpIfEqual {315}
	218 Move W10, [X8+24]
	219 NotImplemented "Instruction CMP not yet implemented."
	220 Add X8, X8, X24
	221 Move [X8+32], X9
	222 NotImplemented "Instruction LDRSW not yet implemented."
	223 Add X24, X24, 1
	224 NotImplemented "Instruction CMP not yet implemented."
	225 Move X0, X21
	226 Move X1, X31
	227 Call InputBindingComposite.GetDisplayFormatString, X0
	228 Move X1, X31
	229 Move X19, X0
	230 Call String.IsNullOrEmpty, X0
	231 Move TEMP, X0
	232 And TEMP, TEMP, 1
	233 Compare TEMP, 1
	234 JumpIfNotEqual {243}
	235 Move X8, 0x9B6000
	236 Move X9, 0xA07000
	237 Move X1, [X23+40]
	238 Move X8, [X8+3784]
	239 Move X9, [X9+1032]
	240 Move X0, [X8]
	241 Move X2, [X9]
	242 Call 0x228DFD8, X0, X1
	243 Move X8, 0x9C2000
	244 Move X8, [X8+3504]
	245 Move X0, [X8]
	246 Call 0x1C17F10
	247 Move X8, 0xA07000
	248 Move X8, [X8+1040]
	249 Move X1, X23
	250 Move X3, X31
	251 Move X20, X0
	252 Move X2, [X8]
	253 Call Func`2<Object, Object>..ctor, X0, X1, X2
	254 Move X0, X19
	255 Move X1, X20
	256 Move X2, X31
	257 Call StringHelpers.ExpandTemplateString, X0, X1
	258 Move X23, X31
	259 Move X2, [X27]
	260 Add X8, X31, 8
	261 Move X0, X25
	262 Move W1, W24
	263 Call 0x24FD334, X0, X1
	264 Add X0, X31, 192
	265 Add X1, X31, 8
	266 Move W2, 88
	267 Call 0x3EB2AC0
	268 Add X0, X31, 192
	269 Move X1, X31
	270 Call InputBinding.get_effectiveInteractions, X0
	271 Move X1, X31
	272 Call String.IsNullOrEmpty, X0
	273 Move X8, [X20+56]
	274 Move TEMP, X0
	275 And TEMP, TEMP, 1
	276 Compare TEMP, 1
	277 JumpIfEqual {294}
	278 Move X0, X8
	279 Move X1, X31
	280 Call String.IsNullOrEmpty, X0
	281 Move TEMP, X0
	282 And TEMP, TEMP, 1
	283 Compare TEMP, 1
	284 JumpIfEqual {295}
	285 Add X0, X31, 192
	286 Move X1, X31
	287 Call InputBinding.get_effectiveInteractions, X0
	288 Move X8, 0xA07000
	289 Move X8, [X8+1048]
	290 Move X2, X31
	291 Move X1, [X8]
	292 Call String.Concat, X0, X1
	293 Move X8, X0
	294 Move [X31+264], X8
	295 Add X0, X31, 192
	296 Move X1, X22
	297 Move X2, X21
	298 Move W3, W19
	299 Move X4, X23
	300 Move X5, X31
	301 Call InputBinding.ToDisplayString, X0, X1, X2, X3, X4
	302 Move X20, [X31+368]
	303 Move X19, [X31+376]
	304 Move X22, [X31+352]
	305 Move X21, [X31+360]
	306 Move X24, [X31+336]
	307 Move X23, [X31+344]
	308 Move X26, [X31+320]
	309 Move X25, [X31+328]
	310 Move X30, [X31+304]
	311 Move X27, [X31+312]
	312 Move X29, [X31+288]
	313 Add X31, X31, 384
	314 Return X0
	315 Call 0x1C17F20
	316 Call 0x1C17F28
	317 Move X0, 0x9BA000
	318 Move X0, [X0+1320]
	319 Call 0x1C17D08
	320 Call 0x1C17F10
	321 Move X19, X0
	322 Move X0, 0x9DD000
	323 Move X0, [X0+3064]
	324 Call 0x1C17D08
	325 Move X1, X0
	326 Move X0, X19
	327 Move X2, X31
	328 Call ArgumentNullException..ctor, X0, X1
	329 Move X0, 0xA07000
	330 Move X0, [X0+1056]
	331 Call 0x1C17D08
	332 Move X1, X0
	333 Move X0, X19
	334 Call 0x1C17DEC
	335 Move [X31+8], W24
	336 Move X19, 0x9B5000
	337 Move X19, [X19+1880]
	338 Move X0, X19
	339 Call 0x1C17D08
	340 Add X1, X31, 8
	341 Call 0x1C17E04
	342 Move X21, X0
	343 Move X0, X23
	344 Call 0x19913C0
	345 Move X0, 0x9DC000
	346 Move X0, [X0+4072]
	347 Call 0x1C17D08
	348 Move W8, [X23+28]
	349 Move X0, X19
	350 Move [X31+300], W8
	351 Call 0x1C17D08
	352 Add X1, X31, 300
	353 Call 0x1C17E04
	354 Move X19, X0
	355 Move X0, 0xA07000
	356 Move X0, [X0+1064]
	357 Call 0x1C17D08
	358 Move X1, X21
	359 Move X2, X20
	360 Move X3, X19
	361 Move X4, X31
	362 Call String.Format, X0, X1, X2, X3
	363 Move X19, X0
	364 Move X0, 0x9BD000
	365 Move X0, [X0+1888]
	366 Call 0x1C17D08
	367 Call 0x1C17F10
	368 Move X20, X0
	369 Move X0, 0xA07000
	370 Move X0, [X0+888]
	371 Call 0x1C17D08
	372 Move X2, X0
	373 Move X0, X20
	374 Move X1, X19
	375 Move X3, X31
	376 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	377 Move X0, 0xA07000
	378 Move X0, [X0+1056]
	379 Call 0x1C17D08
	380 Move X1, X0
	381 Move X0, X20
	382 Call 0x1C17DEC

Method: System.Void ApplyBindingOverride(UnityEngine.InputSystem.InputAction action, System.String newPath, System.String group = null, System.String path = null)

Disassembly:
	0x0373FE80 BL 0x330E100
	0x0373FE84 ADRP X0, 0xA06000
	0x0373FE88 LDR X0, [X0 + 0x4C8]
	0x0373FE8C BL 0x1C16D08
	0x0373FE90 MOV X1, X0
	0x0373FE94 MOV X0, X19
	0x0373FE98 BL 0x1C16DEC
	0x0373FE9C BL 0x1C16F20
	0x0373FEA0 MOV X0, X20
	0x0373FEA4 BL 0x1C16F18
	0x0373FEA8 B 0x373FEB4
	0x0373FEAC B 0x373FEB4
	0x0373FEB0 B 0x373FEB4
	0x0373FEB4 CMP W1, 0x1
	0x0373FEB8 B.NE 0x373FECC
	0x0373FEBC BL 0x3EB1AD0
	0x0373FEC0 LDR X20, [X0]
	0x0373FEC4 BL 0x3EB1AE0
	0x0373FEC8 B 0x373FDBC
	0x0373FECC STR X0, [X31 + 0x118]
	0x0373FED0 MOV X20, X31
	0x0373FED4 B 0x373FEDC
	0x0373FED8 STR X0, [X31 + 0x118]
	0x0373FEDC CBZ X19, 0x373FF38
	0x0373FEE0 LDR X8, [X19]
	0x0373FEE4 LDR X1, [X21]
	0x0373FEE8 LDRH W9, [X8 + 0x12E]
	0x0373FEEC CBZ X9, 0x373FF10
	0x0373FEF0 LDR X10, [X8 + 0xB0]
	0x0373FEF4 ADD X10, X10, 0x8
	0x0373FEF8 LDUR X11, [X10 - 0x8]
	0x0373FEFC CMP X11, X1

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+96], X30
	003 Move [X31+104], X19
	004 Compare X0, 0
	005 JumpIfEqual {23}
	006 Move [X31+72], X1
	007 Add X1, X31, 8
	008 Move [X31+8], X31
	009 Move [X31+16], X31
	010 Move [X31+56], X31
	011 Move [X31+64], X31
	012 Move [X31+80], X31
	013 Move [X31+88], X31
	014 Move [X31+24], X3
	015 Move [X31+32], X31
	016 Move [X31+40], X31
	017 Move [X31+48], X2
	018 Call InputActionRebindingExtensions.ApplyBindingOverride, X0, X1
	019 Move X30, [X31+96]
	020 Move X19, [X31+104]
	021 Add X31, X31, 112
	022 Return 
	023 Move X0, 0x9BA000
	024 Move X0, [X0+1320]
	025 Call 0x1C17D08
	026 Call 0x1C17F10
	027 Move X19, X0
	028 Move X0, 0x9DD000
	029 Move X0, [X0+3064]
	030 Call 0x1C17D08
	031 Move X1, X0
	032 Move X0, X19
	033 Move X2, X31
	034 Call ArgumentNullException..ctor, X0, X1
	035 Move X0, 0xA07000
	036 Move X0, [X0+1072]
	037 Call 0x1C17D08
	038 Move X1, X0
	039 Move X0, X19
	040 Call 0x1C17DEC

Method: System.Void ApplyBindingOverride(UnityEngine.InputSystem.InputAction action, UnityEngine.InputSystem.InputBinding bindingOverride)

Disassembly:
	0x0373FF00 B.EQ 0x373FF20
	0x0373FF04 SUBS X9, X9, 0x1
	0x0373FF08 ADD X10, X10, 0x10
	0x0373FF0C B.NE 0x373FEF8
	0x0373FF10 MOV X0, X19
	0x0373FF14 MOV W2, W31
	0x0373FF18 BL 0x1C5C788
	0x0373FF1C B 0x373FF2C
	0x0373FF20 LDRSW X9, [X10]
	0x0373FF24 ADD X8, X8, X9, 0x4, LSL
	0x0373FF28 ADD X0, X8, 0x138
	0x0373FF2C LDP X8, X1, [X0]
	0x0373FF30 MOV X0, X19
	0x0373FF34 BLR X8
	0x0373FF38 CBNZ X20, 0x373FF44
	0x0373FF3C LDR X0, [X31 + 0x118]
	0x0373FF40 BL 0x1D2C690
	0x0373FF44 MOV X0, X20
	0x0373FF48 BL 0x1C16F18
	0x0373FF4C BL 0x1990590
	0x0373FF50 SUB X31, X31, 0x150
	0x0373FF54 STR X29, [X31 + 0x110]
	0x0373FF58 STP X30, X23, [X31 + 0x120]
	0x0373FF5C STP X22, X21, [X31 + 0x130]
	0x0373FF60 STP X20, X19, [X31 + 0x140]
	0x0373FF64 ADRP X21, 0xCA1000
	0x0373FF68 LDRB W8, [X21 + 0xD3E]
	0x0373FF6C MOV X19, X1
	0x0373FF70 MOV X20, X0
	0x0373FF74 TBNZ X8, 0x0, 0x373FFB0
	0x0373FF78 ADRP X0, 0x9B4000
	0x0373FF7C LDR X0, [X0 + 0xE00]
	0x0373FF80 BL 0x1C16CF4
	0x0373FF84 ADRP X0, 0xA06000
	0x0373FF88 LDR X0, [X0 + 0x4B0]
	0x0373FF8C BL 0x1C16CF4
	0x0373FF90 ADRP X0, 0xA06000
	0x0373FF94 LDR X0, [X0 + 0x4B8]
	0x0373FF98 BL 0x1C16CF4
	0x0373FF9C ADRP X0, 0x9B4000
	0x0373FFA0 LDR X0, [X0 + 0xE18]
	0x0373FFA4 BL 0x1C16CF4
	0x0373FFA8 MOVZ W8, 0x1
	0x0373FFAC STRB W8, [X21 + 0xD3E]
	0x0373FFB0 CBZ X20, 0x374019C
	0x0373FFB4 CBZ X19, 0x37401BC
	0x0373FFB8 ADRP X10, 0xA06000
	0x0373FFBC LDR X8, [X19]
	0x0373FFC0 LDR X10, [X10 + 0x4B0]
	0x0373FFC4 LDRH W9, [X8 + 0x12E]
	0x0373FFC8 LDR X1, [X10]
	0x0373FFCC CBZ X9, 0x373FFF0
	0x0373FFD0 LDR X10, [X8 + 0xB0]
	0x0373FFD4 ADD X10, X10, 0x8
	0x0373FFD8 LDUR X11, [X10 - 0x8]
	0x0373FFDC CMP X11, X1
	0x0373FFE0 B.EQ 0x3740000
	0x0373FFE4 SUBS X9, X9, 0x1
	0x0373FFE8 ADD X10, X10, 0x10
	0x0373FFEC B.NE 0x373FFD8
	0x0373FFF0 MOV X0, X19
	0x0373FFF4 MOV W2, W31
	0x0373FFF8 BL 0x1C5C788

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+144], X30
	003 Move [X31+152], X23
	004 Move [X31+160], X22
	005 Move [X31+168], X21
	006 Move [X31+176], X20
	007 Move [X31+184], X19
	008 NotImplemented "Instruction MRS not yet implemented."
	009 Move X8, [X22+40]
	010 Move [X31+136], X8
	011 Compare X0, 0
	012 JumpIfEqual {54}
	013 Add X8, X31, 88
	014 Move X20, X1
	015 Move X19, X0
	016 Call InputAction.get_currentState, X0
	017 Move W23, [X31+88]
	018 Compare W23, 0
	019 JumpIfEqual {22}
	020 Move X0, X19
	021 Call InputAction.Disable, X0
	022 Move X8, [X19+16]
	023 Move [X20+48], X8
	024 Move X21, [X19+200]
	025 Compare X21, 0
	026 JumpIfNotEqual {30}
	027 Move X0, X19
	028 Call InputAction.CreateInternalActionMapForSingletonAction, X0
	029 Move X21, [X19+200]
	030 Add X0, X31, 0
	031 Move W2, 88
	032 Move X1, X20
	033 Call 0x3EB2AC0
	034 Add X1, X31, 0
	035 Move X0, X21
	036 Call InputActionRebindingExtensions.ApplyBindingOverride, X0, X1
	037 Compare W23, 0
	038 JumpIfEqual {43}
	039 Move X0, X19
	040 Call InputAction.Enable, X0
	041 Move X0, X19
	042 Call InputAction.RequestInitialStateCheckOnEnabledAction, X0
	043 Move X8, [X22+40]
	044 Move X9, [X31+136]
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move X20, [X31+176]
	047 Move X19, [X31+184]
	048 Move X22, [X31+160]
	049 Move X21, [X31+168]
	050 Move X30, [X31+144]
	051 Move X23, [X31+152]
	052 Add X31, X31, 192
	053 Return 
	054 Move X0, 0x9BA000
	055 Move X0, [X0+1320]
	056 Call 0x1C17D08
	057 Call 0x1C17F10
	058 Move X19, X0
	059 Move X0, 0x9DD000
	060 Move X0, [X0+3064]
	061 Call 0x1C17D08
	062 Move X1, X0
	063 Move X0, X19
	064 Move X2, X31
	065 Call ArgumentNullException..ctor, X0, X1
	066 Move X0, 0xA07000
	067 Move X0, [X0+1080]
	068 Call 0x1C17D08
	069 Move X1, X0
	070 Move X0, X19
	071 Call 0x1C17DEC
	072 Call 0x3EB2B20

Method: System.Void ApplyBindingOverride(UnityEngine.InputSystem.InputAction action, System.Int32 bindingIndex, UnityEngine.InputSystem.InputBinding bindingOverride)

Disassembly:
	0x0374012C LDR X1, [X21]
	0x03740130 LDRH W9, [X8 + 0x12E]
	0x03740134 CBZ X9, 0x3740158
	0x03740138 LDR X10, [X8 + 0xB0]
	0x0374013C ADD X10, X10, 0x8
	0x03740140 LDUR X11, [X10 - 0x8]
	0x03740144 CMP X11, X1
	0x03740148 B.EQ 0x3740168
	0x0374014C SUBS X9, X9, 0x1
	0x03740150 ADD X10, X10, 0x10
	0x03740154 B.NE 0x3740140
	0x03740158 MOV X0, X19
	0x0374015C MOV W2, W31
	0x03740160 BL 0x1C5C788
	0x03740164 B 0x3740174
	0x03740168 LDRSW X9, [X10]
	0x0374016C ADD X8, X8, X9, 0x4, LSL
	0x03740170 ADD X0, X8, 0x138
	0x03740174 LDP X8, X1, [X0]
	0x03740178 MOV X0, X19
	0x0374017C BLR X8
	0x03740180 CBNZ X20, 0x3740208
	0x03740184 LDP X20, X19, [X31 + 0x140]
	0x03740188 LDP X22, X21, [X31 + 0x130]
	0x0374018C LDP X30, X23, [X31 + 0x120]
	0x03740190 LDR X29, [X31 + 0x110]
	0x03740194 ADD X31, X31, 0x150
	0x03740198 RET
	0x0374019C ADRP X0, 0x9B8000
	0x037401A0 LDR X0, [X0 + 0x528]
	0x037401A4 BL 0x1C16D08
	0x037401A8 BL 0x1C16F10
	0x037401AC MOV X19, X0
	0x037401B0 ADRP X0, 0x9DB000
	0x037401B4 LDR X0, [X0 + 0xC10]
	0x037401B8 B 0x37401D8
	0x037401BC ADRP X0, 0x9B8000
	0x037401C0 LDR X0, [X0 + 0x528]
	0x037401C4 BL 0x1C16D08
	0x037401C8 BL 0x1C16F10
	0x037401CC MOV X19, X0
	0x037401D0 ADRP X0, 0xA05000
	0x037401D4 LDR X0, [X0 + 0x4C0]
	0x037401D8 BL 0x1C16D08
	0x037401DC MOV X1, X0
	0x037401E0 MOV X0, X19
	0x037401E4 MOV X2, X31

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+96], X30
	003 Move [X31+112], X22
	004 Move [X31+120], X21
	005 Move [X31+128], X20
	006 Move [X31+136], X19
	007 Compare X0, 0
	008 JumpIfEqual {36}
	009 Move X19, X2
	010 Move X21, X0
	011 Call InputAction.BindingIndexOnActionToBindingIndexOnMap, X0, X1
	012 Move X8, [X21+16]
	013 Move W20, W0
	014 Move [X19+48], X8
	015 Move X22, [X21+200]
	016 Compare X22, 0
	017 JumpIfNotEqual {21}
	018 Move X0, X21
	019 Call InputAction.CreateInternalActionMapForSingletonAction, X0
	020 Move X22, [X21+200]
	021 Add X0, X31, 8
	022 Move W2, 88
	023 Move X1, X19
	024 Call 0x3EB2AC0
	025 Add X2, X31, 8
	026 Move X0, X22
	027 Move W1, W20
	028 Call InputActionRebindingExtensions.ApplyBindingOverride, X0, X1, X2
	029 Move X20, [X31+128]
	030 Move X19, [X31+136]
	031 Move X22, [X31+112]
	032 Move X21, [X31+120]
	033 Move X30, [X31+96]
	034 Add X31, X31, 144
	035 Return 
	036 Move X0, 0x9B9000
	037 Move X0, [X0+1320]
	038 Call 0x1C17D08
	039 Call 0x1C17F10
	040 Move X19, X0
	041 Move X0, 0x9DC000
	042 Move X0, [X0+3064]
	043 Call 0x1C17D08
	044 Move X1, X0
	045 Move X0, X19
	046 Move X2, X31
	047 Call ArgumentNullException..ctor, X0, X1
	048 Move X0, 0xA06000
	049 Move X0, [X0+1096]
	050 Call 0x1C17D08
	051 Move X1, X0
	052 Move X0, X19
	053 Call 0x1C17DEC

Method: System.Void ApplyBindingOverride(UnityEngine.InputSystem.InputAction action, System.Int32 bindingIndex, System.String path)

Disassembly:
	0x0374035C MOV X1, X31
	0x03740360 BL 0x3771F68
	0x03740364 MOV X2, X0
	0x03740368 MOV X0, X20
	0x0374036C MOV W1, W22
	0x03740370 BL 0x373F35C
	0x03740374 ADD W21, W21, 0x1
	0x03740378 ADD W22, W22, 0x1
	0x0374037C CMP W23, W22
	0x03740380 B.NE 0x3740330
	0x03740384 MOV W0, W21
	0x03740388 LDP X20, X19, [X31 + 0xA0]
	0x0374038C LDP X22, X21, [X31 + 0x90]
	0x03740390 LDP X24, X23, [X31 + 0x80]
	0x03740394 LDR X30, [X31 + 0x70]
	0x03740398 ADD X31, X31, 0xB0
	0x0374039C RET
	0x037403A0 ADRP X0, 0x9B8000
	0x037403A4 LDR X0, [X0 + 0x528]
	0x037403A8 BL 0x1C16D08
	0x037403AC BL 0x1C16F10
	0x037403B0 MOV X19, X0
	0x037403B4 ADRP X0, 0x9DB000
	0x037403B8 LDR X0, [X0 + 0xBF8]
	0x037403BC B 0x37403DC
	0x037403C0 ADRP X0, 0x9B8000
	0x037403C4 LDR X0, [X0 + 0x528]
	0x037403C8 BL 0x1C16D08
	0x037403CC BL 0x1C16F10
	0x037403D0 MOV X19, X0
	0x037403D4 ADRP X0, 0x9DB000
	0x037403D8 LDR X0, [X0 + 0xD60]
	0x037403DC BL 0x1C16D08
	0x037403E0 MOV X1, X0
	0x037403E4 MOV X0, X19
	0x037403E8 MOV X2, X31
	0x037403EC BL 0x330E100
	0x037403F0 ADRP X0, 0xA05000

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+96], X30
	003 Move [X31+112], X20
	004 Move [X31+120], X19
	005 Compare X2, 0
	006 JumpIfEqual {22}
	007 NotImplemented "Instruction MOVI not yet implemented."
	008 Move [X31+64], X2
	009 Add X2, X31, 0
	010 Move [X31+72], X31
	011 Move [X31+80], X31
	012 Move [X31+32], V0
	013 Move [X31+40], V0
	014 Move [X31], V0
	015 Move [X31+8], V0
	016 Call InputActionRebindingExtensions.ApplyBindingOverride, X0, X1, X2
	017 Move X20, [X31+112]
	018 Move X19, [X31+120]
	019 Move X30, [X31+96]
	020 Add X31, X31, 128
	021 Return 
	022 Move X0, 0x9BC000
	023 Move X0, [X0+1400]
	024 Call 0x1C17D08
	025 Call 0x1C17F10
	026 Move X19, X0
	027 Move X0, 0xA06000
	028 Move X0, [X0+1120]
	029 Call 0x1C17D08
	030 Move X20, X0
	031 Move X0, 0x9BF000
	032 Move X0, [X0+288]
	033 Call 0x1C17D08
	034 Move X2, X0
	035 Move X0, X19
	036 Move X1, X20
	037 Move X3, X31
	038 Call ArgumentException..ctor, X0, X1, X2
	039 Move X0, 0xA06000
	040 Move X0, [X0+1128]
	041 Call 0x1C17D08
	042 Move X1, X0
	043 Move X0, X19
	044 Call 0x1C17DEC

Method: System.Int32 ApplyBindingOverride(UnityEngine.InputSystem.InputActionMap actionMap, UnityEngine.InputSystem.InputBinding bindingOverride)

Disassembly:
	0x0373FFFC B 0x374000C
	0x03740000 LDRSW X9, [X10]
	0x03740004 ADD X8, X8, X9, 0x4, LSL
	0x03740008 ADD X0, X8, 0x138
	0x0374000C LDP X8, X1, [X0]
	0x03740010 ADRP X21, 0x9B3000
	0x03740014 LDR X21, [X21 + 0xE00]
	0x03740018 MOV X0, X19
	0x0374001C BLR X8
	0x03740020 MOV X19, X0
	0x03740024 CBZ X0, 0x3740204
	0x03740028 ADRP X22, 0x9B3000
	0x0374002C ADRP X23, 0xA05000
	0x03740030 LDR X22, [X22 + 0xE18]
	0x03740034 LDR X23, [X23 + 0x4B8]
	0x03740038 LDR X8, [X19]
	0x0374003C LDR X1, [X22]
	0x03740040 LDRH W9, [X8 + 0x12E]
	0x03740044 CBZ X9, 0x3740068
	0x03740048 LDR X10, [X8 + 0xB0]
	0x0374004C ADD X10, X10, 0x8
	0x03740050 LDUR X11, [X10 - 0x8]
	0x03740054 CMP X11, X1
	0x03740058 B.EQ 0x3740078
	0x0374005C SUBS X9, X9, 0x1
	0x03740060 ADD X10, X10, 0x10
	0x03740064 B.NE 0x3740050
	0x03740068 MOV X0, X19
	0x0374006C MOV W2, W31
	0x03740070 BL 0x1C5C788
	0x03740074 B 0x3740084
	0x03740078 LDRSW X9, [X10]
	0x0374007C ADD X8, X8, X9, 0x4, LSL
	0x03740080 ADD X0, X8, 0x138
	0x03740084 LDP X8, X1, [X0]
	0x03740088 MOV X0, X19
	0x0374008C BLR X8
	0x03740090 TBZ X0, 0x0, 0x3740120
	0x03740094 LDR X8, [X19]
	0x03740098 LDR X1, [X23]
	0x0374009C LDRH W9, [X8 + 0x12E]
	0x037400A0 CBZ X9, 0x37400C4
	0x037400A4 LDR X10, [X8 + 0xB0]
	0x037400A8 ADD X10, X10, 0x8
	0x037400AC LDUR X11, [X10 - 0x8]
	0x037400B0 CMP X11, X1
	0x037400B4 B.EQ 0x37400D4
	0x037400B8 SUBS X9, X9, 0x1
	0x037400BC ADD X10, X10, 0x10
	0x037400C0 B.NE 0x37400AC
	0x037400C4 MOV X0, X19
	0x037400C8 MOV W2, W31
	0x037400CC BL 0x1C5C788
	0x037400D0 B 0x37400E0
	0x037400D4 LDRSW X9, [X10]
	0x037400D8 ADD X8, X8, X9, 0x4, LSL
	0x037400DC ADD X0, X8, 0x138
	0x037400E0 LDP X9, X1, [X0]
	0x037400E4 ADD X8, X31, 0x60
	0x037400E8 MOV X0, X19
	0x037400EC BLR X9
	0x037400F0 ADD X0, X31, 0xB8
	0x037400F4 ADD X1, X31, 0x60
	0x037400F8 MOVZ W2, 0x58
	0x037400FC BL 0x3EB1AC0
	0x03740100 ADD X0, X31, 0x8
	0x03740104 ADD X1, X31, 0xB8
	0x03740108 MOVZ W2, 0x58
	0x0374010C BL 0x3EB1AC0
	0x03740110 ADD X1, X31, 0x8
	0x03740114 MOV X0, X20
	0x03740118 BL 0x373F4F4
	0x0374011C B 0x3740038
	0x03740120 MOV X20, X31
	0x03740124 CBZ X19, 0x3740180
	0x03740128 LDR X8, [X19]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Compare X0, 0
	010 JumpIfEqual {68}
	011 Move X22, [X0+48]
	012 Move X19, X0
	013 Compare X22, 0
	014 JumpIfEqual {47}
	015 Move X8, [X22+24]
	016 NotImplemented "Instruction CMP not yet implemented."
	017 And X8, X8, 0
	018 Compare X8, 0
	019 JumpIfEqual {46}
	020 Move X21, X1
	021 Move W20, W31
	022 Move X23, X31
	023 Subtract X24, X8, 1
	024 Add X25, X22, 112
	025 Subtract X1, X25, 80
	026 Move X0, X21
	027 Move W2, W31
	028 Move X3, X31
	029 Call InputBinding.Matches, X0, X1, X2
	030 Move TEMP, X0
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfNotEqual {41}
	034 Move W8, [X22+24]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move V0, [X21+4]
	037 Add W20, W20, 1
	038 Move [X25-16], V0
	039 Move X8, [X21+80]
	040 Move [X25], X8
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move W8, [X22+24]
	043 Add X23, X23, 1
	044 Add X25, X25, 88
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Call 0x1C17F28
	047 Move W20, W31
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move W8, [X19+200]
	050 Move W1, 1
	051 Move X0, X19
	052 Move [X19+56], X31
	053 Move [X19+64], X31
	054 And W8, W8, 0xFFFFFFF3
	055 Move [X19+312], X31
	056 Move [X19+200], W8
	057 Call InputActionMap.LazyResolveBindings, X0, X1
	058 Move W0, W20
	059 Move X20, [X31+48]
	060 Move X19, [X31+56]
	061 Move X22, [X31+32]
	062 Move X21, [X31+40]
	063 Move X24, [X31+16]
	064 Move X23, [X31+24]
	065 Move X30, [X31+64]
	066 Move X25, [X31+72]
	067 Return X0
	068 Move X0, 0x9B9000
	069 Move X0, [X0+1320]
	070 Call 0x1C17D08
	071 Call 0x1C17F10
	072 Move X19, X0
	073 Move X0, 0x9DC000
	074 Move X0, [X0+3088]
	075 Call 0x1C17D08
	076 Move X1, X0
	077 Move X0, X19
	078 Move X2, X31
	079 Call ArgumentNullException..ctor, X0, X1
	080 Move X0, 0xA06000
	081 Move X0, [X0+1088]
	082 Call 0x1C17D08
	083 Move X1, X0
	084 Move X0, X19
	085 Call 0x1C17DEC

Method: System.Void ApplyBindingOverride(UnityEngine.InputSystem.InputActionMap actionMap, System.Int32 bindingIndex, UnityEngine.InputSystem.InputBinding bindingOverride)

Disassembly:
	0x037401E8 BL 0x330E100
	0x037401EC ADRP X0, 0xA05000
	0x037401F0 LDR X0, [X0 + 0x4D0]
	0x037401F4 BL 0x1C16D08
	0x037401F8 MOV X1, X0
	0x037401FC MOV X0, X19
	0x03740200 BL 0x1C16DEC
	0x03740204 BL 0x1C16F20
	0x03740208 MOV X0, X20
	0x0374020C BL 0x1C16F18
	0x03740210 B 0x374021C
	0x03740214 B 0x374021C
	0x03740218 B 0x374021C
	0x0374021C CMP W1, 0x1
	0x03740220 B.NE 0x3740234
	0x03740224 BL 0x3EB1AD0
	0x03740228 LDR X20, [X0]
	0x0374022C BL 0x3EB1AE0
	0x03740230 B 0x3740124
	0x03740234 STR X0, [X31 + 0x118]
	0x03740238 MOV X20, X31
	0x0374023C B 0x3740244
	0x03740240 STR X0, [X31 + 0x118]
	0x03740244 CBZ X19, 0x37402A0
	0x03740248 LDR X8, [X19]
	0x0374024C LDR X1, [X21]
	0x03740250 LDRH W9, [X8 + 0x12E]
	0x03740254 CBZ X9, 0x3740278
	0x03740258 LDR X10, [X8 + 0xB0]
	0x0374025C ADD X10, X10, 0x8
	0x03740260 LDUR X11, [X10 - 0x8]
	0x03740264 CMP X11, X1
	0x03740268 B.EQ 0x3740288
	0x0374026C SUBS X9, X9, 0x1
	0x03740270 ADD X10, X10, 0x10
	0x03740274 B.NE 0x3740260
	0x03740278 MOV X0, X19
	0x0374027C MOV W2, W31
	0x03740280 BL 0x1C5C788
	0x03740284 B 0x3740294
	0x03740288 LDRSW X9, [X10]
	0x0374028C ADD X8, X8, X9, 0x4, LSL
	0x03740290 ADD X0, X8, 0x138
	0x03740294 LDP X8, X1, [X0]
	0x03740298 MOV X0, X19
	0x0374029C BLR X8
	0x037402A0 CBNZ X20, 0x37402AC
	0x037402A4 LDR X0, [X31 + 0x118]
	0x037402A8 BL 0x1D2C690
	0x037402AC MOV X0, X20
	0x037402B0 BL 0x1C16F18
	0x037402B4 BL 0x1990590
	0x037402B8 SUB X31, X31, 0xB0
	0x037402BC STR X30, [X31 + 0x70]
	0x037402C0 STP X24, X23, [X31 + 0x80]
	0x037402C4 STP X22, X21, [X31 + 0x90]
	0x037402C8 STP X20, X19, [X31 + 0xA0]
	0x037402CC ADRP X21, 0xCA0000
	0x037402D0 LDRB W8, [X21 + 0xD3F]
	0x037402D4 MOV X19, X1
	0x037402D8 MOV X20, X0
	0x037402DC TBNZ X8, 0x0, 0x3740300
	0x037402E0 ADRP X0, 0x9DA000
	0x037402E4 LDR X0, [X0 + 0xFE8]
	0x037402E8 BL 0x1C16CF4
	0x037402EC ADRP X0, 0xA05000
	0x037402F0 LDR X0, [X0 + 0x108]
	0x037402F4 BL 0x1C16CF4
	0x037402F8 MOVZ W8, 0x1
	0x037402FC STRB W8, [X21 + 0xD3F]
	0x03740300 CBZ X20, 0x37403A0
	0x03740304 CBZ X19, 0x37403C0
	0x03740308 MOV X0, X20
	0x0374030C BL 0x37345CC
	0x03740310 UBFM X23, X1, 0x20, 0x3F
	0x03740314 CMP W23, 0x1
	0x03740318 MOV W21, W31
	0x0374031C STP X0, X1, [X31 + 0x60]
	0x03740320 B.LT 0x3740384
	0x03740324 ADRP X24, 0xA05000
	0x03740328 LDR X24, [X24 + 0x108]
	0x0374032C MOV W22, W31
	0x03740330 LDR X2, [X24]
	0x03740334 ADD X8, X31, 0x8
	0x03740338 ADD X0, X31, 0x60
	0x0374033C MOV W1, W22
	0x03740340 BL 0x24FC334
	0x03740344 LDR X1, [X31 + 0x18]
	0x03740348 MOV X0, X19
	0x0374034C MOV W2, W31
	0x03740350 MOV X3, X31
	0x03740354 BL 0x376B4E8
	0x03740358 CBZ X0, 0x3740378

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Compare X0, 0
	007 JumpIfEqual {39}
	008 Move X8, [X0+48]
	009 Compare X8, 0
	010 JumpIfEqual {57}
	011 Move W9, [X8+24]
	012 Move TEMP, X1
	013 And TEMP, TEMP, -2147483648
	014 Compare TEMP, -2147483648
	015 JumpIfEqual {58}
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Move W9, [X8+24]
	018 NotImplemented "Instruction CMP not yet implemented."
	019 Move V0, [X2+4]
	020 Move W9, 88
	021 NotImplemented "Instruction UMADDL not yet implemented."
	022 Move X20, [X31+32]
	023 Move X19, [X31+40]
	024 Move [X8+6], V0
	025 Move X9, [X2+80]
	026 Move X22, [X31+16]
	027 Move X21, [X31+24]
	028 Move W1, 1
	029 Move [X8+112], X9
	030 Move W8, [X0+200]
	031 Move [X0+56], X31
	032 Move [X0+64], X31
	033 Move [X0+312], X31
	034 And W8, W8, 0xFFFFFFF3
	035 Move [X0+200], W8
	036 Move X30, [X31+48]
	037 Call InputActionMap.LazyResolveBindings, X0, X1
	038 Return 
	039 Move X0, 0x9B9000
	040 Move X0, [X0+1320]
	041 Call 0x1C17D08
	042 Call 0x1C17F10
	043 Move X19, X0
	044 Move X0, 0x9DC000
	045 Move X0, [X0+3088]
	046 Call 0x1C17D08
	047 Move X1, X0
	048 Move X0, X19
	049 Move X2, X31
	050 Call ArgumentNullException..ctor, X0, X1
	051 Move X0, 0xA06000
	052 Move X0, [X0+1104]
	053 Call 0x1C17D08
	054 Move X1, X0
	055 Move X0, X19
	056 Call 0x1C17DEC
	057 Move W9, W31
	058 Move [X31+12], W1
	059 Move X19, 0x9B4000
	060 Move X19, [X19+1880]
	061 Move X20, X0
	062 Move W22, W9
	063 Move X0, X19
	064 Call 0x1C17D08
	065 Add X1, X31, 12
	066 Call 0x1C17E04
	067 Move X21, X0
	068 Move X0, X19
	069 Move [X31+8], W22
	070 Call 0x1C17D08
	071 Add X1, X31, 8
	072 Call 0x1C17E04
	073 Move X19, X0
	074 Move X0, 0xA06000
	075 Move X0, [X0+1112]
	076 Call 0x1C17D08
	077 Move X1, X21
	078 Move X2, X20
	079 Move X3, X19
	080 Move X4, X31
	081 Call String.Format, X0, X1, X2, X3
	082 Move X19, X0
	083 Move X0, 0x9BC000
	084 Move X0, [X0+1888]
	085 Call 0x1C17D08
	086 Call 0x1C17F10
	087 Move X20, X0
	088 Move X0, 0xA06000
	089 Move X0, [X0+888]
	090 Call 0x1C17D08
	091 Move X1, X0
	092 Move X0, X20
	093 Move X2, X19
	094 Move X3, X31
	095 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	096 Move X0, 0xA06000
	097 Move X0, [X0+1104]
	098 Call 0x1C17D08
	099 Move X1, X0
	100 Move X0, X20
	101 Call 0x1C17DEC
	102 Call 0x1C17F28

Method: System.Void RemoveBindingOverride(UnityEngine.InputSystem.InputAction action, System.Int32 bindingIndex)

Disassembly:
	0x037403F4 LDR X0, [X0 + 0x4D8]
	0x037403F8 BL 0x1C16D08
	0x037403FC MOV X1, X0
	0x03740400 MOV X0, X19
	0x03740404 BL 0x1C16DEC
	0x03740408 SUB X31, X31, 0x40
	0x0374040C STR X30, [X31 + 0x10]
	0x03740410 STP X22, X21, [X31 + 0x20]
	0x03740414 STP X20, X19, [X31 + 0x30]
	0x03740418 ADRP X21, 0xCA0000
	0x0374041C LDRB W8, [X21 + 0xD40]
	0x03740420 MOV X19, X1
	0x03740424 MOV X20, X0
	0x03740428 TBNZ X8, 0x0, 0x374044C
	0x0374042C ADRP X0, 0xA05000
	0x03740430 LDR X0, [X0 + 0x250]
	0x03740434 BL 0x1C16CF4
	0x03740438 ADRP X0, 0xA05000
	0x0374043C LDR X0, [X0 + 0x258]
	0x03740440 BL 0x1C16CF4
	0x03740444 MOVZ W8, 0x1
	0x03740448 STRB W8, [X21 + 0xD40]
	0x0374044C CBZ X20, 0x37404B8
	0x03740450 CBZ X19, 0x37404D8
	0x03740454 MOV X0, X20
	0x03740458 BL 0x3739CBC
	0x0374045C UBFM X21, X1, 0x20, 0x3F
	0x03740460 CMP W21, 0x1
	0x03740464 STP X0, X1, [X31]
	0x03740468 B.LT 0x37404A0
	0x0374046C ADRP X22, 0xA05000

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+96], X30
	003 Move [X31+104], X19
	004 Compare X0, 0
	005 JumpIfEqual {19}
	006 NotImplemented "Instruction MOVI not yet implemented."
	007 Add X2, X31, 0
	008 Move [X31+80], X31
	009 Move [X31+48], V0
	010 Move [X31+56], V0
	011 Move [X31+16], V0
	012 Move [X31+24], V0
	013 Move [X31], V0
	014 Call InputActionRebindingExtensions.ApplyBindingOverride, X0, X1, X2
	015 Move X30, [X31+96]
	016 Move X19, [X31+104]
	017 Add X31, X31, 112
	018 Return 
	019 Move X0, 0x9B9000
	020 Move X0, [X0+1320]
	021 Call 0x1C17D08
	022 Call 0x1C17F10
	023 Move X19, X0
	024 Move X0, 0x9DC000
	025 Move X0, [X0+3064]
	026 Call 0x1C17D08
	027 Move X1, X0
	028 Move X0, X19
	029 Move X2, X31
	030 Call ArgumentNullException..ctor, X0, X1
	031 Move X0, 0xA06000
	032 Move X0, [X0+1136]
	033 Call 0x1C17D08
	034 Move X1, X0
	035 Move X0, X19
	036 Call 0x1C17DEC

Method: System.Void RemoveBindingOverride(UnityEngine.InputSystem.InputAction action, UnityEngine.InputSystem.InputBinding bindingMask)

Disassembly:
	0x03740470 LDR X22, [X22 + 0x258]
	0x03740474 MOV W20, W31
	0x03740478 LDR X2, [X22]
	0x0374047C ADD X0, X31, 0x0
	0x03740480 MOV W1, W20
	0x03740484 BL 0x24FDB3C
	0x03740488 MOV X1, X19
	0x0374048C BL 0x37402B8
	0x03740490 ADD W20, W20, 0x1
	0x03740494 CMP W21, W20
	0x03740498 B.NE 0x3740478
	0x0374049C B 0x37404A4
	0x037404A0 MOV W0, W31
	0x037404A4 LDP X20, X19, [X31 + 0x30]
	0x037404A8 LDP X22, X21, [X31 + 0x20]
	0x037404AC LDR X30, [X31 + 0x10]
	0x037404B0 ADD X31, X31, 0x40
	0x037404B4 RET
	0x037404B8 ADRP X0, 0x9B8000
	0x037404BC LDR X0, [X0 + 0x528]
	0x037404C0 BL 0x1C16D08
	0x037404C4 BL 0x1C16F10
	0x037404C8 MOV X19, X0
	0x037404CC ADRP X0, 0x9DB000
	0x037404D0 LDR X0, [X0 + 0xC10]
	0x037404D4 B 0x37404F4
	0x037404D8 ADRP X0, 0x9B8000
	0x037404DC LDR X0, [X0 + 0x528]
	0x037404E0 BL 0x1C16D08
	0x037404E4 BL 0x1C16F10
	0x037404E8 MOV X19, X0
	0x037404EC ADRP X0, 0x9DB000
	0x037404F0 LDR X0, [X0 + 0xD60]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+96], X30
	003 Move [X31+104], X19
	004 Compare X0, 0
	005 JumpIfEqual {20}
	006 Move X19, X0
	007 Add X0, X31, 8
	008 Move W2, 88
	009 Move [X1+64], X31
	010 Move [X1+72], X31
	011 Move [X1+80], X31
	012 Call 0x3EB2AC0
	013 Add X1, X31, 8
	014 Move X0, X19
	015 Call InputActionRebindingExtensions.ApplyBindingOverride, X0, X1
	016 Move X30, [X31+96]
	017 Move X19, [X31+104]
	018 Add X31, X31, 112
	019 Return 
	020 Move X0, 0x9B9000
	021 Move X0, [X0+1320]
	022 Call 0x1C17D08
	023 Call 0x1C17F10
	024 Move X19, X0
	025 Move X0, 0x9DC000
	026 Move X0, [X0+3064]
	027 Call 0x1C17D08
	028 Move X1, X0
	029 Move X0, X19
	030 Move X2, X31
	031 Call ArgumentNullException..ctor, X0, X1
	032 Move X0, 0xA06000
	033 Move X0, [X0+1144]
	034 Call 0x1C17D08
	035 Move X1, X0
	036 Move X0, X19
	037 Call 0x1C17DEC

Method: System.Void RemoveBindingOverride(UnityEngine.InputSystem.InputActionMap actionMap, UnityEngine.InputSystem.InputBinding bindingMask)

Disassembly:
	0x037404F4 BL 0x1C16D08
	0x037404F8 MOV X1, X0
	0x037404FC MOV X0, X19
	0x03740500 MOV X2, X31
	0x03740504 BL 0x330E100
	0x03740508 ADRP X0, 0xA05000
	0x0374050C LDR X0, [X0 + 0x4E0]
	0x03740510 BL 0x1C16D08
	0x03740514 MOV X1, X0
	0x03740518 MOV X0, X19
	0x0374051C BL 0x1C16DEC
	0x03740520 SUB X31, X31, 0x150
	0x03740524 STP X29, X30, [X31 + 0x110]
	0x03740528 STP X24, X23, [X31 + 0x120]
	0x0374052C STP X22, X21, [X31 + 0x130]
	0x03740530 STP X20, X19, [X31 + 0x140]
	0x03740534 ADRP X19, 0xCA0000
	0x03740538 LDRB W8, [X19 + 0xD41]
	0x0374053C MOV X21, X0
	0x03740540 TBNZ X8, 0x0, 0x37405C4
	0x03740544 ADRP X0, 0xA05000
	0x03740548 LDR X0, [X0 + 0x4E8]
	0x0374054C BL 0x1C16CF4
	0x03740550 ADRP X0, 0x9B3000
	0x03740554 LDR X0, [X0 + 0xE00]
	0x03740558 BL 0x1C16CF4
	0x0374055C ADRP X0, 0xA05000
	0x03740560 LDR X0, [X0 + 0x4B0]
	0x03740564 BL 0x1C16CF4
	0x03740568 ADRP X0, 0xA05000
	0x0374056C LDR X0, [X0 + 0x4B8]
	0x03740570 BL 0x1C16CF4
	0x03740574 ADRP X0, 0x9B3000

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+96], X30
	003 Move [X31+104], X19
	004 Compare X0, 0
	005 JumpIfEqual {20}
	006 Move X19, X0
	007 Add X0, X31, 8
	008 Move W2, 88
	009 Move [X1+64], X31
	010 Move [X1+72], X31
	011 Move [X1+80], X31
	012 Call 0x3EB2AC0
	013 Add X1, X31, 8
	014 Move X0, X19
	015 Call InputActionRebindingExtensions.ApplyBindingOverride, X0, X1
	016 Move X30, [X31+96]
	017 Move X19, [X31+104]
	018 Add X31, X31, 112
	019 Return 
	020 Move X0, 0x9B9000
	021 Move X0, [X0+1320]
	022 Call 0x1C17D08
	023 Call 0x1C17F10
	024 Move X19, X0
	025 Move X0, 0x9DC000
	026 Move X0, [X0+3088]
	027 Call 0x1C17D08
	028 Move X1, X0
	029 Move X0, X19
	030 Move X2, X31
	031 Call ArgumentNullException..ctor, X0, X1
	032 Move X0, 0xA06000
	033 Move X0, [X0+1152]
	034 Call 0x1C17D08
	035 Move X1, X0
	036 Move X0, X19
	037 Call 0x1C17DEC

Method: System.Void RemoveAllBindingOverrides(UnityEngine.InputSystem.IInputActionCollection2 actions)

Disassembly:
	0x03740578 LDR X0, [X0 + 0xE18]
	0x0374057C BL 0x1C16CF4
	0x03740580 ADRP X0, 0xA05000
	0x03740584 LDR X0, [X0 + 0x4F0]
	0x03740588 BL 0x1C16CF4
	0x0374058C ADRP X0, 0xA05000
	0x03740590 LDR X0, [X0 + 0x4F8]
	0x03740594 BL 0x1C16CF4
	0x03740598 ADRP X0, 0xA05000
	0x0374059C LDR X0, [X0 + 0x500]
	0x037405A0 BL 0x1C16CF4
	0x037405A4 ADRP X0, 0xA05000
	0x037405A8 LDR X0, [X0 + 0x508]
	0x037405AC BL 0x1C16CF4
	0x037405B0 ADRP X0, 0x9B5000
	0x037405B4 LDR X0, [X0 + 0x278]
	0x037405B8 BL 0x1C16CF4
	0x037405BC MOVZ W8, 0x1
	0x037405C0 STRB W8, [X19 + 0xD41]
	0x037405C4 MOVI V0.2D, 0x0
	0x037405C8 STR X31, [X31 + 0x100]
	0x037405CC STP V0, V0, [X31 + 0xE0]
	0x037405D0 STP V0, V0, [X31 + 0xC0]
	0x037405D4 STR V0, [X31 + 0xB]
	0x037405D8 CBZ X21, 0x37408AC
	0x037405DC ADRP X8, 0xA05000
	0x037405E0 LDR X8, [X8 + 0x508]
	0x037405E4 ADRP X19, 0xA05000
	0x037405E8 ADRP X20, 0xA05000
	0x037405EC LDR X0, [X8]
	0x037405F0 LDR X19, [X19 + 0x4F8]
	0x037405F4 LDR X20, [X20 + 0x4F0]
	0x037405F8 BL 0x1C16F10
	0x037405FC LDR X1, [X19]
	0x03740600 MOV X19, X0
	0x03740604 BL 0x31042A8
	0x03740608 LDR X8, [X21]
	0x0374060C LDR X1, [X20]
	0x03740610 LDRH W9, [X8 + 0x12E]
	0x03740614 CBZ X9, 0x3740638
	0x03740618 LDR X10, [X8 + 0xB0]
	0x0374061C ADD X10, X10, 0x8
	0x03740620 LDUR X11, [X10 - 0x8]
	0x03740624 CMP X11, X1
	0x03740628 B.EQ 0x3740648
	0x0374062C SUBS X9, X9, 0x1
	0x03740630 ADD X10, X10, 0x10
	0x03740634 B.NE 0x3740620
	0x03740638 MOV X0, X21
	0x0374063C MOV W2, W31
	0x03740640 BL 0x1C5C788
	0x03740644 B 0x3740654
	0x03740648 LDRSW X9, [X10]
	0x0374064C ADD X8, X8, X9, 0x4, LSL
	0x03740650 ADD X0, X8, 0x138
	0x03740654 LDP X8, X1, [X0]
	0x03740658 MOV X0, X21
	0x0374065C BLR X8
	0x03740660 CBZ X0, 0x37408A8
	0x03740664 ADRP X10, 0xA05000
	0x03740668 LDR X8, [X0]
	0x0374066C LDR X10, [X10 + 0x4B0]
	0x03740670 MOV X20, X0
	0x03740674 LDRH W9, [X8 + 0x12E]
	0x03740678 LDR X1, [X10]
	0x0374067C CBZ X9, 0x37406A0
	0x03740680 LDR X10, [X8 + 0xB0]
	0x03740684 ADD X10, X10, 0x8
	0x03740688 LDUR X11, [X10 - 0x8]
	0x0374068C CMP X11, X1
	0x03740690 B.EQ 0x37406B0
	0x03740694 SUBS X9, X9, 0x1
	0x03740698 ADD X10, X10, 0x10
	0x0374069C B.NE 0x3740688
	0x037406A0 MOV X0, X20
	0x037406A4 MOV W2, W31
	0x037406A8 BL 0x1C5C788
	0x037406AC B 0x37406BC
	0x037406B0 LDRSW X9, [X10]
	0x037406B4 ADD X8, X8, X9, 0x4, LSL
	0x037406B8 ADD X0, X8, 0x138
	0x037406BC LDP X8, X1, [X0]
	0x037406C0 ADRP X22, 0x9B3000
	0x037406C4 LDR X22, [X22 + 0xE00]
	0x037406C8 MOV X0, X20
	0x037406CC BLR X8
	0x037406D0 MOV X20, X0
	0x037406D4 CBZ X0, 0x37408F4
	0x037406D8 ADRP X23, 0x9B3000
	0x037406DC ADRP X24, 0xA05000
	0x037406E0 LDR X23, [X23 + 0xE18]
	0x037406E4 LDR X24, [X24 + 0x4B8]
	0x037406E8 LDR X8, [X20]
	0x037406EC LDR X1, [X23]
	0x037406F0 LDRH W9, [X8 + 0x12E]
	0x037406F4 CBZ X9, 0x3740718
	0x037406F8 LDR X10, [X8 + 0xB0]
	0x037406FC ADD X10, X10, 0x8
	0x03740700 LDUR X11, [X10 - 0x8]
	0x03740704 CMP X11, X1
	0x03740708 B.EQ 0x3740728
	0x0374070C SUBS X9, X9, 0x1
	0x03740710 ADD X10, X10, 0x10
	0x03740714 B.NE 0x3740700
	0x03740718 MOV X0, X20
	0x0374071C MOV W2, W31
	0x03740720 BL 0x1C5C788
	0x03740724 B 0x3740734
	0x03740728 LDRSW X9, [X10]
	0x0374072C ADD X8, X8, X9, 0x4, LSL
	0x03740730 ADD X0, X8, 0x138
	0x03740734 LDP X8, X1, [X0]
	0x03740738 MOV X0, X20
	0x0374073C BLR X8
	0x03740740 TBZ X0, 0x0, 0x37407D8
	0x03740744 LDR X8, [X20]
	0x03740748 LDR X1, [X24]
	0x0374074C LDRH W9, [X8 + 0x12E]
	0x03740750 CBZ X9, 0x3740774
	0x03740754 LDR X10, [X8 + 0xB0]
	0x03740758 ADD X10, X10, 0x8
	0x0374075C LDUR X11, [X10 - 0x8]
	0x03740760 CMP X11, X1
	0x03740764 B.EQ 0x3740784
	0x03740768 SUBS X9, X9, 0x1
	0x0374076C ADD X10, X10, 0x10
	0x03740770 B.NE 0x374075C
	0x03740774 MOV X0, X20
	0x03740778 MOV W2, W31
	0x0374077C BL 0x1C5C788
	0x03740780 B 0x3740790
	0x03740784 LDRSW X9, [X10]
	0x03740788 ADD X8, X8, X9, 0x4, LSL
	0x0374078C ADD X0, X8, 0x138
	0x03740790 LDP X9, X1, [X0]
	0x03740794 ADD X8, X31, 0x58
	0x03740798 MOV X0, X20
	0x0374079C BLR X9
	0x037407A0 ADD X0, X31, 0xB0
	0x037407A4 ADD X1, X31, 0x58
	0x037407A8 MOVZ W2, 0x58
	0x037407AC BL 0x3EB1AC0
	0x037407B0 ADD X0, X31, 0x0
	0x037407B4 ADD X1, X31, 0xB0
	0x037407B8 MOVZ W2, 0x58
	0x037407BC BL 0x3EB1AC0
	0x037407C0 ADD X1, X31, 0x0
	0x037407C4 MOV X0, X21
	0x037407C8 MOV X2, X19
	0x037407CC MOV X3, X31
	0x037407D0 BL 0x37409B0
	0x037407D4 B 0x37406E8
	0x037407D8 MOV X21, X31
	0x037407DC MOVZ W23, 0x7
	0x037407E0 CBZ X20, 0x374083C
	0x037407E4 LDR X8, [X20]
	0x037407E8 LDR X1, [X22]
	0x037407EC LDRH W9, [X8 + 0x12E]
	0x037407F0 CBZ X9, 0x3740814
	0x037407F4 LDR X10, [X8 + 0xB0]
	0x037407F8 ADD X10, X10, 0x8
	0x037407FC LDUR X11, [X10 - 0x8]
	0x03740800 CMP X11, X1
	0x03740804 B.EQ 0x3740824
	0x03740808 SUBS X9, X9, 0x1
	0x0374080C ADD X10, X10, 0x10
	0x03740810 B.NE 0x37407FC
	0x03740814 MOV X0, X20
	0x03740818 MOV W2, W31
	0x0374081C BL 0x1C5C788
	0x03740820 B 0x3740830
	0x03740824 LDRSW X9, [X10]
	0x03740828 ADD X8, X8, X9, 0x4, LSL
	0x0374082C ADD X0, X8, 0x138
	0x03740830 LDP X8, X1, [X0]
	0x03740834 MOV X0, X20
	0x03740838 BLR X8
	0x0374083C CBNZ X21, 0x37408F8
	0x03740840 CMP W23, 0x7
	0x03740844 B.EQ 0x374084C
	0x03740848 CBNZ W23, 0x3740890
	0x0374084C CBZ X19, 0x37408A8
	0x03740850 LDR W8, [X19 + 0x18]
	0x03740854 CBZ W8, 0x374087C
	0x03740858 ADRP X8, 0xA05000
	0x0374085C LDR X8, [X8 + 0x4E8]
	0x03740860 ADD X1, X31, 0x58
	0x03740864 STR X19, [X31 + 0x58]
	0x03740868 LDR X0, [X8]
	0x0374086C BL 0x1C16E04
	0x03740870 MOV X1, X31
	0x03740874 BL 0x3C86C20
	0x03740878 B 0x3740890
	0x0374087C ADRP X8, 0x9B5000
	0x03740880 LDR X8, [X8 + 0x278]
	0x03740884 LDR X8, [X8]
	0x03740888 LDR X8, [X8 + 0xB8]
	0x0374088C LDR X0, [X8]
	0x03740890 LDP X20, X19, [X31 + 0x140]
	0x03740894 LDP X22, X21, [X31 + 0x130]
	0x03740898 LDP X24, X23, [X31 + 0x120]
	0x0374089C LDP X29, X30, [X31 + 0x110]
	0x037408A0 ADD X31, X31, 0x150
	0x037408A4 RET
	0x037408A8 BL 0x1C16F20
	0x037408AC ADRP X0, 0x9B8000
	0x037408B0 LDR X0, [X0 + 0x528]
	0x037408B4 BL 0x1C16D08
	0x037408B8 BL 0x1C16F10
	0x037408BC MOV X19, X0
	0x037408C0 ADRP X0, 0xA05000
	0x037408C4 LDR X0, [X0 + 0x498]
	0x037408C8 BL 0x1C16D08
	0x037408CC MOV X1, X0
	0x037408D0 MOV X0, X19
	0x037408D4 MOV X2, X31
	0x037408D8 BL 0x330E100
	0x037408DC ADRP X0, 0xA05000
	0x037408E0 LDR X0, [X0 + 0x510]
	0x037408E4 BL 0x1C16D08
	0x037408E8 MOV X1, X0
	0x037408EC MOV X0, X19
	0x037408F0 BL 0x1C16DEC
	0x037408F4 BL 0x1C16F20
	0x037408F8 MOV X0, X21
	0x037408FC BL 0x1C16F18
	0x03740900 B 0x374090C
	0x03740904 B 0x374090C
	0x03740908 B 0x374090C
	0x0374090C CMP W1, 0x1
	0x03740910 B.NE 0x374092C
	0x03740914 BL 0x3EB1AD0
	0x03740918 LDR X21, [X0]
	0x0374091C BL 0x3EB1AE0
	0x03740920 MOV W23, W31
	0x03740924 CBNZ X20, 0x37407E4
	0x03740928 B 0x374083C
	0x0374092C MOV X19, X0
	0x03740930 MOV X21, X31
	0x03740934 B 0x374093C
	0x03740938 MOV X19, X0
	0x0374093C CBZ X20, 0x3740998
	0x03740940 LDR X8, [X20]
	0x03740944 LDR X1, [X22]
	0x03740948 LDRH W9, [X8 + 0x12E]
	0x0374094C CBZ X9, 0x3740970
	0x03740950 LDR X10, [X8 + 0xB0]
	0x03740954 ADD X10, X10, 0x8
	0x03740958 LDUR X11, [X10 - 0x8]
	0x0374095C CMP X11, X1
	0x03740960 B.EQ 0x3740980
	0x03740964 SUBS X9, X9, 0x1
	0x03740968 ADD X10, X10, 0x10
	0x0374096C B.NE 0x3740958
	0x03740970 MOV X0, X20
	0x03740974 MOV W2, W31
	0x03740978 BL 0x1C5C788
	0x0374097C B 0x374098C
	0x03740980 LDRSW X9, [X10]
	0x03740984 ADD X8, X8, X9, 0x4, LSL
	0x03740988 ADD X0, X8, 0x138
	0x0374098C LDP X8, X1, [X0]
	0x03740990 MOV X0, X20
	0x03740994 BLR X8
	0x03740998 CBNZ X21, 0x37409A4
	0x0374099C MOV X0, X19
	0x037409A0 BL 0x1D2C690
	0x037409A4 MOV X0, X21
	0x037409A8 BL 0x1C16F18
	0x037409AC BL 0x1990590
	0x037409B0 SUB X31, X31, 0x150
	0x037409B4 STR X29, [X31 + 0x110]
	0x037409B8 STP X30, X23, [X31 + 0x120]
	0x037409BC STP X22, X21, [X31 + 0x130]
	0x037409C0 STP X20, X19, [X31 + 0x140]
	0x037409C4 ADRP X23, 0xCA0000
	0x037409C8 LDRB W8, [X23 + 0xD43]
	0x037409CC MOV X22, X3
	0x037409D0 MOV X19, X2
	0x037409D4 MOV X20, X1
	0x037409D8 MOV X21, X0
	0x037409DC TBNZ X8, 0x0, 0x3740A18
	0x037409E0 ADRP X0, 0xA05000
	0x037409E4 LDR X0, [X0 + 0x4F0]
	0x037409E8 BL 0x1C16CF4
	0x037409EC ADRP X0, 0xA05000
	0x037409F0 LDR X0, [X0 + 0x518]
	0x037409F4 BL 0x1C16CF4
	0x037409F8 ADRP X0, 0x9B4000
	0x037409FC LDR X0, [X0 + 0xEC8]
	0x03740A00 BL 0x1C16CF4
	0x03740A04 ADRP X0, 0x9B3000
	0x03740A08 LDR X0, [X0 + 0x988]
	0x03740A0C BL 0x1C16CF4
	0x03740A10 MOVZ W8, 0x1
	0x03740A14 STRB W8, [X23 + 0xD43]
	0x03740A18 MOVI V0.2D, 0x0
	0x03740A1C MOV X0, X20
	0x03740A20 MOV X1, X31
	0x03740A24 STR X31, [X31 + 0xA0]
	0x03740A28 STP V0, V0, [X31 + 0x80]
	0x03740A2C BL 0x37523B4
	0x03740A30 TBZ X0, 0x0, 0x3740BB8
	0x03740A34 CBNZ X22, 0x3740AB4
	0x03740A38 CBZ X21, 0x3740BD0
	0x03740A3C ADRP X10, 0xA05000
	0x03740A40 LDR X8, [X21]
	0x03740A44 LDR X22, [X20 + 0x30]
	0x03740A48 LDR X10, [X10 + 0x4F0]
	0x03740A4C LDRH W9, [X8 + 0x12E]
	0x03740A50 LDR X1, [X10]
	0x03740A54 CBZ X9, 0x3740A78
	0x03740A58 LDR X10, [X8 + 0xB0]
	0x03740A5C ADD X10, X10, 0x8
	0x03740A60 LDUR X11, [X10 - 0x8]
	0x03740A64 CMP X11, X1
	0x03740A68 B.EQ 0x3740A88
	0x03740A6C SUBS X9, X9, 0x1
	0x03740A70 ADD X10, X10, 0x10
	0x03740A74 B.NE 0x3740A60
	0x03740A78 MOVZ W2, 0x1
	0x03740A7C MOV X0, X21
	0x03740A80 BL 0x1C5C788
	0x03740A84 B 0x3740A98
	0x03740A88 LDR W9, [X10]
	0x03740A8C ADD W9, W9, 0x1
	0x03740A90 ADD X8, X8, W9, 0x4, SXTW
	0x03740A94 ADD X0, X8, 0x138
	0x03740A98 LDP X8, X3, [X0]
	0x03740A9C MOV X0, X21
	0x03740AA0 MOV X1, X22
	0x03740AA4 MOV W2, W31
	0x03740AA8 BLR X8
	0x03740AAC MOV X22, X0

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X19, 0xCA1000
	014 Move W8, [X19+3388]
	015 Move X20, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {37}
	020 Move X0, 0xA05000
	021 Move X0, [X0+4048]
	022 Call 0x1C17CF4
	023 Move X0, 0x9B4000
	024 Move X0, [X0+3584]
	025 Call 0x1C17CF4
	026 Move X0, 0xA06000
	027 Move X0, [X0+1160]
	028 Call 0x1C17CF4
	029 Move X0, 0xA06000
	030 Move X0, [X0+1168]
	031 Call 0x1C17CF4
	032 Move X0, 0x9B4000
	033 Move X0, [X0+3608]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X19+3388], W8
	037 Compare X20, 0
	038 JumpIfEqual {238}
	039 Move X19, 0xA06000
	040 Move X19, [X19+1160]
	041 Call InputActionRebindingExtensions.DeferBindingResolution
	042 Move X8, [X20]
	043 Move X1, [X19]
	044 Move X19, X0
	045 NotImplemented "Instruction LDRH not yet implemented."
	046 Compare X9, 0
	047 JumpIfEqual {54}
	048 Move X10, [X8+176]
	049 Add X10, X10, 8
	050 NotImplemented "Instruction LDUR not yet implemented."
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Subtract X9, X9, 1
	053 Add X10, X10, 16
	054 Move X0, X20
	055 Move W2, W31
	056 Call 0x1C5D788
	057 NotImplemented "Instruction LDRSW not yet implemented."
	058 Add X8, X8, X9
	059 Add X0, X8, 312
	060 Move X8, [X0]
	061 Move X1, [X0+8]
	062 Move X0, X20
	063 NotImplemented "Instruction BLR not yet implemented."
	064 Move X20, X0
	065 Compare X0, 0
	066 JumpIfEqual {258}
	067 Move X26, 0x9B4000
	068 Move X27, 0xA06000
	069 Move X28, 0xA05000
	070 Move X26, [X26+3608]
	071 Move X27, [X27+1168]
	072 Move X28, [X28+4048]
	073 Move X8, [X20]
	074 Move X1, [X26]
	075 NotImplemented "Instruction LDRH not yet implemented."
	076 Compare X9, 0
	077 JumpIfEqual {84}
	078 Move X10, [X8+176]
	079 Add X10, X10, 8
	080 NotImplemented "Instruction LDUR not yet implemented."
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Subtract X9, X9, 1
	083 Add X10, X10, 16
	084 Move X0, X20
	085 Move W2, W31
	086 Call 0x1C5D788
	087 NotImplemented "Instruction LDRSW not yet implemented."
	088 Add X8, X8, X9
	089 Add X0, X8, 312
	090 Move X8, [X0]
	091 Move X1, [X0+8]
	092 Move X0, X20
	093 NotImplemented "Instruction BLR not yet implemented."
	094 Move TEMP, X0
	095 And TEMP, TEMP, 1
	096 Compare TEMP, 1
	097 JumpIfNotEqual {165}
	098 Move X8, [X20]
	099 Move X1, [X27]
	100 NotImplemented "Instruction LDRH not yet implemented."
	101 Compare X9, 0
	102 JumpIfEqual {109}
	103 Move X10, [X8+176]
	104 Add X10, X10, 8
	105 NotImplemented "Instruction LDUR not yet implemented."
	106 NotImplemented "Instruction CMP not yet implemented."
	107 Subtract X9, X9, 1
	108 Add X10, X10, 16
	109 Move X0, X20
	110 Move W2, W31
	111 Call 0x1C5D788
	112 NotImplemented "Instruction LDRSW not yet implemented."
	113 Add X8, X8, X9
	114 Add X0, X8, 312
	115 Move X8, [X0]
	116 Move X1, [X0+8]
	117 Move X0, X20
	118 NotImplemented "Instruction BLR not yet implemented."
	119 Move X21, X0
	120 Compare X0, 0
	121 JumpIfEqual {235}
	122 Move X22, [X21+200]
	123 Compare X22, 0
	124 JumpIfNotEqual {130}
	125 Move X0, X21
	126 Call InputAction.CreateInternalActionMapForSingletonAction, X0
	127 Move X22, [X21+200]
	128 Compare X22, 0
	129 JumpIfEqual {237}
	130 Move X23, [X22+48]
	131 Move X1, [X28]
	132 Move X0, X23
	133 Call 0x217C240, X0
	134 NotImplemented "Instruction CMP not yet implemented."
	135 Compare X23, 0
	136 JumpIfEqual {236}
	137 Move X29, X31
	138 Move W25, W0
	139 Add X24, X23, 32
	140 Move W8, [X23+24]
	141 NotImplemented "Instruction CMP not yet implemented."
	142 Move X0, X24
	143 Move X1, X21
	144 Move X2, X31
	145 Call InputBinding.TriggersAction, X0, X1
	146 Move TEMP, X0
	147 And TEMP, TEMP, 1
	148 Compare TEMP, 1
	149 JumpIfNotEqual {153}
	150 Move X0, X24
	151 Move X1, X31
	152 Call InputBinding.RemoveOverrides, X0
	153 Add X29, X29, 1
	154 NotImplemented "Instruction CMP not yet implemented."
	155 Add X24, X24, 88
	156 Move W8, [X22+200]
	157 Move [X22+56], X31
	158 Move [X22+64], X31
	159 Move [X22+312], X31
	160 And W8, W8, 0xFFFFFFF3
	161 Move [X22+200], W8
	162 Move W1, 1
	163 Move X0, X22
	164 Call InputActionMap.LazyResolveBindings, X0, X1
	165 Move X23, X31
	166 Compare X20, 0
	167 JumpIfEqual {191}
	168 Move X8, [X20]
	169 Move X10, 0x9B4000
	170 NotImplemented "Instruction LDRH not yet implemented."
	171 Move X10, [X10+3584]
	172 Move X1, [X10]
	173 Compare X9, 0
	174 JumpIfEqual {181}
	175 Move X10, [X8+176]
	176 Add X10, X10, 8
	177 NotImplemented "Instruction LDUR not yet implemented."
	178 NotImplemented "Instruction CMP not yet implemented."
	179 Subtract X9, X9, 1
	180 Add X10, X10, 16
	181 Move X0, X20
	182 Move W2, W31
	183 Call 0x1C5D788
	184 NotImplemented "Instruction LDRSW not yet implemented."
	185 Add X8, X8, X9
	186 Add X0, X8, 312
	187 Move X8, [X0]
	188 Move X1, [X0+8]
	189 Move X0, X20
	190 NotImplemented "Instruction BLR not yet implemented."
	191 Compare X23, 0
	192 JumpIfNotEqual {259}
	193 Move X20, X31
	194 Compare X19, 0
	195 JumpIfEqual {219}
	196 Move X8, [X19]
	197 Move X10, 0x9B4000
	198 NotImplemented "Instruction LDRH not yet implemented."
	199 Move X10, [X10+3584]
	200 Move X1, [X10]
	201 Compare X9, 0
	202 JumpIfEqual {209}
	203 Move X10, [X8+176]
	204 Add X10, X10, 8
	205 NotImplemented "Instruction LDUR not yet implemented."
	206 NotImplemented "Instruction CMP not yet implemented."
	207 Subtract X9, X9, 1
	208 Add X10, X10, 16
	209 Move X0, X19
	210 Move W2, W31
	211 Call 0x1C5D788
	212 NotImplemented "Instruction LDRSW not yet implemented."
	213 Add X8, X8, X9
	214 Add X0, X8, 312
	215 Move X8, [X0]
	216 Move X1, [X0+8]
	217 Move X0, X19
	218 NotImplemented "Instruction BLR not yet implemented."
	219 Compare X20, 0
	220 JumpIfNotEqual {256}
	221 Move X20, [X31+80]
	222 Move X19, [X31+88]
	223 Move X22, [X31+64]
	224 Move X21, [X31+72]
	225 Move X24, [X31+48]
	226 Move X23, [X31+56]
	227 Move X26, [X31+32]
	228 Move X25, [X31+40]
	229 Move X28, [X31+16]
	230 Move X27, [X31+24]
	231 Move X29, [X31+96]
	232 Move X30, [X31+104]
	233 Return 
	234 Call 0x1C17F28
	235 Call 0x1C17F20
	236 Call 0x1C17F20
	237 Call 0x1C17F20
	238 Move X0, 0x9B9000
	239 Move X0, [X0+1320]
	240 Call 0x1C17D08
	241 Call 0x1C17F10
	242 Move X19, X0
	243 Move X0, 0xA06000
	244 Move X0, [X0+1176]
	245 Call 0x1C17D08
	246 Move X1, X0
	247 Move X0, X19
	248 Move X2, X31
	249 Call ArgumentNullException..ctor, X0, X1
	250 Move X0, 0xA06000
	251 Move X0, [X0+1184]
	252 Call 0x1C17D08
	253 Move X1, X0
	254 Move X0, X19
	255 Call 0x1C17DEC
	256 Move X0, X20
	257 Call 0x1C17F18
	258 Call 0x1C17F20
	259 Move X0, X23
	260 Call 0x1C17F18
	261 Move X22, X1
	262 Move X21, X0
	263 Move X22, X1
	264 Move X21, X0
	265 NotImplemented "Instruction CMP not yet implemented."
	266 Move X0, X21
	267 Call 0x3EB2AD0
	268 Move X23, [X0]
	269 Call 0x3EB2AE0
	270 Move X23, X31
	271 Compare X20, 0
	272 JumpIfEqual {296}
	273 Move X8, [X20]
	274 Move X10, 0x9B4000
	275 NotImplemented "Instruction LDRH not yet implemented."
	276 Move X10, [X10+3584]
	277 Move X1, [X10]
	278 Compare X9, 0
	279 JumpIfEqual {286}
	280 Move X10, [X8+176]
	281 Add X10, X10, 8
	282 NotImplemented "Instruction LDUR not yet implemented."
	283 NotImplemented "Instruction CMP not yet implemented."
	284 Subtract X9, X9, 1
	285 Add X10, X10, 16
	286 Move X0, X20
	287 Move W2, W31
	288 Call 0x1C5D788
	289 NotImplemented "Instruction LDRSW not yet implemented."
	290 Add X8, X8, X9
	291 Add X0, X8, 312
	292 Move X8, [X0]
	293 Move X1, [X0+8]
	294 Move X0, X20
	295 NotImplemented "Instruction BLR not yet implemented."
	296 Compare X23, 0
	297 JumpIfNotEqual {304}
	298 NotImplemented "Instruction CMP not yet implemented."
	299 Move X0, X21
	300 Call 0x3EB2AD0
	301 Move X20, [X0]
	302 Call 0x3EB2AE0
	303 Move X20, X31
	304 Move X0, X23
	305 Call 0x1C17F18
	306 Move X22, X1
	307 Move X21, X0
	308 Compare X20, 0
	309 JumpIfNotEqual {273}
	310 Move X21, X0
	311 Compare X19, 0
	312 JumpIfEqual {336}
	313 Move X8, [X19]
	314 Move X10, 0x9B4000
	315 NotImplemented "Instruction LDRH not yet implemented."
	316 Move X10, [X10+3584]
	317 Move X1, [X10]
	318 Compare X9, 0
	319 JumpIfEqual {326}
	320 Move X10, [X8+176]
	321 Add X10, X10, 8
	322 NotImplemented "Instruction LDUR not yet implemented."
	323 NotImplemented "Instruction CMP not yet implemented."
	324 Subtract X9, X9, 1
	325 Add X10, X10, 16
	326 Move X0, X19
	327 Move W2, W31
	328 Call 0x1C5D788
	329 NotImplemented "Instruction LDRSW not yet implemented."
	330 Add X8, X8, X9
	331 Add X0, X8, 312
	332 Move X8, [X0]
	333 Move X1, [X0+8]
	334 Move X0, X19
	335 NotImplemented "Instruction BLR not yet implemented."
	336 Compare X20, 0
	337 JumpIfNotEqual {340}
	338 Move X0, X21
	339 Call 0x1D2D690
	340 Move X0, X20
	341 Call 0x1C17F18
	342 Call 0x1991590

Method: System.Void RemoveAllBindingOverrides(UnityEngine.InputSystem.InputAction action)

Disassembly:
	0x03740AB0 CBZ X0, 0x3740AEC
	0x03740AB4 LDR X8, [X22 + 0xC8]
	0x03740AB8 CBZ X8, 0x3740AEC
	0x03740ABC LDR X9, [X8 + 0x50]
	0x03740AC0 CMP X9, X22
	0x03740AC4 B.EQ 0x3740AEC
	0x03740AC8 LDR X0, [X8 + 0x10]
	0x03740ACC ADRP X8, 0x9B4000
	0x03740AD0 LDR X2, [X22 + 0x10]
	0x03740AD4 LDR X8, [X8 + 0xEC8]
	0x03740AD8 MOV X3, X31
	0x03740ADC LDR X1, [X8]
	0x03740AE0 BL 0x32274B8
	0x03740AE4 MOV X21, X0
	0x03740AE8 B 0x3740AF8
	0x03740AEC ADRP X8, 0x9B3000
	0x03740AF0 LDR X8, [X8 + 0x988]
	0x03740AF4 LDR X21, [X8]
	0x03740AF8 ADD X0, X31, 0x28
	0x03740AFC MOVZ W2, 0x58
	0x03740B00 MOV X1, X20
	0x03740B04 BL 0x3EB1AC0
	0x03740B08 ADD X8, X31, 0x80
	0x03740B0C ADD X0, X31, 0x28
	0x03740B10 MOV X1, X21
	0x03740B14 BL 0x373C4A8
	0x03740B18 LDP V0, V1, [X31 + 0x80]
	0x03740B1C LDR X8, [X31 + 0xA0]
	0x03740B20 STP V0, V1, [X31]
	0x03740B24 STR X8, [X31 + 0x20]
	0x03740B28 CBZ X19, 0x3740BD0
	0x03740B2C LDP V0, V1, [X31]
	0x03740B30 LDR X8, [X31 + 0x20]
	0x03740B34 ADRP X9, 0xA05000
	0x03740B38 LDR X9, [X9 + 0x518]
	0x03740B3C STP V0, V1, [X31 + 0xB0]
	0x03740B40 STR X8, [X31 + 0xD0]
	0x03740B44 LDR W11, [X19 + 0x1C]
	0x03740B48 LDR X8, [X19 + 0x10]
	0x03740B4C LDR X10, [X9]
	0x03740B50 ADD W9, W11, 0x1
	0x03740B54 STR W9, [X19 + 0x1C]
	0x03740B58 CBZ X8, 0x3740BD0
	0x03740B5C LDRSW X9, [X19 + 0x18]
	0x03740B60 LDR W11, [X8 + 0x18]
	0x03740B64 CMP W9, W11
	0x03740B68 B.CS 0x3740B90
	0x03740B6C ADD W10, W9, 0x1
	0x03740B70 STR W10, [X19 + 0x18]
	0x03740B74 LDR X10, [X31 + 0xD0]
	0x03740B78 LDP V0, V1, [X31 + 0xB0]
	0x03740B7C MOVZ W11, 0x28
	0x03740B80 MADD X8, X9, X11, X8
	0x03740B84 STR X10, [X8 + 0x40]
	0x03740B88 STP V0, V1, [X8 + 0x20]
	0x03740B8C B 0x3740BB8
	0x03740B90 LDR X8, [X10 + 0x20]
	0x03740B94 LDP V0, V1, [X31 + 0xB0]
	0x03740B98 LDR X9, [X31 + 0xD0]
	0x03740B9C ADD X1, X31, 0xE0
	0x03740BA0 LDR X8, [X8 + 0xC0]
	0x03740BA4 MOV X0, X19
	0x03740BA8 LDR X2, [X8 + 0x70]
	0x03740BAC STP V0, V1, [X31 + 0xE0]
	0x03740BB0 STR X9, [X31 + 0x100]
	0x03740BB4 BL 0x3104B50
	0x03740BB8 LDP X20, X19, [X31 + 0x140]
	0x03740BBC LDP X22, X21, [X31 + 0x130]
	0x03740BC0 LDP X30, X23, [X31 + 0x120]
	0x03740BC4 LDR X29, [X31 + 0x110]
	0x03740BC8 ADD X31, X31, 0x150
	0x03740BCC RET
	0x03740BD0 BL 0x1C16F20
	0x03740BD4 STR X29, [X31 - 0x60]!
	0x03740BD8 STP X30, X27, [X31 + 0x10]
	0x03740BDC STP X26, X25, [X31 + 0x20]
	0x03740BE0 STP X24, X23, [X31 + 0x30]
	0x03740BE4 STP X22, X21, [X31 + 0x40]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Compare X0, 0
	009 JumpIfEqual {74}
	010 Move X19, [X0+200]
	011 Move X20, [X0+16]
	012 Move X21, X0
	013 Compare X19, 0
	014 JumpIfNotEqual {20}
	015 Move X0, X21
	016 Call InputAction.CreateInternalActionMapForSingletonAction, X0
	017 Move X19, [X21+200]
	018 Compare X19, 0
	019 JumpIfEqual {92}
	020 Move X21, [X19+48]
	021 Compare X21, 0
	022 JumpIfEqual {66}
	023 Move X8, [X21+24]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 And X8, X8, 0
	026 Compare X8, 0
	027 JumpIfEqual {48}
	028 Move X22, X31
	029 Subtract X23, X8, 1
	030 Add X24, X21, 96
	031 NotImplemented "Instruction LDUR not yet implemented."
	032 Move W2, 3
	033 Move X1, X20
	034 Move X3, X31
	035 Call String.Compare, X0, X1, X2
	036 Compare W0, 0
	037 JumpIfNotEqual {43}
	038 Move W8, [X21+24]
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move [X24], X31
	041 Move [X24+8], X31
	042 Move [X24+16], X31
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move W8, [X21+24]
	045 Add X22, X22, 1
	046 Add X24, X24, 88
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Call 0x1C17F28
	049 Move W8, [X19+200]
	050 Move [X19+56], X31
	051 Move [X19+64], X31
	052 Move [X19+312], X31
	053 Move X0, X19
	054 And W8, W8, 0xFFFFFFF3
	055 Move [X19+200], W8
	056 Move X20, [X31+48]
	057 Move X19, [X31+56]
	058 Move X22, [X31+32]
	059 Move X21, [X31+40]
	060 Move X24, [X31+16]
	061 Move X23, [X31+24]
	062 Move W1, 1
	063 Move X30, [X31+64]
	064 Call InputActionMap.LazyResolveBindings, X0, X1
	065 Return 
	066 Move X20, [X31+48]
	067 Move X19, [X31+56]
	068 Move X22, [X31+32]
	069 Move X21, [X31+40]
	070 Move X24, [X31+16]
	071 Move X23, [X31+24]
	072 Move X30, [X31+64]
	073 Return 
	074 Move X0, 0x9B9000
	075 Move X0, [X0+1320]
	076 Call 0x1C17D08
	077 Call 0x1C17F10
	078 Move X19, X0
	079 Move X0, 0x9DC000
	080 Move X0, [X0+3064]
	081 Call 0x1C17D08
	082 Move X1, X0
	083 Move X0, X19
	084 Move X2, X31
	085 Call ArgumentNullException..ctor, X0, X1
	086 Move X0, 0xA06000
	087 Move X0, [X0+1192]
	088 Call 0x1C17D08
	089 Move X1, X0
	090 Move X0, X19
	091 Call 0x1C17DEC
	092 Call 0x1C17F20

Method: System.Void ApplyBindingOverrides(UnityEngine.InputSystem.InputActionMap actionMap, System.Collections.Generic.IEnumerable`1<UnityEngine.InputSystem.InputBinding> overrides)

Disassembly:
	0x03740BE8 STP X20, X19, [X31 + 0x50]
	0x03740BEC SUB X31, X31, 0x1A0
	0x03740BF0 ADRP X20, 0xCA0000
	0x03740BF4 LDRB W8, [X20 + 0xD42]
	0x03740BF8 MOV X19, X0
	0x03740BFC TBNZ X8, 0x0, 0x3740C74
	0x03740C00 ADRP X0, 0xA05000
	0x03740C04 LDR X0, [X0 + 0x4E8]
	0x03740C08 BL 0x1C16CF4
	0x03740C0C ADRP X0, 0xA05000
	0x03740C10 LDR X0, [X0 + 0x520]
	0x03740C14 BL 0x1C16CF4
	0x03740C18 ADRP X0, 0xA05000
	0x03740C1C LDR X0, [X0 + 0x528]
	0x03740C20 BL 0x1C16CF4
	0x03740C24 ADRP X0, 0xA05000
	0x03740C28 LDR X0, [X0 + 0x530]
	0x03740C2C BL 0x1C16CF4
	0x03740C30 ADRP X0, 0xA05000
	0x03740C34 LDR X0, [X0 + 0x4F8]
	0x03740C38 BL 0x1C16CF4
	0x03740C3C ADRP X0, 0xA05000
	0x03740C40 LDR X0, [X0 + 0x500]
	0x03740C44 BL 0x1C16CF4
	0x03740C48 ADRP X0, 0xA05000
	0x03740C4C LDR X0, [X0 + 0x508]
	0x03740C50 BL 0x1C16CF4
	0x03740C54 ADRP X0, 0xA05000
	0x03740C58 LDR X0, [X0 + 0x538]
	0x03740C5C BL 0x1C16CF4
	0x03740C60 ADRP X0, 0x9B5000
	0x03740C64 LDR X0, [X0 + 0x278]
	0x03740C68 BL 0x1C16CF4
	0x03740C6C MOVZ W8, 0x1
	0x03740C70 STRB W8, [X20 + 0xD42]
	0x03740C74 MOVI V0.2D, 0x0
	0x03740C78 STP X31, X31, [X31 + 0x180]
	0x03740C7C STR X31, [X31 + 0x190]
	0x03740C80 STR X31, [X31 + 0x160]
	0x03740C84 STR X31, [X31 + 0x100]
	0x03740C88 STP V0, V0, [X31 + 0x140]
	0x03740C8C STP V0, V0, [X31 + 0x120]
	0x03740C90 STR V0, [X31 + 0x11]
	0x03740C94 STP V0, V0, [X31 + 0xE0]
	0x03740C98 STP V0, V0, [X31 + 0xC0]
	0x03740C9C STR V0, [X31 + 0xB]
	0x03740CA0 CBZ X19, 0x3740E38
	0x03740CA4 ADRP X23, 0xA05000
	0x03740CA8 ADRP X20, 0xA05000
	0x03740CAC ADRP X22, 0xA05000
	0x03740CB0 LDR X21, [X19 + 0xC8]
	0x03740CB4 LDR X23, [X23 + 0x508]
	0x03740CB8 LDR X20, [X20 + 0x4F8]
	0x03740CBC LDR X22, [X22 + 0x538]
	0x03740CC0 CBZ X21, 0x3740CD4
	0x03740CC4 LDR X8, [X21 + 0x50]
	0x03740CC8 CMP X8, X19
	0x03740CCC CSET W25, EQ
	0x03740CD0 B 0x3740CE4
	0x03740CD4 MOV X0, X19
	0x03740CD8 BL 0x373572C
	0x03740CDC LDR X21, [X19 + 0xC8]
	0x03740CE0 MOVZ W25, 0x1
	0x03740CE4 ADRP X26, 0xA05000
	0x03740CE8 LDR X26, [X26 + 0x528]
	0x03740CEC LDR X0, [X23]
	0x03740CF0 ADRP X27, 0xA05000
	0x03740CF4 ADRP X23, 0xA05000
	0x03740CF8 ADRP X24, 0xA05000
	0x03740CFC LDR X27, [X27 + 0x530]
	0x03740D00 LDR X23, [X23 + 0x4E8]
	0x03740D04 LDR X24, [X24 + 0x520]
	0x03740D08 BL 0x1C16F10
	0x03740D0C LDR X1, [X20]
	0x03740D10 MOV X20, X0
	0x03740D14 BL 0x31042A8
	0x03740D18 MOV X0, X19
	0x03740D1C BL 0x37345CC
	0x03740D20 LDR X9, [X22]
	0x03740D24 STP X0, X1, [X31 + 0x170]
	0x03740D28 ADD X8, X31, 0x58
	0x03740D2C ADD X0, X31, 0x170
	0x03740D30 MOV X1, X9
	0x03740D34 BL 0x24FC188
	0x03740D38 LDUR V0, [X31 + 0x58]
	0x03740D3C LDR X8, [X31 + 0x68]
	0x03740D40 STR V0, [X31 + 0x18]
	0x03740D44 STR X8, [X31 + 0x190]
	0x03740D48 LDR X1, [X26]
	0x03740D4C ADD X0, X31, 0x180
	0x03740D50 BL 0x2BBCA5C
	0x03740D54 TBZ X0, 0x0, 0x3740DD0
	0x03740D58 LDR X1, [X27]
	0x03740D5C ADD X8, X31, 0x58
	0x03740D60 ADD X0, X31, 0x180
	0x03740D64 BL 0x2BBCA88
	0x03740D68 ADD X0, X31, 0x110
	0x03740D6C ADD X1, X31, 0x58
	0x03740D70 MOVZ W2, 0x58
	0x03740D74 BL 0x3EB1AC0
	0x03740D78 MOV X22, X19
	0x03740D7C TBNZ X25, 0x0, 0x3740D98
	0x03740D80 ADD X0, X31, 0x110
	0x03740D84 MOV X1, X19
	0x03740D88 MOV X2, X31
	0x03740D8C BL 0x3747D00
	0x03740D90 TBZ X0, 0x0, 0x3740D48
	0x03740D94 MOV X22, X31
	0x03740D98 ADD X0, X31, 0xB0
	0x03740D9C ADD X1, X31, 0x110
	0x03740DA0 MOVZ W2, 0x58
	0x03740DA4 BL 0x3EB1AC0
	0x03740DA8 ADD X0, X31, 0x0
	0x03740DAC ADD X1, X31, 0xB0
	0x03740DB0 MOVZ W2, 0x58
	0x03740DB4 BL 0x3EB1AC0
	0x03740DB8 ADD X1, X31, 0x0
	0x03740DBC MOV X0, X21
	0x03740DC0 MOV X2, X20
	0x03740DC4 MOV X3, X22
	0x03740DC8 BL 0x37409B0
	0x03740DCC B 0x3740D48
	0x03740DD0 LDR X1, [X24]
	0x03740DD4 ADD X0, X31, 0x180
	0x03740DD8 BL 0x2BBCA58
	0x03740DDC CBZ X20, 0x3740E80
	0x03740DE0 LDR W8, [X20 + 0x18]
	0x03740DE4 CBZ W8, 0x3740E04
	0x03740DE8 LDR X0, [X23]
	0x03740DEC ADD X1, X31, 0x58
	0x03740DF0 STR X20, [X31 + 0x58]
	0x03740DF4 BL 0x1C16E04
	0x03740DF8 MOV X1, X31
	0x03740DFC BL 0x3C86C20
	0x03740E00 B 0x3740E18
	0x03740E04 ADRP X8, 0x9B5000
	0x03740E08 LDR X8, [X8 + 0x278]
	0x03740E0C LDR X8, [X8]
	0x03740E10 LDR X8, [X8 + 0xB8]
	0x03740E14 LDR X0, [X8]
	0x03740E18 ADD X31, X31, 0x1A0
	0x03740E1C LDP X20, X19, [X31 + 0x50]
	0x03740E20 LDP X22, X21, [X31 + 0x40]
	0x03740E24 LDP X24, X23, [X31 + 0x30]
	0x03740E28 LDP X26, X25, [X31 + 0x20]
	0x03740E2C LDP X30, X27, [X31 + 0x10]
	0x03740E30 LDR X29, [X31], #0x60
	0x03740E34 RET
	0x03740E38 ADRP X0, 0x9B8000
	0x03740E3C LDR X0, [X0 + 0x528]
	0x03740E40 BL 0x1C16D08
	0x03740E44 BL 0x1C16F10
	0x03740E48 MOV X19, X0
	0x03740E4C ADRP X0, 0x9DB000
	0x03740E50 LDR X0, [X0 + 0xBF8]
	0x03740E54 BL 0x1C16D08
	0x03740E58 MOV X1, X0
	0x03740E5C MOV X0, X19
	0x03740E60 MOV X2, X31
	0x03740E64 BL 0x330E100
	0x03740E68 ADRP X0, 0xA05000
	0x03740E6C LDR X0, [X0 + 0x540]
	0x03740E70 BL 0x1C16D08
	0x03740E74 MOV X1, X0
	0x03740E78 MOV X0, X19
	0x03740E7C BL 0x1C16DEC
	0x03740E80 BL 0x1C16F20
	0x03740E84 B 0x3740E90
	0x03740E88 B 0x3740E90
	0x03740E8C B 0x3740E90
	0x03740E90 MOV X19, X0
	0x03740E94 CMP W1, 0x1
	0x03740E98 B.NE 0x3740EC4
	0x03740E9C MOV X0, X19
	0x03740EA0 BL 0x3EB1AD0
	0x03740EA4 LDR X21, [X0]
	0x03740EA8 BL 0x3EB1AE0
	0x03740EAC LDR X1, [X24]
	0x03740EB0 ADD X0, X31, 0x180
	0x03740EB4 BL 0x2BBCA58
	0x03740EB8 CBZ X21, 0x3740DDC
	0x03740EBC MOV X0, X21
	0x03740EC0 BL 0x1C16F18
	0x03740EC4 MOV X21, X31
	0x03740EC8 B 0x3740ED0
	0x03740ECC MOV X19, X0
	0x03740ED0 LDR X1, [X24]
	0x03740ED4 ADD X0, X31, 0x180
	0x03740ED8 BL 0x2BBCA58
	0x03740EDC CBNZ X21, 0x3740EE8
	0x03740EE0 MOV X0, X19
	0x03740EE4 BL 0x1D2C690
	0x03740EE8 MOV X0, X21
	0x03740EEC BL 0x1C16F18
	0x03740EF0 BL 0x1990590
	0x03740EF4 STP X30, X23, [X31 - 0x30]!
	0x03740EF8 STP X22, X21, [X31 + 0x10]
	0x03740EFC STP X20, X19, [X31 + 0x20]
	0x03740F00 ADRP X19, 0xCA0000
	0x03740F04 LDRB W8, [X19 + 0xD44]
	0x03740F08 MOV W22, W2
	0x03740F0C MOV X20, X1
	0x03740F10 MOV X21, X0
	0x03740F14 TBNZ X8, 0x0, 0x3740F2C
	0x03740F18 ADRP X0, 0x9B3000
	0x03740F1C LDR X0, [X0 + 0xE00]
	0x03740F20 BL 0x1C16CF4
	0x03740F24 MOVZ W8, 0x1
	0x03740F28 STRB W8, [X19 + 0xD44]
	0x03740F2C CBZ X21, 0x3740FCC
	0x03740F30 ADRP X23, 0x9B3000
	0x03740F34 LDR X23, [X23 + 0xE00]
	0x03740F38 BL 0x373BF80
	0x03740F3C MOV X19, X0
	0x03740F40 TBZ X22, 0x0, 0x3740F4C
	0x03740F44 MOV X0, X21
	0x03740F48 BL 0x373F578
	0x03740F4C MOV X0, X21

ISIL:
	001 Subtract X31, X31, 336
	002 Move [X31+272], X29
	003 Move [X31+288], X30
	004 Move [X31+296], X23
	005 Move [X31+304], X22
	006 Move [X31+312], X21
	007 Move [X31+320], X20
	008 Move [X31+328], X19
	009 Move X21, 0xCA1000
	010 Move W8, [X21+3389]
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {31}
	017 Move X0, 0x9B4000
	018 Move X0, [X0+3584]
	019 Call 0x1C17CF4
	020 Move X0, 0xA06000
	021 Move X0, [X0+1200]
	022 Call 0x1C17CF4
	023 Move X0, 0xA06000
	024 Move X0, [X0+1208]
	025 Call 0x1C17CF4
	026 Move X0, 0x9B4000
	027 Move X0, [X0+3608]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X21+3389], W8
	031 Compare X20, 0
	032 JumpIfEqual {160}
	033 Compare X19, 0
	034 JumpIfEqual {167}
	035 Move X10, 0xA06000
	036 Move X8, [X19]
	037 Move X10, [X10+1200]
	038 NotImplemented "Instruction LDRH not yet implemented."
	039 Move X1, [X10]
	040 Compare X9, 0
	041 JumpIfEqual {48}
	042 Move X10, [X8+176]
	043 Add X10, X10, 8
	044 NotImplemented "Instruction LDUR not yet implemented."
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Subtract X9, X9, 1
	047 Add X10, X10, 16
	048 Move X0, X19
	049 Move W2, W31
	050 Call 0x1C5D788
	051 NotImplemented "Instruction LDRSW not yet implemented."
	052 Add X8, X8, X9
	053 Add X0, X8, 312
	054 Move X8, [X0]
	055 Move X1, [X0+8]
	056 Move X21, 0x9B4000
	057 Move X21, [X21+3584]
	058 Move X0, X19
	059 NotImplemented "Instruction BLR not yet implemented."
	060 Move X19, X0
	061 Compare X0, 0
	062 JumpIfEqual {185}
	063 Move X22, 0x9B4000
	064 Move X23, 0xA06000
	065 Move X22, [X22+3608]
	066 Move X23, [X23+1208]
	067 Move X8, [X19]
	068 Move X1, [X22]
	069 NotImplemented "Instruction LDRH not yet implemented."
	070 Compare X9, 0
	071 JumpIfEqual {78}
	072 Move X10, [X8+176]
	073 Add X10, X10, 8
	074 NotImplemented "Instruction LDUR not yet implemented."
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Subtract X9, X9, 1
	077 Add X10, X10, 16
	078 Move X0, X19
	079 Move W2, W31
	080 Call 0x1C5D788
	081 NotImplemented "Instruction LDRSW not yet implemented."
	082 Add X8, X8, X9
	083 Add X0, X8, 312
	084 Move X8, [X0]
	085 Move X1, [X0+8]
	086 Move X0, X19
	087 NotImplemented "Instruction BLR not yet implemented."
	088 Move TEMP, X0
	089 And TEMP, TEMP, 1
	090 Compare TEMP, 1
	091 JumpIfNotEqual {125}
	092 Move X8, [X19]
	093 Move X1, [X23]
	094 NotImplemented "Instruction LDRH not yet implemented."
	095 Compare X9, 0
	096 JumpIfEqual {103}
	097 Move X10, [X8+176]
	098 Add X10, X10, 8
	099 NotImplemented "Instruction LDUR not yet implemented."
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Subtract X9, X9, 1
	102 Add X10, X10, 16
	103 Move X0, X19
	104 Move W2, W31
	105 Call 0x1C5D788
	106 NotImplemented "Instruction LDRSW not yet implemented."
	107 Add X8, X8, X9
	108 Add X0, X8, 312
	109 Move X9, [X0]
	110 Move X1, [X0+8]
	111 Add X8, X31, 96
	112 Move X0, X19
	113 NotImplemented "Instruction BLR not yet implemented."
	114 Add X0, X31, 184
	115 Add X1, X31, 96
	116 Move W2, 88
	117 Call 0x3EB2AC0
	118 Add X0, X31, 8
	119 Add X1, X31, 184
	120 Move W2, 88
	121 Call 0x3EB2AC0
	122 Add X1, X31, 8
	123 Move X0, X20
	124 Call InputActionRebindingExtensions.ApplyBindingOverride, X0, X1
	125 Move X20, X31
	126 Compare X19, 0
	127 JumpIfEqual {149}
	128 Move X8, [X19]
	129 Move X1, [X21]
	130 NotImplemented "Instruction LDRH not yet implemented."
	131 Compare X9, 0
	132 JumpIfEqual {139}
	133 Move X10, [X8+176]
	134 Add X10, X10, 8
	135 NotImplemented "Instruction LDUR not yet implemented."
	136 NotImplemented "Instruction CMP not yet implemented."
	137 Subtract X9, X9, 1
	138 Add X10, X10, 16
	139 Move X0, X19
	140 Move W2, W31
	141 Call 0x1C5D788
	142 NotImplemented "Instruction LDRSW not yet implemented."
	143 Add X8, X8, X9
	144 Add X0, X8, 312
	145 Move X8, [X0]
	146 Move X1, [X0+8]
	147 Move X0, X19
	148 NotImplemented "Instruction BLR not yet implemented."
	149 Compare X20, 0
	150 JumpIfNotEqual {186}
	151 Move X20, [X31+320]
	152 Move X19, [X31+328]
	153 Move X22, [X31+304]
	154 Move X21, [X31+312]
	155 Move X30, [X31+288]
	156 Move X23, [X31+296]
	157 Move X29, [X31+272]
	158 Add X31, X31, 336
	159 Return 
	160 Move X0, 0x9B9000
	161 Move X0, [X0+1320]
	162 Call 0x1C17D08
	163 Call 0x1C17F10
	164 Move X19, X0
	165 Move X0, 0x9DC000
	166 Move X0, [X0+3088]
	167 Move X0, 0x9B9000
	168 Move X0, [X0+1320]
	169 Call 0x1C17D08
	170 Call 0x1C17F10
	171 Move X19, X0
	172 Move X0, 0xA06000
	173 Move X0, [X0+1216]
	174 Call 0x1C17D08
	175 Move X1, X0
	176 Move X0, X19
	177 Move X2, X31
	178 Call ArgumentNullException..ctor, X0, X1
	179 Move X0, 0xA06000
	180 Move X0, [X0+1224]
	181 Call 0x1C17D08
	182 Move X1, X0
	183 Move X0, X19
	184 Call 0x1C17DEC
	185 Call 0x1C17F20
	186 Move X0, X20
	187 Call 0x1C17F18
	188 NotImplemented "Instruction CMP not yet implemented."
	189 Call 0x3EB2AD0
	190 Move X20, [X0]
	191 Call 0x3EB2AE0
	192 Move [X31+280], X0
	193 Move X20, X31
	194 Move [X31+280], X0
	195 Compare X19, 0
	196 JumpIfEqual {218}
	197 Move X8, [X19]
	198 Move X1, [X21]
	199 NotImplemented "Instruction LDRH not yet implemented."
	200 Compare X9, 0
	201 JumpIfEqual {208}
	202 Move X10, [X8+176]
	203 Add X10, X10, 8
	204 NotImplemented "Instruction LDUR not yet implemented."
	205 NotImplemented "Instruction CMP not yet implemented."
	206 Subtract X9, X9, 1
	207 Add X10, X10, 16
	208 Move X0, X19
	209 Move W2, W31
	210 Call 0x1C5D788
	211 NotImplemented "Instruction LDRSW not yet implemented."
	212 Add X8, X8, X9
	213 Add X0, X8, 312
	214 Move X8, [X0]
	215 Move X1, [X0+8]
	216 Move X0, X19
	217 NotImplemented "Instruction BLR not yet implemented."
	218 Compare X20, 0
	219 JumpIfNotEqual {222}
	220 Move X0, [X31+280]
	221 Call 0x1D2D690
	222 Move X0, X20
	223 Call 0x1C17F18
	224 Call 0x1991590

Method: System.Void RemoveBindingOverrides(UnityEngine.InputSystem.InputActionMap actionMap, System.Collections.Generic.IEnumerable`1<UnityEngine.InputSystem.InputBinding> overrides)

Disassembly:
	0x03740F50 MOV X1, X20
	0x03740F54 BL 0x37410C0
	0x03740F58 MOV X20, X31
	0x03740F5C CBZ X19, 0x3740FB8
	0x03740F60 LDR X8, [X19]
	0x03740F64 LDR X1, [X23]
	0x03740F68 LDRH W9, [X8 + 0x12E]
	0x03740F6C CBZ X9, 0x3740F90
	0x03740F70 LDR X10, [X8 + 0xB0]
	0x03740F74 ADD X10, X10, 0x8
	0x03740F78 LDUR X11, [X10 - 0x8]
	0x03740F7C CMP X11, X1
	0x03740F80 B.EQ 0x3740FA0
	0x03740F84 SUBS X9, X9, 0x1
	0x03740F88 ADD X10, X10, 0x10
	0x03740F8C B.NE 0x3740F78
	0x03740F90 MOV X0, X19
	0x03740F94 MOV W2, W31
	0x03740F98 BL 0x1C5C788
	0x03740F9C B 0x3740FAC
	0x03740FA0 LDRSW X9, [X10]
	0x03740FA4 ADD X8, X8, X9, 0x4, LSL
	0x03740FA8 ADD X0, X8, 0x138
	0x03740FAC LDP X8, X1, [X0]
	0x03740FB0 MOV X0, X19
	0x03740FB4 BLR X8
	0x03740FB8 CBNZ X20, 0x3741014
	0x03740FBC LDP X20, X19, [X31 + 0x20]
	0x03740FC0 LDP X22, X21, [X31 + 0x10]
	0x03740FC4 LDP X30, X23, [X31], #0x30
	0x03740FC8 RET
	0x03740FCC ADRP X0, 0x9B8000
	0x03740FD0 LDR X0, [X0 + 0x528]
	0x03740FD4 BL 0x1C16D08
	0x03740FD8 BL 0x1C16F10
	0x03740FDC MOV X19, X0
	0x03740FE0 ADRP X0, 0xA05000
	0x03740FE4 LDR X0, [X0 + 0x498]
	0x03740FE8 BL 0x1C16D08
	0x03740FEC MOV X1, X0
	0x03740FF0 MOV X0, X19
	0x03740FF4 MOV X2, X31
	0x03740FF8 BL 0x330E100
	0x03740FFC ADRP X0, 0xA05000
	0x03741000 LDR X0, [X0 + 0x548]
	0x03741004 BL 0x1C16D08
	0x03741008 MOV X1, X0
	0x0374100C MOV X0, X19
	0x03741010 BL 0x1C16DEC
	0x03741014 MOV X0, X20
	0x03741018 BL 0x1C16F18
	0x0374101C B 0x3741020
	0x03741020 MOV X21, X0
	0x03741024 CMP W1, 0x1
	0x03741028 B.NE 0x3741040
	0x0374102C MOV X0, X21
	0x03741030 BL 0x3EB1AD0
	0x03741034 LDR X20, [X0]
	0x03741038 BL 0x3EB1AE0
	0x0374103C B 0x3740F5C
	0x03741040 MOV X20, X31
	0x03741044 B 0x374104C
	0x03741048 MOV X21, X0
	0x0374104C CBZ X19, 0x37410A8
	0x03741050 LDR X8, [X19]
	0x03741054 LDR X1, [X23]
	0x03741058 LDRH W9, [X8 + 0x12E]
	0x0374105C CBZ X9, 0x3741080
	0x03741060 LDR X10, [X8 + 0xB0]
	0x03741064 ADD X10, X10, 0x8
	0x03741068 LDUR X11, [X10 - 0x8]
	0x0374106C CMP X11, X1
	0x03741070 B.EQ 0x3741090
	0x03741074 SUBS X9, X9, 0x1
	0x03741078 ADD X10, X10, 0x10
	0x0374107C B.NE 0x3741068
	0x03741080 MOV X0, X19
	0x03741084 MOV W2, W31
	0x03741088 BL 0x1C5C788
	0x0374108C B 0x374109C
	0x03741090 LDRSW X9, [X10]
	0x03741094 ADD X8, X8, X9, 0x4, LSL
	0x03741098 ADD X0, X8, 0x138
	0x0374109C LDP X8, X1, [X0]
	0x037410A0 MOV X0, X19
	0x037410A4 BLR X8
	0x037410A8 CBNZ X20, 0x37410B4
	0x037410AC MOV X0, X21
	0x037410B0 BL 0x1D2C690
	0x037410B4 MOV X0, X20
	0x037410B8 BL 0x1C16F18
	0x037410BC BL 0x1990590
	0x037410C0 STP X29, X30, [X31 - 0x60]!
	0x037410C4 STP X28, X27, [X31 + 0x10]
	0x037410C8 STP X26, X25, [X31 + 0x20]
	0x037410CC STP X24, X23, [X31 + 0x30]
	0x037410D0 STP X22, X21, [X31 + 0x40]
	0x037410D4 STP X20, X19, [X31 + 0x50]
	0x037410D8 SUB X31, X31, 0x1D0
	0x037410DC ADRP X21, 0xC9F000
	0x037410E0 LDRB W8, [X21 + 0xD46]
	0x037410E4 MOV X20, X1
	0x037410E8 MOV X19, X0
	0x037410EC ADD X24, X31, 0xD0
	0x037410F0 TBNZ X8, 0x0, 0x374115C
	0x037410F4 ADRP X0, 0x9B2000
	0x037410F8 LDR X0, [X0 + 0xA28]
	0x037410FC BL 0x1C16CF4
	0x03741100 ADRP X0, 0xA04000
	0x03741104 LDR X0, [X0 + 0x550]
	0x03741108 BL 0x1C16CF4
	0x0374110C ADRP X0, 0xA04000
	0x03741110 LDR X0, [X0 + 0x558]
	0x03741114 BL 0x1C16CF4
	0x03741118 ADRP X0, 0xA04000
	0x0374111C LDR X0, [X0 + 0x560]
	0x03741120 BL 0x1C16CF4
	0x03741124 ADRP X0, 0xA04000
	0x03741128 LDR X0, [X0 + 0x4F0]
	0x0374112C BL 0x1C16CF4
	0x03741130 ADRP X0, 0xA04000
	0x03741134 LDR X0, [X0 + 0x568]
	0x03741138 BL 0x1C16CF4
	0x0374113C ADRP X0, 0xA04000
	0x03741140 LDR X0, [X0 + 0x570]
	0x03741144 BL 0x1C16CF4
	0x03741148 ADRP X0, 0xA04000
	0x0374114C LDR X0, [X0 + 0x578]
	0x03741150 BL 0x1C16CF4
	0x03741154 MOVZ W8, 0x1
	0x03741158 STRB W8, [X21 + 0xD46]
	0x0374115C MOVI V0.2D, 0x0
	0x03741160 MOV X0, X20
	0x03741164 MOV X1, X31
	0x03741168 STR X31, [X31 + 0x170]
	0x0374116C STP V0, V0, [X24 + 0x80]
	0x03741170 STR V0, [X24 + 0x7]
	0x03741174 STR X31, [X31 + 0x118]
	0x03741178 BL 0x32277A8
	0x0374117C TBNZ X0, 0x0, 0x3741384
	0x03741180 ADRP X8, 0xA04000
	0x03741184 LDR X8, [X8 + 0x568]
	0x03741188 MOV X0, X20
	0x0374118C LDR X1, [X8]
	0x03741190 BL 0x2211798
	0x03741194 CBZ X0, 0x37413A8
	0x03741198 ADRP X8, 0xA04000
	0x0374119C LDR X8, [X8 + 0x570]
	0x037411A0 ADD X20, X31, 0x178
	0x037411A4 LDR X1, [X8]
	0x037411A8 ADD X8, X31, 0x178
	0x037411AC BL 0x31059F8
	0x037411B0 ADD X8, X31, 0x79
	0x037411B4 LDUR V0, [X8 + 0xFF]
	0x037411B8 ADD X8, X31, 0x89
	0x037411BC LDUR V1, [X8 + 0xFF]
	0x037411C0 ADD X8, X31, 0x99
	0x037411C4 ADRP X25, 0xA04000
	0x037411C8 ADRP X27, 0x9B2000
	0x037411CC STP V0, V1, [X24 + 0x70]
	0x037411D0 LDUR V0, [X8 + 0xFF]
	0x037411D4 LDR X8, [X31 + 0x1A8]
	0x037411D8 LDR X25, [X25 + 0x558]
	0x037411DC LDR X27, [X27 + 0xA28]
	0x037411E0 ADD X9, X31, 0x140
	0x037411E4 ADD X10, X31, 0x60
	0x037411E8 ADD X20, X20, 0x10
	0x037411EC STR V0, [X24 + 0x9]
	0x037411F0 ADD X28, X9, 0x20
	0x037411F4 ADD X29, X10, 0x10
	0x037411F8 STR X8, [X31 + 0x170]
	0x037411FC LDR X1, [X25]
	0x03741200 ADD X0, X31, 0x140
	0x03741204 BL 0x2BDE514
	0x03741208 TBZ X0, 0x0, 0x3741370
	0x0374120C LDR X8, [X28 + 0x10]
	0x03741210 LDR V0, [X28]
	0x03741214 LDP X26, X21, [X31 + 0x150]
	0x03741218 STR X8, [X31 + 0x130]
	0x0374121C STR V0, [X24 + 0x5]
	0x03741220 MOV X0, X21
	0x03741224 MOV X1, X31
	0x03741228 BL 0x32277A8
	0x0374122C TBNZ X0, 0x0, 0x3741334
	0x03741230 MOVI V0.2D, 0x0
	0x03741234 STR X31, [X31 + 0x110]
	0x03741238 STP V0, V0, [X24 + 0x20]
	0x0374123C STP V0, V0, [X24]
	0x03741240 CBZ X19, 0x37413A4
	0x03741244 ADRP X8, 0xA04000
	0x03741248 LDR X8, [X8 + 0x4F0]
	0x0374124C ADD X0, X31, 0x88
	0x03741250 ADD X1, X31, 0xD0
	0x03741254 MOVZ W2, 0x48
	0x03741258 LDR X22, [X8]
	0x0374125C BL 0x3EB1AC0
	0x03741260 LDR X8, [X19]
	0x03741264 LDRH W9, [X8 + 0x12E]
	0x03741268 CBZ X9, 0x374128C
	0x0374126C LDR X10, [X8 + 0xB0]
	0x03741270 ADD X10, X10, 0x8
	0x03741274 LDUR X11, [X10 - 0x8]
	0x03741278 CMP X11, X22
	0x0374127C B.EQ 0x37412A4
	0x03741280 SUBS X9, X9, 0x1
	0x03741284 ADD X10, X10, 0x10
	0x03741288 B.NE 0x3741274
	0x0374128C MOVZ W2, 0x2
	0x03741290 MOV X0, X19
	0x03741294 MOV X1, X22
	0x03741298 BL 0x1C5C788
	0x0374129C MOV X22, X0
	0x037412A0 B 0x37412B4
	0x037412A4 LDR W9, [X10]
	0x037412A8 ADD W9, W9, 0x2
	0x037412AC ADD X8, X8, W9, 0x4, SXTW
	0x037412B0 ADD X22, X8, 0x138
	0x037412B4 LDR X23, [X22]

ISIL:
	001 Subtract X31, X31, 336
	002 Move [X31+272], X29
	003 Move [X31+288], X30
	004 Move [X31+296], X23
	005 Move [X31+304], X22
	006 Move [X31+312], X21
	007 Move [X31+320], X20
	008 Move [X31+328], X19
	009 Move X21, 0xCA1000
	010 Move W8, [X21+3390]
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {31}
	017 Move X0, 0x9B4000
	018 Move X0, [X0+3584]
	019 Call 0x1C17CF4
	020 Move X0, 0xA06000
	021 Move X0, [X0+1200]
	022 Call 0x1C17CF4
	023 Move X0, 0xA06000
	024 Move X0, [X0+1208]
	025 Call 0x1C17CF4
	026 Move X0, 0x9B4000
	027 Move X0, [X0+3608]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X21+3390], W8
	031 Compare X20, 0
	032 JumpIfEqual {160}
	033 Compare X19, 0
	034 JumpIfEqual {167}
	035 Move X10, 0xA06000
	036 Move X8, [X19]
	037 Move X10, [X10+1200]
	038 NotImplemented "Instruction LDRH not yet implemented."
	039 Move X1, [X10]
	040 Compare X9, 0
	041 JumpIfEqual {48}
	042 Move X10, [X8+176]
	043 Add X10, X10, 8
	044 NotImplemented "Instruction LDUR not yet implemented."
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Subtract X9, X9, 1
	047 Add X10, X10, 16
	048 Move X0, X19
	049 Move W2, W31
	050 Call 0x1C5D788
	051 NotImplemented "Instruction LDRSW not yet implemented."
	052 Add X8, X8, X9
	053 Add X0, X8, 312
	054 Move X8, [X0]
	055 Move X1, [X0+8]
	056 Move X21, 0x9B3000
	057 Move X21, [X21+3584]
	058 Move X0, X19
	059 NotImplemented "Instruction BLR not yet implemented."
	060 Move X19, X0
	061 Compare X0, 0
	062 JumpIfEqual {185}
	063 Move X22, 0x9B3000
	064 Move X23, 0xA05000
	065 Move X22, [X22+3608]
	066 Move X23, [X23+1208]
	067 Move X8, [X19]
	068 Move X1, [X22]
	069 NotImplemented "Instruction LDRH not yet implemented."
	070 Compare X9, 0
	071 JumpIfEqual {78}
	072 Move X10, [X8+176]
	073 Add X10, X10, 8
	074 NotImplemented "Instruction LDUR not yet implemented."
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Subtract X9, X9, 1
	077 Add X10, X10, 16
	078 Move X0, X19
	079 Move W2, W31
	080 Call 0x1C5D788
	081 NotImplemented "Instruction LDRSW not yet implemented."
	082 Add X8, X8, X9
	083 Add X0, X8, 312
	084 Move X8, [X0]
	085 Move X1, [X0+8]
	086 Move X0, X19
	087 NotImplemented "Instruction BLR not yet implemented."
	088 Move TEMP, X0
	089 And TEMP, TEMP, 1
	090 Compare TEMP, 1
	091 JumpIfNotEqual {125}
	092 Move X8, [X19]
	093 Move X1, [X23]
	094 NotImplemented "Instruction LDRH not yet implemented."
	095 Compare X9, 0
	096 JumpIfEqual {103}
	097 Move X10, [X8+176]
	098 Add X10, X10, 8
	099 NotImplemented "Instruction LDUR not yet implemented."
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Subtract X9, X9, 1
	102 Add X10, X10, 16
	103 Move X0, X19
	104 Move W2, W31
	105 Call 0x1C5D788
	106 NotImplemented "Instruction LDRSW not yet implemented."
	107 Add X8, X8, X9
	108 Add X0, X8, 312
	109 Move X9, [X0]
	110 Move X1, [X0+8]
	111 Add X8, X31, 96
	112 Move X0, X19
	113 NotImplemented "Instruction BLR not yet implemented."
	114 Add X0, X31, 184
	115 Add X1, X31, 96
	116 Move W2, 88
	117 Call 0x3EB2AC0
	118 Add X0, X31, 8
	119 Add X1, X31, 184
	120 Move W2, 88
	121 Call 0x3EB2AC0
	122 Add X1, X31, 8
	123 Move X0, X20
	124 Call InputActionRebindingExtensions.RemoveBindingOverride, X0, X1
	125 Move X20, X31
	126 Compare X19, 0
	127 JumpIfEqual {149}
	128 Move X8, [X19]
	129 Move X1, [X21]
	130 NotImplemented "Instruction LDRH not yet implemented."
	131 Compare X9, 0
	132 JumpIfEqual {139}
	133 Move X10, [X8+176]
	134 Add X10, X10, 8
	135 NotImplemented "Instruction LDUR not yet implemented."
	136 NotImplemented "Instruction CMP not yet implemented."
	137 Subtract X9, X9, 1
	138 Add X10, X10, 16
	139 Move X0, X19
	140 Move W2, W31
	141 Call 0x1C5D788
	142 NotImplemented "Instruction LDRSW not yet implemented."
	143 Add X8, X8, X9
	144 Add X0, X8, 312
	145 Move X8, [X0]
	146 Move X1, [X0+8]
	147 Move X0, X19
	148 NotImplemented "Instruction BLR not yet implemented."
	149 Compare X20, 0
	150 JumpIfNotEqual {186}
	151 Move X20, [X31+320]
	152 Move X19, [X31+328]
	153 Move X22, [X31+304]
	154 Move X21, [X31+312]
	155 Move X30, [X31+288]
	156 Move X23, [X31+296]
	157 Move X29, [X31+272]
	158 Add X31, X31, 336
	159 Return 
	160 Move X0, 0x9B8000
	161 Move X0, [X0+1320]
	162 Call 0x1C17D08
	163 Call 0x1C17F10
	164 Move X19, X0
	165 Move X0, 0x9DB000
	166 Move X0, [X0+3088]
	167 Move X0, 0x9B8000
	168 Move X0, [X0+1320]
	169 Call 0x1C17D08
	170 Call 0x1C17F10
	171 Move X19, X0
	172 Move X0, 0xA05000
	173 Move X0, [X0+1216]
	174 Call 0x1C17D08
	175 Move X1, X0
	176 Move X0, X19
	177 Move X2, X31
	178 Call ArgumentNullException..ctor, X0, X1
	179 Move X0, 0xA05000
	180 Move X0, [X0+1232]
	181 Call 0x1C17D08
	182 Move X1, X0
	183 Move X0, X19
	184 Call 0x1C17DEC
	185 Call 0x1C17F20
	186 Move X0, X20
	187 Call 0x1C17F18
	188 NotImplemented "Instruction CMP not yet implemented."
	189 Call 0x3EB2AD0
	190 Move X20, [X0]
	191 Call 0x3EB2AE0
	192 Move [X31+280], X0
	193 Move X20, X31
	194 Move [X31+280], X0
	195 Compare X19, 0
	196 JumpIfEqual {218}
	197 Move X8, [X19]
	198 Move X1, [X21]
	199 NotImplemented "Instruction LDRH not yet implemented."
	200 Compare X9, 0
	201 JumpIfEqual {208}
	202 Move X10, [X8+176]
	203 Add X10, X10, 8
	204 NotImplemented "Instruction LDUR not yet implemented."
	205 NotImplemented "Instruction CMP not yet implemented."
	206 Subtract X9, X9, 1
	207 Add X10, X10, 16
	208 Move X0, X19
	209 Move W2, W31
	210 Call 0x1C5D788
	211 NotImplemented "Instruction LDRSW not yet implemented."
	212 Add X8, X8, X9
	213 Add X0, X8, 312
	214 Move X8, [X0]
	215 Move X1, [X0+8]
	216 Move X0, X19
	217 NotImplemented "Instruction BLR not yet implemented."
	218 Compare X20, 0
	219 JumpIfNotEqual {222}
	220 Move X0, [X31+280]
	221 Call 0x1D2D690
	222 Move X0, X20
	223 Call 0x1C17F18
	224 Call 0x1991590

Method: System.Int32 ApplyBindingOverridesOnMatchingControls(UnityEngine.InputSystem.InputAction action, UnityEngine.InputSystem.InputControl control)

Disassembly:
	0x037412B8 ADD X1, X31, 0x88
	0x037412BC MOVZ W2, 0x48
	0x037412C0 MOV X0, X20
	0x037412C4 STP X31, X21, [X31 + 0x178]
	0x037412C8 BL 0x3EB1AC0
	0x037412CC LDR X3, [X22 + 0x8]
	0x037412D0 ADD X1, X31, 0x178
	0x037412D4 ADD X2, X31, 0x118
	0x037412D8 MOV X0, X19
	0x037412DC BLR X23
	0x037412E0 MOV W22, W0
	0x037412E4 ADDS W31, W0, 0x1
	0x037412E8 B.EQ 0x3741334
	0x037412EC LDR X8, [X31 + 0x130]
	0x037412F0 LDR V0, [X24 + 0x5]
	0x037412F4 LDR X23, [X31 + 0x118]
	0x037412F8 STR X8, [X29 + 0x10]
	0x037412FC STR V0, [X29]
	0x03741300 STP X26, X21, [X31 + 0x60]
	0x03741304 ADD X8, X31, 0x178
	0x03741308 ADD X0, X31, 0x60
	0x0374130C BL 0x373C5B0
	0x03741310 ADD X0, X31, 0x8
	0x03741314 ADD X1, X31, 0x178
	0x03741318 MOVZ W2, 0x58
	0x0374131C BL 0x3EB1AC0
	0x03741320 ADD X2, X31, 0x8
	0x03741324 MOV X0, X23
	0x03741328 MOV W1, W22
	0x0374132C BL 0x373F12C
	0x03741330 B 0x37411FC
	0x03741334 ADRP X8, 0xA04000
	0x03741338 LDR X8, [X8 + 0x578]
	0x0374133C LDR X0, [X8]
	0x03741340 MOV X1, X21
	0x03741344 MOV X2, X31
	0x03741348 BL 0x321B938
	0x0374134C MOV X21, X0
	0x03741350 LDR X0, [X27]
	0x03741354 LDR W8, [X0 + 0xE0]
	0x03741358 CBNZ W8, 0x3741360
	0x0374135C BL 0x1C16DFC
	0x03741360 MOV X0, X21
	0x03741364 MOV X1, X31
	0x03741368 BL 0x3C06A04
	0x0374136C B 0x37411FC
	0x03741370 ADRP X8, 0xA04000
	0x03741374 LDR X8, [X8 + 0x550]
	0x03741378 ADD X0, X31, 0x140
	0x0374137C LDR X1, [X8]
	0x03741380 BL 0x2BDE510
	0x03741384 ADD X31, X31, 0x1D0
	0x03741388 LDP X20, X19, [X31 + 0x50]
	0x0374138C LDP X22, X21, [X31 + 0x40]
	0x03741390 LDP X24, X23, [X31 + 0x30]
	0x03741394 LDP X26, X25, [X31 + 0x20]
	0x03741398 LDP X28, X27, [X31 + 0x10]
	0x0374139C LDP X29, X30, [X31], #0x60
	0x037413A0 RET
	0x037413A4 BL 0x1C16F20
	0x037413A8 BL 0x1C16F20
	0x037413AC B 0x37413C4
	0x037413B0 B 0x37413C4
	0x037413B4 B 0x37413C4
	0x037413B8 B 0x37413C4
	0x037413BC B 0x37413C4
	0x037413C0 B 0x37413C4
	0x037413C4 MOV X19, X0
	0x037413C8 CMP W1, 0x1
	0x037413CC B.NE 0x3741400
	0x037413D0 MOV X0, X19
	0x037413D4 BL 0x3EB1AD0
	0x037413D8 LDR X20, [X0]
	0x037413DC BL 0x3EB1AE0
	0x037413E0 ADRP X8, 0xA04000
	0x037413E4 LDR X8, [X8 + 0x550]
	0x037413E8 ADD X0, X31, 0x140
	0x037413EC LDR X1, [X8]
	0x037413F0 BL 0x2BDE510
	0x037413F4 CBZ X20, 0x3741384
	0x037413F8 MOV X0, X20
	0x037413FC BL 0x1C16F18
	0x03741400 MOV X20, X31
	0x03741404 B 0x374140C

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+112], X30
	003 Move [X31+128], X24
	004 Move [X31+136], X23
	005 Move [X31+144], X22
	006 Move [X31+152], X21
	007 Move [X31+160], X20
	008 Move [X31+168], X19
	009 Move X21, 0xCA0000
	010 Move W8, [X21+3391]
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x9DA000
	018 Move X0, [X0+4072]
	019 Call 0x1C17CF4
	020 Move X0, 0xA05000
	021 Move X0, [X0+264]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+3391], W8
	025 Compare X20, 0
	026 JumpIfEqual {72}
	027 Compare X19, 0
	028 JumpIfEqual {79}
	029 Move X0, X20
	030 Call InputAction.get_bindings, X0
	031 Move X23, X1
	032 ShiftRight X23, 32
	033 And X23, X23, 0x7FFFFFFF
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move W21, W31
	036 Move [X31+96], X0
	037 Move [X31+104], X1
	038 Move X24, 0xA05000
	039 Move X24, [X24+264]
	040 Move W22, W31
	041 Move X2, [X24]
	042 Add X8, X31, 8
	043 Add X0, X31, 96
	044 Move W1, W22
	045 Call 0x24FD334, X0, X1
	046 Move X1, [X31+24]
	047 Move X0, X19
	048 Move W2, W31
	049 Move X3, X31
	050 Call InputControlPath.TryFindControl, X0, X1, X2
	051 Compare X0, 0
	052 JumpIfEqual {60}
	053 Move X1, X31
	054 Call InputControl.get_path, X0
	055 Move X2, X0
	056 Move X0, X20
	057 Move W1, W22
	058 Call InputActionRebindingExtensions.ApplyBindingOverride, X0, X1, X2
	059 Add W21, W21, 1
	060 Add W22, W22, 1
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move W0, W21
	063 Move X20, [X31+160]
	064 Move X19, [X31+168]
	065 Move X22, [X31+144]
	066 Move X21, [X31+152]
	067 Move X24, [X31+128]
	068 Move X23, [X31+136]
	069 Move X30, [X31+112]
	070 Add X31, X31, 176
	071 Return X0
	072 Move X0, 0x9B8000
	073 Move X0, [X0+1320]
	074 Call 0x1C17D08
	075 Call 0x1C17F10
	076 Move X19, X0
	077 Move X0, 0x9DB000
	078 Move X0, [X0+3064]
	079 Move X0, 0x9B8000
	080 Move X0, [X0+1320]
	081 Call 0x1C17D08
	082 Call 0x1C17F10
	083 Move X19, X0
	084 Move X0, 0x9DB000
	085 Move X0, [X0+3424]
	086 Call 0x1C17D08
	087 Move X1, X0
	088 Move X0, X19
	089 Move X2, X31
	090 Call ArgumentNullException..ctor, X0, X1
	091 Move X0, 0xA05000
	092 Move X0, [X0+1240]
	093 Call 0x1C17D08
	094 Move X1, X0
	095 Move X0, X19
	096 Call 0x1C17DEC

Method: System.Int32 ApplyBindingOverridesOnMatchingControls(UnityEngine.InputSystem.InputActionMap actionMap, UnityEngine.InputSystem.InputControl control)

Disassembly:
	0x03741408 MOV X19, X0
	0x0374140C ADRP X8, 0xA04000
	0x03741410 LDR X8, [X8 + 0x550]
	0x03741414 LDR X1, [X8]
	0x03741418 ADD X0, X31, 0x140
	0x0374141C BL 0x2BDE510
	0x03741420 CBNZ X20, 0x374142C
	0x03741424 MOV X0, X19
	0x03741428 BL 0x1D2C690
	0x0374142C MOV X0, X20
	0x03741430 BL 0x1C16F18
	0x03741434 BL 0x1990590
	0x03741438 STP X30, X23, [X31 - 0x30]!
	0x0374143C STP X22, X21, [X31 + 0x10]
	0x03741440 STP X20, X19, [X31 + 0x20]
	0x03741444 ADRP X19, 0xC9F000
	0x03741448 LDRB W8, [X19 + 0xD45]
	0x0374144C MOV W22, W2
	0x03741450 MOV X20, X1
	0x03741454 MOV X21, X0
	0x03741458 TBNZ X8, 0x0, 0x3741470
	0x0374145C ADRP X0, 0x9B2000
	0x03741460 LDR X0, [X0 + 0xE00]
	0x03741464 BL 0x1C16CF4
	0x03741468 MOVZ W8, 0x1
	0x0374146C STRB W8, [X19 + 0xD45]
	0x03741470 CBZ X21, 0x3741520
	0x03741474 ADRP X23, 0x9B2000
	0x03741478 LDR X23, [X23 + 0xE00]
	0x0374147C BL 0x373BF80
	0x03741480 MOV X19, X0
	0x03741484 TBZ X22, 0x0, 0x3741490
	0x03741488 MOV X0, X21
	0x0374148C BL 0x373FAB0
	0x03741490 LDR X0, [X21 + 0xC8]
	0x03741494 CBNZ X0, 0x37414A4
	0x03741498 MOV X0, X21
	0x0374149C BL 0x373572C
	0x037414A0 LDR X0, [X21 + 0xC8]
	0x037414A4 MOV X1, X20
	0x037414A8 BL 0x37410C0
	0x037414AC MOV X20, X31
	0x037414B0 CBZ X19, 0x374150C
	0x037414B4 LDR X8, [X19]
	0x037414B8 LDR X1, [X23]
	0x037414BC LDRH W9, [X8 + 0x12E]
	0x037414C0 CBZ X9, 0x37414E4
	0x037414C4 LDR X10, [X8 + 0xB0]
	0x037414C8 ADD X10, X10, 0x8
	0x037414CC LDUR X11, [X10 - 0x8]
	0x037414D0 CMP X11, X1
	0x037414D4 B.EQ 0x37414F4
	0x037414D8 SUBS X9, X9, 0x1
	0x037414DC ADD X10, X10, 0x10
	0x037414E0 B.NE 0x37414CC
	0x037414E4 MOV X0, X19
	0x037414E8 MOV W2, W31
	0x037414EC BL 0x1C5C788
	0x037414F0 B 0x3741500
	0x037414F4 LDRSW X9, [X10]
	0x037414F8 ADD X8, X8, X9, 0x4, LSL
	0x037414FC ADD X0, X8, 0x138
	0x03741500 LDP X8, X1, [X0]
	0x03741504 MOV X0, X19
	0x03741508 BLR X8
	0x0374150C CBNZ X20, 0x3741568
	0x03741510 LDP X20, X19, [X31 + 0x20]
	0x03741514 LDP X22, X21, [X31 + 0x10]
	0x03741518 LDP X30, X23, [X31], #0x30
	0x0374151C RET

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+32], X22
	004 Move [X31+40], X21
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move X21, 0xCA0000
	008 Move W8, [X21+3392]
	009 Move X19, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0xA05000
	016 Move X0, [X0+592]
	017 Call 0x1C17CF4
	018 Move X0, 0xA05000
	019 Move X0, [X0+600]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+3392], W8
	023 Compare X20, 0
	024 JumpIfEqual {54}
	025 Compare X19, 0
	026 JumpIfEqual {61}
	027 Move X0, X20
	028 Call InputActionMap.get_actions, X0
	029 Move X21, X1
	030 ShiftRight X21, 32
	031 And X21, X21, 0x7FFFFFFF
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move [X31], X0
	034 Move [X31+8], X1
	035 Move X22, 0xA05000
	036 Move X22, [X22+600]
	037 Move W20, W31
	038 Move X2, [X22]
	039 Add X0, X31, 0
	040 Move W1, W20
	041 Call ReadOnlyArray`1<Object>.get_Item, X0, X1
	042 Move X1, X19
	043 Call InputActionRebindingExtensions.ApplyBindingOverridesOnMatchingControls, X0, X1
	044 Add W20, W20, 1
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move W0, W31
	047 Move X20, [X31+48]
	048 Move X19, [X31+56]
	049 Move X22, [X31+32]
	050 Move X21, [X31+40]
	051 Move X30, [X31+16]
	052 Add X31, X31, 64
	053 Return X0
	054 Move X0, 0x9B8000
	055 Move X0, [X0+1320]
	056 Call 0x1C17D08
	057 Call 0x1C17F10
	058 Move X19, X0
	059 Move X0, 0x9DB000
	060 Move X0, [X0+3088]
	061 Move X0, 0x9B8000
	062 Move X0, [X0+1320]
	063 Call 0x1C17D08
	064 Call 0x1C17F10
	065 Move X19, X0
	066 Move X0, 0x9DB000
	067 Move X0, [X0+3424]
	068 Call 0x1C17D08
	069 Move X1, X0
	070 Move X0, X19
	071 Move X2, X31
	072 Call ArgumentNullException..ctor, X0, X1
	073 Move X0, 0xA05000
	074 Move X0, [X0+1248]
	075 Call 0x1C17D08
	076 Move X1, X0
	077 Move X0, X19
	078 Call 0x1C17DEC

Method: System.String SaveBindingOverridesAsJson(UnityEngine.InputSystem.IInputActionCollection2 actions)

Disassembly:
	0x03741520 ADRP X0, 0x9B7000
	0x03741524 LDR X0, [X0 + 0x528]
	0x03741528 BL 0x1C16D08
	0x0374152C BL 0x1C16F10
	0x03741530 MOV X19, X0
	0x03741534 ADRP X0, 0x9DA000
	0x03741538 LDR X0, [X0 + 0xBF8]
	0x0374153C BL 0x1C16D08
	0x03741540 MOV X1, X0
	0x03741544 MOV X0, X19
	0x03741548 MOV X2, X31
	0x0374154C BL 0x330E100
	0x03741550 ADRP X0, 0xA04000
	0x03741554 LDR X0, [X0 + 0x580]
	0x03741558 BL 0x1C16D08
	0x0374155C MOV X1, X0
	0x03741560 MOV X0, X19
	0x03741564 BL 0x1C16DEC
	0x03741568 MOV X0, X20
	0x0374156C BL 0x1C16F18
	0x03741570 B 0x3741578
	0x03741574 B 0x3741578
	0x03741578 MOV X21, X0
	0x0374157C CMP W1, 0x1
	0x03741580 B.NE 0x3741598
	0x03741584 MOV X0, X21
	0x03741588 BL 0x3EB1AD0
	0x0374158C LDR X20, [X0]
	0x03741590 BL 0x3EB1AE0
	0x03741594 B 0x37414B0
	0x03741598 MOV X20, X31
	0x0374159C B 0x37415A4
	0x037415A0 MOV X21, X0
	0x037415A4 CBZ X19, 0x3741600
	0x037415A8 LDR X8, [X19]
	0x037415AC LDR X1, [X23]
	0x037415B0 LDRH W9, [X8 + 0x12E]
	0x037415B4 CBZ X9, 0x37415D8
	0x037415B8 LDR X10, [X8 + 0xB0]
	0x037415BC ADD X10, X10, 0x8
	0x037415C0 LDUR X11, [X10 - 0x8]
	0x037415C4 CMP X11, X1
	0x037415C8 B.EQ 0x37415E8
	0x037415CC SUBS X9, X9, 0x1
	0x037415D0 ADD X10, X10, 0x10
	0x037415D4 B.NE 0x37415C0
	0x037415D8 MOV X0, X19
	0x037415DC MOV W2, W31
	0x037415E0 BL 0x1C5C788
	0x037415E4 B 0x37415F4
	0x037415E8 LDRSW X9, [X10]
	0x037415EC ADD X8, X8, X9, 0x4, LSL
	0x037415F0 ADD X0, X8, 0x138
	0x037415F4 LDP X8, X1, [X0]
	0x037415F8 MOV X0, X19
	0x037415FC BLR X8
	0x03741600 CBNZ X20, 0x374160C
	0x03741604 MOV X0, X21
	0x03741608 BL 0x1D2C690
	0x0374160C MOV X0, X20
	0x03741610 BL 0x1C16F18
	0x03741614 BL 0x1990590
	0x03741618 SUB X31, X31, 0x180
	0x0374161C STR X29, [X31 + 0x120]
	0x03741620 STP X30, X27, [X31 + 0x130]
	0x03741624 STP X26, X25, [X31 + 0x140]
	0x03741628 STP X24, X23, [X31 + 0x150]
	0x0374162C STP X22, X21, [X31 + 0x160]
	0x03741630 STP X20, X19, [X31 + 0x170]
	0x03741634 ADRP X21, 0xC9F000
	0x03741638 LDRB W8, [X21 + 0xD47]
	0x0374163C MOV W20, W1
	0x03741640 MOV X19, X0
	0x03741644 TBNZ X8, 0x0, 0x37416C8
	0x03741648 ADRP X0, 0x9D9000
	0x0374164C LDR X0, [X0 + 0xFE8]
	0x03741650 BL 0x1C16CF4
	0x03741654 ADRP X0, 0xA04000
	0x03741658 LDR X0, [X0 + 0x108]
	0x0374165C BL 0x1C16CF4
	0x03741660 ADRP X0, 0xA04000
	0x03741664 LDR X0, [X0 + 0x588]
	0x03741668 BL 0x1C16CF4
	0x0374166C ADRP X0, 0xA04000
	0x03741670 LDR X0, [X0 + 0x590]
	0x03741674 BL 0x1C16CF4
	0x03741678 ADRP X0, 0xA04000
	0x0374167C LDR X0, [X0 + 0x350]
	0x03741680 BL 0x1C16CF4
	0x03741684 ADRP X0, 0xA04000
	0x03741688 LDR X0, [X0 + 0x598]
	0x0374168C BL 0x1C16CF4
	0x03741690 ADRP X0, 0xA04000
	0x03741694 LDR X0, [X0 + 0x5A0]
	0x03741698 BL 0x1C16CF4
	0x0374169C ADRP X0, 0xA04000
	0x037416A0 LDR X0, [X0 + 0x5A8]
	0x037416A4 BL 0x1C16CF4
	0x037416A8 ADRP X0, 0xA04000
	0x037416AC LDR X0, [X0 + 0x5B0]
	0x037416B0 BL 0x1C16CF4
	0x037416B4 ADRP X0, 0xA04000
	0x037416B8 LDR X0, [X0 + 0x5B8]
	0x037416BC BL 0x1C16CF4
	0x037416C0 MOVZ W8, 0x1
	0x037416C4 STRB W8, [X21 + 0xD47]
	0x037416C8 MOVI V0.2D, 0x0
	0x037416CC STR X31, [X31 + 0x100]
	0x037416D0 STP V0, V0, [X31 + 0xE0]
	0x037416D4 STP V0, V0, [X31 + 0xC0]
	0x037416D8 STR V0, [X31 + 0xB]
	0x037416DC CBZ X19, 0x3741838
	0x037416E0 ADRP X8, 0xA04000
	0x037416E4 LDR X8, [X8 + 0x588]
	0x037416E8 LDR X0, [X8]
	0x037416EC BL 0x1C16F10
	0x037416F0 MOV X21, X0
	0x037416F4 BL 0x37419D8
	0x037416F8 CBZ X21, 0x3741880
	0x037416FC ADRP X22, 0xA04000
	0x03741700 ADRP X23, 0xA04000
	0x03741704 ADRP X24, 0xA04000
	0x03741708 ADRP X25, 0xA04000
	0x0374170C ADRP X26, 0xA04000
	0x03741710 ADRP X27, 0xA04000
	0x03741714 LDR X22, [X22 + 0x598]
	0x03741718 LDR X23, [X23 + 0x5B8]
	0x0374171C LDR X24, [X24 + 0x590]
	0x03741720 LDR X25, [X25 + 0x5B0]
	0x03741724 LDR X26, [X26 + 0x5A8]
	0x03741728 LDR X27, [X27 + 0x350]
	0x0374172C MOV X0, X21
	0x03741730 MOV X1, X19
	0x03741734 BL 0x3741A68
	0x03741738 MOVZ W8, 0xCCCD
	0x0374173C MOVK W8, 0x3D4C0000
	0x03741740 STR W8, [X21 + 0xF4]
	0x03741744 LDR X1, [X22]
	0x03741748 BL 0x3741BF4
	0x0374174C LDR X1, [X23]
	0x03741750 BL 0x3741BF4
	0x03741754 LDR X1, [X24]
	0x03741758 BL 0x3741BF4
	0x0374175C LDR X1, [X25]
	0x03741760 BL 0x3741BF4
	0x03741764 LDR X1, [X26]
	0x03741768 BL 0x3741BF4
	0x0374176C BL 0x37432C4
	0x03741770 LDR W8, [X21 + 0x168]
	0x03741774 LDP X0, X1, [X21 + 0x80]
	0x03741778 MOV X2, X31
	0x0374177C ORR W8, W8, 0x200
	0x03741780 STR W8, [X21 + 0x168]
	0x03741784 BL 0x37577E0
	0x03741788 LDR X1, [X27]
	0x0374178C MOV X2, X31
	0x03741790 BL 0x3226EF8
	0x03741794 TBZ X0, 0x0, 0x37417B0
	0x03741798 ADRP X8, 0xA04000
	0x0374179C LDR X8, [X8 + 0x5A0]
	0x037417A0 MOV X0, X21
	0x037417A4 LDR X22, [X8]
	0x037417A8 BL 0x37432C4
	0x037417AC STR X22, [X21 + 0xC0]
	0x037417B0 TBNZ X20, 0x1F, 0x3741814
	0x037417B4 MOV X0, X19
	0x037417B8 BL 0x37345CC
	0x037417BC UBFM X8, X1, 0x20, 0x3F
	0x037417C0 CMP W8, W20
	0x037417C4 STP X0, X1, [X31 + 0x110]
	0x037417C8 B.LE 0x3741884
	0x037417CC ADRP X8, 0xA04000
	0x037417D0 LDR X8, [X8 + 0x108]
	0x037417D4 ADD X0, X31, 0x110
	0x037417D8 MOV W1, W20
	0x037417DC LDR X2, [X8]
	0x037417E0 ADD X8, X31, 0x58
	0x037417E4 BL 0x24FC334
	0x037417E8 ADD X0, X31, 0xB0
	0x037417EC ADD X1, X31, 0x58
	0x037417F0 MOVZ W2, 0x58
	0x037417F4 BL 0x3EB1AC0
	0x037417F8 ADD X0, X31, 0xB0
	0x037417FC MOV X1, X31
	0x03741800 BL 0x3747CF4
	0x03741804 TBNZ X0, 0x0, 0x3741928
	0x03741808 MOV X0, X21
	0x0374180C MOV W1, W20
	0x03741810 BL 0x3741D94
	0x03741814 MOV X0, X21
	0x03741818 LDP X20, X19, [X31 + 0x170]
	0x0374181C LDP X22, X21, [X31 + 0x160]
	0x03741820 LDP X24, X23, [X31 + 0x150]
	0x03741824 LDP X26, X25, [X31 + 0x140]
	0x03741828 LDP X30, X27, [X31 + 0x130]
	0x0374182C LDR X29, [X31 + 0x120]
	0x03741830 ADD X31, X31, 0x180
	0x03741834 RET
	0x03741838 ADRP X0, 0x9B7000
	0x0374183C LDR X0, [X0 + 0x528]
	0x03741840 BL 0x1C16D08
	0x03741844 BL 0x1C16F10
	0x03741848 MOV X19, X0
	0x0374184C ADRP X0, 0x9DA000
	0x03741850 LDR X0, [X0 + 0xBF8]
	0x03741854 BL 0x1C16D08
	0x03741858 MOV X1, X0
	0x0374185C MOV X0, X19
	0x03741860 MOV X2, X31
	0x03741864 BL 0x330E100
	0x03741868 ADRP X0, 0xA04000
	0x0374186C LDR X0, [X0 + 0x5C0]
	0x03741870 BL 0x1C16D08
	0x03741874 MOV X1, X0
	0x03741878 MOV X0, X19
	0x0374187C BL 0x1C16DEC
	0x03741880 BL 0x1C16F20
	0x03741884 STR W20, [X31 + 0x58]
	0x03741888 ADRP X20, 0x9B2000
	0x0374188C LDR X20, [X20 + 0x758]
	0x03741890 MOV X0, X20
	0x03741894 BL 0x1C16D08
	0x03741898 ADD X1, X31, 0x58
	0x0374189C BL 0x1C16E04
	0x037418A0 MOV X21, X0
	0x037418A4 ADRP X0, 0x9D9000
	0x037418A8 LDR X0, [X0 + 0xFE8]
	0x037418AC BL 0x1C16D08
	0x037418B0 LDR W8, [X31 + 0x11C]
	0x037418B4 MOV X0, X20
	0x037418B8 STR W8, [X31]
	0x037418BC BL 0x1C16D08
	0x037418C0 ADD X1, X31, 0x0
	0x037418C4 BL 0x1C16E04
	0x037418C8 MOV X20, X0
	0x037418CC ADRP X0, 0xA03000
	0x037418D0 LDR X0, [X0 + 0xFD8]
	0x037418D4 BL 0x1C16D08
	0x037418D8 MOV X1, X21
	0x037418DC MOV X2, X19
	0x037418E0 MOV X3, X20
	0x037418E4 MOV X4, X31
	0x037418E8 BL 0x3227C18
	0x037418EC MOV X19, X0
	0x037418F0 ADRP X0, 0x9BA000
	0x037418F4 LDR X0, [X0 + 0x760]
	0x037418F8 BL 0x1C16D08
	0x037418FC BL 0x1C16F10
	0x03741900 MOV X20, X0
	0x03741904 ADRP X0, 0xA04000
	0x03741908 LDR X0, [X0 + 0x5C8]
	0x0374190C BL 0x1C16D08
	0x03741910 MOV X2, X0
	0x03741914 MOV X0, X20
	0x03741918 MOV X1, X19
	0x0374191C MOV X3, X31
	0x03741920 BL 0x3311888
	0x03741924 B 0x37419C0
	0x03741928 ADRP X0, 0xA04000
	0x0374192C LDR X0, [X0 + 0x108]
	0x03741930 BL 0x1C16D08
	0x03741934 MOV X2, X0
	0x03741938 ADD X8, X31, 0x0
	0x0374193C ADD X0, X31, 0x110
	0x03741940 MOV W1, W20
	0x03741944 BL 0x1BCC26C
	0x03741948 ADD X0, X31, 0x58
	0x0374194C ADD X1, X31, 0x0
	0x03741950 MOVZ W2, 0x58
	0x03741954 BL 0x3EB1AC0
	0x03741958 ADD X0, X31, 0x0
	0x0374195C ADD X1, X31, 0x58
	0x03741960 MOVZ W2, 0x58
	0x03741964 BL 0x3EB1AC0
	0x03741968 ADRP X0, 0x9DD000
	0x0374196C LDR X0, [X0 + 0x4E0]
	0x03741970 BL 0x1C16D08
	0x03741974 ADD X1, X31, 0x0
	0x03741978 BL 0x1C16E04
	0x0374197C MOV X20, X0
	0x03741980 ADRP X0, 0xA04000
	0x03741984 LDR X0, [X0 + 0x5D0]
	0x03741988 BL 0x1C16D08
	0x0374198C MOV X1, X20
	0x03741990 MOV X2, X19
	0x03741994 MOV X3, X31
	0x03741998 BL 0x3227BD4
	0x0374199C MOV X19, X0
	0x037419A0 ADRP X0, 0x9B2000
	0x037419A4 LDR X0, [X0 + 0x5B0]
	0x037419A8 BL 0x1C16D08
	0x037419AC BL 0x1C16F10

ISIL:
	001 Subtract X31, X31, 336
	002 Move [X31+272], X29
	003 Move [X31+280], X30
	004 Move [X31+288], X24
	005 Move [X31+296], X23
	006 Move [X31+304], X22
	007 Move [X31+312], X21
	008 Move [X31+320], X20
	009 Move [X31+328], X19
	010 Move X19, 0xCA0000
	011 Move W8, [X19+3393]
	012 Move X21, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {49}
	017 Move X0, 0xA05000
	018 Move X0, [X0+1256]
	019 Call 0x1C17CF4
	020 Move X0, 0x9B3000
	021 Move X0, [X0+3584]
	022 Call 0x1C17CF4
	023 Move X0, 0xA05000
	024 Move X0, [X0+1200]
	025 Call 0x1C17CF4
	026 Move X0, 0xA05000
	027 Move X0, [X0+1208]
	028 Call 0x1C17CF4
	029 Move X0, 0x9B3000
	030 Move X0, [X0+3608]
	031 Call 0x1C17CF4
	032 Move X0, 0xA05000
	033 Move X0, [X0+1264]
	034 Call 0x1C17CF4
	035 Move X0, 0xA05000
	036 Move X0, [X0+1272]
	037 Call 0x1C17CF4
	038 Move X0, 0xA05000
	039 Move X0, [X0+1280]
	040 Call 0x1C17CF4
	041 Move X0, 0xA05000
	042 Move X0, [X0+1288]
	043 Call 0x1C17CF4
	044 Move X0, 0x9B5000
	045 Move X0, [X0+632]
	046 Call 0x1C17CF4
	047 Move W8, 1
	048 Move [X19+3393], W8
	049 NotImplemented "Instruction MOVI not yet implemented."
	050 Move [X31+256], X31
	051 Move [X31+224], V0
	052 Move [X31+232], V0
	053 Move [X31+192], V0
	054 Move [X31+200], V0
	055 Move [X31+11], V0
	056 Compare X21, 0
	057 JumpIfEqual {244}
	058 Move X8, 0xA05000
	059 Move X8, [X8+1288]
	060 Move X19, 0xA05000
	061 Move X20, 0xA05000
	062 Move X0, [X8]
	063 Move X19, [X19+1272]
	064 Move X20, [X20+1264]
	065 Call 0x1C17F10
	066 Move X1, [X19]
	067 Move X19, X0
	068 Call List`1<BindingOverrideJson>..ctor, X0
	069 Move X8, [X21]
	070 Move X1, [X20]
	071 NotImplemented "Instruction LDRH not yet implemented."
	072 Compare X9, 0
	073 JumpIfEqual {80}
	074 Move X10, [X8+176]
	075 Add X10, X10, 8
	076 NotImplemented "Instruction LDUR not yet implemented."
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Subtract X9, X9, 1
	079 Add X10, X10, 16
	080 Move X0, X21
	081 Move W2, W31
	082 Call 0x1C5D788
	083 NotImplemented "Instruction LDRSW not yet implemented."
	084 Add X8, X8, X9
	085 Add X0, X8, 312
	086 Move X8, [X0]
	087 Move X1, [X0+8]
	088 Move X0, X21
	089 NotImplemented "Instruction BLR not yet implemented."
	090 Compare X0, 0
	091 JumpIfEqual {243}
	092 Move X10, 0xA05000
	093 Move X8, [X0]
	094 Move X10, [X10+1200]
	095 Move X20, X0
	096 NotImplemented "Instruction LDRH not yet implemented."
	097 Move X1, [X10]
	098 Compare X9, 0
	099 JumpIfEqual {106}
	100 Move X10, [X8+176]
	101 Add X10, X10, 8
	102 NotImplemented "Instruction LDUR not yet implemented."
	103 NotImplemented "Instruction CMP not yet implemented."
	104 Subtract X9, X9, 1
	105 Add X10, X10, 16
	106 Move X0, X20
	107 Move W2, W31
	108 Call 0x1C5D788
	109 NotImplemented "Instruction LDRSW not yet implemented."
	110 Add X8, X8, X9
	111 Add X0, X8, 312
	112 Move X8, [X0]
	113 Move X1, [X0+8]
	114 Move X22, 0x9B3000
	115 Move X22, [X22+3584]
	116 Move X0, X20
	117 NotImplemented "Instruction BLR not yet implemented."
	118 Move X20, X0
	119 Compare X0, 0
	120 JumpIfEqual {262}
	121 Move X23, 0x9B3000
	122 Move X24, 0xA05000
	123 Move X23, [X23+3608]
	124 Move X24, [X24+1208]
	125 Move X8, [X20]
	126 Move X1, [X23]
	127 NotImplemented "Instruction LDRH not yet implemented."
	128 Compare X9, 0
	129 JumpIfEqual {136}
	130 Move X10, [X8+176]
	131 Add X10, X10, 8
	132 NotImplemented "Instruction LDUR not yet implemented."
	133 NotImplemented "Instruction CMP not yet implemented."
	134 Subtract X9, X9, 1
	135 Add X10, X10, 16
	136 Move X0, X20
	137 Move W2, W31
	138 Call 0x1C5D788
	139 NotImplemented "Instruction LDRSW not yet implemented."
	140 Add X8, X8, X9
	141 Add X0, X8, 312
	142 Move X8, [X0]
	143 Move X1, [X0+8]
	144 Move X0, X20
	145 NotImplemented "Instruction BLR not yet implemented."
	146 Move TEMP, X0
	147 And TEMP, TEMP, 1
	148 Compare TEMP, 1
	149 JumpIfNotEqual {185}
	150 Move X8, [X20]
	151 Move X1, [X24]
	152 NotImplemented "Instruction LDRH not yet implemented."
	153 Compare X9, 0
	154 JumpIfEqual {161}
	155 Move X10, [X8+176]
	156 Add X10, X10, 8
	157 NotImplemented "Instruction LDUR not yet implemented."
	158 NotImplemented "Instruction CMP not yet implemented."
	159 Subtract X9, X9, 1
	160 Add X10, X10, 16
	161 Move X0, X20
	162 Move W2, W31
	163 Call 0x1C5D788
	164 NotImplemented "Instruction LDRSW not yet implemented."
	165 Add X8, X8, X9
	166 Add X0, X8, 312
	167 Move X9, [X0]
	168 Move X1, [X0+8]
	169 Add X8, X31, 88
	170 Move X0, X20
	171 NotImplemented "Instruction BLR not yet implemented."
	172 Add X0, X31, 176
	173 Add X1, X31, 88
	174 Move W2, 88
	175 Call 0x3EB2AC0
	176 Add X0, X31, 0
	177 Add X1, X31, 176
	178 Move W2, 88
	179 Call 0x3EB2AC0
	180 Add X1, X31, 0
	181 Move X0, X21
	182 Move X2, X19
	183 Move X3, X31
	184 Call InputActionRebindingExtensions.AddBindingOverrideJsonTo, X0, X1, X2, X3
	185 Move X21, X31
	186 Move W23, 7
	187 Compare X20, 0
	188 JumpIfEqual {210}
	189 Move X8, [X20]
	190 Move X1, [X22]
	191 NotImplemented "Instruction LDRH not yet implemented."
	192 Compare X9, 0
	193 JumpIfEqual {200}
	194 Move X10, [X8+176]
	195 Add X10, X10, 8
	196 NotImplemented "Instruction LDUR not yet implemented."
	197 NotImplemented "Instruction CMP not yet implemented."
	198 Subtract X9, X9, 1
	199 Add X10, X10, 16
	200 Move X0, X20
	201 Move W2, W31
	202 Call 0x1C5D788
	203 NotImplemented "Instruction LDRSW not yet implemented."
	204 Add X8, X8, X9
	205 Add X0, X8, 312
	206 Move X8, [X0]
	207 Move X1, [X0+8]
	208 Move X0, X20
	209 NotImplemented "Instruction BLR not yet implemented."
	210 Compare X21, 0
	211 JumpIfNotEqual {263}
	212 NotImplemented "Instruction CMP not yet implemented."
	213 Compare W23, 0
	214 JumpIfNotEqual {233}
	215 Compare X19, 0
	216 JumpIfEqual {243}
	217 Move W8, [X19+24]
	218 Compare W8, 0
	219 JumpIfEqual {228}
	220 Move X8, 0xA05000
	221 Move X8, [X8+1256]
	222 Add X1, X31, 88
	223 Move [X31+88], X19
	224 Move X0, [X8]
	225 Call 0x1C17E04
	226 Move X1, X31
	227 Call JsonUtility.ToJson, X0
	228 Move X8, 0x9B5000
	229 Move X8, [X8+632]
	230 Move X8, [X8]
	231 Move X8, [X8+184]
	232 Move X0, [X8]
	233 Move X20, [X31+320]
	234 Move X19, [X31+328]
	235 Move X22, [X31+304]
	236 Move X21, [X31+312]
	237 Move X24, [X31+288]
	238 Move X23, [X31+296]
	239 Move X29, [X31+272]
	240 Move X30, [X31+280]
	241 Add X31, X31, 336
	242 Return X0
	243 Call 0x1C17F20
	244 Move X0, 0x9B8000
	245 Move X0, [X0+1320]
	246 Call 0x1C17D08
	247 Call 0x1C17F10
	248 Move X19, X0
	249 Move X0, 0xA05000
	250 Move X0, [X0+1176]
	251 Call 0x1C17D08
	252 Move X1, X0
	253 Move X0, X19
	254 Move X2, X31
	255 Call ArgumentNullException..ctor, X0, X1
	256 Move X0, 0xA05000
	257 Move X0, [X0+1296]
	258 Call 0x1C17D08
	259 Move X1, X0
	260 Move X0, X19
	261 Call 0x1C17DEC
	262 Call 0x1C17F20
	263 Move X0, X21
	264 Call 0x1C17F18
	265 NotImplemented "Instruction CMP not yet implemented."
	266 Call 0x3EB2AD0
	267 Move X21, [X0]
	268 Call 0x3EB2AE0
	269 Move W23, W31
	270 Compare X20, 0
	271 JumpIfNotEqual {189}
	272 Move X19, X0
	273 Move X21, X31
	274 Move X19, X0
	275 Compare X20, 0
	276 JumpIfEqual {298}
	277 Move X8, [X20]
	278 Move X1, [X22]
	279 NotImplemented "Instruction LDRH not yet implemented."
	280 Compare X9, 0
	281 JumpIfEqual {288}
	282 Move X10, [X8+176]
	283 Add X10, X10, 8
	284 NotImplemented "Instruction LDUR not yet implemented."
	285 NotImplemented "Instruction CMP not yet implemented."
	286 Subtract X9, X9, 1
	287 Add X10, X10, 16
	288 Move X0, X20
	289 Move W2, W31
	290 Call 0x1C5D788
	291 NotImplemented "Instruction LDRSW not yet implemented."
	292 Add X8, X8, X9
	293 Add X0, X8, 312
	294 Move X8, [X0]
	295 Move X1, [X0+8]
	296 Move X0, X20
	297 NotImplemented "Instruction BLR not yet implemented."
	298 Compare X21, 0
	299 JumpIfNotEqual {302}
	300 Move X0, X19
	301 Call 0x1D2D690
	302 Move X0, X21
	303 Call 0x1C17F18
	304 Call 0x1991590

Method: System.String SaveBindingOverridesAsJson(UnityEngine.InputSystem.InputAction action)

Disassembly:
	0x03741BD4 LDR X0, [X0 + 0x5E8]
	0x03741BD8 BL 0x1C16D08
	0x03741BDC MOV X1, X0
	0x03741BE0 MOV X0, X20
	0x03741BE4 BL 0x1C16DEC
	0x03741BE8 BL 0x3EB1B20
	0x03741BEC STR S0, [X0 + 0xF4]
	0x03741BF0 RET
	0x03741BF4 STP X30, X23, [X31 - 0x30]!
	0x03741BF8 STP X22, X21, [X31 + 0x10]
	0x03741BFC STP X20, X19, [X31 + 0x20]
	0x03741C00 ADRP X21, 0xC9F000
	0x03741C04 LDRB W8, [X21 + 0xD5A]
	0x03741C08 MOV X20, X1
	0x03741C0C MOV X19, X0
	0x03741C10 TBNZ X8, 0x0, 0x3741C28
	0x03741C14 ADRP X0, 0xA04000
	0x03741C18 LDR X0, [X0 + 0x5F8]
	0x03741C1C BL 0x1C16CF4
	0x03741C20 MOVZ W8, 0x1
	0x03741C24 STRB W8, [X21 + 0xD5A]
	0x03741C28 MOV X0, X19
	0x03741C2C BL 0x37432C4
	0x03741C30 MOV X0, X20
	0x03741C34 MOV X1, X31
	0x03741C38 BL 0x32277A8
	0x03741C3C TBNZ X0, 0x0, 0x3741CD4
	0x03741C40 MOV X21, X19
	0x03741C44 LDR W8, [X21 + 0xA0]!
	0x03741C48 CMP W8, 0x1
	0x03741C4C ADD X22, X21, 0x8
	0x03741C50 B.LT 0x3741C98
	0x03741C54 MOV X23, X31
	0x03741C58 LDR X8, [X22]
	0x03741C5C CBZ X8, 0x3741CCC
	0x03741C60 LDR W9, [X8 + 0x18]
	0x03741C64 CMP X23, X9
	0x03741C68 B.CS 0x3741CD0
	0x03741C6C ADD X8, X8, X23, 0x3, LSL
	0x03741C70 LDR X0, [X8 + 0x20]
	0x03741C74 MOVZ W2, 0x3
	0x03741C78 MOV X1, X20
	0x03741C7C MOV X3, X31
	0x03741C80 BL 0x322590C
	0x03741C84 CBZ W0, 0x3741CB8
	0x03741C88 LDRSW X8, [X21]
	0x03741C8C ADD X23, X23, 0x1
	0x03741C90 CMP X23, X8
	0x03741C94 B.LT 0x3741C58
	0x03741C98 ADRP X8, 0xA04000
	0x03741C9C LDR X8, [X8 + 0x5F8]
	0x03741CA0 MOVZ W3, 0xA
	0x03741CA4 MOV X0, X22
	0x03741CA8 MOV X1, X21
	0x03741CAC LDR X4, [X8]
	0x03741CB0 MOV X2, X20
	0x03741CB4 BL 0x2174728
	0x03741CB8 MOV X0, X19
	0x03741CBC LDP X20, X19, [X31 + 0x20]
	0x03741CC0 LDP X22, X21, [X31 + 0x10]
	0x03741CC4 LDP X30, X23, [X31], #0x30
	0x03741CC8 RET
	0x03741CCC BL 0x1C16F20
	0x03741CD0 BL 0x1C16F28
	0x03741CD4 ADRP X0, 0x9B7000
	0x03741CD8 LDR X0, [X0 + 0x528]
	0x03741CDC BL 0x1C16D08
	0x03741CE0 BL 0x1C16F10
	0x03741CE4 MOV X19, X0
	0x03741CE8 ADRP X0, 0x9BD000
	0x03741CEC LDR X0, [X0 + 0x120]
	0x03741CF0 BL 0x1C16D08
	0x03741CF4 MOV X1, X0
	0x03741CF8 MOV X0, X19
	0x03741CFC MOV X2, X31
	0x03741D00 BL 0x330E100
	0x03741D04 ADRP X0, 0xA04000
	0x03741D08 LDR X0, [X0 + 0x600]
	0x03741D0C BL 0x1C16D08
	0x03741D10 MOV X1, X0
	0x03741D14 MOV X0, X19
	0x03741D18 BL 0x1C16DEC
	0x03741D1C STR X30, [X31 - 0x20]!
	0x03741D20 STP X20, X19, [X31 + 0x10]
	0x03741D24 MOV W19, W1
	0x03741D28 MOV X20, X0
	0x03741D2C BL 0x37432C4
	0x03741D30 LDR W8, [X20 + 0x168]
	0x03741D34 ANDS W31, W19, 0x1
	0x03741D38 MOVZ W9, 0x200
	0x03741D3C CSEL W9, W9, W31, NE
	0x03741D40 AND W8, W8, 0xFFFFFDFF
	0x03741D44 ORR W8, W8, W9, 0x0
	0x03741D48 STR W8, [X20 + 0x168]
	0x03741D4C MOV X0, X20
	0x03741D50 LDP X20, X19, [X31 + 0x10]
	0x03741D54 LDR X30, [X31], #0x20
	0x03741D58 RET
	0x03741D5C LDP X8, X1, [X0 + 0x80]
	0x03741D60 MOV X2, X31
	0x03741D64 MOV X0, X8
	0x03741D68 B 0x37577E0
	0x03741D6C STR X30, [X31 - 0x20]!
	0x03741D70 STP X20, X19, [X31 + 0x10]
	0x03741D74 MOV X19, X1
	0x03741D78 MOV X20, X0
	0x03741D7C BL 0x37432C4
	0x03741D80 STR X19, [X20 + 0xC0]
	0x03741D84 MOV X0, X20
	0x03741D88 LDP X20, X19, [X31 + 0x10]
	0x03741D8C LDR X30, [X31], #0x20
	0x03741D90 RET
	0x03741D94 STP X29, X30, [X31 - 0x60]!
	0x03741D98 STP X28, X27, [X31 + 0x10]
	0x03741D9C STP X26, X25, [X31 + 0x20]
	0x03741DA0 STP X24, X23, [X31 + 0x30]
	0x03741DA4 STP X22, X21, [X31 + 0x40]
	0x03741DA8 STP X20, X19, [X31 + 0x50]
	0x03741DAC SUB X31, X31, 0x1B0
	0x03741DB0 ADRP X21, 0xC9F000
	0x03741DB4 LDRB W8, [X21 + 0xD57]
	0x03741DB8 MOV W20, W1
	0x03741DBC MOV X19, X0
	0x03741DC0 ADD X24, X31, 0xA0
	0x03741DC4 TBNZ X8, 0x0, 0x3741E60
	0x03741DC8 ADRP X0, 0xA04000
	0x03741DCC LDR X0, [X0 + 0x608]
	0x03741DD0 BL 0x1C16CF4
	0x03741DD4 ADRP X0, 0xA04000
	0x03741DD8 LDR X0, [X0 + 0x610]
	0x03741DDC BL 0x1C16CF4
	0x03741DE0 ADRP X0, 0xA04000
	0x03741DE4 LDR X0, [X0 + 0x618]
	0x03741DE8 BL 0x1C16CF4
	0x03741DEC ADRP X0, 0x9B2000
	0x03741DF0 LDR X0, [X0 + 0x598]
	0x03741DF4 BL 0x1C16CF4
	0x03741DF8 ADRP X0, 0xA04000
	0x03741DFC LDR X0, [X0 + 0x620]
	0x03741E00 BL 0x1C16CF4
	0x03741E04 ADRP X0, 0xA04000
	0x03741E08 LDR X0, [X0 + 0x628]
	0x03741E0C BL 0x1C16CF4
	0x03741E10 ADRP X0, 0xA04000
	0x03741E14 LDR X0, [X0 + 0x630]
	0x03741E18 BL 0x1C16CF4
	0x03741E1C ADRP X0, 0x9D9000
	0x03741E20 LDR X0, [X0 + 0xFE8]
	0x03741E24 BL 0x1C16CF4
	0x03741E28 ADRP X0, 0xA04000
	0x03741E2C LDR X0, [X0 + 0x638]
	0x03741E30 BL 0x1C16CF4
	0x03741E34 ADRP X0, 0xA04000
	0x03741E38 LDR X0, [X0 + 0x108]
	0x03741E3C BL 0x1C16CF4
	0x03741E40 ADRP X0, 0xA04000
	0x03741E44 LDR X0, [X0 + 0x640]
	0x03741E48 BL 0x1C16CF4
	0x03741E4C ADRP X0, 0xA04000
	0x03741E50 LDR X0, [X0 + 0x648]
	0x03741E54 BL 0x1C16CF4
	0x03741E58 MOVZ W8, 0x1
	0x03741E5C STRB W8, [X21 + 0xD57]
	0x03741E60 MOVI V0.2D, 0x0
	0x03741E64 STP X31, X31, [X31 + 0x1A0]
	0x03741E68 STR X31, [X31 + 0x190]
	0x03741E6C STP X31, X31, [X31 + 0x120]
	0x03741E70 STR X31, [X31 + 0x130]
	0x03741E74 STR X31, [X31 + 0x110]
	0x03741E78 STP X31, X31, [X31 + 0xA0]
	0x03741E7C STR X31, [X31 + 0xB0]
	0x03741E80 STP X31, X31, [X31 + 0x90]
	0x03741E84 STP X31, X31, [X31 + 0x70]
	0x03741E88 STR X31, [X31 + 0x80]
	0x03741E8C STP V0, V0, [X24 + 0xD0]
	0x03741E90 STP V0, V0, [X24 + 0xB0]
	0x03741E94 STR V0, [X24 + 0xA]
	0x03741E98 STP V0, V0, [X24 + 0x50]
	0x03741E9C STP V0, V0, [X24 + 0x30]
	0x03741EA0 STR V0, [X24 + 0x2]
	0x03741EA4 STP X31, X31, [X31 + 0x60]
	0x03741EA8 TBNZ X20, 0x1F, 0x3742240
	0x03741EAC LDR X0, [X19 + 0x10]
	0x03741EB0 STR W20, [X19 + 0xB0]
	0x03741EB4 CBZ X0, 0x3742214
	0x03741EB8 BL 0x37345CC
	0x03741EBC UBFM X8, X1, 0x20, 0x3F
	0x03741EC0 CMP W8, W20
	0x03741EC4 B.LE 0x3742214
	0x03741EC8 LDR X0, [X19 + 0x10]
	0x03741ECC CBZ X0, 0x3742238
	0x03741ED0 BL 0x37345CC
	0x03741ED4 ADRP X8, 0xA04000
	0x03741ED8 LDR X8, [X8 + 0x108]
	0x03741EDC STP X0, X1, [X31 + 0x1A0]
	0x03741EE0 ADD X0, X31, 0x1A0
	0x03741EE4 MOV W1, W20
	0x03741EE8 LDR X2, [X8]
	0x03741EEC ADD X8, X31, 0x8
	0x03741EF0 BL 0x24FC334

ISIL:
	001 Move [X31-96], X29
	002 Move [X31+16], X30
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Subtract X31, X31, 416
	013 Move X20, 0xCA0000
	014 Move W8, [X20+3394]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {49}
	020 Move X0, 0xA05000
	021 Move X0, [X0+1256]
	022 Call 0x1C17CF4
	023 Move X0, 0xA05000
	024 Move X0, [X0+1312]
	025 Call 0x1C17CF4
	026 Move X0, 0xA05000
	027 Move X0, [X0+1320]
	028 Call 0x1C17CF4
	029 Move X0, 0xA05000
	030 Move X0, [X0+1328]
	031 Call 0x1C17CF4
	032 Move X0, 0xA05000
	033 Move X0, [X0+1272]
	034 Call 0x1C17CF4
	035 Move X0, 0xA05000
	036 Move X0, [X0+1280]
	037 Call 0x1C17CF4
	038 Move X0, 0xA05000
	039 Move X0, [X0+1288]
	040 Call 0x1C17CF4
	041 Move X0, 0xA05000
	042 Move X0, [X0+1336]
	043 Call 0x1C17CF4
	044 Move X0, 0x9B5000
	045 Move X0, [X0+632]
	046 Call 0x1C17CF4
	047 Move W8, 1
	048 Move [X20+3394], W8
	049 NotImplemented "Instruction MOVI not yet implemented."
	050 Move [X31+384], X31
	051 Move [X31+392], X31
	052 Move [X31+400], X31
	053 Move [X31+352], X31
	054 Move [X31+256], X31
	055 Move [X31+320], V0
	056 Move [X31+328], V0
	057 Move [X31+288], V0
	058 Move [X31+296], V0
	059 Move [X31+17], V0
	060 Move [X31+224], V0
	061 Move [X31+232], V0
	062 Move [X31+192], V0
	063 Move [X31+200], V0
	064 Move [X31+11], V0
	065 Compare X19, 0
	066 JumpIfEqual {183}
	067 Move X23, 0xA05000
	068 Move X20, 0xA05000
	069 Move X22, 0xA05000
	070 Move X21, [X19+200]
	071 Move X23, [X23+1288]
	072 Move X20, [X20+1272]
	073 Move X22, [X22+1336]
	074 Compare X21, 0
	075 JumpIfEqual {79}
	076 Move X8, [X21+80]
	077 NotImplemented "Instruction CMP not yet implemented."
	078 NotImplemented "Instruction CSET not yet implemented."
	079 Move X0, X19
	080 Call InputAction.CreateInternalActionMapForSingletonAction, X0
	081 Move X21, [X19+200]
	082 Move W25, 1
	083 Move X26, 0xA05000
	084 Move X26, [X26+1320]
	085 Move X0, [X23]
	086 Move X27, 0xA05000
	087 Move X23, 0xA05000
	088 Move X24, 0xA05000
	089 Move X27, [X27+1328]
	090 Move X23, [X23+1256]
	091 Move X24, [X24+1312]
	092 Call 0x1C17F10
	093 Move X1, [X20]
	094 Move X20, X0
	095 Call List`1<BindingOverrideJson>..ctor, X0
	096 Move X0, X19
	097 Call InputAction.get_bindings, X0
	098 Move X9, [X22]
	099 Move [X31+368], X0
	100 Move [X31+376], X1
	101 Add X8, X31, 88
	102 Add X0, X31, 368
	103 Move X1, X9
	104 Call 0x24FD188, X0
	105 NotImplemented "Instruction LDUR not yet implemented."
	106 Move X8, [X31+104]
	107 Move [X31+24], V0
	108 Move [X31+400], X8
	109 Move X1, [X26]
	110 Add X0, X31, 384
	111 Call 0x2BBDA5C, X0
	112 Move TEMP, X0
	113 And TEMP, TEMP, 1
	114 Compare TEMP, 1
	115 JumpIfNotEqual {151}
	116 Move X1, [X27]
	117 Add X8, X31, 88
	118 Add X0, X31, 384
	119 Call 0x2BBDA88, X0
	120 Add X0, X31, 272
	121 Add X1, X31, 88
	122 Move W2, 88
	123 Call 0x3EB2AC0
	124 Move X22, X19
	125 Move TEMP, X25
	126 And TEMP, TEMP, 1
	127 Compare TEMP, 1
	128 JumpIfEqual {138}
	129 Add X0, X31, 272
	130 Move X1, X19
	131 Move X2, X31
	132 Call InputBinding.TriggersAction, X0, X1
	133 Move TEMP, X0
	134 And TEMP, TEMP, 1
	135 Compare TEMP, 1
	136 JumpIfNotEqual {109}
	137 Move X22, X31
	138 Add X0, X31, 176
	139 Add X1, X31, 272
	140 Move W2, 88
	141 Call 0x3EB2AC0
	142 Add X0, X31, 0
	143 Add X1, X31, 176
	144 Move W2, 88
	145 Call 0x3EB2AC0
	146 Add X1, X31, 0
	147 Move X0, X21
	148 Move X2, X20
	149 Move X3, X22
	150 Call InputActionRebindingExtensions.AddBindingOverrideJsonTo, X0, X1, X2, X3
	151 Move X1, [X24]
	152 Add X0, X31, 384
	153 Call 0x2BBDA58, X0
	154 Compare X20, 0
	155 JumpIfEqual {201}
	156 Move W8, [X20+24]
	157 Compare W8, 0
	158 JumpIfEqual {165}
	159 Move X0, [X23]
	160 Add X1, X31, 88
	161 Move [X31+88], X20
	162 Call 0x1C17E04
	163 Move X1, X31
	164 Call JsonUtility.ToJson, X0
	165 Move X8, 0x9B5000
	166 Move X8, [X8+632]
	167 Move X8, [X8]
	168 Move X8, [X8+184]
	169 Move X0, [X8]
	170 Add X31, X31, 416
	171 Move X20, [X31+80]
	172 Move X19, [X31+88]
	173 Move X22, [X31+64]
	174 Move X21, [X31+72]
	175 Move X24, [X31+48]
	176 Move X23, [X31+56]
	177 Move X26, [X31+32]
	178 Move X25, [X31+40]
	179 Move X30, [X31+16]
	180 Move X27, [X31+24]
	181 Move X29, [X31+96]
	182 Return X0
	183 Move X0, 0x9B8000
	184 Move X0, [X0+1320]
	185 Call 0x1C17D08
	186 Call 0x1C17F10
	187 Move X19, X0
	188 Move X0, 0x9DB000
	189 Move X0, [X0+3064]
	190 Call 0x1C17D08
	191 Move X1, X0
	192 Move X0, X19
	193 Move X2, X31
	194 Call ArgumentNullException..ctor, X0, X1
	195 Move X0, 0xA05000
	196 Move X0, [X0+1344]
	197 Call 0x1C17D08
	198 Move X1, X0
	199 Move X0, X19
	200 Call 0x1C17DEC
	201 Call 0x1C17F20
	202 Move X19, X0
	203 NotImplemented "Instruction CMP not yet implemented."
	204 Move X0, X19
	205 Call 0x3EB2AD0
	206 Move X21, [X0]
	207 Call 0x3EB2AE0
	208 Move X1, [X24]
	209 Add X0, X31, 384
	210 Call 0x2BBDA58, X0
	211 Compare X21, 0
	212 JumpIfEqual {154}
	213 Move X0, X21
	214 Call 0x1C17F18
	215 Move X21, X31
	216 Move X19, X0
	217 Move X1, [X24]
	218 Add X0, X31, 384
	219 Call 0x2BBDA58, X0
	220 Compare X21, 0
	221 JumpIfNotEqual {224}
	222 Move X0, X19
	223 Call 0x1D2D690
	224 Move X0, X21
	225 Call 0x1C17F18
	226 Call 0x1991590

Method: System.Void AddBindingOverrideJsonTo(UnityEngine.InputSystem.IInputActionCollection2 actions, UnityEngine.InputSystem.InputBinding binding, System.Collections.Generic.List`1<UnityEngine.InputSystem.InputActionMap/BindingOverrideJson> list, UnityEngine.InputSystem.InputAction action = null)

Disassembly:
	0x037419B0 MOV X1, X19
	0x037419B4 MOV X2, X31
	0x037419B8 MOV X20, X0
	0x037419BC BL 0x337DF1C
	0x037419C0 ADRP X0, 0xA04000
	0x037419C4 LDR X0, [X0 + 0x5C0]
	0x037419C8 BL 0x1C16D08
	0x037419CC MOV X1, X0
	0x037419D0 MOV X0, X20
	0x037419D4 BL 0x1C16DEC
	0x037419D8 STR X30, [X31 - 0x30]!
	0x037419DC STP X22, X21, [X31 + 0x10]
	0x037419E0 STP X20, X19, [X31 + 0x20]
	0x037419E4 ADRP X22, 0xC9F000
	0x037419E8 ADRP X21, 0xA04000
	0x037419EC ADRP X20, 0xA04000
	0x037419F0 LDRB W8, [X22 + 0xD69]
	0x037419F4 LDR X21, [X21 + 0x5D8]
	0x037419F8 LDR X20, [X20 + 0x5E0]
	0x037419FC MOV X19, X0
	0x03741A00 TBNZ X8, 0x0, 0x3741A24
	0x03741A04 ADRP X0, 0xA04000
	0x03741A08 LDR X0, [X0 + 0x5E0]
	0x03741A0C BL 0x1C16CF4
	0x03741A10 ADRP X0, 0xA04000
	0x03741A14 LDR X0, [X0 + 0x5D8]
	0x03741A18 BL 0x1C16CF4
	0x03741A1C MOVZ W8, 0x1
	0x03741A20 STRB W8, [X22 + 0xD69]
	0x03741A24 MOVZ W9, 0xCCCD
	0x03741A28 MOVN W8, 0x0
	0x03741A2C MOVK W9, 0x3E4C0000
	0x03741A30 STR W8, [X19 + 0xB0]
	0x03741A34 STR W9, [X19 + 0xC8]
	0x03741A38 LDR X0, [X21]
	0x03741A3C BL 0x1C16F10
	0x03741A40 LDR X1, [X20]
	0x03741A44 MOV X20, X0
	0x03741A48 BL 0x2AB41F4
	0x03741A4C STR X20, [X19 + 0x170]
	0x03741A50 MOV X0, X19
	0x03741A54 LDP X20, X19, [X31 + 0x20]
	0x03741A58 LDP X22, X21, [X31 + 0x10]
	0x03741A5C MOV X1, X31
	0x03741A60 LDR X30, [X31], #0x30
	0x03741A64 B 0x33BDD8C
	0x03741A68 SUB X31, X31, 0x70
	0x03741A6C STR X30, [X31 + 0x40]
	0x03741A70 STP X22, X21, [X31 + 0x50]
	0x03741A74 STP X20, X19, [X31 + 0x60]
	0x03741A78 MRS X21, 0xC000
	0x03741A7C LDR X8, [X21 + 0x28]
	0x03741A80 ADRP X22, 0xC9F000
	0x03741A84 MOV X20, X1
	0x03741A88 MOV X19, X0
	0x03741A8C STR X8, [X31 + 0x38]
	0x03741A90 LDRB W8, [X22 + 0xD55]
	0x03741A94 TBNZ X8, 0x0, 0x3741AAC
	0x03741A98 ADRP X0, 0xA04000
	0x03741A9C LDR X0, [X0 + 0x350]
	0x03741AA0 BL 0x1C16CF4
	0x03741AA4 MOVZ W8, 0x1
	0x03741AA8 STRB W8, [X22 + 0xD55]
	0x03741AAC MOV X0, X19
	0x03741AB0 BL 0x37432C4
	0x03741AB4 CBZ X20, 0x3741B4C
	0x03741AB8 ADD X8, X31, 0x8
	0x03741ABC MOV X0, X20
	0x03741AC0 BL 0x37347B4
	0x03741AC4 LDRB W8, [X31 + 0x8]
	0x03741AC8 CBNZ W8, 0x3741B94
	0x03741ACC STR X20, [X19 + 0x10]
	0x03741AD0 LDR X0, [X20 + 0x20]
	0x03741AD4 MOV X1, X31
	0x03741AD8 BL 0x32277A8
	0x03741ADC TBZ X0, 0x0, 0x3741AFC
	0x03741AE0 LDR W8, [X20 + 0x18]
	0x03741AE4 CMP W8, 0x1
	0x03741AE8 B.NE 0x3741B24
	0x03741AEC ADRP X8, 0xA04000
	0x03741AF0 LDR X8, [X8 + 0x350]
	0x03741AF4 LDR X20, [X8]
	0x03741AF8 B 0x3741B00
	0x03741AFC LDR X20, [X20 + 0x20]
	0x03741B00 MOV X0, X19
	0x03741B04 BL 0x37432C4
	0x03741B08 ADD X0, X31, 0x8
	0x03741B0C MOV X1, X20
	0x03741B10 MOV X2, X31
	0x03741B14 STP X31, X31, [X31 + 0x8]
	0x03741B18 BL 0x3757420
	0x03741B1C LDUR V0, [X31 + 0x8]
	0x03741B20 STR V0, [X19 + 0x8]
	0x03741B24 LDR X8, [X21 + 0x28]
	0x03741B28 LDR X9, [X31 + 0x38]
	0x03741B2C CMP X8, X9
	0x03741B30 B.NE 0x3741BE8
	0x03741B34 MOV X0, X19
	0x03741B38 LDP X20, X19, [X31 + 0x60]
	0x03741B3C LDP X22, X21, [X31 + 0x50]
	0x03741B40 LDR X30, [X31 + 0x40]
	0x03741B44 ADD X31, X31, 0x70
	0x03741B48 RET
	0x03741B4C ADRP X0, 0x9B7000
	0x03741B50 LDR X0, [X0 + 0x528]
	0x03741B54 BL 0x1C16D08
	0x03741B58 BL 0x1C16F10
	0x03741B5C MOV X19, X0
	0x03741B60 ADRP X0, 0x9DA000
	0x03741B64 LDR X0, [X0 + 0xBF8]
	0x03741B68 BL 0x1C16D08
	0x03741B6C MOV X1, X0
	0x03741B70 MOV X0, X19
	0x03741B74 MOV X2, X31
	0x03741B78 BL 0x330E100
	0x03741B7C ADRP X0, 0xA04000
	0x03741B80 LDR X0, [X0 + 0x5E8]
	0x03741B84 BL 0x1C16D08
	0x03741B88 MOV X1, X0
	0x03741B8C MOV X0, X19
	0x03741B90 BL 0x1C16DEC
	0x03741B94 ADRP X0, 0xA04000
	0x03741B98 LDR X0, [X0 + 0x5F0]
	0x03741B9C BL 0x1C16D08
	0x03741BA0 MOV X1, X20
	0x03741BA4 MOV X2, X31
	0x03741BA8 BL 0x321EFD0
	0x03741BAC MOV X19, X0
	0x03741BB0 ADRP X0, 0x9B2000
	0x03741BB4 LDR X0, [X0 + 0x5B0]
	0x03741BB8 BL 0x1C16D08
	0x03741BBC BL 0x1C16F10
	0x03741BC0 MOV X1, X19
	0x03741BC4 MOV X2, X31
	0x03741BC8 MOV X20, X0
	0x03741BCC BL 0x337DF1C
	0x03741BD0 ADRP X0, 0xA04000

ISIL:
	001 Subtract X31, X31, 336
	002 Move [X31+272], X29
	003 Move [X31+288], X30
	004 Move [X31+296], X23
	005 Move [X31+304], X22
	006 Move [X31+312], X21
	007 Move [X31+320], X20
	008 Move [X31+328], X19
	009 Move X23, 0xCA0000
	010 Move W8, [X23+3395]
	011 Move X22, X3
	012 Move X19, X2
	013 Move X20, X1
	014 Move X21, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {33}
	019 Move X0, 0xA05000
	020 Move X0, [X0+1264]
	021 Call 0x1C17CF4
	022 Move X0, 0xA05000
	023 Move X0, [X0+1304]
	024 Call 0x1C17CF4
	025 Move X0, 0x9B4000
	026 Move X0, [X0+3784]
	027 Call 0x1C17CF4
	028 Move X0, 0x9B3000
	029 Move X0, [X0+2440]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X23+3395], W8
	033 NotImplemented "Instruction MOVI not yet implemented."
	034 Move X0, X20
	035 Move X1, X31
	036 Move [X31+160], X31
	037 Move [X31+128], V0
	038 Move [X31+136], V0
	039 Call InputBinding.get_hasOverrides, X0
	040 Move TEMP, X0
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfNotEqual {150}
	044 Compare X22, 0
	045 JumpIfNotEqual {78}
	046 Compare X21, 0
	047 JumpIfEqual {159}
	048 Move X10, 0xA05000
	049 Move X8, [X21]
	050 Move X22, [X20+48]
	051 Move X10, [X10+1264]
	052 NotImplemented "Instruction LDRH not yet implemented."
	053 Move X1, [X10]
	054 Compare X9, 0
	055 JumpIfEqual {62}
	056 Move X10, [X8+176]
	057 Add X10, X10, 8
	058 NotImplemented "Instruction LDUR not yet implemented."
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Subtract X9, X9, 1
	061 Add X10, X10, 16
	062 Move W2, 1
	063 Move X0, X21
	064 Call 0x1C5D788
	065 Move W9, [X10]
	066 Add W9, W9, 1
	067 Add X8, X8, W9
	068 Add X0, X8, 312
	069 Move X8, [X0]
	070 Move X3, [X0+8]
	071 Move X0, X21
	072 Move X1, X22
	073 Move W2, W31
	074 NotImplemented "Instruction BLR not yet implemented."
	075 Move X22, X0
	076 Compare X0, 0
	077 JumpIfEqual {91}
	078 Move X8, [X22+200]
	079 Compare X8, 0
	080 JumpIfEqual {91}
	081 Move X9, [X8+80]
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Move X0, [X8+16]
	084 Move X8, 0x9B4000
	085 Move X2, [X22+16]
	086 Move X8, [X8+3784]
	087 Move X3, X31
	088 Move X1, [X8]
	089 Call String.Concat, X0, X1, X2
	090 Move X21, X0
	091 Move X8, 0x9B3000
	092 Move X8, [X8+2440]
	093 Move X21, [X8]
	094 Add X0, X31, 40
	095 Move W2, 88
	096 Move X1, X20
	097 Call 0x3EB2AC0
	098 Add X8, X31, 128
	099 Add X0, X31, 40
	100 Move X1, X21
	101 Call BindingOverrideJson.FromBinding, X0, X1
	102 Move V0, [X31+128]
	103 Move V1, [X31+144]
	104 Move X8, [X31+160]
	105 Move [X31], V0
	106 Move [X31+8], V1
	107 Move [X31+32], X8
	108 Compare X19, 0
	109 JumpIfEqual {159}
	110 Move V0, [X31]
	111 Move V1, [X31+16]
	112 Move X8, [X31+32]
	113 Move X9, 0xA05000
	114 Move X9, [X9+1304]
	115 Move [X31+176], V0
	116 Move [X31+184], V1
	117 Move [X31+208], X8
	118 Move W11, [X19+28]
	119 Move X8, [X19+16]
	120 Move X10, [X9]
	121 Add W9, W11, 1
	122 Move [X19+28], W9
	123 Compare X8, 0
	124 JumpIfEqual {159}
	125 NotImplemented "Instruction LDRSW not yet implemented."
	126 Move W11, [X8+24]
	127 NotImplemented "Instruction CMP not yet implemented."
	128 Add W10, W9, 1
	129 Move [X19+24], W10
	130 Move X10, [X31+208]
	131 Move V0, [X31+176]
	132 Move V1, [X31+192]
	133 Move W11, 40
	134 NotImplemented "Instruction MADD not yet implemented."
	135 Move [X8+64], X10
	136 Move [X8+32], V0
	137 Move [X8+40], V1
	138 Move X8, [X10+32]
	139 Move V0, [X31+176]
	140 Move V1, [X31+192]
	141 Move X9, [X31+208]
	142 Add X1, X31, 224
	143 Move X8, [X8+192]
	144 Move X0, X19
	145 Move X2, [X8+112]
	146 Move [X31+224], V0
	147 Move [X31+232], V1
	148 Move [X31+256], X9
	149 Call List`1<BindingOverrideJson>.AddWithResize, X0, X1
	150 Move X20, [X31+320]
	151 Move X19, [X31+328]
	152 Move X22, [X31+304]
	153 Move X21, [X31+312]
	154 Move X30, [X31+288]
	155 Move X23, [X31+296]
	156 Move X29, [X31+272]
	157 Add X31, X31, 336
	158 Return 
	159 Call 0x1C17F20

Method: System.Void LoadBindingOverridesFromJson(UnityEngine.InputSystem.IInputActionCollection2 actions, System.String json, System.Boolean removeExisting = True)

Disassembly:
	0x03741EF4 ADD X0, X31, 0x140
	0x03741EF8 ADD X1, X31, 0x8
	0x03741EFC MOVZ W2, 0x58
	0x03741F00 BL 0x3EB1AC0
	0x03741F04 ADD X0, X31, 0x140
	0x03741F08 MOV X1, X31
	0x03741F0C BL 0x3749FA8
	0x03741F10 TBZ X0, 0x0, 0x3741FC8
	0x03741F14 LDR X0, [X19 + 0x10]
	0x03741F18 ADD X8, X31, 0x8
	0x03741F1C MOV W1, W20
	0x03741F20 MOV X2, X31
	0x03741F24 BL 0x374759C
	0x03741F28 LDR X8, [X31 + 0x18]
	0x03741F2C LDUR V0, [X31 + 0x8]
	0x03741F30 ADD X0, X31, 0x120
	0x03741F34 MOV X1, X31
	0x03741F38 STR X8, [X31 + 0x130]
	0x03741F3C ADD X8, X31, 0x8
	0x03741F40 MOV X2, X31
	0x03741F44 STR V0, [X24 + 0x8]
	0x03741F48 BL 0x3749F70
	0x03741F4C LDR X8, [X31 + 0x18]
	0x03741F50 LDUR V0, [X31 + 0x8]
	0x03741F54 ADD X0, X31, 0x120
	0x03741F58 MOV X1, X31
	0x03741F5C STR X8, [X31 + 0x130]
	0x03741F60 ADD X8, X31, 0x8
	0x03741F64 STR V0, [X24 + 0x8]
	0x03741F68 BL 0x3748C94
	0x03741F6C ADD X0, X31, 0xC0
	0x03741F70 ADD X1, X31, 0x8
	0x03741F74 MOVZ W2, 0x58
	0x03741F78 BL 0x3EB1AC0
	0x03741F7C ADD X0, X31, 0xC0
	0x03741F80 MOV X1, X31
	0x03741F84 BL 0x37523FC
	0x03741F88 LDR X1, [X31 + 0x140]
	0x03741F8C MOV X2, X31
	0x03741F90 BL 0x3753174
	0x03741F94 MOV X1, X31
	0x03741F98 MOV X20, X0
	0x03741F9C BL 0x32277A8
	0x03741FA0 TBNZ X0, 0x0, 0x3741FC8
	0x03741FA4 MOV X0, X19
	0x03741FA8 BL 0x37432C4
	0x03741FAC ADD X0, X31, 0x8
	0x03741FB0 MOV X1, X20
	0x03741FB4 MOV X2, X31
	0x03741FB8 STP X31, X31, [X31 + 0x8]
	0x03741FBC BL 0x3757420
	0x03741FC0 LDUR V0, [X31 + 0x8]
	0x03741FC4 STR V0, [X19 + 0x8]
	0x03741FC8 LDR X8, [X19 + 0x10]
	0x03741FCC CBZ X8, 0x3742238
	0x03741FD0 LDR X9, [X8 + 0xC8]
	0x03741FD4 CBZ X9, 0x3741FEC
	0x03741FD8 LDR X10, [X9 + 0x50]
	0x03741FDC CMP X10, X8
	0x03741FE0 B.EQ 0x3741FEC
	0x03741FE4 LDR X20, [X9 + 0x20]
	0x03741FE8 B 0x3741FF0
	0x03741FEC MOV X20, X31
	0x03741FF0 ADRP X8, 0x9B2000
	0x03741FF4 LDR X8, [X8 + 0x598]
	0x03741FF8 LDR X0, [X8]
	0x03741FFC LDR W8, [X0 + 0xE0]
	0x03742000 CBNZ W8, 0x3742008
	0x03742004 BL 0x1C16DFC
	0x03742008 MOV X0, X20
	0x0374200C MOV X1, X31
	0x03742010 MOV X2, X31
	0x03742014 BL 0x3C354F8
	0x03742018 TBZ X0, 0x0, 0x3742214
	0x0374201C LDR X0, [X31 + 0x168]
	0x03742020 MOV X1, X31
	0x03742024 BL 0x32277A8
	0x03742028 TBNZ X0, 0x0, 0x3742214
	0x0374202C LDR X0, [X31 + 0x168]
	0x03742030 CBZ X0, 0x3742238
	0x03742034 MOVZ W1, 0x3B
	0x03742038 MOV W2, W31
	0x0374203C MOV X3, X31
	0x03742040 BL 0x3229AE8
	0x03742044 CBZ X0, 0x3742238
	0x03742048 LDR W8, [X0 + 0x18]
	0x0374204C MOV X21, X0
	0x03742050 CMP W8, 0x1
	0x03742054 B.LT 0x3742214
	0x03742058 ADRP X29, 0xA03000
	0x0374205C ADRP X26, 0xA03000
	0x03742060 ADRP X27, 0xA03000
	0x03742064 ADRP X28, 0xA03000
	0x03742068 LDR X29, [X29 + 0x640]
	0x0374206C LDR X26, [X26 + 0x630]
	0x03742070 LDR X27, [X27 + 0x610]
	0x03742074 LDR X28, [X28 + 0x618]
	0x03742078 MOV X25, X31
	0x0374207C ADRP X8, 0xA03000
	0x03742080 LDR X8, [X8 + 0x648]
	0x03742084 LDR X0, [X8]
	0x03742088 BL 0x1C16F10
	0x0374208C MOV X1, X31
	0x03742090 MOV X22, X0
	0x03742094 BL 0x33BDD8C
	0x03742098 LDR W8, [X21 + 0x18]
	0x0374209C CMP X25, X8
	0x037420A0 B.CS 0x374223C
	0x037420A4 CBZ X22, 0x3742238
	0x037420A8 ADD X8, X21, X25, 0x3, LSL
	0x037420AC LDR X8, [X8 + 0x20]
	0x037420B0 STR X8, [X22 + 0x10]
	0x037420B4 CBZ X20, 0x3742238
	0x037420B8 MOV X0, X20
	0x037420BC BL 0x37367C0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X19, 0xCA0000
	008 Move W8, [X19+3396]
	009 Move W22, W2
	010 Move X20, X1
	011 Move X21, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x9B3000
	017 Move X0, [X0+3584]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X19+3396], W8
	021 Compare X21, 0
	022 JumpIfEqual {69}
	023 Move X23, 0x9B3000
	024 Move X23, [X23+3584]
	025 Call InputActionRebindingExtensions.DeferBindingResolution
	026 Move X19, X0
	027 Move TEMP, X22
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfNotEqual {33}
	031 Move X0, X21
	032 Call InputActionRebindingExtensions.RemoveAllBindingOverrides, X0
	033 Move X0, X21
	034 Move X1, X20
	035 Call InputActionRebindingExtensions.LoadBindingOverridesFromJsonInternal, X0, X1
	036 Move X20, X31
	037 Compare X19, 0
	038 JumpIfEqual {60}
	039 Move X8, [X19]
	040 Move X1, [X23]
	041 NotImplemented "Instruction LDRH not yet implemented."
	042 Compare X9, 0
	043 JumpIfEqual {50}
	044 Move X10, [X8+176]
	045 Add X10, X10, 8
	046 NotImplemented "Instruction LDUR not yet implemented."
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Subtract X9, X9, 1
	049 Add X10, X10, 16
	050 Move X0, X19
	051 Move W2, W31
	052 Call 0x1C5D788
	053 NotImplemented "Instruction LDRSW not yet implemented."
	054 Add X8, X8, X9
	055 Add X0, X8, 312
	056 Move X8, [X0]
	057 Move X1, [X0+8]
	058 Move X0, X19
	059 NotImplemented "Instruction BLR not yet implemented."
	060 Compare X20, 0
	061 JumpIfNotEqual {87}
	062 Move X20, [X31+32]
	063 Move X19, [X31+40]
	064 Move X22, [X31+16]
	065 Move X21, [X31+24]
	066 Move X30, [X31+48]
	067 Move X23, [X31+56]
	068 Return 
	069 Move X0, 0x9B8000
	070 Move X0, [X0+1320]
	071 Call 0x1C17D08
	072 Call 0x1C17F10
	073 Move X19, X0
	074 Move X0, 0xA05000
	075 Move X0, [X0+1176]
	076 Call 0x1C17D08
	077 Move X1, X0
	078 Move X0, X19
	079 Move X2, X31
	080 Call ArgumentNullException..ctor, X0, X1
	081 Move X0, 0xA05000
	082 Move X0, [X0+1352]
	083 Call 0x1C17D08
	084 Move X1, X0
	085 Move X0, X19
	086 Call 0x1C17DEC
	087 Move X0, X20
	088 Call 0x1C17F18
	089 Move X21, X0
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Move X0, X21
	092 Call 0x3EB2AD0
	093 Move X20, [X0]
	094 Call 0x3EB2AE0
	095 Move X20, X31
	096 Move X21, X0
	097 Compare X19, 0
	098 JumpIfEqual {120}
	099 Move X8, [X19]
	100 Move X1, [X23]
	101 NotImplemented "Instruction LDRH not yet implemented."
	102 Compare X9, 0
	103 JumpIfEqual {110}
	104 Move X10, [X8+176]
	105 Add X10, X10, 8
	106 NotImplemented "Instruction LDUR not yet implemented."
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Subtract X9, X9, 1
	109 Add X10, X10, 16
	110 Move X0, X19
	111 Move W2, W31
	112 Call 0x1C5D788
	113 NotImplemented "Instruction LDRSW not yet implemented."
	114 Add X8, X8, X9
	115 Add X0, X8, 312
	116 Move X8, [X0]
	117 Move X1, [X0+8]
	118 Move X0, X19
	119 NotImplemented "Instruction BLR not yet implemented."
	120 Compare X20, 0
	121 JumpIfNotEqual {124}
	122 Move X0, X21
	123 Call 0x1D2D690
	124 Move X0, X20
	125 Call 0x1C17F18
	126 Call 0x1991590

Method: System.Void LoadBindingOverridesFromJson(UnityEngine.InputSystem.InputAction action, System.String json, System.Boolean removeExisting = True)

Disassembly:
	0x03742438 CBNZ W8, 0x3742440
	0x0374243C BL 0x1C16DFC
	0x03742440 MOV X0, X21
	0x03742444 MOV X1, X31
	0x03742448 MOV X2, X31
	0x0374244C BL 0x3395194
	0x03742450 TBZ X0, 0x0, 0x374245C
	0x03742454 MOVZ W0, 0x1
	0x03742458 B 0x374249C
	0x0374245C ADRP X8, 0x9D9000
	0x03742460 LDR X0, [X23]
	0x03742464 LDR X8, [X8 + 0xC38]
	0x03742468 LDR W9, [X0 + 0xE0]
	0x0374246C LDR X21, [X8]
	0x03742470 CBNZ W9, 0x3742478
	0x03742474 BL 0x1C16DFC
	0x03742478 MOV X0, X21
	0x0374247C MOV X1, X31
	0x03742480 BL 0x338C698
	0x03742484 CBZ X0, 0x374255C
	0x03742488 LDR X8, [X0]
	0x0374248C LDR X1, [X19 + 0x80]
	0x03742490 LDR X9, [X8 + 0x2A8]
	0x03742494 LDR X2, [X8 + 0x2B0]
	0x03742498 BLR X9
	0x0374249C AND W8, W0, 0x1
	0x037424A0 STRB W8, [X19 + 0x91]
	0x037424A4 LDR X0, [X23]
	0x037424A8 LDR X21, [X19 + 0x80]
	0x037424AC LDR W8, [X0 + 0xE0]
	0x037424B0 CBNZ W8, 0x37424B8
	0x037424B4 BL 0x1C16DFC
	0x037424B8 MOV X0, X21
	0x037424BC MOV X1, X31
	0x037424C0 MOV X2, X31
	0x037424C4 BL 0x3395194
	0x037424C8 TBZ X0, 0x0, 0x37424D4
	0x037424CC MOVZ W0, 0x1
	0x037424D0 B 0x3742514
	0x037424D4 ADRP X8, 0x9D9000
	0x037424D8 LDR X0, [X23]
	0x037424DC LDR X8, [X8 + 0xC18]
	0x037424E0 LDR W9, [X0 + 0xE0]
	0x037424E4 LDR X21, [X8]
	0x037424E8 CBNZ W9, 0x37424F0
	0x037424EC BL 0x1C16DFC
	0x037424F0 MOV X0, X21
	0x037424F4 MOV X1, X31
	0x037424F8 BL 0x338C698
	0x037424FC CBZ X0, 0x374255C
	0x03742500 LDR X8, [X0]
	0x03742504 LDR X1, [X19 + 0x80]
	0x03742508 LDR X9, [X8 + 0x2A8]
	0x0374250C LDR X2, [X8 + 0x2B0]
	0x03742510 BLR X9
	0x03742514 AND W8, W0, 0x1
	0x03742518 ADD X0, X31, 0x8
	0x0374251C MOVZ W2, 0x78
	0x03742520 MOV X1, X20
	0x03742524 STRB W8, [X19 + 0x90]
	0x03742528 ADD X21, X31, 0x8
	0x0374252C BL 0x3EB1AC0
	0x03742530 ADD X1, X21, 0x10
	0x03742534 ADD X0, X19, 0x28
	0x03742538 MOVZ W2, 0x58
	0x0374253C BL 0x3EB1AC0
	0x03742540 MOV X0, X19
	0x03742544 LDP X20, X19, [X31 + 0xB0]
	0x03742548 LDP X22, X21, [X31 + 0xA0]
	0x0374254C LDP X24, X23, [X31 + 0x90]
	0x03742550 LDR X30, [X31 + 0x80]
	0x03742554 ADD X31, X31, 0xC0
	0x03742558 B 0x3742784
	0x0374255C BL 0x1C16F20
	0x03742560 SUB X31, X31, 0x180
	0x03742564 STR X29, [X31 + 0x150]
	0x03742568 STP X30, X21, [X31 + 0x160]
	0x0374256C STP X20, X19, [X31 + 0x170]
	0x03742570 ADRP X20, 0xC9E000
	0x03742574 ADRP X21, 0xA03000
	0x03742578 LDRB W8, [X20 + 0xD49]
	0x0374257C LDR X21, [X21 + 0x658]
	0x03742580 MOV X19, X0
	0x03742584 TBNZ X8, 0x0, 0x374259C
	0x03742588 ADRP X0, 0xA03000
	0x0374258C LDR X0, [X0 + 0x658]
	0x03742590 BL 0x1C16CF4
	0x03742594 MOVZ W8, 0x1
	0x03742598 STRB W8, [X20 + 0xD49]
	0x0374259C LDR X20, [X19]
	0x037425A0 ADD X1, X19, 0x8
	0x037425A4 ADD X0, X31, 0xA8
	0x037425A8 MOVZ W2, 0x78
	0x037425AC BL 0x3EB1AC0
	0x037425B0 LDR W19, [X19 + 0x80]
	0x037425B4 ADD X0, X31, 0x0
	0x037425B8 MOVZ W2, 0xA8
	0x037425BC MOV W1, W31
	0x037425C0 BL 0x3EB1B10
	0x037425C4 ADD X0, X31, 0x0
	0x037425C8 ADD X2, X31, 0xA8
	0x037425CC MOV X1, X20
	0x037425D0 MOV W3, W19
	0x037425D4 BL 0x3742318
	0x037425D8 ADD X0, X31, 0xA8
	0x037425DC ADD X1, X31, 0x0
	0x037425E0 MOVZ W2, 0xA8
	0x037425E4 BL 0x3EB1AC0
	0x037425E8 ADD X0, X31, 0x0
	0x037425EC ADD X1, X31, 0xA8
	0x037425F0 MOVZ W2, 0xA8
	0x037425F4 BL 0x3EB1AC0
	0x037425F8 LDR X0, [X21]
	0x037425FC ADD X1, X31, 0x0
	0x03742600 BL 0x1C16E04
	0x03742604 LDP X20, X19, [X31 + 0x170]
	0x03742608 LDP X30, X21, [X31 + 0x160]
	0x0374260C LDR X29, [X31 + 0x150]
	0x03742610 ADD X31, X31, 0x180
	0x03742614 RET

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X19, 0xC9F000
	008 Move W8, [X19+3397]
	009 Move W22, W2
	010 Move X20, X1
	011 Move X21, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x9B2000
	017 Move X0, [X0+3584]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X19+3397], W8
	021 Compare X21, 0
	022 JumpIfEqual {74}
	023 Move X23, 0x9B2000
	024 Move X23, [X23+3584]
	025 Call InputActionRebindingExtensions.DeferBindingResolution
	026 Move X19, X0
	027 Move TEMP, X22
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfNotEqual {33}
	031 Move X0, X21
	032 Call InputActionRebindingExtensions.RemoveAllBindingOverrides, X0
	033 Move X0, [X21+200]
	034 Compare X0, 0
	035 JumpIfNotEqual {39}
	036 Move X0, X21
	037 Call InputAction.CreateInternalActionMapForSingletonAction, X0
	038 Move X0, [X21+200]
	039 Move X1, X20
	040 Call InputActionRebindingExtensions.LoadBindingOverridesFromJsonInternal, X0, X1
	041 Move X20, X31
	042 Compare X19, 0
	043 JumpIfEqual {65}
	044 Move X8, [X19]
	045 Move X1, [X23]
	046 NotImplemented "Instruction LDRH not yet implemented."
	047 Compare X9, 0
	048 JumpIfEqual {55}
	049 Move X10, [X8+176]
	050 Add X10, X10, 8
	051 NotImplemented "Instruction LDUR not yet implemented."
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Subtract X9, X9, 1
	054 Add X10, X10, 16
	055 Move X0, X19
	056 Move W2, W31
	057 Call 0x1C5D788
	058 NotImplemented "Instruction LDRSW not yet implemented."
	059 Add X8, X8, X9
	060 Add X0, X8, 312
	061 Move X8, [X0]
	062 Move X1, [X0+8]
	063 Move X0, X19
	064 NotImplemented "Instruction BLR not yet implemented."
	065 Compare X20, 0
	066 JumpIfNotEqual {92}
	067 Move X20, [X31+32]
	068 Move X19, [X31+40]
	069 Move X22, [X31+16]
	070 Move X21, [X31+24]
	071 Move X30, [X31+48]
	072 Move X23, [X31+56]
	073 Return 
	074 Move X0, 0x9B7000
	075 Move X0, [X0+1320]
	076 Call 0x1C17D08
	077 Call 0x1C17F10
	078 Move X19, X0
	079 Move X0, 0x9DA000
	080 Move X0, [X0+3064]
	081 Call 0x1C17D08
	082 Move X1, X0
	083 Move X0, X19
	084 Move X2, X31
	085 Call ArgumentNullException..ctor, X0, X1
	086 Move X0, 0xA04000
	087 Move X0, [X0+1408]
	088 Call 0x1C17D08
	089 Move X1, X0
	090 Move X0, X19
	091 Call 0x1C17DEC
	092 Move X0, X20
	093 Call 0x1C17F18
	094 Move X21, X0
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Move X0, X21
	097 Call 0x3EB2AD0
	098 Move X20, [X0]
	099 Call 0x3EB2AE0
	100 Move X20, X31
	101 Move X21, X0
	102 Compare X19, 0
	103 JumpIfEqual {125}
	104 Move X8, [X19]
	105 Move X1, [X23]
	106 NotImplemented "Instruction LDRH not yet implemented."
	107 Compare X9, 0
	108 JumpIfEqual {115}
	109 Move X10, [X8+176]
	110 Add X10, X10, 8
	111 NotImplemented "Instruction LDUR not yet implemented."
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Subtract X9, X9, 1
	114 Add X10, X10, 16
	115 Move X0, X19
	116 Move W2, W31
	117 Call 0x1C5D788
	118 NotImplemented "Instruction LDRSW not yet implemented."
	119 Add X8, X8, X9
	120 Add X0, X8, 312
	121 Move X8, [X0]
	122 Move X1, [X0+8]
	123 Move X0, X19
	124 NotImplemented "Instruction BLR not yet implemented."
	125 Compare X20, 0
	126 JumpIfNotEqual {129}
	127 Move X0, X21
	128 Call 0x1D2D690
	129 Move X0, X20
	130 Call 0x1C17F18
	131 Call 0x1991590

Method: System.Void LoadBindingOverridesFromJsonInternal(UnityEngine.InputSystem.IInputActionCollection2 actions, System.String json)

Disassembly:
	0x037420C0 ADRP X8, 0xA03000
	0x037420C4 LDR X8, [X8 + 0x620]
	0x037420C8 STP X0, X1, [X31 + 0x90]
	0x037420CC LDR X8, [X8]
	0x037420D0 MOV X0, X8
	0x037420D4 BL 0x1C16F10
	0x037420D8 LDR X2, [X29]
	0x037420DC MOV X1, X22
	0x037420E0 MOV X3, X31
	0x037420E4 MOV X23, X0
	0x037420E8 BL 0x24ABDFC
	0x037420EC LDR X2, [X26]
	0x037420F0 ADD X0, X31, 0x90
	0x037420F4 MOV X1, X23
	0x037420F8 BL 0x24FC490
	0x037420FC ADDS W31, W0, 0x1
	0x03742100 B.EQ 0x37421BC
	0x03742104 MOV W22, W0
	0x03742108 MOV X0, X20
	0x0374210C BL 0x37367C0
	0x03742110 ADRP X8, 0xA03000
	0x03742114 LDR X8, [X8 + 0x638]
	0x03742118 STP X0, X1, [X31 + 0x90]
	0x0374211C ADD X0, X31, 0x90
	0x03742120 MOV W1, W22
	0x03742124 LDR X2, [X8]
	0x03742128 ADD X8, X31, 0x8
	0x0374212C BL 0x24FC748
	0x03742130 LDUR V0, [X31 + 0x8]
	0x03742134 LDR X8, [X31 + 0x18]
	0x03742138 ADD X0, X31, 0xA0
	0x0374213C MOV X1, X31
	0x03742140 STR V0, [X24]
	0x03742144 STR X8, [X31 + 0xB0]
	0x03742148 BL 0x376B214
	0x0374214C ADRP X8, 0xA03000
	0x03742150 LDR X8, [X8 + 0x628]
	0x03742154 STP X0, X1, [X31 + 0x60]
	0x03742158 ADD X0, X31, 0x60
	0x0374215C LDR X9, [X8]
	0x03742160 ADD X8, X31, 0x8
	0x03742164 MOV X1, X9
	0x03742168 BL 0x24FF398
	0x0374216C LDUR V0, [X31 + 0x8]
	0x03742170 LDR X8, [X31 + 0x18]
	0x03742174 STR V0, [X31 + 0x7]
	0x03742178 STR X8, [X31 + 0x80]
	0x0374217C LDR X1, [X27]
	0x03742180 ADD X0, X31, 0x70
	0x03742184 BL 0x2BDEAA0
	0x03742188 TBZ X0, 0x0, 0x37421A8
	0x0374218C LDR X1, [X28]
	0x03742190 ADD X0, X31, 0x70
	0x03742194 BL 0x2BDEACC
	0x03742198 MOV X1, X0
	0x0374219C MOV X0, X19
	0x037421A0 BL 0x374356C
	0x037421A4 B 0x374217C
	0x037421A8 ADRP X8, 0xA03000
	0x037421AC LDR X8, [X8 + 0x608]
	0x037421B0 ADD X0, X31, 0x70
	0x037421B4 LDR X1, [X8]
	0x037421B8 BL 0x2BDEA9C
	0x037421BC LDRSW X8, [X21 + 0x18]
	0x037421C0 ADD X25, X25, 0x1
	0x037421C4 CMP X25, X8
	0x037421C8 B.LT 0x374207C
	0x037421CC B 0x3742214
	0x037421D0 B 0x37421D8
	0x037421D4 B 0x37421D8
	0x037421D8 MOV X22, X0
	0x037421DC CMP W1, 0x1
	0x037421E0 B.NE 0x3742288
	0x037421E4 MOV X0, X22
	0x037421E8 BL 0x3EB1AD0
	0x037421EC LDR X23, [X0]
	0x037421F0 BL 0x3EB1AE0
	0x037421F4 ADRP X8, 0xA03000
	0x037421F8 LDR X8, [X8 + 0x608]
	0x037421FC ADD X0, X31, 0x70
	0x03742200 LDR X1, [X8]
	0x03742204 BL 0x2BDEA9C
	0x03742208 CBZ X23, 0x37421BC
	0x0374220C MOV X0, X23
	0x03742210 BL 0x1C16F18
	0x03742214 MOV X0, X19
	0x03742218 ADD X31, X31, 0x1B0
	0x0374221C LDP X20, X19, [X31 + 0x50]
	0x03742220 LDP X22, X21, [X31 + 0x40]
	0x03742224 LDP X24, X23, [X31 + 0x30]
	0x03742228 LDP X26, X25, [X31 + 0x20]
	0x0374222C LDP X28, X27, [X31 + 0x10]
	0x03742230 LDP X29, X30, [X31], #0x60
	0x03742234 RET
	0x03742238 BL 0x1C16F20
	0x0374223C BL 0x1C16F28
	0x03742240 ADRP X0, 0x9B9000
	0x03742244 LDR X0, [X0 + 0x760]
	0x03742248 BL 0x1C16D08
	0x0374224C BL 0x1C16F10
	0x03742250 MOV X19, X0
	0x03742254 ADRP X0, 0xA03000
	0x03742258 LDR X0, [X0 + 0x378]
	0x0374225C BL 0x1C16D08
	0x03742260 MOV X1, X0
	0x03742264 MOV X0, X19
	0x03742268 MOV X2, X31
	0x0374226C BL 0x3316014
	0x03742270 ADRP X0, 0xA03000
	0x03742274 LDR X0, [X0 + 0x650]
	0x03742278 BL 0x1C16D08
	0x0374227C MOV X1, X0
	0x03742280 MOV X0, X19
	0x03742284 BL 0x1C16DEC
	0x03742288 MOV X23, X31
	0x0374228C B 0x3742294
	0x03742290 MOV X22, X0
	0x03742294 ADRP X8, 0xA03000
	0x03742298 LDR X8, [X8 + 0x608]
	0x0374229C LDR X1, [X8]
	0x037422A0 ADD X0, X31, 0x70
	0x037422A4 BL 0x2BDEA9C
	0x037422A8 CBNZ X23, 0x37422B4
	0x037422AC MOV X0, X22
	0x037422B0 BL 0x1D2C690
	0x037422B4 MOV X0, X23
	0x037422B8 BL 0x1C16F18
	0x037422BC BL 0x1990590
	0x037422C0 MOV X1, X31
	0x037422C4 B 0x33BDD8C
	0x037422C8 STR X30, [X31 - 0x20]!
	0x037422CC STP X20, X19, [X31 + 0x10]
	0x037422D0 ADRP X19, 0xC9E000
	0x037422D4 ADRP X20, 0xA02000
	0x037422D8 LDRB W8, [X19 + 0xD6A]
	0x037422DC LDR X20, [X20 + 0xF68]
	0x037422E0 TBNZ X8, 0x0, 0x37422F8
	0x037422E4 ADRP X0, 0xA02000
	0x037422E8 LDR X0, [X0 + 0xF68]
	0x037422EC BL 0x1C16CF4
	0x037422F0 MOVZ W8, 0x1
	0x037422F4 STRB W8, [X19 + 0xD6A]
	0x037422F8 LDR X8, [X20]
	0x037422FC LDP X20, X19, [X31 + 0x10]
	0x03742300 LDR X8, [X8 + 0xB8]
	0x03742304 LDR W9, [X8]
	0x03742308 ADD W9, W9, 0x1
	0x0374230C STR W9, [X8]
	0x03742310 LDR X30, [X31], #0x20
	0x03742314 RET
	0x03742318 SUB X31, X31, 0xC0
	0x0374231C STR X30, [X31 + 0x80]
	0x03742320 STP X24, X23, [X31 + 0x90]
	0x03742324 STP X22, X21, [X31 + 0xA0]
	0x03742328 STP X20, X19, [X31 + 0xB0]
	0x0374232C ADRP X24, 0xC9E000
	0x03742330 ADRP X23, 0x9B1000
	0x03742334 LDRB W8, [X24 + 0xD4B]
	0x03742338 LDR X23, [X23 + 0x6C0]
	0x0374233C MOV W21, W3
	0x03742340 MOV X20, X2
	0x03742344 MOV X22, X1
	0x03742348 MOV X19, X0
	0x0374234C TBNZ X8, 0x0, 0x3742388
	0x03742350 ADRP X0, 0x9D9000
	0x03742354 LDR X0, [X0 + 0xC18]
	0x03742358 BL 0x1C16CF4
	0x0374235C ADRP X0, 0x9D9000
	0x03742360 LDR X0, [X0 + 0xC20]
	0x03742364 BL 0x1C16CF4
	0x03742368 ADRP X0, 0x9D9000
	0x0374236C LDR X0, [X0 + 0xC38]
	0x03742370 BL 0x1C16CF4
	0x03742374 ADRP X0, 0x9B1000
	0x03742378 LDR X0, [X0 + 0x6C0]
	0x0374237C BL 0x1C16CF4
	0x03742380 MOVZ W8, 0x1
	0x03742384 STRB W8, [X24 + 0xD4B]
	0x03742388 ADD X0, X19, 0x8
	0x0374238C MOVZ W2, 0xA0
	0x03742390 MOV W1, W31
	0x03742394 BL 0x3EB1B10
	0x03742398 STR X22, [X19]
	0x0374239C LDR X8, [X20 + 0x8]
	0x037423A0 MOV X0, X20
	0x037423A4 STR W21, [X19 + 0x8]
	0x037423A8 STR X8, [X19 + 0x88]
	0x037423AC BL 0x37426D0
	0x037423B0 STR X0, [X19 + 0x80]
	0x037423B4 MOV X21, X0
	0x037423B8 LDR X0, [X23]
	0x037423BC LDR W8, [X0 + 0xE0]
	0x037423C0 CBNZ W8, 0x37423C8
	0x037423C4 BL 0x1C16DFC
	0x037423C8 MOV X0, X21
	0x037423CC MOV X1, X31
	0x037423D0 MOV X2, X31
	0x037423D4 BL 0x3395194
	0x037423D8 TBZ X0, 0x0, 0x37423E4
	0x037423DC MOVZ W0, 0x1
	0x037423E0 B 0x3742424
	0x037423E4 ADRP X8, 0x9D9000
	0x037423E8 LDR X0, [X23]
	0x037423EC LDR X8, [X8 + 0xC20]
	0x037423F0 LDR W9, [X0 + 0xE0]
	0x037423F4 LDR X21, [X8]
	0x037423F8 CBNZ W9, 0x3742400
	0x037423FC BL 0x1C16DFC
	0x03742400 MOV X0, X21
	0x03742404 MOV X1, X31
	0x03742408 BL 0x338C698
	0x0374240C CBZ X0, 0x374255C
	0x03742410 LDR X8, [X0]
	0x03742414 LDR X1, [X19 + 0x80]
	0x03742418 LDR X9, [X8 + 0x2A8]
	0x0374241C LDR X2, [X8 + 0x2B0]
	0x03742420 BLR X9
	0x03742424 AND W8, W0, 0x1
	0x03742428 STRB W8, [X19 + 0x92]
	0x0374242C LDR X0, [X23]
	0x03742430 LDR X21, [X19 + 0x80]
	0x03742434 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Subtract X31, X31, 464
	014 Move X21, 0xC9F000
	015 Move W8, [X21+3398]
	016 Move X20, X1
	017 Move X19, X0
	018 Add X24, X31, 208
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {49}
	023 Move X0, 0x9B2000
	024 Move X0, [X0+2600]
	025 Call 0x1C17CF4
	026 Move X0, 0xA04000
	027 Move X0, [X0+1360]
	028 Call 0x1C17CF4
	029 Move X0, 0xA04000
	030 Move X0, [X0+1368]
	031 Call 0x1C17CF4
	032 Move X0, 0xA04000
	033 Move X0, [X0+1376]
	034 Call 0x1C17CF4
	035 Move X0, 0xA04000
	036 Move X0, [X0+1264]
	037 Call 0x1C17CF4
	038 Move X0, 0xA04000
	039 Move X0, [X0+1384]
	040 Call 0x1C17CF4
	041 Move X0, 0xA04000
	042 Move X0, [X0+1392]
	043 Call 0x1C17CF4
	044 Move X0, 0xA04000
	045 Move X0, [X0+1400]
	046 Call 0x1C17CF4
	047 Move W8, 1
	048 Move [X21+3398], W8
	049 NotImplemented "Instruction MOVI not yet implemented."
	050 Move X0, X20
	051 Move X1, X31
	052 Move [X31+368], X31
	053 Move [X24+128], V0
	054 Move [X24+136], V0
	055 Move [X24+7], V0
	056 Move [X31+280], X31
	057 Call String.IsNullOrEmpty, X0
	058 Move TEMP, X0
	059 And TEMP, TEMP, 1
	060 Compare TEMP, 1
	061 JumpIfEqual {201}
	062 Move X8, 0xA04000
	063 Move X8, [X8+1384]
	064 Move X0, X20
	065 Move X1, [X8]
	066 Call JsonUtility.FromJson, X0
	067 Compare X0, 0
	068 JumpIfEqual {216}
	069 Move X8, 0xA04000
	070 Move X8, [X8+1392]
	071 Add X20, X31, 376
	072 Move X1, [X8]
	073 Add X8, X31, 376
	074 Call List`1<BindingOverrideJson>.GetEnumerator, X0
	075 Add X8, X31, 121
	076 NotImplemented "Instruction LDUR not yet implemented."
	077 Add X8, X31, 137
	078 NotImplemented "Instruction LDUR not yet implemented."
	079 Add X8, X31, 153
	080 Move X25, 0xA04000
	081 Move X27, 0x9B2000
	082 Move [X24+112], V0
	083 Move [X24+120], V1
	084 NotImplemented "Instruction LDUR not yet implemented."
	085 Move X8, [X31+424]
	086 Move X25, [X25+1368]
	087 Move X27, [X27+2600]
	088 Add X9, X31, 320
	089 Add X10, X31, 96
	090 Add X20, X20, 16
	091 Move [X24+9], V0
	092 Add X28, X9, 32
	093 Add X29, X10, 16
	094 Move [X31+368], X8
	095 Move X1, [X25]
	096 Add X0, X31, 320
	097 Call Enumerator<BindingOverrideJson>.MoveNext, X0
	098 Move TEMP, X0
	099 And TEMP, TEMP, 1
	100 Compare TEMP, 1
	101 JumpIfNotEqual {196}
	102 Move X8, [X28+16]
	103 Move V0, [X28]
	104 Move X26, [X31+336]
	105 Move X21, [X31+344]
	106 Move [X31+304], X8
	107 Move [X24+5], V0
	108 Move X0, X21
	109 Move X1, X31
	110 Call String.IsNullOrEmpty, X0
	111 Move TEMP, X0
	112 And TEMP, TEMP, 1
	113 Compare TEMP, 1
	114 JumpIfEqual {181}
	115 NotImplemented "Instruction MOVI not yet implemented."
	116 Move [X31+272], X31
	117 Move [X24+32], V0
	118 Move [X24+40], V0
	119 Move [X24], V0
	120 Move [X24+8], V0
	121 Compare X19, 0
	122 JumpIfEqual {215}
	123 Move X8, 0xA04000
	124 Move X8, [X8+1264]
	125 Add X0, X31, 136
	126 Add X1, X31, 208
	127 Move W2, 72
	128 Move X22, [X8]
	129 Call 0x3EB2AC0
	130 Move X8, [X19]
	131 NotImplemented "Instruction LDRH not yet implemented."
	132 Compare X9, 0
	133 JumpIfEqual {140}
	134 Move X10, [X8+176]
	135 Add X10, X10, 8
	136 NotImplemented "Instruction LDUR not yet implemented."
	137 NotImplemented "Instruction CMP not yet implemented."
	138 Subtract X9, X9, 1
	139 Add X10, X10, 16
	140 Move W2, 2
	141 Move X0, X19
	142 Move X1, X22
	143 Call 0x1C5D788
	144 Move X22, X0
	145 Move W9, [X10]
	146 Add W9, W9, 2
	147 Add X8, X8, W9
	148 Add X22, X8, 312
	149 Move X23, [X22]
	150 Add X1, X31, 136
	151 Move W2, 72
	152 Move X0, X20
	153 Move [X31+376], X31
	154 Move [X31+384], X21
	155 Call 0x3EB2AC0
	156 Move X3, [X22+8]
	157 Add X1, X31, 376
	158 Add X2, X31, 280
	159 Move X0, X19
	160 NotImplemented "Instruction BLR not yet implemented."
	161 Move W22, W0
	162 Add W31, W0, 1
	163 Move X8, [X31+304]
	164 Move V0, [X24+5]
	165 Move X23, [X31+280]
	166 Move [X29+16], X8
	167 Move [X29], V0
	168 Move [X31+96], X26
	169 Move [X31+104], X21
	170 Add X8, X31, 376
	171 Add X0, X31, 96
	172 Call BindingOverrideJson.ToBinding, X0
	173 Add X0, X31, 8
	174 Add X1, X31, 376
	175 Move W2, 88
	176 Call 0x3EB2AC0
	177 Add X2, X31, 8
	178 Move X0, X23
	179 Move W1, W22
	180 Call InputActionRebindingExtensions.ApplyBindingOverride, X0, X1, X2
	181 Move X8, 0xA04000
	182 Move X8, [X8+1400]
	183 Move X0, [X8]
	184 Move X1, X21
	185 Move X2, X31
	186 Call String.Concat, X0, X1
	187 Move X21, X0
	188 Move X0, [X27]
	189 Move W8, [X0+224]
	190 Compare W8, 0
	191 JumpIfNotEqual {193}
	192 Call 0x1C17DFC
	193 Move X0, X21
	194 Move X1, X31
	195 Call Debug.LogWarning, X0
	196 Move X8, 0xA04000
	197 Move X8, [X8+1360]
	198 Add X0, X31, 320
	199 Move X1, [X8]
	200 Call Enumerator<BindingOverrideJson>.Dispose, X0
	201 Add X31, X31, 464
	202 Move X20, [X31+80]
	203 Move X19, [X31+88]
	204 Move X22, [X31+64]
	205 Move X21, [X31+72]
	206 Move X24, [X31+48]
	207 Move X23, [X31+56]
	208 Move X26, [X31+32]
	209 Move X25, [X31+40]
	210 Move X28, [X31+16]
	211 Move X27, [X31+24]
	212 Move X29, [X31+96]
	213 Move X30, [X31+104]
	214 Return 
	215 Call 0x1C17F20
	216 Call 0x1C17F20
	217 Move X19, X0
	218 NotImplemented "Instruction CMP not yet implemented."
	219 Move X0, X19
	220 Call 0x3EB2AD0
	221 Move X20, [X0]
	222 Call 0x3EB2AE0
	223 Move X8, 0xA04000
	224 Move X8, [X8+1360]
	225 Add X0, X31, 320
	226 Move X1, [X8]
	227 Call Enumerator<BindingOverrideJson>.Dispose, X0
	228 Compare X20, 0
	229 JumpIfEqual {201}
	230 Move X0, X20
	231 Call 0x1C17F18
	232 Move X20, X31
	233 Move X19, X0
	234 Move X8, 0xA04000
	235 Move X8, [X8+1360]
	236 Move X1, [X8]
	237 Add X0, X31, 320
	238 Call Enumerator<BindingOverrideJson>.Dispose, X0
	239 Compare X20, 0
	240 JumpIfNotEqual {243}
	241 Move X0, X19
	242 Call 0x1D2D690
	243 Move X0, X20
	244 Call 0x1C17F18
	245 Call 0x1991590

Method: UnityEngine.InputSystem.InputActionRebindingExtensions/RebindingOperation PerformInteractiveRebinding(UnityEngine.InputSystem.InputAction action, System.Int32 bindingIndex = -1)

Disassembly:
	0x03742618 SUB X31, X31, 0x180
	0x0374261C STR X29, [X31 + 0x150]
	0x03742620 STP X30, X21, [X31 + 0x160]
	0x03742624 STP X20, X19, [X31 + 0x170]
	0x03742628 ADRP X20, 0xC9E000
	0x0374262C ADRP X21, 0xA03000
	0x03742630 LDRB W8, [X20 + 0xD4A]
	0x03742634 LDR X21, [X21 + 0x658]
	0x03742638 MOV X19, X0
	0x0374263C TBNZ X8, 0x0, 0x3742654
	0x03742640 ADRP X0, 0xA03000
	0x03742644 LDR X0, [X0 + 0x658]
	0x03742648 BL 0x1C16CF4
	0x0374264C MOVZ W8, 0x1
	0x03742650 STRB W8, [X20 + 0xD4A]
	0x03742654 LDR X20, [X19]
	0x03742658 ADD X1, X19, 0x8
	0x0374265C ADD X0, X31, 0xA8
	0x03742660 MOVZ W2, 0x78
	0x03742664 BL 0x3EB1AC0
	0x03742668 LDR W19, [X19 + 0x80]
	0x0374266C ADD X0, X31, 0x0
	0x03742670 MOVZ W2, 0xA8
	0x03742674 MOV W1, W31
	0x03742678 BL 0x3EB1B10
	0x0374267C ADD X0, X31, 0x0
	0x03742680 ADD X2, X31, 0xA8
	0x03742684 MOV X1, X20
	0x03742688 MOV W3, W19
	0x0374268C BL 0x3742318
	0x03742690 ADD X0, X31, 0xA8
	0x03742694 ADD X1, X31, 0x0
	0x03742698 MOVZ W2, 0xA8
	0x0374269C BL 0x3EB1AC0
	0x037426A0 ADD X0, X31, 0x0
	0x037426A4 ADD X1, X31, 0xA8
	0x037426A8 MOVZ W2, 0xA8
	0x037426AC BL 0x3EB1AC0
	0x037426B0 LDR X0, [X21]
	0x037426B4 ADD X1, X31, 0x0
	0x037426B8 BL 0x1C16E04
	0x037426BC LDP X20, X19, [X31 + 0x170]
	0x037426C0 LDP X30, X21, [X31 + 0x160]
	0x037426C4 LDR X29, [X31 + 0x150]
	0x037426C8 ADD X31, X31, 0x180
	0x037426CC RET
	0x037426D0 STP X30, X21, [X31 - 0x20]!
	0x037426D4 STP X20, X19, [X31 + 0x10]
	0x037426D8 ADRP X21, 0xC9E000
	0x037426DC ADRP X20, 0x9D9000
	0x037426E0 LDRB W8, [X21 + 0xD4E]
	0x037426E4 LDR X20, [X20 + 0xC40]
	0x037426E8 MOV X19, X0
	0x037426EC TBNZ X8, 0x0, 0x374271C
	0x037426F0 ADRP X0, 0x9D9000
	0x037426F4 LDR X0, [X0 + 0xC28]
	0x037426F8 BL 0x1C16CF4
	0x037426FC ADRP X0, 0x9D9000
	0x03742700 LDR X0, [X0 + 0xC30]
	0x03742704 BL 0x1C16CF4
	0x03742708 ADRP X0, 0x9D9000
	0x0374270C LDR X0, [X0 + 0xC40]
	0x03742710 BL 0x1C16CF4
	0x03742714 MOVZ W8, 0x1
	0x03742718 STRB W8, [X21 + 0xD4E]
	0x0374271C LDR X8, [X20]
	0x03742720 LDR X1, [X19]
	0x03742724 MOV X2, X31
	0x03742728 LDR X0, [X8 + 0xB8]
	0x0374272C BL 0x3769CEC
	0x03742730 CBNZ X0, 0x3742754
	0x03742734 ADRP X8, 0x9D9000
	0x03742738 LDR X8, [X8 + 0xC30]
	0x0374273C LDR X1, [X19]
	0x03742740 MOV X2, X31
	0x03742744 LDR X8, [X8]
	0x03742748 LDR X0, [X8 + 0xB8]
	0x0374274C BL 0x3769CEC
	0x03742750 CBZ X0, 0x3742760
	0x03742754 LDP X20, X19, [X31 + 0x10]
	0x03742758 LDP X30, X21, [X31], #0x20
	0x0374275C RET
	0x03742760 ADRP X8, 0x9D9000
	0x03742764 LDR X8, [X8 + 0xC28]
	0x03742768 LDR X1, [X19]
	0x0374276C LDP X20, X19, [X31 + 0x10]
	0x03742770 MOV X2, X31
	0x03742774 LDR X8, [X8]
	0x03742778 LDR X0, [X8 + 0xB8]
	0x0374277C LDP X30, X21, [X31], #0x20
	0x03742780 B 0x3769CEC
	0x03742784 STR X30, [X31 - 0x20]!
	0x03742788 STP X20, X19, [X31 + 0x10]
	0x0374278C LDR W8, [X0 + 0x8]
	0x03742790 MOV X19, X0
	0x03742794 STRB W31, [X0 + 0x93]
	0x03742798 STUR X31, [X0 + 0x1C]
	0x0374279C STUR X31, [X0 + 0x14]
	0x037427A0 STP X31, X31, [X0 + 0x98]
	0x037427A4 TBNZ X8, 0x1F, 0x3742824
	0x037427A8 LDR X0, [X19]
	0x037427AC CBZ X0, 0x374284C
	0x037427B0 MOV X1, X31
	0x037427B4 BL 0x374A7D8
	0x037427B8 LDRSW X8, [X19 + 0x8]
	0x037427BC MOVZ W9, 0x30
	0x037427C0 MADD X8, X8, X9, X0
	0x037427C4 CBZ X8, 0x374284C
	0x037427C8 LDR W8, [X8 + 0x10]
	0x037427CC LDR X0, [X19]
	0x037427D0 SUB W8, W8, 0x1
	0x037427D4 STR W8, [X19 + 0xC]
	0x037427D8 CBZ X0, 0x374284C
	0x037427DC MOV X1, X31
	0x037427E0 BL 0x374A7D8
	0x037427E4 LDRSW X8, [X19 + 0x8]
	0x037427E8 MOVZ W9, 0x30
	0x037427EC MADD X8, X8, X9, X0
	0x037427F0 CBZ X8, 0x374284C
	0x037427F4 LDR X0, [X19]
	0x037427F8 CBZ X0, 0x374284C
	0x037427FC LDR W20, [X8 + 0x10]
	0x03742800 MOV X1, X31
	0x03742804 BL 0x374A7D8
	0x03742808 LDRSW X8, [X19 + 0x8]
	0x0374280C MOVZ W9, 0x30
	0x03742810 MADD X8, X8, X9, X0
	0x03742814 CBZ X8, 0x374284C
	0x03742818 LDR W8, [X8 + 0x14]
	0x0374281C ADD W0, W8, W20
	0x03742820 B 0x374283C
	0x03742824 LDR X0, [X19]
	0x03742828 MOVN W8, 0x0
	0x0374282C STR W8, [X19 + 0xC]
	0x03742830 CBZ X0, 0x374284C
	0x03742834 MOV X1, X31
	0x03742838 BL 0x374A7C0
	0x0374283C STR W0, [X19 + 0x10]
	0x03742840 LDP X20, X19, [X31 + 0x10]
	0x03742844 LDR X30, [X31], #0x20
	0x03742848 RET
	0x0374284C BL 0x1C16F20
	0x03742850 STR X30, [X31 - 0x30]!
	0x03742854 STP X22, X21, [X31 + 0x10]
	0x03742858 STP X20, X19, [X31 + 0x20]
	0x0374285C LDP W8, W9, [X0 + 0xC]
	0x03742860 ADD W1, W8, 0x1
	0x03742864 CMP W1, W9
	0x03742868 STR W1, [X0 + 0xC]
	0x0374286C B.GE 0x3742978
	0x03742870 MOV X19, X0
	0x03742874 ADD X21, X0, 0x28
	0x03742878 LDR X0, [X19]
	0x0374287C CBZ X0, 0x3742A08
	0x03742880 MOV X2, X31
	0x03742884 BL 0x374FE68
	0x03742888 LDR X8, [X19]
	0x0374288C CBZ X8, 0x3742A08
	0x03742890 LDR W1, [X19 + 0xC]
	0x03742894 MOV X22, X0
	0x03742898 MOV X0, X8
	0x0374289C MOV X2, X31
	0x037428A0 BL 0x374FE58
	0x037428A4 LDRB W8, [X0 + 0x2]
	0x037428A8 MOV X20, X0
	0x037428AC CBNZ W8, 0x37428C8
	0x037428B0 LDRB W8, [X20 + 0x1]
	0x037428B4 CBNZ W8, 0x37428C8
	0x037428B8 MOV X0, X22
	0x037428BC MOV X1, X31
	0x037428C0 BL 0x3747CF4
	0x037428C4 TBZ X0, 0x0, 0x3742964
	0x037428C8 LDRB W8, [X19 + 0x92]
	0x037428CC CBZ W8, 0x37428F8
	0x037428D0 LDRB W8, [X19 + 0x91]
	0x037428D4 CBNZ W8, 0x3742900
	0x037428D8 LDRB W8, [X19 + 0x90]
	0x037428DC CBZ W8, 0x37428E8
	0x037428E0 MOVZ W8, 0x1
	0x037428E4 B 0x374292C
	0x037428E8 MOV X0, X22
	0x037428EC MOV X1, X31
	0x037428F0 BL 0x3747CF4
	0x037428F4 TBZ X0, 0x0, 0x3742964
	0x037428F8 LDRB W8, [X19 + 0x91]
	0x037428FC CBZ W8, 0x3742920
	0x03742900 LDRB W8, [X19 + 0x92]
	0x03742904 CBZ W8, 0x3742910
	0x03742908 MOV W8, W31
	0x0374290C B 0x3742924
	0x03742910 LDRB W8, [X19 + 0x90]
	0x03742914 CBZ W8, 0x3742944
	0x03742918 MOV W8, W31
	0x0374291C B 0x374292C
	0x03742920 MOVZ W8, 0x1
	0x03742924 LDRB W9, [X19 + 0x90]
	0x03742928 CBZ W9, 0x374294C
	0x0374292C LDRB W9, [X19 + 0x92]
	0x03742930 CBNZ W9, 0x374294C
	0x03742934 CBZ W8, 0x374294C
	0x03742938 LDRB W8, [X20 + 0x1]
	0x0374293C CBNZ W8, 0x374294C
	0x03742940 B 0x3742964
	0x03742944 LDRB W8, [X20 + 0x2]
	0x03742948 CBZ W8, 0x3742964
	0x0374294C MOV X0, X21
	0x03742950 MOV X1, X22
	0x03742954 MOV W2, W31
	0x03742958 MOV X3, X31
	0x0374295C BL 0x3752E9C
	0x03742960 TBNZ X0, 0x0, 0x3742980
	0x03742964 LDP W8, W9, [X19 + 0xC]
	0x03742968 ADD W1, W8, 0x1
	0x0374296C CMP W1, W9
	0x03742970 STR W1, [X19 + 0xC]
	0x03742974 B.LT 0x3742878
	0x03742978 MOV W0, W31
	0x0374297C B 0x37429F8
	0x03742980 LDRB W8, [X19 + 0x92]
	0x03742984 CBZ W8, 0x374299C
	0x03742988 MOV X0, X22
	0x0374298C MOV X1, X31
	0x03742990 BL 0x3747CF4
	0x03742994 AND W8, W0, 0x1
	0x03742998 STRB W8, [X19 + 0x93]
	0x0374299C MOV X0, X20
	0x037429A0 MOV X1, X31
	0x037429A4 BL 0x37501C4
	0x037429A8 SUB W8, W0, 0x1
	0x037429AC MOV X0, X20
	0x037429B0 MOV X1, X31
	0x037429B4 STR W8, [X19 + 0x1C]
	0x037429B8 BL 0x37501C4
	0x037429BC LDRB W8, [X20 + 0x2]
	0x037429C0 MOV X1, X31
	0x037429C4 ADD W8, W0, W8
	0x037429C8 MOV X0, X20
	0x037429CC STR W8, [X19 + 0x20]
	0x037429D0 BL 0x374BDB0
	0x037429D4 SUB W8, W0, 0x1

ISIL:
	001 Subtract X31, X31, 384
	002 Move [X31+288], X29
	003 Move [X31+304], X30
	004 Move [X31+312], X27
	005 Move [X31+320], X26
	006 Move [X31+328], X25
	007 Move [X31+336], X24
	008 Move [X31+344], X23
	009 Move [X31+352], X22
	010 Move [X31+360], X21
	011 Move [X31+368], X20
	012 Move [X31+376], X19
	013 Move X21, 0xC9F000
	014 Move W8, [X21+3399]
	015 Move W20, W1
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {53}
	021 Move X0, 0x9D9000
	022 Move X0, [X0+4072]
	023 Call 0x1C17CF4
	024 Move X0, 0xA04000
	025 Move X0, [X0+264]
	026 Call 0x1C17CF4
	027 Move X0, 0xA04000
	028 Move X0, [X0+1416]
	029 Call 0x1C17CF4
	030 Move X0, 0xA04000
	031 Move X0, [X0+1424]
	032 Call 0x1C17CF4
	033 Move X0, 0xA04000
	034 Move X0, [X0+848]
	035 Call 0x1C17CF4
	036 Move X0, 0xA04000
	037 Move X0, [X0+1432]
	038 Call 0x1C17CF4
	039 Move X0, 0xA04000
	040 Move X0, [X0+1440]
	041 Call 0x1C17CF4
	042 Move X0, 0xA04000
	043 Move X0, [X0+1448]
	044 Call 0x1C17CF4
	045 Move X0, 0xA04000
	046 Move X0, [X0+1456]
	047 Call 0x1C17CF4
	048 Move X0, 0xA04000
	049 Move X0, [X0+1464]
	050 Call 0x1C17CF4
	051 Move W8, 1
	052 Move [X21+3399], W8
	053 NotImplemented "Instruction MOVI not yet implemented."
	054 Move [X31+256], X31
	055 Move [X31+224], V0
	056 Move [X31+232], V0
	057 Move [X31+192], V0
	058 Move [X31+200], V0
	059 Move [X31+11], V0
	060 Compare X19, 0
	061 JumpIfEqual {166}
	062 Move X8, 0xA04000
	063 Move X8, [X8+1416]
	064 Move X0, [X8]
	065 Call 0x1C17F10
	066 Move X21, X0
	067 Call RebindingOperation..ctor, X0
	068 Compare X21, 0
	069 JumpIfEqual {184}
	070 Move X22, 0xA04000
	071 Move X23, 0xA04000
	072 Move X24, 0xA04000
	073 Move X25, 0xA04000
	074 Move X26, 0xA04000
	075 Move X27, 0xA04000
	076 Move X22, [X22+1432]
	077 Move X23, [X23+1464]
	078 Move X24, [X24+1424]
	079 Move X25, [X25+1456]
	080 Move X26, [X26+1448]
	081 Move X27, [X27+848]
	082 Move X0, X21
	083 Move X1, X19
	084 Call RebindingOperation.WithAction, X0, X1
	085 Move W8, 0xCCCD
	086 NotImplemented "Instruction MOVK not yet implemented."
	087 Move [X21+244], W8
	088 Move X1, [X22]
	089 Call RebindingOperation.WithControlsExcluding, X0, X1
	090 Move X1, [X23]
	091 Call RebindingOperation.WithControlsExcluding, X0, X1
	092 Move X1, [X24]
	093 Call RebindingOperation.WithControlsExcluding, X0, X1
	094 Move X1, [X25]
	095 Call RebindingOperation.WithControlsExcluding, X0, X1
	096 Move X1, [X26]
	097 Call RebindingOperation.WithControlsExcluding, X0, X1
	098 Call RebindingOperation.ThrowIfRebindInProgress, X0
	099 Move W8, [X21+360]
	100 Move X0, [X21+128]
	101 Move X1, [X21+136]
	102 Move X2, X31
	103 Or W8, W8, 512
	104 Move [X21+360], W8
	105 Call InternedString.op_Implicit, X0
	106 Move X1, [X27]
	107 Move X2, X31
	108 Call String.op_Inequality, X0, X1
	109 Move TEMP, X0
	110 And TEMP, TEMP, 1
	111 Compare TEMP, 1
	112 JumpIfNotEqual {119}
	113 Move X8, 0xA04000
	114 Move X8, [X8+1440]
	115 Move X0, X21
	116 Move X22, [X8]
	117 Call RebindingOperation.ThrowIfRebindInProgress, X0
	118 Move [X21+192], X22
	119 Move TEMP, X20
	120 And TEMP, TEMP, -2147483648
	121 Compare TEMP, -2147483648
	122 JumpIfEqual {152}
	123 Move X0, X19
	124 Call InputAction.get_bindings, X0
	125 Move X8, X1
	126 ShiftRight X8, 32
	127 And X8, X8, 0x7FFFFFFF
	128 NotImplemented "Instruction CMP not yet implemented."
	129 Move [X31+272], X0
	130 Move [X31+280], X1
	131 Move X8, 0xA04000
	132 Move X8, [X8+264]
	133 Add X0, X31, 272
	134 Move W1, W20
	135 Move X2, [X8]
	136 Add X8, X31, 88
	137 Call 0x24FD334, X0, X1
	138 Add X0, X31, 176
	139 Add X1, X31, 88
	140 Move W2, 88
	141 Call 0x3EB2AC0
	142 Add X0, X31, 176
	143 Move X1, X31
	144 Call InputBinding.get_isComposite, X0
	145 Move TEMP, X0
	146 And TEMP, TEMP, 1
	147 Compare TEMP, 1
	148 JumpIfEqual {225}
	149 Move X0, X21
	150 Move W1, W20
	151 Call RebindingOperation.WithTargetBinding, X0, X1
	152 Move X0, X21
	153 Move X20, [X31+368]
	154 Move X19, [X31+376]
	155 Move X22, [X31+352]
	156 Move X21, [X31+360]
	157 Move X24, [X31+336]
	158 Move X23, [X31+344]
	159 Move X26, [X31+320]
	160 Move X25, [X31+328]
	161 Move X30, [X31+304]
	162 Move X27, [X31+312]
	163 Move X29, [X31+288]
	164 Add X31, X31, 384
	165 Return X0
	166 Move X0, 0x9B7000
	167 Move X0, [X0+1320]
	168 Call 0x1C17D08
	169 Call 0x1C17F10
	170 Move X19, X0
	171 Move X0, 0x9DA000
	172 Move X0, [X0+3064]
	173 Call 0x1C17D08
	174 Move X1, X0
	175 Move X0, X19
	176 Move X2, X31
	177 Call ArgumentNullException..ctor, X0, X1
	178 Move X0, 0xA04000
	179 Move X0, [X0+1472]
	180 Call 0x1C17D08
	181 Move X1, X0
	182 Move X0, X19
	183 Call 0x1C17DEC
	184 Call 0x1C17F20
	185 Move [X31+88], W20
	186 Move X20, 0x9B2000
	187 Move X20, [X20+1880]
	188 Move X0, X20
	189 Call 0x1C17D08
	190 Add X1, X31, 88
	191 Call 0x1C17E04
	192 Move X21, X0
	193 Move X0, 0x9D9000
	194 Move X0, [X0+4072]
	195 Call 0x1C17D08
	196 Move W8, [X31+284]
	197 Move X0, X20
	198 Move [X31], W8
	199 Call 0x1C17D08
	200 Add X1, X31, 0
	201 Call 0x1C17E04
	202 Move X20, X0
	203 Move X0, 0xA03000
	204 Move X0, [X0+4056]
	205 Call 0x1C17D08
	206 Move X1, X21
	207 Move X2, X19
	208 Move X3, X20
	209 Move X4, X31
	210 Call String.Format, X0, X1, X2, X3
	211 Move X19, X0
	212 Move X0, 0x9BA000
	213 Move X0, [X0+1888]
	214 Call 0x1C17D08
	215 Call 0x1C17F10
	216 Move X20, X0
	217 Move X0, 0xA04000
	218 Move X0, [X0+1480]
	219 Call 0x1C17D08
	220 Move X2, X0
	221 Move X0, X20
	222 Move X1, X19
	223 Move X3, X31
	224 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	225 Move X0, 0xA04000
	226 Move X0, [X0+264]
	227 Call 0x1C17D08
	228 Move X2, X0
	229 Add X8, X31, 0
	230 Add X0, X31, 272
	231 Move W1, W20
	232 Call 0x1BCD26C
	233 Add X0, X31, 88
	234 Add X1, X31, 0
	235 Move W2, 88
	236 Call 0x3EB2AC0
	237 Add X0, X31, 0
	238 Add X1, X31, 88
	239 Move W2, 88
	240 Call 0x3EB2AC0
	241 Move X0, 0x9DD000
	242 Move X0, [X0+1248]
	243 Call 0x1C17D08
	244 Add X1, X31, 0
	245 Call 0x1C17E04
	246 Move X20, X0
	247 Move X0, 0xA04000
	248 Move X0, [X0+1488]
	249 Call 0x1C17D08
	250 Move X1, X20
	251 Move X2, X19
	252 Move X3, X31
	253 Call String.Format, X0, X1, X2
	254 Move X19, X0
	255 Move X0, 0x9B2000
	256 Move X0, [X0+1456]
	257 Call 0x1C17D08
	258 Call 0x1C17F10
	259 Move X1, X19
	260 Move X2, X31
	261 Move X20, X0
	262 Call InvalidOperationException..ctor, X0, X1
	263 Move X0, 0xA04000
	264 Move X0, [X0+1472]
	265 Call 0x1C17D08
	266 Move X1, X0
	267 Move X0, X20
	268 Call 0x1C17DEC

Method: UnityEngine.InputSystem.InputActionRebindingExtensions/DeferBindingResolutionWrapper DeferBindingResolution()

Disassembly:
	0x0373CF80 BL 0x3EB1AC0
	0x0373CF84 ADD X0, X31, 0x0
	0x0373CF88 MOVZ W2, 0xA8
	0x0373CF8C MOV W1, W31
	0x0373CF90 BL 0x3EB1B10
	0x0373CF94 ADD X0, X31, 0x0
	0x0373CF98 ADD X2, X31, 0x1E8
	0x0373CF9C MOV X1, X21
	0x0373CFA0 MOV W3, W20
	0x0373CFA4 BL 0x3742318
	0x0373CFA8 ADD X0, X31, 0x140
	0x0373CFAC ADD X1, X31, 0x0
	0x0373CFB0 MOVZ W2, 0xA8
	0x0373CFB4 BL 0x3EB1AC0
	0x0373CFB8 ADD X0, X31, 0x140
	0x0373CFBC BL 0x373D140
	0x0373CFC0 TBZ X0, 0x0, 0x373D060
	0x0373CFC4 LDR X0, [X31 + 0x1E0]
	0x0373CFC8 CBZ X0, 0x373D034
	0x0373CFCC LDR X8, [X0]
	0x0373CFD0 LDR X1, [X31 + 0x1D8]
	0x0373CFD4 LDR X9, [X8 + 0x2C8]
	0x0373CFD8 LDR X2, [X8 + 0x2D0]
	0x0373CFDC BLR X9
	0x0373CFE0 MOV X1, X31
	0x0373CFE4 BL 0x3765FE0
	0x0373CFE8 ADRP X8, 0xA09000
	0x0373CFEC LDR X8, [X8 + 0x370]
	0x0373CFF0 MOV X2, X0
	0x0373CFF4 MOV X4, X1
	0x0373CFF8 STP X31, X31, [X31]
	0x0373CFFC LDR X3, [X8]
	0x0373D000 STR X31, [X31 + 0x10]
	0x0373D004 ADD X0, X31, 0x0
	0x0373D008 MOV X1, X2
	0x0373D00C MOV X2, X4
	0x0373D010 BL 0x243787C
	0x0373D014 LDR V0, [X31]
	0x0373D018 LDR X8, [X31 + 0x10]
	0x0373D01C STR V0, [X31 + 0x12]
	0x0373D020 STR X8, [X31 + 0x130]
	0x0373D024 STR X8, [X19 + 0x10]
	0x0373D028 STR V0, [X19]
	0x0373D02C B 0x373D068
	0x0373D030 BL 0x1C16F20
	0x0373D034 BL 0x1C16F20
	0x0373D038 B 0x373D048
	0x0373D03C B 0x373D048
	0x0373D040 B 0x373D048
	0x0373D044 B 0x373D048
	0x0373D048 CMP W1, 0x1
	0x0373D04C B.NE 0x373D088
	0x0373D050 BL 0x3EB1AD0
	0x0373D054 LDR X20, [X0]
	0x0373D058 BL 0x3EB1AE0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0xCA5000
	006 Move X20, 0xA0A000
	007 Move W8, [X19+3400]
	008 Move X20, [X20+760]
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0xA0A000
	014 Move X0, [X0+768]
	015 Call 0x1C17CF4
	016 Move X0, 0xA0A000
	017 Move X0, [X0+760]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X19+3400], W8
	021 Move X8, [X20]
	022 Move X9, [X8+184]
	023 Move X9, [X9]
	024 Compare X9, 0
	025 JumpIfNotEqual {37}
	026 Move X8, 0xA0A000
	027 Move X8, [X8+768]
	028 Move X0, [X8]
	029 Call 0x1C17F10
	030 Move X1, X31
	031 Move X19, X0
	032 Call Object..ctor, X0
	033 Move X8, [X20]
	034 Move X8, [X8+184]
	035 Move [X8], X19
	036 Move X8, [X20]
	037 Move X9, [X8+184]
	038 Move X9, [X9]
	039 Compare X9, 0
	040 JumpIfEqual {67}
	041 Move X21, 0xCA4000
	042 Move X19, 0xA08000
	043 Move W9, [X21+3434]
	044 Move X19, [X19+3944]
	045 Move TEMP, X9
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfEqual {55}
	049 Move X0, 0xA08000
	050 Move X0, [X0+3944]
	051 Call 0x1C17CF4
	052 Move X8, [X20]
	053 Move W9, 1
	054 Move [X21+3434], W9
	055 Move X9, [X19]
	056 Move X20, [X31+16]
	057 Move X19, [X31+24]
	058 Move X9, [X9+184]
	059 Move W10, [X9]
	060 Add W10, W10, 1
	061 Move [X9], W10
	062 Move X8, [X8+184]
	063 Move X0, [X8]
	064 Move X30, [X31+32]
	065 Move X21, [X31+40]
	066 Return X0
	067 Call 0x1C17F20

