Type: UnityEngine.InputSystem.InputActionSetupExtensions/BindingSyntax

Method: System.Boolean get_valid()

Disassembly:
	0x03749BF0 STP X30, X21, [X31 + 0x20]
	0x03749BF4 STP X20, X19, [X31 + 0x30]
	0x03749BF8 MOV X20, X1
	0x03749BFC MOV X21, X0
	0x03749C00 MOV X0, X1
	0x03749C04 MOV X1, X31
	0x03749C08 MOV X19, X8
	0x03749C0C BL 0x32277A8
	0x03749C10 TBNZ X0, 0x0, 0x3749C48
	0x03749C14 ADD X8, X31, 0x8
	0x03749C18 MOVZ W1, 0x1
	0x03749C1C MOV X0, X21
	0x03749C20 MOV X2, X20
	0x03749C24 BL 0x3749C90
	0x03749C28 LDR X8, [X31 + 0x18]
	0x03749C2C LDUR V0, [X31 + 0x8]
	0x03749C30 LDP X30, X21, [X31 + 0x20]
	0x03749C34 STR X8, [X19 + 0x10]
	0x03749C38 STR V0, [X19]
	0x03749C3C LDP X20, X19, [X31 + 0x30]
	0x03749C40 ADD X31, X31, 0x40
	0x03749C44 RET
	0x03749C48 ADRP X0, 0x9AF000
	0x03749C4C LDR X0, [X0 + 0x528]
	0x03749C50 BL 0x1C16D08
	0x03749C54 BL 0x1C16F10
	0x03749C58 MOV X19, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xC98000
	005 Move W8, [X20+3466]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x9FC000
	012 Move X0, [X0+4048]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3466], W8
	016 Move X8, [X19]
	017 Compare X8, 0
	018 JumpIfEqual {31}
	019 Move W19, [X19+16]
	020 Move TEMP, X19
	021 And TEMP, TEMP, -2147483648
	022 Compare TEMP, -2147483648
	023 JumpIfEqual {31}
	024 Move X0, [X8+48]
	025 Move X8, 0x9FC000
	026 Move X8, [X8+4048]
	027 Move X1, [X8]
	028 Call 0x217C240, X0
	029 NotImplemented "Instruction CMP not yet implemented."
	030 NotImplemented "Instruction CSET not yet implemented."
	031 Move W0, W31
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Return X0

Method: System.Int32 get_bindingIndex()

Disassembly:
	0x03749C5C ADRP X0, 0x9FC000
	0x03749C60 LDR X0, [X0 + 0xAB8]
	0x03749C64 BL 0x1C16D08
	0x03749C68 MOV X1, X0
	0x03749C6C MOV X0, X19
	0x03749C70 MOV X2, X31
	0x03749C74 BL 0x330E100
	0x03749C78 ADRP X0, 0x9FC000
	0x03749C7C LDR X0, [X0 + 0xAC0]
	0x03749C80 BL 0x1C16D08
	0x03749C84 MOV X1, X0
	0x03749C88 MOV X0, X19
	0x03749C8C BL 0x1C16DEC
	0x03749C90 SUB X31, X31, 0xB0

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call BindingSyntax.get_valid, X0
	005 Move TEMP, X0
	006 And TEMP, TEMP, 1
	007 Compare TEMP, 1
	008 JumpIfNotEqual {18}
	009 Move X0, [X19+8]
	010 Move W1, [X19+16]
	011 Compare X0, 0
	012 JumpIfEqual {21}
	013 Move X2, X31
	014 Move X30, [X31+16]
	015 Move X19, [X31+24]
	016 Call InputAction.BindingIndexOnMapToBindingIndexOnAction, X0, X1
	017 Return X0
	018 Move TEMP, 0
	019 Not TEMP
	020 Move W1, TEMP
	021 Move W0, W1
	022 Move X30, [X31+16]
	023 Move X19, [X31+24]
	024 Return X0

Method: UnityEngine.InputSystem.InputBinding get_binding()

Disassembly:
	0x03749C94 STR X30, [X31 + 0x80]
	0x03749C98 STP X22, X21, [X31 + 0x90]
	0x03749C9C STP X20, X19, [X31 + 0xA0]
	0x03749CA0 MOV X20, X2
	0x03749CA4 MOV W21, W1
	0x03749CA8 MOV X22, X0
	0x03749CAC MOV X19, X8
	0x03749CB0 STP X31, X31, [X31 + 0x60]
	0x03749CB4 STR X31, [X31 + 0x70]
	0x03749CB8 BL 0x3748BF0
	0x03749CBC TBZ X0, 0x0, 0x3749D6C
	0x03749CC0 ADD X8, X31, 0x8
	0x03749CC4 MOV X0, X22
	0x03749CC8 BL 0x3748C94
	0x03749CCC LDR W8, [X31 + 0x40]
	0x03749CD0 TBNZ X8, 0x2, 0x3749CEC
	0x03749CD4 ADD X8, X31, 0x8
	0x03749CD8 MOV X0, X22
	0x03749CDC BL 0x3748C94
	0x03749CE0 LDR W8, [X31 + 0x40]
	0x03749CE4 TBNZ X8, 0x3, 0x3749CF0
	0x03749CE8 B 0x3749D6C
	0x03749CEC TBZ X21, 0x0, 0x3749D6C
	0x03749CF0 AND W1, W21, 0x1
	0x03749CF4 ADD X8, X31, 0x60
	0x03749CF8 MOV X0, X22
	0x03749CFC BL 0x3749B00
	0x03749D00 ADD X0, X31, 0x60
	0x03749D04 BL 0x3748BF0
	0x03749D08 TBZ X0, 0x0, 0x3749D6C
	0x03749D0C ADD X8, X31, 0x8
	0x03749D10 ADD X0, X31, 0x60
	0x03749D14 BL 0x3748C94
	0x03749D18 LDR W8, [X31 + 0x40]
	0x03749D1C TBZ X8, 0x3, 0x3749D6C
	0x03749D20 ADD X8, X31, 0x8
	0x03749D24 ADD X0, X31, 0x60
	0x03749D28 BL 0x3748C94
	0x03749D2C CBZ X20, 0x3749D9C
	0x03749D30 LDR X1, [X31 + 0x8]
	0x03749D34 MOVZ W2, 0x3
	0x03749D38 MOV X0, X20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, X0
	005 Move X19, X8
	006 Call BindingSyntax.get_valid, X0
	007 Move TEMP, X0
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfNotEqual {31}
	011 Move X8, [X20]
	012 Compare X8, 0
	013 JumpIfEqual {30}
	014 Move X8, [X8+48]
	015 Compare X8, 0
	016 JumpIfEqual {30}
	017 NotImplemented "Instruction LDRSW not yet implemented."
	018 Move W10, [X8+24]
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move X0, X19
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move W10, 88
	024 NotImplemented "Instruction MADD not yet implemented."
	025 Add X1, X8, 32
	026 Move W2, 88
	027 Move X30, [X31+32]
	028 Call 0x3EB2AC0
	029 Return X0
	030 Call 0x1C17F20
	031 Move X0, 0x9AB000
	032 Move X0, [X0+1456]
	033 Call 0x1C17D08
	034 Call 0x1C17F10
	035 Move X19, X0
	036 Move X0, 0x9FD000
	037 Move X0, [X0+2584]
	038 Call 0x1C17D08
	039 Move X1, X0
	040 Move X0, X19
	041 Move X2, X31
	042 Call InvalidOperationException..ctor, X0, X1
	043 Move X0, 0x9FD000
	044 Move X0, [X0+2592]
	045 Call 0x1C17D08
	046 Move X1, X0
	047 Move X0, X19
	048 Call 0x1C17DEC
	049 Call 0x1C17F28

Method: System.Void .ctor(UnityEngine.InputSystem.InputActionMap map, System.Int32 bindingIndexInMap, UnityEngine.InputSystem.InputAction action = null)

Disassembly:
	0x03748034 TBNZ X0, 0x0, 0x37480B8
	0x03748038 LDR X0, [X19]
	0x0374803C MOV X1, X31

ISIL:
	001 Move [X0+16], W2
	002 Move [X0], X1
	003 Move [X0+8], X3
	004 Return 

Method: UnityEngine.InputSystem.InputActionSetupExtensions/BindingSyntax WithName(System.String name)

Disassembly:
	0x03749D3C MOV X3, X31
	0x03749D40 BL 0x322697C
	0x03749D44 TBNZ X0, 0x0, 0x3749D88
	0x03749D48 AND W1, W21, 0x1
	0x03749D4C ADD X8, X31, 0x8
	0x03749D50 ADD X0, X31, 0x60
	0x03749D54 BL 0x3749B00
	0x03749D58 LDUR V0, [X31 + 0x8]
	0x03749D5C LDR X8, [X31 + 0x18]
	0x03749D60 STR V0, [X31 + 0x6]
	0x03749D64 STR X8, [X31 + 0x70]
	0x03749D68 B 0x3749D00
	0x03749D6C STP X31, X31, [X19]
	0x03749D70 STR X31, [X19 + 0x10]
	0x03749D74 LDP X20, X19, [X31 + 0xA0]
	0x03749D78 LDP X22, X21, [X31 + 0x90]
	0x03749D7C LDR X30, [X31 + 0x80]
	0x03749D80 ADD X31, X31, 0xB0
	0x03749D84 RET
	0x03749D88 LDR X8, [X31 + 0x70]
	0x03749D8C LDR V0, [X31 + 0x6]
	0x03749D90 STR X8, [X19 + 0x10]
	0x03749D94 STR V0, [X19]
	0x03749D98 B 0x3749D74
	0x03749D9C BL 0x1C16F20
	0x03749DA0 SUB X31, X31, 0x40
	0x03749DA4 STP X30, X21, [X31 + 0x20]
	0x03749DA8 STP X20, X19, [X31 + 0x30]
	0x03749DAC MOV X20, X1
	0x03749DB0 MOV X21, X0
	0x03749DB4 MOV X0, X1
	0x03749DB8 MOV X1, X31
	0x03749DBC MOV X19, X8
	0x03749DC0 BL 0x32277A8
	0x03749DC4 TBNZ X0, 0x0, 0x3749DFC
	0x03749DC8 ADD X8, X31, 0x8
	0x03749DCC MOV X0, X21
	0x03749DD0 MOV W1, W31
	0x03749DD4 MOV X2, X20
	0x03749DD8 BL 0x3749C90
	0x03749DDC LDR X8, [X31 + 0x18]
	0x03749DE0 LDUR V0, [X31 + 0x8]
	0x03749DE4 LDP X30, X21, [X31 + 0x20]
	0x03749DE8 STR X8, [X19 + 0x10]
	0x03749DEC STR V0, [X19]
	0x03749DF0 LDP X20, X19, [X31 + 0x30]
	0x03749DF4 ADD X31, X31, 0x40

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, X1
	006 Move X20, X0
	007 Move X19, X8
	008 Call BindingSyntax.get_valid, X0
	009 Move TEMP, X0
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfNotEqual {37}
	013 Move X0, [X20]
	014 Compare X0, 0
	015 JumpIfEqual {36}
	016 Move X8, [X0+48]
	017 Compare X8, 0
	018 JumpIfEqual {36}
	019 NotImplemented "Instruction LDRSW not yet implemented."
	020 Move W10, [X8+24]
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move W10, 88
	023 NotImplemented "Instruction MADD not yet implemented."
	024 Move X1, X31
	025 Move [X8+32], X21
	026 Call InputActionMap.OnBindingModified, X0
	027 Move X8, [X20+16]
	028 Move V0, [X20]
	029 Move [X19+16], X8
	030 Move [X19], V0
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Move X21, [X31+40]
	035 Return X0
	036 Call 0x1C17F20
	037 Move X0, 0x9AB000
	038 Move X0, [X0+1456]
	039 Call 0x1C17D08
	040 Call 0x1C17F10
	041 Move X19, X0
	042 Move X0, 0x9D4000
	043 Move X0, [X0+2608]
	044 Call 0x1C17D08
	045 Move X1, X0
	046 Move X0, X19
	047 Move X2, X31
	048 Call InvalidOperationException..ctor, X0, X1
	049 Move X0, 0x9FD000
	050 Move X0, [X0+2600]
	051 Call 0x1C17D08
	052 Move X1, X0
	053 Move X0, X19
	054 Call 0x1C17DEC
	055 Call 0x1C17F28

Method: UnityEngine.InputSystem.InputActionSetupExtensions/BindingSyntax WithPath(System.String path)

Disassembly:
	0x03749DF8 RET
	0x03749DFC ADRP X0, 0x9AF000
	0x03749E00 LDR X0, [X0 + 0x528]
	0x03749E04 BL 0x1C16D08
	0x03749E08 BL 0x1C16F10
	0x03749E0C MOV X19, X0
	0x03749E10 ADRP X0, 0x9FC000
	0x03749E14 LDR X0, [X0 + 0xAB8]
	0x03749E18 BL 0x1C16D08
	0x03749E1C MOV X1, X0
	0x03749E20 MOV X0, X19
	0x03749E24 MOV X2, X31
	0x03749E28 BL 0x330E100
	0x03749E2C ADRP X0, 0x9FC000
	0x03749E30 LDR X0, [X0 + 0xAC8]
	0x03749E34 BL 0x1C16D08
	0x03749E38 MOV X1, X0
	0x03749E3C MOV X0, X19
	0x03749E40 BL 0x1C16DEC
	0x03749E44 SUB X31, X31, 0x30
	0x03749E48 STP X30, X19, [X31 + 0x20]
	0x03749E4C MOV X2, X1
	0x03749E50 MOV X19, X8
	0x03749E54 ADD X8, X31, 0x8
	0x03749E58 MOVZ W1, 0x1
	0x03749E5C BL 0x3749E7C
	0x03749E60 LDR X8, [X31 + 0x18]
	0x03749E64 LDUR V0, [X31 + 0x8]
	0x03749E68 STR X8, [X19 + 0x10]
	0x03749E6C STR V0, [X19]
	0x03749E70 LDP X30, X19, [X31 + 0x20]
	0x03749E74 ADD X31, X31, 0x30
	0x03749E78 RET
	0x03749E7C SUB X31, X31, 0xA0
	0x03749E80 STP X30, X21, [X31 + 0x80]
	0x03749E84 STP X20, X19, [X31 + 0x90]
	0x03749E88 AND W21, W1, 0x1
	0x03749E8C MOV X19, X8
	0x03749E90 ADD X8, X31, 0x60
	0x03749E94 MOV W1, W21
	0x03749E98 MOV X20, X2
	0x03749E9C STP X31, X31, [X31 + 0x60]
	0x03749EA0 STR X31, [X31 + 0x70]
	0x03749EA4 BL 0x3749B00
	0x03749EA8 ADD X0, X31, 0x60
	0x03749EAC BL 0x3748BF0
	0x03749EB0 TBZ X0, 0x0, 0x3749F44

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, X1
	006 Move X20, X0
	007 Move X19, X8
	008 Call BindingSyntax.get_valid, X0
	009 Move TEMP, X0
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfNotEqual {37}
	013 Move X0, [X20]
	014 Compare X0, 0
	015 JumpIfEqual {36}
	016 Move X8, [X0+48]
	017 Compare X8, 0
	018 JumpIfEqual {36}
	019 NotImplemented "Instruction LDRSW not yet implemented."
	020 Move W10, [X8+24]
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move W10, 88
	023 NotImplemented "Instruction MADD not yet implemented."
	024 Move X1, X31
	025 Move [X8+48], X21
	026 Call InputActionMap.OnBindingModified, X0
	027 Move X8, [X20+16]
	028 Move V0, [X20]
	029 Move [X19+16], X8
	030 Move [X19], V0
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Move X21, [X31+40]
	035 Return X0
	036 Call 0x1C17F20
	037 Move X0, 0x9AB000
	038 Move X0, [X0+1456]
	039 Call 0x1C17D08
	040 Call 0x1C17F10
	041 Move X19, X0
	042 Move X0, 0x9D4000
	043 Move X0, [X0+2608]
	044 Call 0x1C17D08
	045 Move X1, X0
	046 Move X0, X19
	047 Move X2, X31
	048 Call InvalidOperationException..ctor, X0, X1
	049 Move X0, 0x9FD000
	050 Move X0, [X0+2608]
	051 Call 0x1C17D08
	052 Move X1, X0
	053 Move X0, X19
	054 Call 0x1C17DEC
	055 Call 0x1C17F28

Method: UnityEngine.InputSystem.InputActionSetupExtensions/BindingSyntax WithGroup(System.String group)

Disassembly:
	0x03749EB4 ADD X8, X31, 0x8
	0x03749EB8 ADD X0, X31, 0x60
	0x03749EBC BL 0x3748C94
	0x03749EC0 LDR W8, [X31 + 0x40]
	0x03749EC4 TBZ X8, 0x2, 0x3749F20
	0x03749EC8 CBZ X20, 0x3749F50
	0x03749ECC ADD X8, X31, 0x8
	0x03749ED0 ADD X0, X31, 0x60
	0x03749ED4 BL 0x3748C94
	0x03749ED8 LDR X1, [X31 + 0x8]
	0x03749EDC MOVZ W2, 0x3
	0x03749EE0 MOV X0, X20
	0x03749EE4 MOV X3, X31
	0x03749EE8 BL 0x322697C
	0x03749EEC TBNZ X0, 0x0, 0x3749F50
	0x03749EF0 ADD X8, X31, 0x8
	0x03749EF4 ADD X0, X31, 0x60
	0x03749EF8 BL 0x3748C94
	0x03749EFC LDR X0, [X31 + 0x18]
	0x03749F00 MOV X1, X31
	0x03749F04 BL 0x3763848
	0x03749F08 MOV X1, X0
	0x03749F0C MOVZ W2, 0x3
	0x03749F10 MOV X0, X20
	0x03749F14 MOV X3, X31
	0x03749F18 BL 0x322697C
	0x03749F1C TBNZ X0, 0x0, 0x3749F50
	0x03749F20 ADD X8, X31, 0x8
	0x03749F24 ADD X0, X31, 0x60
	0x03749F28 MOV W1, W21
	0x03749F2C BL 0x3749B00
	0x03749F30 LDUR V0, [X31 + 0x8]
	0x03749F34 LDR X8, [X31 + 0x18]
	0x03749F38 STR V0, [X31 + 0x6]
	0x03749F3C STR X8, [X31 + 0x70]
	0x03749F40 B 0x3749EA8
	0x03749F44 STP X31, X31, [X19]
	0x03749F48 STR X31, [X19 + 0x10]
	0x03749F4C B 0x3749F60
	0x03749F50 LDR X8, [X31 + 0x70]
	0x03749F54 LDR V0, [X31 + 0x6]
	0x03749F58 STR X8, [X19 + 0x10]
	0x03749F5C STR V0, [X19]
	0x03749F60 LDP X20, X19, [X31 + 0x90]
	0x03749F64 LDP X30, X21, [X31 + 0x80]
	0x03749F68 ADD X31, X31, 0xA0
	0x03749F6C RET
	0x03749F70 SUB X31, X31, 0x30
	0x03749F74 STP X30, X19, [X31 + 0x20]
	0x03749F78 MOV X2, X1
	0x03749F7C MOV X19, X8
	0x03749F80 ADD X8, X31, 0x8
	0x03749F84 MOV W1, W31
	0x03749F88 BL 0x3749E7C
	0x03749F8C LDR X8, [X31 + 0x18]
	0x03749F90 LDUR V0, [X31 + 0x8]
	0x03749F94 STR X8, [X19 + 0x10]
	0x03749F98 STR V0, [X19]
	0x03749F9C LDP X30, X19, [X31 + 0x20]
	0x03749FA0 ADD X31, X31, 0x30
	0x03749FA4 RET
	0x03749FA8 LDRB W8, [X0 + 0x38]
	0x03749FAC UBFM W0, W8, 0x3, 0x3
	0x03749FB0 RET
	0x03749FB4 STP X30, X23, [X31 - 0x30]!
	0x03749FB8 STP X22, X21, [X31 + 0x10]
	0x03749FBC STP X20, X19, [X31 + 0x20]
	0x03749FC0 ADRP X20, 0xC97000
	0x03749FC4 LDRB W8, [X20 + 0xD8E]
	0x03749FC8 MOV X19, X0
	0x03749FCC TBNZ X8, 0x0, 0x3749FF0
	0x03749FD0 ADRP X0, 0x9FC000
	0x03749FD4 LDR X0, [X0 + 0xAD0]
	0x03749FD8 BL 0x1C16CF4
	0x03749FDC ADRP X0, 0x9FB000
	0x03749FE0 LDR X0, [X0 + 0xFD0]
	0x03749FE4 BL 0x1C16CF4
	0x03749FE8 MOVZ W8, 0x1
	0x03749FEC STRB W8, [X20 + 0xD8E]
	0x03749FF0 MOV X0, X19
	0x03749FF4 BL 0x3748BF0
	0x03749FF8 TBZ X0, 0x0, 0x374A104
	0x03749FFC LDR X0, [X19]
	0x0374A000 CBZ X0, 0x374A0FC
	0x0374A004 LDR X8, [X0 + 0x30]!
	0x0374A008 CBZ X8, 0x374A0FC
	0x0374A00C LDRSW X1, [X19 + 0x10]
	0x0374A010 LDR W9, [X8 + 0x18]
	0x0374A014 CMP W1, W9
	0x0374A018 B.CS 0x374A100
	0x0374A01C ADRP X21, 0x9FB000
	0x0374A020 LDR X21, [X21 + 0xAD0]
	0x0374A024 MOVZ W9, 0x58
	0x0374A028 MADD X8, X1, X9, X8
	0x0374A02C ADRP X20, 0x9FA000
	0x0374A030 LDR X2, [X21]
	0x0374A034 LDR W22, [X8 + 0x58]
	0x0374A038 LDR X20, [X20 + 0xFD0]
	0x0374A03C BL 0x2176FC4
	0x0374A040 TBNZ X22, 0x2, 0x374A09C
	0x0374A044 LDR X8, [X19]
	0x0374A048 CBZ X8, 0x374A0FC
	0x0374A04C LDR X0, [X8 + 0x30]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+48], X22
	004 Move [X31+56], X21
	005 Move [X31+64], X20
	006 Move [X31+72], X19
	007 Move X20, X1
	008 Move X21, X0
	009 Move X19, X8
	010 Call BindingSyntax.get_valid, X0
	011 Move TEMP, X0
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfNotEqual {45}
	015 Move X0, X20
	016 Move X1, X31
	017 Call String.IsNullOrEmpty, X0
	018 Move TEMP, X0
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {57}
	022 Compare X20, 0
	023 JumpIfEqual {80}
	024 Move W1, 59
	025 Move X0, X20
	026 Move X2, X31
	027 Move W22, 59
	028 Call String.IndexOf, X0, X1
	029 Add W31, W0, 1
	030 Add X8, X31, 8
	031 Move X0, X21
	032 Move X1, X20
	033 Call BindingSyntax.WithGroups, X0, X1
	034 Move X8, [X31+24]
	035 Move X30, [X31+32]
	036 NotImplemented "Instruction LDUR not yet implemented."
	037 Move X22, [X31+48]
	038 Move X21, [X31+56]
	039 Move [X19+16], X8
	040 Move [X19], V0
	041 Move X20, [X31+64]
	042 Move X19, [X31+72]
	043 Add X31, X31, 80
	044 Return X0
	045 Move X0, 0x9AB000
	046 Move X0, [X0+1456]
	047 Call 0x1C17D08
	048 Call 0x1C17F10
	049 Move X19, X0
	050 Move X0, 0x9D4000
	051 Move X0, [X0+2608]
	052 Call 0x1C17D08
	053 Move X1, X0
	054 Move X0, X19
	055 Move X2, X31
	056 Call InvalidOperationException..ctor, X0, X1
	057 Move X0, 0x9B3000
	058 Move X0, [X0+1400]
	059 Call 0x1C17D08
	060 Call 0x1C17F10
	061 Move X19, X0
	062 Move X0, 0x9FD000
	063 Move X0, [X0+2616]
	064 Call 0x1C17D08
	065 Move X20, X0
	066 Move X0, 0x9FD000
	067 Move X0, [X0+2624]
	068 Call 0x1C17D08
	069 Move X2, X0
	070 Move X0, X19
	071 Move X1, X20
	072 Move X3, X31
	073 Call ArgumentException..ctor, X0, X1, X2
	074 Move X0, 0x9FD000
	075 Move X0, [X0+2632]
	076 Call 0x1C17D08
	077 Move X1, X0
	078 Move X0, X19
	079 Call 0x1C17DEC
	080 Call 0x1C17F20
	081 NotImplemented "Instruction STRH not yet implemented."
	082 Move X0, 0x9AD000
	083 Move X0, [X0+368]
	084 Call 0x1C17D08
	085 Add X1, X31, 8
	086 Call 0x1C17E04
	087 Move X19, X0
	088 Move X0, 0x9FD000
	089 Move X0, [X0+2640]
	090 Call 0x1C17D08
	091 Move X1, X19
	092 Move X2, X31
	093 Call String.Format, X0, X1
	094 Move X19, X0
	095 Move X0, 0x9B2000
	096 Move X0, [X0+1400]
	097 Call 0x1C17D08
	098 Call 0x1C17F10
	099 Move X20, X0
	100 Move X0, 0x9FC000
	101 Move X0, [X0+2624]
	102 Call 0x1C17D08
	103 Move X2, X0
	104 Move X0, X20
	105 Move X1, X19
	106 Move X3, X31
	107 Call ArgumentException..ctor, X0, X1, X2
	108 Move X0, 0x9FC000
	109 Move X0, [X0+2632]
	110 Call 0x1C17D08
	111 Move X1, X0
	112 Move X0, X20
	113 Call 0x1C17DEC

Method: UnityEngine.InputSystem.InputActionSetupExtensions/BindingSyntax WithGroups(System.String groups)

Disassembly:
	0x0374A050 LDR X1, [X20]
	0x0374A054 LDR X21, [X19 + 0x8]
	0x0374A058 BL 0x217B240
	0x0374A05C CBZ X21, 0x374A0FC
	0x0374A060 STR W0, [X21 + 0xB4]
	0x0374A064 LDR X0, [X19]
	0x0374A068 CBZ X0, 0x374A0FC
	0x0374A06C MOV X1, X31
	0x0374A070 BL 0x373B38C
	0x0374A074 LDR X8, [X19]
	0x0374A078 CBZ X8, 0x374A0FC
	0x0374A07C LDR X9, [X8 + 0x50]
	0x0374A080 CBZ X9, 0x374A08C
	0x0374A084 LDR X8, [X8 + 0x30]
	0x0374A088 STR X8, [X9 + 0x40]
	0x0374A08C LDP X20, X19, [X31 + 0x20]
	0x0374A090 LDP X22, X21, [X31 + 0x10]
	0x0374A094 LDP X30, X23, [X31], #0x30
	0x0374A098 RET
	0x0374A09C LDR X8, [X19]
	0x0374A0A0 CBZ X8, 0x374A0FC
	0x0374A0A4 MOVZ W22, 0x58
	0x0374A0A8 LDR X0, [X8 + 0x30]
	0x0374A0AC LDR X1, [X20]
	0x0374A0B0 LDR W23, [X19 + 0x10]
	0x0374A0B4 BL 0x217B240
	0x0374A0B8 CMP W23, W0
	0x0374A0BC B.GE 0x374A044
	0x0374A0C0 LDR X0, [X19]
	0x0374A0C4 CBZ X0, 0x374A0FC
	0x0374A0C8 LDR X8, [X0 + 0x30]!
	0x0374A0CC CBZ X8, 0x374A0FC
	0x0374A0D0 LDRSW X1, [X19 + 0x10]
	0x0374A0D4 LDR W9, [X8 + 0x18]
	0x0374A0D8 CMP W1, W9
	0x0374A0DC B.CS 0x374A100
	0x0374A0E0 MADD X8, X1, X22, X8
	0x0374A0E4 LDRB W8, [X8 + 0x58]
	0x0374A0E8 TBZ X8, 0x3, 0x374A044
	0x0374A0EC LDR X2, [X21]
	0x0374A0F0 BL 0x2176FC4
	0x0374A0F4 LDR X8, [X19]
	0x0374A0F8 CBNZ X8, 0x374A0A8
	0x0374A0FC BL 0x1C16F20
	0x0374A100 BL 0x1C16F28
	0x0374A104 ADRP X0, 0x9A9000
	0x0374A108 LDR X0, [X0 + 0x5B0]
	0x0374A10C BL 0x1C16D08
	0x0374A110 BL 0x1C16F10
	0x0374A114 MOV X19, X0
	0x0374A118 ADRP X0, 0x9FB000
	0x0374A11C LDR X0, [X0 + 0xAD8]
	0x0374A120 BL 0x1C16D08
	0x0374A124 MOV X1, X0
	0x0374A128 MOV X0, X19
	0x0374A12C MOV X2, X31
	0x0374A130 BL 0x337DF1C
	0x0374A134 ADRP X0, 0x9FB000
	0x0374A138 LDR X0, [X0 + 0xAE0]
	0x0374A13C BL 0x1C16D08
	0x0374A140 MOV X1, X0
	0x0374A144 MOV X0, X19
	0x0374A148 BL 0x1C16DEC
	0x0374A14C SUB X31, X31, 0xE0
	0x0374A150 STR X30, [X31 + 0xB0]
	0x0374A154 STP X22, X21, [X31 + 0xC0]
	0x0374A158 STP X20, X19, [X31 + 0xD0]
	0x0374A15C MOV X22, X1
	0x0374A160 MOV X20, X0
	0x0374A164 MOV X0, X1
	0x0374A168 MOV X1, X31
	0x0374A16C MOV X21, X2
	0x0374A170 MOV X19, X8
	0x0374A174 BL 0x32277A8
	0x0374A178 TBNZ X0, 0x0, 0x374A20C
	0x0374A17C MOV X0, X20
	0x0374A180 BL 0x3748BF0
	0x0374A184 TBZ X0, 0x0, 0x374A240
	0x0374A188 ADD X8, X31, 0x58
	0x0374A18C MOV X0, X20
	0x0374A190 BL 0x3748C94
	0x0374A194 LDR W8, [X31 + 0x90]
	0x0374A198 ANDS W31, W8, 0xC
	0x0374A19C B.EQ 0x374A260
	0x0374A1A0 MOVI V0.2D, 0x0
	0x0374A1A4 LDR X0, [X20]
	0x0374A1A8 STUR V0, [X31 + 0x28]
	0x0374A1AC STUR V0, [X31 + 0x18]
	0x0374A1B0 LDR W9, [X20 + 0x10]
	0x0374A1B4 MOVZ W8, 0x8
	0x0374A1B8 ADD X1, X31, 0x0
	0x0374A1BC STP X22, X31, [X31]
	0x0374A1C0 ADD W2, W9, 0x1
	0x0374A1C4 STR X21, [X31 + 0x10]
	0x0374A1C8 STR W8, [X31 + 0x38]
	0x0374A1CC STUR X31, [X31 + 0x3C]
	0x0374A1D0 STUR X31, [X31 + 0x4C]
	0x0374A1D4 STUR X31, [X31 + 0x44]
	0x0374A1D8 STR W31, [X31 + 0x54]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xC97000
	007 Move W9, [X22+3467]
	008 Move X21, X1
	009 Move X19, X0
	010 Move X20, X8
	011 Move TEMP, X9
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x9AA000
	016 Move X0, [X0+2760]
	017 Call 0x1C17CF4
	018 Move X0, 0x9B3000
	019 Move X0, [X0+2120]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+3467], W8
	023 Move X0, X19
	024 Call BindingSyntax.get_valid, X0
	025 Move TEMP, X0
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfNotEqual {101}
	029 Move X0, X21
	030 Move X1, X31
	031 Call String.IsNullOrEmpty, X0
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfEqual {89}
	036 Move X8, [X19]
	037 Compare X8, 0
	038 JumpIfEqual {99}
	039 Move X8, [X8+48]
	040 Compare X8, 0
	041 JumpIfEqual {99}
	042 NotImplemented "Instruction LDRSW not yet implemented."
	043 Move W10, [X8+24]
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move W10, 88
	046 NotImplemented "Instruction MADD not yet implemented."
	047 Move X22, [X8+72]
	048 Move X1, X31
	049 Move X0, X22
	050 Call String.IsNullOrEmpty, X0
	051 Move TEMP, X0
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfEqual {75}
	055 Move X8, 0x9AA000
	056 Move X8, [X8+2760]
	057 Move W1, 2
	058 Move X0, [X8]
	059 Call 0x1C17D6C
	060 Compare X0, 0
	061 JumpIfEqual {99}
	062 Move W8, [X0+24]
	063 Move X1, X0
	064 Compare W8, 0
	065 JumpIfEqual {100}
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move [X1+32], X22
	068 Move [X1+40], X21
	069 Move X8, 0x9B3000
	070 Move X8, [X8+2120]
	071 Move X2, X31
	072 Move X0, [X8]
	073 Call String.Join, X0, X1
	074 Move X21, X0
	075 Move X0, [X19]
	076 Compare X0, 0
	077 JumpIfEqual {99}
	078 Move X8, [X0+48]
	079 Compare X8, 0
	080 JumpIfEqual {99}
	081 NotImplemented "Instruction LDRSW not yet implemented."
	082 Move W10, [X8+24]
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Move W10, 88
	085 NotImplemented "Instruction MADD not yet implemented."
	086 Move X1, X31
	087 Move [X8+72], X21
	088 Call InputActionMap.OnBindingModified, X0
	089 Move X8, [X19+16]
	090 Move V0, [X19]
	091 Move X22, [X31+16]
	092 Move X21, [X31+24]
	093 Move [X20+16], X8
	094 Move [X20], V0
	095 Move X20, [X31+32]
	096 Move X19, [X31+40]
	097 Move X30, [X31+48]
	098 Return X0
	099 Call 0x1C17F20
	100 Call 0x1C17F28
	101 Move X0, 0x9AA000
	102 Move X0, [X0+1456]
	103 Call 0x1C17D08
	104 Call 0x1C17F10
	105 Move X19, X0
	106 Move X0, 0x9D3000
	107 Move X0, [X0+2608]
	108 Call 0x1C17D08
	109 Move X1, X0
	110 Move X0, X19
	111 Move X2, X31
	112 Call InvalidOperationException..ctor, X0, X1
	113 Move X0, 0x9FC000
	114 Move X0, [X0+2648]
	115 Call 0x1C17D08
	116 Move X1, X0
	117 Move X0, X19
	118 Call 0x1C17DEC

Method: UnityEngine.InputSystem.InputActionSetupExtensions/BindingSyntax WithInteraction(System.String interaction)

Disassembly:
	0x0374A1DC BL 0x3746EA4
	0x0374A1E0 LDR W8, [X20 + 0x10]
	0x0374A1E4 LDP X9, X10, [X20]
	0x0374A1E8 LDP X22, X21, [X31 + 0xC0]
	0x0374A1EC LDR X30, [X31 + 0xB0]
	0x0374A1F0 ADD W8, W8, 0x1
	0x0374A1F4 STP X10, X31, [X19 + 0x8]
	0x0374A1F8 STR W8, [X19 + 0x10]
	0x0374A1FC STR X9, [X19]
	0x0374A200 LDP X20, X19, [X31 + 0xD0]
	0x0374A204 ADD X31, X31, 0xE0
	0x0374A208 RET
	0x0374A20C ADRP X0, 0x9AE000
	0x0374A210 LDR X0, [X0 + 0x528]
	0x0374A214 BL 0x1C16D08
	0x0374A218 BL 0x1C16F10
	0x0374A21C MOV X19, X0
	0x0374A220 ADRP X0, 0x9FB000
	0x0374A224 LDR X0, [X0 + 0xAB8]
	0x0374A228 BL 0x1C16D08
	0x0374A22C MOV X1, X0
	0x0374A230 MOV X0, X19
	0x0374A234 MOV X2, X31
	0x0374A238 BL 0x330E100
	0x0374A23C B 0x374A290
	0x0374A240 ADRP X0, 0x9A9000
	0x0374A244 LDR X0, [X0 + 0x5B0]
	0x0374A248 BL 0x1C16D08
	0x0374A24C BL 0x1C16F10
	0x0374A250 MOV X19, X0
	0x0374A254 ADRP X0, 0x9FB000
	0x0374A258 LDR X0, [X0 + 0xAE8]
	0x0374A25C B 0x374A27C
	0x0374A260 ADRP X0, 0x9A9000
	0x0374A264 LDR X0, [X0 + 0x5B0]
	0x0374A268 BL 0x1C16D08
	0x0374A26C BL 0x1C16F10
	0x0374A270 MOV X19, X0
	0x0374A274 ADRP X0, 0x9FB000
	0x0374A278 LDR X0, [X0 + 0xAF0]
	0x0374A27C BL 0x1C16D08
	0x0374A280 MOV X1, X0
	0x0374A284 MOV X0, X19
	0x0374A288 MOV X2, X31
	0x0374A28C BL 0x337DF1C
	0x0374A290 ADRP X0, 0x9FB000
	0x0374A294 LDR X0, [X0 + 0xAF8]
	0x0374A298 BL 0x1C16D08
	0x0374A29C MOV X1, X0
	0x0374A2A0 MOV X0, X19
	0x0374A2A4 BL 0x1C16DEC
	0x0374A2A8 LDR W8, [X0 + 0x38]
	0x0374A2AC ANDS W31, W1, 0x1
	0x0374A2B0 MOVZ W9, 0x8
	0x0374A2B4 CSEL W9, W9, W31, NE
	0x0374A2B8 AND W8, W8, 0xFFFFFFF7
	0x0374A2BC ORR W8, W8, W9, 0x0
	0x0374A2C0 STR W8, [X0 + 0x38]
	0x0374A2C4 RET
	0x0374A2C8 LDR X9, [X0 + 0x8]
	0x0374A2CC CBZ X9, 0x374A2E8
	0x0374A2D0 MOV X8, X0
	0x0374A2D4 LDR X0, [X0]
	0x0374A2D8 LDR W1, [X8 + 0x10]
	0x0374A2DC CBZ X0, 0x374A2EC
	0x0374A2E0 MOV X2, X31
	0x0374A2E4 B 0x3735C24
	0x0374A2E8 MOVN W1, 0x0
	0x0374A2EC MOV W0, W1
	0x0374A2F0 RET
	0x0374A2F4 SUB X31, X31, 0xC0
	0x0374A2F8 STR X30, [X31 + 0x70]
	0x0374A2FC STP X26, X25, [X31 + 0x80]
	0x0374A300 STP X24, X23, [X31 + 0x90]
	0x0374A304 STP X22, X21, [X31 + 0xA0]
	0x0374A308 STP X20, X19, [X31 + 0xB0]
	0x0374A30C ADRP X19, 0xC96000
	0x0374A310 LDRB W9, [X19 + 0xD8F]
	0x0374A314 MOV X22, X4
	0x0374A318 MOV X24, X3
	0x0374A31C MOV X25, X2
	0x0374A320 MOV X23, X1
	0x0374A324 MOV X20, X0
	0x0374A328 MOV X21, X8
	0x0374A32C TBNZ X9, 0x0, 0x374A344
	0x0374A330 ADRP X0, 0x9A9000
	0x0374A334 LDR X0, [X0 + 0xE00]
	0x0374A338 BL 0x1C16CF4
	0x0374A33C MOVZ W8, 0x1
	0x0374A340 STRB W8, [X19 + 0xD8F]
	0x0374A344 ADRP X26, 0x9A9000
	0x0374A348 LDR X26, [X26 + 0xE00]
	0x0374A34C MOV X0, X31
	0x0374A350 BL 0x373BF80
	0x0374A354 LDR X9, [X20]
	0x0374A358 MOV X19, X0
	0x0374A35C CBZ X9, 0x374A390
	0x0374A360 MOVI V0.2D, 0x0
	0x0374A364 STP X31, X31, [X31]
	0x0374A368 STR X31, [X31 + 0x50]
	0x0374A36C STP X25, X31, [X31 + 0x10]
	0x0374A370 STP V0, V0, [X31 + 0x30]
	0x0374A374 STP X22, X24, [X31 + 0x20]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+48], X22
	004 Move [X31+56], X21
	005 Move [X31+64], X20
	006 Move [X31+72], X19
	007 Move X20, X1
	008 Move X21, X0
	009 Move X19, X8
	010 Call BindingSyntax.get_valid, X0
	011 Move TEMP, X0
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfNotEqual {45}
	015 Move X0, X20
	016 Move X1, X31
	017 Call String.IsNullOrEmpty, X0
	018 Move TEMP, X0
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {57}
	022 Compare X20, 0
	023 JumpIfEqual {80}
	024 Move W1, 59
	025 Move X0, X20
	026 Move X2, X31
	027 Move W22, 59
	028 Call String.IndexOf, X0, X1
	029 Add W31, W0, 1
	030 Add X8, X31, 8
	031 Move X0, X21
	032 Move X1, X20
	033 Call BindingSyntax.WithInteractions, X0, X1
	034 Move X8, [X31+24]
	035 Move X30, [X31+32]
	036 NotImplemented "Instruction LDUR not yet implemented."
	037 Move X22, [X31+48]
	038 Move X21, [X31+56]
	039 Move [X19+16], X8
	040 Move [X19], V0
	041 Move X20, [X31+64]
	042 Move X19, [X31+72]
	043 Add X31, X31, 80
	044 Return X0
	045 Move X0, 0x9AA000
	046 Move X0, [X0+1456]
	047 Call 0x1C17D08
	048 Call 0x1C17F10
	049 Move X19, X0
	050 Move X0, 0x9D3000
	051 Move X0, [X0+2608]
	052 Call 0x1C17D08
	053 Move X1, X0
	054 Move X0, X19
	055 Move X2, X31
	056 Call InvalidOperationException..ctor, X0, X1
	057 Move X0, 0x9B2000
	058 Move X0, [X0+1400]
	059 Call 0x1C17D08
	060 Call 0x1C17F10
	061 Move X19, X0
	062 Move X0, 0x9FC000
	063 Move X0, [X0+2656]
	064 Call 0x1C17D08
	065 Move X20, X0
	066 Move X0, 0x9FB000
	067 Move X0, [X0+3872]
	068 Call 0x1C17D08
	069 Move X2, X0
	070 Move X0, X19
	071 Move X1, X20
	072 Move X3, X31
	073 Call ArgumentException..ctor, X0, X1, X2
	074 Move X0, 0x9FC000
	075 Move X0, [X0+2664]
	076 Call 0x1C17D08
	077 Move X1, X0
	078 Move X0, X19
	079 Call 0x1C17DEC
	080 Call 0x1C17F20
	081 NotImplemented "Instruction STRH not yet implemented."
	082 Move X0, 0x9AC000
	083 Move X0, [X0+368]
	084 Call 0x1C17D08
	085 Add X1, X31, 8
	086 Call 0x1C17E04
	087 Move X19, X0
	088 Move X0, 0x9FC000
	089 Move X0, [X0+2672]
	090 Call 0x1C17D08
	091 Move X1, X19
	092 Move X2, X31
	093 Call String.Format, X0, X1
	094 Move X19, X0
	095 Move X0, 0x9B2000
	096 Move X0, [X0+1400]
	097 Call 0x1C17D08
	098 Call 0x1C17F10
	099 Move X20, X0
	100 Move X0, 0x9FB000
	101 Move X0, [X0+3872]
	102 Call 0x1C17D08
	103 Move X2, X0
	104 Move X0, X20
	105 Move X1, X19
	106 Move X3, X31
	107 Call ArgumentException..ctor, X0, X1, X2
	108 Move X0, 0x9FC000
	109 Move X0, [X0+2664]
	110 Call 0x1C17D08
	111 Move X1, X0
	112 Move X0, X20
	113 Call 0x1C17DEC

Method: UnityEngine.InputSystem.InputActionSetupExtensions/BindingSyntax WithInteractions(System.String interactions)

Disassembly:
	0x0374A378 ADD X8, X31, 0x58
	0x0374A37C ADD X1, X31, 0x0
	0x0374A380 MOV X0, X9
	0x0374A384 BL 0x3746D3C
	0x0374A388 LDR W8, [X31 + 0x68]
	0x0374A38C B 0x374A3B4
	0x0374A390 LDR X0, [X20 + 0x8]
	0x0374A394 ADD X8, X31, 0x0
	0x0374A398 MOV X1, X25
	0x0374A39C MOV X2, X31
	0x0374A3A0 MOV X3, X24
	0x0374A3A4 MOV X4, X31
	0x0374A3A8 MOV X5, X22
	0x0374A3AC BL 0x3747040
	0x0374A3B0 LDR W8, [X31 + 0x10]
	0x0374A3B4 LDR X9, [X20 + 0x8]
	0x0374A3B8 CBZ X9, 0x374A480
	0x0374A3BC LDR X9, [X9 + 0x30]
	0x0374A3C0 CBZ X9, 0x374A484
	0x0374A3C4 LDR W10, [X9 + 0x18]
	0x0374A3C8 CMP W8, W10
	0x0374A3CC B.CS 0x374A488
	0x0374A3D0 MOVZ W10, 0x58
	0x0374A3D4 SMADDL X8, X8, X10, X9
	0x0374A3D8 LDR W9, [X8 + 0x58]
	0x0374A3DC MOV X22, X31
	0x0374A3E0 STR X23, [X8 + 0x20]
	0x0374A3E4 ORR W9, W9, 0x8
	0x0374A3E8 STR W9, [X8 + 0x58]
	0x0374A3EC CBZ X19, 0x374A448
	0x0374A3F0 LDR X8, [X19]
	0x0374A3F4 LDR X1, [X26]
	0x0374A3F8 LDRH W9, [X8 + 0x12E]
	0x0374A3FC CBZ X9, 0x374A420
	0x0374A400 LDR X10, [X8 + 0xB0]
	0x0374A404 ADD X10, X10, 0x8
	0x0374A408 LDUR X11, [X10 - 0x8]
	0x0374A40C CMP X11, X1
	0x0374A410 B.EQ 0x374A430
	0x0374A414 SUBS X9, X9, 0x1
	0x0374A418 ADD X10, X10, 0x10
	0x0374A41C B.NE 0x374A408
	0x0374A420 MOV X0, X19
	0x0374A424 MOV W2, W31
	0x0374A428 BL 0x1C5C788
	0x0374A42C B 0x374A43C
	0x0374A430 LDRSW X9, [X10]
	0x0374A434 ADD X8, X8, X9, 0x4, LSL
	0x0374A438 ADD X0, X8, 0x138
	0x0374A43C LDP X8, X1, [X0]
	0x0374A440 MOV X0, X19
	0x0374A444 BLR X8
	0x0374A448 CBNZ X22, 0x374A478
	0x0374A44C LDR X8, [X20 + 0x10]
	0x0374A450 LDR V0, [X20]
	0x0374A454 LDP X20, X19, [X31 + 0xB0]
	0x0374A458 LDP X24, X23, [X31 + 0x90]
	0x0374A45C STR X8, [X21 + 0x10]
	0x0374A460 STR V0, [X21]
	0x0374A464 LDP X22, X21, [X31 + 0xA0]
	0x0374A468 LDP X26, X25, [X31 + 0x80]
	0x0374A46C LDR X30, [X31 + 0x70]
	0x0374A470 ADD X31, X31, 0xC0
	0x0374A474 RET
	0x0374A478 MOV X0, X22
	0x0374A47C BL 0x1C16F18
	0x0374A480 BL 0x1C16F20
	0x0374A484 BL 0x1C16F20
	0x0374A488 BL 0x1C16F28
	0x0374A48C B 0x374A49C
	0x0374A490 B 0x374A49C
	0x0374A494 B 0x374A49C
	0x0374A498 B 0x374A49C
	0x0374A49C MOV X23, X0
	0x0374A4A0 CMP W1, 0x1
	0x0374A4A4 B.NE 0x374A4BC
	0x0374A4A8 MOV X0, X23
	0x0374A4AC BL 0x3EB1AD0
	0x0374A4B0 LDR X22, [X0]
	0x0374A4B4 BL 0x3EB1AE0
	0x0374A4B8 B 0x374A3EC
	0x0374A4BC MOV X22, X31
	0x0374A4C0 B 0x374A4C8
	0x0374A4C4 MOV X23, X0
	0x0374A4C8 CBZ X19, 0x374A524
	0x0374A4CC LDR X8, [X19]
	0x0374A4D0 LDR X1, [X26]
	0x0374A4D4 LDRH W9, [X8 + 0x12E]
	0x0374A4D8 CBZ X9, 0x374A4FC
	0x0374A4DC LDR X10, [X8 + 0xB0]
	0x0374A4E0 ADD X10, X10, 0x8
	0x0374A4E4 LDUR X11, [X10 - 0x8]
	0x0374A4E8 CMP X11, X1
	0x0374A4EC B.EQ 0x374A50C
	0x0374A4F0 SUBS X9, X9, 0x1
	0x0374A4F4 ADD X10, X10, 0x10
	0x0374A4F8 B.NE 0x374A4E4
	0x0374A4FC MOV X0, X19
	0x0374A500 MOV W2, W31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xC97000
	007 Move W9, [X22+3468]
	008 Move X21, X1
	009 Move X19, X0
	010 Move X20, X8
	011 Move TEMP, X9
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x9AA000
	016 Move X0, [X0+2760]
	017 Call 0x1C17CF4
	018 Move X0, 0x9B3000
	019 Move X0, [X0+2120]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+3468], W8
	023 Move X0, X19
	024 Call BindingSyntax.get_valid, X0
	025 Move TEMP, X0
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfNotEqual {101}
	029 Move X0, X21
	030 Move X1, X31
	031 Call String.IsNullOrEmpty, X0
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfEqual {89}
	036 Move X8, [X19]
	037 Compare X8, 0
	038 JumpIfEqual {99}
	039 Move X8, [X8+48]
	040 Compare X8, 0
	041 JumpIfEqual {99}
	042 NotImplemented "Instruction LDRSW not yet implemented."
	043 Move W10, [X8+24]
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move W10, 88
	046 NotImplemented "Instruction MADD not yet implemented."
	047 Move X22, [X8+56]
	048 Move X1, X31
	049 Move X0, X22
	050 Call String.IsNullOrEmpty, X0
	051 Move TEMP, X0
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfEqual {75}
	055 Move X8, 0x9AA000
	056 Move X8, [X8+2760]
	057 Move W1, 2
	058 Move X0, [X8]
	059 Call 0x1C17D6C
	060 Compare X0, 0
	061 JumpIfEqual {99}
	062 Move W8, [X0+24]
	063 Move X1, X0
	064 Compare W8, 0
	065 JumpIfEqual {100}
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move [X1+32], X22
	068 Move [X1+40], X21
	069 Move X8, 0x9B3000
	070 Move X8, [X8+2120]
	071 Move X2, X31
	072 Move X0, [X8]
	073 Call String.Join, X0, X1
	074 Move X21, X0
	075 Move X0, [X19]
	076 Compare X0, 0
	077 JumpIfEqual {99}
	078 Move X8, [X0+48]
	079 Compare X8, 0
	080 JumpIfEqual {99}
	081 NotImplemented "Instruction LDRSW not yet implemented."
	082 Move W10, [X8+24]
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Move W10, 88
	085 NotImplemented "Instruction MADD not yet implemented."
	086 Move X1, X31
	087 Move [X8+56], X21
	088 Call InputActionMap.OnBindingModified, X0
	089 Move X8, [X19+16]
	090 Move V0, [X19]
	091 Move X22, [X31+16]
	092 Move X21, [X31+24]
	093 Move [X20+16], X8
	094 Move [X20], V0
	095 Move X20, [X31+32]
	096 Move X19, [X31+40]
	097 Move X30, [X31+48]
	098 Return X0
	099 Call 0x1C17F20
	100 Call 0x1C17F28
	101 Move X0, 0x9AA000
	102 Move X0, [X0+1456]
	103 Call 0x1C17D08
	104 Call 0x1C17F10
	105 Move X19, X0
	106 Move X0, 0x9D3000
	107 Move X0, [X0+2608]
	108 Call 0x1C17D08
	109 Move X1, X0
	110 Move X0, X19
	111 Move X2, X31
	112 Call InvalidOperationException..ctor, X0, X1
	113 Move X0, 0x9FC000
	114 Move X0, [X0+2680]
	115 Call 0x1C17D08
	116 Move X1, X0
	117 Move X0, X19
	118 Call 0x1C17DEC

Method: UnityEngine.InputSystem.InputActionSetupExtensions/BindingSyntax WithInteraction()

Disassembly:
	0x022B6138 LDR X8, [X8 + 0x28]
	0x022B613C MOV X19, X4
	0x022B6140 MOV X20, X3
	0x022B6144 MOV W27, W2
	0x022B6148 STUR X8, [X29 - 0x8]
	0x022B614C LDR X8, [X4 + 0x38]
	0x022B6150 MOV W21, W1
	0x022B6154 MOV X22, X0
	0x022B6158 CBNZ X8, 0x22B6168
	0x022B615C MOV X0, X19
	0x022B6160 BL 0x1C5C6E0
	0x022B6164 LDR X8, [X19 + 0x38]
	0x022B6168 LDR X8, [X8 + 0x8]
	0x022B616C LDR W23, [X8 + 0xFC]
	0x022B6170 ADD X8, X31, 0x0
	0x022B6174 ADD X9, X23, 0xF
	0x022B6178 AND X9, X9, 0x1FFFFFFFF
	0x022B617C SUB X24, X8, X9
	0x022B6180 ADD X31, X24, 0x0
	0x022B6184 ADD X8, X31, 0x0
	0x022B6188 SUB X25, X8, X9
	0x022B618C ADD X31, X25, 0x0
	0x022B6190 ADD X8, X31, 0x0
	0x022B6194 SUB X0, X8, X9
	0x022B6198 ADD X31, X0, 0x0
	0x022B619C MOV W1, W31
	0x022B61A0 MOV X2, X23
	0x022B61A4 STUR X0, [X29 - 0x28]
	0x022B61A8 BL 0x3EB1B10
	0x022B61AC ADD W8, W27, 0x1
	0x022B61B0 STUR W8, [X29 - 0x34]
	0x022B61B4 LDUR W8, [X29 - 0x34]
	0x022B61B8 MOV W28, W21
	0x022B61BC ADD W21, W21, 0x1
	0x022B61C0 CMP W21, W8
	0x022B61C4 B.GE 0x22B6384
	0x022B61C8 CBZ X22, 0x22B63B8
	0x022B61CC LDR X27, [X22 + 0x18]
	0x022B61D0 CMP W21, W27
	0x022B61D4 B.CS 0x22B6380
	0x022B61D8 LDR X8, [X22]
	0x022B61DC SXTW X9, W21
	0x022B61E0 MOV X0, X24
	0x022B61E4 MOV X2, X23
	0x022B61E8 LDR W8, [X8 + 0x104]
	0x022B61EC NOP
	0x022B61F0 MADD X8, X8, X9, X22
	0x022B61F4 ADD X1, X8, 0x20
	0x022B61F8 BL 0x3EB1AC0
	0x022B61FC LDUR X0, [X29 - 0x28]
	0x022B6200 MOV X1, X24
	0x022B6204 MOV X2, X23
	0x022B6208 BL 0x3EB1AC0
	0x022B620C STUR X21, [X29 - 0x30]
	0x022B6210 TBNZ X28, 0x1F, 0x22B6320
	0x022B6214 LDUR X1, [X29 - 0x28]
	0x022B6218 MOV X0, X24
	0x022B621C MOV X2, X23
	0x022B6220 BL 0x3EB1AC0
	0x022B6224 CMP W28, W27
	0x022B6228 B.CS 0x22B6380
	0x022B622C LDR X8, [X22]
	0x022B6230 MOV W21, W28
	0x022B6234 MOV X0, X25
	0x022B6238 MOV X2, X23
	0x022B623C LDR W8, [X8 + 0x104]
	0x022B6240 NOP
	0x022B6244 MADD X8, X8, X21, X22
	0x022B6248 ADD X1, X8, 0x20
	0x022B624C BL 0x3EB1AC0
	0x022B6250 CBZ X20, 0x22B63B8
	0x022B6254 LDR X8, [X19 + 0x38]
	0x022B6258 MOV X10, X25
	0x022B625C LDR X9, [X8 + 0x8]
	0x022B6260 LDR W11, [X9 + 0x28]
	0x022B6264 MOV X9, X24
	0x022B6268 TBNZ X11, 0x1F, 0x22B6274
	0x022B626C LDR X9, [X24]
	0x022B6270 LDR X10, [X25]
	0x022B6274 LDR X1, [X8 + 0x18]
	0x022B6278 SUB X3, X29, 0x20
	0x022B627C SUB X4, X29, 0xC
	0x022B6280 MOV X2, X20
	0x022B6284 LDR X0, [X1]
	0x022B6288 STP X9, X10, [X29 - 0x20]
	0x022B628C LDR X8, [X1 + 0x10]
	0x022B6290 BLR X8
	0x022B6294 LDUR W8, [X29 - 0xC]
	0x022B6298 LDR X27, [X22 + 0x18]
	0x022B629C TBZ X8, 0x1F, 0x22B631C
	0x022B62A0 CMP W28, W27
	0x022B62A4 B.CS 0x22B6380
	0x022B62A8 LDR X26, [X22]
	0x022B62AC MOV X0, X24
	0x022B62B0 MOV X2, X23
	0x022B62B4 LDR W8, [X26 + 0x104]
	0x022B62B8 NOP
	0x022B62BC MADD X8, X8, X21, X22
	0x022B62C0 ADD X1, X8, 0x20
	0x022B62C4 BL 0x3EB1AC0
	0x022B62C8 ADD W21, W28, 0x1
	0x022B62CC CMP W21, W27
	0x022B62D0 B.CS 0x22B6380
	0x022B62D4 LDR W8, [X26 + 0x104]
	0x022B62D8 SXTW X9, W21
	0x022B62DC MOV X1, X24
	0x022B62E0 MOV X2, X23

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+64], X22
	004 Move [X31+72], X21
	005 Move [X31+80], X20
	006 Move [X31+88], X19
	007 Move X9, [X1+56]
	008 Move X19, X1
	009 Move X21, X0
	010 Move X20, X8
	011 Compare X9, 0
	012 JumpIfNotEqual {24}
	013 Move X0, 0x1E66000
	014 Move X0, [X0+3136]
	015 Call 0x1C17CF4
	016 Move X0, 0x1E3E000
	017 Move X0, [X0+1728]
	018 Call 0x1C17CF4
	019 Move X8, [X19+56]
	020 Compare X8, 0
	021 JumpIfNotEqual {24}
	022 Move X0, X19
	023 Call 0x1C5D6E0
	024 Move X0, X21
	025 Move X1, X31
	026 Move [X31+32], X31
	027 Move [X31+40], X31
	028 Call BindingSyntax.get_valid, X0
	029 Move TEMP, X0
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfNotEqual {82}
	033 Move X8, 0x1E3E000
	034 Move X8, [X8+1728]
	035 Move X0, [X8]
	036 Move X8, [X19+56]
	037 Move W9, [X0+224]
	038 Move X22, [X8]
	039 Compare W9, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Move X0, X22
	043 Move X1, X31
	044 Call Type.GetTypeFromHandle, X0
	045 Move X8, 0x1E66000
	046 Move X8, [X8+3136]
	047 Move X1, X0
	048 Move X2, X31
	049 Move X8, [X8]
	050 Move X8, [X8+184]
	051 Move X0, X8
	052 Call TypeTable.FindNameForType, X0, X1
	053 Move [X31+32], X0
	054 Move [X31+40], X1
	055 Add X0, X31, 32
	056 Move X1, X31
	057 Call InternedString.IsEmpty, X0
	058 Move TEMP, X0
	059 And TEMP, TEMP, 1
	060 Compare TEMP, 1
	061 JumpIfEqual {95}
	062 Move X0, [X31+32]
	063 Move X1, [X31+40]
	064 Move X2, X31
	065 Call InternedString.op_Implicit, X0
	066 Move X1, X0
	067 Add X8, X31, 8
	068 Move X0, X21
	069 Move X2, X31
	070 Call BindingSyntax.WithInteraction, X0, X1
	071 Move X8, [X31+24]
	072 NotImplemented "Instruction LDUR not yet implemented."
	073 Move X22, [X31+64]
	074 Move X21, [X31+72]
	075 Move X30, [X31+48]
	076 Move [X20+16], X8
	077 Move [X20], V0
	078 Move X20, [X31+80]
	079 Move X19, [X31+88]
	080 Add X31, X31, 96
	081 Return X0
	082 Move X0, 0x1E3E000
	083 Move X0, [X0+1456]
	084 Call 0x1C17D08
	085 Call 0x1C17F10
	086 Move X20, X0
	087 Move X0, 0x1E67000
	088 Move X0, [X0+2608]
	089 Call 0x1C17D08
	090 Move X1, X0
	091 Move X0, X20
	092 Move X2, X31
	093 Call InvalidOperationException..ctor, X0, X1
	094 Move X0, X20
	095 Move X8, [X19+56]
	096 Move X0, 0x1E3E000
	097 Move X20, [X8]
	098 Move X0, [X0+1728]
	099 Call 0x1C17D08
	100 Call 0x19913D0
	101 Move X0, X20
	102 Move X1, X31
	103 Call Type.GetTypeFromHandle, X0
	104 Move X20, X0
	105 Move X0, 0x1E67000
	106 Move X0, [X0+2616]
	107 Call 0x1C17D08
	108 Move X1, X20
	109 Move X2, X31
	110 Call String.Format, X0, X1
	111 Move X20, X0
	112 Move X0, 0x1E3E000
	113 Move X0, [X0+2880]
	114 Call 0x1C17D08
	115 Call 0x1C17F10
	116 Move X1, X20
	117 Move X2, X31
	118 Move X21, X0
	119 Call NotSupportedException..ctor, X0, X1
	120 Move X0, X21
	121 Move X1, X19
	122 Call 0x1C17DEC

Method: UnityEngine.InputSystem.InputActionSetupExtensions/BindingSyntax WithProcessor(System.String processor)

Disassembly:
	0x0374A504 BL 0x1C5C788
	0x0374A508 B 0x374A518
	0x0374A50C LDRSW X9, [X10]
	0x0374A510 ADD X8, X8, X9, 0x4, LSL
	0x0374A514 ADD X0, X8, 0x138
	0x0374A518 LDP X8, X1, [X0]
	0x0374A51C MOV X0, X19
	0x0374A520 BLR X8
	0x0374A524 CBNZ X22, 0x374A530
	0x0374A528 MOV X0, X23
	0x0374A52C BL 0x1D2C690
	0x0374A530 MOV X0, X22
	0x0374A534 BL 0x1C16F18
	0x0374A538 BL 0x1990590
	0x0374A53C SUB X31, X31, 0xB0
	0x0374A540 STP X30, X23, [X31 + 0x80]
	0x0374A544 STP X22, X21, [X31 + 0x90]
	0x0374A548 STP X20, X19, [X31 + 0xA0]
	0x0374A54C ADRP X22, 0xC96000
	0x0374A550 LDRB W8, [X22 + 0xD92]
	0x0374A554 MOV W21, W2
	0x0374A558 MOV X20, X1
	0x0374A55C MOV X19, X0
	0x0374A560 TBNZ X8, 0x0, 0x374A584
	0x0374A564 ADRP X0, 0x9FB000
	0x0374A568 LDR X0, [X0 + 0xB00]
	0x0374A56C BL 0x1C16CF4
	0x0374A570 ADRP X0, 0x9A9000
	0x0374A574 LDR X0, [X0 + 0x598]
	0x0374A578 BL 0x1C16CF4
	0x0374A57C MOVZ W8, 0x1
	0x0374A580 STRB W8, [X22 + 0xD92]
	0x0374A584 MOV X0, X20
	0x0374A588 MOV X1, X31
	0x0374A58C STP X31, X31, [X31 + 0x60]
	0x0374A590 STR X31, [X31 + 0x70]
	0x0374A594 BL 0x32277A8
	0x0374A598 TBNZ X0, 0x0, 0x374A6E4
	0x0374A59C ADRP X23, 0x9A9000
	0x0374A5A0 LDR X23, [X23 + 0x598]
	0x0374A5A4 LDR X22, [X19]
	0x0374A5A8 LDR X0, [X23]
	0x0374A5AC LDR W8, [X0 + 0xE0]
	0x0374A5B0 CBNZ W8, 0x374A5B8
	0x0374A5B4 BL 0x1C16DFC
	0x0374A5B8 MOV X0, X22
	0x0374A5BC MOV X1, X31
	0x0374A5C0 MOV X2, X31
	0x0374A5C4 BL 0x3C354F8
	0x0374A5C8 TBZ X0, 0x0, 0x374A5FC
	0x0374A5CC LDR X8, [X19]
	0x0374A5D0 CBZ X8, 0x374A6E0
	0x0374A5D4 LDR X8, [X8 + 0x20]
	0x0374A5D8 CBZ X8, 0x374A6E0
	0x0374A5DC LDRSW X9, [X19 + 0x8]
	0x0374A5E0 LDR W10, [X8 + 0x18]
	0x0374A5E4 CMP W9, W10
	0x0374A5E8 B.CS 0x374A72C
	0x0374A5EC MOVZ W10, 0x18
	0x0374A5F0 MADD X8, X9, X10, X8
	0x0374A5F4 ADD X8, X8, 0x20
	0x0374A5F8 B 0x374A600
	0x0374A5FC ADD X8, X19, 0x10
	0x0374A600 ADRP X9, 0x9FB000
	0x0374A604 LDR X9, [X9 + 0xB00]
	0x0374A608 LDR V0, [X8]
	0x0374A60C LDR X8, [X8 + 0x10]
	0x0374A610 ADD X10, X31, 0x60
	0x0374A614 LDR X3, [X9]
	0x0374A618 ADD X0, X10, 0x10
	0x0374A61C MOV W2, W21
	0x0374A620 MOV X1, X20
	0x0374A624 STR X8, [X31 + 0x50]
	0x0374A628 STR V0, [X31 + 0x4]
	0x0374A62C STR V0, [X31 + 0x6]
	0x0374A630 STR X8, [X31 + 0x70]
	0x0374A634 BL 0x21734A0
	0x0374A638 LDR X0, [X23]
	0x0374A63C LDR X20, [X19]
	0x0374A640 LDR W8, [X0 + 0xE0]
	0x0374A644 CBNZ W8, 0x374A64C
	0x0374A648 BL 0x1C16DFC
	0x0374A64C MOV X0, X20
	0x0374A650 MOV X1, X31
	0x0374A654 MOV X2, X31
	0x0374A658 BL 0x3C3883C
	0x0374A65C TBZ X0, 0x0, 0x374A674
	0x0374A660 LDR X8, [X31 + 0x70]
	0x0374A664 LDR V0, [X31 + 0x6]
	0x0374A668 STR X8, [X19 + 0x20]
	0x0374A66C STR V0, [X19 + 0x1]
	0x0374A670 B 0x374A6CC
	0x0374A674 LDR X8, [X19]
	0x0374A678 CBZ X8, 0x374A6E0
	0x0374A67C LDR X8, [X8 + 0x20]
	0x0374A680 LDR V0, [X31 + 0x6]
	0x0374A684 LDR X10, [X31 + 0x70]
	0x0374A688 LDRSW X9, [X19 + 0x8]
	0x0374A68C STR V0, [X31 + 0x2]
	0x0374A690 STR X10, [X31 + 0x30]
	0x0374A694 CBZ X8, 0x374A6E0
	0x0374A698 LDR V0, [X31 + 0x2]
	0x0374A69C LDR X10, [X31 + 0x30]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+48], X22
	004 Move [X31+56], X21
	005 Move [X31+64], X20
	006 Move [X31+72], X19
	007 Move X20, X1
	008 Move X21, X0
	009 Move X19, X8
	010 Call BindingSyntax.get_valid, X0
	011 Move TEMP, X0
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfNotEqual {45}
	015 Move X0, X20
	016 Move X1, X31
	017 Call String.IsNullOrEmpty, X0
	018 Move TEMP, X0
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {57}
	022 Compare X20, 0
	023 JumpIfEqual {80}
	024 Move W1, 59
	025 Move X0, X20
	026 Move X2, X31
	027 Move W22, 59
	028 Call String.IndexOf, X0, X1
	029 Add W31, W0, 1
	030 Add X8, X31, 8
	031 Move X0, X21
	032 Move X1, X20
	033 Call BindingSyntax.WithProcessors, X0, X1
	034 Move X8, [X31+24]
	035 Move X30, [X31+32]
	036 NotImplemented "Instruction LDUR not yet implemented."
	037 Move X22, [X31+48]
	038 Move X21, [X31+56]
	039 Move [X19+16], X8
	040 Move [X19], V0
	041 Move X20, [X31+64]
	042 Move X19, [X31+72]
	043 Add X31, X31, 80
	044 Return X0
	045 Move X0, 0x9AA000
	046 Move X0, [X0+1456]
	047 Call 0x1C17D08
	048 Call 0x1C17F10
	049 Move X19, X0
	050 Move X0, 0x9D3000
	051 Move X0, [X0+2608]
	052 Call 0x1C17D08
	053 Move X1, X0
	054 Move X0, X19
	055 Move X2, X31
	056 Call InvalidOperationException..ctor, X0, X1
	057 Move X0, 0x9B2000
	058 Move X0, [X0+1400]
	059 Call 0x1C17D08
	060 Call 0x1C17F10
	061 Move X19, X0
	062 Move X0, 0x9FC000
	063 Move X0, [X0+2688]
	064 Call 0x1C17D08
	065 Move X20, X0
	066 Move X0, 0x9D6000
	067 Move X0, [X0+32]
	068 Call 0x1C17D08
	069 Move X2, X0
	070 Move X0, X19
	071 Move X1, X20
	072 Move X3, X31
	073 Call ArgumentException..ctor, X0, X1, X2
	074 Move X0, 0x9FC000
	075 Move X0, [X0+2696]
	076 Call 0x1C17D08
	077 Move X1, X0
	078 Move X0, X19
	079 Call 0x1C17DEC
	080 Call 0x1C17F20
	081 NotImplemented "Instruction STRH not yet implemented."
	082 Move X0, 0x9AC000
	083 Move X0, [X0+368]
	084 Call 0x1C17D08
	085 Add X1, X31, 8
	086 Call 0x1C17E04
	087 Move X19, X0
	088 Move X0, 0x9FC000
	089 Move X0, [X0+2704]
	090 Call 0x1C17D08
	091 Move X1, X19
	092 Move X2, X31
	093 Call String.Format, X0, X1
	094 Move X19, X0
	095 Move X0, 0x9B2000
	096 Move X0, [X0+1400]
	097 Call 0x1C17D08
	098 Call 0x1C17F10
	099 Move X20, X0
	100 Move X0, 0x9D6000
	101 Move X0, [X0+32]
	102 Call 0x1C17D08
	103 Move X2, X0
	104 Move X0, X20
	105 Move X1, X19
	106 Move X3, X31
	107 Call ArgumentException..ctor, X0, X1, X2
	108 Move X0, 0x9FC000
	109 Move X0, [X0+2696]
	110 Call 0x1C17D08
	111 Move X1, X0
	112 Move X0, X20
	113 Call 0x1C17DEC

Method: UnityEngine.InputSystem.InputActionSetupExtensions/BindingSyntax WithProcessors(System.String processors)

Disassembly:
	0x0374A6A0 STR V0, [X31]
	0x0374A6A4 STR X10, [X31 + 0x10]
	0x0374A6A8 LDR W10, [X8 + 0x18]
	0x0374A6AC CMP W9, W10
	0x0374A6B0 B.CS 0x374A72C
	0x0374A6B4 LDR X10, [X31 + 0x10]
	0x0374A6B8 LDR V0, [X31]
	0x0374A6BC MOVZ W11, 0x18
	0x0374A6C0 MADD X8, X9, X11, X8
	0x0374A6C4 STR X10, [X8 + 0x30]
	0x0374A6C8 STR V0, [X8 + 0x2]
	0x0374A6CC LDP X20, X19, [X31 + 0xA0]
	0x0374A6D0 LDP X22, X21, [X31 + 0x90]
	0x0374A6D4 LDP X30, X23, [X31 + 0x80]
	0x0374A6D8 ADD X31, X31, 0xB0
	0x0374A6DC RET
	0x0374A6E0 BL 0x1C16F20
	0x0374A6E4 ADRP X0, 0x9AE000
	0x0374A6E8 LDR X0, [X0 + 0x528]
	0x0374A6EC BL 0x1C16D08
	0x0374A6F0 BL 0x1C16F10
	0x0374A6F4 MOV X19, X0
	0x0374A6F8 ADRP X0, 0x9FB000
	0x0374A6FC LDR X0, [X0 + 0xB08]
	0x0374A700 BL 0x1C16D08
	0x0374A704 MOV X1, X0
	0x0374A708 MOV X0, X19
	0x0374A70C MOV X2, X31
	0x0374A710 BL 0x330E100
	0x0374A714 ADRP X0, 0x9FB000
	0x0374A718 LDR X0, [X0 + 0xB10]
	0x0374A71C BL 0x1C16D08
	0x0374A720 MOV X1, X0
	0x0374A724 MOV X0, X19
	0x0374A728 BL 0x1C16DEC
	0x0374A72C BL 0x1C16F28
	0x0374A730 SUB X31, X31, 0xC0
	0x0374A734 STP X30, X19, [X31 + 0xB0]
	0x0374A738 MOV X19, X0
	0x0374A73C ADD X0, X31, 0x0
	0x0374A740 MOVZ W2, 0x58
	0x0374A744 BL 0x3EB1AC0
	0x0374A748 ADD X1, X19, 0x10
	0x0374A74C ADD X0, X31, 0x58
	0x0374A750 MOVZ W2, 0x58
	0x0374A754 BL 0x3EB1AC0
	0x0374A758 ADD X0, X31, 0x0
	0x0374A75C ADD X1, X31, 0x58
	0x0374A760 BL 0x3752638
	0x0374A764 LDP X30, X19, [X31 + 0xB0]
	0x0374A768 AND W0, W0, 0x1
	0x0374A76C ADD X31, X31, 0xC0
	0x0374A770 RET
	0x0374A774 SUB X31, X31, 0x70
	0x0374A778 STP X30, X19, [X31 + 0x60]
	0x0374A77C MOV X19, X0
	0x0374A780 ADD X0, X31, 0x8
	0x0374A784 MOVZ W2, 0x58
	0x0374A788 BL 0x3EB1AC0
	0x0374A78C ADD X1, X31, 0x8
	0x0374A790 MOV X0, X19
	0x0374A794 BL 0x3752638
	0x0374A798 LDP X30, X19, [X31 + 0x60]
	0x0374A79C AND W0, W0, 0x1
	0x0374A7A0 ADD X31, X31, 0x70
	0x0374A7A4 RET
	0x0374A7A8 LDR W0, [X0 + 0x5C]
	0x0374A7AC RET
	0x0374A7B0 LDR W0, [X0 + 0x48]
	0x0374A7B4 RET
	0x0374A7B8 LDR W0, [X0 + 0x4C]
	0x0374A7BC RET
	0x0374A7C0 LDR W0, [X0 + 0x54]
	0x0374A7C4 RET
	0x0374A7C8 LDR W0, [X0 + 0x50]
	0x0374A7CC RET
	0x0374A7D0 LDR W0, [X0 + 0x58]
	0x0374A7D4 RET
	0x0374A7D8 LDR X0, [X0 + 0xB8]
	0x0374A7DC RET
	0x0374A7E0 LDR X0, [X0 + 0x60]
	0x0374A7E4 RET
	0x0374A7E8 LDR X0, [X0 + 0x68]
	0x0374A7EC RET
	0x0374A7F0 LDR X0, [X0 + 0x70]
	0x0374A7F4 RET
	0x0374A7F8 LDR X0, [X0 + 0xA0]
	0x0374A7FC RET
	0x0374A800 LDR X0, [X0 + 0xA8]
	0x0374A804 RET
	0x0374A808 LDR X0, [X0 + 0x78]
	0x0374A80C RET
	0x0374A810 LDR X0, [X0 + 0x88]
	0x0374A814 RET
	0x0374A818 LDRB W0, [X0 + 0xC2]
	0x0374A81C RET
	0x0374A820 SUB X31, X31, 0xB0
	0x0374A824 STP X30, X21, [X31 + 0x90]
	0x0374A828 STP X20, X19, [X31 + 0xA0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xC97000
	007 Move W9, [X22+3469]
	008 Move X21, X1
	009 Move X19, X0
	010 Move X20, X8
	011 Move TEMP, X9
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x9AA000
	016 Move X0, [X0+2760]
	017 Call 0x1C17CF4
	018 Move X0, 0x9B3000
	019 Move X0, [X0+2120]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+3469], W8
	023 Move X0, X19
	024 Call BindingSyntax.get_valid, X0
	025 Move TEMP, X0
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfNotEqual {101}
	029 Move X0, X21
	030 Move X1, X31
	031 Call String.IsNullOrEmpty, X0
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfEqual {89}
	036 Move X8, [X19]
	037 Compare X8, 0
	038 JumpIfEqual {99}
	039 Move X8, [X8+48]
	040 Compare X8, 0
	041 JumpIfEqual {99}
	042 NotImplemented "Instruction LDRSW not yet implemented."
	043 Move W10, [X8+24]
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move W10, 88
	046 NotImplemented "Instruction MADD not yet implemented."
	047 Move X22, [X8+64]
	048 Move X1, X31
	049 Move X0, X22
	050 Call String.IsNullOrEmpty, X0
	051 Move TEMP, X0
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfEqual {75}
	055 Move X8, 0x9AA000
	056 Move X8, [X8+2760]
	057 Move W1, 2
	058 Move X0, [X8]
	059 Call 0x1C17D6C
	060 Compare X0, 0
	061 JumpIfEqual {99}
	062 Move W8, [X0+24]
	063 Move X1, X0
	064 Compare W8, 0
	065 JumpIfEqual {100}
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move [X1+32], X22
	068 Move [X1+40], X21
	069 Move X8, 0x9B3000
	070 Move X8, [X8+2120]
	071 Move X2, X31
	072 Move X0, [X8]
	073 Call String.Join, X0, X1
	074 Move X21, X0
	075 Move X0, [X19]
	076 Compare X0, 0
	077 JumpIfEqual {99}
	078 Move X8, [X0+48]
	079 Compare X8, 0
	080 JumpIfEqual {99}
	081 NotImplemented "Instruction LDRSW not yet implemented."
	082 Move W10, [X8+24]
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Move W10, 88
	085 NotImplemented "Instruction MADD not yet implemented."
	086 Move X1, X31
	087 Move [X8+64], X21
	088 Call InputActionMap.OnBindingModified, X0
	089 Move X8, [X19+16]
	090 Move V0, [X19]
	091 Move X22, [X31+16]
	092 Move X21, [X31+24]
	093 Move [X20+16], X8
	094 Move [X20], V0
	095 Move X20, [X31+32]
	096 Move X19, [X31+40]
	097 Move X30, [X31+48]
	098 Return X0
	099 Call 0x1C17F20
	100 Call 0x1C17F28
	101 Move X0, 0x9AA000
	102 Move X0, [X0+1456]
	103 Call 0x1C17D08
	104 Call 0x1C17F10
	105 Move X19, X0
	106 Move X0, 0x9D3000
	107 Move X0, [X0+2608]
	108 Call 0x1C17D08
	109 Move X1, X0
	110 Move X0, X19
	111 Move X2, X31
	112 Call InvalidOperationException..ctor, X0, X1
	113 Move X0, 0x9FC000
	114 Move X0, [X0+2712]
	115 Call 0x1C17D08
	116 Move X1, X0
	117 Move X0, X19
	118 Call 0x1C17DEC

Method: UnityEngine.InputSystem.InputActionSetupExtensions/BindingSyntax WithProcessor()

Disassembly:
	0x022B62E4 MADD X8, X8, X9, X22
	0x022B62E8 ADD X0, X8, 0x20
	0x022B62EC BL 0x3EB1AC0
	0x022B62F0 LDR X8, [X19 + 0x38]
	0x022B62F4 LDR X0, [X8 + 0x8]
	0x022B62F8 LDRB W8, [X0 + 0x135]
	0x022B62FC TBNZ X8, 0x0, 0x22B6304
	0x022B6300 BL 0x1C5C684
	0x022B6304 LDR X27, [X22 + 0x18]
	0x022B6308 CMP W21, W27
	0x022B630C B.CS 0x22B6380
	0x022B6310 SUBS W28, W28, 0x1
	0x022B6314 B.PL 0x22B6214
	0x022B6318 MOVN W28, 0x0
	0x022B631C ADD W21, W28, 0x1
	0x022B6320 LDUR X1, [X29 - 0x28]
	0x022B6324 MOV X0, X24
	0x022B6328 MOV X2, X23
	0x022B632C BL 0x3EB1AC0
	0x022B6330 CMP W21, W27
	0x022B6334 B.CS 0x22B6380
	0x022B6338 LDR X8, [X22]
	0x022B633C SXTW X9, W21
	0x022B6340 MOV X1, X24
	0x022B6344 MOV X2, X23
	0x022B6348 LDR W8, [X8 + 0x104]
	0x022B634C NOP
	0x022B6350 MADD X8, X8, X9, X22
	0x022B6354 ADD X0, X8, 0x20
	0x022B6358 BL 0x3EB1AC0
	0x022B635C LDR X8, [X19 + 0x38]
	0x022B6360 LDR X0, [X8 + 0x8]
	0x022B6364 LDRB W8, [X0 + 0x135]
	0x022B6368 TBNZ X8, 0x0, 0x22B6370
	0x022B636C BL 0x1C5C684
	0x022B6370 LDR W8, [X22 + 0x18]
	0x022B6374 CMP W21, W8
	0x022B6378 LDUR X21, [X29 - 0x30]
	0x022B637C B.CC 0x22B61B4
	0x022B6380 BL 0x1C16F28
	0x022B6384 LDUR X8, [X29 - 0x40]
	0x022B6388 LDR X8, [X8 + 0x28]
	0x022B638C LDUR X9, [X29 - 0x8]
	0x022B6390 CMP X8, X9
	0x022B6394 B.NE 0x22B63BC
	0x022B6398 ADD X31, X29, 0x0
	0x022B639C LDP X20, X19, [X31 + 0x50]
	0x022B63A0 LDP X22, X21, [X31 + 0x40]
	0x022B63A4 LDP X24, X23, [X31 + 0x30]
	0x022B63A8 LDP X26, X25, [X31 + 0x20]
	0x022B63AC LDP X28, X27, [X31 + 0x10]
	0x022B63B0 LDP X29, X30, [X31], #0x60
	0x022B63B4 RET
	0x022B63B8 BL 0x1C16F20
	0x022B63BC BL 0x3EB1B20
	0x022B63C0 SUB X31, X31, 0x70
	0x022B63C4 STP X29, X30, [X31 + 0x10]
	0x022B63C8 STP X28, X27, [X31 + 0x20]
	0x022B63CC STP X26, X25, [X31 + 0x30]
	0x022B63D0 STP X24, X23, [X31 + 0x40]
	0x022B63D4 STP X22, X21, [X31 + 0x50]
	0x022B63D8 STP X20, X19, [X31 + 0x60]
	0x022B63DC LDR X8, [X4 + 0x38]
	0x022B63E0 MOV X19, X3
	0x022B63E4 MOV W20, W2
	0x022B63E8 MOV W21, W1
	0x022B63EC MOV X22, X0
	0x022B63F0 CBNZ X8, 0x22B63FC
	0x022B63F4 MOV X0, X4
	0x022B63F8 BL 0x1C5C6E0
	0x022B63FC ADD W8, W21, 0x1
	0x022B6400 ADD W9, W20, 0x1
	0x022B6404 CMP W8, W9
	0x022B6408 B.GE 0x22B64F8
	0x022B640C CBZ X22, 0x22B651C
	0x022B6410 SXTW X26, W8
	0x022B6414 ADD X8, X22, 0x20
	0x022B6418 MOV X28, INVALID
	0x022B641C STR X8, [X31 + 0x8]
	0x022B6420 LDR X8, [X22 + 0x18]
	0x022B6424 CMP W26, W8
	0x022B6428 B.CS 0x22B6518
	0x022B642C ADD X9, X22, X26, 0x4, LSL
	0x022B6430 LDP X23, X24, [X9 + 0x20]
	0x022B6434 MOV W29, W21
	0x022B6438 TBNZ X21, 0x1F, 0x22B64D0
	0x022B643C MOV W29, W21
	0x022B6440 AND X8, X8, 0x0
	0x022B6444 CMP X8, X29
	0x022B6448 B.LS 0x22B6518
	0x022B644C LDR X8, [X31 + 0x8]
	0x022B6450 ADD X27, X8, W21, 0x4, UXTW
	0x022B6454 MOVZ X8, 0x1
	0x022B6458 ADD X25, X8, X29, 0x20, LSL
	0x022B645C CBZ X19, 0x22B651C
	0x022B6460 LDP X3, X4, [X27]
	0x022B6464 LDR X8, [X19 + 0x18]
	0x022B6468 LDR X0, [X19 + 0x40]
	0x022B646C LDR X5, [X19 + 0x28]
	0x022B6470 MOV X1, X23
	0x022B6474 MOV X2, X24
	0x022B6478 BLR X8
	0x022B647C TBZ X0, 0x1F, 0x22B64CC
	0x022B6480 LDR W8, [X22 + 0x18]
	0x022B6484 CMP X29, X8
	0x022B6488 B.CS 0x22B6518
	0x022B648C ADD X9, X29, 0x1

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+64], X22
	004 Move [X31+72], X21
	005 Move [X31+80], X20
	006 Move [X31+88], X19
	007 Move X9, [X1+56]
	008 Move X19, X1
	009 Move X21, X0
	010 Move X20, X8
	011 Compare X9, 0
	012 JumpIfNotEqual {24}
	013 Move X0, 0x1E66000
	014 Move X0, [X0+3136]
	015 Call 0x1C17CF4
	016 Move X0, 0x1E3E000
	017 Move X0, [X0+1728]
	018 Call 0x1C17CF4
	019 Move X8, [X19+56]
	020 Compare X8, 0
	021 JumpIfNotEqual {24}
	022 Move X0, X19
	023 Call 0x1C5D6E0
	024 Move X0, X21
	025 Move X1, X31
	026 Move [X31+32], X31
	027 Move [X31+40], X31
	028 Call BindingSyntax.get_valid, X0
	029 Move TEMP, X0
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfNotEqual {82}
	033 Move X8, 0x1E3E000
	034 Move X8, [X8+1728]
	035 Move X0, [X8]
	036 Move X8, [X19+56]
	037 Move W9, [X0+224]
	038 Move X22, [X8]
	039 Compare W9, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Move X0, X22
	043 Move X1, X31
	044 Call Type.GetTypeFromHandle, X0
	045 Move X8, 0x1E66000
	046 Move X8, [X8+3136]
	047 Move X1, X0
	048 Move X2, X31
	049 Move X8, [X8]
	050 Move X8, [X8+184]
	051 Move X0, X8
	052 Call TypeTable.FindNameForType, X0, X1
	053 Move [X31+32], X0
	054 Move [X31+40], X1
	055 Add X0, X31, 32
	056 Move X1, X31
	057 Call InternedString.IsEmpty, X0
	058 Move TEMP, X0
	059 And TEMP, TEMP, 1
	060 Compare TEMP, 1
	061 JumpIfEqual {95}
	062 Move X0, [X31+32]
	063 Move X1, [X31+40]
	064 Move X2, X31
	065 Call InternedString.op_Implicit, X0
	066 Move X1, X0
	067 Add X8, X31, 8
	068 Move X0, X21
	069 Move X2, X31
	070 Call BindingSyntax.WithProcessor, X0, X1
	071 Move X8, [X31+24]
	072 NotImplemented "Instruction LDUR not yet implemented."
	073 Move X22, [X31+64]
	074 Move X21, [X31+72]
	075 Move X30, [X31+48]
	076 Move [X20+16], X8
	077 Move [X20], V0
	078 Move X20, [X31+80]
	079 Move X19, [X31+88]
	080 Add X31, X31, 96
	081 Return X0
	082 Move X0, 0x1E3E000
	083 Move X0, [X0+1456]
	084 Call 0x1C17D08
	085 Call 0x1C17F10
	086 Move X20, X0
	087 Move X0, 0x1E67000
	088 Move X0, [X0+2608]
	089 Call 0x1C17D08
	090 Move X1, X0
	091 Move X0, X20
	092 Move X2, X31
	093 Call InvalidOperationException..ctor, X0, X1
	094 Move X0, X20
	095 Move X8, [X19+56]
	096 Move X0, 0x1E3E000
	097 Move X20, [X8]
	098 Move X0, [X0+1728]
	099 Call 0x1C17D08
	100 Call 0x19913D0
	101 Move X0, X20
	102 Move X1, X31
	103 Call Type.GetTypeFromHandle, X0
	104 Move X20, X0
	105 Move X0, 0x1E67000
	106 Move X0, [X0+2616]
	107 Call 0x1C17D08
	108 Move X1, X20
	109 Move X2, X31
	110 Call String.Format, X0, X1
	111 Move X20, X0
	112 Move X0, 0x1E3E000
	113 Move X0, [X0+2880]
	114 Call 0x1C17D08
	115 Call 0x1C17F10
	116 Move X1, X20
	117 Move X2, X31
	118 Move X21, X0
	119 Call NotSupportedException..ctor, X0, X1
	120 Move X0, X21
	121 Move X1, X19
	122 Call 0x1C17DEC

Method: UnityEngine.InputSystem.InputActionSetupExtensions/BindingSyntax Triggering(UnityEngine.InputSystem.InputAction action)

Disassembly:
	0x0374A82C LDR V0, [X1 + 0x1]
	0x0374A830 LDR W21, [X1]
	0x0374A834 MOV X19, X1
	0x0374A838 MOV X20, X0
	0x0374A83C ADD X1, X1, 0x20
	0x0374A840 ADD X0, X31, 0x10
	0x0374A844 MOVZ W2, 0x80
	0x0374A848 STR V0, [X31]
	0x0374A84C BL 0x3EB1AC0
	0x0374A850 LDR V0, [X19 + 0xA]
	0x0374A854 LDR X8, [X19 + 0xB0]
	0x0374A858 LDR V1, [X31]
	0x0374A85C ADD X0, X20, 0x40
	0x0374A860 ADD X1, X31, 0x10
	0x0374A864 MOVZ W2, 0x80
	0x0374A868 STR W21, [X20 + 0x38]
	0x0374A86C STP V1, V0, [X20 + 0x10]
	0x0374A870 STR X8, [X20 + 0x30]
	0x0374A874 BL 0x3EB1AC0
	0x0374A878 MOV X0, X20
	0x0374A87C BL 0x374A9B0
	0x0374A880 MOV X0, X20
	0x0374A884 LDP X20, X19, [X31 + 0xA0]
	0x0374A888 LDP X30, X21, [X31 + 0x90]
	0x0374A88C ADD X31, X31, 0xB0
	0x0374A890 B 0x374A928
	0x0374A894 SUB X31, X31, 0x160
	0x0374A898 STR X29, [X31 + 0x130]
	0x0374A89C STP X30, X21, [X31 + 0x140]
	0x0374A8A0 STP X20, X19, [X31 + 0x150]
	0x0374A8A4 LDR W8, [X1]
	0x0374A8A8 MOV X20, X0
	0x0374A8AC MOVZ W2, 0x128
	0x0374A8B0 MOV X19, X1
	0x0374A8B4 STR W8, [X0 + 0x38]
	0x0374A8B8 LDR X8, [X1 + 0x10]
	0x0374A8BC ADD X21, X31, 0x8
	0x0374A8C0 STR X8, [X0 + 0x10]
	0x0374A8C4 LDR X8, [X1 + 0xA0]
	0x0374A8C8 STR X8, [X0 + 0x20]
	0x0374A8CC LDR X8, [X1 + 0xA8]
	0x0374A8D0 STR X8, [X0 + 0x28]
	0x0374A8D4 LDR X8, [X1 + 0xB0]
	0x0374A8D8 STR X8, [X0 + 0x30]
	0x0374A8DC LDR X8, [X1 + 0x18]
	0x0374A8E0 STR X8, [X0 + 0x18]
	0x0374A8E4 ADD X0, X31, 0x8
	0x0374A8E8 BL 0x3EB1AC0
	0x0374A8EC ADD X1, X21, 0x20
	0x0374A8F0 ADD X0, X20, 0x40
	0x0374A8F4 MOVZ W2, 0x80
	0x0374A8F8 BL 0x3EB1AC0
	0x0374A8FC MOVI V0.2D, 0x0
	0x0374A900 STP V0, V0, [X19 + 0x20]
	0x0374A904 STP V0, V0, [X19 + 0x40]
	0x0374A908 STP V0, V0, [X19 + 0x60]
	0x0374A90C STP V0, V0, [X19 + 0x80]
	0x0374A910 MOV X0, X20
	0x0374A914 LDP X20, X19, [X31 + 0x150]
	0x0374A918 LDP X30, X21, [X31 + 0x140]
	0x0374A91C LDR X29, [X31 + 0x130]
	0x0374A920 ADD X31, X31, 0x160
	0x0374A924 B 0x374A9B0
	0x0374A928 STR X30, [X31 - 0x30]!
	0x0374A92C STP X22, X21, [X31 + 0x10]
	0x0374A930 STP X20, X19, [X31 + 0x20]
	0x0374A934 ADRP X22, 0xC96000
	0x0374A938 ADRP X21, 0x9FB000
	0x0374A93C ADRP X20, 0x9FB000
	0x0374A940 LDRB W8, [X22 + 0xDAD]
	0x0374A944 LDR X21, [X21 + 0x2D8]
	0x0374A948 LDR X20, [X20 + 0xB18]
	0x0374A94C MOV X19, X0
	0x0374A950 TBNZ X8, 0x0, 0x374A974
	0x0374A954 ADRP X0, 0x9FB000
	0x0374A958 LDR X0, [X0 + 0xB18]
	0x0374A95C BL 0x1C16CF4
	0x0374A960 ADRP X0, 0x9FB000
	0x0374A964 LDR X0, [X0 + 0x2D8]
	0x0374A968 BL 0x1C16CF4
	0x0374A96C MOVZ W8, 0x1
	0x0374A970 STRB W8, [X22 + 0xDAD]
	0x0374A974 BL 0x37509B8
	0x0374A978 MOV X0, X19
	0x0374A97C MOV W1, W31
	0x0374A980 MOV X2, X31
	0x0374A984 BL 0x32C0780
	0x0374A988 LDR X8, [X21]
	0x0374A98C LDR X3, [X20]
	0x0374A990 LDP X20, X19, [X31 + 0x20]
	0x0374A994 LDP X22, X21, [X31 + 0x10]
	0x0374A998 LDR X8, [X8 + 0xB8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, X1
	006 Move X20, X0
	007 Move X19, X8
	008 Call BindingSyntax.get_valid, X0
	009 Move TEMP, X0
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfNotEqual {47}
	013 Compare X21, 0
	014 JumpIfEqual {59}
	015 Move X0, X21
	016 Move X1, X31
	017 Call InputAction.get_isSingletonAction, X0
	018 Move TEMP, X0
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {77}
	022 Move X0, [X20]
	023 Compare X0, 0
	024 JumpIfEqual {46}
	025 Move X8, [X0+48]
	026 Compare X8, 0
	027 JumpIfEqual {46}
	028 NotImplemented "Instruction LDRSW not yet implemented."
	029 Move W10, [X8+24]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X10, [X21+16]
	032 Move W11, 88
	033 NotImplemented "Instruction MADD not yet implemented."
	034 Move X1, X31
	035 Move [X8+80], X10
	036 Call InputActionMap.OnBindingModified, X0
	037 Move X8, [X20+16]
	038 Move V0, [X20]
	039 Move [X19+16], X8
	040 Move [X19], V0
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move X30, [X31+32]
	044 Move X21, [X31+40]
	045 Return X0
	046 Call 0x1C17F20
	047 Move X0, 0x9AA000
	048 Move X0, [X0+1456]
	049 Call 0x1C17D08
	050 Call 0x1C17F10
	051 Move X19, X0
	052 Move X0, 0x9D3000
	053 Move X0, [X0+2608]
	054 Call 0x1C17D08
	055 Move X1, X0
	056 Move X0, X19
	057 Move X2, X31
	058 Call InvalidOperationException..ctor, X0, X1
	059 Move X0, 0x9AF000
	060 Move X0, [X0+1320]
	061 Call 0x1C17D08
	062 Call 0x1C17F10
	063 Move X19, X0
	064 Move X0, 0x9D2000
	065 Move X0, [X0+3064]
	066 Call 0x1C17D08
	067 Move X1, X0
	068 Move X0, X19
	069 Move X2, X31
	070 Call ArgumentNullException..ctor, X0, X1
	071 Move X0, 0x9FC000
	072 Move X0, [X0+2720]
	073 Call 0x1C17D08
	074 Move X1, X0
	075 Move X0, X19
	076 Call 0x1C17DEC
	077 Move X0, 0x9FC000
	078 Move X0, [X0+2728]
	079 Call 0x1C17D08
	080 Move X1, X21
	081 Move X2, X31
	082 Call String.Format, X0, X1
	083 Move X19, X0
	084 Move X0, 0x9B2000
	085 Move X0, [X0+1400]
	086 Call 0x1C17D08
	087 Call 0x1C17F10
	088 Move X20, X0
	089 Move X0, 0x9D2000
	090 Move X0, [X0+3064]
	091 Call 0x1C17D08
	092 Move X2, X0
	093 Move X0, X20
	094 Move X1, X19
	095 Move X3, X31
	096 Call ArgumentException..ctor, X0, X1, X2
	097 Move X0, 0x9FC000
	098 Move X0, [X0+2720]
	099 Call 0x1C17D08
	100 Move X1, X0
	101 Move X0, X20
	102 Call 0x1C17DEC
	103 Call 0x1C17F28

Method: UnityEngine.InputSystem.InputActionSetupExtensions/BindingSyntax To(UnityEngine.InputSystem.InputBinding binding)

Disassembly:
	0x0374A99C MOVZ W2, 0xA
	0x0374A9A0 MOV X1, X0
	0x0374A9A4 MOV X0, X8
	0x0374A9A8 LDR X30, [X31], #0x30
	0x0374A9AC B 0x2DE6668
	0x0374A9B0 STR X30, [X31 - 0x20]!
	0x0374A9B4 STP X20, X19, [X31 + 0x10]
	0x0374A9B8 ADRP X20, 0xC96000
	0x0374A9BC LDRB W8, [X20 + 0xD93]
	0x0374A9C0 MOV X19, X0
	0x0374A9C4 TBNZ X8, 0x0, 0x374A9DC
	0x0374A9C8 ADRP X0, 0x9D1000
	0x0374A9CC LDR X0, [X0 + 0x270]
	0x0374A9D0 BL 0x1C16CF4
	0x0374A9D4 MOVZ W8, 0x1
	0x0374A9D8 STRB W8, [X20 + 0xD93]
	0x0374A9DC LDRB W8, [X19 + 0xB0]
	0x0374A9E0 CBNZ W8, 0x374AB48
	0x0374A9E4 ADRP X8, 0x9D1000
	0x0374A9E8 LDR X8, [X8 + 0x270]
	0x0374A9EC LDR X0, [X8]
	0x0374A9F0 LDR W8, [X0 + 0xE0]
	0x0374A9F4 CBNZ W8, 0x374A9FC
	0x0374A9F8 BL 0x1C16DFC
	0x0374A9FC MOV X0, X31
	0x0374AA00 BL 0x37701B0
	0x0374AA04 CBZ X0, 0x374AB58
	0x0374AA08 LDR W14, [X19 + 0x58]
	0x0374AA0C CMP W14, 0x1
	0x0374AA10 B.LT 0x374AB40
	0x0374AA14 LDR X8, [X19 + 0x18]
	0x0374AA18 CBZ X8, 0x374AB58
	0x0374AA1C LDR W11, [X8 + 0x18]
	0x0374AA20 LDRB W10, [X0 + 0x5D]
	0x0374AA24 MOV X9, X31
	0x0374AA28 SXTW X12, W14
	0x0374AA2C ADD X13, X8, 0x20
	0x0374AA30 UBFM X14, X14, 0x3F, 0x3E
	0x0374AA34 MOVZ W15, 0x1
	0x0374AA38 UBFM X16, X11, 0x3F, 0x3E
	0x0374AA3C MOVZ W17, 0xFFFF
	0x0374AA40 CMP X9, X11
	0x0374AA44 B.CS 0x374AB54
	0x0374AA48 MOVZ W0, 0x1
	0x0374AA4C CBZ W10, 0x374AAD0
	0x0374AA50 LDR X1, [X19 + 0xA0]
	0x0374AA54 LDR X4, [X19 + 0x68]
	0x0374AA58 LDRSW X1, [X1, X9, LSL #2]
	0x0374AA5C ADD X1, X4, X1, 0x5, LSL
	0x0374AA60 LDRB W2, [X1 + 0x4]
	0x0374AA64 TBZ X2, 0x3, 0x374AAD0
	0x0374AA68 LDRH W0, [X1 + 0x8]
	0x0374AA6C LDRSW X1, [X19 + 0x54]
	0x0374AA70 CMP W0, W17
	0x0374AA74 CSINV W2, W0, W31, NE
	0x0374AA78 ADD W0, W2, 0x1
	0x0374AA7C CMP W0, W1
	0x0374AA80 B.GE 0x374AACC
	0x0374AA84 SXTW X0, W0
	0x0374AA88 SUB X3, X0, 0x1
	0x0374AA8C ADD X0, X4, X3, 0x5, LSL
	0x0374AA90 ADD X4, X0, 0x20
	0x0374AA94 MOVZ W0, 0x1
	0x0374AA98 LDRB W5, [X4 + 0x4]
	0x0374AA9C TBZ X5, 0x3, 0x374AAD0
	0x0374AAA0 LDRH W5, [X4 + 0x8]
	0x0374AAA4 CMP W5, W17
	0x0374AAA8 CSINV W5, W5, W31, NE
	0x0374AAAC CMP W5, W2
	0x0374AAB0 B.NE 0x374AAD0
	0x0374AAB4 ADD X0, X0, 0x1
	0x0374AAB8 ADD X5, X3, X0
	0x0374AABC CMP X5, X1
	0x0374AAC0 ADD X4, X4, 0x20
	0x0374AAC4 B.LT 0x374AA98
	0x0374AAC8 B 0x374AAD0

ISIL:
	001 Subtract X31, X31, 224
	002 Move [X31+176], X30
	003 Move [X31+184], X23
	004 Move [X31+192], X22
	005 Move [X31+200], X21
	006 Move [X31+208], X20
	007 Move [X31+216], X19
	008 Move X21, X1
	009 Move X20, X0
	010 Move X19, X8
	011 Call BindingSyntax.get_valid, X0
	012 Move TEMP, X0
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfNotEqual {71}
	016 Move X8, [X20]
	017 Compare X8, 0
	018 JumpIfEqual {69}
	019 Move X22, [X8+48]
	020 NotImplemented "Instruction LDRSW not yet implemented."
	021 Add X0, X31, 88
	022 Move W2, 88
	023 Move X1, X21
	024 Call 0x3EB2AC0
	025 Compare X22, 0
	026 JumpIfEqual {69}
	027 Add X0, X31, 0
	028 Add X1, X31, 88
	029 Move W2, 88
	030 Call 0x3EB2AC0
	031 Move W8, [X22+24]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move W8, 88
	034 NotImplemented "Instruction MADD not yet implemented."
	035 Add X0, X8, 32
	036 Add X1, X31, 0
	037 Move W2, 88
	038 Call 0x3EB2AC0
	039 Move X0, [X20]
	040 Compare X0, 0
	041 JumpIfEqual {69}
	042 Move X8, [X0+80]
	043 Compare X8, 0
	044 JumpIfEqual {55}
	045 Move X9, [X0+48]
	046 Compare X9, 0
	047 JumpIfEqual {69}
	048 NotImplemented "Instruction LDRSW not yet implemented."
	049 Move W11, [X9+24]
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move X8, [X8+16]
	052 Move W11, 88
	053 NotImplemented "Instruction MADD not yet implemented."
	054 Move [X9+80], X8
	055 Move X1, X31
	056 Call InputActionMap.OnBindingModified, X0
	057 Move X8, [X20+16]
	058 Move V0, [X20]
	059 Move X22, [X31+192]
	060 Move X21, [X31+200]
	061 Move X30, [X31+176]
	062 Move X23, [X31+184]
	063 Move [X19+16], X8
	064 Move [X19], V0
	065 Move X20, [X31+208]
	066 Move X19, [X31+216]
	067 Add X31, X31, 224
	068 Return X0
	069 Call 0x1C17F20
	070 Call 0x1C17F28
	071 Move X0, 0x9AA000
	072 Move X0, [X0+1456]
	073 Call 0x1C17D08
	074 Call 0x1C17F10
	075 Move X19, X0
	076 Move X0, 0x9D3000
	077 Move X0, [X0+2608]
	078 Call 0x1C17D08
	079 Move X1, X0
	080 Move X0, X19
	081 Move X2, X31
	082 Call InvalidOperationException..ctor, X0, X1
	083 Move X0, 0x9FC000
	084 Move X0, [X0+2736]
	085 Call 0x1C17D08
	086 Move X1, X0
	087 Move X0, X19
	088 Call 0x1C17DEC

Method: UnityEngine.InputSystem.InputActionSetupExtensions/BindingSyntax NextBinding()

Disassembly:
	0x0374AACC MOVZ W0, 0x1
	0x0374AAD0 LDR X1, [X19 + 0xA8]
	0x0374AAD4 SBFM X3, X9, 0x3E, 0x1E
	0x0374AAD8 ADD X2, X8, X9, 0x3, LSL
	0x0374AADC ORR X3, X3, 0x3
	0x0374AAE0 LDR X2, [X2 + 0x20]
	0x0374AAE4 STRH W0, [X3, X1, LSL]
	0x0374AAE8 UBFM W0, W9, 0x1F, 0x1E
	0x0374AAEC LDRH W3, [X1, W0, SXTW]
	0x0374AAF0 CBNZ W3, 0x374AB34
	0x0374AAF4 CBZ W10, 0x374AB28
	0x0374AAF8 MOV X3, X31
	0x0374AAFC MOV X4, X13

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+32], X30
	003 Move [X31+40], X19
	004 Move X19, X8
	005 Add X8, X31, 8
	006 Move W1, 1
	007 Call BindingSyntax.Iterate, X0, X1
	008 Move X8, [X31+24]
	009 NotImplemented "Instruction LDUR not yet implemented."
	010 Move [X19+16], X8
	011 Move [X19], V0
	012 Move X30, [X31+32]
	013 Move X19, [X31+40]
	014 Add X31, X31, 48
	015 Return X0

Method: UnityEngine.InputSystem.InputActionSetupExtensions/BindingSyntax PreviousBinding()

Disassembly:
	0x0374ABB8 LDR X20, [X0]
	0x0374ABBC BL 0x3EB1AE0
	0x0374ABC0 MOV X0, X19
	0x0374ABC4 MOV X1, X31
	0x0374ABC8 BL 0x33CB4DC
	0x0374ABCC CBNZ X20, 0x374ABE4
	0x0374ABD0 LDP X20, X19, [X31 + 0x10]
	0x0374ABD4 LDP X30, X21, [X31], #0x20
	0x0374ABD8 RET
	0x0374ABDC MOV X20, X31
	0x0374ABE0 B 0x374ABF0
	0x0374ABE4 MOV X0, X20
	0x0374ABE8 BL 0x1C16F18

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+32], X30
	003 Move [X31+40], X19
	004 Move X19, X8
	005 Add X8, X31, 8
	006 Move W1, W31
	007 Call BindingSyntax.Iterate, X0, X1
	008 Move X8, [X31+24]
	009 NotImplemented "Instruction LDUR not yet implemented."
	010 Move [X19+16], X8
	011 Move [X19], V0
	012 Move X30, [X31+32]
	013 Move X19, [X31+40]
	014 Add X31, X31, 48
	015 Return X0

Method: UnityEngine.InputSystem.InputActionSetupExtensions/BindingSyntax NextPartBinding(System.String partName)

Disassembly:
	0x0374ABEC MOV X21, X0
	0x0374ABF0 MOV X0, X19
	0x0374ABF4 MOV X1, X31
	0x0374ABF8 BL 0x33CB4DC
	0x0374ABFC CBNZ X20, 0x374AC08
	0x0374AC00 MOV X0, X21
	0x0374AC04 BL 0x1D2C690
	0x0374AC08 MOV X0, X20
	0x0374AC0C BL 0x1C16F18
	0x0374AC10 BL 0x1990590
	0x0374AC14 STP X30, X25, [X31 - 0x40]!
	0x0374AC18 STP X24, X23, [X31 + 0x10]
	0x0374AC1C STP X22, X21, [X31 + 0x20]
	0x0374AC20 STP X20, X19, [X31 + 0x30]
	0x0374AC24 ADRP X21, 0xC96000
	0x0374AC28 LDRB W8, [X21 + 0xD94]
	0x0374AC2C MOV W20, W1
	0x0374AC30 MOV X19, X0
	0x0374AC34 TBNZ X8, 0x0, 0x374AC4C
	0x0374AC38 ADRP X0, 0x9A9000
	0x0374AC3C LDR X0, [X0 + 0x598]
	0x0374AC40 BL 0x1C16CF4
	0x0374AC44 MOVZ W8, 0x1
	0x0374AC48 STRB W8, [X21 + 0xD94]
	0x0374AC4C TBNZ X20, 0x0, 0x374AD58
	0x0374AC50 LDR W8, [X19 + 0x48]
	0x0374AC54 CMP W8, 0x1
	0x0374AC58 B.LT 0x374AD50
	0x0374AC5C ADRP X24, 0x9A9000
	0x0374AC60 LDR X24, [X24 + 0x598]
	0x0374AC64 MOV W20, W31
	0x0374AC68 MOVZ W23, 0x30
	0x0374AC6C MOVN W25, 0x0
	0x0374AC70 LDR X8, [X19 + 0x10]
	0x0374AC74 CBZ X8, 0x374AD9C
	0x0374AC78 LDR W9, [X8 + 0x18]
	0x0374AC7C CMP W20, W9
	0x0374AC80 B.CS 0x374ADA0
	0x0374AC84 SXTW X22, W20
	0x0374AC88 ADD X8, X8, X22, 0x3, LSL
	0x0374AC8C LDR X21, [X8 + 0x20]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+40], X21
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move X20, X1
	007 Move X21, X0
	008 Move X0, X1
	009 Move X1, X31
	010 Move X19, X8
	011 Call String.IsNullOrEmpty, X0
	012 Move TEMP, X0
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {31}
	016 Add X8, X31, 8
	017 Move W1, 1
	018 Move X0, X21
	019 Move X2, X20
	020 Call BindingSyntax.IteratePartBinding, X0, X1, X2
	021 Move X8, [X31+24]
	022 NotImplemented "Instruction LDUR not yet implemented."
	023 Move X30, [X31+32]
	024 Move X21, [X31+40]
	025 Move [X19+16], X8
	026 Move [X19], V0
	027 Move X20, [X31+48]
	028 Move X19, [X31+56]
	029 Add X31, X31, 64
	030 Return X0
	031 Move X0, 0x9AF000
	032 Move X0, [X0+1320]
	033 Call 0x1C17D08
	034 Call 0x1C17F10
	035 Move X19, X0
	036 Move X0, 0x9FC000
	037 Move X0, [X0+2744]
	038 Call 0x1C17D08
	039 Move X1, X0
	040 Move X0, X19
	041 Move X2, X31
	042 Call ArgumentNullException..ctor, X0, X1
	043 Move X0, 0x9FC000
	044 Move X0, [X0+2752]
	045 Call 0x1C17D08
	046 Move X1, X0
	047 Move X0, X19
	048 Call 0x1C17DEC

Method: UnityEngine.InputSystem.InputActionSetupExtensions/BindingSyntax PreviousPartBinding(System.String partName)

Disassembly:
	0x0374ADA0 BL 0x1C16F28
	0x0374ADA4 MOV W1, W31
	0x0374ADA8 B 0x374AC14
	0x0374ADAC STP X29, X30, [X31 - 0x60]!
	0x0374ADB0 STP X28, X27, [X31 + 0x10]
	0x0374ADB4 STP X26, X25, [X31 + 0x20]
	0x0374ADB8 STP X24, X23, [X31 + 0x30]
	0x0374ADBC STP X22, X21, [X31 + 0x40]
	0x0374ADC0 STP X20, X19, [X31 + 0x50]
	0x0374ADC4 ADRP X24, 0xC96000
	0x0374ADC8 ADRP X23, 0x9D1000
	0x0374ADCC LDRB W8, [X24 + 0xD9C]
	0x0374ADD0 LDR X23, [X23 + 0x270]
	0x0374ADD4 MOV W21, W3
	0x0374ADD8 MOV W19, W2
	0x0374ADDC MOV W22, W1
	0x0374ADE0 MOV X20, X0
	0x0374ADE4 TBNZ X8, 0x0, 0x374ADFC
	0x0374ADE8 ADRP X0, 0x9D1000
	0x0374ADEC LDR X0, [X0 + 0x270]
	0x0374ADF0 BL 0x1C16CF4
	0x0374ADF4 MOVZ W8, 0x1
	0x0374ADF8 STRB W8, [X24 + 0xD9C]
	0x0374ADFC LDR X0, [X23]
	0x0374AE00 LDR W8, [X0 + 0xE0]
	0x0374AE04 CBNZ W8, 0x374AE10
	0x0374AE08 BL 0x1C16DFC
	0x0374AE0C LDR X0, [X23]
	0x0374AE10 CMP W21, 0x1
	0x0374AE14 B.LT 0x374AF08
	0x0374AE18 LDR X8, [X0 + 0xB8]
	0x0374AE1C MOV W23, W21
	0x0374AE20 LDR X9, [X20 + 0x88]
	0x0374AE24 MOVZ W25, 0x1
	0x0374AE28 LDR X21, [X8]
	0x0374AE2C UBFM X22, X22, 0x18, 0x17
	0x0374AE30 MOVZ W24, 0x1
	0x0374AE34 BFM W25, W19, 0x1F, 0x1E
	0x0374AE38 MOVZ W26, 0xFFFF
	0x0374AE3C MOVN X27, 0x1F
	0x0374AE40 ADD W8, W19, 0x1F

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+40], X21
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move X20, X1
	007 Move X21, X0
	008 Move X0, X1
	009 Move X1, X31
	010 Move X19, X8
	011 Call String.IsNullOrEmpty, X0
	012 Move TEMP, X0
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {31}
	016 Add X8, X31, 8
	017 Move X0, X21
	018 Move W1, W31
	019 Move X2, X20
	020 Call BindingSyntax.IteratePartBinding, X0, X1, X2
	021 Move X8, [X31+24]
	022 NotImplemented "Instruction LDUR not yet implemented."
	023 Move X30, [X31+32]
	024 Move X21, [X31+40]
	025 Move [X19+16], X8
	026 Move [X19], V0
	027 Move X20, [X31+48]
	028 Move X19, [X31+56]
	029 Add X31, X31, 64
	030 Return X0
	031 Move X0, 0x9AF000
	032 Move X0, [X0+1320]
	033 Call 0x1C17D08
	034 Call 0x1C17F10
	035 Move X19, X0
	036 Move X0, 0x9FC000
	037 Move X0, [X0+2744]
	038 Call 0x1C17D08
	039 Move X1, X0
	040 Move X0, X19
	041 Move X2, X31
	042 Call ArgumentNullException..ctor, X0, X1
	043 Move X0, 0x9FC000
	044 Move X0, [X0+2760]
	045 Call 0x1C17D08
	046 Move X1, X0
	047 Move X0, X19
	048 Call 0x1C17DEC

Method: UnityEngine.InputSystem.InputActionSetupExtensions/BindingSyntax NextCompositeBinding(System.String compositeName = null)

Disassembly:
	0x0374AE44 CMP W19, 0x0
	0x0374AE48 CSEL W8, W8, W19, LT
	0x0374AE4C SBFM W10, W8, 0x5, 0x1F
	0x0374AE50 LDR W10, [X9, W10, SXTW]
	0x0374AE54 LSLV W28, W24, W19
	0x0374AE58 ANDS W31, W10, W28, 0x0
	0x0374AE5C B.EQ 0x374AEF8
	0x0374AE60 LDP X9, X10, [X20 + 0xA0]
	0x0374AE64 LDR X12, [X20 + 0x68]
	0x0374AE68 LDRSW X9, [X9, W19, SXTW]
	0x0374AE6C LDRH W10, [X10, W25, SXTW]
	0x0374AE70 ADD X14, X12, X9, 0x5, LSL
	0x0374AE74 MOV X11, X14
	0x0374AE78 LDRB W13, [X11 + 0x4]!

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+32], X30
	003 Move [X31+40], X19
	004 Move X2, X1
	005 Move X19, X8
	006 Add X8, X31, 8
	007 Move W1, 1
	008 Call BindingSyntax.IterateCompositeBinding, X0, X1, X2
	009 Move X8, [X31+24]
	010 NotImplemented "Instruction LDUR not yet implemented."
	011 Move [X19+16], X8
	012 Move [X19], V0
	013 Move X30, [X31+32]
	014 Move X19, [X31+40]
	015 Add X31, X31, 48
	016 Return X0

Method: UnityEngine.InputSystem.InputActionSetupExtensions/BindingSyntax PreviousCompositeBinding(System.String compositeName = null)

Disassembly:
	0x0374AF70 LDR X0, [X0 + 0x2D8]
	0x0374AF74 BL 0x1C16CF4
	0x0374AF78 MOVZ W8, 0x1
	0x0374AF7C STRB W8, [X20 + 0xDAE]
	0x0374AF80 LDR X8, [X21]
	0x0374AF84 STR X31, [X31 + 0x8]
	0x0374AF88 LDR X9, [X8 + 0xB8]
	0x0374AF8C LDR W23, [X9]
	0x0374AF90 CMP W23, 0x1
	0x0374AF94 B.LT 0x374B050
	0x0374AF98 ADRP X22, 0x9FB000
	0x0374AF9C LDR X22, [X22 + 0xB28]
	0x0374AFA0 LDR X0, [X8 + 0xB8]
	0x0374AFA4 MOV W1, W31

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+32], X30
	003 Move [X31+40], X19
	004 Move X2, X1
	005 Move X19, X8
	006 Add X8, X31, 8
	007 Move W1, W31
	008 Call BindingSyntax.IterateCompositeBinding, X0, X1, X2
	009 Move X8, [X31+24]
	010 NotImplemented "Instruction LDUR not yet implemented."
	011 Move [X19+16], X8
	012 Move [X19], V0
	013 Move X30, [X31+32]
	014 Move X19, [X31+40]
	015 Add X31, X31, 48
	016 Return X0

Method: UnityEngine.InputSystem.InputActionSetupExtensions/BindingSyntax Iterate(System.Boolean next)

Disassembly:
	0x0374AB00 CMP X16, X3
	0x0374AB04 B.EQ 0x374AB54
	0x0374AB08 LDR X5, [X4]
	0x0374AB0C CMP X2, X5
	0x0374AB10 B.NE 0x374AB18
	0x0374AB14 STRH W15, [X1, W3, SXTW]
	0x0374AB18 ADD X3, X3, 0x2
	0x0374AB1C CMP X14, X3
	0x0374AB20 ADD X4, X4, 0x8
	0x0374AB24 B.NE 0x374AB00
	0x0374AB28 SXTW X0, W0
	0x0374AB2C STRH W15, [X1, X0, LSL #1]
	0x0374AB30 ADD W15, W15, 0x1
	0x0374AB34 ADD X9, X9, 0x1
	0x0374AB38 CMP X9, X12
	0x0374AB3C B.LT 0x374AA40
	0x0374AB40 MOVZ W8, 0x1
	0x0374AB44 STRB W8, [X19 + 0xB0]
	0x0374AB48 LDP X20, X19, [X31 + 0x10]
	0x0374AB4C LDR X30, [X31], #0x20
	0x0374AB50 RET
	0x0374AB54 BL 0x1C16F28
	0x0374AB58 BL 0x1C16F20
	0x0374AB5C LDRB W8, [X0 + 0x4]
	0x0374AB60 UBFM W0, W8, 0x3, 0x3
	0x0374AB64 RET
	0x0374AB68 LDRH W8, [X0 + 0x8]
	0x0374AB6C MOVZ W9, 0xFFFF
	0x0374AB70 CMP W8, W9
	0x0374AB74 CSINV W0, W8, W31, NE
	0x0374AB78 RET
	0x0374AB7C STP X30, X21, [X31 - 0x20]!
	0x0374AB80 STP X20, X19, [X31 + 0x10]
	0x0374AB84 MOV X19, X0
	0x0374AB88 MOVZ W1, 0x1
	0x0374AB8C BL 0x374AC14
	0x0374AB90 MOV X0, X19
	0x0374AB94 LDP X20, X19, [X31 + 0x10]
	0x0374AB98 MOV X1, X31
	0x0374AB9C LDP X30, X21, [X31], #0x20
	0x0374ABA0 B 0x33CB4DC
	0x0374ABA4 CMP W1, 0x1
	0x0374ABA8 MOV X21, X0
	0x0374ABAC B.NE 0x374ABDC
	0x0374ABB0 MOV X0, X21
	0x0374ABB4 BL 0x3EB1AD0

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X9, [X0]
	009 Move X19, X8
	010 Compare X9, 0
	011 JumpIfEqual {42}
	012 Move X21, [X9+48]
	013 Compare X21, 0
	014 JumpIfEqual {42}
	015 Move W8, [X0+16]
	016 And W31, W1, 1
	017 Move W9, 1
	018 NotImplemented "Instruction CSNEG not yet implemented."
	019 Move X20, X0
	020 Add W8, W23, W8
	021 Move W24, 88
	022 Move TEMP, X8
	023 And TEMP, TEMP, -2147483648
	024 Compare TEMP, -2147483648
	025 JumpIfEqual {42}
	026 Move W22, W8
	027 Move W8, [X21+24]
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move X1, [X20+8]
	030 Compare X1, 0
	031 JumpIfEqual {53}
	032 NotImplemented "Instruction CMP not yet implemented."
	033 NotImplemented "Instruction UMADDL not yet implemented."
	034 Add X0, X8, 32
	035 Call InputBinding.TriggersAction, X0, X1
	036 Add W8, W22, W23
	037 Move TEMP, X0
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfNotEqual {22}
	041 Move X8, [X20+8]
	042 Move [X19], X31
	043 Move [X19+8], X31
	044 Move [X19+16], X31
	045 Move X20, [X31+48]
	046 Move X19, [X31+56]
	047 Move X22, [X31+32]
	048 Move X21, [X31+40]
	049 Move X24, [X31+16]
	050 Move X23, [X31+24]
	051 Move X30, [X31+64]
	052 Return X0
	053 Move X8, X31
	054 Move X9, [X20]
	055 Move [X19+8], X8
	056 Move [X19+16], X31
	057 Move [X19+16], W22
	058 Move [X19], X9
	059 Call 0x1C17F28

Method: UnityEngine.InputSystem.InputActionSetupExtensions/BindingSyntax IterateCompositeBinding(System.Boolean next, System.String compositeName)

Disassembly:
	0x0374AE7C TBZ X13, 0x5, 0x374AEA4
	0x0374AE80 TBZ X13, 0x3, 0x374AE9C
	0x0374AE84 LDRH W11, [X14 + 0x8]
	0x0374AE88 UBFM X13, X11, 0x3B, 0x3A
	0x0374AE8C CMP W11, W26
	0x0374AE90 CSEL X11, X27, X13, EQ
	0x0374AE94 ADD X11, X11, X12
	0x0374AE98 LDRB W13, [X11 + 0x4]!
	0x0374AE9C AND W12, W13, 0xFFFFFFEF
	0x0374AEA0 STRB W12, [X11]
	0x0374AEA4 LDR X11, [X20 + 0x18]
	0x0374AEA8 CBZ X11, 0x374AF24
	0x0374AEAC LDR W12, [X11 + 0x18]
	0x0374AEB0 CMP W19, W12
	0x0374AEB4 B.CS 0x374AF28
	0x0374AEB8 CBZ X21, 0x374AF24
	0x0374AEBC SBFM X29, X8, 0x5, 0x1F
	0x0374AEC0 SXTW X8, W19
	0x0374AEC4 ADD X11, X11, X8, 0x3, LSL
	0x0374AEC8 LDR X1, [X11 + 0x20]
	0x0374AECC ORR X8, X22, X8, 0x0
	0x0374AED0 ORR X8, X8, X9, 0x18
	0x0374AED4 ORR X3, X8, X10, 0x30
	0x0374AED8 MOV X0, X21
	0x0374AEDC MOV X2, X20
	0x0374AEE0 MOV X4, X31
	0x0374AEE4 BL 0x37CC4F0
	0x0374AEE8 LDR X9, [X20 + 0x88]
	0x0374AEEC LDR W8, [X9, X29, LSL #2]
	0x0374AEF0 BIC W8, W8, W28, 0x0
	0x0374AEF4 STR W8, [X9, X29, LSL #2]
	0x0374AEF8 ADD W25, W25, 0x2
	0x0374AEFC SUBS X23, X23, 0x1
	0x0374AF00 ADD W19, W19, 0x1
	0x0374AF04 B.NE 0x374AE40
	0x0374AF08 LDP X20, X19, [X31 + 0x50]
	0x0374AF0C LDP X22, X21, [X31 + 0x40]
	0x0374AF10 LDP X24, X23, [X31 + 0x30]
	0x0374AF14 LDP X26, X25, [X31 + 0x20]
	0x0374AF18 LDP X28, X27, [X31 + 0x10]
	0x0374AF1C LDP X29, X30, [X31], #0x60
	0x0374AF20 RET
	0x0374AF24 BL 0x1C16F20
	0x0374AF28 BL 0x1C16F28
	0x0374AF2C SUB X31, X31, 0x40
	0x0374AF30 STP X30, X23, [X31 + 0x10]
	0x0374AF34 STP X22, X21, [X31 + 0x20]
	0x0374AF38 STP X20, X19, [X31 + 0x30]
	0x0374AF3C ADRP X20, 0xC96000
	0x0374AF40 ADRP X21, 0x9FB000
	0x0374AF44 LDRB W8, [X20 + 0xDAE]
	0x0374AF48 LDR X21, [X21 + 0x2D8]
	0x0374AF4C MOV X19, X0
	0x0374AF50 TBNZ X8, 0x0, 0x374AF80
	0x0374AF54 ADRP X0, 0x9FB000
	0x0374AF58 LDR X0, [X0 + 0xB20]
	0x0374AF5C BL 0x1C16CF4
	0x0374AF60 ADRP X0, 0x9FB000
	0x0374AF64 LDR X0, [X0 + 0xB28]
	0x0374AF68 BL 0x1C16CF4
	0x0374AF6C ADRP X0, 0x9FB000

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+128], X30
	003 Move [X31+136], X21
	004 Move [X31+144], X20
	005 Move [X31+152], X19
	006 And W21, W1, 1
	007 Move X19, X8
	008 Add X8, X31, 96
	009 Move W1, W21
	010 Move X20, X2
	011 Move [X31+96], X31
	012 Move [X31+104], X31
	013 Move [X31+112], X31
	014 Call BindingSyntax.Iterate, X0, X1
	015 Add X0, X31, 96
	016 Call BindingSyntax.get_valid, X0
	017 Move TEMP, X0
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfNotEqual {66}
	021 Add X8, X31, 8
	022 Add X0, X31, 96
	023 Call BindingSyntax.get_binding, X0
	024 Move W8, [X31+64]
	025 Move TEMP, X8
	026 And TEMP, TEMP, 4
	027 Compare TEMP, 4
	028 JumpIfNotEqual {58}
	029 Compare X20, 0
	030 JumpIfEqual {69}
	031 Add X8, X31, 8
	032 Add X0, X31, 96
	033 Call BindingSyntax.get_binding, X0
	034 Move X1, [X31+8]
	035 Move W2, 3
	036 Move X0, X20
	037 Move X3, X31
	038 Call String.Equals, X0, X1, X2
	039 Move TEMP, X0
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfEqual {69}
	043 Add X8, X31, 8
	044 Add X0, X31, 96
	045 Call BindingSyntax.get_binding, X0
	046 Move X0, [X31+24]
	047 Move X1, X31
	048 Call NameAndParameters.ParseName, X0
	049 Move X1, X0
	050 Move W2, 3
	051 Move X0, X20
	052 Move X3, X31
	053 Call String.Equals, X0, X1, X2
	054 Move TEMP, X0
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfEqual {69}
	058 Add X8, X31, 8
	059 Add X0, X31, 96
	060 Move W1, W21
	061 Call BindingSyntax.Iterate, X0, X1
	062 NotImplemented "Instruction LDUR not yet implemented."
	063 Move X8, [X31+24]
	064 Move [X31+6], V0
	065 Move [X31+112], X8
	066 Move [X19], X31
	067 Move [X19+8], X31
	068 Move [X19+16], X31
	069 Move X8, [X31+112]
	070 Move V0, [X31+6]
	071 Move [X19+16], X8
	072 Move [X19], V0
	073 Move X20, [X31+144]
	074 Move X19, [X31+152]
	075 Move X30, [X31+128]
	076 Move X21, [X31+136]
	077 Add X31, X31, 160
	078 Return X0

Method: UnityEngine.InputSystem.InputActionSetupExtensions/BindingSyntax IteratePartBinding(System.Boolean next, System.String partName)

Disassembly:
	0x0374AC90 CBZ X21, 0x374AD9C
	0x0374AC94 MOV X0, X21
	0x0374AC98 MOV X1, X31
	0x0374AC9C BL 0x37367B0
	0x0374ACA0 TBZ X0, 0x0, 0x374ACC4
	0x0374ACA4 LDR X8, [X19 + 0xB8]
	0x0374ACA8 NOP
	0x0374ACAC MADD X8, X22, X23, X8
	0x0374ACB0 CBZ X8, 0x374AD9C
	0x0374ACB4 LDP W2, W3, [X8 + 0x8]
	0x0374ACB8 MOV X0, X19
	0x0374ACBC MOV W1, W20
	0x0374ACC0 BL 0x374ADAC
	0x0374ACC4 LDR X0, [X24]
	0x0374ACC8 LDR X22, [X21 + 0x20]
	0x0374ACCC LDR W8, [X0 + 0xE0]
	0x0374ACD0 CBNZ W8, 0x374ACD8
	0x0374ACD4 BL 0x1C16DFC
	0x0374ACD8 MOV X0, X22
	0x0374ACDC MOV X1, X31
	0x0374ACE0 MOV X2, X31
	0x0374ACE4 BL 0x3C354F8
	0x0374ACE8 TBZ X0, 0x0, 0x374ACF8
	0x0374ACEC LDR X8, [X21 + 0x20]
	0x0374ACF0 CBZ X8, 0x374AD9C
	0x0374ACF4 STR X31, [X8 + 0x28]
	0x0374ACF8 LDR X10, [X21 + 0x28]
	0x0374ACFC STR X31, [X21 + 0x60]
	0x0374AD00 STR W25, [X21 + 0x58]
	0x0374AD04 STR W31, [X21 + 0x48]
	0x0374AD08 CBZ X10, 0x374AD40
	0x0374AD0C LDR W8, [X10 + 0x18]
	0x0374AD10 CMP W8, 0x1
	0x0374AD14 B.LT 0x374AD40
	0x0374AD18 MOV X9, X31
	0x0374AD1C ADD X10, X10, 0x20
	0x0374AD20 CMP W9, W8
	0x0374AD24 B.CS 0x374ADA0
	0x0374AD28 LDR X11, [X10, X9, LSL #3]
	0x0374AD2C CBZ X11, 0x374AD9C
	0x0374AD30 ADD X9, X9, 0x1
	0x0374AD34 CMP W9, W8
	0x0374AD38 STR W25, [X11 + 0xC0]
	0x0374AD3C B.LT 0x374AD20
	0x0374AD40 LDR W8, [X19 + 0x48]
	0x0374AD44 ADD W20, W20, 0x1
	0x0374AD48 CMP W20, W8
	0x0374AD4C B.LT 0x374AC70
	0x0374AD50 MOV X0, X19
	0x0374AD54 BL 0x374AF2C
	0x0374AD58 MOV X20, X19
	0x0374AD5C LDR X0, [X20 + 0x40]!
	0x0374AD60 CBZ X0, 0x374AD88
	0x0374AD64 MOVZ W1, 0x4
	0x0374AD68 MOV X2, X31
	0x0374AD6C BL 0x3C00054
	0x0374AD70 MOVI V0.2D, 0x0
	0x0374AD74 STR X31, [X19 + 0xB8]
	0x0374AD78 STR X31, [X20 + 0x40]
	0x0374AD7C STP V0, V0, [X20 + 0x20]
	0x0374AD80 STP V0, V0, [X20]
	0x0374AD84 STP V0, V0, [X19 + 0x90]
	0x0374AD88 LDP X20, X19, [X31 + 0x30]
	0x0374AD8C LDP X22, X21, [X31 + 0x20]
	0x0374AD90 LDP X24, X23, [X31 + 0x10]
	0x0374AD94 LDP X30, X25, [X31], #0x40
	0x0374AD98 RET
	0x0374AD9C BL 0x1C16F20

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+128], X30
	003 Move [X31+144], X22
	004 Move [X31+152], X21
	005 Move [X31+160], X20
	006 Move [X31+168], X19
	007 Move X20, X2
	008 Move W21, W1
	009 Move X22, X0
	010 Move X19, X8
	011 Move [X31+96], X31
	012 Move [X31+104], X31
	013 Move [X31+112], X31
	014 Call BindingSyntax.get_valid, X0
	015 Move TEMP, X0
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfNotEqual {79}
	019 Add X8, X31, 8
	020 Move X0, X22
	021 Call BindingSyntax.get_binding, X0
	022 Move W8, [X31+64]
	023 Move TEMP, X8
	024 And TEMP, TEMP, 4
	025 Compare TEMP, 4
	026 JumpIfEqual {35}
	027 Add X8, X31, 8
	028 Move X0, X22
	029 Call BindingSyntax.get_binding, X0
	030 Move W8, [X31+64]
	031 Move TEMP, X8
	032 And TEMP, TEMP, 8
	033 Compare TEMP, 8
	034 JumpIfEqual {39}
	035 Move TEMP, X21
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfNotEqual {79}
	039 And W1, W21, 1
	040 Add X8, X31, 96
	041 Move X0, X22
	042 Call BindingSyntax.Iterate, X0, X1
	043 Add X0, X31, 96
	044 Call BindingSyntax.get_valid, X0
	045 Move TEMP, X0
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfNotEqual {79}
	049 Add X8, X31, 8
	050 Add X0, X31, 96
	051 Call BindingSyntax.get_binding, X0
	052 Move W8, [X31+64]
	053 Move TEMP, X8
	054 And TEMP, TEMP, 8
	055 Compare TEMP, 8
	056 JumpIfNotEqual {79}
	057 Add X8, X31, 8
	058 Add X0, X31, 96
	059 Call BindingSyntax.get_binding, X0
	060 Compare X20, 0
	061 JumpIfEqual {93}
	062 Move X1, [X31+8]
	063 Move W2, 3
	064 Move X0, X20
	065 Move X3, X31
	066 Call String.Equals, X0, X1, X2
	067 Move TEMP, X0
	068 And TEMP, TEMP, 1
	069 Compare TEMP, 1
	070 JumpIfEqual {89}
	071 And W1, W21, 1
	072 Add X8, X31, 8
	073 Add X0, X31, 96
	074 Call BindingSyntax.Iterate, X0, X1
	075 NotImplemented "Instruction LDUR not yet implemented."
	076 Move X8, [X31+24]
	077 Move [X31+6], V0
	078 Move [X31+112], X8
	079 Move [X19], X31
	080 Move [X19+8], X31
	081 Move [X19+16], X31
	082 Move X20, [X31+160]
	083 Move X19, [X31+168]
	084 Move X22, [X31+144]
	085 Move X21, [X31+152]
	086 Move X30, [X31+128]
	087 Add X31, X31, 176
	088 Return X0
	089 Move X8, [X31+112]
	090 Move V0, [X31+6]
	091 Move [X19+16], X8
	092 Move [X19], V0
	093 Call 0x1C17F20

Method: System.Void Erase()

Disassembly:
	0x0374AFB4 ADD X0, X31, 0x8
	0x0374AFB8 MOV X1, X31
	0x0374AFBC BL 0x32C05F4
	0x0374AFC0 CMP X0, X19
	0x0374AFC4 B.EQ 0x374B00C
	0x0374AFC8 MOVZ W20, 0x1
	0x0374AFCC CMP W23, W20
	0x0374AFD0 B.EQ 0x374B050
	0x0374AFD4 LDR X8, [X21]
	0x0374AFD8 LDR X2, [X22]
	0x0374AFDC MOV W1, W20
	0x0374AFE0 LDR X0, [X8 + 0xB8]
	0x0374AFE4 BL 0x2DE6188
	0x0374AFE8 STR X0, [X31 + 0x8]
	0x0374AFEC ADD X0, X31, 0x8
	0x0374AFF0 MOV X1, X31
	0x0374AFF4 BL 0x32C05F4
	0x0374AFF8 CMP X0, X19
	0x0374AFFC ADD W20, W20, 0x1
	0x0374B000 B.NE 0x374AFCC
	0x0374B004 SUB W19, W20, 0x1
	0x0374B008 B 0x374B010
	0x0374B00C MOV W19, W31
	0x0374B010 LDR X8, [X21]
	0x0374B014 LDR X2, [X22]
	0x0374B018 MOV W1, W19
	0x0374B01C LDR X0, [X8 + 0xB8]
	0x0374B020 BL 0x2DE6188
	0x0374B024 STR X0, [X31 + 0x8]
	0x0374B028 ADD X0, X31, 0x8
	0x0374B02C MOV X1, X31
	0x0374B030 BL 0x32C0794
	0x0374B034 ADRP X9, 0x9FA000
	0x0374B038 LDR X8, [X21]
	0x0374B03C LDR X9, [X9 + 0xB20]
	0x0374B040 MOV W1, W19
	0x0374B044 LDR X0, [X8 + 0xB8]
	0x0374B048 LDR X2, [X9]
	0x0374B04C BL 0x2DE6F14
	0x0374B050 LDP X20, X19, [X31 + 0x30]
	0x0374B054 LDP X22, X21, [X31 + 0x20]
	0x0374B058 LDP X30, X23, [X31 + 0x10]
	0x0374B05C ADD X31, X31, 0x40
	0x0374B060 RET
	0x0374B064 STP X30, X19, [X31 - 0x10]!
	0x0374B068 MOV X19, X0
	0x0374B06C LDR X0, [X0]
	0x0374B070 CBZ X0, 0x374B098
	0x0374B074 MOVZ W1, 0x4
	0x0374B078 MOV X2, X31
	0x0374B07C BL 0x3C00054
	0x0374B080 MOVI V0.2D, 0x0
	0x0374B084 STR X31, [X19 + 0x78]
	0x0374B088 STR X31, [X19 + 0x40]
	0x0374B08C STP V0, V0, [X19]
	0x0374B090 STP V0, V0, [X19 + 0x20]
	0x0374B094 STP V0, V0, [X19 + 0x50]
	0x0374B098 LDP X30, X19, [X31], #0x10
	0x0374B09C RET
	0x0374B0A0 SUB X31, X31, 0xB0
	0x0374B0A4 STP X30, X23, [X31 + 0x80]
	0x0374B0A8 STP X22, X21, [X31 + 0x90]
	0x0374B0AC STP X20, X19, [X31 + 0xA0]
	0x0374B0B0 ADRP X20, 0xC95000
	0x0374B0B4 ADRP X22, 0x9FA000
	0x0374B0B8 ADRP X21, 0x9FA000
	0x0374B0BC LDRB W8, [X20 + 0xD95]
	0x0374B0C0 LDR X22, [X22 + 0x2D8]
	0x0374B0C4 LDR X21, [X21 + 0xB30]
	0x0374B0C8 MOV X19, X0
	0x0374B0CC TBNZ X8, 0x0, 0x374B120
	0x0374B0D0 ADRP X0, 0x9FA000
	0x0374B0D4 LDR X0, [X0 + 0xB38]
	0x0374B0D8 BL 0x1C16CF4
	0x0374B0DC ADRP X0, 0x9FA000
	0x0374B0E0 LDR X0, [X0 + 0xB30]
	0x0374B0E4 BL 0x1C16CF4
	0x0374B0E8 ADRP X0, 0x9FA000
	0x0374B0EC LDR X0, [X0 + 0xB40]
	0x0374B0F0 BL 0x1C16CF4
	0x0374B0F4 ADRP X0, 0x9FA000
	0x0374B0F8 LDR X0, [X0 + 0xB48]
	0x0374B0FC BL 0x1C16CF4
	0x0374B100 ADRP X0, 0x9FA000
	0x0374B104 LDR X0, [X0 + 0xB50]
	0x0374B108 BL 0x1C16CF4
	0x0374B10C ADRP X0, 0x9FA000
	0x0374B110 LDR X0, [X0 + 0x2D8]
	0x0374B114 BL 0x1C16CF4
	0x0374B118 MOVZ W8, 0x1
	0x0374B11C STRB W8, [X20 + 0xD95]
	0x0374B120 LDR X0, [X22]
	0x0374B124 BL 0x1C16F10
	0x0374B128 MOV X1, X31
	0x0374B12C MOV X20, X0
	0x0374B130 BL 0x33BDD8C
	0x0374B134 LDR X0, [X19 + 0x10]
	0x0374B138 LDR X1, [X21]
	0x0374B13C BL 0x217644C
	0x0374B140 CBZ X20, 0x374B1E4
	0x0374B144 ADRP X8, 0x9FA000
	0x0374B148 LDR X8, [X8 + 0xB48]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0xC97000
	008 Move W8, [X20+3470]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x9FC000
	015 Move X0, [X0+2768]
	016 Call 0x1C17CF4
	017 Move X0, 0x9FB000
	018 Move X0, [X0+4048]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+3470], W8
	022 Move X0, X19
	023 Call BindingSyntax.get_valid, X0
	024 Move TEMP, X0
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfNotEqual {113}
	028 Move X0, [X19]
	029 Compare X0, 0
	030 JumpIfEqual {111}
	031 Add X0, X0, 48
	032 Move X8, [X0]
	033 Compare X8, 0
	034 JumpIfEqual {111}
	035 NotImplemented "Instruction LDRSW not yet implemented."
	036 Move W9, [X8+24]
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X21, 0x9FB000
	039 Move X21, [X21+2768]
	040 Move W9, 88
	041 NotImplemented "Instruction MADD not yet implemented."
	042 Move X20, 0x9FA000
	043 Move X2, [X21]
	044 Move W22, [X8+88]
	045 Move X20, [X20+4048]
	046 Call 0x2177FC4, X0, X1
	047 Move TEMP, X22
	048 And TEMP, TEMP, 4
	049 Compare TEMP, 4
	050 JumpIfEqual {81}
	051 Move X8, [X19]
	052 Compare X8, 0
	053 JumpIfEqual {111}
	054 Move X0, [X8+48]
	055 Move X1, [X20]
	056 Move X21, [X19+8]
	057 Call 0x217C240, X0
	058 Compare X21, 0
	059 JumpIfEqual {111}
	060 Move [X21+180], W0
	061 Move X0, [X19]
	062 Compare X0, 0
	063 JumpIfEqual {111}
	064 Move X1, X31
	065 Call InputActionMap.OnBindingModified, X0
	066 Move X8, [X19]
	067 Compare X8, 0
	068 JumpIfEqual {111}
	069 Move X9, [X8+80]
	070 Compare X9, 0
	071 JumpIfEqual {74}
	072 Move X8, [X8+48]
	073 Move [X9+64], X8
	074 Move X20, [X31+32]
	075 Move X19, [X31+40]
	076 Move X22, [X31+16]
	077 Move X21, [X31+24]
	078 Move X30, [X31+48]
	079 Move X23, [X31+56]
	080 Return 
	081 Move X8, [X19]
	082 Compare X8, 0
	083 JumpIfEqual {111}
	084 Move W22, 88
	085 Move X0, [X8+48]
	086 Move X1, [X20]
	087 Move W23, [X19+16]
	088 Call 0x217C240, X0
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Move X0, [X19]
	091 Compare X0, 0
	092 JumpIfEqual {111}
	093 Add X0, X0, 48
	094 Move X8, [X0]
	095 Compare X8, 0
	096 JumpIfEqual {111}
	097 NotImplemented "Instruction LDRSW not yet implemented."
	098 Move W9, [X8+24]
	099 NotImplemented "Instruction CMP not yet implemented."
	100 NotImplemented "Instruction MADD not yet implemented."
	101 Move W8, [X8+88]
	102 Move TEMP, X8
	103 And TEMP, TEMP, 8
	104 Compare TEMP, 8
	105 JumpIfNotEqual {51}
	106 Move X2, [X21]
	107 Call 0x2177FC4, X0, X1
	108 Move X8, [X19]
	109 Compare X8, 0
	110 JumpIfNotEqual {85}
	111 Call 0x1C17F20
	112 Call 0x1C17F28
	113 Move X0, 0x9A9000
	114 Move X0, [X0+1456]
	115 Call 0x1C17D08
	116 Call 0x1C17F10
	117 Move X19, X0
	118 Move X0, 0x9FB000
	119 Move X0, [X0+2776]
	120 Call 0x1C17D08
	121 Move X1, X0
	122 Move X0, X19
	123 Move X2, X31
	124 Call InvalidOperationException..ctor, X0, X1
	125 Move X0, 0x9FB000
	126 Move X0, [X0+2784]
	127 Call 0x1C17D08
	128 Move X1, X0
	129 Move X0, X19
	130 Call 0x1C17DEC

Method: UnityEngine.InputSystem.InputActionSetupExtensions/BindingSyntax InsertPartBinding(System.String partName, System.String path)

Disassembly:
	0x0374B14C STR X0, [X20 + 0x10]
	0x0374B150 LDR X0, [X19 + 0x18]
	0x0374B154 ADRP X21, 0x9FA000
	0x0374B158 LDR X1, [X8]
	0x0374B15C ADRP X22, 0x9FA000
	0x0374B160 ADRP X23, 0x9FA000
	0x0374B164 LDR X21, [X21 + 0xB38]
	0x0374B168 LDR X22, [X22 + 0xB50]
	0x0374B16C LDR X23, [X23 + 0xB40]
	0x0374B170 BL 0x217644C
	0x0374B174 STR X0, [X20 + 0x18]
	0x0374B178 LDR X0, [X19 + 0x20]
	0x0374B17C LDR X1, [X21]
	0x0374B180 BL 0x217644C
	0x0374B184 STR X0, [X20 + 0x20]
	0x0374B188 LDR X0, [X19 + 0x28]
	0x0374B18C LDR X1, [X22]
	0x0374B190 BL 0x217644C
	0x0374B194 STR X0, [X20 + 0x28]
	0x0374B198 LDR X0, [X19 + 0x30]
	0x0374B19C LDR X1, [X23]
	0x0374B1A0 BL 0x217644C
	0x0374B1A4 STR X0, [X20 + 0x30]
	0x0374B1A8 LDR W8, [X19 + 0x38]
	0x0374B1AC ADD X0, X19, 0x40
	0x0374B1B0 STR W8, [X20 + 0x38]
	0x0374B1B4 ADD X8, X31, 0x0
	0x0374B1B8 BL 0x374B1F0
	0x0374B1BC ADD X0, X20, 0x40
	0x0374B1C0 ADD X1, X31, 0x0
	0x0374B1C4 MOVZ W2, 0x80
	0x0374B1C8 BL 0x3EB1AC0
	0x0374B1CC MOV X0, X20
	0x0374B1D0 LDP X20, X19, [X31 + 0xA0]
	0x0374B1D4 LDP X22, X21, [X31 + 0x90]
	0x0374B1D8 LDP X30, X23, [X31 + 0x80]
	0x0374B1DC ADD X31, X31, 0xB0
	0x0374B1E0 RET
	0x0374B1E4 BL 0x1C16F20
	0x0374B1E8 MOV X1, X31
	0x0374B1EC B 0x33BDD8C
	0x0374B1F0 SUB X31, X31, 0x120
	0x0374B1F4 STP X29, X30, [X31 + 0x100]
	0x0374B1F8 STP X20, X19, [X31 + 0x110]
	0x0374B1FC LDR X9, [X0]
	0x0374B200 MOV X19, X8
	0x0374B204 CBZ X9, 0x374B264
	0x0374B208 MOVI V0.2D, 0x0
	0x0374B20C STP V0, V0, [X31 + 0xE0]
	0x0374B210 STP V0, V0, [X31 + 0xC0]
	0x0374B214 STP V0, V0, [X31 + 0xA0]
	0x0374B218 STP V0, V0, [X31 + 0x80]
	0x0374B21C LDP W1, W2, [X0 + 0x8]
	0x0374B220 LDP W5, W3, [X0 + 0x10]
	0x0374B224 LDP W4, W6, [X0 + 0x18]
	0x0374B228 MOV X20, X0
	0x0374B22C ADD X0, X31, 0x80
	0x0374B230 BL 0x3751F74
	0x0374B234 ADD X0, X31, 0x0
	0x0374B238 MOVZ W2, 0x80
	0x0374B23C MOV X1, X20
	0x0374B240 BL 0x3EB1AC0
	0x0374B244 ADD X0, X31, 0x80
	0x0374B248 ADD X1, X31, 0x0
	0x0374B24C BL 0x375209C
	0x0374B250 ADD X1, X31, 0x80
	0x0374B254 MOVZ W2, 0x80
	0x0374B258 MOV X0, X19
	0x0374B25C BL 0x3EB1AC0
	0x0374B260 B 0x374B278
	0x0374B264 MOVI V0.2D, 0x0
	0x0374B268 STP V0, V0, [X19 + 0x60]
	0x0374B26C STP V0, V0, [X19 + 0x40]
	0x0374B270 STP V0, V0, [X19 + 0x20]
	0x0374B274 STP V0, V0, [X19]
	0x0374B278 LDP X20, X19, [X31 + 0x110]
	0x0374B27C LDP X29, X30, [X31 + 0x100]
	0x0374B280 ADD X31, X31, 0x120
	0x0374B284 RET
	0x0374B288 B 0x374B0A0
	0x0374B28C SUB X31, X31, 0x80
	0x0374B290 STP X30, X25, [X31 + 0x40]
	0x0374B294 STP X24, X23, [X31 + 0x50]
	0x0374B298 STP X22, X21, [X31 + 0x60]
	0x0374B29C STP X20, X19, [X31 + 0x70]
	0x0374B2A0 ADRP X21, 0xC95000
	0x0374B2A4 LDRB W8, [X21 + 0xD96]

ISIL:
	001 Subtract X31, X31, 224
	002 Move [X31+176], X30
	003 Move [X31+192], X22
	004 Move [X31+200], X21
	005 Move [X31+208], X20
	006 Move [X31+216], X19
	007 Move X22, X1
	008 Move X20, X0
	009 Move X0, X1
	010 Move X1, X31
	011 Move X21, X2
	012 Move X19, X8
	013 Call String.IsNullOrEmpty, X0
	014 Move TEMP, X0
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {61}
	018 Move X0, X20
	019 Call BindingSyntax.get_valid, X0
	020 Move TEMP, X0
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfNotEqual {73}
	024 Add X8, X31, 88
	025 Move X0, X20
	026 Call BindingSyntax.get_binding, X0
	027 Move W8, [X31+144]
	028 And W31, W8, 12
	029 NotImplemented "Instruction MOVI not yet implemented."
	030 Move X0, [X20]
	031 Move [X31+40], V0
	032 Move [X31+24], V0
	033 Move W9, [X20+16]
	034 Move W8, 8
	035 Add X1, X31, 0
	036 Move [X31], X22
	037 Move [X31+8], X31
	038 Add W2, W9, 1
	039 Move [X31+16], X21
	040 Move [X31+56], W8
	041 Move [X31+60], X31
	042 Move [X31+76], X31
	043 Move [X31+68], X31
	044 Move [X31+84], W31
	045 Call InputActionSetupExtensions.AddBindingInternal, X0, X1, X2
	046 Move W8, [X20+16]
	047 Move X9, [X20]
	048 Move X10, [X20+8]
	049 Move X22, [X31+192]
	050 Move X21, [X31+200]
	051 Move X30, [X31+176]
	052 Add W8, W8, 1
	053 Move [X19+8], X10
	054 Move [X19+16], X31
	055 Move [X19+16], W8
	056 Move [X19], X9
	057 Move X20, [X31+208]
	058 Move X19, [X31+216]
	059 Add X31, X31, 224
	060 Return X0
	061 Move X0, 0x9AE000
	062 Move X0, [X0+1320]
	063 Call 0x1C17D08
	064 Call 0x1C17F10
	065 Move X19, X0
	066 Move X0, 0x9FB000
	067 Move X0, [X0+2744]
	068 Call 0x1C17D08
	069 Move X1, X0
	070 Move X0, X19
	071 Move X2, X31
	072 Call ArgumentNullException..ctor, X0, X1
	073 Move X0, 0x9A9000
	074 Move X0, [X0+1456]
	075 Call 0x1C17D08
	076 Call 0x1C17F10
	077 Move X19, X0
	078 Move X0, 0x9FB000
	079 Move X0, [X0+2792]
	080 Move X0, 0x9A9000
	081 Move X0, [X0+1456]
	082 Call 0x1C17D08
	083 Call 0x1C17F10
	084 Move X19, X0
	085 Move X0, 0x9FB000
	086 Move X0, [X0+2800]
	087 Call 0x1C17D08
	088 Move X1, X0
	089 Move X0, X19
	090 Move X2, X31
	091 Call InvalidOperationException..ctor, X0, X1
	092 Move X0, 0x9FB000
	093 Move X0, [X0+2808]
	094 Call 0x1C17D08
	095 Move X1, X0
	096 Move X0, X19
	097 Call 0x1C17DEC

