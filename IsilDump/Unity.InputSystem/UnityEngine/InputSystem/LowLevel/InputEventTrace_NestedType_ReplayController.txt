Type: UnityEngine.InputSystem.LowLevel.InputEventTrace/ReplayController

Method: UnityEngine.InputSystem.LowLevel.InputEventTrace get_trace()

Disassembly:
	0x03806AC0 LDRB W8, [X19 + 0x11]
	0x03806AC4 CBNZ W8, 0x3806C14

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Boolean get_finished()

Disassembly:
	0x03806AC8 ADD X2, X31, 0x10
	0x03806ACC MOV X0, X19

ISIL:
	001 Move W0, [X0+16]
	002 Return X0

Method: System.Void set_finished(System.Boolean value)

Disassembly:
	0x03806AD0 MOV W1, W31
	0x03806AD4 BL 0x3806118
	0x03806AD8 TBZ X0, 0x0, 0x3806BF4

ISIL:
	001 And W8, W1, 1
	002 Move [X0+16], W8
	003 Return 

Method: System.Boolean get_paused()

Disassembly:
	0x03806ADC LDR X21, [X31 + 0x10]
	0x03806AE0 CBZ X21, 0x3806AEC

ISIL:
	001 Move W0, [X0+17]
	002 Return X0

Method: System.Void set_paused(System.Boolean value)

Disassembly:
	0x03806AE4 LDR W20, [X21]
	0x03806AE8 B 0x3806AF0
	0x03806AEC MOV W20, W31

ISIL:
	001 And W8, W1, 1
	002 Move [X0+17], W8
	003 Return 

Method: System.Int32 get_position()

Disassembly:
	0x03806AF0 ADRP X22, 0x944000
	0x03806AF4 LDR X22, [X22 + 0x238]

ISIL:
	001 Move W0, [X0+20]
	002 Return X0

Method: System.Void set_position(System.Int32 value)

Disassembly:
	0x03806AF8 LDR X0, [X22]
	0x03806AFC LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X0+20], W1
	002 Return 

Method: System.Collections.Generic.IEnumerable`1<UnityEngine.InputSystem.InputDevice> get_createdDevices()

Disassembly:
	0x03806B00 CBNZ W8, 0x3806B08
	0x03806B04 BL 0x1C16DFC
	0x03806B08 ADD X0, X31, 0x18
	0x03806B0C MOVZ W1, 0x46
	0x03806B10 MOVZ W2, 0x52
	0x03806B14 MOVZ W3, 0x4D
	0x03806B18 MOVZ W4, 0x45
	0x03806B1C MOV X5, X31
	0x03806B20 STR W31, [X31 + 0x18]
	0x03806B24 BL 0x375AA28
	0x03806B28 LDR W8, [X31 + 0x18]
	0x03806B2C CMP W20, W8
	0x03806B30 B.NE 0x3806B58
	0x03806B34 ADD X2, X31, 0x8
	0x03806B38 MOV X0, X19
	0x03806B3C MOV W1, W31
	0x03806B40 BL 0x3806118
	0x03806B44 TBZ X0, 0x0, 0x3806C0C
	0x03806B48 LDR X20, [X31 + 0x8]
	0x03806B4C CBZ X20, 0x3806C48
	0x03806B50 LDR W23, [X20]
	0x03806B54 B 0x3806C4C
	0x03806B58 MOV X20, X21
	0x03806B5C MOV X0, X19
	0x03806B60 MOV X1, X20

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+40], X21
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move X21, 0xBDC000
	007 Move X20, 0x945000
	008 Move W8, [X21+1083]
	009 Move X20, [X20+776]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x945000
	016 Move X0, [X0+776]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+1083], W8
	020 Move X8, [X19+88]
	021 NotImplemented "Instruction LDUR not yet implemented."
	022 Move X0, [X20]
	023 Add X1, X31, 0
	024 Move [X31+16], X8
	025 Move [X31], V0
	026 Call 0x1C17E04
	027 Move X20, [X31+48]
	028 Move X19, [X31+56]
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Add X31, X31, 64
	032 Return X0

Method: System.Void .ctor(UnityEngine.InputSystem.LowLevel.InputEventTrace trace)

Disassembly:
	0x03805DA0 MOV X0, X19
	0x03805DA4 BLR X8
	0x03805DA8 CBNZ X21, 0x3805DCC
	0x03805DAC STP X31, X31, [X20]
	0x03805DB0 STR X31, [X20 + 0x10]
	0x03805DB4 LDP X20, X19, [X31 + 0x30]
	0x03805DB8 LDP X22, X21, [X31 + 0x20]
	0x03805DBC LDP X24, X23, [X31 + 0x10]
	0x03805DC0 LDP X30, X25, [X31], #0x40
	0x03805DC4 RET
	0x03805DC8 BL 0x1C16F20
	0x03805DCC MOV X0, X21
	0x03805DD0 BL 0x1C16F18
	0x03805DD4 B 0x3805DDC
	0x03805DD8 B 0x3805DDC
	0x03805DDC CMP W1, 0x1
	0x03805DE0 B.NE 0x3805DF4
	0x03805DE4 BL 0x3EB1AD0
	0x03805DE8 LDR X21, [X0]
	0x03805DEC BL 0x3EB1AE0
	0x03805DF0 B 0x3805D4C
	0x03805DF4 MOV X20, X0
	0x03805DF8 MOV X21, X31
	0x03805DFC B 0x3805E04
	0x03805E00 MOV X20, X0
	0x03805E04 CBZ X19, 0x3805E60
	0x03805E08 LDR X8, [X19]
	0x03805E0C LDR X1, [X22]
	0x03805E10 LDRH W9, [X8 + 0x12E]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Compare X19, 0
	009 JumpIfEqual {15}
	010 Move [X20+24], X19
	011 Move X20, [X31+16]
	012 Move X19, [X31+24]
	013 Move X30, [X31+32]
	014 Return 
	015 Move X0, 0x8F4000
	016 Move X0, [X0+1320]
	017 Call 0x1C17D08
	018 Call 0x1C17F10
	019 Move X19, X0
	020 Move X0, 0x946000
	021 Move X0, [X0+680]
	022 Call 0x1C17D08
	023 Move X1, X0
	024 Move X0, X19
	025 Move X2, X31
	026 Call ArgumentNullException..ctor, X0, X1
	027 Move X0, 0x946000
	028 Move X0, [X0+688]
	029 Call 0x1C17D08
	030 Move X1, X0
	031 Move X0, X19
	032 Call 0x1C17DEC

Method: System.Void Dispose()

Disassembly:
	0x03806B64 BL 0x380644C
	0x03806B68 ADD X2, X31, 0x0
	0x03806B6C MOV X0, X19
	0x03806B70 MOV W1, W31
	0x03806B74 BL 0x3806118
	0x03806B78 TBZ X0, 0x0, 0x3806BF4
	0x03806B7C LDR X21, [X31]
	0x03806B80 CBZ X21, 0x3806B8C
	0x03806B84 LDR W23, [X21]
	0x03806B88 B 0x3806B90
	0x03806B8C MOV W23, W31
	0x03806B90 LDR X0, [X22]
	0x03806B94 LDR W8, [X0 + 0xE0]
	0x03806B98 CBNZ W8, 0x3806BA0
	0x03806B9C BL 0x1C16DFC
	0x03806BA0 ADD X0, X31, 0x18
	0x03806BA4 MOVZ W1, 0x46
	0x03806BA8 MOVZ W2, 0x52
	0x03806BAC MOVZ W3, 0x4D
	0x03806BB0 MOVZ W4, 0x45
	0x03806BB4 MOV X5, X31
	0x03806BB8 STR W31, [X31 + 0x18]
	0x03806BBC BL 0x375AA28
	0x03806BC0 LDR W8, [X31 + 0x18]
	0x03806BC4 CMP W23, W8
	0x03806BC8 B.EQ 0x3806C28
	0x03806BCC MOV X0, X19
	0x03806BD0 MOV X1, X21
	0x03806BD4 BL 0x380644C
	0x03806BD8 ADD X2, X31, 0x0
	0x03806BDC MOV X0, X19
	0x03806BE0 MOV W1, W31
	0x03806BE4 BL 0x3806118
	0x03806BE8 MOV X20, X21
	0x03806BEC TBNZ X0, 0x0, 0x3806B7C
	0x03806BF0 STR X21, [X31 + 0x10]
	0x03806BF4 LDR X8, [X19 + 0x88]
	0x03806BF8 CBZ X8, 0x3806C0C
	0x03806BFC LDR W9, [X19 + 0x80]
	0x03806C00 LDR W8, [X8 + 0x18]
	0x03806C04 CMP W9, W8
	0x03806C08 B.LT 0x3806C14
	0x03806C0C MOV X0, X19
	0x03806C10 BL 0x3806CA8
	0x03806C14 LDP X20, X19, [X31 + 0x40]
	0x03806C18 LDP X22, X21, [X31 + 0x30]
	0x03806C1C LDP X30, X23, [X31 + 0x20]
	0x03806C20 ADD X31, X31, 0x50
	0x03806C24 RET
	0x03806C28 STR X20, [X31 + 0x10]
	0x03806C2C LDR X8, [X19 + 0x20]
	0x03806C30 CBZ X8, 0x3806CA4
	0x03806C34 STR X20, [X8 + 0x20]
	0x03806C38 LDR W8, [X19 + 0x14]
	0x03806C3C SUB W8, W8, 0x1
	0x03806C40 STR W8, [X19 + 0x14]
	0x03806C44 B 0x3806C14
	0x03806C48 MOV W23, W31
	0x03806C4C LDR X0, [X22]
	0x03806C50 LDR W8, [X0 + 0xE0]
	0x03806C54 CBNZ W8, 0x3806C5C
	0x03806C58 BL 0x1C16DFC
	0x03806C5C ADD X0, X31, 0x18
	0x03806C60 MOVZ W1, 0x46
	0x03806C64 MOVZ W2, 0x52
	0x03806C68 MOVZ W3, 0x4D
	0x03806C6C MOVZ W4, 0x45
	0x03806C70 MOV X5, X31
	0x03806C74 STR W31, [X31 + 0x18]
	0x03806C78 BL 0x375AA28
	0x03806C7C LDR W8, [X31 + 0x18]
	0x03806C80 CMP W23, W8
	0x03806C84 B.NE 0x3806B5C
	0x03806C88 LDR W9, [X19 + 0x14]
	0x03806C8C LDR X8, [X19 + 0x20]
	0x03806C90 SUB W9, W9, 0x1
	0x03806C94 STR W9, [X19 + 0x14]
	0x03806C98 CBZ X8, 0x3806CA4
	0x03806C9C STR X21, [X8 + 0x20]
	0x03806CA0 B 0x3806C14
	0x03806CA4 BL 0x1C16F20
	0x03806CA8 STP X30, X23, [X31 - 0x30]!
	0x03806CAC STP X22, X21, [X31 + 0x10]
	0x03806CB0 STP X20, X19, [X31 + 0x20]
	0x03806CB4 ADRP X23, 0xBDB000
	0x03806CB8 ADRP X22, 0x8EE000
	0x03806CBC ADRP X20, 0x944000
	0x03806CC0 ADRP X21, 0x915000
	0x03806CC4 LDRB W8, [X23 + 0x441]
	0x03806CC8 LDR X22, [X22 + 0xE70]
	0x03806CCC LDR X20, [X20 + 0x310]
	0x03806CD0 LDR X21, [X21 + 0x270]
	0x03806CD4 MOV X19, X0
	0x03806CD8 TBNZ X8, 0x0, 0x3806D08
	0x03806CDC ADRP X0, 0x8EE000
	0x03806CE0 LDR X0, [X0 + 0xE70]
	0x03806CE4 BL 0x1C16CF4
	0x03806CE8 ADRP X0, 0x915000
	0x03806CEC LDR X0, [X0 + 0x270]
	0x03806CF0 BL 0x1C16CF4
	0x03806CF4 ADRP X0, 0x944000
	0x03806CF8 LDR X0, [X0 + 0x310]
	0x03806CFC BL 0x1C16CF4
	0x03806D00 MOVZ W8, 0x1
	0x03806D04 STRB W8, [X23 + 0x441]
	0x03806D08 MOVZ W8, 0x1
	0x03806D0C STRB W8, [X19 + 0x10]
	0x03806D10 LDR X0, [X22]
	0x03806D14 BL 0x1C16F10
	0x03806D18 LDR X2, [X20]
	0x03806D1C MOV X1, X19
	0x03806D20 MOV X3, X31
	0x03806D24 MOV X20, X0
	0x03806D28 BL 0x3314368
	0x03806D2C LDR X0, [X21]
	0x03806D30 LDR W8, [X0 + 0xE0]
	0x03806D34 CBNZ W8, 0x3806D3C
	0x03806D38 BL 0x1C16DFC
	0x03806D3C MOV X0, X20
	0x03806D40 MOV X1, X31
	0x03806D44 BL 0x377033C
	0x03806D48 LDR X8, [X19 + 0x60]
	0x03806D4C CBZ X8, 0x3806D6C
	0x03806D50 LDR X2, [X8 + 0x18]
	0x03806D54 LDR X0, [X8 + 0x40]
	0x03806D58 LDR X1, [X8 + 0x28]
	0x03806D5C LDP X20, X19, [X31 + 0x20]
	0x03806D60 LDP X22, X21, [X31 + 0x10]
	0x03806D64 LDP X30, X23, [X31], #0x30
	0x03806D68 BR X2
	0x03806D6C LDP X20, X19, [X31 + 0x20]
	0x03806D70 LDP X22, X21, [X31 + 0x10]
	0x03806D74 LDP X30, X23, [X31], #0x30
	0x03806D78 RET
	0x03806D7C SUB X31, X31, 0x70
	0x03806D80 STP X30, X23, [X31 + 0x40]
	0x03806D84 STP X22, X21, [X31 + 0x50]
	0x03806D88 STP X20, X19, [X31 + 0x60]
	0x03806D8C ADRP X22, 0xBDB000
	0x03806D90 ADRP X19, 0x944000
	0x03806D94 LDRB W8, [X22 + 0x444]
	0x03806D98 LDR X19, [X19 + 0x3C0]
	0x03806D9C MOV W21, W1
	0x03806DA0 MOV X20, X0
	0x03806DA4 TBNZ X8, 0x0, 0x3806E34
	0x03806DA8 ADRP X0, 0x944000
	0x03806DAC LDR X0, [X0 + 0x3C8]
	0x03806DB0 BL 0x1C16CF4
	0x03806DB4 ADRP X0, 0x944000
	0x03806DB8 LDR X0, [X0 + 0x348]
	0x03806DBC BL 0x1C16CF4
	0x03806DC0 ADRP X0, 0x915000
	0x03806DC4 LDR X0, [X0 + 0xDC0]
	0x03806DC8 BL 0x1C16CF4
	0x03806DCC ADRP X0, 0x915000
	0x03806DD0 LDR X0, [X0 + 0x270]
	0x03806DD4 BL 0x1C16CF4
	0x03806DD8 ADRP X0, 0x944000
	0x03806DDC LDR X0, [X0 + 0x360]
	0x03806DE0 BL 0x1C16CF4
	0x03806DE4 ADRP X0, 0x944000
	0x03806DE8 LDR X0, [X0 + 0x3D0]
	0x03806DEC BL 0x1C16CF4
	0x03806DF0 ADRP X0, 0x944000
	0x03806DF4 LDR X0, [X0 + 0x3D8]
	0x03806DF8 BL 0x1C16CF4
	0x03806DFC ADRP X0, 0x944000
	0x03806E00 LDR X0, [X0 + 0x3E0]
	0x03806E04 BL 0x1C16CF4
	0x03806E08 ADRP X0, 0x944000
	0x03806E0C LDR X0, [X0 + 0x3E8]
	0x03806E10 BL 0x1C16CF4
	0x03806E14 ADRP X0, 0x944000
	0x03806E18 LDR X0, [X0 + 0x3F0]
	0x03806E1C BL 0x1C16CF4
	0x03806E20 ADRP X0, 0x944000
	0x03806E24 LDR X0, [X0 + 0x3C0]
	0x03806E28 BL 0x1C16CF4
	0x03806E2C MOVZ W8, 0x1
	0x03806E30 STRB W8, [X22 + 0x444]
	0x03806E34 LDR X0, [X19]
	0x03806E38 STP X31, X31, [X31 + 0x30]
	0x03806E3C STP X31, X31, [X31 + 0x20]
	0x03806E40 BL 0x1C16F10
	0x03806E44 MOV X1, X31
	0x03806E48 MOV X19, X0
	0x03806E4C BL 0x33BDD8C
	0x03806E50 CBZ X19, 0x3807058
	0x03806E54 STR W21, [X19 + 0x10]
	0x03806E58 MOV X21, X20
	0x03806E5C LDR W8, [X21 + 0x28]!
	0x03806E60 CMP W8, 0x1
	0x03806E64 B.LT 0x3806EA0
	0x03806E68 ADRP X23, 0x944000
	0x03806E6C LDR X23, [X23 + 0x348]
	0x03806E70 MOV W22, W31
	0x03806E74 LDR X2, [X23]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X22, 0xBDC000
	010 Move X21, 0x8EF000
	011 Move X20, 0x945000
	012 Move X23, 0x916000
	013 Move W8, [X22+1084]
	014 Move X21, [X21+3696]
	015 Move X20, [X20+784]
	016 Move X23, [X23+624]
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {45}
	022 Move X0, 0x8EF000
	023 Move X0, [X0+3696]
	024 Call 0x1C17CF4
	025 Move X0, 0x8EE000
	026 Move X0, [X0+3584]
	027 Call 0x1C17CF4
	028 Move X0, 0x944000
	029 Move X0, [X0+224]
	030 Call 0x1C17CF4
	031 Move X0, 0x8EE000
	032 Move X0, [X0+3608]
	033 Call 0x1C17CF4
	034 Move X0, 0x945000
	035 Move X0, [X0+792]
	036 Call 0x1C17CF4
	037 Move X0, 0x916000
	038 Move X0, [X0+624]
	039 Call 0x1C17CF4
	040 Move X0, 0x945000
	041 Move X0, [X0+784]
	042 Call 0x1C17CF4
	043 Move W8, 1
	044 Move [X22+1084], W8
	045 Move X0, [X21]
	046 Move X21, 0x945000
	047 Move X21, [X21+792]
	048 Call 0x1C17F10
	049 Move X2, [X20]
	050 Move X1, X19
	051 Move X3, X31
	052 Move X20, X0
	053 Call Action..ctor, X0, X1, X2
	054 Move X0, [X23]
	055 Move W8, [X0+224]
	056 Compare W8, 0
	057 JumpIfNotEqual {59}
	058 Call 0x1C17DFC
	059 Move X22, 0x8EE000
	060 Move X22, [X22+3584]
	061 Move X0, X20
	062 Move X1, X31
	063 Call InputSystem.remove_onBeforeUpdate, X0
	064 Move W8, 1
	065 Move [X19+16], W8
	066 Move X1, [X21]
	067 Add X20, X19, 72
	068 Move X0, X20
	069 Call InlinedArray`1<Object>.GetEnumerator, X0
	070 Move X19, X0
	071 Compare X0, 0
	072 JumpIfEqual {170}
	073 Move X24, 0x8EE000
	074 Move X25, 0x944000
	075 Move X24, [X24+3608]
	076 Move X25, [X25+224]
	077 Move X8, [X19]
	078 Move X1, [X24]
	079 NotImplemented "Instruction LDRH not yet implemented."
	080 Compare X9, 0
	081 JumpIfEqual {88}
	082 Move X10, [X8+176]
	083 Add X10, X10, 8
	084 NotImplemented "Instruction LDUR not yet implemented."
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Subtract X9, X9, 1
	087 Add X10, X10, 16
	088 Move X0, X19
	089 Move W2, W31
	090 Call 0x1C5D788
	091 NotImplemented "Instruction LDRSW not yet implemented."
	092 Add X8, X8, X9
	093 Add X0, X8, 312
	094 Move X8, [X0]
	095 Move X1, [X0+8]
	096 Move X0, X19
	097 NotImplemented "Instruction BLR not yet implemented."
	098 Move TEMP, X0
	099 And TEMP, TEMP, 1
	100 Compare TEMP, 1
	101 JumpIfNotEqual {132}
	102 Move X8, [X19]
	103 Move X1, [X25]
	104 NotImplemented "Instruction LDRH not yet implemented."
	105 Compare X9, 0
	106 JumpIfEqual {113}
	107 Move X10, [X8+176]
	108 Add X10, X10, 8
	109 NotImplemented "Instruction LDUR not yet implemented."
	110 NotImplemented "Instruction CMP not yet implemented."
	111 Subtract X9, X9, 1
	112 Add X10, X10, 16
	113 Move X0, X19
	114 Move W2, W31
	115 Call 0x1C5D788
	116 NotImplemented "Instruction LDRSW not yet implemented."
	117 Add X8, X8, X9
	118 Add X0, X8, 312
	119 Move X8, [X0]
	120 Move X1, [X0+8]
	121 Move X0, X19
	122 NotImplemented "Instruction BLR not yet implemented."
	123 Move X21, X0
	124 Move X0, [X23]
	125 Move W8, [X0+224]
	126 Compare W8, 0
	127 JumpIfNotEqual {129}
	128 Call 0x1C17DFC
	129 Move X0, X21
	130 Move X1, X31
	131 Call InputSystem.RemoveDevice, X0
	132 Move X21, X31
	133 Compare X19, 0
	134 JumpIfEqual {156}
	135 Move X8, [X19]
	136 Move X1, [X22]
	137 NotImplemented "Instruction LDRH not yet implemented."
	138 Compare X9, 0
	139 JumpIfEqual {146}
	140 Move X10, [X8+176]
	141 Add X10, X10, 8
	142 NotImplemented "Instruction LDUR not yet implemented."
	143 NotImplemented "Instruction CMP not yet implemented."
	144 Subtract X9, X9, 1
	145 Add X10, X10, 16
	146 Move X0, X19
	147 Move W2, W31
	148 Call 0x1C5D788
	149 NotImplemented "Instruction LDRSW not yet implemented."
	150 Add X8, X8, X9
	151 Add X0, X8, 312
	152 Move X8, [X0]
	153 Move X1, [X0+8]
	154 Move X0, X19
	155 NotImplemented "Instruction BLR not yet implemented."
	156 Compare X21, 0
	157 JumpIfNotEqual {171}
	158 Move [X20], X31
	159 Move [X20+8], X31
	160 Move [X20+16], X31
	161 Move X20, [X31+48]
	162 Move X19, [X31+56]
	163 Move X22, [X31+32]
	164 Move X21, [X31+40]
	165 Move X24, [X31+16]
	166 Move X23, [X31+24]
	167 Move X30, [X31+64]
	168 Move X25, [X31+72]
	169 Return 
	170 Call 0x1C17F20
	171 Move X0, X21
	172 Call 0x1C17F18
	173 NotImplemented "Instruction CMP not yet implemented."
	174 Call 0x3EB2AD0
	175 Move X21, [X0]
	176 Call 0x3EB2AE0
	177 Move X20, X0
	178 Move X21, X31
	179 Move X20, X0
	180 Compare X19, 0
	181 JumpIfEqual {203}
	182 Move X8, [X19]
	183 Move X1, [X22]
	184 NotImplemented "Instruction LDRH not yet implemented."
	185 Compare X9, 0
	186 JumpIfEqual {193}
	187 Move X10, [X8+176]
	188 Add X10, X10, 8
	189 NotImplemented "Instruction LDUR not yet implemented."
	190 NotImplemented "Instruction CMP not yet implemented."
	191 Subtract X9, X9, 1
	192 Add X10, X10, 16
	193 Move X0, X19
	194 Move W2, W31
	195 Call 0x1C5D788
	196 NotImplemented "Instruction LDRSW not yet implemented."
	197 Add X8, X8, X9
	198 Add X0, X8, 312
	199 Move X8, [X0]
	200 Move X1, [X0+8]
	201 Move X0, X19
	202 NotImplemented "Instruction BLR not yet implemented."
	203 Compare X21, 0
	204 JumpIfNotEqual {207}
	205 Move X0, X20
	206 Call 0x1D2D690
	207 Move X0, X21
	208 Call 0x1C17F18
	209 Call 0x1991590

Method: UnityEngine.InputSystem.LowLevel.InputEventTrace/ReplayController WithDeviceMappedFromTo(UnityEngine.InputSystem.InputDevice recordedDevice, UnityEngine.InputSystem.InputDevice playbackDevice)

Disassembly:
	0x03806E78 MOV X0, X21
	0x03806E7C MOV W1, W22
	0x03806E80 BL 0x2DE4BE4
	0x03806E84 LDR W8, [X19 + 0x10]
	0x03806E88 CMP W8, W0
	0x03806E8C B.EQ 0x3806F98
	0x03806E90 LDR W8, [X21]
	0x03806E94 ADD W22, W22, 0x1
	0x03806E98 CMP W22, W8
	0x03806E9C B.LT 0x3806E74
	0x03806EA0 LDRB W8, [X20 + 0x40]
	0x03806EA4 CBZ W8, 0x3806F90
	0x03806EA8 LDR X0, [X20 + 0x18]
	0x03806EAC CBZ X0, 0x380705C
	0x03806EB0 BL 0x380350C
	0x03806EB4 ADRP X8, 0x944000
	0x03806EB8 LDR X8, [X8 + 0x3D8]
	0x03806EBC STP X0, X1, [X31 + 0x30]
	0x03806EC0 LDR X8, [X8]
	0x03806EC4 MOV X0, X8
	0x03806EC8 BL 0x1C16F10
	0x03806ECC ADRP X8, 0x944000
	0x03806ED0 LDR X8, [X8 + 0x3F0]
	0x03806ED4 MOV X21, X0
	0x03806ED8 LDR X2, [X8]
	0x03806EDC MOV X1, X19
	0x03806EE0 MOV X3, X31
	0x03806EE4 BL 0x24B0624
	0x03806EE8 ADRP X8, 0x944000
	0x03806EEC LDR X8, [X8 + 0x3E0]
	0x03806EF0 LDR X2, [X8]
	0x03806EF4 ADD X0, X31, 0x30
	0x03806EF8 MOV X1, X21

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Compare X1, 0
	004 JumpIfEqual {11}
	005 Compare X2, 0
	006 JumpIfEqual {18}
	007 Move W1, [X1+224]
	008 Move W2, [X2+224]
	009 Move X30, [X31+16]
	010 Move X19, [X31+24]
	011 Move X0, 0x8F3000
	012 Move X0, [X0+1320]
	013 Call 0x1C17D08
	014 Call 0x1C17F10
	015 Move X19, X0
	016 Move X0, 0x945000
	017 Move X0, [X0+800]
	018 Move X0, 0x8F3000
	019 Move X0, [X0+1320]
	020 Call 0x1C17D08
	021 Call 0x1C17F10
	022 Move X19, X0
	023 Move X0, 0x945000
	024 Move X0, [X0+808]
	025 Call 0x1C17D08
	026 Move X1, X0
	027 Move X0, X19
	028 Move X2, X31
	029 Call ArgumentNullException..ctor, X0, X1
	030 Move X0, 0x945000
	031 Move X0, [X0+816]
	032 Call 0x1C17D08
	033 Move X1, X0
	034 Move X0, X19
	035 Call 0x1C17DEC

Method: UnityEngine.InputSystem.LowLevel.InputEventTrace/ReplayController WithDeviceMappedFromTo(System.Int32 recordedDeviceId, System.Int32 playbackDeviceId)

Disassembly:
	0x03806EFC BL 0x24FF698
	0x03806F00 MOV W21, W0
	0x03806F04 ADDS W31, W0, 0x1
	0x03806F08 B.EQ 0x3806F90
	0x03806F0C LDR X0, [X20 + 0x18]
	0x03806F10 CBZ X0, 0x3807060
	0x03806F14 BL 0x380350C
	0x03806F18 ADRP X8, 0x944000
	0x03806F1C LDR X8, [X8 + 0x3E8]
	0x03806F20 STP X0, X1, [X31 + 0x30]
	0x03806F24 LDR X2, [X8]
	0x03806F28 ADD X8, X31, 0x0
	0x03806F2C ADD X0, X31, 0x30
	0x03806F30 MOV W1, W21
	0x03806F34 BL 0x24FF940
	0x03806F38 LDR X1, [X31 + 0x8]
	0x03806F3C LDR X21, [X31 + 0x18]
	0x03806F40 ADD X0, X31, 0x20
	0x03806F44 MOV X2, X31
	0x03806F48 BL 0x3757420
	0x03806F4C ADRP X22, 0x915000
	0x03806F50 LDR X22, [X22 + 0xDC0]
	0x03806F54 LDR X0, [X22]
	0x03806F58 LDR W8, [X0 + 0xE0]
	0x03806F5C CBNZ W8, 0x3806F68
	0x03806F60 BL 0x1C16DFC
	0x03806F64 LDR X0, [X22]
	0x03806F68 LDR X8, [X0 + 0xB8]
	0x03806F6C LDP X1, X2, [X31 + 0x20]
	0x03806F70 ADD X0, X8, 0x10
	0x03806F74 MOV X3, X31
	0x03806F78 BL 0x3813EB4
	0x03806F7C TBNZ X0, 0x0, 0x3806FD0
	0x03806F80 MOV X0, X21
	0x03806F84 MOV X1, X31
	0x03806F88 BL 0x32277A8
	0x03806F8C TBZ X0, 0x0, 0x3806FA0
	0x03806F90 LDR W0, [X19 + 0x10]
	0x03806F94 B 0x3807044
	0x03806F98 UBFM X0, X0, 0x20, 0x3F
	0x03806F9C B 0x3807044
	0x03806FA0 ADRP X8, 0x915000
	0x03806FA4 LDR X8, [X8 + 0x270]
	0x03806FA8 LDR X0, [X8]
	0x03806FAC LDR W8, [X0 + 0xE0]
	0x03806FB0 CBNZ W8, 0x3806FB8
	0x03806FB4 BL 0x1C16DFC
	0x03806FB8 MOV X0, X21
	0x03806FBC MOV X1, X31
	0x03806FC0 MOV X2, X31
	0x03806FC4 MOV X3, X31
	0x03806FC8 MOV X4, X31
	0x03806FCC BL 0x376CCE0
	0x03806FD0 LDP X0, X1, [X31 + 0x20]
	0x03806FD4 MOV X2, X31
	0x03806FD8 BL 0x37577E0
	0x03806FDC ADRP X8, 0x915000
	0x03806FE0 LDR X8, [X8 + 0x270]
	0x03806FE4 MOV X21, X0
	0x03806FE8 LDR X0, [X8]
	0x03806FEC LDR W8, [X0 + 0xE0]
	0x03806FF0 CBNZ W8, 0x3806FF8
	0x03806FF4 BL 0x1C16DFC
	0x03806FF8 MOV X0, X21
	0x03806FFC MOV X1, X31
	0x03807000 MOV X2, X31
	0x03807004 MOV X3, X31
	0x03807008 BL 0x376E4CC
	0x0380700C MOV X21, X0
	0x03807010 CBZ X0, 0x3807064
	0x03807014 LDR W1, [X19 + 0x10]
	0x03807018 LDR W2, [X21 + 0xE0]
	0x0380701C MOV X0, X20
	0x03807020 BL 0x3805EFC
	0x03807024 ADRP X8, 0x943000
	0x03807028 LDR X8, [X8 + 0x3C8]
	0x0380702C ADD X0, X20, 0x48
	0x03807030 LDR X3, [X8]
	0x03807034 MOVZ W2, 0xA
	0x03807038 MOV X1, X21
	0x0380703C BL 0x2DEA8C8
	0x03807040 LDR W0, [X21 + 0xE0]
	0x03807044 LDP X20, X19, [X31 + 0x60]
	0x03807048 LDP X22, X21, [X31 + 0x50]
	0x0380704C LDP X30, X23, [X31 + 0x40]
	0x03807050 ADD X31, X31, 0x70
	0x03807054 RET
	0x03807058 BL 0x1C16F20
	0x0380705C BL 0x1C16F20
	0x03807060 BL 0x1C16F20
	0x03807064 BL 0x1C16F20
	0x03807068 B 0x38070A4
	0x0380706C B 0x38070A4
	0x03807070 B 0x38070A4
	0x03807074 B 0x38070A4

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0xBDC000
	009 Move W8, [X22+1085]
	010 Move W20, W2
	011 Move W21, W1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {37}
	017 Move X0, 0x945000
	018 Move X0, [X0+824]
	019 Call 0x1C17CF4
	020 Move X0, 0x945000
	021 Move X0, [X0+832]
	022 Call 0x1C17CF4
	023 Move X0, 0x945000
	024 Move X0, [X0+840]
	025 Call 0x1C17CF4
	026 Move X0, 0x945000
	027 Move X0, [X0+848]
	028 Call 0x1C17CF4
	029 Move X0, 0x945000
	030 Move X0, [X0+856]
	031 Call 0x1C17CF4
	032 Move X0, 0x945000
	033 Move X0, [X0+864]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X22+1085], W8
	037 Move X22, X19
	038 Add X22, X22, 40
	039 Move W8, [X22]
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move X24, 0x945000
	042 Move X24, [X24+840]
	043 Move W23, W31
	044 Move X2, [X24]
	045 Move X0, X22
	046 Move W1, W23
	047 Call 0x2DE5BE4, X0, X1
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move W8, [X22]
	050 Add W23, W23, 1
	051 NotImplemented "Instruction CMP not yet implemented."
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move X8, 0x945000
	054 Move X8, [X8+856]
	055 Add X0, X31, 8
	056 Move W1, W21
	057 Move W2, W20
	058 Move X3, [X8]
	059 Move [X31+8], X31
	060 Call KeyValuePair`2<Int32, Int32>..ctor, X0, X1, X2
	061 Move X8, 0x945000
	062 Move X1, [X31+8]
	063 Move X8, [X8+824]
	064 Move W2, 10
	065 Move X0, X22
	066 Move X3, [X8]
	067 Call 0x2DE60C8, X0, X1, X2
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move X8, 0x944000
	070 Move X8, [X8+832]
	071 Move X0, X22
	072 Move W1, W23
	073 Move X2, [X8]
	074 Call 0x2DE666C, X0, X1
	075 Move X8, 0x944000
	076 Move X8, [X8+856]
	077 Add X0, X31, 8
	078 Move W1, W21
	079 Move W2, W20
	080 Move X3, [X8]
	081 Move [X31+8], X31
	082 Call KeyValuePair`2<Int32, Int32>..ctor, X0, X1, X2
	083 Move X8, 0x944000
	084 Move X2, [X31+8]
	085 Move X8, [X8+848]
	086 Move X0, X22
	087 Move W1, W23
	088 Move X3, [X8]
	089 Call 0x2DE5C80, X0, X1, X2
	090 Move X0, X19
	091 Move X20, [X31+48]
	092 Move X19, [X31+56]
	093 Move X22, [X31+32]
	094 Move X21, [X31+40]
	095 Move X24, [X31+16]
	096 Move X23, [X31+24]
	097 Move X30, [X31+64]
	098 Return X0

Method: UnityEngine.InputSystem.LowLevel.InputEventTrace/ReplayController WithAllDevicesMappedToNewInstances()

Disassembly:
	0x03807078 B 0x38070A4
	0x0380707C B 0x38070A4
	0x03807080 B 0x38070A4

ISIL:
	001 Move W8, 1
	002 Move [X0+64], W8
	003 Return X0

Method: UnityEngine.InputSystem.LowLevel.InputEventTrace/ReplayController OnFinished(System.Action action)

Disassembly:
	0x03807084 B 0x38070A4
	0x03807088 B 0x38070A4

ISIL:
	001 Move [X0+96], X1
	002 Return X0

Method: UnityEngine.InputSystem.LowLevel.InputEventTrace/ReplayController OnEvent(System.Action`1<UnityEngine.InputSystem.LowLevel.InputEventPtr> action)

Disassembly:
	0x0380708C B 0x38070A4
	0x03807090 B 0x38070A4

ISIL:
	001 Move [X0+104], X1
	002 Return X0

Method: UnityEngine.InputSystem.LowLevel.InputEventTrace/ReplayController PlayOneEvent()

Disassembly:
	0x03807094 B 0x38070A4
	0x03807098 B 0x38070A4
	0x0380709C B 0x38070A4
	0x038070A0 B 0x38070A4
	0x038070A4 MOV X20, X0
	0x038070A8 CMP W1, 0x1
	0x038070AC B.NE 0x3807108
	0x038070B0 MOV X0, X20
	0x038070B4 BL 0x3EB1AD0
	0x038070B8 MOV X20, X0
	0x038070BC ADRP X0, 0x8F2000
	0x038070C0 LDR X0, [X0 + 0xCC0]
	0x038070C4 BL 0x1C16D08
	0x038070C8 LDR X8, [X20]
	0x038070CC LDR X1, [X8]
	0x038070D0 BL 0x1C17270
	0x038070D4 TBZ X0, 0x0, 0x38070E0
	0x038070D8 BL 0x3EB1AE0
	0x038070DC B 0x3806F90
	0x038070E0 MOVZ W0, 0x8
	0x038070E4 BL 0x3EB1AF0
	0x038070E8 LDR X8, [X20]
	0x038070EC STR X8, [X0]
	0x038070F0 ADRP X1, 0x6AD000
	0x038070F4 ADD X1, X1, 0xE58
	0x038070F8 MOV X2, X31
	0x038070FC BL 0x3EB1B00
	0x03807100 MOV X20, X0
	0x03807104 BL 0x3EB1AE0
	0x03807108 MOV X0, X20
	0x0380710C BL 0x1D2C690
	0x03807110 BL 0x1990590
	0x03807114 MOV X1, X31

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+16], X30
	003 Move [X31+24], X19
	004 Add X2, X31, 8
	005 Move W1, 1
	006 Move X19, X0
	007 Move [X31+8], X31
	008 Call ReplayController.MoveNext, X0, X1, X2
	009 Move TEMP, X0
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfNotEqual {21}
	013 Move X1, [X31+8]
	014 Move X0, X19
	015 Call ReplayController.QueueEvent, X0, X1
	016 Move X0, X19
	017 Move X30, [X31+16]
	018 Move X19, [X31+24]
	019 Add X31, X31, 32
	020 Return X0
	021 Move X0, 0x8ED000
	022 Move X0, [X0+1456]
	023 Call 0x1C17D08
	024 Call 0x1C17F10
	025 Move X19, X0
	026 Move X0, 0x944000
	027 Move X0, [X0+872]
	028 Call 0x1C17D08
	029 Move X1, X0
	030 Move X0, X19
	031 Move X2, X31
	032 Call InvalidOperationException..ctor, X0, X1
	033 Move X0, 0x944000
	034 Move X0, [X0+880]
	035 Call 0x1C17D08
	036 Move X1, X0
	037 Move X0, X19
	038 Call 0x1C17DEC

Method: UnityEngine.InputSystem.LowLevel.InputEventTrace/ReplayController Rewind()

Disassembly:
	0x03807678 LDR X0, [X0 + 0xD70]
	0x0380767C BL 0x1C16D08
	0x03807680 MOV X1, X0
	0x03807684 MOV X0, X19
	0x03807688 MOV X2, X31
	0x0380768C BL 0x330E100

ISIL:
	001 Move TEMP, 0
	002 Not TEMP
	003 Move W8, TEMP
	004 Move [X0+32], X31
	005 Move [X0+136], X31
	006 Move [X0+128], W8
	007 Move [X0+20], W31
	008 Return X0

Method: UnityEngine.InputSystem.LowLevel.InputEventTrace/ReplayController PlayAllFramesOneByOne()

Disassembly:
	0x03807690 ADRP X0, 0x943000
	0x03807694 LDR X0, [X0 + 0x410]
	0x03807698 BL 0x1C16D08
	0x0380769C MOV X1, X0
	0x038076A0 MOV X0, X19
	0x038076A4 BL 0x1C16DEC
	0x038076A8 CBZ X8, 0x38076B0
	0x038076AC LDR W8, [X8]
	0x038076B0 STR W8, [X31 + 0x8]
	0x038076B4 ADRP X0, 0x914000
	0x038076B8 LDR X0, [X0 + 0xD28]
	0x038076BC BL 0x1C16D08
	0x038076C0 ADD X1, X31, 0x8
	0x038076C4 BL 0x1C16E04
	0x038076C8 MOV X19, X0
	0x038076CC ADRP X0, 0x943000
	0x038076D0 LDR X0, [X0 + 0x418]
	0x038076D4 BL 0x1C16D08
	0x038076D8 MOV X1, X19
	0x038076DC MOV X2, X31
	0x038076E0 BL 0x321EFD0
	0x038076E4 MOV X19, X0
	0x038076E8 ADRP X0, 0x8F4000
	0x038076EC LDR X0, [X0 + 0xC08]
	0x038076F0 BL 0x1C16D08
	0x038076F4 BL 0x1C16F10
	0x038076F8 MOV X1, X19
	0x038076FC MOV X2, X31
	0x03807700 MOV X20, X0
	0x03807704 BL 0x337B498
	0x03807708 ADRP X0, 0x943000
	0x0380770C LDR X0, [X0 + 0x410]
	0x03807710 BL 0x1C16D08
	0x03807714 MOV X1, X0
	0x03807718 MOV X0, X20
	0x0380771C BL 0x1C16DEC
	0x03807720 SUB X31, X31, 0x40
	0x03807724 STP X30, X21, [X31 + 0x20]
	0x03807728 STP X20, X19, [X31 + 0x30]
	0x0380772C MRS X21, 0xC000
	0x03807730 MOV X20, X8
	0x03807734 LDR X8, [X21 + 0x28]
	0x03807738 MOV W19, W1
	0x0380773C MOVZ W1, 0x5854

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0xBDB000
	008 Move X22, 0x8EE000
	009 Move X20, 0x944000
	010 Move X21, 0x915000
	011 Move W8, [X23+1086]
	012 Move X22, [X22+3696]
	013 Move X20, [X20+784]
	014 Move X21, [X21+624]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {31}
	020 Move X0, 0x8EE000
	021 Move X0, [X0+3696]
	022 Call 0x1C17CF4
	023 Move X0, 0x915000
	024 Move X0, [X0+624]
	025 Call 0x1C17CF4
	026 Move X0, 0x944000
	027 Move X0, [X0+784]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X23+1086], W8
	031 Move [X19+16], W31
	032 Move X0, [X22]
	033 Call 0x1C17F10
	034 Move X2, [X20]
	035 Move X1, X19
	036 Move X3, X31
	037 Move X20, X0
	038 Call Action..ctor, X0, X1, X2
	039 Move X0, [X21]
	040 Move W8, [X0+224]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Move X0, X20
	045 Move X1, X31
	046 Call InputSystem.add_onBeforeUpdate, X0
	047 Move X0, X19
	048 Move X20, [X31+32]
	049 Move X19, [X31+40]
	050 Move X22, [X31+16]
	051 Move X21, [X31+24]
	052 Move X30, [X31+48]
	053 Move X23, [X31+56]
	054 Return X0

Method: UnityEngine.InputSystem.LowLevel.InputEventTrace/ReplayController PlayAllEvents()

Disassembly:
	0x03807740 MOV W3, W0
	0x03807744 ADD X0, X31, 0x0
	0x03807748 MOVK W1, 0x54450000
	0x0380774C MOVZ W2, 0x18
	0x03807750 STR X8, [X31 + 0x18]
	0x03807754 STP X31, X31, [X31]
	0x03807758 STR W31, [X31 + 0x10]
	0x0380775C BL 0x3800BC8
	0x03807760 LDR V0, [X31]
	0x03807764 LDR W8, [X31 + 0x10]
	0x03807768 AND W9, W19, 0xFFFF
	0x0380776C STR V0, [X20]
	0x03807770 STP W8, W9, [X20 + 0x10]
	0x03807774 LDR X8, [X21 + 0x28]
	0x03807778 LDR X9, [X31 + 0x18]
	0x0380777C CMP X8, X9
	0x03807780 B.NE 0x3807794
	0x03807784 LDP X20, X19, [X31 + 0x30]
	0x03807788 LDP X30, X21, [X31 + 0x20]
	0x0380778C ADD X31, X31, 0x40
	0x03807790 RET
	0x03807794 BL 0x3EB1B20
	0x03807798 SUB X31, X31, 0x40
	0x0380779C STP X30, X21, [X31 + 0x20]
	0x038077A0 STP X20, X19, [X31 + 0x30]
	0x038077A4 MRS X21, 0xC000
	0x038077A8 MOV X20, X8
	0x038077AC LDR X8, [X21 + 0x28]
	0x038077B0 MOV W19, W1
	0x038077B4 MOVZ W1, 0x5854
	0x038077B8 MOV W3, W0
	0x038077BC ADD X0, X31, 0x0
	0x038077C0 MOVK W1, 0x54450000
	0x038077C4 MOVZ W2, 0x18
	0x038077C8 STR X8, [X31 + 0x18]
	0x038077CC STP X31, X31, [X31]
	0x038077D0 STR W31, [X31 + 0x10]
	0x038077D4 BL 0x3800BC8
	0x038077D8 LDR V0, [X31]
	0x038077DC LDR W8, [X31 + 0x10]
	0x038077E0 STR V0, [X20]
	0x038077E4 STP W8, W19, [X20 + 0x10]
	0x038077E8 LDR X8, [X21 + 0x28]
	0x038077EC LDR X9, [X31 + 0x18]
	0x038077F0 CMP X8, X9
	0x038077F4 B.NE 0x3807808

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X0
	007 Move [X31+8], X31
	008 Move [X0+16], W31
	009 Add X2, X31, 8
	010 Move W1, 1
	011 Move X0, X19
	012 Call ReplayController.MoveNext, X0, X1, X2
	013 Move TEMP, X0
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfNotEqual {20}
	017 Move X1, [X31+8]
	018 Move X0, X19
	019 Call ReplayController.QueueEvent, X0, X1
	020 Move X0, X19
	021 Call ReplayController.Finished, X0
	022 Move X0, X19
	023 Move X20, [X31+32]
	024 Move X19, [X31+40]
	025 Move X30, [X31+16]
	026 Move X21, [X31+24]
	027 Add X31, X31, 48
	028 Return X0
	029 Move X20, X0
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X0, X20
	032 Call 0x3EB2AD0
	033 Move X21, [X0]
	034 Call 0x3EB2AE0
	035 Move X0, X19
	036 Call ReplayController.Finished, X0
	037 Compare X21, 0
	038 JumpIfEqual {22}
	039 Move X0, X21
	040 Call 0x1C17F18
	041 Move X21, X31
	042 Move X20, X0
	043 Move X0, X19
	044 Call ReplayController.Finished, X0
	045 Compare X21, 0
	046 JumpIfNotEqual {49}
	047 Move X0, X20
	048 Call 0x1D2D690
	049 Move X0, X21
	050 Call 0x1C17F18
	051 Call 0x1991590

Method: UnityEngine.InputSystem.LowLevel.InputEventTrace/ReplayController PlayAllEventsAccordingToTimestamps()

Disassembly:
	0x038077F8 LDP X20, X19, [X31 + 0x30]
	0x038077FC LDP X30, X21, [X31 + 0x20]
	0x03807800 ADD X31, X31, 0x40
	0x03807804 RET
	0x03807808 BL 0x3EB1B20
	0x0380780C STP X30, X21, [X31 - 0x20]!
	0x03807810 STP X20, X19, [X31 + 0x10]
	0x03807814 LDR X8, [X2 + 0x8]
	0x03807818 STP X1, X2, [X0 + 0x20]
	0x0380781C MOV X19, X0
	0x03807820 MOV X20, X1
	0x03807824 STR X8, [X0 + 0x10]
	0x03807828 LDRB W21, [X2 + 0x52]
	0x0380782C STR X0, [X0 + 0x40]
	0x03807830 MOV X0, X2
	0x03807834 BL 0x1C16D84
	0x03807838 TBZ X0, 0x0, 0x3807854
	0x0380783C CMP W21, 0x2
	0x03807840 B.NE 0x3807858
	0x03807844 ADRP X8, 0xFFFFFFFFFE3CD000
	0x03807848 ADD X8, X8, 0xC88
	0x0380784C STR X8, [X19 + 0x18]
	0x03807850 B 0x3807868
	0x03807854 CBZ X20, 0x3807880
	0x03807858 LDR X8, [X19 + 0x10]
	0x0380785C LDR X9, [X19 + 0x20]
	0x03807860 STR X8, [X19 + 0x18]
	0x03807864 STR X9, [X19 + 0x40]
	0x03807868 ADRP X8, 0xFFFFFFFFFE3CD000
	0x0380786C ADD X8, X8, 0xC30
	0x03807870 STR X8, [X19 + 0x38]
	0x03807874 LDP X20, X19, [X31 + 0x10]
	0x03807878 LDP X30, X21, [X31], #0x20
	0x0380787C RET
	0x03807880 ADRP X1, 0xFFFFFFFFFD314000
	0x03807884 ADD X1, X1, 0xEE3
	0x03807888 MOV X0, X31
	0x0380788C BL 0x1C16F3C
	0x03807890 MOV X1, X31
	0x03807894 BL 0x1C16DEC
	0x03807898 LDR X8, [X0 + 0x40]
	0x0380789C LDR X4, [X0 + 0x18]
	0x038078A0 LDR X3, [X0 + 0x28]
	0x038078A4 MOV X0, X8
	0x038078A8 BR X4
	0x038078AC SUB X31, X31, 0x60
	0x038078B0 STP X30, X25, [X31 + 0x20]
	0x038078B4 STP X24, X23, [X31 + 0x30]
	0x038078B8 STP X22, X21, [X31 + 0x40]
	0x038078BC STP X20, X19, [X31 + 0x50]
	0x038078C0 ADRP X25, 0xBDA000
	0x038078C4 STR W1, [X31 + 0x1C]
	0x038078C8 ADRP X24, 0x93F000
	0x038078CC ADRP X23, 0x943000
	0x038078D0 LDRB W8, [X25 + 0x449]
	0x038078D4 LDR X24, [X24 + 0x9B8]
	0x038078D8 LDR X23, [X23 + 0x148]
	0x038078DC MOV X19, X4
	0x038078E0 MOV X20, X3
	0x038078E4 MOV X22, X2
	0x038078E8 MOV X21, X0
	0x038078EC TBNZ X8, 0x0, 0x3807910
	0x038078F0 ADRP X0, 0x943000
	0x038078F4 LDR X0, [X0 + 0x148]
	0x038078F8 BL 0x1C16CF4
	0x038078FC ADRP X0, 0x93F000
	0x03807900 LDR X0, [X0 + 0x9B8]
	0x03807904 BL 0x1C16CF4
	0x03807908 MOVZ W8, 0x1
	0x0380790C STRB W8, [X25 + 0x449]
	0x03807910 LDR X0, [X24]
	0x03807914 ADD X1, X31, 0x1C
	0x03807918 STP X31, X31, [X31]
	0x0380791C STR X31, [X31 + 0x10]
	0x03807920 BL 0x1C16E04
	0x03807924 LDR X8, [X23]
	0x03807928 STR X0, [X31]
	0x0380792C MOV X1, X22
	0x03807930 MOV X0, X8
	0x03807934 BL 0x1C16E04
	0x03807938 STR X0, [X31 + 0x8]
	0x0380793C ADD X1, X31, 0x0
	0x03807940 MOV X0, X21
	0x03807944 MOV X2, X20
	0x03807948 MOV X3, X19
	0x0380794C BL 0x1C16CB0
	0x03807950 LDP X20, X19, [X31 + 0x50]
	0x03807954 LDP X22, X21, [X31 + 0x40]
	0x03807958 LDP X24, X23, [X31 + 0x30]
	0x0380795C LDP X30, X25, [X31 + 0x20]
	0x03807960 ADD X31, X31, 0x60
	0x03807964 RET
	0x03807968 STR X30, [X31 - 0x10]!
	0x0380796C MOV X0, X2
	0x03807970 STR X1, [X31 + 0x8]
	0x03807974 ADD X1, X31, 0x8
	0x03807978 BL 0x1C16CB4
	0x0380797C LDR X30, [X31], #0x10
	0x03807980 RET
	0x03807984 LDR W0, [X0]
	0x03807988 RET
	0x0380798C STR W1, [X0]
	0x03807990 RET
	0x03807994 LDR W0, [X0 + 0x4]
	0x03807998 RET
	0x0380799C STR W1, [X0 + 0x4]
	0x038079A0 RET
	0x038079A4 LDR W0, [X0 + 0x8]
	0x038079A8 RET
	0x038079AC STR W1, [X0 + 0x8]
	0x038079B0 RET
	0x038079B4 LDR W0, [X0 + 0xC]
	0x038079B8 RET
	0x038079BC STR W1, [X0 + 0xC]
	0x038079C0 RET
	0x038079C4 LDR W0, [X0 + 0x10]
	0x038079C8 RET
	0x038079CC STR W1, [X0 + 0x10]
	0x038079D0 RET
	0x038079D4 LDR W0, [X0 + 0x14]
	0x038079D8 RET
	0x038079DC STR W1, [X0 + 0x14]
	0x038079E0 RET
	0x038079E4 LDR W0, [X0 + 0x18]
	0x038079E8 RET
	0x038079EC STR W1, [X0 + 0x18]
	0x038079F0 RET
	0x038079F4 LDR W0, [X0 + 0x1C]
	0x038079F8 RET
	0x038079FC STR W1, [X0 + 0x1C]
	0x03807A00 RET
	0x03807A04 LDR W0, [X0 + 0x20]
	0x03807A08 RET
	0x03807A0C STR W1, [X0 + 0x20]
	0x03807A10 RET
	0x03807A14 LDR V0, [X0 + 0x28]
	0x03807A18 RET
	0x03807A1C STR D0, [X0 + 0x28]
	0x03807A20 RET
	0x03807A24 LDR V0, [X0 + 0x30]
	0x03807A28 RET
	0x03807A2C STR D0, [X0 + 0x30]
	0x03807A30 RET
	0x03807A34 LDR V0, [X0 + 0x18]
	0x03807A38 LDR V1, [X0 + 0x20]
	0x03807A3C SCVTF S0, S0
	0x03807A40 SCVTF S1, S1
	0x03807A44 FDIV S0, S0, S1
	0x03807A48 RET
	0x03807A4C LDR W8, [X0 + 0x1C]
	0x03807A50 LDR V0, [X0 + 0x28]
	0x03807A54 SCVTF D1, W8
	0x03807A58 FDIV D0, D0, D1
	0x03807A5C RET
	0x03807A60 LDR W8, [X0 + 0x1C]
	0x03807A64 LDR V0, [X0 + 0x30]
	0x03807A68 SCVTF D1, W8
	0x03807A6C FDIV D0, D0, D1
	0x03807A70 RET
	0x03807A74 STP X30, X21, [X31 - 0x20]!

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0xBDB000
	009 Move X21, 0x944000
	010 Move X20, 0x944000
	011 Move W8, [X22+1087]
	012 Move X21, [X21+904]
	013 Move X20, [X20+912]
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {51}
	019 Move X0, 0x8EE000
	020 Move X0, [X0+3696]
	021 Call 0x1C17CF4
	022 Move X0, 0x944000
	023 Move X0, [X0+920]
	024 Call 0x1C17CF4
	025 Move X0, 0x915000
	026 Move X0, [X0+624]
	027 Call 0x1C17CF4
	028 Move X0, 0x944000
	029 Move X0, [X0+928]
	030 Call 0x1C17CF4
	031 Move X0, 0x944000
	032 Move X0, [X0+936]
	033 Call 0x1C17CF4
	034 Move X0, 0x944000
	035 Move X0, [X0+912]
	036 Call 0x1C17CF4
	037 Move X0, 0x944000
	038 Move X0, [X0+904]
	039 Call 0x1C17CF4
	040 Move X0, 0x944000
	041 Move X0, [X0+784]
	042 Call 0x1C17CF4
	043 Move X0, 0x944000
	044 Move X0, [X0+944]
	045 Call 0x1C17CF4
	046 Move X0, 0x944000
	047 Move X0, [X0+952]
	048 Call 0x1C17CF4
	049 Move W8, 1
	050 Move [X22+1087], W8
	051 Move X0, [X21]
	052 Move [X31+8], X31
	053 Call 0x1C17F10
	054 Move X1, [X20]
	055 Move X20, X0
	056 Call List`1<InputEventPtr>..ctor, X0
	057 Add X2, X31, 8
	058 Move W1, 1
	059 Move X0, X19
	060 Call ReplayController.MoveNext, X0, X1, X2
	061 Move TEMP, X0
	062 And TEMP, TEMP, 1
	063 Compare TEMP, 1
	064 JumpIfNotEqual {97}
	065 Compare X20, 0
	066 JumpIfEqual {183}
	067 Move X21, 0x944000
	068 Move X21, [X21+928]
	069 Move W10, [X20+28]
	070 Move X1, [X31+8]
	071 Move X8, [X20+16]
	072 Move X9, [X21]
	073 Add W10, W10, 1
	074 Move [X20+28], W10
	075 Compare X8, 0
	076 JumpIfEqual {183}
	077 NotImplemented "Instruction LDRSW not yet implemented."
	078 Move W11, [X8+24]
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Add W9, W10, 1
	081 Add X8, X8, X10
	082 Move [X20+24], W9
	083 Move [X8+32], X1
	084 Move X8, [X9+32]
	085 Move X0, X20
	086 Move X8, [X8+192]
	087 Move X2, [X8+112]
	088 Call List`1<InputEventPtr>.AddWithResize, X0, X1
	089 Add X2, X31, 8
	090 Move W1, 1
	091 Move X0, X19
	092 Call ReplayController.MoveNext, X0, X1, X2
	093 Move TEMP, X0
	094 And TEMP, TEMP, 1
	095 Compare TEMP, 1
	096 JumpIfEqual {69}
	097 Move X23, 0x944000
	098 Move X23, [X23+952]
	099 Move X0, [X23]
	100 Move W8, [X0+224]
	101 Compare W8, 0
	102 JumpIfNotEqual {105}
	103 Call 0x1C17DFC
	104 Move X0, [X23]
	105 Move X8, [X0+184]
	106 Move X21, [X8+8]
	107 Compare X21, 0
	108 JumpIfNotEqual {130}
	109 Move W8, [X0+224]
	110 Compare W8, 0
	111 JumpIfNotEqual {114}
	112 Call 0x1C17DFC
	113 Move X0, [X23]
	114 Move X9, 0x944000
	115 Move X8, [X0+184]
	116 Move X9, [X9+920]
	117 Move X22, [X8]
	118 Move X0, [X9]
	119 Call 0x1C17F10
	120 Move X8, 0x944000
	121 Move X8, [X8+944]
	122 Move X1, X22
	123 Move X3, X31
	124 Move X21, X0
	125 Move X2, [X8]
	126 Call Comparison`1<InputEventPtr>..ctor, X0, X1, X2
	127 Move X8, [X23]
	128 Move X8, [X8+184]
	129 Move [X8+8], X21
	130 Compare X20, 0
	131 JumpIfEqual {183}
	132 Move X8, 0x944000
	133 Move X8, [X8+936]
	134 Move X0, X20
	135 Move X1, X21
	136 Move X2, [X8]
	137 Call List`1<InputEventPtr>.Sort, X0, X1
	138 Move X8, [X19+32]
	139 Compare X8, 0
	140 JumpIfEqual {183}
	141 Move X9, 0x8EE000
	142 Move X9, [X9+3696]
	143 Move [X8+16], X31
	144 Move [X8+32], X31
	145 Move X8, 0xBFF00000
	146 Move TEMP, 0
	147 Not TEMP
	148 Move W10, TEMP
	149 Move [X19+32], X31
	150 Move [X19+136], X20
	151 Move [X19+20], W31
	152 Move [X19+16], W31
	153 Move [X19+112], X8
	154 Move [X19+128], W10
	155 Move X0, [X9]
	156 Move X20, 0x944000
	157 Move X21, 0x915000
	158 Move X20, [X20+784]
	159 Move X21, [X21+624]
	160 Call 0x1C17F10
	161 Move X2, [X20]
	162 Move X1, X19
	163 Move X3, X31
	164 Move X20, X0
	165 Call Action..ctor, X0, X1, X2
	166 Move X0, [X21]
	167 Move W8, [X0+224]
	168 Compare W8, 0
	169 JumpIfNotEqual {171}
	170 Call 0x1C17DFC
	171 Move X0, X20
	172 Move X1, X31
	173 Call InputSystem.add_onBeforeUpdate, X0
	174 Move X0, X19
	175 Move X20, [X31+48]
	176 Move X19, [X31+56]
	177 Move X22, [X31+32]
	178 Move X21, [X31+40]
	179 Move X30, [X31+16]
	180 Move X23, [X31+24]
	181 Add X31, X31, 64
	182 Return X0
	183 Call 0x1C17F20

Method: System.Void OnBeginFrame()

Disassembly:
	0x03807A78 STP X20, X19, [X31 + 0x10]
	0x03807A7C ADRP X20, 0xBDA000
	0x03807A80 ADRP X21, 0x93D000
	0x03807A84 LDRB W8, [X20 + 0x44A]
	0x03807A88 LDR X21, [X21 + 0xF90]
	0x03807A8C MOV W19, W0
	0x03807A90 TBNZ X8, 0x0, 0x3807AA8
	0x03807A94 ADRP X0, 0x93D000
	0x03807A98 LDR X0, [X0 + 0xF90]
	0x03807A9C BL 0x1C16CF4
	0x03807AA0 MOVZ W8, 0x1
	0x03807AA4 STRB W8, [X20 + 0x44A]
	0x03807AA8 LDR X8, [X21]
	0x03807AAC CMP W19, 0x10
	0x03807AB0 LDR X8, [X8 + 0xB8]
	0x03807AB4 STR W19, [X8 + 0x4]
	0x03807AB8 B.HI 0x3807AE8
	0x03807ABC MOVZ W9, 0x1
	0x03807AC0 MOVZ W11, 0x6
	0x03807AC4 LSLV W10, W9, W19
	0x03807AC8 MOVK W11, 0x10000
	0x03807ACC ANDS W31, W10, W11, 0x0
	0x03807AD0 B.EQ 0x3807AE8
	0x03807AD4 LDR W10, [X8 + 0xC]
	0x03807AD8 STRB W9, [X8 + 0x8]
	0x03807ADC ADD W9, W10, 0x1
	0x03807AE0 STR W9, [X8 + 0xC]
	0x03807AE4 STR W9, [X8]
	0x03807AE8 LDP X20, X19, [X31 + 0x10]
	0x03807AEC LDP X30, X21, [X31], #0x20
	0x03807AF0 RET
	0x03807AF4 LDR W8, [X0 + 0x4]
	0x03807AF8 MOVZ W9, 0x1
	0x03807AFC STRB W9, [X0]
	0x03807B00 ADD W8, W8, 0x1
	0x03807B04 STR W8, [X0 + 0x4]
	0x03807B08 RET
	0x03807B0C STP X30, X21, [X31 - 0x20]!
	0x03807B10 STP X20, X19, [X31 + 0x10]
	0x03807B14 ADRP X20, 0xBDA000
	0x03807B18 ADRP X21, 0x93D000
	0x03807B1C LDRB W8, [X20 + 0x44B]
	0x03807B20 LDR X21, [X21 + 0xF90]
	0x03807B24 MOV W19, W0
	0x03807B28 TBNZ X8, 0x0, 0x3807B40
	0x03807B2C ADRP X0, 0x93D000
	0x03807B30 LDR X0, [X0 + 0xF90]
	0x03807B34 BL 0x1C16CF4
	0x03807B38 MOVZ W8, 0x1
	0x03807B3C STRB W8, [X20 + 0x44B]
	0x03807B40 LDR X8, [X21]
	0x03807B44 CMP W19, 0x10
	0x03807B48 LDR X8, [X8 + 0xB8]
	0x03807B4C STR W19, [X8 + 0x4]
	0x03807B50 B.HI 0x3807B88
	0x03807B54 MOVZ W9, 0x1
	0x03807B58 MOVZ W10, 0x6
	0x03807B5C LSLV W9, W9, W19
	0x03807B60 MOVK W10, 0x10000
	0x03807B64 ANDS W31, W9, W10, 0x0
	0x03807B68 B.EQ 0x3807B88
	0x03807B6C LDRB W10, [X8 + 0x8]
	0x03807B70 LDR W9, [X8 + 0xC]
	0x03807B74 CBNZ W10, 0x3807B80
	0x03807B78 ADD W9, W9, 0x1
	0x03807B7C STR W9, [X8 + 0xC]
	0x03807B80 STRB W31, [X8 + 0x8]
	0x03807B84 STR W9, [X8]
	0x03807B88 LDP X20, X19, [X31 + 0x10]
	0x03807B8C LDP X30, X21, [X31], #0x20
	0x03807B90 RET
	0x03807B94 LDRB W8, [X0]
	0x03807B98 CBNZ W8, 0x3807BA8
	0x03807B9C LDR W8, [X0 + 0x4]
	0x03807BA0 ADD W8, W8, 0x1
	0x03807BA4 STR W8, [X0 + 0x4]
	0x03807BA8 STRB W31, [X0]
	0x03807BAC RET
	0x03807BB0 SUB X31, X31, 0x30
	0x03807BB4 STR X30, [X31 + 0x10]
	0x03807BB8 STP X20, X19, [X31 + 0x20]
	0x03807BBC ADRP X19, 0xBDA000
	0x03807BC0 ADRP X20, 0x93D000
	0x03807BC4 LDRB W8, [X19 + 0x44C]
	0x03807BC8 LDR X20, [X20 + 0xF90]
	0x03807BCC TBNZ X8, 0x0, 0x3807BE4
	0x03807BD0 ADRP X0, 0x93D000
	0x03807BD4 LDR X0, [X0 + 0xF90]
	0x03807BD8 BL 0x1C16CF4
	0x03807BDC MOVZ W8, 0x1
	0x03807BE0 STRB W8, [X19 + 0x44C]
	0x03807BE4 LDR X8, [X20]
	0x03807BE8 LDP X20, X19, [X31 + 0x20]
	0x03807BEC LDR X30, [X31 + 0x10]
	0x03807BF0 LDR X8, [X8 + 0xB8]
	0x03807BF4 LDR W9, [X8 + 0x4]
	0x03807BF8 STR W9, [X31]
	0x03807BFC LDR X8, [X8 + 0x8]
	0x03807C00 STUR X8, [X31 + 0x4]
	0x03807C04 LDR X0, [X31]
	0x03807C08 UBFM X1, X8, 0x20, 0x3F
	0x03807C0C ADD X31, X31, 0x30
	0x03807C10 RET
	0x03807C14 STR X30, [X31 - 0x30]!
	0x03807C18 STP X22, X21, [X31 + 0x10]
	0x03807C1C STP X20, X19, [X31 + 0x20]
	0x03807C20 ADRP X21, 0xBDA000
	0x03807C24 ADRP X22, 0x93D000
	0x03807C28 LDRB W8, [X21 + 0x44D]
	0x03807C2C LDR X22, [X22 + 0xF90]
	0x03807C30 MOV X19, X1
	0x03807C34 MOV X20, X0
	0x03807C38 TBNZ X8, 0x0, 0x3807C50
	0x03807C3C ADRP X0, 0x93D000
	0x03807C40 LDR X0, [X0 + 0xF90]
	0x03807C44 BL 0x1C16CF4
	0x03807C48 MOVZ W8, 0x1
	0x03807C4C STRB W8, [X21 + 0x44D]
	0x03807C50 LDR X8, [X22]
	0x03807C54 UBFM X10, X20, 0x20, 0x3F
	0x03807C58 LDR X9, [X8 + 0xB8]
	0x03807C5C STP W20, W10, [X9 + 0x4]
	0x03807C60 STR W19, [X9 + 0xC]
	0x03807C64 LDR X8, [X8 + 0xB8]
	0x03807C68 MOV W9, W31
	0x03807C6C LDR W10, [X8 + 0x4]
	0x03807C70 CMP W10, 0x10
	0x03807C74 B.HI 0x3807C94
	0x03807C78 MOVZ W11, 0x1
	0x03807C7C LSLV W10, W11, W10
	0x03807C80 MOVZ W11, 0x6
	0x03807C84 MOVK W11, 0x10000
	0x03807C88 ANDS W31, W10, W11, 0x0
	0x03807C8C B.EQ 0x3807C94
	0x03807C90 LDR W9, [X8 + 0xC]
	0x03807C94 LDP X20, X19, [X31 + 0x20]
	0x03807C98 LDP X22, X21, [X31 + 0x10]
	0x03807C9C STR W9, [X8]
	0x03807CA0 LDR X30, [X31], #0x30
	0x03807CA4 RET

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+40], X23
	004 Move [X31+48], X22
	005 Move [X31+56], X21
	006 Move [X31+64], X20
	007 Move [X31+72], X19
	008 Move X20, 0xBDB000
	009 Move W8, [X20+1088]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x944000
	016 Move X0, [X0+568]
	017 Call 0x1C17CF4
	018 Move X0, 0x944000
	019 Move X0, [X0+888]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+1088], W8
	023 Move [X31+8], X31
	024 Move [X31+16], X31
	025 Move [X31], X31
	026 Move W8, [X19+17]
	027 Compare W8, 0
	028 JumpIfNotEqual {124}
	029 Add X2, X31, 16
	030 Move X0, X19
	031 Move W1, W31
	032 Call ReplayController.MoveNext, X0, X1, X2
	033 Move TEMP, X0
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfNotEqual {116}
	037 Move X21, [X31+16]
	038 Compare X21, 0
	039 JumpIfEqual {41}
	040 Move W20, [X21]
	041 Move W20, W31
	042 Move X22, 0x944000
	043 Move X22, [X22+568]
	044 Move X0, [X22]
	045 Move W8, [X0+224]
	046 Compare W8, 0
	047 JumpIfNotEqual {49}
	048 Call 0x1C17DFC
	049 Add X0, X31, 24
	050 Move W1, 70
	051 Move W2, 82
	052 Move W3, 77
	053 Move W4, 69
	054 Move X5, X31
	055 Move [X31+24], W31
	056 Call FourCC..ctor, X0, X1, X2, X3, X4
	057 Move W8, [X31+24]
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Add X2, X31, 8
	060 Move X0, X19
	061 Move W1, W31
	062 Call ReplayController.MoveNext, X0, X1, X2
	063 Move TEMP, X0
	064 And TEMP, TEMP, 1
	065 Compare TEMP, 1
	066 JumpIfNotEqual {122}
	067 Move X20, [X31+8]
	068 Compare X20, 0
	069 JumpIfEqual {140}
	070 Move W23, [X20]
	071 Move X20, X21
	072 Move X0, X19
	073 Move X1, X20
	074 Call ReplayController.QueueEvent, X0, X1
	075 Add X2, X31, 0
	076 Move X0, X19
	077 Move W1, W31
	078 Call ReplayController.MoveNext, X0, X1, X2
	079 Move TEMP, X0
	080 And TEMP, TEMP, 1
	081 Compare TEMP, 1
	082 JumpIfNotEqual {116}
	083 Move X21, [X31]
	084 Compare X21, 0
	085 JumpIfEqual {87}
	086 Move W23, [X21]
	087 Move W23, W31
	088 Move X0, [X22]
	089 Move W8, [X0+224]
	090 Compare W8, 0
	091 JumpIfNotEqual {93}
	092 Call 0x1C17DFC
	093 Add X0, X31, 24
	094 Move W1, 70
	095 Move W2, 82
	096 Move W3, 77
	097 Move W4, 69
	098 Move X5, X31
	099 Move [X31+24], W31
	100 Call FourCC..ctor, X0, X1, X2, X3, X4
	101 Move W8, [X31+24]
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Move X0, X19
	104 Move X1, X21
	105 Call ReplayController.QueueEvent, X0, X1
	106 Add X2, X31, 0
	107 Move X0, X19
	108 Move W1, W31
	109 Call ReplayController.MoveNext, X0, X1, X2
	110 Move X20, X21
	111 Move TEMP, X0
	112 And TEMP, TEMP, 1
	113 Compare TEMP, 1
	114 JumpIfEqual {83}
	115 Move [X31+16], X21
	116 Move X8, [X19+136]
	117 Compare X8, 0
	118 JumpIfEqual {122}
	119 Move W9, [X19+128]
	120 Move W8, [X8+24]
	121 NotImplemented "Instruction CMP not yet implemented."
	122 Move X0, X19
	123 Call ReplayController.Finished, X0
	124 Move X20, [X31+64]
	125 Move X19, [X31+72]
	126 Move X22, [X31+48]
	127 Move X21, [X31+56]
	128 Move X30, [X31+32]
	129 Move X23, [X31+40]
	130 Add X31, X31, 80
	131 Return 
	132 Move [X31+16], X20
	133 Move X8, [X19+32]
	134 Compare X8, 0
	135 JumpIfEqual {163}
	136 Move [X8+32], X20
	137 Move W8, [X19+20]
	138 Subtract W8, W8, 1
	139 Move [X19+20], W8
	140 Move W23, W31
	141 Move X0, [X22]
	142 Move W8, [X0+224]
	143 Compare W8, 0
	144 JumpIfNotEqual {146}
	145 Call 0x1C17DFC
	146 Add X0, X31, 24
	147 Move W1, 70
	148 Move W2, 82
	149 Move W3, 77
	150 Move W4, 69
	151 Move X5, X31
	152 Move [X31+24], W31
	153 Call FourCC..ctor, X0, X1, X2, X3, X4
	154 Move W8, [X31+24]
	155 NotImplemented "Instruction CMP not yet implemented."
	156 Move W9, [X19+20]
	157 Move X8, [X19+32]
	158 Subtract W9, W9, 1
	159 Move [X19+20], W9
	160 Compare X8, 0
	161 JumpIfEqual {163}
	162 Move [X8+32], X21
	163 Call 0x1C17F20

Method: System.Void Finished()

Disassembly:
	0x03807CA8 TBNZ X0, 0x4, 0x3807CB8
	0x03807CAC TBNZ X0, 0x0, 0x3807CC0
	0x03807CB0 AND W0, W0, 0x2
	0x03807CB4 RET
	0x03807CB8 MOVZ W0, 0x10
	0x03807CBC RET
	0x03807CC0 MOVZ W0, 0x1
	0x03807CC4 RET
	0x03807CC8 ANDS W31, W0, 0xFFFFFFF7
	0x03807CCC CSET W0, NE
	0x03807CD0 RET
	0x03807CD4 LDR W0, [X0 + 0x4]
	0x03807CD8 RET
	0x03807CDC STR W1, [X0 + 0x4]
	0x03807CE0 RET
	0x03807CE4 STR X30, [X31 - 0x20]!
	0x03807CE8 STP X20, X19, [X31 + 0x10]
	0x03807CEC ADRP X19, 0xBDA000
	0x03807CF0 ADRP X20, 0x943000
	0x03807CF4 LDRB W8, [X19 + 0x44E]
	0x03807CF8 LDR X20, [X20 + 0x420]
	0x03807CFC TBNZ X8, 0x0, 0x3807D14
	0x03807D00 ADRP X0, 0x943000
	0x03807D04 LDR X0, [X0 + 0x420]
	0x03807D08 BL 0x1C16CF4
	0x03807D0C MOVZ W8, 0x1
	0x03807D10 STRB W8, [X19 + 0x44E]
	0x03807D14 LDR X0, [X20]
	0x03807D18 LDR W8, [X0 + 0xE0]
	0x03807D1C CBNZ W8, 0x3807D24
	0x03807D20 BL 0x1C16DFC
	0x03807D24 LDP X20, X19, [X31 + 0x10]
	0x03807D28 MOV X0, X31
	0x03807D2C LDR X30, [X31], #0x20
	0x03807D30 B 0x3C86A54
	0x03807D34 STP X30, X21, [X31 - 0x20]!
	0x03807D38 STP X20, X19, [X31 + 0x10]
	0x03807D3C ADRP X20, 0xBDA000
	0x03807D40 ADRP X21, 0x943000
	0x03807D44 LDRB W8, [X20 + 0x44F]
	0x03807D48 LDR X21, [X21 + 0x420]
	0x03807D4C MOV W19, W1
	0x03807D50 TBNZ X8, 0x0, 0x3807D68
	0x03807D54 ADRP X0, 0x943000
	0x03807D58 LDR X0, [X0 + 0x420]
	0x03807D5C BL 0x1C16CF4
	0x03807D60 MOVZ W8, 0x1
	0x03807D64 STRB W8, [X20 + 0x44F]
	0x03807D68 LDR X0, [X21]
	0x03807D6C LDR W8, [X0 + 0xE0]
	0x03807D70 CBNZ W8, 0x3807D78
	0x03807D74 BL 0x1C16DFC
	0x03807D78 MOV W0, W19

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0xBDB000
	008 Move X22, 0x8EE000
	009 Move X20, 0x944000
	010 Move X21, 0x915000
	011 Move W8, [X23+1089]
	012 Move X22, [X22+3696]
	013 Move X20, [X20+784]
	014 Move X21, [X21+624]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {31}
	020 Move X0, 0x8EE000
	021 Move X0, [X0+3696]
	022 Call 0x1C17CF4
	023 Move X0, 0x915000
	024 Move X0, [X0+624]
	025 Call 0x1C17CF4
	026 Move X0, 0x944000
	027 Move X0, [X0+784]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X23+1089], W8
	031 Move W8, 1
	032 Move [X19+16], W8
	033 Move X0, [X22]
	034 Call 0x1C17F10
	035 Move X2, [X20]
	036 Move X1, X19
	037 Move X3, X31
	038 Move X20, X0
	039 Call Action..ctor, X0, X1, X2
	040 Move X0, [X21]
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Move X0, X20
	046 Move X1, X31
	047 Call InputSystem.remove_onBeforeUpdate, X0
	048 Move X8, [X19+96]
	049 Compare X8, 0
	050 JumpIfEqual {61}
	051 Move X2, [X8+24]
	052 Move X0, [X8+64]
	053 Move X1, [X8+40]
	054 Move X20, [X31+32]
	055 Move X19, [X31+40]
	056 Move X22, [X31+16]
	057 Move X21, [X31+24]
	058 Move X30, [X31+48]
	059 Move X23, [X31+56]
	060 CallNoReturn X2
	061 Move X20, [X31+32]
	062 Move X19, [X31+40]
	063 Move X22, [X31+16]
	064 Move X21, [X31+24]
	065 Move X30, [X31+48]
	066 Move X23, [X31+56]
	067 Return 

Method: System.Void QueueEvent(UnityEngine.InputSystem.LowLevel.InputEventPtr eventPtr)

Disassembly:
	0x0380744C MOV X26, X0
	0x03807450 LDRH W9, [X8 + 0x12E]
	0x03807454 LDR X1, [X10]
	0x03807458 CBZ X9, 0x380747C
	0x0380745C LDR X10, [X8 + 0xB0]
	0x03807460 ADD X10, X10, 0x8
	0x03807464 LDUR X11, [X10 - 0x8]
	0x03807468 CMP X11, X1
	0x0380746C B.EQ 0x380748C
	0x03807470 SUBS X9, X9, 0x1
	0x03807474 ADD X10, X10, 0x10
	0x03807478 B.NE 0x3807464
	0x0380747C MOVZ W2, 0x13
	0x03807480 MOV X0, X27
	0x03807484 BL 0x1C5C788
	0x03807488 B 0x380749C
	0x0380748C LDR W9, [X10]
	0x03807490 ADD W9, W9, 0x13
	0x03807494 ADD X8, X8, W9, 0x4, SXTW
	0x03807498 ADD X0, X8, 0x138
	0x0380749C LDP X8, X1, [X0]
	0x038074A0 MOV X0, X27
	0x038074A4 BLR X8
	0x038074A8 MOVZ W1, 0x4154
	0x038074AC ADD X0, X31, 0x20
	0x038074B0 MOVK W1, 0x53540000
	0x038074B4 MOV W2, W25
	0x038074B8 MOV W3, W21
	0x038074BC STP X31, X31, [X31 + 0x20]
	0x038074C0 STR W31, [X31 + 0x30]
	0x038074C4 BL 0x3800BC8
	0x038074C8 CBZ X26, 0x3807530
	0x038074CC LDR V0, [X31 + 0x2]
	0x038074D0 LDR W8, [X31 + 0x30]
	0x038074D4 ADD X1, X22, X19
	0x038074D8 ADD X0, X26, 0x18
	0x038074DC MOV W2, W20
	0x038074E0 MOV X3, X31
	0x038074E4 STR V0, [X26]
	0x038074E8 STP W8, W29, [X26 + 0x10]
	0x038074EC BL 0x3BFF954
	0x038074F0 LDR X8, [X31 + 0x8]
	0x038074F4 STR X26, [X8]
	0x038074F8 LDR X8, [X28 + 0x28]
	0x038074FC LDR X9, [X31 + 0x38]
	0x03807500 CMP X8, X9
	0x03807504 B.NE 0x38075E4
	0x03807508 MOV X0, X23
	0x0380750C MOV X1, X24
	0x03807510 LDP X20, X19, [X31 + 0x90]
	0x03807514 LDP X22, X21, [X31 + 0x80]
	0x03807518 LDP X24, X23, [X31 + 0x70]
	0x0380751C LDP X26, X25, [X31 + 0x60]
	0x03807520 LDP X28, X27, [X31 + 0x50]
	0x03807524 LDP X29, X30, [X31 + 0x40]
	0x03807528 ADD X31, X31, 0xA0
	0x0380752C RET
	0x03807530 BL 0x1C16F20
	0x03807534 ADRP X0, 0x8F1000
	0x03807538 LDR X0, [X0 + 0x528]
	0x0380753C BL 0x1C16D08
	0x03807540 BL 0x1C16F10
	0x03807544 MOV X19, X0
	0x03807548 ADRP X0, 0x914000
	0x0380754C LDR X0, [X0 + 0xD20]
	0x03807550 BL 0x1C16D08
	0x03807554 MOV X1, X0
	0x03807558 MOV X0, X19
	0x0380755C MOV X2, X31
	0x03807560 BL 0x330E100
	0x03807564 ADRP X0, 0x943000
	0x03807568 LDR X0, [X0 + 0x3F8]
	0x0380756C BL 0x1C16D08
	0x03807570 MOV X1, X0
	0x03807574 MOV X0, X19
	0x03807578 BL 0x1C16DEC
	0x0380757C ADRP X0, 0x943000
	0x03807580 LDR X0, [X0 + 0x400]
	0x03807584 BL 0x1C16D08
	0x03807588 MOV X1, X21
	0x0380758C MOV X2, X31
	0x03807590 BL 0x321EFD0
	0x03807594 MOV X19, X0
	0x03807598 ADRP X0, 0x8F4000
	0x0380759C LDR X0, [X0 + 0x578]
	0x038075A0 BL 0x1C16D08
	0x038075A4 BL 0x1C16F10
	0x038075A8 MOV X20, X0
	0x038075AC ADRP X0, 0x914000
	0x038075B0 LDR X0, [X0 + 0xD20]
	0x038075B4 BL 0x1C16D08
	0x038075B8 MOV X2, X0
	0x038075BC MOV X0, X20
	0x038075C0 MOV X1, X19
	0x038075C4 MOV X3, X31
	0x038075C8 BL 0x330E16C
	0x038075CC ADRP X0, 0x943000
	0x038075D0 LDR X0, [X0 + 0x3F8]
	0x038075D4 BL 0x1C16D08
	0x038075D8 MOV X1, X0
	0x038075DC MOV X0, X20
	0x038075E0 BL 0x1C16DEC
	0x038075E4 BL 0x3EB1B20
	0x038075E8 MOVZ W3, 0x1
	0x038075EC B 0x38072B8
	0x038075F0 MOVZ W0, 0x5854
	0x038075F4 MOVK W0, 0x54450000
	0x038075F8 RET
	0x038075FC SUB X31, X31, 0x30
	0x03807600 STP X30, X0, [X31 + 0x10]
	0x03807604 STP X20, X19, [X31 + 0x20]
	0x03807608 ADRP X20, 0xBDA000
	0x0380760C LDRB W8, [X20 + 0x448]
	0x03807610 MOV X19, X0
	0x03807614 TBNZ X8, 0x0, 0x380762C
	0x03807618 ADRP X0, 0x943000
	0x0380761C LDR X0, [X0 + 0x408]
	0x03807620 BL 0x1C16CF4
	0x03807624 MOVZ W8, 0x1
	0x03807628 STRB W8, [X20 + 0x448]
	0x0380762C CBZ X19, 0x3807660
	0x03807630 ADRP X8, 0x943000
	0x03807634 LDR X8, [X8 + 0x408]
	0x03807638 ADD X0, X31, 0x18
	0x0380763C LDR X1, [X8]
	0x03807640 BL 0x22080DC
	0x03807644 LDR X8, [X31 + 0x18]
	0x03807648 TBZ X0, 0x0, 0x38076A8
	0x0380764C LDP X20, X19, [X31 + 0x20]
	0x03807650 LDR X30, [X31 + 0x10]
	0x03807654 MOV X0, X8
	0x03807658 ADD X31, X31, 0x30
	0x0380765C RET
	0x03807660 ADRP X0, 0x8F1000
	0x03807664 LDR X0, [X0 + 0x528]
	0x03807668 BL 0x1C16D08
	0x0380766C BL 0x1C16F10
	0x03807670 MOV X19, X0
	0x03807674 ADRP X0, 0x914000

ISIL:
	001 Move [X31-64], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0xBDB000
	009 Move W8, [X21+1090]
	010 Move X19, X1
	011 Move X20, X0
	012 Move [X31+8], X1
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {28}
	017 Move X0, 0x915000
	018 Move X0, [X0+3792]
	019 Call 0x1C17CF4
	020 Move X0, 0x915000
	021 Move X0, [X0+3784]
	022 Call 0x1C17CF4
	023 Move X0, 0x915000
	024 Move X0, [X0+624]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X21+1090], W8
	028 Compare X19, 0
	029 JumpIfEqual {38}
	030 Move X8, [X20+136]
	031 Move V8, [X19+8]
	032 Compare X8, 0
	033 JumpIfEqual {42}
	034 Move D0, [X20+112]
	035 Move D1, [X20+120]
	036 Subtract D0, D8, D0
	037 Add D0, D1, D0
	038 Move X8, [X20+136]
	039 Move D8, X31
	040 Compare X8, 0
	041 JumpIfNotEqual {34}
	042 Move X8, 0x915000
	043 Move X8, [X8+3784]
	044 Move X8, [X8]
	045 Move X8, [X8+184]
	046 Move X21, [X8]
	047 Compare X21, 0
	048 JumpIfEqual {128}
	049 Move X10, 0x915000
	050 Move X8, [X21]
	051 Move X10, [X10+3792]
	052 NotImplemented "Instruction LDRH not yet implemented."
	053 Move X1, [X10]
	054 Compare X9, 0
	055 JumpIfEqual {62}
	056 Move X10, [X8+176]
	057 Add X10, X10, 8
	058 NotImplemented "Instruction LDUR not yet implemented."
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Subtract X9, X9, 1
	061 Add X10, X10, 16
	062 Move W2, 19
	063 Move X0, X21
	064 Call 0x1C5D788
	065 Move W9, [X10]
	066 Add W9, W9, 19
	067 Add X8, X8, W9
	068 Add X0, X8, 312
	069 Move X8, [X0]
	070 Move X1, [X0+8]
	071 Move X0, X21
	072 NotImplemented "Instruction BLR not yet implemented."
	073 Add X0, X31, 8
	074 Call InputEventPtr.set_internalTime, X0, V0
	075 Compare X19, 0
	076 JumpIfEqual {80}
	077 Move W8, [X19+16]
	078 NotImplemented "Instruction LDRH not yet implemented."
	079 And W22, W8, 0x7FFFFFFF
	080 Move W22, W31
	081 Move W21, W31
	082 Move X23, 0x915000
	083 Move X23, [X23+624]
	084 Move X0, X20
	085 Move W1, W21
	086 Call ReplayController.ApplyDeviceMapping, X0, X1
	087 Move W1, W0
	088 Add X0, X31, 8
	089 Call InputEventPtr.set_deviceId, X0, X1
	090 Move X8, [X20+104]
	091 Compare X8, 0
	092 JumpIfEqual {98}
	093 Move X9, [X8+24]
	094 Move X0, [X8+64]
	095 Move X2, [X8+40]
	096 Move X1, X19
	097 NotImplemented "Instruction BLR not yet implemented."
	098 Move X0, [X23]
	099 Move W8, [X0+224]
	100 Compare W8, 0
	101 JumpIfNotEqual {103}
	102 Call 0x1C17DFC
	103 Move X0, X19
	104 Move X1, X31
	105 Call InputSystem.QueueEvent, X0
	106 Move X19, X31
	107 Add X0, X31, 8
	108 Move V0, V8
	109 Call InputEventPtr.set_internalTime, X0, V0
	110 Add X0, X31, 8
	111 Move W1, W22
	112 Call InputEventPtr.set_id, X0, X1
	113 Add X0, X31, 8
	114 Move W1, W21
	115 Call InputEventPtr.set_deviceId, X0, X1
	116 Compare X19, 0
	117 JumpIfNotEqual {126}
	118 Move X20, [X31+48]
	119 Move X19, [X31+56]
	120 Move X22, [X31+32]
	121 Move X21, [X31+40]
	122 Move X30, [X31+16]
	123 Move X23, [X31+24]
	124 Move V8, [X31+64]
	125 Return 
	126 Move X0, X19
	127 Call 0x1C17F18
	128 Call 0x1C17F20
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Move X20, X0
	131 Move X0, X20
	132 Call 0x3EB2AD0
	133 Move X19, [X0]
	134 Call 0x3EB2AE0
	135 Move X19, X31
	136 Move X20, X0
	137 Add X0, X31, 8
	138 Move V0, V8
	139 Call InputEventPtr.set_internalTime, X0, V0
	140 Add X0, X31, 8
	141 Move W1, W22
	142 Call InputEventPtr.set_id, X0, X1
	143 Add X0, X31, 8
	144 Move W1, W21
	145 Call InputEventPtr.set_deviceId, X0, X1
	146 Compare X19, 0
	147 JumpIfNotEqual {150}
	148 Move X0, X20
	149 Call 0x1D2D690
	150 Move X0, X19
	151 Call 0x1C17F18
	152 Call 0x1991590

Method: System.Boolean MoveNext(System.Boolean skipFrameEvents, out UnityEngine.InputSystem.LowLevel.InputEventPtr eventPtr)

Disassembly:
	0x03807118 B 0x33BDD8C
	0x0380711C STR X30, [X31 - 0x20]!
	0x03807120 STP X20, X19, [X31 + 0x10]
	0x03807124 ADRP X19, 0xBDA000
	0x03807128 ADRP X20, 0x943000
	0x0380712C LDRB W8, [X19 + 0x445]
	0x03807130 LDR X20, [X20 + 0x3B8]
	0x03807134 TBNZ X8, 0x0, 0x380714C
	0x03807138 ADRP X0, 0x943000
	0x0380713C LDR X0, [X0 + 0x3B8]
	0x03807140 BL 0x1C16CF4
	0x03807144 MOVZ W8, 0x1
	0x03807148 STRB W8, [X19 + 0x445]
	0x0380714C LDR X0, [X20]
	0x03807150 BL 0x1C16F10
	0x03807154 MOV X1, X31
	0x03807158 MOV X19, X0
	0x0380715C BL 0x33BDD8C
	0x03807160 LDR X8, [X20]
	0x03807164 LDR X8, [X8 + 0xB8]
	0x03807168 STR X19, [X8]
	0x0380716C LDP X20, X19, [X31 + 0x10]
	0x03807170 LDR X30, [X31], #0x20
	0x03807174 RET
	0x03807178 MOV X1, X31
	0x0380717C B 0x33BDD8C
	0x03807180 SUB X31, X31, 0x40
	0x03807184 STR D8, [X31 + 0x10]
	0x03807188 STR X30, [X31 + 0x18]
	0x0380718C STP X22, X21, [X31 + 0x20]
	0x03807190 STP X20, X19, [X31 + 0x30]
	0x03807194 ADRP X21, 0x914000
	0x03807198 LDR X21, [X21 + 0xEC8]
	0x0380719C MOV X19, X2
	0x038071A0 FMOV D8, X31
	0x038071A4 ADRP X22, 0xBDA000
	0x038071A8 FMOV D0, X31
	0x038071AC CBZ X1, 0x38071E4
	0x038071B0 LDRB W8, [X22 + 0x40B]
	0x038071B4 MOV X20, X1
	0x038071B8 TBNZ X8, 0x0, 0x38071D0
	0x038071BC ADRP X0, 0x914000
	0x038071C0 LDR X0, [X0 + 0xEC8]
	0x038071C4 BL 0x1C16CF4
	0x038071C8 MOVZ W8, 0x1
	0x038071CC STRB W8, [X22 + 0x40B]
	0x038071D0 LDR X8, [X21]
	0x038071D4 LDR V0, [X20 + 0x8]
	0x038071D8 LDR X8, [X8 + 0xB8]
	0x038071DC LDR V1, [X8 + 0x8]
	0x038071E0 FSUB D0, D0, D1
	0x038071E4 STR D0, [X31 + 0x8]
	0x038071E8 CBZ X19, 0x380721C
	0x038071EC LDRB W8, [X22 + 0x40B]
	0x038071F0 TBNZ X8, 0x0, 0x3807208
	0x038071F4 ADRP X0, 0x914000
	0x038071F8 LDR X0, [X0 + 0xEC8]
	0x038071FC BL 0x1C16CF4
	0x03807200 MOVZ W8, 0x1
	0x03807204 STRB W8, [X22 + 0x40B]
	0x03807208 LDR X8, [X21]
	0x0380720C LDR V0, [X19 + 0x8]
	0x03807210 LDR X8, [X8 + 0xB8]
	0x03807214 LDR V1, [X8 + 0x8]
	0x03807218 FSUB D8, D0, D1
	0x0380721C ADD X0, X31, 0x8
	0x03807220 MOV V0.16B, V8.16B
	0x03807224 MOV X1, X31
	0x03807228 BL 0x3366068
	0x0380722C LDP X20, X19, [X31 + 0x30]
	0x03807230 LDP X22, X21, [X31 + 0x20]
	0x03807234 LDR X30, [X31 + 0x18]
	0x03807238 LDR V8, [X31 + 0x10]
	0x0380723C ADD X31, X31, 0x40
	0x03807240 RET
	0x03807244 LDR W8, [X1]
	0x03807248 LDR W9, [X0 + 0x10]
	0x0380724C CMP W8, W9
	0x03807250 CSET W0, EQ
	0x03807254 RET
	0x03807258 LDR W0, [X0]
	0x0380725C RET
	0x03807260 STR W1, [X0]
	0x03807264 RET
	0x03807268 LDR X0, [X0 + 0x8]
	0x0380726C RET
	0x03807270 STR X1, [X0 + 0x8]
	0x03807274 RET
	0x03807278 LDR W0, [X0 + 0x10]
	0x0380727C RET
	0x03807280 STR W1, [X0 + 0x10]
	0x03807284 RET
	0x03807288 LDR W0, [X0 + 0x14]
	0x0380728C RET
	0x03807290 STR W1, [X0 + 0x14]
	0x03807294 RET
	0x03807298 ADD X0, X0, 0x18
	0x0380729C RET
	0x038072A0 RET
	0x038072A4 MOVZ W0, 0x4154
	0x038072A8 MOVK W0, 0x53540000
	0x038072AC RET
	0x038072B0 MOV W3, W31
	0x038072B4 B 0x38072B8
	0x038072B8 SUB X31, X31, 0xA0
	0x038072BC STP X29, X30, [X31 + 0x40]
	0x038072C0 STP X28, X27, [X31 + 0x50]
	0x038072C4 STP X26, X25, [X31 + 0x60]
	0x038072C8 STP X24, X23, [X31 + 0x70]
	0x038072CC STP X22, X21, [X31 + 0x80]
	0x038072D0 STP X20, X19, [X31 + 0x90]
	0x038072D4 MRS X28, 0xC000
	0x038072D8 LDR X8, [X28 + 0x28]
	0x038072DC ADRP X19, 0xBDA000
	0x038072E0 MOV W22, W3
	0x038072E4 MOV W23, W2
	0x038072E8 STR X8, [X31 + 0x38]
	0x038072EC LDRB W8, [X19 + 0x447]
	0x038072F0 MOV X20, X1
	0x038072F4 MOV X21, X0
	0x038072F8 TBNZ X8, 0x0, 0x3807340
	0x038072FC ADRP X0, 0x914000
	0x03807300 LDR X0, [X0 + 0xED0]
	0x03807304 BL 0x1C16CF4
	0x03807308 ADRP X0, 0x914000
	0x0380730C LDR X0, [X0 + 0xEC8]
	0x03807310 BL 0x1C16CF4
	0x03807314 ADRP X0, 0x914000
	0x03807318 LDR X0, [X0 + 0xD18]
	0x0380731C BL 0x1C16CF4
	0x03807320 ADRP X0, 0x940000
	0x03807324 LDR X0, [X0 + 0xFE8]
	0x03807328 BL 0x1C16CF4
	0x0380732C ADRP X0, 0x940000
	0x03807330 LDR X0, [X0 + 0xFE0]
	0x03807334 BL 0x1C16CF4
	0x03807338 MOVZ W8, 0x1
	0x0380733C STRB W8, [X19 + 0x447]
	0x03807340 CBZ X21, 0x3807534
	0x03807344 MOV X0, X21
	0x03807348 MOV X1, X31
	0x0380734C BL 0x376EE00
	0x03807350 TBZ X0, 0x0, 0x380757C
	0x03807354 STR X20, [X31 + 0x8]
	0x03807358 ADRP X8, 0x914000
	0x0380735C LDR X8, [X8 + 0xD18]
	0x03807360 ADD X20, X21, 0x10
	0x03807364 LDR X0, [X8]
	0x03807368 LDR W8, [X0 + 0xE0]
	0x0380736C CBNZ W8, 0x3807374
	0x03807370 BL 0x1C16DFC
	0x03807374 ADRP X24, 0x940000
	0x03807378 ADRP X27, 0x940000
	0x0380737C ADRP X26, 0x914000
	0x03807380 LDR W29, [X21 + 0x10]
	0x03807384 LDR X24, [X24 + 0xFE0]
	0x03807388 LDR X27, [X27 + 0xFE8]
	0x0380738C LDR X26, [X26 + 0xEC8]
	0x03807390 MOV X0, X20
	0x03807394 BL 0x3800B6C
	0x03807398 LDRSW X19, [X21 + 0x14]
	0x0380739C MOV W20, W0
	0x038073A0 TBZ X22, 0x0, 0x38073DC
	0x038073A4 ADRP X22, 0xBD4000
	0x038073A8 LDRB W8, [X22 + 0xA03]
	0x038073AC CBNZ W8, 0x38073C4
	0x038073B0 ADRP X0, 0x917000
	0x038073B4 LDR X0, [X0 + 0xFE8]
	0x038073B8 BL 0x1C16CF4
	0x038073BC MOVZ W8, 0x1
	0x038073C0 STRB W8, [X22 + 0xA03]
	0x038073C4 ADRP X8, 0x917000
	0x038073C8 LDR X8, [X8 + 0xFE8]
	0x038073CC LDR X8, [X8]
	0x038073D0 LDR X8, [X8 + 0xB8]
	0x038073D4 LDR X22, [X8]
	0x038073D8 B 0x38073EC
	0x038073DC MOV X0, X21
	0x038073E0 MOV X1, X31
	0x038073E4 BL 0x3772640
	0x038073E8 MOV X22, X0
	0x038073EC LDR X4, [X24]
	0x038073F0 ADD W8, W20, 0x1C
	0x038073F4 ADD W25, W20, 0x18
	0x038073F8 ANDS W31, W20, 0x3
	0x038073FC AND W8, W8, 0xFFFFFFFC
	0x03807400 CSEL W1, W25, W8, EQ
	0x03807404 ADD X0, X31, 0x10
	0x03807408 MOVZ W3, 0x1
	0x0380740C MOV W2, W23
	0x03807410 STP X31, X31, [X31 + 0x10]
	0x03807414 BL 0x23C9B94
	0x03807418 LDP X23, X24, [X31 + 0x10]
	0x0380741C LDR X2, [X27]
	0x03807420 MOV X0, X23
	0x03807424 MOV X1, X24
	0x03807428 BL 0x2222688
	0x0380742C LDR X8, [X26]
	0x03807430 LDR X8, [X8 + 0xB8]
	0x03807434 LDR X27, [X8]
	0x03807438 CBZ X27, 0x3807530
	0x0380743C ADRP X10, 0x914000
	0x03807440 LDR X8, [X27]
	0x03807444 LDR X10, [X10 + 0xED0]
	0x03807448 LDR W21, [X21 + 0xE0]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], D9
	003 Move [X31+24], D8
	004 Move [X31+32], X30
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X22, 0xBDB000
	011 Move W8, [X22+1091]
	012 Move X19, X2
	013 Move W21, W1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {39}
	019 Move X0, 0x944000
	020 Move X0, [X0+592]
	021 Call 0x1C17CF4
	022 Move X0, 0x915000
	023 Move X0, [X0+3792]
	024 Call 0x1C17CF4
	025 Move X0, 0x944000
	026 Move X0, [X0+568]
	027 Call 0x1C17CF4
	028 Move X0, 0x915000
	029 Move X0, [X0+3784]
	030 Call 0x1C17CF4
	031 Move X0, 0x944000
	032 Move X0, [X0+888]
	033 Call 0x1C17CF4
	034 Move X0, 0x944000
	035 Move X0, [X0+896]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X22+1091], W8
	039 Move [X19], X31
	040 Move X0, [X20+136]
	041 Compare X0, 0
	042 JumpIfEqual {60}
	043 Move W9, [X20+128]
	044 Move W8, [X0+24]
	045 Add W1, W9, 1
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move TEMP, X9
	048 And TEMP, TEMP, -2147483648
	049 Compare TEMP, -2147483648
	050 JumpIfEqual {119}
	051 Subtract W8, W8, 1
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move X8, 0x944000
	054 Move X8, [X8+896]
	055 Move X2, [X8]
	056 Call List`1<InputEventPtr>.get_Item, X0, X1
	057 Compare X0, 0
	058 JumpIfEqual {161}
	059 Move V8, [X0+8]
	060 Move X22, [X20+32]
	061 Compare X22, 0
	062 JumpIfNotEqual {72}
	063 Move X8, 0x944000
	064 Move X23, [X20+24]
	065 Move X8, [X8+592]
	066 Move X0, [X8]
	067 Call 0x1C17F10
	068 Move X1, X23
	069 Move X22, X0
	070 Call Enumerator..ctor, X0, X1
	071 Move [X20+32], X22
	072 Compare X22, 0
	073 JumpIfEqual {224}
	074 Move X23, 0x944000
	075 Move X23, [X23+568]
	076 Move X0, X22
	077 Call Enumerator.MoveNext, X0
	078 Move TEMP, X0
	079 And TEMP, TEMP, 1
	080 Compare TEMP, 1
	081 JumpIfNotEqual {213}
	082 Move W9, [X20+20]
	083 Move X8, [X20+32]
	084 Add W9, W9, 1
	085 Move [X20+20], W9
	086 Compare X8, 0
	087 JumpIfEqual {224}
	088 Move X8, [X8+32]
	089 Move [X19], X8
	090 Move TEMP, X21
	091 And TEMP, TEMP, 1
	092 Compare TEMP, 1
	093 JumpIfNotEqual {212}
	094 Compare X8, 0
	095 JumpIfEqual {97}
	096 Move W22, [X8]
	097 Move W22, W31
	098 Move X0, [X23]
	099 Move W8, [X0+224]
	100 Compare W8, 0
	101 JumpIfNotEqual {103}
	102 Call 0x1C17DFC
	103 Add X0, X31, 8
	104 Move W1, 70
	105 Move W2, 82
	106 Move W3, 77
	107 Move W4, 69
	108 Move X5, X31
	109 Move [X31+8], W31
	110 Call FourCC..ctor, X0, X1, X2, X3, X4
	111 Move W8, [X31+8]
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Move X22, [X20+32]
	114 Compare X22, 0
	115 JumpIfNotEqual {76}
	116 Move W0, W31
	117 Move [X20+20], W8
	118 Move [X20+128], W8
	119 Move X8, 0x944000
	120 Move X8, [X8+896]
	121 Move W1, W31
	122 Move X2, [X8]
	123 Call List`1<InputEventPtr>.get_Item, X0, X1
	124 Compare X0, 0
	125 JumpIfEqual {127}
	126 Move V0, [X0+8]
	127 Move D0, X31
	128 Move [X20+112], D0
	129 Move X8, 0x915000
	130 Move X8, [X8+3784]
	131 Move X8, [X8]
	132 Move X8, [X8+184]
	133 Move X21, [X8]
	134 Compare X21, 0
	135 JumpIfEqual {224}
	136 Move X10, 0x915000
	137 Move X8, [X21]
	138 Move X10, [X10+3792]
	139 NotImplemented "Instruction LDRH not yet implemented."
	140 Move X1, [X10]
	141 Compare X9, 0
	142 JumpIfEqual {149}
	143 Move X10, [X8+176]
	144 Add X10, X10, 8
	145 NotImplemented "Instruction LDUR not yet implemented."
	146 NotImplemented "Instruction CMP not yet implemented."
	147 Subtract X9, X9, 1
	148 Add X10, X10, 16
	149 Move W2, 19
	150 Move X0, X21
	151 Call 0x1C5D788
	152 Move W9, [X10]
	153 Add W9, W9, 19
	154 Add X8, X8, W9
	155 Add X0, X8, 312
	156 Move X8, [X0]
	157 Move X1, [X0+8]
	158 Move X0, X21
	159 NotImplemented "Instruction BLR not yet implemented."
	160 Move [X20+120], D0
	161 Move D8, X31
	162 Move X8, 0x915000
	163 Move X8, [X8+3784]
	164 Move X8, [X8]
	165 Move X8, [X8+184]
	166 Move X21, [X8]
	167 Compare X21, 0
	168 JumpIfEqual {224}
	169 Move X10, 0x915000
	170 Move X8, [X21]
	171 Move V9, [X20+112]
	172 Move X10, [X10+3792]
	173 NotImplemented "Instruction LDRH not yet implemented."
	174 Move X1, [X10]
	175 Compare X9, 0
	176 JumpIfEqual {183}
	177 Move X10, [X8+176]
	178 Add X10, X10, 8
	179 NotImplemented "Instruction LDUR not yet implemented."
	180 NotImplemented "Instruction CMP not yet implemented."
	181 Subtract X9, X9, 1
	182 Add X10, X10, 16
	183 Move W2, 19
	184 Move X0, X21
	185 Call 0x1C5D788
	186 Move W9, [X10]
	187 Add W9, W9, 19
	188 Add X8, X8, W9
	189 Add X0, X8, 312
	190 Move X8, [X0]
	191 Move X1, [X0+8]
	192 Move X0, X21
	193 NotImplemented "Instruction BLR not yet implemented."
	194 Move V1, [X20+120]
	195 Subtract D0, D0, D1
	196 Add D0, D9, D0
	197 NotImplemented "Instruction FCMP not yet implemented."
	198 Move W8, [X20+128]
	199 Move W9, [X20+20]
	200 Move X0, [X20+136]
	201 Add W1, W8, 1
	202 Add W8, W9, 1
	203 Move [X20+128], W1
	204 Move [X20+20], W8
	205 Compare X0, 0
	206 JumpIfEqual {224}
	207 Move X8, 0x944000
	208 Move X8, [X8+896]
	209 Move X2, [X8]
	210 Call List`1<InputEventPtr>.get_Item, X0, X1
	211 Move [X19], X0
	212 Move W0, 1
	213 Move W0, W31
	214 Move X20, [X31+64]
	215 Move X19, [X31+72]
	216 Move X22, [X31+48]
	217 Move X21, [X31+56]
	218 Move X30, [X31+32]
	219 Move X23, [X31+40]
	220 Move D9, [X31+16]
	221 Move D8, [X31+24]
	222 Add X31, X31, 80
	223 Return X0
	224 Call 0x1C17F20

Method: System.Int32 ApplyDeviceMapping(System.Int32 originalDeviceId)

Disassembly:
	0x03807D7C LDP X20, X19, [X31 + 0x10]
	0x03807D80 MOV X1, X31
	0x03807D84 LDP X30, X21, [X31], #0x20
	0x03807D88 B 0x3C86B4C
	0x03807D8C STP X30, X21, [X31 - 0x20]!
	0x03807D90 STP X20, X19, [X31 + 0x10]
	0x03807D94 ADRP X21, 0xBDA000
	0x03807D98 ADRP X20, 0x943000
	0x03807D9C LDRB W8, [X21 + 0x450]
	0x03807DA0 LDR X20, [X20 + 0x420]
	0x03807DA4 MOV X19, X1
	0x03807DA8 TBNZ X8, 0x0, 0x3807DC0
	0x03807DAC ADRP X0, 0x943000
	0x03807DB0 LDR X0, [X0 + 0x420]
	0x03807DB4 BL 0x1C16CF4
	0x03807DB8 MOVZ W8, 0x1
	0x03807DBC STRB W8, [X21 + 0x450]
	0x03807DC0 MOV X0, X19
	0x03807DC4 MOV X1, X31
	0x03807DC8 BL 0x33C693C
	0x03807DCC LDR X8, [X20]
	0x03807DD0 MOV X19, X0
	0x03807DD4 LDR W9, [X8 + 0xE0]
	0x03807DD8 CBNZ W9, 0x3807DE4
	0x03807DDC MOV X0, X8
	0x03807DE0 BL 0x1C16DFC
	0x03807DE4 MOV X0, X19
	0x03807DE8 LDP X20, X19, [X31 + 0x10]
	0x03807DEC MOV X1, X31
	0x03807DF0 LDP X30, X21, [X31], #0x20
	0x03807DF4 B 0x3C86A7C
	0x03807DF8 STR X30, [X31 - 0x30]!
	0x03807DFC STP X22, X21, [X31 + 0x10]
	0x03807E00 STP X20, X19, [X31 + 0x20]
	0x03807E04 ADRP X21, 0xBDA000
	0x03807E08 LDRB W8, [X21 + 0x451]
	0x03807E0C MOV X19, X2
	0x03807E10 MOV W20, W1
	0x03807E14 TBNZ X8, 0x0, 0x3807E2C
	0x03807E18 ADRP X0, 0x943000
	0x03807E1C LDR X0, [X0 + 0x420]
	0x03807E20 BL 0x1C16CF4
	0x03807E24 MOVZ W8, 0x1
	0x03807E28 STRB W8, [X21 + 0x451]
	0x03807E2C CBZ X19, 0x3807E70
	0x03807E30 ADRP X8, 0x943000
	0x03807E34 LDR X8, [X8 + 0x420]
	0x03807E38 LDP W21, W22, [X19]
	0x03807E3C LDR X0, [X8]
	0x03807E40 LDR W8, [X0 + 0xE0]
	0x03807E44 CBNZ W8, 0x3807E4C
	0x03807E48 BL 0x1C16DFC
	0x03807E4C SUB W3, W22, 0x8
	0x03807E50 ADD X2, X19, 0x8
	0x03807E54 MOV W0, W20
	0x03807E58 MOV W1, W21
	0x03807E5C LDP X20, X19, [X31 + 0x20]
	0x03807E60 LDP X22, X21, [X31 + 0x10]
	0x03807E64 MOV X4, X31
	0x03807E68 LDR X30, [X31], #0x30
	0x03807E6C B 0x3C86AB8
	0x03807E70 ADRP X0, 0x8F1000
	0x03807E74 LDR X0, [X0 + 0x528]
	0x03807E78 BL 0x1C16D08
	0x03807E7C BL 0x1C16F10
	0x03807E80 MOV X19, X0
	0x03807E84 ADRP X0, 0x943000
	0x03807E88 LDR X0, [X0 + 0x428]
	0x03807E8C BL 0x1C16D08
	0x03807E90 MOV X1, X0
	0x03807E94 MOV X0, X19
	0x03807E98 MOV X2, X31
	0x03807E9C BL 0x330E100
	0x03807EA0 ADRP X0, 0x943000
	0x03807EA4 LDR X0, [X0 + 0x430]
	0x03807EA8 BL 0x1C16D08
	0x03807EAC MOV X1, X0
	0x03807EB0 MOV X0, X19
	0x03807EB4 BL 0x1C16DEC
	0x03807EB8 LDR X0, [X0 + 0x20]
	0x03807EBC RET
	0x03807EC0 STR X30, [X31 - 0x30]!
	0x03807EC4 STP X22, X21, [X31 + 0x10]
	0x03807EC8 STP X20, X19, [X31 + 0x20]
	0x03807ECC ADRP X20, 0xBDA000
	0x03807ED0 ADRP X22, 0x943000
	0x03807ED4 LDRB W8, [X20 + 0x452]
	0x03807ED8 LDR X22, [X22 + 0x438]
	0x03807EDC MOV X21, X1
	0x03807EE0 MOV X19, X0
	0x03807EE4 TBNZ X8, 0x0, 0x3807F20
	0x03807EE8 ADRP X0, 0x943000
	0x03807EEC LDR X0, [X0 + 0x420]
	0x03807EF0 BL 0x1C16CF4
	0x03807EF4 ADRP X0, 0x943000
	0x03807EF8 LDR X0, [X0 + 0x440]
	0x03807EFC BL 0x1C16CF4
	0x03807F00 ADRP X0, 0x943000
	0x03807F04 LDR X0, [X0 + 0x448]
	0x03807F08 BL 0x1C16CF4
	0x03807F0C ADRP X0, 0x943000
	0x03807F10 LDR X0, [X0 + 0x438]
	0x03807F14 BL 0x1C16CF4
	0x03807F18 MOVZ W8, 0x1
	0x03807F1C STRB W8, [X20 + 0x452]
	0x03807F20 LDR X0, [X22]
	0x03807F24 BL 0x1C16F10
	0x03807F28 MOV X1, X31
	0x03807F2C MOV X20, X0
	0x03807F30 BL 0x33BDD8C
	0x03807F34 CBZ X20, 0x3807FC8
	0x03807F38 ADRP X22, 0x943000
	0x03807F3C LDR X22, [X22 + 0x420]
	0x03807F40 STR X21, [X20 + 0x10]
	0x03807F44 CBZ X21, 0x3807F94
	0x03807F48 ADRP X8, 0x943000
	0x03807F4C LDR X8, [X8 + 0x440]
	0x03807F50 ADRP X21, 0x943000
	0x03807F54 LDR X0, [X8]
	0x03807F58 LDR X21, [X21 + 0x448]
	0x03807F5C BL 0x1C16F10
	0x03807F60 LDR X2, [X21]
	0x03807F64 MOV X1, X20
	0x03807F68 MOV X3, X31
	0x03807F6C MOV X21, X0
	0x03807F70 BL 0x3C865E4
	0x03807F74 LDR X0, [X22]
	0x03807F78 LDR W8, [X0 + 0xE0]
	0x03807F7C CBNZ W8, 0x3807F88
	0x03807F80 BL 0x1C16DFC
	0x03807F84 LDR X0, [X22]
	0x03807F88 LDR X8, [X0 + 0xB8]
	0x03807F8C STR X21, [X8]
	0x03807F90 B 0x3807FB0
	0x03807F94 LDR X0, [X22]
	0x03807F98 LDR W8, [X0 + 0xE0]
	0x03807F9C CBNZ W8, 0x3807FA8
	0x03807FA0 BL 0x1C16DFC
	0x03807FA4 LDR X0, [X22]
	0x03807FA8 LDR X8, [X0 + 0xB8]
	0x03807FAC STR X31, [X8]
	0x03807FB0 LDR X8, [X20 + 0x10]
	0x03807FB4 LDP X22, X21, [X31 + 0x10]
	0x03807FB8 STR X8, [X19 + 0x20]
	0x03807FBC LDP X20, X19, [X31 + 0x20]
	0x03807FC0 LDR X30, [X31], #0x30
	0x03807FC4 RET
	0x03807FC8 BL 0x1C16F20
	0x03807FCC MOV X1, X31
	0x03807FD0 B 0x33BDD8C
	0x03807FD4 LDR X0, [X0 + 0x28]
	0x03807FD8 RET
	0x03807FDC STR X30, [X31 - 0x30]!
	0x03807FE0 STP X22, X21, [X31 + 0x10]
	0x03807FE4 STP X20, X19, [X31 + 0x20]
	0x03807FE8 ADRP X20, 0xBDA000
	0x03807FEC ADRP X22, 0x943000
	0x03807FF0 LDRB W8, [X20 + 0x453]
	0x03807FF4 LDR X22, [X22 + 0x450]
	0x03807FF8 MOV X21, X1
	0x03807FFC MOV X19, X0
	0x03808000 TBNZ X8, 0x0, 0x380803C
	0x03808004 ADRP X0, 0x942000
	0x03808008 LDR X0, [X0 + 0x458]
	0x0380800C BL 0x1C16CF4
	0x03808010 ADRP X0, 0x942000
	0x03808014 LDR X0, [X0 + 0x420]
	0x03808018 BL 0x1C16CF4
	0x0380801C ADRP X0, 0x942000
	0x03808020 LDR X0, [X0 + 0x460]
	0x03808024 BL 0x1C16CF4
	0x03808028 ADRP X0, 0x942000
	0x0380802C LDR X0, [X0 + 0x450]
	0x03808030 BL 0x1C16CF4
	0x03808034 MOVZ W8, 0x1
	0x03808038 STRB W8, [X20 + 0x453]
	0x0380803C LDR X0, [X22]
	0x03808040 BL 0x1C16F10
	0x03808044 MOV X1, X31
	0x03808048 MOV X20, X0
	0x0380804C BL 0x33BDD8C
	0x03808050 CBZ X20, 0x38080E4
	0x03808054 ADRP X22, 0x942000
	0x03808058 LDR X22, [X22 + 0x420]
	0x0380805C STR X21, [X20 + 0x10]
	0x03808060 CBZ X21, 0x38080B0
	0x03808064 ADRP X8, 0x942000
	0x03808068 LDR X8, [X8 + 0x458]
	0x0380806C ADRP X21, 0x942000
	0x03808070 LDR X0, [X8]
	0x03808074 LDR X21, [X21 + 0x460]
	0x03808078 BL 0x1C16F10
	0x0380807C LDR X2, [X21]
	0x03808080 MOV X1, X20
	0x03808084 MOV X3, X31
	0x03808088 MOV X21, X0
	0x0380808C BL 0x2984034
	0x03808090 LDR X0, [X22]
	0x03808094 LDR W8, [X0 + 0xE0]
	0x03808098 CBNZ W8, 0x38080A4
	0x0380809C BL 0x1C16DFC
	0x038080A0 LDR X0, [X22]
	0x038080A4 LDR X8, [X0 + 0xB8]
	0x038080A8 STR X21, [X8 + 0x8]
	0x038080AC B 0x38080CC
	0x038080B0 LDR X0, [X22]
	0x038080B4 LDR W8, [X0 + 0xE0]
	0x038080B8 CBNZ W8, 0x38080C4
	0x038080BC BL 0x1C16DFC
	0x038080C0 LDR X0, [X22]
	0x038080C4 LDR X8, [X0 + 0xB8]
	0x038080C8 STR X31, [X8 + 0x8]
	0x038080CC LDR X8, [X20 + 0x10]
	0x038080D0 LDP X22, X21, [X31 + 0x10]
	0x038080D4 STR X8, [X19 + 0x28]
	0x038080D8 LDP X20, X19, [X31 + 0x20]
	0x038080DC LDR X30, [X31], #0x30
	0x038080E0 RET
	0x038080E4 BL 0x1C16F20
	0x038080E8 MOV X1, X31
	0x038080EC B 0x33BDD8C
	0x038080F0 LDR X0, [X0 + 0x30]
	0x038080F4 RET
	0x038080F8 STR X30, [X31 - 0x30]!
	0x038080FC STP X22, X21, [X31 + 0x10]
	0x03808100 STP X20, X19, [X31 + 0x20]
	0x03808104 ADRP X20, 0xBD9000
	0x03808108 ADRP X22, 0x942000
	0x0380810C LDRB W8, [X20 + 0x454]
	0x03808110 LDR X22, [X22 + 0x468]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+64], X30
	003 Move [X31+72], X23
	004 Move [X31+80], X22
	005 Move [X31+88], X21
	006 Move [X31+96], X20
	007 Move [X31+104], X19
	008 Move X22, 0xBDB000
	009 Move X19, 0x944000
	010 Move W8, [X22+1092]
	011 Move X19, [X19+960]
	012 Move W21, W1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {53}
	018 Move X0, 0x944000
	019 Move X0, [X0+968]
	020 Call 0x1C17CF4
	021 Move X0, 0x944000
	022 Move X0, [X0+840]
	023 Call 0x1C17CF4
	024 Move X0, 0x915000
	025 Move X0, [X0+3520]
	026 Call 0x1C17CF4
	027 Move X0, 0x915000
	028 Move X0, [X0+624]
	029 Call 0x1C17CF4
	030 Move X0, 0x944000
	031 Move X0, [X0+864]
	032 Call 0x1C17CF4
	033 Move X0, 0x944000
	034 Move X0, [X0+976]
	035 Call 0x1C17CF4
	036 Move X0, 0x944000
	037 Move X0, [X0+984]
	038 Call 0x1C17CF4
	039 Move X0, 0x944000
	040 Move X0, [X0+992]
	041 Call 0x1C17CF4
	042 Move X0, 0x944000
	043 Move X0, [X0+1000]
	044 Call 0x1C17CF4
	045 Move X0, 0x944000
	046 Move X0, [X0+1008]
	047 Call 0x1C17CF4
	048 Move X0, 0x944000
	049 Move X0, [X0+960]
	050 Call 0x1C17CF4
	051 Move W8, 1
	052 Move [X22+1092], W8
	053 Move X0, [X19]
	054 Move [X31+48], X31
	055 Move [X31+56], X31
	056 Move [X31+32], X31
	057 Move [X31+40], X31
	058 Call 0x1C17F10
	059 Move X1, X31
	060 Move X19, X0
	061 Call Object..ctor, X0
	062 Compare X19, 0
	063 JumpIfEqual {210}
	064 Move [X19+16], W21
	065 Move X21, X20
	066 Add X21, X21, 40
	067 Move W8, [X21]
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move X23, 0x944000
	070 Move X23, [X23+840]
	071 Move W22, W31
	072 Move X2, [X23]
	073 Move X0, X21
	074 Move W1, W22
	075 Call 0x2DE5BE4, X0, X1
	076 Move W8, [X19+16]
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Move W8, [X21]
	079 Add W22, W22, 1
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Move W8, [X20+64]
	082 Compare W8, 0
	083 JumpIfEqual {153}
	084 Move X0, [X20+24]
	085 Compare X0, 0
	086 JumpIfEqual {211}
	087 Call InputEventTrace.get_deviceInfos, X0
	088 Move X8, 0x944000
	089 Move X8, [X8+984]
	090 Move [X31+48], X0
	091 Move [X31+56], X1
	092 Move X8, [X8]
	093 Move X0, X8
	094 Call 0x1C17F10
	095 Move X8, 0x944000
	096 Move X8, [X8+1008]
	097 Move X21, X0
	098 Move X2, [X8]
	099 Move X1, X19
	100 Move X3, X31
	101 Call Predicate`1<DeviceInfo>..ctor, X0, X1, X2
	102 Move X8, 0x944000
	103 Move X8, [X8+992]
	104 Move X2, [X8]
	105 Add X0, X31, 48
	106 Move X1, X21
	107 Call ReadOnlyArray`1<DeviceInfo>.IndexOf, X0, X1
	108 Move W21, W0
	109 Add W31, W0, 1
	110 Move X0, [X20+24]
	111 Compare X0, 0
	112 JumpIfEqual {212}
	113 Call InputEventTrace.get_deviceInfos, X0
	114 Move X8, 0x944000
	115 Move X8, [X8+1000]
	116 Move [X31+48], X0
	117 Move [X31+56], X1
	118 Move X2, [X8]
	119 Add X8, X31, 0
	120 Add X0, X31, 48
	121 Move W1, W21
	122 Call ReadOnlyArray`1<DeviceInfo>.get_Item, X0, X1
	123 Move X1, [X31+8]
	124 Move X21, [X31+24]
	125 Add X0, X31, 32
	126 Move X2, X31
	127 Call InternedString..ctor, X0, X1
	128 Move X22, 0x915000
	129 Move X22, [X22+3520]
	130 Move X0, [X22]
	131 Move W8, [X0+224]
	132 Compare W8, 0
	133 JumpIfNotEqual {136}
	134 Call 0x1C17DFC
	135 Move X0, [X22]
	136 Move X8, [X0+184]
	137 Move X1, [X31+32]
	138 Move X2, [X31+40]
	139 Add X0, X8, 16
	140 Move X3, X31
	141 Call Collection.HasLayout, X0, X1
	142 Move TEMP, X0
	143 And TEMP, TEMP, 1
	144 Compare TEMP, 1
	145 JumpIfEqual {170}
	146 Move X0, X21
	147 Move X1, X31
	148 Call String.IsNullOrEmpty, X0
	149 Move TEMP, X0
	150 And TEMP, TEMP, 1
	151 Compare TEMP, 1
	152 JumpIfNotEqual {157}
	153 Move W0, [X19+16]
	154 Move X0, X0
	155 ShiftRight X0, 32
	156 And X0, X0, 0x7FFFFFFF
	157 Move X8, 0x915000
	158 Move X8, [X8+624]
	159 Move X0, [X8]
	160 Move W8, [X0+224]
	161 Compare W8, 0
	162 JumpIfNotEqual {164}
	163 Call 0x1C17DFC
	164 Move X0, X21
	165 Move X1, X31
	166 Move X2, X31
	167 Move X3, X31
	168 Move X4, X31
	169 Call InputSystem.RegisterLayout, X0, X1, X2
	170 Move X0, [X31+32]
	171 Move X1, [X31+40]
	172 Move X2, X31
	173 Call InternedString.op_Implicit, X0
	174 Move X8, 0x915000
	175 Move X8, [X8+624]
	176 Move X21, X0
	177 Move X0, [X8]
	178 Move W8, [X0+224]
	179 Compare W8, 0
	180 JumpIfNotEqual {182}
	181 Call 0x1C17DFC
	182 Move X0, X21
	183 Move X1, X31
	184 Move X2, X31
	185 Move X3, X31
	186 Call InputSystem.AddDevice, X0, X1, X2
	187 Move X21, X0
	188 Compare X0, 0
	189 JumpIfEqual {213}
	190 Move W1, [X19+16]
	191 Move W2, [X21+224]
	192 Move X0, X20
	193 Call ReplayController.WithDeviceMappedFromTo, X0, X1, X2
	194 Move X8, 0x943000
	195 Move X8, [X8+968]
	196 Add X0, X20, 72
	197 Move X3, [X8]
	198 Move W2, 10
	199 Move X1, X21
	200 Call InlinedArray`1<Object>.AppendWithCapacity, X0, X1, X2
	201 Move W0, [X21+224]
	202 Move X20, [X31+96]
	203 Move X19, [X31+104]
	204 Move X22, [X31+80]
	205 Move X21, [X31+88]
	206 Move X30, [X31+64]
	207 Move X23, [X31+72]
	208 Add X31, X31, 112
	209 Return X0
	210 Call 0x1C17F20
	211 Call 0x1C17F20
	212 Call 0x1C17F20
	213 Call 0x1C17F20
	214 Move X20, X0
	215 NotImplemented "Instruction CMP not yet implemented."
	216 Move X0, X20
	217 Call 0x3EB2AD0
	218 Move X20, X0
	219 Move X0, 0x8F2000
	220 Move X0, [X0+3264]
	221 Call 0x1C17D08
	222 Move X8, [X20]
	223 Move X1, [X8]
	224 Call 0x1C18270
	225 Move TEMP, X0
	226 And TEMP, TEMP, 1
	227 Compare TEMP, 1
	228 JumpIfNotEqual {230}
	229 Call 0x3EB2AE0
	230 Move W0, 8
	231 Call 0x3EB2AF0
	232 Move X8, [X20]
	233 Move [X0], X8
	234 Move X1, 0x6AD000
	235 Add X1, X1, 3672
	236 Move X2, X31
	237 Call 0x3EB2B00
	238 Move X20, X0
	239 Call 0x3EB2AE0
	240 Move X0, X20
	241 Call 0x1D2D690
	242 Call 0x1991590

