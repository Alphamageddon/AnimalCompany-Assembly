Type: UnityEngine.InputSystem.LowLevel.InputStateHistory/Enumerator

Method: System.Void .ctor(UnityEngine.InputSystem.LowLevel.InputStateHistory history)

Disassembly:
	0x0380F4F0 LDP X30, X21, [X31], #0x20
	0x0380F4F4 B 0x2E10570
	0x0380F4F8 LDP S2, S1, [X0 + 0x10]
	0x0380F4FC FCMP S1, S0

ISIL:
	001 Move TEMP, 0
	002 Not TEMP
	003 Move W8, TEMP
	004 Move [X0], X1
	005 Move [X0+8], W8
	006 Return 

Method: System.Boolean MoveNext()

Disassembly:
	0x0380FAF8 BL 0x1C16CF4
	0x0380FAFC MOVZ W8, 0x1
	0x0380FB00 STRB W8, [X20 + 0x4AE]
	0x0380FB04 LDR X1, [X21]
	0x0380FB08 MOV X0, X19
	0x0380FB0C LDP X20, X19, [X31 + 0x10]
	0x0380FB10 LDP X30, X21, [X31], #0x20
	0x0380FB14 B 0x2E1022C
	0x0380FB18 FNEG S0, S0
	0x0380FB1C RET
	0x0380FB20 STR X30, [X31 - 0x20]!
	0x0380FB24 STP X20, X19, [X31 + 0x10]
	0x0380FB28 ADRP X19, 0xBD2000
	0x0380FB2C ADRP X20, 0x93B000

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0]
	003 Compare X8, 0
	004 JumpIfEqual {14}
	005 Move W9, [X0+8]
	006 Move W8, [X8+68]
	007 Add W9, W9, 1
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Move [X0+8], W9
	010 NotImplemented "Instruction CMP not yet implemented."
	011 NotImplemented "Instruction CSET not yet implemented."
	012 Move X30, [X31+16]
	013 Return X0
	014 Call 0x1C17F20

Method: System.Void Reset()

Disassembly:
	0x0380FB30 LDRB W8, [X19 + 0x4AF]
	0x0380FB34 LDR X20, [X20 + 0x6A8]
	0x0380FB38 TBNZ X8, 0x0, 0x380FB50

ISIL:
	001 Move TEMP, 0
	002 Not TEMP
	003 Move W8, TEMP
	004 Move [X0+8], W8
	005 Return 

Method: UnityEngine.InputSystem.LowLevel.InputStateHistory/Record get_Current()

Disassembly:
	0x0380FB3C ADRP X0, 0x93B000
	0x0380FB40 LDR X0, [X0 + 0x6A8]
	0x0380FB44 BL 0x1C16CF4
	0x0380FB48 MOVZ W8, 0x1
	0x0380FB4C STRB W8, [X19 + 0x4AF]
	0x0380FB50 LDR X0, [X20]
	0x0380FB54 LDP X20, X19, [X31 + 0x10]
	0x0380FB58 LDR X30, [X31], #0x20

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0]
	003 Compare X8, 0
	004 JumpIfEqual {10}
	005 Move W1, [X0+8]
	006 Move X0, X8
	007 Move X30, [X31+16]
	008 Call InputStateHistory.get_Item, X0, X1
	009 Return X0
	010 Call 0x1C17F20

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x0380FB5C RET
	0x0380FB60 STP X30, X21, [X31 - 0x20]!
	0x0380FB64 STP X20, X19, [X31 + 0x10]
	0x0380FB68 ADRP X20, 0xBD2000
	0x0380FB6C ADRP X21, 0x93B000
	0x0380FB70 LDRB W8, [X20 + 0x4B0]
	0x0380FB74 LDR X21, [X21 + 0x678]
	0x0380FB78 MOV X19, X0
	0x0380FB7C TBNZ X8, 0x0, 0x380FB94
	0x0380FB80 ADRP X0, 0x93B000
	0x0380FB84 LDR X0, [X0 + 0x678]
	0x0380FB88 BL 0x1C16CF4
	0x0380FB8C MOVZ W8, 0x1
	0x0380FB90 STRB W8, [X20 + 0x4B0]
	0x0380FB94 LDR X1, [X21]
	0x0380FB98 MOV X0, X19
	0x0380FB9C LDP X20, X19, [X31 + 0x10]
	0x0380FBA0 LDP X30, X21, [X31], #0x20
	0x0380FBA4 B 0x2E10570
	0x0380FBA8 LDRB W8, [X0 + 0x10]
	0x0380FBAC LDRB W9, [X0 + 0x11]
	0x0380FBB0 FNEG S2, S0
	0x0380FBB4 FNEG S3, S1
	0x0380FBB8 CMP W8, 0x0
	0x0380FBBC FCSEL S0, S0, S2, EQ

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xBD3000
	007 Move X20, 0x910000
	008 Move W8, [X21+1181]
	009 Move X20, [X20+2224]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x910000
	016 Move X0, [X0+2224]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+1181], W8
	020 Move X0, X19
	021 Call Enumerator.get_Current, X0
	022 Move X8, [X20]
	023 Move [X31], X0
	024 Move [X31+8], X1
	025 Add X1, X31, 0
	026 Move X0, X8
	027 Call 0x1C17E04
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X30, [X31+16]
	031 Move X21, [X31+24]
	032 Add X31, X31, 48
	033 Return X0

Method: System.Void Dispose()

Disassembly:
	0x0380FBC0 CMP W9, 0x0

ISIL:
	001 Return 

