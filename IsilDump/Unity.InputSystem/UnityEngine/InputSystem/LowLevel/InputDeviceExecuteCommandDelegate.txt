Type: UnityEngine.InputSystem.LowLevel.InputDeviceExecuteCommandDelegate

Method: System.Void .ctor(System.Object object, System.IntPtr method)

Disassembly:
	0x037FFA10 STR X30, [X31 - 0x10]!
	0x037FFA14 ADD X0, X31, 0x8
	0x037FFA18 MOVZ W1, 0x4B
	0x037FFA1C MOVZ W2, 0x45
	0x037FFA20 MOVZ W3, 0x59
	0x037FFA24 MOVZ W4, 0x53
	0x037FFA28 MOV X5, X31
	0x037FFA2C STR W31, [X31 + 0x8]
	0x037FFA30 BL 0x375AA28
	0x037FFA34 LDR W0, [X31 + 0x8]
	0x037FFA38 LDR X30, [X31], #0x10
	0x037FFA3C RET
	0x037FFA40 STR X30, [X31 - 0x30]!
	0x037FFA44 STP X22, X21, [X31 + 0x10]
	0x037FFA48 STP X20, X19, [X31 + 0x20]
	0x037FFA4C CBZ X1, 0x37FFABC
	0x037FFA50 MOV X19, X1
	0x037FFA54 MOVZ W1, 0xE
	0x037FFA58 MOV X2, X31
	0x037FFA5C MOV X20, X0
	0x037FFA60 BL 0x3C001B4
	0x037FFA64 LDR X8, [X19 + 0x18]
	0x037FFA68 CMP W8, 0x1
	0x037FFA6C B.LT 0x37FFAA8
	0x037FFA70 MOV X21, X31
	0x037FFA74 AND X8, X8, 0x0
	0x037FFA78 ADD X22, X19, 0x20
	0x037FFA7C CMP X21, W8, UXTW
	0x037FFA80 B.CS 0x37FFAB8
	0x037FFA84 LDR W1, [X22, X21, LSL #2]
	0x037FFA88 MOVZ W2, 0x1
	0x037FFA8C MOV X0, X20
	0x037FFA90 MOV X3, X31
	0x037FFA94 BL 0x3762844
	0x037FFA98 LDR W8, [X19 + 0x18]
	0x037FFA9C ADD X21, X21, 0x1
	0x037FFAA0 CMP X21, W8, SXTW
	0x037FFAA4 B.LT 0x37FFA7C
	0x037FFAA8 LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+8]
	006 Move [X0+32], X1
	007 Move [X0+40], X2
	008 Move X19, X0
	009 Move X20, X1
	010 Move [X0+16], X8
	011 Move W21, [X2+82]
	012 Move [X0+64], X0
	013 Move X0, X2
	014 Call 0x1C17D84
	015 Move TEMP, X0
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfNotEqual {22}
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move X8, -29536256
	021 Add X8, X8, 2184
	022 Compare W21, 0
	023 JumpIfEqual {30}
	024 Compare X20, 0
	025 JumpIfEqual {41}
	026 Move X8, [X19+16]
	027 Move X9, [X19+32]
	028 Move [X19+24], X8
	029 Move [X19+64], X9
	030 Move X8, -29536256
	031 Add X8, X8, 2168
	032 Move [X19+24], X8
	033 Move X8, -29536256
	034 Add X8, X8, 2088
	035 Move [X19+56], X8
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move X30, [X31+32]
	039 Move X21, [X31+40]
	040 Return 
	041 Move X1, -47067136
	042 Add X1, X1, 3811
	043 Move X0, X31
	044 Call 0x1C17F3C
	045 Move X1, X31
	046 Call 0x1C17DEC

Method: System.Int64 Invoke(ref UnityEngine.InputSystem.LowLevel.InputDeviceCommand command)

Disassembly:
	0x037FFAAC LDP X22, X21, [X31 + 0x10]
	0x037FFAB0 LDR X30, [X31], #0x30
	0x037FFAB4 RET
	0x037FFAB8 BL 0x1C16F28
	0x037FFABC ADRP X0, 0x8F9000

ISIL:
	001 Move X8, [X0+64]
	002 Move X3, [X0+24]
	003 Move X2, [X0+40]
	004 Move X0, X8
	005 CallNoReturn X3

Method: System.IAsyncResult BeginInvoke(ref UnityEngine.InputSystem.LowLevel.InputDeviceCommand command, System.AsyncCallback callback, System.Object object)

Disassembly:
	0x037FFAC0 LDR X0, [X0 + 0x528]
	0x037FFAC4 BL 0x1C16D08
	0x037FFAC8 BL 0x1C16F10
	0x037FFACC MOV X19, X0
	0x037FFAD0 ADRP X0, 0x94A000
	0x037FFAD4 LDR X0, [X0 + 0xFF8]
	0x037FFAD8 BL 0x1C16D08
	0x037FFADC MOV X1, X0
	0x037FFAE0 MOV X0, X19
	0x037FFAE4 MOV X2, X31
	0x037FFAE8 BL 0x330E100
	0x037FFAEC ADRP X0, 0x94B000
	0x037FFAF0 LDR X0, [X0]
	0x037FFAF4 BL 0x1C16D08
	0x037FFAF8 MOV X1, X0
	0x037FFAFC MOV X0, X19
	0x037FFB00 BL 0x1C16DEC
	0x037FFB04 AND W2, W2, 0x1
	0x037FFB08 MOV X3, X31
	0x037FFB0C B 0x3762844
	0x037FFB10 MOVZ W2, 0x1
	0x037FFB14 MOV X3, X31
	0x037FFB18 B 0x3762844
	0x037FFB1C MOV W2, W31
	0x037FFB20 MOV X3, X31
	0x037FFB24 B 0x3762844
	0x037FFB28 STR X30, [X31 - 0x10]!
	0x037FFB2C ADD X0, X31, 0x8
	0x037FFB30 MOVZ W1, 0x4B
	0x037FFB34 MOVZ W2, 0x45
	0x037FFB38 MOVZ W3, 0x59
	0x037FFB3C MOVZ W4, 0x53
	0x037FFB40 MOV X5, X31
	0x037FFB44 STR W31, [X31 + 0x8]
	0x037FFB48 BL 0x375AA28

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+32], X24
	004 Move [X31+40], X23
	005 Move [X31+48], X22
	006 Move [X31+56], X21
	007 Move [X31+64], X20
	008 Move [X31+72], X19
	009 Move X24, 0xBE3000
	010 Move X23, 0x94B000
	011 Move W8, [X24+1027]
	012 Move X23, [X23+4040]
	013 Move X19, X3
	014 Move X20, X2
	015 Move X22, X1
	016 Move X21, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {26}
	021 Move X0, 0x94B000
	022 Move X0, [X0+4040]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X24+1027], W8
	026 Move X0, [X23]
	027 Move X1, X22
	028 Move [X31+8], X31
	029 Call 0x1C17E04
	030 Move [X31], X0
	031 Add X1, X31, 0
	032 Move X0, X21
	033 Move X2, X20
	034 Move X3, X19
	035 Call 0x1C17CB0
	036 Move X20, [X31+64]
	037 Move X19, [X31+72]
	038 Move X22, [X31+48]
	039 Move X21, [X31+56]
	040 Move X24, [X31+32]
	041 Move X23, [X31+40]
	042 Move X30, [X31+16]
	043 Add X31, X31, 80
	044 Return X0

Method: System.Int64 EndInvoke(ref UnityEngine.InputSystem.LowLevel.InputDeviceCommand command, System.IAsyncResult result)

Disassembly:
	0x037FFB4C LDR W0, [X31 + 0x8]
	0x037FFB50 LDR X30, [X31], #0x10
	0x037FFB54 RET
	0x037FFB58 STR X30, [X31 - 0x10]!
	0x037FFB5C ADD X0, X31, 0x8
	0x037FFB60 MOVZ W1, 0x4D
	0x037FFB64 MOVZ W2, 0x4F
	0x037FFB68 MOVZ W3, 0x55
	0x037FFB6C MOVZ W4, 0x53
	0x037FFB70 MOV X5, X31
	0x037FFB74 STR W31, [X31 + 0x8]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, X2
	003 Move [X31+8], X1
	004 Add X1, X31, 8
	005 Call 0x1C17CB4
	006 Compare X0, 0
	007 JumpIfEqual {12}
	008 Call 0x1C17E08
	009 Move X0, [X0]
	010 Move X30, [X31+16]
	011 Return X0
	012 Call 0x1C17F20

