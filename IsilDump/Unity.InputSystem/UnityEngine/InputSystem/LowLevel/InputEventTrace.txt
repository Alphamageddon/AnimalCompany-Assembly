Type: UnityEngine.InputSystem.LowLevel.InputEventTrace

Method: UnityEngine.InputSystem.Utilities.FourCC get_FrameMarkerEvent()

Disassembly:
	0x0380439C LDR X8, [X22]
	0x038043A0 MOV X0, X22
	0x038043A4 LDR X9, [X8 + 0x228]
	0x038043A8 LDR X1, [X8 + 0x230]
	0x038043AC BLR X9
	0x038043B0 LDR X8, [X22]
	0x038043B4 MOV X0, X22
	0x038043B8 LDR X9, [X8 + 0x258]
	0x038043BC LDR X1, [X8 + 0x260]
	0x038043C0 BLR X9
	0x038043C4 LDR X8, [X22]
	0x038043C8 MOV X23, X0

ISIL:
	001 Move [X31-16], X30
	002 Add X0, X31, 8
	003 Move W1, 70
	004 Move W2, 82
	005 Move W3, 77
	006 Move W4, 69
	007 Move X5, X31
	008 Move [X31+8], W31
	009 Call FourCC..ctor, X0, X1, X2, X3, X4
	010 Move W0, [X31+8]
	011 Move X30, [X31+16]
	012 Return X0

Method: System.Int32 get_deviceId()

Disassembly:
	0x038043CC MOV X0, X22
	0x038043D0 LDR X9, [X8 + 0x258]

ISIL:
	001 Move W0, [X0+32]
	002 Return X0

Method: System.Void set_deviceId(System.Int32 value)

Disassembly:
	0x038043D4 LDR X1, [X8 + 0x260]
	0x038043D8 BLR X9

ISIL:
	001 Move [X0+32], W1
	002 Return 

Method: System.Boolean get_enabled()

Disassembly:
	0x038043DC MOV X8, X21
	0x038043E0 LDR X19, [X8 + 0xA0]!

ISIL:
	001 Move W0, [X0+20]
	002 Return X0

Method: System.Boolean get_recordFrameMarkers()

Disassembly:
	0x038043E4 CBZ X23, 0x3804554
	0x038043E8 MOV X24, X0

ISIL:
	001 Move W0, [X0+185]
	002 Return X0

Method: System.Void set_recordFrameMarkers(System.Boolean value)

Disassembly:
	0x038043EC CBZ X0, 0x3804554
	0x038043F0 CBZ X19, 0x3804404
	0x038043F4 LDR X8, [X21 + 0x78]
	0x038043F8 MOV X0, X19
	0x038043FC CMP X8, X24
	0x03804400 B.GE 0x380441C
	0x03804404 MOVZ W1, 0x4
	0x03804408 MOVZ W2, 0x4
	0x0380440C MOV X0, X24
	0x03804410 MOV X3, X31
	0x03804414 BL 0x3C00000
	0x03804418 STR X24, [X21 + 0x78]
	0x0380441C STP X23, X19, [X31 + 0x10]
	0x03804420 MOV X29, X31
	0x03804424 ADD X19, X24, X0
	0x03804428 MOV X27, X0
	0x0380442C STR X0, [X31 + 0x20]
	0x03804430 LDR X8, [X22]
	0x03804434 LDR X1, [X8 + 0x230]
	0x03804438 LDR X9, [X8 + 0x228]
	0x0380443C MOV X0, X22
	0x03804440 BLR X9
	0x03804444 LDR X8, [X22]
	0x03804448 MOV W24, W0
	0x0380444C LDR X1, [X8 + 0x220]
	0x03804450 LDR X9, [X8 + 0x218]
	0x03804454 MOV X0, X22
	0x03804458 BLR X9
	0x0380445C LDR X8, [X22]
	0x03804460 MOV W25, W0
	0x03804464 LDR X1, [X8 + 0x220]
	0x03804468 LDR X9, [X8 + 0x218]
	0x0380446C MOV X0, X22
	0x03804470 BLR X9
	0x03804474 SUB X8, X19, X27
	0x03804478 CMP X8, W25, UXTH
	0x0380447C B.LT 0x3804568
	0x03804480 STR W24, [X27]
	0x03804484 STRH W25, [X27 + 0x4]
	0x03804488 STRH W0, [X27 + 0x6]
	0x0380448C LDR X8, [X22]
	0x03804490 AND W20, W25, 0xFFFF
	0x03804494 SUB W26, W20, 0x8
	0x03804498 LDR X9, [X8 + 0x2C8]
	0x0380449C LDR X2, [X8 + 0x2D0]
	0x038044A0 MOV X0, X22
	0x038044A4 MOV W1, W26
	0x038044A8 BLR X9
	0x038044AC CBZ X0, 0x38044C4
	0x038044B0 LDR W8, [X0 + 0x18]
	0x038044B4 ADD X9, X0, 0x20
	0x038044B8 CMP W8, 0x0
	0x038044BC CSEL X1, X31, X9, EQ
	0x038044C0 B 0x38044C8
	0x038044C4 MOV X1, X31
	0x038044C8 ADD X27, X27, 0x8
	0x038044CC SXTW X2, W26
	0x038044D0 MOV X0, X27

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xBDE000
	007 Move W8, [X22+1065]
	008 Move W19, W1
	009 Move X20, X0
	010 And W21, W1, 1
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0x8F1000
	016 Move X0, [X0+3696]
	017 Call 0x1C17CF4
	018 Move X0, 0x947000
	019 Move X0, [X0+496]
	020 Call 0x1C17CF4
	021 Move X0, 0x918000
	022 Move X0, [X0+624]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X22+1065], W8
	026 Move W8, [X20+185]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move W8, [X20+20]
	029 Move [X20+185], W21
	030 Compare W8, 0
	031 JumpIfEqual {63}
	032 Move X8, 0x8F1000
	033 Move X8, [X8+3696]
	034 Move X0, [X8]
	035 Call 0x1C17F10
	036 Move X8, 0x947000
	037 Move X8, [X8+496]
	038 Move X1, X20
	039 Move X3, X31
	040 Move X21, X0
	041 Move X2, [X8]
	042 Call Action..ctor, X0, X1, X2
	043 Move X8, 0x918000
	044 Move X8, [X8+624]
	045 Move X0, [X8]
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1C17DFC
	050 Move X0, X21
	051 Move X1, X31
	052 Move TEMP, X19
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfNotEqual {69}
	056 Move X20, [X31+32]
	057 Move X19, [X31+40]
	058 Move X22, [X31+16]
	059 Move X21, [X31+24]
	060 Move X30, [X31+48]
	061 Call InputSystem.add_onBeforeUpdate, X0
	062 Return 
	063 Move X20, [X31+32]
	064 Move X19, [X31+40]
	065 Move X22, [X31+16]
	066 Move X21, [X31+24]
	067 Move X30, [X31+48]
	068 Return 
	069 Move X20, [X31+32]
	070 Move X19, [X31+40]
	071 Move X22, [X31+16]
	072 Move X21, [X31+24]
	073 Move X30, [X31+48]
	074 Call InputSystem.remove_onBeforeUpdate, X0
	075 Return 

Method: System.Int64 get_eventCount()

Disassembly:
	0x038044D4 MOV X3, X31
	0x038044D8 BL 0x3BFF954

ISIL:
	001 Move X0, [X0+144]
	002 Return X0

Method: System.Int64 get_totalEventSizeInBytes()

Disassembly:
	0x038044DC ANDS W8, W25, 0x3
	0x038044E0 SUB W8, W20, W8

ISIL:
	001 Move X0, [X0+152]
	002 Return X0

Method: System.Int64 get_allocatedSizeInBytes()

Disassembly:
	0x038044E4 ANDS W31, W25, 0x3
	0x038044E8 ADD W8, W8, 0x4
	0x038044EC ADD W9, W26, 0x3
	0x038044F0 CSEL W8, W20, W8, EQ
	0x038044F4 CMP W26, 0x0
	0x038044F8 CSEL W9, W9, W26, LT

ISIL:
	001 Move X8, [X0+160]
	002 Compare X8, 0
	003 JumpIfEqual {6}
	004 Move X0, [X0+120]
	005 Return X0
	006 Move X0, X31
	007 Return X0

Method: System.Int64 get_maxSizeInBytes()

Disassembly:
	0x03804504 SUB W9, W20, W9
	0x03804508 SUB W9, W9, 0x4

ISIL:
	001 Move X0, [X0+128]
	002 Return X0

Method: UnityEngine.InputSystem.Utilities.ReadOnlyArray`1<UnityEngine.InputSystem.LowLevel.InputEventTrace/DeviceInfo> get_deviceInfos()

Disassembly:
	0x0380450C CSEL W9, W26, W9, EQ
	0x03804510 ADD X27, X27, W9, SXTW
	0x03804514 CMP X27, X19
	0x03804518 ADD X29, X29, X8
	0x0380451C B.CS 0x3804568
	0x03804520 SUBS X23, X23, 0x1
	0x03804524 B.NE 0x3804430
	0x03804528 B 0x3804568
	0x0380452C CMP W1, 0x1
	0x03804530 MOV X24, X0
	0x03804534 B.NE 0x3804860
	0x03804538 MOV X0, X24
	0x0380453C BL 0x3EB1AD0
	0x03804540 LDR X28, [X0]
	0x03804544 BL 0x3EB1AE0
	0x03804548 CBZ X28, 0x38044DC
	0x0380454C MOV X0, X28
	0x03804550 BL 0x1C16F18

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xBDE000
	006 Move X20, 0x947000
	007 Move W8, [X21+1066]
	008 Move X20, [X20+504]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x947000
	015 Move X0, [X0+504]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1066], W8
	019 Move X0, [X19+192]
	020 Move X1, [X20]
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X30, [X31+32]
	024 Move X21, [X31+40]
	025 Call ReadOnlyArray`1<DeviceInfo>.op_Implicit, X0
	026 Return X0

Method: System.Func`3<UnityEngine.InputSystem.LowLevel.InputEventPtr, UnityEngine.InputSystem.InputDevice, System.Boolean> get_onFilterEvent()

Disassembly:
	0x03804554 MOV X9, X31
	0x03804558 STP X31, X31, [X8]

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void set_onFilterEvent(System.Func`3<UnityEngine.InputSystem.LowLevel.InputEventPtr, UnityEngine.InputSystem.InputDevice, System.Boolean> value)

Disassembly:
	0x0380455C STR X31, [X8 + 0x10]
	0x03804560 CBNZ X19, 0x3804670

ISIL:
	001 Move [X0+24], X1
	002 Return 

Method: System.Void add_onEvent(System.Action`1<UnityEngine.InputSystem.LowLevel.InputEventPtr> value)

Disassembly:
	0x03804564 B 0x3804688
	0x03804568 LDR X8, [X22]
	0x0380456C STR X21, [X31 + 0x8]
	0x03804570 LDR X1, [X8 + 0x230]
	0x03804574 LDR X9, [X8 + 0x228]
	0x03804578 MOV X0, X22
	0x0380457C BLR X9
	0x03804580 ADRP X8, 0x946000
	0x03804584 LDR X8, [X8 + 0x260]
	0x03804588 MOV W25, W0
	0x0380458C LDR X0, [X8]
	0x03804590 MOV W1, W25
	0x03804594 BL 0x1C16D6C
	0x03804598 MOV X24, X0
	0x0380459C CMP W25, 0x1
	0x038045A0 B.LT 0x3804650
	0x038045A4 MOV X23, X31
	0x038045A8 MOV W20, W25
	0x038045AC ADD X21, X24, 0x38
	0x038045B0 LDR X8, [X22]
	0x038045B4 LDR X1, [X8 + 0x230]
	0x038045B8 LDR X9, [X8 + 0x228]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xBDE000
	007 Move X21, 0x947000
	008 Move W8, [X22+1067]
	009 Move X21, [X21+512]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x947000
	017 Move X0, [X0+512]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+1067], W8
	021 Move X2, [X21]
	022 Add X0, X20, 40
	023 Move X1, X19
	024 Move X20, [X31+32]
	025 Move X19, [X31+40]
	026 Move X22, [X31+16]
	027 Move X21, [X31+24]
	028 Move X30, [X31+48]
	029 Call 0x28F24E0, X0, X1
	030 Return 

Method: System.Void remove_onEvent(System.Action`1<UnityEngine.InputSystem.LowLevel.InputEventPtr> value)

Disassembly:
	0x038045BC MOV X0, X22
	0x038045C0 BLR X9
	0x038045C4 LDR X8, [X22]
	0x038045C8 MOV W25, W0
	0x038045CC LDR X1, [X8 + 0x2A0]
	0x038045D0 LDR X9, [X8 + 0x298]
	0x038045D4 MOV X0, X22
	0x038045D8 BLR X9
	0x038045DC LDR X8, [X22]
	0x038045E0 MOV X26, X0
	0x038045E4 LDR X1, [X8 + 0x230]
	0x038045E8 LDR X9, [X8 + 0x228]
	0x038045EC MOV X0, X22
	0x038045F0 BLR X9
	0x038045F4 LDR X8, [X22]
	0x038045F8 MOV W27, W0
	0x038045FC LDR X1, [X8 + 0x230]
	0x03804600 LDR X9, [X8 + 0x228]
	0x03804604 MOV X0, X22
	0x03804608 BLR X9
	0x0380460C LDR X8, [X22]
	0x03804610 MOV W28, W0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xBDE000
	007 Move X21, 0x947000
	008 Move W8, [X22+1068]
	009 Move X21, [X21+520]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x947000
	017 Move X0, [X0+520]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+1068], W8
	021 Move X2, [X21]
	022 Add X0, X20, 40
	023 Move X1, X19
	024 Move X20, [X31+32]
	025 Move X19, [X31+40]
	026 Move X22, [X31+16]
	027 Move X21, [X31+24]
	028 Move X30, [X31+48]
	029 Call 0x28F2650, X0, X1
	030 Return 

Method: System.Void .ctor(UnityEngine.InputSystem.InputDevice device, System.Int64 bufferSizeInBytes = 1048576, System.Boolean growBuffer = False, System.Int64 maxBufferSizeInBytes = -1, System.Int64 growIncrementSizeInBytes = -1)

Disassembly:
	0x03804614 LDR X1, [X8 + 0x2A0]
	0x03804618 LDR X9, [X8 + 0x298]
	0x0380461C MOV X0, X22
	0x03804620 BLR X9
	0x03804624 CBZ X24, 0x38046B4
	0x03804628 LDR W8, [X24 + 0x18]
	0x0380462C CMP X23, X8
	0x03804630 B.CS 0x38046B8
	0x03804634 ADD X23, X23, 0x1
	0x03804638 STP W25, W31, [X21 - 0x18]
	0x0380463C STUR X26, [X21 - 0x10]
	0x03804640 STP W27, W28, [X21 - 0x8]
	0x03804644 STR X0, [X21], #0x20
	0x03804648 CMP X20, X23
	0x0380464C B.NE 0x38045B0
	0x03804650 LDP X21, X8, [X31 + 0x8]
	0x03804654 LDR X9, [X31 + 0x20]
	0x03804658 STR X19, [X21 + 0xB0]
	0x0380465C LDR X19, [X31 + 0x18]
	0x03804660 STP X9, X9, [X21 + 0xA0]
	0x03804664 STP X8, X29, [X21 + 0x90]
	0x03804668 STR X24, [X21 + 0xC0]
	0x0380466C CBZ X19, 0x3804688
	0x03804670 CMP X9, X19
	0x03804674 B.EQ 0x3804688
	0x03804678 MOVZ W1, 0x4
	0x0380467C MOV X0, X19
	0x03804680 MOV X2, X31
	0x03804684 BL 0x3C00054
	0x03804688 LDR W8, [X21 + 0x10]
	0x0380468C LDP X20, X19, [X31 + 0x90]
	0x03804690 LDP X24, X23, [X31 + 0x70]
	0x03804694 LDP X26, X25, [X31 + 0x60]
	0x03804698 ADD W8, W8, 0x1
	0x0380469C STR W8, [X21 + 0x10]
	0x038046A0 LDP X22, X21, [X31 + 0x80]
	0x038046A4 LDP X28, X27, [X31 + 0x50]
	0x038046A8 LDP X29, X30, [X31 + 0x40]
	0x038046AC ADD X31, X31, 0xA0
	0x038046B0 RET
	0x038046B4 BL 0x1C16F20
	0x038046B8 BL 0x1C16F28
	0x038046BC ADRP X0, 0x8F4000
	0x038046C0 LDR X0, [X0 + 0x528]
	0x038046C4 BL 0x1C16D08
	0x038046C8 BL 0x1C16F10
	0x038046CC MOV X19, X0
	0x038046D0 ADRP X0, 0x91E000
	0x038046D4 LDR X0, [X0 + 0xD38]
	0x038046D8 BL 0x1C16D08
	0x038046DC MOV X1, X0
	0x038046E0 MOV X0, X19
	0x038046E4 MOV X2, X31

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, X1
	009 Move X1, X31
	010 Move X21, X5
	011 Move X22, X4
	012 Move W23, W3
	013 Move X24, X2
	014 Move X19, X0
	015 Call Object..ctor, X0
	016 And X8, X24, 0
	017 Move [X19+120], X8
	018 Move TEMP, X23
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfNotEqual {33}
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move W8, 0x10000000
	024 NotImplemented "Instruction CSEL not yet implemented."
	025 Move [X19+128], X8
	026 Move TEMP, X21
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {46}
	030 Move [X19+136], X21
	031 Compare X20, 0
	032 JumpIfNotEqual {36}
	033 Move [X19+128], X8
	034 Compare X20, 0
	035 JumpIfEqual {50}
	036 Move W8, [X20+224]
	037 Move X22, [X31+32]
	038 Move X21, [X31+40]
	039 Move X24, [X31+16]
	040 Move X23, [X31+24]
	041 Move [X19+32], W8
	042 Move X20, [X31+48]
	043 Move X19, [X31+56]
	044 Move X30, [X31+64]
	045 Return 
	046 Move W8, 0x100000
	047 Move [X19+136], X8
	048 Compare X20, 0
	049 JumpIfNotEqual {36}
	050 Move X0, 0x8F5000
	051 Move X0, [X0+1320]
	052 Call 0x1C17D08
	053 Call 0x1C17F10
	054 Move X19, X0
	055 Move X0, 0x918000
	056 Move X0, [X0+3360]
	057 Call 0x1C17D08
	058 Move X1, X0
	059 Move X0, X19
	060 Move X2, X31
	061 Call ArgumentNullException..ctor, X0, X1
	062 Move X0, 0x947000
	063 Move X0, [X0+528]
	064 Call 0x1C17D08
	065 Move X1, X0
	066 Move X0, X19
	067 Call 0x1C17DEC

Method: System.Void .ctor(System.Int64 bufferSizeInBytes = 1048576, System.Boolean growBuffer = False, System.Int64 maxBufferSizeInBytes = -1, System.Int64 growIncrementSizeInBytes = -1)

Disassembly:
	0x038046E8 BL 0x330E100
	0x038046EC B 0x3804734
	0x038046F0 ADRP X0, 0x8F7000
	0x038046F4 LDR X0, [X0 + 0x578]
	0x038046F8 BL 0x1C16D08
	0x038046FC BL 0x1C16F10
	0x03804700 MOV X19, X0
	0x03804704 ADRP X0, 0x923000
	0x03804708 LDR X0, [X0 + 0x5A0]
	0x0380470C BL 0x1C16D08
	0x03804710 MOV X20, X0
	0x03804714 ADRP X0, 0x91E000
	0x03804718 LDR X0, [X0 + 0xD38]
	0x0380471C BL 0x1C16D08
	0x03804720 MOV X2, X0
	0x03804724 MOV X0, X19
	0x03804728 MOV X1, X20
	0x0380472C MOV X3, X31
	0x03804730 BL 0x330E16C
	0x03804734 ADRP X0, 0x946000
	0x03804738 LDR X0, [X0 + 0x268]
	0x0380473C BL 0x1C16D08
	0x03804740 MOV X1, X0
	0x03804744 MOV X0, X19
	0x03804748 BL 0x1C16DEC
	0x0380474C BL 0x1C16F20
	0x03804750 ADRP X0, 0x946000
	0x03804754 LDR X0, [X0 + 0x238]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, X1
	008 Move X1, X31
	009 Move X20, X4
	010 Move X21, X3
	011 Move W22, W2
	012 Move X19, X0
	013 Call Object..ctor, X0
	014 And X8, X23, 0
	015 Move [X19+120], X8
	016 Move TEMP, X22
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfNotEqual {29}
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Move W8, 0x10000000
	022 NotImplemented "Instruction CSEL not yet implemented."
	023 Move [X19+128], X8
	024 Move TEMP, X20
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {30}
	028 Move [X19+136], X20
	029 Move [X19+128], X8
	030 Move W8, 0x100000
	031 Move [X19+136], X8
	032 Move X20, [X31+32]
	033 Move X19, [X31+40]
	034 Move X22, [X31+16]
	035 Move X21, [X31+24]
	036 Move X30, [X31+48]
	037 Move X23, [X31+56]
	038 Return 

Method: System.Void WriteTo(System.String filePath)

Disassembly:
	0x03804758 BL 0x1C16D08
	0x0380475C BL 0x19903D0
	0x03804760 BL 0x3803FF8
	0x03804764 STR W0, [X31 + 0x38]
	0x03804768 ADRP X0, 0x917000
	0x0380476C LDR X0, [X0 + 0xD28]
	0x03804770 BL 0x1C16D08
	0x03804774 ADD X1, X31, 0x38
	0x03804778 BL 0x1C16E04
	0x0380477C MOV X19, X0
	0x03804780 ADRP X0, 0x946000
	0x03804784 LDR X0, [X0 + 0x270]
	0x03804788 B 0x38047D4
	0x0380478C ADRP X19, 0x946000
	0x03804790 LDR X19, [X19 + 0x238]
	0x03804794 MOV X0, X19
	0x03804798 BL 0x1C16D08
	0x0380479C BL 0x19903D0
	0x038047A0 MOV X0, X19
	0x038047A4 BL 0x1C16D08
	0x038047A8 LDR X8, [X0 + 0xB8]
	0x038047AC ADRP X0, 0x8EF000
	0x038047B0 LDR W8, [X8]
	0x038047B4 STR W8, [X31 + 0x38]
	0x038047B8 LDR X0, [X0 + 0x758]
	0x038047BC BL 0x1C16D08
	0x038047C0 ADD X1, X31, 0x38
	0x038047C4 BL 0x1C16E04
	0x038047C8 MOV X19, X0
	0x038047CC ADRP X0, 0x946000
	0x038047D0 LDR X0, [X0 + 0x278]
	0x038047D4 BL 0x1C16D08
	0x038047D8 MOV X1, X19
	0x038047DC MOV X2, X31
	0x038047E0 BL 0x321EFD0
	0x038047E4 MOV X19, X0
	0x038047E8 ADRP X0, 0x91D000
	0x038047EC LDR X0, [X0 + 0x7A8]
	0x038047F0 BL 0x1C16D08
	0x038047F4 BL 0x1C16F10
	0x038047F8 MOV X1, X19
	0x038047FC MOV X2, X31
	0x03804800 MOV X20, X0
	0x03804804 BL 0x32E16BC
	0x03804808 ADRP X0, 0x946000
	0x0380480C LDR X0, [X0 + 0x268]
	0x03804810 BL 0x1C16D08
	0x03804814 MOV X1, X0
	0x03804818 MOV X0, X20
	0x0380481C BL 0x1C16DEC
	0x03804820 B 0x380485C
	0x03804824 CBZ X28, 0x380485C
	0x03804828 MOV X0, X28
	0x0380482C BL 0x1C16F18
	0x03804830 B 0x380485C
	0x03804834 B 0x380485C
	0x03804838 B 0x380485C
	0x0380483C B 0x380485C
	0x03804840 B 0x380485C
	0x03804844 B 0x380485C
	0x03804848 B 0x380485C
	0x0380484C B 0x380485C
	0x03804850 B 0x380485C
	0x03804854 B 0x380485C
	0x03804858 B 0x380485C
	0x0380485C MOV X24, X0
	0x03804860 CMP W1, 0x1
	0x03804864 B.NE 0x38048F0
	0x03804868 MOV X0, X24
	0x0380486C BL 0x3EB1AD0
	0x03804870 MOV X21, X0
	0x03804874 ADRP X0, 0x8F5000
	0x03804878 LDR X0, [X0 + 0xCC0]
	0x0380487C BL 0x1C16D08
	0x03804880 LDR X8, [X21]
	0x03804884 LDR X1, [X8]
	0x03804888 BL 0x1C17270
	0x0380488C TBZ X0, 0x0, 0x38048C8
	0x03804890 LDR X21, [X21]
	0x03804894 LDRSW X8, [X31 + 0x30]
	0x03804898 ADD X9, X31, 0x28
	0x0380489C STR X21, [X9, X8, LSL #3]
	0x038048A0 BL 0x3EB1AE0
	0x038048A4 LDP X8, X9, [X31 + 0x18]
	0x038048A8 CMP X9, X8
	0x038048AC B.EQ 0x38048C0
	0x038048B0 LDR X0, [X31 + 0x20]
	0x038048B4 MOVZ W1, 0x4
	0x038048B8 MOV X2, X31
	0x038048BC BL 0x3C00054
	0x038048C0 MOV X0, X21
	0x038048C4 BL 0x1C16F18
	0x038048C8 MOVZ W0, 0x8
	0x038048CC BL 0x3EB1AF0
	0x038048D0 LDR X8, [X21]
	0x038048D4 STR X8, [X0]
	0x038048D8 ADRP X1, 0x6B0000
	0x038048DC ADD X1, X1, 0xE58
	0x038048E0 MOV X2, X31
	0x038048E4 BL 0x3EB1B00
	0x038048E8 MOV X24, X0
	0x038048EC BL 0x3EB1AE0
	0x038048F0 MOV X0, X24
	0x038048F4 BL 0x1D2C690
	0x038048F8 BL 0x1990590
	0x038048FC STR X1, [X0 + 0xA0]
	0x03804900 RET
	0x03804904 STR X1, [X0 + 0xA8]
	0x03804908 RET
	0x0380490C STR X1, [X0 + 0xB0]
	0x03804910 RET
	0x03804914 STR X30, [X31 - 0x30]!
	0x03804918 STP X22, X21, [X31 + 0x10]
	0x0380491C STP X20, X19, [X31 + 0x20]
	0x03804920 ADRP X20, 0xBDD000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xBDE000
	007 Move W8, [X21+1069]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x8F0000
	015 Move X0, [X0+3584]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1069], W8
	019 Move X0, X19
	020 Move X1, X31
	021 Call String.IsNullOrEmpty, X0
	022 Move TEMP, X0
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {67}
	026 Move X22, 0x8F0000
	027 Move X22, [X22+3584]
	028 Move X0, X19
	029 Move X1, X31
	030 Call File.OpenWrite, X0
	031 Move X19, X0
	032 Move X0, X20
	033 Move X1, X19
	034 Call InputEventTrace.WriteTo, X0, X1
	035 Move X20, X31
	036 Compare X19, 0
	037 JumpIfEqual {59}
	038 Move X8, [X19]
	039 Move X1, [X22]
	040 NotImplemented "Instruction LDRH not yet implemented."
	041 Compare X9, 0
	042 JumpIfEqual {49}
	043 Move X10, [X8+176]
	044 Add X10, X10, 8
	045 NotImplemented "Instruction LDUR not yet implemented."
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Subtract X9, X9, 1
	048 Add X10, X10, 16
	049 Move X0, X19
	050 Move W2, W31
	051 Call 0x1C5D788
	052 NotImplemented "Instruction LDRSW not yet implemented."
	053 Add X8, X8, X9
	054 Add X0, X8, 312
	055 Move X8, [X0]
	056 Move X1, [X0+8]
	057 Move X0, X19
	058 NotImplemented "Instruction BLR not yet implemented."
	059 Compare X20, 0
	060 JumpIfNotEqual {85}
	061 Move X20, [X31+32]
	062 Move X19, [X31+40]
	063 Move X22, [X31+16]
	064 Move X21, [X31+24]
	065 Move X30, [X31+48]
	066 Return 
	067 Move X0, 0x8F5000
	068 Move X0, [X0+1320]
	069 Call 0x1C17D08
	070 Call 0x1C17F10
	071 Move X19, X0
	072 Move X0, 0x947000
	073 Move X0, [X0+536]
	074 Call 0x1C17D08
	075 Move X1, X0
	076 Move X0, X19
	077 Move X2, X31
	078 Call ArgumentNullException..ctor, X0, X1
	079 Move X0, 0x947000
	080 Move X0, [X0+544]
	081 Call 0x1C17D08
	082 Move X1, X0
	083 Move X0, X19
	084 Call 0x1C17DEC
	085 Move X0, X20
	086 Call 0x1C17F18
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Move X21, X0
	089 Move X0, X21
	090 Call 0x3EB2AD0
	091 Move X20, [X0]
	092 Call 0x3EB2AE0
	093 Move X20, X31
	094 Move X21, X0
	095 Compare X19, 0
	096 JumpIfEqual {118}
	097 Move X8, [X19]
	098 Move X1, [X22]
	099 NotImplemented "Instruction LDRH not yet implemented."
	100 Compare X9, 0
	101 JumpIfEqual {108}
	102 Move X10, [X8+176]
	103 Add X10, X10, 8
	104 NotImplemented "Instruction LDUR not yet implemented."
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Subtract X9, X9, 1
	107 Add X10, X10, 16
	108 Move X0, X19
	109 Move W2, W31
	110 Call 0x1C5D788
	111 NotImplemented "Instruction LDRSW not yet implemented."
	112 Add X8, X8, X9
	113 Add X0, X8, 312
	114 Move X8, [X0]
	115 Move X1, [X0+8]
	116 Move X0, X19
	117 NotImplemented "Instruction BLR not yet implemented."
	118 Compare X20, 0
	119 JumpIfNotEqual {122}
	120 Move X0, X21
	121 Call 0x1D2D690
	122 Move X0, X20
	123 Call 0x1C17F18
	124 Call 0x1991590

Method: System.Void WriteTo(System.IO.Stream stream)

Disassembly:
	0x03804924 LDRB W8, [X20 + 0x431]
	0x03804928 MOV X19, X0
	0x0380492C TBNZ X8, 0x0, 0x3804950
	0x03804930 ADRP X0, 0x8EF000
	0x03804934 LDR X0, [X0 + 0xE00]
	0x03804938 BL 0x1C16CF4
	0x0380493C ADRP X0, 0x946000
	0x03804940 LDR X0, [X0 + 0x238]
	0x03804944 BL 0x1C16CF4
	0x03804948 MOVZ W8, 0x1
	0x0380494C STRB W8, [X20 + 0x431]
	0x03804950 MOV X0, X19
	0x03804954 MOV X1, X31
	0x03804958 BL 0x32277A8
	0x0380495C TBNZ X0, 0x0, 0x3804A18
	0x03804960 ADRP X20, 0x946000
	0x03804964 ADRP X22, 0x8EF000
	0x03804968 LDR X20, [X20 + 0x238]
	0x0380496C LDR X22, [X22 + 0xE00]
	0x03804970 MOV X0, X19
	0x03804974 MOV X1, X31
	0x03804978 BL 0x32ED1E0
	0x0380497C LDR X8, [X20]
	0x03804980 MOV X19, X0
	0x03804984 LDR W9, [X8 + 0xE0]
	0x03804988 CBNZ W9, 0x3804994
	0x0380498C MOV X0, X8
	0x03804990 BL 0x1C16DFC
	0x03804994 MOV X0, X19
	0x03804998 BL 0x3804B14
	0x0380499C MOV X21, X0
	0x038049A0 MOV X20, X31
	0x038049A4 CBZ X19, 0x3804A00
	0x038049A8 LDR X8, [X19]
	0x038049AC LDR X1, [X22]
	0x038049B0 LDRH W9, [X8 + 0x12E]
	0x038049B4 CBZ X9, 0x38049D8
	0x038049B8 LDR X10, [X8 + 0xB0]
	0x038049BC ADD X10, X10, 0x8
	0x038049C0 LDUR X11, [X10 - 0x8]
	0x038049C4 CMP X11, X1
	0x038049C8 B.EQ 0x38049E8
	0x038049CC SUBS X9, X9, 0x1
	0x038049D0 ADD X10, X10, 0x10
	0x038049D4 B.NE 0x38049C0
	0x038049D8 MOV X0, X19
	0x038049DC MOV W2, W31
	0x038049E0 BL 0x1C5C788
	0x038049E4 B 0x38049F4
	0x038049E8 LDRSW X9, [X10]
	0x038049EC ADD X8, X8, X9, 0x4, LSL
	0x038049F0 ADD X0, X8, 0x138
	0x038049F4 LDP X8, X1, [X0]
	0x038049F8 MOV X0, X19
	0x038049FC BLR X8
	0x03804A00 CBNZ X20, 0x3804A60
	0x03804A04 MOV X0, X21
	0x03804A08 LDP X20, X19, [X31 + 0x20]
	0x03804A0C LDP X22, X21, [X31 + 0x10]
	0x03804A10 LDR X30, [X31], #0x30
	0x03804A14 RET
	0x03804A18 ADRP X0, 0x8F4000
	0x03804A1C LDR X0, [X0 + 0x528]
	0x03804A20 BL 0x1C16D08
	0x03804A24 BL 0x1C16F10
	0x03804A28 MOV X19, X0
	0x03804A2C ADRP X0, 0x946000
	0x03804A30 LDR X0, [X0 + 0x218]
	0x03804A34 BL 0x1C16D08
	0x03804A38 MOV X1, X0
	0x03804A3C MOV X0, X19
	0x03804A40 MOV X2, X31
	0x03804A44 BL 0x330E100
	0x03804A48 ADRP X0, 0x946000
	0x03804A4C LDR X0, [X0 + 0x280]
	0x03804A50 BL 0x1C16D08
	0x03804A54 MOV X1, X0
	0x03804A58 MOV X0, X19
	0x03804A5C BL 0x1C16DEC
	0x03804A60 MOV X0, X20
	0x03804A64 BL 0x1C16F18
	0x03804A68 B 0x3804A6C
	0x03804A6C MOV X21, X0
	0x03804A70 CMP W1, 0x1
	0x03804A74 B.NE 0x3804A94
	0x03804A78 MOV X0, X21
	0x03804A7C BL 0x3EB1AD0
	0x03804A80 LDR X20, [X0]
	0x03804A84 BL 0x3EB1AE0
	0x03804A88 MOV X21, X31
	0x03804A8C CBNZ X19, 0x38049A8
	0x03804A90 B 0x3804A00
	0x03804A94 MOV X20, X31
	0x03804A98 B 0x3804AA0
	0x03804A9C MOV X21, X0
	0x03804AA0 CBZ X19, 0x3804AFC
	0x03804AA4 LDR X8, [X19]
	0x03804AA8 LDR X1, [X22]
	0x03804AAC LDRH W9, [X8 + 0x12E]
	0x03804AB0 CBZ X9, 0x3804AD4
	0x03804AB4 LDR X10, [X8 + 0xB0]
	0x03804AB8 ADD X10, X10, 0x8
	0x03804ABC LDUR X11, [X10 - 0x8]
	0x03804AC0 CMP X11, X1
	0x03804AC4 B.EQ 0x3804AE4
	0x03804AC8 SUBS X9, X9, 0x1
	0x03804ACC ADD X10, X10, 0x10
	0x03804AD0 B.NE 0x3804ABC
	0x03804AD4 MOV X0, X19
	0x03804AD8 MOV W2, W31
	0x03804ADC BL 0x1C5C788
	0x03804AE0 B 0x3804AF0
	0x03804AE4 LDRSW X9, [X10]
	0x03804AE8 ADD X8, X8, X9, 0x4, LSL
	0x03804AEC ADD X0, X8, 0x138
	0x03804AF0 LDP X8, X1, [X0]
	0x03804AF4 MOV X0, X19
	0x03804AF8 BLR X8
	0x03804AFC CBNZ X20, 0x3804B08
	0x03804B00 MOV X0, X21
	0x03804B04 BL 0x1D2C690
	0x03804B08 MOV X0, X20
	0x03804B0C BL 0x1C16F18
	0x03804B10 BL 0x1990590
	0x03804B14 STR X30, [X31 - 0x20]!
	0x03804B18 STP X20, X19, [X31 + 0x10]
	0x03804B1C ADRP X20, 0xBDD000
	0x03804B20 LDRB W8, [X20 + 0x432]
	0x03804B24 MOV X19, X0
	0x03804B28 TBNZ X8, 0x0, 0x3804B40
	0x03804B2C ADRP X0, 0x946000
	0x03804B30 LDR X0, [X0 + 0x238]
	0x03804B34 BL 0x1C16CF4
	0x03804B38 MOVZ W8, 0x1
	0x03804B3C STRB W8, [X20 + 0x432]
	0x03804B40 CBZ X19, 0x3804B9C
	0x03804B44 LDR X8, [X19]
	0x03804B48 MOV X0, X19
	0x03804B4C LDP X9, X1, [X8 + 0x1A8]
	0x03804B50 BLR X9
	0x03804B54 TBZ X0, 0x0, 0x3804BD0
	0x03804B58 ADRP X8, 0x946000
	0x03804B5C LDR X8, [X8 + 0x238]
	0x03804B60 LDR X0, [X8]
	0x03804B64 BL 0x1C16F10
	0x03804B68 MOV X1, X31
	0x03804B6C MOV X20, X0
	0x03804B70 BL 0x33BDD8C
	0x03804B74 MOVZ W8, 0x100000
	0x03804B78 UNIMPLEMENTED
	0x03804B7C MOV X0, X20
	0x03804B80 MOV X1, X19
	0x03804B84 STUR V0, [X20 + 0x78]
	0x03804B88 BL 0x380424C
	0x03804B8C MOV X0, X20
	0x03804B90 LDP X20, X19, [X31 + 0x10]
	0x03804B94 LDR X30, [X31], #0x20
	0x03804B98 RET
	0x03804B9C ADRP X0, 0x8F4000
	0x03804BA0 LDR X0, [X0 + 0x528]
	0x03804BA4 BL 0x1C16D08
	0x03804BA8 BL 0x1C16F10
	0x03804BAC MOV X19, X0
	0x03804BB0 ADRP X0, 0x91E000
	0x03804BB4 LDR X0, [X0 + 0xD38]
	0x03804BB8 BL 0x1C16D08
	0x03804BBC MOV X1, X0
	0x03804BC0 MOV X0, X19
	0x03804BC4 MOV X2, X31
	0x03804BC8 BL 0x330E100
	0x03804BCC B 0x3804C14
	0x03804BD0 ADRP X0, 0x8F7000
	0x03804BD4 LDR X0, [X0 + 0x578]
	0x03804BD8 BL 0x1C16D08
	0x03804BDC BL 0x1C16F10
	0x03804BE0 MOV X19, X0
	0x03804BE4 ADRP X0, 0x946000
	0x03804BE8 LDR X0, [X0 + 0x288]
	0x03804BEC BL 0x1C16D08
	0x03804BF0 MOV X20, X0
	0x03804BF4 ADRP X0, 0x91E000
	0x03804BF8 LDR X0, [X0 + 0xD38]
	0x03804BFC BL 0x1C16D08
	0x03804C00 MOV X2, X0
	0x03804C04 MOV X0, X19
	0x03804C08 MOV X1, X20
	0x03804C0C MOV X3, X31
	0x03804C10 BL 0x330E16C
	0x03804C14 ADRP X0, 0x946000
	0x03804C18 LDR X0, [X0 + 0x290]
	0x03804C1C BL 0x1C16D08
	0x03804C20 MOV X1, X0
	0x03804C24 MOV X0, X19
	0x03804C28 BL 0x1C16DEC
	0x03804C2C STP X30, X21, [X31 - 0x20]!
	0x03804C30 STP X20, X19, [X31 + 0x10]
	0x03804C34 ADRP X21, 0xBDD000
	0x03804C38 ADRP X20, 0x946000
	0x03804C3C LDRB W8, [X21 + 0x433]
	0x03804C40 LDR X20, [X20 + 0x298]
	0x03804C44 MOV X19, X0
	0x03804C48 TBNZ X8, 0x0, 0x3804C60
	0x03804C4C ADRP X0, 0x946000
	0x03804C50 LDR X0, [X0 + 0x298]
	0x03804C54 BL 0x1C16CF4
	0x03804C58 MOVZ W8, 0x1
	0x03804C5C STRB W8, [X21 + 0x433]
	0x03804C60 MOV X0, X19
	0x03804C64 BL 0x3804C8C
	0x03804C68 LDR X0, [X20]
	0x03804C6C BL 0x1C16F10
	0x03804C70 MOV X1, X19
	0x03804C74 MOV X20, X0
	0x03804C78 BL 0x3804DA0
	0x03804C7C MOV X0, X20
	0x03804C80 LDP X20, X19, [X31 + 0x10]
	0x03804C84 LDP X30, X21, [X31], #0x20
	0x03804C88 RET
	0x03804C8C STP X30, X23, [X31 - 0x30]!
	0x03804C90 STP X22, X21, [X31 + 0x10]
	0x03804C94 STP X20, X19, [X31 + 0x20]
	0x03804C98 ADRP X20, 0xBDD000
	0x03804C9C LDRB W8, [X20 + 0x435]
	0x03804CA0 MOV X19, X0
	0x03804CA4 TBNZ X8, 0x0, 0x3804CEC
	0x03804CA8 ADRP X0, 0x941000
	0x03804CAC LDR X0, [X0 + 0x6F8]
	0x03804CB0 BL 0x1C16CF4
	0x03804CB4 ADRP X0, 0x8F0000
	0x03804CB8 LDR X0, [X0 + 0xE70]
	0x03804CBC BL 0x1C16CF4
	0x03804CC0 ADRP X0, 0x946000
	0x03804CC4 LDR X0, [X0 + 0x1F0]
	0x03804CC8 BL 0x1C16CF4
	0x03804CCC ADRP X0, 0x946000
	0x03804CD0 LDR X0, [X0 + 0x2A0]
	0x03804CD4 BL 0x1C16CF4
	0x03804CD8 ADRP X0, 0x917000
	0x03804CDC LDR X0, [X0 + 0x270]
	0x03804CE0 BL 0x1C16CF4
	0x03804CE4 MOVZ W8, 0x1
	0x03804CE8 STRB W8, [X20 + 0x435]
	0x03804CEC LDRB W8, [X19 + 0x14]
	0x03804CF0 CBZ W8, 0x3804D90
	0x03804CF4 ADRP X8, 0x917000
	0x03804CF8 LDR X8, [X8 + 0x270]
	0x03804CFC ADRP X23, 0x941000
	0x03804D00 ADRP X20, 0x946000
	0x03804D04 ADRP X22, 0x8F0000
	0x03804D08 LDR X0, [X8]
	0x03804D0C ADRP X21, 0x946000
	0x03804D10 LDR W8, [X0 + 0xE0]
	0x03804D14 LDR X23, [X23 + 0x6F8]
	0x03804D18 LDR X20, [X20 + 0x2A0]
	0x03804D1C LDR X22, [X22 + 0xE70]
	0x03804D20 LDR X21, [X21 + 0x1F0]
	0x03804D24 CBNZ W8, 0x3804D2C
	0x03804D28 BL 0x1C16DFC
	0x03804D2C MOV X0, X31
	0x03804D30 BL 0x376F8E0
	0x03804D34 LDR X0, [X23]
	0x03804D38 BL 0x1C16F10
	0x03804D3C LDR X2, [X20]
	0x03804D40 MOV X1, X19
	0x03804D44 MOV X3, X31
	0x03804D48 MOV X20, X0
	0x03804D4C BL 0x2A75DEC
	0x03804D50 MOV X1, X20
	0x03804D54 BL 0x37FC510
	0x03804D58 AND X0, X0, 0xFF
	0x03804D5C MOV X1, X31
	0x03804D60 BL 0x376F8E8
	0x03804D64 LDR X0, [X22]
	0x03804D68 BL 0x1C16F10
	0x03804D6C LDR X2, [X21]
	0x03804D70 MOV X1, X19
	0x03804D74 MOV X3, X31
	0x03804D78 MOV X20, X0
	0x03804D7C BL 0x3314368
	0x03804D80 MOV X0, X20
	0x03804D84 MOV X1, X31
	0x03804D88 BL 0x377033C
	0x03804D8C STRB W31, [X19 + 0x14]
	0x03804D90 LDP X20, X19, [X31 + 0x20]
	0x03804D94 LDP X22, X21, [X31 + 0x10]
	0x03804D98 LDP X30, X23, [X31], #0x30
	0x03804D9C RET
	0x03804DA0 STR X30, [X31 - 0x20]!
	0x03804DA4 STP X20, X19, [X31 + 0x10]
	0x03804DA8 MOV X19, X1
	0x03804DAC MOV X1, X31
	0x03804DB0 MOV X20, X0
	0x03804DB4 BL 0x33BDD8C
	0x03804DB8 CBZ X19, 0x3804DCC
	0x03804DBC STR X19, [X20 + 0x18]
	0x03804DC0 LDP X20, X19, [X31 + 0x10]
	0x03804DC4 LDR X30, [X31], #0x20
	0x03804DC8 RET
	0x03804DCC ADRP X0, 0x8F4000
	0x03804DD0 LDR X0, [X0 + 0x528]
	0x03804DD4 BL 0x1C16D08
	0x03804DD8 BL 0x1C16F10
	0x03804DDC MOV X19, X0
	0x03804DE0 ADRP X0, 0x946000
	0x03804DE4 LDR X0, [X0 + 0x2A8]
	0x03804DE8 BL 0x1C16D08
	0x03804DEC MOV X1, X0
	0x03804DF0 MOV X0, X19
	0x03804DF4 MOV X2, X31
	0x03804DF8 BL 0x330E100
	0x03804DFC ADRP X0, 0x946000
	0x03804E00 LDR X0, [X0 + 0x2B0]
	0x03804E04 BL 0x1C16D08
	0x03804E08 MOV X1, X0
	0x03804E0C MOV X0, X19
	0x03804E10 BL 0x1C16DEC
	0x03804E14 STR X30, [X31 - 0x60]!
	0x03804E18 STP X28, X27, [X31 + 0x10]
	0x03804E1C STP X26, X25, [X31 + 0x20]
	0x03804E20 STP X24, X23, [X31 + 0x30]
	0x03804E24 STP X22, X21, [X31 + 0x40]
	0x03804E28 STP X20, X19, [X31 + 0x50]
	0x03804E2C CMP X1, 0x0
	0x03804E30 B.LE 0x3804FAC
	0x03804E34 LDR X8, [X0 + 0x78]
	0x03804E38 MOV X20, X1
	0x03804E3C MOV X19, X0
	0x03804E40 CMP X8, X1
	0x03804E44 B.EQ 0x3804F74
	0x03804E48 CMP X2, X20
	0x03804E4C CSEL X23, X20, X2, LT
	0x03804E50 MOVZ W1, 0x4
	0x03804E54 MOVZ W2, 0x4
	0x03804E58 MOV X0, X20
	0x03804E5C MOV X3, X31
	0x03804E60 BL 0x3C00000
	0x03804E64 CBZ X0, 0x3804F78
	0x03804E68 LDR X8, [X19 + 0x90]
	0x03804E6C MOV X21, X0
	0x03804E70 CMP X8, 0x1
	0x03804E74 B.LT 0x3804F40
	0x03804E78 LDR X8, [X19 + 0x78]
	0x03804E7C CMP X8, X20
	0x03804E80 B.GT 0x3804E8C
	0x03804E84 LDRB W8, [X19 + 0xB8]
	0x03804E88 CBZ W8, 0x3804F94
	0x03804E8C LDR X1, [X19 + 0xA8]
	0x03804E90 MOV W25, W31
	0x03804E94 MOV W24, W31
	0x03804E98 MOVZ W27, 0x1
	0x03804E9C STR X1, [X31 + 0x8]
	0x03804EA0 LDR X26, [X19 + 0x98]
	0x03804EA4 MOV X22, X21
	0x03804EA8 CBZ X1, 0x3804EB4
	0x03804EAC LDRH W8, [X1 + 0x4]
	0x03804EB0 B 0x3804EB8
	0x03804EB4 MOV W8, W31
	0x03804EB8 ADD W9, W8, 0x4
	0x03804EBC ANDS W31, W8, 0x3
	0x03804EC0 AND W9, W9, 0x1FFFC
	0x03804EC4 CSEL W28, W8, W9, EQ
	0x03804EC8 CMP X26, X20
	0x03804ECC B.GT 0x3804F00
	0x03804ED0 MOV W2, W8
	0x03804ED4 MOV X0, X22
	0x03804ED8 MOV X3, X31
	0x03804EDC BL 0x3BFF954
	0x03804EE0 LDRH W8, [X22 + 0x4]
	0x03804EE4 ADD W24, W28, W24
	0x03804EE8 ADD W25, W25, 0x1
	0x03804EEC AND W9, W8, 0xFFFC
	0x03804EF0 ANDS W31, W8, 0x3
	0x03804EF4 ADD W9, W9, 0x4
	0x03804EF8 CSEL W8, W8, W9, EQ
	0x03804EFC ADD X22, X8, X22
	0x03804F00 ADD X1, X31, 0x8
	0x03804F04 MOV X0, X19
	0x03804F08 BL 0x3805010
	0x03804F0C TBZ X0, 0x0, 0x3804F30
	0x03804F10 LDR X8, [X19 + 0x90]
	0x03804F14 CMP X8, W27, SXTW
	0x03804F18 B.LE 0x3804F30
	0x03804F1C LDR X1, [X31 + 0x8]
	0x03804F20 SUB X26, X26, W28, UXTW
	0x03804F24 ADD W27, W27, 0x1
	0x03804F28 CBNZ X1, 0x3804EAC
	0x03804F2C B 0x3804EB4
	0x03804F30 SXTW X8, W25
	0x03804F34 SXTW X9, W24
	0x03804F38 STRB W31, [X19 + 0xB8]
	0x03804F3C STP X8, X9, [X19 + 0x90]
	0x03804F40 LDR X0, [X19 + 0xA0]
	0x03804F44 CBZ X0, 0x3804F54
	0x03804F48 MOVZ W1, 0x4
	0x03804F4C MOV X2, X31
	0x03804F50 BL 0x3C00054
	0x03804F54 LDR X8, [X19 + 0x98]
	0x03804F58 LDR W9, [X19 + 0x10]
	0x03804F5C STP X21, X21, [X19 + 0xA0]
	0x03804F60 STP X20, X23, [X19 + 0x78]
	0x03804F64 ADD X8, X8, X21
	0x03804F68 ADD W9, W9, 0x1
	0x03804F6C STR X8, [X19 + 0xB0]
	0x03804F70 STR W9, [X19 + 0x10]
	0x03804F74 MOVZ W0, 0x1
	0x03804F78 LDP X20, X19, [X31 + 0x50]
	0x03804F7C LDP X22, X21, [X31 + 0x40]
	0x03804F80 LDP X24, X23, [X31 + 0x30]
	0x03804F84 LDP X26, X25, [X31 + 0x20]
	0x03804F88 LDP X28, X27, [X31 + 0x10]
	0x03804F8C LDR X30, [X31], #0x60
	0x03804F90 RET
	0x03804F94 LDR X1, [X19 + 0xA8]
	0x03804F98 LDR X2, [X19 + 0x98]
	0x03804F9C MOV X0, X21
	0x03804FA0 MOV X3, X31
	0x03804FA4 BL 0x3BFF954
	0x03804FA8 B 0x3804F40
	0x03804FAC ADRP X0, 0x8F7000
	0x03804FB0 LDR X0, [X0 + 0x578]
	0x03804FB4 BL 0x1C16D08
	0x03804FB8 BL 0x1C16F10
	0x03804FBC MOV X19, X0
	0x03804FC0 ADRP X0, 0x946000
	0x03804FC4 LDR X0, [X0 + 0x2B8]
	0x03804FC8 BL 0x1C16D08
	0x03804FCC MOV X20, X0
	0x03804FD0 ADRP X0, 0x946000
	0x03804FD4 LDR X0, [X0 + 0x2C0]
	0x03804FD8 BL 0x1C16D08
	0x03804FDC MOV X2, X0
	0x03804FE0 MOV X0, X19
	0x03804FE4 MOV X1, X20
	0x03804FE8 MOV X3, X31
	0x03804FEC BL 0x330E16C
	0x03804FF0 ADRP X0, 0x946000
	0x03804FF4 LDR X0, [X0 + 0x2C8]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X21, 0xBDE000
	015 Move W8, [X21+1070]
	016 Move X19, X1
	017 Move X20, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {54}
	022 Move X0, 0x8F0000
	023 Move X0, [X0+2416]
	024 Call 0x1C17CF4
	025 Move X0, 0x947000
	026 Move X0, [X0+552]
	027 Call 0x1C17CF4
	028 Move X0, 0x922000
	029 Move X0, [X0+608]
	030 Call 0x1C17CF4
	031 Move X0, 0x8F0000
	032 Move X0, [X0+1560]
	033 Call 0x1C17CF4
	034 Move X0, 0x8F0000
	035 Move X0, [X0+3584]
	036 Call 0x1C17CF4
	037 Move X0, 0x947000
	038 Move X0, [X0+560]
	039 Call 0x1C17CF4
	040 Move X0, 0x8F0000
	041 Move X0, [X0+3608]
	042 Call 0x1C17CF4
	043 Move X0, 0x947000
	044 Move X0, [X0+568]
	045 Call 0x1C17CF4
	046 Move X0, 0x918000
	047 Move X0, [X0+624]
	048 Call 0x1C17CF4
	049 Move X0, 0x8F2000
	050 Move X0, [X0+632]
	051 Call 0x1C17CF4
	052 Move W8, 1
	053 Move [X21+1070], W8
	054 Compare X19, 0
	055 JumpIfEqual {381}
	056 Move X8, [X19]
	057 Move X0, X19
	058 Move X9, [X8+440]
	059 Move X1, [X8+448]
	060 NotImplemented "Instruction BLR not yet implemented."
	061 Move TEMP, X0
	062 And TEMP, TEMP, 1
	063 Compare TEMP, 1
	064 JumpIfNotEqual {393}
	065 Move X8, 0x922000
	066 Move X8, [X8+608]
	067 Move X22, 0x918000
	068 Move X0, [X8]
	069 Move X22, [X22+624]
	070 Call 0x1C17F10
	071 Move X1, X19
	072 Move X2, X31
	073 Move X21, X0
	074 Call BinaryWriter..ctor, X0, X1
	075 Move X0, [X22]
	076 Move W8, [X0+224]
	077 Compare W8, 0
	078 JumpIfNotEqual {80}
	079 Call 0x1C17DFC
	080 Move X0, X31
	081 Call InputSystem.get_settings
	082 Compare X0, 0
	083 JumpIfEqual {379}
	084 Move X23, 0x947000
	085 Move X23, [X23+568]
	086 Move W9, [X0+32]
	087 Move X8, [X23]
	088 NotImplemented "Instruction CMP not yet implemented."
	089 NotImplemented "Instruction CSET not yet implemented."
	090 Move W10, [X8+224]
	091 Compare W10, 0
	092 JumpIfNotEqual {95}
	093 Move X0, X8
	094 Call 0x1C17DFC
	095 Add X0, X31, 8
	096 Move W1, 73
	097 Move W2, 69
	098 Move W3, 86
	099 Move W4, 84
	100 Move X5, X31
	101 Move [X31+8], W31
	102 Call FourCC..ctor, X0, X1, X2, X3, X4
	103 Compare X21, 0
	104 JumpIfEqual {379}
	105 Move X8, [X21]
	106 Move W1, [X31+8]
	107 Move X24, 0x8F0000
	108 Move X0, X21
	109 Move X9, [X8+584]
	110 Move X2, [X8+592]
	111 Move X24, [X24+2416]
	112 NotImplemented "Instruction BLR not yet implemented."
	113 Move X8, [X23]
	114 Move X9, [X21]
	115 Move X0, X21
	116 Move X8, [X8+184]
	117 Move X10, [X9+584]
	118 Move X2, [X9+592]
	119 Move W1, [X8]
	120 NotImplemented "Instruction BLR not yet implemented."
	121 Move X8, [X21]
	122 Move X0, X21
	123 Move W1, W22
	124 Move X9, [X8+584]
	125 Move X2, [X8+592]
	126 NotImplemented "Instruction BLR not yet implemented."
	127 Move X0, [X24]
	128 Move W8, [X0+224]
	129 Compare W8, 0
	130 JumpIfNotEqual {132}
	131 Call 0x1C17DFC
	132 Move X26, 0x8F0000
	133 Move X26, [X26+3584]
	134 Move X0, X31
	135 Call Application.get_platform
	136 Move X8, [X21]
	137 Move W1, W0
	138 Move X0, X21
	139 Move X9, [X8+584]
	140 Move X2, [X8+592]
	141 NotImplemented "Instruction BLR not yet implemented."
	142 Move X8, [X21]
	143 Move X1, [X20+144]
	144 Move X0, X21
	145 Move X9, [X8+632]
	146 Move X2, [X8+640]
	147 NotImplemented "Instruction BLR not yet implemented."
	148 Move X8, [X21]
	149 Move X1, [X20+152]
	150 Move X0, X21
	151 Move X9, [X8+632]
	152 Move X2, [X8+640]
	153 NotImplemented "Instruction BLR not yet implemented."
	154 Move X0, X20
	155 Call InputEventTrace.GetEnumerator, X0
	156 Move X22, X0
	157 Compare X0, 0
	158 JumpIfEqual {416}
	159 Move X27, 0x8F0000
	160 Move X28, 0x947000
	161 Move X29, 0x8F0000
	162 Move X27, [X27+3608]
	163 Move X28, [X28+560]
	164 Move X29, [X29+1560]
	165 Move X8, [X22]
	166 Move X1, [X27]
	167 NotImplemented "Instruction LDRH not yet implemented."
	168 Compare X9, 0
	169 JumpIfEqual {176}
	170 Move X10, [X8+176]
	171 Add X10, X10, 8
	172 NotImplemented "Instruction LDUR not yet implemented."
	173 NotImplemented "Instruction CMP not yet implemented."
	174 Subtract X9, X9, 1
	175 Add X10, X10, 16
	176 Move X0, X22
	177 Move W2, W31
	178 Call 0x1C5D788
	179 NotImplemented "Instruction LDRSW not yet implemented."
	180 Add X8, X8, X9
	181 Add X0, X8, 312
	182 Move X8, [X0]
	183 Move X1, [X0+8]
	184 Move X0, X22
	185 NotImplemented "Instruction BLR not yet implemented."
	186 Move TEMP, X0
	187 And TEMP, TEMP, 1
	188 Compare TEMP, 1
	189 JumpIfNotEqual {245}
	190 Move X8, [X22]
	191 Move X1, [X28]
	192 NotImplemented "Instruction LDRH not yet implemented."
	193 Compare X9, 0
	194 JumpIfEqual {201}
	195 Move X10, [X8+176]
	196 Add X10, X10, 8
	197 NotImplemented "Instruction LDUR not yet implemented."
	198 NotImplemented "Instruction CMP not yet implemented."
	199 Subtract X9, X9, 1
	200 Add X10, X10, 16
	201 Move X0, X22
	202 Move W2, W31
	203 Call 0x1C5D788
	204 NotImplemented "Instruction LDRSW not yet implemented."
	205 Add X8, X8, X9
	206 Add X0, X8, 312
	207 Move X8, [X0]
	208 Move X1, [X0+8]
	209 Move X0, X22
	210 NotImplemented "Instruction BLR not yet implemented."
	211 Move X23, X0
	212 Compare X0, 0
	213 JumpIfEqual {215}
	214 NotImplemented "Instruction LDRH not yet implemented."
	215 Move W25, W31
	216 Move X0, [X29]
	217 Move W1, W25
	218 Call 0x1C17D6C
	219 Move X24, X0
	220 Compare X0, 0
	221 JumpIfEqual {226}
	222 Move W8, [X24+24]
	223 Add X9, X24, 32
	224 NotImplemented "Instruction CMP not yet implemented."
	225 NotImplemented "Instruction CSEL not yet implemented."
	226 Move X0, X31
	227 Move W2, W25
	228 Move X1, X23
	229 Move X3, X31
	230 Call UnsafeUtility.MemCpy, X0, X1, X2
	231 Move X8, [X21]
	232 Move X9, [X8+472]
	233 Move X2, [X8+480]
	234 Move X0, X21
	235 Move X1, X24
	236 NotImplemented "Instruction BLR not yet implemented."
	237 NotImplemented "Instruction CMP not yet implemented."
	238 Call 0x3EB2AD0
	239 Move X23, [X0]
	240 Call 0x3EB2AE0
	241 Compare X23, 0
	242 JumpIfEqual {165}
	243 Move X0, X23
	244 Call 0x1C17F18
	245 Move X23, X31
	246 Move W24, 14
	247 Compare X22, 0
	248 JumpIfEqual {270}
	249 Move X8, [X22]
	250 Move X1, [X26]
	251 NotImplemented "Instruction LDRH not yet implemented."
	252 Compare X9, 0
	253 JumpIfEqual {260}
	254 Move X10, [X8+176]
	255 Add X10, X10, 8
	256 NotImplemented "Instruction LDUR not yet implemented."
	257 NotImplemented "Instruction CMP not yet implemented."
	258 Subtract X9, X9, 1
	259 Add X10, X10, 16
	260 Move X0, X22
	261 Move W2, W31
	262 Call 0x1C5D788
	263 NotImplemented "Instruction LDRSW not yet implemented."
	264 Add X8, X8, X9
	265 Add X0, X8, 312
	266 Move X8, [X0]
	267 Move X1, [X0+8]
	268 Move X0, X22
	269 NotImplemented "Instruction BLR not yet implemented."
	270 Compare X23, 0
	271 JumpIfNotEqual {417}
	272 NotImplemented "Instruction CMP not yet implemented."
	273 Compare W24, 0
	274 JumpIfNotEqual {365}
	275 Move X8, [X21]
	276 Move X22, 0x947000
	277 Move X0, X21
	278 Move X9, [X8+424]
	279 Move X1, [X8+432]
	280 Move X22, [X22+552]
	281 NotImplemented "Instruction BLR not yet implemented."
	282 Move X8, [X19]
	283 Move X0, X19
	284 Move X9, [X8+504]
	285 Move X1, [X8+512]
	286 NotImplemented "Instruction BLR not yet implemented."
	287 Move X8, [X20+192]
	288 Move X1, [X22]
	289 Move X22, X0
	290 Move X0, X8
	291 Call ArrayHelpers.LengthSafe, X0
	292 Move X8, [X21]
	293 Move W23, W0
	294 Move X0, X21
	295 Move W1, W23
	296 Move X9, [X8+584]
	297 Move X2, [X8+592]
	298 NotImplemented "Instruction BLR not yet implemented."
	299 NotImplemented "Instruction CMP not yet implemented."
	300 Move X26, 0x8F2000
	301 Move X26, [X26+632]
	302 Move X24, X31
	303 Move W23, W23
	304 Move W25, 32
	305 Move X8, [X20+192]
	306 Compare X8, 0
	307 JumpIfEqual {379}
	308 Move W9, [X8+24]
	309 NotImplemented "Instruction CMP not yet implemented."
	310 Move X9, [X21]
	311 Add X27, X8, X25
	312 Move W1, [X27]
	313 Move X0, X21
	314 Move X8, [X9+584]
	315 Move X2, [X9+592]
	316 NotImplemented "Instruction BLR not yet implemented."
	317 Move X8, [X21]
	318 Move X1, [X27+8]
	319 Move X0, X21
	320 Move X9, [X8+664]
	321 Move X2, [X8+672]
	322 NotImplemented "Instruction BLR not yet implemented."
	323 Move X8, [X21]
	324 Move W1, [X27+16]
	325 Move X0, X21
	326 Move X9, [X8+584]
	327 Move X2, [X8+592]
	328 NotImplemented "Instruction BLR not yet implemented."
	329 Move X8, [X21]
	330 Move W1, [X27+20]
	331 Move X0, X21
	332 Move X9, [X8+584]
	333 Move X2, [X8+592]
	334 NotImplemented "Instruction BLR not yet implemented."
	335 Move X1, [X27+24]
	336 Compare X1, 0
	337 JumpIfNotEqual {341}
	338 Move X8, [X26]
	339 Move X8, [X8+184]
	340 Move X1, [X8]
	341 Move X8, [X21]
	342 Move X0, X21
	343 Move X9, [X8+664]
	344 Move X2, [X8+672]
	345 NotImplemented "Instruction BLR not yet implemented."
	346 Add X24, X24, 1
	347 NotImplemented "Instruction CMP not yet implemented."
	348 Add X25, X25, 32
	349 Move X8, [X21]
	350 Move X0, X21
	351 Move X9, [X8+424]
	352 Move X1, [X8+432]
	353 NotImplemented "Instruction BLR not yet implemented."
	354 Move X8, [X19]
	355 Move X0, X19
	356 Move X9, [X8+504]
	357 Move X1, [X8+512]
	358 NotImplemented "Instruction BLR not yet implemented."
	359 Move X8, [X21]
	360 Subtract X1, X0, X22
	361 Move X0, X21
	362 Move X9, [X8+616]
	363 Move X2, [X8+624]
	364 NotImplemented "Instruction BLR not yet implemented."
	365 Move X20, [X31+96]
	366 Move X19, [X31+104]
	367 Move X22, [X31+80]
	368 Move X21, [X31+88]
	369 Move X24, [X31+64]
	370 Move X23, [X31+72]
	371 Move X26, [X31+48]
	372 Move X25, [X31+56]
	373 Move X28, [X31+32]
	374 Move X27, [X31+40]
	375 Move X29, [X31+16]
	376 Move X30, [X31+24]
	377 Add X31, X31, 112
	378 Return 
	379 Call 0x1C17F20
	380 Call 0x1C17F28
	381 Move X0, 0x8F5000
	382 Move X0, [X0+1320]
	383 Call 0x1C17D08
	384 Call 0x1C17F10
	385 Move X19, X0
	386 Move X0, 0x91F000
	387 Move X0, [X0+3384]
	388 Call 0x1C17D08
	389 Move X1, X0
	390 Move X0, X19
	391 Move X2, X31
	392 Call ArgumentNullException..ctor, X0, X1
	393 Move X0, 0x8F8000
	394 Move X0, [X0+1400]
	395 Call 0x1C17D08
	396 Call 0x1C17F10
	397 Move X19, X0
	398 Move X0, 0x947000
	399 Move X0, [X0+576]
	400 Call 0x1C17D08
	401 Move X20, X0
	402 Move X0, 0x91F000
	403 Move X0, [X0+3384]
	404 Call 0x1C17D08
	405 Move X2, X0
	406 Move X0, X19
	407 Move X1, X20
	408 Move X3, X31
	409 Call ArgumentException..ctor, X0, X1, X2
	410 Move X0, 0x947000
	411 Move X0, [X0+584]
	412 Call 0x1C17D08
	413 Move X1, X0
	414 Move X0, X19
	415 Call 0x1C17DEC
	416 Call 0x1C17F20
	417 Move X0, X23
	418 Call 0x1C17F18
	419 Compare X23, 0
	420 JumpIfEqual {423}
	421 Move X0, X23
	422 Call 0x1C17F18
	423 NotImplemented "Instruction CMP not yet implemented."
	424 Call 0x3EB2AD0
	425 Move X23, [X0]
	426 Call 0x3EB2AE0
	427 Move W24, W31
	428 Compare X22, 0
	429 JumpIfNotEqual {249}
	430 Move X19, X0
	431 Move X23, X31
	432 Move X19, X0
	433 Compare X22, 0
	434 JumpIfEqual {456}
	435 Move X8, [X22]
	436 Move X1, [X26]
	437 NotImplemented "Instruction LDRH not yet implemented."
	438 Compare X9, 0
	439 JumpIfEqual {446}
	440 Move X10, [X8+176]
	441 Add X10, X10, 8
	442 NotImplemented "Instruction LDUR not yet implemented."
	443 NotImplemented "Instruction CMP not yet implemented."
	444 Subtract X9, X9, 1
	445 Add X10, X10, 16
	446 Move X0, X22
	447 Move W2, W31
	448 Call 0x1C5D788
	449 NotImplemented "Instruction LDRSW not yet implemented."
	450 Add X8, X8, X9
	451 Add X0, X8, 312
	452 Move X8, [X0]
	453 Move X1, [X0+8]
	454 Move X0, X22
	455 NotImplemented "Instruction BLR not yet implemented."
	456 Compare X23, 0
	457 JumpIfNotEqual {460}
	458 Move X0, X19
	459 Call 0x1D2D690
	460 Move X0, X23
	461 Call 0x1C17F18
	462 Call 0x1991590

Method: System.Void ReadFrom(System.String filePath)

Disassembly:
	0x03805080 MOV W0, W31
	0x03805084 RET
	0x03805088 LDR W8, [X0 + 0x10]
	0x0380508C STP X31, X31, [X0 + 0x90]
	0x03805090 STP X31, X31, [X0 + 0xA8]
	0x03805094 STR X31, [X0 + 0xC0]
	0x03805098 ADD W8, W8, 0x1
	0x0380509C STR W8, [X0 + 0x10]
	0x038050A0 RET
	0x038050A4 STP X30, X21, [X31 - 0x20]!
	0x038050A8 STP X20, X19, [X31 + 0x10]
	0x038050AC ADRP X20, 0xBDC000
	0x038050B0 LDRB W8, [X20 + 0x434]
	0x038050B4 MOV X19, X0
	0x038050B8 TBNZ X8, 0x0, 0x3805100
	0x038050BC ADRP X0, 0x940000
	0x038050C0 LDR X0, [X0 + 0x6F8]
	0x038050C4 BL 0x1C16CF4
	0x038050C8 ADRP X0, 0x8EF000
	0x038050CC LDR X0, [X0 + 0xE70]
	0x038050D0 BL 0x1C16CF4
	0x038050D4 ADRP X0, 0x945000
	0x038050D8 LDR X0, [X0 + 0x1F0]
	0x038050DC BL 0x1C16CF4
	0x038050E0 ADRP X0, 0x945000
	0x038050E4 LDR X0, [X0 + 0x2A0]
	0x038050E8 BL 0x1C16CF4
	0x038050EC ADRP X0, 0x916000
	0x038050F0 LDR X0, [X0 + 0x270]
	0x038050F4 BL 0x1C16CF4
	0x038050F8 MOVZ W8, 0x1
	0x038050FC STRB W8, [X20 + 0x434]
	0x03805100 LDRB W8, [X19 + 0x14]
	0x03805104 CBNZ W8, 0x38051E0
	0x03805108 LDR X8, [X19 + 0xA0]
	0x0380510C CBNZ X8, 0x3805128
	0x03805110 LDR X0, [X19 + 0x78]
	0x03805114 MOVZ W1, 0x4
	0x03805118 MOVZ W2, 0x4
	0x0380511C MOV X3, X31
	0x03805120 BL 0x3C00000
	0x03805124 STR X0, [X19 + 0xA0]
	0x03805128 ADRP X21, 0x916000
	0x0380512C LDR X21, [X21 + 0x270]
	0x03805130 LDR X0, [X21]
	0x03805134 LDR W8, [X0 + 0xE0]
	0x03805138 CBNZ W8, 0x3805140
	0x0380513C BL 0x1C16DFC
	0x03805140 MOV X0, X31
	0x03805144 BL 0x376F8E0
	0x03805148 ADRP X8, 0x940000
	0x0380514C LDR X8, [X8 + 0x6F8]
	0x03805150 LDR X0, [X8]
	0x03805154 BL 0x1C16F10
	0x03805158 ADRP X8, 0x945000
	0x0380515C LDR X8, [X8 + 0x2A0]
	0x03805160 MOV X1, X19
	0x03805164 MOV X3, X31
	0x03805168 MOV X20, X0
	0x0380516C LDR X2, [X8]
	0x03805170 BL 0x2A75DEC
	0x03805174 MOV X1, X20
	0x03805178 BL 0x37FC234
	0x0380517C AND X0, X0, 0xFF
	0x03805180 MOV X1, X31
	0x03805184 BL 0x376F8E8
	0x03805188 LDRB W8, [X19 + 0xB9]
	0x0380518C CBZ W8, 0x38051D8
	0x03805190 ADRP X8, 0x8EF000
	0x03805194 LDR X8, [X8 + 0xE70]
	0x03805198 LDR X0, [X8]
	0x0380519C BL 0x1C16F10
	0x038051A0 ADRP X8, 0x945000
	0x038051A4 LDR X8, [X8 + 0x1F0]
	0x038051A8 MOV X1, X19
	0x038051AC MOV X3, X31
	0x038051B0 MOV X20, X0
	0x038051B4 LDR X2, [X8]
	0x038051B8 BL 0x3314368
	0x038051BC LDR X0, [X21]
	0x038051C0 LDR W8, [X0 + 0xE0]
	0x038051C4 CBNZ W8, 0x38051CC
	0x038051C8 BL 0x1C16DFC
	0x038051CC MOV X0, X20
	0x038051D0 MOV X1, X31
	0x038051D4 BL 0x3770214
	0x038051D8 MOVZ W8, 0x1
	0x038051DC STRB W8, [X19 + 0x14]
	0x038051E0 LDP X20, X19, [X31 + 0x10]
	0x038051E4 LDP X30, X21, [X31], #0x20
	0x038051E8 RET
	0x038051EC STP X30, X19, [X31 - 0x10]!
	0x038051F0 MOV X19, X0
	0x038051F4 LDR X0, [X0 + 0x78]
	0x038051F8 MOVZ W1, 0x4
	0x038051FC MOVZ W2, 0x4
	0x03805200 MOV X3, X31
	0x03805204 BL 0x3C00000
	0x03805208 STR X0, [X19 + 0xA0]
	0x0380520C LDP X30, X19, [X31], #0x10
	0x03805210 RET
	0x03805214 LDR X0, [X0 + 0xB0]
	0x03805218 RET
	0x0380521C STR X30, [X31 - 0x20]!
	0x03805220 STP X20, X19, [X31 + 0x10]
	0x03805224 MOV X20, X1
	0x03805228 MOV X1, X31
	0x0380522C MOV X19, X0
	0x03805230 BL 0x33BDD8C
	0x03805234 STR X20, [X19 + 0x10]
	0x03805238 CBZ X20, 0x3805250
	0x0380523C LDR W8, [X20 + 0x10]
	0x03805240 STR W8, [X19 + 0x18]
	0x03805244 LDP X20, X19, [X31 + 0x10]
	0x03805248 LDR X30, [X31], #0x20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xBDD000
	007 Move W8, [X21+1071]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x8EF000
	015 Move X0, [X0+3584]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1071], W8
	019 Move X0, X19
	020 Move X1, X31
	021 Call String.IsNullOrEmpty, X0
	022 Move TEMP, X0
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {67}
	026 Move X22, 0x8EF000
	027 Move X22, [X22+3584]
	028 Move X0, X19
	029 Move X1, X31
	030 Call File.OpenRead, X0
	031 Move X19, X0
	032 Move X0, X20
	033 Move X1, X19
	034 Call InputEventTrace.ReadFrom, X0, X1
	035 Move X20, X31
	036 Compare X19, 0
	037 JumpIfEqual {59}
	038 Move X8, [X19]
	039 Move X1, [X22]
	040 NotImplemented "Instruction LDRH not yet implemented."
	041 Compare X9, 0
	042 JumpIfEqual {49}
	043 Move X10, [X8+176]
	044 Add X10, X10, 8
	045 NotImplemented "Instruction LDUR not yet implemented."
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Subtract X9, X9, 1
	048 Add X10, X10, 16
	049 Move X0, X19
	050 Move W2, W31
	051 Call 0x1C5D788
	052 NotImplemented "Instruction LDRSW not yet implemented."
	053 Add X8, X8, X9
	054 Add X0, X8, 312
	055 Move X8, [X0]
	056 Move X1, [X0+8]
	057 Move X0, X19
	058 NotImplemented "Instruction BLR not yet implemented."
	059 Compare X20, 0
	060 JumpIfNotEqual {85}
	061 Move X20, [X31+32]
	062 Move X19, [X31+40]
	063 Move X22, [X31+16]
	064 Move X21, [X31+24]
	065 Move X30, [X31+48]
	066 Return 
	067 Move X0, 0x8F4000
	068 Move X0, [X0+1320]
	069 Call 0x1C17D08
	070 Call 0x1C17F10
	071 Move X19, X0
	072 Move X0, 0x946000
	073 Move X0, [X0+536]
	074 Call 0x1C17D08
	075 Move X1, X0
	076 Move X0, X19
	077 Move X2, X31
	078 Call ArgumentNullException..ctor, X0, X1
	079 Move X0, 0x946000
	080 Move X0, [X0+600]
	081 Call 0x1C17D08
	082 Move X1, X0
	083 Move X0, X19
	084 Call 0x1C17DEC
	085 Move X0, X20
	086 Call 0x1C17F18
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Move X21, X0
	089 Move X0, X21
	090 Call 0x3EB2AD0
	091 Move X20, [X0]
	092 Call 0x3EB2AE0
	093 Move X20, X31
	094 Move X21, X0
	095 Compare X19, 0
	096 JumpIfEqual {118}
	097 Move X8, [X19]
	098 Move X1, [X22]
	099 NotImplemented "Instruction LDRH not yet implemented."
	100 Compare X9, 0
	101 JumpIfEqual {108}
	102 Move X10, [X8+176]
	103 Add X10, X10, 8
	104 NotImplemented "Instruction LDUR not yet implemented."
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Subtract X9, X9, 1
	107 Add X10, X10, 16
	108 Move X0, X19
	109 Move W2, W31
	110 Call 0x1C5D788
	111 NotImplemented "Instruction LDRSW not yet implemented."
	112 Add X8, X8, X9
	113 Add X0, X8, 312
	114 Move X8, [X0]
	115 Move X1, [X0+8]
	116 Move X0, X19
	117 NotImplemented "Instruction BLR not yet implemented."
	118 Compare X20, 0
	119 JumpIfNotEqual {122}
	120 Move X0, X21
	121 Call 0x1D2D690
	122 Move X0, X20
	123 Call 0x1C17F18
	124 Call 0x1991590

Method: System.Void ReadFrom(System.IO.Stream stream)

Disassembly:
	0x0380524C RET
	0x03805250 BL 0x1C16F20
	0x03805254 B 0x3804028
	0x03805258 STP X30, X19, [X31 - 0x10]!
	0x0380525C MOV X19, X0
	0x03805260 BL 0x3804C8C
	0x03805264 MOV X0, X19
	0x03805268 LDP X30, X19, [X31], #0x10
	0x0380526C B 0x3805270
	0x03805270 STP X30, X19, [X31 - 0x10]!
	0x03805274 LDR W8, [X0 + 0x10]
	0x03805278 MOV X19, X0
	0x0380527C STP X31, X31, [X0 + 0x90]
	0x03805280 LDR X0, [X0 + 0xA0]
	0x03805284 ADD W8, W8, 0x1
	0x03805288 STP X31, X31, [X19 + 0xA8]
	0x0380528C STR W8, [X19 + 0x10]
	0x03805290 STR X31, [X19 + 0xC0]
	0x03805294 CBZ X0, 0x38052A8
	0x03805298 MOVZ W1, 0x4
	0x0380529C MOV X2, X31
	0x038052A0 BL 0x3C00054
	0x038052A4 STR X31, [X19 + 0xA0]
	0x038052A8 LDP X30, X19, [X31], #0x10
	0x038052AC RET
	0x038052B0 SUB X31, X31, 0x60
	0x038052B4 STR X30, [X31 + 0x30]
	0x038052B8 STP X22, X21, [X31 + 0x40]
	0x038052BC STP X20, X19, [X31 + 0x50]
	0x038052C0 MRS X21, 0xC000
	0x038052C4 LDR X8, [X21 + 0x28]
	0x038052C8 ADRP X20, 0xBDC000
	0x038052CC MOV X19, X0
	0x038052D0 STR X8, [X31 + 0x28]
	0x038052D4 LDRB W8, [X20 + 0x437]
	0x038052D8 TBNZ X8, 0x0, 0x3805314
	0x038052DC ADRP X0, 0x916000
	0x038052E0 LDR X0, [X0 + 0xED0]
	0x038052E4 BL 0x1C16CF4
	0x038052E8 ADRP X0, 0x945000
	0x038052EC LDR X0, [X0 + 0x238]
	0x038052F0 BL 0x1C16CF4
	0x038052F4 ADRP X0, 0x916000
	0x038052F8 LDR X0, [X0 + 0xEC8]
	0x038052FC BL 0x1C16CF4
	0x03805300 ADRP X0, 0x945000
	0x03805304 LDR X0, [X0 + 0x2D0]
	0x03805308 BL 0x1C16CF4
	0x0380530C MOVZ W8, 0x1
	0x03805310 STRB W8, [X20 + 0x437]
	0x03805314 STP X31, X31, [X31 + 0x10]
	0x03805318 STR W31, [X31 + 0x20]
	0x0380531C LDRB W8, [X19 + 0xB9]
	0x03805320 CBZ W8, 0x38053FC
	0x03805324 ADRP X8, 0x945000
	0x03805328 LDR X8, [X8 + 0x238]
	0x0380532C ADRP X20, 0x916000
	0x03805330 LDR X0, [X8]
	0x03805334 LDR W8, [X0 + 0xE0]
	0x03805338 LDR X20, [X20 + 0xEC8]
	0x0380533C CBNZ W8, 0x3805344
	0x03805340 BL 0x1C16DFC
	0x03805344 ADD X0, X31, 0x8
	0x03805348 MOVZ W1, 0x46
	0x0380534C MOVZ W2, 0x52
	0x03805350 MOVZ W3, 0x4D
	0x03805354 MOVZ W4, 0x45
	0x03805358 MOV X5, X31
	0x0380535C STR W31, [X31 + 0x8]
	0x03805360 BL 0x375AA28
	0x03805364 LDR X8, [X20]
	0x03805368 LDR X8, [X8 + 0xB8]
	0x0380536C LDR X20, [X8]
	0x03805370 CBZ X20, 0x3805420
	0x03805374 ADRP X10, 0x916000
	0x03805378 LDR X8, [X20]
	0x0380537C LDR X10, [X10 + 0xED0]
	0x03805380 LDR W22, [X31 + 0x8]
	0x03805384 LDRH W9, [X8 + 0x12E]
	0x03805388 LDR X1, [X10]
	0x0380538C CBZ X9, 0x38053B0
	0x03805390 LDR X10, [X8 + 0xB0]
	0x03805394 ADD X10, X10, 0x8
	0x03805398 LDUR X11, [X10 - 0x8]
	0x0380539C CMP X11, X1
	0x038053A0 B.EQ 0x38053C0
	0x038053A4 SUBS X9, X9, 0x1
	0x038053A8 ADD X10, X10, 0x10
	0x038053AC B.NE 0x3805398
	0x038053B0 MOVZ W2, 0x13
	0x038053B4 MOV X0, X20
	0x038053B8 BL 0x1C5C788
	0x038053BC B 0x38053D0
	0x038053C0 LDR W9, [X10]
	0x038053C4 ADD W9, W9, 0x13
	0x038053C8 ADD X8, X8, W9, 0x4, SXTW
	0x038053CC ADD X0, X8, 0x138
	0x038053D0 LDP X8, X1, [X0]
	0x038053D4 MOV X0, X20
	0x038053D8 BLR X8
	0x038053DC MOVZ W8, 0x14
	0x038053E0 ADD X1, X31, 0x10
	0x038053E4 MOV X0, X19
	0x038053E8 MOV X2, X31
	0x038053EC STR D0, [X31 + 0x18]
	0x038053F0 STP W22, W8, [X31 + 0x10]
	0x038053F4 STR W31, [X31 + 0x20]
	0x038053F8 BL 0x3805428
	0x038053FC LDR X8, [X21 + 0x28]
	0x03805400 LDR X9, [X31 + 0x28]
	0x03805404 CMP X8, X9
	0x03805408 B.NE 0x3805424
	0x0380540C LDP X20, X19, [X31 + 0x50]
	0x03805410 LDP X22, X21, [X31 + 0x40]
	0x03805414 LDR X30, [X31 + 0x30]
	0x03805418 ADD X31, X31, 0x60
	0x0380541C RET
	0x03805420 BL 0x1C16F20
	0x03805424 BL 0x3EB1B20
	0x03805428 SUB X31, X31, 0x90
	0x0380542C STP X30, X25, [X31 + 0x50]
	0x03805430 STP X24, X23, [X31 + 0x60]
	0x03805434 STP X22, X21, [X31 + 0x70]
	0x03805438 STP X20, X19, [X31 + 0x80]
	0x0380543C ADRP X22, 0xBDC000
	0x03805440 LDRB W8, [X22 + 0x438]
	0x03805444 MOV X20, X2
	0x03805448 MOV X21, X1
	0x0380544C MOV X19, X0
	0x03805450 TBNZ X8, 0x0, 0x38054C8
	0x03805454 ADRP X0, 0x945000
	0x03805458 LDR X0, [X0 + 0x2D8]
	0x0380545C BL 0x1C16CF4
	0x03805460 ADRP X0, 0x945000
	0x03805464 LDR X0, [X0 + 0x2E0]
	0x03805468 BL 0x1C16CF4
	0x0380546C ADRP X0, 0x945000
	0x03805470 LDR X0, [X0 + 0x2E8]
	0x03805474 BL 0x1C16CF4
	0x03805478 ADRP X0, 0x916000
	0x0380547C LDR X0, [X0 + 0xDC0]
	0x03805480 BL 0x1C16CF4
	0x03805484 ADRP X0, 0x945000
	0x03805488 LDR X0, [X0 + 0x238]
	0x0380548C BL 0x1C16CF4
	0x03805490 ADRP X0, 0x916000
	0x03805494 LDR X0, [X0 + 0xD18]
	0x03805498 BL 0x1C16CF4
	0x0380549C ADRP X0, 0x916000
	0x038054A0 LDR X0, [X0 + 0x270]
	0x038054A4 BL 0x1C16CF4
	0x038054A8 ADRP X0, 0x8EE000
	0x038054AC LDR X0, [X0 + 0x5A8]
	0x038054B0 BL 0x1C16CF4
	0x038054B4 ADRP X0, 0x945000
	0x038054B8 LDR X0, [X0 + 0x2F0]
	0x038054BC BL 0x1C16CF4
	0x038054C0 MOVZ W8, 0x1
	0x038054C4 STRB W8, [X22 + 0x438]
	0x038054C8 MOVI V0.2D, 0x0
	0x038054CC STP V0, V0, [X31 + 0x10]
	0x038054D0 STP X31, X31, [X31]
	0x038054D4 CBZ X21, 0x38054FC
	0x038054D8 LDR W8, [X21 + 0x10]
	0x038054DC TBNZ X8, 0x1F, 0x38058FC
	0x038054E0 LDR W8, [X19 + 0x20]
	0x038054E4 CBZ W8, 0x380554C
	0x038054E8 LDRH W9, [X21 + 0x6]
	0x038054EC CMP W8, W9
	0x038054F0 B.EQ 0x380554C
	0x038054F4 LDR W22, [X21]
	0x038054F8 B 0x3805508
	0x038054FC LDR W8, [X19 + 0x20]
	0x03805500 CBZ W8, 0x380554C
	0x03805504 MOV W22, W31
	0x03805508 ADRP X8, 0x945000
	0x0380550C LDR X8, [X8 + 0x238]
	0x03805510 LDR X0, [X8]
	0x03805514 LDR W8, [X0 + 0xE0]
	0x03805518 CBNZ W8, 0x3805520
	0x0380551C BL 0x1C16DFC
	0x03805520 ADD X0, X31, 0x30
	0x03805524 MOVZ W1, 0x46
	0x03805528 MOVZ W2, 0x52
	0x0380552C MOVZ W3, 0x4D
	0x03805530 MOVZ W4, 0x45
	0x03805534 MOV X5, X31
	0x03805538 STR W31, [X31 + 0x30]
	0x0380553C BL 0x375AA28
	0x03805540 LDR W8, [X31 + 0x30]
	0x03805544 CMP W22, W8
	0x03805548 B.NE 0x38058FC
	0x0380554C LDR X8, [X19 + 0x18]
	0x03805550 CBZ X8, 0x3805570
	0x03805554 LDR X9, [X8 + 0x18]
	0x03805558 LDR X0, [X8 + 0x40]
	0x0380555C LDR X3, [X8 + 0x28]
	0x03805560 MOV X1, X21
	0x03805564 MOV X2, X20
	0x03805568 BLR X9
	0x0380556C TBZ X0, 0x0, 0x38058FC
	0x03805570 LDR X22, [X19 + 0xA0]
	0x03805574 CBZ X22, 0x38058FC
	0x03805578 CBZ X21, 0x3805584
	0x0380557C LDRH W8, [X21 + 0x4]
	0x03805580 B 0x3805588
	0x03805584 MOV W8, W31
	0x03805588 LDR X10, [X19 + 0x80]
	0x0380558C ADD W9, W8, 0x4
	0x03805590 AND W9, W9, 0x1FFFC
	0x03805594 ANDS W31, W8, 0x3
	0x03805598 CSEL W23, W8, W9, EQ
	0x0380559C CMP X10, X23
	0x038055A0 B.LT 0x38058FC
	0x038055A4 LDR X0, [X19 + 0xB0]
	0x038055A8 CBZ X0, 0x38055B4
	0x038055AC LDR X11, [X19 + 0xA8]
	0x038055B0 B 0x38055C0
	0x038055B4 MOV X11, X22
	0x038055B8 MOV X0, X22
	0x038055BC STP X22, X22, [X19 + 0xA8]
	0x038055C0 LDR X9, [X19 + 0x78]
	0x038055C4 ADD X8, X0, X23
	0x038055C8 CMP X8, X11
	0x038055CC CSET W12, HI
	0x038055D0 CMP X11, X22
	0x038055D4 CSET W11, NE
	0x038055D8 ADD X13, X9, X22
	0x038055DC CMP X8, X13
	0x038055E0 AND W24, W12, W11, 0x0
	0x038055E4 B.LS 0x38056B0
	0x038055E8 CMP X9, X10
	0x038055EC B.GE 0x3805668
	0x038055F0 LDRB W10, [X19 + 0xB8]
	0x038055F4 CBNZ W10, 0x3805668
	0x038055F8 ADRP X8, 0x8EE000
	0x038055FC LDR X8, [X8 + 0x5A8]
	0x03805600 LDR X22, [X19 + 0x88]
	0x03805604 ADD W9, W23, 0x4
	0x03805608 AND W9, W9, 0x3FFFC
	0x0380560C LDR X0, [X8]
	0x03805610 ANDS W31, W23, 0x3
	0x03805614 CSEL W25, W23, W9, EQ
	0x03805618 LDR W8, [X0 + 0xE0]
	0x0380561C CBNZ W8, 0x3805624
	0x03805620 BL 0x1C16DFC
	0x03805624 MOV W1, W25
	0x03805628 MOV X0, X22
	0x0380562C MOV X2, X31
	0x03805630 BL 0x337EDFC
	0x03805634 LDP X8, X9, [X19 + 0x78]
	0x03805638 ADD X8, X8, X0
	0x0380563C CMP X8, X9
	0x03805640 CSEL X1, X9, X8, GT
	0x03805644 CMP X1, X23
	0x03805648 B.LT 0x38058FC
	0x0380564C MOVN X2, 0x0
	0x03805650 MOV X0, X19
	0x03805654 BL 0x3804E14
	0x03805658 LDR X0, [X19 + 0xB0]
	0x0380565C LDR X9, [X19 + 0x78]
	0x03805660 LDR X22, [X19 + 0xA0]
	0x03805664 ADD X8, X0, X23
	0x03805668 SUB X10, X22, X0
	0x0380566C ADD X10, X10, X9
	0x03805670 CMP X10, X23
	0x03805674 B.GE 0x38056B0
	0x03805678 MOVZ W8, 0x1
	0x0380567C CMP X10, 0x14
	0x03805680 STRB W8, [X19 + 0xB8]
	0x03805684 B.LT 0x3805698
	0x03805688 MOVZ W1, 0x14
	0x0380568C MOV X2, X31
	0x03805690 BL 0x3C001B4
	0x03805694 LDR X22, [X19 + 0xA0]
	0x03805698 ADD X8, X22, X23
	0x0380569C STR X22, [X19 + 0xB0]
	0x038056A0 TBZ X24, 0x0, 0x38056CC
	0x038056A4 MOV X10, X22
	0x038056A8 STR X22, [X19 + 0xA8]
	0x038056AC B 0x38056D0
	0x038056B0 MOV X11, X22
	0x038056B4 CBZ W24, 0x38056C4
	0x038056B8 LDR X10, [X19 + 0xA8]
	0x038056BC MOV X22, X0
	0x038056C0 B 0x38056E0
	0x038056C4 MOV X22, X0
	0x038056C8 B 0x3805720
	0x038056CC LDR X10, [X19 + 0xA8]
	0x038056D0 CMP X8, X10
	0x038056D4 B.LS 0x3805720
	0x038056D8 LDR X9, [X19 + 0x78]
	0x038056DC MOV X11, X22
	0x038056E0 ADD X9, X11, X9
	0x038056E4 SUB X9, X9, 0x14
	0x038056E8 CMP X8, X10
	0x038056EC B.LS 0x380571C
	0x038056F0 LDRH W12, [X10 + 0x4]
	0x038056F4 LDP X13, X14, [X19 + 0x90]
	0x038056F8 ADD X10, X10, X12
	0x038056FC SUB X13, X13, 0x1
	0x03805700 SUB X12, X14, X12
	0x03805704 CMP X10, X9
	0x03805708 STP X13, X12, [X19 + 0x90]
	0x0380570C B.HI 0x3805718
	0x03805710 LDRH W12, [X10 + 0x4]
	0x03805714 CBNZ W12, 0x38056E8
	0x03805718 MOV X10, X11
	0x0380571C STR X10, [X19 + 0xA8]
	0x03805720 STR X8, [X19 + 0xB0]
	0x03805724 CBZ X21, 0x3805730
	0x03805728 LDRH W2, [X21 + 0x4]
	0x0380572C B 0x3805734
	0x03805730 MOV X2, X31
	0x03805734 MOV X0, X22
	0x03805738 MOV X1, X21
	0x0380573C MOV X3, X31
	0x03805740 BL 0x3BFF954
	0x03805744 LDR W8, [X19 + 0x10]
	0x03805748 LDP X9, X10, [X19 + 0x90]
	0x0380574C ADD W8, W8, 0x1
	0x03805750 ADD X9, X9, 0x1
	0x03805754 ADD X10, X10, X23
	0x03805758 STR W8, [X19 + 0x10]
	0x0380575C STP X9, X10, [X19 + 0x90]
	0x03805760 CBZ X20, 0x38058B4
	0x03805764 MOV X21, X19
	0x03805768 LDR X11, [X21 + 0xC0]!
	0x0380576C CBZ X11, 0x38057AC
	0x03805770 LDR W8, [X11 + 0x18]
	0x03805774 CMP W8, 0x1
	0x03805778 B.LT 0x38057AC
	0x0380577C LDR W10, [X20 + 0xE0]
	0x03805780 MOV W9, W31
	0x03805784 ADD X11, X11, 0x20
	0x03805788 CMP W9, W8
	0x0380578C B.CS 0x3805914
	0x03805790 LDR W12, [X11]
	0x03805794 CMP W12, W10
	0x03805798 B.EQ 0x38058B4
	0x0380579C ADD W9, W9, 0x1
	0x038057A0 CMP W9, W8
	0x038057A4 ADD X11, X11, 0x20
	0x038057A8 B.LT 0x3805788
	0x038057AC MOVI V0.2D, 0x0
	0x038057B0 STP V0, V0, [X31 + 0x10]
	0x038057B4 LDR W8, [X20 + 0xE0]
	0x038057B8 MOV X0, X20
	0x038057BC MOV X1, X31
	0x038057C0 STR W8, [X31 + 0x10]
	0x038057C4 BL 0x3772094
	0x038057C8 ADRP X9, 0x916000
	0x038057CC LDR X9, [X9 + 0xD18]
	0x038057D0 MOV X8, X0
	0x038057D4 STR X8, [X31 + 0x18]
	0x038057D8 LDR X23, [X20 + 0x10]
	0x038057DC LDR X0, [X9]
	0x038057E0 MOV X8, X23
	0x038057E4 LDR W9, [X0 + 0xE0]
	0x038057E8 CBNZ W9, 0x38057F4
	0x038057EC BL 0x1C16DFC
	0x038057F0 LDR X8, [X20 + 0x10]
	0x038057F4 LDR X9, [X20 + 0x18]
	0x038057F8 ADD X0, X31, 0x0
	0x038057FC STR W23, [X31 + 0x20]
	0x03805800 STP X8, X9, [X31]
	0x03805804 BL 0x3800B6C
	0x03805808 ADRP X23, 0x916000
	0x0380580C LDR X23, [X23 + 0xDC0]
	0x03805810 STR W0, [X31 + 0x24]
	0x03805814 LDR X8, [X23]
	0x03805818 LDR W9, [X8 + 0xE0]
	0x0380581C CBNZ W9, 0x380582C
	0x03805820 MOV X0, X8
	0x03805824 BL 0x1C16DFC
	0x03805828 LDR X8, [X23]
	0x0380582C LDR X8, [X8 + 0xB8]
	0x03805830 LDP X1, X2, [X20 + 0x58]
	0x03805834 MOV X3, X31
	0x03805838 ADD X0, X8, 0x10
	0x0380583C BL 0x3818F5C
	0x03805840 MOV W8, W0
	0x03805844 MOV X0, X31
	0x03805848 TBZ X8, 0x0, 0x3805890
	0x0380584C MOV X0, X20
	0x03805850 MOV X1, X31
	0x03805854 BL 0x3772094
	0x03805858 ADRP X8, 0x916000
	0x0380585C LDR X8, [X8 + 0x270]
	0x03805860 MOV X20, X0
	0x03805864 LDR X8, [X8]
	0x03805868 LDR W9, [X8 + 0xE0]
	0x0380586C CBNZ W9, 0x3805878
	0x03805870 MOV X0, X8
	0x03805874 BL 0x1C16DFC
	0x03805878 MOV X0, X20
	0x0380587C MOV X1, X31
	0x03805880 BL 0x376D264
	0x03805884 CBZ X0, 0x3805918
	0x03805888 MOV X1, X31
	0x0380588C BL 0x3811C9C
	0x03805890 STR X0, [X31 + 0x28]
	0x03805894 ADRP X8, 0x945000
	0x03805898 LDR X8, [X8 + 0x2D8]
	0x0380589C LDP V0, V1, [X31 + 0x10]
	0x038058A0 ADD X1, X31, 0x30
	0x038058A4 MOV X0, X21
	0x038058A8 LDR X2, [X8]
	0x038058AC STP V0, V1, [X31 + 0x30]
	0x038058B0 BL 0x2173560
	0x038058B4 ADRP X8, 0x945000
	0x038058B8 LDR X8, [X8 + 0x2E0]
	0x038058BC ADD X19, X19, 0x28
	0x038058C0 MOV X0, X19
	0x038058C4 LDR X1, [X8]
	0x038058C8 BL 0x28F140C
	0x038058CC CMP W0, 0x1
	0x038058D0 B.LT 0x38058FC
	0x038058D4 ADRP X8, 0x945000
	0x038058D8 ADRP X9, 0x945000
	0x038058DC LDR X8, [X8 + 0x2F0]
	0x038058E0 LDR X9, [X9 + 0x2E8]
	0x038058E4 MOV X0, X19
	0x038058E8 MOV X1, X22
	0x038058EC LDR X2, [X8]
	0x038058F0 LDR X4, [X9]
	0x038058F4 MOV X3, X31
	0x038058F8 BL 0x21AD080

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+64], X29
	003 Move [X31+72], X30
	004 Move [X31+80], X28
	005 Move [X31+88], X27
	006 Move [X31+96], X26
	007 Move [X31+104], X25
	008 Move [X31+112], X24
	009 Move [X31+120], X23
	010 Move [X31+128], X22
	011 Move [X31+136], X21
	012 Move [X31+144], X20
	013 Move [X31+152], X19
	014 Move X20, 0xBDD000
	015 Move W8, [X20+1072]
	016 Move X19, X1
	017 Move X21, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {33}
	022 Move X0, 0x921000
	023 Move X0, [X0+520]
	024 Call 0x1C17CF4
	025 Move X0, 0x946000
	026 Move X0, [X0+608]
	027 Call 0x1C17CF4
	028 Move X0, 0x946000
	029 Move X0, [X0+568]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X20+1072], W8
	033 Move [X31+48], W31
	034 Compare X19, 0
	035 JumpIfEqual {310}
	036 Move X8, [X19]
	037 Move X0, X19
	038 Move X9, [X8+424]
	039 Move X1, [X8+432]
	040 NotImplemented "Instruction BLR not yet implemented."
	041 Move TEMP, X0
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfNotEqual {322}
	045 Move X8, 0x921000
	046 Move X8, [X8+520]
	047 Move X0, [X8]
	048 Call 0x1C17F10
	049 Move X1, X19
	050 Move X2, X31
	051 Move X22, X0
	052 Call BinaryReader..ctor, X0, X1
	053 Compare X22, 0
	054 JumpIfEqual {345}
	055 Move X8, [X22]
	056 Move X20, 0x946000
	057 Move X0, X22
	058 Move X9, [X8+552]
	059 Move X1, [X8+560]
	060 Move X20, [X20+568]
	061 NotImplemented "Instruction BLR not yet implemented."
	062 Move X8, [X20]
	063 Move W19, W0
	064 Move W9, [X8+224]
	065 Compare W9, 0
	066 JumpIfNotEqual {69}
	067 Move X0, X8
	068 Call 0x1C17DFC
	069 Add X0, X31, 56
	070 Move W1, 73
	071 Move W2, 69
	072 Move W3, 86
	073 Move W4, 84
	074 Move X5, X31
	075 Move [X31+56], W31
	076 Call FourCC..ctor, X0, X1, X2, X3, X4
	077 Move W8, [X31+56]
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Move X8, [X22]
	080 Move X0, X22
	081 Move X9, [X8+552]
	082 Move X1, [X8+560]
	083 NotImplemented "Instruction BLR not yet implemented."
	084 Move X8, [X20]
	085 Move W19, W0
	086 Move W9, [X8+224]
	087 Compare W9, 0
	088 JumpIfNotEqual {92}
	089 Move X0, X8
	090 Call 0x1C17DFC
	091 Move X8, [X20]
	092 Move X8, [X8+184]
	093 Move W8, [X8]
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Move X8, [X22]
	096 Move X0, X22
	097 Move X9, [X8+552]
	098 Move X1, [X8+560]
	099 NotImplemented "Instruction BLR not yet implemented."
	100 Move X8, [X22]
	101 Move X0, X22
	102 Move X9, [X8+552]
	103 Move X1, [X8+560]
	104 NotImplemented "Instruction BLR not yet implemented."
	105 Move X8, [X22]
	106 Move X0, X22
	107 Move X9, [X8+600]
	108 Move X1, [X8+608]
	109 NotImplemented "Instruction BLR not yet implemented."
	110 Move X8, [X22]
	111 Move X23, X0
	112 Move X0, X22
	113 Move X9, [X8+600]
	114 Move X1, [X8+608]
	115 NotImplemented "Instruction BLR not yet implemented."
	116 Move X8, X21
	117 Add X8, X8, 160
	118 Move X19, [X8]
	119 Compare X23, 0
	120 JumpIfEqual {210}
	121 Move X24, X0
	122 Compare X0, 0
	123 JumpIfEqual {210}
	124 Compare X19, 0
	125 JumpIfEqual {129}
	126 Move X8, [X21+120]
	127 Move X0, X19
	128 NotImplemented "Instruction CMP not yet implemented."
	129 Move W1, 4
	130 Move W2, 4
	131 Move X0, X24
	132 Move X3, X31
	133 Call UnsafeUtility.Malloc, X0, X1, X2
	134 Move [X21+120], X24
	135 Move [X31+16], X23
	136 Move [X31+24], X19
	137 Move X29, X31
	138 Add X19, X24, X0
	139 Move X27, X0
	140 Move [X31+32], X0
	141 Move X8, [X22]
	142 Move X1, [X8+560]
	143 Move X9, [X8+552]
	144 Move X0, X22
	145 NotImplemented "Instruction BLR not yet implemented."
	146 Move X8, [X22]
	147 Move W24, W0
	148 Move X1, [X8+544]
	149 Move X9, [X8+536]
	150 Move X0, X22
	151 NotImplemented "Instruction BLR not yet implemented."
	152 Move X8, [X22]
	153 Move W25, W0
	154 Move X1, [X8+544]
	155 Move X9, [X8+536]
	156 Move X0, X22
	157 NotImplemented "Instruction BLR not yet implemented."
	158 Subtract X8, X19, X27
	159 NotImplemented "Instruction CMP not yet implemented."
	160 Move [X27], W24
	161 NotImplemented "Instruction STRH not yet implemented."
	162 NotImplemented "Instruction STRH not yet implemented."
	163 Move X8, [X22]
	164 And W20, W25, 0xFFFF
	165 Subtract W26, W20, 8
	166 Move X9, [X8+712]
	167 Move X2, [X8+720]
	168 Move X0, X22
	169 Move W1, W26
	170 NotImplemented "Instruction BLR not yet implemented."
	171 Compare X0, 0
	172 JumpIfEqual {177}
	173 Move W8, [X0+24]
	174 Add X9, X0, 32
	175 NotImplemented "Instruction CMP not yet implemented."
	176 NotImplemented "Instruction CSEL not yet implemented."
	177 Move X1, X31
	178 Add X27, X27, 8
	179 Move X2, W26
	180 Move X0, X27
	181 Move X3, X31
	182 Call UnsafeUtility.MemCpy, X0, X1, X2
	183 And W8, W25, 3
	184 Subtract W8, W20, W8
	185 And W31, W25, 3
	186 Add W8, W8, 4
	187 Add W9, W26, 3
	188 NotImplemented "Instruction CSEL not yet implemented."
	189 NotImplemented "Instruction CMP not yet implemented."
	190 NotImplemented "Instruction CSEL not yet implemented."
	191 And W9, W9, 0xFFFFFFFC
	192 Subtract W9, W26, W9
	193 Subtract W9, W20, W9
	194 Subtract W9, W9, 4
	195 NotImplemented "Instruction CSEL not yet implemented."
	196 Add X27, X27, W9
	197 NotImplemented "Instruction CMP not yet implemented."
	198 Add X29, X29, X8
	199 Subtract X23, X23, 1
	200 NotImplemented "Instruction CMP not yet implemented."
	201 Move X24, X0
	202 Move X0, X24
	203 Call 0x3EB2AD0
	204 Move X28, [X0]
	205 Call 0x3EB2AE0
	206 Compare X28, 0
	207 JumpIfEqual {183}
	208 Move X0, X28
	209 Call 0x1C17F18
	210 Move X9, X31
	211 Move [X8], X31
	212 Move [X8+8], X31
	213 Move [X8+16], X31
	214 Compare X19, 0
	215 JumpIfNotEqual {286}
	216 Move X8, [X22]
	217 Move [X31+8], X21
	218 Move X1, [X8+560]
	219 Move X9, [X8+552]
	220 Move X0, X22
	221 NotImplemented "Instruction BLR not yet implemented."
	222 Move X8, 0x946000
	223 Move X8, [X8+608]
	224 Move W25, W0
	225 Move X0, [X8]
	226 Move W1, W25
	227 Call 0x1C17D6C
	228 Move X24, X0
	229 NotImplemented "Instruction CMP not yet implemented."
	230 Move X23, X31
	231 Move W20, W25
	232 Add X21, X24, 56
	233 Move X8, [X22]
	234 Move X1, [X8+560]
	235 Move X9, [X8+552]
	236 Move X0, X22
	237 NotImplemented "Instruction BLR not yet implemented."
	238 Move X8, [X22]
	239 Move W25, W0
	240 Move X1, [X8+672]
	241 Move X9, [X8+664]
	242 Move X0, X22
	243 NotImplemented "Instruction BLR not yet implemented."
	244 Move X8, [X22]
	245 Move X26, X0
	246 Move X1, [X8+560]
	247 Move X9, [X8+552]
	248 Move X0, X22
	249 NotImplemented "Instruction BLR not yet implemented."
	250 Move X8, [X22]
	251 Move W27, W0
	252 Move X1, [X8+560]
	253 Move X9, [X8+552]
	254 Move X0, X22
	255 NotImplemented "Instruction BLR not yet implemented."
	256 Move X8, [X22]
	257 Move W28, W0
	258 Move X1, [X8+672]
	259 Move X9, [X8+664]
	260 Move X0, X22
	261 NotImplemented "Instruction BLR not yet implemented."
	262 Compare X24, 0
	263 JumpIfEqual {308}
	264 Move W8, [X24+24]
	265 NotImplemented "Instruction CMP not yet implemented."
	266 Add X23, X23, 1
	267 Move [X21-24], W25
	268 Move [X21-20], W31
	269 Move [X21-16], X26
	270 Move [X21-8], W27
	271 Move [X21-4], W28
	272 Move [X21+32], X0
	273 NotImplemented "Instruction CMP not yet implemented."
	274 Move X21, [X31+8]
	275 Move X8, [X31+16]
	276 Move X9, [X31+32]
	277 Move [X21+176], X19
	278 Move X19, [X31+24]
	279 Move [X21+160], X9
	280 Move [X21+168], X9
	281 Move [X21+144], X8
	282 Move [X21+152], X29
	283 Move [X21+192], X24
	284 Compare X19, 0
	285 JumpIfEqual {291}
	286 NotImplemented "Instruction CMP not yet implemented."
	287 Move W1, 4
	288 Move X0, X19
	289 Move X2, X31
	290 Call UnsafeUtility.Free, X0, X1
	291 Move W8, [X21+16]
	292 Move X20, [X31+144]
	293 Move X19, [X31+152]
	294 Move X24, [X31+112]
	295 Move X23, [X31+120]
	296 Move X26, [X31+96]
	297 Move X25, [X31+104]
	298 Add W8, W8, 1
	299 Move [X21+16], W8
	300 Move X22, [X31+128]
	301 Move X21, [X31+136]
	302 Move X28, [X31+80]
	303 Move X27, [X31+88]
	304 Move X29, [X31+64]
	305 Move X30, [X31+72]
	306 Add X31, X31, 160
	307 Return 
	308 Call 0x1C17F20
	309 Call 0x1C17F28
	310 Move X0, 0x8F4000
	311 Move X0, [X0+1320]
	312 Call 0x1C17D08
	313 Call 0x1C17F10
	314 Move X19, X0
	315 Move X0, 0x91E000
	316 Move X0, [X0+3384]
	317 Call 0x1C17D08
	318 Move X1, X0
	319 Move X0, X19
	320 Move X2, X31
	321 Call ArgumentNullException..ctor, X0, X1
	322 Move X0, 0x8F7000
	323 Move X0, [X0+1400]
	324 Call 0x1C17D08
	325 Call 0x1C17F10
	326 Move X19, X0
	327 Move X0, 0x923000
	328 Move X0, [X0+1440]
	329 Call 0x1C17D08
	330 Move X20, X0
	331 Move X0, 0x91E000
	332 Move X0, [X0+3384]
	333 Call 0x1C17D08
	334 Move X2, X0
	335 Move X0, X19
	336 Move X1, X20
	337 Move X3, X31
	338 Call ArgumentException..ctor, X0, X1, X2
	339 Move X0, 0x946000
	340 Move X0, [X0+616]
	341 Call 0x1C17D08
	342 Move X1, X0
	343 Move X0, X19
	344 Call 0x1C17DEC
	345 Call 0x1C17F20
	346 Move X0, 0x946000
	347 Move X0, [X0+568]
	348 Call 0x1C17D08
	349 Call 0x19913D0
	350 Call InputEventTrace.get_kFileFormat
	351 Move [X31+56], W0
	352 Move X0, 0x917000
	353 Move X0, [X0+3368]
	354 Call 0x1C17D08
	355 Add X1, X31, 56
	356 Call 0x1C17E04
	357 Move X19, X0
	358 Move X0, 0x946000
	359 Move X0, [X0+624]
	360 Move X19, 0x946000
	361 Move X19, [X19+568]
	362 Move X0, X19
	363 Call 0x1C17D08
	364 Call 0x19913D0
	365 Move X0, X19
	366 Call 0x1C17D08
	367 Move X8, [X0+184]
	368 Move X0, 0x8EF000
	369 Move W8, [X8]
	370 Move [X31+56], W8
	371 Move X0, [X0+1880]
	372 Call 0x1C17D08
	373 Add X1, X31, 56
	374 Call 0x1C17E04
	375 Move X19, X0
	376 Move X0, 0x946000
	377 Move X0, [X0+632]
	378 Call 0x1C17D08
	379 Move X1, X19
	380 Move X2, X31
	381 Call String.Format, X0, X1
	382 Move X19, X0
	383 Move X0, 0x91D000
	384 Move X0, [X0+1960]
	385 Call 0x1C17D08
	386 Call 0x1C17F10
	387 Move X1, X19
	388 Move X2, X31
	389 Move X20, X0
	390 Call IOException..ctor, X0, X1
	391 Move X0, 0x946000
	392 Move X0, [X0+616]
	393 Call 0x1C17D08
	394 Move X1, X0
	395 Move X0, X20
	396 Call 0x1C17DEC
	397 Compare X28, 0
	398 JumpIfEqual {401}
	399 Move X0, X28
	400 Call 0x1C17F18
	401 Move X24, X0
	402 NotImplemented "Instruction CMP not yet implemented."
	403 Move X0, X24
	404 Call 0x3EB2AD0
	405 Move X21, X0
	406 Move X0, 0x8F5000
	407 Move X0, [X0+3264]
	408 Call 0x1C17D08
	409 Move X8, [X21]
	410 Move X1, [X8]
	411 Call 0x1C18270
	412 Move TEMP, X0
	413 And TEMP, TEMP, 1
	414 Compare TEMP, 1
	415 JumpIfNotEqual {430}
	416 Move X21, [X21]
	417 NotImplemented "Instruction LDRSW not yet implemented."
	418 Add X9, X31, 40
	419 Move [X9], X21
	420 Call 0x3EB2AE0
	421 Move X8, [X31+24]
	422 Move X9, [X31+32]
	423 NotImplemented "Instruction CMP not yet implemented."
	424 Move X0, [X31+32]
	425 Move W1, 4
	426 Move X2, X31
	427 Call UnsafeUtility.Free, X0, X1
	428 Move X0, X21
	429 Call 0x1C17F18
	430 Move W0, 8
	431 Call 0x3EB2AF0
	432 Move X8, [X21]
	433 Move [X0], X8
	434 Move X1, 0x6B0000
	435 Add X1, X1, 3672
	436 Move X2, X31
	437 Call 0x3EB2B00
	438 Move X24, X0
	439 Call 0x3EB2AE0
	440 Move X0, X24
	441 Call 0x1D2D690
	442 Call 0x1991590

Method: UnityEngine.InputSystem.LowLevel.InputEventTrace LoadFrom(System.String filePath)

Disassembly:
	0x03805914 BL 0x1C16F28
	0x03805918 BL 0x1C16F20
	0x0380591C STR X30, [X31 - 0x20]!
	0x03805920 STP X20, X19, [X31 + 0x10]
	0x03805924 ADRP X19, 0xBDC000
	0x03805928 ADRP X20, 0x945000
	0x0380592C LDRB W8, [X19 + 0x439]
	0x03805930 LDR X20, [X20 + 0x238]
	0x03805934 TBNZ X8, 0x0, 0x380594C
	0x03805938 ADRP X0, 0x945000
	0x0380593C LDR X0, [X0 + 0x238]
	0x03805940 BL 0x1C16CF4
	0x03805944 MOVZ W8, 0x1
	0x03805948 STRB W8, [X19 + 0x439]
	0x0380594C LDR X8, [X20]
	0x03805950 LDP X20, X19, [X31 + 0x10]
	0x03805954 MOVZ W9, 0x1
	0x03805958 LDR X8, [X8 + 0xB8]
	0x0380595C STR W9, [X8]
	0x03805960 LDR X30, [X31], #0x20
	0x03805964 RET
	0x03805968 STR X31, [X0 + 0x10]
	0x0380596C STR X31, [X0 + 0x20]
	0x03805970 RET
	0x03805974 STR X30, [X31 - 0x20]!
	0x03805978 STP X20, X19, [X31 + 0x10]
	0x0380597C LDR X8, [X0 + 0x10]
	0x03805980 CBZ X8, 0x38059A8
	0x03805984 LDR W9, [X8 + 0x10]
	0x03805988 LDR W10, [X0 + 0x18]
	0x0380598C CMP W9, W10
	0x03805990 B.NE 0x38059F0
	0x03805994 LDP X20, X19, [X31 + 0x10]
	0x03805998 ADD X1, X0, 0x20
	0x0380599C MOV X0, X8
	0x038059A0 LDR X30, [X31], #0x20
	0x038059A4 B 0x3805010
	0x038059A8 LDR X8, [X0]
	0x038059AC LDP X9, X1, [X8 + 0x168]
	0x038059B0 BLR X9
	0x038059B4 MOV X19, X0
	0x038059B8 ADRP X0, 0x917000
	0x038059BC LDR X0, [X0 + 0x4B8]
	0x038059C0 BL 0x1C16D08
	0x038059C4 BL 0x1C16F10
	0x038059C8 MOV X1, X19
	0x038059CC MOV X2, X31
	0x038059D0 MOV X20, X0
	0x038059D4 BL 0x338C448
	0x038059D8 ADRP X0, 0x945000
	0x038059DC LDR X0, [X0 + 0x2F8]
	0x038059E0 BL 0x1C16D08
	0x038059E4 MOV X1, X0
	0x038059E8 MOV X0, X20
	0x038059EC BL 0x1C16DEC
	0x038059F0 ADRP X0, 0x8EE000
	0x038059F4 LDR X0, [X0 + 0x5B0]
	0x038059F8 BL 0x1C16D08
	0x038059FC BL 0x1C16F10
	0x03805A00 MOV X19, X0
	0x03805A04 ADRP X0, 0x945000
	0x03805A08 LDR X0, [X0 + 0x300]
	0x03805A0C BL 0x1C16D08
	0x03805A10 MOV X1, X0
	0x03805A14 MOV X0, X19
	0x03805A18 MOV X2, X31
	0x03805A1C BL 0x337DF1C
	0x03805A20 ADRP X0, 0x945000
	0x03805A24 LDR X0, [X0 + 0x2F8]
	0x03805A28 BL 0x1C16D08
	0x03805A2C MOV X1, X0
	0x03805A30 MOV X0, X19
	0x03805A34 BL 0x1C16DEC
	0x03805A38 STR X30, [X31 - 0x10]!
	0x03805A3C LDR X8, [X0 + 0x10]
	0x03805A40 STR X31, [X0 + 0x20]
	0x03805A44 CBZ X8, 0x3805A58
	0x03805A48 LDR W8, [X8 + 0x10]
	0x03805A4C STR W8, [X0 + 0x18]
	0x03805A50 LDR X30, [X31], #0x10
	0x03805A54 RET
	0x03805A58 BL 0x1C16F20
	0x03805A5C LDR X0, [X0 + 0x20]
	0x03805A60 RET
	0x03805A64 SUB X31, X31, 0x30
	0x03805A68 STP X30, X21, [X31 + 0x10]
	0x03805A6C STP X20, X19, [X31 + 0x20]
	0x03805A70 ADRP X21, 0xBDC000
	0x03805A74 ADRP X20, 0x919000
	0x03805A78 LDRB W8, [X21 + 0x43A]
	0x03805A7C LDR X20, [X20 + 0x4F8]
	0x03805A80 MOV X19, X0
	0x03805A84 TBNZ X8, 0x0, 0x3805A9C
	0x03805A88 ADRP X0, 0x919000
	0x03805A8C LDR X0, [X0 + 0x4F8]
	0x03805A90 BL 0x1C16CF4
	0x03805A94 MOVZ W8, 0x1
	0x03805A98 STRB W8, [X21 + 0x43A]
	0x03805A9C LDR X8, [X19 + 0x20]
	0x03805AA0 LDR X0, [X20]
	0x03805AA4 ADD X1, X31, 0x8
	0x03805AA8 STR X8, [X31 + 0x8]
	0x03805AAC BL 0x1C16E04
	0x03805AB0 LDP X20, X19, [X31 + 0x20]
	0x03805AB4 LDP X30, X21, [X31 + 0x10]
	0x03805AB8 ADD X31, X31, 0x30
	0x03805ABC RET
	0x03805AC0 LDR X0, [X0 + 0x18]
	0x03805AC4 RET
	0x03805AC8 LDRB W0, [X0 + 0x10]
	0x03805ACC RET
	0x03805AD0 AND W8, W1, 0x1
	0x03805AD4 STRB W8, [X0 + 0x10]
	0x03805AD8 RET
	0x03805ADC LDRB W0, [X0 + 0x11]
	0x03805AE0 RET
	0x03805AE4 AND W8, W1, 0x1
	0x03805AE8 STRB W8, [X0 + 0x11]
	0x03805AEC RET
	0x03805AF0 LDR W0, [X0 + 0x14]
	0x03805AF4 RET
	0x03805AF8 STR W1, [X0 + 0x14]
	0x03805AFC RET
	0x03805B00 SUB X31, X31, 0x40
	0x03805B04 STP X30, X21, [X31 + 0x20]
	0x03805B08 STP X20, X19, [X31 + 0x30]
	0x03805B0C ADRP X21, 0xBDC000
	0x03805B10 ADRP X20, 0x945000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xBDD000
	007 Move W8, [X20+1073]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x8EF000
	014 Move X0, [X0+3584]
	015 Call 0x1C17CF4
	016 Move X0, 0x946000
	017 Move X0, [X0+568]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+1073], W8
	021 Move X0, X19
	022 Move X1, X31
	023 Call String.IsNullOrEmpty, X0
	024 Move TEMP, X0
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {78}
	028 Move X20, 0x946000
	029 Move X22, 0x8EF000
	030 Move X20, [X20+568]
	031 Move X22, [X22+3584]
	032 Move X0, X19
	033 Move X1, X31
	034 Call File.OpenRead, X0
	035 Move X8, [X20]
	036 Move X19, X0
	037 Move W9, [X8+224]
	038 Compare W9, 0
	039 JumpIfNotEqual {42}
	040 Move X0, X8
	041 Call 0x1C17DFC
	042 Move X0, X19
	043 Call InputEventTrace.LoadFrom, X0
	044 Move X21, X0
	045 Move X20, X31
	046 Compare X19, 0
	047 JumpIfEqual {69}
	048 Move X8, [X19]
	049 Move X1, [X22]
	050 NotImplemented "Instruction LDRH not yet implemented."
	051 Compare X9, 0
	052 JumpIfEqual {59}
	053 Move X10, [X8+176]
	054 Add X10, X10, 8
	055 NotImplemented "Instruction LDUR not yet implemented."
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Subtract X9, X9, 1
	058 Add X10, X10, 16
	059 Move X0, X19
	060 Move W2, W31
	061 Call 0x1C5D788
	062 NotImplemented "Instruction LDRSW not yet implemented."
	063 Add X8, X8, X9
	064 Add X0, X8, 312
	065 Move X8, [X0]
	066 Move X1, [X0+8]
	067 Move X0, X19
	068 NotImplemented "Instruction BLR not yet implemented."
	069 Compare X20, 0
	070 JumpIfNotEqual {96}
	071 Move X0, X21
	072 Move X20, [X31+32]
	073 Move X19, [X31+40]
	074 Move X22, [X31+16]
	075 Move X21, [X31+24]
	076 Move X30, [X31+48]
	077 Return X0
	078 Move X0, 0x8F4000
	079 Move X0, [X0+1320]
	080 Call 0x1C17D08
	081 Call 0x1C17F10
	082 Move X19, X0
	083 Move X0, 0x946000
	084 Move X0, [X0+536]
	085 Call 0x1C17D08
	086 Move X1, X0
	087 Move X0, X19
	088 Move X2, X31
	089 Call ArgumentNullException..ctor, X0, X1
	090 Move X0, 0x946000
	091 Move X0, [X0+640]
	092 Call 0x1C17D08
	093 Move X1, X0
	094 Move X0, X19
	095 Call 0x1C17DEC
	096 Move X0, X20
	097 Call 0x1C17F18
	098 Move X21, X0
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Move X0, X21
	101 Call 0x3EB2AD0
	102 Move X20, [X0]
	103 Call 0x3EB2AE0
	104 Move X21, X31
	105 Compare X19, 0
	106 JumpIfNotEqual {48}
	107 Move X20, X31
	108 Move X21, X0
	109 Compare X19, 0
	110 JumpIfEqual {132}
	111 Move X8, [X19]
	112 Move X1, [X22]
	113 NotImplemented "Instruction LDRH not yet implemented."
	114 Compare X9, 0
	115 JumpIfEqual {122}
	116 Move X10, [X8+176]
	117 Add X10, X10, 8
	118 NotImplemented "Instruction LDUR not yet implemented."
	119 NotImplemented "Instruction CMP not yet implemented."
	120 Subtract X9, X9, 1
	121 Add X10, X10, 16
	122 Move X0, X19
	123 Move W2, W31
	124 Call 0x1C5D788
	125 NotImplemented "Instruction LDRSW not yet implemented."
	126 Add X8, X8, X9
	127 Add X0, X8, 312
	128 Move X8, [X0]
	129 Move X1, [X0+8]
	130 Move X0, X19
	131 NotImplemented "Instruction BLR not yet implemented."
	132 Compare X20, 0
	133 JumpIfNotEqual {136}
	134 Move X0, X21
	135 Call 0x1D2D690
	136 Move X0, X20
	137 Call 0x1C17F18
	138 Call 0x1991590

Method: UnityEngine.InputSystem.LowLevel.InputEventTrace LoadFrom(System.IO.Stream stream)

Disassembly:
	0x03805B14 LDRB W8, [X21 + 0x43B]
	0x03805B18 LDR X20, [X20 + 0x308]
	0x03805B1C MOV X19, X0
	0x03805B20 TBNZ X8, 0x0, 0x3805B38
	0x03805B24 ADRP X0, 0x945000
	0x03805B28 LDR X0, [X0 + 0x308]
	0x03805B2C BL 0x1C16CF4
	0x03805B30 MOVZ W8, 0x1
	0x03805B34 STRB W8, [X21 + 0x43B]
	0x03805B38 LDR X8, [X19 + 0x58]
	0x03805B3C LDUR V0, [X19 + 0x48]
	0x03805B40 LDR X0, [X20]
	0x03805B44 ADD X1, X31, 0x0
	0x03805B48 STR X8, [X31 + 0x10]
	0x03805B4C STR V0, [X31]
	0x03805B50 BL 0x1C16E04
	0x03805B54 LDP X20, X19, [X31 + 0x30]
	0x03805B58 LDP X30, X21, [X31 + 0x20]
	0x03805B5C ADD X31, X31, 0x40
	0x03805B60 RET
	0x03805B64 STP X30, X25, [X31 - 0x40]!
	0x03805B68 STP X24, X23, [X31 + 0x10]
	0x03805B6C STP X22, X21, [X31 + 0x20]
	0x03805B70 STP X20, X19, [X31 + 0x30]
	0x03805B74 ADRP X22, 0xBDC000
	0x03805B78 ADRP X21, 0x8EF000
	0x03805B7C ADRP X20, 0x945000
	0x03805B80 ADRP X23, 0x916000
	0x03805B84 LDRB W8, [X22 + 0x43C]
	0x03805B88 LDR X21, [X21 + 0xE70]
	0x03805B8C LDR X20, [X20 + 0x310]
	0x03805B90 LDR X23, [X23 + 0x270]
	0x03805B94 MOV X19, X0
	0x03805B98 TBNZ X8, 0x0, 0x3805BF8
	0x03805B9C ADRP X0, 0x8EF000
	0x03805BA0 LDR X0, [X0 + 0xE70]
	0x03805BA4 BL 0x1C16CF4
	0x03805BA8 ADRP X0, 0x8EE000
	0x03805BAC LDR X0, [X0 + 0xE00]
	0x03805BB0 BL 0x1C16CF4
	0x03805BB4 ADRP X0, 0x944000
	0x03805BB8 LDR X0, [X0 + 0xE0]
	0x03805BBC BL 0x1C16CF4
	0x03805BC0 ADRP X0, 0x8EE000
	0x03805BC4 LDR X0, [X0 + 0xE18]
	0x03805BC8 BL 0x1C16CF4
	0x03805BCC ADRP X0, 0x945000
	0x03805BD0 LDR X0, [X0 + 0x318]
	0x03805BD4 BL 0x1C16CF4
	0x03805BD8 ADRP X0, 0x916000
	0x03805BDC LDR X0, [X0 + 0x270]
	0x03805BE0 BL 0x1C16CF4
	0x03805BE4 ADRP X0, 0x945000
	0x03805BE8 LDR X0, [X0 + 0x310]
	0x03805BEC BL 0x1C16CF4
	0x03805BF0 MOVZ W8, 0x1
	0x03805BF4 STRB W8, [X22 + 0x43C]
	0x03805BF8 LDR X0, [X21]
	0x03805BFC ADRP X21, 0x945000
	0x03805C00 LDR X21, [X21 + 0x318]
	0x03805C04 BL 0x1C16F10
	0x03805C08 LDR X2, [X20]
	0x03805C0C MOV X1, X19
	0x03805C10 MOV X3, X31
	0x03805C14 MOV X20, X0
	0x03805C18 BL 0x3314368
	0x03805C1C LDR X0, [X23]
	0x03805C20 LDR W8, [X0 + 0xE0]
	0x03805C24 CBNZ W8, 0x3805C2C
	0x03805C28 BL 0x1C16DFC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xBDD000
	005 Move W8, [X20+1074]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x946000
	012 Move X0, [X0+568]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1074], W8
	016 Compare X19, 0
	017 JumpIfEqual {45}
	018 Move X8, [X19]
	019 Move X0, X19
	020 Move X9, [X8+424]
	021 Move X1, [X8+432]
	022 NotImplemented "Instruction BLR not yet implemented."
	023 Move TEMP, X0
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfNotEqual {57}
	027 Move X8, 0x946000
	028 Move X8, [X8+568]
	029 Move X0, [X8]
	030 Call 0x1C17F10
	031 Move X1, X31
	032 Move X20, X0
	033 Call Object..ctor, X0
	034 Move W8, 0x100000
	035 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	036 Move X0, X20
	037 Move X1, X19
	038 Move [X20+120], V0
	039 Call InputEventTrace.ReadFrom, X0, X1
	040 Move X0, X20
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move X30, [X31+32]
	044 Return X0
	045 Move X0, 0x8F4000
	046 Move X0, [X0+1320]
	047 Call 0x1C17D08
	048 Call 0x1C17F10
	049 Move X19, X0
	050 Move X0, 0x91E000
	051 Move X0, [X0+3384]
	052 Call 0x1C17D08
	053 Move X1, X0
	054 Move X0, X19
	055 Move X2, X31
	056 Call ArgumentNullException..ctor, X0, X1
	057 Move X0, 0x8F7000
	058 Move X0, [X0+1400]
	059 Call 0x1C17D08
	060 Call 0x1C17F10
	061 Move X19, X0
	062 Move X0, 0x946000
	063 Move X0, [X0+648]
	064 Call 0x1C17D08
	065 Move X20, X0
	066 Move X0, 0x91E000
	067 Move X0, [X0+3384]
	068 Call 0x1C17D08
	069 Move X2, X0
	070 Move X0, X19
	071 Move X1, X20
	072 Move X3, X31
	073 Call ArgumentException..ctor, X0, X1, X2
	074 Move X0, 0x946000
	075 Move X0, [X0+656]
	076 Call 0x1C17D08
	077 Move X1, X0
	078 Move X0, X19
	079 Call 0x1C17DEC

Method: UnityEngine.InputSystem.LowLevel.InputEventTrace/ReplayController Replay()

Disassembly:
	0x03805C2C ADRP X22, 0x8EE000
	0x03805C30 LDR X22, [X22 + 0xE00]
	0x03805C34 MOV X0, X20
	0x03805C38 MOV X1, X31
	0x03805C3C BL 0x377033C
	0x03805C40 MOVZ W8, 0x1
	0x03805C44 STRB W8, [X19 + 0x10]
	0x03805C48 LDR X1, [X21]
	0x03805C4C ADD X20, X19, 0x48
	0x03805C50 MOV X0, X20
	0x03805C54 BL 0x2DEB4F8
	0x03805C58 MOV X19, X0
	0x03805C5C CBZ X0, 0x3805DC8
	0x03805C60 ADRP X24, 0x8EE000
	0x03805C64 ADRP X25, 0x944000
	0x03805C68 LDR X24, [X24 + 0xE18]
	0x03805C6C LDR X25, [X25 + 0xE0]
	0x03805C70 LDR X8, [X19]
	0x03805C74 LDR X1, [X24]
	0x03805C78 LDRH W9, [X8 + 0x12E]
	0x03805C7C CBZ X9, 0x3805CA0
	0x03805C80 LDR X10, [X8 + 0xB0]
	0x03805C84 ADD X10, X10, 0x8
	0x03805C88 LDUR X11, [X10 - 0x8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xBDD000
	006 Move X20, 0x946000
	007 Move W8, [X21+1075]
	008 Move X20, [X20+664]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x946000
	015 Move X0, [X0+664]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1075], W8
	019 Move X0, X19
	020 Call InputEventTrace.Disable, X0
	021 Move X0, [X20]
	022 Call 0x1C17F10
	023 Move X1, X19
	024 Move X20, X0
	025 Call ReplayController..ctor, X0, X1
	026 Move X0, X20
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Return X0

Method: System.Boolean Resize(System.Int64 newBufferSize, System.Int64 newMaxBufferSize = -1)

Disassembly:
	0x03805E14 CBZ X9, 0x3805E38
	0x03805E18 LDR X10, [X8 + 0xB0]
	0x03805E1C ADD X10, X10, 0x8
	0x03805E20 LDUR X11, [X10 - 0x8]
	0x03805E24 CMP X11, X1
	0x03805E28 B.EQ 0x3805E48
	0x03805E2C SUBS X9, X9, 0x1
	0x03805E30 ADD X10, X10, 0x10
	0x03805E34 B.NE 0x3805E20
	0x03805E38 MOV X0, X19
	0x03805E3C MOV W2, W31
	0x03805E40 BL 0x1C5C788
	0x03805E44 B 0x3805E54
	0x03805E48 LDRSW X9, [X10]
	0x03805E4C ADD X8, X8, X9, 0x4, LSL
	0x03805E50 ADD X0, X8, 0x138
	0x03805E54 LDP X8, X1, [X0]
	0x03805E58 MOV X0, X19
	0x03805E5C BLR X8
	0x03805E60 CBNZ X21, 0x3805E6C
	0x03805E64 MOV X0, X20
	0x03805E68 BL 0x1D2C690
	0x03805E6C MOV X0, X21
	0x03805E70 BL 0x1C16F18
	0x03805E74 BL 0x1990590
	0x03805E78 STP X30, X19, [X31 - 0x10]!
	0x03805E7C CBZ X1, 0x3805E94
	0x03805E80 CBZ X2, 0x3805EB4
	0x03805E84 LDR W1, [X1 + 0xE0]
	0x03805E88 LDR W2, [X2 + 0xE0]
	0x03805E8C LDP X30, X19, [X31], #0x10
	0x03805E90 B 0x3805EFC
	0x03805E94 ADRP X0, 0x8F3000
	0x03805E98 LDR X0, [X0 + 0x528]
	0x03805E9C BL 0x1C16D08
	0x03805EA0 BL 0x1C16F10
	0x03805EA4 MOV X19, X0
	0x03805EA8 ADRP X0, 0x945000
	0x03805EAC LDR X0, [X0 + 0x320]
	0x03805EB0 B 0x3805ED0
	0x03805EB4 ADRP X0, 0x8F3000
	0x03805EB8 LDR X0, [X0 + 0x528]
	0x03805EBC BL 0x1C16D08
	0x03805EC0 BL 0x1C16F10
	0x03805EC4 MOV X19, X0
	0x03805EC8 ADRP X0, 0x945000
	0x03805ECC LDR X0, [X0 + 0x328]
	0x03805ED0 BL 0x1C16D08
	0x03805ED4 MOV X1, X0
	0x03805ED8 MOV X0, X19
	0x03805EDC MOV X2, X31
	0x03805EE0 BL 0x330E100
	0x03805EE4 ADRP X0, 0x945000
	0x03805EE8 LDR X0, [X0 + 0x330]
	0x03805EEC BL 0x1C16D08
	0x03805EF0 MOV X1, X0
	0x03805EF4 MOV X0, X19
	0x03805EF8 BL 0x1C16DEC
	0x03805EFC STR X30, [X31 - 0x40]!
	0x03805F00 STP X24, X23, [X31 + 0x10]
	0x03805F04 STP X22, X21, [X31 + 0x20]
	0x03805F08 STP X20, X19, [X31 + 0x30]
	0x03805F0C ADRP X22, 0xBDC000
	0x03805F10 LDRB W8, [X22 + 0x43D]
	0x03805F14 MOV W20, W2
	0x03805F18 MOV W21, W1
	0x03805F1C MOV X19, X0
	0x03805F20 TBNZ X8, 0x0, 0x3805F74
	0x03805F24 ADRP X0, 0x945000
	0x03805F28 LDR X0, [X0 + 0x338]
	0x03805F2C BL 0x1C16CF4
	0x03805F30 ADRP X0, 0x945000
	0x03805F34 LDR X0, [X0 + 0x340]
	0x03805F38 BL 0x1C16CF4
	0x03805F3C ADRP X0, 0x945000
	0x03805F40 LDR X0, [X0 + 0x348]
	0x03805F44 BL 0x1C16CF4
	0x03805F48 ADRP X0, 0x945000
	0x03805F4C LDR X0, [X0 + 0x350]
	0x03805F50 BL 0x1C16CF4
	0x03805F54 ADRP X0, 0x945000
	0x03805F58 LDR X0, [X0 + 0x358]
	0x03805F5C BL 0x1C16CF4
	0x03805F60 ADRP X0, 0x945000
	0x03805F64 LDR X0, [X0 + 0x360]
	0x03805F68 BL 0x1C16CF4
	0x03805F6C MOVZ W8, 0x1
	0x03805F70 STRB W8, [X22 + 0x43D]
	0x03805F74 MOV X22, X19
	0x03805F78 LDR W8, [X22 + 0x28]!
	0x03805F7C CMP W8, 0x1
	0x03805F80 B.LT 0x3805FB8
	0x03805F84 ADRP X24, 0x945000
	0x03805F88 LDR X24, [X24 + 0x348]
	0x03805F8C MOV W23, W31
	0x03805F90 LDR X2, [X24]
	0x03805F94 MOV X0, X22
	0x03805F98 MOV W1, W23
	0x03805F9C BL 0x2DE4BE4
	0x03805FA0 CMP W0, W21
	0x03805FA4 B.EQ 0x3806000
	0x03805FA8 LDR W8, [X22]
	0x03805FAC ADD W23, W23, 0x1
	0x03805FB0 CMP W23, W8
	0x03805FB4 B.LT 0x3805F90
	0x03805FB8 CMP W21, W20
	0x03805FBC B.EQ 0x3806060
	0x03805FC0 ADRP X8, 0x945000
	0x03805FC4 LDR X8, [X8 + 0x358]
	0x03805FC8 ADD X0, X31, 0x8
	0x03805FCC MOV W1, W21
	0x03805FD0 MOV W2, W20
	0x03805FD4 LDR X3, [X8]
	0x03805FD8 STR X31, [X31 + 0x8]
	0x03805FDC BL 0x2EDEF20
	0x03805FE0 ADRP X8, 0x945000
	0x03805FE4 LDR X1, [X31 + 0x8]
	0x03805FE8 LDR X8, [X8 + 0x338]
	0x03805FEC MOVZ W2, 0xA
	0x03805FF0 MOV X0, X22
	0x03805FF4 LDR X3, [X8]
	0x03805FF8 BL 0x2DE50C8
	0x03805FFC B 0x3806060
	0x03806000 CMP W21, W20
	0x03806004 B.NE 0x3806024

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Move X8, [X0+120]
	014 Move X20, X1
	015 Move X19, X0
	016 NotImplemented "Instruction CMP not yet implemented."
	017 NotImplemented "Instruction CMP not yet implemented."
	018 NotImplemented "Instruction CSEL not yet implemented."
	019 Move W1, 4
	020 Move W2, 4
	021 Move X0, X20
	022 Move X3, X31
	023 Call UnsafeUtility.Malloc, X0, X1, X2
	024 Compare X0, 0
	025 JumpIfEqual {98}
	026 Move X8, [X19+144]
	027 Move X21, X0
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move X8, [X19+120]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move W8, [X19+184]
	032 Compare W8, 0
	033 JumpIfEqual {110}
	034 Move X1, [X19+168]
	035 Move W25, W31
	036 Move W24, W31
	037 Move W27, 1
	038 Move [X31+8], X1
	039 Move X26, [X19+152]
	040 Move X22, X21
	041 Compare X1, 0
	042 JumpIfEqual {44}
	043 NotImplemented "Instruction LDRH not yet implemented."
	044 Move W8, W31
	045 Add W9, W8, 4
	046 And W31, W8, 3
	047 And W9, W9, 0x1FFFC
	048 NotImplemented "Instruction CSEL not yet implemented."
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move W2, W8
	051 Move X0, X22
	052 Move X3, X31
	053 Call UnsafeUtility.MemCpy, X0, X1, X2
	054 NotImplemented "Instruction LDRH not yet implemented."
	055 Add W24, W28, W24
	056 Add W25, W25, 1
	057 And W9, W8, 0xFFFC
	058 And W31, W8, 3
	059 Add W9, W9, 4
	060 NotImplemented "Instruction CSEL not yet implemented."
	061 Add X22, X8, X22
	062 Add X1, X31, 8
	063 Move X0, X19
	064 Call InputEventTrace.GetNextEvent, X0, X1
	065 Move TEMP, X0
	066 And TEMP, TEMP, 1
	067 Compare TEMP, 1
	068 JumpIfNotEqual {76}
	069 Move X8, [X19+144]
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move X1, [X31+8]
	072 Subtract X26, X26, W28
	073 Add W27, W27, 1
	074 Compare X1, 0
	075 JumpIfNotEqual {43}
	076 Move X8, W25
	077 Move X9, W24
	078 Move [X19+184], W31
	079 Move [X19+144], X8
	080 Move [X19+152], X9
	081 Move X0, [X19+160]
	082 Compare X0, 0
	083 JumpIfEqual {87}
	084 Move W1, 4
	085 Move X2, X31
	086 Call UnsafeUtility.Free, X0, X1
	087 Move X8, [X19+152]
	088 Move W9, [X19+16]
	089 Move [X19+160], X21
	090 Move [X19+168], X21
	091 Move [X19+120], X20
	092 Move [X19+128], X23
	093 Add X8, X8, X21
	094 Add W9, W9, 1
	095 Move [X19+176], X8
	096 Move [X19+16], W9
	097 Move W0, 1
	098 Move X20, [X31+80]
	099 Move X19, [X31+88]
	100 Move X22, [X31+64]
	101 Move X21, [X31+72]
	102 Move X24, [X31+48]
	103 Move X23, [X31+56]
	104 Move X26, [X31+32]
	105 Move X25, [X31+40]
	106 Move X28, [X31+16]
	107 Move X27, [X31+24]
	108 Move X30, [X31+96]
	109 Return X0
	110 Move X1, [X19+168]
	111 Move X2, [X19+152]
	112 Move X0, X21
	113 Move X3, X31
	114 Call UnsafeUtility.MemCpy, X0, X1, X2
	115 Move X0, 0x8F7000
	116 Move X0, [X0+1400]
	117 Call 0x1C17D08
	118 Call 0x1C17F10
	119 Move X19, X0
	120 Move X0, 0x946000
	121 Move X0, [X0+696]
	122 Call 0x1C17D08
	123 Move X20, X0
	124 Move X0, 0x946000
	125 Move X0, [X0+704]
	126 Call 0x1C17D08
	127 Move X2, X0
	128 Move X0, X19
	129 Move X1, X20
	130 Move X3, X31
	131 Call ArgumentException..ctor, X0, X1, X2
	132 Move X0, 0x946000
	133 Move X0, [X0+712]
	134 Call 0x1C17D08
	135 Move X1, X0
	136 Move X0, X19
	137 Call 0x1C17DEC

Method: System.Void Clear()

Disassembly:
	0x03806088 RET
	0x0380608C STR X1, [X0 + 0x68]
	0x03806090 RET
	0x03806094 SUB X31, X31, 0x20
	0x03806098 STP X30, X19, [X31 + 0x10]
	0x0380609C ADD X2, X31, 0x8
	0x038060A0 MOVZ W1, 0x1

ISIL:
	001 Move W8, [X0+16]
	002 Move [X0+144], X31
	003 Move [X0+152], X31
	004 Move [X0+168], X31
	005 Move [X0+176], X31
	006 Move [X0+192], X31
	007 Add W8, W8, 1
	008 Move [X0+16], W8
	009 Return 

Method: System.Void Enable()

Disassembly:
	0x038060A4 MOV X19, X0
	0x038060A8 STR X31, [X31 + 0x8]
	0x038060AC BL 0x3806118
	0x038060B0 TBZ X0, 0x0, 0x38060D0
	0x038060B4 LDR X1, [X31 + 0x8]
	0x038060B8 MOV X0, X19
	0x038060BC BL 0x380644C
	0x038060C0 MOV X0, X19
	0x038060C4 LDP X30, X19, [X31 + 0x10]
	0x038060C8 ADD X31, X31, 0x20
	0x038060CC RET
	0x038060D0 ADRP X0, 0x8ED000
	0x038060D4 LDR X0, [X0 + 0x5B0]
	0x038060D8 BL 0x1C16D08
	0x038060DC BL 0x1C16F10
	0x038060E0 MOV X19, X0
	0x038060E4 ADRP X0, 0x944000
	0x038060E8 LDR X0, [X0 + 0x368]
	0x038060EC BL 0x1C16D08
	0x038060F0 MOV X1, X0
	0x038060F4 MOV X0, X19
	0x038060F8 MOV X2, X31
	0x038060FC BL 0x337DF1C
	0x03806100 ADRP X0, 0x944000
	0x03806104 LDR X0, [X0 + 0x370]
	0x03806108 BL 0x1C16D08
	0x0380610C MOV X1, X0
	0x03806110 MOV X0, X19
	0x03806114 BL 0x1C16DEC
	0x03806118 SUB X31, X31, 0x50
	0x0380611C STP D9, D8, [X31 + 0x10]
	0x03806120 STP X30, X23, [X31 + 0x20]
	0x03806124 STP X22, X21, [X31 + 0x30]
	0x03806128 STP X20, X19, [X31 + 0x40]
	0x0380612C ADRP X22, 0xBDB000
	0x03806130 LDRB W8, [X22 + 0x443]
	0x03806134 MOV X19, X2
	0x03806138 MOV W21, W1
	0x0380613C MOV X20, X0
	0x03806140 TBNZ X8, 0x0, 0x3806194
	0x03806144 ADRP X0, 0x944000
	0x03806148 LDR X0, [X0 + 0x250]
	0x0380614C BL 0x1C16CF4
	0x03806150 ADRP X0, 0x915000
	0x03806154 LDR X0, [X0 + 0xED0]
	0x03806158 BL 0x1C16CF4
	0x0380615C ADRP X0, 0x944000
	0x03806160 LDR X0, [X0 + 0x238]
	0x03806164 BL 0x1C16CF4
	0x03806168 ADRP X0, 0x915000
	0x0380616C LDR X0, [X0 + 0xEC8]
	0x03806170 BL 0x1C16CF4
	0x03806174 ADRP X0, 0x944000
	0x03806178 LDR X0, [X0 + 0x378]
	0x0380617C BL 0x1C16CF4
	0x03806180 ADRP X0, 0x944000
	0x03806184 LDR X0, [X0 + 0x380]
	0x03806188 BL 0x1C16CF4
	0x0380618C MOVZ W8, 0x1
	0x03806190 STRB W8, [X22 + 0x443]
	0x03806194 STR X31, [X19]
	0x03806198 LDR X0, [X20 + 0x88]
	0x0380619C CBZ X0, 0x38061E0
	0x038061A0 LDR W9, [X20 + 0x80]
	0x038061A4 LDR W8, [X0 + 0x18]
	0x038061A8 ADD W1, W9, 0x1
	0x038061AC CMP W1, W8
	0x038061B0 B.GE 0x380629C
	0x038061B4 TBNZ X9, 0x1F, 0x38062AC
	0x038061B8 SUB W8, W8, 0x1
	0x038061BC CMP W9, W8
	0x038061C0 B.GE 0x38063F0
	0x038061C4 ADRP X8, 0x944000
	0x038061C8 LDR X8, [X8 + 0x380]
	0x038061CC LDR X2, [X8]
	0x038061D0 BL 0x2FD6F3C
	0x038061D4 CBZ X0, 0x3806358
	0x038061D8 LDR V8, [X0 + 0x8]
	0x038061DC B 0x380635C
	0x038061E0 LDR X22, [X20 + 0x20]
	0x038061E4 CBNZ X22, 0x380620C
	0x038061E8 ADRP X8, 0x944000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xBDC000
	006 Move W8, [X20+1076]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {29}
	012 Move X0, 0x940000
	013 Move X0, [X0+1784]
	014 Call 0x1C17CF4
	015 Move X0, 0x8EF000
	016 Move X0, [X0+3696]
	017 Call 0x1C17CF4
	018 Move X0, 0x945000
	019 Move X0, [X0+496]
	020 Call 0x1C17CF4
	021 Move X0, 0x945000
	022 Move X0, [X0+672]
	023 Call 0x1C17CF4
	024 Move X0, 0x916000
	025 Move X0, [X0+624]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X20+1076], W8
	029 Move W8, [X19+20]
	030 Compare W8, 0
	031 JumpIfNotEqual {90}
	032 Move X8, [X19+160]
	033 Compare X8, 0
	034 JumpIfNotEqual {41}
	035 Move X0, [X19+120]
	036 Move W1, 4
	037 Move W2, 4
	038 Move X3, X31
	039 Call UnsafeUtility.Malloc, X0, X1, X2
	040 Move [X19+160], X0
	041 Move X21, 0x916000
	042 Move X21, [X21+624]
	043 Move X0, [X21]
	044 Move W8, [X0+224]
	045 Compare W8, 0
	046 JumpIfNotEqual {48}
	047 Call 0x1C17DFC
	048 Move X0, X31
	049 Call InputSystem.get_onEvent
	050 Move X8, 0x940000
	051 Move X8, [X8+1784]
	052 Move X0, [X8]
	053 Call 0x1C17F10
	054 Move X8, 0x945000
	055 Move X8, [X8+672]
	056 Move X1, X19
	057 Move X3, X31
	058 Move X20, X0
	059 Move X2, [X8]
	060 Call Action`2<InputEventPtr, Object>..ctor, X0, X1, X2
	061 Move X1, X20
	062 Call InputEventListener.op_Addition, X0, X1
	063 And X0, X0, 255
	064 Move X1, X31
	065 Call InputSystem.set_onEvent, X0
	066 Move W8, [X19+185]
	067 Compare W8, 0
	068 JumpIfEqual {88}
	069 Move X8, 0x8EF000
	070 Move X8, [X8+3696]
	071 Move X0, [X8]
	072 Call 0x1C17F10
	073 Move X8, 0x945000
	074 Move X8, [X8+496]
	075 Move X1, X19
	076 Move X3, X31
	077 Move X20, X0
	078 Move X2, [X8]
	079 Call Action..ctor, X0, X1, X2
	080 Move X0, [X21]
	081 Move W8, [X0+224]
	082 Compare W8, 0
	083 JumpIfNotEqual {85}
	084 Call 0x1C17DFC
	085 Move X0, X20
	086 Move X1, X31
	087 Call InputSystem.add_onBeforeUpdate, X0
	088 Move W8, 1
	089 Move [X19+20], W8
	090 Move X20, [X31+16]
	091 Move X19, [X31+24]
	092 Move X30, [X31+32]
	093 Move X21, [X31+40]
	094 Return 

Method: System.Void Disable()

Disassembly:
	0x03805C8C CMP X11, X1
	0x03805C90 B.EQ 0x3805CB0
	0x03805C94 SUBS X9, X9, 0x1
	0x03805C98 ADD X10, X10, 0x10
	0x03805C9C B.NE 0x3805C88
	0x03805CA0 MOV X0, X19
	0x03805CA4 MOV W2, W31
	0x03805CA8 BL 0x1C5C788
	0x03805CAC B 0x3805CBC
	0x03805CB0 LDRSW X9, [X10]
	0x03805CB4 ADD X8, X8, X9, 0x4, LSL
	0x03805CB8 ADD X0, X8, 0x138
	0x03805CBC LDP X8, X1, [X0]
	0x03805CC0 MOV X0, X19
	0x03805CC4 BLR X8
	0x03805CC8 TBZ X0, 0x0, 0x3805D48
	0x03805CCC LDR X8, [X19]
	0x03805CD0 LDR X1, [X25]
	0x03805CD4 LDRH W9, [X8 + 0x12E]
	0x03805CD8 CBZ X9, 0x3805CFC
	0x03805CDC LDR X10, [X8 + 0xB0]
	0x03805CE0 ADD X10, X10, 0x8
	0x03805CE4 LDUR X11, [X10 - 0x8]
	0x03805CE8 CMP X11, X1
	0x03805CEC B.EQ 0x3805D0C
	0x03805CF0 SUBS X9, X9, 0x1
	0x03805CF4 ADD X10, X10, 0x10
	0x03805CF8 B.NE 0x3805CE4
	0x03805CFC MOV X0, X19
	0x03805D00 MOV W2, W31
	0x03805D04 BL 0x1C5C788
	0x03805D08 B 0x3805D18
	0x03805D0C LDRSW X9, [X10]
	0x03805D10 ADD X8, X8, X9, 0x4, LSL
	0x03805D14 ADD X0, X8, 0x138
	0x03805D18 LDP X8, X1, [X0]
	0x03805D1C MOV X0, X19
	0x03805D20 BLR X8
	0x03805D24 MOV X21, X0
	0x03805D28 LDR X0, [X23]
	0x03805D2C LDR W8, [X0 + 0xE0]
	0x03805D30 CBNZ W8, 0x3805D38
	0x03805D34 BL 0x1C16DFC
	0x03805D38 MOV X0, X21
	0x03805D3C MOV X1, X31
	0x03805D40 BL 0x376E798
	0x03805D44 B 0x3805C70
	0x03805D48 MOV X21, X31
	0x03805D4C CBZ X19, 0x3805DA8
	0x03805D50 LDR X8, [X19]
	0x03805D54 LDR X1, [X22]
	0x03805D58 LDRH W9, [X8 + 0x12E]
	0x03805D5C CBZ X9, 0x3805D80
	0x03805D60 LDR X10, [X8 + 0xB0]
	0x03805D64 ADD X10, X10, 0x8
	0x03805D68 LDUR X11, [X10 - 0x8]
	0x03805D6C CMP X11, X1
	0x03805D70 B.EQ 0x3805D90
	0x03805D74 SUBS X9, X9, 0x1
	0x03805D78 ADD X10, X10, 0x10
	0x03805D7C B.NE 0x3805D68
	0x03805D80 MOV X0, X19
	0x03805D84 MOV W2, W31
	0x03805D88 BL 0x1C5C788
	0x03805D8C B 0x3805D9C
	0x03805D90 LDRSW X9, [X10]
	0x03805D94 ADD X8, X8, X9, 0x4, LSL
	0x03805D98 ADD X0, X8, 0x138
	0x03805D9C LDP X8, X1, [X0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0xBDD000
	008 Move W8, [X20+1077]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {31}
	014 Move X0, 0x941000
	015 Move X0, [X0+1784]
	016 Call 0x1C17CF4
	017 Move X0, 0x8F0000
	018 Move X0, [X0+3696]
	019 Call 0x1C17CF4
	020 Move X0, 0x946000
	021 Move X0, [X0+496]
	022 Call 0x1C17CF4
	023 Move X0, 0x946000
	024 Move X0, [X0+672]
	025 Call 0x1C17CF4
	026 Move X0, 0x917000
	027 Move X0, [X0+624]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X20+1077], W8
	031 Move W8, [X19+20]
	032 Compare W8, 0
	033 JumpIfEqual {74}
	034 Move X8, 0x917000
	035 Move X8, [X8+624]
	036 Move X23, 0x941000
	037 Move X20, 0x946000
	038 Move X22, 0x8F0000
	039 Move X0, [X8]
	040 Move X21, 0x946000
	041 Move W8, [X0+224]
	042 Move X23, [X23+1784]
	043 Move X20, [X20+672]
	044 Move X22, [X22+3696]
	045 Move X21, [X21+496]
	046 Compare W8, 0
	047 JumpIfNotEqual {49}
	048 Call 0x1C17DFC
	049 Move X0, X31
	050 Call InputSystem.get_onEvent
	051 Move X0, [X23]
	052 Call 0x1C17F10
	053 Move X2, [X20]
	054 Move X1, X19
	055 Move X3, X31
	056 Move X20, X0
	057 Call Action`2<InputEventPtr, Object>..ctor, X0, X1, X2
	058 Move X1, X20
	059 Call InputEventListener.op_Subtraction, X0, X1
	060 And X0, X0, 255
	061 Move X1, X31
	062 Call InputSystem.set_onEvent, X0
	063 Move X0, [X22]
	064 Call 0x1C17F10
	065 Move X2, [X21]
	066 Move X1, X19
	067 Move X3, X31
	068 Move X20, X0
	069 Call Action..ctor, X0, X1, X2
	070 Move X0, X20
	071 Move X1, X31
	072 Call InputSystem.remove_onBeforeUpdate, X0
	073 Move [X19+20], W31
	074 Move X20, [X31+32]
	075 Move X19, [X31+40]
	076 Move X22, [X31+16]
	077 Move X21, [X31+24]
	078 Move X30, [X31+48]
	079 Move X23, [X31+56]
	080 Return 

Method: System.Boolean GetNextEvent(ref UnityEngine.InputSystem.LowLevel.InputEventPtr current)

Disassembly:
	0x03806010 MOV X0, X22
	0x03806014 MOV W1, W23
	0x03806018 LDR X2, [X8]
	0x0380601C BL 0x2DE566C
	0x03806020 B 0x3806060
	0x03806024 ADRP X8, 0x944000
	0x03806028 LDR X8, [X8 + 0x358]
	0x0380602C ADD X0, X31, 0x8
	0x03806030 MOV W1, W21
	0x03806034 MOV W2, W20
	0x03806038 LDR X3, [X8]
	0x0380603C STR X31, [X31 + 0x8]
	0x03806040 BL 0x2EDEF20
	0x03806044 ADRP X8, 0x944000
	0x03806048 LDR X2, [X31 + 0x8]
	0x0380604C LDR X8, [X8 + 0x350]
	0x03806050 MOV X0, X22
	0x03806054 MOV W1, W23
	0x03806058 LDR X3, [X8]
	0x0380605C BL 0x2DE4C80
	0x03806060 MOV X0, X19
	0x03806064 LDP X20, X19, [X31 + 0x30]
	0x03806068 LDP X22, X21, [X31 + 0x20]
	0x0380606C LDP X24, X23, [X31 + 0x10]
	0x03806070 LDR X30, [X31], #0x40
	0x03806074 RET
	0x03806078 MOVZ W8, 0x1
	0x0380607C STRB W8, [X0 + 0x40]
	0x03806080 RET
	0x03806084 STR X1, [X0 + 0x60]

ISIL:
	001 Move X8, [X0+160]
	002 Compare X8, 0
	003 JumpIfEqual {30}
	004 Move X10, [X0+168]
	005 Compare X10, 0
	006 JumpIfEqual {30}
	007 Move X9, [X1]
	008 Compare X9, 0
	009 JumpIfEqual {27}
	010 NotImplemented "Instruction LDRH not yet implemented."
	011 Move X11, [X0+176]
	012 And W12, W10, 0xFFFC
	013 Add W12, W12, 4
	014 And W31, W10, 3
	015 NotImplemented "Instruction CSEL not yet implemented."
	016 Add X10, X10, X9
	017 NotImplemented "Instruction CMP not yet implemented."
	018 Move X11, [X0+120]
	019 Subtract X12, X8, X10
	020 Add X11, X12, X11
	021 NotImplemented "Instruction CMP not yet implemented."
	022 NotImplemented "Instruction LDRH not yet implemented."
	023 Compare W11, 0
	024 JumpIfNotEqual {27}
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X10, X8
	027 Move W0, 1
	028 Move [X1], X10
	029 Return X0
	030 Move W0, W31
	031 Return X0

Method: System.Collections.Generic.IEnumerator`1<UnityEngine.InputSystem.LowLevel.InputEventPtr> GetEnumerator()

Disassembly:
	0x03805028 LDRH W10, [X9 + 0x4]
	0x0380502C LDR X11, [X0 + 0xB0]
	0x03805030 AND W12, W10, 0xFFFC
	0x03805034 ADD W12, W12, 0x4
	0x03805038 ANDS W31, W10, 0x3
	0x0380503C CSEL W10, W10, W12, EQ
	0x03805040 ADD X10, X10, X9
	0x03805044 CMP X10, X11
	0x03805048 B.EQ 0x3805080
	0x0380504C LDR X11, [X0 + 0x78]
	0x03805050 SUB X12, X8, X10
	0x03805054 ADD X11, X12, X11
	0x03805058 CMP X11, 0x14
	0x0380505C B.LT 0x3805068
	0x03805060 LDRH W11, [X10 + 0x4]
	0x03805064 CBNZ W11, 0x3805074
	0x03805068 CMP X9, X8
	0x0380506C B.EQ 0x3805080
	0x03805070 MOV X10, X8
	0x03805074 MOVZ W0, 0x1
	0x03805078 STR X10, [X1]
	0x0380507C RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xBDD000
	006 Move X21, 0x946000
	007 Move W8, [X20+1078]
	008 Move X21, [X21+592]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x946000
	015 Move X0, [X0+592]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1078], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move X1, X19
	022 Move X20, X0
	023 Call Enumerator..ctor, X0, X1
	024 Move X0, X20
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Return X0

Method: System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()

Disassembly:
	0x03806254 LDR X0, [X23]

ISIL:
	001 Call InputEventTrace.GetEnumerator, X0
	002 Return X0

Method: System.Void Dispose()

Disassembly:
	0x03806258 LDR W8, [X0 + 0xE0]
	0x0380625C CBNZ W8, 0x3806264
	0x03806260 BL 0x1C16DFC
	0x03806264 ADD X0, X31, 0x8
	0x03806268 MOVZ W1, 0x46
	0x0380626C MOVZ W2, 0x52

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call InputEventTrace.Disable, X0
	005 Move X0, X19
	006 Move X30, [X31+16]
	007 Move X19, [X31+24]

Method: System.Byte* get_m_EventBuffer()

Disassembly:
	0x038044FC AND W9, W9, 0xFFFFFFFC
	0x03804500 SUBS W9, W26, W9

ISIL:
	001 Move X0, [X0+160]
	002 Return X0

Method: System.Void set_m_EventBuffer(System.Byte* value)

Disassembly:
	0x038058FC LDP X20, X19, [X31 + 0x80]
	0x03805900 LDP X22, X21, [X31 + 0x70]

ISIL:
	001 Move [X0+160], X1
	002 Return 

Method: System.Byte* get_m_EventBufferHead()

Disassembly:
	0x03806008 ADRP X8, 0x944000
	0x0380600C LDR X8, [X8 + 0x340]

ISIL:
	001 Move X0, [X0+168]
	002 Return X0

Method: System.Void set_m_EventBufferHead(System.Byte* value)

Disassembly:
	0x03805904 LDP X24, X23, [X31 + 0x60]
	0x03805908 LDP X30, X25, [X31 + 0x50]

ISIL:
	001 Move [X0+168], X1
	002 Return 

Method: System.Byte* get_m_EventBufferTail()

Disassembly:
	0x03806214 LDR X23, [X23 + 0x238]
	0x03806218 MOV X0, X22

ISIL:
	001 Move X0, [X0+176]
	002 Return X0

Method: System.Void set_m_EventBufferTail(System.Byte* value)

Disassembly:
	0x0380590C ADD X31, X31, 0x90
	0x03805910 RET

ISIL:
	001 Move [X0+176], X1
	002 Return 

Method: System.Void Allocate()

Disassembly:
	0x038061EC LDR X23, [X20 + 0x18]
	0x038061F0 LDR X8, [X8 + 0x250]
	0x038061F4 LDR X0, [X8]
	0x038061F8 BL 0x1C16F10
	0x038061FC MOV X1, X23
	0x03806200 MOV X22, X0
	0x03806204 BL 0x380521C
	0x03806208 STR X22, [X20 + 0x20]
	0x0380620C CBZ X22, 0x3806448
	0x03806210 ADRP X23, 0x944000

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+120]
	005 Move W1, 4
	006 Move W2, 4
	007 Move X3, X31
	008 Call UnsafeUtility.Malloc, X0, X1, X2
	009 Move [X19+160], X0
	010 Move X30, [X31+16]
	011 Move X19, [X31+24]
	012 Return 

Method: System.Void Release()

Disassembly:
	0x03806270 MOVZ W3, 0x4D
	0x03806274 MOVZ W4, 0x45
	0x03806278 MOV X5, X31
	0x0380627C STR W31, [X31 + 0x8]
	0x03806280 BL 0x375AA28
	0x03806284 LDR W8, [X31 + 0x8]
	0x03806288 CMP W22, W8
	0x0380628C B.NE 0x3806424
	0x03806290 LDR X22, [X20 + 0x20]
	0x03806294 CBNZ X22, 0x3806218
	0x03806298 B 0x3806448
	0x0380629C MOV W0, W31
	0x038062A0 STR W8, [X20 + 0x14]
	0x038062A4 STR W8, [X20 + 0x80]
	0x038062A8 B 0x3806430
	0x038062AC ADRP X8, 0x944000

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W8, [X0+16]
	004 Move X19, X0
	005 Move [X0+144], X31
	006 Move [X0+152], X31
	007 Move X0, [X0+160]
	008 Add W8, W8, 1
	009 Move [X19+168], X31
	010 Move [X19+176], X31
	011 Move [X19+16], W8
	012 Move [X19+192], X31
	013 Compare X0, 0
	014 JumpIfEqual {19}
	015 Move W1, 4
	016 Move X2, X31
	017 Call UnsafeUtility.Free, X0, X1
	018 Move [X19+160], X31
	019 Move X30, [X31+16]
	020 Move X19, [X31+24]
	021 Return 

Method: System.Void OnBeforeUpdate()

Disassembly:
	0x038062B0 LDR X8, [X8 + 0x380]
	0x038062B4 MOV W1, W31
	0x038062B8 LDR X2, [X8]
	0x038062BC BL 0x2FD6F3C
	0x038062C0 CBZ X0, 0x38062CC
	0x038062C4 LDR V0, [X0 + 0x8]
	0x038062C8 B 0x38062D0
	0x038062CC FMOV D0, X31
	0x038062D0 STR D0, [X20 + 0x70]
	0x038062D4 ADRP X8, 0x915000
	0x038062D8 LDR X8, [X8 + 0xEC8]
	0x038062DC LDR X8, [X8]
	0x038062E0 LDR X8, [X8 + 0xB8]
	0x038062E4 LDR X21, [X8]
	0x038062E8 CBZ X21, 0x3806448
	0x038062EC ADRP X10, 0x915000
	0x038062F0 LDR X8, [X21]
	0x038062F4 LDR X10, [X10 + 0xED0]
	0x038062F8 LDRH W9, [X8 + 0x12E]
	0x038062FC LDR X1, [X10]
	0x03806300 CBZ X9, 0x3806324
	0x03806304 LDR X10, [X8 + 0xB0]
	0x03806308 ADD X10, X10, 0x8
	0x0380630C LDUR X11, [X10 - 0x8]
	0x03806310 CMP X11, X1
	0x03806314 B.EQ 0x3806334
	0x03806318 SUBS X9, X9, 0x1
	0x0380631C ADD X10, X10, 0x10
	0x03806320 B.NE 0x380630C
	0x03806324 MOVZ W2, 0x13
	0x03806328 MOV X0, X21
	0x0380632C BL 0x1C5C788
	0x03806330 B 0x3806344
	0x03806334 LDR W9, [X10]
	0x03806338 ADD W9, W9, 0x13
	0x0380633C ADD X8, X8, W9, 0x4, SXTW
	0x03806340 ADD X0, X8, 0x138
	0x03806344 LDP X8, X1, [X0]
	0x03806348 MOV X0, X21
	0x0380634C BLR X8
	0x03806350 STR D0, [X20 + 0x78]
	0x03806354 B 0x38063F0
	0x03806358 FMOV D8, X31
	0x0380635C ADRP X8, 0x915000
	0x03806360 LDR X8, [X8 + 0xEC8]
	0x03806364 LDR X8, [X8]
	0x03806368 LDR X8, [X8 + 0xB8]
	0x0380636C LDR X21, [X8]
	0x03806370 CBZ X21, 0x3806448
	0x03806374 ADRP X10, 0x915000
	0x03806378 LDR X8, [X21]
	0x0380637C LDR V9, [X20 + 0x70]
	0x03806380 LDR X10, [X10 + 0xED0]
	0x03806384 LDRH W9, [X8 + 0x12E]
	0x03806388 LDR X1, [X10]
	0x0380638C CBZ X9, 0x38063B0
	0x03806390 LDR X10, [X8 + 0xB0]
	0x03806394 ADD X10, X10, 0x8
	0x03806398 LDUR X11, [X10 - 0x8]
	0x0380639C CMP X11, X1
	0x038063A0 B.EQ 0x38063C0
	0x038063A4 SUBS X9, X9, 0x1
	0x038063A8 ADD X10, X10, 0x10
	0x038063AC B.NE 0x3806398
	0x038063B0 MOVZ W2, 0x13
	0x038063B4 MOV X0, X21
	0x038063B8 BL 0x1C5C788
	0x038063BC B 0x38063D0
	0x038063C0 LDR W9, [X10]
	0x038063C4 ADD W9, W9, 0x13
	0x038063C8 ADD X8, X8, W9, 0x4, SXTW
	0x038063CC ADD X0, X8, 0x138
	0x038063D0 LDP X8, X1, [X0]
	0x038063D4 MOV X0, X21
	0x038063D8 BLR X8
	0x038063DC LDR V1, [X20 + 0x78]
	0x038063E0 FSUB D0, D0, D1
	0x038063E4 FADD D0, D9, D0
	0x038063E8 FCMP D8, D0
	0x038063EC B.GT 0x380642C
	0x038063F0 LDR W8, [X20 + 0x80]
	0x038063F4 LDR W9, [X20 + 0x14]
	0x038063F8 LDR X0, [X20 + 0x88]
	0x038063FC ADD W1, W8, 0x1
	0x03806400 ADD W8, W9, 0x1
	0x03806404 STR W1, [X20 + 0x80]
	0x03806408 STR W8, [X20 + 0x14]
	0x0380640C CBZ X0, 0x3806448
	0x03806410 ADRP X8, 0x944000
	0x03806414 LDR X8, [X8 + 0x380]
	0x03806418 LDR X2, [X8]
	0x0380641C BL 0x2FD6F3C
	0x03806420 STR X0, [X19]
	0x03806424 MOVZ W0, 0x1

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+64], X22
	004 Move [X31+72], X21
	005 Move [X31+80], X20
	006 Move [X31+88], X19
	007 NotImplemented "Instruction MRS not yet implemented."
	008 Move X8, [X21+40]
	009 Move X20, 0xBDC000
	010 Move X19, X0
	011 Move [X31+40], X8
	012 Move W8, [X20+1079]
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {31}
	017 Move X0, 0x916000
	018 Move X0, [X0+3792]
	019 Call 0x1C17CF4
	020 Move X0, 0x945000
	021 Move X0, [X0+568]
	022 Call 0x1C17CF4
	023 Move X0, 0x916000
	024 Move X0, [X0+3784]
	025 Call 0x1C17CF4
	026 Move X0, 0x945000
	027 Move X0, [X0+720]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X20+1079], W8
	031 Move [X31+16], X31
	032 Move [X31+24], X31
	033 Move [X31+32], W31
	034 Move W8, [X19+185]
	035 Compare W8, 0
	036 JumpIfEqual {93}
	037 Move X8, 0x945000
	038 Move X8, [X8+568]
	039 Move X20, 0x916000
	040 Move X0, [X8]
	041 Move W8, [X0+224]
	042 Move X20, [X20+3784]
	043 Compare W8, 0
	044 JumpIfNotEqual {46}
	045 Call 0x1C17DFC
	046 Add X0, X31, 8
	047 Move W1, 70
	048 Move W2, 82
	049 Move W3, 77
	050 Move W4, 69
	051 Move X5, X31
	052 Move [X31+8], W31
	053 Call FourCC..ctor, X0, X1, X2, X3, X4
	054 Move X8, [X20]
	055 Move X8, [X8+184]
	056 Move X20, [X8]
	057 Compare X20, 0
	058 JumpIfEqual {103}
	059 Move X10, 0x916000
	060 Move X8, [X20]
	061 Move X10, [X10+3792]
	062 Move W22, [X31+8]
	063 NotImplemented "Instruction LDRH not yet implemented."
	064 Move X1, [X10]
	065 Compare X9, 0
	066 JumpIfEqual {73}
	067 Move X10, [X8+176]
	068 Add X10, X10, 8
	069 NotImplemented "Instruction LDUR not yet implemented."
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Subtract X9, X9, 1
	072 Add X10, X10, 16
	073 Move W2, 19
	074 Move X0, X20
	075 Call 0x1C5D788
	076 Move W9, [X10]
	077 Add W9, W9, 19
	078 Add X8, X8, W9
	079 Add X0, X8, 312
	080 Move X8, [X0]
	081 Move X1, [X0+8]
	082 Move X0, X20
	083 NotImplemented "Instruction BLR not yet implemented."
	084 Move W8, 20
	085 Add X1, X31, 16
	086 Move X0, X19
	087 Move X2, X31
	088 Move [X31+24], D0
	089 Move [X31+16], W22
	090 Move [X31+20], W8
	091 Move [X31+32], W31
	092 Call InputEventTrace.OnInputEvent, X0, X1, X2
	093 Move X8, [X21+40]
	094 Move X9, [X31+40]
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Move X20, [X31+80]
	097 Move X19, [X31+88]
	098 Move X22, [X31+64]
	099 Move X21, [X31+72]
	100 Move X30, [X31+48]
	101 Add X31, X31, 96
	102 Return 
	103 Call 0x1C17F20
	104 Call 0x3EB2B20

Method: System.Void OnInputEvent(UnityEngine.InputSystem.LowLevel.InputEventPtr inputEvent, UnityEngine.InputSystem.InputDevice device)

Disassembly:
	0x03806428 B 0x3806430
	0x0380642C MOV W0, W31
	0x03806430 LDP X20, X19, [X31 + 0x40]
	0x03806434 LDP X22, X21, [X31 + 0x30]
	0x03806438 LDP X30, X23, [X31 + 0x20]
	0x0380643C LDP D9, D8, [X31 + 0x10]
	0x03806440 ADD X31, X31, 0x50
	0x03806444 RET
	0x03806448 BL 0x1C16F20
	0x0380644C STR D8, [X31 - 0x40]!
	0x03806450 STP X30, X23, [X31 + 0x10]
	0x03806454 STP X22, X21, [X31 + 0x20]
	0x03806458 STP X20, X19, [X31 + 0x30]
	0x0380645C ADRP X21, 0xBDB000
	0x03806460 LDRB W8, [X21 + 0x442]
	0x03806464 MOV X19, X1
	0x03806468 MOV X20, X0
	0x0380646C STR X1, [X31 + 0x8]
	0x03806470 TBNZ X8, 0x0, 0x38064A0
	0x03806474 ADRP X0, 0x915000
	0x03806478 LDR X0, [X0 + 0xED0]
	0x0380647C BL 0x1C16CF4
	0x03806480 ADRP X0, 0x915000
	0x03806484 LDR X0, [X0 + 0xEC8]
	0x03806488 BL 0x1C16CF4
	0x0380648C ADRP X0, 0x915000
	0x03806490 LDR X0, [X0 + 0x270]
	0x03806494 BL 0x1C16CF4
	0x03806498 MOVZ W8, 0x1
	0x0380649C STRB W8, [X21 + 0x442]
	0x038064A0 CBZ X19, 0x38064C0
	0x038064A4 LDR X8, [X20 + 0x88]
	0x038064A8 LDR V8, [X19 + 0x8]
	0x038064AC CBZ X8, 0x38064CC
	0x038064B0 LDP D0, D1, [X20 + 0x70]
	0x038064B4 FSUB D0, D8, D0
	0x038064B8 FADD D0, D1, D0
	0x038064BC B 0x3806548
	0x038064C0 LDR X8, [X20 + 0x88]
	0x038064C4 FMOV D8, X31
	0x038064C8 CBNZ X8, 0x38064B0
	0x038064CC ADRP X8, 0x915000
	0x038064D0 LDR X8, [X8 + 0xEC8]
	0x038064D4 LDR X8, [X8]
	0x038064D8 LDR X8, [X8 + 0xB8]
	0x038064DC LDR X21, [X8]
	0x038064E0 CBZ X21, 0x380660C
	0x038064E4 ADRP X10, 0x915000
	0x038064E8 LDR X8, [X21]
	0x038064EC LDR X10, [X10 + 0xED0]
	0x038064F0 LDRH W9, [X8 + 0x12E]
	0x038064F4 LDR X1, [X10]
	0x038064F8 CBZ X9, 0x380651C
	0x038064FC LDR X10, [X8 + 0xB0]
	0x03806500 ADD X10, X10, 0x8
	0x03806504 LDUR X11, [X10 - 0x8]
	0x03806508 CMP X11, X1
	0x0380650C B.EQ 0x380652C
	0x03806510 SUBS X9, X9, 0x1
	0x03806514 ADD X10, X10, 0x10
	0x03806518 B.NE 0x3806504
	0x0380651C MOVZ W2, 0x13
	0x03806520 MOV X0, X21
	0x03806524 BL 0x1C5C788
	0x03806528 B 0x380653C
	0x0380652C LDR W9, [X10]
	0x03806530 ADD W9, W9, 0x13
	0x03806534 ADD X8, X8, W9, 0x4, SXTW
	0x03806538 ADD X0, X8, 0x138
	0x0380653C LDP X8, X1, [X0]
	0x03806540 MOV X0, X21
	0x03806544 BLR X8
	0x03806548 ADD X0, X31, 0x8
	0x0380654C BL 0x380289C
	0x03806550 CBZ X19, 0x3806564
	0x03806554 LDR W8, [X19 + 0x10]
	0x03806558 LDRH W21, [X19 + 0x6]
	0x0380655C AND W22, W8, 0x7FFFFFFF
	0x03806560 B 0x380656C
	0x03806564 MOV W22, W31
	0x03806568 MOV W21, W31
	0x0380656C ADRP X23, 0x915000
	0x03806570 LDR X23, [X23 + 0x270]
	0x03806574 MOV X0, X20
	0x03806578 MOV W1, W21
	0x0380657C BL 0x3806D7C
	0x03806580 MOV W1, W0
	0x03806584 ADD X0, X31, 0x8
	0x03806588 BL 0x3802778
	0x0380658C LDR X8, [X20 + 0x68]
	0x03806590 CBZ X8, 0x38065A8
	0x03806594 LDR X9, [X8 + 0x18]
	0x03806598 LDR X0, [X8 + 0x40]
	0x0380659C LDR X2, [X8 + 0x28]
	0x038065A0 MOV X1, X19
	0x038065A4 BLR X9
	0x038065A8 LDR X0, [X23]
	0x038065AC LDR W8, [X0 + 0xE0]
	0x038065B0 CBNZ W8, 0x38065B8
	0x038065B4 BL 0x1C16DFC
	0x038065B8 MOV X0, X19
	0x038065BC MOV X1, X31
	0x038065C0 BL 0x376FAF0
	0x038065C4 MOV X19, X31
	0x038065C8 ADD X0, X31, 0x8
	0x038065CC MOV V0.16B, V8.16B
	0x038065D0 BL 0x380289C
	0x038065D4 ADD X0, X31, 0x8
	0x038065D8 MOV W1, W22
	0x038065DC BL 0x38026DC
	0x038065E0 ADD X0, X31, 0x8
	0x038065E4 MOV W1, W21
	0x038065E8 BL 0x3802778
	0x038065EC CBNZ X19, 0x3806604
	0x038065F0 LDP X20, X19, [X31 + 0x30]
	0x038065F4 LDP X22, X21, [X31 + 0x20]
	0x038065F8 LDP X30, X23, [X31 + 0x10]
	0x038065FC LDR V8, [X31], #0x40
	0x03806600 RET
	0x03806604 MOV X0, X19
	0x03806608 BL 0x1C16F18
	0x0380660C BL 0x1C16F20
	0x03806610 CMP W1, 0x1
	0x03806614 MOV X20, X0
	0x03806618 B.NE 0x3806630
	0x0380661C MOV X0, X20
	0x03806620 BL 0x3EB1AD0
	0x03806624 LDR X19, [X0]
	0x03806628 BL 0x3EB1AE0
	0x0380662C B 0x38065C8
	0x03806630 MOV X19, X31
	0x03806634 B 0x380663C
	0x03806638 MOV X20, X0
	0x0380663C ADD X0, X31, 0x8
	0x03806640 MOV V0.16B, V8.16B
	0x03806644 BL 0x380289C
	0x03806648 ADD X0, X31, 0x8
	0x0380664C MOV W1, W22
	0x03806650 BL 0x38026DC
	0x03806654 ADD X0, X31, 0x8
	0x03806658 MOV W1, W21
	0x0380665C BL 0x3802778
	0x03806660 CBNZ X19, 0x380666C
	0x03806664 MOV X0, X20
	0x03806668 BL 0x1D2C690
	0x0380666C MOV X0, X19
	0x03806670 BL 0x1C16F18
	0x03806674 BL 0x1990590
	0x03806678 MOVN W8, 0x0
	0x0380667C STR X31, [X0 + 0x20]
	0x03806680 STR X31, [X0 + 0x88]
	0x03806684 STR W8, [X0 + 0x80]
	0x03806688 STR W31, [X0 + 0x14]
	0x0380668C RET
	0x03806690 STP X30, X23, [X31 - 0x30]!
	0x03806694 STP X22, X21, [X31 + 0x10]
	0x03806698 STP X20, X19, [X31 + 0x20]
	0x0380669C ADRP X23, 0xBDB000
	0x038066A0 ADRP X22, 0x8EE000
	0x038066A4 ADRP X20, 0x944000
	0x038066A8 ADRP X21, 0x915000
	0x038066AC LDRB W8, [X23 + 0x43E]
	0x038066B0 LDR X22, [X22 + 0xE70]
	0x038066B4 LDR X20, [X20 + 0x310]
	0x038066B8 LDR X21, [X21 + 0x270]
	0x038066BC MOV X19, X0
	0x038066C0 TBNZ X8, 0x0, 0x38066F0
	0x038066C4 ADRP X0, 0x8EE000
	0x038066C8 LDR X0, [X0 + 0xE70]
	0x038066CC BL 0x1C16CF4
	0x038066D0 ADRP X0, 0x915000
	0x038066D4 LDR X0, [X0 + 0x270]
	0x038066D8 BL 0x1C16CF4
	0x038066DC ADRP X0, 0x944000
	0x038066E0 LDR X0, [X0 + 0x310]
	0x038066E4 BL 0x1C16CF4
	0x038066E8 MOVZ W8, 0x1
	0x038066EC STRB W8, [X23 + 0x43E]
	0x038066F0 STRB W31, [X19 + 0x10]
	0x038066F4 LDR X0, [X22]
	0x038066F8 BL 0x1C16F10
	0x038066FC LDR X2, [X20]
	0x03806700 MOV X1, X19
	0x03806704 MOV X3, X31
	0x03806708 MOV X20, X0
	0x0380670C BL 0x3314368
	0x03806710 LDR X0, [X21]
	0x03806714 LDR W8, [X0 + 0xE0]
	0x03806718 CBNZ W8, 0x3806720
	0x0380671C BL 0x1C16DFC
	0x03806720 MOV X0, X20
	0x03806724 MOV X1, X31
	0x03806728 BL 0x3770214
	0x0380672C MOV X0, X19
	0x03806730 LDP X20, X19, [X31 + 0x20]
	0x03806734 LDP X22, X21, [X31 + 0x10]
	0x03806738 LDP X30, X23, [X31], #0x30
	0x0380673C RET
	0x03806740 SUB X31, X31, 0x30
	0x03806744 STP X30, X21, [X31 + 0x10]
	0x03806748 STP X20, X19, [X31 + 0x20]
	0x0380674C MOV X19, X0
	0x03806750 STR X31, [X31 + 0x8]
	0x03806754 STRB W31, [X0 + 0x10]
	0x03806758 ADD X2, X31, 0x8
	0x0380675C MOVZ W1, 0x1
	0x03806760 MOV X0, X19
	0x03806764 BL 0x3806118
	0x03806768 TBZ X0, 0x0, 0x380677C
	0x0380676C LDR X1, [X31 + 0x8]
	0x03806770 MOV X0, X19
	0x03806774 BL 0x380644C
	0x03806778 B 0x3806758
	0x0380677C MOV X0, X19
	0x03806780 BL 0x3806CA8
	0x03806784 MOV X0, X19
	0x03806788 LDP X20, X19, [X31 + 0x20]
	0x0380678C LDP X30, X21, [X31 + 0x10]
	0x03806790 ADD X31, X31, 0x30
	0x03806794 RET
	0x03806798 B 0x380679C
	0x0380679C MOV X20, X0
	0x038067A0 CMP W1, 0x1
	0x038067A4 B.NE 0x38067CC
	0x038067A8 MOV X0, X20
	0x038067AC BL 0x3EB1AD0
	0x038067B0 LDR X21, [X0]
	0x038067B4 BL 0x3EB1AE0
	0x038067B8 MOV X0, X19
	0x038067BC BL 0x3806CA8
	0x038067C0 CBZ X21, 0x3806784
	0x038067C4 MOV X0, X21
	0x038067C8 BL 0x1C16F18
	0x038067CC MOV X21, X31
	0x038067D0 B 0x38067D8
	0x038067D4 MOV X20, X0
	0x038067D8 MOV X0, X19
	0x038067DC BL 0x3806CA8
	0x038067E0 CBNZ X21, 0x38067EC
	0x038067E4 MOV X0, X20
	0x038067E8 BL 0x1D2C690
	0x038067EC MOV X0, X21
	0x038067F0 BL 0x1C16F18
	0x038067F4 BL 0x1990590
	0x038067F8 SUB X31, X31, 0x40
	0x038067FC STP X30, X23, [X31 + 0x10]
	0x03806800 STP X22, X21, [X31 + 0x20]
	0x03806804 STP X20, X19, [X31 + 0x30]
	0x03806808 ADRP X22, 0xBDB000
	0x0380680C ADRP X21, 0x944000
	0x03806810 ADRP X20, 0x944000
	0x03806814 LDRB W8, [X22 + 0x43F]
	0x03806818 LDR X21, [X21 + 0x388]
	0x0380681C LDR X20, [X20 + 0x390]
	0x03806820 MOV X19, X0
	0x03806824 TBNZ X8, 0x0, 0x38068A8
	0x03806828 ADRP X0, 0x8EE000
	0x0380682C LDR X0, [X0 + 0xE70]
	0x03806830 BL 0x1C16CF4
	0x03806834 ADRP X0, 0x944000
	0x03806838 LDR X0, [X0 + 0x398]
	0x0380683C BL 0x1C16CF4
	0x03806840 ADRP X0, 0x915000
	0x03806844 LDR X0, [X0 + 0x270]
	0x03806848 BL 0x1C16CF4
	0x0380684C ADRP X0, 0x944000
	0x03806850 LDR X0, [X0 + 0x3A0]
	0x03806854 BL 0x1C16CF4
	0x03806858 ADRP X0, 0x944000
	0x0380685C LDR X0, [X0 + 0x3A8]
	0x03806860 BL 0x1C16CF4
	0x03806864 ADRP X0, 0x944000
	0x03806868 LDR X0, [X0 + 0x390]
	0x0380686C BL 0x1C16CF4
	0x03806870 ADRP X0, 0x944000
	0x03806874 LDR X0, [X0 + 0x388]
	0x03806878 BL 0x1C16CF4
	0x0380687C ADRP X0, 0x944000
	0x03806880 LDR X0, [X0 + 0x310]
	0x03806884 BL 0x1C16CF4
	0x03806888 ADRP X0, 0x944000
	0x0380688C LDR X0, [X0 + 0x3B0]
	0x03806890 BL 0x1C16CF4
	0x03806894 ADRP X0, 0x944000
	0x03806898 LDR X0, [X0 + 0x3B8]
	0x0380689C BL 0x1C16CF4
	0x038068A0 MOVZ W8, 0x1
	0x038068A4 STRB W8, [X22 + 0x43F]
	0x038068A8 LDR X0, [X21]
	0x038068AC STR X31, [X31 + 0x8]
	0x038068B0 BL 0x1C16F10
	0x038068B4 LDR X1, [X20]
	0x038068B8 MOV X20, X0
	0x038068BC BL 0x2FD6A34
	0x038068C0 ADD X2, X31, 0x8
	0x038068C4 MOVZ W1, 0x1
	0x038068C8 MOV X0, X19
	0x038068CC BL 0x3806118
	0x038068D0 TBZ X0, 0x0, 0x3806948
	0x038068D4 CBZ X20, 0x3806A74
	0x038068D8 ADRP X21, 0x944000
	0x038068DC LDR X21, [X21 + 0x3A0]
	0x038068E0 LDR W10, [X20 + 0x1C]
	0x038068E4 LDR X1, [X31 + 0x8]
	0x038068E8 LDR X8, [X20 + 0x10]
	0x038068EC LDR X9, [X21]
	0x038068F0 ADD W10, W10, 0x1
	0x038068F4 STR W10, [X20 + 0x1C]
	0x038068F8 CBZ X8, 0x3806A74
	0x038068FC LDRSW X10, [X20 + 0x18]
	0x03806900 LDR W11, [X8 + 0x18]
	0x03806904 CMP W10, W11
	0x03806908 B.CS 0x3806920
	0x0380690C ADD W9, W10, 0x1
	0x03806910 ADD X8, X8, X10, 0x3, LSL
	0x03806914 STR W9, [X20 + 0x18]
	0x03806918 STR X1, [X8 + 0x20]

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+80], X30
	003 Move [X31+88], X25
	004 Move [X31+96], X24
	005 Move [X31+104], X23
	006 Move [X31+112], X22
	007 Move [X31+120], X21
	008 Move [X31+128], X20
	009 Move [X31+136], X19
	010 Move X22, 0xBDC000
	011 Move W8, [X22+1080]
	012 Move X20, X2
	013 Move X21, X1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {48}
	019 Move X0, 0x945000
	020 Move X0, [X0+728]
	021 Call 0x1C17CF4
	022 Move X0, 0x945000
	023 Move X0, [X0+736]
	024 Call 0x1C17CF4
	025 Move X0, 0x945000
	026 Move X0, [X0+744]
	027 Call 0x1C17CF4
	028 Move X0, 0x916000
	029 Move X0, [X0+3520]
	030 Call 0x1C17CF4
	031 Move X0, 0x945000
	032 Move X0, [X0+568]
	033 Call 0x1C17CF4
	034 Move X0, 0x916000
	035 Move X0, [X0+3352]
	036 Call 0x1C17CF4
	037 Move X0, 0x916000
	038 Move X0, [X0+624]
	039 Call 0x1C17CF4
	040 Move X0, 0x8EE000
	041 Move X0, [X0+1448]
	042 Call 0x1C17CF4
	043 Move X0, 0x945000
	044 Move X0, [X0+752]
	045 Call 0x1C17CF4
	046 Move W8, 1
	047 Move [X22+1080], W8
	048 NotImplemented "Instruction MOVI not yet implemented."
	049 Move [X31+16], V0
	050 Move [X31+24], V0
	051 Move [X31], X31
	052 Move [X31+8], X31
	053 Compare X21, 0
	054 JumpIfEqual {66}
	055 Move W8, [X21+16]
	056 Move TEMP, X8
	057 And TEMP, TEMP, -2147483648
	058 Compare TEMP, -2147483648
	059 JumpIfEqual {341}
	060 Move W8, [X19+32]
	061 Compare W8, 0
	062 JumpIfEqual {87}
	063 NotImplemented "Instruction LDRH not yet implemented."
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move W22, [X21]
	066 Move W8, [X19+32]
	067 Compare W8, 0
	068 JumpIfEqual {87}
	069 Move W22, W31
	070 Move X8, 0x945000
	071 Move X8, [X8+568]
	072 Move X0, [X8]
	073 Move W8, [X0+224]
	074 Compare W8, 0
	075 JumpIfNotEqual {77}
	076 Call 0x1C17DFC
	077 Add X0, X31, 48
	078 Move W1, 70
	079 Move W2, 82
	080 Move W3, 77
	081 Move W4, 69
	082 Move X5, X31
	083 Move [X31+48], W31
	084 Call FourCC..ctor, X0, X1, X2, X3, X4
	085 Move W8, [X31+48]
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Move X8, [X19+24]
	088 Compare X8, 0
	089 JumpIfEqual {100}
	090 Move X9, [X8+24]
	091 Move X0, [X8+64]
	092 Move X3, [X8+40]
	093 Move X1, X21
	094 Move X2, X20
	095 NotImplemented "Instruction BLR not yet implemented."
	096 Move TEMP, X0
	097 And TEMP, TEMP, 1
	098 Compare TEMP, 1
	099 JumpIfNotEqual {341}
	100 Move X22, [X19+160]
	101 Compare X22, 0
	102 JumpIfEqual {341}
	103 Compare X21, 0
	104 JumpIfEqual {106}
	105 NotImplemented "Instruction LDRH not yet implemented."
	106 Move W8, W31
	107 Move X10, [X19+128]
	108 Add W9, W8, 4
	109 And W9, W9, 0x1FFFC
	110 And W31, W8, 3
	111 NotImplemented "Instruction CSEL not yet implemented."
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Move X0, [X19+176]
	114 Compare X0, 0
	115 JumpIfEqual {117}
	116 Move X11, [X19+168]
	117 Move X11, X22
	118 Move X0, X22
	119 Move [X19+168], X22
	120 Move [X19+176], X22
	121 Move X9, [X19+120]
	122 Add X8, X0, X23
	123 NotImplemented "Instruction CMP not yet implemented."
	124 NotImplemented "Instruction CSET not yet implemented."
	125 NotImplemented "Instruction CMP not yet implemented."
	126 NotImplemented "Instruction CSET not yet implemented."
	127 Add X13, X9, X22
	128 NotImplemented "Instruction CMP not yet implemented."
	129 And W24, W12, W11
	130 NotImplemented "Instruction CMP not yet implemented."
	131 Move W10, [X19+184]
	132 Compare W10, 0
	133 JumpIfNotEqual {165}
	134 Move X8, 0x8EE000
	135 Move X8, [X8+1448]
	136 Move X22, [X19+136]
	137 Add W9, W23, 4
	138 And W9, W9, 0x3FFFC
	139 Move X0, [X8]
	140 And W31, W23, 3
	141 NotImplemented "Instruction CSEL not yet implemented."
	142 Move W8, [X0+224]
	143 Compare W8, 0
	144 JumpIfNotEqual {146}
	145 Call 0x1C17DFC
	146 Move W1, W25
	147 Move X0, X22
	148 Move X2, X31
	149 Call Math.Max, X0, X1
	150 Move X8, [X19+120]
	151 Move X9, [X19+128]
	152 Add X8, X8, X0
	153 NotImplemented "Instruction CMP not yet implemented."
	154 NotImplemented "Instruction CSEL not yet implemented."
	155 NotImplemented "Instruction CMP not yet implemented."
	156 Move TEMP, 0
	157 Not TEMP
	158 Move X2, TEMP
	159 Move X0, X19
	160 Call InputEventTrace.Resize, X0, X1, X2
	161 Move X0, [X19+176]
	162 Move X9, [X19+120]
	163 Move X22, [X19+160]
	164 Add X8, X0, X23
	165 Subtract X10, X22, X0
	166 Add X10, X10, X9
	167 NotImplemented "Instruction CMP not yet implemented."
	168 Move W8, 1
	169 NotImplemented "Instruction CMP not yet implemented."
	170 Move [X19+184], W8
	171 Move W1, 20
	172 Move X2, X31
	173 Call UnsafeUtility.MemClear, X0, X1
	174 Move X22, [X19+160]
	175 Add X8, X22, X23
	176 Move [X19+176], X22
	177 Move TEMP, X24
	178 And TEMP, TEMP, 1
	179 Compare TEMP, 1
	180 JumpIfNotEqual {189}
	181 Move X10, X22
	182 Move [X19+168], X22
	183 Move X11, X22
	184 Compare W24, 0
	185 JumpIfEqual {188}
	186 Move X10, [X19+168]
	187 Move X22, X0
	188 Move X22, X0
	189 Move X10, [X19+168]
	190 NotImplemented "Instruction CMP not yet implemented."
	191 Move X9, [X19+120]
	192 Move X11, X22
	193 Add X9, X11, X9
	194 Subtract X9, X9, 20
	195 NotImplemented "Instruction CMP not yet implemented."
	196 NotImplemented "Instruction LDRH not yet implemented."
	197 Move X13, [X19+144]
	198 Move X14, [X19+152]
	199 Add X10, X10, X12
	200 Subtract X13, X13, 1
	201 Subtract X12, X14, X12
	202 NotImplemented "Instruction CMP not yet implemented."
	203 Move [X19+144], X13
	204 Move [X19+152], X12
	205 NotImplemented "Instruction LDRH not yet implemented."
	206 Compare W12, 0
	207 JumpIfNotEqual {195}
	208 Move X10, X11
	209 Move [X19+168], X10
	210 Move [X19+176], X8
	211 Compare X21, 0
	212 JumpIfEqual {214}
	213 NotImplemented "Instruction LDRH not yet implemented."
	214 Move X2, X31
	215 Move X0, X22
	216 Move X1, X21
	217 Move X3, X31
	218 Call UnsafeUtility.MemCpy, X0, X1, X2
	219 Move W8, [X19+16]
	220 Move X9, [X19+144]
	221 Move X10, [X19+152]
	222 Add W8, W8, 1
	223 Add X9, X9, 1
	224 Add X10, X10, X23
	225 Move [X19+16], W8
	226 Move [X19+144], X9
	227 Move [X19+152], X10
	228 Compare X20, 0
	229 JumpIfEqual {324}
	230 Move X21, X19
	231 Add X21, X21, 192
	232 Move X11, [X21]
	233 Compare X11, 0
	234 JumpIfEqual {246}
	235 Move W8, [X11+24]
	236 NotImplemented "Instruction CMP not yet implemented."
	237 Move W10, [X20+224]
	238 Move W9, W31
	239 Add X11, X11, 32
	240 NotImplemented "Instruction CMP not yet implemented."
	241 Move W12, [X11]
	242 NotImplemented "Instruction CMP not yet implemented."
	243 Add W9, W9, 1
	244 NotImplemented "Instruction CMP not yet implemented."
	245 Add X11, X11, 32
	246 NotImplemented "Instruction MOVI not yet implemented."
	247 Move [X31+16], V0
	248 Move [X31+24], V0
	249 Move W8, [X20+224]
	250 Move X0, X20
	251 Move X1, X31
	252 Move [X31+16], W8
	253 Call InputControl.get_layout, X0
	254 Move X9, 0x916000
	255 Move X9, [X9+3352]
	256 Move X8, X0
	257 Move [X31+24], X8
	258 Move X23, [X20+16]
	259 Move X0, [X9]
	260 Move X8, X23
	261 Move W9, [X0+224]
	262 Compare W9, 0
	263 JumpIfNotEqual {266}
	264 Call 0x1C17DFC
	265 Move X8, [X20+16]
	266 Move X9, [X20+24]
	267 Add X0, X31, 0
	268 Move [X31+32], W23
	269 Move [X31], X8
	270 Move [X31+8], X9
	271 Call InputStateBlock.get_alignedSizeInBytes, X0
	272 Move X23, 0x916000
	273 Move X23, [X23+3520]
	274 Move [X31+36], W0
	275 Move X8, [X23]
	276 Move W9, [X8+224]
	277 Compare W9, 0
	278 JumpIfNotEqual {282}
	279 Move X0, X8
	280 Call 0x1C17DFC
	281 Move X8, [X23]
	282 Move X8, [X8+184]
	283 Move X1, [X20+88]
	284 Move X2, [X20+96]
	285 Move X3, X31
	286 Add X0, X8, 16
	287 Call Collection.IsGeneratedLayout, X0, X1
	288 Move W8, W0
	289 Move X0, X31
	290 Move TEMP, X8
	291 And TEMP, TEMP, 1
	292 Compare TEMP, 1
	293 JumpIfNotEqual {313}
	294 Move X0, X20
	295 Move X1, X31
	296 Call InputControl.get_layout, X0
	297 Move X8, 0x916000
	298 Move X8, [X8+624]
	299 Move X20, X0
	300 Move X8, [X8]
	301 Move W9, [X8+224]
	302 Compare W9, 0
	303 JumpIfNotEqual {306}
	304 Move X0, X8
	305 Call 0x1C17DFC
	306 Move X0, X20
	307 Move X1, X31
	308 Call InputSystem.LoadLayout, X0
	309 Compare X0, 0
	310 JumpIfEqual {352}
	311 Move X1, X31
	312 Call InputControlLayout.ToJson, X0
	313 Move [X31+40], X0
	314 Move X8, 0x945000
	315 Move X8, [X8+728]
	316 Move V0, [X31+16]
	317 Move V1, [X31+32]
	318 Add X1, X31, 48
	319 Move X0, X21
	320 Move X2, [X8]
	321 Move [X31+48], V0
	322 Move [X31+56], V1
	323 Call ArrayHelpers.Append, X0, X1
	324 Move X8, 0x945000
	325 Move X8, [X8+736]
	326 Add X19, X19, 40
	327 Move X0, X19
	328 Move X1, [X8]
	329 Call 0x28F240C, X0
	330 NotImplemented "Instruction CMP not yet implemented."
	331 Move X8, 0x945000
	332 Move X9, 0x945000
	333 Move X8, [X8+752]
	334 Move X9, [X9+744]
	335 Move X0, X19
	336 Move X1, X22
	337 Move X2, [X8]
	338 Move X4, [X9]
	339 Move X3, X31
	340 Call 0x21AE080, X0, X1, X2, X3
	341 Move X20, [X31+128]
	342 Move X19, [X31+136]
	343 Move X22, [X31+112]
	344 Move X21, [X31+120]
	345 Move X24, [X31+96]
	346 Move X23, [X31+104]
	347 Move X30, [X31+80]
	348 Move X25, [X31+88]
	349 Add X31, X31, 144
	350 Return 
	351 Call 0x1C17F28
	352 Call 0x1C17F20

Method: UnityEngine.InputSystem.Utilities.FourCC get_kFileFormat()

Disassembly:
	0x03804FF8 BL 0x1C16D08
	0x03804FFC MOV X1, X0
	0x03805000 MOV X0, X19
	0x03805004 BL 0x1C16DEC
	0x03805008 LDR X0, [X0 + 0xA8]
	0x0380500C RET
	0x03805010 LDR X8, [X0 + 0xA0]
	0x03805014 CBZ X8, 0x3805080
	0x03805018 LDR X10, [X0 + 0xA8]
	0x0380501C CBZ X10, 0x3805080
	0x03805020 LDR X9, [X1]
	0x03805024 CBZ X9, 0x3805074

ISIL:
	001 Move [X31-16], X30
	002 Add X0, X31, 8
	003 Move W1, 73
	004 Move W2, 69
	005 Move W3, 86
	006 Move W4, 84
	007 Move X5, X31
	008 Move [X31+8], W31
	009 Call FourCC..ctor, X0, X1, X2, X3, X4
	010 Move W0, [X31+8]
	011 Move X30, [X31+16]
	012 Return X0

Method: System.Void .cctor()

Disassembly:
	0x0380691C B 0x3806934
	0x03806920 LDR X8, [X9 + 0x20]
	0x03806924 MOV X0, X20
	0x03806928 LDR X8, [X8 + 0xC0]
	0x0380692C LDR X2, [X8 + 0x70]
	0x03806930 BL 0x2FD722C
	0x03806934 ADD X2, X31, 0x8
	0x03806938 MOVZ W1, 0x1
	0x0380693C MOV X0, X19
	0x03806940 BL 0x3806118
	0x03806944 TBNZ X0, 0x0, 0x38068E0
	0x03806948 ADRP X23, 0x944000
	0x0380694C LDR X23, [X23 + 0x3B8]
	0x03806950 LDR X0, [X23]
	0x03806954 LDR W8, [X0 + 0xE0]
	0x03806958 CBNZ W8, 0x3806964
	0x0380695C BL 0x1C16DFC
	0x03806960 LDR X0, [X23]
	0x03806964 LDR X8, [X0 + 0xB8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xBDC000
	005 Move X20, 0x945000
	006 Move W8, [X19+1081]
	007 Move X20, [X20+568]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x945000
	013 Move X0, [X0+568]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+1081], W8
	017 Move X8, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move W9, 1
	021 Move X8, [X8+184]
	022 Move [X8], W9
	023 Move X30, [X31+32]
	024 Return 

