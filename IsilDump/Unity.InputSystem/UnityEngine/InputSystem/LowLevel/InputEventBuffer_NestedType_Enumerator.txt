Type: UnityEngine.InputSystem.LowLevel.InputEventBuffer/Enumerator

Method: System.Void .ctor(UnityEngine.InputSystem.LowLevel.InputEventBuffer buffer)

Disassembly:
	0x03802FCC LDR W8, [X20 + 0x6C]
	0x03802FD0 CMP W8, 0x1
	0x03802FD4 B.LT 0x380302C
	0x03802FD8 ADRP X8, 0x948000
	0x03802FDC LDR X8, [X8 + 0xC8]
	0x03802FE0 LDP X0, X1, [X20]
	0x03802FE4 LDR X2, [X8]
	0x03802FE8 BL 0x2222670
	0x03802FEC LDR X8, [X20 + 0x28]
	0x03802FF0 ADRP X24, 0xBDF000
	0x03802FF4 LDRB W9, [X24 + 0x40F]
	0x03802FF8 LDR W22, [X20 + 0x6C]
	0x03802FFC MOV X23, X0
	0x03803000 SUB X21, X8, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, X0
	005 Move X0, X1
	006 Move X19, X1
	007 Call InputEventBuffer.get_bufferPtr, X0
	008 Move [X20], X0
	009 Move W8, [X19+24]
	010 Move [X20+16], X31
	011 Move [X20+24], W31
	012 Move [X20+8], W8
	013 Move X20, [X31+16]
	014 Move X19, [X31+24]
	015 Move X30, [X31+32]
	016 Return 

Method: System.Boolean MoveNext()

Disassembly:
	0x038031AC MOV X1, X20
	0x038031B0 BL 0x3801B30
	0x038031B4 CBZ X23, 0x3803260
	0x038031B8 MOV X0, X22
	0x038031BC BL 0x380180C
	0x038031C0 CMP X21, X0
	0x038031C4 B.EQ 0x3803278
	0x038031C8 LDUR V0, [X19 + 0x58]
	0x038031CC SUB X8, X0, X21
	0x038031D0 UNIMPLEMENTED
	0x00000000 INVALID
	0x038031D8 STUR V0, [X19 + 0x58]
	0x038031DC B 0x3803278
	0x038031E0 ADRP X9, 0x8F0000
	0x038031E4 LDR X9, [X9 + 0x758]
	0x038031E8 ADRP X19, 0x947000
	0x038031EC LDR X19, [X19 + 0x1E0]
	0x038031F0 ADRP X20, 0x947000
	0x038031F4 LDR X0, [X9]
	0x038031F8 ADRP X21, 0x8F0000
	0x038031FC LDR X20, [X20 + 0x1E8]
	0x03803200 LDR X21, [X21 + 0xA28]
	0x03803204 ADD X1, X31, 0xC
	0x03803208 STR W8, [X31 + 0xC]
	0x0380320C BL 0x1C16E04
	0x03803210 LDR X8, [X19]

ISIL:
	001 Move W10, [X0+24]
	002 Move W9, [X0+8]
	003 NotImplemented "Instruction CMP not yet implemented."
	004 Move X8, [X0+16]
	005 Compare X8, 0
	006 JumpIfEqual {12}
	007 Add W10, W10, 1
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Move [X0+24], W10
	010 Move W0, W31
	011 Return X0
	012 Move X8, [X0]
	013 NotImplemented "Instruction CMP not yet implemented."
	014 Move [X0+16], X8
	015 NotImplemented "Instruction CSET not yet implemented."
	016 Return X0
	017 NotImplemented "Instruction LDRH not yet implemented."
	018 And W10, W9, 0xFFFC
	019 And W31, W9, 3
	020 Add W10, W10, 4
	021 NotImplemented "Instruction CSEL not yet implemented."
	022 Add X8, X9, X8
	023 Move [X0+16], X8
	024 Move W0, 1
	025 Return X0

Method: System.Void Reset()

Disassembly:
	0x03803214 MOV X1, X0
	0x03803218 MOV X2, X31
	0x0380321C MOV X0, X8

ISIL:
	001 Move [X0+16], X31
	002 Move [X0+24], W31
	003 Return 

Method: System.Void Dispose()

Disassembly:
	0x03803220 BL 0x321EFD0

ISIL:
	001 Return 

Method: UnityEngine.InputSystem.LowLevel.InputEventPtr get_Current()

Disassembly:
	0x03803224 LDR X8, [X20]
	0x03803228 MOV X1, X0

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x0380322C MOV X2, X31
	0x03803230 MOV X0, X8
	0x03803234 BL 0x321B938
	0x03803238 LDR X8, [X21]
	0x0380323C MOV X19, X0
	0x03803240 LDR W9, [X8 + 0xE0]
	0x03803244 CBNZ W9, 0x3803250
	0x03803248 MOV X0, X8
	0x0380324C BL 0x1C16DFC
	0x03803250 MOV X0, X19
	0x03803254 MOV X1, X31
	0x03803258 BL 0x3C0649C
	0x0380325C B 0x3803284
	0x03803260 ADRP X8, 0x947000
	0x03803264 LDP X0, X1, [X19 + 0x38]
	0x03803268 LDR X8, [X8 + 0xC8]
	0x0380326C LDR X2, [X8]
	0x03803270 BL 0x2222670
	0x03803274 STP X0, X0, [X19 + 0x58]
	0x03803278 LDR W8, [X19 + 0x68]
	0x0380327C ADD W8, W8, 0x1
	0x03803280 STR W8, [X19 + 0x68]
	0x03803284 LDP X20, X19, [X31 + 0x30]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xBDF000
	007 Move X20, 0x91C000
	008 Move W8, [X21+1049]
	009 Move X20, [X20+1272]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x91C000
	016 Move X0, [X0+1272]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+1049], W8
	020 Move X8, [X19+16]
	021 Move X0, [X20]
	022 Add X1, X31, 8
	023 Move [X31+8], X8
	024 Call 0x1C17E04
	025 Move X20, [X31+32]
	026 Move X19, [X31+40]
	027 Move X30, [X31+16]
	028 Move X21, [X31+24]
	029 Add X31, X31, 48
	030 Return X0

