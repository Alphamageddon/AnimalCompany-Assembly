Type: UnityEngine.InputSystem.LowLevel.InputEventListener/DisposableObserver

Method: System.Void Dispose()

Disassembly:
	0x03803564 STR X30, [X31 - 0x30]!
	0x03803568 STP X22, X21, [X31 + 0x10]
	0x0380356C STP X20, X19, [X31 + 0x20]
	0x03803570 ADRP X22, 0xBDE000
	0x03803574 ADRP X21, 0x947000
	0x03803578 LDRB W8, [X22 + 0x42B]
	0x0380357C LDR X21, [X21 + 0x200]
	0x03803580 MOV X19, X1
	0x03803584 MOV X20, X0
	0x03803588 TBNZ X8, 0x0, 0x38035A0
	0x0380358C ADRP X0, 0x947000
	0x03803590 LDR X0, [X0 + 0x200]
	0x03803594 BL 0x1C16CF4
	0x03803598 MOVZ W8, 0x1
	0x0380359C STRB W8, [X22 + 0x42B]
	0x038035A0 LDR X2, [X21]
	0x038035A4 ADD X0, X20, 0x28
	0x038035A8 MOV X1, X19
	0x038035AC LDP X20, X19, [X31 + 0x20]
	0x038035B0 LDP X22, X21, [X31 + 0x10]
	0x038035B4 LDR X30, [X31], #0x30
	0x038035B8 B 0x28F14E0
	0x038035BC STR X30, [X31 - 0x30]!
	0x038035C0 STP X22, X21, [X31 + 0x10]
	0x038035C4 STP X20, X19, [X31 + 0x20]
	0x038035C8 ADRP X22, 0xBDE000
	0x038035CC ADRP X21, 0x947000
	0x038035D0 LDRB W8, [X22 + 0x42C]
	0x038035D4 LDR X21, [X21 + 0x208]
	0x038035D8 MOV X19, X1
	0x038035DC MOV X20, X0
	0x038035E0 TBNZ X8, 0x0, 0x38035F8
	0x038035E4 ADRP X0, 0x947000
	0x038035E8 LDR X0, [X0 + 0x208]
	0x038035EC BL 0x1C16CF4
	0x038035F0 MOVZ W8, 0x1
	0x038035F4 STRB W8, [X22 + 0x42C]
	0x038035F8 LDR X2, [X21]
	0x038035FC ADD X0, X20, 0x28
	0x03803600 MOV X1, X19
	0x03803604 LDP X20, X19, [X31 + 0x20]
	0x03803608 LDP X22, X21, [X31 + 0x10]
	0x0380360C LDR X30, [X31], #0x30
	0x03803610 B 0x28F1650
	0x03803614 STR X30, [X31 - 0x40]!
	0x03803618 STP X24, X23, [X31 + 0x10]
	0x0380361C STP X22, X21, [X31 + 0x20]
	0x03803620 STP X20, X19, [X31 + 0x30]
	0x03803624 MOV X20, X1
	0x03803628 MOV X1, X31
	0x0380362C MOV X21, X5
	0x03803630 MOV X22, X4
	0x03803634 MOV W23, W3
	0x03803638 MOV X24, X2
	0x0380363C MOV X19, X0
	0x03803640 BL 0x33BDD8C
	0x03803644 AND X8, X24, 0x0
	0x03803648 STR X8, [X19 + 0x78]
	0x0380364C TBZ X23, 0x0, 0x3803670
	0x03803650 CMP X22, 0x0
	0x03803654 MOVZ W8, 0x10000000
	0x03803658 CSEL X8, X22, X8, GE
	0x0380365C STR X8, [X19 + 0x80]
	0x03803660 TBNZ X21, 0x0, 0x3803694
	0x03803664 STR X21, [X19 + 0x88]
	0x03803668 CBNZ X20, 0x3803678
	0x0380366C B 0x38036A0
	0x03803670 STR X8, [X19 + 0x80]
	0x03803674 CBZ X20, 0x38036A0
	0x03803678 LDR W8, [X20 + 0xE0]
	0x0380367C LDP X22, X21, [X31 + 0x20]
	0x03803680 LDP X24, X23, [X31 + 0x10]
	0x03803684 STR W8, [X19 + 0x20]
	0x03803688 LDP X20, X19, [X31 + 0x30]
	0x0380368C LDR X30, [X31], #0x40
	0x03803690 RET
	0x03803694 MOVZ W8, 0x100000
	0x03803698 STR X8, [X19 + 0x88]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+64], X30
	003 Move [X31+72], X21
	004 Move [X31+80], X20
	005 Move [X31+88], X19
	006 Move X21, 0xBDF000
	007 Move X20, 0x944000
	008 Move W8, [X21+1055]
	009 Move X20, [X20+2384]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {29}
	015 Move X0, 0x948000
	016 Move X0, [X0+376]
	017 Call 0x1C17CF4
	018 Move X0, 0x948000
	019 Move X0, [X0+384]
	020 Call 0x1C17CF4
	021 Move X0, 0x944000
	022 Move X0, [X0+2384]
	023 Call 0x1C17CF4
	024 Move X0, 0x919000
	025 Move X0, [X0+624]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+1055], W8
	029 Move X8, [X20]
	030 Move X8, [X8+184]
	031 Move X8, [X8]
	032 Compare X8, 0
	033 JumpIfEqual {95}
	034 Move X9, [X8+32]
	035 Move V0, [X8+1]
	036 Move X8, 0x948000
	037 Move X8, [X8+384]
	038 Move [X31+16], X9
	039 Move [X31], V0
	040 Move X1, [X19+16]
	041 Move X2, [X8]
	042 Add X0, X31, 32
	043 Move [X31+2], V0
	044 Move [X31+48], X9
	045 Call 0x21FC010, X0, X1
	046 Move TEMP, X0
	047 And TEMP, TEMP, -2147483648
	048 Compare TEMP, -2147483648
	049 JumpIfEqual {61}
	050 Move X8, [X20]
	051 Move X8, [X8+184]
	052 Move X8, [X8]
	053 Compare X8, 0
	054 JumpIfEqual {95}
	055 Move X9, 0x948000
	056 Move X9, [X9+376]
	057 Move W1, W0
	058 Add X0, X8, 16
	059 Move X2, [X9]
	060 Call InlinedArray`1<Object>.RemoveAtWithCapacity, X0, X1
	061 Move X8, [X20]
	062 Move X8, [X8+184]
	063 Move X8, [X8]
	064 Compare X8, 0
	065 JumpIfEqual {95}
	066 Move W9, [X8+16]
	067 Compare W9, 0
	068 JumpIfNotEqual {89}
	069 Move X19, 0x919000
	070 Move X19, [X19+624]
	071 Move X0, [X19]
	072 Move W9, [X0+224]
	073 Compare W9, 0
	074 JumpIfNotEqual {82}
	075 Call 0x1C17DFC
	076 Move X8, [X20]
	077 Move X8, [X8+184]
	078 Move X8, [X8]
	079 Compare X8, 0
	080 JumpIfEqual {95}
	081 Move X0, [X19]
	082 Move X9, [X0+184]
	083 Move X0, [X9]
	084 Compare X0, 0
	085 JumpIfEqual {95}
	086 Move X1, [X8+40]
	087 Move X2, X31
	088 Call InputManager.remove_onEvent, X0, X1
	089 Move X20, [X31+80]
	090 Move X19, [X31+88]
	091 Move X30, [X31+64]
	092 Move X21, [X31+72]
	093 Add X31, X31, 96
	094 Return 
	095 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x03803468 LDR X8, [X8 + 0x1F0]
	0x0380346C MOV X1, X20

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

