Type: UnityEngine.InputSystem.LowLevel.InputStateBuffers

Method: UnityEngine.InputSystem.LowLevel.InputStateBuffers/DoubleBuffers GetDoubleBuffersFor(UnityEngine.InputSystem.LowLevel.InputUpdateType updateType)

Disassembly:
	0x0380D3A8 MOV X0, X20
	0x0380D3AC MOV X1, X19
	0x0380D3B0 MOV X3, X31
	0x0380D3B4 BL 0x3311888
	0x0380D3B8 ADRP X0, 0x93D000
	0x0380D3BC LDR X0, [X0 + 0x5E8]
	0x0380D3C0 BL 0x1C16D08
	0x0380D3C4 MOV X1, X0
	0x0380D3C8 MOV X0, X20
	0x0380D3CC BL 0x1C16DEC
	0x0380D3D0 BL 0x1C16F20
	0x0380D3D4 SUB X31, X31, 0x50
	0x0380D3D8 STP X2, X30, [X31 + 0x8]
	0x0380D3DC STP X24, X23, [X31 + 0x20]
	0x0380D3E0 STP X22, X21, [X31 + 0x30]
	0x0380D3E4 STP X20, X19, [X31 + 0x40]
	0x0380D3E8 ADRP X21, 0xBD4000
	0x0380D3EC LDRB W8, [X21 + 0x4A0]
	0x0380D3F0 MOV X20, X1
	0x0380D3F4 MOV X19, X0
	0x0380D3F8 STR X1, [X31]
	0x0380D3FC TBNZ X8, 0x0, 0x380D42C
	0x0380D400 ADRP X0, 0x93C000
	0x0380D404 LDR X0, [X0 + 0xC00]
	0x0380D408 BL 0x1C16CF4
	0x0380D40C ADRP X0, 0x93D000
	0x0380D410 LDR X0, [X0 + 0x5F0]
	0x0380D414 BL 0x1C16CF4
	0x0380D418 ADRP X0, 0x90E000
	0x0380D41C LDR X0, [X0 + 0xD40]
	0x0380D420 BL 0x1C16CF4
	0x0380D424 MOVZ W8, 0x1
	0x0380D428 STRB W8, [X21 + 0x4A0]
	0x0380D42C ADD X0, X31, 0x0
	0x0380D430 BL 0x380EBFC
	0x0380D434 TBZ X0, 0x0, 0x380D628
	0x0380D438 MOV X0, X19
	0x0380D43C BL 0x380EC88
	0x0380D440 ADD X0, X31, 0x0
	0x0380D444 BL 0x380ED58
	0x0380D448 LDR X8, [X19]
	0x0380D44C CBZ X8, 0x380D624
	0x0380D450 ADRP X21, 0x93D000
	0x0380D454 LDR X21, [X21 + 0x5F0]
	0x0380D458 MOV X22, X0
	0x0380D45C MOV X0, X8
	0x0380D460 BL 0x380D014
	0x0380D464 LDR X3, [X21]
	0x0380D468 MOV X2, X22
	0x0380D46C BL 0x223C9C8
	0x0380D470 MOV W21, W0
	0x0380D474 ADDS W31, W0, 0x1
	0x0380D478 B.NE 0x380D4B0

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+48], X20
	004 Move [X31+56], X19
	005 NotImplemented "Instruction CMP not yet implemented."
	006 Move W8, 1
	007 Move W9, 22
	008 NotImplemented "Instruction LSLV not yet implemented."
	009 NotImplemented "Instruction MOVK not yet implemented."
	010 And W31, W8, W9
	011 Move X0, [X0+40]
	012 Move X20, [X31+48]
	013 Move X19, [X31+56]
	014 Move X30, [X31+32]
	015 Add X31, X31, 64
	016 Return X0
	017 Move X0, 0x93A000
	018 Move X0, [X0+2488]
	019 Move W19, W1
	020 Call 0x1C17D08
	021 Move TEMP, 0
	022 Not TEMP
	023 Move X8, TEMP
	024 Move [X31+8], X0
	025 Move [X31+16], X8
	026 Add X0, X31, 8
	027 Move X1, X31
	028 Move [X31+24], W19
	029 Call Enum.ToString, X0
	030 Move X19, X0
	031 Move X0, 0x93E000
	032 Move X0, [X0+1376]
	033 Call 0x1C17D08
	034 Move X1, X19
	035 Move X2, X31
	036 Call String.Concat, X0, X1
	037 Move X19, X0
	038 Move X0, 0x8EF000
	039 Move X0, [X0+1400]
	040 Call 0x1C17D08
	041 Call 0x1C17F10
	042 Move X20, X0
	043 Move X0, 0x93E000
	044 Move X0, [X0+1384]
	045 Call 0x1C17D08
	046 Move X2, X0
	047 Move X0, X20
	048 Move X1, X19
	049 Move X3, X31
	050 Call ArgumentException..ctor, X0, X1, X2
	051 Move X0, 0x93E000
	052 Move X0, [X0+1392]
	053 Call 0x1C17D08
	054 Move X1, X0
	055 Move X0, X20
	056 Call 0x1C17DEC

Method: System.Void* GetFrontBufferForDevice(System.Int32 deviceIndex)

Disassembly:
	0x0380D47C LDR X8, [X19]
	0x0380D480 CBZ X8, 0x380D624
	0x0380D484 LDRB W9, [X8 + 0x60]
	0x0380D488 CBZ W9, 0x380D6E8
	0x0380D48C ADRP X9, 0x93C000
	0x0380D490 LDR X9, [X9 + 0xC00]
	0x0380D494 ADD X0, X8, 0x20
	0x0380D498 ADD X1, X8, 0x28
	0x0380D49C MOVZ W3, 0xA
	0x0380D4A0 LDR X4, [X9]
	0x0380D4A4 MOV X2, X22
	0x0380D4A8 BL 0x2174728
	0x0380D4AC MOV W21, W0
	0x0380D4B0 LDR X8, [X19]
	0x0380D4B4 CBZ X8, 0x380D624
	0x0380D4B8 CBZ X20, 0x380D624
	0x0380D4BC LDR W24, [X8 + 0x40]
	0x0380D4C0 LDR W8, [X20 + 0x40]
	0x0380D4C4 CMP W24, W8
	0x0380D4C8 B.NE 0x380D684
	0x0380D4CC MOV X0, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xBD5000
	006 Move X21, 0x912000
	007 Move W8, [X20+1153]
	008 Move X21, [X21+4072]
	009 Move W19, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x912000
	015 Move X0, [X0+4072]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1153], W8
	019 Move X8, [X21]
	020 Move W9, W19
	021 ShiftRight W9, 31
	022 And W9, W9, 0x3FFFFFFF
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X8, [X8+184]
	026 Move X8, [X8+24]
	027 Move X0, [X8]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Return X0

Method: System.Void* GetBackBufferForDevice(System.Int32 deviceIndex)

Disassembly:
	0x0380D4E0 MOV X22, X0
	0x0380D4E4 MOVZ W2, 0xC
	0x0380D4E8 MOV X0, X23
	0x0380D4EC MOV X1, X22
	0x0380D4F0 MOV X3, X31
	0x0380D4F4 BL 0x3BFF954
	0x0380D4F8 LDR X9, [X19]
	0x0380D4FC CBZ X9, 0x380D624
	0x0380D500 LDR W8, [X9 + 0x54]
	0x0380D504 ADD W8, W8, 0x1
	0x0380D508 STR W8, [X9 + 0x54]
	0x0380D50C CBZ X23, 0x380D624
	0x0380D510 STR W8, [X23 + 0x8]
	0x0380D514 LDR X0, [X19]
	0x0380D518 STR W8, [X19 + 0xC]
	0x0380D51C CBZ X0, 0x380D624
	0x0380D520 BL 0x380D014
	0x0380D524 UBFM X8, X1, 0x20, 0x3F
	0x0380D528 CMP W8, 0x1
	0x0380D52C B.GT 0x380D540
	0x0380D530 LDR X8, [X19]
	0x0380D534 CBZ X8, 0x380D624

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xBD5000
	006 Move X21, 0x912000
	007 Move W8, [X20+1154]
	008 Move X21, [X21+4072]
	009 Move W19, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x912000
	015 Move X0, [X0+4072]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1154], W8
	019 Move X8, [X21]
	020 Move W9, 1
	021 NotImplemented "Instruction BFM not yet implemented."
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X8, [X8+184]
	025 Move X8, [X8+24]
	026 Move X0, [X8]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Return X0

Method: System.Void SwitchTo(UnityEngine.InputSystem.LowLevel.InputStateBuffers buffers, UnityEngine.InputSystem.LowLevel.InputUpdateType update)

Disassembly:
	0x0380D54C SXTW X2, W24
	0x0380D550 CMP W8, 0x1
	0x0380D554 B.GT 0x380D560
	0x0380D558 LDRB W8, [X20 + 0x60]
	0x0380D55C CBZ W8, 0x380D614
	0x0380D560 ADD X1, X22, 0x10
	0x0380D564 MOV X3, X31
	0x0380D568 BL 0x3BFF954
	0x0380D56C LDR X1, [X19]
	0x0380D570 CBZ X1, 0x380D624
	0x0380D574 LDR W21, [X1 + 0x4C]
	0x0380D578 CMP W21, 0x1
	0x0380D57C B.LT 0x380D5CC
	0x0380D580 LDR W8, [X20 + 0x4C]
	0x0380D584 CMP W21, W8
	0x0380D588 B.NE 0x380D5CC
	0x0380D58C MOV X0, X19
	0x0380D590 BL 0x380EC88
	0x0380D594 MOV X0, X19
	0x0380D598 BL 0x380F008
	0x0380D59C MOV X20, X0
	0x0380D5A0 ADD X0, X31, 0x0
	0x0380D5A4 BL 0x380EC88
	0x0380D5A8 ADD X0, X31, 0x0
	0x0380D5AC BL 0x380F008

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xBD5000
	007 Move X21, 0x912000
	008 Move W8, [X22+1155]
	009 Move X21, [X21+4072]
	010 Move W19, W1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x912000
	017 Move X0, [X0+4072]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+1155], W8
	021 Move X0, X20
	022 Move W1, W19
	023 Call InputStateBuffers.GetDoubleBuffersFor, X0, X1
	024 Move X8, [X21]
	025 Move X20, [X31+32]
	026 Move X19, [X31+40]
	027 Move X22, [X31+16]
	028 Move X21, [X31+24]
	029 Move X8, [X8+184]
	030 Move [X8+24], X0
	031 Move X30, [X31+48]
	032 Return 

Method: System.Void AllocateAll(UnityEngine.InputSystem.InputDevice[] devices, System.Int32 deviceCount)

Disassembly:
	0x0380D5B0 MOV X1, X0
	0x0380D5B4 MOV X0, X20
	0x0380D5B8 MOV X2, X21
	0x0380D5BC MOV X3, X31
	0x0380D5C0 BL 0x3BFF954
	0x0380D5C4 LDR X1, [X19]
	0x0380D5C8 CBZ X1, 0x380D624
	0x0380D5CC LDR X8, [X1 + 0x10]
	0x0380D5D0 CBZ X8, 0x380D5FC
	0x0380D5D4 LDR X2, [X19 + 0x8]
	0x0380D5D8 LDR X4, [X8 + 0x18]
	0x0380D5DC LDR X0, [X8 + 0x40]
	0x0380D5E0 LDR X3, [X8 + 0x28]
	0x0380D5E4 LDP X20, X19, [X31 + 0x40]
	0x0380D5E8 LDP X22, X21, [X31 + 0x30]
	0x0380D5EC LDP X24, X23, [X31 + 0x20]
	0x0380D5F0 LDR X30, [X31 + 0x10]
	0x0380D5F4 ADD X31, X31, 0x50
	0x0380D5F8 BR X4
	0x0380D5FC LDP X20, X19, [X31 + 0x40]
	0x0380D600 LDP X22, X21, [X31 + 0x30]
	0x0380D604 LDP X24, X23, [X31 + 0x20]
	0x0380D608 LDR X30, [X31 + 0x10]
	0x0380D60C ADD X31, X31, 0x50
	0x0380D610 RET
	0x0380D614 ADD X1, X22, 0xC
	0x0380D618 B 0x380D564
	0x0380D61C ADD X0, X23, 0xC
	0x0380D620 B 0x380D548
	0x0380D624 BL 0x1C16F20
	0x0380D628 ADRP X0, 0x8EE000
	0x0380D62C LDR X0, [X0 + 0x578]
	0x0380D630 BL 0x1C16D08
	0x0380D634 BL 0x1C16F10
	0x0380D638 MOV X19, X0
	0x0380D63C ADRP X0, 0x910000
	0x0380D640 LDR X0, [X0 + 0xA8]
	0x0380D644 BL 0x1C16D08
	0x0380D648 MOV X20, X0
	0x0380D64C ADRP X0, 0x910000
	0x0380D650 LDR X0, [X0 + 0xB0]
	0x0380D654 BL 0x1C16D08
	0x0380D658 MOV X2, X0
	0x0380D65C MOV X0, X19
	0x0380D660 MOV X1, X20

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X0
	007 Move X0, X1
	008 Move W1, W2
	009 Move W20, W2
	010 Call InputStateBuffers.ComputeSizeOfSingleStateBuffer, X0, X1
	011 Move [X19], W0
	012 Compare W0, 0
	013 JumpIfEqual {51}
	014 Add W8, W0, 4
	015 And W31, W0, 3
	016 And W8, W8, 0xFFFFFFFC
	017 NotImplemented "Instruction CSEL not yet implemented."
	018 Add W9, W8, W8
	019 Add W0, W9, W20
	020 Move W1, 4
	021 Move W2, 4
	022 Move X3, X31
	023 Move W21, W20
	024 ShiftRight W21, 28
	025 And W21, W21, 0x7FFFFFF
	026 Move [X19], W8
	027 Move [X19+4], W0
	028 Call UnsafeUtility.Malloc, X0, X1, X2
	029 Move W1, [X19+4]
	030 Move X2, X31
	031 Move [X19+32], X0
	032 Call UnsafeUtility.MemClear, X0, X1
	033 Move X8, [X19+32]
	034 Add X1, X31, 8
	035 Move W0, W20
	036 Move W3, W21
	037 Move [X31+8], X8
	038 Move W2, [X19]
	039 Call InputStateBuffers.SetUpDeviceToBufferMappings, X0, X1, X2, X3
	040 Move [X19+40], X0
	041 Move W8, [X19]
	042 Move X9, [X31+8]
	043 Move W10, W8
	044 ShiftRight W10, 31
	045 And W10, W10, 0x3FFFFFFF
	046 Add X8, X8, X9
	047 Add X10, X9, W10
	048 Move [X19+8], X9
	049 Move [X19+16], X8
	050 Move [X19+24], X10
	051 Move X20, [X31+32]
	052 Move X19, [X31+40]
	053 Move X30, [X31+16]
	054 Move X21, [X31+24]
	055 Add X31, X31, 48
	056 Return 

Method: UnityEngine.InputSystem.LowLevel.InputStateBuffers/DoubleBuffers SetUpDeviceToBufferMappings(System.Int32 deviceCount, ref System.Byte* bufferPtr, System.UInt32 sizePerBuffer, System.UInt32 mappingTableSizePerBuffer)

Disassembly:
	0x0380D6D0 BL 0x1C16D08
	0x0380D6D4 MOV X1, X20
	0x0380D6D8 MOV X2, X19
	0x0380D6DC MOV X3, X31
	0x0380D6E0 BL 0x3227BD4
	0x0380D6E4 B 0x380D70C
	0x0380D6E8 ADD X0, X31, 0x0
	0x0380D6EC BL 0x380ED58
	0x0380D6F0 MOV X19, X0
	0x0380D6F4 ADRP X0, 0x93D000
	0x0380D6F8 LDR X0, [X0 + 0x608]
	0x0380D6FC BL 0x1C16D08
	0x0380D700 MOV X1, X19
	0x0380D704 MOV X2, X31
	0x0380D708 BL 0x321EFD0
	0x0380D70C MOV X19, X0
	0x0380D710 ADRP X0, 0x8E6000
	0x0380D714 LDR X0, [X0 + 0x5B0]
	0x0380D718 BL 0x1C16D08
	0x0380D71C BL 0x1C16F10
	0x0380D720 MOV X1, X19
	0x0380D724 MOV X2, X31
	0x0380D728 MOV X20, X0
	0x0380D72C BL 0x337DF1C

ISIL:
	001 Move X9, [X1]
	002 Move W8, W0
	003 Move W10, W2
	004 ShiftRight W10, 31
	005 And W10, W10, 0x3FFFFFFF
	006 Add W11, W3, W2
	007 Add X0, X9, W10
	008 Add X10, X9, W11
	009 NotImplemented "Instruction CMP not yet implemented."
	010 Move [X1], X10
	011 Move W8, W8
	012 Move X10, X31
	013 Move X11, X31
	014 Add X12, X9, W2
	015 Move X8, X8
	016 ShiftRight X8, 63
	017 And X8, X8, 0x3FFFFFFF
	018 Move X13, 2
	019 Add W15, W11, 1
	020 Add X11, X11, 2
	021 NotImplemented "Instruction SBFM not yet implemented."
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Add X10, X10, X13
	024 Move [X14], X9
	025 Move [X0], X12
	026 Return X0

Method: System.Void FreeAll()

Disassembly:
	0x0380D754 RET
	0x0380D758 LDR X0, [X0 + 0x18]
	0x0380D75C RET
	0x0380D760 STR X1, [X0 + 0x18]
	0x0380D764 RET
	0x0380D768 STR X30, [X31 - 0x20]!
	0x0380D76C STP X20, X19, [X31 + 0x10]
	0x0380D770 MOV W20, W1
	0x0380D774 MOVZ W8, 0x80
	0x0380D778 MOV X1, X31
	0x0380D77C MOV X19, X0
	0x0380D780 STR W8, [X0 + 0x48]
	0x0380D784 BL 0x33BDD8C
	0x0380D788 CMP W20, 0x0
	0x0380D78C B.LE 0x380D7B8
	0x0380D790 MOVZ W8, 0x1
	0x0380D794 ADD W9, W20, 0x4
	0x0380D798 STRB W8, [X19 + 0x60]
	0x0380D79C AND W8, W9, 0xFFFFFFFC
	0x0380D7A0 ANDS W31, W20, 0x3
	0x0380D7A4 CSEL W8, W20, W8, EQ
	0x0380D7A8 STR W8, [X19 + 0x40]
	0x0380D7AC LDP X20, X19, [X31 + 0x10]
	0x0380D7B0 LDR X30, [X31], #0x20
	0x0380D7B4 RET
	0x0380D7B8 ADRP X0, 0x8EE000
	0x0380D7BC LDR X0, [X0 + 0x578]
	0x0380D7C0 BL 0x1C16D08
	0x0380D7C4 BL 0x1C16F10
	0x0380D7C8 MOV X19, X0
	0x0380D7CC ADRP X0, 0x93D000
	0x0380D7D0 LDR X0, [X0 + 0x610]
	0x0380D7D4 BL 0x1C16D08
	0x0380D7D8 MOV X20, X0
	0x0380D7DC ADRP X0, 0x912000
	0x0380D7E0 LDR X0, [X0 + 0x40]
	0x0380D7E4 BL 0x1C16D08
	0x0380D7E8 MOV X2, X0
	0x0380D7EC MOV X0, X19
	0x0380D7F0 MOV X1, X20
	0x0380D7F4 MOV X3, X31
	0x0380D7F8 BL 0x330E16C
	0x0380D7FC ADRP X0, 0x93D000
	0x0380D800 LDR X0, [X0 + 0x618]
	0x0380D804 BL 0x1C16D08
	0x0380D808 MOV X1, X0
	0x0380D80C MOV X0, X19
	0x0380D810 BL 0x1C16DEC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xBD5000
	005 Move W8, [X20+1156]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x912000
	012 Move X0, [X0+4072]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1156], W8
	016 Move X20, 0x912000
	017 Move X0, [X19+32]
	018 Move X20, [X20+4072]
	019 Compare X0, 0
	020 JumpIfEqual {25}
	021 Move W1, 4
	022 Move X2, X31
	023 Call UnsafeUtility.Free, X0, X1
	024 Move [X19+32], X31
	025 Move [X19+40], X31
	026 Move X8, [X20]
	027 Move X9, [X8+184]
	028 Move [X9+24], X31
	029 Move X8, [X8+184]
	030 Move X10, [X19+8]
	031 Move X9, [X8]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move [X8], X31
	034 Move X8, [X20]
	035 Move X8, [X8+184]
	036 Move X9, X19
	037 Add X9, X9, 16
	038 Move X10, [X9]
	039 Move [X9-8], X31
	040 Move X11, [X8+8]
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move [X8+8], X31
	043 Move X10, [X8+16]
	044 Move X11, [X19+24]
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move [X8+16], X31
	047 Move [X19], X31
	048 Move X20, [X31+16]
	049 Move X19, [X31+24]
	050 Move [X9], X31
	051 Move [X9+8], X31
	052 Move X30, [X31+32]
	053 Return 

Method: System.Void MigrateAll(UnityEngine.InputSystem.InputDevice[] devices, System.Int32 deviceCount, UnityEngine.InputSystem.LowLevel.InputStateBuffers oldBuffers)

Disassembly:
	0x0380D814 SUB X31, X31, 0x70
	0x0380D818 STR X30, [X31 + 0x40]
	0x0380D81C STP X22, X21, [X31 + 0x50]
	0x0380D820 STP X20, X19, [X31 + 0x60]
	0x0380D824 ADRP X22, 0xBD4000
	0x0380D828 ADRP X21, 0x90E000
	0x0380D82C LDRB W8, [X22 + 0x48E]
	0x0380D830 LDR X21, [X21 + 0x270]
	0x0380D834 MOV X20, X1
	0x0380D838 MOV X19, X0
	0x0380D83C TBNZ X8, 0x0, 0x380D86C
	0x0380D840 ADRP X0, 0x90E000
	0x0380D844 LDR X0, [X0 + 0xE58]
	0x0380D848 BL 0x1C16CF4
	0x0380D84C ADRP X0, 0x939000
	0x0380D850 LDR X0, [X0 + 0xE38]
	0x0380D854 BL 0x1C16CF4
	0x0380D858 ADRP X0, 0x90E000
	0x0380D85C LDR X0, [X0 + 0x270]
	0x0380D860 BL 0x1C16CF4
	0x0380D864 MOVZ W8, 0x1
	0x0380D868 STRB W8, [X22 + 0x48E]
	0x0380D86C ADRP X22, 0x939000
	0x0380D870 LDR X22, [X22 + 0xE38]
	0x0380D874 MOVI V0.2D, 0x0
	0x0380D878 MOVZ W8, 0x80
	0x0380D87C MOV X0, X19
	0x0380D880 MOV X1, X31
	0x0380D884 STP V0, V0, [X31 + 0x20]
	0x0380D888 STR W8, [X19 + 0x48]
	0x0380D88C BL 0x33BDD8C
	0x0380D890 LDR X0, [X21]
	0x0380D894 LDR W8, [X0 + 0xE0]
	0x0380D898 CBNZ W8, 0x380D8A0
	0x0380D89C BL 0x1C16DFC
	0x0380D8A0 ADRP X21, 0x90E000
	0x0380D8A4 LDR X21, [X21 + 0xE58]
	0x0380D8A8 ADD X8, X31, 0x0
	0x0380D8AC MOV X0, X20
	0x0380D8B0 MOV X1, X31
	0x0380D8B4 BL 0x376F7EC
	0x0380D8B8 LDP V0, V1, [X31]
	0x0380D8BC LDR X2, [X22]
	0x0380D8C0 STP V0, V1, [X31 + 0x20]
	0x0380D8C4 ADD X0, X31, 0x20
	0x0380D8C8 MOV W1, W31
	0x0380D8CC BL 0x2DFB7F4
	0x0380D8D0 STR X0, [X19 + 0x20]
	0x0380D8D4 CBZ X0, 0x380D900
	0x0380D8D8 LDR X8, [X0 + 0x18]
	0x0380D8DC ADD X0, X31, 0x20
	0x0380D8E0 STR W8, [X19 + 0x28]
	0x0380D8E4 LDR X1, [X21]
	0x0380D8E8 BL 0x2DFB98C
	0x0380D8EC LDP X20, X19, [X31 + 0x60]
	0x0380D8F0 LDP X22, X21, [X31 + 0x50]
	0x0380D8F4 LDR X30, [X31 + 0x40]
	0x0380D8F8 ADD X31, X31, 0x70
	0x0380D8FC RET
	0x0380D900 BL 0x1C16F20
	0x0380D904 B 0x380D908
	0x0380D908 MOV X20, X0
	0x0380D90C CMP W1, 0x1
	0x0380D910 B.NE 0x380D93C
	0x0380D914 MOV X0, X20
	0x0380D918 BL 0x3EB1AD0
	0x0380D91C LDR X19, [X0]
	0x0380D920 BL 0x3EB1AE0
	0x0380D924 LDR X1, [X21]
	0x0380D928 ADD X0, X31, 0x20
	0x0380D92C BL 0x2DFB98C
	0x0380D930 CBZ X19, 0x380D8EC
	0x0380D934 MOV X0, X19
	0x0380D938 BL 0x1C16F18
	0x0380D93C MOV X19, X31
	0x0380D940 B 0x380D948
	0x0380D944 MOV X20, X0
	0x0380D948 LDR X1, [X21]
	0x0380D94C ADD X0, X31, 0x20
	0x0380D950 BL 0x2DFB98C
	0x0380D954 CBNZ X19, 0x380D960
	0x0380D958 MOV X0, X20
	0x0380D95C BL 0x1D2C690
	0x0380D960 MOV X0, X19
	0x0380D964 BL 0x1C16F18
	0x0380D968 BL 0x1990590

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0xBD5000
	009 Move W8, [X23+1157]
	010 Move X21, X3
	011 Move W19, W2
	012 Move X20, X1
	013 Move X22, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x90F000
	019 Move X0, [X0+3352]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X23+1157], W8
	023 Move W8, [X21+4]
	024 Compare W8, 0
	025 JumpIfEqual {46}
	026 Move X0, [X22+40]
	027 Move X3, [X21+40]
	028 Move X1, X20
	029 Move W2, W19
	030 Call InputStateBuffers.MigrateDoubleBuffer, X0, X1, X2, X3
	031 Move X0, [X22+8]
	032 Move X3, [X21+8]
	033 Move X1, X20
	034 Move W2, W19
	035 Call InputStateBuffers.MigrateSingleBuffer, X0, X1, X2, X3
	036 Move X0, [X22+16]
	037 Move X3, [X21+16]
	038 Move X1, X20
	039 Move W2, W19
	040 Call InputStateBuffers.MigrateSingleBuffer, X0, X1, X2, X3
	041 Move X0, [X22+24]
	042 Move X3, [X21+24]
	043 Move X1, X20
	044 Move W2, W19
	045 Call InputStateBuffers.MigrateSingleBuffer, X0, X1, X2, X3
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Compare X20, 0
	048 JumpIfEqual {95}
	049 Move X24, 0x90F000
	050 Move X24, [X24+3352]
	051 Move W21, W31
	052 Move W23, W31
	053 Move W8, [X20+24]
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Add X8, X20, W23
	056 Move X22, [X8+32]
	057 Compare X22, 0
	058 JumpIfEqual {95}
	059 Move X0, [X24]
	060 Move W8, [X0+224]
	061 Compare W8, 0
	062 JumpIfNotEqual {64}
	063 Call 0x1C17DFC
	064 Move W8, [X22+20]
	065 Add W31, W8, 1
	066 Subtract W1, W21, W8
	067 Move X0, X22
	068 Move X0, [X24]
	069 Move W8, [X0+224]
	070 Compare W8, 0
	071 JumpIfNotEqual {73}
	072 Call 0x1C17DFC
	073 Move [X22+20], W31
	074 Compare W21, 0
	075 JumpIfEqual {80}
	076 Move X0, X22
	077 Move W1, W21
	078 Move X2, X31
	079 Call InputControl.BakeOffsetIntoStateBlockRecursive, X0, X1
	080 Move W0, W21
	081 Move X1, X22
	082 Call InputStateBuffers.NextDeviceOffset, X0, X1
	083 Add W23, W23, 1
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Move W21, W0
	086 Move X20, [X31+48]
	087 Move X19, [X31+56]
	088 Move X22, [X31+32]
	089 Move X21, [X31+40]
	090 Move X24, [X31+16]
	091 Move X23, [X31+24]
	092 Move X30, [X31+64]
	093 Return 
	094 Call 0x1C17F28
	095 Call 0x1C17F20

Method: System.Void MigrateDoubleBuffer(UnityEngine.InputSystem.LowLevel.InputStateBuffers/DoubleBuffers newBuffer, UnityEngine.InputSystem.InputDevice[] devices, System.Int32 deviceCount, UnityEngine.InputSystem.LowLevel.InputStateBuffers/DoubleBuffers oldBuffer)

Disassembly:
	0x0380D96C STP X30, X21, [X31 - 0x20]!
	0x0380D970 STP X20, X19, [X31 + 0x10]
	0x0380D974 ADRP X21, 0xBD4000
	0x0380D978 LDRB W8, [X21 + 0x48F]
	0x0380D97C MOV X19, X1
	0x0380D980 MOV X20, X0
	0x0380D984 TBNZ X8, 0x0, 0x380D99C
	0x0380D988 ADRP X0, 0x938000
	0x0380D98C LDR X0, [X0 + 0x2D0]
	0x0380D990 BL 0x1C16CF4
	0x0380D994 MOVZ W8, 0x1
	0x0380D998 STRB W8, [X21 + 0x48F]
	0x0380D99C MOVZ W8, 0x80
	0x0380D9A0 MOV X0, X20
	0x0380D9A4 MOV X1, X31
	0x0380D9A8 STR W8, [X20 + 0x48]
	0x0380D9AC BL 0x33BDD8C
	0x0380D9B0 CBZ X19, 0x380DA08
	0x0380D9B4 ADRP X8, 0x938000
	0x0380D9B8 LDR X8, [X8 + 0x2D0]
	0x0380D9BC MOVZ W1, 0x1
	0x0380D9C0 LDR X0, [X8]
	0x0380D9C4 BL 0x1C16D6C
	0x0380D9C8 CBZ X0, 0x380DA50
	0x0380D9CC LDR X8, [X0]
	0x0380D9D0 MOV X21, X0
	0x0380D9D4 MOV X0, X19
	0x0380D9D8 LDR X1, [X8 + 0x40]
	0x0380D9DC BL 0x1C16E00
	0x0380D9E0 CBZ X0, 0x380DA54
	0x0380D9E4 LDR W8, [X21 + 0x18]
	0x0380D9E8 CBZ W8, 0x380DA60
	0x0380D9EC MOVZ W8, 0x1
	0x0380D9F0 STR X19, [X21 + 0x20]
	0x0380D9F4 STR X21, [X20 + 0x20]
	0x0380D9F8 STR W8, [X20 + 0x28]
	0x0380D9FC LDP X20, X19, [X31 + 0x10]
	0x0380DA00 LDP X30, X21, [X31], #0x20
	0x0380DA04 RET
	0x0380DA08 ADRP X0, 0x8EB000
	0x0380DA0C LDR X0, [X0 + 0x528]
	0x0380DA10 BL 0x1C16D08
	0x0380DA14 BL 0x1C16F10
	0x0380DA18 MOV X19, X0
	0x0380DA1C ADRP X0, 0x90E000
	0x0380DA20 LDR X0, [X0 + 0xD60]
	0x0380DA24 BL 0x1C16D08
	0x0380DA28 MOV X1, X0
	0x0380DA2C MOV X0, X19
	0x0380DA30 MOV X2, X31
	0x0380DA34 BL 0x330E100
	0x0380DA38 ADRP X0, 0x93D000
	0x0380DA3C LDR X0, [X0 + 0x620]
	0x0380DA40 BL 0x1C16D08
	0x0380DA44 MOV X1, X0
	0x0380DA48 MOV X0, X19
	0x0380DA4C BL 0x1C16DEC
	0x0380DA50 BL 0x1C16F20
	0x0380DA54 BL 0x1C16F44
	0x0380DA58 MOV X1, X31
	0x0380DA5C BL 0x1C16DEC
	0x0380DA60 BL 0x1C16F28
	0x0380DA64 STP X30, X21, [X31 - 0x20]!
	0x0380DA68 STP X20, X19, [X31 + 0x10]
	0x0380DA6C ADRP X21, 0xBD4000
	0x0380DA70 LDRB W8, [X21 + 0x490]
	0x0380DA74 MOV X20, X1
	0x0380DA78 MOV X19, X0
	0x0380DA7C TBNZ X8, 0x0, 0x380DA94
	0x0380DA80 ADRP X0, 0x93D000
	0x0380DA84 LDR X0, [X0 + 0x628]
	0x0380DA88 BL 0x1C16CF4
	0x0380DA8C MOVZ W8, 0x1
	0x0380DA90 STRB W8, [X21 + 0x490]
	0x0380DA94 MOVZ W8, 0x80
	0x0380DA98 MOV X0, X19
	0x0380DA9C MOV X1, X31
	0x0380DAA0 STR W8, [X19 + 0x48]
	0x0380DAA4 BL 0x33BDD8C
	0x0380DAA8 CBZ X20, 0x380DAD0
	0x0380DAAC ADRP X8, 0x93D000
	0x0380DAB0 LDR X8, [X8 + 0x628]
	0x0380DAB4 MOV X0, X20
	0x0380DAB8 LDR X1, [X8]
	0x0380DABC BL 0x21D577C
	0x0380DAC0 STR X0, [X19 + 0x20]
	0x0380DAC4 CBZ X0, 0x380DADC
	0x0380DAC8 LDR X8, [X0 + 0x18]
	0x0380DACC STR W8, [X19 + 0x28]
	0x0380DAD0 LDP X20, X19, [X31 + 0x10]
	0x0380DAD4 LDP X30, X21, [X31], #0x20
	0x0380DAD8 RET

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X23, 0xBD5000
	015 Move W8, [X23+1158]
	016 Move X19, X3
	017 Move X21, X1
	018 Move X22, X0
	019 Move [X31+12], W2
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {29}
	024 Move X0, 0x90F000
	025 Move X0, [X0+3352]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X23+1158], W8
	029 Compare X22, 0
	030 JumpIfEqual {96}
	031 Compare X19, 0
	032 JumpIfEqual {96}
	033 Move W8, [X31+12]
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Compare X21, 0
	036 JumpIfEqual {111}
	037 Move X29, 0x90F000
	038 Move X29, [X29+3352]
	039 Move W23, W31
	040 Move W27, W31
	041 Move W28, 1
	042 Move W8, [X21+24]
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Add X8, X21, W27
	045 Move X24, [X8+32]
	046 Compare X24, 0
	047 JumpIfEqual {111}
	048 Move X0, [X29]
	049 Move W8, [X0+224]
	050 Compare W8, 0
	051 JumpIfNotEqual {53}
	052 Call 0x1C17DFC
	053 Move W8, [X24+20]
	054 Add W31, W8, 1
	055 Move X0, [X29]
	056 Move W25, [X24+232]
	057 Move W8, [X0+224]
	058 Compare W8, 0
	059 JumpIfNotEqual {61}
	060 Call 0x1C17DFC
	061 Add X0, X24, 16
	062 Move X1, X31
	063 Call InputStateBlock.get_alignedSizeInBytes, X0
	064 Move W8, W25
	065 ShiftRight W8, 31
	066 And W8, W8, 0x3FFFFFFF
	067 Subtract W11, W28, 1
	068 NotImplemented "Instruction LDRSW not yet implemented."
	069 Move W10, 1
	070 Move X8, [X19]
	071 Move X11, [X22]
	072 NotImplemented "Instruction BFM not yet implemented."
	073 Move X10, [X19]
	074 Move X20, [X22]
	075 Add X1, X8, X9
	076 Add X8, X11, W23
	077 Move W26, W0
	078 Move X0, X8
	079 Move X2, X26
	080 Move X3, X31
	081 Add X25, X10, X9
	082 Call UnsafeUtility.MemCpy, X0, X1, X2
	083 Add X0, X20, W23
	084 Move X1, X25
	085 Move X2, X26
	086 Move X3, X31
	087 Call UnsafeUtility.MemCpy, X0, X1, X2
	088 Move W0, W23
	089 Move X1, X24
	090 Call InputStateBuffers.NextDeviceOffset, X0, X1
	091 Move W8, [X31+12]
	092 Add W27, W27, 1
	093 Move W23, W0
	094 Add W28, W28, 2
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Move X20, [X31+96]
	097 Move X19, [X31+104]
	098 Move X22, [X31+80]
	099 Move X21, [X31+88]
	100 Move X24, [X31+64]
	101 Move X23, [X31+72]
	102 Move X26, [X31+48]
	103 Move X25, [X31+56]
	104 Move X28, [X31+32]
	105 Move X27, [X31+40]
	106 Move X29, [X31+16]
	107 Move X30, [X31+24]
	108 Add X31, X31, 112
	109 Return 
	110 Call 0x1C17F28
	111 Call 0x1C17F20

Method: System.Void MigrateSingleBuffer(System.Void* newBuffer, UnityEngine.InputSystem.InputDevice[] devices, System.Int32 deviceCount, System.Void* oldBuffer)

Disassembly:
	0x0380DADC BL 0x1C16F20
	0x0380DAE0 STP X30, X21, [X31 - 0x20]!
	0x0380DAE4 STP X20, X19, [X31 + 0x10]
	0x0380DAE8 MOV X19, X0
	0x0380DAEC BL 0x380DB74
	0x0380DAF0 MOV X0, X19
	0x0380DAF4 LDP X20, X19, [X31 + 0x10]
	0x0380DAF8 MOV X1, X31
	0x0380DAFC LDP X30, X21, [X31], #0x20
	0x0380DB00 B 0x33CB4DC
	0x0380DB04 CMP W1, 0x1
	0x0380DB08 MOV X21, X0
	0x0380DB0C B.NE 0x380DB3C
	0x0380DB10 MOV X0, X21
	0x0380DB14 BL 0x3EB1AD0
	0x0380DB18 LDR X20, [X0]
	0x0380DB1C BL 0x3EB1AE0
	0x0380DB20 MOV X0, X19
	0x0380DB24 MOV X1, X31
	0x0380DB28 BL 0x33CB4DC
	0x0380DB2C CBNZ X20, 0x380DB44
	0x0380DB30 LDP X20, X19, [X31 + 0x10]
	0x0380DB34 LDP X30, X21, [X31], #0x20
	0x0380DB38 RET
	0x0380DB3C MOV X20, X31
	0x0380DB40 B 0x380DB50
	0x0380DB44 MOV X0, X20
	0x0380DB48 BL 0x1C16F18
	0x0380DB4C MOV X21, X0
	0x0380DB50 MOV X0, X19
	0x0380DB54 MOV X1, X31
	0x0380DB58 BL 0x33CB4DC
	0x0380DB5C CBNZ X20, 0x380DB68
	0x0380DB60 MOV X0, X21
	0x0380DB64 BL 0x1D2C690
	0x0380DB68 MOV X0, X20
	0x0380DB6C BL 0x1C16F18
	0x0380DB70 BL 0x1990590
	0x0380DB74 STP X30, X21, [X31 - 0x20]!
	0x0380DB78 STP X20, X19, [X31 + 0x10]
	0x0380DB7C ADRP X21, 0xBD4000
	0x0380DB80 ADRP X20, 0x8ED000
	0x0380DB84 LDRB W8, [X21 + 0x496]
	0x0380DB88 LDR X20, [X20 + 0xC10]
	0x0380DB8C MOV X19, X0
	0x0380DB90 TBNZ X8, 0x0, 0x380DBA8
	0x0380DB94 ADRP X0, 0x8ED000
	0x0380DB98 LDR X0, [X0 + 0xC10]
	0x0380DB9C BL 0x1C16CF4
	0x0380DBA0 MOVZ W8, 0x1
	0x0380DBA4 STRB W8, [X21 + 0x496]
	0x0380DBA8 MOV X0, X19
	0x0380DBAC BL 0x380DEBC
	0x0380DBB0 MOV X0, X19
	0x0380DBB4 BL 0x380E504
	0x0380DBB8 LDR X0, [X20]
	0x0380DBBC LDR W8, [X0 + 0xE0]
	0x0380DBC0 CBNZ W8, 0x380DBC8
	0x0380DBC4 BL 0x1C16DFC
	0x0380DBC8 MOV X0, X19
	0x0380DBCC LDP X20, X19, [X31 + 0x10]
	0x0380DBD0 MOV X1, X31
	0x0380DBD4 LDP X30, X21, [X31], #0x20
	0x0380DBD8 B 0x33B3E9C
	0x0380DBDC LDR W8, [X0 + 0x54]
	0x0380DBE0 STR W31, [X0 + 0x44]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X23, 0xBD5000
	011 Move W8, [X23+1159]
	012 Move X19, X3
	013 Move W20, W2
	014 Move X21, X1
	015 Move X22, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0x90F000
	021 Move X0, [X0+3352]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X23+1159], W8
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Compare X21, 0
	027 JumpIfEqual {77}
	028 Move X26, 0x90F000
	029 Move X26, [X26+3352]
	030 Move W23, W31
	031 Move W25, W31
	032 Move W8, [X21+24]
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Add X8, X21, W25
	035 Move X24, [X8+32]
	036 Compare X24, 0
	037 JumpIfEqual {77}
	038 Move X0, [X26]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 Move W8, [X24+20]
	044 Add W31, W8, 1
	045 Move X0, [X26]
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1C17DFC
	050 Add X0, X24, 16
	051 Move X1, X31
	052 Call InputStateBlock.get_alignedSizeInBytes, X0
	053 NotImplemented "Instruction LDRSW not yet implemented."
	054 Add X8, X22, W23
	055 Move W2, W0
	056 Move X0, X8
	057 Add X1, X9, X19
	058 Move X3, X31
	059 Call UnsafeUtility.MemCpy, X0, X1, X2
	060 Move W0, W23
	061 Move X1, X24
	062 Call InputStateBuffers.NextDeviceOffset, X0, X1
	063 Add W25, W25, 1
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move W23, W0
	066 Move X20, [X31+64]
	067 Move X19, [X31+72]
	068 Move X22, [X31+48]
	069 Move X21, [X31+56]
	070 Move X24, [X31+32]
	071 Move X23, [X31+40]
	072 Move X26, [X31+16]
	073 Move X25, [X31+24]
	074 Move X30, [X31+80]
	075 Return 
	076 Call 0x1C17F28
	077 Call 0x1C17F20

Method: System.UInt32 ComputeSizeOfSingleStateBuffer(UnityEngine.InputSystem.InputDevice[] devices, System.Int32 deviceCount)

Disassembly:
	0x0380D664 MOV X3, X31
	0x0380D668 BL 0x330E16C
	0x0380D66C ADRP X0, 0x93D000
	0x0380D670 LDR X0, [X0 + 0x5F8]
	0x0380D674 BL 0x1C16D08
	0x0380D678 MOV X1, X0
	0x0380D67C MOV X0, X19
	0x0380D680 BL 0x1C16DEC
	0x0380D684 MOV X0, X20
	0x0380D688 BL 0x19903C0
	0x0380D68C LDR W8, [X20 + 0x40]
	0x0380D690 ADRP X19, 0x8E6000
	0x0380D694 STR W8, [X31 + 0x1C]
	0x0380D698 LDR X19, [X19 + 0x758]
	0x0380D69C MOV X0, X19
	0x0380D6A0 BL 0x1C16D08
	0x0380D6A4 ADD X1, X31, 0x1C
	0x0380D6A8 BL 0x1C16E04
	0x0380D6AC MOV X20, X0
	0x0380D6B0 MOV X0, X19
	0x0380D6B4 STR W24, [X31 + 0x18]
	0x0380D6B8 BL 0x1C16D08
	0x0380D6BC ADD X1, X31, 0x18
	0x0380D6C0 BL 0x1C16E04
	0x0380D6C4 MOV X19, X0
	0x0380D6C8 ADRP X0, 0x93D000
	0x0380D6CC LDR X0, [X0 + 0x600]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Move X19, X0
	008 Compare X0, 0
	009 JumpIfEqual {28}
	010 Move X20, X31
	011 Move W0, W31
	012 Move W21, W1
	013 Add X22, X19, 32
	014 Move W8, [X19+24]
	015 NotImplemented "Instruction CMP not yet implemented."
	016 Move X1, [X22]
	017 Call InputStateBuffers.NextDeviceOffset, X0, X1
	018 Add X20, X20, 1
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move W0, W31
	021 Move X20, [X31+32]
	022 Move X19, [X31+40]
	023 Move X22, [X31+16]
	024 Move X21, [X31+24]
	025 Move X30, [X31+48]
	026 Return X0
	027 Call 0x1C17F28
	028 Call 0x1C17F20

Method: System.UInt32 NextDeviceOffset(System.UInt32 currentOffset, UnityEngine.InputSystem.InputDevice device)

Disassembly:
	0x0380DBE4 ADD W8, W8, 0x1
	0x0380DBE8 STP W31, W8, [X0 + 0x50]
	0x0380DBEC RET
	0x0380DBF0 SUB X31, X31, 0x40
	0x0380DBF4 STP X30, X21, [X31 + 0x20]
	0x0380DBF8 STP X20, X19, [X31 + 0x30]
	0x0380DBFC MOV X20, X1
	0x0380DC00 ADD X1, X31, 0x1C
	0x0380DC04 MOV X19, X2
	0x0380DC08 MOV X21, X0
	0x0380DC0C STR W31, [X31 + 0x1C]
	0x0380DC10 BL 0x380DC58
	0x0380DC14 LDR W8, [X31 + 0x1C]
	0x0380DC18 STR X21, [X31 + 0x8]
	0x0380DC1C ADD W8, W8, 0x1
	0x0380DC20 STR W8, [X31 + 0x10]
	0x0380DC24 CBZ X0, 0x380DC54
	0x0380DC28 LDR W8, [X0 + 0x8]
	0x0380DC2C ADD X0, X31, 0x8
	0x0380DC30 MOV X1, X20
	0x0380DC34 MOV X2, X19
	0x0380DC38 STR W8, [X31 + 0x14]
	0x0380DC3C BL 0x380D3D4
	0x0380DC40 LDP X0, X1, [X31 + 0x8]
	0x0380DC44 LDP X20, X19, [X31 + 0x30]
	0x0380DC48 LDP X30, X21, [X31 + 0x20]
	0x0380DC4C ADD X31, X31, 0x40
	0x0380DC50 RET
	0x0380DC54 BL 0x1C16F20
	0x0380DC58 STP X30, X21, [X31 - 0x20]!
	0x0380DC5C STP X20, X19, [X31 + 0x10]
	0x0380DC60 ADRP X21, 0xBD4000
	0x0380DC64 LDRB W8, [X21 + 0x49B]
	0x0380DC68 MOV X19, X1
	0x0380DC6C MOV X20, X0
	0x0380DC70 TBNZ X8, 0x0, 0x380DC94
	0x0380DC74 ADRP X0, 0x93A000
	0x0380DC78 LDR X0, [X0 + 0xFE8]
	0x0380DC7C BL 0x1C16CF4
	0x0380DC80 ADRP X0, 0x93C000
	0x0380DC84 LDR X0, [X0 + 0x6A0]
	0x0380DC88 BL 0x1C16CF4
	0x0380DC8C MOVZ W8, 0x1
	0x0380DC90 STRB W8, [X21 + 0x49B]
	0x0380DC94 LDR X8, [X20 + 0x30]
	0x0380DC98 CBNZ X8, 0x380DCA4
	0x0380DC9C MOV X0, X20
	0x0380DCA0 BL 0x380E568
	0x0380DCA4 LDR W8, [X20 + 0x50]
	0x0380DCA8 LDP W9, W10, [X20 + 0x44]
	0x0380DCAC ADD W8, W9, W8
	0x0380DCB0 SDIV W9, W8, W10
	0x0380DCB4 MSUB W8, W9, W10, W8
	0x0380DCB8 STR W8, [X19]
	0x0380DCBC LDP W9, W8, [X20 + 0x44]
	0x0380DCC0 CMP W9, W8
	0x0380DCC4 ADRP X8, 0x93A000
	0x0380DCC8 LDR X8, [X8 + 0xFE8]
	0x0380DCCC B.NE 0x380DCE8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xBD5000
	006 Move W8, [X21+1160]
	007 Move X19, X1
	008 Move W20, W0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x90F000
	014 Move X0, [X0+3352]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1160], W8
	018 Compare X19, 0
	019 JumpIfEqual {43}
	020 Move X8, 0x90F000
	021 Move X8, [X8+3352]
	022 Add X21, X19, 16
	023 Move X0, [X8]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, X21
	029 Move X1, X31
	030 Call InputStateBlock.get_alignedSizeInBytes, X0
	031 Compare W0, 0
	032 JumpIfEqual {44}
	033 Add W8, W0, 4
	034 And W8, W8, 0xFFFFFFFC
	035 And W31, W0, 3
	036 NotImplemented "Instruction CSEL not yet implemented."
	037 Add W0, W8, W20
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move X30, [X31+32]
	041 Move X21, [X31+40]
	042 Return X0
	043 Call 0x1C17F20
	044 Move X0, 0x93E000
	045 Move X0, [X0+1400]
	046 Call 0x1C17D08
	047 Move X1, X19
	048 Move X2, X31
	049 Call String.Format, X0, X1
	050 Move X19, X0
	051 Move X0, 0x8EF000
	052 Move X0, [X0+1400]
	053 Call 0x1C17D08
	054 Call 0x1C17F10
	055 Move X20, X0
	056 Move X0, 0x90F000
	057 Move X0, [X0+3360]
	058 Call 0x1C17D08
	059 Move X2, X0
	060 Move X0, X20
	061 Move X1, X19
	062 Move X3, X31
	063 Call ArgumentException..ctor, X0, X1, X2
	064 Move X0, 0x93E000
	065 Move X0, [X0+1408]
	066 Call 0x1C17D08
	067 Move X1, X0
	068 Move X0, X20
	069 Call 0x1C17DEC

