Type: UnityEngine.InputSystem.LowLevel.QueryPairedUserAccountCommand

Method: UnityEngine.InputSystem.Utilities.FourCC get_Type()

Disassembly:
	0x037FFFD0 STRB W8, [X0 + 0x23]
	0x037FFFD4 RET
	0x037FFFD8 STR X30, [X31 - 0x10]!
	0x037FFFDC ADD X0, X31, 0x8
	0x037FFFE0 MOVZ W1, 0x54
	0x037FFFE4 MOVZ W2, 0x4F
	0x037FFFE8 MOVZ W3, 0x55
	0x037FFFEC MOVZ W4, 0x43
	0x037FFFF0 MOV X5, X31
	0x037FFFF4 STR W31, [X31 + 0x8]
	0x037FFFF8 BL 0x375AA28
	0x037FFFFC LDR W0, [X31 + 0x8]

ISIL:
	001 Move [X31-16], X30
	002 Add X0, X31, 8
	003 Move W1, 80
	004 Move W2, 65
	005 Move W3, 67
	006 Move W4, 67
	007 Move X5, X31
	008 Move [X31+8], W31
	009 Call FourCC..ctor, X0, X1, X2, X3, X4
	010 Move W0, [X31+8]
	011 Move X30, [X31+16]
	012 Return X0

Method: System.String get_id()

Disassembly:
	0x03800000 LDR X30, [X31], #0x10
	0x03800004 RET
	0x03800008 SUB X31, X31, 0x60
	0x0380000C STR X30, [X31 + 0x30]

ISIL:
	001 Add X0, X0, 528
	002 Move W1, 256
	003 Move X2, X31
	004 Call StringHelpers.ReadStringFromBuffer, X0, X1
	005 Return X0

Method: System.Void set_id(System.String value)

Disassembly:
	0x03800010 STP X22, X21, [X31 + 0x40]
	0x03800014 STP X20, X19, [X31 + 0x50]
	0x03800018 ADRP X20, 0xBE1000
	0x0380001C ADRP X22, 0x8F3000
	0x03800020 ADRP X21, 0x8F3000
	0x03800024 LDRB W8, [X20 + 0x405]
	0x03800028 LDR X22, [X22 + 0x9D0]
	0x0380002C LDR X21, [X21 + 0x758]
	0x03800030 MOV X19, X0
	0x03800034 TBNZ X8, 0x0, 0x3800094
	0x03800038 ADRP X0, 0x8F3000
	0x0380003C LDR X0, [X0 + 0xB58]
	0x03800040 BL 0x1C16CF4
	0x03800044 ADRP X0, 0x8F3000
	0x03800048 LDR X0, [X0 + 0x758]
	0x0380004C BL 0x1C16CF4
	0x03800050 ADRP X0, 0x8F3000
	0x03800054 LDR X0, [X0 + 0x9D0]
	0x03800058 BL 0x1C16CF4
	0x0380005C ADRP X0, 0x8F3000
	0x03800060 LDR X0, [X0 + 0xA90]
	0x03800064 BL 0x1C16CF4
	0x03800068 ADRP X0, 0x949000
	0x0380006C LDR X0, [X0 + 0xC80]
	0x03800070 BL 0x1C16CF4
	0x03800074 ADRP X0, 0x8FB000
	0x03800078 LDR X0, [X0 + 0xF08]
	0x0380007C BL 0x1C16CF4
	0x03800080 ADRP X0, 0x94A000
	0x03800084 LDR X0, [X0 + 0x8]
	0x03800088 BL 0x1C16CF4
	0x0380008C MOVZ W8, 0x1
	0x03800090 STRB W8, [X20 + 0x405]
	0x03800094 LDR X0, [X22]
	0x03800098 MOVZ W1, 0x7
	0x0380009C BL 0x1C16D6C
	0x038000A0 MOV X20, X0
	0x038000A4 LDR W8, [X19]
	0x038000A8 LDR X0, [X21]
	0x038000AC ADD X1, X31, 0x3C
	0x038000B0 STR W8, [X31 + 0x3C]
	0x038000B4 BL 0x1C16E04
	0x038000B8 CBZ X20, 0x38002C4
	0x038000BC MOV X21, X0
	0x038000C0 CBZ X0, 0x38000D8
	0x038000C4 LDR X8, [X20]
	0x038000C8 MOV X0, X21
	0x038000CC LDR X1, [X8 + 0x40]
	0x038000D0 BL 0x1C16E00
	0x038000D4 CBZ X0, 0x38002B8
	0x038000D8 LDR W8, [X20 + 0x18]
	0x038000DC CBZ W8, 0x38002B4
	0x038000E0 ADRP X8, 0x949000
	0x038000E4 LDR X8, [X8 + 0xC80]
	0x038000E8 STR X21, [X20 + 0x20]
	0x038000EC LDRB W9, [X19 + 0x20]
	0x038000F0 ADD X1, X31, 0x38
	0x038000F4 LDR X0, [X8]
	0x038000F8 STR W9, [X31 + 0x38]
	0x038000FC BL 0x1C16E04
	0x03800100 MOV X21, X0
	0x03800104 CBZ X0, 0x380011C
	0x03800108 LDR X8, [X20]
	0x0380010C MOV X0, X21
	0x03800110 LDR X1, [X8 + 0x40]
	0x03800114 BL 0x1C16E00
	0x03800118 CBZ X0, 0x38002B8
	0x0380011C LDR W8, [X20 + 0x18]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X1, 0
	005 JumpIfEqual {18}
	006 Move W8, [X1+16]
	007 NotImplemented "Instruction CMP not yet implemented."
	008 Move X20, [X31+16]
	009 Move X19, [X31+24]
	010 Add X8, X0, 528
	011 Move W2, 256
	012 Move X0, X1
	013 Move X1, X8
	014 Move X3, X31
	015 Move X30, [X31+32]
	016 Call StringHelpers.WriteStringToBuffer, X0, X1, X2
	017 Return 
	018 Move X0, 0x8F9000
	019 Move X0, [X0+1320]
	020 Call 0x1C17D08
	021 Call 0x1C17F10
	022 Move X19, X0
	023 Move X0, 0x8FE000
	024 Move X0, [X0+3784]
	025 Call 0x1C17D08
	026 Move X1, X0
	027 Move X0, X19
	028 Move X2, X31
	029 Call ArgumentNullException..ctor, X0, X1
	030 Move X0, 0x94A000
	031 Move X0, [X0+4048]
	032 Call 0x1C17D08
	033 Move X1, X0
	034 Move X0, X19
	035 Call 0x1C17DEC
	036 Move W8, 256
	037 Move [X31+12], W8
	038 Move X0, 0x8F4000
	039 Move X0, [X0+1880]
	040 Move X19, X1
	041 Call 0x1C17D08
	042 Add X1, X31, 12
	043 Call 0x1C17E04
	044 Move X20, X0
	045 Move X0, 0x94A000
	046 Move X0, [X0+4056]
	047 Call 0x1C17D08
	048 Move X1, X19
	049 Move X2, X20
	050 Move X3, X31
	051 Call String.Format, X0, X1, X2
	052 Move X19, X0
	053 Move X0, 0x8FC000
	054 Move X0, [X0+1400]
	055 Call 0x1C17D08
	056 Call 0x1C17F10
	057 Move X20, X0
	058 Move X0, 0x8FE000
	059 Move X0, [X0+3784]
	060 Call 0x1C17D08
	061 Move X2, X0
	062 Move X0, X20
	063 Move X1, X19
	064 Move X3, X31
	065 Call ArgumentException..ctor, X0, X1, X2
	066 Move X0, 0x94A000
	067 Move X0, [X0+4048]
	068 Call 0x1C17D08
	069 Move X1, X0
	070 Move X0, X20
	071 Call 0x1C17DEC

Method: System.String get_name()

Disassembly:
	0x03800120 CMP W8, 0x1
	0x03800124 B.LS 0x38002B4
	0x03800128 ADRP X22, 0x8FB000
	0x0380012C LDR X22, [X22 + 0xF08]

ISIL:
	001 Add X0, X0, 16
	002 Move W1, 256
	003 Move X2, X31
	004 Call StringHelpers.ReadStringFromBuffer, X0, X1
	005 Return X0

Method: System.Void set_name(System.String value)

Disassembly:
	0x03800130 STR X21, [X20 + 0x28]
	0x03800134 LDUR X8, [X19 + 0x4]
	0x03800138 ADD X1, X31, 0x28
	0x0380013C LDR X0, [X22]
	0x03800140 STR X8, [X31 + 0x28]
	0x03800144 BL 0x1C16E04
	0x03800148 MOV X21, X0
	0x0380014C CBZ X0, 0x3800164
	0x03800150 LDR X8, [X20]
	0x03800154 MOV X0, X21
	0x03800158 LDR X1, [X8 + 0x40]
	0x0380015C BL 0x1C16E00
	0x03800160 CBZ X0, 0x38002B8
	0x03800164 LDR W8, [X20 + 0x18]
	0x03800168 CMP W8, 0x2
	0x0380016C B.LS 0x38002B4
	0x03800170 STR X21, [X20 + 0x30]
	0x03800174 LDUR X8, [X19 + 0xC]
	0x03800178 LDR X0, [X22]
	0x0380017C ADD X1, X31, 0x20
	0x03800180 STR X8, [X31 + 0x20]
	0x03800184 BL 0x1C16E04
	0x03800188 MOV X21, X0
	0x0380018C CBZ X0, 0x38001A4
	0x03800190 LDR X8, [X20]
	0x03800194 MOV X0, X21
	0x03800198 LDR X1, [X8 + 0x40]
	0x0380019C BL 0x1C16E00
	0x038001A0 CBZ X0, 0x38002B8
	0x038001A4 LDR W8, [X20 + 0x18]
	0x038001A8 CMP W8, 0x3
	0x038001AC B.LS 0x38002B4
	0x038001B0 ADRP X8, 0x8F3000
	0x038001B4 LDR X8, [X8 + 0xA90]
	0x038001B8 STR X21, [X20 + 0x38]
	0x038001BC LDR V0, [X19 + 0x14]
	0x038001C0 ADD X1, X31, 0x1C
	0x038001C4 LDR X0, [X8]
	0x038001C8 STR S0, [X31 + 0x1C]
	0x038001CC BL 0x1C16E04
	0x038001D0 MOV X21, X0
	0x038001D4 CBZ X0, 0x38001EC
	0x038001D8 LDR X8, [X20]
	0x038001DC MOV X0, X21
	0x038001E0 LDR X1, [X8 + 0x40]
	0x038001E4 BL 0x1C16E00
	0x038001E8 CBZ X0, 0x38002B8
	0x038001EC LDR W8, [X20 + 0x18]
	0x038001F0 CMP W8, 0x4
	0x038001F4 B.LS 0x38002B4
	0x038001F8 STR X21, [X20 + 0x40]
	0x038001FC LDR X8, [X19 + 0x18]
	0x03800200 LDR X0, [X22]
	0x03800204 ADD X1, X31, 0x10
	0x03800208 STR X8, [X31 + 0x10]
	0x0380020C BL 0x1C16E04
	0x03800210 MOV X21, X0
	0x03800214 CBZ X0, 0x380022C
	0x03800218 LDR X8, [X20]
	0x0380021C MOV X0, X21
	0x03800220 LDR X1, [X8 + 0x40]
	0x03800224 BL 0x1C16E00
	0x03800228 CBZ X0, 0x38002B8
	0x0380022C LDR W8, [X20 + 0x18]
	0x03800230 CMP W8, 0x5
	0x03800234 B.LS 0x38002B4
	0x03800238 STR X21, [X20 + 0x48]
	0x0380023C ADRP X9, 0x8F3000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X1, 0
	005 JumpIfEqual {18}
	006 Move W8, [X1+16]
	007 NotImplemented "Instruction CMP not yet implemented."
	008 Move X20, [X31+16]
	009 Move X19, [X31+24]
	010 Add X8, X0, 16
	011 Move W2, 256
	012 Move X0, X1
	013 Move X1, X8
	014 Move X3, X31
	015 Move X30, [X31+32]
	016 Call StringHelpers.WriteStringToBuffer, X0, X1, X2
	017 Return 
	018 Move X0, 0x8F9000
	019 Move X0, [X0+1320]
	020 Call 0x1C17D08
	021 Call 0x1C17F10
	022 Move X19, X0
	023 Move X0, 0x8FE000
	024 Move X0, [X0+3784]
	025 Call 0x1C17D08
	026 Move X1, X0
	027 Move X0, X19
	028 Move X2, X31
	029 Call ArgumentNullException..ctor, X0, X1
	030 Move X0, 0x94A000
	031 Move X0, [X0+4064]
	032 Call 0x1C17D08
	033 Move X1, X0
	034 Move X0, X19
	035 Call 0x1C17DEC
	036 Move W8, 256
	037 Move [X31+12], W8
	038 Move X0, 0x8F4000
	039 Move X0, [X0+1880]
	040 Move X19, X1
	041 Call 0x1C17D08
	042 Add X1, X31, 12
	043 Call 0x1C17E04
	044 Move X20, X0
	045 Move X0, 0x94A000
	046 Move X0, [X0+4072]
	047 Call 0x1C17D08
	048 Move X1, X19
	049 Move X2, X20
	050 Move X3, X31
	051 Call String.Format, X0, X1, X2
	052 Move X19, X0
	053 Move X0, 0x8FC000
	054 Move X0, [X0+1400]
	055 Call 0x1C17D08
	056 Call 0x1C17F10
	057 Move X20, X0
	058 Move X0, 0x8FE000
	059 Move X0, [X0+3784]
	060 Call 0x1C17D08
	061 Move X2, X0
	062 Move X0, X20
	063 Move X1, X19
	064 Move X3, X31
	065 Call ArgumentException..ctor, X0, X1, X2
	066 Move X0, 0x94A000
	067 Move X0, [X0+4064]
	068 Call 0x1C17D08
	069 Move X1, X0
	070 Move X0, X20
	071 Call 0x1C17DEC

Method: UnityEngine.InputSystem.Utilities.FourCC get_typeStatic()

Disassembly:
	0x03800240 LDRB W8, [X19 + 0x23]
	0x03800244 LDR X9, [X9 + 0xB58]
	0x03800248 ADD X1, X31, 0xC
	0x0380024C UBFM W8, W8, 0x3, 0x3
	0x03800250 LDR X0, [X9]
	0x03800254 STRB W8, [X31 + 0xC]
	0x03800258 BL 0x1C16E04
	0x0380025C MOV X19, X0
	0x03800260 CBZ X0, 0x3800278
	0x03800264 LDR X8, [X20]
	0x03800268 MOV X0, X19
	0x0380026C LDR X1, [X8 + 0x40]

ISIL:
	001 Move [X31-16], X30
	002 Add X0, X31, 8
	003 Move W1, 80
	004 Move W2, 65
	005 Move W3, 67
	006 Move W4, 67
	007 Move X5, X31
	008 Move [X31+8], W31
	009 Call FourCC..ctor, X0, X1, X2, X3, X4
	010 Move W0, [X31+8]
	011 Move X30, [X31+16]
	012 Return X0

Method: UnityEngine.InputSystem.LowLevel.QueryPairedUserAccountCommand Create()

Disassembly:
	0x03800270 BL 0x1C16E00
	0x03800274 CBZ X0, 0x38002B8
	0x03800278 LDR W8, [X20 + 0x18]
	0x0380027C CMP W8, 0x6
	0x03800280 B.LS 0x38002B4
	0x03800284 ADRP X8, 0x94A000
	0x03800288 LDR X8, [X8 + 0x8]
	0x0380028C STR X19, [X20 + 0x50]
	0x03800290 MOV X1, X20
	0x03800294 MOV X2, X31
	0x03800298 LDR X0, [X8]
	0x0380029C BL 0x3227C5C
	0x038002A0 LDP X20, X19, [X31 + 0x50]
	0x038002A4 LDP X22, X21, [X31 + 0x40]
	0x038002A8 LDR X30, [X31 + 0x30]
	0x038002AC ADD X31, X31, 0x60
	0x038002B0 RET
	0x038002B4 BL 0x1C16F28
	0x038002B8 BL 0x1C16F44
	0x038002BC MOV X1, X31
	0x038002C0 BL 0x1C16DEC
	0x038002C4 BL 0x1C16F20

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+16], X30
	003 Move [X31+24], X19
	004 Add X0, X31, 8
	005 Move W1, 80
	006 Move W2, 65
	007 Move W3, 67
	008 Move W4, 67
	009 Move X5, X31
	010 Move X19, X8
	011 Move [X31+8], W31
	012 Call FourCC..ctor, X0, X1, X2, X3, X4
	013 Move W8, [X31+8]
	014 Move X9, 1040
	015 Move W2, 1032
	016 Move W1, W31
	017 Or X8, X8, X9
	018 Move [X19+8], X8
	019 Move X0, X19
	020 Call 0x3EB2B10
	021 Move X30, [X31+16]
	022 Move X19, [X31+24]
	023 Add X31, X31, 32
	024 Return X0

